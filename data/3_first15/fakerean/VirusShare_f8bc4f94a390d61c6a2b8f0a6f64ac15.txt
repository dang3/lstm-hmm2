sbb
add
mov
pushf
mov
add
cli
aam
cmp
rcr
mov
movsl
sub
pop
sbb
repz
or
mov
or
enter
fwait
andl
fisttpll
xor
iret
fdivl
or
mov
pop
je
sub
xor
xor
push
fstps
jge
fisttpll
mov
fnsave
incl
sub
inc
outsl
loopne
jns
cmp
lods
dec
and
pushf
pop
aas
test
out
iret
out
mov
fidivs
hlt
stos
xchg
data16
ucomiss
popa
js
andb
jge
xor
jmp
or
pop
bound
jne
xorb
repnz
pushf
leave
dec
bound
fidivrl
gs
push
daa
idivl
cmp
push
dec
std
and
cmp
test
addl
cmp
mov
bound
aad
loop
mov
aad
jg
xchg
dec
pop
jns
adc
pop
scas
rcrl
inc
xor
outsl
rorl
jp
ss
jae
adcb
dec
nop
cmpsl
and
and
aaa
jecxz
out
mov
sti
loopne
cmpsb
dec
adc
aas
cmp
sub
or
xor
jne
outsb
les
in
std
mov
loope
sbb
xchg
mov
test
dec
loopne
dec
outsl
push
int
jl
adc
adc
in
and
jno
mov
push
lret
movsl
fldt
cltd
mov
mov
xlat
jl
rclb
or
pop
jns
push
push
push
jns
sbb
fiadds
and
or
xchg
ds
cmpsl
pop
jg
flds
add
cmpsl
ficomps
sbb
subb
pop
shr
jge
add
xrelease
lock
pop
mov
or
xor
rcrb
push
ficompl
or
mov
sbb
int3
xor
popf
iret
mov
dec
mov
out
xor
hlt
imul
and
and
mov
cmpsb
cli
rcrl
pop
sub
out
jne
fildll
sbb
cld
shll
aam
shrb
and
mov
inc
scas
dec
das
iret
fcoms
sbb
mov
mov
mov
clc
aaa
sub
mov
inc
notb
jne
xor
ret
xchg
and
jecxz
cli
mov
lock
and
loop
jg
rep
pop
pusha
adc
sub
cltd
xchg
mov
dec
data16
xchg
popa
jbe
fs
cltd
das
test
scas
rcl
adc
jl
fisttps
call
js
test
dec
loop
je
orb
dec
push
scas
outsl
cwtl
add
in
mov
pop
mov
inc
lret
pop
lock
and
aam
stos
mov
sbb
sub
int
mov
push
hlt
mov
daa
adc
shlb
xor
or
dec
test
push
popf
scas
in
add
sti
mov
cmp
hlt
jge
lahf
sub
std
cmpsb
inc
fsubp
sub
mov
mov
shlb
add
jbe
fcoms
or
in
push
cmc
adc
test
leave
dec
pop
stc
jl
or
ds
xor
loop
cmp
xor
push
daa
push
lret
enter
sbb
or
and
pop
xor
mov
shrb
inc
mov
jl
lcall
stos
cwtl
out
sbb
mov
sbb
pop
addb
pop
icebp
dec
cmpsl
decb
add
sahf
pop
push
cmc
loopne
add
sbb
in
test
in
push
cmp
mov
rorb
mov
xchg
mov
in
icebp
cmc
push
add
jmp
fildl
jo
ret
push
addr16
movsl
jo
pop
lret
jne
stc
test
hlt
imul
test
mov
xchg
sbb
jns
stos
push
insl
mov
pusha
std
jecxz
fs
xchg
inc
nop
pop
mov
xchg
adc
loopne
add
or
or
or
into
repz
mov
fxch
test
lods
scas
loopne
mov
ret
dec
call
jg
mov
adc
gs
les
ficoml
shl
int
mov
movsl
fcoml
xlat
mov
add
jo
mov
xor
jae
mov
scas
adc
adc
mov
cltd
imul
inc
fs
test
fisubl
push
pop
loopne
mov
in
inc
xchg
out
push
dec
adc
push
test
imul
or
fnsave
test
enter
call
fidivs
sar
sub
sbb
daa
lds
or
mov
icebp
cmp
ljmp
xchg
pop
push
cmp
mov
test
push
mov
sar
push
add
aam
out
ljmp
jge
call
loopne
dec
dec
pop
fwait
pop
adc
xchg
pop
pop
xor
push
pop
push
pop
ds
cli
inc
pop
mov
cltd
adc
push
lock
and
add
enter
push
fnstsw
or
push
arpl
std
mov
cld
jp
pop
or
or
jae
lahf
insl
xchg
xor
out
fsts
outsb
cmp
jbe
sbb
jecxz
mov
sub
fstp
xchg
xor
or
dec
xor
lcall
or
dec
xchg
xor
lret
push
push
loope
mov
sbb
pop
test
cmp
lods
lcall
xor
sub
scas
insb
out
popa
push
sub
mov
or
daa
dec
or
jo
jp
sti
add
sti
adc
out
jnp
icebp
ret
or
cmp
push
je
gs
cmpsl
adc
cwtl
fcompl
mov
iret
inc
xor
sbb
inc
or
mov
fwait
cmp
and
sub
loope
aas
sbb
cmpsb
dec
sub
dec
xchg
cli
scas
rcr
pop
fwait
inc
out
les
loop
iret
cltd
aas
xchg
arpl
rol
or
pop
test
xor
fs
test
xor
ss
or
outsl
andb
lock
pop
fnstenv
or
add
pop
push
push
cmp
mov
clc
stos
cmp
mov
mov
mov
jge
cmp
or
xchg
inc
xchg
mov
jne
popa
test
jmp
lods
xor
push
div
sti
out
repnz
mov
stos
int3
push
out
daa
arpl
jge
jge
xchg
notl
popa
jp
cmc
movsb
fwait
lds
push
imul
xchg
mov
scas
lcall
add
lods
adc
sahf
or
sub
add
sbbl
xchg
clc
xor
push
in
cmp
lods
pop
dec
dec
std
dec
ror
std
push
rorl
fisubrl
js
loop
push
cmp
sti
addr16
divl
pop
shl
cmp
repz
pop
push
pop
mov
js
pop
jmp
cmp
sbb
pop
ret
dec
lods
fstpt
and
loope
fisttpl
lahf
aas
xchg
in
out
rorb
pop
sbb
mov
add
mov
popf
pop
out
roll
pop
scas
and
adc
pop
or
jg
decb
add
adc
int
adc
mov
add
out
daa
add
xchg
mov
mov
cld
pop
mov
xchg
std
inc
xchg
stos
mov
or
or
xchg
adc
loope
pop
and
sub
jl
add
inc
xor
and
popf
out
adc
cmp
pop
sbb
clc
or
scas
adc
mov
in
outsl
cli
pop
jle
mov
mov
sbb
pop
ds
fdivl
ficomps
jl
push
ja
jmp
aad
bound
js
add
mov
mov
fcmovb
sbb
push
sbb
test
cmpsb
pop
sub
or
fwait
jnp
xor
inc
mov
enter
pop
lods
out
ret
push
imul
sahf
dec
sbb
sbb
sub
dec
mov
cmp
icebp
jbe
movsb
jo
push
mov
iret
sbb
jge
mov
xchg
dec
inc
ficoms
ja
sbb
outsb
int
int3
in
sarb
mov
hlt
adc
cmpsb
dec
fstps
pop
jmp
sub
test
int3
andb
pop
adc
in
cltd
mov
scas
mov
cmp
xchg
cmpsl
lock
pop
jle
rorb
push
sarb
ficomps
pop
pusha
jg
dec
adc
push
jecxz
pop
push
test
inc
in
push
dec
or
pop
mov
pop
icebp
lahf
sbb
js
pop
loop
dec
inc
sub
movsb
xor
mov
push
aam
and
push
push
inc
filds
sub
cmc
dec
stos
push
out
test
mov
fildll
fildll
ja
imul
lret
mov
aas
bound
lds
lods
and
sub
pop
pop
sbb
mov
sbbb
or
cmc
jbe
fwait
push
pop
xchg
pushf
out
xor
sahf
pop
aad
popf
fisttpl
rcr
fsubr
outsl
inc
add
aas
rolb
mov
xorb
int3
cmp
sub
sub
jge
sti
in
push
or
icebp
sbb
es
jp
mov
mov
push
cli
or
adc
mov
loopne
repz
jno
test
fbstp
into
push
jl
jle
adcb
out
jge
push
imul
sub
decl
mov
std
cmp
and
jge
test
fs
subl
dec
pop
sbb
mov
insl
cmp
in
push
cs
mov
lds
push
outsl
or
push
and
and
loop
mov
outsl
xor
xlat
and
out
pop
inc
mov
push
std
icebp
dec
mov
xor
mov
xchg
mov
nop
pop
pop
mov
sub
dec
xchg
shll
data16
repz
bound
lea
outsb
cmpsw
cwtl
sub
int3
lret
cmp
shl
sbb
mov
sti
loopne
jnp
outsb
out
xor
sub
dec
and
xchg
push
pop
dec
mov
jge
je
push
ret
fidivs
adc
imul
in
cltd
iret
dec
jg
add
negl
enter
jne
aaa
and
mov
or
cmp
jb
mov
jl
and
sti
in
push
popa
loop
shr
arpl
push
insb
adc
push
cltd
cmp
adcl
mov
fdivr
mov
pushf
inc
xor
lds
movsl
add
inc
jo
inc
enterw
je
repz
data16
xchg
or
ljmp
movsl
addr16
xchg
xor
mov
rorl
xchg
inc
mov
in
insb
sbb
ja
inc
and
out
addr16
jne
sahf
lods
idivl
pop
scas
xor
call
fldenv
cli
rol
mov
mov
loopne
mov
cmpsl
aas
push
push
pop
insb
xchg
loop
jb
mov
mov
xchg
xchg
aad
xor
stos
mov
xchg
leave
jbe
mov
cmc
lret
push
dec
mov
mov
pushf
lock
mov
pop
push
clc
pushf
subl
inc
mov
mov
lcall
xchg
test
aad
sub
sbb
fwait
push
sbb
jle
call
hlt
sarb
sbb
scas
adc
mov
les
lret
mov
scas
xchg
or
jno
cmc
addr16
dec
mov
and
lock
sbb
pop
aam
lcall
lock
aaa
and
stc
push
push
jae
in
cmp
add
jl
dec
sub
cmp
mov
add
aam
mov
and
fnstsw
mov
and
pop
icebp
je
stos
pop
jnp
push
loop
aam
leave
int
fnstcw
shlb
das
popa
and
fnstsw
aaa
gs
sbb
sub
stos
xchg
mov
fcoms
push
mov
outsl
inc
daa
neg
cmp
push
mov
pop
mov
dec
adc
cmp
mov
in
jb
stc
popf
sbb
xor
out
inc
int
mov
mov
jl
idivb
sub
jmp
movsl
div
dec
mov
pushw
divl
sbb
sub
fldenv
pop
stc
xorl
dec
test
xchg
jbe
push
shrl
fnstsw
std
add
sbb
jne
mov
scas
xchg
popa
xchg
adc
outsl
mov
adc
dec
in
es
dec
jecxz
cmp
lods
fwait
shl
mov
mov
aaa
pop
cmp
jecxz
jb
and
daa
dec
sbb
xor
pop
jae
xlat
aad
jmp
js
sbb
in
adc
popf
add
cs
inc
mov
add
std
outsb
daa
dec
sub
inc
pop
mov
pop
lods
stos
and
repnz
enter
mov
lret
jno
mov
outsl
movsl
shr
js
add
mov
sub
roll
mov
popf
cmpsb
push
mov
jmp
adc
jg
adc
dec
aas
or
add
pop
jmp
iret
and
fcomp
sub
pop
pop
int3
daa
xchg
fsubr
sbb
mov
inc
jl
test
push
push
insl
add
nop
push
aad
lcall
mov
scas
sbb
fnsave
mov
and
pop
add
insb
inc
adc
cmp
xchg
loope
xor
ret
pushf
hlt
fwait
ds
adc
push
les
cmc
mov
cmp
daa
push
out
int
out
leave
push
pop
dec
aad
mov
mov
cmp
les
push
sbb
and
hlt
sub
int3
dec
ror
mov
dec
lcall
test
cwtl
stc
push
leave
lcall
aas
jp
jbe
or
testl
sarb
loope
mov
cmp
shlb
xlat
jecxz
aas
xor
jge
cmpsl
sub
call
outsb
dec
lret
sbb
aam
mov
fsubs
cli
inc
xor
sbb
jge
nop
fisttpl
fcomip
inc
aas
lcall
inc
loopew
sub
test
sbb
sbb
mov
dec
test
nop
pop
xchg
mov
xlat
xor
imul
xchg
pop
popaw
aam
add
mov
jge
testl
orb
test
scas
jne
sub
loopne
and
or
xchg
pop
mov
sub
sbb
adc
test
cmpsl
and
cwtl
lcall
loopne
shlb
inc
sub
sbb
fwait
jmp
push
adc
popa
jecxz
and
add
sti
mov
out
push
pusha
lea
xchg
jp
and
mov
popa
inc
add
sti
cmc
jne
mov
inc
mov
dec
push
insb
mov
and
insb
roll
aam
adc
sbb
imul
push
nop
sbb
jmp
fmull
push
or
lcall
sub
aaa
mov
jle
mov
int
cs
pop
pop
xchg
lods
popa
adc
loopne
or
movsb
out
repnz
decl
xchg
das
adc
out
lods
inc
xor
mov
jns
xchg
or
lock
add
cwtl
xor
mov
sub
pop
dec
mov
or
cmpsb
addr16
loop
mov
sub
xchg
mov
inc
jle
adc
ret
dec
test
aam
rcll
mov
pop
inc
sbb
aam
mov
cs
inc
lret
fstp
push
aad
sbb
ljmp
mov
mul
sbb
push
jmp
mov
leave
cmp
addl
adc
mov
sbb
fildl
fistpl
popf
mov
icebp
movsl
inc
fdiv
rcl
pop
loope
andl
in
jns
in
leave
rcrl
into
imul
dec
add
pushf
scas
dec
mov
sbb
mov
ficompl
cmp
jmp
popa
pop
adc
jno
enter
sbb
cmp
es
adc
cmp
mov
pop
test
lret
xor
xor
insb
out
dec
mov
mov
jle
push
test
push
mov
adc
pop
cmpb
push
jge
inc
push
dec
push
xor
mov
inc
xor
push
or
scas
test
in
test
mov
adc
cmpsl
jmp
adc
xchg
adc
mov
cltd
imull
xor
xlat
jp
dec
in
ljmp
test
out
movb
lcall
mov
jbe
push
jl
in
mov
hlt
mov
dec
xchg
jp
rol
pusha
repnz
test
rcrl
or
insb
adc
dec
xchg
inc
cmp
pusha
xchg
pop
and
pop
dec
push
outsl
mov
add
fildl
cmp
mov
or
fistpl
lahf
adc
xchg
mov
sbb
sbb
loopne
test
push
jae
cmp
mov
xchg
jnp
bound
test
cs
movsb
fadds
sahf
dec
les
xchg
pop
das
aas
testl
cmp
data16
enter
loop
lret
dec
add
jo
and
leave
cmp
js
xchg
inc
mov
push
adc
add
sbb
or
sub
xchg
xor
cli
aam
mov
lcall
fstp
or
adc
sbb
xor
cltd
cmp
test
sub
lcall
imul
mov
jno
fldt
inc
fimuls
mov
xor
adc
ds
inc
push
addr16
fsin
jecxz
fstl
jbe
test
rclb
adcb
or
pop
test
mov
push
pop
mov
stc
inc
gs
mov
insl
push
pop
push
insb
cld
lock
shlb
in
mov
dec
test
aam
aad
repz
les
mov
cwtl
cltd
push
sub
mov
mov
add
mov
or
scas
xor
movsl
ret
mov
std
jns
push
or
jb
push
push
orb
add
mov
dec
cmp
pop
gs
fabs
cli
stos
lret
xchg
jns
pop
fists
ret
imul
jle
imul
ficoms
lock
add
pusha
daa
mov
lea
test
jo
dec
add
jmp
cmp
out
insb
call
cli
add
xor
sub
jmp
loope
ret
xchg
cld
jle
mov
loope
add
mov
or
imul
mov
ret
ljmp
pop
sar
mov
pop
jl
call
aad
push
inc
test
aas
fistpl
push
push
mov
icebp
dec
test
adc
or
inc
add
cmc
dec
and
sub
hlt
jae
test
or
iret
xchg
fmuls
and
out
dec
cmp
jne
andb
pop
inc
jp
or
and
jl
aam
pushf
hlt
mov
ss
lea
imulb
rorl
loope
xchg
mov
push
dec
out
jg
in
xchg
idivb
xlat
adc
loope
push
jmp
lcall
xor
aaa
push
inc
push
lods
lods
data16
cmpb
push
dec
push
cmp
ljmp
and
aas
popa
int
shl
sub
call
fwait
mov
cmp
adc
inc
push
hlt
incb
out
lcall
js
mov
cmp
out
push
fistl
push
ljmp
iret
adc
mov
xchg
in
ss
pop
push
dec
imulb
mov
nop
out
arpl
and
jbe
mov
jo
and
xchg
lods
pop
lret
test
fisubs
aam
cltd
ja
or
dec
or
negl
in
sbb
xor
clc
and
mov
adc
fwait
push
adc
outsl
jle
mov
inc
xlat
mov
or
sub
sbb
and
out
loope
mov
out
scas
add
pop
cmpsl
mov
add
std
pop
and
fwait
out
mov
in
in
mov
in
jne
cmp
fwait
or
in
mov
in
mov
insb
sbb
rclb
loop
push
mov
push
adc
stc
je
pushf
inc
movsb
pop
int
pop
lods
xor
hlt
and
cs
sub
add
inc
fsubs
test
iret
xor
inc
aas
mov
das
pop
mov
cmpsl
lea
movsl
mov
repnz
jp
xor
jns
test
push
testb
loopne
fwait
movsb
mov
mov
das
loope
mov
and
jb
sbb
jl
clc
lds
subl
stc
xor
jo
push
call
add
inc
jo
mov
push
mov
jg
sub
ja
lfs
xlat
mov
fwait
fwait
stos
pop
call
xor
adcl
mov
mov
sub
sub
mov
mov
fimull
adcb
fnsave
ret
dec
mov
les
scas
rcll
or
adc
cmp
jle
jnp
sbb
xor
mov
stc
push
leave
cld
jb
movsb
mov
ret
inc
sub
pop
cmpsl
push
incb
sbb
out
in
shr
sub
leave
inc
jecxz
aas
xchg
xor
xor
lds
adc
sbb
out
scas
add
roll
repz
or
adc
iret
enter
dec
mov
pop
jle
testb
push
mov
xchg
xchg
lods
jle
xor
mov
mov
mov
push
mov
push
das
inc
out
and
jp
insb
repnz
aam
inc
mov
cmpsb
test
addr16
xchg
ss
mov
int3
push
subb
or
xbegin
and
and
aad
and
jno
mov
lds
data16
cmp
inc
cmp
xchg
push
dec
mov
inc
add
mov
data16
cmp
call
loopne
aam
mov
std
inc
fstpl
xchg
xor
lods
lret
inc
bound
negb
pop
mov
and
or
fnstcw
mov
aaa
xlat
data16
out
xchg
test
and
jnp
je
lds
or
mov
cmp
mov
fs
testl
or
clc
lcall
inc
xor
push
repz
xchg
jb
mov
lret
cmp
adc
adc
mov
mov
movsl
pop
sti
in
aaa
xor
sbb
pop
ret
arpl
int3
cmp
mov
xor
sbb
xor
pop
jle
test
pop
icebp
add
sub
mov
fmul
inc
ds
in
xor
ret
mov
xchg
fs
cmpsl
or
pop
repz
adc
divl
rorb
mov
mov
push
push
mov
add
es
xchg
pop
mov
pop
out
lds
lcall
insb
xchg
jbe
imul
add
mov
xlat
add
cmp
dec
ljmp
lahf
xor
add
into
mov
cmp
es
shlb
jp
add
inc
or
ficomps
testb
sahf
imul
imul
inc
push
ret
mov
mov
sbb
loope
lcall
mov
sahf
push
sbb
sub
xor
xor
fwait
dec
int3
inc
fidivs
jns
and
lods
xchg
dec
mov
adc
cmpsb
outsl
out
test
mov
mov
pop
dec
out
rolb
jl
das
mov
pusha
leave
out
dec
stos
xchg
fs
sbb
jno
popa
mulb
xor
dec
aad
shr
lds
cmpsl
add
cld
adc
fdivr
icebp
or
ss
aam
shlb
adc
int3
mov
pop
cmp
les
sub
and
jp
out
sbb
das
dec
mov
insl
rclb
and
push
sub
push
sbb
cmp
push
adc
pop
push
xchg
call
cmp
bound
mov
test
pushf
xchg
bound
lods
xor
std
pop
xlat
test
fstl
outsl
mov
fldt
and
sbb
icebp
xchg
pop
popf
mov
outsb
movsb
imul
mov
aam
pop
push
push
cmp
pushf
int
pusha
mov
fcoml
gs
jmp
cmp
int
sahf
leave
cmpl
jne
in
roll
or
and
sbbl
mov
cmc
dec
ds
xchg
bound
jbe
and
xor
and
jg
push
add
rcrl
xchg
sahf
test
cli
sarb
sbb
ss
or
int
iret
cs
jno
push
pop
aas
popf
std
insl
mov
jmp
lcall
gs
js
jle
mov
mov
lods
cmp
pop
jecxz
or
mov
jnp
add
adc
sbb
cmp
lods
pop
mov
or
call
out
sbb
mov
test
popf
pop
dec
xchg
push
imul
adc
lret
and
or
sbb
movsb
js
pop
into
sbb
les
push
clc
xor
xor
inc
gs
data16
aad
jb
cmpsb
pop
xchg
rolb
jl
aaa
mov
jns
push
mov
fsubl
stos
adcb
fwait
int
mov
lea
and
sbb
cmpsl
mov
jo
or
mov
ss
pop
mov
mov
push
pop
sbb
add
inc
sbb
push
mov
aam
fwait
jb
rclb
mov
lahf
stos
enter
inc
das
imul
push
or
xor
sbb
xor
sub
xor
push
push
iret
ret
es
or
inc
push
aaa
in
jge
sbb
in
lock
push
mov
push
pop
cmpl
sub
aad
in
stos
push
xchg
mov
xchg
mov
fbld
sti
xchg
xchg
dec
adc
jmp
insl
aam
sbb
jne
dec
test
add
sub
dec
ror
sbbb
mov
mov
fnsave
icebp
movsb
stc
dec
fwait
xor
jecxz
mov
imul
xchg
aas
or
mov
lret
xor
and
es
bound
cmc
and
inc
add
sbb
mov
jp
inc
nop
jne
sub
mov
cmp
fistpl
scas
dec
std
lea
sub
jp
pop
fidivrl
jae,pn
movsl
movb
mov
mov
pop
xor
nop
lcall
es
push
mov
repz
repz
cld
cmc
jge
push
inc
cmc
mov
mov
push
sbb
and
or
fdivr
inc
ror
push
xorb
push
and
add
add
xor
lcall
dec
aaa
mov
ret
cs
pop
gs
cltd
hlt
jecxz
cltd
fisubrs
jg
cs
loop
and
iret
jge
fisubrs
pop
jle
mov
jns
lock
cmpsl
xchg
scas
enter
inc
push
lret
outsb
jle
lahf
push
jmp
jno
imul
cmp
add
test
xchg
mov
mov
jge
jle
out
mov
cmpsl
imul
addb
jge
mov
sub
dec
in
or
sbb
push
push
jmp
sub
sbb
xchg
push
xor
repnz
push
mov
pusha
adc
stc
mov
icebp
test
lahf
addb
pop
and
loop
fstpl
push
fisubl
jp
lea
cs
es
add
iret
mov
sbb
mov
xor
sub
or
xchg
cmp
cltd
cmp
push
adcl
ret
adc
sbb
push
das
es
push
fimuls
cmp
notb
out
inc
repnz
ja
addl
scas
jg
loope
jecxz
stos
daa
add
push
fnstsw
iret
xlat
push
jp
lcall
orl
ficoml
int
arpl
mov
mov
out
xchg
pop
jbe
xor
mov
int3
fiaddl
cmc
adc
add
fsubp
lcall
jg
mov
loope
insl
loop
jne
lret
sub
outsb
dec
test
ret
aaa
jge
jo
jge
sarb
xchg
jl
dec
cmp
inc
jge
xor
sahf
pop
in
es
out
mov
jno
sbbl
out
inc
mov
jbe
int3
out
pop
and
mov
fdivp
cmp
add
scas
xor
add
hlt
test
pushf
or
adc
in
fstps
mov
ret
push
mov
mov
mov
inc
popf
fldt
xchg
gs
jno
sbb
lcall
mov
mov
popa
mov
addr16
push
stc
es
add
es
jae
pop
jo
mov
pop
cmp
enter
int
or
movsb
mov
mov
mov
push
jns
lods
orb
pop
sbb
fnclex
out
jb
popf
xor
pop
mov
and
push
mov
cmp
iret
cmc
movsl
dec
daa
push
mov
sbb
scas
mov
dec
fs
leave
scas
gs
lret
rorl
mov
pop
lods
push
je,pt
insl
jge
cltd
sbb
sti
pushf
xchg
cmpsb
cli
push
inc
roll
and
popa
in
sbb
lcall
mov
popw
js
pop
inc
and
mov
jecxz
and
pop
cmpxchg
movsl
mov
movsb
insl
imul
sbb
fdivs
idivb
xchg
mov
cmp
aas
loop
dec
out
push
lds
mov
cmp
cmp
test
xchg
test
cmc
mov
xor
sub
inc
adcl
push
loop
fucomip
je
out
stos
pop
mov
fdivs
mov
push
inc
dec
loope
icebp
shll
push
es
pop
fisttpll
movsb
add
or
mov
cwtl
rorb
stos
cmc
jl
shll
daa
imul
aam
ds
out
xchg
mov
push
lods
fisttpl
sub
push
cmp
cmpsl
sub
cmp
loope
cmp
js
xor
testl
push
dec
jl
xlat
push
sub
inc
mov
jecxz
push
dec
ja
and
shll
inc
clc
push
cld
lret
shll
fnsave
xchg
andl
ss
outsb
add
cld
int3
xlat
bound
leave
outsb
aad
lock
mov
add
andb
sub
bndstx
pop
std
push
xchg
pushf
lods
pop
jp
clc
lock
dec
sub
dec
das
push
mov
jnp
sbb
stos
shll
cmp
mov
fbstp
fsubs
sti
aas
pushf
iret
out
aaa
xchg
leave
mov
xor
ficomps
mov
push
pop
mov
outsl
cmc
and
xchg
push
je
or
mov
enter
mov
pop
push
mov
lock
push
loope
sti
adc
add
jb
aad
adc
inc
xchg
inc
arpl
stos
mov
mov
std
mov
cmp
imulb
pop
jne
mov
rolb
mov
shlb
dec
mov
test
or
call
aas
in
pop
loope
imul
pop
dec
dec
lret
cwtl
jecxz
inc
notb
or
les
jmp
mov
faddl
icebp
add
pushf
or
nop
aas
dec
ret
out
nop
mov
mov
das
pushf
push
xlat
test
dec
in
jae
out
dec
push
add
mov
xchg
xor
cmpsl
imul
jb
jno
aaa
fiadds
and
mov
pop
pop
ficompl
or
movsb
jae
inc
xchg
sbb
add
insl
dec
rorl
rolb
ja
sub
jg
fcmovbe
push
pop
cmp
or
sahf
das
sbb
or
ficompl
lods
js
nop
out
pop
and
adc
inc
cwtl
fwait
sbb
test
loop
arpl
sbb
xor
shlb
dec
mov
lods
sbb
pop
aas
push
pop
sub
add
lahf
fmuls
test
shrb
ret
or
ret
rorl
cmpsb
and
sar
out
cmp
lret
or
enter
out
aaa
popf
ret
scas
mov
jp
mov
dec
sbb
cmp
hlt
mov
out
dec
add
mov
push
ds
or
nop
repnz
inc
or
xchg
sbb
in
shlb
lods
cwtl
lret
xchg
jl
pop
or
xor
dec
cmp
push
or
dec
xchg
xchg
mov
dec
nop
adc
addl
fnstsw
sbb
roll
add
xchg
sub
outsl
gs
aam
xor
fimull
lret
mov
xlat
pop
and
push
loopne
mov
cmp
jb
inc
mov
clc
lcall
jo
inc
lea
test
movsl
inc
jmp
sbb
das
push
xchg
pop
rcrb
jl
clc
jecxz
jns
in
stc
xlat
cs
adcb
push
mov
jl
dec
inc
ret
stc
sub
cmp
sahf
dec
and
enter
mov
insl
xchg
mov
stos
adc
data16
fdivrl
xchg
jo
mov
push
repz
lds
cmp
stos
repz
jo
enter
xchg
xor
sub
sahf
sahf
pop
sub
xor
mov
sbb
sub
and
sbb
enter
gs
daa
pop
enter
cmp
jp
sbb
loope
mov
pop
cmc
je
sbb
repnz
inc
xchg
ds
cmp
push
outsb
popa
push
adcl
xor
in
in
pushf
cmp
adc
xchg
dec
fdivl
fnstcw
mov
jnp
push
fstps
pop
xchg
ret
into
stos
enter
mov
lds
pop
add
jne
je
ret
pop
pop
mov
int
cmpsl
test
sbb
mov
push
popf
aas
xor
fmull
mov
adc
data16
test
hlt
mov
mov
test
stc
dec
sbb
or
lahf
movl
push
rclb
push
push
movsl
cli
inc
push
lods
push
movsl
sbb
add
gs
mov
in
scas
mov
daa
imul
push
and
cmp
xchg
cmp
fdivrl
adc
and
xchg
mov
repnz
pop
jo
cmp
test
aad
sub
xor
fwait
push
cmp
gs
pop
cli
mov
cmpsl
jle
stos
push
or
mov
imul
mov
repnz
mov
movsb
sahf
sub
inc
iret
xchg
imul
cltd
stc
mov
cmc
add
push
lret
mov
lods
ret
in
in
dec
cmpsl
jl
movsl
and
test
int3
jo
leave
jp
ror
outsb
iret
les
jge
inc
push
movsl
jnp
and
mov
jecxz
add
lods
cs
push
subl
inc
xchg
testb
std
inc
pop
jecxz
jg
mov
orl
fucomp
decb
dec
add
and
rcl
inc
adc
sbb
mov
sub
inc
je
hlt
scas
xchg
lea
in
jo
xchg
pop
fmuls
outsb
aam
mov
fcmovb
mov
je,pn
enter
std
dec
pushf
jo
fcomps
pop
jno
cmpsl
push
mov
sbb
push
and
and
xor
lods
mov
fs
pop
iret
push
and
sbb
sub
movsb
fimull
ds
inc
inc
lret
paddsb
mov
lods
jbe
dec
and
and
pop
sbbb
jp
mov
rclb
mov
jg
outsb
cmc
sbb
jne
xor
repnz
xchg
sub
mov
ret
sti
int
ja
call
in
pop
push
mov
jno
ficompl
jecxz
mov
adc
jo
jns
test
xor
push
push
mov
rol
stos
cltd
aaa
mov
fst
mov
outsl
mov
xor
cli
cmp
loop
jl
pushf
clc
aad
sub
aaa
dec
cld
sub
sub
clc
pop
inc
fs
cmp
jp
shll
xchg
scas
dec
inc
pop
or
nop
mov
dec
sub
fnstcw
jmp
std
sbb
xor
push
cmp
rcl
lods
push
adc
cmc
daa
inc
ds
movsb
mov
push
ficoms
sbb
xchg
jae
ljmp
push
cmp
xchg
jecxz
lahf
and
mov
adc
or
mov
lods
cli
movsl
data16
into
mov
jae
push
ds
and
enter
ret
pop
lock
sarl
repz
int3
cli
scas
jae
xchg
cmpsb
pop
lea
lcall
add
lret
outsb
push
sbb
lcall
push
add
xor
push
mov
dec
xor
fidivl
lods
mov
push
les
int3
out
cmp
and
loopne
mov
mov
xchg
fs
aad
mov
mov
pusha
or
mov
xchg
movups
add
cmp
bound
mov
jns
inc
mov
push
imul
sub
mov
gs
inc
push
fsts
mov
inc
sbb
cmpsl
insl
shll
add
movsl
addb
push
bound
mov
loopne
and
scas
mov
push
dec
popa
cmp
xor
mov
push
sti
jmp
inc
ljmp
push
loope
inc
mov
hlt
dec
mov
inc
daa
push
and
adc
rcll
dec
cmc
fldl
xchg
ret
andl
int3
xor
inc
push
inc
jno
lret
imul
jmp
pop
adc
aaa
inc
ss
jle
add
jne
adc
ret
les
inc
mov
xchg
and
and
pause
adc
dec
insb
data16
addr16
jns
xor
or
mov
in
xchg
shll
loope
movl
addb
dec
jl
cmpsl
std
sub
ret
imul
push
movsb
cmp
adc
mov
mov
ss
dec
adc
inc
inc
pop
jge
es
pop
data16
sarb
adc
ja
pop
in
xchg
es
out
scas
les
cmpsl
mov
push
rcrb
js
gs
lcall
jno
fwait
add
insb
cmp
sub
and
fldl
sar
je
adc
daa
xor
fsub
and
mov
inc
mov
and
sbb
shlb
add
pop
icebp
pusha
lret
aas
aas
lcall
xchg
cmp
lret
and
lcall
pushf
testl
xchg
mov
imul
paddw
xchg
dec
xchg
ret
jge
push
daa
pusha
stos
inc
xchg
lahf
jno
xchg
sbb
mov
mov
sub
lods
cs
pop
aaa
fdivr
cmpl
push
jnp
mov
int
mov
fldenv
adc
mov
scas
xorb
mov
push
inc
cli
cltd
xor
mov
mov
cmp
outsl
cmp
xchg
pop
mov
gs
mov
jno
rorl
xchg
add
mov
int
es
mov
ret
dec
or
jb
mov
xlat
adc
xor
push
cmp
nop
outsl
pusha
xchg
mov
in
dec
das
iret
movsl
bound
pop
mov
push
shll
insb
pop
bound
icebp
sarb
out
adc
loopne
xchg
mov
lods
sti
fnstenv
xor
sbb
cmpsl
in
nop
jmp
sub
imul
xorb
adc
xchg
pop
lahf
mov
bnd
mov
xchg
or
daa
adc
sbb
mov
mov
lret
lret
xchg
stos
and
push
push
addr16
xlat
je
cwtl
iret
rorb
sbb
dec
gs
loope
mov
dec
adc
imul
xchg
pop
xor
call
cwtl
or
test
sahf
jl
mov
mov
scas
mov
cmpsb
jge,pt
aaa
sbb
out
mov
cmp
adc
negl
xor
mov
and
jl
pop
fwait
stc
decb
ror
push
fstpt
pop
pop
push
cmc
xchg
shll
lahf
in
arpl
orl
es
mov
adc
sbb
fists
inc
sbb
xor
mov
ret
push
sub
les
jmp
sbb
rclb
incl
shlb
imul
push
adc
jb
push
xor
out
int3
or
jne
or
mov
and
fptan
arpl
jp,pn
jb
sti
imul
test
cmp
addr16
fisubrl
arpl
pop
leave
fldz
repz
loope
ljmp
sarl
pusha
dec
xchg
movb
add
call
outsl
cltd
outsb
xor
mov
xor
xorb
lcall
jb
xor
dec
sub
cmp
mov
and
xchg
sbb
or
and
movsb
jge
call
sti
xchg
loopne
das
fwait
outsb
mov
arpl
pushf
or
movsl
in
add
rclb
hlt
cld
lahf
scas
mov
or
stos
sub
sub
inc
dec
enter
repz
addb
stos
jbe
push
jo
mov
lahf
movsl
dec
push
jge
lods
mov
jno
in
repnz
and
fisubl
aad
ss
pop
les
int3
adc
dec
jge
loope
jmp
jp
xchg
push
test
test
fcoms
insl
cltd
flds
out
jns
mov
cmp
ljmp
fistpll
es
mov
mov
es
aas
ret
jle
punpcklbw
xchg
or
mov
inc
and
iret
repnz
inc
pop
mov
inc
pop
xor
mov
test
and
nop
imul
movsl
mov
cwtl
test
add
sub
push
loope
mov
and
jg
imul
test
xchg
pop
xor
iret
jne
subl
stos
test
inc
orb
movb
mov
pushf
dec
rcrl
mov
cs
leave
test
lea
out
cmpsb
push
sar
sbb
xlat
jae
in
xchg
movsl
arpl
mov
mov
std
aad
ret
ljmp
sub
dec
jb
jnp
xchg
sbb
outsl
movsb
fildll
std
xchg
or
pop
shrb
jmp
in
add
aam
test
mov
jecxz
pop
ljmp
pop
cs
mov
ja
out
and
ds
mov
xchg
lods
in
adc
sbb
jae
lods
and
es
add
stos
push
jg
fiaddl
cs
fs
sbb
fnstenv
adc
lcall
je
cmp
jge
icebp
mov
aad
sub
cwtl
cltd
sub
pop
sub
pop
xor
gs
ljmp
jns
dec
mov
adcl
jo
lret
test
js
pushf
xor
mov
mov
adc
clc
push
jp
scas
and
sti
push
lods
into
fcoms
jmp
imul
fdivrs
and
cmp
subb
cmpsb
outsb
ja
lret
imul
repz
mov
mov
dec
push
ret
ret
pushf
lds
out
inc
je
mov
mov
adc
sbb
rcll
xor
cmpsb
mov
adc
sub
inc
mov
clc
mov
push
xor
ds
sbb
fadds
xchg
jg
fsubl
cmp
addr16
mov
push
add
add
shll
fwait
aam
std
popa
nop
or
xchg
and
cld
jo
in
std
lcall
notl
fldcw
push
ljmp
fiadds
xchg
mov
ss
inc
jp
ret
adc
ret
ret
rcr
dec
inc
ss
fisubl
mov
push
push
dec
enter
fildl
push
sbb
mov
xchg
push
pusha
out
out
lods
mov
addr16
sbb
cmp
dec
sub
enter
inc
or
je
pop
mov
cmc
push
test
sbb
fisubrs
fwait
adc
sub
test
outsb
xchg
js
mov
mov
jl
xchg
out
xchg
or
push
jo
add
ss
adc
inc
aaa
sub
or
push
nop
sbb
xor
outsl
xor
xchg
sbb
scas
std
lods
mov
rolb
push
xchg
sub
pop
shlb
fdivrs
jae
pop
out
out
cwtl
stc
out
sti
test
pop
jle
or
ret
std
xor
aam
rclb
push
mov
pop
outsw
lret
or
stos
test
pop
jbe
cmp
or
imull
mov
lret
inc
daa
popa
xor
cmp
fcmovnb
cmpsb
xchg
pop
sub
add
lock
inc
dec
mov
fisubs
aas
filds
adc
xchg
dec
test
pop
ret
mov
add
ret
and
cmc
mov
les
cs
scas
pusha
push
lds
xchg
sub
or
rcrb
adcb
xchg
inc
adc
loop
mov
mov
mov
or
popl
cmp
loop
jno
push
fildll
adc
dec
lahf
loope
in
scas
mov
imul
scas
dec
sub
popa
pop
xchg
sbb
push
cmc
dec
xchg
add
scas
dec
sbb
mov
faddl
test
jle
and
fsts
dec
das
imul
sbbb
testl
xor
rcl
and
and
popf
js
int3
jmp
adc
adc
push
dec
out
shl
mov
mov
imul
jnp
mov
dec
lret
mov
lods
cmpsb
ds
rolb
inc
je
hlt
into
dec
jmp
rcrb
dec
clc
in
dec
cmp
bound
ret
or
lods
dec
push
dec
jp
jne
pop
cmpsb
xchg
inc
xchg
fwait
lods
xor
mov
push
ljmp
fstpt
ret
pop
fucomi
inc
std
nop
and
cmp
rcll
loope
sbb
add
push
sbb
cmp
and
xchg
icebp
adc
iret
popf
adc
xchg
ja
aam
dec
lock
dec
xchg
xor
mov
popf
pushw
mov
jnp
int3
imul
aas
pop
mov
bound
mov
push
cmpsb
jno
scas
jne
sbb
mov
cmp
mov
sti
xlat
int3
dec
mov
add
dec
pop
xchg
inc
jno
andb
fdivp
stos
mov
test
pop
lea
mov
in
inc
mov
sbb
jl
bswap
ret
ja
mov
sbb
jg,pt
into
das
out
add
in
rol
repnz
cs
add
xchg
adc
imul
dec
and
mov
ljmp
fisubs
shrb
inc
and
test
or
sbb
xchg
loopne
push
imul
shlb
aas
popf
push
sbb
and
pop
adc
scas
pop
xchg
push
sbb
cmp
add
sbb
movsb
daa
mov
push
outsl
jecxz
jnp
mov
rcrb
adc
pop
dec
cs
inc
sbb
xor
inc
leave
daa
dec
push
push
push
jae
jl
push
pop
cmpsb
les
lock
imul
pop
popf
mov
mov
in
adc
jle
stc
imul
mov
in
insl
scas
lret
or
std
xor
dec
ljmp
shlb
cltd
insl
jo
mov
or
scas
fisubl
imul
or
out
pop
dec
faddl
insl
mov
xor
xor
hlt
into
roll
daa
mov
or
stc
lret
pushf
dec
out
aad
jg
pusha
popa
jns
andb
mov
cltd
xorb
pop
add
call
push
add
xor
pop
js,pt
int3
rorb
leave
cmpsb
mov
subl
es
push
or
in
in
mov
mov
push
repnz
test
lock
fs
push
xor
into
cli
cmp
bnd
push
jno
std
ficoms
push
inc
xchg
mov
lds
or
dec
sub
das
cli
pop
out
add
mov
fs
test
int3
hlt
mov
nop
mov
js
inc
ljmp
pop
bound
jbe
add
xor
xor
test
push
into
idivl
mov
pop
loope
dec
jnp
xlat
sbb
or
js
or
mov
adc
shl
pop
jnp
add
xor
inc
in
and
adc
push
cmpsb
push
dec
stc
pop
into
mov
lock
pop
fdivr
gs
addr16
mov
inc
jnp
std
repnz
and
pop
xchg
std
inc
shrb
mov
cmp
or
ss
sub
and
loopne
mov
jmp
lret
jno
in
jb
mov
and
add
lods
sub
push
mov
out
cmpsl
arpl
jg
mov
mov
call
fsub
push
push
sbb
sub
or
sbb
imul
jns
aaa
jne
push
xor
xchg
push
xchg
jnp
mov
inc
sub
loope
xchg
xor
add
lds
sub
pop
jnp
dec
int
mov
xor
jnp
pop
daa
lods
inc
roll
je
sub
pop
xorl
call
and
mov
jmp
cli
lcall
push
repz
movsl
push
jl
lret
lret
into
pop
cwtl
jb
xchg
push
data16
test
cmp
xchg
clc
test
out
xor
mov
ljmp
mov
ret
pop
lds
mov
push
ret
dec
pusha
pop
lods
cmp
rcrw
daa
dec
push
outsl
sub
sahf
adc
mov
sbb
cltd
movb
cmc
adc
fwait
xchg
andb
mov
xchg
xchg
sub
dec
loop
cmpsb
cwtl
jge
sbb
push
jg
cmp
pop
pop
pop
mov
jl
jns
lahf
pop
xchg
xor
cltd
xchg
out
cmpsb
iret
dec
loope
out
dec
mov
sbb
mov
add
scas
xchg
ds
ret
dec
sarb
push
pop
negl
push
pop
xchg
xchg
out
xchg
test
sbb
pop
pop
sub
movhps
xor
fwait
xchg
push
mov
in
sbb
push
cs
cmp
add
aas
fadds
repnz
and
push
fdivrl
cmp
mov
in
mov
adc
dec
jle
loopne
test
je
push
pop
lahf
jbe
mov
stos
stos
pop
inc
iret
popf
sbb
out
push
and
mov
push
sbb
imul
int3
pop
adc
es
shlb
pop
mov
je
mov
out
mov
mov
std
adc
pop
fdivr
push
leave
and
inc
xor
icebp
icebp
xchg
jno
push
or
push
notb
and
xchg
fsubrp
ret
push
mov
and
pop
jp
fs
stos
loope
imul
jb
sub
test
out
push
push
int
out
scas
test
test
testl
sbb
dec
in
mov
pop
xchg
sti
inc
test
add
sub
fwait
sbb
pusha
sub
dec
cmp
rorl
jne
out
jmp
mov
outsb
popa
in
xchg
mov
cmp
sti
xor
imul
jmp
scas
sub
lds
subb
jecxz
and
vcvtpd2psx
pop
call
lods
inc
lret
stc
test
adc
fmuls
aaa
dec
icebp
lret
dec
out
xchg
enter
xor
fnstcw
loop
jb
jg
adc
rcrl
in
pusha
or
mov
hlt
and
fimuls
icebp
out
sub
inc
mov
jecxz
stos
cltd
mov
xor
mov
ljmp
iret
std
xor
ljmp
jecxz
xchg
lods
mov
mov
pushf
pop
and
faddp
lret
inc
add
xor
xlat
leave
ds
push
insl
jbe
andb
je
rcrl
jb
lods
mov
shr
mov
mov
mov
xor
cld
std
test
xor
clc
fldlg2
les
inc
int
fadds
mov
jmp
out
jge
lods
mov
add
cmp
sbb
mov
clc
mov
bound
xor
test
jnp
fiadds
add
fsubrs
imul
cmpsl
mov
cmp
mov
or
push
or
sbb
fdivp
ja
inc
jecxz
inc
push
jle
fbstp
out
hlt
mov
jbe
pop
aaa
and
pushf
mov
lea
and
jg
lods
sub
jae
mov
outsb
jg
pop
gs
movsb
sub
aas
mov
xorb
ljmp
nop
lcall
int
repz
call
mov
push
xchg
cmpl
fwait
mov
add
push
fsts
or
repnz
or
mov
bound
lock
push
mov
stc
scas
lock
sbbl
sarl
mov
jbe
pop
in
jmp
imul
sar
out
mov
cmp
mov
pusha
dec
sub
sub
rol
mov
mov
mov
mov
jl
mov
pusha
aas
push
leave
mov
push
cmp
push
add
aad
pop
or
mov
mov
add
mov
push
sbb
and
lcall
in
sbb
adc
movl
mov
push
lea
insl
popf
mov
sub
adc
inc
mov
sbb
pop
out
mov
adc
add
rcl
inc
xchg
dec
mov
scas
xchg
in
mov
jg
sub
icebp
sub
imul
mov
inc
pushf
jo
test
push
inc
mov
push
test
adc
mov
fcomip
scas
pop
cltd
dec
addb
push
add
xchg
push
out
scas
sub
pop
je
xchg
push
test
mov
lods
adc
leave
fstps
out
mov
loopne
push
scas
adc
mov
cmpsl
cs
stos
mov
sti
add
int
cmp
lea
mov
cltd
mov
pop
loopne
push
rcl
outsl
dec
sbb
pop
cwtl
pop
cmp
jne
or
cmpsb
imul
out
sub
stos
xchg
es
icebp
cli
out
mov
lcall
popl
add
adc
dec
jnp
adc
std
mov
enter
sbb
cmp
cmp
pop
jbe
adc
dec
mov
fidivrl
adc
xchg
pop
shll
fadds
jmp
sub
and
imul
jge
fsubrs
movsl
push
or
or
mov
arpl
pop
cmp
mov
push
in
add
sahf
in
xchg
adc
shlb
mov
push
fists
jle
stos
gs
mull
cmc
lret
loope
mov
mov
int3
int
xlat
outsl
jb
mov
aas
pop
mulb
xlat
mov
inc
sbb
daa
mov
sbb
jle
loop
cwtl
jmp
js
pushf
add
sbb
xor
pop
push
push
in
pop
mov
sub
pop
shll
icebp
cmp
cwtl
mov
aam
cltd
xchg
testb
fnstenv
push
divb
push
dec
sub
xchg
xchg
jnp
addr16
jns
cwtl
jecxz
fstpl
rcrb
jne
sub
and
es
mov
inc
cli
push
jne
dec
push
js
je
psubusb
jge
cmpsl
cmc
scas
ret
push
cmc
cmp
mov
jae
dec
dec
adc
push
push
xchg
xchg
sbb
daa
push
lcall
mov
mov
es
nop
push
or
cmpsl
jno
adc
fwait
ds
scas
sti
sbb
push
add
cltd
xor
mov
dec
mov
loope
gs
fnsave
mov
arpl
ja
leave
fdivr
mov
xor
pop
mov
sub
and
sub
cwtl
nop
rol
jb
mov
pop
iret
lods
xchg
xchg
lahf
mov
test
xor
out
push
mov
aas
in
inc
cs
jbe
add
nop
sbb
mov
jp
adc
pop
xchg
xchg
mov
xor
mov
aad
mov
mov
cmp
fisubl
cmpsb
cmp
sub
out
rclb
jmp
push
dec
cmp
lret
bnd
sub
jno
push
mov
or
jb
fwait
push
ja
out
mov
or
mov
mov
hlt
es
xlat
push
cmp
dec
cltd
xor
and
sub
or
sub
dec
stos
bound
xor
xchg
sub
pop
or
dec
jp
ljmp
cmpb
mov
popf
jae
push
add
loop
mov
xchg
js
stc
nop
orb
out
push
jbe
sbbl
loope
cmp
shlb
mov
jns
inc
loop
iret
cmp
push
or
dec
pop
xchg
push
addr16
pop
adc
enter
loop
scas
pusha
pop
mov
sub
nop
cmp
pop
cltd
xor
cld
hlt
dec
inc
jmp
inc
mov
mov
mov
jbe
aas
xchg
gs
and
or
pop
das
jbe
xlat
std
stos
add
xchg
fadds
push
jg
clc
xchg
cmp
mov
or
sub
sahf
lahf
rcl
fistl
xchg
lock
mov
mov
push
adc
mov
fst
push
or
idiv
fwait
pop
data16
jecxz
arpl
push
jb
xchg
mov
push
loopne
xchg
pop
movaps
or
fnstenv
dec
mull
push
sub
test
mov
pop
repz
roll
pop
shlb
dec
cmpb
or
pop
in
aad
push
sub
cmp
shrb
stos
jge
pusha
push
push
jle
lret
nop
loopew
scas
push
test
xchg
jnp
sbb
repz
into
fidivs
adc
adc
repnz
and
or
sub
ja
jl
iret
out
cltd
inc
xchg
push
xor
sbb
cmp
xor
fisubrs
sbb
sarl
sub
sbb
shl
inc
and
imul
mov
ljmp
into
into
inc
jbe
and
lahf
jg
xchg
repz
mov
daa
adc
addr16
fnstsw
int
mov
scas
cmp
and
rcrb
inc
daa
mov
xor
arpl
push
aaa
dec
or
dec
iret
pushf
push
sar
in
inc
inc
fstl
cvtps2pd
sti
inc
jbe
push
data16
inc
xchg
test
pop
rcll
push
movb
add
cmpsl
xchg
subl
push
jnp
mov
and
mov
int3
sub
push
stos
cmp
aad
fldl
mov
daa
into
sub
addr16
fbstp
sahf
shlb
pop
rorl
scas
je
sub
cltd
mov
lds
and
inc
pop
cmc
jnp
xchg
fs
or
mov
stos
stos
inc
movsl
sbb
push
repz
pop
mov
sub
lahf
mov
and
adc
sub
xlat
pop
std
lea
loop
pop
shr
cs
out
cmc
jnp
add
mov
xor
mov
xor
test
inc
adc
cmpsb
es
loopne
ja
mov
adc
add
xor
xor
push
std
or
sbb
or
leave
push
dec
add
mov
sub
xor
or
loope
pop
push
mov
mov
jb
int
jo
cmc
inc
dec
test
and
jg
xorb
jb
shrb
imul
cltd
std
aas
lahf
lret
jno
jne
add
xchg
push
add
aam
insb
cwtl
cltd
je
adc
es
inc
push
incl
aaa
dec
popa
repz
pop
lods
scas
and
cli
leave
fstpl
aam
add
push
sahf
subl
sub
mov
xchg
push
push
jnp
push
or
insb
arpl
inc
rcl
repnz
sbb
stc
mov
je
add
and
ret
pop
test
mov
lods
cmp
int
mov
dec
xor
jae
xchg
adc
arpl
es
inc
popa
cltd
imul
daa
dec
mov
call
jge
mov
sbb
dec
into
or
cwtl
aaa
pop
xchg
fldt
jb,pn
inc
or
das
fnstenv
xchg
mov
jge
jne
sahf
adc
sub
jmp
and
xor
test
sti
insl
mov
imul
dec
out
daa
in
pop
jns
sarb
adc
hlt
aad
lods
jl
test
arpl
call
mov
sub
jg
mov
add
add
clc
mov
cltd
shl
stos
movsl
jmp
cmp
jg
shll
pop
in
lods
adc
mov
jo
inc
loop
cmp
cmpsl
push
les
jl
popa
pop
sub
mov
ss
lods
inc
ds
loopne
cs
dec
pop
cmp
dec
stos
icebp
cmpl
mov
jae
mov
js
jns
mov
rcll
pop
cmp
adc
jecxz
ret
aas
cwtl
pop
mov
jp
dec
outsb
std
lcall
xor
push
test
subl
into
das
or
faddp
push
scas
mov
push
scas
fisubrs
mov
insl
cltd
push
xchg
ret
nop
mov
into
les
lret
aam
sbb
mov
inc
pushf
lods
clc
out
push
add
mov
cli
xlat
insl
gs
jg
push
or
xchg
mov
inc
push
test
cmp
subl
ffree
out
popa
aaa
and
dec
lret
sti
test
imul
sub
incb
out
es
add
adc
mov
and
add
dec
fnsave
xor
push
or
sbb
push
jge
sahf
scas
mov
push
ds
arpl
sti
outsb
inc
popf
ja
jo
movsl
test
lahf
jne
mov
sbb
adc
int
hlt
les
sar
cmp
hlt
mov
outsl
loop
xor
jecxz
xlat
pop
scas
dec
xchg
cmpsb
iret
arpl
call
inc
lods
jle
aaa
bound
in
cmpsb
mov
add
or
test
pushf
iret
pop
cmpsb
ss
sub
dec
rcll
xchg
fucomi
add
mov
arpl
mov
push
add
ret
xchg
stos
fsubrs
add
outsl
cmc
xchg
lret
jecxz
lock
or
js
jno
subb
cmp
scas
xor
int3
push
mov
cmp
ret
outsb
mov
and
inc
ja
pop
imul
inc
insl
mov
test
and
xchg
xchg
jb
test
mov
sahf
cmc
pop
inc
test
ja
mov
mov
lods
dec
loopne
push
mov
jb
mov
jno
pop
sub
inc
jl
xor
sub
outsb
jl
adc
inc
ds
jno
cwtl
or
sbb
nopl
hlt
jnp
inc
mov
dec
mov
push
aam
mov
nop
dec
sbb
lahf
mov
pop
add
mov
add
push
mov
loopne
cmp
and
dec
pusha
stc
adc
lcall
xchg
fidivs
rcrl
or
sub
jae
pusha
push
add
sbb
imul
sbb
or
sbb
lds
out
add
insb
mov
sbb
ret
aam
imul
lret
mov
stos
pop
dec
jns
rclb
js
out
mov
out
xchg
pop
gs
std
icebp
insb
xor
hlt
mov
bound
imul
add
add
mov
test
jo
outsb
sub
xchg
jbe
fcoml
push
pop
cmp
jns
lret
fs
add
aad
mov
mov
cmp
dec
sbb
sbb
ret
mov
push
outsb
or
movsl
xchg
push
dec
loopne
pop
add
dec
ret
pusha
dec
inc
push
insl
sub
popa
xchg
es
in
xchg
stc
sub
stos
into
andl
mov
xor
lea
aas
out
xchg
sti
add
xor
lea
mov
imul
or
mov
jns
rcrl
icebp
mull
sub
mov
push
pop
fsubs
push
in
xchg
divl
aam
addl
aam
cmp
movsb
xchg
lret
inc
outsl
xchg
inc
jnp
jp
icebp
movsl
mov
inc
dec
lds
in
enter
push
data16
jns
pop
daa
jns
loopne
test
movsb
xor
out
xchg
rcr
push
std
cld
shrb
cmp
pop
push
jnp
dec
loope
test
xor
jge
loop
cmp
mov
aad
fisubs
xor
xlat
and
bt
and
lods
pop
jno
cmpsb
add
mov
addr16
pop
mov
divl
dec
std
inc
cmp
mov
bound
sbb
and
adc
es
std
cmpsl
iret
cmpsl
jne
inc
out
inc
addl
sub
add
or
daa
push
mov
add
lds
in
inc
push
adc
dec
dec
cmovns
and
or
push
es
cli
jg
std
into
mov
xor
cmp
cmp
sub
inc
cli
je
stc
rcr
insb
mov
mov
inc
jecxz
jbe
aad
xchg
adc
xchg
test
lock
cmp
xor
imul
cmp
xor
aas
nop
push
shr
cmpsb
mov
les
dec
cmp
xchg
and
in
xlat
faddp
ss
addr16
jge
adcl
stos
test
movsb
cltd
xchg
stos
repz
sbb
xchg
push
andb
sbb
dec
aaa
data16
mov
ret
movsl
jg
and
dec
pushf
and
mov
push
out
fcomi
sbb
fstpt
faddl
dec
roll
int
pop
fwait
cmpsl
movq
repz
push
decl
roll
cmp
lds
or
push
jle
mov
bound
jns
inc
mov
inc
push
cmp
rcrl
test
push
push
ret
xor
ljmp
cmp
adc
or
insl
push
leave
roll
lret
cmp
dec
inc
cmp
outsl
or
fnstsw
xor
inc
mov
leave
fstpl
test
movb
pop
lcall
xlat
push
add
sub
movsl
cld
pop
stos
add
decb
inc
int
push
jae
dec
add
xchg
pop
shr
jge
sbb
cli
cli
fldenv
push
les
sbb
nop
mov
int3
xlat
mov
pop
add
icebp
sahf
fldcw
sti
add
jne
insb
outsb
int3
push
jo
popf
push
inc
cmp
test
outsb
fdivl
and
mov
jp
mov
xchg
sub
std
push
add
xor
jne
lret
lcall
inc
add
fnstcw
shll
lcall
pop
out
lods
xor
mov
inc
xchg
xchg
sarb
scas
xor
jnp
add
cmp
mov
and
dec
stos
inc
cmp
pop
inc
test
sub
sub
out
pop
push
repnz
nop
jb
int3
xor
sbb
movsl
aad
call
xor
lds
popa
mov
or
sbb
shrl
icebp
test
ljmp
sidtl
mov
mov
cmp
movsl
xchg
fstps
rorb
cs
mov
cmp
dec
mov
and
inc
leave
cmp
lea
clc
gs
jg
testb
inc
xor
inc
gs
outsb
xor
push
int3
icebp
lcall
lds
psrld
jne
pusha
pop
jecxz
jns
loope
mov
and
pop
mov
in
inc
les
xchg
cli
mov
and
dec
imull
pop
xor
adc
mov
pop
cmp
push
cmc
pushf
in
cmp
bound
repz
pop
rcrl
cmp
dec
punpckhdq
inc
inc
lahf
fdivrs
pop
lret
div
aam
push
mov
shr
vcvtss2sd
jmp
sub
mov
cmp
jb
jl
and
movsl
fcmovnu
inc
dec
fiadds
jl
div
mov
mov
jmp
mov
inc
xchg
pop
jno
or
sub
xchg
or
jno
pop
mov
push
int
js
ret
inc
mov
cmpsl
push
repnz
mov
fcmovnbe
inc
sub
fwait
test
cmp
mov
jl
xchg
push
in
pop
jg
pop
mov
push
jno
sbb
xor
fidivrs
jns
jg
insb
cli
push
std
iret
or
bound
cli
mov
hlt
jle
add
or
cs
push
rclb
inc
clc
or
mov
imul
repz
test
push
dec
jnp
mov
scas
mov
ror
fcoml
xchg
mov
fldenv
cld
push
pop
ss
push
mov
mov
pop
and
into
rorb
cmp
push
repnz
mov
ds
cld
dec
in
lcall
lock
imul
mov
call
scas
aad
push
lret
lcall
mov
cli
push
icebp
xor
sub
cmp
lcall
sub
test
in
push
adc
sbb
imul
dec
shll
in
sti
mov
movsl
adc
loop
mov
js
add
adc
inc
adc
xchg
clc
push
xchg
jne
gs
xor
xor
lods
bound
lock
mov
sub
iret
rcrb
jae
mov
xchg
je
or
js
out
ja
test
repnz
dec
fcomip
pop
cmp
bound
subb
lock
enter
jl
xchg
andb
push
in
int
ja
xor
sbb
imul
xlat
outsl
jo
hlt
aas
bound
sbb
adc
push
or
pop
jmp
dec
dec
loope
add
sub
shr
cs
sub
aad
xor
jae
mov
xchg
cmp
imul
fbstp
out
push
or
test
mov
push
ja
aas
push
cmp
mov
mov
adc
arpl
mov
sub
and
xor
jo
jmp
scas
lods
mov
xchg
mov
scas
call
xor
ljmp
test
mov
sbb
ret
inc
pushf
mov
jae
mov
mov
fdivr
inc
or
pop
pop
push
cmpsb
outsl
add
add
mov
in
inc
sub
jne
leave
icebp
mov
or
push
mov
push
imul
add
pop
jns
orb
mov
and
xor
mov
cs
jge
sub
and
jmp
xor
push
aam
out
xchg
pop
imulb
fdivrl
stos
ja
je
ss
rcll
push
mov
mov
or
pusha
jp,pn
push
sub
or
dec
adc
mov
fst
pop
mov
and
jnp
roll
pop
mov
pop
bound
stos
push
mov
dec
inc
mov
push
mov
shl
daa
jmp
pop
inc
cmc
std
js
or
xor
add
pusha
ljmp
and
mov
jns
jp
sub
and
mov
xchg
mov
rcr
or
lahf
push
stos
ret
or
or
sbb
les
xchg
imul
mov
pop
lods
ret
mov
je
xor
cmp
and
inc
push
and
dec
jle
ret
insl
rorb
dec
jp
mov
cmovns
popa
sbb
in
iret
scas
xor
lret
add
sub
inc
hlt
fbld
stos
outsl
mov
in
mov
dec
xchg
pop
mov
inc
cmp
insl
mov
imul
jo
jb
push
dec
cmp
insb
sbb
popa
lea
ljmp
inc
pop
pop
mov
and
pop
mov
mov
lods
fwait
notl
stos
or
sub
int3
es
aas
dec
add
and
movsb
jmp
xchg
movsb
mov
push
sub
inc
ret
and
lcall
lea
popa
xchg
scas
ljmp
push
movsl
pop
xchg
adc
xchg
jae
mov
mov
ror
jbe
dec
add
or
jb
lcall
mov
sbb
rorb
cmpsl
loopne
dec
aas
subl
es
jp
int3
fdivrl
call
sub
addl
add
cs
fistps
jg
and
cmpsb
enter
add
mov
mov
push
aam
and
dec
in
mov
adc
lret
adc
jp
pop
mov
cmpsl
call
xlat
sbb
in
out
test
shrd
adc
aam
lret
adc
xchg
aas
cmpsl
push
inc
fwait
arpl
mov
cltd
out
pop
dec
ljmp
jnp
shlb
pop
in
xor
les
pop
dec
mov
or
adc
pusha
mulb
mov
adc
dec
push
add
mov
sahf
aad
daa
sbb
stc
ret
je
ret
sub
adcb
out
sahf
testb
xor
mov
pop
push
lds
jns
mov
jo
dec
cmp
and
loope
mov
insl
adc
popa
xor
inc
daa
cmp
xchg
loope
aaa
dec
les
push
outsb
pushf
fisubrs
jmp
and
or
xchg
sbb
jecxz
sub
and
idivl
loopne
outsl
jb
fs
stos
jl
xchg
inc
adc
xchg
sub
call
orb
std
cmp
dec
push
xor
push
loope
mov
add
and
ljmp
lock
add
mov
pop
pop
jmp
or
mov
bound
popf
xor
es
pop
jg
push
shlb
xchg
int3
push
xchg
sub
and
mov
push
xor
sbb
pop
cmpl
cmp
xchg
pop
aad
repnz
sahf
mov
ret
ljmp
xlat
mov
es
insb
mov
add
outsb
js
xor
push
into
test
add
mov
gs
sarl
pop
inc
sti
push
and
mov
imul
fadds
xchg
arpl
test
lret
notl
testl
push
inc
test
sbb
push
fs
repz
loop
leave
adc
dec
std
out
jbe
mov
jp
lods
cmp
inc
fisubrl
sbb
icebp
cmp
nop
je
lods
shll
lret
dec
mov
out
jae
mov
mov
dec
mov
in
pop
test
add
inc
sub
lret
pop
mov
in
add
movsb
mov
sbb
fs
mov
adc
inc
data16
iret
and
sbb
sub
mov
xchg
test
sahf
and
popf
dec
jns
fnstsw
ljmp
dec
cmc
dec
sbb
xchg
push
scas
jecxz
jns
lods
outsb
inc
push
push
insb
and
mov
xor
rclb
lods
pop
jecxz
push
cli
pop
lea
push
cmp
inc
add
ljmp
mov
jmp
pop
pusha
sarl
imul
add
push
push
add
xchg
adc
pop
add
push
add
stos
push
in
rcrb
adc
mov
cmc
nop
jl
or
fists
inc
xchg
into
fwait
scas
sub
jmp
and
mov
mov
or
aaa
arpl
ds
pop
insb
cmp
sub
ss
incb
xchg
xchg
push
mov
fildll
push
cwtl
xchg
cs
enter
mov
add
ss
cwtl
movl
mov
fiadds
push
add
xor
push
dec
xor
outsb
test
xor
jecxz
inc
mov
sti
pop
push
jbe
lock
add
adc
imul
xlat
cmc
cltd
notl
in
aaa
sbb
aam
cmp
and
mov
mov
xor
or
test
je
push
jo
or
es
faddl
popa
jge
lock
sbb
std
xor
inc
pop
fldt
test
sub
iret
jbe
test
sarb
jmp
push
ss
or
std
scas
dec
xor
mov
lcall
mov
sbb
pop
push
mov
cmpsb
mov
aas
testl
dec
lcall
std
inc
stos
add
in
out
ljmp
gs
ret
mov
lea
sahf
mov
outsl
xchg
not
pusha
push
add
stos
inc
add
sahf
add
sub
in
mov
push
div
and
dec
loop
mov
jne
and
cmp
shrl
jne
fadd
sub
adc
xchg
out
nop
pop
andl
cmp
inc
add
enter
cmpsb
out
out
inc
jl
mov
push
ficoms
sbb
inc
push
addr16
mov
mov
in
fs
pop
fsubrl
ret
sbb
mov
arpl
inc
shl
xor
dec
movsb
cmpsb
imul
mull
xor
lret
sbb
sarl
jp
sbb
lods
mov
lret
add
hlt
add
std
mov
sub
outsb
test
scas
je
mov
xor
push
xor
xchg
add
jmp
pop
lds
mov
push
jbe
in
aam
enter
add
xchg
je
inc
push
sti
pop
xchg
dec
rcll
adc
adc
jge
iret
sub
pop
pusha
nop
imul
adc
lods
shlb
pop
mov
iret
adc
int
inc
lahf
test
xchg
push
and
shlb
jle
int
mov
cmp
bound
jnp
or
cmpsb
lret
enter
push
sbb
mov
mov
adc
or
xorb
jge
xchg
xor
push
mov
push
ss
cmp
hlt
dec
pop
or
pop
add
jbe
pop
popf
mov
clc
aaa
jge
movsb
sub
jne
inc
cmp
xor
adc
inc
leave
jge
cmp
in
xchg
add
jl,pn
data16
outsb
push
add
daa
dec
movsl
into
push
loope
cmp
aaa
call
cmp
mov
and
xchg
and
mov
add
pushf
cs
aaa
insl
jp
jmp
fistpll
sub
xchg
or
jecxz
push
popf
fucom
xor
mov
ja
leave
adc
adc
cmp
inc
sbb
sbb
pop
jne
mov
pop
sbb
lods
mov
xchg
loope
jmp
add
or
in
ret
popf
cmc
std
movsl
divl
lds
lock
hlt
mov
inc
bound
push
out
pop
xchg
ffree
mov
sub
rorl
cmc
dec
and
and
decl
inc
mov
ffreep
mov
sub
cmp
in
sbb
notl
sub
push
movsl
cli
push
daa
lcall
loopne
adc
adc
mov
add
mov
std
pushf
out
fdivl
dec
jg
mov
inc
stos
push
iret
lock
ret
jne
add
adc
stos
mov
dec
data16
cmpsl
mov
mov
rclb
push
shll
cmp
int3
arpl
jns
fnstsw
loop
pusha
push
fcompl
dec
lea
insl
fidivs
inc
xchg
mov
dec
enter
shlb
std
inc
mov
mov
insl
cmp
cs
mov
insl
sar
pusha
sbb
xor
inc
aas
sub
jne
std
scas
fldl
mov
out
idivb
inc
inc
push
push
leave
fs
in
fadds
jno
ds
sbb
shl
xchg
and
movsl
loop
mov
stos
sbb
and
pop
dec
sbb
out
add
or
lret
test
and
rolb
je
mov
popf
mov
xchg
adc
cs
test
mov
dec
lcall
cld
xchg
lret
sbb
dec
xchg
jne
movsb
fstpl
mov
bound
nop
xchg
pop
fs
popa
mov
mov
pop
call
fmull
mov
icebp
sub
xchg
gs
rol
lods
jg
shr
ret
mov
sub
add
outsb
cli
mov
ljmp
fmul
icebp
cld
inc
iret
out
cmp
pop
imul
out
inc
ljmp
xchg
add
ret
enter
mov
movsl
adc
outsl
xchg
pop
xor
lcall
mov
mov
mov
in
int
es
lcall
pop
inc
cli
adcb
pop
aas
repnz
add
stos
lea
iret
sub
lods
out
fcoml
xchg
pop
cwtl
sub
ficomps
shrb
lret
dec
and
jg
stos
jp
lret
aaa
pushf
ds
cmp
jo
ds
mov
sub
sbb
mov
add
push
negl
jmp
and
pop
fimuls
test
loopne
sub
cmp
adc
lahf
insl
jae
dec
jge
das
mov
push
test
xchg
jne
or
add
into
pop
xor
cli
xchg
inc
inc
ficoml
sub
jns
pop
mov
push
call
cmp
xor
into
and
fs
mov
out
xlat
inc
and
loopne
divl
mov
das
add
mov
jno
loop
xchg
gs
mov
jns
mov
jbe
push
jp
jbe
pop
cmp
mov
jp
pop
pop
shrb
addr16
pop
adc
jae
jno
mov
mov
orl
pusha
aad
aas
push
jecxz
inc
imul
cmc
inc
jnp
orb
ljmp
stos
mov
adc
mov
fs
add
ret
js
mov
out
jno
stos
mov
stos
add
pop
jle
lret
clc
out
mov
jl
mov
out
mov
inc
sarb
icebp
cwtl
inc
xchg
push
inc
ret
cld
sub
subb
loope
pushf
loop
orb
fstps
cltd
mov
rclb
sar
outsb
aas
mov
or
pop
popf
fdiv
sarb
or
jno
jb
jmp
mov
fwait
sbb
lret
mov
dec
pop
sahf
pop
insl
add
arpl
int3
ss
jno
movsb
sub
test
sub
lods
cli
mov
jmp
jbe
jmp
jmp
mov
fldcw
push
mov
test
mov
in
add
xchg
jg
add
xor
and
jne
sbbb
pusha
xchg
out
out
mov
push
mov
sahf
sarb
add
push
xchg
pushf
ds
or
mov
rcrb
sub
outsl
jnp
lea
xchg
stos
push
pop
aas
test
outsb
mov
addr16
mov
rcrl
adc
fsub
fnstcw
stc
push
out
dec
pop
fbstp
dec
xor
in
loopne
push
sub
mov
in
int3
imul
sub
mov
int3
fistpll
mov
xchg
lea
sub
imul
inc
push
mov
xchg
sbb
leave
mov
jo
sbb
cld
sub
and
sub
jnp
mov
adc
mov
popa
je
pop
adc
cmpsb
aam
push
pop
xchg
mov
mov
and
pop
icebp
lret
push
mov
aas
sbb
divl
mov
fisubs
push
fnstsw
add
enter
jae
push
arpl
ret
pop
push
negb
out
pop
xor
cmp
mov
mov
push
push
push
mov
dec
addr16
shrb
adc
xchg
ds
shrb
add
das
cmpsl
xchg
xor
xchg
test
sahf
aaa
cmp
in
scas
add
stos
pop
xor
loope
or
ljmp
in
movsl
popa
push
in
cmp
xor
jae
setno
sub
test
cltd
mov
and
mov
push
mov
mov
bound
jne
inc
xchg
push
dec
jne
aas
ficomps
jmp
adc
pop
adc
adc
pushf
movsl
push
add
add
jae
adcb
aas
or
loop
scas
je
and
and
ret
cmp
jg
out
ljmp
xor
movsb
adc
inc
add
fs
xchg
lret
outsb
cmpsl
rcl
cmc
inc
and
push
lock
sub
inc
jp
cmp
out
jnp,pn
fcomip
fs
pop
nop
shlb
testb
lods
sti
adc
insb
imulb
in
or
iret
js
addr16
mov
sbb
jne
ret
movsb
pushf
dec
dec
test
pop
pop
sbb
xchg
inc
push
repz
push
lea
sbb
mov
push
jle
dec
xlat
flds
add
inc
ret
dec
ds
adc
mov
push
xchg
shll
sbb
dec
aas
cwtl
sahf
pop
inc
mov
fcmovu
inc
xor
idiv
mov
or
pop
mov
push
pop
and
adc
mov
int3
sbb
xchg
sbbl
mov
dec
pop
push
cwtl
stos
in
test
or
cmpsl
lcall
pop
pop
cmp
xchg
pusha
mov
aad
or
jp
xchg
mov
or
call
loopne
addr16
pop
mov
and
jle
js
sbb
pop
lret
add
jbe
and
sbbl
add
jo
mov
sub
or
dec
aaa
and
add
sub
testb
cmpsl
dec
lret
or
adc
out
test
or
andl
enter
mov
mov
jg
xchg
xchg
fisubl
leave
stc
pop
inc
mov
pushf
jge
mov
es
cmpsl
pop
xchg
jae
push
pop
push
popf
push
pushf
out
pusha
fs
xchg
mov
ss
dec
dec
mov
push
das
stos
enter
mov
xchg
rorb
mov
mov
sarl
mov
or
int
add
cmp
push
sbb
jb
add
arpl
adc
cmp
cli
ss
mov
and
dec
sbb
sbb
dec
push
mov
outsb
sbb
pop
ss
xor
adc
repnz
sti
pop
jmp
sub
shll
je
pop
add
testl
add
ljmp
sbb
loop
repnz
sbb
out
adc
insl
push
outsl
pop
fsubrs
mov
je
cmp
test
sbb
mov
test
fneni(8087
jle
adc
and
mov
inc
imul
cmp
fidivs
insb
sub
pop
popf
jp
aad
sbb
or
pop
jnp
add
mov
inc
sbb
fcomi
sahf
test
cmp
decl
jle
jo
aam
jecxz
and
rclb
mov
xor
fidivrs
inc
cltd
mov
jns
pop
into
mov
xor
mov
shrl
daa
dec
dec
test
pop
js
mov
push
ret
scas
mov
adc
sbb
and
mov
or
out
test
loop
mov
xor
test
imul
mov
sbb
sbb
add
dec
std
mov
cmpsb
leave
fstp
mov
sahf
mov
mov
mov
adc
dec
stos
mov
fcoml
xchg
mov
adc
cld
mov
jae
enterw
sub
fsts
les
in
fcomps
add
loop
adc
or
nop
sub
daa
cwtl
push
xchg
ficompl
insl
outsb
mov
sbb
dec
jmp
xor
je
dec
rorl
popf
call
jnp
cmp
mov
sub
pusha
cmp
lahf
fwait
fs
out
mov
stos
mov
inc
fcoms
xchg
or
ret
push
icebp
and
push
and
sbb
rep
jb
enter
jnp
dec
inc
push
adc
jl
jno
lea
dec
es
pop
pop
sahf
je
mov
or
add
mov
pop
outsb
push
in
push
stc
loope
pop
pop
mov
clc
js
lea
inc
mov
lcall
xchg
push
dec
push
aaa
incl
aas
mov
pop
sbb
pop
xlat
scas
enter
xchg
addr16
or
sbb
sub
orb
xchg
into
sub
mov
and
nop
es
cmp
out
pop
lea
cmpsl
jl
pop
push
or
and
outsb
hlt
xchg
int3
mov
mov
cld
sub
lods
add
repz
sub
xchg
cld
mov
cmp
rorl
lret
cld
cwtl
xchg
ret
mov
push
in
mov
pop
addr16
xlat
inc
sub
iret
or
mov
sub
cmp
dec
sbb
outsl
mov
loop
xchg
out
pop
lock
mov
jmp
and
dec
pandn
xchg
jge
xor
push
clc
insb
decl
xchg
adc
xchg
sbb
inc
lcall
push
adcl
or
mov
lret
iret
movsl
lretw
dec
pusha
xchg
cmpsl
adc
push
dec
dec
into
dec
inc
dec
add
push
in
out
and
dec
add
and
sub
daa
loop
movsl
mov
popf
setl
xchg
mov
js
cmpsb
sub
out
insb
mov
les
add
sbb
cmpsl
mov
sub
popf
jmp
inc
jl
movsb
xchg
dec
lcall
mov
push
or
stos
repnz
push
mov
pop
gs
dec
and
jae
jp
out
dec
mov
or
jno
mov
fwait
mov
movsl
lcall
cmp
or
rcll
stc
pop
movsb
arpl
loop
jg
jp
das
cmpsb
pop
pop
jns
push
xchg
or
sbb
cmp
xchg
fcmovnbe
and
mov
ljmp
imul
ljmp
ja
inc
mov
divl
cli
insb
imul
mov
inc
push
dec
pusha
int
mov
rorb
add
push
hlt
cmp
in
dec
rcll
dec
lcall
cld
sbb
jnp
xchg
push
mov
add
je
add
lcall
std
xor
aam
cmp
add
shl
push
push
call
and
jmp
out
add
mov
iret
insb
mov
sbb
ret
notb
dec
push
mov
aaa
xchg
sbb
pop
je
fisttpll
ja
iret
bound
mov
imul
fpatan
mov
pushl
in
popf
mov
xchg
xchg
mov
pop
call
sbb
jns
mov
xor
andb
or
xchg
jns
and
mov
in
mov
dec
test
pop
dec
in
pop
test
int
xor
rcrb
xor
sbb
inc
out
push
mov
leave
fnsave
movsl
stos
inc
movsl
xor
sbb
push
in
scas
stc
mov
or
mov
jle
xorl
test
push
cld
mov
inc
icebp
fs
mov
aas
out
stos
dec
pushf
push
jp
cmp
pushl
js
xor
and
push
lods
call
insl
and
in
addr16
sbbl
mov
fimull
adcl
out
mov
inc
and
fdivr
jae
out
gs
jmp
mov
sbb
cmp
in
jl
sub
aas
jbe
int
ficoms
mov
call
pop
mov
imul
icebp
leave
xchg
cmpsb
mov
push
push
xchg
leave
stos
icebp
out
lahf
xchg
xchg
sbb
mov
pop
rorl
cmp
in
gs
push
aas
out
mov
iret
rcll
mov
sub
cmp
and
out
push
arpl
fidivl
daa
push
sub
mov
jecxz
imul
out
pop
cwtl
out
sub
sarl
sub
dec
inc
mov
jae
cmpsb
inc
xchg
pushf
lods
ret
icebp
pop
stos
ret
shlb
fmuls
test
mov
loope
push
xchg
push
push
add
lods
push
test
jno
or
pop
cld
test
test
ljmp
inc
add
jp
dec
adc
lret
cmp
xlat
push
xor
sbb
mov
addr16
lret
or
sub
adc
xchg
cmpl
pop
insb
jge
into
xchg
jle
mov
cmpsb
mov
pop
cmpsb
pop
scas
dec
cmp
xor
lret
rcrb
dec
mov
movsb
cmp
and
mov
scas
push
mov
xlat
cmp
mov
call
or
sub
cmpsl
test
stos
or
in
pop
hlt
shrb
mov
push
ficomps
je
cltd
mov
lods
bound
loopne
aaa
pop
push
xor
loope
xchg
pushl
and
push
xor
sarb
mov
loopne
cs
push
mov
push
inc
icebp
dec
add
cmc
sahf
rcrl
cmp
sarl
add
mov
pop
pop
mov
popf
pop
mov
stos
ret
xor
imul
popa
add
mov
mov
outsb
sub
bound
xor
cs
shll
popf
pop
or
or
lock
jl
lahf
mov
mov
mov
outsl
adc
sub
sub
rcr
mov
inc
pop
into
mov
dec
pop
xor
ds
mov
or
sti
push
loope
jmp
add
adc
mov
es
mov
dec
nop
aas
fwait
cmp
add
mov
int
push
arpl
pop
jle
test
pop
lea
pop
cld
push
subl
fwait
in
sbbb
push
jb
cmp
cli
icebp
xor
sub
mov
or
mov
jne
xor
jmp
loop
xlat
fildl
or
popf
fldcw
jns
adc
jge
lea
push
jecxz
pop
sub
mov
xor
push
mov
mov
imul
lock
stc
mov
jle
jno
repnz
mov
xorb
xlat
push
repnz
sbb
test
xlat
pusha
jbe
jbe
cmp
xlat
jb
adc
sub
out
in
fisttpl
sub
mov
mov
xor
push
aas
dec
cmpsl
bound
pop
pop
jle
and
sbb
rcrb
sbb
ljmp
in
jb
cmp
jb
aaa
sahf
aam
mov
jp
and
rclb
sarl
mov
repz
pop
xchg
filds
enter
mov
xor
mov
stos
inc
pop
into
outsl
xor
adc
dec
xchg
mov
arpl
jle
push
cmp
or
jmp
pusha
scas
xchg
push
popl
and
inc
push
fnstsw
sahf
js
adc
movsb
es
lret
popf
enter
lods
loop
sbb
mov
xchg
mov
pop
pop
xchg
mov
hlt
cmpsb
outsl
inc
test
mov
xor
iret
xor
cmp
and
jne
jb
and
ror
cmp
scas
sbb
or
fsubrl
mov
aam
popf
data16
rolb
pop
and
mov
pop
jb
adc
testl
inc
cwtl
sbb
lea
xlat
andl
xchg
icebp
int3
pop
cs
scas
ja
rolb
pop
jge
lahf
sti
lret
adc
sbb
inc
leave
mov
push
fisubl
adc
stos
jno
sub
jae
sub
aas
mov
test
xor
mov
in
movb
sbb
mov
sub
enter
test
int
xlat
lret
sub
daa
lds
xchg
fistl
fdivrs
pop
test
jmp
jne
shl
adc
xchg
mov
cmc
cmpsl
dec
adc
pop
and
or
xor
rorl
movsl
dec
cmp
sub
in
lret
ret
ja
xchg
clc
mov
xchg
sbb
cmpb
sbb
jmp
insl
pop
movsb
ja
je
jl
int
lret
dec
aad
mov
data16
pusha
lea
imul
jp
pop
add
cmp
inc
test
pxor
out
data16
mov
push
pop
mov
mov
ss
xchg
js
add
addb
lret
sbb
add
mov
orb
cmp
call
fidivrs
xchg
stc
mov
inc
inc
sbb
in
xor
dec
sbb
cli
es
push
insl
cmp
pop
mov
ja
jg
inc
testl
sahf
mov
std
add
arpl
out
xlat
lret
mov
test
fdivrp
dec
out
jae
mov
add
jo
xor
mov
push
inc
and
and
stos
fists
inc
or
loop
pop
lock
and
dec
jns
mov
mov
aaa
leave
loopne
movsb
fisubl
xchg
adc
push
and
popf
fsubrs
push
hlt
insb
fdivrl
lcall
mov
mov
cmp
push
sub
push
mov
inc
pop
sub
cmp
inc
out
arpl
in
and
jno
aaa
jle
lea
sub
and
fisubrs
mov
mov
shrb
inc
lret
adc
adc
rcr
add
jp
and
mov
xchg
mull
pop
jmp
inc
xchg
das
or
cs
or
call
sub
or
ds
sub
shrl
aam
lods
or
jbe
or
inc
je
adc
sbb
sahf
inc
int3
or
mov
add
in
xor
xor
jge
adc
daa
add
leave
je
push
scas
test
cmp
test
and
xchg
test
or
inc
mov
push
inc
iret
jl
loop
push
mov
mov
and
xchg
sub
clc
hlt
sbb
add
jmp
jb
or
cmp
dec
inc
jecxz
movl
ja
pop
xchg
xorb
add
mov
nop
or
loop
or
inc
add
out
jl
cmc
rol
mov
sbb
jne
jo
jbe
mov
pop
sub
dec
dec
ret
dec
ficompl
stos
or
or
add
xchg
mov
lret
outsb
out
arpl
aaa
sti
mov
js
jle
dec
dec
mov
mov
shll
mov
dec
sub
pushf
leave
lret
or
rorl
data16
pop
and
mov
dec
cmc
mov
out
das
roll
jnp
cli
xchg
cmpsb
inc
pop
orl
clc
push
dec
sti
ret
lods
cli
inc
bound
cmpsl
jo
sub
sbb
pop
fdivrs
xchg
test
push
loop
push
xor
movsb
in
adc
cmpsb
adc
jb
loope
adc
jns
xchg
loopne
mov
insb
mov
stos
and
data16
lcall
aam
outsb
cmpsl
popf
loop
dec
add
outsb
ss
add
in
and
add
sarb
jecxz
repz
mov
movsb
or
adcb
js
fidivrl
loope
pushf
lods
inc
test
cmp
fisubrl
mov
xchg
mov
sbb
shrb
mov
adc
jb
fstpt
clc
in
jmp
aas
lods
lret
or
cmc
xchg
bound
mov
pop
ljmp
sub
lock
sub
jge
imul
sub
jae
sub
and
into
mov
push
aaa
mov
push
add
repnz
fstps
cwtl
addr16
loope
cmpl
inc
inc
iret
pusha
push
ret
fdivrs
mov
or
fisttps
lret
mov
cmpsl
or
pop
sbb
jle
aad
mov
fmuls
repz
and
std
repnz
pop
aaa
or
cmp
mov
rorl
push
sarb
daa
out
pop
cltd
in
outsb
lret
stos
pop
mov
std
enter
daa
xor
mov
pop
jl
scas
movsb
cmp
cmpsl
xchg
push
loop
aad
push
jmp
shll
bound
adc
push
pop
ljmp
mov
decl
stos
fisubrs
pop
scas
pop
ds
sahf
xchg
pushf
notb
xor
dec
cmpsb
and
in
dec
xchg
cmp
out
jnp
jle
test
das
xchg
lods
mov
sbb
mov
leave
dec
leave
xchg
scas
ds
mov
add
pop
cmp
dec
rcrb
repz
jl
fcmove
fcom
js
mov
adc
in
sbb
adc
or
pop
adc
add
adc
out
cmp
sub
mov
xchg
das
clc
cmp
outsl
int
inc
dec
xchg
dec
inc
add
loope
push
mov
xchg
ss
dec
adc
jle
repnz
mov
mov
daa
adc
sub
adc
dec
js
and
ret
ficomps
and
ds
add
or
cmp
aaa
inc
lock
jae
sub
scas
dec
std
dec
cmp
mov
push
into
aam
scas
bound
mov
int
xchg
xor
in
cmpl
fisttpl
int
ficomps
ret
add
adc
hlt
insb
sbb
dec
lea
pop
and
stc
cmpsl
jmp
dec
or
out
arpl
mov
jnp
adc
mov
imul
sbb
arpl
cmp
out
dec
jb
jl
stos
add
daa
dec
cmp
inc
hlt
popf
stos
scas
ficoms
icebp
cmp
cmovae
test
xchg
je
rorb
pop
sbb
mov
fnstcw
xchg
clc
leave
pop
pop
testl
jnp
das
push
cmpsb
cmp
rorb
or
repnz
cmp
lret
into
out
adc
loopne
out
pop
push
or
bound
dec
mov
mov
in
sub
xchg
xor
repnz
stos
ret
jns
sbb
cmp
mov
inc
cli
push
mov
cmpsl
dec
and
test
xchg
std
cmp
cmpsl
push
mov
or
out
fwait
sub
sti
aad
sahf
pop
cmp
sarb
daa
inc
mov
push
xchg
or
loope
inc
in
imul
xor
mov
add
rcrb
cmp
add
int
sub
sbb
loop
cmc
outsl
or
fstpt
cmp
xor
or
frstor
xchg
shlb
ljmp
lcall
sub
movsb
loopne
cmp
cli
sub
nop
pusha
icebp
dec
shll
jbe
adc
arpl
das
ret
fadds
add
aas
mov
cmp
xchg
or
pop
pop
out
cli
scas
repz
lret
mov
test
and
clc
jecxz
loop
repnz
fcmovb
mov
int3
cmpsl
xchg
mov
dec
sbbl
cmc
mov
ret
imul
dec
cmpsl
fsubrs
lds
mov
adc
aad
sti
mov
ja
dec
aam
xor
and
notl
jp
dec
xor
stos
out
movsb
push
cmp
cmp
add
aam
cld
inc
in
jmp
jnp
hlt
or
sbb
jne
vmread
insb
fsts
std
andb
lock
mull
adc
cmpl
lods
sbb
xchg
rcrl
movsb
jle
loop
jo
mov
xor
cli
cmp
sub
popf
out
cmpl
ret
jno
in
jmp
jbe
add
scas
lret
ja
ds
fnstenv
jl
into
jb
mov
lea
xlat
or
out
and
bound
loope
test
jne
add
xchg
das
loop
pop
mov
jmp
jle
mov
xor
les
xchg
mov
fistpll
add
int
mov
in
sbb
loope
pusha
into
mov
popf
cltd
mov
cmp
add
loopne
xor
jecxz
ss
mov
stos
daa
je
inc
cmp
inc
scas
popf
ds
lods
stos
mov
dec
loop
bound
pusha
mov
dec
adc
nop
stos
rorl
push
inc
into
mov
adc
jle
cmc
sar
shrb
or
rolb
push
sbb
inc
jbe
jne
mov
out
int
in
push
ljmp
movsl
rclb
inc
outsb
cmpsl
push
lods
mov
mov
cmp
das
ss
adcb
xor
shlb
adc
hlt
pop
cmp
dec
out
rcr
mov
mov
fadds
pop
addb
daa
jbe
dec
sub
lods
scas
je
adc
jecxz
and
outsb
into
add
mov
lds
push
cli
pushf
out
adc
out
insb
jecxz
outsl
or
hlt
int3
inc
mov
shl
pop
and
sti
xor
cmp
xchg
outsl
loopne
test
sti
stc
sarl
cmp
mov
sbb
test
push
stos
iret
fcmovnbe
test
mov
stc
pop
and
xor
adc
push
adc
fsubs
sbb
hlt
mov
dec
xchg
pusha
idivl
aas
inc
mov
les
out
adc
mov
sbb
leave
xor
divl
dec
lcall
shrl
sti
push
stos
lahf
js
repnz
dec
addl
inc
or
addr16
dec
dec
lock
push
jb
add
add
sahf
gs
adc
inc
mov
in
aas
pop
pop
mov
lock
fs
sbb
lea
sbb
or
in
jge
imul
imul
push
fsubl
je
xchg
orl
adc
jmp
adc
xchg
test
sub
fsubl
sub
mov
das
movhps
rolb
hlt
enter
test
addl
pop
mov
mov
dec
hlt
in
ficoml
adc
jbe
imul
loopne
scas
pop
or
cmp
lahf
adc
cmpsl
subb
sub
cmp
test
inc
xor
test
jmp
cmpsl
scas
pusha
int
in
jne
dec
add
pop
xor
dec
cmc
sub
push
pop
hlt
sub
rolb
das
cwtl
pop
xor
mov
adc
push
xor
scas
bound
jl
rcrl
adc
sub
or
mov
adc
in
inc
jge
and
movsb
stc
bound
fwait
dec
fldenv
jmp
push
xchg
xor
dec
shrb
or
icebp
fwait
out
rcrl
fcomps
cmp
fcmovne
lds
and
sub
push
aam
cmp
in
dec
or
cmp
icebp
xlat
pop
rclb
add
insb
cmpsl
xor
sbb
mov
lea
lret
popa
push
sub
or
nop
adc
ret
lret
mov
xor
cmp
daa
adc
add
jg
test
popf
xchg
mov
outsb
enter
cmpb
fs
std
or
addr16
adc
lcall
mov
mov
add
mov
xor
enter
pop
and
adc
xchg
or
lahf
arpl
sub
lods
jne
mov
mov
icebp
hlt
cltd
inc
mov
arpl
jl
jg
mov
lods
xchg
sbb
mov
lds
test
ds
lret
nop
and
inc
stos
into
fcomi
pop
xchg
addl
sbb
adc
mov
inc
jmpw
out
test
xor
sub
out
iret
sar
mov
push
xchg
push
adc
dec
shl
imul
add
lret
cmpsl
pop
adc
nop
xchg
or
sti
cmp
push
movsl
mov
push
mov
das
jl
or
and
insb
arpl
pop
out
repnz
test
pop
ret
dec
jns
dec
into
fcom
dec
mov
or
and
testb
stc
out
jmp
in
daa
mov
test
cmp
in
push
sbbb
lea
scas
icebp
stc
aaa
sub
mov
or
or
pop
out
mov
push
and
rolb
jne
lds
into
and
xor
mov
cli
pop
mov
test
outsl
loop
lds
mov
add
mov
rorb
and
out
mov
iret
xchg
mov
adc
push
sbb
pop
inc
ja
dec
sbb
cmp
in
mov
pop
in
nop
addr16
xchg
adc
mov
cmp
addr16
fistl
xor
in
bound
cmpsb
das
pop
outsb
mov
pop
jnp
jle
in
push
adc
int
mov
icebp
popa
mov
push
outsl
lea
push
xchg
inc
fidivs
cld
in
xor
cwtl
push
test
js
sar
mov
pop
xor
jo
xor
sub
dec
addr16
xchg
sbb
dec
ficoms
sti
das
pop
bound
jle
nop
jecxz
out
or
adc
mov
loopne
push
xor
subb
int3
test
lcall
jbe
mov
ss
push
adc
push
fisubrs
sub
add
mov
cmp
xchg
and
pop
mov
loopne
insl
inc
mov
fisubrs
mov
pop
cmp
add
xchg
nop
movsb
lods
cmp
into
fistpll
scas
ficomps
cs
push
add
xchg
pop
sbb
mov
cmp
std
push
setb
inc
shlb
in
scas
push
daa
ss
fisubrl
mov
icebp
xchg
lea
jmp
mov
cmp
cmp
or
pop
les
pop
or
add
cmp
sbb
pop
mov
lock
leave
pushf
imul
jp
test
pop
pop
dec
popa
sti
lahf
mov
popf
mov
sar
xlat
fwait
push
push
xchg
mov
push
dec
mov
pop
in
nop
adc
outsb
sub
cld
inc
push
dec
jne
mov
in
inc
mov
mov
or
jo
in
mov
or
scas
les
iret
pop
dec
push
xor
je
stc
notb
xchg
inc
xchg
adc
fistpl
and
clc
push
and
popa
xor
adcl
sbb
dec
fwait
cwtl
sbb
movsb
mov
cmp
lret
dec
cmpsb
pop
ds
loopne
fucom
cmc
sahf
mov
lahf
movsl
loop
lret
cmp
aas
sbb
cmp
mov
inc
out
jmp
fmulp
cmp
stos
jl
fwait
jb
lret
mov
pop
push
jno
sub
push
fcoml
iret
mov
jo
pusha
cmp
sbb
cmc
xchg
clc
in
cltd
pop
pop
outsl
dec
lret
cli
mov
bound
ss
int3
rcl
pop
lods
mov
je
xchg
stos
daa
adc
dec
insb
mull
mov
xor
scas
fbstp
call
mov
lret
xor
push
leave
or
xchg
mov
sbb
outsb
in
xlat
sbb
push
push
stos
sub
in
jl
or
gs
dec
jmp
shrb
push
out
repz
stos
mov
add
xor
pop
insl
xchg
xchg
push
pop
movsb
fwait
inc
inc
sub
dec
adc
into
jns
add
jo
cmp
cmp
ss
sbbb
cmpb
push
in
jg
or
cltd
or
stos
cmc
hlt
dec
and
jb
mov
ficoml
push
test
xchg
loopne
mov
jne
xchg
dec
call
test
pop
imul
cmp
and
je
push
in
fidivl
test
xor
add
sarl
push
jae
dec
lcall
jl
imul
rorl
je
push
mov
adc
call
jmp
mov
inc
inc
out
mov
add
cmpsb
fisubrs
lcall
adc
and
mull
or
cli
xchg
mov
xchg
inc
nop
cmp
popa
cmp
sarl
mov
ficoml
cmpsl
lea
inc
pushf
in
dec
push
popf
in
dec
mov
addr16
dec
xchg
ljmp
push
cmpsl
mov
sub
ljmp
add
shlb
das
push
sti
push
sub
movsb
mov
push
pop
inc
mov
mov
push
insb
aaa
popf
mov
out
cmp
subl
dec
mov
clc
adc
xor
mov
fcoml
xchg
pop
fsts
addb
mov
and
push
in
stc
stos
das
sbb
add
inc
pushf
mov
sahf
push
dec
vmwrite
gs
adc
mov
mov
pop
and
das
scas
das
iret
mov
inc
inc
inc
xchg
xchg
cmpsb
xchg
jp
mov
xor
push
push
adcb
or
xchg
in
mov
pop
sahf
test
mov
inc
add
or
push
cmpsl
dec
add
cmp
out
push
adc
add
sbb
call
sub
fisubrl
and
and
and
and
loop
jno
and
daa
mov
push
loope
std
or
aaa
mov
dec
leave
sarl
aaa
and
sbb
sbb
xchg
xchg
fisubrs
repz
dec
fbld
daa
adc
mov
int3
mov
jg
jb
pop
test
inc
or
inc
outsb
and
jle
cmpsl
and
dec
sbb
adc
jp
shr
adc
cli
sub
mov
pushf
aam
dec
sbb
mov
loopne
mov
dec
xchg
ljmp
mov
push
push
mov
xchg
dec
ja
lea
push
or
adc
test
cli
mov
jl
jae
sbb
push
ret
and
int3
dec
xor
out
cmpsl
cmc
xchg
daa
inc
sarb
dec
pusha
shr
jo
je
pop
pop
add
mov
out
sbb
xchg
fwait
mov
shlb
loop
push
jmp
sub
out
in
test
xor
repnz
mov
in
test
dec
inc
jns
sbb
xchg
cwtl
pop
test
or
or
sub
add
or
push
fdivrs
pushf
je
jnp
jo
fwait
popf
sub
add
dec
jns
mov
loopne
dec
std
pop
pop
jmp
push
mov
adc
cmp
int
vpsrlw
out
add
orb
fcom
enter
mov
in
inc
cmp
int3
or
mov
addl
cld
xchg
push
mov
add
test
fnstcw
push
jno
mov
or
clc
mov
pop
mov
jo
and
shl
insl
popf
scas
dec
es
pop
xor
pusha
mov
push
jae
jo
cmp
popf
call
fmuls
inc
adc
mov
sub
dec
push
ljmp
add
inc
daa
ret
cmp
xor
fimuls
je
aaa
ret
call
push
xchg
shlb
imul
push
xor
rcrb
roll
xor
shlb
xchg
mov
out
icebp
out
lret
std
lods
mov
aas
push
js
test
inc
mov
jnp
fwait
pop
addr16
mov
call
cmp
icebp
pop
or
sahf
xor
xlat
sub
mov
loope
fwait
dec
inc
cmpl
xchg
in
jb
data16
popa
xor
outsl
inc
pop
fdivrs
sbb
test
fptan
mov
sbb
adc
arpl
test
push
repnz
xchg
imul
inc
sbb
xchg
insb
test
in
lea
adc
insb
call
fucomi
outsl
popl
mov
push
add
jbe
das
loopne
test
inc
clc
sbb
mov
dec
push
lock
aas
out
dec
fmull
adc
or
sbb
addb
push
idivb
adc
fs
xor
ds
adc
xchg
es
jnp
daa
mov
inc
xchg
pushf
jmp
lahf
pop
or
and
mov
lcall
pop
stos
popf
and
cmp
jmp
fsubr
and
pop
mov
addr16
sub
scas
loope
cli
sbbb
call
in
leave
pushf
push
mov
adc
mov
out
pmuludq
ja
cmpsb
cmpsl
or
push
scas
imul
out
arpl
cmp
dec
sbb
in
jb
xchg
imul
test
xchg
mov
fnstcw
enter
adc
jge
in
xchg
nop
adc
mov
jmp
sub
arpl
call
dec
jno
or
pusha
rolb
adc
loopne
daa
orl
mov
dec
cmpsl
add
gs
ret
push
loope
mov
sub
ret
ret
jg
loop
mov
sub
mov
loope
scas
stc
adc
mov
xor
imul
call
adc
leave
ja
insb
add
jge
xchg
std
jnp
mov
cmpsb
mov
or
in
into
cld
dec
jno
leave
or
xor
lret
int
sbb
sti
in
scas
imul
call
hlt
xchg
repz
sti
xor
mov
pop
mov
sbb
shr
xor
and
and
add
ret
daa
xor
and
dec
movsl
xchg
sarl
add
ss
jge
addb
fcompl
iret
pop
scas
sub
scas
shlb
or
je
and
loopne
cmpsl
inc
stos
out
jg
repnz
scas
sbb
sarl
push
flds
push
jge
mov
mov
push
pop
mov
push
mov
test
cmp
xor
in
push
jge
inc
adcb
inc
fsubr
fists
jnp
add
sti
icebp
data16
nop
mov
sbb
loope
insb
cwtl
nop
arpl
pop
les
mov
push
inc
and
and
hlt
inc
sub
ja
sti
push
xchg
jl
pop
test
aas
mov
in
arpl
adc
cld
in
sub
sub
mov
icebp
add
and
and
jecxz
pop
cli
cld
cmpsl
test
and
ficompl
outsb
inc
xor
stos
test
dec
mov
out
jecxz
add
pop
lret
xchg
jne
xchg
pop
notl
and
sbb
inc
adc
scas
mov
stos
xchg
cli
insl
mov
shr
jle
jp
lods
or
push
je
fdivr
jae
fsubrs
es
hlt
ljmp
gs
xchg
clc
or
das
xchg
jae
out
jnp
mov
arpl
xchg
xor
xchg
lcall
lahf
push
and
xchg
sbb
jge
mov
je
cmc
pop
lahf
fdivrl
out
das
lds
mov
lret
data16
nop
push
dec
xor
loopne
aad
or
shrl
insb
sub
nop
mov
and
ss
sub
ret
mov
sub
cmp
xchg
fdivs
adc
cli
add
mov
shrb
stos
lea
in
push
lahf
pop
cmp
subb
cmp
mov
sahf
daa
mov
leave
mov
and
ret
outsl
sub
push
lock
or
cltd
adc
stc
js
out
ja
xor
inc
mov
test
dec
push
insl
fidivl
adc
stc
cltd
cmp
mov
xchg
gs
sub
movsb
cmp
pop
ljmp
cmp
aam
mov
mov
inc
mov
mov
xchg
out
es
cltd
cmp
jbe
mov
sti
and
nop
mov
mov
mov
inc
sti
jo
sub
push
xchg
das
inc
int3
cmpsb
push
dec
fmul
push
jge
popa
and
inc
cltd
jbe
push
pop
add
sbb
xchg
stos
imul
sub
mov
cmpsl
mov
das
addb
adc
pop
call
and
inc
data16
pop
out
jl
sbb
loop
pop
fsubl
xor
lds
and
push
jp
dec
and
cwtl
inc
adc
adc
movsl
fs
pusha
int3
mov
adcb
cmpl
fldenv
popa
leave
mov
mov
movsl
mov
mov
lds
cmp
pop
fistl
inc
add
dec
punpckhbw
popa
xchg
jae
lret
bound
mov
cld
ficoml
dec
push
push
fldcw
push
sbb
cmp
test
inc
adc
fs
sti
add
mov
enter
inc
and
sub
sbb
mov
jnp
imul
cltd
and
mov
jmp
dec
jno
inc
scas
js
fcoml
shlb
pop
pop
out
mov
dec
jae
sub
cs
mov
cli
out
mov
push
push
cs
scas
les
mov
xchg
pop
ret
pop
mov
arpl
xchg
ljmp
adc
or
push
sbb
mov
mov
push
pop
cmp
cmc
fcompl
adc
in
or
call
xorl
push
adc
dec
inc
xchg
pop
mov
pusha
sub
int3
pop
or
push
punpckhdq
mov
popf
sarb
bound
out
rcl
cmovne
cwtl
xchg
lods
sahf
pop
int
test
testb
lods
imul
adc
or
ds
ds
mov
mov
pusha
test
fnsave
pop
mov
mov
mov
push
out
jge
scas
test
daa
jp
scas
lock
fildl
cltd
shrl
psllw
iret
outsl
sub
ret
fs
pop
sub
sub
dec
and
xchg
and
sub
cwtl
out
pop
xor
andl
orl
loope
fisubl
xchg
lahf
push
lret
mov
jmp
inc
xor
xor
dec
and
cmp
int3
dec
adc
lret
in
cmp
repz
bound
push
jle
dec
mov
sbb
sbb
stos
cmp
xor
das
sarb
pop
mov
inc
xor
mov
or
mov
and
push
xorb
mov
clc
aaa
imull
aas
adc
sub
cmp
jl
lods
mov
pop
cmp
shll
add
pusha
inc
lds
mov
outsl
icebp
iret
xchg
pop
stos
sub
insl
and
mov
add
fs
iret
pusha
test
dec
cmp
shl
xchg
repz
adc
test
adc
icebp
bound
push
add
lret
sub
les
xlat
ss
fnstcw
lret
mov
cmpsb
xchg
jecxz
jmp
xchg
das
fmul
iret
test
or
inc
mov
test
add
fwait
test
cs
fstps
or
xchg
mov
push
push
js
cmp
or
pop
outsl
sub
sbb
in
movsb
repz
outsl
xchg
aaa
push
jle
rclb
stos
dec
mov
insl
pop
push
mov
lock
sub
or
ljmp
fnstcw
out
stc
xchg
sbb
pop
repnz
enter
fwait
and
cmp
xor
jbe
je
and
and
or
dec
xor
adc
dec
movsb
add
inc
cmp
adc
lahf
mov
out
xor
lret
mov
lcall
xchg
cld
and
daa
movsl
pop
hlt
dec
test
jo
jecxz
lock
pop
pop
lret
adc
jge
cltd
mov
push
inc
ljmp
lret
mov
rorb
fistps
sbb
dec
aad
movsl
sbb
jae
imul
push
lcall
inc
push
idivb
nop
pop
xor
out
mov
aaa
arpl
mov
insb
push
insb
cmp
std
push
arpl
add
sbb
xor
and
lds
test
nop
lods
rcll
lcall
movl
sub
stos
xchg
pop
inc
or
sub
loop
fsubrs
stc
inc
mov
mov
imul
mov
jae
pop
mov
xor
and
shrl
bound
xor
mov
ret
ss
sti
loope
ds
cmpsl
in
hlt
and
subb
std
adc
aam
sbb
adc
add
aaa
ja
adc
xor
pushf
shl
cmp
lds
pop
push
loop
call
pop
inc
inc
int
pop
cli
xor
repnz
data16
out
pop
cmc
shlb
out
mov
xchg
bound
jbe
adc
sar
mov
fldenv
addb
out
pop
insb
das
inc
ret
and
lahf
lret
lock
or
add
incb
pop
mov
sbb
or
js
jp
pop
jno
add
mov
std
push
push
sub
inc
xchg
scas
aas
jmp
out
add
outsb
mov
out
mov
nop
fstl
cmpsb
dec
pushf
lret
lods
les
jne
test
notl
adc
adc
fildl
sub
repz
xchg
das
dec
add
sbb
in
imul
mov
pop
frstor
pushl
sub
inc
rorl
sub
pop
fstpt
ljmp
xor
adc
pop
inc
pop
sarb
mov
sahf
pop
xor
in
iret
xor
pop
xor
jg
add
add
ficoms
fwait
jecxz
dec
jns
lret
fdivr
inc
ljmp
lea
fwait
mov
filds
roll
insl
xor
gs
lods
fstpt
jo
or
sub
push
andl
or
popa
pop
push
sbb
add
push
mov
push
outsb
mov
pop
inc
push
mov
xor
mov
cmp
enter
pop
shrb
lock
flds
fdivrl
add
std
loope
add
lcall
nop
sbb
rorl
cs
inc
aam
jnp
out
pop
mov
cmp
test
mov
pushf
mov
repnz
push
dec
pop
cmpsb
mov
push
lods
jg
cmp
and
aad
in
imul
pop
shlb
movsb
adc
daa
cmp
lods
mov
xor
pushf
mov
and
jl
jge
add
addr16
syscall
insl
aaa
mov
sti
mov
mov
stos
jae
popa
xor
sbb
aad
mov
lds
aam
or
xor
dec
add
shlb
push
adc
fiadds
inc
pop
lret
cmp
out
mov
push
cltd
pop
dec
pushf
push
xor
jl
mov
and
int
pop
inc
lea
stos
rol
push
hlt
adc
push
inc
adc
push
add
jae
or
mov
mov
sbb
xchg
or
adc
pop
scas
jecxz
sbb
lret
inc
push
cmp
shlb
inc
sub
push
test
mov
shrb
sub
cwtl
mov
repz
xor
ja
icebp
mov
cmc
pop
push
ds
pop
xchg
jmp
cmp
sbbl
xor
mov
cmc
ljmp
loope
les
outsb
sbb
fiadds
xchg
jl
push
xchg
test
addr16
mov
in
push
lods
mov
gs
xchg
mov
inc
out
pop
mov
inc
jns
adc
mov
mov
pushl
inc
mov
out
jl
cmpsl
inc
push
jge
movsb
and
arpl
outsl
xchg
fisubl
adc
adc
mov
pusha
in
add
test
je
mov
sub
jp
push
pop
aaa
mov
lcall
jg
xchg
out
std
xor
in
imul
xchg
or
push
xchg
icebp
push
sub
pop
jmp
mov
sbb
pop
das
pop
adc
hlt
into
icebp
push
scas
dec
cltd
aad
jecxz
push
pop
dec
and
outsl
adc
push
cmp
ja
mov
inc
sub
lahf
in
sarb
aaa
pop
dec
ljmp
dec
stc
dec
imul
mov
cmp
icebp
push
add
push
dec
jae
cmp
cltd
dec
sbb
push
mov
inc
sbb
fdivr
and
enter
jmp
jbe
stc
call
xchg
test
ljmp
sub
add
icebp
xchg
aad
fs
or
mov
stos
pushf
pop
shll
mov
adcl
inc
pop
lahf
and
fstpt
call
mov
stos
sbb
rcrl
push
and
push
and
fldl
push
mov
test
das
jecxz
mov
fsubrl
out
fidivrl
aas
loopne
add
sub
iret
sbb
stos
inc
ljmp
pushf
ficoml
adc
in
insl
jge
fwait
leave
and
push
cmp
jp
lds
add
lock
test
lahf
jne
jae
cmp
scas
push
jmp
and
sub
mov
dec
xor
test
mov
or
lods
cmp
repnz
mov
and
lock
xchg
add
aas
sbb
sbb
out
imul
or
pop
pushf
inc
xchg
in
rclb
in
in
out
or
mov
loopne
and
inc
nop
lods
sub
dec
lods
jne
imul
gs
fdivs
dec
testb
inc
aam
js
testl
adc
rol
sub
xor
movsl
mov
jb
das
xchg
gs
out
out
movsl
in
in
test
mov
int
ss
cmp
dec
mov
cmpsb
jnp
or
fxch
lods
aas
mov
sti
dec
mov
pop
pop
inc
ret
and
fs
sahf
bound
lock
push
mov
mov
inc
cmpsl
fcmovnb
fisubrl
imul
add
test
les
ss
mov
stos
sbb
add
xchg
dec
fwait
bnd
inc
iret
lods
add
xchg
bound
loop
sbb
mov
cmp
leave
dec
cmp
data16
pop
subb
pop
inc
aas
add
dec
add
pop
inc
cmpsb
cmc
jne
push
repz
loopne
push
push
stos
add
dec
nop
mov
mov
cmp
int3
insb
cld
fwait
and
xor
add
pop
xor
aaa
add
xchg
cmp
cmp
rolb
xchg
idivl
mov
inc
dec
test
inc
les
std
inc
lret
repnz
inc
lcall
test
xlat
scas
dec
pop
sub
xchg
mov
cmp
imul
test
scas
sbb
dec
jg
movsb
in
in
dec
ds
or
sahf
push
imul
xor
xor
sub
add
lahf
jl
fsubrs
out
adc
dec
or
icebp
add
mov
int3
ja
loope
push
sahf
lahf
mov
mov
dec
test
add
jne
js
mov
dec
adc
ja
sbb
push
xor
mov
and
enter
pop
dec
mov
out
mov
pop
dec
xchg
or
jnp
inc
into
cmc
cmpsl
jmp
rol
fwait
test
ficoml
sahf
xchg
mov
nop
fld
cld
mov
pop
sub
push
mov
mov
xchg
or
lahf
or
maxps
sub
enter
mov
mov
enter
js
jmp
mov
orb
adc
or
ret
aad
or
test
roll
popa
pop
lods
push
mov
inc
adc
aam
popf
lret
ss
jmp
cmp
sub
in
ffreep
shr
stos
out
inc
xlat
ja
xor
cmp
sbb
or
cmp
loop,pn
insb
lret
fstp
add
mov
loop
push
add
arpl
ret
add
cld
das
xchg
test
test
xchg
pop
call
lret
loopne
mov
hlt
jno
xchg
leave
sarb
push
push
outsb
lret
test
or
repnz
push
scas
dec
add
push
sahf
aaa
cmp
xchg
fisubs
push
adc
cli
lcall
test
push
mov
inc
dec
aad
in
dec
test
sub
sbb
mov
mov
pop
or
je
sti
negb
inc
int3
push
ds
fsubs
das
stos
int3
mov
sub
movsl
mul
insl
mov
cltd
arpl
fiaddl
ljmp
adc
jb
mov
int
in
adc
mov
cld
push
jmp
repnz
xor
xchg
lock
into
xchg
addr16
dec
push
stos
adc
jnp
testb
dec
scas
inc
adc
mov
ljmp
fnsetpm(287
cmp
xchg
jns
lahf
andb
aam
pop
ret
cwtl
orl
mov
mov
push
mov
mov
nop
and
xchg
ja
aad
pop
inc
addr16
add
icebp
dec
cmpsl
xchg
faddl
icebp
push
push
mov
ljmp
inc
mov
pop
cmp
popf
in
mov
out
push
xchg
adc
out
jge
jle
lret
lcall
inc
push
sti
or
sbb
lret
mov
ljmp
dec
fucomp
jo
xorl
and
rcrb
bound
inc
nop
inc
pop
cli
push
rclb
imul
outsl
fistl
add
fistpll
ret
pop
shll
jbe
subb
xchg
stc
cmpsl
mov
cmp
sbb
negb
test
inc
xchg
scas
out
ds
cs
xchg
pop
lods
xor
mov
fs
scas
sub
sti
shlb
in
push
sti
jge
outsl
orl
xor
or
jno
pminub
stc
lret
sbb
jo
jns
mov
cmp
mov
out
mov
jg
roll
mov
xchg
rcll
popa
and
bound
dec
mov
inc
push
xlat
mov
out
push
cmpsl
imul
ljmp
ja
and
fwait
jae
mov
scas
shl
fst
ss
mov
xor
popf
sub
push
dec
inc
pop
scas
add
idivl
pop
cli
mov
das
arpl
jbe
rolb
push
popa
sbb
out
push
or
adc
mov
outsl
sub
adc
or
movsl
push
insb
cwtl
inc
push
pop
xchg
and
lcall
mov
or
mov
out
outsl
jae
sub
jge
mov
xchg
addb
stos
sbb
dec
dec
mov
sub
push
ljmp
nop
stc
imulb
adc
aas
cli
out
stc
mov
ss
lds
sahf
cld
shrl
pop
jp
xor
cli
sub
jne
repz
stc
dec
cli
outsl
fcomip
rorb
scas
enter
dec
sbb
cmp
sub
pop
movsl
in
mov
js
inc
jnp
out
out
pop
mov
mov
pop
rep
cmp
push
test
jno
xchg
pop
lods
and
aaa
cltd
push
scas
int3
test
xchg
inc
nop
inc
inc
dec
inc
mov
cld
fs
mov
mov
and
lea
pop
mov
jae
add
push
ret
js
jae
pop
loopne
jb
jbe
adc
fs
jp
jg
or
lcall
nop
shlb
stos
testb
sub
xchg
popf
ss
dec
les
data16
movsb
cmp
adc
jne
add
mov
inc
mov
mov
jns
repnz
ljmp
jge
xor
inc
ds
lods
or
lcall
add
sub
in
test
pop
or
dec
sub
inc
bound
hlt
addr16
fs
lods
std
es
sub
or
add
or
movsb
dec
negb
or
sti
or
fsubrp
jge
cmp
inc
cmpsl
pop
push
inc
popf
xor
inc
dec
add
sti
xor
xchg
stos
push
or
mov
adc
daa
add
jmp
in
scas
insl
movsl
sub
aas
aam
mov
out
add
cmp
add
std
dec
lods
inc
or
out
mov
sub
add
sub
bound
or
xor
push
movsb
mov
sbb
mov
inc
out
jp
lods
mov
test
add
push
iret
lds
call
push
add
push
push
mov
or
icebp
in
ds
mov
xchg
push
mov
cmp
dec
sbbl
dec
mov
cmp
cmp
mov
aad
mov
sbb
push
sub
sbb
ja
in
push
dec
pop
add
pusha
mov
lds
daa
sbb
gs
push
xchg
dec
jo
mov
aam
mov
push
aas
adc
mov
cwtl
mov
iret
sub
mov
jbe
or
lods
out
pop
add
pusha
mov
stos
mov
xchg
stc
cmc
test
pop
adc
mov
dec
imul
repz
push
std
aam
lret
out
jl
xor
dec
stc
mov
daa
pop
jno
inc
mov
jnp
jb
decb
mov
push
sbb
push
lods
push
fwait
movsl
sub
lret
inc
imul
xorb
push
scas
insl
push
add
dec
xor
mov
lcall
outsl
popa
xlat
push
push
pop
xchg
adc
into
stos
mov
push
or
and
insl
xchg
je
in
xorl
fstpt
sbb
cmpsl
xchg
or
daa
jmp
pop
and
jg
or
ja
fs
inc
fildll
ss
repz
hlt
scas
ja
scas
sahf
adc
js
push
sbb
dec
mov
movsb
pop
pop
and
call
mov
fwait
outsl
out
lds
cli
xchg
test
push
arpl
loop
loope
push
lea
pop
xchg
jl
das
dec
sub
fisubrl
popa
sbb
push
mov
cmpb
aaa
je
jnp
call
push
pushw
cltd
mov
hlt
add
in
jo
and
das
sub
jmp
pop
xchg
test
mov
insb
jae
mov
xchg
sti
into
mov
lods
cmp
or
adc
pusha
inc
loope
add
push
push
es
stos
adcw
pop
or
xchg
sbb
mov
popa
push
sbb
push
pop
call
addb
sub
or
push
notl
mov
leave
cmc
pop
push
pop
cmc
testl
out
and
imul
add
add
fimull
mov
dec
ss
xor
cmpsb
jb
xor
test
clc
dec
push
mov
in
mov
sbb
xor
jnp
ja
imul
jle,pt
inc
push
add
adc
les
jecxz
ret
mov
movsb
imul
mov
loopne
sub
or
mov
push
inc
sar
jns
add
hlt
icebp
inc
stos
and
ja
sbbb
jbe
push
pop
cltd
repz
test
mov
xlat
xchg
icebp
add
or
jmp
mov
mov
inc
cmpsl
sbb
aas
sgdtl
and
jmp
test
push
mov
jne,pt
dec
cltd
sub
enter
jmp
enter
pop
dec
pop
xor
mov
out
test
push
loop
loop
fsubr
loope
test
push
dec
int3
push
push
pushf
int3
lods
insb
xlat
fadd
sub
arpl
sub
das
popf
cmp
idivl
fnsave
addw
aaa
jno
and
scas
mov
lcall
xor
sbb
xor
mov
cmp
cmp
push
fdivr
dec
xor
mov
pop
dec
xchg
int3
add
mov
imul
cmpsb
mov
lea
push
mov
repz
rclb
loopne
je
in
jg
jecxz
mov
jae
push
jl
mov
push
outsl
call
repz
add
cmpsb
cld
stos
shrb
int
push
mov
cmp
adc
sarl
xor
jg
jecxz
adc
rcll
fisubs
daa
sbb
lock
sar
jae
push
pop
fwait
push
sbb
jno
mov
test
bound
or
fnstsw
mov
ret
inc
mov
mov
ss
mov
iret
scas
mov
fsubs
test
shlb
mov
bound
mov
inc
and
cwtl
test
shlb
mov
cmp
sbb
mov
adc
inc
push
jg
jge
cmp
push
js
push
adc
fnstsw
or
lret
ja
stos
sub
cmp
mov
cmpsb
icebp
js
or
jnp
pop
mov
push
bswap
das
sub
and
adc
cmp
movsl
xchg
aaa
insb
or
xor
mov
mov
movsb
push
aas
ljmp
inc
ret
mov
cld
out
inc
pop
sar
es
movsl
sub
orb
mov
add
fldl
loopne
xor
xchg
add
mov
sbb
cs
inc
and
std
sahf
push
addr16
iret
jbe,pt
dec
outsb
push
scas
mov
push
mov
xor
repz
frstor
aas
add
push
or
mov
adc
je
mov
shlb
pop
jg
sbb
add
fs
loope
push
imul
out
and
lods
cli
std
and
sbb
test
xchg
jns
cmp
das
add
mov
imul
iret
mov
xchg
xor
mov
xchg
xchg
sbb
cmc
push
in
test
add
xchg
nop
negl
and
adc
out
xlat
adc
sub
mov
mov
loope
adc
push
pop
repz
cs
xchg
xchg
fmuls
loope
push
jl
push
push
iret
insb
mov
subl
into
in
rcr
mov
scas
pusha
lea
idiv
sbb
mov
or
pop
sti
test
xchg
inc
mov
and
rorb
or
push
sub
in
repnz
dec
sbb
adc
jns
in
push
and
xchg
insb
jae
pop
and
pop
rorl
pop
sbb
jns
xchg
shrl
ret
movsb
jp
mulb
loopne
in
fcmovnbe
mull
pop
adc
push
cmp
push
test
jle
adc
mov
xchg
lock
out
xlat
mov
lds
or
push
fnstsw
adc
push
dec
push
mov
call
imul
cmp
cli
es
iret
sbb
daa
js
cmp
lea
lret
mov
enter
iret
cwtl
xchg
rclb
xchg
mov
jae
sarl
cmpb
and
jns
loope
aad
lahf
xchg
sub
leave
roll
bound
sbb
xchg
stos
int3
aad
lahf
sub
mov
add
int3
sub
push
arpl
jp
fs
xor
push
icebp
repnz
inc
jecxz
fsts
mov
pop
inc
roll
mov
jns
inc
mov
jns
ds
fsubrl
sahf
cltd
movsb
sub
adc
outsl
cmp
pop
cmp
aam
mov
or
jbe
in
out
push
add
jl
cmp
mov
sbb
adc
loope
sub
inc
mov
mov
pop
aad
xchg
hlt
lret
mov
jae
cmp
dec
pshufw
shl
add
dec
rclb
pop
xchg
mov
lahf
pop
and
jnp
sti
mov
nop
js
outsb
sarl
or
mov
dec
scas
mov
cmp
cmp
lcall
leave
xorl
jl
dec
stos
mov
fmulp
mov
movsb
popf
lods
sub
xchg
stos
fmull
lret
mov
test
mov
scas
daa
sbb
insb
push
sbb
mov
jg
jno
int3
pop
fisttpll
setb
xor
sarl
mov
cmp
sub
pop
xchg
addr16
xchg
sbb
mov
cli
mov
mov
xchg
es
or
aad
and
fiaddl
lock
xor
sbb
inc
and
les
push
mov
fisttps
lret
jecxz
mov
dec
pop
dec
mov
in
mov
cld
sbb
mov
jge
mov
push
fdivrl
cmpsb
fimuls
cmp
mov
shl
and
sub
sub
pop
xlat
in
subl
mov
cmpl
scas
adc
xchg
mov
xor
rcl
pop
inc
jne
or
mov
rorl
repnz
sbb
and
int
fwait
dec
pop
jp
push
imul
sbb
mov
stos
cwtl
pop
mov
fwait
js
sub
push
in
jg
rcl
iret
mov
mov
cmpl
mov
je
ror
dec
in
inc
aam
mov
js
sahf
dec
out
and
loopne
insl
push
int3
mov
and
xchg
cmp
ret
popl
loope
or
inc
sbb
cli
push
popf
es
popf
ljmp
jns
lods
int
in
adcb
pusha
out
sahf
insl
push
inc
fstpl
fcomp
sbb
les
jle
sub
mov
sub
lods
repz
fdivs
into
and
jmp
cmp
xor
mov
btr
mov
popf
adc
or
xchg
sub
jo
movsb
sub
fsubl
les
sbb
outsl
ds
gs
stos
mov
fstpt
insb
loopne
in
lods
push
mov
push
ffree
fcmovb
lret
jno
mov
jno
mov
mov
sbb
dec
aaa
push
pop
enter
mov
mov
fs
imul
in
dec
xchg
pop
leave
into
insl
inc
imul
in
movsl
jecxz
jo
inc
sbb
fcomip
jp
iret
cwtl
test
movsl
mov
lcall
les
push
sbb
out
add
xchg
cmp
or
sti
pop
movsb
imul
hlt
or
pushf
sbb
add
jno
push
mov
jecxz
cmpsb
cs
and
push
es
sbb
and
jmp
pop
dec
cmp
outsl
decb
pop
fistpl
inc
test
test
fwait
std
pop
int3
leave
mov
loopne
in
mov
jle
cmp
scas
mul
or
std
cwtl
stos
cmc
movsl
movsl
inc
dec
mov
ret
imull
xchg
les
pop
mov
jg
sub
xor
push
xchg
ret
aaa
or
jle
adc
sub
jae
mov
cltd
flds
pop
xor
and
pop
hlt
outsl
cmp
and
iret
mov
sub
jbe
sub
mov
add
mov
call
jb
rcrl
mov
fistpll
pusha
sbb
dec
xorl
rcrl
and
lds
jg
xchg
xchg
lahf
xor
xchg
repz
adc
push
out
mov
push
mov
dec
dec
jae
mov
outsb
cmpl
cs
xor
not
or
jns
mov
mov
adc
push
test
rclb
inc
push
jl
dec
int3
pusha
cli
adcl
xor
pusha
or
jnp
push
movsb
fldz
dec
dec
jp
pop
ds
push
adc
stos
push
loop
inc
stos
rcll
sahf
xlat
outsl
ds
push
sarb
pop
inc
pop
enter
movsl
jbe
dec
cmp
push
or
dec
mov
cmpsb
and
xlat
cld
mov
mov
icebp
mov
jle
jl
lock
mov
xor
and
outsl
or
out
mov
cmpsb
shrb
push
sbb
push
rorb
add
test
sbb
xlat
icebp
mov
cli
cmp
sbb
in
fs
les
xchg
scas
aad
test
daa
rcll
clc
xchg
jmp
lods
push
popa
mov
jg
sti
jne
orl
adc
ret
jmp
pop
inc
sti
out
insb
data16
nop
push
rep
xchg
fcompl
arpl
or
mov
fcomp
daa
push
and
push
sub
xor
mov
mov
js
daa
pop
shlb
lret
pop
jl
jo
in
fwait
sub
enter
cmp
ficomps
mov
add
sub
es
mov
mov
dec
mov
cmp
xor
push
scas
cmp
cs
jo
je
jo
xor
xchg
mov
push
xchg
pusha
es
in
xor
adc
xchg
mov
mov
rclb
clc
leave
stos
mov
push
int
add
pop
imul
cmp
les
pop
xor
push
mov
repnz
dec
sub
pushf
insl
pop
xor
push
jg
or
add
testb
mov
and
jmpw
add
push
ret
xchg
inc
pop
adc
xor
push
out
push
inc
pop
cwtl
out
fcmovu
sbb
mov
repz
cmpsb
fimull
sbb
push
aas
inc
and
fisttpll
fisttps
xlat
hlt
push
or
add
dec
and
mov
push
and
inc
fwait
rclb
pop
fscale
cmp
fwait
mov
lcall
jno
xchg
inc
fcompl
aam
sub
jg
sbb
xor
xor
enter
addr16
pop
xchg
pop
aas
and
repnz
or
dec
cmp
mov
inc
xchg
xor
push
adc
and
xchg
xor
mov
push
pushl
add
mov
fldenv
js
imul
sub
je
and
stos
mov
inc
push
push
lret
aaa
out
add
xor
xchg
es
repz
cmp
pop
mov
int
scas
sbb
pop
and
lahf
dec
xchg
xlat
das
add
imul
xlat
lahf
stos
inc
call
stc
and
dec
or
push
or
jp
xchg
fsin
dec
sub
xor
fldt
imul
xchg
jmp
mov
dec
data16
out
in
in
fchs
dec
inc
sbb
jbe
xchg
sub
cli
and
sbb
pop
loope
dec
popa
mov
push
aad
lret
jne
xorb
das
fnsave
mov
repnz
out
push
sbb
push
lea
ret
lea
cmp
jo
sbb
lahf
sub
sub
mov
test
out
xlat
jle
fistps
sub
dec
ret
cmp
mov
jp
mov
je
rcrb
js
lret
stos
push
cmp
test
fcoms
xlat
xor
lods
test
adc
sub
mov
jo
and
mov
lock
hlt
dec
outsb
loope
das
stc
fwait
mov
insl
inc
jl
push
fnsave
outsb
js
jnp
pop
adc
lock
push
inc
and
xchg
clc
add
dec
mov
fwait
pop
mov
mov
push
lret
sub
and
inc
cmp
inc
push
mov
mov
mov
imul
sar
dec
add
jle
cmp
jge
or
jge
popf
add
test
insl
aad
and
fidivrs
std
repz
imul
xchg
or
test
jecxz
out
mov
aaa
adc
mov
std
lea
mov
loope
and
push
push
lods
stos
push
insb
mov
xor
es
maskmovq
notl
push
out
jg
xlat
or
ds
stc
hlt
xchg
arpl
pop
mov
fisttpll
pop
roll
std
sub
jecxz
push
icebp
inc
add
aam
andb
into
cs
insl
pop
mov
lret
push
xchg
mov
pop
push
pop
shrb
add
push
sbb
inc
es
xchg
and
iret
dec
iret
inc
jnp
push
out
sbb
and
pop
cmp
das
inc
in
into
lods
xchg
scas
mov
mov
jmp
dec
cmpsl
add
push
push
test
adc
mov
and
push
ja
jno
test
orl
xchg
rorb
and
xchg
icebp
sub
push
mov
mull
or
jae
and
push
sub
pop
adc
mov
hlt
jl
or
lret
pop
xchg
mov
sub
out
mov
adc
sbb
jp
add
cmp
mov
fwait
adc
pop
and
cld
jg
cs
pop
stos
lahf
orl
add
hlt
xlat
into
jle
std
fldz
sbb
add
and
or
sti
jne
cs
lea
sub
xchg
and
mov
jecxz
dec
dec
pusha
rcrl
jns
insl
stc
sub
fisubs
imul
test
jp
adc
cmc
push
sub
inc
jge
in
or
into
pop
pop
push
dec
mov
ret
sub
push
cli
in
add
xor
pop
out
push
insl
sub
mov
std
sub
adc
mulb
jmp
bound
jno
inc
stos
fsubl
test
cli
lahf
fisubl
jne
popa
das
hlt
insb
dec
repnz
hlt
das
xchg
pushf
dec
mov
dec
adc
pop
xchg
xchg
fisubl
bound
or
jle
jecxz
js
mov
loop
cmp
adc
mov
dec
icebp
or
out
sahf
lret
repnz
dec
jo
fisubrs
ss
in
lea
mov
popa
xor
scas
or
sbb
and
loop
fs
sub
mov
lret
repz
and
mov
pop
subl
mov
in
lods
stos
ret
xchg
mov
out
mov
push
cmpsb
inc
and
aad
sbb
loopne
loop
outsl
sbb
hlt
xchg
mov
sbb
sbb
inc
adc
jne
enter
cmp
mov
jno
sbb
pop
aad
movsb
fsubr
xor
lahf
pushl
dec
dec
out
xor
repz
xchg
imul
in
cmp
lods
lcall
push
or
jns
xchg
sarb
mov
mov
mov
adc
mov
shrl
pop
sub
in
hlt
fcmovnbe
mov
mov
mov
into
jbe
lock
dec
fstps
adc
ret
pop
lcall
push
inc
out
lock
inc
dec
movl
inc
aaa
in
insb
scas
repnz
xor
sti
mov
dec
push
push
imul
aaa
bound
jno
cmp
fs
sbb
icebp
jne
push
pop
stc
adc
dec
loop
sbb
jge
mov
push
push
mov
insl
push
cmpsb
sarb
inc
rcrl
cmp
jge
inc
push
sbbb
inc
xchg
lock
test
dec
cli
inc
inc
mov
test
jne
xchg
out
stos
rcrl
aam
dec
pop
aaa
das
repnz
mov
push
fcomps
push
int
fs
jno
inc
xchg
push
push
jle
and
or
popl
sub
ja
fmul
push
repz
loop
sub
sbb
out
mov
push
inc
mov
mov
test
pop
sbb
mov
test
push
outsl
icebp
insb
imul
add
test
loope
cwtl
ret
bound
push
adc
clc
ja
xor
mov
stos
mov
jp
mov
and
xor
iret
or
mov
pop
popa
lock
repz
push
cmp
test
or
sub
xchg
call
in
mov
lods
xchg
imull
jl
mov
cld
cmp
sub
ljmp
dec
fwait
sub
arpl
pop
fimuls
cmp
push
lret
sahf
jl
aam
mov
sbb
mov
mov
mov
in
push
je
outsl
std
pop
mov
dec
lds
aas
lret
or
push
mov
dec
call
mov
mov
ret
leave
pop
movsb
punpckhwd
das
xorl
ljmp
mul
pop
rclb
in
inc
inc
test
xchg
or
sbbl
enter
in
and
inc
sbb
adc
out
adc
jge
and
cltd
dec
je
and
clc
xlat
shrl
cs
sbb
cmc
cmc
sahf
cvtdq2ps
xor
mov
dec
andl
mov
mov
jno
js
dec
and
cmp
push
sbbl
sbb
jl
push
push
push
sub
adc
and
sbb
xchg
loope
ror
adc
xchg
sub
bound
push
out
and
rcrl
dec
int
or
outsb
scas
dec
pop
push
sub
xchg
dec
pop
push
lret
push
loopne
cmp
cwtl
add
push
or
and
movsl
lea
inc
insl
cmp
jmp
push
mov
negb
sub
out
dec
aad
cmpsl
les
ljmp
call
cs
xchg
push
arpl
movsl
push
dec
andb
je
sbb
mov
xchg
push
outsl
les
sub
sub
jmp
aaa
xor
adc
lods
or
inc
in
test
dec
sbb
notb
repz
or
jmp
movsl
sbb
ret
push
ja
cmc
popa
push
andl
lret
leave
jae
adcl
repnz
cli
pusha
es
loope
xchg
je
popf
lret
sub
mov
insb
scas
and
loop
lret
xchg
test
xchg
sub
fnstcw
mov
daa
out
jmp
pop
daa
add
cs
cmpsl
cmpsb
cld
loop
jecxz
lods
iret
sbbb
int3
lret
mov
add
dec
nop
pop
xchg
lahf
ret
lcall
adc
xchg
hlt
mov
mov
mov
jnp
call
nop
adc
xchg
dec
mov
pop
or
lcall
into
or
popf
stos
jbe
push
outsl
fstps
imul
test
or
cmp
mov
cmp
subl
mov
sbb
jnp
add
add
mov
inc
pop
pop
loope
popa
xchg
inc
adc
xor
insb
push
fists
dec
xchg
data16
movsb
lret
jne
ret
ss
add
or
mov
nop
push
ljmp
cli
pushf
call
sub
inc
push
and
imul
rcll
cld
xchg
out
push
lods
mov
xor
int3
sub
inc
jg
in
lds
mov
int
ja
push
pusha
fimull
cmp
dec
xor
xor
mov
mulb
int3
lret
mov
les
hlt
repnz
mov
jp
or
scas
mov
push
adc
fsubl
mov
filds
xchg
repz
shrl
inc
shl
fisubrl
mov
orl
bound
push
jle
sub
sub
lcall
lods
ljmp
or
enter
inc
xchg
insl
mov
pop
jg
outsb
cmp
call
xchg
xchg
mov
push
movsb
mov
adc
into
pop
ss
mov
or
pop
hlt
sub
fildl
add
pop
repz
sbbl
xor
into
and
dec
sbb
pop
mov
push
test
and
sub
arpl
fisttpll
or
pop
dec
addr16
aas
jae
cmp
mov
pushf
fimuls
or
repz
sbb
and
popf
add
notb
ficoml
jl
fs
fisubrl
jmp
fisubrs
ret
push
and
cmp
popa
pop
sub
xor
lahf
pop
lds
jns
in
mov
repnz
sbb
xor
stos
push
push
xor
ds
mov
dec
and
imull
lret
cwtl
ds
push
pushf
or
fidivrs
nop
cmp
inc
cs
sub
dec
ljmp
roll
push
push
mov
ficoms
xor
daa
test
cmpsl
scas
dec
test
cltd
cmp
pop
hlt
mov
daa
into
ret
ret
nop
movsl
xchg
or
stos
sub
in
cmp
and
test
add
jae
mov
jne
sti
mov
add
jo
lods
pop
out
fs
shlb
out
int
mov
movsb
outsl
xor
mov
shlb
xchg
sahf
xor
pop
loope
sub
out
test
mov
shlb
jns
imul
ficoms
mov
inc
dec
add
jb
cmp
jns
mov
mov
cmp
shrb
inc
int3
jl
orl
in
les
imul
cmp
or
stc
add
stc
scas
les
loope
xor
pop
and
loopne
and
mov
lods
insl
mov
movsb
jl
jbe
ds
mov
addl
add
aaa
cltd
cmp
incl
mov
cmpsb
mov
mov
sub
popa
mov
push
cmp
dec
ljmp
and
stos
aam
inc
rcr
dec
popf
notl
insl
mov
mov
jns
loop
sbb
iret
dec
aas
xchg
stos
into
sbb
pop
sbb
insb
rcl
daa
push
in
add
push
mov
push
inc
jg
dec
stc
call
xorb
or
loope
mov
mov
fldl
jno
adc
xor
stos
mov
dec
add
sub
addr16
lods
xchg
mov
xor
addr16
ret
inc
push
cmp
int3
out
aam
push
cmp
daa
ss
push
mov
push
push
jo
shrb
das
sub
mov
clc
or
dec
stos
je
test
xor
push
aas
dec
lcall
js
inc
movsl
dec
jmp
jle
jp
call
lret
mov
aas
cwtl
push
push
jge
adc
dec
push
rcl
fisubrl
addb
insb
mov
mov
hlt
jnp
xor
hlt
jno
sub
fstps
mov
into
jb
inc
xchg
push
jp
push
into
dec
mov
cld
pop
imull
dec
fs
std
lea
xchg
out
jbe
inc
mov
pop
out
lret
mov
int3
ret
cmc
cmp
orl
pop
jns
xor
adc
push
repz
movsb
dec
shll
ret
jp
ret
dec
mov
popl
repz
adc
sub
xlat
cld
lds
pop
icebp
mov
push
jne
adcl
lcall
flds
cmp
dec
dec
sbb
sub
sbbl
imul
lret
push
shlb
ja
pop
jmp
lea
imul
cwtl
mov
lods
add
stos
enter
cmp
or
cwtl
imul
mov
into
adc
lods
or
jl
inc
sbb
pop
pop
pinsrw
adc
dec
notb
pop
ret
xchg
rclb
dec
add
popf
testb
pop
xchg
dec
push
adc
testb
fstpt
lds
cltd
mov
jb
addr16
movsb
pop
adc
mov
test
sbb
stos
mov
dec
js
bound
shr
nop
js
mov
inc
mov
jp
and
push
mov
loop
xchg
push
cmp
rorb
add
adc
cltd
iret
mov
adc
xchg
xorb
inc
stos
adc
shlb
xchg
mov
jnp
fcompl
mov
dec
cmp
mov
or
push
xor
cmp
jne
adc
inc
ficomps
and
pop
dec
mov
mov
ficomps
xlat
sub
push
mov
mov
dec
subl
stos
test
sub
mov
dec
push
daa
shlb
push
inc
and
into
xor
pop
in
iret
dec
sbb
ss
imul
inc
dec
mov
inc
pop
add
ljmp
orl
in
cmpsl
outsb
jge
or
add
pop
sbb
mov
movsl
scas
and
clc
dec
inc
jae
mov
movsl
pop
cmpsb
xchg
js
sbb
mov
push
push
sbb
or
push
daa
xchg
fsubl
xchg
cmpsl
push
data16
ds
popa
push
outsb
jbe
cli
dec
movsl
icebp
std
test
iret
mov
fadds
push
push
mov
imul
pop
in
stc
push
cs
pop
pop
push
es
repz
inc
xor
cmp
jecxz
push
mov
lods
pop
mov
das
xor
dec
pop
sbb
icebp
xor
push
push
mov
ds
sbb
iret
jae
xchg
aam
in
scas
pusha
adc
add
fsub
or
jns
rcrb
aaa
pop
scas
in
loop
call
push
jnp
daa
ja
push
hlt
pop
push
sbb
jge
jnp
fidivrs
push
popf
pop
adcl
dec
sti
stos
inc
mov
xor
aam
addr16
xor
xlat
fcomps
es
xorb
add
das
dec
and
mov
shll
imul
mov
sub
jmp
pop
sub
xchg
jne
inc
push
add
test
sub
test
and
xor
int3
xchg
movb
bound
sbb
and
dec
lea
sub
lods
mov
add
and
adc
js
dec
popa
lock
cld
cmpsl
rolb
test
and
lea
jp
decl
scas
into
int3
insb
inc
inc
and
shlb
in
bound
in
rcl
push
into
and
jecxz
lods
inc
lods
push
out
frstor
iret
or
xor
pop
cmp
loope
cmp
lahf
jbe
dec
stc
pop
addb
int3
int
mov
jo
outsb
scas
shl
xchg
test
sub
aas
adc
or
inc
out
xchg
push
lock
cs
sub
enter
fnsave
je
nop
sbb
aam
add
loope
sub
cmp
not
cmp
sub
mov
mov
aam
fisttpll
fisubs
jns
cli
jl
mov
jb
add
out
mov
jecxz
dec
fwait
or
jb
call
or
pop
loope
sbb
int3
add
outsl
fnsave
or
fnsave
lock
pop
jae
and
imul
enter
cmpsl
and
mov
jg
je
jns
xor
mov
mov
or
mov
sbb
lss
mov
popa
scas
pop
jnp
lahf
and
xchg
mov
rcrl
sbb
cmp
cmpsb
rorl
out
je
push
imul
sbb
jno
data16
mov
test
pop
dec
and
jecxz
clc
pop
mov
sub
lds
or
xchg
lock
cmp
sbbb
daa
jno
jbe
inc
mov
test
dec
adc
lods
ja
jns
inc
lret
jmp
imulb
sub
sarl
or
in
int
popa
ss
or
call
push
pop
add
xchg
not
pop
xor
inc
or
mov
mov
xorl
popa
xchg
js
cmp
sahf
fcoms
rclb
jae
inc
aam
movsb
xchg
add
sub
in
lcall
repz
in
addr16
cmpsb
ljmp
loopne
push
movsl
sbb
fisttpll
and
lahf
sbb
popf
dec
les
or
out
test
ja
jb
push
cmp
inc
jp
mov
sbb
or
cmp
jl
scas
mov
ret
clc
sub
vmovddup
les
out
add
lea
adc
imul
aad
lret
test
shll
sahf
jnp
add
sub
imul
js
nop
cmpsb
xor
xchg
incl
jecxz
jle
xor
push
adc
insl
pop
add
jae
and
in
addr16
imul
mov
icebp
adc
scas
mov
les
or
cmp
dec
repz
or
je
je
es
divb
or
jae
mov
sahf
mov
ret
jl
jnp
mov
xchg
cmp
mov
imul
pop
rcrl
or
aas
pusha
xchg
pop
cmp
pop
sbb
repnz
and
lret
sub
arpl
jl
movsb
sahf
daa
sub
daa
lods
hlt
push
call
add
pop
jnp
mov
lahf
insl
push
scas
popa
pop
xor
shl
xchg
lahf
sbb
add
dec
push
outsb
icebp
mov
daa
pcmpeqd
shlb
sti
cltd
dec
jb
xchg
xlat
and
fadds
loop
outsl
sub
mov
ljmp
jne
adc
stos
imul
negb
jle
jb
jle
xor
sahf
iret
inc
mov
out
mov
pop
push
push
cmp
dec
pop
inc
xchg
ret
adc
test
cwtl
fnstcw
pop
inc
inc
stos
cmpsl
fildll
insl
sbb
out
add
inc
repz
loope
mov
dec
ljmp
test
and
ja
dec
pop
pop
sahf
call
lods
mov
jbe
and
push
fs
in
mov
es
out
inc
xchg
add
cli
jno
sahf
lods
scas
jns
push
push
addl
outsb
sub
clc
add
hlt
incb
test
nop
pop
scas
out
or
adc
adc
mov
xlat
ljmp
mov
lods
and
nop
fidivrl
add
imul
sti
inc
pop
leave
mov
rcrb
pop
ja
pop
js
xchg
jp
or
dec
mov
or
adc
xchg
neg
jge
daa
inc
push
xchg
pop
jmp
adc
adc
shlb
out
or
andl
dec
push
sbb
xor
in
push
xlat
xor
mov
jbe
pushf
xchg
xlat
popf
sub
ljmp
and
or
pop
pop
push
jge
stos
cld
xchg
jecxz
mov
add
ja
jg
and
sbb
cli
mov
dec
or
sti
cwtl
ljmp
xor
mov
shrl
out
mov
fs
cmp
dec
cmpsl
mov
lea
arpl
cmp
cmpsl
sbb
fcoml
insl
gs
ret
mov
or
adc
popa
mov
adc
push
inc
cmp
daa
out
mov
jbe
cmp
bound
cmp
or
das
cmp
push
and
popl
loope
je
in
cld
loop
cmpsb
shlb
dec
mov
nop
pop
into
mov
sti
push
mov
push
jno
sahf
sarb
sub
mov
cld
fidivl
pop
daa
das
bound
aas
pop
clc
lds
pusha
mov
or
in
inc
mov
xchg
mov
push
push
aaa
adc
mov
add
std
out
shll
js
das
in
fdiv
xor
aas
jmp
mov
ds
xchg
dec
push
pop
jns
push
and
lahf
aaa
imul
xchg
lea
shrl
out
jno
dec
les
roll
in
jle
and
hlt
xchg
test
andb
shll
mov
fs
int
mov
sub
in
repz
lcall
adc
out
mov
idivb
fisttpll
jl
icebp
or
rclb
mov
test
std
scas
ret
adc
sbb
sarb
jbe
mov
add
inc
jg
ljmp
adc
inc
outsl
daa
rol
push
inc
cmpsl
cs
mov
out
add
cmp
shlb
shrb
pop
int
imul
mulb
mov
add
bound
ror
pop
cmp
mov
pop
lock
pusha
shrb
pop
test
popa
mov
inc
mov
loop
ficomps
xchg
mov
pop
dec
or
mov
mov
insl
mov
fiadds
test
pop
jne
sbb
pusha
test
cs
repz
mov
cltd
ljmp
inc
out
mov
movsl
movsl
push
js
in
cmpl
inc
mov
jg
dec
fucom
xor
out
femms
xchg
jne
movsl
or
dec
mov
mov
out
dec
mov
ds
jl
out
inc
mov
pop
inc
and
xlat
or
jno
stc
orl
jp
cld
popf
inc
jae
push
adc
popf
and
lds
test
add
sbb
insb
loope
movsl
and
dec
inc
inc
push
jmp
out
cli
stos
jmp
push
add
mov
int3
out
add
in
cmpsb
or
stc
repnz
push
out
andb
test
into
incb
xchg
mov
mov
mov
pop
mov
cmpsb
nop
pop
sbb
jne
inc
lret
push
xchg
lcall
inc
inc
arpl
or
stos
push
lret
mov
dec
jg
cmp
mov
repz
adc
in
inc
or
and
inc
cld
js
jle
imul
das
sbb
cltd
testb
xchg
es
jg
pop
jnp
ret
mov
stc
push
outsb
lahf
loop
ds
push
rorb
lcall
mov
adc
xchg
bound
mov
jne
in
in
daa
mov
jb
push
push
dec
ja
sbb
fsubr
loope
inc
outsl
fistpll
leave
adc
aaa
cmpb
dec
jle
mov
push
pusha
shrl
stos
push
rorb
enter
sbb
gs
ja
ljmp
adc
popa
imul
scas
pop
sbb
jp
dec
pop
mov
mov
pop
rorb
inc
xchg
jne
pop
ret
ret
mov
cltd
fildll
pusha
sbb
test
mov
les
imul
and
enter
imul
mov
mov
ret
adc
lods
push
stc
xchg
jne
xchg
pop
addr16
cwtl
fcoms
ss
xchg
mov
ljmp
xchg
or
jns
insb
add
or
dec
popf
dec
shrb
dec
dec
push
mov
mov
mov
out
mov
setnp
pop
lods
inc
sub
repz
add
sub
stos
xor
dec
xor
outsb
iret
sub
sub
xchg
das
popa
xchg
ret
lea
ret
jae
pusha
lds
lret
cmp
dec
les
add
andb
popf
sti
cmp
and
repnz
jmp
jl
imul
iret
jp
test
jne
out
in
pop
mov
mov
loope
or
mov
ret
dec
mov
inc
test
adc
lret
cmpb
push
and
xor
xchg
mov
sbb
add
dec
stos
dec
andb
inc
push
mov
cld
push
mov
jmp
imul
scas
push
mov
push
cs
mov
into
ret
mov
dec
mov
xchg
popf
out
and
sbb
cmpsb
clc
pop
mov
into
and
dec
mov
fnstenv
jae
daa
shrl
or
mov
stos
dec
push
add
mov
xchg
mov
push
push
inc
loope
repz
sarb
in
mov
dec
cmc
inc
mov
ljmp
lock
jno
inc
js
mov
sub
dec
xlat
test
out
cmp
mov
add
jnp
pop
fildll
les
fisubl
and
rcrb
mov
and
shlb
fldcw
daa
add
mov
sbb
jmp
ja
cmpsb
xchg
inc
cmp
std
sbb
dec
dec
fsub
jmp
sbb
ljmp
sub
fdivrp
dec
or
mov
rorb
mov
xchg
stos
inc
ljmp
insb
hlt
cmpsb
xor
sbb
ljmp
push
int
add
pushf
mov
in
mov
xchg
call
out
pushf
jno
insb
repz
test
or
pushf
push
lahf
std
cmovl
lcall
int
aas
in
test
mov
outsb
mov
add
fcomip
out
mov
push
cmp
test
aam
and
jle
out
ja
addr16
dec
in
jecxz
sbb
pop
out
je
out
cwtl
pop
iret
lret
insb
jmp
or
cltd
xor
test
cwtl
outsb
shll
ja
mov
push
add
shll
xchg
push
fdivrl
idivb
push
mov
les
add
inc
and
push
in
fisttpl
xchg
lea
hlt
iret
rcrl
pop
dec
xchg
jno
nopl
in
fldl
fcoml
notb
push
dec
in
pop
mov
iret
loope
repz
stos
test
cs
sbb
out
into
dec
ja
testl
sbb
and
pop
push
fs
es
jecxz
loope
jb
pop
xchg
xlat
arpl
xor
jno
mov
loop
call
fisttpl
xor
dec
jl
push
cmc
sti
jmp
pop
hlt
pop
or
inc
sti
insb
push
lret
adc
sub
xchg
add
sarb
lret
jge
push
xor
ficompl
adc
add
addr16
xchg
mov
lds
push
mov
je
andl
pop
push
xor
aad
das
lods
push
and
outsl
adc
push
ja
fcomps
adc
xor
int
in
xor
xor
in
xlat
stc
pop
dec
pop
inc
in
repz
lock
leave
sub
mov
fiadds
sbb
inc
jbe
inc
mov
pop
js
fildl
xchg
mov
ror
adc
out
fwait
mov
mov
daa
mov
shlb
push
jns
cmp
or
lcall
jmp
sbb
test
mov
add
data16
int3
jns
leave
mov
pushf
inc
lcall
bound
sub
cmovp
or
scas
pop
mov
xchg
mov
mov
js
clc
pop
loop
add
jnp
sbb
or
lahf
rcll
mov
dec
subl
ret
gs
arpl
popa
mov
push
outsb
jo
and
mov
mov
jno
dec
ret
mov
push
sbb
mov
mov
filds
mov
add
loop
imul
xor
inc
mov
push
push
pop
adc
inc
cmp
pop
xor
je
aad
popa
inc
popa
or
repz
xor
inc
out
dec
enter
aaa
jns
inc
push
push
pop
sub
aad
cmpsb
adc
js
dec
mov
cs
enter
cmpsl
jecxz
shl
cmpsb
mov
in
mov
inc
inc
jbe
xchg
inc
call
lea
stos
and
sbb
test
imul
inc
inc
cmp
lods
sbb
mov
cmp
scas
add
movsl
sahf
pop
adc
jp
mov
jo
ja
fwait
add
stos
cmp
mov
add
and
dec
fwait
push
outsb
je
shrb
and
pop
pop
push
bound
filds
inc
push
popf
pop
shlb
fdivl
fnstcw
xchg
out
sbb
shlb
mov
out
cli
hlt
xor
das
jbe
icebp
jl
in
pop
arpl
jl
sub
iret
ja
popf
call
aam
xlat
add
xchg
jecxz
daa
jg
sbb
lahf
insb
sbb
adc
out
pop
push
xorb
or
xchg
push
ss
div
sbb
neg
dec
aaa
pop
test
jnp
jg
jns
orb
adc
cld
sbb
imul
js
jp
pushf
adc
ja
ja
jne
negb
cli
addl
test
mov
or
lods
xchg
fwait
int3
insb
shrl
xor
out
ficoml
daa
lret
cli
or
cmp
lods
imul
mov
adc
sbb
sbb
and
push
aaa
notl
cmc
sub
shll
ret
mov
and
sub
cmp
loope
push
push
psubsb
andb
sar
and
sub
dec
insb
inc
xchg
lret
imul
or
mov
mov
pop
add
stos
and
aad
xchg
in
cmpsl
xchg
inc
jp
ret
jno
jno
sar
daa
pop
xchg
push
pushf
mov
cmc
jae
jb
or
xchg
dec
or
repnz
sahf
push
filds
push
aas
mov
mov
sahf
jne
mov
clc
push
jae
lahf
or
movsl
pop
add
jmp
out
ficomps
scas
adc
sbb
fsubl
arpl
xor
lock
mov
js
xor
cld
out
sub
popf
sbb
mov
out
cmp
mov
test
cmp
mov
fildl
push
cli
mov
mov
push
sbbb
out
bound
push
xor
outsl
out
cmp
stos
int
int
das
enter
rolb
dec
xchg
in
sbb
jmp
adc
shl
lods
sub
lret
out
push
addb
mov
scas
cmp
scas
xchg
insl
push
inc
test
inc
call
movsb
mov
pushf
inc
rorl
xor
sbb
incl
push
icebp
sbb
pushw
push
add
pop
inc
mov
sahf
add
fistl
hlt
shrb
clc
sub
scas
clc
test
sbb
xchg
or
scas
shlb
mov
xchg
loopne
aas
inc
sub
and
inc
popa
inc
xchg
xlat
imul
gs
stc
cmp
sbb
in
sbb
shr
lds
push
adc
inc
jl
jne
or
or
sbbl
xor
js
lret
mov
aaa
aad
pop
mov
and
mov
adc
adc
add
sarl
push
cmpsb
ret
sbb
fsubrl
jg
shrl
jb
push
pop
enter
mov
mov
fcomip
std
ret
mov
loopne
hlt
test
cmp
in
pop
push
cmc
aas
pop
xchg
inc
aam
outsl
xorl
cwtl
scas
dec
pop
cmp
cmp
divb
rclb
jmp
sahf
add
cmp
jecxz
lea
and
cmc
cmp
dec
sbb
sbb
cld
lods
and
js
iret
aaa
xchg
clc
cmp
lcall
test
addl
pop
jge
iret
js
inc
push
cmc
lods
mov
and
test
loope
sbb
jb
dec
or
xchg
and
jo
jecxz
pop
cmpb
ss
hlt
mov
sti
jle
shl
push
fisttps
lret
sarl
add
lea
cmc
pop
test
xchg
test
ret
aaa
movsb
test
mov
mov
incb
jge
rcrb
add
mov
push
mov
inc
jb
call
jge
out
test
gs
cltd
push
popf
cmp
cmp
pushf
jbe
lds
mov
xchg
inc
cld
popa
out
mov
inc
sti
daa
cmp
xor
xor
and
fildll
or
out
repnz
inc
ds
or
js
rorb
arpl
adc
in
add
or
inc
in
mov
cmp
dec
sahf
adc
fidivrl
jmp
ljmp
and
mov
xchg
int
sbb
scas
nop
call
push
sbb
push
xchg
push
cmc
int3
xchg
ljmp
imul
xchg
imul
icebp
or
fiaddl
rcrl
jo
aas
dec
push
cmp
lahf
xchg
jge
push
clc
inc
loopne
into
or
into
pop
jnp
das
mov
mov
mov
cmpsl
out
adc
std
jbe
outsl
fs
mov
and
xorl
data16
dec
ds
lcall
mov
lock
pop
in
mov
xlat
sub
inc
or
mov
ja
rcpps
ljmp
clc
shrl
leave
scas
mov
leave
imul
mov
rorl
xchg
dec
mov
jnp
lcall
mov
jo
xchg
jge
mov
aam
push
addr16
mov
lret
and
push
adc
aad
popa
addb
jp
push
jl
xchg
xorl
push
and
cmpsl
movsb
push
or
pushf
pop
or
in
fidivs
sub
push
ja
pop
push
sbb
aam
adc
cltd
pop
or
xlat
or
orps
add
dec
mov
fsts
cmp
fs
mov
bswap
jmp
test
fs
jns
out
xlat
cmp
out
mov
jl
or
lea
cmpsb
imul
out
mov
addl
mov
fistpll
jmp
inc
sub
push
div
shll
pop
lods
cmpsl
cs
ljmp
add
pop
cmp
fs
mul
lods
int
in
imul
nop
mov
cmp
push
lea
mov
sub
aaa
cli
dec
pop
xor
inc
and
inc
xor
test
imul
and
push
or
mov
cmp
je
xchg
ret
std
jnp
shrb
idivb
stc
xor
add
sti
fldenv
and
ret
lcall
popa
call
and
in
push
and
pop
pop
sub
iret
andl
mov
fildll
jge
out
xchg
adc
dec
cltd
fwait
ja
xlat
fdiv
icebp
and
aam
xchg
sarl
roll
adc
cmp
sahf
mov
pop
xor
cwtl
imul
test
jge
mov
je
jl
int
or
inc
shr
mov
xor
jl
sub
jb
dec
out
sti
stc
xchg
in
enter
addr16
repnz
cmpb
mov
jne
xchg
fiadds
adc
ss
push
mov
inc
xor
mov
or
xor
push
mov
cwtl
sbb
pushf
dec
inc
jno
sub
loopne
out
ss
jns
inc
test
dec
add
test
mov
inc
and
in
pop
gs
mov
dec
loop
mov
mov
jno
mov
or
dec
pop
xchg
sub
movsl
shrl
subb
sbb
push
add
cmp
xchg
xor
sub
test
es
fidivs
inc
push
push
push
imul
nop
gs
inc
lock
in
mov
clc
xor
cmpsb
xchg
jno
cltd
sbb
mov
xchg
or
and
mov
movl
movsb
std
lock
fcoms
cltd
aaa
in
insl
pop
jmp
adc
mov
lcall
outsl
xchg
mov
lods
aaa
add
add
sub
loopne
imul
ret
pop
adc
ja
mov
mov
sbb
inc
mov
cmp
popf
xchg
repnz
jmp
in
cwtl
enter
out
mov
cmpb
mov
cmpb
andps
mov
xchg
jle
inc
leave
nop
pop
adc
aam
aam
xchg
scas
mov
arpl
mov
pop
mov
test
fstpt
dec
inc
push
cltd
dec
loopne
jp
nop
lds
repz
sti
gs
fnstenv
cs
addr16
fcomp
push
jne
cmp
xor
mov
ss
sbb
sbb
lock
rcr
sbb
data16
scas
call
or
icebp
scas
mov
ret
or
add
dec
push
mov
outsb
mov
test
popa
movsb
cmp
test
or
test
sbb
fs
and
gs
xchg
cmpsl
push
adc
xor
inc
mov
mov
xor
scas
dec
dec
mov
fisubs
or
cmp
dec
bnd
push
xor
mull
ret
aad
gs
fsts
sub
repnz
dec
sarb
test
outsl
push
xlat
push
call
leave
dec
xor
xor
sub
adc
sub
lea
jecxz
popa
fsubl
cmp
sti
jg
lea
xchg
popa
fsts
enter
jne
xchg
ds
inc
or
adc
push
int3
ljmp
lock
or
xchg
inc
mov
add
push
je
xor
push
into
xchg
jno
lret
sarb
loopne
bound
push
out
or
jge
clc
push
in
shrl
cmp
jns
test
jmp
jb
xchg
adc
cli
sbb
add
mov
arpl
jb
jno
imul
xor
push
cmp
cld
push
shll
cmp
xor
stos
outsl
ja
or
mov
loopne
mov
dec
push
cli
inc
dec
mov
movsl
in
enter
and
push
int3
dec
hlt
lods
sub
mov
mov
in
cmp
mov
inc
pop
inc
aaa
jle
movsl
aaa
xor
fwait
rcll
mov
leave
mov
out
sbbb
mov
imul
push
dec
dec
push
cwtl
jae
mov
mov
mov
push
test
mov
das
aas
jle
xor
popf
xor
mov
popa
lods
fcoml
push
shll
adc
dec
in
fisttpl
cltd
fsubrl
sub
inc
xchg
lcall
lods
rcrl
imul
out
rcrl
dec
leave
fmull
movsl
xlat
sub
inc
out
or
and
jbe
aad
and
mov
or
cmp
push
xorb
int
xchg
out
mov
xor
or
rcrb
rol
in
sub
lock
mov
push
add
mov
out
push
movsl
das
lcall
adc
dec
cmpb
data16
and
push
inc
fdivl
inc
xchg
test
movsb
stos
sbb
out
jle
sbb
mov
jae
das
stos
into
cwtl
pusha
arpl
xor
movsb
inc
push
sub
push
cli
mov
iret
andl
xlat
popf
movsb
jecxz
fidivrs
stc
in
push
mov
bound
dec
cli
add
data16
mov
inc
sub
sub
fstpt
cmpl
int
hlt
mov
cmpsb
push
aas
iret
fldl
sbb
or
stos
jmp
pop
cmp
stc
roll
or
fmuls
dec
in
push
dec
add
pop
fs
push
jbe
mov
sarb
add
mov
lret
lahf
cmp
pop
mov
xchg
ret
dec
xchg
push
mov
jnp
push
pop
pop
mov
and
int3
jns
subl
or
negl
repnz
loopne
pop
insl
pop
aaa
push
mov
sbb
lods
insl
shll
fnstcw
int3
jns
xchg
xchg
insl
lcall
lods
call
dec
dec
push
jle
repz
cmp
push
divl
push
dec
fsubs
inc
fsubrl
mov
xor
out
adc
xlat
and
and
xor
cmp
inc
in
imul
jp
sub
mov
and
aam
stos
jno
mov
add
cltd
push
adc
aaa
iret
lret
mov
pop
mov
mov
ret
call
mov
daa
jae
push
adc
mov
ja
dec
inc
jbe
cmpsl
or
mov
stos
add
cmpsb
cs
pusha
ret
fistpll
and
clc
adc
xor
ret
or
xchg
popf
xchg
xchg
push
stos
or
push
sub
ljmp
adc
mov
jg
das
cmc
xchg
es
jnp
hlt
pop
push
stos
pop
sbb
or
mov
mov
push
cs
cmc
mov
mov
ficomps
lcall
loopne
cmp
test
push
cmp
lcall
repz
addr16
lret
adc
in
mov
xor
mov
out
stos
adc
xchg
and
push
push
sti
outsb
mov
sbb
jge
adc
lea
mov
in
cmpsb
leave
xlat
or
call
bound
xchg
das
in
js
push
jmp
xchg
leave
jno
sarl
hlt
mov
loope
dec
or
xchg
cmp
imul
jno
hlt
mov
add
js
inc
outsb
mov
jg
in
daa
xchg
push
adc
js
subb
scas
add
aam
sahf
lret
out
xor
dec
and
loopne
mov
mov
push
mov
adc
scas
xchg
add
mov
cmc
sahf
or
in
fs
sub
cld
inc
or
cwtl
enter
inc
xchg
xorl
out
mov
out
push
jp
push
je
lcall
and
jmp
and
outsl
scas
jmp
adc
cmp
sahf
mov
mov
mov
movsb
insb
mov
scas
outsb
dec
test
pusha
pop
adc
xor
sbb
movsb
dec
jle
xchg
xchg
scas
das
inc
sbb
aaa
jle
shrb
rcr
test
movsl
in
adc
xchg
xchg
sub
push
filds
dec
out
jp
into
pop
dec
rorb
mov
test
push
cmp
mov
popa
dec
mov
jae
jb
xchg
gs
lods
jmp
insl
adcl
stos
rorb
adc
ss
sbb
mov
inc
stc
aaa
sbb
or
sbb
mov
in
lods
mov
movsl
xor
mov
xchg
add
inc
adc
xor
jnp
cs
out
or
mov
sbb
hlt
aam
in
stos
movsb
mov
pop
out
xlat
cmpsl
out
jp
jmp
add
lock
je
push
cltd
adc
addr16
jg
push
pop
push
in
test
fmul
enter
adc
mov
imulb
sub
jecxz
icebp
mov
in
lods
ficoms
stos
stos
insb
out
lret
push
jbe
xor
pop
mov
mov
push
push
xchg
cwtl
jns
add
dec
push
lods
ljmp
mov
add
or
inc
stos
sti
test
mov
sbb
inc
mov
and
xchg
leave
sbb
adc
sub
out
dec
fisubrs
dec
mov
mov
xchg
mov
scas
mov
adc
dec
jno
je
push
fadds
js
jne
lret
pop
outsl
push
out
lcall
xchg
pop
push
xlat
add
decl
push
sub
adc
test
mov
sub
out
out
bswap
lods
mov
or
sahf
add
push
add
ret
stos
gs
jno
add
sbb
call
and
out
mov
pushf
push
dec
scas
pop
mov
push
ret
dec
pop
scas
xchg
pop
mov
cli
imul
inc
sub
lods
in
sub
lret
inc
xchg
jns
lret
lret
sbb
and
add
ljmp
aad
les
sub
popf
xor
lods
sbb
iret
std
in
scas
out
lahf
mov
mov
add
push
cmp
aam
cmp
lret
outsb
pop
mov
push
dec
sbb
xchg
pop
and
shlb
mov
inc
push
mov
jne
xor
lahf
fstpt
int
dec
mov
mov
jle
out
adc
icebp
add
outsb
fcoms
mov
jb
stos
out
or
out
or
dec
pusha
adc
jb
xor
sbb
and
mov
scas
adc
nop
rol
cwtl
cmp
xor
js
xor
dec
ds
iret
cwtl
jno
or
jae
inc
mov
inc
jge
mov
mov
hlt
xchg
xchg
inc
stc
xchg
loope
loopne
xor
xchg
les
mov
mov
ss
les
lock
push
inc
jae
and
lret
adc
sub
ja
xor
xchg
mov
or
pop
icebp
stc
pusha
iret
testb
sbb
push
jae
and
sbb
mov
sbb
xlat
adc
jns
mov
fbstp
push
insl
stc
mov
inc
jnp
lahf
test
hlt
jno
pop
stos
or
pop
sbb
xor
and
sarb
push
sbb
nop
mov
int3
adc
mov
lds
out
add
dec
out
stos
mov
dec
hlt
mov
int
mov
aaa
add
inc
lahf
pop
ffree
fisubrs
clc
add
repz
sbb
pop
dec
cmp
divl
sub
and
data16
dec
pusha
pushf
push
cmc
lcall
mov
loopne
stos
movsl
mov
xchg
lods
cmc
scas
jb
and
or
ret
add
jmp
call
mov
aad
nop
ljmp
mov
pop
cmp
mov
pop
pop
and
add
add
push
adc
or
shll
repnz
push
rcr
adc
cmp
push
mov
adc
rcrl
adc
lods
xor
push
test
and
aad
push
int
rcll
lret
cs
push
or
or
pop
aam
lods
ror
cmp
repnz
push
adc
sti
pop
push
or
loop
addr16
xor
mov
inc
pop
jmp
mov
lret
movsb
mov
sbb
push
das
dec
mov
xchg
scas
ja
scas
xchg
out
daa
loopne,pn
fidivrl
loope
in
xor
or
sbb
inc
adcl
outsb
adc
pop
inc
insl
adc
fdivl
insl
and
sub
or
lock
ficoms
js
jp
pusha
add
sbb
rcrb
imul
sub
mov
dec
dec
pop
and
xor
mov
push
imull
add
rcrl
ja
out
add
in
mov
mov
or
dec
je
lret
sub
in
mov
scas
es
out
addr16
push
xchg
imul
aad
shrl
inc
and
xchg
push
addr16
inc
out
nop
jo
push
ret
dec
dec
adc
jo
out
mov
lea
and
jmp
lret
mov
adc
push
das
outsw
in
or
pusha
add
sub
sti
or
popl
out
push
outsb
jo
das
pop
cwtl
inc
int
sub
test
paddw
dec
int
jbe
push
pop
int3
bound
testl
mov
cli
xchg
xor
push
fildl
xchg
es
stos
cld
repnz
push
aad
cmpb
inc
test
iret
and
xchg
or
cmp
add
lea
pop
dec
cmc
outsb
in
adc
outsl
idivb
pop
inc
test
aaa
cmpl
mov
pop
mov
inc
mov
mov
jnp
out
imul
and
mov
cmp
mov
fmul
pop
dec
scas
adc
mov
sub
mov
fbld
dec
fwait
lods
cmp
ja
mov
push
sub
bnd
aas
or
dec
xor
fcmove
pop
int3
xlat
dec
lret
stos
dec
mov
mov
ds
int
int
xchg
imulb
js
inc
add
dec
sbb
push
push
or
inc
cli
cli
jg
ja
rorb
add
mov
sbb
aam
fcomps
mov
outsl
movsl
cmpsl
push
push
orb
mov
enter
shlb
in
jno
jl
mov
pop
lods
cmp
xor
addps
mov
loope
cs
loope
scas
xchg
pop
cld
in
test
inc
cmp
or
add
stc
xchg
nop
add
mov
mov
notb
push
cmp
jnp
jb
ss
inc
insl
das
outsb
shll
bts
sbb
test
xor
out
adc
mov
fsubr
scas
repz
mov
pop
jmp
aam
pushf
in
or
hlt
cli
inc
cli
jns
add
and
lahf
jecxz
or
push
adc
in
movsl
test
rcrb
mov
decb
push
fcomip
add
ss
dec
add
std
je
jbe
inc
mov
imul
cli
xchg
jl
xor
pop
into
pop
mov
pop
aas
push
add
cmc
cmp
in
rcl
in
imul
out
aam
jne
fwait
mov
inc
xchg
loope
jno
shll
incl
add
insb
inc
and
xchg
dec
inc
fbld
push
test
mov
lods
hlt
addr16
push
test
or
insl
cmp
pop
sub
mov
lods
bound
fs
adc
addb
xlat
or
jecxz
mov
cs
fdiv
mov
lahf
lcall
pop
es
inc
mov
aas
pop
sbb
adc
sbb
movl
popa
adc
pop
jno
ficoms
jns
movsl
pop
hlt
shll
js
push
bound
cmp
xchg
popf
sub
mov
jg
jge
test
test
xchg
pop
lock
rcll
cmpb
fst
cwtl
jno
xchg
or
and
push
dec
rorb
mov
rorb
iret
cmpsb
subb
popf
test
dec
in
and
les
clc
out
xor
stos
inc
mov
cmp
icebp
loope
enter
and
jbe
dec
xchg
cwtl
xchg
les
popf
out
dec
pop
adc
and
or
mov
sbb
addb
cmp
sbb
aaa
lds
pop
aas
xchg
push
push
repz
insb
aaa
dec
mov
xorb
sbb
or
xchg
out
add
ljmp
cmp
jle
mov
xor
and
or
pop
lea
or
rol
jmp
mov
subb
test
add
les
or
sub
fs
jns
dec
in
iret
adc
cmpsl
dec
insb
rorb
and
mov
dec
or
inc
imul
pop
dec
flds
lcall
imul
add
and
mov
add
jb
pop
sahf
cld
cs
not
movsb
adc
aaa
or
add
sbbb
popa
and
mov
add
icebp
and
dec
mov
test
insb
fwait
mulb
dec
pop
outsl
mov
ds
push
push
and
mov
icebp
fmuls
scas
loope
jmp
mov
sbb
inc
cmc
sti
fs
push
cmpsb
sbb
mov
dec
push
push
aam
mov
les
sub
lods
popf
outsb
nop
adcl
mov
adc
xchg
mov
mov
in
shrb
mov
push
bound
inc
cli
sti
bound
lea
leave
push
pusha
inc
test
jmp
sbb
roll
jmp
push
xchg
jl
lret
mov
inc
xchg
sti
imul
inc
cmp
cmp
test
loop
jbe
outsl
push
sub
gs
call
pop
ret
ss
rcl
pop
lcall
push
push
adc
lods
mov
inc
clc
fdivrl
xor
pop
out
xor
inc
mov
and
adc
pushf
sub
ret
add
and
mov
mov
or
inc
inc
clc
push
shlb
cmp
rcrb
cmp
push
gs
mov
fldt
daa
mov
adc
ja
push
ljmp
fcmovne
inc
pop
dec
sub
fst
and
es
mov
call
xchg
test
push
xchg
out
icebp
dec
shrl
mov
jge
xchg
data16
push
adc
fs
arpl
push
pop
dec
cltd
lahf
pusha
out
lds
push
sbb
xchg
mov
stc
or
pop
pop
popa
jne
add
sub
xchg
nop
lret
push
rolb
ret
mov
mov
lock
sbb
mov
inc
mov
jae
nop
fldl2e
pop
inc
mov
bound
dec
sub
push
loop
xorl
addr16
sub
push
mov
mov
lds
sub
add
and
stos
test
mov
pop
mov
push
rcll
jae
loop
fsubrl
xchg
and
inc
icebp
cmp
cmp
fildl
xchg
out
outsl
int3
sbb
jg
ds
cmp
jno
xchg
mov
xchg
mov
cmp
lods
js
fistl
mov
iret
xor
sub
insb
les
sar
lock
shrl
in
loopne
test
test
cmp
popa
xor
and
sub
xor
das
pushl
negb
pop
fs
cs
lret
adc
cmp
and
dec
add
jns
or
sbb
push
out
andb
leave
or
push
pop
mov
fwait
xchg
js
and
stos
aad
fstpl
pusha
add
dec
xchg
mov
push
jo
mov
sti
mov
mov
sub
lods
or
pop
test
xor
push
jle
mov
mov
cs
int
aaa
push
pop
popf
call
adc
jge
jmp
and
lods
adc
fs
cli
add
fwait
jg
add
add
cmc
je
xor
push
sbb
and
arpl
repz
cmp
dec
adc
lods
or
push
enter
sarb
xchg
push
dec
je
in
lods
lret
lds
hlt
xchg
xlat
fimull
xor
in
rcr
mov
out
test
in
mov
inc
ret
jecxz
or
iret
gs
mov
inc
jno
fistpll
jno
inc
out
sbb
popf
ja
mov
fisttpl
aad
int3
dec
xlat
scas
sbb
xchg
cmpl
push
clc
cmp
pusha
lods
fs
ds
dec
cmp
addr16
fadds
pop
push
pop
inc
xchg
roll
and
xor
popf
xchg
pop
xchg
dec
aas
lahf
je
stos
stos
add
jnp
dec
cmpsb
cmp
sbb
fcompl
push
mov
mov
adc
adc
ret
lock
mov
xchg
outsl
stos
pop
push
mov
mov
stos
mov
fistl
cmpsb
xorb
in
xor
and
fs
rorl
sbb
test
or
stc
pop
sbb
or
pusha
clc
push
neg
scas
lock
divl
inc
shlb
add
imul
shlb
inc
ss
sub
inc
xchg
mov
inc
out
lea
push
sbb
jb,pn
shr
mov
mov
inc
push
in
fildll
js
add
mov
bound
fisttpl
movsb
int3
lea
loop
dec
or
xchg
call
fs
adc
adc
inc
divb
stos
or
loope
lds
inc
mov
mov
cmp
and
pusha
lahf
push
pop
in
xchg
aad
xor
mov
fs
jecxz
inc
inc
sahf
lods
mov
test
movb
and
mov
nop
xorl
cwtl
jnp
mov
pop
mov
add
andl
dec
inc
sahf
dec
sub
push
mov
dec
mov
xchg
lea
sbbl
sti
pop
sub
jecxz
pushf
fists
sub
jge
add
outsl
sbbb
dec
in
movsl
push
insl
sub
fcomps
gs
push
xchg
aaa
cli
repz
mov
lahf
add
jge
jns
push
push
stos
je
fmul
je
mov
jl
je
mov
push
bound
jl
repz
xor
lcall
and
lock
out
mov
pushl
adc
or
mov
mov
lods
in
and
iret
xchg
cmp
in
add
aaa
jmp
aas
ret
outsb
xor
and
fnsave
or
dec
mull
int
jns
sub
add
imul
mov
push
cmpsb
frstor
or
cld
push
outsb
cld
in
je
xchg
mov
xchg
mov
aad
rcrl
loop
pop
aad
nop
cwtl
aas
xchg
pop
cmp
enter
shlb
fsubl
outsl
pop
xchg
mov
inc
imul
aam
xor
test
xchg
mov
sbb
dec
es
hlt
adc
cld
jo
push
inc
scas
nop
push
push
dec
mov
cmp
aad
mov
scas
pop
xchg
ret
pop
popa
mov
or
out
movsb
mov
mov
mov
dec
mov
les
jnp
add
nop
dec
dec
mov
fstps
xchg
pop
and
mov
bound
mov
call
test
nop
xchg
dec
dec
xor
jg
ljmp
jno
pop
adc
cmpsb
cmp
sbb
sub
and
mov
xchg
inc
aaa
jbe
mov
and
fists
fsubrp
int3
nop
push
jp
out
push
mov
popa
inc
es
xchg
mov
jae
and
and
jge
mov
push
sub
movsb
sarb
jns
aad
inc
in
inc
ret
fidivrs
adc
rclb
and
stos
imul
shlb
js
mov
cmovle
fcmovne
int3
cwtl
push
add
imul
outsb
inc
je
cmp
or
mov
andl
addb
nop
jne
jmp
mov
jae
mov
or
in
jnp
mov
mov
pop
test
arpl
cld
cs
fnstenv
sbb
mov
jp
into
mov
add
add
and
cli
and
sub
push
movsb
sub
jle
pop
add
dec
jle
lahf
in
inc
push
add
adc
les
xor
icebp
jp
mov
fwait
mov
ds
jecxz
loope
leave
sub
cmpsb
mov
out
int3
dec
fwait
or
pop
add
cltd
jb
xchg
ss
scas
lret
add
mov
testl
or
adc
xor
xchg
mov
jo
xchg
fsubr
pop
push
cmp
int3
repz
xchg
enter
mov
sbb
add
psubusb
add
mov
stos
fiaddl
push
in
add
mov
jecxz
push
mov
jg
scas
sbb
mov
jbe
aaa
cmp
mov
pushf
in
outsb
test
jns
sbb
cwtl
xchg
push
inc
cmp
bound
jb
sub
sbb
pop
cmpsb
mov
mov
mov
pushl
out
adc
dec
mov
pop
xchg
test
aaa
outsl
mov
mov
ds
cli
out
addr16
adc
mov
adc
shl
or
dec
hlt
sbb
jl
out
xchg
gs
mov
pop
js
push
sub
and
xchg
popa
sub
sbb
dec
insb
repnz
mov
sbb
push
xchg
push
ss
into
mov
cmp
inc
jmp
push
aaa
lock
sbb
jp
ror
inc
js
add
mov
add
testb
adc
jbe
pop
scas
sub
xchg
es
scas
mov
mov
or
xchg
out
xor
push
out
adc
jl
js
push
mov
add
ja
test
xlat
out
int
sub
lahf
into
test
dec
jne
les
scas
mov
or
das
in
push
aam
aas
mov
scas
jno
pushf
mov
gs
pop
push
idivl
scas
pusha
je,pn
push
out
adc
out
scas
pop
in
test
sbb
add
jns
mov
aad
movsb
into
into
jne
pop
js
into
add
mov
les
aad
jo
mov
mov
push
sub
push
mov
push
add
sbb
sbb
inc
push
sub
adc
jno
xor
lea
mov
mov
sub
xchg
sbb
in
int3
test
xchg
xchg
js
push
daa
sub
sub
test
and
mov
out
dec
inc
mov
inc
and
test
adcl
sub
xchg
dec
push
xchg
test
cmp
fsubr
add
out
sahf
push
inc
or
gs
sub
dec
xor
mov
stos
xor
inc
cmp
inc
int
jecxz
in
test
jmp
jle
aad
bound
stc
dec
mov
mov
pop
mov
daa
jns
xchg
fsubr
push
mov
xor
in
cmpsl
fcmovnbe
xor
cwtl
scas
call
das
or
pop
jle
pop
mov
xchg
mov
popa
mov
mov
je
test
cmc
pop
mov
cmpsl
sahf
adc
lods
jne
in
inc
xlat
mov
cs
push
inc
fists
mov
mov
stc
pop
int
outsl
dec
mov
rcl
gs
xchg
sub
insl
lcall
inc
fcoml
sbb
insl
push
adc
sub
push
add
pop
test
xchg
xor
fs
push
adc
and
lahf
xchg
pop
ljmp
push
mov
fidivrs
aaa
lock
xchg
iret
popa
test
lds
fnstenv
cmp
ds
and
mov
andb
and
push
rorb
sbb
lods
int
mov
orl
mov
sarb
jnp
imul
mov
dec
leave
jmp
clc
push
movsl
movsl
iret
dec
xchg
jge
pop
dec
jnp
test
mov
or
xchg
xor
decb
in
sbb
sti
sete
xchg
xchg
icebp
push
xchg
add
mov
push
mov
sti
in
roll
adc
add
rclb
or
adc
pop
push
imul
pop
leave
adcl
xchg
cmp
cmc
push
xor
jbe
imul
sti
mov
ret
cwtl
icebp
mov
mov
das
inc
cmp
xchg
cmp
cmp
sub
mov
dec
dec
mov
rorb
ds
ljmp
add
int
xchg
out
pop
mov
int3
jl
sbb
cmpsl
int
pop
and
mov
gs
roll
js
mov
mov
jne
movsl
ds
loop
mov
cmp
shrl
lock
push
or
and
sub
cmp
insl
je
aam
push
fildl
fdivrl
pushf
data16
dec
test
mov
ljmp
and
fisttps
sub
or
shlb
sub
sbb
lods
outsl
test
push
push
pop
xchg
iret
xchg
add
das
pushf
jmp
add
cs
and
and
lcall
ja
jg
xchg
nop
in
sti
lea
xor
aam
stc
in
xchg
addl
lahf
pop
in
insb
jbe
fldcw
mov
popa
pop
jb
movsb
sub
jno
movsb
lahf
nop
fwait
sti
push
xlat
jg
inc
inc
sbb
jmp
adc
insb
mov
jno
pop
adc
sbb
xchg
cmpsb
mov
push
loopne
scas
jp
outsb
cltd
hlt
movsl
xor
mov
lcall
inc
xchg
jg
mov
cwtl
or
insl
mov
test
jo
push
cmpsb
int3
decb
sbb
aad
lods
das
repz
ficoms
test
push
add
sahf
sbb
push
cmp
nop
pop
lock
idiv
adc
outsb
aaa
mov
sbb
icebp
daa
rcrl
lds
add
imul
jp
aaa
jno
adc
mov
adc
mov
add
iret
cmp
mov
int3
mov
scas
jle
cmpsl
dec
out
test
aad
fs
clc
or
xchg
add
cmpsl
imul
xchg
jo
mov
pop
push
ljmp
scas
push
jns
add
insl
sbb
xor
jo
pop
jb
ja
cwtl
arpl
and
xor
mov
mov
and
push
sti
add
jmp
out
fnstcw
mov
push
daa
xor
out
pop
mov
inc
data16
mov
sti
pushf
push
adc
arpl
gs
hlt
lds
movsl
cltd
dec
jnp
xor
xchg
mov
inc
mov
loope
and
int
pop
idivb
and
cld
mov
or
push
jle
icebp
mov
push
mov
adc
and
push
push
jo
push
call
das
or
into
outsb
fldt
xlat
daa
shlb
aad
xor
adc
movsb
add
aaa
dec
cmp
les
dec
popa
mov
xor
stos
sub
fcompl
sbb
ljmp
push
fucom
in
outsb
lret
in
gs
and
sbb
fisttpll
stc
add
adc
cmpsl
rcll
pop
add
cld
and
adc
out
and
mov
cwtl
push
xor
ret
out
xor
inc
inc
xor
push
fs
push
push
push
push
sub
test
out
xor
jae
sti
push
jnp
iret
imul
cmc
cltd
sub
xchg
out
xchg
sbb
and
out
in
sub
clc
xor
aam
je
fstps
adc
aas
aaa
push
into
sbb
pushf
inc
test
mov
subb
and
std
cwtl
outsl
fnstcw
sbb
dec
push
inc
lret
iret
mov
inc
mov
and
add
andb
rcrb
jp
mov
pop
cmc
sarb
fdivrs
mov
push
xchg
popf
mov
pop
mov
fwait
xchg
xchg
push
or
inc
repnz
jge
std
dec
jnp
dec
or
xor
mov
clc
mov
std
cld
or
cld
pushf
negb
lods
ljmp
jecxz
add
adc
and
test
push
movsl
fcomp
outsb
in
cs
pop
cwtl
decl
lahf
call
nop
jno
jmp
lea
int
ljmp
jle
mov
enter
lods
add
mov
push
push
mov
xchg
cmpb
add
pop
movsb
pop
in
int
push
xchg
fimull
push
repnz
mov
xchg
stc
call
jp
js
and
icebp
sub
jle
shl
addr16
into
push
pop
lcall
sahf
nop
mov
fdivr
out
test
jmp
add
xchg
lods
inc
icebp
push
inc
mov
or
in
movsb
stos
adc
out
ret
push
push
rorl
sti
loopne
push
lock
xchg
aas
out
mov
push
push
mov
push
test
xor
pop
pusha
xchg
jno
push
fdivs
sub
aad
mov
ljmp
mov
sub
fnstcw
and
sub
lods
es
ja
jnp
loope
pop
and
sub
mov
and
mov
shll
or
cmp
mov
dec
outsb
mov
inc
push
loope
into
inc
out
pop
fsincos
cli
push
pop
aas
outsl
push
outsl
ss
daa
mov
hlt
adc
cmp
out
cmpsl
cmpsb
pushf
cmpsb
lods
int
xchg
add
lea
test
arpl
mov
ljmp
out
pusha
mov
icebp
push
sbb
xchg
lahf
inc
nop
push
sub
push
add
sub
test
mov
sbb
xchg
fs
cli
sahf
scas
mov
stos
ret
out
testl
movsb
inc
adc
jo
or
mov
jp
and
cmpsb
pop
dec
sub
stc
xchg
iret
push
loop
je
in
xor
data16
std
out
pop
jmp
shll
lods
call
xchg
mov
xor
sbb
jge
pop
aas
in
imul
cmp
pop
xor
sbb
int3
fisubl
jecxz
scas
imul
push
insb
mov
outsb
out
test
jecxz
pop
aam
or
fidivrl
out
push
loopne
and
daa
adc
test
out
shll
movsl
jo
dec
mov
movswl
mov
popa
xchg
inc
inc
fs
pusha
aaa
ret
mov
insb
gs
sub
and
sahf
push
cmp
lds
pop
scas
imul
pop
ja
add
jecxz
iret
fists
ror
mov
mov
cltd
mov
push
in
insb
inc
sbb
lret
pop
loope
cmp
mov
sbb
sbb
pop
or
cmp
add
dec
push
pop
repnz
xchg
paddb
mov
loope
ja
js
mov
loope
not
mov
mov
addr16
sbb
mov
frstor
arpl
enter
or
jl
lahf
repnz
jo
fidivl
cld
xchg
dec
pushf
and
push
lods
outsb
orb
jo
sbbb
dec
jmp
xchg
pushf
mov
sub
negl
mov
push
inc
popf
imul
sbb
mov
pop
sbb
shl
ds
ja
push
lods
add
pop
jb
cmp
mov
clc
lock
pop
xchg
dec
das
push
sti
mov
ficoms
mov
fwait
mov
jnp
inc
add
lcall
mov
mov
dec
mov
js
pop
xor
fidivrl
sbb
pop
and
push
and
aam
xor
imul
xchg
lock
mov
mov
lret
int
add
xchg
roll
mov
lahf
aad
mov
pop
push
pushf
cmp
lock
inc
push
adc
xchg
and
jl
dec
adc
mov
jae
aad
pusha
xor
add
shlb
and
jp
cmp
add
adc
push
sub
movsb
js
dec
test
pop
or
mov
or
ljmp
insb
mov
mov
push
or
push
xchg
ja
fstpl
push
movsb
das
inc
int
out
xlat
adc
cmp
js
cmp
mov
outsb
fadds
xor
out
push
and
fucom
imulb
jnp
mov
push
insl
rep
mov
mov
sti
mov
std
rorl
jge
dec
xor
lcall
lods
push
mov
mov
xchg
inc
pushf
nop
loopne
stc
in
inc
adc
sub
popf
cld
stc
iret
aaa
mov
in
mov
sbb
xchg
rcrb
jecxz
adc
xchg
mov
adc
fdivrs
addr16
repz
addr16
dec
dec
mov
dec
aas
jno
mov
call
dec
mov
lcall
jne
or
ds
jnp
lcall
fs
inc
xchg
sbb
dec
and
xor
jne
imul
jecxz
and
jo
jle
out
jae
int3
xor
jmp
scas
stos
loop
adc
fscale
inc
leave
pop
scas
cs
or
push
xor
add
cmpsb
mov
mov
nop
cmc
cmpsb
fistpl
push
imul
jp
xchg
pop
lret
nop
dec
mov
push
lret
jle
and
xchg
in
add
mov
jae
rcll
out
fsubp
jo
jp
sub
sub
or
jl
mov
ja
or
jge
xor
mov
leave
mov
dec
mov
jnp
or
in
rcrl
mov
bound
cmc
fildll
push
pop
xchg
or
outsb
out
xor
sbb
pop
test
lea
xchg
cmp
dec
jae
icebp
mov
iret
jbe
jne
push
sbb
dec
xchg
cwtl
jne
add
inc
stos
and
pop
pop
sbb
fcmove
dec
sbb
adc
xorb
addr16
cmp
cmp
xchg
xchg
imul
ret
dec
or
sub
std
mov
mov
movsb
outsl
xchg
cld
ficompl
and
mov
cwtl
fldt
in
or
sahf
add
or
ror
jmp
lahf
cmp
cmp
imul
arpl
or
mov
cld
shrb
or
pop
jne
shrl
in
hlt
loopne
adc
out
mov
int
xor
mov
xchg
enter
jmp
mov
xchg
cmpsb
lret
mov
incb
sub
inc
jbe
add
dec
adc
popf
imul
xchg
addr16
push
jno
xorl
ljmp
movsb
xor
ljmp
out
cs
mov
iret
es
adc
jle
push
jae
mov
shll
ja
sub
fldt
push
int3
loop
cs
enter
mov
pop
lods
stc
dec
push
dec
cmp
and
pop
pusha
fldl
push
xchg
pop
xorl
pop
inc
xlat
add
add
adc
push
out
push
cmpsb
sahf
pop
pushl
pushf
dec
push
in
out
xchg
mov
pop
inc
ljmp
outsb
mov
sbb
aam
mov
adc
jmp
jg
add
cmp
scas
sti
jg
mov
fnsave
mov
fstpt
xchg
push
lret
ja
xchg
add
mov
mov
mov
and
lret
push
insl
mov
sbb
sbb
inc
shl
cs
ret
mov
mov
jns
jnp
pop
cwtl
dec
les
mov
pop
mov
jns
jp
add
mov
mov
scas
mov
fadds
pop
jge
dec
int3
les
xchg
jne
out
add
dec
inc
add
ret
xor
jl
mov
mov
push
aam
mov
stos
push
sub
add
loope
inc
mov
je
out
ret
xchg
sbb
push
push
flds
lahf
daa
and
or
fidivrs
push
push
add
xlat
scas
pop
aas
ret
xchg
inc
mov
jns
fisubl
je
jecxz
add
xor
ret
sahf
icebp
es
fwait
or
jle
imul
jp
mov
js
inc
mov
fidivrs
mov
lock
add
or
cmp
cmpsl
mov
cmp
lcall
ljmp
stc
jo
jp
push
lea
popf
pop
lret
mov
inc
or
jle
andb
mov
cmp
cmpsl
and
xor
dec
xor
clc
pop
outsb
xchg
outsb
mov
gs
call
jno
adc
xchg
lahf
xor
sub
dec
or
mov
cmp
dec
pop
mov
xchg
jmp
and
pusha
fdivrs
je
test
daa
jo
dec
test
or
repnz
adc
pop
push
lret
je
pop
cmp
out
adc
stc
fisttps
fisttps
xchg
ja
fnclex
dec
std
out
sarb
lods
adc
fs
adc
icebp
fadds
mov
cmp
fistps
inc
xchg
mov
jne
push
sarb
push
mov
sub
std
sti
ljmp
js
inc
je
cs
clc
call
add
xor
mov
mov
jmp
scas
xchg
cmp
xchg
jno
xor
test
lcall
addr16
push
mov
pop
iret
cld
and
jg
xchg
jbe
fistps
mov
hlt
leave
pushf
sbb
lods
andb
mov
mov
dec
js
dec
es
pop
dec
int
lods
aaa
push
lds
or
pop
push
in
shlb
jnp
daa
nop
lock
pop
sbb
lcall
jnp
cmp
stos
loope
sub
stos
sbb
jne
ljmp
lods
fs
pop
aaa
in
cli
jo
mov
cmp
adc
in
aaa
cli
and
cmp
nop
hlt
test
hlt
pop
or
ja
xor
cmp
adc
adc
and
xor
in
mov
sti
pop
pop
push
sahf
adc
pusha
std
ljmp
add
addl
out
pusha
inc
mov
daa
in
and
sub
adc
int
repz
imul
cltd
jno
push
insb
repnz
repnz
fimull
sub
mov
jae
stos
mov
popa
call
repz
xchg
movsb
rcll
jl
stc
in
mov
and
mov
orl
ret
add
dec
arpl
jnp
imull
inc
mov
das
mov
in
inc
out
fs
sti
mov
dec
sar
lea
xor
add
ret
push
mov
jle
and
imull
stc
mov
int
push
mov
outsl
sbb
shlb
in
fldenv
jp
xchg
xor
push
icebp
lcall
mov
popa
ljmp
mov
sti
sub
xchg
dec
int3
pushl
adc
inc
push
pop
test
or
repnz
adc
mov
cbtw
and
inc
mov
dec
cmp
pop
lds
add
pop
sahf
mov
bswap
scas
xor
mov
and
in
lcall
shrl
jmp
jae
pop
inc
stc
lcall
sbb
jl
dec
dec
dec
rclb
imul
pop
lock
or
mov
lahf
enter
jno
ret
icebp
scas
cmc
mov
fldenv
xchg
pop
imul
test
pushf
mov
mov
jbe
and
and
lock
xor
stos
cmp
lds
or
xor
cwtl
dec
jnp
stos
xchg
jbe
or
scas
fsubrs
hlt
jg
jo
mov
mov
cmp
add
sbb
mov
insb
dec
sarb
test
test
aaa
dec
fwait
subl
js
repnz
pop
push
incb
das
ja
fs
add
cmp
out
bound
xlat
aaa
fimull
pop
or
push
rorl
pop
sub
xor
cmc
jo
subb
push
and
push
jb
bnd
lods
lcall
dec
ret
inc
mov
mov
rorb
push
cmp
das
stos
enter
fsubs
cltd
jnp
cmp
cmp
jp
xchg
add
daa
inc
cmp
push
cmp
pop
data16
and
mov
jg
adc
inc
into
addb
jbe
and
gs
dec
das
adc
or
popf
js
mov
mov
xor
xchg
or
inc
dec
cmp
jbe
loop
gs
sahf
xor
into
sub
jp
mov
lds
pop
push
or
jecxz
aam
iret
or
popa
js
inc
pop
xchg
call
rcl
push
in
rol
into
mov
shrb
push
push
pushf
sbb
lock
test
mov
sti
and
je
es
inc
dec
test
ljmp
test
adc
ret
sbb
pop
loopne
jl
add
jg
arpl
and
mov
arpl
mov
gs
push
ja
sbb
dec
test
scas
and
mov
and
outsl
or
sbb
add
in
mov
ret
push
mov
rcr
les
jle
push
mov
jle
xchg
cmpsl
lds
sbb
jle
aam
cmp
add
insl
mov
ljmp
pop
mov
cmp
push
cmpl
aad
adc
rcll
and
jno
data16
fidivl
daa
sbb
xor
iret
faddl
inc
das
inc
pusha
xor
stc
scas
lahf
aaa
mov
cs
lock
push
inc
push
jbe
mov
dec
insb
pop
jns
mov
sbb
stos
leave
lock
xor
outsl
mov
mov
bound
movd
out
inc
addr16
sbb
aas
pop
outsb
mov
or
lods
xor
fdivrl
xchg
aam
xchg
movsl
repnz
iret
into
pop
adc
adc
cltd
mov
je
pop
mov
fadds
stc
dec
cmp
scas
cmp
insl
jno
in
mov
shlb
nop
jne
push
movsb
and
sbb
fsave
xchg
test
imul
loop
and
pop
xchg
int
pop
pop
movsb
dec
xchg
into
ljmp
mov
cwtl
test
test
xorl
imul
das
cmp
mov
jl
push
jmp
jnp
xor
out
or
outsl
adc
mov
subb
mov
pop
jo
lock
jl
push
push
push
dec
jno
pop
push
aad
sbb
jns
bound
mov
xchg
push
sti
push
xor
dec
fidivrl
adcb
cmp
push
mov
mov
xchg
stos
push
jo
sti
enter
fs
mov
popa
push
cs
ret
xchg
add
adcl
push
iret
les
stos
mov
cmpsl
pop
pop
cmp
pop
dec
in
mov
push
add
mov
sbb
xchg
sbb
hlt
add
aad
xchg
test
mov
das
xchg
xor
outsb
pop
pop
sbbb
es
clc
or
xor
iret
iret
adc
adc
jg
mov
pop
xor
das
add
js
mov
dec
mov
dec
lods
ja
add
pop
cmp
jecxz
pop
adc
lods
stos
and
inc
ret
push
mov
cmp
jne
roll
subb
mov
jb
or
inc
mov
lcall
mov
pop
jle
insl
js
gs
out
fisttpl
test
inc
sbbl
push
dec
shlb
shrb
out
test
mov
jo
in
add
movsb
mov
add
das
jle
adc
idivl
sub
popf
lea
mov
stos
ret
sbb
fildl
stos
fbld
lds
ss
gs
dec
cld
outsb
pop
hlt
cltd
hlt
dec
fsub
aad
cmp
adc
ret
sahf
sub
jl
cmp
jno
sub
xor
or
mov
and
scas
xor
xchg
out
mov
repnz
aas
cmp
gs
xchg
popa
pop
push
mov
or
inc
adc
or
push
add
sub
mov
push
mov
mov
jge
cltd
out
int
pushf
dec
out
cmp
sub
test
fidivs
or
rcr
jno
fistpl
dec
cmp
mov
push
int3
test
dec
xchg
insl
sbb
sarl
mov
in
mov
sub
cmp
nop
or
or
pop
cmp
add
jg
std
mov
xor
sbb
pop
jo
jg
cmp
xchg
push
lret
mov
sub
pop
inc
fistpl
dec
and
ss
int3
inc
incb
movsb
jne
in
fwait
lods
scas
jle
sub
fwait
test
xlat
mov
lret
push
aam
jecxz
nop
fcmovbe
jbe
js
data16
sar
mov
stos
in
mov
bound
push
adc
xor
gs
xchg
or
test
mov
mov
call
mov
cmp
test
imul
jmp
ficoml
popf
pop
xlat
daa
push
jp
or
int3
out
out
les
xchg
out
or
inc
aaa
mov
out
mov
pop
adc
pop
movsb
gs
xchg
jo
fsubp
hlt
dec
pushw
push
mov
fcomip
adc
test
sbb
fcmovb
out
adc
cmp
or
mov
call
xor
imul
sub
mov
icebp
push
outsw
dec
lret
fidivrl
fstpl
subl
fstpt
cmp
mov
notb
jo
fadd
cs
leave
cmp
sbb
testl
test
jno
push
stc
orb
lods
xor
cld
mov
or
or
imul
int3
stos
stc
ljmp
mov
addr16
out
add
pop
inc
lds
jge
jae
sub
cmp
xor
xor
mov
cmp
repz
ficompl
sub
mov
in
leave
lahf
insb
stos
cltd
in
add
xor
cmp
hlt
dec
roll
aam
xor
push
lods
mov
sub
jmp
pusha
add
shl
leave
shlb
insb
and
aad
movsb
test
add
icebp
idivb
push
sbb
movsl
cwtl
mov
dec
lahf
in
jns
jp
add
add
jecxz
mov
pop
pusha
or
push
movsl
mov
ficoms
sbb
mov
jmp
std
sub
test
mov
cmp
test
and
sbb
in
jbe
add
insl
dec
icebp
stos
mov
test
cmpsl
aas
repnz
scas
adc
bound
aad
insb
js
out
and
dec
jne
mov
ret
mov
mov
lret
out
sub
jae
ret
mov
adc
inc
jmp
inc
add
xchg
imul
and
daa
daa
ret
ja
mov
dec
mov
iret
and
sti
mov
xchg
cmc
fadds
sub
fstps
setae
stos
xchg
xchg
jno
dec
mov
cmp
scas
sbb
cs
cmp
paddq
sub
scas
mov
mov
rorb
jne
push
adc
leave
fucomi
fs
mov
push
fidivl
mov
push
pop
ljmp
pop
jl
sbb
lahf
xor
ds
subb
jge
das
jo
or
add
fs
cli
dec
push
lahf
mov
jb
fimull
repz
push
mov
xor
sub
das
pop
jle
idivl
push
push
jmp
call
test
pop
aas
ret
cmp
lds
adc
outsl
out
xor
dec
push
shlb
mov
push
out
cmp
inc
dec
cmp
push
orb
push
xchg
sahf
int3
inc
inc
adc
jmp
mov
jp
and
outsb
arpl
mov
out
pushf
dec
out
sbb
pop
pop
xchg
jns
sub
loope
icebp
popf
pop
hlt
fst
subl
mov
adc
imulb
in
mov
popl
decb
ljmp
gs
mov
pushf
je
mov
mov
shll
mov
mov
imul
pop
cld
rclb
es
add
orl
mov
push
fstps
lahf
mov
cmpsb
and
lahf
xchg
xchg
dec
cld
outsl
cmp
or
inc
mov
mov
cmpsb
jbe
sbb
sub
les
lods
imul
div
rorb
pop
jp
mov
push
push
add
lods
mov
xchg
push
into
enter
cmpb
push
test
add
cmp
mov
shll
xchg
ds
lods
shlb
adcl
aad
jno
and
jae
dec
and
xor
cwtl
push
push
push
jno
imul
test
aad
mov
xacquire
jge
mov
in
push
xor
leave
clc
adc
cmp
out
xchg
inc
addr16
gs
test
ret
pop
push
push
mov
bound
loope
in
jbe
mov
movsb
dec
lret
jne
mov
mov
mov
das
or
in
xor
push
sub
xchg
lds
xor
and
xchg
inc
in
or
dec
jle
mov
push
xchg
dec
mov
pop
mov
jnp
inc
ret
push
cmpsb
jge
leave
fcoms
fsts
and
or
idivb
cmpsb
cmp
in
fcomp
cld
and
loope
int
sti
ret
loopne
loop
push
adc
inc
xor
and
xlat
xlat
pop
jecxz
push
into
aas
cmpsl
sub
cmpsb
in
pop
fdivl
rorl
fwait
xchg
cs
or
iret
adc
dec
rorl
aam
sub
inc
and
jae
sbb
and
mov
lcall
out
sub
lahf
mov
xchg
push
lods
es
in
sub
mov
or
inc
insl
jmp
enter
mov
mov
ds
int3
int3
rcrl
xchg
or
sarl
fcmovnbe
cs
dec
adc
cmpsb
push
jno
and
push
nop
pop
jo
pop
leave
les
xchg
lret
add
push
mov
mov
cmp
xlat
cmc
aad
ljmp
cmpl
in
mov
jb
aam
mov
lcall
lea
or
push
outsb
popa
sbb
or
fiaddl
dec
xchg
lcall
bound
ret
jb
insb
scas
cld
jo
shrb
xchg
in
jp
jmp
inc
and
lock
outsl
xchg
stos
dec
daa
fsub
pusha
int
jbe
lds
pop
dec
inc
cld
adc
inc
int3
in
mov
lret
shrb
ja
inc
mov
push
sub
aad
dec
push
test
dec
xchg
in
mov
leave
pop
push
add
mov
push
mov
out
ljmp
xchg
js
jg
push
pushf
xor
adc
inc
xor
xchg
dec
and
sub
pop
xor
les
ficompl
insl
lcall
or
cmc
push
sub
or
lods
xor
clc
pextrw
push
movsl
push
sub
xchg
push
xlat
inc
pushf
fs
dec
in
out
test
icebp
ffreep
adc
fldt
sahf
int
adc
push
add
push
pop
push
sub
loope
outsl
xor
es
stos
in
add
xlat
ljmp
aaa
add
dec
inc
das
inc
imul
fstpt
jle
add
out
adc
pop
xchg
xchg
mov
in
popf
test
push
sbb
cmpsb
stos
push
cmp
ret
popf
stos
stos
testb
insb
and
inc
mov
and
aaa
leave
mov
dec
sbb
mov
or
jbe
adc
pop
ljmp
mov
lret
add
dec
fstl
mov
cmp
in
inc
bnd
les
ljmp
cmp
dec
add
fcmovnb
shll
cmp
clc
popl
in
add
xor
mov
into
stc
xchg
roll
and
jae
pop
pop
push
cwtl
jp
adc
mov
outsb
das
repz
cmp
push
fstps
cli
jb
adc
cmpsl
mov
sbb
jnp
out
mov
lahf
push
xchg
dec
pop
leave
pop
aam
jae
in
lcall
stc
das
pop
and
ja
jae
cmp
pop
mov
addr16
push
pusha
call
mov
rcll
mov
mov
call
fstps
xor
jle
int3
das
sub
ret
arpl
jge
cmpsb
gs
or
fldt
pop
cli
sub
cmp
incl
in
dec
pop
push
ficomps
inc
push
sub
xor
rcl
idiv
movsl
arpl
imul
sub
aas
push
mov
fidivs
movsb
jno
cmc
div
outsb
loope
nop
or
sti
sbb
cmp
gs
aam
loopne
fiadds
lock
out
andl
jo
in
fs
or
pop
pop
mov
imul
and
and
loope
test
pop
and
pcmpeqb
pop
in
aas
movd
cmpsb
pop
fstpl
aas
stos
outsl
xchg
sub
pop
cli
sub
in
lea
loop
xchg
add
or
into
ljmp
lods
mov
imul
mov
jbe
xchg
adc
loope
cmp
cmp
pop
adc
cmp
outsl
pop
inc
repz
les
lahf
mov
inc
in
data16
ss
inc
mov
jmp
dec
das
fnstenv
pop
test
push
xchg
in
hlt
mov
mov
cli
jp
ss
jns
dec
out
and
add
xor
xor
push
jno
pusha
dec
icebp
xchg
lock
popa
bound
stos
loop
cmc
movsl
js
add
xchg
xor
fwait
add
lret
popf
cs
stos
rcrl
ss
ljmp
mov
pop
mov
ret
mov
shrb
sbb
fldenv
in
decb
dec
stos
push
adc
into
sti
lret
fisttps
pop
lods
sar
cld
adc
dec
cs
js
push
fdivrl
stos
in
pop
cwtl
cwtl
xlat
cwtl
aad
mov
hlt
enter
pop
xchg
mov
sbb
xchg
mov
js
sbb
loop
dec
cmpl
shrb
out
shlb
jecxz
mov
push
sub
dec
xchg
xchg
xorl
inc
sahf
sub
mov
sub
jmp
ss
pop
call
shll
pop
ljmp
stos
dec
mov
loop
jbe
xchg
hlt
sub
pop
or
mov
out
imul
cmp
lds
lahf
mov
dec
jg
cmp
or
out
scas
aam
scas
fldcw
push
mov
push
mov
les
adc
inc
test
inc
push
sahf
aaa
gs
mov
push
fimull
or
push
lea
vmulsd
push
inc
or
fdivrp
adc
inc
cmp
or
insb
shll
popf
or
daa
mov
loopne
adc
mov
dec
pop
into
jb
adc
psrlq
mov
aam
push
add
push
vmovupd
sbb
stos
mov
ret
mov
outsl
int
xor
adcl
movsl
out
mov
es
pop
aas
xor
ljmp
test
push
or
ret
sbb
xor
xor
dec
pop
movsb
inc
hlt
cmp
xchg
push
mov
lret
cmpsl
out
mov
jo
nop
jb
das
ficomps
ret
dec
mov
imul
dec
fwait
je
cmpsl
ret
sbb
ret
jo
push
andb
add
imul
push
hlt
divl
push
shll
xchg
push
lea
mov
dec
cmp
cmp
aaa
sahf
mov
rcll
lret
mov
mov
ret
or
mov
pop
jbe
fstl
sub
leave
mov
ret
popa
sbb
add
stos
and
loop
jle
dec
adc
in
repz
mov
mov
das
inc
mov
jbe
xchg
jns
mov
loope
rcrb
pop
repz
push
je
sahf
cs
adc
int3
and
ret
in
add
mov
aaa
leave
sbb
mov
jmp
or
ljmp
xor
jno
aaa
mov
pop
popa
sub
rolb
pusha
dec
scas
cmp
mov
cmp
gs
mov
stos
add
cli
out
lcall
out
cltd
dec
pushf
jmp
mov
pop
lahf
mov
cmp
jae
adc
ss
sub
mov
fildl
dec
arpl
mov
add
notl
mov
test
cli
bnd
lods
gs
pop
decl
pop
mov
fistpl
mov
lea
pop
les
and
clc
mov
leave
pushf
cmp
mov
sahf
xor
leave
lds
inc
inc
xchg
imul
int3
addr16
dec
paddusb
fwait
ljmp
int3
enter
cmp
inc
push
scas
mov
aas
loope
jmp
lret
into
rorl
test
mov
sub
dec
scas
mov
jle
inc
rcr
fisubl
mov
mov
mov
dec
rorb
push
dec
jno
je
out
cmc
xor
push
push
jno
sub
out
xchg
lret
int
or
addr16
jle
rcrl
fs
addb
nop
andb
fidivrl
mov
sti
xlat
add
mov
into
repnz
mov
xor
adc
imul
rorl
js
xor
or
jge
test
dec
jb
test
xchg
mov
sbb
das
sub
sub
cs
xchg
fs
sbbl
test
and
pop
je
fwait
inc
aas
add
ss
xchg
cli
inc
sti
mov
mov
xor
cmpsb
cltd
nop
stos
xchg
mov
xchg
aad
dec
cmp
cmpsb
pusha
jb
sub
inc
xor
rorb
loopne
xor
in
imul
bound
out
mov
sbb
in
add
aad
iret
jne
mov
rcl
xchg
fcmovbe
mov
mov
xor
into
imul
push
bound
sbb
repnz
sub
xor
lret
sbb
mov
push
jle
jg
xor
xchg
mov
push
loop
pushf
out
repnz
mov
decb
in
push
sbb
ljmp
push
out
sbb
pusha
xchg
lock
lcallw
fs
lret
jno
lret
jecxz
push
and
mov
aas
or
mov
in
and
mov
mov
cmp
leave
mov
loopne
xor
mov
mov
jnp
xor
and
sarl
pop
pop
das
add
cmpsb
jbe
xchg
loopne
pop
and
xchg
stos
imull
adc
and
xchg
loopne
sti
jb
mov
inc
icebp
dec
jb
imul
pop
lret
jecxz
je
faddl
fildl
sbb
aaa
jno
sbb
in
mov
dec
mov
push
cmp
jge
xchg
pop
jmp
and
push
mov
int3
les
add
push
scas
mov
jnp
mov
pusha
jp
out
fcmovnbe
and
lods
neg
test
add
xchg
repz
inc
hlt
les
xchg
gs
xchg
jbe
ds
test
addl
imul
lea
xchg
lret
sub
nop
xor
aaa
mov
dec
pop
cmp
xchg
cmp
or
cmp
xchg
push
mov
fsubrs
in
ss
pop
pop
jle
sar
pop
dec
call
xlat
les
cmc
dec
xor
into
das
adc
movsb
outsb
nopl
push
jae
in
add
pushf
lock
mov
push
out
imul
test
cmc
pop
jmp
ds
mov
mov
fidivrl
test
test
mov
add
jbe
lods
adc
in
xchg
pop
mov
fdivr
ss
es
sbb
cmc
xchg
pusha
les
cmp
test
or
xor
add
movsl
fldenv
ss
or
sub
mov
out
and
sub
mov
scas
sub
sub
shll
test
cld
lods
jl
mov
dec
aaa
or
shl
inc
popf
xor
inc
ljmp
pop
mov
jns
test
or
cmp
push
insb
adc
xchg
xchg
in
cmp
gs
inc
dec
jl
dec
cmpsl
call
je
push
mov
or
dec
jne
pop
sbb
hlt
ret
xchg
push
push
mov
hlt
inc
jge
test
sbb
adc
ret
cld
mov
push
das
mov
hlt
or
or
adc
ljmp
and
or
incl
divl
fmuls
mov
or
xor
lcall
lock
call
fs
cmp
mov
aad
shr
jmp
std
cmpsb
das
outsb
push
popa
pop
stos
or
sub
xrelease
in
test
test
ficoms
rcrl
sub
and
sbb
stc
insl
pop
insl
aaa
mov
loope
aaa
dec
pop
xchg
inc
fbld
cs
jns
xchg
mov
repz
sub
sbb
add
lds
loope
dec
mov
int3
add
sub
pop
mov
aaa
mov
inc
and
cmc
mov
iret
andl
mov
jnp
fwait
clc
xchg
mov
roll
test
orl
mov
cmp
pushf
loopne
test
push
mov
sbb
sbb
mov
ds
jns
lret
pop
pushf
jge
mov
xor
sti
lock
enter
test
mov
loope
pop
arpl
mov
or
xchg
push
jnp
scas
pop
mov
mov
stos
js
repz
fbstp
pop
pop
jae
lods
shrl
lcall
popf
pusha
addr16
daa
xchg
mov
fistpll
movsl
andl
dec
insb
mov
cmpsb
mul
xor
mov
in
and
in
fldl
call
stc
xor
jp
jbe
adc
dec
stc
sub
mov
cwtl
mov
cmp
shr
in
adc
cmp
outsb
add
add
fwait
rcl
push
push
adc
pop
fidivl
repnz
hlt
hlt
push
sbb
xor
aas
test
cmp
adc
inc
test
adc
push
leave
or
dec
jp
xor
mov
shl
mov
insl
pop
fs
mov
loopne
ret
xor
sbb
call
jp
pop
ds
orb
addb
jne
inc
mov
lods
movsl
push
mov
mov
sbb
pushf
push
mov
jno
inc
mov
in
insl
jbe
sub
xchg
outsb
imul
mov
pop
cmpb
shll
mov
ret
lcall
mov
jg
sbb
push
xor
or
mov
add
scas
ret
xchg
adc
es
xchg
mov
sbb
cmp
adc
stos
adc
mov
cmp
mov
aad
xchg
xor
mov
loop
dec
psubsb
lret
clc
mov
in
and
or
pop
and
bound
pop
clc
lcall
in
pop
lds
jnp
lret
jge
aas
xor
mov
xchg
out
xchg
imul
jge
cld
enter
and
aaa
push
adc
insl
test
aam
add
dec
pop
jle
movsl
jge
xchg
inc
pop
js
adc
mov
sub
inc
push
xor
pushf
jo
ret
pop
add
pop
inc
cmp
dec
xchg
jo
fstpl
notb
es
pushf
div
sub
mov
inc
mov
push
pushf
testl
idivl
xchg
mov
rclb
add
sbb
pop
arpl
data16
jp
dec
mov
std
popa
adc
in
sub
pop
cs
or
push
and
insb
pop
pop
sbb
arpl
or
inc
dec
outsb
pop
inc
pop
loop
cwtl
fcomi
ss
ja
test
pop
sub
dec
xor
xchg
add
xor
lret
pop
lods
sbb
push
jle
mov
into
xor
sbb
fdivl
xor
sub
daa
insb
loop
inc
mov
adc
fneni(8087
aas
sarl
fidivrs
fsub
sub
xchg
adc
sbb
pop
ret
push
std
adc
into
shl
sarb
adcb
xchg
mov
out
movhps
ljmp
std
les
push
xor
movsb
rcr
push
inc
cmp
or
negl
or
mov
mov
inc
pushl
cwtl
decb
mov
sub
loopne
mov
xor
jp
lds
cwtl
dec
mov
jmp
cmp
or
pop
push
xor
fimuls
push
bound
cmp
pop
movsb
int
out
pop
insb
cmc
cmpsl
cmp
insl
cltd
sub
clc
stos
jmp
movsl
cmc
sub
rol
mov
cld
mov
daa
outsl
mov
push
mov
push
push
dec
insl
outsl
push
dec
cmp
sahf
add
inc
adc
sbb
dec
pop
cwtl
cmp
pop
pop
ds
je
cmp
repnz
push
mov
cltd
dec
cmp
out
sub
mov
jp
sbb
dec
and
shl
adc
aas
inc
cmpsb
xchg
imul
jecxz
lret
add
rcr
mov
mov
pop
lahf
or
sub
add
dec
dec
mov
aad
xor
js
mov
in
cmp
call
dec
das
into
jmp
subl
out
into
orb
pop
sbb
clc
xor
cmp
ret
outsl
test
or
mov
ret
xchg
test
pop
jge
lcall
sub
popf
scas
out
add
shrb
adc
mov
pop
inc
xor
rorl
or
js
xchg
fnstenv
inc
test
sub
addr16
leave
sbb
pushf
cmp
adc
jb
psubb
lcall
sub
and
mov
jbe
fcmovu
les
test
jle
lds
lahf
fwait
dec
cmpsb
jp
in
fistpl
incb
call
sub
mov
enter
jp
les
cmp
xchg
cmpsb
fwait
clc
outsb
lea
cltd
cmp
dec
cld
cmpl
push
inc
stos
out
sbb
iret
sbb
mov
push
lcall
xchg
adc
xor
call
pop
cmp
pop
pop
xchg
lods
mov
lock
nop
xchg
stos
jae
and
ret
loope
mov
cmp
mov
sub
jno
xchg
sahf
arpl
movsb
xchg
fidivs
add
jl
sub
pop
sub
cli
test
movsl
pop
mov
mov
sahf
dec
adc
mov
mov
pop
iret
dec
dec
push
mov
popfw
fisubs
pop
mov
test
testl
dec
push
pop
jmp
das
incl
xchg
cmc
and
je
xlat
sti
mov
jno
cmp
sbb
daa
fiaddl
test
dec
pop
test
scas
pop
sub
sbb
xchg
imul
out
fwait
and
mov
adc
inc
cmp
pop
mov
movsb
aaa
sub
in
in
loope
les
fwait
dec
add
sbb
gs
pop
jb
fsubl
or
es
sub
in
mov
mov
sbb
mov
stc
icebp
shrb
test
fxch
push
jmp
stos
lds
sub
mov
and
adc
pop
loop
in
jge
shrb
arpl
andb
dec
pop
hlt
mov
mov
pusha
iret
jnp
fwait
adc
push
rolb
pop
jp
sbb
dec
in
push
xor
xor
inc
repz
bound
jbe
scas
cld
loope
cmp
cmp
inc
push
fs
cmp
mov
cmpsl
cli
sti
xor
push
insl
dec
cmp
mov
and
xchg
lock
adc
sbb
sbb
jp
cmp
rorl
mov
fisttpl
mov
adc
insb
bound
arpl
mov
insl
xor
and
outsb
pop
xchg
xchg
mov
and
inc
mov
fcoml
in
out
out
xor
loopne
add
dec
leave
imul
mov
pop
inc
mov
adcl
fiadds
mov
sahf
jne
cmp
xlat
xchg
adc
jecxz
sub
dec
mov
jne
mov
jnp
push
clc
cmp
aad
jb
sahf
repnz
bound
lods
decl
movsl
nop
fisubs
or
add
mov
pop
dec
pop
mov
and
xor
popf
sti
insl
mov
out
pop
inc
mov
out
mov
popa
in
and
xor
in
fadds
aam
pop
test
addr16
inc
mov
iret
gs
div
push
enter
or
repz
pushf
testb
fdivrl
sbb
sahf
inc
sbb
add
cmp
xor
lahf
scas
shrb
lods
push
pop
pop
jecxz
leave
and
fisttpll
and
add
addr16
cwtl
mov
xor
push
xchg
pop
mov
adc
adc
loope
insl
in
mov
imul
out
xchg
outsb
mov
nop
jns
sub
jp
pop
mov
mov
cmpsl
insb
add
adc
aas
loop
jae
lock
pop
ss
mov
mov
bound
sbb
pop
jle
push
test
push
dec
push
pop
xor
sub
ss
sub
inc
cmp
push
mov
lods
xchg
cli
jo
sbb
cld
test
push
les
jo
aad
mov
mulb
addr16
lods
mov
pop
pop
out
cltd
out
and
cmc
xchg
shll
aad
adc
mov
sbb
mov
lods
mov
mov
ja
jnp
push
pop
loope
popf
cmpsl
or
inc
aaa
xor
inc
rcrb
sti
out
cli
jo
add
sbb
cmp
call
lcall
add
or
adc
andb
cmpsb
mov
lahf
xchg
mov
das
fistpl
icebp
andps
pushf
stos
jecxz
dec
cmpsb
imul
sarb
mov
jns
mov
dec
in
mov
xchg
icebp
js
push
push
outsl
lods
dec
adc
cmp
fdivrl
xor
cmpsl
cli
cmp
pop
xor
insl
xor
stos
xor
sbb
push
xchg
sub
mov
push
xchg
inc
push
jmp
popf
lods
sbb
aam
fnstcw
push
sbb
repz
cmpb
test
jb
rcr
xor
xor
push
sbb
insl
mov
mov
adc
jge
add
mov
push
add
arpl
mov
test
push
push
pop
loopne
sti
mov
ficoml
sub
fidivs
or
push
mov
aaa
sahf
push
cld
test
in
xlat
sbb
pop
jp
sub
mov
ss
lret
test
idivb
lock
or
dec
add
cmpsl
leave
int
mov
cmc
mov
xchg
jmp
int3
pop
movb
insl
ret
dec
mov
test
bound
xchg
pop
insb
mov
mov
test
cli
add
pop
jns
cwtl
lahf
or
leave
stos
xlat
ret
lods
in
aaa
rorl
inc
clc
sub
scas
in
mov
cld
loop
mov
pusha
mov
cmpsl
inc
mov
adc
test
inc
scas
jge
jge
iret
or
pop
jl
push
sarl
leave
push
inc
iret
das
cmpsl
pop
mov
inc
imul
pusha
rcrl
mov
and
pcmpeqw
pop
cmp
dec
pop
or
popa
sub
fiadds
inc
push
pop
fsubrl
xchg
cmp
push
popaw
push
nop
add
cmp
mov
jmp
aam
or
in
imul
mov
fwait
shll
aad
jl
ficoms
push
jns
pop
fs
push
outsb
pop
xchg
dec
pop
mov
pop
fdivl
xchg
pop
in
and
cmp
add
xor
and
out
sub
xor
jo
jg
cmp
rorb
fucomi
sbb
das
push
cmp
outsl
pop
fs
xor
jg
iret
mov
int3
out
push
leave
push
and
into
int
push
dec
pop
ss
mov
loopne
ret
add
lret
sub
aaa
cmc
pop
mov
adc
xchg
push
mov
fcoms
inc
mov
mov
aad
fnstsw
loop
inc
mov
dec
pop
cmc
cmp
cmp
fldcw
mov
pusha
mov
mov
imul
psubusw
sub
pop
addr16
sub
push
iret
dec
addr16
sub
out
and
push
scas
hlt
sub
jle
aaa
cmp
xor
bound
cmpsl
test
sahf
rorl
dec
sbb
pop
lret
aam
fs
repnz
mov
mov
mov
in
lretw
inc
inc
leave
loope
hlt
daa
shr
mov
rcll
mov
repz
insb
or
je
nop
dec
or
repz
sahf
push
lret
xchg
loop
arpl
dec
mov
inc
push
movsl
mov
jmp
push
add
lods
and
add
pop
sub
pop
jmp
mov
mov
add
jecxz
call
and
mov
jmp
idiv
add
pop
dec
dec
nop
jnp
mov
fs
test
mov
cmp
ljmp
pop
int
mov
popf
inc
add
cltd
xor
inc
movsl
ljmp
shrl
arpl
jp
sti
ljmp
xor
pop
xchg
sbb
xchg
int3
lods
pop
movsb
fidivrs
cli
xchg
nop
push
hlt
cltd
add
push
cmc
pop
hlt
mulb
out
test
xchg
or
pop
repz
pop
dec
mov
xor
icebp
ljmp
addr16
xor
sbb
aas
jae
cld
mov
fstl
pop
hlt
sbb
hlt
popa
outsl
pusha
mov
add
push
or
mov
cld
idivb
dec
sarb
fwait
cmp
adc
cmpsb
dec
testb
lahf
dec
fisttpl
inc
js
ficomps
int3
pop
or
fs
std
or
pop
rolb
push
addr16
js
fadds
xchg
lods
test
mov
jbe
cmp
xchg
adc
movsb
aaa
pop
dec
sub
incb
fdivs
jnp
dec
jo
call
bsr
or
fdivrs
jbe
repnz
xchg
shll
mov
push
mov
xchg
adc
jnp
nop
cmc
push
repz
iret
cltd
fnstenv
scas
ret
dec
inc
adc
lds
inc
lock
test
mov
or
mov
pop
mov
mov
sbb
icebp
and
xchg
les
leave
jl
sub
sub
movsl
fsqrt
mov
std
std
daa
dec
lret
nop
and
int3
dec
lods
data16
mov
and
push
frstor
addr16
dec
shrl
movsb
frstor
mov
mov
add
dec
adc
dec
fs
imul
repz
pop
adc
adcl
cmp
fists
mov
nop
add
jp
mov
mov
mov
into
adc
outsb
xchg
lahf
fdivl
ja
andb
push
push
pushf
std
rcll
les
fs
hlt
test
cmpb
lods
jle
out
inc
cmpsl
test
loopne
inc
pop
imul
jp
or
push
stc
ds
out
pop
fists
inc
scas
loop
jge
sub
stos
aas
scas
out
cld
cltd
pop
faddl
sbb
mov
sub
aad
adc
and
movsl
xchg
cs
in
loop
stos
adc
hlt
and
sub
repnz
pusha
inc
cmpb
xor
dec
fldcw
scas
icebp
dec
leavew
mov
lcall
pusha
xchg
jmp
ss
mov
and
sbb
ficomps
xchg
and
hlt
cmp
fst
jne
inc
shll
cmp
test
cmp
jnp
lea
clc
fxam
jne
js
inc
xor
and
sub
and
std
loop
pop
dec
and
mov
push
fidivl
push
dec
sub
aaa
dec
add
insl
out
jge
nop
lock
iret
push
lds
mov
imul
add
push
test
hlt
faddp
inc
mov
cld
testb
in
inc
clc
and
fbstp
enter
cmp
jle
inc
leave
dec
sbb
out
and
xchg
fmul
jb
scas
repz
xor
in
mov
inc
xchg
fdivrp
jg
jo
shrb
add
lock
jno
xchg
jmp
lods
hlt
int3
pop
dec
lds
jnp
shrb
push
jg
sub
jns
outsl
lea
push
pop
ss
and
or
aad
jecxz
push
adc
adc
sbbb
adc
adc
mov
push
stos
clc
lock
jp
adc
lret
xchg
or
mov
mov
outsb
sub
xchg
adc
sub
pop
sti
frstor
xchg
push
mov
lea
gs
stos
jns
stos
jl
shll
adc
adc
leave
je
pop
jb
dec
fwait
out
push
mov
subl
push
stos
or
sub
test
push
mov
lods
shrb
add
add
icebp
scas
outsl
mov
add
scas
pop
data16
lcall
mov
inc
push
int
sbb
frstor
add
cltd
in
mov
lret
add
ss
mov
testb
fs
into
aam
dec
pop
cmp
lea
outsl
jle
adc
mov
std
jle
lret
in
int
loop
xor
add
loopne
pop
push
xor
les
jg
push
mov
mov
in
adc
mov
push
adc
sub
cmpsb
lds
jp
xchg
lret
sub
into
dec
je
mov
fstpl
int3
sahf
cmp
adc
pop
jno
xchg
sub
cmp
mov
xor
movsl
mov
sahf
iret
int
cli
mov
es
test
dec
sti
cmp
jae
push
iret
add
test
fsubs
lods
mov
add
mov
addr16
js
aam
in
push
lcall
mulb
loope
inc
and
aad
out
xchg
dec
xchg
and
leave
cmp
add
push
pop
mov
cs
cmc
pop
cmp
test
cmpsl
shlb
xlat
out
lahf
mov
and
jns
pusha
pop
sbb
sub
sahf
pop
mov
mov
out
mov
into
rorb
xor
sbb
int
add
int3
jecxz
or
mov
sub
add
mov
xchg
xchg
mov
push
cmp
loope
and
scas
pop
jecxz
stos
sarb
push
data16
adc
int3
mov
pusha
add
add
sti
in
pop
bound
mov
icebp
das
inc
pop
shlb
out
lahf
adcl
push
or
add
pop
mov
popf
mov
pop
in
cmpsb
xor
scas
ja
es
add
cmp
sbb
mov
add
clc
outsl
jmp
cmc
je
mov
push
xor
leave
mov
xchg
xchg
push
lcall
cli
adc
adc
aaa
rorb
lock
iret
fbstp
test
add
mov
inc
pop
sahf
pop
inc
jne
push
scas
subl
hlt
push
sbb
adc
mov
adc
xchg
sbbl
cmc
subb
mov
std
mov
ret
repz
xor
je
call
repz
enter
in
daa
xor
mov
or
in
mov
stos
cmpl
int
xor
pop
jl
loop
popf
js
imulb
mov
mov
inc
addr16
push
cltd
mov
jg
mov
jg
aas
addr16
push
aaa
dec
and
icebp
xchg
pop
sub
mov
push
inc
in
xchg
in
cmpsl
cmp
stc
scas
movsb
sarb
push
pop
ret
fsubl
pop
ficoml
mov
ss
out
cmpl
ffreep
inc
movsb
jnp
xchg
sub
xchg
pop
sub
cld
lret
dec
leave
fists
pop
mov
rcr
and
adc
fcomps
cvtps2pd
inc
add
les
push
call
push
and
out
test
rcrl
push
and
ret
jo
aaa
jle
xchg
mov
or
dec
shlb
roll
mov
out
or
dec
lock
sbb
lret
shll
adc
push
push
push
fldenv
ja
jns
scas
mov
mov
push
push
and
popa
pop
les
aam
mov
in
mov
or
mov
nop
mov
and
loop
inc
loop
fs
push
and
sarb
dec
sbb
stc
pop
inc
push
xor
jge
push
sbb
clc
subl
sub
push
xor
mov
bound
in
cs
add
pushf
mov
test
adc
mov
cli
mov
mov
in
jbe
or
dec
push
pop
popf
push
les
fisubl
testl
dec
inc
and
mov
xorl
adc
bound
ja
cmp
lds
cwtl
sbb
daa
arpl
outsl
pop
pop
xchg
outsb
mov
loope
or
push
nop
testb
xchg
inc
sbb
repz
cmpsl
push
aas
rcr
inc
daa
mov
mov
ret
xchg
dec
pop
in
mov
loop
nop
wbinvd
lds
add
sti
testl
xor
push
sbbl
mov
push
adc
mov
xor
xchg
outsb
cli
ja
dec
xchg
in
loope
and
fbstp
xor
inc
pusha
sarb
out
add
or
mov
cli
sub
push
leave
stc
mov
or
pop
cli
int
iret
mov
push
stc
imul
push
lret
testb
push
rcll
daa
push
mov
mov
mov
in
xchg
or
inc
pop
shl
cs
and
jle
pop
rorl
xchg
add
and
or
sbb
pop
sbb
addr16
in
and
in
lods
daa
or
cmp
aad
push
test
loopne
jns
sub
jecxz
int3
and
fucom
push
and
mov
test
mov
pop
nop
outsb
dec
inc
mov
mov
fwait
pop
pusha
mov
pop
bound
adcl
mov
and
arpl
es
jmp
add
push
xor
adc
stc
pop
loope
lcall
divl
js
test
jns
xchg
loope
mov
addb
ja
jbe
sbb
mov
sti
mov
push
repnz
fnstsw
in
ljmp
pop
xchg
mov
mov
mov
mov
leave
mov
xchg
pop
xor
dec
ds
ljmp
stos
jge
add
or
sbb
dec
int
ret
lock
cmp
icebp
mov
pop
add
mov
mov
xor
lock
lahf
sbb
xlat
cmp
mov
pusha
mov
dec
push
sti
push
jbe
std
sbb
jae
bound
mov
pop
mov
adc
lds
push
mov
mov
int3
jge
lret
cmc
adc
je
and
in
pop
fisubs
imul
mov
jle
lret
push
jmp
dec
ss
pop
pusha
jbe
sbb
push
mov
add
sbb
add
aas
dec
sbb
push
mov
fbld
and
cld
and
sub
lea
pushf
es
outsb
push
push
pusha
lea
pusha
sub
mov
fwait
sbb
cltd
mov
dec
xor
sub
call
add
lret
insb
push
in
stos
dec
pop
fnop
fisttpll
pop
lahf
lahf
popf
dec
jns
sub
or
in
dec
xchg
ljmp
mov
fs
fdivrs
and
push
xor
pop
jmp
nop
test
imul
sti
and
mov
ja
mov
aam
ret
subb
add
add
aas
push
xchg
out
int
xchg
mov
mov
adc
bound
lods
dec
and
xchg
push
lods
lock
mov
push
dec
xchg
and
and
push
andl
or
cmp
mov
mov
xor
mov
je
or
subps
xchg
add
ss
ficoml
adc
mov
or
xor
in
mov
pop
jbe
dec
stos
xchg
sub
and
fwait
inc
inc
daa
cmp
loope
roll
mov
flds
sub
and
pop
inc
add
inc
out
xchg
repnz
gs
repz
in
sub
inc
stos
into
mov
cmp
jecxz,pt
in
test
mov
xor
mov
mov
mov
push
dec
xchg
lds
enter
adc
jl
inc
mov
xchg
cmp
pop
adc
fnstsw
outsb
mov
pop
aad
xor
inc
loopne
xor
and
and
andb
mov
adc
and
loope
rol
adc
push
push
inc
sbb
xchg
xchg
roll
inc
push
cmpsl
das
xor
adc
xchg
push
mov
cmp
xchg
repz
xchg
mov
pop
dec
mov
cmp
and
push
popa
push
sub
fisubrl
fcompl
fwait
adc
xor
inc
push
mov
mov
mov
cmp
jle
xchg
or
mov
xchg
xchg
fidivs
mov
js
or
out
clc
lea
testb
out
not
stc
jp
pop
aaa
sbb
mov
rcpps
and
xor
sbb
cs
mov
insl
xor
sub
add
xor
pop
mov
mov
add
cmp
pop
add
sti
xor
sarb
lods
outsl
fs
imul
sti
scas
add
fwait
push
enter
sub
sahf
sub
cs
dec
push
pop
push
pop
cmc
or
dec
outsl
xchg
sub
shl
clc
les
sbb
mov
mov
push
xor
xchg
out
jmp
mov
pushl
mov
shlb
ss
aaa
test
or
sbb
mov
inc
cmp
outsb
aam
dec
pop
mov
mov
sub
xchg
fsubr
inc
pop
aaa
fbstp
das
scas
sahf
cmc
jns
adc
subl
ds
mov
cmpl
push
adc
repz
push
dec
push
fucom
inc
xchg
cmp
mov
mov
sahf
or
cmpsl
cmp
mov
fldcw
divps
add
jge
jo
pop
xor
add
js
lds
xchg
push
jae
inc
ss
das
dec
in
sub
mov
out
imul
pop
xchg
imul
or
sbb
into
and
dec
sbb
lcall
xchg
sub
jbe
icebp
leave
fidivrl
pop
or
filds
adc
dec
sub
inc
jae
shlb
inc
inc
dec
pop
fldenv
mov
inc
fildll
mov
scas
jecxz
jnp
jmp
repnz
push
jmp
xchg
lret
stos
imul
cmp
cld
push
inc
loopne
not
mov
cmc
fstpl
pop
mov
dec
jmp
out
arpl
mov
lahf
sub
push
pop
lea
pop
mov
sbb
out
hlt
sbb
push
stc
or
cmp
jle
sbb
lahf
loopne
mov
mov
pop
pop
aas
mov
dec
cmpb
push
in
or
pop
jecxz
lcall
sar
out
gs
outsl
sub
fdivr
and
mov
ljmp
in
call
mov
sar
test
mov
push
ds
out
pushf
add
ja
pop
cwtl
xchg
leave
or
xchg
mov
xlat
scas
loop
jo
aad
in
cs
mov
cmp
jge
stos
test
mov
dec
xor
loop
adc
outsl
test
sahf
mov
cltd
mov
xchg
std
leave
mov
adc
pop
push
fidivrs
nop
test
mov
lds
mov
mov
mov
loopne
fdivs
ret
ret
mov
ret
mov
ljmp
and
mov
lods
adc
mov
negl
inc
lret
mov
ss
aaa
push
ret
adc
sub
popf
scas
mov
dec
test
or
cmc
in
imul
ja
jl
pop
cmp
arpl
fstp
stos
repnz
jl
test
jns
subl
nop
hlt
mov
lods
out
and
fcompl
jg
cmpsl
adc
loop
inc
pusha
das
push
mov
flds
add
inc
dec
sbb
xchg
outsb
lcall
jns
jg
orb
add
loope
adc
pop
xchg
out
jle
mov
sbb
mov
notb
cltd
sbb
sarl
pusha
pop
test
in
sti
mov
movsb
mov
lds
mov
notl
add
mov
jmp
pop
jl
or
mov
lahf
es
mov
push
insl
inc
hlt
add
xor
bswap
mov
adc
out
mov
insl
subb
cltd
inc
daa
jnp
push
in
add
jmp
pop
pop
js
fadds
xor
inc
subl
pop
mov
hlt
jg
xor
adc
cmp
dec
pusha
or
lods
aaa
aad
test
sahf
adc
loope
lahf
aam
aad
in
inc
xchg
clc
nop
out
decb
pop
dec
and
enter
loope
pop
insb
dec
adc
fnsave
push
inc
mov
xchg
dec
push
xor
rclb
mov
cwtl
sbb
popa
pop
mov
les
sbbl
in
fisttps
stos
cld
fsubrs
cmp
addr16
jl
dec
pop
in
dec
cld
sbb
mov
ds
das
shl
rep
add
and
shrb
lods
sahf
lods
cmp
mov
movsb
or
mov
sbb
jae
sbb
ret
sbb
loope
sti
mov
pop
fdecstp
jmp
arpl
jg
xor
daa
sbbb
and
push
mov
and
std
fcmovnbe
or
mov
jle
cmpl
xchg
push
mov
xor
insl
cmp
jns
mov
out
cmp
mov
push
inc
sbb
cmpb
inc
loope
aad
in
test
call
dec
jno
out
testl
pop
mov
and
in
pop
clc
xor
adc
mov
ljmp
nop
xor
stos
loop
pop
jae
call
pop
add
jle
mov
imul
cmp
mov
xchg
clc
sti
movb
sahf
fnsave
inc
orl
lahf
mov
lock
mov
fsts
ja
mov
sbb
mov
mov
or
mov
adc
sti
sbb
or
jle
xchg
into
xor
push
orl
stos
sti
add
pop
outsl
loopne
movsb
sub
mov
mov
hlt
test
icebp
dec
pop
inc
pop
cli
push
mov
dec
cmp
sahf
xchg
push
lret
or
inc
xor
aas
fmulp
add
icebp
lods
mov
movsb
es
clc
jno
push
jb
ficoms
add
pop
mov
das
cmpsb
jns
jmp
pusha
insb
cld
data16
clc
enter
sbb
cmc
cmp
push
loop
stos
inc
mov
ds
jb
and
push
and
shll
cmpsb
aad
pop
outsl
cmp
push
ja
and
add
std
insb
je
jecxz
or
add
mov
mov
std
in
mov
fs
mov
jecxz
and
sbb
cmpsb
les
xchg
mov
lds
push
and
test
repz
mov
cli
out
and
icebp
leave
leave
mov
push
cmpsb
xchg
sub
sub
cmpsb
dec
or
cli
lcall
orl
cmpsb
jo
insl
in
push
cli
jg
fbstp
dec
fdivrp
ja
dec
mov
jg
push
rorb
jle
sub
imul
pop
jg
lods
xor
xchg
push
fmull
and
cltd
pop
jmp
inc
sarb
jns
lret
loope
jno
bound
or
andl
jbe
ljmp
mov
inc
pop
out
loopne
in
jl
xor
shrb
dec
inc
mov
lret
out
pop
or
js
adc
push
and
ds
xor
dec
inc
mov
cmc
fcomip
mov
aas
in
xlat
faddp
stos
xchg
push
dec
push
in
xorb
mov
push
lock
mov
sub
sub
push
pop
lods
jecxz
mov
ficomps
int3
stos
cmc
mov
in
movsl
xchg
pusha
daa
pop
iret
cmc
dec
fsubs
mov
push
shlb
mov
push
xchg
insl
mov
lea
test
pushf
cld
cltd
cmp
mov
das
popa
lret
mov
mov
jl
pop
dec
in
jp
sbb
add
arpl
xor
lods
dec
addl
in
cmp
dec
dec
jb
outsb
jae
bound
add
sub
cmp
dec
push
jge
jno
pop
hlt
cltd
or
mov
mov
push
jge
mov
add
push
pop
mov
or
xchg
push
fisttps
inc
addr16
cltd
dec
lret
pop
loopne
cli
adc
lret
adc
scas
std
xchg
hlt
pushf
sahf
aas
adcl
ss
dec
adc
call
hlt
subl
inc
inc
mov
in
cs
mov
ljmp
rol
push
dec
js
fsubl
sbb
lods
pop
bound
test
leave
aaa
lcall
sbb
adc
mov
xor
aam
dec
aam
inc
sub
mov
cwtl
leave
mov
repz
pop
movsl
stos
dec
out
addr16
mov
xor
enter
push
sbb
call
shll
ss
fidivs
mov
jge
test
popa
cld
jo
inc
rcrl
or
movsl
jmp
inc
repz
in
jmp
loop
test
xor
ja
adc
hlt
push
mov
lea
push
loopne
sub
dec
mov
inc
in
push
ljmp
push
sub
shr
aad
pop
popa
xchg
dec
sub
lods
jae
xor
les
setb
xchg
bound
clc
mov
sub
push
dec
es
cmc
outsb
jg
scas
nop
mov
sbb
lret
stos
cmp
scas
pushf
mov
lods
push
stos
cmpl
inc
mov
mov
int
aam
jnp
movsb
dec
xchg
mov
mov
adc
add
xor
lahf
mov
fxch
fcoml
dec
mov
pop
sbb
sub
pop
dec
pop
mov
loope
lret
and
xor
out
and
fldl
cmp
clc
repnz
xchg
lea
cmc
dec
js
xchg
js
xchg
mov
xchg
sub
mov
jg
lds
lahf
xlat
inc
xchg
push
xor
ds
dec
rol
xchg
jmp
push
insl
adc
mov
inc
rorb
lock
mov
rorb
jb
in
xor
mov
rorl
lea
jp
push
add
mov
cmp
add
inc
jl
inc
dec
nop
jo
sub
addr16
out
clc
fdivl
cmp
push
ficomps
mov
cmp
enter
mov
int
lahf
xchg
scas
fstps
pop
out
adc
bound
xchg
out
sbb
iret
pop
loope
fnstenv
inc
xchg
rol
test
ljmp
clc
add
cwtl
test
jp
sub
fidivs
add
jne
or
jne
stos
movsl
fldenv
xchg
mov
sbb
xchg
push
std
dec
mov
icebp
mov
mov
mov
xchg
dec
add
pop
bound
pop
adc
bound
pop
inc
sub
add
xchg
adcl
lret
test
aam
decb
icebp
mov
jp
ja
pop
icebp
push
or
std
jb
adc
adc
mov
sbb
jl
mull
push
or
shr
rolb
repnz
jb
push
push
jl
in
adc
pop
or
cmp
test
adc
iret
test
into
in
cmp
ret
add
xchg
sbb
mov
fidivs
sub
dec
mov
xchg
add
pop
lret
aaa
dec
cmc
fsubrs
mov
dec
loop
in
xlat
enter
or
stc
adc
data16
or
mov
jl
push
lret
and
sbb
and
mov
xchg
sub
cmp
push
xchg
push
dec
xor
cmp
jbe
mov
or
jne
fcmove
jns
sbb
je
cltd
pop
push
pop
mov
adc
addl
pop
add
ror
mov
xchg
cmpsl
jno
clc
shl
add
mov
dec
call
aas
lock
lcall
xor
lods
scas
test
clc
and
mov
xlat
and
mov
add
xor
rcr
xchg
std
push
cmp
inc
iret
lods
fwait
adc
sub
nop
add
ret
lods
daa
pop
mov
movsl
mov
test
repz
sub
ljmp
adc
sub
lock
filds
outsb
fidivl
mov
pushf
call
jb
xchg
dec
gs
jns
mov
int
repz
sub
jecxz
or
and
movsb
lds
cwtl
mov
mov
push
in
xchg
adc
add
cmp
popa
inc
andb
xorl
pop
pop
cmp
adc
test
push
stos
cltd
adc
or
mov
gs
mov
jbe
test
shlb
stc
daa
or
add
push
xor
testb
fistps
pop
xor
shll
int3
test
roll
test
ljmp
das
loop
loopne
std
or
cmp
jne
sub
sub
popa
cmc
in
std
loope
jo
in
in
stos
mov
sarl
movsl
fcom
dec
jecxz
pop
push
mov
std
mov
filds
fnsave
push
sub
xchg
mov
divl
sbb
mov
fisttpl
or
and
testl
push
push
pop
push
lret
push
push
or
inc
popf
into
jp
add
or
sub
and
jo
cmpsl
push
push
hlt
movb
lcall
sub
xor
jp
and
out
mov
rcrb
add
jecxz
loope
in
push
xchg
orl
int3
fsubr
pop
inc
jg
add
jge
add
enter
push
xor
roll
inc
idivl
mov
ja
jmp
mov
push
pop
cmp
cmovl
xchg
subb
push
in
mov
jecxz
jge
and
add
jb
adc
xor
jp
lcall
nop
pushf
xchg
aam
or
cmp
xchg
ja
cmp
adcl
and
pop
cltd
icebp
pop
sub
push
jne
dec
inc
push
pop
pop
push
fnstcw
or
inc
imul
push
outsb
push
pushf
out
sbb
cs
lea
pop
dec
mov
clc
sti
movsb
rorb
popa
pop
mov
mov
out
arpl
ss
cmc
cli
dec
mov
jne
inc
test
imul
mov
daa
add
mov
and
and
mov
or
or
mov
or
test
push
stos
out
xor
cmp
dec
dec
or
mov
cmp
outsb
es
rcll
mov
sbbl
push
xor
shlb
jne
adc
add
movsb
xor
sahf
test
cmp
and
imul
xchg
cmp
jg
cmc
fsts
shrb
add
mov
das
test
mov
ror
adc
lds
and
repnz
or
xor
dec
adc
or
dec
adc
inc
call
dec
outsb
outsb
push
sbb
adc
ficoms
scas
mov
xor
jo
das
roll
push
adc
int
andl
dec
push
xor
out
xchg
add
cld
mov
cmpsb
cmpsl
add
push
stos
fstps
test
in
xor
pop
lcall
fstl
mov
arpl
or
push
jle
push
inc
and
ret
aas
jbe
or
in
or
sub
mov
jp
in
dec
fst
nop
mov
cmp
call
xor
jno
dec
rclb
sub
inc
ret
fimuls
inc
mov
adc
inc
xor
and
insl
loope
jge
mov
push
rorb
mov
iret
stc
xor
mov
in
jmp
test
mov
adc
stc
mov
lea
mov
icebp
ss
stos
idiv
adcb
gs
mov
enter
xor
fidivl
scas
scas
jnp
nop/reserved
mov
jae
push
push
cmp
mov
xchg
mov
sub
out
ss
cmp
in
jp
pop
sub
adc
inc
ja
shll
or
test
insb
adc
scas
loopne
lds
and
or
stos
aas
jae
xlat
sbb
xchg
adc
loope
mov
cwtl
xor
scas
scas
push
cmp
call
mov
push
stos
mov
push
imul
cs
addr16
xor
jns
outsb
mov
arpl
or
xchg
mov
xchg
mov
jo
add
div
out
scas
jmp
sbb
repz
mov
cmp
sbb
xchg
inc
mov
mov
fwait
in
and
pop
push
adcb
aas
inc
mov
dec
xor
pop
mov
iret
int3
xchg
aad
in
sub
cmc
sub
je
fstl
addw
mov
imul
xor
jle
testl
cld
xor
inc
cmp
adc
xlat
in
jne
mov
daa
push
push
enter
fwait
or
and
insl
mov
dec
insb
xor
and
dec
hlt
shl
push
lahf
rcl
mov
mov
fldenv
and
adc
jbe
push
sete
xor
push
jl
inc
aad
sub
rclb
xchg
lods
mov
inc
xor
jmp
cmp
mov
popf
xor
cmp
jmp
xchg
sub
idiv
pusha
out
push
in
jns
push
lods
fnstsw
xor
xor
inc
in
enter
sub
xor
sbb
fcomps
addl
adc
lods
cmpb
mov
mov
into
mov
inc
pop
xor
xchg
es
adc
jecxz
mov
xchg
dec
and
xor
insb
mov
filds
inc
dec
cs
jb
cmpsb
shr
rcl
loope
mov
cmpsb
sbb
shlb
movsb
push
add
lcall
cmp
dec
jl
fildl
inc
pop
add
ja
arpl
mov
pushf
push
mov
xor
ret
adc
aam
jle
push
adcb
fcoml
lods
mov
add
jg
icebp
imul
adc
jmp
lea
aam
adcb
shlb
inc
imul
jle
pusha
popa
xor
or
mov
out
or
xor
add
out
imul
pop
clc
sbb
out
add
test
mov
pop
mov
icebp
test
inc
adc
xchg
outsl
dec
jne
push
lds
and
movsl
out
scas
dec
loop
notl
mov
xor
dec
fbld
jg
push
into
add
adc
or
xchg
cmp
mov
push
rep
dec
jmp
hlt
repnz
add
gs
sub
cli
test
add
pop
mov
inc
jo
in
test
cmpsb
mov
mov
xchg
mov
enter
adcb
pushf
sub
mulb
je
sub
push
mov
mov
jmp
ljmp
adc
xchg
scas
int3
mov
out
xor
into
fdivs
shrb
mov
adc
enter
ds
in
and
cmp
dec
mov
cmp
dec
lods
xchg
push
jae
sub
adc
aaa
inc
dec
cmp
inc
mov
addr16
xor
fld
sub
mov
jae
jo
mov
test
or
jmp
adc
data16
out
fldl
scas
roll
out
xchg
bound
mov
cmpsb
lds
dec
mov
fldenv
add
subb
movsb
aaa
lock
mov
mul
dec
mov
push
dec
ret
fnsave
ret
hlt
mov
fwait
inc
stc
mov
scas
js
xchg
adc
dec
cmpl
pop
add
xlat
xor
mov
xor
sbb
in
xlat
call
sbbl
adc
mov
inc
xchg
dec
lret
cmp
adc
jbe
lods
add
and
sub
scas
in
and
sub
cs
fcomps
popf
stos
enter
ret
and
mov
lds
js
sbbb
xor
data16
push
movsl
pusha
xchg
push
cmp
pusha
vshufps
inc
lret
pop
and
pop
push
pop
sti
fstpl
divl
mov
addl
fcmovu
hlt
cmc
es
jo
jb
bnd
pop
pop
mov
mov
ret
iret
cmp
repnz
inc
inc
cmp
mov
mov
sbb
adc
fs
ljmp
lcall
insl
mov
scas
adc
jge
ret
in
inc
jns
mov
out
out
mov
stc
mov
outsl
xchg
pusha
sbb
int3
hlt
mov
mov
mov
mov
dec
cmpsl
in
pushf
mov
pop
or
dec
insb
imul
inc
xor
jl
in
mov
sahf
in
pop
lahf
loopne
xchg
mov
addb
inc
imul
push
mov
add
adc
inc
push
aam
aaa
movsl
in
pop
pop
xchg
xchg
hlt
dec
sbb
jge
sbb
mov
cld
sti
or
fsubrl
or
es
scas
fdivs
dec
repz
sbb
inc
pusha
mov
cmp
enter
sbbl
sti
push
jb
fdivp
jmp
repz
es
pop
stos
loopne
cmp
mov
mov
add
adc
dec
jb
and
lods
je
mov
cmp
and
movb
jae
ret
jl
push
insl
iret
or
or
mov
pop
fistpl
pop
add
mov
sub
xchg
es
daa
push
and
xor
add
xchg
push
or
jb
pusha
sub
mov
out
xor
hlt
jp
push
int
mov
push
xchg
cmp
test
add
repz
and
pop
aam
shrl
xor
push
jo
xor
cmp
popa
mov
dec
frstor
push
ds
outsb
mov
fsubs
sub
dec
jo
push
sbb
sbb
test
fcmovb
in
add
xchg
and
cli
pop
loope
mov
dec
std
int3
jne
arpl
loope
stc
jbe
das
outsl
gs
imul
outsl
mov
add
pop
xchg
mov
sub
cmp
xor
fidivrl
push
clc
mov
movsb
jg
push
cmpl
push
adc
cmp
inc
dec
xchg
xor
inc
cmc
mov
pusha
dec
mov
xor
add
test
inc
leave
bound
dec
jbe
popl
jno
xchg
rorl
sub
jecxz
pop
mov
lret
cmp
ret
pushf
and
clc
dec
mov
cld
add
sub
dec
pop
shll
mov
xor
fbstp
adc
jmp
mov
jae
sub
or
movsl
jae
mov
and
push
mov
imul
gs
ret
jg
aam
add
lds
dec
insb
cmpb
jg
jle
and
outsl
inc
pop
mov
mov
xchg
inc
inc
inc
out
addb
dec
sbb
popa
push
inc
pusha
mov
fwait
cmpsl
fdivp
out
mov
in
adc
out
pusha
mov
aaa
cmp
add
cmpsl
nop
inc
mov
pop
inc
das
xor
mov
clc
popa
mov
push
adc
vmovups
lock
lahf
jno
inc
pop
sbbb
jne
dec
inc
mov
add
dec
xchg
dec
push
jno
and
mov
mov
pop
sbb
pop
sarl
push
call
pop
sbb
mov
lock
and
jmp
mov
xorl
jl
mov
cmp
daa
out
xor
scas
or
xchg
cmpsl
roll
and
in
mov
test
mov
and
dec
orb
test
xor
mov
mov
arpl
jbe
lret
and
outsb
mov
pop
mov
rorb
outsl
out
leave
stos
jnp
lret
fisubrl
pop
inc
cmpsl
ds
ss
ja
ds
push
push
mov
nop
cmpsl
dec
test
sbb
pop
and
fidivl
sti
mov
sahf
movsl
sbb
add
push
or
push
and
sbb
popa
pop
imul
mov
lahf
push
cmp
cmp
lahf
push
scas
fwait
in
add
add
scas
sbb
cmp
fwait
inc
jg
jmp
cwtl
fcmovu
testl
in
inc
xchg
aas
lahf
add
push
push
fldl
ret
sub
lret
dec
outsl
adc
lcall
xor
lods
cmp
xor
xchg
push
test
mov
push
in
ret
cmp
jecxz
jae
out
pop
jecxz
pop
mov
cmp
mov
push
sbb
hlt
jmp
dec
cmp
mov
mov
rcr
dec
and
pop
or
push
out
in
scas
test
adc
sbb
cmp
xchg
jbe
bound
cmp
call
fs
dec
pusha
sub
xchg
icebp
pusha
cli
es
adc
rcl
inc
push
into
push
xchg
gs
icebp
imulb
jb
push
xor
xor
and
push
dec
imul
test
cmpb
scas
gs
mov
stos
mov
sub
push
fcomi
daa
pop
std
pop
and
jbe
or
xlat
jmp
sti
sbb
jecxz
daa
sbb
movsl
pop
mov
mov
testl
mov
shl
mov
add
pop
clc
out
insl
imul
push
cs
enter
pop
cmpsb
into
stc
lcall
lock
add
push
push
insb
dec
sbb
adc
loope
nop
dec
mov
mov
mov
and
sbb
pop
loop
xchg
fisttpl
mov
jns
jecxz
lcall
jns
mov
mov
or
das
xor
adc
mov
mov
dec
xor
sbb
or
pop
enter
cmp
gs
loope
out
adc
scas
xchg
push
rol
je
push
out
cld
cmp
cmpsb
push
adc
sub
add
sub
cmpsl
ja
xchg
mov
inc
xchg
sbb
subb
imul
lods
mov
push
das
std
add
sbb
scas
insb
push
pop
mov
inc
mov
int
icebp
in
add
test
test
inc
mov
enter
xor
mov
rep
dec
test
lods
lods
xchg
movzbl
sahf
push
or
sub
orb
push
ljmp
mov
ljmp
jmp
add
or
js
out
push
orb
mov
xor
xchg
cmp
jne
outsl
adc
pop
cmp
pop
ffreep
sub
inc
jl
shll
shr
pushf
repz
stos
sahf
or
mov
orl
push
pop
into
pop
dec
adc
xor
call
or
in
lret
stos
adc
icebp
cmpsl
sbb
lods
data16
jmp
add
or
cmpsl
bound
inc
cwtl
aas
adc
js
cmpsb
outsl
jge
jle
xchg
add
ljmp
popf
cmpsb
xchg
mov
ja
insb
dec
cmc
and
imul
pop
and
loopne
stos
into
xlat
or
and
ror
add
test
adc
cmp
jb
adc
rep
jb
cmc
scas
mov
inc
push
cs
loop
test
jg
adc
fwait
dec
dec
adc
sbb
stc
pushf
ficompl
lds
push
ror
sub
sbb
out
jb
or
rcrl
rcll
cli
pop
jle
and
dec
aas
dec
inc
in
jo
lret
les
js
xchg
xor
pop
push
imul
jno
nop
cmc
dec
fstps
shrl
test
outsl
xchg
aam
scas
enter
xrelease
out
faddl
fnstenv
mov
jp
xchg
popa
movsl
jecxz
into
xchg
add
sub
cli
nop
in
dec
dec
fiaddl
repz
mov
xchg
repnz
cli
pop
aaa
lret
cwtl
jge
jge
call
cmp
inc
inc
pop
test
inc
dec
push
sub
inc
rcrb
add
xchg
add
les
ja
outsb
ret
xor
ficompl
mov
xchg
mov
pop
mov
rorl
inc
negl
insb
sbb
inc
add
lret
pop
ljmp
push
sub
shll
xchg
scas
data16
jne
das
lock
imul
into
dec
jno
mov
addr16
jns
jo
sub
mov
movsb
xchg
pop
stos
movsb
inc
leave
mov
subl
xor
cmc
fwait
pop
jp
or
repz
push
out
and
dec
cmpsb
fisubrl
xchg
fsubrl
not
or
scas
push
adcb
stos
mov
mov
dec
push
subb
mov
shl
dec
dec
mov
mov
rcrb
mov
fcmovnu
mov
stos
adc
or
adc
mov
or
repnz
das
sbb
fldenv
or
cmpsb
iret
jbe
add
es
ret
stc
dec
stos
push
fldenv
nop
xor
fistpll
out
inc
loope
into
sub
ret
push
lds
mov
or
and
hlt
sbb
leave
push
dec
sub
and
dec
es
cmc
xchg
add
mov
test
mov
test
add
out
shl
insb
aaa
fstps
imul
add
aam
scas
and
pushf
xor
sbb
push
fisubrs
shr
mov
repz
and
into
mov
pop
ret
mov
pusha
dec
add
fincstp
scas
add
pop
rol
into
mov
or
ss
cmpsl
sbb
cmpl
fsubrl
mov
adc
mov
js
insl
xor
inc
pusha
cld
loop
int3
or
fs
sbb
fsubl
aas
jl
sbb
adc
mov
mov
inc
and
pop
cmp
scas
sub
lret
loop
pop
faddp
ficoms
sub
lahf
add
push
push
inc
xchg
mov
and
arpl
int
or
leave
in
mov
mov
push
rorl
lods
shlb
addl
sarb
insb
and
mov
pop
jecxz
mov
and
mov
aad
cmp
lcall
inc
cs
add
out
movsb
lcall
cmp
mov
jecxz
mov
adc
inc
add
lahf
dec
cmc
inc
insb
or
mov
pop
cltd
cs
lea
mov
bound
movsb
lods
outsl
jecxz
outsl
daa
sbb
and
jno
jb
imull
in
aad
je
inc
jbe
xorl
in
mov
jecxz
insl
pop
inc
sub
xchg
mov
pop
jo
and
scas
pusha
or
icebp
jbe
add
mov
cmp
call
aad
fidivl
xchg
xor
push
ss
ficoml
adc
dec
imul
mov
idivb
shlb
mov
nop
jns
lea
orl
mov
mov
into
push
sbb
scas
jae
fwait
mov
ja
sbb
xchg
xor
mov
and
xchg
negb
jno
push
imul
adc
pop
addr16
push
cmp
testb
shlb
pusha
sub
xchg
mov
fwait
shrb
enter
in
lahf
pushf
adc
test
shr
add
push
das
lds
cmp
push
dec
dec
out
inc
cwtl
leave
loopne
xchg
and
iret
loopne
shlb
cmc
add
dec
stc
mov
pop
and
adc
dec
fimull
ja
push
and
cmp
sti
aam
jl
push
fwait
mov
dec
sbb
sarb
rol
stc
js
sbb
push
cmpsb
in
repz
lods
xor
sti
sbb
ret
jmp
lea
lods
clc
pop
fiaddl
popa
and
inc
push
mov
xor
jmp
inc
pop
cli
mov
dec
popa
cmp
cmpsb
in
pop
into
jnp
jbe
mov
cltd
fldt
and
sbb
frstor
adc
mov
sub
mov
cmp
mov
hlt
ror
and
push
fists
repnz
sub
fists
xor
or
scas
cwtl
push
jge
lret
inc
out
mov
push
outsb
cltd
ljmp
cli
dec
cmp
jb
pusha
sub
cmp
pop
stc
add
stc
adc
mov
and
jge
add
xchg
out
dec
jmp
push
stos
jns
pop
cltd
ss
add
mov
in
jno
push
das
lods
pop
pop
pop
std
cli
movsl
pop
mov
scas
add
sbb
subb
sbb
inc
jle
ror
out
into
mov
daa
out
out
pop
movsb
sub
jns
xor
notl
xchg
clc
cmp
inc
push
fimuls
movsl
add
dec
or
fcmovnb
lret
or
inc
fs
jns
jp
ficomps
mov
rolb
push
mov
sbb
adc
dec
jmp
out
sbb
cwtl
push
call
cmp
xchg
jno
and
pop
pop
and
adc
push
sub
ljmp
sbb
cmpsl
cmp
ljmp
add
fldcw
movsb
stos
pop
sbb
ret
int
pop
sbb
and
or
pop
ss
pop
inc
jg
dec
jo
add
test
mov
push
mov
mov
push
lds
add
fwait
cltd
mov
outsb
add
or
sbb
xor
add
jmp
ljmp
fstpt
xchg
jmp
or
push
jp
in
or
pop
add
add
inc
sub
andb
in
cmp
adc
mov
mov
daa
aad
lds
cltd
fcom
imul
or
cwtl
outsb
mov
icebp
mov
mov
cs
xchg
jae
pop
dec
sarl
mov
into
jp
test
dec
xlat
fcomps
pop
clc
dec
fistpll
push
pop
imul
or
jo
lods
inc
push
sub
mov
push
dec
aad
imulb
inc
and
inc
add
lds
fildll
pusha
inc
jg
lock
xor
push
add
repnz
jp
dec
ds
lock
push
lahf
or
cmpsb
xchg
mov
iret
mov
push
xor
out
dec
dec
mov
hlt
or
push
lahf
jg
or
sbb
cmp
cmp
test
mov
outsl
mov
xor
or
lcall
scas
test
and
fucom
inc
pop
ror
mov
fmull
clc
sub
push
in
scas
es
mov
pop
and
inc
mov
std
loopne
xlat
outsb
push
sbb
fnstsw
sub
mov
jmp
rcrb
out
mov
inc
aaa
bound
inc
mov
pop
or
cmp
xchg
aas
adc
mov
jae
xchg
aam
lahf
and
hlt
inc
sub
cmp
inc
mov
mov
sbb
cmpb
in
insl
mov
sbbl
call
or
push
inc
jmp
roll
mov
fwait
dec
adc
push
bound
jecxz
dec
inc
add
fisubs
push
xor
lods
add
or
and
clc
ljmp
ja
call
movsl
imul
pusha
loop
leave
in
cltd
insl
bound
and
scas
mov
rcrb
xchg
cmp
in
mov
mov
sbb
lds
push
lds
jecxz
es
in
daa
sbb
iret
push
rclb
xchg
in
jge
mov
jmp
std
inc
lods
je
xchg
cmpsb
mov
jl
cmpsl
repz
sbb
sbb
add
mov
jbe
das
mov
sbb
lock
xor
scas
pop
mov
pop
data16
repz
iret
shll
or
sub
jo
mov
out
not
mov
fidivrs
cmp
lcall
xchg
orb
das
popf
push
shlb
jo
mov
jmp
bound
cwtl
dec
push
lds
sub
mov
loopne
lods
add
test
and
or
sub
stos
lahf
dec
daa
icebp
or
and
sbb
lcall
mov
add
xor
push
test
jmp
or
std
cmp
into
stos
fmull
add
dec
scas
andl
and
dec
out
pop
aam
es
and
pop
sbb
jno
iret
mov
adc
pushf
or
enter
push
call
loop
sbb
out
das
insl
arpl
loopne
shll
repnz
movb
into
push
pushf
mov
outsb
bound
iret
repnz
push
sbb
in
loope
inc
push
popf
lea
pushf
sbb
orl
push
lock
fs
inc
lock
ss
movsb
mov
mov
aaa
mov
cli
adc
std
mov
lea
fs
or
imul
dec
test
insl
lods
stos
cwtl
iret
pop
jmp
cli
test
sub
adc
enter
stos
ds
pop
add
mov
das
sbb
rol
inc
mov
adc
mov
dec
sarl
jne
ret
leave
sub
pop
inc
stc
test
mov
loop
rorl
and
adc
das
rcrb
push
stos
dec
or
add
sbb
outsl
fldpi
pushf
mov
lcall
popa
pop
lods
pop
adc
push
neg
pop
sti
cmp
sub
jbe
out
jb
xor
shlb
cltd
mov
ficoms
in
out
fwait
cli
xchg
push
dec
pop
out
rolb
mov
loope
imul
negb
sbb
std
shll
jo
cmp
mov
pop
lahf
push
xchg
push
fiaddl
das
or
lock
insl
push
into
rorl
incb
stc
dec
jno
adc
stc
lret
or
nop
cmp
subb
sub
repnz
cli
into
mov
movsb
fdivrl
ja
mov
and
in
inc
std
std
add
mov
lcall
pop
sbb
mov
icebp
pop
cmp
lret
push
and
and
loopne
mov
add
mov
fsts
enter
inc
push
xchg
stos
lds
loopne
nop
test
aas
fstps
add
jbe
or
pop
dec
iret
push
mov
jle
aas
mov
fisttps
lea
mov
jo
push
mov
rorl
push
inc
leave
aas
adc
jae
xlat
dec
nop
clc
mov
and
movsbl
ret
in
cltd
shll
movsb
iret
xor
rcrl
jl
fsts
sahf
shlb
inc
roll
xchg
sbb
pop
sbb
xchg
fistpll
test
in
int3
sub
inc
sbb
mov
into
xchg
sbb
loop
fists
cmpsl
sbb
jo
pop
pusha
jbe
leave
gs
push
push
mov
sbb
pop
dec
push
lods
gs
mov
lret
or
movsb
and
int
cmp
aaa
xchg
dec
stc
test
add
mov
arpl
push
mov
pop
and
adc
orl
ljmp
jae
aam
nop
fwait
loopne
pop
fisubl
js
mov
loope
lea
jge
sub
or
int
fnstcw
or
movd
test
das
into
jae
jmp
mull
mov
addb
xchg
addr16
push
hlt
movsb
adc
push
leave
push
in
xor
lock
add
shrl
test
jle
xor
mov
jg
into
icebp
inc
stos
fincstp
cmp
fwait
adc
xchg
cltd
push
mov
das
sbb
jbe
das
push
push
out
mov
enter
cwtl
mov
lahf
xchg
push
cmp
inc
xchg
mov
int
addl
std
repz
dec
pop
sti
mov
sbb
inc
cli
sbb
push
fldl
sub
mov
bts
data16
jle
fwait
dec
popf
or
adc
fadds
ljmp
xchg
lahf
inc
std
es
orl
mov
imul
or
into
jle,pn
loop
int
sbb
sbb
lret
push
sub
jae
inc
mov
mov
sub
sbb
mov
in
push
cmpsb
jns
int3
cmp
mov
sbb
or
inc
push
inc
lods
mov
push
rcrl
push
gs
pop
out
repz
xchg
rclb
push
in
outsl
and
rcrb
adc
test
inc
fdivl
sub
sub
mov
xchg
jmp
addr16
stc
xchg
in
orl
cmc
xchg
addr16
and
jge
fisttpll
decb
adc
add
icebp
rclb
xor
dec
xchg
cmpsl
jnp
sarl
xchg
or
movsb
lcall
hlt
fs
xchg
adc
iret
add
sahf
pushf
dec
sub
sbb
and
mov
out
mov
cmpsl
push
xor
xchg
inc
xor
popa
and
sbb
fisubl
bound
mov
dec
insl
lock
ret
pop
out
mov
xchg
bound
mov
mov
pushf
ud0
xor
push
dec
daa
mov
sbb
cmp
repz
int3
cmc
ss
mov
cmp
mov
xchg
sub
les
jge
xor
daa
adc
add
or
jnp
dec
fists
jp
sub
stos
push
xchg
mov
cmc
sbbl
test
dec
fwait
pop
jp
or
xchg
push
mov
dec
or
out
pop
rorl
mov
dec
ja
aam
push
xchg
lods
fldenv
jns
insl
jb
adc
imul
movsb
mov
xchg
and
sti
pushl
inc
insb
inc
cs
cmp
test
sbbb
lahf
and
mov
cmp
stos
bnd
cmc
mov
lods
js
dec
sahf
inc
add
jns
pop
adc
mov
cmp
test
cmpsl
push
test
jo
mov
out
xchg
repz
push
dec
hlt
bound
sbb
inc
jecxz
adc
xchg
mov
rorb
mov
fisttpll
pop
pop
xchg
notl
mov
mov
cld
xor
push
inc
adc
outsb
mov
shrl
add
push
sub
ret
xor
mov
push
add
push
or
lahf
xor
adc
push
push
out
mov
mov
in
sbb
scas
and
sub
xlat
or
std
cmpsb
mov
dec
mov
nop
xor
mov
xchg
ret
mov
add
sub
jns
aas
mov
cmpsb
fcmovu
inc
mov
lahf
gs
mov
cmpsl
fidivs
testb
out
adc
jne
sahf
icebp
loope
jbe
pop
xchg
sbb
pop
and
pop
adc
insb
dec
dec
mov
jecxz
repz
loop
in
sub
jle
push
sbb
jnp
ljmp
je
mov
not
mov
jmp
pop
mov
mov
add
inc
aaa
cmp
sbb
adc
jecxz
aaa
insl
mov
jp
out
mov
std
add
jae
jbe
pop
inc
push
testb
cltd
roll
sbb
fnstenv
sti
je
push
loopne
dec
push
push
pop
lods
sub
fcmovnb
aad
mov
call
iret
fld1
jmp
out
add
or
adc
or
fdivrl
int3
push
movsb
subl
or
xchg
and
std
cmpsl
sbb
jne
xchg
and
fwait
sub
daa
xchg
and
add
jo
js
fiadds
mov
inc
xlat
push
mov
cld
mov
jl
mov
push
xlat
mov
inc
pop
jle
xchg
mov
jb
cmpl
or
push
jae
bsf
inc
and
sub
pop
lock
mov
insl
pop
mov
jno
cli
jp
mov
and
and
imul
fimull
jo
fwait
jns
or
mov
pop
cmp
push
dec
cld
sbb
cmc
mulb
es
ljmp
inc
dec
out
cwtl
mov
loope
mov
push
das
das
es
stc
outsl
subb
dec
jne
leave
repz
aas
sbb
mov
inc
lret
mov
iret
jae
loopne
aad
mov
pop
stc
push
cmp
or
cmp
ficomps
sbb
cmp
popa
mov
test
lret
repz
xor
or
add
push
xlat
jmp
imul
jecxz
sbbb
inc
push
test
cmpsl
loop
es
mov
push
rcl
and
insb
gs
mov
sub
jle
push
mov
mov
mov
xor
ret
push
rorl
cmp
sub
pusha
push
cmp
aam
xchg
das
push
cmpsb
imul
movsl
mov
xor
popa
push
pmulhw
sub
aad
and
bnd
dec
lahf
mov
add
xchg
dec
or
jecxz
jb
dec
sti
jae
dec
add
mov
ja
in
loop
pop
stos
adc
jecxz
outsw
test
xor
dec
cmpsb
mov
ljmp
enter
movsl
sbb
add
scas
loopne
xchg
or
loopne
dec
pop
jb
xchg
sarb
xchg
mov
in
fst
lock
add
fs
mov
iret
sar
xor
data16
mov
inc
cs
and
dec
rcr
fcmovnb
xchg
vmovd
test
or
data16
add
pop
scas
xchg
pushf
xchg
dec
scas
mov
mov
nop
shl
mov
cmp
cmp
add
pusha
fwait
ljmp
pop
pop
push
pop
sub
arpl
loop
cmp
and
adc
pop
sti
cmp
pop
cmp
dec
push
lock
pop
cwtl
pop
stc
inc
and
xor
mov
dec
xchg
aam
mov
cmp
cs
popl
xchg
jle
mov
sahf
add
nop
sbb
fisubl
pop
pop
cmp
mov
push
call
outsl
inc
xchg
sbb
mov
lret
loope
outsb
cltd
jle
xchg
push
jne
outsl
xor
mov
mov
popf
push
or
dec
ret
repnz
in
dec
in
cmp
xor
std
test
dec
negb
xchg
cmp
dec
and
mov
dec
adc
inc
dec
cwtl
pop
sub
aam
pop
and
push
push
int3
loope
xor
xchg
inc
imul
sub
push
cld
xor
adc
in
insb
andb
in
bnd
push
cmp
xor
movsb
inc
stos
adc
jns
aad
or
bound
iret
dec
mov
ret
fld
loop
jae
dec
scas
mov
rclb
xchg
add
jns
add
movsl
adc
dec
es
iret
and
adc
jmp
mov
xor
mov
jnp
pushf
cmp
lds
in
xchg
or
add
js
arpl
sbb
mov
je
sub
mov
mov
xchg
mov
adcb
lahf
cmpsb
or
sbb
mov
aam
subl
push
jno
minsd
mov
imul
movsl
test
add
push
pusha
xor
sbb
inc
add
mov
or
testb
mov
scas
repz
negb
add
adc
js
mov
imul
popa
fbld
and
xor
jae
sbb
mov
or
testl
mov
js
stc
jmp
jp
and
mov
lret
gs
add
addr16
cmp
cwtl
sbb
inc
mov
mov
jae
xor
and
dec
dec
dec
nop
ret
ss
jmp
outsl
adc
add
mov
push
jge
sub
les
lds
xchg
fbld
scas
ret
arpl
jl
fisubrl
out
int3
push
test
lret
mov
rcrb
mov
mov
mov
and
lret
divb
loopne
popl
and
mov
mov
and
push
mov
lcall
hlt
pop
mov
mov
shrb
adc
or
mov
pop
dec
pop
jp
adc
xchg
xor
dec
sub
push
sarl
jg
movsb
pop
adc
fldenv
vfmsub213ps
pusha
sub
scas
xchg
cmp
ret
inc
nop
mov
pop
inc
lods
fwait
mov
subl
sub
movsl
xchg
dec
inc
and
cli
xchg
and
push
repnz
or
sahf
jle
insl
dec
jns
addr16
rorb
or
cmpsl
or
movsb
push
add
xchg
int
imul
sbb
clc
xor
sbb
int
and
popa
jo
dec
dec
xchg
xchg
sbb
fs
add
addr16
mov
out
pop
in
xor
or
xchg
rcll
mov
test
xchg
in
clc
test
xchg
cs
mov
cmp
xchg
imul
and
cmc
mov
inc
loopne
int3
mov
mov
inc
pop
aaa
out
inc
out
xorl
push
jp
adc
lds
scas
adc
scas
test
in
cli
out
cltd
lods
loope
repz
aaa
mulb
in
xor
daa
push
push
stc
add
mov
imul
add
imul
xor
pusha
jb
sub
inc
xor
add
cmpsb
sbb
adcb
adc
into
xchg
or
sar
roll
dec
sub
cmp
push
mov
gs
enter
cmp
es
insl
sub
jg
stc
or
int3
testb
lds
push
push
aad
fisttpl
xor
stc
lea
out
jnp
subl
add
inc
mov
lahf
inc
pop
in
shr
push
ljmp
mov
and
lcall
mov
lock
jno
adcb
sub
std
mov
roll
es
mov
in
in
pop
ds
push
and
leave
add
push
cmpsl
and
repz
mov
sub
rorl
sbb
std
dec
gs
add
mov
inc
pop
xchg
sub
out
cmp
sub
leave
movsl
fistps
sub
mov
clc
and
xchg
or
out
pop
in
jg
gs
ffree
loop
xchg
xchg
jmp
out
add
lahf
xor
push
pop
outsb
xorb
movsb
xor
inc
sarb
jl
negl
aaa
mov
cmp
jmp
adc
loopne
mov
pop
cmc
pop
mov
cwtl
mov
and
fnstcw
mov
adc
jno
decl
popf
mov
xor
out
shrl
int
shll
imul
mov
out
xchg
mov
aas
repz
xlat
lods
mov
rorb
mov
fldcw
sahf
and
shlb
xor
mov
pop
into
out
jle
mov
push
xor
jmp
loopne
push
loop
jne
mov
imul
mull
sti
xchg
popa
cmpsl
mov
sub
cltd
push
push
dec
popf
mull
sub
mov
ja
fcom
adc
xchg
insl
pop
xor
push
xchg
add
sub
adc
lcall
cmp
adc
xor
cmpsl
es
push
pop
test
sub
fwait
push
cmc
div
mov
sti
xor
int
gs
outsb
pushf
dec
cmp
add
fwait
sbb
cmpsl
pop
mov
cmp
cmp
mov
in
nop
jnp
ffreep
mov
daa
push
jmp
cmp
cwtl
sub
fstl
xchg
stc
pavgw
daa
pop
test
jnp
mov
or
lret
out
push
lret
mov
xchg
out
jecxz
jmp
rolb
sub
push
xor
cltd
adc
sbb
hlt
test
push
lock
jmp
in
or
ss
lea
fneni(8087
loope
jnp
stos
pusha
add
cld
leave
or
cs
lds
inc
push
jb
or
dec
adc
mov
lods
sub
aas
cmp
inc
xor
stc
dec
dec
ret
mov
add
lcall
xor
add
stos
jmp
lods
incb
repnz
stos
lret
and
push
enter
xchg
lds
adc
rcll
dec
or
test
imul
int3
and
or
leave
fcomi
enter
push
sub
xchg
aaa
andb
int3
sti
xchg
cltd
enter
ret
cmc
imul
cmpsb
cltd
enter
adc
xchg
adc
adc
cld
xchg
aad
pop
and
push
fstps
inc
decb
lock
test
dec
dec
imulb
cmp
iret
xor
std
repz
pusha
mov
je
cmp
pcmpeqd
ljmp
push
xchg
jge
pop
or
enter
pop
call
mov
lods
sbb
mov
addr16
insl
pop
ret
mov
pop
rorl
lret
cmpl
pushf
adc
stos
movsb
das
mov
ds
stc
xchg
cli
fcmovnb
xor
leave
ljmp
movsb
bound
ret
daa
dec
or
enter
jecxz
stc
stc
push
xchg
or
iret
and
test
call
mov
cmpsl
pop
mov
jl
or
adc
xor
xchg
push
or
pusha
jnp
push
out
mov
mov
dec
mov
add
sub
pop
and
notl
lret
lea
cwtl
adc
addb
add
push
jge
setge
mov
dec
popa
add
cmc
outsb
xchg
inc
or
mov
adc
fimuls
xor
out
adc
xchg
fsubp
cmpsb
mov
nop
lahf
out
imul
sub
mov
add
pop
xchg
inc
push
mov
loopew
nop
lods
shr
adc
push
xor
cmpsl
xor
loopne
and
fnstenv
xor
shll
cld
fimuls
or
or
jne
outsl
xchg
sti
xor
push
inc
stc
mov
inc
fnstsw
pushf
mov
push
jg
dec
stos
fwait
rcrl
jmp
aaa
sbb
mov
stos
mov
mov
mov
push
push
xor
pusha
popf
push
int
dec
mov
cli
add
cmp
adc
push
into
pop
lods
incb
andb
sahf
push
cmpsb
lea
jno
jp
cmp
add
lahf
and
aaa
cs
insb
ds
jbe
or
rcrl
gs
mov
clc
sbb
lds
sub
and
cmp
mov
mov
repz
pop
arpl
shrl
adcb
xor
ja
xchg
std
lret
bnd
cmp
insl
and
js
arpl
sbb
jg
jae
call
jp
pop
popa
xchg
mov
push
xor
cmp
test
sbb
jae
push
fists
inc
aaa
inc
iret
push
push
std
fwait
js
in
insb
cmpsl
aad
pop
mov
push
dec
sub
adc
sbb
lahf
neg
xor
ljmp
test
dec
rorb
popf
mov
clc
testb
leave
pop
stos
xor
jg
add
sti
bound
jno
sbb
push
adc
cmp
orb
gs
mov
add
dec
or
dec
xor
sbbl
stos
adc
mov
pcmpeqb
dec
loop
sbb
rolb
jo
mov
enter
stos
push
lods
aaa
sbb
lods
pop
cmp
push
arpl
pop
adcb
pushf
push
pop
jae
sub
cmp
jecxz
movsl
push
and
mov
mov
dec
jle
lahf
cld
imul
push
enter
sti
sub
jg
shrb
aaa
jne
test
mov
lods
inc
leave
mov
push
out
inc
xchg
lock
in
push
in
fsubs
pop
rclb
fwait
or
outsb
jnp
adc
loop
ja
mov
repnz
clc
push
or
sub
inc
aam
inc
lea
mov
dec
clc
subb
imul
cs
mov
mov
push
into
push
push
jge
out
jno
dec
jne
add
pop
jecxz
loopne
jl
loopne
push
test
lcall
imul
sub
daa
out
fxtract
sti
mov
fnsave
add
cltd
add
subl
cmp
aaa
addr16
jb
xor
stos
in
jge
sub
loopne
lahf
jno
loope
dec
jle
fwait
jge
cwtl
in
rclb
mov
cmp
mov
jb
or
mov
pop
mov
lds
mov
lods
pusha
cmp
les
fdivrp
loopne
xchg
pushf
nop
push
jo
push
push
mov
pop
push
test
in
mov
cmp
or
nop
in
insb
mov
mov
add
jnp
jo
insb
mov
in
jmp
scas
push
lods
js
and
add
sti
out
mov
mov
ljmp
in
loop
mov
dec
ja
xor
sub
scas
sbb
mov
les
shll
test
mov
dec
pop
scas
popf
adc
arpl
insb
int3
sbb
test
in
pop
pop
xchg
adc
push
xor
int3
jnp
test
scas
lahf
cltd
mov
cmp
insb
mov
dec
das
jb
pushf
cmp
jo
aaa
pop
cwtl
push
movsl
ljmp
lret
mov
or
or
hlt
ds
stos
ret
gs
push
aam
jbe
ja
fs
and
cmpsl
je
mov
push
dec
fadds
cmpsb
or
jne
mov
imul
add
fcoms
data16
sarl
jnp
sbb
and
add
cs
mov
push
mov
adc
gs
pop
outsb
push
dec
pop
mov
inc
cwtl
sub
nop
je
xor
fwait
fcmovnbe
jmp
push
js
nop
lock
pop
nop
adc
mov
ja
clc
sub
mov
and
jns
bound
xchg
fcompl
inc
insl
push
jbe
pop
repz
xor
push
into
sbb
ja
ja
or
mov
lret
adc
or
out
dec
mov
test
pop
mov
or
lock
mov
jmp
cmp
mov
mov
ljmp
xchg
inc
add
sti
sbb
cmp
xor
add
xchg
or
or
shrl
ret
push
xchg
into
sahf
in
or
ss
les
mov
fcoms
pop
xchg
jle
and
fnstsw
adc
mov
cmpb
cmpsl
lea
stc
lods
inc
pop
xchg
mov
fs
adc
mov
pusha
in
les
push
push
push
mov
ss
pop
xchg
push
mov
sbb
inc
loopne
pusha
xchg
pop
or
push
mov
mov
dec
inc
mov
in
rclb
nop
mov
mov
pop
mov
call
mov
push
adcb
jns
pop
or
in
xorb
inc
sarb
inc
jne
in
xchg
add
aad
jmp
xchg
scas
inc
jmp
aam
mov
lret
push
mov
jecxz
mov
and
or
aad
inc
inc
out
nop
imul
xchg
jne
fstl
fcomip
stc
fnstsw
in
int
roll
xsha1
cmpsb
push
cmp
flds
push
imul
movl
in
sbb
adc
icebp
stc
add
push
dec
stos
test
pusha
test
into
inc
inc
xchg
cmpsl
sbb
out
aam
mov
dec
jecxz
int3
lret
adc
das
imulb
call
pop
je
jp
fcmove
sub
jbe
jp
popa
fldcw
arpl
loop
adc
inc
mov
ja
scas
push
add
daa
adc
stos
jae
mov
addr16
mov
pop
js
dec
cmp
mov
adc
mov
push
cmpsb
pushf
inc
pusha
add
xchg
scas
aaa
xchg
inc
jecxz
and
lods
lret
mov
or
or
mov
dec
push
sub
clc
jno
pop
mov
subb
ret
inc
push
inc
mov
aas
cmpsb
xor
ror
push
popa
and
jns
repz
mov
or
mov
shrl
mov
add
xchg
push
arpl
cmc
int
or
into
jae
imulb
adc
jns
pop
mov
loopne
jne
fsubrs
jno
adc
loop
sar
cmpsl
iret
cmp
int
popa
mov
inc
dec
pop
xchg
jns
xor
lods
popf
sbb
cld
test
sahf
hlt
jnp
shr
dec
stos
adc
ss
aas
push
ds
jno
lret
inc
shr
test
jnp
jg
adc
lea
and
aas
and
push
push
pop
push
jb
scas
pop
das
fs
xor
push
test
leave
jnp
repnz
in
fsubr
pop
aad
mov
ja
arpl
cltd
sti
cmpsb
cmpl
pop
daa
mov
sub
jnp
shlb
jge
ss
mov
lea
out
filds
ret
and
pop
pop
inc
arpl
lock
sub
push
fstpl
lods
adc
insb
mov
pop
sahf
push
mov
add
push
pop
adc
push
sbbl
push
add
mov
ja
jno
mov
addr16
je
fstpl
add
add
enter
cmpsb
xchg
sub
push
xor
cmc
dec
and
or
hlt
sub
sub
and
xor
mov
mov
je
jp
lcall
fdivrs
push
mov
aad
add
sbb
cltd
rorb
push
pop
push
mov
movsb
sub
sub
fadds
cmp
cmp
pop
adc
or
jp
ljmp
test
dec
iret
in
fildl
cmp
jg
idivl
jl
insb
scas
repnz
ljmp
pusha
and
lret
jb
out
push
lahf
stc
inc
jb
push
mov
adc
sbb
rcrl
sbb
sbbb
loope
xor
orl
repnz
or
mov
xchg
xchg
outsl
and
sub
jns
dec
jbe
sub
cmc
dec
aad
dec
mov
mov
fs
mov
test
je
cmp
shrb
loop
xor
add
lods
fwait
cmc
push
push
xchg
push
adc
aas
cli
or
push
ret
xor
mov
aas
nop
popf
shl
sub
mov
and
cwtl
mov
call
add
cmc
pop
popa
inc
fwait
shlb
out
mov
lea
mov
subl
jnp
sub
pop
xor
push
rclb
xchg
dec
ja
iret
or
inc
cmp
cmp
pop
sbb
inc
not
fwait
cltd
loopne
frstor
popf
cmc
enter
sub
cld
stos
push
mov
sub
adc
inc
mov
mov
mov
dec
mov
fistpl
loop
lock
sbb
pop
rcl
or
mov
test
dec
mov
dec
pop
dec
in
adc
add
inc
jp
or
testl
sub
xchg
push
pop
jnp
mov
add
mov
cmp
xchg
dec
cltd
gs
or
movsl
ret
mov
int3
add
jnp
jl
mov
add
mov
dec
repnz
jecxz
xchg
test
push
push
jmp
fnsave
js
testl
mov
mov
jae
dec
cmpsb
inc
aad
js
arpl
jmp
sbb
xchg
imul
ret
movsl
outsb
dec
les
das
notb
inc
mov
mov
sub
dec
insb
outsl
lret
mov
push
inc
outsb
stos
cmpsb
outsl
int3
dec
test
xor
scas
ficompl
push
outsb
cmp
cmp
push
xor
or
insb
incb
xchg
out
outsb
stos
ret
subb
sub
mov
rcr
push
pushf
test
adc
nop
das
lcall
mov
imul
push
or
imul
push
or
js
push
or
and
jge
push
or
jmp
xchg
jl
fld
fldenv
xor
xchg
outsl
outsl
stc
xor
lock
pushf
inc
add
dec
push
mov
jo
ret
xor
addr16
outsl
je
xchg
lods
test
inc
nopl
icebp
pop
lds
xchg
inc
jle
xorl
rorb
mov
dec
sub
push
xor
mov
es
fsubl
pop
add
mov
sub
pop
test
in
jne
adc
cmp
or
inc
xchg
jmp
insb
push
xchg
mov
outsb
xor
jo
lahf
mov
aaa
mov
pop
aam
iret
andb
imul
imul
ret
sbb
pop
outsl
pop
scas
int3
lcall
xlat
lds
sbb
stos
dec
mov
test
jge
pop
or
add
jnp
sub
addr16
mov
xor
cmp
jns
jecxz
pusha
jnp
inc
xchg
idivl
in
sbb
pop
int
ret
dec
jmp
pushf
add
inc
push
sahf
test
inc
sbb
fsubrl
imul
pop
push
fbstp
or
or
call
and
lea
sbb
imul
outsl
scas
adc
push
or
jle
mov
rcll
jmp
mov
or
jmp
pop
mov
pushf
cmpsl
push
xor
xchg
inc
pop
add
in
scas
adc
idivb
sub
fs
or
movsl
push
mov
iret
mov
scas
es
fwait
jns
jle
push
testl
arpl
pop
pop
push
sbb
push
push
outsb
xchg
jmp
jns
in
lods
in
popa
xchg
cmc
cltd
js
mov
mov
jp
icebp
loop
lods
push
cmp
test
sbb
icebp
sub
mov
loop
mov
mov
jmp
fs
xor
ret
and
negb
fst
das
cmp
pop
inc
cmpsl
lret
sahf
gs
gs
aas
jno
adc
jnp
sbb
or
push
mov
pusha
xchg
fdivrs
jmp
adc
popa
test
inc
stos
imul
xor
and
jae
jo
cmp
iret
add
lods
dec
sub
pop
mov
repz
fcomps
jg
pop
or
or
jle
cwtl
xchg
insl
ds
mov
out
jecxz
outsb
sti
mov
lock
stc
divps
mov
jbe
pop
pushf
loopnew
cmc
mov
sub
inc
mov
cmpsb
movsl
fs
jg
imul
push
push
or
in
jnp
adc
pop
jno
mov
pop
dec
jle
out
fdiv
popf
fucomp
inc
xchg
inc
adc
pop
dec
out
inc
repnz
adc
push
inc
and
or
fcompl
movsl
pop
adc
push
jmp
mov
enter
fsub
dec
pop
stos
and
out
xchg
sub
lock
js
mov
imul
sbb
cli
loope
inc
mov
inc
lea
imul
outsb
movsl
cmpsb
push
or
sbb
jno
or
push
dec
jo
cmpsl
sbbl
gs
ds
sub
push
xchg
mov
fsts
lods
daa
pushf
mov
nop
shrb
lcall
sub
cmp
out
scas
cvtps2pd
repnz
test
outsl
mov
push
inc
aaa
add
ss
aad
ss
outsl
xchg
xor
hlt
cmp
jae
gs
pop
mov
jb
mov
sbb
loopne
fisubl
add
dec
in
cli
ret
pop
popf
mov
mov
inc
fsubs
add
sahf
repnz
add
sbb
loop
arpl
inc
fsubrs
jle
cli
push
clc
mov
or
fs
inc
add
xor
xor
or
icebp
jnp
icebp
repz
cli
mov
pushl
mov
stos
pop
ficoms
mov
sbb
mov
xchg
out
pop
add
dec
sub
pop
cmpsl
or
mov
cltd
jge
pop
mov
enter
cmc
scas
push
xchg
nop
andb
xchg
inc
mov
ficoms
je
xor
mov
cmpsl
xor
inc
push
bound
lods
data16
mov
xchg
lods
push
push
push
sbb
inc
scas
xor
push
repnz
ret
cmp
pop
add
sbb
mov
lods
pop
test
addb
andl
jg
pop
xor
push
pop
jl
std
mov
sar
jmp
iret
ficoms
jl
mov
ret
js
dec
sub
push
mov
push
mov
jmp
lret
push
cmpl
push
pop
test
insl
sub
sbb
pop
inc
call
aas
pop
mov
fdivp
sbb
push
jns
lahf
shl
mov
in
in
jl
or
ret
sbb
inc
sahf
in
out
addb
mov
xor
adc
icebp
aas
xchg
cmpsl
adc
mov
call
loop
movsl
jnp
ds
fs
sbb
shrb
dec
out
fcom
jns
test
bound
mov
dec
lret
mov
jno
inc
ss
lock
testl
mulb
clc
data16
push
mov
mov
cmovno
in
loopne
dec
jnp
adc
xchg
mov
adcl
add
mov
mov
lods
into
inc
push
mov
inc
stc
inc
inc
fcmovnbe
aad
aas
fxch
push
xchg
stos
jns
jno
sbbb
add
mov
lds
mov
data16
xor
jmp
outsl
stos
rorl
pop
cli
mov
lret
cmp
fstl
lds
stos
mov
sub
xorb
mov
mov
lock
mov
sub
cmpsb
jecxz
lods
jmp
inc
mov
sbb
mov
xchg
fiadds
popf
or
mov
icebp
sarl
insl
mov
enter
dec
sub
mov
daa
ja
adc
sti
jle
xor
mov
out
xor
sti
out
insl
stos
jg
xor
insl
sbb
daa
jp
xchg
pop
lahf
adc
call
xchg
test
push
mov
ficomps
mov
loop
add
mov
jg
ss
push
xchg
fbld
dec
decb
mov
jo
icebp
mov
popf
cmp
mov
inc
mov
popa
xchg
xchg
hlt
add
dec
xchg
mov
stos
lret
out
mov
push
cs
shll
cmp
mov
pushf
sbb
jae
mov
pop
push
aad
jmp
push
lods
push
xor
cmp
fwait
int3
mov
push
push
jno
pushl
sbb
adc
in
pop
lea
push
clc
fnstenv
sbb
inc
xlat
adc
dec
sub
pop
fcmovnu
stc
pusha
jp
jle
sub
ljmp
add
xor
cmp
cld
pop
sbb
cltd
inc
ret
out
movsb
mov
incb
or
add
ljmp
xchg
fstps
cwtl
std
loopne
je
xchg
push
mov
in
ljmp
stos
aas
lret
test
fldenv
mov
dec
popa
pop
mov
out
sbb
pushf
xor
push
push
loop
clc
cmp
sahf
xchg
mov
scas
lahf
aad
mov
and
ficompl
pop
dec
inc
test
mov
addr16
insb
sbb
int
into
daa
lcall
fldcw
jno
inc
in
add
fidivs
std
xchg
and
test
inc
sti
xor
sbb
jae
mov
inc
add
mov
repnz
add
lds
add
jae
repnz
int3
xchg
jb
jge
xchg
daa
mov
aam
push
adc
inc
cld
mov
rclb
ret
mov
and
jmp
je
cmp
mov
jne
cmp
mov
movsl
pop
pop
cltd
pop
sbb
mov
jb,pt
aad
stos
pop
add
mov
popl
stc
punpcklbw
out
arpl
jmp
pop
mov
enter
lcall
cmpsb
test
hlt
rcl
cld
jnp
lods
pop
sub
shlb
jmp
xlat
adc
pop
mov
inc
xor
xchg
or
fwait
mov
jo
sub
mov
jns
xchg
movsl
and
int3
inc
mov
dec
push
pop
mov
roll
mov
cmp
and
je
xor
aad
jo
dec
in
in
jno
sub
mov
sbb
hlt
sti
fs
data16
mov
or
fwait
lea
sub
lret
jo
ret
movsl
sub
es
xor
hlt
push
inc
mov
mov
mov
cmpsl
pop
fcoml
push
inc
fadd
test
sub
inc
les
mov
cld
xor
jmp
pop
sti
js
push
lret
dec
jmp
mov
jp
mov
xor
xchg
in
and
test
cmpsb
rol
scas
push
xlat
repnz
int3
push
xchg
pusha
or
xchg
notl
movsl
sbb
push
pop
fstl
pop
jp
dec
adc
xchg
mov
cli
js
notb
add
cmpb
insb
jmp
jbe
and
sub
or
into
shlb
push
sub
into
in
hlt
mov
xor
inc
stc
sub
cld
xchg
and
imul
pop
push
mov
and
jnp
mov
popf
jle
ret
sub
mov
lods
popf
sbb
in
rcrl
in
leave
rcl
loopne
idiv
push
jo
push
insl
xchg
cmp
mov
and
adc
jp
addr16
mov
push
and
inc
lods
inc
fcmovnb
cli
icebp
mov
loope
in
jno
fstpt
pushf
mov
dec
ljmp
mov
cmc
dec
jp
test
push
xchg
push
lcall
jbe
inc
jmp
inc
rcrb
mov
rclb
repnz
jge
pop
icebp
sti
sub
mov
sbb
cld
adc
ret
mov
dec
lret
movsl
out
repz
sti
stos
out
xlat
cs
insl
adc
mov
push
mov
mov
mov
clc
lcall
je,pn
ret
rol
jb
adc
imul
push
jae
stos
xchg
adc
fildll
or
jg
mov
pop
icebp
and
sub
mov
pop
repz
and
ret
in
push
cli
and
inc
xchg
inc
imul
shlb
aad
mov
add
outsl
lods
lea
cmpsb
fwait
mov
mov
pop
sub
sub
cs
loopne
mov
sub
fwait
lret
sbb
fstpt
imul
scas
ss
arpl
jne
xchg
or
sub
cmpsb
push
mov
sbb
pop
or
lods
xlat
or
test
sub
jmp
sub
jo
shlb
ret
add
xchg
xchg
dec
je
ret
int3
out
add
adc
and
push
push
mov
mov
call
mov
imul
das
in
mov
jbe
iret
pop
enter
add
push
lea
mov
data16
mov
js
cmp
int
popf
jl
and
jg
incl
rcr
lock
push
dec
repz
sub
cmp
popf
jo
mov
ret
fildl
ds
mov
cwtl
iret
fs
inc
xchg
dec
clc
adc
sbb
mov
rcrb
mov
xchg
js
dec
nop
xor
jp
pop
and
mov
or
fstpl
dec
and
ds
sbb
icebp
lock
in
je
movsl
pop
xor
cmpsl
jb
lcall
push
stos
rclb
cmp
cmp
mov
or
test
add
cmpsl
cmp
mov
shll
outsl
sarl
or
stos
jbe
mov
and
pop
cwtl
sbb
movsl
cwtl
and
test
shlb
sub
dec
cs
cmp
xchg
inc
repz
mov
cmc
push
jnp
cmp
je
cmpsl
cmp
xor
and
sbb
pop
ficomps
mov
adc
cmp
or
ss
adc
mov
lock
add
jmp
popl
pushf
cmp
and
cmpsb
pop
cltd
jnp
mov
jle
mov
lcall
loop
rcl
jecxz
shrl
push
lret
rorb
adc
push
outsl
sbb
mov
mov
sti
add
fsubrl
adc
test
movsl
cmp
add
inc
mov
pusha
push
push
pop
andb
and
mov
jp
jmp
fbld
pop
or
cmpb
mov
daa
or
jns
xchg
or
std
push
cmpl
insl
inc
sbb
bound
test
mov
lcall
add
cwtl
add
or
push
pop
jae
or
out
aas
lock
dec
push
pop
test
loopne
jp
push
shrb
jl
mov
fsubrl
icebp
insb
push
mov
orb
mov
sbbl
aad
dec
aad
cmp
xor
sbb
stos
movl
xchg
jecxz
in
add
icebp
jle
jno
mov
push
test
cmp
out
jl
icebp
mov
into
pop
dec
mov
in
jecxz
xlat
inc
sti
add
or
pop
fs
dec
call
inc
or
jno
jb
shlb
sbb
fs
shlb
stos
xchg
lods
xchg
sahf
adc
shll
ret
repnz
std
in
add
sbb
test
je
popl
xor
mov
dec
sbb
xchg
clc
add
call
fcomp
pop
stos
js
jmp
sbb
divl
loope
pop
push
jnp
negb
mov
push
pop
rolb
xor
dec
mov
mov
xchg
mov
lea
stc
lahf
popf
add
sub
and
pop
imul
or
cmpsb
in
mov
adc
or
ret
dec
ret
sub
push
or
jae
mov
call
sbb
cmp
ret
jae
shlb
and
lea
mov
movl
xor
fwait
xor
adc
xor
sub
loopne
push
aam
cli
push
repnz
jbe
test
push
pop
rcll
stos
ret
gs
adc
dec
mov
pop
jmp
orb
into
push
aad
shll
pop
pop
add
lock
sub
pop
arpl
xchg
add
jg
int
enter
push
in
movsb
inc
lret
cmpsl
cs
sub
cld
out
mov
add
loop
cmc
dec
loope
mov
cli
cwtl
xchg
stos
or
push
mov
mov
mov
push
data16
and
or
xor
pop
inc
hlt
push
outsb
cmpsl
fistps
sub
cmp
test
xchg
pop
jbe
ror
dec
fnstenv
sbb
sbb
adc
pop
adc
xor
xchg
sbb
add
lret
pop
test
iret
pushf
sub
nop
in
and
inc
mov
pop
and
mov
sti
or
outsl
cs
xor
fs
test
xchg
mov
dec
sub
sub
pop
pop
incl
jae
xchg
dec
jp
ds
inc
push
out
and
mov
adc
pop
inc
sbb
jmp
scas
aas
lret
or
sti
cmp
lret
test
and
mov
push
adc
xor
cli
or
push
xchg
adc
dec
repnz
mov
cmp
pop
sub
xchg
jge
fcmovnb
sbb
ljmp
call
xor
pop
add
jle
xchg
jmp
mov
cmp
mov
mov
scas
bound
push
rol
mov
lret
jb
xchg
xlat
push
nop
enter
dec
lcall
cmpsb
fucomip
push
dec
popf
and
je
mov
jp
jecxz
aad
xor
xor
ja
les
push
sahf
jnp
push
mov
mov
lods
in
test
add
or
fmul
stc
idiv
mov
sbb
sbb
aad
push
sti
jne
sub
scas
psubusb
sbb
mov
dec
and
in
adc
cs
fidivl
pop
es
je
fildl
ficoms
push
dec
and
in
xor
pop
cli
bound
std
test
in
in
inc
lds
jp
adc
mov
test
loope
popf
cmp
jmp
paddq
into
cli
out
lds
cmpsl
push
rcrb
mov
push
loopne
jg
cmc
lret
lock
cli
push
fnstcw
xor
cltd
jo
mov
or
mov
mov
movsl
cltd
sub
lods
cmp
mov
fadds
lds
addb
aam
cwtl
cmp
inc
add
ret
popf
mov
cmp
and
bound
mov
das
int
js
or
and
loop
cmp
in
mov
sub
movsl
inc
lret
dec
ficoml
sbb
cmp
lahf
hlt
fistl
inc
mov
scas
ficoml
xchg
aam
and
data16
loopne
fstpt
aas
ljmp
mov
les
jo
lock
stc
push
sbb
imul
mov
sub
scas
mov
repnz
xor
loope
sti
adc
sub
lret
inc
xchg
cmpsb
mov
mov
adcl
xor
sti
into
popf
inc
inc
pop
in
add
bound
cmp
or
out
push
ja
negl
and
ja
sti
mov
fildll
sub
outsl
outsb
pop
adc
or
pop
dec
fdivrs
fnstenv
pop
test
and
push
icebp
ss
pop
ja
pop
sarl
mov
enter
fldcw
out
xlat
js
jmp
in
or
cmp
or
push
push
dec
add
cs
dec
or
shll
pop
test
pop
hlt
add
mov
andb
sub
lods
outsl
mov
cwtl
stos
pop
xchg
fidivl
inc
frstor
clc
lea
les
inc
push
sbb
out
mov
or
sbb
sbb
jno
ljmp
or
rcll
insl
outsb
jge
hlt
pusha
xor
sbb
leave
data16
and
stos
mov
pop
cld
rcl
sbb
test
jb
int
mov
fbld
xlat
xchg
dec
adc
and
pop
jg
addr16
push
or
pop
bnd
xchg
fimull
ret
xchg
popf
out
mov
lret
fdivs
repnz
movsl
int
xchg
leave
mov
sub
stos
mov
jle
fnstcw
mov
fsubs
xchg
jne
and
popf
fwait
sbb
xchg
pop
cmpsb
add
fiadds
add
test
in
mov
inc
jmp
insl
jge
xor
lea
repz
in
jmp
bnd
dec
test
roll
cmpl
mov
test
mov
cmpsb
adc
testb
addr16
and
xchg
bound
jp
mov
cmp
or
jns
gs
ss
mov
fimull
pop
sub
clc
pop
sbb
lds
mov
lahf
xchg
sbb
rorl
adc
shrb
movsl
jb
cmp
pop
add
add
xor
mov
mov
jle
and
rolb
ret
insb
sahf
push
xchg
pusha
imul
daa
jmp
xchg
xor
enter
pop
iret
aaa
js
push
mov
pop
xlat
sbb
sahf
jl
dec
nop
sbb
and
sti
xchg
dec
dec
xchg
scas
push
clc
push
cmp
sahf
mov
lret
inc
out
icebp
xor
out
ja
inc
repz
jbe
ficomps
hlt
in
in
mov
jmp
cld
gs
pop
repnz
mov
or
scas
jo
sti
or
or
xchg
sub
and
pop
mov
pop
xchg
popf
int3
in
movsb
mov
loopne
fcmovbe
nop
movsb
je
mov
ds
jno
ds
lcall
dec
shlb
imul
xchg
mov
add
std
rcr
dec
xchg
mov
sbb
dec
mov
int
pusha
ljmp
arpl
xchg
sti
mov
jnp
push
push
jo
fs
cmp
and
orb
addr16
icebp
jp
and
xor
cltd
neg
add
adc
mov
xchg
jae
xor
push
mov
ret
cmp
fsin
cmp
push
ds
xchg
xor
stc
loopne
scas
pop
mov
repz
dec
xchg
out
jmp
ja
mov
xor
adc
fwait
xchg
push
enter
cmpsl
aaa
dec
and
dec
sti
cwtl
or
jecxz
rcrb
xchg
mov
mov
adc
add
jp
mov
out
sub
jmp
call
outsl
aam
js
ret
scas
jge
cmp
push
and
pop
and
and
and
push
sbb
mov
xlat
dec
xor
push
xor
inc
addr16
pop
cmp
cli
je
pop
dec
mov
fidivrs
mov
jge
adc
mov
pop
clc
cmc
and
clc
clc
je
xchg
hlt
dec
test
std
ljmp
sub
pop
cli
jnp
add
xor
fcom
adc
mov
mov
stos
dec
lods
jecxz
rorb
push
dec
pop
cli
sarb
sub
daa
in
mov
popa
push
adc
inc
movsl
xchg
push
sub
sub
lea
lods
push
add
jle
xchg
inc
in
add
iret
mov
lret
or
sbb
ret
or
out
fwait
xor
loope
sahf
rcrl
fdivl
cmpsl
jo
sub
push
cmpsl
or
xlat
test
and
insl
loopne
stos
add
push
jg
lret
push
lahf
enter
mov
mov
lock
dec
adc
daa
add
fs
sbb
add
daa
aam
sarb
mov
sbb
mov
icebp
bnd
mov
popa
adc
push
or
fisttps
dec
xchg
jmp
cmc
push
gs
popl
adc
daa
ja
insl
adc
and
mov
push
icebp
mov
jb
sbb
sbbl
xchg
jbe
mov
daa
adc
out
popf
aam
add
pop
push
adc
push
sbb
loope
or
inc
adc
mov
dec
int3
pop
fs
mov
std
in
stos
xor
lahf
mov
pop
mov
jae
mov
stos
insl
out
pusha
dec
xchg
in
insb
xor
mov
sub
and
add
xlat
mov
int
inc
or
jae
pop
cs
loopne
mull
mov
mov
mov
inc
mov
scas
ret
faddl
aas
xchg
pop
inc
wrmsr
arpl
das
lcall
push
cmp
mov
cmp
stos
pop
es
jns
lcall
sbb
mov
das
mov
call
and
sbb
test
sbb
rcrb
and
adcl
or
idivl
out
mov
test
push
or
into
sub
daa
imul
xor
adc
popa
mov
or
test
pop
sub
mov
add
xchg
sub
movl
fwait
and
sbb
shlb
inc
jecxz
push
jne
sub
jns
inc
pop
xor
insb
es
and
aaa
inc
mov
je
in
aas
jecxz
mov
out
fs
hlt
imul
xlat
or
or
mov
mov
jle
movsb
mov
popf
cwtl
xchg
loopne
orb
cmp
or
inc
leave
lds
adc
subb
add
inc
mov
icebp
lods
cmp
xchg
pushf
or
or
pusha
cmp
adc
popf
and
rcrb
fwait
mov
and
inc
sti
xlat
or
rolb
adc
sbb
adc
pop
das
mull
loope
dec
popa
ret
shl
pop
adc
popf
xchg
pop
pop
ja
fmuls
or
into
sub
cli
jnp
sbb
sbb
out
dec
lahf
je
sbb
cmpsb
pop
mov
cld
and
jnp
hlt
cmp
loope
xchg
cmp
repnz
push
aad
mov
xorl
mov
or
mov
xchg
test
loopne
outsl
fsub
loopne
dec
arpl
popf
mov
lock
dec
sbb
lea
or
roll
mov
popf
or
nop
jnp
fadds
lcall
pusha
rolb
cld
in
jno
sarb
mov
inc
jg
orl
sbb
push
imul
pop
arpl
inc
xor
and
cmp
mov
in
mov
sub
pop
and
imul
sbb
pop
sbb
pop
cltd
adc
filds
xchg
pop
mov
pop
sub
mov
cmp
mov
adc
pop
fnstenv
std
xchg
and
into
lahf
mov
mov
push
mov
sbb
sub
loopne
icebp
mov
mov
das
adc
ss
push
test
mov
cmp
xchg
sbb
inc
in
insl
dec
ret
mov
xchg
outsl
jecxz
sbb
sbb
mov
adc
and
sbb
push
mov
adc
fwait
mov
xchg
xlat
or
test
or
xchg
jb
xchg
sub
repnz
and
adc
mov
jns
push
movsl
stos
shll
outsb
rcll
into
fwait
cltd
push
imul
xchg
mov
xor
sub
push
das
adc
mov
fistpll
inc
cld
xorl
cmp
push
inc
jl
push
outsb
ficoml
data16
lea
push
fcompl
insl
hlt
dec
fadds
push
jno
jae
movsb
aas
fstpt
dec
pop
loopne
icebp
dec
icebp
shll
gs
movsb
xchg
rcll
or
imul
mov
xchg
in
ror
popf
loopne
sbb
daa
adc
or
divb
out
in
sbb
add
das
cmp
lcall
loopne
cwtl
aaa
mov
shll
mov
int3
or
aaa
js
bound
pop
insb
fs
cmp
out
cmc
jnp
mov
ja
pusha
mov
cmp
ficomps
push
xchg
sbbl
xorb
sub
fsubl
add
cs
clc
inc
mov
mov
push
mov
push
jae
data16
mov
sbb
nop
aam
jecxz
jno
sub
adc
xchg
mov
mov
jge
adc
push
test
ljmp
cmp
cmp
lock
xchg
fstpl
pop
stc
mov
inc
add
aas
ja
or
shlb
or
push
and
jmp
mov
popf
xchg
ja
mov
inc
movsl
lock
jle
mov
fdivrs
fstpt
jecxz
mov
inc
or
into
popa
push
cli
out
add
and
add
stc
mov
cmp
test
mov
mov
dec
ret
shrb
enter
rorb
scas
dec
sti
movsl
xchg
or
hlt
jl
scas
mov
imul
orb
aaa
aad
inc
scas
sub
or
sahf
dec
mov
pop
mov
movzbl
inc
jae
inc
popa
ret
lods
inc
sbb
lods
movsl
mov
dec
bound
or
dec
repnz
lods
jle
push
stc
out
sub
in
inc
aam
insb
push
in
push
and
icebp
sbb
mov
lods
in
arpl
mov
call
jp
call
jl
xor
pop
test
pop
lds
pop
pop
jge
test
sub
cmpsl
and
imul
mov
mov
jmp
pop
pushf
je
mov
clc
cmp
or
mov
lret
adc
add
aam
inc
jnp
aas
jo
sub
ret
dec
xor
mov
lods
add
adc
aaa
dec
popf
cmp
sbb
xchg
and
inc
and
push
jae
and
call
mov
or
mov
sbb
ja
cmp
sti
loopne
lods
adc
rolb
test
and
adc
mov
sarb
stc
xor
jns
loop
sbb
into
push
mov
jecxz
lods
mov
push
stos
test
cmpsl
jp
pop
push
cmp
jmp
dec
loope
pushl
icebp
inc
xchg
sbb
or
and
or
lcall
out
data16
in
add
pop
jbe
rclb
pushf
popa
cwtl
pop
push
add
cmpl
push
mov
jge
je
mov
jne
cmpl
xchg
and
or
addr16
xlat
xchg
mov
sub
dec
sub
mov
inc
daa
mov
int
mov
dec
lret
mov
in
decb
stos
ja
daa
pop
sar
mov
adc
sbb
ret
cmp
mov
push
or
push
xor
adc
orb
outsl
insb
test
cmpsl
iret
jl
pop
lret
addr16
aam
popa
insb
push
add
cld
mov
sbb
xchg
and
or
mov
sub
mov
mov
pop
dec
test
frstor
clc
mov
jne
dec
or
and
inc
sub
push
adc
mov
in
iret
mov
loop
jnp
push
rorl
scas
xchg
inc
aas
div
mov
lods
shll
iret
mov
jns
xchg
and
iret
xchg
mov
outsl
ficomps
clc
mov
mov
inc
shlb
sbb
jg
aad
adc
cmp
cmp
enter
add
fsub
movsb
xor
fnstcw
daa
cmp
sbb
sub
mov
fcompl
and
or
sbb
nop
cmp
or
call
jp
dec
xlat
adc
lods
or
pop
mov
cmp
lds
cmc
adc
pop
es
cmc
and
pop
pop
data16
hlt
rolb
jle
mov
into
punpcklbw
sub
loope
lds
adc
cmovbe
xchg
dec
sub
dec
jmp
shlb
xchg
dec
mov
dec
push
call
mov
cli
scas
jg
arpl
adc
or
add
push
ret
lret
add
pop
sub
sub
add
jecxz
dec
ds
mov
sub
cmp
jl
and
lods
aaa
inc
mov
cmp
dec
pusha
jo
mov
out
into
push
in
pop
in
push
movsl
inc
xchg
lret
xorl
in
push
jnp
pop
js
sbb
mov
xor
stc
jge
jl
sti
inc
cli
imul
fsubr
sbb
stc
popf
cmp
dec
pavgw
fldenv
dec
enter
shlb
mov
fidivs
rclb
jno
aad
xor
sahf
xchg
pop
call
or
add
negl
sbb
push
inc
push
sbb
enter
aad
cmp
sbbb
movsb
sub
mov
jle
lods
dec
dec
push
icebp
stc
mov
xchg
push
inc
mov
sub
rclb
in
pop
mov
push
xor
pop
xor
pushf
scas
loope
sub
scas
lods
fisubrl
mov
or
fsts
in
sbb
and
in
rorb
xchg
leave
and
in
lods
push
adc
xchg
cli
push
inc
or
sub
rol
push
das
sub
or
scas
pop
fnstcw
inc
inc
xor
lea
dec
pop
jnp
jg
or
mov
push
mov
in
int3
or
or
sub
xor
pop
pop
mov
in
mov
in
cmc
les
decl
mov
ret
shrl
or
loop
sahf
dec
ret
loop
aaa
sbb
movsb
outsb
jp
jnp
push
adc
orl
fsubr
mov
jae
je
std
in
pop
sahf
inc
daa
inc
in
cmp
js
push
imul
mov
pop
dec
and
out
jge
or
sbb
and
test
aas
jo
outsl
scas
inc
or
les
mov
cmp
bound
adc
xor
xchg
nop
bound
outsl
jnp
or
mov
or
lea
aam
jecxz
outsb
leave
lcall
lret
mov
cmp
sub
pusha
and
ljmp
add
enter
stos
adc
test
ret
jno
inc
jne
adc
push
pop
fisubrs
cmpsl
dec
pushf
rorl
or
out
push
xchg
mov
sub
mov
push
pop
sub
xor
or
inc
arpl
icebp
add
xchg
mov
in
clc
cltd
outsb
mov
shll
movsl
ret
xor
dec
fistpl
push
pop
shlb
pop
inc
dec
test
push
sub
rorb
jbe
loopne
or
cwtl
jmp
pop
mov
cwtl
sub
sub
cli
lods
adc
movlps
pushf
in
jle
insl
push
aas
or
mov
icebp
mov
repnz
fcomi
repz
mov
ret
adc
jge
mov
call
cmp
jge
mov
adc
pushf
push
inc
gs
insl
sti
cmp
jecxz
pop
and
cs
cmp
cwtl
cltd
or
jl
lret
sbb
jnp
incl
aaa
aad
call
cwtl
mov
addb
out
push
ljmp
je
les
and
ss
push
jne
mov
sbb
in
mov
mov
jle
iret
test
inc
xchg
std
xorb
push
lea
push
hlt
aas
shrb
add
pop
push
stc
pusha
mov
insl
loop
xchg
xchg
popf
cmc
xchg
jg
andps
mov
jmp
arpl
xchg
or
roll
clc
mov
xchg
adcl
enter
xchg
add
push
sub
popf
xchg
and
and
enter
jp
std
lds
jae
xor
dec
or
add
es
cmc
jne
mov
stc
adc
or
cmp
test
stos
lret
lret
mov
loope
enter
or
stos
mov
dec
daa
pop
xchg
imul
lcall
lds
xchg
fstl
jge
ds
or
cmp
fdivrs
pop
aam
mov
jmp
je
dec
adc
mov
in
ds
push
repnz
add
sbb
xor
and
hlt
mov
fs
lea
lret
shl
adc
fildll
les
sahf
xchg
or
adc
jg
xor
scas
jns
cltd
inc
es
cmp
inc
or
das
jno
shrb
add
jnp
sbb
cs
push
mov
fmuls
push
xor
mov
xor
ljmp
out
and
aam
adc
neg
in
mov
out
pushf
mov
clc
lret
enter
imul
cmpsl
bound
adc
fadd
pop
add
addr16
adc
out
and
mov
mov
je
dec
push
test
jae
or
das
test
lock
pop
xor
insl
cmpsl
pop
lcall
pusha
and
repz
ss
cmpl
js
or
cmpsb
lret
repz
cmc
jb
test
push
jne
and
jp
les
mov
dec
enter
mov
mov
cmpsl
rcrl
arpl
adc
icebp
or
andb
cli
sub
imul
test
push
outsl
ja
lret
sar
pushf
dec
sub
out
mov
mov
mov
sbb
icebp
int
stc
dec
add
mov
and
inc
mov
imul
ficomps
cmc
mov
inc
adc
imul
sub
mov
mov
and
and
aas
dec
or
jl
push
lcall
or
adc
shrb
stc
cmp
imul
mov
lods
xchg
mov
jecxz
sub
pop
dec
sub
pop
test
sbb
pop
sub
adc
cli
xlat
std
jmp
cmp
fsubs
aaa
orb
movsb
daa
cmp
mov
les
scas
lds
pop
mov
xor
cmp
mov
push
imul
lahf
pop
fidivs
out
aas
int
inc
popf
call
lea
or
cmp
popa
or
shlb
dec
popf
mov
rcrb
cmpsl
or
dec
mov
lcall
lcall
or
pop
push
add
jp
test
nop
shlb
jnp
sbb
imul
and
sub
cwtl
ds
sbb
or
imul
push
scas
cwtl
les
mov
repnz
cmp
fs
movsb
push
xchg
add
sbb
icebp
inc
sbb
aaa
xchg
mov
push
stos
jle
mov
jmp
mov
cwtl
mov
test
fadds
mov
popf
sbb
sbb
imul
adc
sbbl
aas
pop
ss
outsl
and
daa
imul
fisubs
mov
inc
push
ss
shll
lea
push
arpl
lea
jae
shlb
cmpsl
stc
das
cmc
push
jo
aas
adc
inc
add
dec
call
and
push
in
pop
mov
adcl
xor
movsb
pop
sbb
mov
das
jmp
push
sbb
sbb
xchg
xchg
rorb
jo
jle
fwait
movaps
movsb
push
jnp
mov
movsl
cmpsb
pushl
or
pop
xlat
fisubrl
cli
pusha
fwait
push
adc
ss
xorl
addl
pop
add
or
mov
push
cld
pop
pop
push
jl
outsl
inc
inc
push
fists
dec
out
fsts
js
pop
adc
sbb
push
add
mov
mov
xor
dec
loopne
push
stos
daa
or
sbb
stos
and
test
jmp
daa
mov
jno
lods
pop
loopne
arpl
cld
cli
scas
pop
jp
inc
outsl
mov
pop
xor
bnd
mov
clc
inc
sbb
inc
fisubrl
leave
mov
jmp
dec
incl
mov
dec
movsl
es
js
out
imul
shll
lods
adc
div
xor
pop
outsb
fimuls
mov
dec
mov
pop
rcrb
ss
jecxz
cmp
call
sbb
pop
dec
add
sbb
inc
jno
push
aam
hlt
aad
cwtl
stos
ljmp
push
enter
jg
mov
lret
mov
push
movsb
fcompl
mov
cs
inc
pop
stc
dec
movsl
icebp
sarl
ret
nop
in
jno
jp
jl
pop
push
adc
mov
hlt
mov
mov
cld
mov
int
icebp
xor
int
flds
lcall
cmc
or
decb
nop
enter
or
ja
fs
xlat
pusha
cmp
pop
in
negl
mov
divb
cmp
cmp
lret
cmpsl
jo
sub
test
add
ljmp
call
leave
pop
lahf
out
fidivrs
jns
aad
fs
jae
fsubl
rclb
lods
sbb
dec
dec
imul
add
iret
js
dec
in
xchg
jno
dec
outsl
sbb
ret
pop
sbb
xor
mov
or
mov
lahf
ja
fstl
call
repz
dec
fsubrs
sbb
sarb
inc
cli
scas
mov
cld
jecxz
out
cmp
jnp
pop
repnz
rolb
xlat
das
xor
stc
insl
addb
iret
mov
fistps
mov
mov
cs
seta
sahf
enter
cmpsl
lcall
ret
xor
pop
jb
movsb
popa
outsl
into
push
hlt
push
lods
sub
cwtl
fwait
mov
mov
enter
jbe
int
pusha
cmpsl
test
or
lcall
xchg
mov
sub
jmp
dec
fildl
xor
mov
popf
daa
rcrl
mov
sub
push
push
out
rol
inc
mov
arpl
movsb
inc
das
dec
in
jnp
dec
pop
and
insl
test
mov
xor
mov
mov
sbb
cmc
jno
mov
in
inc
sbb
pusha
jnp
push
push
pop
inc
mov
push
mov
mov
ja
fwait
jne
ficompl
mov
out
movsb
sub
xchg
fsubrl
out
in
mov
push
mov
push
loop
mov
repnz
fldt
movsl
jno
popa
push
sti
fnstsw
icebp
shlb
mov
mov
sub
loopne
jl
pop
xchg
xchg
jl
andl
jne
mov
mov
mov
out
cmp
mov
and
dec
mov
decl
mov
fnstcw
jl
add
pop
xchg
stos
mov
push
mov
jge
ja
loopne
mov
cwtl
or
fs
and
sarl
mov
push
cmc
js
cmpsb
repz
pop
ret
xor
dec
aas
push
retw
jp
lret
lds
push
jecxz
mov
sub
add
mov
mov
in
adc
sub
loopne
loopne
loopne
push
adc
sub
imul
push
jns
into
and
mov
mov
mov
push
iret
stc
movsl
push
push
add
jns
cmpsb
pop
scas
and
outsb
xchg
loope
mov
stos
jo
addr16
bound
aam
pop
cltd
or
and
aaa
pop
xor
ljmp
pop
jl
xor
ss
pop
aam
mov
inc
or
mov
jmp
mov
fwait
clc
insl
and
das
stos
push
cmpl
cld
les
sub
push
rcr
adc
push
mov
inc
dec
adc
popa
jecxz
je
stos
mov
flds
inc
lcall
or
mov
mov
dec
and
fs
out
xor
dec
and
insl
cs
jl
dec
xorl
xor
pop
aam
mov
ret
inc
inc
sahf
dec
sbb
xor
ficoms
mov
fisttpl
xchg
xor
cmpl
sbb
jae
sub
popf
lock
adcl
add
xorl
add
pop
push
icebp
adc
mov
leave
cwtl
cmp
ss
data16
push
stos
loopne
gs
cmp
xchg
dec
adcb
xor
ficompl
mov
sub
enter
push
daa
fisttpll
fwait
popf
push
inc
sub
add
jb
xchg
jnp
cmp
jle
fildl
dec
mov
setp
inc
ds
jo
xor
jmp
insl
lret
add
and
aam
rcrb
and
mov
mov
and
aam
jle
fists
and
ljmp
lock
fbld
in
cmp
sub
testl
fucomp
shr
aad
push
mov
stmxcsr
adc
add
stos
cmp
inc
mov
fdivs
cld
pop
mov
pop
cmp
sub
push
sbb
arpl
push
mov
push
cmp
mov
stos
shlb
mov
incb
cli
mov
and
sub
subb
in
loopne
add
mov
and
scas
push
repnz
pop
mov
jno
lods
imul
add
jmp
notl
pop
xchg
adc
cmp
hlt
stos
ljmp
out
dec
repz
or
insb
aam
xor
stos
sahf
lret
and
notb
cmpsl
mov
xor
xchg
mov
jne
mov
sbb
sbb
std
imul
pop
int
mov
fwait
cmpsl
jb
in
jmp
push
lret
fsubs
popf
mov
mov
add
and
sbb
or
outsl
pop
jmp
cli
aam
sub
jp
popa
cmc
movb
push
mov
or
mov
push
mov
lods
das
xor
jmp
xchg
subb
push
dec
stos
push
negl
jbe
movsl
sti
pop
xchg
mov
or
jge
iret
dec
jmp
icebp
repnz
outsb
jmp
add
add
fnstcw
je
push
jle
sub
mov
outsl
mov
int3
in
and
mov
cs
rorl
mov
and
inc
cli
mov
or
rcrl
adc
iret
lahf
xchg
mov
mov
js
jo
push
dec
cs
sbb
cmp
es
jecxz
push
sti
das
int
pop
cmp
and
add
push
xchg
cmp
cld
xor
mov
add
sub
cmpsb
add
out
arpl
push
lret
pop
lret
out
xchg
add
enter
mov
dec
out
pop
inc
xlat
scas
or
pushf
push
jns
iret
dec
imul
and
pushf
cmp
push
ret
rorl
mov
mov
or
mov
push
mov
sub
mov
push
mov
sbb
imul
lcall
fs
mov
jg
mov
and
pop
stos
xorb
pop
call
adc
sub
movb
and
popf
mov
inc
jbe
repz
js
arpl
lcall
sub
repnz
jp
outsb
lret
pop
or
shlb
es
or
jmp
inc
mov
push
jg
lods
int
bound
jo
outsb
and
icebp
test
je
dec
jl
insl
add
jmp
hlt
mov
popa
inc
pop
xor
push
xor
ljmp
outsb
out
mov
repnz
movsb
data16
in
cwtl
xchg
adc
inc
shrb
adc
inc
jge
cmpb
cld
pop
mov
pop
ja
in
pop
in
lds
add
test
mov
andb
mov
movsl
inc
xchg
jbe
xchg
int3
adc
mov
mov
fiadds
mov
xchg
daa
xor
mov
dec
loop
rcl
xchg
xchg
sub
jl
sbbb
sbb
insb
cmpsb
out
int3
mov
adc
pop
push
lods
inc
notb
aas
xor
xor
sbb
movsl
jns
and
ja
add
rcll
sahf
test
lds
lret
xor
rol
movsb
jb
add
cmpsl
mov
inc
xchg
jge
popa
pop
clc
adc
inc
jmp
pop
push
mov
dec
aad
fnsave
cli
arpl
sbb
xchg
sub
mov
gs
xchg
mov
fisttpll
mov
and
xchg
pop
push
mov
out
fidivrs
add
push
mov
bound
and
outsb
xchg
imulb
ds
mov
push
push
pushaw
rcrl
aaa
loope
dec
pop
pop
add
cmc
sahf
pop
aaa
xor
aad
arpl
sbb
lret
jno
push
mov
pop
dec
sbb
xchg
sub
lret
sub
pop
lods
inc
popf
mov
outsb
sahf
and
fwait
loope
lret
add
sbb
push
mov
loopne
mov
mov
and
sbb
idivl
adc
push
cwtl
push
jno
adc
cmp
lods
in
jecxz
jle
inc
xlat
insb
dec
jg
mov
loop
jg,pt
jb
dec
mov
add
xor
sub
negb
pop
dec
fimuls
push
aas
gs
sbb
jg
mov
xor
fbstp
mov
jl
das
cmpsb
cltd
inc
stos
scas
mov
push
mov
inc
and
pop
add
cmp
movl
adc
push
pop
div
scas
dec
mov
ret
testb
mov
das
insl
pop
mov
xchg
pop
pop
orl
xor
ja
hlt
call
iret
dec
aad
cmpsl
dec
xchg
sub
mov
aad
stos
jg
jp
gs
cmpxchg
mov
insb
scas
jl
cmp
inc
jmp
add
xor
mov
dec
adc
adc
push
xor
dec
mov
sub
movsl
mov
mov
out
or
or
sbb
cmp
mul
cmpl
cmp
mov
adc
sbb
adc
cmc
jecxz
xor
dec
sbb
or
lds
mov
mov
cmp
movsb
adc
mov
js
add
iret
xlat
jmp
lcall
and
push
and
push
ret
adc
add
cmpsb
or
mov
cmp
fisttps
lds
test
and
xor
jno
stos
test
sbb
pop
dec
push
push
lea
mov
mov
cltd
test
push
out
mov
add
lcall
movl
loop
inc
fwait
pop
aas
in
pop
ror
pop
jno
lcall
ret
or
mov
inc
lcall
jmp
sub
popf
inc
arpl
dec
lds
add
inc
pusha
inc
fsubl
lret
arpl
cld
ud1
adc
mov
inc
lcall
adc
loopne
out
inc
lds
xchg
adc
mov
mov
mov
fcoms
inc
dec
jmp
aad
decb
rcll
filds
xor
int
and
sub
in
lahf
dec
fwait
adc
rcll
pop
les
stos
jl
push
xchg
adc
mov
leave
jg
and
add
dec
xchg
adc
dec
pop
inc
or
stos
push
fisttpll
arpl
and
cmp
mov
scas
scas
ss
int
jbe
sbb
lret
push
push
fsubl
mov
insl
xchg
gs
hlt
and
lea
scas
jne
and
mov
repz
nop
adc
cmp
enter
xor
push
int
in
stos
in
inc
adc
dec
sub
mov
mov
addb
fsubrs
das
ret
mov
data16
in
outsb
hlt
mov
xchg
daa
cs
outsb
mov
aaa
lds
out
lcall
in
aas
add
fcomps
push
fwait
mov
das
jle
out
or
dec
daa
mov
mov
cmp
stos
fistps
xor
rcl
jno
mov
shll
fidivrs
sbb
inc
decb
fldl
repnz
js
cmp
cmpsl
jns
data16
outsb
xchg
loop
scas
pop
mov
and
rorb
aas
scas
stc
xor
sub
lret
stos
sub
orl
and
sub
das
dec
mov
shlb
fs
fists
xor
stos
es
xor
jb
mov
adc
push
fisttpl
scas
xor
mov
or
mov
xor
insb
fs
ljmp
adc
mov
dec
shlb
insl
mov
or
push
lods
xor
or
push
xchg
out
cmpsl
jle
mov
push
stos
test
pop
sbb
mov
sub
jno
xor
add
jns
addl
sahf
popa
or
push
add
or
xchg
sub
in
ret
dec
call
fldenv
cmp
sbb
xor
mov
add
lds
adc
stc
lret
or
pop
subb
out
mov
adc
xchg
mov
nop
in
sub
lods
in
xor
stos
lds
aas
mov
mov
std
push
xor
sbb
pop
mov
add
stc
jae
xor
xor
dec
or
dec
call
pop
nop
nop
mov
sbb
stc
sub
cmpsb
lea
xor
popa
out
add
xor
je
inc
ret
inc
sub
dec
sub
movsb
adc
in
cli
scas
or
lret
ret
adc
mov
add
fisttpll
inc
jns
pop
mov
out
pop
cmp
sub
add
dec
mov
adc
sbb
gs
sub
push
fmull
sub
xlat
mulb
push
mov
lea
dec
jle
ds
and
mov
adc
in
sbb
pop
xchg
cmpl
int3
clc
popa
add
cmpsb
cmc
movsb
mov
mov
mov
out
enter
pop
out
int
test
std
test
fwait
adc
mov
out
push
push
xchg
add
xlat
inc
dec
mov
sub
aad
bound
inc
sahf
or
add
mov
inc
fs
add
lock
fidivs
or
fldcw
test
test
arpl
cwtl
push
jge
pslld
rclb
cmp
mov
sbbl
cli
pmulhuw
sub
pop
gs
in
push
or
cmp
repnz
aam
stos
enter
sub
xchg
fcmovnu
orb
cmpsb
push
xchg
fsubl
or
and
mov
das
pop
xor
in
lods
push
jmp
sbbl
pop
out
fwait
pop
int3
test
jmp
pop
mov
pop
pusha
or
fisubl
cltd
inc
add
insl
popa
mov
vpunpckldq
or
in
sbb
lcall
sub
mov
sub
and
dec
jo
cmp
lret
jl
push
rclb
jae
cmpsl
xor
sub
sbb
push
std
xchg
ret
nop
pop
fstps
mov
and
add
shr
and
rorl
aaa
fdivrs
mov
xlat
popf
pop
repz
ja
mov
loope
mov
imul
call
int
add
mov
mov
push
andb
push
jecxz
or
mov
stos
ja
inc
fsub
insl
scas
cs
jb
ret
dec
xchg
call
or
adc
xchg
lret
stos
jge
mov
jmp
sbb
test
fbstp
sbb
sti
jle
pop
adc
iret
pop
outsl
xor
scas
mov
xchg
aam
bound
ljmp
enter
mov
clc
dec
jns
push
fiaddl
mul
pop
mov
jmp
mov
push
shr
sbb
mov
adc
cli
pop
aad
or
stos
pushl
jns
inc
lods
dec
jnp
aam
push
cmp
mov
addr16
int3
hlt
or
lock
hlt
sub
out
pop
cld
lcall
cmp
cmc
arpl
sti
out
inc
mov
in
mov
pop
outsl
and
mov
push
fdivl
cmp
stos
add
dec
mov
cli
in
test
ja
inc
lea
push
mov
fwait
das
pop
loope
or
xor
popf
inc
stos
outsl
pop
inc
insl
shlb
and
in
pop
loop
leave
cmp
add
jecxz
pop
mov
cmc
jmp
ljmp
sub
inc
xor
imul
repz
mov
cmp
pop
and
pop
aas
and
sbb
rcrb
pop
fcmovne
dec
jl
adcb
icebp
jg
nop
pop
lcall
movsb
repz
out
push
sahf
stc
mov
aam
pop
adc
int
and
push
ljmp
lods
push
repnz
stos
ret
xor
insl
mov
or
movsl
or
outsb
dec
inc
mov
cmp
push
lret
push
lea
aam
inc
frstor
jb
test
imulb
hlt
lods
adc
scas
and
pop
push
sub
inc
pop
pop
add
dec
sub
dec
in
pushf
das
sbb
inc
addr16
xor
popf
mov
fistpll
movsb
loope
cmpsl
cmp
lea
jnp
pop
or
sbb
inc
or
gs
mov
dec
sti
ficomps
sub
xchg
out
or
cli
jno
pop
lret
fcmovnb
sub
pusha
stc
loopne
aaa
ds
nop
stos
das
test
dec
cmc
lahf
sub
in
movsb
inc
mov
inc
inc
mov
hlt
shrl
aaa
movsl
fnstcw
pusha
mov
movsl
inc
jno
mov
aas
gs
sub
and
cmpsl
pop
icebp
test
add
flds
mov
shrl
xor
or
pop
cmp
cmp
rol
mov
aaa
jg
ljmp
je
add
in
pop
or
xor
mov
lahf
arpl
dec
mov
scas
aad
and
xor
xchg
jbe
sarl
inc
hlt
inc
lods
ret
push
mov
sbb
repnz
repnz
add
fisttpl
and
xchg
lret
jne
pusha
xlat
add
lcall
cmpsl
sbb
je
mov
in
cmpsl
or
or
pop
fimull
add
adc
and
jp
xchg
in
lret
pusha
cmpsb
xor
dec
insl
bswap
sbb
sbb
aam
in
mov
repnz
bound
lds
mov
or
pop
sbb
sub
sub
or
sub
inc
sub
out
insb
jb
adc
repnz
sti
xchg
call
adc
mov
cmpsl
xchg
add
into
call
sub
jp
adc
push
scas
xor
cmpsb
cmp
stos
rcr
lcall
repnz
xor
ret
jo
insl
aas
sbb
pop
cltd
push
dec
or
mov
lock
sbb
mov
jecxz
ljmp
addr16
fisubs
adc
scas
pop
test
scas
xchg
xchg
dec
sbb
lods
push
jecxz
and
push
add
cmc
jo
ret
add
xchg
and
or
lret
rorb
xor
sahf
sub
sti
add
mov
and
fcompl
add
leave
addr16
mov
and
mov
lods
call
inc
aaa
cmp
adc
inc
enter
outsl
jmp
cwtl
pop
xor
cltd
fldenv
std
jle
pop
sahf
or
jg
repnz
mov
or
ds
pop
xchg
std
inc
or
mov
add
mov
shl
movsb
jne
outsb
in
sub
mov
inc
test
mov
idivl
jle
cmp
hlt
dec
push
xchg
in
sub
add
out
push
inc
xchg
movsb
dec
lods
adc
js
lds
jo
addr16
scas
xor
jl
rcll
leave
pop
add
and
out
pop
ja
aas
and
and
ds
sbb
sub
stos
cmp
jle
inc
psadbw
mov
mov
fistl
mov
xor
neg
sbbl
je
sub
ja
scas
add
push
mov
leave
sarb
in
push
cmc
lods
jecxz
jl
out
pop
shrl
adc
xchg
outsl
fsubrl
push
mov
jo
inc
in
cmpsb
aas
rclb
iret
mov
ds
fisubrs
iret
shll
mov
mov
dec
push
sub
data16
jnp
pusha
fs
mov
jb
cmpsb
jae
inc
test
rcll
sub
test
lahf
cs
push
outsl
mov
sar
push
ret
push
shl
pop
dec
rep
insl
fidivl
inc
ret
aad
js
jge
les
ja
dec
mov
xor
xor
dec
mov
pop
xchg
sub
sbb
stos
add
faddl
jne
ja
mov
mov
setnp
lret
cmp
fcmovnb
inc
push
mov
pop
push
aaa
lret
xchg
loope
sbb
push
push
pop
sbb
mov
xor
mov
adc
mov
aad
mov
data16
call
pop
lret
mov
and
sti
test
xor
insl
loope
movsl
push
push
mov
fiadds
and
in
sbb
mov
insl
sbb
bound
pop
sbb
mov
movsb
pop
mov
jmp
cmp
out
jne
push
or
push
jne
mov
mov
pop
vpcmpgtb
daa
pusha
push
add
fidivs
push
inc
sub
pushf
fisttps
inc
cmp
sbb
ja
mov
push
and
testb
or
mov
sbb
aam
aad
mov
mov
add
fdivrl
cmp
xlat
fcomps
outsl
mov
xchg
out
daa
popf
push
shlb
lods
test
jmp
je
bnd
es
pop
call
push
xchg
fdivs
mov
or
sbb
mov
fstpl
stc
mov
hlt
rcrl
lea
sub
dec
mov
xchg
add
xor
pop
sbb
test
int
pop
out
rorl
or
aaa
xchg
bound
jns
shlb
mov
mov
outsl
jle
dec
out
pop
cs
clc
cmp
dec
push
dec
add
mov
lds
adc
leave
enter
xor
popf
cmpsl
test
stos
in
cmpsb
pop
mov
xchg
jl
ds
jnp
fidivrl
pop
scas
fldt
and
dec
bound
scas
call
ret
mov
push
sbb
lock
pop
inc
sub
push
add
or
xchg
fmulp
into
jo
addb
or
xor
js
insb
insb
icebp
inc
aam
pop
fldl
jne
push
decl
enter
loop
ss
cmp
pop
jno
in
jno
cmp
shlb
enter
imul
push
pushf
xchg
imul
repnz
sbb
les
xchg
int
aas
jns
and
lock
flds
pusha
push
jnp
mov
fmulp
push
stos
and
mov
mov
aas
add
xor
mov
jg
lods
dec
push
aaa
mov
or
xorl
rcrb
jns
mov
mov
popa
std
mov
xlat
mov
or
loop
push
mov
clc
cwtl
sti
sbb
xchg
mov
jecxz
pushf
xor
push
mov
repnz
sub
arpl
cmp
jae
pop
cmp
adc
dec
jecxz
jmp
test
outsl
ss
dec
test
int
ret
lea
add
inc
popf
ja
dec
jae
neg
leave
dec
push
jge
and
and
mov
ss
sub
ret
add
fsubl
mov
lea
cmp
stos
xor
ja
push
cltd
in
into
adc
ret
sub
and
mov
xchg
xchg
testl
and
adc
pop
stos
insl
mov
lcall
sbb
imulb
movsb
pop
push
mov
repnz
mov
jmp
xor
lret
jo
sbb
dec
pop
sbb
cwtl
jo
mov
cmp
dec
ret
ds
mov
add
out
int
cmpsl
stos
sbb
out
lock
lods
cmc
repz
ds
movsl
leave
daa
scas
inc
xchg
xchg
rclb
jnp
outsl
jnp
add
clc
or
and
mov
sbb
push
fidivs
sub
and
pop
jle
dec
push
into
repnz
imul
lea
adc
bound
jbe
or
daa
add
mov
cwtl
jge
cmc
ret
push
icebp
loopne
push
arpl
inc
and
push
loopne
push
pop
popf
clc
test
pop
lahf
cmp
jne
cld
and
outsl
mov
in
testl
and
out
sub
js
cmpsb
lcall
cmp
rorb
js
fistpll
out
pop
lock
movsb
push
mov
jecxz
xlat
dec
lods
test
sub
xor
sti
test
and
ficoms
sbb
xchg
in
mov
fcmovu
pop
dec
fiadds
inc
dec
imul
movsl
call
mov
mov
adc
test
adc
mov
and
inc
data16
loope
mov
loop
jae
outsl
fiadds
enter
mov
cmpsb
inc
mov
dec
mov
aaa
lock
cltd
in
repnz
xorb
out
pop
lods
lahf
add
dec
adc
test
sub
das
cmp
cmp
cmp
lcall
sar
int
inc
in
dec
jno
movsl
scas
pop
adcl
jbe
bound
dec
mov
in
lock
imul
mov
nop
loop
cmove
lret
popa
jo
add
pop
fwait
pop
xchg
and
pop
pop
gs
push
fscale
in
or
cmc
sbb
sbb
icebp
cld
aas
repz
loopne
ss
mov
fstpt
xchg
xchg
sarl
fdivrl
nop
and
out
pop
in
ret
pop
test
jno
add
rolb
test
sbb
fs
mov
or
push
rcrl
push
movsl
push
sbb
ljmp
nop
adc
jge
mov
mov
pop
or
out
xchg
ret
in
sub
stos
add
and
sbb
test
ffreep
jle
mov
sbb
mov
sbb
sbb
sbb
jns
dec
sub
dec
inc
aaa
xor
lods
or
push
add
dec
dec
pop
push
in
pop
fs
jl
jmp
sub
sbb
insb
iret
outsl
adc
out
jb
fs
adc
pushl
dec
sbb
lahf
lret
dec
adc
adc
aad
clc
sub
in
std
push
dec
xchg
gs
js
jb
outsb
push
ret
cli
jo
and
addr16
lods
push
cmp
cmp
add
inc
dec
pop
mov
imul
cmpsl
dec
testb
movsl
lea
jge
adc
out
lock
jnp
push
inc
shl
aas
sbb
sub
add
out
pop
popf
add
xchg
cltd
in
fnstcw
pop
nop
jmp
loope
cmp
or
fdivrs
imul
adc
or
ljmp
lds
and
push
lods
ret
and
mov
inc
xchg
xchg
cmp
arpl
aad
rep
in
lret
add
cmpsl
push
lret
sub
add
shll
pop
jbe
or
sub
dec
jo
daa
xor
addr16
into
je
loope
test
xor
rorl
dec
jns
xchg
or
add
mov
mov
test
adc
add
fisttps
push
push
mov
jne
pop
xchg
add
or
jno
mov
push
scas
aaa
push
cmpb
shrl
aam
sub
fldenv
mov
roll
pop
sbb
mov
stos
fisttps
insb
cmp
fidivs
aas
loope
ds
std
aam
fiadds
mov
arpl
xchg
or
das
inc
jg
rorb
loopne
imul
push
push
pop
sbb
or
icebp
mov
push
pop
jecxz
xor
xchg
int3
rol
or
pop
icebp
fsubr
imul
cmc
movsl
push
sbb
sbb
pop
and
mov
xchg
pusha
jge
test
push
int3
adc
and
or
and
jae
or
mov
lcall
pop
jb
and
je
scas
jae
scas
aaa
sub
adc
inc
jno
pop
in
pop
xor
mov
pop
cld
lods
dec
sub
aaa
stc
cmp
xor
repz
daa
jno
testl
adc
shll
int
lea
xchg
lds
je
stc
decl
jl
mov
add
bnd
aaa
sahf
nop
pop
mov
es
ret
mov
cmpsl
jp
pop
repz
add
jbe
mov
inc
out
out
repz
mov
ud1
mov
add
push
shll
and
pop
imul
xchg
out
jecxz
dec
cmp
xor
adc
push
cwtl
lds
stos
inc
gs
pop
or
jne
xor
inc
in
inc
pop
shlb
jnp
sbb
das
enter
into
call
je
inc
stos
fsubrl
movsl
pusha
sbb
cwtl
mulb
es
sub
pop
cld
jmp
pop
bound
sti
in
rcll
add
enter
xchg
insl
movsb
incb
out
imul
clc
insb
stc
addr16
pusha
mov
rclb
push
test
movsl
es
sbb
mov
pop
aad
push
push
mov
jb
je
fidivs
push
mov
mov
or
lcall
sbbl
mov
arpl
cmp
push
sbb
outsl
sub
cmp
sbb
fsubrs
nop
sbb
inc
call
adc
pop
ljmp
jmp
loop
in
and
pop
dec
sbb
outsl
mov
jg
nop
js
fwait
jnp
shr
or
dec
mov
testb
cmp
push
imul
jns
out
xchg
or
lea
xor
add
adc
jg
push
jb
add
cs
cmp
aam
mov
mov
mov
ret
add
clc
sbb
xchg
cli
mov
in
push
sub
rol
gs
cmp
sub
daa
inc
xchg
sahf
aad
jl
xor
xchg
sub
scas
dec
or
jg
adcb
in
push
ds
adc
mov
mov
js
inc
add
add
jnp
in
dec
xor
orb
mov
icebp
mov
inc
add
enter
rcrl
cmc
add
ss
ret
div
xchg
lea
fidivrl
in
mov
popa
data16
mov
push
movsb
imul
dec
push
mov
sti
daa
cmpsl
js
and
mov
pop
fildl
pop
mov
dec
test
rorl
push
mov
subl
dec
adcl
and
cmp
cmp
ljmp
int3
repnz
loopne
test
in
sbb
hlt
adc
sbbl
adc
ja
mov
jnp
pop
add
scas
fwait
dec
movsb
sarl
sahf
aad
test
sbb
or
lahf
xchg
fsub
rcrl
dec
dec
in
xor
dec
jge
mov
cmp
sahf
jl
out
pusha
and
fdivrs
ficoml
in
cmp
pushl
mov
cmpl
xlat
inc
sti
add
out
iret
ja
dec
ret
ficoml
sbb
jmp
pushf
cmp
ja
mov
cld
cmpsb
fcos
hlt
mov
repz
and
insl
mov
mov
push
dec
lcall
lods
inc
pop
or
mov
rcrl
push
insb
div
lea
push
fdivs
push
test
shlb
lahf
adc
sbb
or
orps
loop
mov
jnp
ret
jno
cld
mov
fiadds
mov
out
and
addr16
pushf
pop
dec
push
shlb
out
loopne
xorb
pop
mov
xor
std
xor
imul
and
dec
lods
rorb
mov
add
movsl
sbb
xchg
rol
stc
push
adc
push
jns
orl
mov
sub
inc
add
jmp
sub
mov
stc
cmp
mov
inc
mov
rclb
sub
cmpsl
and
and
fsubrl
pop
or
dec
pop
insl
leave
or
fcomip
cmp
pusha
ja
and
xor
int3
cmp
bound
push
inc
int
hlt
jle
outsb
sub
lret
fwait
jle
fbld
sbb
xchg
adc
inc
sti
sub
and
sbbb
test
insl
cmp
in
cmp
jge
sbb
adc
push
add
or
filds
push
orb
aas
pop
push
fcomip
mov
fwait
hlt
dec
sbb
dec
dec
adc
and
push
stos
pop
pusha
rcll
push
fistl
jmp
push
push
arpl
mov
movsb
pop
mov
inc
lds
test
mov
test
insl
insl
fldenv
dec
push
jg
inc
aas
shl
roll
call
mov
dec
pop
push
mov
ds
inc
inc
cmc
out
sub
and
stos
addb
outsb
inc
or
xchg
movsb
ja
stos
dec
inc
mov
and
sbb
and
mov
and
cmp
stos
add
mov
jle
pop
fdivr
sub
pop
cmpsl
sahf
mov
fisubs
mov
outsl
inc
dec
lcall
cmpsb
ja
cld
aaa
xor
jge
movsl
xor
sbbl
insb
cmpsb
mov
inc
xor
xor
mov
js
xor
test
shl
repnz
mov
repnz
int3
loope
ret
rolb
aad
shrl
mov
jae
jae
sarb
lods
push
jns,pt
fmuls
loopne
inc
push
fildl
mov
outsb
xchg
add
push
arpl
inc
hlt
movsl
test
mov
or
aas
jmp
ret
sti
sub
stos
cltd
fcoms
adcb
sub
push
aam
xor
or
cmp
imul
sbb
arpl
mov
adc
ret
imul
pop
push
mov
addr16
cmpsb
sbb
cli
xor
and
mov
mov
insl
xor
xlat
jo
cmpsl
cmpsb
mov
stc
jae
clc
xchg
mov
inc
pop
mov
or
lods
xchg
dec
push
push
addl
lds
jae
sub
push
fnstcw
movb
xchg
enter
mov
mov
sbb
pop
in
das
lea
ret
add
leave
mov
js
adc
movsb
sub
repz
and
or
xor
ds
scas
movsb
test
sub
scas
mov
fildl
int3
lock
mov
or
out
gs
jne
and
pusha
aaa
dec
push
ljmp
adc
xchg
or
mov
pop
xor
dec
and
push
test
int3
adc
mov
outsb
cmpsb
pop
je
sti
aas
clc
int
int
jb
push
and
cmp
mov
xor
pop
sbb
dec
aam
mov
jno
add
jg
lahf
imul
out
sbbb
into
aam
dec
lahf
xchg
cmp
fdivrs
lcall
pushf
add
dec
inc
push
popl
popa
movsl
loop
rcrb
les
roll
sbb
in
cmc
and
ficoms
out
call
inc
xchg
xor
outsl
dec
dec
dec
sbb
mov
push
jns
jecxz
sbb
xchg
xchg
add
cli
push
xlat
data16
xchg
jo
inc
pop
adc
jg
sbb
mov
sahf
shl
mov
push
aad
cli
mov
aad
xchg
mov
mov
add
lods
xchg
push
sbb
push
enter
les
mov
lahf
cmp
pushf
cli
in
sub
mov
push
mov
out
js
aaa
adc
lcall
mov
into
jne
addr16
cmp
inc
push
jle
add
icebp
les
push
jb
jns
pop
shl
push
sub
xor
xchg
xor
mov
lods
mov
std
push
hlt
cld
rorl
adc
iret
and
sub
dec
in
xor
pop
cli
add
or
addb
shlb
scas
cmp
sbb
inc
push
idivl
mov
mov
pop
cmp
pusha
xchg
call
out
andl
mov
fstpl
and
sbb
cmc
dec
movsb
repnz
jmp
sbb
aam
pop
adc
std
xlat
push
outsb
pop
in
jae
jo
ss
inc
fsts
xor
jmp
in
cltd
mov
pop
mov
cmp
mov
dec
rcll
cmpsl
or
enter
cmc
mov
sub
rcr
ror
clc
ja
mov
sahf
or
mov
inc
push
sbb
sub
inc
xor
pop
in
aas
scas
testb
int
repz
mov
dec
inc
add
and
mov
fsubs
sbb
pushf
xor
jnp
in
mov
ss
xchg
mov
fnstcw
push
out
cmp
sub
lret
jb
mov
sbb
cmpsl
xor
stos
hlt
je
jg
ljmp
mov
ret
lock
clc
and
and
rcl
icebp
sub
nop
mov
daa
push
inc
jp
jbe
or
mov
mov
mov
mov
mov
sub
inc
jnp
je
sbbb
mov
and
ret
jle
adc
or
movsl
arpl
dec
outsb
inc
adc
scas
clc
fnsave
mov
jecxz
mov
outsl
bnd
adc
dec
pop
pop
sbb
aam
pushf
inc
mov
jns
jno
dec
jp
xlat
imul
mov
push
mov
xchg
imul
aas
xrelease
sub
enter
int3
fisubrs
daa
mov
ss
inc
rcl
inc
rclb
icebp
lods
mov
inc
daa
inc
popf
outsb
je
out
fcmovu
test
gs
movsl
enter
adc
cmp
mov
clc
sub
add
jbe
stos
lods
mov
mov
je
ss
push
popf
lret
add
mov
dec
test
call
fsubrp
std
inc
repz
daa
xchg
mov
inc
rorl
sub
cmp
mov
sarl
test
xor
rcrl
mov
lods
dec
jnp
fsubrl
je
mov
repnz
add
ds
push
fcomps
in
pop
jge
push
mov
cmpsb
movsb
mov
rol
les
sti
sub
dec
sbb
jp
arpl
dec
je
and
enter
push
movsl
popf
xchg
rolb
sti
inc
aad
lahf
pop
push
scas
mov
xchg
inc
mov
sub
mov
fsubs
pop
and
push
mov
sbb
xchg
and
mov
mov
push
es
xchg
ret
cmc
xchg
cmpsb
int3
cmpsb
lret
jecxz
divl
xor
lock
enter
fs
cmpsb
xchg
insl
hlt
xor
insb
fidivs
mov
sub
cs
xlat
mov
dec
aam
cmp
cmp
aaa
dec
xor
and
or
xchg
sub
xchg
fisubrs
lret
addb
das
pushf
testl
pop
shlb
adc
xor
in
mov
push
stc
jge
icebp
arpl
sub
sub
outsl
incb
xchg
xchg
mov
xchg
repz
movsb
dec
lock
js
adc
das
int
movsl
fisubrs
cmp
stos
hlt
push
cmp
xor
or
jecxz
cmp
rol
pushf
shrl
jb
aam
push
lcall
cmc
push
jae
mov
lock
ret
aas
dec
sbb
xorb
push
inc
cmc
mov
idivl
out
mov
adc
cmpsb
adc
das
jmp
mov
jmp
int3
nop
lea
shl
scas
xchg
scas
push
les
mov
clc
add
mov
cs
mov
dec
xor
xor
push
jae
int
pop
mov
add
loopne
lods
sarl
pop
xchg
sub
mov
adc
cmpsb
push
fwait
or
push
loopne
cld
aam
cmpsb
stos
xchg
mov
rcr
cmp
leave
mov
in
scas
add
xchg
cli
mov
cmp
loopne
daa
push
lret
xor
test
lea
sarl
data16
test
mov
cmp
outsb
in
fcoml
loope
out
inc
aas
mov
test
lods
inc
icebp
lods
test
nop
hlt
vmovhps
xchg
stos
daa
xchg
add
xchg
mov
sahf
int3
pop
cmp
fidivrs
ljmp
in
sub
out
subb
adc
sti
jae
popf
lret
dec
pushf
out
lods
repz
xchg
jo
dec
pop
cli
dec
mov
insl
popa
test
testb
mov
and
fdivp
loopne
jo
xor
outsb
pop
push
mov
scas
push
adc
shl
mov
xchg
xlat
mov
fistps
popa
xor
nop
jno
loop
or
stc
les
adc
adc
fiadds
sbb
repz
stos
xchg
imul
xchg
fstl
inc
mov
adc
dec
cmpsb
add
js
das
push
sbb
jle
adc
das
fiaddl
mov
mov
pop
push
mov
fiadds
adc
stos
sbb
outsb
mov
imull
push
scas
fmuls
or
incl
cmp
in
fadds
jb
fstpl
enter
js
add
xor
dec
adc
insb
push
dec
xchg
lcall
js
xchg
into
cmp
jge
jp
jecxz
test
test
testb
cli
ffree
insl
mov
stos
xchg
cmp
mov
xchg
lret
into
dec
add
pop
inc
outsb
sbb
testb
jp
push
mov
mov
test
add
hlt
pop
pushf
pop
push
mov
adc
mov
jae
fs
sbb
sub
dec
add
push
and
hlt
insb
les
xor
adc
xor
push
jne
out
and
out
mov
xchg
shrb
dec
fs
mov
jge
xor
mov
iret
xor
jbe
rorl
push
and
cmp
push
insb
ja
and
das
ret
push
push
jmp
dec
insl
testb
mov
cmp
push
inc
ja
gs
fldt
inc
inc
loope
mov
icebp
push
add
mov
push
xchg
fwait
in
jne
and
jae
adc
adc
push
in
push
sub
std
mov
and
xor
fldl
sub
testl
cli
daa
jnp
jno
pop
mov
cmp
xor
xlat
jl
pop
lcall
mov
and
jb
cmp
and
inc
pop
cmc
shl
add
repnz
mov
icebp
iret
repnz
push
into
leave
icebp
test
cmpb
inc
xchg
cli
iret
pop
and
xchg
push
pop
fstps
mov
jne
mov
pop
cltd
push
mov
int
insb
pop
xor
lret
inc
aaa
mov
cmp
subb
pop
mov
lods
imul
push
sbb
sub
dec
push
cmp
or
outsb
sub
xor
jecxz
pushf
xor
jno
dec
clc
bound
or
pop
push
sbb
add
pop
mov
push
or
pop
mov
jmp
fistps
arpl
jmp
sub
shll
lcall
sbb
push
sub
and
sbb
sub
pop
xchg
sub
pushl
mov
imul
stos
mov
out
lea
or
add
push
pushf
int3
add
sar
jle
imul
inc
xor
fxch
ss
ret
xor
sbb
jmp
fcmovu
mov
icebp
mov
push
xor
cmp
mov
test
mov
xor
lds
dec
push
cmc
and
out
inc
pop
adc
xchg
push
inc
call
push
xchg
mov
sbb
mov
in
fwait
hlt
std
xchg
filds
mov
mov
bound
jmp
inc
into
xor
sahf
adc
incb
or
mov
push
jl
repz
mov
add
ret
xor
out
inc
push
movb
dec
mov
xchg
dec
add
stos
js
and
mov
gs
or
ret
mov
push
sbb
outsb
cmpsl
dec
sahf
push
addl
pop
push
fbld
pop
les
inc
icebp
mov
jecxz
cltd
cmp
aas
sub
stos
inc
xor
xor
es
cmp
add
fcoms
mov
sbb
lret
enter
mov
and
shrb
xchg
lcall
imul
aaa
jl
push
insb
mov
add
inc
lret
pcmpgtd
cmp
mov
das
mov
pop
inc
test
pop
jbe
pop
or
and
inc
or
sub
mov
sub
adc
ret
pop
icebp
out
xchg
lahf
je
xlat
pusha
ss
mov
lahf
fidivl
add
xor
stos
sub
mov
and
sahf
mov
aas
aaa
rcll
cmp
in
cli
xor
enter
call
jb
scas
ret
imul
and
cmp
and
repnz
dec
cmpsb
ret
push
enter
cmc
movsl
movsl
out
scas
sbbb
inc
mov
inc
lods
jno
popa
sbb
push
repnz
ret
cmc
jne
and
pop
iret
xor
rclb
rclb
imul
out
mov
sbb
repz
enter
loop
sbb
push
imul
xchg
mov
pop
sti
and
dec
lret
shll
push
lods
jg
xor
push
add
jmp
out
push
xchg
ret
mov
jmp
fisubl
cmc
add
lock
push
ret
mov
lahf
or
xchg
cmp
add
dec
lcall
test
cmp
js
adc
and
imul
iret
insb
in
mov
ret
adc
inc
or
shrb
roll
cmpsl
out
insl
jbe
pop
ficoml
jae
negb
pop
mull
into
xchg
or
imul
pop
push
mov
inc
pop
fmul
or
test
mov
icebp
xchg
subb
jnp
add
lret
out
repz
inc
pop
stos
lds
enter
filds
and
pop
mov
sub
xchg
test
and
mov
lcall
xlat
and
sub
xchg
ljmp
adc
inc
pop
js
fistpl
bswap
jns
fbstp
add
lahf
push
in
mov
sub
cld
add
xor
push
test
lret
repz
mov
fmuls
test
iret
stc
sbb
mov
sbb
xor
stc
jns
ds
hlt
loopne
ficompl
add
imul
pop
daa
sbb
fwait
or
xor
xor
push
dec
or
mov
fnsave
cmpsb
mov
icebp
rorl
sub
iret
imul
addl
mov
int
mov
jle
clc
fadds
sbb
push
pop
mov
fbld
mov
loopne
test
xor
push
or
cmp
dec
je
lret
adc
adcb
sub
and
movsb
scas
pop
mov
sub
and
mov
adc
inc
jnp
sub
es
mov
inc
inc
test
push
adc
out
andl
mov
not
add
jno
test
dec
or
mov
xor
dec
popf
cltd
or
jge
shlb
mov
inc
sub
ja
sahf
rorb
mov
mov
xor
xor
shlb
test
ss
jnp
testb
sub
mov
mov
outsl
mov
dec
dec
repz
jns
rolb
adc
subb
or
es
jo
cmpsb
cmc
mov
gs
and
test
fwait
or
push
mov
outsl
nop
lock
lds
fdiv
jecxz
cmp
dec
pop
out
das
xchg
mov
pop
jge
cmc
out
sbb
or
ret
repz
loope,pt
or
xlat
cmp
add
es
cmp
sbb
jbe
call
pop
xchg
idivl
out
mov
rcrl
pop
iret
xchg
jmp
jbe
inc
dec
cmovle
in
in
xlat
scas
insl
subl
push
ds
pop
xchg
in
insl
cltd
dec
push
xchg
fistl
ljmp
std
add
in
push
mov
pushf
jnp
or
cmp
cld
cmp
mov
fucomi
inc
shl
rol
aaa
cmp
mov
xchg
js
out
aad
sub
jmp
sub
sub
mov
ss
lock
add
out
loope
mov
out
mov
cmp
stc
rcrb
push
cli
mov
cmp
dec
js
jg
data16
out
sbb
enter
outsl
lock
sbb
int
pop
cmpsl
jl
repnz
jae
addr16
or
insb
pushf
lods
or
sbb
sti
mov
jno
mull
cli
lret
cmpsl
push
or
xor
dec
arpl
data16
jo
aas
enter
pop
mov
repz
and
jne
cmpsb
in
push
mov
jne
loope
jmp
jmp
pop
add
in
imul
xor
mov
lds
orb
aam
dec
shll
int3
repz
adc
xchg
dec
push
mov
push
adc
xchg
mov
add
fwait
jp
sbb
mov
cmp
hlt
in
xchg
ss
fnstenv
aam
dec
sti
jne
mov
xchg
orb
jbe
xchg
sub
orl
pop
cmp
dec
jmp
mov
mov
js
cmp
xor
cltd
push
add
and
daa
repnz
pop
dec
pusha
cmpsb
sub
test
and
sbb
jecxz
jmp
sbb
std
aas
movsl
sbb
push
outsb
and
dec
lds
mov
leave
lea
fwait
in
jl
mov
in
aas
inc
inc
push
movl
fstp
mov
std
sub
mov
jb
adc
and
jl,pn
hlt
das
sub
inc
lock
adc
mov
sar
mov
cmp
xchg
andl
rcr
daa
fs
jo
in
push
or
cmp
cli
add
cmp
push
jge
push
cld
adc
test
int
and
mov
and
outsl
into
mov
mov
push
inc
inc
in
xchg
out
das
notb
daa
insl
sbb
push
mov
out
cld
popa
cltd
movsb
mov
fxch
fsub
rclb
xor
call
push
js
mov
jg
jp
pop
sarl
xor
mov
js
xor
cwtl
pop
scas
arpl
fldenv
sahf
xchg
pop
loop
push
mov
push
test
lds
mov
imul
pop
cmp
pop
in
inc
and
xlat
xchg
mov
out
subl
scas
jecxz
cmp
mov
insb
add
pop
pop
pop
lea
dec
dec
and
push
push
int3
jb
xchg
mov
nop
aad
out
fbld
cmp
dec
cmp
xchg
nop
shll
iret
dec
mov
scas
pop
popw
xchg
and
test
dec
lcall
pop
jne
adc
clc
enter
cmpl
add
xor
pop
inc
ret
cwtl
cmp
movl
das
imul
cmp
sti
cmpsb
jmp
inc
ljmp
add
push
xor
cmp
xchg
dec
pop
jg
andb
in
and
lret
mov
sub
inc
sbb
bound
out
push
cmpsb
rorl
outsl
jp
push
std
pop
test
mov
stos
jl
xchg
les
push
stos
jg
lock
dec
ja
sbb
and
stc
xor
mov
fstpt
cmp
movsb
pushf
leave
iret
imul
mov
push
rorl
mov
or
mov
pop
clc
popa
sahf
pop
rclb
imul
mov
imull
cwtl
mov
pop
mov
adc
sti
jle
mov
sbbl
out
test
dec
or
leave
sub
xor
sti
jne
xchg
test
mov
loope
pop
cltd
and
sub
mov
dec
out
jmp
add
dec
sahf
mov
movsb
addr16
cmp
inc
les
mov
xor
xchg
divb
popf
pop
sub
pushw
add
sbb
sti
mov
push
jbe
cmp
mov
ffreep
aam
fnstsw
adc
push
sub
and
clc
cmpsl
cs
lahf
and
dec
std
fcomi
test
popf
repz
cld
inc
sub
fucomip
jg
call
stos
mov
outsb
or
in
xchg
test
mov
outsb
test
xchg
dec
mov
push
mulb
mov
int3
push
test
fsub
cmp
addr16
mov
inc
cmc
dec
or
or
mov
rcll
lds
mov
imul
or
jmp
call
movsl
addb
mov
xchg
mov
repz
cmc
sar
xchg
inc
repz
lods
je
insb
dec
rorb
les
rorl
frstor
test
iret
jns
cmpsl
inc
and
mov
sub
imul
xor
testb
and
fwait
aad
in
mov
lock
and
adc
xor
sti
and
pushf
mov
push
xor
imull
jbe
mov
lock
insl
stc
xchg
jmp
pop
fstl
jmp
lret
ljmp
xchg
pop
lret
es
mov
inc
mov
and
add
psubb
push
xor
sbb
sbb
mov
pop
jmp
jge
sub
mov
sbb
fisttpll
jb
and
rolb
ljmp
push
sbb
inc
push
pop
sbb
mov
ds
jae
js
in
cmpsb
jbe
lods
outsb
repz
mov
lods
lret
stos
adc
cld
loopne
negb
sbb
test
fldl
xchg
lods
adc
xorl
repz
pop
wrmsr
pop
mov
fnsave
xchg
adc
in
pop
cmp
aam
loope
mov
xor
push
aad
loopne
xchg
sbb
mov
jnp
imul
dec
push
xor
cmp
xchg
lret
push
push
add
roll
adcl
cmp
sub
outsb
adc
into
inc
jno
mov
and
add
jnp
mov
dec
mov
and
jle
add
fsubrl
cmp
fdiv
mov
cli
cmp
add
mov
icebp
insb
or
movsl
fs
cmp
jecxz
or
xorl
mov
outsb
mov
push
pop
fnstsw
punpckhdq
aaa
or
out
jecxz
sub
mov
adcb
mov
cs
lcall
das
cmp
inc
add
int3
add
or
mov
shlb
inc
jns
stc
stos
das
movsb
mov
fldenv
mov
test
add
and
inc
inc
das
mov
dec
into
sub
sub
xchg
clc
xor
pop
imul
lea
es
push
lret
dec
pop
jno
shl
frstor
in
inc
ret
inc
mov
or
pusha
stc
les
lock
aad
push
mov
mov
out
ja
int3
pop
push
out
xor
jb
aam
mov
in
mov
pop
subl
inc
add
cmc
mov
fdivr
out
in
clc
fnstsw
xor
mov
fnstsw
pusha
lock
int3
adc
out
rolb
and
inc
std
repnz
loop
and
jnp
xor
pop
pop
fnsave
jmp
xor
jne
xchg
jle
cmp
inc
add
jmp
pop
inc
inc
cmp
xchg
enter
call
fidivrl
imul
inc
test
add
icebp
popf
xchg
add
lret
in
adc
scas
jns
pop
les
bound
into
push
rcll
hlt
lods
stos
adc
xchg
sbb
enter
jno
mov
fidivs
xor
add
xchg
aas
shll
xor
mov
arpl
addl
xor
dec
loope
mov
loope
test
adc
outsb
mov
sbb
mov
and
fs
push
or
mov
cmpl
jnp
je
add
bound
cmc
jae
dec
mov
xor
cmp
mov
inc
xchg
cwtl
loope
loopne
lahf
sub
push
dec
mov
pop
xchg
adc
repnz
mov
jbe
das
mov
jmp
and
call
cli
insb
outsb
xchg
pushf
sbb
pop
push
push
mov
cmpl
pop
je
lret
add
xorb
repz
and
push
inc
imul
mov
mov
sahf
push
nop
pushf
push
stos
repz
adc
out
mov
stc
pop
frstor
mov
into
fwait
mov
dec
cmp
fwait
sub
ret
xchg
push
imul
gs
and
sub
aad
jno
shrd
add
inc
mov
mov
cmpsb
pop
push
dec
sbb
roll
mov
jnp
xchg
and
jl
sahf
cmp
movb
xchg
dec
repnz
and
and
divw
sub
lahf
jo
cld
xchg
inc
mov
and
sub
rorl
or
mov
pop
pushf
push
mov
sbb
in
cltd
fldl
dec
xchg
enter
mov
ret
sbb
loop
sahf
xor
xor
push
js
xchg
lea
cmp
jnp
jp
push
leave
call
iret
stos
sbb
pop
cmp
ss
push
and
test
lock
or
pop
xchg
es
mov
push
fbstp
jo
in
pop
loope
mov
or
mov
insl
call
lret
xchg
pop
pop
pop
xor
repnz
xchg
cwtl
jbe
or
push
xor
pop
js
aaa
sub
cmp
inc
cmp
xor
in
repnz
cltd
jmp
mov
cmp
scas
or
mov
jl
sub
sub
jns
rolb
in
jne
dec
rolb
rcrb
mov
jno
pop
xchg
inc
sbb
dec
insl
fwait
in
fsubl
scas
clc
mov
test
inc
inc
or
orl
sub
icebp
into
mov
xor
mov
test
mov
scas
add
mov
jno
jp
xchg
ficompl
mov
mov
or
fists
shll
xorb
mov
ja
sub
sbb
rclb
pop
sbb
mov
cmpsl
aaa
testl
inc
push
hlt
imul
lods
cmp
pop
sub
mov
insb
cld
push
fwait
movsb
xchg
or
aam
and
ds
out
shll
enter
mov
aaa
mov
xchg
mov
sbb
adc
or
mov
mov
xchg
out
dec
addr16
test
mov
mov
ret
xor
adc
test
sub
jbe
sub
mov
loop
mul
inc
lds
out
push
rcrb
rcrl
cwtl
or
out
shll
sbb
leave
std
pop
push
push
lods
call
sub
jo
rolb
inc
mov
outsb
inc
push
mov
jl
adcl
pop
js
cwtl
push
xor
cmp
mov
std
jbe
testl
cmp
outsl
mov
inc
les
push
lock
adc
icebp
out
rolb
sahf
bound
mov
nop
or
mov
and
dec
nop
xchg
lods
aas
incb
nop
stos
mov
adc
mov
cmp
outsb
repnz
jb
outsb
adc
and
xchg
jnp
push
es
xorb
cmpsl
cmp
aaa
dec
movsl
sub
xor
xor
xor
dec
popf
ss
lea
mov
jo
jg
leave
scas
pop
call
cmp
mov
setge
scas
jbe
pop
sub
out
adcb
repnz
clc
pop
xchg
mov
jg
arpl
sbb
out
leave
out
xchg
jmp
adc
fcomp
and
loope
loop
cmpsl
cli
popl
aam
add
or
jl
jbe
xchg
push
dec
insb
out
lret
rcpps
xor
aaa
fstps
mov
lds
out
adc
jle
loop
jl
in
add
scas
stos
cmpsb
je
xchg
popa
push
mov
stos
int3
lock
daa
push
lahf
pop
ficomps
or
adc
mov
push
adc
js
adc
popf
enter
scas
clts
lea
or
into
daa
jno
out
and
xor
sbb
cmp
jo
xlat
push
cmpsb
fsubrs
mov
jno
cwtl
scas
das
push
sbb
lahf
aam
and
loope
lea
repnz
ss
dec
xor
daa
mov
lcall
addr16
ja
sub
imul
adc
fistpll
xchg
jge
cmp
adc
mov
pusha
mov
ja
adc
mov
mov
mov
shll
movsb
into
xlat
rorl
test
cmp
adc
xchg
lcall
cmpsb
rcrl
inc
in
or
fwait
test
loop
mov
or
imul
pop
lret
pop
jnp
push
sub
out
movsb
imul
mov
roll
sahf
cmp
test
int3
out
mov
les
scas
inc
notb
mov
xor
mov
jne
sbb
repz
shrl
xlat
xor
jnp
inc
xchg
test
subb
push
popa
sbb
add
fists
mov
and
imul
and
pop
aas
pop
add
pop
jae
mov
cmp
xor
hlt
insl
jp
jae
ja
add
outsb
ret
mov
pop
roll
cmc
ret
jns
int
jge
cmpsl
mov
fdivrs
cmp
stos
fbstp
jnp
clc
push
aam
add
jle
mov
xchg
jg
ja
jne
push
sti
xchg
repz
xlat
jg
mov
pop
xchg
addr16
bound
orb
lahf
fistps
adc
mov
sub
sub
xchg
aam
and
es
push
jp
jp
sti
and
aam
add
movsl
in
cmc
into
hlt
xor
scas
xchg
std
sub
sub
sbb
jnp
jno
jg
rcrl
pusha
xchg
and
mov
cmp
mull
sbb
out
gs
rcr
das
cmp
mov
outsl
movsl
ljmp
jecxz
cs
lret
mov
push
push
shll
pop
xchg
popf
add
xor
cmp
sbb
and
ja
rorl
pop
insb
add
andb
ja
movsb
mov
sub
jb
mov
xchg
rcrb
sub
fsub
dec
inc
out
loopne
pop
jl
sbb
jae
sub
sbb
or
xorb
mov
test
and
adc
data16
adc
test
out
aaa
repz
jle
jns
lcall
std
mov
lret
push
ret
inc
cmp
pop
js
sarl
sti
inc
jge
sub
insl
cmp
in
mov
in
add
or
push
out
xlat
in
fwait
es
pop
jns
mov
sbb
bnd
jbe
push
push
mov
icebp
loop
mov
jno
out
addr16
or
mov
in
add
repz
test
mov
cwtl
xor
adc
popf
or
push
lcall
pop
fdivs
pop
sti
and
in
xchg
pop
jb
push
mov
sbb
or
xchg
pop
mov
pusha
arpl
testb
and
push
mov
popa
adcb
sbbl
mov
jge
je
inc
adc
andb
push
sbb
fwait
in
jl
ljmp
mov
jbe
pop
test
cmp
jge
cmp
leave
arpl
fs
popf
push
inc
mov
sbb
rolb
pop
and
imul
rcrl
ja
cmp
clc
call
push
push
cmp
out
je
aam
ret
sahf
add
popa
shlb
xchg
pop
sti
shlb
xor
fistl
neg
jns
mov
gs
lcall
jle
mov
jp
cmp
xor
jmp
adc
jae
popa
out
add
adc
xchg
in
lcall
test
jecxz
inc
sbb
pop
add
add
or
dec
notl
sub
sbb
adc
sbb
dec
call
jge
jnp
sysexit
mov
stc
xor
sahf
and
ret
outsb
push
pushf
pop
push
aam
mov
pusha
mov
enter
and
mov
cmp
enter
nop
or
stc
mov
jmp
xor
std
dec
pop
mov
fdivrs
push
ret
xor
pusha
call
stos
repz
fidivrs
jmp
mov
es
inc
jb
movsl
mov
add
sub
fs
push
shrb
cmp
mov
es
mov
pop
sahf
in
mov
adc
xlat
scas
sbb
and
jnp
pop
push
push
daa
mov
sbb
aaa
loopne
jbe
insl
push
pop
loope
mov
cwtl
je
int
sbb
jae
or
out
jl
mov
sbb
ljmp
into
mov
ljmp
jl
adc
iret
jbe
cmp
iret
mov
scas
and
dec
mov
mov
push
mov
cmpb
sub
out
addr16
jp
xor
test
xchg
mov
int3
loopne
stos
sbb
adc
sbbl
add
cwtl
mov
add
es
xchg
arpl
loope
add
aad
hlt
popf
inc
test
xchg
push
int
push
inc
negl
cmpsl
pop
and
xor
icebp
in
std
mov
or
add
xor
ret
les
insb
sbb
lds
shl
or
pusha
inc
add
pushl
in
and
mov
push
lea
pop
lods
sarl
insb
icebp
xchg
popf
rolb
push
jae
jb
add
xlat
inc
lret
xor
dec
sub
ret
or
jns
push
mov
out
popa
cmp
xor
inc
jae
lret
mov
and
mov
popf
inc
mov
jae
int3
dec
mov
pusha
lahf
ds
and
aam
in
ss
dec
sub
xlat
adc
cs
imul
mov
jb
subl
jns
mov
adc
int3
insl
in
push
mov
stos
inc
add
ja
jne,pn
inc
bound
sub
in
and
rcll
mov
sbb
orl
push
xchg
gs
or
insl
cwtl
cmpsl
test
push
mov
sub
nop
jl
jb
mov
and
loope
pop
adc
je
or
jbe
scas
push
xlat
in
jnp
repz
pop
push
clc
sbb
xchg
sub
fs
ljmp
test
lcall
jecxz
inc
adc
jne
daa
test
cmpsl
mov
inc
cmpsb
in
sub
aad
xchg
stos
clc
xchg
stc
sbb
pop
out
and
lods
pushf
insb
mov
push
loope
jge
mov
sbb
xorb
dec
pop
lret
fwait
inc
jnp
or
stc
scas
xchg
adc
inc
cli
les
mov
jb
pop
fwait
cli
aad
jo
lock
dec
scas
sarb
pop
js
iret
scas
push
push
ljmp
das
rorb
jae
push
cltd
call
pop
insb
mov
leave
pop
jno
mov
cmp
aaa
push
imul
int3
mov
add
std
jp
test
xchg
push
sbb
or
jle
test
mov
jno
dec
hlt
adc
out
ljmp
jmp
lahf
sarb
add
pop
icebp
lret
xor
ficompl
xor
dec
aam
push
mov
sbb
mov
mov
aas
stos
sti
mov
es
jbe
and
and
xor
mov
mov
in
xchg
pusha
or
mov
insl
adc
xchg
mov
inc
test
fs
shrl
push
sub
push
jge
mov
loopne
mov
mov
frstor
mov
cmpsl
or
jmp
push
lahf
mov
aad
sahf
fists
ljmp
nop
dec
ja
in
aad
cwtl
fsubl
cld
mov
sub
inc
add
push
xchg
cmp
dec
add
cld
jecxz
call
sti
jle
cmpsb
test
stos
bound
cli
std
cmp
xchg
popf
in
xor
decb
mov
je
add
inc
and
xor
push
repnz
fisttps
pop
mov
xor
aas
aaa
adc
repnz
add
lret
loope
mov
add
out
push
xor
das
and
dec
cmpsb
xchg
cmp
in
mov
push
inc
les
cmc
mov
mov
xchg
loopne
mov
push
clc
jb
repnz
cli
jne
dec
fdivrl
sub
mov
fsubrl
inc
sbbl
rcrl
ja
cwtl
sahf
movsb
mov
fsubs
and
addr16
dec
cli
add
dec
add
adc
push
movsl
adc
lahf
and
sub
and
jno
int
mov
push
sahf
jnp
or
lea
xor
jno
xchg
jo
std
xor
push
test
outsb
sub
rorl
fstpt
pop
jns
outsl
xchg
adcl
lock
sub
push
push
jg
in
inc
insl
arpl
addr16
or
pop
scas
jmp
push
mov
dec
and
cmp
sbb
lods
and
cmpsl
xlat
sbb
repz
mov
mov
roll
inc
xchg
scas
mov
imul
daa
test
and
sbb
or
sti
rcll
int3
mov
jns
inc
out
xor
ljmp
lahf
shll
lcall
loope
push
mov
inc
dec
test
jmp
adc
mov
xchg
rolb
aam
fwait
imul
or
sub
adc
dec
mov
insb
or
enter
pushf
loopne
sbb
lea
sbbl
jg
push
sti
cwtl
aas
xchg
or
dec
mov
cwtl
and
mov
xlat
ss
pop
stos
mov
insb
xor
aaa
jbe
stc
and
xor
pop
stos
xchg
sahf
fxtract
lock
dec
xchg
push
pop
mov
aaa
sub
adc
xor
and
cmpsb
clc
push
lahf
cltd
mov
xor
mov
lret
pop
in
loop
and
and
mov
cmp
xor
xor
jb
cmp
and
imul
test
je
movsl
add
fstpt
fld
aad
jmp
and
mov
sub
ds
jb
dec
mov
nop
enter
pop
sbb
mov
lds
push
mov
add
mov
mov
prefetch
or
test
repnz
repz
movsb
and
jo
dec
xor
sub
push
fimull
fidivl
fstps
xchg
repz
adc
add
and
mov
push
pop
mov
sahf
cmp
cmp
mov
and
pushf
dec
or
movsl
lods
cmpsl
xchg
mov
shll
loope
inc
jmp
arpl
inc
lods
mov
push
inc
movsl
adc
fistpll
mov
mov
outsb
mov
adc
adc
test
clc
push
lea
or
pop
xchg
and
and
jnp
cmp
pop
and
jb
roll
fwait
loopne
mov
cld
je
dec
cmp
sub
inc
inc
adc
orl
inc
or
add
push
subl
cmpsb
call
sbb
dec
and
rcrl
sub
sub
cmp
inc
nop
mov
xor
stos
lock
and
cwtl
jl
pop
xor
mov
addr16
cmpsb
stos
into
xchg
jge
cmpsl
pop
sbb
shlb
ficompl
cmp
dec
push
cmpsl
ljmp
into
aad
sbb
mov
or
lds
jge
enter
sahf
inc
clc
pop
hlt
xchg
inc
popa
mov
cld
sahf
push
insb
mov
ds
imulb
dec
aam
fiadds
sbb
xchg
adc
stos
mov
sbb
mov
enter
sub
std
lds
cmp
stos
rorl
cli
pop
push
jecxz
mov
scas
insl
repnz
jbe
xchg
jle
stos
jecxz
sarb
ljmp
push
adc
daa
jo
and
and
or
aas
and
cmp
jb
std
dec
push
sbb
mov
insb
dec
mov
lods
popa
push
pop
in
mov
aad
lods
jbe
insb
and
imul
mov
dec
rolb
movb
mov
mov
fs
sub
je
roll
push
xchg
in
and
mov
push
rcrl
les
inc
xor
and
sti
testb
and
mov
pop
jbe
imul
dec
mov
add
iret
lea
mov
aas
aam
jne
insb
xchg
es
mov
repnz
pop
push
pop
or
dec
sub
push
adc
xchg
loopne
aam
mov
je
test
fsubrl
sbbl
pop
jmp
scas
sbbl
mov
call
fsubs
mov
icebp
hlt
mov
xor
push
push
lret
mov
in
les
mov
cli
test
lea
lods
mov
or
inc
adc
and
lods
jg
push
mov
inc
testb
lods
std
es
bound
pop
pusha
push
dec
sub
jmp
in
pop
lcall
jge
subb
lods
mov
or
movsb
js
mov
ja
mov
sub
das
adc
xor
fwait
dec
leave
inc
fldt
subl
xor
enter
out
sbb
lret
mov
push
inc
popa
pop
add
mov
repz
ret
ficoml
cmp
mov
ja
leave
or
enter
mov
mov
or
nop
adc
lcall
or
pop
xor
mov
fs
imul
sub
sbb
mov
int
jle
mov
xor
mov
mov
cmpsl
cs
out
cs
jae
lods
mov
xor
sbb
xchg
and
mov
insl
js
xor
dec
pop
dec
and
divb
out
sbb
push
aam
je
andl
dec
lret
push
movsl
cmp
push
lret
adc
call
mov
mov
aas
jnp
das
jo
cmpsb
fldt
inc
mov
outsl
fidivrs
or
and
out
mov
imul
lea
xchg
dec
mov
xchg
xor
jbe
push
loop
or
inc
xor
movl
leave
and
lret
dec
mov
mov
push
stos
out
stos
out
inc
loope
sti
aam
push
xor
and
push
mov
outsb
movsb
xchg
pop
sbb
xchg
adc
xor
dec
mov
in
add
lods
in
add
out
fildl
rcll
iret
xchg
lret
or
and
es
and
es
addr16
bound
mov
fnstenv
lahf
mov
mov
test
push
xchg
xchg
sarl
jns
inc
cmp
dec
jmp
or
cmpsl
lods
mov
jmp
inc
mov
push
rep
and
push
fs
movsl
lcall
cli
das
pusha
push
pop
and
movsb
in
aas
lods
lea
push
sub
push
call
mov
push
movsl
ja
jo
lret
lods
pop
cmp
inc
ds
insb
loopne
cld
and
mov
aad
mov
daa
pop
fldcw
shll
in
dec
mov
push
fs
ja
test
insl
mov
mov
out
or
sub
mov
stos
inc
xchg
popl
sub
pop
jmp
mov
cmpsb
mov
adc
adc
hlt
jge
cmp
sbb
pusha
adc
dec
add
xchg
mov
push
jno
push
stos
jo
jg
aas
mov
mov
loop
mov
mov
adc
shrb
shll
push
mov
imul
sahf
outsl
fisubl
mov
sub
into
mov
xchg
jo
jge
xor
testl
push
and
faddl
xor
dec
jno
pop
push
lret
int
jbe
ja
sub
sahf
shlb
push
shr
push
test
add
aad
push
push
stos
pop
add
ficoms
cmpsb
jns
js
xor
roll
sub
loopne
out
inc
mov
mov
inc
add
sub
call
pop
leave
mov
fstl
test
pop
pusha
scas
lahf
add
xchg
inc
inc
mov
aad
xchg
cmpl
pop
call
lahf
cmp
jle
push
je
adc
sub
jp
cmp
fistps
insl
jle
mov
shlb
ss
fldl
mov
mov
inc
pushf
int
pop
in
jecxz
xor
loop
shlb
shll
arpl
add
or
push
mov
mov
mov
jo
cwtl
jnp
out
lea
repz
mov
gs
pushf
mov
mov
arpl
xchg
and
lds
addr16
andb
scas
popa
icebp
cli
push
dec
jns
jmp
sub
push
scas
sub
mov
push
cmc
aad
pop
adc
adc
jb
sub
sbb
jmp
lret
add
lds
into
mov
out
push
mov
cld
jnp
mov
cld
stc
cmp
imul
xor
push
jp
lock
dec
sub
mov
sub
lahf
outsl
std
leave
jae
pop
scas
outsb
shlb
xchg
lock
push
mov
sbb
fistps
std
sbb
add
roll
mov
push
pushf
jge
jb
imul
jns
jecxz
or
addr16
lret
xchg
pop
fidivrs
lea
xchg
jge
imul
fsts
fdivrs
test
dec
or
xchg
pop
lret
stos
mov
and
imul
out
rcrl
xor
mov
jp
aam
imul
fstpt
push
or
dec
cmp
inc
and
jmp
out
out
bound
pop
bound
into
cli
arpl
insb
dec
adc
mov
int
aam
aam
test
xchg
mov
adcl
pop
mov
adc
andl
and
push
sahf
orb
pop
lock
push
scas
in
jle
inc
jp
dec
xor
out
push
mov
mov
repz
push
push
js
nop
loopne
imul
pop
popf
lds
cmpsb
jge
xchg
scas
mov
cld
iret
mov
fisubrs
sbb
xchg
testl
subl
call
jbe
sub
push
das
repz
aaa
jbe
adc
ret
sub
sahf
xor
int
mov
lods
mov
fmull
adc
mov
mov
jmp
shrl
xchg
fcoml
xor
jne
mov
addb
sub
inc
into
xor
stos
sub
pusha
adc
cli
ret
or
scas
repnz
decb
aaa
hlt
sub
test
lods
adc
push
frstor
push
mov
jae
cs
pushf
data16
jp
sub
lahf
rcll
fisubs
pop
fnstsw
andl
lahf
push
push
adc
push
jae
ret
mov
sti
mov
repnz
jp
shlb
mov
fwait
jo
xchg
test
mov
dec
out
testl
inc
loopne
pop
loop
xchg
jg
cmc
cmp
lods
outsl
sub
arpl
xchg
cmpsb
xchg
repnz
add
out
sti
sti
sub
cmpsl
dec
pop
cmp
mov
xchg
sti
aad
mov
js
xor
out
das
in
jns
pop
insl
push
sbb
ret
fistps
dec
or
nop
sub
or
testl
adc
jp
leave
sbb
call
sahf
push
mov
repnz
jp
xor
gs
add
push
daa
in
push
ffreep
mov
xchg
fdivl
fwait
sub
rcl
das
pusha
fucomp
popf
das
mov
decb
ds
sub
dec
sub
js
push
fistpll
add
jecxz
jno
add
mov
xor
and
and
mov
and
jno
nop
leave
int3
aas
jmp
hlt
scas
jge
stos
and
pushl
cmp
pop
and
push
inc
scas
ja
ret
into
xchg
sub
xor
rorl
das
adc
mov
pop
and
mov
fmuls
test
cli
xor
ljmp
pop
sbb
stc
fs
rclb
jae
leave
es
add
sub
shl
sbb
icebp
xchg
sahf
std
cmp
leave
je
mov
and
and
sub
adc
fwait
leave
pop
cwtl
pop
push
push
jle
jb
or
out
movsl
mov
cwtl
pop
mov
add
loop
in
outsb
mov
cmpsb
pop
push
adc
mov
mov
jmp
mov
out
loopne
jg
jle
jp
jle
add
push
ret
push
jb
mov
pop
inc
daa
stos
adc
push
or
outsl
jae
rolb
ficoml
repz
xor
or
sti
xorl
or
cmp
test
xchg
pop
mov
mov
mov
mov
test
hlt
nop
iret
sbb
inc
bound
mov
fdivl
jl
and
xor
in
sub
and
addr16
pop
clc
adc
rcrb
push
aaa
stos
test
inc
insl
fstp
repz
xchg
js
imul
fcmovb
mov
lret
xchg
aaa
jp
lods
and
sub
pop
test
ja
push
mov
cltd
mov
xorb
pop
fisubrs
dec
pop
ret
movsl
pushf
fcoms
ret
cltd
push
cwtl
dec
lret
fisubl
push
cld
sti
mov
fstpt
outsl
fmuls
loopne
lret
jmp
mov
push
mov
cltd
addl
fisubs
stc
daa
scas
push
icebp
or
mov
ss
push
adc
popf
shrl
push
cld
popa
mov
fxch
test
int3
into
lahf
jmp
xor
idivl
mov
push
add
push
das
rol
insl
jo
jle
cmc
dec
daa
cmpsl
adc
lea
aam
mov
jle
not
sub
les
aas
inc
out
lret
mov
inc
outsl
int3
adc
call
add
push
in
jmp
mov
add
mov
cmpsl
adc
popf
testb
jae
xchg
mov
ljmp
pop
inc
clc
andl
js
mov
pop
test
sbb
push
xchg
andl
cmc
lea
cmp
outsb
xchg
xchg
in
mov
and
test
cmpsb
imul
pop
and
cmp
add
mov
sub
and
cmp
mov
in
mov
pusha
jo
scas
test
fs
stos
inc
add
dec
sbb
adc
inc
xor
pop
dec
repnz
sub
das
xchg
out
sbb
faddl
hlt
stos
pop
push
mov
add
cmp
adc
adc
test
enter
fdivl
icebp
and
fnstcw
xchg
xchg
les
rol
repnz
mov
push
pusha
xor
ret
in
into
and
leave
mov
jge
out
je
jns
fidivrs
sti
outsl
lods
jnp
out
repnz
dec
in
xchg
inc
enter
jecxz
jae
sbb
mov
sub
push
imul
push
rcrb
outsl
test
adc
pop
bnd
je
pop
in
loopne
pop
jbe
mov
jae
mov
add
sbb
or
pop
dec
jbe
xor
jle
inc
cmp
addl
std
cli
cld
negb
sbb
mov
mov
or
in
popa
ds
push
cltd
add
aas
inc
rcll
xor
sahf
bound
and
loop
inc
nop
inc
mov
and
add
xor
inc
aaa
and
mov
add
bound
daa
adc
popf
pop
mov
pop
mov
pusha
cmpsb
fdivrl
fildl
jg
inc
into
rol
int
pop
jbe
inc
popf
imul
ja
icebp
lret
icebp
hlt
cmpsb
in
xor
inc
mov
aas
daa
fdivrs
stos
loope
add
xchg
dec
or
sbb
dec
add
std
ret
inc
and
jne
stc
sub
inc
outsb
sbb
test
icebp
int
in
fwait
imul
push
pop
mov
sbb
mov
pushf
das
in
lods
ret
lods
jge
push
ja
mov
les
scas
inc
sti
pop
mov
sti
divl
ljmp
adc
cs
xchg
lahf
dec
cld
add
add
fsub
gs
push
ljmp
sbb
mov
dec
test
ljmp
and
and
call
mov
inc
and
pop
push
cli
jmp
mov
and
jmp
js
jmp
nop
jb
fstpt
leave
dec
cmpsl
inc
push
or
mov
xor
movsb
nop
xchg
push
pushf
push
scas
mov
sub
xchg
or
push
aaa
rcr
sub
xchg
jns
movsb
push
andb
testl
ret
lods
mov
addb
mov
roll
rclb
pop
dec
repnz
cmpsb
adc
lock
in
dec
cmp
xchg
dec
cmpsl
in
insl
arpl
fptan
mov
jl
arpl
or
lret
add
ret
cmp
xchg
lret
imul
lock
addr16
jmp
add
leave
lret
sbb
fldlg2
outsb
jge
mov
enter
and
std
push
imul
jecxz
jns
adc
scas
ja
popf
mov
enter
add
or
lods
push
push
pusha
gs
lock
subl
jle
idivl
add
pop
xchg
mov
inc
call
movsl
in
out
pop
aaa
or
pop
sbb
popa
ficompl
nop
mull
mov
into
clc
dec
fiadds
into
icebp
sub
inc
jle
push
rcrb
mov
roll
or
rolb
add
fwait
out
test
inc
jnp
insl
jne
pop
cmp
gs
push
ds
lock
inc
pop
mov
mov
or
pop
jecxz
movsl
pop
inc
xchg
je
cwtl
aam
pop
jno
cmp
mov
xchg
jg
inc
sub
js
aad
stc
add
add
es
push
xor
pusha
fistps
jge
pop
lea
xorb
data16
pop
jne
jmp
loopne
mov
jecxz
and
stc
push
popf
out
inc
push
jno
mov
or
add
lcall
outsl
imul
and
mov
leave
sub
jmp
push
sub
fs
or
xor
dec
inc
sbb
sti
and
sub
jmp
mov
mov
push
outsl
repz
fs
sub
ret
mov
jl
pop
leave
aad
call
jb
mov
mov
jl
pushl
cmp
addr16
fmul
fildl
mov
or
cmp
pop
cmpsb
aas
pusha
add
push
out
test
pushf
mov
test
xchg
push
lahf
cwtl
dec
jno
pushf
iret
jno
cmpsb
jge
jns
rorl
mov
mov
inc
movsl
mov
les
or
pop
es
and
inc
and
mov
push
jb
cs
push
cli
and
inc
mov
bound
pushf
in
in
repz
xchg
xchg
pusha
shlb
mov
mov
dec
xor
imul
out
sbb
int
or
pop
in
cltd
fwait
std
roll
aaa
cs
push
repz
push
pop
sarb
into
pop
push
mov
sub
scas
leave
sub
inc
mov
inc
iret
cmp
shr
pop
or
mov
adc
nop
fnstenv
pop
mov
test
add
aas
loopne
jg
int3
xchg
xor
add
aaa
out
sbb
roll
lods
push
add
loopne
push
mov
dec
test
ljmp
imul
imul
loope
sub
sub
cmpsb
mov
fwait
movsl
repnz
inc
cmpsl
in
loope
mov
push
imul
lret
push
movsb
mov
mov
inc
cli
int
mov
mov
in
mov
cmpsl
fsubs
sub
movsb
add
fwait
loop
shlb
divb
out
and
push
push
aas
inc
sbb
push
push
popf
push
insl
mov
nop
popl
loopne
outsl
dec
inc
xor
jb
jno
iret
insb
sbb
inc
nop
xor
push
mov
rcrl
jo
push
into
add
push
cmp
jecxz
dec
cmp
and
pop
lret
push
es
pop
rclb
sbb
insl
iret
dec
dec
jle
jmp
mov
jo
stos
pop
out
mov
int3
jmp
inc
xor
test
fimuls
in
mov
jle
adc
adc
dec
mov
add
cli
dec
sbb
movsb
popf
imul
xchg
cmp
xchg
test
loope
decb
jmp
loop
push
in
imul
xchg
inc
push
inc
fmuls
and
push
fwait
movsb
fucomip
xor
pop
lods
mov
add
stos
adc
lods
ret
cli
test
xchg
jb
adc
notl
repz
test
xor
push
daa
ljmp
mov
push
or
leave
inc
imul
test
sarb
mov
jge
cli
mov
mov
pop
idivb
mov
cltd
mov
lcall
shl
mulb
cli
inc
xchg
xlat
cmp
outsl
or
dec
mov
sbb
in
and
xchg
stc
or
jae
shlb
cmp
add
int
xor
sbb
sbb
pop
les
fdivs
xor
stc
mov
clc
loop
xchg
outsb
sbb
adc
cmp
into
or
fldt
jp
pop
push
hlt
push
cmp
push
adc
inc
sub
das
sbb
shll
shrb
adc
mov
xchg
jp
hlt
frndint
lahf
jae
gs
int
scas
nop
jno
inc
pop
lea
inc
test
cwtl
pop
in
xor
jmp
jb
push
outsb
lea
cltd
cli
and
push
lea
dec
scas
lahf
arpl
dec
roll
aad
loope
aam
cmp
icebp
lods
popa
inc
add
data16
pop
sbb
mov
push
inc
int3
aad
leave
dec
sbb
inc
cmpsl
pop
xor
sbb
xchg
arpl
insl
xchg
testl
insb
mov
xchg
xchg
jns
mov
fwait
sub
repz
lods
les
call
mov
mov
xor
xor
push
cmp
aas
sti
divl
adcb
mov
cld
dec
jo
int3
mov
cmp
dec
push
lahf
or
lea
push
and
xor
mov
mov
dec
out
hlt
pop
push
xchg
into
or
adc
add
jle
dec
notb
rol
mov
in
mov
daa
into
imul
mov
repnz
push
ss
mov
stos
mov
mov
pushf
fidivl
pushf
pop
ficomps
cmp
movsb
jno
sub
mov
push
jle
sub
push
jns
mov
inc
cvttps2pi
jge
into
mov
xchg
fildll
pop
xchg
mul
push
imulb
jne
cwtl
cmp
les
adc
insl
lcall
xchg
insb
mov
and
adc
mov
ljmp
loope
cs
lock
out
sub
sti
addr16
sbbl
inc
mov
mov
cmpsl
sti
repnz
bound
pop
xor
test
daa
mov
add
mov
push
repnz
sub
notb
and
push
mov
mov
lods
fbld
nop
xchg
loope,pt
add
insl
popf
mov
inc
mov
inc
lret
jecxz,pn
lret
imul
or
fucom
ljmp
scas
xor
mov
add
sub
es
out
mov
xor
mov
mov
push
pop
lahf
int
sahf
inc
push
dec
ja
sub
dec
xor
fidivrl
mov
nop
sahf
sub
or
cmp
movsl
call
sbb
lods
inc
mov
sub
ret
lock
cwtl
cmp
xchg
std
sub
das
xchg
cmpsl
movsl
leave
lds
jl
leave
jecxz
push
ljmp
loop
mov
loop
test
int
mov
ljmp
insl
xchg
push
les
ja
pop
cmp
xor
mov
repnz
dec
insl
lcall
mov
push
mov
push
ds
push
push
adc
mov
push
sbb
xchg
mov
in
int
adc
jns
mov
test
sbb
nop
in
dec
lea
cmpsl
cs
fmul
stc
mov
cmp
lcall
xor
cmc
push
pop
fstpt
jecxz
loope
adc
outsb
lds
imul
and
js
addr16
aas
sub
pushf
push
fnstenv
mov
stc
mov
int3
adc
adc
pop
pop
xchg
mov
mov
sahf
mov
mov
mov
bound
xor
mov
fdivrs
fdivrs
xlat
xchg
mov
ds
icebp
mov
sarb
mov
xchg
nop
pop
icebp
fidivs
inc
lret
stos
lods
dec
daa
push
dec
sbb
push
loop
loope
adc
jge
cmp
in
dec
gs
out
mov
and
shlb
sbb
lret
adc
mov
pop
mov
fwait
push
mov
loopne
mov
add
aas
loopne
sub
dec
xor
test
fldl
adc
inc
stc
ss
and
and
add
jns
mov
insb
cs
dec
sub
inc
out
mov
cmpsb
into
idivl
mov
mov
dec
popf
daa
cltd
ja
push
sub
or
insl
push
repz
and
dec
or
popa
push
xlat
or
aas
dec
jns
mov
xlat
movsb
dec
pop
cmp
aam
fpatan
push
push
and
inc
out
and
and
inc
pop
dec
outsb
and
sbb
mov
and
pop
call
push
push
inc
ljmp
mov
into
das
out
ljmp
jecxz
jg
bound
sub
iret
test
push
ljmp
sub
loope
loope
pop
outsb
cmpsl
cmp
mov
and
pop
test
gs
mov
lcall
ljmp
adc
sarb
add
mov
in
fiadds
mov
fsubp
dec
xor
cli
lds
inc
clc
test
adc
dec
xchg
movl
dec
pop
mov
int
outsb
mov
sti
jmp
pop
or
pop
and
pop
xchg
push
inc
cmp
test
jae
push
pop
sbb
mov
jecxz
into
shll
call
inc
out
push
sbb
jne
push
sbb
fwait
pop
pop
aam
dec
data16
push
je
push
sbb
insb
out
cmpsb
adc
es
repnz
ret
icebp
adc
movsl
and
push
fs
mov
push
push
and
xor
dec
mov
sbb
outsl
mov
pushf
stos
inc
push
mov
mov
xor
dec
adc
clc
pusha
dec
mov
shld
outsb
fwait
pop
cwtl
dec
push
xlat
push
push
and
dec
jb
lahf
outsb
movsl
jp
mov
stos
aad
or
adc
imul
fwait
dec
int
popf
js
inc
inc
andb
clc
outsb
adc
int3
jo
mov
test
js
loopne
pop
scas
or
pusha
jnp
sbb
mov
or
clc
xor
sbb
mov
stos
inc
mov
sbb
and
mov
icebp
mov
in
stos
roll
loope
outsb
mov
inc
stos
aam
lahf
sbb
lods
rolb
pop
push
scas
sub
rcll
jnp
mov
rorb
dec
inc
lcall
inc
sub
movsb
cli
rcll
push
cmp
push
js
cmp
pop
push
aaa
fisubrs
pop
aam
inc
ror
push
pop
dec
cwtl
ret
jp
rcl
sub
xor
jge
push
pop
subb
arpl
shrl
loope
cltd
and
nop
and
or
mov
in
into
mov
incl
sbb
pusha
adc
gs
mov
jo
jne
ljmp
pop
scas
sbb
out
test
push
testl
pushf
sub
dec
sub
in
mov
faddl
aas
out
sbb
imul
mov
mov
cmpsb
call
dec
or
pushf
ret
fidivs
sbb
fdivs
pop
cmp
dec
push
pop
add
jle
insb
negl
and
cmp
cs
scas
pop
insb
lods
sti
xchg
scas
inc
ds
mov
jecxz
int3
jle
push
pop
mov
mov
xchg
loope
jb
insl
mov
mov
inc
ljmp
or
and
inc
pop
add
and
push
add
jl
out
pop
mov
sub
or
jns
fucomip
mov
mov
cmp
xor
jp
dec
icebp
mov
xor
std
shl
filds
jle
push
sahf
cmpsl
sub
loopne
test
add
js
mov
sbb
scas
shlb
xor
add
mov
sbb
mov
cmp
dec
pop
pop
subb
in
setnp
data16
ret
jns
sbb
insb
xchg
out
lds
std
push
mov
rep
divl
sub
arpl
daa
jno
and
shr
scas
inc
fidivrs
pop
and
sbb
jle
mov
or
rol
fimull
jle
test
mov
push
jnp
jo
dec
sbb
hlt
sbb
push
jae
pusha
repnz
add
aam
mov
add
add
adc
rep
pop
pushf
push
pop
je
xchg
stc
incb
push
mov
pusha
imul
cmp
push
lret
fcmove
and
lret
mov
pop
outsb
lret
push
adc
daa
daa
cmp
jl
pop
loopne
mul
bound
mov
inc
xor
stc
or
rclb
jns
pusha
xchg
push
mov
rcrl
out
jb
and
xchg
or
pop
repnz
inc
in
sarl
push
loopne
popa
int3
mov
mov
push
inc
stos
or
out
sbb
sarb
icebp
ret
aas
xor
xchg
sub
notb
pop
fistps
sub
lcall
iret
add
add
outsl
mov
andl
aas
adc
ja
mov
lds
jle
mov
cmp
cmp
add
push
or
cltd
rcrb
lret
test
std
fs
xchg
ret
pop
jo
les
jnp
sbb
dec
cmp
mov
test
dec
cmc
int3
adc
or
shrl
das
rol
inc
pop
xchg
cmpsl
je
cmp
jl
movsl
mov
dec
addr16
mov
daa
jns
leave
es
bound
mov
addr16
sub
jbe
mov
inc
jp
adc
scas
add
cmpsb
jne
test
cmp
sbb
enter
push
cld
mov
push
mov
out
sub
mul
ljmp
cmpsb
adc
xchg
mov
cmp
and
jmp
data16
xor
leave
inc
mov
push
in
adcb
sub
jb
in
loopne
pop
and
add
popf
mulb
jo
jecxz
adc
mov
insb
push
and
and
pop
lea
pop
pop
xchg
rorb
fs
push
cmpsb
add
shlb
bound
shlb
aam
leave
add
ficomps
ffree
fwait
sub
adc
into
mov
fwait
pop
shlb
or
flds
push
dec
ret
lret
cmpsl
dec
stos
cld
mov
jnp
cs
out
repz
std
jo
mov
jp
lahf
fmul
cmp
push
cmpsl
mov
ljmp
fsts
mov
bound
out
lcall
in
enter
rcll
xor
mov
xor
xchg
into
sub
inc
aad
aam
xor
push
mov
stos
add
loopne
ljmp
xchg
insb
xchg
frstor
sub
inc
sub
add
loope
into
fmuls
aam
pop
subb
cmp
cmpsb
scas
mov
fdivs
push
stos
imul
cmpl
xor
and
sbb
int
pop
in
inc
clc
pop
xchg
aas
out
mov
and
jno
pop
mov
jmp
fstpt
ljmp
fnstcw
test
cmpsb
jnp
sbb
xchg
fmull
lock
and
sub
mov
sub
sbb
lods
jo
mov
adc
push
aas
or
xor
adcb
dec
imul
rorb
xchg
jecxz
sbb
xor
push
mov
cmp
das
xchg
sub
repz
sub
mov
arpl
cmova
pushf
cld
jg
inc
pop
add
jnp
hlt
mov
mov
ficompl
jb
cmpsb
mov
dec
jle
push
mov
rorl
pop
leave
jecxz
add
test
mov
test
lret
sub
pop
psrld
cmp
or
push
lds
pusha
inc
fld
jo
clc
lock
aas
lods
imul
insl
jae
and
aam
pop
pusha
jnp
cmp
ss
call
pop
sub
add
ljmp
pusha
jge
dec
dec
sub
xor
sub
xor
push
cli
sub
test
jge
inc
mov
dec
stos
imul
addr16
adc
push
jae
mov
mov
lret
call
roll
xchg
sub
divb
push
std
enter
or
test
dec
cmp
sahf
in
push
fcmovbe
cmp
lock
xchg
cmpsl
out
icebp
movsb
add
jbe
mov
outsl
fstp
or
insb
sub
adc
adc
cli
imul
shll
in
dec
notl
into
ja
push
push
mov
das
pusha
test
inc
push
xor
mov
sbb
and
sahf
pop
push
add
loope
bnd
push
mov
pushf
stos
movsb
pushf
int3
xor
bound
dec
mov
or
xchg
inc
bound
xchg
mov
sub
mov
je
push
and
loop
lock
push
fnstenv
dec
pop
ss
cld
outsb
jmp
loop
lcall
mov
xchg
adc
dec
push
idivl
sub
faddp
pop
in
adc
out
cmp
lcall
and
jbe
and
or
cltd
cltd
dec
xor
ret
shl
jns
out
addr16
cmp
ja
loope
add
leave
in
movsb
xchg
inc
and
mov
inc
into
mov
cld
add
jo
mov
jge
shl
and
mov
mov
shr
mov
add
xor
popa
movsl
dec
imul
add
push
sub
dec
mov
push
or
inc
pop
int
in
push
outsl
jle
adc
ror
xchg
add
gs
dec
data16
jmp
jle
inc
into
mov
stc
cwtl
shl
xchg
jo
jl
out
jnp
push
in
push
xor
pop
sarb
and
lds
mov
sub
fistps
mov
jae
out
inc
clc
jnp
mov
push
repnz
cmp
mov
xor
iret
pushf
or
mov
mov
xchg
mov
sbb
add
insl
cwtl
inc
sbb
or
jge
mov
xchg
xchg
mov
add
or
mov
or
xlat
and
test
pop
aaa
ss
mov
subl
daa
in
das
push
adc
jp
sarb
daa
adc
repnz
xor
ss
rcrb
dec
inc
xor
push
imul
lret
aas
ljmp
stos
imulb
movsl
inc
jle
ret
xlat
sahf
pop
adc
pop
stos
push
jmp
insl
push
mov
rcrl
cmp
dec
xchg
mov
arpl
inc
in
jg
mov
add
pop
imul
aas
dec
cmpsl
xchg
int
mov
aad
mov
lea
adc
mov
inc
out
popf
shll
jl
push
insl
sbb
fnsave
movsb
popa
add
cwtl
dec
shlb
enter
mov
mov
adc
sub
push
jecxz
call
imul
jecxz
enter
inc
lds
imull
xchg
sti
push
repnz
jae
out
xchg
in
insb
and
sbb
out
shrb
outsl
pop
sarb
rcrb
stos
lahf
enter
mulb
das
ret
fwait
pop
xchg
cs
mov
or
gs
mov
hlt
add
xor
aaa
test
jge
cmp
pop
es
adc
sbb
pop
test
data16
loop
push
jge
out
je,pt
inc
fwait
jmp
xchg
enter
mov
in
lahf
mov
push
btr
adc
mov
adc
lods
xchg
jae
aam
lcall
dec
pop
sub
cld
cli
sahf
and
cmpsl
adc
xchg
push
mov
mov
and
in
ret
sbb
js
or
lcall
scas
mov
dec
mov
nop
xchg
push
xor
jo
jnp
cmp
sbbb
cs
dec
sbb
cwtl
pop
inc
aas
fisttpll
sbb
lds
mov
add
adc
or
sub
xchg
out
cltd
stos
ret
pop
xchg
xchg
fwait
cwtl
or
addl
push
cld
out
inc
push
bound
dec
dec
pop
ja
xor
cmc
das
shlb
das
or
cltd
jne
push
cli
imul
cld
add
in
xchg
adc
lahf
lcall
jb
mov
xchg
ret
pop
xchg
sbb
shl
in
push
adc
mov
sbb
loop
outsl
jl
add
push
adc
sbb
into
and
popl
add
xor
and
push
icebp
loope
push
and
in
and
xchg
iret
leave
lret
test
and
add
mov
jbe
sub
lods
out
or
push
arpl
int
mov
lret
aam
xchg
ljmp
jg
sbbl
jae
and
adc
out
or
mov
clc
test
cmp
sub
ss
or
xchg
sbb
mov
lds
inc
xchg
jmp
cmp
push
inc
push
mov
into
xchg
test
cmp
or
lds
cmp
imul
fimuls
pop
stc
mov
outsb
xchg
dec
push
mov
ds
push
fadds
xor
and
outsb
cmp
lds
gs
cli
pop
outsb
pop
rol
xchg
xchg
push
jo
mov
jmp
sbb
faddl
dec
sub
mov
jns
add
incl
jnp
mov
mov
sub
movsb
ret
test
bound
mov
ja
daa
cs
mov
in
and
push
jg
cs
movsl
or
xchg
ss
shll
and
cmp
mov
fldl
test
pop
adc
push
shlb
out
out
lods
scas
dec
xchg
mov
ret
push
scas
inc
mov
add
pop
jnp
sub
mov
aas
dec
sub
loopne
decb
mov
test
dec
dec
pop
dec
arpl
cmpsb
mov
iret
les
lcall
jae
repnz
pop
inc
adc
es
lret
lock
push
imul
push
xchg
insl
jge
out
push
xlat
andl
out
call
ja
sarb
and
mov
inc
arpl
fdivrs
adc
pop
dec
inc
mov
jmp
imul
dec
jbe
aam
dec
pop
mov
cltd
add
jle
sub
cmc
mov
xchg
scas
and
negl
call
and
mov
mov
ret
icebp
hlt
lea
stos
in
cli
stc
int3
pop
test
adc
mov
dec
lods
mov
mov
aam
lcall
cli
mov
jp
xchg
and
mov
imul
stos
adc
fistpll
xor
mov
scas
repz
and
cmp
adc
stos
rorl
icebp
ror
mov
loopne
push
insb
mov
fsubs
or
and
mov
setl
mov
sbbl
push
aas
sbb
test
int3
dec
pop
mov
dec
xor
inc
inc
mov
pop
rcrl
aas
iret
mov
or
mov
push
imul
lock
stos
into
xor
mov
hlt
mov
push
out
lcall
dec
ja
jg
repz
add
pop
push
rorl
push
mov
iret
fisttpl
sbb
adc
xor
popf
dec
ret
adc
shrl
aaa
js
repnz
sti
std
mov
pushf
mov
push
out
pop
scas
xchg
push
pop
leave
insb
cmp
xchg
loop
sti
call
sbb
dec
add
dec
mov
int
sbb
add
jmp
pop
adc
pop
repnz
mov
sub
bswap
adc
jnp
mov
notb
inc
fistpl
push
inc
stc
sahf
stc
pop
sub
ficompl
jmp
popf
pop
pop
fs
adc
and
test
sbb
jo
or
fwait
sti
mov
mov
cmc
fldenv
lea
cld
cmpsb
sbb
gs
inc
ljmp
or
push
jl
mov
sbb
lea
pop
outsl
dec
jmp
test
and
add
lock
scas
xor
cmp
jmp
xchg
cld
jns
mov
xchg
dec
jle
fcoml
dec
js
push
jl
xchg
pushf
int3
ror
push
sbb
add
dec
add
fistps
or
je
mov
test
enter
mov
jno
or
mov
adc
sbb
arpl
daa
sub
xchg
mov
sti
push
mov
in
fistpll
jne
xchg
roll
mov
mov
jmp
mov
cmp
sbb
jle
pop
orl
fsubs
mov
xchg
mov
test
cmpsl
fcoml
movsl
movsl
arpl
cmp
out
add
cmp
sub
cld
shrl
in
das
test
xor
aam
mov
jmp
filds
inc
imul
adc
dec
mov
push
and
push
loopne
pop
sub
test
or
fwait
stos
push
xor
hlt
stc
dec
popf
jne
lods
lcall
cli
aaa
sub
loopne
ljmp
sbb
push
das
adc
add
cli
xchg
or
addr16
xor
test
lret
sub
stc
xorb
call
jo
addr16
fninit
int
or
jnp
movsb
cmpsl
dec
cmp
sbb
push
movsb
mov
jne
enter
jp
dec
incb
das
sbbb
call
das
or
xor
mov
scas
mov
and
cmp
es
push
repz
roll
mov
push
mov
mov
mov
xor
inc
test
push
sbb
xor
inc
lock
mov
fstpt
xchg
scas
mov
out
stos
add
xchg
ds
in
aam
test
pop
pop
imulb
cmp
data16
icebp
test
pop
add
pop
ljmp
mov
movsl
inc
dec
push
rorb
fldenv
nop
popf
or
dec
adc
filds
scas
mov
mov
bound
aad
add
add
popf
popa
jne
inc
xor
jle
and
or
movsl
pushf
pop
fcomps
mov
xchg
lcall
icebp
push
xchg
je
cmp
push
jle
ret
sub
fs
icebp
lods
negb
pop
cmpsl
dec
int
sbbl
subb
dec
rcll
sti
enter
cmpsl
decl
test
push
insl
mov
jmp
les
ja
nop
outsl
mov
sti
out
lret
sub
add
inc
dec
cmp
inc
jo
lret
fsubl
cli
lds
lds
je
sarb
dec
cmp
loop
stos
or
xchg
je
nop
stos
loopne
mov
mov
subb
js
pop
cmpsl
sbb
pop
enter
rcrl
pop
decl
repnz
sbb
dec
sub
icebp
push
or
pop
hlt
adc
sub
cli
fstp
cld
xor
push
ret
push
cmp
mov
arpl
mov
daa
lds
mov
or
xchg
sbb
test
dec
xchg
es
scas
fistpll
mov
jecxz
mov
push
push
test
dec
mov
push
mov
sar
aaa
lds
fidivl
or
adc
mov
mov
dec
std
aas
lods
add
sbb
dec
push
mov
movsl
lds
push
push
pop
popf
xlat
out
mov
mov
mov
hlt
mov
gs
sub
addr16
pop
mov
scas
popa
fwait
stc
scas
cmp
inc
jp
xchg
addb
and
jo
outsl
movsl
addr16
xor
cltd
and
adc
inc
dec
aas
repz
je
pushf
ljmp
lock
pushf
shr
xor
fwait
sub
enter
iret
mov
inc
xor
inc
aam
jg
mov
call
mov
xchg
leave
ja
sub
dec
stc
mov
xchg
mov
adc
mov
bound
and
mov
cmp
adc
xor
push
jno
mov
dec
push
mov
sub
fsubrs
testl
xlat
jns
fnstenv
mov
mov
jle
fnsave
push
repnz
or
or
dec
adc
push
mov
sbbb
insl
addps
jp
lock
inc
mov
and
mov
mov
mov
icebp
pushf
pop
inc
push
xchg
cmp
cmp
xor
and
scas
xor
cmpsb
cmp
push
repz
out
adcl
nop
in
aaa
cli
mov
pop
sub
in
out
or
ss
mov
xlat
cwtl
mov
push
clc
and
and
sub
iret
push
mov
mov
sub
cltd
or
xlat
mov
push
xor
ret
push
daa
dec
push
roll
aas
popa
adc
push
cmp
mov
in
ret
jmp
push
sbb
xchg
cmp
xchg
push
gs
in
mov
in
cwtl
pop
mov
test
in
add
shrl
inc
and
lods
or
lds
mov
sbb
test
xor
lods
icebp
jne
add
mov
mov
or
adc
rcll
mov
sahf
sub
dec
adc
fsts
lods
lahf
xchg
push
fcom
pop
cmp
lods
cmpsb
hlt
pop
divb
out
cmpsb
mov
repnz
test
dec
sbbl
mov
fbld
pop
cmp
sub
test
jg
sub
test
add
and
push
xchg
dec
dec
sbb
xor
into
or
or
or
lods
pushf
out
rorb
jp
xchg
sti
hlt
xchg
je
push
mov
jg
cwtl
sub
outsb
ja
and
jno
mov
jmp
and
addr16
add
aaa
sti
arpl
or
add
jmp
lods
xchg
subb
mov
push
sub
psubb
lock
push
mov
arpl
scas
lret
mov
push
decl
or
cs
out
scas
dec
negl
fdivrl
push
cmpsl
jg
and
mov
lcall
lds
cmp
or
sbb
xchg
add
pushf
mov
push
push
push
pop
imul
sbb
lds
jnp
out
filds
clc
cmp
mov
clc
xchg
inc
loop
mov
faddl
xchg
test
mov
fbstp
inc
cmp
movsb
mov
pop
scas
ret
loop
fcmovbe
or
push
cmpsb
mov
insb
mov
mov
iret
scas
ret
hlt
push
test
cld
add
lret
stos
push
jg
cmp
cmc
icebp
ja
sti
popf
enter
xor
mov
push
inc
cwtl
dec
add
push
cmp
cli
cmp
xchg
stos
test
mov
or
xchg
jmp
out
and
sbb
mov
mov
hlt
in
mov
jb
repz
mov
fildl
mov
sub
mov
popa
adc
and
popa
sbb
inc
inc
fisubrs
xor
xchg
sub
dec
adc
bound
jecxz
test
stos
xor
data16
mov
mov
outsl
jp
call
fsubl
jp
movsl
shl
pop
daa
adc
mov
jg
cmp
xor
xor
fs
out
push
adc
out
je
or
mov
and
inc
stos
adc
outsb
and
sub
dec
outsb
js
aaa
inc
jns
cmp
adc
xor
mov
dec
and
lods
fistpll
pop
movsb
movsl
stos
cmp
shr
dec
mov
mov
test
cld
xchg
rorl
ret
sbb
pop
jnp
mov
adc
dec
stc
dec
sbb
add
subb
pop
nop
cmp
add
and
jecxz
inc
pop
sbb
ret
shll
cmp
call
ror
pusha
jge
cmp
push
jbe
pop
fcompl
aaa
jl
lock
addr16
sbb
mov
pop
gs
gs
ss
xor
sub
lret
divb
popl
test
pop
mov
cmp
jp
mov
inc
adc
shrl
sar
add
adc
xchg
lahf
lods
mov
mov
int
pop
into
cwtl
loopne
mov
and
sarb
ret
adc
sub
nop
or
jl
popa
mov
mull
xor
xlat
fdivs
call
sbb
mov
inc
push
out
sub
mov
mov
xor
jo
lds
sti
and
xchg
mov
mov
hlt
aad
lea
mov
jb,pn
mov
imul
pop
ljmp
fs
je
xor
leave
ror
dec
movsl
out
daa
nop
cmp
js
pop
mov
cltd
popa
cmpsl
stos
mov
mov
pop
mov
mov
outsl
lret
loopne
and
or
jmp
push
movsl
jg
out
rcrb
std
lret
call
bound
pushl
hlt
je
dec
loop
fldcw
lcall
xchg
jl
lahf
push
jbe
push
xchg
stos
pop
mov
icebp
mov
scas
je
test
push
test
cli
xchg
mov
jb
jne
xchg
incb
adcl
jg
mov
ds
xchg
scas
out
xchg
fdivl
je
shll
leave
loop
xor
mov
sahf
mov
mov
push
or
xchg
mov
rcr
sti
adc
dec
out
rcl
repz
int3
in
mov
push
repnz
pop
push
fsts
push
and
cmpsb
or
adc
inc
cltd
fidivrl
mov
sub
jae
ffreep
repz
mov
lds
xchg
decl
dec
inc
push
cmp
or
in
mov
adc
test
fadds
sbbl
inc
sbb
push
inc
or
fwait
or
or
push
repz
ljmp
adc
movsl
jne
push
lcall
jmp
lret
scas
or
jne
inc
xor
incl
dec
mov
std
ficomps
jnp
adc
push
cmp
mov
push
sub
push
sub
sbbl
scas
dec
cmp
add
mov
dec
dec
movsl
out
imul
mov
mov
rorl
cld
jl
loopne
sub
add
pop
xchg
pop
inc
and
je
jl
imul
nop
sbb
or
fcmovnbe
stc
adc
xchg
xchg
cmp
push
int3
mov
sbb
pop
fists
fwait
into
inc
sbb
mov
repnz
sub
dec
movsl
xor
jns
sbb
sub
cld
imul
gs
jo
aaa
rorb
and
jae
out
insl
das
mov
inc
addr16
pop
into
push
cmp
outsb
sub
ret
repz
push
mov
imulb
and
mov
cwtl
mov
xor
inc
inc
ret
and
out
jo
insl
rcll
bound
fsubs
lret
fisttps
std
data16
or
out
int
xor
mov
jno
icebp
jge
inc
les
inc
sbb
es
jl
dec
test
or
sub
mov
push
fstpl
popf
xchg
sbb
or
inc
repz
outsb
push
fisubl
sahf
jnp
jle
jno
or
rorb
add
or
loope
xchg
mov
nop
xchg
lods
cmc
mov
out
repnz
sahf
loope
orb
inc
inc
imul
rol
adcl
orb
hlt
int
push
out
or
dec
lret
xchg
cmp
sbb
pop
add
jp
lds
cmp
inc
jp
fisubs
out
movsl
adc
jno
sub
sub
adc
dec
xchg
repnz
popa
inc
stos
mov
sub
add
pop
test
xor
adc
xor
imul
lds
jo
faddl
cld
shlb
fwait
pop
or
xchg
mov
jb
call
and
sbb
push
xor
aam
ror
into
in
mov
xlat
xor
inc
fcom
inc
dec
and
repz
ja
xor
inc
jnp
push
aas
mov
out
ja
leave
test
mov
faddl
in
clc
inc
inc
test
mov
fidivrl
faddl
icebp
fldt
mov
dec
mov
movsb
ss
push
mov
cltd
push
cmp
imul
test
or
pop
jo
sbb
std
mov
aad
jb
cmp
mov
push
pop
cmc
mov
add
scas
mov
ret
mov
mov
pop
sbb
push
mov
sbb
inc
push
dec
fistpl
sbb
es
sbb
push
rolb
xlat
cmpb
out
add
insl
sbb
pop
aad
aad
jnp
loope
sbb
stos
jmp
jge
js
cmpsl
mov
out
fcoml
stos
add
jne
adc
ret
or
inc
cmp
jo
adc
fldcw
in
sub
xchg
incb
jmp
sbb
sbb
mov
dec
or
shrl
in
cmp
out
push
rcll
mov
testb
imul
pop
add
fs
fldcw
or
inc
or
add
punpcklbw
jno
add
add
pop
cmp
lret
movsl
sub
popf
mov
and
in
lcall
jns
movsb
add
pushf
xor
es
xchg
dec
aam
out
add
divl
push
in
out
test
cwtl
loop
mov
adc
add
jle
cmpsl
push
xor
jl
inc
adc
ret
jae
adc
call
nop
jne
cmpb
add
adc
mov
stc
xor
aas
fsub
jmp
cld
out
leave
movsb
loopne
cmp
push
je
xlat
or
sbb
adc
jne
pusha
clc
frstor
sub
lret
push
rcr
dec
mov
cmp
xor
pusha
mov
or
xchg
punpckldq
mov
subl
xor
fstps
ljmp
aas
inc
sbb
mov
or
rolb
xchg
movsb
push
out
push
or
jbe
xchg
fsubrp
cmp
imul
cmp
fsubl
data16
or
outsl
inc
mov
sbb
das
dec
les
test
sbb
push
int
clc
xor
push
xchg
xor
push
addb
hlt
adc
mov
pusha
addr16
loop
sub
das
lock
std
popa
cmova
xchg
scas
fwait
adc
adc
clc
push
mov
fisubl
push
xor
adc
pop
stos
idiv
cmc
aas
out
lods
dec
push
jmp
cmp
push
aam
mov
pop
insl
aaa
or
push
and
mov
outsb
cwtl
scas
and
dec
add
jo
sbb
mov
iret
loope
jp
aaa
or
daa
mov
std
cmpb
xchg
int3
cltd
pop
dec
mov
scas
jge
sahf
mov
fsubl
fwait
dec
addr16
adc
pusha
pop
or
mov
call
loopne
push
add
stos
cmc
mov
mov
in
outsl
sub
lret
lret
xor
jb,pt
cltd
into
icebp
fnsave
les
aam
push
sbb
push
ja
in
dec
bound
adc
scas
push
cmp
mov
repz
and
and
je
cld
mov
mov
arpl
ljmp
out
fisubl
dec
stos
mov
push
test
shrl
sub
rcrb
cs
mov
mov
pop
cmp
mov
pop
xchg
inc
push
sbb
fdivr
mov
ss
lock
jg
cmp
pop
rorl
xor
loopne
push
and
std
cmp
mov
mov
test
aas
sub
dec
cli
adc
cwtl
sub
mov
inc
bound
lcall
enter
and
bound
pop
rcrb
xor
pushf
nop
mov
pop
push
xchg
adc
imul
imul
test
mov
mov
loope
ja
dec
xchg
mov
test
pop
add
jno
adc
push
outsb
jns
out
mov
mov
jmp
pop
jle
sub
scas
cwtl
jl
push
popa
in
outsl
jbe
pusha
xor
pop
jg
dec
inc
or
pop
add
sbb
in
mov
inc
scas
popa
enter
mov
dec
dec
clc
add
cld
add
mov
cmpsb
dec
pop
and
sub
push
mov
sbb
sub
mov
loop
push
sub
pop
jmp
mov
mov
inc
mov
mov
inc
loope
push
pop
inc
inc
adc
sti
cmpsl
shl
scas
insb
in
icebp
out
hlt
pop
out
cli
or
rcrb
fmull
mov
fidivl
mov
call
bound
dec
popf
push
or
mov
ja
dec
lcall
mov
sub
jne
push
adc
xorb
sbb
cmp
rorl
dec
pusha
enter
jle
mov
scas
dec
js
in
roll
test
mov
sbb
ljmp
sub
or
inc
leave
outsb
fildl
int
push
adc
dec
xchg
mov
mov
clc
cmpl
push
in
gs
int
daa
or
data16
push
out
pop
or
mov
xor
movsl
pop
pop
dec
push
pop
xor
xchg
repz
fsubrl
add
hlt
push
mov
flds
inc
push
mov
pop
mov
dec
fs
test
imul
cmp
xchg
je
loopne
pop
mov
int
bound
jo
jge
loopne
xlat
xchg
fsubl
and
movsl
bound
xchg
mov
sbb
out
dec
lret
inc
dec
mov
fsubrl
mov
fistps
inc
cwtl
dec
and
jne
bound
mov
mov
aad
loopne
stos
out
mov
xchg
push
loope
push
fidivrs
sbb
into
push
sti
hlt
cmp
adc
stos
jp
cwtl
xor
arpl
lret
sarb
mov
cmp
xchg
mov
sub
stos
and
xchg
lods
pop
cmp
ret
inc
es
ljmp
outsb
cli
out
lret
bnd
out
outsb
js
mov
fwait
sub
in
push
stos
jb
ret
add
mov
imul
ds
pop
adc
sarb
sarl
out
out
test
mov
outsl
jg
ja
dec
inc
cmp
xchg
aad
inc
adc
sub
popa
xor
xlat
xchg
xchg
int
mov
pop
ret
popf
jns
loop
test
xor
sar
mov
cmpsl
push
add
outsl
xchg
js
std
lret
imul
mov
insb
mov
inc
cmc
test
and
pop
out
mov
mov
push
cmp
and
fdivr
pop
add
add
jmp
std
movsl
lods
mov
and
movl
inc
push
scas
add
mov
and
inc
mov
int3
test
inc
loope
mov
ret
pop
or
jno
dec
jecxz
test
xor
jns
pop
jnp
popf
cmc
sbb
xchg
dec
aaa
xor
jge
popa
je
push
enter
mov
aas
pushf
in
popa
or
sahf
dec
int
pop
out
in
pop
ds
std
push
pusha
dec
mov
sub
lds
adcb
fnstsw
loope
adcb
fsub
push
out
xchg
inc
mov
xchg
ds
outsl
xorl
or
fwait
xlat
adc
in
outsb
rcrl
pop
das
es
pop
pop
push
iret
add
or
ret
mov
or
adc
sub
xor
mov
leave
cli
jns
add
sub
leave
je
dec
cmp
and
movsl
arpl
clc
cli
mov
gs
add
and
les
sbb
push
xchg
sbb
data16
pop
lret
insb
lock
or
shlb
push
push
lods
sbb
pop
mov
mov
loop
fwait
outsl
mov
push
into
and
adc
cmp
dec
popa
jle
xchg
dec
and
adc
dec
jae
jns
mov
add
or
mov
xor
add
jge
scas
push
mov
xor
aam
negb
dec
and
push
popa
push
push
ja
pushf
xchg
fisubrs
lret
xorl
sub
push
je
inc
cmpsl
mov
push
xchg
cmp
mov
xchg
or
movsb
in
pop
and
inc
sti
adc
mov
lret
fisubrl
daa
inc
shlb
adc
and
pop
inc
add
movsb
pop
sbb
mov
nop
lods
cmpsl
jae
mov
cmpsl
inc
pop
fs
adc
dec
insl
adcl
mov
ss
es
addl
lret
adc
daa
push
add
xchg
jmp
rol
xchg
jbe
push
inc
clc
lcall
stos
arpl
les
mov
imul
push
in
shrl
shrl
mov
inc
push
sub
jge
mov
cmp
push
loopne
decl
dec
mov
mov
scas
xor
or
stos
movsl
paddb
push
mov
sti
mov
shl
adc
cli
xchg
pop
inc
sbb
xorl
icebp
mov
or
jns
mov
mov
ret
imul
ja
sub
fidivrs
pop
pop
inc
test
xor
jmp
sbb
sub
mov
lods
lods
mov
sub
fdivrs
mov
push
xor
sti
or
lock
lea
push
mov
cltd
xor
pop
xor
and
inc
jg
cmp
mov
and
pop
mov
cmc
jmp
cwtl
cmpsl
pop
pop
dec
outsl
imul
bnd
fdiv
push
or
sbb
test
push
leave
ja
or
hlt
outsb
fcomip
sti
movsl
loopne
in
cld
mov
inc
xor
test
jb
push
leave
xlat
out
sbb
inc
lds
jl
sbb
jge
xchg
mov
xor
add
test
adc
and
cmp
mov
push
popf
mov
cmp
mov
xor
rcll
xchg
andb
jne
dec
inc
je
pop
arpl
add
jle
jl
into
in
aas
sarl
inc
jbe
clc
push
add
mov
in
adc
mov
fmull
rorl
fidivs
inc
sbb
mov
cmp
clc
mov
or
lea
imul
mov
xor
cvtdq2ps
mov
outsb
adc
push
pop
xchg
aam
cmp
mov
xchg
jnp
lahf
or
jo
mov
leave
pop
arpl
push
or
lahf
jno
sub
cmpsl
test
leave
aad
adc
push
mov
in
fcompl
repz
imul
xlat
out
fisubrs
push
xchg
pmaddwd
test
inc
clc
cs
rolb
fiadds
sub
nop
scas
and
and
out
je,pn
jecxz
fisubl
in
push
lret
xor
add
and
lods
sbb
repz
and
iret
out
lcall
bound
mov
jnp
inc
dec
std
leave
jno
out
movsl
add
sbb
xor
jne
scas
inc
mov
das
outsl
out
aaa
lcall
flds
mov
fcoml
pop
outsl
inc
sub
push
je
mov
push
xchg
rclb
out
dec
xchg
leave
sbb
shrl
subb
scas
leave
mov
xor
in
jmp
jge
subps
cmpsl
mov
cli
xor
pop
xor
xchg
pop
adc
in
xchg
mov
js
cmp
out
les
int3
stc
add
fadds
rolb
or
pop
in
sub
cmp
jno
push
stos
mov
pop
outsl
hlt
or
cmp
fwait
mov
leave
pop
cltd
pop
stos
in
es
int3
insl
jbe
cmp
int3
lcall
xor
int3
inc
cld
jmp
jle
dec
scas
jns
shrb
das
mov
sahf
sbb
icebp
fsubrs
jle
cmpsb
xchg
xchg
adc
scas
outsb
in
js
daa
pop
pop
inc
push
mov
xchg
sub
inc
push
in
movsl
testl
pop
mov
cwtl
addr16
aaa
jg
push
in
mov
call
sub
add
mov
adc
dec
sbb
add
shlb
xor
scas
lcall
jbe
mov
jb
xchg
mov
lods
aad
cmpsl
push
test
jecxz
inc
les
mov
dec
sbb
stos
bound
shlb
sti
mov
in
nop
cmpsb
xchg
jns
in
sub
inc
stc
mov
xchg
mov
enter
roll
adc
stos
mov
cmpsl
sahf
xchg
or
int3
stos
adc
jmp
into
hlt
jb
ds
or
xchg
jge
call
fildl
decl
test
xor
adc
pop
int
insl
push
mov
or
adc
push
in
cmc
pop
inc
aam
xchg
pusha
lods
mov
xchg
shlb
adc
lahf
dec
pop
push
add
outsb
jns
bound
cmc
push
mov
imul
fbstp
push
jno
std
push
aam
mov
mov
sub
push
inc
fs
jmp
push
add
stos
and
jno
xchg
inc
adc
rcll
pop
add
jmp
pushf
ss
add
sbb
cs
fstl
mov
ds
inc
sti
mov
sbb
out
scas
inc
fisttpll
aam
ret
popf
inc
addr16
xchg
sub
mov
testl
jp
or
lock
or
lock
sub
stos
jmp
scas
jge
sbb
cld
out
shlb
sbb
jp
or
xor
popa
incb
and
mov
or
push
pop
add
int3
cmp
loopne
push
out
dec
ret
addr16
and
pusha
loop
loop
and
pusha
sub
xchg
popa
xchg
addr16
lahf
jae
into
adcb
es
bnd
mov
nop
or
scas
addb
call
xchg
and
pop
into
xchg
add
and
flds
push
xorb
sub
mov
mov
fmull
dec
add
movsl
scas
inc
pop
push
adc
gs
nop
fwait
fs
inc
rclb
inc
sbb
and
and
xchg
imul
jnp
push
test
sbbb
aas
cmp
insb
fdivl
cli
data16
xor
leave
test
pusha
stos
test
mov
push
or
jae
xor
fldenv
loopne
lahf
or
lods
xchg
scas
dec
and
shll
xor
jo
lret
leave
addb
xlat
clc
lret
js
sbb
popf
adcb
xchg
loop
xor
lcall
std
xchg
sbb
push
inc
mov
xchg
and
imul
push
aad
loop
test
in
or
nop
pop
call
xor
jp
ljmp
push
clc
jbe
into
mov
mov
inc
insb
mov
push
fidivrs
int
mov
cmp
mov
adc
repz
les
jmp
mov
inc
xchg
mov
xor
mov
xor
pop
push
loopne
inc
frstor
sub
pop
pop
in
sub
bound
jle
ss
sbb
shrl
test
mov
and
mov
jge
jl
cmp
rorb
in
cmp
xor
push
rcrl
rclb
xor
icebp
push
xor
rcrb
mov
cmp
jmp
sub
adc
mov
or
cmp
test
fwait
cmp
call
and
push
mov
inc
lock
insl
lods
pop
movsb
es
repz
pop
add
fs
adc
scas
ret
add
lods
inc
sahf
xor
sbb
inc
inc
subl
sbbl
xor
xchg
push
push
outsl
movsl
adc
out
out
xchg
pop
pop
dec
orl
jle
fldenv
icebp
daa
sbb
iret
mov
ds
mov
xchg
add
dec
fwait
stos
mov
add
or
mov
sbb
sub
fiaddl
movsl
jecxz
insl
inc
cli
popa
js
xor
hlt
movsb
into
xchg
pusha
mov
movsb
ds
xor
shr
insb
mov
mov
xchg
lds
pop
addb
push
push
push
mov
push
pushf
jl
rclb
or
data16
ljmp
xchg
mov
mov
sti
xchg
sbbl
movsl
xlat
int
push
sub
test
dec
imul
call
or
hlt
inc
sbb
jge
dec
inc
stos
adc
push
or
ret
sub
lods
dec
pusha
jnp
nop
daa
xlat
dec
mov
pop
int
xor
mov
sar
jg
sub
mov
stos
mov
dec
hlt
repnz
and
pop
and
fstpl
je
je
in
popa
movsb
push
out
sub
push
jb
push
repnz
fdivr
and
jno
and
fstps
inc
in
fldcw
fwait
mov
pop
jae
lock
js
adc
orl
or
fucomip
movb
cmpsl
jo
ret
xchg
lahf
pusha
push
or
cmpsb
mov
rcl
repz
push
sbb
sti
mov
dec
inc
mov
lret
inc
mov
sbb
pop
or
mov
ret
pusha
pop
lcall
pop
mov
adc
mov
mov
cmp
lcall
push
mov
xorb
mov
movsl
aaa
mov
xchg
ret
addr16
sbb
mov
and
jne
pushf
loop
mov
mov
insl
jp
jmp
xor
adc
add
popf
aam
mov
inc
popa
fdivrp
loope
mov
loope
mov
arpl
cmp
dec
jo
mov
testl
in
mov
xchg
cmp
ret
mov
cld
aaa
adc
jp
lods
mov
mov
hlt
stos
adc
mov
lock
and
add
mov
and
inc
cmp
dec
sub
cmp
dec
ss
js
sbb
sbb
push
inc
clc
push
in
add
mov
int3
dec
sbb
xor
fstpl
es
insb
pop
in
xchg
pop
insb
mov
daa
pop
in
repnz
test
aam
lods
adc
arpl
inc
sti
loopne
sbb
and
aaa
roll
ljmp
icebp
pop
xor
data16
xchg
sbb
add
imul
xchg
push
hlt
inc
lods
push
pop
sbb
dec
push
jns
mov
stos
fstpl
repnz
mov
push
outsl
getsec
lret
inc
mov
cwtl
inc
pushf
dec
jbe
push
push
enter
pop
popa
add
ret
aaa
sbb
push
andl
cltd
sub
out
ret
push
sub
inc
shrl
ljmp
pop
and
cld
inc
push
xlat
out
jmp
and
fidivrs
bnd
addr16
sub
cmp
xchg
shlb
rcrl
in
dec
jbe
add
pop
cmp
in
pop
pop
aaa
cld
stos
pusha
cld
or
xchg
cs
daa
mov
add
add
xor
sarl
mov
ret
test
push
call
mov
lcall
fcmovnbe
rcl
jl
jg
cmp
add
aas
jmp
hlt
jg
sbb
bound
mov
test
cld
scas
sbb
lret
sbb
loope
lret
cmc
push
pop
dec
xchg
std
enter
into
leave
arpl
enter
sahf
mov
push
aam
fcmovb
and
ficomps
sbb
test
fnstsw
je
and
and
in
fisubs
pop
mov
dec
mov
mov
icebp
pop
dec
or
pop
addb
icebp
inc
xchg
or
sbb
mov
test
ljmp
jbe
xchg
shlb
xor
mov
push
mov
adcl
mov
add
lods
ffreep
jo
xor
dec
cli
outsb
xchg
jecxz
push
aam
add
mov
jnp
or
push
cmpsb
setae
mov
loop
test
mov
icebp
dec
andb
jp
insb
lock
push
and
fnsave
fildll
loope
imul
repnz
add
and
xlat
inc
dec
mov
scas
cmp
out
shll
and
stc
pop
push
inc
sbb
pop
fdivs
cmp
leave
adc
call
jl
pop
outsl
test
cmp
cmp
jl
jb
out
subl
sbb
jl
mov
and
int3
movsl
cld
or
pop
mov
inc
cmpsb
out
lret
mov
out
mov
or
test
add
shl
cwtl
sbb
stos
fiadds
and
xchg
cmp
mov
mov
jge
cmp
sbb
stos
adc
pop
popf
rcll
pop
test
xchg
jns
pop
inc
xchg
mov
cs
sbb
call
adc
fucomp
imul
push
push
mov
orb
cmc
push
stc
pop
and
xchg
mov
push
cwtl
and
dec
imul
mov
jo
out
jne
pop
mov
cmp
inc
adc
cmp
in
cmpsl
pusha
iret
jb
adc
mov
ret
jge
mov
lods
notb
and
scas
lds
pop
xchg
xor
js
out
fmulp
fwait
ss
xchg
out
xchg
scas
and
aaa
inc
fwait
mov
loope
adc
sarb
lods
sarb
add
inc
ljmp
mov
jne
dec
into
xchg
mov
jp
out
push
aas
aaa
adc
push
mov
mov
push
es
cmpsb
clc
xchg
shrl
cmp
addr16
adc
pusha
and
bound
mov
adcl
rclb
cmp
aam
stc
ljmp
pop
mov
js
aad
fisubrl
xchg
ret
jg
ljmp
and
pushf
mov
ja
xchg
sbb
into
jge
cmp
ret
push
scas
shll
ret
rcll
out
bound
mov
jne,pt
negb
jmp
cwtl
out
popf
or
adc
mov
addr16
sbb
jmp
add
mov
subl
push
loopne
jnp
scas
add
mov
push
mov
pop
sub
xor
imul
pop
fwait
outsb
fadds
nop
jo
in
fnsave
and
sbb
inc
inc
sbb
addr16
nop
jne
mov
fldcw
icebp
arpl
adc
in
dec
xchg
shll
mov
xor
jl
ss
adc
add
mov
popf
xchg
xorb
dec
adc
les
and
out
out
ret
aam
xchg
adc
cmp
out
jg
mov
fsubrs
pop
push
int
push
imul
aas
cltd
arpl
push
pushf
outsl
xor
test
adc
push
jmp
fmul
jle
int3
inc
push
add
and
ljmp
mov
mov
lods
push
ror
sub
pop
jns
stos
outsl
fbld
pop
mov
jmp
ret
iret
leave
dec
jp
adc
out
adc
push
les
sbb
outsb
adc
pop
or
ljmp
out
pop
loop
sub
xchg
mov
scas
enter
je
inc
adc
jmp
lock
mov
add
jl
xchg
adc
and
in
iret
inc
mov
sbb
inc
in
mov
fucom
loopne
fcmovne
sbb
int
das
orl
mov
cmp
lea
loope
enter
xchg
dec
mov
in
fwait
mov
or
dec
dec
pop
pop
sbb
incl
pop
dec
loope
sbb
pop
imul
inc
aad
xchg
push
in
dec
xchg
pop
dec
sysret
repz
xchg
or
mov
jmp
and
fldcw
xor
fidivrl
ja
sbb
mov
std
pop
dec
nop
fldcw
jae
outsb
and
inc
dec
sub
jne
xor
js
mov
inc
mov
jne
addb
push
scas
negl
popa
push
stos
cld
mov
out
sti
pop
popf
icebp
adc
push
xchg
xor
cmp
or
int
sub
mov
jnp
jl
aad
mov
jns
cwtl
xor
mov
fs
stc
ja
fsubrl
andb
push
hlt
inc
jo
mov
clc
rolb
jne
inc
out
pop
test
inc
pushf
stos
clc
out
inc
push
mov
mov
in
ljmp
aam
sti
incb
dec
aaa
fcmovne
and
push
or
dec
jge
mov
push
and
insb
add
stos
adc
cmpsl
jns
add
scas
int
test
pop
mov
dec
jl
adc
mov
push
ficompl
xor
or
or
sub
inc
jp
jae
jns
repz
pop
std
inc
mov
imull
mov
cs
inc
push
das
sbb
iret
imul
push
cmp
imul
lret
or
fnstsw
xchg
icebp
stos
dec
cmp
or
imul
ljmp
xchg
sub
rcr
lods
movsl
xor
pop
xor
call
movsl
clc
or
fldenv
out
int3
xchg
or
je
pop
addl
pusha
mov
scas
imul
arpl
jl
out
mov
adc
popa
sbb
pop
inc
cmp
sub
sbb
mov
xlat
loopne
jne
cmp
inc
sahf
out
aam
push
inc
cwtl
mov
cwtl
sarl
push
dec
mov
xor
add
int3
mov
jae
sub
xchg
xchg
jmp
pop
adc
xchg
int3
mov
fnsave
scas
push
cmp
sub
mov
and
aam
jb
popf
ja
cmp
cmp
repnz
fnsave
testb
popa
insl
or
lcall
cmpl
out
mov
or
mov
pop
scas
adc
icebp
sub
add
movsl
int3
xchg
loopne
sahf
sti
jno
jno
push
jmp
dec
inc
fldcw
and
imul
ljmp
lahf
subl
push
push
pushl
daa
jno
in
pop
inc
ljmp
bound
test
sbb
mov
xor
mov
push
out
and
push
mov
push
pop
ja
and
cmpb
mov
xlat
pop
cltd
popa
lds
push
cwtl
mov
sbbb
pop
mov
adc
mov
out
add
xchg
xor
vmovd
icebp
fsubrs
push
mov
call
addr16
xchg
pop
cmp
jmp
imul
fidivs
inc
pop
mov
pop
shrl
and
jp
dec
inc
and
imul
js
js
loop
imulb
push
sbb
push
jmp
xchg
jmp
shll
sub
sti
and
add
lahf
popa
xchg
push
jo
push
inc
sub
adc
push
jmp
xor
fisttpll
lcall
mov
mov
mov
cli
push
mov
inc
fs
jp
push
inc
out
rcll
xor
adc
xchg
dec
loope
push
into
in
jp
jae
add
dec
push
nop
leave
and
push
daa
cmp
movsl
into
fwait
pop
fists
out
sbbl
aad
lret
fisttpll
pop
shlb
xor
cs
push
jle
cwtl
outsb
xchg
icebp
pop
popf
ror
jmp
hlt
loopne
popa
push
fisubl
mov
popf
scas
ja
jl
out
mov
call
test
mov
stc
fisubl
push
mov
mov
js
mov
lods
add
sbb
mov
xchg
lods
in
loope
pop
int3
outsb
cmp
repz
sahf
insl
jo
push
and
addl
xor
xchg
in
mov
stc
jg
xchg
inc
and
inc
scas
movsb
ret
lds
fisubrl
sbb
push
lea
xor
stos
mov
stos
out
imul
push
mov
inc
mov
ljmp
les
sti
loope
outsb
lret
test
fstps
cmc
cmc
adc
xchg
cmp
aaa
test
mov
and
test
xchg
push
push
in
leave
mov
hlt
cmp
in
cmp
repz
pop
mov
pop
fstl
call
lds
jg
cmpsl
addr16
pusha
mov
movsb
jecxz
add
add
call
std
jmp
call
mov
and
aas
aad
das
jp
mov
mov
jle
push
xchg
xor
or
ret
mov
dec
and
ret
jp
call
pushf
add
loopne
add
dec
push
and
out
call
xor
gs
mov
adc
fcoms
es
cmp
jmp
enter
out
pop
jbe
in
insb
js
ljmp
sbb
xchg
jne
mov
or
sbb
push
mov
je
insb
das
jp
cli
inc
lock
push
leave
cmp
bnd
sahf
loope
hlt
sbb
and
aas
and
cltd
addr16
notl
adcb
or
ficoml
jmp
mov
or
mov
loopne
clc
je
mov
nop
inc
mov
mov
out
xchg
lock
sbb
jo
dec
inc
shl
push
aas
mov
cmp
xchg
push
push
sub
push
jmp
je
xchg
jg
add
into
push
ja
xchg
xchg
mov
jp
pop
dec
je
shlb
out
int3
rorl
sub
incl
jecxz
sub
repz
mov
mov
test
cmpsl
cmp
mov
cmp
jne
and
add
enter
xchg
imul
ja
pushf
das
push
es
inc
push
lcall
or
jecxz
inc
push
mov
out
pop
mov
cwtl
or
or
mov
push
stos
dec
hlt
insb
outsl
imul
jae
jle
addb
mov
pop
mov
xchg
sbb
mov
dec
mov
dec
dec
add
out
add
mov
or
incl
shll
out
in
subb
add
adc
inc
push
xchg
inc
pop
daa
add
mov
stc
push
or
sub
mov
imul
mov
fistps
sbb
jns
je
bound
aaa
lock
lret
push
lock
inc
stos
cmpsb
push
ljmp
mov
jg
xchg
in
and
movsl
xor
push
mov
adc
xchg
cwtl
jmp
pushf
dec
add
pop
jne
cmovns
ret
jecxz
inc
adc
in
scas
mov
adcl
jmp
je
add
sbb
adc
and
dec
pop
lods
mov
adc
adc
loopne
lahf
xor
pop
bound
mov
out
lds
aad
in
es
inc
jmp
inc
adcl
cltd
into
mov
or
cmp
adc
clc
pop
pop
lret
inc
pop
mov
adc
popa
mov
sti
sarl
xchg
pop
shrd
mov
adc
sbb
sbb
repz
sbb
mov
push
pminub
mov
or
inc
clc
jge
sub
mov
cmp
and
cmp
outsb
pop
or
push
pop
es
sbb
add
out
sbb
jb
rcl
jne
fists
ret
das
cmpsl
aaa
imul
mov
mov
xor
testl
pop
cmpsl
ret
jb
sbb
rcr
mov
sub
popa
popa
xchg
inc
fnstsw
imul
cmp
mov
add
mov
cltd
push
insb
sub
int3
add
sub
add
mov
ljmp
xor
push
out
dec
mov
repnz
dec
cld
push
xor
in
lea
add
pop
fwait
jne
push
sbb
xchg
sbb
int3
inc
mov
inc
ds
js
into
adc
icebp
xchg
cmp
dec
xor
cli
aaa
outsl
rcrb
cwtl
inc
sbb
jmp
test
je
lret
mov
leave
mov
cmp
mov
cmpsb
mov
add
xchg
leave
dec
pushf
in
mov
not
popf
addr16
jno
jno
test
push
add
adc
fldcw
jne
mov
xor
loope
dec
enter
popa
sub
xorl
in
imul
cmp
scas
push
lods
sbb
push
pop
cs
test
test
adc
and
xorb
loop
cli
bound
xchg
fldl
mov
pop
dec
fwait
push
sub
xchg
jl
stos
es
orb
sub
rcrl
xor
cmp
ljmp
cmp
sbb
int3
add
test
push
jecxz
jge
icebp
push
push
cmp
jle
or
or
or
adc
inc
ja
lds
icebp
in
push
call
xchg
xor
mov
mov
xor
push
pop
pop
aas
add
cmp
mov
cltd
ud0
inc
cmp
sub
mov
or
dec
xlat
out
out
sub
xchg
sub
cwtl
pop
or
scas
xchg
fnstsw
jne
pop
les
jl
in
jle
movsl
mov
and
imul
pushf
push
ret
cs
pusha
int
scas
ds
lea
jno
pop
sbb
int3
mov
push
xchg
sub
jl
and
adc
add
mov
jp
pusha
lret
imul
sbb
push
xchg
mov
mov
mov
inc
lahf
out
xchg
inc
mov
dec
int
test
push
icebp
mov
insl
shrb
xor
roll
je
test
push
dec
pop
push
push
cli
adc
lock
mov
mov
push
into
es
cld
dec
inc
mov
xchg
dec
mov
popf
repz
inc
cmpsl
lcall
enter
dec
xchg
xor
mov
adc
addr16
outsb
add
icebp
in
lcall
inc
loopne
aas
sbbb
lds
in
shrl
rep
repz
std
mov
xchg
js
mov
fstps
cmp
adc
mov
push
sbb
sahf
jnp
add
lock
sub
in
mov
sbbb
xchg
icebp
rcr
xor
jp
mov
iret
xor
jp
sub
add
in
lock
xchg
fwait
scas
xchg
cmp
scas
call
lea
mov
out
icebp
shl
pop
sar
out
push
in
test
int
jne
pop
cmpsb
movsb
push
pushf
xor
xchg
popf
and
jl
leave
sbb
repnz
lods
adc
push
mov
imul
imul
push
js
mov
dec
loope
or
and
inc
out
jp
pushf
dec
xchg
daa
stc
test
cmp
fcoms
add
adc
ja
out
sub
adc
push
fistps
push
sti
cwtl
out
inc
or
inc
mov
add
xor
sarl
push
stos
inc
xor
fisttpll
mov
ret
jns
fldt
fcomp
ljmp
out
or
mov
xchg
xor
jbe
mov
out
lret
arpl
cwtl
addr16
cltd
xchg
or
jne
movsl
mov
mov
cmp
jmp
in
jb
pop
leave
sub
jmp
or
sbb
jnp
inc
daa
rcl
push
push
or
into
sbb
push
movsl
push
inc
jp
leave
sbb
mov
lahf
pushf
out
movsb
adc
outsl
adc
int
pop
stc
rcl
clc
lock
pop
push
adc
and
lea
mov
shlb
or
ror
fstp
fistpll
lcall
repz
cld
inc
xchg
cmp
or
popa
movsb
jnp
add
cmc
jmpw
cmpsb
test
cmp
pop
cmp
jne
in
inc
movsl
scas
setbe
cmp
lock
jno
shl
mov
lcall
ljmp
inc
inc
std
clc
fidivrl
roll
test
cmp
cmc
inc
and
cmc
mov
sahf
stos
movsl
and
aas
repz
sti
dec
push
jbe
xlat
loop
fcompl
fstpl
in
mov
or
fs
adc
mov
mov
rolb
stos
out
push
xchg
cltd
roll
mov
push
arpl
sbb
jo
rorb
test
inc
imul
xor
lret
mov
add
cmp
cmp
out
mov
adc
jae
pop
lret
or
or
std
fidivl
into
inc
rcl
jp
or
jne
inc
into
xchg
mov
sti
pop
jns
push
pop
sbb
push
enter
push
pop
mov
lret
mov
sbb
cs
xor
push
cmp
in
xchg
sbb
adc
xor
xor
test
ret
lods
or
call
out
push
xchg
sarl
enter
push
cmp
jnp
hlt
sbb
pop
pop
out
add
sti
rcr
lods
lret
mov
mov
inc
jno
sti
pop
inc
xor
mov
out
ret
pop
test
or
cmp
scas
fwait
ret
push
pop
ja,pn
add
mov
sbb
xchg
incl
push
rcr
fwait
mov
mov
dec
insl
pop
xor
lahf
aad
arpl
add
mov
pushf
mov
jne
loopne
daa
and
sbb
mov
cltd
jne
sub
popf
add
xor
es
pop
cmp
cmp
dec
mov
dec
or
imul
clc
cli
and
dec
xchg
dec
int
jo
inc
pushf
insb
inc
icebp
xor
test
xchg
nop
fldcw
pop
and
fldenv
aad
push
mov
push
mov
or
nop
aam
inc
mov
mov
lds
cltd
fdivrs
mov
jl
sub
stos
pop
enter
inc
adc
pop
sti
loopne
or
jnp
sahf
je
or
cmpsb
sahf
xchg
lret
lret
lods
dec
jns
out
cmp
nop
inc
mov
stos
es
pop
scas
jno
xchg
add
sbb
das
test
and
push
mov
adc
dec
addr16
jo
push
adc
xor
push
mov
pop
shrl
cmp
subl
or
aaa
sub
dec
dec
dec
rcrl
mov
into
mov
and
adc
std
push
imull
mov
cmp
mov
clc
adcb
jo
std
popa
push
xchg
and
push
pop
rolb
clc
push
mov
jecxz
cmpsl
je
sub
lods
fiadds
xor
pop
sbb
and
sub
fstl
jecxz
and
mov
in
mov
in
add
out
push
inc
lahf
aam
fsub
es
loope
jl
mov
jge
loopne
adc
sahf
je
cwtl
or
jg
and
jb
cmp
call
loope
gs
bound
xchg
mov
push
pop
mov
pop
push
rorb
insb
ret
sbb
inc
cmc
fdivrl
xor
ret
xor
xlat
jge
pop
popa
jbe,pn
les
orl
xlat
bound
loope
xchg
mov
outsb
fisttps
test
ret
mov
pop
lret
scas
pop
ds
cmpsb
cmpl
aad
sbb
or
pop
cmpsl
sub
mov
or
or
dec
adc
dec
dec
xchg
xorl
out
sub
clc
insl
bound
mov
xchg
out
push
adc
test
xor
mov
loope
imul
mov
mov
scas
pop
xchg
mov
rorb
dec
jmp
pop
cli
mov
xchg
cmp
adc
es
jle
shll
into
mov
mov
lea
out
aam
mov
sbb
out
ret
jmp
push
scas
inc
mov
xchg
sti
fisubrl
sbb
jae
lret
fisubrs
xor
test
xchg
jno
cs
xchg
scas
jb
ret
push
dec
fdivrl
and
andl
lods
ficoml
push
push
xchg
xchg
cmpl
jb
add
insl
jb
sub
mov
mov
mov
sub
or
gs
push
cli
sahf
lahf
int
pop
dec
nop
movsb
dec
sub
inc
daa
shll
rolb
stc
xlat
adc
in
dec
scas
clc
adc
test
sub
cld
addr16
dec
mov
mov
fwait
mov
dec
aas
pop
inc
int3
fisttps
jae
cmp
insl
xchg
mov
jge
repnz
mov
loopne
inc
loopne
push
je
rcll
xchg
jmp
in
lock
xchg
arpl
jle
fcoml
sub
pop
pop
shll
pop
pop
or
inc
out
scas
mov
cmovb
ljmp
jmp
add
add
sbb
gs
nop
dec
fisubrl
adc
add
push
adc
out
sarb
mov
push
xchg
dec
pop
mov
sbb
aam
dec
pop
mov
inc
in
inc
fiaddl
fmul
mov
ja
pop
das
push
rdmsr
pusha
testl
add
popa
cmp
sub
popf
ja
pop
adc
add
sub
adc
and
fs
fs
stos
ja
dec
jp
imul
in
std
add
fcmovb
shlb
cmp
push
xchg
sahf
cmp
mov
mov
push
adc
je
out
and
sub
lcall
add
mov
stos
inc
imul
sub
popa
dec
xlat
popf
jmp
imul
xchg
jmp
add
dec
test
fcoms
ss
pop
outsl
jmp
iret
add
cs
loope
sarl
movsb
jbe
sub
adc
jnp,pn
and
clc
test
and
cmp
mov
dec
pushf
in
and
add
fwait
shlb
das
adc
ds
loopne
orps
jne
push
mov
mov
leave
jmp
adcl
xchg
xor
out
out
sti
call
mov
fsubp
add
shr
loope
xor
fwait
add
cmpsl
cs
mul
cmp
outsb
std
jne
inc
dec
test
add
daa
dec
call
movb
and
mov
cmp
std
roll
inc
adc
sbb
pop
stc
push
lret
jecxz
push
lea
cltd
out
jge
in
aad
mov
mov
js
das
push
mov
or
pop
xchg
test
test
daa
pop
insl
stos
loop
in
lods
pop
jg
or
into
cmp
xchg
and
outsl
les
addr16
test
sahf
int3
push
jp
jle
jbe
das
mov
inc
push
xor
adc
jne
incb
add
stos
mov
rclb
je
jbe
mov
rorl
test
sub
test
xor
xchg
dec
xor
cmc
push
test
pop
enter
les
icebp
mov
mov
call
mov
or
ret
fimull
bound
sub
aas
mov
leave
test
mov
les
loop
mov
daa
ljmp
and
inc
nop
fsubp
pop
aaa
cmp
mov
stos
cmpl
aad
aaa
mov
out
aas
adc
scas
mov
iret
jne
push
lock
dec
fwait
mov
fnstcw
mov
hlt
pop
add
lret
mov
add
cmpsb
mov
loope
push
xchg
inc
jle
cwtl
lods
sbb
jno
ja
add
jb
sub
xor
and
lret
jl
dec
pop
ja
pop
jle
mov
adc
aaa
stos
pop
scas
or
mov
pop
sbb
test
stc
push
sbb
imul
loop
xchg
ficompl
scas
mov
lods
and
mov
sbb
cld
scas
aas
test
sbb
cmp
test
sbb
mov
jb
iret
in
mov
mov
cmp
add
push
lret
cwtl
nop
dec
imul
jb
jmp
xor
ja
pop
xchg
dec
and
ficoml
sarl
lods
divb
sarl
sub
cmp
or
xor
js
xchg
popa
push
add
sti
aaa
bound
jb
and
jge
pop
cld
add
aam
lock
mov
adc
xor
xchg
push
push
scas
into
adc
in
rcll
inc
sbb
sbb
mov
icebp
test
mov
sbb
je
inc
pop
lock
repz
xchg
inc
loope
lahf
js
rorb
xchg
push
es
cld
sbb
jo
xor
adc
jne
pop
lock
fstps
inc
mov
jle
mov
dec
jb
xchg
xchg
sub
ror
sub
jecxz
nop
rcrb
cmc
cmp
arpl
add
push
rclb
mov
jecxz
inc
fdivrl
inc
sub
aas
jl
jno
sbb
test
fstl
mov
mov
dec
sub
jae
mov
cltd
dec
dec
in
js
cmp
xlat
mov
addr16
sub
scas
out
xor
sbb
test
sbb
sbb
cmp
push
pop
mov
jp
cmp
mov
or
icebp
insl
loop
stos
icebp
fsubl
leave
push
cwtl
or
shlb
jmp
sub
cmp
cmp
mov
sarl
cmp
xor
sub
pop
xor
inc
inc
cmp
leave
mov
sbb
leave
inc
jae
adc
cmc
jnp
nopl
ret
fsubrs
inc
call
sti
call
test
lods
xor
test
pop
out
cmpb
lds
lods
shrb
pop
aaa
orb
ret
in
mov
dec
popf
pop
sbb
xor
add
stc
test
lret
loope
mov
xchg
dec
sbb
dec
fsubr
xchg
dec
sbb
jns
mov
add
cmp
or
cltd
lock
movsb
lret
out
add
shufps
mulb
lock
arpl
add
sub
xchg
aaa
mov
insl
jmp
jno
test
test
cmp
add
pop
out
pusha
xchg
mov
outsl
push
cmc
inc
xor
movsb
or
xor
scas
xor
jb
popa
clc
std
orl
loope
arpl
aad
jb
fld
jbe
mov
cmpsl
mov
sbbb
retw
pop
jge
in
fldl
and
and
clc
inc
xchg
and
in
fisubs
xlat
cmp
pop
call
sub
sbb
loop
fs
adc
inc
xchg
push
pushf
xchg
iret
inc
jle
mov
add
cmp
clc
xlat
lea
in
mov
dec
mov
mov
mov
icebp
scas
aam
xchg
repz
in
or
ret
mov
arpl
int
aad
out
mov
and
les
mull
aas
xchg
xchg
loopne
lret
jns
xchg
dec
aaa
cwtl
negl
jg
and
inc
cmpsb
push
pop
sub
popf
xchg
cld
adc
pop
nop
ljmp
xchg
xorl
pop
inc
mov
aaa
jnp
mov
sbb
pop
push
pop
push
or
sbb
inc
rcrb
fadds
popf
adc
jae
xor
rolb
inc
iret
pop
and
mov
les
call
pop
dec
outsl
cld
and
int3
cmpsl
inc
add
in
xor
cmp
mov
std
or
mov
int
lea
push
add
add
sti
adc
rclb
sti
xchg
xchg
lods
sub
mov
int3
dec
sub
mov
dec
adc
sarl
pushf
daa
in
hlt
mov
rol
arpl
sub
cltd
mov
inc
es
cmp
xor
xor
xor
das
xchg
mov
das
movl
fsts
ret
add
movsl
mov
adc
sbb
and
in
mov
lret
ds
cli
int3
fwait
sbb
popa
inc
cltd
adc
mov
pop
scas
push
in
push
jmp
aas
adc
mov
mov
js
mov
in
inc
and
test
enter
insl
inc
scas
icebp
in
dec
push
jle
xlat
ficomps
lcall
fwait
dec
divl
int3
in
add
mov
mov
xor
pop
push
and
jl
lahf
and
subb
bound
int
enter
add
stos
mov
sub
daa
sbb
arpl
loop
or
dec
add
adc
lea
aad
ret
pop
scas
scas
mov
mov
sub
stos
xchg
dec
jmp
jmp
xchg
fldt
addr16
lock
mov
aas
bound
lret
cmp
stc
jo
ret
mov
daa
mov
pop
mov
jo
and
mov
pop
inc
int
adc
nop
ret
je
call
daa
cmc
pop
lock
mov
imul
cmp
sub
je
xchg
shll
popa
stc
jp
cli
in
pop
pop
push
pusha
pop
push
repz
jg
xor
data16
clc
out
and
sub
in
bound
ds
push
adc
ljmp
movsb
jp
inc
adc
or
shrb
dec
add
jg
lds
jmp
jne
mov
or
inc
mov
adc
cwtl
jno
leave
loope
cmp
fst
xchg
or
adc
enter
movsb
ja
or
lock
xchg
sub
mov
jmp
pop
xchg
es
pushf
cmp
popf
out
cs
push
int
test
mov
push
dec
in
mov
push
cltd
repnz
dec
cmp
jns
xchg
cwtl
pusha
ja
add
xor
int
jbe
ja
adc
xor
push
fnstenv
stos
dec
dec
pusha
xchg
inc
mov
popf
mov
mov
sub
and
outsb
jb
repnz
push
into
push
jle
or
dec
les
mov
clc
loopne
jl
jle
mov
stos
xchg
xchg
ret
popa
pop
iret
arpl
test
mov
mov
dec
xor
in
sbb
negb
es
and
pop
sti
jnp
nop
addr16
ds
jg
add
test
scas
sub
shrl
movsl
mov
push
push
mov
or
pop
xor
xchg
pop
ficoms
cli
mov
add
lahf
pusha
lret
movsb
popa
inc
cli
fdivs
hlt
in
in
lret
jecxz
ret
out
xor
jl
sbb
cmp
xor
and
mov
in
mov
push
rcl
push
sarl
imul
inc
dec
or
orb
dec
ss
mov
idiv
shlb
dec
or
mov
push
dec
ret
orl
movsb
in
lods
lea
xor
sarb
dec
popf
adc
in
or
cli
js
add
mov
sub
xchg
int
cld
or
pop
sbb
scas
or
lds
xchg
xorb
in
imul
dec
aas
pop
push
ret
push
inc
into
daa
lock
lahf
push
or
mov
adcl
mov
sbb
in
adc
fstpt
nop
fwait
mov
push
ds
sbb
xchg
push
mov
xchg
notb
cmp
movsl
das
mov
popl
movsb
sahf
jl
aad
dec
cmpsl
inc
adc
insb
scas
push
mov
pop
push
lock
sahf
add
std
sbb
pop
je
and
lret
pop
mov
repnz
mov
lds
xlat
roll
out
dec
jge
or
cmp
jbe
dec
pop
lahf
mov
inc
jbe
push
dec
push
mov
stos
movsl
arpl
lock
dec
bound
and
jnp
xlat
push
push
xchg
lahf
xor
xor
and
out
std
pop
mov
pop
push
add
or
push
and
cmp
xchg
mov
sbb
sub
mov
int
imul
pop
mov
icebp
sbbl
jno
insb
test
daa
stc
dec
dec
adc
cli
cltd
cmpsl
fistpl
push
lods
xchg
movsb
aad
ss
sbb
push
pop
out
in
mov
orb
xchg
mov
gs
sub
fdivrl
rorb
idivb
ret
ror
ret
xchg
mov
push
mov
xor
popf
mov
outsb
lahf
mov
imul
push
pop
fucomp
and
sbb
xor
add
xchg
pop
gs
cmp
mov
cmp
pop
or
fbld
gs
iret
pop
loopne
mov
mov
clc
mov
push
cmp
pusha
test
hlt
adc
sub
push
arpl
adc
push
daa
push
loop
fs
pushf
and
inc
jge
xor
xchg
fisubrs
test
frstor
in
jmp
bound
or
sbb
shrb
cmc
xor
mov
xor
pop
xor
xchg
push
cmp
addr16
cmp
add
jae
mov
stos
xor
les
sub
mov
sub
push
cmp
mov
add
mov
fdivrl
mov
inc
test
repnz
sti
sti
mov
jecxz
sbb
jmp
dec
or
mov
lods
mov
xor
rcrb
das
in
ftst
jp
das
push
fisttps
ljmp
aaa
and
dec
cmpsl
test
stos
xchg
mov
loope
fs
inc
sbb
in
mov
inc
cmp
jne
push
int
jns
cwtl
popf
and
jge
rcr
sub
inc
cmp
inc
xchg
fdivr
sbbb
push
pop
hlt
jp
mov
cmp
push
dec
xchg
xchg
cltd
push
push
pop
sti
in
sahf
rol
jg
or
aaa
movsl
lock
xor
fmul
dec
or
xchg
adc
sub
pop
ficoml
aad
outsb
jne
and
push
jecxz
add
jb
pop
loop
jmp
adc
cld
cltd
inc
leave
fdivl
xor
daa
push
pop
cmpsb
shr
cmpsb
xchg
xorl
clc
sbb
roll
dec
ljmp
js
fs
sbb
clts
fs
sub
adc
xchg
stos
pop
daa
inc
mov
cmc
xchg
movsb
jmp
or
lods
in
addr16
mov
dec
inc
pop
pop
data16
inc
fisubs
mov
xchg
mov
loope
push
mov
addb
lea
jo
pushf
cwtl
sub
inc
xorb
shl
push
mov
data16
call
in
pop
pop
mov
mov
into
jg
cmc
cwtl
out
adc
mov
aaa
pop
sub
mov
xchg
clc
push
cltd
mov
inc
inc
jne
xchg
pop
ja
adcb
pop
inc
sub
mov
pop
sbb
push
out
push
mov
lret
jp
js
aad
sub
testb
jmp
icebp
ss
mov
lock
mov
xchg
popf
xor
mov
mov
and
les
jecxz
xchg
jg
dec
push
in
mov
jnp
aaa
mov
fmull
sbb
push
aad
mov
jecxz
mov
sub
pop
inc
and
mov
dec
shlb
sbbb
xchg
sbb
cmp
mov
daa
lcall
mov
adc
dec
or
inc
sub
adc
and
das
fidivl
pop
add
mov
push
ret
mov
dec
aaa
rcl
dec
push
enter
xchg
xor
mov
inc
cmpsl
inc
inc
jg
sub
test
push
and
insb
out
dec
pop
jb
mov
xlat
add
movsl
push
in
js
in
outsl
adc
mov
movsb
cwtl
adc
sub
inc
shl
jg
pop
scas
dec
lahf
mov
jno
mov
push
aam
push
push
cwtl
push
sbb
icebp
dec
mov
dec
pop
add
pop
xor
xor
and
inc
out
xchg
mov
or
lods
roll
loope
push
lods
mov
jle
or
repnz
lods
nop
fprem1
sbbl
mov
dec
push
loopne
fiadds
mov
dec
idivl
mov
loope
stc
sub
popf
sub
sbb
mov
ficoms
test
loop
shrb
mov
popa
mov
in
mov
jge
mov
fstpt
fwait
and
iret
sbb
pop
cli
mov
aaa
adc
cltd
or
dec
repz
lds
add
xchg
pop
adc
jae
sub
cmp
jmp
mov
sub
or
clc
addr16
add
dec
add
and
pop
bound
inc
push
cmp
nop
bound
lea
pop
pop
jo
adc
xchg
add
jg
aas
inc
cmp
movups
sbb
sbb
in
pop
push
sahf
push
sbb
push
and
jne
xchg
push
pop
cmpsl
rorl
mov
clc
in
mov
mov
mov
jnp
je
sub
xchg
lahf
xchg
pop
inc
push
pop
mov
lock
shlb
fwait
jae
or
jecxz
mov
ret
adc
and
cmpsb
push
int
xchg
adc
sub
loop
xchg
mov
mov
mov
hlt
ljmp
mov
out
xchg
cmc
push
in
jne
jne
and
insl
lcall
mov
cld
ret
mov
and
sarl
or
out
lea
lds
in
mov
xor
outsb
fstps
add
xchg
out
inc
iret
mov
mov
push
orl
mov
sub
out
mov
or
rcr
mov
push
jle
movsl
xchg
shld
jg
ret
xor
fs
xchg
aas
lods
aaa
mov
xchg
push
xchg
lcall
and
subl
rcll
aas
fwait
lcall
out
in
push
fsubrs
push
xor
loop
inc
movsb
mov
xchg
push
cmpl
movsb
pop
cmc
pop
xchg
fisttpll
ja
outsb
loopne
mov
fidivrs
and
add
das
mov
inc
mov
dec
cmp
stos
imul
call
repz
daa
test
xchg
aaa
xlat
repz
inc
push
add
mov
aad
les
dec
xor
ss
sbb
stc
mov
pop
sub
fs
sbb
sub
pop
dec
inc
insb
inc
mov
leave
dec
xchg
sti
in
pop
pop
sbb
test
sub
mov
loop
faddl
mov
ds
enter
ljmp
adc
mov
sbb
or
cs
sbb
jne
inc
ja
mov
mov
xchg
in
adc
rolb
mov
es
jnp
shll
xor
mov
fcomi
xlat
inc
inc
jle
std
xchg
mov
push
mov
adc
push
dec
arpl
sbb
lret
rolb
jle
add
dec
or
push
xor
bnd
xor
out
xor
sub
mov
push
or
jle
cs
mov
xchg
mov
sub
sbb
sbb
pusha
mov
cld
out
pop
fwait
xor
lret
rorl
imul
xchg
add
push
cmp
lods
movsb
in
add
notl
sbb
cmp
inc
mov
pop
xorl
xlat
clts
icebp
push
adc
xchg
inc
inc
jb
pop
jo
xor
inc
lock
lahf
imul
jg
jae
daa
push
or
ficomps
call
into
inc
adc
hlt
cli
ret
cmp
sarl
aad
adc
jge
cwtl
nop
cli
push
mov
into
jle
mov
push
popa
or
push
enter
iret
test
inc
fdivr
enter
aas
cmp
repnz
mov
cmpsb
xchg
imul
aaa
sbb
mov
pop
imull
out
mov
inc
mov
fs
mov
jmp
lea
int
mov
sub
sub
ret
andl
mov
imul
jno
or
lcall
and
stos
jns
ds
rclb
icebp
dec
ja
add
scas
cmp
movsl
xor
sub
mov
sub
jns
sub
dec
dec
loop
std
insl
push
fmulp
or
fimull
in
movsl
sbb
pop
and
pop
jns
cli
or
sbb
es
add
pop
scas
cltd
scas
mov
pop
dec
dec
dec
cmp
mov
cmp
lret
loopne
mov
mov
jbe
call
mov
xchg
lahf
xor
mov
jae
mov
add
lcall
push
inc
or
mov
and
cmp
test
jbe
dec
xchg
repnz
add
movsb
lods
popa
xchg
jge
adc
sbb
jle
std
std
jae
mov
mov
ret
sub
lods
sub
lea
fisubl
push
cmc
rcl
outsl
jge
cmp
sahf
leave
push
es
jae
cmp
cld
mov
dec
cmpb
push
mov
dec
add
inc
lahf
das
les
sub
push
pop
int
enter
jo
ret
fcoml
lds
xchg
mov
loopne
lds
xor
xchg
sbb
js
and
sbb
dec
jo
cmpsb
xor
loopne
and
loop
aaa
inc
out
push
stos
fldenv
push
jbe
jp
mov
sub
push
lret
mov
mov
lock
sarb
popf
lock
arpl
dec
xchg
ss
sbbl
xchg
cltd
jbe
push
add
xchg
cmp
popf
lret
popa
mov
outsb
insl
mov
lock
push
aaa
std
mov
jno
cli
jmp
push
or
inc
arpl
loope
add
cmpb
pop
ljmp
cmpl
pop
add
add
incb
and
lods
in
sbbl
push
mov
push
push
mov
xchg
add
pop
data16
mov
les
lods
inc
sahf
jg
or
ss
push
ds
nop
cmp
int
ss
les
push
mov
dec
sbb
stc
fwait
sahf
ja
inc
adc
pop
popa
test
xor
xchg
add
sub
out
rcrb
cmp
mov
fnsave
xchg
mov
and
iret
push
and
int3
and
and
cmp
adc
lret
fmuls
adc
addr16
andl
xchg
mov
lret
repz
clc
sub
and
mov
push
adc
cmp
pop
fldt
pop
das
leave
scas
mov
mov
out
xchg
movsl
add
negb
ret
je
pop
or
sub
imul
cmp
sbb
jg
jb
lahf
andb
movl
faddp
decl
les
or
inc
inc
pop
fs
subb
xchg
cmp
das
xlat
aaa
js
imul
xor
insl
into
push
pop
lods
movsl
ja
nop
xor
daa
loope
fildll
addr16
jnp
shll
add
adc
mov
add
sub
xchg
icebp
mov
xchg
testb
jb
mov
mov
mov
insb
adc
or
cmp
pushf
lea
push
es
cs
lods
dec
fisttpl
sbb
aaa
xchg
xlat
int
jnp
int3
cmpsb
sub
jae
inc
leave
push
lods
mov
inc
inc
inc
jl
or
cmp
hlt
ret
inc
arpl
pop
fdivl
nop
lret
in
and
lods
or
insl
lret
sub
mov
mov
xchg
mov
test
insl
addl
or
aas
lods
mov
and
sahf
js
call
jecxz
mov
mov
repz
or
sub
adc
push
sub
and
lcall
repz
xor
push
icebp
sahf
jg
lea
loop
dec
ret
mov
pop
fucomp
xor
push
xlat
mov
pop
cmp
jp
enter
push
jecxz
push
or
jbe
jle
iret
sub
cmp
push
mov
shlb
inc
outsb
add
je
leave
mov
das
mov
adcb
adc
test
jge
jle
test
mov
in
sti
fisubl
pop
xchg
sbb
lods
mov
sti
and
push
mov
outsl
cs
and
mov
bswap
in
jno
sub
shll
xchg
and
bound
lcall
fwait
stc
sti
cmpsl
je
leave
ror
call
data16
mov
fcomi
inc
mov
imul
mov
pop
mov
ss
insb
pushf
sti
mov
cltd
cmp
mov
sbb
xorb
outsb
push
filds
jmp
jb
imul
mov
pop
lea
mov
lods
mov
fstpl
and
clc
jmp
cltd
pop
pop
je
jbe
push
shll
pop
jnp
shrl
ds
mov
in
out
jle,pn
fistpll
pusha
sbb
outsb
or
mov
lds
sbb
xchg
mov
lds
and
ret
xchg
ljmp
jmp
sbb
xlat
lods
mov
jae
jnp
daa
sti
cmp
xchg
insb
or
gs
jns
bound
arpl
sub
in
stos
inc
movsb
lods
mov
adc
lahf
dec
add
arpl
pop
xor
loope
mov
movsb
ja
cmp
jns
rol
mov
rcl
sbb
cs
and
mov
sub
sub
xchg
sahf
mov
sub
test
xchg
mov
pop
dec
mov
aaa
push
fcomi
mov
mov
jbe
movsb
fsubl
mov
xchg
sarb
adc
xor
push
push
ds
psubw
add
jle
adc
inc
arpl
jge
pop
repz
lock
xlat
pop
js
addr16
cld
cs
mov
sbb
push
or
pop
out
out
and
lret
roll
movsb
std
cmp
sbb
dec
pop
push
sti
lret
repnz
inc
mov
sahf
fstps
test
in
xchg
mov
or
or
repz
mov
or
sub
mov
insl
fdivrl
es
sbb
jmp
mov
jns
mov
inc
fs
adc
and
mov
test
or
das
xor
fisubl
or
fidivs
fdivl
pop
mov
pop
mov
xchg
adc
mov
and
and
and
imul
inc
sbb
fcom
insl
add
mov
int
mov
cmp
mov
fsubl
test
pop
stc
inc
imull
pop
or
int3
inc
sahf
jl
lds
xchg
pop
inc
pusha
sub
idiv
jecxz
pop
arpl
shll
jp
jp
mov
das
repnz
sti
xchg
mov
cmc
popa
push
jmp
in
dec
mov
rorl
repz
cmp
lret
xlat
push
or
cmpb
inc
and
loope
pop
hlt
shrl
aas
ljmp
pop
adc
negl
push
jnp
dec
insl
imul
mov
les
aad
iret
xchg
out
jmp
and
aas
pusha
loopne
int
es
jns
xchg
fdivrp
xchg
sbb
fs
test
xchg
stos
iret
cld
leave
rorl
movsl
testl
cltd
arpl
bts
mov
pop
scas
cmp
loopne
lock
sarl
or
jnp
xchg
inc
mov
stc
cli
es
jbe
pop
push
xchg
das
out
mov
imul
fadd
int
dec
int
fs
pushf
jle
inc
sbb
dec
or
jp
dec
cli
in
push
inc
lods
dec
lock
lds
mov
lret
in
bound
xor
inc
out
pop
addl
fstpt
push
mov
push
movsl
sbb
and
stos
inc
push
rorl
xor
outsb
jmp
loopne
filds
push
ljmp
mov
sbb
jp
shr
sbbl
push
and
xchg
fsubrl
sbb
pop
das
jbe
loope
mov
aas
sbb
sbb
add
pop
scas
cltd
lea
or
subl
call
jge
xchg
jae
push
mov
lahf
pop
stc
js
jae
cmpsb
mov
cmpsb
mov
mov
jnp
jno
add
xchg
ss
lods
insl
cmp
cld
dec
fs
iret
cmp
and
lds
fcomps
sti
lcall
cmp
cmp
insb
cld
mov
bound
lret
jne
aam
push
aam
addr16
xchg
insb
pushf
push
and
pusha
sbb
movsb
or
pop
lahf
call
sarl
lds
add
call
dec
adc
xchg
mov
xor
mov
int
pop
in
jmp
dec
aad
scas
mov
sub
repnz
jl
test
jg
or
pop
adc
test
inc
fimuls
daa
stos
jp
mov
in
fildl
inc
mov
push
mov
rcrb
int3
lds
or
aaa
dec
inc
push
test
push
lcall
pop
pop
push
jmp
mov
xlat
pop
jae
ljmp
pushf
dec
fcompl
cmp
push
das
ljmp
faddl
jae
out
pop
ret
push
aad
cli
and
test
adc
jg
and
aas
xlat
adc
inc
jbe
in
repnz
dec
fdiv
xchg
cld
outsb
lods
adc
jne
test
adc
rcl
jp
inc
jne
daa
stc
mov
ss
sub
jne
loop
outsb
js
outsb
jns
inc
pop
fiadds
push
dec
mov
out
jbe
fisttpl
cmpl
xor
test
mov
xor
push
cmc
cmp
arpl
inc
hlt
iret
adc
cli
sub
icebp
add
xchg
fnsave
dec
data16
cmp
int
mov
and
ds
pop
add
mov
scas
pop
lcall
mov
cmp
jo
mov
jecxz
je
jecxz
ljmp
inc
ret
ja
into
push
imul
lods
std
idivl
xor
imul
or
imul
jb
mov
leave
or
daa
push
cmp
ds
insb
jbe
mov
jae
sarb
imul
cmpsl
test
inc
add
add
sarb
and
lock
fidivs
or
jmp
std
pop
sti
outsb
lods
pop
dec
pop
pop
in
or
fisubrs
cmp
in
mov
xor
lods
testl
lods
fsubrl
adc
sbb
xchg
dec
mov
jns
outsl
or
inc
shlb
push
xlat
fwait
mov
loope
add
adc
mov
jb
dec
jle
test
mov
and
jno
xchg
mov
ljmp
nop
push
stos
or
cmpsb
or
addr16
enter
pop
outsb
into
fwait
sbb
push
idivb
dec
shl
cli
popf
aas
sub
inc
int
inc
jg
cmpsb
push
xchg
mov
adc
adc
dec
pop
mov
xchg
loop
xchg
jg
push
inc
xor
mov
ret
std
and
jl
add
mov
movsw
xorl
adc
jle
jbe
add
jle
xchg
push
daa
dec
cwtl
movsl
add
aas
sbb
pushf
xor
ja
scas
sbb
sub
aas
cmp
es
lahf
and
aaa
je
stos
mov
mov
push
add
jo
jmp
jb
test
fmull
pop
movsb
out
mov
adc
pusha
fimuls
in
adc
lahf
mov
pop
aam
sub
sti
ret
sub
call
push
aam
pop
mov
sbb
sub
push
jnp
outsl
mov
cwtl
inc
jg
sarb
ljmp
jecxz
push
mov
int
adc
sar
mov
mov
outsb
xlat
aam
popa
mov
xchg
jnp
arpl
push
cmp
loop
mov
out
and
cmpsl
pop
les
fnstenv
inc
fcoms
fcoms
ds
adc
adcb
test
mov
and
dec
adc
add
lods
addr16
insl
daa
ljmp
fsubr
xorl
cmp
imul
loop
cld
dec
fidivrs
or
aad
inc
xchg
lds
fidivl
cmc
adc
cmpl
icebp
cld
sti
fbstp
sub
lds
fwait
jo
fwait
push
mov
xlat
es
int3
mov
ss
inc
mov
cmp
add
das
inc
inc
jmp
or
ljmp
mov
xchg
insb
cmpsl
adc
pop
enter
xor
insl
xlat
inc
jnp
jmp
xor
inc
or
aam
push
mov
clc
push
nop
adc
test
enter
pop
and
mov
test
lock
or
cmp
push
pop
inc
movsl
push
jl
data16
fsubp
test
repnz
xchg
movsl
xchg
push
dec
jmp
cmpsl
and
and
aad
cwtl
xor
pop
sbb
lret
aad
pop
test
sbb
loop
xchg
inc
sbb
ljmp
jne
call
add
push
adc
in
std
jle
mov
mov
mov
sti
shlb
pop
push
mov
mov
and
pop
iret
pushf
nop
imul
test
jl
or
cmp
sbb
dec
in
jmp
nop
cmc
fucomp
xor
xchg
push
sub
mov
pushf
sbb
shrb
sub
sbb
inc
inc
add
ss
xor
clc
call
jnp
pop
push
cltd
pop
mov
sbb
jae
shlb
push
lahf
fisttpl
repnz
stos
arpl
mov
add
jmp
mov
sub
scas
insl
push
inc
pop
xor
mov
cli
xor
mov
inc
jl
imul
pop
adc
popf
sub
push
adc
bound
daa
pop
xchg
push
adc
lds
cwtl
adc
cmp
xorb
adc
stc
fimuls
icebp
int3
jl
mov
sbb
mov
cmc
paddb
mov
dec
sub
test
test
stos
jnp
inc
xor
in
mov
push
shl
or
sbb
xchg
in
xchg
and
cmp
mov
inc
cmp
divl
mov
fs
adc
push
icebp
cmp
shlb
arpl
dec
imul
cmp
mov
repnz
push
daa
in
dec
xchg
addr16
and
subl
lods
addr16
or
jno
mov
jmp
lahf
pop
mov
adc
dec
fwait
push
push
or
or
hlt
test
adc
std
or
cmp
ljmp
outsl
pop
jns
out
pushf
sbb
or
inc
add
adc
mov
inc
mov
insb
mov
mov
adc
cmpsl
dec
jno
mov
nop
xchg
iret
push
dec
ja
mov
pushf
scas
xchg
dec
mov
lods
xlat
stos
add
jge
inc
pop
xor
xchg
stos
insl
sub
arpl
lret
sahf
inc
inc
je
and
out
jae
xor
and
xchg
mov
leave
nop
add
xchg
test
sub
dec
mov
cli
sbb
rol
ficoms
and
push
insl
and
stos
jp
xlat
fisubl
xor
mov
sub
test
mov
and
jp
adc
or
pop
test
out
loop
xchg
sbbl
dec
lcall
xchg
fdiv
mov
cs
adc
fimuls
out
jo
pop
icebp
lods
movsl
mov
push
cld
xor
and
cmp
ljmp
imul
xchg
call
scas
mov
or
jnp
mov
cmp
cmc
add
scas
bound
push
cmc
mov
xchg
ljmp
ja
out
xor
fwait
ss
test
xor
and
jnp
mov
dec
inc
fsubrl
or
or
pop
pop
outsl
lds
jae
aaa
push
mov
cli
xchg
push
xchg
mov
sbb
int3
int3
mov
xchg
cmp
in
rorb
xor
or
inc
push
mov
or
iret
sub
adc
call
push
ficomps
fidivrl
xchg
in
in
xchg
test
inc
cld
mov
push
xor
sbb
dec
xor
and
or
shufps
nop
xor
imul
add
out
scas
stos
push
jnp
lcall
scas
cwtl
aas
addr16
xchg
stos
nop
lods
jbe
ret
imul
enter
stc
gs
or
fwait
iret
dec
ret
incl
and
cmc
mov
dec
mov
mov
fisttps
mov
mov
popa
xchg
or
sub
cltd
sub
fsts
mov
nop
jp
test
xchg
cmp
pop
fimull
add
inc
es
xor
and
pop
jnp
adc
and
dec
leave
sbb
xchg
mov
add
or
scas
push
es
adc
aad
inc
xor
stos
and
sbb
jnp
and
pop
dec
int3
push
ds
xor
xor
imul
mov
push
nop
shlb
out
idivl
inc
lahf
push
enter
test
gs
aas
xchg
add
adc
outsl
jmp
push
mov
fcmove
push
dec
sub
pop
imul
js
movsl
push
xorl
jo
adc
add
push
mov
dec
addr16
cmp
iret
fidivl
out
mov
add
jne
jns
jns
rclb
pop
scas
mov
add
rcll
cmc
sbb
in
cmp
mov
cmp
scas
or
mov
cmpsl
mov
xorb
pop
and
mov
out
add
adc
arpl
std
add
es
pop
subl
js
stc
int
addr16
repz
lret
mov
adc
ss
dec
cmp
adcl
cmp
imul
out
js
fwait
je
jno
or
sti
loope
push
xlat
adc
dec
jo
jne
lahf
inc
mov
int3
cltd
xchg
adc
loop
test
push
dec
jecxz
inc
daa
mov
fidivrs
dec
mov
push
mov
inc
roll
out
jl
adc
stos
push
gs
and
adc
lods
or
jle
dec
rolb
jnp
xchg
lea
repnz
add
inc
movsb
push
or
orb
sbb
pop
rclb
xchg
mov
add
fs
mov
dec
adc
adcl
add
movsl
pop
pop
cmp
xchg
and
repnz
in
roll
mov
sbb
flds
pop
movsb
cld
loop
into
sub
xchg
arpl
mov
jl
ja
mov
push
cmp
sti
adc
cmp
adc
sti
and
add
lock
jg
enter
stc
rclb
testl
cwtl
out
dec
dec
nop
mov
mov
in
adc
movsb
sub
aad
pop
test
jmp
aad
ja
xchg
mov
fistl
das
xor
clc
fdivrl
scas
dec
stos
sub
decb
adc
or
jg
lods
ss
cmp
pop
adc
ds
xor
push
pop
mov
inc
mov
pop
xor
sbb
aaa
movl
in
jg
popl
pop
pop
int3
jl
nop
popa
out
jo
out
push
mov
shlb
pushf
pop
mov
sbb
adc
or
adc
clc
dec
iret
orb
movsl
in
cs
rcrb
pop
repz
lret
cmpsl
push
dec
roll
mov
call
adc
push
pusha
dec
sub
jmp
xor
adc
add
js
les
pop
insb
sub
push
ret
jb
dec
push
icebp
lahf
loopne
clc
inc
or
mov
sbb
pushf
cmp
xchg
pop
int
enter
inc
addr16
pop
sar
mov
mov
mov
push
inc
inc
mov
pusha
adc
js
add
jbe
gs
sbb
repnz
lret
push
loopne
pushf
stc
ret
outsb
xchg
iret
sbb
ja
fstpt
inc
loop
sub
repz
mov
out
sbb
add
jle
fmul
jnp
leave
xlat
lock
mov
mov
dec
add
inc
cmp
pusha
nop
inc
mov
in
mov
and
sbb
cmp
adc
adc
adc
sbb
xchg
sub
popf
movsl
loopne
pop
shrb
loop
adc
mov
sub
je
xchg
lods
hlt
and
push
pushf
insl
fs
and
fimuls
jg
jno
push
inc
jmp
fldt
mov
adc
clc
andb
and
pop
sub
out
xchg
cmp
lock
ljmp
fistl
xchg
or
xchg
arpl
fsts
xchg
mov
cmc
pop
bound
imul
pop
pop
int
cmpb
push
cwtl
add
and
pop
dec
shrl
stos
mov
add
inc
mov
xor
xor
xchg
mov
ljmp
dec
test
adc
xlat
repnz
outsl
pop
jl
fwait
inc
jns
pop
mov
mov
dec
cmc
into
or
test
testl
test
in
and
mov
dec
pop
sbb
or
add
mov
xchg
jmp
scas
sbb
les
add
test
in
add
cmpsb
daa
mov
xchg
loope
ds
jle
pop
pop
xchg
xchg
psubsb
pop
repz
aaa
push
adc
loope
or
lods
push
dec
es
adc
jge
jno
and
fs
inc
adc
xchg
xchg
dec
adc
arpl
push
int3
insb
sti
dec
xor
loop
std
cmpsb
push
inc
rcrb
and
cli
adc
test
pop
movsl
sub
sbbl
fbld
fbstp
testl
sub
shrl
sub
jns
fsubr
and
xchg
imul
aad
aas
mov
inc
divb
cmpsb
iret
aaa
call
fstpt
repnz
movsl
and
divl
xchg
shl
dec
je
mov
cld
in
xchg
or
push
mov
cmp
in
sub
xor
inc
sub
call
or
sbb
lea
lret
add
jbe
jecxz
jo
sti
es
and
xchg
jl
out
xor
loopne
fnsave
cmp
dec
mov
mov
loope
mov
pop
dec
inc
dec
aaa
shl
movsb
fbld
dec
loop
fucomi
mov
jl
test
outsw
mov
sbbl
scas
dec
hlt
push
insl
or
test
fidivrl
call
or
or
loope
incl
inc
push
push
cmp
out
dec
sub
cmp
jo
xchg
nop
aaa
cmp
cmp
out
jg
pushf
xchg
out
es
pop
pop
popf
inc
push
or
dec
iret
cmp
icebp
mov
fcomp
xchg
and
jle
push
fs
cwtl
jne
clc
jnp
je
movsb
sarl
jecxz
stos
es
out
outsl
or
pusha
arpl
lds
xor
pushf
arpl
fwait
mov
rolb
call
push
lahf
lahf
push
jmp
push
repnz
mov
jo
sub
or
iret
cmpsl
scas
mov
or
stc
enter
jb
sbb
ret
push
cmp
lcall
in
ljmp
cli
cmpb
cmp
mov
pushf
mov
lods
aam
and
mov
mov
push
mov
test
ds
inc
fs
xchg
aam
jl
aaa
xchg
jl
jl
inc
movl
lahf
idivb
incl
sub
repz
fldt
pop
inc
popa
xor
or
faddl
lret
test
and
stos
cmp
orb
jno
ja
pop
and
push
rcr
xlat
test
mov
aas
aaa
call
ficompl
push
xchg
xchg
lods
xchg
jo
out
outsl
cmp
or
jbe
dec
adc
aaa
enter
pop
xchg
loope
jo
movsb
addl
sub
icebp
xorl
mov
jge
lahf
enter
ret
or
sahf
adc
and
imul
adc
dec
dec
jae
add
insb
pop
in
xor
jno
iret
daa
cmp
roll
dec
sarb
dec
clc
pop
xchg
xor
sar
stc
xor
mov
jle
pop
jb
imul
pop
stos
cltd
pop
decb
pusha
mov
ja
ds
inc
fidivrs
call
or
subb
cmp
pushf
mov
push
mov
test
inc
mov
scas
push
push
out
jne
sub
or
add
aaa
fs
js
das
aad
shr
xlat
loopne
sbb
jg
sbb
cmp
sub
and
mov
pop
add
xor
insl
sti
cmpsb
mov
or
jbe
std
add
frstor
testl
xor
ror
mov
sbb
inc
cmp
mov
fcmovnbe
imul
or
inc
ss
popa
aad
jns
add
stos
rcr
loop
pop
mov
pop
or
orl
test
shll
push
les
sub
xor
inc
fdivrl
mov
sbb
xlat
cmpsl
mov
push
dec
jmp
push
ret
jnp
jnp
xchg
and
lods
repnz
adc
jle
gs
out
xchg
push
inc
mov
sbb
cmp
scas
clc
in
push
mov
sahf
mov
push
repnz
xchg
jne
pop
test
cmp
aaa
xor
fwait
add
mov
push
mov
icebp
lods
jns
sub
int3
sub
in
jmp
sbb
or
insb
or
push
dec
sbb
jne
movsb
push
push
mov
mov
fistpll
lods
cli
mov
sbb
adc
push
jmp
test
cmp
pop
dec
mull
xchg
cwtl
or
outsl
test
pop
jl
into
lahf
xlat
pop
cmp
jb
push
loopne
mov
cmp
scas
mov
jnp
rclb
stos
pop
cs
sbb
sbb
scas
addr16
fxch
in
inc
xor
sbb
rorb
das
hlt
jne
mov
repz
data16
daa
sub
xor
rorb
ds
repnz
cwtl
inc
push
cs
sbb
xor
out
xchg
lock
mov
imul
fistpll
movsb
push
lods
pusha
stc
mov
mov
frstor
scas
push
or
sbb
ljmp
nop
fidivrl
cld
push
aas
std
imul
cltd
dec
test
mov
xor
push
daa
and
jecxz
jbe
outsb
test
sbb
or
lea
dec
mov
int3
push
cltd
popa
daa
addr16
mov
sbb
push
cmpl
push
repnz
xchg
pop
xlat
jmp
xchg
pop
pop
and
mov
pop
pop
xchg
addb
and
sbb
push
push
daa
mov
sub
xor
hlt
aad
sbb
push
in
outsl
pop
push
xlat
xchg
je
mov
lss
enter
or
pop
jle
dec
test
into
addb
mov
mov
lahf
fdivp
std
rcr
int3
lds
ret
repnz
call
cmp
jb
pusha
int3
movsb
aam
call
jbe
adc
pusha
xor
inc
pop
push
pop
pushf
fwait
mov
subb
add
mov
push
jg
dec
adc
jne
xorb
aaa
aad
xchg
shlb
cmp
xlat
pop
dec
add
vpmovmskb
pusha
loope
lds
mov
shl
mov
mov
push
mov
iret
cmp
clc
sti
mov
inc
dec
aas
hlt
mov
push
into
scas
push
lock
fnstcw
aam
adc
xor
fwait
lret
fs
cmp
dec
add
jl
jae
push
xchg
aad
pop
and
push
icebp
pop
sbb
incl
sahf
subb
rorb
push
hlt
adc
cmpsl
decb
dec
fsubl
js
jl
jb
jg
dec
xchg
push
sub
mov
insb
jp
push
mov
or
sub
jne
mov
and
rcrl
jns
roll
nop
scas
cmp
movsl
pop
loopne
into
inc
push
loop
mov
jnp
and
clc
push
mov
jmp
mov
jl,pt
rep
icebp
inc
mov
push
inc
push
movsl
jecxz
pop
incl
jae
cmp
jae
sub
jo
hlt
and
daa
cs
dec
add
and
test
cmp
pop
hlt
fldt
es
inc
cmp
mov
mov
mov
mov
lock
or
imul
int
jg
in
pop
mov
test
shrb
lock
xchg
sbb
mov
and
pop
test
in
cmpsl
xchg
push
and
cmp
push
enter
movsl
cmpb
cltd
and
push
not
dec
push
and
imulb
cmp
out
mov
adc
inc
shll
mov
inc
pop
and
jg
icebp
rcrb
push
orl
cmc
xchg
pop
cmpsb
mov
loopne
orb
data16
mov
xchg
fdivs
lods
cwtl
and
ds
mov
mov
add
add
inc
lcall
je
ret
push
xor
sub
push
jge
inc
inc
adc
std
shll
sub
pop
adc
cli
or
pop
jbe
addl
movsl
mov
neg
aas
js
das
imul
push
dec
push
fisubrs
aaa
hlt
push
mov
mov
test
outsl
pop
cmp
pop
cmpsl
pop
rcl
mov
xchg
push
in
pop
push
adc
rol
pop
test
rorb
fimuls
jo
addr16
imul
push
jne
xchg
sub
and
xchg
movsl
mov
pop
mov
xchg
sti
push
mov
sbb
test
sbb
pop
jbe
imul
mov
adc
inc
cmp
adcb
jae
out
int
cld
scas
sub
xchg
sbb
mov
pop
movb
xchg
icebp
lea
mov
out
filds
and
mov
mov
mov
xchg
fsubrs
cmp
or
add
ja
lods
pusha
or
frstpm(287
sbb
sbb
pop
jb
xor
lcall
mov
das
repz
rcrb
es
insl
push
cmp
jo
cltd
dec
imul
repz
cmc
add
jno
lret
cli
dec
es
sbb
cli
in
aas
adc
sbb
pop
sub
hlt
mov
and
insb
cmp
mov
jb
mov
push
add
sub
sbb
push
pusha
scas
in
jmp
flds
test
or
mov
sbb
sub
push
shll
lods
pop
pop
pop
cmc
sub
cmpsb
rcrb
fwait
mov
pop
fcomps
mov
push
mov
pop
inc
loope
push
pusha
sub
in
insl
mov
mov
je
inc
fistps
movsb
jle
mov
loopne
mov
addb
out
jge
inc
xlat
mov
mov
and
nop
and
mov
cmp
cmp
jb
push
icebp
dec
shlb
dec
pop
mov
xor
jae
aas
fs
and
adc
je
jns
outsl
repnz
stos
ret
dec
pop
repz
inc
call
iret
clc
or
int
gs
sbb
adc
lret
lahf
icebp
jp
pusha
loopne
push
int3
jle
xor
jbe
mov
pop
insb
mov
fs
inc
out
mov
xor
aaa
push
fcomps
clc
xchg
in
lock
mov
or
lea
movsb
xlat
mov
aaa
xor
add
or
loope
mov
js
int3
int
in
pop
movsl
push
test
pop
push
popf
cwtl
dec
outsb
es
jns
call
xchg
pop
jne
and
jo
push
nop
sbb
or
je
fstpt
push
dec
shrl
jns
inc
pop
cmp
mov
mov
add
imul
sub
les
jg
push
xchg
adc
cmp
inc
jp
pop
xchg
out
jno
push
enter
cmp
and
dec
adc
sahf
shr
js
add
fistl
xorl
cmp
and
adc
out
xor
push
push
lods
add
pushf
adc
stos
push
imul
pop
test
add
xchg
jp
lcall
mov
cld
dec
mov
cs
std
sub
dec
adc
cmp
pop
dec
cmp
pmulhw
aas
ja
and
lcall
scas
push
fsubs
lea
mov
rol
int3
sub
shlb
lods
pop
out
mov
fcoml
std
daa
and
fidivrl
cmpsb
adc
xchg
adc
sbb
rol
mov
cmp
jmp
sub
popf
or
or
push
cmpsb
popa
and
jo
xor
mov
lds
jo
lret
clc
rolb
and
cmpsl
lods
jle
jle
jno
shlb
imulb
rcll
pop
sbbb
pop
dec
ljmp
adc
jecxz
in
or
inc
mov
or
sbb
add
xorb
xchg
imull
jno
add
jae
adc
dec
mov
sahf
mov
in
rcll
sub
pop
and
into
xor
mov
aaa
jl
push
std
test
cmp
loop
add
pop
pop
rolb
push
ror
mov
imul
dec
xlat
aaa
out
jae
xchg
shll
sbb
outsb
dec
out
outsl
lods
jno
testb
pop
pop
sbb
loopne
inc
pop
pop
insl
mov
cmp
cltd
test
rcrb
cmp
push
dec
cmp
iret
inc
or
xchg
mov
loopne
inc
leave
shll
push
mov
test
dec
inc
jg
cmp
xchg
mov
xchg
pop
mov
nop
mov
xchg
cli
hlt
add
addr16
das
jg
loop
adc
in
xor
xchg
and
sti
cmp
or
dec
and
adc
mov
cltd
scas
jns
mov
push
cmc
xor
and
jbe
pop
fstpl
jns
addl
nop
pmovmskb
or
mov
not
lret
test
jb
and
andb
imul
lock
xchg
sub
icebp
jbe
mov
xor
int
or
inc
sahf
or
js
xor
mov
adc
mov
sbb
lods
iret
push
xchg
push
out
push
adc
cli
iret
mov
bound
aad
nop
dec
imul
in
and
fwait
jg
pop
adc
fisubs
sub
dec
out
idivl
jl
push
popf
out
loopne
loopne
cmp
aaa
xchg
in
push
sbb
fstpl
mov
fcoml
iret
sbb
or
jl
in
mov
push
es
test
xor
sub
dec
pop
fistps
cmp
xchg
loopne
sub
bound
push
pop
xchg
loop
mov
sub
lods
addr16
js
leave
sub
mov
leave
push
out
cmp
nop
mov
xchg
lods
xor
jb
mov
mov
imul
mov
fs
sbb
repz
xlat
insb
fmul
xchg
clc
test
lods
adc
outsl
or
sub
outsb
mov
and
and
dec
cmp
sub
push
std
test
lcall
xlat
loope
mov
adc
stos
sbb
test
cmp
sahf
mov
clc
es
jle
pop
lcall
int
flds
mov
jl
rolb
jb
inc
push
mov
dec
idivl
or
push
inc
jbe
orl
mov
sbb
ds
test
pushf
sti
jo
es
loop
int3
hlt
aam
iret
movsb
mov
mov
addr16
nop
pop
jns
mov
mov
lea
movl
jne
out
mov
lret
scas
xor
pop
inc
xchg
sub
test
jl
aaa
aam
into
cld
or
popa
pop
add
and
xor
std
fwait
and
lret
xlat
inc
mov
add
leave
into
push
pop
adc
sbb
ja
xchg
lods
push
push
mov
movsl
push
shrl
outsl
jp
add
add
xor
add
jle
lds
jae
push
sub
jae
or
es
popf
lods
push
mov
lret
pusha
ljmp
std
test
sub
aam
mov
mov
iret
test
dec
adc
inc
pop
pop
loope
pop
and
repnz
mov
aam
mov
push
fsts
pop
out
sbb
push
outsb
pop
sahf
dec
and
fstpt
cld
pop
movsb
mov
sbb
sub
mov
inc
lock
and
lods
sub
into
test
sub
inc
pop
int
inc
adc
rorb
pop
mov
fidivrs
aaa
sti
ljmp
add
xorl
sub
loopne
loopne
xor
int3
fidivrs
das
pusha
add
sbb
out
pop
sub
mov
cltd
out
test
inc
int3
push
cld
in
mov
scas
sub
test
movsb
ss
cmp
push
popa
hlt
jno
push
xchg
ds
mov
js
jae
incl
aaa
test
fmuls
cmp
rorl
adc
hlt
daa
and
inc
and
aam
dec
mov
cmp
inc
aaa
xor
pop
sti
fimull
push
mov
insb
xchg
mov
flds
iret
sub
sub
sbb
inc
inc
fldl
in
fdivrl
addr16
xchg
popa
sub
sub
sub
outsb
dec
mov
pop
jae
fdivl
cmp
pop
jecxz
mov
lds
fsubrp
cmp
mov
xchg
and
sub
in
cmp
lret
inc
shlb
inc
mov
add
das
lds
scas
dec
jle
add
mov
adc
cmc
test
paddq
xor
popa
cli
push
and
and
jb
adc
cmp
daa
aam
push
and
test
mov
jmp
jbe
pop
jmp
sti
stos
jmp
mov
cmp
inc
outsb
cmpsl
sbb
xchg
add
xor
std
push
lods
lahf
dec
inc
ficompl
pop
in
inc
stc
sbb
or
lcall
insl
test
clc
push
dec
add
lock
mov
jl
int3
mov
pop
jg
mov
out
and
insl
mov
arpl
xchg
dec
jp
imul
push
dec
sub
fwait
js
fimull
inc
fwait
imul
sarb
repnz
cmc
jge
mov
je
inc
fbstp
pop
pop
pop
pop
test
cli
xchg
add
ja
pusha
pop
inc
outsb
xchg
in
cmp
xor
data16
outsb
jmp
and
js
dec
call
jns
lock
sti
loopne
xchg
xchg
jno
ljmp
rorl
daa
orb
adc
push
dec
and
pop
aam
push
leave
xchg
in
lods
sub
push
repnz
stos
mov
add
fimuls
lret
in
andl
out
imul
enter
loopne
jns
dec
sub
xchg
pop
mov
or
ds
icebp
jp
lods
sbb
scas
cltd
aam
jl
fsubrs
cltd
fstps
xchg
aaa
xchg
add
lea
fsubrl
icebp
xor
cwtl
mov
lods
mov
mov
xchg
ja
pop
mov
or
push
js
popa
adc
hlt
enter
test
mov
in
or
sub
and
lods
jmp
xchg
iret
sub
jl
shll
cltd
cltd
and
cs
adc
sub
cmp
into
out
push
sbb
stc
cmp
xor
xchg
pop
dec
into
or
sub
cmpsl
repnz
adc
bound
hlt
aam
inc
or
adc
out
sahf
inc
test
pop
push
push
pop
ss
push
mov
pusha
in
ficoms
std
int3
rcl
cmp
fstps
rclb
movsb
cmp
data16
cmp
lret
mov
jnp
mov
and
mov
push
sbb
push
stos
addr16
pushf
adc
pop
dec
adc
lods
stos
inc
outsl
jo
lcall
push
test
fisttps
mov
mov
ljmp
sub
add
xor
rcrb
dec
sti
loop
mov
daa
aad
out
and
test
call
jno
adc
mov
cmp
xor
sub
jbe
cwtl
int3
add
scas
pop
adc
movsb
cs
div
jge
outsl
mov
andb
movsl
adc
data16
sahf
mov
and
jno
inc
aad
cmp
ret
jmp
and
pop
ret
pop
neg
mov
xorb
clc
mov
sub
pop
out
mov
push
inc
ja
sbb
test
les
push
jbe
cmpsb
imul
rcrl
and
out
dec
mov
or
aam
es
xchg
movsb
jbe
not
popa
cmpps
in
fwait
pop
insl
test
cmp
or
jae
push
les
sub
sbbl
mulb
movsb
push
jecxz
adc
mov
notl
xlat
stos
or
xchg
fsubp
iret
mov
insb
shl
out
les
lods
push
stc
out
addr16
fucomi
fnstenv
cmovno
mov
in
iret
jecxz
adc
dec
or
push
xchg
jle
adc
pop
aam
xchg
inc
stos
stos
das
jle
imul
add
xor
inc
and
adc
pop
movsb
stos
imul
insb
jbe
outsb
fimuls
mov
aaa
out
movsb
pop
mov
mov
fucomi
sar
mov
testb
or
jmp
mov
dec
push
orl
cmp
jns
bswap
int3
insl
fisubl
outsb
jmp
outsb
jl
sti
rcr
add
ja
in
xchg
xchg
pusha
out
mov
adc
jb
loopne
insb
shrl
and
mov
add
jmp
out
mov
cli
into
lret
mov
xor
xor
stc
add
push
aas
sub
pop
loop
or
std
adc
xor
sub
mov
insl
rcl
dec
mov
dec
inc
push
cltd
cmpsb
jno
pop
push
jno
das
enter
das
push
and
add
ret
call
bound
shlb
sbb
shrb
sahf
xorb
dec
hlt
fabs
sarl
ficompl
lret
aaa
inc
or
push
fcoms
lods
subl
fwait
pushf
cmpsb
xchg
outsl
leave
add
fidivs
or
lea
xor
inc
jne
mov
mov
stc
enter
es
popa
sti
xor
xchg
pop
ljmp
dec
iret
adc
outsl
add
aas
add
xor
inc
repz
in
fidivl
ja
je
testb
cmpsb
push
push
jl
inc
jns
and
fistpl
movsl
push
push
dec
push
dec
pop
pop
incl
mov
pop
cmp
and
shl
sti
push
cwtl
test
mov
stc
js
xor
jmp
enter
mov
lret
xor
in
xchg
lcall
dec
outsl
repnz
imul
int3
ret
push
and
cltd
stos
shlb
lret
jmp
xchg
adc
mov
test
mov
cmp
mov
dec
cmp
mov
mov
ljmp
xchg
inc
push
ds
dec
gs
fmul
arpl
and
mov
addr16
pop
xor
hlt
scas
xchg
cs
jmp
fcmovnbe
push
in
addr16
pop
push
sbb
sub
push
adc
push
xor
pop
mov
andb
sbb
or
arpl
scas
add
mov
test
jae
mov
jg
sub
cmpl
mov
lret
rclb
lcall
and
xchg
push
in
inc
sbb
lahf
scas
cmpb
in
mov
dec
aam
mov
cmpsl
roll
in
push
mov
loope
insl
jle
inc
xlat
scas
stos
jle
or
mov
xlat
int3
inc
mulb
mov
fdivrl
loopne
icebp
addr16
xlat
jp
sti
pusha
inc
mov
negl
lods
mov
cmpsl
sbb
cli
pop
loope
mov
loope
inc
stos
arpl
or
loop
lods
mov
and
push
int
cmp
pop
cli
push
lahf
mov
and
outsb
daa
rorb
xor
push
adc
test
rcr
xchg
and
aam
loopne
lods
sbb
out
sub
jo
add
jmp
lea
dec
pop
jmp
jno
fstpl
dec
repz
fidivrl
test
out
mov
xorl
mov
gs
lods
inc
dec
sub
packuswb
lcall
roll
je
xor
mov
cld
stos
gs
lea
cltd
mull
mov
jno
mov
faddl
aam
imul
dec
fdiv
popa
fistpll
cli
push
adc
sbb
pop
sub
pop
shl
enter
lods
adc
fstpl
mov
dec
and
insb
subl
mov
mov
scas
dec
out
icebp
mov
xor
jg
iret
mov
mov
pop
test
out
mov
pop
cmc
or
in
cwtl
pushf
cmpsb
mov
cmc
push
das
jno
add
mov
xor
push
or
mov
leave
std
adc
mov
outsl
sub
adcb
pop
imul
and
xchg
lcall
testl
adc
push
daa
dec
push
out
dec
jmp
mov
popf
rcr
xchg
inc
fldenv
jecxz
es
js
xor
std
push
arpl
mov
cmp
inc
push
jecxz
cld
or
pop
aam
dec
out
mov
lock
add
pop
dec
idivl
mov
and
aad
mov
jge
test
mov
mov
loopne
leave
or
in
lods
shll
lods
xchg
popa
pop
xor
shll
pusha
outsb
cmpsl
pop
sbb
mov
dec
inc
pop
into
adc
in
adc
in
mov
mov
xchg
icebp
inc
cmpsb
xor
fiadds
pop
loopne
gs
mov
leave
cli
negl
test
sbb
sub
rorl
xchg
into
inc
inc
les
mov
xor
dec
ss
cmc
loope
or
icebp
sub
scas
outsb
cli
sub
mov
jle
adc
xchg
inc
pop
push
decl
xchg
and
test
out
adc
pushf
lock
shlb
int
jp
mov
dec
shrb
mov
out
xchg
adc
dec
push
ja
or
and
mov
cmpsb
pop
and
and
push
mov
stos
mov
push
xchg
push
int3
jecxz
mov
stos
adc
pop
sub
cmp
mov
sub
mov
xor
and
pcmpeqb
test
out
dec
pusha
jno
test
test
lds
cmp
xchg
iret
cmp
stos
fucomp
mov
xchg
out
shlb
jbe
inc
loopne
sbb
sub
out
mov
mov
adc
xor
mov
sub
pop
cwtl
out
jo
push
push
jne
xchg
jmp
adc
and
dec
movsl
or
sbb
xchg
js
and
shll
shlb
in
push
sbb
scas
mov
aad
dec
mov
mov
lret
jp
popf
jb
jg
loopne
dec
adcl
dec
push
sbb
sahf
or
je
xchg
lea
sbb
pusha
jno
jl
or
imul
lcall
ret
push
arpl
cmp
loop
aas
mov
and
ja
fmulp
and
mov
inc
mov
jl
movl
dec
jge
sbb
movsb
push
nop
mov
sub
add
cmp
jg
leave
xchg
push
pop
sbb
jle
xor
mov
nop
imul
mov
xorb
cmp
adc
xchg
out
jmp
jae
cmp
xor
lods
lret
pushf
je
jp
js
mov
and
in
decb
mov
lock
shll
dec
sub
mov
gs
js
loopne
bound
std
push
fwait
sbb
ljmp
nopl
jo
push
sub
inc
out
pop
inc
jb
inc
push
cmpsl
fucom
mov
rorb
repnz
subb
mov
aad
insl
pop
xor
inc
dec
mov
sbb
scas
loope
scas
cmp
aad
add
pop
dec
cmp
out
fcom
dec
push
mov
imul
movsl
ret
xor
cmp
icebp
sub
das
cmp
push
push
jb
or
jae
inc
xchg
or
repz
pop
out
adc
xchg
les
loop
js
ja
mov
enter
sti
mov
stos
sub
and
les
fs
and
xchg
mov
sti
pop
into
mov
mov
mov
push
sub
sbb
insb
repz
call
pop
and
xchg
int3
sbb
ftst
push
aad
out
xchg
scas
push
and
dec
sbb
adc
inc
enter
mov
stos
stos
clc
cmp
nop
fistpll
lret
mov
adc
dec
lods
ret
rclb
cmp
and
sti
sbb
pop
and
push
dec
in
xchg
add
stc
or
pushf
sbb
sarb
ja
loopne
jae
loope
mov
push
mov
and
xchg
push
pop
push
inc
cld
mov
lock
daa
loope
sbb
jge
pop
mov
cmp
jo
lret
insl
inc
stc
orl
mov
repnz
mov
ljmp
mov
mov
or
fbld
dec
cmpsb
adc
push
pop
fstpl
adc
shlb
aam
in
dec
fisubrl
dec
cmp
shlb
imul
jne
push
mov
sar
stos
lcall
cmp
xchg
dec
jle
adc
icebp
movsb
test
cmc
jnp
push
andl
dec
popf
aad
mov
jae
das
nop
aam
push
adc
adc
scas
sub
sarb
add
stc
loopne
and
push
cmp
imul
pop
and
xchg
outsb
mov
push
mov
mov
sub
insb
sbb
mov
fisubrs
fmuls
adc
cmp
mov
jge
sbb
icebp
in
insl
xlat
out
sub
mov
pop
out
inc
mov
sbb
repz
jge
cli
cmp
add
js
push
sub
jbe,pn
cmp
mov
int3
mov
cmp
or
lret
bound
aaa
cmpsl
setbe
sbb
or
and
sbb
testb
es
mov
imul
pop
mov
mov
dec
fmull
sbb
push
stc
inc
lahf
mov
bound
dec
enter
add
push
andb
popf
addr16
pop
jle
mov
sub
fwait
lret
repz
movsl
sarl
cmp
or
mov
jns
lret
aaa
std
imull
mov
loope
sub
insb
xchg
push
pop
push
mov
in
stc
push
sbb
or
and
dec
movsl
xchg
mov
mov
jns
dec
in
mov
pop
lods
jge
repnz
xchg
mov
inc
adc
push
pop
scas
sub
lods
pop
ss
je
mov
jns
enter
dec
hlt
sub
hlt
or
cmc
aaa
jl
pop
test
scas
loope
cmp
lahf
xlat
sub
stos
je
cmp
sahf
pop
xor
jecxz
mov
fsubl
rorl
mull
pop
push
cmp
int3
lret
xchg
xchg
inc
sbb
push
jns
outsl
orl
call
jae
out
mov
outsb
and
xor
data16
insb
jge
insb
cmc
mov
sahf
jle
push
lret
es
imul
xlat
adc
enter
jg
cmc
repz
add
dec
mov
sub
mov
mov
sbb
inc
cwtl
js
test
cmp
test
testb
fdivrp
adc
add
cli
in
insl
push
mov
mov
mov
adc
fidivl
data16
and
bound
xchg
loope
ret
enter
mov
mov
js
push
mov
mov
mov
sub
test
add
fnstsw
adc
repnz
shlb
sbb
cmpl
fidivrs
out
jns
in
mov
xor
sbb
insl
sbb
jno
inc
push
test
adc
test
es
insb
mov
pop
sub
movsb
cmc
sbb
in
das
and
testl
outsl
adc
jae
push
push
repnz
shrl
stos
loope
inc
cs
mulb
push
adc
mov
shlb
mov
push
jp
das
sbb
cmc
rolb
sbb
push
push
or
xchg
in
dec
mov
orl
xor
jecxz
pop
hlt
loop
jle
into
dec
pop
cld
ret
lcall
ja
popfw
mov
ret
dec
hlt
adc
fucom
mov
push
mov
mov
cwtl
insb
pop
push
loop
pop
mov
pmaddwd
mov
inc
mov
jnp
jle
adc
fildll
test
xchg
subb
pop
addr16
cltd
inc
fmuls
xor
repz
daa
pusha
out
push
cwtl
test
push
mov
mov
arpl
mov
xor
push
mov
adc
inc
idivl
cmp
cld
and
or
imul
push
mov
push
and
nop
jp
pop
rcll
outsl
fcomi
inc
out
mov
nop
and
shrb
xor
jae
mov
add
push
dec
adc
or
mov
iret
jae
std
jnp
add
dec
cld
push
mov
jle
in
sahf
and
xchg
ror
dec
pop
push
outsb
adc
xchg
fbstp
add
sahf
out
adc
and
fcom
fdivr
out
xchg
cmp
int3
sbb
mov
in
cwtl
mov
xchg
jno
lahf
jbe
movsb
arpl
pusha
daa
jge
inc
call
pop
push
pop
mov
inc
sbb
dec
aaa
sbb
cld
sub
mov
icebp
daa
jns
sub
jbe
jp
sub
adc
out
xchg
stc
pop
push
test
cmpsl
push
adc
xor
lret
bound
cmpb
lahf
and
shr
call
pop
xchg
popf
ljmp
call
js
sti
pushf
scas
pop
mov
jmp
mov
movsb
jnp
int
in
and
inc
shll
fadds
xor
test
lahf
push
daa
das
push
jmp
out
fstpt
push
xchg
shrl
xchg
sarb
sar
push
andl
mov
push
or
loop
pop
jns
xchg
pop
adc
push
sub
leave
or
mov
and
aaa
mov
iret
dec
ja
fistl
inc
jecxz
push
addl
or
xor
outsb
and
mov
dec
cmpsb
adc
aas
sbb
inc
outsb
bound
xchg
xchg
jae
pop
imul
sub
xorb
bound
inc
push
dec
sub
push
push
pop
inc
and
mov
pop
dec
addr16
psllw
loope
arpl
adc
out
add
sti
fmuls
adc
pushf
mov
shl
sub
aaa
in
imul
fstpt
outsl
jg
negl
mov
and
repz
aas
xor
inc
fsubrl
xchg
xchg
add
sbb
mov
xorb
lods
inc
das
pop
dec
out
inc
mov
pop
adc
fmull
dec
dec
cmp
ret
xchg
imul
lods
xchg
fprem1
clc
arpl
cwtl
stos
mov
fcmove
pop
inc
push
sub
into
enter
jnp
mov
dec
adc
inc
mov
jp
push
dec
jg
jnp
aad
sbb
mov
mov
in
jbe
inc
sub
mov
lcall
rcl
dec
mov
subl
int3
xchg
mov
sub
push
adc
cmp
dec
jns
mov
scas
adc
scas
mov
insb
push
or
je
lods
inc
jo
lods
cmp
fcoms
hlt
cs
pop
sti
imulb
push
inc
pop
out
push
mov
test
xchg
xchg
arpl
mov
xor
mov
movsl
and
outsl
stos
nop
jb
jl,pt
push
sti
push
and
dec
arpl
std
mov
test
shrl
imul
out
sub
xchg
lds
push
imul
repnz
push
popf
dec
xchg
pop
mov
add
imul
sub
sub
adc
std
aas
scas
cmp
adc
ret
dec
mov
jmp
jle
pusha
sub
or
dec
cmp
xor
jmp
lock
sub
lret
cmp
sub
and
in
adc
add
adc
jp
mov
jnp
pop
incl
std
jle
sbb
pop
enter
sbb
push
sahf
insl
shrb
xor
xchg
into
pop
cmc
xor
inc
sub
xchg
xor
repnz
lea
scas
mov
add
psrlw
std
push
push
mov
and
xchg
test
sarl
cmp
ds
cwtl
and
in
and
je
fstpl
add
jbe
mov
pop
frstor
jnp
xor
arpl
lea
xchg
rcll
mov
jae
fistpll
mov
xchg
push
iret
push
lahf
dec
jge
rcrl
cwtl
xor
mov
faddl
jmp
fstl
lods
dec
sub
jmp
ret
repnz
push
xor
std
int
pushf
out
es
mov
scas
subb
mov
xchg
out
or
je
test
pushf
and
daa
lea
aam
sbb
stc
enter
loope
movb
loop
fisubrs
adc
dec
mov
scas
dec
shlb
jb
push
add
mov
jl
int3
sti
sbb
jecxz
mov
and
shl
shll
pop
aam
add
jg
roll
push
lods
aam
or
jge
sbbl
ds
mov
ljmp
dec
sti
jge
push
insb
popa
stc
lahf
addr16
xlat
pop
add
mov
ret
mov
inc
rcrl
xchg
jnp
dec
leave
sar
push
pop
and
dec
mov
idiv
push
divl
idivl
addr16
pop
test
mov
rcr
mov
adc
dec
nop
shr
xor
aam
push
adc
mov
or
and
or
in
call
cmp
aad
push
fcmovu
jnp
xorl
jnp
rolb
fcomp
sub
pop
xchg
pop
neg
nop
push
lods
xor
cli
mov
push
int
enter
movsb
xlat
jmp
clc
mov
pop
sub
mov
xchg
insl
aam
sbb
fimuls
rcrb
and
insb
sbb
or
fwait
mov
dec
outsb
insl
sub
mov
dec
pop
lahf
xor
xchg
jnp
push
loopne
out
and
fmull
decl
jmp
loop
mov
int3
pop
jmp
mov
mov
ret
mov
push
insl
sahf
or
nop
rcr
call
jmp
push
push
inc
arpl
stc
ds
sub
mov
sub
inc
adc
movsb
push
sbb
or
out
aam
pop
sbb
or
lcall
pop
pop
cmc
jg
in
insb
sub
sbbl
imul
mov
shll
in
pop
aas
repz
ds
sti
lahf
enter
mov
je
popf
push
xchg
cmp
mov
in
outsl
inc
pop
repnz
and
or
cmc
rorb
push
inc
fidivs
push
push
xchg
xor
out
cmp
loope
mov
sub
inc
xor
xorl
jne
test
xor
push
pop
aad
pusha
jge
jl
pop
xchg
scas
out
dec
xor
std
fisubs
push
adc
jns
outsl
mov
mov
fstpl
mov
mov
iret
and
lock
and
stos
dec
mov
inc
add
dec
loope
push
shll
mov
outsb
data16
dec
push
lahf
dec
scas
cmp
ds
or
sub
andl
mov
xchg
data16
mov
lods
ffreep
xchg
dec
loop
cmp
les
lods
ds
out
jmp
pushf
aad
out
lock
jnp
in
mov
popf
pusha
sub
daa
aad
shufps
mov
xchg
les
insb
inc
push
imull
jp
lods
enter
int3
nop
inc
pop
into
and
mov
sahf
test
dec
or
fisttpl
add
mulps
add
outsl
xchg
inc
jmp
or
adc
add
in
es
daa
lods
push
jl
in
pop
mov
pop
or
loopne
sub
push
pop
lahf
in
lcall
push
sti
push
or
clc
mov
adc
sahf
and
mov
insl
push
out
mov
stc
sarl
scas
scas
inc
jbe
adc
push
adc
lock
leave
testl
cltd
pop
inc
push
adc
ljmp
aam
dec
icebp
aad
mov
pop
inc
call
inc
scas
je
mov
test
shll
xchg
mov
xor
jg
dec
loop
sbb
jecxz
mov
into
sbb
mov
aas
lea
pop
adc
fmuls
into
arpl
dec
pop
lea
push
pop
adc
jle
xchg
rcl
out
sarb
mov
sbb
xor
jne
push
and
lds
and
cmpsl
test
mov
cld
xchg
roll
imul
adc
nop
sub
arpl
dec
xor
cs
sbb
aad
pop
mov
mov
sub
xorl
outsl
jg
mov
or
in
and
test
cmp
xlat
mov
popl
nop
jne
imul
scas
cltd
repnz
arpl
test
loopne
mov
idivl
loopne
adc
adc
dec
jnp
roll
int3
test
mov
ss
data16
cmp
daa
andl
xor
push
fimuls
enter
call
sub
mov
push
sbb
mov
jl
pop
xchg
mov
mov
cli
sbb
stos
js
cli
test
cli
sahf
push
icebp
fildl
addr16
xor
mov
popf
xchg
inc
loope
mov
mov
sbb
cli
fisttpll
hlt
sub
dec
push
mov
out
jno
out
adc
int
xlat
xor
pop
push
dec
mov
mov
jle
push
pop
pop
add
push
mov
gs
push
push
sub
mov
add
add
sbb
mov
sbb
insb
lret
out
cwtl
xor
push
data16
dec
and
xchg
inc
ret
scas
sarb
gs
push
sub
sahf
rcll
scas
test
cmp
dec
aas
jnp
addr16
adc
adc
xchg
cmp
xchg
xor
shrl
out
jae
mov
popa
fwait
or
sub
cld
jge
push
xor
fs
lcall
push
in
sbbl
jmp
inc
incl
pusha
dec
push
imul
xor
and
cmp
mov
xchg
out
iret
cmc
xor
jg
push
push
pop
push
inc
rol
repz
ret
divb
jmp
xchg
sbb
inc
jbe
inc
mov
inc
mov
adc
sarl
lfs
in
fildll
mov
xchg
xchg
push
das
fdivrs
mov
mov
test
jae
sbb
das
mov
leave
addl
dec
ror
pop
sub
out
push
adc
js
cmp
cmpsb
mov
insl
cmp
fldl
out
int
shlb
flds
cmc
adc
addr16
jle
mov
lret
adc
mov
cmp
idivb
or
push
sbb
push
js
shl
fldenv
jnp
or
or
or
mov
cmp
lea
shrl
inc
rclb
in
push
out
int3
loopne
cmp
cli
ret
sbb
sbb
mov
xor
jg
imul
or
iret
dec
cmp
aas
mov
inc
or
jne
or
jge
xchg
inc
inc
and
repnz
enter
sub
push
mov
add
inc
out
jae
xchg
jns
clc
into
rolb
movb
sub
sub
dec
sbb
push
sarl
mov
gs
cltd
inc
rcll
pusha
repnz
jge
call
xchg
mov
xor
lret
ds
enter
pop
jno
pop
or
pushf
xor
les
cmpb
dec
sbb
js
pop
mov
ss
lret
push
enter
xor
dec
nop
mov
cmp
dec
cwtl
aaa
outsl
and
lahf
rol
jnp
ds
ret
push
in
mov
xlat
pop
xor
adc
fbld
adc
lods
jecxz
popf
loopne
rol
and
dec
pushw
in
dec
jge
sti
jge
push
into
pop
mov
push
jecxz
mov
mov
rcl
sarb
adc
pop
pop
je
enter
xrelease
pop
or
outsl
and
mov
dec
lcall
mov
mov
dec
or
xchg
cmp
sub
pop
lods
lods
xor
call
scas
jg
sbb
addl
dec
jecxz
mov
mov
xor
jecxz
repnz
hlt
testb
test
dec
out
dec
aam
fnstcw
jge
ds
jmp
mov
shll
push
icebp
rcrl
and
in
arpl
jl
insb
scas
and
pop
add
sarb
lods
cmp
push
pop
in
xor
xchg
andl
push
inc
fstp
xlat
fdivrp
cmpsl
jecxz
daa
test
push
mov
push
jo
rcrb
test
push
jb
orl
push
mov
jmp
pusha
repz
sub
xchg
cmp
xor
or
sar
stc
cmpl
sub
sar
iret
enter
xor
add
cmp
test
das
repz
lea
cli
adc
mov
mov
jo
or
sbb
jnp
cmc
push
inc
enter
push
mov
sub
rclb
scas
fistl
adc
xchg
call
cmp
int3
adc
insb
adc
lret
cmpsb
cs
inc
push
jbe
sbb
and
fwait
dec
in
bound
fdivs
shll
stos
sub
pop
sbb
push
xchg
stos
xorb
or
add
aas
pop
and
mov
hlt
insb
test
mov
xchg
xlat
bound
mov
imul
cmp
and
hlt
jo
xchg
lcall
psubsw
cmc
and
or
xor
jb
mov
shlb
daa
inc
out
mov
push
rol
in
es
ljmp
fs
sbb
xor
ja,pn
aam
in
inc
iret
xlat
fnstcw
iret
scas
dec
sarb
inc
dec
add
loope
iret
fisttps
out
mov
xchg
push
ljmp
sub
jge
in
ja,pn
insl
lea
dec
cld
outsl
add
ja
les
std
or
lds
lods
and
mov
pop
pusha
push
and
jge
add
and
or
scas
and
shl
lds
inc
popa
pushf
aam
cs
lods
jbe
or
and
rorl
popf
push
jbe
int
sbb
popa
xchg
stos
dec
aam
xchg
mov
push
scas
das
mov
jne
xor
aas
repnz
adc
rolb
or
pop
sbb
inc
fwait
push
xlat
xchg
cwtl
mov
add
add
inc
ret
outsb
mov
repz
repnz
fwait
adc
test
xchg
in
cmpsb
nop
test
dec
push
fcompl
rol
pop
or
repz
pop
lret
loopne
jne
jecxz
push
loope
test
fs
icebp
xor
inc
mov
mov
daa
or
sbbb
mov
mov
push
add
fs
fwait
gs
jl
cs
mov
nop
add
add
out
fdivl
xchg
xlat
rcl
and
int
pop
sub
adc
jp
jmp
lret
push
xadd
mov
aad
aas
inc
notl
xchg
cmp
jmp
xor
pop
add
mov
pop
mov
jns
push
add
out
push
mov
aam
ffree
mov
or
push
dec
outsl
mov
pop
enter
pop
mov
stc
inc
mov
lret
repnz
bound
std
mov
cltd
cmc
dec
icebp
int3
push
je
inc
fisubrs
fisttps
arpl
aad
out
inc
cwtl
test
xchg
push
mov
or
pop
mov
jo
mov
and
rol
cmp
xor
push
test
mov
ret
mov
jge
push
sbb
jmp
imul
or
repnz
adcb
mov
adc
ficomps
adc
call
xorb
repnz
ret
pop
fistps
rcll
or
mov
xor
scas
pop
cmc
pop
xor
jno
mov
sub
inc
sub
daa
jns
mov
test
add
pop
sahf
insl
in
fistps
test
adc
out
shr
sbb
out
lock
sub
mov
cmc
or
mov
out
test
xchg
xchg
sub
mov
inc
loope
sbb
movsl
xchg
sbb
lcall
sub
insl
ja
xor
cld
inc
int3
sti
fbld
pop
push
sub
dec
hlt
xchg
fstpt
sbb
push
inc
jg
dec
and
mov
add
mov
add
pop
mov
pop
out
jecxz
inc
fists
sub
mov
xchg
pop
push
popf
xchg
jg
pushf
scas
ja
mov
or
or
in
sti
sbb
xchg
xchg
jnp
push
push
pop
jb
xor
and
adcb
addr16
and
enter
jns
dec
outsl
outsb
clc
addr16
mov
or
inc
cmp
in
or
das
ljmp
addl
mov
pop
dec
push
mov
sbb
and
pop
jmp
hlt
xchg
dec
repnz
mov
xchg
dec
cmpsb
std
lret
hlt
js
call
xchg
insb
lahf
aad
iret
pop
dec
jne
dec
ds
or
mov
mov
jbe
lahf
adc
mov
xchg
or
fdiv
sbb
scas
inc
cmp
pop
dec
rorb
jle
cmp
leave
nop
sub
cmp
mov
xchg
lret
or
cmp
xor
sarl
jmp
push
daa
xor
adc
inc
sub
fdivrs
inc
cs
lods
shl
into
mov
clc
mov
sbb
outsl
cmp
imul
out
lret
je,pt
mov
js
test
mov
roll
out
jp
rcrb
pop
scas
int
cltd
or
dec
in
sti
dec
and
test
pop
mov
lret
push
cli
ret
ds
fistpl
sub
data16
pusha
jp
stos
aaa
lahf
repz
push
and
jb
sbb
int
mov
scas
fstps
and
add
fisttpll
imul
cld
push
mov
inc
push
imul
pushf
jmp
mov
lahf
dec
inc
scas
testl
lea
xlat
cmp
pop
mov
cmp
jnp
setns
mov
into
cmp
mov
call
out
jno
mov
cltd
int
push
lcall
iret
mov
les
pusha
in
add
add
pop
bound
xchg
xor
popl
in
mov
sti
xchg
and
bound
loopne
mov
ret
fsubs
mov
or
data16
xlat
sahf
add
sbbl
jns
push
and
popf
test
sti
divb
jns
bound
cmpsl
into
or
fisubrl
sub
ja
punpckhwd
mov
mov
inc
push
mov
test
cmp
andl
cmp
push
call
in
mov
loop
test
cmp
cltd
orb
jo
mov
sbbb
fdivr
aaa
addr16
mov
ret
nop
or
xchg
xchg
dec
adc
ret
cld
push
roll
xchg
fiadds
mov
leave
mov
or
add
ljmp
clc
clc
mov
sub
pop
push
or
push
xor
data16
sahf
lea
ss
ret
call
int3
notb
push
scas
mov
pop
test
call
popf
daa
sbb
sysexit
jg
xchg
sub
jo
sarb
xchg
imul
dec
test
pop
movsl
jle
jp
push
and
cmp
lock
mov
in
or
mov
lret
jae,pn
push
in
in
inc
test
rcrl
daa
dec
sti
lcall
or
adc
push
inc
jb
and
jle
pop
les
cmp
sbb
sahf
aaa
adcb
jbe
lds
sti
xchg
sbb
ja
fistpl
scas
loop
or
lret
adc
stos
mov
dec
push
arpl
imul
jne
dec
pushf
mov
adc
cmc
dec
imul
fiaddl
leave
in
mov
cmp
xorb
cltd
xor
sbbl
fwait
out
jns
push
shrl
dec
push
into
add
xor
pop
mov
and
mov
mov
cmpsl
or
jne
xor
outsb
or
pop
fs
push
lds
stos
cmpsl
mov
lahf
gs
lock
test
in
das
hlt
add
pop
and
jnp
xor
xchg
fnstsw
sarb
cmp
ror
popa
push
inc
lret
dec
fdivrs
pusha
in
out
push
leave
push
or
int3
or
std
mov
iret
sahf
std
pop
xchg
in
lock
insb
daa
mov
mov
cmp
inc
push
dec
lret
push
aam
mov
dec
xchg
int
lret
jl
pusha
sbb
or
mov
arpl
mov
cwtl
mov
outsl
cmp
cmpsb
mov
pushl
je
push
int
inc
fisttpl
loop
in
and
pop
cmp
sahf
mov
jp
pusha
jmp
inc
cmp
icebp
push
or
xor
xor
stos
pop
xlat
xor
mov
jb
ljmp
pop
fsubs
js
mov
xor
xchg
jb
scas
push
subb
fdivs
dec
jmp
lea
mov
pop
dec
push
push
stc
dec
mov
pushl
jl
or
sahf
xchg
data16
sbb
pop
outsl
sub
clc
insb
fsubl
fldl
dec
mov
scas
outsl
cmc
hlt
jae
jno
pop
aas
add
notb
or
push
aad
imul
aam
ret
push
fs
scas
rol
cmp
adc
movsb
ret
add
cld
xchg
jge
stos
inc
popf
es
mov
sarb
jl
repz
dec
dec
and
rorb
adc
xchg
mov
test
imul
lods
imull
fucomip
popf
ret
cltd
pop
push
sub
cmp
xor
inc
mov
add
into
jno
mov
xchg
cmp
decl
jg
jb
aam
push
add
lods
test
jecxz
fisubs
outsb
xor
pusha
add
jbe
xor
cmp
push
mov
scas
aas
inc
mov
ret
xchg
js
and
loope
mov
cmp
inc
rcr
mov
bound
sub
jns
jecxz
jne
pop
mov
xor
aam
dec
sub
int
in
pop
pop
iret
loope
je
hlt
outsb
sbb
cmp
mov
sbb
rcll
jb
mov
push
outsl
dec
cmp
js
outsl
popf
loop
sbb
std
push
into
mov
inc
ffreep
and
xchg
cmp
sbb
cmp
xlat
cli
jnp
sbb
pop
mov
mov
add
lods
fs
sti
repnz
sbb
and
cmp
push
jmp
fnstenv
xchg
push
dec
jmp
push
aam
mov
jg
inc
adc
inc
jnp
mov
insb
sbb
test
add
jo
inc
mov
test
mov
mov
mov
cmp
js,pn
or
mov
dec
mov
pop
inc
leave
mov
lods
in
lcall
push
mov
mov
leave
inc
dec
jbe
pop
pop
je
inc
fimuls
icebp
fwait
dec
xchg
repnz
dec
mov
lods
lcall
sbb
lods
lahf
arpl
lods
xor
xchg
push
test
lahf
mov
or
push
mov
clc
cmc
and
or
lahf
setno
push
in
xor
jle
mov
mov
js
imul
stos
cmp
lods
out
jp
adc
pushf
push
pop
clc
insl
lods
test
mov
sub
cmp
fucomip
sub
add
lods
fdivs
xchg
in
es
lods
andl
aaa
aad
rclb
xlat
xor
pop
add
push
add
inc
movsb
out
push
jp
xchg
add
clc
push
stos
pop
mov
rcrl
and
lods
mov
xchg
xchg
faddl
dec
shrl
cmc
inc
xchg
in
sbb
xor
sti
adc
imul
push
add
arpl
xchg
inc
out
add
or
repz
lahf
push
pop
push
and
mov
aam
int
dec
in
jae
or
xchg
cmc
and
jle
loopne
sarl
push
mov
fwait
mov
addr16
je
fnstcw
shrl
out
arpl
jmp
loop
inc
sub
jmp
idivl
in
out
jg
jns
sub
lret
push
repz
es
xchg
inc
mov
in
inc
cltd
rcll
popf
ret
mov
ret
cmpsb
aad
out
dec
cltd
sbb
in
dec
xor
xor
sub
int3
ljmp
mov
mov
cli
lods
cmpsl
pop
jae
mov
sbb
aas
mov
enterw
mov
mov
in
xchg
cmp
or
hlt
jmp
cmp
call
sub
stos
cmp
xor
lods
ds
add
fsubl
jne
ljmp
push
in
mov
dec
sahf
in
sar
test
fstl
dec
movsl
insb
xchg
dec
fdivs
dec
cmpb
enter
xor
pusha
xchg
adc
jbe
movsb
cld
push
pop
and
jno
stos
dec
das
inc
sbb
dec
inc
fadd
inc
pop
pop
add
std
test
sub
in
push
sub
sarl
and
iret
daa
outsb
jmp
push
pop
out
jbe
xor
pop
pop
fistps
or
inc
pop
loope
push
mov
sub
sahf
inc
in
sbb
add
jno
xor
cmp
nop
push
xchg
gs
fdivrl
jmp
popf
jg
adc
xor
lds
ror
cmpsb
cmc
and
mov
sub
daa
ljmp
adc
fisttpll
mov
loop
jmp
jle
or
mov
fidivrl
xor
or
xchg
pop
out
lret
pop
inc
push
jge
xchg
mov
mov
daa
in
fsts
sahf
inc
fwait
fstpl
adc
test
jg
in
xor
push
sub
fcompl
stos
xchg
arpl
jge
test
sub
add
je
cli
fsubs
dec
leave
outsb
test
lea
arpl
jl
loope
mov
dec
push
xchg
sti
mov
mov
out
xor
negb
pop
insl
stos
idivb
sub
leave
mov
mov
xchg
in
mov
mov
adc
or
popa
ret
lret
dec
in
jmp
xor
push
adc
pop
loop
stos
cmp
or
xor
ret
neg
rolb
mov
or
inc
je
fisubrs
sbb
fchs
xchg
loope
cld
ss
jbe
aaa
push
add
xchg
fstps
xchg
and
sbb
xor
fsts
push
out
outsb
das
mov
inc
xor
jg
adcl
nop
imulb
add
imul
fstpt
pop
jno
mov
icebp
or
pop
sub
cmp
hlt
jbe
rcll
mov
sbbb
negb
mov
push
push
pop
arpl
mull
js
fdivs
dec
repnz
pop
call
mov
jbe
jb
out
inc
imul
int3
stos
push
xchg
mov
add
add
fdivr
leave
stc
incb
fisubl
rorb
cmp
add
jo
lcall
xlat
rcl
pop
push
cmp
inc
mov
or
xor
sti
jp
mov
nop
or
jge
inc
out
in
lock
xchg
idivl
push
mov
jne
xor
xchg
shll
stos
mov
popa
loop
jl
dec
movsb
cmp
mov
iret
xor
mov
data16
push
add
and
pushf
push
or
call
mov
xor
jbe
lods
pushf
or
jl
test
mov
cmp
loope
cs
cwtl
sti
mov
inc
mov
and
loopne
in
mov
jp
xchg
and
outsl
jmp
gs
sbb
mov
cmc
or
sub
and
insb
sub
aam
pushf
pop
pop
lds
jnp
jo
push
pop
and
inc
and
sti
and
sub
gs
sbbb
pop
fwait
popfw
dec
adc
sbb
add
sbbl
adc
scas
pop
jl
jns
mov
shufps
pop
fbld
stos
xor
mov
idiv
movsl
or
gs
popa
pop
cs
mov
lods
pop
pop
lahf
jnp
in
mov
mov
mov
jg
pop
cmp
sub
sti
aam
mov
dec
add
insb
xchg
sbb
xchg
push
and
push
rcr
es
jo
loop
mov
in
pop
gs
jge
push
aas
mov
arpl
out
xchg
adc
xchg
sub
pop
sub
stos
test
inc
mov
adc
push
lret
call
inc
stos
mov
push
jbe
push
sbb
jno
ret
scas
lahf
call
sbb
cwtl
jmp
cmp
and
mov
or
popa
rep
or
data16
inc
fistps
test
imul
cmp
stc
lret
jmp
leave
ja
sub
fwait
pop
pop
cwtl
fwait
les
dec
mov
out
sub
and
decl
gs
dec
jmp
dec
xchg
jp
dec
inc
inc
je
movsl
push
leave
call
sbbl
movsl
mov
xchg
aas
and
stc
pop
cs
mov
mov
loopne
enter
mov
adc
dec
movsl
mov
jge
mov
int3
sbb
call
push
dec
out
jb
mov
insb
inc
and
loope
aad
jne
push
das
mov
xor
das
xchg
cmp
jl
mov
in
ret
leave
xchg
lea
inc
inc
popa
cltd
adc
loop
jb
jns
mov
mov
test
cmp
pop
mov
clc
xchg
sbb
jno
pop
jmp
or
sbb
mov
pop
sarl
and
pop
xchg
mov
nop
bound
out
jo
stos
cmp
stc
in
push
xchg
ja
call
mov
rorb
mov
cmp
fidivrs
test
dec
cltd
xchg
xchg
or
loop
lahf
lret
push
call
movsl
dec
xor
fmulp
inc
adc
push
mov
mov
loop
fdivl
stc
lea
shr
mov
xchg
cltd
adc
int3
and
mov
push
cmp
inc
jp
dec
movsb
mov
jbe
sbb
cltd
clc
in
and
xlat
xchg
inc
insl
pop
add
shl
sub
or
jl
mov
sub
sub
adc
shrl
cmp
push
jge
pop
daa
adc
or
cli
jo
adc
into
jle
or
lret
imul
sub
push
inc
shll
lds
pop
cmpsb
ljmp
lahf
sbb
pop
stc
push
jae
inc
add
testb
mov
out
jae
daa
movsl
pop
mov
pop
insb
rolb
adc
ss
pop
mov
inc
push
dec
loop
sbb
sysret
notl
pop
loopne
mov
pusha
arpl
xor
enter
add
int
push
jnp
lods
pop
ret
sbb
xor
xchg
in
xor
fwait
vpcomb
push
bound
fsubs
pop
xor
sub
xchg
xchg
push
imul
testl
inc
stos
push
mov
aad
push
and
mov
sub
sub
xchg
lret
pushf
repnz
lods
aad
popa
mov
nop
or
push
rol
mov
lds
nop
sub
fidivrs
lret
inc
ljmp
push
stos
mov
adc
push
arpl
xchg
fdivrs
push
push
outsb
jecxz
sar
and
dec
mov
test
jge
add
mov
popa
fdivs
shrb
insl
jmp
ret
jmp
adc
xchg
int3
adc
cld
sub
mov
insl
pop
xchg
rol
mov
lret
and
pop
in
std
mov
push
or
mov
mov
pop
push
inc
xchg
xchg
or
jmp
xor
loope
cmpsb
xor
in
inc
and
mov
gs
mov
or
pop
or
xor
adc
pop
adc
out
xchg
inc
test
mov
pushf
aad
imul
addb
push
adcb
mov
negb
sbb
stc
xchg
aas
stos
sub
scas
rorl
cmp
add
ljmp
scas
xor
nop
cmp
out
xor
push
out
cmp
ja
es
arpl
sub
push
fucomi
std
or
jo
push
sbb
adcb
bound
mov
dec
dec
mov
and
cwtl
aas
lahf
out
push
mov
mov
ja
cmc
aaa
hlt
pop
jp
ret
aas
test
xchg
xor
lcall
sub
inc
jl
and
jne
enter
das
lock
sub
test
cmc
inc
sbb
mov
mov
mov
mov
push
cmpsl
mov
or
in
ja
mov
or
ss
jae
and
push
inc
bound
sbb
shll
pop
lret
jne
mov
adc
mov
or
out
loop
and
pop
test
and
dec
loopne
add
pop
jg
mov
lret
lods
jmp
das
aam
push
mov
cmc
aas
testl
dec
out
push
mov
in
enter
inc
aas
and
les
daa
aas
and
push
imul
insl
flds
jg
push
mov
or
cli
push
std
div
icebp
lods
in
repz
out
inc
xor
cld
xchg
mov
inc
mov
or
cmpsb
in
in
roll
arpl
add
adc
mov
or
dec
jmp
lods
xor
and
lcall
in
jge
push
enter
ret
ficoms
dec
or
xor
mov
push
inc
ss
mov
mov
sub
xor
fiaddl
inc
pop
movsl
std
pop
aas
mov
pop
xor
dec
enter
out
xchg
pop
pusha
rclb
mov
pop
aad
jecxz
push
sti
pop
cmp
lods
stos
int3
cli
cmp
or
hlt
mov
shll
ja
ljmp
adc
dec
stos
mov
shlb
jmp
ret
xchg
mov
aas
adc
dec
int
and
into
mov
test
mov
sub
loop
sub
jl
fcompp
adc
aad
dec
pushf
dec
xchg
jp
sub
movsl
nop
sub
sub
cwtl
cmp
jecxz
lret
clc
clc
sub
mov
sbb
mov
out
fisubs
es
xorb
mov
movsb
mov
pop
ret
sahf
bound
fdivrs
aas
movsb
cli
call
fsubrs
sahf
xchg
ljmp
cmpb
push
lods
or
inc
sti
shl
sbb
jbe
les
ss
iret
mov
inc
cmpsb
or
loop
xor
dec
jge
add
xorb
mov
xor
mov
mov
push
pop
jl
rorl
test
mov
bound
pop
pop
jmp
and
xchg
cmp
sub
cwtl
sub
cmp
sub
cltd
or
cmp
iret
or
loopne
mov
push
ficompl
push
and
push
pusha
adc
mov
xchg
cld
das
lea
mov
add
jne
je
sbbb
adc
aam
das
pop
scas
jno
push
xchg
mov
in
add
add
pop
cld
cmpsl
int3
repnz
cmpsb
pop
mov
ljmp
pusha
out
testb
je
jno
dec
mov
jb
jl
xchg
lock
aaa
mov
js
mov
ljmp
mov
fnstsw
xchg
cli
mov
stc
push
jecxz
xchg
lahf
js
push
and
in
dec
mov
or
pop
mov
push
add
lods
mov
jno
mov
xor
pop
repnz
adc
lcall
shlb
jae
or
shrl
and
push
pushf
xchg
mov
cli
push
imul
ror
mov
pop
outsb
push
cmc
sub
sbbl
mov
xlat
pop
mov
sbb
and
aaa
cmp
xlat
dec
cmp
sbb
repz
xchg
cmp
outsb
stc
inc
mov
pop
mov
push
pop
out
clc
orl
pop
xchg
lret
in
sbb
ja
mov
pop
cmpsl
push
in
mov
mov
sahf
inc
sti
and
repnz
filds
ss
daa
int
push
arpl
push
jnp
ljmp
mov
lret
sbb
roll
dec
mov
push
mov
out
lcall
fisttps
lahf
cmp
inc
fcom
inc
in
ss
pop
pop
pop
inc
sub
mov
pop
cmp
xchg
add
xchg
sbbl
adc
mov
subb
xchg
or
xchg
pop
in
icebp
xor
outsw
mov
cltd
pop
movsl
cmc
cwtl
cmp
inc
mov
jl
es
pop
mov
in
imul
fxch
shll
aam
pop
mov
mov
jne
andb
and
or
and
call
dec
pop
jl
adc
shrb
lock
stc
xchg
xchg
or
xlat
test
addb
cmc
cmpsb
neg
rol
dec
jg
xchg
cmp
outsl
pop
mov
call
aam
jns
sub
stc
push
mov
dec
pushl
jle
sub
std
push
pop
les
pop
imul
mov
jle
mov
and
mov
imul
push
sbb
fsts
jmp
pop
add
mov
dec
xchg
dec
xor
roll
cmpl
dec
jl
add
push
lods
loope
call
out
mov
inc
and
arpl
enter
lret
leave
xchg
scas
gs
test
sub
mov
das
ja
add
adc
mov
sub
lcall
lcall
and
xchg
push
outsl
pop
add
xlat
mov
sub
sub
add
cmp
mov
fnstcw
dec
stos
pop
fcomps
orl
pop
mov
mov
jnp
push
int3
mov
insb
add
dec
aaa
mov
test
pop
push
movsb
ficomps
xchg
insl
sbb
pop
mov
pop
xor
jbe
in
insl
cwtl
sub
pop
lret
sub
jns
es
push
movsb
push
sahf
adc
ffree
enter
les
lahf
mov
ds
icebp
pusha
push
pusha
pop
push
push
pop
xchg
inc
sbb
icebp
mov
mov
push
mov
dec
repz
adc
fsubl
sub
or
imul
ss
cmp
xchg
or
andl
imul
add
add
jle
js
xorl
mov
cltd
xchg
xchg
mov
sbb
or
iret
mov
add
push
scas
xor
mov
sbb
mov
mov
clc
std
repnz
in
cltd
fisttpll
adcl
mov
cmp
daa
xchg
add
cmc
scas
out
mov
ljmp
push
cs
jnp
mov
or
shl
lcall
mov
push
inc
out
out
push
out
or
push
stc
popf
test
mov
and
jno
xchg
hlt
cmpsb
lret
and
pop
je
data16
clc
sub
and
pop
rcrl
inc
mov
sarl
sbb
mov
sub
mov
es
int
mov
mov
mov
and
scas
cwtl
cs
lret
inc
fcom
gs
inc
jge
in
frstor
jle
sbb
aad
insb
in
aad
fidivl
dec
and
loope
or
inc
adc
filds
ret
sub
add
into
jmp
sub
in
jne
fimuls
in
ret
outsl
adc
sti
push
daa
mov
and
inc
jmp
add
mov
imul
std
sub
sub
in
mov
sbb
or
jmp
cmp
fsts
jp
sub
push
movsl
les
dec
mov
test
push
aas
or
push
adc
push
data16
push
mov
mov
push
fmul
add
pop
and
mov
push
cli
jbe
popa
jle
add
mov
dec
jle
push
aam
inc
pop
cmp
sbb
test
xchg
and
cmpsl
repz
cmpsl
out
sti
cmp
lea
and
sub
add
jae
into
sbb
iret
mov
add
mov
add
into
rcll
bound
and
iret
push
xchg
jmp
ret
icebp
xchg
popa
cmpsb
testl
fcomip
shr
imul
aas
iret
jp
adc
jg
in
sahf
mov
push
push
aas
shll
inc
cmpsb
das
sahf
fmuls
mov
pop
adc
adc
push
les
mov
mov
xchg
rcrl
cld
xchg
push
fldcw
sahf
inc
and
jp
mov
pushl
or
mov
bnd
cmp
pop
fdivs
mov
dec
cmpsl
inc
ret
sub
push
push
push
and
jo
adc
loop
mov
xor
in
fadd
insl
push
ljmp
cmp
lds
mov
pop
ror
and
dec
lret
and
sbb
mov
mov
jae
inc
or
insl
pop
mov
jo
jae
mov
clc
js
mov
dec
aas
sub
test
fiaddl
jmp
test
mov
ret
fsubrs
and
icebp
stos
push
bound
jge
mov
and
sub
push
sbb
sub
mov
test
jns
loope
xchg
ljmp
lcall
loopne
or
push
push
addr16
test
aaa
jl
lcall
cwtl
loop
ret
fsubl
jmp
cmc
or
inc
sub
lcall
out
and
inc
ret
cli
cmp
ret
push
jnp
roll
push
inc
sbb
sub
xchg
sub
inc
push
push
jnp
pop
ret
in
inc
insl
ss
enter
inc
leave
xchg
mov
cli
sub
lahf
lods
lock
pop
fs
cld
mov
pushf
or
out
add
jbe
cmp
rcrb
les
pop
dec
inc
push
add
ret
xor
test
outsb
mov
arpl
mov
inc
test
push
orl
pop
inc
enter
jg
lret
inc
imul
hlt
pop
adc
test
int
push
push
cmp
pusha
and
sbb
in
jg
push
or
jb
add
cmpb
xor
mov
loopne
sbb
aas
idivb
add
fwait
scas
incl
push
adc
popa
repz
fadd
les
jbe
les
imul
sub
sbbb
jl
les
movsl
imul
addr16
jl
in
mov
aaa
sarb
inc
xchg
pusha
lret
fsubl
adcb
jle
add
out
cwtl
fldcw
dec
jmp
jno
dec
or
mov
aas
ficoms
add
ret
adc
xchg
xor
mov
pop
ret
cmp
call
add
imul
loope
cltd
iret
jp
add
jmp
push
hlt
test
adc
aaa
cmp
repz
adc
cmp
add
xchg
pop
inc
addr16
cmp
rolb
and
pop
sub
fildl
xlat
punpckhbw
aam
inc
pop
movsl
or
mov
dec
xchg
gs
inc
vpackssdw
call
mov
sub
mov
sub
push
pop
mov
add
cmc
dec
push
std
mov
xchg
sbb
lods
mov
shr
push
clc
inc
mov
inc
insl
sub
jae
inc
sub
xor
cli
imul
enter
mov
out
mov
ret
push
push
sub
cmp
pusha
push
cmpsl
insb
pushf
fildl
lods
subb
dec
push
fbstp
add
sti
or
mov
aam
and
jne
or
lcall
pop
xor
leave
call
sub
jge
divb
cmp
pushf
sti
adc
push
xchg
lds
cmc
cmpsl
dec
lea
cmp
or
sub
sub
cli
test
adc
ret
popl
stc
fisubrs
dec
sbb
mov
mov
adc
xchg
popl
scas
cmp
popa
icebp
std
xchg
addb
leave
adc
mov
mov
lret
notl
out
mov
les
lahf
adc
int3
sub
mov
inc
add
cmpsb
xor
int
adc
shll
add
jmp
ljmp
xchg
jns
push
cmp
adcb
pop
into
sub
dec
push
add
dec
push
ljmp
inc
and
adc
xor
push
jge
inc
imul
jno
rdtsc
push
adc
sbb
xor
inc
cmpsl
inc
orb
inc
into
clc
cmp
cs
je
inc
fmuls
movsl
shll
inc
in
mov
jb
fsts
push
mov
xlat
or
setae
in
or
xchg
rcll
imul
sbb
or
add
push
lea
xor
mov
or
dec
testb
out
test
stc
lahf
inc
je
jb
rcr
mov
mull
out
sub
out
push
repnz
mov
dec
jbe
jnp
negl
mulb
into
cs
xchg
push
jecxz
nop
int
push
push
cmp
sbb
outsl
das
hlt
out
and
fmull
cmp
dec
outsl
enter
dec
pop
mov
push
aad
andb
lock
leave
bound
mov
shll
insb
push
aas
jns
pop
mov
pop
enter
push
addr16
pop
sbb
jl
xchg
rcr
incb
inc
mov
mov
daa
adc
loope
pop
adc
stos
jbe
rcrl
popa
arpl
out
in
jge
mov
psubq
out
lea
pop
add
daa
pusha
push
inc
or
mov
push
pop
sti
mov
cmc
loop
ficoml
pop
outsb
aad
mov
mov
rorb
repz
cwtl
and
jae
lret
xor
mov
push
shlb
mov
stos
les
nop
xor
xor
push
or
xchg
lret
cmp
aas
xchg
sti
loope
cmp
adc
lret
arpl
xor
adc
in
lret
int
push
out
jns
adc
test
in
xor
cmp
andl
in
divb
xorb
pop
push
jg
pop
push
es
sub
push
fnstcw
jge
xchg
fwait
jo
mov
icebp
bnd
in
mov
jne
mov
pop
jns
les
fmul
shl
mov
jg
mov
ret
and
or
and
fimull
ficoms
sub
mov
pop
arpl
negl
push
or
sub
pop
sub
mov
mov
jecxz
cs
mov
stos
pushl
push
jb
push
push
push
rcll
pop
mov
mov
gs
sbb
jb
mov
adc
and
stos
dec
inc
add
push
insb
fsts
sahf
adc
and
adc
cmp
test
fwait
loope
and
stos
test
fdivl
loop
xor
mov
jp
ljmp
dec
lcall
leave
xchg
test
cmp
jnp
sub
pop
pop
mov
adc
ficoml
out
ret
das
sbb
leave
ds
dec
push
push
bnd
mov
dec
mov
imul
std
xor
push
xor
sbb
loopne
cmc
cmp
jnp
fs
mov
sbb
adc
pop
or
push
xchg
shlb
sbb
pop
xor
in
pop
rorl
push
mov
test
sub
addb
and
int3
cld
sbb
imul
outsl
mov
add
test
loopne
inc
push
push
aas
and
insb
js
pushf
adc
sub
data16
out
inc
push
ret
lahf
ret
pop
aas
mov
pop
pop
pop
dec
data16
mov
and
frstor
fs
call
stos
jno
test
inc
nop
dec
clc
test
cmp
pop
lea
mov
cld
cmpb
movsl
dec
scas
cmpsb
cmpsl
repz
mov
or
lcall
fidivrl
add
lock
lock
adc
push
mov
ret
sub
addl
repnz
inc
push
fnsave
pop
xor
or
stos
add
je
pusha
gs
or
pop
sbb
out
mov
out
loope
test
sti
outsl
flds
dec
sbb
push
or
push
xor
ret
imul
fwait
mov
aaa
pop
dec
ja
pop
xor
call
push
cmc
stos
push
xor
daa
sub
xchg
jl
sub
test
testl
aaa
adc
pop
pop
repz
adc
std
jns
or
push
cld
mov
add
cs
jle
mov
mov
jbe
jg
inc
lea
push
ljmp
xchg
mov
fs
xchg
lds
push
std
test
xor
out
pop
pop
insl
cmp
sar
sti
popf
aad
outsb
pop
cwtl
push
xchg
movsl
mov
mov
xchg
mov
inc
loopne
repz
cwtl
push
mov
in
test
and
add
mov
mov
sub
push
mov
pop
cmp
cmpsl
add
add
or
repz
lret
test
sub
push
sahf
movsb
enter
es
cmpsl
push
mov
fmul
ret
mov
push
cmp
or
and
clc
adc
sub
cltd
push
iret
adc
mov
and
fucomip
xchg
pop
insl
jl
loop
xchg
into
xor
and
inc
sub
sbb
in
xor
sub
inc
pop
cmp
pop
sub
hlt
fstl
add
push
int3
gs
mov
sbb
int3
pop
dec
mov
cs
in
inc
rclb
ds
fisubs
dec
shlb
bound
lcall
dec
and
dec
jge
adc
pop
call
sbb
orl
push
inc
inc
call
add
popf
cmc
mov
in
inc
icebp
sbb
sub
jns
mov
xorl
gs
cmp
addr16
movsb
jg
and
mov
aam
push
sbb
daa
mov
dec
shrb
and
pop
sbb
sub
sahf
dec
mov
pushf
outsl
in
mov
shlb
pushf
mov
sti
or
in
jno
cltd
repnz
dec
ljmp
sbb
mov
out
jbe
into
shlb
movsl
lds
dec
sbb
dec
lahf
sub
jbe
ds
mov
test
divb
ret
or
in
jbe
fucomp
and
in
mov
daa
lds
push
and
cmp
shl
adcl
xlat
filds
cs
aam
cmc
popa
push
xchg
scas
les
push
cli
clc
fmull
adc
and
mov
mov
std
pop
leave
adc
mov
bswap
push
dec
mov
dec
xchg
bound
xchg
outsl
jp
add
xchg
mov
mov
pop
int
push
ret
mov
xor
fwait
inc
xchg
inc
xor
sbbb
mov
cmpsb
rcll
pusha
cmp
sub
push
pop
fmull
inc
pop
xchg
adc
in
cld
out
adc
pop
in
jbe
icebp
ljmp
les
cmpsb
hlt
inc
sub
jmp
mov
jl
scas
and
data16
nop
jbe
je
jecxz
xor
cs
jle
dec
xchg
cmp
jo
sbb
mov
cmp
mov
mov
inc
pop
out
sbb
nop
in
sub
inc
clc
popf
mov
xchg
sbb
sbb
jecxz
in
xchg
sti
inc
stos
jmp
pop
and
dec
cmp
jl
cld
std
push
mov
sub
dec
pop
repz
adc
shrl
lcall
cmp
pop
cli
aam
mov
xor
outsl
cmp
int3
cld
mov
ret
test
stc
dec
jmp
cli
cmp
incl
rclb
dec
xor
mov
jnp
addb
mov
push
insl
sub
das
adc
or
in
arpl
xor
lods
inc
push
repnz
lods
sub
inc
hlt
xchg
mov
outsb
cmp
test
cmp
mov
xor
sub
xchg
iret
mov
push
fs
mov
pushf
fistps
adc
sbb
sbb
adc
xor
sub
mov
imul
xchg
das
mov
loop
into
pop
mov
push
ss
test
add
mov
xchg
fstpt
les
or
shrl
push
cmp
pushf
insl
scas
mov
mov
mov
mov
inc
outsb
mov
sbb
jns
pop
aaa
int3
lret
xor
jae
aad
mov
or
neg
dec
adc
dec
nopl
in
andb
stos
add
mov
xchg
ja
sub
push
sahf
lret
imul
add
lret
pop
imul
jmp
inc
mov
push
push
jo
roll
dec
mov
ret
out
dec
mov
rclb
fstps
mov
arpl
fistpll
inc
sub
adc
pop
xchg
loop
outsb
imul
divb
insb
inc
push
cltd
clc
mov
cltd
loope
mov
dec
inc
cltd
lds
add
jo
xchg
js
test
lcall
xchg
mov
adc
xchg
lahf
ja
sahf
xor
daa
lahf
movsb
ljmp
adc
adc
shlb
cmpsl
push
clc
inc
das
test
xor
adc
test
mov
push
jmp
push
mov
adc
in
push
mov
cwtl
in
sub
jg
adc
xchg
and
test
xchg
xchg
cmp
test
push
sti
pushf
mov
leave
adc
or
cmpsl
arpl
cmp
pusha
jb
sbb
xor
dec
movsl
movsl
mov
jbe
fucomip
stos
ficoms
lcall
adc
xchg
fisttpl
in
sti
push
inc
gs
pop
aas
cmpsb
loope
sub
ljmp
scas
fsts
stc
dec
movsl
cltd
pop
jl
dec
push
outsl
or
or
decb
out
jbe
gs
add
fwait
ret
cld
and
fucomp
fistpll
int3
push
sub
scas
addr16
mov
mov
push
cld
mov
orb
sbb
fadd
lock
dec
les
jbe
mov
mov
push
inc
mov
outsl
sub
call
sahf
and
aaa
in
mov
jne
ja
xorb
cld
sbb
idivb
out
sti
dec
lcall
pop
stos
mov
loopne
push
push
push
in
adc
int
sbb
sub
mov
mov
push
jo
adc
mov
std
out
test
in
adc
xchg
mov
insb
sbb
push
leave
lahf
or
or
push
popa
pop
dec
mov
xor
pop
shlb
push
sbb
pop
mov
cmc
inc
orps
add
or
push
push
in
inc
mov
repz
lahf
cmp
adc
pop
outsb
scas
negl
rolb
jecxz
inc
fsubl
adc
clc
nop
out
out
xor
inc
push
or
mov
mov
fisubl
mull
inc
loope
sbb
push
call
outsb
jmp
pushf
dec
add
xor
ret
sub
daa
xchg
lahf
insb
and
sub
clc
insl
push
and
movb
push
mov
fidivs
xchg
jae
push
pop
mov
sti
out
stc
push
sbb
xchg
jbe
jbe
pop
pop
cwtl
or
or
mov
cli
mov
inc
cmp
stc
cli
fs
aad
jo
sub
ja
xchg
sbb
pop
pop
mov
in
call
push
xchg
loop
je
cmp
lock
mov
in
daa
test
lods
mov
cmc
fwait
and
push
sbb
adc
or
dec
nop
mov
test
sti
mov
sub
fiaddl
icebp
shll
in
aaa
push
sub
sbb
fs
ret
repnz
mov
sbb
inc
push
cmp
orl
mov
aaa
addr16
lods
and
jp
add
inc
outsl
adc
out
xor
xchg
lret
mov
and
in
daa
push
out
jae
mov
in
or
add
arpl
inc
test
cmp
jno
out
addr16
and
dec
pop
mov
jp
mov
into
mov
jo
jle
test
bound
loopne
pop
mov
mov
fwait
outsb
push
push
xchg
js
jbe
les
icebp
mov
jae
dec
adc
adc
cmc
pop
outsb
fs
std
jne
loop
shll
pop
fcmovnbe
and
jbe
enter
pushf
or
add
cmp
fdivl
mov
popf
cwtl
cli
sub
ret
mov
mov
dec
dec
test
pushf
int3
lods
addb
shrb
adc
jmp
pop
sub
adc
mov
jl
inc
jmp
xchg
push
sub
inc
daa
xor
pop
aas
stos
loopne
or
ds
jecxz
cmp
mov
dec
popa
test
lea
lods
inc
out
adc
lods
lods
cmp
cmp
dec
push
mov
insl
mov
add
xchg
pop
mov
mov
jecxz
repnz
movsb
outsb
rcrb
pop
xor
in
mov
das
mov
js
dec
inc
iret
cmpsb
jnp
add
test
insl
ljmp
jb
data16
sub
jecxz
cmpsb
clc
cmp
jb
cmpsb
imul
cmp
aas
adc
cmc
sbb
cmp
leave
jge
pop
push
xorb
rclb
fsubp
lret
or
jb
imul
add
shrb
scas
imul
cmp
adc
cmp
jns
cmp
xchg
or
scas
sti
mov
out
inc
sbb
rcl
dec
mov
cmp
movsl
jo
insl
or
in
or
mov
aam
mov
int3
sub
in
fists
dec
stos
pop
push
push
mov
or
cwtl
jbe
xor
aas
into
lods
sbb
ljmp
mov
movsl
add
je
ficomps
pushf
lds
sub
in
pop
sar
leave
lcall
cmp
sbb
inc
mov
inc
hlt
add
jne
xchg
call
dec
mov
fnstenv
ret
insb
mov
xchg
shl
int3
idivb
ljmp
je
jmp
ds
ret
outsb
add
adc
or
ret
inc
adcl
testl
cs
mov
push
out
jge
lock
adc
and
out
outsb
fwait
and
inc
cmp
or
xchg
or
js
sbbb
lods
in
enter
inc
lods
mov
cs
ret
in
sbb
call
mov
inc
inc
cwtl
ds
mull
push
cmp
mul
fiaddl
jae
outsb
xchg
add
dec
pop
scas
pop
ret
mov
xor
xchg
scas
pusha
cld
fs
xor
nop
push
add
mov
mov
fstpt
sti
dec
lea
pop
sbb
adc
xlat
outsl
pop
fisttpl
or
out
pop
aam
ret
sub
push
call
jge
aam
push
sub
mov
repnz
insl
jmp
test
inc
cmpsb
xchg
call
pusha
push
and
xchg
outsb
xchg
add
out
jne
push
cmp
shrb
mov
pop
clc
imul
aam
ficoml
mov
xlat
nop
decb
mov
adc
call
sbb
fwait
xor
and
xor
sub
fildll
xorb
mov
inc
jo
and
scas
add
mov
push
push
into
mov
pop
pusha
outsl
decb
jnp
lods
mov
lea
sbb
stos
jecxz
outsl
xchg
cmp
jns
stos
xor
dec
xchg
dec
mov
dec
sbb
outsb
add
dec
sub
jl
xchg
xchg
daa
push
sbb
fisttpl
insl
xchg
xchg
cmp
and
jae
imul
push
add
fcoml
sub
fwait
mov
and
shll
jmp
xchg
add
std
and
sub
xchg
add
mov
pop
incb
hlt
add
pushf
lahf
out
pop
stc
aad
rcl
lods
cltd
xchg
imul
and
xchg
daa
push
cmp
inc
movsb
sub
jp
push
inc
jnp
or
dec
push
insl
pusha
cmpsb
push
stc
dec
movsl
and
movsb
add
sub
xchg
and
bound
repnz
popf
leave
push
aas
jg
fadd
pop
movsb
cmp
iret
enter
sub
daa
inc
stos
mov
in
insb
inc
xor
push
lods
and
or
xchg
mov
or
cmp
lods
ds
push
testl
fs
mov
sbb
cwtl
mov
mov
test
dec
sbb
push
dec
cmc
jbe
aaa
dec
add
movsb
lahf
jae
dec
mov
jae
mov
cmp
push
fadd
gs
jbe
cmpsb
rcl
loopne
popf
in
pop
cmp
cwtl
ja
loope
mov
ret
jge
add
xchg
lret
pop
cmp
inc
pop
or
push
push
repz
idivb
mov
shll
nop
xchg
or
inc
mov
sbb
les
dec
push
fnstenv
mov
fcomps
pop
jge
and
fs
clc
repz
pop
jle
pusha
cmp
and
data16
adc
xchg
mov
add
outsl
imul
fistl
mov
fcoml
xchg
add
sbb
xchg
push
test
pop
leave
xor
dec
mov
shll
cmc
mov
filds
aas
fidivl
fisubrl
push
jb
fsub
xchg
and
or
adc
iret
sub
xchg
stos
fidivrs
sub
sub
testb
rcrb
mov
push
pop
out
mov
jl
rclb
push
cld
xchg
adc
push
ret
lock
insl
out
mov
jne
rorb
xchg
fwait
stc
add
movsl
pusha
imul
push
push
pop
jb
xor
enter
cmp
stc
sub
sub
call
add
sub
clc
test
clc
data16
mov
xor
in
mov
mov
sub
sub
fcoms
out
pop
inc
inc
je
loop
push
int3
gs
fiaddl
shlb
inc
loopne
mov
or
js
or
mov
sarb
js
mov
ljmp
lahf
inc
out
sub
into
inc
sbb
adc
mov
mov
mov
inc
test
cmpsb
cmpsl
mov
jo
mov
sub
lret
in
sbb
addb
nop
inc
cmp
lcall
or
dec
pop
cmp
fmulp
cli
push
or
cli
ja
dec
pop
roll
or
lods
scas
gs
push
pop
xlat
push
jae
inc
jnp
inc
into
mov
stos
xchg
jne,pt
data16
dec
fnsave
jae
loope
je
out
jns
add
xor
pop
push
mov
imul
aad
popa
push
adc
cmp
insl
adc
loopne
shrl
jno
adc
pop
pop
add
adc
lcall
pop
icebp
sbb
push
adc
mov
rclb
pop
sub
cvttps2pi
stos
repnz
mov
jg
ljmp
push
gs
inc
outsl
js
ja
inc
mov
pop
push
xchg
and
aaa
repz
add
jecxz
imul
testb
pop
or
pop
xchg
call
dec
loopne
or
inc
mov
in
or
cmp
pop
adc
icebp
fsubrl
jnp
stc
les
cmp
xchg
pop
in
jae
inc
push
add
aad
mov
jb
cmpsl
or
sbb
jecxz
psubb
jg
xor
mov
mov
inc
gs
pop
psubusb
mov
and
sbb
or
push
aad
pop
inc
test
leave
shll
mov
mov
dec
push
ret
sbb
mov
and
in
xor
shrb
scas
cmp
sbb
mov
add
repnz
ljmp
nop
hlt
or
or
movsb
fstpl
test
shr
cmpsb
mov
mov
sahf
outsl
mov
xchg
mov
loope
sar
adc
or
cmp
je
jb
mov
stos
and
adc
xor
mov
pop
pop
repz
out
mov
dec
push
ror
int3
mov
js
ss
pushf
cmp
add
imul
push
push
mov
push
push
xchg
loop
rsqrtps
push
inc
inc
xchg
out
iret
pop
or
jp
xchg
push
fbld
rolb
repnz
xor
pop
dec
jne
inc
adc
fisttps
pop
push
out
dec
loop
aas
sbb
jnp
lret
xchg
sub
jp
lret
push
cld
imul
out
fwait
loopne
cmp
jae
sub
ja
jae
dec
and
leave
shlb
sbb
je
out
aam
push
test
xchg
adc
add
decl
pop
push
loope
mov
add
arpl
lods
jbe
ret
clc
test
pop
ja
jae
pop
fsubs
movsl
push
fstpt
arpl
inc
repnz
adc
dec
cltd
in
es
shlb
and
sbb
inc
or
sbb
pop
cmp
sub
out
inc
xchg
jo
xlat
xor
push
test
jnp
xchg
sbb
cwtl
lcall
lds
xchg
lods
in
stos
mov
or
inc
push
jmp
pusha
jg
jno
rol
arpl
inc
mov
inc
pop
lods
pop
ror
seta
sbb
call
mov
fs
xchg
aad
cmpsl
jg
and
mov
jl
dec
test
test
mov
mov
in
clc
cmp
pop
imul
sub
out
ja
daa
out
pushf
mov
aam
outsb
sbb
in
jnp
vandps
cs
push
cmp
gs
sub
mov
cld
test
dec
mov
mov
cli
lcall
sub
in
cmc
push
imul
sub
sbb
shll
rep
jmp
shlb
test
xchg
aam
mov
and
xchg
push
lret
inc
mov
sbb
jae
stos
out
inc
sbb
sbb
mov
scas
jmp
in
push
jg
push
sbb
movsb
sub
jns
mov
mov
inc
cmc
dec
push
jo
jne
jge
mov
fs
mov
jbe
ss
insb
xor
xchg
and
jmp
clc
sub
icebp
dec
inc
sub
push
sahf
push
je
daa
pop
cmp
adc
shlb
dec
scas
jmp
xor
add
int
mov
mov
jnp
mov
mov
int
mov
xor
inc
push
adc
in
dec
cmp
mov
xchg
pop
fidivrs
sbb
sub
out
mov
mov
cmc
cs
jl
fistps
imul
push
cwtl
js
adcb
fildll
ds
cmp
mov
lcall
xchg
mov
mov
add
push
jae
inc
ficoml
push
or
enter
push
hlt
sar
inc
pop
dec
sub
adc
clc
lds
repz
aam
xor
inc
and
stos
pop
mov
jbe
stos
dec
pop
push
clc
push
aas
sbb
xlat
cli
add
inc
inc
loope
push
out
cmpsl
jle
xchg
xchg
cmp
mov
ret
out
sbb
sbb
xlat
sbb
dec
fistps
in
add
mov
add
jge
sub
push
jne
mov
push
ret
imul
sbb
xchg
daa
rorb
push
add
inc
pop
mov
mov
push
pop
or
mov
inc
out
sub
mov
adc
ljmp
cwtd
shlb
xchg
sub
xchg
imul
mov
push
insb
xlat
leave
icebp
bound
lods
into
adc
outsb
das
or
xor
insl
inc
icebp
ds
inc
pop
jge
aas
sbb
scas
add
in
xchg
scas
pop
cmpsl
jnp
pop
xor
stos
dec
dec
imul
mov
push
push
xorl
pop
pop
sub
inc
add
dec
mov
les
aad
lods
and
movsb
mov
add
cmp
inc
jmp
push
insl
hlt
cmpsl
shrb
in
fimull
fwait
mov
xor
xor
push
pop
pop
outsb
jnp
and
adc
cmc
imul
dec
out
mov
push
sarb
push
sti
push
xchg
mov
lahf
mov
cmpsb
cmp
ss
inc
pop
jle
mov
fidivs
insl
pop
mov
test
jae
cmp
cld
or
xor
rcrb
cli
sbb
xchg
es
jo
sbb
fs
scas
xchg
xor
test
adc
inc
jmp
cmp
mov
sub
add
jmp
mov
stc
cltd
mov
add
test
xor
cs
movb
nop
cmp
fidivs
test
inc
pop
ret
and
gs
mov
faddl
sub
adc
or
or
wrmsr
daa
cltd
push
jnp
jae
loop
aaa
jl
ret
push
outsb
repz
divb
insb
xchg
mov
in
pusha
cmpsl
les
lret
movl
xor
adc
test
inc
in
lds
cmp
mov
adc
leave
arpl
inc
jge
cmp
inc
jae
movhps
aas
xchg
mov
mov
adc
mov
neg
xchg
stc
das
incl
push
pop
repnz
pop
or
push
push
xor
inc
movsb
outsb
mov
jecxz
pusha
cltd
lods
aad
fnsave
pop
sbb
push
lret
imul
adcl
push
out
flds
mov
daa
stc
adc
rcr
aad
enter
jg
aas
jmp
popf
mov
mov
adc
fnstenv
ja
sbb
iret
ss
cli
sub
sbb
bound
pusha
leave
cmp
pushf
and
movsb
test
xchg
mov
fs
mov
sbb
mov
lret
push
jns
clc
jo
getsec
push
sub
int3
mov
sbb
lods
jne
push
jmp
lcall
lods
lds
inc
scas
test
icebp
sub
mov
xor
fsub
stos
out
ffree
aad
sub
jb
daa
lods
adc
adc
jne
xor
insl
mov
rorl
sbb
fcomp
inc
leave
sub
xchg
push
push
repnz
bound
ret
clc
test
ljmp
inc
fsubr
gs
and
out
dec
jno
mov
mov
cmp
ffreep
sbb
mov
mov
jg
xchg
arpl
adc
pusha
lret
cmc
pop
in
and
or
mov
imulb
xor
jbe
out
mov
push
mov
enter
xchg
cltd
insl
xchg
mov
inc
lods
lea
or
lds
push
sti
jne
inc
sti
xchg
clc
les
out
mov
xorl
push
js
xor
mov
mov
jns
jbe
outsl
lds
in
loop
sbb
andl
push
bound
inc
es
or
rcrb
mov
in
push
es
xchg
lds
and
add
sub
inc
aad
ds
outsb
sbb
push
test
cmp
and
jno
dec
sahf
sub
mov
xchg
push
cmp
sbb
arpl
cmc
int3
into
xor
push
fldl
push
cmc
dec
scas
inc
stos
jge
aaa
dec
ss
lret
lods
mov
sbb
bound
or
inc
movsb
fwait
adc
xchg
mov
fcoml
cld
adc
sbb
push
pusha
xor
push
cs
cmp
mov
mov
cmc
ret
orb
mov
lret
push
mov
and
movsl
xor
sbbl
nop
sub
pop
stc
icebp
mov
lods
mov
movsb
pop
jge
jp
sti
fwait
xchg
scas
mov
aas
push
mov
lret
xor
mov
pop
push
xchg
add
fildll
jle
or
aad
pop
cwtl
popf
xchg
movsl
aad
call
jmp
cmp
dec
jo
xchg
sbb
jmp
pop
jmp
pop
aam
push
pop
jle
cmp
js
inc
xchg
dec
xor
dec
stos
mov
jecxz
or
or
inc
sbb
ret
ss
push
out
icebp
pop
xchg
xchg
adc
scas
mov
lret
lds
icebp
test
push
jo
or
enter
in
sbb
and
push
jno
sahf
ret
jecxz
xchg
sarl
and
mov
popl
rcrl
jmp
or
out
loop
cmp
inc
mov
cmp
out
leave
adc
loope
or
iret
mov
and
mov
mov
inc
sbb
or
mov
mov
xor
sub
pop
push
jbe
out
mov
sbb
jnp
push
int3
mov
mov
mov
dec
push
cmp
mov
stc
stos
mov
mov
inc
fxch
call
mov
sbb
ds
add
pop
mov
cmpsb
mov
pop
xor
jne
lods
repz
in
cld
scas
imul
mov
sbbl
mov
push
pop
repnz
test
js
dec
in
adc
lods
xor
imul
cmp
and
xor
mov
push
xor
mov
imul
test
xor
jp
pop
leave
pop
fisubs
mov
pop
add
andl
pop
push
test
in
xor
std
mov
mov
mov
pushf
xchg
shr
xchg
inc
mov
mov
cmpsl
loopne
imul
mov
xor
lea
loope
ds
cmpsl
or
pop
dec
div
xchg
xor
pop
xorl
lret
addl
stos
sub
je
jae
xchg
xlat
arpl
addr16
int3
cmp
shr
movsb
xchg
fwait
mov
ja
bound
test
or
xchg
sti
ljmp
icebp
jle
icebp
mov
inc
testl
ja
divl
test
mov
add
mov
push
ljmp
mov
jae
and
mov
pop
lock
xlat
pop
xor
mov
jge
lret
lods
cmpsl
movl
adc
pop
mov
ficompl
pop
fwait
repnz
add
pop
ds
adc
and
negl
in
aad
addr16
aam
and
and
and
mov
test
pop
xchg
loope
pop
mov
int
cli
ja
orl
inc
popf
les
dec
cwtl
or
add
adc
pop
test
xorl
jmp
lret
pop
push
push
inc
lods
test
movsl
jae
push
fs
icebp
mov
fiadds
xor
shlb
add
inc
jmp
mov
xor
insb
push
xlat
push
mov
mov
xchg
push
push
sbb
mov
clc
aas
test
sti
xchg
in
adc
sbb
loop
in
in
sbb
pop
mulb
xchg
lds
in
andb
mov
ss
cltd
bound
nop
inc
add
push
orl
jge
adc
jl
inc
pop
pop
xor
sub
leave
in
jnp
jmp
xchg
lock
lea
mov
jecxz
xchg
insb
aad
xchg
mov
jae
lret
lret
push
fbstp
pop
dec
and
scas
or
push
test
scas
pop
out
popa
mov
insb
mov
inc
fcomps
jae
and
mov
jg
popf
movsb
sbb
shlb
push
sub
jbe
jl
imul
mov
or
xor
popa
das
add
jbe,pt
jmp
add
pop
pop
push
shlb
mov
inc
rcrl
out
or
loopne
sbb
sub
rcrl
xchg
xchg
int3
push
sub
in
cmc
data16
stc
pop
insl
add
cltd
inc
and
dec
in
jne
lret
mov
mov
xchg
xchg
pop
sub
or
iret
outsl
xchg
repnz
enter
mov
hlt
push
decl
and
movsl
push
mov
scas
pop
addb
or
cmp
cmp
inc
aam
or
sarl
outsb
sub
sbb
popf
pop
fidivrs
mov
push
iret
es
shrl
lock
inc
mov
xchg
shlb
add
ljmp
aaa
mov
sub
jbe
xor
cltd
cmpsl
mov
cmc
or
pop
stos
subb
push
aam
test
aam
into
xchg
push
xchg
in
faddl
xor
cmc
shlb
jg
mov
or
jecxz
sbb
ficoms
inc
fxch
repnz
cmp
mov
ds
adc
push
push
xchg
or
ret
jmp
add
in
jmp
insl
dec
dec
xor
or
inc
cmpsb
adc
mov
jns
imul
movsb
jge
cmp
scas
rcl
testb
cmpsb
stc
aad
lea
addr16
sti
fwait
pop
pop
fisubrl
cwtl
xchg
adc
enter
movsl
and
cmp
jbe
shl
xchg
jecxz
dec
in
test
cmc
add
push
jns
cltd
scas
pop
lods
negb
les
jl
cltd
jbe
daa
cmp
xor
int3
rorl
cmpsb
jmp
movsl
lret
xchg
mov
nop
insl
leave
testl
jb
mov
pop
stc
push
pop
mov
inc
mov
pop
push
pop
cld
mov
push
int
arpl
jns
jmp
ret
jle
push
inc
aad
mov
sub
ja
xchg
gs
and
out
frstor
xchg
jge
cmpsb
hlt
sbb
dec
cmp
jle
subb
xlat
and
cmp
in
insl
je
addb
mov
repnz
inc
xchg
cmp
or
gs
xchg
out
jle
adc
sbb
adc
cmc
pop
ret
cmp
mov
mov
cli
in
fisubs
xor
add
jbe
fwait
idivl
mov
pop
cmpsl
mov
scas
mov
enter
and
adc
dec
pop
or
icebp
mov
movsl
xor
incb
fxtract
push
out
int
sub
mov
lahf
add
cwtl
jns
popf
jle
jp
pop
xor
daa
in
and
pop
aas
or
lods
repz
in
cmp
sub
xor
mov
rclb
lcall
out
ss
inc
inc
lcall
dec
push
pop
lahf
bound
jne
cmp
test
inc
addr16
int3
dec
fisubrl
stos
out
ret
jmp
pusha
push
add
adc
jnp
aaa
or
icebp
lods
mov
and
jg
ds
repz
outsl
mov
adc
mov
shrb
mov
or
push
pop
mov
xchg
test
fildll
mov
sbb
mov
jecxz,pt
stos
mov
repnz
mov
out
stos
popa
pop
jne
mov
or
outsb
cmp
jbe
nop
arpl
lea
pop
nop
je
add
into
testb
adc
mov
mov
sbb
jle
add
and
cs
adc
movsb
rolb
inc
fisubrs
pushf
push
addr16
and
lods
pop
rol
xchg
stc
stos
mov
or
jae,pt
xchg
loopne
jge
dec
push
pushf
xor
jns
cmp
rclb
and
or
xchg
ss
push
ljmp
mov
daa
xchg
nop
push
fisttps
loop
sbb
fwait
call
in
popf
pop
xchg
insb
mov
mov
push
mov
sub
pop
or
fcoml
pop
lahf
or
add
testl
jns
adc
stos
rcll
push
aas
testb
daa
jg
xchg
jmp
es
loopne
stos
inc
arpl
test
rcrl
sub
cli
mov
inc
inc
loopne
xchg
rolb
stos
ljmp
mov
int3
jae
shrl
cmp
je
mov
pop
sub
xchg
ret
mulb
push
negl
movsl
mov
stc
sbb
dec
fdivl
and
mov
flds
insl
andl
mov
bound
lods
subl
stos
xor
insb
xor
sbb
xchg
ret
push
hlt
jmp
in
jbe
jecxz
test
ret
sub
mov
push
fs
subb
xor
inc
in
add
inc
lret
push
cmp
out
xor
adc
cwtl
xor
jae
in
add
pop
fsubrl
dec
test
dec
outsb
sub
or
mov
ret
or
repnz
pop
adc
xchg
sbb
movsl
sub
push
or
repnz
cld
lret
jne
mov
frstor
mov
ficoms
pop
jp
sti
inc
lds
in
cli
negb
sbb
popf
and
scas
push
sub
mov
shlb
or
pop
xor
fsin
push
jbe
out
jg
sub
mov
jne
cmp
into
fwait
or
push
jp
pop
push
inc
fisttpl
mov
negl
pop
fldt
data16
sub
push
or
and
sbb
aaa
jmp
sahf
cmp
mov
xlat
and
pop
jl
or
sbb
movsb
add
mov
mov
push
adc
mov
pop
notl
jbe
test
adcl
push
pop
out
fdivrl
adc
xchg
pop
xor
cwtl
adc
ret
xchg
aas
fistpll
push
jmp
add
icebp
sub
xchg
mov
jbe
scas
testl
cltd
jg
dec
insb
popa
enter
push
dec
cltd
ja
mov
and
test
lods
aam
mov
aam
stc
enter
cmp
lret
arpl
xor
hlt
in
inc
lock
mov
or
cli
cltd
cmpsb
jmp
xchg
cmp
das
jge
push
ss
or
or
ss
lret
mov
xchg
outsl
add
addb
inc
aas
mov
loopne
out
push
pop
mov
xchg
call
sub
es
jno
sbb
cmpsb
int3
loope
js
or
pop
popf
aad
sbb
xor
sbb
mov
fs
add
call
sbb
daa
mov
icebp
shll
add
sahf
pop
mov
in
test
loop
mov
add
imul
inc
nop
out
xlat
xchg
popf
repz
add
addl
sub
jg
je
mov
lret
fcmove
aam
jns
xor
push
cmp
push
xchg
or
inc
xor
ffreep
xor
push
pop
movsb
mov
sub
and
mov
jnp
hlt
mov
scas
arpl
loopne
std
outsb
rorb
xor
pop
add
add
fstl
pushf
jnp
imul
mov
add
cmp
push
pop
aaa
sub
pop
lahf
hlt
scas
shlb
ret
int3
iret
lret
push
or
adc
xor
dec
aaa
xor
shl
sti
mov
jp
mov
adc
mov
and
sub
les
icebp
dec
and
dec
jbe
push
dec
mov
pushf
and
xor
sub
sbb
mov
cmp
and
mov
push
adc
hlt
inc
push
or
imul
mov
cmp
inc
movb
lahf
push
insb
nop
xlat
lds
call
sbbl
xchg
or
pop
fucomip
push
sub
mov
roll
ficoms
jg
pop
mov
inc
jecxz
jmp
cld
sbb
or
and
cmp
xchg
bound
push
pop
and
xor
lods
lock
cmpsb
push
dec
lahf
inc
es
add
add
hlt
inc
sti
inc
sbb
shll
and
inc
cmpsb
or
mov
call
rcl
jns
pusha
lea
pop
sahf
lods
adcb
xchg
in
sub
mov
pop
sub
dec
call
cmp
inc
adc
and
nop
xchg
notl
cmp
add
shll
enter
or
inc
xor
leave
mov
mov
stos
push
sarl
pop
ds
mov
dec
lock
push
push
mov
loopne
fst
dec
outsl
outsb
push
xorb
jnp
repnz
xchg
rorl
loopne
mov
loope
nop
mov
inc
leave
shlb
out
or
fwait
xchg
mov
xchg
add
mov
clc
std
rep
sub
mov
adc
icebp
sti
loopne
icebp
cmp
in
iret
xchg
mov
or
mov
enter
aaa
data16
mov
jno
jge
frstor
cmc
xor
add
imul
mov
inc
arpl
jp
mov
xchg
mov
push
addr16
lcall
dec
jnp
jno
or
sub
adc
xor
pop
sbb
fwait
pop
gs
testl
push
cld
xchg
mov
fsubr
fcoml
add
adc
and
lcall
loop
ret
lret
fisubrl
and
jg
jnp
mov
fistpl
daa
repnz
and
repnz
fdivrl
or
in
pushf
out
fidivrs
push
mov
xlat
pop
and
call
or
cmp
sbb
or
push
aam
loope
test
sbb
xlat
mov
sub
lea
cltd
pop
ss
andb
adc
mov
ljmp
inc
xchg
daa
pusha
mov
pushf
fsubrs
mov
mov
mov
sub
sbb
das
mov
vpand
cmc
cmp
cs
xchg
popf
pop
outsl
dec
pop
shl
in
jle
loop
into
popa
jmp
std
push
or
enter
jecxz
imull
fs
add
aaa
jmp
jno
cmpsl
lret
xchg
std
subl
inc
shll
js
jns
enter
rorl
test
and
jns
stos
cmp
push
repz
push
int3
pop
adc
xchg
rcrb
push
popf
mov
push
and
aas
mov
outsb
scas
repnz
sbb
pop
adc
repnz
out
call
push
and
dec
ljmp
jl
popa
dec
jnp
rclb
cmp
rcrl
mov
add
scas
hlt
push
dec
test
repz
sub
stos
sbb
cmc
xchg
mov
out
cmp
cld
sub
sub
sub
jo
xor
cmp
add
int3
es
push
les
xchg
jle
aaa
push
in
add
test
dec
gs
scas
xchg
les
mov
hlt
lret
clc
pop
cmp
imul
xor
mov
xchg
or
inc
or
jg
dec
gs
das
stos
ret
roll
push
scas
and
into
push
ret
je
sub
call
jecxz
push
sbbb
mov
psubsb
cs
shl
cwtl
push
adc
dec
cld
xchg
xchg
sub
xchg
in
popa
call
push
xor
dec
mov
or
nop
les
mov
je
xor
xor
outsl
add
dec
sti
cmp
sbb
mov
and
loopne
vcvtsd2si
aad
sub
mov
jge
cwtl
test
xchg
icebp
sub
stc
shl
jecxz
dec
aas
xor
dec
aad
push
repnz
fadds
xchg
lcall
jb
rorb
clc
ljmp
das
lods
out
dec
jae
dec
cmp
adc
mov
test
fcmovnbe
cmc
mov
sub
xorl
xchg
xor
adc
xchg
clc
cmp
xchg
test
push
fstpl
mov
sub
sbb
jne
stos
mov
int
pop
mov
and
pusha
popf
fisubrs
roll
mov
mov
pop
or
adcl
mov
sub
push
in
inc
push
push
roll
cwtl
jl
xchg
es
shld
xchg
xchg
mov
daa
jge
clc
push
pop
adc
imul
push
cmp
sub
jecxz
out
sbb
test
dec
movsl
fcmovnu
adc
inc
aas
rcrb
adc
iret
sub
dec
mov
xchg
pop
insl
pop
push
pushf
or
in
mov
adc
sub
mov
aas
scas
mov
loope
xchg
outsl
push
rcll
ret
mov
mov
jmp
dec
test
stos
rcr
jge
in
movsl
leave
jo
mov
and
inc
jno
push
cwtl
push
or
jp
rol
and
dec
cmpsb
test
cmc
sub
bound
ret
sub
into
js
sbb
sbb
out
or
lea
lock
push
cli
xchg
clc
pop
ds
jns
lock
sub
cltd
xchg
adc
sub
pop
pushf
repnz
mov
arpl
mov
mov
pop
xchg
push
pop
cltd
pop
lret
push
xor
mov
test
push
mov
and
xchg
shr
pusha
xchg
sub
lds
jae
sub
sahf
out
mov
imul
mov
push
aaa
adc
inc
cs
pop
cmp
inc
or
mov
es
lahf
mov
notb
mov
or
cmpsl
popa
imull
es
ret
cmp
dec
ja
shr
outsl
pop
shl
imull
dec
ror
sahf
add
xor
sbb
push
fidivrs
mov
repz
cmp
in
cwtl
push
cmp
in
mov
dec
aaa
push
and
push
out
jge
and
bound
adc
in
push
mov
insb
fcoms
pop
xor
mov
mov
dec
inc
inc
or
xchg
in
lret
mov
cs
stos
andl
movsb
dec
and
addb
or
out
sbb
jecxz
adc
mov
adc
cwtl
fwait
inc
cli
jecxz
jns
lahf
insb
add
mov
popf
out
mov
or
insb
flds
ljmp
add
inc
cmpsl
xor
xchg
or
xor
push
inc
out
adc
data16
mov
ror
loop
dec
mov
jae
call
fadds
test
xchg
js
jne
jb
gs
aam
adc
pop
sbb
or
add
mov
lahf
call
lcall
add
pop
push
or
add
fsubl
cld
and
stos
fildl
mov
adc
mov
and
push
sbb
add
adc
jbe
jnp
adc
mov
push
test
sub
xor
xor
ret
xor
jg
lods
testb
dec
cmp
clc
lods
test
stos
pop
pop
adc
sbb
ret
or
fldt
push
rorl
stc
stos
and
inc
mov
insl
rcr
loope
pushf
out
scas
pop
js
mov
pop
mov
cmpsb
sub
sub
ljmp
lods
out
mov
push
bound
dec
jne
orb
and
adc
pop
aaa
jg
lret
mov
daa
ljmp
jb
inc
jnp
enter
mov
push
mov
jl
scas
mov
outsl
add
stos
xor
inc
dec
add
xor
out
test
js
push
gs
adc
test
int
and
pusha
das
xchg
ret
rol
fs
outsb
sbb
add
cmpl
sub
cli
lahf
ficomps
lods
jbe
lea
iret
or
mov
inc
inc
lcall
sub
and
pop
into
or
cmp
dec
jnp
jmp
add
mov
jmp
xchg
inc
or
test
or
push
loopne
pop
dec
enter
jne
adc
push
xchg
pop
sub
vunpcklps
lds
adc
es
daa
and
mov
orl
mov
inc
repnz
cld
ja
test
in
cmpsb
in
xchg
mov
imul
pop
leave
add
sbb
stc
sbb
and
push
test
lahf
arpl
pop
cmpsl
test
dec
pushf
or
shl
xchg
mov
std
mov
aad
pop
std
and
iret
pop
mov
xor
daa
enter
cwtl
divb
add
jp
lahf
push
repz
mov
sbb
cmpsb
cmp
in
mov
cmc
pop
je
push
mul
add
popa
jbe
fnstenv
lret
jo
in
cmp
pop
les
and
aas
xor
data16
sbb
stc
repnz
or
ja
push
out
lods
xchg
or
dec
mull
ljmp
stc
and
xchg
ret
movb
jg,pn
jns
and
mov
fildll
inc
mov
cmpl
sahf
fstl
cmpsb
xchg
and
adc
push
sub
sahf
stc
fwait
cmpsl
dec
enter
insl
fcomps
fsubrs
jl
addb
int
adc
add
mov
iret
sbbl
jo
std
into
mov
js
out
leave
call
imul
arpl
xor
or
jns
stc
aad
inc
xchg
mov
xor
cmpb
dec
lods
outsl
add
mov
cs
mov
xchg
mov
lret
out
test
jp
and
js
shr
jnp
cmpsb
clc
sbb
mov
test
iret
in
mov
mov
sti
outsl
dec
or
adc
and
and
or
cmp
xor
pop
inc
cltd
mov
or
fiaddl
push
imul
pop
mov
push
xchg
pop
popa
loopne
sbb
adc
pop
add
xchg
sbb
adc
sbb
dec
and
ficompl
or
mov
mov
stc
iret
mov
movsl
xor
sti
test
pop
pop
sub
fcomi
sub
mov
push
mov
mov
andb
clc
push
testb
cmpsl
add
and
stos
test
jbe
add
lea
push
mov
push
lods
inc
sti
and
mov
shrl
pushf
mov
and
popf
les
scas
test
pop
sarb
dec
sub
sub
insb
ds
xor
xor
dec
insl
cmp
jae
lods
xor
jbe
push
ds
xchg
or
jbe
add
jp
int3
mov
test
es
sub
addb
test
sub
loopne
pusha
repnz
ljmp
adc
sbb
jne
add
cmpsl
sahf
pusha
or
mov
inc
or
ljmp
das
std
outsb
ror
gs
sbb
fadds
sbb
das
aaa
sahf
scas
lods
pushf
fwait
lock
fxch
jbe
ficomps
dec
mov
mov
push
repz
popf
add
pop
jnp
icebp
mov
repz
sti
cmp
mov
ljmp
push
frstor
jg
xlat
shrb
leave
push
or
mov
jnp
insl
inc
xchg
pop
sbb
pop
loope
cmpl
inc
pop
sub
sub
int
mov
cmp
mov
movsl
out
mov
mov
cmp
sahf
rcll
addr16
mov
xor
enter
scas
pop
in
mov
sub
pop
adc
dec
mov
sbbb
stc
loopne
les
fldcw
inc
xchg
inc
repnz
pop
test
mov
push
je
jo
dec
test
jp
stc
xor
shrb
std
pushf
dec
insb
xchg
mov
popa
cmp
xchg
xor
cmpsb
outsl
repnz
out
pop
fadds
xchg
das
and
adc
scas
aaa
xchg
inc
scas
cld
movsl
aad
loop
jle
pop
mov
std
pop
mov
cmp
adc
mov
into
cmp
mov
nop
popa
or
out
ds
cmp
mov
out
xlat
cmp
mov
or
pop
lock
mov
lds
mov
into
icebp
in
lds
mov
mov
fldenv
sti
ss
sub
jns
sub
push
sbb
xlat
mov
fisubrs
cwtl
cmp
gs
loope
jo
in
cmp
mov
or
push
iret
sbb
adc
sub
imul
adc
inc
pop
jb
std
mov
enter
popa
in
into
push
jmp
popf
mov
mov
sbb
aam
repnz
and
mov
push
mov
loopne
mov
sub
adc
movsl
addr16
push
sbb
mov
inc
and
and
daa
cld
jnp
jle
pop
in
adc
int
xchg
mov
jns
dec
add
sbb
cmpsl
rorb
movsl
cmc
das
movsb
pop
xchg
dec
and
inc
inc
insb
xchg
inc
add
mov
jge
pop
pop
pop
fs
dec
push
push
jmp
mov
jnp
jp
lret
jg
pushf
push
fwait
inc
sbb
arpl
fistps
inc
xchg
inc
call
fstpl
dec
jge
loopne
add
dec
out
gs
jge
mov
rep
data16
pop
repz
pusha
aad
jle
mov
xor
mov
ss
cmpb
inc
ret
push
pop
xor
adc
mov
sbb
mov
test
mov
sub
repz
orl
mov
lock
ja
jg
in
into
jns
loopne
cs
dec
leave
enter
jo
call
lret
cltd
mov
sbb
sbbl
jmp
pop
inc
dec
btsl
jge
xor
rcl
xor
inc
data16
inc
loop
adc
loopne
std
pop
std
and
popa
popf
cmp
mov
arpl
int3
jecxz
leave
or
ja
lods
push
mov
pop
clc
push
cltd
in
xor
mov
test
enter
or
lret
xchg
and
aam
enter
inc
add
or
inc
and
lds
aaa
jb
or
ds
xlat
subl
jno
loope
pop
test
imulb
sub
clc
mov
and
adc
test
call
rorb
dec
iret
or
sysret
mov
std
inc
mov
add
daa
add
mov
orl
mov
rcrl
dec
sub
fisttps
xchg
sub
icebp
cmc
xchg
testb
imul
jle
push
xor
insb
shll
arpl
pushf
mov
lods
test
out
jle
cmp
jl
aad
mov
loope
xchg
aaa
sbb
inc
aad
adc
call
mov
in
std
xchg
cli
pop
sub
inc
adcb
fisubs
xchg
test
rclb
add
mov
fsubrl
subl
push
push
or
clc
mov
cmp
mov
scas
dec
pusha
int3
push
jmp
dec
test
push
and
imul
ss
loopne
xor
in
out
out
sub
rclb
cmp
movsl
xchg
clc
add
lahf
cmp
push
mov
ds
lret
addr16
sbb
sarb
cmpb
xor
leave
add
fucom
enter
xchg
notb
mov
dec
test
int
fdivrl
adc
or
jo
adc
push
aad
jbe
cmpsl
cmp
lcall
jge
or
mov
add
in
arpl
pop
imul
jl
jae
jp
inc
jno
xor
jl
fwait
mov
hlt
dec
addr16
mov
xor
scas
fwait
push
add
insb
fstpl
idiv
in
loopne
test
mov
dec
jae
xor
nop
cwtl
dec
mov
mov
jae
push
pop
mov
pushf
mov
jns
push
xor
scas
test
cltd
xchg
or
mov
test
mov
jae
sub
stc
mov
sbb
dec
rcll
stos
add
decb
mov
sub
enter
fsubs
imul
cltd
arpl
insl
xor
sbb
mov
mov
add
inc
ja
add
jns
add
fcomps
insl
int3
shrb
xchg
fnstsw
shll
popf
inc
and
adc
cmp
xchg
jb
mov
incb
dec
and
dec
sub
pop
and
mov
inc
push
jle
inc
xchg
xchg
xchg
sbb
fisubrl
dec
out
mov
in
out
mov
fcomps
dec
sbb
dec
jno
adc
notb
cmp
out
dec
push
imul
ljmp
sbb
inc
cmp
cltd
sarb
sub
mov
enter
popf
loop
xchg
lahf
loopne
std
cld
sub
nop
movsb
and
repz
inc
add
dec
sub
jecxz
jmp
insl
repnz
push
cmp
jns
inc
sbb
pop
cmpsl
testl
sar
or
add
adc
and
fisttpl
mov
push
inc
mov
shrl
leave
rcrb
ss
xchg
or
xchg
dec
xor
enter
aad
ja
hlt
icebp
jl
cmp
jge
cmp
pop
mov
fiadds
mov
jge
or
fistpl
leave
cli
jo
and
xchg
inc
pop
call
inc
cltd
or
cwtl
mov
pushf
scas
xchg
add
mov
inc
enter
add
test
shr
or
fdivs
rcl
ret
xchg
arpl
mov
pop
push
je
push
dec
scas
xor
call
inc
jg
or
push
lods
sub
cwtl
repz
sbb
mov
jno
jnp
adc
dec
out
xchg
outsb
jne
adc
outsl
sbb
push
xchg
into
scas
jae
adc
mov
mov
mov
mov
and
pop
push
lahf
dec
ljmp
xor
xor
stos
dec
add
fwait
lahf
jl
jb
data16
nop
adc
and
mov
inc
lea
cmp
jl
sarb
out
mov
mov
nop
lahf
paddb
shrl
pop
int
rcll
jmp
out
insb
cmc
push
sub
fildll
lea
jae
insl
dec
ja
dec
add
cwtl
and
les
scas
bound
pop
add
xchg
in
adc
fcmovne
dec
mov
mov
jo
rorl
lods
outsb
daa
pop
out
mov
push
xchg
imul
push
sub
fisttps
lds
adc
fsubrs
lret
mov
mov
aas
jo
pop
test
ficoms
cmp
lea
cmpsb
sub
cmpsl
bound
lea
cmc
popa
ret
fisttpl
aaa
outsb
mov
int3
lods
jb
push
pop
outsb
lods
cmpsl
jbe
jmp
out
hlt
sbb
push
xchg
je
push
fucomi
arpl
lcall
cmp
nop
add
adcl
mov
outsb
xor
cltd
push
orl
cmp
xchg
mov
jne
and
mov
fwait
outsb
mov
or
loop
popa
gs
mov
inc
clc
lret
sub
adc
loop
scas
pop
push
push
inc
scas
or
sti
aad
dec
stos
add
popa
lret
jle
adc
add
ffree
push
and
xor
adc
or
mov
sti
test
pop
push
mov
dec
jecxz
pop
sar
push
nop
mov
xchg
push
sarl
shr
loopne
movsb
jnp
call
sbb
cmc
or
in
ret
insb
je
push
icebp
ficoml
cltd
xor
mov
push
insb
jge,pn
mov
stos
cmp
push
enter
js
subb
shlb
mov
xchg
mov
jle
lret
or
out
push
inc
jo
mov
jge
dec
pop
loop
cmp
icebp
data16
call
and
cwtl
sbb
cmp
icebp
mov
sub
add
out
aam
cltd
subb
xchg
out
dec
sbb
scas
leave
mov
pop
int3
xor
arpl
ret
sbb
fs
jnp
jae
dec
add
test
push
inc
or
test
adc
adc
dec
int3
dec
cmp
mov
test
imul
jno
mov
clc
aas
push
lret
mov
adcb
mov
stos
mov
iret
sub
mov
jbe
cmp
jmp
stos
les
repz
jne
xor
lret
fmulp
sahf
aaa
mov
jbe
mov
mov
in
push
ja
iret
enter
ss
stos
pushf
nop
mov
pop
cmpsb
mov
inc
or
or
xor
clc
cltd
cmpsl
jl
jp
arpl
pop
in
dec
lods
mov
push
push
mov
aaa
xchg
mov
or
dec
jae
sub
pusha
jbe
aaa
int3
leave
mov
lea
out
ret
pop
or
aas
enter
js
push
jp
lcall
mov
mov
push
jecxz
std
lods
inc
ror
adc
int3
lcall
mov
push
push
push
fwait
sub
fs
addr16
scas
push
mov
fistpll
mov
pop
sarb
pusha
hlt
sahf
rcrb
jmp
xor
pop
daa
pop
and
add
pop
cld
scas
test
xchg
cmp
jns
shr
outsb
xor
mov
lds
jle
or
inc
jmp
lret
popf
sub
add
pop
mul
push
movsb
sbb
mov
xchg
data16
mov
inc
out
scas
into
jae
aad
and
inc
fs
outsl
popf
jecxz
leave
rorb
imul
enter
push
aam
mov
dec
pop
out
sbb
imul
pop
cmp
push
clc
cmc
cs
ret
adc
mov
mov
jl
push
out
xor
into
push
loope
mov
push
xor
xchg
repz
cmp
inc
sbb
jo
lods
push
dec
int3
pushf
adc
enter
mov
jle
mov
add
cmp
mov
add
testl
sub
rclb
push
repnz
ret
popf
adc
or
cmpsb
test
inc
push
sbb
mov
dec
mov
into
inc
jg
pop
adc
loope
and
stc
jae
andb
xlat
adc
sti
add
and
push
and
jecxz
cmp
rcrb
or
pop
add
sub
mov
les
cltd
call
jne
sbb
outsl
add
mov
inc
out
popf
mov
or
mov
in
cmp
and
xchg
fimull
repz
repz
stos
negb
or
test
push
ret
pop
lock
jl
arpl
mov
nop
and
mov
mov
add
enter
pop
pop
sub
stos
sbb
aas
inc
push
popf
les
ret
mov
rcl
push
cld
jmp
sbb
xchg
sti
stc
sahf
arpl
js
xchg
int
aaa
jle
mov
mov
fnstsw
add
fs
push
xor
int3
mov
fnsave
pop
bound
xor
scas
xchg
scas
inc
rcrb
sahf
loope
push
pminsw
cmc
jne
adcl
xchg
mov
mov
pop
xchg
jns
rcr
daa
int
sbb
insb
jl
dec
inc
xchg
cmp
pop
rcll
dec
ja
ja
jp
sbb
loope
mov
popf
sbb
dec
call
push
leave
mov
mov
mov
pop
sarb
pusha
stc
stc
or
ds
pop
xchg
imul
repz
push
push
sub
sub
mov
int3
mov
out
stos
sahf
adc
jb
sbb
jl
test
in
dec
mov
add
sub
add
sub
mov
repnz
jbe
push
stos
test
mov
dec
inc
cmp
movsl
int3
outsb
nop
add
push
xchg
adc
call
push
jo
sahf
insb
adc
xchg
xor
adc
fiadds
mov
out
scas
mov
outsl
div
lahf
sbb
sti
pop
neg
jmp
cmp
push
mov
pop
jo
xchg
adc
dec
pop
jle
ljmp
jge
push
cld
add
adc
mov
inc
push
adc
cmp
mov
inc
push
test
and
pusha
sbb
mull
out
sti
in
push
repz
mov
and
in
adc
jb
xchg
not
out
jle
clc
push
sbb
push
fbstp
shll
and
push
adc
pop
jae
and
xor
out
lcall
xchg
mov
ret
jp
fwait
aaa
psrad
aad
and
or
add
dec
adc
dec
jo
lcall
pop
sbb
sub
xlat
inc
mov
fldt
test
xchg
xchg
push
xor
xchg
mov
mov
cmp
mov
sub
or
xchg
js
mov
movsl
test
adc
push
xchg
jmp
xchg
adc
or
in
cmpsb
pop
lods
mov
xchg
lcall
mov
mov
popf
dec
sbb
jle
and
and
arpl
cld
sbb
rcll
jecxz
mov
push
das
mov
bts
sub
cmpsb
stc
int3
cltd
insl
stc
fs
xchg
out
test
mov
pop
rclb
int3
test
jmp
stos
jecxz
in
or
cmp
pop
xchg
xchg
push
or
inc
fcom
cmp
inc
mov
xor
xchg
aam
mov
push
fwait
aaa
push
pop
incb
cmpsl
ja
jmp
daa
mov
add
lahf
pusha
aaa
or
je
mov
out
insl
adc
push
or
in
jae
add
mov
push
adc
movsl
mov
sbb
movsb
mov
pop
push
adc
les
lods
movb
mov
ds
xor
or
ljmp
mov
jb
sub
xlat
loope
lea
mov
scas
imul
addl
rcll
mov
outsl
repz
xchg
sbb
mov
lret
inc
testl
sbb
cmpsl
imul
sub
scas
inc
pop
or
or
pop
add
stos
sub
ds
ljmp
push
cltd
ret
cmpsb
pop
adc
sub
pop
add
add
ds
lods
sub
xchg
mov
cmp
adc
mov
xchg
rorb
sbb
stos
mov
add
popa
hlt
ret
scas
out
lds
and
mov
or
mov
aas
cmp
sub
push
xchg
mov
xor
fistl
mov
lahf
cmp
out
ljmp
loop
clc
mov
cs
imul
fcmovnu
sbb
pop
test
xor
test
mov
sbb
mov
stos
scas
adc
pushf
loop
pop
mov
cmpsb
jmp
add
jmp
icebp
mov
jge
push
pop
out
adc
iret
cmp
xor
out
mov
mov
xchg
jmp
movsl
mov
mov
fisubs
shlb
push
mov
cltd
int3
dec
out
xlat
loopne
std
mov
idivb
sub
out
lods
stc
lret
push
movsb
xor
ret
and
out
in
and
jp
mov
or
stc
push
loope
dec
lock
mov
mov
add
mov
add
in
xchg
ja
inc
mov
xchg
push
mov
cmp
dec
mov
testb
es
icebp
mov
sbb
xchg
out
xchg
dec
jmp
push
imul
or
sub
jle
stc
cvttps2pi
xor
and
push
mov
sub
mov
ret
outsl
and
sbb
loope
out
or
imul
fsubs
aaa
fisubrl
dec
jae
inc
iret
push
stos
js
sbb
mov
ss
cmp
test
fisubrl
adc
mov
rcll
imul
lcall
pop
inc
aam
or
cwtl
in
xchg
fwait
xor
mov
test
jmp
inc
nop
sarl
mov
sahf
jg
push
jo
es
sbb
inc
dec
jmp
cmp
xchg
jecxz
addr16
mov
jecxz
mov
sub
push
aad
int
popa
mov
popf
dec
popf
int3
lea
xlat
test
mov
das
mov
stos
fildl
adc
mov
ret
or
or
test
cwtl
dec
xchg
jbe
lock
mov
addr16
mov
sub
pop
ds
mov
xchg
xchg
cmp
int
ja
add
jae
mov
mov
aaa
rcll
inc
inc
mov
xchg
ljmpw
mov
sbb
ja
je
or
jl
je
add
lcall
cmp
mov
sub
pop
and
dec
sub
cmp
sahf
bound
fprem1
cmpsb
test
sub
insb
sub
scas
xchg
sub
fcos
idivl
fistpll
lods
jns,pn
iret
fwait
stos
lods
aaa
mov
pop
or
add
out
jp
mov
pop
mov
mov
andb
adc
ljmp
cmpsb
insb
repnz
xor
xchg
push
pop
repz
pushf
fiaddl
repnz
clc
enter
sbb
hlt
xchg
cmp
outsb
test
leave
inc
loop
out
iret
fnstsw
cmp
push
add
mov
dec
push
cmp
add
xchg
icebp
lods
sbb
imul
cmp
fnstcw
mov
lcall
jb
addr16
out
lods
jbe
mov
bound
jp
fisubs
or
mov
rcrb
xor
inc
lods
dec
push
pop
dec
loope
mov
ljmp
in
ljmp
lods
adc
lret
jecxz
cmp
mov
cmpb
sub
pop
xor
andl
test
xchg
aad
or
xchg
push
xchg
and
and
mov
fsubl
int3
dec
out
outsb
in
std
sti
aam
ds
inc
jmp
movsb
dec
xor
adc
mov
ret
fwait
mov
xor
ja
mov
sbb
and
ss
int3
repz
and
loopne
lret
sbbb
inc
pop
out
lret
xor
inc
or
std
pop
and
bswap
dec
pusha
dec
sti
or
jns
ljmp
jecxz
jecxz
imul
inc
push
dec
nop
push
sub
push
subb
mov
xor
cmp
or
pusha
mov
add
dec
arpl
xor
pusha
out
fs
mov
popf
popf
popf
andl
bound
mov
sti
cmpsl
repnz
movsb
cmp
sti
cmp
cmp
dec
call
xor
dec
pop
cmp
pop
cmp
cmp
inc
fsubr
dec
fildl
adc
out
ret
cmp
ja
in
test
lret
leave
imul
adc
push
cmc
push
pushf
lret
push
lea
sub
outsb
std
dec
adc
xchg
out
adc
or
loopne
sub
daa
xor
cmc
mov
and
xchg
pop
dec
cltd
in
mov
sub
sub
jb
gs
xchg
into
push
push
andb
pop
push
test
pop
inc
add
mov
aaa
sub
pop
push
out
push
xor
cmpsl
adc
and
leave
adc
pop
mov
xor
les
pop
cmp
sbb
push
es
jb
cmp
cmp
stos
sub
ficompl
outsb
pop
cltd
cmp
pop
push
dec
add
jp
or
gs
ljmp
and
stc
adc
push
push
cmc
or
xor
sub
stos
outsb
dec
or
push
jbe
imul
sbb
js
ds
shl
fs
bound
std
js
mov
fwait
movsl
dec
inc
stc
pop
lret
movsl
jecxz
sub
or
sbb
pop
aam
jmp
lahf
jae
dec
pop
pop
sub
or
xchg
lock
subl
jp
in
or
push
cmpsb
pushl
loop
and
aam
shlb
jne
xor
push
and
jnp
sub
xchg
pshufw
daa
adc
push
adc
notl
fwait
fwait
dec
loop
lods
xchg
outsl
sbb
sub
out
dec
inc
dec
and
scas
xchg
sbb
into
shll
pusha
out
mul
std
enter
pop
rcll
add
rorl
dec
scas
sahf
mov
cwtl
shl
popf
xchg
dec
out
push
fists
cmpsl
xor
inc
sbb
addr16
sbb
or
popa
cmc
inc
into
lret
loopne
push
mov
jns
xlat
adc
mov
stc
mov
and
lea
push
or
mov
cmpsb
cmp
adc
or
and
in
lahf
add
jle
std
out
ds
adc
fsubrp
sub
sub
out
enter
sub
pop
in
xor
out
pop
mov
test
push
outsl
subb
popa
cmp
sub
xchg
call
pop
fmuls
pusha
scas
add
xor
idivb
aaa
cmpsb
mov
arpl
sub
adc
or
lahf
test
mov
inc
fstl
sbb
xlat
xchg
pop
lahf
mov
xchg
hlt
lock
xchg
rclb
enter
imul
or
scas
mov
daa
scas
dec
aaa
std
cs
cmc
xor
outsl
fcompl
clc
sbb
stos
int3
cld
mov
cmp
in
dec
movsl
fdivrs
push
inc
xor
daa
lahf
loopne
testl
out
fildll
clc
add
adc
fs
inc
sub
and
jbe
call
loop
xchg
je
lret
fstl
lods
lea
daa
jmp
xchg
jno
repz
xchg
getsec
mov
and
lret
adc
lock
test
psubq
arpl
xlat
cmp
mulb
mov
pop
pop
jle
es
jecxz
mov
mov
mov
cwtl
sbb
add
xor
out
inc
daa
mov
roll
divb
js
movsb
shlb
aam
icebp
subb
xlat
iret
mov
sahf
call
fdivr
clc
jo
inc
ds
movsb
mov
cmp
addr16
inc
push
incb
subw
les
loop
mov
xchg
push
bound
sti
cmp
lock
rorb
pop
push
cmp
out
repz
sbb
aaa
adc
data16
ret
mov
or
or
push
adc
stos
nop
adc
fldt
sti
inc
idivb
mov
xchg
stc
cld
pop
mov
sub
stc
sub
out
cmp
pop
fs
rcll
repnz
mov
xor
jmp
pop
cwtl
pop
add
mov
scas
mov
push
mov
movsl
jne
xchg
sbb
cmc
cld
enter
std
adc
inc
mov
sbb
bnd
rolb
xor
cmc
in
pop
bound
cmpsl
xor
cmp
adc
xchg
xor
clc
cmpl
pop
sbbl
add
leave
pop
xchg
dec
int
popa
fidivs
roll
lea
negb
adc
cmp
xchg
pop
sub
lds
jge
es
bnd
out
push
clc
jo
and
andl
dec
std
scas
fbld
xor
adc
hlt
push
inc
sub
add
pop
mov
ret
mov
pop
and
pop
jnp
sti
adc
inc
fsubl
pop
xchg
lods
popa
out
sub
mov
pop
jmp
fwait
xor
loop
ss
shl
inc
cmp
fs
pop
mov
js
adc
push
ret
mov
inc
mov
lcall
jge
out
push
repnz
rcrl
stc
push
mov
out
xchg
inc
ss
out
into
std
jge
dec
mov
pop
xlat
call
aam
loope
inc
incb
push
add
movsb
call
insl
jno
mov
fwait
mov
aam
sub
repnz
imul
movsl
xor
leave
movsl
rolb
or
rcll
xor
xor
nop
lods
pop
dec
mov
idiv
leave
pop
pop
pop
sahf
lcall
in
sub
je
sbb
mov
push
and
and
xchg
lret
push
and
sahf
das
scas
dec
mov
neg
or
pop
sbb
mov
sub
and
cmp
aaa
xchg
ss
adc
jl
add
int
mov
jbe
les
inc
shll
sahf
and
fnstcw
xor
adc
jge
sbb
jg
sub
xchg
jl
fwait
push
leave
jno
or
iret
xor
in
lea
inc
in
add
cmpsl
cmc
in
data16
stos
ds
pop
imul
lock
loopne
in
mov
in
mov
test
and
and
jns
sbb
push
pop
stos
jne
mov
xor
jne
jle
nop
lcall
and
in
cmp
jmp
or
ljmp
push
mov
inc
popf
xchg
xchg
jae
adc
inc
shrb
xchg
xchg
push
cli
je
sub
and
adc
add
iret
movsl
jb
jae
fidivrl
bound
adcb
pop
int3
sbb
dec
fcmovbe
test
pop
jle
cmp
adc
lret
xchg
decb
push
push
lret
jecxz
shr
in
sbb
adc
imul
jne
dec
xchg
cmpsb
xor
push
push
jl
int3
iret
mov
mov
sub
add
lahf
sub
sbb
xor
push
xchg
fisubs
mov
mov
inc
adc
stos
lahf
sar
addr16
dec
adc
aad
js
or
in
popa
movsb
add
inc
insl
add
fsubr
push
dec
lret
cmp
xor
aaa
mov
pop
sbb
and
xchg
push
out
sbb
enter
cs
in
dec
imul
sub
jg
mov
cmp
sbb
leave
sbb
ja
mov
cmp
dec
push
aaa
cmp
mov
rol
sub
out
sti
or
dec
xchg
pop
or
cmp
in
mov
int3
adc
and
pop
dec
jo
jecxz
in
jp
fstpt
mov
or
cmp
jns
xchg
sti
pop
mov
mov
leave
jno
ret
idivb
std
cmp
push
push
enter
sbb
mov
sti
dec
fidivrl
jmp
dec
in
fdivrs
aad
push
and
ljmp
fldl
mov
xor
xchg
and
xchg
sub
and
ljmp
les
push
imul
pop
xlat
int3
cmp
imul
dec
lahf
sbb
push
fldenv
movsb
bound
dec
adc
push
mov
or
and
imul
out
xchg
inc
lods
testb
xchg
call
lods
jnp
es
ja
bswap
divb
cmp
mov
fwait
lcall
dec
mov
pop
ljmp
adc
mov
scas
popf
out
dec
jnp
xchg
pop
push
fwait
and
xchg
mov
std
hlt
nop
sbb
add
leave
xchg
xlat
negl
es
push
loope
fdivrs
cmp
cs
jl
pop
adc
mov
mov
inc
rorb
mov
dec
xchg
stos
pop
fldl
inc
imul
pop
cmp
fistl
das
mov
xchg
mov
test
jmp
pop
test
cwtl
pop
pusha
mov
lret
test
je
insw
xchg
pop
mov
mov
push
aaa
ds
shlb
jl
jecxz
aad
sub
subl
pop
dec
adc
stos
mov
cmpsb
inc
in
icebp
mov
rcrl
out
jno
cmc
mov
lret
add
pop
aam
jne
mov
mov
or
rorl
lock
sbb
pop
mov
sub
add
fwait
sar
cmp
in
out
es
scas
sbb
fs
add
test
notl
inc
lods
or
repnz
jae
jle
scas
push
sbb
out
push
push
aas
jp
in
repz
add
and
jge
repnz
loopne
lret
outsb
pop
sti
in
outsl
sti
je
out
mov
adc
pop
pop
xchg
call
add
sub
cli
sub
dec
mov
mov
out
cmp
pop
push
cmpsl
in
imul
fisubrl
xchg
xor
push
sysexit
test
mov
mov
jo
or
out
xchg
test
dec
icebp
mov
dec
xchg
in
pop
pop
aam
mov
ret
pop
pop
inc
pop
test
bound
insb
xchg
addr16
xor
xchg
int3
mov
adc
and
mov
loopne
sub
pop
pop
sub
and
ds
and
xchg
adc
mov
inc
das
stos
call
loopne
lahf
add
inc
mov
cmp
push
insl
mov
mov
dec
sbb
pop
test
ja
xlat
sbb
dec
sub
daa
jo
inc
scas
bnd
pop
inc
test
lods
jns
add
sbb
addr16
add
mov
aam
push
jp
call
cmpsb
negb
insb
loope
fisttpll
push
mov
hlt
mov
gs
stc
inc
xchg
hlt
aaa
insl
and
or
sub
mov
loope
xor
leave
mov
sbb
dec
push
pop
adc
and
or
mov
sahf
sbbb
xor
faddl
mov
fisubs
inc
cmp
arpl
xchg
xchg
in
mov
ljmp
mov
and
imul
push
mov
mov
push
mov
jnp
insl
movaps
xchg
aam
xchg
clc
repz
enter
xchg
and
test
or
std
sbb
xor
decb
sbb
das
jg
or
pop
repz
xor
adc
jle
inc
sbb
lods
push
dec
xor
cltd
lret
cmp
dec
je
push
or
outsl
das
or
xor
les
loop
sbb
inc
cmp
test
xchg
sub
push
test
jbe
add
cmp
sbb
fs
loope
shll
orl
mov
inc
cld
pop
aam
dec
leave
fucomp
mov
in
fs
push
jg
pushf
fidivl
jle
fcmove
or
das
lret
mov
or
sbb
cmp
push
shrl
stc
mov
lock
mov
imull
push
xorb
jge
mov
adc
pop
jnp
subl
jae,pn
xorl
jp
adc
pusha
inc
jp
xchg
jle
push
lret
jmp
pop
xchg
inc
push
cmpsl
jge
lcall
divb
stos
mov
sub
xchg
xor
push
add
rclb
xor
imul
fsubs
ret
cmp
shufps
jnp
ret
aad
ss
mov
les
push
inc
loopne
iret
ds
add
std
pusha
lahf
inc
and
in
shr
movsb
fsubrp
dec
mov
repnz
movsb
sub
cltd
js
out
pop
leave
repz
xor
mov
mov
insb
sahf
jecxz
jnp
das
aad
lock
in
mov
out
lret
mov
xchg
outsb
sub
adc
push
mov
sub
std
inc
xchg
and
ret
icebp
ret
das
xchg
test
jnp
clc
incl
push
push
mov
push
mov
fldl
push
addl
push
pushw
rolb
cmp
and
jae
movsb
ss
jge
in
aas
mov
in
pop
ret
mov
push
push
push
fsub
sbb
dec
popf
mov
fsubrp
dec
outsl
xchg
jmp
add
iret
lea
or
arpl
cli
popf
loopw
icebp
sar
das
cmp
dec
sbb
mov
hlt
ljmp
out
add
call
dec
mov
lods
push
fwait
sbb
adc
outsl
jp
sahf
and
mov
push
add
ss
mov
and
les
jns
xchg
pusha
test
movsb
dec
wrmsr
in
push
dec
xchg
jl
sbb
add
adc
fbstp
inc
fistl
jge
mov
jns
dec
dec
aad
in
and
cwtl
fcomip
dec
test
pop
loope
dec
lcall
mov
lret
mov
repz
mov
inc
loope
cmp
inc
sbb
add
jecxz
jne
iret
jno
xchg
shll
ds
dec
sub
cs
sub
stos
inc
gs
clc
inc
push
sbb
add
cmp
fcompl
ss
aaa
mov
in
icebp
jb
mov
push
add
daa
mov
mov
push
jmp
and
enter
cmp
cmp
mov
cmp
dec
aaa
mov
outsb
mov
daa
into
xor
outsb
mov
popf
add
lods
lods
repz
nopl
cmpb
sti
insb
mov
imul
cltd
sbb
loopne
xchg
dec
adc
data16
cld
scas
sub
xchg
ja
or
movq
lods
lock
mov
pop
movl
das
cmc
or
add
ja
into
cmp
mov
jb
mov
xor
lds
mov
dec
jge
mov
addr16
or
xchg
popa
lods
pop
sbb
inc
sbb
aas
ret
sahf
mov
es
in
add
sub
xor
andl
bound
in
fidivrl
hlt
js
inc
jns
mov
mov
xchg
sbb
adc
repnz
pop
mov
mov
in
fistps
dec
fnstsw
std
std
repnz
push
icebp
clc
shl
shl
cmpsl
es
push
sbb
jbe
das
jp
mov
jmp
into
cmc
loop
xchg
out
outsl
mov
dec
sub
adc
movl
inc
outsl
stc
repnz
hlt
jae
push
xorb
or
xchg
mov
fsubs
ss
insl
add
xlat
mov
inc
xor
cmpsl
xchg
out
cwtl
sbb
mov
pop
ds
ret
mov
inc
sub
dec
les
cmp
add
add
fadds
push
fdivr
lcall
or
sub
jecxz
insl
sub
lods
lods
outsl
fs
jae
pop
jne
jne,pn
add
adc
mov
sub
pop
stc
inc
fsubrs
jge
xor
add
jge
enter
xchg
inc
les
sti
mov
test
pop
xor
mov
jle
sbb
push
icebp
push
mov
xchg
add
mov
aas
in
push
adc
jnp
jmp
mov
adcl
jmp
mov
faddp
sub
stc
ja
movsl
popf
decb
dec
xor
mov
add
icebp
mov
fucomp
mov
leave
mov
out
lahf
and
mov
sub
xchg
lahf
loop
mov
jg
stos
pop
popf
adc
push
xchg
jns
loopne
lds
aad
popf
sarl
ficoms
imul
ja
aad
inc
adc
sub
pop
loop
insl
rcrl
dec
mov
and
int3
mov
scas
xchg
daa
adc
sub
sahf
js
dec
cwtl
xorb
in
mov
push
aas
popa
int3
je
in
scas
and
out
cmp
mov
sub
push
cwtl
jbe
mov
push
call
into
mov
lahf
dec
adc
sahf
aad
movups
imul
mov
stos
aam
andb
jge,pt
inc
lds
aam
iret
das
aas
adc
imull
dec
popl
sti
pop
cld
test
xchg
iret
aas
mov
push
mov
mov
addr16
stos
fcmovbe
sti
xchg
das
call
xor
push
sub
inc
pop
mov
loopne
ljmp
imul
jecxz
pop
fimull
pop
cmp
sarb
fcmovnu
xor
push
pop
stc
ja
lret
dec
sbb
mov
mov
push
sub
bound
dec
repz
pusha
lock
mov
out
mov
adcb
and
adc
popf
push
fnstsw
cwtl
in
cmpsb
popa
ljmp
inc
les
xor
lock
loop
andb
mov
push
cmp
push
xchg
das
push
and
sahf
xor
xchg
int3
ds
push
lock
jp
testl
je
pop
or
popa
cld
xorl
and
xor
jnp
sub
adc
aas
mov
mov
lret
pop
inc
loopne
pop
cwtl
xlat
fistpl
xor
stos
cwtl
es
adc
dec
sub
scas
xchg
hlt
and
mov
xchg
or
or
movsl
inc
push
inc
aas
jns
push
sbb
jecxz
and
stos
pop
adc
cmp
jle
sbb
cmp
dec
pop
mov
and
dec
sub
adc
inc
aaa
mov
push
cwtl
dec
xchg
popa
lahf
jae
inc
subb
inc
xchg
aam
test
jne
mov
call
and
jp
jg
cmpsl
out
out
sub
inc
sub
neg
iret
dec
and
movsb
mov
les
sub
and
xor
mov
xchg
mov
pop
and
and
ret
lahf
mov
sahf
sbb
sbb
adc
sarl
and
arpl
mov
enter
adc
jg
adc
popa
int
mov
shll
shl
bound
repz
push
push
xchg
xor
mov
jo
jg
pop
push
inc
pushl
out
inc
mov
outsl
sbb
xor
mov
sub
div
stos
jne
sub
stos
sub
loop
ja
inc
in
xchg
and
or
jbe
dec
or
popf
add
cs
fstps
mov
adc
insl
adc
adc
bnd
or
sub
dec
sbb
jno
mov
ljmp
mov
out
mov
jns
jge
popf
arpl
shlb
std
adc
cmp
and
ja
repz
mov
jge
fnstcw
xor
ret
or
stos
fidivrl
dec
jae
mov
sub
inc
inc
cmp
fwait
inc
mov
adc
mov
repnz
mov
jbe
jecxz
fs
inc
mov
mov
das
leave
aas
out
subb
pop
xchg
rcrl
push
aam
shrl
mov
xchg
es
push
pop
popfw
cwtl
adc
pop
out
add
xchg
sub
lods
lahf
cmpsl
push
popf
jb
inc
hlt
sub
pop
sub
push
inc
sbb
pop
mov
out
xlat
pop
cmp
or
ss
ss
out
ja
negl
jbe
cmpsl
les
arpl
push
in
dec
frstor
jno
push
mov
push
insb
pop
leave
fisttpl
xor
mov
pushf
jg
loope
sbb
dec
decl
insl
ret
mov
jns
pop
xor
xor
arpl
mov
sti
cmp
jns
dec
cltd
cltd
jb,pn
pop
lods
inc
push
mov
mov
dec
lods
xchg
rcrl
scas
cmpsl
xchg
push
add
clc
out
lds
adc
loop
lods
sti
iret
push
hlt
xchg
popf
pop
pop
mov
jl
movsb
xor
fwait
mov
inc
dec
scas
test
jl
popa
mov
and
jnp
aaa
scas
dec
flds
cmpsl
fcoml
xor
cmp
adcb
jp
sbb
mov
or
lahf
ljmp
insl
cwtl
dec
sbb
or
enter
jg
jae
sub
loop
andl
ret
lcall
push
and
dec
in
sahf
mov
insl
sbb
xchg
dec
aam
cwtl
hlt
in
lret
sub
pop
adc
jp
sub
popl
push
cli
clc
cmpsb
dec
fisubs
adc
bound
mov
shrl
mov
and
cmp
aam
shlb
mov
push
sbb
adc
pop
and
fcmove
add
xchg
call
mov
jl
into
jecxz
dec
scas
pushl
sub
out
iret
mov
sahf
aaa
cmp
and
test
gs
aas
daa
stc
pop
mov
loop
or
dec
adc
fildll
mov
jge
test
pop
pop
daa
and
cmp
xchg
inc
mov
jne
xor
popa
dec
in
test
test
sub
or
popf
adc
adc
in
jg
fwait
pop
and
addr16
test
mov
xchg
jecxz
shll
dec
repnz
stc
xchg
fdivrp
push
cwtl
push
fldl
and
jge
sarl
add
aas
xor
shrb
shr
push
adc
cmc
push
lods
sbb
sahf
cmp
push
mov
sbb
shlb
jbe
pop
enter
dec
xchg
mov
xchg
lds
ja
sahf
cmpsl
sahf
xchg
push
xchg
aam
mov
dec
push
insl
xchg
mov
add
add
sub
jge
mov
jge
push
jb
mov
pop
xchg
fiaddl
push
aad
lods
iret
pop
mov
or
dec
cmpb
std
es
imul
sub
jne
ja
jbe
cmpsl
xchg
negl
xchg
pusha
inc
add
repz
xor
rcll
rclb
adc
push
js
xor
pop
aas
dec
mov
das
jb
cwtl
out
sbb
outsb
dec
sbb
cmpsb
cmp
fwait
incb
divb
jl
mov
inc
cmp
lds
mov
push
xchg
pop
add
jno
testl
out
into
add
pushf
sbb
dec
sbbb
stos
xor
pop
mov
mov
std
das
rorb
mov
mov
cs
lock
push
je
mov
addl
pop
dec
in
xchg
adc
or
int
and
repz
push
cmp
sbbb
fucomp
arpl
fadds
fisubl
cli
mov
mov
imul
pop
inc
ss
cmp
movb
addb
mov
nop
aaa
and
fistps
inc
push
inc
push
xor
add
loop
clc
fcoml
ljmpw
aad
ss
iret
scas
jmp
adc
jle
push
fcmovbe
fistps
outsl
call
sti
pop
mov
xor
jae
data16
subb
dec
dec
cmp
test
pushf
test
ds
out
xchg
dec
daa
in
jne
imul
cmp
shll
loope
test
in
mov
cmpsl
push
lock
das
aad
cmp
cmc
xor
data16
pushf
mov
mov
int
and
xor
mov
sub
or
push
imul
mov
pusha
lock
cmovnp
into
outsb
js
mov
adc
mov
mov
sbb
adc
lods
pop
inc
push
das
shll
cltd
in
test
push
mov
mov
or
mov
cmp
push
repz
sub
pushf
fucom
mov
adc
push
aad
shr
and
add
xlat
jnp
mov
mov
xorl
jo
sub
aaa
pop
cld
stos
mov
incb
mov
imul
cmp
out
aam
pop
jne
xchg
movsb
push
in
sub
push
inc
jge
xchg
mov
jg
sti
mov
flds
sbb
mov
les
cwtl
add
sbb
cmpsl
sbb
in
pop
sbbl
aam
lret
jno
gs
pop
notb
inc
or
int
push
aad
sub
cmp
push
ds
fimull
xor
xlat
insl
aas
xor
adc
jle
hlt
xchg
lcall
popf
cs
pop
adc
test
pop
adc
iret
aaa
sub
jle
dec
push
inc
insb
fnsave
dec
test
out
outsb
loope
out
or
xchg
mov
and
inc
mov
test
loope
ret
pop
mov
lret
fdivrs
arpl
enter
sbb
addr16
xlat
jmp
fimull
and
mov
push
add
out
cmp
mov
leave
mov
insb
cs
gs
daa
cld
jg
push
ret
je
shrl
dec
mov
mov
add
push
test
out
adc
xor
bound
xor
inc
in
test
mov
adc
lcall
mov
xchg
jp
mov
pop
mov
std
mov
scas
add
mov
mov
jo
imul
or
push
in
xlat
mov
push
xchg
dec
xor
mov
data16
sbb
jb
lock
xlat
pop
movsl
xchg
dec
repz
stc
imul
or
xor
jp
xlat
pop
push
ss
push
xchg
add
lahf
mov
and
dec
incl
inc
ljmp
push
or
hlt
adc
jb
dec
sub
jbe,pn
adc
in
bound
out
cmpsb
popa
and
lods
cmc
sbb
xor
pushf
xchg
jnp
jge
xchg
std
mov
pop
movsb
int
or
loopne
pop
pop
jge
int
xchg
imul
adc
dec
or
add
sbb
les
shlb
nop
roll
and
testb
mov
icebp
js
cmp
test
mov
cmp
cmp
xchg
loopne
pop
sahf
divl
sarl
or
cli
and
jg
add
and
mov
sub
sub
stos
fadds
insb
adc
repz
cmp
aaa
movsl
adcb
inc
sahf
insl
inc
gs
testl
mov
push
out
in
in
xor
and
jno
lcall
cmp
aam
add
and
out
aam
push
push
sub
clc
mov
loop
pop
jge
movl
sub
pop
pop
mov
pmuludq
das
inc
pop
jge
pop
addr16
mov
or
rcrb
fwait
jmp
mov
int
mov
inc
int3
and
imul
lcall
or
popa
mov
xor
jns
aad
mov
cmpsb
mov
mov
repnz
sub
fisttpl
jnp
or
imulb
xor
fisttps
xchg
cmp
push
adcl
xor
mov
mov
ja
test
push
sbb
xlat
mov
fs
and
xor
imul
cs
add
ret
divb
std
jnp
aaa
scas
clc
mov
jmp
pop
dec
insb
fsubrl
jns
ret
or
push
or
inc
mov
stos
outsl
test
inc
and
adc
insl
dec
xchg
ja
lea
popa
or
cwtl
mov
adc
sti
insb
push
int3
cwtl
mov
push
mov
aam
stos
and
in
popa
add
mov
inc
xor
pop
sub
das
scas
divb
sub
xchg
xchg
jecxz
scas
loope
ljmp
rclb
out
inc
sbb
push
jnp
sub
mov
jne
jno
jmp
addr16
movsb
iret
popf
divl
pop
adc
loope
cwtl
mov
xchg
in
pop
shll
cwtl
loope
jg
icebp
jns
out
mov
sti
shlb
mov
jecxz
xchg
adc
fimull
xchg
into
addr16
xchg
ret
in
add
push
mov
push
xchg
movsl
xchg
xor
xchg
addl
je
and
loopne
inc
pop
mov
mov
mov
sarl
ja
mov
mov
pusha
jecxz
mov
and
js
cmp
es
jle
xchg
ret
mov
mov
imul
cmp
fstp
cmp
mov
outsb
inc
mov
mov
and
mov
subl
adc
fildll
and
leave
jae
int
outsl
jl
mov
cmp
fiadds
push
push
test
je
test
or
popa
popf
outsl
fsub
movsb
test
push
xchg
movsl
ret
cmp
jns
call
add
daa
pop
xor
pushf
dec
rcll
into
push
sti
subl
ret
cmp
sub
les
pop
mov
cmp
sub
sub
fcomip
roll
cmp
add
cmp
xchg
lret
mov
stos
mov
inc
fcoms
in
int
sub
cmp
ljmp
popl
fs
mov
fisubrs
or
or
dec
add
sbb
xlat
xchg
out
pusha
cmp
ljmp
inc
xor
xchg
fstps
xorl
enter
sbb
xchg
or
xchg
xor
and
mov
add
popa
and
xchg
mull
cmc
dec
inc
imul
call
push
adc
stos
dec
dec
dec
jl
enter
cli
addr16
lcall
and
out
js
ret
and
dec
mov
data16
hlt
xchg
sub
shlb
movsb
add
out
pushf
orb
aad
xor
fnstenv
inc
sbb
adc
scas
sub
ds
insb
jmp
nop
adc
into
push
lahf
xor
mov
mov
jecxz
mov
xor
lret
int3
rolb
test
mov
negb
int3
and
push
cs
ljmp
mov
fisttps
inc
inc
cld
or
adc
mov
hlt
xchg
fdivs
mov
cs
inc
fnstsw
sub
pop
jbe
test
lcall
push
xchg
push
inc
xorl
pop
scas
out
inc
fdivrs
mov
bound
scas
in
popf
fdivl
push
ret
cli
arpl
mov
lcall
xor
xlat
aad
out
data16
xor
iret
imul
cmp
jb
pushf
mov
add
lock
xchg
mov
dec
xchg
shlb
lds
pushf
mov
aas
and
cmp
sbb
push
std
imul
lcall
nop
out
cmp
and
pusha
jnp
lods
jg
adc
or
sbb
jge
xchg
scas
and
inc
inc
in
xlat
fs
lods
ljmp
gs
int
mov
xor
xor
or
lahf
xchg
out
inc
ret
mov
pop
sub
test
int
sarl
insb
test
pop
lods
aas
mov
cmp
cmpsl
push
push
pop
or
sti
adc
jg
xchg
xlat
inc
push
cmc
iret
mov
idivb
cltd
sti
lcall
je
xchg
mov
xchg
enter
xor
mov
pop
lcall
sbb
test
mov
cmp
inc
sbb
dec
jno
dec
pushf
aaa
cld
hlt
xchg
push
adcb
outsb
xchg
adc
js
pop
inc
cmp
pop
imul
cmpsb
mov
sub
fisubl
pop
in
imul
pushf
xchg
std
mov
int3
ret
rcl
and
cmp
push
mov
aam
push
adc
sub
stos
movsb
push
mov
mov
mov
ror
lods
mov
pop
fwait
aas
adc
dec
rcll
pop
push
lcall
mov
dec
and
out
mov
lods
stos
dec
xorl
xchg
and
leave
stc
add
nop
clc
fwait
addr16
sbb
test
or
cmpb
mov
mov
xchg
je
fcomp
mov
xchg
mov
test
jno
fcoml
pop
out
xchg
mov
mov
push
ljmp
enter
dec
pop
cwtl
ret
sbb
jbe
js
sub
cli
xchg
adc
das
push
test
pop
pop
outsb
add
xlat
dec
dec
mov
xchg
outsl
xor
cmp
ret
fldenv
adc
lahf
jns
add
dec
cltd
js
xor
jb
in
push
sbb
mov
gs
or
sbb
out
mov
out
aad
shrb
mov
adcb
lret
loope
into
jae
or
inc
aam
jp
push
mov
jmp
inc
adc
fdivp
mov
cmp
testl
push
jbe,pn
sub
mov
add
xor
sbb
mov
flds
lret
dec
mov
adc
dec
jl
or
lods
adc
std
pusha
xchg
mov
dec
shrb
xor
frstor
arpl
repnz
jge
xchg
cld
aad
adc
mov
push
lock
iret
xchg
push
push
push
adc
sbb
rol
mov
dec
pop
dec
inc
sub
std
or
pop
clc
dec
pop
or
or
in
xor
cmp
leave
pop
dec
mov
xchg
push
sub
push
insb
or
in
or
adc
scas
cld
add
and
and
test
sbb
fs
arpl
call
je
popl
jne
inc
bound
mov
inc
inc
mov
aad
es
dec
fwait
cs
xchg
lcall
sbb
dec
cmpsb
dec
cmp
mov
or
sub
mov
fs
adc
and
or
add
loope
mov
mov
add
mov
jns
push
movsl
add
and
and
dec
sub
int
inc
push
inc
pusha
xchg
mov
nop
loop
fnstcw
cmpsb
cmpsl
add
adc
adc
mov
xor
out
push
shll
xchg
es
lcall
jae
popa
cld
adc
adc
out
add
add
jo
sbb
adc
nop
rorl
nop
vpmacsdd
mov
jge
inc
shl
std
movsb
test
lcall
cmp
add
cmp
sub
je
lret
sbb
or
fsub
xchg
test
mov
idiv
je
pop
dec
sbb
punpckhwd
clc
mov
mov
mov
pop
sbb
xor
jle
jae
sub
divb
int
out
sub
or
inc
std
popf
xor
adc
push
test
out
call
xchg
cmc
sub
outsb
add
sbb
lahf
xchg
out
sbb
insb
mov
aad
cmp
dec
out
rcll
mull
xchg
cli
push
mov
jmp
dec
sbb
aam
pop
adc
daa
cs
inc
fisubs
les
repnz
jle
cmp
xor
mov
jns
roll
push
inc
adc
mov
daa
iret
push
adc
pop
sub
int
cmp
call
stos
into
fdivp
jle
mov
rcr
mov
movups
pop
ror
sbb
outsb
fisubrs
push
sub
nop
cld
cmp
pop
push
fwait
jns
pop
stos
push
pushf
pop
pop
fidivrl
data16
jne
mov
test
cli
lea
repz
inc
add
jns
mov
jmp
mov
adc
add
mov
xor
iret
add
xor
test
fwait
mov
stc
mov
ds
lret
shlb
das
or
lea
shrl
and
sbb
xorl
pop
scas
arpl
adc
loope
xor
popa
ja
adc
shll
movsl
sbb
push
cmp
cwtl
out
int3
in
mov
inc
mov
xchg
in
movsb
xor
adc
dec
or
movsb
movsb
pop
mov
and
add
adc
pop
jg
inc
ss
dec
scas
mov
xor
inc
fnstcw
cmpsb
or
das
divl
fwait
cmp
lcall
popa
cmpb
inc
sub
and
push
pop
je
pop
add
pop
and
xor
push
in
push
dec
int3
mov
repz
adc
xchg
push
popa
cs
imulb
mov
or
arpl
jl
xchg
sbb
mov
or
xchg
dec
imul
sbb
stos
notl
jmp
pop
popa
movsl
fcomps
ret
mov
jle
hlt
fsubrs
ss
push
jb
lret
push
xchg
insb
mov
fiaddl
lahf
cmp
pop
ljmp
test
lds
hlt
arpl
cmpsb
sti
jbe
out
cli
sub
add
jecxz
notb
lock
mov
out
cmp
inc
push
ss
jno
icebp
mov
sbb
add
test
adc
dec
xor
jbe
ds
mov
aam
das
and
stc
push
adc
inc
mov
imul
cs
fcomps
jg
addr16
fidivl
xchg
scas
icebp
popf
inc
dec
into
and
imul
rcll
mov
mov
test
push
outsb
mov
cmp
pop
inc
mov
mov
or
ficoms
push
or
test
cmp
inc
movsl
mov
jmp
mov
add
sub
std
outsl
inc
adc
adc
cmp
inc
cmp
cld
shll
aaa
inc
pop
adc
mov
cmp
add
aad
sub
push
aam
lahf
or
push
and
pop
gs
adc
jb
xchg
ret
sbb
inc
add
dec
out
imul
mov
or
dec
mov
movsb
xor
jg
adc
mov
push
in
insl
outsb
in
sub
aas
orl
inc
mov
adc
std
daa
push
out
xor
pop
fcoms
aas
cwtl
mov
mov
or
mov
movsl
sub
hlt
std
cmp
sti
gs
and
sbb
scas
aas
dec
cmp
cmp
jbe
push
js
rclb
jge
pop
sbb
push
dec
fcoms
adc
cmp
jno
int3
xor
inc
fwait
sub
mov
xor
movl
xchg
mov
and
and
aaa
push
movsb
jge
out
out
pop
mov
sbb
scas
jbe
mov
pop
inc
incl
pop
mov
push
in
jae
lods
aad
dec
mov
mov
lds
push
test
xor
jp
adc
mov
pusha
popa
icebp
fbld
push
cwtl
cltd
push
push
xchg
cmp
mov
in
mov
xchg
movsb
cmc
test
outsb
int
inc
outsl
sub
xchg
cli
or
data16
or
mov
repnz
or
xor
mov
adc
repz
adc
xor
push
jp
and
subb
je
mov
lret
and
sub
mov
jecxz
shll
lcall
xor
push
shll
or
xchg
fmull
adc
inc
or
add
inc
test
rcrb
mov
dec
pop
push
jecxz
imul
xor
add
iret
test
sub
and
push
mov
icebp
cmp
jne
push
pop
xchg
mov
rcrb
or
cli
inc
push
jno
xlat
dec
pop
jne
andb
add
lahf
push
xor
incl
rcrl
rcl
adc
cmp
aaa
inc
or
gs
cmp
adc
or
pushf
cmpb
mov
xor
mov
in
in
sub
sti
jl
cltd
stos
push
dec
xchg
mov
daa
pop
into
ret
and
out
std
and
add
or
cmp
dec
sbb
mov
jg
add
jbe
movsb
and
jg
loopne,pt
lcall
jle
jb
sarb
fsubrs
mov
cmpsb
inc
insb
inc
clc
insl
ds
push
int
pop
sub
aad
dec
mov
das
repz
or
xorb
pop
iret
mov
mov
cmpsl
inc
ja
call
or
cmp
add
das
push
das
or
or
lods
mov
push
in
dec
xchg
in
subl
andl
cmpsl
lea
fdivs
test
push
xchg
outsb
mov
sub
inc
ficoml
mov
jle
pop
and
data16
decb
adc
and
xlat
jecxz
pop
add
out
jo
xchg
fadds
pop
jne
jge
push
mov
nop
ffree
mov
fdivl
dec
lret
das
fwait
push
enter
xchg
push
jmp
icebp
mov
lods
sub
lds
ja
jnp
inc
clc
cmp
in
cmc
sar
push
lcall
adc
xor
xor
pusha
or
lods
cmp
mov
mov
pop
mov
ret
addl
data16
push
inc
sub
std
out
mov
scas
xchg
daa
hlt
mov
iret
sbb
adc
cmpsl
ljmp
movb
pop
in
sbb
mov
xchg
adc
out
xchg
cltd
and
lods
mov
sub
and
sub
movsl
movsb
fwait
adc
inc
push
xor
xchg
mov
loopne
sub
std
jp
nop
mov
pop
iret
jmp
fwait
push
rcl
dec
jnp
adc
jge
pop
les
push
dec
adc
imul
xor
inc
sub
fistpll
test
mov
push
lods
sbb
push
inc
jg
jne
xor
imul
int
push
sbb
icebp
add
pop
or
clc
xchg
lahf
mull
push
jecxz
shld
ret
es
and
mov
sub
dec
into
pusha
nop
call
aad
int3
retw
scas
jmp
aad
rorb
jmp
dec
mov
cltd
push
cmpsl
xchg
ret
lcall
adc
mov
inc
xchg
and
jb
dec
xor
xor
mov
push
jge
and
jecxz
or
cmp
pop
dec
pop
mov
sub
loope
cli
jp
mov
xor
jle
stc
xor
lahf
dec
ss
and
push
push
push
cmp
loope
lahf
adc
mov
cmc
and
mov
stos
mov
cli
xor
icebp
je
pop
mov
fidivl
lods
xchg
clc
shr
push
insl
in
or
cmp
push
shr
in
push
push
dec
pop
in
enter
mov
mov
jmp
cmp
mov
shlb
pop
fs
add
pop
aad
arpl
xor
xchg
xchg
enter
lods
clc
jae
dec
les
sbb
in
dec
lcall
out
pop
lock
repz
dec
inc
cmp
cld
adc
xchg
icebp
dec
inc
mov
and
fildll
test
aad
adc
andl
inc
shl
aas
xchg
mov
pushf
push
shl
jo
jo
push
sysexit
mov
mov
dec
pop
jbe
inc
popa
data16
dec
inc
sbbl
sbb
ss
pop
arpl
addb
das
xchg
cld
inc
push
fidivl
sub
lock
pop
jl
push
xchg
insl
add
in
mov
jae
enter
pop
cmp
push
cmp
pop
xchg
add
out
and
out
pop
cld
dec
cmp
mov
test
in
jp
jmp
int
aaa
addr16
mov
lods
cli
and
xlat
psubsw
cmc
jmp
and
test
mov
aas
sbb
lret
push
sahf
bound
xor
pop
test
shlb
mov
inc
clc
int3
repnz
daa
xchg
mov
pushl
cmp
imul
sahf
enter
lret
dec
out
lahf
out
push
int3
cmp
xor
lret
mov
inc
ljmp
stos
gs
jnp
jmp
dec
mov
iret
sti
jmp
jne
out
gs
fsts
pop
jl
das
cmp
js
daa
pop
sti
sbb
outsl
fwait
dec
mov
mov
mov
cmc
pop
mov
pop
xchg
nop
icebp
push
sbb
lea
cmp
push
loopne
inc
xchg
adc
movsl
mov
ffreep
push
jg
pop
pop
mov
fcompp
inc
dec
pushf
mov
inc
jo
pop
jb
mov
in
in
bound
or
xchg
inc
dec
sbb
or
mov
sbb
jg
das
push
stos
xlat
xchg
xchg
arpl
sub
inc
insl
xor
enter
cmpsl
or
lcall
and
mov
xlat
push
inc
xor
adc
mov
push
push
inc
push
ss
jecxz
movsb
jbe
jg
daa
mov
sbb
fs
movsb
xor
pop
or
jg
cmpsl
pusha
mov
fnsave
imul
pop
pusha
in
loope
movsl
mov
lock
push
xlat
pop
dec
jnp
and
scas
or
add
loopne
pop
stos
js
stos
adc
les
mov
add
js
push
arpl
cwtl
daa
das
cmp
jnp
and
in
jp
mov
jge
jmp
repz
pop
outsl
int
cmp
nop
int3
add
jb
loop
insb
jmp
mov
test
gs
popf
testb
add
mov
cmp
mov
mov
xlat
xchg
dec
ffree
movsb
lea
test
add
mov
fucom
cmp
cmp
jg
leave
out
mov
scas
fdivs
mov
bound
add
mov
ja
cltd
push
out
movsb
lahf
mov
aas
in
push
add
ficompl
or
jno
mov
mov
mov
aam
sbb
mov
mov
dec
cmp
outsb
and
scas
mov
push
lds
dec
outsl
cmpsl
sbb
jbe
jge
push
imul
insl
inc
adc
jecxz
sbb
mov
mov
lahf
fsub
push
lods
push
mov
mov
jg
addr16
out
inc
loope
mov
loopne
fmull
insb
fisttps
mov
cmpsb
imul
pop
dec
xlat
imul
rolb
rcll
sar
mov
xchg
aas
add
out
daa
push
xchg
cmp
adc
adc
jecxz
push
pop
out
cmp
outsb
or
mov
aaa
outsl
repz
pop
mov
jo
icebp
dec
xchg
fsubl
cli
jno
push
fsubrp
xor
push
div
pop
and
popf
sarl
loope
pop
mov
in
jecxz
arpl
loop
adc
cs
jns
gs
scas
and
add
ret
xor
mov
xchg
loop
and
hlt
cmp
inc
mov
aam
insb
addr16
fwait
mov
jns
sub
in
mov
xor
mov
faddl
and
mov
repz
xor
push
fwait
rorl
or
mov
adc
push
bound
mov
ljmp
inc
push
fdiv
ds
cmp
cmp
sub
add
movsl
mov
jns
outsb
test
movsb
pop
pushf
jno
je
addr16
in
stos
pop
mov
sbb
xchg
int3
sub
cmpsl
and
aad
xor
out
cmp
cmp
fistl
xchg
icebp
pop
rolb
mov
xor
repz
and
xor
mov
sub
popl
jmp
and
test
outsl
mov
jbe
test
and
gs
push
or
jbe
pop
in
jmp
stos
xor
xchg
or
cli
inc
ljmp
xchg
and
mov
jns
and
mov
js
mov
leave
pop
jae
xor
push
xchg
cmc
das
mov
rorb
mov
call
mov
mov
ljmp
pop
xchg
push
mov
pop
adc
fsubl
push
jno
les
sub
leave
jp
add
sub
mov
add
sub
and
fidivl
sub
js
cwtl
stc
loop
popf
repnz
mov
push
or
arpl
pop
idivb
cwtl
leave
roll
or
rcl
sub
outsb
test
adc
imul
cmp
leave
jnp
cmp
addb
movsl
xchg
outsb
inc
jge
mov
push
in
mov
and
cmp
adc
arpl
adc
andl
push
fidivrs
ss
mov
in
test
xor
scas
stos
repnz
inc
out
outsl
cmp
push
fs
rcl
jp
jno
xchg
or
in
insl
bound
idivb
dec
ds
mov
in
pop
nop
xchg
fst
hlt
ss
cs
sbb
lods
cli
add
aad
inc
jecxz
outsb
stos
sbbl
fisttps
clc
xor
and
dec
pushf
xchg
add
xchg
mov
mov
loope
movb
jae
add
repnz
gs
sub
mov
sti
inc
jns
lcall
out
pop
mov
pop
mov
xchg
xchg
mov
sbb
jge
setle
push
aam
sub
popf
inc
insb
mov
out
loop
mov
xchg
stos
pop
mov
fs
push
dec
sub
fistpl
dec
inc
outsl
xor
xchg
cmp
pop
jg
sbb
ljmp
add
xchg
pop
sub
ret
pop
cmp
push
ret
adc
lcall
xor
out
fdiv
dec
daa
daa
and
aad
push
adc
push
dec
adc
sub
in
jmp
shr
sarb
hlt
leave
pusha
lea
xor
xor
dec
inc
push
xor
xchg
mov
pusha
movsl
movsl
push
ds
stos
idivl
mov
mov
adcb
mov
adc
rcrl
xor
sbb
mov
out
mov
aaa
jae
jl
jecxz
adc
dec
jle
dec
aam
push
and
ret
mov
sar
or
sub
add
or
stc
aad
ljmp
jge
mov
dec
pop
inc
mov
repz
lods
mov
cmp
mov
ret
inc
cmpsl
push
jg
repnz
xorb
es
lahf
or
cld
lcall
mov
cmp
jno
pop
inc
push
inc
call
lea
fbstp
lea
pushf
mov
jmp
mov
nop
or
dec
cmpsl
stc
sbb
jns
dec
sarb
mov
cmp
js
imul
out
pop
inc
dec
sbb
stos
mov
mov
jecxz
xchg
xor
xor
jb
pop
test
scas
cld
stc
sbb
mov
or
inc
sbb
xchg
clc
bound
ja
in
in
popl
xchg
add
cmc
sub
adc
outsl
inc
adc
ljmp
sahf
inc
loope
sahf
sub
push
pop
xor
adc
xchg
ljmp
cld
bound
xchg
dec
mov
xchg
jmp
mov
fs
jno
outsb
jmp
and
jne
mov
imul
mov
pop
xchg
sahf
push
std
into
loop
push
adc
mov
mov
cmpsb
xor
push
mov
mov
aas
jg
fucom
nop
nop
ficomps
cmp
push
fisubl
fldcw
sbb
ss
lds
das
mov
mov
fimull
adc
stc
add
into
or
push
pusha
stos
adc
in
xor
mov
insb
and
repz
add
xchg
ds
in
push
stos
cmp
stc
je
mov
sbb
dec
outsb
cmp
test
cmp
pop
xchg
inc
xchg
out
or
sub
aam
jmp
stc
aad
cmc
test
out
mov
shrl
inc
adc
xchg
cmp
push
dec
lods
jo
jg
xchg
jl
pushf
jp
jns
mov
pop
adc
xchg
pop
in
lods
aad
sub
pop
push
aas
fs
notb
xor
rcr
add
xlat
scas
sbb
and
outsl
or
in
nop
enter
sbb
fsubl
gs
mov
out
inc
rcl
xchg
cs
push
add
cltd
aas
and
daa
cmp
les
daa
movsb
cmp
jnp
aaa
cld
adc
adcb
popf
mov
and
push
daa
loop
add
sub
iret
notl
push
mov
ficoml
lds
cli
stos
mov
call
or
pop
mov
dec
push
frstor
mov
fisubs
les
mov
pop
pop
jnp
icebp
ss
mov
movsb
pop
xchg
arpl
adc
cld
movsb
push
aaa
jo
lret
push
in
stc
pop
jb
dec
out
xchg
testb
mov
dec
cld
loopne
jmp
push
mov
es
je
pop
mov
arpl
sub
ljmp
lock
fs
lods
outsb
xor
dec
sbb
mov
adc
in
jl
fists
sub
push
inc
xchg
jns
mov
stos
jo
das
mov
add
loop
jnp
insl
xchg
repz
call
mov
scas
andb
mov
lret
add
xor
xlat
push
jp
imul
rorb
cmp
imul
jb
inc
test
out
pop
push
jp
pop
notl
test
mov
mov
lds
add
pop
push
mov
mov
mov
push
pop
addr16
mov
and
push
xchg
cmp
xor
sub
sbb
ret
add
dec
mov
fists
mov
inc
mov
mov
les
popl
es
loopne
aaa
mov
xor
mov
sub
mov
roll
out
addb
adcl
sbb
sbb
out
xchg
stos
insl
xchg
stos
pop
jne
mov
test
icebp
adc
xor
fnstcw
es
aad
testl
mov
add
test
jo
mov
std
jmp
mov
push
jae
movsl
mov
repnz
push
mov
repz
int3
cmp
push
cmpsb
shl
jmp
loopne
push
mov
pop
jecxz
jmp
and
cs
push
cmp
push
das
loope
cs
fbld
ds
scas
out
xchg
inc
lcall
sbb
mov
cmp
call
fistps
jo
insl
jno
popa
test
and
scas
repnz
jbe
dec
or
xor
fisubs
mov
sbb
pop
push
loope
xor
rolb
push
sbb
insl
sub
mov
inc
pop
push
ret
dec
shl
dec
xlat
dec
inc
cwtl
movb
dec
xchg
es
fwait
push
sub
push
test
fstp
fldt
xchg
mov
ret
out
adc
dec
movsb
add
sbb
into
cmp
pop
lret
cmpsl
loopne
ds
dec
mov
fnstenv
ja
push
aam
mov
pop
bound
xchg
ss
ljmp
jp
jmp
mov
or
push
icebp
clc
hlt
and
cmpsl
push
inc
es
aas
stc
leave
or
mov
mov
sarb
arpl
xor
icebp
sahf
cwtl
pushf
mov
dec
mov
xor
aam
popaw
loope
pop
fildll
mov
fwait
scas
pop
mov
mov
dec
out
push
ficoml
filds
pop
add
stos
mov
and
not
inc
dec
jo
adc
mov
mov
cmp
push
adc
bound
fnstcw
sbb
inc
clc
mov
daa
mov
arpl
ja
adc
xchg
jge
sbb
jge
lret
icebp
in
cltd
andb
cmpsb
jbe
xor
push
cltd
add
cmpsb
mov
or
bound
sub
dec
in
pop
mov
or
stos
shrb
sbb
and
clc
and
fmull
and
and
or
sar
jmp
or
fcmovbe
sbb
popf
push
pop
scas
fcoml
mov
scas
and
sub
and
mov
push
push
pop
into
or
and
inc
adc
adc
das
inc
push
lock
mov
scas
mov
leave
imul
andb
fisubs
mov
push
jl
sbbl
add
je
dec
je
add
das
cmp
mov
dec
fidivl
sti
mov
in
movsb
imul
aaa
lods
pop
sbb
pop
jne
in
sbb
dec
adc
fstl
adc
popw
push
imul
fdivrl
out
dec
imul
jo
sub
notl
xchg
jbe
insl
popa
and
fs
mov
sbb
xchg
mov
and
pshufw
mov
lods
pushf
push
mov
popf
and
in
cli
lods
repz
loope
cmp
sbb
pop
bound
jb
ret
pop
mov
sub
inc
cmp
cltd
out
aad
cmp
add
aam
inc
pop
ret
movsb
jmp
jno
or
mov
sub
cmp
cld
stc
repz
jl
mov
jg
adc
inc
out
iret
xlat
xchg
jp
test
xchg
flds
mov
sub
mov
push
movsb
jmp
cmp
cmp
push
jle
pop
in
xor
jne
mov
inc
mov
jae
jle
pop
push
addr16
outsb
shlb
lods
mov
mov
movsb
ja
mov
ret
sub
test
fisubl
mov
mov
jmp
push
jnp
push
xchg
fldenv
inc
insb
dec
cmp
ljmp
add
aad
mov
cmp
sbbl
push
or
arpl
jb
xchg
pusha
mov
xchg
mov
sub
aam
inc
sub
mov
or
xor
sub
push
jmp
je
cmp
das
mov
xchg
adc
je
je
mov
addr16
push
pushf
int
js
int3
and
cld
scas
sti
push
dec
jle
inc
xchg
cmp
push
add
adc
das
int
clc
mov
scas
and
xchg
and
mov
fwait
sti
mov
pushf
jmp
imul
jbe
add
mov
loopne
loope
cld
dec
test
daa
xchg
pop
mov
xchg
and
lds
lcall
jl
outsl
imul
cmp
and
adc
cmp
int
cmp
mov
sbb
mov
sub
sbb
daa
push
int3
popa
mov
push
inc
je
ret
pop
ja
test
das
adc
sub
nop
cmp
ret
mov
int
pop
or
and
imul
jge
push
loope
mov
fwait
out
rcrl
mov
pusha
mov
inc
stos
pushf
in
xchg
jb
sbb
pop
shll
aam
nop
add
pop
aam
jnp
shll
mov
sub
jmp
addr16
mov
sbb
inc
xchg
fidivrl
arpl
adc
jle
pop
vmread
fisubl
and
add
mov
inc
inc
sub
cmp
stos
mov
and
jne
hlt
shll
decl
sbb
adc
push
xorl
jns
pop
dec
dec
cmp
stos
fimull
aad
call
outsl
lret
mov
sub
loop
mov
inc
mov
xchg
lods
cmp
es
pop
jb
sbb
inc
jmp
mov
int
and
sbb
mov
xor
inc
ja
ud2
lret
dec
inc
xchg
pushf
xchg
sbb
ja
dec
in
push
xchg
mov
jg
inc
in
cs
mov
push
scas
inc
negl
cmp
ret
and
aam
pop
sbb
cwtl
jmp
in
icebp
push
loopne
jecxz
dec
dec
int3
ljmp
test
push
add
int
ja
pop
pop
ljmp
movsl
and
jl
cmc
stc
shrl
cld
xor
and
or
lods
jle
dec
int3
jbe
mov
mov
data16
in
adc
lret
sarl
mov
fdivrs
xchg
mov
mov
dec
les
enter
jns
in
and
cmc
dec
inc
push
xorb
pop
mov
repz
push
dec
inc
xor
test
stc
xor
or
cmpsl
ficoml
mov
inc
add
outsb
cmp
aaa
out
mov
inc
inc
testl
sub
xchg
ficoms
mov
xor
push
lahf
cmc
rol
movsl
push
mov
clc
orb
jo
call
loop
jp
das
adc
roll
adc
aad
dec
sbb
xchg
add
adc
xchg
inc
scas
fsubl
roll
xchg
das
mov
xchg
dec
gs
lret
push
call
xchg
aad
pinsrw
mov
rorl
js
movsl
in
cmc
and
adc
mov
push
fwait
lods
fadd
insl
mov
push
out
mov
aam
jge
inc
data16
cmp
subb
jmp
sar
push
lock
dec
scas
lock
addl
stc
add
outsb
mov
rorb
inc
out
jmp
cmp
push
push
jp
add
aad
mov
and
addr16
sub
push
andl
mov
push
scas
cmpsb
pushf
nop
call
mov
cmp
jge
shl
or
jne
dec
dec
sbb
push
adc
mov
push
mov
scas
vpaddw
andb
mov
mov
pop
cmp
hlt
push
add
iret
les
cltd
dec
pop
cli
imul
push
pop
test
xchg
cmp
pop
pop
and
out
data16
mov
mov
dec
cmp
js
into
pop
push
jp
pop
loope
xor
por
jmp
loopne
jle
mov
and
outsb
lret
mov
mov
cmp
insb
sub
les
clc
nop
popa
pop
push
cmp
sbb
int3
xchg
xchg
div
mov
pop
outsl
insb
and
lock
sbb
mov
dec
iret
aas
clc
adc
fimull
test
fsubrl
adc
hlt
xchg
rolb
fmul
lea
sub
out
xor
xor
push
push
xchg
inc
fs
insb
outsb
aaa
inc
jbe
jecxz
xchg
cmc
popf
push
xor
popa
popa
cmpsb
sub
mov
jl
inc
pop
rolb
test
pop
sub
push
push
std
cwtl
xor
pop
jmp
pop
out
leave
push
sarl
in
out
fcoms
xor
mov
aam
adc
push
into
mov
cmp
shlb
cmp
pop
out
movsl
sub
ja
jb
jnp
mov
sbb
jmp
adc
sub
pop
inc
shlb
aad
stc
orb
xorl
subl
mov
popl
pop
and
call
push
xchg
mov
in
inc
dec
inc
mov
mov
and
jnp
inc
test
insl
pop
push
rclb
stos
mov
xor
out
outsb
shl
push
loope
sbb
popa
fidivrs
push
sub
cmp
pop
pop
jne
int3
jmp
push
sbb
insb
add
ja
push
das
fisubl
jmp
adc
dec
dec
push
or
adc
sbb
dec
sbb
loopne
xchg
int
and
pop
sbb
jg
leave
add
test
sub
out
fwait
je
pushf
fldcw
jne
xchg
repnz
and
pop
cmp
js
les
inc
fidivl
mov
sti
sarb
push
mov
ja
or
add
xor
dec
fdivrl
sub
xchg
arpl
icebp
jmp
dec
mov
imul
mov
push
std
xchg
sbbl
fistpl
jns
movsl
lods
jge
pop
cwtl
loopne
push
cmp
js
add
jle
sbb
mov
add
and
and
xchg
sbb
call
in
or
cmp
movsb
clc
lret
leave
out
dec
push
mov
ja
lea
cmp
cmp
sbb
in
cltd
jmp
orl
aas
lods
stos
dec
and
add
imul
fnstsw
dec
jge
adc
clc
inc
sbb
mov
inc
lock
jmp
in
sti
sbb
pop
lret
or
sub
xchg
add
push
call
xchg
cltd
cltd
xchg
sub
jecxz
movsb
push
mov
shll
cmp
dec
adc
mov
jmp
add
add
in
cld
dec
sarb
aad
imul
inc
xchg
mov
aad
stos
flds
mov
cs
inc
add
outsb
sub
stos
call
jno
cmp
cltd
pop
and
int3
lods
out
pop
data16
std
pop
jbe
xchg
iret
jb
data16
push
and
insl
std
repz
xchg
cmc
cmp
cltd
repz
cmp
mov
or
lcall
inc
out
fbld
les
je
adc
ljmp
jecxz
stos
hlt
movsl
imul
loope
in
jb
or
adc
scas
outsb
sub
mov
test
rorb
jnp
cmpsl
pop
dec
dec
test
xlat
mov
mov
iret
cmp
mov
fs
xor
mov
ror
iret
iret
test
mov
inc
lahf
iret
lds
negl
ret
ret
sbb
xor
fisubrs
mov
push
mov
push
icebp
stc
mov
loopne
pop
subl
add
push
flds
fwait
mov
repnz
mov
int3
popa
insb
jl
push
adc
shrl
xor
xchg
hlt
cli
and
and
int3
movsb
add
lahf
push
mov
mov
pop
jo
xor
sti
cli
jbe
mov
cmpb
add
and
int3
xchg
icebp
jae
mov
mov
xor
jae
daa
and
js
loopne
jne
clc
imulb
fidivrs
ljmp
and
inc
aad
mov
lahf
or
ds
test
mov
pop
shlb
fwait
out
inc
push
xor
xorl
test
cwtl
mov
hlt
xor
push
jl
stos
loop
popf
imul
adc
xchg
jl
mov
or
add
inc
and
jl
cmc
mov
stos
inc
and
sub
cmp
orl
xor
mov
inc
adc
repnz
sbb
and
aam
sbb
out
push
sbb
rcrb
add
mov
rcll
loop
das
adc
mov
pop
popf
sarl
inc
add
fwait
mov
mov
ds
dec
xor
jb
push
adc
insb
cmpb
fidivrl
add
dec
mov
mov
mov
push
cwtl
jb
jge
add
insb
aad
sbb
lds
sbb
and
cmc
fisubrl
add
xor
xor
out
in
testl
mov
pop
xor
push
nop
push
push
mov
mov
push
cmpl
shlb
mov
mov
loopne
xor
fiaddl
mov
pop
in
pop
jae
or
jle
shr
push
cmp
push
sarb
sbb
scas
mov
test
mov
js
int3
in
iret
mov
sub
insl
shl
adc
stos
mov
adc
fsub
repz
push
xchg
or
cmp
cld
inc
fcoml
mov
pop
stos
add
arpl
loope
sub
mov
push
or
and
sub
jns
addr16
add
daa
aas
lock
pop
mov
leave
lods
xchg
sub
dec
jl
sar
push
jne
push
test
mov
mov
pop
repz
jno
outsb
gs
inc
inc
adc
les
lods
mov
outsb
iret
jle
inc
sbb
jle
and
pop
pop
cltd
das
leavew
lods
push
push
xchg
mov
mov
or
cs
cmp
cltd
cmpsl
js
das
loop
je
mov
fadd
imul
shrl
shll
loope
rcrl
dec
push
pop
movsl
sti
into
adc
or
nop
inc
or
std
pop
sub
daa
ljmp
add
iret
pop
in
dec
jo
in
mov
rcrl
sbb
ss
mov
scas
mov
stos
inc
addl
dec
sub
fnstsw
mov
icebp
es
leave
add
jge
insl
mov
push
pop
lods
cmp
jnp
insb
aam
push
cmp
imul
or
shll
pop
xlat
jecxz
clc
cmpsb
sti
pop
lcall
and
pushf
xchg
out
jnp
cmpb
addr16
sahf
sub
fistpll
jge
cmp
lret
into
cwtl
shrb
test
cmp
int3
cmp
dec
jb
sub
cltd
push
sbb
ret
add
jecxz
mov
mov
add
xor
das
sub
sub
jno
ss
enter
test
mov
lret
mov
adc
sub
sbb
push
mov
jns
es
es
lcall
lds
pop
mov
lds
dec
cmp
subl
sbb
inc
ds
jne
lock
pop
test
pop
clc
pop
add
cli
mov
ret
inc
cli
into
aas
push
int3
rcrl
repnz
jge
cli
mov
testb
scas
add
in
jae
xchg
push
jle
adc
or
shr
inc
or
mov
inc
jmp
sti
jb
pop
pop
pusha
pop
bound
mov
push
sbb
popf
mov
xchg
std
negb
incb
test
mov
sub
adc
cli
mov
imul
adc
out
xlat
pop
mov
out
and
pop
shr
int
jne
or
and
xchg
pusha
lcall
enter
xor
ja
popa
stc
int3
or
out
out
loope
cmp
insl
xor
incb
mov
cli
imul
dec
mov
scas
outsb
mov
jecxz
push
lret
xor
addl
push
je
and
movsb
cld
pushf
pop
and
insl
xchg
fistpll
add
pop
aam
cltd
pop
dec
mov
pop
shl
mov
arpl
mov
sbb
flds
lock
add
push
cs
sbb
mov
lea
out
insb
imul
xchg
cmc
scas
sub
inc
lret
daa
ja
std
int
mov
out
xchg
xchg
adc
push
or
shl
pop
cmpb
hlt
mov
jno
mov
and
jmp
icebp
dec
xchg
out
je
lahf
xchg
js
or
mov
pusha
fstpl
xchg
mov
pushf
test
mov
mov
rcrl
lret
and
or
inc
hlt
xchg
dec
nop
dec
aaa
rorl
xchg
cmp
ret
cmp
scas
stc
arpl
xor
cmpsb
xchg
fwait
movsb
out
adc
pop
cmc
dec
push
mul
pop
adc
cmp
test
push
jle
jno
push
or
xchg
iret
jno
or
movsl
sub
cmpsl
scas
jo
and
outsl
pop
dec
in
dec
pop
sbb
cs
mov
in
ss
jmp
loope
jp
inc
insl
or
lea
xchg
pop
cmp
fs
jno
outsl
xor
push
cs
out
pop
inc
add
lret
ret
imul
pop
pop
push
andl
xchg
push
mov
punpckhbw
cmc
pop
loopne
dec
add
sbb
lcall
notb
stos
sbb
sti
out
xchg
shll
xchg
cmp
aaa
push
in
add
adc
stos
test
sub
xor
push
jge
mov
xchg
aaa
push
sarb
outsl
and
lret
mov
cmp
sbb
jbe
out
xor
and
das
pop
inc
mov
adc
mov
jmp
mov
push
add
loop
bound
mov
sbb
inc
das
mov
xor
scas
xor
jecxz
testl
cs
lds
aam
in
mov
arpl
fnstsw
xchg
or
pop
fnstsw
ss
xchg
out
repz
mov
mov
enter
out
pop
xchg
aas
mov
add
popa
in
rcrb
xchg
aam
push
jnp
cmp
cmp
aam
cmp
lret
js
pop
sbb
jae
das
xor
clc
push
dec
mov
xor
xchg
cmpsb
mov
jae
push
ss
sbb
ljmp
mov
and
sub
push
scas
arpl
mov
ljmp
cmc
cmp
lods
loope
cs
mov
addr16
je
fsubs
mov
out
xchg
and
add
fmull
cld
mov
jno
jl
cmc
push
jnp
repz
popf
mov
cld
loope
lea
mov
testb
lcall
mov
test
push
enter
rol
jl
fwait
popa
data16
clc
testl
popf
shl
add
xchg
cli
pop
cmpl
mov
gs
xchg
fstpl
push
call
inc
push
or
inc
dec
mov
add
jnp
cli
cwtl
xor
popa
out
test
stos
adc
xchg
test
cwtl
js
popf
fcmovnbe
mov
push
icebp
inc
repz
cmpps
mov
hlt
testl
cltd
in
cs
cli
das
clc
add
lcall
ljmp
ds
cs
adc
sbb
push
xchg
mov
rorl
jne
movsb
cli
cmp
aas
xchg
ror
jle
test
or
test
inc
jne
fwait
aas
xchg
push
inc
inc
sti
decb
scas
cltd
mov
iret
xor
aad
or
add
into
ret
or
and
lret
xchg
hlt
mov
ret
cli
in
xor
xchg
push
dec
cld
pop
std
loope
out
pop
xchg
in
xchg
xchg
pushf
mov
scas
ret
data16
pop
adc
pop
xchg
shll
mov
sub
popf
test
add
fcomi
addr16
mov
mov
jns
xchg
cs
icebp
push
js
adc
jb
dec
dec
sbb
rorl
out
ret
sahf
inc
repnz
xchg
scas
fdivl
repnz
insb
mov
aad
das
jle
mov
sbbl
out
or
jle
pop
ss
xchg
pop
sub
adc
lods
inc
js
sub
in
mov
jae
and
ds
inc
ss
sbb
jbe
mov
or
sbb
lods
pushf
mov
or
xorl
push
jbe
insl
movsb
add
xchg
loope
mov
icebp
mov
jo
nop
cmp
push
adcb
add
jle
jae
mov
jno
cmp
mov
daa
bound
ljmp
or
push
cs
mulb
mov
jle
int3
stc
mov
arpl
mov
ret
mov
clc
push
in
mov
enter
jae
mov
mov
cmp
repnz
mov
ror
mov
mov
sbb
in
out
pop
jmp
stos
loop
push
jo
push
test
add
inc
shll
lea
scas
jp
aas
lods
pop
test
jecxz
or
add
pop
in
mov
xchg
shrb
xchg
out
jbe
cmp
and
rcrb
fmulp
cli
xchg
pop
popf
cmp
std
add
lock
push
xor
leave
pusha
and
pop
sti
push
sbb
repz
mov
push
icebp
outsl
jns
shrl
jne
push
popl
aad
xchg
or
pusha
add
jg
mov
divl
scas
xor
inc
xor
daa
insb
into
insl
or
les
out
sub
jae
fldl
jecxz
insb
leave
sub
sub
repz
scas
push
mov
sti
mov
cs
lcall
push
mov
or
dec
test
push
push
lods
mov
mov
xor
lcall
xor
mov
ja
cmpsl
push
test
lret
push
fists
jecxz
mov
mov
mov
cltd
in
outsb
mov
popf
test
mov
mov
dec
ss
mov
inc
hlt
jno
js
loope
call
xor
pop
dec
pop
jle
or
cmp
cmp
push
outsb
pop
mov
push
icebp
loop
jl
int3
xor
clc
inc
inc
sub
stc
mov
imul
js
rol
mov
adc
push
mov
idivb
clc
push
mov
mov
inc
dec
outsl
fsubl
pop
cmc
js
xlat
cmp
xchg
jns
jle
gs
sbb
mov
ret
or
push
aaa
test
pop
stos
sbb
mov
popf
push
pop
mov
loope
sub
lods
add
pop
cwtl
jecxz
push
push
iret
pop
decb
lock
jle
xlat
cmp
ss
adc
in
xchg
ss
ljmp
cwtl
cmp
fcompl
loope
popf
xchg
test
push
sub
fiadds
adc
insl
cmp
lahf
fisttpll
mov
shld
fxch
push
lcall
leave
mov
add
pop
stos
stc
push
adc
dec
sahf
es
adc
aam
call
pop
es
bound
push
push
test
shll
mov
xchg
xchg
jbe
dec
pop
ljmp
push
arpl
mov
push
dec
inc
cmp
ffreep
sub
adc
in
add
movsl
jecxz
push
dec
mov
mov
outsl
xchg
inc
xchg
scas
pop
add
fcoml
je
and
ds
pop
adc
mov
imul
sarl
jg
and
cmc
in
es
push
jecxz
cmpsb
ficoml
mov
xor
jbe
jle
jecxz
pop
sub
mov
jle
lret
add
out
mov
or
mov
mov
pop
aad
mov
and
daa
fldcw
mov
sub
and
mov
maxps
lret
fimuls
inc
mov
sbb
jg
sub
shll
out
xor
pop
ljmp
stc
fisttps
pusha
mov
and
adc
sbb
inc
lea
adc
test
addr16
jge
loopne
fildll
frstor
push
test
push
push
sahf
dec
mov
sub
ljmp
push
sub
cmpsb
aad
in
jle
inc
cli
jge
xchg
popa
in
adc
cmc
cwtl
lds
aaa
jmp
js
jns
roll
inc
sbb
cs
nop
ret
jns
pop
stc
mov
inc
stos
cs
out
or
jns
pop
fdivp
mov
push
cmp
dec
mov
cwtl
mov
push
lods
test
sub
mov
pop
negb
ffreep
pop
and
cmp
and
cmp
rcll
inc
lcall
sbb
cltd
lods
loop
sbb
cmp
adc
andl
mov
jp
xchg
mov
mov
shlb
in
add
repnz
das
sbb
hlt
push
push
jne
int
mov
lret
imul
sti
lds
popf
push
jbe
sub
insb
push
add
aad
push
in
out
add
je
jne
fldt
sub
xchg
jmp
mov
dec
gs
cmp
fstpt
push
mov
std
stos
and
sbb
shrb
rcrb
and
mov
adc
jle
loope
test
add
mov
decl
sub
and
stos
insb
cmp
xor
shr
sub
stc
imul
idivl
loop
cs
aad
dec
pop
mov
scas
pop
xlat
mov
xchg
imul
fimuls
inc
push
pop
jbe
in
pop
fbld
inc
xchg
inc
cmp
xchg
mov
xor
mov
mov
inc
add
test
cmpl
or
mov
addr16
out
ljmp
xlat
push
push
push
inc
movsb
cmpsl
lcall
outsb
jge
mov
add
jecxz
mov
mov
stos
addl
push
dec
inc
dec
mov
scas
add
inc
cli
aaa
movsb
fbld
jg
mov
jg
push
filds
aas
sub
fisubs
lret
sbb
pop
ficompl
mov
maskmovq
mull
stos
adc
jae
loope
sub
cmpsl
hlt
dec
xor
ret
popf
mov
adcb
decb
lds
xor
push
add
out
mov
lds
mov
mov
in
sbb
adc
adc
lock
sarb
dec
add
xor
push
insb
and
inc
aad
and
das
hlt
mov
outsl
jmp
ja
push
xorb
adc
sahf
bound
pop
push
xor
call
aaa
cmp
inc
and
cmp
push
lods
cltd
add
hlt
cmc
outsb
and
sub
xchg
lcall
sbb
mov
std
sbb
int3
lea
rcrb
mov
out
mov
jno
cmpsl
jb
lret
or
mov
sbb
push
and
cmp
out
pushf
xor
mov
inc
sahf
push
inc
pusha
call
int3
dec
in
mov
aaa
mov
outsb
mov
cmp
fwait
psrlw
adc
mov
mov
les
push
fdivs
lods
pop
push
mov
jno
testb
inc
adc
es
pop
ret
mov
cmp
stc
mov
sub
cltd
inc
adc
lds
push
sahf
dec
mov
cmpsl
push
outsl
es
addr16
mov
ffree
cmc
or
ds
inc
scas
cs
pop
mov
add
xchg
in
sub
sub
pop
ret
or
dec
pushl
push
mov
mov
dec
repz
push
add
lcall
jnp
ret
pop
and
incl
popf
fldt
mov
dec
mov
cmc
lods
into
lods
fiaddl
xchg
or
adc
jl
mov
sub
pop
mov
mov
adc
bound
loope
jb
xor
int
adc
or
in
cli
ret
icebp
ret
or
adc
arpl
vcvtdq2pd
lcall
sti
mov
pop
addb
mov
sub
mov
repnz
dec
mov
pop
mov
push
xor
sahf
cmp
jge
outsb
sub
imul
enter
lret
lret
lods
cmp
lds
cmc
nop
inc
mov
in
pop
sbb
insb
cmp
stc
xchg
das
ss
sbb
ds
mov
insl
xchg
push
fnstsw
jae
mov
pop
sub
mov
pop
jge
aaa
jg
outsl
mov
lret
int3
test
loop
out
test
imul
or
popf
ds
push
lds
lods
add
repz
sbb
movsl
aam
pop
jmp
cmp
lret
shll
adc
mov
add
lahf
addr16
pop
dec
aam
popf
mov
xchg
pop
xor
stos
adc
sub
in
ss
out
dec
les
push
pushl
dec
scas
mov
xchg
dec
loope
orb
shlb
subl
or
jmp
stos
xor
outsl
cmp
mov
mov
aaa
into
mov
push
mov
and
vdivsd
fists
repnz
ljmp
mov
ret
stos
sub
jecxz
mov
push
divb
mov
push
lcall
icebp
call
push
xchg
adc
cs
pop
xchg
push
stos
ret
shrl
fdivp
mov
out
fistpl
push
loop
jne
cmp
mov
lahf
test
imul
jmp
incl
adc
dec
push
stos
push
lock
adc
je
stos
shl
push
repnz
push
test
data16
jg
stos
out
cmp
aam
cltd
shlb
xor
jno
and
jmp
mov
jb
and
dec
aam
dec
mov
pop
loop
inc
pop
rolb
jge
sbb
and
daa
lock
mov
js
out
out
arpl
dec
pause
add
add
and
int
mov
cmp
in
mov
and
mov
lret
das
js
mov
cmp
nop
sbb
inc
jmp
or
fsubrs
lds
adc
push
dec
lcall
pop
nop
pop
js
push
leave
cwtl
xor
push
push
dec
and
adc
fwait
mov
cmp
xor
dec
lret
cwtl
adc
xor
sbb
scas
hlt
in
mov
sarl
jmp
sbb
dec
sbbb
mov
push
mov
test
jl
xlat
mov
push
iret
out
mov
jbe
cmpsl
add
jb
mov
ret
jmp
cli
push
xor
mov
sahf
neg
mov
adc
ljmp
mov
aad
jns
adc
in
dec
dec
in
cmp
repz
inc
push
dec
jb
sbb
push
movsb
sar
loope
int
das
and
int3
cmpsb
cld
scas
mov
fmuls
jmp
call
mov
push
mov
rcr
pop
sub
loopne
cltd
add
jge
ja
push
mov
jg
flds
mov
aas
enter
sbbb
and
lods
lret
adc
sbb
fs
bound
clc
lods
or
xor
aaa
mov
mov
pusha
xchg
popf
lods
and
mov
outsb
lret
nop
jp
out
pop
add
mov
ljmp
pop
sti
xchg
pop
adc
lret
imul
fidivrs
into
push
pop
sub
mov
and
xchg
sub
xchg
aam
adc
gs
cmp
mov
ret
jle
xchg
call
popa
mov
shll
sub
cltd
mov
sub
popf
imul
fisubrl
orb
push
cmp
adc
out
je
add
inc
cmpsb
icebp
adc
xor
or
stc
std
sti
push
roll
mov
inc
jecxz
dec
pusha
test
and
or
insb
dec
adc
sub
imul
sarl
sub
jb
inc
sbb
pop
xchg
or
sub
leave
push
arpl
mov
lea
out
mov
lods
aas
mov
vcvttpd2dq
lret
inc
mov
insl
jmp
jb
arpl
arpl
loopne
notl
adc
leave
push
notb
jp
inc
add
inc
loop
outsb
xor
xchg
sahf
pop
xlat
fisttpl
cld
jle
mov
outsl
and
xor
push
add
jne
inc
in
mov
sub
and
popa
xchg
pop
out
enter
push
sub
jg
ljmp
or
push
vsubsd
xor
lret
push
push
es
jns
repz
bound
ja
dec
sbb
and
in
jmp
push
or
cmp
shrl
imul
cli
lods
xlat
adc
fbld
dec
jl
insb
mov
cmp
push
jmp
xchg
xchg
add
pop
lret
jne
pop
xor
adc
out
cmpsl
pop
dec
sbb
jp
xchg
jo
xchg
xchg
fists
push
dec
out
decb
mov
dec
pop
jecxz
add
dec
cmp
xchg
xchg
sub
add
icebp
lcall
cwtl
adc
leave
pop
xchg
and
pop
loop
dec
xlat
mov
cmp
lds
dec
stos
sub
push
das
inc
or
sbb
movsl
call
inc
outsl
mov
dec
dec
dec
cmc
mov
and
add
loope
mov
pop
ret
xchg
out
add
loopne
outsl
and
test
imul
lcall
inc
test
lock
fildl
adc
test
sbb
fdivrs
push
xor
fdivs
gs
leave
lods
xchg
fs
cmpsl
js
les
loope
or
cmp
js
dec
dec
jno
rep
inc
mov
std
test
jns
movsl
mov
sbb
add
insb
lock
shl
push
into
lods
cmp
push
negb
dec
shll
fadds
and
test
jg
repnz
jg
xchg
sti
push
loope
aaa
jg
cltd
in
test
aam
pop
dec
inc
and
sub
loopne
dec
aaa
sahf
es
punpckhdq
jb
inc
cli
mov
pop
dec
jl
movsl
insb
inc
sub
xor
aam
fwait
aaa
add
lds
xor
outsb
xchg
jmp
or
cmp
loop
xchg
mov
adc
cmp
adc
xor
roll
and
cmp
push
movsb
ljmp
adc
adc
addr16
adc
push
insl
dec
and
sub
pop
test
push
addr16
push
sub
inc
cmpsl
mov
ficoms
jge
outsb
popa
add
push
sarl
push
push
es
sbb
jno
mov
fsts
shll
imul
xchg
fiaddl
mov
js
test
test
adc
hlt
cs
lock
imul
mov
and
insb
test
xchg
push
fbld
xchg
or
push
push
popf
xchg
lahf
push
cld
or
sub
pop
std
sti
dec
jge
xchg
pop
sub
cmp
pusha
push
add
hlt
stos
push
idivl
leave
jns
cmpb
popa
aam
mov
mov
push
imul
ja
stos
sbb
mov
adc
repz
es
iret
lds
ds
shll
outsl
push
rcrl
stc
and
push
rcrb
mov
stc
inc
pop
popa
popa
push
outsl
jmp
dec
mov
test
xor
cmp
sbb
sub
in
scas
jnp
pop
lods
andb
cld
adc
cwtl
in
outsl
sub
xchg
dec
cmpsl
lock
jno
and
or
pushf
imul
jo
dec
xchg
pop
cmp
loope
sub
cmp
stos
orl
cmc
xchg
fmuls
add
jmp
mov
pop
pushl
cld
push
adc
adc
bound
addr16
xor
pop
xchg
push
lret
add
out
imul
and
lock
mov
xlat
pop
adc
fimuls
inc
mov
xor
scas
aas
mov
and
int
lea
in
add
sbb
out
out
push
inc
in
mov
in
xor
scas
aaa
push
arpl
sbb
notl
xchg
push
mov
div
mov
fsubs
std
pop
mov
cmpsb
lret
scas
aaa
jae
sbb
jns
loop
cmpl
loopne
and
jecxz
jmp
out
flds
jns
jmp
repnz
mov
imul
inc
jb
sbb
aaa
inc
and
ret
bound
aam
push
out
jnp
add
aaa
adc
xor
pop
push
mov
xor
xor
es
inc
or
jge
xor
xchg
cmp
andl
fstl
pusha
imul
and
rcl
push
iret
pushf
leave
sbb
jmp
in
and
out
out
adc
arpl
adc
pop
and
scas
jmp
jecxz
xchg
mov
mov
xlat
lods
bound
or
xlat
repz
cmpsl
addr16
add
divl
pop
test
in
pop
dec
dec
shrb
jno
xor
ss
subb
dec
sub
and
cmp
and
inc
jge
sbbb
fucomip
mov
test
dec
xchg
mov
sahf
adc
sub
cld
cmpb
lea
arpl
subb
sub
cmp
insl
insb
add
xchg
and
test
xchg
xor
cmpsb
arpl
adc
pusha
jb
int3
pop
repz
mov
xchg
movsb
inc
or
cmp
call
or
test
es
ds
jne
mov
shlb
shl
xor
lcall
aaa
imul
mov
xor
je
nop
pop
popa
andl
xchg
incl
pop
sahf
dec
mov
pop
fildll
subb
repnz
jmp
ljmp
movsl
mov
cmp
daa
sbb
stos
cmp
mov
int3
dec
mov
popa
mov
gs
sbb
gs
mov
or
dec
std
pop
mov
pushf
icebp
mov
sub
xor
les
sub
lcall
cli
mov
arpl
sub
sbb
divl
lahf
and
and
sub
sarl
cmp
inc
push
sbb
in
dec
mov
cmpsb
popa
push
pop
pop
inc
iret
xchg
and
test
fstl
adc
iret
nop
imul
stos
popa
inc
inc
pusha
in
sub
jg
je
sbb
scas
shrl
push
push
fsubs
aas
fbstp
es
das
inc
xchg
mulb
jge
daa
cmpsl
add
cwtl
mov
jecxz
sbb
movsb
fdivrl
popa
pop
imul
jae
movsl
int3
pop
cwtl
mov
fwait
push
push
pop
jl
push
push
aaa
fs
jl
lret
and
cltd
push
add
dec
pop
loop
xchg
es
and
lcall
lods
testb
mov
out
sub
push
push
std
sbb
mull
cmp
addr16
popf
arpl
jle
loop
repz
int3
cmp
mov
xchg
cmp
pop
cld
xchg
in
jecxz
dec
scas
xor
fldt
nop
dec
jp
aas
xor
sub
add
dec
mov
pop
dec
xchg
je
call
out
dec
jl
in
lcall
fnsave
out
fsubs
nop
mov
outsl
xchg
cld
and
popf
shlb
fdivr
lock
xchg
sub
js
push
pop
fisttpll
push
lahf
xlat
and
jbe
mov
sbb
add
outsb
sub
repnz
cmc
jnp
xchg
dec
mov
pop
fwait
pop
sub
or
in
dec
mov
mov
loop
fwait
mov
adc
nop
lret
adc
xor
aam
and
or
cld
push
jo
xor
jle
test
xor
fdivrs
call
cwtl
leave
shrb
imul
cmp
push
push
lods
dec
sub
mov
incl
add
jp
dec
andb
push
jns
or
jno
scas
jns
js
sbb
loope
orl
push
fwait
xor
cld
fs
mov
std
mov
mov
push
mov
inc
cmp
or
shrb
lcall
or
mov
pop
push
clc
pop
hlt
lods
pop
or
mov
mov
lods
xlat
pop
push
pop
add
hlt
xor
mov
xchg
lcall
inc
lds
imul
lret
xchg
add
pop
js
adc
cwtl
neg
gs
test
sub
xchg
sub
mov
jns
cmpsb
lock
loope
hlt
pop
scas
cwtl
subb
cli
cmp
fmull
fcmovnu
sbb
push
inc
cs
rcrb
js
pop
aaa
and
jnp
adc
mov
pop
call
xchg
or
fildl
repnz
aaa
mov
fstps
pusha
inc
jb
pop
push
push
pop
pop
push
inc
fsubl
pop
xlat
jae
mov
inc
in
dec
dec
cmp
data16
cmpsl
mov
xorb
add
or
mov
cmp
popf
sbb
adc
les
gs
mov
mov
pop
add
jae
inc
push
xor
jne
push
cmp
mov
inc
sbb
dec
lea
mov
fwait
cmp
incb
inc
push
cmc
hlt
sub
rolb
push
sbbb
xchg
ja
adc
cmp
or
sub
movsl
sub
repz
xchg
xlat
xchg
xchg
inc
sarl
std
mov
pop
int3
dec
jno
in
jae
mov
mov
daa
push
push
pop
jecxz
inc
movb
inc
or
push
and
cmc
movsl
icebp
push
mov
stos
aas
sbb
jecxz
mov
sbb
sbb
mov
mov
mov
adc
jle
inc
and
iret
icebp
dec
add
xchg
leave
sbb
dec
jmp
add
inc
lret
fs
mov
push
int3
jge
mov
jg
movl
lret
adc
aaa
sub
notb
adc
dec
cltd
xlat
jge
mov
adc
imul
pop
into
ret
xchg
sysexit
das
ret
int3
ds
jns
cmpsl
pop
dec
aam
filds
mov
adc
arpl
lcall
dec
xor
addr16
xlat
mov
imul
xor
stos
dec
aaa
cmpsb
adc
cld
mov
xor
sbb
pusha
cmp
cmp
mov
shll
push
sbb
mov
sub
rclb
sub
test
leave
cli
adc
inc
ja
ja
ljmp
mov
loopne
xor
xor
addr16
inc
pop
lcall
jp
sti
out
add
pop
std
sub
mov
mov
jb
jmp
push
iret
leave
cld
lret
cmpb
push
jecxz
cmp
scas
pop
add
dec
ljmp
inc
ficompl
ljmp
hlt
sbb
imul
fisubl
cmp
idiv
push
push
cmp
hlt
push
sub
dec
cs
addb
inc
jb
mov
sahf
roll
cmp
enter
pop
pusha
add
loop
cld
mov
shrl
lret
push
jecxz
and
fsubl
pop
jbe
mov
nop
push
jb
ret
addr16
sarl
cld
repnz
sti
lcall
aaa
movsb
mov
mov
jo
fs
pushf
inc
out
xor
dec
sbbl
sbb
fldl
push
arpl
imul
mul
sbb
js
push
inc
in
xchg
xor
test
or
push
mov
xor
les
loope
les
dec
sahf
popf
jae
pushf
mov
stos
incb
pop
jo
ljmp
and
shll
inc
sarb
rclb
cmp
clc
lahf
or
dec
cs
cmp
pop
scas
or
pop
cmp
fisubl
int3
sub
imul
mov
std
dec
ret
sbb
xchg
and
insb
cmp
cmp
sub
lcall
push
stc
out
jns
push
cmc
jae
pushf
cs
add
fldcw
jbe
imul
test
aad
inc
xor
cltd
movsl
cwtl
xchg
shl
lcall
gs
mov
mov
adc
pop
in
lods
fiaddl
lret
sub
xor
cmp
xchg
pop
sub
mov
jnp
icebp
sub
add
inc
lahf
dec
jecxz
pop
mov
jbe
xor
jg
add
mov
mov
push
sub
and
inc
ljmp
test
je
dec
out
leave
out
sbb
sub
pop
jp
in
in
ljmp
mov
xchg
loopne
add
dec
nop
scas
inc
pop
add
and
jo
jecxz
je
or
dec
and
test
stc
stos
xlat
fwait
push
add
mov
jne
dec
inc
jg
js
enter
inc
push
sub
mov
mov
loopne
jp
ret
mov
std
and
dec
inc
bound
cmp
mov
jns
cmpsb
jns
data16
cld
push
mov
xchg
fst
ja
aas
int
sahf
push
add
inc
inc
mov
into
xchg
mov
adc
pop
push
adc
add
push
mov
movsl
sub
pop
lret
mov
fisubrl
pushf
mov
testb
cmc
mov
or
int3
adc
and
pop
js
inc
rclb
sub
inc
mov
movb
arpl
cmpsb
aam
add
sub
aad
xor
jmp
movsb
int
ja
inc
push
add
testb
rclb
pop
pop
rcl
movsb
lahf
insb
aam
mov
lods
jb
push
sub
push
scas
sbb
push
mov
ljmp
mov
shlb
mov
dec
scas
out
push
cwtl
pop
cltd
push
into
data16
push
push
pop
xor
push
mov
int3
ret
int
outsb
shlb
icebp
adc
shll
lock
dec
sar
inc
lret
jnp
clc
dec
and
into
retw
ss
gs
in
fnstsw
push
imul
lock
pop
dec
dec
lret
repz
and
cmc
pop
ret
jl
call
addr16
outsl
xor
loopne
xchg
fimull
rorl
jae
add
adc
mov
popf
into
xor
aam
dec
fdivl
xchg
cmp
jno
out
fists
or
sbb
xchg
outsb
jg
push
stos
int3
mov
hlt
mov
out
cmpsl
fcmovne
jns
push
mov
and
sbb
lret
or
stos
loope
in
xchg
sti
pop
pushf
sub
push
fwait
sub
pusha
push
sbb
xor
fwait
test
pushf
leave
addr16
xor
jnp
mov
test
xor
mov
cmp
movsl
nop
nop
in
pop
jmp
jp
push
daa
or
loopne
jp
shrl
xchg
sub
pop
or
and
sbb
lods
add
bound
dec
in
pop
sub
outsb
jmp
cmp
scas
xor
dec
cli
ds
mov
gs
mov
or
stos
xor
add
cmc
imul
and
ficomps
cmp
or
pop
pop
into
popf
fwait
out
and
xchg
sti
dec
and
sub
xchg
xor
add
outsl
iret
into
or
jnp
or
xchg
movsl
mov
cmp
or
and
mov
addr16
inc
aad
dec
arpl
jne
inc
outsb
les
dec
dec
jne
push
loopne
scas
stos
inc
xchg
minps
out
pop
inc
mov
mov
and
test
dec
rclb
testl
fcomip
loop
xorl
leave
test
push
mov
int3
jae
and
push
scas
cmp
fists
leave
sub
mov
cs
mov
leave
lods
mov
outsb
or
push
orb
inc
insl
lcall
sub
movb
adc
mov
pop
arpl
push
mov
or
jmp
out
imul
mov
shlb
inc
aas
in
mov
or
mov
pop
in
pushf
outsl
cmp
cli
push
mov
fadd
out
xor
in
mov
cmpl
popa
sub
daa
mov
lods
and
mov
pop
and
mov
das
jns
push
mov
fstpt
mov
sbb
jg
out
cmp
cmpb
repz
daa
xorb
loope
shl
mov
xchg
sahf
pop
jns
jno
aaa
enter
insl
sbb
inc
pop
lods
mov
std
je
lret
repnz
fwait
in
fnsave
addr16
cmpsb
mov
and
push
loope
ljmp
imul
mov
lods
stos
jge
jne
pop
pop
cmp
int
and
pusha
lret
mov
vpsubusb
mov
xlat
stc
cmp
adc
cld
xor
sub
notb
push
out
pop
sar
ficoml
test
and
sbb
loopne
cmpsb
imul
push
pop
js
pop
pop
push
mov
mov
ret
mov
shrb
pop
outsl
xor
pop
and
xchg
sub
sbb
push
mov
add
movsb
cmp
popa
in
or
ret
dec
lret
push
push
cli
push
jno
mov
inc
or
pushf
or
mov
dec
mov
sub
outsl
std
xchg
call
fisubs
push
jo
sub
push
add
in
mov
sti
sub
xor
sbb
icebp
out
sbb
mov
mov
cmpsl
cmp
daa
movsb
adc
adcl
shlb
inc
mov
imul
mov
mov
addl
std
movsl
scas
jle
fbstp
pop
filds
push
pop
cmpsb
inc
or
sarl
jae
scas
popf
lea
cmpb
out
xor
cwtl
cwtl
xchg
inc
adc
lods
mov
ss
lret
cmp
jbe
dec
push
add
xchg
lds
inc
js
test
repz
sub
pop
and
add
sti
cmp
test
test
jg
pop
insb
out
ret
pop
data16
popf
push
int
enter
lods
test
push
lds
sub
sub
cmpsb
mov
mov
ret
ss
scas
add
inc
sub
mov
ret
push
adc
pushf
ficoml
pop
fsubrs
movsb
pop
push
push
das
mov
xor
test
bnd
inc
xor
sbb
into
push
loope
pop
pop
std
dec
imulb
jo
inc
jle
push
xchg
cmp
jb
mov
movsl
sti
enter
sub
sub
adc
imul
push
add
ja
dec
mov
das
mov
and
decl
aaa
push
mov
push
movsl
loopne
push
ja
and
xchg
jg
in
sbb
mov
inc
add
mov
rol
je
in
lods
jae
xor
mov
mov
dec
and
push
or
sbb
pop
and
lea
add
add
imull
add
push
shlb
in
mov
into
push
inc
aad
stos
and
cwtl
mov
mov
sbb
cmp
loope
sahf
fadds
lahf
xchg
dec
jns
sub
jb
mov
cmp
rorb
pushf
mov
in
mov
popf
mov
sub
aas
fadds
ljmp
into
xchg
test
dec
cltd
sub
shlb
xchg
xchg
pop
mov
mov
outsb
inc
mov
xchg
mov
sub
mov
xchg
or
cld
jg
repnz
jge
outsl
xchg
push
push
dec
stos
dec
out
sub
or
scas
cmp
insl
xchg
push
push
sahf
adc
fstpt
insl
adc
jge
xchg
out
mov
out
mov
xchg
add
jns
or
xlat
mov
adc
xchg
sbb
cwtl
fs
sahf
clc
sub
jle
call
sbb
std
in
pop
ss
push
imulb
pop
scas
iret
test
out
fwait
push
sbb
xchg
and
add
inc
clc
enter
xchg
mov
insb
push
in
in
push
add
call
stos
jo
mov
out
xchg
mov
in
adc
insb
cmp
add
sbb
insl
cli
push
js
mov
loopne
test
in
pop
imul
or
xlat
fidivrs
xorl
daa
rcrl
std
mov
daa
imul
pop
cwtl
aam
loopne
iret
dec
fcmovb
and
adc
jne
xor
nop
or
pop
fstps
xor
adc
in
les
nop
push
mov
movsl
push
cmp
cltd
repz
lods
jo
fnop
sbb
aaa
repz
fdivs
sti
repnz
leave
aam
mov
loop
movsb
jmp
mov
lods
push
fstpl
fwait
dec
push
pop
mov
sub
andb
mov
ficomps
xor
popa
mov
inc
inc
push
and
push
mov
pop
stc
adc
pop
roll
data16
jo
inc
xchg
imul
lds
sbb
iret
sub
aad
mov
out
out
nop
fwait
mov
xor
ret
cs
enter
out
add
daa
mov
and
test
mov
pop
sbb
stc
push
mov
fwait
repz
cmovno
test
dec
or
fldenv
outsb
mov
xchg
cmp
jp
scas
adc
add
mov
mov
outsb
repnz
nop
popa
sti
aaa
mov
inc
orl
pusha
into
dec
adc
push
popa
dec
int
inc
dec
shlb
adc
scas
dec
push
ficoms
jl
xchg
test
pusha
arpl
mov
cmp
mov
scas
imul
pushf
arpl
rcrb
popa
add
icebp
inc
add
mov
orb
sti
bound
xor
and
ja
rcr
sbb
inc
sub
sub
xchg
cmpsb
pop
and
lods
mov
scas
jecxz
pop
xor
sub
pusha
push
pop
dec
adc
lcall
scas
arpl
push
xchg
fadd
dec
pop
xor
not
sub
insl
rolb
jmp
rcl
add
or
enter
in
adc
fldcw
mov
mov
jg
hlt
dec
lods
jne
out
dec
inc
jnp
out
shl
ret
mov
lock
push
popf
idivb
out
push
pop
push
das
cmp
xbegin
xchg
pop
pop
repnz
scas
ss
lods
mov
ja
loopne
addr16
push
adc
adc
cmp
cmp
pop
sub
inc
and
ds
shl
xchg
enter
or
clc
mov
popa
imul
ret
adc
mov
lods
sbb
fs
sti
pushf
test
add
stos
enter
test
mov
xchg
fsubrs
cmpsb
iret
jno
int
adc
dec
jae
int3
std
in
out
cmpsb
xor
sub
arpl
filds
jmp
mov
in
fcomip
prefetch
sub
sbb
sub
iret
int
mov
add
xchg
mov
iret
xor
lea
push
js
fmul
pop
sub
popa
int
jno
push
lret
mov
push
add
or
jmp
lock
mov
inc
gs
sbb
cltd
xchg
call
addr16
jecxz
mov
not
incb
mov
jl
in
mov
cld
add
push
xor
add
scas
xor
mov
add
xor
out
lcall
inc
adc
movsl
fdivrp
ds
adc
stc
scas
inc
lods
push
adc
or
xor
loop
std
and
ds
xchg
pop
enter
xchg
inc
mov
daa
lret
imul
xadd
push
mov
scas
pop
js
shll
fldt
xor
movsb
mov
xchg
cmpsl
push
mov
mov
rcl
insl
push
js
sub
push
cmp
adc
add
push
sbb
xlat
cmp
in
je
xor
inc
inc
lret
adc
movsb
call
ficoms
mov
mov
stc
fadds
mov
das
test
mov
fs
sub
xlat
sub
mov
testl
adc
push
push
popf
test
cli
push
mov
cmp
test
or
rcrl
lock
lret
adc
das
dec
jl
dec
mov
outsb
sub
aas
push
adc
sti
je
cld
scas
and
popl
push
sub
notl
jmp
js
add
mov
fs
mov
stos
decb
scas
nop
mov
and
dec
lock
fwait
test
int3
xlat
fistps
out
mov
in
or
sbb
push
mov
andb
and
jmp
imul
mov
jne
cmc
add
jle
mov
or
adc
mov
arpl
ret
cmpsl
mov
and
and
sbb
xchg
pop
scas
scas
lret
roll
imul
jl
or
sbb
lret
movsb
repz
jle
inc
jmp
data16
pushf
sahf
cmp
pop
arpl
and
mov
pop
add
lea
imul
ret
lret
leave
js
xchg
mov
sahf
sub
outsl
ds
xchg
mov
dec
lahf
inc
add
push
aaa
xchg
test
xor
int3
dec
pop
dec
fdivr
mov
clc
icebp
dec
and
push
flds
and
inc
push
xor
pusha
mov
fstpt
addl
out
pop
orb
xlat
lret
daa
jl
addr16
sub
push
pop
test
adc
sbb
daa
xchg
lcall
cmp
push
fldcw
dec
popf
es
add
in
insl
out
je
xchg
mov
shl
add
int
pusha
in
fmulp
mov
push
in
sub
dec
pushf
fistpl
aas
in
mov
bound
jg
decb
lret
inc
es
mov
hlt
jecxz
pop
sub
into
in
mov
daa
iret
inc
int3
jl
jmp
imul
sbbb
push
push
push
sub
enter
xchg
ret
in
cltd
sahf
mov
xchg
cs
arpl
sbb
out
xchg
xchg
shrl
inc
xor
cmp
clc
or
scas
add
dec
sbb
xlat
mov
push
mov
popf
inc
cmp
pop
or
or
mov
cmp
nop
inc
iret
dec
or
xor
push
cli
inc
popf
mov
std
aad
cmpsb
addr16
mov
inc
fcompl
and
aad
mov
cmp
dec
sarb
or
outsb
pushf
movsb
push
cmpsl
popf
jge
lea
sbb
movsb
dec
mov
add
outsb
ficoms
lcall
jae
insl
mov
les
ja
and
dec
xchg
andl
push
rsqrtps
or
adcl
call
in
mov
into
dec
push
dec
jp
cmpsb
shll
js
fdivs
xchg
test
int3
mov
jl
aas
stc
mov
push
add
push
sub
in
mov
or
sbb
xor
std
and
dec
lahf
pop
imul
jns
adc
adc
mov
incl
pop
push
and
mov
pop
sti
js
lea
in
jmp
xor
and
mov
add
add
xchg
sti
push
fdivrl
mov
sar
call
sahf
je
pop
add
rorl
fbstp
nop
shll
mov
mov
insl
or
sbb
pop
jnp
clc
xlat
jno
ds
rorb
hlt
fisttpll
iret
mov
rorb
cli
sbb
fnstenv
cmpsl
mov
rorb
pushl
pop
mov
and
xchg
hlt
int
mov
or
stos
mov
jo
data16
sbb
jne
mov
cmpsl
adcl
nop
sbb
mov
testl
mov
mov
mov
testl
out
jge
jbe
arpl
fcmove
out
or
fimuls
das
dec
sub
aad
ret
mov
into
push
add
dec
paddsw
out
fwait
dec
lret
pop
jmp
cmpl
xchg
cmp
adcl
std
cmc
mov
jo,pt
mov
jo
nop
loop
sub
push
mov
cmp
xor
mov
loope
fildll
je
test
dec
mov
jbe
outsl
dec
or
fiaddl
push
adc
and
fistpl
icebp
lock
mov
pusha
sbb
pop
jbe
cmp
pop
or
push
jne
inc
popa
mov
cmp
add
iret
sbb
mov
mov
sub
xchg
push
es
aad
enter
inc
ja,pn
dec
into
dec
xlat
push
inc
jno
cmpsb
clc
lret
cmc
in
arpl
lods
sbb
xorb
dec
lock
orl
add
push
test
imul
dec
movsb
std
out
ss
cmp
sbb
shll
test
loopne
pop
imul
loop
inc
gs
in
cmp
inc
nop
xchg
push
in
xchg
leave
iret
aad
aam
lret
push
pop
jno
cmp
inc
loopne
and
add
add
inc
pop
lock
pop
xchg
ja
mov
add
xchg
fisubs
jae
imul
cmpsl
mov
aas
js
fsubr
xchg
aas
inc
fisttpl
dec
push
jmp
shlb
xchg
xor
xchg
dec
xor
jg
int3
cmp
testb
push
mov
loop
jns
cs
ret
and
pusha
mov
into
sbb
lahf
clc
adc
push
mov
add
pop
sub
and
cmp
mov
hlt
test
shr
sub
sub
adc
lods
cli
jbe
add
iret
cmp
inc
fdiv
out
cmpsl
push
push
add
xchg
and
jae
out
xlat
fidivrs
and
mov
mov
cwtl
sbbl
sub
inc
mov
inc
cmpl
out
subb
xchg
outsb
dec
inc
pop
sub
mov
push
xor
mov
movsl
pop
int3
and
imul
movb
sub
pop
fiaddl
mov
sahf
jae,pn
ja
mov
call
addr16
andl
mov
mov
dec
push
mov
cmp
jg
sub
icebp
mov
jecxz
xorl
jecxz
or
add
ret
mov
aaa
inc
dec
fistps
dec
pop
dec
dec
cmpsl
push
dec
push
xchg
dec
popa
shlb
lods
ljmp
jnp
xchg
cmpb
les
cmp
mov
or
fld
in
xor
repnz
fistl
dec
lock
dec
ljmp
fstps
xchg
clc
push
mov
jl
js
mov
insl
mov
sbb
jmp
adc
vmovd
fwait
mov
fwait
cli
arpl
xchg
mov
jb
pushf
and
sbb
testb
cmp
hlt
inc
adc
jl
sbb
add
mov
add
mov
into
test
data16
jns
xor
lret
pop
sbb
es
mov
setl
loope
dec
cmp
int
sub
adc
movsb
test
cmp
adc
mov
aas
dec
inc
rcll
push
xor
xor
outsb
mov
mov
sbb
out
mov
add
out
push
mov
mov
sub
jmp
ret
mov
pushl
nop
shlb
popf
orb
and
pushf
mov
xchg
inc
cmp
and
xor
out
adc
adc
xlat
aam
jnp
mov
pop
xchg
xchg
and
arpl
mov
or
movsb
xor
add
jl
jecxz
push
mov
cmp
subl
lahf
jne
pop
xor
cld
xchg
test
dec
es
insb
add
popa
dec
mov
inc
movsb
rcrb
dec
cld
imul
repnz
push
test
lods
sub
sub
add
nop
mov
cmp
cltd
jb
and
aam
or
rcrl
mov
inc
inc
xorb
iret
leave
lods
jle
jge
clc
jns
clc
mov
push
mov
setnp
cltd
movb
pop
test
sbb
add
icebp
pop
push
mov
add
test
push
push
lahf
stos
cmp
mov
cmp
outsl
push
aaa
sbb
and
call
bound
add
mov
cs
lods
jno
aas
or
fstps
fcoml
jl
imul
jae
or
pop
imul
lea
xor
pop
in
or
jl
or
cmp
or
bound
push
mov
dec
rol
dec
icebp
mov
fs
adc
inc
dec
mov
xchg
push
movsb
lahf
adc
adc
fldt
int
push
leave
adc
jmp
test
adc
jecxz
iret
xor
std
xor
ret
lea
jge
es
or
scas
bound
std
pushf
push
push
mov
mov
ljmp
xor
mov
xorb
addr16
pusha
xchg
lret
xor
sub
push
ja
dec
jne
imul
stc
outsb
test
repz
int
pop
mov
sbb
cmp
es
pop
fdivr
es
or
adcb
jp
loopne
cwtl
mov
inc
push
scas
cld
sub
push
sub
fiadds
mov
lret
hlt
jl
pop
imul
stc
lcall
xchg
in
mov
aaa
pop
dec
pop
push
push
push
arpl
and
mov
cmp
loop
in
rorb
mov
pushf
enter
pop
outsl
outsl
xor
xor
adc
or
je
and
fld
jno
xchg
mov
andl
mov
leave
imul
or
imul
xchg
stos
mov
int
cwtl
dec
or
cwtl
movsl
inc
mov
loopne
add
or
fcompl
imul
inc
pop
insl
cmp
lea
jns
pop
cmp
int3
cmp
mov
xchg
aad
bnd
js
mov
pusha
call
sahf
sub
enter
iret
push
movsl
push
mov
inc
mov
cmp
mov
jecxz
aaa
aaa
dec
clc
stos
test
cmpsl
divb
mov
js
cltd
adc
mov
mov
mov
fidivrl
jb
rcrl
push
push
rcrl
or
mov
mov
pushf
add
jecxz
sahf
pusha
sti
inc
movsl
rcrl
xchg
add
push
dec
jnp
pop
outsb
or
or
bound
mov
jle
mov
xchg
xchg
jl
mov
jns
push
push
repnz
pmovmskb
xor
insb
pop
and
fucomip
xchg
test
enter
pop
inc
xor
mov
out
and
cmc
mov
movsb
das
dec
faddl
sub
js
stos
sbb
rcrl
and
push
int
lret
or
push
pop
lret
test
pand
lret
sti
jmp
mov
jno
outsb
push
mov
rcrb
cli
rclb
inc
notl
call
testl
nop
push
mov
xorb
ljmp
int3
iret
out
cmpsb
or
mov
mov
arpl
loop
jb
cli
fwait
into
pop
push
cmp
fsubrs
movsl
jne
jle
jae
push
jge
and
sahf
xlat
cmc
out
cwtl
sbb
and
pop
mov
push
sub
rcl
fucomip
scas
in
xchg
mov
sti
lock
pop
lret
jg
into
loop
std
stos
push
fstpl
and
push
data16
xchg
pop
xor
notb
lods
loopne
cmp
adc
sahf
fbld
movsl
lcall
lea
push
jns
movsb
add
pop
imul
mov
xchg
push
push
mov
mov
fs
xchg
mov
xchg
cmpsb
add
jl
jp
pop
fwait
mov
inc
gs
xchg
cld
jne
mov
mov
stos
cmp
das
pop
shll
and
adc
sbb
aam
in
dec
std
sbb
addr16
adc
jecxz
adc
enter
add
push
shl
movsb
std
pop
ret
jl
mov
and
and
in
xchg
in
adc
fstps
faddl
add
inc
shlb
dec
popa
inc
mov
dec
aad
fwait
pop
push
rcrl
cmp
je
mov
adc
xchg
cs
and
out
stos
insl
dec
pop
mov
mov
clc
loop
fisubl
cwtl
cs
gs
sub
arpl
add
jle
pop
int
xchg
inc
aaa
mov
cmp
and
mov
and
and
ljmp
jne
mov
sub
aad
inc
subb
jne
loope
fbstp
inc
arpl
iret
stos
push
inc
sbb
cmp
cld
je
arpl
cltd
xchg
jno
xchg
rcr
cmp
lahf
mov
jae
sub
sbb
movsl
scas
cmp
mov
jno
sti
jmp
and
cmp
fcoms
dec
in
xor
pushf
nop
popf
push
in
and
aad
jae
jb
lret
movsb
jmp
mov
cld
repnz
aam
mov
and
pop
std
or
xchg
or
cmpsb
pop
push
and
fdivs
iret
vcvtdq2ps
gs
out
jo
sbb
mov
xor
pop
xchg
mov
rcrl
js
jnp
addr16
cmpsb
rcrl
jno
pop
jo
jns
call
loop
stc
imul
into
cltd
nop
add
shll
mov
adc
pop
add
and
addr16
addr16
xchg
stc
sti
or
inc
divl
or
cs
scas
out
aas
bound
cmp
xchg
xor
mov
addr16
push
xor
push
out
dec
jo
jg
aad
cld
testb
mov
push
in
std
pop
xor
sbb
dec
rorl
sbb
adc
inc
js
add
jg
lahf
or
sarl
out
repnz
ss
jae
sub
mov
sbb
pop
mov
add
push
int
in
rcr
leave
scas
stos
cmp
notl
mov
clc
mov
adc
addb
cmp
mov
xor
jno
repz
in
sub
enter
orl
add
les
dec
add
add
pop
add
lods
ret
push
jbe
sub
addb
stos
mov
dec
inc
test
sbb
pushf
hlt
out
repz
adc
loope
outsb
imull
jg
les
fs
inc
pop
arpl
dec
stos
and
cltd
bound
add
lds
jle
ret
xchg
leave
outsl
fs
cmpsb
or
loop
sub
xor
les
pusha
pop
movb
clc
andb
mov
jo
sub
subl
mov
dec
and
inc
mov
jg
mov
data16
cltd
in
add
xlat
je
negl
pop
jge
xor
adc
enter
cmp
mov
imul
sbb
push
mov
mov
sub
lods
pop
fwait
or
mov
ret
lock
add
out
sub
pushf
aad
fwait
pop
repz
int3
mov
cs
pop
inc
test
loop
lods
pop
jmp
mov
hlt
pop
sbb
mov
or
jae
sti
or
repz
cs
lea
gs
jge
push
mov
and
sbb
repnz
imul
int
add
hlt
xchg
clc
ret
aam
or
pop
or
call
test
orl
or
dec
hlt
cmp
cmc
out
xchg
cli
repnz
inc
jno
xchg
jno
pusha
and
outsl
jb
ja,pn
mov
pop
and
sbb
push
pop
jne
fsubrs
stc
scas
nop
out
push
insb
pusha
mov
sub
or
sbb
and
mov
out
mov
push
dec
push
mov
xor
in
xchg
test
or
xchg
pushf
jmp
orb
lret
js
loopne
mov
add
push
xlat
cwtl
jb
dec
mov
out
adc
dec
cmpsl
dec
mov
cltd
lods
test
decl
pop
adc
in
xchg
ss
sarl
push
inc
xor
mov
xlat
or
clc
mov
insb
jg
mov
daa
cmp
mov
dec
mov
jp
jg
in
rcll
push
gs
jo
mov
xchg
rorb
aas
rorb
pop
add
lahf
mov
inc
or
mov
lret
or
testb
pusha
or
jge
shll
mov
call
fsubl
mov
jmp
aaa
lret
pop
aas
das
jle
int3
dec
jno
out
fmul
add
idivl
mov
fwait
pop
pop
inc
sbb
lea
and
pop
decb
and
insb
jmp
push
mul
aaa
mov
into
sti
and
and
fcmovu
or
fldcw
mov
bsr
mov
das
lret
cmc
movsb
orl
lcall
push
int
insl
push
pop
pop
divl
mov
sub
push
and
add
xor
ja
insb
jecxz
mov
sahf
ficompl
loop
mov
add
cmpsb
push
stos
arpl
int3
inc
add
adcl
mov
xchg
mov
inc
jecxz
imul
xor
jmp
push
stos
mov
mov
dec
and
cmp
or
sub
pop
out
dec
cmpsb
loop
sahf
or
dec
out
and
fsubl
push
or
xor
mov
dec
fidivs
push
orl
sbb
cs
sbb
inc
mov
mull
andl
incl
aad
jno
fbstp
sub
pop
or
and
xlat
mov
leave
mov
xor
movsl
xlat
jbe
inc
mov
jle
leave
shll
push
cltd
add
and
or
movsl
ja
arpl
jbe
mov
lock
scas
idivl
push
fstpt
aaa
int3
ja
jmp
fs
xor
inc
pop
inc
icebp
ret
aad
imul
sub
mov
scas
leave
daa
or
dec
xor
or
mov
ljmp
shrb
mov
inc
stos
out
sti
int
xlat
fisubs
jnp
or
mov
add
sbb
icebp
mov
aad
jne
dec
cltd
adc
mov
mov
movsb
mov
lea
sarb
jnp
dec
repnz
out
mov
push
inc
flds
push
gs
mov
adc
arpl
lods
or
std
popf
jae
or
popf
push
adc
jle
in
dec
pop
movsl
mov
cmp
adc
pop
push
sub
repnz
push
xor
dec
scas
or
ds
inc
imul
sub
cld
rcll
push
push
jae
and
loope
scas
add
bound
sub
jns
push
lahf
imul
dec
stc
dec
in
bound
jb
jmp
mov
sbb
cmp
jno
hlt
add
decb
subl
ret
pop
or
shr
imul
push
mov
aam
loope
das
ja
fisubrs
cmpsb
xchg
and
xchg
jl
push
inc
cmp
or
adc
push
xor
fwait
add
call
daa
add
shrl
popa
leave
aaa
pop
pop
sub
and
mov
test
pop
jp
les
inc
dec
pushf
test
cmpb
loope
shrb
loop
jecxz
inc
jnp
mov
mov
inc
mov
add
and
jne
popl
mov
cld
inc
mov
loopne
jno
cmpl
scas
lret
mov
enter
jae
incl
sti
imul
rorl
and
add
cmp
mov
nop
lock
push
mov
fistps
stc
enter
xchg
hlt
and
inc
nop
sbb
sub
pop
dec
out
xchg
incl
idivl
call
stos
jge
and
sub
dec
push
add
jno
xchg
jbe
add
adc
jns
pop
pushf
adc
idiv
out
mov
mov
xchg
and
jno
jp
cmpsl
adc
pop
dec
retw
xlat
js
das
jne
dec
fimuls
xor
jp
out
fisttpll
and
jle
ds
adc
mov
xor
cmp
jl,pn
leave
jb
mov
out
sub
cmc
loopne
scas
cvttps2pi
dec
mov
pop
loop
push
add
sbb
in
xlat
daa
into
lret
bound
sbb
imul
push
cld
ret
sub
cs
je
call
mov
xchg
and
mov
cmpsb
push
sahf
daa
sub
fwait
xchg
sbb
ja
jge
scas
dec
stos
repz
jge
lds
stc
lret
jno
push
std
sub
xchg
pushf
leave
lock
loope
call
pushf
lahf
inc
scas
lcall
jbe
jne
mov
lods
pop
lock
add
pop
cmpb
shl
arpl
inc
les
les
sbb
or
xchg
and
add
jl
or
out
sub
sub
push
xchg
call
push
cltd
inc
xor
fs
rorb
xchg
fcmovbe
cmp
sub
in
jno
repz
push
sub
pop
lcall
add
ljmp
lret
pusha
out
push
xorl
xchg
hlt
adcb
scas
jb
jle
ljmp
out
or
sbb
fistl
cwtl
negl
mov
dec
adc
sbbl
loopne
adc
mov
push
adc
inc
pushf
and
cmp
mov
sub
push
addr16
nop
js
push
xor
add
fs
sbb
dec
mov
scas
loopne
out
pop
pop
sub
dec
push
xchg
xchg
and
mov
gs
dec
cmp
and
shll
out
push
lock
popf
aas
mov
push
xlat
js
dec
aas
add
scas
rol
aam
loopne
sbb
sub
sbbb
mov
and
push
repz
daa
pop
lds
sbb
cltd
mov
cltd
popf
movsl
mov
movsl
pop
cmp
push
insb
push
adc
dec
sbb
jp
xor
xchg
fstl
and
or
pusha
shll
mov
xchg
scas
cmp
je
ss
mov
dec
orl
inc
cmpsb
adc
orl
xor
icebp
inc
dec
mov
sti
movsb
dec
inc
in
inc
mov
sub
sbb
sbb
sarl
sub
cmpsl
mov
test
out
test
sub
fwait
cli
sub
lock
mov
lret
in
lds
push
lds
sbb
cmp
adc
mov
scas
dec
mov
add
or
ja
scas
xchg
sbb
pop
lock
jg
xchg
sub
aad
aas
decb
cmpsb
pop
adcl
jns
jmp
sub
mov
push
sbb
xor
pop
push
out
iret
xor
push
cmpsb
std
cmp
mov
out
test
push
xlat
popa
fs
cs
insl
and
xchg
and
iret
lock
cli
test
mov
clc
push
shrl
xor
in
sarl
pop
xor
xchg
cld
jbe
xor
imul
push
mov
dec
xchg
inc
xlat
subl
movsb
mov
scas
pop
mov
lds
sbbl
aam
cmp
push
in
lahf
mov
or
sbb
jne
mov
ss
or
mov
mov
int3
cmp
bound
cmpsb
mov
push
jle
jmp
popf
insb
vpmacssdqh
loop
cmpsl
out
add
push
dec
setp
add
mov
mov
add
sub
mov
cmp
cli
sbb
rcrl
inc
sub
repnz
repz
aad
cmp
pop
icebp
pop
sub
test
cmp
fwait
pushf
arpl
lds
subl
es
xchg
scas
sbb
cltd
sqrtps
sub
aas
lock
and
cmp
xchg
lret
jecxz
cld
sbb
or
add
test
xchg
test
jmp
test
and
sbb
mov
arpl
add
lock
jbe
or
sahf
je
jne
xchg
and
cmpsl
jge
add
and
jnp
icebp
enter
mov
push
push
ds
lcall
aam
jmp
aam
dec
push
std
movsb
xchg
fidivrs
fildl
push
pop
sahf
jb
mov
adc
xorb
aaa
mov
adc
dec
les
stos
sub
xor
xchg
in
dec
sbb
jmp
sahf
mov
jo
mov
out
rolb
jge
inc
dec
jg
mov
out
fs
push
cli
xchg
in
xor
adc
cmp
lret
xor
shl
cmp
inc
movsl
pop
mov
jge
cmp
mov
sahf
jnp
pop
add
adc
lds
rolb
mov
test
xchg
std
mov
orb
sub
dec
movsb
pop
jl
loope
addr16
xchg
push
lret
aam
shrb
mov
cmpsl
das
jge
cmp
and
out
pop
pop
pop
aam
mov
mov
jnp
sub
outsl
es
test
or
sub
ret
scas
addr16
mov
subb
mov
xchg
mov
mov
mov
mov
dec
xor
jns
outsb
mov
aas
sti
push
ret
sbbb
mov
pop
insl
jle
or
mov
pop
aaa
mov
mov
insb
cmovae
sbb
popf
push
iret
pop
and
inc
jno
xor
test
xchg
adc
xor
les
sarb
cmpsl
sbb
cmpb
xrelease
cmp
popl
dec
xchg
enter
and
lods
dec
sarl
iret
cli
pop
xor
xchg
sbb
imul
sahf
pop
mov
push
fiaddl
int
mov
pop
idiv
and
daa
cmp
or
push
int
mov
insl
js
jp
lret
lret
fs
popa
mov
mov
cmp
pop
or
mov
push
pop
cli
inc
xorl
sub
pop
mov
jns
call
test
loop
cmc
cmp
mov
adc
repnz
ss
push
mov
dec
add
cmp
lcall
lahf
jl
mov
pop
jl
cmp
pop
and
roll
es
and
dec
mov
in
jmp
cmpsb
in
sbb
xchg
pop
int3
lcall
pushl
cmpsl
mov
loope
adc
adc
adc
fcomps
mov
push
ja
or
int
inc
mov
sarl
cli
xchg
sub
pop
inc
xchg
fcom
stc
mov
cmp
dec
mov
cmp
push
adc
call
sub
mov
mov
subl
stos
pop
mov
xlat
push
add
jbe
xor
mov
insl
adc
repz
cmp
call
cmp
stos
ret
gs
cwtl
xchg
xor
push
stos
mov
add
scas
nop
dec
mov
cmpsb
fwait
mov
rcll
push
mov
dec
test
push
mov
jp
ror
lret
jg
xchg
and
addl
inc
ret
lods
nop
dec
jae
mov
movsl
hlt
arpl
push
and
mov
mov
pop
fcoms
pusha
push
sub
cmp
push
xchg
test
cmp
popl
shll
insb
fwait
dec
mov
movsl
stos
inc
cmc
jp
out
push
xchg
xchg
cmp
or
jge
add
sarl
cli
inc
sub
pop
aaa
inc
xorb
leave
outsl
xchg
mov
std
add
enter
int3
push
scas
dec
adc
pop
popf
adc
sbb
mov
mov
mov
inc
imulb
cltd
ss
hlt
out
bound
aad
add
dec
sub
pop
ficoms
stc
mov
mov
sbb
fbstp
fucomi
inc
sbb
movsb
pop
xor
mov
add
test
ror
test
lcall
js
xchg
mov
pop
push
pop
push
inc
sub
sbb
dec
lods
mov
and
lock
inc
adc
push
dec
dec
inc
movsl
divb
mov
jecxz
pop
sub
mov
insl
add
adc
ret
int
in
nop
neg
add
add
jl
jp
ret
inc
gs
dec
lods
out
hlt
inc
lods
push
push
lds
mov
mov
movhps
and
cmc
adc
out
imul
sbb
aaa
dec
mov
movsb
push
fistl
popa
mov
stos
cltd
jle
int
xor
mov
jnp
mov
dec
call
repnz
sar
imul
xlat
mov
mov
push
jecxz
js
imul
les
sbb
mov
mov
pop
inc
stos
ds
mov
aad
jae
jo
gs
mov
stc
and
ret
cmpsl
dec
fistpl
push
scas
fidivs
xchg
cmp
xorb
sbb
pop
cmp
sub
inc
mov
insl
sbb
lods
mov
cmpsl
and
lahf
mov
outsb
addr16
mov
rclb
push
das
data16
push
sbb
push
sti
inc
popa
adc
mov
adc
es
sub
stos
jbe
outsb
cmp
lods
mov
adc
push
jecxz
inc
pop
insb
mov
add
jnp
mov
jnp
or
je
outsb
lock
xchg
jmp
dec
fnstenv
dec
mov
ds
outsl
adc
jmp
mov
mov
roll
xor
clc
mov
daa
pop
mov
ss
xchg
imul
dec
adc
test
push
xchg
mov
test
es
lods
mov
jo
add
insl
xchg
jecxz
clc
sub
or
mov
push
stc
mov
xchg
mov
adc
mov
in
fmull
jl
cs
sbb
mov
fwait
mov
and
or
add
xchg
ficoms
xchg
jo
jne
stos
jae
sub
ret
mov
out
push
movsl
pop
xor
push
mov
or
or
jae
adc
mov
fbstp
call
lods
jg
xchg
inc
mov
and
fsubs
ds
dec
idivb
add
sub
movsl
lock
push
mov
adc
mov
mov
data16
mov
cli
cmpsb
cld
xchg
lahf
jp
cld
mov
je
sarb
add
sub
cwtl
je
aaa
rcrl
jmp
xor
inc
mov
lods
or
or
jae
sbb
imul
decl
push
imulb
jmp
xor
xor
pop
cmp
cs
jne
or
ret
mov
inc
jb
cmp
inc
mov
rolb
addl
cmpl
scas
mov
inc
mov
iret
adc
and
jge
push
or
daa
cltd
jl
push
mov
jp
loope
scas
or
fisttpl
xor
movsl
notl
in
adc
push
dec
dec
mov
cmp
pop
das
mov
ss
xchg
xor
mov
sub
cmp
mov
jmp
hlt
clc
mov
aam
fdivl
mov
mov
sar
sub
push
fsubs
jecxz
inc
stos
mov
jbe
in
and
adc
int3
negl
dec
jle
cli
xor
ljmp
jo
jns
dec
jge
pop
iret
dec
movsb
mov
mov
das
push
dec
sti
sub
ds
iret
enter
push
jmp
inc
fadds
ss
adc
mov
dec
cwtl
repnz
sub
mov
jp
lea
cld
dec
in
add
mov
add
repz
call
push
fsts
adc
popf
mov
jno
fxtract
out
in
in
popa
jp
inc
xchg
lea
xchg
mov
dec
ret
ss
or
sbb
lods
mov
add
cmp
ja
cltd
movsl
fisttpll
roll
mov
sbbl
sbb
dec
dec
adc
fnsave
jge
sbb
sbb
inc
lcall
imul
mov
mov
push
push
push
or
mov
lahf
dec
dec
repnz
inc
and
idivl
cmp
cwtl
in
lahf
pop
mov
cs
adc
das
mov
jge
cld
xor
add
jnp
xchg
addl
jb
mov
inc
sbb
sti
pushf
nop
js
shl
lods
lds
inc
jge
sub
cmpsl
and
jecxz
xchg
lods
xor
inc
sbb
or
mov
fidivrs
sbb
adc
lcall
sbb
or
aam
outsb
hlt
lea
aam
sub
inc
lods
mov
mov
cmpb
sub
das
lods
or
cli
movsl
or
hlt
sbb
data16
mov
jmp
pushf
xchg
popf
popa
push
mov
mov
je
push
les
popa
fdivs
xchg
jp
iret
cmc
incl
test
mov
out
rcrl
ljmp
sub
jl
sub
hlt
adc
adc
lret
jecxz
mov
shrl
mov
shlb
pop
orb
sbb
or
lods
fidivl
or
jp
mov
ljmp
int3
sti
repz
icebp
jl
imul
sub
mov
shrb
adcl
lcall
jmp
arpl
cld
lods
arpl
int
pop
pushf
ss
outsl
cmp
inc
fildll
add
mov
clc
mov
outsl
and
cmp
cltd
and
mov
or
and
xchg
add
mov
cwtl
aad
rol
int3
enter
xchg
outsb
aaa
aad
xor
addr16
daa
or
inc
rcrl
xchg
rol
inc
mov
and
lods
add
and
popf
and
or
mov
xchg
sub
stos
mov
cmp
outsb
sbb
iret
jno
xchg
cld
incb
cmp
add
push
mov
cld
pop
mov
enter
mov
mov
fcmovbe
pop
jl
pop
cwtl
mov
stos
mov
mov
and
lret
mov
jp
add
jns
jmp
push
test
mov
aam
out
or
cwtl
stos
xor
inc
push
ja
adc
mov
mov
iret
or
nop
cltd
pushf
cmp
cmc
adc
xchg
xor
lea
scas
loope
out
iret
fisubrl
das
push
out
mov
lret
adc
sbb
sub
mov
jns
mov
mov
mov
fucomi
test
insl
iret
into
mov
shlb
xor
sbb
pop
mov
cmp
mov
in
cld
inc
mov
movsb
cltd
dec
sbb
aaa
pop
inc
xchg
icebp
xchg
cmp
pop
sti
mov
daa
xor
movsl
sbb
pop
mov
jb
fildl
or
adc
mov
clc
cmp
xor
xor
lods
js
jno
xor
jae
movb
pop
or
push
sub
lds
cld
push
mov
div
mov
adc
push
cmc
xchg
xchg
out
inc
repnz
lock
imul
iret
inc
ja
jp
mov
jnp
jae
jnp
daa
mov
mov
push
jae
lods
out
and
jno
insl
into
fsubrl
dec
in
movsb
mov
sbb
out
outsl
imul
pusha
sub
push
cmp
sbb
mov
jl
imul
je
rcrl
loop
sub
shlb
mov
shll
fdiv
subb
bnd
xor
movsb
or
in
dec
rcrl
mov
sbb
inc
les
jns
mov
push
mov
dec
cwtl
xchg
and
push
fdivl
aad
orl
or
xor
xchg
mov
movsl
xor
push
adc
cmp
pop
and
imul
mov
mov
out
mov
int
fisttpll
mulb
daa
pop
iret
negb
dec
mov
add
mov
loope
ja
in
stc
repz
pop
add
mov
inc
int3
dec
pusha
mov
dec
imul
xor
sbb
add
test
add
shlb
scas
sub
aad
mov
jb
icebp
pushf
jecxz
xor
insl
and
lea
jbe
fs
insl
popf
dec
movsb
out
mov
inc
hlt
adc
loope
dec
adc
aas
mov
adc
xchg
xchg
cmpsl
test
sub
fsubl
daa
xor
jbe
das
or
lcall
pop
jbe
sarl
insl
xlat
mov
out
adc
je
fidivs
out
loopne
sahf
popa
js
mov
cmp
or
sub
ja
mov
sbb
lds
xchg
imul
sbb
leave
icebp
inc
test
rcll
mov
or
popf
hlt
mov
mov
xor
lods
test
int
enter
jno
mov
cmpsb
jge
pop
adc
mov
xlat
xchg
gs
sub
nop
dec
test
pop
mov
dec
sub
inc
xor
push
mov
and
fnstcw
mov
push
push
mov
mov
lods
xchg
add
push
pop
xor
leave
adc
loope
dec
in
das
dec
inc
push
icebp
loopne
mov
test
inc
cltd
inc
ds
test
inc
ret
jns
mov
add
fidivrl
mov
adc
in
leave
hlt
in
adc
sbb
adc
mov
cld
and
mov
sbb
push
pop
xor
pop
popa
add
lea
into
mov
xchg
lea
cmp
pop
cmc
and
shl
pusha
xor
call
test
sti
jnp
in
dec
adc
sbb
pop
loopne
push
jno
out
and
dec
clc
in
jl
popf
inc
cmp
pop
fwait
divl
sbb
es
and
ficoms
addr16
aad
xchg
fsubs
xor
inc
lret
lea
outsl
pop
push
sub
fs
fnstcw
mov
outsb
dec
aas
idivl
pop
pop
xchg
sti
mov
push
push
insb
xor
dec
xor
and
push
xchg
cmpsb
push
pushf
pop
outsb
ficoml
aad
lahf
movb
bound
lock
int
rcrl
mov
and
pop
les
push
mov
stos
xor
pop
adc
and
popa
dec
test
dec
fcoms
adc
orl
xchg
in
ds
sub
insl
cmpsb
bound
rolb
out
pop
inc
call
adc
insl
lret
dec
adcl
bnd
movsb
in
test
xorb
fiaddl
jge
add
push
adc
js
mov
mov
mov
dec
cmpsb
mov
lahf
cltd
sub
sarl
fisttps
push
xor
push
leave
pushf
inc
mov
mov
stos
xor
adc
push
test
mov
std
sbb
lds
inc
xor
bound
jo
pop
mov
jge
mov
movsb
in
mov
dec
xor
xor
pop
das
sub
or
jne
pop
stos
lret
mov
sbb
push
sub
mov
lock
dec
cmpsl
nop
sub
sbb
mov
lods
ss
std
mov
mov
push
dec
push
cltd
fdivs
mov
jge
inc
sub
cmpsl
xor
repnz
cld
aam
push
add
or
xchg
bound
mov
test
cmc
sbb
and
xchg
fwait
mov
mov
stos
adc
add
mov
test
mov
sub
dec
pop
xor
loope
jb
xrelease
cmpsl
pop
pop
aaa
pushf
outsb
aas
jge
add
sbb
mov
ds
outsb
insb
sub
and
cmp
adc
cmp
subb
movsb
mov
sbb
adc
rorb
clc
mov
adc
cmp
mov
add
subb
clc
out
push
pop
jne
fsts
dec
hlt
movsb
add
xchg
bound
call
outsl
pop
pop
mov
and
iret
scas
out
out
mov
out
outsl
dec
cmpsl
mov
pop
push
or
out
xchg
arpl
into
call
movsb
test
push
es
and
push
mov
pop
ljmp
push
inc
dec
shlb
push
in
insl
mov
xchg
scas
mov
or
add
and
mov
nopl
je
lret
sbb
pop
mov
mov
push
pop
andl
jns
jmp
js
addr16
dec
mov
lds
jno
fldl
sbb
int3
jle
push
ljmp
xor
adc
ja
hlt
popf
push
lahf
aad
adc
lret
inc
es
fcmovnu
inc
pop
lea
sbb
aas
add
ret
mov
mov
aas
inc
clc
lcall
das
loop
popa
mov
push
iret
lds
xor
push
xor
test
scas
shr
cmpsl
nop
cli
inc
out
sub
pusha
imul
or
gs
fbstp
sub
inc
andb
mov
or
fildll
or
out
xchg
mov
out
or
jmp
pop
xchg
push
sub
gs
inc
movl
xchg
notl
xlat
lods
fs
jp
daa
jge
fists
mov
sub
cmpb
mov
ret
int3
rorl
je
jae
andl
dec
daa
scas
ror
pop
or
or
sub
call
sbb
pop
push
in
cmp
leave
jb
sub
lods
push
mov
fimuls
push
mov
pop
call
out
decb
jno
test
fwait
outsl
xchg
cmp
cmovg
aad
ret
sbb
sbb
loop
ljmp
sub
cmpsl
and
mov
push
adc
dec
pop
push
pop
sub
jbe
add
cmp
add
jg
sub
push
jns
mov
int3
les
xor
pop
and
mov
into
fcoms
test
inc
and
jnp
push
xchg
dec
aas
sub
dec
sti
outsb
aaa
jle
insb
dec
inc
lret
cmp
sub
lea
mov
xor
cmp
jns
ja
fs
mov
pop
sbb
mov
dec
int3
clc
daa
cmp
inc
mov
mov
ds
sub
mov
in
and
adc
pop
or
cmp
jbe
and
imul
dec
lds
push
rcrl
ficoml
mov
push
sbb
push
push
mov
jle
lcall
push
sub
pop
inc
adc
addr16
mov
and
data16
push
sub
in
cmc
sbb
cli
ret
jge
mov
cs
jle
lods
cmpsl
popf
fcompl
pop
push
aad
push
pop
stos
pop
push
in
daa
push
cld
jbe,pt
sbbl
loop
xchg
scas
sub
cmc
dec
lock
or
sub
mov
out
mov
rolb
sub
jo
mov
push
mov
out
les
pop
pushf
cmp
in
fldcw
scas
sahf
in
faddl
sub
mov
call
push
into
out
lcall
inc
mov
lea
and
or
jbe
push
stos
bound
mov
lret
sbb
sahf
sar
add
loopne
stc
test
push
xchg
sub
addr16
adc
inc
mov
outsl
cmc
into
ficompl
sbb
and
inc
lcall
insb
fildll
int3
jle
push
in
stos
gs
ljmp
stos
lss
mov
adcb
jbe
fwait
or
cmpsb
or
adc
or
loopne
adc
out
and
sbbl
mov
pop
sar
daa
mov
mov
imul
inc
pop
dec
xchg
pop
push
nop
xlat
insl
dec
xchg
shr
jae
push
int3
mov
sub
push
inc
and
es
jmp
lods
imul
out
loope
mov
stos
scas
push
pop
sar
or
inc
call
sbb
lahf
mov
dec
es
sbb
fidivrs
jbe
add
sahf
aas
addl
or
into
pop
inc
shlb
push
fcompl
in
xchg
lods
lods
mov
pop
push
pop
setl
fcmovnu
jecxz
movsb
jecxz
int3
lock
push
cmpsb
icebp
lcall
ss
adc
cmp
sti
out
cmp
les
insb
lds
pop
clc
add
iret
add
sbb
dec
aas
adc
jle
jne
xchg
jno
or
or
or
mov
out
push
bound
jmp
pop
pop
lcall
sub
mov
daa
hlt
mov
push
and
pop
repnz
xchg
mov
pop
repnz
mov
xor
jno
jl
fmuls
js
fldcw
cwtl
mov
push
loop
test
xchg
test
mov
sbb
stos
js
jl
xchg
nop
mov
outsb
sub
dec
les
or
imul
dec
je
stos
iret
iret
ljmp
mov
push
sbb
adc
insb
les
jne
arpl
fsin
push
mov
cmp
aaa
rcll
bnd
ds
fstl
inc
inc
and
dec
add
mov
fstps
xchg
repnz
adc
jmp
sub
cmp
insb
add
daa
popf
jnp
shrb
jne
dec
pusha
dec
cmp
push
mov
xchg
shr
icebp
or
sahf
test
push
dec
js
xchg
movsb
fucomip
xor
movsl
imul
lret
sub
pop
mov
fldcw
pop
imul
jb
gs
test
fisubl
sbb
or
inc
cmpsb
xchg
sub
jo
nop
push
pop
frstor
dec
xor
add
test
fstl
push
inc
sub
sbb
pop
mov
push
sub
adc
in
sub
movsl
adc
inc
in
ja
jbe
jmp
sub
fimull
push
cmpsl
in
jmp
mov
inc
bound
mov
test
mov
sahf
les
mov
shlb
ja
repz
shrl
pop
testl
or
inc
imul
jle
and
cwtl
or
add
cmp
outsb
pop
pushf
add
mov
jne
push
lds
adc
fs
das
call
add
xor
aaa
and
rcrl
mov
push
mov
sbb
jl
subl
cmpsb
mov
mov
jno
inc
les
cmp
imulb
fildll
mov
jmp
cmp
std
inc
mov
mov
dec
or
mov
dec
call
mov
mov
xchg
out
and
jecxz
lahf
mov
pop
push
insl
lret
mov
fmul
ds
pop
xchg
call
jns
jg
das
or
ljmp
adc
and
repnz
std
push
shlb
fists
add
pop
pop
xor
and
jmp
pop
das
jg
sub
lret
lods
mov
cmpsl
aaa
int
test
fcmovb
jge
int3
inc
stos
mov
jg
cmp
jne
mov
test
std
in
ficoml
movsb
bound
adc
cmp
leave
dec
movsb
nop
cmp
sti
into
dec
push
testb
lahf
adc
push
xor
int3
clc
mov
mov
pop
pushf
sbb
adcl
xor
scas
aam
cmpsl
insl
dec
adc
aam
mov
inc
pop
or
mov
fadds
push
test
bound
sub
jno
outsl
xchg
scas
sahf
int3
ja
jl
out
imul
sbb
jbe
nop
pop
or
and
movsl
add
pop
sbb
mov
jmp
pushf
mov
fs
pop
mov
gs
xor
xchg
push
push
push
dec
sub
pushl
cmp
aam
or
sub
std
jecxz
fstpl
movsl
cmpsb
push
add
adc
jne
sbbb
mov
xchg
dec
cmp
cmp
int3
pop
mov
dec
xchg
mov
aad
xchg
inc
mov
cmc
pop
jmp
cltd
mov
sahf
or
int3
outsb
push
xor
sub
sbb
enter
lahf
push
test
cli
push
addr16
and
sbb
stc
scas
fcoms
cmpb
mov
or
pop
dec
icebp
jg
xor
jg
loope
lea
pop
scas
lret
xlat
cmpsb
cs
push
aam
mov
bound
orb
clc
sbb
mov
fidivrl
mov
insb
loopne
cmp
data16
jle
mov
jecxz
jl
jb
pusha
xchg
inc
mov
cwtl
loop
imul
sarb
shll
out
addr16
dec
clc
mov
test
out
pop
ret
clc
jle
or
scas
sti
dec
jl
fwait
incb
push
jge
push
rol
sbb
and
cmp
jnp
dec
pop
dec
gs
jb
pop
add
add
sub
je
sbb
andb
leave
mov
dec
cmpsb
adc
xor
push
into
pusha
sub
mov
or
call
jmp
addr16
inc
in
mov
mov
scas
sbb
vpunpckhbw
add
or
xchg
push
scas
adc
fs
test
mov
jae
mov
push
mov
jae
mov
les
adcb
fdivrl
ficoms
lret
xchg
gs
mov
imul
cli
test
sub
mov
dec
sti
adc
sti
subb
stos
mov
aaa
pop
push
jns
sub
mov
scas
mov
out
icebp
xchg
or
mov
fidivs
push
fwait
xor
inc
fisttpll
xchg
daa
pop
loopne
sub
in
mov
xchg
adc
insb
test
pop
in
pop
je
scas
lods
xchg
inc
test
cli
jne
mov
js
mov
jo
fwait
mov
enter
mov
aaa
push
je
push
js
pop
xchg
mov
mul
out
xchg
lds
daa
lods
push
xor
shlb
pop
add
xchg
das
cmp
mov
insl
adc
adcl
lds
mov
fs
or
xor
and
jg
rorl
fwait
or
add
int3
xor
out
inc
sbb
pop
push
inc
add
in
jmp
mov
mov
pop
lret
scas
sub
addl
cmpsl
clc
xchg
pop
ja
outsl
xchg
or
mov
or
sbb
inc
push
or
cmp
and
loop
mov
adcb
xor
jl,pt
out
stos
xchg
mov
push
insb
xchg
lret
or
rcrl
xor
jge
addl
mov
push
mov
insl
inc
cmp
and
push
adc
arpl
mov
addr16
mov
cmp
adc
cwtl
xorb
ljmp
aaa
in
add
sbb
mov
or
popf
and
inc
and
or
stc
dec
xor
lods
jle
mov
sahf
fisubrl
jae
fsubrl
mov
mov
hlt
out
icebp
sub
int3
cltd
jae
shl
sbb
into
jb
out
fimull
inc
shr
xchg
push
jae
pop
cli
or
jb
cld
cwtl
xchg
mov
xchg
adc
leave
adc
cmp
adc
xor
sbb
lret
pusha
mov
ret
movsb
add
pop
fdivrl
iret
int
hlt
outsl
push
sub
scas
and
lock
xchg
test
sbb
pop
dec
call
and
imul
inc
push
sub
adc
adc
sbb
xor
push
jp
xchg
clc
subb
mov
mov
divl
or
mov
push
lahf
cmpsb
sbb
shll
test
push
xor
imull
fs
jg
cmp
mov
mov
je
jmp
inc
jb
push
test
adc
xchg
fdivr
push
popa
dec
or
loop
ret
outsl
inc
push
xor
rcrl
xchg
add
push
shl
add
into
fldenv
lcall
or
and
ds
mov
loop
lret
and
movsb
dec
mov
push
xchg
fisttpll
mov
xchg
jmp
int
ljmp
push
aam
or
repnz
inc
test
mov
inc
inc
sub
mov
mov
ds
repnz
dec
mov
sub
or
push
adc
stc
jmp
inc
pcmpeqw
push
sbb
xor
cli
adc
mov
add
shrb
loopne
xor
and
sub
mov
nop
cmpsb
or
fwait
repnz
add
pushw
push
adc
jg
sarb
in
in
movsl
push
lock
jl
or
push
xchg
stos
dec
adc
dec
cmp
repz
mov
sub
xor
cmp
push
movl
aam
ss
mov
jge
cmp
fcmovne
int3
cmp
jnp
inc
mov
aam
mov
cld
xor
or
dec
push
jnp
mov
xchg
test
xchg
adc
pop
jae
invd
in
inc
cmp
test
push
inc
jae
cwtl
aam
and
jae
int3
mov
fists
mov
mov
ja
bound
mov
sahf
sub
mov
mov
fyl2xp1
inc
inc
pop
mov
lret
mov
xchg
add
rcll
mov
clc
push
cli
out
repnz
stos
notl
les
jbe
les
out
lods
mov
cmpsb
ljmp
and
xor
mov
jmp
jmp
mov
rcl
or
cli
add
cwtl
sub
js
lods
dec
adc
aaa
sbb
pop
adc
enter
xlat
push
scas
sub
jo
push
lock
scas
imulb
sbb
aam
fwait
das
pushf
shlb
mov
jns
and
clc
pop
out
shrl
movsb
fs
mov
xchg
push
aas
jge
outsb
sahf
or
fdivl
es
mov
mov
pop
sub
nop
pop
mov
pop
ret
in
jns
xchg
jmp
insb
mov
fisubrl
out
data16
ljmp
mov
scas
imul
cli
data16
inc
add
push
icebp
push
ret
mov
xor
or
mov
adcl
testb
imul
dec
push
sub
in
nop
lret
dec
mov
xor
stc
js
cmp
cmp
in
xor
and
push
push
int3
push
icebp
out
mov
les
pushf
aaa
jne
mov
arpl
jnp
fwait
cmp
jp
jge
stc
push
out
adc
jp
adc
divl
pop
lds
js
cmpsl
ja
loop
in
imul
test
test
lods
dec
cwtl
xor
clc
mov
aas
test
dec
lods
adc
cmc
popf
insl
sub
es
jmp
out
ret
inc
inc
nop
dec
sbb
jg
pop
add
in
comiss
repz
pop
clc
xor
mov
mov
out
pop
mov
insb
mov
cmp
inc
rcr
mov
push
fldcw
xchg
notl
inc
fldcw
or
xor
ret
push
cmp
pop
out
lret
mov
cmpsb
sahf
push
adc
sahf
adc
cs
rolb
mov
jp
mov
testb
test
int3
scas
pop
add
fbstp
addr16
sar
cmp
aam
dec
scas
jne
mov
in
pop
enter
int
xor
jb
idivl
fsubr
xchg
xor
lods
repz
rcll
mov
dec
shl
cmpsb
arpl
in
bound
cmp
and
cmc
call
add
and
mov
xchg
mov
aad
and
pop
orl
fwait
mov
ja
mov
push
mov
lret
adc
inc
add
xchg
ficomps
sahf
je
mov
scas
pop
adc
and
sahf
sub
push
ss
push
sahf
jae
or
cwtl
xor
pop
inc
hlt
loop
orb
jb
jno
sbb
in
mov
mov
stos
fs
test
and
movsl
sbb
jg
sbb
cli
lahf
aam
into
cld
ljmp
xorl
sbb
inc
loopne
pop
pop
pop
test
iret
sbb
add
add
mov
test
sbb
fwait
stc
jne
aaa
inc
cmp
cmc
push
movsl
inc
es
call
in
or
push
cmp
dec
sbb
sub
push
lahf
sbb
cmpsb
push
cltd
sbb
mov
sbb
rolb
int
shl
cmp
push
mov
xchg
popa
xor
push
add
dec
pop
test
adc
cwtl
inc
push
and
pop
aas
jbe
and
sub
dec
dec
xor
cmp
adc
outsb
test
in
scas
cwtl
push
mov
adc
pop
and
sub
inc
repnz
data16
pop
lds
dec
and
push
outsb
mov
mov
lahf
push
pop
xor
push
and
mov
cwtl
xchg
not
push
sti
call
out
or
outsb
test
jp
ja
pop
outsl
outsl
add
mov
cld
xor
push
sbb
negl
sub
in
sbb
jns
pusha
js
xor
xor
lret
push
xor
mov
mov
aad
fiaddl
mov
je
sub
mov
xchg
jbe
push
cmpsl
sbb
mov
das
adc
jno
in
sbb
or
or
fcompl
aad
pushf
pop
inc
out
nop
movsl
insb
mov
dec
lcall
and
scas
cmc
mov
notb
pop
xchg
xchg
loop
aad
jo
sbb
sbb
mov
pop
xchg
ljmp
cmp
out
jp
cmp
jp
jecxz
ret
cmp
sar
pusha
pop
inc
xchg
mov
pop
ffree
call
jo
add
and
lods
and
jbe
aaa
mov
inc
jb
and
rclb
cmp
lret
ljmp
into
mov
enter
xor
sub
mov
scas
mov
push
and
rcrl
xor
cli
jge
cmp
subb
cmpsb
cli
cmpsb
add
and
mov
scas
cmp
jecxz
or
xchg
aaa
mov
jmp
int
sub
aam
push
cmp
or
dec
jp
or
aas
pop
je
fwait
jp
pop
jno
cmp
xchg
push
dec
cmpsl
js
nop
hlt
popf
pop
stos
jmp
dec
and
fnstcw
push
andl
xor
lods
mov
inc
bound
and
cmpsl
or
xor
lahf
clc
lcall
dec
xchg
loopne
pushf
mov
test
mov
mov
pop
sbb
push
sbb
mov
call
mov
mov
cmp
sbb
jns
rol
rcrb
push
cmp
push
sub
sub
mov
outsl
jecxz
pop
ret
in
inc
fs
nop
pop
leave
jecxz
imull
xor
jmp
and
mov
and
cmp
mov
fidivrl
arpl
inc
and
inc
popf
mov
inc
lret
adc
push
inc
jp
gs
mov
mov
insb
lcall
sbb
dec
jae
scas
test
fwait
add
insl
jge
mov
pop
xor
push
orb
xchg
sub
cmp
int
or
fisttpl
ja
sahf
ljmp
adc
lret
out
jno
inc
lock
push
flds
lret
push
jns
add
das
push
adc
cmp
and
push
out
ret
aas
sub
lock
jns
cli
dec
adc
cwtl
repnz
dec
nop
adc
mov
in
adc
inc
cmpl
shlb
ret
push
imul
or
xor
mov
mov
push
fwait
push
sub
pop
sub
icebp
xor
and
movsb
dec
mov
mov
mov
push
negb
push
js
adc
pop
jle
rol
mov
mov
sarl
loope
aas
jle
loop
push
pop
xor
ret
dec
ja
out
mov
lea
pop
cmp
jmp
adc
jecxz
shlb
jmp
cmpl
mov
xor
orl
cmp
adc
add
xor
mov
mov
xorb
sbb
adc
fsubl
lods
test
push
push
into
adc
cmp
or
ret
rclb
jnp
jnp
not
push
hlt
and
sti
ret
or
cltd
test
or
cmpsl
mov
push
jns
or
rorl
lret
test
aaa
dec
lcall
roll
loope
sbb
lahf
je
cmpsb
faddl
scas
lret
jae
xor
fadds
mov
sahf
sbb
arpl
inc
xchg
push
jecxz
sub
sub
into
popa
jno
mov
or
insb
gs
mov
or
xor
and
jmp
stos
xor
lock
fstpt
lea
add
mov
jnp
leave
pusha
mov
and
pop
jno
xor
dec
std
add
loope
movsl
mov
and
pop
inc
addr16
inc
add
mov
cwtd
andb
xchg
popf
add
sub
inc
mov
dec
in
jmp
fidivl
imul
lods
jno
loop
cmp
cmp
pop
pop
out
jne,pn
ret
dec
xor
adc
xchg
cmp
ljmp
loop
rcr
outsl
cmp
fwait
shrl
out
ficoms
sbb
fs
cmc
xchg
xchg
mov
lcall
ss
rclb
pop
pusha
add
leave
dec
or
sbbl
fnstcw
test
jp
push
mov
jne
pop
adcb
jl
popa
mov
scas
dec
test
call
xchg
push
or
and
ja
sub
popf
xor
lcall
gs
cmp
mov
stos
outsl
mov
push
add
or
dec
dec
sbb
mov
xor
insb
repz
repz
adc
mov
lds
dec
mov
push
ficomps
add
push
ret
pushf
iret
int
out
xchg
les
mov
sub
jnp
into
xor
test
stos
mov
addb
cmp
add
test
das
cmp
push
aam
mov
jmp
gs
cmp
cwtl
test
adc
es
mov
mov
mov
cmp
sti
repz
sbb
loope
jbe
or
cmp
xchg
add
cmp
daa
xchg
xchg
push
pusha
jae
andl
xchg
jp
sub
stc
popf
push
idivb
addr16
icebp
and
mov
testl
dec
dec
clc
jb
mov
es
outsl
adc
movsb
addl
mov
add
xchg
or
and
lods
stc
daa
ret
hlt
xor
xchg
jns
imul
negb
mov
push
ud0
xor
ficoml
sub
in
daa
repnz
push
aad
in
cmpsb
and
pop
jb
test
xor
scas
and
cmp
cmp
lods
sub
xchg
lods
add
xchg
pop
push
data16
outsb
cwtl
mov
aad
les
repz
push
lahf
xchg
daa
fnsave
cld
push
xchg
sahf
shll
loopne
jb
imulb
mov
lret
xchg
dec
scas
xchg
pop
int
push
xchg
or
shl
ret
xchg
nop
push
cld
sbb
movb
xchg
push
xchg
stos
testl
jno
inc
push
aad
mov
insb
cmp
fldt
cmp
dec
pop
mov
in
lcall
push
lds
pop
test
dec
insl
cs
cmp
cltd
inc
arpl
mov
cltd
push
pop
dec
pop
mov
es
and
cmp
lahf
inc
fsts
test
lods
pop
movsb
repz
mov
insb
add
negl
std
sub
sbb
sahf
mov
out
sub
ret
in
jp
lcall
pop
sahf
jmp
xor
stos
jno
pop
sub
mov
or
std
je
pop
xchg
imul
ds
sti
test
xor
stos
dec
fwait
pop
or
add
add
and
scas
xor
inc
add
push
sbb
pop
bound
add
imul
mov
mov
and
sbb
out
test
adc
mov
add
repz
test
insl
mov
cmpsb
mov
test
cmp
cwtl
cld
lds
sbb
xchg
mov
scas
rcl
leave
neg
pop
out
stos
xchg
jns
or
and
sbb
mov
mov
push
push
mov
loopne
pop
aam
lods
loop
call
insb
jg
imul
sub
loopne
dec
nop
adc
sbb
push
pusha
sbb
add
cmp
sbb
fisubs
mov
adc
cmp
mov
jmp
movsl
push
inc
outsb
push
pop
pop
enter
xchg
inc
push
call
mov
adc
popl
jnp
enter
sbb
mov
mull
mov
or
repnz
test
popf
es
fistl
std
cmp
adc
mov
lods
lock
sbb
jl
insb
xor
ret
add
sub
lock
or
repnz
aas
push
dec
add
in
xor
in
gs
mov
adc
sbbl
sub
mov
and
fs
cmpsb
mov
fnsave
cmp
cwtl
mov
cmp
fcoml
inc
xor
push
out
imul
xchg
pop
push
and
movsl
inc
imul
cmpsb
push
stos
pop
shl
int
adcl
out
fwait
mov
xchg
out
cmp
pop
setbe
imul
lods
or
sub
imul
jae
mov
push
adc
mov
mov
push
mov
cltd
dec
mov
pop
lcall
fwait
and
xlat
xor
pop
mov
cmc
int3
or
or
mov
in
cmpsb
and
mov
jmp
push
inc
rolb
fldcw
loop
negb
push
insl
mov
and
into
pop
inc
lahf
jmp
jmp
add
jns
xchg
mulb
out
js
imul
sbb
fisttpll
ds
pusha
ret
scas
inc
cmp
pop
and
pop
xchg
inc
cmp
mov
xlat
jge
lock
mov
mov
js
mov
push
or
je
mov
jp
inc
imul
addl
stos
cmp
fs
mov
fwait
xor
or
scas
xor
jge
cmp
std
cltd
cs
jl
repz
push
xchg
nop
add
mov
and
xchg
or
mov
xchg
fdivr
dec
outsl
xchg
push
xchg
dec
mov
stos
xor
arpl
pop
insl
and
xchg
call
ljmp
je
sti
push
inc
out
sub
mov
jl
cmc
inc
int3
je
outsb
shll
not
daa
jno
dec
pop
mov
outsb
push
and
xor
rclb
mov
and
andl
out
aad
pusha
pop
or
mov
clc
cmp
lret
faddp
and
fst
out
jge
jg
loopne
mov
out
out
int
leave
or
fistpll
inc
sbb
jmp
inc
ss
xor
xor
mov
lock
loop
insb
enter
repnz
scas
movsb
not
lret
pop
dec
popa
rcr
or
cmp
addb
cmp
ds
xchg
cmpsl
repnz
call
xchg
cmp
xor
mov
and
push
push
dec
add
aas
push
lds
lcall
int3
insb
inc
jnp
loope
dec
in
pushf
add
lcall
repz
bound
mov
lods
pop
in
jg
add
and
jl
fldcw
sbb
mov
imul
cli
xchg
dec
test
loope
mov
push
outsl
inc
mull
xchg
jno
bound
or
xchg
sbb
fld
cli
adc
fcoml
push
ss
data16
pop
mov
xlat
mov
iret
inc
pop
or
and
jecxz
inc
adc
cwtl
lods
xchg
dec
cli
sbb
and
inc
das
enter
cltd
pop
cmp
lea
adc
cmp
jg
jmp
mov
mov
jnp
sub
pushf
mov
cld
jge
imul
aam
addr16
nop
filds
and
call
fnstsw
lock
fnstenv
pop
aam
cmp
cmpsb
jb
sbb
fidivrl
notb
pop
lods
pop
or
dec
push
push
ljmp
jmp
out
mov
jne
loope
fsubr
xchg
ljmp
mov
xchg
xchg
push
out
addr16
mov
add
call
jmp
movsb
lods
fidivrl
add
and
mov
inc
adc
lods
push
les
mov
insb
fwait
aam
cmp
jbe
inc
aad
pusha
add
cmp
mov
pop
mov
mov
mov
lods
lret
cs
test
or
ret
in
das
jb
mov
inc
mov
pusha
insl
mov
mov
std
lahf
ret
jmp
xor
fs
fsubs
or
pop
stc
dec
xchg
push
rclb
sbb
push
sbb
push
cmpsl
les
mov
test
rep
or
push
mov
rcrb
repnz
test
loop
rolb
mov
mov
adc
sbb
jg
int
xchg
jnp
mov
sbb
and
cmpsl
fnstcw
or
push
inc
aam
pusha
push
test
aaa
cmp
testl
ret
and
jns
test
ss
push
push
mov
insb
jge
call
fldt
sbb
jnp
sub
adc
rolb
movsb
inc
push
ret
cmc
add
jne
xchg
shrl
arpl
lock
adc
push
dec
imul
and
int
push
push
test
imul
stos
jbe
inc
out
inc
inc
cmp
mov
mov
ss
and
dec
je
adc
xchg
push
int3
pop
subb
pop
test
sub
xchg
cmp
dec
and
and
and
lods
or
mov
and
push
xor
in
enter
inc
push
incb
dec
and
adcb
fidivs
hlt
loope
cmp
pop
sti
cmpsl
pop
xchg
leave
js
add
movsb
cmp
sbb
and
dec
data16
std
push
movb
dec
lcall
negl
xchg
add
push
mov
cmp
ss
xchg
scas
jno
repz
xchg
repnz
das
mov
leave
aad
mov
xchg
inc
cmc
xlat
hlt
das
jb
inc
and
enter
outsl
inc
rorl
push
in
adc
mov
into
cmp
aad
sbb
mov
pop
ja
ror
mov
cmp
lock
cmp
les
push
mov
fs
shll
fnstcw
pushf
loop
or
mov
stc
call
and
cmp
test
mov
mov
aam
jne
out
loope
xchg
mov
mov
xor
sbb
sub
mov
jbe
cmc
scas
stos
dec
adc
dec
sub
test
push
push
mov
inc
sbb
pushf
push
sub
and
mov
add
cmpsl
stos
dec
xor
mov
xchg
xor
ljmp
in
or
shlb
insl
mov
and
lret
insl
std
sahf
fs
int3
ss
mov
out
cmpsb
dec
fcoml
inc
daa
mov
fadd
mov
mov
testl
popa
mov
js
popf
in
jno
mov
cltd
push
mov
push
fildll
push
rorb
stos
loopne
push
mov
xchg
roll
jbe
inc
nop
dec
fcmovne
aam
xchg
in
icebp
add
sbb
sbbb
push
mov
mov
inc
lods
sbb
fwait
sub
cmp
fdivrl
cmpb
lods
xchg
ret
incl
fstpt
mov
ja
hlt
lods
xlat
ret
cmp
cs
cmp
or
or
cmp
dec
cmpsl
mov
jns
mov
xchg
js
cmpsl
movsl
mov
dec
repz
movsb
test
mov
repnz
lock
sub
jge
jne
dec
adc
xor
jmp
mov
aam
add
mov
adc
fsubp
sbbb
das
lds
pop
rclb
jo
test
lods
mov
test
aaa
add
jae
pop
es
fists
and
cmp
out
pop
shufps
jnp
ja
or
test
ret
imul
jae
roll
pop
dec
icebp
decb
ljmp
repz
xchg
xchg
fstpt
mov
mov
sub
mov
stos
mov
shrl
dec
scas
lods
mov
cmp
popa
mov
jns
aam
and
cmp
or
xlat
add
cmp
sub
sti
pop
ret
pop
mov
push
ret
add
inc
mov
lods
lock
jmp
pminsw
jg
xor
mov
xchg
mov
arpl
or
jge
mov
push
popa
iret
jmp
inc
add
repz
jg
jbe
jecxz
xor
add
add
cmp
adc
pop
dec
test
xchg
insl
into
aam
inc
addb
clc
repnz
ja
add
add
imul
mov
mov
sahf
mov
shlb
adc
push
pop
inc
int
cmc
sbb
ljmp
sub
or
stc
pop
or
aad
adc
popa
test
mov
inc
push
pop
push
mov
shlb
dec
push
test
jne
test
sbb
ret
xchg
out
test
sbb
add
daa
imul
push
or
and
pop
xor
ret
ja
fisttps
mov
jns
sarb
jecxz
out
jo
nop
lret
fldt
je
ja
insb
pop
pop
adc
push
jmp
gs
fwait
sarb
int
inc
cmc
add
cmp
dec
adc
xchg
aad
xchg
nop
test
test
leave
bound
inc
pop
dec
aad
inc
imul
outsl
pop
int
test
fmulp
test
inc
call
lock
dec
scas
jge
pop
imulb
or
dec
sti
imul
scas
out
cmp
ljmp
lods
aad
mov
les
movb
rcl
jge
int
out
and
stos
jns
push
ret
divl
xchg
sub
mov
adc
or
push
dec
sbb
movsb
sti
mov
jne
xchg
push
rclb
movups
movsb
pop
adc
lea
lods
cmp
aam
sbb
push
test
push
das
pop
mov
ret
subb
mov
scas
int3
sbb
or
cwtl
nop
mov
or
pusha
cwtl
cmpsb
and
or
and
inc
pop
mov
or
mov
lret
repnz
dec
mov
dec
mov
or
iret
test
jge
xchg
movsl
dec
enter
add
xchg
dec
out
fwait
pusha
inc
sti
fdivrl
mov
shl
cmp
adc
orl
inc
sarl
xchg
in
inc
or
pop
dec
test
popf
adc
xor
shr
xchg
arpl
out
in
xchg
bound
fadds
adc
mov
aam
mov
sbbl
rcl
pop
dec
out
add
lods
scas
sarl
push
jecxz
or
add
je
pop
push
cmpb
fidivs
fwait
xchg
mov
les
mov
mov
mov
xchg
in
mov
scas
inc
mov
imul
loope
jmp
push
xor
insb
pop
inc
xor
add
and
xchg
push
dec
xchg
xchg
jl
pop
out
ja
cmp
push
aam
test
mov
mov
repnz
test
sbb
fsubl
xchg
sub
pop
xor
movsb
adc
mov
and
push
mov
ja
testb
mov
mov
mov
jae
add
rclb
jbe
xlat
dec
add
inc
xor
xor
mov
push
inc
ret
rcl
and
clc
das
nop
xor
sub
outsb
xchg
jle
stc
sbb
lret
mov
jle
add
pop
pop
ss
jb
or
push
aas
inc
mov
jg
repz
loop
dec
out
enter
pop
into
adc
xchg
cld
ret
jl
lock
dec
mov
mov
leave
bound
aas
fnstsw
cmp
shrb
repz
cmpsl
dec
aas
push
inc
imul
cmpsl
adc
aas
pop
shrb
insl
cltd
mov
inc
jo
dec
inc
stos
insb
and
pop
mov
aaa
or
andl
mov
add
mov
fldenv
xchg
mov
jl
rol
movb
lds
das
add
push
ja
cmc
inc
les
xchg
or
adc
in
cmp
popa
jo
jecxz
jns
les
mov
adc
push
shlb
ret
mov
out
test
push
pop
loop
ds
mov
sub
mov
or
call
jl
cmp
ret
int
jle
clc
les
addb
inc
fistpl
scas
mov
outsb
shll
bound
jo
and
or
movsl
cmp
out
dec
push
insb
mov
jg
jmp
dec
lret
pop
add
xchg
dec
or
jmp
jl
mov
sbb
nop
push
popf
hlt
imul
cmp
jae
jmp
sub
call
ficomps
xchg
pop
es
mov
jmp
dec
gs
stc
outsl
dec
add
loope
xor
jno
push
fs
inc
mov
loope
jp
or
hlt
pop
dec
dec
out
shl
fnsave
xchg
fcomps
cli
xorl
sbb
jmp
fwait
xchg
push
jbe
pop
iret
movsb
mov
out
fs
fidivrs
popf
je
pusha
pushaw
dec
insl
adc
inc
shll
add
pushf
mov
pop
push
call
lock
sbb
sbb
mov
insl
mov
sbb
sbb
lcall
cmp
dec
out
xor
pop
je
test
iret
in
cld
lret
enter
sbb
adc
jp
sub
das
icebp
int
es
pop
push
sub
and
inc
mov
lea
xchg
dec
outsb
xchg
std
popa
or
stos
push
mov
jno
rorl
mov
cmp
repnz
jno
imul
mov
xor
cs
sbb
pushf
in
jb
or
cli
xor
scas
lods
inc
ja
in
dec
and
notl
adc
fidivrl
jns
push
shlb
mov
add
sbb
stos
push
push
enter
nop
iret
xor
sti
movsb
push
rcrl
mov
mov
sub
sahf
mov
lcall
movb
js
ds
xchg
xchg
mov
ss
lret
add
cmp
add
lret
sbb
adc
in
shl
in
loopne
bound
xchg
xchg
lret
in
push
outsb
or
pop
and
mov
cmp
adc
sbbl
xlat
push
sbb
inc
xor
dec
in
push
insl
adc
xor
sbb
mov
sti
sub
lcall
pop
xor
sti
lahf
test
cwtl
cmp
mov
mov
repz
jae
and
sub
daa
cmp
inc
orb
xor
rcrl
pop
subl
ret
ds
pop
lahf
lods
sbb
cmpsb
insl
adc
xchg
push
push
test
sub
rclb
cmp
sti
pop
push
leave
ror
pop
int
mov
jbe
call
in
cs
daa
jmp
cmpsl
stos
mov
popf
add
jg
inc
in
enter
icebp
adc
or
rcl
icebp
sbbb
mull
ret
lds
or
xor
aas
adc
and
ss
cmp
loopne
shll
cmp
mov
dec
cmp
sub
int3
hlt
ret
stc
cwtl
lock
cmpsb
mov
jb
lret
in
mov
mov
fsubs
jecxz
loop
adc
das
adc
ss
jl
pushf
arpl
mov
mov
ret
das
test
mov
mov
scas
add
adc
or
push
fadds
mov
cs
mov
cmpsb
orb
sbb
jae
mov
mov
inc
or
arpl
out
pop
mov
mov
fcoml
js
int
fimuls
frndint
pop
xor
pop
inc
pop
cmp
fiadds
inc
and
ljmp
cmp
cmp
dec
nop
fsubrp
pop
dec
cwtl
mov
fistpl
mov
jmp
adc
dec
adc
pop
out
insl
pop
or
add
mov
icebp
mov
dec
xchg
xor
push
je
pop
fisttpll
inc
daa
push
jbe
push
add
and
mov
mov
mov
notb
pushf
mov
imul
xor
cmp
lods
aad
stos
popa
jg
stos
std
psubsw
stos
cltd
fcomip
or
repz
int
lock
lcall
jmp
cmp
loope
repnz
ror
push
xchg
lods
scas
dec
push
push
pop
out
lds
scas
push
mov
negl
sub
sub
jle
dec
inc
mov
pop
int3
xchg
dec
sub
and
mov
inc
rol
nop
scas
hlt
and
jle
fsts
scas
add
insb
outsb
dec
aad
push
jl
mulb
fdivrl
mov
enter
xchg
dec
in
xchg
mov
inc
or
lods
sbb
lds
cmp
or
mov
stos
jp
mov
mov
into
fistpll
ljmp
xchg
sbb
sbb
insl
jl
mov
jle
dec
jo
mov
shr
mov
xchg
fildll
addr16
adc
imul
xor
sbb
push
scas
addr16
push
out
xchg
fsub
mov
pop
sbb
ljmp
lock
xchg
leave
sub
xchg
cmp
sahf
jno
pop
pop
cmp
ljmp
aas
push
aas
mov
mov
mov
inc
fnstenv
pop
push
sub
js
icebp
or
aas
ja
adc
xor
push
aas
ret
sbb
cmp
fdivrs
inc
std
xchg
loopne
imulb
cmp
xchg
lea
push
loope
leave
dec
mov
repz
aad
jnp
bound
int
mov
jbe
dec
out
cmpsl
cwtl
and
in
jmp
xchg
xchg
lret
jmp
cmp
jge
add
lret
jno
decb
out
xchg
mov
out
sub
insb
push
pop
movsb
and
xor
push
mov
and
jnp
push
dec
jge
push
mov
jmp
lds
cmpsb
xchg
and
fwait
sub
mov
fldcw
ja
push
dec
xchg
jg
stos
loope
xchg
fimull
je
pusha
mov
scas
test
adc
das
and
das
xchg
push
cmp
add
fistpl
sbb
fisttps
xchg
and
pop
xlat
jns
dec
cmp
jo
lret
mov
mov
push
icebp
xor
jl
mov
mov
decb
es
ds
data16
add
jns
pop
sbb
pop
and
inc
sbb
arpl
out
aam
cmpsl
out
xor
mov
push
xor
xchg
mov
movsb
push
fldl
data16
aaa
push
sub
mov
xchg
cmpsl
cmp
dec
xchg
std
sbb
mov
mov
or
cltd
adc
lods
jo
push
les
bound
and
jne
jbe
mov
mov
pop
out
in
arpl
xor
cli
push
cmpl
ret
leave
mov
stos
aaa
sub
sbb
lcall
and
add
imul
lea
data16
pop
mov
xlat
and
jbe
inc
sub
pop
mov
cltd
sub
mov
add
or
push
or
mov
and
mov
adcl
sub
dec
ljmp
dec
out
dec
lret
adc
jbe
jno
or
fistpl
jecxz
subl
inc
pop
xchg
lods
aad
scas
ds
sti
xor
jecxz
dec
xchg
in
push
inc
lea
lcall
bound
jmp
dec
xchg
ds
stos
repz
ret
icebp
push
inc
sub
xchg
mov
cmp
lcall
cmpsl
sahf
call
add
arpl
imul
and
push
repnz
cwtl
jne
push
pushf
pop
cmp
sahf
fsubrs
bound
scas
sbb
clc
in
je,pt
pushf
sbb
or
add
jp
cmpsb
mov
dec
fidivs
push
stos
loop
fbstp
dec
pop
sub
mov
loopne
inc
xchg
out
insb
leave
out
gs
lret
dec
rolb
stos
ds
stos
add
stc
shll
dec
sub
scas
repnz
jnp
test
adc
xor
jb
loop
lret
addr16
cmp
adc
les
xlat
in
mov
enter
inc
inc
push
iret
push
xor
cmp
pop
or
imul
inc
lea
ficomps
test
cwtl
add
outsl
lds
imul
jecxz
mov
iret
pop
pop
mov
ljmp
or
pop
scas
ds
sub
jp
ret
cmpb
imul
push
incb
leave
stos
ret
in
imul
add
mov
push
cmp
shr
pop
adc
sub
jne
jl
pop
fidivrs
loope
insb
lret
xorl
mov
pop
shlb
mov
push
dec
inc
insb
scas
jge
aam
test
mov
xchg
sub
adc
stos
add
icebp
xor
arpl
daa
xchg
cmp
scas
bswap
xor
jmp
xchg
lock
sub
mov
sbb
and
into
mov
mov
in
pop
push
cli
mov
cld
mov
jo
jp
mov
sbb
jo
out
arpl
sub
fldcw
inc
mov
out
sahf
cli
jne
cld
cmp
clc
pop
xor
enter
andl
icebp
int
pop
sbb
ds
popa
push
adc
mov
jbe
xor
ret
pop
add
inc
and
inc
push
fcmovne
push
divb
test
shll
push
daa
mov
jmp
mov
sti
mov
ret
inc
sub
dec
push
inc
jge
loope
mov
push
jmp
std
data16
sbb
shr
cltd
icebp
std
xor
in
add
outsb
mov
push
sahf
test
xchg
cmp
mov
push
or
sahf
ss
in
fisttpl
daa
daa
jle
fcmovnbe
inc
cmp
cmp
bound
and
ja
or
fmul
ret
push
jno
loop
mov
rep
insl
inc
das
out
mov
adc
lret
mov
in
mov
inc
ror
dec
inc
adc
nop
jg
sbb
mov
popa
data16
mov
cld
shrl
cli
push
nop
xchg
adc
cs
adc
sub
lock
pop
mov
mov
cmp
int
pop
pop
cmpsl
adc
xchg
ffreep
mov
inc
hlt
dec
cmp
loope
test
aam
sti
push
inc
cwtl
pop
push
lds
or
mov
pusha
add
in
enter
sub
into
fcoms
daa
jp
out
cmp
popa
in
push
add
or
adcl
mov
lcall
pushf
push
sbbb
cli
test
cmpsb
jg
mov
stos
aad
out
xchg
inc
mov
xchg
ds
lock
push
push
sbb
inc
sub
pop
pop
mov
stc
pop
jbe
leave
push
inc
jp
pop
shlb
lods
adc
out
insb
mov
dec
ds
insl
adc
or
push
adc
call
xchg
jnp
movsl
lds
push
das
lods
scas
fistpll
scas
das
nop
mov
xchg
or
cs
stos
cmp
bound
push
ret
add
cmp
out
stos
xor
jle
imul
pop
dec
fidivrl
sarl
sbbl
insl
pop
sbb
sub
xor
pop
dec
jo
popf
xchg
gs
adc
cld
icebp
push
enter
push
in
jge
sbb
inc
call
xchg
cli
xor
mov
xor
sbb
dec
and
xchg
inc
cmpsl
or
sbb
adc
mov
aad
sub
push
mov
mov
imul
dec
mov
stc
aad
rorb
cmpsb
mov
mov
loope
push
sbb
push
out
sub
in
adc
out
mov
fdivp
jl
jle
mov
dec
xor
orl
or
jne
das
inc
stos
mov
lds
mov
jecxz
cmp
sbb
jle
jle
mov
ljmp
out
dec
xchg
sahf
aad
outsb
mov
jne
add
push
lret
mov
xor
fcmovnb
mov
xor
lods
cltd
push
fnstenv
jno
jg
scas
aam
jnp
jp
pop
in
das
loopne
jp
push
cmp
push
sub
sbb
les
jno
test
jb
adc
xchg
jbe
pop
cmpb
inc
fcoml
jb
sbb
mov
cltd
and
lods
adc
sbb
add
mov
jg
nop
je
cld
mov
push
pop
std
in
adc
scas
arpl
sbb
scas
out
test
and
insl
cli
jg
out
cld
js
mov
pushw
jmp
sub
jae
jnp
fcmovnb
push
inc
call
pop
jp
fisubl
jl
or
test
out
lods
lahf
sub
and
mov
jnp
scas
loopne
add
mov
dec
mov
and
add
rolb
out
xor
ss
mov
ret
inc
fs
lods
xor
insb
and
xchg
push
sub
inc
jg
xor
shll
xchg
pop
add
add
testb
aad
sub
jae
mov
mov
popf
or
push
lds
xor
mov
xrelease
outsl
sbb
sbb
xchg
adc
inc
xor
or
jmp
add
xor
dec
dec
insb
int
outsl
add
pop
xchg
es
in
push
fwait
or
imul
test
mov
or
ja
int3
call
pop
insl
and
cld
cmp
sbb
scas
sub
pop
outsb
testl
icebp
stc
je
sti
icebp
dec
sub
push
jbe
mov
sub
pushf
pop
mov
mov
andl
test
aas
mov
mov
and
stos
push
pop
sub
inc
push
bound
cmpsb
int3
loopne
cmp
sti
mov
adc
sbbb
push
add
pop
mov
jno
mov
les
push
xchg
and
cmpsl
mov
mov
cmp
dec
inc
add
cmp
dec
das
sahf
sub
cmp
adc
sti
push
inc
sbb
test
lock
gs
fwait
sub
pop
outsb
jnp
adc
jl
sub
mov
xchg
js
dec
adc
mov
sub
pop
call
mov
push
push
mov
and
pop
outsb
pop
push
add
outsl
adc
push
jp
push
add
xor
cmpsb
inc
sub
cmp
fists
xchg
jg
cwtl
addps
or
mov
xor
leave
lcall
add
push
xor
push
in
cli
xor
mov
jae
adc
stc
aaa
jae
lods
inc
daa
fmul
mov
add
push
add
mov
movsl
or
es
dec
test
mov
and
test
cmp
sarl
fs
hlt
adc
add
mov
lods
lahf
mov
out
sti
add
lock
jle
lock
mov
jo
add
mov
xor
shll
in
xchg
mov
sbb
addr16
mov
xchg
das
aas
and
and
cmc
xchg
outsb
adc
cmp
mov
xor
jo
sbb
xlat
mull
or
jo
repz
or
push
pusha
aad
lcall
mov
es
mov
or
mov
mov
or
fcmovnb
jb
push
fs
mov
loope
cmp
fbstp
pop
das
arpl
pop
dec
test
fiaddl
int3
sub
fs
cli
cwtl
xchg
mov
and
lret
insl
stc
xor
aam
iret
pop
sahf
aad
mov
cmpb
cmc
lahf
sub
adc
mov
dec
adc
movsb
ror
jo
cmpsl
setb
xor
jmp
cmp
lods
xchg
add
add
lret
mov
stos
dec
jp
dec
ret
inc
jno
jae
fs
inc
int
stc
inc
jl
sbb
ds
test
inc
fisttpll
ja
mov
push
ds
shlb
jno
adc
roll
pop
mov
test
and
in
shlb
lahf
sti
add
fsts
subb
imul
and
mov
push
sbb
rcrl
cltd
pop
jno
mov
sub
dec
test
inc
adc
xchg
mov
lea
js
add
into
pushl
push
fisubl
notl
lods
fisttps
jl
dec
lea
xchg
shufps
push
and
xchg
shrb
cld
nop
inc
cmpsb
test
jne
loop
xchg
int3
lahf
int3
and
jg
inc
nop
pop
movb
add
push
push
stos
sub
mov
mov
add
imul
popa
pushf
fs
mov
push
addr16
movsb
sub
mov
addr16
sub
das
popl
pushf
scas
push
pop
clc
fnstenv
xor
xor
cmp
mov
xchg
and
test
aad
xor
cmpsl
setae
call
movsl
mov
ja
loope
mov
and
sbb
aam
ffree
dec
leave
or
fdiv
or
mov
stos
adc
inc
sub
pop
test
mov
ss
mov
enter
div
jl
dec
push
or
mov
in
aam
xor
adc
lods
into
daa
mov
sub
mov
pop
pusha
mov
mov
data16
cltd
orb
cmpsl
les
subb
push
test
stos
mov
iret
mov
negb
icebp
les
andl
pop
and
fsubs
dec
adc
and
bound
cmp
lds
lock
stos
and
mov
and
out
pop
inc
imul
sar
inc
mov
fnclex
mov
push
lret
xor
int3
mov
cmp
pop
adc
mov
shrl
insl
jo
adc
ret
hlt
push
lds
insb
arpl
cmp
mov
jnp
inc
pop
stc
lods
shlb
xor
popa
dec
jo
mov
loopne
scas
arpl
sub
push
pop
aas
or
lods
pop
in
jae
cmp
and
scas
cmpsb
movl
ja
stos
in
fcoms
in
imul
out
add
add
pop
pop
ret
xchg
mov
je
ds
adc
push
fsts
mov
popf
fcomip
mov
mov
out
pop
and
mov
or
stos
add
mov
fdivs
scas
inc
ss
roll
andb
and
mov
xor
pop
enter
push
add
push
and
pop
int
fistpl
cltd
jle,pt
jmp
fistpll
cmp
cmp
cld
mov
mov
in
cmp
mov
cmp
into
jne
out
mov
fs
pop
lret
imul
push
mov
jo
dec
pop
in
mov
lods
in
loope
pop
shl
sub
jb
test
fimull
pop
and
test
inc
push
mov
and
add
add
dec
push
xchg
enter
inc
pop
loope
movsl
clc
mov
fadds
xchg
push
lar
in
test
mov
int
cld
xor
mov
sbb
xchg
cmp
xchg
adc
cmp
cmc
les
es
dec
or
jb,pt
mov
push
cmp
stos
aam
mov
dec
or
lods
push
clc
icebp
xchg
rolb
shrb
or
push
and
dec
in
mov
adc
outsb
dec
fimuls
mov
xchg
cwtl
stos
cmp
lret
cmc
jp
and
subb
enter
jg
add
aas
xchg
push
mov
dec
and
xor
in
jg
jbe
lods
sub
cmp
or
jg
inc
jg
mov
fldenv
xchg
push
outsb
ss
inc
leave
fmuls
xor
xor
sbb
add
adc
popf
xor
iret
mov
adc
xor
xchg
shll
imul
mov
pop
inc
cmp
lods
push
loopne
loop
fwait
mov
scas
test
sbb
push
lock
lahf
push
jo
xchg
outsb
jmp
in
inc
sub
jge
les
std
mov
mov
test
das
push
ds
insl
xchg
xchg
mov
mov
lods
mov
mov
mov
push
sbb
adc
in
fisttpll
bound
stos
call
arpl
sub
lods
mov
inc
add
and
iret
mov
xchg
int
int3
aam
aam
sub
xor
pop
mov
enter
dec
cmp
adc
sbb
sub
shrb
aaa
fs
and
xor
pop
insl
shlb
pop
sahf
cmp
scas
lds
out
rorl
cmp
out
pop
aaa
mov
jbe
dec
gs
dec
ret
xchg
xor
push
repnz
repnz
sbb
pop
insl
lret
rcrl
in
lock
xchg
and
or
out
pop
adc
cli
aad
dec
push
xchg
fdivs
shr
rcrl
add
pop
push
sarb
dec
mov
pushf
mov
rcrb
ljmp
loope
xchg
fidivrs
jg
sbb
and
sub
mov
jns
inc
inc
and
dec
fwait
jae
filds
and
int3
push
dec
loopne
ja
cs
adc
lea
add
xchg
mov
das
jp
shlb
ret
mov
pop
and
push
lods
mov
pop
call
inc
mov
adc
jno
pop
pop
mov
mov
jge
pop
xor
xlat
stos
std
xlat
jecxz
mov
cmp
icebp
adc
inc
es
test
jbe
lock
sahf
cs
rol
adc
mov
stos
call
inc
jb
add
out
fldenv
push
imulb
jo
mov
rorl
loop
lcall
jmp
les
sub
test
xor
adc
adc
ret
jbe
lds
jne
mov
mov
xchg
repnz
lret
sbb
jb
les
mov
les
inc
aas
and
mov
pop
jb
lahf
jno
pop
mov
xchg
imul
jae
jge
daa
repnz
push
notl
popl
sub
pop
aaa
sbb
icebp
fisttpl
stos
adc
mov
int3
or
mov
push
mov
sub
sub
stc
jle
mov
add
sub
lret
hlt
fnstsw
faddl
jne
insl
in
je
arpl
jae
lret
dec
mov
xchg
fsubrs
js
test
push
jb
sub
cmpsl
addr16
sbb
lcall
out
lret
inc
int3
cmpsl
sarb
cli
mov
test
add
or
sub
and
in
imul
rcrl
lcall
scas
adc
ljmp
cwtl
aas
shrl
movsb
adc
mov
xchg
push
gs
imul
pop
adc
inc
sbb
fstps
cld
pop
ja
mov
or
xor
xor
jb
xchg
cmpsb
xchg
movsb
popf
sbb
std
inc
sub
mov
fidivs
testb
sub
orl
cmpsl
cmp
jns,pn
out
push
jmp
cmp
jecxz
testl
mov
cmp
cmc
pop
adc
pop
fisttpl
ljmp
int
or
pop
inc
mov
xchg
mov
clc
inc
mov
jmp
jp
pop
cmpsb
sbb
xchg
and
out
xchg
pop
movl
mov
inc
push
inc
add
push
jge
or
in
push
jp
inc
jbe
aas
mov
push
push
repnz
xchg
xor
mov
enter
inc
cmpb
mov
arpl
ljmp
out
or
add
sbb
inc
mov
xor
lahf
push
icebp
stos
rcr
repnz
es
hlt
push
xor
dec
jo
cli
loop
ficomps
xchg
mov
xchg
cld
test
int
mov
or
xor
nop
ret
scas
mov
fmull
test
cmp
inc
mov
add
shr
pop
sub
cmp
or
pop
jp
push
push
inc
mov
arpl
mov
les
xchg
arpl
cmpsl
jg
or
mov
pusha
in
vmovdqu
fistps
negl
jecxz
mov
xor
adc
into
repnz
das
dec
cmc
lret
setnp
push
push
repz
and
js
pop
mov
mov
push
stos
leave
xlat
adc
mov
fidivl
lret
lcall
cmp
loopne
loopne
xchg
iret
lods
cmpsb
adc
mov
inc
insb
dec
aaa
xor
nop
xor
stc
push
mov
mov
push
out
mov
insb
add
mov
pop
dec
mov
test
mull
add
jnp
xor
cmpsb
pop
outsb
arpl
jmp
adc
fnstcw
sbb
mov
sbb
pop
and
shl
mov
inc
and
add
cld
outsl
mov
add
and
pop
and
xchg
cmp
repz
cmp
jbe
scas
shrl
cmp
pop
xchg
push
mov
xlat
insl
jp
frstor
cmp
dec
sbb
xchg
push
push
adc
mov
sbb
mov
jge
ret
mov
dec
mov
and
test
pop
cmp
scas
mov
xor
mov
add
sbb
arpl
add
into
inc
jl
mov
jmp
pop
subl
sub
mov
xor
hlt
sub
jl
cmp
cmc
add
sahf
aaa
sbb
pop
mov
push
add
in
cs
popa
in
cld
stos
mov
jne
xlat
aad
mov
stos
pop
pop
hlt
stos
lcall
or
xor
xor
dec
sbb
dec
int3
sub
movsl
cmp
into
cmpsl
cmp
jg
cld
cs
lods
jne
sbb
xchg
iret
adc
scas
dec
test
inc
outsb
push
sub
inc
xorl
es
or
iret
stos
iret
cmc
mov
and
push
ja
lret
add
mov
jmp
xchg
orb
enter
jae
into
xor
fisttps
xchg
inc
lods
mov
or
mov
lcall
insl
test
adc
pop
xchg
pop
jb
push
jge
es
jmp
dec
cmp
hlt
jns
inc
cmp
xchg
xor
test
adc
cltd
nop
or
push
loop
cmp
ja
into
je
sbb
inc
pushf
aad
or
inc
ds
negb
arpl
stc
mov
cwtl
adc
pop
pushf
pop
notl
dec
add
cli
out
and
dec
inc
push
jg
std
push
mov
cs
jb
push
inc
je
data16
mov
push
lcall
mov
dec
mov
dec
lds
ja
ret
lcall
pop
pusha
fld1
pushf
jae
pop
pop
enter
xor
or
test
add
push
cmp
xchg
movsl
adc
hlt
out
int
pop
and
mov
adc
or
outsl
dec
inc
fimull
mov
imull
mov
add
cmc
daa
mov
inc
in
int3
jmp
insl
jg
and
pop
jbe
leave
or
dec
pop
faddl
jecxz
loop
mov
jmp
push
sub
push
test
push
stos
mulb
jb
add
cwtl
mov
jecxz
adc
jnp
fldt
adc
add
jnp
jns
loop
pop
jge
ss
jne
pop
cmp
loopne
lahf
sbb
pop
int
inc
xchg
js
cltd
pop
inc
dec
dec
and
mov
fisubl
xor
jo
lahf
push
sbb
mov
xor
aad
ja
rorl
mov
out
jmp
xor
sbb
sbbb
ds
bound
lods
mov
push
imul
push
in
aas
adc
insl
adc
dec
jns
adcl
pop
das
lcall
xchg
jp
push
nop
mov
dec
and
push
jo
pop
rorb
cmc
sub
sbb
out
pop
sbbb
call
dec
in
sbb
test
test
lods
pop
inc
loop
sbb
mov
xchg
push
in
dec
inc
gs
test
fs
push
jb
xchg
stos
popf
sub
jmp
in
and
stos
xor
add
dec
jmp
loopne
jge
pop
test
inc
scas
test
xchg
imul
or
cmpl
lcall
jbe
das
call
cmp
and
inc
jmp
jg
addb
xchg
cs
push
scas
dec
push
cld
sti
mov
cli
cli
adc
push
aaa
pop
and
mov
xchg
outsl
sub
ds
mov
and
movsb
xchg
mov
lods
jnp
subl
jbe
mov
jle
mov
mov
adc
or
add
push
shrb
sbb
repnz
mov
cmpsb
shll
push
cmp
inc
jecxz
xor
push
rcrl
mov
out
daa
jnp
aam
ljmp
adc
fldcw
adc
addl
ja
pop
sub
les
jb
adc
mov
test
sub
or
fwait
push
dec
push
aam
push
test
out
std
xorl
jmp
jb
pop
push
pop
sub
sub
outsb
pusha
and
or
mov
pushf
stos
ret
dec
sti
mov
fists
adc
jnp
jge
int
add
mov
push
outsl
dec
mov
push
add
cmp
fcmovbe
ret
adc
out
jbe
rclb
or
inc
movsl
ss
mov
movsb
sbb
mov
scas
sbb
xor
mov
dec
stos
les
fldenv
jmp
jbe
pop
ja
shrl
mov
es
das
les
outsl
ret
cmp
jae
cmp
dec
paddsb
fidivrs
push
ret
shll
test
rolb
mov
sti
sub
cmp
das
test
pop
imul
addr16
rorb
xor
pushf
lret
insl
bound
aaa
cmp
adc
les
pop
leave
sbb
mov
stos
bound
push
jns
cwtl
sbbl
pusha
loopne
dec
jmp
test
pop
pop
popf
pushl
icebp
stos
pusha
sar
add
lcall
xor
clc
mov
xchg
sbb
cmp
and
xor
imul
jne
lcall
adc
loopne
pop
into
ja
pop
pop
std
sbb
addr16
add
pop
incb
xchg
mov
loop
ffree
jbe
sub
out
adc
cmpsb
cmp
shll
sbb
inc
pop
dec
in
or
outsb
dec
mov
mov
or
subb
leave
hlt
add
bound
and
xchg
rcl
mov
cmp
insl
rolb
icebp
mov
js
in
popa
xor
sub
push
push
mov
mov
scas
std
inc
pop
imul
lcall
push
out
enter
das
lods
pushf
push
inc
lea
jle
jge
xrelease
push
aam
adc
int3
xor
jp
hlt
mov
sahf
push
rorb
stos
ret
scas
movsb
decb
les
dec
jge
test
dec
push
lret
je
mov
dec
or
mov
test
push
mov
adc
jo
mov
cltd
fisttpl
pop
sti
insl
das
adc
leave
outsl
xor
sbb
jnp
std
popf
inc
test
fdivrs
les
mov
xor
add
fisubs
test
cmp
xor
jl
enter
push
jle
shrl
and
adc
add
jge
mov
mov
movsl
mov
fnstsw
dec
inc
add
rcll
popf
andl
fstps
leave
xchg
loope
cmpsb
and
dec
mov
pop
mov
imul
sbb
fisttpl
mov
es
lds
lret
mov
sbbl
pusha
aam
mov
xor
mov
popf
pop
inc
jmp
and
adc
decl
mov
adc
mov
xchg
movsl
xchg
mov
sahf
sbb
mov
dec
xor
cmp
push
lods
lret
cmp
pop
mov
add
mov
adc
pop
inc
cli
sbb
jb
inc
enter
push
inc
xlat
xor
inc
add
nop
fidivl
push
mov
mov
xor
cmp
in
out
cmpsl
and
fldenv
mov
aaa
mov
xor
icebp
test
xchg
outsb
cmp
jl
shl
cmc
ss
pop
out
and
cmc
adc
jmp
aad
test
sbb
cmpsl
insl
add
es
stos
into
xchg
mov
fstpt
iret
sar
testl
mov
sbb
mov
sub
cmpsl
add
lock
dec
data16
les
jo
jo
or
mov
xor
scas
jg
add
and
sbb
jne
out
popa
testl
dec
test
aas
xchg
subb
jno
aaa
dec
mov
sbb
pop
jnp
shll
js
jne
push
cmp
addr16
sarb
cmpsb
ss
sahf
in
dec
dec
jnp
clc
std
nop
ljmp
vpcmov
mov
jns
xchg
daa
pushf
xor
sub
mov
cli
andl
inc
iret
push
jge
jae
cmp
xchg
sbb
jbe
call
mov
ds
mov
jge
mov
add
imul
xor
aas
add
hlt
xor
xor
or
in
inc
ds
lods
xor
or
aas
orl
pop
jl
xor
cmp
into
mov
aam
mov
into
aas
mov
dec
mov
fucomip
push
mov
dec
mov
or
imul
push
mov
and
arpl
vunpcklps
adc
scas
lcall
adc
push
mov
jle
inc
cmpb
sbb
rorl
inc
mov
in
ljmp
cmp
push
orb
dec
adc
jecxz
int3
iret
stc
sbb
inc
xor
xchg
jae
popf
xchg
imul
into
adc
gs
mov
lds
and
pop
icebp
call
add
mov
xlat
push
mov
push
repz
test
mov
daa
push
fidivrl
and
es
adc
stc
xlat
inc
xor
push
hlt
push
and
mov
push
push
and
fdivl
jl
cmp
or
cld
dec
jmp
add
fimuls
inc
nop
hlt
sbb
imul
enter
mov
inc
enter
jae
pop
fisubrl
out
aas
cld
dec
movsb
movsl
lret
adc
xor
jmp
scas
inc
push
rcl
popf
jge
lret
sbb
div
fcmovnu
sbbb
add
jo
fucomp
outsb
sti
popf
mov
cmpsl
dec
and
and
pop
mov
push
shr
xchg
add
pop
insl
rcll
scas
push
mov
clc
or
nop
and
icebp
popa
jle
mov
push
rcll
push
andl
mov
hlt
lea
and
inc
dec
movsb
enter
push
dec
xchg
cmp
cs
ficoml
adc
nop
and
mov
pop
or
loopne
xor
xchg
iret
mov
adc
das
mov
aas
push
insl
add
sbb
xchg
aam
jo
test
pop
xor
fidivs
call
addr16
leave
xchg
mov
cli
mov
aad
fidivrs
dec
mov
jmp
dec
adc
sub
xchg
ret
jbe
cld
sar
mov
sbb
dec
mov
test
push
cmp
pop
lea
shlb
bound
inc
sbb
lcall
hlt
cmc
lods
mov
mov
aas
faddl
movsb
dec
push
pop
loope
mov
mov
mov
jge
jns,pt
inc
xchg
jnp
cmp
sub
movsl
dec
pushf
adc
popa
rcrl
dec
mov
sti
setp
int
adc
pop
xchg
add
cmp
cmp
lea
mov
adc
mov
mov
scas
in
sub
mov
mov
mov
push
inc
push
ss
sbb
jno
stc
mov
and
xor
in
fsubr
lret
mov
in
jo
pop
cmpsl
in
test
sub
outsb
ljmp
cmp
xchg
and
adc
in
leave
pusha
xchg
mov
ret
jo
inc
scas
push
and
mov
ret
mov
inc
or
div
imul
mov
xorl
sbb
out
add
xor
jmp
xlat
push
inc
enter
pushfw
or
loopne
aam
lcall
sub
icebp
rcll
cli
repz
push
stos
stos
out
push
jbe
rorl
cmp
xchg
clc
sarl
lahf
outsb
add
xchg
cmp
push
push
sbb
mov
lcall
sbb
ret
lret
shl
adcl
push
mov
stc
or
shl
sarl
push
sub
adc
pop
aam
push
mov
xchg
inc
sbb
lahf
addb
jns
cmp
imul
jge
and
push
inc
add
mov
sbb
push
jne
int3
jno
in
jbe
mov
sbb
sbb
fdivrl
popfw
mov
and
cmc
insl
or
dec
push
jmp
push
test
out
pop
jge
cltd
push
xor
in
rcrl
fisttpll
jae
popa
push
pop
add
adc
sbb
xor
cmp
ret
in
push
ret
lock
jns
push
or
je
cmp
cmpsl
mov
dec
and
xor
jo
jbe
adc
loope
dec
lds
mov
cmp
push
mov
cltd
fsubl
mov
dec
pop
stos
dec
aam
inc
testl
push
mov
gs
ret
sbb
mov
cmpb
inc
daa
jo
jae
fdiv
pop
xor
cmp
pop
pop
pop
sbb
sahf
dec
es
xchg
ljmp
pop
test
push
rcll
std
insl
and
imul
test
dec
int3
jge
jg
and
sub
and
cld
data16
mov
sub
lods
jge
out
jnp
jbe
xchg
lahf
xchg
add
cmpsb
rorl
jo
out
inc
in
mov
push
pop
lcall
mov
push
mov
into
jns
outsb
ja
xor
mov
mov
fidivl
int3
sub
into
add
js
clc
pop
add
mov
aad
jae
ret
cmpsl
test
mov
mov
cmp
pop
push
test
lahf
cmp
push
or
sbb
adc
xchg
ss
sbb
add
adc
insl
add
jecxz
push
out
lret
jmp
cmc
pop
sub
rclb
add
int3
test
sarl
rcll
pop
add
xchg
clc
push
movsb
sub
or
idivl
pop
mov
mov
inc
cwtl
ret
dec
cli
jno
push
lret
and
mov
or
wbinvd
cli
sub
mov
add
stos
dec
sub
cs
and
inc
and
cmp
hlt
mov
push
inc
pop
stos
stos
and
loope
stc
xchg
or
sbb
jno
pusha
shl
pop
mov
lcall
outsb
ja
mov
cwtl
xchg
andl
sub
das
push
add
mov
add
inc
jb
std
loope
rol
adc
push
sbb
mov
xchg
dec
pusha
xchg
sub
dec
aam
pop
int
sbb
out
sbb
push
xor
fcmove
push
xchg
iret
out
adc
pop
outsb
push
loope
std
int
push
and
sti
jmp
loope
shll
jns
lret
xchg
mov
or
xor
das
insb
loopne
andb
out
jmp
xor
movl
mov
dec
pop
mov
jae
vpsubsb
cmp
pop
mov
sub
cwtl
aas
mov
mov
inc
and
xchg
ffreep
les
push
rolb
pushf
or
pop
pusha
and
mov
popa
pusha
insl
in
jg
pop
and
decb
out
push
xor
daa
les
xchg
test
subl
sub
mov
shlb
push
roll
lea
cmpsl
sub
iret
leave
rolb
aaa
sti
mov
push
add
dec
mov
popa
mov
shl
lcall
sahf
mov
pop
shrl
cmpsl
or
push
imulb
bound
cmp
sub
bound
popl
mov
push
inc
or
xchg
fimuls
test
out
jmp
pop
jae
scas
jmp
jmp
sub
and
adc
ds
fwait
mov
dec
das
xor
rcll
popa
jnp
push
fisttpl
xor
inc
adc
mov
in
cld
inc
fldenv
add
js
jg
mov
add
not
sub
sbb
mov
cwtl
lahf
dec
jecxz
popf
rorl
repz
outsl
push
xchg
lods
mov
jnp
pushf
fnstenv
cmc
sti
fucomi
lret
adc
push
xchg
mov
scas
cmp
mov
ljmp
shrl
sub
xchg
add
or
es
xchg
jl
enter
pop
in
data16
mov
out
popf
mov
dec
repz
jg
popa
and
pop
mov
cs
orl
xor
or
and
aam
inc
and
test
repz
mov
add
mov
push
rcrl
pusha
clc
jns
out
cmp
imul
mov
das
dec
call
adc
mov
inc
outsl
jbe
cmp
call
inc
xchg
sbb
or
shl
lea
aas
repnz
bound
rcl
movl
push
xchg
pop
cmc
inc
push
nop
pop
in
scas
insl
ss
cmp
or
in
cmp
cmp
jbe
andl
adc
insb
stos
cmp
test
arpl
mov
lods
aam
dec
out
int3
aad
imulb
not
repz
out
dec
jecxz
stos
js
fisttps
inc
int
pop
idivl
adc
jbe
arpl
scas
out
cli
jnp
dec
icebp
dec
mull
mov
jno
cmpsb
cli
sbb
jb
pop
mov
enter
adc
ljmp
popf
or
cmpsb
enter
lods
dec
inc
jl
mov
adc
out
lods
mov
jge
stc
cmpsl
dec
aaa
xchg
add
aaa
pop
or
push
sub
ds
insl
in
push
nopl
jb
cmp
arpl
xchg
cmp
dec
orl
fistpll
mov
aad
adc
push
adc
mov
bound
xorb
cwtl
push
data16
push
popf
pop
in
add
add
aaa
mov
push
aas
and
iret
test
xchg
push
xchg
lds
outsb
mov
inc
inc
in
aam
lds
or
test
test
hlt
add
mov
mov
in
rcl
out
xchg
sub
adc
mov
fisubs
fwait
mov
icebp
test
negb
test
lock
out
dec
or
nop
inc
outsb
rorb
mov
insl
or
mov
notl
test
mov
lods
mov
inc
loope
mov
movsl
sub
mov
insb
shl
loop
aam
mov
clc
enter
push
jp
mov
mov
cmpsb
test
cmp
insb
aas
leave
lret
cmpsl
pop
add
push
cmp
andl
fdiv
adc
pop
bound
pop
dec
call
fildll
mov
mov
fsin
popa
sbb
push
xor
jg
adc
sub
enter
push
cmpsl
int
scas
or
clc
push
icebp
push
jmp
mov
and
mov
jbe
sub
push
insb
mov
pop
mov
imul
cltd
or
push
sub
ret
lret
fdiv
xor
pusha
fs
mov
insl
data16
inc
shrb
xor
leave
je
dec
cmp
xchg
movsb
add
mov
daa
icebp
pop
xchg
cli
sbb
rol
in
and
fwait
mov
xchg
sub
push
add
add
sbb
mov
push
cli
pop
popf
bnd
stos
push
sarb
ffreep
push
sti
xchg
fdivl
add
and
mov
clc
adc
neg
inc
fwait
in
inc
xchg
outsb
inc
push
sub
outsb
in
push
movsb
jg
sbb
divb
mov
jae
out
pop
and
jae
xor
push
and
inc
add
pop
outsl
dec
imul
mov
stos
loopne
mov
cmp
rorb
shr
xor
fisubs
enter
test
sub
jle
shrb
js
mov
das
test
or
and
push
sarb
and
sub
std
ds
scas
idivb
xchg
and
add
cmp
cs
js
movsl
pop
mov
cmp
std
xchg
dec
lea
int
dec
sbb
fwait
out
mov
call
lret
push
adc
xchg
lcall
dec
pop
insl
cmp
ror
pushl
in
test
insl
pushf
mov
jb
add
sbb
inc
sub
and
jg
shll
iret
mov
jo
cmp
and
das
fldenv
adc
xor
ret
jb
fists
mov
daa
pusha
or
cmpsb
inc
adc
pop
xor
shrb
ds
sbb
addr16
inc
sbb
loop
pop
mov
stos
jle
shll
mov
std
repnz
cld
mov
adc
sub
in
int3
inc
xchg
gs
bnd
rclb
les
jle
mov
add
cmpsl
sub
scas
cmp
pop
mov
scas
aad
leave
push
ds
sbb
push
jle
mov
inc
into
cwtl
mov
lods
or
or
add
leave
mull
pop
lret
xchg
lods
repz
or
sbb
cmp
inc
jno
mov
das
adc
stc
mov
sarl
xlat
call
push
lock
out
repz
sbb
pusha
mov
mov
sub
mov
fimull
pop
sub
cmp
ljmp
scas
push
cmp
je
rorl
mov
adc
int3
pop
in
or
test
or
jnp
push
iret
mov
dec
sarl
loopne
sbbl
xchg
xlat
pop
and
fsubs
cltd
bound
sub
cmp
jae
aas
xchg
dec
dec
mov
jns
in
mov
or
ret
push
adc
test
ret
xchg
cmp
sbb
mov
rorl
ret
stos
daa
clc
and
into
into
jbe
adc
dec
cmp
out
mov
hlt
rcrb
mov
jbe
repnz
insl
or
xchg
inc
mov
mov
push
xorl
and
mov
or
cli
inc
jp
adc
fmul
imul
cmp
sbb
clc
dec
cmc
jno
addr16
sbb
and
lret
adc
dec
cs
fwait
pop
das
jae
mov
push
add
xchg
pop
das
jp
loopne
mov
xchg
mov
loope
mov
ffreep
jo
movsb
cmp
out
adc
scas
sbb
jle
push
nop
adc
mov
inc
or
mov
fdivl
jns
push
xor
je
sbb
mov
hlt
xchg
sub
aad
pmulhw
adc
cmp
je
inc
dec
dec
mov
mov
sub
rorb
jp
mov
push
scas
and
icebp
cmp
lock
rclb
mov
popa
int3
ss
int3
sub
outsb
dec
jo
test
int
pop
xor
push
ja
addb
pop
or
jmp
push
mov
iret
pop
lods
push
fmull
mov
adc
es
cmp
rcl
inc
xchg
into
out
inc
xlat
sarb
test
cmpsb
arpl
mov
call
movsb
xchg
mov
imul
stc
sub
adc
js
pop
test
jge
xchg
jg
mov
insl
push
out
pop
sbb
push
es
mov
cmp
in
mov
mov
incl
movsb
ret
lcall
sbb
mov
mov
adc
in
das
das
or
arpl
test
les
xor
sahf
test
mov
subb
add
jbe
fs
addr16
push
insl
jns
mov
jns
jnp
int3
les
int3
imul
call
ja
out
mov
xchg
ss
cli
jno
mov
les
aas
adc
into
jge
push
mov
movsl
xchg
aas
iret
lcall
xchg
mov
cmp
std
out
add
pusha
and
inc
repz
or
xor
push
jle
movsb
ja
lret
outsb
adc
sub
int
jns
add
stos
cmp
mov
rcrb
dec
idivb
push
cltd
lock
sbb
sahf
cltd
and
mov
loopne
nop
push
mov
loopne
bound
add
out
sarl
sub
cmp
mov
out
int3
scas
mov
arpl
das
dec
pop
dec
cmp
popf
int
add
dec
inc
jmp
stos
jnp
or
mov
cmpb
xchg
ret
les
mov
push
fiaddl
andb
xlat
mov
push
out
adc
orl
iret
cmp
fistl
xor
arpl
fisttpl
loop
push
xor
rcrl
test
das
push
popf
pop
inc
xor
xchg
fwait
scas
mov
fstpl
orl
loop
xchg
inc
cmp
pop
scas
dec
test
sbb
aaa
les
push
mov
mov
lods
jb
aaa
call
aad
hlt
push
dec
gs
in
adc
and
xchg
pop
add
pop
je
mov
cmp
sbb
pop
lock
jbe
imul
into
push
adc
xchg
popf
sub
fimuls
xchg
push
lods
mov
mov
cltd
cmpsl
nop
cmpsl
bound
xor
das
iret
psubb
das
jmp
mov
sub
aaa
push
stos
add
mov
adc
push
mov
pop
and
adc
sub
dec
into
sti
pop
shl
mov
push
sub
sbb
xchg
or
push
push
pusha
nop
or
cmp
fimull
rorl
mov
scas
lcall
push
ret
sbb
jmp
jg
faddp
sbb
sbb
and
popf
pushf
arpl
test
stos
push
push
cmpsl
mov
ljmp
mov
aas
cmpsb
repz
pop
sahf
push
dec
sub
fmulp
xchg
imul
xchg
lds
popa
mul
aam
test
inc
nop
sbb
fadds
leave
in
pushl
mov
test
cwtl
inc
jp
xor
in
addr16
dec
push
mov
pop
stc
jp
xchg
dec
rclb
hlt
push
pop
lret
dec
xor
pop
loopne
fstps
test
sub
sbb
mov
mov
xchg
sahf
lods
and
jp
int
mov
subb
das
adc
dec
lock
int
flds
sbb
sti
dec
lods
mov
in
xchg
insb
xchg
pop
or
pop
jo
pop
jns
cs
gs
push
xchg
sahf
clc
pop
inc
mov
imul
daa
loop
xor
mov
rcll
sub
sub
jbe
sti
out
push
inc
icebp
add
jbe
xchg
xor
or
loopne
push
dec
push
dec
adc
rolb
sub
push
sbb
sub
cmp
mov
fcompl
loopne
mov
test
cmc
enter
pop
orl
jmp
adc
aas
aad
mov
scas
std
sti
or
lret
cmp
shll
hlt
mov
inc
dec
cmpsl
pop
jno
cmp
dec
mov
push
cwtl
ss
cs
jmp
jge
jg
lret
hlt
cmpps
ja
outsl
add
insb
inc
xchg
nop
repnz
arpl
jp
adc
push
xor
aaa
out
jns
rcrl
jecxz
cmp
xchg
adc
xchg
xchg
mov
mov
lret
xor
fs
add
pop
pop
test
out
out
cmpsl
stos
in
push
add
insb
or
add
movsl
pop
ja
cmc
rclb
jo
imul
fmull
inc
aas
inc
cmpsl
movsl
inc
iret
faddl
sub
xor
jmp
xlat
dec
lods
adc
push
daa
mov
mov
mov
xchg
push
push
adc
mov
inc
sbb
add
mov
xchg
es
xchg
test
jae
int
pop
mov
inc
sbb
mov
add
xchg
test
sub
in
into
push
out
push
mov
ja
sti
mov
out
mov
lcall
sub
push
mov
cmc
push
push
mov
add
iret
js
aam
shlb
movsb
pop
ret
add
push
jbe
nop
xchg
dec
pushf
jmp
aad
fisubrs
pop
test
xor
or
nop
inc
test
dec
xchg
sub
xor
retw
out
adc
mov
pusha
sub
stc
push
jne
orb
push
push
push
pop
rorl
test
mov
leave
inc
cli
lcall
inc
and
cltd
adc
cmp
pushf
xchg
aad
cwtl
add
and
push
mov
fcoml
sub
mov
into
pop
or
test
rolb
or
sub
shrb
xchg
xor
dec
jo
js
jmp
aad
fdivrl
pop
fsubrp
adc
mov
in
movsb
push
stos
pushf
or
fs
push
dec
or
sbb
out
sub
mov
stos
insl
cmp
pop
mov
or
mov
addr16
sahf
movsb
push
mov
vmwrite
or
cmpsl
or
push
outsl
jnp
mov
jmp
stc
sbb
xlat
out
pop
enter
dec
das
dec
sbb
nop
lret
arpl
cltd
cmp
and
mov
sbb
adc
lods
scas
push
shll
push
cld
xchg
lret
scas
jmp
in
inc
dec
add
lret
jecxz
addr16
shll
fsubl
pop
rcl
xorl
and
mov
into
jae
xchg
int3
mov
daa
pop
sbb
xchg
icebp
flds
xchg
add
inc
in
lds
xor
pop
cs
cwtl
testb
mov
xchg
cmpsb
js
push
lea
loope
adc
mov
mov
stc
int3
cmp
out
jl
imul
fs
rcrl
fidivl
das
lea
pushf
push
test
out
sbb
inc
mov
imul
shll
nop
jmp
mov
mov
mov
add
jecxz
outsl
daa
sbb
mov
xchg
test
xchg
sarl
mov
mov
mov
add
mov
imull
pop
movsl
push
punpcklwd
fisubl
lods
call
jns
repz
push
add
imul
jns
sbb
fmull
rol
lds
pop
pushf
gs
fisttpl
and
stc
bnd
push
pop
push
insb
cmp
mov
mov
cmp
jo
mov
fwait
add
mov
orb
lahf
dec
mov
mov
mov
clc
dec
adc
cli
xor
inc
xor
add
xor
aad
dec
pop
pop
dec
jno
add
or
lods
sti
stc
jo
enter
push
hlt
adc
cmp
je
fwait
dec
jmp
loope
and
sub
mov
xor
dec
fcmovnu
inc
adc
add
inc
inc
xchg
aad
add
test
xlat
std
das
mov
pushl
pop
insl
mov
cli
add
pop
adc
popf
pop
les
add
push
or
mov
loope
std
xchg
data16
mov
push
pop
sbb
jo
pop
xor
insl
cltd
cltd
xchg
mov
out
dec
data16
bound
push
test
inc
mov
push
bound
sbb
mov
ret
or
xchg
inc
dec
das
xchg
test
in
pushf
fisubl
sti
mov
pop
cmc
push
mov
jmp
sub
loop
add
pop
mov
cli
insl
add
cld
push
hlt
and
inc
in
jno
daa
sti
xor
mulb
scas
jp
sti
test
mov
sbb
adc
jl
mov
push
jecxz
outsl
fiadds
sub
sub
shll
in
mov
dec
xchg
xchg
mov
leave
push
push
ja
stos
xor
fstpl
adc
test
sbb
push
inc
fildll
cmp
xor
and
repnz
sti
outsb
sub
or
pop
inc
mov
add
push
mov
dec
mov
data16
cmp
cmp
pop
inc
rep
jno
mov
cmp
movb
notb
cltd
idiv
fidivs
cwtl
dec
js
int
push
cwtl
popf
les
jne
fs
xchg
and
je
mov
adc
test
add
jmp
sbb
cltd
mov
add
call
stc
cmp
xlat
aad
mov
xor
popa
sub
push
dec
pop
sbb
mov
push
outsl
xchg
push
xor
and
mov
xor
mov
xchg
jl
jecxz
fistpl
add
or
pop
xchg
and
adcb
ljmp
sbb
lret
sbb
mov
jg
dec
dec
shr
icebp
cmp
jo
mov
cwtl
addl
lcall
add
jb
aad
pop
dec
dec
sbb
into
loop
imul
cwtl
mulb
jnp
mov
les
pop
mov
popa
mov
sub
inc
adc
push
test
mov
stc
outsl
dec
xor
jo
jg
dec
leave
movb
mov
aas
fstpt
push
enter
iretw
add
inc
sub
and
xchg
into
jp
cmpsb
dec
jg
adc
in
dec
aam
mov
insl
adc
mov
add
xchg
jae
lods
push
pop
jae
pop
icebp
push
fiaddl
testb
aaa
xchg
adc
stc
sbb
and
push
popa
ror
sbb
sbb
mov
mov
stos
xor
inc
xor
inc
test
aas
clc
outsl
adc
fdiv
lea
push
aam
xor
mov
mov
stos
popf
mov
imul
push
outsl
xorb
icebp
cld
dec
ljmp
dec
xor
cmp
out
popf
xchg
xchg
in
sahf
cmp
out
xchg
inc
sub
mov
lods
sub
and
lret
lret
lahf
shrb
jo
call
sahf
inc
in
and
fistl
jo
fdivrp
cmp
xor
out
jp
jmp
in
push
sbb
jae
out
and
or
dec
clc
in
add
pop
pop
mov
ds
add
push
dec
xchg
and
lods
rorl
mov
mov
xchg
xchg
add
dec
xor
in
fnstsw
in
dec
dec
jno
lea
in
rcrl
fcomi
fdivr
adc
jp
sub
jno
xchg
dec
adc
xor
or
mov
xor
popl
aaa
icebp
lret
testl
mov
jno
pushf
fsub
push
frstor
int3
inc
rcr
fdivrs
mov
iret
adc
outsb
in
add
imul
mov
pop
xchg
mov
adc
push
jecxz
cli
dec
cmp
xchg
fwait
and
cmp
push
lea
loope
es
cmp
sar
dec
jge
inc
jl
addr16
inc
adc
add
data16
xor
mov
mov
dec
fwait
lods
fistpl
mov
idivl
cmp
mov
mov
pop
fldl
dec
test
enter
in
push
xor
es
rcr
push
mov
push
call
loope
add
out
je
adc
xor
dec
pop
xor
sbb
mov
sti
leave
rcll
and
mov
sbb
cmpsl
ja
test
call
pop
out
notl
push
inc
push
insl
cmp
out
in
mov
push
sub
adc
fadd
xchg
cmc
jge
push
push
loope
xchg
ja
push
in
movzbl
mov
pop
or
sbb
test
scas
pop
ds
mov
or
ljmp
jns
mov
lcall
or
aaa
inc
push
xorps
testl
push
fnstenv
ja
sbb
mov
dec
sub
xlat
aas
jns
pop
jne
xorl
sbb
lsl
sub
push
push
out
test
mov
les
mov
inc
dec
mov
sahf
rcl
lods
pop
rcll
outsl
rcll
jge
pusha
and
movsb
mov
daa
inc
lret
pop
test
xor
addr16
movsl
repnz
into
ss
and
mov
outsb
lods
adc
xchg
lretw
insl
pop
sbb
inc
insb
and
fidivrs
pushf
xor
pop
jae
adc
or
sub
nop
add
mov
xchg
test
test
and
add
popa
fisttpl
inc
imul
xor
cli
mov
or
xchg
movsl
adc
and
test
push
inc
in
pop
enter
mov
fyl2x
fstpl
xchg
addb
pop
push
fsubp
or
inc
sbb
mov
lret
test
push
rcrl
stc
cmp
clc
rclb
dec
cmp
int3
sub
lock
lret
cmp
inc
cmp
notl
lods
cmp
adc
or
sti
mov
stc
in
leave
lock
mov
xchg
pop
int
xlat
cs
ret
or
push
shrl
pop
mov
push
dec
xchg
push
repz
imul
scas
loope
sbb
sub
js
pop
out
jo
int3
mov
jp
push
data16
movsl
mov
jne
lods
stc
das
add
jnp
jg
mov
enter
scas
push
sbb
inc
pop
jle
adc
ds
jp
xchg
jmp
xchg
cmpsl
sub
pop
sbb
fs
cmp
jnp
out
shrb
push
push
mov
aam
arpl
xchg
lods
adc
popf
fstpl
lret
in
push
cli
mov
scas
xchg
mov
ja
xchg
insl
movsl
insl
outsb
stos
ja
pop
cli
sbb
vpmulhw
popf
xchg
jns
out
or
out
out
add
xor
cltd
cmpsl
dec
cmp
into
mov
push
push
jle
das
mov
add
fwait
mov
push
cmp
sbb
pop
mov
cltd
and
hlt
or
fidivrl
pop
scas
push
dec
pushw
into
pusha
add
loop
add
ss
or
lret
cmp
popf
sub
lock
jne
push
sbb
and
fdivs
in
shll
xor
mov
jae
std
pushf
inc
pusha
mov
stos
dec
ja
insl
js
outsl
push
fsubr
jecxz
add
xor
out
lcall
int
mov
lods
std
push
movsb
loope
add
push
cmp
into
sub
add
cmpsl
fsubp
sbb
shl
sbb
ds
hlt
jmp
ret
aam
stos
icebp
rcll
int3
aas
adc
inc
jp
sbb
aad
mov
mov
xchg
cmp
sahf
int3
or
and
aad
imul
and
out
xor
divb
imul
int
outsb
dec
pop
jge
adc
in
sbb
movsb
arpl
pop
scas
dec
xor
cltd
adc
shl
bound
stos
jl
and
out
inc
icebp
cmp
stc
or
faddp
inc
mov
loopne
add
jae
mov
fwait
push
cld
shrb
push
xchg
adc
or
xchg
xchg
jle
adc
in
mov
test
push
pop
cmp
pop
jp
arpl
shlb
addr16
xor
fdivrl
mov
fmul
fisttps
push
jecxz
stc
scas
add
in
sub
cmp
inc
jne
xor
xchg
stos
aam
and
gs
aaa
loope
pop
sub
fldt
repnz
nop
mov
shlb
and
pusha
scas
cli
push
mov
and
fdivrs
sbb
loopne
jne
cmp
sub
stos
mov
xor
pushf
sbb
sbb
pop
les
jge
sarb
mov
les
mov
pushf
das
scas
inc
jns
out
sbb
mov
stc
stos
iret
nop
sbb
pop
hlt
or
repz
out
push
sbb
or
mov
xchg
push
mov
sub
dec
stos
enter
cmpsb
mov
or
dec
push
fistl
sbb
mov
push
in
xor
jbe
dec
pop
add
push
mov
push
ljmp
clc
mov
pop
jne
pop
add
test
popa
incl
sti
push
and
and
cltd
jg
pop
std
mov
sbb
pop
out
mov
cs
in
loope
pop
js
test
add
ljmp
fiadds
aaa
add
cmp
movsl
xor
and
xor
repz
cmc
je
cmp
test
repnz
inc
leave
leave
hlt
ss
and
std
push
adcb
rolb
cltd
idivb
cwtl
add
std
sub
mov
orb
incb
in
sti
arpl
xchg
adc
xor
pop
jge
mov
insl
xor
and
jo
lcall
std
mov
outsl
add
mov
movb
enter
imul
push
lods
jae
idiv
inc
add
iret
xlat
icebp
cmc
add
fmulp
out
lock
inc
idivb
cmp
xchg
ret
inc
add
jecxz
inc
sbb
ret
jl
jns
scas
outsb
lret
scas
scas
cmp
or
adc
add
loope
sbb
sub
into
jae
adc
xchg
fimuls
pop
sbb
jge
adc
mov
jne
mov
mov
push
add
pop
es
ret
mov
mov
repz
push
mov
lret
cmp
lcall
cs
test
fs
mov
inc
cmp
clc
xorb
inc
push
xor
loope
add
jl
cmpsl
add
xchg
inc
sbbb
out
les
outsl
mov
add
push
mov
xchg
or
jno
es
sub
cmpsl
push
adc
mov
pop
iret
xchg
aam
loop
je
dec
dec
mov
pop
mov
sub
push
sti
and
push
push
adc
cmp
add
jecxz
adc
sub
dec
push
lods
adc
and
aam
scas
xchg
mov
cmp
icebp
pop
aas
adc
dec
xchg
add
add
and
mov
popa
sbb
sub
outsl
loope
fldcw
icebp
pop
adcl
data16
mov
dec
mov
cmp
xchg
inc
xchg
fdiv
insb
in
fsubrp
inc
std
shlb
mov
out
inc
xor
pop
enter
jb
mov
std
pushf
adc
mov
nop
nop
lret
add
scas
jnp
jmp
orl
jg
sbb
jle
xchg
push
stos
fstp
sbb
or
loopne
ss
arpl
mov
std
lcall
jbe
pop
inc
std
jecxz
pop
movsl
xchg
cmp
iret
mov
add
fdivrs
mov
out
pop
out
pop
xor
cmp
js
lods
push
xchg
call
push
jmp
push
xchg
ret
cld
aad
je
cltd
and
cwtl
cmp
pushf
xchg
cwtl
stos
cmpsl
mov
lock
mov
push
rorl
ret
aad
into
mov
outsl
mov
xor
out
hlt
add
sbb
unpckhps
or
pusha
dec
inc
sahf
loop
sub
rcrb
xchg
cmp
jl
jle
ret
xchg
out
hlt
dec
dec
int
aam
dec
push
push
mov
cmp
sub
xchg
jns
jl
add
scas
stos
cltd
mov
into
test
push
pop
lcall
popa
xor
cwtl
lock
mov
xchg
xchg
iret
add
mov
subb
leave
mov
adc
lock
mov
and
mov
xor
sbb
cs
fimull
jb
adc
xchg
mov
lahf
push
sahf
or
xchg
mov
inc
push
or
jnp
pop
adc
add
enter
icebp
or
in
out
sub
inc
xor
mov
test
test
repz
test
pop
stos
mov
aas
test
sti
test
push
test
out
jecxz
loopne
test
aas
pop
insl
pop
scas
mov
mov
pop
lcall
add
bound
testb
fcompl
push
add
icebp
jne
dec
fs
rcrl
in
jne
jle
mov
xchg
push
lahf
testl
inc
in
stos
aad
shrl
int3
jo
cmp
jno
pop
xor
and
out
pop
push
pop
lock
xor
out
out
sbb
dec
rorl
mov
push
jnp
pusha
or
fstl
cmpsb
jo
je
fcomp
push
testl
jl
mov
push
imul
lahf
pop
sahf
mov
sub
mov
cmp
xor
add
mov
test
add
pop
dec
call
push
push
les
fstps
in
push
stc
xor
daa
inc
jmp
add
mov
repz
cmpsb
sbb
push
fdivp
test
pop
pop
sub
xchg
in
push
nop
cmpb
pop
fs
mov
cli
sti
loop
add
push
ret
push
or
addr16
mov
in
rcrb
add
dec
add
add
push
andb
or
dec
cmp
cmp
pop
mov
push
fcoms
mov
scas
push
jno
push
pop
push
push
and
pop
inc
in
xchg
xor
sub
push
lods
fdivl
mov
arpl
out
or
adcb
xlat
sub
add
sbb
mov
repz
jb
cld
test
shll
test
jae
or
add
dec
or
dec
movsb
cmc
sub
and
add
outsb
xor
adc
in
push
mov
inc
cmp
aam
push
or
mov
jmp
icebp
es
xchg
cmpsb
daa
mov
nop
jmp
xchg
lahf
xor
pop
popf
fisubrl
hlt
out
mov
push
in
in
cmp
rcl
dec
and
dec
movsb
cmpsb
das
xor
pop
pop
insb
or
gs
push
fnsave
sub
inc
adc
add
repz
test
mov
jns
jmp
inc
test
scas
rorl
mov
addl
jne
sub
add
add
mov
pop
js,pn
xor
test
ficompl
jb
sti
enter
stos
js
test
shll
xor
sbb
out
test
test
icebp
xor
xchg
in
dec
sub
stos
outsl
insl
adc
sub
mov
pop
mov
out
and
mov
loopne
and
xchg
pushf
push
fwait
cmp
mov
ss
sub
sbb
and
pop
outsl
pop
lods
and
pop
lds
inc
out
sbb
cmpsl
je
mov
mov
mov
mov
sub
cmpsb
lods
pop
push
idivb
sub
enter
js
jmp
call
int3
lods
sahf
lds
sub
cmc
sbb
inc
pop
push
pop
out
inc
cmp
push
xchg
addr16
js
cltd
scas
call
push
std
adc
sbb
fs
scas
mov
mov
inc
inc
lahf
pop
inc
mov
add
or
mov
jo
inc
xor
push
jmp
shrl
iret
sti
and
sbb
sbb
pop
pop
ret
cmp
xchg
cmpsl
call
lods
xor
pop
popf
in
out
fistpll
test
push
inc
aas
dec
xlat
je
adc
mov
jl
inc
sbb
cmp
fs
add
pushl
testb
mov
int
and
push
mov
out
push
scas
js
jmp
sub
sbb
dec
or
loop
sbb
mov
inc
pop
push
sbb
in
and
dec
and
add
outsb
dec
ds
sbb
adc
mov
pop
mov
cmp
inc
cmp
repz
jns
mov
push
sub
test
mov
cltd
imull
aad
cmpsw
shrl
sub
fisubl
mov
jne
sbb
stc
xchg
push
mov
lcall
test
in
cmp
outsb
add
xor
inc
ret
jmp
jge
loop
rcrl
cmp
pop
xorl
mov
ds
test
xchg
fwait
scas
push
sarl
cltd
iret
test
push
gs
pop
pusha
pop
and
dec
sahf
jns
pop
ror
cltd
inc
ja
pusha
xchg
popf
out
fiadds
sub
mov
sub
xlat
pop
jno
dec
jl
push
xor
into
out
insl
clc
xor
jbe
and
jmp
daa
xor
lods
les
popf
add
jmp
sbb
or
loopne
sarl
daa
xchg
xchg
mov
sub
test
or
or
dec
mov
gs
and
mov
dec
outsl
lret
push
adc
jnp
aaa
xor
dec
test
bsf
mov
inc
mov
cmp
mov
js
push
push
je
mov
push
popf
repnz
ja
mov
ret
mov
and
jmp
mov
adc
sub
or
js
icebp
push
popf
sub
sub
in
mov
mov
mov
xchg
fldcw
and
sub
addl
pop
arpl
add
shll
jns
jo
push
movsl
fs
cmp
xor
mov
lret
or
adc
jnp
imul
add
sbb
jp
sti
in
and
fidivrl
icebp
ficoml
inc
leave
push
hlt
ret
es
hlt
mov
dec
mov
lock
fnsave
xor
adc
adc
cwtl
xor
nop
push
pop
ds
xor
jle
jmp
into
lret
jecxz
addr16
mov
mov
lods
xadd
push
sub
cli
les
push
iret
jb
ficompl
lods
pop
in
cmp
sub
pop
lock
dec
imul
jmp
lcall
inc
and
adc
mov
movsl
ret
daa
nop
daa
dec
arpl
es
pop
xchg
jae
enter
sbb
inc
jg
stc
xchg
xchg
mov
fcomip
jb
xorb
sbb
push
fcmovnb
xlat
sub
sarb
cltd
outsb
adc
cmp
pusha
mov
icebp
dec
pop
mov
xorb
fbstp
dec
pushl
outsb
mov
mov
daa
xchg
jbe
shlb
ds
cli
cmp
adc
mul
repnz
and
lret
adc
inc
in
and
fstpl
test
cmpsb
and
cmp
push
mov
testb
hlt
xor
pop
pop
push
dec
orb
addr16
lret
xor
fildl
les
rclb
aad
or
jo
pop
sbb
dec
shll
sub
bound
imul
es
call
call
push
xchg
sub
mov
sti
dec
jb
stos
movsb
dec
aaa
xor
xlat
popf
jnp
cs
push
insl
cmpsl
sbb
dec
fsubl
pop
xchg
add
add
mulb
adc
xchg
imul
jl
in
arpl
ret
pop
pop
sub
add
push
xchg
xchg
pop
mov
dec
sti
xor
inc
xchg
add
xchg
and
cwtl
inc
scas
nop
in
sti
cmp
icebp
xchg
mov
add
aad
and
pop
mov
pop
xchg
jecxz
pop
in
dec
jne
mov
mov
xor
dec
cmpsl
ret
adc
mull
push
scas
je
stos
add
in
sub
push
clc
push
and
imul
out
cmp
mov
enter
pop
mov
shrb
fbstp
pop
add
loop
mov
push
or
ljmp
jg
add
pop
pop
xor
xor
mov
or
add
push
xchg
push
rcl
xchg
sub
aam
fists
jle
fisttpl
lret
inc
push
outsb
xor
rorl
aad
mov
push
sbb
and
jb
push
sub
xchg
jl
dec
add
inc
pop
push
xlat
adc
jge
addl
adc
cmpsl
sbbb
xor
das
aad
jae
in
addl
daa
in
dec
cmp
cmpsb
pop
mov
fs
add
jmp
pop
popf
ds
sbb
out
mov
imulb
loopne
jp
mov
fidivrs
loope
push
insl
rcrl
decl
mov
lahf
lds
test
xchg
jbe
je
add
into
inc
test
add
repnz
pop
jecxz
dec
dec
out
inc
mov
dec
pop
dec
xlat
in
je
or
fs
fidivrs
push
test
test
mov
insl
xchg
pop
lahf
and
mov
clc
jnp
push
pop
sbb
stos
xor
or
inc
pop
pusha
rcr
stos
popf
xor
lret
loope
mov
data16
push
int
dec
jb
sbb
and
xor
addr16
mov
xor
xchg
inc
repz
jle
jno
mov
std
pop
ja
xor
push
adc
xchg
rclw
cmp
jmp
scas
sbb
or
mov
jbe
jb
fsubrp
into
adc
loop
shrb
fwait
lret
mov
mov
or
shll
leave
imul
roll
add
ffreep
cmp
rolb
push
mov
cs
jecxz
sti
push
mov
sbb
les
insb
and
dec
dec
pop
fcompl
loopne
sub
in
cmp
lea
cmp
scas
imul
mov
xor
cmp
sub
pop
enter
daa
jl
mov
xor
push
pop
xchg
hlt
movq
push
bound
stc
xor
inc
fcmovbe
ret
insl
xchg
push
dec
mov
or
imul
leave
sbb
clc
repz
mov
push
sub
es
imul
loop
push
leave
xchg
xchg
jae
out
xor
jmp
pop
add
xorl
lods
faddl
int
and
stc
aad
adc
xlat
pop
movsl
xor
xchg
out
leave
mov
sti
mov
sbb
dec
xchg
test
inc
cltd
lea
jns
fisttps
sub
jge
xchg
mov
imul
pop
cmp
or
repz
dec
inc
cs
mov
inc
aam
divb
repz
ret
mov
sbb
int3
rorl
and
mov
sub
mov
mov
push
in
xorl
out
arpl
xor
mov
xchg
bound
fwait
leave
mov
icebp
imul
inc
ret
in
mov
rcll
jno
fiadds
sub
popa
inc
jno
pop
pushf
cwtl
xor
mov
mov
lret
test
sti
sbb
sahf
pop
incb
pop
inc
xlat
sbb
fisubs
or
fsts
in
call
sub
push
dec
inc
sub
negb
push
cmpb
jne
idivl
mov
xchg
inc
inc
and
bound
and
in
lret
jno
repz
vpcmpgtd
pop
jecxz
test
push
xchg
fcomi
push
jle
inc
push
xor
xor
je
aad
adc
xor
mov
dec
jno
cwtl
fcmovnb
arpl
test
pusha
mov
idivl
jmp
fcompl
mov
cmp
pop
dec
xor
mov
sub
cmp
add
jb
add
add
fcoml
leave
repz
lods
jmp
push
mov
xchg
push
out
rorl
dec
adc
sbb
lahf
jecxz
and
cltd
je
mov
fcmovnbe
jno
out
and
pushf
cli
jcxz
and
mov
data16
xchg
lds
or
inc
cwtl
cwtl
arpl
and
mov
push
scas
inc
push
or
xor
dec
sub
sub
xor
sbb
adc
mov
outsb
cmp
push
scas
out
push
mov
pop
mov
daa
popa
fs
dec
lret
stos
aas
cmpsl
mov
cmp
push
cmp
add
mov
pop
test
in
pop
xor
pop
jnp
hlt
call
in
or
xchg
push
adc
popf
test
adc
mov
lods
ja
fnsave
lea
dec
pop
jmp
fisubl
inc
jg
sub
xchg
in
jno
std
stos
rorl
sub
xlat
addr16
cmc
mov
jg
lds
add
dec
arpl
sub
push
sbbl
pop
scas
lods
in
mov
aad
and
push
loopne
out
or
jae
cmp
cmp
jmp
mov
xor
mov
jecxz
shl
jg
mov
fistpl
xchg
xor
add
out
xor
inc
or
in
pushf
bound
movsl
test
jmp
hlt
and
test
push
fcoml
xchg
out
inc
loope
mov
adc
je
fldcw
mov
cmp
out
mov
pop
rcrb
sub
ja
repz
inc
push
pop
mov
cmp
adc
xchg
sbb
inc
jo
cmp
or
and
jge
inc
insl
sbb
pop
inc
push
fistl
movsb
push
int
sbb
fmull
push
or
mov
movsb
mov
cmp
or
ljmp
or
xlat
pop
or
mov
dec
lret
inc
dec
pop
xor
mov
icebp
shlb
scas
xchg
ja
les
and
and
push
pop
push
add
outsl
orl
andl
push
jb
cld
mov
mov
xchg
cmp
in
inc
fsubs
mov
jp
mov
insl
test
add
mov
fistl
outsl
xchg
loope
mov
popf
xchg
adc
xor
and
add
hlt
cwtl
lcall
outsb
icebp
pop
mov
stc
stc
jo
xchg
mov
data16
add
in
or
jnp
push
inc
add
jecxz
add
pop
std
cmpsb
mov
in
xchg
int
sbb
xor
and
xor
sbb
xlat
stos
imul
mov
test
jns
fsub
xchg
push
mov
sarb
push
and
dec
push
andb
push
icebp
sbb
pop
inc
aam
ljmp
mov
cmpsb
fcoms
gs
js
pop
mov
pop
roll
inc
mov
stos
mov
add
lods
js
xlat
xor
cmp
mov
cmpsl
and
aam
je
in
sbb
jecxz
or
jge
sub
repnz
jp
xchg
fildl
jp
xchg
fldt
sub
mov
dec
scas
stos
outsl
sahf
xchg
mov
mov
xchg
sbb
sub
xchg
push
fidivrl
lock
ret
lret
sbb
imul
in
leave
test
add
loope
scas
sbb
or
popf
insb
nop
out
xlat
mov
icebp
mov
in
ss
cld
orl
pop
pusha
push
mov
mov
cs
mov
xor
inc
lea
pop
or
add
pop
fcmovnu
mov
out
fs
jae
cwtl
fsubrs
inc
int
or
inc
or
jmp
jbe
outsb
sarb
add
or
dec
jg
push
jecxz
jecxz
fcomp
rorb
scas
or
jns
inc
and
push
cmp
cmp
push
scas
sub
out
adcl
into
in
xchg
or
or
popf
int3
jns
mov
pop
push
jnp
aaa
inc
jbe
sbb
sub
or
cmp
inc
insb
repnz
xchg
and
pop
push
xor
ss
cs
mov
fnstenv
je
inc
aad
push
ljmp
das
out
inc
adc
mov
les
dec
dec
mov
mov
sbb
push
cwtl
mov
push
xor
mov
mov
aad
pop
push
stc
imulb
movsb
testl
mov
mov
shrl
mov
pusha
xchg
ret
scas
ds
mov
jg
push
dec
cmpsb
out
js
pop
push
iret
sub
push
loopne
sub
mov
repnz
in
sub
add
jae
sbbl
test
aas
popf
adc
cmp
xchg
sti
data16
add
sbb
call
mov
xchg
pop
imul
test
sbb
xor
repz
mov
sub
ja
fisttpll
add
pop
mov
fistl
add
pusha
cld
sub
lea
dec
test
mov
aad
out
stos
insb
mov
cmpsl
and
clc
or
xchg
mov
cmp
into
mov
pop
clc
mov
mov
sarb
jae
sbb
shlb
test
cwtl
inc
push
fsubrl
nop
icebp
fisubs
int3
inc
dec
cmp
jne
stc
pop
add
mov
jecxz
mov
mov
xchg
push
sub
mov
dec
fcomps
jg
iret
cmp
dec
testl
mov
cmp
push
lds
jge
dec
movsl
pop
xlat
xchg
stc
mov
add
push
loope
insb
imul
popa
mov
cli
inc
pop
push
or
add
push
lret
ficompl
add
movsb
imulb
jmp
push
scas
clc
shrl
pushf
jl
imul
stc
insb
lea
sub
insb
cmp
sub
jl
dec
fsubrl
aaa
arpl
lds
icebp
lods
in
or
xchg
xchg
insl
xchg
jl
adc
jmp
lock
and
dec
jnp
cmpsl
and
ss
nop
push
and
call
mov
add
out
mov
vmovddup
int3
iret
xorb
lcall
xchg
xor
stos
and
cmpsl
aaa
and
lock
sub
xor
stos
adc
push
out
push
xor
in
xor
daa
lret
repz
cmp
push
adc
loop
dec
cmc
fcmovne
out
dec
mov
pushf
push
test
xchg
addr16
ret
in
pop
aaa
jge
cmc
movsb
adc
repz
mov
adc
insl
push
test
dec
insb
mov
mov
hlt
lock
andl
aas
movsb
iret
adc
jp
lahf
lds
daa
popa
xchg
test
mov
fbstp
dec
ja
out
cmp
enter
andl
pop
push
push
bound
jp
mov
mov
pop
xchg
xor
mov
das
inc
or
xchg
movsb
rorb
add
inc
ror
js
push
les
xlat
jle
jge
out
add
dec
mov
outsl
stos
xchg
sti
enter
mov
cmp
mov
dec
xlat
push
test
out
scas
mov
xchg
cs
hlt
arpl
stos
test
inc
cmpsl
xchg
mov
nop
sti
fucom
test
sbb
sub
hlt
adc
ret
and
cld
dec
cmp
notl
sub
jnp
pop
xor
adc
push
cmc
add
aas
ficompl
ret
imul
out
sub
push
push
add
cmp
or
ret
pop
jo
sub
shrb
loopne
push
push
sbbb
pusha
inc
jp
pop
jge
sub
jnp
flds
push
fistpl
cltd
sub
push
pop
pop
and
push
and
or
lods
js
xchg
push
sahf
rclb
mov
xorb
addr16
repnz
cmp
mov
pusha
xchg
sub
xchg
xchg
decl
push
dec
jecxz
lret
mov
cmp
repz
jnp
cmpsl
ja
xor
pushf
push
xchg
mov
outsl
and
lds
es
mov
cli
inc
jb
inc
mov
ds
rcrl
jge
data16
mov
cmp
push
inc
fists
push
pop
mov
test
pop
xchg
mov
add
jp
lret
stos
icebp
addr16
scas
stos
sti
lret
stos
hlt
shl
mov
cwtl
mov
pop
paddsw
aam
lock
inc
and
pop
jmp
mov
iret
cmpsl
cmp
test
add
xor
int3
dec
or
lret
pushf
int
in
loopne
cmpsl
sub
mov
add
xor
je
mov
sub
daa
add
cld
movsl
dec
sbb
mov
jmp
pop
inc
fwait
xchg
aad
enter
cld
test
xchg
fdiv
test
xchg
out
xchg
in
mov
popf
add
aas
fisttpll
stc
jp
js
popl
xchg
pop
aas
loop
cmpsl
frstor
jnp
pusha
lahf
add
inc
and
push
pushf
dec
cmpsb
jno
mov
ficomps
cmp
push
rorl
push
popa
dec
mov
scas
loope
aad
or
sbb
mov
xchg
inc
mov
nop
xchg
push
sub
xchg
pusha
and
test
jp
rorb
push
and
sub
shll
movsb
out
mov
leave
lea
andl
jno
fmull
mov
jl
sbb
movsb
push
jnp
dec
sahf
or
pusha
sub
ja
sbb
cmp
add
pusha
inc
sub
repz
cmc
repz
add
xlat
call
test
and
sbbl
pop
into
out
cmp
or
int
cli
pusha
test
adc
mov
jle
sahf
loopne
jge
shll
ja
iret
mov
xor
sbb
cmp
test
aam
sub
jno
cmp
push
popa
fistpl
iret
xor
cmc
xor
lahf
add
xchg
test
ror
jne
cwtl
movl
out
test
xlat
stos
push
add
xchg
jle
nop
push
pop
jnp
mov
adc
dec
adc
dec
add
lret
sub
jecxz
fwait
pop
push
jne
sub
inc
push
add
pop
pop
test
dec
and
les
popf
into
cmpl
pop
and
stos
jge
push
dec
jecxz
fimull
repz
mov
adc
aas
out
cmp
xchg
jo
div
jo
inc
fistl
jnp
or
dec
add
shrl
mov
shl
mov
adc
ds
in
mov
cld
inc
gs
lods
xor
or
sub
mov
mov
popf
lret
bound
push
out
movsb
movsl
cmpsb
add
fadd
stc
fsubs
push
rorb
leave
xor
test
repz
sbb
outsb
mov
mov
push
mov
lods
ret
dec
insl
add
fwait
mov
inc
jno
insb
add
cmc
mov
popa
inc
jle
inc
es
and
call
sub
nop
movsb
hlt
in
imul
cmp
pushf
adc
adc
in
and
mov
pop
jp,pn
rcrl
out
jge
vpackssdw
jmp
fcom
pop
or
mov
mov
inc
push
push
mov
push
push
sahf
pop
insl
ret
pop
bnd
jae
fbstp
or
ret
fmul
inc
in
sahf
cmp
stos
sub
fsub
leave
lock
movsl
inc
push
mov
loope
mov
push
jge
fsubrs
add
movsb
and
xchg
popa
push
stos
xorl
insl
aas
lock
gs
mov
lahf
lock
push
xchg
sub
sbb
repnz
push
dec
cmpsb
lahf
pop
mov
add
xor
out
pop
jo
add
push
outsl
mov
inc
lret
movsl
ret
lea
pop
cwtl
arpl
adc
insb
bound
nop
jp
or
push
cmp
in
push
fsubrl
popf
mov
int3
mov
fcoml
sbb
adc
jo
out
lcall
sub
fdivs
push
mov
loope
push
xor
xchg
ljmp
cmp
mov
es
or
and
cmovnp
xor
and
imul
cs
stc
icebp
inc
cli
mov
fdivrs
jmp
adc
inc
dec
stos
cmp
push
and
cmp
adc
jl
filds
leave
outsl
ds
push
mov
inc
jo
pop
cmpb
push
lcall
push
outsb
add
loop
jae
aas
fdiv
loope
and
sbb
sub
imul
stc
adc
mov
inc
pop
orl
movl
mov
xor
dec
lock
mov
loope
ja
pop
fs
cmp
pusha
or
fmuls
mov
push
pop
aas
xchg
adcl
inc
dec
addb
cmp
into
add
mov
xchg
mov
jp
std
jo
mov
sbb
in
fdivp
mulb
into
out
jbe
nop
push
sbb
jbe
imul
fs
jne
repz
pop
xchg
mov
cmpsl
pop
mov
pop
jl
fists
test
pop
mov
xlat
ret
sub
in
movsl
pop
pusha
hlt
addl
xor
sbbb
and
jge
scas
inc
bound
dec
stc
cwtl
jmp
es
imul
popf
push
xor
in
adcb
sub
shl
adc
xchg
xchg
and
rorl
jb
or
ret
adc
jle
xlat
push
push
rcrb
adc
addr16
jl
scas
insl
movzwl
loop
dec
das
test
mov
pop
dec
in
xchg
add
cld
jo
mov
sahf
push
mov
and
push
aam
mov
cs
xchg
pop
push
repnz
testb
prefetch
mov
rcrl
jl
shll
lea
fwait
jl
jg
mov
sub
fcoml
mov
cmp
push
xlat
shll
inc
shrl
and
mov
mov
scas
xchg
sbb
data16
iret
rcrb
js
dec
mov
push
push
in
cmpsl
adc
aad
leave
int
outsl
outsb
jb
stc
xor
sbb
mov
add
repz
jg
jns
sub
cld
xor
and
cmp
loope
out
les
xor
mov
sbb
mov
adc
call
sub
rclb
fs
xchg
xchg
push
js
inc
mull
mov
stc
retw
mov
push
dec
fcomps
cmpsb
pop
into
push
lods
adc
cmp
cmp
push
lods
mov
push
mov
add
fcomps
sbb
pop
inc
stc
fidivl
lock
addl
jl
add
xor
insb
push
bound
fadds
and
enter
xchg
mov
jl
mov
stc
sbb
xchg
adc
mov
jno
push
add
pop
xor
xor
lods
fcoml
lahf
cmp
lcall
push
std
mov
push
clc
clc
mov
or
lret
outsl
cmc
pop
daa
call
fiaddl
popa
fiadds
cmp
movsb
xor
xlat
sti
push
cmp
cmp
cltd
pop
lods
mov
dec
mov
add
arpl
pop
cmp
fcom
out
add
lods
cmp
mov
outsb
std
aad
mov
mov
shlb
fs
sub
stc
mov
push
cs
mov
push
xchg
jmp
loopne
push
jmp
insl
stc
cmpsl
lret
jmp
ja
lock
mov
ret
jb
out
rolb
pop
and
jno
ja
add
rcr
fisttpl
and
popf
test
sarb
pop
xchg
xlat
add
adc
or
notl
sub
or
ja
mov
aaa
test
dec
cmp
or
outsl
xor
cmp
mov
rcrb
jne
pop
popf
inc
xchg
sub
nop
jmp
xchg
mov
push
test
add
in
out
xorb
pop
mov
pop
out
bound
mov
cmc
sub
cmp
xor
and
lcall
popa
sbb
ds
push
adc
sub
fwait
out
sgdtl
and
psubd
ss
into
stos
std
mov
lock
jnp
jo
pop
popa
and
outsb
push
daa
push
jmp
in
icebp
xor
mov
jnp
push
rolb
xlat
pop
aas
loopne
mov
in
aad
mov
cmc
and
sti
xor
pop
out
aas
inc
or
xor
fildl
scas
xchg
mov
mov
pop
and
popf
and
jl
notb
les
xchg
leave
stc
pop
mov
pop
je
loopne
push
pop
sub
lret
pusha
popa
mov
ja
in
fcmovnbe
push
je
rolb
lret
imul
inc
sbb
jp
inc
lds
lahf
aaa
outsb
fldenv
sub
cs
ss
test
lds
jae
mov
test
call
xchg
cmpsl
outsl
insb
or
test
shll
cmc
mov
lds
lret
push
jae
stos
and
test
sbb
sbb
cltd
fisubrl
adc
out
cmpsb
aad
cltd
lods
and
push
aad
lahf
ljmp
pop
jle
mov
or
cld
xchg
ja
lcall
sbb
cwtl
or
bound
xor
sbb
and
movsb
cmc
scas
cmp
jmp
sub
lahf
push
leave
sub
adc
movsb
mov
cmpsb
pushf
jecxz
cwtl
lea
pop
ss
insb
add
add
leave
sarl
jg
repnz
std
push
pusha
sbb
cmp
fistpll
roll
arpl
pop
xchg
pusha
clc
jge
lret
jmp
jg
int
fwait
clc
jecxz
xchg
insl
jne
out
jno
sbb
pop
lea
mov
subb
stos
inc
mov
inc
jmp
inc
addb
mov
sbb
out
jge
aas
xor
xchg
mov
in
es
cmpsl
into
or
daa
daa
idivl
jecxz
jg
or
loope
lods
and
mov
ds
push
ds
lds
xlat
mov
mov
sbb
push
xchg
push
dec
pushf
dec
mov
test
pop
and
popf
popa
inc
mov
jmp
xor
add
xchg
shrl
shll
call
call
cli
sahf
adc
jl,pn
mov
add
insb
mov
hlt
mov
or
dec
mov
nop
je
scas
or
add
xchg
call
push
sub
pushf
nop
nop
shr
lret
cwtl
and
push
lods
cmc
and
push
movsl
cwtl
movsb
outsb
sub
insb
jb
fnsave
jno
dec
les
aad
add
test
jge
out
in
jp
push
mov
xor
or
loop
popa
popf
or
inc
int
mov
decl
loopne
adc
cs
fwait
test
mov
mov
mov
xor
adc
and
shl
pop
dec
rcrl
flds
xor
out
push
push
fs
std
push
cli
xchg
mov
add
mov
sub
jge
shl
movsb
scas
dec
inc
or
out
mov
mov
mov
or
or
fisubl
push
pop
sbb
sub
mov
dec
xchg
inc
mov
je
into
push
test
loop
mov
lret
das
mov
fwait
add
aaa
loope
push
add
std
add
xchg
cli
cmp
jb
inc
mov
idivl
addb
ljmp
push
or
mov
mov
add
call
inc
movsl
add
jnp
and
enter
inc
rcrb
dec
frstor
rclb
int
push
arpl
lea
adc
lods
outsl
mov
js
cmp
dec
unpcklps
or
sahf
mov
inc
cmp
daa
sbb
sbb
xor
push
mov
push
adc
scas
mov
repnz
jle
adc
arpl
xor
jl
mov
dec
repnz
jns
pop
push
inc
or
xor
test
lret
shrl
enter
rclb
xor
mov
mov
add
sub
cmp
lcall
add
mov
cmpb
outsb
cmpsb
movl
std
push
insb
sahf
enter
mov
push
pop
out
mov
fcoms
jae
jg
pop
push
or
xor
push
es
inc
lcall
outsl
jg
bound
mov
push
dec
push
loopne
daa
inc
xrelease
popa
sbb
jae
into
cs
xchg
outsl
int3
sbb
nop
xor
mov
and
divb
out
push
in
imul
xchg
ja
loope
jge
lret
jbe
sub
pop
xchg
insl
mov
adc
xchg
sub
mov
cmpsb
mov
jns
mov
sub
iret
pop
push
jp
cltd
jp
mov
inc
add
xchg
mov
push
dec
rcr
dec
and
push
inc
mov
mov
movsl
es
jmp
rolb
sbb
inc
bound
push
imul
xor
lahf
fs
mov
cltd
pop
push
pushf
stos
xchg
es
sbb
and
mov
cmc
push
sbb
jg
pop
cmp
ljmp
loop
mov
mov
in
je
push
pop
push
cmpsl
or
jnp
or
or
mov
sbb
insl
scas
jp
pusha
shlb
data16
add
enter
leave
cli
out
lock
push
sub
fisubs
adc
addb
jle
xor
jbe
stc
mov
xor
fildll
inc
repz
out
jno
mov
jecxz
fwait
imull
test
xchg
xor
cmpl
xchg
sbb
lods
cwtl
loop
mov
popa
add
or
push
sbb
rorb
inc
int
dec
xor
aam
iret
xor
stos
push
push
pop
pop
xor
ss
leave
mov
dec
aad
sub
cmpsl
sub
outsb
sub
mov
lahf
dec
mov
mov
pusha
inc
cmpsl
out
cltd
lret
rcr
sahf
xchg
ret
cltd
or
push
dec
pop
test
lods
fdivrl
cmp
push
stos
aas
mov
mov
sbb
push
int3
in
les
test
jecxz
lea
out
lds
xor
fs
int3
lcall
mov
loopne
push
ja
lods
loope
loop
sub
mov
stos
push
sbb
mov
jns
pop
ljmp
mov
mov
out
xchg
in
sbb
sub
mov
mov
adc
test
daa
les
dec
mov
je
cli
push
cmp
jecxz
std
es
cmp
hlt
jo
fistps
adc
fcomps
mov
rcr
iret
fdecstp
loop
mov
sarb
bound
fsubl
std
add
fnstenv
mov
dec
adc
sbb
cmp
cmc
pop
sbb
jp
js
scas
ss
adc
jle
cmp
or
ss
mov
push
fidivrl
js
xor
push
outsl
aaa
pop
jb
xor
and
jnp
divl
lahf
add
ret
xlat
aas
cld
xchg
push
sbb
ds
clc
je
bound
mov
jmp
cmp
fwait
xor
push
andl
aaa
test
sub
ja
xor
loope
out
xor
ret
add
xlat
mov
mov
lock
mov
pusha
push
out
in
insl
cli
decl
je
mov
fbstp
pusha
das
div
fisttpl
and
sub
in
lahf
fdiv
mul
mov
sub
xor
or
mov
adc
dec
pop
popf
test
pop
aam
sub
roll
sub
mov
scas
mov
push
lods
cmp
dec
data16
xor
fwait
outsl
out
jl
ds
jge
je
adc
les
aam
icebp
mov
and
fidivs
sub
inc
and
jae
lods
jo
outsb
arpl
jle
cmp
xor
daa
xchg
cmpsl
test
lods
jbe
pop
xchg
push
mov
adc
sahf
incb
and
leave
lods
imul
test
cmp
pop
pushf
les
jg
loopne
imul
adc
icebp
mov
cmpsb
or
pop
push
lret
lods
testl
xor
inc
imul
aam
inc
or
pop
mov
add
ss
dec
nop
add
add
sub
mov
pop
jmp
cmp
pop
push
inc
ljmp
sbb
push
jecxz
mov
pop
cmp
mov
jg
cmp
subl
out
outsl
jne
jb
mov
mov
push
mov
xchg
hlt
popa
mov
mov
sbb
stos
jecxz
out
push
insl
sbb
in
and
lret
loope
ja
xorl
inc
cmp
out
in
paddsw
aas
sub
mov
mov
mov
push
jmp
gs
outsl
pop
jae
fcomps
jae
mov
aas
lea
xchg
inc
sub
cltd
js
or
sbbb
call
pop
push
xor
aad
jmp
and
jg
jo
aad
stos
test
add
loop
adc
push
outsl
mov
fs
adc
addr16
jae
mov
inc
in
jmp
lea
test
ret
mov
pop
fildll
push
sbb
or
cmp
fdivl
nop
sbb
js
or
pop
fcoms
add
cmc
loopne
scas
and
dec
jecxz
pop
fisubl
xor
mov
push
cmpsb
pop
movsl
cmp
xchg
lods
lods
mov
int
sar
mov
or
test
inc
mov
push
inc
adc
je
xchg
js
stos
je,pt
rcr
jg
movsb
je
cwtl
xchg
and
mov
xchg
sbb
inc
xor
pop
out
adc
add
jbe
jae
dec
cmpsl
cli
into
clc
sbb
dec
aas
je
rorl
ret
lock
cmp
pop
ret
lret
insl
pushf
adc
sahf
insl
mov
or
inc
mov
cwtl
clc
loope
stc
out
push
clc
pop
stos
jge
sbb
in
dec
rolb
aam
jae
or
xchg
push
cmp
jge
pop
sub
adc
mov
cmp
jno
mov
shrb
push
data16
jne
test
push
sbbb
inc
xlat
add
leave
pop
scas
sub
mov
push
shl
add
xor
rorl
sbb
in
cwtl
nop
daa
push
js
and
push
sub
sbb
cmp
mov
leave
sub
mov
adc
cmpsb
inc
or
fldt
je
les
pop
cmp
push
es
nop
xchg
movsl
rcrb
cmp
dec
test
andl
dec
mov
std
stc
jb
dec
xlat
repz
mov
jno
jbe
push
sbb
cld
in
jo
xchg
xchg
lea
jnp
popf
add
cmp
inc
or
hlt
gs
repnz
icebp
xchg
rcr
dec
cmp
outsb
out
ljmp
outsb
cli
lds
sbb
nop
out
or
fiadds
lret
inc
or
inc
popa
dec
xor
lds
pusha
retw
push
orl
loop
and
lods
xchg
js
mov
es
popf
fwait
or
xchg
mov
and
adc
xor
lret
and
pop
dec
out
push
mov
sub
cmp
out
add
sahf
bound
xor
jns
int
js
in
adc
cltd
jge
pop
cmp
std
inc
ret
cltd
jae
lret
lcall
jnp
ja
repnz
or
es
in
mov
movsb
jb
push
xor
lret
jo
pop
fdivrl
adc
iret
sub
movb
or
mov
cli
mov
js
icebp
inc
cmp
dec
data16
stos
add
pop
dec
mov
addr16
pop
adc
addr16
cmpsl
sub
gs
pop
jecxz
pusha
jo
add
in
cltd
adc
xor
pop
sbb
nop
add
bound
xchg
test
in
mov
dec
xchg
cmc
push
dec
push
fsubrl
orb
ljmp
pop
sbb
push
and
push
jg
xchg
sbb
dec
xor
mov
and
add
sbb
adc
out
sbb
inc
xchg
push
stos
xchg
lcall
test
jge
jp
mov
sub
outsb
lret
arpl
push
in
mov
pop
push
inc
in
into
out
jg
jns
ret
decl
inc
enter
test
xchg
leave
adcb
pop
xchg
and
mov
push
rcrl
movsb
xor
cmc
popa
loopne
cmc
mov
inc
out
arpl
mov
arpl
jae
into
test
jge
push
add
shlb
ret
cmp
mov
mov
mov
adc
bnd
mov
pop
push
add
mov
mov
sahf
inc
cltd
popa
vphaddubd
xchg
jle
dec
cmpsl
rolb
xor
ja
hlt
push
roll
fwait
ret
rorl
mov
jnp
and
dec
sbb
jg
sub
lret
in
out
dec
xor
loope
mov
cli
lods
xchg
pop
dec
push
imul
sbb
xor
mov
loopne
add
out
hlt
nop
out
mov
out
dec
cmp
mov
out
cmp
cmp
in
bound
pushf
insl
mov
cmc
add
inc
or
call
mov
ds
mov
add
fldl2e
cmpsl
stos
mov
xor
or
jl
pushf
sub
sub
or
mov
cli
push
pop
fldenv
pusha
movsb
push
push
stc
mov
lea
in
or
fmull
scas
sub
int
divl
bound
pop
push
xchg
jnp
push
sbb
xlat
dec
or
push
dec
dec
stos
jecxz
xchg
dec
push
daa
std
int
and
mov
stos
adc
xchg
orb
rcr
fs
jo
ficoms
cmp
cmpsl
repz
stos
insl
jge
sub
test
push
std
movsb
xchg
sub
push
sub
je
mov
in
js
and
out
or
aas
lret
shll
mov
xor
dec
or
dec
enter
xorl
fimuls
jno
fidivrs
or
lods
push
js
mov
pop
fs
mov
push
test
js
sti
sbb
arpl
outsb
jb
xor
test
lods
movsl
xor
int3
add
incb
mov
xor
xchg
push
in
std
dec
outsl
addr16
jb
push
dec
enter
fildll
pop
popf
dec
imul
push
movhps
pushf
push
in
mov
cli
data16
rcrb
jbe
nop
cli
dec
mov
repnz
out
xor
push
cmp
inc
inc
and
inc
or
push
ret
push
sub
sbb
cmp
insl
mov
push
popf
ret
mov
outsb
js
pusha
enter
bound
cmp
out
jge
ljmp
ds
into
cmpsb
movsl
push
dec
or
ficoms
push
out
insb
out
mov
add
add
in
lds
push
sub
fstpt
pop
loope
dec
jle
xor
dec
or
jl
add
or
subl
je
test
jns
mov
lcall
pop
test
mov
jno
pop
sti
shrb
and
add
cwtl
fld
popf
xlat
std
mov
push
xchg
dec
xor
inc
inc
loope
es
aaa
data16
and
in
fwait
mov
or
dec
cli
jo
std
movsl
jecxz
pop
sbb
arpl
xchg
mov
add
test
pop
jg
adcb
cmp
pusha
xchg
test
icebp
add
out
xor
or
sbb
mov
stos
mov
push
dec
mov
out
repz
imul
jecxz
divb
mov
or
into
subb
mov
iret
mov
sub
je
jnp
pop
and
jo
mov
add
sub
daa
imul
jle
inc
pop
jle
xchg
clc
mov
daa
jmp
jge
subl
insl
xchg
dec
xchg
inc
repz
jl
inc
inc
in
daa
sub
dec
jecxz
fldt
xchg
push
int
adc
xchg
adc
imul
adc
movsl
call
ljmp
in
dec
and
popl
test
lea
mov
xor
jmp
fcomi
out
daa
arpl
rorb
or
push
cmp
jle
cld
mov
xchg
and
mov
xor
nop
push
lods
movsl
xor
xchg
push
inc
xor
mov
int3
push
or
jp
inc
lods
in
ljmp
out
ds
cli
and
sahf
xchg
sbb
rcrl
push
push
sub
inc
repz
xchg
mov
add
push
mov
inc
test
push
mov
stos
or
mov
and
pop
jle,pt
out
push
daa
cld
pop
push
fs
lret
adc
mov
jnp
xchg
repnz
jno
jo
fildll
sbb
in
lods
lret
movsb
gs
pop
jnp
add
cmpl
test
out
pop
aaa
pop
mov
jne
jecxz
js
dec
iret
sub
fcoms
shld
in
sti
add
dec
fnstcw
shll
adc
pop
mov
bswap
leave
cmp
data16
sbb
mov
subb
lahf
cmp
sbbl
lahf
mov
and
inc
adc
adc
mov
pop
adc
xchg
aas
pop
cmp
imul
adc
daa
in
mov
pop
addr16
sbb
add
jae
and
push
add
jo
xchg
or
aam
jno
push
push
int3
hlt
sbbl
push
push
push
lods
lods
sbb
dec
push
jp
iret
test
add
push
adc
jo
xchg
dec
push
out
aas
shll
ds
hlt
jg
data16
jnp
pop
sarl
mov
mov
mov
xchg
clc
sub
inc
sub
push
dec
icebp
imul
jb
sbb
lahf
dec
pusha
loop
int3
sub
cli
push
adc
jo
xchg
mov
push
gs
aas
xor
arpl
stos
loope
rcrl
daa
or
or
add
sub
pop
or
mov
jp
jl
push
outsl
adc
adc
adc
and
jle
or
mov
cmp
leave
imul
out
cld
movsl
cmp
mov
cmpl
icebp
inc
xor
lahf
push
or
leave
mov
push
push
in
dec
sti
sub
aad
sub
xchg
je
lea
push
out
xchg
mov
inc
scas
shl
enter
push
inc
dec
ljmp
mov
lea
lock
mov
test
xchg
icebp
icebp
icebp
pop
mov
or
dec
test
ljmp
mov
cmp
aam
sub
inc
pop
les
add
jg
mov
xchg
add
mov
mov
les
fists
cmp
push
add
loop
repz
mov
andl
lds
mov
repnz
testb
add
mov
mov
jmp
movsl
cmp
leave
mov
xchg
mov
out
dec
lahf
adc
cmp
pop
jbe
and
and
pop
cmpsb
or
gs
inc
test
inc
inc
and
mov
cmp
sub
stos
push
hlt
rcr
push
push
mov
pop
xor
adc
or
add
sbb
fsubr
or
sbb
sbb
pop
dec
int3
and
or
dec
in
adc
pop
add
ja
call
imul
adc
jb
stos
repnz
fidivl
dec
mov
lods
cmp
inc
push
mov
js
pop
mov
mov
ja
aad
mov
jmp
test
stos
sub
in
pop
loope
sarl
test
jg
outsb
or
mov
scas
test
push
jl
adc
test
jle
mov
adc
and
jbe
arpl
sbb
test
movsb
in
ds
movsl
jns
cmp
das
call
aam
cmp
mov
cmpsl
loopne
lret
loopne
sub
fnstenv
rcrl
pop
test
pusha
sahf
inc
int3
ret
pop
scas
inc
andl
movsl
fwait
hlt
nop
push
adc
push
push
movsl
jecxz
mov
nop
push
icebp
nop
mov
pop
jno
lret
lds
movsl
out
adc
inc
sub
mov
jbe
popa
sub
and
fldl
dec
mov
add
mov
arpl
mov
ljmp
ds
xlat
mov
jmp
scas
add
aaa
xor
test
sbb
cmc
jmp
test
add
sbb
std
xchg
dec
push
js
jno
outsb
push
lds
mov
fistpll
cmpsl
push
lods
data16
ja
push
aam
push
fs
test
push
negb
xchg
adc
fcomi
adc
lret
cmp
popf
adc
enter
and
xor
push
pop
jle
mov
fcmovu
push
clc
lods
jl
out
testb
add
cmp
inc
cmpps
insb
clc
push
jmp
jmp
popf
mov
xchg
and
sti
sbb
lret
sbb
push
push
test
in
mov
xlat
mov
mov
inc
push
push
push
in
stc
lret
lds
mov
es
add
lods
xchg
xor
ret
push
adc
inc
lahf
pop
xor
loopne
enter
rorb
movsl
stos
adc
cmp
les
xor
into
xchg
arpl
and
rcrb
jne
lcall
out
push
and
sbb
mov
imul
pop
xchg
adc
xchg
gs
pop
sbb
cpuid
inc
jp
sub
pusha
jmp
call
xor
push
gs
add
fstl
dec
xor
movsb
aaa
repz
xor
push
cwtl
cmp
cmp
or
xchg
sti
xchg
adc
adc
or
adc
cld
fdivs
dec
push
imul
and
push
sub
or
jne
jle
sub
ss
adcb
and
ret
mov
cmp
sarb
std
pop
movsb
mov
sbb
pop
xchg
add
mov
and
or
out
dec
mov
js
test
jge
dec
push
movsb
jmp
enter
leave
mov
push
push
push
je
sub
mov
lea
sar
sub
lock
ret
mov
mov
pop
dec
nop
mov
mov
push
jg
lods
mov
adc
dec
jp
pop
filds
add
mov
cmpsb
shlb
mov
pop
outsb
loope
pop
push
sbb
jne
mov
ficompl
cltd
sbb
sbb
sub
insl
push
in
paddq
sarl
and
cmc
xchg
divb
and
mov
add
cltd
push
mov
adc
push
lcall
pusha
push
push
lock
and
pop
xchg
loop
xor
add
dec
aaa
cli
movsb
jg
ret
popa
call
cmpsb
ljmp
gs
cmp
dec
mov
mov
sahf
jne
push
add
sarl
xlat
sbb
bound
dec
cmp
sub
enter
orl
pop
sbb
adc
cmp
cld
rclb
inc
cmp
ds
push
fisubl
mov
lret
push
ficompl
pop
or
rcrl
sub
bound
fcomps
sub
inc
sub
and
enter
add
jo
or
inc
fadds
cwtl
or
sbb
inc
jb
arpl
mov
add
xchg
ret
and
mov
imul
xor
lds
test
hlt
jmp
sub
xor
cmpsl
adc
stos
or
add
pop
add
or
dec
adc
and
and
mov
mov
dec
add
iret
imul
fsubs
lret
fwait
dec
or
rcrl
call
mov
outsb
push
or
push
jo
sub
test
lahf
sub
dec
lahf
cmp
std
jne
jns
je
sub
dec
gs
sub
icebp
cmp
mov
or
inc
fs
push
repz
ds
and
inc
or
and
in
mov
sahf
cs
jg
orl
cwtl
inc
imul
sbb
sub
pop
sarb
push
add
mov
xchg
pusha
xrelease
xchg
cmp
arpl
sub
mov
or
mov
xchg
rcl
bound
adc
jge
jecxz
imul
ret
mov
mov
and
insl
popf
mov
sub
aas
mov
mov
outsl
loop
mov
outsl
fadd
cmp
outsl
adc
je
sbb
shll
cltd
jo
lahf
lods
dec
jle
sbb
or
negb
dec
iret
out
push
xor
mov
das
pusha
adc
nop
push
aad
clc
cmp
mov
sahf
sub
mov
push
sub
jae
mov
mov
mov
es
aaa
lods
pop
outsl
push
loope
push
xor
pop
mov
mov
lret
push
add
jo
sub
jp
adc
mov
add
jne
inc
xchg
jecxz
inc
adcb
lods
jb
arpl
inc
pusha
xor
push
data16
gs
push
and
inc
jecxz
popa
push
xchg
int3
xlat
push
lcall
push
push
jnp
sbb
call
xchg
cltd
add
arpl
or
jnp
loope
test
test
add
inc
pop
cwtl
cmp
mov
adc
jno
test
sti
dec
dec
test
fnsave
jg
sub
jns
pop
dec
pop
pop
cwtl
inc
js
jg
jmp
rolb
test
fiadds
lds
ds
data16
stos
mov
cmp
xchg
daa
hlt
sbb
shlb
push
push
arpl
inc
mov
cmpl
fcoms
mov
xor
sub
and
xor
leave
bound
mov
jge
lret
mov
xorl
inc
or
lcall
or
sbb
mov
sbb
ljmp
faddl
outsl
adc
or
into
insb
adc
adc
fld
ffree
jle
imul
jno
outsl
mov
jbe
push
dec
add
push
mov
inc
xor
jnp
cmp
aaa
push
lret
add
sub
mov
cmp
mov
mov
lods
movsl
xor
and
lock
cmpsb
fmuls
xor
dec
lahf
add
stos
add
inc
dec
mov
xchg
sti
add
enter
sahf
mov
scas
lods
aad
jae
push
ret
outsb
jecxz
inc
int
fdiv
and
fildl
je
push
or
push
cmp
dec
push
pop
sbb
mov
pop
add
mov
out
mov
fimuls
xor
jns
pop
imul
out
out
cmp
xchg
hlt
les
jg
add
or
mov
push
fwait
adc
scas
inc
in
xor
push
sub
and
adc
pushf
popf
imul
adc
adc
les
or
push
sub
in
and
sub
idivb
cmpsl
jns,pt
dec
or
xor
dec
jo
popa
sbb
popa
mov
add
insb
inc
and
stos
in
inc
lock
jo
sbb
mov
adc
add
add
in
test
movsb
sbb
jmp
int3
push
repz
jle
aaa
xorb
push
dec
push
mov
nop
fisttpl
fs
ss
jecxz
pop
adcl
push
out
jl
push
sub
cmp
cltd
into
jl
enter
sub
inc
inc
int3
call
and
fisttpll
jl
mov
push
sub
and
repnz
js
test
jle
hlt
in
jg
xor
or
pop
fsub
mov
xchg
adc
std
int3
lds
xchg
cli
rcrb
and
sahf
mov
fnstenv
push
or
push
inc
ja
cld
lods
stc
add
mov
out
mov
cmp
mov
jmp
filds
ss
and
jo
loope
jmp
insb
inc
adc
xor
faddl
jns
aas
loopne
xor
xor
lds
cltd
divl
imul
fwait
dec
jecxz
xlat
inc
data16
mov
push
aaa
loopne
fmuls
leave
test
sub
add
adc
pusha
repz
cli
or
imul
addr16
and
mov
sbb
lds
mov
iret
fldenv
ja
sarl
ret
jle
mov
mov
xor
out
stos
inc
cli
xchg
inc
into
js
je
hlt
fldenv
jge
fldcw
pop
pop
gs
push
push
and
aaa
xchg
xorl
lods
rorb
xchg
add
xor
fwait
xor
jo
sbb
mov
mov
repnz
mov
sub
popf
sbb
xor
add
pop
repnz
sub
in
int3
ret
pushf
cmp
int
push
movsl
enter
fbstp
data16
fsubs
inc
mov
gs
add
lahf
lret
inc
stos
inc
add
out
pop
mov
add
arpl
aam
icebp
cmc
stc
xor
arpl
pop
pop
mov
sbb
mov
call
push
in
mov
or
or
cmp
pushf
mov
push
rorl
cli
in
pop
fdivl
or
data16
stos
cli
je
fld
push
xchg
scas
jl
dec
fcmovnu
fildl
sub
outsb
add
mov
fnsave
std
add
lods
pop
inc
push
push
int3
test
jo
stos
fdivp
jle
and
mov
subl
shr
leave
mov
insl
pusha
and
icebp
fisttps
imul
xor
les
push
ljmp
or
mov
lods
out
lcall
mov
ljmp
mov
push
sbb
out
lds
and
push
rorl
adc
or
loope
mov
int
clc
es
xor
loope
stos
add
mov
add
sub
add
in
loopne
test
push
sbbl
cmp
jmp
xchg
sbb
adc
jg
lret
je
sub
inc
mov
arpl
dec
iret
test
xchg
sahf
push
lods
add
out
xor
lea
sbb
and
mov
dec
insb
sub
and
pop
jge
sbbl
cmp
mul
repnz
out
xor
sbb
xor
mov
outsl
cmp
pop
insb
sub
aas
lods
add
pop
scas
ret
fcom
loope
enter
leave
arpl
decl
mov
cmc
and
xchg
or
lods
pop
in
imul
aas
and
cmp
movsl
jne
js
sti
cli
addl
pop
and
push
scas
popa
jle
arpl
imul
add
sbb
in
dec
shll
xchg
push
and
adc
fcom
testl
lods
and
ja
mov
in
jb
sbb
xor
das
xchg
adc
pop
push
add
fisubrl
jg
andnps
inc
ret
mov
push
cmpsl
mov
das
pop
loop
sar
jb
xchg
movsl
dec
cmp
add
push
and
imul
in
movl
int3
leave
icebp
pop
sti
inc
pushf
in
and
in
dec
mov
repz
and
test
push
mov
mov
out
fcmovbe
aas
lret
xchg
mov
sub
orb
ret
sbb
push
push
mov
cwtl
stos
ljmp
xor
int
pop
cmpsl
ret
adc
xor
shlb
mov
les
jmp
adc
stos
sub
mov
mov
test
jnp
out
in
jb
nop
mov
std
das
clc
push
loop
xlat
push
jle
inc
out
loope
enter
sar
add
xor
pop
frstor
stc
inc
cmp
insl
fldenv
or
push
jp
pop
loop
ljmp
lahf
nop
mov
mov
lods
repnz
call
nop
jle
in
push
repz
out
push
xchg
xchg
push
xor
mov
imul
or
loopne
daa
iret
jmp
pop
lock
clc
aam
jb
jnp
leave
adc
jo
and
pop
orb
ret
sbb
pop
jg
test
ljmp
ret
sbb
mov
add
mov
cli
pop
add
or
push
cmovs
mov
mov
and
fstpt
jns
fs
mov
dec
xor
fidivrl
subl
loopne
pop
adc
push
sub
bswap
popa
mov
sbb
sbb
repz
push
sub
loop
fidivs
push
push
leave
push
loope
repz
mov
cmp
jle
test
mov
push
mov
mov
sbb
mov
or
inc
pop
movsb
or
scas
add
add
icebp
and
xor
mov
ja
cmp
inc
fwait
lods
xchg
push
cmp
sub
jbe
sar
bound
arpl
insb
sub
or
cmp
lea
add
rcrl
aas
or
or
dec
jne
mov
and
movsb
in
xchg
xchg
iret
xlat
std
add
loope
imul
sbb
pop
loop
outsb
sbb
xchg
xchg
cwtl
and
in
test
enter
hlt
shll
call
mov
cmc
outsb
notl
xor
test
add
pop
lea
test
jo
xchg
pop
aad
ss
and
es
add
sbb
mov
ret
cmpsl
adc
popf
sub
and
into
std
cmp
or
or
and
sbb
add
test
mov
outsb
sub
and
or
daa
loope
cmc
sub
ret
mov
xchg
jle
insb
hlt
jae
jne
mov
jo
dec
adc
or
ljmp
sbb
push
pop
sahf
dec
ss
aad
jbe
xor
popf
jnp
push
inc
movsb
mov
inc
repz
mov
mov
sub
cld
inc
pop
inc
icebp
test
rclb
and
xor
mov
push
sub
and
jmp
mov
outsl
adc
xchg
ds
mov
call
out
lods
adc
mov
dec
popa
sub
sti
rep
mov
jmp
aad
dec
mov
pop
movsl
lret
inc
adc
sbb
iret
push
mov
xchg
cmp
mov
xorb
popa
pcmpeqb
scas
xchg
cltd
iret
xchg
aad
mov
sbb
idivl
mov
jmp
jnp
lds
fstpl
adc
loope
in
mov
dec
addl
dec
adc
inc
adc
sbb
mov
pop
push
jecxz
cli
icebp
pop
cmc
jmp
int3
xchg
rcrb
jge
incb
jge
shll
inc
mov
std
cwtl
mov
mov
add
mov
movhlps
xchg
sbb
rol
push
pop
pusha
mov
sbb
in
daa
loope
ja
xchg
jns
pop
dec
push
icebp
jge
mov
lahf
lahf
and
pop
test
mov
cld
dec
test
cmpsl
inc
cmpsl
xchg
out
jne
leave
sbb
inc
loope
mov
fisttpl
pop
int3
mov
enter
cmpsb
imul
es
pop
mov
pushf
sbb
out
cmp
adc
or
mov
jle
jmp
sub
cmp
sub
sti
mov
arpl
push
sub
mov
pop
loope
push
fdivl
push
mull
jl
cld
pop
jne
inc
dec
or
lock
xchg
jl
push
adc
addr16
in
daa
push
cmp
add
clc
jl
xor
das
mov
pop
fnstsw
sahf
and
inc
inc
push
int3
push
push
mov
adcb
inc
pop
cmpsb
inc
sbb
push
in
xor
xlat
mov
ffree
fs
inc
mov
insl
insl
ret
repnz
fdiv
aaa
popa
mov
xchg
or
rorb
jns
xchg
cmc
cltd
and
jns
jg
lahf
jo
adc
fs
mov
leave
shrl
xor
pop
cmp
std
inc
add
lcall
mov
aas
out
adc
cmpsl
sbb
loop
jge
push
movl
mov
stos
out
sub
mov
rolb
xor
cmp
cmpsl
inc
sub
rclb
dec
sti
rol
pop
iret
mov
push
scas
and
shrl
sbbl
xor
arpl
xor
jmp
daa
jns
and
adc
sbb
shll
sub
sub
push
inc
sub
and
sub
cwtl
mov
mov
xlat
xor
aam
xchg
push
pop
fcom
pop
shlb
aam
xchg
in
xchg
cmp
inc
arpl
pop
adc
jp
pop
pop
pop
sbb
pop
test
xchg
cmc
lcall
andl
fildll
mov
lret
out
or
lahf
faddl
sbbl
mov
mov
aaa
push
nop
inc
bound
movsb
adc
add
mov
push
adc
and
mov
cmp
add
loop
mov
lds
inc
mov
xor
dec
test
xor
stos
jge
std
out
pop
jnp,pt
pop
sub
outsb
adc
cmpsl
push
out
xor
cli
cmp
sbb
add
mov
insb
js
in
xchg
ss
inc
div
pop
rol
sbb
pop
adc
xchg
xchg
and
mov
lcall
or
out
fsubl
xchg
mov
push
mov
jne
inc
int3
scas
test
sbb
push
pushf
add
imul
lcall
sbb
jno
mov
xor
cld
fcmovne
and
rcll
mov
mov
test
rcl
add
mov
inc
jae
stos
pushf
jp
mov
fidivrs
cltd
clc
sbb
xchg
inc
das
mov
and
fldt
or
cli
xor
ret
mov
and
gs
std
shll
cli
test
nop
insl
int
sarb
insb
dec
out
push
bound
insb
cmpl
mov
xchg
add
int3
xchg
shll
stos
in
not
push
and
adc
leave
sbb
xor
scas
dec
sarl
lcall
adc
int
ficoml
fnstsw
sahf
push
xchg
xchg
jg
insb
lret
push
jae
fwait
cmp
mov
xchg
je
pop
sbb
lret
popa
testb
and
push
popa
out
pop
insl
xchg
cmp
pop
adc
rorb
mov
mov
bound
fdivl
in
in
stos
fadd
jne
and
movsl
mov
sub
cmpsl
cmp
mov
std
xor
mov
push
aad
jmp
mov
mov
ret
sbb
rcrb
sbb
shrb
out
ret
and
push
hlt
idivb
or
push
sbb
out
pop
adc
jl
pop
data16
or
aam
testl
out
mov
pop
pushf
and
xchg
add
out
aad
mov
popa
mov
or
xor
addb
pusha
cmp
inc
pop
adc
dec
inc
popa
pop
rorb
test
pop
js
pop
jae
imul
push
pop
das
rclb
hlt
outsl
adc
mov
push
repz
cmp
aad
jmp
sbb
movsb
hlt
shlb
fmul
xchg
push
jno
test
and
add
icebp
xor
ret
cwtl
repnz
push
pop
cli
hlt
jne
fstps
adcb
leave
sbb
std
pop
push
push
in
sbb
out
push
mov
addr16
lcall
fsubr
adcb
outsb
icebp
push
push
mov
nop
aam
ret
into
gs
xor
dec
mov
mov
mov
add
jmp
adc
or
push
cmp
and
stos
cmc
dec
push
cmpsb
shrl
in
adc
push
adc
lock
add
lcall
mov
ret
cmp
sti
ficompl
enter
adc
cltd
mov
dec
enter
leave
jp
xor
sub
dec
pop
jns
or
outsb
cmp
stc
lcall
pop
das
icebp
out
les
or
int
jnp
pop
xchg
pushf
pop
push
mov
ljmp
push
push
sub
icebp
addl
push
stos
push
cmp
jle
xchg
test
dec
lods
dec
cld
inc
xchg
jns
or
mov
mov
fwait
lock
xchg
loopne
mov
or
pop
fcompl
sbbl
pop
cld
fwait
jbe
into
push
push
bound
sbb
aaa
push
push
aam
mov
test
test
ret
inc
xor
daa
in
jns
xchg
movsl
int3
sub
push
shl
ret
lret
and
js
jle
xchg
jnp
add
fistps
xchg
xchg
in
mov
mov
push
cwtl
cwtl
push
jns
push
cmp
std
out
cwtl
out
xor
scas
stc
movsl
sub
jns
cmp
mov
or
mov
jbe
xlat
dec
mov
lcall
jae,pn
movsl
out
mov
jmp
pusha
jg
mov
lret
inc
outsl
lcall
jb
mov
mov
out
decb
mov
jnp
std
pop
adc
add
in
xorb
xchg
xchg
cmpsb
decb
pop
jmp
push
idivl
or
out
test
jo
push
mov
adc
shr
lret
pop
rcll
pop
push
push
add
sbb
jns
das
dec
adc
fdivrs
xchg
stos
pop
push
push
dec
or
mov
pop
arpl
aam
dec
add
adc
repz
xor
or
mov
or
lea
sti
jecxz
xor
test
into
xchg
andb
jp
and
lds
xchg
adc
mov
gs
sub
adc
cli
in
jae
lods
mov
sub
mov
iret
push
popf
sbb
insb
mov
fs
sub
insl
push
imul
jno
mov
lods
add
cmp
or
jg
out
gs
into
sub
insb
cs
xor
adc
adc
inc
ret
out
mov
shl
add
or
sub
mov
shlb
fwait
mov
adc
movsb
inc
inc
out
add
cmp
pusha
cmp
jne
int3
fptan
push
or
hlt
add
inc
arpl
jnp
inc
pop
push
sub
pop
add
mov
push
push
dec
adc
lods
xor
loopne
jmp
js
into
pushf
jae
mov
adc
dec
repz
insb
mov
cmp
add
lret
mov
jbe
pop
jmp
fnsave
xorl
test
aad
stc
mov
ja
insb
mov
cmc
jbe
movsb
add
adc
mov
push
or
aam
outsb
ret
dec
orl
loope
shr
jp
xchg
scas
and
sub
jno
mov
xor
pop
in
jnp
clc
ds
pop
pop
pop
lea
sub
push
dec
inc
dec
xor
int
add
gs
mov
mov
xchg
cli
iret
sbb
stos
pop
aas
dec
push
cmpb
mov
cwtl
mov
test
incl
cli
clc
dec
test
pop
out
repz
mov
pop
clc
fiaddl
rcr
lea
sar
jl
adc
dec
bound
jp
aad
leave
mov
push
cmp
cmp
pop
pop
lret
add
arpl
mov
xor
mov
leave
imul
rclb
push
cmpsb
fpatan
inc
pop
dec
cmp
gs
jmp
mov
aad
lds
int3
or
cltd
idivb
nop
insb
or
sub
stc
push
movsl
sbb
mov
mov
jae
dec
std
pop
mov
std
nop
jge
lods
stos
lahf
xor
sub
inc
and
aam
inc
out
pop
push
divl
push
xlat
push
pop
and
rorl
imul
inc
pop
lods
insb
adc
sbb
dec
pop
jg
lcall
sub
repz
push
mov
jns
addr16
pop
mov
adc
shl
fbstp
lods
inc
dec
jmp
lock
cli
xchg
or
pop
pop
or
je
lret
lahf
rcl
jno
bound
xchg
aaa
mov
mov
sub
addl
out
add
push
hlt
fs
mov
fimull
jmp
mov
sub
es
popa
xchg
subb
fcmovu
andb
mov
sub
xchg
dec
imul
hlt
xchg
xchg
cltd
addr16
push
push
es
ss
fisubs
lret
stc
lret
jl
nop
pop
jae
or
ficoms
inc
mov
inc
sub
test
and
xor
xchg
xchg
scas
sub
in
add
and
ss
xchg
or
dec
popf
aas
test
jns
jge
cmpsl
ret
xchg
dec
xchg
scas
inc
pop
push
mov
ss
fmuls
repnz
sbb
scas
outsl
stos
lret
fld
lret
bound
fdivr
or
shrb
daa
popf
mov
jge
ja
dec
fcomps
mov
cmc
jl
sbb
int
xorb
jl
ljmp
leave
xor
xchg
xchg
add
jle
cmp
sarb
mov
subl
add
inc
mov
mov
fisubrs
push
std
push
ds
js
test
js
jp
lock
add
loopne
inc
xchg
xchg
insb
daa
jmp
lcall
xor
test
sbb
add
jae
add
mov
rcr
icebp
out
popf
sti
jae
pop
or
call
pop
mov
test
cmp
xchg
xor
lods
ret
inc
test
jbe
xchg
xlat
inc
shlb
lds
push
test
dec
pop
into
xor
push
mov
out
push
imul
xor
stos
out
fsubs
add
or
mov
pusha
outsl
fs
insl
and
push
jns
scas
add
dec
inc
and
mov
aam
and
xor
or
add
fwait
insb
add
les
in
int3
ret
and
out
sub
sbb
imul
inc
clc
outsl
cmp
push
lahf
lods
addr16
adc
xchg
int
mov
fdivr
pop
xor
lds
mov
sbb
scas
sbb
pop
cwtl
sub
loop
pop
pop
cwtl
jmp
idivb
pop
test
jl
int3
adc
pop
xor
fisubs
pop
jae
scas
dec
mulb
jae
sbb
mov
in
add
dec
or
pop
or
cmp
fnstsw
fadd
jae
dec
js
mov
les
js
movsl
mov
mov
mov
add
or
movsl
xchg
inc
adc
mov
cmp
push
xor
lret
mov
outsl
mov
rorb
xchg
pop
push
add
inc
jg
mov
sbb
dec
repz
sahf
sbb
xor
test
pop
xchg
sub
mov
xchg
mov
cmp
add
and
jb
inc
mov
xor
xchg
push
push
adc
iret
pop
mov
addr16
jns
bound
ss
jbe
test
bound
jg
inc
scas
mov
hlt
ret
cmpsb
stc
enter
movsb
out
lods
cmp
inc
xor
sarb
insl
or
push
mov
lds
pop
aam
or
std
or
inc
jl
inc
push
pop
mov
fwait
xchg
add
shrl
xor
das
jb
mov
mov
pop
inc
xchg
sbb
xchg
inc
and
jbe
mov
or
mov
nop
mov
es
loop
addb
cld
int3
xor
or
xchg
outsl
add
mov
rcr
jl
mov
cmp
mov
cmpsl
lret
cli
movsb
imul
scas
in
cltd
jp
cmp
xrelease
cmp
push
negl
sbb
cmp
mov
ja
pop
jns
lcall
pop
add
outsl
push
lods
movsl
mov
pop
fimull
xchg
lods
mov
adc
arpl
push
ds
xchg
adc
scas
lea
xor
pushf
sbb
cmp
and
sub
hlt
push
jb
jno
popa
inc
sbb
cmp
push
sbb
add
mov
adc
cmp
paddsb
fbstp
pop
in
movsl
and
jno
test
pop
xor
mov
out
in
cltd
mov
pop
or
pop
nop
call
sbb
or
pop
mov
jle
sub
nop
mov
test
sbb
cmp
cmc
fldt
push
add
dec
push
xchg
pmullw
out
xchg
enter
xchg
aam
shll
jmp
stos
test
mov
mov
jmp
bound
dec
inc
out
es
mov
jne
jle
mov
daa
jle
sbb
mov
cld
in
xor
push
pushf
lea
sti
lods
jmp
push
cwtl
fs
sbb
lcall
pop
scas
sti
fisubl
cmp
gs
xchg
mov
sub
call
xchg
dec
cvtpi2ps
rcrl
psllq
or
jb
sbb
add
scas
mov
je
nop
test
add
pop
loopne
jg
push
mov
push
aad
or
jb
xor
mov
jge
jmp
icebp
lock
sbb
inc
movsb
ss
dec
imul
pop
lea
les
or
movsl
or
sbb
push
jl
push
jbe
shrl
xor
das
mov
mov
test
outsb
mov
add
ret
mov
mov
lret
mov
ficomps
loope
insb
pop
sub
loope
test
pop
and
rorl
push
loope
stc
jae
pop
cmp
xchg
jecxz
ds
sti
nop
fcoms
outsb
push
scas
js
push
push
jl
inc
xlat
pop
imul
xor
clc
sub
push
dec
inc
imul
sub
sbb
enter
push
aam
lcall
or
enter
fistl
fwait
pop
addr16
cmp
jo
fisubrl
jae
xlat
pushf
jge
push
js
xchg
mov
mov
divl
pushf
xchg
test
jns
outsb
cmp
push
jg
mov
or
xor
push
xchg
sub
lds
out
add
adc
jno
clc
fwait
add
arpl
sarl
mov
adc
in
aad
add
mov
push
jmp
adc
orb
lock
ds
sbb
loopne
mov
aam
or
arpl
sub
int3
jmp
fisubl
daa
arpl
popf
jmp
cmp
xchg
push
sti
out
dec
xor
into
repnz
and
inc
outsl
add
push
aad
scas
adc
or
mov
in
dec
sbb
sar
shr
bound
sub
lcall
lods
daa
push
js
je
pop
fistpl
push
shrb
pop
dec
and
imulb
fcoms
cmp
xchg
jno
stc
pop
push
sbb
inc
mov
out
fldl
mov
data16
push
sti
ss
leave
sbb
xchg
loop
add
push
std
push
mov
popf
sbb
sub
push
mov
jnp
aaa
outsl
rorb
mov
fwait
fwait
sbb
sahf
jg
popl
daa
push
mov
jb
scas
in
cltd
mov
fldcw
cs
push
push
imul
sub
fcmovnb
adc
cwtl
and
pop
xor
inc
cmp
pop
add
cmp
shrb
jae
or
jne
or
xchg
sub
sbb
dec
out
adc
stos
dec
cmp
sbb
xlat
mov
mov
sub
xchg
push
mull
sub
dec
mov
xchg
data16
jl
enter
add
cmc
jb
xchg
daa
mov
gs
es
xchg
shrl
mov
cld
mov
nop
lods
fisubrl
cmp
inc
or
or
in
or
mov
add
es
jp
cmpsb
out
pop
idiv
mov
and
cmpsl
pusha
fistl
inc
or
dec
pop
jmp
mov
arpl
mov
xor
jns
aam
ret
dec
xchg
outsl
cltd
adc
and
cli
pop
repnz
mov
or
jl
dec
adc
ficompl
aaa
push
and
vshufps
enter
jp
add
popa
sbb
push
stos
add
mov
push
cmp
xchg
ret
sti
out
cmp
sbb
aad
xor
invd
pop
leave
inc
or
cmp
cmp
mov
jmp
and
dec
sbb
lret
arpl
xor
inc
fisubrs
mov
lods
lea
mov
divl
cmp
lret
loopne
mov
cs
jae
ss
mov
popa
lcall
out
hlt
popf
xor
leave
insl
dec
mov
sbb
scas
outsl
daa
inc
sbb
lods
pop
fisttps
fcoms
add
push
xchg
pop
je
jae
inc
not
into
popl
pushf
es
aas
pop
cmp
mov
push
push
loope
xor
fmulp
jg
pop
test
xchg
sub
add
ret
or
xor
xor
jecxz
add
dec
subl
je
loopne
aad
iret
mov
or
sub
pop
pop
cmc
push
cmc
orl
movd
sub
mov
cmp
ds
clc
mov
mov
scas
pop
popf
lret
icebp
push
mov
adc
push
pop
movsb
jmp
mov
or
daa
popf
xchg
imul
push
leave
xor
pop
mov
jmp
lret
jns
mov
in
add
xchg
jae
dec
jg
out
loope
or
add
aad
push
or
fadds
gs
aad
cld
sbb
fidivrs
out
ss
stc
pop
pop
sbb
push
arpl
in
not
mov
cmpb
dec
xchg
inc
repz
sub
ss
fidivl
cmpl
mov
mov
js
rcl
call
in
lods
nop
in
sbb
jnp
divb
aaa
push
call
mov
fcoml
xor
push
pop
inc
adc
aas
push
sbb
dec
loope
dec
dec
es
mov
shrl
mov
mov
lret
stos
popl
pusha
cmovno
inc
xchg
push
scas
lahf
cmp
adc
jbe
ljmp
testl
pop
inc
imul
aam
xchg
sarl
sub
or
and
les
cmp
out
and
lret
mov
call
xchg
divl
repnz
cmp
fldt
mov
rclb
popf
div
jo
jecxz
mov
dec
push
jmp
aaa
cmpsl
jmp
mov
mov
scas
cltd
aaa
sti
test
xchg
jp
or
sub
cmp
cmpsb
dec
roll
addr16
test
lds
fnsave
xchg
data16
sub
cmp
into
jno
test
aad
or
ja
pop
dec
stos
flds
adc
jo
cs
out
leave
jl
mov
jle
push
jl
jo
ljmp
test
les
dec
xchg
enter
xchg
aam
addl
nop
mov
insl
gs
mov
xor
pop
or
pop
jnp
or
xorl
int3
xchg
push
rorb
mov
mov
jge
xor
xor
and
cs
fsub
int3
test
das
insl
negb
leave
sbb
cmc
inc
xor
push
lock
xor
or
mov
mov
xchg
sbb
pop
mov
inc
cmp
xlat
test
mov
sahf
pop
jp
sbb
cltd
stos
pusha
mov
push
cmpsb
dec
out
sbb
push
mov
xor
je
xor
into
lcall
pop
clc
push
or
sbb
hlt
or
enter
cld
inc
and
pop
jnp
mov
mov
or
mov
test
fnsave
test
adc
cmpsl
adc
pusha
loope
enter
adc
mov
push
stc
cmp
iret
addr16
out
pop
ret
testb
pop
jmp
xlat
rclb
loope
lods
inc
popa
jne
adc
inc
lock
xor
insl
mull
addb
pop
dec
incb
std
insl
add
leave
push
pop
jns
fstps
lret
daa
enter
insl
pop
rcl
imul
mov
arpl
loop
aam
sbb
push
out
mov
xchg
and
pop
das
xlat
movsb
cmpsb
xchg
stc
mov
sub
cmp
xlat
cmpsl
pop
sbb
pushf
into
outsl
and
sub
sub
jae
stos
fcmovnu
adc
ret
sbb
sbb
lea
pusha
sahf
jp
xchg
ja
inc
xor
int
out
lea
jmp
mov
mov
popf
mov
pop
mov
add
push
out
imul
sti
loop
dec
das
adc
mov
daa
xor
mov
xchg
cmpl
pop
mov
inc
das
adc
mov
push
xor
adc
xor
loop
push
adcb
xchg
int3
repnz
sbb
inc
inc
fildll
scas
mov
inc
mov
mov
arpl
out
adc
cwtl
andb
xor
and
inc
movl
or
add
pop
sub
call
dec
lods
dec
dec
imul
in
imul
ret
sub
xchg
in
cmpsb
adc
decb
xor
rorb
lcall
and
sahf
and
int3
jle
in
mov
test
sub
xor
into
std
push
ds
and
xor
sti
test
outsl
andl
in
in
lods
adc
sub
mov
call
outsb
lds
sbb
or
out
mov
lret
sbb
fdivl
call
cmp
popa
cmp
outsl
out
aam
jl
mov
jnp
xor
fucomi
stc
je
test
push
cmc
push
std
xchg
in
mov
lds
mov
stos
dec
push
outsl
or
jne
push
sti
and
adc
in
or
cmpl
mov
inc
rorb
jecxz
in
jo
jg
pop
add
imul
push
mov
xor
int3
or
dec
setns
das
mov
jnp
dec
inc
xchg
sbb
sub
inc
cmp
mov
pop
sub
js
xor
xchg
test
pop
lea
call
stos
mov
loop
fstpt
cmpsl
out
push
out
push
test
ja
pop
or
mov
xchg
mov
push
jb
ds
sti
pop
jae
xor
arpl
mulb
sub
sub
and
add
adc
and
sub
int3
jp
enter
jns
pop
adc
es
cmp
ret
outsl
adc
fs
lret
out
cmpsl
xchg
pop
pop
mov
dec
inc
push
arpl
test
add
aas
adc
ds
ret
ffreep
sbb
dec
cs
cmpsl
sbb
push
push
aad
pop
dec
xchg
aam
addr16
mov
pop
mov
or
dec
enter
jnp
aam
pop
rolb
outsl
cmpsl
lret
inc
clc
jg
mov
cmp
sqrtps
mov
test
dec
cmpsl
mov
loop
xor
testb
aam
xor
push
mov
mov
push
fnstsw
pop
sbb
rorl
leave
jle
jae
cmpsb
mov
outsl
shrb
pop
add
test
int
inc
mov
mov
movsl
xlat
fdivrs
inc
cmp
cmp
or
dec
shlb
dec
movsl
cmp
push
push
xor
cli
imul
rcrb
or
dec
inc
cli
lret
rorb
mov
mov
xor
add
leave
push
sbbb
daa
pop
js
int3
inc
ret
divb
dec
jl
fidivrl
pop
lcall
popf
fldt
jle
push
pop
pop
lock
lods
sar
or
add
adcb
data16
pop
or
popa
addr16
mov
loopne
test
mov
call
push
jle
mov
sbb
sbb
inc
dec
imul
mov
jne
mov
in
cmp
and
out
out
mov
lcall
repnz
add
push
sbb
movsl
inc
pop
push
in
add
rcrb
bound
fs
fimuls
lcall
inc
pop
mov
addb
sahf
sub
outsl
sbb
push
dec
cmpsb
sbb
movsb
or
push
mov
and
aas
and
adc
mov
pop
repz
adc
popa
leave
sti
in
divb
ss
pop
jnp
jecxz
jnp
mov
push
jecxz
aaa
fcoms
enter
pop
pop
ja
and
stos
mov
cltd
movsl
xor
xor
out
stos
fisttps
aaa
test
cmc
cmpsb
scas
div
xor
push
mov
jge
jl
and
ret
loop
inc
sbb
and
pop
mov
test
add
pop
in
or
mov
lods
cmp
jl
lahf
jg
insb
sub
adcl
mov
mov
stc
sub
xlat
repz
pushf
inc
xchg
xchg
mov
lea
or
sbb
mov
pusha
adc
repz
aam
lds
rcrb
xchg
push
jne
mov
sbb
xchg
aam
out
adc
add
imul
insl
mov
xchg
pop
dec
cmp
ror
adc
sbb
inc
push
adc
adc
cmpsb
mov
lahf
xchg
mov
xchg
add
push
inc
mov
leave
ret
inc
adc
fbld
cmp
divl
movsl
cmpsb
mov
inc
out
dec
lods
mov
test
adc
adcb
jb
outsl
sbb
cmp
loope
je
inc
push
rorb
mov
sbb
scas
dec
repz
out
and
lret
cmpsl
xchg
push
jp
hlt
add
sti
push
push
lcall
mov
arpl
mov
mov
fbstp
mov
sub
cmpsb
inc
push
inc
mov
mov
int
mov
mov
sbb
ret
shl
test
mov
notl
sbb
jecxz
lcall
aad
loopne
notb
mov
call
inc
sbb
jno
out
enter
pop
insb
into
in
dec
jb
mov
push
sbb
sub
push
imul
cltd
es
inc
pop
loope
adc
add
adc
pop
xor
adc
movsb
dec
idivb
push
sahf
sub
push
inc
inc
popf
cmp
fbld
mov
push
sbb
mov
push
sbb
cmp
popa
xor
dec
test
std
cmpsb
dec
mov
cmp
movaps
fildl
cs
nop
sub
cmp
mull
push
sbb
push
rclb
mov
inc
push
loop
jb
dec
aad
inc
push
sbbb
stos
popa
insb
movsb
orb
or
movsb
jo
out
lods
in
sbb
sbb
inc
or
loop
push
ds
or
inc
ja
cwtl
rcrl
insl
adc
push
mov
lcall
gs
or
cmpsl
jnp
imul
mov
xor
dec
inc
pop
lcall
imul
in
xchg
out
pop
insl
cmpsb
pusha
xchg
aas
push
cmpsb
popa
push
nop
dec
ret
sub
mov
addl
sahf
push
adc
lcall
hlt
add
jge
aaa
jg
test
lahf
fdivrl
push
dec
cmp
or
lods
and
push
in
testl
xor
mov
mov
mov
stos
xor
mov
sarb
cmp
cld
push
aaa
adc
adc
inc
lock
stc
mov
movb
sbb
xlat
adc
call
sti
or
xchg
sahf
xlat
rcrl
in
cs
xor
enter
xlat
cmp
lahf
scas
repz
mov
fistpll
adc
xor
inc
inc
fildl
ret
or
xchg
sub
out
xchg
stos
lods
test
pop
adc
adc
add
nop
add
mov
test
loop
sub
or
xchg
jbe
mov
js
pop
lahf
movsb
orl
dec
clc
mov
sbb
lret
addr16
int3
lds
pusha
push
cli
pop
sbb
adc
pop
fninit
call
cwtl
mov
jg
rol
mov
jmp
xchg
pop
lret
insb
mov
dec
daa
ficomps
xchg
leave
inc
mov
insb
fstpt
and
sbb
mov
mov
adc
dec
inc
adc
xor
xor
xlat
sub
loopne
imul
jo
out
stc
addl
ret
pop
mov
stos
xchg
mov
xor
int3
or
push
addr16
adc
lock
and
movsb
sub
pop
mov
fcomp
in
js
dec
fists
cmp
or
or
mov
jg
sub
mov
andl
add
add
mov
pop
insl
jo
mov
mov
adc
sahf
cld
dec
mov
push
mov
sub
imul
pop
loopne
outsb
jno
or
or
mov
mov
and
xor
and
xchg
mov
loope
mov
add
loop
mov
ja
push
sahf
cmp
xchg
lret
popf
ds
xor
das
rorl
in
call
inc
jbe
insl
adc
inc
fidivs
icebp
mov
push
adcb
repz
sbb
dec
pop
cli
add
mov
dec
scas
test
call
cmp
ror
bound
pop
add
jl
repz
jecxz
add
sbb
dec
mov
lock
scas
fwait
mov
out
outsl
iret
sub
xor
clc
lock
dec
mov
jl
repz
inc
repnz
mov
xor
ret
insl
addr16
inc
cltd
cmp
dec
pop
vaddss
mov
xor
stc
das
pusha
jecxz
or
sti
sti
dec
inc
mov
ja
cmpsl
inc
jp
pop
xchg
push
out
enter
add
sub
lods
dec
fcmovnb
cmp
and
jnp
sbbb
mov
dec
dec
aam
lock
inc
xchg
inc
and
gs
mov
adc
sbb
push
add
and
in
lock
dec
test
pop
aaa
sub
push
dec
clc
test
pop
mov
inc
ret
pop
xchg
pop
pop
mov
xchg
fdivrp
sbb
add
or
sub
rorl
inc
mov
jp
imul
js
or
xchg
pop
xchg
dec
fmul
lcall
adc
repz
sbb
cmp
push
out
fisttpll
out
in
lahf
fwait
pusha
fyl2xp1
sub
into
scas
or
mov
or
pop
xor
in
adc
movsl
in
in
lods
sbbb
add
in
xor
popf
jno
push
ja
ds
cmp
mov
pop
addb
aad
inc
out
or
jne
pop
dec
push
dec
stc
or
and
pop
jl
adc
jmp
repz
or
adc
dec
or
daa
mov
mov
inc
xor
inc
mov
mov
sub
or
push
jo
cmp
push
out
scas
ret
jb
mov
inc
rol
cmp
sahf
mov
mov
pop
add
adc
jne
pop
aaa
in
pop
dec
cmp
sahf
xchg
xor
inc
jbe
xor
push
rorl
sbb
xor
mov
sbbb
dec
cmp
inc
cmpb
mov
ljmp
sbb
popf
xchg
and
add
add
jecxz
pushf
ss
push
sbb
add
adc
movsb
mov
jl
and
test
xor
sbb
insl
mov
or
mov
and
stc
or
or
scas
cwtl
or
icebp
push
sbb
mov
push
icebp
in
shlb
in
mov
jecxz
push
jns
cmp
ja
xor
ss
icebp
cmc
hlt
ret
fildll
push
sub
mov
mov
sbb
sti
mov
mov
stos
inc
mov
push
xchg
into
adc
cmc
lahf
es
movsl
push
fsubrl
sbb
push
jb
popa
or
cmp
inc
aaa
adc
mov
xchg
xchg
test
or
xlat
fnstenv
push
shl
xchg
lock
lret
movsb
pusha
push
cld
outsb
or
std
leave
cmc
ljmp
xchg
pop
sub
cmp
mov
ja
inc
jo
shll
xchg
loopne
cmpsl
xchg
mov
lcall
ss
xor
subb
pop
mov
dec
push
dec
and
sbb
inc
and
mov
jle
stos
int3
adc
in
sub
mov
int3
in
xchg
fsubr
daa
cld
cmpsl
aam
scas
das
sbb
pop
xor
add
jbe
sbb
inc
xchg
orb
shl
sub
clc
pop
xchg
sub
call
sbb
enter
out
or
xor
xor
ljmp
jno
scas
pop
rclb
jecxz
inc
call
sbb
push
insl
ret
pop
jp
icebp
mov
mov
jnp
jge
cli
mov
adc
and
sub
outsb
jnp
mov
push
sbbl
test
dec
out
mov
int
rolb
jmp
pop
lret
bound
in
xor
pop
shr
pushf
call
inc
dec
arpl
cmpsb
fidivl
repz
dec
loopne
test
sub
cs
push
adc
adc
stc
sub
jge
cltd
mov
outsl
data16
adc
mov
inc
pop
bound
ret
mov
test
test
lahf
leave
jmp
inc
dec
dec
inc
sbb
sti
and
jne
or
push
ja
dec
mov
mov
outsb
sahf
in
ret
add
lea
fdiv
cmpsb
or
xor
arpl
popa
pop
in
je
insb
adc
out
cmp
stc
mov
sub
test
std
dec
call
jbe
imul
loope
xchg
shlb
sub
flds
out
pop
popf
mov
or
int3
mov
jp
test
data16
mov
sti
test
test
pushf
popf
mov
pop
fmul
adc
sub
inc
leave
adc
dec
pop
xor
adc
mov
ret
push
pop
xor
mov
dec
mov
dec
es
jl
aad
loope
test
xor
syscall
aad
leave
inc
mov
add
pop
mov
sbb
lahf
shrl
pop
icebp
sti
xchg
adc
bswap
cli
dec
jno
jge
lea
in
jg
aas
adc
movsb
or
push
mov
push
adc
xchg
jg
movsb
sbb
lret
leave
cmpsl
inc
test
sbb
fbld
mov
hlt
cmpsb
fcmove
mov
jae
lahf
push
aam
sub
mov
mov
sbb
cmovs
rcrb
jle
call
aas
mov
push
pushf
in
add
ja
nop
ror
outsb
movsl
or
pop
ds
into
sub
in
les
sbb
popf
push
mov
sbb
add
add
imul
mov
or
scas
push
cmp
shufps
lcall
sbb
sub
cmc
mov
sbb
repz
xchg
mov
jne
ja
or
mov
in
lcall
das
stc
sbbb
or
add
insb
add
scas
mov
push
nop
out
daa
adc
out
sub
cwtl
mov
into
les
inc
fwait
cmp
ljmp
adc
data16
testb
cmp
xchg
call
sarl
xlat
lea
or
std
push
push
pusha
xchg
sbb
push
sub
push
dec
add
inc
imul
pop
movsb
gs
sub
sub
sbb
div
out
ja
test
xchg
xor
jno
mov
test
sub
inc
fsubrl
pusha
inc
xchg
mov
mov
mov
adc
fnstcw
mov
in
inc
xchg
mov
pop
out
pop
data16
xor
or
pop
cmp
call
std
ja
sub
sbb
xchg
bound
push
cli
pop
adc
loop
xchg
mov
adc
dec
mov
popa
in
xchg
add
add
scas
and
mov
push
inc
fstps
loopne
pusha
test
pop
mov
cli
adc
pushf
movsl
lahf
out
xchg
jl
mulb
out
or
movsb
enter
or
loope
adc
mov
add
mov
cmp
adc
int
inc
stc
xchg
sub
xor
sti
or
in
add
push
sbb
sbb
fxch
mov
aaa
lods
xor
pop
and
ja
negl
loop
jne
cmp
lret
mov
fxch
bound
xor
sbb
int
dec
mov
xchg
cwtl
lods
dec
int
cmp
ud0
jb
adc
loop
mov
xor
sub
and
lods
sbb
mov
sub
cmc
xor
faddp
in
inc
pop
repz
mov
icebp
inc
or
repnz
mov
loop
mov
dec
and
pop
dec
sub
add
mov
sub
pop
aam
rorb
test
pop
inc
fstl
test
dec
mov
jp
nop
idivl
or
data16
adc
jmp
mov
ja
rclb
xchg
mull
dec
imul
lock
add
push
mov
cmp
loop
push
icebp
addr16
push
inc
xchg
outsb
fldt
mov
mov
dec
jl
cmp
mov
popf
arpl
fwait
stos
pop
sti
in
mov
jge
pop
popf
or
push
movsb
cmp
mov
jg
test
mov
movsl
testl
ljmp
ror
arpl
jo
bnd
test
sarl
cltd
push
adc
imulb
jmp
mov
mov
push
mov
popf
outsl
clc
push
inc
push
mov
into
fiadds
or
aas
push
mov
repz
sbb
dec
add
daa
or
and
mov
clc
push
jecxz
jbe
mov
xor
sub
sbb
xchg
inc
cmp
cvtps2pd
int3
sub
cmp
mov
arpl
jo
ljmp
push
fisubrs
jecxz
xchg
popa
cltd
shl
dec
mov
cmpsb
xor
jne
push
push
ss
dec
iret
adc
mov
sub
jge
adc
mov
shrb
mov
imul
mov
mov
add
test
jl
pop
mov
lret
jge
sub
scas
ljmp
test
cmp
xchg
mov
inc
add
pop
movsb
fidivl
scas
cltd
add
sbb
and
cmp
xchg
pop
cmpsl
les
lcall
cmpsb
adc
pop
lahf
mov
push
xor
xor
pop
inc
jl
mov
aad
ret
sub
into
arpl
shlb
or
push
fs
icebp
jle
inc
cltd
orb
inc
nop
stos
jno
sbb
inc
dec
lret
jb
in
jge
clc
cmp
mov
xchg
mov
dec
imul
mov
jmp
pop
lds
adc
stos
cltd
push
daa
mov
pop
cmc
inc
xchg
sub
les
mov
in
notb
lahf
shl
inc
hlt
push
in
popfw
jmp
xchg
or
sub
cld
out
outsl
sbb
pusha
jle
push
mov
jecxz
push
or
push
xchg
jo
xchg
jmp
mov
dec
xchg
mov
dec
leave
adc
stos
sbb
out
lcall
ss
pushl
or
mov
cmpsb
cmp
mov
xchg
jns
into
jge
aad
aaa
mov
aam
in
push
jmp
into
ja
mov
adc
and
sti
out
inc
int3
mov
xchg
rcrb
fsincos
and
push
xchg
jmp
scas
popf
repnz
xchg
jns
imul
xchg
popa
or
std
cltd
mov
mov
jmp
dec
int3
in
mov
pushf
xchg
stc
mov
outsb
mov
in
jno
mov
xchg
dec
cmpsl
fistpl
rol
pop
mov
or
cltd
jge
int3
cld
outsl
ret
mov
lock
mov
cmpsb
data16
dec
mov
or
cld
and
lret
in
jcxz,pt
int
aad
lds
add
xchg
inc
cltd
dec
pop
cmp
fadd
or
sahf
test
dec
push
inc
ja
xchg
nop
std
adc
repnz
push
lds
inc
test
add
das
shll
stc
aam
ja
into
xchg
or
pop
out
cli
ficoml
out
lods
inc
sbb
jae
shl
adc
sbb
cmp
xor
or
mov
push
xchg
cmpsl
cmp
adc
xorl
dec
mov
data16
mov
push
adc
lahf
jle
test
lods
loopne
rcrl
sub
insb
mov
pushf
popa
repnz
jno
dec
xor
xchg
les
out
add
sbb
mov
loop
mov
imul
ret
leave
mul
dec
jne
loope,pt
loope
jp
add
outsb
lock
inc
mov
sub
aad
mov
push
mov
clc
xchg
mov
paddw
pusha
push
pop
and
cmpsb
imull
loop
sbb
sbb
lcall
pop
and
sub
push
or
mov
ret
test
loope
or
fidivl
scas
stos
dec
mov
xor
data16
xor
cwtl
lahf
inc
push
push
cmpsb
addb
pop
mov
in
les
out
mov
mov
outsb
sahf
test
add
iret
sbb
mov
sti
adc
cld
cmpsl
call
insl
pop
sub
addb
sbb
cmpsl
xchg
mov
jnp
cltd
xchg
mull
and
int
and
or
inc
pushf
push
es
out
sahf
fisttpl
dec
pop
repz
ss
fcompl
pop
jmp
xchg
daa
sti
jae
adc
jnp
fildll
ljmp
inc
ret
pop
into
ds
or
mov
mov
cld
pop
dec
mov
inc
in
pop
or
pushf
fbld
push
faddp
cmp
add
sbb
or
adc
mov
insb
daa
lret
adc
sbbl
add
jb
jmp
pusha
mov
xor
lcall
add
mov
push
mov
mov
loopne
fnstsw
mov
idiv
mov
adc
movsl
enter
push
jmp
mov
cmc
xchg
push
inc
ror
mov
cli
sub
pop
neg
jns
pop
in
jns
imul
iret
repnz
and
xor
sub
push
test
inc
sub
mov
insl
cmp
scas
jbe
popf
adc
dec
hlt
mov
test
jl
fnsave
jmp
mov
xchg
add
add
xchg
mov
mov
aas
inc
loopne
xor
push
ljmp
and
cmpsb
bnd
test
ds
in
int
xlat
loop
pop
mov
test
sarb
jns
icebp
inc
cmp
js
repnz
and
lret
mov
inc
or
and
jo
and
lcall
dec
push
popa
popf
loop
ficoms
mov
mov
insb
cmp
movsl
push
push
leave
push
sbb
stos
dec
mov
imul
add
cmp
icebp
sbb
jg
cmc
or
push
lcall
cld
mov
jp
mov
dec
pop
add
cmpsl
sbb
or
cs
fisttps
cmp
loop
dec
push
aam
out
and
xchg
ljmp
popl
inc
addr16
lret
mov
mov
sub
xchg
ja
inc
xor
int
fidivrl
popa
shll
stos
fdivrl
aas
popa
arpl
push
cmp
jns
push
es
incl
adc
insl
fidivrl
negl
incb
push
insb
sub
mov
cmc
jb
iret
or
dec
inc
cmp
pusha
imul
inc
jne
xor
shr
mov
je
shll
out
cwtl
add
loope
mov
and
add
comiss
mov
outsl
pop
int
iret
lock
pop
sbb
mov
outsl
add
inc
mov
push
leave
jnp
sbb
xchg
cmp
cwtl
loopne
mov
push
ss
sbb
jmp
nop
push
sub
pop
pop
outsl
rorb
les
mov
inc
in
jae
sub
cmpsb
jl
mov
sbb
fadds
or
jnp
aas
jle
fildll
add
xchg
pop
out
xchg
clc
incl
adc
or
jb
jb
xchg
shll
mov
movsl
popa
sbb
int3
or
pop
ja
mov
data16
push
insl
jecxz
sbb
lds
dec
pop
push
jae
test
test
pushf
stos
nop
das
xchg
jmp
cmp
es
nop
mov
mov
mov
mov
xchg
cmpsl
push
dec
in
jb
pop
xor
lods
push
inc
in
inc
mov
imull
xorb
jae
loopne
call
push
movl
mov
cmp
std
jnp
notl
pop
cmc
daa
scas
bound
popa
push
fisttps
or
and
cltd
lret
push
mov
fs
test
push
js
arpl
ret
and
add
data16
pushw
call
inc
sub
adc
call
adc
ss
test
mov
mov
and
jl
lock
inc
sub
pushf
stc
data16
push
into
movsl
dec
popa
aas
cld
mov
mov
shrb
jg
and
fucomi
cmp
clc
sub
int3
push
movsl
mov
movsb
xchg
sbb
testl
sbb
leave
fdivl
pop
aas
and
popf
mov
cmpsl
ljmp
dec
les
push
pop
js
or
sbb
sub
cpuid
std
shlb
or
movsb
push
add
pop
push
stos
data16
ljmp
mov
or
inc
das
sbbb
fucomi
xor
out
mov
xor
dec
cmp
mov
pushf
mov
leave
movsb
mov
or
aam
scas
add
push
fisubrl
test
rol
hlt
mov
mov
arpl
sbb
cmc
push
adc
cmp
fbstp
dec
inc
mov
and
cmp
adc
jg
mov
imul
stos
xchg
sub
push
mov
dec
sbb
cmpsl
movsl
aas
mov
test
sbb
cwtl
xchg
sbbl
dec
sub
mov
rcll
jnp
xchg
and
in
dec
xchg
jp
sub
xchg
not
dec
sbb
out
adc
sbb
out
shlb
cltd
cmp
je
xor
dec
cmp
cmpsb
rorl
sbb
jl
sub
pop
xchg
push
jge
lcall
pop
or
add
mov
out
mov
add
out
push
xor
pop
pop
pop
popf
and
xchg
cld
jnp
stos
shr
mov
dec
in
xor
fistpll
loopne
push
dec
xor
lods
loopne
fs
xchg
cmpsl
dec
dec
out
cld
gs
and
or
add
jno
sbb
sbb
cmp
and
xor
pop
cmp
bound
mov
cmp
fcompl
lcall
lret
jae
std
jge
or
adc
lahf
mov
add
dec
mov
or
or
jg
mov
jge
scas
ror
inc
and
cmp
subb
lret
nop
loope
in
test
pop
clc
inc
xchg
or
sbb
xor
aas
fnstcw
imul
and
dec
mov
call
xor
ds
enter
mov
rorl
push
pushf
inc
aas
lea
xor
adc
in
and
test
fisubl
data16
test
cmp
cltd
sarl
add
sub
lds
fidivl
mov
aam
insl
pop
cltd
scas
mov
mov
pop
xor
loop
and
in
push
xor
aad
pop
pop
fnsave
jnp
loope
jnp
imul
add
mov
aad
cmp
pop
inc
ljmp
add
jl
outsb
dec
jg
xchg
mov
les
movsl
xor
popa
mov
insl
data16
adc
xor
push
mov
sbb
sbb
mov
mov
mov
lret
fsubrs
mov
pop
pop
or
fldcw
loopne,pn
cmc
aam
stos
adc
out
sbb
cmpsb
fbld
shll
movsb
jg
dec
push
mov
push
cmove
in
push
pop
pushf
push
pop
push
and
test
call
out
daa
jmp
jno
mov
xchg
loope
gs
mov
pop
in
and
outsb
shlb
icebp
pop
sarl
dec
loop
mov
leave
pop
sbb
or
sbb
inc
lret
mov
aam
sub
xor
mov
or
jns
push
inc
push
xor
leave
aad
sbb
sub
jnp
jl
les
mov
jbe
lds
pop
div
mov
sub
sbb
add
pop
loop
lret
aad
stc
add
xchg
in
inc
leave
aam
pop
pushf
call
dec
test
or
and
mov
das
fcoms
repz
ret
cmpsl
imul
cs
xor
sbb
stc
jge
imul
xor
sti
inc
lret
or
lods
out
push
out
icebp
jb
pushf
add
fidivrl
jns
pop
and
cmp
mov
lea
inc
out
fists
call
out
ja
mov
aad
ljmp
mov
dec
ja
aam
xchg
cmp
int3
or
stos
insb
xchg
test
cltd
xor
ja
std
cmp
mov
int3
popa
sbb
xlat
add
xchg
cmp
cmp
test
imul
pop
mov
in
mov
mov
sbb
lcall
mov
push
pop
bound
mov
dec
lock
inc
mov
repnz
in
xor
xor
shlb
aam
mov
movl
cmpsl
fwait
shrb
arpl
in
mov
jo
out
mov
jo
stc
jne
mov
dec
xor
dec
lret
loope
inc
outsl
dec
shll
iret
push
popf
xor
js
sbb
push
pop
lcall
outsb
insb
cmp
repnz
arpl
cmp
ret
xlat
xor
sbb
inc
nop
add
dec
hlt
pop
shll
mov
iret
pop
mov
mov
ret
ljmp
daa
ja
add
add
push
jns
mov
sbb
and
add
clc
out
fistpl
imul
dec
inc
fcmovnb
mov
outsb
mov
mov
sbb
cmp
mov
mov
out
js
out
xchg
jmp
cli
je
stc
in
aad
sti
scas
inc
shlb
sbb
loop
imul
mov
nop
and
mov
imul
arpl
out
pop
das
pop
or
and
dec
adc
and
sub
jbe
pusha
dec
imull
inc
cltd
outsl
adc
daa
lods
push
mov
pop
loope
sub
lock
idivl
mov
mov
sub
inc
popf
mov
lahf
bound
or
in
aas
pmuludq
mov
es
jno
movsl
pop
iret
or
sub
sub
popa
lcall
xor
imul
aaa
pop
and
sbb
dec
or
and
call
lret
add
popf
xchg
js
shll
sub
add
dec
dec
jb
add
push
movsl
xchg
repz
fcmovnbe
nop
pop
lret
clc
fdivp
cmc
call
dec
jnp
xchg
repz
mov
and
testl
dec
stos
cmpsb
js
lret
ljmp
in
int3
das
push
rcr
sbb
mov
jb
pop
inc
mov
nop
jae
js
jecxz
pusha
mov
sbb
arpl
hlt
leave
and
sub
scas
rcl
sbb
leave
or
scas
pop
push
xor
cmp
lock
int3
push
jae
dec
in
std
jecxz
mov
sub
mov
subl
adc
xor
jo
mov
sub
test
stos
sarl
inc
or
jmp
fidivl
pop
jns
jge
xchg
test
divl
stos
inc
pop
stos
dec
into
pop
jb
inc
dec
sbb
mov
mov
psubsw
mov
sub
pop
test
sarb
lahf
stc
aad
jge
jno
jno
popa
dec
push
push
ljmp
pop
mov
jnp
adcb
xchg
cmpsb
sahf
stos
xchg
cmp
cmc
std
inc
mov
out
mov
ss
outsl
stos
add
push
mov
cmc
jle
test
and
sarl
aad
shlb
ss
push
rol
ljmp
in
xor
in
ret
nop
rolb
ror
pop
adc
or
jne
repz
imul
das
scas
inc
lock
sub
ljmp
imul
out
pop
add
stc
adc
mov
xor
insb
sub
fimull
hlt
xor
das
jae
js,pn
inc
test
pop
cmovg
lods
rorl
insl
push
pop
mov
hlt
in
adcb
inc
cmp
cltd
dec
inc
jae
mov
inc
sub
pop
xchg
rcrb
add
mov
popa
hlt
xchg
test
jmp
ljmp
mov
fistps
push
dec
and
and
sub
sub
movsb
mov
clc
mov
fwait
nop
aam
dec
mov
push
adc
and
fildll
jne
inc
dec
adc
ret
pop
mov
add
stc
jl
pop
inc
icebp
sbb
add
or
and
mov
sbb
add
jns
and
lock
push
mov
gs
jae
cwtl
mov
jg
inc
jnp
pop
rcrl
and
xor
add
subb
js
mov
mov
into
cmc
mov
insb
out
test
xchg
mov
xor
into
iret
mov
push
mov
mov
mov
jmp
int
icebp
sub
mov
fisttpl
fcmovbe
mov
jnp
loope
pop
xchg
loope
iret
push
ret
shll
push
cmpsb
jmp
push
pop
sbb
test
mov
jecxz
push
mov
xorb
inc
insb
xlat
and
mov
xor
xchg
pop
repz
insb
aam
pop
cmc
and
pop
lahf
jp
jae
out
xor
scas
xor
cmpsl
seto
outsb
mov
push
in
ss
jl
jno
pushf
cmpsb
aam
std
imul
sarb
outsb
sbb
sahf
or
or
jae
into
or
sub
mov
in
adcb
jge
push
sub
test
xchg
xorl
dec
jo
mov
scas
inc
stos
inc
jo
xor
sub
aad
int3
adc
int
pushf
iret
jmp
push
sbb
dec
fisubl
and
stos
adc
xchg
aas
mov
lock
cmpsb
inc
imul
outsl
cmp
arpl
test
aaa
pop
xchg
dec
lods
push
lds
or
lahf
and
inc
ljmp
aas
and
mov
jmp
mov
daa
ret
jge
jbe
jecxz
fmuls
sub
adc
cmpsb
mov
ljmp
jb
aam
xor
mov
pop
repz
lcall
cwtl
lds
pop
inc
cmpsl
add
movsl
cmp
pop
fwait
dec
pop
mov
jbe
sbb
and
mov
bndstx
leave
inc
gs
jp
mov
jle
jp
mov
bound
sbbl
mov
mov
fildll
das
sub
aam
mov
inc
push
sahf
les
push
aaa
faddl
jb
pop
sbbb
aaa
xchg
cmc
mov
xchg
dec
xor
jno
jl
sbb
outsl
loopne
or
jge
jnp
scas
and
ds
cmpsl
dec
in
push
pop
mov
push
and
cltd
dec
mov
dec
add
out
rol
addr16
cmp
adc
push
adc
push
inc
and
mov
divl
inc
movsl
cmp
gs
inc
adc
fisttps
lcall
sub
pushf
call
dec
stos
mov
test
xlat
lods
pop
add
or
or
xchg
push
push
sub
push
flds
pop
mov
inc
out
dec
es
push
stos
out
xchg
in
outsl
les
push
cmp
in
ret
inc
jne
jbe
mov
inc
inc
cmp
pop
insb
jg
lret
ds
lea
jp
iret
mov
pop
jmp
adc
adc
push
pop
sahf
mov
dec
and
test
jno
jnp
fdivl
push
pop
lods
mov
filds
mov
push
repnz
test
xchg
or
xor
subl
pop
in
inc
lods
outsb
xlat
shr
rcrb
cmpsl
push
decl
orl
add
cmpsb
cmp
sub
or
push
gs
div
es
stos
xchg
or
inc
dec
push
hlt
pop
fcmovu
dec
inc
loopne
loopne
and
push
popa
test
loop
add
sti
jbe
sahf
adc
rorb
pushl
jg
mov
push
aaa
icebp
dec
and
mov
je
filds
and
rcrb
sub
rcll
int3
cmp
adc
mov
ret
xor
mov
jae
xor
fnstenv
and
ds
push
sbb
jg
cmpsl
inc
data16
mov
xor
bound
push
mov
loope
stos
fwait
mov
loop,pt
repnz
pop
push
adc
push
jge
pop
out
mov
stos
jp
jno
mov
ret
fcomps
mov
push
jge
inc
mov
pusha
jbe
andb
inc
outsl
sbb
fcompl
xor
and
enter
loopne
in
mov
dec
sub
cld
mov
pop
push
mov
or
jecxz
cmc
and
js
and
fisttpll
sub
push
add
or
sub
jp
inc
test
cmp
ret
pop
pusha
mov
les
notb
jmp
mov
push
xchg
mov
lahf
leave
pop
push
jecxz
xchg
outsb
aas
pop
xchg
hlt
icebp
insl
jo
aas
push
gs
nop
cltd
push
fisubrl
cmpsl
sub
ret
jle
cmp
ficompl
lods
enter
das
lret
xchg
jl
lds
pop
pop
in
or
fists
sbb
loopne
icebp
hlt
xchg
push
mov
scas
push
inc
in
and
push
push
and
cmpb
xlat
stos
or
aad
sub
add
push
aas
test
mov
xchg
pop
mov
mov
jnp
mov
aam
es
mov
add
mov
icebp
lock
dec
lods
pop
push
add
cmpsb
fnstcw
lahf
push
aas
lods
mov
filds
repz
pop
lods
cli
enter
and
xor
dec
std
test
jge
mov
insb
mov
mov
enter
pop
jnp
daa
inc
in
xchg
dec
mov
sbb
cltd
mov
add
push
stos
aas
out
adc
std
int
jnp
daa
scas
or
int
les
imul
cmc
push
push
mov
xor
sarb
push
sahf
sbbl
sub
sub
adc
dec
data16
xchg
add
push
dec
xor
mov
aam
add
push
pop
shrb
ror
fmuls
inc
inc
inc
pop
inc
data16
jl
lcall
push
push
jmp
mov
into
jno
cwtl
sub
lret
pop
outsl
adc
movsl
imul
cmpsb
dec
xchg
retw
adc
je
and
xor
mov
out
sub
mov
arpl
fistps
cmp
aas
test
push
enter
sbb
icebp
jns
and
and
xor
or
ja
pop
and
and
sub
clc
negb
loopne
and
mov
aam
sub
lret
add
sub
pop
xor
pop
fmull
pop
rcll
mov
dec
jle
shll
lds
faddl
fnstcw
fisubrl
dec
or
push
or
mov
stos
out
xchg
and
lret
in
and
pop
inc
sti
fucom
dec
fs
pop
inc
inc
addr16
outsl
sub
loope
hlt
ljmp
daa
les
jmp
jns
lret
fistpl
xchg
jne
sub
cmp
or
fldl
sbb
lods
insl
jo
inc
cli
push
mov
ret
in
pop
cmpb
xchg
pop
adcl
xchg
jmp
inc
jnp
jno
mov
xor
pop
aad
pop
mov
lret
xor
mov
cmpsb
push
cmp
movl
push
ljmp
and
and
fsts
push
ret
mov
ret
cs
mov
outsb
cmp
cmp
es
repz
mov
push
mov
xor
xchg
call
xchg
insb
rorl
stos
jb
inc
lret
and
add
fdivl
loope
add
test
cmpsl
or
insb
shrb
arpl
jbe
ficoml
xchg
mov
push
add
lahf
sbb
in
adc
inc
push
lods
js
stc
test
pop
push
daa
jl
cmpl
ljmp
add
decl
or
inc
test
ss
or
cli
clc
xchg
lahf
test
sbb
mov
stos
mov
imul
cmc
pop
dec
int
or
cld
sbb
dec
jo
or
std
mov
jae
out
fwait
dec
sub
mov
adc
lods
cwtl
iret
das
std
sbb
in
call
inc
cs
push
pop
mov
aam
mov
inc
sbb
mov
dec
inc
mov
aas
test
sub
lret
out
stos
jg
sub
lahf
leave
cmpsb
sahf
or
jne
movsb
xorb
inc
sahf
bound
ss
cltd
fdivl
xchg
sub
sbb
scas
or
dec
les
mov
mov
xorl
addb
add
in
icebp
test
repz
sbb
push
sub
cmp
incb
push
jge
pushf
push
cmp
shll
inc
das
out
mov
test
out
int
mov
ret
inc
popf
popa
into
pop
shlb
fld
sbb
div
in
cltd
ds
jp
add
mov
lock
mov
in
cmp
mov
mov
sub
out
cmp
lds
add
arpl
sub
mov
or
sti
pop
out
mov
push
testb
fidivrs
xchg
mov
jmp
xor
negl
xchg
pop
mov
push
shlb
add
movsb
les
test
mov
popa
cmpsl
ljmp
cmc
mov
cmpsb
add
and
jbe
outsb
adc
pop
mov
aam
ficoml
or
mov
enter
sbb
jle
fildll
adc
or
mov
pop
dec
xchg
mov
jnp
dec
add
iret
pop
ret
cltd
xor
mov
sub
test
pop
xchg
out
mov
xor
fucomi
adc
push
ret
jge
dec
popf
jp
mov
adc
rcr
jne
cmpsb
rclb
xchg
xchg
jecxz
xor
fld
xor
data16
and
movsb
pop
push
adc
ret
loope
xchg
adc
aaa
mov
es
mov
push
mov
jle
and
fwait
into
mov
fisttpl
inc
sbb
sbbl
jns
in
mov
sbb
inc
call
out
mov
mov
add
sbb
aas
mov
pushf
adc
fdivr
les
popa
mov
xchg
das
inc
dec
les
xchg
shr
filds
stos
add
cmp
sbb
stos
dec
insl
test
jge
nop
lds
ljmp
jnp
aam
and
fidivs
cmpl
and
mov
push
loopne
or
push
cwtl
ficompl
movsl
and
rcll
jns
sbb
repz
les
cld
test
fs
icebp
cmc
push
xchg
mov
in
out
fsubp
mov
cmc
scas
stc
ljmp
mov
in
xor
push
addr16
sbb
in
mov
mov
cmc
out
xor
push
fs
push
dec
or
sbb
pop
outsl
es
mulb
mov
jecxz
je
fdivrs
mov
testl
test
das
fs
lret
jecxz
cmc
inc
insb
stc
dec
rcr
adc
cmp
cs
jo
push
std
lods
fbstp
pop
orb
sahf
inc
jmp
jb
xlat
dec
add
pop
adc
or
int3
and
fs
and
fldcw
dec
scas
lret
push
cmc
sub
loope
cld
jo
mov
shrl
jb
adc
cmp
push
in
sarb
movsl
and
fcoml
jb
popf
into
pop
test
repnz
outsb
sahf
adc
bound
faddp
lods
fsubl
fwait
lock
not
xor
xor
sti
into
push
mov
test
cmp
rcl
cmp
out
xorb
sbb
incl
add
test
call
or
fisubrs
insl
push
mov
cmp
ds
inc
outsl
jle
cs
mov
gs
and
sub
sub
or
aas
outsl
pop
insb
fwait
scas
out
add
shl
lahf
push
sbb
pushf
cli
in
mov
cmp
mov
cs
cmpsl
decb
push
aam
call
mov
push
lret
int
pop
mov
aam
inc
sbb
mov
shrl
jmp
mov
jle
xchg
push
cwtl
jge
cmp
jge
test
loope
ljmp
fs
lret
inc
inc
sbb
mov
pop
lahf
jnp
test
andb
lcall
mov
ss
aam
xchg
outsb
sbb
icebp
les
cld
lds
mov
inc
out
mov
subb
push
adc
pop
jne
sub
movsb
mov
adc
cmp
mov
mov
fists
rcrl
std
jl
xlat
add
push
jo
dec
push
stc
dec
sbb
in
and
and
test
lds
sub
or
cli
cmp
ja
xorl
sti
sub
lea
lret
lcall
push
in
xor
lods
dec
lret
jmp
dec
jl
icebp
pusha
mov
fs
lret
out
dec
jmp
jb
lea
lahf
pop
push
sub
xor
pusha
mov
cmp
imul
jl
lret
jp
mov
sbb
xchg
lret
pushf
xlat
lret
insb
cmp
scas
ret
cwtl
outsl
inc
inc
dec
mov
xchg
lret
outsl
jle
movsb
jmp
inc
cwtl
movsl
dec
iret
and
mov
and
mov
aam
outsb
mov
cmpsb
rcrb
sbb
xor
xchg
mov
leave
inc
enter
inc
mov
mov
ret
test
xchg
int
push
mov
je
aam
pushf
push
inc
sub
adc
xchg
cmpsl
mov
mov
rorb
dec
in
dec
cmp
ss
or
stos
push
jg
cld
loope
sub
cmp
jne
jb
adc
sbb
cli
pcmpgtd
jno
stos
pop
mov
out
sti
cmp
pop
xlat
scas
jnp
xchg
and
sti
movsl
mov
cmp
int
push
xchg
add
clc
and
lahf
and
sbb
pop
xlat
push
mov
xor
inc
loop
push
xchg
mov
ds
cwtl
push
lds
clc
insl
jns
loopne
outsl
cmp
cmp
imul
addr16
ret
subl
sbb
sub
pop
add
roll
mov
test
xor
test
xchg
aaa
xor
daa
pop
stc
and
ret
and
push
das
sub
xor
fidivrs
mov
mov
sub
and
or
adc
mov
inc
scas
gs
mov
mov
mov
push
ftst
addr16
ja
add
test
sbb
mov
sti
shr
adc
inc
sub
adc
dec
faddp
or
and
imul
fdivrs
mov
aad
xor
outsl
icebp
sbbl
mov
mov
adc
ficoml
xchg
mov
notb
sbb
cmp
les
and
inc
sarl
adc
jo
or
outsb
pushf
ret
mov
iret
xor
mov
out
movsb
dec
ss
sub
pop
mov
ljmp
pop
les
mov
test
xor
jb
icebp
and
push
push
mov
lret
movl
adc
mov
mov
in
jbe
jne
and
scas
scas
loop
sub
mov
xchg
arpl
xchg
enter
int3
lcall
jmp
xor
pop
add
push
cmp
or
add
jge
xchg
aad
lret
push
in
out
and
in
in
rcll
or
lock
jne
out
pop
repz
nop
mov
loop
sbb
push
rolb
add
inc
into
shll
add
ss
movsb
cmp
jge
mov
jle
shlb
mov
mov
pop
bound
adc
es
mov
or
or
and
mov
mov
inc
mov
fsubr
mov
adc
sti
push
fsubrs
adc
dec
cmp
xchg
push
in
test
cmp
cmp
sbb
inc
in
outsl
lock
cs
cmp
lods
js
cld
cli
mov
lret
xchg
test
movsb
fstp
inc
add
pop
int
pop
xlat
mov
packssdw
jne
inc
iret
sbb
xchg
xor
out
lds
lds
movsl
stos
dec
insl
xor
cmp
push
aam
or
and
lods
xchg
cli
loope
jns
fidivl
xchg
xchg
adcb
add
jg
mov
mov
adc
aaa
in
mov
orb
add
insl
jns
rcrl
mov
cmp
in
pop
jo
or
xchg
xor
or
and
sub
or
jecxz
rclb
mov
out
mov
or
dec
lret
dec
iret
bnd
les
iret
insb
in
and
sub
xchg
adc
pop
and
icebp
add
xor
nop
mov
cmp
mov
imul
inc
lds
inc
fidivs
fcos
sbb
jecxz
test
leave
and
or
push
adc
mov
cltd
push
in
pop
push
or
lods
negl
popa
dec
jno
dec
fdivs
cld
jno
nop
fs
js
movsb
pop
outsb
cwtl
and
nop
ret
add
jecxz
lock
stc
sbb
inc
push
repz
lahf
ss
out
xor
push
add
mov
ja
call
mov
cmp
in
or
sbb
lcall
or
in
pusha
cmpsb
cli
inc
testl
cli
addr16
xor
in
gs
jnp
add
sbb
inc
mov
popa
inc
ds
in
and
and
mov
jnp
sahf
lret
fldcw
sub
stc
dec
jmp
ss
mov
dec
js
jle
stos
int
xor
mov
dec
es
adc
lcall
inc
incb
cmp
mov
dec
or
lahf
pop
es
dec
int3
movswl
pop
cmp
test
in
in
bt
cmp
mov
pop
shr
pop
sahf
xchg
xchg
jecxz
cli
notb
xchg
cli
mov
lahf
dec
dec
andl
pop
or
fs
roll
fnstenv
or
cmpsb
jne
leave
es
mov
lock
in
and
int3
push
imul
mov
call
mov
shlb
stc
in
movsb
adcl
adc
movaps
clc
adc
xchg
stos
pop
mov
leave
loopne
pop
push
lahf
movsb
jnp
lods
int
pusha
xlat
mov
inc
leave
insl
xchg
dec
das
stc
and
call
cmpsb
cs
cmp
push
pushl
sbbb
mov
sarl
aad
push
xchg
arpl
sbb
xchg
fwait
aad
jp
in
push
dec
fucomp
adc
jge
inc
pop
cld
fnstcw
jae
inc
mov
dec
es
stos
dec
xchg
xor
mov
or
cmp
xchg
sahf
sbb
add
sbb
pop
sbb
dec
sbb
test
cmp
shll
outsl
jecxz
jae
jle
jo
push
rcl
fisubrl
and
rol
sbb
sub
test
push
mov
or
mov
push
ss
adc
sub
mov
lcall
mov
lea
int
clc
cmp
fmuls
imul
mov
xor
pop
dec
mov
inc
cli
movsb
push
mov
xor
test
mov
sbb
fcmovu
lock
leave
inc
rcrb
in
into
outsl
das
stos
mov
sub
in
lahf
pop
call
sub
push
mov
ja
xchg
add
jle
gs
sbb
scas
loopne
aam
insb
cmp
popa
sbb
sbbl
int3
and
push
xor
jmp
push
ja
add
jp
addr16
insl
mov
mov
inc
jnp
xchg
push
je
jge
pop
jo
lret
mov
lods
scas
orl
test
or
or
jecxz
out
pop
mov
rorb
jnp
mov
fnstsw
mov
stos
andl
adc
subb
andb
jecxz
jnp
fmul
mov
cmp
mov
jl
adc
mov
cmp
dec
icebp
nopl
pop
xor
aam
loopne
sbb
arpl
in
scas
gs
loope
iret
je
movsb
push
int
push
aas
dec
scas
sub
jns
inc
ljmp
pop
jge
out
push
mov
gs
lods
adc
addl
into
mov
cmp
aaa
incb
sbb
xchg
dec
int3
pop
lret
lahf
pop
addr16
adc
push
mov
push
mov
pop
out
jecxz
sub
sbbl
loope
mov
inc
test
fdivrl
dec
icebp
std
or
test
pop
fisubrs
nop
pop
cltd
push
pop
cmpsl
fimull
rcr
ljmp
pop
dec
les
cmp
sub
push
cwtl
sbb
jl
inc
mov
rcl
dec
stc
test
cmp
mov
cmpsl
mov
jmp
adc
stos
in
js
jmp
adc
aam
notl
cli
popa
shl
mov
lea
fsubr
push
add
or
pop
lock
push
cmp
pop
fisttpll
cmp
jle
testw
and
push
sub
add
pusha
push
inc
ja
push
add
fwait
push
lret
xchg
dec
add
and
sbb
push
dec
adc
cmp
lds
push
or
cld
jle
xor
fdiv
ljmp
loope
pop
adc
ss
adc
push
test
cltd
mov
adc
mov
inc
pop
push
shll
jle
mov
pop
jecxz
jns
shrb
sub
cltd
add
inc
mov
mov
in
mov
int
mov
clc
cld
mov
frndint
mov
jmp
scas
aad
inc
addr16
dec
lds
mov
fdivrl
push
in
inc
push
dec
popf
xchg
in
add
test
outsl
sub
inc
sbb
aam
sub
insl
cld
and
es
jg
cmp
adc
ja
jnp
sbb
loopne
incb
xor
popf
iret
insb
lcall
ret
es
movhlps
call
push
sub
ret
sub
ret
in
xchg
cmp
scas
fdivrs
lds
in
mov
inc
pop
and
cltd
inc
adc
add
out
mov
mov
inc
out
cwtl
sahf
jne
dec
imul
fimuls
hlt
pop
cld
addb
loope
sub
fidivl
sub
xor
cmc
mov
xchg
jo
sub
mov
xlat
lock
sbb
mov
pop
fcmove
nop
imul
je
mov
pop
scas
test
cmpsl
das
jno
push
mov
sub
ljmp
cmp
leave
movsb
cmp
add
cmp
push
js
jo
out
and
inc
dec
mov
or
fnstenv
jnp
jmp
push
bnd
movsb
gs
inc
jle
mov
or
add
pop
addr16
roll
xor
pop
push
adc
cvtpi2ps
fists
pop
xchg
in
sbb
out
fs
mov
idivb
das
adc
sub
or
outsl
adc
mov
orl
ljmp
and
mov
mov
fstpl
pop
ljmp
int
lret
jecxz
enter
pop
rcrl
jl
mov
mov
add
out
jne
std
in
adc
stos
mov
add
cmp
push
insl
mov
inc
mov
jne
jne
ds
lds
lock
pop
push
mov
ja
pop
test
add
and
repnz
lret
xchg
ljmp
cmp
mov
rcl
das
mov
mov
mov
adc
sbb
sbb
lret
aad
cltd
test
sti
inc
inc
inc
dec
xlat
sarb
xlat
add
repz
jnp
add
fsubrl
push
mov
test
aad
ficomps
mov
sub
pop
push
int
aas
jb
outsb
push
ljmp
and
add
inc
xchg
movsb
in
mov
jecxz
cli
sbb
in
repz
xchg
xchg
fwait
jnp
test
jl
xchg
hlt
inc
add
adc
aad
xor
mov
jb
jns
in
dec
les
iret
sbb
cmp
xchg
daa
or
fstps
lea
cmp
test
aam
add
je
and
repz
sub
sar
lods
dec
out
lock
sahf
mov
sub
pusha
jne
repnz
mov
push
sti
pop
loopne
push
jg
mov
stos
mov
dec
mov
insb
scas
aad
mov
loope
xchg
sub
push
mov
cmc
xchg
sbb
mov
xchg
xchg
stos
lcall
mov
fnstsw
adc
cs
sahf
mov
and
gs
rcl
scas
int3
push
scas
jns
popl
test
out
es
jae
push
enter
call
lret
fstpl
fsub
fbstp
ret
test
and
jo
add
jae
jne
mov
inc
mov
lods
mov
push
xor
arpl
add
or
in
out
pop
jp
adc
lock
cli
aam
mov
scas
mov
test
mov
insl
mov
cmpl
pop
xchg
insl
mov
aad
int3
and
pop
mov
add
loope
dec
mov
cmc
ljmp
adc
cmp
pop
push
and
push
sub
dec
mov
in
fstpl
popf
push
inc
pop
and
movl
ds
call
sub
insb
popf
lret
clc
ret
fwait
stos
add
and
cmp
jne
fadd
push
dec
cwtl
inc
outsb
divb
dec
ret
int
idivb
mov
add
jae
dec
inc
xchg
movups
lcall
inc
mov
xor
fadd
dec
cmp
mov
mov
sub
add
movsb
cmpl
imul
les
xor
push
xor
rcl
add
mov
mov
ret
shl
lcall
loop
mov
mov
mov
int3
jle
je
add
cltd
sub
jle,pt
and
xor
stos
lds
daa
mov
cmc
in
and
imul
loopne
jno
lds
out
inc
loopne
xchg
push
test
jns
mov
mov
mov
ljmp
imul
loopne
pop
fcmovb
xor
gs
repz
mov
aam
fucomi
or
adc
jle
lcall
lods
push
adc
dec
das
rcrl
ret
pop
incb
push
dec
pop
sbb
test
fsubl
fisubrs
imul
dec
aam
xchg
imul
cmpsl
ud2
cwtl
jb
sti
data16
into
add
out
pop
add
jge
and
and
dec
lea
or
pop
adc
mov
pop
inc
les
mov
das
add
cmp
insl
in
mov
xchg
mov
testl
pop
int3
js
inc
icebp
jo
lret
ljmp
or
in
dec
repz
push
addr16
cmc
cld
mov
testl
mov
rol
fwait
insl
int3
popa
jle
arpl
repz
xchg
inc
inc
mov
xchg
adc
mov
or
inc
movsl
rorb
dec
add
jbe
out
jnp
push
xor
sbb
dec
arpl
add
push
mov
pushf
add
decl
je
xlat
dec
sbb
out
pop
dec
mov
sbb
repnz
movsb
test
mov
dec
sbb
push
sub
jno
roll
jmp
outsl
cmp
dec
shr
pop
mov
ja
inc
clc
enter
dec
daa
xlat
dec
xchg
adc
fsts
aaa
jnp
cmc
lods
scas
les
cltd
push
icebp
ljmp
pop
cwtl
xlat
fucomip
push
call
pop
inc
das
inc
mul
xchg
je
jmp
jle
out
xor
loop
mov
mov
sbb
sbbb
fnsave
out
push
and
sti
xchg
mov
pop
mov
imul
dec
icebp
fnsave
xor
shll
jmp
push
xchg
scas
xchg
lret
pop
das
out
sahf
mov
arpl
cmpsb
add
out
in
movsb
pop
imul
int
lods
notb
popf
aad
lret
leave
xor
inc
jo
repnz
sbb
cmc
fbld
adc
icebp
mov
cmp
int3
lret
xchg
insl
aad
dec
inc
subl
push
in
fldenv
or
inc
mov
xorb
ss
mov
out
dec
scas
fadds
or
call
jp
pop
adc
in
aaa
lock
inc
add
jnp
push
cmp
mov
and
mov
dec
ret
xchg
mov
mov
inc
in
pop
fildl
add
jbe
stc
loope,pn
shr
push
fwait
mov
adcb
adc
jns
push
nop
and
scas
pusha
in
xor
outsl
ret
inc
mov
pusha
mov
pop
test
add
jmp
xchg
scas
sbb
jns
inc
or
faddl
fcompl
inc
or
mov
xchg
loopw
mov
push
rolb
dec
xchg
xor
outsb
cmp
mov
xchg
mov
mov
jb
xor
mov
popf
fildll
cmp
ficompl
and
mov
pop
and
in
inc
inc
repnz
ret
inc
negb
or
pushf
aam
cmpb
outsb
jnp
cmpsb
out
mov
rcl
fnstsw
clc
scas
popf
inc
fwait
es
mov
je
adc
fstl
pushf
sub
inc
xchg
fcmovb
mov
mov
adc
ja
cmpsl
out
or
mov
jl
and
hlt
ja
jne
add
jg
adc
lea
xchg
xchg
outsb
push
in
call
gs
dec
xchg
xor
add
es
fildll
sbb
jecxz
into
es
push
push
push
mov
mov
push
roll
adc
pop
sub
or
inc
mov
push
jle
lahf
out
mov
lret
ret
leave
mov
jb
rolb
stos
dec
rcrb
fldt
inc
popa
push
ja
fsincos
mov
orb
in
cmp
loopne
aas
dec
cmp
mov
into
fs
cmp
ja
xor
pop
cmp
and
adc
jns
or
xchg
out
cmpsb
out
mov
xchg
leave
cmp
sub
imul
std
dec
mov
xlat
xchg
xor
imul
test
daa
mov
xchg
inc
sub
hlt
in
mov
mov
xchg
clc
out
add
push
cmpsl
sahf
sub
mov
and
out
xor
mov
mov
cmp
in
das
fsts
sub
inc
or
fistl
xor
jno,pt
lret
cmp
rcll
stc
push
in
mov
lret
sbb
outsl
xor
out
cs
inc
inc
stc
sub
push
sbb
mov
dec
lea
and
movsl
push
jle
or
fucomi
cli
fwait
jno
jb
mov
repz
jg
adc
rcrl
fdivs
aas
mov
push
dec
cmpsb
insb
dec
mov
pop
jmp
jne
rclb
nop
mov
testb
scas
cltd
push
xchg
xchg
xor
xchg
xchg
jmp
sbb
mov
test
ja
cmpsl
jno
cmpsb
insb
jg
addr16
xchg
cmc
lahf
negl
add
mov
sahf
lret
mov
adc
dec
jnp
lea
lea
xor
clc
shlb
xchg
test
iret
loope
and
jge
add
adc
les
dec
sub
fwait
stos
lods
push
lahf
lret
xchg
xlat
sub
jo
das
cmc
push
add
sub
adc
cld
xor
iret
mov
push
out
js
lock
ds
push
push
fmull
and
in
xor
add
push
add
daa
call
movsl
ror
sbb
je
add
adc
jp
xchg
dec
js
sub
subl
ljmp
pop
es
pop
xor
stos
cmp
cmp
in
sbb
mov
mov
aam
and
js
lret
sbb
pop
mov
pop
sbb
in
pushf
pop
popa
ja
xchg
xor
pop
lret
clc
fistpl
int3
pop
loop
lret
xchg
mov
cwtl
out
mov
ds
cld
sub
inc
dec
fwait
push
xor
negl
jp
ftst
in
push
jb
xchg
mov
sahf
jecxz
cmpsb
int3
cs
addl
outsb
jmp
inc
fdivp
ret
mov
repz
in
inc
mov
inc
out
popf
pop
mov
push
test
pop
int
arpl
add
xchg
or
mov
data16
sbb
test
repnz
mov
xor
je
sub
data16
mov
cmp
jo
mov
aam
fldt
dec
and
jp
adc
mov
movsl
dec
stc
jge
mov
test
jbe
movsl
out
xor
pop
movb
mov
xchg
imul
dec
mov
leave
jp
push
inc
inc
cltd
jge
leave
sub
dec
std
add
sahf
out
daa
mov
iret
xchg
inc
dec
insb
and
cwtl
add
inc
repz
lods
push
jno
jge
ljmp
jmp
fdivr
pop
lcall
xchg
ror
stos
daa
pop
bound
aam
jae
outsl
jb
test
and
sub
xchg
sti
test
sbb
test
fwait
lret
das
sbb
movsb
arpl
adc
nop
movb
scas
in
icebp
mov
sarb
movsb
xlat
cmp
and
inc
or
repnz
xchg
and
push
mov
aam
cs
jecxz
sub
popf
cmp
mov
cmp
dec
jb
sbb
add
pop
jge
mov
xchg
out
jmp
nop
in
enter
pop
das
test
jbe
and
imul
push
mov
jl
sub
rcrl
or
in
cmp
stc
mov
addr16
xchg
cs
movsl
sbb
or
aaa
xor
mov
movsl
pop
or
pop
scas
sbb
mov
aas
xchg
sbb
push
mov
icebp
xchg
push
cli
pop
inc
ds
cld
in
test
jns
loop
mov
rcl
xchg
sub
mov
test
add
xor
enter
push
out
mov
stc
addr16
stc
push
jnp
sub
mov
pop
ret
dec
and
pusha
jg
mov
inc
add
out
sub
addr16
mov
fimuls
lahf
xchg
pop
out
jle
pop
clc
add
jbe
fistl
leave
repz
dec
mov
stc
and
fs
push
sub
mov
fisttpl
addr16
jge
pop
xor
push
mov
sbb
jne
fstpl
dec
push
jae
test
dec
lahf
jns
sub
adc
mov
dec
jne
lcall
jae
pop
ret
or
popa
inc
pop
mov
sbb
test
lahf
xor
punpckhwd
sbb
or
xor
sub
and
stos
fwait
mov
sub
push
jns
inc
push
pop
jl
push
es
lds
outsb
cs
into
stos
xchg
push
and
es
and
pop
imulb
mov
and
das
or
sbbb
in
pop
adcl
mov
pop
mov
rep
leave
in
mov
jne
inc
scas
arpl
lds
and
push
xchg
add
or
addb
movsl
sub
or
stos
inc
sbb
pop
out
sub
xchg
insl
mov
popf
xchg
xchg
mov
mov
scas
inc
rcrl
xchg
cwtl
push
mov
test
mov
jl
inc
aam
cmp
inc
push
dec
call
stos
lock
jae
xchg
mov
lock
mov
clc
outsl
dec
mov
mov
jg
movsb
mov
or
push
mov
add
aaa
in
mov
or
test
cli
sti
sbb
call
pop
fnstenv
aam
xor
inc
ss
inc
jp
aam
hlt
fmulp
daa
xchg
push
mov
cmp
sub
vmulps
es
cs
cmp
mov
dec
outsl
mov
dec
scas
pop
cmp
out
push
inc
xchg
or
jp
inc
mov
jg
mov
test
cmp
arpl
les
ja
outsb
cli
out
popf
pop
add
jle
sub
fidivrl
pop
push
push
repnz
in
data16
es
cmpsl
fwait
add
scas
inc
jb,pt
jno
enter
push
ret
push
xchg
mov
pop
mov
insl
lea
adc
iret
and
lea
cmpsb
nop
xchg
iret
cld
pop
push
jo
ljmp
xor
inc
mov
mov
aam
cld
push
fstps
fsubs
or
adc
xchg
in
jns
lea
pop
dec
in
enter
sbb
inc
mov
mov
aas
jg
pop
pushf
nop
lea
arpl
cmpsl
js
sub
iret
test
js
inc
add
add
fnstsw
cs
incb
add
in
mov
ret
pop
es
sbb
and
add
stos
ja
and
add
or
adc
outsb
cmp
push
pushf
cli
or
pop
jg
shrl
xor
mov
jae
ds
jmp
mov
and
mov
xor
lcall
jle
cmc
cmpsb
and
das
in
or
pop
std
jnp
pop
mov
mov
leave
jns
xor
sbb
fucomip
into
into
mov
cmpsl
outsb
xchg
mov
lods
jno
movbe
push
data16
add
and
pop
add
fcomps
enter
test
mov
or
imul
fcmovnu
pop
js
out
das
bound
mov
add
mov
insl
xchg
or
cmp
lods
nop
mov
cltd
cwtl
push
out
or
stos
push
pusha
adc
mov
rcrb
xor
insb
das
pushf
mov
adc
into
mov
stos
pop
inc
push
pop
cmpsl
jne
mov
mov
jecxz
mov
lret
mov
push
fbld
test
cmp
lock
push
pop
sub
out
cmp
mov
testl
movsb
xor
iret
mov
adc
cmc
aad
push
sub
mov
dec
mov
inc
jg
cs
aas
das
lret
inc
jl
pop
jp
insl
xchg
lahf
sahf
mov
jbe
addr16
andl
cli
xor
xchg
test
add
ljmp
pusha
mov
xor
mov
jb
fadd
cld
mov
pusha
cmp
inc
push
sub
fs
cld
int3
frstor
mov
bound
gs
test
loop
push
xchg
and
xchg
lock
scas
and
rclb
sbbl
sarl
pop
sub
push
neg
leave
daa
and
and
pop
jne
push
pop
pop
into
lret
mov
inc
or
xlat
mov
int
test
mov
mov
mov
mov
pop
inc
out
ds
aad
ja
add
cmc
mov
shll
cltd
jle
xchg
xchg
xchg
sti
xor
mov
orl
mov
jnp
xor
jl
fnstenv
adc
push
popf
add
mov
das
hlt
fdivrl
sub
push
xor
roll
sti
fwait
rorb
lsl
in
in
dec
outsl
mov
pop
cmpsb
mov
in
stos
lods
mov
dec
sub
lcall
out
xchg
popa
mov
stc
insl
dec
jecxz
pop
add
mov
loopne
inc
out
fwait
dec
rorl
inc
sbb
xchg
mov
pushf
popa
add
xor
js
adc
inc
shl
push
sbb
add
or
xlat
or
add
or
pop
dec
inc
out
jbe
jle
out
into
xor
pop
andb
scas
push
ds
mov
mov
sbb
xchg
scas
fistpll
xchg
mov
inc
les
aad
into
pop
or
push
sysenter
ljmp
inc
inc
popa
jbe
int
jmp
pop
aas
xchg
add
adc
inc
jecxz
test
shll
test
push
ja
sub
fists
jmp
fnstcw
decl
jne
es
and
push
out
icebp
fsubrs
xchg
out
push
cmp
add
add
cmc
inc
pop
mov
mov
out
cli
jnp
inc
aaa
out
adc
dec
addr16
jl
adc
jns
adc
std
in
xor
repz
or
push
cmp
fs
adcl
mov
push
jmp
call
mov
je
inc
push
jbe
ret
mov
mul
or
add
imul
gs
ljmp
sub
stos
hlt
mov
mov
out
lea
adc
push
jbe
enter
adcb
lods
inc
popw
fists
inc
insl
push
xor
mov
mov
cmpsb
out
jo
mov
fstpl
cwtl
flds
xchg
push
inc
in
sbb
sbb
and
jmp
adc
mov
testl
ljmp
mov
mov
inc
aad
cmpsb
xchg
jl
jns
aaa
iret
movsl
xchg
sub
mov
out
push
nop
call
je
sti
or
mov
jl
mov
add
mov
das
cmp
test
jg
and
jle
xchg
and
mov
hlt
push
push
not
bnd
and
fwait
ja
inc
bts
int
inc
push
and
cli
adc
adc
lcall
icebp
add
add
and
subb
inc
flds
cmp
add
ja
mov
mov
outsb
mov
adc
loopne
stos
int
xchg
cs
adcb
xchg
lea
sti
mov
adc
iret
ljmp
insb
scas
sbb
xchg
stos
repnz
decl
lods
fwait
jne
inc
add
dec
pop
pop
movsb
cmp
fstp
xor
mov
xor
in
pop
push
ss
or
int
xchg
mov
popf
and
stos
mov
jae
in
pushf
add
add
lea
and
dec
shrl
fsubl
push
rol
dec
iret
cmp
sub
dec
mov
mov
pusha
sti
mov
bswap
adc
aam
add
inc
cmp
mov
mov
cmp
inc
mov
scas
cmp
insb
push
call
mov
or
xor
jl
and
sahf
xor
dec
aas
mov
pusha
addr16
add
sbbb
fwait
xchg
daa
popf
adc
dec
xchg
mov
and
icebp
in
cld
xchg
test
sbbb
sahf
push
push
inc
or
pusha
or
hlt
scas
push
sbb
test
sbb
add
outsb
filds
lock
pop
mov
testl
add
dec
push
insb
insl
mov
dec
inc
arpl
sub
in
lret
pop
jg
pop
test
lods
pusha
stc
loop
adc
inc
insb
or
pop
mov
cmp
adc
cmp
mov
loop
gs
sbb
je
pop
or
sub
test
cmp
rorl
enter
or
pop
stc
addr16
mov
lds
rorl
xlat
or
jae
ret
dec
pop
test
mov
das
mov
dec
dec
fmuls
js
xlat
sub
in
mov
sbb
inc
dec
hlt
jg
repnz
xchg
in
not
xor
mov
pop
test
icebp
adc
fucomip
jo
shll
cmpsl
lods
jne
dec
movsb
je
or
mov
mov
arpl
inc
cld
fstps
dec
scas
mov
stos
cmpsb
in
shlb
jbe
cltd
lds
xchg
xor
lds
mov
xchg
scas
jecxz
jb
loopne
ret
add
inc
int
lahf
push
xor
arpl
daa
push
inc
aam
popf
xor
idivb
pop
imul
lods
shrl
pop
xor
xor
cmpsb
push
adc
jbe
or
es
stc
stos
pop
imul
lret
cmp
iret
mov
mov
divl
push
das
mov
mov
das
inc
stc
fs
inc
mov
jns
hlt
pop
fs
loop
outsb
inc
push
mov
pop
mov
popa
adc
sbb
jecxz
lret
mov
or
jae
inc
dec
pop
sbb
jmp
cmp
movl
jno
shll
cs
mov
or
nop
pop
sti
mov
cmp
rcrl
fldl2t
or
std
xchg
ret
sbb
out
and
mov
xorl
aam
out
cs
and
movl
cmp
dec
pop
leave
inc
inc
mov
icebp
add
lods
push
inc
pop
sbb
hlt
xor
andb
cmp
xchg
lret
aam
mov
cs
push
cmpsb
adc
mov
pop
fidivs
xor
add
lcall
call
xor
pop
cmp
fstpt
gs
adc
and
subl
scas
sbb
sub
jge
pop
std
out
leave
js
incl
insl
pop
push
pop
cmp
inc
ja
iret
aas
stc
loope
cmpl
mov
popa
xchg
mov
adc
movsb
out
in
mov
jb
jmp
xchg
lret
mov
or
cmc
sti
imul
outsl
and
into
push
cmp
mov
xchg
inc
inc
rol
les
or
in
das
dec
mov
sbb
incb
or
dec
test
arpl
and
dec
pop
jne
pushf
ficompl
or
lods
pop
movsl
ret
cmc
xlat
test
pop
cmp
les
clc
sahf
inc
in
icebp
sbb
aam
stc
incl
add
lods
sbb
aas
loope
gs
cmp
fucomi
sub
mov
sub
mov
mov
pop
push
ljmp
test
loop
outsb
push
call
orl
arpl
cmp
rolb
not
cmpsb
popf
jnp
cli
in
sbb
fwait
mov
jp
and
mov
adc
loopne
and
aas
add
loop
mov
xchg
xor
sbb
or
fadds
out
and
cwtl
rcrl
push
ret
dec
and
mov
jno
test
cmp
mov
in
stc
into
add
out
xor
xor
jbe
fdecstp
inc
jl
cmpsb
ss
pop
leave
inc
push
lea
pop
nop
ds
imul
sub
cmpsl
movsb
test
cmp
in
mov
sbb
enter
mov
push
mov
jmp
nop
in
mov
and
xor
xchg
leave
neg
vmulsd
mov
cltd
fwait
adc
loope
xor
push
dec
ds
imulb
pusha
cmpsb
push
stos
push
scas
xor
out
pop
js
cmp
jge
dec
jmp
jl
add
and
xchg
dec
outsb
adc
insl
add
loop
pop
insb
int3
inc
push
and
lea
pop
sbb
push
mov
vorps
nop
adc
xor
xchg
decl
leave
into
jle
pushl
in
mov
jge
add
sub
pop
jb
pop
mov
lret
xor
dec
and
andl
cmpb
out
push
push
pop
loopne
inc
jp
inc
filds
popf
cmc
ds
sbb
xlat
push
pop
cmp
xchg
fidivrs
insl
xchg
jb
arpl
push
scas
in
lock
mov
mov
lock
ljmp
mov
xchg
fs
lea
in
ret
jo
shl
mov
jmp
cltd
lea
imul
int
data16
push
and
in
dec
movsb
and
push
and
loope
fisttps
jle
push
jns
lds
fwait
es
sbb
fsubrp
sarl
add
xchg
fcomps
out
cmpsl
mov
iret
call
dec
pop
fwait
xchg
add
mov
mov
movsl
mov
lret
aad
mov
std
fmuls
in
enter
fists
push
in
mov
pop
stos
sti
movsl
sub
icebp
pop
scas
orl
pusha
push
jno
js
repz
std
adc
inc
fdivrl
jg
adcl
jmp
dec
push
shll
push
xor
gs
scas
lock
dec
xchg
push
inc
arpl
mov
std
sti
dec
jns
in
std
pop
ret
test
jne
cmp
adcl
icebp
lcall
jmp
xchg
sbb
mov
out
loope
pop
lret
mov
lock
movsb
stos
jmp
mov
jne,pt
adc
test
call
push
pop
pop
xchg
sub
cmc
xchg
arpl
into
adc
dec
inc
mov
pop
cmp
sbb
xchg
inc
ljmp
dec
push
or
pop
and
mov
xlat
loopne
data16
mov
shrb
or
movsl
inc
xchg
mov
add
dec
inc
je
rorl
pop
movsb
popa
call
ret
jae
inc
pop
push
sub
ljmp
cmp
and
xchg
sub
mov
int
cwtl
dec
mov
jo
adc
or
mov
das
jp
or
or
popf
mov
faddl
sbb
adc
cmpb
xchg
cwtl
pop
cli
orl
lock
mov
and
dec
pop
and
pop
sub
popa
jecxz
sahf
ljmp
and
mov
in
dec
xchg
test
push
ds
vpsubusb
cltd
call
stos
add
and
fwait
jge
outsl
sub
pushf
test
pop
xchg
imul
mov
mov
mov
out
sub
push
ret
jg
jp
mov
lock
test
cmp
lcall
pop
fsubl
sub
jns
in
sub
addr16
out
mov
adc
popa
es
sub
push
rol
pop
scas
cmp
fsubrl
ficompl
lods
orl
mov
adc
jo
inc
xchg
add
in
sbbl
mov
imul
jecxz
mov
xor
aad
es
divb
in
mov
jb
xlat
insb
mov
test
sbb
xchg
aaa
adc
mov
mov
test
cmp
and
imul
leave
push
insl
dec
or
mov
fsubl
xlat
adc
rep
push
fists
dec
cld
insb
insb
or
jno
jecxz
mov
cltd
faddl
sub
arpl
call
pop
imul
sbb
or
adc
dec
jge
adc
xchg
loope
mov
mov
mov
rcl
ljmp
push
lock
stc
sarl
add
pop
scas
or
jle
mov
dec
cmp
repz
sahf
aad
mov
add
mov
addr16
hlt
pop
sbb
jecxz
das
ret
dec
gs
es
fildl
jb
adc
mov
pop
shrl
les
into
mov
dec
test
adc
cmpsb
pop
fwait
aaa
push
inc
stos
mov
aad
test
dec
mov
mov
push
xchg
inc
mov
mov
adc
sub
outsl
out
mov
hlt
mov
rorl
shll
addr16
out
cmp
mov
pop
adc
push
movsl
lds
popa
push
in
xchg
add
and
jle
add
push
iret
mov
mov
mov
pop
add
adc
add
mov
lcall
imul
shlb
movsl
pop
push
xor
lret
sub
or
xchg
test
inc
add
sub
jge
or
pop
dec
cwtl
popf
jb
test
mov
fs
outsb
jmp
push
or
nop
mov
push
ret
or
mov
inc
mov
sbb
jle
addr16
push
and
inc
les
mov
adc
mov
out
mov
cmp
push
inc
cmp
negb
dec
in
mov
int
jae
aad
add
imul
les
pusha
sbb
scas
or
les
out
nop
nop
hlt
add
push
mov
sahf
aas
insl
add
adc
bound
int3
push
roll
sar
insb
adc
dec
lea
subb
xlat
in
ror
mov
mov
in
jl
mov
cmp
push
lahf
sbb
out
sbb
mov
hlt
pusha
ljmp
sub
add
mov
scas
int
mov
fcoml
inc
fdivl
decl
sub
inc
lret
jb
inc
mov
ds
fsubr
jle
int
lds
jg
sbb
repnz
ret
ret
cmp
cmp
inc
inc
icebp
xor
aad
lock
cmp
cmpsl
popf
or
fwait
pop
sarb
push
icebp
or
mov
mov
call
rcrb
mov
fsubrp
gs
mov
out
ret
in
pop
sbb
xor
test
sbb
das
mov
pop
test
sub
pop
mov
xchg
iret
cmp
sbb
push
or
imul
push
push
aam
adc
push
push
arpl
divl
dec
je
add
mov
mov
arpl
insb
pop
clc
filds
icebp
les
push
ljmp
ljmp
jle
cmpsl
mov
sbb
lcall
xchg
adc
and
add
xor
popa
fbld
daa
or
shlb
jnp
repz
xor
test
xor
jmp
shl
sbbl
scas
mov
cmpsl
fildl
das
mov
daa
out
xor
mov
ret
loopne
cs
push
jo
bnd
jb
jbe
scas
pop
or
fcoml
loop
add
or
ret
adc
arpl
cmpsb
dec
arpl
cmc
mov
icebp
or
stos
lea
sbb
lcall
inc
mov
inc
sub
pop
add
ljmp
stos
sbb
xchg
mov
inc
push
jnp
mov
rclb
inc
cmpl
pop
pop
std
inc
loop
adc
test
jo
call
cmpsb
cs
js
pop
sbb
sub
add
mov
out
cmpsb
popa
mov
mov
aam
push
sub
fucomi
cmp
outsb
loope
sub
test
pop
add
cwtl
arpl
push
pop
dec
out
mov
rolb
das
in
loop
pop
aaa
push
roll
and
in
mov
out
jns
xchg
inc
out
sub
sub
or
lock
lds
gs
fs
andps
cmp
and
cld
mov
daa
es
cmp
ja
std
enter
mov
cltd
and
add
and
ds
sbb
mov
cmp
mov
lret
xchg
add
inc
js
gs
hlt
or
lret
pusha
sbb
xor
movsb
pop
pop
int
cmp
clc
xor
outsb
mov
stos
fprem1
push
xor
sub
and
or
pushaw
in
lods
cmc
pop
jge
outsl
rol
pop
pusha
cmp
push
addr16
jbe
les
scas
js
xchg
pop
cmc
dec
xchg
cwtl
movzwl
sbb
and
mov
scas
fiadds
jle
dec
mul
cmc
lret
pop
movups
out
leave
mov
xchg
push
mov
xchg
pop
xlat
push
mov
inc
jnp
fidivrs
pop
cmpsb
adc
ss
push
pop
sbb
test
adc
arpl
push
shrl
popa
fldenv
push
andl
mov
sub
outsl
push
roll
in
movsl
ret
mov
lock
mov
gs
or
lods
js,pt
mov
addr16
test
adc
outsb
xor
add
ja
xchg
add
pop
adc
sub
and
mov
loope
lcall
or
adc
lcall
pop
repz
mov
imul
je
int3
scas
pop
mov
xchg
and
jp
or
inc
lods
mov
daa
popa
jle
lods
inc
xor
sahf
pop
xlat
cmp
jge
movsb
cmp
stos
jbe
sbb
dec
out
int
mov
mov
mov
push
das
mov
vmovaps
addr16
xchg
push
jl
leave
dec
in
subb
sub
xor
es
xor
push
push
xlat
insb
adc
mov
pop
ss
fsubrl
inc
adc
push
loopne
or
cld
inc
clc
xlat
sub
push
inc
adc
dec
cmc
adc
fdiv
sub
cmp
shlb
insb
into
shrb
icebp
pop
inc
out
pusha
repnz
mov
pop
jg
inc
push
scas
out
mov
cmp
xchg
xchg
push
decl
negl
les
mov
loop
sbb
loope
sti
addl
sahf
fs
out
jns,pt
or
or
push
ljmp
out
or
icebp
daa
cmp
addr16
adc
pop
xchg
mov
shr
testl
xchg
inc
lods
xchg
addr16
push
es
xchg
xor
dec
ret
js
jno
lcall
iret
inc
xor
xorl
mov
mov
mov
mov
dec
test
lock
pop
cmp
sbb
mov
mov
mov
data16
insb
stc
sub
adc
cmp
into
call
sbb
ret
push
inc
shrb
pop
insl
push
jg
xlat
fwait
in
in
mov
and
dec
pop
mov
xchg
xor
lds
les
add
adc
xchg
aam
lcall
xor
js
sub
insl
push
fisttps
jo
aad
push
sub
dec
or
outsl
out
popa
aaa
fs
pusha
leave
push
push
xchg
cwtl
aaa
call
into
notl
scas
adc
xor
pushf
jbe
in
sbb
test
sub
push
aad
mov
lahf
dec
shll
fidivl
test
lock
cli
dec
sub
cld
fisubs
ss
aaa
mov
imul
xchg
loope
ret
jnp
push
fs
pop
cmp
scas
mov
push
int3
adc
cld
fs
fs
stos
int3
push
jle
and
jg
jbe
pushf
rorb
lret
aas
jmp
aaa
fwait
adc
inc
pop
jnp
and
xchg
aas
and
movb
pop
sti
int
jae
ljmp
outsb
into
sbb
jb
inc
mov
test
std
mov
and
xor
xchg
ficomps
dec
dec
mov
mov
jmp
or
cs
and
iret
rorl
lahf
jg
test
xor
sbb
das
dec
and
imul
xor
jbe
mov
les
xchg
mov
rorb
jno
fisubl
arpl
daa
mov
pusha
mov
jge
daa
ljmp
jle,pt
scas
sbb
idiv
add
lea
lcall
lret
push
cmp
push
imul
mov
imul
cwtl
pop
mov
xchg
aas
dec
data16
inc
out
or
sub
xchg
pushf
aaa
testb
sub
inc
dec
dec
push
lds
fistps
dec
xchg
sbb
and
inc
mov
enter
add
add
jg
push
add
sbb
hlt
push
inc
sub
sub
imul
mov
push
push
rep
loope
cmc
pop
icebp
inc
xchg
xchg
es
imul
fistpl
ret
adc
cld
into
enter
pusha
lcall
adc
popa
sahf
sbb
sti
inc
mov
add
ror
dec
and
inc
popf
es
ja
sbb
into
xchg
subb
cmp
in
cmp
loopne
sub
jno
mov
and
xchg
jmp
xor
xchg
lret
stc
lods
cmp
fstps
lcall
inc
js
cmp
mov
test
iret
push
divb
into
fldt
dec
ret
jns
dec
sarl
leave
jp
jl
mov
pop
insl
push
lcall
cld
inc
mov
cmp
push
test
pop
add
sub
push
imul
in
out
lea
pop
movsb
mov
adc
fdivrl
inc
or
scas
mov
pushf
cmp
popf
adc
mov
inc
xchg
lret
pop
cmp
and
movsl
pop
or
inc
sub
stc
xor
movsb
adc
mov
test
xor
push
add
movsl
cs
jl
pop
and
push
fdivr
sub
repnz
jne
push
xchg
dec
addr16
int
in
testl
scas
inc
or
faddl
push
jle
xlat
push
and
jle
call
fisubl
inc
adc
mul
cld
adc
test
inc
add
dec
dec
leave
fwait
dec
clc
outsl
mov
sub
and
mov
pop
stc
mov
dec
mov
iret
loope
inc
push
mov
insb
pop
imul
nop
arpl
pop
mov
or
pop
pushl
test
cmp
out
inc
xchg
leave
das
ss
mov
adc
addl
cmp
sbb
and
movsl
cmp
mov
push
add
xchg
shl
xor
jno
das
fwait
push
aaa
xor
lods
jae
fcompl
sub
pop
sub
add
mov
pop
daa
adc
jp
mov
push
dec
in
loopne
sbb
adc
pop
inc
mov
xor
sub
into
jns
sbb
xor
mov
or
int3
scas
andb
add
icebp
push
in
mov
and
outsl
mov
jbe
in
mov
cs
ficoml
pop
pop
mov
and
les
add
dec
push
lret
fdiv
push
std
pop
xchg
mov
cwtl
cld
ffreep
xor
mov
jns
dec
or
inc
ret
ret
cmp
jb
mov
int3
cmp
xchg
sub
push
inc
leave
repz
lock
mov
adc
pop
xlat
out
and
jl
ret
pop
sbb
xchg
cltd
daa
fwait
or
jmp
sbb
and
pop
in
je
movsl
imul
int
push
mov
in
adc
sub
pop
and
aaa
outsl
mov
add
sbb
mov
mov
dec
dec
and
dec
repnz
aas
or
xor
xor
xchg
cmc
push
pop
jb
daa
cmpsb
shlb
ds
popf
cmc
in
dec
repz
pop
and
in
mov
jnp
cmpsb
push
inc
inc
jb
movsb
leave
outsl
and
rorb
fistpl
or
pop
lret
sbb
int3
jg
jle
mov
popa
cmp
out
insb
jmp
add
lea
jle
lret
leave
add
mov
stc
les
negl
pop
in
cs
sahf
je
lea
xchg
stos
pop
pop
repz
cli
add
test
jns
jo
pop
push
mov
add
movsb
subl
jmp
in
addr16
jbe
enter
int
out
test
push
jne
loopne
repnz
mov
xor
and
or
fistpll
mov
fcmovnb
repz
pushf
subb
je
mov
push
inc
test
mov
mov
lock
andl
arpl
jns
push
xchg
push
call
mov
push
jmp
lea
movsl
jo
sahf
push
mov
fcoml
loope
cmpsb
and
daa
cmp
push
xchg
loop
xchg
sub
mov
addr16
lds
out
lock
cwtl
loope
mov
xchg
int
add
fldl
je
sub
int
cmp
movsl
mov
decb
jbe
xchg
push
leave
mov
das
push
cmp
lods
add
bound
mov
mov
decb
mov
push
mov
rorb
lds
rcrb
mov
loope
or
daa
mov
ds
cmp
sub
sbb
cli
jb
mull
mov
pushf
pusha
nop
cwtl
iret
outsl
loopne
xchg
imul
fcmovnu
push
xchg
loop
iret
push
jl
xchg
scas
scas
mov
icebp
movsl
ljmp
xchg
pminsw
adc
xor
sahf
xchg
cmp
xor
mov
pop
fs
orb
shl
push
bound
outsl
lods
cmp
and
movsb
xchg
imul
push
pushf
in
loope
cmp
pop
mov
sub
lods
cld
scas
xor
rclb
xor
loopne
mov
adc
mov
ss
mov
lahf
fistps
stc
das
cmpsb
out
stc
int3
aaa
fldt
lea
sahf
push
add
xchg
lods
cmp
in
les
cmpb
xchg
mov
sbb
or
pop
sbb
fdivrp
sub
push
sti
outsb
mov
cmc
mov
and
xor
sub
push
adc
stos
fs
pop
ss
fwait
rcl
ret
mov
or
dec
pop
shrl
arpl
aas
sub
mov
fcomps
push
aad
xor
xor
adc
repz
mov
or
cmpsl
and
mov
int
fisubrs
push
imul
and
addr16
sub
icebp
or
mov
cli
icebp
inc
into
sub
xchg
inc
nop
or
popf
shrb
inc
loopne
stos
xor
xor
bound
pop
lcall
imul
sbb
stos
ja
push
movsl
jne
cld
pop
push
shrl
jnp
es
mov
or
jecxz
dec
mov
jmp
scas
cmp
je
mov
out
test
sub
inc
cmp
cmpsb
pop
in
pop
daa
sbb
and
xchg
int
leave
pop
mov
mov
sbb
pop
daa
and
leave
fwait
cwtl
fstpl
lret
je
ret
imulb
fwait
cmp
fwait
jo
jmp
in
jnp
jno
out
popf
inc
push
fidivl
push
and
add
lods
addr16
jp
add
pop
ret
ret
mov
xchg
dec
clc
adc
pop
mov
push
aam
mov
addr16
mov
stc
lods
mov
xor
pop
out
lret
jp
int3
ds
inc
lods
in
notl
and
dec
stos
pop
pop
adc
lock
jbe
jmp
aas
xchg
lods
push
movsl
cmc
hlt
fmull
outsb
fwait
ds
movsl
and
mov
movsl
out
and
push
sbb
loopne
lret
cmpsl
idivl
mov
leave
sub
sub
into
mov
push
pop
lods
sysexit
insb
dec
popa
fisttps
pop
mov
popa
xor
leave
inc
jecxz
adc
aas
add
xchg
xchg
lea
outsb
das
fidivl
xchg
inc
shll
sarb
sub
jle
sahf
std
shlb
xchg
loope
les
loope
xchg
add
arpl
loop
bound
cmc
adc
cmpsl
xchg
push
rcr
add
jle
ds
enter
leave
out
or
popa
pusha
outsb
sti
fdivs
or
lcall
repnz
add
inc
mov
sbb
mov
mov
mull
aad
jmp
adc
xor
pop
or
sub
loope
xchg
mov
negl
fiaddl
je
imul
dec
inc
xchg
jp
je
jo
inc
and
das
icebp
push
adc
imul
jno
mov
sbb
or
or
lret
aam
icebp
movsb
movsl
lahf
pop
push
pause
xchg
cli
sub
scas
push
xchg
and
sub
xor
cwtl
mov
or
sub
stos
pop
add
in
popl
push
mov
and
pop
inc
sbb
loopne
ja
xor
push
xor
mov
int3
jns
aas
sbb
out
cld
les
mov
rol
xorb
in
jg
les
adcl
enter
push
loop
mov
mov
scas
or
test
fldl
sbb
cmpsb
aaa
addr16
or
cmp
loopne
mov
scas
cmp
cwtl
mov
jmp
pop
adc
xor
mov
mov
bound
mov
cmp
fidivs
pop
xor
xor
outsb
xor
mov
push
sub
das
jb
scas
pop
movsb
cmpsl
push
daa
pop
add
inc
lds
xchg
inc
pop
adc
mov
loopne
push
adc
jb
push
dec
orl
aaa
movsl
sub
add
lds
mov
sbb
push
out
jmp
xchg
cwtl
dec
notb
pop
push
fiadds
dec
fsubr
lds
les
push
test
ljmp
shlb
mov
int3
sbb
sahf
stos
push
mov
inc
jne
dec
insb
fst
icebp
js
fdivrl
leave
nopl
sbb
rorb
lahf
ja
rcrb
push
sbb
repz
mov
es
addr16
outsl
call
jno
add
aas
push
jge
xlat
or
inc
mov
mov
movl
or
xor
leave
cmpsl
mov
xor
sub
fldt
in
mull
subb
shlb
xchg
pop
fwait
mov
or
pop
int
inc
mov
int
jnp
sarl
mov
jnp
loope
shrl
jmp
mov
jns
sti
xor
sbb
les
push
repnz
lods
push
daa
icebp
lret
push
adc
pop
lods
dec
in
mov
insb
lcall
aas
pusha
add
ds
arpl
add
cwtl
loop
adc
lea
sbb
testb
inc
pop
or
cmpl
mov
enter
cmpsl
add
das
aad
shlb
out
mov
test
mov
pop
jge
push
mov
movsl
aas
rol
into
sbb
lcall
sti
mov
inc
sbb
outsb
cmp
xchg
addr16
push
outsl
scas
cld
scas
jbe
scas
in
jl
sub
pop
cmpsb
pusha
cmp
ret
les
xor
xor
insb
ffreep
mov
inc
jnp
xchg
mov
add
mov
in
xor
cmc
or
mov
push
sbb
mov
add
ss
psraw
pushf
int
cs
loope
mov
cwtl
mov
clc
das
pop
push
test
out
mov
mov
mov
int3
ss
jbe
adc
pushf
in
int
xlat
leave
hlt
jnp
push
fmulp
inc
dec
es
xchg
aas
jo
orb
into
out
dec
es
scas
jno
pushf
xor
mov
add
or
adc
or
sbb
push
repz
outsl
xor
test
push
fisttpl
aas
mov
add
xchg
cltd
add
fsubl
mov
push
push
adc
xchg
mov
test
lret
sub
xor
push
sub
pop
dec
lods
sarb
sbb
stos
fisttpll
mov
jge
mov
and
mov
xor
and
shll
insl
popf
adc
cmp
mov
call
mov
add
rcll
push
loop
mov
sbb
adc
movsl
sbb
mov
out
lock
jns
imul
push
cs
mov
mov
sub
cltd
push
xor
std
sub
pop
mov
std
and
aaa
sub
fmul
cld
iret
xchg
in
mov
insb
popf
jg
jg
adc
sbb
icebp
out
test
or
aam
sbb
inc
sub
xor
stos
lahf
jb
inc
sbb
sarb
dec
adcb
into
repz
sbb
mov
int3
and
inc
out
jge
jbe
pxor
rcll
cmp
repz
lahf
mov
mov
pop
pop
xor
sbbb
mov
sarb
jg
mov
add
sbb
mov
rclb
jbe
inc
mov
inc
push
fcomip
inc
cmpsb
iret
ficomps
cmpsl
mov
jge
mov
iret
mov
pop
ror
insl
rolb
mov
mov
mov
sbb
jne
loop
lods
sbb
shr
xor
mov
sub
or
stos
stos
notb
in
mov
cmp
pop
in
dec
inc
cmpsl
arpl
dec
cmpsb
pop
mov
insl
and
cmp
cwtl
mov
les
cwtl
movl
popa
pop
jnp
mov
lea
rolb
mov
sbb
and
mov
cli
adc
pop
jno
jo
adc
push
sbb
push
test
cmp
gs
rclb
xor
and
sbb
mov
sub
sahf
mov
rclb
mov
repnz
fiaddl
fcoms
daa
adcb
stos
dec
jne
fucomi
mov
lods
xchg
cmp
cmp
out
out
out
std
lds
xchg
push
mov
dec
cmpsb
xor
push
dec
loopne
adc
cmp
ljmp
out
loope,pn
icebp
cmp
mov
ret
sub
inc
inc
xchg
cmp
fildl
push
inc
xor
cld
shrb
dec
jo
push
dec
lods
sbb
mov
mov
jl
or
int
dec
daa
adc
imul
scas
xor
xor
mov
or
xchg
jne
mov
adc
inc
xor
mov
out
xor
ret
add
rol
adc
sub
xor
cmp
scas
dec
mov
jl
sub
scas
rcll
push
and
inc
jg
imul
and
scas
lea
popa
mov
jp
push
dec
pusha
clc
mov
xor
outsl
pushf
mov
inc
cmp
js
in
addr16
jne
xchg
jns
mov
fldcw
and
std
mov
stos
sahf
and
rorl
add
mov
bound
push
outsl
cmp
mov
es
mov
stc
xchg
adc
xchg
popf
dec
cwtl
lcall
adc
shll
stc
cli
add
push
insl
or
sbb
or
xor
inc
shll
mov
mov
dec
test
adc
cmc
pop
out
in
bound
movsl
divps
out
call
pop
iret
sub
jl
sub
xchg
call
pop
inc
mov
mov
sbb
jp
inc
push
mov
in
jecxz
xchg
dec
xor
jp
mov
aas
mov
pop
pop
mov
sub
dec
sbb
xchg
fsubrs
das
pop
pop
aam
movsl
xor
fdiv
loopne
es
jnp
decb
add
movsb
xchg
out
and
dec
or
test
mov
icebp
ret
cld
imul
clc
jmp
in
stos
or
dec
mov
mov
adc
add
mov
inc
or
call
and
inc
fildll
pop
aaa
icebp
push
mov
xchg
xor
and
mov
scas
test
int
pop
xor
or
lret
iret
ljmp
ret
out
pop
pop
jo
test
push
test
cs
lds
fisubs
and
pusha
xchg
xchg
jecxz
std
imul
add
push
addr16
adc
iret
cmp
data16
out
lcall
fs
lods
lret
adc
nop
push
shl
dec
mov
mov
mov
aad
or
lods
xchg
jmp
shll
cmpsb
lret
push
mov
outsl
inc
push
xor
sub
dec
lods
out
je
xchg
xor
push
xchg
loopne
out
jbe
mov
fisttpll
xor
push
pop
dec
hlt
addr16
lahf
mov
fstps
pop
out
fxch
popl
jmp
jp
jnp
and
rclb
out
pop
mov
lods
pop
repnz
jl
fs
cmp
mov
cmpb
out
ret
sarb
adc
inc
jle
inc
xchg
je
fdivl
push
rol
or
clc
mov
adc
lods
xlat
jo
inc
fiaddl
inc
mov
jge
popf
pushf
lds
jb
xor
shlb
adc
out
sbb
jmp
and
lret
mov
pop
dec
lahf
movsl
or
insl
inc
daa
or
in
jge
mov
pushf
insb
ret
and
xchg
add
push
test
popa
call
aam
add
addl
idivb
out
xor
icebp
subb
jle
adc
loop
xlat
sbb
xor
ds
mov
pop
addr16
or
enter
add
fisubrs
jbe
xor
sbbl
mov
push
mov
lods
pop
jnp
cmp
dec
adc
sub
aaa
sahf
or
push
shll
out
shlb
out
repnz
jae
jb
test
outsl
stc
js
shrb
or
or
lahf
or
sarl
jmp
or
xchg
cmp
dec
cmpsl
stos
xchg
fisubs
in
adc
cmpsl
lods
inc
in
sbb
dec
addr16
orl
jl
add
cmp
add
ficoms
mov
jmp
insl
or
xchg
nop
loop
push
sbb
mov
pushf
push
mov
cmpsl
imul
hlt
jb
daa
pushf
sbb
pop
dec
pusha
push
mov
inc
ja
sahf
and
inc
outsl
inc
loope
pushl
xor
mov
adc
inc
pop
mov
neg
arpl
mov
sarb
pushf
jecxz
push
iret
sub
xchg
and
in
push
mov
mov
js
or
cltd
and
sbb
mov
cwtl
daa
int
dec
pop
sbb
cmp
mov
pop
incb
add
lea
sbb
cltd
sbb
and
pop
jnp
push
out
mov
inc
sbb
add
nop
pop
das
inc
xor
hlt
sti
dec
xlat
xchg
int
mov
es
filds
rcl
mov
shlb
scas
xorl
mov
pop
shll
clc
divl
in
popf
stc
test
decb
pusha
outsb
inc
js
inc
pusha
cmpb
jno
cmpsl
jge
add
sbb
inc
jl
mov
les
cmp
sub
js
jge
add
sarl
ret
jnp,pt
or
fldcw
icebp
lret
call
push
inc
sub
repz
cld
pop
mov
jecxz
jecxz
sbb
icebp
fdivp
pushaw
xchg
sbbl
lahf
fwait
mov
cld
adc
mov
adc
scas
xlat
pop
test
ss
enter
stos
lea
ljmp
out
inc
fwait
mov
xchg
insl
push
push
jl
mov
sbb
ret
aaa
adc
pop
shll
adc
mov
sub
mov
cmp
fcmove
mov
mov
leave
push
in
adc
int
lahf
mov
ret
xlat
or
iret
jecxz
jg
jp
bound
js
xor
shlb
cmc
fsubr
add
scas
fwait
push
popa
adc
mov
adc
add
lret
dec
shll
jae
subl
daa
movb
mov
in
rorb
xchg
cld
shrb
cmp
adc
push
xor
sbb
popf
in
dec
into
shrb
test
les
xor
jmp
pop
and
aam
insb
lret
cld
loope
pop
xchg
ljmp
std
icebp
dec
out
cltd
mov
jb
lock
lcall
ret
ljmp
inc
insl
jne
nop
mov
decb
incl
and
push
cmp
scas
dec
adc
insb
mov
push
cltd
cmc
sti
lock
pop
xchg
xchg
notb
push
in
shrb
push
pop
pop
fmuls
xchg
add
mov
xchg
enter
xchg
sbb
aam
insl
mov
jo
mov
mov
outsb
lods
lock
jne
jmp
jle
je
adc
sbb
jl,pn
int3
push
fwait
int3
lret
ffree
lods
pop
arpl
jns
and
and
add
xchg
push
sbb
stos
cmp
hlt
mov
imul
daa
stc
xchg
ljmp
and
ljmp
pop
loopne
mov
or
push
rol
jmp
mov
push
ret
pop
jecxz
jle
xchg
ljmp
adc
fildl
or
xchg
and
or
loope
dec
adc
lcall
sub
sbb
xchg
push
aad
mov
push
add
dec
lret
loopne
orb
adc
push
adc
pop
push
dec
repz
pop
add
mov
and
inc
sbb
or
movntps
ljmp
xor
les
or
cmpps
cmpb
xor
xchg
inc
cld
imul
sahf
push
xchg
mov
nop
icebp
rclb
inc
inc
and
mov
std
mov
in
pop
and
cmp
inc
xor
add
mov
fs
inc
inc
outsl
xchg
jl
sub
mov
in
cmp
or
pop
test
add
stc
jb
sub
xchg
push
xor
mov
or
push
add
dec
fisttps
dec
mov
std
daa
push
out
xchg
outsb
orb
push
cmp
les
pop
or
lds
es
pop
xlat
sbb
inc
jl
std
xor
enter
cli
mov
shl
inc
add
loope
imul
fwait
inc
repnz
into
mov
leave
icebp
push
sub
cmp
inc
pop
icebp
aaa
mov
inc
lahf
sub
loop
lods
adc
or
jp
push
mov
out
cmc
out
push
inc
inc
ljmp
jbe
out
dec
test
fdivrl
shl
int
jb
jge
test
push
ret
dec
mov
cmp
pop
cmpsb
jge
test
rcll
jne
jmp
lret
lahf
sub
negl
iret
mov
xchg
scas
lock
stos
outsl
bound
negb
sahf
push
xchg
rorb
lahf
push
test
sbb
pop
and
xchg
sub
into
push
and
mov
push
fsubs
push
dec
adc
add
mov
pop
jmp
jo
andl
inc
into
popf
adc
pushf
lods
lret
dec
add
adc
cmp
test
jmp
movsl
dec
adc
or
dec
mov
xchg
add
scas
jns
call
movsb
imul
daa
cs
addr16
fsts
ss
jge
ret
push
fwait
int3
and
fs
mov
testl
aaa
popf
inc
mov
or
pop
inc
push
loope
iret
sbbl
fdivr
dec
dec
test
lea
enter
cltd
sub
mov
add
rcll
mov
xor
sub
ret
call
insb
adc
sub
iret
dec
xor
cwtl
call
out
jmp
lret
mov
daa
jg
sbb
inc
pop
mov
mov
mov
xchg
cmpsl
jbe
jo
jle
cmp
sub
pop
inc
out
loopne
cmp
inc
mov
xchg
push
pop
cwtl
pop
and
mov
jo
outsb
roll
jno
add
sub
mov
sub
int3
jae
outsb
and
mov
cmp
lock
or
lods
test
mov
lret
ds
push
mov
dec
inc
dec
jae
pop
pop
js
aaa
and
adc
bound
popa
clc
xor
nop
ds
mov
push
jb
cmpsl
fildll
and
clc
repnz
in
mov
push
cmp
push
lahf
xlat
sbb
jg
sub
or
enter
mov
or
cmp
adc
xchg
jg
cwtl
iret
and
sub
jb
pop
mov
xor
hlt
jle
sub
in
xchg
cltd
enter
push
push
sub
sub
test
and
icebp
cwtl
gs
adc
out
push
in
or
pop
or
lcall
out
loop
shll
jge
jno
mov
idivl
mov
dec
aam
sarl
test
fs
xchg
push
cmp
mov
pushl
mov
fsts
xor
inc
adc
mov
adc
jb
stc
out
mov
xchg
popf
shll
and
out
js
ret
in
stos
faddl
call
inc
ja
jne
push
jmp
xchg
outsl
push
or
push
out
cmc
int3
stos
dec
push
lcall
aad
xlat
xlat
pop
imul
mov
add
lods
inc
add
je
sbbl
inc
data16
or
inc
mov
push
push
xchg
sbb
sti
sbb
cmc
sub
cli
repz
pop
loopne
jmp
cld
lret
sahf
sahf
cmp
mov
jne
scas
arpl
jnp
cli
jge
es
outsb
dec
mov
iret
sub
les
xchg
roll
xor
mov
xchg
lods
inc
cmp
into
jmp
sub
dec
es
adc
test
cs
sti
xor
inc
sbb
add
cmpl
adc
adc
pop
cltd
add
mov
aas
push
cmp
sbb
or
frstor
add
test
les
int
fisttpll
cmc
mov
cmc
mov
sbb
jmp
ss
and
mov
test
fs
loope
push
dec
adc
xor
sub
pop
cmpsl
ljmp
mov
addb
out
lahf
push
cltd
imul
adc
movl
sub
inc
xor
insb
lock
aas
sbb
pop
mov
icebp
int
dec
aam
or
mov
lods
or
add
jge
sti
add
je
setg
sbb
cmp
jl
ds
dec
pop
push
adc
mov
mov
test
mov
loop
lcall
push
lahf
cld
mov
loope
xor
out
mov
repz
jmp
inc
cmp
in
lea
shl
xor
adc
popa
add
aam
ja
ficoms
call
pusha
lret
data16
xlat
cmp
cmc
lret
stos
sbb
xor
and
dec
dec
rcr
mov
adc
lock
push
cmp
adc
jge
sbb
imul
and
inc
pop
mov
les
ficoms
mov
decb
pop
push
das
mov
out
sbb
jbe
add
cmc
lcall
sub
repnz
inc
adc
inc
fiaddl
hlt
movsb
add
sub
push
lods
sub
bnd
out
and
and
stos
stos
jg
jecxz
subl
and
jbe
cmc
add
xor
iret
dec
arpl
push
test
and
loopne
lcall
les
je
je
sahf
xchg
stc
cmp
cmpsb
xor
frstor
mull
test
sbb
inc
in
aad
loopne
test
shl
xor
xor
xchg
lea
sbb
fadds
test
inc
or
and
jle
out
mov
into
xor
stos
jnp
or
repnz
loope
xor
sub
scas
test
xor
leave
jno
insl
cwtl
xchg
xchg
test
pop
sub
push
mov
iret
mov
fcomip
pop
push
xchg
popf
cmc
cmp
lret
fdivrl
sub
jp
jg
loopne
lock
test
iret
scas
xor
testl
insb
lods
pop
inc
jmp
mov
dec
adc
xchg
mov
ja
xchg
push
sbb
movsb
pop
jp
xchg
push
loope
rorl
stos
es
out
inc
pop
sti
jno
pop
jo
inc
mov
jp
iret
popa
mov
inc
jno
dec
int3
mov
aad
mov
loopne
cs
lret
loopne
ljmp
adc
insb
daa
xchg
lods
cmp
push
dec
ja
add
lds
jnp
sub
gs
rcrb
aad
jo
loope
imul
nop
loop
imul
addl
fs
mov
call
nop
aas
in
xor
cmc
scas
mov
int3
ljmp
arpl
into
or
out
inc
pusha
xor
sti
pop
fmul
out
jnp
fs
popl
or
test
insl
pop
cld
jno
inc
aaa
lret
and
inc
mulb
and
test
push
inc
add
mul
jb
leave
jmp
jae
xchg
push
push
sub
mov
pop
jbe
xor
pop
inc
push
push
popa
jg
dec
cmpsl
pusha
imul
mov
stc
sub
or
and
mov
mov
xchg
dec
inc
mov
cli
rorb
out
dec
push
pop
mov
jl
mov
sub
adc
sahf
sub
push
mov
es
sbb
int
xchg
leave
add
addb
cmp
cmp
ret
leave
fidivrl
adc
cltd
sub
xchg
pop
sbb
pop
fsts
daa
push
push
push
shlb
and
lock
call
inc
and
add
jl
scas
test
shl
pop
jbe
popa
pop
testl
les
push
rcll
mov
ja
pop
add
repnz
add
mov
andl
js
stos
enter
cltd
adc
jne
jae
add
sub
scas
imul
jne
sub
inc
pop
ret
loope
mov
sbbb
enter
inc
jp
cmpsl
sub
rcll
jno
xchg
sbb
jmp
xor
push
jmp
add
repz
mov
and
xorl
call
subl
leave
adc
ljmp
mov
stos
negl
jb
es
ljmp
pop
and
test
outsb
aas
mov
pop
shlb
jg
lods
jle
call
ret
pop
outsl
out
push
push
rorb
dec
repz
adc
add
cmpsb
aad
add
mov
in
sub
fnstenv
mov
xor
lods
int
jb
inc
ret
ja
test
stc
insb
sbb
movsb
inc
push
orb
in
cmp
das
mov
and
jmp
popf
sbb
pop
mov
xlat
jo,pn
mov
insl
leave
inc
pop
jbe
jae,pt
mov
or
aaa
popa
into
cmp
jmp
xchg
or
mov
pop
clc
mov
icebp
addb
jg
jne
xorl
int
jle
in
jp
cmp
fbld
or
jmp
adc
or
push
mov
cwtl
mov
and
dec
scas
ds
mov
in
mov
xor
lret
add
pushf
nop
add
push
test
xor
xchg
cmp
fisubrl
sub
insl
jnp
dec
insb
inc
lret
orl
bound
jno
arpl
mov
pop
ljmp
push
inc
xor
in
stos
dec
mov
js
jmp
add
out
outsb
xor
xchg
jg
inc
xchg
mov
bound
sbb
aam
and
aas
or
jp
and
les
push
stos
imul
mov
loop
dec
or
mov
jne
xor
data16
cmp
and
add
aas
mov
fwait
gs
xor
ror
loope
adc
aam
or
dec
push
pushf
cmp
aaa
out
adc
out
icebp
sub
mov
add
push
sti
and
dec
into
ss
icebp
and
lahf
cmp
mov
cs
push
outsb
daa
jg
lock
add
popa
mov
sti
aam
out
je
mov
push
pop
popa
cmp
jge
int3
enter
leave
cli
sbb
aad
inc
lcall
jg
mov
push
mov
cs
pop
das
mov
mov
out
fldl
iret
mov
sbb
push
inc
xchg
imul
push
jbe
orb
dec
sbb
xor
inc
xchg
mov
clc
dec
daa
aam
roll
iret
cmp
push
mov
add
lea
or
mov
shl
aaa
or
sarb
push
cmc
dec
mov
sbb
jl
cmp
jmp
push
out
mov
and
inc
icebp
jge
cmpsb
std
and
iret
or
jmp
pop
cmp
call
incb
insl
and
mov
xchg
rclb
insl
pushf
pop
or
ljmp
xchg
pop
popf
testl
xchg
enter
hlt
lock
test
jg
inc
flds
pop
add
push
es
rorb
sub
push
xchg
and
cmp
sub
jle
inc
mov
lcall
arpl
loope
mov
pop
aam
ds
adc
inc
mov
std
dec
stc
or
push
dec
mov
lret
es
repz
inc
add
jns
aas
loopne
and
jb
jbe
push
ja
pop
inc
test
movsb
xchg
test
daa
into
adc
inc
or
aaa
dec
sub
imul
and
mov
adc
das
inc
xor
xor
rcl
mov
xor
or
or
lret
notb
int
out
adc
fsubs
scas
or
inc
pop
sbb
pop
push
adc
dec
inc
cmpsb
lock
clc
add
mov
pop
aas
pushf
adc
stos
cmp
dec
mov
stos
jno
pusha
inc
lds
xchg
sub
out
sbb
daa
mov
icebp
je
test
mov
push
mov
mov
push
pop
jne
mov
xchg
loop
test
icebp
lds
and
inc
sbb
push
add
shll
inc
rclb
fadds
inc
sbb
push
fs
js
cmp
inc
sti
adc
lret
jae
stos
cmp
pop
mov
jg
in
shll
bound
sarl
pop
push
cmp
mov
sbb
int3
mov
pop
inc
xchg
and
sahf
jns
push
jmp
jmp
mov
fwait
pop
sub
sub
loop
xchg
dec
int3
inc
sbb
sbb
insl
jl
cmp
clc
cmp
inc
jbe
test
out
adc
mov
mov
in
jnp
mov
push
xchg
add
add
dec
sub
mov
push
js
stc
fnstcw
out
ds
dec
insl
data16
jbe
das
cmp
jmp
dec
lods
mov
pop
ljmp
insb
pop
lcall
fbld
pop
add
jl
sbb
pop
sub
into
jb
mov
pop
outsl
aad
xchg
dec
sbb
xchg
push
or
xchg
setne
pop
inc
dec
mov
sub
hlt
outsb
and
mov
jae
popf
xchg
lods
shl
popf
lea
inc
adc
das
leave
ds
add
inc
std
mov
mov
enter
repnz
and
xor
insl
mov
mov
js
popa
loop
inc
sub
inc
adc
inc
ret
and
std
insb
jmp
xor
xor
inc
mov
xchg
leave
scas
or
insl
xchg
dec
mov
dec
movswl
cmp
pop
adc
imull
cmpsl
pop
push
xchg
cmpsl
adc
or
fs
mov
es
imul
aaa
sub
xor
fcomp
jo
fcmovnu
pop
movsb
addr16
mov
xchg
and
cltd
jns
mov
and
popa
js
out
pop
push
dec
jb
mov
outsb
and
dec
flds
or
pop
jae
push
pop
idivl
int
dec
dec
lds
lahf
add
out
lock
mov
adcb
mov
add
jmp
fnstcw
and
fsts
sbb
xorb
icebp
rorb
fs
mov
insb
lds
or
test
adc
fsub
mov
fcomip
cmp
adc
mov
sti
sti
jge
cltd
xchg
jp
test
insl
testl
xor
mov
cmp
fidivrs
push
pop
imul
je,pt
pop
dec
shl
sbb
sti
arpl
and
jne
js
xor
add
xor
fucom
sbb
insb
sbb
enter
xchg
call
mov
mov
out
pop
sub
push
jnp
push
nop
mov
lea
jg
cmc
into
push
and
sbb
push
pusha
sub
add
xchg
in
pop
xchg
icebp
jle
cmpb
mov
je
push
insl
movsb
mov
jg
hlt
gs
test
add
icebp
icebp
xchg
in
data16
xchg
insl
jmp
mov
sbb
mov
aam
cs
je
cmp
xchg
and
sub
cmp
cld
icebp
dec
sbb
stos
mov
and
mov
cs
es
or
add
cmp
mov
popa
cmp
fstpt
jge
mov
pop
lock
xlat
fs
imul
iret
push
movsb
xlat
jno
aad
adc
and
mov
push
scas
dec
das
add
ljmp
mov
fisubl
pop
fcmove
ss
add
repnz
call
inc
and
mov
or
popf
sub
adc
mov
jo
mov
mov
dec
in
std
adc
rclb
and
adcb
or
sti
jno
int3
outsl
dec
xchg
data16
and
xchg
jg
mov
faddp
jo
rclb
imul
imul
mov
jns
stos
popa
mov
int3
add
cmc
push
clc
cmp
enter
pop
rclb
ja
sub
cmpsl
push
dec
mov
ret
incl
addl
inc
push
fnstcw
xor
push
cli
or
rcll
mov
es
xchg
add
or
jns
lret
mov
arpl
cmp
and
sti
jb
or
and
out
jae
mov
outsl
jne
cld
insb
add
notl
call
dec
movsl
pusha
add
in
ja
cmp
std
ror
test
sub
in
or
xchg
xor
xchg
pop
orb
outsb
adc
adc
or
xchg
cmp
in
jno
cltd
cmp
sbb
jmp
pop
inc
mov
shrl
aaa
push
js
mov
loopne
test
cmp
lds
xor
idivl
xlat
sbb
testb
iret
sar
sub
ljmp
xor
je
jge
pop
fnstcw
and
test
xor
sbb
lods
mov
pop
dec
mov
or
sti
stos
insl
dec
xor
addr16
and
jno
iret
in
xchg
data16
and
into
jns
xchg
or
pop
xchg
rcrb
jne
pop
in
mov
dec
fs
jmp
stc
xor
into
pop
aas
mov
jbe
in
cmp
fcompp
cmpsl
jb
and
add
add
sub
mov
pop
adc
out
out
aad
cmp
cmp
popl
nop
xor
icebp
push
test
mov
cmp
push
cld
adcb
add
and
adc
mov
mov
inc
loop
push
jge
adc
mov
into
mov
jne
xor
cmpsb
inc
add
cmpsb
jb
cmp
cmpl
add
mov
aas
rolb
mov
idivb
lock
pcmpgtb
lea
jnp
jge
in
push
ss
sbb
aaa
mov
dec
mov
push
jl
adc
ss
push
sbb
bound
ljmp
xchg
jge
add
dec
push
pop
sbb
adc
mov
gs
stc
lahf
bound
jnp
insl
add
test
movsl
dec
sub
test
add
push
sub
loopne
into
cltd
dec
sahf
les
int3
mov
inc
nop
bswap
loop
mov
lds
pop
push
push
pop
out
mov
dec
mov
and
cmpsl
sub
dec
mov
imul
scas
cltd
xchg
ja
xchg
mov
xchg
pop
adc
mov
pop
hlt
push
dec
jecxz
es
inc
and
cmp
inc
cmpxchg
pop
data16
testb
jnp
dec
cwtl
data16
cmp
jnp
inc
inc
xor
pop
pusha
inc
aad
pop
insb
outsl
loopne
sub
popa
pop
cmpsl
inc
test
mov
or
xchg
push
psubd
jno
pop
inc
push
jecxz
xor
cmp
sub
imul
jp
lahf
xor
cs
pop
jnp
mov
shll
hlt
popf
insb
div
outsb
out
fstps
add
sbb
mov
or
sub
xchg
mov
pop
xor
in
test
sahf
ja
sbbb
add
add
cmpsl
dec
rorb
imul
rolb
decl
push
jge
mov
cmpsl
push
in
fucom
or
inc
sub
fcompl
mov
xchg
lcall
dec
ja
testb
lods
mov
aas
sbb
jp
inc
out
sub
jp
scas
adc
mov
addr16
decb
fiadds
fdivrp
int3
xchg
mov
data16
mov
mov
cmp
inc
mov
sub
inc
or
push
rolb
int3
mov
mov
push
fistpl
filds
dec
ss
push
ljmp
mov
sub
popa
loope
jae
bound
ss
popa
int
mov
xchg
lcall
adc
dec
cs
lret
pop
or
in
dec
inc
inc
mov
push
inc
das
cltd
and
fdivp
dec
mov
xchg
or
int3
cmp
xchg
inc
das
sub
or
jnp
jl
jge
and
jae
orb
fstps
mov
lret
cli
psrad
xchg
pop
xchg
aas
inc
adc
mov
nop
imul
inc
js
fbstp
pop
sbb
pop
mov
mov
popf
loopne
filds
inc
add
pop
jmp
mov
aaa
lea
in
push
pop
adc
push
shrl
stos
iret
cmpsl
or
les
sub
mov
nop
popf
ds
aam
sbb
jae
sbb
fnsave
test
sbb
lahf
push
or
mov
popf
mov
jb
pop
xchg
dec
xchg
mov
fistl
subl
dec
and
xor
rclb
cli
sub
hlt
shll
shll
dec
ret
ds
mov
add
or
int3
mov
mov
adc
les
sbb
and
fiadds
pop
testl
loope
dec
adc
xchg
or
cmp
out
pop
add
dec
cmp
push
inc
xchg
testb
test
imulb
rcrl
inc
popf
sub
lret
stos
lret
scas
repnz
pop
pop
lods
lea
adc
sbb
pop
sbb
cltd
out
ds
jg
add
shr
into
push
das
xor
cwtl
mov
sub
dec
xchg
in
mov
imul
dec
fs
out
mov
xor
cwtl
jnp
pop
or
dec
push
adc
mov
xor
scas
add
inc
nop
addr16
rolb
int
pushw
insb
push
lcall
mov
dec
movsl
insl
adc
push
cmpsb
pop
test
shlb
pop
cmp
cmp
outsl
adc
inc
jns
xchg
out
xchg
movsb
xchg
and
mov
mov
test
inc
mov
test
inc
jl
cs
mov
mov
jne
das
and
aaa
inc
dec
jo
pop
mov
fiaddl
pop
in
cmc
loopne
cli
rcrb
adc
cmp
jecxz
stos
out
in
std
adc
xchg
mov
pop
xor
cmpsb
or
orb
jne
push
and
xor
inc
dec
sbb
mov
iret
sbb
addr16
std
fldt
lret
xchg
pop
push
repz
call
popf
mov
pop
add
dec
gs
mov
pop
xchg
mov
xchg
or
inc
stc
jne
lret
fst
pop
mov
or
sub
dec
addr16
fistl
fsubp
in
sub
pop
mov
test
push
rcrl
fstpt
in
rcll
jb
orb
or
in
sti
icebp
outsb
cs
add
sub
xchg
fldt
outsl
data16
aam
cmpsb
orl
daa
mov
pop
cmp
and
xchg
in
insl
movsl
fldl
cmpsl
dec
inc
cwtl
push
loop
xchg
cmp
fs
ljmp
outsl
shrb
mov
popf
sbb
ret
xchg
shll
fistpll
xchg
in
ja
push
out
mov
andb
dec
xor
or
ds
xlat
scas
sbb
clc
xor
enter
mov
scas
cli
adc
repz
xor
mov
mov
pop
jbe
push
in
movsl
pusha
enter
in
pop
iret
xorb
fcomps
out
mov
sti
sbb
out
and
insl
xchg
fs
insl
lock
scas
jno
frstor
in
cmc
jae
dec
es
xchg
push
jno
jl
outsb
cmpsl
popf
add
aas
test
lahf
adc
sub
lret
out
pop
jnp
and
push
stos
popa
repz
adc
xor
fiadds
mov
pushf
fmul
mov
scas
xor
mov
mov
loope
or
jno
lret
push
ljmp
je
mov
jecxz
jbe
jo
fsubl
imul
mov
xchg
jbe
in
cwtl
jge
mov
cmp
xchg
sub
sbb
cmp
sub
pop
ret
pop
pop
push
xchg
addr16
xor
cmp
loop
shlb
and
cmp
mov
jmp
sahf
shlb
es
into
jge
adc
sysenter
pop
cmpsl
fdiv
lret
jg
jo
push
xlat
fildl
add
lret
cli
mull
mov
aam
cmpsb
fwait
xchg
xchg
dec
cs
dec
fmull
xlat
add
sbb
cld
repnz
rcr
add
shrl
shrl
pushf
fiadds
mov
xor
cmp
sbb
popf
xor
push
lahf
bound
icebp
mov
pop
push
shlb
out
adc
das
and
sub
add
stos
repnz
outsb
arpl
cmpsl
xor
ror
les
push
sbb
lock
ss
ja
sbb
mov
ds
jno
add
stos
daa
icebp
outsb
fbld
jmp
sbb
out
outsb
lock
push
pop
push
inc
mov
imul
mov
jecxz
addr16
mov
adc
cmpb
test
mov
aam
xor
mov
xor
sarl
lret
movsl
push
faddl
push
lock
out
mov
popa
aam
loope
adc
loope
call
imul
inc
mov
mov
xlat
dec
into
addr16
ja
xchg
and
xchg
jmp
sbb
sahf
int3
xchg
sub
fiaddl
mov
addr16
imul
jae
das
shrb
xor
or
imul
add
test
or
cmp
jge
mov
jecxz
insb
inc
dec
sub
or
addr16
orb
frstor
test
mov
arpl
push
dec
mov
xchg
fisttps
loope
push
add
mov
cmc
enter
dec
sub
xchg
pusha
mov
jp
mov
dec
and
inc
sbb
pushf
andl
pop
jl
jbe
inc
bnd
mov
adc
pop
adc
adc
sbb
cmpsb
mov
jle
sbb
mov
sahf
mov
enter
fdivrs
xor
fstl
sbb
je
mov
adc
shrl
popa
dec
or
movsl
fnstcw
jecxz
adc
push
bound
jbe
insl
int3
lods
enter
testb
call
lods
push
leave
cld
jp
fisubs
mov
sbb
outsl
test
xorb
xlat
inc
inc
mov
movsl
ja
scas
jae
cmp
cmpsl
test
fs
xchg
mov
add
aas
xchg
mov
sub
loopne
push
pop
je
pop
mov
ss
shll
push
repnz
mov
pop
int
sbb
test
dec
cmp
jns
int3
aas
mov
sbb
leave
pop
mov
hlt
push
add
xlat
cwtl
cmp
js
sahf
addr16
mov
leave
decb
dec
lds
jle
jecxz
adc
sarb
inc
outsl
orl
push
jns
sbb
in
sub
sbb
mov
scas
push
push
lahf
push
mov
scas
sub
mov
sti
and
and
pushf
xor
in
xchg
roll
ss
jbe
fadds
xchg
out
lret
lods
loop
and
imul
or
lock
movsl
xlat
pop
je
test
jmp
pop
insl
push
mov
xor
addr16
cmp
xchg
pop
out
xor
sbb
mov
push
and
notl
mov
lahf
mov
rorb
mov
iret
cmpsb
add
xchg
je
fucomip
dec
ss
test
xchg
popa
je
cmpsb
mov
test
repnz
loope
nop
add
fnstcw
sti
adc
or
lahf
sbb
pusha
jae
cmp
or
xor
mov
clc
mov
lods
cwtl
mov
xor
push
or
sbb
pop
jge
mov
sbbb
sbb
loopne
sub
stos
cmp
xchg
jl
xchg
mov
cwtl
push
xchg
push
and
or
mov
shrb
lea
jnp
ljmp
int3
pop
fiaddl
or
rolb
jbe
xchg
jecxz
movsb
mov
lret
add
mov
xchg
pop
in
pop
add
dec
movl
rorb
dec
das
sbb
into
mov
es
inc
icebp
xor
nop
adc
js
mov
xor
loope
mov
push
sub
cld
and
ds
jae
adc
popf
mov
dec
jo
xchg
dec
mov
mov
add
dec
push
aas
push
outsl
pushf
or
push
xchg
sub
push
arpl
fbld
xor
push
or
inc
xchg
outsb
xor
jge
mov
inc
or
xchg
clc
cmp
pop
push
int3
add
inc
add
shll
push
into
adc
or
pop
dec
sti
ds
in
dec
ljmp
adc
add
cmp
adc
jns
or
push
fidivs
adc
push
lds
aam
sub
in
xchg
les
rcl
shll
sbb
push
fldcw
fimuls
mov
addr16
inc
in
popa
cmc
jo
ss
pop
and
repz
outsb
jge
andl
sub
insb
and
outsl
test
iret
pushf
mov
sbb
in
dec
shll
mov
lcall
ja
xchg
out
ljmp
mov
dec
cli
inc
jb
leave
adc
test
in
or
cmp
jne
ret
or
into
add
out
fcomi
sbb
out
insb
pushf
sahf
sbb
ja
dec
xor
adc
sub
sarb
push
sbb
add
mov
and
or
push
mov
cld
or
sarl
jp
dec
test
test
xor
dec
add
xor
orb
inc
aad
enter
jnp
mov
rclb
test
mov
cmpsb
stos
dec
rcl
mov
movsl
or
mov
rcrb
lret
repz
js
daa
sbb
xchg
ja
stc
leave
ljmp
or
push
and
xorb
mov
jns
jns
int3
pusha
iret
imul
mov
jmp
mov
mov
in
cmc
mov
int
push
cwtl
fldl
pop
pop
mov
mov
sahf
jne
pop
shlb
push
leave
add
xchg
insb
pusha
mov
sahf
dec
add
and
outsl
pop
call
mov
mov
loope
arpl
mov
sub
sub
or
lret
cs
pusha
mov
sub
pusha
pop
cmc
data16
push
loope
push
lret
andb
cmp
fcoml
out
jmp
jl
adc
jne
call
inc
lods
pop
std
clc
jg
out
incl
push
sub
icebp
dec
ja
and
jmp
in
mov
imul
cltd
or
cltd
adc
int
xchg
shlb
jl
xlat
jle
or
pop
and
fisttpl
push
and
cmp
test
cmc
enter
inc
icebp
sbb
pop
xor
cmc
and
leave
xor
jae
adc
and
rolb
testl
cli
cs
mov
mov
sbb
inc
or
icebp
mov
jbe
pop
fistps
iret
xlat
fwait
int
jae
mov
arpl
jge
mov
sti
mov
inc
sahf
imul
ret
repnz
mov
xor
or
cmpsl
or
loopne
cmpsb
sub
repz
popa
dec
out
jecxz
jmp
aam
out
and
or
leave
or
or
test
adc
push
leave
stc
jle
fnstsw
xchg
pop
jne
pusha
jo
das
es
dec
popa
icebp
js
in
pop
xchg
mov
in
stc
orl
loop
leave
xchg
mov
int3
push
ret
or
jb
pusha
stc
loopne
aas
test
mov
fdiv
inc
adc
jmp
mov
rcrb
xor
dec
cmp
jns
dec
cmp
sub
inc
add
mov
std
fucomp
aad
dec
ds
sub
and
in
jnp
inc
cli
rorl
or
cmp
push
incl
sbbl
sub
jmp
in
push
xor
movsl
and
rcll
inc
and
inc
push
call
xchg
cmp
aad
je
bound
fs
jmp
loope
and
mov
jns
loope
adc
push
push
insb
sbb
and
push
mov
outsl
pop
mov
xchg
push
repz
movsb
test
aad
ss
popa
and
imul
pop
aas
lcall
out
xchg
dec
or
dec
adc
dec
adc
mov
push
mov
outsl
mov
sarb
push
cmpsl
jno
aad
sub
xor
popf
cmp
shll
arpl
dec
dec
mov
stos
adc
mov
lret
movsb
xchg
add
movsl
jp
popa
mov
push
rorb
xchg
xor
lcall
sahf
sbb
int
jb
iret
inc
pop
or
lret
lods
stos
xchg
cmp
push
lcall
xchg
add
jg
lcall
int3
and
imul
leave
dec
aaa
gs
insb
and
push
push
sar
clc
xchg
dec
cs
lods
or
mov
jle
les
gs
icebp
nop
not
jl
fnsave
xchg
bound
add
push
and
call
and
dec
es
mov
ret
or
insl
in
jbe
cmp
decl
or
mov
cs
repnz
rolb
sbb
jecxz
iret
push
xchg
sbb
or
jecxz
pop
je
xor
cs
push
movsl
lods
push
xor
in
jge
outsb
add
mov
sub
or
fs
add
testb
dec
add
in
bound
out
inc
dec
dec
fdiv
lcall
and
nop
and
imul
clc
jae
pusha
sbb
pop
jle
dec
fmull
mov
fs
fstpt
inc
and
pop
fdivs
cwtl
mov
pop
jg,pt
popf
cmp
test
shrl
xchg
cmpsl
pop
cmp
lahf
dec
cmp
mov
scas
mov
icebp
mov
pushaw
mov
aas
inc
adc
imul
jno
xchg
push
sub
xchg
movsl
adc
xorl
mov
add
xor
cmpsb
and
cmp
mov
cmp
rolb
lret
add
lret
sub
popf
ja
test
ret
add
ret
out
or
sub
pop
add
cwtl
fldt
sbb
icebp
jo
sahf
jbe
dec
and
outsb
or
adc
cli
out
xor
sti
cltd
outsl
cltd
rcll
cmpsb
and
xor
jbe
outsl
mov
test
jo
mov
mov
cs
inc
jmp
addr16
sbb
lea
in
loopne
adc
mov
sbb
add
add
cmp
dec
pop
dec
fcomi
fidivrs
xor
and
xor
jl
fdivrl
rorb
ljmp
jmp
jb
adc
das
test
jb
js
adc
lds
jnp
cmp
pop
sub
pop
lods
inc
pop
movsb
stos
popa
cs
jge
and
fnstsw
lods
scas
cld
xor
movsl
jecxz
xchg
cmp
pop
sahf
sbb
lahf
das
mov
xchg
fildl
sbb
push
lcall
xchg
mov
rcrl
cli
fnstenv
icebp
lcall
mov
or
int3
mov
in
daa
popf
pushaw
sub
mov
push
cltd
shrb
xor
xor
cld
and
insb
data16
imul
push
push
lds
aas
sbb
adc
enter
pop
push
pop
push
pop
mov
xor
sub
and
mov
aas
lahf
mov
cmpsl
call
xorl
cmc
loope
xchg
out
sub
sub
aam
xor
cltd
cmp
xchg
movsl
and
push
add
cmp
jmp
push
xchg
push
or
sub
and
bound
imul
stc
loopne
mov
mov
push
popf
std
imul
or
incb
add
stc
cmc
xchg
and
test
aaa
mov
incl
pop
inc
lret
in
jp
gs
add
add
movsb
stc
ds
test
data16
cmp
mov
scas
fstl
jle
loopne
jnp
adc
aaa
adc
insb
fldl
lret
jnp
dec
push
pusha
hlt
daa
push
lret
xor
adc
jge
loop
pop
xchg
lock
repz
lret
sub
add
fsubl
xor
and
rolb
lock
dec
aaa
or
out
inc
fucomi
loop
pop
add
cmp
push
pop
xor
xchg
cli
dec
pop
xchg
aaa
mov
outsl
cltd
jns
mov
shrl
iret
lret
push
stc
xchg
ljmp
test
pop
xlat
fwait
inc
nop
push
push
data16
loope
sub
or
ja
or
xchg
jno
jl
insl
or
push
push
or
jmp
push
adc
testb
decb
call
outsl
or
lret
xor
mov
mov
push
stos
fldt
dec
je
pop
cmpsl
and
addr16
test
mov
aad
mov
cwtl
xor
imull
xlat
jne,pt
jbe
daa
mov
ljmp
cmp
mov
push
sub
int3
xor
pusha
jns
aam
lret
mov
adc
or
xlat
jle
sbb
lahf
xor
mov
push
push
test
cmpl
and
adc
loope
icebp
inc
das
sbb
idivb
sub
fiadds
enter
jle
dec
mov
push
push
xchg
pushf
push
mov
insb
sub
jne
call
xchg
orl
stos
call
mov
jns
xor
lea
sbbl
lahf
lret
mov
jge
push
push
fstpt
mov
rorl
xchg
daa
stos
mov
jmp
es
aam
xchg
sbb
pop
cmp
mov
mov
jae
lahf
call
fwait
xchg
dec
sbb
mov
jge
adc
shll
pop
add
mov
pop
cwtl
loop
pushf
mov
jecxz
mov
mov
ljmp
cmp
inc
fs
inc
push
nop
xlat
out
push
fsub
test
push
inc
cmp
or
cmp
mov
adc
lods
hlt
pop
insb
mov
sbb
test
enter
movsb
pushf
mul
xchg
dec
enter
loopne
dec
je
push
std
xor
pcmpeqb
mov
or
out
cmp
jb
imul
jg
mov
cmc
mov
mov
pop
inc
xor
jecxz
test
sub
push
sbbl
pop
adc
and
test
lea
nop
mov
adc
rclb
stc
jae
jb
js
rcll
cmp
or
or
les
mov
and
popf
jecxz
or
cld
jb
mov
xchg
out
shll
xchg
mov
fcompl
repz
and
xor
popa
iret
and
pop
push
or
mov
adc
fistl
push
push
cli
pusha
leave
les
mov
in
fs
lods
lcall
cmp
cmpsb
icebp
inc
daa
pop
pop
jo
fucomi
add
fcompl
stos
cld
and
out
adc
fbld
mov
mov
and
dec
in
xchg
cmc
jl
das
stos
pop
divl
ror
dec
cmp
aad
lods
add
in
adc
xor
mov
dec
xchg
mov
mov
sbb
das
bound
inc
cmc
icebp
jno
movsl
mov
jbe
add
xchg
xchg
jbe
and
aad
adc
in
sub
es
cmp
push
lahf
ds
insb
jne
inc
push
dec
dec
mov
pop
andb
push
inc
cmp
mov
mov
push
or
mov
push
mov
rclb
pop
mov
inc
leave
mov
cmpb
add
push
hlt
pop
sub
xlat
out
out
and
pop
xlat
sahf
push
shlb
jo
scas
sbbb
fwait
repnz
imul
lahf
clc
jge
jnp
dec
xlat
out
jbe
inc
dec
adc
in
sahf
jmp
mov
rol
xchg
fldln2
fucomip
dec
jp
lret
mov
cmpsb
dec
lcall
xchg
bound
dec
enter
addb
cmp
arpl
xchg
les
int3
scas
in
add
fstps
xchg
pusha
mov
push
adcb
mov
ds
jae
push
lds
fbstp
sub
fisttpl
and
adc
adc
jle
sbb
adc
outsl
cltd
inc
push
inc
ret
fstps
mov
fisttpl
iret
scas
dec
push
pop
xchg
xchg
cmp
fs
xor
adc
mov
push
fimull
and
or
aas
pop
jo
and
jge
pop
pop
xchg
inc
mov
push
call
ja
jle
xlat
fstps
cmpsb
inc
xlat
mov
adc
cmp
sub
mov
xorl
xor
inc
pop
adc
std
cmp
sbb
inc
insl
das
sbb
push
fwait
into
iret
add
es
test
daa
fidivrl
cwtl
mov
or
sub
arpl
mov
fnstsw
fistpl
dec
fwait
dec
lea
cmc
leave
jmp
pop
mov
jle
fstl
lea
xor
pop
inc
mov
pushf
lds
mov
in
sub
fisubrs
and
mov
pop
mov
sbb
out
subl
xchg
scas
loopne
call
adc
iret
sti
fisubs
adc
pop
ds
cwtl
sbb
sub
imulb
xor
mul
pop
jae
fst
mov
pop
dec
adc
imul
ja
andb
add
xchg
shl
daa
insl
cmp
bswap
mov
xor
pop
mov
cmp
xchg
mov
out
or
add
push
mov
mov
xor
pop
add
jne
mov
daa
insl
or
cmp
push
sub
subb
gs
out
mov
ret
mov
xchg
and
add
mov
sub
inc
mull
mov
rorb
sarb
fldcw
nop
mov
lods
je
movsb
js
push
sbb
fdivs
push
xstore-rng
cmpsl
inc
dec
scas
pop
test
and
repnz
ret
adc
inc
xor
xchg
ss
push
lods
adc
int
dec
cmc
ds
or
xchg
push
int
adc
mov
movsl
scas
bound
pop
sbb
pop
inc
push
sub
jp
dec
aad
xchg
xor
mov
lahf
mov
cmpsl
loope
push
sub
adc
dec
insb
mov
rcl
nop
push
push
andl
dec
add
jle
mov
imul
adc
and
mov
pop
sub
mov
push
loope
push
fisttpll
mov
in
or
pop
cmp
mov
clc
mov
je
outsb
jecxz
sbb
addr16
mov
enter
lock
in
mov
mov
or
mov
imul
or
mov
pavgw
mov
movsl
sub
xlat
pop
mov
pop
pslld
into
ret
scas
cmp
push
mov
dec
lret
mov
movsl
push
inc
cmp
push
rcll
stos
push
xor
mov
push
push
scas
jecxz
add
dec
mov
mov
sbb
mov
push
popf
test
jl
out
push
insb
fcomps
shll
or
fsts
test
sbb
cmp
pop
jmp
push
mov
mov
inc
push
outsb
mov
xor
add
mov
cs
cwtl
cwtl
sti
or
jne
popf
pop
pop
sbb
and
push
iret
cmpsb
adc
inc
xchg
push
pop
shlb
xor
dec
xchg
pop
cmc
mov
cmovs
bound
xchg
pop
sub
lcall
xchg
loop
mov
cmp
adc
outsb
popa
loopne
lea
jb
mov
rcrb
cmp
push
push
icebp
iret
push
and
das
jns
push
aad
jae
lcall
mov
dec
arpl
sbb
pop
jg
mov
mov
jbe
dec
dec
cmc
out
movb
cmp
imull
pop
popa
or
and
fs
test
loop
jecxz
push
push
xchg
xchg
xchg
sbb
outsl
inc
das
push
inc
xlat
testl
pop
xor
pmulhw
je
cmp
es
mov
fmuls
dec
inc
mov
pop
jno
pshufw
ds
and
js
filds
out
jl
scas
jecxz
sarb
jo
mov
orl
pop
jae
ja
out
inc
daa
inc
imul
mov
cmpb
cli
pop
inc
xchg
stos
lret
cltd
test
cld
cmp
sti
cmpb
pop
btl
cmp
rcrl
jbe
and
lock
xor
sahf
cmp
dec
push
push
ret
xor
sbb
pop
jle
cmp
hlt
cli
xor
stos
push
out
lcall
sbbb
and
jb
dec
daa
jae
sub
pusha
xor
sbb
inc
xchg
imul
pop
xchg
insl
mov
ret
inc
int3
cmp
std
inc
repz
cmp
cld
lret
shll
push
sahf
mov
mov
fucomip
pop
pop
mov
sbb
push
mov
xor
mov
stos
test
pop
es
notb
cli
sbb
in
push
call
and
xchg
gs
les
out
enter
leave
jg
xor
loop
xchg
out
arpl
sub
out
lahf
xchg
pop
or
pop
dec
mov
sub
mov
out
sbb
pop
lret
and
xchg
mov
sysret
push
pop
lea
aad
ja
and
outsl
fcoml
pusha
pop
in
pop
cmp
and
das
stos
or
out
jp
jno
out
sub
lods
rorl
sub
mov
scas
call
sbb
lret
and
lods
push
fstps
sub
mov
scas
loope
in
cmp
sti
rcrl
addr16
icebp
and
dec
bound
lret
dec
int
push
je
movsb
xchg
mov
xchg
subl
popa
ja
sub
lret
lods
mov
addr16
jle
mov
jae
imul
ja
outsl
adcb
add
jne
loope
repnz
add
sbb
cmp
lret
cmp
and
mov
adc
and
in
mov
jns
ss
inc
sbb
mov
sub
repz
fwait
push
mov
dec
icebp
xchg
loopne
inc
xchg
mov
push
cmp
or
sub
lods
fmul
xchg
or
dec
and
repnz
pop
fs
push
inc
xchg
fbstp
xor
mov
mov
ficoml
cmp
sbb
cmp
sub
stos
jno
arpl
jb
in
jo
sahf
shr
aas
stos
stos
cmpsl
ja
cmp
hlt
or
add
add
fiadds
je
and
ja
or
popa
lret
mov
popf
push
inc
or
jge
repnz
inc
inc
xor
fmull
nop
pop
xor
or
lods
test
push
or
popf
push
filds
aas
mov
mov
push
xchg
mov
cmp
cmpsl
jne
or
sub
dec
sbb
xchg
mov
xor
cmpsb
dec
mov
push
cmpsl
jle
pop
fiaddl
rol
dec
stos
push
jne
stos
mov
and
popf
push
sub
int
outsl
and
push
iret
sbb
int
enter
cmpsb
clc
shrb
js
and
sub
xor
movsl
mov
or
sub
daa
inc
or
stos
ds
xchg
fdivr
add
filds
mov
cmpsb
adc
lds
movsb
jno
stc
and
or
or
inc
shlb
jp
mov
repnz
pop
popf
xlat
rcr
pop
dec
pop
mov
xchg
aaa
pushw
sub
lock
mov
cld
lds
bnd
inc
xacquire
fidivs
jecxz
jns
dec
test
push
ljmp
loopne
jae
push
mov
jp
add
cli
out
mov
inc
hlt
xor
xor
dec
xor
jnp
sarl
loop
pop
adc
aaa
push
es
inc
jecxz
incb
in
fdivrl
mov
lret
cltd
push
fwait
cmp
std
popf
and
daa
sub
jecxz
aaa
icebp
add
push
mov
nop
imul
xor
popa
jno
stc
xor
jl
jae
decl
pop
add
fsubrs
loop
dec
fildll
dec
shr
push
push
int3
arpl
insb
inc
fimull
and
cmpsl
mov
sbb
xchg
dec
aad
mov
mov
mov
mov
ds
mov
sbbl
hlt
sbbb
add
xchg
lahf
jl
lret
push
roll
lea
clc
sub
test
or
dec
std
pop
mov
popa
in
sub
and
bnd
push
sub
sub
and
xchg
dec
pop
jmp
jae
sbb
gs
xchg
lea
xchg
xchg
cltd
xchg
imul
dec
dec
mov
ja
sbb
negl
scas
das
ds
and
cmc
cwtl
inc
inc
ja
adc
mov
pop
lods
addb
pushf
clc
loop
aaa
sbb
mov
lods
xor
fdivl
and
mov
xchg
cmp
add
outsl
jb
xor
movsl
xchg
leave
js
ds
inc
pop
cmp
cmp
shr
iret
mov
xor
test
aaa
fdivl
pop
sub
mov
fsubl
fisttpll
jge
lea
cmpsl
sahf
mov
adc
pop
xchg
xchg
fs
outsb
and
jl
les
mov
sbb
pop
inc
add
shl
adc
push
push
xchg
ret
dec
mov
mov
sarb
or
test
push
imul
shlb
std
aad
sbb
jnp
adc
mov
icebp
sub
push
lods
lea
mov
gs
jle
jo
push
iret
push
pop
xchg
mov
movsl
sbb
xchg
or
shrl
jns
pop
bnd
or
or
push
fsts
sub
mov
cmp
lds
lods
xchg
pop
repnz
fsubs
lods
ret
fs
mov
mov
jg
in
xchg
push
ljmp
mov
in
sbb
add
xchg
cwtl
sbb
adc
cmp
mov
xchg
lea
rcrb
add
fwait
jle
stc
push
pop
cmp
xchg
mov
out
inc
mov
cmc
lock
sbb
shrb
xorl
xchg
and
cmp
push
or
mov
jmp
xchg
shlb
jns
inc
xorl
aaa
push
xchg
pop
push
imul
cmp
jmp
das
adc
int
xor
inc
inc
hlt
js
cltd
loop
mov
fldz
stos
iret
fadd
xchg
out
jecxz
mov
mov
cwtl
or
mov
loop
xchg
repnz
and
lcall
push
dec
pop
xchg
pop
in
xor
push
orb
xor
sub
call
inc
lea
mov
cli
repz
jns
scas
loope
dec
fmul
sub
jle
or
dec
jnp
mov
mov
cmp
pop
dec
mov
pop
add
mov
mov
test
pop
mov
les
mov
int3
xchg
adc
mov
jae
pop
repz
mov
stos
movb
adc
push
mov
daa
adc
dec
ret
inc
lea
push
fsubr
test
adc
cmp
aaa
les
cwtl
loopne
jle
lret
in
or
gs
lock
adc
jmp
iret
push
pop
dec
sbb
jg
push
scas
pop
dec
mov
sub
fdivr
xor
xlat
and
pop
or
push
lods
addl
scas
lret
adc
test
arpl
push
cmp
sahf
fs
xchg
push
add
sbb
sub
jno
adc
pop
cmp
push
mov
jbe
and
and
cli
fdivs
sbb
pop
iret
sbb
mov
fstpt
fxch
data16
shrb
ror
icebp
push
pop
pop
sub
sbb
xchg
push
pop
pop
jnp
sbb
les
mov
mov
lret
sbb
xor
hlt
js
adc
sub
pop
jo
sbb
ret
jl
xchg
sbb
adc
rcrl
pop
test
xchg
test
int3
pushf
xor
mov
movsb
lret
aad
jle
hlt
movsb
adc
push
sbb
inc
mov
rolb
test
testb
popf
mov
dec
sub
out
sub
bound
sbb
stos
in
cs
sti
pop
cmp
fwait
mov
cld
mov
cmpsb
les
ror
clc
xchg
bound
dec
fcmovb
xchg
rcl
sub
test
inc
mov
mov
mov
sub
inc
mov
in
dec
sbb
call
cmpxchg8b
insb
mov
outsb
sub
jb
cmc
cmp
sbb
push
cs
pop
xor
lahf
inc
sbb
out
xchg
inc
and
cmpsb
push
pop
mov
jns
imul
mov
xlat
cmp
mov
dec
jo
in
pop
mov
aad
lds
adc
xorl
mov
xor
popa
dec
vmovsd
adc
imul
popf
lods
push
jg
mov
mov
shl
pop
push
xor
mov
test
mov
int3
bound
cld
mov
sub
movsb
js
dec
xchg
jp
mov
cld
push
mov
mov
fldt
push
je
jmp
mov
sti
sbb
fsts
out
mov
sbb
cmp
xchg
mov
add
mov
push
and
push
sbb
dec
cld
jnp
leave
out
mov
push
pop
xchg
shll
into
mov
call
adc
fwait
loop
xchg
dec
in
in
or
pop
mov
int
je
movsb
fildl
test
icebp
repz
add
cmpsl
xchg
jns
pusha
test
xor
mov
aam
flds
test
out
jecxz
lcall
mov
sahf
insb
pop
and
int3
fs
jnp
sbb
negl
jae
pop
stc
and
into
insl
outsb
inc
sarl
mov
pushl
xor
dec
xor
mov
lret
bound
in
mov
or
out
pushf
add
and
psraw
ss
bound
dec
pop
jnp
inc
mov
popf
push
in
sahf
push
mov
sbb
out
out
jne
pop
cltd
ja
rol
jne
daa
data16
mov
pop
adc
and
decb
and
push
sti
jns
mov
mov
lahf
outsb
aam
and
mov
inc
test
pop
sti
mov
push
enter
inc
fmull
fwait
jp
scas
mov
stos
pop
push
pushf
and
or
ss
sbbb
mov
cmpb
push
inc
imul
sub
test
fsubl
or
and
dec
in
cli
hlt
lret
xchg
cmp
fs
xchg
jle
cmp
sbb
lods
mov
push
inc
sub
mov
mov
movsb
jbe
ljmp
sbb
stos
pop
ss
mov
push
popf
push
cmpsl
out
mov
cmp
cmp
mov
cltd
mov
out
mov
mov
mov
sub
dec
js
pop
outsb
insl
stos
push
shl
pop
push
sub
sbb
add
enter
push
mov
pop
sub
addr16
or
add
ret
xorb
clc
jb
enter
hlt
popa
test
cmp
mov
out
add
mov
xchg
xchg
test
fcomp
dec
stos
xor
into
xchg
inc
cld
mov
fwait
in
inc
ljmp
scas
mov
js
mov
jl
push
adc
cmc
pop
sbb
dec
mov
lcall
cmp
insl
popa
jb
or
or
outsl
mov
fdivl
cmp
ds
xor
pop
xor
push
push
cmp
int
out
out
cmp
adc
mov
out
cmp
mov
or
sbb
mov
bound
pop
ret
outsl
or
mov
daa
jecxz
sbb
jge
mov
cmc
adc
cmp
js
ret
mov
iret
xor
imul
out
sub
int3
lahf
sbb
sbb
divb
movsl
mov
mov
int
popa
les
sbb
or
inc
cmp
xchg
addb
sahf
jle
nop
xchg
std
lret
push
mov
push
add
pop
dec
inc
cmp
mov
xlat
xor
mov
adc
push
fwait
pop
pop
ljmp
addr16
mov
test
or
and
jg
push
in
adc
push
hlt
add
push
int3
cmpsl
cmp
push
sbb
jl
pop
nopl
jl
fs
pop
xchg
das
xchg
push
rorb
js
data16
inc
adc
xchg
enter
aas
in
in
jb
std
nop
jb
mov
insb
leave
sub
cmp
sbb
dec
pcmpeqb
jmp
or
out
addr16
rorl
and
add
sti
mov
mov
mov
std
mov
lods
push
pop
mov
mov
popf
and
in
adc
inc
mov
xor
inc
dec
inc
mov
push
imul
push
mul
test
or
hlt
stos
lcall
push
mov
neg
js
sbb
lods
bound
lea
xor
add
push
clc
push
mov
int
std
push
sbb
lea
mov
push
adc
add
or
mov
or
pop
outsl
inc
int3
dec
bound
shll
jnp
inc
xor
fmull
push
dec
scas
out
mov
cmc
or
mov
loope
outsb
push
mov
sahf
stos
das
out
imul
mov
stc
enter
jne
test
and
es
add
mov
mov
cmp
cs
fwait
mov
insb
movsb
mov
in
xor
sbb
testl
out
bound
add
dec
fcomip
nop
xlat
outsl
shrl
add
push
pop
jo
cltd
dec
or
or
int3
or
mov
pusha
lahf
mov
fsubrl
inc
fs
cltd
cltd
insb
jecxz
xor
mov
popf
inc
lret
and
pushf
mov
xchg
push
pop
bound
mov
in
f2xm1
cltd
rcll
fnsetpm(287
jno
fcomp
mov
arpl
lcall
leave
mov
pop
sub
dec
je
adc
test
ss
pushf
loope
outsb
ret
or
fs
stc
insb
scas
pop
pop
or
adc
notb
xorb
test
jbe
mov
mov
out
mov
loope
movsl
mov
pop
or
shr
fldcw
nop
insl
pushf
sub
adc
jnp
jb
repnz
pop
adc
jge
pop
mov
mov
adc
xchg
sub
fimuls
test
xor
jmp
mov
jno
jnp
mov
cltd
cld
addb
ret
pop
jecxz
inc
pop
push
fsubs
outsb
das
pop
fdivrs
scas
push
in
iret
pop
push
lret
sub
push
lds
stos
fs
out
lret
push
sub
lahf
cwtl
xlat
add
dec
movsb
in
call
mov
or
inc
xchg
pop
cli
add
data16
popf
hlt
outsb
test
dec
mov
inc
mov
popa
outsb
in
lods
enter
inc
scas
xchg
subl
sahf
xchg
mov
ja
push
lods
pop
pop
dec
lods
mov
dec
rol
leave
dec
hlt
push
sbb
xor
cmp
outsb
mov
inc
lahf
add
dec
sub
mov
aad
jle
in
enter
push
push
cwtl
jl
out
jl
push
sbb
cmc
pushf
cmpsb
sub
jbe
fstpl
rcrl
push
push
inc
adc
icebp
adc
pop
and
imul
adc
out
cmp
push
sbb
pandn
and
inc
jge
out
mov
gs
inc
inc
jge
sahf
cmpsb
push
adc
push
mov
or
fistl
lods
scas
push
pop
mov
stos
jle
ret
mov
mov
push
leave
dec
les
add
es
imul
sarl
out
addr16
lds
and
leave
out
insb
xor
push
push
pop
repnz
xor
cmpsl
dec
jbe
mov
dec
and
push
dec
cmpsl
fmuls
addl
repnz
or
es
es
push
mov
push
insl
sbb
loop
xor
mov
push
push
mov
xor
lret
rcl
sarl
push
jl
push
fucom
stc
pop
subb
jno
adc
nop
mov
inc
addl
mov
sbb
rcl
mov
xchg
and
sub
mov
popa
mov
adc
movsb
mov
cmp
jno
dec
repnz
jle
cltd
lea
in
jae
push
push
imul
imul
push
or
test
xlat
in
dec
xchg
inc
imul
sub
or
lret
insb
pop
adc
and
and
in
pop
repnz
inc
stos
mov
iret
repnz
dec
adc
je
les
cwtl
lcall
ljmp
sbbl
data16
inc
push
pop
popa
int
jae
iret
jecxz
adc
cld
inc
test
cltd
jmp
bnd
jno
xchg
sub
into
loopne
imull
stos
repnz
add
pop
or
xor
push
es
movsl
stc
stc
mov
xchg
leave
and
lret
out
push
xchg
pusha
bnd
rorb
sbb
jge
ret
gs
xchg
mov
mov
dec
xchg
and
sub
dec
gs
xor
dec
xchg
fsubrs
inc
insl
fdivrs
pop
jb
ljmp
cld
mov
cmp
mov
scas
mov
mov
inc
jle
aad
xor
push
xchg
adc
ss
mov
popa
in
shl
pop
dec
and
dec
daa
dec
sbb
add
sarb
add
add
mov
jne
call
jae
push
pop
and
mov
iret
and
adc
out
out
inc
ja
mov
mov
nop
add
adc
rolb
or
out
pop
xor
jbe
jle
shrl
lea
movsb
stos
sub
repz
clc
ret
or
jecxz
int3
jno
test
adc
sub
jno
shlb
gs
dec
push
mov
cmpsb
enter
add
les
push
fdivp
hlt
mov
inc
je
popf
repnz
fimull
inc
xchg
push
fsubr
ror
adc
loopne
mov
mov
and
mov
push
pop
out
pop
rcrl
movsb
scas
fwait
daa
push
inc
mov
hlt
and
sbb
loop
sahf
jle
rcrb
mov
xor
adc
xchg
sbb
add
jno
xchg
mov
lods
cs
pop
sbb
int
mov
and
sahf
jno
adc
adc
xor
ficoml
fadd
sbb
imul
and
push
shll
ljmp
lea
nop
cld
dec
sahf
lods
mov
jbe
repnz
adc
xor
mov
sbb
dec
mov
mov
add
jne
int3
add
add
clc
leave
pop
xchg
jp
clc
sbb
cmc
popf
arpl
loopne
sar
pop
leave
cwtl
fcompp
ret
out
sub
dec
scas
pop
pop
xlat
mov
xchg
lock
mov
pusha
mov
xor
push
mov
stos
repnz
xlat
imul
shrb
iret
jp
pop
adc
divl
mov
hlt
jp
in
ja
mov
jbe
or
xor
cmpsl
jbe
mov
es
xsave
rcrl
pusha
push
push
inc
test
sarb
add
xor
adc
inc
xor
mov
xorl
mov
adc
adc
decb
or
cmp
sub
pop
leave
pop
mov
mov
loop
xor
mov
xlat
cwtl
mov
stos
out
pop
dec
xchg
lods
pushf
dec
push
lret
sub
in
fprem
test
jecxz
add
inc
sub
xchg
add
mov
loope
lcall
loopne
sbbl
scas
enter
incb
cmp
test
mov
stos
imulb
push
int
dec
jns
sub
inc
add
or
push
in
cmp
sti
pop
xchg
outsb
sub
add
fisttpl
mov
mov
fdiv
xchg
shrb
fsts
fstps
sub
push
movsl
pusha
in
lret
add
lods
mov
pushw
adc
nop
xor
bound
mov
enter
idivl
jnp
cmp
scas
cmp
push
testl
lret
sbb
popa
mov
inc
div
lahf
pop
dec
cwtl
scas
pop
push
jmp
sbb
pop
lcall
add
xor
push
pop
repz
jg
adc
push
jl
mov
cmp
test
add
out
pusha
popf
outsb
mov
stos
lret
adc
cmp
pop
jmp
mov
push
mov
dec
add
sub
dec
ss
mov
mov
sbb
cmpsl
dec
lret
loop
push
cld
mov
mov
push
hlt
das
sbb
mov
fstl
or
ss
je
add
pop
inc
pop
js
or
clc
fcmovnbe
mov
dec
and
xchg
cmp
loopne
mov
sti
gs
sbb
icebp
or
sub
inc
in
jns
jp
int3
cmp
push
sahf
aas
mov
in
sub
dec
jne
ss
into
loope
movsb
sub
dec
adc
or
in
sbb
aas
xor
lret
sub
and
pop
or
and
movsl
lea
dec
add
sbb
xchg
mov
mov
mov
movsl
xchg
inc
jge
cmpsl
popf
fs
subb
mov
enter
lcall
loop
push
sub
jo
add
sti
fucom
push
lods
pop
sbb
test
inc
mov
mov
pop
xchg
xor
rolb
and
pop
push
out
dec
call
dec
add
pop
inc
ret
icebp
into
subl
adc
fstl
xchg
cs
in
dec
pusha
outsl
mov
mov
xchg
add
gs
scas
cld
add
add
jnp
aam
mov
lcall
cmpsl
cs
adc
xchg
add
or
mov
mov
data16
sahf
jne
xchg
sub
or
scas
mov
movsl
addr16
orb
test
mov
inc
into
mov
fldl
cmp
enter
jns
cli
jbe
fstps
xor
dec
notl
or
movsl
popf
movsl
loop
mov
pop
xchg
and
lahf
ficoml
ficoms
adc
mov
out
out
mov
cmp
aas
movsb
jb
mov
lahf
fadd
fmuls
in
popf
xor
jo
lret
in
jp
lods
mov
and
inc
in
fnstcw
insl
xchg
aad
popl
mov
jmp
mov
orb
pop
pushf
mov
sub
dec
jmp
sub
shlb
dec
jl
aam
iret
mov
xchg
jnp
lret
adc
sbb
ds
sahf
rcr
lods
ret
push
pop
pop
push
imul
dec
push
inc
add
push
xchg
inc
into
mov
xchg
scas
test
lds
arpl
inc
inc
push
mov
fiadds
jo
jp
ljmp
jns
daa
in
icebp
aaa
xlat
out
adc
out
cmc
xchg
add
xchg
popf
testl
rolb
add
std
insb
or
push
bound
cmp
mov
xor
push
pop
xchg
rolb
inc
lods
f2xm1
mov
cwtl
mov
ss
ret
call
push
lcall
popa
lret
gs
xchg
cmp
imul
out
sbb
mov
mov
xchg
repz
in
jmp
mov
dec
gs
push
stc
or
stc
jns
adc
dec
inc
movsb
add
add
dec
mov
jns
popa
mov
lea
stos
dec
bound
push
pop
into
pop
xchg
mov
push
test
gs
ja
shlb
scas
cmp
icebp
cmpsl
outsb
mov
je
push
and
test
mov
dec
lods
mov
xlat
sub
je
mov
and
cmp
push
sti
addr16
fimull
shrb
jmp
add
or
mov
xor
roll
std
hlt
gs
arpl
subl
cmp
xchg
movsl
aaa
and
aam
leave
xor
scas
inc
add
adc
and
or
loop
hlt
loopne
pop
fcmove
push
add
insb
ret
xchg
adc
lock
or
xor
pop
fidivs
adc
cmpsl
add
paddb
repnz
push
loop
fs
jns
jb
push
jmp
xor
bound
lds
and
pop
std
shl
or
sub
sti
cmpsb
loope
pop
je
movsb
cli
mov
xchg
sbb
fmul
stos
rcrl
insb
repnz
test
pop
sbb
lods
nop
mov
xor
mov
sahf
mov
loopne
ljmp
ljmp
fisttpll
sti
xlat
inc
pop
fwait
add
mov
xor
nop
mov
jae
hlt
mov
jo
rorl
cmp
sub
sbb
rorb
xor
adc
sti
sub
pushf
outsb
enter
je
mov
imul
or
pop
inc
sub
ds
or
mov
test
test
nopl
mov
ds
sarb
loopne
fldenv
dec
add
add
loop
inc
sbb
dec
xor
push
cmpsb
jp
jae
bound
mov
cwtl
pop
add
jmp
jb
lods
call
mov
add
cli
inc
insl
fxch
repz
leave
xor
ds
pop
ror
pop
dec
outsb
jge
xor
adc
mov
scas
mov
jmp
or
test
sub
mov
mov
cmp
mov
stos
movsb
inc
xchg
inc
inc
pop
fmull
push
int
lods
push
fldenv
xor
sbb
mov
jg
dec
pushf
sbb
pop
lret
inc
xor
in
mov
clc
fiaddl
xor
gs
in
mov
mov
orl
in
sahf
repnz
inc
in
dec
xchg
icebp
push
mov
pop
mov
fnstsw
inc
iret
mov
hlt
icebp
sbb
and
lock
cld
inc
lret
insl
iret
hlt
and
xor
lcall
dec
movsl
outsb
aam
xchg
mov
cmp
mov
hlt
cld
leave
ja
jp
lods
and
stos
mov
mov
fstl
inc
pop
aad
div
add
push
ret
mov
or
sbb
xor
push
sbb
repnz
call
fcoml
adc
cld
leave
push
mov
fildl
pusha
pusha
shlb
cmp
test
mov
jbe
leave
and
adc
mov
imul
xchg
lds
popf
cwtl
jne
scas
cmpsl
call
and
das
ja
loope
mov
ljmp
push
jmp
xchg
dec
je,pt
xor
jecxz
sti
out
xchg
adc
divl
imul
repz
inc
inc
xor
shll
dec
in
sub
jmp
or
movsl
jmp
daa
loope
call
sbb
push
aaa
movsb
fcomp
mov
pop
inc
cmp
loop
in
xchg
outsb
cwtl
xchg
out
inc
loope
cwtl
sub
jne
pop
sbb
mov
add
inc
ds
adc
pusha
xor
cld
pop
pop
aaa
sarl
mov
mov
test
rol
mov
sbb
cwtl
int
jl
pop
clc
xchg
jb
shll
mov
adc
test
scas
and
dec
pop
cmp
fimuls
in
jl
jmp
mov
mov
ss
fsubr
sub
test
pop
call
inc
mov
lods
lahf
pop
enter
mov
loop
and
addr16
outsb
leave
nop
adc
jg
and
xchg
je
aad
inc
mov
frstor
or
inc
xor
dec
sub
pop
dec
int3
pop
or
in
outsl
xor
cmc
test
mov
mov
mov
ret
lret
mov
mov
push
enter
out
ficomps
inc
cmpsl
xchg
test
add
leave
sarb
fisubrs
outsl
rcl
lahf
shufps
jae
or
adc
scas
jne
dec
pop
xor
fcmovu
movzwl
mov
pusha
stos
xchg
addr16
push
es
test
push
call
std
fcompl
cmpsl
int3
sub
jmp
inc
ljmp
addr16
ja
cmp
push
cmpsb
stos
pop
ftst
out
aas
aaa
mov
loopne
sub
outsb
ja
or
jmp
sub
mov
inc
addl
sbb
cmp
dec
rcl
and
cmpsl
lods
lods
sub
mov
je
pop
mov
sbb
lods
jmp
sbb
push
mov
movsb
fistpl
pop
mov
cmp
sub
sarl
xorl
sti
test
ds
xchg
jmp
stos
push
in
je
adc
add
icebp
movsb
nop
mov
std
jge
xor
jo
lea
int3
dec
mov
das
mov
mov
stos
dec
js
outsb
inc
mov
cwtl
pop
fists
sub
jb
lock
pop
mov
or
shlb
and
aam
sbb
dec
dec
movsb
push
mov
mov
cmpsb
ret
mov
inc
jp
or
push
ds
sub
mov
dec
in
jnp
jecxz
push
mov
xchg
mov
loope
cmp
in
xchg
sar
sub
hlt
push
jae
nop
xor
jl
mov
adc
xor
fstl
sub
shl
cltd
mov
sub
pop
in
je
push
cld
mov
aam
sbb
jnp
push
lret
pop
pop
insb
sbb
mov
fldcw
sbb
or
jl
adc
mov
jae
fcoms
or
subb
xchg
mov
fisttps
sti
fistl
clc
in
xchg
or
push
imul
pop
sub
enter
sti
stos
dec
fldcw
popa
call
add
dec
outsb
popf
cwtl
inc
idivb
and
loop
nop
pop
adc
mov
mov
xor
js
shr
pop
mov
xchg
mov
ret
fldcw
inc
fucomi
dec
cmp
sub
sub
jp
loopne
in
roll
loope
push
xor
decl
mov
mov
std
jmp
and
jb
ja
cmp
push
pop
jmp
inc
push
int
inc
cmp
xor
scas
rcrb
mov
out
jp
loopne
rolb
jnp
xchg
xchg
jbe
nop
cmp
pushf
push
in
mov
and
mov
in
pop
inc
xlat
cmpsl
pop
call
push
fneni(8087
inc
dec
rorb
cltd
mov
adc
sub
mov
andl
mov
std
sti
mov
xor
dec
jb
incb
jl
pop
out
ss
ljmp
dec
loopne
stc
test
sub
mov
jbe
imul
xchg
inc
mov
cmpl
stos
xor
mov
mov
pusha
mov
jb
mov
testb
jb
ds
into
loopne
jecxz
add
sbb
pop
ja
ss
push
lcall
adc
nop
lock
test
or
cmp
cmpsb
es
xchg
xor
iret
int3
mov
insl
inc
xchg
loop
add
push
xor
cmp
xchg
xchg
in
and
cmp
dec
pop
and
call
inc
int3
sub
xor
xlat
push
dec
addr16
pushf
in
and
fildl
xchg
fcmove
mov
daa
mov
dec
into
sub
push
mov
orb
fistpl
pushf
outsl
xchg
sbb
out
icebp
cmp
bound
mov
jnp
cmp
cs
push
ret
stos
sub
xor
xor
jnp
xor
pop
cmpsl
xor
popf
test
scas
outsb
aas
scas
fidivrl
mov
inc
inc
xchg
lret
dec
jbe
jns
and
mov
inc
notb
mov
in
inc
cld
ds
pop
mov
test
or
stc
cmpsb
stc
popa
out
xchg
or
inc
call
mov
pop
push
cmpsb
fdivr
mov
mov
test
adc
sub
lea
cmc
cld
cmp
mov
xchg
pop
adc
pop
cmp
mov
push
ljmp
mov
or
outsb
jg
add
add
xor
mov
add
aas
dec
pop
les
sub
sub
push
mov
loopne
cmp
lret
push
call
add
jge
xor
mov
xchg
jp
dec
call
xor
cmp
cmp
mov
xorb
and
jne
dec
pop
mov
addb
mov
xchg
lret
jg
outsb
sbb
enter
je
and
jle
push
fdivr
test
cmp
push
mov
inc
and
aad
cltd
iret
cmp
inc
add
inc
pop
outsb
xchg
ds
aaa
sub
and
xor
or
or
lods
or
fidivs
mov
insb
adc
sub
push
lahf
cmp
shll
popa
es
bound
test
iret
push
jecxz
pop
iret
fst
jmp
push
mov
in
insl
rorb
in
pushf
ss
pop
jmp
icebp
pop
enter
test
inc
inc
and
data16
fistl
inc
nop
in
pop
inc
leave
es
cmp
hlt
mov
cld
insl
and
and
xchg
test
shll
pop
push
data16
mulb
adc
daa
fisubl
daa
repnz
sub
pop
jge
adc
stc
rclb
mov
js
push
cmpsl
mov
lret
xor
out
addr16
lret
repz
pop
aad
sub
stc
cld
sub
xchg
mov
mov
cmpsl
insb
sbb
push
push
fistpl
popa
bound
outsb
cmp
inc
and
in
cmp
xor
or
pusha
sbb
andb
push
xor
mov
sub
inc
lea
out
pop
mov
adc
xlat
dec
movsl
es
inc
mov
leave
dec
out
adc
push
pop
xor
jmp
xchg
inc
stos
mov
loopne
xorb
ss
xchg
fcmovnu
stos
div
test
mov
sahf
and
roll
sti
mov
dec
push
pop
mov
imul
xor
in
imul
fsubl
adc
dec
dec
in
lahf
ret
pusha
sbb
repnz
hlt
in
and
dec
jg
movsb
into
cmp
push
pop
movsb
rorl
insl
adc
push
and
add
push
loope
dec
enter
inc
rorl
adc
ss
adc
mov
or
or
data16
jae
cmp
imul
cli
adc
pusha
out
dec
and
stos
mov
cltd
movsl
int3
lock
mov
cmp
aaa
push
lret
outsb
sub
sub
sbb
lds
dec
xor
out
push
push
dec
push
mov
in
addr16
in
pop
push
sub
nop
jno
xchg
mov
in
and
inc
stc
jb
push
mov
mov
imul
push
inc
loope
pop
cmp
lods
xorl
jne
dec
out
push
dec
mov
jmp
push
xchg
cmp
lahf
or
adc
mov
fsub
xor
in
jnp
mov
jo
shrl
sbbl
jecxz
and
xor
outsl
movsl
cli
cld
iret
mov
arpl
push
loope
xor
out
fists
fidivs
sub
and
fbstp
in
xor
mov
outsb
ljmp
test
fisttpl
fidivrl
outsb
loopne
out
or
dec
cmpsb
xchg
push
and
jne
mov
push
mov
test
aad
movsl
aam
gs
inc
aam
pop
add
outsl
xchg
test
mov
mov
push
scas
scas
or
bound
fsubrp
repnz
dec
in
jno
nop
test
mov
dec
lcall
push
pop
rcrl
aam
mov
lds
add
xor
push
sub
mov
mov
dec
xchg
pop
daa
mov
jns
std
test
ret
push
negl
mov
imul
xchg
adc
leave
push
mov
sub
push
mov
push
adc
aas
sbb
push
out
mov
jl
imul
fistl
cmp
movsb
sbb
jmp
jl
adc
push
push
hlt
enter
and
repnz
sub
dec
mov
and
cmpl
and
jle
mov
jno
sarb
mov
mov
and
cli
jb
je
lods
negl
imul
repz
stc
std
jnp
je
inc
sub
push
adc
mov
mov
lock
xchg
push
iret
pop
xchg
add
cs
push
dec
xchg
ret
movsb
xor
scas
aam
push
and
jno
rorl
cmp
jnp
into
orl
jge
ds
or
pop
pop
pusha
call
sub
xlat
int
mov
push
pop
rorb
jg
sbb
ss
pop
dec
mov
sbb
push
dec
jle
pop
and
pushf
adc
mov
jecxz
mov
ja
jge
inc
xchg
xchg
das
loopne
imul
cs
and
cli
lret
push
cli
inc
addb
in
pop
push
loop
jg
jge
mov
loopne
xchg
lods
sbb
rorl
fiaddl
pop
xor
push
mov
xchg
fcomps
cmp
notb
rorl
cmp
repz
les
out
adc
jp
xlat
mov
jl
in
sub
loope
pop
in
lcall
sub
outsb
pop
mov
dec
push
and
jne
fisttps
orb
or
out
test
leave
nop
sti
jle
scas
arpl
inc
jl
xchg
add
sbb
lea
aad
mov
mov
aaa
repnz
shrb
adc
mov
or
mov
mov
js
mov
mov
aaa
jns
imul
or
sub
xchg
pop
sbb
ret
or
jg
flds
xor
popa
adc
xor
stc
int
cmp
adc
sbbb
js
jmp
stc
adc
or
mov
int
lret
dec
arpl
inc
outsb
push
test
shl
push
test
mov
sub
out
iret
pushf
jo
loope
dec
rolb
incb
fistl
jle
mov
arpl
xor
ret
stc
cmp
ret
fimuls
pop
jg
pop
adc
aad
pop
stos
in
and
les
test
fs
test
popf
or
es
pushf
add
cltd
mov
mov
insb
add
push
int3
rclb
andb
je
lcall
nop
push
or
repz
cmp
add
arpl
jmp
push
cwtl
aad
xchg
ja
sbb
cwtl
inc
dec
sub
ret
scas
pop
jno
out
push
xchg
out
push
imul
mov
scas
lret
sbb
imul
cmp
mov
test
ret
pop
mov
mov
loope
xchg
ret
enter
out
repnz
xor
jne
push
lret
cmp
das
das
arpl
sub
inc
or
jmp
in
push
sub
sbb
ret
js
in
inc
bound
and
icebp
or
pop
loopne
sbb
icebp
in
loope
push
and
adc
imul
movsb
hlt
xor
mov
ret
test
bound
dec
push
sub
rcr
divb
ret
pop
mov
sbb
mov
jle
mov
mov
or
mov
xchg
xchg
rolb
scas
fwait
jne
loop
cld
cmc
or
mov
mov
shrl
xchg
fwait
adc
cwtl
sbb
dec
int3
iret
fwait
outsl
lcall
or
leave
lret
jb
fstl
inc
push
mov
push
imul
dec
sbb
fildl
scas
neg
popa
aaa
neg
les
inc
adc
jmp
sahf
fwait
in
jae
jecxz
and
mov
jns
aad
std
cmp
mov
in
insl
jb
fadds
dec
fimull
ret
push
ja
aas
stos
jb
lret
xchg
sub
mov
mov
lret
es
pop
ret
test
pop
sbb
mov
leave
inc
enter
xor
jns
xor
in
xor
mov
push
mov
insl
cmp
mov
lea
fwait
call
insb
inc
push
scas
jo
mov
icebp
popa
test
push
lahf
je
out
and
movsl
mov
ljmp
jle
cmpsl
inc
lahf
adc
cmpsl
fcomps
fmul
push
xchg
lret
repnz
dec
pop
dec
ss
popa
inc
negl
pop
pop
xor
add
sub
inc
fsubrs
jl
cld
push
lds
sub
cmp
jmp
mov
aam
jnp
xchg
lahf
std
sbb
xor
cmpsb
scas
mov
dec
inc
xlat
sbb
lcall
mov
test
cmp
pop
mov
sahf
mov
cwtl
lea
lret
jle
frstor
xsha256
cmpsb
push
pop
fistpl
jne
pusha
xor
cs
subb
roll
xchg
xor
push
andl
icebp
mov
imul
pusha
jne
xchg
pop
push
andl
mov
jns
cmpb
jne
lock
lock
in
repz
mov
push
jo
fnstsw
add
cmp
imul
xchg
or
ret
mov
arpl
adc
out
popa
mov
stc
xor
xchg
outsl
mov
xor
xchg
fs
cld
mov
adc
xor
ret
xor
xchg
mov
mov
jecxz
add
mov
mov
sbb
dec
xor
mov
inc
push
fiadds
xchg
mov
stos
fidivrl
inc
cwtl
out
cld
jae
add
add
mov
jo
pusha
orl
xchg
imul
sbb
test
mov
sub
cmp
xchg
jno
jmp
and
mov
std
pop
xor
rcll
call
jno
jns
dec
jp
sub
aaa
adc
push
aad
insb
mov
cmp
inc
test
xchg
imul
sbb
into
xchg
lods
mov
inc
stc
mov
xor
aad
lahf
outsb
jl
mov
adc
scas
aam
sbb
cmp
stos
in
test
icebp
xor
dec
cmc
lret
bound
frstor
sbb
push
push
xor
test
mov
in
aaa
in
popa
push
or
xlat
cmp
out
mov
inc
mov
pushf
mov
sbb
sbbb
pushf
jb
mov
and
sbbl
jns
sub
subb
jno
mov
out
outsl
mov
fsubl
cmpsb
fwait
xchg
mov
inc
and
jbe
jo
arpl
xor
sti
xchg
xchg
xor
xchg
ja
adc
mov
rclb
jmp
int3
sub
jmp
addr16
movsl
iret
mov
int
pop
mov
out
adcl
jnp
mov
int
mov
aam
sar
movsb
cmp
xor
test
movsb
loop
inc
cmp
cld
in
nop
loop
scas
add
outsl
push
jl
aam
cmpsb
mov
stc
push
jb
aad
jae
stc
push
jg,pn
roll
loope
icebp
dec
xor
stos
dec
loope
shrl
adc
dec
enter
push
jg
cmp
or
mov
je
ds
or
sub
sarb
xchg
and
sbbw
out
xor
ljmp
sti
add
sar
ret
pop
mov
mov
add
mov
mov
xor
inc
mov
jne
scas
jnp
add
pop
sub
test
cmpsl
scas
or
xchg
hlt
mov
leave
inc
fidivrl
dec
stos
das
ret
sbb
mov
xor
push
jbe
dec
mov
lea
pusha
or
cmp
mov
jnp
dec
dec
jmp
repnz
xchg
push
imul
sbb
out
cmpsl
mov
xorb
out
fbstp
xchg
daa
adc
xor
out
dec
iret
xchg
in
dec
adc
xchg
in
jge
mov
sbb
outsb
cs
add
andl
mov
and
in
outsb
xchg
lcall
dec
leave
pop
es
je
sbb
add
fwait
lcall
xor
xchg
push
rolb
ret
jae
mov
adc
jle
xor
leave
icebp
or
push
jae
aas
xor
inc
mov
fistl
outsb
mov
pop
inc
cmc
ret
xchg
xor
inc
daa
mull
and
repnz
jecxz
shrl
in
aas
jo
jbe
add
cmp
cli
lret
int3
outsl
dec
inc
rorl
fimull
int3
bound
test
pop
orl
mov
xchg
mov
rcl
inc
cmpsl
push
fisttpll
gs
mov
mov
fisttps
sbb
rclb
in
jnp
or
pop
dec
or
jl
filds
mov
cmp
sub
jecxz
movsl
mov
cli
jmp
add
mov
lock
sar
movsb
mov
and
xchg
push
fsubrl
push
sbb
daa
jl
ja
xorl
add
mov
sub
add
subl
add
loop
aad
lcall
popa
out
int
in
dec
ljmp
pop
jb
dec
iret
cltd
mov
sub
fwait
mov
cmp
imul
add
xchg
jmp
or
mov
add
or
adc
dec
add
mov
inc
add
adc
jo
dec
jns
shll
jge
aam
jne
sub
test
mov
push
mov
test
sarl
jg
cs
xchg
sahf
loope
int
popa
ss
jae
in
xchg
sbb
outsl
mov
dec
test
dec
test
push
jno
add
je
ficoml
pop
cmpsb
sbb
fmulp
pop
or
dec
adc
jbe
xor
xchg
pusha
or
xchg
sub
imul
vmwrite
fbstp
sub
lock
insl
lret
mov
and
pop
jp
sub
cmpsl
repnz
lds
push
outsb
roll
xchg
popf
dec
cmp
adc
cli
sahf
push
xchg
cmp
jmp
out
or
dec
xchg
into
aam
sub
sub
je
pop
cwtl
inc
xor
jo
adc
jbe
or
or
add
cmp
sti
push
or
mov
and
mov
pop
jae
sbb
lds
out
sbb
push
or
aaa
cmp
xor
inc
fisubs
push
xchg
xchg
or
jno
push
mov
dec
das
pop
push
add
sbb
push
inc
int3
scas
fiaddl
mov
fldcw
cmp
loope
and
mov
xchg
cs
cmp
ss
fldcw
out
mov
jbe
jne
sub
mov
xchg
pop
lods
aad
cmp
pop
inc
sub
xchg
nop
loope
xchg
js
and
xor
or
repz
aas
pusha
adc
add
nop
dec
pop
negl
jo
mov
cmp
push
lret
ljmp
jb
stc
mov
js
jno
add
sub
movhlps
punpckhbw
push
push
cmp
loopne
cmp
mov
daa
pusha
xor
loopne
dec
and
test
int
stos
inc
xor
repz
jbe
mov
sti
mov
addr16
pop
add
outsl
pop
xchg
jecxz
pop
fiaddl
dec
sbb
or
and
or
orl
xchg
fwait
int
movsl
daa
mov
xchg
mov
push
cmp
or
mov
sub
xorb
lock
or
fwait
js
or
xor
mov
andl
aam
je
jl
mov
xor
adc
iret
pop
out
ss
mov
push
jbe
xchg
inc
pop
mov
mov
xor
loope
out
mov
inc
out
imull
mov
faddl
sbb
scas
pop
sbb
adc
jle
jge
stc
pop
mov
dec
push
repz
jg
out
addr16
dec
mov
fsts
call
xor
cmp
into
xor
cmp
fistps
in
mov
stos
xchg
into
aad
mov
scas
das
int
inc
out
dec
sarb
pop
pushw
mov
xor
fs
sub
outsb
int
inc
mov
fs
pop
out
jnp
and
cmp
stc
xor
in
fsubrp
pop
xchg
xchg
jmp
ljmp
xor
and
lea
div
ljmp
cmpsb
dec
pop
mov
mov
je
mov
fcmovb
sahf
push
es
xor
sbb
jmp
cmpsl
pop
stc
fiadds
cmpsb
jnp
mov
clc
in
pop
jmp
sti
cmpsb
xchg
mov
or
push
iret
aaa
or
pop
push
xor
jg
push
jp
sti
mov
jp
sbb
adc
pop
cmpsb
or
mov
pop
mov
pop
vpmaxsw
leave
mov
das
jnp
hlt
jne
int
icebp
inc
jg
cmp
pop
sbb
mov
inc
adc
aam
xor
test
movsb
mov
in
mov
pop
pushf
xlat
add
lret
test
std
lds
pusha
inc
or
ljmpw
add
lds
js
jb
insb
shll
loop
mov
filds
dec
cltd
ja
dec
call
jne
adcb
sbb
add
push
inc
add
outsl
mov
pop
movsl
xchg
jg
into
daa
sbb
mov
xchg
xor
sbb
xchg
cmp
mov
inc
repz
lcall
js
or
loop
daa
cmp
push
mov
dec
sbb
jno
sub
mov
pop
jmp
sbb
hlt
js
push
rolb
mov
pop
je
mov
lret
fdivrp
rcll
sbb
mov
pushf
in
xchg
and
fiadds
add
push
or
arpl
dec
sahf
fstpt
popa
push
cs
mov
cmpsb
mov
inc
cli
mov
in
mov
xor
cmp
xor
repz
movsb
pop
es
incb
movsb
add
test
scas
loopne
pop
and
dec
mov
fldenv
shlb
sub
lea
fisubl
mov
and
jg
or
xor
add
call
arpl
lret
cmp
sbb
popa
icebp
aaa
popa
sahf
sub
pushf
test
lret
push
in
mov
xchg
pop
sbb
xchg
test
popf
sbb
stos
mov
mov
mov
in
lods
ficoml
jp
mov
mov
xchg
mov
dec
adc
and
jg
faddl
adc
and
popa
outsb
loop
shll
cmc
jb
mov
scas
insl
out
pop
xlat
pop
and
mov
addb
jp
mov
cmp
fisttps
mov
subl
pop
and
aad
mov
shll
jge
mov
inc
shlb
add
mov
mov
pop
fsub
sbb
clc
xor
pop
pop
icebp
out
dec
rcl
ja
push
stos
pop
std
jno
test
adc
clc
add
xor
or
push
add
mov
adc
outsl
lcall
sarb
xchg
sti
xchg
mov
insb
mov
inc
loope
fs
sar
xor
imul
mov
movb
or
xchg
rorl
adc
fdivl
mov
mov
jo
shr
loopne
rcl
int
mov
mov
dec
notb
daa
out
mov
cmp
aad
mov
mov
arpl
je
xchg
or
lea
mov
dec
arpl
in
pop
mov
mov
jbe
cli
loope
ljmp
add
pop
mov
mov
push
out
pop
test
dec
add
xchg
push
ret
adc
imulb
pop
inc
mov
mov
mov
test
movsb
mov
inc
and
fcmovu
xchg
test
mov
push
xor
mov
out
push
out
fbstp
pop
imul
adcl
js
mov
pop
pxor
mov
movsb
mov
test
pop
cwtl
mov
lds
cltd
cld
inc
sbb
cmp
imul
sub
sbb
jmp
aaa
es
aas
scas
xchg
or
inc
cmpsb
add
fstpl
xchg
inc
fcomip
jb
sti
sarl
call
mov
or
and
ljmp
mov
stos
dec
rcl
adc
dec
pop
adc
jns
adc
fs
adc
jno
or
ljmp
dec
rcrb
add
nop
ja
rorb
aaa
in
fdivrs
das
adc
in
sub
roll
lds
cli
ljmp
gs
or
rclb
jne
jns
out
loopne
jo
cmpsl
inc
cmp
jne
jne
jns
jae
sbb
imul
lcall
in
fldt
in
mov
xor
scas
call
pop
mov
aaa
lret
popa
sti
std
test
cmp
test
xor
pop
repnz
lea
int
js
mov
test
loopne
jo
push
cmc
call
mov
or
dec
iret
dec
add
loop
pop
ljmp
lret
mov
push
fwait
mov
mov
cmc
mov
and
push
pop
cmp
cwtl
loop
pop
xchg
out
sti
cmp
hlt
fistps
int
and
dec
mov
test
mov
and
lods
cli
and
aad
cli
ss
sti
aam
dec
xorb
loope
add
inc
dec
inc
jmp
sbb
leave
push
and
mov
es
insl
xchg
call
cltd
adcl
and
lret
ja
lret
add
lock
dec
fists
jbe
movsb
sarb
addr16
cmpsl
and
mov
mov
lea
sub
loopne
inc
int
aaa
add
pop
add
jo
mov
dec
xor
pop
sbbl
scas
aaa
sets
xchg
or
adc
test
ja
adc
push
jmp
jecxz
push
ljmp
sbb
int
test
inc
dec
pop
adc
jns
xchg
rorb
xor
loop
sbb
or
nop
cmp
test
outsb
push
movswl
icebp
in
pop
aaa
mov
shlb
mov
lahf
sbb
das
repz
loope
adc
jbe
sub
push
sub
arpl
push
daa
or
out
repz
repnz
fsubrp
cltd
dec
mov
dec
sub
adc
jp
mov
mov
push
xchg
test
cli
xchg
test
inc
dec
inc
addr16
inc
and
xchg
lret
insl
jb
mov
insl
test
mov
test
rcrb
int3
mov
mov
aam
enter
cmpsl
mov
test
cmp
add
daa
add
movsl
loop
jbe
mov
sbb
inc
mov
cmp
les
mov
aad
aas
xchg
jbe
mov
dec
sarl
ss
push
sub
cmp
std
lock
adc
or
adcb
mov
mov
mov
xor
mov
rcrb
fwait
mov
insb
outsb
pusha
mov
sarb
dec
call
pop
out
and
inc
loopne
sbb
pop
out
in
adc
add
xchg
stos
repz
add
cmp
dec
je
pop
aas
into
lods
idivl
mov
push
cmp
cmpsl
adc
lcall
mov
jo
ds
call
mov
or
mov
es
mov
rolb
cmp
stos
dec
adc
std
sub
xchg
lahf
xor
jae
mov
aas
jns
inc
push
loope
andl
inc
pop
sub
fs
mulb
out
mov
mov
adc
pop
std
daa
fldenv
cmp
mov
call
sti
icebp
icebp
mov
pop
cmpsb
adc
inc
mov
cli
test
ret
das
add
icebp
mov
inc
mov
pushf
xor
pop
movsl
cld
add
mov
push
sbb
inc
push
outsb
dec
push
mull
add
scas
in
repnz
sub
mov
mov
or
add
fs
out
testb
xchg
adc
out
movsl
lahf
cwtl
call
cli
mov
lret
mov
insb
dec
add
mov
cld
xchg
cli
je
mov
es
pop
and
jns
cmp
xor
shrb
cld
arpl
scas
bound
cwtl
pushf
test
and
jmp
or
or
mov
xchg
mov
push
loopne
add
mov
leavew
mov
mov
inc
or
sbb
dec
and
push
std
pop
xchg
or
xor
or
out
dec
mov
or
stos
cmpsb
pop
adc
or
test
cld
ficompl
mov
mov
xor
mov
mov
es
outsb
pop
jl
fsub
out
push
leave
pop
cmp
insb
sub
daa
ljmp
inc
nop
mov
js
dec
adc
xchg
push
inc
fimuls
inc
call
hlt
xor
out
push
mov
push
pusha
sbb
arpl
pop
out
cmp
sub
xchg
lods
mov
hlt
jb
clc
lea
or
lret
int
or
add
clc
pop
lret
stos
cmp
xor
cmp
cmc
or
inc
sub
cld
sub
fbld
pop
xchg
xchg
lret
push
scas
in
push
mov
pop
stos
xchg
in
setb
stos
js
enter
mov
dec
in
xchg
and
arpl
std
aad
push
pop
pop
cli
daa
cmpsb
loop
in
in
mov
test
or
stc
dec
fldcw
xchg
sbb
out
fcmovu
dec
xchg
sub
stc
pmaxsw
ffreep
mov
fs
rcrb
adc
insl
sub
lock
mov
arpl
xchg
daa
adc
xchg
int
fsubrl
das
adc
test
repz
mov
outsb
mov
sbb
movsl
sub
arpl
inc
mov
mov
jb
jmp
inc
test
add
fadds
data16
mov
cmpsl
sar
or
sbb
sbb
add
das
enter
pop
pop
loop
and
xchg
push
mov
rcr
mov
mov
int3
jg
sbb
pop
dec
lret
scas
sub
mov
rorl
jl
xchg
xor
push
inc
jae
outsb
ss
ret
test
mov
mov
les
xor
das
mov
aaa
js
sti
test
neg
mov
cli
mov
imull
mov
mov
cs
imul
inc
int
push
mov
ja
shrb
push
ret
test
mov
ljmp
adc
imul
sub
push
or
cmp
sub
jo
sbb
iret
enter
mov
push
dec
cmpsb
imul
or
out
leave
mov
jle
aas
mov
stos
ja
inc
div
sbb
lock
xor
inc
in
inc
in
aaa
push
mov
push
fldt
mov
jmp
int3
add
pop
icebp
js
inc
out
inc
push
stos
cmp
pushf
mov
out
dec
xchg
pslld
mov
rcrb
adc
or
dec
mov
imul
or
notl
rclb
mov
pop
es
push
mov
jae
std
js
lret
mov
and
cli
sub
inc
shll
mov
mov
cmp
es
pop
lahf
push
cmp
sub
xor
push
push
and
xchg
sbb
xchg
ljmp
xchg
sbb
inc
pusha
test
sbb
pop
cmp
dec
sub
mov
aad
out
jns
push
add
adc
xchg
divb
or
jns
rorl
inc
dec
mov
dec
xor
es
bts
jl
movsl
fdivrl
es
aaa
in
imul
lods
insl
es
jnp
lcall
lods
cld
push
iret
jns
adc
iret
sahf
sub
push
data16
inc
aam
xchg
xchg
xchg
arpl
mov
mov
jp
repz
cltd
js
fiaddl
shll
pop
test
pop
jecxz
mov
xor
loope
mov
lret
test
mov
sbb
stos
add
or
bound
incb
dec
cs
leave
enter
addr16
adc
in
jae
sub
pusha
push
push
pop
xor
dec
idiv
in
out
adc
aam
lods
shll
mov
clc
ret
movsl
sti
mov
inc
sbb
xor
arpl
insl
dec
nop
mov
xchg
lods
int
sbb
lds
lds
xchg
in
ret
lret
xor
jecxz
aam
inc
mov
xchg
scas
push
scas
or
cmp
in
pop
lret
loope
adc
sub
xchg
xchg
xchg
mov
aad
or
in
add
fistps
and
pop
sub
fldt
popf
adc
push
pop
xor
pop
test
jno
cltd
mov
cmp
add
aad
stos
xor
imul
std
pop
sbb
and
arpl
and
add
popf
pop
outsl
mov
push
loopne
adcl
je
mov
sbb
adc
das
or
mov
xchg
fisttps
lods
mov
dec
sub
inc
stos
idivb
mov
popf
push
aas
cmp
cli
push
out
les
sub
jg
mov
push
lock
fsubp
hlt
pop
mov
popa
xchg
mov
scas
pop
mov
call
imull
js
jecxz
adc
inc
cmpsl
xchg
pop
pop
inc
or
sahf
mov
or
sbb
mov
fsubrl
pop
inc
xchg
adc
in
ret
sub
pop
repnz
mov
sbb
sbb
insl
test
mov
adc
cli
mov
sub
lcall
adc
hlt
push
dec
push
mov
test
lret
js
cld
pop
out
push
out
leave
cli
mov
lods
cmpsl
aam
push
sbb
neg
lret
cli
nop
cmpsl
pop
jo
sbb
rcll
mov
mov
shlb
mov
inc
add
scas
push
dec
mov
add
ja
mov
shlb
shrl
loope
test
pop
xor
jbe
outsl
cli
xor
or
mov
add
adc
mov
or
fdivr
icebp
loopne
imulb
std
out
and
dec
das
fs
mov
jbe
movhps
clc
sub
popf
mov
scas
lcall
pop
push
cltd
and
push
and
mov
mov
jp
into
or
pop
lret
rorb
lret
xor
pop
dec
aam
pop
jmp
ds
loope
sbb
or
jns
iret
test
xor
mov
inc
movsb
je
xor
out
mov
das
hlt
cltd
mov
lea
inc
sarb
xchg
xor
pop
std
push
mov
mov
dec
pop
sub
fstpl
pop
push
mov
iret
cwtl
and
jnp
popf
ss
dec
call
movsl
aad
in
aaa
xchg
pop
sbb
mov
inc
mov
mov
inc
add
popf
out
ret
inc
push
loope
sub
stc
lea
dec
mov
mov
mov
mov
test
outsb
imulb
dec
xchg
icebp
and
insl
gs
cld
pop
test
jns
jl
pushf
add
orl
push
es
call
sbb
fsubrl
jne
xchg
jp
mov
sbb
mov
in
ret
std
dec
jae
dec
das
hlt
cmp
adc
adc
repz
fbld
xchg
inc
mov
push
enter
inc
dec
lock
in
adcb
xchg
rolb
leave
imul
outsb
jae
mov
xchg
sbb
push
cwtl
sbb
cmpsb
popa
cmpsb
stos
enter
add
dec
pop
rcrl
pusha
dec
repz
pop
stc
sbbl
loop
mov
mov
mov
out
leave
mov
or
push
cltd
lcall
push
enter
addr16
mov
sub
lahf
mov
dec
movsl
es
mov
mov
popf
pusha
aad
mov
ss
sbb
xchg
mov
call
aaa
icebp
push
gs
sub
pop
addl
push
fildl
xor
pop
cwtl
repz
dec
in
mov
mov
lods
lcall
ret
push
test
xor
push
mov
out
loope
outsb
mov
ds
dec
lock
mov
fbstp
popa
xlat
rcll
or
lret
xchg
daa
ss
cmp
stos
out
cmpsb
mov
push
mov
sub
imul
outsl
jg
sub
or
lahf
into
movsb
add
xor
mov
int3
xor
inc
dec
cmp
jns
push
jle
push
movsl
sub
das
inc
or
push
and
out
push
adc
mov
xor
flds
inc
mov
inc
insb
xchg
sarb
sbb
std
mov
fisubrl
push
adc
pop
test
out
fisubrl
test
in
imul
mov
mov
sar
push
jo
sbb
jnp
insl
or
jns
inc
rorl
push
js
xchg
cmp
push
shlb
ret
sub
cs
outsl
sbbb
loop
jbe
scas
int3
out
lcall
inc
inc
push
pop
test
fs
jecxz
inc
adc
xor
push
sar
inc
or
xchg
insb
jge
pop
fcomip
stos
jge
shlb
push
ficoml
xchg
int3
sarl
xchg
sub
inc
int3
scas
cwtl
jle
mov
aaa
enter
mov
lcall
push
jmp
jbe
pop
mov
push
xlat
pop
xor
sub
incl
repz
mov
xor
xchg
add
jge
mov
and
cmp
out
daa
repz
cmp
shll
ja
sub
das
mov
inc
xchg
in
pop
mov
pop
pop
daa
popa
xchg
mov
andl
popfw
sub
mov
mov
mov
jle
stos
sti
das
mov
popf
mov
sub
add
mov
cwtl
pushf
xor
xchg
mov
dec
iret
and
sarl
mov
sub
scas
int
sub
pop
sub
or
mov
xlat
xor
adc
ja
mov
xor
cld
movsb
inc
inc
push
sbb
inc
push
pop
loope
lock
sbb
cld
or
mov
imul
dec
sbb
push
into
add
jb
xor
inc
xor
sub
xchg
xor
push
add
cmpb
inc
pop
jbe
test
or
lods
pop
out
mov
mov
aam
sti
loope
cli
xorl
aas
mov
mov
jne
cltd
and
mov
es
call
lret
repnz
cmp
mov
test
cmp
xor
pop
xchg
icebp
jnp
std
fcmovne
movsb
xor
jmp
jne
pop
out
and
loopne
fsts
aam
add
jge
daa
inc
xchg
adc
inc
cmp
or
mull
xchg
sub
add
sbb
mov
data16
and
aaa
sbb
sub
inc
clc
jmp
movsl
mov
imul
inc
and
inc
dec
push
ret
gs
or
loop
scas
sbb
push
ja
jno
cmpsb
or
push
les
jns
jecxz
notl
rcr
jecxz
lret
mov
scas
shlb
out
bound
push
fwait
imul
stc
pop
dec
xlat
sti
scas
frstor
ljmp
stos
lock
imul
test
or
mov
sub
enter
in
mov
test
inc
add
and
jmp
nop
or
xor
repnz
aas
mov
jb
and
cmp
inc
jns
ja
push
sbb
mov
shrb
sub
pushf
mov
jp
shlb
aas
sub
je
loopne
push
pop
xchg
add
loope
cmp
mov
jb
add
cmp
sub
push
xlat
mov
jns
pop
xor
lret
cmp
pop
jg
int
and
xor
mov
nop
adc
xlat
mov
adc
imulb
jnp,pn
inc
test
push
movsb
pop
jns
mov
ss
fwait
jl
push
clc
xor
stc
mov
stc
add
stos
pushf
stos
icebp
ret
in
or
cs
dec
leave
and
jbe
push
movsb
xchg
aaa
arpl
push
rclb
dec
dec
mov
hlt
adc
push
jecxz
mov
push
int
filds
test
or
rcr
sbb
xchg
scas
mov
mov
push
outsl
xchg
sbb
fcomps
adc
dec
call
test
mov
push
xchg
js
push
cmp
cmp
flds
jle
push
sbb
inc
jae
add
shlb
aas
sub
sub
inc
mov
xor
cmpsl
sub
ret
cmp
mov
leave
sub
cli
jge
shrl
shlb
lds
xchg
jb
sub
cmp
xchg
jb
sub
mov
xor
mov
xchg
popa
fs
pop
pop
mov
mov
xchg
sub
push
sbb
cld
loopne
cwtl
cmpsl
test
and
pop
int3
or
mov
mov
and
fcoml
movhlps
stos
xor
sub
clc
sbb
pop
fcompl
sbb
nop
inc
lret
ljmp
mov
lods
or
pop
ja
xlat
sbb
fists
mov
dec
mov
mov
xchg
aam
bound
mull
mov
jmp
adc
lods
leave
shlb
testb
pop
shl
pusha
int
adc
roll
nop
rcl
cli
shlb
inc
cltd
and
movq
jmp
mov
clc
fldcw
and
hlt
xchg
push
mov
mov
xorb
mov
inc
test
mov
in
les
xchg
lret
test
sub
adc
pop
fisttpll
lahf
lret
out
mov
shll
je
jmp
adcl
dec
lcall
in
out
xchg
inc
mov
mov
sub
loop
add
imul
xchg
ss
push
mov
inc
cmpl
out
push
sbb
lret
mov
out
xchg
xor
idivb
xor
cmp
imul
adc
mov
and
cmc
out
dec
jnp
mov
jnp
inc
repnz
fmul
mov
pop
repz
test
xor
adc
in
lds
fmul
ja
or
add
inc
dec
adc
or
arpl
sbb
divb
cmpb
sbb
fimuls
add
pop
int
ds
cmp
push
cmpsb
iret
jl
fmull
shlb
xor
jl
movsb
test
push
andl
dec
mov
jb
shrb
fs
test
mov
sbb
fsubl
lea
cwtl
fadd
inc
xchg
pushf
jo,pn
cmpsl
or
pushf
orl
in
test
or
outsl
and
hlt
and
test
into
mov
adc
xor
daa
add
and
outsl
repz
ret
jmp
stos
inc
mov
inc
cmc
push
or
out
xor
mov
cld
push
subl
andl
aas
pop
lcall
cli
iret
sahf
insl
rcll
popf
cmp
push
icebp
mov
xchg
sub
push
mov
mov
pop
mov
or
cmp
ds
push
xchg
adc
stos
jnp
cmpsl
pop
roll
sbb
mov
xchg
sub
jae
pop
push
xchg
imul
mov
sbb
fcoms
pop
aaa
sbb
sbb
dec
leave
test
or
aad
push
sbb
cmp
xchg
mov
xor
mov
mov
xlat
dec
popa
add
inc
outsb
ss
dec
and
adc
and
push
ljmp
cwtl
xchg
push
insb
mov
mov
stos
dec
fcomi
shrb
ret
jbe
mov
leave
test
into
jb
mov
into
mov
adc
push
mov
jmp
cmpsb
mov
fldt
pop
adc
jne
adc
mov
mov
into
icebp
lea
dec
aas
inc
cmp
enter
inc
jb
and
inc
into
inc
cmp
cmc
arpl
mov
fdivs
inc
adc
mov
cmp
cltd
fs
les
jae
aad
bound
pop
jbe
jb
pop
jne
ss
pop
jnp
aad
sbb
push
mov
jnp
push
jne
xchg
mov
jae
dec
and
in
sub
dec
outsl
std
dec
hlt
out
mov
pop
jno
rolb
hlt
cs
loope
mov
xchg
inc
cmp
dec
cmp
sub
mov
rol
loop
cmp
out
add
iret
sbb
xor
ret
test
mov
push
jb
jae
ds
fdiv
sub
bnd
fs
bound
xchg
into
pop
call
and
cld
imul
xchg
scas
and
divb
ss
jmp
jnp
pushw
jmp
loopne
jg
cwtl
stos
in
pavgw
and
imul
movsb
mov
out
and
lock
push
lret
add
test
jae
lcall
pusha
push
sub
cmp
into
inc
addr16
xchg
pop
popa
pop
adc
inc
negl
sub
xor
xor
mov
test
xchg
cmp
dec
add
add
aad
data16
inc
adc
cmp
adc
ret
rorl
outsb
mov
shll
dec
adc
lret
lods
lret
inc
pop
push
lret
jae
data16
xchg
ret
pop
stos
and
inc
in
inc
invd
push
cmp
das
in
hlt
icebp
pop
out
js
jge
test
je
fidivrl
stos
int
cmpsl
je
call
mov
les
loopne
outsb
test
out
jle
xor
cmp
lods
roll
sti
mov
ret
cmp
inc
rorb
aaa
sahf
shl
sbb
and
adc
add
cmpsb
mov
sub
mov
in
xor
cmpsl
jl
pop
pop
int
bswap
jecxz
loop
mov
or
xchg
hlt
iret
mov
inc
jp
mov
pop
inc
dec
cmp
dec
fildl
jns
cmp
loope
test
inc
cmp
push
insl
pop
dec
pop
sub
in
pop
sub
xchg
das
std
int
cmpsl
cs
out
ret
cwtl
pusha
out
mov
cmp
notl
mov
adc
xchg
push
xlat
loopne
and
lods
dec
sbb
push
jno
scas
inc
mov
popa
int
pop
cmp
insl
je
jle
xlat
xor
add
sbb
cld
cmpb
lock
out
lret
popl
imul
mov
and
insl
out
xchg
mov
mov
dec
jmp
leave
xor
pop
jne
sub
iret
cmpsb
insl
daa
or
je
std
ja
lods
lods
out
cmp
sahf
loopne
sbb
mov
fldl
movsl
adc
cmpb
sbb
shrb
into
lret
lea
in
insb
jecxz
aam
mov
pop
xchg
mov
mov
fldt
pop
cmp
or
std
adc
jno
in
xlat
mov
and
mov
pop
std
ficoml
pop
mov
fistpll
ret
inc
outsl
ja
das
test
xor
int
push
icebp
repnz
bound
popa
pop
mov
xchg
outsw
subl
leave
test
adcb
arpl
add
daa
lea
test
mov
mov
insb
pusha
xchg
lea
out
or
push
xchg
fs
push
inc
dec
js
shrb
xor
das
dec
add
pop
xlat
hlt
add
aam
int3
xchg
push
xor
js
xchg
push
pop
movsb
rolb
push
icebp
cmp
dec
or
ret
dec
ret
data16
xchg
xor
jns
push
ljmp
add
jle
push
enter
xchg
test
mov
ss
fwait
jg
orb
dec
xchg
dec
cmc
dec
jbe
dec
shr
pop
mov
in
dec
add
lret
adc
leave
out
xor
rcl
pop
js
loope
test
test
xchg
les
push
adc
mov
dec
int3
lods
pop
les
jbe
fsts
inc
sbb
mov
das
dec
shll
cmpl
push
adc
jge
sub
fsub
and
lcall
cmp
daa
push
mov
mov
insl
fstps
cwtl
adc
lds
push
inc
cmp
push
and
or
or
mov
xchg
cli
je
mov
xchg
mov
je
adc
in
sub
mov
popf
xchg
fwait
lock
and
cltd
dec
inc
fidivrs
les
or
pop
mov
sub
dec
dec
mov
jle
adc
jp
jp
out
repz
pop
jnp
inc
les
dec
mov
aas
loope
jmp
and
add
in
push
out
pop
push
pop
cmp
sbb
pop
pop
jl
jp
ds
push
loope
push
push
cld
and
cs
sub
call
aaa
testb
fistps
lds
xchg
stc
push
je
fisubrl
mov
adc
jno
add
mov
pop
cld
daa
and
pop
xchg
lcall
add
pop
mov
lahf
jns
pop
shlb
push
rorl
nop
push
xchg
mov
in
std
lret
sahf
daa
adc
dec
rclb
pop
inc
adc
rorl
mov
lods
into
cmp
enter
mov
adc
cmp
pop
add
add
ds
fistps
in
fsubl
sar
mov
daa
jns
sbb
filds
lock
sbb
rorl
cltd
xchg
sub
sub
pop
pop
sbb
mov
adc
or
jecxz
push
dec
xchg
dec
call
push
es
mov
inc
sub
lds
jmp
nop
and
or
adc
lods
movsl
sahf
sub
mov
iret
ret
fisttpl
test
mov
inc
sti
in
rorl
cmpsb
push
int3
ljmp
xchg
inc
inc
jno
leave
push
pop
jb
imul
jae
aam
add
out
xchg
cmp
mov
jge
out
outsb
and
pop
outsl
notl
xor
mov
mov
fcmovne
ljmp
jae
fdivrs
das
and
mov
out
sub
outsb
xchg
inc
repz
stc
pop
mov
loop
loope
fnstenv
jbe
mov
sbb
enter
and
popf
pop
lcall
sbb
or
push
outsl
xchg
outsb
fisttps
push
sahf
sbb
sbb
mov
lods
and
fmuls
stc
sarl
sar
mov
add
ret
mov
cmp
icebp
or
or
adc
sub
sbb
adc
and
ficompl
scas
addb
xor
inc
mov
stos
iret
dec
jns
cmp
pop
inc
pop
and
add
inc
xor
mov
add
xchg
cmpsb
scas
jb
sub
leave
cmc
ljmp
leave
test
lods
es
sbb
push
ja
lcall
and
stc
icebp
stos
mov
rorb
cmp
rclb
pop
or
ljmp
ret
add
lods
shrb
imul
or
and
jp
jle
mov
outsb
add
pop
cmp
popa
rol
fsubp
arpl
iret
jae
push
test
out
lods
pushf
into
xor
xchg
test
pop
call
adc
dec
xchg
xchg
mov
nop
call
cmpl
lret
xor
aad
and
pop
sub
repnz
or
pop
add
negb
adc
sub
dec
mov
push
jno
pusha
or
clc
lods
inc
fmull
jnp
mov
out
ret
stos
dec
jnp
pop
nop
push
sub
in
xor
addl
bound
scas
in
lods
jecxz
fcmovnb
xchg
xor
jnp
sbb
std
fwait
jne
iret
adc
lcall
xor
inc
mov
push
push
lret
push
push
xchg
mov
test
mov
and
arpl
and
ffreep
or
pusha
sub
cmpsb
insb
testb
hlt
icebp
fbld
push
adc
jno
xchg
adc
and
mov
lea
std
stos
mov
stc
and
or
mov
add
into
ret
call
loope
sbb
pop
inc
lods
inc
pop
dec
hlt
lea
cmp
jne
sbb
je
xor
mov
push
adc
mov
inc
cmp
pop
lahf
in
hlt
xchg
pop
cmpb
jns
mov
cmpsl
dec
add
arpl
mov
insl
mov
lds
push
clc
clc
push
leave
adc
cltd
leave
mov
and
into
jg
es
lret
subl
jp
fstpl
addr16
inc
stos
mov
sbb
fwait
stc
icebp
mov
add
fldl
adc
pop
jecxz
xchg
popa
xor
pusha
out
test
jle
dec
mov
dec
popa
add
jbe
pop
repnz
and
movsl
in
test
movsb
inc
xchg
add
ss
into
cmp
mov
jne
mov
adc
and
pop
sbb
mov
pop
push
imul
pop
pop
ret
mov
negl
leave
xlat
in
sbb
in
aas
mov
das
out
cwtl
xor
daa
movups
jmp
mov
cmpsb
dec
dec
sub
je
sbb
dec
and
cmp
jecxz
pop
add
jp
and
out
xchg
push
cmpl
mov
les
gs
sub
xchg
or
mov
cmp
dec
sub
xor
aam
gs
fidivrs
push
mov
sti
in
xchg
fdivr
aam
cmp
leave
in
inc
mov
sbb
subb
in
dec
pop
out
leave
pop
xchg
mov
ja
je
icebp
nop
out
or
mov
hlt
fldpi
lcall
and
jge
std
mov
lods
mov
fs
cmp
test
sbb
and
shr
rep
add
sbb
mull
mov
or
mov
xor
dec
mov
mov
outsb
cmpsb
scas
jb
jmp
xor
movsl
dec
jl
lods
rcrl
std
sub
loope
and
xor
sub
dec
js
mov
fsubrl
mov
sti
xchg
cltd
dec
adc
mov
arpl
jle
out
adc
push
mov
xlat
fidivs
push
sbb
sub
jmp
test
push
rol
add
inc
adc
inc
jne
decl
xchg
fisubs
add
pushf
jmp
cmc
mov
test
andb
out
stc
into
jae
int
lret
adc
xor
mov
aas
dec
mov
push
jmp
push
xchg
push
or
push
rcrb
mov
ljmp
sbb
aad
push
inc
mov
lret
adc
inc
scas
pop
push
lcall
insb
lds
fucomi
jno
test
sub
imul
call
or
adc
and
aam
ljmp
push
sbb
fistpl
mov
or
jnp
jmp
xchg
push
leave
sbb
rolb
cltd
add
popf
fstpl
push
punpcklwd
jl
ljmpw
lods
aaa
es
mov
outsl
test
jne
xchg
or
xchg
add
mov
mov
pusha
jl
xor
ja
mov
pop
xor
insb
lods
push
inc
pop
dec
outsl
lea
add
jb
scas
push
int3
mov
jge
adc
movsb
mov
sub
mov
arpl
fisttpl
call
ret
aas
lock
xor
std
es
add
aam
xchg
fsub
ficomps
repz
mov
ljmp
int
mov
jmp
popf
test
mov
and
xchg
and
sub
jo
dec
mov
lcall
pop
outsl
cmp
aam
pop
pop
xchg
cwtl
dec
sbb
rcrl
push
mov
add
sub
pop
push
xchg
mov
lods
adc
shrb
xor
arpl
xor
test
sbb
xor
mov
popf
leave
cmp
mov
pop
leave
mov
std
movsl
sarb
mov
inc
push
loopne
mov
xor
mov
xchg
pop
jmp
ja
push
aas
dec
addb
or
jl
iret
cli
xor
sbb
jmp
xor
shl
lock
or
shlb
inc
aad
dec
jp
lret
adc
adc
daa
mov
jmp
out
sbb
pop
lods
aaa
dec
mov
mov
cmp
jle
cwtl
bound
push
mov
push
mov
int3
mov
xchg
lock
mov
dec
pop
scas
push
xchg
adc
dec
dec
in
mov
adc
add
push
jb
mov
pop
int3
aas
hlt
and
inc
jbe
add
and
sbb
js
lret
sbb
lods
mov
and
loop
rorb
mov
addr16
test
ja
mov
mov
or
mov
mov
lock
and
in
jae
scas
mov
mov
mov
clc
cmc
aam
int
aad
dec
inc
mov
fmuls
mov
dec
mov
inc
arpl
cwtl
xor
shl
mov
in
out
lods
js
xchg
imul
inc
cmpsb
negl
sbb
jg
testb
sub
sub
sbb
into
push
jbe
enter
mov
push
ja
or
mov
xor
sahf
inc
repz
clc
adc
cmc
sbb
push
pop
test
inc
pop
ret
adc
into
and
cmp
aam
addr16
clc
cmc
xor
pop
mov
push
jno
dec
roll
imul
fsts
jne
xlat
ja
pop
jne
test
sahf
rorl
fisubl
push
mov
and
dec
xchg
push
xchg
inc
sub
xchg
and
movl
mov
pushf
out
adc
fwait
push
mov
pushf
xchg
inc
scas
cmp
xchg
sub
cmc
mov
pusha
mov
adc
mov
fisubs
add
pop
filds
nop
clc
sub
dec
mov
cmp
insb
mov
mov
cld
mov
ret
jge
cmp
movsl
xor
jnp
jae
add
or
mov
fisubs
pop
icebp
ficompl
sbb
daa
subl
push
mov
push
loop
fisubrl
dec
mov
setno
ljmp
inc
in
cmp
scas
jl
mov
daa
mov
mov
and
inc
nop
xchg
lcall
cli
outsl
or
lods
movsl
cmp
stos
and
mov
push
pop
int3
xchg
in
pop
fcoml
xor
mov
add
loop
sbb
xchg
jmp
outsb
mull
push
inc
jns
cs
lods
shrl
add
jo
stos
lcall
into
jmp
mov
sub
inc
pop
push
adc
daa
xchg
xor
fisubl
pop
daa
ret
jb
out
lret
lods
in
sub
inc
cmp
mov
pop
movsb
cli
xor
bound
push
sub
loopne
ja
mov
ljmp
pop
popf
or
fstpl
mov
xor
dec
cmc
pop
inc
mov
outsl
pop
inc
mov
mov
xor
js
dec
outsb
int
sbb
cmpsl
adc
out
mov
loopne
pop
dec
jle
sahf
dec
push
or
dec
test
stc
aas
int3
adcw
and
inc
sub
into
mov
and
lods
mov
adc
gs
mov
enter
and
xchg
out
rol
xor
and
inc
dec
lock
ljmp
lock
inc
hlt
and
adc
pusha
xor
movsb
mov
into
into
cmp
xor
ljmp
lock
jp
movsl
dec
xchg
inc
cli
sub
sub
sub
hlt
cwtl
mov
cmpsl
aaa
xchg
mov
clc
fbld
inc
ds
pusha
inc
mov
in
stos
push
lcall
fs
test
adc
decl
dec
cltd
cwtl
cli
mov
add
xchg
mov
popa
repnz
lcall
push
loop
ret
jle
dec
xor
shl
cli
gs
sbb
or
cmpsb
rcll
push
pushf
inc
inc
lods
or
cs
clc
pop
pop
cmpl
mov
jnp
sbb
loop
and
in
fimull
mov
dec
xchg
push
pop
cltd
stos
mov
fimull
mov
stc
int3
cmc
mov
out
shll
dec
push
and
fst
pusha
inc
jne
cmpsl
pop
addr16
fbld
icebp
rcr
inc
pop
pop
std
test
push
jmp
in
lahf
in
mov
push
movsb
push
dec
jl
push
mov
repz
mov
iret
fwait
aam
idivl
and
and
out
rorb
das
mov
mov
push
sub
inc
add
into
ret
jb
in
jbe
cmp
sub
imul
jle
clc
add
fidivrl
and
mov
jge
call
xor
sbb
mov
das
or
repnz
xlat
xor
fdivrl
mov
aaa
pop
rcr
scas
mov
cmp
push
or
push
jl
sarl
and
call
cmp
mov
sbb
shlb
pushf
mov
out
inc
ret
mull
jbe
cli
sub
cmpsl
arpl
ja
mov
sub
ret
mov
movsl
fldl
ljmp
and
flds
scas
push
add
popf
test
xchg
nop
loopne
psubq
popa
or
aaa
pop
insl
inc
sub
sub
pop
roll
jne
dec
ljmp
in
fildll
movsl
fsubl
outsl
leave
push
push
and
test
jmp
add
inc
jg
mov
test
std
aas
mov
mov
push
lock
call
mov
and
and
pop
bound
or
std
mov
pop
mov
push
add
rorl
fsubrl
dec
adc
xchg
lock
aas
insb
ljmp
test
data16
jle
jno
dec
ja
sub
cld
adc
jl
push
or
inc
pop
jnp
jns
and
jg
cmp
xor
mov
jl
sti
test
daa
dec
mov
xorl
aas
or
pop
test
les
xchg
outsl
int
mov
mov
push
mov
pop
pop
and
into
add
inc
jbe
in
jp
lcall
mov
sub
jnp
xchg
test
mov
repz
xchg
xor
lret
push
punpcklbw
add
jo
add
or
enter
int3
sbb
sbb
out
imul
imul
pushf
xor
add
xchg
cs
icebp
out
jb
je
or
mov
mov
jno
mov
mov
inc
lret
mov
mov
jae
addw
idiv
lahf
mov
lret
adcb
mov
leave
inc
jge
jne
mov
js
mov
mov
gs
and
outsl
aam
clc
xor
jno
cmp
pop
adc
jne
enter
mov
imul
and
cmp
out
push
scas
stos
lret
inc
adc
stos
in
mov
pop
jmp
jne
xlat
mov
cmp
inc
mov
pop
xchg
mov
inc
add
push
and
fbstp
scas
cmp
cmp
adc
add
mov
inc
mov
xor
into
imul
fbld
mov
push
inc
mov
mov
call
pop
incl
jnp
adcb
sbb
cmc
movsl
lahf
and
mov
sub
data16
push
rol
cmp
and
xor
xchg
adc
sti
adc
inc
nop
xchg
movsl
divl
jno
jmp
fdivl
pop
clc
clc
gs
sbb
fisttps
cld
xchg
daa
xor
push
mov
mov
dec
dec
jle
js
pop
incl
push
int3
sub
sub
imul
pop
das
repnz
and
mov
scas
cmp
sbb
add
or
xchg
jmp
js
push
cmp
dec
decb
and
mov
sbb
lahf
pop
fdivr
cmpl
jle
sbb
hlt
push
adc
loope
mov
cmp
imul
dec
ds
adc
inc
push
add
shr
shrl
and
pop
push
pop
out
ret
in
push
push
xor
out
pop
test
adc
movsl
ljmp
jl
dec
scas
mov
icebp
jne
fisttpl
call
cwtl
test
xor
mov
jno
add
jae
ljmp
shll
cmp
pop
push
pop
fs
cmp
jg
xchg
repnz
test
inc
and
ret
mov
jmp
mov
insl
mov
push
movsl
add
pop
scas
sbb
and
mov
fstpl
pop
jbe
mov
add
adc
aas
jle
int
mov
lret
push
dec
mov
lcall
sbb
call
sbb
in
push
jmp
push
jo
subl
xor
mov
pop
scas
or
into
outsl
lea
push
lods
aaa
imul
pop
fdiv
dec
sbb
rorb
adc
mov
xchg
push
adc
subl
jmp
sarb
lret
popf
test
js
mov
call
sub
cs
std
xor
ljmp
or
test
jne
pop
arpl
lds
imul
and
or
shr
mov
inc
orb
das
out
mov
fwait
das
and
icebp
pop
cs
push
or
andb
movsb
push
sbb
add
cmp
jnp
jl
dec
lret
xchg
orw
add
adc
jae
xor
dec
inc
lds
lret
push
outsl
push
cltd
fldl
sub
std
xor
iret
inc
push
inc
xchg
ds
jecxz
inc
or
sbb
ret
movsb
dec
fsts
or
dec
stos
jns
out
out
clc
fmulp
cli
fwait
adc
cmp
sub
mov
clc
mov
xor
or
sbb
ljmp
adc
mov
mov
int
lea
std
pop
jp
dec
dec
sbb
lret
or
mov
add
sarw
fdiv
mov
mov
ret
dec
cltd
or
es
in
popf
mov
nop
xchg
ljmp
inc
popf
movsl
mov
mov
icebp
fidivs
out
daa
push
sbb
pop
inc
push
adcb
inc
lahf
bound
inc
push
xor
cmpsl
add
shr
adcb
and
out
and
std
clc
inc
je
inc
repnz
or
mov
and
inc
push
gs
pop
pop
mov
push
push
sbb
push
sub
or
inc
nop
arpl
cmp
add
adc
sub
adc
xchg
xor
cwtl
enter
mov
lods
push
lcall
stc
mov
mov
inc
popa
push
stos
sub
in
xchg
adc
dec
rolb
test
jl
mov
aad
scas
sahf
and
cmpb
sub
adc
xchg
in
popf
loope
repnz
pop
sub
fmull
addr16
lret
sti
add
push
shll
mov
sub
cltd
inc
sti
xchg
iret
cmp
sbb
mov
sub
shl
adc
js
xor
les
cmp
adc
inc
leave
movb
mov
xchg
lods
nop
add
add
sar
sbb
bnd
and
in
push
enter
and
add
cmp
dec
les
ret
sti
lea
inc
je
xchg
xchg
sub
les
popf
jecxz
mov
or
mov
das
dec
int
jecxz
sub
add
mov
or
jle
pcmpgtb
jge
sub
insl
pop
in
in
dec
and
repz
mov
sub
inc
cmp
mov
test
mov
lods
jno,pt
pop
in
movsl
test
mov
fmull
push
sar
cmp
jmp
dec
sub
aaa
movsl
or
aad
cmp
pop
dec
xor
cltd
xchg
out
ret
daa
mov
jecxz
jp
int
int3
inc
int3
pop
pusha
lahf
sbb
xlat
lods
daa
and
xor
hlt
outsl
das
fdivl
out
loop
imul
shr
std
es
ds
js
fs
in
dec
jno
push
xor
aam
std
scas
mov
cwtl
lret
mov
lods
imul
pop
mov
int
aaa
jno
js
mov
fcmovne
dec
pop
sti
or
mov
pusha
addr16
rcrb
dec
gs
and
in
mov
or
inc
les
orl
add
inc
and
or
inc
and
mov
jne
mov
mov
xor
ljmp
popf
xlat
in
pop
ror
out
mov
mov
jle
lock
js
and
jge
inc
xchg
loope
mov
dec
in
sub
adcl
outsb
test
push
gs
bound
jnp
and
jl
pop
negb
xchg
lcall
cld
movsb
mov
xchg
ss
repnz
mov
and
cld
add
rol
lods
cmp
psubw
nop
std
mov
fmuls
adc
inc
mov
jno
dec
mov
jae
cld
fs
jbe
lods
mov
sbb
fisubrs
mov
inc
ja
mov
jae
pop
pop
sub
mov
jle
mov
scas
out
inc
pusha
mov
sbb
test
aam
lock
jge
inc
call
ja
add
cmpsb
jge
sahf
negl
in
pop
push
and
mov
or
xor
sbb
shlb
inc
lcall
push
mov
cmp
fcomip
push
and
mov
push
xchg
addr16
out
mov
mov
mov
bound
push
inc
movsb
mov
jno
arpl
aas
enter
hlt
dec
mov
loope
mov
inc
int
xchg
sbb
mov
inc
andl
mov
sub
je
cmp
or
imul
movl
in
mov
sbb
das
or
pop
clc
mov
lds
clc
jnp
jg
dec
pushaw
ret
aad
in
cmp
sub
fadds
inc
mov
packuswb
xor
in
test
dec
cld
jg
fwait
mov
stos
mov
ret
push
mov
add
dec
cld
push
xor
mov
sbbb
iret
xchg
icebp
and
lret
mov
xor
lds
imul
repnz
push
mov
popf
roll
mov
pop
fdivrs
adc
ja
dec
and
mov
push
or
inc
jno
ds
lret
cs
push
cmp
out
fisttpl
sbb
stos
mov
int
xor
xlat
jp
ljmp
adc
add
sub
fsts
sti
movsb
push
roll
sub
inc
jmp
inc
xchg
divb
int
shrb
jmp
or
movsl
icebp
inc
icebp
js
mov
imul
sahf
imul
icebp
xchg
sub
leave
jp
adc
pop
push
xchg
xor
outsb
mov
out
leave
shrl
in
arpl
stos
or
mov
outsl
movsl
iret
pop
sarb
fs
mov
sub
addr16
push
loop
or
dec
sbbl
cmp
dec
mov
jbe
mov
stc
stos
sarb
mov
pop
sub
and
cld
mov
lea
inc
push
xor
fdiv
ss
pop
inc
cmpsl
sub
ljmp
scas
ljmp
fstps
adcl
repnz
inc
lahf
aad
add
and
out
shll
fisubrs
js
jne
into
jne
nop
xor
mov
cmp
sub
xchg
aam
repnz
and
push
cld
add
jo
mov
dec
shll
mov
dec
push
test
ja
shrb
pop
cmp
daa
adc
pop
jmp
je
into
imulb
push
sbb
inc
mov
fs
mov
sub
test
ret
mov
push
cmp
jle
aad
mov
cmc
fs
fnstcw
in
add
imul
add
and
not
xor
std
xchg
lea
sub
xchg
mov
insl
cwtl
and
adc
xchg
rorl
mov
stos
mov
in
fldl
push
or
outsl
jbe
sbb
dec
add
and
push
loope
add
popa
jmp
lock
insb
in
repz
ja
mov
stos
jae
and
xchg
cmp
lods
mov
pop
hlt
in
scas
addb
adc
arpl
pop
jl
leave
and
dec
aad
cmpsb
movsl
fsubs
data16
xchg
mov
inc
push
ja
lds
xchg
cmp
pop
mov
aam
mov
push
aaa
push
mov
fwait
adc
cmp
pop
into
xchg
lret
test
leave
jno
ljmp
dec
xor
mov
stos
cs
fldt
jge
xor
jl
test
sub
push
mov
std
sbb
icebp
inc
iret
pop
daa
jae
pop
pop
movb
jecxz
and
fs
divl
out
repnz
sti
push
ljmp
jne
xchg
and
mov
push
inc
imul
imul
push
xchg
cmp
push
mov
jp
mov
mov
push
imul
and
js
mov
inc
xchg
mov
repz
xchg
sbbb
jle
gs
lods
mov
and
jno
lock
aad
mov
add
push
dec
insl
fstp
gs
repz
push
loope
outsl
cmpsb
sub
fcoml
cltd
sub
pop
lret
lahf
outsb
ror
xchg
mov
movsb
push
iret
add
jmp
and
pop
lret
adc
in
je
int3
jge
jmp
das
imul
fldcw
andl
cmp
cmp
fdivrs
rolb
mov
decb
lret
adc
jle
stos
dec
fcomps
aad
shl
in
and
test
enter
cld
xor
xchg
mov
test
mov
stc
sti
adc
bound
mov
out
mov
push
sti
inc
lds
jge
pop
sub
scas
cmpsb
mov
stos
enter
arpl
sti
lcall
test
dec
sub
xor
pusha
in
mov
fcomip
ret
data16
xchg
fcmovnbe
dec
jne
popa
jge
in
add
mov
mov
dec
test
fnop
jmp
lret
cmp
or
or
push
sub
mov
nop
popa
rolb
adc
sub
xor
adc
xchg
mov
cmp
dec
outsl
push
sbb
fisubrs
jecxz
adc
sub
sub
sub
pop
stos
jge
push
and
and
xlat
push
outsb
sub
out
jecxz
push
pushf
enter
jo
mov
std
xchg
and
cmp
mov
xor
lea
or
icebp
repz
xor
or
sahf
push
and
iret
shr
sbb
or
lods
ret
inc
inc
ss
outsl
test
int
insb
or
xor
mov
sbb
adc
sub
jnp
lret
out
and
lahf
mov
pop
dec
and
push
pop
sahf
aas
push
daa
or
or
dec
jns
push
fcoml
jbe
lcall
cmp
pop
cmp
jnp
out
inc
mov
jmp
dec
mov
fimuls
nop
sub
mov
cmp
push
mov
loopne
sbbb
mov
adc
call
nop
adc
jns
movsb
out
sub
inc
and
iret
ds
push
lret
dec
shl
cmp
out
sub
cmpsb
sbb
mov
ret
inc
in
jb
mov
shlb
outsl
pop
sbb
js
stc
inc
inc
jb
or
xchg
sbb
sahf
std
and
lock
in
hlt
and
mov
xchg
sbb
add
sbb
mov
dec
clc
mov
or
mov
leave
daa
jae
pop
jecxz
cmp
pop
cmpsl
aad
inc
jg
sub
loop
jbe
outsl
orl
daa
imul
jmp
clc
adc
adc
dec
test
push
lcall
insl
repnz
les
in
nop
mov
shlb
adc
cld
mov
sysret
scas
cld
and
dec
jg
lahf
jl
cmpsl
or
mov
lods
loop
and
sbb
mov
fidivl
std
clc
fs
jns
sub
push
jecxz
cwtl
push
data16
aad
xchg
push
xor
add
mov
test
jmp
sbb
ja
rorb
repz
test
mov
clc
cltd
pop
leave
stc
jb
mov
mov
jbe
and
enter
pop
jns
arpl
xor
insb
jae
fisttpll
aaa
inc
adc
lahf
push
sbb
pop
call
xchg
push
lret
inc
inc
loop
xor
addr16
mov
es
push
divl
adc
call
lods
add
mov
test
lea
in
or
pop
aam
inc
jns
xor
cmc
icebp
mov
stos
rorb
mov
sub
iret
push
in
mov
mov
pop
iret
sub
push
je
push
int3
enter
shll
sti
or
mov
cwtl
scas
xchg
sub
mov
sub
xor
dec
inc
fistl
out
sti
jmp
push
sbb
ja
imul
outsb
jnp
pop
mov
mov
cmp
ljmp
jl
mov
ret
orl
add
sbbl
or
and
gs
sbb
icebp
imul
jmp
lds
jae
movsl
arpl
adc
subb
insb
ja
inc
sahf
cmp
les
std
pop
mov
mov
xor
mov
sarb
sbb
mov
daa
lock
dec
gs
aam
div
mov
pop
movsbl
cmc
imul
aas
mov
pop
or
call
into
mov
mov
sahf
enter
mov
sub
mov
test
icebp
and
mov
negb
out
jnp
jo
xor
inc
imulb
scas
sub
or
mov
rcrb
pop
xchg
mov
mov
add
mov
add
outsb
imul
in
jmp
jnp
mov
into
insl
cld
pop
fs
data16
shlb
and
cmp
inc
xor
cmpsl
sub
sub
push
pop
jno
push
jp
mov
leave
cmpsl
mov
sbb
fidivs
dec
lds
ja
movsl
inc
and
mov
cld
push
mov
outsl
push
xchg
xlat
ljmp
adc
pop
xchg
xor
cmp
pushf
push
push
ss
push
cmp
out
into
adc
or
or
icebp
xchg
repz
idivb
and
shlb
enter
adc
jbe
stos
jns
pop
ret
ds
test
int3
pushf
mov
rcr
std
inc
pop
mov
jb
xchg
dec
sub
out
scas
mov
loopne
int3
xchg
or
xor
imul
addr16
stos
push
gs
dec
testb
mul
lea
mov
dec
nop
iret
add
pop
cmp
and
inc
lret
lahf
fcmovb
jno
dec
dec
dec
and
jns
enter
dec
jle
jae
mov
cmpsb
lret
sbb
mov
das
xchg
dec
int3
xor
dec
nop
lods
imul
cli
call
adc
jmp
fcmovbe
lock
ja
js
rcll
jno
int
mov
sbb
mov
xlat
cmpsl
mov
sub
lcall
push
pop
fiaddl
mov
or
mov
aaa
jbe
fcoml
push
movsl
cmp
mov
mov
ljmp
orb
hlt
movsl
loop
imul
fdivs
jo
or
ljmp
rcrl
mov
mov
ljmp
stc
mov
loop
in
das
ret
test
add
pop
mov
sarb
xchg
sti
push
adc
pop
lret
out
sub
mov
ja
into
arpl
test
push
cmpsb
inc
cld
out
push
xor
xlat
loope
mov
push
xchg
stos
adc
push
sbb
arpl
lock
jb
in
and
std
sub
shlb
imul
mov
or
jmp
bound
aaa
std
lret
lret
cmp
mov
arpl
xchg
mov
cs
jne
enter
and
dec
out
lahf
dec
sub
sub
or
data16
mov
jp
les
cmp
sbb
aaa
and
cmp
xor
jb
clc
push
hlt
pop
xor
pop
loopne
cli
pop
push
lods
sbb
shl
out
xchg
hlt
stos
add
jns
inc
xchg
cld
cmp
fwait
mov
add
jecxz
mov
or
mov
in
sub
repz
inc
je
mov
enter
jno
push
jg
mov
outsb
cmp
add
xchg
jae
cmpsb
out
mov
sbb
rclb
pop
and
imul
jp
xorb
push
aam
xchg
and
inc
lret
mov
xchg
cmc
pop
xchg
mov
cmpsl
and
inc
sahf
xchg
push
xor
icebp
xlat
or
dec
xchg
jle
stos
inc
loope
xchg
addr16
dec
sbb
jg
pop
adc
sahf
mov
test
adc
add
xor
xor
mov
popa
stos
sub
or
fistpl
ds
dec
xchg
jo
loopne
pop
test
pop
dec
sub
das
mov
stos
cmpsl
sbb
pop
mov
inc
enter
loope
sbb
jae
mov
cmpsb
sbbb
push
mov
cmp
push
jno
inc
jne
mov
int3
ljmp
neg
repz
mov
cmp
ret
mov
lahf
cmp
clc
fwait
sub
fsubrl
repz
adc
fs
pusha
nop
mov
dec
rclb
mov
and
sbbb
pop
testb
dec
or
dec
mov
and
bsf
cmp
cld
add
orl
inc
dec
out
shr
das
es
test
jg
inc
jo
outsb
pop
inc
jnp
add
imul
xchg
imul
decb
cmc
mov
pop
cmp
test
adc
out
dec
iret
push
mov
sub
scas
jnp
out
pop
push
int3
int
xor
dec
movsl
xchg
sub
aad
lock
adc
hlt
cwtl
mov
jnp
push
jp
xchg
in
scas
loope
in
std
test
xchg
mov
cmpsl
clc
jnp
sar
loop
xchg
dec
xor
push
lea
add
cmpsl
jns
or
aaa
push
jg
inc
scas
shrl
mov
andl
sub
xchg
aam
ds
xchg
popw
jg
nopl
shrl
mov
pop
push
int3
lods
cmp
adcb
js
inc
sub
fsub
lret
adc
sub
jl
adc
movsl
inc
cmc
mov
or
gs
pop
inc
sbb
sub
or
ds
push
shll
inc
or
sti
loop
mov
in
cmpsb
xchg
outsl
movsl
std
mov
jle
imulb
out
notl
pop
mov
sub
icebp
pop
cmp
scas
jno
dec
mov
cld
dec
xchg
or
mov
lea
sbb
jmp
imull
pop
jmp
xchg
mov
arpl
js
xchg
jp
fmuls
andl
adc
mov
push
loop
xchg
pop
sarl
push
fisttps
push
bnd
sub
xchg
pop
pop
mov
mov
adc
pop
roll
rorb
aad
sbb
xor
jb
sbb
aam
hlt
imul
xor
jno
negl
cmp
push
dec
test
sahf
je
adcb
mov
fcmovne
pop
aam
fwait
in
repnz
test
pop
rorl
fstpl
movl
adc
pop
cmpl
roll
jg
cmpsl
dec
cwtl
stc
adc
sbb
inc
sbb
cli
cmpsl
jmp
les
into
sub
inc
das
dec
mov
ds
pusha
add
nop
dec
in
daa
imul
jo
out
sub
xchg
mov
mov
inc
xchg
shr
nop
add
movl
push
cwtl
push
lods
mov
arpl
inc
sti
xchg
cmp
or
jmp
arpl
out
adcl
mov
lods
je
out
nop
xchg
mov
cltd
inc
pop
jecxz
and
test
sarb
push
icebp
sahf
cmpsb
inc
dec
or
sub
pop
adc
jo
jno
mov
pop
imul
mov
cmp
add
rol
fdivrl
sbb
movsb
jno
lcall
mov
sbb
les
pop
lahf
mov
mov
xchg
jbe
sbb
daa
movsl
dec
jno
stos
add
sti
jecxz
lahf
inc
faddp
xlat
mulb
popf
xlat
cmpsl
fisttpl
lcall
pop
hlt
push
mov
cmp
shrb
pop
sbb
repnz
lret
repnz
mov
loop
jp
fs
outsl
xlat
jns
adc
mov
cmc
inc
xchg
fs
push
mov
int3
call
or
js
add
int
cmpsl
sbb
push
cli
hlt
pop
xchg
inc
rcr
lahf
jbe
loop
loopne
aam
fisubrs
mov
aad
xor
jge
popf
push
mov
cmpsb
loopne
clc
enter
mov
fwait
bound
ret
mov
leave
pop
or
jle
int3
shrb
repnz
es
inc
mov
and
hlt
stos
xchg
and
sti
ja
stos
outsl
ja
out
cmpsl
dec
data16
lcall
adc
aaa
mov
ja
mov
cmp
repz
andb
pop
scas
fidivs
fcmovne
test
sub
inc
xchg
xchg
add
mov
outsb
mov
clc
sbb
xor
lods
cld
and
in
sbb
fimuls
es
pop
push
mov
ja
sub
nop
adcl
xchg
jae
icebp
fs
lds
jmp
and
mov
pop
and
enter
jns
xchg
mov
sub
push
fldt
mov
adc
cmp
fcoms
out
and
enter
add
mov
xor
and
inc
xchg
xchg
mov
mov
inc
or
fiadds
mov
leave
dec
xchg
leave
mov
pop
out
jmp
or
seto
push
lds
aad
ror
xchg
shrb
adc
or
cmp
into
jecxz
rcl
imul
mov
gs
push
jl
fwait
jp
or
mov
add
push
clc
jp
push
pop
dec
xchg
mov
xor
loopne
jp
sbb
pop
aad
jecxz
pop
xor
repz
cs
rol
pushl
cld
add
les
in
loope
xchg
xchg
mov
iret
push
adc
jmp
stos
fildll
mov
cld
push
pushf
dec
insl
ret
test
rcl
out
lret
jl
jns
lods
push
aaa
mov
popf
out
insb
mov
into
mov
imul
aaa
shr
js
lods
pop
out
pop
mov
mov
jne
sbb
xchg
addr16
pop
mov
fdivrl
cmp
cmpsl
aad
xlat
mov
insb
ljmp
mov
aaa
inc
inc
xor
add
test
in
push
inc
inc
xor
stos
pop
ja
setp
test
adc
iret
sahf
test
pop
test
std
cmp
loope
pushf
push
jl
lea
pop
in
ror
imul
icebp
or
ss
push
rorl
test
js
push
pop
movsb
ds
sub
push
sbb
les
xor
ljmp
cmpsb
out
in
and
aas
sub
pop
sub
adcb
scas
mov
mov
insb
jb
or
shll
pop
and
pusha
xlat
mov
push
xchg
ds
add
adc
sahf
aaa
incl
lcall
iret
loope
cmpsl
xchg
stos
call
push
cmp
shr
call
sahf
icebp
neg
jns
cltd
in
shlb
cltd
mov
test
push
inc
push
cmp
mov
mov
loopne
loop
shlb
add
and
cmpsb
push
xchg
jge
fstpt
cmp
jmp
and
les
shll
bound
ss
insl
push
cmpsb
jecxz
mov
sub
mov
lret
clc
in
out
jbe
jge
dec
sub
xchg
xlat
mov
lods
mov
and
mov
pop
mov
mov
pop
outsl
mov
lods
mov
lret
loope
sbb
mov
jns
mov
daa
sub
mov
sbb
inc
or
push
aaa
call
sbb
shll
xchg
xor
mov
xor
nop
cmp
bound
or
rcll
cmc
test
orl
rorl
mov
sub
call
adc
sub
js
movsl
add
test
sbb
mov
lret
lcall
repz
inc
push
adc
or
or
inc
push
xor
push
je
iret
ds
bound
push
lds
lods
pusha
loop
push
ds
jecxz
arpl
loop
xchg
jmp
push
push
xchg
outsl
mov
mov
leave
push
mov
and
push
push
data16
rcrb
hlt
mov
shll
out
cmp
or
ja
cmc
ret
daa
or
push
dec
ja
arpl
sub
lock
inc
dec
xchg
nop
imul
xor
or
mov
insb
xchg
lods
xchg
dec
fisubs
push
sbb
movsl
mov
jl
cmpsl
and
insl
and
sub
andb
pop
mov
movsl
mov
dec
or
mov
xchg
fldl
loop
xor
sbb
sarl
inc
fwait
sub
movsb
adc
lock
push
mov
adc
and
xor
mov
mov
mov
sar
lret
mov
data16
cmp
ja
enter
int
cmp
cli
aas
xchg
mov
mov
pop
lock
add
cmp
cmp
sahf
jne
inc
imull
pop
mov
adcl
repnz
pop
sbb
test
pop
xchg
insb
adc
ss
bound
dec
scas
je
dec
mov
insl
fbstp
addr16
movq
fdivrs
adc
stos
pop
das
push
arpl
je
int3
inc
js
xchg
outsb
xlat
xor
into
fildll
xor
jge
mov
mov
pusha
mov
gs
insb
mov
pop
out
enter
xor
mov
xchg
cmpsl
loopne
out
ds
or
pop
mov
mov
outsl
dec
push
and
adc
lock
mov
pusha
int3
lcall
xorl
xchg
mov
ljmp
in
mov
divl
sub
or
jne
in
sub
push
xchg
lret
jge
xchg
mov
into
fadds
xchg
adc
lret
cmp
fdivs
insb
inc
sbb
push
fildl
ja
daa
push
mov
cmp
mov
cs
xchg
or
jns
mov
testb
loope
popf
fistpl
adc
aad
testb
imul
pop
out
or
cmp
xor
adc
push
sbb
rclb
cmp
cltd
test
jge
push
push
or
ljmp
outsb
jmp
movsl
cmp
fwait
daa
adc
mull
jl
lcall
leave
push
adc
or
dec
into
lds
loop
aad
fistps
jno
sbb
insl
pop
dec
push
push
hlt
call
xchg
clc
sarb
shll
lods
jmp
sbb
add
sub
cmp
jl
inc
enter
xchg
jbe
and
mov
jg
pop
pop
in
loopne
xor
leave
inc
sub
jmp
lahf
cli
mov
pop
push
jge
mov
imul
movsl
and
adc
dec
das
cmp
shlb
cmpsl
xchg
in
mov
mov
test
xor
shlb
xchg
xchg
xor
jle
icebp
xchg
push
lea
out
jecxz
or
adc
out
mov
mov
aas
mov
movsb
inc
and
push
jge
inc
js,pt
fistpll
lcall
out
pop
fldl
iret
adc
push
dec
int3
shlb
daa
stos
sbb
nop
js
fnstcw
or
shrl
adc
mov
stos
sub
and
inc
adc
mov
inc
mov
in
ljmp
xor
lret
sahf
popa
int3
adc
arpl
dec
and
xor
push
cld
jl
call
or
and
stos
dec
in
aam
add
mov
sbb
shlb
cltd
sbb
xor
adc
lods
push
inc
jle
sbb
push
sbb
push
lods
or
mov
adc
bound
push
lret
sbb
int3
stos
rorb
inc
lods
leave
in
add
mov
das
inc
push
cmp
loope
push
js
punpckldq
rcrb
nop
mov
dec
xor
jmp
xchg
ja
pop
lahf
call
imul
mov
add
nop
scas
je
or
inc
inc
mov
mov
test
mov
push
sbb
pop
inc
movsl
stos
fistps
push
pop
in
lea
clc
mov
cmp
aaa
mov
out
insl
cmc
fnstsw
mov
push
dec
aaa
test
mov
mov
push
mov
lea
mov
insb
scas
ss
movsl
push
shll
test
inc
pop
xchg
and
cwtl
insl
jmp
add
rolb
popf
fidivrs
jne
jecxz
or
cmp
ffree
addr16
arpl
or
push
cmp
mull
push
jno
scas
inc
sbb
or
push
mov
out
push
out
pop
dec
cmp
and
dec
popa
adc
add
mov
adc
xchg
inc
add
push
pop
stc
hlt
imul
adc
push
push
and
cmpsb
pop
adc
loop
cmp
fsubl
push
daa
adc
sub
xchg
out
fcmovne
xchg
add
clc
jge
rol
push
cwtl
frstor
push
push
mov
sti
faddp
sub
jge
jno
xor
mov
cmp
gs
dec
fsubrl
daa
mov
sub
sbb
notl
mov
bound
and
std
jns
sub
xor
sbb
neg
xchg
mov
jne
mov
aas
arpl
ret
pop
jae
idivb
mov
inc
add
ficomps
sub
jb
aaa
cmpsb
xchg
fimull
inc
cmp
fs
mov
jl
scas
mov
out
mov
pop
mov
sbb
pop
ljmp
std
outsb
mov
add
adc
pop
sahf
imul
sub
outsl
cmc
repz
ffreep
xchg
xorl
rcrb
clc
shlb
push
cs
pushl
inc
pop
rclb
js
popa
mov
xchg
stc
leave
or
aaa
lret
xchg
cmp
loopne
fsubr
mov
stc
ljmp
dec
mov
imul
dec
popa
xor
xor
pushf
negb
into
jge
add
scas
push
mov
sbb
xor
pop
xchg
outsl
lret
js
repz
jecxz
jg
lahf
loope
jo
cld
mov
pop
dec
mov
or
pop
mov
fwait
mov
jecxz
mov
dec
jmp
mov
cs
xor
pop
popa
xor
push
pop
jbe
xor
jg
sub
loope
pusha
in
jbe
dec
adc
insb
ds
mov
and
stos
mov
lods
inc
sub
outsb
cltd
ret
call
sbb
push
lds
dec
fcoml
fisubrl
fwait
adc
call
xchg
jae
sbb
push
dec
test
mov
iret
push
into
jo
movsb
push
push
fisttpll
xor
mov
mov
aaa
mov
adc
aaa
mov
fs
mov
lods
push
stos
add
fs
adc
mov
mov
push
lret
push
or
cmp
xchg
mov
ret
pushf
insb
jl
push
inc
jmp
das
add
cld
bnd
push
mov
std
sti
arpl
jp
xor
lds
and
ds
notb
subb
test
mov
arpl
adc
and
pusha
cmp
les
aam
int3
mov
pop
addr16
jno
jecxz
jb
inc
push
out
push
leave
stos
and
add
int3
fisubs
sbb
int3
mov
daa
testb
and
mov
mov
pop
inc
pop
dec
and
mov
inc
dec
fwait
pop
repnz
jge
adc
adc
and
adc
popf
popf
cmp
les
das
dec
cld
in
rclb
jbe
adc
mov
mov
or
cmp
mov
jns
cld
xchg
or
add
in
add
cmp
adc
mov
data16
call
and
mov
shl
adcb
cwtl
decb
inc
push
add
push
in
in
xor
scas
mov
dec
mov
xor
adc
in
sbb
xchg
sahf
stos
rorl
xor
mov
sbb
jbe
lcall
jns
sub
dec
add
or
adc
or
out
loop
out
mov
inc
fdivrs
fmul
testl
add
je
mov
or
pop
sbb
mov
xchg
push
imul
mov
push
sub
mov
dec
dec
int3
dec
test
cmp
inc
xor
movsb
mov
addb
mov
sbb
xchg
sbb
movsb
cmp
cld
push
out
xor
push
mov
add
dec
and
adc
dec
incl
sbb
int
std
mov
test
sahf
xor
jns
imul
mov
sbb
dec
pop
xchg
or
cs
sbb
sbb
pop
cwtl
je
cmp
fmulp
adc
aas
cmpsb
xchg
push
cltd
fistpll
shrl
ffreep
jge
push
sub
pusha
cmpsl
pop
dec
pop
lods
sbb
inc
std
sbb
jle
std
fwait
mov
jg
and
dec
test
pop
cltd
add
xchg
mov
test
imul
and
mov
and
jg
xchg
xchg
adc
loop
add
lods
mov
mov
insb
mov
sbb
popa
dec
mov
lret
popf
pusha
js
rcrb
int3
std
lret
mov
jp
jp
adc
shlb
add
daa
jns
loope
mov
mov
scas
js
ljmp
add
ds
xchg
xchg
adc
mov
xchg
test
push
fimull
sbb
mov
lods
inc
mov
xchg
rclb
hlt
es
jae
jmp
xor
push
int
aad
mov
push
pop
pusha
and
sbb
mov
ret
rcll
inc
rep
jle
out
test
fnsave
stos
mov
pop
jb
pop
ss
dec
adc
fwait
cmp
cmp
dec
cmpsl
mov
jnp
push
adc
jno
stos
mov
lds
jo
dec
mov
mov
dec
xchg
jno
cmp
xor
inc
cmp
add
ficomps
sbb
pop
mov
mul
ret
scas
out
mov
mov
stos
push
ss
and
mov
stos
out
and
xchg
dec
loop
notrack
mov
mov
mov
mov
fs
insl
add
sub
testl
cmpsb
xchg
adc
leave
stc
cmp
leave
ljmp
fisttpll
es
xchg
testl
jge
mov
sbb
std
dec
aaa
mov
sub
push
pop
popl
or
shrb
popf
scas
fidivs
xchg
shll
mov
clc
movsb
dec
enter
or
or
xor
push
mov
fwait
mov
addr16
mov
dec
jbe
loope
test
les
cmp
sub
test
shrb
dec
nop
fdiv
mov
jbe
outsb
sbb
sahf
mov
popf
sbbb
gs
jnp
jae
cmp
cmp
mov
test
mov
sbb
sbb
out
movsb
das
in
mov
pop
push
out
test
add
push
cmp
in
mov
or
sahf
stos
ljmp
incb
mov
iret
pop
mov
mov
dec
into
jmp
mov
dec
daa
jne
stos
add
in
ret
and
int3
rcrl
jecxz
xchg
or
cmp
fcoml
ljmp
clc
dec
pusha
jg
jle
dec
in
sub
jge
push
loop
into
xchg
scas
mov
cli
push
jp
scas
ljmp
pop
cmp
pop
out
cli
cmpl
outsl
popa
addl
push
pop
jno
adc
stos
cmpsl
imulb
lcall
or
xchg
push
shl
mov
js
shr
mov
int3
inc
out
lret
mov
add
test
pop
jno
push
movsl
cmpsb
add
pop
test
jb
pop
movsl
xchg
stos
repz
inc
adc
xlat
pop
jle
arpl
mov
add
hlt
inc
repnz
nop
inc
push
inc
movsl
push
sbb
xor
xor
out
mov
je
cwtl
rolb
pop
and
stos
cmpsl
notl
fidivl
sub
stos
mov
cmpsl
into
inc
loopne
test
dec
push
dec
push
dec
add
aad
mov
int
mov
mov
aad
lea
xchg
loop
lret
pop
mov
sub
arpl
xor
dec
or
push
push
pop
push
pusha
or
adc
test
jae
and
mov
push
xor
repnz
fcomp
int
lret
mov
cmp
and
xchg
out
gs
insb
in
dec
push
adc
xor
mov
hlt
std
ficompl
and
sub
sub
ds
mov
xor
loopne
xchg
jle
in
popf
fimull
pop
add
mov
icebp
rcrl
cmp
stc
fbstp
lock
or
mov
mov
mov
fwait
nop
into
loopne
loope
push
cld
push
cmpsl
aas
mov
pop
jmp
lods
push
popa
es
fadd
xchg
and
dec
and
dec
mov
int
cmp
mov
aad
scas
mov
mov
or
cmp
cwtl
outsb
sbb
outsb
pusha
idivl
lods
xor
and
lds
out
and
in
xlat
push
test
outsl
mov
ljmp
jg
cmp
jnp
fwait
testl
imul
pop
sbb
fstps
sbb
lea
in
cli
lock
test
insl
dec
mov
lods
rcll
xchg
xchg
mov
cmpsb
movsb
mov
mov
xorl
jne
xor
add
inc
fucomp
test
int3
add
leave
pop
dec
cmpsl
jp
jo
jg
or
scas
jmp
jg
cmp
jae
and
push
psubw
cmpsl
test
or
loope
cmp
sub
cwtl
inc
stos
xor
pop
test
lahf
adc
xchg
das
aad
push
out
pop
and
inc
sti
jb
cmp
dec
aad
push
dec
ficoms
adc
bound
insb
add
mov
add
pop
imul
sbb
shlb
pop
pop
mov
fcompp
movsl
mov
adc
ficoml
ds
adc
pop
mov
xor
sti
ret
jecxz
sbb
mov
ret
cltd
cli
push
add
mov
jecxz
inc
add
dec
cs
pop
and
clc
repz
and
cltd
xor
add
shlb
cmp
lock
movsl
inc
inc
notb
aad
lods
xor
pop
mov
adc
test
insb
test
js
scas
repnz
addr16
cmp
daa
lcall
or
push
or
pop
gs
addb
mov
jg
int
insl
mov
pushf
sbb
in
xorl
dec
int3
and
icebp
lahf
test
mov
das
push
or
js
inc
out
mov
xchg
cmpsb
pop
cwtl
xor
loope
cmp
nop
sbb
xor
arpl
mov
and
test
mov
inc
xchg
sbb
or
push
fbld
jmp
xor
mov
test
jmp
push
jmp
sbbl
or
rclb
push
mov
push
subb
jmp
jg
push
cltd
and
push
pop
jge
xlat
or
repnz
jnp
lret
fidivl
call
dec
xchg
cmp
aam
fbstp
mov
pop
xchg
sbb
outsb
and
cmp
dec
dec
sub
mov
cwtl
rorl
subl
xchg
adc
jne
dec
xchg
fwait
ss
add
xlat
push
mov
test
mov
scas
in
sbb
loopne
insb
inc
mov
dec
add
adc
pop
mov
xchg
int3
pop
fsubrl
mov
jg
int3
data16
stos
ljmp
adc
and
and
jle
cmp
xor
mov
cmpsb
fwait
push
mull
mov
push
dec
cld
cs
mov
int
or
or
in
mov
mov
ret
enter
gs
rorl
lret
jb
popl
cltd
mov
pop
in
adc
jle
xor
loop
arpl
mov
scas
add
sub
mov
mov
insl
mov
in
jnp
xor
in
mov
inc
or
add
add
ljmp
push
out
lahf
es
sub
lods
sub
cmp
jp
or
inc
out
addl
mov
mov
or
xlat
loopne
mov
pop
ds
lock
pop
adc
sbb
daa
dec
int3
jmp
xchg
mov
popl
adc
jb
push
test
inc
cmp
adc
xchg
and
dec
xchg
fmul
iret
hlt
enter
push
test
xchg
mov
hlt
ret
xor
sahf
mov
xchg
test
out
sti
cmpsb
xchg
cld
xchg
xor
je
inc
lods
add
jp
int
fbstp
push
int
inc
in
add
fistpll
xor
mov
cmp
mov
cli
ja
rcrb
mov
inc
mov
rcr
push
aas
inc
cmp
fs
loop
mov
jl
lods
andl
jmp
inc
stos
push
and
cmp
test
in
xchg
daa
pop
enter
mov
sbb
mov
lds
cmp
jg
pop
jmp
leave
cmc
enter
jge
dec
jae
out
in
cltd
pushf
aad
push
fiadds
inc
lret
aas
ja
nop
jecxz
pop
add
xor
ljmp
sarb
xchg
jecxz
fisubl
and
mov
push
pop
mov
pop
es
push
cltd
and
in
es
push
std
enter
lds
sahf
shll
sarl
loopne
ljmp
pop
pop
cmp
pop
jo
aaa
or
negl
stos
mov
fsubr
or
jl
imul
sarl
bound
mov
mov
inc
xor
bound
or
cmp
das
nop
fiaddl
and
cmp
stos
or
push
push
in
dec
pop
or
lcall
out
jl
icebp
mov
divl
jmp
shl
sub
aad
stos
out
jns
loop
sahf
sti
daa
inc
cmp
mov
int
call
movsb
jp
testb
loop
mov
mov
mov
xchg
sub
adc
jb
enter
or
add
adc
mov
cli
je
mov
push
mov
in
addb
mov
lret
and
or
push
pop
ljmp
and
stos
pop
dec
test
jle
daa
enter
jo
andb
add
push
notl
adc
dec
jo
popf
leave
jnp
jno
test
sarb
popa
test
int
popa
mov
inc
shlb
int
sbb
jg
aam
fdivs
cmpsb
fisubrs
cmp
iret
jb
sbb
testl
cli
fidivl
adc
mov
cmpsb
sbb
mov
and
dec
mov
lds
imul
incl
lods
ret
shl
in
aaa
dec
data16
dec
xor
lods
or
pop
in
sti
push
xor
cmp
pop
pop
or
ljmp
mov
push
stos
pop
xchg
add
dec
adc
int
or
inc
and
xchg
bound
cs
jp
pop
pop
sub
pop
ja
stos
js
mov
icebp
imul
in
jbe
ret
or
stos
push
push
mov
insb
or
enter
xor
stc
ror
ds
mov
mov
lahf
fadds
add
lock
pop
daa
add
popa
cs
cld
jl
pop
enter
sub
addr16
dec
out
add
push
adc
inc
push
movsb
mov
aad
lret
xor
dec
call
jl
xchg
mov
mov
orl
mov
jno
repz
and
pop
cs
cmpsl
sub
ss
add
pop
inc
arpl
fsub
pushf
mov
push
ror
pop
nop
sub
cltd
cmc
out
xor
mov
jg
faddl
mov
scas
fcmove
mov
xchg
sbb
inc
sub
insl
shll
enter
push
sub
xchg
mov
out
into
out
xchg
das
sbb
xor
aaa
or
mov
rcll
adc
xor
mov
jnp
stos
lock
ds
mov
mov
gs
adc
cwtl
pusha
test
push
mov
in
jo
mov
je
in
arpl
pop
insb
roll
mov
into
add
xchg
add
mov
xor
and
mov
in
xor
pop
mov
orb
pushf
dec
jno
sbb
test
add
mov
inc
dec
mov
mov
sbb
outsl
dec
push
dec
lods
andl
cli
adc
xchg
test
cmp
adc
jne
mov
andb
inc
pushf
sub
jnp
and
dec
pop
test
sbb
inc
or
or
int3
or
ficompl
insl
dec
int
into
or
addr16
lock
nop
mov
sar
mov
and
add
cmp
pop
arpl
xchg
iret
fnsetpm(287
jb
fwait
push
ficompl
pop
push
mov
lcall
or
adcb
jg
out
enter
sbb
fwait
sbbl
add
icebp
mov
lds
js
xchg
ljmp
and
sub
out
push
loopne
dec
mov
jne
push
je
and
xor
jb
cwtl
mov
addr16
inc
in
pop
sub
cs
push
inc
stos
add
loop
mov
mov
mov
stos
jge
mov
ljmp
fistpll
lahf
dec
or
imull
push
shlb
jnp
inc
pop
fisubrl
clts
push
pop
test
mov
stc
cmpsl
jno
sbb
pop
mov
mov
mov
scas
lods
das
push
test
pop
ds
sti
lock
pop
fiaddl
jbe
xor
push
inc
outsb
cmp
dec
mov
and
stos
and
int
mov
inc
cmpsl
push
mov
xor
testl
sub
pop
insl
loope
stos
scas
mov
stc
fisubrl
jg
push
inc
fs
test
xchg
sti
dec
das
xor
push
mov
out
pop
lock
sub
testl
cltd
scas
in
shl
subb
les
repnz
lcall
cltd
rorb
sbb
mov
cld
jle
call
lcall
xor
lret
jns
movsl
and
lcall
jns
or
pop
adc
insb
fstp
dec
movsb
cld
icebp
sbb
test
mov
or
mov
test
fsts
xchg
sbb
js
sbb
sub
mov
into
and
cmp
sbb
pop
add
lea
jae
jnp
js
push
sbb
ds
or
xchg
daa
jne
loopne
in
adc
aad
std
je
mov
sub
test
mov
repz
rcrb
sub
and
lret
int
movsb
or
pop
sbb
sbb
or
lret
xchg
dec
icebp
sub
call
daa
jo
dec
out
gs
and
mov
mov
and
pop
sub
dec
sbb
jno
jae
fmuls
enter
icebp
sbb
ds
divb
mov
adc
in
scas
aaa
xchg
popf
test
mov
pop
dec
dec
iret
test
cmpsl
pop
call
xchg
inc
test
sub
arpl
inc
xor
push
int
out
stos
fcompl
aas
add
outsl
scas
and
and
xor
arpl
jnp
inc
pop
pop
pusha
lret
and
insb
jmp
mov
ja
loope
adc
add
cwtl
addb
mov
in
push
dec
push
aas
xor
inc
call
cmp
mov
scas
hlt
jmp
xor
adc
pushf
imul
cmp
fildl
pop
daa
add
das
arpl
mov
repz
xor
gs
pusha
sbb
ds
adc
clc
jg
and
mov
push
icebp
jle
add
dec
or
movsb
movsb
pop
xor
jnp
xor
stc
daa
push
addr16
jno
cli
shr
or
lock
and
lahf
lock
fcomps
mov
out
push
ret
out
pop
dec
xor
mov
add
xor
add
add
and
cltd
mov
fiaddl
incb
or
sbb
dec
shll
es
mov
mov
repz
mov
fisttpll
or
dec
push
movsb
decl
add
dec
fidivl
daa
mov
fiadds
lcall
mov
movsl
and
repnz
lods
mov
je
testb
push
cmp
out
xchg
jl
aam
scas
call
hlt
jo
imul
xor
pushf
pop
mov
movsb
add
xchg
data16
pop
xchg
faddl
inc
inc
scas
iret
shll
jg
pop
hlt
cmc
or
push
xchg
xor
jbe
or
mov
ljmp
cmp
into
mov
cmp
into
push
aam
mov
cmp
outsb
xchg
dec
pop
mov
cmpsl
pop
iret
push
fcomps
repz
ret
pop
cmp
sti
and
add
jl
imul
ss
pop
xorb
push
cmc
push
mov
je
mov
in
xor
xchg
cmp
movsl
adcb
push
shlb
mov
xor
cmpsl
and
push
pusha
sub
divl
jnp
fstp
or
jl
pop
push
and
jns
into
jmp
mov
subb
stc
sbb
xchg
jge
add
inc
ret
imul
test
sbb
xor
mov
ficoms
xor
push
iret
jge
out
or
popa
js
jp
ret
imul
dec
jge
and
or
addr16
adc
jb
stc
mov
cmc
and
jne
cmp
lds
sub
out
frstor
sub
xlat
push
imul
lret
and
xchg
ficompl
push
arpl
cmpsl
pop
adc
sbb
sbb
aam
pop
xchg
dec
mov
inc
repz
arpl
pushf
hlt
add
fcmovnbe
ljmp
cmc
ret
movsl
mov
loope
fadds
shlb
loope
insb
mov
sub
lret
ljmp
mov
lret
das
and
push
jns
xor
xchg
pop
and
jns
push
jle
and
shl
adc
ljmp
fs
jle
lods
or
testl
pop
xor
insl
xchg
gs
push
mov
and
jge
dec
push
xor
mov
aaa
insb
sub
sub
and
mov
xchg
inc
inc
jle
xorb
push
and
jbe
and
or
sbb
je
adc
xor
into
and
mov
jns
test
xor
mov
arpl
test
inc
push
xor
inc
fists
or
xchg
repz
jo
cmp
or
pop
xchg
outsb
sub
sub
xchg
scas
daa
jae
ja
icebp
jnp
insb
stos
mov
pop
shl
add
xor
test
lds
and
aam
add
xlat
fcompl
out
push
mov
insl
or
push
rorl
aad
xchg
or
fstpt
add
cwtl
mov
aad
pop
dec
adc
outsl
mov
js
xorb
ss
sbbb
mov
mov
flds
ljmp
das
fcomps
mov
sbb
mov
ret
push
cltd
xchg
mov
adc
int3
mov
mov
cltd
scas
add
mov
mov
jae
testl
rcrl
mov
lret
push
mov
addr16
lret
pop
dec
push
sub
xor
negl
jno
daa
dec
cmp
scas
lods
or
jmp
out
sbb
pop
loopne
nop
mov
test
fidivs
mov
cwtl
aas
jmp
and
add
xor
push
fbld
fdivr
inc
inc
out
fwait
xchg
int3
dec
lcall
lret
cmp
movsl
push
daa
add
mov
loopne
std
and
inc
call
popf
rcll
dec
jmp
outsb
cmp
mov
cli
xor
xchg
push
jnp
nop
loope
and
mov
testl
int3
inc
scas
jle
mov
add
jae
dec
cmp
push
pop
gs
dec
sbb
sbb
xor
in
movsb
movsl
mov
insb
mov
fmuls
shl
push
das
jne
insl
mov
pop
jb
insb
jl
pop
mov
cmp
mov
cmpl
fisubs
xchg
int3
push
roll
cmp
mov
push
and
and
xchg
loope
test
push
jp
xchg
fisubrs
fidivrl
sub
jecxz
jnp
fildl
push
push
imul
sbb
lock
leave
out
add
dec
sub
shr
jbe
cmp
aam
push
je
or
xchg
popf
mov
cltd
jnp
icebp
aad
pop
push
cmpsl
or
out
std
jl
lds
cmpsl
add
mov
es
mov
scas
xchg
mov
scas
mov
lods
jbe
mov
pop
adc
pop
outsl
mov
jecxz
call
out
jge
pop
mov
cli
xchg
jl
inc
ja
ret
mov
sub
stc
movsl
out
sub
lea
aaa
or
and
push
pop
and
push
mov
hlt
adc
mov
loope
sbb
mov
ret
cmpsl
pop
out
xchg
lea
neg
mov
or
sbb
fucom
gs
push
mov
add
add
clts
ja
test
lahf
jb
imul
in
mov
sbb
pop
add
lea
dec
notb
jae
mov
mov
cltd
js
inc
cli
mov
and
insl
out
out
jo
jecxz
adc
jnp
dec
mov
aad
in
std
sbb
xor
popa
push
sbb
sub
push
in
or
addr16
lds
mov
hlt
mov
rclb
inc
and
add
stc
scas
push
cmc
addl
stc
add
js
jnp
lds
les
pop
idivl
dec
filds
push
ret
adc
dec
pushf
jp
xchg
popa
pop
xor
dec
cmp
push
ret
and
push
scas
mov
xchg
and
adc
push
jae
and
mov
iret
jecxz
ficoms
xchg
addr16
xor
cmp
push
lods
pop
clc
scas
stos
cltd
stos
ret
xchg
in
in
xor
xchg
and
mov
int3
in
mov
hlt
ret
ljmp
nop
adc
add
fmull
cld
mov
xor
adc
xor
sub
int
sub
and
mov
out
test
and
test
mov
inc
jne
sbb
int3
frstpm(287
push
lahf
mov
fldt
jbe
mov
movsl
and
adc
rolb
and
scas
xchg
mov
fldl
test
and
pop
or
les
jno
jle
adc
dec
lds
inc
mov
sti
ret
and
das
jle
jmp
inc
imull
add
inc
in
cmpsl
hlt
or
enter
ficomps
outsb
adc
push
and
fidivl
push
or
cmp
scas
jns
sub
ja
xor
enter
roll
sbb
fucomp
dec
dec
fsub
xchg
cmp
int3
in
mov
daa
sub
cmpsl
rorb
gs
fadds
fistpl
or
aas
sbb
ja
jae
mov
dec
rorb
out
sbb
jl
lret
inc
adc
and
xchg
lahf
cld
int
adc
jb
or
int3
fst
fcmovne
xor
jmp
jg
pop
jbe
lahf
pop
cmp
decb
xchg
push
sub
or
loop
push
jae
xor
call
insb
loope
movsb
and
scas
fs
push
xchg
cmp
mov
fst
insb
outsl
inc
pop
aad
push
dec
outsl
inc
pop
mov
cmc
scas
bound
push
pop
xor
jo
pop
loope
int3
push
dec
fistpll
mov
push
popa
push
mov
and
cmpsl
mov
in
pop
or
outsl
or
insl
adc
push
ja
cmp
fisttps
test
or
cmp
xor
nop
test
les
dec
test
setbe
jno
sub
sbb
sub
pusha
xchg
jle
xchg
add
mov
shl
xchg
xchg
pop
cmp
sub
mov
sbb
and
sbb
dec
loope
ret
dec
xorl
xor
sbb
aas
inc
push
aam
pop
testb
mov
mov
cmc
decl
out
dec
adc
sarb
and
cmp
inc
lcall
mov
jnp
std
push
mov
xor
cmp
dec
mov
test
mov
jle
jbe
jmp
jle
lahf
movsl
frstor
xchg
add
dec
cmp
push
daa
sahf
xchg
pop
push
push
pusha
ds
test
mov
pop
pop
inc
add
ret
dec
jns
jno
adc
sub
ret
rolb
mov
mov
jle
movsb
push
out
or
test
jae
pop
dec
mov
aam
and
out
aas
push
add
dec
jno
enter
icebp
sub
mov
enter
lds
imul
insb
jo
fisttpl
inc
mov
shlb
push
mov
pop
imul
adcw
pushf
loop
xor
sub
and
add
clc
cmp
push
rcrl
xor
pusha
push
or
lret
jp
xchg
das
mov
adc
xor
cwtl
mov
into
fcoms
fiaddl
and
aad
jno
xchg
and
ljmp
movsl
push
pusha
lods
nop
loopne
xor
xchg
add
ja
add
push
stos
adc
fisubrl
lcall
imul
and
push
decb
mov
insb
push
and
lahf
pop
arpl
fs
clc
xchg
mov
or
lods
push
pop
xchg
mov
roll
jmp
add
mov
fs
and
adcb
sbb
dec
test
pushf
dec
stc
pushf
imul
cld
in
mov
shll
xor
loope
sub
sub
push
repnz
lahf
inc
mov
frstor
ss
pop
mov
iret
jbe
lods
stos
fstl
dec
cli
mov
dec
mov
xchg
loopne
iret
lock
inc
push
jae
movsl
pop
std
lahf
adc
jle
jne
inc
test
sub
sahf
fdivl
jb
dec
sub
jecxz
pop
leave
xor
test
and
dec
cmpsl
fcmovnu
dec
shr
jge
nop
notb
jmp
cmp
mov
jge
mov
dec
cmp
cmp
push
sub
lods
aaa
mov
xchg
add
popf
arpl
es
outsb
call
jp
std
addl
jge
loope
cli
ljmp
inc
es
or
clc
mull
ds
jg
mov
adc
cltd
xchg
scas
jmp
inc
inc
push
sbb
jns
xor
fisttps
outsb
popf
dec
addr16
mov
jo
adc
aas
js
sbbl
mov
push
popf
int3
and
ljmp
ja
pushf
jnp
orl
xor
movswl
mov
in
jg
jbe
pop
lea
lds
mov
and
movsl
sub
or
push
call
sub
bound
mov
cli
push
xorb
or
or
popf
xchg
subb
jle
xlat
xchg
mov
sbb
push
xor
ljmp
pop
mov
out
adc
clc
adc
cmp
rorb
inc
mov
test
int
add
inc
std
jo
mov
sbb
cmp
fmuls
daa
cmc
scas
and
pop
fldt
add
rol
adc
lods
xchg
adc
add
in
and
pop
push
add
mov
iret
sbb
jg
cld
mov
xorb
insl
jbe
arpl
outsb
shr
push
fisttpl
adc
mov
mov
ja
mov
fimull
jns
enter
jnp
xor
loope
lcall
adcl
stos
xlat
in
pop
sub
jle
aaa
enter
lods
push
adc
push
jl
mov
js
aad
and
xor
mov
inc
fiaddl
mov
mov
movsl
cli
lret
xor
jbe
sub
shrb
push
fcmovu
fdivs
add
xor
mov
test
cmpsb
repnz
xor
adc
inc
sbb
iret
call
lds
inc
and
mov
int
cli
pop
xor
fmuls
mov
nop
les
dec
loopne
add
mov
pop
jno
push
push
jmp
push
mov
cmpsl
xchg
int
out
sub
int3
mov
pusha
popa
mov
inc
in
fstl
std
aam
pushl
or
jno
lcall
les
mov
dec
outsl
js
fcompl
test
roll
ja
mov
xchg
loope
mov
push
daa
adc
out
aas
repz
xchg
jbe
in
dec
push
adc
fdivl
jno
test
jmp
sub
out
mov
inc
add
imul
push
xchg
imul
dec
inc
jne
inc
hlt
mov
cwtl
decb
pop
lods
inc
fadds
je
pop
pop
es
lods
adc
aam
outsb
lret
pusha
inc
jge
adc
push
pop
dec
psubusw
testb
xchg
popa
xchg
cmpsb
dec
cmp
add
daa
mov
fs
mov
in
outsl
xchg
pushf
loopw
inc
add
and
loop
push
fldcw
and
adc
push
out
xor
fcompl
add
or
xchg
and
add
mov
sub
push
faddl
push
sbb
fdiv
std
mov
pop
enter
sub
or
cmp
pop
cld
lds
test
or
lds
lret
add
jno
pushf
cmp
jg
add
xchg
push
mov
xor
xchg
mov
push
adc
les
insl
movsb
xchg
adcl
cmpsb
or
cli
mov
sbb
sbb
jle
hlt
imul
and
fistl
dec
mov
orl
push
mov
fisubl
or
mov
cmpsb
cmp
ja
stc
mov
cwtl
mov
mov
jecxz
mov
inc
sahf
jo
out
in
inc
enter
pop
xor
xchg
arpl
dec
or
ret
fsubrp
movsb
testl
mov
xchg
int
add
cwtl
xor
call
popa
push
jge
loope
push
bound
hlt
push
jno
int
orb
iret
test
notb
insl
adc
insb
sarl
orb
imul
outsb
pop
scas
pop
pop
movsl
adc
lahf
bound
jbe
imul
lahf
pusha
xor
pop
sbb
stc
xchg
xchg
pop
push
les
mov
jnp
std
jp
fst
call
sub
sub
jmp
inc
sub
add
out
mov
mov
adc
add
lods
enter
je
lret
scas
fsubrl
mov
insl
push
faddl
dec
out
mov
lret
pop
mov
arpl
int
add
insb
mov
pop
mov
fdivrs
nop
cmp
pop
movsl
dec
and
mov
inc
and
movsl
icebp
mov
dec
sbb
popa
pushf
popa
pop
fxch
insl
jecxz
popa
adcb
xchg
les
or
cmp
cmpsl
pusha
sub
stos
rorb
xchg
adc
mov
sub
inc
sbb
adc
xchg
lcall
or
or
xchg
cltd
and
xchg
lahf
cmc
xchg
enter
mov
pop
cmc
mov
stc
out
stc
or
and
jb
dec
int3
jmp
hlt
mov
inc
les
inc
loope
mov
lods
pop
lods
arpl
inc
test
push
aaa
cld
addr16
mov
sbb
xchg
dec
or
stc
xor
add
jmp
mov
cwtl
jae
outsb
mov
xchg
lahf
ret
data16
test
hlt
clc
xchg
push
lea
pop
mov
rcll
aad
mov
pop
xchg
or
adcl
mov
add
fwait
inc
addb
add
push
push
fidivl
mov
cmpsb
mov
lret
sbb
lret
in
int
dec
aad
lock
sbb
and
ret
or
push
scas
inc
and
loope
cmp
cmp
pop
aas
mov
fsubs
lods
dec
mov
fmul
cmc
mov
stos
bound
pop
sbb
out
mov
jbe
dec
jne
adc
xor
fcoms
add
mov
outsb
sbbb
or
cmpsb
jg
push
cmp
jle
popf
loop
call
push
adc
cltd
test
or
and
pop
push
mov
xchg
addr16
dec
mov
xor
mov
dec
sub
adc
dec
lds
mov
orl
test
xchg
mov
fdivrs
repz
mov
xor
jns
enter
daa
push
sub
pop
and
pop
jle
fadds
int
sub
mov
call
mov
jl
push
jnp
out
dec
in
pop
outsl
sbb
adc
insl
insb
scas
pop
pop
xor
cltd
sbb
dec
repnz
or
dec
ret
out
push
adc
cmp
faddl
cmp
mov
imul
mulb
lods
outsb
cmc
or
jmp
xor
std
jo
lods
adc
mov
adc
imul
shlb
arpl
pop
sbb
sub
and
sub
in
inc
loopne
xor
inc
aaa
pop
lea
aad
mov
xor
into
adc
std
xor
ret
leave
imul
in
pusha
icebp
xor
call
in
xchg
push
ror
out
rolb
push
jge
jne
call
cltd
push
movsl
cltd
int
mov
push
pop
xor
fimull
pop
and
daa
addr16
rcrl
xchg
sbb
dec
push
sub
gs
xchg
mov
push
jle
dec
jg
pop
dec
int3
jge
dec
xchg
lcall
shrb
ds
push
inc
int
mov
outsl
inc
or
dec
push
aam
inc
int3
cmp
push
outsb
mov
sahf
mov
sub
xchg
jnp
cwtl
xchg
xchg
hlt
cli
push
jg
jge
sarl
sub
mov
and
dec
inc
add
cmp
loopne
xchg
repz
dec
notb
mov
repz
sub
insb
mov
cmp
cmpsl
push
pop
xor
push
shll
mov
cmp
test
jbe
lahf
sbb
notl
or
push
push
mov
fdiv
and
xchg
mov
fnstenv
in
and
fidivl
loop
shlb
cmc
xchg
xchg
push
lcall
jle
mov
xchg
cwtl
adc
push
into
inc
arpl
mov
lret
scas
in
adc
shrl
mov
sahf
jle
pushf
and
mov
mov
add
lds
jo
jle
mov
nop
test
movsl
in
jl
jecxz
and
shrb
mov
xor
and
jle
xor
arpl
fstps
or
mov
insl
push
inc
add
sub
mov
decl
lods
inc
mov
add
enter
ljmp
xlat
lds
test
insb
clc
push
lea
pop
lahf
movsl
stc
sub
ds
push
movsb
cmc
hlt
cmp
push
add
aas
repnz
test
jae
push
movsb
mov
adc
das
insb
data16
hlt
dec
cmp
idivb
push
mov
add
insb
pop
fwait
sub
jo
lods
enter
push
das
mov
fstps
pushf
xlat
or
sbb
std
pop
cmc
fsubl
or
addr16
lea
push
mov
inc
mov
jne
gs
testb
mov
adc
xchg
daa
cwtl
adc
or
jl
insl
es
or
loope
sub
sahf
jb
insl
or
lcall
and
les
sub
mov
aaa
fs
psadbw
push
orl
into
in
xchg
shl
mov
addr16
ds
mov
pop
rorb
sahf
or
arpl
mov
push
lea
pop
inc
pop
pop
jae
mov
mov
cmp
les
cltd
inc
xor
pop
or
pop
cmpsl
inc
xchg
aam
push
cmp
stc
xor
outsb
fisttpl
sbb
dec
mov
scas
fisttpl
nop
jb
xchg
cmpsb
andb
js
bound
pop
lahf
cs
mov
add
call
xchg
xchg
filds
pop
bound
test
adc
mov
mov
adc
sbb
sahf
outsl
jmp
push
adc
inc
pop
mov
mov
push
sbb
cmp
shll
insb
ret
jo
icebp
fwait
dec
jno
jg
xchg
cmpsb
xlat
mov
push
ret
xchg
addr16
xchg
xor
int
add
adc
jge
jecxz
clc
pop
sbb
push
push
jae
pusha
xlat
add
cltd
mov
ss
mov
pop
lret
repz
andb
test
lcall
imul
ja
jo
adc
inc
lds
hlt
icebp
test
jmp
mov
add
xchg
faddl
std
test
mull
xorb
cmpsb
pop
jb
pop
mov
cwtl
xor
loope
adc
inc
fucompp
dec
pusha
dec
popf
out
loop
mov
lock
xchg
add
push
out
xchg
dec
jge
call
adc
fwait
cmp
int
push
out
pop
mov
mov
xor
mov
cmpsb
jbe
cmp
jae
inc
mov
jae
jnp
and
hlt
push
pop
lea
cmc
xlat
mov
xchg
adc
jge
adc
aad
push
xor
add
xchg
shrl
jecxz
adc
dec
sub
imul
mov
scas
out
xrelease
stos
pop
cmp
pop
mov
mov
gs
add
pop
cmp
out
sarl
pop
aad
xchg
add
movsl
fwait
ss
out
jae
fsubrp
mov
mov
add
imul
xor
mov
pop
loope
push
dec
pop
xor
rorb
movsl
divb
rorb
adc
lcall
vunpckhps
test
inc
adc
mov
js
cmp
jno
sub
jno
cs
sub
addr16
movsb
and
sbb
jnp
out
test
lahf
aaa
pop
out
jge
and
xchg
data16
cmp
or
cmpsl
dec
inc
sub
adc
rorl
cwtl
sbb
xor
outsb
mov
inc
stos
mov
std
movsl
dec
dec
mov
push
mov
pusha
in
lds
sbb
dec
inc
sbb
jecxz
inc
pop
mov
adc
es
pop
mov
lds
insb
mov
push
xchg
fisubrs
xor
mov
insb
fisttpl
and
xchg
addr16
and
test
jge
mov
mov
neg
mov
xchg
and
ja
push
data16
insb
xchg
cmp
push
mov
pop
jno
inc
outsb
xchg
push
lret
je
repnz
cwtl
mov
mov
imul
inc
jmp
jne
mov
xchg
adc
xchg
sub
xor
cmp
sub
jg
push
lret
pushf
mov
mov
inc
jns
xchg
push
mov
loopne
cmp
je
adc
arpl
cs
stc
pop
adc
mov
inc
int
hlt
loopne
aas
and
cmpsb
pop
test
aas
jl
mov
and
push
xchg
lret
push
movsl
movsl
add
mov
into
nop
lods
or
mov
add
sahf
pop
adc
or
jns
movl
cwtl
popa
ljmp
sbb
xchg
or
and
bound
roll
in
jne
pop
xlat
dec
je
outsb
adc
sub
out
and
mov
jne
mov
inc
jo
sbb
mov
addr16
iret
push
adc
popf
into
or
rclb
jo
jl
jbe
cmp
adc
push
cmp
gs
xor
jge
or
lret
or
aam
jns
bound
ret
dec
fcomps
dec
sub
inc
mov
inc
cmp
add
ret
xchg
jg
int3
sbbb
pusha
inc
into
sbb
rcl
inc
call
cmpsl
sub
imulb
xor
sahf
outsb
sub
cmp
enter
jp
add
je
fwait
cmp
jg
call
cmp
sbb
and
fwait
add
and
inc
push
cli
and
push
lahf
xchg
sub
insb
mov
jno
lret
int
rorl
outsl
xor
push
push
jecxz
popf
push
shl
jo
inc
lcall
orl
lret
mov
lcall
xchg
dec
mov
cmpsl
inc
aad
ret
add
iret
xchg
cmpsb
cmpsl
out
imul
mov
ja
pop
mov
adc
cs
and
insb
push
in
inc
imul
xor
sbb
and
into
nop
sub
es
sbb
stos
dec
bound
ss
xor
stos
sarl
sub
cltd
and
sub
lea
jp
arpl
cs
ret
jle
movsb
dec
mov
into
lea
icebp
xchg
shl
cld
stc
and
cmc
dec
out
xor
subb
mov
xchg
mov
xchg
cmp
insl
lahf
mull
mov
jmp
out
mov
xchg
pop
testb
arpl
adc
jl
ljmp
jne
mov
aas
mov
mov
ret
les
dec
inc
xchg
sti
test
inc
hlt
mov
push
cmp
mov
cli
mov
unpcklps
repz
mov
pushf
inc
dec
adc
cld
outsb
push
cmp
test
cwtl
mov
pop
js
cmpl
fmuls
cli
jnp
xchg
cld
adc
lock
sbb
imul
data16
lock
out
les
dec
daa
jno
sti
fsubrs
je
andl
mov
idiv
sti
dec
cmp
lock
adc
xorb
cmpsb
in
call
or
dec
pushl
mov
je
and
loope
out
pop
or
pop
popa
in
cmp
lods
add
jns
xchg
xchg
mov
cld
clc
xchg
dec
sbb
cmp
xchg
adc
frstor
ftst
jno,pn
adc
outsb
dec
jg
in
mov
or
inc
jnp
jg
xchg
cmp
enter
xchg
sub
add
enter
adc
jnp
adc
mov
fdivrs
repz
push
ljmp
in
push
inc
in
dec
std
mov
icebp
mov
loope
leave
scas
into
cmpl
add
pop
xchg
loop
mov
and
inc
xor
cmp
adc
cld
mov
vpsubsw
xchg
lock
loop
flds
lods
aaa
pop
nop
idivl
ds
mov
push
adc
icebp
sbb
roll
mov
mov
sbb
mov
cmpsb
nop
fists
jle
fmuls
popa
daa
subl
dec
add
pop
pop
mov
dec
sub
mov
es
xlat
lods
scas
dec
xor
add
mov
cmpsb
xor
daa
out
adc
jnp
div
xor
xchg
mov
add
cwtl
loop
ds
es
into
xor
pop
ss
loope
jns
push
jne
test
cmc
and
mov
pop
and
mov
mov
mov
push
sub
jge
jecxz
out
inc
push
fcoml
sbb
lret
js
dec
inc
push
or
dec
stos
add
popf
mov
pop
or
mov
mov
add
cmp
dec
mov
or
mov
mov
cld
sbb
pop
adc
out
cmp
push
in
lods
icebp
cmp
cmp
lcall
mov
loopne
jecxz
push
pop
inc
mov
dec
fnstenv
rep
test
test
inc
cltd
dec
sub
push
aad
or
bound
adcl
adc
push
iret
xchg
shlb
mov
push
sar
mov
lods
dec
lods
xchg
add
mov
insl
push
sub
in
lcall
dec
push
popf
sarl
out
sub
cmpsb
jecxz
insl
cmp
fidivrl
aad
inc
ret
push
out
push
dec
mov
je
js
nop
jae
jns
jmp
mov
repz
cmpsl
dec
adcb
push
fists
push
jecxz
enter
aas
adc
xchg
mov
das
test
pop
pop
sbb
adcb
insl
loop
cmpsb
jne
fisubrl
push
jle
inc
imul
adc
aad
pop
inc
test
inc
fcoms
and
mov
xchg
lahf
cld
cltd
cmpsl
pop
cld
dec
nop
loop
test
mov
mov
dec
mov
mov
mov
ljmp
sbb
pop
mov
xor
push
pop
inc
sub
sub
cmp
xchg
jge
push
loop
fucomi
jno
sbb
inc
push
lret
aam
xor
fcompl
add
dec
mov
scas
push
jecxz
and
dec
xchg
adc
std
cmp
push
mov
jo
int
mov
adc
sub
dec
mov
push
and
sbb
cmp
lret
loopne
negl
mov
pop
dec
js
data16
dec
ficoml
adc
sbb
dec
add
movsl
mov
cli
shl
ret
cmp
xchg
fstpl
lcall
mov
dec
fstpt
add
das
xchg
and
sub
adc
inc
sarb
les
mov
ret
insb
inc
pusha
or
push
test
ftst
int3
aas
lods
std
sbb
jnp
out
outsl
mov
mov
jge
roll
sahf
in
jno
inc
dec
out
cmp
push
orb
rcll
jnp
aad
sub
stc
mov
or
loopne
mov
sbb
add
xchg
sub
inc
push
or
pop
fcmovb
outsl
or
les
and
adc
pop
js
ds
jl
dec
xchg
mov
xor
cmp
out
repz
inc
sub
or
loop
lock
negl
aas
push
mov
jae
lods
xor
mov
dec
test
fadd
mov
xor
adc
mov
mov
push
pushl
xchg
dec
repz
test
hlt
xchg
das
inc
fimuls
orb
xchg
jo
hlt
pop
pop
dec
popf
mov
push
popw
push
pop
push
roll
mov
jle
gs
iret
jb
jb
mov
sbb
pop
xchg
and
pop
mov
pushf
mov
add
adc
mov
popa
push
inc
mov
das
sub
xor
das
cld
xchg
movl
pop
mov
divb
dec
and
loop
loopne
outsl
lcall
mov
push
xchg
out
dec
pop
and
pop
push
lcall
ret
jecxz
inc
inc
dec
orb
sarl
daa
add
adc
pop
or
fstps
fdivl
xchg
imul
push
dec
pop
enter
jmp
xchg
in
mov
xchg
stos
dec
idivl
sub
jne
insb
jae
fcomps
pop
cwtl
loopne
mov
mov
ds
push
test
fiadds
ljmp
in
pop
pop
add
add
into
nop
pop
nop
jae
popa
mov
push
mov
push
sbb
mov
je
stc
jns
out
div
mov
pop
and
enter
into
and
cmp
pop
adc
and
loope
adcl
hlt
jb
out
fnstenv
call
repz
sbb
add
out
daa
lods
lahf
sti
mov
pop
adc
insl
popf
scas
cld
jae
cmpsb
pop
cmp
and
ds
mov
push
pop
or
scas
pop
inc
sub
fs
dec
adcb
xor
sti
mov
aaa
fstl
lret
mov
fwait
stos
mov
mov
sub
push
iret
enter
std
dec
clc
xor
xchg
sbb
add
inc
push
inc
les
jno
loop
or
mov
cmp
push
xor
clc
mov
fists
lea
push
stos
xor
xchg
xchg
mov
push
bound
fsubrs
movsb
push
fwait
insb
mov
pop
sub
jecxz
jo
dec
or
faddl
pop
test
push
inc
testl
test
adc
movsb
push
mov
mov
je
or
popf
cmp
mov
nop
add
filds
xchg
loopne
inc
or
mov
sub
daa
sbb
inc
xor
stos
dec
in
loop
jo
inc
scas
test
inc
push
imul
sbb
negb
add
cwtl
ss
adc
sub
jb
adc
sbb
xchg
mov
mulb
cmpsb
psraw
cmpb
sbb
pop
fisubl
cs
aad
cmpsl
imul
xchg
jp
jne
pop
adc
out
or
jno
adc
or
inc
mov
mov
es
push
xchg
add
sub
cmp
mov
das
jmp
hlt
imul
push
cmp
dec
mov
and
mov
push
jbe
test
inc
fldcw
loope
mov
add
das
in
or
setl
fbld
xor
fstpl
rcll
loope
jge
imul
lret
addb
cmp
roll
cmp
movsl
jecxz
pop
fs
test
pop
outsl
or
mov
push
scas
adc
adc
push
or
push
ret
pop
clc
cmp
lds
push
sub
scas
pop
rclb
ss
fisubrs
andl
mov
and
xlat
rcl
call
pop
xchg
popa
mov
jo
gs
push
jb
lock
and
push
adcl
and
lods
mov
popl
scas
js
and
fldcw
add
fisubrs
xor
mov
daa
xchg
addr16
adc
ss
adc
sarl
mov
cmc
mov
sub
jne
cwtl
pop
pop
inc
xchg
cmp
mov
unpcklps
fmulp
lahf
cmp
testb
mov
pop
jns
pop
stos
mov
in
scas
jbe
inc
push
adcb
lret
pop
sti
cmp
test
mov
shlb
xor
jae
sbbl
popa
mov
or
or
pop
aam
into
cld
and
jecxz
data16
repnz
dec
and
leave
push
cmp
mov
inc
notb
leave
hlt
shlb
fistpll
ret
mov
lods
jle
xor
push
cmp
imul
pop
in
imul
push
pop
inc
test
dec
xor
pop
divl
lcall
ror
jnp
notb
or
mov
int3
mov
push
movsl
cli
or
cmpsl
mov
mov
pusha
mov
sub
jns
cmp
call
push
mov
hlt
mov
ret
mov
adc
jle
mov
or
pop
add
aaa
sbb
iret
sub
fildl
mov
sahf
lcall
jle
sbb
mov
dec
scas
repz
mov
push
push
leave
lret
shl
mov
inc
xor
in
jmp
lahf
mov
mov
add
jbe
call
in
popa
dec
in
ljmp
xchg
cltd
int3
rcl
add
dec
movsb
xchg
imul
push
jb
out
arpl
in
mov
sub
pop
imul
icebp
iret
xchg
mov
cs
lret
repnz
mov
ret
adc
cmp
dec
push
pop
and
sbb
out
inc
or
lods
add
pop
shlb
xchg
and
lret
or
add
xlat
adc
adc
xchg
dec
mov
aam
mov
cs
xchg
and
push
pop
popa
subl
ljmp
lock
popf
subb
and
jnp
and
lods
inc
mov
adc
les
jg
flds
fs
inc
loop
movsb
jge
xor
xor
popa
xchg
scas
dec
add
mov
test
xor
fisttpll
dec
scas
pop
lods
mov
nop
sbb
adc
mov
dec
ljmp
cmc
jo
sti
cwtl
or
fnstsw
pop
sbb
xchg
in
pop
enter
test
in
mov
popf
stc
scas
lcall
jmp
adc
mov
dec
cmpsb
xor
inc
cmp
mov
jno
cli
sub
test
loop
jmpw
cmp
push
mov
add
mov
loope
std
jnp
add
in
jmp
das
mov
iret
mov
imulb
xor
or
stos
lret
mulb
push
data16
stos
lock
pop
in
jmp
leave
cmp
dec
jne
mov
into
test
rcrl
outsl
push
shrl
cld
mov
test
jge
loop
mov
insb
mov
test
jl
jns
test
lret
or
test
mov
or
jb
pushf
add
or
mov
sub
cwtl
mov
cld
inc
push
mov
mov
mov
sbb
sub
inc
or
adc
andl
rcll
repz
shl
or
adc
jns
int3
lret
jecxz
lods
fs
test
jbe
jg
js
pop
rcll
inc
leave
mov
lcall
das
imul
sbb
lods
out
pop
mov
iret
sbb
popf
xor
cltd
jl
scas
mov
cmp
adc
lahf
or
bnd
lods
or
bswap
sub
movl
pop
ficompl
adc
lock
sbb
das
fwait
push
ficoml
cmpb
dec
sbbb
inc
orb
add
jb
xor
jp
pop
sbb
adc
push
out
mov
push
lahf
fdiv
push
add
iret
incl
sti
movsb
imul
mov
flds
or
xor
inc
loope
daa
sbb
mov
pop
push
or
aas
sub
jg
jg
cmpsb
and
ljmp
jb
pop
push
into
pop
mov
pop
hlt
fldenv
cli
sub
loop
sarb
xlat
jp
xchg
jge
jecxz
out
inc
xlat
leave
sbb
push
das
sti
stos
sub
stos
mov
repnz
pop
sbb
pop
jo
mov
shrl
adc
insb
inc
fsubl
xor
xchg
insb
mov
fdivl
sub
out
out
cmp
sbb
test
nop
mov
test
adcl
cmp
rclb
push
jnp
and
scas
sub
mov
cmp
fistps
dec
xor
cmp
push
sub
addl
xchg
push
popf
adc
dec
pop
inc
loop
es
pop
ss
movsb
mov
xor
out
inc
and
dec
jbe
inc
icebp
aas
fidivl
jnp
cmpsb
icebp
push
sbb
lcall
mov
mov
sub
shlb
xchg
repz
mov
repz
aad
dec
sbb
pop
lock
mov
dec
dec
xor
shl
pop
fdivrs
mov
mov
ss
xlat
mov
test
cmp
jb
inc
outsb
add
lret
inc
ret
push
jg
mov
xor
aas
ds
jl
pop
iret
push
xor
pop
test
subb
repz
inc
shlb
sbb
pop
xor
leave
movsl
jge
fstpl
sahf
mov
int3
mov
mov
sti
insb
jns
dec
leave
xorl
xchg
adc
outsl
sub
dec
push
jmp
mov
roll
push
push
cmc
insb
sub
stos
pop
lcall
mov
popa
shl
ljmp
add
cmp
push
imul
xor
stc
cwtl
jns
jns
fdivr
imul
or
xor
push
in
shlb
inc
mov
xchg
out
lret
jae
sbb
push
pop
imul
cmp
pop
and
movsl
jbe
nop
in
inc
jnp
inc
lock
pop
and
pusha
jns
fwait
icebp
jg
mov
push
sbb
xor
out
xor
mulb
and
or
and
lahf
pop
nop
mov
pop
push
jl
push
fsubrl
adc
jle
inc
sbb
cmp
push
hlt
jo
bound
xchg
push
xlat
leave
pop
dec
dec
and
add
imul
add
aaa
and
dec
dec
mov
and
test
out
test
insb
in
mov
lds
mov
mov
cmp
pop
sahf
in
pop
pop
stos
xchg
shrd
cmp
xchg
test
repnz
loop
fnsave
xchg
addb
leave
jo
xlat
mov
stc
test
sub
push
pop
sub
and
les
and
mov
push
push
and
pop
jmp
repz
aam
popl
inc
lcall
mov
pop
sarl
icebp
ja
jmp
mov
push
mov
pushf
testl
aaa
xor
adc
call
mov
cmp
dec
pushf
das
and
ror
sbb
sub
xchg
jb
enter
adc
out
sahf
dec
adc
adc
test
sub
insl
mov
vminss
jb
bound
inc
aaa
insb
inc
push
push
and
mov
inc
and
sbb
mov
lock
or
daa
arpl
push
inc
pushf
push
les
dec
push
or
mov
sub
pcmpeqb
jbe
aas
mov
enter
lds
lods
scas
ret
and
mov
andl
lea
cmp
cmp
jge
xchg
mov
jae
cs
dec
test
fs
cs
lds
lods
mov
imul
xor
loop
cmp
rorb
aas
pop
push
adc
faddl
mov
push
dec
jo
push
aas
fcomps
adc
in
mov
cld
insb
scas
jl
movsl
test
adc
mov
jno
cmp
std
dec
push
insl
mov
aaa
xchg
cld
or
jnp
decl
add
mov
mov
sbb
dec
push
cmc
sbb
cmp
dec
and
sahf
mov
es
call
jbe
stc
xchg
aas
push
jnp
pop
insb
inc
and
inc
icebp
push
cwtl
pop
in
mov
rolb
popa
jnp
or
cs
jg
adcl
mov
insb
and
add
inc
adc
ror
add
cmp
push
mov
fs
or
mov
loop
mov
movl
inc
aaa
cli
aad
push
sub
push
jge
jg
rolb
aaa
in
cmp
jg
out
mov
xlat
nop
dec
add
adc
dec
push
in
lahf
push
sbb
push
push
out
inc
insb
or
leave
loope
pop
xchg
and
sub
rcll
popf
mov
adc
cmpsl
sub
dec
adc
bound
outsl
lock
cmpsb
xor
popf
leave
xor
sub
clc
jb
push
mov
in
out
mov
xchg
push
sub
call
aad
dec
lods
push
lcall
push
jecxz
mov
adc
out
or
jo
aad
cmp
mov
xchg
out
adc
enter
in
xor
adc
lahf
jle
mov
adc
add
ja
jnp
loope
xchg
lock
cld
add
in
mov
fs
mov
mov
xor
pop
fimull
ret
mov
mov
fld
pop
dec
inc
adc
dec
sti
fldl
addr16
jecxz
arpl
idiv
lods
inc
int
enter
push
js
mov
mov
out
or
push
nop
hlt
repnz
imulb
aas
fstl
push
rcl
das
fwait
jg
aam
addl
mov
cmp
in
arpl
mov
jb
sub
add
mov
bound
divl
dec
sbb
push
mov
add
mov
pop
rcr
addr16
jg
sbbl
xchg
cli
xor
inc
data16
popf
xchg
lods
xlat
fisubrl
scas
sbb
roll
sub
push
sbb
andb
push
pop
cmpsl
ljmp
lds
xor
push
and
pusha
enter
es
sub
adc
xchg
aaa
popa
outsl
arpl
or
mov
movsb
sub
icebp
jb
int3
insl
pop
popf
daa
jmp
and
lea
int3
sbb
lods
sub
les
cwtl
pop
lea
xor
outsl
push
stos
mov
xor
in
jb
push
and
in
cmp
cmp
fsubrp
ds
sub
pop
imul
idivl
popa
mov
sub
lds
popf
or
dec
ss
xor
popa
inc
adc
mov
and
mov
pop
daa
aam
xor
dec
sub
push
cltd
dec
jecxz
mov
sub
aam
jb
call
cmp
pop
add
adc
dec
cmp
jo
fistl
lods
push
lds
incb
xchg
andb
jg
cmc
push
jmp
mov
es
fs
fcomp
daa
ljmp
xchg
mov
xor
push
leave
mov
sub
add
mov
ret
xchg
fs
lea
je
xorl
lcallw
rcll
gs
fimuls
cwtl
inc
shr
stc
and
enter
aam
fldcw
cmc
lods
fistpl
aam
lcall
std
imul
mov
add
mov
fnsave
add
push
scas
insl
mov
or
mov
dec
and
sub
cmp
lret
inc
jp
scas
xor
mov
insb
setb
leave
out
sub
inc
jp
ds
cli
mov
stos
mov
sbb
jle
in
pop
pop
mov
jp
mov
xchg
push
mov
outsb
jns
cmp
gs
xor
push
add
fcomi
inc
andl
sub
loope
imul
mov
inc
mov
rorl
test
aam
adc
mov
sub
repnz
lret
ret
icebp
lea
xchg
fsubs
xchg
xlat
lea
lcall
inc
cli
ja
icebp
cmp
movsl
mov
loope
pop
rcrl
jecxz
mov
stc
jns
std
outsb
mov
cmpsl
out
aam
xor
imul
mov
mov
sub
popf
mov
inc
push
mov
add
mov
jg
gs
in
xchg
add
push
clc
test
lods
scas
scas
sub
sbb
notl
test
popf
dec
fnsave
je
std
idivb
mov
clc
xor
add
addr16
and
pop
sbb
aad
sub
sub
sarb
ret
clc
mov
test
not
orb
mov
sbb
jno
add
mov
lods
or
iret
pop
push
cmpsb
je
in
sahf
nop
jo
loop
cmpsb
je,pt
cmp
aas
inc
adc
test
popa
adc
sub
lahf
sahf
fs
leave
and
dec
xor
lods
sbb
push
dec
xor
std
mov
aas
mov
es
clc
and
test
xor
fs
sub
push
inc
xchg
aad
push
shlb
xor
adc
sub
xchg
adc
dec
loop
popa
cmp
push
loop
xlat
or
push
add
imul
loop
lret
sahf
pop
aam
xchg
mov
add
jl
push
stc
mov
dec
mov
push
adc
inc
addr16
cmpsl
test
subb
push
jns
sahf
pop
cmpsb
and
sub
pop
roll
and
mov
xchg
or
dec
inc
incl
sub
pop
test
icebp
lahf
lods
dec
adc
mov
pop
or
insb
iret
sub
xchg
mov
push
pop
cli
cli
sub
pop
lret
inc
dec
jg
xchg
dec
mov
loope
sbb
icebp
push
add
inc
stc
inc
adc
push
adc
mov
repnz
mov
movmskps
nop
pop
cmp
hlt
dec
jge
push
outsb
add
or
push
outsb
pop
out
pop
add
inc
push
or
jg
mov
jbe
cmpsl
mov
mov
push
or
or
mov
mov
addr16
jbe
xchg
pushl
fnsave
dec
lret
pop
push
or
ror
pop
pop
test
add
sahf
dec
cmpsb
icebp
lods
and
xchg
fiaddl
push
stos
iret
sarb
push
cmp
xlat
call
xor
scas
pop
or
pusha
or
daa
in
call
pop
add
cmp
sub
xlat
pop
dec
aam
jbe
les
test
xchg
adc
push
and
add
stc
daa
aam
cmpsl
sub
sbb
and
sti
add
out
cmp
movsb
mov
inc
mov
imul
push
and
subb
dec
push
fldcw
sbb
pop
cs
push
sub
inc
aad
ret
jne
push
lcall
fwait
mov
add
mov
dec
and
inc
cs
or
xchg
rorl
pop
movsl
add
mov
inc
mov
pop
mov
clc
sahf
rep
lods
insb
ret
test
mov
enter
popa
ret
fdivs
in
into
mov
inc
inc
xchg
out
push
loop
daa
push
pop
mov
mov
jg
xorl
jns
sahf
out
mov
loop
jo
xlat
fwait
insl
mov
lahf
mov
xor
push
inc
mov
and
enter
and
ljmp
imul
add
das
orl
or
push
xchg
mov
out
mov
inc
or
add
fcmovnu
pushf
hlt
lahf
and
mov
clc
sbb
xchg
insl
test
jne
aam
mov
xor
mov
sub
ja
fs
in
add
addr16
popa
in
popa
jbe
pop
pop
jmp
sbb
mov
lret
ret
push
dec
adc
xor
jbe
lods
cvtdq2ps
shl
loopne
sub
sub
inc
push
xlat
mov
ret
sub
rcrb
sti
lea
jle
fdivrs
clc
cmp
das
inc
sbb
mov
ror
add
pop
in
xchg
push
mov
imul
mov
test
call
lea
das
ljmp
arpl
cmp
cmp
lods
mov
mov
in
mov
negl
mov
mov
mov
fsubrp
mov
and
cmc
cld
xchg
add
sbb
dec
std
xchg
sbb
fldt
pop
sbb
xchg
dec
xchg
int
pop
sub
pushf
les
mov
and
sub
or
test
mov
xor
mov
pop
push
jecxz
out
jle
dec
shlb
fistpl
adc
mov
cmc
add
and
imul
hlt
xchg
push
stos
fbld
jmp
clc
xorb
jg
or
sti
and
mov
and
popf
cli
add
pop
outsb
ja
mov
mov
jge
dec
mov
ja
jbe
sbb
pop
sbb
popa
fwait
or
insl
jns
pop
push
loop
in
leave
outsb
loop
add
add
jp
or
xchg
loope
cmpsl
mov
je
xchg
sub
jge
cltd
add
popf
jl
orl
mov
sahf
shl
inc
sub
xchg
out
aas
xchg
sub
jbe
fsubp
imul
inc
ret
push
xchg
retw
mov
call
jle
mov
popa
dec
in
cmp
lea
and
aas
cmc
call
mov
cmp
inc
push
and
cmp
jne
rorb
icebp
sub
fcomi
mov
jecxz
xor
cld
mov
iret
or
out
sbb
nop
shrl
dec
jp
dec
fldenv
mov
pop
int
dec
sbb
repz
and
sti
inc
pop
movsl
cwtl
fdivrs
das
aad
or
mov
sub
pop
or
cmp
stos
je
add
push
pusha
into
sbb
je
fnstsw
shrl
xor
outsl
add
icebp
loopne
sarl
mov
js
adc
adc
je
mov
inc
mov
das
add
movsb
fs
cmp
stos
jbe
fs
into
jl
ret
jae
scas
loopne
ja
cmpsl
test
cmpsb
mov
lcall
jle
cld
aas
lock
mov
cltd
adc
mov
ret
aaa
adc
loope
pop
push
lahf
hlt
fnstenv
repz
cmp
pop
xor
xlat
fcompl
dec
cmpsl
lds
inc
pop
scas
dec
lahf
std
insl
dec
push
std
outsl
movsl
sbb
mov
ja
loop
in
shlb
xchg
mov
inc
mov
test
fs
repz
cmp
fiadds
mov
inc
sbb
mov
lds
and
jbe
cltd
or
imul
jl
outsl
sub
jl
pop
aas
shrl
js
inc
dec
test
ss
dec
add
insl
sbb
mov
mov
pop
lea
sub
lods
std
fcoml
xchg
adc
sbb
xchg
mov
call
sub
sub
pop
jge
inc
sub
add
test
movsl
adc
lahf
and
xchg
mov
nop
jp
inc
iret
xor
out
mov
add
xor
jae
fcmove
sbbl
inc
ds
dec
lods
adc
sbb
les
cmp
gs
dec
insb
sahf
leave
mov
es
data16
push
mov
jecxz
movsb
sbb
add
lds
ljmp
adc
mov
mov
insb
sub
out
xor
icebp
dec
pop
add
scas
addb
loope
fs
mov
mov
cwtl
out
subl
xor
inc
enter
sarl
jp
in
adc
mov
or
sub
pop
lea
pop
insl
xchg
dec
loopne
and
dec
aas
lret
pusha
imul
add
cltd
sub
out
and
cmp
mov
cli
das
es
dec
dec
repz
lods
xchg
push
push
ss
lahf
sub
cmp
mov
das
sub
jle
add
je
cmp
push
mov
sete
xchg
mov
ljmp
pop
cmp
cs
cld
pop
add
dec
ja
gs
inc
aaa
add
or
jecxz
testb
imul
adc
adc
xor
mov
rorl
rorb
cltd
xchg
roll
mov
in
int3
xor
negb
inc
mov
scas
jp
cwtl
dec
xor
xchg
test
sarb
xor
clc
xchg
imul
enter
adc
pushf
ja
in
push
sub
cli
xor
dec
loop
cs
dec
pop
cltd
out
mull
fs
and
sti
movsb
clc
pop
xchg
loope
mov
test
mov
and
in
dec
jae
and
xlat
jmp
jl
jecxz
sub
pusha
lea
scas
ljmp
push
jbe
nop
mov
test
mov
add
xchg
mov
mov
testl
out
sub
jnp
sbb
inc
adc
jb
cs
cmp
les
imul
pop
or
xlat
movsl
pop
js
mov
cmpsl
enter
mov
and
sub
and
push
mov
cmp
sub
pop
fdivrs
shl
mov
sbb
leave
popa
or
sti
loopne
aad
aaa
dec
adc
sbb
jecxz
cmp
pop
and
pmuludq
lods
loop
mov
adc
push
arpl
jmp
xchg
push
add
push
icebp
cmp
jns
sub
add
mov
add
dec
push
std
pop
xor
loope
jmp
xchg
test
mov
in
add
pop
inc
dec
rcll
mov
int3
movsl
sbb
inc
mov
sahf
rorb
neg
add
insl
inc
xor
dec
xor
sbb
shlb
jl
jge
addl
adc
push
and
jb
insb
xchg
pop
pop
cmc
jb
mov
cmp
xchg
fsincos
push
mov
and
pusha
jmp
roll
cmp
dec
shl
add
dec
notl
jg
pusha
inc
in
dec
sub
ss
xor
fsts
jno
dec
aad
aad
jmp
scas
and
ds
mov
push
xchg
jl
mov
pop
push
dec
int3
add
ljmp
sbb
xchg
dec
stos
xchg
push
mov
dec
cmpsl
test
cmpsb
pop
sub
cs
push
ret
stc
adc
pop
ss
sub
mov
shll
out
cld
add
je
xor
pop
pop
rcll
pop
iret
test
or
or
hlt
mov
bnd
adc
lcall
dec
adc
nop
pop
cmpl
jl
lods
adc
cmp
shr
addl
aam
insl
icebp
mov
outsl
pop
movsl
repz
insb
dec
xchg
jo
cmpsl
xor
lret
outsl
mov
pop
sti
sbb
push
in
dec
mov
jnp
inc
dec
jns
cmp
jns,pt
xchg
dec
in
das
pop
jns
push
std
lea
pop
pop
loopne
movsb
mov
int
push
mov
and
jno
sub
stc
clc
test
jmp
jl
cmp
and
aad
push
stos
stos
xchg
push
ss
pop
mov
cmpsl
outsl
mov
sub
js
jp
icebp
out
sbb
aam
das
lea
cmp
scas
enter
pop
roll
or
add
push
pop
mov
add
popa
int3
lods
mov
mov
es
fidivs
lahf
stos
xchg
stos
lcall
lea
scas
test
popf
test
mov
sbb
out
xchg
adc
jl
jecxz
ljmp
adc
fwait
xchg
fnstcw
out
fwait
mov
adc
jp
adc
dec
out
jbe
and
ljmp
add
push
imul
jecxz
mov
push
testb
nop
or
adc
xor
ljmpw
cmc
adc
fbstp
pop
fmull
aam
lret
push
outsl
hlt
mov
dec
xchg
pushf
xor
sbb
pop
in
fistps
inc
test
cmp
adc
inc
sub
push
mov
xchg
mov
popf
push
push
inc
xlat
mov
cmp
mov
div
jp
dec
call
sbb
lods
inc
flds
enter
shrb
loop
cmc
push
fmuls
fwait
sti
push
or
jge
repnz
dec
adc
leave
cmp
fmulp
mov
jo
aas
nop
dec
imul
jecxz
loopne
mov
cmp
xor
cmp
cmp
cmp
or
mov
mov
rcr
bound
mov
adc
jp
pop
cmp
rclb
pop
jns
push
loopne
sti
pop
js
stos
pop
in
pop
pop
movsl
adc
lds
xchg
js
mov
ds
nop
dec
scas
mov
dec
jge
icebp
fildl
xor
mov
jge
pop
scas
mov
add
or
cmp
add
jns
stc
sbb
mov
jle
loope
sbb
xchg
adc
cmpsb
enter
jg
add
stos
cmp
frstor
les
iret
or
pop
scas
fcomps
xchg
outsl
test
mov
stos
add
icebp
push
mov
jno
push
js
pop
inc
cmpb
mov
xchg
xchg
fsub
test
aas
add
mov
sub
test
out
jge
xchg
jp
decb
push
loopne
mov
add
ret
mov
inc
sub
inc
mov
push
dec
jl
fsubrl
push
fsts
dec
es
stos
pop
pusha
je
aaa
push
sarl
jle
adc
jg
enter
inc
cmp
sub
ljmp
or
cmpsl
into
scas
xor
scas
dec
inc
leave
inc
adc
ds
fs
es
jp
iret
stos
xor
pushf
clc
popf
outsl
sbb
pop
mov
push
lea
rclb
rcrb
in
and
stos
gs
mov
js
push
les
add
out
popf
or
subb
xor
scas
sbb
mov
push
or
rclb
leave
int
inc
add
lret
mov
scas
fildl
jecxz
aas
int
fwait
fwait
jmp
imul
pop
into
imul
subl
cltd
mov
mov
icebp
or
in
lahf
lock
aam
enter
add
xor
loop
push
jne
cs
fcomps
mov
sbb
sub
sar
fisubs
cmp
sahf
xchg
inc
dec
inc
inc
push
xlat
popf
mov
push
shll
mov
jge
xorb
dec
mov
addr16
sarl
dec
rclb
pop
add
ret
outsl
push
std
mov
mov
shll
sbb
push
or
inc
push
dec
fidivrl
add
andb
jno
xchg
insl
jbe
test
fnstsw
xlat
shlb
test
es
dec
xchg
mov
scas
jmp
pop
sbb
push
mov
xchg
push
ss
sub
or
into
lcall
fldenv
lahf
fsubs
mov
adc
and
mov
cmp
push
inc
shlb
fstpt
jo
ret
lds
push
in
adc
mov
adc
jp
adc
fistl
cs
push
bound
enter
dec
xchg
out
loopne
mov
ja
mov
xchg
fsubr
int
sub
dec
shl
and
int
and
loop
lods
adc
clc
adc
ss
fs
dec
or
sbb
jno
jmp
ss
fwait
cwtl
fsubr
aaa
dec
cltd
and
sbb
sub
dec
lcall
enter
clc
mov
clc
xor
decl
mov
shrb
and
pop
mov
sahf
int
test
sbb
mov
aad
inc
jo
mov
push
mov
negl
iret
xor
fwait
rcll
or
js
nop
pop
sahf
mov
xchg
int
xchg
mov
and
adc
pushf
out
cmp
lret
jns
cmp
or
mov
add
lret
leave
test
cli
in
ds
mov
jne
jmp
push
push
pop
popf
flds
inc
imul
pusha
jb
test
mov
jo
dec
loope
fists
pusha
sbb
cwtl
sub
push
sbb
pop
inc
adc
mov
dec
rcrl
test
insb
outsb
outsl
jge
adc
lret
stos
adc
xchg
lcall
mov
imul
adc
out
and
in
out
aaa
adc
outsb
jmp
aam
jns
pushf
out
xor
xlat
xor
adc
les
sub
aam
jle
in
jae
insl
push
add
stc
add
loopne
in
cli
loop
rcrb
jnp
aam
mov
sbb
test
stos
jecxz
xchg
sahf
call
hlt
adc
xlat
push
sub
aad
add
inc
and
stc
les
test
adc
repz
xor
in
addl
cs
mov
xor
fs
adc
dec
inc
cwtl
xchg
pop
hlt
push
lahf
cmpsl
mov
jbe
ja
sahf
mov
in
into
pop
scas
mov
cs
pop
mov
or
ds
push
jge
ss
iret
shr
in
pop
pop
or
jge
jmp
dec
imul
and
cmpsb
loope
jne
sub
ds
sbb
incl
xor
ficoml
fsubrp
and
add
push
cld
orb
jp
gs
sti
sub
popf
fsubrl
ds
and
fldt
xchg
test
pop
push
shl
insb
movsb
xor
in
dec
int3
inc
test
xor
mov
pop
aad
ret
mov
enter
mov
push
pop
mov
push
aam
cltd
push
lcall
cmp
xchg
xor
mov
mov
sti
sub
in
mov
push
cmp
lret
mov
fucomp
jns
pop
add
jle
les
call
cltd
int
dec
fadds
mov
inc
enter
dec
cmovg
jecxz
or
clc
mov
inc
jo
add
jg
mov
or
sbb
into
push
jecxz
mov
sub
pop
int3
outsl
hlt
mov
cwtl
jae
aad
or
inc
test
loopne
hlt
cmpsl
or
xchg
jb
mov
data16
xchg
shlb
mov
test
dec
fisubrs
xchg
xchg
pop
movsb
inc
rcr
mov
and
xchg
test
adc
out
stos
nop
fwait
mov
cmp
fs
inc
adc
sbb
mov
sbb
jg
pop
mov
dec
sahf
into
popf
jle
js
movsl
mov
call
sub
push
popa
in
sub
stc
fisttpl
dec
add
jo
out
sbb
andl
scas
ret
js
jns
cmpsb
fwait
out
mov
out
fxch
and
sbb
rorb
enter
insl
fcomps
out
and
cld
cmp
xchg
and
add
add
jne
jmp
jmp
sub
sub
repz
mov
cmp
ljmp
sub
push
test
xchg
out
adc
sub
or
faddp
mov
popf
iret
inc
sbb
push
or
push
stos
out
xorl
inc
loop
scas
movsl
jmp
lcall
iret
lret
ss
lds
sbb
pop
add
mov
xchg
mov
xor
into
ljmp
lds
lretw
sbb
inc
ja
xor
orb
or
mov
and
roll
jo
xor
pop
lahf
pop
mov
jbe
ret
pop
or
lock
sbb
pop
sub
cmp
pop
mov
mov
mov
in
mov
mov
imul
sbb
mov
shlb
sub
jg
push
push
addr16
sub
aaa
ja
xchg
cli
push
inc
xor
inc
pop
iret
clc
sub
fwait
cmp
insb
push
cmp
jno
lea
lea
sbb
sub
movsb
idivl
xor
xchg
jns
leave
repnz
mov
add
ret
add
fdivs
and
stos
adc
jae
and
icebp
stos
test
divb
dec
or
jnp
lret
xchg
xchg
or
jbe
popa
loop
pop
adc
aad
sti
mov
or
jo
dec
lcall
out
mov
dec
xor
jne
bound
mov
or
mov
sahf
add
pop
arpl
pop
xchg
inc
ficomps
fildl
xor
jnp
lods
insl
xchg
inc
jle
daa
push
cmp
in
mov
mov
int
dec
insb
es
movsb
call
mov
mov
mov
cli
mov
lods
xor
inc
sbb
cwtl
test
mov
xchg
sbb
push
fnstcw
clc
jp
jns
sbb
mov
dec
adc
scas
mov
sbb
mov
hlt
and
icebp
mov
sub
jae
push
daa
cmc
loop
jl
cmp
gs
movb
xor
cmpsb
in
repnz
xchg
xor
imul
sarb
push
ret
add
xlat
sbb
daa
xchg
inc
cli
push
stos
ror
inc
xor
push
jg
mov
mov
leave
cli
inc
push
fsubrs
lods
push
pop
cld
mov
inc
andnps
cmpsl
xor
mov
xchg
pop
dec
into
push
movsl
pop
mov
lock
push
and
out
movsl
pop
shll
dec
insl
push
cmp
in
dec
add
mov
pop
movsl
mov
in
push
jo
cmpsl
add
mov
push
daa
lcall
lock
insl
sub
sub
push
int3
push
bswap
into
and
mov
pop
test
imul
out
or
mov
jno
mov
das
mov
arpl
mov
sbb
add
test
call
sbb
adc
cmpsl
rol
push
dec
or
aad
cltd
xchg
loope
xor
jae
mov
int
add
push
sub
ret
or
and
test
stos
std
mov
fdivrs
push
sbb
sub
xchg
jmp
ljmp
insb
add
std
sub
adc
test
scas
and
popf
das
cmp
xchg
fwait
push
mov
aaa
xor
or
push
xor
mov
in
jns
pop
rolb
mov
fidivrl
mov
loopw
sahf
jb
cmc
xlat
jae
cmpsb
je
pop
mov
sbb
clc
mov
sub
loope
inc
jne
sbb
mov
xchg
iret
cmp
xchg
adc
pop
hlt
dec
push
pop
movsb
fs
cltd
repnz
loop
fucom
push
jns
dec
mov
aas
stos
mov
push
push
data16
fs
or
sub
xorb
ret
mov
add
sub
das
insl
enter
add
lcall
clc
clc
adc
push
xor
mov
int
dec
xchg
pushf
mov
and
cld
xchg
mov
enter
mov
sbbl
mov
test
inc
imul
pushf
adc
stos
adc
jne
test
ds
push
cli
xchg
mov
les
cld
or
sub
bnd
dec
adc
dec
fwait
int
add
clc
sarb
push
das
cmp
and
sbb
inc
cmpsb
add
cmp
sub
pop
lret
push
lcall
mov
xchg
jle
arpl
push
lcall
inc
dec
ds
cmp
sub
jmp
adc
or
std
fmul
jmp
stos
aad
lcall
jbe
xchg
and
shll
shl
cli
bound
inc
das
or
sub
fldl
mov
mov
xchg
andl
cmc
test
lds
pop
or
sub
and
push
movsb
dec
cmp
lods
adc
mov
or
aas
aas
mov
cmpsl
sub
ja
mov
lea
add
test
jb
pop
inc
dec
popf
xor
in
arpl
incb
repnz
adc
das
mov
sar
dec
popa
scas
or
xchg
int
xchg
add
cmpsl
fiaddl
out
lock
mov
or
lock
add
in
jmp
add
movsb
loopne
cmp
add
mov
inc
inc
adc
pop
popa
invd
in
scas
pop
ss
out
inc
inc
pushf
loop
ljmp
fstps
test
mov
ror
mov
jecxz
inc
mov
push
add
pop
out
mov
dec
xor
adcb
push
xchg
cli
rclb
and
cwtl
inc
mov
xor
orl
pusha
les
enter
push
mov
outsb
sub
jmp
out
mov
push
fidivrl
mov
dec
push
push
je
cmpsl
cli
sub
inc
enter
sub
imul
or
pop
jge
fildl
sbb
lret
clc
pushf
jp
into
pop
shrl
add
mov
cmovl
mov
jge
adc
and
fisubrs
flds
bound
lret
pop
inc
in
nop
sub
inc
mov
js
lret
scas
or
jge
es
addr16
sub
sbbb
dec
shll
cmpsl
inc
and
sbb
or
mov
push
push
mov
pop
push
mov
mov
jmp
and
mov
xor
adc
push
loopne
push
pop
cli
xchg
dec
adc
and
xchg
icebp
cli
jno
ret
adc
lret
into
data16
mov
push
movswl
sbb
sub
stos
pusha
icebp
out
dec
insl
sbb
mov
add
jl
cmc
add
imull
xor
orb
mov
sbb
mov
pushf
cltd
ret
mov
shll
int
add
pop
xchg
lahf
fimuls
sub
cmp
das
or
nop
jmp
cltd
adc
add
xchg
je
and
scas
cmp
jne
dec
sbb
sbb
mov
pop
gs
jb
lods
ficompl
add
imul
mov
orl
sub
add
sub
enter
cwtl
mov
xchg
mov
push
and
cltd
lcall
and
fsubs
ficoms
popw
in
jmp
aam
and
inc
test
lret
pop
sbb
loope
out
or
int3
mov
jns
or
mov
scas
loopne
ss
xor
popl
into
jnp
mov
jg
loop
xacquire
cmpsb
les
push
mov
gs
imul
loop
clc
cmp
cmp
push
jns
or
xor
push
pop
and
data16
adc
jno
outsl
in
inc
movsb
enter
or
cmp
fmul
fwait
push
xchg
push
orl
mov
add
sahf
pop
call
leave
pushf
test
movsl
mov
dec
xchg
packsswb
xchg
outsb
bound
mov
push
stos
push
nop
pop
jno
out
pop
scas
mov
mov
in
push
jmp
xchg
mull
xor
pop
rol
clc
les
fldenv
into
add
sub
call
lods
scas
jp
gs
subl
and
into
pop
xchg
ljmp
imul
dec
lcall
sub
loope
sub
xor
xor
xor
out
jno
imul
mov
call
cwtl
lret
cld
xlat
or
les
rorl
and
stos
push
dec
mov
dec
mov
cmp
jl
adc
rcll
outsb
cmp
sahf
mov
adc
cltd
or
nop
push
aas
cltd
lds
sub
test
mov
jg
loop
rorl
ds
add
mov
out
lds
stos
aad
fcomi
aam
add
iret
test
imul
pop
popf
push
mov
movsb
jle
jmp
enter
add
sub
std
mov
add
mov
lods
mov
mov
movsl
or
mov
fwait
xorl
outsb
arpl
insl
dec
xor
jp
aam
sahf
xchg
addb
rclb
inc
xlat
xor
cmp
inc
rol
shlb
mov
mov
dec
int
jp
cltd
xor
xor
lea
inc
test
add
cmpl
fstpl
fidivrl
inc
push
inc
pop
movsb
fxch
rorl
lea
cmp
push
imul
lock
insb
inc
ljmp
push
lret
mov
pop
aaa
push
imul
pop
mov
repnz
cld
push
mov
add
cmpb
xor
mov
in
jb
dec
and
or
inc
daa
outsb
xchg
push
sbb
xchg
nop
daa
lret
inc
and
ss
mov
call
out
cmp
cmp
xor
sub
mov
mov
cmc
xor
sahf
inc
jp
outsb
fldenv
sti
xor
sarb
out
pushf
and
clc
iret
push
dec
mov
pop
inc
mov
test
push
cwtl
mov
jno
vmovdqu
mov
popa
int3
sar
outsl
add
add
push
test
in
mov
fucomi
inc
les
subb
lods
sbb
lods
aaa
lods
push
xor
push
rep
jnp
push
push
cmp
sti
xchg
and
test
jecxz
or
sub
subb
sub
mov
fsts
push
in
ss
xor
mov
xchg
sub
sbb
add
mov
inc
xchg
outsl
and
loop
adc
das
xchg
adc
cltd
insb
xor
jmp
orl
add
jbe
sub
jb
mov
jbe
push
push
jb
stos
pop
and
sbb
xchg
mov
pop
icebp
aaa
push
fldl
or
fnsave
xor
loop
adc
mov
stos
push
outsb
mov
dec
stos
sbb
mov
or
lahf
out
testb
and
pushf
xlat
in
add
and
sbb
imul
mov
or
mov
int
dec
cmp
dec
lds
mov
push
push
outsl
mov
lret
cmc
and
es
add
sbb
jecxz
inc
fildl
adc
xchg
enter
xchg
jge
cmpsl
mov
mov
loop
add
add
inc
movsb
mov
shl
pop
xor
cltd
fwait
mov
addl
sbb
into
ljmp
ret
cmp
lahf
jnp
dec
inc
pop
nop
lret
xor
add
andl
xchg
cmp
push
mov
add
je
ss
mov
xor
inc
fdivrl
pop
mov
mov
lret
dec
clc
inc
in
mov
arpl
jg
orb
mov
scas
loop
adc
add
mov
outsl
addb
out
std
adc
add
and
ffreep
cmpsl
push
nop
dec
xchg
in
dec
test
dec
fisubs
cli
ror
jbe
fucomip
dec
and
or
lods
cs
fnstcw
adc
xchg
arpl
dec
push
lcall
movsb
mov
or
add
xor
mov
cmpsb
and
xchg
loopne
jnp
test
cwtl
cwtl
or
addr16
mov
fimuls
push
and
lods
adc
frstor
and
sbb
inc
sub
and
adc
std
aam
rcrb
inc
jno
inc
ss
jb
xchg
je
sub
notl
push
sbb
popa
data16
mov
sbb
int3
cld
loope
sub
mov
ljmp
es
push
inc
cmp
add
pmaxsw
fcomps
xchg
mov
int
mov
xor
push
push
orb
dec
xchg
dec
cltd
arpl
jns
inc
mov
fwait
loopne
adc
shr
xor
sub
popf
mov
cmp
frstor
or
mov
push
inc
xchg
sti
dec
fidivrs
insb
xchg
std
movsb
or
push
mov
sub
pushf
fstpl
add
inc
push
pushf
ja
mov
call
xchg
imul
subl
cmc
mov
sar
jb
lahf
xlat
divb
ror
mov
xor
into
mov
mov
jg
and
ficomps
outsb
xor
mov
cmp
loopne
orb
dec
arpl
lods
jmp
pop
xchg
test
or
mov
sarl
jno
adc
mov
cmp
sub
adc
push
xor
stos
xor
jecxz
jge
mov
xor
ja
arpl
push
icebp
xor
addr16
hlt
or
sbb
sbb
cmp
jl
gs
in
inc
mov
in
hlt
and
xor
je
add
sahf
scas
add
loop
jg
dec
sub
push
rorb
movsb
in
fimuls
in
mov
and
jg
and
shrl
test
ljmp
xchg
or
fsubrl
lea
push
sarl
arpl
pop
cmp
or
push
mov
pop
pop
xor
adc
ret
pop
pop
sbb
adc
pop
loop
xor
pop
cld
push
lret
addl
int3
xchg
sub
pop
cli
out
xlat
adc
xchg
cmc
sbb
test
cli
aaa
iret
popa
sbb
xor
pop
mov
cli
dec
orl
inc
jb
adc
insb
sti
pxor
aaa
jge
cmpsb
mov
xlat
jle
loop
sbbl
jno
imul
or
jge
mov
jns
fcmovnbe
cld
hlt
sarb
outsl
es
cmp
xchg
pop
pop
sahf
lods
pop
xor
add
cmp
and
mov
subl
es
fwait
sarb
jb
mov
jnp
sbb
fadds
nop
pop
and
pop
mov
inc
ss
mov
mov
js
mov
cs
insb
sbbl
nop
outsl
int3
cmp
roll
add
sub
stos
xor
out
pop
pop
push
or
mov
test
mov
mov
push
sub
andl
rcrl
mov
mov
lea
xchg
jnp
int3
ret
outsl
mov
lahf
sahf
sub
mov
adc
orb
mov
dec
outsl
mov
or
sbb
jge
push
adc
addr16
xchg
push
aam
sub
dec
mov
sbb
add
imul
imul
movsb
inc
aad
les
cmp
out
mov
cmpsl
in
jmp
dec
inc
jno
stc
incl
pop
pop
pop
xchg
sbbb
lret
repnz
out
xchg
xchg
lahf
inc
add
pop
pop
jge
pop
clc
sbb
push
out
sbb
mov
xchg
loope
pop
xor
divl
inc
out
mov
int
mov
in
sbb
sbb
ret
push
push
or
out
je
xor
mov
rcr
ficoml
mov
adc
int3
push
nop
mov
xlat
cmp
aam
loopne
dec
int
sub
imul
and
icebp
aam
jmp
das
xchg
cmpsb
daa
add
icebp
or
xchg
aad
pop
lret
pop
dec
test
lock
in
mov
ss
lret
mov
loopne
fldenv
mov
pop
inc
adc
jecxz
cld
pop
into
xor
or
jle
adc
jge
xchg
sub
cmp
dec
out
xchg
pusha
dec
dec
fisubrs
fwait
pusha
cmpsl
pop
and
inc
adc
mov
lret
xchg
adc
into
aam
xlat
mov
jb
test
sbb
inc
imul
mov
jl
push
data16
xor
jecxz
jne
cs
lcall
and
fcomps
mov
shrl
mov
out
mov
add
xor
pop
adc
std
adc
repz
ficoml
lock
jle
repz
cmc
xor
xchg
lret
jo
inc
mov
leave
mov
add
in
pop
push
in
mov
xchg
mov
add
push
jae
xchg
jg
push
leave
add
mov
mov
jl
outsl
int3
push
in
and
mov
mov
cmp
orl
sub
push
insl
aam
dec
divb
frstor
pop
icebp
pop
addr16
ljmp
sbb
pushl
js
mov
popa
mov
popa
mov
push
mov
call
imul
jbe
mov
dec
or
add
push
cmc
sahf
fdivrs
gs
sbb
xchg
cld
lahf
inc
pop
fs
jns
lock
jle
sbb
lods
mov
les
mov
inc
mov
mov
add
add
xor
mov
out
int3
je
pop
and
jae
jae
movsl
stos
jns
add
jnp
hlt
cmp
loop
lret
push
xchg
xchg
jae
mov
adc
je
mov
or
dec
mov
ss
pop
jns
out
push
insl
and
cmp
movsl
inc
push
push
or
ds
inc
testb
jle
sub
sbb
xor
bound
movsl
xchg
push
out
sbbl
xorb
stos
aad
jmp
ret
cltd
add
xor
jecxz
jnp
inc
mov
sub
jae
fsubrs
adc
cmpl
loop
push
jge
jno
cmpb
into
push
mov
fcmovnu
stos
fistpl
xchg
aas
inc
sahf
imul
movsl
jmp
add
in
dec
lods
sbb
xchg
lods
adc
xchg
cmpsl
popa
mov
fs
ret
dec
mov
add
cmp
aaa
mov
add
mov
aaa
fcoms
mov
push
outsb
cwtl
andl
xchg
xlat
dec
push
dec
lcall
xchg
adc
insb
push
sahf
pop
les
jns
pop
mov
mov
insl
dec
mov
insb
es
cmp
xchg
mov
enter
xorb
mov
cltd
dec
mov
xor
pushf
push
xor
adc
lock
orb
shlb
jg
lods
addr16
xor
push
aas
pop
or
loopne
shlb
mov
es
loopne
ss
pop
sbb
xchg
scas
add
insb
inc
arpl
clc
add
rolb
xor
adc
jns
sub
push
das
inc
pop
push
xchg
pop
push
sub
pop
pop
inc
and
in
adc
iret
xor
push
sbb
das
dec
add
lock
mov
pop
sbb
subb
repnz
jns
cs
loop
in
lret
xchg
add
sub
or
jle
dec
inc
fldt
pop
push
xchg
inc
inc
xchg
cmc
mov
ja
lea
pop
outsl
fsubl
aaa
fists
or
ljmp
lahf
movsb
xlat
mulb
fists
cltd
pop
jb
xor
xor
jbe
or
into
outsb
es
dec
repnz
cmc
insb
push
icebp
fsts
rorb
dec
out
in
movsl
icebp
fstpl
fbld
push
and
mov
jne
push
sub
subb
lcall
ljmp
stos
lcall
fldl
mov
xor
xor
sub
movsb
xor
fdiv
pop
dec
hlt
inc
in
in
mov
mov
test
out
dec
arpl
je
jne
out
mov
cmp
xor
push
jp
mov
jecxz
pop
fxtract
bound
add
cmp
pop
aaa
jecxz
jnp
inc
or
cmp
int
stos
push
mov
and
les
sub
xchg
adc
mov
sbb
cwtl
push
sub
mov
insl
inc
mov
xor
mov
cmpsb
in
mulb
out
sbb
sub
stc
mov
xor
loop
xlat
leave
hlt
icebp
imull
mov
mov
nop
movsl
cld
addb
mov
jl
cmp
jg
sub
inc
adc
mov
idiv
sub
outsb
clc
and
jnp
mov
lret
mov
cmpl
in
cmp
je
mov
leave
mov
pop
nopl
jge
fistps
int
fadds
imulb
inc
push
xor
dec
shlb
es
mov
sbb
dec
push
sbb
cltd
rcll
adc
lret
cmp
addr16
push
test
adc
daa
movsb
mov
cld
outsl
fs
dec
mov
test
lcall
pushf
mov
cmp
cmc
dec
repz
pop
jle
push
daa
imul
adcl
mov
jmp
inc
shll
lods
aam
inc
push
pop
adc
shlb
xchg
add
pop
iret
mov
mov
xchg
and
or
incb
sbb
lret
add
ja
mov
bound
int3
and
jg,pt
sbbb
add
stos
arpl
rorl
out
out
iret
pop
xchg
xorb
adc
les
hlt
mov
add
insb
rcr
les
jb
inc
push
mov
adc
add
sbbb
xchg
lcall
pusha
mov
mov
push
cmp
js
xchg
popf
repnz
nop
add
popf
cld
cmpb
mov
jle
subl
sbb
or
cmpsb
inc
dec
push
loop
in
xor
loop
fimull
arpl
jbe
jnp
mov
incl
lahf
adc
push
gs
push
lds
or
aas
mov
addr16
mov
into
sbb
pop
xchg
add
xor
aad
or
and
daa
cld
cmp
mov
dec
xlat
dec
sub
sub
loopne
xchg
jo
ficomps
inc
and
lcall
pusha
mov
outsl
or
xor
jle
xor
fnsave
sbb
shr
sub
es
push
das
in
inc
xor
pop
insb
scas
push
mov
test
or
mov
jb
cmp
int
xor
aaa
or
shrl
lds
cmpsl
or
aaa
lret
push
shrl
adc
out
scas
je
call
mov
cmp
and
popa
movl
push
pop
mov
pop
or
pop
mov
sub
push
in
or
nop
nop
dec
cltd
pusha
aam
mov
fs
sub
loope
ret
pop
movsl
inc
ljmp
xchg
out
pop
xchg
push
loop
sub
roll
or
jns
popa
adc
clc
jb
xor
daa
adcl
sbb
movsb
mov
imul
dec
pop
enter
fwait
call
lods
addr16
fdivrl
jle
in
pop
into
adc
ret
push
movsl
cld
push
xor
inc
inc
in
xorl
test
pop
xchg
or
jbe
pop
jb
mov
add
pop
jl
xor
sahf
pop
je
or
sar
mov
shlb
mov
movsb
jmp
cmpsl
sbb
push
popf
popfw
fiaddl
cmc
or
sbb
push
subb
cld
cmp
cmp
test
fisttpl
push
jno
cs
xor
mov
std
jmp
xor
rorb
repz
dec
dec
repnz
cmp
lods
mov
and
cmp
fsubrs
add
push
arpl
out
in
push
push
pop
mov
push
testb
iret
sub
or
mov
jmp
xchg
iret
push
dec
push
mov
push
pop
in
push
jge
sahf
sub
pop
and
xchg
cs
mov
mov
inc
out
push
xor
ficoml
imul
cmp
pop
jb
xor
mov
or
fisubl
mov
and
gs
sahf
pop
and
mov
sbb
fsubl
push
mov
jmp
arpl
cmp
lods
xchg
movsb
xor
sub
out
dec
add
mov
clc
adc
jae
sub
or
or
shl
and
imul
push
fdivp
add
lods
pop
test
je
sub
push
sbb
or
repz
lret
inc
and
xchg
jl
test
dec
lods
ja
shll
cli
mov
pop
fwait
push
imul
call
and
lock
shrb
dec
movsl
push
leave
cmpsb
pushf
dec
ret
loopne
fwait
add
sbb
cli
inc
mov
mov
jo
negl
inc
xor
inc
add
jl
pop
jbe
out
decl
fsub
loopne
gs
mov
adc
xchg
pop
cmp
mov
xorb
jmp
mov
xchg
cmp
stos
mov
xor
rolb
cltd
mov
sub
inc
aam
push
xchg
repnz
cli
jge
loope
test
adc
js
cmp
out
xchg
andl
adc
out
jmp
adcl
xchg
in
lods
mov
push
sbb
cltd
stc
add
jge
fsincos
inc
mov
and
mov
mov
xchg
inc
iret
inc
xchg
push
cmpsb
adc
iret
add
icebp
jle
idivb
test
xlat
sub
mov
inc
mov
lcall
cmc
adc
into
dec
mov
pop
mov
lcall
push
push
in
into
push
adc
insl
xor
push
pop
and
out
fidivrl
pop
jbe
cmp
sub
fnsave
jae
adc
push
mov
adc
and
or
flds
out
jmp
and
movsb
nop
lock
hlt
push
dec
xor
mov
cld
shrb
xlat
push
dec
jge
ja
test
aad
mov
or
bnd
sub
mov
stos
in
cwtl
inc
mov
jl
popa
outsb
sbb
cmp
adc
lods
push
popa
scas
jno
mov
adc
insl
testl
sbb
or
arpl
test
inc
mov
repz
cmp
or
popf
mov
out
pop
push
rcll
pop
pop
sbb
int
jae
mov
mov
cmp
add
out
pop
and
adc
dec
lcall
mov
cld
fwait
pop
adc
push
pminub
imul
ret
pminub
mov
pushf
xchg
jbe
inc
jns
mov
sub
mov
dec
add
jg
jle
sbb
pop
repz
mov
mov
pop
repz
add
xchg
xor
mov
xchg
rcr
push
adc
lock
inc
sbb
mov
aad
mov
fcmovnbe
test
xor
cmpl
fadds
scas
xchg
inc
jno
or
hlt
mov
push
dec
push
jo
into
dec
nop
mov
push
iret
out
sbb
sbbl
out
mov
mov
or
popa
out
mov
push
movsl
push
rorl
cmp
pop
adc
rolb
fnstsw
cmpsl
lret
xor
out
ds
xchg
mov
push
out
std
jne
jnp
insl
test
ja
add
les
dec
xchg
pop
xor
fwait
sub
and
adc
add
stc
inc
int3
cmpb
cmp
cwtl
or
lret
dec
cmpsb
js
vmread
flds
pop
cmp
cwtl
insb
mov
pop
mov
es
pop
fcomps
das
pop
cli
scas
enter
ret
mov
cmc
enter
shr
or
fdivr
cmp
ds
roll
sti
and
mov
div
and
xor
mov
js
xchg
push
jmp
push
call
jne
push
ljmp
mov
insl
in
mov
adc
out
xchg
add
mov
sbb
sti
mov
rep
jo
out
xchg
jp
jge
scas
xor
mov
cmp
or
imul
jnp
lret
rol
sbbl
int
jb
xchg
push
jb
gs
and
adc
shlb
gs
enter
jp
pop
in
jnp
jae
into
inc
pop
dec
dec
mov
sbb
clc
stos
jne
add
icebp
dec
ja
nop
sti
inc
and
jl
out
jns
iret
cs
mov
fs
ds
test
cmp
fstpl
jmp
out
addr16
addl
inc
int
insl
add
jo
cs
xor
inc
xchg
sti
fmull
inc
aaa
je
subb
xor
xchg
xchg
mov
sbb
jnp
stos
adc
mov
jae
leave
add
xchg
mov
enter
insb
or
xchg
ret
cmp
ja
cmp
mov
mov
fxch
mov
adc
lret
int
push
dec
or
sbb
xor
jo
fwait
jg
lcall
pop
out
shl
jp
in
xchg
add
ret
in
fs
cwtl
xchg
jno
fistpll
and
cmp
in
push
pop
in
jmp
outsl
jbe
and
in
pop
inc
fisubs
outsb
cmc
inc
arpl
test
pushf
mov
lock
pop
push
mov
mov
jmp
fnstenv
outsl
pop
push
sbb
sub
ret
fbld
xchg
mov
add
popa
lock
ljmp
shlb
and
imul
mov
adc
push
rorl
mov
adc
add
pop
cltd
out
cmp
cmp
lock
int
jmp
jle
cmp
pop
xchg
cmp
clc
or
mov
movsb
xchg
daa
out
pop
insl
and
mov
outsb
mov
imul
sub
rolb
sbb
lahf
push
rclb
rcrb
push
push
mov
jmp
xor
xor
pop
popa
dec
sub
shrb
xor
jne
aas
or
xchg
cmp
test
sbbl
cmp
mov
jecxz
sbb
add
rolb
shlb
cmp
jns
jo
pop
pop
xchg
pop
push
add
out
pop
pop
pop
mov
imul
jnp
in
xchg
arpl
pop
jp
std
xchg
xor
mov
jmp
sub
inc
dec
cld
push
in
repnz
dec
xchg
or
jmp
cmp
fstps
loope
sbb
ljmp
mov
in
sbb
mov
fdiv
fmul
aad
cmpb
dec
imul
inc
push
mov
mov
sahf
stos
xor
cltd
mov
add
test
incb
sbb
fdivr
fmulp
mov
stos
xchg
mov
fbstp
sbb
adc
pop
lods
sub
out
jo
push
jp
lds
cmp
jnp
fistpll
dec
bound
pop
dec
popa
jp
mov
lret
adc
sahf
push
xor
lret
jns
sbb
add
xchg
xor
adc
inc
and
mov
lods
jp
pop
dec
lods
pushf
loop
push
sbb
popa
adc
sub
inc
jecxz
jg
mov
cltd
ret
orb
xchg
lea
loop
cmp
add
mov
mov
xchg
dec
inc
push
cmp
clc
dec
call
into
sub
shll
call
lods
and
mov
push
pop
lret
nop
adc
dec
sub
rcrb
lahf
loope
inc
add
xchg
jge,pn
enter
rclb
cmp
mov
pop
mov
adc
push
fadds
leave
movsb
inc
xor
fiaddl
test
loopne
adc
cwtl
ds
fwait
cmpsb
sbb
pop
add
jle
or
cli
scas
es
cmp
loope
and
jno
data16
ljmp
jecxz
sub
sub
add
mov
dec
push
stos
cli
hlt
mov
push
test
in
xchg
je
shl
sbb
imul
mov
test
sarb
stos
lret
dec
mov
loop
clc
push
mov
daa
in
xchg
pop
push
mov
inc
mov
adc
test
stos
jmp
mov
push
xchg
aad
push
and
test
mov
push
push
loopne
test
loop
insl
insl
mov
loope
into
repz
mov
in
loop
outsb
or
inc
loope
cmc
movsl
jecxz
cmp
jb
sub
outsl
gs
jnp
ljmp
pushl
cwtl
bound
insb
aam
sub
push
xchg
es
cmc
mov
adc
or
sub
adc
xorb
movsl
inc
xchg
jo
jl
jl
jns
sub
mov
sbb
sbb
movsb
test
imul
pop
ja,pn
mov
sbb
pop
and
ucomiss
mov
dec
adc
xchg
ret
sbb
rcll
gs
and
pop
lock
jmp
push
pop
sub
or
push
arpl
mov
and
sahf
push
or
out
jns
inc
sti
arpl
imul
loopne
in
add
add
out
stos
stos
sahf
sbb
and
add
push
gs
jno
push
sbb
and
inc
ficompl
mov
arpl
mov
inc
lret
jns
pop
inc
repz
cmp
lret
cli
cmp
inc
lret
mov
jp
push
sbb
jne,pt
sbb
xlat
push
mov
jne
add
jbe
add
jle
xchg
xchg
xchg
pop
mov
adc
push
xchg
jns
cmp
repnz
pop
dec
lcall
cmpsb
imul
push
push
dec
mov
les
push
jmp
sbb
mov
xchg
hlt
pop
cmp
adc
sub
ja
adc
and
jmp
lds
hlt
push
mov
pop
jno
clc
push
dec
xor
cltd
xchg
jno
add
jne
sarl
xchg
mov
inc
or
pop
mov
sub
pushf
pop
fdivl
ds
and
and
insb
jmp
mov
or
sti
mov
add
subl
leave
jle
jle
push
stos
lods
pusha
push
xchg
mov
pop
ficoml
adc
xor
cmpsb
lods
push
sahf
out
push
sub
fnstenv
cmp
pop
xchg
and
and
xor
push
lods
int3
movsb
movsb
in
inc
xchg
inc
sub
mov
sbb
add
jns
mov
and
mov
push
out
pop
xchg
mov
and
jecxz
add
mov
push
cmpb
nop
outsl
cmp
adc
xor
pop
sbb
xchg
pop
roll
flds
jl
mov
push
mov
aaa
hlt
sub
ret
cmpl
imul
or
xchg
mov
sbb
mov
cmpsl
gs
cld
movsl
or
dec
adc
cmpsl
push
popa
stc
adc
mov
pop
push
negb
inc
xor
xchg
lods
mov
inc
sbb
call
lock
scas
mov
lods
ja
loop
add
sbb
mov
jmp
aam
rorl
sub
cmp
bound
fs
scas
jbe
and
jno
clc
mov
pushf
jb
dec
cld
add
aaa
mov
sbb
jl
sarl
pop
das
xchg
bound
adc
mov
popa
shll
xorl
clc
arpl
shll
scas
add
jne
das
fisubrs
stos
xor
jp
push
and
je
hlt
nop
pop
loope
repnz
jp
fwait
xchg
mov
enter
mov
stc
xchg
fisubrl
dec
mov
xor
mov
les
aad
sbb
clc
sti
es
push
inc
popf
stos
in
ja
fcmovbe
out
mov
addr16
movsl
sarl
cld
int
add
das
mov
or
outsb
stc
lea
pop
pushf
cmc
ljmp
lcall
mov
fsubs
dec
stos
lret
nop
add
push
repz
in
scas
dec
sub
jns
aam
movsl
add
inc
and
add
sub
sbb
test
adcb
cmpsb
mov
sbb
leave
daa
out
add
aad
sbb
daa
outsb
dec
out
xor
add
xor
outsb
bswap
add
xor
or
iret
or
pop
cltd
cmpsl
sar
mov
shrl
pmaxub
pop
daa
xor
pop
icebp
lret
adc
testb
xchg
sub
xchg
adc
leave
pop
mov
and
xor
xor
jp
or
dec
fucom
repnz
cmp
hlt
xor
scas
mov
repnz
inc
pop
aad
aas
push
or
js
push
cltd
push
push
rcll
mov
push
xchg
push
popa
push
xchg
test
adc
in
fwait
jnp
push
fsubs
mov
mov
dec
fldz
decb
aas
jns
mov
lahf
call
dec
sub
sub
arpl
out
movsl
scas
in
sub
pop
inc
cli
sub
jae
aas
cmp
dec
xchg
jg
push
inc
insb
popf
sub
or
les
sub
adc
mov
scas
adc
aad
and
dec
and
faddl
jbe
or
fwait
pop
lcall
push
sbb
mov
add
add
arpl
jnp
push
add
cvtps2pd
aam
dec
out
xchg
insl
test
add
loope
popf
pop
aam
gs
push
lret
fpatan
test
loope
pop
inc
mov
test
int
popf
arpl
mov
in
add
imulb
test
shrl
lods
and
mov
insb
jl
stos
pop
out
addr16
ss
fs
je
inc
ja
je
add
jno
lods
lds
pop
enter
data16
iret
mov
push
aam
scas
fisubrl
pop
jge
ds
jo
jmp
ja
and
and
xchg
fadd
lock
movsb
cmp
add
andb
mov
movsb
and
stos
jae
sub
mov
ret
imul
sbb
addr16
lock
and
dec
mov
mov
lods
test
clc
inc
mov
mov
mov
jl
lret
das
in
fadds
jns
rorl
dec
pushf
frstor
add
jmp
ror
std
xchg
push
mov
cmp
arpl
add
stc
sbb
mov
aad
push
or
das
cld
add
xchg
sti
sti
in
sub
cmpsb
or
fs
add
mov
xor
dec
mov
in
mov
pop
repz
daa
fnstcw
jno
push
flds
xchg
jno
fistl
ret
repnz
xor
add
fsts
cmp
mov
gs
loopne
sbb
sub
mov
mov
jno
pop
repz
std
aam
stc
mov
push
pop
nop
add
mov
jbe
mov
in
les
xor
fisubl
inc
cmp
xor
cmp
mov
imul
les
es
roll
xor
sub
mov
xor
push
stos
movsb
rsm
dec
dec
jle
bound
add
mov
push
call
mov
sub
cmpsl
shl
pop
lcall
or
test
mov
adc
outsl
fsubl
or
pop
subb
iret
jno
outsl
pop
adc
or
dec
mov
cld
ss
insl
xchg
mov
aad
mov
xchg
insb
fcomp
pop
pop
fnstenv
outsl
lods
push
cwtl
dec
pop
das
dec
icebp
pushf
jne
aam
jecxz
sbb
xchg
shrl
int
push
inc
scas
cwtl
aas
or
sbb
push
and
cmp
push
dec
xor
jle
dec
int3
mov
lret
mov
push
test
xchg
stos
xor
lock
sub
add
inc
push
jge
mov
and
into
xor
mov
aam
xor
ljmp
cli
adc
pop
std
cmp
stc
mov
mov
mov
mov
in
arpl
push
lahf
pop
jo
test
mov
push
fisttpll
addr16
lds
sub
fwait
adc
sub
mov
pusha
jne
add
and
rcrb
push
fldenv
loop
fwait
sbb
std
test
jmp
out
mov
jp
shrl
dec
pop
push
xor
mov
xor
and
mov
in
push
mov
add
in
popa
mov
div
jbe
in
cli
push
add
or
xor
push
cmp
inc
xor
mov
xchg
int
mov
js
cli
or
xor
push
stc
fwait
push
push
pushf
cmc
in
or
push
mov
mov
mov
sbb
call
cmc
push
stos
std
xor
scas
push
rcrb
es
orl
cmc
mov
hlt
mov
jp
push
add
jbe
popf
mov
rol
mov
loope
adc
xchg
jl
les
inc
movsl
push
ret
or
in
out
repnz
sbb
int3
push
test
jne
dec
xchg
push
int3
cmpsb
in
push
or
fwait
push
mov
insb
fistps
stc
into
stos
add
nop
xchg
xchg
inc
daa
in
cltd
mov
add
dec
or
or
int
add
shll
loop
adc
sahf
add
pop
mov
clc
jecxz
jecxz
fldl
dec
ret
pslld
pop
daa
int
fdivrs
inc
ds
adc
shrb
std
mov
outsb
xchg
in
dec
pop
jno
xor
pop
pop
std
pop
fldt
mov
stos
cwtl
insb
repnz
repz
es
testl
or
push
ljmp
repz
mov
test
lods
das
stos
mov
imul
sub
mov
pop
xor
mov
popf
movsl
jns
sub
and
aam
fwait
add
adc
adc
cltd
sbbl
xor
xor
movsl
mov
mov
jbe
sub
sahf
pcmpeqw
out
fcmovb
fisttpl
sub
js
pop
idivb
sub
out
xchg
fstpl
and
in
push
lcall
add
frstor
push
ss
movzbl
mov
into
and
cmp
inc
pop
aad
push
pop
add
cmpsl
aad
insb
adcb
or
js
jg
inc
dec
and
stos
or
pop
inc
fwait
inc
sub
out
mov
in
arpl
mov
mov
es
pop
cmp
pop
loopne
dec
popa
sar
add
sbb
loopne
xchg
dec
and
mov
iret
pop
cmp
rclb
frstor
jle
mov
outsl
adcb
movsb
dec
test
movsl
mov
adc
pop
adc
rcll
cltd
pop
jns
loope
lds
push
lret
pop
pop
pop
jmp
in
popf
mov
mov
sub
cmp
sbbb
adc
rolb
or
pop
mov
pop
cmpl
add
pop
pop
jb
jecxz
cmpl
lds
or
mov
pushf
es
cmp
pop
push
xchg
and
adc
ficomps
gs
mov
dec
dec
and
repnz
push
rorl
addb
mov
movsl
daa
adc
ljmp
push
pop
repnz
lods
cmp
rorb
xchg
fimuls
and
pop
outsl
in
dec
cltd
call
rclb
mov
push
movsl
mov
daa
or
jecxz
imul
mov
aas
and
jl
scas
mov
scas
aaa
fdivr
add
mov
push
stc
jno
push
inc
adc
shlb
pop
aaa
scas
pop
out
push
jge
adc
jmp
push
inc
insb
outsl
or
or
leave
loop
fistl
ss
pop
shll
adc
adc
in
jle
pop
fsubr
out
pushf
or
or
stos
xchg
sub
jnp
push
data16
add
mov
xchg
ret
jg
lret
pop
daa
jmp
out
cli
jp
mov
data16
arpl
pop
jl
cmpb
sbb
bound
and
jg
cmpsl
lahf
lret
xor
ss
cmp
or
adc
leave
push
mov
mov
and
inc
xchg
xchg
fdivrl
cmp
pop
sahf
jns
sahf
mov
cmc
adc
mov
mov
adc
sub
push
mov
jg
cltd
std
aam
enter
cmp
enter
out
dec
mov
movsl
and
das
inc
push
scas
jg
movsl
mov
pop
push
or
xchg
popf
pop
aad
or
mov
jl
inc
pop
or
cmpsb
iret
cmpsb
xor
mov
push
xlat
or
sarb
fdivr
fwait
or
and
sbb
leave
aad
push
js
arpl
enter
mov
cmpsb
fs
cmp
dec
sub
cmp
ja
in
dec
dec
iret
inc
cmp
mov
xchg
adc
sbb
in
cltd
jg
aas
xor
cmp
sub
sbb
mov
out
lods
pop
push
inc
sub
pop
pop
dec
cmp
sbb
mov
hlt
adc
popf
inc
sti
or
or
xchg
es
repz
jecxz
adc
roll
adc
dec
cmpsl
mov
sub
lret
hlt
daa
pop
cmp
push
sbb
imul
lea
or
std
and
xor
fwait
subb
out
xor
test
pop
rcrb
das
jle
pop
ja
test
xchg
popa
mov
dec
cmp
add
sti
push
pop
adcb
test
scas
jecxz
in
push
daa
stos
lcall
ss
sahf
cmp
mov
cmpl
mov
jne
pushl
or
jle
cli
push
mov
mov
xchg
loopne
mov
mov
push
mov
or
pop
pop
jp
and
lea
stc
cmc
or
fstpl
and
iret
mov
imul
pop
push
push
push
xchg
inc
rorl
jg
xor
push
dec
punpcklwd
jne
pop
push
adcl
xchg
adc
push
jecxz
test
mov
cld
dec
dec
mov
sub
sub
std
test
out
cli
in
inc
stos
xchg
lds
out
les
pusha
test
sub
pop
cltd
pop
and
jne
jne
jg
dec
out
cmp
or
fwait
aam
enter
add
adc
sub
cli
leave
iret
fs
je
xor
shl
dec
ret
inc
lock
dec
fiadds
dec
inc
cli
std
lock
data16
inc
mov
mov
sub
sub
push
add
mov
ss
mul
cmpsl
sahf
sbb
andb
xchg
incl
xor
mov
inc
xchg
es
adc
xlat
call
pop
inc
ror
pop
dec
or
repnz
outsl
push
stos
movsl
inc
jmp
xchg
std
mov
fstps
adc
lea
loop
repz
sar
adc
and
cwtl
dec
sti
jmp
cmpsb
jmp
jbe
pop
cmp
jo
jge
mov
jbe
push
sbb
out
ljmp
cld
lahf
out
inc
popa
mov
iret
adc
adc
cmp
jp
push
and
roll
add
mov
int3
outsb
fnstsw
bound
lods
jae
test
std
mov
inc
cmpb
mov
mov
mov
cli
push
popf
xor
mov
adc
std
and
lods
sub
cmp
lods
push
nop
clc
inc
mov
pop
ljmp
push
cmp
mov
enter
popf
cmp
mov
mov
sbb
bound
and
int
ret
mov
xchg
jo
dec
mov
jns
fwait
adc
pop
shlb
adc
jno
loop
jb
or
fs
or
mov
movsb
dec
rolb
int3
fsub
sbb
ljmp
mov
fucomi
push
cltd
leave
insb
std
pop
inc
jmp
cmpsl
jae
in
inc
in
ret
adc
push
dec
mov
sub
dec
addb
push
jmp
int3
in
xchg
cmp
jl
cmpsb
stos
push
hlt
adc
cmc
lret
les
sub
ss
sbb
push
iret
mov
into
stos
inc
pop
mov
lods
cmp
movsb
mov
push
push
fwait
int3
clc
popf
lds
icebp
lods
ss
fwait
jo
das
mov
push
or
daa
cmc
inc
xchg
lcall
test
call
sbbb
ret
sbb
push
lods
add
pop
or
aam
push
push
xor
add
mov
outsb
mov
out
aas
inc
outsl
imul
push
lret
push
lock
or
mov
cmp
adc
les
mov
cmp
adc
rep
and
add
sarl
push
add
mov
int
adc
cmp
inc
mov
mov
cwtl
xchg
xchg
adc
loopne
cmpl
sbbl
jmp
and
mov
popf
cmp
cmc
fnstcw
add
mov
jnp
cmp
add
sub
and
cwtd
xor
add
sti
dec
rol
ds
sbb
pusha
loop
dec
push
xor
cmp
loop
adc
push
in
inc
pop
sbb
or
test
jp
je
sahf
adc
inc
jo
mov
mov
sbb
jb
dec
cmp
imul
pop
test
in
mov
xchg
flds
mov
ficomps
popf
fsts
push
js
push
xchg
add
outsl
outsl
add
jge
loop
inc
out
mov
xlat
fs
inc
adcl
jg
negl
dec
arpl
lahf
fisttps
dec
ljmp
insl
movsl
std
or
out
clc
inc
repz
adc
jg
aas
insb
fisubs
int
sarl
stos
add
push
jns
inc
add
gs
push
push
add
bound
mov
xor
sub
xchg
call
dec
push
mov
pusha
loopne
loopne
mov
xchg
mov
pop
jge
popf
gs
fs
lock
pop
adc
push
xchg
cmc
push
xor
push
jl
clc
lock
sub
out
add
inc
push
sub
push
pop
jo
push
mov
les
push
adc
adc
cmp
test
inc
jo
mov
mov
or
inc
data16
dec
je
dec
push
jns
adc
je
or
pop
adc
fnsave
cwtl
das
ss
dec
or
neg
and
jge
mov
adc
out
xchg
popf
inc
xchg
dec
scas
sub
mov
mov
test
push
cmp
fcompl
mov
fs
imul
cmp
or
scas
outsb
mov
sarb
xor
cmp
sub
sbb
push
xchg
mov
cmp
xorb
xor
push
mov
jns
in
movsb
dec
popf
dec
sub
fcmovne
cmpsl
or
roll
lcall
andb
pop
mov
push
xchg
inc
inc
fdivrs
dec
jle
gs
mov
les
cmpsb
movsl
subl
sbb
jbe
lahf
ret
into
mov
adc
leave
in
outsb
cmp
in
sbb
pop
pop
shl
call
daa
fldl
sbb
dec
sub
pop
sti
pusha
loop
std
shlb
aas
loop
gs
rcll
cmc
call
xor
fcmovnu
pushf
mov
pop
gs
lahf
push
and
mov
adc
mov
or
mov
dec
jb
add
adc
scas
pop
jl
sbb
sub
cli
jbe
add
and
ret
jbe
cmp
xor
lods
pusha
test
sub
aam
xchg
pop
sbb
lock
lds
cwtl
loop
xlat
adc
mov
cmpsl
dec
push
movsl
push
jl
dec
jno
fcomps
or
loopne
sbb
fucomip
in
xchg
out
push
stc
loope
mov
adc
int3
add
xchg
or
push
test
mov
sbb
xor
jle
add
xor
into
cmp
movsb
loope
in
inc
xor
jge
rcrb
js
push
xchg
mov
rcll
cltd
sbb
mov
cmp
sbb
ds
int
mov
shr
jno
lret
xchg
pop
sbb
sub
dec
sub
call
loopne
daa
icebp
repz
pusha
idivl
in
xorb
arpl
pop
mov
andb
xor
fucomip
stos
popf
xor
repz
mov
enter
loopne
idiv
mov
movb
push
add
scas
js
xchg
jmp
stos
test
lret
cwtl
fucom
add
je
in
sub
xor
jae
insb
in
in
xor
std
bound
leave
pop
std
je
push
test
mov
add
sbb
mov
popf
int3
mov
jl
ljmp
sub
ret
adc
mov
add
aam
lods
pop
rclb
lods
in
mov
sahf
loopne
fcmovnbe
push
sub
ret
stos
jmp
push
call
cmpsl
mov
movsl
scas
pop
push
fildll
jp
and
inc
mov
mov
and
cld
dec
repnz
mov
out
sub
adc
stos
xor
lock
mov
pop
lds
sub
lret
leave
push
xchg
xchg
push
std
mov
mov
mov
std
add
scas
and
in
cli
or
cld
xchg
call
outsl
cwtl
pop
xor
dec
mov
icebp
pop
add
cmc
mov
cmp
sti
inc
push
aas
dec
cld
mov
add
push
sbb
sub
fdivl
and
mov
sbb
insb
rep
add
dec
pushf
cmc
jbe
dec
sub
sbb
cmpsb
movd
xlat
stos
daa
or
adc
mov
push
xchg
out
sub
imul
or
adc
daa
lods
js
push
aam
jle
cwtl
loope
sub
loop
dec
out
mov
jns
and
les
cmp
les
arpl
add
mov
xor
mov
testb
xor
or
mov
cli
pop
out
pop
cli
sub
xchg
int
mov
sbb
push
push
mov
add
adc
imul
repnz
pop
in
out
in
inc
movsb
fcoms
scas
mov
inc
roll
mov
or
mov
pusha
enter
xor
cmp
lods
push
lods
scas
or
ss
jecxz
xor
es
xor
pop
bound
aaa
sti
mov
shrb
xor
seta
pop
jp
inc
sbb
dec
sbb
outsb
jb
cmp
decb
stos
sarb
fildll
je
jns
imul
xor
mov
pushf
jecxz
adc
cwtl
add
mov
test
jge
mov
and
sub
sub
aaa
in
cmpsb
aas
xor
dec
mov
stc
adc
mov
pop
adc
arpl
ret
lock
shlb
idiv
mov
out
or
addr16
pop
jl
mov
dec
shlb
out
xlat
mov
mov
lahf
add
outsb
mov
sbb
sub
inc
push
mov
data16
dec
or
mov
lcall
pop
loope
push
int
sub
mov
icebp
jp
inc
lods
push
sbb
fnstenv
xor
push
xor
nop
jg
xchg
jo
aam
mov
add
aad
push
dec
mov
lcall
xor
sbb
mov
xor
push
mov
adc
leave
ljmp
inc
call
dec
and
cmp
cltd
aad
xchg
adc
add
mov
mov
pushf
ljmp
shl
jae
adc
int
sbb
insb
cmp
inc
dec
dec
shrb
and
arpl
inc
xchg
adc
or
push
out
aaa
push
mov
xchg
push
lock
add
xor
inc
fisttps
loop
sbb
inc
pop
es
in
dec
nop
and
sub
daa
inc
push
daa
push
push
jns
pop
call
xchg
test
imul
test
adc
inc
dec
adc
xlat
or
aaa
cld
lahf
addr16
mov
pop
es
inc
and
movsb
bound
xchg
dec
jle
mov
push
out
xor
mov
jne
insb
mov
dec
add
xchg
mov
jle
insl
sti
inc
setg
sarb
dec
cmp
scas
insb
stc
xchg
cmp
addr16
xor
sbb
inc
or
mov
scas
and
or
sbbb
icebp
xchg
pop
or
lret
insb
lcallw
idivb
sub
aad
mov
xchg
or
dec
or
je
lds
test
mov
or
rcrl
notl
les
sbb
outsb
xor
in
std
and
xchg
push
cmp
lock
jo
bound
jae
sbb
enter
rolb
loope
das
fsubrp
dec
sub
jecxz
pushf
das
out
loope
sbb
dec
mov
jg
js
jecxz
nop
ds
out
mov
push
mov
jae
repz
sbb
cmovb
sti
and
outsb
or
mul
test
pop
xor
and
dec
inc
fs
movsb
cmpsl
pop
xor
ficompl
iret
adc
xlat
nop
inc
xchg
mov
and
pusha
loope
imul
scas
sbb
jae
loope
decl
inc
xchg
xor
fistps
nop
ret
push
push
jmp
jecxz
adc
out
sub
daa
bound
sub
jg
icebp
pop
hlt
xchg
jp
and
shlb
dec
add
cmc
cmp
addr16
movsb
push
sub
nop
mov
mov
stos
sbb
jbe
mov
popa
fnsave
insl
xchg
addr16
popf
aas
inc
dec
mov
inc
dec
sbb
in
sti
sbb
pop
fiadds
loopne
lods
cmpsl
lock
sub
xorb
insl
and
mov
jb
jb
mov
push
jmp
ss
enter
xchg
pop
sti
cmpsb
fildl
sub
iret
or
mov
rcr
mov
imul
out
mov
movsb
push
mov
pop
cltd
loopne
cmpsl
adc
pop
sbb
ret
test
outsb
cld
jb
push
ss
sti
ret
xchg
push
xchg
icebp
jmp
mov
or
and
xchg
push
mov
mov
mov
shrb
lahf
rcr
cs
ja
and
adc
shll
pop
test
arpl
mov
cld
fdivl
test
push
push
leave
jno
bnd
mov
sub
pop
lret
inc
jge
arpl
sbb
push
mov
ljmp
setge
xchg
movsb
push
ds
pop
notl
lds
in
ret
jnp
test
dec
lcall
mov
push
push
dec
lcall
sbbb
mov
js
mov
and
or
movsl
fistps
test
jmp
xor
sub
nop
pop
jnp
jnp
cmpsl
jle
cld
add
testb
movsb
pop
jns
sub
stos
dec
add
push
pop
scas
std
mov
inc
mov
insl
add
cmp
rolb
pop
jae
rcl
adc
pop
lock
or
out
jae
dec
push
int3
lds
inc
mov
aam
cmp
mov
xor
cmp
adc
loope
arpl
stos
fisubl
lea
mov
dec
jbe
in
jno
push
add
cvttps2pi
aam
filds
xor
popa
inc
jbe
std
or
repz
ss
mov
stc
dec
push
xchg
jecxz
pop
mov
dec
and
sub
lcall
imul
out
clc
cmp
insb
insb
jl
sbb
push
bnd
sub
das
xchg
popl
ds
ss
repz
popf
repnz
fists
mov
or
sub
or
dec
inc
and
movb
popl
mov
dec
rclb
out
sub
dec
hlt
nop
clc
and
mov
clc
imul
mov
dec
ss
mov
test
mov
js
cld
ss
fidivl
outsl
out
outsb
mov
fadd
mov
je
mov
adc
push
sahf
pop
pop
out
out
cmpb
or
cmc
lds
xchg
pushf
adc
mov
cltd
jge
shlb
push
arpl
je
adc
mov
lods
arpl
push
lcall
jns
jns
dec
push
cli
xchg
push
imull
mov
and
cmp
push
cmc
arpl
ret
into
xor
cmp
sbb
lds
out
and
mov
push
mov
inc
pop
lds
sti
sub
push
adc
mov
push
add
jp
mov
scas
push
or
outsl
xor
jl
cwtl
xor
aas
or
push
sbb
xchg
rcpps
ret
pop
addl
imul
les
pop
mov
xor
imul
hlt
mov
adc
es
mov
aad
inc
lret
jne
xchg
movups
dec
mov
rolb
pushf
aaa
pop
mov
enter
jno
roll
test
xchg
leave
pop
add
mov
xor
in
fidivl
pop
dec
out
shrl
or
xor
leave
mov
lds
lea
push
and
xchg
pop
ficompl
fsubrp
cmpsb
push
or
mov
xchg
popa
inc
sbb
mov
in
lods
ret
loop
xchg
repnz
leave
xor
sahf
xchg
data16
jle
into
lret
loop
aas
fldt
loop
addl
pop
ret
movb
xchg
aas
lret
xor
jnp
mov
sub
dec
aaa
jle
pushf
push
mov
leave
test
sahf
mov
sbb
dec
fstpl
dec
pop
insb
lds
add
fistpl
je
mov
mov
sub
dec
and
icebp
imul
rcll
pop
jnp
movsb
xlat
aas
push
aam
ja
push
lods
mov
loop
ljmp
inc
in
js
lahf
add
test
mov
mov
js
repz
mov
fimull
fsts
xor
add
or
lret
cmp
jg
mov
js
mov
movsl
popa
in
push
dec
pop
sub
or
pop
xchg
and
mov
cmc
dec
xchg
mov
xchg
outsl
cmp
inc
inc
pop
pop
mov
mov
pop
mov
push
mov
pop
push
loopne
pop
jno
stc
fsubrl
sbb
lret
sub
sub
loopne
cmpsb
imul
ret
xor
xor
adc
mov
sbb
pop
fildll
sbb
push
in
and
and
jnp
dec
out
push
adc
jle
ljmp
ret
repz
or
pop
nop
add
jg
or
lret
pop
push
pusha
dec
jno
xor
mov
shrl
sbb
mov
xlat
in
inc
outsb
sbb
inc
lcall
xchg
inc
pop
iret
mov
shlb
int
inc
in
pop
or
les
pop
loope
sbb
rcrl
xchg
mov
fwait
or
aas
mov
cmpsl
dec
cmp
div
adc
fisubrl
lds
push
dec
out
shll
mov
scas
xor
stos
push
imul
mov
mov
out
lods
cld
cs
xchg
mov
popf
jae
jnp
xchg
push
dec
out
and
mov
add
and
cmp
repnz
cmp
push
inc
fwait
outsb
mov
cmpsl
sub
jae,pn
push
push
mov
jmp
into
popf
xchg
jo
inc
loop
aad
push
cli
lods
cltd
push
cmp
je
adc
pop
inc
scas
or
lock
xchg
cmpsl
dec
or
jg
scas
cmpsl
insb
jb
dec
lods
inc
fs
pop
push
movsl
xor
cmp
inc
pop
sti
int
lahf
lods
mov
add
jle
orl
ror
negb
push
ljmp
cmp
lret
mov
outsl
dec
add
dec
cmc
cmp
jno
shr
outsl
push
add
sub
inc
jne
movsb
cmp
stos
pop
shlb
mov
jo
or
xchg
lret
inc
outsl
int3
lea
jmp
int
arpl
insb
aam
push
or
fcom
mov
aad
and
daa
inc
mov
fbstp
inc
sbbb
gs
je
clc
jle,pn
xor
adc
in
xor
mov
outsl
sub
xchg
jl
sahf
fcompl
and
adc
adc
cmp
jbe
sub
filds
movb
bound
jp
jb
push
and
pop
mov
in
mov
push
lock
mov
or
and
inc
fcmovu
mov
repz
adc
xchg
adc
or
pop
sub
jl
sub
iret
add
xchg
xchg
pop
sbb
test
adc
sub
int
fistps
inc
mov
shrb
fsubrl
inc
jbe
loopne,pt
data16
adc
aam
mov
clc
ss
inc
sub
push
adc
push
fwait
popa
ret
pop
aam
int
lahf
loopne
and
pop
adc
and
popa
and
pop
cld
xchg
inc
hlt
pop
mov
daa
sub
push
in
or
lcall
or
in
mov
mov
in
inc
xor
jge
test
in
or
push
cs
xchg
push
push
insl
jle
add
dec
lea
and
out
jbe
outsl
mov
inc
sbb
xchg
sbb
outsl
stos
push
mov
ret
bound
jbe
shrl
sbb
inc
adc
call
push
cmpsb
loope
and
fidivrs
xchg
xchg
sbb
dec
jecxz
pop
in
sti
popa
je
adcl
gs
xchg
adc
mov
jns
cmp
fists
adc
inc
push
or
dec
or
in
scas
mov
call
daa
in
setb
fwait
xchg
adc
iret
pop
jno
ljmp
sub
jle
bound
add
repz
push
jnp
shll
xchg
cmp
je
cmp
mov
loopne
addr16
shlb
cltd
js
sub
mov
data16
dec
or
rcrb
sbb
in
push
call
dec
jo
push
test
aam
bound
stc
ja
add
in
push
in
cmp
testl
testb
das
rcl
sti
dec
daa
xor
push
out
push
mov
aad
mov
mov
hlt
sbb
fsts
dec
push
fsub
popa
pop
dec
xchg
das
loopne
or
xchg
cld
in
xor
pop
mov
outsl
cmpsl
cmpsb
adc
jb
hlt
sti
test
push
es
in
loopne
rcrb
mov
mov
shl
jne
mov
push
pop
pusha
fsubrs
and
xor
xchg
cld
test
insb
sarl
pop
divb
ljmp
aad
mov
xchg
and
fcmovnbe
ds
cld
jbe
sti
cmp
jbe
test
mov
mov
mov
jo
pop
aad
xor
ret
add
fisubrs
add
xorb
sub
cmp
mov
and
in
sub
in
ret
sub
jecxz
in
cwtl
clc
test
roll
out
in
add
scas
fsubrs
mov
pop
xchg
xchg
jne
pop
je
cmp
pop
push
pushf
je
jb
repnz
fisubrl
cmc
inc
dec
iret
movsl
pop
xor
daa
mov
fldcw
add
or
sub
xchg
loop
mov
cwtl
jecxz
lret
xor
aad
xchg
sbb
push
aas
and
cmp
popa
xchg
loope
jnp
lods
in
das
es
out
sub
aaa
test
clc
dec
ret
xchg
push
jbe
jmp
fidivl
adc
jge
cli
jmp
push
test
push
push
sub
xchg
cmc
dec
aaa
sbb
cmp
cmpsb
imul
stc
mov
pop
mov
xor
xchg
lret
insb
lods
xchg
test
daa
and
test
std
and
pop
stc
xor
das
nop
jo
mov
test
fwait
sbb
lcall
xor
cmpsl
movsb
ljmp
adc
sbb
fmull
xchg
adc
ljmp
stc
popa
xor
jmp
fadd
fstl
andl
xlat
and
sti
fs
in
lds
cmp
inc
cmp
and
stos
sbb
xor
cmp
xchg
ds
rorb
mov
bound
imul
out
mov
in
loopne
jne
cmp
cmpsb
test
sub
clc
out
sub
leave
stc
dec
add
and
mov
out
push
lods
push
inc
fidivs
loope
gs
sub
cmpsb
jge
lea
jmp
cs
outsl
les
sub
add
popf
sbb
jge
ss
jge
mov
es
sub
enter
push
data16
test
mov
mov
pop
and
mov
jo
outsb
ret
and
in
rorl
jmp
sbb
mov
sub
outsb
dec
mov
std
test
cmp
fldl
lods
cltd
test
aam
pop
xorb
push
mov
scas
mov
mov
mov
mov
outsb
push
gs
fnsave
es
mov
add
popa
insl
xorl
pop
dec
jae
fadds
jecxz
rorb
in
call
cmpsb
rcl
cmp
mov
xlat
mov
shlb
repnz
sbb
jno
xor
cmp
adc
mov
cmp
dec
jb
out
aad
cmp
adc
in
jecxz
sbb
test
les
push
add
imul
inc
push
pusha
bound
push
fabs
clc
add
sbbb
cmp
push
mov
sbb
mov
shrb
enter
add
loope
loopne
mov
rcl
lahf
test
popa
dec
testl
test
jo
dec
arpl
jmp
mov
icebp
mov
nop
ja
loopne
cmp
rorl
xor
push
pop
add
mov
pop
jns
test
sbb
rorl
sbb
das
lods
ret
push
mov
es
pop
dec
sahf
xorl
loopne
ss
cmp
repnz
loopne
inc
sbb
inc
push
mov
daa
dec
sarb
xchg
je
dec
mov
ret
mov
rorl
push
lea
dec
icebp
or
xchg
ljmp
jl
and
arpl
dec
lcall
cmpsb
bound
clc
xchg
xchg
push
movsb
mov
iret
out
jo
cmc
fxch
sbb
test
xlat
cmp
in
or
daa
movsl
jp
subb
xchg
mov
gs
xor
sbb
inc
adc
jl
jo
sti
xor
test
dec
add
dec
insb
or
sub
mov
neg
mov
sbb
iret
xchg
out
sub
jmp
lret
pop
or
js
ja
outsl
shrb
addr16
aam
or
adc
ljmp
inc
les
inc
jecxz
loopne
inc
mov
adc
rorl
into
lods
and
ret
rcrl
xchg
fistpll
sbb
push
stc
mov
xchg
jl
sub
mov
fs
mov
int3
xchg
mov
shll
cmp
adc
out
mov
lods
jp
popf
jl
iret
and
sub
pusha
lock
ja
lods
mov
sbb
mov
addr16
pop
cmp
aas
inc
jno
push
fistpl
mov
idivb
pop
das
xchg
testl
enter
inc
jo
pop
in
repnz
cmpsl
lods
sahf
hlt
test
es
iret
adc
xlat
or
add
repnz
sbb
sahf
or
adc
pop
pop
out
rol
and
sub
push
gs
add
xchg
cmp
jge
pop
bound
inc
nopl
jecxz
inc
add
stos
in
sbb
jo
mov
cmp
dec
and
cli
ficoml
xchg
adc
lahf
sbb
push
inc
lret
pop
pop
pop
in
cmp
imul
push
mov
and
int
cs
cmp
jl
or
and
mov
jl
xchg
inc
xchg
and
fiaddl
mov
repnz
mov
adc
or
mov
scas
les
into
add
gs
bound
pop
inc
xor
aaa
sbb
push
loop
mov
in
inc
and
pop
and
xchg
add
mov
add
jg
rclb
stos
loopne
iret
je
aam
jge
inc
xorl
cmp
fs
xor
jne
bound
cmp
cmc
mulb
insl
test
loopne
xor
mov
pop
cmpsl
notb
xchg
and
test
cmp
nop
fcmovbe
or
test
mov
int
mov
dec
mov
adc
shrl
mov
insb
idiv
cmp
cmp
xchg
in
jne
jae
mov
add
mov
iret
clc
clc
jnp
pop
sub
cld
lock
jb
sahf
stc
arpl
inc
shll
add
cmp
cmp
loope
lret
push
xchg
andl
sbb
jbe
xchg
aaa
ljmp
out
xchg
movsl
jnp
pop
mov
pusha
pop
js
dec
dec
bound
xchg
data16
imulb
push
jo
mov
cli
sahf
cmp
popa
cmp
and
xchg
xchg
jae
test
mov
ret
mov
mov
or
clc
or
jge
jecxz
sbb
cmpsb
gs
xor
adc
xor
movsb
mov
es
inc
pop
in
clc
aas
dec
in
sahf
and
cmp
mov
mov
or
pop
repnz
push
fisttpl
in
add
push
ds
pushf
in
jns
xor
roll
jae
add
dec
xor
pop
mov
cli
inc
mov
jae
cmpsb
push
xchg
jb
ret
rolb
leave
mov
push
fyl2xp1
and
or
movd
mov
imul
fildl
push
stc
imul
popa
aas
sub
fs
mov
nop
mov
pop
orl
inc
adc
push
pop
mov
jge
in
stos
sub
and
inc
mov
fdivl
sub
pop
mov
mov
xchg
cmp
int3
imul
push
push
sub
fs
jnp
push
ficoms
dec
xchg
mov
cmp
enter
push
fsubs
fldl2t
scas
aad
jl
push
or
mov
aas
fsts
cld
rcl
jle
pop
popl
mov
sbb
or
jge
in
adc
lock
mov
push
sbb
cs
repz
add
mov
mov
repz
enter
in
sbb
dec
scas
test
jmp
fisubrs
out
fistl
add
fs
adc
push
lret
lock
mov
xlat
mov
insb
xchg
xchg
mov
inc
xchg
sbb
or
mov
xchg
fidivl
cmp
cmp
nop
sbb
jl
mov
lock
dec
das
push
sarb
scas
bound
int3
mov
inc
stos
fidivl
push
loop
sbb
sbbb
fmul
cwtl
dec
pop
and
cmp
inc
pop
fdivp
cs
sbb
pop
add
xchg
sub
push
jae
sbb
cmp
aam
movsb
inc
call
imul
add
mov
aaa
xchg
push
in
jbe
mov
scas
clc
adcl
mov
inc
dec
cmp
push
ficomps
dec
sub
inc
xchg
stc
push
mov
mov
das
sbb
out
push
mov
pushl
in
lock
fidivl
cltd
cmp
mov
nop
or
imul
out
gs
int3
mov
add
js
and
cmp
push
ss
add
cmpsl
dec
push
flds
mov
mov
sbb
add
xor
or
fnstsw
adc
inc
xor
icebp
sub
and
ds
iret
movsl
adc
jmp
sub
fs
adcl
std
jg
jno
dec
movsl
rclw
adc
jmp
add
imul
loop
test
cmp
cli
pop
pop
xchg
cmp
mov
negl
outsb
pop
push
in
ficompl
xor
xchg
push
insl
lret
inc
scas
je
fs
nop
pop
mov
mov
loope
iret
fwait
pushf
jle
mov
lock
pop
loopne
in
scas
or
cmp
les
xor
push
leave
xchg
repnz
cmp
push
xchg
test
mov
test
pop
sub
ljmp
xor
push
sahf
aaa
std
push
pusha
rorb
pusha
ret
pop
pop
jmp
adc
mov
fwait
arpl
or
push
ljmp
cs
dec
sub
pop
pop
mov
xchg
and
or
push
mov
pop
adcl
rcrl
adc
popa
mov
cwtl
jbe
push
shrl
ss
cmp
pop
add
das
add
jle
xchg
out
popa
mov
popa
mov
ljmp
sub
adc
ja
sub
inc
inc
hlt
sbb
cltd
je
xchg
lods
mov
lds
adc
xchg
inc
push
aaa
aad
dec
xor
jns
mov
xchg
enter
jl
push
add
mov
ss
mov
stos
jge
out
xchg
fwait
add
cmc
fiaddl
ljmp
jp
mov
cmp
jp
mov
fcmovnbe
add
adc
cmpsb
mov
scas
xor
mov
aaa
mov
add
mov
pop
jb
lea
add
cltd
xchg
mov
fsubrp
mov
dec
popl
sti
movsl
or
lret
add
xor
pop
push
xor
push
adc
popf
fidivrl
mov
inc
xchg
mov
adc
mov
push
cli
pop
sub
hlt
inc
push
inc
repnz
int
insl
popf
xchg
test
rol
xchg
rcr
popf
jb,pt
inc
cmp
adc
test
pop
inc
movsl
popa
jae
sar
add
cmc
das
nop
adc
cmp
imul
jmp
mov
jecxz
jb
xchg
ja
dec
rcrl
jb
lds
into
jl
inc
mov
mov
mov
cmc
ljmp
mov
push
stos
mov
sarb
loopne
jp
popa
adc
lds
movsb
mulb
mov
push
adc
mov
or
movsl
stos
push
inc
xchg
sbb
fisubrs
add
mov
dec
push
ljmp
pop
in
xchg
aaa
jnp
mov
mov
scas
movsb
mov
jns
sub
int
into
mov
push
fcom
ljmp
cmpsl
cwtl
sub
mov
mov
jo
or
mov
lea
sub
lcall
out
mov
lret
aaa
mov
mov
sbb
data16
fcoml
jle
call
or
mov
lcall
xchg
mov
pop
add
add
sbb
fucomi
xchg
js
gs
icebp
popf
sbb
test
jb
pop
fisttpl
daa
insl
lds
insb
sarl
pop
jmp
lods
mov
fcmove
call
out
push
cmp
andb
inc
cs
clc
xor
in
fidivl
push
rcrb
cmp
push
sbb
adc
cmpsl
rclb
mov
mov
push
add
fsubl
sbb
push
pop
add
mov
test
push
int3
dec
imul
mov
movsb
mov
testb
jbe
xor
lea
divb
clc
lds
adc
inc
mov
rol
adc
dec
popa
cmp
mov
sarl
cmp
xchg
xchg
sub
icebp
inc
jo
mov
xor
mov
jmp
or
addr16
in
adc
dec
outsl
loop
aaa
add
mov
sub
cmp
fldt
pushf
and
add
and
mov
pop
std
jae
and
adc
sub
sbb
sbb
and
fdivrl
call
jbe
mov
inc
pop
mov
sub
leave
rcr
xor
andb
aaa
xor
rolb
sbb
movsb
mov
sub
pop
sahf
clc
inc
roll
imul
push
imul
stos
and
mov
inc
or
cld
sub
into
sub
dec
lahf
lret
mov
sbb
push
pop
sbb
les
or
fcomp
xchg
adc
mov
push
push
xchg
or
int3
or
sub
sbb
xchg
in
add
imul
xor
ds
or
mov
subl
int3
xchg
in
mov
iret
xor
xor
xor
std
popf
xor
mov
rolb
xchg
cwtl
cmp
xor
lea
push
insl
dec
gs
pusha
mov
fldenv
sbb
icebp
sub
inc
sub
rolb
pop
sbb
sbb
lock
push
aaa
push
shll
in
sbb
fildll
add
push
pop
fwait
xor
add
or
cld
or
push
popf
jae
addb
subl
cmp
inc
mov
sub
adc
sub
xor
sub
xor
test
int
call
mov
lods
and
clc
cmpsb
push
lret
jnp
iret
push
test
jns
inc
movsl
jnp
mov
repz
je
dec
data16
gs
mov
cmp
ret
or
shlb
imul
lods
sbb
sbb
mov
cli
sar
adc
rorl
sbb
cmp
dec
shrl
or
push
push
cwtl
arpl
in
add
add
fmulp
and
cmpsl
jge
add
bound
js
push
lea
dec
mov
push
es
cwtl
lret
jo
or
cld
sbb
in
cld
faddl
stos
push
lods
cltd
daa
xor
mov
jmp
mov
mov
imul
dec
xchg
jp
dec
lret
enter
sbb
stos
icebp
fs
cmp
or
mov
sarl
xchg
or
stc
movsl
sbb
outsl
push
fcoml
mov
push
out
addps
push
inc
mov
sbb
aaa
sub
sbb
imul
lahf
or
lret
mov
rolb
sti
mov
popa
stc
push
sarb
lods
das
clc
in
push
lcall
mov
dec
test
mov
mov
test
jecxz
cs
push
out
mov
jns
xor
jp
jne
cmpsl
nop
lahf
test
jmp
mov
sarl
lock
pop
mov
pop
jne
push
xlat
ds
pop
push
fs
dec
adc
inc
std
jp
jle
ret
in
adc
xchg
mov
mov
into
add
std
sahf
pop
int
hlt
jns
insb
xor
ljmp
jne
les
mov
adc
mov
dec
or
adc
icebp
movsl
xchg
leave
sti
test
jecxz
sub
fs
scas
out
push
inc
xchg
or
add
cltd
push
fiadds
pop
fsubrs
fdiv
out
mov
push
push
mov
or
jo
loopne
out
pop
test
xor
dec
dec
push
insl
jne
push
pushf
cmp
cmc
or
jns
andl
test
xchg
in
ljmp
int3
aam
gs
xchg
jnp
cmp
pop
lea
cltd
push
data16
and
int
cli
add
test
xor
cld
fs
sbb
das
scas
lahf
dec
std
sub
cli
lods
sbb
sti
in
jae
dec
push
negb
sub
ret
test
or
jmp
dec
lods
dec
inc
roll
dec
std
lods
sarb
test
cmp
xor
pusha
cld
adc
ljmp
shrb
jg
je
jb
inc
push
insb
mov
and
and
test
das
fwait
scas
jecxz,pn
mov
inc
jp
sbb
adc
ficoml
arpl
stos
add
gs
fnstsw
xor
insb
in
and
xlat
lret
sbb
lea
push
cmpsb
jg
std
xor
test
mov
push
dec
inc
into
jb
leave
sub
xchg
xchg
cltd
data16
dec
fsubp
sahf
mov
int3
cld
fsubs
mov
jne
push
imul
loopne
adc
sub
jae
mov
pop
push
shll
insl
lock
xor
int3
cld
push
cs
mov
lods
and
xor
push
sub
lret
pusha
pop
clc
jle
outsb
lcall
lret
les
or
jno
pop
rorl
mov
mov
loopne
xlat
shll
stos
fcmovb
sub
mov
rcrb
push
mov
in
inc
mov
or
and
jg
adc
fbld
push
stos
add
fsubs
int
sbb
mov
cmpsb
push
aas
push
mov
xor
inc
push
cmp
pop
inc
ds
mov
add
movsl
xchg
push
adc
cmp
dec
pop
lahf
jno
mov
sbb
adc
cmp
out
sub
js
mov
test
lret
sub
xchg
push
repz
xor
lret
in
lods
cmp
imul
aad
bound
inc
dec
jg
sbb
dec
cld
lods
fstpl
adcl
insl
ret
bound
pop
sbb
adc
bound
dec
outsb
sar
in
mov
mov
out
adc
iret
jbe
xor
fiaddl
insl
xchg
ss
mov
divl
and
stos
adc
and
mov
cld
xor
mov
adc
nop
xor
call
push
call
out
ret
sbb
sub
nop
mov
push
bound
int3
mov
and
inc
repz
adcb
cli
pop
dec
inc
xchg
or
aam
testb
je
popf
out
xlat
and
ret
cltd
and
aas
hlt
cltd
inc
in
push
inc
inc
and
and
dec
insl
loop
cmp
ficompl
mov
mov
mov
and
mov
dec
push
movsl
lock
jmp
or
xor
sarl
jne
test
int3
adc
push
dec
push
push
pusha
mov
add
sub
rolb
mov
shll
imul
imul
and
pop
fwait
ja
icebp
push
popa
sub
fcmovbe
and
mov
xchg
and
repnz
sbb
and
leave
mov
jge
pop
sub
popa
and
flds
in
test
sahf
mov
stos
lahf
mov
dec
xchg
push
mov
data16
push
xchg
push
outsb
inc
mov
fcmovu
in
mov
cwtl
or
fucomp
out
orb
sbb
mov
adc
ljmp
jecxz
jnp
adc
repz
jg
fwait
pop
mov
lods
inc
mov
adc
mov
imul
lods
popl
daa
add
add
cmc
inc
test
push
dec
fwait
outsl
cmp
clc
dec
jbe
data16
and
push
scas
sbb
push
xor
ss
sbb
test
xchg
sti
std
mov
adc
mov
mov
xchg
aad
push
sbb
sub
adc
scas
push
shlb
in
shrl
lcall
pop
lock
and
pusha
xor
movsb
cli
push
jmp
inc
fdivl
ficoms
inc
lea
enter
dec
pusha
mov
ss
jbe
sub
inc
and
pop
add
in
out
stc
orl
pop
shlb
jecxz
and
mov
test
ss
fs
add
fsubp
add
daa
fwait
icebp
cmp
push
jns
lcall
movsl
mov
and
xor
dec
loopne
pop
cmpb
add
mov
fisttpl
pushf
xchg
lods
fcmovbe
jge,pt
inc
mov
mov
mov
jl
es
cmp
dec
ret
mov
das
arpl
loop
adc
out
hlt
adc
jge
xchg
mov
ss
mov
mov
subb
xchg
lea
jg
clc
rorl
push
imul
fistpll
xchg
or
aad
jle
icebp
idivl
loope
pushf
ret
mov
out
jo
dec
movsl
jecxz
mov
arpl
pop
rep
popf
in
jmp
adc
ret
jnp
inc
ds
xchg
or
cmp
xor
jp
imul
jl
cmpsl
iret
xchg
into
iret
stc
call
mov
pop
repz
jl
mov
push
fucomp
div
test
mov
add
jo
aas
aam
js
pop
inc
subb
xor
dec
fwait
orb
push
or
and
sti
xchg
cmp
add
rolb
xchg
push
je
punpckhwd
sub
dec
jecxz
inc
cmpsl
sbb
fnstenv
and
sahf
out
out
xor
sub
roll
ljmp
pop
jmp
dec
jae
mov
out
loop
pop
test
sbb
or
or
cmp
std
jp
sub
cmc
rolb
add
adc
mov
xor
push
icebp
or
and
pop
push
dec
inc
jno
insb
and
xor
adc
dec
and
dec
cmc
jmp
sub
pop
sub
mov
lcall
scas
inc
pushf
fisubrl
out
aam
insb
xchg
outsl
add
lret
pop
lret
and
mov
sbb
and
xchg
aaa
jbe
into
adc
pop
shlb
dec
cmc
adc
add
pop
xor
adc
in
out
add
test
movsb
xor
xchg
je
popa
pop
out
sbb
mov
cs
or
arpl
dec
stos
xor
les
ja
jbe
fs
je
inc
mov
sub
inc
ljmp
fsubrs
mov
sbb
push
add
lods
lock
loope
daa
mulb
jp
mov
cmc
lcall
pop
xorb
add
xor
sbb
aad
cmp
loopne
mov
cmp
jge
inc
jp
mov
adc
jge
mov
call
sbb
pop
data16
push
test
idiv
adcb
or
and
test
dec
sbb
mov
or
mov
scas
sbbl
push
mov
test
or
movsl
es
popf
es
sub
sbb
inc
pop
sbb
push
mov
jle
shlb
xor
sti
int
mov
lods
or
pop
hlt
inc
push
outsb
xchg
cld
mov
xchg
mov
imul
jl
arpl
mov
aad
shlb
std
insb
push
mov
stos
sub
mov
sbb
pop
push
jnp
into
call
and
lods
stos
cli
jae
add
mov
xor
and
mov
pop
mov
jns
or
jmp
mov
jb
adcb
sbb
test
outsl
add
jns
popf
int
out
pop
inc
imul
sti
inc
call
int
inc
xor
mulb
mov
push
or
cmp
dec
add
adc
xchg
mov
test
out
dec
leave
cmpsl
icebp
xchg
push
xor
mov
cmp
xchg
jbe
out
lcall
mov
or
les
jns
sbb
out
sbb
loopne
subl
fwait
es
xorb
pop
fnstcw
imul
ds
and
dec
mov
mov
or
push
sub
inc
lea
movsl
mov
insl
jo
shlb
test
cmp
fstps
js
rcr
ja
ret
adc
dec
cli
stos
or
xchg
in
gs
imul
negl
mov
lcall
decl
dec
add
orl
movsl
sub
dec
jge
push
mov
aas
add
test
inc
add
mov
rcrl
repz
call
mov
ret
inc
xchg
das
mov
inc
inc
dec
mov
jl
ss
int
cmp
sahf
sbb
mov
cmp
sbb
jp
mov
jo
loope
loop
insb
jne
pop
mov
xlat
scas
insl
add
pop
roll
sbb
scas
adc
lret
iret
mov
scas
pop
andb
cli
mov
adc
fxch
or
adc
sbb
movsl
gs
and
pop
outsb
xor
mov
popa
aam
push
jmp
or
je
and
in
pop
jb
pop
xchg
into
jg
lcall
lods
pop
dec
or
push
mov
dec
mov
add
mov
mov
sbb
je
pop
stos
xchg
repnz
inc
dec
jle
into
cmp
cltd
and
int
push
sbb
jl
mov
jb
cmp
sbb
aad
pop
jl
cmp
out
push
push
lods
mov
push
cmpsb
push
add
scas
ret
jecxz
in
dec
pop
pop
lods
add
xchg
loop
dec
in
sub
outsb
jmp
enter
in
jl
dec
in
add
loop
pop
push
aad
push
movsb
in
popf
daa
cmpsb
and
addb
fcoms
sub
lahf
sbb
loope
scas
outsl
push
fsub
inc
jg
mov
pop
imul
flds
or
push
std
push
xor
fcom
inc
leave
fs
lds
push
mov
int3
sahf
pusha
js
daa
std
add
sbb
test
sub
inc
data16
sbb
fisttps
and
sub
sub
adc
inc
sahf
dec
sub
push
lcall
or
arpl
mov
out
mov
das
xchg
int3
mov
aad
das
ficoms
inc
pop
mov
jb
call
std
and
jb
push
insl
js
sbb
jp
sbb
lcall
nop
adc
mov
sbb
repz
xor
mov
stc
rep
or
iret
int3
adc
and
pop
push
pop
sti
cmp
add
cmpsl
call
loop
add
ds
or
loopne
or
int3
pop
jno
mov
xchg
xchg
jne
negl
imul
cmpb
xor
lods
divb
dec
xor
push
xchg
and
or
push
sahf
and
outsl
fisubrs
jno
out
jae
cmp
clc
test
test
cmp
hlt
fldt
jo
cmp
pop
in
pop
js
lods
sub
push
mov
test
mov
std
inc
divb
cmp
pop
adc
mov
das
js
xchg
lods
cmpsb
stc
aad
or
mov
cltd
add
pop
push
popa
repz
mov
fnop
shrl
xchg
fsubr
sub
divl
jp
push
xlat
lea
xor
mov
gs
add
mov
xor
lea
ja
push
jecxz
loope
ljmp
cmp
out
scas
arpl
in
adc
lods
push
pop
push
jbe
dec
lret
mov
mov
insb
cwtl
jo
push
sbb
or
mov
pop
imul
pop
pop
dec
testb
testl
add
popf
mov
popa
cmp
lahf
int3
xchg
mov
sbb
mov
lea
stc
cltd
mov
test
push
aad
pcmpeqw
mov
cmp
cmp
out
sahf
cwtl
gs
ret
mov
or
insl
or
dec
cmp
hlt
enter
aaa
sub
add
jle
mov
or
bound
rorl
push
mov
sub
mov
mov
cwtl
fidivrl
aad
mov
or
or
xchg
pop
pop
mov
lret
std
mov
sub
cmc
inc
movsl
add
mov
or
add
mov
pop
dec
lret
and
cli
mov
leave
pusha
sbb
mov
int3
adc
mov
push
mov
add
movsl
imul
lods
divl
push
jecxz
out
sbb
pop
xor
push
add
cmp
pop
jb
std
push
mov
xchg
test
xor
mov
dec
test
fisubl
leave
je
inc
push
push
lock
ds
outsb
mov
add
popa
rorl
xlat
sar
and
loopne
add
pop
mov
cmp
dec
fadds
pop
or
addr16
mov
fadds
add
arpl
mov
push
mov
addr16
and
push
xchg
movsb
out
push
jl
mov
ficompl
shll
pusha
push
jge
jge
sub
pop
or
inc
sti
imul
add
mov
enter
mov
ret
lea
jmp
cltd
popa
pop
or
mov
fisttps
cmp
push
sbb
pushf
or
push
loopne
fwait
cli
and
out
pop
inc
fistl
fsubrs
scas
dec
std
ja
push
nop
leave
addl
jo
sbb
pushl
push
rolb
das
or
xchg
mov
pop
outsb
iret
lcall
into
xchg
mov
dec
and
popa
negb
lds
push
int3
in
sub
fcmovnbe
mov
push
in
lods
dec
mov
loope
xlat
dec
data16
repz
push
call
jle
inc
xchg
jbe
aam
ljmp
imul
das
mov
mov
icebp
push
jecxz
mov
cmp
test
iret
pop
out
in
sub
mov
scas
out
clc
and
mov
cmc
mov
inc
push
fstp
sbb
pop
insb
out
js
ja
fimuls
pop
ret
mov
mov
xchg
inc
jae
and
push
iret
lds
xchg
push
sub
xor
jg
dec
rol
fwait
je
in
push
sub
nop
pop
fnsave
sub
adc
add
xchg
fs
mov
adc
xor
pop
jp
mov
repnz
mov
cmp
or
inc
pop
fidivl
jle
lods
stc
mov
cmpsl
data16
mov
lret
and
mov
jbe
inc
into
push
add
or
mov
hlt
arpl
xchg
pushf
xchg
movsl
and
lds
and
cmp
inc
fadds
into
xchg
dec
clc
dec
jb
hlt
test
ret
dec
mov
cmp
jmp
fucomi
xor
xchg
xor
lea
mov
lcall
out
mov
and
cmpsb
mov
std
jle
push
hlt
pop
jp
inc
inc
mov
dec
xchg
imul
popa
xchg
sub
cs
daa
and
shl
add
test
sub
jnp
lcall
and
mov
inc
imul
flds
out
in
fimull
mov
fdivs
xlat
jb
mov
adc
int3
sub
dec
movsb
inc
out
mov
xchg
mov
arpl
sbb
cld
iret
sub
jge
outsl
cmpl
xchg
test
call
push
nop
lock
add
sahf
mov
add
int3
sahf
mov
cwtl
push
inc
fimuls
mov
mov
add
push
in
push
pop
int3
inc
aaa
cmp
ret
adc
or
stc
sub
loop
in
dec
sbb
mov
mov
mov
fistpl
popa
ja
mov
fwait
add
lds
outsb
out
lock
adc
dec
sbb
out
lea
or
pop
and
sub
inc
nop
sbbb
stos
add
aam
mov
mov
test
outsb
sub
inc
rcll
fstpt
inc
repnz
push
cmp
mov
int3
mov
shlb
xchg
add
psrad
inc
test
pushf
stos
fistps
pop
insb
clc
push
and
fwait
cmp
int
into
mov
jns
sub
push
das
and
aam
mov
pop
mov
cmpsl
or
adc
jb
cmpsl
dec
in
maxps
push
sub
inc
test
or
mov
repz
fmuls
mov
cmp
jg
cli
or
jle
push
lahf
pop
mov
lods
or
loop
addr16
cmp
inc
lret
shlb
dec
cwtl
xchg
enter
sub
sbb
imul
jmp
dec
pop
mov
cmp
dec
pop
inc
cmp
mov
or
out
cmpsl
insb
cmp
pop
mov
mov
dec
or
jne
add
in
mov
leave
xchg
into
je
bound
pusha
in
or
lods
dec
push
repnz
idivb
sub
andb
push
pusha
dec
mov
rcrl
cmp
mov
clc
lock
ds
js
gs
xor
and
clc
inc
and
cs
pop
jb
inc
lcall
lock
out
pop
mov
xchg
ret
pop
pop
insb
mov
push
int3
lods
mov
push
inc
jae
xchg
and
js
ss
mov
adc
add
shl
cmp
dec
jno
sbb
or
add
popf
lock
ret
push
cmp
cmpb
lds
popa
jmp
testl
repnz
call
mov
leave
in
inc
inc
and
and
stos
xor
test
aaa
je
into
jecxz
sbb
sahf
push
inc
mov
div
cmpsl
lcall
pop
ss
rcrb
cmpsl
fistps
fcoms
nop
mov
mov
out
in
push
cld
repnz
mov
dec
mov
pop
push
sub
dec
inc
dec
cmpsl
fdivl
cmp
dec
push
fstl
or
roll
aam
test
out
and
dec
lret
mov
cmp
test
xchg
sub
xchg
sub
or
je
pop
and
inc
stos
loope
and
lods
pop
sbb
pushl
mov
imul
jge,pt
scas
adc
fists
jg
ja
push
inc
jns
jnp
bswap
out
pop
add
fcompl
sub
sbb
jmp
mov
sbb
stc
mov
pop
inc
ss
adc
xor
mov
pop
lods
out
adc
rorl
xor
lcall
sub
ficoms
ss
jg
sarb
xor
dec
outsl
sub
jae
iret
insl
cltd
enter
test
add
cmp
push
dec
xchg
inc
aaa
push
xor
push
xchg
xlat
cmpsb
lea
aam
xchg
pop
aas
scas
mov
ret
subl
xor
mov
scas
jge
xchg
pop
sar
ror
fisubrl
jns
sbb
inc
and
aam
cmpsl
lods
xchg
daa
ss
fstps
pop
push
inc
in
ja
iret
pusha
lcall
pusha
jne
getsec
adc
dec
cmc
sub
bound
or
pop
pop
or
movsb
xor
inc
xor
mov
and
test
jbe
adc
neg
sub
ds
adc
test
dec
fdivr
add
mov
bound
test
pop
test
sti
add
pop
adcl
lret
in
mov
cltd
jg
rol
pop
add
sahf
pop
sbb
dec
ss
mov
cld
xchg
xor
or
rcrl
mov
stc
sub
adc
sub
xor
add
in
pushf
pop
adc
mov
aaa
or
sub
mov
mov
jle
lahf
mov
and
daa
popa
jecxz
icebp
push
or
out
rol
pop
mov
sbb
lcall
cmp
mov
jae
loop
xor
shll
jb
sbb
jmp
xor
insl
sub
test
inc
lea
enter
shl
cli
jns
jo
mov
or
lret
pop
dec
or
cmp
hlt
cmpb
mov
repnz
mov
mov
pop
pop
movsb
popa
mov
out
add
mov
bound
adc
push
lea
dec
mov
mov
pusha
pop
lret
push
xlat
addps
mov
mov
mov
jp
push
pushf
fnstenv
mov
or
push
xchg
lods
xchg
inc
fwait
cmp
cs
out
adcl
lahf
ret
repnz
loope
movsl
pop
aam
adc
lock
pop
addr16
js
adc
addr16
mov
fdivrs
pushf
sbb
dec
dec
mov
sbb
dec
mov
andl
pop
push
mov
sbb
dec
dec
mov
mov
scas
pop
repnz
xchg
push
es
xor
iret
dec
scas
sti
cld
pop
jbe
imul
mov
mov
adc
mov
in
jle
repz
es
ficoml
cli
or
cmp
and
aas
and
fwait
mov
cld
aaa
pop
cwtl
adc
add
pop
dec
mov
mov
xchg
dec
leave
sti
cld
xchg
push
add
lcall
out
and
cmpsl
out
push
nop
jb
pop
gs
push
fwait
pop
xlat
shrl
and
pop
jl
idivb
xor
mov
adc
stc
aaa
jl
in
mov
imul
lea
stc
xchg
mov
mov
xorb
repz
add
fildll
fwait
neg
sbb
inc
loope
out
dec
scas
ss
mov
jge
ret
add
jmp
hlt
and
ljmp
ljmp
and
les
jge
out
es
mov
sbb
orl
cmpb
lcall
sbb
fs
add
scas
bound
push
daa
notb
xor
out
call
int
cmp
jge
mov
xchg
dec
cmc
dec
jmp
mov
sub
les
out
scas
mov
les
scas
inc
mov
adc
insl
lcall
enter
add
leave
push
add
inc
push
mov
xchg
sub
or
sbb
jg
adc
je
push
push
mov
dec
js
dec
mov
mov
add
push
ds
pop
movsl
push
cltd
enter
cmp
lods
mov
pop
mov
out
sahf
xchg
mov
pop
lods
mov
jl
pop
imul
cmpsl
scas
mov
loopne
jne
ret
xchg
lret
add
sbb
push
or
sbb
arpl
and
fistl
cmp
xchg
adc
push
dec
call
movsl
notb
cmpsl
inc
xchg
lea
cs
pusha
mov
xor
push
pop
loope
scas
imul
mov
push
mov
lds
xor
ret
pushw
lahf
mov
mov
xchg
mov
xchg
inc
xchg
popa
mov
cltd
std
mov
in
add
jnp
and
decb
sub
addr16
imul
adc
sar
movsb
sub
xor
push
icebp
mov
popa
fldt
cmp
movsb
or
pop
loop
pushf
xor
jg
sbb
loope
cmc
pop
and
pusha
and
inc
and
mov
adc
cli
test
test
sbbl
adc
stos
insb
lcall
fldl
cmp
sahf
shrb
inc
fwait
xor
stc
mov
mov
icebp
mov
nop
sbb
cmp
cmp
dec
jge
lods
adc
jle
mov
fisubrl
mov
test
pusha
push
dec
sub
mov
jp
jnp
mov
adc
sub
imul
into
daa
mov
jecxz
push
mov
sti
cs
mov
sti
fcoml
xchg
stos
sbb
xchg
pop
cmpb
adc
int
icebp
adc
fmull
addr16
aas
dec
shrb
sub
mov
and
popf
jmp
xchg
sbb
push
sahf
mov
inc
pushf
adc
push
push
jns
jge
int
jge
into
xchg
adc
push
inc
testl
dec
add
addl
divb
mov
enter
loopne
cltd
repz
popf
inc
scas
jecxz
mov
inc
repnz
mov
fildll
adcb
or
test
mov
pusha
xor
sti
xchg
mov
mov
cwtl
inc
xchg
insl
in
adc
pop
lods
ds
sbb
icebp
mov
outsb
xchg
mov
popa
dec
cmp
leave
and
nop
sbbb
aad
inc
cs
xlat
cmp
sub
push
les
mov
fcmovnu
adc
cltd
test
xchg
mov
idivb
lods
mov
int
arpl
outsb
outsb
clc
xchg
out
xchg
mov
popf
xchg
shrb
push
add
or
jo
stos
and
pop
mov
test
movsb
out
push
or
pop
adc
in
imul
test
jns
out
test
lods
mov
add
stos
nop
fwait
sahf
stos
pop
jecxz
pop
and
lods
dec
jl
mov
pop
mov
fmuls
bound
repnz
test
lret
mull
icebp
sbb
inc
push
jmp
scas
popa
adc
insl
icebp
cmp
or
das
ret
insl
icebp
data16
pop
add
mov
lret
rorb
into
jg
inc
lret
jl
mov
loope
lahf
inc
rorl
xchg
xlat
push
clc
je
push
fisubl
dec
add
into
dec
test
roll
daa
stos
adc
int3
add
mov
xchg
push
dec
jae
call
or
jno
test
and
jae
cli
orb
repz
jbe
push
inc
sahf
sbb
cmpsb
call
icebp
mov
jb
lods
and
adc
call
xor
pushf
mov
dec
add
mov
or
push
xchg
or
gs
jmp
vphadddq
jle
xor
jecxz
inc
out
push
jbe
movsl
and
push
imul
lock
rorl
jp
pop
int
and
adc
or
cltd
dec
out
jmp
sbb
mov
ds
cmp
mov
cmp
aas
dec
into
sbb
ss
and
push
imul
jmp
pop
jne
mov
mov
es
xchg
movsb
xchg
adc
inc
insb
sahf
filds
adc
xor
lods
adc
pop
jns
rorb
cltd
jge
cmp
xchg
cmp
nop
push
mov
sub
mov
jnp
jb
sub
mov
sbb
fcomp
or
add
mov
cmpsl
inc
daa
jmp
fcoms
add
fstpt
addr16
fucomp
add
dec
std
xor
das
or
and
dec
cwtl
cld
dec
xchg
js
imul
dec
push
loope
pop
xor
rcr
jbe,pn
sub
xchg
dec
fdivrl
jmp
xchg
cmp
pop
js
insl
out
daa
inc
mov
cmp
dec
lock
add
notl
mov
repnz
and
loopne
xor
iret
push
jns
ret
cmc
cs
jb
in
xchg
xchg
fbstp
push
jnp
mov
sub
push
rcl
cltd
scas
js
fucom
roll
and
xor
mov
arpl
mov
insb
aam
dec
fcomps
mov
cld
xchg
fiadds
push
jne
mov
negl
jmp
pushl
lock
cmp
xchg
or
js
loopne
push
mov
push
mov
sub
inc
push
add
sbb
or
push
test
xor
cld
cmpsl
imul
adc
mov
mov
jecxz
push
or
inc
or
lret
ficoms
gs
xorb
pop
stos
ja
mov
and
nop
cli
cs
sbb
in
pop
or
or
and
pop
sub
aad
je
stc
andb
clc
movsb
and
sbb
push
jno
lahf
jg
stos
mov
adc
sub
adc
push
fwait
xchg
inc
mov
mov
repnz
test
jne
insl
popa
shl
fwait
test
sub
test
ljmp
daa
into
inc
lea
popa
cltd
shrb
stc
push
in
test
lds
fmuls
cltd
push
inc
or
sahf
lret
test
inc
cmpsb
pop
add
fs
mov
mov
jle
mov
and
scas
adc
outsl
into
dec
jo
repz
idiv
insb
jae
add
cwtl
rcl
mov
stos
ret
lret
cmp
inc
ficoml
lret
lcall
imul
pop
data16
popf
daa
cmp
or
in
inc
daa
fisubrl
mov
mov
push
mov
adc
pop
mov
sbbb
push
in
gs
xchg
paddsb
xchg
xor
mov
daa
sub
popf
mov
idivl
mov
mov
and
adc
jns
xor
pop
push
fstps
dec
adc
mov
add
push
and
jae
out
and
push
loop
loope
nop
fldt
or
pop
mov
xchg
or
jmpw
movsb
out
xchg
fsubr
out
mov
jo
push
push
adc
xchg
mov
enter
cmp
pop
daa
icebp
fldl
xchg
divl
xchg
or
cmp
cmpsl
xorb
sbb
xor
jle
repnz
xchg
dec
not
jge
cmp
out
pushf
jecxz
daa
push
test
pop
gs
push
lock
sub
ret
lcall
push
arpl
test
sbb
out
mov
dec
test
mov
shll
enter
and
pop
sahf
push
sbb
hlt
xor
pop
in
pop
pop
cmc
lods
in
or
push
jnp
lock
xchg
dec
cwtl
loope
adc
les
in
sbb
dec
nop
cmp
andb
xor
push
or
rdmsr
xchg
add
add
sub
sarb
dec
pop
jo
add
push
sar
loope
shl
pop
or
rcll
outsb
outsb
cmp
rcl
pop
push
push
mov
sub
mov
add
push
fisttpl
sbb
sub
sbbl
call
push
lret
stos
cmpsl
movsb
jo
imul
ljmp
xchg
xchg
mov
test
aaa
iret
cmc
mov
fs
ja
mov
in
mov
cli
jns
test
mov
notl
jns
cmp
xlat
fisubrl
stos
jmp
lea
das
jo
rolb
stos
mov
ret
out
mov
fwait
jmp
pushf
mov
out
add
es
and
js
mov
dec
mov
das
dec
jno
push
push
inc
imul
rcll
adc
cmp
mov
int
enter
testl
xchg
ljmp
cld
into
pop
arpl
cmp
call
out
daa
ror
aad
pusha
xchg
leave
push
lds
jecxz
jns
jmp
mov
int
bound
insb
xchg
pusha
mov
popf
jae
mov
in
add
mov
jae
mov
cld
mov
sub
fimull
push
xchg
fstps
sbb
jmp
mov
out
add
xor
aaa
mov
cmpsb
lea
aam
inc
test
sub
xchg
sub
cmp
cmp
xchg
xchg
fdivr
sti
cmpsb
popa
jg
cli
inc
fcompl
mov
sub
jae
leave
shr
loopne
jecxz
mov
lret
scas
add
xchg
mov
pop
fstp
fwait
pop
xchg
xchg
icebp
cwtl
data16
push
es
or
xor
mov
dec
scas
fwait
push
loop
mov
das
or
mov
shll
addb
cmpsb
xorl
lock
jle
mov
xchg
mov
sub
test
or
jecxz
aam
sbb
jle
iret
mov
add
and
adc
add
jo
and
xor
mov
lcall
sti
lret
loop
lds
and
orb
lea
inc
xchg
or
add
aam
and
pop
mov
sub
sbb
push
lods
jae
add
adc
ss
sbb
jo
in
stc
cwtl
ds
jne
clc
int3
xor
bound
cmp
push
xor
das
push
jg
and
shlb
movsl
jmp
cmp
xchg
call
out
jle
and
clc
stos
push
push
jne
sub
add
adcl
push
cmp
pop
test
fsubr
mov
push
dec
sbb
fnstcw
mov
je
pop
cmp
mov
cmpsb
loopne
ret
outsl
ljmp
jbe
test
inc
mov
mov
mov
pop
and
fcompl
arpl
test
mov
fcoml
xchg
pop
in
rorl
mov
cmp
daa
mov
lcall
dec
jmp
or
iret
popl
shl
cmp
mov
repz
js
or
pusha
adc
repz
or
lcall
lds
idiv
xchg
mov
fs
bsf
aas
fsubrl
inc
lds
ret
fcoml
jnp
filds
cmc
aad
sbb
mov
or
xchg
jecxz
xor
push
mov
out
mov
and
inc
pop
int3
mov
into
adc
adc
imul
push
mov
cld
jns
xor
xchg
pop
jl
mov
mov
lock
push
jbe
fmul
lahf
shrd
sbb
cmp
adc
mov
repnz
aam
inc
das
pop
cmp
pop
imul
pop
pusha
jne
fsts
addr16
xchg
mov
out
dec
xchg
jae
cwtl
outsl
mov
xchg
aam
mov
enter
mov
inc
loop
cli
lret
stc
sbb
movsb
sub
push
adcl
jmp
popf
cli
xchg
pusha
lret
inc
rcrl
je
imul
dec
mov
pop
loopne
dec
cwtl
outsl
adc
ficoms
add
lea
and
dec
pop
ja
fbld
leave
xchg
jg
mov
pop
lods
push
stos
pop
adc
mov
pop
xlat
dec
insl
xor
sbb
lods
push
arpl
cmp
push
xchg
jp
cmp
jns
mov
adc
jge
rorb
push
hlt
xor
cli
jl
jmp
mov
adc
dec
ficomps
xor
rorl
loop
divl
jae
pop
ss
xchg
xchg
and
mov
or
inc
xor
add
ljmp
xchg
pop
pop
out
cmc
shrb
subl
mov
push
ds
clc
lahf
mov
mov
test
pop
push
inc
xchg
mov
xchg
imul
ret
mov
ja
mov
mov
lea
dec
adcl
fxch
mov
fldl
fstps
pop
subl
fsubs
movsb
mov
and
pop
inc
bound
adc
in
or
push
push
push
sub
ret
xchg
cmp
cmp
lods
mov
pusha
or
cli
xor
ds
stc
xchg
clc
leave
int
inc
punpcklbw
fisttpll
test
pop
pop
loope
mov
mov
sub
pop
sti
xor
jns
in
sub
ja
cmp
xchg
jp
mov
setge
outsb
es
or
insb
pop
enter
mov
out
lahf
imul
adc
cmp
aam
pop
das
mov
shl
or
outsl
movsl
jmp
push
mov
jp
jmp
mov
pop
inc
loop
data16
push
jl
aas
js
aaa
pop
mov
aam
jns
repz
sarb
jb
inc
pop
in
xor
imul
xchg
and
sahf
jbe
sbb
add
adc
test
in
call
mov
and
fdivrs
adcl
out
pusha
jmp
lahf
push
add
adc
roll
sub
jle
jmp
lret
mov
es
cmpsb
fsubp
jns
insb
dec
movsl
xorl
lods
jl
dec
ret
pop
popa
and
jmp
pop
push
fildll
out
ljmp
test
push
imull
mov
push
push
mov
stc
dec
xor
clc
lds
lods
pushf
sarl
xchg
sbb
lods
xor
loop
leave
insl
test
add
jae
mov
mov
and
push
out
stos
icebp
mov
fidivrl
ds
add
xorl
dec
push
jp
dec
lds
push
es
out
add
pusha
mov
mov
mov
jbe
xor
and
test
mov
mov
or
sahf
sbb
rcrl
mov
in
jae
jl
outsl
or
mov
popa
pop
and
push
or
dec
fisubs
pop
lret
jae
adc
scas
mov
outsb
jmp
inc
sub
jecxz
xor
cmp
add
cmp
jb
push
insl
test
inc
add
adc
jge
sbb
inc
addr16
mov
jge
mov
das
jg
rorl
cmp
mov
mov
and
std
insl
or
pop
cmp
loopne
xchg
inc
adc
dec
rorb
push
fstl
testl
sub
sub
add
ljmp
pop
lds
in
cmpsl
jb
leave
pop
out
sbb
flds
dec
sub
cmp
data16
adc
jo
push
clc
cli
xor
mov
xlat
mov
xlat
fstl
dec
sub
lcall
mov
ja
stc
lea
mov
xchg
lds
inc
in
aas
repnz
data16
xor
hlt
je
lods
loop
pop
jl
inc
xchg
lcall
test
mov
xchg
add
mov
sti
test
hlt
xchg
mov
int3
xchg
loope
je
mov
sub
lock
xchg
pop
pop
fmull
pop
or
push
push
test
push
das
sub
ret
inc
sub
lahf
std
adc
aam
icebp
aaa
icebp
stc
jae
pop
ja
dec
mov
fdivp
jle
mov
and
inc
cmp
cmp
cmp
push
push
sub
and
jae
fsts
mov
add
inc
inc
or
loope
in
sti
or
mov
ds
cmp
mov
mov
pop
notl
xchg
mov
pop
into
mov
mov
mov
arpl
pop
mov
aas
push
push
fistpl
xchg
loopne
mov
mov
in
popa
fdivr
pusha
mov
xor
add
push
push
ret
dec
daa
lods
mov
add
dec
leave
mov
xor
aaa
out
std
ljmp
pop
cltd
jno
bnd
fdivl
loopne
push
cmp
dec
jno
sbb
mov
stos
mov
push
push
inc
mov
add
add
mov
jmp
insb
add
shlb
lcall
mov
repnz
push
aas
push
jnp
fs
xor
jmp
stos
xor
adcb
fcomip
xchg
sbb
jecxz
mov
jmp
or
xlat
out
or
fcoms
pop
data16
push
jo
add
or
not
cmp
out
jnp
inc
or
dec
xchg
cmp
push
das
stos
gs
out
mov
lea
cmc
pop
test
xchg
dec
and
add
ja
in
dec
jmp
cmpsb
test
repnz
cli
adc
mov
cmp
push
dec
fimuls
add
cld
jae
pop
sarl
test
fsubs
sub
cltd
push
dec
push
fnstcw
mov
xchg
lahf
and
jp
adc
mov
lods
pop
jno
sbb
xor
jecxz
push
push
loope
jne
stos
aaa
pop
fwait
leave
cli
jae
cmpsb
jl
xchg
scas
mov
pop
add
idivb
cld
bound
call
or
sbb
pop
inc
jge
mov
xor
dec
mov
xchg
cmpsb
test
lcall
rol
repz
aam
es
es
into
jl
add
xor
cld
jae
in
lcall
xchg
dec
sbb
jno
jb
mov
push
js
add
enter
das
push
daa
mov
inc
pop
stos
sarl
cmpsb
xchg
sbb
dec
push
lock
add
or
shll
dec
rcrb
cltd
dec
movsl
fnsave
lahf
xchg
add
test
add
xor
je
lds
addr16
add
pushf
leave
push
cld
xlat
mov
push
std
add
stos
xorb
repz
sub
stos
jmp
fidivs
daa
movhps
mov
rorl
push
adcb
adc
lea
ret
add
cs
xchg
add
movsb
ja
mov
and
sbb
scas
mov
adc
sbb
push
sub
rclb
fsubs
inc
dec
adc
pop
inc
aaa
scas
and
xor
rclb
in
in
push
sti
insb
imul
ret
mov
enter
aaa
jp
sbb
pusha
sbb
aam
ret
sub
mov
test
call
ret
push
fdivl
lods
gs
inc
add
rcll
jge
lcall
sub
mov
lcall
cmp
xchg
je
sbb
mov
mov
pop
push
into
call
jp
pop
mov
fists
sbbb
and
jp
lods
add
add
or
jb
lcall
sti
je
fs
lret
xchg
cli
mov
mov
inc
into
addb
adc
and
jbe
mov
lods
int
in
pop
and
daa
pop
mov
in
sbb
cmp
push
insb
mov
jp
pushf
mov
mov
cwtl
mov
je
ds
iret
dec
jo
es
mov
dec
jge
lret
in
cltd
loopne
add
and
out
lret
fcmovnb
fcmovnbe
cltd
lock
xchg
mov
insb
lret
and
cwtl
jge
xor
pop
dec
jae
lahf
cmp
scas
sbb
shrl
test
in
jmp
mov
pop
fmuls
push
fs
mov
std
test
data16
popa
sahf
gs
stos
imul
lods
sub
lea
das
sub
outsb
iret
sub
movsl
sub
mov
pop
stos
mov
fwait
pop
cli
js
push
lcall
adc
sbb
add
or
cmp
test
pushf
add
mov
xchg
imul
mov
mov
mov
lds
aaa
ss
xchg
mov
test
loope
xchg
add
stos
fmuls
push
insl
scas
test
cli
cmp
mov
ljmp
out
call
adc
mov
enter
pusha
out
popa
mov
mov
imul
lea
movsl
push
fwait
repnz
movsb
jecxz
mov
adc
mov
xor
call
ljmp
jns
pusha
ljmp
cli
fisubrl
add
and
adc
xchg
add
mov
imul
cmp
notb
out
js
cld
shll
mov
daa
pop
mov
lods
scas
clc
xchg
mov
mov
pop
mov
sbb
cmp
mov
int
jnp
jnp
xor
sub
xchg
push
adc
mov
xlat
mov
push
sub
sbb
pop
int3
rorb
sub
fildll
mov
leave
enter
in
cmp
and
aam
rcr
scas
add
adc
sbb
nop
cmp
cmpsb
mov
push
loop
stos
testb
loopne
and
mov
jge
pop
push
xchg
in
sbb
fildll
ja
addr16
loope
fisttpl
aam
and
pushf
shr
bnd
push
rcll
cmp
jg
and
dec
jle
or
mov
push
cmp
pcmpeqd
cmpsb
sbb
fdivrs
sub
inc
sub
fisttpl
pop
test
push
xchg
test
or
jmp
rcr
call
pusha
rcll
cmpb
cs
cmp
test
int3
imul
xor
es
jp
add
test
sahf
ja
xorb
and
jne
add
push
stc
loop
lret
clc
enter
mov
and
jecxz
fsubs
ljmp
push
mov
pop
ljmp
cs
xchg
jmp
pop
mov
mov
push
rcrl
aam
je
jle
adc
jb
add
push
xchg
push
inc
sahf
lods
dec
xor
adc
cmpl
fisubrs
fimuls
or
push
dec
mov
insl
and
sub
mov
pop
xchg
or
jecxz
mov
cmp
and
stc
jnp
punpcklbw
div
lcall
jns
cmp
test
andl
pop
sbbb
jns
push
adc
inc
test
lds
mov
and
mov
popa
push
push
jle
push
lock
ficoml
cwtl
pop
cmpsb
or
sbb
std
push
daa
ss
out
sub
and
mov
adc
loopne
pushf
dec
adc
inc
mov
repz
lea
inc
push
lcall
adc
xchg
push
push
loopne
movsb
xor
cmpsl
adc
mov
cmpsl
jnp
jae
clc
mov
clc
bound
cwtl
daa
lahf
in
insb
cmp
adc
fidivrs
jne
sub
mov
and
popf
and
inc
xor
mov
mov
imul
sbb
push
cmp
and
ret
ret
mov
add
add
or
mov
cmp
std
je
sub
lret
inc
sahf
add
sub
test
dec
jne
mov
xor
xor
jns
daa
or
adc
xchg
fmul
mov
pop
ja
lods
jl
mov
pop
jns
data16
pusha
arpl
fnstenv
mov
add
mov
sarl
ret
icebp
sbb
shrb
fdiv
push
dec
scas
sub
jp
bound
mov
adc
dec
mov
dec
fdivs
mov
push
xor
dec
sbb
and
xchg
mov
sub
jne
pop
mov
dec
jbe
icebp
sbb
in
scas
movsb
add
sbb
das
popa
fistpl
addr16
cmp
sbb
mov
iret
dec
int3
mov
imul
pop
fsubl
nop
fldcw
xlat
aam
div
in
push
rcr
icebp
pop
and
das
pop
shlb
pop
inc
cmc
inc
sti
sub
and
cmp
imul
mov
xor
mov
dec
mov
stc
mov
push
mov
xlat
out
sub
notl
sbb
mov
cwtl
xlat
jb
lea
sbb
rcrl
pushl
pop
mov
cmpsb
mov
pop
aaa
data16
sbb
movsb
cld
sbb
lock
or
pop
dec
jp
pop
cmp
mov
jae
nop
mov
sbbb
dec
ds
test
xorl
jl
inc
push
and
mov
sub
in
lret
sub
jne
out
and
inc
jle
pop
je
fisttpl
outsb
ret
mov
dec
bound
jns
repz
push
mov
pop
lahf
repnz
mov
in
push
mov
jo
imulb
dec
jg
mov
jmp
jg
call
cmc
dec
sbb
les
or
mov
push
rcl
sbb
jo
lock
dec
push
pop
push
push
fdivl
movsb
std
scas
rcrb
xlat
xchg
pop
jle
cmp
scas
test
dec
mov
orl
cld
int
popw
dec
inc
push
addr16
pop
xchg
push
es
jo
cli
sarb
lret
adc
stos
fimuls
insb
sub
icebp
lret
jnp
cld
sahf
and
xchg
jl
stc
inc
out
sbb
addr16
jb
xchg
jecxz
into
movsl
xchg
cmp
sbbl
loop
mov
jge
rclb
add
shll
and
pop
adc
mov
add
sub
xor
enter
jns
insl
ret
bnd
popa
lret
pop
mov
or
xchg
jp
push
mov
jmp
push
aaa
orb
aad
mov
or
mov
push
mov
cmp
ret
add
cmpsl
lcall
lea
in
les
je
pop
cltd
jecxz
cld
in
pushf
pop
ror
inc
cmp
mov
pop
lods
and
pop
dec
lahf
dec
sbb
loopne
addr16
out
or
sti
inc
and
addb
cmpsb
dec
jno
or
loopne
inc
xchg
pop
imul
cltd
imul
loopne
push
jl
jnp
mov
jo
xor
adc
jmp
stos
sub
and
push
mov
push
cmp
mov
imul
mov
fcomps
int
sbb
insb
pop
adc
repz
sbb
sbb
jg
lahf
and
test
insl
adcl
and
pop
ja
jle
and
lock
xor
mov
in
pop
ja
cmp
mov
out
dec
sbb
pop
xor
xchg
imul
das
cmp
mov
sbb
xchg
mov
cmp
and
lods
dec
loop
ffreep
jmp
push
inc
cmpsb
push
dec
sti
sbb
xchg
xchg
into
cmpl
lahf
mov
jae
inc
mov
jecxz
testl
dec
loop
push
add
sarl
xchg
sub
stos
movsb
mov
icebp
adc
cmp
jp
sub
sub
mov
lret
pop
sub
ja
mov
bound
nop
in
xchg
mov
jg
dec
outsb
fsts
or
dec
loope
push
out
or
loope
dec
inc
sbb
sbb
push
pop
enter
add
fnstcw
pop
pop
mov
movsl
jmp
mov
mov
pop
das
int
dec
cli
mov
mov
xor
aas
pop
lods
adcl
cmpb
sbb
aam
in
mov
dec
or
push
lds
xchg
je
shlb
lock
mov
or
adc
insl
mov
out
push
jp
cltd
xchg
adc
jo
pop
test
pop
cmp
test
pop
sbb
cld
fsubrp
fisttpl
fcomps
jge
push
pop
stos
mov
out
jge
push
xchg
sti
pop
fistpll
mov
dec
add
call
filds
mov
push
das
sbb
test
sar
pop
pusha
lds
aad
and
ret
push
xchg
pop
insb
leave
pop
ficompl
and
adc
fldenv
xchg
inc
jo
loope
jmp
ret
aam
inc
or
aaa
test
or
ss
jbe
sub
push
lahf
mov
dec
xor
pop
push
ret
mov
pop
jmp
out
shrl
sub
inc
or
sbb
xor
mov
inc
in
mov
xchg
nop
fisubrl
test
and
sub
sbb
addl
or
clc
xor
mov
nop
sti
outsl
cwtl
test
in
or
push
pushf
sub
ret
mov
popf
jecxz
in
sub
aaa
cwtl
insb
aam
popf
xchg
imulb
loop
adcl
es
push
fidivrs
outsl
sub
adc
adc
cmp
outsb
or
xor
push
ret
push
adc
mov
push
jnp
rcl
or
xchg
test
jns
inc
mov
daa
mov
aaa
xor
jae
scas
mov
ja
sbb
out
mov
add
outsl
sahf
int3
lahf
sahf
sub
dec
iret
insb
dec
bound
shl
xchg
test
mov
stos
dec
fnstcw
sub
push
jp
jb
dec
gs
jne
xor
int3
sub
inc
sub
push
leave
cmp
insb
mov
push
pop
repz
sbb
xor
dec
shlb
popf
fwait
gs
push
cmp
cmp
sbb
inc
cld
and
mov
add
xor
xor
or
push
hlt
cmp
js
ficomps
aaa
xor
lret
sbbl
les
std
test
fdivl
test
jae
stc
in
mov
sub
lock
subb
ret
cmp
jp
call
filds
pop
mov
push
outsl
stos
lcall
addr16
cmp
cld
push
sub
jno
pop
sbb
adc
daa
xor
mov
mov
jl
ja
mov
in
movsb
test
xchg
mov
stos
into
and
sub
push
sbb
nop
repz
pop
call
sbb
jae
in
in
push
adc
fildl
in
jmp
dec
xor
stc
call
sbb
sub
lret
xchg
mov
fs
dec
mov
stc
out
xchg
inc
pop
and
ds
es
fs
sbb
mov
add
aad
pop
xchg
inc
stos
cli
mov
clc
mov
mov
lock
mul
xchg
xchg
jmp
lahf
jg
inc
pop
insb
pop
icebp
in
lds
dec
mov
lods
xchg
fimull
addl
aas
jae
push
clc
or
stos
pop
add
pop
mov
arpl
enter
add
cmp
fxch
out
jns
test
rclb
lock
call
and
push
stc
mov
lret
sub
sub
loope
push
and
dec
lods
mov
xchg
mov
xor
mov
adc
outsl
mov
xchg
mov
jp
mov
inc
push
test
and
or
xchg
and
cs
repz
cltd
fmull
adc
and
in
outsb
sbb
inc
mov
inc
jmp
inc
dec
mov
sbb
xlat
mov
mov
fldcw
leave
shl
fwait
pop
test
sarb
ret
lret
jmp
aam
js
ja
sub
inc
dec
les
cmp
loop
sub
xchg
fcomip
mov
pop
std
inc
in
pop
lods
push
pop
push
cmp
push
fldl
sbb
cltd
mov
in
mov
mov
mov
mov
sbb
mov
add
ret
mov
jecxz
pushf
jge
mov
stc
adc
addr16
sbb
fldt
and
dec
out
dec
mov
xlat
scas
inc
push
mov
pop
dec
enter
sub
dec
dec
pop
decl
mov
lret
aad
pushf
lret
sbb
and
cmpsl
scas
lock
push
imul
mov
jmp
rolb
jge
int3
dec
lea
jge
cwtl
hlt
insl
dec
sbb
popf
cmp
loopne
jge
roll
sub
ljmp
dec
push
mov
ret
sbb
jo
jae
xor
dec
add
loopne
sbb
mov
sahf
sbb
stos
out
mov
xchg
jbe
fnstsw
testl
test
dec
sub
out
es
aad
lods
pop
aam
rep
sahf
enter
pop
jbe
and
and
xor
imul
nop
add
loope
add
out
push
push
enter
cmpsl
jl
xor
hlt
movsl
xchg
push
push
shll
bound
cmp
mov
jae
jge
add
adc
sbb
and
sub
inc
lea
insl
fs
idivl
scas
cmpsb
sbb
pop
outsl
inc
shll
incl
mov
xchg
aas
aad
cli
add
adc
xchg
xor
sbb
mov
jnp
and
mov
into
mov
push
sbb
out
and
and
ret
lahf
addb
pop
push
push
cld
sub
mov
sub
nop
adc
pusha
fnsave
repnz
imul
fisubl
cs
insb
das
push
arpl
and
push
or
mov
xor
mov
inc
mov
pop
pop
movsb
fdivl
dec
dec
push
or
and
cltd
fs
cltd
std
loop
cmovl
add
ret
popa
lret
jbe
jbe
inc
jmp
jns
sbb
subb
add
mov
std
jmp
jle
cmc
add
jl
je
jg
rclb
sbb
sbb
pop
mov
cmp
xchg
jns
dec
xor
insb
sbb
mov
ret
icebp
fidivrl
and
insl
shl
repz
inc
filds
pop
add
push
insb
jne
js
pop
pop
sbb
lahf
lods
pop
stc
mov
jle
sub
mov
add
std
adc
push
push
loopne
xchg
popf
in
jbe
out
jecxz
mov
fstpl
jmp
outsl
fildl
add
test
arpl
jecxz
scas
push
adc
push
adc
cltd
push
xchg
jg
fidivrs
dec
popa
and
and
inc
fwait
pop
stos
idivl
push
ret
dec
push
loope
sub
fnstcw
and
add
pusha
in
jle
cmpl
cmp
test
dec
scas
stos
push
fiaddl
iret
mov
sub
leave
cmp
xchg
popf
or
mov
mov
jno
mov
rol
cmp
lahf
jle
push
inc
stos
arpl
fdivp
lret
add
jne
ljmp
mov
mov
mov
aas
xchg
enter
lds
xor
xlat
mov
repz
cld
repnz
or
or
ss
mov
dec
daa
in
lods
les
hlt
push
movsl
push
in
std
jle
jp
cmp
or
pop
orb
xlat
mov
sub
jle
jmp
adc
jae
push
sbb
imul
and
jo
xchg
jmp
out
in
jl
nop
mov
in
push
sbb
fiaddl
arpl
xlat
les
dec
jle
sbb
jmp
negl
aaa
mov
push
push
dec
movsl
cmp
xchg
adc
push
ljmp
xchg
cltd
add
pop
ret
sub
and
inc
cli
sahf
out
sub
add
gs
mov
or
and
add
mov
add
add
adc
mov
mov
push
push
xchg
inc
sub
imul
sbb
mov
dec
lock
mov
pop
hlt
mov
pop
adc
push
mov
mov
jp
push
f2xm1
sbb
sub
unpcklps
gs
arpl
rcr
imul
mov
mov
lret
fs
lock
int3
mov
sahf
xlat
mov
sbb
and
rorb
jns
mov
xor
sahf
xor
test
inc
add
mov
push
inc
cmp
cwtl
mov
push
fsub
adc
stos
jns
jns
mov
in
jb
mov
and
js
fildl
nop
sub
ljmp
int
popw
xchg
shrb
and
pop
rcrb
mov
fdivl
mov
pop
test
aas
jge
xchg
adc
mov
mov
jae
push
mov
inc
ljmp
pusha
sbb
lods
out
mov
mov
cmp
rcrl
jmp
and
inc
div
adc
mov
inc
add
mov
dec
call
test
imul
sub
dec
out
mov
stc
fistpll
fs
les
mov
xchg
pop
call
rorl
adc
daa
lock
push
stc
inc
pushf
dec
xchg
pop
shlb
clc
sub
jnp
inc
movl
push
and
outsb
hlt
jb
mov
dec
dec
adc
scas
push
jge
mov
mov
xchg
scas
jae
je
mov
dec
ficoml
or
aaa
sbb
sbb
lcall
inc
push
xchg
movsb
mov
fistpl
test
movsl
push
lret
imul
lret
pop
enter
mov
jnp
rorl
das
pavgb
inc
jecxz
outsb
jbe
cs
insl
adc
push
xchg
jnp
mov
cwtl
decl
and
leave
add
and
sub
lahf
popf
jle
sub
dec
stos
and
test
mov
dec
pop
dec
aaa
sbb
adc
ret
bndstx
rcl
xchg
inc
jl
pop
cmp
dec
push
xchg
mov
dec
and
jp
aam
mov
or
in
insb
in
je
lret
mov
xchg
lds
pop
lcall
xor
adc
cmc
stc
or
or
jg
fsubrl
push
sub
aaa
xchg
ss
ljmp
pop
iret
adc
xchg
pushf
push
pop
fcoms
sbb
xorl
mov
lahf
movsb
shr
pop
lods
out
add
stos
xor
dec
fnstsw
xchg
icebp
sub
mov
sahf
popa
xchg
xlat
and
leave
xor
ds
pushf
aad
sub
std
inc
xchg
dec
push
cmp
push
lret
push
xor
iret
jmp
add
adc
push
or
sub
mov
lcall
xor
fistps
dec
push
xor
pop
and
cmp
xor
and
roll
decb
inc
push
pop
mov
xchg
ror
lods
sahf
lods
pop
inc
sub
jecxz
repnz
or
push
sub
lea
into
lahf
mov
mov
adc
cld
ljmp
jbe
jbe
inc
test
jp
pop
les
loopne
out
and
xchg
or
les
dec
cmp
les
mov
test
dec
cmp
sbb
jo
sbbb
inc
out
cltd
sub
movsb
pop
sub
mov
jb
mov
add
push
out
xor
data16
hlt
push
hlt
imul
mov
pop
fcmovu
test
sahf
movsb
fsts
icebp
into
jmp
xlat
pop
cmp
aad
shlb
sahf
inc
test
add
test
push
dec
pop
sub
push
jb
mov
mov
loopne
cmp
sub
and
fwait
lods
int3
and
pop
stos
insl
int3
bound
mov
mov
jmp
mov
dec
incl
pop
push
mov
adc
std
ss
xchg
or
mov
shll
jbe
iret
jecxz
js
je
jo
js
out
mov
dec
jl
scas
sbb
arpl
jno
mov
test
mov
clc
push
and
mov
popa
mov
sbb
arpl
mov
imull
cmp
xchg
rorl
in
or
loope
jbe
push
ljmp
xor
movsl
xchg
adc
inc
pop
inc
shld
sub
and
jp
inc
jl
add
jnp
push
or
sbb
push
mov
mov
pop
movsl
faddl
dec
cmpsl
mov
ret
loope
push
push
negl
xchg
adc
fwait
xor
int
lea
sbb
adc
pop
pusha
push
xor
movsb
enter
or
loop
jle
adc
leave
fnstsw
inc
dec
inc
test
sahf
adc
jg
adc
mov
imul
insl
mov
mov
mov
fadds
inc
mov
test
push
xor
stos
dec
dec
pop
or
inc
outsb
mov
mov
ret
mov
push
jb
and
xor
jno
dec
pusha
je
fimuls
inc
pop
addr16
imul
nop
dec
xor
cmc
aad
repnz
arpl
mov
cwtl
ljmp
lret
clc
insl
xor
repz
jb
adc
mov
arpl
std
aas
shll
pop
mov
stc
pushf
hlt
sbb
fistpll
int3
jmp
fildll
in
push
nop
jge
xor
xchg
mov
into
dec
fcoml
or
sti
fmull
xorl
add
or
jno
jle
add
mov
jae
lods
jge
les
idivb
xor
inc
in
lea
mov
testl
mov
xlat
das
call
icebp
incl
stos
xchg
jmp
sbb
inc
mov
pop
scas
lock
cmp
into
jns
les
push
hlt
or
dec
mov
daa
jnp
subb
cmpb
test
orps
movsl
add
lcall
lret
stos
cmp
pop
fmul
out
outsl
sbb
sub
sti
out
loopne
dec
mov
xor
outsb
std
dec
nop
add
mov
jge
pushf
pop
and
aam
pop
in
cmc
test
movsb
xchg
sub
add
in
leave
ffree
adcb
pusha
jb
pop
adc
sahf
xor
push
mov
mov
clc
sbb
je
fisttpll
pop
scas
cwtl
lods
les
or
xor
rolb
jge
std
mov
push
xorl
push
icebp
or
rol
gs
ljmp
jae
mov
jae
adc
adc
xor
push
xor
cli
into
clc
cmp
rcr
jl
inc
mov
loop
pop
decb
scas
inc
and
mov
insb
ja
adc
or
in
xchg
cld
inc
clc
push
ret
mov
loopne
adc
out
push
push
cwtl
fldl
adc
xchg
mov
add
xchg
inc
sbb
mov
insl
sub
cmp
add
fwait
pop
jecxz
mov
shrl
jb
mov
dec
das
mov
loop
dec
cmpl
sbb
dec
inc
js
mov
out
hlt
mov
sahf
lock
rorl
adc
jmp
pop
lea
es
jo
pop
and
cmp
sbb
dec
sti
xchg
mov
mov
pop
jbe
xchg
cltd
add
or
int
aam
cltd
shll
push
or
inc
imul
sub
test
sbb
push
aad
rcrb
or
dec
mov
or
inc
and
pop
sbb
popa
insb
push
addb
shlb
fs
pop
pop
in
jge
sub
and
pop
add
xchg
je
icebp
xchg
outsl
sarl
add
int
adc
subb
das
xor
jno
add
je
aad
popa
pop
imul
mov
pushf
jmp
loop
sub
enter
stos
adc
jecxz
out
push
pop
es
in
jae
and
sbb
xlat
xchg
mov
into
jb
shlb
mov
add
aaa
jo
rorl
push
sar
add
mov
push
jmp
ret
out
leave
mov
cmc
popf
ret
or
xchg
lock
adc
dec
icebp
or
outsl
inc
jecxz
rcrl
lcall
push
and
jne
adc
cmp
mov
pop
cld
xchg
pop
pop
mov
push
leave
jp
add
test
mov
dec
repnz
mov
das
mov
repz
inc
in
pop
dec
imul
inc
out
mov
pop
lret
jmp
or
push
jo
inc
das
sub
je
inc
enter
gs
cmc
das
inc
cmpl
in
data16
mov
and
jge
push
pop
cmp
aad
inc
jp
fisttps
outsb
push
mov
movsl
xchg
jnp
xor
imul
jae
test
or
jge
pop
movsb
adc
sub
aas
int3
jo
jmp
cmp
scas
pop
xor
dec
movsb
add
mov
jae
lock
lahf
jle
xchg
rcrb
fsubs
ljmp
cld
xchg
stc
fsubs
dec
cmp
lods
ljmp
cmpsb
clc
leave
std
in
push
xor
sbb
out
or
adc
aam
add
push
outsl
lea
mov
nop
daa
dec
xor
out
in
pop
addl
movsl
popa
push
mov
sbb
cmp
scas
inc
xor
pusha
gs
stc
ret
das
inc
mov
mov
push
insb
js
lea
mov
in
sbb
lock
inc
or
add
sub
lods
rcrl
xor
loopne
xor
lret
lods
push
push
pop
cmp
ljmp
jg
mov
adc
js
mov
or
repnz
arpl
push
sbb
ljmp
insl
mov
sub
xor
data16
roll
inc
in
jo
mov
js
imul
mov
enter
or
rol
clc
pop
adc
add
jbe
push
aam
repnz
test
xlat
mov
aam
out
ret
or
xor
push
jl
cwtl
test
psllw
stc
cmp
add
fisubs
test
pop
inc
xor
mov
cmp
iret
or
fldl
cltd
inc
loopne
push
mov
mov
pop
push
xchg
mov
hlt
fidivrs
or
inc
mov
sub
adc
mov
jp
mov
mov
aad
std
repz
mov
pop
loop
mov
fidivs
in
add
mov
mov
cli
jne
mov
fldenv
scas
inc
test
mov
and
fucom
shll
rcrb
mov
pop
sub
gs
iret
leave
ret
test
sbb
inc
aas
in
hlt
inc
lahf
or
mov
jne
mov
xchg
inc
cs
sbb
sbb
cld
push
add
into
enter
dec
push
out
out
hlt
in
icebp
and
or
out
rcll
or
xchg
cmp
push
sarl
jbe
mov
cmpb
notb
jl
aam
push
xor
jo
jge
xchg
adc
cwtl
movsb
add
inc
sub
and
roll
cwtl
ja
add
xor
and
iret
jno
insb
imul
loop
filds
fcmovnu
jl
pusha
push
dec
add
inc
orb
xchg
inc
test
or
adc
sbb
inc
push
in
imul
xlat
xor
push
repz
sahf
je
mov
jecxz
aas
setno
pushf
stos
fsts
and
adc
inc
xor
addr16
jae
mov
or
scas
jne
call
data16
cmp
ja
cli
hlt
ljmp
les
out
inc
add
push
test
in
aas
pushf
push
xor
lock
xchg
out
and
cli
stos
mov
fisubrs
inc
cli
outsl
pop
int
xchg
aaa
fildll
cmp
xchg
mov
movsl
ljmp
lods
pop
pop
stc
movsl
dec
scas
pop
sti
dec
jns
add
jle
dec
push
mov
or
inc
mov
test
push
mov
mov
enter
mov
xor
outsb
push
pop
pop
adc
mov
and
js
std
clc
cltd
add
sbb
notl
shll
inc
xchg
or
cmp
mov
cmp
add
ret
mov
imul
mov
dec
loopne
mov
loop
pop
add
icebp
iret
adc
or
jne
insl
fldcw
lods
cld
mov
inc
sbb
rcl
pop
fidivrs
push
cltd
arpl
jecxz
int3
push
mov
mov
subb
outsb
fisubrl
mov
gs
test
movsb
dec
adc
sbb
mov
xchg
dec
fdivrl
aas
jle
jno
push
arpl
orl
stos
mov
mov
push
orb
pop
jb
out
das
int3
adc
cmpsl
mov
push
out
jbe
gs
pushf
insb
stos
mov
inc
ljmp
popa
and
push
sub
popa
inc
mov
dec
stos
mov
sahf
push
mov
cmpsb
ljmp
cmc
cbtw
push
test
dec
mov
iret
add
leave
daa
lods
mov
or
mov
xchg
add
lock
add
dec
clc
pushf
xchg
or
push
mov
pop
lret
scas
mov
lock
mov
movsl
ret
push
mov
jecxz
lret
ret
xchg
sub
jge
mov
or
dec
mov
loope
adc
mov
sub
adc
xor
mov
push
xor
iret
inc
push
and
sti
aad
cmp
push
sbb
jge
test
cmpsl
sti
jae
mov
xor
aas
ljmp
mov
scas
les
pop
je
sahf
in
in
fbstp
mov
mov
adc
popa
mov
movsl
nop
dec
icebp
mov
cmp
jbe
dec
cmp
loope
dec
pop
push
mov
mov
jno
xor
clc
adc
inc
ret
sub
pop
mov
xchg
xchg
xchg
mov
out
scas
jge
jne
push
pop
add
gs
in
cmpsl
xor
mov
arpl
lds
push
sbb
xor
dec
test
sbbb
lods
inc
add
ficoms
pop
sbb
pop
jmp
sbb
cltd
imul
xorb
icebp
sahf
push
cmp
pop
pusha
out
stos
fprem
push
lahf
repnz
fisttpl
mov
xor
dec
and
and
push
inc
or
push
mov
xor
and
push
sub
into
inc
dec
lock
jns
adc
push
sbb
jecxz
subl
std
mov
imulb
andl
xchg
gs
mov
out
cmpsb
int3
test
sbb
and
aad
pop
adc
int3
daa
pop
jnp
outsb
pop
mov
or
sahf
add
aas
sbb
ret
cs
mov
dec
rcrb
imul
jb
call
movsl
and
inc
sub
lret
enter
push
and
mov
cs
ja
repz
mov
stos
adc
rcrw
aad
repnz
mov
sete
dec
int
or
add
je
imul
dec
push
inc
push
in
pop
sbb
loope
jge
cmpl
xchg
mov
jb
loope
pop
push
aaa
dec
sub
mov
test
cmc
lods
repz
cmpsl
aaa
xor
repnz
daa
or
imull
daa
jecxz
in
mov
mov
setne
xchg
and
ds
dec
mov
inc
cmp
in
pushl
daa
fisubrs
nop
xor
xor
and
pushf
fdivl
mov
inc
jo
xchg
ret
mov
arpl
sahf
cld
adc
and
dec
test
sub
pop
das
dec
sbbl
inc
mov
xchg
pop
xorl
pop
lret
push
daa
inc
jae
orb
iret
int3
cwtl
and
sti
fisubs
imul
xor
mov
jb
lret
ljmp
mov
push
sbb
xchg
inc
or
push
pop
pop
test
arpl
or
mov
rcll
movsb
arpl
pop
aam
sbb
scas
in
and
lahf
scas
jp
dec
pop
sbb
mov
or
imul
sbb
inc
sbb
or
sub
stos
mov
scas
inc
and
xor
imul
cmpsl
sarb
add
inc
repnz
push
push
sbb
int
and
cld
xor
add
dec
outsl
outsb
aam
out
mov
inc
jecxz
mov
sub
sbb
xor
cmpsl
pop
out
rol
xor
scas
enter
mov
cmpsb
fidivrs
mov
std
fsin
mov
pop
dec
pushf
pop
cld
sti
pop
ss
push
push
add
mov
xor
sbb
ds
add
pop
cmpsl
sbb
dec
mov
dec
scas
cmpsl
add
dec
pop
fmull
loop
bound
scas
adc
hlt
sbb
pop
lods
das
fwait
jb
leave
xchg
add
scas
cmpl
hlt
pop
mov
mov
inc
fucomi
or
adc
lcall
outsb
in
cmp
stos
sbb
out
xchg
fbstp
cmp
cwtl
les
insl
ljmp
mov
lods
sahf
outsb
mov
rcll
inc
dec
add
iret
lcall
in
shll
cs
lret
add
sti
xor
movsb
jge
pop
fs
lods
jg
leave
rcrl
sbb
cmpsl
shrb
stos
push
daa
cmp
das
or
mov
sub
xchg
jns
cld
lret
stos
dec
and
cwtl
cmp
and
xchg
pop
std
and
enter
fidivrs
push
push
dec
mov
jbe
call
mov
arpl
frstor
pop
es
inc
lods
cltd
fbld
pop
ljmp
testl
in
and
out
mov
inc
jecxz
cmp
iret
xor
fldt
xor
mov
fs
or
inc
pop
cmp
mov
fcomip
int
add
push
xor
pushf
pop
mov
loop
sbb
add
mov
mov
jl
sbb
clc
outsl
sti
lea
fwait
sbb
je
and
lcall
jbe
or
sti
mov
iret
mov
imul
mov
jbe
lds
xchg
dec
lods
xchg
lds
jle
jg
and
adc
xor
mov
inc
jb
lcall
inc
imul
push
sbb
jno
ret
sub
jo
xchg
or
cs
icebp
cmp
addl
cmp
jb
push
push
loopne
adc
ds
aam
dec
inc
pop
es
mov
mov
push
cmp
cmp
leave
mov
aam
dec
jmp
xor
jl
stos
sbb
hlt
push
mov
jp
mov
jne
lret
inc
pop
mov
sbb
xchg
push
push
ljmp
mov
mov
pop
mov
dec
clc
fcom
and
inc
mov
pushf
push
sahf
and
leave
inc
cmp
into
mov
orl
cmc
lods
jne
jb
xchg
mov
in
test
mov
cld
aad
push
xchg
mov
push
fnstcw
mov
iret
lods
or
aaa
shll
pop
inc
add
push
cmp
cmp
pop
push
xor
es
imul
mov
fbld
mov
add
adc
add
mov
mov
lret
fisubrl
jle
lcall
mov
ds
clc
ss
inc
or
mov
ja
xor
aad
jl
mov
jae
and
ret
repz
add
divl
inc
jecxz
sti
cli
stc
jbe
pop
cmp
mov
cmc
push
repz
mov
popa
pop
fstps
movsl
push
test
xchg
mov
ficoml
outsl
sahf
int3
out
lods
cmp
jl
cltd
clc
mov
inc
enter
and
push
mov
imul
mov
std
cli
and
pop
inc
or
pop
stos
cli
loop
fwait
lods
mov
mov
xchg
bound
dec
push
loop
lea
addr16
lcall
or
loop
adcl
movb
aad
mov
fisttpll
push
lock
les
out
aaa
add
dec
xchg
push
xor
popa
mov
mov
inc
mov
push
repnz
fstpt
push
mov
bnd
in
push
push
mov
mov
inc
enter
jo
fiaddl
dec
fucomp
mov
inc
jle
imul
ss
xchg
xchg
sub
jp
or
mov
mov
sbb
cltd
add
bound
fs
fldt
fisubs
lds
and
dec
xchg
push
push
or
movsl
xchg
insb
push
dec
mov
lret
xor
adc
push
lahf
mov
and
and
das
lods
push
push
not
je
push
out
pop
mov
pop
enter
mov
loopne
xlat
ret
movl
ret
xchg
js
shlb
rcll
cld
shlb
mov
and
mov
inc
hlt
jbe
lahf
inc
or
jp
lock
jp
lahf
adc
int
sahf
repnz
sub
xor
cmpsb
in
push
sub
cwtl
pop
sahf
movsl
mov
mov
cld
xor
inc
enter
cli
stos
pop
cmpsl
xchg
dec
enter
sub
and
cld
fstps
enter
hlt
mov
sbb
arpl
mov
push
xchg
pop
inc
fistps
std
aas
inc
jb
sbb
xchg
test
pushf
repz
sbb
push
cltd
ficompl
xchg
in
cmp
jmp
and
or
lret
and
jo
jmp
call
push
xor
mov
xchg
cs
jg
movsb
mov
dec
pushf
mov
test
fwait
jmp
mov
sbb
icebp
mov
push
popl
lcall
push
mov
insl
sub
xlat
shl
xchg
test
sub
pop
mov
nop
bound
iret
add
mov
dec
pop
mov
mov
shll
lods
add
jge
scas
jp
stc
lcall
lcall
mov
ret
test
mov
cld
andl
nop
sbb
scas
fistpl
inc
mov
sbb
icebp
fmull
jnp
arpl
push
xchg
inc
mov
nop
fidivrl
xor
push
xchg
cmpsb
adc
xor
push
adc
lods
js
lods
and
dec
aas
or
mov
imul
daa
movsb
imul
cmpl
nop
push
mov
dec
or
test
ljmp
cmp
and
push
or
sti
cwtl
dec
nop
adc
adc
ss
cmp
popa
jne
xor
inc
pop
inc
cmpsb
push
ret
lods
test
xchg
repnz
stos
stc
fs
cmp
int3
adc
xchg
cmp
hlt
push
aas
mov
bound
cltd
sbb
fcmovb
aam
nop
cltd
aam
sub
adc
out
stos
add
xor
add
push
movsl
fwait
jl
jp
sbb
push
popf
mov
in
adc
adc
add
xchg
jno,pt
push
mov
clc
imul
push
sarl
adc
cld
inc
xchg
dec
adc
jmp
sub
popa
fsubs
in
insb
sbb
pop
push
mov
mov
pushl
xlat
loope
xchg
pop
aas
pop
sti
loopne
clc
push
rclb
sahf
sbb
jg
or
scas
sbb
pop
sbb
test
fnstcw
pop
lds
pop
inc
pop
nop
jo
xor
lret
pop
push
sahf
outsl
jae
mov
dec
jmp
jg
dec
pop
sti
iret
sbb
xor
hlt
sub
aam
cmpb
dec
into
pushf
sarb
dec
imul
icebp
imul
fcoms
pop
mov
mov
push
inc
push
loope
jb
mov
outsb
js
repnz
inc
xor
shll
cmpsb
xor
push
aas
pop
inc
imul
repz
mull
pop
sub
fwait
mov
push
and
jnp
jmp
outsl
xor
push
xor
sub
es
mov
lret
cmp
mov
sbb
jp
jmp
incl
loop
cmp
fbstp
lods
int3
cwtl
xlat
xchg
fldcw
push
sub
jo
out
test
and
mov
jle
insb
pop
mov
add
sbb
lods
adc
adc
pop
ficomps
add
push
add
dec
insb
bound
imul
test
mov
test
mov
cmp
mov
fstpl
xchg
and
pop
sbb
negl
scas
flds
es
scas
test
xchg
push
je
mov
push
cmp
lahf
adc
scas
jno
mov
dec
loope
lods
sbb
dec
ret
inc
shrl
jge
gs
sub
out
xor
inc
push
outsl
cmp
push
pop
or
insl
push
xor
out
add
lret
sarb
repz
pop
movsl
dec
scas
jmp
out
pop
out
mov
ss
and
pop
in
pop
sbb
fisttpl
in
adcb
add
pop
sbb
test
test
packsswb
cmp
mov
cld
pop
mov
test
jl
or
xor
push
cmp
xchg
sbb
stos
insb
pop
shlb
test
imul
and
sub
aam
flds
mov
jae
fwait
mov
lea
lods
push
cmp
in
sbb
mov
std
xor
pop
mov
lock
jno
xchg
clc
adc
daa
jnp
shrl
popa
pop
aaa
cmp
cmp
sbb
jno
pop
mov
sub
jmp
ds
fsubs
or
xchg
pop
push
sbb
leave
movsl
mov
jle
std
shlb
insl
lea
cmp
mov
imull
lret
and
int3
and
jge
out
mov
mov
rolb
or
sbb
and
test
push
scas
in
shrb
inc
scas
cli
xchg
inc
dec
or
outsb
aaa
sahf
es
mov
mov
popa
mov
push
nop
xlat
jnp
cmp
mov
loope
cwtl
push
cmp
js
adc
lret
lds
xor
cmc
push
outsl
scas
stos
push
inc
xchg
or
push
sub
sbb
jae
inc
cmp
mov
ljmp
mov
popa
cmp
add
xchg
pop
jg
and
in
pop
test
popa
mov
mov
inc
xor
mov
xchg
jbe
dec
pop
lret
ret
mov
in
lea
mov
lret
sbb
out
mov
fwait
mov
sbb
das
push
test
mov
sbb
test
icebp
cli
push
icebp
enter
dec
jns
cwtl
sbb
popf
sub
or
rcr
push
leave
loop
rcl
fmull
jae
call
fsubs
lock
ret
cmpsl
cld
jle
insl
mov
xor
repnz
clc
rorb
xor
aaa
lods
adc
push
pop
filds
imul
addr16
out
test
and
ret
cwtl
sub
dec
test
pop
and
push
sti
fcoms
sbb
stos
das
outsb
jo
jnp
testb
add
cwtl
int
jp
xor
mov
add
std
dec
xchg
scas
mov
mov
push
clc
mov
out
sbb
movsb
pop
push
adcl
lcall
push
add
int
sbb
ret
adc
cmp
idivl
mov
pushf
cmp
cmp
in
out
mov
mov
sub
jo
mov
jmp
mov
inc
scas
or
or
jb
jno
addr16
sub
dec
aad
aam
lahf
jno
sub
in
bound
aam
into
mov
arpl
cltd
out
gs
mov
test
inc
or
rcll
movsl
sub
dec
pop
in
ljmp
mov
movsb
sbb
popa
rcl
mov
dec
je
pop
xorb
adc
lret
jno
sbb
movsl
sarb
xor
add
es
loopne
sub
sbb
sbb
clc
xchg
and
aaa
lret
cli
out
xchg
mov
out
fwait
pusha
adc
in
shlb
add
push
dec
loopne
jnp
loop
push
add
sahf
dec
xchg
insl
xor
jp
inc
pop
pop
out
sbbl
or
jp
clc
jnp
mov
andl
pop
scas
xchg
adc
imul
fadd
icebp
test
adc
ret
cs
cs
lock
mov
aam
add
add
lahf
sub
fcomip
rep
movsl
cmpsb
lret
ss
jl
fstl
adc
push
mov
rcrb
outsl
mov
fwait
pop
lret
push
in
mov
mov
xchg
pop
dec
repz
std
mov
adc
in
dec
pop
enter
xor
fs
pusha
mov
xchg
aad
and
lock
repnz
fidivs
mov
test
pop
cld
push
gs
into
popa
shl
jae
xor
cltd
data16
scas
ficompl
xlat
aad
adc
xlat
int3
cwtl
imul
call
test
lods
jp
aam
mov
insb
pop
add
xchg
loopne
mov
push
push
xor
jns
push
mov
nop
fcmove
mov
push
jbe
stc
lahf
inc
push
lcall
fidivl
push
orl
cmp
mov
in
adc
nop
adc
inc
fcomip
add
imul
xor
push
outsw
xchg
jno
call
mov
lret
fldcw
mov
in
mov
pop
mov
dec
pop
mov
dec
mov
cmpsl
stc
or
adc
test
mov
add
mov
outsl
shrb
pop
out
dec
fsub
jo
cmp
imul
and
cmp
notb
nop
out
cmpsb
iret
add
pop
scas
jecxz
js
movsl
adc
dec
push
adc
mov
sti
data16
xchg
inc
out
and
xor
fcom
push
push
icebp
es
mov
push
jne
repz
call
jae
mov
xor
xchg
clc
mov
jle
jo
mov
inc
mov
mov
xchg
and
cmp
jmp
or
les
mov
sbb
pop
push
and
movl
pusha
outsl
stos
jp
insb
lods
jmp
sarb
pop
lods
adc
in
loope
mov
test
and
in
fs
into
xchg
mov
std
inc
add
dec
xchg
out
lods
not
sahf
lret
cwtl
xor
and
xchg
data16
into
adc
lret
je
push
mov
push
push
mov
push
sbb
dec
inc
leave
in
sti
and
jecxz
aaa
mov
int3
push
fmuls
imul
adc
xchg
loopne
orb
stos
mov
movb
ds
add
xchg
jbe
lods
ret
fnstcw
inc
pop
test
iret
cwtl
or
movb
arpl
cmp
mov
sti
cmp
pop
mov
andnps
xchg
sbb
cmpsb
neg
ret
mov
mov
push
dec
push
adc
popa
or
dec
lea
jne
test
cmp
sub
and
mov
loope
orl
push
lahf
sbb
sub
fabs
xchg
jb
cmc
xchg
sahf
lea
scas
aas
push
cmp
loopne
inc
lret
bound
cli
jo
xchg
sbb
mov
ds
pusha
fsubrp
adc
and
test
cld
scas
mov
lds
xor
and
jge
xchg
mov
sbb
ret
out
lahf
dec
mov
inc
mov
ficomps
dec
mov
insl
daa
int3
in
lods
fwait
out
mov
sbb
xchg
lock
lret
loope
ds
dec
fnstenv
dec
or
jmp
ja
xchg
xchg
push
pop
mov
push
scas
jo
shr
aam
xchg
and
loope
xor
bnd
or
sub
test
mov
mov
jge
gs
loope
cmp
lret
rcrl
sahf
lods
cmp
mov
lcall
loop
pushf
xor
ja
in
xchg
sbb
sbb
inc
mov
and
stos
fwait
xchg
js
rcl
out
and
repnz
xlat
mov
cmpsl
rcll
imul
jo
leave
out
rorl
pop
pop
mov
es
ret
test
push
mov
cwtl
and
out
push
sub
mov
sbb
roll
fcoms
outsb
pusha
je
push
push
sub
ja
xchg
cld
mov
adc
xchg
and
sub
into
xor
insb
adc
sti
test
sub
call
xchg
loopne
xor
out
lods
and
repnz
nop
or
lds
ss
nop
adc
mov
xchg
aaa
ret
lods
cmp
aam
mov
psrlw
mov
push
dec
jmp
inc
jns
add
lcall
movsb
mov
cmp
pop
push
jmp
jbe
lret
lea
or
insb
mov
ds
hlt
jns
idivl
jnp
mov
lock
cmp
push
rclb
add
or
inc
jbe
pop
mov
outsl
xchg
xchg
iret
test
xor
idiv
inc
mov
pop
pop
addr16
ret
jle
push
jp
repnz
mov
xor
test
xor
ds
cltd
mov
push
xchg
pop
mov
push
sti
jbe
push
xchg
notb
push
and
lock
or
outsb
xlat
jl
ljmp
mov
ljmp
mov
mov
stos
xchg
push
movsl
adc
int
mov
adc
pop
xchg
lret
cmp
lds
orl
lcall
lds
aad
mov
clc
add
rcll
mov
repnz
iret
idivb
lods
sbb
mov
es
insl
jl
xchg
ds
inc
inc
sbb
push
cmp
mov
fs
push
mov
imul
roll
shll
mov
push
repz
test
dec
ret
ljmp
dec
lock
scas
sarb
mov
push
dec
sub
push
sbb
mov
push
pop
ja
pop
fmull
pop
aad
test
gs
insb
popa
rcr
jo
and
sbb
jne
mov
xchg
and
dec
rcl
dec
xchg
test
adc
push
push
or
add
mov
addl
mov
in
mov
into
nop
xchg
add
fucomi
imul
sub
mov
pop
bound
add
cli
mull
outsb
mov
lods
mov
add
add
xor
push
mov
lret
xor
addr16
aaa
divl
mov
cmp
cmp
adc
xor
mov
jmp
daa
adc
pop
mov
lret
pop
push
loope
xor
loop
pop
in
imul
mov
or
subb
pop
rcr
mov
cli
clc
cltd
test
push
fiaddl
cs
scas
sbb
nop
pop
pushf
mov
ret
loopne
dec
xor
xlat
dec
frstors
xor
jp
cmp
popa
mov
push
aam
clc
in
out
cwtl
sub
js
mov
mov
jne
adc
mov
int3
pushf
fisttpll
xchg
fldt
cmpsl
mov
data16
mov
dec
lahf
test
pop
stos
sub
xorl
or
shrl
sub
inc
mov
xor
rol
inc
aas
daa
mov
call
popf
adc
je
or
insb
inc
xchg
adcl
cld
ret
dec
push
or
outsb
mov
adc
cmp
jmp
imul
add
movsl
pushf
mov
inc
addr16
mov
push
ror
xor
sahf
and
clc
pop
dec
in
mov
pop
cmpl
in
pop
fs
add
pusha
mov
inc
aam
jno
and
sahf
mov
xchg
and
lods
clc
je
xor
fcoms
out
inc
and
in
popa
push
rclb
xchg
add
mov
imul
mov
lahf
outsl
stos
cmovl
xor
movsb
insl
ljmp
mov
in
sub
xchg
iret
add
scas
pop
push
xchg
cmp
sub
mov
xlat
cmc
dec
fldt
mov
insb
aas
or
test
add
aaa
fstps
test
jg
dec
adc
inc
repz
sbb
add
push
ds
mov
pop
repz
adc
mov
xchg
fisubrl
lahf
rcrl
clc
and
mov
dec
mov
or
mov
pop
inc
and
scas
push
xor
rorl
lcall
cmp
mov
ds
mov
test
fistl
add
push
add
jns
xor
fs
xchg
in
jmp
in
dec
loopne
add
sarl
in
das
sahf
add
sarb
lea
fstps
jl
sub
aaa
test
loop
testb
mov
fnstenv
roll
mov
add
fldenv
inc
add
mov
shrb
cmp
cmpsb
sbb
pop
into
mov
adc
jle
cmpsl
add
movsl
mov
es
aas
sbb
in
adc
jo
jp
cmp
stos
inc
mov
int3
add
jo
cli
out
xchg
cmp
popa
repz
and
and
jb
push
xchg
mov
inc
loopne
and
stos
out
push
lods
fwait
rol
adc
sbb
sub
mov
adc
cmp
loop
mov
and
fildl
mov
movsb
inc
fistpl
push
mov
shrb
xor
lods
insl
mov
enter
mov
jmp
jle
adcl
bound
pop
clc
ja
loop
loope
sbb
insb
in
mov
lea
into
xchg
clc
jno
push
lahf
jp
fldl
mov
and
pusha
pop
adc
es
jbe
mov
insb
push
icebp
sbb
gs
das
and
xor
xor
pop
loope
mov
add
jg
test
addr16
lods
aam
insl
inc
leave
add
repnz
and
xor
push
rcll
or
cli
loope
fistl
sti
xchg
xchg
push
mov
sub
xchg
inc
inc
pop
xchg
push
jbe
fs
les
jle
mov
dec
add
addr16
and
pop
das
mov
push
sub
notl
jmp
dec
push
fsubrs
ljmp
adc
cmp
pop
gs
mov
and
cmpl
setge
cwtl
dec
dec
adc
je
mov
cwtl
insb
and
inc
lcall
xchg
out
dec
cmp
ja
outsl
gs
dec
dec
outsl
inc
jmp
in
inc
xchg
mov
pop
fs
shrb
xchg
cltd
in
sbb
xchg
cltd
mov
cmpsl
lds
ret
daa
lock
sahf
jmp
push
add
repnz
pop
mov
mov
mov
subl
scas
imul
cwtl
mov
hlt
lret
sub
mov
jp
test
sub
cmpsl
or
jp
std
lock
dec
pop
jmp
jne
out
fld
ds
mov
push
adc
push
cs
lret
cmp
mov
xchg
xchg
adc
shlb
mov
lea
incb
mov
repz
repnz
imul
andl
xor
or
push
inc
mov
frstor
inc
pushf
adc
xchg
adc
mov
ljmp
fwait
dec
addr16
mov
aaa
test
adc
mov
or
inc
cmp
aad
cmp
scas
mov
jecxz
pop
mov
xchg
leave
int3
ror
das
in
push
pop
movsb
repnz
cmpsl
pop
or
adc
pop
insb
lea
xor
repnz
pop
ja
mov
test
cmp
push
sbb
popf
cmpsl
out
mov
jne
mov
jo
xchg
clc
scas
dec
jmp
in
mov
sbb
fmull
fldt
fdivrl
dec
fnstcw
mov
into
push
ret
jecxz
dec
outsl
mov
xchg
jns
loope
add
cmp
aaa
pop
lahf
sub
addr16
pop
adc
scas
dec
mov
adc
mov
dec
mulb
popf
ljmp
xchg
push
pop
mov
iret
xor
push
lret
mov
es
lock
push
xor
outsb
stos
inc
xor
incb
jmp
inc
push
rcll
pop
mov
sbb
cmp
rep
mov
jmp
push
or
lahf
mov
mov
lret
mov
add
fisubs
inc
pop
mov
push
jge
lahf
pop
shl
inc
sbb
xchg
dec
testb
jae
roll
cmp
cmp
ljmp
call
adc
imul
jg
sti
mov
jbe
out
mov
xchg
mov
xor
jge
ds
pop
add
es
outsb
sbb
call
xchg
push
push
mov
pop
orb
cltd
cld
sarb
inc
push
lahf
mov
jl
push
sbb
mov
cmp
push
and
pushf
sahf
or
fildl
push
fwait
mov
mov
sub
pop
nop
cs
xchg
in
in
or
int3
sahf
movsb
fisttps
pop
dec
lods
sbb
cwtl
and
or
sbb
lock
movsb
push
inc
inc
add
xor
jp
sbb
popa
mov
cli
push
xor
ret
mov
push
pop
popa
scas
shl
xchg
fistl
decb
inc
aas
adc
push
mov
push
mulb
jl
popf
pop
inc
pop
sub
and
adc
xchg
sbb
pop
in
pop
sub
jb
pop
outsl
push
aad
in
jle
cmp
cmc
and
jns
adc
mov
and
cmpsb
lcall
stc
subb
lahf
or
stos
push
aaa
or
or
shll
push
add
sub
cli
arpl
xchg
mov
aad
out
mov
or
xor
sub
pop
loopne
aam
add
int
sub
pop
rcr
scas
xor
nop
loop
aad
loopne
int3
icebp
aaa
jns
imul
and
add
sub
push
mov
mov
mov
mov
sti
and
rol
lods
lret
cmc
and
call
adc
out
lahf
loop
pop
cld
icebp
push
pop
cmpsb
inc
inc
mov
or
mov
lcall
movlps
and
and
jo
xor
clc
cs
imul
fwait
clc
inc
outsb
or
push
ds
pop
hlt
pop
adc
add
movb
subb
pop
lods
pop
adc
dec
xchg
push
xor
popa
cli
dec
jnp
push
addr16
lods
add
adc
push
int3
insb
pop
pop
imul
inc
cld
jb
insl
sbb
cwtl
add
push
xor
and
cld
xchg
sub
cmp
lret
fsubl
dec
adc
pop
imul
mov
pop
inc
stos
cmp
repz
test
idiv
sub
scas
jl
mov
pushf
pop
cltd
adc
rorb
mov
icebp
mov
inc
sbb
pop
add
jo
xor
dec
ficoms
pop
jge
adc
sub
adc
hlt
add
out
lds
ja
fs
pop
fsubl
add
dec
sti
arpl
repz
out
aam
jo
sbb
lods
out
je
and
mov
dec
cld
int3
icebp
dec
cmp
loop
sbb
push
lods
jns
jecxz
ret
dec
call
and
and
inc
xchg
lea
nop
pushf
pop
mov
xor
pushf
push
sub
lea
mov
test
and
inc
or
pop
inc
lret
in
cmc
inc
push
cmpl
mov
push
cmp
sub
sub
imul
ja
or
xchg
push
mov
movsb
frndint
aam
in
xchg
xor
jb
nop
ret
dec
lret
in
das
pop
dec
mov
inc
imul
iret
adc
lods
pop
inc
scas
xor
popf
push
mov
in
pop
pop
imul
cmp
shr
ret
stos
xchg
jg
or
sub
frstor
dec
pop
add
push
sbb
adc
orl
pushf
pop
jge
in
sub
out
xchg
das
xchg
push
xchg
adc
in
out
mov
xor
movsb
sub
add
jl
push
lcall
push
cli
call
mov
jb
cmpsl
sub
scas
cmp
add
lahf
cmp
cmp
inc
sbb
push
aas
popf
ret
test
xlat
rcrb
repz
nop
mov
push
mov
sbb
das
pop
jb
jnp
cmpsl
fisubs
mov
sub
scas
fisubs
push
lods
sahf
mov
push
inc
inc
jmp
jge
filds
mov
dec
enter
je
cmp
sahf
popf
sub
lcall
xchg
sub
mov
scas
data16
aad
fwait
xor
push
sbb
dec
mov
stc
mov
or
js
sbb
and
stos
popa
es
lcall
out
lods
cmpsl
jle
jge
mov
movsb
pop
mov
mov
inc
ljmp
push
push
pop
sbb
pusha
mov
mov
xlat
inc
stc
jmp
mov
mov
sahf
xor
add
xor
dec
fcomps
pop
pop
fnsave
std
lock
aaa
fistps
jecxz
pop
ds
and
fsubl
loop
dec
cmp
adc
push
push
mov
das
ret
dec
push
jbe
jno
sbb
push
cwtl
xlat
sbb
cmp
outsb
sbb
dec
ret
lcall
sub
mov
cli
or
outsb
xchg
ljmp
mov
pop
fidivl
adcl
dec
adc
sub
into
sti
out
jns
aaa
clc
push
mov
dec
popa
andb
pop
test
fwait
mov
outsb
mov
scas
fcmove
loopne
jnp
mov
jbe
xchg
bound
clc
adc
pop
jbe
loop
mov
scas
rol
xor
sub
dec
pop
mov
cltd
stos
pop
outsl
nop
scas
adc
sub
mov
sub
xchg
fdivr
pop
and
cwtl
fstps
movsb
mov
jp
aad
and
mov
sbb
es
dec
popf
push
pop
sub
int
aam
sub
nop
pop
and
dec
fcomps
cmp
dec
imul
jge
jecxz
pop
shr
scas
inc
xlat
adc
decl
enter
inc
sti
xchg
out
dec
dec
mov
sbb
cmp
inc
fidivs
jg
popa
movsb
aaa
sub
sbb
fwait
cld
mov
xchg
cli
out
jae
add
xchg
xchg
shl
push
inc
cmp
sti
push
push
and
or
fs
test
enter
jge
sbb
adcb
stos
lock
push
inc
push
fimuls
subb
mov
mov
adc
xchg
fisttpl
inc
js
popf
lock
sub
xchg
push
add
mov
add
dec
fists
ret
sbb
add
mov
push
cltd
ja
sbb
mov
mov
in
add
outsl
dec
mov
outsl
jp
pop
sbb
add
divps
out
rcl
mov
jne
fcmove
ljmp
movsb
sbb
push
sbb
inc
pop
insl
mov
xchg
ss
mov
jmp
test
cwtl
mov
es
mov
in
mov
push
push
cli
loop
cmp
fisubrl
movsl
mov
jle
dec
add
sub
outsb
adcb
loop
mov
icebp
push
add
fs
aas
pushf
or
scas
jmp
cltd
pop
movsb
dec
cmpsb
ljmp
lock
add
jbe
and
loop
or
or
sub
and
out
sub
and
push
push
shrl
and
push
xchg
leave
pop
cld
add
add
inc
push
iret
sbb
jmp
pop
dec
mov
mov
test
mov
and
imul
in
jle
push
imul
pop
shll
sahf
or
cmc
std
and
mov
std
sub
dec
mov
dec
pop
clc
mov
sbb
push
ja
push
out
shl
add
cmp
sbb
push
scas
test
adc
pop
mov
push
add
and
mov
xchg
and
cmp
cmp
in
adc
sahf
lret
xor
pushf
mov
mov
xchg
repz
inc
test
inc
insl
push
out
scas
or
fisubrs
out
sbb
push
enter
fucom
test
outsb
mov
pop
int
imul
sbb
addr16
dec
popa
or
ret
insb
popf
xchg
mov
xchg
cmpsl
stc
jae
lahf
pop
into
data16
in
mov
sbbb
jns
xor
int3
hlt
dec
mov
inc
das
push
pop
loope
sbb
into
mov
and
pop
or
mov
sub
dec
loopne
mov
fisttpll
sub
in
lea
cmp
or
jecxz
jg
div
lea
adc
aad
loop
out
es
lret
fistl
adc
les
ljmp
xor
loope
sbb
mov
sub
lcall
add
imul
push
mov
sub
repz
inc
mov
add
inc
out
js
sbb
call
mov
jge
inc
pop
xor
fld
jns
inc
mov
iret
xor
xchg
push
sub
scas
loope
rol
ret
jae
xorb
or
jne
mov
jmp
ret
push
sbb
dec
sub
adc
inc
test
mov
sub
dec
jecxz
jbe
push
aam
orb
fstl
adc
test
in
scas
push
adc
mov
cmpsl
mov
pop
inc
xchg
and
in
in
movsl
stc
xchg
sub
mov
mov
cmc
pop
xor
lcall
jno
fs
cmpb
cmc
sbb
sbb
insb
jae
or
mov
dec
adc
pop
fnsave
cmp
test
pop
out
fdivs
xchg
xchg
cmp
cmp
push
mov
iret
xchg
mov
cld
xchg
fs
mov
mov
mov
lock
cmp
lds
jnp
sbb
lea
adc
mov
cli
into
adcb
mov
mov
push
jg
insb
outsb
in
and
insb
in
push
dec
lret
add
fldt
or
pop
out
push
inc
pushf
iret
inc
mov
push
dec
push
outsb
or
loop
cli
push
imul
fstpt
mov
test
xchg
cld
jl
das
inc
dec
insb
add
and
push
fcomp
in
shll
insl
pop
int
js
xchg
test
fnstenv
cltd
cmp
pusha
mov
inc
inc
jecxz
xorl
cmpsl
mov
test
and
xor
mov
pop
lret
and
cmp
cwtl
mov
sarb
in
outsb
test
shrb
dec
shlb
filds
scas
xchg
lds
inc
push
jbe
mov
in
icebp
pop
or
cs
mov
inc
in
popf
sarl
das
pop
icebp
aas
lea
xor
ja
mov
pop
xchg
or
push
gs
stc
dec
movsl
inc
jns
aam
mov
aas
jnp
filds
cltd
test
xchg
push
mov
adc
leave
mov
mov
mov
into
ss
lret
push
js
mov
inc
dec
ret
daa
in
push
outsb
test
sbb
xchg
xchg
mov
inc
outsb
or
dec
addl
adc
xor
mov
sub
jg
cld
or
adc
jo
ret
subl
push
out
std
add
xor
sub
out
jb
test
xor
sarb
push
mov
mov
xchg
pop
adc
std
inc
cmpsb
inc
mov
inc
mov
add
add
pop
adc
mov
je
lea
lds
mov
sub
jle
je
jnp
sbb
repz
or
outsb
mov
dec
xor
lret
xchg
cwtl
sti
push
iret
leave
inc
mov
rep
push
popf
sbb
push
sub
sbb
out
xorl
pop
jmp
ret
lret
aad
out
inc
mov
cld
mov
and
push
cmp
mov
fbld
sbb
cmpb
xor
popf
pusha
mov
sub
mov
add
jmp
cmp
dec
xchg
enter
pop
loopne
sub
in
stc
addb
or
dec
cmp
fwait
jge
xlat
and
fwait
mov
scas
mov
add
inc
call
jmp
stos
out
jbe
lods
out
mov
test
out
repnz
ret
mov
fists
sbb
aaa
cmp
ret
loop
insb
test
hlt
sarb
icebp
aas
jge
cmp
and
xor
sahf
loop
cmpsl
adc
and
das
sbb
repnz
adc
mov
adc
push
pop
jno
inc
mov
xor
out
stc
aam
std
cwtl
pop
nop
sbb
gs
push
mov
pop
and
cwtl
popf
inc
fistpl
notl
cmp
in
lods
mov
jle
loope
fadd
add
push
pusha
in
mov
adc
popf
sahf
cld
sbb
pop
mov
das
fiadds
fcoms
sub
inc
out
sub
pop
dec
xchg
cmc
stos
cs
dec
icebp
psrlq
push
cmp
sahf
out
int
dec
arpl
lahf
jmp
rcr
inc
lret
popf
fucomi
xchg
jns
movsb
inc
and
incb
loop
sub
and
pop
insl
je
xor
sub
xor
mov
sub
and
sub
repnz
je
sbb
mov
out
lret
sub
stos
fcmovnbe
fsubrl
popa
cmpsl
jbe
stos
sbb
jae
fdivr
bound
adc
jbe
ss
xor
negb
jecxz
fisttpl
shrb
fstps
xor
pop
dec
pop
jle
arpl
nop
enter
mov
ss
out
mov
mov
push
mov
xor
add
pop
inc
pushf
or
mov
sahf
xchg
mov
cmpsl
xor
cwtl
dec
inc
fidivrs
adc
leave
ss
movsl
shll
dec
cmpsb
sbb
shl
mov
adc
leave
pop
mov
call
sbb
daa
fnstenv
xchg
idivb
cmp
xchg
subl
bound
das
or
push
sbb
imul
dec
callw
repz
in
sbb
adc
mov
xor
mov
xor
inc
loop
insl
fistpl
cmp
mov
or
repnz
mov
divl
stc
add
fbstp
ret
fs
pop
sbb
push
test
xchg
scas
adc
xchg
add
movl
aas
mov
pop
xchg
test
push
shr
pop
mov
or
mov
rorb
sar
dec
mov
inc
enter
data16
jbe
sub
lahf
xor
sbb
and
push
sub
cmp
int
pop
hlt
xor
in
lret
xchg
jmp
js
es
pop
and
repnz
icebp
test
inc
cmc
pop
push
xchg
fnsave
mov
dec
stos
sub
mov
stc
lcall
mov
mov
stc
je
sbb
idivl
xchg
mov
scas
jnp
fwait
clc
pop
in
sti
loope
push
jns
cmp
mov
hlt
ficomps
or
cmp
sbb
mov
test
rol
mov
stos
xchg
and
push
and
push
pop
sub
out
int3
stos
daa
lock
mov
cmp
or
xorl
push
aam
in
jns
loop
dec
ret
jns
inc
xorl
jnp
mov
mov
sti
push
cltd
mov
pop
aas
inc
mov
loopne
addr16
sub
xchg
pop
shrl
sub
out
pusha
stc
and
out
loop
jo
ds
sahf
roll
pusha
int
mov
xor
js
jp
lds
mov
leave
cmp
js
inc
je
lods
sbb
int3
mov
gs
lds
mov
cmp
add
fcomi
imul
jge
and
aad
cmp
sub
mov
inc
cmp
out
out
sbb
cmp
sub
xor
cmpsl
cmp
stos
mov
mull
sub
jno
add
pop
inc
xor
push
pop
and
jbe
pop
nop
test
stos
iret
ret
xchg
or
int3
xchg
nop
aad
test
subl
fdiv
mov
int
js
in
ja
and
js
inc
negb
push
cmp
pop
je
push
and
dec
xor
test
popa
xor
jae
jge
jns
cli
jne
dec
sarl
sbb
and
push
sti
mov
dec
mov
fmull
test
frstor
mov
aam
sub
inc
inc
adcl
scas
and
aad
test
ja
push
ja
ljmp
les
rcl
popf
dec
cmp
cwtl
dec
push
push
andl
xchg
mov
fistpl
ret
jno
in
popa
mulb
psubsb
popf
call
addr16
jb
testb
in
pop
into
mov
mov
cltd
mov
fsubp
rclb
lods
sub
into
cmpsb
xchg
sbbl
out
push
repnz
mov
into
gs
les
or
jl
sbb
or
mov
xchg
setp
repnz
mov
arpl
aad
or
jp
scas
insl
rcrb
fidivrl
xor
out
xor
fs
sahf
xchg
push
sub
clc
mov
imul
loopne
dec
data16
mov
sarl
jbe,pt
jns
add
movsl
daa
jbe
fisubrl
leave
loope
push
dec
leave
jp
xor
pop
inc
push
jl
inc
repnz
outsb
test
push
mov
xchg
add
jmp
pop
fs
sti
fnstenv
out
inc
outsl
push
push
mov
adc
mov
fstps
push
mov
mov
pop
jg
inc
int3
fstpl
mov
fisttps
cmp
enter
xchg
pop
js
jg
rorb
les
rolb
imul
jno
dec
add
sbb
fisubrs
adc
cmp
and
adc
loope
push
mov
sub
shlb
movsl
push
imul
push
filds
mov
jno
mov
jne
loopne
and
imul
xor
and
jae
mov
or
cmc
mov
mul
or
cmp
xlat
push
insl
mov
xchg
jle
xor
outsl
mov
fwait
xor
dec
xor
cmp
loope
dec
test
mov
ret
lret
je
push
jg
jne
jae
dec
mov
pop
pop
inc
jno
jbe
add
in
mov
jg
mov
stos
xchg
mov
das
popa
lahf
add
dec
sarl
sbb
add
xor
inc
mov
or
cmp
cltd
lods
subl
push
mov
or
mov
xchg
mov
out
cmpsb
xchg
arpl
mov
cmp
push
sahf
add
inc
adc
popf
addr16
xor
test
add
mov
push
and
lret
test
pop
gs
jle
mov
sub
mov
mov
xor
push
cmp
adc
fimull
sbb
xchg
push
shll
outsb
add
imul
out
xor
fidivs
int
cltd
jnp
loopne
xchg
push
xchg
pop
les
into
arpl
pop
cmp
pop
mov
mov
cmp
mov
sbbl
aas
in
rorl
ret
add
cmp
jmp
mov
xor
mov
lock
inc
mov
cmpsl
aad
inc
lret
pop
int3
mov
stos
mov
xor
dec
inc
je
cmp
push
mov
jae
dec
mov
adc
fisttps
mov
xchg
je
popa
jne
stc
xor
xor
ss
popl
adc
jecxz
mov
stos
pusha
adc
mov
xlat
mov
mov
lods
cmpsb
movsl
test
xchg
dec
mov
pop
cmp
mov
cld
cmp
mov
mov
aas
and
push
sbb
adc
mov
adc
loope
addr16
mov
cmp
lods
jg
push
lea
repz
xor
repz
mov
inc
leave
dec
lods
pop
adc
or
scas
test
jbe
pop
jbe
outsl
lret
xlat
jnp
mov
xchg
or
mov
jecxz
and
xchg
dec
push
shll
enter
mov
jecxz
sub
mov
sbb
and
stos
aaa
int3
jg
cs
insl
int3
jns
push
push
or
js
sbb
pop
sbb
in
cmpsb
pop
jg
jl
subl
xchg
mov
test
pop
xchg
cmp
les
xor
push
sub
or
sub
dec
into
daa
test
and
cmpsb
or
push
outsl
stos
arpl
adcb
or
pushf
gs
pushf
xchg
inc
fsubr
js
inc
sti
pop
push
xchg
test
std
pop
lods
sbb
push
in
clc
xor
pop
and
xchg
fcompl
in
mov
lahf
cmc
sbb
push
sti
push
lret
lods
pop
xchg
das
out
jg
adcb
or
ror
nop
fs
mov
hlt
fdivr
pusha
or
lds
mov
sub
dec
mov
fiadds
insl
shl
mov
mov
xchg
xor
je
sbb
push
mov
cwtl
mov
jecxz
and
xchg
mov
add
push
mov
fwait
cmp
out
jmp
dec
or
cmp
mov
inc
in
sbb
cld
push
push
inc
mov
subb
stos
cmp
in
popf
int
push
cmc
fidivrs
cmp
push
fisttpll
sub
pop
and
ret
pop
loop
or
push
cmp
les
dec
sti
xor
lea
push
fisttpl
cld
lds
jae
mov
push
or
sbb
in
jl
out
mov
push
lods
mov
push
and
fstp
out
and
and
int
insb
mov
mov
ss
add
cmp
sub
adc
cmp
sti
and
movsb
add
bound
xlat
icebp
inc
rcl
cli
out
mov
fs
sub
jmp
filds
push
test
jg
inc
dec
enter
leave
mov
lods
sub
xor
aas
pop
mov
or
stos
push
fiadds
out
mov
int
shlb
test
sahf
fstpl
fmul
rolb
add
inc
mov
inc
xchg
data16
fstpt
cmp
adc
xchg
jb
push
mov
xchg
jno
xor
daa
scas
cwtl
adc
dec
dec
xchg
subb
mov
ds
repnz
xchg
lahf
jmp
test
outsb
ja
fwait
inc
outsw
ror
dec
fidivs
cmp
mov
add
mov
nop
cmp
sti
xor
push
xor
mov
rclb
loope
mov
cli
dec
dec
xor
inc
js
adc
ljmp
sbb
sti
xchg
into
pop
xor
dec
xchg
pop
imulb
stos
mov
out
pop
fcmovne
in
push
insb
stos
aas
fidivrs
faddl
push
cmpl
mov
ss
xor
aaa
and
and
push
sbb
sub
mov
inc
idivl
idivl
movsl
and
out
aas
add
stc
fdivr
cmp
push
jp
dec
leave
lahf
arpl
les
sbb
js
dec
jno
bound
or
push
push
out
dec
mov
xchg
push
jp
jb,pn
dec
rorl
pop
sbb
mov
sub
clc
into
movsb
dec
xor
jecxz
ss
and
push
ja
and
xor
sbb
mov
imul
mov
fsubrs
mov
inc
adc
je
fprem
xchg
pop
scas
gs
and
mov
mov
arpl
and
adc
test
xor
sbb
pop
inc
adc
arpl
push
outsb
testl
jp
into
inc
sub
aas
testb
mov
mov
mov
mov
pop
dec
push
jg
shrl
lea
mov
sbb
dec
clc
lahf
fsubr
push
scas
lods
aaa
stos
jnp
mov
mov
stos
stos
dec
filds
orb
or
jbe
mov
jne
fmuls
sbb
sub
pop
shlb
xlat
adc
into
sub
aas
in
adc
push
xor
xchg
or
xlat
xchg
lods
inc
pushf
sub
pop
sahf
mov
test
xchg
fstl
loop
leave
mov
push
popf
sbb
cs
fcomps
jno
jle
bnd
loop
mov
es
into
inc
mov
and
mov
test
andl
add
cmp
xor
ds
sub
xchg
sbb
pop
sbb
pusha
lods
push
mov
mov
fistl
xchg
cmp
mov
sub
rcl
sti
aad
mov
decl
mov
addr16
adc
jge
inc
mov
cmpsb
inc
sti
mov
aaa
push
imul
xchg
push
sbb
mov
iret
mov
testl
mov
mov
pop
lret
push
fs
gs
stc
jmp
sbb
adc
rorl
cmp
mov
int
outsb
push
jle
rclb
lret
jae
lahf
stos
or
fdivp
jle
mov
cmp
std
je
sbb
out
and
jg
dec
dec
add
stos
add
fdivl
inc
test
das
mov
test
jnp
sti
mov
int3
mov
mov
es
pop
jle
shll
xor
adc
ffreep
out
data16
dec
out
or
dec
jge
mov
stc
rorl
scas
sahf
shl
out
pop
int
sbb
jle
fsubl
push
imul
out
and
fwait
leave
inc
cld
outsb
mulb
scas
aas
mov
loopne
cmp
xchg
cmp
inc
pop
add
ss
mov
jbe
icebp
sarb
mov
add
cmc
shlb
fstps
pop
movb
enter
aas
mov
mov
ficoml
js
sbb
out
lods
scas
loop
shlb
loope
ret
roll
push
shl
xor
mov
cmpsl
sub
pop
aas
pop
push
push
xchg
ljmp
pop
mov
mov
jne
movsl
cmp
sub
jmp
adc
lea
jb
inc
pop
and
imul
xlat
add
test
jp
or
div
test
jge
dec
gs
mov
pop
mov
cmp
or
pop
add
aaa
pop
inc
pop
mov
fbld
sti
scas
insb
jecxz
fidivs
pop
pop
test
jmp
std
jne
mov
push
cmp
ds
cmp
in
cmp
sub
test
scas
loope
push
pusha
cmp
dec
dec
xchg
gs
cmc
pop
jp
fwait
out
lods
and
pop
lret
clc
cmp
out
mov
mov
mov
push
or
nop
outsl
cmp
aad
jns
inc
shrb
xchg
fildll
jecxz
aad
push
popa
arpl
mov
in
xchg
sti
mov
scas
xchg
cmp
push
push
jne
mov
nop
mov
mov
test
bound
mov
mov
cmp
and
mov
call
pusha
outsb
jge
mov
pop
dec
sar
scas
xor
cmpsl
lret
jmp
mov
ss
mov
daa
stos
rorl
insl
xchg
lret
movsl
mov
dec
pop
dec
cmp
jecxz
inc
fidivl
cmp
aam
test
loopne
cwtl
incb
repz
push
xorb
orb
or
sbb
insl
jns
enter
dec
rcr
test
xchg
jle
shlb
adc
mov
dec
addr16
out
aas
xchg
lcall
sti
push
loope
inc
scas
insl
push
ja
arpl
pop
mov
sbb
cmp
push
enter
push
pop
lahf
fisttpl
adc
cs
jb
sub
mov
stc
push
xor
mov
aad
mulb
mov
and
mov
loopne
add
das
pop
insl
jne
fwait
js
mov
or
sahf
sbb
fwait
sub
into
ror
xlat
or
ret
orl
es
pop
cmp
sub
outsb
js
ret
movsb
addb
nop
ret
mov
lods
xor
xchg
adc
or
xchg
add
cwtl
pop
cmp
jmp
adc
pop
sbb
scas
scas
outsb
popf
cld
jl
mov
or
iret
cmp
xchg
push
lods
sub
mov
nop
jno
adc
push
adc
push
mov
rcr
hlt
ret
push
cmp
ja
mov
dec
sub
repz
ljmp
in
xlat
nop
in
sub
insl
pop
xchg
xor
imul
jl
loop
inc
mov
xchg
cwtl
ljmp
mov
jmp
fcmove
jge
subl
test
pop
gs
mov
cld
xor
push
rolb
and
into
inc
je
sahf
mov
pop
es
aas
or
add
push
mov
pop
cli
cld
pop
jmp
je
hlt
mov
sarl
add
mov
gs
inc
xor
outsl
enter
lahf
out
out
xor
cli
lock
scas
stos
mov
test
add
mov
in
gs
test
mov
shl
push
inc
out
lret
add
dec
push
pop
jmp
sub
pop
cwtl
bound
rcl
faddl
int3
or
stc
iret
cmc
ret
fcmovb
inc
scas
pop
add
ljmp
mov
sbb
sub
es
repz
ficompl
es
repnz
movsb
das
int
jb
cmp
cli
ja
sbb
lret
shlb
lods
sbb
inc
out
enter
jnp
in
test
ja
fdivs
scas
enter
jbe
ja
mov
std
pusha
aaa
aas
jae,pt
clc
ret
test
mov
cs
mov
pop
jge
std
inc
leave
pop
test
mov
dec
push
push
in
adc
jns
call
dec
in
add
std
and
pop
jo
mov
xor
gs
sbb
ds
push
jnp
mov
xchg
iret
xchg
loop
cmp
out
mov
dec
mov
repz
and
xlat
mov
sar
outsl
push
xchg
cmp
push
inc
shl
push
ret
sub
je
xchg
aas
loop
xor
loopne
bound
xor
clc
sbb
add
into
jp
std
js
pop
or
sbb
cmpsb
mov
sub
lcall
cmpsl
imul
aam
mov
mov
or
test
dec
lcall
int
and
std
or
inc
js
jge
and
xchg
das
mov
mov
lret
aas
jbe
mov
out
cmp
pusha
mov
stc
jecxz
mov
mov
mov
sbb
insl
popf
pop
inc
test
cmpsl
cs
outsb
das
cmp
stos
mov
bound
pop
lods
pop
addr16
je
mov
adc
inc
xchg
mov
divb
mov
aam
in
mov
pusha
lcall
jmp
mov
push
ja
cmp
int3
sub
sub
adc
pop
std
jbe
mov
nop
out
mov
leave
mov
push
jne
into
mov
popf
lods
movaps
inc
dec
sub
insb
add
iret
leave
and
insl
dec
sbb
rol
push
or
fs
mov
inc
imul
push
ret
xchg
add
mov
leave
lods
xchg
fistl
jmp
das
pop
ljmp
daa
mov
mov
leave
fisubrs
aam
push
and
jle
pop
pop
scas
mov
repz
mov
push
mov
dec
or
dec
and
fistpl
daa
ret
sbbl
movsb
loopne
inc
lods
into
xlat
mov
xor
cmc
dec
mov
das
xchg
icebp
fbstp
imul
push
ljmp
jg
cmpsl
roll
hlt
pop
mov
int3
sub
lods
add
out
repz
dec
xlat
mov
or
in
int3
subb
sub
sub
cmp
cmpsl
inc
out
or
add
mov
cltd
xchg
xor
out
push
movsl
decb
je
sub
stos
xor
or
std
inc
dec
pop
pop
ret
das
daa
adc
mov
lds
mov
arpl
ja
aaa
divl
xor
mov
les
scas
ficompl
xchg
sub
loopne
stos
loop
icebp
dec
in
mov
or
popa
mov
xor
xor
in
aad
mov
pusha
loop
jmp
jb
xorl
std
test
adc
mov
movsb
sub
dec
lret
test
fs
xchg
pop
out
jg
bound
repz
lret
jns
mov
subl
cmp
sbb
out
xor
call
and
sarl
sahf
push
mov
pushf
mov
shrl
mov
add
jge
inc
stos
mov
out
inc
cmpsl
sbb
enter
mov
roll
faddl
cld
jnp
push
push
and
aas
xchg
jnp
loopne
aas
leave
in
jae
fwait
mov
ss
push
mov
cmp
push
lods
adc
test
bound
cmp
loopne
add
jnp
and
push
pushf
std
mov
movl
or
push
or
mov
adc
inc
or
fstpt
loop
cmp
xchg
popa
push
add
push
cmc
sbb
into
add
inc
adc
insb
jmp
add
rcrb
shlb
mov
mov
addb
push
push
iret
inc
gs
aaa
lret
mov
popf
shll
jb
jae
mov
mov
nop
push
dec
and
aas
jmp
ficoml
xor
mov
std
push
mov
pop
mov
adc
inc
js
into
push
mov
mov
jecxz
push
dec
and
fwait
sbb
push
dec
pushf
enter
sbb
add
and
sub
into
fucomip
mov
lds
jns
mov
fcompl
idiv
xor
push
mov
mov
jp
push
pop
sub
sub
aaa
in
xor
xor
jecxz
sbb
mov
jno
in
in
shll
cltd
push
inc
outsl
lock
movsb
or
mov
push
notl
dec
pop
push
pop
aad
jne
xchg
sbb
pop
inc
aam
mov
popa
jno
gs
enter
inc
cwtl
stc
xor
push
mov
enter
lret
pop
fsubs
loop,pt
pop
jnp
mov
mov
lods
in
movsl
xchg
sbb
pop
mov
test
lea
sahf
xchg
cmpsl
leave
or
cmp
sub
adc
negl
sbb
cmp
pusha
xchg
pop
or
mov
scas
std
sahf
es
icebp
dec
dec
jecxz
popa
mov
movsl
xlat
push
adc
jge
inc
imul
stos
sub
out
sub
or
sub
mov
loopne
sahf
dec
js
fwait
loop
ret
popa
xchg
std
mov
pop
sub
fs
xchg
aam
pop
inc
pop
out
jae
or
push
sbbl
inc
cli
icebp
sub
or
jg
and
pop
and
pushl
nop
repnz
pop
sub
sahf
lret
mov
loope
mov
int
movsb
pop
mov
jne
test
std
test
xchg
or
js
fbld
mov
xchg
loope
or
sbb
stos
add
or
sbb
jecxz
int
mov
test
adc
into
ds
pusha
mov
cmp
mov
aaa
jb
outsl
rorl
xlat
iret
inc
jge
fimuls
push
cmpsb
insb
inc
xor
jl
addr16
mov
negl
out
ljmp
fdivl
repz
fwait
into
cli
fisttpl
insl
icebp
imul
sub
and
push
jg
icebp
clc
rcrl
inc
stc
mov
data16
ret
enter
xor
movsb
inc
lods
hlt
mov
add
cld
pusha
cmp
sbb
jl
mov
sub
sub
std
pop
mov
or
push
push
pop
bound
lcall
mov
sub
add
sub
inc
lods
dec
aas
cwtl
out
je
aam
xor
fcmovne
ret
pop
or
out
mov
mov
add
call
jno
add
jmp
das
and
jl
inc
push
pop
and
pop
hlt
jns
sbb
sbb
sbb
push
mov
sub
ret
inc
aad
cs
push
and
dec
fcoms
xor
jo
outsb
mov
rcrl
dec
xchg
ds
out
lods
lock
adc
cmpsl
fs
leave
cmp
fcmovnbe
aad
jo
repz
xor
dec
loope
jecxz
xchg
sbb
pop
ss
xchg
lds
mov
mov
sbb
test
sti
in
mov
cmp
int
push
inc
outsb
mov
add
mov
xlat
mov
movsb
rcrl
scas
sub
mov
fcoml
pop
inc
cmp
fists
out
dec
call
sahf
dec
and
sbb
mov
into
sub
mov
data16
xor
add
imul
sub
push
popf
shll
fistpll
jl
xlat
jmp
nop
sbb
add
cmp
fs
adc
ret
nop
mov
mov
imulb
inc
movsl
fistpll
inc
pop
sbb
cwtl
mov
test
jmp
mov
push
adc
sub
mov
outsl
gs
mov
mov
or
fwait
stos
ljmp
fmull
sbb
xchg
adc
mov
push
test
mov
andl
lds
js
cmp
aaa
scas
xor
idivl
adc
insb
scas
leave
mov
and
xor
cs
pop
daa
pop
sub
divl
test
cltd
xchg
insb
aam
aad
xchg
sub
stos
and
mov
fdivr
add
mov
pop
mov
mov
pop
mov
pop
dec
scas
jns
mov
les
xor
imul
shrb
mov
cwtl
nop
stos
cmc
mov
ljmp
xchg
imul
mov
in
sbb
inc
shrl
push
xchg
or
inc
dec
or
xchg
std
pop
pop
ret
call
or
lahf
subl
out
test
aam
imulb
sub
jecxz
adc
mov
repz
xor
aam
sti
add
sbb
cmpsb
cmp
jns
jle
lcall
sub
pop
xor
add
mov
xor
ds
and
fistl
call
aam
lcall
jmp
in
je
push
movsl
sub
mov
jle
stc
movl
jecxz
ret
addr16
cltd
jle
and
jmp
adc
xor
icebp
ss
adc
test
mov
rcll
dec
fadd
lret
cmc
jne
mov
cmp
js
sahf
ljmp
lret
inc
fisttpll
in
push
xor
xor
sarl
inc
std
xchg
push
jb
pop
aam
cmp
cmp
mov
loope
sbb
cmpsb
loopne
add
es
xchg
push
sub
and
iret
std
insl
pop
jmp
sarb
xchg
pop
xchg
sbb
or
cli
adc
into
push
and
cmc
iret
or
daa
subb
cwtl
xchg
cmp
fldt
mov
xorb
ds
dec
inc
addr16
scas
lret
sub
int
fdivrl
loope
loopne
outsl
aam
inc
adc
aad
nop
mov
mov
cltd
ret
fucom
negl
pop
mov
imul
push
loop
dec
push
mov
pushf
sahf
loop
mov
inc
out
and
gs
faddl
cmpsl
xorb
mov
and
xor
sub
ret
mov
lret
in
in
cmp
lcall
mov
sub
test
gs
xchg
out
lds
sbb
cmpsb
int
nop
fcom
add
cmp
out
pop
mov
sarb
in
add
pop
or
sub
push
out
add
cmp
sbb
add
loope
aam
mov
fcomi
add
into
dec
ds
lret
lods
mov
popa
jne
iret
mov
in
sbb
push
cmpsb
ss
enter
pop
pusha
add
cmp
fmul
loopne
push
aad
push
jb
das
inc
xchg
pusha
std
dec
mov
test
cmpsl
adc
add
adc
out
sbb
mov
cmp
or
je
sub
into
inc
add
aam
leave
out
mov
out
mov
lahf
loopne
push
dec
mov
movsb
bound
mov
stos
in
mov
sub
iret
mov
add
pop
push
das
push
pop
or
enter
arpl
movsl
add
push
in
movsb
popa
push
dec
aam
mov
sbb
cs
call
dec
jge
xlat
inc
test
inc
push
dec
sub
out
pop
pop
aam
or
pushf
mov
call
sub
cld
aas
in
xchg
aam
ds
adc
aas
mov
shrl
int
fwait
or
or
je
iret
jno
outsl
pop
pop
sbb
pop
rclb
sahf
outsb
push
xchg
bound
clc
out
stos
and
in
in
xor
mov
in
adc
add
mov
cmp
rolb
sarl
mov
and
xor
add
push
push
sti
mov
or
xor
mov
fimuls
test
fs
popa
daa
scas
mov
xor
leave
xchg
ret
shrb
outsl
xor
sub
rolb
pop
sbb
fisubs
mov
je
mov
and
aas
loop
cmp
sbbl
das
dec
out
push
mov
outsl
add
xorl
cmp
adc
popf
jmp
sti
jle,pn
rcrl
mov
mov
mov
push
inc
mov
push
mov
or
cmp
subl
daa
jbe
xor
les
cmp
cmp
mov
xchg
mov
xor
jmp
aad
pop
mov
mov
cmpsb
xor
pushf
mov
loopne
push
xchg
and
adcl
pop
jb
jmp
sti
in
sub
xor
inc
fwait
sti
mov
lahf
or
and
lds
jp
or
mov
jp
dec
sub
movsl
xchg
iret
sub
lock
push
mov
pop
sub
dec
adc
add
sub
fwait
imul
mov
pop
fiadds
lret
jo
xor
cltd
movsl
out
push
in
daa
fsubrs
and
sbb
and
sub
in
dec
dec
arpl
es
into
stos
xchg
mov
lods
push
xor
ljmp
mov
push
bound
pop
pusha
add
add
push
popa
pop
adc
push
xchg
mov
pop
add
dec
xchg
adc
jae
push
xchg
dec
mov
adc
cmp
imul
sbb
jl
sub
adc
pop
pop
dec
mov
pushf
sub
outsb
xorl
mov
push
frstor
test
mov
mov
pop
lahf
in
pop
xchg
call
js
push
addr16
mov
add
insl
repz
sbb
jle
sub
pop
std
pop
daa
jg
rcrb
adc
mov
or
mov
mov
jnp
movsb
mov
sub
fwait
mov
cmp
jle
popa
jl
out
aad
pop
aam
sti
bound
inc
pop
test
push
xchg
call
imul
fcomp
sti
popf
and
sbb
or
mov
and
cmp
pop
cmpl
jb
aad
jg
xchg
std
jo
std
lods
shr
js
outsl
jns
fildll
test
push
repnz
dec
or
adc
mov
xchg
push
or
adc
in
sbb
jl
paddusb
xor
xor
xor
sbbl
inc
and
jo
dec
mov
sbb
shrl
sub
lret
pop
ret
popl
cmp
aam
mov
push
mov
ljmp
std
cmp
out
call
sub
push
dec
rol
cmp
ret
sub
movsb
and
mov
mov
call
mov
pop
and
add
notl
sbb
cmc
aas
fidivl
lret
out
dec
call
pop
add
nop
scas
or
ret
fs
mov
mov
dec
mov
cmpl
dec
je
jo
cs
mov
imul
repnz
and
into
adc
cmc
stos
in
stos
outsb
cwtl
add
and
fcmovbe
loopne
jnp
xchg
aam
mov
pop
jno
sub
subl
inc
cs
xor
pop
outsb
popa
negb
mov
es
xor
cltd
fst
ja
jle
ds
sbb
adc
cmp
inc
into
jnp
jne
dec
mov
push
imul
push
fiaddl
stc
subl
in
out
jno
jo
fwait
mov
arpl
sub
fsubp
jle
pop
xor
outsl
les
mov
mov
scas
jbe
jae
pop
rcll
pop
mov
adc
dec
dec
push
jl
fistps
dec
mov
jecxz
movsl
ja
cmp
cmp
pop
xchg
adc
inc
movsl
movsl
jmp
frstor
adc
xor
mov
fs
shlw
notb
jmp
call
icebp
outsl
in
sti
cmp
addr16
repnz
sbbl
pop
test
inc
xchg
popf
pop
daa
fbstp
out
shll
ljmp
xchg
or
jp
mov
stc
lea
lods
mov
gs
mov
sbb
cmpsb
lahf
fsubs
lods
fnstenv
daa
repnz
addr16
jbe
mov
std
cmp
xchg
addr16
pop
andb
jae
wbinvd
jg
push
inc
add
xchg
and
and
jmp
jno
imul
ficompl
or
repz
jl
jbe
cmp
loop
sub
shll
add
stos
xchg
out
ret
xor
or
mov
jg
cmp
movb
mov
iret
fists
mov
mov
into
pop
movsl
xchg
inc
fiaddl
sub
adc
mov
roll
mov
xor
rol
xchg
jl
jecxz
fcomps
pop
xchg
cld
mov
push
sbb
test
test
sbb
xor
sbb
jl
test
out
aad
insl
push
mov
sub
jp
add
xor
ret
adc
mov
loope
outsl
push
test
pushf
jge
inc
pusha
dec
jmp
push
push
call
insb
fists
bound
mov
pusha
add
adc
lock
mov
stc
lret
insb
lea
stos
pop
cmp
sbb
lods
std
fcomp
pop
cmpsb
loopne
out
mov
cwtl
test
cmp
lods
jg,pt
add
jnp
push
xor
and
int
mov
inc
push
mov
aas
mov
inc
pop
lahf
ror
inc
ret
and
mov
fsubp
mov
test
and
xchg
clc
dec
pop
inc
jbe
jb
testl
cmc
mov
sbb
xchg
cmpsl
outsl
lods
mov
mov
push
push
arpl
lret
outsl
mov
sbb
cwtl
sbb
mov
sub
fisttps
popf
aad
push
arpl
jecxz
mov
in
mov
jmp
mov
test
xlat
cmp
daa
ret
hlt
or
jns
ja
pushf
cltd
push
add
bound
mov
outsb
mov
jno
cmp
jle
out
cmpsl
outsb
cmp
hlt
adc
mov
ss
or
add
mov
add
dec
mov
jne
stos
pop
in
stc
dec
scas
jb
cld
test
xor
inc
or
and
bound
pop
fcmovnbe
xor
loope
int
mov
pop
inc
mov
jnp
mov
push
xchg
mov
stos
cli
jge
popf
pop
adc
push
xlat
cmc
fldt
and
bswap
loop
jmp
mov
inc
inc
cmpsb
cli
cmp
ftst
mov
mov
add
aam
sbb
test
sub
and
in
repnz
xchg
jo
sti
push
jo
sbb
adc
stos
mov
xchg
push
rolb
rolb
or
dec
sbb
std
inc
aas
pushf
fsubrl
call
pop
test
loope
push
cli
mov
sub
jecxz
xchg
fdivl
loop
in
dec
dec
out
push
imul
sahf
test
scas
jl
adc
pop
mov
sub
xchg
mov
jge
mov
int
mov
in
int
pop
shlb
lea
mov
mov
dec
enter
ds
in
mov
mov
cwtl
iret
dec
mov
movsb
push
and
out
inc
cmp
xor
jnp
xor
ds
jae
repz
movsl
lahf
xchg
shlb
push
pop
cmc
mov
push
ret
xor
xor
pop
sub
scas
mov
pop
cmp
sbb
push
mov
rclb
push
gs
xchg
lds
lcall
mov
shl
push
cmc
mov
pop
aas
testb
in
cmp
andb
cmp
lcall
or
lds
data16
and
outsb
shlb
out
ficompl
lods
dec
lret
je
push
xchg
scas
aad
mov
aam
adc
test
xchg
dec
mov
in
ror
outsb
jb
pusha
jge
imul
mov
cs
in
jnp
sarb
lret
out
jns
ficomps
push
jl
addl
dec
cmp
push
sbb
add
mov
sar
inc
pop
xchg
push
mov
mov
cmp
movsb
pop
xor
decb
and
int3
xchg
sar
pop
pop
orb
add
mov
mov
clc
js
sahf
xor
aas
in
cltd
inc
call
or
pushf
movsb
cmpsl
pop
cwtl
adc
js
in
mov
jecxz
jno
lcall
loope
jge
lock
inc
and
popf
mov
mov
insb
xorl
stos
hlt
mov
or
adc
add
ret
xor
lret
xorb
adc
sub
adc
and
test
icebp
fmuls
fadd
jbe
dec
add
sahf
sub
xchg
jne
mov
call
out
dec
sub
mov
and
jle
adc
std
inc
pop
fildll
mov
lds
fstpl
icebp
xchg
mov
xchg
ja
popf
addl
sti
roll
sarb
pop
mov
xor
dec
shrb
ja
xchg
arpl
in
mov
sbb
jge
sub
out
hlt
fidivrl
mov
xlat
out
sub
pop
mov
mov
or
dec
lock
inc
adcb
jno
sbb
adc
popa
or
mov
imul
imul
xchg
push
adc
push
jmp
in
or
sbb
push
movsb
mov
int
lret
aas
or
jae
push
sti
xchg
fistl
jae
neg
ljmp
sbb
pop
pop
roll
jecxz
mov
loop
andb
add
and
jmp
adc
add
adc
adc
mov
mov
push
inc
dec
cld
ret
out
lret
lret
xor
adc
mov
fnstsw
ret
mov
loope
ds
xlat
cmp
jne
jo
mov
fcmovu
lahf
mov
hlt
int3
cs
dec
das
adc
or
cwtl
test
xor
pop
test
fsubrl
push
push
rcl
fnsave
sbb
push
xchg
cmpsl
jmp
rorl
mov
dec
out
sbb
push
xorb
mov
pop
aam
pop
sbb
decl
xchg
mov
xlat
push
movsb
out
jae
jb
scas
popa
mov
dec
lahf
int3
iret
cmp
pop
cmpl
adc
mov
jecxz
add
mov
fdivrl
mov
cmc
xchg
into
enter
mov
push
mov
pop
add
dec
negb
jmp
xor
in
xor
fndisi(8087
pop
adc
jns
inc
daa
mov
dec
ja
push
push
inc
or
loopne
outsb
ret
mov
cmpsl
loop
jmp
xor
cmpsl
lock
push
xchg
mov
je
inc
sub
out
leave
test
sub
adc
ss
scas
fdivrs
mov
cmp
std
jnp
inc
cltd
rcrl
mov
dec
jmp
sub
in
mov
cld
xor
sub
push
sub
adc
xchg
mov
jb
out
cli
push
mov
cli
dec
ss
mov
inc
dec
pop
pop
xchg
outsl
imul
dec
mov
fistps
shll
icebp
adc
mov
jbe
adc
mov
pop
mov
icebp
lahf
popa
cmpsb
xor
hlt
rorb
mov
aas
mov
stos
loopne
mov
add
add
mov
ss
push
push
or
pop
dec
xor
lcall
mov
popf
scas
rcll
mov
xchg
mov
imul
xchg
cld
xor
call
mov
jo
push
je
push
popf
leave
xchg
xor
mov
jle
jg
xchg
leave
daa
icebp
test
jge
mov
pop
sahf
addr16
loop
jg
pop
xor
imul
mov
sbb
aas
scas
shlb
cmpsl
popf
xor
jne
mov
loop
les
imul
xor
xchg
or
inc
or
stc
xor
push
xlat
aad
fldl
inc
mov
ds
xor
push
mov
mov
mov
inc
cmp
xor
imul
mov
xchg
pop
gs
mov
cmp
mov
mov
aaa
xsha1
cmpsb
dec
fcomps
and
sbb
cmp
andb
mov
adc
lds
jle
mov
xchg
adc
sub
shlb
div
sub
sub
ret
pop
adc
push
dec
mov
mov
out
push
or
mov
cli
mov
dec
sub
dec
imul
mov
or
xor
stos
jp
out
jbe
fmull
iret
int
sub
push
push
mov
je
sub
xorb
fprem
lds
cltd
insl
sbb
les
mov
roll
jns
clc
pop
inc
push
in
rclb
inc
sub
subl
aad
xchg
mov
jbe
data16
rcrl
loope
lods
pop
pop
push
decl
fld
dec
ret
pop
push
fnstcw
xchg
pushf
xchg
sbb
add
mov
or
mov
fisubs
sbb
mov
cmpb
xchg
int
shll
cld
add
adc
mov
jbe
sbb
adc
imulb
enter
pushf
cld
lods
inc
arpl
mov
push
into
mov
bnd
mov
cmpsb
inc
inc
push
leave
xorl
lds
loope
enter
outsl
xor
ret
mov
movsb
xchg
popa
and
adc
pushf
xchg
mov
cmp
lea
test
push
clc
fisttps
inc
enter
jnp
cmp
xor
jecxz
jbe
pop
dec
push
dec
loop
mov
aam
mov
outsb
and
int
and
adc
push
push
mov
idivb
imul
adc
leave
mov
or
pop
js
imul
sbb
cmp
in
push
popf
js
push
mov
mov
mov
cmp
sub
inc
movsb
movq
out
dec
cmp
lea
xor
cmp
xchg
or
arpl
rol
jnp,pt
hlt
cmp
mov
inc
mov
dec
add
lret
add
psadbw
mov
cmp
mov
ds
cs
pop
inc
jecxz
fucom
cmp
inc
sbb
test
sub
int
inc
es
adc
or
in
pop
pop
cmpsb
mov
inc
and
jnp
aas
dec
je
xchg
int
sbb
movsl
pop
repz
push
add
cmp
adc
sub
inc
std
test
ss
push
pop
je
cmpsl
jnp
aad
pushf
mov
inc
outsb
and
fcomps
les
fnstcw
aaa
xchg
lods
cmp
inc
push
cmpsl
fdivrp
cld
mov
inc
or
pop
std
loopne
lods
mov
push
fwait
mov
pop
add
test
cld
cmp
jmp
mov
dec
subb
outsl
inc
xor
adc
fnstcw
lock
iret
and
fcomps
test
repz
lock
stos
mov
mov
xor
mov
mov
push
fildll
inc
mov
rcl
movsb
fildl
repnz
sbb
lcall
sub
shll
mov
push
fdivrs
jno
lret
sar
dec
inc
imulb
seto
lock
cmp
lret
sbb
lock
sbb
xor
pop
push
ds
aas
aas
mov
mov
add
js
mov
sub
repz
in
into
fbstp
mov
mov
loopne
or
ja
cmpsb
fwait
nop
dec
bound
in
aam
inc
movsl
ljmp
lods
or
inc
pushf
das
mov
imul
or
add
imul
xchg
subl
movsl
inc
lods
insb
push
insl
xchg
inc
pop
jbe
jne
sti
mov
in
popf
jo
add
mov
xor
sbbb
or
xchg
cmp
mov
mov
inc
test
add
inc
scas
cmc
and
mov
and
cltd
shlb
rol
push
out
lods
ficoml
pusha
jno
xchg
dec
adc
or
loope,pn
jecxz
mov
loopne
popf
fsubp
data16
cs
or
es
rorl
pop
lcall
test
adc
push
arpl
lcall
xchg
lods
pop
or
rcr
pop
jmp
mov
sbb
fimull
movsl
hlt
stc
nop
xchg
fisttpll
and
cmp
mov
mull
mov
stc
insl
xor
nop
sbb
cmp
repz
mov
pop
jns
fmull
lahf
or
in
data16
push
ss
jne
repz
es
jge
xorl
and
sub
in
sub
aam
cltd
xor
aaa
xchg
mov
je
lret
clc
push
fs
or
pop
loope
mov
jle
pop
hlt
dec
pop
mov
push
add
mov
push
inc
pushw
xor
fucom
popl
mov
cmpsb
ss
sbb
iret
xchg
ficoms
xchg
inc
mov
mov
cmpsb
fbstp
fsts
pop
mov
push
or
mov
mov
push
dec
dec
push
imul
sub
sbb
sti
push
js
and
mov
sbb
je
sbb
arpl
out
xor
incl
jecxz
mov
cmpsl
jbe
mov
mov
xchg
pushl
cmp
fidivl
dec
lock
adc
bound
idiv
fcompl
inc
sub
xor
imull
subb
xor
fmull
inc
sub
lahf
sbb
mov
mov
mov
out
or
pop
xchg
xor
mov
jno
and
jp
es
lahf
mov
push
jns
fidivrl
cmp
push
or
cltd
sbb
shrl
int3
ja
sub
iret
jne
jae
mov
insb
mov
out
jo
inc
xor
adc
loop
outsl
ffree
shrl
jnp
mov
xor
pop
pop
jno
filds
mov
icebp
mov
rcll
fstpl
xor
imul
insb
pop
pop
loopne
xlat
in
into
push
fwait
jg
inc
mov
xchg
push
addl
inc
aam
pop
leave
push
into
pop
jns
inc
xchg
mov
fdivs
push
imul
dec
push
lds
fs
andb
dec
sbbl
idivb
cmp
sub
mov
loopne
pop
and
fcoms
push
mov
cmpsb
fldcw
xlat
xor
sub
mov
mov
movsb
push
inc
jmp
mov
jg
aaa
es
mov
mov
bnd
sbb
int3
aam
hlt
xchg
sub
dec
nop
insb
scas
out
cld
sbb
aaa
dec
and
rolb
iret
jecxz
lahf
mov
and
xor
test
int3
adcl
jle
adc
add
cmp
rcl
sti
jnp
jge
stos
icebp
icebp
add
ljmp
int
xor
ja
popf
jp
js
cmp
and
adc
or
inc
lret
inc
stos
inc
test
sbb
xor
or
adc
aas
push
rclb
sbb
add
ljmp
xor
ja
mov
out
hlt
scas
inc
lock
je
stos
scas
pop
add
cmp
mov
jmp
fistps
lahf
inc
rcrb
insb
inc
mov
in
push
xor
int
jne
xchg
je
xor
je
mov
fisubrl
jbe
int3
call
jmp
aas
outsb
adc
cwtl
pop
sbb
imul
ret
in
push
cmp
cli
sub
rcll
add
mov
into
in
inc
pop
ret
or
cmpsb
xchg
roll
shrb
je
stc
or
insb
shl
cmp
movsb
mov
pushf
fdivl
jle
aaa
jbe
clc
add
mov
and
adc
jle
out
pop
or
gs
xchg
mov
sbbl
fisttpll
add
fs
iret
or
nop
jge
pop
repnz
lcall
popf
mov
cmpsb
dec
std
ret
xor
in
es
jge
rorb
out
mov
push
outsb
icebp
stos
psubb
stc
push
in
mov
fisttpl
fisubl
xchg
add
into
dec
and
push
inc
dec
sub
bndstx
adc
mov
ja
or
loop
pop
jp,pn
loop
xchg
jmp
jl
lcall
imul
jns
mov
push
mov
sbb
addl
push
sbb
hlt
push
rolb
add
inc
ja
add
in
mov
movsb
mov
add
jg
rclb
divb
mov
add
aaa
mov
bound
mov
popa
pop
movsb
or
xchg
ja
xor
mov
repz
push
out
rorb
fldenv
cmpsb
loopne
xor
push
scas
push
and
scas
pop
dec
hlt
loop
sbb
jg
std
pop
pop
nop
mov
xchg
pop
ljmp
das
push
sub
ss
mov
iret
in
outsb
rcrl
lcall
clc
cmpsl
adcb
test
popa
int3
sti
rorl
sub
and
add
testb
movsl
ja
cmp
or
adc
push
pop
jge
test
add
dec
jmp
cmp
mov
dec
popf
js
push
sbb
imul
int3
push
enter
es
and
les
push
sub
mov
ds
lret
insb
ljmp
inc
adc
lret
add
sahf
push
jl
popa
adc
xchg
xchg
push
enter
lret
push
mov
push
pusha
in
pop
inc
rorb
inc
adc
mov
repz
sbb
stos
cmp
stos
icebp
pop
lret
cmp
aas
lods
xchg
xlat
out
and
pop
dec
shll
push
clc
popf
xor
ljmp
lock
cmp
in
jle
addr16
sub
mov
pop
rcrb
cltd
lds
mov
jae
mov
inc
xor
ss
adc
ds
push
jne
sbb
push
cld
outsb
cmp
rcrl
test
loope
shrb
inc
fadd
movsb
xchg
sbb
sbb
aad
push
rcll
clc
push
or
stos
inc
sbb
xor
addr16
sbb
push
jae
add
test
jmp
sub
jecxz
inc
jno
fbstp
bound
insl
mov
mov
mov
and
add
push
enter
jle
inc
cwtl
lret
push
mov
lahf
mov
jmp
inc
mov
cmp
popa
and
aam
add
mov
sbb
cmp
fwait
jb
repz
pop
sub
js
pop
outsl
add
fwait
mov
aam
pop
sbb
inc
in
mov
sub
out
stos
mov
fcomps
jecxz
scas
lret
pop
push
lcall
cmp
shll
mov
mov
arpl
mov
jnp
std
or
cmp
xor
test
rolb
and
cmp
scas
add
xorl
add
mov
dec
sahf
jmp
jge
jmp
or
fs
sub
xchg
outsb
mov
dec
pop
pushf
stc
fs
cmp
pop
and
dec
mov
xchg
sub
dec
xchg
sbb
jo
xchg
in
dec
lea
insl
test
sub
add
pop
sbb
xchg
shr
pop
fwait
imul
testl
adc
lods
subb
js
call
jo
cs
lahf
mov
push
mov
mov
in
sub
xchg
push
fwait
icebp
jg
icebp
mov
jnp
or
dec
jns
mov
pop
lret
add
jns
mov
cmp
or
imul
mov
adc
popf
mov
mov
fstps
xchg
fidivrs
dec
cmp
mov
mov
les
shl
cmp
mov
jb
loop
js
dec
mov
js
pop
stc
mov
into
mov
push
or
sbb
ret
mov
jmp
ds
push
cmp
push
stc
fcoml
jb
adc
pop
outsb
xlat
mov
inc
mov
mov
push
das
sub
push
add
and
js
xor
icebp
fcomi
inc
or
adcb
mov
addr16
fucomp
test
and
dec
repnz
in
inc
sub
lahf
hlt
sub
xor
add
push
dec
mov
adc
sbb
movsb
mov
shrb
dec
mov
xor
aad
dec
std
mov
adc
mov
aaa
xchg
xor
sbb
iret
mov
ret
ljmp
push
inc
push
shlb
add
insb
mov
jp
jnp
data16
jae
or
push
pop
lret
lgs
jno
loope
add
or
roll
into
mov
in
jmp
adc
clc
push
pop
push
jg
fsubs
insl
push
adc
jns
decb
in
mov
fnstsw
out
ret
push
cmp
out
push
and
shlb
imul
call
xor
js
sub
lret
jno
jnp
sbb
std
inc
xor
nop
es
adc
outsl
lock
mov
jecxz
imul
dec
jle
stos
sbb
cli
or
rcrb
ss
test
mov
adc
loope
jb
lret
mov
and
jecxz
ljmp
and
pushf
test
ficompl
or
cwtl
xchg
jnp
mov
les
into
pop
outsb
stos
xchg
cmp
cmpl
test
movsb
jo
inc
or
ficompl
and
lret
adc
shrb
add
add
mov
test
hlt
loope
cmpsb
pop
das
and
mov
pop
int
cmpsb
dec
and
leave
pop
dec
xor
les
fucom
lock
addr16
inc
or
dec
pop
jle
cmp
ror
imul
and
fiadds
repnz
dec
and
and
fdivl
into
push
cmp
xor
and
jle
cmp
jne
push
in
ret
int3
add
testl
or
mov
les
icebp
inc
xor
mov
xchg
and
mov
mov
out
iret
cmp
arpl
loopne
adc
movsb
dec
mov
cmp
dec
jge
bound
cld
and
in
dec
xor
outsl
aas
in
xor
add
movsl
aam
pop
cmc
cmp
adc
cmpsb
adc
mov
and
cltd
dec
arpl
sbb
pop
dec
test
fs
mov
inc
push
mov
insl
fs
das
dec
mov
shrl
orb
rorl
clc
mov
stos
pop
lds
cmp
scas
push
out
add
mov
lods
pop
jmp
pop
xor
dec
sub
divl
mov
fbstp
push
mov
push
cmc
mov
les
add
sub
mov
fnstcw
cmp
out
push
cwtl
push
shl
wrmsr
mov
jns
stos
add
aas
arpl
adc
fstpl
xlat
lahf
pop
mov
scas
outsl
push
in
cs
jns
mov
int
sub
xchg
sbb
jnp
push
leave
xchg
lock
sub
sti
mov
mov
inc
xchg
mov
out
js
out
frstor
dec
mov
jge
rcl
mov
loopne
pop
push
and
inc
xchg
shlb
sbb
push
das
in
cmpsb
xchg
and
popf
test
jle
jb
mov
mov
cmp
aad
in
pop
stos
popf
adc
mov
in
inc
xorb
sub
adc
stos
dec
out
hlt
clc
cs
scas
add
jbe
clc
das
lods
aaa
push
movsb
stos
insb
cmpl
mov
xchg
les
sbb
bound
mov
push
jmp
sub
lret
mov
push
jo
pop
pop
aad
aaa
cmc
stos
sbb
sbb
push
rclb
sbb
cli
gs
lret
dec
hlt
hlt
imul
jno
sbb
idivl
push
xor
stos
dec
and
xchg
pop
push
xchg
mov
adc
int
cmp
lds
mov
ret
inc
out
mov
sbb
mov
call
call
mov
xchg
or
imul
ja
xor
test
or
imul
test
mov
mov
idiv
adcl
mov
call
xchg
jmp
addr16
out
xchg
mov
push
ss
adc
inc
mov
enter
outsl
dec
dec
sbb
in
pop
lds
fiaddl
xchg
jns
aad
xor
jnp
mov
mov
cmp
ljmp
pusha
repnz
push
icebp
inc
int
fcomip
loopne
test
sub
jl
mov
mov
jne
jecxz
fisubl
inc
sbb
xchg
adc
mulb
imul
andb
test
js
cmpsb
fbstp
repnz
push
popa
inc
cltd
or
stos
jle
inc
jge
mov
sub
jg
rorw
loopne
lock
aam
nop
mov
push
cmp
fldpi
mov
pop
inc
inc
fstl
mov
pop
das
dec
ss
and
clc
call
pushf
jbe
sbb
lret
mov
or
movsl
out
xlat
mov
push
in
pop
xchg
repnz
daa
pop
ret
or
filds
iret
push
xor
mov
mov
jle
lret
jle
test
sub
xor
mov
xchg
lods
adc
sub
loope
jo
dec
push
cmpl
ja
scas
jbe
dec
inc
pop
enter
mov
scas
add
push
sbb
hlt
or
pop
call
push
movsb
daa
push
xor
out
ret
sub
lds
icebp
pop
sub
mov
stos
adc
pop
jne
decb
pop
into
fldt
jmp
imul
mov
push
inc
mov
orb
jmp
lds
ds
sahf
pop
pop
push
mov
ret
jbe
movsl
sbb
and
push
or
pop
pop
xor
inc
or
aas
dec
pop
mov
shrl
rclb
pop
push
adc
jo
daa
popa
fwait
sbb
inc
xchg
xchg
sub
sbb
sbb
jp
xchg
stc
mov
mov
out
jns
and
inc
add
inc
xchg
mov
fdivr
cmp
sahf
xchg
jle
sti
sbbb
aas
call
std
hlt
inc
in
dec
xchg
jle
out
lcall
sub
xor
xor
hlt
fldl
mov
sti
ja
sub
mov
cmp
shrl
jge
addl
movl
mov
push
cs
add
repz
pop
in
sbb
cmp
adc
push
sbbb
and
jmp
mov
jnp
dec
sub
call
lahf
mov
and
scas
dec
dec
gs
data16
sub
popa
sbb
jb
int
or
and
cmpsl
inc
inc
jecxz
mov
xor
mov
scas
icebp
pop
pop
ds
sub
sbb
mov
jno
popf
xorb
lcall
add
xchg
int
scas
push
or
ljmp
xlat
lret
call
push
xchg
adcl
neg
test
stc
in
mov
mov
lret
sub
stos
jmp
ret
dec
cmpl
pop
aad
dec
test
jmp
je
add
fidivl
movsl
mov
imul
mov
sub
out
xchg
popa
neg
fcmovne
cmp
jle
or
sarb
stos
sbb
cmp
loop
jbe
sbb
mov
and
pop
in
mov
int3
aas
sbb
and
lret
insb
mov
imul
inc
sbb
sub
lret
aad
cmpl
outsb
je
xchg
sbb
inc
das
mov
faddl
in
cld
insl
push
and
xor
inc
iret
pop
ljmp
jnp
sbb
pop
sbbl
lea
js
pop
xor
cmp
pushf
sarb
enter
ret
jae
push
dec
daa
jbe
add
cld
or
sqrtps
jecxz
mov
dec
adc
jo
cmc
sub
outsb
movsl
popf
cmpsb
mov
out
add
push
mov
out
xor
xor
movsb
and
call
outsl
pop
int
cmpb
mov
outsb
mov
out
call
outsb
add
nop
xchg
into
cmp
push
push
jns
mov
ret
lods
jp
stc
cmp
and
xor
imul
mov
fldcw
adc
adc
xor
add
xor
cmp
scas
push
repnz
divl
sbb
or
rcl
dec
jle
insb
inc
std
ljmp
into
leave
rorl
test
cwtl
cmp
mov
fcompl
ret
scas
pop
adc
clc
loopne
xor
inc
push
jp
dec
mov
push
mov
std
mov
dec
pop
dec
cmpsl
xchg
aas
jno
sub
clc
pushf
in
mov
mov
inc
mov
sub
adc
or
jl
add
cmp
sub
or
cmpsl
fstpl
jbe
push
xchg
dec
inc
ljmp
add
gs
and
lahf
mov
xchg
inc
jl
jg
xchg
push
jb
xchg
sub
mov
cmpsl
mov
mov
ror
sub
test
jbe
nop
pushaw
jmp
xor
repnz
dec
jne
or
sub
test
xchg
nop
aaa
xchg
sub
and
cltd
leave
in
pusha
dec
data16
dec
cmp
jb
add
lock
sub
adc
pusha
and
jl
mov
mov
dec
lods
jno
mov
xor
enter
arpl
jge
mov
jmp
jmp
pop
outsl
neg
call
pop
test
mov
add
outsb
cmp
mov
nop
mov
cmpsl
push
inc
cmp
cmp
es
lret
sbb
int
idiv
in
cwtl
shrl
mov
jecxz
aam
mov
fxch
jb
mov
cmpsl
std
fldt
push
add
sub
jecxz
jp
add
inc
sbb
mov
sbb
pop
fidivs
xor
mov
fildl
cmp
add
push
scas
mulb
in
cmp
xchg
outsl
roll
pop
negl
xchg
test
rclb
mov
repz
xchg
lds
add
cmp
sub
mov
jno
outsb
add
popf
in
rolb
out
push
iret
or
andl
clc
fldenv
jno
pop
aaa
or
mov
mov
jb
and
gs
icebp
test
mov
ja
push
push
jnp
rcrl
rorb
pushf
pop
mov
xchg
dec
pusha
int
sub
or
insb
int3
inc
subb
push
scas
mov
add
iret
sarb
cli
aas
mov
cwtl
jo
jne
and
aam
jle,pn
inc
lea
mov
pop
outsl
or
fldenv
shrl
and
mov
daa
sub
cmpsl
lds
xlat
cmpb
jbe
push
push
mov
cmpsb
pop
in
loope
lea
insb
mov
xchg
decl
movsb
stc
test
cltd
dec
mov
push
daa
pop
loope
dec
mov
add
imul
in
mov
push
xchg
sbbb
mov
pop
sub
mov
pushf
cld
adc
mov
mov
pop
mov
pop
jbe
xchg
test
jbe
xchg
sbb
cli
loope
test
pop
mov
mov
hlt
das
outsl
push
cmp
inc
push
mov
dec
out
xchg
add
int3
jbe
xchg
or
xchg
das
ret
aad
icebp
mov
mov
add
adc
rorl
mov
lods
daa
imul
movsl
adc
mov
xlat
sbb
ljmp
push
sbb
adc
fs
je
fisttps
add
and
jo
inc
adc
or
ja
xor
gs
or
jno
into
adc
and
pop
mov
loopne
jecxz
adc
push
sub
xchg
dec
enter
jl
lods
pop
stc
cli
lods
in
imul
sub
pushf
scas
mov
test
repnz
out
xor
sub
loop
dec
div
repnz
arpl
int3
insb
mov
pop
jno
jge
add
inc
sbb
popa
add
sub
push
outsb
scas
push
dec
or
inc
std
mov
lds
rcpps
arpl
pushf
outsl
add
adc
xchg
stos
in
jns
insb
cmc
fldenv
lock
repnz
out
subb
pop
pop
loop
outsl
add
dec
cmc
sub
xor
popa
rcr
loop
and
lret
ret
cmpsb
lret
push
movsb
add
sar
jg
dec
or
add
out
mov
xchg
xchg
jno
jnp
adc
or
sbb
test
jmp
scas
jbe
out
fwait
or
add
cmc
push
bound
mov
jo
mov
es
sub
js
and
mov
int
loop
mov
pop
push
xchg
ds
xor
adc
cmp
jge
inc
jbe
xor
dec
fistl
dec
incb
jp
pop
and
nop
das
jns
jae
or
dec
cmp
inc
les
and
sub
dec
xchg
fldcw
imul
cmpsl
or
inc
leave
jl
xchg
lret
adc
imul
sub
xchg
ds
lea
mov
das
xchg
add
sub
add
mov
sarl
xchg
jp
xor
subl
push
fnsave
cmc
cmp
mov
lret
jo
outsb
popfw
daa
or
pop
mov
mov
std
lret
dec
pop
test
lahf
sub
out
pop
push
sub
push
add
mov
inc
cwtl
ljmp
xchg
xchg
mov
dec
and
enter
fisttpl
aad
pop
sub
or
add
pop
ret
mov
sub
push
and
in
movsl
adc
adc
pop
fsubl
imul
push
mov
mov
adcb
push
mov
test
imul
fisubrs
aam
inc
ret
lods
pop
shl
scas
mov
mov
int3
outsb
sub
inc
push
icebp
and
push
or
gs
out
xor
mulb
cli
mov
cmp
mov
testb
and
add
fcoml
adc
cltd
inc
sti
lods
shll
lods
dec
dec
sbb
fwait
and
ret
jo
inc
daa
mov
sti
clc
inc
mul
aaa
add
xor
or
daa
lcall
inc
push
sub
push
adc
mov
or
mov
mov
mov
push
insl
int3
xchg
loopne
sbb
adc
rclb
adc
ficomps
nop
pop
sub
push
push
push
xchg
js
cmp
mov
and
add
arpl
cmpsb
fcoms
lock
out
shrb
xor
lahf
fdivp
pop
sbb
out
stos
mov
int3
icebp
dec
je
xchg
mov
sub
mov
test
mov
inc
aad
cmp
faddl
and
push
or
cmpsb
xchg
sub
jg
lods
mov
out
fs
insb
sub
out
inc
push
mov
jns
lret
sub
push
les
mov
enter
outsl
dec
movsb
es
dec
mov
and
mov
enter
mov
mov
fcomip
cmp
outsl
loope
sub
cmp
xor
movsb
push
add
or
sahf
or
jmp
pop
cs
mov
adc
xchg
lea
and
or
daa
dec
jnp
cmp
xchg
xor
add
xor
mov
cs
cmp
and
movsb
or
xor
sbb
das
ror
jl
jge
icebp
mov
shl
mov
std
imul
xor
ja
or
dec
sub
jae
fwait
sbb
ficoms
pop
mov
pushf
fsubs
dec
pop
repnz
movsl
inc
imul
inc
dec
pop
pop
or
mov
dec
adc
fs
mov
repnz
bnd
icebp
mov
stos
sbb
sahf
jae
jl
call
gs
out
shrl
fildl
int3
orb
adc
jmp
inc
push
mov
xor
insb
in
movsb
mov
movsl
mov
nop
js
adc
dec
lret
fisttpl
ret
sbb
clc
pop
stc
fldt
push
into
sahf
mov
sbb
and
push
sbb
and
out
mov
movsl
test
xor
fidivl
dec
adc
in
xchg
insl
jge
shl
arpl
cmp
test
mov
out
jmp
lret
push
fs
mov
in
sub
test
in
and
sub
and
je
mov
std
sbb
subl
jnp
js
and
repz
inc
loopne
cmp
subb
aad
cltd
mov
aaa
sbb
test
movb
icebp
sahf
pop
mov
movsl
enter
addr16
sbb
xor
cmp
rep
jp
loope
out
popf
pop
dec
stos
gs
out
cmp
pop
pop
adc
add
fs
ss
add
push
popf
int3
xchg
fs
imul
xor
jne
outsl
xor
xor
sub
xchg
push
xchg
out
cmp
ja
movsb
mov
xchg
cmp
int3
loope
imul
mov
iret
fcom
insl
sbb
arpl
ffree
imul
adc
out
scas
mov
test
imul
fdiv
lea
adc
dec
icebp
repnz
aad
xchg
cmp
lds
sub
imul
enter
sahf
push
inc
sbb
or
xlat
adcl
add
mov
mov
push
sub
sub
subl
test
fs
jle
fiadds
sbb
mov
js
fistpl
rorb
insl
push
inc
or
aam
push
shlb
xchg
out
jno
or
pop
nop
push
sahf
int3
xchg
dec
scas
cmp
push
ja
out
adc
daa
test
sbb
inc
stc
sub
xchg
fcomps
lds
orb
loopne
jnp
or
push
aas
hlt
or
sbb
repz
imul
add
mov
imul
mov
adc
movsb
daa
sbb
mov
in
int3
or
ret
std
xlat
mov
xor
movsl
xchg
xorb
sbb
mov
add
mov
fnstcw
add
push
sub
fcoms
hlt
xchg
xor
testb
pop
sbb
out
mov
mov
in
aaa
shl
jecxz
add
cmp
mov
cwtl
jge
add
loopne
jmp
adc
test
in
dec
shlb
mov
lds
push
jbe
sub
pop
fwait
and
cld
testb
mov
nop
push
imulb
es
rolb
jg
into
inc
inc
stos
jecxz
add
inc
test
push
sti
lds
enter
sbb
sub
lods
add
cli
cmp
adc
imul
in
push
inc
push
scas
mov
ljmp
pop
xchg
and
cmp
sarb
lock
cltd
push
daa
lret
mov
xorl
mov
call
jno
sahf
in
out
enter
insl
fcmovnb
add
gs
and
and
insl
dec
dec
jmp
arpl
xor
int
out
or
testl
shlb
cmc
lock
int
or
push
push
ja
outsl
cmp
stc
out
pop
rorl
lahf
sub
dec
dec
ss
out
int
dec
push
inc
mov
or
mulb
or
lds
xor
or
dec
adc
cld
fidivs
add
ret
pop
jns
stos
icebp
idivl
test
test
sahf
sarl
inc
scas
cmc
shr
inc
imul
cmp
movsb
sub
mov
stos
sbb
adc
out
dec
jge
mov
jo
js
mov
ja
push
inc
dec
dec
pushf
pop
jno
movsb
gs
xchg
mov
loope
orl
jb
cwtl
imul
icebp
aas
shll
fistps
cmpl
and
leave
in
in
fadd
jbe
ret
jp
xchg
fstl
imul
mov
jns
or
add
rclb
inc
mov
rcll
pop
push
push
mov
add
mov
outsb
sbbb
bound
add
popa
and
test
mov
jle
mov
or
subl
pop
jo
adc
sub
mov
daa
lcall
lcall
cmp
repz
push
and
xchg
popa
push
enter
push
mov
mov
cmp
jg
mov
sbb
xchg
aas
leave
jecxz
sbb
push
fs
rcr
cltd
insb
sbb
jno
aad
add
push
int
shll
lahf
fwait
inc
data16
lock
sahf
outsl
inc
inc
aaa
mov
or
jae
pop
std
cmp
xchg
scas
outsl
or
test
hlt
loop
fldt
jbe
btr
adc
push
adc
pusha
xchg
lcall
inc
cld
mov
test
adc
add
aas
push
fsubrs
popa
sub
adc
dec
push
push
push
ret
pop
mov
mov
lret
ret
cli
mov
das
fmuls
jle
ljmp
jmp
pop
clc
or
pop
out
dec
js
or
xchg
shrb
sub
mov
xchg
push
iret
pop
adc
or
rcl
inc
es
and
std
pop
push
outsl
hlt
out
mov
in
test
clc
or
pop
std
test
insl
or
movsb
or
dec
lret
push
mov
mov
mov
das
notl
in
mov
sub
jecxz
scas
xchg
mov
cmp
cs
outsl
cmp
les
in
pop
pop
ljmp
inc
cli
xchg
cmp
cmp
int
ljmp
orb
aad
push
jmp
sbb
or
pusha
jle
mov
cmp
sbb
jge
inc
subb
stc
inc
jnp
xor
push
jno
pop
mov
rorb
jg
and
and
insb
push
mov
lock
push
mov
in
or
xorl
or
lods
negl
push
jns
pushf
jle
pop
pop
into
xor
pop
mov
xchg
mov
fidivl
das
hlt
mov
jl
pusha
fdivrl
sbb
mov
daa
mov
in
sbb
mov
push
xchg
repnz
popf
aad
lahf
es
cmc
ss
xchg
subl
mov
mov
dec
out
or
sub
fwait
push
andb
push
cld
les
ret
jecxz
js
pop
mov
pop
push
scas
cwtl
and
test
call
pop
arpl
adc
repnz
roll
xchg
jae
scas
add
xchg
jb
test
les
mov
adc
xchg
push
pop
ret
lret
subb
test
jle
ret
ret
mov
std
mov
add
jp
xor
lret
or
sbb
sub
sub
ret
stc
push
es
xchg
roll
mov
xlat
mov
mov
inc
mov
daa
in
popa
jp
pop
push
mov
pop
mov
ja
mov
int
cmpsb
push
xchg
push
fimuls
repz
pop
dec
rcl
push
or
sub
mov
sub
icebp
xor
sbb
adc
or
sbb
lds
loopne
in
aaa
mov
mov
jge
mov
arpl
lock
lock
sub
gs
mov
dec
mov
ret
mov
add
scas
and
push
cmp
scas
push
enter
sbb
aam
dec
xor
stc
mov
popa
mov
add
roll
sbb
rclb
add
in
fcoml
dec
xchg
xor
inc
or
cmp
cmpl
lret
loope
push
out
xor
mov
adc
js
mov
stos
xor
mov
icebp
jnp
in
notl
ret
push
adcl
add
test
dec
cmpsl
ret
in
outsb
dec
cwtl
mov
imul
fdiv
fsubs
dec
dec
pop
pusha
stos
inc
mov
mov
sub
ljmp
mov
call
adc
xchg
dec
xchg
inc
sub
mov
out
imull
fcmovb
xchg
add
push
lret
out
or
push
nop
lcall
sub
enter
int3
orps
cmpsl
pop
icebp
in
js
push
lahf
lahf
insl
imul
push
xor
pop
cli
leave
inc
aad
movsl
outsb
jns
orl
xchg
cld
aas
mov
lret
mov
icebp
shll
andb
addr16
std
mov
pop
out
adc
das
int3
pop
jg
popf
pop
loopne
repnz
pop
dec
in
stos
sub
push
push
insb
mov
scas
dec
les
sbbl
push
jl
aam
rorb
inc
adc
sub
lods
ret
es
sbb
test
inc
inc
mov
push
stos
popf
lret
adc
lret
clc
mov
fistpl
push
ret
and
mov
sti
push
pop
pop
adc
scas
hlt
jne
xchg
jmp
bound
pop
test
and
push
std
sahf
pusha
mov
addr16
fcoml
pop
mov
lret
mov
imull
cs
test
inc
jo
push
or
jmp
jle
push
arpl
push
push
out
outsl
aad
jge
adc
in
pop
xchg
ret
out
push
fwait
stc
jmp
add
add
cmp
pusha
xchg
jg
fwait
inc
mov
inc
cmc
pop
lea
fwait
sahf
jbe
ss
xchg
mov
mov
imul
mov
loope
sub
aam
nop
pop
mov
mov
jecxz
aaa
inc
ss
add
arpl
out
out
cmp
pop
test
dec
or
cltd
ja
movsb
cltd
mov
lahf
dec
cmp
cmp
jae
xor
mov
sub
ja
jp
or
int3
cmp
mov
pushf
int3
push
add
mov
stos
movsb
pop
in
dec
jno
in
xchg
mov
arpl
mov
pop
xchg
aaa
stos
adc
shll
or
jmp
xchg
test
mov
push
rorl
mov
scas
push
cmpsb
ret
ljmp
pop
push
mov
dec
int3
mov
repnz
dec
adc
xchg
mov
mov
cmp
insl
rcrl
lods
gs
lret
pop
jle
sti
rcrb
jmp
insl
inc
mov
jge
aam
call
mov
xor
push
je
jmp
ror
xor
and
and
jmp
pop
dec
mov
nop
pop
loop
mov
testb
in
xor
mov
mov
xlat
test
scas
daa
push
ret
out
in
ds
into
lods
and
push
push
es
fisttpl
daa
movsl
pusha
mov
cmp
bswap
jge
sub
pop
xchg
jo
mov
in
jge
aad
dec
enter
mov
out
pop
jle
iret
adc
leave
adcl
push
cmp
dec
lds
mov
mov
pop
cmpsb
cs
addb
mov
push
push
loopne
pop
pop
dec
jae
leave
mov
std
cmp
out
std
insl
scas
push
cli
movsb
mov
addl
inc
jae
ret
daa
dec
bound
cmp
add
das
jge
std
test
leave
int3
mov
cli
cs
enter
movsl
shlb
xchg
xchg
data16
mov
pushf
sub
add
test
aas
push
push
add
mov
cmp
sbb
mov
and
les
mov
jne
sbb
jecxz
jns
push
mov
jl
dec
add
or
jae
xchg
xor
pop
and
inc
cmp
imul
repnz
mov
nop
test
out
push
popa
xchg
mov
fdivs
ljmp
xor
aaa
add
mov
inc
xchg
jbe
cmp
sub
adcl
lret
shr
dec
into
or
std
and
test
or
outsl
jmp
dec
pop
cwtl
pop
ret
pop
mov
iret
mov
shrb
sbb
and
pop
dec
imul
sbb
and
jne
jl
ds
or
mov
stos
arpl
or
dec
adc
add
xchg
inc
je
into
mov
gs
call
call
bound
jno
ja
mov
mov
fs
xlat
fbstp
mov
jle
lods
dec
icebp
push
test
cmp
bound
jmp
xchg
jbe
or
or
into
fildll
jo
fs
fucomi
out
out
jae
out
adc
sbb
jnp
xabort
ret
or
or
cmp
out
sbb
mov
sub
movsl
jnp
ss
add
sub
sub
xchg
ret
out
and
dec
loopne
lods
sub
repz
or
fadd
dec
std
daa
movl
adc
das
mov
clc
insb
jmp
push
xchg
aam
inc
push
mov
add
out
mov
push
in
ret
je
pop
add
enter
mov
fisubs
mov
insl
lea
loope
xchg
ss
lock
xchg
fwait
cwtl
fs
and
test
in
xchg
push
inc
repz
filds
mov
pop
ror
mov
mov
cmp
xor
xchg
js
push
sbb
mov
xor
lahf
iret
inc
xlat
adc
push
mov
sub
sahf
pop
cmp
or
xor
clc
faddl
jne
push
push
outsb
ja
fmuls
ss
rcl
add
mov
cmpsl
bound
andb
pop
lret
mov
xchg
fnstenv
das
out
lods
sbb
inc
cmp
fdivr
test
mov
mov
sub
orl
push
adc
adc
dec
adc
divl
or
je
sub
andl
sub
sub
mov
in
and
sbb
xchg
movsb
lods
mov
mov
mov
xor
cmp
lods
jnp
mov
push
sti
pop
inc
and
subl
repnz
inc
xor
outsb
xchg
push
adcl
mov
rcrl
in
inc
test
mov
adc
nop
fsubp
test
sub
jne
mov
sub
fwait
xlat
lock
sarl
inc
mov
test
adc
out
outsb
cwtl
sbbl
sub
xor
lods
idiv
lahf
aad
sti
inc
dec
pop
sbb
divb
push
mov
push
rclb
push
fdivrs
and
popf
addr16
or
inc
inc
adc
inc
xchg
clc
add
mov
jge
cmp
lods
or
lds
loopne
mov
arpl
pop
and
mov
pop
addr16
stc
push
mov
mov
jnp
add
push
add
and
lret
and
adc
sbb
push
ss
jl
test
test
test
repz
je
jb
jle
fs
and
push
aaa
insl
pop
aad
in
dec
or
dec
sbb
mov
popf
pop
sub
mov
pop
mull
add
mov
cmc
dec
dec
dec
daa
mov
mov
arpl
push
add
pusha
dec
call
aad
jb
lock
shrl
inc
pop
pop
mov
shlb
jp
xor
out
hlt
jns
faddp
adc
andl
inc
lock
out
stos
fs
imul
std
mov
scas
mov
push
mov
add
mov
bound
insl
aad
dec
dec
pushf
in
lea
push
jno
inc
lock
std
add
add
lcall
push
aam
xor
test
xchg
mov
movsb
lcall
jne
sbb
fildl
adc
xchg
push
cmp
in
cmp
cmp
push
aaa
adc
popa
push
notl
mov
pop
adc
pshufw
xlat
rorb
aas
outsl
cmp
push
or
mov
jo
repnz
dec
push
cmp
push
nop
inc
daa
jb
faddl
jnp
loopne
aaa
sbb
xlat
mov
jae
ss
enter
inc
cmp
fmuls
mov
ds
and
jge
push
jmp
cs
les
push
in
xchg
fisttpl
push
cmc
inc
pop
cmp
das
das
outsl
notb
dec
xlat
mov
stc
or
mov
jle
add
inc
jb,pt
shr
imul
aaa
or
mov
push
into
dec
fidivs
cli
das
mov
dec
dec
pushf
into
test
jb
lret
pop
fsubl
je
lret
mov
mov
pop
hlt
stc
dec
xor
subb
lret
int3
int3
sarb
icebp
cmc
repz
mov
pushf
dec
xlat
outsb
data16
ret
mov
loop
adc
data16
adc
call
mov
mov
cltd
or
cwtl
cmpsb
lods
pop
and
fdivl
aam
cmp
add
mov
mov
rcr
mov
xor
rorb
cmp
fs
cmp
push
loope
mov
insl
popa
jg
or
testb
out
push
repnz
fstpt
std
test
xchg
mov
enter
fcoms
pop
bts
rclb
jmp
lcall
fcmove
negb
dec
lods
inc
sbb
hlt
sub
pusha
loop
push
scas
stos
pop
es
fwait
sub
in
pop
imul
mov
cmp
stos
sbb
jo
testl
add
mov
je
cmpsb
push
fdivrl
nop
mov
aam
je
xchg
ja
or
mov
lods
js
mov
fcoml
pop
mov
cmpsb
test
test
in
and
test
and
adc
inc
mov
idiv
repz
into
call
shrl
lret
sahf
sub
xchg
xchg
je
repz
stos
lods
push
sub
fwait
push
leave
xchg
inc
dec
xchg
out
sti
fcmovu
hlt
ja
or
shrb
and
xlat
pushf
fsubrl
popf
int3
pop
in
or
test
mov
mov
pop
lock
push
or
sarb
or
pushf
in
add
xchg
dec
jg
cmp
jmp
mov
sahf
fdivs
cmc
inc
mov
out
inc
sarl
adc
and
sahf
fdivl
cmp
push
cmp
jbe
jno
cmp
mov
mov
std
adc
cmp
cwtl
aaa
mov
inc
fucomp
imul
and
jns
aam
pusha
notl
loopne
inc
pop
push
xor
xchg
das
imul
out
in
call
push
pop
jle
lods
lahf
shl
gs
pop
cmp
int3
lcall
loop
sub
xchg
leave
mov
lcall
insl
ret
popa
imul
stos
in
and
add
stos
iret
sub
je
add
daa
dec
pop
jge
mov
xlat
cld
movsl
sti
xchg
jae
and
daa
fbstp
xchg
inc
nop
in
pop
mov
imul
movsl
fisubrs
mov
jb
icebp
call
cmp
cmp
fisttpll
mov
inc
jle
or
pop
dec
xchg
cmp
out
cwtl
mov
mov
sub
dec
jmp
int3
add
popf
jmp
aas
rclb
jp
mov
ss
jp
or
xchg
jbe
add
sahf
pop
dec
xor
dec
test
push
popa
mov
idivb
xchg
jne
sbb
cmp
jmp
fcmovu
cwtd
dec
add
ja
in
decl
cmp
sti
inc
lret
push
int3
inc
xchg
push
pop
fs
fisubs
repnz
out
sbbb
scas
cltd
mov
sbb
xor
ja
push
xchg
inc
fisubrs
xchg
adc
dec
mov
std
mov
in
mov
jnp
das
inc
fdivrs
cli
movsl
xor
inc
xor
inc
xchg
pop
mov
in
jp
js
movsb
in
std
in
inc
pop
push
sub
stc
imul
mov
ret
and
data16
fistpl
sub
je
out
jge
dec
mov
aaa
pop
and
sub
mov
aad
dec
push
sub
ret
mov
shl
jmp
std
sbb
pop
inc
cs
jp
das
mov
mov
pop
jg
xor
test
clc
fmull
stos
pop
xchg
or
hlt
push
sbb
divl
stos
sahf
xlat
xor
mov
lock
jns
adc
hlt
push
lods
pop
pop
xor
pop
bswap
loope
or
adc
stc
fdivl
call
lret
sbb
idivb
inc
xchg
sbb
jmp
add
xor
inc
in
dec
add
sbb
mov
mov
rolb
shll
xchg
scas
cs
hlt
add
out
inc
out
push
or
cwtl
add
and
popf
fwait
imul
shrb
out
sub
shll
loop
and
daa
fnstcw
mov
outsl
inc
enter
cmp
sti
in
mov
flds
fstl
rolb
push
jo
and
inc
aad
sub
pop
scas
movb
dec
mov
int
inc
aas
cmp
dec
cwtl
jl
jecxz
mov
push
xlat
std
loop
pusha
and
cld
cmp
ljmp
mov
push
push
fisubrl
mov
mov
movsb
xchg
aas
outsb
roll
femms
pushf
dec
and
scas
iret
inc
jne
in
ret
test
aad
jmp
outsb
leave
mov
add
dec
or
shl
push
dec
enter
call
icebp
ret
mov
cs
mov
pop
mov
scas
lds
mov
jnp
sbb
call
shll
mov
mov
flds
jno
push
cwtl
and
pop
xor
lock
test
lret
xor
arpl
add
shlb
cmp
out
popa
jmp
push
std
and
add
notb
mov
loopne
cmp
cmp
push
inc
mov
mov
xchg
sbb
add
adc
rol
cmp
cmp
dec
subb
cmpsb
cmpb
mov
out
rorl
ret
testb
push
cmp
pusha
mov
cli
in
mov
xchg
xchg
out
hlt
push
pop
imul
mov
push
dec
push
dec
mov
and
xchg
sbb
aaa
mov
jns
fs
pop
pop
ljmp
scas
out
push
ret
hlt
mov
popf
icebp
xchg
stos
ffreep
cmp
and
xor
pop
rcrb
jns
dec
out
inc
je
cltd
ljmp
cmp
std
jp
jge
add
push
jle
aad
xor
test
xor
dec
jbe
cmp
dec
gs
sarb
pop
cltd
popa
fs
jo
jae
out
jns
mov
pop
xorb
fs
or
mov
out
inc
cli
pop
aam
mov
lahf
pushf
outsl
scas
sub
xor
jl
sub
adc
xchg
xchg
pop
sub
sub
pop
cmp
sbb
pop
ficoml
dec
outsl
lea
inc
adc
shl
ficompl
sub
jmp
rorb
lods
and
dec
sub
mov
flds
mov
cmp
loopne
add
stc
mov
lret
andl
push
insl
mov
movsb
push
aaa
add
stos
das
testl
sub
inc
xchg
popf
xor
ljmp
notl
shrl
dec
xor
push
xchg
add
mov
mov
sub
sbb
add
in
testl
mov
clc
push
or
pop
adc
aaa
imul
cmp
and
sbb
daa
mov
inc
sub
xor
shl
jb
lahf
stc
mov
sbb
shll
lods
pushf
in
push
jecxz
cmp
lods
leave
popf
das
sub
xor
or
lock
add
loope
dec
bound
inc
dec
mov
cld
repnz
xchg
add
pushf
mov
xchg
fwait
movsl
cmpsl
jmp
rorl
pop
pushf
and
mov
mov
pop
loope
outsb
cmp
or
jmp
cmp
leave
in
and
and
dec
ja
int3
push
pop
stos
outsb
fcoml
rorl
aaa
in
add
mov
xchg
imul
cld
cld
inc
pushf
jo
fidivrl
mov
ret
pusha
inc
ret
mov
push
jo
inc
jmp
jo
movsl
or
push
or
int
mov
xchg
cmp
pusha
xor
in
icebp
imul
leave
lret
push
jo
inc
push
loop
insl
imul
lods
adc
testb
es
xchg
add
sbbb
clc
dec
mov
cwtl
mov
jo
roll
mov
cmp
ja
fsts
mov
ficomps
cmp
jbe
mov
hlt
jb
shrl
lds
or
cltd
sti
andl
and
cwtl
mov
jnp
fldt
ret
push
test
cmpsb
sub
lods
dec
scas
xor
xor
inc
movsl
mov
addr16
mov
dec
pushl
push
adc
stc
mov
out
sub
or
push
les
jno
std
sarl
int
mov
ret
pop
or
or
xor
mov
out
fwait
nop
js
nop
jne
mov
insl
pop
mov
lods
inc
daa
test
jo
jne
je
fiaddl
out
cmp
rorl
test
dec
jno
insb
xchg
insb
jbe
push
or
repnz
shlb
or
push
sub
arpl
testl
scas
xor
xchg
adc
or
and
add
in
loopne
mov
rclb
divps
pop
mov
inc
and
or
mov
rol
fsub
inc
lahf
movsl
leave
mov
inc
xchg
in
lcall
jnp
push
cmp
push
data16
or
jae
mov
jle
ss
pop
pop
fdivl
pop
fldenv
mov
int
jecxz
gs
xor
jp
jo
dec
cmp
bound
or
add
mov
and
push
pop
imul
xchg
mov
ret
hlt
mov
scas
push
sbb
call
mov
rcrl
lds
rorb
leave
inc
or
scas
arpl
adc
cmp
sub
pop
dec
mov
lret
inc
mov
scas
addr16
xchg
mov
cmp
test
and
jnp
or
add
les
bsr
sbb
inc
je
jnp
imul
cmpsb
popa
sub
dec
and
mov
cmc
stc
xchg
mov
popa
lcall
and
mov
das
adc
aaa
popa
lcall
pop
mov
jl
cmp
and
test
push
and
pop
xor
adc
push
push
gs
sti
xorl
xchg
inc
addr16
pop
dec
xor
mov
and
testb
sub
daa
xor
xchg
outsb
mov
add
cmpsb
fs
repz
lea
mov
and
lods
mov
divl
mov
add
dec
sahf
inc
popa
insl
push
js
pop
stos
out
inc
pop
lods
hlt
add
cltd
cmp
inc
jmp
shlb
sbb
sub
cmp
adc
inc
jne
out
jae
scas
loop
mov
xlat
es
jnp
inc
sub
je
xchg
jno
in
mov
vpmacssdql
and
cmp
cmp
out
rorl
xchg
cmp
popf
or
notb
leave
lods
rcl
jnp
lahf
movsb
mov
adc
and
lahf
ja
lcall
inc
popa
je
mulb
lods
in
mov
adc
lds
stos
adc
dec
mov
ds
inc
fldl
or
daa
xchg
jns
lds
leave
icebp
sub
inc
lea
int
cmc
mov
xor
fsubs
jg
fcmovnbe
dec
fnstenv
aaa
jb
mov
pop
mov
rolb
adc
cmp
sbb
xor
jo
jns
dec
or
mov
fcoms
repz
jo
nop
insb
ljmp
push
inc
lock
arpl
pop
cmp
mov
jno
sahf
std
inc
outsl
movsl
cmpsl
out
mov
in
mov
ficomps
xchg
negl
mov
ja
fstl
pop
stc
movsb
dec
inc
js
mov
mov
and
cltd
dec
nop
lods
into
ljmp
cli
dec
xor
add
mov
adc
dec
icebp
dec
and
lret
outsb
push
or
mov
subb
mov
fnstenv
pushf
ljmp
jge
cmpsl
xorb
pop
push
rorl
cmp
pop
and
dec
lds
dec
push
push
adc
xchg
push
jge
cs
xor
inc
or
arpl
inc
add
xor
scas
ja
test
into
arpl
mov
movsb
in
pop
subl
in
jge
dec
adc
in
or
je
and
sub
mov
mov
xor
outsb
xchg
push
imul
repnz
data16
and
adc
mov
sub
out
je
int
push
add
mov
or
cs
int3
in
cli
mov
or
mov
lcall
inc
mov
ja
mov
mov
mov
inc
xchg
aam
adc
adc
dec
mov
or
dec
enter
dec
test
cwtl
pusha
std
fdivl
jecxz
jge
popa
repnz
movsb
cmp
inc
mov
cwtl
xor
mov
add
nop
insl
sbb
rorl
push
and
jnp
cmp
mov
xchg
movsl
sbb
out
repz
sbb
add
test
mov
mov
ffree
jl
sahf
cmp
adc
push
xlat
daa
insl
jns
jle
pop
aas
sbb
jle
bound
or
gs
inc
sbb
outsb
or
adc
add
add
and
cli
dec
cmpsb
xor
xchg
and
out
movsb
xchg
sbb
jg
addb
mov
test
inc
inc
fstps
daa
mov
add
mov
sti
scas
xchg
inc
gs
cmpsb
addl
jo
imul
or
cmpsl
bound
sbb
loop
mov
push
in
push
jp
call
mov
lahf
xchg
dec
or
vpmaxsw
jmp
repnz
lret
jo
jle
cld
lock
idivb
cmpsb
pop
loop
jne
mov
dec
daa
jle
ds
inc
in
and
sub
pop
adc
xchg
sbb
dec
clc
push
pop
pop
js
fwait
cmp
nop
xor
idiv
call
rcrl
aad
and
sbbl
lods
in
cmp
xor
lea
cmp
mov
mov
push
testb
jp
fcomip
or
notb
cwtl
mov
jp
inc
pop
test
leave
out
dec
pop
rclb
pop
nop
sti
pop
inc
punpcklwd
add
stos
push
jmp
pop
push
xor
in
and
jbe
jns
icebp
inc
repz
mov
mov
pop
mov
mov
pop
js
iret
inc
andb
push
test
pop
mov
shrb
lahf
mov
cld
outsb
fcmovnu
jmp
pop
jbe
popf
shlb
in
divb
int3
mov
pop
xorb
inc
push
dec
stos
pushf
or
jne
push
repnz
idivl
loop
out
pop
and
iret
nop
xchg
cs
jae
fucomp
mov
mov
int
xchg
test
call
into
test
dec
mov
insb
push
js
jecxz
adc
das
mov
lods
rclb
movsb
push
or
pop
in
mov
iret
mov
xor
je
mov
push
xor
std
sahf
xor
ss
mov
out
jno
lods
add
sbb
jle
fnstenv
fistpl
shll
adc
cmp
hlt
jae
test
sbb
mov
dec
das
pop
arpl
jo
push
mov
mov
in
xor
clc
and
testl
xor
inc
std
loop
and
je
adcb
fnstenv
pop
leave
pop
in
push
clc
ret
sub
outsb
xchg
and
sbb
pusha
imul
leave
pop
shl
ret
push
inc
add
adcl
push
int
cmp
orl
push
inc
es
mov
fsubrs
dec
sbb
in
sub
stc
loop
jns
addr16
sbb
shll
imul
sub
adc
mov
jno
fildl
pop
lock
or
fdivp
push
dec
pop
imulb
adc
out
lret
add
xorl
lret
ljmp
mov
and
pop
xlat
add
mov
rclb
mov
sbb
and
jb
sti
pop
jae
cld
pop
sub
mov
pusha
in
mov
or
les
fildll
cmp
jb
push
call
add
cli
push
pop
fists
jo
xor
cmp
adc
adc
sbb
call
fstpt
imul
jge
ja
rorb
and
cmpsl
and
lret
push
es
scas
dec
stos
lock
sahf
push
notl
enter
cmp
and
cld
sti
mov
das
mov
popa
pop
or
cmp
sub
or
cmp
shrl
push
mov
add
addr16
in
es
out
cmp
es
fucomp
push
sti
inc
dec
mov
jle
mov
daa
xlat
pop
jecxz
nop
sbb
out
je
jno
mov
lods
sbb
repz
push
pusha
movsb
xor
pop
xor
testl
rcrb
jo
test
jmp
ds
or
push
and
sub
mov
push
fwait
inc
lods
dec
or
pcmpgtb
gs
adc
push
adc
movsb
fs
mov
mov
inc
xor
cmp
call
lahf
scas
cld
clc
pusha
xchg
repz
xchg
cmpsl
mov
out
or
add
cli
roll
push
fcomp
and
aaa
pushf
push
mov
push
addr16
in
cmp
jl
mov
cwtl
cmp
lret
in
cli
jl
pop
sbb
inc
lret
jb
or
adc
mov
outsl
stos
popa
lods
jno
xor
push
and
xor
mov
stc
jnp
add
or
loopne
inc
sbb
in
loopne
jae
arpl
xorb
jns
fsub
pop
jp
fidivl
imul
push
lods
push
xchg
pop
in
or
daa
leave
mov
or
adc
imul
jp
jle
mov
insl
filds
cli
sbb
add
add
pop
fstps
push
stos
test
and
jge
and
xchg
lds
sub
aam
cld
xlat
shlb
or
xchg
or
mov
jbe
std
cmp
test
adc
or
adc
inc
cltd
inc
repz
inc
sbb
jb
mov
mov
mov
push
cmc
icebp
daa
icebp
xchg
jmp
xchg
and
and
cmc
movl
test
addb
cmc
daa
inc
xchg
add
sbb
push
insl
stos
pop
and
lret
cmpsb
xchg
cmc
mov
sub
icebp
fdivp
jg
mov
jle
outsb
mov
rcrb
mov
lahf
ret
ds
dec
cli
dec
xchg
test
cmp
mov
sub
je
mov
or
es
push
pop
fcom
loopne
neg
sbb
jns
or
mov
add
aaa
mov
mov
std
jae
and
fs
mov
les
les
xor
dec
or
test
mov
loop
dec
cmpsl
icebp
xor
orb
and
stc
popa
add
xor
inc
mov
repnz
adc
push
sbb
dec
punpcklbw
loope
xor
sub
scas
cmpsb
inc
mov
bound
scas
ja
gs
scas
pop
add
call
ss
and
dec
mov
and
lock
cmp
push
add
xlat
in
inc
sbb
add
icebp
repnz
and
mov
sbb
push
xchg
adc
test
sub
ret
pusha
adc
cmp
sbb
mov
sbb
mov
out
inc
adc
xchg
aas
insb
cld
mov
pusha
cmpsb
test
sub
or
mov
lock
add
test
pop
adc
xorl
fildl
jns
cmp
fidivrs
clc
cltd
dec
ss
mov
out
pusha
sub
mov
gs
adc
cmp
loop
mov
pushf
jo
mov
outsl
xor
fadds
movsl
stc
add
add
adc
mov
xor
push
pop
cmpsb
shl
pop
in
adc
dec
je
in
or
adc
rcrl
and
mov
dec
push
cltd
fisttpll
fwait
xor
xlat
and
push
stc
jle
mov
je
xchg
pop
jno
add
xchg
outsb
les
jg
jmp
push
and
dec
xor
inc
fistps
adc
out
jno
mov
xor
mov
mov
sub
xorl
add
cmc
shrl
rorb
hlt
mov
scas
rorb
push
xchg
in
mov
enterw
push
inc
dec
cmp
das
ficomps
outsl
fnstsw
shl
repz
pop
ss
out
cld
adc
js
hlt
outsb
push
mov
scas
test
or
inc
push
mov
shl
arpl
mov
stos
xchg
dec
call
insw
popa
out
or
inc
outsl
sbb
and
fs
xor
movsb
into
and
add
jno
pop
sbb
fists
imul
stos
mul
push
and
jns
and
push
inc
jnp
mov
and
sub
pop
lock
push
test
movl
lcall
push
inc
push
imul
push
enter
cmc
mov
inc
jb
add
mov
cs
xchg
add
ds
enter
push
popf
sbb
adc
adc
xchg
sbb
sbbl
add
pop
stos
aas
ja
and
fnstenv
mov
push
mov
mov
imul
dec
ss
jns
inc
repz
cld
push
mov
mov
add
imul
test
adc
xlat
push
dec
cmpsl
xchg
es
push
lret
enter
sub
testl
outsb
or
jno
dec
and
pop
adc
sbb
jno
or
push
and
out
stos
mov
lahf
cmpsb
das
jle
movsl
add
cltd
mov
adc
inc
and
sahf
mov
cltd
mov
cwtl
jb
adc
ret
rcr
jg
fucomp
or
cld
ret
pusha
das
lahf
flds
mov
mov
nop
lods
cmp
mov
outsl
mov
sbb
dec
out
jae
and
in
loop
xor
addr16
pop
push
xchg
scas
incb
push
push
sub
mov
sbb
jbe
xor
mov
xchg
push
jp
pop
lods
out
cmc
add
aas
pop
xor
jg
mov
stc
iret
fs
mov
ss
test
push
lods
xor
incl
loopne
adc
lock
xor
dec
jo
shl
test
inc
mov
add
mov
clc
aad
mov
int
rolb
stos
mov
push
movsb
add
or
adcb
lock
fmuls
rcrl
les
cmp
and
mov
andb
hlt
push
pop
or
inc
and
dec
fimull
cs
ss
rcr
pop
xor
xor
sbb
lret
ror
inc
jb
imul
addr16
fwait
and
sub
mov
popf
lahf
and
mov
xchg
out
and
loopne
ljmp
gs
xchg
push
pop
out
bound
xchg
pop
sahf
push
sarl
jae
jbe
xchg
cmpsl
sub
push
outsl
lret
xor
iret
enter
shll
sub
icebp
adc
mov
xchg
add
movsb
inc
sbb
and
jnp
cld
lds
cltd
pop
pop
lret
sub
push
mov
pop
mov
enter
mov
xor
popa
mov
add
push
test
mov
lock
les
dec
sub
or
inc
cmc
mov
sbb
scas
js
dec
cmc
sub
imul
adc
xchg
cmc
cs
push
in
fstp
push
loopne
fisttpl
movsb
in
lds
fnsave
sub
jecxz
xchg
jno
inc
or
sub
jnp
cmp
or
stc
out
push
push
mov
cmp
incb
inc
iret
mov
incb
icebp
adc
aad
xor
pop
cli
loop
mov
mov
jb
int3
fstl
jb
push
sub
inc
not
cmp
mov
cmp
or
iret
push
jno
push
mov
out
or
in
mov
loop
addb
sub
rclb
push
adc
mov
sti
push
scas
push
call
test
push
push
push
jle
cmc
mov
iret
fstl
push
into
jae
xchg
out
test
lock
mov
push
inc
inc
out
sbb
insl
aas
xor
outsb
jle
dec
sub
repz
fisttpll
or
out
ja
mov
pmulhw
pop
and
int3
movb
gs
inc
xchg
dec
int
pop
and
xor
repnz
je
and
arpl
pop
dec
jecxz
arpl
movsl
jno
xchg
mov
nop
push
test
fistpl
outsb
sub
and
sti
cmpsb
mov
lcall
pop
mov
push
loopne
lods
jp
pushl
or
pusha
xor
mov
imul
dec
sbb
ret
je
mov
xlat
mov
das
jecxz
stos
es
xlat
mov
add
cmp
sub
iret
ret
ljmp
mov
fs
push
sbb
mov
pushf
fldt
adc
sbb
fs
sub
mov
mov
in
iret
mov
add
test
ljmp
fdivl
cli
push
mov
pop
mov
cmpsb
sub
out
push
and
pop
inc
add
fidivrs
sbb
div
movsb
repz
mov
hlt
inc
cli
in
dec
mov
xchg
and
mov
into
add
mov
jg
pop
dec
lods
pushf
jno
dec
ds
fstl
test
loope
jmp
loopne
cmp
pop
sti
mov
mov
stc
test
aam
sbb
mov
clc
add
lea
jmp
pop
test
dec
lea
push
pop
test
ljmp
jno
jle
or
and
mov
in
sarb
xchg
in
mov
lods
lock
sub
sub
test
add
mov
out
xchg
adc
lea
add
pop
aaa
aaa
ds
cmp
test
fidivl
xor
mov
fildl
lods
adc
stos
scas
ret
out
ret
addr16
push
mov
cmc
pop
shl
and
adc
incl
pop
fdivrl
push
sbb
ds
idivl
mov
xchg
stos
loopne
add
imul
stos
cmpsl
pop
cltd
rol
cmc
cli
js
mov
stc
push
cmc
sbb
addr16
mov
jo
mov
mov
xchg
pop
adc
adc
cld
js
mov
and
aad
jnp
inc
mov
sbb
jl
pop
ret
jge
movsb
mov
outsl
jns
cli
sbb
adc
pop
xchg
push
cmp
aam
inc
xchg
shrl
push
sti
xchg
stos
jl
mov
pop
or
test
pop
in
xchg
or
xor
daa
inc
add
movsl
aaa
fwait
dec
push
xchg
cmp
cmpl
pop
mov
les
inc
dec
imul
jns
leave
and
xchg
mov
xchg
mov
andl
push
shll
js
xchg
sub
mov
rclb
fstl
push
add
or
daa
mov
or
loopne
fldenv
inc
push
cli
adc
call
adc
xor
movsl
popa
cmp
sbb
pop
lods
icebp
sahf
sbb
cwtl
ret
jg
add
pop
xlat
xchg
jno
das
jl
push
adc
pop
mov
icebp
mov
push
scas
push
jbe
cmpsl
sbb
insb
mov
test
inc
rcl
inc
lea
mov
add
and
popa
jno
insl
lods
xchg
xor
lret
in
clc
test
mov
dec
xchg
mov
dec
das
fdivp
sub
fisttpll
or
jnp
pop
in
push
fisttpl
cli
in
jae
dec
cmpb
or
or
movsb
mov
daa
es
push
aam
notb
jno
sbb
xor
fucomi
gs
cli
jg
in
adc
bnd
in
mov
mov
std
fdivl
pop
mov
or
ds
dec
xor
stc
push
lret
jl
push
call
lods
add
sub
int3
xor
jle
mov
add
fs
lods
jle
inc
lcall
cmpsb
loop
and
ds
cltd
jne
xchg
cmp
adc
in
fisubrl
fidivrl
icebp
lret
loope
test
add
ds
sbb
xor
les
jne
or
imul
xor
test
ss
test
jmp
sar
aas
clc
or
in
js
inc
mov
mov
adc
inc
push
shll
cld
mov
mov
out
dec
loop
mov
adc
adc
inc
into
jl
movb
addb
shrl
shlb
mov
pop
das
cmpb
ds
bound
jecxz
fldln2
add
mov
pop
lock
xor
in
das
xchg
nop
outsb
rolb
lods
mov
add
add
into
mov
jl
jb
imul
out
test
insb
mov
and
add
mov
pop
dec
jo
mov
test
mov
ret
imul
xor
into
sbb
add
adc
test
das
test
dec
cs
add
pop
arpl
cmp
cmovnp
add
fdivrp
xchg
mov
fs
aas
out
pop
mov
lods
ret
popa
das
adc
test
lret
test
sub
mov
or
fwait
ret
imul
jmp
je
mov
mov
outsl
std
pop
cmp
popa
push
mov
mov
cs
cmpsb
adc
lods
lcall
iret
xchg
mov
mov
int
xlat
mov
aas
add
fstp
xlat
jnp
pop
adc
in
sbbb
hlt
xor
inc
jle
xor
ds
jbe
ret
fsubs
mov
mov
cmp
mov
fsubrs
xchg
or
lds
movsl
inc
testb
loop
mov
stos
lret
push
pop
pavgw
jne
and
orb
andb
fisttpl
mov
popa
pusha
cmpsb
pop
sbb
leave
loope
inc
fwait
pushf
lret
xlat
aad
or
and
or
decb
das
cmp
fidivs
rcl
into
aad
ret
lret
sbb
jecxz
mov
adc
sbb
mov
vpsrad
adc
stc
insb
cmp
inc
sbb
or
cwtl
mov
movsl
enter
cmp
xor
xor
out
push
adc
mov
in
imulb
fdivr
adc
cmp
cmp
cmpsb
hlt
rcrl
pushf
movsb
int3
dec
lret
mov
stos
or
imul
mov
or
mov
shrb
lret
cmp
and
std
sub
jo
test
lea
jbe
sub
mov
sbb
lret
clc
test
sub
mov
inc
ds
ficompl
fists
leave
sub
mov
lret
xchg
test
xor
and
popa
jl
andb
rclb
sub
lret
test
adc
out
jno
out
mov
stc
mov
adc
jo
faddl
cwtl
inc
test
add
out
sub
cmp
mov
xlat
sarl
add
sbb
out
fstpt
pop
jmp
lods
inc
jae
jae
jmp
inc
adc
and
shl
sbb
jne
ret
mov
cmp
mov
push
sub
in
add
xchg
jl
xor
out
fstpl
push
rcl
push
rorb
leave
cwtl
jns
std
das
fwait
pop
out
xchg
bound
insl
xorl
clc
xor
lret
or
orl
icebp
jno
xchg
mov
roll
jmp
mov
add
cld
aas
push
cmp
stc
in
inc
fcompl
jnp
xchg
divb
decl
adc
cmc
leave
dec
jbe
pop
mov
push
fldt
lret
js
movsb
shl
enter
clc
insl
cmp
clc
pop
dec
sub
daa
jbe
cld
jno
data16
inc
lret
xchg
cwtl
xor
sbb
adc
ss
adc
mov
imul
into
xor
std
mov
icebp
push
cmp
jno
dec
lret
popf
mov
test
roll
xchg
lods
pop
push
popf
sbb
jns
ss
in
mov
arpl
ret
jl
pop
gs
inc
lods
daa
xbegin
outsl
sub
inc
pop
or
cmp
mov
es
int
mov
pop
mov
jge
adc
mov
cmp
pop
ss
cmp
pop
mov
pop
imul
inc
fwait
inc
and
out
inc
insb
scas
cltd
adc
mov
or
andl
push
inc
arpl
es
xchg
out
jmp
add
jne
mov
test
xchg
xchg
lods
rclb
push
repz
cmp
lock
out
and
xchg
dec
sbb
cmp
jbe
rolb
stos
in
movsb
dec
lock
pop
insb
mov
jnp
shlb
daa
and
pop
testb
sub
imul
mov
cli
int
pop
adc
inc
aam
xor
lret
ss
or
xchg
jno
and
mov
dec
mov
xor
popa
movsl
jbe
stos
xchg
out
clc
push
jae
les
mov
sub
mov
push
in
fnstsw
ss
cmpsl
aam
adc
jae
jmp
ss
cmp
jne
sbb
int3
xchg
xor
icebp
ds
jne
shll
rcr
xor
aaa
test
pop
sub
and
lret
xorb
aas
ficomps
or
mov
dec
and
push
stc
cmp
das
push
sbb
push
push
popa
mov
lret
inc
fidivrs
cmp
orl
out
xchg
adc
add
mov
into
fildll
cmp
xchg
mov
test
xchg
push
cmp
int3
cld
push
movsl
lahf
shl
push
push
or
ficoml
movsb
loop
cmp
sub
push
push
lock
mov
adc
rcr
and
xor
jecxz
mov
sub
fnstenv
push
jecxz
sbb
lds
in
int3
cli
sbb
rorl
not
mov
movsl
jle
or
out
out
pop
std
adc
xchg
ds
in
adcb
inc
roll
in
dec
icebp
loopne
pop
adc
out
inc
xchg
mov
xchg
hlt
int3
push
xchg
and
nop
stos
sub
mov
mov
lods
xchg
sbb
xor
mov
cld
iret
rolb
mov
and
scas
cmp
into
push
jo
insb
push
jp
lcall
push
loope
fcoms
lock
dec
scas
sbb
push
mov
orb
add
stos
or
std
inc
pop
jecxz
jp
scas
and
loope
stos
mov
or
push
pushl
sbb
push
fucomi
lahf
add
inc
les
cmp
lcall
pop
loop
cmpsb
lcall
flds
decl
loop
fists
dec
inc
testl
jecxz
shrb
stc
inc
pop
shll
sub
add
cmp
pop
stos
mov
cltd
in
in
add
sbb
in
rcrb
sbb
push
leave
fdivr
in
lods
fcmovne
je
call
ss
sbb
mov
xchg
and
xor
jne
pop
cmp
push
out
mov
sbb
mov
rol
adcb
fisubrs
push
lods
arpl
xlat
std
jae
cmp
sub
dec
fcomi
push
jne
mov
push
mov
movsl
lods
cmp
das
jp
cmpsl
pop
xchg
jne
and
jmp
add
icebp
mov
aad
pop
in
xor
scas
push
mov
in
data16
out
mov
stc
cmp
pop
adc
add
xchg
mov
add
movsl
imul
and
dec
scas
icebp
mov
imul
aad
mov
movsl
inc
test
test
insb
mov
loope
sub
push
shrb
js
jns
and
aas
repz
and
jle
add
xchg
cmp
jb
push
in
jns
mov
xchg
jmp
adc
ret
dec
mov
inc
outsl
mov
jno
sbb
cmp
out
xchg
jmp
xor
test
int
int
andb
sub
ljmp
or
mov
ja
pop
and
icebp
push
push
shll
and
mov
pusha
cmp
push
shll
outsl
in
mov
repz
cld
xchg
je
aaa
das
lock
ret
movsl
loopne
push
inc
clc
cli
arpl
mov
mov
and
xchg
sbb
pop
jecxz
mov
in
mov
cmc
or
dec
sub
scas
jg
lea
pop
cmp
dec
xor
inc
fistpl
xor
adc
movsl
mov
lock
dec
repz
das
fwait
push
sbb
jge
jne
xor
popa
pushf
movsb
mov
mov
inc
sub
sbb
xchg
aam
jle
xor
pop
faddl
mov
add
shr
call
mov
jne
mov
mov
andl
clc
pusha
std
mov
fnstenv
lods
or
nop
cmp
nop
enter
daa
xor
push
sub
mov
into
jg
jl
in
les
and
mov
cmp
cld
insb
sub
arpl
push
mov
dec
dec
movsb
xchg
data16
clc
and
adc
cmc
pushf
cld
sbb
mov
sbb
and
rcr
mov
pop
jle
hlt
adcb
pushf
mov
jmp
inc
pushf
jle
ror
mov
lea
sub
aaa
aas
or
or
inc
jecxz
jns
es
xchg
and
inc
push
rclb
stos
xchg
fcomp
mov
cmp
inc
es
jg
insb
cmp
and
sub
jnp
leave
sbb
mov
pop
loop
mov
inc
lret
cld
hlt
adc
xchg
jge
inc
in
jmp
stos
les
or
mov
rorl
fistpl
sbb
into
cli
fisubl
pop
jne
lret
stos
pop
adc
xchg
cmp
ret
mov
bound
iret
shl
fstl
lods
xchg
fcoms
add
cmp
cltd
pop
aam
mov
rcrb
or
jmp
or
cmp
fstpl
xor
push
xor
mov
and
shrl
negl
clc
push
jl
into
icebp
xor
out
jnp
mov
rcrl
mov
cmp
pop
fstpt
sbb
fnstenv
mov
xchg
jae
repnz
pop
cltd
mov
fabs
iret
lods
sbb
lea
cmp
mov
in
sbb
pop
outsl
inc
dec
sbb
arpl
or
daa
push
nop
xor
inc
stos
ds
mov
adc
dec
adc
mov
pop
dec
push
cli
call
cmpl
movsb
nop
jae
xor
sbb
cmpsl
shll
leave
test
ret
call
xchg
aad
test
pop
push
pusha
scas
repz
jnp
scas
aad
sarb
mov
inc
test
scas
adc
xchg
aad
fdivl
cmpb
inc
mov
xor
out
sub
sub
dec
sarb
loop
clc
inc
shrl
insl
pop
or
pusha
pop
outsb
pop
outsb
dec
jge
test
sub
sbb
fs
lock
inc
cs
loopne
and
push
xor
push
das
push
cmpsl
cvttps2dq
push
cmp
add
cmp
test
repnz
jbe
out
sbb
mov
lahf
pusha
or
mov
imul
insb
js
out
in
sub
iret
add
popf
mov
loop
mov
scas
sub
sahf
adc
das
cli
cmp
inc
ret
add
fsubrs
pop
mov
xor
mov
enter
jne
mov
mov
push
mov
test
xchg
stos
mov
mov
sbb
mov
mov
andb
fwait
pop
pop
test
pop
xor
mov
fadd
repnz
mov
lock
out
cld
mov
ds
into
jmp
outsl
imul
movsl
rcrl
add
push
or
or
push
mov
jbe
push
add
movsb
lock
into
loopne
jmp
jmp
jb
sub
cmpsl
mov
or
jg
cmp
cwtl
mulb
xor
mov
enter
enter
sub
imul
pop
inc
push
adc
neg
xchg
push
lret
icebp
ss
jo
lds
push
arpl
jecxz
pop
std
push
xrelease
pop
lahf
cmp
insb
int
pop
js
cmp
sub
adc
rorl
mov
mov
jbe
cmpb
mov
ret
xor
repnz
fidivl
lds
daa
inc
add
lods
pop
mov
mov
sub
fdivr
test
imul
jno
mov
mov
lret
mov
cmp
in
ljmp
cmp
sbb
sub
fs
loop
and
loopne
dec
dec
jo
fwait
loopne
repnz
mov
das
pusha
add
movsl
repz
xlat
mov
stos
jle
sub
cs
es
push
cmp
enter
add
dec
jae
sub
andl
adc
xchg
aad
daa
mov
mov
rcrl
addr16
shl
sub
dec
scas
inc
push
lret
mov
das
inc
insl
sbb
cwtl
sbb
fldt
gs
sbb
ret
sub
mov
mov
pop
stos
mov
push
jno
bound
cmp
gs
mov
mov
and
fcompl
das
sbb
add
sarl
fdivp
flds
sub
push
gs
das
inc
addr16
and
rcll
fcmovne
jp
xchg
gs
leave
dec
lds
mov
adc
shlb
push
rorb
je
xchg
in
aas
testl
xor
xor
pop
fs
push
pop
mov
inc
and
pop
xchg
cmp
adc
xor
sub
scas
sbb
clc
js
aam
notl
jg
fstps
cltd
adc
in
adc
repnz
add
dec
or
mov
add
xor
adc
dec
loopne
mov
add
mov
cmpsb
and
mov
pushfw
xor
sbb
cmp
ret
push
sbb
inc
int3
jmp
andb
movsb
mov
cld
es
addr16
cmp
or
in
dec
test
dec
adc
and
addr16
sbb
outsb
cmpsl
xchg
aad
and
xor
sub
fidivrl
inc
jmp
sahf
test
out
xor
pop
stos
cmp
fildl
shlb
or
shll
jo
fistpll
jns
mov
pop
aas
mov
mov
aas
sbb
xlat
mov
fbstp
dec
mul
push
or
out
lock
or
dec
xor
stos
xchg
in
mov
loop
out
inc
dec
test
sub
sbb
inc
bound
test
es
leave
push
rep
fwait
enter
dec
cmp
mov
hlt
lock
idiv
arpl
cmp
int3
and
sub
pop
pop
jge
popf
rclb
fsubrp
pushf
adcl
ds
push
dec
cld
hlt
add
bnd
adc
sub
cmc
fisttpl
add
iret
xchg
cmpl
int
xchg
jno
ss
sbb
mov
lret
mov
push
xor
subb
mov
mov
cmpsl
mulb
cltd
xor
inc
sub
xchg
clc
movsb
mov
mov
and
jg
inc
insl
insb
cmpsb
mov
xor
push
mov
mov
shrl
dec
cltd
fisttpll
push
data16
xchg
add
ret
pushl
popf
test
test
and
pop
out
jmp
pop
adc
lret
push
ds
cmp
mov
out
shll
dec
push
dec
mov
jbe
cld
aam
popf
jmp
add
in
aad
es
std
xor
pusha
xor
das
stos
popa
js
adc
xor
and
jg
ds
icebp
aad
test
popf
mov
mov
sahf
push
jne
adc
enter
test
ret
fidivrl
sahf
repz
stos
add
sub
mov
jmp
or
adc
xchg
ret
sarb
dec
fimull
mov
fisttps
push
xor
rorl
sub
pop
mov
in
xchg
xchg
movsb
outsb
cmc
pop
push
dec
mov
mov
mov
subb
loopne
cmp
cmpsl
sti
ds
stc
push
push
aam
in
mov
push
inc
push
dec
iret
scas
or
and
push
mov
xchg
adc
push
js
mov
fisubs
adc
mov
sbb
jle
test
sbb
mov
dec
xchg
push
jae
stc
and
cmp
push
cwtl
push
outsb
push
cmpsb
xor
jae
pop
mov
mov
add
or
aaa
cs
add
xchg
es
pop
xchg
aam
leave
das
cmp
ljmp
fstpt
loopne
cmp
xchg
je
or
in
xchg
lahf
pusha
push
or
dec
aam
dec
jecxz
mov
xchg
xor
jbe
pop
adc
pop
movsb
xor
dec
test
add
int3
cmp
adc
mov
rcll
jae
jge
sbb
sbb
int3
int
mov
xlat
jns
jb
pop
das
fsubrl
xor
out
pop
push
mov
push
pop
fdivr
test
xor
mov
cltd
or
std
lret
xor
leave
lahf
inc
repnz
add
loop
dec
mov
ds
cmp
insl
jl
xchg
or
rorb
test
cmp
jmp
scas
aam
dec
roll
and
pop
subb
inc
aaa
mov
ljmp
and
adc
mov
mov
jle
mov
sub
mov
xor
in
xorl
test
and
stos
sub
mov
fdivrl
std
insl
out
in
hlt
lahf
popa
jnp
stos
push
testl
cmp
rcrb
xchg
iret
in
clc
add
enter
js
fidivrl
subl
pop
mov
out
jp
pop
xor
jle
push
rorb
scas
out
push
adc
iret
pop
cld
jo
mov
ret
pop
jbe
sbb
pop
push
sti
or
int3
into
jge
add
fcos
fsub
imul
mov
testl
daa
loop
cld
jae
or
leave
mov
sbb
inc
ss
cltd
mov
push
cld
jmp
cli
lea
pop
outsb
insb
xchg
cmpsb
mov
int
push
pop
jo
adc
jne
popf
cwtl
xor
arpl
imul
test
inc
adc
mov
xor
and
int3
adc
in
js
loop
dec
inc
jmp
xchg
adc
into
outsl
cli
mov
rcr
sarb
push
mov
mov
mov
ja
or
mov
pop
push
cli
lcall
les
mov
lods
test
xchg
adcl
adc
jg
rolb
loopne
negb
push
test
imul
jbe
dec
and
pop
iret
jg
inc
lds
xlat
mov
push
pop
fldl
bound
cmp
sub
xor
pop
mov
fnstenv
addr16
imul
xor
jbe
jb
ret
das
icebp
loope
jp
clc
dec
ljmp
cli
sbb
mov
scas
push
call
add
jb
popa
cmp
int3
cwtl
and
pop
lret
fnstenv
sbb
inc
xchg
call
out
xor
pop
aas
cmpsb
sarb
lret
push
sbb
push
fcmovnb
shrl
xlat
cmp
ss
popa
mov
fnstsw
and
into
mov
jbe
rcrl
fistpl
pop
imul
fs
xchg
enter
mov
xchg
cs
aad
mov
pop
and
mov
push
cmpsl
mov
cwtl
xchg
ds
push
or
xchg
fwait
cmpsl
loop
xchg
test
decl
ljmp
xor
xor
or
sti
loope
mov
xor
ds
lahf
xchg
gs
jl
repz
sahf
push
imul
stc
inc
nop
jbe
push
or
mov
loopne
mov
arpl
test
push
sub
xchg
mov
rorl
mov
dec
cmpsl
cld
mov
aad
imul
jnp
lods
jbe
add
in
mov
xor
call
fs
xchg
addr16
jno
int3
les
mov
jg
push
or
addr16
xor
or
sub
and
jge
movsb
fs
mov
or
aas
roll
push
mov
cmpsb
inc
fdivp
xchg
aas
inc
xchg
out
js
mov
cld
je
or
push
jmp
mov
push
mov
mov
mov
dec
fidivrl
stc
gs
xor
cltd
mov
das
mov
mov
add
lea
stos
inc
aas
mov
mov
fsubrl
cld
sub
lods
test
mov
movsl
aam
out
and
stos
cmp
lret
cltd
test
adc
jmp
push
add
inc
mov
aam
enter
mov
jle
xchg
in
dec
and
out
add
enter
ja
and
pop
add
sbb
cltd
jge
pop
jo
or
dec
repz
in
loop
and
xchg
xor
fldcw
std
sbb
jno
dec
xabort
fidivl
xlat
aas
pop
stos
inc
mov
stos
out
cmp
out
push
sbb
inc
xor
sbbl
sbb
clc
std
mov
repz
xchg
jnp
rcll
push
jmp
xchg
push
imull
sub
stos
inc
push
sar
adc
or
or
in
out
addr16
scas
inc
mov
cmp
add
inc
pop
test
rclb
in
cmp
adc
xchg
ret
pop
ret
andl
xchg
jne
loop
daa
sbb
dec
movsl
mov
repnz
cld
xchg
add
cltd
adc
aad
inc
dec
xlat
iret
pop
lds
or
xchg
inc
ljmp
mov
cmp
inc
add
std
js
xor
xor
fucomip
fdivs
mov
iret
or
mov
test
push
mov
sub
mov
mov
fdivrs
or
sub
dec
bound
and
sbb
test
mov
es
popf
lahf
arpl
sbb
adc
mov
sub
sub
pushf
add
push
fists
das
cmp
ret
xor
movsb
mov
jmp
cmp
push
jmp
and
movsb
mov
ror
lods
dec
sbb
pop
mov
cmp
jno
jnp
clc
mov
fsubl
xlat
mov
push
int3
push
add
adc
pop
mov
out
add
sub
push
jp
stos
ja
cmp
mov
int3
xor
aas
loopne
push
xor
sub
mov
sub
fcoms
pop
enter
xor
mov
rcrl
test
cld
fcomip
lret
repz
adc
lods
in
out
dec
xchg
repz
sbb
sub
repnz
adc
sbb
fists
xor
or
xchg
lahf
mov
test
xchg
push
xchg
xor
and
sbb
movsl
sub
xchg
cmp
pushf
push
push
js
inc
inc
cmp
int3
ds
std
shrb
sbb
push
es
xchg
mov
int
fdivl
flds
fs
inc
mov
or
push
pop
sbb
cmpsl
sbb
insb
mov
iret
cmp
pop
add
fisttpll
cli
or
addr16
fisttpl
dec
pop
lods
orl
and
pop
add
nop
sub
leave
inc
mov
repz
push
jne
inc
lock
push
jg
ja
pop
push
popa
iret
aad
mov
sbb
sbb
and
push
sbb
xchg
mov
mov
inc
mov
cwtl
andb
mov
adcl
push
add
sub
pop
ffreep
sub
cmp
adc
clc
test
clc
inc
inc
dec
jmp
scas
in
and
cmpb
shl
cmp
jbe
pop
enter
jg
pop
dec
cmp
sarb
int3
mov
add
jecxz
imul
dec
repz
sbb
scas
sbb
push
repz
add
sbb
jl
jg
pusha
mov
insl
aaa
add
pop
xor
mov
push
enter
mov
shll
push
or
xchg
inc
stos
mov
jg
mov
xor
mov
int3
int
jb
mov
in
arpl
cwtl
movsl
cmp
sbb
sbb
sub
repz
mov
cld
out
add
insl
fdivl
cmp
xchg
pop
sti
push
enter
dec
jne
cmp
sub
mov
mov
or
jns
mov
enter
int
jns
addb
nop
pop
jmp
out
add
push
fdiv
bnd
iret
insb
imul
add
pop
outsb
imul
dec
and
mov
scas
xor
push
or
pop
dec
int3
movsl
aad
out
sub
clc
test
popl
scas
inc
mov
into
arpl
or
or
daa
call
popa
inc
mov
outsl
xchg
cmp
sbb
cld
lret
cmp
scas
int3
xor
ljmp
adc
lcall
imul
inc
cli
jmp
inc
daa
movsl
mov
data16
push
mov
push
aam
adc
aam
mov
out
jno
adc
lret
mov
ficoml
aas
bound
loop
jbe
mov
dec
test
bound
dec
add
or
push
jno
std
popf
pop
mov
inc
lods
test
lods
mov
jp
arpl
ss
div
ss
add
dec
mov
mov
jb
cli
dec
jge
cmp
inc
adc
jg
dec
scas
and
pop
mov
xor
or
andb
ds
xchg
insl
inc
pop
into
xchg
jo
mov
fisubrl
mov
jle
inc
imul
rorl
mov
push
sub
int
fsub
cmc
jge
pop
insb
jecxz
fiadds
je
inc
cld
dec
test
in
xchg
push
jp
lods
out
jecxz
cmp
fmul
sbb
mov
inc
cmp
mov
lret
push
fidivrs
iret
dec
sub
cwtl
and
in
addl
cld
cmc
mov
add
or
int
jecxz
mov
inc
psrld
adc
add
or
pusha
je
adc
pop
cli
push
rep
in
ret
jmp
xchg
addr16
inc
aaa
andb
or
int
jecxz
pop
aas
adc
fisubl
repz
and
lods
mov
mov
pop
stc
and
dec
aaa
jp
adc
mov
fidivl
loopne
xorb
imul
mov
and
inc
cmpsb
mov
rolb
bound
iret
push
clc
out
or
jmp
test
lcall
inc
inc
in
outsl
push
pop
mov
sub
movsl
push
xchg
call
inc
fnstenv
push
jle
adc
mov
test
add
sub
or
jmp
shlb
in
xchg
xor
and
repnz
jp
fcmovu
fildl
lock
jno
mov
mov
add
jecxz
xchg
imulb
insb
and
push
movsb
dec
es
sbbb
jecxz
leave
pop
out
popf
or
in
and
in
psubb
int
cmp
push
and
adc
and
inc
movsl
sub
mov
fisubs
xchg
sub
cld
or
insb
int
leave
aad
addr16
mov
popa
jmp
dec
cmp
fidivrl
int
outsb
lret
and
scas
mov
frstor
std
jno
stos
daa
lret
cli
pop
jecxz
shr
sar
js
sbb
inc
xorb
loopne
pop
sbb
xor
sub
int3
cs
pop
pop
push
cltd
cmc
cli
iret
testb
push
and
xor
popa
daa
inc
pop
in
mov
lea
pushf
jge
in
mull
int3
iret
dec
mov
enter
xor
adc
and
inc
std
cli
and
shll
div
out
xorl
mov
jp
or
stc
subl
cmp
aad
data16
int3
adc
cmp
jle
negw
bound
fdivrs
ret
pop
sub
arpl
sub
popl
mov
adc
adc
data16
jb
jecxz
scas
scas
mov
stos
or
cmpsb
int
inc
outsl
out
cmp
adc
outsl
test
push
cs
inc
js
out
popf
adc
lret
add
dec
popa
stc
pop
mov
inc
cltd
cwtl
jb
pop
imul
mov
xor
jnp
outsl
push
xor
mov
push
or
movsl
fcomps
and
jo
and
ret
out
stc
hlt
mov
push
xor
pop
ss
sti
xor
xor
fidivl
testl
mov
ljmp
adc
test
das
add
mov
in
dec
dec
pushf
stos
dec
adc
repz
repz
leave
jecxz
cmc
jb
sub
adc
mov
cwtl
xor
mov
jle
add
or
cltd
rorl
pusha
stc
popf
sbb
jno
fidivrs
popf
dec
add
movb
rolb
fmull
fisttps
mov
repnz
or
int3
push
dec
fiadds
jmp
sar
push
icebp
sub
mov
popf
ret
dec
mov
inc
insl
jecxz
adc
dec
and
push
aaa
mov
dec
add
out
stc
leave
imul
jmp
shll
xchg
fcmovu
sub
sub
insb
mov
xchg
aaa
or
jo
sbb
or
loope
popf
cld
xor
out
dec
enter
push
or
fdivrp
inc
pop
xor
out
sbb
jp
insb
call
jp
jbe
inc
icebp
push
mov
push
mov
out
inc
mov
dec
mov
sti
mov
mov
sub
jle
mov
data16
enter
cmp
cmp
jo
jg
loope
xchg
or
lds
dec
loope
add
jge
mov
mov
and
insb
adc
fldz
push
lods
pop
pop
cltd
xchg
sub
arpl
repz
out
sbb
fdivs
xchg
inc
ret
jb
mov
lret
adc
cmp
jle
je
out
std
push
pop
sbb
ret
fidivl
fisubrl
xchg
adc
cmpsb
adc
aaa
pop
cmp
out
xchg
jmp
inc
cmp
aas
shrd
sti
pop
dec
aad
xor
lods
mov
pop
aaa
pop
cmp
lret
add
pop
xor
lret
xor
push
xchg
out
push
test
pop
xchg
scas
bound
int
and
cld
sbb
test
inc
add
xchg
adc
dec
lret
out
pop
xor
loopne
xchg
jecxz
test
fisubrl
cmp
adc
inc
movsb
orl
fnstcw
enter
xor
ljmp
loop
push
xchg
fdivs
adc
pop
pusha
sbb
sbb
aas
daa
lods
push
ficoml
cwtl
aas
mov
cmpsl
sbb
dec
jge
negb
sub
mov
aaa
add
sub
icebp
sbb
lea
and
xor
mov
rcrl
fidivrl
mov
repz
inc
popf
mov
inc
mov
xchg
sbb
iret
popf
jae
test
dec
and
shrb
loopne
lret
loop
sub
jp
popf
ret
std
inc
mov
or
loop
aad
dec
xor
aaa
inc
das
sbb
or
aam
mov
outsb
fucom
xchg
jb
daa
out
pop
inc
xorb
inc
or
call
js
dec
pop
std
mov
cwtl
mov
jbe
fs
add
sub
inc
fidivs
icebp
das
out
pop
sbb
loope
lock
int3
ss
movsb
pop
mov
sbb
lods
movsl
mov
outsl
js
insl
jae
sub
jb
cmp
fnstcw
mov
xchg
int
in
movsb
out
jge
push
pop
fnsave
or
cli
jmp
mov
and
jecxz
rolb
xor
jl
movsl
movsl
pop
cmp
sarb
or
mov
pop
cmp
push
mov
push
mov
testl
dec
jl
loope
ja
fdivrs
movsl
out
cld
xchg
jne
nop
ficomps
pop
mov
and
mov
dec
cmpsb
push
adc
xor
std
fs
cmpsb
aaa
dec
jb
pop
mov
out
xchg
in
shll
mov
add
xchg
popf
aaa
cmpl
in
add
loopne
imul
xor
adc
loope
sub
enter
add
jno
test
in
loope
loop
jnp
testb
cmp
and
in
stc
les
scas
pushf
aad
push
adc
lock
push
dec
std
jp
leave
add
xchg
and
push
scas
lcall
cmp
inc
into
lods
out
inc
jne
stos
sub
push
adc
jmp
mov
lods
mov
sub
sbb
jge
inc
lcall
pop
lret
cld
in
sub
movnti
sarl
mov
inc
into
orl
cld
ret
adc
js
fidivrs
pop
adc
pop
aam
sti
repz
enter
pop
popf
sahf
sbb
jnp
repz
cltd
fdivr
shll
push
bound
cmp
cmpsl
das
sbb
or
xchg
mov
sbb
sahf
scas
fstl
mov
jb
xchg
int3
xchg
mov
jmp
pop
jmp
inc
sbb
scas
test
test
cwtl
push
faddl
nop
sbb
dec
or
arpl
and
jae
push
dec
cmp
out
mov
leave
xor
call
sti
lcall
inc
or
cmc
repnz
lods
push
int3
mov
dec
add
mov
cmpsb
faddp
ja
push
test
mov
xlat
shll
cmp
data16
aaa
cwtl
sbb
sbb
lret
sbb
aam
dec
insb
ss
mov
xchg
shll
ret
sub
cs
aas
shll
outsb
sbb
cmc
popa
and
lcall
fadds
jne
sbbb
push
out
adc
js,pt
fistps
sahf
xchg
push
in
push
shrb
mov
stos
push
fmull
push
in
sbb
cmpsl
push
push
sbb
inc
mov
jae
in
jecxz
mov
int3
out
inc
les
sbb
adc
xchg
scas
or
dec
mov
ror
mov
mov
pop
add
jle
add
sarb
mov
xchg
imul
dec
jge
enter
push
sbb
mov
cld
les
enter
add
lahf
out
pop
lahf
jg
mov
ljmp
xchg
inc
inc
sar
test
sub
cmp
insb
mov
cmp
mov
xchg
sbb
jg
mov
aad
or
mov
xchg
jo
fcoml
ss
xchg
std
pop
mov
mov
call
dec
xor
mov
dec
into
addr16
mov
push
push
aad
xchg
js
scas
jg
es
push
push
cld
in
gs
lcall
into
movsb
mov
mov
ret
adc
sbbl
nop
mov
mov
pusha
stos
lahf
inc
push
jb
pop
jg
jg
pop
add
push
movsl
mov
decb
icebp
push
push
cmc
mul
sbb
push
add
mov
xchg
rolb
cmp
pop
ljmp
sub
xchg
test
pop
cmp
add
push
stos
xchg
push
sub
mov
add
jo
js
aaa
dec
push
test
lahf
sbb
mov
repnz
ret
sbb
or
cmpsl
dec
inc
test
addr16
or
xchg
jecxz
push
ret
es
push
mov
outsl
pop
sbb
les
pop
ficompl
adc
ret
push
mov
adc
test
or
fdivrl
stos
sub
dec
enter
out
adc
sub
dec
andl
dec
or
jecxz
lcall
repnz
fdiv
pop
scas
xor
mov
int
inc
jmp
cmp
call
outsl
sub
push
or
in
push
jns,pn
xor
inc
popa
xchg
fucom
daa
sbb
negb
popa
cmp
shlb
loop
mov
shrl
jns
xchg
ds
hlt
xchg
mov
int
and
fadd
or
iret
loopne
idiv
hlt
cli
aaa
pop
shrl
xchg
and
sbb
sub
nop
sub
mov
lret
xchg
and
ret
dec
sti
lcall
clc
jle
inc
bound
sar
or
jnp
arpl
cld
bound
repz
sbb
movsb
or
mov
insl
das
dec
or
jp
pop
orl
fiaddl
jb
sub
sub
mov
xor
cmp
jbe
negb
and
jmp
xor
xor
or
push
dec
push
cmpsl
int
nop
andb
iret
mov
jmp
cmp
loopne
gs
loope,pt
call
cmp
mov
fnsave
dec
xchg
je
scas
insb
lock
xchg
and
lahf
das
cmp
add
mov
cld
in
jmp
fcompl
xchg
scas
xchg
out
outsb
mov
mov
aaa
stos
xchg
shrb
cmp
imul
cmpsl
jmp
jbe
push
fs
sub
sahf
xor
aas
ficoms
aaa
outsl
jns
pop
fistpll
insb
dec
pushf
aaa
movsb
inc
mov
test
mov
pminsw
push
clc
mov
gs
xor
xchg
xlat
sub
add
push
adc
into
aaa
int
test
xor
mov
inc
xlat
pop
inc
fcomp
ret
imul
mov
jae
push
mov
mov
lret
or
icebp
cli
leave
mov
adc
test
dec
adc
lock
mov
sbb
mov
cld
fstl
jmp
jae
out
adc
into
mov
or
sbb
or
pop
pop
int3
out
mov
fidivl
xor
jae
loopne
push
jp
xchg
test
ja
push
ss
pop
ja
hlt
in
cld
pop
subl
fsubl
xchg
in
inc
or
jnp
push
in
xor
fnstcw
scas
das
xchg
push
sub
sahf
inc
stc
and
std
test
jbe
icebp
jecxz
dec
pop
lods
mov
cld
mov
cli
sbb
pop
or
ror
mov
jo
leave
fmull
test
fbstp
sbb
cmp
ss
adc
andl
les
and
inc
push
out
mov
repz
and
cmp
rcrb
fsubrs
pusha
mov
lret
jae
test
cmp
jmp
dec
sbb
push
mov
xchg
test
pop
sbb
std
fnsave
in
ror
js
or
jle
mov
adc
sub
xor
cwtl
scas
cmp
stos
jge
mov
fcoml
hlt
out
scas
jge
roll
ficoml
int3
cwtl
xchg
in
xor
cmp
filds
xor
stc
xchg
sbb
ds
lret
test
ljmp
add
je
jae
ja
xchg
push
iret
xchg
jae
test
mov
pop
mov
push
jp
inc
jle
lods
jo
and
mov
outsl
mov
add
stos
xchg
in
lea
mov
scas
jo
pop
adc
jge
adc
cmp
adc
outsb
loope
stos
or
push
sbb
jb
sbb
mov
sbb
mov
xchg
push
mov
jecxz
mov
mov
push
aad
mov
mov
xor
adc
adc
rep
int3
sub
int
lret
or
out
push
dec
push
inc
push
push
cmpsl
push
jl
dec
adc
xchg
jmp
mov
pusha
cmp
test
inc
sbb
fmull
rorl
orb
fmul
fsubs
dec
orb
xchg
xchg
mov
jl
adc
and
mov
xor
subb
and
mov
frstor
inc
push
sbb
add
loopne
popf
xchg
jo
mov
fs
xchg
scas
lock
out
add
pop
insl
int3
out
cmp
iret
mov
stos
xchg
or
jle
test
cli
or
cmp
sbb
push
div
rclb
cmp
lret
movsb
pop
jp
in
popa
daa
xor
adc
stc
inc
loop
push
pop
mov
sub
mov
fwait
iret
lds
scas
pop
hlt
ret
pop
repnz
mov
scas
shrl
cmp
mov
dec
pusha
sbb
push
push
ljmp
mov
dec
and
or
cld
andb
adc
xchg
lds
pop
cmp
scas
xchg
aaa
fstps
or
push
or
test
xchg
sbb
insb
pushf
aad
fldenv
dec
or
jecxz
insl
in
clc
mov
xor
push
pop
push
cmp
popa
xor
mov
ret
cmp
lcall
outsl
jbe
lret
push
mov
lcall
daa
push
adc
mov
push
ljmp
lahf
push
jb
cmpsb
testb
mov
xchg
inc
cmpsl
imul
or
ljmp
xor
mov
loopne
or
dec
loop,pt
lret
add
test
arpl
jl
repnz
out
leave
ja
xchg
mov
clc
push
std
add
jge
xorl
cs
sub
xchg
add
mov
ds
stos
sub
push
jmp
movsl
pop
lods
repnz
jo
cmovl
adc
xchg
push
popa
jge
aaa
in
jb
out
sahf
fstpl
out
mov
fs
cmpsb
cld
jecxz
sti
or
nop
ljmp
lods
jo
das
jl
jnp
stc
nop
pushf
jb
push
mov
push
and
xchg
inc
pop
pop
imul
jne
dec
fsubs
out
xlat
push
sub
jmp
int
jbe
sub
cmp
inc
in
cmpsb
fwait
popfw
insl
or
xchg
stc
sub
pop
xchg
pushf
add
imul
pop
and
roll
add
and
cld
push
push
fstps
pop
cmpb
mov
rcrl
sub
imul
out
insb
in
mov
stos
add
lahf
add
es
pushf
xchg
test
inc
imul
inc
mov
imul
js
push
push
fistl
dec
pusha
jae
pop
aas
sub
incb
sti
shrb
sarl
fimull
sub
aad
xchg
ret
dec
or
fnstcw
fstps
xchg
sbb
pop
xchg
push
ret
sbb
dec
in
insl
inc
jl
push
inc
and
mov
xorw
mov
popf
pop
stos
popa
sbb
push
dec
inc
jmp
jns
sbb
mov
repz
jo
sbb
jl
inc
mov
push
fdivl
pusha
jae
or
int
sub
adc
sbb
mov
flds
adc
adc
sbb
loop
enter
imul
xor
jo
pop
push
jae
xor
sbb
je
nop
out
inc
sub
sbb
jle
adcb
sbb
and
jle
cmp
mov
jne
rcrl
mov
stos
dec
push
ror
push
add
mov
mov
pop
repnz
dec
push
dec
arpl
mov
stc
mov
xchg
enter
mov
xor
sbb
int
xor
mov
in
mov
dec
shlb
cs
mov
pusha
into
push
fs
lcall
repz
jmp
pop
pop
out
insb
rclb
sbb
inc
fs
add
hlt
sub
movsl
mov
push
adc
cmpsl
and
xchg
xor
jo
dec
lea
testl
pop
xor
insl
xchg
int3
adc
mov
pop
stc
out
jae
arpl
test
sub
call
subl
js
fs
jns
jno
int3
rcrl
jmp
jmp
lock
sbb
addl
mov
cmp
dec
out
mov
sbb
mov
cs
out
push
mov
mov
push
sub
into
xchg
div
fisttps
xor
popl
xchg
mov
aas
mov
jmp
call
dec
in
or
loop
je
inc
test
popa
add
bound
aaa
aam
add
clc
jmp
adc
repnz
popa
popa
xchg
push
lds
test
xlat
xchg
xchg
adc
or
adc
push
xchg
jp
pop
add
sahf
loop
or
lods
push
fcoms
loop
fs
rorb
out
imul
xor
mov
int
fwait
mov
sub
nop
adc
sub
in
jns
pop
gs
adc
imul
out
xor
dec
jle
int3
jmp
sbb
rorl
dec
xchg
xchg
pushf
mov
cmc
xchg
xchg
push
xchg
loopne
cwtl
adc
lea
ficoms
jbe
rcrl
bswap
and
fsubrs
or
mov
jl
scas
jge
mov
adc
in
dec
das
and
insl
fldenv
mov
pop
pop
mov
push
inc
sub
roll
inc
clc
into
add
cs
inc
jno
les
xchg
arpl
stos
je
adc
in
push
dec
mov
lds
pop
movsl
shll
ss
dec
push
sbb
jp
gs
mov
adc
pop
cmp
addr16
mov
jge
pop
outsb
movb
pusha
add
js
jns
scas
push
int3
nop
pop
imul
push
inc
sbb
dec
rcr
dec
pcmpeqb
cli
subb
jnp
sbb
xchg
daa
and
outsb
add
xchg
fwait
int3
jo
ret
pusha
shll
push
or
mov
adc
pushf
movsb
out
pop
jno
repz
push
inc
jle
sbb
movnti
popf
pop
cs
gs
es
aad
popl
jno
xchg
daa
std
mov
out
stos
add
insl
dec
and
sti
inc
data16
push
mov
aam
lcall
dec
shlb
and
call
mov
hlt
mov
cmp
push
repz
add
repz
cld
sbb
pusha
dec
in
cld
popf
jp
loop
cmc
inc
test
cmp
loop
mov
mov
jnp
test
cmpsb
mov
std
push
or
xor
mov
pop
dec
xor
fstpt
adc
stc
insb
push
xchg
jo
mov
and
or
stos
cld
popw
add
pop
inc
arpl
xor
lock
push
cmp
test
sbb
in
lret
lods
push
push
idivl
jne
lea
int3
sbb
subl
xchg
pushf
stc
xor
mov
inc
push
rep
inc
jno
pop
mov
inc
or
inc
sti
hlt
mov
divb
cmc
fstl
mov
fld
mov
cmp
inc
loop
or
jb
mov
iret
xlat
cmp
push
and
xchg
mov
ss
in
cmp
push
and
cmpsl
adc
rcl
jp
stos
push
adc
scas
adc
mov
jecxz
sarb
bound
add
or
aas
mov
pop
mov
inc
addr16
rclb
fbld
sbb
xor
sahf
pop
pop
scas
data16
inc
pop
aaa
mov
fcmovb
loope
sub
decl
xchg
divb
fidivrs
ss
stc
cld
cli
sahf
jno
fsub
movsl
outsb
pop
add
dec
nop
push
dec
jecxz
lods
iret
sbb
dec
jl
in
xlat
sub
and
loope
xchg
jno
cmp
andl
repz
gs
mov
adcl
mov
rcl
and
ret
push
xchg
mov
sub
sub
adc
and
mov
dec
sbb
sbb
pop
cmpsl
sbb
cmpsb
ja
push
dec
mov
cmpsb
stos
cli
pop
or
ds
pushf
ret
cmpl
pusha
dec
inc
pop
push
outsl
dec
pop
or
sti
gs
cmp
inc
push
push
push
jbe
outsb
jnp
call
push
push
cmp
add
frstor
outsb
pop
or
imul
bound
incl
xor
sub
xchg
lods
pop
jbe
cmpb
pop
test
cmp
aas
xchg
addr16
pop
popa
sbb
in
inc
imul
mov
jae
xchg
ljmp
loop
jle
rcrb
push
out
mov
jb
lock
sbb
cld
ret
mov
mov
test
mull
test
cld
pop
ret
mov
outsl
ror
insl
cld
pop
popa
adc
mov
xor
je
gs
movsb
xchg
mov
cmpsl
cmp
aas
loopne
xchg
out
mov
or
jg
and
and
test
cmp
scas
push
aad
or
sbb
cmp
scas
xlat
xor
js
cwtl
sarb
repz
iret
jbe
dec
loope
test
mov
and
push
lods
mov
lret
mov
test
push
jbe
jae
adcb
popa
sub
add
cli
xchg
mov
mov
xchg
jb
pusha
addb
cld
cwtl
dec
push
pushf
ret
push
and
fldt
jo
inc
jne
push
inc
sub
out
dec
mov
push
loop
xchg
add
sarl
push
aam
xchg
cwtl
cmp
push
sbb
mov
dec
pushf
pop
sub
add
jns
sub
inc
jb
rcll
cs
pop
test
xchg
and
popa
outsb
lret
pop
pop
sbb
mov
ja
repnz
xor
jb
xchg
je
mov
mov
emms
scas
test
mov
push
movsb
mov
cld
mov
xchg
ja
jne
mov
ss
neg
cmp
ret
mov
lods
fldenv
loop
roll
mov
rcrl
sub
cmpsb
mov
adc
jge
adc
xor
adc
mov
hlt
cmc
mov
ss
test
scas
dec
jns
and
mov
pop
mov
jmp
insb
xchg
jae
push
pop
or
movb
inc
sub
pop
sub
test
adc
add
cmp
push
data16
sar
mov
jbe
test
jp
xor
jnp
movsl
sti
pusha
add
shll
test
out
or
and
sub
loope
ror
push
fdivl
cld
inc
in
jns
cmp
out
movsb
das
scas
imul
push
outsb
into
mov
out
bound
add
jno
mov
push
out
and
push
cmc
loopne
int3
adc
sub
adc
pop
xor
push
sbb
test
push
and
daa
mov
cld
xchg
int3
jecxz
sub
add
insl
xor
jns
into
mov
std
sbb
dec
jbe
xor
push
pop
clc
sbb
les
jae
dec
out
mov
shll
sbb
pop
fs
add
pop
jno
fs
pop
inc
orb
sbb
fbld
test
pop
out
xlat
cs
call
jo
arpl
filds
shrb
pop
push
lcall
dec
push
les
mov
push
fptan
out
cmp
add
enter
dec
cmp
sub
sub
pop
jno
inc
bound
pop
adc
or
pop
outsl
iret
mov
mov
sbb
lahf
xchg
out
outsb
pop
out
lods
pop
push
rcrl
loope
lods
stos
fwait
adc
loopne
pop
xchg
ljmp
xchg
mov
gs
insb
into
sbb
pop
xchg
fadd
sbb
inc
stos
mov
and
sbb
sti
in
repnz
sub
pop
div
xor
pop
or
xor
movsl
sbb
push
pushf
and
nop
popa
les
jno
rolb
push
lds
xlat
jmp
notb
cltd
jmp
arpl
test
es
popf
and
lcall
mov
jecxz
mov
stos
orl
stos
mov
sbb
jl
in
adc
test
dec
xchg
aaa
jle
imul
mov
mov
sbb
jns
jmp
sub
pop
pop
inc
cmp
mov
pop
aam
lock
sbb
pop
sarl
lahf
adc
jl
and
xchg
sbb
jo
xchg
jbe
movsl
in
xchg
imul
cwtl
roll
jl
outsb
mov
pop
shl
mov
mov
xchg
sub
sub
ds
pop
fwait
scas
les
fwait
and
inc
loopne
sbb
dec
in
dec
insl
mov
in
push
sbb
and
imul
fdivs
es
pop
clc
mov
and
lds
push
xchg
fwait
sbb
or
and
lret
or
jecxz
pop
mov
inc
movb
jp
mov
or
inc
lret
xor
or
adc
cmp
inc
stc
js
xor
stos
cltd
popa
cmp
stos
xchg
xchg
xor
cmpsb
imul
ljmp
shrl
xlat
pushf
adc
scas
push
shrb
enter
aas
fs
or
jae
push
mov
addr16
out
fcmovne
dec
decb
int3
aas
stc
imul
int
arpl
mov
fmull
loopne
adc
mov
es
cmp
sahf
hlt
pop
test
mov
dec
add
mov
ja
les
lds
lock
insl
scas
jl
test
shl
iret
push
addb
cmp
fldcw
push
lods
cmpl
or
push
aaa
js
sti
out
dec
jno
rcrl
push
mov
xchg
out
das
pop
mov
and
enter
lret
pop
jns
mov
test
mov
sarb
pop
sub
dec
int3
dec
bound
jbe
jecxz
mov
aam
jbe
pop
mov
cmc
cmovo
stc
cmp
ss
dec
push
movsb
xchg
andl
xlat
movsl
out
push
ret
mov
and
pop
mov
dec
into
jo
mov
or
movsb
das
or
dec
ficoml
and
shlb
cmp
les
fdivrs
lret
test
push
inc
frstor
faddl
push
mov
mov
mov
mov
shll
mov
inc
into
pop
movsb
repz
insl
cld
addb
insl
cwtl
jge
xor
movsl
xchg
mov
stc
cmp
ljmp
pop
xchg
ljmp
mov
rcll
sbb
or
inc
addb
clc
adc
outsb
adc
sbb
pop
mov
outsl
clc
add
mov
dec
cwtl
out
mov
mov
je
aas
popf
push
ret
mov
jg
jg
and
adc
je
in
cld
int3
in
stos
nop
pop
subl
jno
cmpsl
and
je
push
push
call
jg
jno
mov
in
jbe
lods
mov
inc
ret
push
dec
xor
dec
jg
js
lret
mov
dec
sub
cmpb
and
sbbb
test
xor
cmp
icebp
push
scas
inc
pop
fdivs
adcb
std
xchg
push
mov
or
imul
out
pop
pop
inc
aam
fiadds
ja
sub
mov
pop
mov
push
xchg
inc
jnp
pop
icebp
sbb
mov
iret
fmulp
mov
jb
int
dec
outsl
cmp
insb
jmp
push
jnp
in
and
inc
mov
mov
fwait
cmp
jb
pop
stos
or
jg
arpl
hlt
enter
fdivl
mov
xor
mov
cmp
repz
daa
xchg
repnz
dec
push
mull
mov
js
mov
mov
jmp
rcrb
push
fxch
mov
lods
aas
adc
jle
sub
cmc
ja
popf
jge
xchg
adc
out
shrl
inc
pop
xchg
movsl
leave
xchg
inc
ret
out
push
mov
std
pop
or
arpl
sub
mov
cwtl
add
arpl
sar
xchg
lcall
pop
std
outsl
popf
pop
xchg
add
sub
in
mov
mov
push
iret
cmpsb
dec
pop
mov
xor
pop
mov
jg
xchg
jae
xor
xor
pop
data16
mov
mov
xchg
rcll
and
pop
mov
and
lods
loopne
pop
outsl
cmp
insb
lds
add
iret
stc
popf
ljmp
push
push
xor
dec
pop
add
in
xor
push
add
mov
scas
push
jb
lds
dec
in
scas
add
fcoml
add
sbb
aaa
add
das
adcl
push
leave
or
mov
loop
adc
shlb
mov
jmp
cmp
js
into
cmc
pop
popa
jo
cmp
loop
sub
fidivrs
jl
mov
dec
cmc
daa
cmc
jb
shlb
jo
roll
cmp
inc
mov
cmpsb
repz
adc
movsl
push
xchg
jne
sti
xor
sub
xor
je
jge
mov
ret
add
nop
int
stos
fildl
jae
and
pop
lds
std
dec
movsb
cmpl
test
mov
add
sbb
xchg
into
loopne
and
stos
out
xlat
mov
push
loopne
adc
std
pop
xchg
mov
cmp
and
icebp
shlb
mov
lcall
loope
out
mov
cmpsl
outsl
and
sub
out
imul
or
push
cmp
divb
mov
cmp
xchg
xlat
dec
in
iret
cwtl
jle
jle
jmp
xor
popl
mov
pop
repz
test
ja,pt
push
cli
imul
loope
and
jo
into
sbb
lods
mov
shll
xchg
loope,pn
nop
xor
sbb
popf
lock
fmul
mov
inc
mov
jo
cltd
dec
jge
orb
pop
push
fs
dec
sbb
pushf
ss
aad
or
jmp
cltd
bound
out
fnstsw
adc
pop
lret
arpl
dec
fistps
aad
sahf
xor
pop
sub
ret
sub
fstps
or
fdecstp
call
sbb
push
and
sub
addl
into
pop
shl
jno
data16
xor
out
movsb
in
hlt
and
into
xchg
push
adc
sub
mov
jge
popf
xchg
aam
inc
pop
aas
push
ds
push
and
push
push
sahf
hlt
push
jns
out
lods
push
add
cmp
dec
jbe
jmp
mov
add
and
in
sti
sbb
dec
xchg
pop
sarb
cmp
int
push
sbb
sbb
repnz
aam
xchg
jge
loope
pop
arpl
lock
hlt
pop
mov
stos
mov
notl
sbb
jmp
shr
fmuls
dec
mov
xchg
cld
and
popaw
aam
lds
add
mov
jnp
pop
popa
or
bound
adcl
sbb
xchg
aad
push
sub
das
mov
out
rcll
jbe
mull
enter
ror
imul
shrl
and
push
sahf
push
aam
mov
aad
bound
bound
add
inc
push
sbb
or
pop
and
icebp
aam
xchg
sub
mov
arpl
dec
and
inc
add
sub
or
sbb
mov
ja
mov
xor
ss
mov
jb
cmp
pushf
jae
cs
pop
jbe
stos
sbb
fs
adc
pop
mov
jne
cmc
push
pop
je
adc
out
int
mov
pop
aad
scas
and
cmp
imul
lcall
or
sub
ljmp
jo
cmpsb
decl
cli
hlt
and
lods
add
cmpsl
ret
std
mov
pop
inc
lock
nop
sbb
inc
jle
leave
push
mov
btc
mov
jl
arpl
andb
push
sub
pop
inc
mov
pop
jle
sbb
into
icebp
push
mov
lods
test
mov
sub
out
dec
mov
test
sbbb
aad
ss
rcrb
insl
aad
xor
inc
xchg
pop
insl
fnstsw
ror
movsb
and
cmp
repnz
dec
mov
out
mov
mov
int
out
mov
mov
cmp
jle
pop
fwait
sbb
inc
inc
jg
data16
sbb
les
imul
mov
nop
aaa
sarl
cmp
adc
ljmp
push
xchg
xchg
lods
popa
mov
repz
movsl
xchg
pusha
push
loope
lods
les
insl
fcmovbe
mov
push
pop
mov
ret
movsb
push
ss
fidivs
mov
or
jp
test
pop
bound
sub
rclb
dec
and
jbe
es
shr
shr
xchg
mov
repnz
pushf
xchg
adc
jno
xor
stc
adc
out
adc
imul
sub
or
add
jbe
xchg
es
mov
enter
in
push
icebp
cltd
fisttpll
xchg
jne
lea
repnz
stos
mov
inc
fidivs
fldt
inc
sarl
lock
xorb
push
push
push
mov
test
lods
mov
lret
push
mov
push
and
repnz
fnsave
and
sbb
cmc
fs
xchg
xor
movsl
shlb
icebp
jecxz
and
cmp
pop
ds
fnstenv
xchg
lods
dec
pop
std
shrl
mov
pop
inc
jmp
jmp
in
sbb
cmp
push
fnstsw
add
xchg
and
inc
xchg
sahf
pop
jmp
sbb
lret
arpl
aam
outsb
lcall
scas
mov
outsl
jo
bound
mov
mov
xchg
and
ret
and
outsb
fst
or
inc
add
shll
jae
push
dec
fisttpl
lret
movsb
lahf
jmp
jne
sbb
imul
jmp
scas
add
sub
loop
xchg
or
in
test
cld
dec
mov
loopne
jb
pop
cmp
or
out
mov
push
pop
gs
cli
add
mov
pop
sub
adc
pop
mov
sbb
and
cmpsb
aas
and
push
int3
pop
push
add
ret
mov
in
dec
ret
xor
mov
adc
mov
bound
negb
lcall
adc
lret
mov
push
sbb
shll
dec
mov
out
lds
adc
mov
xor
xor
stos
jae
cmp
hlt
daa
add
in
cmp
xchg
jno
add
sub
dec
sbb
out
imull
dec
ret
or
ja
or
test
sbb
push
jb
pushf
jmp
jb
rorb
mov
and
fidivrs
mov
sbb
icebp
push
mov
add
jne
js
ljmp
pop
ret
xor
js
fldl
ret
insb
js
loope
sub
dec
push
imul
sbb
inc
mov
lahf
mov
xchg
popa
loopne
nop
pop
cli
mov
jl
outsl
les
fadd
xlat
add
aad
decb
cli
and
outsb
test
add
es
mov
inc
pushf
jne
loopne
sub
xchg
mov
or
stos
stc
sub
ljmp
mov
xchg
call
out
jns
sarl
je
fcmovne
adc
cmc
jne
mov
mov
jmp
pop
leave
pop
xor
mov
mov
add
dec
adc
sbb
mov
lds
insb
ss
xor
in
test
cmpsb
lods
clc
es
cmpb
daa
add
int3
pop
cmpsl
loop
dec
pop
dec
add
daa
jg
xchg
imul
and
es
enter
dec
ret
mov
or
fadd
out
lcall
cmpsl
insl
push
adc
sub
xlat
adc
into
inc
aas
adc
xchg
jno
mov
mov
stc
lods
jle
in
imul
shrb
sarb
sbb
popa
shll
and
mov
mov
cmpsb
pop
xchg
dec
or
or
mov
and
inc
adc
bound
daa
mov
push
add
movsb
stos
sbb
fbld
mov
fnsave
mov
dec
fcomi
push
xchg
shrl
mov
mov
rolb
mov
or
sbb
outsb
or
xchg
fs
pushf
repnz
sbb
xor
test
fcompl
or
cli
or
pusha
pop
scas
bound
stos
mov
cmp
cmpsl
scas
int
roll
sub
sub
sahf
sub
cmpsl
mov
dec
iret
je
inc
xchg
mov
xchg
movsb
xchg
mov
dec
stos
sbb
lcall
scas
mov
pop
mov
cli
dec
icebp
mov
pushf
push
popa
rorb
adc
add
js
mov
push
adc
pop
lret
mov
je
outsl
inc
add
jp
cmp
imul
pop
jmp
hlt
push
xchg
push
lahf
mov
sub
loop
mov
in
push
pop
sub
xchg
cmp
lods
repz
je
mulb
xor
sub
add
mov
imul
das
inc
mov
leave
dec
pop
mov
lahf
ljmp
jo
add
pop
ret
jecxz
or
clc
pop
dec
push
enter
test
mov
mov
add
fcmovnb
mov
out
stos
mov
testl
sbb
push
xchg
loop
fbld
fdivrs
inc
lods
sahf
not
jnp
popf
or
pop
or
mov
add
fmull
pop
jmp
cmp
dec
xor
add
cmp
push
adc
dec
push
andb
cmp
fiaddl
sbb
sarl
pushf
sub
push
xor
pop
daa
cmp
divb
jecxz
adc
push
lock
xchg
rclb
ds
in
into
cltd
ljmp
xor
stc
push
loop
loop
ja
lds
push
rcrl
push
into
and
shll
sub
jg
fbstp
lods
sub
cs
inc
cmpsl
das
xchg
mov
ret
xor
push
stos
filds
mov
xchg
jmp
pop
out
and
jno
pop
orb
lret
dec
mov
xchg
loope
jno
scas
fbld
iret
jp
test
add
shrb
push
loope
push
loope
cmpsb
insl
ljmp
jmp
jl
and
adc
ja
push
lods
add
sbb
push
mov
insb
aas
push
addl
les
pop
mov
jne
inc
sti
les
js
bt
test
jge
sti
sbb
mov
push
xor
adc
rolb
sub
movsb
subb
sbb
cld
xor
cmc
repz
mov
out
push
push
andl
scas
push
cmc
dec
ffree
test
rcll
jo
jo
jge
lret
loopne
ja
sub
dec
sub
mov
call
push
mov
mov
cld
rorb
out
xlat
cmp
jp
sub
pop
mov
movsb
fsubl
xchg
xchg
daa
cmpsl
dec
jae
or
adc
dec
pop
int3
ljmp
cmpsb
or
aaa
add
pop
jo
iret
mov
fwait
fs
jge
mov
leave
outsb
push
jecxz
movsl
and
mov
fcoml
pop
sub
lea
sbb
fildl
mov
inc
push
or
or
pop
cli
jmp
ret
push
mov
jne
pop
repz
mov
or
out
cld
out
push
mov
mov
pop
add
sub
mov
add
xchg
sbb
xor
divl
insb
adc
and
aad
cmpl
xchg
test
pop
ret
dec
and
inc
inc
jmp
leave
movl
xlat
xor
adc
stc
cs
popf
decb
sbb
fwait
call
and
ljmp
sbb
mov
int
jbe
and
popa
mov
push
jbe
and
add
fnstenv
nop
inc
lock
sub
test
inc
addb
dec
outsl
out
push
insl
imul
xor
adc
aaa
push
test
xor
mov
or
pop
dec
fwait
push
lock
lds
imul
addr16
nop
negl
and
add
call
sbb
adc
xor
cltd
push
jl
loopne
in
pop
cli
and
xchg
imul
aam
and
xor
ret
fcmovu
neg
jl
addr16
call
lods
shlb
xor
mov
xor
xor
cmpsb
lds
add
iret
jmp
icebp
fldt
pop
mov
xor
js
sbbb
mov
inc
lcall
sbb
outsb
sub
xchg
adc
jle
in
lods
insl
scas
jne
jecxz
test
pop
inc
out
dec
adc
repnz
rorl
mov
fwait
js
mov
xchg
enter
pop
cmpsl
push
js
mov
fcomps
adc
sub
enter
add
xchg
cmp
mov
popf
dec
push
fidivs
fcmovnbe
inc
jge
push
sarb
mov
add
push
subb
data16
cmp
cmp
adc
lods
scas
xchg
fnsave
mov
mov
sub
sbb
lret
out
inc
popf
xor
mov
stos
out
shlb
mov
mov
lahf
cs
pop
lea
sub
or
xchg
xchg
outsl
scas
jp
vpminsw
addr16
dec
adc
das
test
xor
mov
test
stos
jno
ja
jno
aam
neg
adc
mov
adc
adc
dec
jmp
add
xchg
js
cmp
enter
pop
jb
jns
add
scas
mov
xchg
cmp
scas
sub
repz
movsl
jmp
pusha
fnstsw
or
in
xchg
dec
fs
mov
bound
ss
test
jnp
inc
push
jecxz
fiadds
xchg
inc
inc
xchg
pop
cli
sbb
and
pop
es
inc
inc
push
mov
cmp
add
subw
dec
les
add
loop
push
lret
movsl
sarl
jnp
popa
xchg
xchg
mov
div
push
repz
cmp
mov
incb
push
fdivrs
fwait
mov
xor
push
push
xchg
es
jmp
out
xchg
dec
daa
in
adc
inc
stos
ret
bound
xchg
sub
lea
std
and
sbb
imul
push
pop
pop
and
xorb
iret
stos
pop
xchg
adc
jae
sahf
ret
push
fwait
sti
imul
mov
outsl
mov
sbb
push
dec
jp
xchg
ds
andb
xchg
push
push
jno
leave
sub
mov
inc
out
push
aaa
xchg
and
js
lret
adc
dec
ljmp
jbe
cmpsb
cltd
lods
inc
xor
mov
fsubrl
das
jne
dec
movsl
es
push
pop
cmp
rol
pop
inc
mov
pop
in
in
shrb
cwtl
out
aad
dec
sub
mov
pop
into
xchg
mov
hlt
psubsb
mov
jbe
int3
int
jns
test
cmpsl
mov
push
xchg
das
or
mov
add
popf
xchg
loope
xor
iret
adc
mov
cmp
je
xrelease
or
lret
aaa
leave
out
sub
xor
or
cmpsb
push
sub
xorb
xchg
imul
cld
pop
shrb
inc
out
xor
xchg
mov
inc
lahf
idivb
fisttpll
pop
cli
xchg
push
adc
lahf
cmp
push
and
dec
loop
xor
and
gs
adc
jmp
push
dec
adc
int3
pop
mov
sub
push
ret
es
insb
jno
cmp
fidivl
xchg
cmpl
fwait
jge
or
jnp
popa
sub
mov
cmc
jae
or
pushf
iret
jge
mov
cmp
mov
jmp
dec
lods
aad
pop
jo
adc
lcall
imull
outsb
gs
cli
cmp
js
cmpsb
mov
dec
fs
cs
jl
enter
jl
out
or
add
adc
mov
subb
xorb
int
push
test
fwait
js
push
rcl
or
notb
xchg
frstor
lret
pop
dec
in
aad
rclb
cmp
pop
xchg
mov
pop
sub
sub
iret
inc
cld
lret
mov
pushf
sub
mov
xchg
push
jecxz
mov
push
push
cmp
push
aaa
clc
jne
push
lods
or
ret
aad
out
ret
jmp
ret
jle
les
add
outsl
xchg
mov
nop
jnp
popa
in
pop
ficoml
cld
mov
pop
jae
fs
icebp
pop
stc
clc
jp
icebp
sub
push
cltd
icebp
pop
aam
in
cs
sub
fisubl
mov
adc
cmp
sti
sbb
mov
xchg
mov
hlt
jb
xlat
or
mov
outsb
sarl
loopne
loop
inc
lret
imul
pop
mov
mov
mov
js
jl
jle
push
jo
fdiv
jp
nop
and
stos
dec
mov
or
andb
or
ljmp
and
jl
inc
negb
mov
adc
out
or
test
pop
outsl
and
push
setle
xlat
addb
stos
and
dec
cmp
out
add
cld
xchg
sar
stos
jle
int3
mov
movsl
js
ret
leave
add
mov
xor
lds
outsl
aad
cmp
push
cmp
call
inc
pop
jle
in
adc
lret
and
std
xor
aaa
xor
test
movsl
outsl
sti
cs
das
inc
stos
jmp
or
mov
aad
imul
loop
sbb
mov
scas
inc
xor
call
jl
scas
cmpsb
rclb
fcomps
cmp
mov
iret
leave
cmp
cltd
int3
xor
dec
test
mov
je
jge
repz
push
add
pop
mov
call
mov
jnp
insb
cmpsl
cmpsl
xchg
loop
imul
scas
cmc
jno
or
jo
and
ss
cltd
test
pop
scas
js
or
and
enter
loopne
xor
xchg
push
insl
shlb
xchg
jl
mov
les
scas
inc
dec
xchg
dec
mov
out
fs
xchg
jae
xchg
adc
aas
cltd
imul
popa
fildll
mov
sub
out
adc
scas
xor
and
dec
icebp
data16
ja
or
cmp
jbe
and
and
cwtl
adc
cmp
xchg
add
mov
jmp
lcall
addr16
test
pop
mov
jbe
sbb
jmp
and
jno
std
xlat
adc
add
outsl
jl
rcrl
and
cmp
sbb
jno
pop
jne
pop
clc
mov
adc
pop
jns
push
incb
xchg
inc
pop
outsl
popa
cmp
call
sbb
popf
add
cmpl
mov
xlat
adc
jb
jecxz
push
dec
mov
xchg
jb
mov
call
fistpll
std
cmp
notl
ret
mov
xor
clc
in
push
add
insl
pop
jns
loopne
bound
stos
pop
mov
sti
inc
lahf
ret
cmp
or
mov
clc
or
or
ret
in
cmp
fcmovnu
add
mov
dec
or
repz
cmpsb
int3
enter
mov
push
loop
lahf
push
hlt
push
mov
xor
fists
test
std
pop
adc
mov
xor
shll
add
mov
cmp
mov
mov
add
push
out
jg
push
roll
clc
cmc
or
push
xchg
and
pop
les
pop
shll
push
xchg
xchg
push
cld
scas
rorb
pop
js
inc
iret
inc
mov
pop
nop
cli
daa
cmp
sbb
xchg
jle
aaa
push
inc
sbb
or
cmp
gs
insl
cld
push
fists
fnsave
add
add
xor
pushf
sti
repz
and
jae
and
cmpsb
sbbl
and
mulb
fdivr
int3
mov
and
mov
lods
xor
sbb
into
mov
movsb
or
pop
add
aaa
movsl
fwait
mov
fisttpl
shlb
xchg
adc
xchg
sub
jge
pop
loope
pop
inc
dec
mov
xchg
test
ret
sbb
lods
loope
hlt
xlat
mov
shlb
ret
adc
push
inc
not
lcall
jl
or
mov
leave
push
fistl
fnsave
bound
sti
rorb
mov
sub
ss
sti
xor
sar
lock
sbb
mov
fdivl
jae
leave
shl
lds
cmp
jns
sbb
jmp
nop
lcall
insl
movsb
mov
jmp
mov
movsb
movsl
sub
inc
and
xorl
push
and
scas
repnz
sbb
add
popa
push
add
imul
jg
orb
jns
add
xchg
adc
adc
jl
pop
stos
sub
std
enter
xchg
and
mov
sti
dec
and
xchg
arpl
cmpsb
inc
sub
xchg
mov
add
mov
sub
xlat
ret
gs
mov
adc
pop
push
test
jl
cmp
icebp
mov
push
xchg
fists
dec
mov
pop
outsb
pop
mov
out
es
stos
push
jp
test
lods
or
fistps
rcr
push
mov
sbb
sbb
inc
jmp
xor
roll
insb
dec
aaa
xlat
mov
mov
inc
stos
cltd
xchg
popf
sub
ret
inc
pop
movsl
cmp
dec
imul
ret
xor
mov
dec
pusha
ds
leavew
mov
push
addl
aad
cmp
sub
dec
fincstp
jl
mov
inc
push
xorb
addr16
sbb
lcall
cmc
jno
jle
pop
les
fidivrs
pop
pop
dec
outsb
lcall
jl
testb
mov
movsb
sub
je
pop
lret
dec
pushf
jo
jle
xor
enter
push
sub
mov
dec
movsb
mov
xor
les
orl
sub
pop
cwtl
jbe
mov
mov
testb
je
stc
or
inc
test
pop
xor
pop
sub
cld
xchg
addl
push
aas
xchg
std
push
or
xchg
push
push
nop
int
jo
dec
xor
dec
gs
push
aad
sbb
xor
lret
jle
imul
out
dec
mov
mov
and
shlb
sub
cmp
cli
insl
aas
lcall
or
in
jge
sbb
cli
xchg
pushf
xchg
in
popf
rcr
cmpsl
push
mov
repnz
arpl
dec
fwait
out
sbb
lds
sub
hlt
icebp
les
and
sub
ret
push
lods
aaa
enter
add
lea
xor
test
insl
push
aaa
stos
aad
mov
xchg
jl
inc
fbld
pop
loopne
call
enter
add
pop
xchg
lret
jns
sub
push
cmp
or
mov
pop
jae
fwait
or
fcomps
cmp
cmp
cli
jne
pop
xor
lods
push
je
sbb
popa
sbb
insl
lock
imul
dec
les
ret
lds
dec
cltd
enter
popf
adc
jl
cmpsl
fs
xor
mov
outsl
jo
xor
dec
push
push
inc
mov
lret
cmp
mov
jp
shl
or
sub
ljmp
adc
movsb
push
add
push
rcll
xor
arpl
and
shlb
rorl
hlt
inc
xorb
ret
es
test
les
movsl
sbb
lds
cltd
sti
jl
jo
sbb
adc
movsl
or
push
mov
mov
aaa
push
push
cld
jb
jge
fsubr
nop
add
ljmp
das
movsb
aam
int3
inc
mov
sub
sahf
mov
ss
push
push
fimuls
icebp
mov
movsb
mov
mov
mov
push
push
pop
adc
nop
cmpsl
jecxz
sub
jp
sub
stos
lret
mov
fsubs
jmp
mov
xchg
and
xor
enter
mov
ret
sub
cmp
in
push
xchg
sbb
jb
stos
fdivrl
int3
push
cmp
pop
cmpsl
add
stc
data16
push
fildl
arpl
jge
adc
lret
js
push
dec
sub
mov
movsl
push
sbb
hlt
push
jge
jne
push
adc
into
in
jmp
repnz
sbb
and
push
dec
sarb
xor
pop
inc
fisubrl
insl
nop
xchg
mov
push
aaa
mov
push
into
xchg
or
hlt
fadds
inc
test
push
repz
push
divl
add
lahf
les
inc
push
cmp
xchg
fmull
call
and
cmpsb
sub
arpl
sti
stos
mov
leave
cli
push
aas
jno
js
mov
aad
out
xor
lods
lds
std
add
adc
xchg
fwait
mov
sub
adc
push
lret
ds
rorb
fldt
lahf
inc
inc
jnp
lahf
imul
push
outsb
push
lret
cmc
add
enter
jae
cmp
mov
and
loope
shlb
xchg
mov
cli
out
mov
jbe
or
jmp
sub
stc
in
mov
mov
pop
rcll
adc
cmp
jle
add
adc
ret
dec
out
xchg
loope
test
xchg
int
lods
dec
mov
cmpsl
insb
jmp
jne
xchg
mov
and
dec
test
inc
les
cmp
js,pt
outsb
sbb
sbb
fisttps
gs
push
scas
imull
mov
cwtl
mov
mov
or
push
pushf
sub
xchg
and
test
out
fmull
test
xor
adc
jnp
mov
add
cmpsl
fcoms
xor
lock
mov
dec
bound
push
jmp
mov
adc
or
sbb
mov
insb
test
test
adc
in
mov
adc
xchg
sbb
jbe
leave
xor
mov
mov
faddl
jp
addr16
mov
in
pop
sub
movsl
cmp
test
mov
subl
movb
repz
lock
sbb
pop
cs
inc
lods
mov
push
imul
clc
pop
adc
cwtl
fisttpl
xchg
mov
mov
sbb
insl
stos
loope
sbb
aad
insb
hlt
mov
aam
aad
push
sub
movsl
sub
aad
ljmp
pop
mov
or
mov
push
inc
cmp
shrl
inc
sub
and
push
out
push
jl
or
fs
notl
rcrb
ret
ficoml
push
cmp
stc
dec
cld
xor
repnz
cwtl
inc
out
out
fwait
jecxz
xchg
mov
sbb
or
nop
inc
shlb
out
cmpsl
pop
stos
fs
sbb
jle
mov
push
adc
jmp
pushf
adc
sub
pop
ljmp
stos
adc
pop
addr16
jno
cmp
adc
shlb
aaa
lret
jnp
push
imul
fs
orb
push
loopne
jno
push
movsb
pop
pop
cmp
jno
pusha
add
sub
out
pusha
jno
repnz
pop
xlat
xor
std
inc
mov
adc
inc
add
sbb
or
mov
add
cli
xchg
push
mov
pop
xchg
orb
mov
mov
lods
fmul
xchg
mov
stc
sbb
pop
jbe
sbb
out
ret
mov
je
repnz
aam
push
or
idivl
and
rcrl
push
xchg
jns
popa
or
xlat
addr16
jbe
imul
cmp
in
jo
pop
movsb
scas
loopne
mov
xchg
xchg
lock
mov
jo
push
mov
xchg
and
imul
sbb
les
insl
mov
inc
fcmovu
loop
push
call
adc
fcmovnu
cli
push
lcall
loopne
stc
or
aam
dec
add
jae
and
or
push
xlat
pop
sub
pop
outsl
leave
out
jecxz
and
adc
fwait
jo
arpl
inc
in
out
cld
aaa
leave
xor
mov
or
test
std
jo
fdiv
repnz
xlat
jb
insb
add
repnz
xor
sahf
repz
dec
cli
xchg
dec
add
mov
jl
pop
lds
mov
aaa
dec
mov
inc
sub
arpl
jno
imul
push
pop
jae
jb
lahf
sub
fists
push
sar
rclb
sti
dec
scas
leave
testl
iret
gs
loop
sub
shll
stos
cmp
fwait
aaa
int
fadds
push
dec
cmpsb
sbb
test
out
stos
jl
rcll
jns
jbe
mov
push
movsl
mov
mov
pop
xchg
cmpsl
push
jo
std
xchg
lods
mov
xrelease
jge
and
stc
lods
mov
insb
pushf
data16
lea
imul
lds
stos
xchg
xchg
std
mov
xor
pop
xchg
xchg
stos
pop
mov
aaa
cld
lods
push
sarb
mov
xchg
xchg
aaa
adc
enter
dec
pop
xchg
lods
lods
test
sub
fidivrl
cltd
daa
aaa
pop
mov
das
pop
cmpsb
mov
iret
mov
roll
xor
pop
aad
add
xchg
add
aaa
lods
xchg
pop
mov
mov
js
sbb
inc
dec
or
push
cmp
dec
xor
fsub
push
sti
jb
shll
mov
dec
pop
bnd
insl
jge
mov
mov
dec
xchg
add
hlt
jmp
add
mov
mov
std
popf
sbb
inc
adc
int
add
mov
adc
pusha
lds
insb
ror
in
sbb
int
into
add
jns
sbb
mov
call
sbb
cmpsl
cmp
mov
sbb
dec
cmp
cmp
sbb
clc
sbb
dec
pop
into
aad
sbb
cmp
mov
xor
cmp
test
pop
sarl
mov
mov
xchg
dec
fcoml
mov
cmc
clc
shlb
stc
cmp
scas
in
jbe
adc
mov
inc
mov
es
out
inc
push
pushf
gs
inc
cmp
cltd
gs
or
ljmp
lfs
imul
add
adc
popf
int
sub
ds
mov
xchg
pop
inc
push
cltd
jns
test
dec
lods
mov
insl
mov
pop
dec
inc
dec
cld
ret
pusha
je
inc
je
divb
dec
jge
mov
jno
adc
mov
negb
push
pop
loopne
mov
mov
or
testl
sbb
xchg
subb
jnp
cltd
sahf
loop
sbb
jecxz
xchg
popf
arpl
push
or
aam
fcomps
dec
inc
leave
pop
add
sub
into
clc
dec
mov
imul
cli
pop
dec
fs
rcll
push
xor
mov
xor
mulb
mov
xor
jne
pop
lea
call
adc
lods
cmc
adc
xor
movsl
push
xchg
sbb
push
andb
fisttps
leave
mov
mov
add
popf
hlt
data16
pop
mov
pusha
push
test
or
push
clc
aas
scas
ficompl
xor
cmp
mov
adc
push
adc
ja
inc
inc
inc
xchg
mov
dec
int
ss
pusha
in
or
dec
jns
ja
ja
xchg
cmp
psadbw
jo
pop
push
andl
or
jg
js
pop
or
shlb
mov
xorb
fdivrs
push
mov
int
out
dec
cmpsl
fistps
je
clc
inc
decb
mov
pop
mov
pop
bnd
and
mov
out
add
or
xor
sbbb
leave
test
fs
mov
and
pop
movsl
pop
aas
sub
dec
popf
inc
push
pop
fsubrp
add
aam
mov
fmull
mov
xchg
sahf
cmp
jp
sub
push
cmpsb
sti
daa
jne
lahf
xchg
add
pop
test
mov
mov
testb
adc
dec
jne
pop
mov
out
pop
insl
inc
lahf
jae
rcl
cs
mov
xlat
shll
aaa
movsl
bound
pop
outsl
clc
adc
shrl
adc
sbb
mov
int
fisubl
dec
mov
ja
mov
sbb
push
insl
test
or
std
cmp
sub
push
xor
iret
xor
lret
jge
push
arpl
and
xchg
js
popl
jnp
outsb
push
jnp
out
dec
out
lcall
xchg
jl
inc
xlat
or
scas
pop
shlb
insb
mov
inc
pop
arpl
mov
mov
push
repz
sbbl
xor
or
cmpsb
fdivrl
adc
jns
dec
and
out
dec
push
push
pop
stos
push
arpl
das
inc
inc
xchg
sub
out
iret
icebp
sbb
push
adc
xchg
movsb
adc
pop
test
cmc
fiadds
xchg
mov
cld
push
fcomip
hlt
cmp
sbb
push
aad
mov
and
jo
lret
push
fldenv
dec
jbe
ljmp
mov
mov
test
not
add
push
sbbb
xor
xlat
sbb
cmp
pop
adcl
loope
hlt
dec
pop
in
jmp
stc
mov
int3
cmp
fsubrs
lret
test
push
push
dec
xlat
push
mov
push
loop
test
insb
in
daa
pop
out
or
ss
fcoml
adc
jmp
mov
or
ss
adc
inc
outsb
push
fldenv
dec
imul
scas
mov
into
outsb
data16
mov
jno
jae
mov
rol
jle
je
mov
sub
repnz
call
mov
sbb
mov
mov
je
lods
mov
cmpsl
aad
sub
mov
ret
mov
repz
jge
dec
mov
lock
sub
xchg
imulb
sarb
xchg
and
dec
aas
rolb
fidivrs
js
aaa
jmp
adc
jnp
movsb
test
add
or
dec
mov
mov
mov
ds
ds
in
mov
aam
sub
lahf
mov
push
mov
out
notl
xor
xchg
sarl
jp
mov
mov
push
rclb
imul
bnd
outsb
std
pop
hlt
mov
inc
lahf
pop
insb
cmp
loop
mov
mov
mov
lock
inc
movsb
aas
xchg
inc
pop
mov
mov
xor
add
push
pop
jecxz
sub
aaa
js
sub
jp
enter
in
pop
rorb
test
xor
add
mov
into
aas
push
cmp
xchg
in
pop
outsb
aam
int
iret
push
add
ljmp
xor
outsl
pusha
cmp
xor
aam
xchg
push
stos
xchg
gs
sub
cmpsb
mov
out
decb
inc
jp
or
push
in
fs
or
push
cmpsl
push
test
xchg
jo
pop
subb
or
imul
iret
jecxz
sahf
mov
push
fadd
push
in
sub
add
sar
xor
sub
ret
pop
lods
jno
push
movsb
outsl
jmp
mov
mov
in
and
or
adc
aad
movsb
jp
jnp
in
das
in
fsts
xor
hlt
mov
jns
pop
int3
or
xchg
lcall
lds
and
scas
mov
imul
mov
adc
add
cwtl
mov
into
sbb
rcll
pusha
aam
push
repz
insl
gs
test
je
pop
pop
mov
and
arpl
dec
pop
out
push
fwait
jb
xor
xchg
out
arpl
lods
call
sub
adcb
sub
jp
mov
adc
aad
inc
lds
in
leave
xor
jg
cmp
mov
out
and
or
adc
fistpll
nop
ds
cmp
sub
cs
pop
mov
das
int3
cwtl
arpl
mov
lock
push
mov
xlat
lock
xchg
in
es
outsl
xor
xlat
ds
in
dec
xor
or
mov
dec
pop
mov
adc
cmp
or
adc
xor
push
in
fistpll
out
adc
cmpsb
aam
test
pop
xchg
movl
mov
insl
stc
cmp
loope
cmp
mov
fnstcw
js
xor
mov
ljmp
mov
int
lods
push
loope
ffreep
xor
cmp
or
ja
jo
nop
inc
xchg
js
mov
data16
cld
sub
out
jae
xor
std
ds
adc
add
jns
push
lods
adc
mov
push
outsb
dec
cs
fsub
aam
mov
int
dec
rcl
xor
xchg
hlt
lret
roll
inc
loop
dec
sbb
dec
cli
push
cmp
xchg
jae
outsl
xchg
push
jp
loop
aam
insl
imul
decb
fisubl
nop
call
mov
pop
cmp
sub
adc
mov
out
or
inc
sbb
cwtl
jg
add
jge
aam
shll
sub
xlat
or
dec
and
mov
sub
jmp
dec
test
int3
pop
roll
jbe
jne
xor
or
sbb
lret
popf
and
xchg
das
std
mov
orl
ljmp
lods
or
mov
and
pop
data16
add
neg
push
pop
jne
and
or
xor
xor
cmp
xchg
idivl
stos
push
lods
and
lock
xor
add
inc
clc
or
fidivrl
jle
mov
sbb
cmp
test
in
dec
or
xchg
jne
cld
xchg
ds
jne
cli
mov
int
xchg
push
sub
mov
scas
inc
int3
mov
sbb
insl
lcall
or
sbb
lcall
test
pop
in
pusha
mov
cmp
stos
mov
pop
inc
add
pop
scas
xchg
arpl
mov
repnz
xor
imul
adc
shll
int3
pop
and
int
adc
jne
cmpsb
or
filds
testb
lock
lock
imul
xor
hlt
mov
loopne
lahf
insb
mov
bound
cmp
dec
or
cli
sti
push
mov
mov
push
lret
mov
imul
movsb
mov
lret
mov
pop
jno
mov
sub
std
lcall
das
lea
push
mov
adc
cs
in
scas
mov
scas
mov
sbb
cmc
repnz
mov
test
mov
add
stos
jno
xlat
mov
sbb
pop
cltd
repz
sub
sbbb
or
cli
outsb
mov
scas
cmp
pop
push
xchg
outsl
test
jno
jmp
jge
andps
int3
je
bound
pusha
or
add
xchg
dec
mov
dec
jnp
dec
insl
test
into
xor
and
push
mull
adc
fucom
repnz
push
scas
jne
es
popa
rclb
dec
sti
xor
cmp
lock
loopne
rolb
mov
mov
mov
jae
lret
jb
push
fdivrs
cmp
fidivs
dec
andl
das
or
in
out
aam
popf
mov
dec
cmpsb
dec
sub
shlb
rclb
xchg
sbb
pop
jb
fnstcw
xor
inc
cmc
ss
or
sub
ffree
cmp
leave
ja
jno
movb
pop
mov
mov
xchg
mov
push
scas
int3
mov
decl
cmp
sahf
sub
jge
dec
scas
push
ret
pop
sub
mov
outsl
add
repnz
mov
ffreep
ds
out
and
adc
fimuls
xor
dec
jno
inc
push
mov
rcrb
mov
mov
sub
loop
mov
test
movb
inc
stos
jg
xor
pop
fisubrl
loop
stc
sti
cwtl
xchg
std
int3
testb
jns
mull
mov
and
stc
adc
subb
addr16
jle
lods
scas
mov
mov
sbb
sahf
test
bnd
xor
jl
push
in
xchg
xchg
pop
mov
popa
mov
dec
int
mov
fidivs
lea
ret
cmpb
dec
testl
mov
jge
dec
andb
pop
push
jmp
cmp
sbb
fwait
test
xchg
sahf
jbe
xchg
adc
dec
mov
jne
dec
sbb
push
pop
cmp
xchg
subl
jmp
inc
inc
subb
add
fs
and
pusha
push
je
sub
mov
dec
dec
lahf
ljmp
mov
and
cmp
sbb
mov
pop
dec
mov
cs
shr
call
test
xchg
cmpsb
cmp
scas
push
inc
gs
or
push
add
ss
mov
push
sub
in
cs
add
add
call
xor
adc
addr16
out
sub
mul
mov
dec
ja
xor
fidivrs
cmp
aas
push
cmp
push
aad
push
and
pop
sub
pop
cmp
inc
fdivrs
in
push
push
call
popa
jge
clc
pop
int
mov
mov
xor
icebp
mov
jnp
jae
inc
add
inc
pop
push
outsl
push
hlt
out
xchg
dec
cmp
out
and
push
mov
int
stos
in
outsb
cmp
xchg
add
dec
cltd
mov
or
push
adc
rclb
stc
cltd
mov
pop
imul
sahf
fwait
sbb
stc
int3
imul
sub
adc
fiadds
xchg
pop
popa
shll
mov
in
es
shl
arpl
sbb
fstpt
cmp
xchg
jle
fstl
rorl
pop
lcall
fbld
lahf
out
jnp
xchg
xor
jne
fisubrs
enter
push
fmulp
lods
sub
xor
lcall
or
inc
ret
jge
js
test
dec
imul
aam
xchg
mov
mov
mov
in
pop
and
pop
jp
xchg
loop
cmp
xchg
add
mov
pop
cmpsb
cmp
sub
sar
jge
jbe
adc
mov
arpl
inc
outsb
push
jne
sbb
sbb
arpl
nop
sub
jge
sbb
push
push
xchg
cwtl
sbbb
mov
leave
ret
mov
fbld
xchg
sarb
imul
lea
mov
scas
mov
scas
fsubr
notb
add
xor
loope
inc
scas
clc
adc
in
das
mov
jbe
rolb
jp
stos
mov
movsb
sub
test
cmp
or
lds
hlt
pop
xor
out
lock
jg
lret
mov
adc
enter
xchg
sbb
enter
arpl
dec
jnp
dec
aad
ljmp
imul
cmc
aaa
and
mov
stos
in
stos
aas
mov
mov
stc
cmp
or
enter
mov
dec
push
mov
xor
les
insb
adc
cmp
lea
outsl
lods
mov
adcb
dec
outsb
notb
jmp
scas
movsl
push
fdivs
ja
inc
mov
into
insb
xchg
dec
inc
push
and
ss
in
adc
fdiv
pushf
jecxz
outsl
int
fsubrs
in
ds
dec
or
popf
pop
sbb
aam
clc
dec
jae
dec
mov
stc
push
jmp
mov
xchg
popa
popf
add
inc
xchg
shlb
push
adc
aas
outsb
adc
repnz
jbe
cwtl
xchg
cld
loopne
sub
inc
repz
outsb
subb
push
leave
inc
mov
cmp
inc
cmp
mov
mov
shll
mov
mov
shlb
xor
and
jle
mov
insw
mov
int3
stos
dec
cs
ja
push
outsl
adc
ret
mov
ret
xchg
pop
push
jg
outsb
cmpsb
or
push
inc
jge
xor
out
inc
and
stos
jb
jns
testl
xlat
inc
mov
jmp
fildll
out
pop
dec
cmp
cmc
cmc
cmc
jo
add
dec
pop
mov
push
xbegin
aaa
inc
lods
xchg
dec
cltd
sub
les
add
jne
stos
and
push
xor
add
and
jecxz
pusha
pop
loopne,pt
add
lds
jecxz
rolb
jmp
jns
fcoml
hlt
sbb
mov
xor
cmp
mov
inc
pop
jne
mov
xchg
inc
or
ss
out
push
mov
pop
in
in
jns
leave
std
mov
lret
mov
or
fs
leave
pop
jmp
cld
outsl
mov
sbb
adc
lock
ret
push
jge
add
nop
dec
rorl
cmpsb
cmpsb
xor
jbe
leave
pop
ja
je
push
sbb
jns
pop
cmp
daa
and
arpl
cwtl
imul
in
icebp
loop
and
mov
ss
or
dec
and
test
pop
cli
add
aaa
cs
out
lods
pop
adc
int
and
xchg
fistpll
divb
jns
jl
mov
adc
adc
pop
adc
mov
out
add
repnz
int
mov
icebp
sub
loopne
fwait
cmpb
jnp
int3
dec
lea
cltd
cmp
aad
jle
inc
outsl
std
fwait
leave
xlat
lods
dec
dec
stos
mov
fwait
adc
rclb
lods
pop
out
sti
dec
jl
and
add
mov
and
clc
mov
mov
cmp
or
lock
jge
js
ret
mov
sub
popf
rorl
fucomp
loope
rorb
in
inc
and
out
subl
gs
lret
push
inc
gs
mov
loop
fwait
lahf
mov
pusha
pop
xor
movsl
jecxz
aam
add
in
fldt
push
insb
fidivs
fldenv
jle
dec
push
imul
mov
cld
or
gs
repz
mov
rorb
sbb
ret
jno
std
repnz
idivl
add
pop
in
jo
mov
jmp
jne
pop
pop
pop
pop
mov
data16
aam
pop
sbb
cltd
xchg
mov
mov
test
add
shll
ja
lahf
add
inc
mov
imul
ds
sub
out
jge
mov
clc
ret
mov
jge
iret
mov
dec
cmp
push
ror
jg
push
add
jae
jnp
jp
jmp
xorb
sahf
js
inc
cmp
sub
mov
fiaddl
xchg
out
adc
xchg
pop
leave
imul
fisubl
cwtl
jp
jnp
jecxz
outsb
sbb
shrl
cs
jo
mov
fiaddl
ret
inc
arpl
xor
testb
stos
push
test
in
sbb
push
and
sbb
push
stc
daa
repnz
pop
lds
and
dec
in
push
inc
adc
xor
andl
loop
fstpt
cli
lret
out
mov
jmp
adc
shll
jmp
fstps
cmp
sbb
cmc
push
in
pop
xorb
fdivrs
out
inc
clc
pop
cmc
dec
mov
xchg
mov
enter
pusha
push
dec
and
js
mov
imul
dec
sbb
push
xchg
adc
push
stos
xchg
das
or
in
arpl
adc
xchg
cmp
ds
mov
sahf
dec
push
insl
sbb
sub
outsb
frstor
testl
andl
movsl
popa
cmpsb
subb
jo
ret
push
push
sub
aas
outsl
fildll
sub
push
loop
sbb
movsl
rcr
call
subb
jge
mov
sub
mov
movsb
sahf
mov
ficoms
jg
loop
mov
es
fdivrl
jae
push
fwait
dec
inc
sbb
and
test
mov
push
arpl
jno
cmpl
dec
pop
stc
adc
push
rcl
mov
dec
or
add
push
xor
paddw
inc
or
mov
push
das
mov
xor
adc
repz
mov
out
mov
call
jbe
fmuls
stos
xchg
sahf
jle
in
adc
mov
dec
sub
cmp
in
sbb
or
bound
or
jne
scas
jle
ja
add
push
xor
ror
jecxz
andl
jge
and
out
push
test
imul
lret
cmpsw
xor
rclb
test
mov
mov
sbb
jle
xor
cs
pop
mov
cmpsb
dec
push
sbb
sub
mov
mov
ss
hlt
push
jmp
lock
scas
daa
adc
nop
les
add
jno
mulb
out
das
mov
lock
and
outsb
test
aaa
add
lds
ret
pop
shll
inc
and
dec
mov
les
rolb
adc
pop
aas
cmpsl
jp
rorb
pop
int3
xchg
add
jge,pt
sub
adc
cmpsb
push
push
mov
add
push
ret
shl
sbbb
adc
stos
into
js
aas
out
mov
scas
sbb
aaa
mov
mov
bound
jge
les
lock
loopne
pop
jo
insb
xor
jne
dec
mov
movsb
psraw
or
sub
imul
mov
out
fmul
dec
sbb
jp
daa
test
push
outsl
sbb
out
je
cmp
push
mov
xchg
sub
xor
inc
sub
int3
xchg
sbb
mov
sub
cmp
hlt
fists
scas
fcomp
xchg
adc
sub
push
ss
cmp
lds
inc
inc
fdiv
push
adc
cmc
loop
jge
add
sub
iret
scas
sbb
mov
xchg
push
aas
in
add
shr
xchg
pusha
inc
dec
inc
cltd
aas
sub
pop
mov
cvtdq2ps
add
aaa
or
test
clc
rcl
je
cmp
push
dec
cmp
jnp
test
jle
sub
fs
ja
sbb
lret
sub
in
cld
add
cwtl
test
test
iret
pop
and
sub
xchg
jmp
lea
mov
fldcw
orb
push
pop
mov
mov
xchg
dec
push
fidivrs
adc
mov
mov
adc
lds
fcomps
mov
mov
outsb
sub
inc
ss
out
inc
aas
and
push
rorl
dec
daa
mov
sbb
inc
jmp
std
xor
mov
sbb
jmp
fst
sti
ja
cmp
sub
cmp
sbb
out
test
fwait
addl
adc
push
enter
pop
xlat
jne
cld
lds
or
jle
dec
nop
movsb
or
fs
je
or
push
in
lods
jg
jbe
fs
sub
outsl
fwait
imul
subb
push
xchg
cmp
scas
push
enter
jnp
lret
ret
in
pop
dec
jbe
loope
imul
shlb
jmp
add
and
cmp
or
gs
jp
out
lods
cld
bound
adc
sub
popf
ficompl
push
xor
imul
cmp
push
mov
adc
or
jmp
sub
mov
lods
pop
jmp
cmp
pop
mov
popf
repnz
pusha
xor
loopne
xadd
mov
out
mov
push
out
mov
ja
xchg
mov
xchg
xor
aam
data16
nop
jge
sbb
adc
and
lret
rol
mov
in
nop
repz
mov
or
stos
mov
mov
into
mov
test
push
daa
movsb
cld
cmp
jnp
out
push
or
mov
les
mov
cmp
shll
fidivrl
fcompl
fwait
mov
out
das
repz
rorl
cmc
push
mov
adcb
add
xchg
and
nop
nop
cs
pop
dec
or
cmp
adc
jecxz
faddl
fsubs
test
sub
sbb
cmp
jg
adc
mov
loopne
and
mov
movsl
or
xor
sub
pop
xchg
testl
leave
adc
mov
pop
dec
das
popl
lcall
repnz
in
mov
xchg
inc
nop
mov
inc
pop
or
subb
jae
and
jle
shlb
push
stos
xchg
and
ret
idiv
sti
rorl
or
xchg
clc
jns
add
jle
aam
sbb
fs
arpl
jg
mov
dec
dec
sub
hlt
sub
mov
xchg
test
int3
push
jmp
mov
add
or
fnstcw
out
or
pop
xor
mov
mov
ret
cli
mov
xchg
and
sahf
jp
test
stos
test
or
loope
lahf
mov
ss
leave
pop
sub
adc
dec
sub
push
orb
cmpsl
pop
add
pop
sarl
or
or
incb
shl
jg
or
cltd
addl
xchg
fldcw
mov
inc
add
enter
add
pop
imulb
fmul
xor
mov
out
in
iret
arpl
xlat
test
aad
push
and
dec
jp
inc
hlt
mov
fcomp
jnp
mov
mov
inc
testb
add
lea
clc
sar
int3
push
cmc
xchg
negl
and
xor
cli
pushf
add
xor
aam
push
shll
xchg
cli
test
jmp
fdiv
dec
pop
lods
out
dec
jnp
jle
cmpsl
inc
imul
pop
leave
jbe
ljmp
ja
push
aam
ljmp
cmp
popf
std
loop
cli
ffree
int3
loopne
xchg
cmp
js
adc
in
xchg
imul
sbb
sbb
sub
cltd
inc
sub
push
movsb
xchg
jae
fdivr
sbb
aad
jp
adc
xchg
push
or
lock
cmp
imul
mov
dec
mov
orl
fwait
imul
fstp
rcrl
or
inc
leave
jae
nop
fwait
dec
lods
add
pop
iret
int
sbb
xchg
addl
lock
cmp
outsb
out
mov
test
xchg
adc
lcall
cmp
shrl
push
out
inc
mov
cli
cmpsb
mov
xchg
xlat
lods
cli
stos
and
orl
jo
fwait
leave
test
dec
movhps
outsl
add
mov
jae
mov
pushf
cmpb
mov
inc
lret
aaa
movsl
cmp
xchg
cmc
mov
push
dec
push
and
or
out
sbb
ja
sub
fwait
lahf
loop
popf
inc
les
fnstenv
or
cmpsl
decl
lahf
jnp
pop
pop
stc
xchg
fdiv
in
es
lods
mov
rolb
and
loopne
jmp
mov
fstl
icebp
add
and
mov
jns
mov
xchg
lock
pop
jge
ffree
sub
push
shrb
jb
ret
divw
in
stc
adc
mov
aaa
mov
fsubrl
jb
rol
fwait
push
orl
mov
ljmp
or
dec
pop
int
pop
mov
xor
inc
mov
dec
push
scas
xchg
sbb
pushf
cmpsb
mov
dec
pop
jo
push
or
mov
les
add
xchg
aad
jmp
and
test
out
test
and
sahf
xchg
daa
cmp
psubq
push
sbb
sahf
adc
cmp
sub
xlat
lock
adc
inc
and
cmp
mov
adc
xor
in
jle
cmp
insb
test
or
sbb
lcall
mov
dec
xchg
pop
aad
jns
out
lcall
mov
inc
jnp
or
adc
mov
into
out
cmp
stos
hlt
lahf
cmpsb
test
cmp
test
cmc
jl
or
push
push
add
aam
pop
shrb
inc
jge
mov
mov
data16
jno
icebp
arpl
enter
xchg
mov
das
imul
je
int3
mov
in
loopne
or
sub
cltd
fwait
xchg
jnp
xor
xchg
mov
lret
les
lcall
xchg
dec
lea
aad
lcall
mov
inc
movsl
sarb
adc
inc
popa
popa
xor
stc
outsb
shll
inc
inc
ljmp
insb
or
mov
add
pop
dec
in
xor
daa
inc
cmpsb
inc
lcall
xchg
xor
or
test
das
add
jp
or
jno
xchg
push
pop
jns
lahf
inc
mov
imul
pusha
cld
add
scas
int3
fdivrp
adc
outsb
into
sbb
mov
bound
int
ds
aas
pop
out
sub
jb
sbb
ror
scas
xchg
aaa
sahf
push
jb
out
test
jp
pushf
lahf
xchg
or
in
or
test
int
mov
shl
jle
pushf
mov
add
rorb
and
push
or
and
sti
mov
inc
daa
idivb
mov
adc
popf
lock
lods
pand
in
mov
xchg
lods
xor
ja
add
mov
inc
jnp
shrl
ret
addr16
cmp
inc
xchg
xchg
mov
test
out
aad
hlt
xor
add
and
ret
test
js
jmp
fsts
cmpsb
test
xchg
pop
jno
jno
daa
icebp
push
mov
mov
cmc
repnz
dec
mov
roll
stc
sahf
push
adc
test
shll
dec
arpl
fnsave
aaa
pusha
push
pop
adc
sbb
add
jg
popf
xchg
pop
inc
xchg
inc
xor
test
mov
outsb
jnp
icebp
dec
lahf
jecxz
mov
mov
fmuls
sarl
pop
fxch
push
aas
pop
adc
jno
push
scas
or
add
lds
adc
add
adc
pop
mov
sub
adc
insl
lods
jbe
sub
pxor
icebp
xchg
dec
sub
pop
jp
xchg
adc
xchg
sahf
inc
mov
cwtl
scas
movsb
loop
dec
stos
call
sub
xlat
lahf
call
pop
dec
aad
push
idivb
and
jmp
adc
sub
decl
and
jl
je
popf
out
cmpsl
sub
in
xchg
fbld
int3
je
push
dec
cli
jp
pop
aas
adc
xchg
sti
xchg
cmp
pop
dec
mov
adcb
roll
addr16
in
xor
addb
outsl
add
add
cld
repz
cmp
ljmp
nop
cmp
lcall
adc
cwtl
cmp
stc
sub
rcrb
jge
pop
fisubl
stos
jmp
lea
into
imul
std
add
int
shlb
jg
pop
daa
in
outsl
push
sub
jmp
mov
xor
xor
aam
test
mov
and
lds
mov
mov
mov
jbe
mov
push
insl
pop
imul
pop
or
shrb
sbb
jne
rcl
xlat
jmp
inc
sahf
in
rcrl
dec
pop
cmpsl
xchg
das
into
aam
pop
xor
xchg
xchg
cmp
push
enter
in
mov
sub
dec
imul
clc
add
frstor
daa
mov
iret
mov
icebp
lcall
or
inc
cmpsl
inc
or
push
inc
pop
mov
jle
pop
pop
dec
mov
adc
ljmp
pushf
imul
fcom
int
fwait
testb
push
xor
xor
pop
out
aas
cmp
adc
jge
cwtl
ret
sub
je
insb
roll
adc
xlat
loop
and
and
sbb
sub
mov
pop
mov
repz
sub
cmp
and
lods
xlat
sub
push
out
movsl
mov
ficoms
sbb
into
xchg
insb
repz
andb
les
sbb
inc
dec
push
sub
cmp
sub
mov
cmp
repnz
les
lods
push
hlt
mov
and
std
or
mov
sbb
adc
jb
filds
es
cmp
faddl
inc
dec
mov
data16
js
clc
xor
mov
push
leave
dec
dec
les
shrb
xor
or
shll
movb
repnz
sahf
cmpb
out
xchg
maxps
movsb
jg
push
push
and
out
fnstcw
add
cmpsl
pusha
mov
adc
push
mov
inc
xorl
and
add
push
jl
ret
mov
mov
rcrb
xchg
js
movsl
test
rep
in
test
pop
cmc
enter
in
scas
add
out
fs
sub
cmp
shlb
sahf
cmc
cld
adc
sbb
adc
int3
repnz
add
test
pop
cmp
mov
mov
xorb
sbb
and
loop
dec
xor
and
sbb
push
cmc
stos
repnz
rcrl
nop
xchg
push
arpl
push
and
adc
aas
scas
adc
shl
jo
inc
popf
sbb
adc
aas
stos
repz
sbb
mov
jne
addr16
lret
lret
pop
rcrl
mov
out
add
outsb
dec
in
imul
hlt
jnp
pop
sub
dec
jbe
stos
fwait
add
ret
stos
inc
sub
pop
fildl
hlt
orl
cmc
inc
mov
mov
cmp
inc
addr16
scas
jb
cld
pop
or
call
adc
add
jb
test
mov
je
mov
pop
popf
jo
push
add
cmpsl
mov
mov
jae
aam
or
cmp
xor
adc
sbb
mov
out
mov
in
data16
lods
dec
pusha
js
inc
inc
sbb
cltd
push
xchg
mov
aad
xchg
lret
or
dec
aad
pop
fdivrp
stc
adc
inc
cmp
in
xor
lods
or
test
imul
int
sbb
sub
xchg
into
scas
cmp
pop
xor
ljmp
mov
mov
sub
ret
int3
mov
inc
in
lret
jb
mov
fadds
in
rcrw
mov
out
movsb
clc
repz
jb
xchg
movsb
addr16
popf
add
bound
adc
cmp
add
int3
and
adc
out
sub
dec
push
outsl
and
cmp
mov
mov
push
stc
mov
fwait
repnz
sbb
flds
mov
push
mov
repnz
lods
inc
scas
xchg
jle
pop
js
out
add
or
test
xchg
adc
shl
mov
add
jp
ja
adc
out
cli
rcrb
mov
nop
mov
ret
mov
rclb
repz
loop
les
rclb
push
and
mov
pop
mov
rol
daa
fdivs
jecxz
mov
stos
cmpsl
mov
push
dec
sub
or
testl
mov
xchg
shrb
push
cmc
cmp
out
out
fildll
mov
add
in
rcrb
sahf
enter
xlat
mov
stos
insl
xor
dec
lock
mov
loop
push
cmpsb
les
add
shrb
xchg
xchg
fisubs
aaa
pop
jg
loop
jb
out
ja
xor
mov
push
js
mov
add
inc
fists
jmp
push
ret
pop
movsb
shl
fidivs
call
sahf
mov
inc
rcll
jo
mov
sub
and
push
xor
in
xor
fcmovbe
add
add
and
lock
in
push
xor
sbb
scas
mov
push
mov
sub
or
cmp
aam
cmp
mov
or
jle
fadd
mov
popa
cmpsl
xor
aas
outsl
enter
inc
scas
stc
or
cmp
rolb
mov
dec
loope
inc
inc
jnp
fdivrp
lret
fdivrl
lret
jb
sahf
push
in
push
insb
pop
in
gs
fdivs
mov
mov
add
xchg
lret
mov
push
mov
mov
lcall
mov
push
jge
es
push
cmc
test
xchg
xchg
vaddsubps
sbb
mov
hlt
mov
mov
cltd
mov
jg
icebp
popf
sbb
aas
and
std
jne
push
fistps
ret
adc
inc
pop
mov
xor
and
out
sbb
inc
mov
addl
inc
mov
rol
dec
das
outsb
es
lea
rclb
inc
sarb
scas
and
mov
sub
xor
push
notb
sub
or
aam
cs
jns
cmp
mov
out
mov
lret
dec
cmp
adc
add
test
sbb
and
add
or
mov
dec
mov
andb
test
xor
xchg
xchg
aas
jmp
xor
adc
adc
outsb
mov
dec
and
xchg
out
pop
xor
xlat
jns
loopne
sub
push
les
xchg
notb
sub
mov
dec
in
ret
cmp
cli
je
and
mov
cwtl
cwtl
cmc
lods
int
add
pop
push
cmc
mov
bound
mov
cmovp
outsb
fildl
aaa
pop
jnp
or
repz
mov
sbb
stos
sub
dec
dec
cltd
test
popf
push
add
pop
adc
pop
mov
arpl
dec
test
xchg
pop
imul
shlb
jns
cs
xor
pop
fistpl
push
inc
xchg
jge
pop
jle
jmp
push
mov
cld
mov
xor
cmp
push
mov
inc
out
jge
addr16
sbb
mov
dec
rorb
sub
pop
push
cmp
subb
test
je
xlat
adc
mov
sbb
sbb
cli
xchg
sbb
inc
sbb
not
mov
call
cmc
xchg
pop
mov
pop
aad
orb
ds
dec
and
adc
fwait
cld
int3
in
jle
or
ljmp
or
xchg
bound
adc
inc
jl
xchg
ljmp
mov
pop
add
mov
dec
popf
xor
jle
add
rcll
mov
mov
mov
adc
dec
push
imul
push
dec
daa
fadds
cmpb
xchg
stc
js
dec
push
xchg
out
dec
xchg
jae
adc
mov
mov
mov
push
mov
and
stos
jb
cmp
les
mov
imul
lret
mov
test
stc
loope
lahf
enter
mov
js
or
lret
and
pop
mov
iret
xor
fbld
test
mov
mov
ds
cmc
xchg
sub
xor
cmp
fs
movsb
out
and
cmp
or
sub
ja
hlt
adc
out
fstpl
das
je
aas
in
jmp
sub
mov
mov
push
adc
sbb
cmp
les
inc
rcrl
in
insl
jg
div
je
das
cmp
daa
ja
sub
sbb
mov
sub
cmpsb
imul
lods
mov
nop
in
push
leave
inc
pop
xor
add
mov
ret
repnz
cmovp
mov
pop
nop
add
and
xchg
and
inc
push
stc
std
aaa
dec
call
dec
mov
ret
aaa
cmpsl
adc
lock
fisttpl
aam
jnp
or
shlb
xchg
mov
insl
cli
cmp
mov
fldenv
xor
mov
outsl
in
and
into
pop
xor
dec
dec
jnp
sbb
incl
push
arpl
cmp
sbb
xchg
out
dec
ja
cmp
pop
xor
adc
insb
mov
out
int3
fwait
dec
sbb
pop
in
mov
fsubrl
cld
stos
jg
xor
cmp
fstpt
lds
mov
pop
pop
imul
xor
lret
adc
lret
stc
imul
insb
inc
mov
mov
in
outsl
sbb
shll
jo
xchg
mov
jnp
sub
and
mov
mov
mov
fwait
inc
jle
xchg
jmp
jo
int3
xchg
cld
sahf
adcb
mov
dec
cmp
popf
lods
stos
cmpsl
and
xchg
cmpsb
sub
lods
add
add
dec
xchg
pusha
dec
imul
jle
loope
jae
lock
shll
lahf
cmp
hlt
mov
jns
jbe
sub
ds
push
or
mov
fcoms
mov
xchg
pop
scas
jge
jb
mov
xchg
pusha
cmp
pushf
jge
mov
icebp
mov
lods
and
gs
cmp
sarl
lods
out
jno
cmp
sub
loope
mov
daa
mov
addl
jmp
out
rorb
jns
int
mov
xor
test
out
arpl
push
and
ljmp
xchg
stc
adc
mov
pop
sbb
push
pop
inc
negl
fsts
stos
js
fidivrl
cmpsl
pushf
repz
ret
push
sarb
cmp
mov
or
popa
lods
sbb
pop
add
ja
scas
sbbl
pop
bound
int3
outsb
mov
cmpsb
pop
mov
mov
sub
dec
push
test
mov
pop
inc
scas
jg
push
mov
and
andb
xchg
inc
mov
out
rorb
cmp
pop
arpl
stc
test
mov
push
push
aas
xchg
mov
cs
mov
loope
sarl
push
adc
sbb
mov
ss
xchg
jmp
in
push
jmp
pop
cmpsl
movsl
outsl
out
xor
mov
into
ficompl
mov
sbb
rcrl
test
cmp
adc
pop
pop
cmp
fcomip
mov
in
shlb
mov
imul
orl
adc
jge
stc
movsb
test
mov
push
xchg
loopne
fwait
jg
cld
mov
pop
jo
pop
fcompp
sahf
jo
push
mov
stos
inc
shlb
sub
mov
jmp
stos
out
lret
sbb
pop
shrl
mov
xor
mov
or
or
jp
and
aad
mov
adc
sbb
pop
or
jl
test
mov
mov
push
fwait
and
inc
adc
clc
inc
cwtl
add
push
cltd
add
repnz
mov
push
aas
pop
mov
rclb
and
cld
andb
or
arpl
push
stc
xchg
stc
repz
cwtl
stc
mov
out
sbb
and
fcomi
out
aam
std
pop
sbbb
sarl
xchg
stc
pop
fldenv
push
jg
das
pop
call
mov
cmpsb
xchg
cmp
shlb
hlt
frstor
mov
test
xor
add
mov
popf
bound
shll
jp
in
jge
adc
push
lock
ja
sbb
sub
mov
bound
xor
lods
in
mov
add
pop
push
dec
mov
sbb
mul
lods
aaa
loopne
ss
mov
dec
cmp
mov
mov
or
popa
adc
xchg
or
ret
repz
mov
arpl
loop
sub
sbb
xchg
jno
jecxz
add
push
sbb
fcom
sbb
cmp
movsb
fdivrs
out
arpl
cmc
dec
fwait
mov
sahf
js
daa
out
stos
cmp
jp
cmp
xor
repnz
popa
adc
push
insl
sub
jmp
in
mov
popa
mov
arpl
imul
mov
or
enter
roll
call
in
test
jg
lods
mov
adc
jno
sbb
sub
xchg
roll
jb
outsb
inc
icebp
push
cmp
mov
shlb
lcall
loop
sbb
mov
in
sub
loope
or
shlb
in
mov
adc
scas
std
xchg
scas
cld
pusha
sbbb
push
inc
jp
icebp
in
std
fucomp
mov
adc
inc
aas
cmpsb
pop
xor
mov
push
jbe
je
pop
leave
mov
sbbl
sti
cmp
inc
mov
imul
jbe
mov
pushf
iret
jp
jmp
mov
sbb
push
jl
jnp
mov
jge
popf
fimuls
scas
jns
icebp
mov
pushf
nop
xor
xlat
ret
sbb
pop
ja
fnsave
push
sahf
pop
std
cmp
adc
fldenv
outsl
push
sub
inc
add
mov
mov
lret
add
fisubl
cmp
mov
add
jl
pop
sar
sbb
mov
ja
inc
inc
xor
dec
xchg
scas
lret
jnp
decb
fisubrs
pop
push
jmp
jp
out
xor
aad
xchg
les
adc
lea
pushf
adc
js
cltd
cmp
push
stos
cmp
popa
push
mov
xchg
adc
rcll
and
add
rcl
mov
pop
mov
push
pop
xor
fcmovne
push
xor
scas
hlt
lcall
fnstcw
jns
and
xor
insb
or
ret
imulb
scas
xchg
xor
add
inc
std
xor
adc
test
xor
stos
push
mov
mov
or
and
orl
xor
outsb
sti
and
and
xor
jne
outsl
stc
dec
bound
push
or
stos
mov
aam
jno
jl
testl
lds
fld
jecxz
lds
call
xchg
inc
add
pusha
inc
scas
mov
out
sbb
push
dec
sbb
call
pop
or
lcall
pop
ds
pop
aam
mov
in
std
sbb
mov
and
scas
out
jne
mov
sbb
lahf
ret
lahf
es
adc
data16
lods
inc
add
xor
fmuls
xchg
pop
popf
das
push
inc
stc
ret
js
and
testb
in
sti
popa
pop
lcall
jbe
mov
les
aam
shll
pop
adc
lcall
or
in
pop
or
jnp
insb
stos
push
into
mov
icebp
or
fwait
mov
into
pusha
or
lret
fmul
push
outsb
lea
jno
in
or
jg
cmp
stos
inc
or
mov
and
arpl
ja
xlat
push
outsl
xchg
lock
adc
movsb
mov
mov
xchg
push
cmp
xor
sbb
xchg
adc
push
stc
fistl
sub
or
leave
sub
sub
jecxz
insb
jmp
sbb
push
lret
cmpb
push
mov
cmpsl
push
bound
out
pusha
or
fsubp
cwtl
ret
inc
stos
sub
mov
shl
shrl
dec
lds
outsb
test
fwait
xchg
pop
adc
in
dec
sbb
mov
jo
pop
cmp
add
aas
int
sbb
fwait
in
out
inc
es
xor
cmp
std
add
xchg
icebp
cwtl
dec
fwait
imul
xchg
inc
hlt
cmp
stos
or
in
inc
sahf
xor
popf
lock
jae
test
pop
popf
cmp
xchg
popf
push
dec
sahf
sbb
cwtl
mov
lahf
insl
cmp
push
mov
jae
push
xor
xchg
pop
sahf
dec
fs
xor
mov
and
mov
and
lds
mov
mov
cmp
sub
stos
or
lahf
stos
or
lock
fwait
ss
xor
mov
stos
dec
iret
popf
lea
mov
repz
add
mov
and
test
mov
mov
pop
sub
add
into
ret
pop
clc
cmp
inc
mull
lcall
imul
nop
add
push
pop
pop
inc
xchg
inc
ljmp
mov
test
int
sahf
ret
clc
cltd
and
dec
shll
pop
sbb
lods
xor
repz
cwtl
or
xchg
test
sub
jg
fidivrl
mov
fs
sub
adc
addb
xchg
ss
jno
mov
or
call
push
sti
cltd
add
fidivs
adc
popa
push
fcomps
repz
clc
idiv
lock
add
push
mov
es
jb
insl
pop
push
add
call
fdivrl
out
clc
or
gs
mov
cmp
xchg
dec
shl
sub
cmp
mov
inc
sahf
mov
loope
repnz
jl
aaa
scas
inc
lds
in
pop
sub
mov
ret
dec
iret
les
ss
xchg
rolb
stc
mov
mov
cmp
push
xchg
dec
cltd
fdivl
jmp
addl
pop
out
or
stos
mov
int3
nop
mov
movsl
test
popf
sbb
mov
mov
mov
dec
imul
shl
test
and
test
pop
mov
mov
sub
cmp
cmp
fcmovu
jb
or
cmc
and
dec
mov
ds
movsb
stos
or
lcall
pop
push
cmp
pop
insl
pop
inc
add
flds
popa
aaa
sub
mov
aam
jns
jo
daa
adc
test
sahf
cwtl
das
sub
push
cmp
lahf
pop
test
mov
cmp
cs
cmpsb
xor
clc
mov
mull
insl
lods
cmpl
xor
sub
jnp
call
scas
jo
fs
and
fs
ds
rclb
pop
in
incl
xor
sub
xchg
push
rorb
and
xlat
xchg
inc
push
sub
add
call
fidivl
mov
adc
jb
sbb
shr
aam
js
ficomps
fisubrs
or
dec
push
sbb
sbb
je
fnstcw
xchg
mov
enter
pop
out
cwtl
inc
stos
shll
pop
lret
inc
sub
and
and
aaa
mov
outsb
hlt
cmp
sbb
imul
or
mov
xor
aam
loope
test
adc
dec
or
clc
add
js
mov
fiaddl
adc
cwtl
push
sub
clc
or
mov
adc
js
push
or
pop
inc
lods
dec
js
out
fldln2
mov
mov
fbstp
std
xor
inc
or
hlt
or
mov
js
sub
cmp
xchg
add
jae
push
jmp
ror
sbb
jns
mov
or
adc
xchg
enter
or
mov
xchg
cmp
rcll
push
sbb
cltd
push
mov
jecxz
cwtl
lods
aaa
and
pop
pop
lds
sbb
fistpll
iret
dec
fstenv
ss
and
mov
mov
ret
daa
fsubrs
jno
test
ds
push
dec
jmp
cmpl
imul
test
lahf
jecxz
sub
fs
stos
out
cld
xchg
and
aam
mov
xor
push
cli
std
stos
push
addr16
int
mov
push
int3
bound
mov
dec
imulb
into
lds
add
repnz
mull
addr16
test
push
mov
sub
xchg
fwait
aaa
negl
daa
movsb
pop
dec
popf
xor
jb
inc
jecxz
sub
xlat
inc
xchg
push
ljmp
inc
stos
add
xor
sub
push
outsb
mov
sbb
jnp
or
xor
xchg
dec
mov
aas
inc
repnz
cmp
sub
es
sbb
xchg
roll
jmp
push
repnz
adc
mov
in
push
xchg
sbb
shrb
xor
subb
out
jb
not
sbb
dec
sub
jns
arpl
divl
add
mov
push
mov
mov
arpl
ret
dec
mov
or
xor
jp
lds
jne
xchg
jb
mov
divl
pop
push
fsubr
push
icebp
and
jmp
add
fiadds
es
out
mov
cmp
push
jns
stos
sbb
int
mov
out
dec
xor
jns
fidivs
imul
cmpsl
jo
out
add
xchg
pop
mov
mov
pop
into
push
mov
jl
pop
sub
push
adc
dec
outsb
fstpl
test
ret
push
ret
cmp
mov
jne
inc
fisubl
idiv
fwait
push
and
push
adc
sbb
daa
shrl
jbe
mov
xor
sub
push
flds
cmp
cld
xor
inc
aam
add
mov
lods
ret
rol
call
out
scas
aas
std
inc
inc
push
and
push
in
jp
jae
testl
fldt
mov
lds
mov
js
pop
ljmp
sub
cmp
inc
aaa
fdivrs
add
aas
test
ss
jno
lcall
or
test
mov
push
outsl
jge
jmp
fdivl
inc
dec
mov
loopne
sbb
inc
jmp
xchg
hlt
mov
inc
out
mov
into
add
mov
iret
mov
and
cmc
imul
adc
sub
jnp
cmp
movsb
xchg
push
mov
cmpsb
or
inc
sbb
lret
jb
imul
push
in
jg
jbe
jbe
pcmpgtw
pop
mov
das
lods
popa
addr16
xchg
addr16
sub
push
sbb
dec
lods
cmp
scas
mov
leave
add
ficoms
cs
dec
int3
push
lcall
pop
and
or
es
push
clc
push
addr16
mov
jg
sbb
dec
ja
aam
push
aad
shll
loope
cmp
incl
cmp
push
jmp
sub
scas
xor
lret
jg
add
push
jns
bound
andl
add
cs
sbb
pop
roll
xchg
jle
jb
dec
jge
insb
out
jae
fs
xor
arpl
mov
in
or
pop
ficoms
int3
xchg
xor
cltd
sarb
scas
ljmp
pop
and
int3
xchg
inc
xor
scas
insb
add
xchg
lods
mov
push
sub
cmpb
pop
fiadds
dec
adc
js
sbb
js
xchg
pop
rorl
aad
mov
aas
adc
fdivl
jmp
jle
jae
insl
and
decl
addl
jg
gs
test
inc
jge
aad
cmp
cmpsl
lss
jns
call
lret
dec
nop
fwait
push
ds
loop
test
or
xor
lahf
in
sub
adc
pop
rcrl
rolb
push
pop
or
cmp
js
push
sub
hlt
push
cmp
jl
int3
xchg
int3
scas
js
int3
aam
cmc
shlb
pop
add
fstpt
mov
inc
dec
jo
repnz
cmpsb
add
aaa
pop
push
icebp
mov
and
pop
icebp
es
cwtl
idivl
lcall
dec
xchg
mov
movsl
outsl
ret
gs
ret
es
jmp
adc
scas
out
ja
cltd
push
int
out
lds
add
loop
stos
mov
jge
push
ficoml
push
mov
push
mov
aam
xchg
enter
adc
pop
imul
mov
lods
loop
mov
stos
cmp
and
vpshlb
cmpsb
out
push
outsb
push
add
mov
iret
inc
mov
test
mov
inc
bound
sbb
jns
repz
stos
movsb
add
in
in
and
je
lea
inc
repz
fdivrl
jno
mov
adc
jne
mov
imul
cmpsl
lret
fcmovnu
add
jl
repnz
mov
dec
add
fldt
or
mov
aas
add
test
int
or
call
push
mov
test
cs
adc
stos
rcrl
lahf
in
jne
adc
mov
int3
lahf
outsl
mov
jo
inc
push
xor
adc
lret
test
mov
mov
or
add
cmc
stos
dec
cmp
enter
arpl
stos
lds
sbb
jg
sub
push
mov
add
dec
jecxz
gs
pop
pusha
js
add
push
cmpsb
push
adc
xchg
mov
push
cmp
mov
enter
js
movsl
ss
jne
stos
adc
sub
adcl
cmp
sbb
fisttpl
dec
sbb
std
outsl
jno
sbb
mov
hlt
and
push
add
int
rcrb
sar
das
xor
je
ss
xor
sbb
pop
mov
leave
jp
pop
adc
push
jge
scas
mov
mov
enter
adc
fldcw
fwait
mov
outsl
jbe
cmpsb
mov
mov
sti
or
xchg
mov
push
pop
cwtl
and
sahf
and
cmp
lcall
adc
loop
xchg
iret
xor
mov
div
xchg
push
lcall
lret
or
mov
push
fsubrs
stos
sub
xchg
mov
popa
ja
ds
or
pop
mov
shrb
imul
arpl
es
pop
das
lret
cmp
or
stos
or
mov
leave
push
push
mov
dec
iret
daa
pop
adc
imul
xor
bound
sub
es
adc
dec
loop
pop
cmpsb
push
lret
nop
fmull
sub
inc
outsb
mov
insb
inc
ds
mov
repz
lret
loopne
fstl
xchg
sub
dec
popa
lea
xchg
hlt
setns
outsb
fsts
rcrl
add
cmp
icebp
aam
shl
dec
std
add
push
movsl
js
mov
stos
rcr
adc
push
sub
ja
push
mov
adc
sbb
lods
xchg
outsb
mov
xchg
movsl
adc
test
imul
cmp
fs
cmp
jg
sbb
inc
add
jl
xchg
mov
or
hlt
add
fmull
icebp
insb
add
adc
repz
xorb
out
repz
sub
mov
fadd
cmpsl
call
and
out
push
inc
aam
fdiv
jmp
or
pop
xor
mov
arpl
push
in
cmp
ret
xchg
dec
and
mov
jnp
sbb
cli
dec
data16
adc
cmp
inc
cmc
pop
and
and
push
in
inc
adc
popa
jl
js
jmp
out
cmp
ss
fidivs
in
jp
inc
push
mov
push
and
xchg
sub
mov
jae
inc
and
mov
xchg
pop
gs
adc
ret
mov
xchg
cmpsb
fs
dec
repnz
aam
cmp
cli
nop
fdivl
add
and
mov
ss
xor
sub
cmp
mov
jb
add
sbb
loop
inc
fistps
fists
rcrb
ds
imul
dec
aam
and
cmp
jo
and
inc
movsb
out
sbb
out
js
loope
out
enter
stos
xchg
lods
icebp
inc
xchg
dec
lods
ljmp
cmp
popa
mov
in
dec
sar
iret
add
stc
push
fsubl
adc
sbb
cmp
cmp
mov
popa
shrl
pusha
stc
sti
test
pop
enter
loope
mov
xor
out
gs
push
jb
inc
mov
ss
jp
mov
push
inc
inc
in
in
shrb
mov
stc
lret
mov
gs
arpl
lcall
aas
ss
in
mov
fdivrl
je
lds
loop
xchg
pop
mov
stos
loop
adc
cmp
mov
pop
sbb
movsl
and
gs
mov
lret
adc
or
sti
fbld
icebp
in
mov
adc
jp
int3
pop
cmc
stc
popa
pop
jp
imul
and
shlb
mov
dec
adc
and
push
xchg
adc
cltd
aaa
mov
inc
test
cmc
in
ljmp
test
inc
cli
push
xchg
pusha
ja
mov
data16
and
fdivs
iret
out
sub
pop
fildll
push
dec
ja
lret
arpl
idivb
sub
loope
mov
push
xchg
lds
push
sti
out
inc
pop
sbb
loopne
insb
jmp
mov
sbb
cli
mov
mov
popa
add
lods
mov
pop
shl
js
cmpsb
xchg
out
push
add
mov
mov
jg
jnp
rcll
inc
push
aam
dec
in
cmp
fwait
xchg
add
ficoml
test
repz
sti
fs
push
cmp
in
shrb
push
and
and
test
insl
cs
jnp
mov
out
push
jg
pusha
into
pop
add
jmp
cmp
movlps
push
das
add
add
nop
flds
inc
scas
or
test
ss
shlb
outsb
mov
pop
orb
pop
jle
pop
add
mov
mov
js
and
and
aad
sbb
sbb
ror
xlat
addr16
stos
pop
les
pop
scas
lea
or
fdivrl
outsb
ljmp
in
movsl
icebp
dec
xor
adc
xchg
xchg
mov
imul
push
mov
ss
cmp
and
lods
repnz
stos
add
push
pop
pop
or
push
outsb
xor
insb
roll
cs
inc
mov
xchg
xchg
imul
es
jl
dec
bound
insl
ret
add
pop
icebp
push
and
inc
inc
das
jg
xor
data16
xchg
mov
mov
mov
pop
mov
mov
imul
cmpl
call
mov
mov
fiadds
addr16
mov
dec
cld
arpl
jne
push
std
mov
push
push
mov
xchg
fsubrs
sbb
arpl
mov
movsb
call
in
adc
std
jbe
sub
adc
test
add
enter
sub
sahf
fmuls
sub
imul
add
sub
fbld
cmp
mov
aam
push
push
jnp
lcall
or
xchg
pop
dec
and
mov
shll
test
inc
or
scas
add
cltd
scas
shl
lret
popa
add
repnz
lea
mov
cmpsl
adc
int
mov
mulb
in
inc
test
adc
mov
adc
jns
or
sbb
pop
xchg
cmc
push
sub
sbb
jp
into
pop
adcb
fstl
or
mov
xor
loopne
cmp
mov
jge,pn
mov
fcos
xchg
push
jl
xor
jnp,pn
cmp
or
dec
sbb
xor
cmpsl
jbe
sub
cltd
inc
daa
sub
inc
inc
xor
push
push
popa
int
xor
sub
mov
push
jle
cmpsl
mov
test
mov
aaa
push
and
cmpsb
ljmp
repnz
pop
cmc
packssdw
mov
sub
sahf
xlat
jo
jnp
push
fldl
adc
daa
std
xchg
pushl
jle
inc
lret
pop
and
cmp
movsb
and
add
push
jo
mov
adc
mov
imul
in
add
mov
pop
pop
inc
nop
dec
repnz
shr
lret
add
shl
out
mov
mov
jae
cmp
rclb
mov
push
call
pop
frstor
int3
or
mov
ret
sbb
dec
scas
pushf
xor
inc
insb
sub
jecxz
jb
mov
pusha
out
lret
jbe
cmp
int3
inc
pop
mov
cmpsb
cltd
mov
jbe
inc
test
out
data16
xor
mov
test
test
outsb
xchg
lea
xchg
inc
sub
sti
mov
xor
rcrl
jmp
fnstcw
call
push
push
addb
into
mov
test
out
repz
movsb
bound
into
mov
out
arpl
ror
cltd
lcall
loopne
popf
imul
enter
leave
sub
ljmp
xor
dec
out
mov
xor
mov
test
movsl
pusha
mov
adc
addb
rcrl
arpl
jge
enter
nop
fnsave
mov
es
xor
lcall
movsb
jb
cwtl
sub
push
push
xchg
sbbb
jae
rorl
ret
sub
jmp
movsl
popa
push
jne
cmp
outsl
movsb
fstpt
mov
pop
push
idivb
in
pop
outsl
lods
jo
or
cmp
sbb
out
inc
testl
pop
cld
jb
jg
cmp
int3
scas
xor
and
stos
shr
mov
cli
mov
or
mov
out
and
movzbl
xchg
shlb
les
in
cltd
enter
jmp
jmp
fdivrs
cmpl
ret
sub
lahf
pop
lret
add
ret
movsl
add
dec
push
cmpb
dec
lahf
frstor
fists
xchg
mov
fwait
pop
jmp
hlt
inc
in
sub
sub
pop
inc
or
dec
push
pop
jo
fistpll
and
adc
ror
xorb
inc
push
jge
jo
jg
loope
ja
inc
ss
sub
sub
movsl
cld
stos
sahf
shlb
push
xchg
imul
xchg
xchg
adc
sub
pop
loope
cmp
sbb
mov
or
mov
mov
mov
jno
dec
sub
push
cmp
aam
lret
mov
cmpb
jnp
or
shll
mov
out
mov
sbb
ret
sbb
aad
stc
popa
sub
add
cmp
popf
pusha
cmp
out
sbb
jp
xchg
and
in
outsl
in
es
cmpsb
add
sub
cmp
movsl
jnp
or
push
leave
int3
sbb
lods
pusha
mov
mov
and
mov
mov
push
sti
ljmp
adc
cmc
jne
mov
cmpsl
jae
push
mov
cmpsl
outsl
or
lahf
pop
imul
or
xor
cwtl
and
cmp
add
jecxz
sbb
sbb
jg
sbb
jge
push
and
mov
cmp
cwtl
shrb
popa
sub
jae
xchg
mov
mov
dec
jne
ret
mov
mov
jge
mov
popf
cmp
nop
std
or
sub
out
mov
lcall
and
adc
jno
or
imul
mov
or
sarl
test
movsb
push
xor
popf
mov
iret
add
sahf
gs
cli
add
inc
mov
int
mov
in
movsl
xchg
ja
stos
es
lcall
add
fstl
repz
movl
aam
lea
add
mov
lds
cld
cmp
pop
jg
stc
xchg
mov
and
pushf
ljmp
aad
push
repz
dec
mov
bound
lds
sbb
xchg
inc
jnp
stc
loope
fdivs
inc
mov
jno
repz
sbbb
imul
adc
or
add
repnz
mov
incl
inc
pushf
jae
pop
pop
insl
je
es
sbb
sbb
push
mov
rclb
and
push
in
push
div
popf
fs
aas
in
test
dec
scas
adc
pop
adc
and
mov
push
sbb
add
push
mov
sbb
sar
test
inc
add
pusha
xchg
fmul
mov
ja
adc
out
pusha
push
je
inc
setle
lahf
push
stos
adc
sub
xchg
dec
xchg
cs
inc
ror
ficoml
fnstcw
sub
stc
hlt
int3
test
mov
jl
jns
pushf
cmp
and
xchg
fwait
call
shlb
stc
mov
ja
jb
imul
cmp
sub
imul
stc
cld
adc
adc
jbe
fisttps
js
stc
push
aaa
aaa
popa
cwtl
mov
push
fwait
jp
cli
jne
iret
xchg
and
xlat
xchg
sbb
imul
cltd
imul
int
js
cmp
insl
pop
push
lret
jl
cmpsb
popf
pop
stc
gs
out
fwait
and
dec
lcall
sub
popf
cmpl
mov
jns
xchg
jg
inc
lret
push
test
incl
xor
sbb
inc
ljmp
jl
aaa
sub
and
neg
lds
int3
xchg
sahf
sub
sub
mov
idiv
and
imulb
out
pop
aaa
std
xchg
push
push
pop
jg
es
cmp
hlt
adc
ret
outsl
push
jmp
cmp
sahf
pushf
in
adc
adc
movsl
inc
sub
popf
stos
pusha
or
inc
call
insb
mov
cwtl
data16
neg
xchg
push
mul
repz
cltd
outsl
ret
add
push
adc
mov
inc
mov
sbb
xchg
iret
pop
mov
cmpsl
scas
or
out
repnz
push
dec
stos
cmp
dec
test
jo
clc
push
ret
roll
fstpl
jns
sbb
sub
and
cs
cmpsl
push
mov
xor
daa
xlat
adc
fucomp
push
insb
jle
and
orb
iret
icebp
daa
popf
cvtpi2ps
xchg
and
imul
mov
js
fsubrl
in
cmp
mov
jnp
call
je
out
push
and
and
aaa
scas
xchg
notl
mov
push
sub
xchg
pop
icebp
cmp
mov
icebp
enter
dec
xchg
std
roll
pusha
aaa
test
or
add
imul
mov
pop
dec
imul
cmp
adc
gs
fs
sbbl
push
add
inc
ljmp
pop
in
add
and
add
and
or
jb
es
js
pop
bound
stos
mov
arpl
cmp
in
rcrl
mov
pop
pop
sbb
inc
xchg
cmpsl
adc
movsb
dec
dec
inc
lahf
sub
mov
sub
sub
inc
xor
lea
and
cli
inc
movsb
fwait
mov
test
fsubs
mov
fsubs
push
inc
xchg
mov
and
pop
xlat
ret
and
mov
sbb
lahf
add
jae
xor
push
gs
push
or
cli
dec
xor
bnd
mov
pop
lret
pushf
add
aam
js
nop
adc
push
xchg
mov
jbe
addr16
pop
fidivrl
ja
data16
sub
out
imul
and
and
mov
cltd
std
jecxz
xchg
repz
pop
xor
dec
out
mov
sahf
mov
incb
add
cmp
cmp
jnp
push
enter
lock
sbb
xor
je
movsb
lahf
sahf
sbb
xchg
enter
jbe
push
daa
cmp
movsl
push
mov
iret
in
gs
out
out
pop
pop
inc
jp
ret
sub
cmc
sub
cwtl
xchg
out
push
cmp
xchg
clc
add
movl
iret
inc
in
push
pop
sub
sub
ret
adc
addr16
ror
in
in
fdivl
mov
imul
add
ja
rorl
mov
shlb
dec
mov
sub
cmp
fucom
cmp
sub
lret
pop
pop
push
xor
addb
and
xchg
and
out
xchg
mov
imul
pop
in
mov
lea
call
add
loopne
loopne
inc
or
inc
or
cmp
jl
cmp
sbb
int
in
or
xor
cmc
data16
jo
out
lret
push
mov
movsl
jge
aas
pop
add
or
ljmp
in
mov
fdivrp
sub
dec
xchg
inc
mov
imul
repz
push
arpl
test
lea
mov
jns
mov
lret
adc
out
ljmp
jns
out
iret
repnz
cs
push
mov
xor
adc
or
shll
adc
xor
shll
repnz
sbb
mov
or
sbb
shr
mov
loop
cmpsb
mov
cmpsb
and
outsl
scas
cmp
bound
or
loopne
inc
push
aad
jo
imul
aad
jg
xchg
xchg
lds
or
cltd
stos
iret
lds
mov
div
dec
pop
aad
inc
inc
xchg
mov
push
pusha
inc
cmp
mov
mov
xor
xor
fcoml
inc
dec
xor
cmc
sub
xor
cmpsl
hlt
inc
sbb
out
addr16
xchg
inc
fbstp
out
imul
mov
je
mov
mov
daa
sahf
push
mov
aad
addr16
test
push
push
adc
push
leave
pop
mov
stc
fs
dec
nop
mov
imul
es
mov
sub
sbb
fdivs
stos
imul
das
ja
mov
mov
pop
add
cmp
leave
and
inc
jl
mov
jl
rcll
cld
inc
push
xchg
pop
stos
stos
or
xchg
pushf
pop
lahf
ja
cwtl
dec
lret
inc
jl
call
lea
pop
xchg
cmp
adc
xrelease
fldl
stc
in
or
jmp
test
add
dec
mov
pushf
or
push
mov
push
or
xor
adc
sub
loope
jne
push
movsl
mov
or
icebp
call
scas
xchg
jg
int
jnp
mov
sub
and
hlt
call
jnp
mov
lahf
sbb
ret
push
jo
jmp
sub
je
sbb
dec
sbb
add
sub
pop
inc
fnstcw
aam
xchg
xchg
xchg
clc
pop
test
or
aad
fisubrl
lea
adc
mov
gs
adc
push
lahf
mov
cmp
jecxz
xor
pusha
mov
loopne
inc
iret
subl
mov
ja
mov
inc
sbb
cltd
lret
jne
fincstp
mov
data16
bound
mov
sbb
or
mov
fldt
in
sbb
js
in
mov
or
rorb
mov
gs
pusha
or
mov
cs
and
pop
rcr
aam
popa
xor
and
cmp
cmp
mov
push
rcl
cs
ret
inc
and
fildll
sbb
into
cmp
ret
xchg
cld
neg
shr
mov
daa
dec
mov
aad
cmp
jl
add
xor
cli
cld
out
orl
movsb
pusha
and
adc
push
or
ret
jb
nop
icebp
or
cld
test
or
fcomps
jno
cmp
adc
rolb
inc
mov
push
subl
xchg
jmp
test
incb
stc
cmp
cmp
pop
adcb
enter
fstps
ja
outsl
in
insl
shll
cmovp
pop
outsb
stos
jns
es
data16
mov
fstpt
mov
sbb
mov
mov
xor
add
mov
rclb
mov
daa
add
cwtl
fimull
ret
mov
adcb
and
xchg
dec
js
bound
scas
inc
jne
jmp
test
dec
cmp
xchg
das
fcmovbe
lods
je
mov
inc
ja
and
add
xor
jg
cmp
and
push
jle
push
out
pop
mov
xchg
mov
dec
js
dec
sub
out
or
mov
add
sti
cld
loop
repnz
fisttps
in
popf
push
ret
push
sbb
pop
push
ds
repz
cmp
ds
addr16
inc
mov
mov
rolb
sbb
loopne
mov
iret
inc
add
pop
sarl
clc
loop
ret
push
sbb
push
pop
loope
mov
add
xchg
mov
pop
push
sti
test
mov
xorl
cmpsb
mov
push
leave
mov
push
repnz
mov
fstl
dec
test
test
mov
les
call
xchg
mov
inc
setge
imul
dec
clc
pusha
xchg
lds
icebp
rcrl
pop
out
and
push
stc
ds
ret
jecxz
ljmp
scas
mov
sub
push
cld
pusha
lods
loopne
adcl
mov
bnd
push
or
insb
out
insl
or
repnz
pop
sahf
outsl
add
mov
mov
testb
xchg
stc
jecxz
cli
ficoms
pop
and
mov
not
mov
mov
mov
and
test
push
pushf
mov
adc
aas
add
sub
jne
fcoml
push
jl
sbb
repz
aaa
pop
cmp
js
cmp
dec
mov
adc
rol
xor
cmpsb
int
cmp
enter
out
cmp
cmpsl
inc
jbe
fld
imul
stos
push
xchg
ret
subb
shl
mov
lret
in
push
sbb
push
dec
jb
push
hlt
xchg
int3
mov
cmp
xchg
cltd
inc
testl
add
out
pop
out
xlat
pushf
pop
leave
pop
jae
hlt
mov
inc
mov
addr16
daa
mov
xchg
or
pushf
movsl
js
cmp
das
mov
movsb
lret
and
push
shrl
dec
jecxz
fxch
imul
mov
cmp
sahf
xor
dec
fbstp
in
pusha
inc
mov
inc
pop
out
into
hlt
loop
mov
bound
adc
xor
mov
out
add
push
sbb
mov
arpl
mov
call
pop
lret
mov
into
insl
icebp
aam
mov
xchg
xchg
pop
cltd
ljmp
repz
nop
mov
lea
fadd
lret
mov
add
inc
lock
jge
mov
mov
jo
mov
divl
mov
add
bound
adc
clc
and
pop
cmp
adc
jns
insl
mov
jne
lret
stc
push
dec
ret
jmp
fcoms
leave
ds
or
dec
iret
fisttpl
pushl
mov
adc
repnz
out
out
loope
aaa
xchg
xor
pop
push
call
lock
jbe
pop
mov
or
jnp
dec
pop
jge
dec
out
xchg
xor
imul
lret
repz
or
inc
mov
sub
popa
jne
xchg
das
pop
jbe
ja
jmp
scas
jno
push
pushf
push
inc
fsubl
pushf
in
iret
test
gs
in
dec
push
scas
mov
in
sbb
dec
lret
repz
adc
andl
jp
sbb
arpl
jne
test
push
push
and
push
rclb
adc
ds
adc
test
push
and
in
push
dec
mov
pop
mov
pop
fistps
push
mov
sbb
out
imul
call
test
shlb
pop
pop
es
cmp
or
lahf
idivl
push
loop
rorb
and
mov
inc
imul
out
ds
mov
subl
daa
lret
mov
jno
lds
decb
ljmp
add
js
fbstp
test
outsl
xchg
mov
and
loope
push
sub
cltd
mov
and
std
sbb
dec
orb
add
xor
cmp
lret
push
mov
mov
and
mov
popf
or
sub
scas
popf
xchg
stos
push
push
das
loopne
inc
dec
cmpsb
or
mov
in
push
xor
aaa
test
mov
adc
xor
mov
shlb
push
inc
loopew
adc
out
sbb
in
in
pop
cltd
dec
add
mov
push
push
aas
lea
lret
cmc
idiv
cmp
fists
movsl
jbe
fsts
cli
divb
push
cmp
cmc
jge
sbb
out
sub
popf
dec
adcl
scas
jb
xor
stos
sub
push
inc
jmp
and
mov
adc
inc
in
sub
jmp
movl
das
fsubs
push
lret
aaa
mov
outsl
xchg
push
mov
aam
movsb
je
xor
out
mov
in
xchg
data16
mov
add
xchg
idivl
sbb
roll
add
sbb
jb
lret
sub
rorb
sahf
mov
js
adc
and
out
push
dec
movsl
adc
rclb
or
enter
loope
int3
and
pop
jg
nop
mov
int3
add
mov
mov
push
scas
push
stc
xor
sbb
cmp
lret
and
ja
push
cmpb
nop
int
dec
inc
sbb
insb
push
pop
mov
xchg
les
aam
stc
test
dec
ja
hlt
jb
mov
lea
sbb
inc
test
sahf
aaa
dec
ds
mov
test
mov
jmp
mov
das
mov
lea
push
pop
push
mov
sbb
lock
and
adc
sub
lahf
loopnew
mov
add
jns
dec
mov
sbb
hlt
mov
or
jp
jecxz
es
mov
pop
stc
imul
imul
or
cltd
popl
push
lret
shlb
cmc
cli
push
fstpt
jae
pop
pop
dec
fcoms
ret
or
mov
popa
xlat
dec
push
mov
icebp
pop
test
mov
setge
fnsave
pop
movl
add
cli
and
aas
xor
lea
aam
and
test
insb
cmp
cmp
xchg
test
iret
pop
xor
adc
out
stos
std
jmp
jnp
test
mov
clc
sbb
fidivl
stos
mov
mov
and
les
jmp
mov
sub
xor
iret
inc
lock
rol
enter
xlat
aas
xor
pop
movsl
call
or
call
mov
rclb
push
inc
insb
sub
push
arpl
sub
adc
das
orb
mov
dec
imul
jmp
dec
gs
arpl
adc
mov
test
add
rorb
ret
cmp
in
xor
mov
inc
or
cld
inc
sbb
mov
imul
cld
adc
push
bound
jmp
fiadds
out
es
cmp
cmpsl
adc
or
pop
scas
jae
and
xchg
arpl
cld
ss
mov
fucomi
scas
imul
or
fdivs
jmp
aad
xor
pop
cmc
mov
or
cmp
test
adc
enter
das
outsl
insl
cwtl
adc
mov
insb
xor
nop
sarl
scas
pop
pushf
xchg
add
mov
loopne
test
push
iret
shll
repz
adc
in
cmp
fcmovbe
mov
enter
je
cmp
das
out
jg
mov
enter
sahf
out
incb
sbb
pushf
xchg
ss
mov
jb
mov
sbb
cmpsb
int3
mulb
push
pop
add
es
subl
sbb
insb
sub
or
outsb
shrl
mov
push
daa
push
inc
rolb
pop
es
test
jecxz
xchg
and
dec
orb
and
ds
out
add
out
push
mov
ss
mov
loope
inc
into
mov
and
loope
ljmp
sub
loop
lea
pop
cmp
movb
add
or
repnz
js
sbb
int3
push
xchg
and
test
xchg
jmp
int3
sbb
xchg
sarl
lds
sbb
jmp
ret
mov
inc
cmc
cmp
mov
push
sub
sahf
pop
sbb
roll
pop
push
fisubrs
pop
push
out
jg
pop
das
loopne
cmpsl
xchg
sbb
inc
out
aad
out
clc
mov
inc
adc
dec
loope
stos
rcrl
cli
scas
push
xchg
cltd
adc
adc
push
mov
and
orl
and
je
mov
inc
mov
mov
or
adc
pop
cli
dec
es
inc
dec
decl
aad
sub
insl
mov
xchg
xchg
stos
test
mov
xchg
mov
sbb
pop
dec
and
xor
bound
stos
inc
cmp
and
repz
test
sti
or
cwtl
repz
xlat
mov
iret
xorl
call
sub
test
adc
fistl
push
inc
int
xor
outsb
inc
adc
mov
jo
xchg
out
cmp
fmul
jmp
lds
mov
adc
xor
inc
into
inc
mov
lcall
adc
add
inc
rcrb
vpmacsww
jae
jg
jbe
lods
mov
adc
ja
int
stos
popf
xchg
pop
popa
mov
push
or
push
or
dec
push
push
shl
outsl
repz
pop
out
cltd
aas
jle
jg
ds
xchg
xchg
loope
inc
dec
out
idivl
outsb
out
stos
fsubrs
imul
addb
dec
iret
push
fdivr
lea
xchg
mov
stos
mov
aam
cmpsb
sbb
xchg
cmc
mov
outsl
fwait
stos
inc
xor
outsb
adc
dec
jp
test
push
je
cwtl
lcall
xchg
sti
insb
stc
es
pop
rclb
mov
out
add
loope
add
sbb
stos
lock
and
loopne
xchg
es
arpl
mov
push
add
cmp
cli
mov
insl
std
push
lods
push
cmp
stc
movsb
jnp
pop
xor
ficoml
jnp
scas
addr16
shlb
push
fs
dec
sub
cli
std
xor
dec
xchg
repz
push
rclb
pop
push
mov
scas
adc
cwtl
mov
int3
xchg
pop
or
pushf
xchg
sbb
popf
insb
dec
or
and
push
mov
fisubrl
aad
mov
ret
or
pop
daa
add
ret
inc
dec
movsb
pop
jp
or
inc
xchg
and
sbb
inc
cmp
inc
loope
enter
jae
cmpsl
mov
clc
xchg
sar
movsl
sub
adc
xchg
loop
sbb
xor
in
negl
adc
imul
mov
int3
shlb
xchg
pop
inc
aam
or
lods
pushf
or
jno,pt
jl
aaa
rclb
cmpsb
fstpl
loope
and
rcrb
out
dec
add
test
push
fisubrs
lret
andb
test
sbb
lcall
popf
or
fdivs
cmc
push
pop
adc
mov
lods
icebp
mov
fchs
jp
mov
test
push
push
xor
push
dec
int
jp
icebp
push
das
adc
inc
push
hlt
jo
cmp
mov
outsl
mov
fldl
mov
call
lods
icebp
pop
adc
rclb
sub
pop
pop
dec
imul
xor
mov
arpl
pop
jle
push
mov
mov
stc
int
aad
jbe
movsl
fstpl
fsubr
inc
ds
jns
adc
sub
in
and
ljmp
cs
je
push
movsb
or
bound
or
xlat
shrl
aam
jg
out
and
outsl
cmpsl
stos
cld
addl
mov
and
aad
add
mov
mov
or
adc
pop
rcl
and
sbb
mov
pop
or
jns
or
dec
sarb
repnz
xchg
adc
fimull
notl
jmp
stos
mov
js
adc
xchg
pop
enter
ja
insb
inc
and
mov
and
mull
and
xchg
pop
out
call
and
bound
fwait
or
sub
mov
jnp
fistps
sbb
mov
pusha
push
push
push
mov
ffreep
pop
rcrb
or
aam
cmp
repz
cwtl
lods
dec
or
pop
pop
shlb
ss
test
rcl
xlat
or
ret
mov
push
das
dec
push
jae
cmp
or
sarb
jmp
mov
pop
outsb
mov
pop
add
daa
jmp
sub
scas
cmp
sahf
and
cs
mov
loopne
mov
xor
ret
push
in
dec
repnz
xor
and
jg
inc
push
xchg
es
mov
add
adc
bound
push
fdivl
insl
ljmp
icebp
bound
jbe
outsl
cli
mov
xchg
arpl
std
adc
or
mov
lods
add
lock
fnstenv
add
fisubs
cltd
cld
xlat
pop
fnsave
ficomps
jg
cli
xchg
mov
jecxz
mov
not
nop
call
xchg
cmp
mov
sub
es
xor
pop
cmp
outsb
sbb
mov
dec
mov
push
outsb
and
aas
cld
iret
mov
je
push
inc
pop
jo
adc
ret
aas
mov
pop
pusha
in
dec
fsubl
sub
cwtl
fsubr
cmp
das
inc
jmp
mov
sub
ret
cmp
in
inc
add
adc
mov
push
aad
pop
scas
loop
pusha
adc
mov
cmp
imul
loop
aas
jns
xchg
rorl
stos
cmpsl
push
lahf
inc
sbb
hlt
mov
or
bound
mov
lahf
outsl
shrb
dec
mov
hlt
cmp
orb
pop
push
shrb
sub
es
cmp
ret
push
push
out
and
and
outsl
cmp
and
sbb
add
pop
enter
jo
inc
scas
jmp
cmc
add
inc
jp
mov
pop
dec
fiadds
mov
cld
and
pop
addr16
repnz
fstl
aad
ss
mov
xchg
jbe
mov
xchg
jmp
repz
ljmp
out
pop
mov
lret
or
mov
push
mov
movsl
lret
test
pusha
mov
mov
in
xor
into
sarb
add
push
pop
xchg
fcomps
sbb
ljmp
dec
stc
add
loope
mov
sbb
adc
mov
xchg
mov
out
xchg
jne
sbb
jnp
fsubr
add
add
dec
cmp
cmpsb
dec
xor
mov
sbb
or
and
or
ljmp
and
xchg
stc
in
push
jmp
jge
push
mov
jnp
das
aad
ja
lahf
dec
fsts
mov
push
push
add
add
xor
icebp
int3
jge
and
andb
add
mov
mov
adc
ljmp
addr16
les
out
jb
scas
mov
cld
stos
and
ss
adc
and
fwait
adc
mov
rclb
jmp
sub
push
add
dec
add
aaa
sbb
mov
xor
inc
adc
mov
cmp
bound
add
xchg
scas
xchg
lods
mov
xorb
lcall
mov
xchg
loopne
inc
inc
dec
lret
je
enter
or
pop
add
inc
pop
push
popa
das
mov
test
imul
or
jecxz
dec
ret
iret
cmpsl
jg
ret
fisttpl
mov
mov
xchg
mov
dec
jmp
jae
and
mov
mov
and
movb
pop
shll
into
je
pop
add
jbe
dec
cmp
inc
imull
mov
movsb
lret
loop
ret
or
mov
mov
fcmovne
cld
pop
mov
mov
scas
inc
cmp
jmp
xor
adc
sbb
fiaddl
and
adc
fwait
lods
sub
sub
pop
xchg
xorb
pop
pop
imul
or
xlat
adc
out
sbb
mov
mov
xchg
cwtl
enter
jb
mov
xor
pop
stos
dec
sub
cli
mov
add
aam
test
xchg
sbb
rcll
fmull
les
loopne
ret
inc
sbb
lds
mov
call
mov
push
pop
xchg
inc
out
scas
addb
and
mov
sub
sti
dec
mov
loop
loopne
in
push
push
mov
xor
enter
dec
loopne
data16
xor
je
inc
xchg
mov
mov
test
jb
stos
mov
rolb
ljmp
mov
call
loopne
mov
ret
adc
out
repnz
mov
mov
mov
and
ds
sbb
lahf
xor
push
out
js
rcrl
int3
mov
push
jnp
xor
pop
movsb
or
sbb
sbb
ret
pop
dec
sbb
mov
scas
inc
adc
pop
std
das
push
xorb
dec
stos
das
stos
sub
or
popf
ja
dec
mov
jne
sub
or
push
sbb
icebp
ss
rorb
icebp
out
push
inc
mov
enter
popa
lock
push
and
cltd
movsl
nop/reserved
xchg
sub
shrb
adc
pop
adc
xor
jo
push
push
cmc
ret
shr
fs
jnp
fs
jp
outsb
sarl
rcrb
xor
xchg
outsl
aas
inc
imul
add
or
js
movsl
ljmp
mov
lret
dec
mov
dec
shrl
dec
out
pushf
outsb
fildl
mov
sbb
fs
fimuls
jle
cltd
sbb
shr
lea
sbb
sbb
idivl
inc
pop
and
cmp
in
lret
iret
pop
jg
or
fistps
push
inc
add
dec
push
add
jle
pop
pop
jecxz
popf
jmp
popa
add
or
mov
mov
sub
adcb
xchg
shrb
into
mov
fcmovnu
adc
add
fisttpll
ds
mov
fcomi
push
jb
inc
mov
mov
cmpb
insb
cmc
testb
pop
les
jge
cmp
xor
mov
xchg
or
cmpsb
mov
sbb
mov
repz
dec
pop
nop
xchg
mov
xchg
push
insl
adc
lea
lods
cmpsb
push
js
pop
xchg
lock
lds
lret
int3
jo
jg
cmpsb
jecxz
cmp
adc
xor
jae
mov
jne
outsb
push
gs
or
fildll
addr16
xchg
shrl
and
lret
aam
jmp
jmp
test
inc
jp
imull
sbb
inc
mov
aaa
rcll
nop
shlb
fstps
lahf
mov
sbb
cmp
mov
inc
lods
push
mov
mov
std
filds
jmp
pop
mov
jno
sbb
or
xchg
sub
dec
aas
adc
jno
jno
sti
and
fisttpll
dec
aam
in
lret
mov
sub
inc
mov
or
or
jmp
out
dec
sub
xchg
fcompl
int
loop
and
jmp
lods
xchg
gs
insb
cld
xor
iret
cmc
inc
or
push
xchg
loopne
int
lock
mov
out
sub
pop
outsl
fdivrs
scas
stos
push
xchg
fucomip
sbb
addr16
adc
movsl
mov
addb
and
imul
das
lods
inc
int3
sarb
push
jp
dec
rorb
push
das
pop
ja
xchg
stc
shrl
aad
xchg
js
sbb
or
mov
jno
xor
push
push
in
inc
imul
addr16
test
lods
jae
sub
dec
mov
cs
rclb
lds
lret
mov
lea
inc
mov
push
push
les
pop
pop
xor
pop
dec
aad
mov
scas
ss
arpl
adc
mov
stc
mov
mov
lock
mov
inc
pop
loop
es
rclb
ljmp
dec
jb
xchg
xchg
test
mov
xchg
mov
or
xchg
sbb
fscale
add
test
mov
push
lea
sub
or
cmp
sbb
and
out
cmpsl
inc
sahf
aam
ficomps
insb
sub
mull
pop
lock
test
jae
out
lods
cmp
outsb
mov
pop
leave
pop
push
sub
sbbl
ret
int3
sarl
dec
int3
sbb
enter
mov
addr16
push
xchg
adc
pushf
dec
dec
out
pushl
je
incl
adc
in
push
cs
adcb
or
push
test
aad
lcall
xor
cmp
or
ja
sbb
test
push
sub
ds
pop
iret
dec
sbb
loope
mov
inc
pop
fldenv
adc
jno
push
cmpsl
sahf
xor
lret
add
mov
add
sbb
mov
pop
xchg
dec
xchg
mov
push
pusha
push
sub
sbbl
icebp
sub
dec
aaa
lcall
push
push
push
ret
push
jb
push
sbb
sub
add
sbb
cmc
rcr
les
bound
loop
movsl
xchg
push
test
jnp
fwait
pop
push
pop
test
nop
mov
sub
sub
cmp
sub
cmp
jmp
cmp
jbe
loopne
out
ret
loopne
sub
mov
outsl
and
jmp
ja
pop
cmp
add
lretw
cli
pop
inc
xchg
je
shrl
add
cs
movsb
and
test
lahf
add
loope
sbb
je
iret
cmp
mov
mov
xchg
divl
aas
and
sub
sbb
pusha
sti
and
mov
ds
xor
adc
je
jge
fnstsw
and
jno
xchg
nopl
mov
clc
subl
pusha
jae
rolb
cltd
mov
inc
stos
push
add
mov
mov
xchg
ja
pushf
dec
ds
add
pusha
xchg
mov
sub
and
fimull
push
mov
cmpsb
push
daa
mov
js
push
out
jp
js
cmp
ficoml
add
in
outsl
pop
xchg
mov
or
dec
adc
xchg
insb
add
or
mov
pop
out
js
cli
test
mov
sub
loop
adc
jb
sti
mull
jae
mov
xchg
cld
lret
add
adc
aam
pop
adc
ficomps
xlat
mov
lahf
mov
mov
inc
sbb
sbb
xor
fimuls
ja
sar
jne
dec
mov
cmpl
rcrl
jmp
jg
dec
iret
es
int3
cld
add
fistps
jns
fimuls
xor
test
add
cmc
or
lea
or
mov
lds
dec
sbb
jbe
add
adc
pusha
pop
aad
cmpsb
jl
es
xchg
jecxz
adc
fcomps
or
fcomip
cmp
xor
cmp
ds
jns
in
adc
aaa
out
or
cmp
roll
insb
out
push
or
pop
cs
cmpsl
xor
ret
popf
xor
nop
loope
loop
pop
pop
pop
rorb
and
aaa
xor
dec
mov
pop
imul
fwait
sbb
add
fcomip
xor
jge
mov
dec
addr16
fisubrl
and
pop
rcll
enter
fxch
out
dec
ljmp
sbb
inc
hlt
inc
repz
add
dec
xchg
aam
sbb
mov
out
sub
arpl
cmp
sbb
fimuls
outsb
pop
cli
outsb
pushf
pop
int3
adc
dec
adc
popf
push
es
sbb
xchg
sbb
ret
int
jae
inc
add
mov
scas
adcl
testl
stc
push
lods
push
fwait
sbbl
sbb
sub
sahf
add
sub
outsl
out
rcl
fsubrl
je
jbe
mov
ret
arpl
xchg
dec
rcrl
add
sub
pop
mov
les
out
insb
pop
xchg
xchg
sbb
mov
mov
scas
popf
xor
lds
popf
pop
rolb
jb
pop
dec
jbe
pop
rolb
add
roll
mov
mov
and
xor
mov
add
ja
scas
mov
mov
je
or
add
inc
sbb
call
fmul
adc
pop
jb
jbe
push
sub
out
fdivrl
xchg
inc
mov
push
fcmovnbe
loopne
loop
pop
mov
into
inc
in
sbb
lock
jg
lods
stos
and
js
loope
pop
xor
jge
add
dec
jo
sbb
leave
xor
data16
fdivr
repnz
inc
test
xchg
icebp
mov
sub
mov
stos
arpl
mov
pop
in
insb
mov
push
mov
push
divb
test
mov
leave
aad
mov
xchg
jmp
push
repnz
in
loop
loopne
fadds
push
inc
mov
int
push
out
xor
leave
push
fadd
fwait
orb
ja
imul
adc
sub
imull
mov
ret
sbb
jle
in
cmp
lds
push
jae
ja
mov
jne
scas
outsb
rol
outsb
inc
cmc
mov
or
jg
inc
ljmp
aaa
mov
imul
adc
jmp
inc
mov
inc
push
dec
cmp
sbb
mov
roll
jp
jne
bound
scas
mov
cmp
popa
into
sub
or
add
dec
or
sub
fwait
jne
xchg
pop
sbb
xor
inc
and
inc
data16
popa
mov
sub
and
push
xchg
scas
inc
sahf
int
push
xchg
jnp
mov
sbb
add
outsb
jmp
leave
icebp
add
mov
pusha
fwait
outsl
incl
incl
in
dec
popf
cmp
jb
xor
xor
xchg
inc
aaa
push
cmp
pop
mov
pop
mov
cli
cmp
sbb
flds
in
insb
and
outsb
sbb
jno
out
sbb
xchg
xor
dec
push
ud0
subl
jmp
xchg
jno
lahf
scas
fcoml
mov
mov
jbe
inc
mov
cmc
pop
adc
inc
xchg
mov
test
lahf
outsb
jl
ss
lock
scas
lret
outsl
imul
push
dec
cmp
adc
fsubrl
cmpsw
adc
invd
cli
sub
inc
stos
dec
xorl
call
jne
out
fiaddl
add
std
jnp
je
mov
pop
push
adc
repz
xor
aas
adc
xor
pop
mov
je
mov
and
jb
or
mov
scas
xlat
inc
mov
into
sub
fisttps
add
sarb
dec
ljmp
push
stc
mov
jmp
or
cmc
push
js
in
mov
sub
pop
fnsave
sahf
mov
and
lret
frstor
and
pushf
outsb
sarl
mov
xchg
pop
and
test
push
xchg
lods
pop
mov
ljmp
gs
lea
daa
or
clc
jecxz
imul
xor
inc
lret
pop
pop
iret
sbb
repz
lret
out
fidivrs
and
inc
testl
mov
sub
jl
xchg
jae
jge
clc
jmp
adc
push
aad
cli
adc
fisubrl
sub
data16
push
xchg
xor
mov
xchg
inc
into
icebp
shrl
mov
out
cmp
mov
stos
push
in
jg
mulb
pop
add
jle
imul
xchg
jb
lods
adc
cmpl
scas
add
sbb
in
cmp
push
cmp
mov
out
xchg
shrl
cld
inc
rcl
lret
les
push
or
jns
mov
shl
add
xor
cmpl
lea
lds
sub
mov
sbb
ficoml
sbb
rcrb
xchg
adcb
in
pop
pushf
jge
jg
or
and
pop
sub
jae
pop
push
icebp
loop
lcall
push
push
pop
mov
jo,pt
sbb
aas
flds
mov
lock
pop
dec
sub
add
cmp
scas
xor
ret
sbb
cltd
cs
pop
loop
pop
mov
fadd
rcrl
loopne
popa
notl
adc
adc
jnp
fadd
leave
cli
test
mov
repz
xorl
and
leave
popf
divl
icebp
aam
pop
into
iret
mov
sub
in
mov
mov
jecxz
jae
in
rorb
push
inc
jnp
in
out
jne
loope
pop
fbstp
add
loopne
bound
and
daa
add
xchg
mov
and
cmovge
subl
fdiv
insl
decl
mov
jo
xchg
in
out
movsl
in
cmpsb
xchg
pop
dec
sbb
and
and
adc
push
pop
jmp
cmp
sub
cltd
adc
in
clc
popf
loope
out
bound
sub
outsl
ljmp
outsl
pop
clc
sub
in
xor
and
adc
lods
pop
xchg
insb
mov
call
cld
nop
and
pushf
dec
outsb
push
ret
add
shrb
or
and
fistl
loop
in
jmp
divb
out
and
add
mov
xorl
cmp
or
inc
shll
lahf
gs
ret
fistps
scas
adc
mov
aaa
repnz
dec
out
dec
push
lcall
push
push
movsb
dec
outsl
dec
cmp
mov
fmull
inc
or
fcomps
push
xor
xlat
stos
mov
cs
les
test
outsl
and
or
mov
push
hlt
push
or
cmp
adc
xor
outsl
pop
dec
inc
imul
cmp
outsl
add
sbb
sub
pusha
stos
aas
inc
popa
push
fs
adc
xor
test
xchg
mov
pop
dec
mov
lret
mov
not
adc
xchg
mov
lret
xor
or
push
push
scas
lea
cld
add
and
add
push
push
outsb
mov
sbb
cli
adc
sbb
int
mov
int
mov
add
adc
icebp
mov
js
scas
stc
add
push
gs
lret
rol
rcr
push
jns
movsb
sub
mov
inc
pop
fisttpl
push
xor
adc
testl
cld
mull
push
call
push
ss
push
pop
rolb
xor
adc
add
stc
imul
repnz
negl
cs
cmp
aad
inc
and
mov
sbb
shlb
push
shl
sub
repnz
repnz
es
xchg
mov
xor
pop
test
int
jp
push
mov
popa
arpl
loop
test
add
dec
adc
and
jl
out
and
mov
cltd
xchg
ret
pop
or
xchg
or
dec
cmpl
lcall
or
sar
pop
hlt
daa
xchg
inc
clc
ss
hlt
pop
dec
lret
out
out
in
and
inc
je
dec
icebp
dec
into
mov
lods
out
aad
fbstp
cmpb
into
jo,pt
popa
dec
mov
sbb
sbb
or
fmulp
int3
mov
dec
aas
xor
add
and
mov
outsl
mov
fs
push
dec
insb
jo
out
hlt
adc
xchg
push
addr16
jmp
fwait
loope
fidivrs
xor
dec
mov
xchg
jns
cmpsb
rcrl
sub
nop
bound
xchg
stos
xchg
jno
mov
jnp
test
mov
sahf
nop
loope
add
push
ficomps
mov
call
pop
inc
cmpsl
rorl
out
pop
jmp
ffreep
mov
fcomps
jno
xor
stos
push
dec
aam
icebp
fcompl
mov
lea
cmc
andl
popa
lcall
fbstp
js
pop
movsl
icebp
inc
fildll
mov
fwait
scas
int
cs
fiadds
roll
xor
popf
int3
pop
push
pop
jp
sub
sub
ss
fisttps
stos
pusha
push
push
movsb
jne
or
inc
sub
enter
movsl
jmp
enter
adc
clc
repz
push
fistps
cmpsl
push
xchg
movsb
dec
dec
out
ret
sub
mov
inc
and
imul
push
pop
dec
fists
cmp
lds
fidivs
loop
repz
xlat
test
inc
stc
push
stos
add
cli
xchg
lret
mov
rclb
movsb
cmp
dec
pushl
sub
and
gs
jmp
or
push
xchg
pushl
aam
dec
push
inc
inc
add
enter
sbb
cmp
push
popf
pop
adc
jb
xchg
add
pop
jp
mov
mov
and
sub
fstpt
jl
repz
push
mov
movsl
adc
enter
push
inc
mov
into
pop
pushf
jp
dec
mov
add
imul
xchg
shrl
cmpb
mov
xor
push
ja
add
int
rcrb
aam
pop
inc
xchg
lods
clc
and
mov
sub
shrb
cld
icebp
inc
test
ja
sub
lret
and
pop
xor
dec
or
xchg
jmp
dec
rorl
inc
and
jne
das
pushf
nop
fsts
scas
lods
cli
aam
push
out
cpuid
or
lcall
in
push
dec
cmp
mov
push
sbb
xor
pushf
sbb
nop
adc
xorb
pusha
insl
push
enter
mov
pop
imul
xchg
mov
sub
aad
jb
add
cmpsl
mov
xchg
add
dec
and
out
jnp
shrl
arpl
jl
mov
pmulhuw
movsl
loope
mov
sub
into
lea
call
lock
cmpb
cld
xor
jp
stc
clc
in
sbb
jle
xor
jecxz
push
movsl
sbb
mov
scas
or
dec
dec
mov
dec
mov
sub
xchg
jmp
and
sbb
insb
ret
xor
fidivrl
out
mov
cmpsl
jb
sbb
loop
je
lea
jb
mov
cmp
es
and
stos
cmpb
lahf
push
push
xor
clc
fs
loop
sarb
out
sub
nop
add
xor
pop
and
insb
add
shl
shlb
xor
or
cs
psrld
jo
add
pop
enter
stc
xchg
dec
jb
daa
aam
jmp
xlat
lods
into
jl
adc
leave
pop
jmp
popl
out
stos
leave
ljmp
pop
dec
and
push
pushfw
mov
sbb
fisttpll
cli
sahf
movsb
fiaddl
add
jno
mov
mov
push
aas
aam
ss
es
mov
push
mov
inc
jecxz
adc
pop
es
xchg
call
mov
sub
mov
arpl
lds
loop
xchg
xor
loope
stos
dec
lds
insb
or
sub
ss
adc
out
mov
nop
adc
fdivrl
pop
scas
ds
adc
mov
sarb
jmp
sbb
std
mov
in
cmpsl
roll
jbe
mov
in
push
push
or
pop
push
shlb
sti
and
arpl
sbb
pop
lods
dec
into
fimuls
jmp
int
es
lods
sbb
testb
lcall
pushf
xchg
ja
pop
dec
mov
push
stc
add
rclb
pop
cmp
cwtl
dec
sbb
mov
adcb
ja
in
lock
push
jle
pusha
mov
xchg
xchg
scas
push
rcrl
sahf
mov
jns
mov
sti
pop
sub
mov
jae
push
stos
jbe
into
lods
xor
fildll
xor
iret
enter
popa
aaa
popa
inc
xor
in
out
js
jb
scas
into
xchg
and
xchg
xchg
pop
mov
pushf
fistpl
nop
test
int3
lods
mov
sbb
mov
mov
sub
add
roll
fadd
insl
jl
xor
int3
pop
fsubs
mov
imul
adc
inc
out
cmp
repz
add
outsl
gs
rolb
sbb
sub
flds
fcomip
mov
divl
addl
cmp
jge
adc
mov
sub
jb
lds
lods
mov
ret
aas
jae
ja
pop
popf
inc
push
adc
sbb
ljmp
call
addr16
adcl
add
pop
sub
sbb
push
add
mov
mov
inc
xchg
adc
ret
push
xchg
mov
dec
int3
mov
cltd
mov
xchg
icebp
out
cmpsb
push
adc
jo
and
cmp
out
cmp
ret
sahf
sarl
sbb
add
cli
inc
and
cmp
sbbb
sbb
adcb
insb
hlt
sub
inc
movsl
push
xor
sub
hlt
sbb
js
jmp
popf
pusha
ret
or
sbb
imul
test
pop
jg
push
clc
call
pop
mov
das
cmp
push
or
hlt
mov
jmp
ja,pt
push
pop
xor
mov
push
jae
popa
out
loopne
inc
or
add
andb
pushf
faddp
es
jne
test
leave
incl
jb,pn
push
jecxz
ss
sub
pop
pop
aas
inc
mov
iret
pop
adc
loope
mov
loop
filds
add
jae
jp
lcall
cs
sets
data16
adc
sub
call
and
inc
stos
push
mov
aad
das
xchg
cld
jbe
int
in
aam
xchg
pop
inc
add
add
fptan
sti
daa
and
and
lods
ljmp
dec
inc
in
shlb
test
ret
inc
adc
push
loop
idivb
adc
adc
aam
and
inc
jmp
add
add
fwait
or
add
dec
and
rcr
ret
out
pop
sbb
sub
xchg
mov
mov
add
cs
rcll
push
dec
testl
push
daa
es
inc
add
add
push
fsts
gs
imul
inc
add
mov
out
cli
shlb
xchg
pop
cmp
jl
iret
outsl
mov
bound
xchg
ss
push
sbb
xorl
aas
insb
mov
mov
lea
popa
das
mov
push
iret
sub
arpl
test
jno
mov
push
push
shlb
jge
jae
jge
mov
mov
cmp
sbbl
imul
cltd
xor
pushf
into
daa
jmp
mov
stc
push
ss
or
lods
push
mov
das
mov
dec
icebp
icebp
stc
cmp
test
jnp
cs
popf
inc
mov
test
out
mov
sti
lcall
inc
repnz
test
add
mov
cmpsl
negb
fucomip
into
xor
idiv
inc
cmpsb
ret
or
shrl
dec
mov
push
mul
cmpsb
aad
push
aad
jl,pn
lret
arpl
or
xchg
stos
stc
or
add
dec
sub
insl
rcrl
daa
movsl
jmp
and
cmp
push
pop
ret
pop
push
sti
pop
or
jmp
lret
jg
lahf
adc
sub
pop
stos
push
mov
test
stc
or
test
shlb
hlt
pop
fcompl
add
out
gs
xor
xchg
mov
mov
sbb
pop
adc
mov
jo
pop
movsb
ljmp
lds
gs
and
push
xchg
push
imul
mov
sbbl
mov
jns
jle
dec
outsl
movsb
cwtl
lret
mov
in
and
setnp
push
scas
in
mov
xchg
push
icebp
add
in
ss
in
dec
fidivl
ja
adc
inc
push
add
or
jbe
imul
int
movsb
lods
cli
or
lods
mov
sarl
out
movl
jno
xchg
idivl
inc
mov
jo
push
addb
push
sbb
sbb
ret
lea
js
adc
adcb
enter
add
divl
dec
icebp
rcrl
adc
mov
add
push
fcompl
xor
lods
sub
rcl
mov
sub
das
mov
xor
into
push
hlt
rcrb
mov
mov
int3
pop
xchg
clc
dec
push
or
testl
mov
jmp
jl,pn
inc
das
pop
push
inc
stos
movsb
or
outsb
cld
sbb
inc
mov
addl
push
mov
add
es
int3
jge
sahf
loope
sub
xor
fdivl
fdivl
inc
popa
xor
xor
addr16
pop
rcl
xor
add
idiv
and
adc
in
inc
mov
jmp
enter
or
cltd
inc
inc
gs
pop
sbb
adc
ljmp
pop
mov
lock
setne
xchg
jne
jne
jle
push
or
push
out
xor
xor
das
ljmp
sub
pop
mov
push
push
xor
sbb
adc
jecxz
xor
or
or
fstl
sub
pop
into
push
dec
xlat
in
popf
ljmp
aad
aas
icebp
jno
mov
push
push
inc
lea
xchg
je
and
xchg
xor
fsubrs
xchg
in
jo
mov
hlt
or
mov
push
adc
cwtl
jg
inc
xor
aaa
mov
jns
push
stos
push
notl
popa
sub
jns
jmp
test
decb
loop
cwtl
inc
faddl
cmp
popa
mov
lahf
adc
push
decb
mov
sub
pop
mov
sub
and
xor
int
loope
dec
cmpb
xchg
mov
lods
adc
fwait
pop
aas
push
pop
rcrl
call
jg
aad
cmpsl
adc
pop
cmp
xchg
jnp
pop
mov
push
push
and
lret
push
pop
out
xchg
orl
pop
loop
cmc
ret
aaa
jmp
inc
ret
scas
cltd
daa
cld
js
sarl
push
ror
inc
xorb
test
and
mov
sub
mov
andl
out
lcall
es
fmuls
into
mov
leave
imul
cmpsl
cmp
jecxz
mov
add
mov
notb
pop
scas
mov
xchg
lcall
or
sub
jnp
leave
xchg
push
adc
sub
fs
aad
xchg
rcl
cmpsb
iret
mov
popf
rorb
push
cltd
jnp
jo
orb
aam
push
sub
add
call
mov
jae
xor
imul
inc
lahf
data16
fs
add
pusha
pop
repnz
lret
jle
sbb
inc
lds
or
and
loop
xlat
cmp
cmc
or
mov
dec
into
das
jp
dec
fdiv
inc
mov
push
icebp
pop
stos
pop
adc
ss
fsubr
fmuls
popa
filds
sbb
cmpsb
enter
sbb
mov
add
outsb
xor
fs
jecxz
mov
ss
xchg
push
cmp
or
xlat
or
cli
call
aad
mov
or
jno
nop
outsb
pop
jge
out
leave
push
cmc
jecxz
jp
jg
scas
mov
mov
mul
push
pop
loopne
dec
mov
sub
sbbb
xlat
push
mov
ret
out
popa
out
sahf
sar
sub
insb
sbb
mov
adc
es
mov
insl
push
cs
sub
and
inc
lret
lret
dec
imul
add
js
push
inc
xor
data16
ljmp
xchg
stos
jle
push
je
and
mov
mov
mov
std
or
inc
inc
mov
insl
cli
push
adc
and
outsl
test
pop
xlat
xor
aam
cltd
push
cs
xor
aaa
fimull
test
dec
stos
js
shll
push
in
and
lods
rorb
jmp
mov
das
dec
sahf
push
inc
and
outsb
in
movsb
jge
and
push
jp
mov
push
push
push
push
push
add
loope
pop
or
and
ret
ror
xchg
mov
push
cmp
testb
sub
adc
fcmovbe
fsubl
mov
subb
inc
xchg
dec
arpl
loope
pop
dec
mov
or
push
fnsave
int3
mov
jmp
and
adc
pop
aaa
xor
mov
sbb
pop
add
shrb
push
pop
mov
add
fs
movsl
mov
cwtl
ficoms
dec
ret
mov
xchg
inc
lret
enter
aad
lds
mov
movl
push
sub
lds
push
ja
cmp
mov
mov
jae
push
sbb
push
stc
daa
jl
xor
and
dec
div
loopne
jae
jbe
xor
js
pop
xchg
jbe
jae
jns
repnz
jns
cli
movsb
rcrl
cmp
adc
movsl
lcall
jbe
fsub
push
into
xchg
mov
jbe
or
gs
jle
add
inc
lea
or
mov
in
push
jne
sub
fbld
mov
pop
btr
imul
adc
xchg
iret
movq
push
mov
repnz
imul
add
std
xchg
mov
push
repnz
fs
cmp
ret
pop
mov
sub
call
shlb
sbb
mov
push
lods
cmpsb
jo
lock
mov
fs
daa
clc
loopne
fnstsw
push
pop
and
adc
andb
iret
pop
mov
dec
jbe
add
popf
lcall
pop
lods
sub
mov
iret
into
sahf
push
push
mov
movsl
push
dec
mov
lea
fcompl
enter
inc
mov
lea
adcl
repnz
out
repz
xchg
outsl
adc
jl
add
inc
pop
xor
sarb
or
roll
sbb
lcall
lds
push
xchg
adc
dec
filds
fistl
enter
lds
enter
scas
test
fnstsw
sbb
les
jg
sbb
inc
xor
ret
fdivl
data16
int3
daa
cmp
mov
adc
aaa
add
std
dec
pop
mov
pop
in
call
cmp
sub
ja
lret
mov
cmp
pop
mov
in
xor
je
push
xor
and
fnstcw
pusha
mov
stc
fisttps
aas
sbb
xchg
xchg
mov
and
inc
std
loop
stos
sti
sbb
mov
jae
sbb
in
data16
movsl
out
sub
clc
push
sbb
es
xor
xor
or
cli
fcom
sbb
push
mov
push
and
das
stos
pop
lcall
push
inc
sarb
mov
sahf
cmovl
xchg
fnstcw
shr
loopne
mov
push
jns
mov
fistps
push
push
xlat
cmp
dec
add
stc
leave
ljmp
xrelease
fstpl
dec
jg
push
mov
lahf
xchg
pop
jl
cmpsl
xchg
lods
sub
inc
movsl
and
pop
inc
sub
scas
in
aas
sbb
cmpsl
jg
addr16
fstl
daa
and
mov
popw
jmp
inc
popa
and
loope
scas
cltd
insb
insb
loope
pop
add
mov
ja
adc
pusha
jne
xchg
in
jnp
psubusw
test
out
out
insb
scas
idivl
adc
ja
test
inc
shrb
inc
dec
or
xchg
mov
dec
aam
sbb
daa
rclb
cld
inc
jae
inc
cmc
pop
cmp
push
scas
rcrl
sarb
js
mov
cmp
pop
adc
inc
pop
mov
sub
fstps
push
or
mov
lock
pop
nop
xchg
les
test
stos
cli
mov
leave
bound
lcall
cli
subl
pop
movsb
mov
cmp
lea
in
sub
nop
lods
incl
adc
adcb
xorb
test
insl
jo
mov
movsl
mov
stos
les
pop
insl
jp
or
mov
lret
insb
pop
mov
mov
mov
arpl
push
lock
hlt
cwtl
mov
popf
jbe
push
roll
jns
ss
aas
loope
jno
fnstsw
jb
sbb
movsl
mov
jp
rcll
mov
pop
scas
jmp
out
popa
sahf
loop
sbb
inc
mov
jl
lcall
pop
outsb
jp
nop
inc
xchg
mov
lods
xor
stc
jl
push
push
inc
xor
mov
sbb
hlt
xchg
jecxz
mov
lret
cmpsl
fidivrs
or
dec
push
or
enter
ds
jb
ret
ja
adc
scas
xchg
lods
jno
pop
jne
push
xchg
sbb
xor
cmc
rcrl
mov
and
push
inc
xchg
and
rcl
negb
aam
arpl
or
loop
ret
cmp
pushf
mov
sar
addl
sbb
mov
cltd
jp
scas
daa
push
clc
pushf
push
jae
and
cld
jno
cs
in
loope
cmp
jle
mov
repnz
jno
pushf
pop
bound
std
insl
lcall
inc
jo
faddl
aad
push
adc
xchg
stos
cli
adc
mov
mov
add
icebp
jg
pop
sbb
xchg
sub
loopne
enter
aam
loope
sub
xor
js
jg
xor
mov
sti
adc
sub
js
mov
push
push
push
mov
adc
inc
divb
pusha
mov
popa
push
add
aad
mov
leave
adc
imul
adc
ljmp
fcompl
fildl
push
mov
icebp
popa
cli
test
test
cli
js
sbb
in
xchg
es
pushf
rol
popa
xchg
or
pop
mov
mov
or
push
fs
ret
and
push
outsb
cld
sub
mov
mov
incb
mov
xchg
mov
mov
rcpps
mov
inc
mov
sbb
xchg
sbb
scas
aam
scas
je
pop
mov
addr16
dec
lret
lods
cmp
stos
dec
int
pop
add
in
aam
push
dec
fimuls
push
push
inc
loope
sti
push
in
pushf
and
pop
inc
in
adc
pusha
and
pop
xor
inc
pop
sbb
shlb
xor
ljmp
lea
push
daa
int3
sub
lods
mov
inc
in
loope
xchg
ret
rcl
cmc
sarl
pop
dec
cmp
das
jno
lods
pop
inc
shll
mov
sbb
lret
je
pushf
inc
test
inc
cmpsl
cmpsl
rclb
push
add
sahf
push
jge
hlt
or
dec
les
test
mov
push
and
out
mov
inc
or
add
popa
xchg
dec
cmp
lods
sbb
flds
inc
pop
das
int
cltd
push
loop
mov
inc
mov
stos
pop
jl
inc
test
mov
push
xor
test
mov
sbb
cmp
jp
mov
push
idivl
jecxz
sbb
push
sub
insb
pusha
jo
mov
pop
and
jecxz
mov
out
xchg
mov
mov
adc
push
sub
or
mov
sbb
bound
mov
jns
xor
add
inc
aaa
xor
or
mov
push
dec
cmp
call
dec
fs
jecxz
jo
aad
popa
mov
pushf
hlt
shll
xchg
push
mov
imul
pop
push
loop
loope
push
es
pop
std
ja
ja
cmovno
add
pop
mov
or
cmpb
scas
or
ret
popf
out
sbb
lods
lea
or
sbb
iret
xchg
xchg
and
add
movsl
lock
out
adc
cmpsb
dec
movsl
outsb
sbb
stc
and
in
aam
ret
mov
aaa
scas
mov
aas
mov
clc
dec
push
out
insb
jmp
mov
aam
jecxz
psubq
jnp
fisttpl
jb
bound
jo
out
lods
xchg
push
lds
jns
es
jo
out
mov
pop
shlb
cli
lret
pop
cltd
out
jb
aad
mov
or
mov
mov
cmp
mov
stos
inc
sbb
mov
inc
pop
xchg
add
ret
add
add
cmpsl
jns
stc
cwtl
les
in
mov
mov
dec
aaa
hlt
xchg
out
movsl
add
jo
push
sub
je
cwtl
stos
sub
lock
mov
push
add
test
aaa
sub
test
pushf
mov
jnp
stc
pop
mov
scas
enter
fidivrl
jecxz
jmp
add
cli
push
rcll
sub
daa
aad
pop
jle
inc
scas
pusha
inc
mov
popa
push
fs
inc
into
ret
mov
ss
lock
into
push
pop
jae
adc
push
js
aam
and
in
adc
filds
aas
movsl
mov
in
lcall
call
mov
andb
add
add
inc
call
pop
lds
aad
cmp
mov
pop
mov
push
stos
cli
icebp
stc
cwtl
add
rcrb
fwait
lret
jg
lret
mov
lock
outsb
pop
imul
mov
andl
ret
cwtl
aas
push
out
out
scas
sahf
xor
xchg
sti
mov
add
cld
cli
sbb
jnp
sarb
mov
lock
std
shrl
jle
enter
loopne
repnz
fdiv
call
add
and
testl
push
jge
and
xchg
out
cli
inc
jo
mov
movsl
leave
out
adc
push
insl
xor
mov
xor
pop
sbb
add
push
push
mov
ret
dec
insb
jo
jge
ljmp
jo
movsb
mov
xor
xchg
push
adc
push
pop
dec
cmp
and
xor
pop
cwtl
insl
out
pop
notb
ficomps
imul
jb
nop
in
lret
pop
dec
mov
mov
or
pushl
js
insb
push
mov
xor
sub
jns
ret
fwait
shrb
sar
pop
dec
cmpsl
std
mov
in
imul
gs
sub
lret
call
loope
mov
popf
mov
push
test
mov
repz
insb
test
sbb
xor
jns
arpl
mov
adc
sbb
enter
call
lret
movsl
cmpsb
jnp
sbb
jnp
mov
mov
and
push
movsb
fwait
jge
push
fs
and
fstpt
adc
loopne
out
out
mov
cwtl
ret
bswap
pop
js
pop
mov
in
ja
nop
ljmp
and
fmuls
mov
cwtl
push
int
das
push
or
les
mov
es
jecxz
cmp
cmp
hlt
xor
mov
inc
scas
aaa
imul
in
outsb
movnti
mov
jae
mov
xor
and
mov
call
push
stc
shl
pushf
or
insb
sti
inc
cs
lea
push
shrb
xchg
mov
fiaddl
dec
cwtl
push
out
dec
mov
mov
loop
sbb
cltd
add
testl
scas
jne
and
leave
gs
aad
enter
xchg
mov
aas
out
mov
ljmp
dec
ffreep
pop
in
mov
pop
sbb
xor
xchg
and
sub
ja
mov
aam
and
adc
cmc
ret
daa
xor
out
and
icebp
lds
add
test
sbbb
mov
repnz
dec
mov
inc
scas
xchg
xor
iret
rorb
lcall
push
orb
jecxz
jp
mov
pop
mov
neg
fisubrl
push
cmp
insb
out
dec
lds
pop
mov
ret
xchg
jne
mov
std
rcrl
imul
xchg
mov
add
outsb
xchg
test
push
cwtl
lret
jo
sub
mov
jns
dec
imul
mov
movsl
xchg
mov
stos
pop
fistps
cmp
xor
push
inc
xchg
push
push
sub
push
xor
and
icebp
lock
stos
sub
inc
dec
adc
pop
ja
dec
and
repnz
cmp
shrl
jge
mov
sub
loopne
loop
jns
lods
jmp
outsl
clc
pusha
dec
cwtl
adc
mov
dec
int3
sbb
mov
test
mov
jmp
fs
lahf
jo
jmp
subl
imul
prefetch
lods
out
ss
sti
lret
sub
hlt
in
loope
lods
mov
nop
jbe
xchg
imul
addr16
incb
or
pop
push
leave
jle
in
mov
pop
add
out
xchg
loopne
mov
rolb
sbb
cmp
inc
popa
das
inc
leave
mov
lret
sub
or
mov
lret
add
imul
push
out
rolb
in
add
xlat
sarl
add
xor
jmp
out
sbb
js
push
in
movb
ja
cld
adc
dec
mov
mov
data16
or
inc
mov
dec
push
mov
adc
mov
or
and
shl
mov
not
insb
xor
mov
add
sub
inc
popf
insb
jns
shrl
scas
inc
jb
sbb
ss
dec
mov
in
das
pop
add
jnp
adc
enter
ficompl
xor
test
dec
fdivrl
inc
mov
outsl
sbb
inc
add
push
jl
inc
fs
cmp
loopne
jmp
lds
imul
mov
push
aam
insl
inc
dec
loopne
xchg
cmp
inc
or
xorb
notl
jne
mov
pop
dec
jae
ja
mov
adc
and
cmp
jno
sbb
pop
mov
fwait
enter
lret
adc
imul
cld
pusha
push
arpl
imul
dec
mov
popf
adc
dec
dec
pop
pop
add
adc
sub
mov
xchg
movsl
js
int
out
inc
or
adc
xchg
dec
cmpsb
rcrl
xor
std
mov
les
in
or
lret
inc
mov
xchg
test
lcall
or
push
adc
xchg
xchg
daa
sbb
jmp
mov
sub
andps
enter
test
push
jne
fdivrp
imul
pusha
pop
cmp
xchg
fwait
stos
push
mov
divb
pop
neg
loop
xchg
rorl
and
fnstsw
sub
cmp
pushf
mov
popf
shlb
mov
jae
popa
loop
cltd
movsb
push
sub
adc
repnz
int3
cmp
imul
adc
mov
mov
push
lahf
addr16
addl
push
mov
xchg
inc
jle
in
dec
push
cmp
xchg
out
popf
out
leave
xchg
add
ss
mov
xor
repnz
sbb
xchg
xor
sbb
add
cltd
xor
in
inc
cmp
mov
adc
xor
lahf
scas
sub
test
outsb
jl
cltd
jo
jmp
dec
push
add
loop
ljmp
insb
fucomip
fldt
pop
std
lds
je
cld
add
fwait
lret
push
xlat
icebp
fists
jmp
dec
lret
mov
push
cltd
fiaddl
adc
xchg
pop
xor
mov
sarb
xchg
test
mov
test
ja
jge
clc
repz
sub
pop
insb
pop
cmp
adc
int3
jae
push
adc
or
xor
fildl
das
pushf
adc
mov
cmpl
cmp
mov
jecxz
xor
xchg
sahf
cmp
mov
mov
aad
je
in
mov
out
test
mov
cmp
lds
outsl
scas
sbb
pop
push
roll
lea
fcoms
jb
adc
and
shlb
dec
out
mov
mov
cmp
gs
mov
cmpsb
xchg
mov
jge
jae
xlat
fs
js
cmp
js
jb
ret
fldenv
mov
cmc
mov
push
xchg
xor
stos
lahf
data16
cmpsb
jle
ds
xlat
movsb
ds
sbb
sub
push
insb
ret
test
inc
dec
inc
mov
imul
sbb
adc
xor
mov
std
lret
or
or
add
xorl
sbb
push
pusha
push
inc
inc
sbb
inc
mov
popa
mov
das
sbb
lock
jmp
dec
cmp
rcrl
lret
ficoms
sbb
mov
leavew
xchg
sub
pop
scas
xor
xor
cmpl
adc
cli
shr
jo
test
sub
or
jp
pop
mov
aad
mov
cmp
lcall
or
loop
rcr
pusha
jp
mov
inc
call
faddl
add
in
pop
movsb
jg
sbb
add
popa
pop
out
cld
sbb
xor
dec
lret
adc
fildll
mov
lods
mov
fdivrl
xchg
sti
in
repnz
add
or
pop
push
jbe
jmp
nop
pop
fisttpll
pop
push
addr16
out
lcall
sub
adc
dec
and
aam
scas
inc
xchg
int3
in
pop
roll
inc
aad
cmp
mov
test
mov
sahf
sub
adc
enter
jg
push
fnstenv
and
fisttpll
jnp
stos
cwtl
in
shlb
jle
leave
frndint
nop
adc
jae
pop
sub
lahf
jmp
mov
add
aaa
cli
sub
fistpll
fisubl
xchg
fwait
jno
sbb
clc
pop
loopne
adc
cltd
jbe
icebp
dec
add
xor
or
or
mov
roll
mov
movsb
push
xor
fwait
inc
pop
xlat
mov
rolb
unpckhps
add
fmuls
pop
ja
out
xchg
cmpsb
adc
in
dec
pop
xchg
xor
cmp
lcall
xchg
pop
nop
arpl
pop
jmp
jmp
inc
push
cld
adc
imul
lods
imul
mov
mov
loope
sbb
fsubr
push
mull
sbb
fmuls
iret
push
dec
lcall
pop
or
push
adc
or
dec
or
rclb
enter
cmp
xor
scas
data16
bound
xchg
mov
out
xchg
inc
or
adc
mov
push
push
xchg
loope
jg
sbb
out
mov
movsb
cmp
mov
xor
hlt
into
iret
and
push
add
popa
cwtl
mov
or
mov
sarb
add
inc
sub
je
stc
xchg
mov
ret
clc
leave
push
and
pop
dec
jbe
mov
cmp
js
dec
sbb
dec
sbb
pop
push
cli
push
fwait
mov
arpl
jg
sbb
aas
push
cmp
push
dec
mov
sub
divl
mov
mov
sahf
xlat
xchg
sbb
test
inc
cmp
cmp
mov
jecxz
dec
mov
fcmovnu
jbe
cmp
insb
inc
mov
jno
sbbb
sbbl
mov
repnz
std
mov
pop
sbb
dec
pop
mov
push
and
and
inc
and
dec
imul
adc
pop
push
xor
sbbb
push
sub
in
sbb
pop
sbb
mov
adc
ret
sbb
in
outsb
cmpsb
adc
mov
dec
in
lea
inc
test
mov
movsl
daa
rclb
cmp
pusha
shrb
or
jecxz
jge
jg
xchg
or
push
insb
pop
in
sub
dec
or
mov
pusha
shrb
aad
and
lds
adc
dec
mov
cwtl
xor
push
leave
cmp
movsb
int3
daa
add
add
xchg
in
xlat
test
popf
lods
arpl
sub
or
xsha1
cmpsb
lret
dec
adc
adc
cmc
pop
nop
in
add
push
cld
cmp
roll
sub
popa
je
pusha
test
mov
or
push
dec
pop
lods
and
stc
push
inc
mov
push
mov
popa
shrb
jbe
fmull
and
mov
mov
push
push
push
sbb
rcrb
scas
arpl
push
les
or
stos
outsl
mov
jmp
adc
movsb
xor
out
out
int
xchg
jmp
adc
insb
pop
inc
and
sbbb
dec
adc
and
cltd
cmp
xor
inc
repz
or
ja
loope
popa
push
pushf
loope
int3
lods
jnp,pn
rcr
js
jb
fcomi
mov
repz
pop
dec
enter
fisubl
inc
icebp
xchg
inc
jne
adc
in
sahf
pop
sti
lock
mov
ret
mov
data16
dec
cmp
cmpsb
nop
les
repnz
shll
pushf
mov
imull
fcoml
adc
mov
xor
mov
pop
cld
xor
movl
xor
adc
sub
jne
shl
imul
aam
lcall
notl
dec
xchg
mov
sub
adc
xor
sub
adc
push
push
or
jl
pop
xchg
or
into
das
mov
cmp
pop
pop
out
xor
fdivl
mov
and
jle
in
sbb
dec
push
test
cmp
jno
cmp
test
xor
repnz
sub
fistps
loopne
fiadds
ret
pop
dec
daa
and
pop
subl
adc
test
lret
lds
in
push
xcrypt-cfb
cmpsl
out
bswap
sub
add
dec
mov
loop
xlat
xchg
mov
add
jns
inc
out
mov
xchg
push
aam
mov
pop
jne
push
pop
mov
leave
loopne
and
loope
dec
fs
mov
mov
out
xchg
daa
sbb
je
jb
xor
dec
sub
and
inc
xchg
movsl
push
shl
mov
ss
sti
dec
lcall
and
push
sbb
in
pop
repz
mov
sbb
mov
mov
xlat
decl
mov
popl
xchg
dec
lock
fxam
push
aam
and
rcrb
sub
sbb
nop
push
test
cwtl
jns
mov
ds
scas
cld
sub
out
xor
popa
mov
js
jbe
mov
adc
cmpsb
xor
outsb
mov
or
lcall
sub
and
push
outsl
jge
adc
sub
push
and
xorl
or
daa
jnp
sbbl
push
jg
push
jl
scas
add
or
mov
sbb
mov
or
push
sbb
filds
mov
in
lahf
out
add
cmp
cmp
js
mul
lcall
pop
or
gs
xor
bound
jecxz
enter
fsub
cltd
push
mov
xor
and
dec
cmp
jne
in
lock
or
sub
sub
add
xlat
pushf
fnstcw
or
aam
lahf
dec
neg
sub
inc
xor
xor
out
fucomip
test
cmpb
push
mov
pushf
enter
xchg
adc
sub
dec
cmovnp
xchg
push
dec
aas
aaa
sub
out
jnp
xlat
cmpl
into
sub
les
inc
jno
mov
fisubrs
cli
mov
hlt
stos
add
mov
xchg
pop
dec
in
rcrl
fisttpll
add
imul
sti
fdivl
popf
cmp
adc
iret
js
dec
dec
xlat
pushf
test
loopne
sub
es
popa
pushf
jl
pop
lcall
mov
xchg
cld
jbe
xlat
mov
sti
outsb
sub
cld
jb
leave
cmpsb
das
fcomi
jp
aad
jae
pop
jmp
push
adc
push
sbb
sbb
fidivs
gs
mov
pop
in
cmp
test
jecxz
in
rcrl
dec
sarb
test
mov
inc
movl
out
cmp
jecxz
or
xchg
std
and
rcrl
cmpsb
jae
sbbl
movsl
lock
pop
adc
jp
cmp
popl
add
or
mov
lock
arpl
cmp
ja
imul
sbb
dec
jns
negl
cmpsb
mov
cmp
or
adc
cmp
and
mov
idiv
lret
sbb
xchg
popl
sahf
and
sub
xchg
push
popa
cmp
jb
mov
test
sub
fsubs
jl
int3
data16
into
xor
xor
xlat
in
jo
cli
std
mov
mov
clc
insl
pop
lods
loopne
adc
cmp
inc
sub
insl
jbe
fistpl
fdivrl
cwtl
mov
sbb
lret
add
in
cmp
and
fwait
loop
jne
lods
or
add
jg
xor
hlt
mov
or
adc
xor
cmpsl
or
xor
adc
jns
xchg
shl
int
outsl
sbb
ret
or
xor
gs
les
cmpsl
filds
jb
cltd
mov
jb
repnz
fwait
in
inc
ja
jp
jne
jmp
add
lea
add
call
les
jmp
das
xor
out
xor
int
inc
cmp
es
sarl
js
inc
jg
loop
push
adc
mov
movsb
pop
add
cli
inc
lds
mov
and
cld
cmp
faddl
lods
movsl
incb
and
xlat
insl
lock
cld
pop
jmp
cmp
rcll
cmpsl
cwtl
push
push
adc
fsts
jnp
imul
sbb
pop
ja
pop
sti
loope
or
mov
push
xor
gs
pop
push
lds
mov
pop
scas
jae
sub
stc
movsb
or
cmc
adc
xor
add
imulb
cmp
lret
mov
cli
out
loopne
out
mov
mov
xchg
lret
jmp
jg
sub
pop
add
push
xchg
sbb
cmp
add
adc
orb
sbb
je
and
frstor
call
in
cld
jne
xchg
xchg
cmp
addr16
push
sub
jnp
into
push
inc
xchg
inc
scas
orl
xchg
pop
xchg
js
fisubrl
jmp
dec
mov
jp
movsl
js
andl
cmpsb
insb
push
mov
ret
bound
and
pop
inc
idiv
imull
pusha
push
xchg
movl
out
fisttpl
mov
mov
push
dec
jo
repz
push
sub
mov
sub
mov
popa
sub
jae
push
xchg
pop
lods
inc
cmp
test
outsl
or
xchg
xchg
leave
mov
xor
int3
push
lock
shr
and
cmc
jno
cmpsb
adcb
xchg
shlb
mov
mov
loopne
mov
push
push
fmul
das
sti
popa
inc
call
sti
repz
mov
jl
mov
dec
cmp
inc
push
leave
loop
hlt
add
add
xchg
pop
xor
mov
xchg
mov
inc
jbe
pushf
orl
shrb
mov
cltd
sbb
jb
xchg
shlb
stos
and
xor
jle
mov
mov
mov
pop
sahf
mov
mov
push
aaa
sbb
notl
pop
dec
rol
cwtl
stos
mov
jmp
sbb
cld
mov
fdivs
dec
push
ja
push
push
push
adc
sub
int3
mov
mov
xchg
in
aad
mov
hlt
push
inc
fwait
lret
sub
push
xor
movsl
xor
mov
push
sub
cli
insb
and
enter
mov
push
pop
ljmp
mov
iret
pop
cmp
xchg
int3
rolb
and
ljmp
mov
xor
xchg
je
cmovle
jle
cs
lds
sbb
imul
pop
std
cltd
cmp
adc
and
fwait
popa
mov
mov
push
repnz
mov
shrb
adc
sahf
and
daa
mov
ljmp
imul
stos
sbb
mov
or
aas
pop
mov
xchg
leave
xor
pusha
popf
es
dec
adc
sbb
out
pusha
pushf
sbb
cs
adc
fidivs
jae
enter
lds
js
sub
mov
repnz
pop
in
dec
imul
gs
cmp
mov
jb
mov
cld
sub
enter
sti
pop
mov
xchg
and
jge
cmc
or
mov
push
adc
fimull
mov
lods
or
sub
in
iret
cmp
xor
jle
ret
sbb
pop
jns
mov
jnp
and
divl
sbb
ret
scas
inc
out
loopne
cmc
ror
sbb
sti
imul
add
imull
lret
adc
mov
push
fists
adc
cmp
out
stos
xor
pop
xchg
xchg
xchg
and
frstor
or
mov
or
fs
cmpsl
iret
adcb
je
std
dec
fnstcw
cwtl
les
imul
xorb
sub
movsb
test
rcl
repnz
mov
fiaddl
sub
stc
hlt
cmp
dec
into
fdivrl
cltd
push
lcall
outsl
add
mov
insb
dec
add
dec
or
xchg
add
sahf
mov
mov
mov
incb
sbb
mov
sbb
adc
out
rol
test
imulb
xor
sbb
jmp
lods
mov
xor
inc
push
and
cmp
jle
nop
rol
pushf
mov
and
out
pop
sbb
mov
mov
icebp
mov
add
xor
push
mov
or
shr
ja
test
loope
push
bound
mov
in
add
inc
and
jp
mov
int
jne
les
mov
cmp
repnz
adc
jg
movsb
sti
cmpsb
jae
pop
jl
xchg
inc
icebp
arpl
js
xchg
sub
and
dec
gs
sub
xor
fisubrl
divl
icebp
mov
and
lea
push
out
je
jns
repnz
xchg
xor
popf
push
mov
push
movsb
iret
fnclex
xor
xor
mov
rolb
sbb
jle
insl
push
in
movsb
cs
dec
psrlq
add
dec
xlat
decl
mov
add
out
out
inc
or
inc
repnz
mov
pop
add
aaa
xchg
icebp
sti
mov
and
cli
nop
pop
shlb
movsb
out
stc
or
clc
add
les
mov
pop
inc
call
jmp
add
inc
jb
jb
cld
jne
or
and
and
cli
mov
mov
xchg
inc
loop
sahf
stc
daa
out
push
and
jb
jno
sbb
movsb
popa
pop
es
fs
dec
or
lret
icebp
mov
cwtl
dec
fcompp
rsqrtps
jl
orb
push
pop
hlt
xchg
cltd
imulb
or
cld
out
insb
xchg
sbb
sub
leave
popa
fnstenv
nop
in
test
rorl
mov
shlb
out
fucom
lcall
fwait
test
loop
dec
or
ja
pause
mov
mov
push
clc
jae
fimull
dec
mov
test
xchg
aam
aam
mov
dec
test
xchg
aas
icebp
call
data16
xchg
jge
loope
pop
pop
inc
cmp
ds
pop
mov
scas
out
sub
mov
mov
insb
pop
call
fdivr
stos
xchg
xor
jo
pop
ljmp
clc
dec
sub
xchg
insb
adc
test
mov
addl
popa
add
clc
insl
out
jnp
xor
out
cli
iret
mov
arpl
fnstsw
mov
cmp
movsl
adc
pop
inc
xchg
stos
test
fsubrp
popf
rolb
ret
out
je
sub
dec
clc
sub
inc
in
push
mov
inc
call
pop
sub
push
enter
pop
mov
loopne
lahf
out
ljmp
xor
pushf
mov
dec
in
pop
mov
jnp
push
pushf
arpl
sub
into
jle
aad
fidivs
xor
stos
push
cmpsl
in
pushf
loop
xchg
xchg
neg
add
mov
js
lahf
mulb
pop
rcl
adc
mov
pushf
xchg
sub
push
jb
loopne
push
in
mov
adc
in
push
mov
test
rorb
repz
movsb
mov
insl
ds
test
xchg
gs
dec
addl
jecxz
jnp
or
xlat
mov
int3
xorb
frstor
sub
push
push
jmp
enter
cmp
push
xor
adc
push
arpl
mov
adc
dec
jmp
sbb
fwait
cli
fstps
lds
push
movsb
rolb
and
das
dec
dec
jge
int
movsl
push
push
pusha
fcmovbe
cs
nop
rcrb
repz
repz
jg
ja
xor
pop
mov
scas
popa
and
jb
dec
std
mov
imul
adc
jbe
inc
adc
imul
xchg
adc
les
adc
int
shl
lahf
adc
ror
dec
repnz
inc
rcll
pop
mov
xchg
pop
cmc
xor
stos
popa
and
pop
inc
scas
or
add
add
daa
in
jb
push
sbb
xchg
xchg
rclb
xchg
imul
lods
inc
mov
das
sbb
jge
enter
mov
jmp
daa
ds
add
xchg
adc
dec
pop
ret
mov
scas
dec
push
sbb
adc
gs
les
stos
xchg
dec
out
sbb
dec
xor
outsl
mov
ret
xchg
dec
filds
pushf
dec
push
sbb
pop
mov
subl
inc
sti
bound
mov
ljmp
push
rcrl
push
inc
out
dec
ds
iret
add
ja
sbb
inc
cmpsb
loop
jle
lds
adc
bnd
dec
dec
cmp
pop
mov
cli
andb
stc
aaa
pop
insl
cs
insb
push
jge
mov
xchg
lods
dec
xchg
xorl
daa
mov
ljmp
sbb
out
loope
jbe
iret
cwtl
int3
rcrb
xlat
dec
lea
popa
mov
mov
sub
sub
call
and
adc
addr16
xorl
stos
stos
push
jmp
cltd
pop
lock
pop
cli
sub
shrl
inc
jb
push
lods
insl
xchg
aam
pushf
aad
das
in
mov
cmpsb
adc
daa
adc
push
add
ret
push
cmp
mov
scas
jo
hlt
mov
mov
jecxz
rorl
xlat
lock
lcall
sub
mov
lahf
addr16
andb
pushf
movsl
movsb
push
cwtl
negb
in
out
sbb
dec
loopne
xchg
and
mov
dec
js
xor
shl
inc
xor
pop
loopne
adc
aad
das
mov
inc
arpl
cmp
in
fnstcw
push
mov
mov
pop
mov
call
pop
out
push
and
inc
push
jns
push
sub
aas
lea
out
and
pop
mov
mov
sub
mov
ljmp
cmp
or
jns
fwait
xor
cmpsb
jns
push
call
sbb
or
cmp
int3
pop
and
cs
cmp
and
pusha
rol
sbbl
xchg
sub
testl
mov
jb
lret
gs
outsl
ficoms
cmp
movsb
fsubrs
or
xchg
inc
loop
and
mov
je
pop
in
cmp
cs
loopne
jb
sarb
xorl
and
mov
sub
xlat
dec
or
nop
jb
icebp
pusha
mov
or
add
xchg
jmp
insl
mov
xchg
adc
pop
sbb
cmp
cltd
add
cmp
pop
xchg
cltd
lods
nop
add
add
inc
in
sbb
out
and
add
jecxz
pop
out
mov
das
sbbl
stos
cmc
fs
push
sub
push
mov
xchg
adcb
iret
incl
stos
pop
push
sbb
in
pop
addb
dec
cmc
lods
cwtl
scas
and
aaa
call
xlat
cs
push
sub
movsb
sbb
cmp
cmp
in
xchg
inc
lock
lods
in
sbb
arpl
popa
in
sub
cmpsl
and
repz
ret
aas
fdivrl
add
mov
jo
sbb
jno
or
inc
clc
xchg
jle
andl
cmp
jmp
mov
sub
enter
sahf
jnp
jbe
adc
test
pop
movsl
popf
cmp
cmp
push
pop
aam
sbb
ret
adcb
fwait
dec
xchg
dec
jge
scas
mov
cltd
mov
aas
mov
inc
outsb
xor
mov
xchg
loop
fwait
jns
scas
call
sbb
inc
xor
xorl
imul
push
and
mov
ss
inc
lds
cs
xchg
mov
bsf
xcrypt-cbc
cmpsl
push
insb
xor
test
mov
mov
scas
push
mov
inc
pop
cltd
jo
adc
mov
xor
mov
inc
add
and
mov
and
jle
sbb
nop
fnstenv
loopw
mov
aas
xchg
call
xchg
aad
sub
add
push
std
imull
push
aaa
push
jmp
jns
jmp
outsl
dec
mov
sbb
loopne
xchg
mov
lret
cli
pushf
and
inc
mov
or
push
enter
xchg
sub
loop
lock
sbb
sbb
mov
mov
movsb
test
sbb
or
jge
lcall
lret
lret
cld
mov
cmp
add
stos
andl
cmc
lock
pop
mov
pop
ds
stos
mov
addr16
fisttpll
cmpsb
cmc
repz
cpuid
mov
inc
and
shl
pop
pop
cmp
lret
test
hlt
test
das
push
and
pop
into
push
dec
push
sbb
mov
pop
loope
or
xchg
sub
sub
out
dec
cmp
dec
push
test
or
cmp
cmpsb
cmpsb
or
loop
sub
insb
notb
xchg
fimull
ljmp
sub
je
jns
fwait
sub
movsb
mov
lcall
cmpsl
imul
inc
pop
pop
ret
dec
shr
in
mov
ja
xor
pop
in
pop
add
lods
mov
jge
cmp
mov
push
hlt
dec
push
push
jo
mov
cmp
jbe
in
lods
push
cmp
insl
cs
mov
dec
inc
add
or
ret
jb
push
xchg
cltd
les
mov
push
push
imul
inc
xor
jnp
xchg
xchg
fcomps
sub
jae
ficoml
inc
std
lahf
ret
loopne
sbb
or
mov
out
push
cmpsb
rorl
jbe
dec
out
and
jl
xlat
jmp
stc
mov
add
cmp
xchg
outsb
add
push
mov
lret
jecxz
cmp
mov
lret
xor
and
int
fmulp
fstpl
cs
lds
into
sti
fldl
ds
inc
adc
push
add
dec
xorl
xor
add
test
shlb
sbb
jnp
mov
jp
repz
test
gs
push
std
rcl
pop
dec
jp
cmpsb
xchg
cs
pop
jno
mov
and
rcrb
ja
lods
xchg
fidivs
pop
mov
fisttpl
fwait
mov
cvtps2pd
inc
in
sbb
ret
mov
jae
imul
jle
dec
test
xchg
popa
out
js
add
imul
jp
in
pushf
mov
not
repz
fdivrl
xor
adc
clc
aaa
mov
mov
movsb
sub
test
cltd
popf
ret
mov
xor
push
cmp
ja
lea
push
ret
js
add
ljmp
mul
sbb
bound
fs
bound
mov
jge
mov
sub
dec
and
adc
pop
jmp
add
cmpsl
pop
add
fiadds
outsb
xchg
outsb
adc
dec
int
jb
jno
dec
and
pop
dec
sahf
mov
push
cltd
inc
scas
inc
add
popa
or
or
jbe
ss
lret
mov
push
mov
js
sub
clc
adc
add
test
cltd
xor
xchg
pop
lret
jp
cltd
in
mov
or
sbb
mov
test
mov
ljmp
lods
stos
repz
jl
jae
jecxz
dec
dec
dec
push
cmovl
ret
add
cmpsl
iret
mov
sahf
arpl
pop
mov
loop
inc
cmpb
mov
scas
cmpsl
mov
cmp
mov
orl
cmpsb
icebp
test
mov
pusha
sub
shlb
imulb
xor
add
mov
mov
scas
xor
int
or
jbe
sub
xchg
inc
add
cmpsb
jl
test
pop
jg
push
mov
lret
adc
mov
add
push
push
clc
inc
in
mov
pushf
aaa
sarb
insl
mov
xor
ja
sub
push
pop
leave
mov
aaa
pop
push
and
xchg
xor
xchg
xchg
outsb
xchg
imul
cmp
push
call
mov
test
aas
push
dec
out
mov
sbb
fsubrl
or
adcl
cs
xor
imul
insl
dec
lahf
fadds
ret
hlt
out
mov
mov
repnz
add
negb
ret
pop
mov
jle
jo
movsl
sub
clc
lret
xlat
imul
and
pop
andl
nop
pushf
nop
mov
jbe
mov
mov
add
jp
sarl
jns
lock
movsl
lods
sub
jge
lds
adc
jnp
inc
scas
sbb
jbe
jo
xchg
or
adc
ja
xor
push
sbb
outsb
sbb
pop
jns
cwtl
dec
lret
imul
add
insb
push
std
cmp
das
and
mov
scas
mov
das
stos
fadd
insl
sub
push
xor
call
nop
mov
aaa
pop
shrl
adc
inc
fsubrs
fisubrl
daa
das
aad
scas
pop
and
adc
mov
jnp
and
imul
jb
dec
mov
add
mov
mov
clc
sub
les
mov
sbb
imul
mov
or
loope
xchg
stc
pop
popa
xchg
jo
push
je
cmp
rorl
addl
xchg
cmp
cmp
inc
lock
add
roll
out
mov
and
dec
mov
mov
out
ja
jno
cltd
loopne
sbb
or
add
and
mov
xor
inc
shlb
and
stc
dec
sti
int
push
dec
sub
and
jmp
lock
gs
call
out
jecxz
fcomi
pop
mov
cmp
lock
out
mov
in
add
test
arpl
inc
pop
or
test
sahf
cmp
scas
pop
out
jno
subb
cmpsl
lock
pop
clc
sbb
mov
push
cs
mov
scas
fs
sub
int3
lods
in
sbb
push
push
inc
icebp
fwait
sbb
das
ret
adc
xchg
inc
in
mov
cmp
mov
mov
ds
mov
ss
mov
xor
imul
mov
jecxz
and
test
mov
stos
int
out
mov
daa
dec
jg
xor
adc
jl
mov
iret
addr16
cmp
jmp
les
cmp
mov
mov
and
push
jae
push
xor
fcomi
cmpl
out
leave
xor
js
xchg
popa
js
cmp
mov
into
leave
test
pop
sbb
xor
stc
mov
or
sbb
inc
loope
push
push
jnp
outsl
cmp
test
or
adc
sub
sub
test
cmpsb
repnz
and
cmp
les
mov
cwtl
lcall
addr16
xor
lcall
movl
mov
push
les
divb
xor
cmp
int
lret
sbb
outsb
xchg
in
cltd
cwtl
dec
int
and
pop
mov
mov
idivl
sahf
testl
mov
or
bound
pop
sbb
imulb
rclb
data16
adc
lods
mov
pop
sbb
test
mov
mov
in
cmp
xor
push
enter
mov
or
inc
cmp
bound
out
mov
dec
xchg
jg
leave
iret
adc
sbb
les
daa
jg
sub
xlat
iret
add
sub
je
push
add
loope
and
paddusb
or
andl
in
fimull
dec
add
in
aas
jecxz
cwtl
mov
mov
xor
mov
movsb
ret
mov
in
xchg
pop
dec
aas
pop
bound
leave
and
mov
mov
lock
sbb
adc
jo
imul
cmp
and
flds
cmc
hlt
pop
adc
cli
jb
outsl
scas
cwtl
sbb
xor
xchg
leave
pop
mov
mov
hlt
dec
xor
pop
ss
mov
pop
mov
ljmp
dec
dec
mov
shll
pop
add
loopne
popf
and
cld
iret
push
lret
pusha
jo
adc
daa
testl
std
cmp
rcll
xor
xchg
adc
ret
xchg
rclb
ss
xchg
and
mov
fadds
mov
mov
and
cmovae
xchg
movsl
stos
jl
in
int3
jno
test
lret
orb
jne
push
mov
xor
sti
icebp
pop
insb
jae
xlat
fnstsw
jb
subb
in
or
inc
repz
jmp
add
loopne
xor
xchg
test
cmp
pop
aaa
aam
jg
mov
in
push
cld
mov
fs
jecxz
scas
xor
mov
pop
mov
adc
cwtl
sahf
imul
mov
push
pop
pop
jp
dec
sahf
fwait
or
and
imul
bnd
iret
xchg
std
arpl
xchg
push
jecxz
clc
xlat
sarb
cmp
int
push
cmp
incb
and
andb
fs
sub
aad
sbb
imul
enter
inc
nop
cltd
lds
adc
hlt
iret
cmpsb
sub
push
jns
push
rcr
imul
stos
dec
dec
jp
inc
mov
adc
jno
cmpsl
xchg
inc
dec
leave
adc
lods
lcall
cmc
push
fcomip
out
and
push
fs
mov
mov
xor
xchg
dec
cmp
xor
lcall
outsb
repnz
sbbl
in
jnp
in
int
xor
and
cwtl
mov
in
aad
and
sbb
sarl
cmp
jecxz
pop
and
leave
mov
jne
repz
fimull
insb
fimull
sti
imul
stos
pextrw
jnp
mov
mov
lock
xorb
sti
repnz
xchg
ja
mov
arpl
stos
push
xchg
inc
jecxz
jecxz
sub
mov
adc
adc
jmp
loop
adc
cmp
push
lret
ss
push
mov
js
adcb
sub
pop
push
xchg
aam
push
cmc
out
les
mov
jle
lock
cmc
mov
sbb
mov
imul
mov
xchg
sub
pop
or
or
out
stos
add
cmp
es
int3
sub
lds
test
push
cmp
loope
or
ljmp
cwtl
das
inc
mov
dec
adc
xor
add
pop
pop
mov
jne
nop
pop
repnz
scas
test
movsb
and
pop
jns
push
out
sti
jge
push
out
xchg
imul
add
add
aas
mov
repnz
out
mov
xchg
sbb
mov
cmc
lds
dec
cmp
pop
data16
loopne
insl
dec
xchg
mov
jp
sbb
mov
je
in
test
sub
inc
dec
mov
jp
pop
sbb
or
inc
movq
jnp
pop
mov
dec
cs
xlat
ds
outsl
xchg
and
mov
push
add
adc
add
cli
mov
imul
out
mov
fwait
mov
push
loopne
cmp
mov
pop
xchg
or
out
sub
fwait
aaa
xor
pop
data16
xor
loope
in
dec
pop
sbb
mov
imul
push
xor
lcall
aad
pop
enter
xchg
jb
dec
dec
pushf
into
fsubr
in
dec
mov
imul
mov
push
lahf
push
dec
sahf
movsb
mov
pop
sbb
into
fwait
mov
add
loopne
int3
test
leave
enter
out
push
ljmp
mov
shll
int
aam
out
mov
stos
inc
in
pop
push
sub
adc
dec
and
dec
imul
xor
lods
mov
cmp
mov
popa
mov
push
cmpsb
cli
scas
xor
pop
cmp
lcall
scas
xchg
sbb
out
sub
cmc
xor
cmp
adc
dec
fisttps
rclb
xchg
ret
mov
and
jnp
nop
xor
sarb
sbb
loope
xlat
adc
fldenv
or
or
das
pop
mov
stc
insb
enter
and
daa
inc
pop
test
jle
lock
dec
sbb
mov
dec
fmull
mov
inc
lds
rcrl
mov
mov
and
and
jbe
sbb
ja
mov
sti
adc
xor
hlt
xor
pop
dec
mov
pusha
mov
add
rcrl
cmp
jmp
out
cwtl
enter
push
das
push
shl
vminsd
xchg
pop
pop
xor
mov
xchg
push
push
ljmp
pop
inc
pop
adc
xlat
and
les
pop
adc
pusha
xchg
fcmovbe
mov
pop
lahf
cmp
test
dec
inc
js
and
sbb
daa
xor
shl
daa
pop
jecxz
xor
mov
pop
aam
sbb
cmpsl
ret
mov
pop
push
js
xchg
lds
sbb
out
pop
inc
xchg
fwait
andb
fnstsw
jb
data16
mov
sbb
scas
push
mov
lgs
cmp
pop
sub
rolb
int3
mov
popf
hlt
nop
ljmp
jbe
addr16
dec
push
push
test
in
in
movsl
sub
push
adc
rolb
aad
cmc
xor
fldt
pop
rcl
mov
pop
push
loop
dec
pop
mov
cmc
addl
add
cmpsb
jnp
mov
pop
adc
sbb
jmp
xor
add
ds
push
jbe
lds
xor
add
in
mov
jle
into
pop
cltd
lahf
jb
push
cli
mov
and
sbb
fwait
dec
push
push
imulb
hlt
push
jecxz
sub
mov
jmp
sbb
cmp
inc
fs
mov
ret
nop
cmp
adc
pop
sbb
sub
pop
bound
mov
inc
das
inc
insb
sahf
in
cmp
jmp
std
xor
jle
adcb
lock
xor
xchg
jmp
xchg
addr16
pop
pop
jmp
mov
mov
lods
mov
cmp
push
xchg
dec
jnp
mov
mov
leave
das
push
or
adcb
stos
inc
je
push
scas
inc
mov
in
pop
push
jl
out
sbb
add
test
or
lcall
push
push
jecxz
lds
mov
or
xor
add
cltd
xlat
push
fstl
ret
in
xchg
sahf
xchg
int
stos
int3
dec
inc
rcr
outsb
data16
jnp
lret
adc
xor
add
cmp
xchg
sbb
imul
pop
xor
inc
jns
int
cmp
push
fdivl
push
imul
ror
lahf
add
and
mov
jmp
xor
test
mov
mov
dec
lcall
lods
ds
mov
inc
mov
or
xor
in
fadds
lret
repnz
shll
sub
sbb
lds
ds
mov
xlat
mov
sahf
lcall
das
mov
cli
push
adc
fistpl
or
pop
cmp
and
push
mov
xor
sbb
sti
sub
jbe
push
add
mov
mov
xchg
lcall
gs
ljmp
bound
jl
loopne
aaa
outsb
add
fimuls
pop
fcomps
mov
mov
insl
inc
add
sub
pop
repnz
mov
sub
dec
cmc
jmp
enter
sbb
ljmp
nop
or
lods
mov
pop
cli
sbb
in
cmc
insl
jns
jo
inc
and
fiaddl
fistpll
sub
lea
push
out
sahf
in
and
lret
adc
rolb
dec
outsb
adc
jb
push
mov
arpl
sub
mov
shrb
adc
call
push
pop
ret
hlt
mov
addr16
enter
jecxz
test
sbb
roll
xchg
dec
jne
int
call
shll
xlat
dec
pop
cld
mov
mov
mov
jno
movsl
pop
out
leave
cmp
xchg
in
scas
bound
jae
push
add
into
jl
out
inc
cmp
shll
xor
xchg
mov
dec
das
cwtl
xor
pavgw
into
ljmp
insl
push
xor
push
sbb
jg
inc
pop
jle
and
lret
cs
pop
push
xor
add
out
div
mov
imul
jge
sarl
loop
es
xor
jo
add
psubw
test
into
add
push
dec
fwait
pusha
repz
ja
rcr
ret
sahf
cmp
adc
icebp
or
addr16
fwait
out
inc
xchg
adc
sbb
aad
adc
or
sbb
jg
cmp
pop
ret
and
adc
push
cmp
pop
repnz
call
cmp
push
xlat
pop
cmpsl
outsl
pop
ja
sahf
pop
xchg
push
je
stos
pop
fucom
in
mov
xor
in
adc
icebp
fildll
sub
repz
bound
jecxz
push
xchg
jmp
dec
cmp
and
push
adc
pop
jae
add
insl
test
cmpsl
mov
mov
jl
nop
adc
cmpsl
ds
push
out
cmc
mov
sahf
adc
idiv
mov
sbb
scas
push
push
gs
mull
int
jae
imul
pop
in
orl
cmpsl
cmp
cli
lahf
inc
and
out
and
shll
mov
shlb
popf
lods
inc
imul
mov
out
mov
jecxz
movsl
xchg
cwtl
pop
inc
sbb
aad
leave
nop
adc
sbb
or
iret
sub
dec
pop
pop
int
stos
sub
mov
vmovaps
pop
jb
lahf
leavew
jl
hlt
dec
in
fdivrl
mov
push
adc
fcompl
aas
stos
push
pop
jle
enter
js
mov
mov
cmpsl
bound
cmpsb
sbb
ret
mov
and
add
mov
or
pop
hlt
cs
fs
fistl
fs
mov
push
sbb
dec
jbe
xchg
pop
inc
incb
xor
inc
in
sbbb
aaa
fisttpl
hlt
mov
je
andb
pop
add
cli
and
jp
repnz
lds
push
mov
fwait
loopne
cmp
push
xor
mov
scas
subb
push
mov
fsubrs
sbb
push
or
push
mov
or
mov
push
ja
jecxz
fidivl
xchg
xchg
pop
add
out
icebp
push
mov
jmp
aam
or
sub
pop
adc
mov
stos
adc
xchg
pushf
mov
rcrb
mov
adc
insl
aaa
sti
mov
jno
sbb
aad
ss
jmp
leave
xchg
mov
es
and
jne
rcrl
sub
jns
dec
ljmp
or
push
jl
jge
push
test
add
push
testl
lcall
push
lods
dec
push
cmpl
in
dec
pop
rcl
cs
dec
lods
enter
cmpsb
rorb
and
fcomp
leave
add
sbb
mov
and
stc
aam
jecxz
jmp
cld
mov
jmp
inc
out
mov
mov
inc
add
pop
mov
cwtl
mov
fcomi
inc
cmp
test
sub
and
jg,pt
jge
jle
xchg
mov
mov
or
lret
adc
outsb
mov
sbb
fsubrp
movsl
jno
pop
arpl
mov
jno
add
push
outsl
adc
test
xchg
out
jecxz
adc
loopne
mov
loop
fildll
incb
adc
mov
aam
cmp
pop
adc
cltd
pop
push
xchg
inc
lret
push
jns
inc
pop
popa
adc
and
jb
or
cmpsl
add
outsb
scas
sbb
mov
rcl
jmp
fldl
add
mov
rolb
dec
push
std
mov
cmp
sbb
push
sub
and
lahf
sub
in
add
mov
inc
cmpsb
icebp
mov
mov
fidivrl
xor
in
or
push
push
pop
adc
stc
cmc
xchg
stc
je
jl
jge
push
sbb
jno
dec
popf
mov
dec
imul
lret
jne
fcmove
das
pop
ja
nop
loopne
sbb
jns
mov
je
outsb
mov
jb
call
test
dec
xchg
mov
xchg
outsl
or
lds
cmp
mov
rcr
sub
gs
xchg
lods
xchg
mov
imul
jo
out
lods
sub
ret
push
mov
scas
imul
lea
add
mov
fstl
and
fucomi
mov
sbb
dec
jecxz
cltd
jle
jb
ret
fimull
jae
enter
lcall
icebp
xor
lds
add
dec
dec
andl
stos
jo
ret
add
hlt
cs
lea
incb
mov
xchg
shll
imul
sbb
sub
cltd
arpl
call
in
fdivs
hlt
add
lea
cmp
fnstenv
mov
ljmp
pop
scas
cmc
dec
pop
aaa
dec
inc
lods
cmp
inc
push
cmpsl
cli
adcl
call
cmpsb
ret
mov
fimull
xchg
push
sahf
addr16
xor
mov
cmc
inc
movsb
mov
add
push
mov
out
mov
xchg
ficoms
lock
mov
shrl
stos
lods
loope
stos
xor
jg
pop
jp
mov
mov
push
std
mov
jl
mov
pop
test
push
push
cmc
mov
or
push
push
add
push
lea
loopne
aad
mov
jmp
cmp
sbb
push
push
out
inc
idivl
sbb
test
das
sub
xchg
ds
mov
xchg
push
mov
mov
cmp
push
mov
dec
jle
mov
inc
mov
add
mov
sar
int3
mov
popf
xor
out
aam
mov
out
lock
shll
jmp
push
inc
scas
and
test
stc
out
sub
add
fnstenv
xchg
sub
imul
rcr
inc
shll
js
insl
test
daa
stc
cmp
ret
and
lods
pop
sbb
shr
mov
ret
add
lcall
adc
jp
popf
add
mov
jno
adc
mov
aas
lcall
out
ja
adc
inc
xor
xchg
cmc
mov
leave
gs
ljmp
jo
mov
aam
fwait
es
mov
xlat
mov
pop
xor
fwait
mov
xchg
iret
cmp
ds
sbb
ret
mov
scas
and
es
xlat
popa
fstps
cmp
sbb
push
lods
add
push
and
cmpsb
aaa
xchg
adc
push
xor
mov
add
jl
push
mov
dec
iret
adcb
xchg
xor
push
fcompl
dec
sarl
test
jbe
cmpsl
inc
and
rcll
add
mov
frstor
fwait
test
iret
and
dec
mov
popl
xchg
and
mov
xor
pop
ds
xlat
outsl
outsb
mov
lea
mov
scas
imul
ret
jmp
or
xchg
jne
xor
aas
outsl
js
push
arpl
ret
add
popa
jmp
jns
xchg
shrb
sub
arpl
mov
sub
mov
stos
dec
push
pop
nop
or
adcl
iret
mov
popf
movsl
push
in
mov
push
jge
cmp
cmpsl
lret
adc
sbb
scas
loop
enter
dec
das
mov
es
mov
lret
into
inc
add
add
push
adc
jno
inc
xchg
int3
loopne
fstl
cmpsb
xchg
dec
or
outsb
inc
push
push
call
mov
mov
or
repz
pop
jp
ret
imul
adc
outsl
gs
insl
std
and
sub
add
jl
fsubrs
scas
inc
and
ret
cld
repz
mov
and
xor
jl
clc
dec
dec
enter
mov
dec
ljmp
sub
outsb
mov
push
jmp
cmpsl
mov
and
add
lcall
push
jl
push
test
aas
sti
or
adc
test
sub
std
inc
outsb
int3
sbb
jae
sbb
pop
test
in
or
out
adc
jmp
hlt
aad
push
pop
nop
popf
inc
aad
xor
cmp
xchg
mov
int
lret
add
sub
cmp
iret
icebp
mov
pop
adc
dec
pop
push
repnz
mov
mov
pop
cmpl
jl
aad
ds
jbe
cltd
in
lcall
sub
insl
jg
cmc
push
mov
pop
and
pushf
ds
pop
addr16
pop
lcall
aaa
dec
push
sbb
cmp
lcall
leave
jecxz
mov
jne
add
aad
pop
addr16
mov
nop
scas
or
lods
lods
enter
inc
lahf
in
jae
into
mov
stos
dec
pop
loop
int
mov
sub
bound
pop
mov
stc
mov
jns
add
jp
mov
jl
stc
mov
sbb
clc
xchg
push
data16
dec
outsl
add
loop
loop
jo
sub
arpl
ret
xor
sbb
aad
int
sub
xor
fcmovnbe
int3
lahf
lods
push
adc
inc
mov
in
mov
mov
mov
jl
xor
rorl
add
xor
roll
pop
out
add
imul
mov
and
mov
fs
arpl
xor
cmp
enter
dec
loope
dec
pushf
or
scas
mov
xor
push
mov
lahf
sbb
cld
repnz
add
or
jno
add
adc
rsqrtps
and
gs
lret
mov
lcall
test
popf
jbe
xchg
fldcw
push
jnp
jge
insl
je
sub
cmpsl
rep
bound
mov
push
push
sahf
xor
xchg
adc
xlat
inc
xchg
adc
fwait
enter
sti
aas
mov
mov
lds
pop
call
cmpsl
jge
inc
enter
cmp
pusha
and
lret
mov
pop
xchg
xor
mov
inc
inc
jg
push
rcrl
fs
ret
sbbl
pop
ss
dec
in
push
lock
mov
xchg
loope
in
pop
lds
pop
stos
pop
inc
push
mov
sbb
or
jmp
and
movsb
jg
out
jge
int
pop
sub
cmpsl
push
mov
jb
movsb
dec
inc
fs
cmp
dec
add
xchg
pop
hlt
add
out
das
pushf
xchg
cmp
leave
movsb
repnz
negb
test
dec
mov
sbb
jp
iret
testl
mov
fsubl
cwtl
invd
xchg
sti
in
jae,pt
push
lds
xor
pop
pusha
in
cwtl
mov
push
lods
cld
mov
int
jl
rcrl
mov
pop
in
in
shll
xor
push
lea
mov
mov
arpl
ljmp
or
lea
outsb
insl
jecxz
testb
iret
or
mov
stos
xor
cli
orl
fistps
sub
inc
insl
sbb
dec
insl
sbb
cmp
jns
arpl
outsb
inc
and
push
fadd
icebp
add
lods
mov
shrl
sub
mov
mov
push
popa
pop
pop
in
sbb
andb
and
data16
sar
imul
rcrl
scas
leave
xchg
mov
sbb
and
dec
jns
icebp
mov
cmpb
dec
movsb
mov
movsb
popa
stos
xor
mov
xchg
jb
into
jae
adc
inc
fdivrs
jl
add
fldl
aad
mov
outsl
xchg
icebp
call
jo
in
adc
nop
dec
or
inc
push
jne
arpl
inc
sbb
inc
mov
mov
hlt
pop
xchg
xchg
jg
loope
add
jae
add
dec
aad
pop
and
push
loop
mov
add
ret
mov
mov
shlb
data16
add
stc
sahf
enter
mov
push
clc
xchg
or
pop
fldt
pop
imul
jae
push
sbb
jae
mov
jmp
mov
lea
and
jmp
dec
or
pop
pop
negl
sub
and
xchg
jmp
xchg
adc
cmp
mov
in
lret
int
mov
sub
mov
call
scas
js
testb
sbb
sti
out
stos
xor
pop
jo
inc
or
movsl
int
sbb
mov
xlat
in
adc
sbb
mov
int
pop
js
repnz
inc
xlat
js
nop
stos
fstp
movsl
adc
xor
out
es
bnd
dec
xchg
inc
imul
xor
lods
and
adc
dec
lock
mov
orl
rcl
ja
in
movsl
inc
call
dec
mov
push
lret
xchg
sbb
je
xchg
iret
test
jle
popf
adc
sub
sub
outsl
mov
jae
mov
imull
jo
push
pusha
add
loopne
mov
out
push
jae
ficompl
popf
pusha
in
movsb
xchg
mov
xor
jl
in
cmpsb
pop
adc
movsb
inc
mov
ljmp
push
jnp
ja
pop
lret
mov
clc
mov
mul
popf
stos
je
sub
in
iret
dec
cli
cmpsl
int3
insl
popa
jg
jnp
pop
daa
mov
push
jp
dec
sbb
jecxz
fdivs
pop
sbb
inc
pop
cwtl
out
push
pop
xchg
popa
and
adc
pop
shlb
pusha
sbb
sbb
and
sbb
popf
rcl
sti
adc
or
lahf
mov
and
and
lock
out
xchg
push
fistpll
hlt
xchg
insl
sub
or
xchg
xor
fildl
cmp
jle
pop
sub
and
push
outsb
in
lcall
adcb
jo
dec
jle
lret
xchg
jbe
push
mul
or
aad
cmovg
mov
xor
lahf
popf
xor
hlt
xchg
push
mov
xor
xchg
in
jno
negl
mov
xchg
inc
mov
fildl
push
mov
lods
push
add
ret
push
mov
cmc
jns
dec
mov
mov
call
push
shrb
push
jbe
xchg
test
aam
inc
jne
int
jo
adc
shr
push
mov
xchg
push
sub
dec
mov
dec
jl
pop
push
mov
clc
cmp
add
sub
div
sub
in
repnz
ud1
popf
sub
scas
xchg
gs
cmp
pusha
xor
aam
fwait
out
rcrb
add
leave
sbb
repnz
add
xor
mov
mov
xlat
ds
enter
and
dec
pushf
int3
aaa
loopne
pop
stos
shll
mov
sub
mov
mov
xchg
popf
cli
sbb
mov
cmp
jb
jae
aad
dec
out
in
xlat
inc
int3
inc
xor
jno
test
dec
mov
pusha
pop
jnp
dec
push
test
jne
cmpsb
cltd
lret
dec
inc
sub
ficomps
push
cld
mov
sub
dec
mov
sahf
int
lcall
cmp
xchg
sbb
add
insw
sbb
aam
pop
xor
fmul
out
pop
scas
orl
sub
jmp
xchg
jns
test
xor
inc
popf
mov
scas
aaa
xor
xchg
sahf
or
test
outsb
loopne
mov
in
and
adc
mov
outsb
rorl
xchg
shrb
dec
cltd
fs
call
push
pushf
xlat
mov
sbb
mov
mov
sub
int
dec
pop
call
aad
adc
mov
cli
andb
xchg
loop
pop
jge
mov
out
cltd
mov
call
inc
xchg
addl
mov
jb
out
dec
adc
inc
pop
pop
fisttps
loopw
cmc
ficompl
push
test
jmp
jb
adc
mov
test
add
cmpsb
sbb
mov
loop
stos
adc
mov
xchg
jecxz
dec
pop
lret
jge
iret
inc
sbb
into
jge
scas
rclb
insb
mov
mov
aam
mov
ds
loope
fsubrs
xor
data16
xor
pushf
cmp
outsb
push
cmp
add
mov
out
adc
add
xchg
push
sbb
lods
ljmp
rolb
xchg
js
mov
insb
leave
enter
inc
mov
push
sbb
loop
sbb
jne
dec
mov
in
mov
pop
sub
add
jmp
inc
daa
lea
rclb
pop
cmc
or
outsl
xchg
lods
lock
sub
leave
fsts
aad
inc
and
xchg
xchg
jle
inc
cmp
std
sub
cmpsl
std
and
jg
pop
dec
lahf
loope
clc
lods
adc
push
or
test
jne
fldl
bound
dec
lcall
mov
jns
outsl
lret
mov
xor
stos
jbe
jb
out
int
mov
insl
fwait
loop
clc
and
cmp
test
fldenv
inc
ret
and
scas
jle
xchg
sub
push
and
jb
outsb
push
sbb
in
lods
or
dec
les
sbb
subb
sbb
loop
mov
aam
fwait
shr
or
pop
out
mov
add
mov
test
cltd
scas
cmpsb
ja
add
jne
jmp
cs
call
out
testb
test
inc
push
inc
rcll
in
std
add
div
daa
push
flds
lods
mov
dec
add
adc
push
sbb
jl
add
or
fistl
fsubr
imul
adc
xor
and
pop
mov
xchg
clc
mov
jge
dec
movsl
lahf
fidivl
lods
cmpsl
fwait
xchg
xor
test
pop
dec
cli
add
sbb
xchg
fdivrl
jne
pop
icebp
es
pushf
testl
push
cmp
fsts
inc
or
sbb
and
mov
adc
xlat
cmp
cmp
dec
or
lea
test
mov
mov
nop
sub
lahf
dec
pop
jmp
mov
es
mov
xchg
and
inc
inc
xchg
inc
xchg
sbb
mov
add
dec
jnp
fisubs
xchg
iret
mov
insl
sub
fiaddl
out
dec
icebp
shll
push
or
test
in
loope
pusha
adc
or
sbb
sbb
inc
push
xor
mov
or
or
cmp
icebp
lahf
sub
mov
out
dec
or
cmc
jbe
ja
and
push
loopne
std
cwtl
adc
lock
lret
fmul
ss
or
ja
cmp
scas
clc
loope
mov
enter
xchg
test
inc
sub
stos
ret
or
cwtl
dec
mov
sub
add
cld
in
cmp
dec
cmp
js
bound
arpl
dec
cmpsl
pusha
pop
push
push
jmp
imul
lcall
fisubrl
aas
inc
insb
lds
cmp
ds
inc
cmp
insl
mov
push
dec
stos
adc
ror
cmp
mov
mov
xor
sbb
repz
imul
ret
addr16
stc
push
or
ja
jo
push
movsl
outsl
mov
sbb
dec
fisttpl
rol
out
cmp
loop
lahf
cmpl
inc
adc
pmaddwd
push
push
shll
mov
mov
jle
scas
lcall
ljmp
or
xchg
mov
cmp
lcall
xchg
mov
sub
mov
mov
inc
mov
xlat
mov
loopne
lds
aad
lret
les
cmpl
mov
mov
xor
or
sbb
or
fs
fs
test
cmp
mov
lea
addr16
ljmp
rcll
jmp
aas
and
mov
or
divl
jp
scas
pop
sbbl
aam
test
pusha
xchg
pusha
imul
lea
loop
nop
xor
dec
pusha
aas
adc
test
cmpsl
jns
cmp
in
mov
lcall
add
mov
add
nop
and
fstpl
mov
gs
cld
xchg
mov
out
mov
mov
hlt
scas
add
sti
popa
cmp
jmp
lcall
js
jno
clc
std
das
jp
icebp
pop
shl
xor
cmc
xchg
cmp
adc
adc
loope
jmp
pushf
mov
ljmp
jo
add
test
jne
scas
shll
and
lock
jl
fyl2xp1
add
mov
leave
mov
mov
cmc
testb
add
dec
adc
aad
orl
ss
setno
or
dec
add
and
jl
dec
hlt
inc
jae
xchg
divl
pop
pop
xorl
rolb
repnz
xor
lds
jnp,pt
xor
jne
gs
and
or
inc
jne
lods
pop
leave
pop
push
mov
adc
test
mov
lret
inc
sbb
sbb
ret
shll
sub
push
movsb
mov
adc
push
sbb
and
cmc
icebp
aas
jne
adc
lret
sbb
push
and
mov
aad
mov
lea
jne
xor
push
lock
xchg
add
cmpsb
pop
xor
mov
loop
mov
aad
mov
push
ss
out
or
lds
fwait
dec
mov
divb
adc
jg
sub
mov
jbe
inc
xor
cwtl
imul
cmp
out
cmp
rcrl
mov
call
dec
xor
leave
and
test
fstpt
popa
and
lret
pop
out
out
xchg
mov
xchg
sub
shl
inc
ds
jmp
fadd
pop
sub
mov
xchg
inc
lods
add
mov
jae
int3
scas
xor
out
pop
lret
pop
xchg
and
outsb
lods
mov
xchg
xor
arpl
fisttpl
dec
in
jns
cmp
repz
cmpsb
repnz
pop
std
push
ret
fisttpl
stc
fistps
jp
fnstcw
fistpll
test
sbb
mov
or
sbb
and
data16
inc
sbb
mov
jg
lds
cmp
xor
ret
shrd
ljmp
shr
ja
fs
shl
rcl
cs
xchg
xchg
mov
pop
gs
sbb
dec
dec
xor
sub
push
imul
sti
shlb
cltd
fmul
mov
xor
dec
jns
xor
jmp
xchg
outsb
mov
popa
push
pusha
lock
cs
add
xlat
sub
mov
rcr
push
stos
fdivrl
jbe
inc
mov
movsl
into
pop
rcll
imul
cmp
cs
pop
pop
xor
inc
clc
pop
adc
data16
xchg
mov
outsb
ret
jp
pop
arpl
mov
in
mov
imul
popf
jmp
in
jle
sbb
and
xor
js
pop
and
outsb
and
sub
adc
ja
in
jno
daa
int3
jle
jmp
sub
loopne
aaa
outsl
dec
lret
shrb
or
in
aam
hlt
call
xchg
lahf
addr16
mov
mov
loopne
sbb
xchg
xor
push
inc
test
add
lret
pop
decl
jnp
sarl
sbb
js
push
nop
imul
push
cmp
mov
pop
mov
mov
bnd
push
xchg
jmp
add
std
fcoms
cwtl
in
idivl
push
and
lret
ds
xchg
stos
addr16
inc
xor
inc
jae
js
ffreep
jle
xchg
dec
les
imul
inc
in
ror
jo
ret
fiadds
sbb
xchg
stos
mov
pop
push
xchg
dec
fldt
into
out
jp
repnz
sub
out
daa
imul
push
sbb
jmp
call
sbb
aam
pop
mov
dec
aas
rorl
bound
push
xor
ret
nop
cmp
sbb
pushf
jp
jne
call
mov
sbb
mov
inc
sub
and
mov
fwait
sbb
add
lret
mov
mov
or
jnp
aas
cmpsl
out
pop
aad
mov
faddl
cmp
mov
repz
lret
and
xchg
gs
clc
cmp
xor
cmp
mov
bound
call
mov
sbb
arpl
cli
inc
punpckldq
and
gs
daa
jl
xchg
push
push
sub
gs
aaa
adc
jle
and
adc
jnp
mov
mov
ds
pop
cmpsl
sub
iret
push
xchg
ret
int3
mov
push
ret
imul
push
rol
push
dec
push
es
leave
sub
out
jp
fildl
int
pop
addr16
cmp
inc
shl
out
push
int
or
neg
call
mov
in
or
and
pop
adc
ret
insl
inc
jae
outsl
insl
push
rcll
xlat
cmp
fdivl
cmpsl
pop
addr16
movsb
lea
mov
data16
add
inc
ds
cld
popw
test
ljmp
dec
mov
mov
push
mov
or
subl
inc
pop
or
ret
xchg
fistps
shlb
orl
sbb
cmp
rol
add
or
push
inc
out
xor
movsb
lods
jecxz
or
fdivs
and
repnz
jmp
sbb
jnp
andb
fisubl
negb
sub
ret
add
and
rorb
mov
movsb
out
out
xchg
sub
jge
rcrl
in
adc
fidivrs
stos
or
jl
rcll
sbb
fwait
shrl
data16
mov
shrl
mov
xor
movsl
js
adc
dec
popf
loope
mov
mov
aaa
or
jb
dec
fstpl
dec
test
ljmp
jnp
pop
repz
push
int
or
insl
call
data16
js
loop
lahf
fstps
mov
movsb
add
sbb
xor
in
lods
sbb
popa
data16
cli
jbe
xor
push
clc
add
and
js
fwait
add
dec
and
lahf
aam
sub
cs
lret
shrl
push
pop
fs
je
sub
adc
dec
lds
xor
in
and
mov
out
aad
data16
les
cmp
inc
mov
data16
dec
xlat
and
popf
nop
rorb
rclb
inc
pop
cmp
imul
mov
push
movsb
dec
sbb
xchg
out
lret
mov
movsl
xor
adc
xchg
imul
fwait
pop
and
dec
sbb
int
and
xlat
jae
pusha
dec
stc
out
add
clc
adc
mov
or
and
pop
or
push
dec
adc
sub
mov
xchg
push
lds
shrl
push
gs
sarl
mov
enter
out
js
dec
mov
lea
imul
push
insb
in
push
sub
ja
xchg
push
mov
jne
imul
add
mov
dec
jne
pushf
loopne
push
into
sub
outsl
test
imull
cs
mov
adc
pop
mov
test
fwait
cmpsb
pusha
cmc
repnz
mov
movsb
movb
dec
or
xchg
xor
ds
dec
pop
clc
mov
loope
ljmp
cmp
cmc
mov
jno
xchg
fs
or
lcall
or
jmp
mov
lods
push
ss
aaa
xchg
dec
jmp
rcrb
subl
push
cmpsb
test
pop
jnp
rclb
xor
jne
imulb
pop
out
sub
dec
mov
andb
mov
jle
inc
test
cwtl
lds
rol
cmpb
pop
clc
in
scas
les
add
fwait
or
or
inc
in
aas
inc
mov
inc
sub
and
scas
test
mov
adc
xchg
xchg
mov
jle
ffreep
fidivs
inc
jecxz
loop
loop
mov
cli
push
ds
leave
and
xor
cmc
in
mov
mov
sbbb
repnz
dec
xor
add
push
rcrl
add
inc
and
pop
adc
inc
cmpsl
sbb
mov
sti
adc
mov
inc
mov
push
xchg
xor
fwait
inc
frstor
xor
sbb
xchg
inc
xor
push
xchg
neg
pop
mov
cmp
pop
sbb
leave
push
fwait
ret
push
sub
adc
enter
xchg
jae
test
rcl
mov
jecxz
push
adc
aas
aad
pop
push
inc
mov
ljmp
in
push
pop
jge
pushf
lret
or
push
xor
mov
movsl
ja
xchg
fwait
loop,pt
pop
iret
xchg
out
lret
mov
hlt
insl
add
add
cli
cmpsb
stos
adc
scas
loop
jmp
sub
insl
push
inc
popf
xchg
mov
pop
adc
in
sbb
cli
aaa
out
cmpsl
pop
rcrl
imul
cmc
mov
sub
lods
fidivs
aam
inc
mov
mov
out
push
mov
mov
imul
test
xchg
mov
out
sbbl
push
cmp
movsl
fldcw
clc
sub
add
xchg
mov
dec
icebp
pushf
rcr
mov
xor
pusha
cmp
scas
vpmacssww
jecxz
jno
mov
xchg
popfw
bound
push
and
jb
shlb
decl
sbb
je
xchg
out
out
mov
ss
popa
sbb
push
rcll
adcb
push
mov
xchg
lcall
rclb
bound
lock
fadds
sub
xor
and
das
xchg
pop
jne
mov
daa
cli
insb
mov
sub
sub
pop
mov
sti
sub
adc
nop
sti
sbb
sbb
enter
add
mov
or
in
dec
pusha
mov
rcl
push
sarb
mov
xlat
les
dec
cmp
aam
adc
xor
xchg
and
in
push
lds
mov
shlb
pop
or
add
aas
repnz
mov
xchg
ss
shufps
jo
loopne
int3
pop
rcl
xchg
inc
push
out
lods
push
mov
sbb
lret
ds
pop
pop
adc
or
push
xchg
xor
xor
out
add
filds
cmp
xchg
fs
push
xor
jmp
mov
push
xchg
stos
fsubs
into
pushf
fdivrl
test
xchg
or
add
mov
push
cmpb
and
and
aas
xchg
test
je
pop
movb
repnz
mov
imulb
lret
adc
push
ja
loopne
xor
mov
dec
adc
xor
sub
adc
mov
fstl
pusha
imul
add
leave
cmc
cmc
ficompl
clc
add
inc
mov
addb
ss
imul
sbb
pop
sti
out
mov
cmpb
mov
fbld
out
mov
inc
testl
xchg
movsl
adc
in
xor
fisttpl
jns
bswap
mov
mov
sti
insb
or
xor
inc
insb
in
lods
and
cltd
or
sub
mov
or
ljmp
dec
scas
push
jg
jns
scas
mov
jb
mov
outsl
sahf
dec
stos
nop
cmp
push
ss
ja
in
scas
outsb
scas
jl
test
adc
dec
mov
aam
fisubl
aad
xchg
lcall
es
pop
dec
push
pop
push
cwtl
xchg
jg
inc
sbb
hlt
xchg
insl
jne
mov
andl
fucomp
dec
in
pop
mov
add
cmp
inc
sbb
xchg
jbe
push
inc
cmc
jecxz
mov
pop
push
cmp
fldl
xchg
xor
dec
aad
ja
loope
jno
xor
dec
xor
xlat
in
add
pop
ss
nop
cld
outsb
and
fistpll
jge
mov
lods
mov
insl
xchg
shlb
add
loopne
jno
pop
out
xor
sbb
lods
gs
add
icebp
cmpsl
imul
sahf
repz
adc
fs
jecxz
mov
xor
sbb
jg
nop
push
lock
cmc
es
mov
sbb
retw
fcmovb
nop
pop
push
xor
inc
sbb
dec
push
stos
repnz
fistl
cmpsl
push
and
pop
cmp
imulb
sub
rcll
pop
xor
push
sahf
push
nop
lods
sbb
lret
mov
mov
cltd
mulb
mov
out
in
jp
fbld
negl
outsl
push
shr
or
pop
and
imul
sub
stc
inc
in
insb
icebp
cmp
mov
repnz
adc
fcmovbe
loop
push
shl
dec
fmuls
cmp
cmp
mov
insl
xchg
aad
push
xor
ret
mov
cltd
mov
pop
data16
insl
movb
loope
jl
enter
nop
outsl
mov
out
inc
sub
rolb
xor
cmpsl
xor
ja
jno
stos
fwait
push
jns
inc
mov
imul
mov
out
sub
push
mov
mov
sti
mov
leave
xlat
dec
sbb
iret
pop
mov
dec
fbstp
data16
dec
xchg
add
mov
daa
sbb
sbb
int3
arpl
adc
jg
shll
addl
loopne
in
push
add
ds
int
lock
and
das
nop
and
mov
in
push
movsl
xchg
pop
mov
dec
scas
imul
aam
jne
inc
mov
aam
shlb
dec
jmp
inc
insb
into
push
pop
into
mov
lret
adc
xchg
push
jb
jmp
and
cmp
fisubrl
movsl
aam
jo
fwait
mov
cwtl
sub
xchg
sbbb
or
aam
sti
xchg
xor
and
sarb
or
daa
inc
cwtl
mov
insl
mov
add
xor
mov
aaa
aad
std
adc
mov
dec
loop
sbb
aas
push
cmp
xor
jle
pop
shll
mov
pushf
mov
inc
adc
dec
mov
shl
inc
pop
jne
adc
xor
test
cmpsl
cwtl
rcrb
mov
pusha
notl
xchg
push
pusha
daa
pop
sub
push
cmpsb
mov
add
push
hlt
popf
mov
mov
push
mov
mov
add
sbb
push
push
pop
add
xchg
xor
hlt
incb
sbb
sbb
jecxz
addb
fnsave
sbb
repnz
outsb
scas
ffreep
mov
cmp
shlb
jae
in
sub
pop
clc
sarb
cltd
inc
jecxz
jl
lock
push
loope
gs
nop
xor
pop
pop
mov
or
cmp
shrb
jbe
into
nopl
aas
dec
fld
lds
jbe
out
mov
push
movsb
xchg
xchg
or
ja
fimuls
pop
pop
enter
pop
lock
in
pusha
xchg
lcall
jmp
push
jbe
sbb
int
dec
jecxz
or
adc
xor
js
push
lock
add
cmpsb
lahf
xlat
push
jl
outsb
lock
jae
out
cmp
xor
and
push
fistl
ja
js
andl
cmc
shrb
jmp
push
jo
mov
pop
cmp
cmp
test
pop
jge
pop
sbb
mov
jb
insl
sbb
sbb
les
in
xchg
mov
push
sbb
inc
aaa
fs
xchg
mov
xlat
push
pop
cwtl
jl
pop
dec
out
in
mov
jno
push
dec
push
mov
mov
push
dec
dec
pop
dec
mov
scas
enter
clc
movsb
popa
dec
movsl
cmp
xchg
pop
ss
lahf
fcomi
xchg
jbe
xchg
test
lds
mov
adc
xlat
inc
pop
cmc
lret
xchg
cmp
add
xor
mov
mov
outsb
push
jmp
repz
sub
bnd
lret
inc
mov
cmp
push
jo
test
adc
mov
push
dec
or
mov
mov
aaa
mov
push
push
mov
push
add
and
inc
push
xchg
xlat
push
push
adc
shrb
rclb
sub
push
mov
pop
inc
xchg
roll
jl
xchg
mov
fucomp
in
in
fsub
and
rolb
sub
imul
loope
sbb
pop
add
xchg
out
and
adc
lahf
fs
test
sbb
inc
push
jne
or
push
jns
addr16
xor
mov
mov
or
mov
outsb
mov
lea
std
push
call
mov
xchg
sbb
js
fdivrl
mov
dec
es
and
aaa
jp
jo
or
fsubl
movsl
scas
xor
nop
ret
add
sbb
lea
icebp
movups
and
stos
mov
pop
mov
push
mov
pop
mov
xor
arpl
mov
sbb
in
sbb
int3
fstpl
jp
cwtl
or
sti
push
push
or
imul
ret
ds
std
lods
sub
pop
mov
dec
add
lods
or
hlt
std
pop
add
mov
test
dec
push
addb
mov
and
adc
jnp
xchg
xchg
subb
rorl
or
mov
mov
mull
lret
xor
xchg
adc
popf
dec
mov
out
inc
sbb
mov
sti
sbb
xor
mov
jmp
jno
dec
push
sbb
loopne
cmpsb
in
mulb
aaa
icebp
pusha
mov
mov
sub
std
aad
imul
mov
into
std
add
cmp
in
sbb
ds
das
dec
or
or
jg
popf
and
ret
addr16
imulb
outsl
addb
scas
mov
mov
ds
js
lret
in
in
push
pop
fnclex
popf
sahf
ret
push
jnp
les
data16
mov
scas
mov
sbb
ds
sbbb
add
inc
fistpll
push
ffree
mov
dec
movsb
arpl
mov
push
mov
ljmp
lret
cli
cmp
mov
bsr
inc
incb
test
test
dec
lds
adc
xchg
sahf
or
xchg
shl
inc
loop
or
adc
movsl
cmc
jo
fisubl
ret
jns
xchg
sbb
ljmp
lret
mov
aad
pop
ret
sbb
hlt
in
es
sub
dec
xorb
adc
xchg
clc
lods
xchg
pop
add
pop
dec
pop
outsb
loope
loope
ret
and
pop
aad
addr16
mov
xor
and
mov
inc
outsb
mov
pop
mov
int
js
jp
jp
adc
mov
ljmp
lahf
jp
dec
xchg
pop
or
jmp
imul
ds
xor
lods
cmp
sti
rcll
push
mov
test
ret
icebp
cmc
inc
imul
mov
jl
mov
pop
push
or
rcrl
in
xor
mov
mov
or
sbb
dec
sbb
fwait
mov
pop
xor
and
push
jnp
cmp
ss
pop
scas
je
mov
mov
and
xor
add
call
mov
rcrl
xlat
push
mov
cmpsb
gs
repz
xchg
jg
popa
mov
subl
idiv
mov
and
fwait
daa
sub
in
jo
je,pn
mov
testb
xchg
xor
cs
sub
pusha
data16
aaa
cwtl
push
mov
lret
xor
jle
in
jge
or
std
pusha
es
js
inc
repz
pop
gs
cmpsl
sbb
xlat
adc
sbb
pop
and
fidivs
mov
pop
and
sub
roll
andl
stc
int3
stos
inc
mov
pop
movsl
enter
or
push
loopne
cmp
clc
into
js
aaa
outsl
popa
ds
xor
sbb
sub
aas
arpl
dec
inc
ficompl
push
movsl
insl
mov
lock
adc
js
sbb
push
mov
mov
sti
dec
daa
xchg
arpl
sbb
mov
cmpsl
add
arpl
aas
pop
pop
cmpl
adc
sub
ja
push
mov
cmpsb
dec
cmp
xchg
xchg
test
inc
push
mov
loop
sbb
idivl
jp
loop
cmp
push
imul
popa
and
popf
int
push
adc
dec
adc
xchg
jmp
jne
add
sbb
lret
insb
shrb
stos
push
xchg
and
pop
and
test
insl
aas
outsl
or
daa
gs
jle
push
into
push
jne
ret
into
xchg
out
orb
inc
pusha
mov
mov
imul
mov
js
jge
xor
sbb
hlt
push
add
push
pinsrw
fdivr
push
movsl
lods
push
xchg
js
pop
dec
std
and
xor
cmpsl
dec
js
push
sti
out
icebp
mov
scas
and
das
jmp
clc
mov
lret
sbb
and
mov
mov
inc
fisubs
mov
cmc
sub
xor
adc
mov
push
rolb
hlt
or
rorl
mov
xor
fsubp
xlat
bound
in
sbb
imul
addl
inc
and
jne
add
rcrl
add
inc
mov
loop
lcall
lea
dec
xor
ljmp
bound
inc
jnp
ljmp
jae
gs
ds
rclb
or
into
or
sub
rorl
aad
sub
arpl
pop
cli
ficoml
fs
divb
sbb
xchg
add
jp
xor
pxor
pop
lahf
lret
ds
enter
jle
or
ds
mov
stc
mov
dec
lods
sbb
inc
sbbb
mov
jecxz
cmp
pop
jo
mov
and
into
sbb
faddl
xchg
jnp
insb
sub
push
and
mov
scas
mov
jecxz
ds
or
popa
sbb
push
mov
sbb
mov
sbb
xor
and
dec
fisttpl
jge
push
gs
sbb
insb
xor
add
mov
jmp
shlb
jg
pop
test
ja
jg
push
enter
imul
xchg
sbbl
jmp
nop
adc
xor
fisubl
lock
jp
enter
pop
test
dec
adc
fstps
js
mov
xchg
ret
sbb
inc
ljmp
jnp
mov
inc
mov
pop
push
rclb
fstpl
adc
stos
gs
and
adc
inc
pop
popa
cmp
sub
data16
and
int3
leave
adc
sub
mov
push
mov
cmc
mov
subb
mov
les
ret
movsl
mov
jge
inc
std
xchg
xlat
out
mov
sbb
inc
xchg
test
inc
sbb
mov
mov
dec
loopne,pt
lods
cmovae
cmp
outsl
mov
or
ljmp
test
call
sbb
adc
mov
xor
shlb
shll
add
push
adc
in
roll
mov
testb
aad
push
loop
adc
push
ja
je
cmp
xlat
add
add
dec
fs
lret
hlt
fbld
jmp
cmp
sub
fucomp
mov
cmp
aam
rcrl
lds
mov
adcb
out
jnp
iret
xor
and
add
jae
movq
into
sub
cmp
ds
mov
pop
pushl
lret
sub
mov
adc
stos
inc
jne
aas
xchg
aam
pop
lds
stos
aas
movsb
inc
outsl
scas
jae
shrl
in
mov
test
shlb
imul
sbb
push
xor
sahf
inc
test
dec
lds
xchg
cld
mov
jnp
rcll
or
jbe
out
int
test
andb
scas
mov
sub
std
cli
push
mov
pop
add
mov
fisttps
stc
loope
mov
gs
lahf
mov
push
inc
mov
int
rcrl
jbe
and
fsubl
add
mov
adc
iret
aas
rolb
test
lea
cs
imul
dec
nop
inc
cmp
cwtl
mov
dec
popf
sub
jo
dec
das
inc
cmpsl
ret
incb
mov
push
sarb
inc
cmp
hlt
inc
mov
addr16
jno
mov
jl
cs
ljmp
inc
mov
dec
ja
in
and
push
or
int3
mov
lock
and
cli
or
rcl
cltd
loope
xchg
lock
hlt
test
push
or
jl
iret
and
adcb
xor
push
mov
fcompl
pop
shll
aaa
push
jne
xorw
add
mov
dec
pop
jp
ds
in
aad
ret
lods
jle
adc
adc
cmpl
test
jne
cwtl
add
sub
push
or
jge
call
stos
in
cmp
dec
adc
ret
ds
jbe
insb
adc
aaa
mov
mov
sbb
xchg
sbb
sbb
pop
and
icebp
xor
dec
push
sarl
outsl
pop
or
jne
jp
jg
cmp
out
or
test
stos
xlat
xchg
popf
leave
jg
mov
pop
arpl
mov
je
and
cmpl
imul
inc
mov
add
addb
dec
fimull
or
pop
shlb
rcll
sbb
cwtl
xorl
jmp
iret
pop
or
clc
adc
clc
mov
push
fdivp
pop
arpl
scas
or
mov
fucomip
sub
jne
jge
pusha
dec
sbb
push
push
fstps
loope
andl
cltd
jb
xlat
sbb
sub
pusha
mov
ret
stos
jbe
sahf
and
push
aas
and
inc
pop
roll
mov
mov
mov
xchg
icebp
leave
adc
fsubrs
inc
aad
scas
das
and
mov
arpl
push
push
adc
xor
push
mov
sub
push
or
jmp
out
pop
and
dec
ret
jae
jnp
pop
lods
mov
or
int3
stc
das
je
inc
movsl
in
mov
shll
inc
sub
push
dec
mov
jns
das
rclb
sarl
loope
popf
std
dec
push
insb
mov
lods
cmp
inc
frstpm(287
add
bound
jecxz
or
sarb
inc
jmp
cld
lods
ljmp
subb
pop
dec
cmp
in
mov
dec
dec
imul
push
mov
cli
lods
dec
ja
iret
and
sbbl
loop
movsb
in
mov
and
mov
cld
aaa
mov
and
shll
mov
adc
pusha
fcoms
loope
xchg
lods
jle
xorb
sub
roll
es
mov
or
test
jo
loop
enter
mov
cltd
add
movsl
fmuls
imul
neg
pop
mov
out
aas
push
les
ret
dec
mov
sbbb
push
push
push
inc
lcall
icebp
cmp
out
ss
adc
fimull
pop
loopne
xchg
rorb
or
jnp
orl
in
adc
jns
xor
out
ljmp
loope
sub
enter
imul
sti
pop
fdivs
push
enter
add
or
adc
repz
and
aaa
mov
test
sbb
add
decb
sbb
and
mov
cld
and
loope
in
push
orl
insl
arpl
fs
mov
inc
xchg
lret
sub
cmp
jmp
cwtl
xchg
and
fstpt
lcall
int
call
pop
push
addr16
out
dec
dec
jl
and
sarb
call
int3
dec
aad
add
pushf
int3
inc
pop
sub
dec
mov
push
add
mov
pop
mov
sbb
xor
pop
pop
lret
and
ljmp
fidivs
jecxz
notb
push
pushf
sub
cmp
adc
lods
adc
mov
imul
mov
mov
in
addr16
orl
push
leave
movl
xchg
std
sbb
jns
leave
mov
fstpt
cmp
mov
arpl
out
call
call
mov
in
sub
test
mov
insb
icebp
mov
das
xchg
cmpsb
movsb
inc
push
ret
mov
inc
or
jns
jg
stc
mov
fists
test
mov
push
mov
adc
test
inc
inc
shlb
dec
push
xchg
xchg
test
sub
in
xor
sub
stos
mov
repz
lret
jge
jns
mov
mov
or
or
loopne
pop
sub
cs
sub
fmull
xchg
arpl
movsl
xchg
gs
int3
xor
xchg
test
inc
pop
mov
sbb
out
pop
sti
dec
jp
dec
push
sbb
inc
bound
nop
movsb
cmpsl
int3
ds
pop
xor
lahf
ds
and
int
ret
shll
movsl
iret
sbb
mov
inc
pop
add
imul
fiaddl
call
fs
aam
lods
xchg
push
cmp
inc
mov
mov
mov
enter
not
sbb
repnz
push
sti
std
lock
std
cmp
inc
scas
pop
in
sti
idivl
vorps
int
pop
out
mov
fwait
adc
push
fbstp
mov
sub
jns
adc
lcall
fnsave
sub
mov
leave
lret
imul
test
add
fimuls
mov
test
gs
sbbl
mov
lock
cmp
mov
jge
ljmp
outsl
fwait
xchg
mov
in
movsb
sbb
push
xor
enter
loope
popa
and
add
pushf
mov
dec
sub
pusha
nop
hlt
xchg
in
inc
inc
into
adc
fdivrl
movsl
jns
mov
outsb
mov
leave
outsb
mov
bswap
test
ficoml
push
sbb
out
rcrl
jo
notb
inc
repz
push
sarb
push
inc
mov
repz
rorb
bound
mov
aad
sti
cmp
stc
sub
or
mov
push
xchg
aad
xchg
ret
in
stos
push
mov
mov
hlt
out
mov
cmpsl
lea
roll
call
and
add
stc
adc
jo
lods
push
lods
pop
cs
pop
iret
in
imul
ljmp
push
jg
repz
hlt
xchg
cmp
add
out
xchg
repnz
das
sbb
outsb
shrb
cmp
mov
jmp
mov
jecxz
inc
and
cs
aam
xchg
jge
pop
xor
mov
pop
mov
sub
fstpl
repnz
rorb
rorl
in
pop
imul
or
fcoms
adc
adc
int
aad
ss
add
jmp
add
mov
lcall
push
stos
daa
test
or
lea
add
lcall
data16
and
jl
cmp
testl
mov
cmp
xor
or
pop
pop
ret
xchg
mov
rcll
add
movlps
pop
and
inc
adc
xchg
add
dec
pop
add
stc
and
dec
xchg
mov
xor
cmp
addr16
movsb
fwait
stc
mov
mov
xchg
sti
dec
jmp
jnp
les
adc
je
popa
and
nop
add
xchg
aad
or
jmp
lcall
mov
repz
lds
in
aam
mov
xchg
jb
ds
aad
add
stc
dec
sub
mov
inc
imul
aaa
push
inc
ret
fstl
loopne
fwait
xchg
imul
out
xchg
xor
mov
lds
mov
mov
sub
add
push
test
pop
dec
xor
std
rcl
ficoms
out
jne
pop
mov
lcall
in
xor
add
les
inc
pop
mov
rcrb
movsb
sahf
or
jl
hlt
repz
dec
cmc
fs
cs
movsl
inc
mov
xor
push
inc
or
fdivr
ret
rcl
ss
fmuls
addl
cmp
sub
or
subl
test
push
push
mov
addr16
sub
mov
movsb
fisubl
dec
jp
pop
je
iret
mov
and
ja
imull
jp
aas
xor
push
out
addr16
das
icebp
jne
dec
xchg
adc
loope
sbb
mov
xor
std
xchg
fwait
iret
cmp
push
stos
xchg
leave
test
int
xor
test
adc
jge
push
aas
and
xor
in
inc
imul
adc
pop
stos
cmp
ljmp
mov
or
jo
xchg
adc
or
inc
push
movsb
popa
push
sti
mov
aad
daa
jns
test
imul
jo
ret
shlb
fnstcw
mov
dec
sarl
insl
pusha
sarb
cmp
and
leave
jecxz
sub
out
jmp
jb
or
ret
xor
sub
int3
loopne
xchg
int
or
push
push
dec
adc
mov
pop
jl
ret
mov
stc
addr16
xor
insl
sbb
imul
jle
pop
stc
mov
mov
mov
cmp
mov
ds
stos
jbe
dec
shrl
mov
and
insl
imul
push
mov
lock
xchg
cmp
lock
icebp
les
xchg
sub
mov
gs
negl
stos
repz
fistps
jge
movsb
jo
popa
adc
dec
mov
sbb
mov
mov
pop
cmp
popa
sbb
pop
aas
shlb
push
xchg
fcmovnb
scas
das
sbb
and
sub
push
cmp
xor
or
fnstsw
or
adc
pop
dec
pop
gs
add
cltd
lods
add
and
pop
sub
iret
loopne
arpl
inc
stos
arpl
mov
scas
fsubrs
lahf
jb
jecxz
mov
loopne
clc
sar
out
ret
xor
scas
jmp
xchg
outsb
sahf
xor
xchg
push
nop
lods
cmp
insl
mov
jo
and
mov
cmp
sub
cmpsb
xor
cltd
sbb
xor
push
dec
hlt
mov
sbb
sti
fmulp
or
pop
mov
daa
cmp
mov
push
mov
in
pop
sub
ds
inc
mov
ficomps
fbld
inc
add
ss
popa
fsubl
mov
xchg
jb
sbb
add
xchg
jmp
dec
xchg
repz
inc
adc
scas
inc
fistps
jecxz
bound
xchg
xor
nop
pop
dec
sbb
mov
pop
add
sahf
fwait
adc
mov
cli
rorl
out
leave
insb
in
push
scas
adc
fstl
in
aas
add
xor
lahf
xor
sub
mov
paddusw
push
and
fldt
mov
fsubs
enter
xchg
loop
jo
in
subb
lods
lahf
cmp
inc
push
mov
push
aam
sbb
or
cmpsl
rclb
mov
popf
pop
pop
cltd
loope
jns
cmp
xor
cmpsl
test
add
aaa
sahf
cmp
pop
int
jecxz
int3
adc
loopne
add
mov
xchg
shll
sbb
stos
adc
rorl
push
lock
int3
adc
aad
js
dec
pop
push
aaa
lods
pop
or
test
cmpsl
jmp
pop
sbb
and
loope
sbb
fstp
jecxz
jmp
jno
out
test
hlt
cltd
movsl
sub
xchg
cs
cmc
hlt
sbb
xorb
or
into
push
loop
pop
inc
sbb
xor
in
mov
fsubr
pop
stos
mov
mov
movsl
mov
rorb
xchg
bound
icebp
and
int3
addr16
lret
xor
test
xchg
pop
stos
imul
popa
inc
subl
insl
enter
mov
rorb
jb
adc
sbb
or
xchg
data16
jp
iret
or
dec
add
hlt
rcrl
pushf
mov
xchg
shrb
and
jo
rclb
pop
ja
add
mov
sbb
and
movsl
xorl
jne
ja
in
and
push
clc
data16
mov
imul
mov
lods
inc
or
imul
ljmp
das
sbb
xlat
dec
or
sub
repnz
sub
and
inc
push
enter
mov
int
or
adc
xor
mov
adcl
enter
or
dec
imul
es
and
scas
fbld
mov
inc
loope
ljmp
aam
test
xor
mov
jae
sti
xchg
pop
jg
aad
test
fistpll
js
bound
incl
lret
mov
stos
je
inc
sub
lea
pop
xchg
sahf
cmpsb
divl
and
dec
inc
inc
loop
fisubrl
orl
daa
cltd
inc
sbb
xor
test
pop
orl
or
push
lret
stc
or
dec
jg
xchg
test
mov
push
rcr
sahf
inc
push
pop
jo
cmc
xor
loope
arpl
popa
test
out
and
push
movsl
pop
push
add
add
out
addr16
xorb
lods
mov
loopne
xor
loopne
jmp
int3
ljmp
movl
pop
mov
cwtl
inc
mov
test
cltd
and
jp
cltd
das
pusha
xchg
nop
pusha
adc
movsl
popf
popf
mov
daa
add
clc
cmp
jo
daa
and
lahf
btsl
push
es
pop
aad
cmc
dec
jns
jecxz
mov
sbb
push
popf
cltd
pop
jnp
cmp
add
xor
sub
lret
push
push
popl
fiadds
in
out
call
into
mov
cmpsb
dec
and
mov
icebp
push
in
inc
iret
int
push
cmpsb
les
loopne
das
xchg
wrmsr
dec
out
sbb
cmpsl
test
push
out
call
incb
fcmovnu
clc
cmp
push
push
stos
mov
adc
popa
popf
and
cmp
ja
lret
leave
scas
stos
aas
jns
or
pop
add
leave
mov
movsb
mov
inc
mov
mov
out
sbb
dec
jl
xor
inc
mov
pushf
inc
gs
mov
or
mov
jle
outsb
mov
pop
mov
popa
mov
pop
testb
test
scas
filds
popa
mov
mov
ds
mov
jg
std
sub
shr
int
lods
aam
mov
loope
xchg
sub
or
scas
insl
movsb
out
pop
mov
or
fistpll
test
popa
popf
pop
rorl
inc
or
bnd
jne
cmp
xchg
and
popa
xor
xor
sbb
and
scas
js
and
call
push
xchg
xor
xchg
mov
dec
sbb
xchg
stos
mov
sbb
rclb
adc
cmpsb
lret
add
movb
push
aam
mov
cmp
call
push
mov
les
push
or
in
xor
mov
cmp
cmpsl
pop
xchg
ficompl
shlb
mov
and
out
pop
je
dec
jl
inc
cmp
sub
popf
in
lret
test
jle
inc
jl
ret
jle
adc
in
negl
or
ret
movsb
cmp
sti
fcoms
cmp
hlt
das
cwtl
mov
push
fwait
and
xchg
call
mov
shll
and
jecxz
pop
das
mov
fwait
aad
or
rorw
mov
sub
mov
out
fisubrl
dec
std
fs
in
dec
pop
and
or
push
loopne
pushf
movsb
jp
and
stos
mov
dec
adc
push
xor
mov
loop
out
cmp
sbb
jno
adc
stc
mov
loopne
dec
ljmp
mov
int
lahf
mov
jnp
pusha
xchg
jo
and
push
insb
xchg
lock
repz
push
inc
ucomiss
orb
das
jecxz
or
dec
push
xlat
xor
idivl
call
imul
xchg
dec
cmp
adc
imul
jnp
inc
dec
dec
sbb
mov
sub
inc
mov
sub
inc
inc
sbb
stos
clc
cs
jo
cmp
or
mov
rcll
xchg
jmp
lods
in
mov
ficompl
adc
mov
andb
mov
insl
xchg
mov
adc
cmc
add
jg
push
scas
xor
sub
dec
or
sub
cs
mov
inc
test
dec
ficoml
hlt
fdivs
sbb
into
mov
pop
clc
cmc
mov
cmp
loop
scas
stc
cmp
lea
and
xchg
test
sbb
sti
adc
lret
jo
push
aaa
fnstenv
and
leave
jle
sbb
lea
mov
sbb
push
xchg
movsb
jae
push
scas
lods
orl
inc
cmpsb
jge
mov
rorb
push
pop
outsb
popf
clc
jnp
cmpsl
jb
int3
das
outsb
fisttpll
mov
mov
sub
dec
enter
rcrl
add
repnz
and
jg
idivb
pop
mov
lds
push
fisubrl
jno
mov
pop
adc
js
cmp
int3
inc
test
mov
aad
insb
mov
cmpsl
je
push
dec
mov
and
sub
xor
test
mov
pop
mov
and
ret
lret
test
mov
jle
mov
pushf
lret
fwait
test
and
pop
out
mov
mov
jmp
js
dec
shr
cmp
aad
cmp
lcall
xor
xchg
ds
mov
and
push
xor
cmpl
sbb
inc
or
arpl
mov
push
inc
ret
cmp
xlat
mov
adc
adc
lcall
daa
jg
jge
or
or
inc
int3
rcr
cmovg
mov
jecxz
add
je
test
push
lock
adc
add
fnstcw
in
adc
add
lods
cmp
mov
cmp
sub
sub
cmp
xchg
cltd
mov
push
call
idivb
inc
pop
push
ss
shll
shll
xchg
fadd
or
rclb
test
test
cmp
sub
push
sbb
pop
js
and
test
in
mov
pushf
cwtl
call
xchg
dec
xchg
and
cltd
neg
push
xlat
jno
cmp
aad
scas
push
or
mov
cmp
rcl
pop
cmp
cmp
into
sub
fs
jmp
jmp
xchg
js
stos
dec
adc
xchg
and
add
out
loope
cmc
push
int
ret
push
push
dec
loope
mov
mov
mov
or
cmp
mov
xchg
cmpsb
ljmp
xchg
imul
jmp
add
cmp
inc
lea
mov
sbb
inc
xchg
xor
jbe
add
stc
xchg
sub
loop
push
scas
in
mov
mov
cmpsl
in
or
push
stc
cmp
and
movsl
adc
out
sub
push
es
xor
xor
movl
into
inc
xchg
insl
scas
lcall
jb
pop
jp
push
iret
into
xchg
mov
pusha
jno
or
push
cli
jns
xor
mov
test
js
sbb
mov
pop
scas
mov
imul
xlat
mov
mov
dec
dec
jnp
aas
adc
xchg
adc
push
dec
jns
and
test
fs
aaa
xor
test
ds
fsubr
aas
pop
jp
fldenv
std
cmp
mov
cwtl
push
rorl
stc
pop
cmp
leave
mov
rorl
addr16
mov
arpl
push
xlat
loop
imul
lods
icebp
push
loopne
mov
mov
mov
jg
es
lcall
sti
test
shll
pop
movsl
and
cwtl
cwtl
xlat
insl
dec
and
sbb
sub
dec
popa
xchg
into
cmc
lods
lahf
inc
aaa
push
push
pop
inc
jnp
mov
rorb
leave
mov
pop
push
push
test
xor
loopne
mov
stos
mov
pop
mov
xor
and
add
pop
in
push
fs
lret
popf
sbb
dec
mov
imul
aam
imul
int
insl
inc
inc
mov
and
lret
or
jne
leave
roll
cwtl
push
mov
test
stc
pop
icebp
movsl
inc
mov
xchg
push
mov
ljmp
subb
inc
addb
scas
insb
cmp
shl
inc
inc
test
cwtl
and
jns
sub
loop
or
rclb
mov
push
mov
ret
add
jge
ds
lahf
loop
and
mov
xchg
cs
shrb
sub
rcr
test
sub
inc
test
cmp
sbb
shl
push
cmp
stc
dec
rorl
imul
xchg
mov
std
sti
xor
xchg
or
movsb
jno
aad
mov
mov
cmp
push
cli
lret
mov
xchg
out
ficomps
pop
dec
dec
fsts
cmpsl
test
jae
pop
push
movsl
outsb
dec
push
jle
mov
adc
push
add
insb
or
pop
in
scas
inc
and
pop
lret
dec
pop
xchg
les
mov
repnz
lret
ja
or
notb
or
imul
mov
lcall
lds
pop
push
jno
pop
rcrl
pop
push
jmp
enter
loopne
inc
les
jae
push
and
xor
push
negl
or
adc
sub
jno
push
imul
mov
jge
mov
jb
jo
imul
xchg
dec
sbb
mov
jge
push
hlt
imul
popa
mov
shlb
mov
insb
sbb
iret
mov
and
aas
daa
rorl
adc
sbb
pop
xor
jl
aam
add
shrl
dec
pop
fistpl
outsb
add
dec
mov
and
xchg
sbb
ja
fcoms
or
outsl
icebp
push
mov
fsts
daa
daa
js
xchg
jp
hlt
mov
push
adc
in
lea
mov
aaa
cwtl
hlt
sub
and
in
into
sbb
fnstenv
adc
aaa
stos
mov
pop
hlt
add
in
fs
int
into
bound
lcall
pop
in
xor
xor
mov
mov
mov
adcl
xchg
cs
dec
push
das
loop
dec
pop
or
shl
hlt
repz
sarb
dec
jmp
mov
sarl
lret
dec
adc
jne
cmpsb
aas
adc
push
movsb
imul
loop
push
xor
mov
pop
pushf
fnstsw
jecxz
mov
in
cmp
add
adc
pop
scas
out
cmp
leave
xchg
add
aam
and
das
adc
lret
scas
lea
pop
add
paddd
inc
mov
pop
ret
shrl
cli
cmpsb
into
addr16
int
xchg
sbb
out
xor
aas
jb
sahf
out
hlt
test
arpl
decb
xor
scas
xchg
jne
sarb
scas
mov
add
sub
xchg
and
ret
in
leave
adc
dec
dec
jo
cwtl
imul
frstor
jge
fcmovu
insb
sbb
and
and
pop
jle
fcompl
dec
bound
testb
dec
data16
jl
mov
lahf
xchg
push
jg
stc
ja
lahf
aad
jae
addr16
adc
sahf
mov
sub
add
mov
jmp
ja
mov
mov
sbb
sbb
stos
lret
outsb
outsb
sbb
dec
mov
lret
clc
or
cmp
mov
ljmp
and
ret
imul
mov
mulb
xor
and
roll
adc
cmpsb
mov
mov
jnp
imul
pushl
nop
fsts
or
push
imul
and
jno
dec
mov
mov
ret
ljmp
sub
mov
lods
mov
jne
xor
stos
jno
bound
sbb
adc
adc
std
jmp
xlat
xor
popf
xor
decl
sbb
jne
es
inc
mov
adc
jno
test
xor
xchg
mov
xchg
stos
xchg
push
dec
inc
out
addr16
or
and
negl
mov
push
lret
pop
ret
xor
fwait
mov
pop
sub
aad
mov
adcl
add
outsl
test
mov
fdivrl
imul
cmpsb
mov
cltd
lds
xor
xchg
and
or
nop
pop
mov
push
lods
lods
sub
dec
imul
dec
sti
sahf
sub
popf
mov
xlat
arpl
xchg
das
dec
enter
or
cmc
hlt
fs
daa
ljmp
in
dec
lds
or
out
dec
pushf
adc
pushl
cld
lret
fsubrs
jne
lock
stos
cmp
and
ja
fisubl
dec
inc
clc
xchg
dec
sbb
fnstcw
and
repz
and
push
loope
into
sub
push
out
int
scas
sub
lret
ret
push
dec
sub
hlt
push
stos
lcall
sbb
sub
sti
iret
scas
xor
mov
into
sub
jae
call
sub
mov
mov
lea
repnz
mov
jecxz
stos
and
ret
imulb
jg
add
sbb
push
imul
push
ficoml
xchg
aad
cwtl
flds
fsubp
sbbb
fidivs
adc
xchg
jge
pop
cmp
in
fs
mov
adc
push
sub
cs
mov
or
idivb
fdivr
xchg
int3
outsb
ljmp
addr16
cmpsb
scas
dec
insb
xchg
into
jb
leave
aam
and
div
sbb
out
popf
call
gs
mov
repnz
ds
pop
mov
sahf
push
mov
jo
jg
loope
push
mov
cld
lods
sub
aad
xchg
test
dec
dec
xchg
into
jbe
inc
mov
push
mov
or
add
in
xchg
mov
bound
xchg
pop
mov
adc
sub
or
int3
pushf
pop
push
xchg
loopne
popf
jg
xor
mov
repnz
lcall
inc
pop
fimull
ja
mov
dec
inc
inc
jbe
and
xlat
jmp
cld
add
aas
dec
pushf
pop
or
add
aaa
outsl
je
dec
test
xor
sahf
add
cmpsl
xor
dec
out
mov
hlt
pop
or
and
cmp
xchg
sub
leave
popf
jno
leave
not
sti
cmpsl
or
mov
cmp
jne
inc
pusha
add
lock
into
les
and
imul
sbb
mov
pop
shll
mov
and
icebp
cmp
pop
push
or
iret
cmc
jmp
jmp
leave
clc
test
push
lock
pop
sbb
and
out
jno
cwtl
shl
mov
andb
mov
xlat
decl
fwait
dec
and
ljmp
je
or
sahf
push
or
dec
dec
or
dec
and
sbb
pop
sub
and
mov
cli
ja
adc
aaa
dec
xor
mov
ss
rcr
sub
jmp
into
xchg
cltd
imul
fwait
mov
xor
cltd
sahf
jl
jge
dec
jl
pop
push
sbb
out
jo
xor
xchg
in
push
aas
and
xchg
fisubs
mov
cmp
xor
cmovns
inc
call
sub
decb
mov
int3
adc
inc
gs
mov
bound
xchg
push
bound
jbe
cmpsb
push
inc
stos
daa
pop
xor
ror
jp
mov
xor
jp
cld
dec
sub
mov
ss
clc
or
cmp
daa
pushf
outsl
xchg
and
mov
stc
repnz
ds
dec
int
arpl
ror
pop
mov
push
or
imul
add
dec
cmp
shl
mov
clc
push
cmpl
notl
dec
stc
pusha
lcall
int
xor
pop
cwtl
aad
cmp
mov
lcall
lret
dec
dec
lods
fmuls
cli
cmp
mov
fiadds
ret
cwtl
stos
imul
mov
xchg
repnz
dec
jecxz
sahf
xchg
xchg
mov
cmc
xchg
rcrb
lods
js
sbb
popa
out
popf
ljmp
inc
std
ret
jno
cmp
sub
ds
popa
pop
cmpsb
add
aas
cld
loop
add
sbb
das
fs
push
fcompl
xor
xchg
jno
test
or
outsl
nop
and
daa
pop
hlt
outsb
fadd
scas
mov
aaa
sub
add
xor
adc
std
cmp
dec
xlat
mov
stc
iret
popa
add
push
mov
movl
or
mov
scas
test
outsl
and
clc
inc
and
mov
xor
or
push
mov
test
xchg
jne
xor
lods
add
adcb
or
pavgw
pusha
add
test
jnp
sarl
enter
ds
cmpsb
push
mov
sahf
pop
sub
clc
jae
sti
ljmp
sbb
es
dec
mov
dec
pusha
cmc
jnp
sub
cmpsb
cmp
xor
mov
pusha
sbb
shlb
xchg
fnclex
push
test
outsl
mov
imul
mov
xchg
dec
je
jns
in
std
mov
sub
push
push
add
loope
cmp
add
mov
bound
sub
cmpsb
sub
xchg
sarl
jo
push
xor
cmp
rol
xchg
call
mov
dec
ja
adcb
rclb
ror
sbb
dec
movsl
stos
fcmovnu
mov
mov
cmc
mov
pop
sbb
push
sbb
or
outsl
das
mul
xor
mov
jns
pop
inc
enter
ds
dec
in
inc
xchg
adc
decl
cld
xor
daa
fwait
dec
sbb
cmp
mov
jg
xor
ss
ja
rorl
sbb
bound
mov
mov
fs
add
pop
pushf
pop
xorl
mov
mov
ja
pusha
enter
rorl
stos
cmp
lret
test
scas
xchg
pop
push
and
mov
mov
in
cmp
pop
jo
mov
fwait
outsb
into
int
jl
adc
push
daa
push
push
das
mov
fstps
sbb
push
iret
dec
scas
xchg
mov
mov
fxch
aas
jmp
and
dec
fistpll
sbb
ljmp
js
call
cltd
scas
mov
mov
mov
jmp
das
cmp
sbbb
mov
cmp
std
pusha
in
ficompl
jecxz
loopne
jge
clc
in
std
sbb
dec
sub
ss
or
cmpsb
pop
pusha
in
mov
std
out
pop
imul
rol
mov
push
jecxz
jge
test
sbb
dec
mov
lahf
mov
outsl
test
lds
mov
stos
sub
xchg
cli
pusha
mov
movsb
aam
sti
xchg
out
xor
push
fiadds
insb
enter
and
test
or
xor
jmp
jbe
or
xor
addr16
adcb
or
inc
pusha
imul
int
xchg
out
mov
jne
imul
inc
pop
push
xchg
hlt
mov
ljmp
and
mov
push
bnd
mov
xor
stc
fsub
pop
repnz
fidivl
daa
add
mov
mov
push
mov
cmp
mov
scas
jno
das
push
mov
mov
popf
sbb
loopne
dec
or
lret
mov
incl
xorb
mov
lea
dec
jl
push
xchg
jmp
add
pop
dec
sub
and
sbb
jnp
xchg
cmc
mov
pop
sbb
ret
stos
aaa
outsb
mov
xor
testl
rorl
sbb
cmp
stc
mov
cmp
jge
adc
mov
sub
in
ror
jbe
aas
fs
aam
dec
loop
adc
mov
or
lret
imul
pop
in
xchg
repnz
nop
push
cmp
in
fwait
popf
add
mov
lods
push
jae
arpl
jl
jl
mov
dec
mov
mov
push
push
jge
mov
ja
cmpsl
pop
je
push
mov
lret
xchg
add
inc
jnp
popa
mov
aaa
loopne
push
in
mov
in
out
sub
jae
sbb
shrl
shrl
pop
sub
aad
imul
dec
xor
sub
nop
mov
add
cmc
xchg
pushf
loope
lahf
jecxz
ljmp
lret
repz
sarb
aas
sub
push
movsb
push
int
hlt
jmp
repz
insb
ljmp
aaa
into
fists
mov
aam
orb
addl
mov
dec
mov
and
and
mov
pop
mov
pop
add
push
add
lret
rorl
cmp
jne
ret
sbb
push
or
mov
test
je
dec
sbb
pusha
aad
sbb
jne,pt
bound
push
push
and
lods
jmp
shrb
loopne
ror
mov
es
icebp
jns
orl
stos
mov
sti
pop
adc
cmc
adc
les
sbb
repnz
sub
movsl
lahf
loopne
xor
sbb
xor
in
pop
xchg
adc
inc
or
pushf
loopne
pop
nop
push
add
and
loopne
inc
call
push
mov
mov
and
inc
cwtl
mov
cmp
sti
std
mov
sub
sahf
xchg
push
inc
lock
mov
xor
lods
andl
inc
mov
imul
jge
addr16
pop
scas
xorb
inc
in
lahf
enter
ror
loopne
lahf
push
dec
push
adc
add
dec
xchg
adc
jne
mov
in
ja
movsb
jns
add
mov
mov
xorl
mov
sbb
push
fs
dec
pop
outsb
sti
pushl
pop
pop
sahf
sub
cltd
xor
mov
dec
popf
xchg
pop
cmc
movaps
inc
pop
cwtl
push
add
cmp
jg
icebp
mov
lret
dec
test
decb
shll
scas
inc
cmc
cmc
fildll
nop
sbb
and
ja
out
xchg
cmpsl
sbb
icebp
cld
js
sbb
jmp
or
cmp
stc
sbbl
fnsave
repnz
sbb
cmpsb
sub
push
out
lds
std
ja
or
and
mov
rclb
stc
fcoml
sub
scas
out
in
add
xlat
xor
out
stos
pop
push
rcr
xchg
sahf
mov
into
fwait
sbb
pop
imul
jbe
shrb
push
leave
jae
int3
inc
or
mov
movsl
and
insb
js
jbe
jl
std
stc
sar
aaa
cmp
push
test
push
push
sub
test
mov
std
xor
or
cwtl
mov
dec
outsb
ss
mov
test
arpl
mov
insl
push
ljmp
mov
addb
xchg
sbb
lock
jae
xor
xorps
test
std
cwtl
inc
in
mov
in
rorb
and
sahf
mov
shrb
fcmovnb
scas
mov
aad
push
cmc
lds
icebp
mov
add
mov
mov
or
push
sbbl
sarb
sbb
adcl
sbb
dec
popf
cs
iret
stos
iret
dec
xchg
mov
sbb
push
mov
mov
not
dec
pushf
adc
jmp
xchg
insl
iret
cmc
mov
cli
or
jge
jo
pop
cld
cmp
test
xchg
xchg
out
arpl
jbe
fcmovb
add
inc
out
ret
nop
push
mov
pop
xorb
loope
in
sub
scas
adc
inc
incl
inc
outsl
mov
dec
cmp
sub
inc
xchg
mov
ds
scas
call
mov
mov
or
cmp
popa
mov
mov
push
dec
cmovno
sub
cs
push
pusha
pmuludq
bnd
sbb
mov
xlat
and
jae
xor
push
ja
lret
into
icebp
inc
inc
adc
mov
xor
push
lcall
push
inc
mov
jecxz
jp
scas
shlb
push
retw
push
das
movl
xchg
lcall
jno
cmp
pop
sahf
push
dec
pop
fsub
das
add
jmp
jb
and
bswap
xor
pop
dec
xor
and
iret
fcompl
pop
repz
mov
inc
jno
mov
call
push
dec
addr16
cmp
lods
and
jae
and
ss
or
ret
call
pop
mov
shrl
inc
push
pop
mov
push
cmpsb
pop
fisubl
sbb
mov
daa
xchg
scas
idivb
cwtl
push
in
fstpl
rcrb
in
lods
jp
nop
outsb
rorl
ss
mov
dec
and
in
mov
lahf
pop
fmul
stos
or
data16
jge
testl
out
in
addr16
movsb
jbe
xor
jbe
pop
mov
adc
add
jns
inc
inc
stos
add
xchg
mov
push
xor
data16
jbe
mov
iret
cltd
int
imul
cmp
shrl
test
std
lret
xchg
sub
test
aas
inc
cmp
aaa
mov
cli
add
and
iret
cmc
icebp
inc
dec
fcoml
movsl
mov
push
add
rorl
add
sub
cmpsl
jb
arpl
mov
test
lret
ss
mov
mov
fadd
mov
cmp
loope
frstor
dec
and
pcmpgtb
mov
scas
jl
and
add
icebp
out
hlt
push
cmpsb
cli
fidivrl
stos
xchg
xchg
pop
mov
jp
add
or
add
and
inc
inc
and
stc
aas
in
mov
dec
jecxz
rcrl
cmpsb
aad
cs
mov
mov
cmp
push
and
inc
push
xor
test
pop
cli
aam
ss
repz
pushf
or
mov
lahf
imul
out
iret
aam
dec
imul
cltd
inc
push
clc
jbe
jne
jge
test
push
pop
das
cmp
in
adc
ret
outsb
stc
add
mov
repnz
add
jne
push
push
xchg
nop
sub
xlat
hlt
gs
cmp
mov
pop
sti
mov
inc
in
mov
jle
xor
lods
mov
out
in
and
fdiv
loopne
stos
andl
sbbl
and
cmp
inc
dec
pop
pop
into
lds
push
ja
and
jge
inc
outsb
test
insl
rorb
in
sarb
mov
push
push
mov
sbb
dec
outsl
mov
addr16
cmp
mov
js
adc
in
or
inc
jge
inc
or
xchg
out
popf
insb
ficoms
sub
mov
mov
add
shr
call
repz
mov
inc
bound
movsb
int
inc
stos
sbb
sub
nop
mov
ret
xor
dec
int
xor
gs
fcompl
push
outsl
jle
test
jnp
pop
in
sbb
cmp
jmp
mov
push
push
mov
cmpb
shl
je
cmpsl
imul
mov
dec
add
sti
cmp
std
mov
push
mov
jne
inc
mov
push
cmc
cmp
push
shr
hlt
push
aad
ja
mov
les
pop
xor
lret
sbb
adc
lods
xor
hlt
inc
mov
jno
inc
int
ljmp
or
jl
or
sub
xor
jl
into
jmp
lods
dec
inc
loopne
in
mov
dec
lds
lea
cli
xchg
mov
je
cmp
jns
pcmpgtb
pop
sbb
mov
inc
in
dec
sbb
jno
scas
sbbl
push
adc
mov
mov
dec
std
sar
repz
repnz
rorb
fildl
adc
xchg
or
add
bound
xchg
mov
mov
mov
in
aam
out
inc
jae
inc
test
mov
push
cli
daa
pop
enter
bound
mov
add
xor
mov
mov
xor
mov
call
sbb
adc
pop
outsb
inc
inc
or
iret
testl
mov
test
sbb
or
imul
icebp
ds
cmp
xchg
xchg
shlb
pop
pop
jbe
stos
repz
rcl
push
daa
jno
mov
jge
sub
ret
out
xchg
in
push
arpl
push
imul
or
fdivr
xchg
add
nopl
pop
inc
jb
and
mov
add
inc
sub
enter
repnz
sti
mov
xabort
lods
adc
and
dec
jp
xor
jl
ret
jmp
xlat
int3
sbb
dec
js
dec
push
cmp
sbb
inc
pop
pusha
pusha
call
scas
dec
test
rcll
hlt
jmp
mov
adc
mov
dec
mov
jl
cmp
shlb
mov
push
fs
mov
in
inc
sbb
xor
jbe
popf
add
in
xchg
dec
sub
stc
fisubl
test
movsb
xchg
mov
mov
xlat
sub
dec
cmp
ss
insb
mov
mull
flds
test
lahf
cmp
mov
call
jmp
rorb
stos
pushf
in
pop
push
fwait
sarb
mov
daa
scas
mov
rorb
fdivl
in
sub
adc
jo
add
idivl
je
popa
xor
cwtl
scas
cld
popa
inc
inc
add
lods
lret
pop
ljmp
dec
add
repz
rorb
sbb
arpl
adc
andl
popf
jo
add
xchg
jns
pushf
filds
mov
ds
fwait
lret
call
or
loop
daa
and
dec
lods
sub
cmp
fidivl
or
lods
dec
int3
add
mov
je
sbb
stos
in
imul
jp
les
test
cmc
in
shlb
push
inc
sbb
push
mov
cmp
sbb
and
mov
aam
pusha
jae
hlt
ret
xor
cmpsb
and
scas
lock
cltd
popa
aad
or
mov
lcall
mov
mov
sbb
call
bnd
adc
lahf
in
movsb
push
mov
jg
mov
in
sbb
into
jle
test
je
jae
push
or
outsl
outsb
adc
js
mov
pop
cmpsb
pop
xor
push
das
scas
subl
and
outsb
out
jl
mov
and
cmp
pop
fstpt
adc
fstl
je
lret
pop
insl
mov
push
mov
in
jb
xchg
mov
imul
ficompl
inc
movsb
push
xchg
popf
push
in
into
push
mov
out
mov
fsub
mov
cwtl
dec
call
fcompl
call
mov
or
idivb
clc
test
decb
lret
mov
sbb
cwtl
dec
mov
cmp
xchg
daa
inc
sbb
add
push
addr16
sub
mov
cwtl
mov
cli
and
sub
inc
push
or
inc
jmp
push
mov
adc
adc
or
das
repnz
mov
sbb
hlt
sub
mov
sub
mov
xlat
xchg
fstps
mov
icebp
xor
dec
mov
outsl
mov
andl
or
push
hlt
xor
aas
adc
push
shll
adc
scas
enter
mov
and
cmp
sbb
dec
cwtl
push
dec
in
adc
cmp
sbb
enter
inc
out
mov
cltd
aam
push
add
icebp
xchg
pop
orb
mov
dec
mov
push
pop
enter
icebp
mov
imulb
and
dec
pop
cli
gs
fistl
push
add
jae
inc
daa
pop
mov
outsl
jns
subb
sbb
mov
test
rolb
lods
add
push
pop
les
lahf
cmc
jns
enter
in
xor
mov
inc
aam
xlat
jnp
insl
sti
mov
pop
sub
lahf
cmp
out
clc
inc
or
pop
xor
jg
adc
dec
test
sbb
pop
cmp
in
cmp
insb
shrl
mov
movsl
or
bound
and
xlat
outsb
lods
daa
push
jae
out
dec
cmpsl
fs
push
mov
aam
fnsave
pop
int3
bound
ja
cmp
out
sbb
mov
sub
xor
mov
cmp
ds
scas
cltd
mov
in
das
and
sbb
pop
test
jmp
push
inc
imul
loope
insl
out
pop
push
rcrl
cli
add
das
mov
sub
mov
sbb
xchg
dec
test
or
mov
out
xchg
das
sub
nop
ja
xor
adc
push
and
iret
sar
sbb
inc
scas
xor
into
dec
lods
push
or
hlt
pop
jne
mov
scas
jae
mov
je
shr
push
dec
out
adc
pusha
cs
push
loop
mov
repnz
cmp
xchg
sahf
cmp
lock
lea
cld
ss
adc
and
call
mov
pop
dec
dec
sub
add
jns
or
cli
dec
pop
adc
sbb
aad
pop
and
in
dec
ljmp
mov
mov
adc
mov
push
ret
mov
jmp
dec
dec
pop
lods
pop
gs
arpl
lea
pop
mov
fnsave
dec
inc
shll
xor
hlt
mov
data16
data16
in
and
jb
lcall
adc
cwtl
add
loope
in
sbb
or
bound
sti
lds
les
mov
mov
jne
jbe
aam
add
call
or
dec
pop
hlt
xlat
push
test
les
sbb
je
dec
jmp
pop
fdivr
jae
pusha
add
dec
in
ja
nop
inc
jns
mov
add
imul
sbb
insl
xor
sbb
sbb
nop
inc
stos
or
loope
or
sbb
mov
jae
les
ret
divb
sub
pop
fcmovbe
dec
pop
pop
stos
lret
dec
add
lock
into
ret
es
sub
js
push
pusha
xor
mov
sbbb
pop
fidivs
movsl
aaa
iret
adc
jns
sbb
mov
shll
push
jl
fisubl
mov
and
jp
jge
and
sti
jno
inc
mov
sbb
cmp
add
outsl
adc
add
adc
js
int
mov
ja
mov
mov
je
arpl
sbb
mov
push
aad
arpl
mov
push
adc
cwtl
rorl
and
loopne
adc
imul
int3
push
test
bound
pushf
inc
mov
cwtl
test
clc
mov
mov
and
lcall
cs
adc
push
push
fdivrp
inc
out
add
test
fsubp
repz
add
test
mov
rcr
mov
andl
dec
sti
dec
and
test
fiaddl
bswap
dec
mov
scas
std
insl
arpl
jns
pop
mov
scas
xchg
popf
movsl
fstpt
mov
inc
dec
cwtl
loopne
iret
loope
push
pop
fidivs
mov
stc
mov
push
jge
daa
repnz
mov
jns
pop
adc
aaa
xchg
out
or
insb
mov
fwait
scas
adc
mov
jl
jne
mov
ljmp
sub
sahf
mov
sbb
jecxz
aam
push
and
push
stos
dec
mov
sbb
push
jbe
sti
inc
or
mov
testl
push
nop
fisttps
daa
addr16
imul
push
mov
cli
sbb
sbb
aaa
xor
jnp
inc
aam
movsb
rolb
inc
idivb
push
xchg
mov
inc
adc
insb
loope
outsb
insb
xchg
mov
sub
push
add
ds
fimull
mov
fcoms
jl
stos
jno
dec
cmp
lea
xchg
cmp
rcrb
aaa
push
ljmp
xchg
lahf
xor
daa
imul
stc
out
mov
pop
dec
inc
and
jp
xor
or
int3
cli
jp
loopne
xchg
leave
andl
or
pop
mov
mov
and
pushf
xchg
es
cmp
shll
ljmp
inc
mov
sahf
mov
cwtl
out
or
fisubrl
inc
pop
cmp
pop
xchg
std
hlt
sbb
mov
xchg
mov
fst
fptan
mov
aas
adc
shl
in
dec
addl
into
pop
cmp
push
xor
or
pop
popa
jnp
pusha
or
loop
jns
in
out
stc
pop
and
inc
or
pop
jl
pop
out
mov
add
addr16
sti
insl
pop
mov
mov
mov
xor
fsubl
daa
lret
or
or
lahf
shrl
int3
and
or
arpl
test
adc
add
lock
mov
add
imul
and
push
xor
push
mov
jecxz
add
jp
adc
pop
add
jnp
mov
test
xor
lock
or
sub
fwait
add
addr16
in
cmpl
int3
cmpsb
push
lods
fimull
push
outsl
sub
mov
icebp
pop
inc
outsl
call
lret
fs
gs
test
shlb
cmp
addr16
lea
loope
popf
hlt
sahf
xor
int3
xchg
mov
imul
test
loope
xlat
add
mov
dec
outsl
mov
xlat
hlt
in
sbb
rcll
mov
popf
hlt
shll
iret
dec
notb
out
scas
sub
mov
jo
in
pop
leave
pop
jbe
xchg
loope
mov
roll
cmp
mov
jo
fcompl
xor
cmp
icebp
popf
ss
lcall
jge
dec
dec
fistps
rcll
outsb
pop
mov
dec
testb
mov
pop
cmc
xlat
test
shrl
and
xor
push
pusha
and
daa
mov
sbb
repz
fimull
lods
inc
ja
push
daa
rcpps
imul
repz
add
outsl
mov
add
adcl
arpl
loopne
lds
inc
pushf
sbb
fldt
inc
pop
fdivl
mov
insb
add
xor
jno
adc
xor
and
outsl
scas
cmp
nop
xor
sbb
push
push
insb
sub
xchg
mov
lret
cmp
xor
cld
mov
lods
pop
pop
adc
lret
xlat
sbb
repnz
mov
mov
aam
mov
out
cmp
mov
inc
out
or
mov
mov
pusha
shll
aas
xchg
pop
fdivrs
inc
ds
std
pop
jecxz,pn
outsl
pop
inc
jae
pop
ljmp
xor
xor
jecxz
mov
loop
lods
and
mov
imul
lahf
popf
add
ret
sub
inc
sub
ljmp
push
int3
ret
shll
sbb
lock
pop
push
mov
or
or
sbbl
imul
lahf
jp
mov
rclb
or
jae
mov
and
arpl
jno
fcompl
subl
or
jle
pop
repnz
and
test
push
pop
xchg
sbb
sub
adc
iret
jne
pop
out
je
mov
nop
fildl
inc
jmp
pop
fmul
in
std
adc
dec
mov
xchg
and
dec
mov
shl
daa
push
add
xor
jmp
orl
aaa
sbb
loopne
mov
in
dec
sub
in
cmp
out
xchg
lcall
std
shll
cli
mov
out
jg
mov
je
fidivl
dec
fdivl
pop
ljmp
xchg
jne
nop
icebp
jne
and
imul
lods
jae
test
sbb
int3
sub
out
cmp
out
jno
push
test
cmpsb
and
mov
jae
sub
mov
sbb
mulb
in
add
outsb
dec
in
push
push
cmp
hlt
and
and
nop
dec
jae
test
jno
lret
lcall
lods
int3
jbe
dec
sbb
loope
sbb
idivl
stos
inc
mov
and
xor
xchg
or
mov
cwtl
or
jmp
fisttpll
test
add
ret
jmp
lret
in
shl
sbb
pop
les
xchg
mov
iret
loopne
int
xlat
cli
xchg
lods
jns
and
mov
jecxz
sbb
stos
cmp
fistpl
cmp
loopne
ja
addr16
cmp
cmpsb
mov
and
ds
cld
jmp
push
pushf
loop
and
and
mov
insb
cmc
jb
pop
and
jmp
mov
pop
jl
repnz
sbb
std
cmp
cli
dec
xchg
cmp
adc
mov
or
scas
push
test
das
jne
push
fcomps
pop
lds
adc
lock
adc
or
or
imul
sub
xchg
push
cmp
inc
sub
xchg
repz
int3
push
out
repnz
mov
imulb
in
xchg
push
xor
dec
out
daa
mov
rcrl
int3
sub
adc
nop
incl
cmpb
and
jno
sbbb
stc
les
add
mov
outsl
sbb
popa
or
dec
jmp
sbb
int
inc
sarl
fmuls
shlb
bound
in
inc
sub
fidivrs
gs
xchg
sti
addr16
pushf
out
pop
inc
lret
loop
lea
sbb
pop
pushf
pusha
sarl
shrb
jae
aad
adc
orb
inc
pop
push
test
ljmp
aam
fsubrs
xchg
xor
les
imul
mov
inc
push
ret
mov
sbb
lret
sbbb
inc
fyl2xp1
jge
xchg
fcom
sbb
jbe
mov
in
xchg
inc
popf
test
out
out
adc
cmp
inc
cmp
sti
xlat
ljmp
cwtl
mov
stos
add
js,pt
test
iret
pushf
cmc
mov
adc
shlb
xchg
subl
movsl
mov
mov
in
stc
jg
adc
lahf
shl
adc
mov
cmpsb
adc
in
xchg
xchg
xchg
imul
jl
sahf
cmc
cmc
mov
popa
push
js
cld
les
pop
lcall
and
in
test
pusha
xlat
out
lahf
jl
addb
out
cwtl
test
mov
xor
jg
addl
fwait
jg
je
shrl
xchg
xchg
lahf
ja
xor
mov
sub
inc
or
ss
int3
sbb
aad
sbbb
cmp
xchg
xchg
adc
pop
je
sahf
pop
jne
sbb
popa
cmp
pop
lahf
inc
sub
cwtl
jecxz
adc
ljmp
dec
jecxz
data16
inc
adc
nop
mulb
loope
mov
and
in
mov
movsb
and
out
and
cs
push
jbe
xchg
and
jmp
aam
lods
pop
jno
popf
les
push
test
rol
gs
or
jno
aam
jb
clc
cmpsb
mov
push
sub
or
mov
mov
mov
sub
pop
xchg
add
iret
ret
sbb
cwtl
popf
imul
ret
xchg
movsb
sub
jns
sbb
xchg
out
push
lcall
xchg
mov
cltd
and
outsl
dec
repz
into
shlb
cmp
push
add
push
fucomp
test
imul
adc
dec
pushf
mov
andl
sahf
fsubrs
jno
hlt
outsl
pop
mov
mov
mov
fnstsw
push
fnstenv
xor
popf
adc
std
pop
sub
je
mov
adc
push
xor
pop
ljmp
pop
xchg
movsb
nop
adc
jo
jae
xchg
or
sbb
xor
jge
lret
adc
dec
dec
add
loope
xor
movsl
retw
mov
inc
lods
movsb
stos
add
fisubrl
xchg
add
in
stos
mov
repz
jbe
into
movsb
push
dec
mov
mov
stos
ret
pop
lds
push
out
pop
push
adc
xor
inc
cltd
or
rclb
cmp
sbb
stos
and
lret
xor
mov
cmp
hlt
add
fmull
scas
bound
mov
mov
leave
inc
mov
and
jp
cs
lret
pop
hlt
std
adc
jmp
or
shll
dec
je
fs
sub
mov
sub
dec
imul
lahf
lcall
pusha
out
ret
mov
mov
adc
adc
push
test
das
xor
and
lret
pop
loopne
sbb
aas
sub
xchg
movsl
addr16
std
sbbb
xor
xchg
not
jae
xchg
fnstcw
ljmp
addr16
cld
mov
loop
sub
dec
rorb
sarl
jno
xor
mov
cmc
inc
outsb
das
rclb
ljmp
loopne
mov
mov
sub
mov
insl
push
lods
mov
push
add
fmul
insl
fcmove
movb
sar
jne
xchg
sub
push
jo
mov
insl
jg
sahf
ljmp
sub
rorl
xchg
mov
and
and
insb
in
enter
jl
sbb
cwtl
ficompl
adc
and
imul
pop
jno
adc
sub
addr16
mov
ja
insl
jle
dec
lcall
outsl
cmp
inc
imul
push
and
lods
inc
mov
iret
jp
sub
fisttps
xor
dec
mov
push
cmpsb
jmp
mov
push
cmpsl
mov
sub
testb
imul
xor
addl
enter
jns
jg
pop
test
mov
loop
add
pop
xor
mov
mov
scas
sbb
xor
stc
movsb
sbb
pop
je
icebp
xor
movsb
xlat
pop
lods
std
clc
mov
mulb
xor
stos
adc
addr16
xor
ficoml
je
lods
and
adc
xchg
xorb
mov
push
in
sub
loope
pop
nop
fs
stos
cmp
loopne
popf
xor
push
test
sbbl
fwait
push
ljmp
push
rolb
cmpsb
test
lods
rep
testb
jmp
jp
lret
dec
movsb
js
sahf
jecxz
cld
ficomps
lahf
roll
test
push
jp
pop
dec
rcrb
fimuls
addr16
jnp
stos
sbb
sub
jl
arpl
sbb
test
sub
adc
pop
jbe
pop
and
and
and
xchg
sbb
inc
insl
mov
dec
je
mov
push
cmp
cmp
push
mov
xchg
mov
sbb
mov
icebp
xchg
adc
mov
push
inc
sbb
xor
jno
lods
sub
xchg
aaa
xlat
scas
clc
adc
out
mov
mov
mov
addb
add
adc
out
sbb
mov
in
jmp
imul
mov
clc
lahf
xor
xlat
stos
int3
pusha
jns
outsl
mov
gs
lahf
lods
push
ss
dec
push
dec
dec
mov
pop
cmp
scas
js
dec
icebp
dec
xchg
adc
nop
pop
pop
sarb
cli
fldenv
and
arpl
mov
cli
cwtl
call
loope
nop
adc
in
adc
gs
fwait
xlat
ficoms
shrb
sbb
movb
out
stos
iret
pushf
add
mov
sub
xor
jbe
mov
addr16
cs
movsb
pusha
mov
jne
sbb
test
ret
jno
xchg
jg
and
data16
jne
imul
push
mov
sbb
bound
jg
jbe
and
subb
cmp
les
mov
aam
inc
sahf
fs
hlt
jae
popf
pop
mov
push
sbb
jo
add
or
pop
jmp
adc
testb
jle
sub
adc
repz
inc
push
push
sbb
movsb
or
sub
mov
popf
jle
js
push
je
js
sub
pop
std
xchg
or
inc
pop
ljmpw
ds
shr
shrl
lods
inc
test
cmc
aad
stos
les
stc
aas
push
add
or
loop
jbe
or
mov
ss
inc
daa
fiadds
and
daa
push
out
outsb
cmp
outsb
add
xchg
or
in
xchg
in
out
pop
jns
aas
cmc
add
mov
out
mov
mov
or
or
test
cmpsl
sbb
adc
jne
incl
in
testl
adc
sub
xor
pop
xchg
lahf
repz
out
mov
rorl
or
adc
xor
and
arpl
pop
mov
lret
mov
or
mov
leave
in
inc
or
loope
mov
in
mov
lea
in
insb
lret
cld
cmp
xchg
mov
push
loope
decb
pop
fisubrl
decl
xor
xor
mov
fwait
mov
out
jg
pop
ds
mov
push
push
xor
in
out
inc
aad
mov
push
and
jl
dec
adc
sub
mov
aam
adc
test
pop
loop
fdivrl
insb
fcmovnb
fcoms
repnz
push
sbbb
jne
sub
inc
adc
in
push
lcall
loop
lret
in
xchg
jno
cli
cmpsb
xchg
sub
jns
jg
test
cli
mov
jno
in
mov
push
aaa
push
dec
scas
push
jmp
xor
mov
jle
iret
mov
inc
add
sub
cmc
xor
push
mov
jnp
inc
imul
sub
in
add
and
cmpsb
das
fcoml
mov
add
adc
mov
fcomip
sbb
mov
pop
sbb
add
call
lret
in
fst
mov
fidivrl
adc
cmp
cltd
mov
lret
cmp
clc
cmp
in
repnz
out
add
lods
inc
nop
adc
push
lcall
mov
inc
shrb
call
lcall
inc
push
pop
fisubl
mov
dec
add
mov
xor
push
lret
push
mov
and
or
js
mov
push
pop
aam
out
push
mov
cmc
push
xchg
mov
lds
sub
sub
or
and
inc
sub
cltd
push
leave
push
fs
xlat
cmp
sub
sbb
popf
pop
imul
pop
dec
mov
test
push
mov
aaa
loope
out
fcompl
repz
scas
cmp
aaa
in
adc
shrb
in
sub
inc
mov
test
cltd
add
test
push
push
mov
int
sbb
and
fistl
mov
je
in
shlb
cltd
mov
and
lds
outsb
sub
push
push
xor
cmpsb
cmpsl
pop
xor
ret
xor
dec
dec
lret
imul
imul
imul
add
xchg
xchg
lods
adc
cmpsl
mov
dec
sbb
aam
insb
loop
push
dec
stos
xchg
jb
mov
sahf
push
pushf
cmp
divl
test
pop
addr16
in
mov
int
mov
cwtl
sti
les
dec
int
xchg
sahf
cltd
pop
sbb
leave
pop
pop
push
les
aad
xchg
cmp
push
inc
xchg
cs
lea
cmpsb
adc
jns
inc
jno
or
gs
enter
ret
popa
mov
pusha
outsl
lret
inc
jns
sbb
mov
imul
popa
leave
push
sub
pop
sbb
jmp
or
xchg
sti
nop
or
repz
in
mov
sbb
aam
insl
or
daa
xchg
stc
fmuls
mov
push
add
test
popa
imul
xchg
pop
adc
cmpsb
iret
dec
sti
andl
cmp
es
cld
repz
sub
mov
adc
mov
mov
sub
fwait
gs
aam
inc
mov
outsb
test
int
popa
movsl
sti
jbe
hlt
xor
push
pop
pop
out
jg
ja
pushf
mov
jmp
lods
insl
mov
sbb
fcoml
mov
push
cmp
or
inc
sbb
loope
push
xchg
stos
mov
push
in
ret
or
cmpsb
ss
push
out
xchg
jecxz
and
pop
imul
addl
xchg
inc
push
xchg
loopne
cld
or
pop
add
bound
jnp
xor
fdivp
arpl
sub
sbb
inc
xchg
adc
lods
enter
shr
xor
add
sbb
mov
jo
dec
ret
mov
mov
out
gs
loopne
call
and
xchg
idiv
es
jbe
test
out
or
cwtl
jns
lds
stos
movsl
mov
cli
dec
lcall
push
out
and
in
outsl
bound
xor
test
out
pop
gs
pop
add
in
in
pop
mov
pushf
add
inc
jnp
loop
xor
add
imul
mov
sbb
mov
pusha
xor
xchg
or
mov
and
jmp
pusha
repz
mov
sbb
jbe
lods
cmp
push
cmpsb
subb
xor
outsl
cmp
and
or
cmp
lods
sub
cli
loop
add
dec
fs
mov
push
mov
das
xor
xchg
sarl
scas
push
idivb
ja
int3
cmp
movsb
xchg
mov
sar
xor
inc
call
hlt
jmp
into
mov
push
lcall
jnp
popa
popa
outsb
jmp
xchg
imul
test
scas
loop,pt
or
mov
add
filds
mov
repnz
pop
sub
out
dec
xor
push
or
push
mov
test
sub
addr16
lds
nop
xlat
mov
add
std
cmpsb
push
and
dec
mov
or
leave
push
jns
js
test
repnz
flds
call
sbb
pop
js
sub
out
cmp
mov
out
rorl
pop
data16
and
sbb
lcall
daa
cltd
imul
add
cmp
into
icebp
imul
loope
mov
test
inc
push
ss
outsl
fdivs
dec
xlat
insb
daa
xor
dec
stc
sbb
cmc
hlt
sub
ss
leave
pop
in
xor
jl
leave
cltd
jge
jno
inc
fsubrp
add
mov
mov
in
or
sbb
mov
mov
lock
fwait
xchg
lahf
sbb
cld
lods
dec
addr16
mov
ret
in
aas
mov
xchg
clc
sbb
lea
loop
dec
pop
pop
push
or
psrld
xlat
movsb
sbb
test
fwait
imul
dec
in
cld
lock
pop
pop
dec
jecxz
dec
xchg
pop
jl
loope
adc
iret
xor
dec
fidivrl
sbb
push
mov
aas
add
inc
je
ja
xchg
cmp
sub
sbb
pop
test
daa
push
mov
dec
outsw
std
add
les
add
and
and
mov
stos
popa
rclb
push
in
stos
jge
mov
sbb
lds
sbbl
mov
dec
int
pop
popa
lret
inc
xchg
jecxz
pop
pop
mov
mov
sbb
loope
push
jnp
jecxz
ds
negb
xor
and
add
mov
pop
xor
jge
mov
unpcklps
sub
mov
mov
add
sbb
movsl
mov
mov
or
jge
clc
inc
outsb
sbb
and
xor
clc
insl
cmp
cmp
mov
mov
test
adc
adc
cltd
adc
dec
testb
push
sarl
push
jo
rcr
arpl
jle
sbb
fsubs
jne
stos
xchg
inc
js
mov
fwait
rcrb
lock
popa
mov
sub
sahf
je
popa
inc
aaa
jl
jae
stos
lds
iret
into
in
lds
jmp
jne
add
iret
je
lret
and
pop
add
mov
jle
or
fadd
test
sbb
xor
sbb
pop
and
testl
sbb
dec
insl
jl
xchg
xor
jge
in
fisubs
mov
jg
repz
push
enter
fdiv
test
call
add
mov
bswap
fisubs
jg
aam
das
mov
jb
mov
pushl
in
mov
std
jp
mov
jmp
into
cmp
fninit
in
xchg
fisubl
insb
fwait
sbbl
aas
shrl
lea
xchg
pop
aas
inc
sub
add
sbb
push
mov
daa
mov
mov
lods
int
int
cmp
in
push
mov
lret
pop
jge
hlt
push
insl
mov
nop
adc
das
sti
pushf
pop
fstpt
mov
jae
les
rcr
fisubrs
fdivrs
xor
jb
mov
jnp
jp
lea
xor
cwtl
cmc
adc
jno
or
loop
arpl
mov
xor
mov
cmp
inc
loop
inc
push
pop
cwtl
ror
stc
stos
imul
xor
push
test
inc
inc
xchg
mov
xchg
add
xor
ss
cmp
mov
mov
movsb
xchg
cmp
jmp
mov
mov
in
cwtl
xchg
stc
dec
xchg
roll
out
dec
mov
push
xchg
jmp
jl
je
aas
ds
pop
ljmp
pop
xor
mov
jle
cmp
add
push
aaa
cmp
lea
lea
movsw
and
repz
sbb
mov
dec
idivl
fsts
dec
adc
jnp
mov
ljmp
jp
xchg
dec
in
shlb
shll
in
or
ret
ret
lock
mov
sub
push
inc
xor
dec
in
xchg
loopne
mov
call
xor
dec
jp
jl
daa
add
xchg
stos
jb
dec
push
cmp
xor
aad
push
and
das
lods
addr16
fs
xchg
dec
xchg
cltd
cmp
stos
jge
push
in
lds
jb
inc
into
outsl
inc
xor
mov
outsb
adc
cmpsb
push
dec
xchg
mov
imull
mov
dec
and
push
pop
das
loop
dec
loopne
xor
dec
push
inc
jp
xchg
add
mov
pop
rolb
xchg
adc
inc
pop
sub
xchg
lds
add
sbb
cmp
scas
adc
in
loope
rorl
fnstenv
mov
lea
stos
stos
lahf
enter
andb
sbb
fimuls
xchg
xchg
pusha
ljmp
pop
jb
lds
lods
lret
or
sub
mov
push
test
and
cmp
mov
xchg
pop
adc
sub
lods
pusha
cmp
hlt
sti
fsubl
xor
scas
add
test
mov
fdiv
push
addl
jl
scas
xor
sahf
dec
ljmp
inc
jp
imul
fnstsw
cltd
mov
sub
xlat
sbb
cmp
jmp
jo
imul
jne
or
adc
mov
dec
xchg
inc
xlat
xor
and
xor
mov
push
in
jb
jge
cmp
jecxz
mov
push
cltd
pop
sbb
add
cmp
mov
das
test
push
cmp
ja
bound
scas
movsl
cltd
in
mov
into
daa
and
xchg
sbb
dec
inc
nop
cmp
dec
pop
ret
stc
lcall
jne
inc
pop
stos
loope
add
jmp
loop
nop
pop
inc
cs
xchg
lods
jns
mov
inc
xchg
dec
in
mov
ror
jg
lods
pop
inc
cmpsb
and
push
lds
inc
add
mov
pop
dec
xchg
mov
test
add
push
cmp
push
loop
sub
push
les
or
or
movsl
stos
inc
sub
mov
jb
add
jnp
punpcklwd
push
ljmp
pop
and
mov
jno
cmp
loopne
xchg
daa
stos
stos
in
push
push
cs
loopne
adc
mov
jl
push
sbb
adc
cli
loop
sahf
out
popf
mov
and
jae
fadds
inc
mov
push
loop
incb
lock
mov
clc
mov
clc
bound
push
push
int3
fstpl
test
ret
mov
clc
cmp
sub
lock
lods
call
pop
dec
add
shrl
leave
jmp
outsb
jns
aam
pop
xlat
pop
mov
gs
test
inc
add
scas
xor
outsb
dec
xchg
jb
or
lock
int3
lods
inc
jmp
mov
cmp
lahf
and
testl
prefetcht1
scas
popa
pop
and
out
fnstenv
mov
lret
inc
push
mov
mov
arpl
rcll
pop
pop
stos
push
mov
pop
leave
cmp
cmpsb
repnz
shll
daa
sbb
xor
cmp
jmp
movsb
pop
push
pop
and
inc
push
popa
fwait
arpl
jne
out
or
test
mov
daa
les
inc
push
mov
mov
aad
cltd
or
add
rcl
pop
loopne
push
out
dec
popf
cwtl
mov
mov
gs
jecxz
xchg
in
sbb
out
int3
push
xchg
push
mov
sub
jb
mov
and
pop
in
adc
add
and
xor
xchg
xchg
push
inc
or
out
cmc
push
inc
scas
mov
icebp
loope
jmp
rcll
lea
fwait
jmp
mov
rorl
jo
int
inc
pop
shrl
lcall
sub
inc
pusha
in
sub
pop
or
push
repz
clc
mov
pop
into
jae
sub
pop
jnp
out
test
mov
inc
adc
fwait
lahf
cmp
xor
leave
mov
xchg
sbb
lds
int
add
addb
mov
leave
adc
jp
icebp
mov
mov
jns
lods
sub
and
imul
xchg
xchg
add
jnp
sbb
xchg
ficompl
loope
cmpb
pop
or
dec
cmp
inc
imul
cwtl
dec
push
push
jbe
decl
pop
pop
lcall
push
aad
stc
imul
in
push
sahf
stos
pusha
jmp
jo
cld
add
stc
fsubrs
call
test
lcall
stc
xor
pop
stos
jmp
push
push
jne
test
sbb
and
out
jmp
inc
mov
sbb
mov
sbb
insb
inc
sub
in
imul
dec
mov
xchg
fldln2
sbb
cmp
rcll
lret
fwait
xchg
ror
push
fs
fdivrs
movsl
mov
sbb
icebp
xor
les
xchg
jg
lods
pushl
and
add
push
add
imul
mov
sub
dec
push
loop
dec
call
fimuls
dec
push
xor
popa
aas
sub
sbb
div
ds
xchg
es
cmp
icebp
and
add
imulb
ret
jb
jle
ss
xchg
cld
test
cmp
xor
mov
mov
lods
pop
movsl
fildll
push
cmp
sbb
pushf
subb
inc
add
inc
fidivs
push
data16
movsl
sub
dec
push
mov
and
aam
fimuls
ret
fisttpll
mov
int
out
out
mov
cltd
jns
stos
mov
pop
cld
push
add
xchg
outsl
test
sarb
push
adcl
add
iret
jle
ss
dec
fiaddl
sbbl
cld
ss
inc
cmp
push
stc
add
pop
sbb
push
jl
mov
popa
repz
pop
mov
cmp
adc
pop
mov
add
ljmp
aaa
rcr
loopne
lds
xor
fisubl
test
ret
aaa
pop
xor
mov
addb
inc
sti
mov
xor
movsb
dec
or
lcall
cmp
dec
out
xorl
push
mov
jg
jb
sub
push
lods
pop
sbb
pop
jle
imul
sbb
inc
push
dec
ret
orl
jge
adc
adc
insl
ljmp
mov
mov
int3
ja
rcr
ss
movsb
jae
push
xchg
nop
adcl
lcall
stos
add
sbb
int
jnp
or
call
mov
ss
or
inc
loop
aas
xchg
mov
das
add
ljmp
es
adc
sub
dec
sbb
pop
ja
push
or
adc
call
push
call
dec
out
std
or
lret
dec
or
cmpsl
mov
rclb
and
mov
lcall
lea
daa
add
dec
fisubrl
lods
outsb
inc
or
lcall
repz
aad
jecxz
pop
cwtl
stos
mov
lea
pop
scas
mov
inc
push
add
xchg
sahf
sarb
sbb
out
mov
jnp
int
add
fbld
insl
imul
pop
inc
fnsave
aas
xor
sub
add
call
and
aaa
sub
ja
rcl
out
rclb
in
sub
inc
sbb
fidivrs
nop
mov
mov
loopne
lds
fistpll
pushf
in
clc
ja
xchg
mov
sbb
and
insb
loopne
fmulp
xchg
cmpsb
das
jo
adc
push
bound
sbb
ret
sbb
lods
icebp
jmp
adc
xor
and
jge
in
pop
adc
daa
je
mov
aad
pop
jbe
xchg
inc
push
popf
xchg
int3
xor
cwtl
mov
rcrb
hlt
sbb
das
int3
push
cmp
fadds
loope
icebp
mov
jnp
xchg
cmp
std
add
mov
mov
std
cmc
add
ret
arpl
sti
out
outsl
sbb
nop
xor
dec
sbb
bound
mov
inc
cltd
mov
mov
out
mov
loopne
call
fcomps
ja
or
nop
mov
scas
das
lret
inc
xor
test
in
fsubr
xchg
sbb
or
mov
push
push
xchg
in
sub
pop
daa
loope
cmpsl
push
je,pt
mov
in
sbbl
push
mov
xchg
int3
mov
push
clc
dec
imul
ljmp
incb
cld
xchg
or
es
sub
movsb
in
push
inc
sbb
cmpsb
aaa
daa
pop
mov
pop
test
dec
addw
xchg
and
fcmovbe
xchg
fs
out
cvtpi2ps
mov
jmp
cmp
push
fwait
in
lods
sbb
dec
loope
mov
clc
cmpsb
mov
dec
shr
sahf
cmp
stos
jo
cs
and
sub
rcll
movl
mov
das
push
and
push
aam
pop
adc
enter
in
xchg
mov
push
out
inc
mov
pop
xor
mov
clc
out
clc
xor
movsb
jg
cmc
idivb
popf
stos
inc
mov
cmp
addr16
and
sbb
dec
mov
out
call
jo
or
or
in
mov
push
mov
cpuid
push
adc
cmp
sbb
fdiv
sub
adc
divb
xor
lock
mov
jge
mov
inc
test
les
jbe
push
jnp
ljmp
movsl
push
test
movb
int3
movsl
pop
aaa
daa
lret
lods
cmpsl
xchg
xorb
xor
aas
pop
adc
adc
xchg
popf
mov
and
aas
les
jge
xchg
in
push
jbe
hlt
mov
cmc
js
imul
push
jae
cld
adc
push
sbb
test
out
xor
test
inc
aas
movsb
xor
mov
push
gs
mov
dec
lret
jecxz
push
int3
jl
sub
out
jno
scas
adc
out
cwtl
mov
movsb
pop
je
xchg
jne
adc
cmp
cmc
xchg
scas
rcrl
push
fs
mov
subb
sub
outsl
mov
push
outsl
pop
cs
shll
je
inc
push
inc
mov
pop
mov
inc
shlb
add
push
cmp
adc
adc
mov
ficomps
aam
sub
sahf
stos
push
jns
and
ret
mov
adc
hlt
je
sub
xor
sub
lahf
dec
jno
push
test
push
sbb
push
cmpsl
adc
cmp
mov
or
scas
shl
jmp
jae
jmp
inc
and
outsl
sub
cmp
popa
in
dec
dec
and
sar
sahf
add
call
lcall
jp
dec
lret
jmp
xchg
mov
movsb
mov
mov
xor
scas
dec
fidivl
fistps
mov
sub
mov
js
xchg
les
xor
loop
das
cmpsl
xchg
ja
scas
out
fwait
pusha
pop
push
cmpsb
xor
xlat
mov
sub
and
pushf
mov
sub
inc
jbe
inc
cmpsl
or
pop
jno
sar
mov
dec
rorb
scas
pop
fists
clc
scas
jnp
adc
dec
sbb
cmp
adc
arpl
cmp
jmp
jo
clc
cs
mov
call
data16
push
fdivp
popa
mov
add
xchg
fcompl
daa
sbb
jbe
push
inc
mov
mov
push
xor
add
divl
call
push
in
dec
leave
sub
cwtl
aaa
pushf
jns
cmp
inc
xchg
daa
pop
cmp
cmp
or
je
shr
fsubr
arpl
xor
mov
and
inc
insb
loopne
jb
lret
out
bound
jg
pop
push
out
cmpsl
jg
pop
pop
fisubs
mov
lods
and
sub
and
cltd
fst
shr
add
clc
cwtl
pop
pop
inc
jle
cmp
cltd
mov
xorb
jg
out
dec
loope
iret
es
xor
jmp
ficompl
inc
std
fucomi
cmp
lods
pop
mov
inc
lret
cli
hlt
jbe
popf
dec
pop
aas
jne
xchg
jbe
scas
aas
adc
sbb
inc
notb
inc
imul
rolb
imul
xchg
xlat
add
daa
ret
push
adc
lock
in
cmp
loop
fisubrl
in
cld
push
rol
adc
idivb
cmp
iret
cs
lods
aaa
pop
push
stos
adc
dec
push
fwait
dec
mov
pop
in
add
jl
cmc
jns
repz
ror
cltd
cltd
int3
test
decl
dec
iret
fdivrs
ja
xlat
adc
shrl
pop
pusha
mov
call
jg
cmp
mov
leave
mov
adc
xchg
lret
mov
mov
mov
add
or
iret
loopne
mov
push
xchg
inc
push
or
mov
je
int
jae
rcrl
mov
ficomps
adc
or
xchg
xchg
mov
adc
popl
ss
or
jae
ljmp
je
jmp
add
fwait
dec
push
xor
push
pop
cmp
mov
test
pslld
mov
pop
pop
mov
les
inc
or
sub
test
dec
pop
and
in
xchg
sbb
mov
cmpsb
pusha
icebp
xorb
fbld
ss
mov
pop
aaa
and
sbb
fucomi
movsl
xorl
sarb
mov
jge
dec
scas
push
ss
pop
scas
std
xchg
sbb
sbb
cmp
jp
pop
jo
mov
ja
cmp
scas
push
dec
mov
test
jb
arpl
stos
fsubrs
push
xor
arpl
clc
addb
ret
sub
or
sbb
pop
movsl
or
xchg
cmp
loop
js
or
fldl2e
xchg
aad
and
push
ret
push
rorb
jmp
movsl
mov
sbb
leave
dec
ljmp
enter
mov
stc
aam
lcall
emms
adc
push
dec
jg
mov
cmpsb
ss
ja
pop
mov
and
into
lret
push
movd
fs
andl
fldz
or
test
ficoml
adc
lret
or
popf
jns
int
or
add
lods
or
cli
stos
je
ficompl
les
xlat
mov
test
xchg
and
xchg
loope
xchg
pushf
ss
es
or
popf
mov
out
jne
jle
xchg
ficompl
in
out
pop
xor
jp
in
shrb
rcll
insl
rclb
loope
cs
subl
and
mov
inc
sbb
fwait
push
negb
fnsave
ret
inc
dec
sbb
inc
fwait
js
shrl
sbb
dec
sbb
pusha
jle
rcrb
jge
rcr
cmp
mov
shlb
addr16
mov
scas
pop
inc
sub
pop
adcb
mull
and
enter
cmpsl
fadds
xor
dec
sub
push
mov
movsl
shrl
call
inc
jle
mov
stos
jl
stos
or
lods
clc
dec
pop
jae
adc
pop
fs
mov
mov
addr16
mulb
in
jbe
sub
test
and
aam
insb
data16
std
adc
js
popa
popa
outsl
lret
repnz
adc
stos
or
mov
xchg
adc
loopne
mov
add
or
stos
mov
iret
fnstcw
sbb
inc
cmp
or
dec
mov
fadds
out
mov
sahf
dec
pop
gs
enter
xor
and
mov
adc
xchg
clc
adc
outsb
js
cmp
rcrb
pop
insl
jne
push
shrl
mov
xor
xor
push
test
mov
xchg
movsl
mov
int3
dec
inc
mov
pop
dec
dec
mov
and
das
mov
cmp
imul
jne
inc
aad
and
stc
push
shrb
push
adc
ficoms
out
ja
mov
mov
or
mov
jmp
std
dec
xor
fsubl
xchg
sbb
cwtl
std
mov
adc
mov
lock
xchg
sahf
sub
add
in
cmp
rclb
loop
mov
outsl
lcall
dec
sbb
jecxz
or
mov
pop
inc
sub
fs
jmp
mov
dec
sub
jb
and
aaa
adc
sbb
pop
bound
iret
and
rcrl
adc
sti
sub
pop
repz
sub
popf
ljmp
cmp
cmp
jge
mov
addr16
xchg
jp
jo
lock
push
fadds
loopne
ds
inc
mov
loope
cmp
add
js
loope
mov
xorl
sarl
inc
adc
xchg
mov
jle
div
aam
in
sub
cmp
push
sahf
or
outsb
mul
test
xor
push
out
imul
and
fucomp
roll
pop
iret
movsl
es
cmp
insl
js
cmpsl
push
pop
pop
cmp
in
popf
leave
das
and
push
sahf
pusha
hlt
in
popf
mov
out
leave
and
or
lcall
and
mov
bound
mov
loop
lahf
movsb
pop
mov
dec
pop
enter
hlt
mov
cmp
mov
test
jbe
ror
push
iret
fisubrl
inc
cli
or
into
cmp
outsb
lahf
fcoms
xchg
sbb
mov
mov
or
icebp
adc
mov
lods
ss
pop
adc
jl
inc
je
xchg
jge
adc
jno
adc
gs
xchg
push
jbe
jp
fsubrp
lahf
lock
js
mov
mov
out
addr16
cmp
add
xchg
pop
xchg
in
inc
mov
aas
push
or
pusha
jecxz
ljmp
outsb
inc
push
cmp
xchg
mov
mov
push
push
leave
outsb
add
test
scas
lret
xchg
xchg
sbb
shlb
pop
repnz
lret
arpl
inc
mov
sbb
subl
cld
add
sbb
fucomi
mov
pop
inc
daa
jo
into
incl
sub
imul
xchg
scas
pop
xchg
je
adc
cmpsl
cmp
jge
lahf
push
cmp
mov
add
inc
xchg
jnp
movsl
mov
pusha
pop
daa
lcall
mov
pusha
ret
pushf
mov
ficoml
das
sahf
repnz
sub
adc
cli
or
sub
mov
jbe
cmp
xchg
and
lahf
aaa
stc
addr16
cli
in
push
lea
sar
loop
and
fnsave
push
mov
lret
icebp
adc
jmp
inc
icebp
mov
lods
leave
shll
cmp
mov
lds
das
cmpsl
dec
jns
sbb
sarl
push
cltd
cltd
iret
pop
lock
adcb
and
mov
fldcw
outsl
xchg
lcall
fidivs
mov
rclb
or
lret
mov
insl
ljmp
sbbb
insl
out
xor
mov
out
mov
or
call
sbb
and
xor
adc
jns
adc
push
and
out
mov
or
cmp
jne
repz
pusha
ss
hlt
mov
inc
push
pop
add
adc
add
inc
fwait
cld
mov
pop
test
nop
xor
int3
aas
rcrb
cli
pusha
dec
push
xchg
xlat
inc
xchg
call
js
jbe
mov
xchg
pop
test
mov
and
xchg
adc
ss
andb
mov
mull
lods
add
or
lret
xlat
xor
jns
push
mov
pop
hlt
es
std
or
add
outsl
jns
fucomp
xor
dec
pop
popa
pop
hlt
imul
popf
add
push
mov
imul
and
sub
add
pusha
push
fcompl
jbe
jns
jecxz
fs
jno
cmp
jbe
sbb
clc
mov
push
add
sub
cmc
sbb
stos
ja
ret
lock
lods
pop
pop
xchg
imul
das
ret
cmc
in
pop
sub
xor
xor
js
insl
jbe
rcr
xor
mov
adc
xlat
loop
insl
sub
outsb
mov
xchg
arpl
out
repnz
add
xlat
lods
add
mov
test
cmp
jno
sarb
aaa
loope
cmp
lods
inc
loop
ret
leave
pop
mov
sub
loop
pop
xor
inc
push
icebp
inc
and
inc
lea
dec
mov
cmpsb
push
addr16
cld
sub
pop
jl
cmp
push
inc
push
stos
adc
sti
int
frstor
inc
add
out
pop
or
add
inc
jp
push
jg
dec
mov
inc
aaa
fildll
pushf
jecxz
pop
aaa
and
mov
orl
aad
cs
sbb
dec
imul
fimull
dec
push
out
shll
sub
xchg
rolb
loope
js
xor
pop
repnz
and
in
shr
mov
jb
rclb
jo
rclb
dec
lahf
mov
xor
lds
pop
mov
outsl
inc
into
inc
pop
jae
xor
and
xchg
lock
sbb
pop
pusha
push
cwtl
gs
idivb
aaa
pop
and
divl
ret
inc
lods
xchg
and
xlat
push
outsb
data16
data16
out
rcr
sbb
int
cwtl
subb
cld
fmuls
pause
div
sbb
push
or
stos
jb
xchg
sarl
sbb
and
adc
andb
aad
in
pop
sahf
test
mulb
stos
mov
jnp
mov
push
pop
ficoml
push
rcrb
adc
inc
cltd
ss
out
xchg
loopne
mov
loop
pop
mov
adcb
adc
lcall
cmp
ret
lret
sti
cld
cmp
push
mov
or
addl
cmp
int
loope
enter
fistpl
mov
mov
in
xchg
lds
or
cli
push
or
xchg
or
push
xor
dec
call
repnz
jg,pn
lret
test
sbb
test
fcomps
xchg
xlat
ret
sti
and
lock
cmc
movsl
mov
sub
imul
cmp
cwtl
inc
push
shrl
pop
insl
adc
addr16
sub
shrl
fucomip
jmp
cs
dec
adc
sbb
add
sbb
xchg
les
xchg
xor
push
fstl
int3
pop
sub
pop
popa
data16
cwtl
cmpsb
sbb
push
push
inc
sbb
movsb
pop
nop
into
mov
pop
xchg
ret
mov
cmp
enter
pop
fadds
popf
push
inc
test
rorl
mov
movl
add
into
jmp
cmp
mov
fidivrs
mov
sbb
sbb
fisttpl
nop
or
mov
dec
inc
xchg
stc
adc
push
lds
or
sub
sub
mov
aad
mov
scas
jo
fwait
cli
pop
lods
mull
pop
mov
mov
in
push
pop
push
test
jl
mov
roll
sbb
mov
mov
int3
bound
xlat
sub
and
je
mov
jmp
ljmp
push
notb
push
push
ret
cld
push
test
lds
xchg
mov
sub
rcl
lret
test
fs
fdiv
ds
outsl
sbb
pop
out
lods
repz
or
adc
out
rcrb
jae
jg
leave
bound
pop
sbbl
xchg
roll
mov
cmp
arpl
cltd
test
jns
mov
cmp
sub
sub
orb
test
je
or
pop
addb
adc
jge
adc
movb
adc
mov
lcall
push
jns
ss
stos
faddl
mov
in
aam
in
or
adc
scas
mov
sbb
jne
icebp
cld
shrb
add
data16
jmp
aaa
std
jnp
or
jno
test
shll
inc
and
lods
adcl
insl
jno
loopne
dec
xchg
sub
xchg
rcrl
fcompl
arpl
dec
mov
mov
and
jne
push
nop
add
xor
lret
in
sbb
mov
sub
xchg
pop
xor
adc
call
mov
dec
xchg
scas
loope
adc
inc
out
lret
mov
sbb
test
pop
sahf
mov
jge
jg
sahf
lret
lcall
sarl
mov
lahf
mov
stos
adc
cwtl
fs
push
test
jne
mov
mov
xchg
imul
shll
push
std
pop
push
cld
out
sbb
int3
adc
call
mov
xor
or
shlb
std
or
repz
mov
mov
sbb
leave
in
shr
test
pop
mov
sub
sub
stos
fsubrl
aad
stos
inc
cwtl
aad
into
push
xchg
fldenv
cwtl
jge
fadds
call
adc
insl
int3
scas
fldcw
xchg
jmp
adc
pop
cmp
lods
sub
inc
push
push
mov
xchg
popf
push
fld
fisttps
insb
xor
rcl
cmc
mov
nop
xchg
lds
lret
adc
frstor
shrb
adc
mov
jl
test
push
scas
aaa
out
xchg
sbb
repz
repnz
jmp
inc
aas
jecxz
nop
add
stc
cmp
cmp
mov
dec
mov
mov
ja
sbb
fists
pop
inc
lcall
test
insb
sbb
ljmp
insb
subl
pop
daa
push
inc
or
push
xor
jg
push
fiadds
pop
jae
ja
and
and
mov
lock
rcrl
sahf
mov
testb
mov
and
adc
ja
and
lcall
lret
fs
dec
or
das
jae
sbb
fndisi(8087
dec
push
insb
cmp
cs
jae
push
adc
lock
mov
aas
jle
jmp
gs
or
rcrb
mov
adc
xchg
out
jecxz
pop
push
mov
pusha
cli
mov
movsl
nop
mov
adc
add
je
pushf
std
add
mov
data16
enter
je
shll
jno
or
sarl
sbb
or
inc
or
fbstp
mov
in
adc
or
incb
fisubs
dec
push
les
frndint
in
xchg
or
or
xor
inc
cld
je
adc
sbb
fnstenv
jge
adc
inc
adc
add
notb
inc
dec
or
cmpsb
inc
sahf
jbe
in
ljmp
leave
mov
bound
loope
cmp
xlat
add
insl
out
xchg
repnz
lret
jne
sbb
ljmp
test
mov
dec
pop
jge
xchg
push
jl
cmp
mov
mov
mov
lret
ficompl
mov
int
lds
bound
jae
mov
repz
mov
push
mov
outsb
int
jp
sbb
fldt
or
mov
lcall
ljmp
pop
pop
add
adc
sub
and
gs
and
or
inc
rcll
fwait
pushf
std
movsb
inc
popa
inc
xchg
pop
inc
out
arpl
mov
sbbl
dec
popa
sub
push
pushf
sbb
into
jecxz
jnp
in
movsl
dec
shrb
out
mov
xchg
push
mov
push
movsl
test
jae
fs
adc
je
inc
lods
add
xchg
lea
adc
mov
daa
inc
nop
movl
cmp
mov
stos
adc
icebp
fwait
xchg
mov
adcb
xchg
sub
aaa
aas
cld
push
cmpsl
out
or
sahf
out
lret
add
xchg
lcall
gs
fdivr
shrl
sub
pushf
outsl
mov
mov
jmp
cs
push
imul
pop
mov
sahf
call
cmc
xor
cmp
pop
dec
mov
sbb
pop
insl
jo
adc
and
xor
loop
fcmovne
pushf
int
xchg
cltd
stc
aas
jg
mov
out
sub
cmp
int3
outsl
xchg
int3
into
and
mov
scas
neg
iret
gs
popf
sbb
cld
adc
lea
popa
push
add
incb
and
jb
outsb
dec
fs
pop
jle
jno
test
scas
hlt
fnstenv
push
cmc
imul
pop
das
cmp
fimuls
pop
loop
subb
pop
inc
sub
dec
cmpsb
xchg
jl
ljmp
mov
mov
mov
dec
mov
or
lea
pop
adc
dec
add
jnp
xchg
pop
xchg
lods
in
int3
loop
mov
mov
rolb
rcl
mov
fmuls
repnz
mov
mov
xchg
mov
adc
mov
or
pop
sbb
fwait
call
movb
jecxz
jmp
xchg
sub
rorl
pop
mov
les
pop
push
call
xchg
int3
sub
aaa
jecxz
jle
cs
cltd
mov
cmc
inc
imul
sahf
jecxz
jns
sub
imul
inc
xor
lret
lcall
sarb
stos
sbb
jbe
fsubrl
push
inc
dec
nop
imul
mov
pop
xchg
xchg
ds
scas
dec
insl
jp
mov
xchg
std
push
cmp
ds
jae
dec
cmp
cmc
add
add
inc
pushf
test
adc
jge
xor
imul
jno
insl
sbb
jae
jecxz
repnz
ss
mov
loope
test
int3
lahf
movsl
xchg
mov
dec
sub
lea
xor
rcrl
outsb
pop
push
adc
dec
dec
test
insl
xchg
add
fisttpll
mov
jmp
dec
mov
fisubs
sbb
aam
mov
jmp
or
pop
add
push
clc
je
rcrl
imul
ret
cmpsb
movsb
xor
and
rcl
mov
popa
dec
std
je
or
sub
cs
sub
adc
mov
outsl
into
les
xchg
push
mov
xor
xchg
insb
pop
lods
push
xchg
aad
stos
in
push
add
fstpl
out
lea
shlb
out
add
scas
mov
dec
mov
push
inc
mov
cmp
jl
xchg
mov
es
jb
into
jl
inc
pop
xor
stos
in
data16
pop
data16
scas
jecxz
pushf
test
and
cltd
cs
xchg
fwait
in
or
inc
popa
sbb
sub
push
xor
andl
cmp
icebp
shl
iret
sub
or
pop
daa
nop
fistl
int3
out
mov
push
in
pop
mov
jnp
and
lcall
out
mov
aaa
xchg
jge
mov
orb
cmpsl
jae
sub
cld
mov
sahf
push
or
insb
sarb
rclb
and
mov
clc
rolb
dec
out
decb
sti
dec
xchg
lret
fadd
ret
mov
or
mov
aad
cmpl
fidivrs
int3
cmp
xchg
dec
add
mov
push
and
call
inc
int3
jb
mov
add
push
sarb
adc
mov
xor
mov
fdivr
sbbb
xorl
repnz
int
mov
aad
mov
pop
aad
mov
dec
fisubrs
negb
clc
loope
lods
inc
or
mov
loop
insl
push
ljmp
mov
or
xlat
push
add
xchg
and
cltd
ret
dec
out
fidivs
mov
rolb
and
inc
mov
inc
lcall
adcl
inc
pop
fildll
fidivl
fcmovne
add
push
mov
jecxz
sub
or
sahf
sbb
push
and
sbb
mov
mov
int3
roll
adc
dec
or
push
lret
loopne
push
mov
cs
sahf
mov
jge
stc
es
cwtl
xchg
out
mov
lcall
int
mov
inc
dec
mov
les
jmp
mov
shrb
arpl
ljmp
jo
mov
jle
js
jg
sub
adc
outsb
adc
in
inc
push
mov
xlat
push
pop
jle
mov
daa
mov
xchg
ds
insb
add
aaa
nop
push
sbb
pop
lock
xchg
imul
fmul
xchg
sbb
test
stos
adc
xor
mov
push
in
hlt
enter
jp
cltd
pop
add
pop
test
and
mov
mov
shl
lahf
sbb
pop
divl
clc
lret
out
imulb
adc
inc
das
movsl
repnz
sub
mov
lods
rorb
adc
xchg
jmp
dec
repnz
ror
js
aam
popf
imul
test
cmc
adcl
mov
out
inc
cwtl
jecxz
sub
add
mov
add
mov
shlb
mov
mov
mov
inc
jg
movsl
das
data16
xchg
es
sbb
add
fwait
scas
xchg
xchg
xchg
sbb
xchg
cmp
test
cld
cmp
shl
xor
pusha
loop
addr16
out
mov
mov
sub
enter
cmp
mov
mov
mov
jo
clc
mov
sub
push
inc
shrl
pop
cmp
jecxz
stos
aad
dec
bnd
fwait
test
fisubl
xchg
sub
insl
hlt
xor
insl
fs
mov
mov
lock
jp
sub
stos
inc
xchg
cmpsb
addr16
xor
jo
outsb
std
cmpsl
gs
mov
cmp
adc
lods
push
xchg
pusha
push
in
in
push
mov
or
jmp
sub
mov
mov
dec
push
and
push
sub
mov
xor
sub
inc
out
out
mov
sub
adc
inc
mov
sub
inc
add
cmp
in
mov
inc
inc
add
aas
push
sub
xchg
nop
pop
mov
shll
inc
sub
stos
aas
sub
xchg
adc
or
mov
or
cmc
inc
and
push
lods
icebp
insl
mov
in
sub
mov
jmp
mov
jnp
dec
cmp
jg
cwtl
cmc
iret
pop
xchg
sub
inc
lods
jne
push
mov
push
dec
mov
or
bound
pop
ss
and
lcall
push
xor
add
adc
mov
mov
bound
fcoml
push
sub
xchg
out
cmp
rorl
popa
test
or
js
dec
jge
lea
cld
or
xchg
jo
jns
scas
pop
aam
mov
push
mov
pushf
lds
push
lret
sti
push
outsl
fs
inc
and
cwtl
fwait
push
pop
test
stos
fs
cltd
neg
test
loop
or
pop
lods
lret
jb
bt
negl
mov
test
push
popf
out
sub
repnz
rcll
in
es
pop
pmaddwd
mov
call
fisttpl
sub
sti
push
pop
mov
leave
inc
push
scas
lods
cmp
shrl
aas
aaa
ja
pop
into
outsb
icebp
into
mov
xchg
pop
adc
movsl
add
lahf
xchg
divl
stos
jle
arpl
mov
mov
lret
jmp
loopne
sbb
pop
mov
iret
push
xchg
sahf
jg
call
lea
rcrb
cmpsl
call
aas
loopne
in
push
xchg
dec
ficoml
imul
lret
gs
push
into
test
xor
adc
mov
imull
cmp
loop
popf
xor
call
clc
add
push
adc
ficomps
dec
cs
gs
sbb
mov
sti
or
xor
push
mov
out
mov
stos
mov
mov
or
push
push
pop
aas
inc
sub
clc
push
lods
dec
xlat
insl
xor
daa
stos
xchg
push
jg
lcall
push
jg
mov
adcl
or
pop
loop
cmp
xor
jl
int
xchg
in
inc
loopne
out
and
cwtl
dec
xchg
mov
int3
push
popa
je
xchg
jge
adc
or
outsb
aaa
inc
mov
imulb
rcll
and
mov
inc
jno
sahf
in
add
in
sbb
out
daa
lret
mov
or
pop
mov
push
popa
add
ds
mov
addl
mov
ja
jb
pop
bound
rcrb
inc
push
mov
mov
cmpb
xchg
cs
dec
jb
pop
dec
mov
test
fs
jns
ja
inc
dec
fbstp
data16
loope
in
mov
lret
ss
aaa
ds
bound
sti
xchg
cld
mov
cmp
js
pop
ret
push
ja
ss
push
repnz
jb
fsubl
sub
pop
cli
fwait
push
mov
insb
iret
pop
loop
movb
movsb
fldt
ja
or
lret
jb
dec
fistpl
mov
cmc
sbb
xchg
sbb
sub
mov
out
loope
mov
icebp
clc
fwait
adc
mov
push
hlt
fildll
ljmp
jg
adc
sub
stos
nop
dec
fistps
cmpb
xchg
je
add
xchg
mov
cmp
test
adc
call
mov
mov
push
loope
adc
push
fadd
mov
call
pop
in
push
xchg
fwait
out
cmpb
mov
mov
pop
mov
mov
add
cmpsb
and
jno
ljmp
pop
test
and
idiv
and
fcompl
rcr
mov
add
cmpsb
test
not
mov
es
push
cmpsb
push
inc
mov
lea
mov
fs
pop
add
out
mov
mov
into
adc
pusha
fcmovnb
jge
lods
lock
xlat
jp
pop
pusha
mov
call
nop
stos
mov
pop
or
add
insl
mov
mov
add
lods
and
icebp
in
stos
jns
adc
into
xchg
int
lret
jge
inc
inc
fwait
inc
hlt
cmc
je
fcomps
add
pop
xor
out
jmp
dec
popa
fwait
adc
xchg
inc
stc
mov
lds
pop
xchg
cmc
cmpsb
hlt
mov
adc
lock
cmpsl
add
fmull
fdivrp
shlb
movsb
getsec
cmp
push
es
fsub
jge
negb
lods
pop
daa
dec
xor
test
outsl
or
pop
popf
jge
scas
and
stc
dec
sbb
int
into
mov
stc
push
repz
mov
stos
movsb
push
sbb
mov
or
enter
fs
cmp
mov
std
jne
pop
xchg
cli
cld
das
sarb
pusha
filds
lret
xorb
pop
movsl
add
daa
rclb
fwait
mov
jp
cld
dec
gs
leave
leave
lock
loopne
shl
cmc
pop
sahf
cmp
lcall
mov
pop
sub
and
fimull
aam
cs
pop
loopne
or
mov
lds
outsl
hlt
or
imul
push
mov
sahf
mov
int
lcall
push
dec
jmp
xchg
xor
fmull
fiadds
add
loop
dec
jne
xchg
or
xor
inc
sbb
cmp
xchg
sbb
mov
sbb
jbe
rolb
nop
adc
mov
nop
add
mov
pop
or
aaa
sub
xor
stos
xor
arpl
mov
dec
inc
fimuls
jne
cmc
lods
out
leave
loopne
and
jb
scas
popa
mov
add
cmp
insb
mov
imul
orl
cmpsl
jbe
divl
frstor
iret
leave
pushf
movsb
mov
jb
loop
jo
mov
sub
cmc
cwtl
mov
popa
sub
test
xor
push
vmread
inc
xor
add
mov
push
imul
push
jb
out
cltd
cmp
mov
int3
sahf
adc
mov
mov
nop
cmp
inc
cmpsb
add
pusha
or
push
add
repz
filds
out
rcrl
inc
aad
adc
test
ja
js
test
popf
andps
xchg
cmp
sti
dec
shr
xchg
add
xchg
push
push
and
aaa
aad
fbstp
adc
cs
xchg
std
data16
int3
xor
cmpsb
sbb
cvtps2pi
push
mov
push
mov
push
adcb
data16
test
addr16
lcall
jmp
jle
pusha
inc
int3
pop
testb
jo
je
inc
repz
cmpsb
or
add
add
sti
or
ficomps
and
test
xor
pop
pop
pop
sbb
iret
stos
xor
sub
sub
mov
iret
rorl
adc
shlb
pop
aas
testb
in
nop
popa
mulb
adc
pop
adc
out
dec
shll
ret
dec
lret
or
dec
in
or
filds
cmp
adc
add
test
xchg
mov
sti
rcr
inc
cmp
loop
movsl
test
mov
enter
jno
aaa
inc
jp
mov
mov
test
mov
mov
jecxz
cmpl
lods
mov
std
stos
dec
divl
mov
into
jle
mov
dec
js
scas
scas
js
stos
clc
xchg
ret
mov
cs
loopne
lahf
fstl
gs
das
daa
adc
mov
loope
movl
sar
std
pop
xchg
dec
xor
lcall
jle
ret
mov
iret
mov
sub
jns
jb
mov
mov
sub
sbb
adc
sti
movsb
enter
pop
fmull
jecxz
lret
stos
mov
jg
mov
ret
sub
fincstp
fxtract
and
and
into
and
mov
sbb
or
sbb
adc
push
lcall
cmp
pop
or
lret
in
in
jae
js
push
jl
cmp
add
inc
push
sbb
out
daa
and
sarl
push
icebp
andb
pop
sbb
cwtl
and
stos
shrl
and
pushw
pushf
cmp
cwtl
push
push
stc
scas
mov
jbe
jle
or
mov
outsl
sbb
test
pop
inc
jmp
jnp
mov
nop
mov
fwait
push
mov
fcmovnu
inc
insb
cli
jp
ja
xchg
icebp
repnz
fnsave
in
scas
outsl
ficomps
popa
sub
stc
mov
dec
in
test
pop
cwtl
adc
push
sti
jnp
cs
cwtl
push
push
inc
mov
rol
or
jg
cmp
cmpsl
push
test
xor
into
and
aaa
loopne
repnz
push
sub
cltd
lahf
mov
xchg
jle
into
in
push
adc
and
or
jmp
push
mov
mov
aaa
in
sub
jmp
xchg
xorb
cmpsl
mov
movsb
xchg
cmp
jnp
arpl
lret
shll
cmp
fimull
nop
jno
xchg
cmp
add
xchg
pop
add
nop
js
and
and
pop
daa
popf
xchg
mov
add
arpl
xor
sahf
js
inc
cmp
cwtl
xchg
push
imul
roll
cmp
and
push
mov
pop
jl
std
insb
sbb
out
enter
pop
test
sahf
outsl
test
push
ljmp
pusha
iret
pop
cmp
or
mov
add
arpl
dec
aas
lods
mov
mov
outsb
push
out
cmpsb
mov
clc
cwtl
gs
scas
mov
lds
icebp
bound
mov
sbb
lret
and
add
sub
es
mov
fcmovnu
mov
decb
mov
scas
mov
les
mov
mov
jne
cs
mov
cmp
int
mov
and
xor
cltd
jns
mov
call
iret
out
fscale
add
test
lahf
mov
fnstenv
xor
jg
lds
aaa
in
in
push
cltd
inc
inc
int3
fidivs
mov
subl
aam
insb
cld
xchg
mov
xchg
and
mov
stos
inc
sbb
stos
aad
push
sub
lret
adc
sbb
out
cs
fisubs
inc
jb
or
insb
lea
xchg
ss
pop
xchg
in
nop
mov
xor
xor
pushf
mov
sahf
xchg
push
sti
adc
dec
mov
push
cld
fsubrl
inc
mov
insl
bnd
jl
out
aas
mov
movsb
jmp
ljmp
daa
clc
aad
cmpsl
sti
sbb
ds
cmc
dec
xchg
cmpsl
loopne
decl
aas
xlat
jnp
pop
cmp
inc
rcl
mov
or
dec
andb
cs
inc
push
les
push
js
and
mov
and
nop
jnp
into
push
std
xchg
cmp
arpl
jae
sub
adc
dec
int3
xchg
repz
bound
jecxz
pop
or
and
nop
xlat
jbe
mov
mov
cltd
mov
xchg
mov
cld
out
mov
mov
xchg
scas
out
push
scas
jl
sbb
imul
xchg
fsubs
leave
adc
js
lahf
sub
cmp
cmp
sbb
addr16
cmpsl
dec
test
add
daa
cltd
icebp
or
push
adc
dec
xchg
lods
outsl
push
dec
out
fisttpll
les
push
int3
icebp
pop
mov
pop
mov
daa
roll
and
xor
cwtl
mov
dec
mov
xchg
and
lahf
hlt
and
iret
into
adcb
push
leave
fstpt
mov
aaa
push
xchg
orl
ffree
xchg
aam
inc
jbe
mov
arpl
xor
adc
iret
adcb
test
jg
fisttpll
mov
add
xor
adc
test
mov
sahf
pop
dec
xchg
sub
lret
mov
or
jge
or
push
daa
in
cmpsl
mov
mov
daa
into
xlat
pop
inc
mov
jl
sbbl
les
inc
inc
add
dec
mov
and
sbb
xchg
test
test
imul
jecxz
add
out
xchg
pushf
sbb
push
mov
adc
inc
push
fstps
push
and
sti
xchg
pop
loopne
cmpsb
inc
mov
jecxz
dec
ljmp
sbb
inc
jbe
xchg
stos
idivb
push
add
or
xor
jo
mov
cli
and
lret
sbb
and
mov
imull
repz
or
jo
add
xor
arpl
push
out
repz
cltd
or
gs
fildll
push
mov
pop
orl
jmp
cltd
xchg
iret
pusha
mov
sub
repz
mov
add
int3
insl
push
fstl
in
pop
push
inc
imul
outsb
or
test
cmp
sbb
pop
pop
push
add
nop
ret
inc
and
std
ljmp
xchg
sub
xlat
jne
fbstp
sbb
mov
and
std
arpl
repnz
test
nop
repz
ds
jbe
cmpsl
add
outsb
sbb
in
push
out
imul
das
xchg
sbb
mov
cltd
cmp
xchg
push
js
test
movsb
mov
sarl
inc
push
mov
ljmp
pop
sub
push
xorl
adc
adc
call
ds
lret
dec
test
scas
aad
repnz
dec
sbb
mov
cmp
mov
mov
out
outsl
scas
imul
push
dec
pop
test
jae
in
popa
mov
pop
cmc
jbe
cmp
pop
push
mov
xor
movsb
xchg
mov
out
cmp
xor
and
scas
fcomps
inc
pop
lahf
xor
push
push
add
in
imul
cmp
rorb
leave
in
lods
mov
and
jp
sbb
fidivrs
cmp
sahf
jge
leave
insb
push
xor
lahf
cs
fwait
jecxz
inc
jnp
mov
aam
push
mov
mov
add
mov
xchg
mov
enter
adc
and
mov
mov
shrl
pop
fistps
jnp
jb
xor
sti
mov
push
sub
jge
pop
lds
in
das
repz
push
push
pusha
xor
pushf
push
pop
sti
or
cli
inc
xor
mov
in
clc
push
xchg
jmp
insb
adc
jns
sti
out
test
mov
enter
lock
aam
push
mov
in
jle
mov
cltd
sub
mov
sbb
jmp
pop
jo
call
cmp
aaa
inc
dec
fwait
lds
sbb
pop
adc
or
xlat
push
mov
ret
mov
xchg
lahf
add
mov
add
pop
ds
pop
mov
push
xchg
pop
outsb
jg
fwait
repnz
lret
and
sbb
inc
mov
mov
enter
cmpsb
cmp
xchg
addr16
rcrb
ret
int3
mov
testb
iret
mov
or
adc
ja
jns
lea
inc
lret
addr16
cld
xchg
sub
jecxz
sahf
mov
push
cmpsb
adc
pop
ss
pop
pushf
dec
pop
nop
ror
hlt
cmp
inc
leave
and
outsw
or
xor
push
dec
fnsave
cmpsb
xor
mov
sbbl
out
mov
movsb
int
xchg
fmuls
mov
mov
out
andb
inc
xlat
dec
adc
cli
adc
adc
add
mov
ss
int3
popw
pop
inc
xchg
lds
into
icebp
lods
xchg
inc
push
into
cmp
out
call
std
fcoms
push
nop
xchg
add
pop
ja
mov
addb
sbbb
dec
push
sarl
fcom
addr16
in
pop
icebp
popa
cmp
cwtl
push
mulb
movsb
fwait
mov
icebp
mov
push
push
repnz
icebp
mov
outsl
dec
push
gs
mov
jb
pop
mov
cmc
imul
mov
out
out
shr
faddl
call
ljmp
adc
adc
cld
xor
cmpsb
mov
sbb
push
pop
cmovl
out
xor
adc
adc
mov
data16
mov
mov
iret
mov
fisubrl
inc
pushf
or
or
push
das
push
and
jmp
addr16
xor
bound
xlat
add
iret
jg
cwtl
loopne
pop
and
push
in
leave
lods
push
push
out
imul
dec
outsl
hlt
test
lcall
shll
sub
aas
jg
or
subl
or
sub
mov
sbb
add
cltd
push
mov
push
inc
pop
cmp
xor
add
xchg
xchg
inc
decb
icebp
imul
add
test
cmp
movsb
mov
pop
out
pop
lods
mov
xchg
pop
mov
push
sbb
outsl
clc
repz
xor
xor
jnp
and
test
inc
push
in
js
pop
iret
out
fcmove
xchg
scas
imul
push
outsb
xchg
or
xchg
imul
jecxz
push
loope
js
fildl
xor
lock
cmp
pop
ds
jge
decb
loop
aaa
xor
pop
sahf
cld
fistl
inc
adc
push
std
shl
pop
lret
dec
addr16
shlb
sahf
lret
jmp
imul
movsl
or
sbb
or
repz
icebp
mov
lret
dec
jmp
inc
and
lods
mov
mov
push
mov
rolb
inc
out
xlat
outsb
mov
dec
xor
pop
jmp
mov
cwtl
in
cmpsl
sbb
mov
jecxz
aad
fsubrs
imul
insl
or
movb
insb
jae
daa
adc
orb
sbb
cli
addr16
mov
sub
popa
hlt
dec
data16
cmp
popf
test
les
pop
outsb
pop
loop
cmp
iret
and
and
repz
push
push
mov
ss
xor
addb
mov
pop
call
jmp
mov
and
std
sub
sahf
aam
pop
mov
das
fistpll
mov
popl
aam
sbb
mov
mov
mov
mov
sub
pop
cmpsl
ds
loopne
sbb
ss
gs
sbb
lahf
mov
ret
pushl
aaa
cmpsl
pop
jle
jp
jo
ret
roll
adc
push
imul
push
mov
hlt
mov
push
push
sbb
mov
outsl
repnz
add
xchg
enter
adc
jnp
mov
popf
repz
mov
fsubrl
stos
inc
cmpsl
imul
fs
shll
mov
cmp
aas
mov
xchg
and
mov
sub
xchg
add
adc
rcll
mov
mov
sub
jl
mov
sbb
push
jg
cmp
xor
and
xchg
push
and
xlat
mov
xchg
lods
jecxz
addr16
dec
fcoml
loop
mov
movsl
push
imul
mov
inc
stos
movsb
aad
test
lods
jmp
and
push
enter
cmp
mov
cmp
loopne
cmp
cwtl
jbe
sbb
push
mov
lret
mov
fisttpll
repz
gs
out
test
out
push
adc
adcl
inc
cmc
xor
xchg
jp
repz
sbb
inc
sub
ror
adc
dec
sbb
or
rolb
mov
aaa
jmp
enter
inc
inc
fisttpll
push
out
xchg
push
dec
outsb
or
mov
ret
sahf
imul
in
and
add
jno
mov
cli
inc
ret
pop
neg
das
and
jmp
rol
std
or
lods
rorl
xchg
mov
rclb
inc
out
or
and
mov
xorb
in
mov
inc
outsl
fnstcw
ja
loope
out
shrl
jecxz
pop
sub
and
pop
mov
or
sub
inc
or
sarb
cwtl
cli
int
pop
pop
adc
loopne
add
icebp
inc
daa
repz
cmpl
cmp
xchg
std
pusha
nop
call
or
inc
pop
xchg
add
icebp
mov
xor
loope
mov
rcrl
repz
rol
out
add
lock
mov
testl
xor
iret
add
dec
xor
inc
dec
pop
mov
mov
rcll
inc
mov
xchg
push
push
pop
out
ljmp
insb
hlt
fistpl
int
mov
in
fistps
sbb
cmp
les
adcl
mov
repz
subl
jp
fcompl
jl
popa
pop
pushf
mov
pop
jbe
ss
test
lods
insb
mov
xor
lahf
stos
rorb
mov
and
mov
sub
ret
divl
fsubrs
mov
fildl
jb
pop
sarb
jo
loop
mov
push
xor
clc
jne
dec
adc
and
out
dec
sub
push
mov
fldcw
adc
or
mov
mov
ja
nop
mov
rolb
xchg
bound
and
mov
outsl
out
ds
jecxz
push
xchg
jno
push
lcall
pop
sbb
mov
mov
mov
xor
add
dec
lcall
cs
jb
les
nop
pop
cmp
rclb
pop
or
sarl
lods
outsb
xchg
sti
aad
and
lock
dec
inc
add
mov
pushf
loope
push
cmpl
shlb
dec
shrl
movsl
mov
ljmp
mov
cmpsb
sahf
push
mov
idiv
add
xchg
test
repz
cmc
dec
mov
xor
mov
sarl
mov
movsb
push
dec
dec
loope
sahf
xor
sbb
lret
sub
imul
cld
shll
ds
cmp
orb
cmp
dec
push
roll
add
andb
mov
pop
sti
push
cltd
out
dec
sub
fdivrs
loop
aad
mov
cwtl
push
cmpsl
popf
inc
dec
pushf
into
sbb
in
dec
xor
jne
pushf
gs
inc
jae
call
cmp
jne
in
cmpsl
in
push
or
adc
inc
cld
inc
push
and
call
icebp
add
or
cld
into
jo
pop
je
outsl
in
stc
pop
inc
dec
or
dec
cmp
sbb
adc
ljmp
jbe
pop
and
xchg
sbb
sub
push
mov
mov
sbb
cmp
cs
jns
mov
mov
daa
mov
out
clc
mov
into
mov
out
mov
dec
mov
dec
xchg
xchg
push
xor
xlat
xchg
jge
cmpsl
or
lcall
push
les
addb
adc
daa
inc
insl
or
dec
jecxz
pop
int
jg
adc
pop
push
pushl
adc
inc
dec
not
adc
adc
xchg
out
insb
cmc
cld
xor
ljmp
bound
ret
mov
add
mov
es
roll
jae
adc
mov
testb
fisubrl
stos
adc
mov
push
loop
inc
sbb
orb
jb
cs
sbb
fnstsw
clc
sub
push
sahf
outsl
ret
or
out
es
pop
enter
out
dec
lret
data16
sub
std
push
mov
mov
jnp
push
add
daa
std
mov
movsb
push
test
pop
mov
push
repz
in
sarb
or
add
les
sbb
lds
gs
sti
fucomp
mov
testb
sbb
pop
fbld
pop
mov
jne
hlt
ljmp
pop
mov
sti
int3
mov
pop
sbb
and
mov
mov
imul
daa
cmp
je
insb
mov
add
pop
push
inc
mov
xor
adc
sarl
sbb
push
lret
mov
out
adc
int3
sub
cmp
sarb
clc
jnp
inc
push
icebp
mov
testl
dec
xchg
cmp
push
loop
cmp
gs
out
jnp
adc
addb
or
pop
xor
fstl
cmp
mov
mov
jbe
pop
adc
cmp
insb
in
mov
lds
pop
pop
fldl
out
add
xchg
xchg
outsb
lods
rorl
dec
enter
lret
mov
jno
xrelease
and
jge
jne
or
inc
sbb
std
xchg
jl
rsqrtps
sbb
xchg
and
mov
push
and
xchg
mov
int3
or
xchg
sbb
fs
jmp
scas
test
fsubp
pop
or
xor
sarl
push
mov
sub
inc
jge
push
ljmp
add
lret
movsl
ljmp
imul
ljmp
xchg
cwtl
pop
inc
push
stc
out
xor
jg
clc
repnz
popf
inc
jb
cmp
inc
fs
pop
dec
arpl
mov
xor
scas
or
push
mov
xlat
xor
stos
dec
mov
aas
jl
sub
insl
das
int3
xor
enter
insl
imul
or
int
jl
cmp
scas
dec
cmp
popa
fisttpl
inc
adc
je
std
pop
pop
aad
icebp
leave
sub
fnstcw
incl
or
mov
lds
fs
mov
pop
xchg
and
xor
cmpsb
cmpsl
mov
fnstenv
sbb
mov
movsl
clc
mov
arpl
cmp
rcll
aad
cmp
adc
push
or
push
mov
push
insb
xchg
in
gs
scas
adc
aaa
cmp
call
mov
rorl
insb
dec
inc
mov
mov
scas
jecxz
fimull
hlt
lods
lcall
maxps
pusha
cmc
inc
mov
mov
fwait
popa
mov
aad
jmp
jbe
lret
ret
icebp
loop
dec
jnp
loop
or
push
scas
dec
sbb
es
or
mov
jp
shrl
pop
push
jle
jle
sti
push
popa
fisubs
fcomi
out
pop
xor
push
and
fwait
xor
xchg
ret
xor
pop
add
hlt
and
and
ljmp
gs
rolb
insb
movsl
jb
mov
dec
push
xchg
fistpll
mov
dec
mov
stos
sbb
xchg
lea
divl
mov
in
imul
outsb
cmc
hlt
in
mov
sbb
int
add
popa
and
push
jecxz
or
push
rorl
jle
sbb
sbbl
mov
inc
xor
test
adc
test
push
jecxz
cmp
jb
mov
mov
js
jg
mov
cld
hlt
push
lock
in
int
aam
jmp
hlt
bound
xchg
adc
jecxz
jmp
jmp
in
movsl
xchg
pop
icebp
fwait
adc
sub
insb
push
mov
cmp
push
ljmp
sarb
sub
sub
loop
cmp
push
insb
aad
adc
push
push
pop
jp
or
and
sub
pop
out
fidivl
sahf
dec
mov
adc
lock
jo
aaa
lret
cmpsl
shlb
pop
adc
insl
pop
push
fstps
cmp
out
cmp
or
movb
add
dec
and
push
mov
xor
stos
pop
pop
adc
dec
push
mov
imul
leave
daa
mov
in
insl
stc
push
outsl
fdiv
fstl
loopne
xor
push
sub
push
push
les
mull
dec
decb
lcall
xorb
xor
sub
push
xor
lcall
jg
bound
and
inc
mov
jae
lret
dec
sub
sub
lahf
pop
lret
or
ljmp
or
js
addr16
aam
sbb
mov
ss
adc
adc
push
cmp
sbb
iret
jo
fcomps
nop
cmp
jns
mov
scas
dec
test
adc
mov
ja
stos
and
sbb
inc
push
movsb
call
mov
fcomip
adc
dec
lea
sub
lahf
push
xorl
sbb
dec
jg
add
out
dec
and
lret
mov
dec
mov
push
nop
adcb
lcall
pop
fwait
dec
test
sbb
xor
sub
jmp
and
into
dec
add
or
xor
jns
je
inc
xor
xor
jg
out
mov
lret
stc
jne
imul
aaa
mov
es
ja
dec
inc
test
mov
dec
lea
and
mov
rcrb
into
lds
and
push
xchg
mov
cmp
mov
stos
jb
pop
dec
dec
pop
out
xchg
fwait
and
clc
adc
loop
xor
lods
add
and
mov
lock
jae
sbb
xchg
stc
ror
dec
mov
not
inc
stos
lcall
add
bound
in
inc
adc
ficompl
adc
ret
sub
in
mov
pop
jp
sahf
and
test
ja
mov
leave
mov
loope
scas
gs
add
aam
insl
int
inc
inc
mov
rclb
shll
cs
ja
push
mov
mov
and
push
cmpb
or
jmp
outsl
mov
cli
jbe
and
outsb
jmp
int
mov
mov
iret
lds
pop
xlat
dec
sub
std
inc
dec
stc
jge
scas
push
jmp
lret
mov
jmp
inc
push
push
jmp
and
adc
jnp
jae
pop
cmp
and
mov
add
pop
push
push
arpl
int
jnp
sub
cmc
js
push
dec
mov
push
imull
repnz
dec
incb
mov
mov
xor
and
fimuls
jmp
pushf
rcrb
sub
cmp
int
xlat
dec
push
cld
pop
sbb
es
and
icebp
iret
sub
imul
mull
cmp
push
xor
adc
lret
jg
xlat
lret
loopne
mov
jp
movsb
pusha
xor
out
xor
jmp
mov
test
mov
pop
mov
scas
and
sbb
fistps
sbb
loopne
dec
mov
fs
repz
sbb
ja
testl
repz
mov
mov
add
cltd
mov
dec
xchg
xor
xchg
jp
add
sub
sbb
pop
push
shlb
push
and
ret
outsl
ljmp
dec
jne
push
pop
mov
xlat
sti
fldl
inc
cmpsl
out
cmp
mov
repz
mov
cld
jp
or
aad
lock
leavew
in
mov
jae
loope
fcmovnbe
insb
loopnew
ljmp
fwait
cmp
popf
jns
fnstsw
imul
xor
js
inc
xor
xor
push
pop
ret
sbb
xor
or
jno
orl
jb
repnz
ds
sub
jecxz
push
jl
jmp
push
sarl
mov
jb
dec
inc
in
jmp
push
pushf
das
inc
xor
mov
jge
notb
inc
inc
jnp
ret
mov
mov
dec
xchg
adc
out
push
sahf
lods
test
mov
jbe
ss
and
cli
aaa
sbbb
inc
and
adc
std
fsubl
mov
and
test
fisubs
icebp
pushf
out
fstps
out
jno
leave
jnp
mov
lcall
in
aaa
leave
test
imul
push
push
add
sbb
rolb
orl
addl
xor
xchg
cwtl
mov
pushf
jns
icebp
test
scas
xor
sbb
aad
leave
or
out
in
push
clc
and
sbb
inc
lods
push
popa
fwait
repnz
push
fldt
mov
xlat
pop
cs
pop
nop
sbbl
scas
sub
jne
lods
aas
sti
sbb
shrb
lds
xor
fdivrp
xchg
pop
inc
mov
mov
ret
mov
dec
xor
mov
popf
mov
pop
pop
xchg
mov
cld
and
aam
insl
clc
sub
xchg
scas
fmuls
ss
pop
mov
daa
mov
loope
aad
sub
stos
outsb
decb
lods
jmp
push
dec
out
adc
not
add
cmp
xchg
dec
loopne
pop
dec
andb
pop
add
jg
test
loop
mov
cld
lds
xchg
and
lret
pop
out
sar
push
inc
into
shll
in
clc
mov
mov
sbb
stos
pop
orl
cmp
ror
dec
insb
xor
movsl
mov
sub
out
ds
lret
add
mov
test
ret
das
add
sub
fiaddl
daa
sbb
dec
mov
sub
mov
adcl
mov
cmpsl
ficoms
hlt
jge
dec
mov
lahf
cmpsw
inc
ficoml
sbb
lret
fcomps
adc
nop
jle
test
inc
pop
pop
popf
mov
cltd
adc
and
dec
inc
mov
ja
sarb
push
jae
aad
adc
rolb
mov
jg
mov
repz
dec
negl
iret
jns
hlt
cmp
push
mov
rcrl
cmp
loope
or
les
push
mov
icebp
lahf
jp
das
lds
or
adc
icebp
test
jnp
in
push
xor
lret
pop
inc
testb
lret
mov
call
cmp
sarl
xchg
dec
pop
repnz
mov
out
inc
iret
add
ret
insb
aad
je
xchg
mov
mov
test
mov
repz
pop
add
jne
shlb
cltd
xchg
cmc
dec
leave
and
xor
dec
sub
incb
pop
dec
mov
ljmp
add
dec
sarl
xor
inc
fistps
mov
in
clc
or
icebp
push
fcompl
xchg
cmp
add
sub
clc
aaa
xor
push
push
pmaddwd
sbb
adc
sbb
int
stos
movsb
mov
xchg
sbb
sub
pop
ret
mov
sub
push
and
xor
pop
sub
dec
inc
xchg
mov
and
cmpsb
mov
stc
mov
scas
stos
ljmp
push
pop
pusha
mov
in
loopne
cs
fmuls
jnp
movsb
pop
mov
dec
and
and
xchg
fcomps
cli
aaa
push
mov
mov
xchg
jge
pop
jle
and
mov
mov
out
pop
dec
jo
add
lret
mov
push
xor
shlb
pop
call
inc
das
sbb
dec
loope
xchg
and
xchg
mov
adc
mov
xchg
jmp
jmp
clc
xlat
lock
sbb
cmpsb
add
dec
insl
outsb
mov
jecxz
arpl
jle
jbe
lcall
push
ucomiss
xchg
sbb
jge
lds
sbb
movsb
jle
aam
repz
icebp
addr16
jae
inc
fildl
mov
icebp
pop
inc
enter
cli
mov
hlt
cmp
cmp
mov
dec
adc
and
push
loop
lock
dec
stos
xor
fisttpll
fimull
ucomiss
rcll
jne
fstpl
sar
in
inc
jmp
pop
mov
mov
jb
cmp
pushf
das
test
mov
out
mov
loopne
in
test
dec
xchg
cmpsl
sub
pop
cmp
xlat
jae
lcall
inc
or
out
imul
ss
mov
insb
jl
mov
push
pop
and
jg
xor
aas
movsl
loope
adc
mov
jnp
fdivrs
int3
sbb
popf
bound
insb
and
into
adc
cltd
push
xchg
jge
rorb
pop
push
xchg
hlt
rcll
push
pop
dec
jp
psrad
jne
push
icebp
cmpsb
dec
mov
jge
or
push
outsl
mov
cli
dec
rcrb
dec
inc
mov
aad
xchg
push
mov
push
int
jne
testl
and
lret
scas
sub
subl
jb
push
mov
dec
data16
push
lcall
frstor
or
xor
and
pop
add
movsb
xor
pop
pop
in
insl
mov
test
pop
push
and
in
in
dec
mov
adc
push
loopne
cmp
pop
imul
sub
sbb
pop
sub
mov
and
aad
pop
mov
ficompl
or
sarl
push
sub
push
int3
insb
lret
adc
cmpsb
arpl
push
cmp
iret
mov
xor
mov
ret
mov
jle
andb
or
lahf
mov
add
and
loopne
adc
mov
sbb
pop
mov
fs
shl
jo
push
sbb
add
jbe
shrb
lcall
fsubs
clc
mov
cltd
xor
fiadds
and
adc
pop
jae
dec
xchg
dec
xor
ds
xchg
push
pop
daa
or
icebp
repnz
jmp
ja
lahf
movsb
in
xchg
mov
push
pop
xor
xchg
aam
mov
xor
xor
jae
ret
dec
and
js
cmp
dec
ja
xor
icebp
jo
shlb
repz
leave
mov
jo
xchg
cmp
ljmp
shr
mov
test
into
push
sbbl
adc
and
aad
into
lock
push
out
rcrl
xchg
push
or
fdiv
popf
stos
imul
int3
mov
aas
pop
cmpsl
mov
add
test
test
cld
dec
xchg
pop
mov
cmpl
aam
mov
xor
mov
cmp
outsb
and
jae
negb
int3
mov
or
mov
subb
insl
add
out
pop
cmp
add
pop
imul
dec
and
pusha
pop
sub
xchg
fdivs
ljmp
repz
arpl
mov
les
jnp
divl
cmp
mov
mov
xorb
outsl
data16
fdivs
sub
jae
jmp
pop
mov
sbb
fs
popa
arpl
outsb
lds
je
xor
xchg
cli
lahf
ds
sbbb
push
cmp
pushf
out
clc
xor
stos
iret
xchg
out
in
hlt
ds
mov
pushf
pop
fnstcw
lods
mov
mov
jnp
out
dec
mov
fistpl
dec
jb
cmp
out
ds
imull
jb
push
sbb
fs
scas
cltd
push
jbe
push
mov
xor
ljmp
push
push
enter
enter
shll
sbb
aaa
in
and
mull
dec
mov
lcall
xor
jb
pop
or
idivl
arpl
test
std
in
jb
les
into
adc
adc
mov
sbb
or
push
ror
cld
into
dec
outsb
ret
mov
fisubrs
push
jnp
pop
negb
inc
loop
mov
je
ljmp
add
sub
dec
pop
jbe
adc
clc
inc
cmpsb
and
stc
cmp
lods
movsl
push
bound
push
cmp
mov
je
stc
dec
inc
xchg
inc
cwtl
int3
movsl
std
mov
je
sub
scas
inc
push
mov
pop
xor
cmp
mov
das
xchg
mov
gs
mov
sub
out
or
fs
sbb
adc
jge
adc
gs
fists
dec
or
mov
loopne
pop
daa
mov
jle
jmp
add
gs
or
ds
fistps
push
adc
add
push
xor
xchg
pop
dec
xchg
add
jg
leave
push
call
lahf
cmp
jecxz
jl
pop
lock
mov
sbb
cs
test
mov
pushf
jbe
loop
jmp
cmp
das
ss
imull
les
inc
push
xchg
mov
push
scas
mov
fiaddl
push
pop
dec
mov
push
dec
xor
jle
jno
aaa
cmpsl
stc
jl
dec
out
xor
data16
mov
and
and
call
jnp
xor
jno
mov
push
xchg
pop
das
fnstcw
cwtl
lret
xchg
push
dec
xor
mov
xchg
and
test
mov
push
les
sub
cmpb
add
repz
mov
pop
das
adc
call
inc
xor
iret
aam
gs
push
fcomps
xor
jne
ret
xchg
mov
inc
add
or
fistps
test
out
int3
fstps
mov
push
mov
stc
push
dec
push
dec
sbb
cmp
loope
cltd
jmp
subl
and
cmpb
enter
addl
xchg
jnp
cmc
movsb
xor
ja
sarl
aad
jg
lcall
pop
ljmp
jg
repz
popa
push
mov
in
incb
js
push
in
add
stos
cmp
xor
out
mov
dec
push
add
lods
push
sarb
mov
jns
aam
aaa
xlat
push
adc
dec
cld
pop
in
mov
test
ja
mov
lcall
lea
iret
mov
pop
or
xchg
enter
je
lahf
popa
push
or
or
out
ss
pmaxsw
and
call
test
inc
imul
loop
sbb
clc
sbb
cmp
es
test
jbe
and
outsl
lcall
loopne
fstpl
or
mov
dec
adc
mov
or
sub
mov
loope
mov
pop
xor
stos
mov
lret
or
dec
push
mov
hlt
jae
adcb
adc
add
je
cli
push
clc
repnz
fwait
and
mov
dec
imul
or
add
jns
pop
lcall
pop
mov
and
sbb
push
cmp
push
addb
jl
out
jmp
repz
bound
aas
int3
lret
and
dec
jle
in
fdivrs
jle
and
push
mov
inc
inc
fdivr
jno
sbb
in
push
les
fsubrl
loopne
add
push
lret
mov
bound
cli
inc
xchg
sarl
add
div
scas
or
int3
hlt
jb
cli
out
arpl
loopne
pushf
push
mov
dec
rcll
mov
add
dec
add
int
push
xchg
pop
rclb
je
imulb
xlat
ja
sub
leave
jnp
ret
rcl
je
adc
sbb
aam
shrl
dec
ret
cmpsb
add
imul
xor
aas
and
nop
in
xor
loop
cwtl
inc
rcll
push
xchg
xchg
scas
xchg
dec
cwtl
dec
mov
ljmp
sbb
data16
sarb
fdivrs
in
repnz
push
pop
test
dec
negb
loope
and
sub
ret
push
mov
repz
jle
lods
ja
inc
flds
iret
daa
rolb
repz
push
jge
loopne
stos
adc
jnp
xor
adc
int3
jmp
in
clc
repz
jno
out
cmp
aam
mov
lods
sbb
lahf
fists
gs
dec
dec
jge
jbe
sbb
rorb
loope
movsl
cmc
xchg
in
cld
push
hlt
mov
cmpsl
push
stos
ds
cli
out
push
outsl
pop
es
mov
sahf
mov
das
insb
and
push
cmp
outsb
mov
iret
repnz
xchg
mov
or
rorl
push
add
jnp
cmp
inc
dec
int3
inc
cltd
jns
push
stos
ja
aas
pop
pushw
aam
rcrl
adc
mov
xchg
pop
pop
sahf
jnp
lcall
or
pop
in
pop
or
fcomps
cmp
sarl
outsb
scas
gs
xchg
push
pop
out
jo
fsubrp
adc
popa
sub
ret
mov
cmp
mov
mov
into
icebp
lock
lock
jl
inc
cmc
jp
leave
sbb
out
test
jle
das
xor
or
xchg
mov
jmp
test
setb
push
leave
loope
cmp
int
add
cltd
aad
hlt
icebp
inc
mov
fisttps
popf
mov
movsl
hlt
sub
jmp
push
push
into
pop
dec
inc
jp
insl
adc
adc
cmp
xchg
rcr
mov
cwtl
sub
leave
jl
adc
jg
stos
push
js
icebp
jmp
ljmp
mov
sbb
cmpsl
mov
stos
dec
test
sub
popf
fsubl
mov
ljmp
adc
or
jp
loop
jno
das
fisttpl
lret
jmp
loop
push
inc
pusha
pop
int
mov
ss
xor
inc
fsubl
xrelease
mov
ret
aaa
xchg
mov
ds
gs
fidivl
xchg
push
fbstp
push
push
rcrl
push
movsl
pop
cli
mov
cs
in
xchg
cld
or
fldcw
jbe
cmpsl
nop
xchg
add
dec
bound
loop
jns
das
not
push
daa
add
xchg
lock
mulb
and
and
popf
data16
sbb
xor
aad
xor
cwtl
sub
cmp
test
add
mov
jbe
cmp
fldl
mov
pop
ja
push
pop
jnp
xchg
mov
cltd
jnp
add
int
cld
pushf
fcoms
shr
mov
dec
lods
shlb
fnsave
lods
fnstcw
push
loopne
xlat
rcrl
fldt
and
stc
fcompl
je
mov
sbb
dec
lea
fwait
mov
sub
out
mov
or
ds
dec
repz
test
imul
aas
test
call
mov
aam
fisubs
test
shlb
call
mov
inc
inc
xor
fwait
test
cld
hlt
pop
mov
lods
xor
ja
stc
sub
cmp
ds
lahf
cs
gs
pop
scas
adc
or
das
sahf
pushf
int
dec
lahf
mov
cmp
sarl
test
jae
mov
ficompl
cwtl
in
mov
cs
enter
pop
outsb
lret
into
repnz
pop
and
adc
data16
arpl
les
out
pop
sahf
jns
daa
adc
sub
cltd
icebp
rorl
mov
push
aaa
popf
mov
xchg
push
aam
in
lock
nop
pop
mov
into
mov
xchg
stc
mov
pop
adc
addb
xchg
clc
daa
loopne
js
push
cmp
sub
movsb
pop
cmpl
sub
inc
mov
out
mov
lret
clc
aad
lock
xor
repnz
dec
fistps
cli
rcll
xor
fstl
jo
in
push
mov
andb
pop
or
ficoml
mov
mov
stos
insl
lock
test
ret
xlat
mov
jns
out
ret
out
jl
sub
js
mov
inc
call
pop
loopne
roll
sbb
fwait
lods
out
adc
cmp
adc
in
cld
and
mov
cvttpd2dq
loopne
inc
rol
sub
ja
mov
test
cli
fdivr
sti
add
daa
mov
dec
or
mov
mov
pop
sbb
xchg
sti
fstps
jle
jmp
and
lahf
dec
imul
pop
jb
pushf
int3
scas
jnp
add
adc
adc
sub
pop
stos
ror
movsb
fsubrp
daa
jle
sbb
aam
loop
test
mov
test
or
imul
sub
test
lds
sarb
je
xchg
mov
pop
sbb
scas
test
hlt
mov
jb
scas
sub
lret
mov
sbb
push
in
and
sbb
cli
xchg
push
loope
insb
insb
leave
pusha
xor
imul
scas
push
in
cmp
sbb
je
dec
mov
mov
leave
inc
lock
fidivl
daa
mov
leave
xor
outsb
pushf
les
jge,pn
rcr
out
pusha
popf
repz
adc
fmuls
aam
imul
lea
xor
adc
cmpsb
and
nop
pop
stos
movsw
leave
sub
jb
pop
movsl
jne
dec
jle
xchg
sbb
mov
pop
mov
and
mov
push
scas
jo
out
and
inc
jb,pn
mov
es
sbb
popf
dec
arpl
pop
inc
pop
jo
clc
scas
dec
dec
outsl
ljmp
adc
mov
push
xchg
inc
sbb
fwait
scas
cltd
push
xor
inc
insl
roll
lods
sub
jns
xlat
inc
and
xchg
stos
shll
sbb
aad
daa
scas
fldcw
xlat
xchg
xor
iret
insb
into
push
mov
jno
ret
data16
fcmovnbe
cltd
and
sub
push
mov
fs
enter
popa
cltd
add
jo
mov
out
push
in
lock
into
adc
lods
loopne
xor
adc
add
les
ds
cwtl
imul
jg
cmpsb
cwtl
or
mov
daa
xchg
mov
inc
add
mov
cld
test
mull
shrb
push
dec
lds
lods
sub
std
adc
mov
dec
adc
xchg
cmpsl
jb
shlb
ret
cmp
outsb
enter
sub
dec
cmp
rep
inc
adc
hlt
popf
cwtl
adc
push
dec
cmc
out
dec
add
cmpl
mov
sbb
iret
cmp
outsb
int
fmuls
sbb
add
sub
cmpb
and
xor
cmpsb
dec
mov
inc
mov
jne
cltd
push
lods
mov
es
adc
pop
clc
and
in
sti
mov
scas
inc
xchg
sbb
out
mov
aaa
lods
xchg
imulb
mov
popf
cmp
or
mov
mov
sub
pusha
or
inc
inc
fwait
adc
pop
nop
or
and
scas
cmpsb
mov
inc
mov
repnz
popf
mov
and
test
mov
arpl
shrb
jns
mov
lcall
cmp
ret
xor
je
inc
test
test
dec
push
out
pop
inc
ss
sub
mov
pop
jp
addb
ret
xlat
xor
icebp
mov
test
insl
rorl
repz
push
std
jmp
jb
and
nop
rorl
scas
jo
and
daa
enter
jg
jp
ret
sub
and
in
mov
mov
and
aaa
inc
ds
mov
xchg
inc
lret
mov
sbb
sub
das
adc
testl
cld
int3
sbb
mov
fbstp
and
subb
cmp
xor
cmp
clc
or
xchg
inc
add
sti
repnz
or
pop
int3
sbb
cmp
and
scas
add
jl
mov
inc
sub
sbb
mov
test
push
xchg
dec
pop
dec
dec
jmp
andl
mov
leave
mov
lods
cli
xor
loopne
cmpsb
adc
dec
inc
xchg
inc
cmc
imul
add
lcall
clc
adc
daa
adc
push
loope
out
pop
dec
lret
mov
cwtl
in
daa
arpl
sub
dec
lcall
fwait
xchg
jbe
aad
inc
push
adc
jns
pop
mov
cli
mov
jmp
in
sbb
sbb
mov
scas
mov
lds
addr16
mov
cwtl
mov
pop
orl
push
outsl
or
cmp
mov
inc
sub
sbb
sbb
lret
pushf
xchg
xchg
jno
cmc
push
mov
pop
mov
loope
sub
fsts
or
cmpsl
dec
jmp
mov
cmpsl
adc
roll
lcall
sub
popf
ficompl
dec
jae
cmpsb
rcll
scas
cmc
cltd
sbb
and
adc
nop
sbb
xor
jge
movsl
push
inc
or
push
inc
push
push
push
test
outsb
nop
cmp
jecxz
xchg
fsts
fcomps
inc
mov
mov
inc
jg
fs
mov
jmp
jmp
aaa
xchg
push
leave
sbb
mov
and
or
mov
jnp
cmp
xchg
icebp
and
xor
mov
sbb
call
and
mov
mov
mov
jbe
daa
in
mov
lret
sbb
pop
adc
mov
clc
pop
and
mov
push
pop
sub
mov
cmpl
or
into
ffreep
pop
nop
xor
jbe
test
push
dec
jmp
int
fisttpll
aad
mov
jns
pop
push
mov
int3
jo
push
insl
mov
mov
in
pop
lret
lahf
aam
push
popa
or
fisubrl
out
js
aam
or
mov
sarl
add
mov
and
call
stos
cmp
adc
leave
sbb
scas
mov
dec
cld
cmpsb
and
xchg
push
dec
mov
dec
incl
or
pushf
dec
test
adc
mov
cli
mov
mov
jmp
jge
leave
push
xor
mov
sbb
mov
xor
mov
insb
ffree
roll
add
or
push
pop
sub
lret
into
mov
push
fidivs
mov
mov
mov
cli
push
sahf
sub
ret
pop
cmp
clc
js
xor
shld
shlb
push
jne
shll
push
ficoms
jl
in
imul
jmp
add
test
sbb
idivb
mov
shll
sub
mov
push
fs
pushf
fsubrl
aas
sti
iret
or
xchg
jmp
xchg
jno
or
adc
ja
mov
aad
sbb
mov
add
push
outsb
sahf
dec
mov
cmpsl
xchg
scas
std
dec
mov
adc
or
sub
xchg
rcrb
jmp
cs
andb
enter
fcmovbe
sti
pop
and
mov
lds
push
test
pop
les
jb
mov
sub
xchg
sub
push
roll
stc
add
cs
push
lds
mov
jg
sub
gs
mov
ja
scas
inc
mov
fchs
call
stc
cltd
fiaddl
adc
add
aas
movsl
cwtl
mov
pop
mov
fistl
in
test
lret
xchg
mov
insb
js
add
inc
icebp
or
divps
pusha
outsb
test
cmp
xlat
xor
ret
adc
and
jmp
stos
pop
dec
inc
ret
mov
stos
test
and
jns
xlat
pop
cmpsl
dec
cmp
mov
mov
pop
cmp
cmpsl
fidivs
movsl
jle
filds
or
jno
push
int
lods
inc
cltd
xor
mov
mov
pop
mov
arpl
cmc
mov
sbb
mov
lret
je
pop
jns
jmp
push
add
jno
mov
int
shrl
add
fisttpl
call
mov
fistpl
pusha
mov
shl
pop
repnz
ljmp
or
pushf
push
push
rcr
scas
lret
xor
rcrl
sbb
ja
aam
push
popf
in
mov
dec
cmp
in
je
sbbl
mov
pushf
cltd
jae
pop
cmpsl
ret
lcall
test
loopne
daa
div
cmpl
cmpsb
jns
call
je
cmpsl
mov
push
iret
xchg
mov
mov
or
cmp
bound
lods
cli
gs
lods
stos
ds
cld
lret
dec
lahf
xchg
mov
and
ss
insl
cli
mov
cmp
push
pop
insl
mov
lods
pop
sbb
fdivp
aam
lcall
inc
dec
cli
gs
push
scas
xor
cmp
add
xchg
out
ret
test
mov
in
add
loop,pn
cmp
dec
out
dec
and
fsubrs
mov
sbb
sub
fbld
sbb
xor
cmpsb
mov
sub
movsl
addr16
scas
jb
mov
jae
push
mov
nop
lret
add
scas
dec
out
xchg
mov
into
fldt
and
lods
lods
rolb
insl
jne
loopne
mov
fwait
scas
cmc
dec
mulb
test
mov
xchg
call
sbbl
mov
sbb
call
mov
xorl
rcrb
dec
xor
cmc
loopne
es
ret
xchg
pop
popf
xchg
imul
add
xchg
adc
add
icebp
hlt
lret
lds
js
insb
add
mov
mov
mov
movsl
lret
ja
sbb
nop
mov
jmp
sbb
outsl
jae
paddb
int
adc
cwtl
mov
ljmp
sub
push
out
push
in
test
lret
popf
and
hlt
pop
cli
pop
dec
cmpsb
push
fwait
test
lret
rorl
lcall
int3
aas
mov
out
leave
loop
or
ret
sub
sbbb
adc
orb
lods
les
push
sub
inc
jge
mov
xchg
adc
mov
cmp
jle
xchg
xchg
int
inc
xlat
aas
mov
punpcklbw
jg
jb
cmpsb
cltd
cmp
loop
pop
dec
aaa
imul
popf
aas
scas
sub
and
out
mov
lods
mov
imul
int
rcrl
cmpsl
adc
mov
xchg
jbe
and
in
leave
jecxz
popa
cltd
jno
jle
icebp
subb
shl
outsb
or
and
out
push
sub
mov
in
jnp
mov
mov
add
bound
push
mov
sub
je
les
xchg
ja
sbb
rcrl
movsl
dec
mov
stc
sbb
mov
pop
prefetch
mov
adc
dec
out
dec
rcll
push
adc
ret
test
ja
mov
popl
pop
push
cli
mov
inc
repz
cmc
ds
and
clc
pop
push
mov
xchg
cmp
cld
dec
cmp
lcall
pop
xchg
test
jecxz
es
mov
enter
and
mov
xor
jmp
dec
jbe
adc
jge
or
cmp
in
mov
pop
loop
sub
cmpl
rcll
mov
xlat
imul
inc
pusha
int
popl
loopne
stos
int3
cwtl
iret
mov
cmpsb
jne
xchg
pop
mov
in
push
mov
dec
dec
inc
ret
xchg
sbb
aam
push
mov
push
mov
inc
adc
sbb
test
pop
push
sahf
or
imul
insb
mov
inc
fistl
sub
xor
aad
mov
fstpl
aas
mov
arpl
into
xchg
jg
scas
out
adc
stos
mov
adcb
rorb
in
lods
imul
xchg
mov
jbe
jne
sbb
inc
mov
xor
movsl
hlt
mov
movsb
fisttps
iret
push
jae
xchg
lds
int
pop
lods
xor
mov
shll
inc
push
lea
sar
mov
cmp
scas
sub
xchg
xor
cld
movb
sarl
mov
xchg
frstor
inc
dec
push
jo
call
fistps
ds
mov
dec
pop
stos
push
mov
pushf
push
and
cmp
add
hlt
xchg
dec
cld
notb
insb
xchg
insl
xchg
lods
pop
jnp
ja
xchg
faddl
out
xchg
clc
mov
dec
inc
mov
fdivs
shrl
cmp
fnsave
sti
push
sub
mov
stos
sbb
push
and
aaa
jle
jae
mov
jbe
xor
mov
mov
or
mov
iret
aam
call
nop
nop
jno
ret
sub
lahf
pop
daa
jg
clc
subb
sub
push
outsb
sub
adc
push
mov
fisttpll
out
xor
dec
add
cmp
loope
xchg
testb
sub
xchg
cmpsl
movsl
ds
loop
or
lret
loopne
cmp
push
ss
push
mov
xor
jb
stos
imul
and
push
in
dec
mov
fs
icebp
cmc
add
out
lahf
pop
and
addr16
xor
fstpt
adc
inc
mov
xchg
nop
imul
jae
pop
loope
mov
push
jbe
int3
das
cmp
jl
out
imul
bnd
dec
ffree
adc
or
inc
adc
jmp
pop
push
shll
movsb
xor
mov
inc
decl
dec
xchg
popf
sub
xor
sub
jmp
pusha
insb
push
inc
push
in
cmpsb
insb
js
ja
push
dec
and
idivl
shlb
icebp
lret
sbb
arpl
lods
aam
inc
xor
push
pop
sbb
xchg
ret
inc
pushf
jb
fyl2x
imul
xor
xchg
cmpsl
dec
mov
mov
fstpl
test
mov
mov
into
cwtl
sub
fnstsw
mov
cmp
clc
out
mov
shr
add
jae
mov
shrl
and
mov
ja
mov
insb
in
clc
inc
sbb
setl
in
mov
pusha
sub
jae
ret
mov
aas
sbb
aam
push
xor
mov
cli
cmpsl
cmp
xor
negl
xchg
sbb
jo
nop
xchg
scas
js
fisubl
mov
jl
outsl
dec
xchg
sbb
loopne
push
mov
cmp
int3
jge
add
or
sarb
or
out
dec
leave
jnp
stos
lcall
loope
icebp
pushf
pop
and
push
pop
jmp
rorl
test
cld
sbb
aam
mov
lds
mov
leave
inc
add
push
outsl
ds
cs
popf
sbbl
dec
add
mov
mov
dec
add
and
fisubrs
out
add
cld
jbe
mov
test
and
mov
inc
or
sbb
lcall
sub
jnp
xchg
mov
pusha
cmpsb
dec
fwait
xor
pop
daa
push
mov
stos
mov
add
into
adc
mov
pop
mov
fs
jne
pop
ljmp
jo
jns
out
shrb
test
or
pop
cmp
pop
popa
loopne
push
loope
cs
std
cwtl
cs
xchg
mov
push
jg
push
stos
cwtl
jecxz
push
cmp
shrb
repnz
jne
mov
ss
imul
mov
xor
push
jl
lock
jnp
push
xchg
mov
xchg
cmpsb
sahf
sahf
popa
fidivrs
mov
clc
mov
adc
lods
push
dec
xchg
scas
outsl
mov
nop
mov
call
jnp
iret
loopne
adc
and
les
jg
sbb
mov
ss
push
mov
jno
push
subl
xor
das
ret
push
mov
pusha
lcall
insl
cltd
xchg
xchg
dec
jp
xchg
ljmp
mov
test
int3
push
out
mov
pushf
xor
fdivr
cmc
push
cmp
dec
and
xchg
push
xor
mov
push
out
aaa
subb
mov
or
mov
sbb
jnp
pop
pop
jns
push
daa
pop
ret
pop
push
test
add
pop
movsb
sbb
loop
jnp
std
test
cmp
mov
and
push
and
inc
nop
xchg
cmp
jns
aas
mov
pop
call
mov
xchg
aas
js
xor
ficompl
cmpl
add
das
icebp
adc
jge
xchg
test
cmpsb
mov
in
loopne
dec
adc
lock
lods
mov
sbb
push
lret
in
das
inc
scas
pop
or
sbb
xor
push
lds
cmpsl
filds
mov
out
xor
xor
mov
push
adc
pushf
lods
add
fs
popf
in
inc
lds
mov
cmpsl
aas
leave
sbb
aaa
push
adc
jae
dec
aad
loope
shll
mov
pop
in
test
push
or
mov
pop
jp
data16
movsb
cmp
xor
and
mov
lock
inc
test
cmp
fbstp
int3
xchg
dec
adc
loop
fucomi
push
rcll
loope
push
sbb
and
stos
js
movsl
aam
jg
pusha
or
mov
push
jo
int3
stos
mov
inc
push
shrb
scas
mov
ja
fisubs
cmp
testl
pop
aam
push
cli
inc
inc
cmc
sahf
fwait
xor
cs
fcomip
rcrl
jecxz
je
popf
mov
imul
jge
cld
xchg
movsl
icebp
adc
aad
movd
pop
fdivrl
in
imul
jle
gs
push
movsl
and
push
mull
cs
sti
arpl
dec
es
push
clc
pusha
inc
push
mov
icebp
pusha
inc
xor
xchg
mov
and
push
sub
mov
dec
jbe
in
mov
add
dec
sub
bound
mov
cwtl
stos
and
mov
fildl
fsubrl
fld1
and
dec
in
cmpsb
adc
in
cmp
xchg
shll
and
ret
sub
push
xlat
int
cmc
dec
ljmp
filds
aad
fildll
cmpsl
mov
lret
mov
jmp
je
mov
movsb
arpl
fs
clc
xchg
mov
mov
push
imul
outsb
xor
inc
add
or
adcb
jg
add
sbb
imul
inc
out
loop
sbb
xor
pop
test
gs
mov
mov
jle
js
xchg
es
ss
lret
aas
mov
sbb
icebp
test
movsl
push
leave
pop
imul
xor
add
adc
jae
scas
movsb
push
pop
loope
mov
gs
pop
mov
push
cltd
mov
out
xor
rcr
and
mov
or
jb
sbb
lods
roll
sahf
loopne
sub
shrl
push
movsl
push
pushf
pop
lea
adc
aas
lds
lret
jl
in
scas
adc
adc
push
and
push
jle
xchg
cli
cmp
data16
call
sti
or
mov
xchg
pop
orl
and
dec
xchg
ret
or
icebp
scas
ja
xchg
cs
sbb
negb
mov
xchg
sbb
pop
jns
lret
test
inc
je
xchg
push
pop
movsb
push
jg
dec
xor
push
cltd
dec
mov
xchg
out
rol
mov
or
push
cmp
sub
gs
dec
lea
scas
cmpsl
mov
push
xor
jp
xor
jae
xchg
lahf
inc
or
xlat
xor
and
dec
and
fwait
stc
jne
mov
ffree
cltd
repz
inc
mov
lret
mov
inc
jecxz
jmp
xor
dec
add
pushl
lcall
mov
sub
test
adc
movzbl
push
mov
test
pop
add
and
mov
cld
xchg
pop
mov
inc
fisttps
cwtl
cmp
mov
filds
dec
pop
jnp
mov
xchg
clc
addl
adc
inc
push
mov
cli
inc
std
jb
loope
pop
sbb
incl
cs
sub
fiaddl
mov
and
outsl
pop
mov
stos
jl
stos
sub
xchg
and
outsb
mov
hlt
sub
inc
mov
int3
cmp
xor
pop
lock
jge
mov
std
cmp
lcall
or
cmp
dec
mov
aad
lret
or
and
or
mov
leave
and
shrd
arpl
xchg
es
xchg
xlat
imul
js
daa
icebp
dec
pop
sahf
xor
filds
sbb
pop
addr16
mov
add
cmp
in
aas
sub
subl
pop
insl
jno
jo
jnp
sti
xchg
inc
sub
gs
xor
fidivs
inc
pushf
addr16
xor
push
adc
xor
les
or
xor
jb
push
enter
sub
and
test
inc
push
add
pushf
push
sub
pop
sbb
xor
inc
mov
cvtps2pd
testl
sub
mov
inc
rcrl
sub
popf
inc
sub
push
sti
mov
and
fsubrs
ljmp
lods
jb
rorl
iret
mov
cmp
xor
add
test
push
sbb
push
xor
pop
mov
dec
call
sbb
push
movsl
push
xor
pop
ffree
call
ds
sub
roll
mov
mov
arpl
popa
jecxz
xor
inc
push
sbb
fisttps
cmpsl
mov
sub
mov
mov
mov
loope
ljmp
jmp
jg
ret
sub
sub
test
in
mov
fs
icebp
gs
inc
adc
mov
lret
pop
push
push
jle
sub
aaa
hlt
in
jp
jl
mov
sub
out
sti
jmp
mov
push
ffreep
fadds
pop
mov
mov
outsb
imul
in
mov
pop
js
xchg
sub
push
cwtl
out
jg
ficomps
jge
rcrl
pop
sahf
push
sub
and
jnp
out
sub
mov
sbb
int
loopne
std
fstpl
test
mov
dec
les
push
sbb
adc
aam
lods
xor
and
rcrl
rclb
mov
cli
or
mov
popf
jno
and
stc
push
shll
mov
push
jl
test
je
push
andb
add
pop
ja
out
das
xorl
fs
clc
push
icebp
fcmovnu
push
sahf
or
add
cltd
xor
fiaddl
lods
in
inc
adc
stc
adc
mov
mov
lahf
jno
mov
pop
fwait
inc
sti
in
xor
jmp
xchg
rcll
scas
ret
sub
int3
push
ds
mov
andb
add
int3
cli
stos
lds
hlt
je
or
popa
fmull
adc
loope
insl
sahf
push
cs
pop
xchg
out
movb
cmp
inc
clc
push
inc
sub
pop
test
das
scas
xchg
lock
dec
dec
addr16
jno
push
push
xchg
jno
bound
dec
mov
mov
shlb
add
lods
shl
loop
mov
xor
cmpl
rorl
inc
shl
loope
xor
inc
mov
mov
push
out
in
repnz
jns
bound
jecxz
mov
inc
xchg
push
adc
inc
and
test
in
jnp
pop
mov
mov
mov
jge
pusha
xchg
mov
bswap
jge
sub
lds
pop
arpl
imul
std
hlt
movl
les
xor
ret
rorb
xor
fisubrs
sbb
sub
add
push
mov
sbb
into
pusha
movsb
mov
sub
mov
pop
sbb
inc
and
scas
ret
push
add
inc
or
add
cmc
ret
cld
inc
mov
call
les
pop
mov
insb
das
sub
cmp
rorb
stos
push
or
dec
ret
lods
andb
mov
out
jmp
orb
dec
jne
pop
ret
mov
push
fcomip
sbb
out
cmp
out
das
fldl
pop
std
or
xor
lret
xchg
xlat
pop
lds
sar
cmp
movsb
ret
adc
mov
push
and
out
test
xchg
pop
jp
das
xchg
daa
call
cs
jb
xchg
mov
xchg
mov
push
bswap
aas
fildll
test
add
cmc
in
mov
mov
hlt
lea
push
int
lods
cmc
shrb
push
jecxz
mov
repnz
sub
mov
push
mov
xchg
in
xchg
mov
repz
push
cs
sar
cmp
push
xchg
mov
cli
add
sahf
cmp
or
pusha
or
lea
imul
jno
movsb
jne
daa
and
jle
jns
xor
mov
sarb
js
test
insb
cmp
stos
cmp
dec
or
sti
push
push
jb
fwait
add
into
xchg
iret
lcall
or
stos
mov
jge
and
or
ror
fstps
xchg
into
xchg
out
xor
xor
or
out
cmpsb
imul
cmpsl
xor
sub
out
inc
call
inc
push
js
mov
and
sub
aaa
outsb
cmp
jle
dec
out
roll
ret
ds
rolb
test
fs
mov
out
pop
cmp
mov
jl
rorb
cmpsl
nop
mov
jns
pop
aas
test
in
insl
mov
xchg
fidivl
push
hlt
fs
outsb
iret
jecxz
lret
fistpl
xor
xchg
push
loopne
pusha
sub
addr16
jb
mov
fistl
rcr
pop
mov
and
mov
fdivl
out
dec
sbb
out
push
scas
arpl
sub
lret
push
stos
aad
int3
jecxz
push
repz
xor
add
clc
aas
xchg
lods
cs
in
stos
and
inc
pushf
test
push
addr16
push
and
dec
ljmp
mov
out
pop
out
pop
jge
aam
aaa
hlt
inc
jne
mov
and
xor
inc
mov
jno
cmp
sti
push
jnp
and
sub
cmp
adc
in
int
cmp
mov
push
int3
inc
lods
pop
inc
push
sub
mov
mov
inc
bnd
sbb
pop
clc
lods
js
lods
mov
les
lea
aam
cli
mov
ljmp
jne
mov
enter
and
pop
or
dec
push
and
gs
mov
jmp
repnz
adc
push
mov
stos
cmpl
inc
cmp
shll
jns
mov
fmuls
in
jo
mov
test
arpl
cmpsb
dec
fcmovbe
test
test
or
movsb
or
sub
test
pop
outsb
ret
push
loop
in
add
add
fisttpl
xorl
dec
outsb
inc
inc
ljmp
push
out
daa
imul
inc
xchg
clc
loop
testl
rorb
or
mov
dec
mov
aad
adc
adc
lods
jbe
cmpsb
fadds
cmp
sbb
push
or
pop
adc
mov
icebp
cwtl
sbb
pop
cltd
lock
adc
popf
jbe
stos
jp
cmp
cmp
sahf
loop
dec
enter
fsin
xchg
jns
in
mov
dec
jle
mov
and
pop
js
daa
mov
cli
inc
stc
cmp
fistpll
rorb
in
mov
push
std
xchg
cmpl
test
lock
or
in
fs
jmp
sub
incl
aas
push
xor
push
out
inc
adc
jne
int3
pop
add
dec
ret
sub
jmp
je
aaa
clc
test
jmp
shl
rcll
xchg
xor
shr
push
sbb
mov
lret
and
or
addb
popf
shlb
nop
roll
daa
mov
dec
das
loopne
sub
inc
pop
adc
aaa
int3
and
subb
ljmp
push
add
nop
sub
ljmp
push
movsb
xchg
enter
dec
js
mov
mov
popa
outsl
mov
mov
fwait
cmp
sti
mov
inc
jle
or
les
add
cmp
or
cmpsb
lock
or
sbbb
add
aad
fdivr
jp
xor
arpl
xchg
lcall
pop
icebp
popa
es
cmp
aam
scas
pop
inc
mov
lods
outsl
push
sbb
and
push
testb
mov
sbb
mov
xchg
add
fdivrl
jnp
lret
lods
jns
jg
test
mov
push
mov
iret
fscale
sbb
jo
add
in
sarl
flds
icebp
icebp
dec
inc
dec
xor
into
fs
and
push
jns
cli
insb
add
push
pop
rorb
xor
lcall
rcrl
fsub
ljmp
lret
scas
mov
test
push
mov
pop
xor
insl
movsb
mov
adc
das
and
ja
sub
xchg
mov
jno
loop
add
push
sub
mov
xor
mov
outsb
ss
cli
xchg
lret
mov
or
mov
test
pop
ss
adc
cs
adcl
sub
lea
pushl
and
adc
sti
mov
mov
scas
stc
pop
xor
lods
idiv
xor
lahf
pop
xor
lods
dec
push
lret
je
fmul
mov
mov
dec
lret
inc
or
add
sub
inc
xor
pop
adc
sahf
data16
and
sub
repz
mov
sahf
jbe
inc
xor
ret
sahf
mov
inc
sbb
scas
adc
mov
mov
imul
arpl
mov
mov
loopne
paddd
cmpsl
les
loopne
jp
out
cld
jne
nop
arpl
nop
cmp
addl
mov
xchg
iret
push
mov
lea
movq
sti
push
sub
in
cmp
inc
rcl
jo
cmp
ret
shll
rcll
pop
jnp
mov
repz
mov
mov
mov
fldl
lds
and
fisubrs
sbb
and
call
jge
outsl
cli
jnp
ret
sbb
jg
cli
or
hlt
mov
rcl
push
push
faddp
cmpsb
dec
movl
or
cmc
add
cmp
fwait
xchg
scas
xor
inc
arpl
stos
or
int3
jp
imul
ret
clc
call
aad
cld
cmp
sbb
mov
xor
xchg
lock
ss
and
fstpt
or
or
test
daa
call
loopne
and
or
push
iret
pextrw
mov
repz
add
mov
push
xor
out
sub
hlt
test
aas
cwtl
pop
pusha
sbb
loop
cld
aam
clc
lds
aad
inc
sub
push
jle
sbbb
jg
xor
je
repnz
pop
sbb
push
xor
mov
sub
nop
lret
js
pop
jb
xor
pop
sbb
jns
sbbb
or
adcb
mov
iret
test
ds
mov
xchg
xor
or
loopne
add
popf
inc
bound
cld
xchg
aad
xchg
test
lahf
ret
hlt
shl
cmp
cld
mov
test
and
mov
mov
or
mul
pop
cs
mov
mov
xor
mov
pop
xor
add
mov
add
into
inc
cmp
xchg
rep
pop
stc
fcmovbe
sbb
push
cmp
je
clc
das
xor
add
dec
mov
hlt
scas
sub
and
lea
fs
jmp
mov
in
sar
mov
and
cwtl
std
xor
cli
sub
mov
fiadds
adc
cmp
stc
jb
push
ja
sub
push
jge
jo
sbb
xlat
lret
and
cmp
sub
pop
stos
cld
sub
inc
and
inc
stc
fsubs
push
cmp
mov
xchg
test
divl
sub
insl
jns
jo
cli
int
jle
mov
bound
clc
push
test
enter
addr16
cmc
cld
push
adc
aad
nop
or
push
sti
in
mov
add
arpl
jb
stos
mov
mov
xrelease
inc
aam
adc
fwait
aas
dec
xchg
add
cli
ret
gs
push
fsubp
roll
dec
fwait
cltd
test
and
push
xor
jne
mov
inc
push
adcl
mov
mov
inc
sub
jp
lcall
pop
xchg
xchg
scas
cmp
outsb
aam
xorb
outsb
cmp
jge
lods
and
ljmp
and
clc
dec
pop
ds
cmp
rorb
mov
leave
mov
divps
pop
ja
adc
mov
cwtl
push
outsb
imul
mov
mov
push
fstpt
cmpsl
popa
orl
outsb
jg
sub
mov
mov
test
mov
cld
movsl
or
sub
mov
leave
sti
aam
nop
and
loopne
stc
mov
fcompl
jae
imul
out
push
inc
lods
ret
mov
sub
in
scas
xchg
test
add
popl
stos
mov
es
shlb
mov
scas
push
hlt
inc
sbbl
mov
xchg
xchg
loop
jns
dec
jb
add
in
pop
ljmp
loopne
xor
mov
add
lods
cmpsb
cld
fldl
mov
stc
das
lcall
and
add
cmp
pop
ret
xchg
mov
test
loop
dec
jne
mov
xor
cwtl
cmp
adc
ret
les
lods
mov
lock
sub
leave
mov
push
mov
test
fwait
in
popa
or
lods
je
xor
loope
jl
outsl
pushf
mov
push
fsub
and
std
insl
idivb
jnp
adc
mov
in
push
xchg
in
test
xor
sub
pop
fwait
mov
fldl
test
imul
ror
jne
and
fcomi
mov
mov
aad
or
add
jb
dec
or
and
add
es
ds
fnsave
fidivrs
mov
inc
fwait
mov
inc
mov
add
test
arpl
mov
xor
pop
push
mov
stos
ja
cmp
or
rol
xlat
push
mov
lcall
and
xor
jns
push
into
outsb
fwait
or
ja
push
jbe
sub
pop
adc
fcom
xorb
inc
sub
and
or
test
lods
jp
cmc
fsts
cmp
or
int3
sub
push
jecxz
test
loope
aas
sub
imul
and
and
imul
shll
loope
and
adc
jg
test
test
imul
add
lret
lock
mov
sbb
test
outsl
jne
insl
mov
ret
xor
push
cwtl
icebp
lret
pop
add
mov
je
or
sbb
inc
cld
push
mulb
loope
xor
jecxz
test
lods
or
test
ss
cmpsb
js
inc
add
stc
lahf
fcomp
mov
aaa
fs
cmp
insb
xchg
ret
pop
addr16
pop
push
sub
mov
add
movsb
or
cvtpi2ps
jle
sub
loop
imul
pop
or
cwtl
and
lea
fstl
idiv
push
inc
mov
inc
scas
push
push
out
mov
xor
jle
popa
cli
out
adc
sub
cld
mov
sti
pushf
cmp
mov
sub
xchg
mov
inc
sub
adc
cmpsb
sarl
ljmp
jbe
push
repz
xchg
sub
or
sub
fidivs
jb
xchg
je
cmp
xchg
push
and
jo
add
ss
xchg
or
mov
cmp
stos
inc
jae
cmp
cmp
lds
mov
int3
mov
dec
jno
bound
sub
loope
xor
and
sub
pop
adc
lods
shl
mov
test
xchg
pop
cmpsb
cs
loopne
repnz
inc
inc
inc
leave
mov
out
cmpsl
inc
adc
push
icebp
xchg
mov
sbbl
inc
lds
mov
and
inc
push
outsb
and
xor
mov
mov
fsts
dec
imul
and
cmp
call
adc
scas
std
int
xchg
inc
jmp
mov
sbb
mov
test
sahf
dec
cli
loopne
cmpsb
mov
jg
fwait
sarb
mov
ljmp
testb
movsl
dec
mov
mov
sub
jns
test
sar
adc
add
scas
fs
ret
xchg
outsl
add
and
or
mul
and
lods
lock
lds
sbb
sti
sbb
imul
mov
mov
sarl
pop
or
sub
sbb
sahf
sbb
lods
add
mov
ret
lods
or
xchg
dec
aas
push
pushf
or
out
or
mov
cmp
xor
roll
pop
dec
cmpsl
gs
call
xlat
cltd
stos
rclb
movsl
aas
or
jno
leave
andb
push
inc
pop
stc
pop
dec
and
mov
jge
pushf
mov
sar
pop
pop
loope
pop
les
lret
testl
lea
sti
sbb
stos
nop
mov
xchg
jns
aad
mov
xchg
lret
xor
push
xchg
shll
mov
mov
sub
movl
mov
lret
icebp
shll
push
jns
lret
std
int3
scas
ret
xchg
pop
pcmpeqd
popf
nop
pushf
dec
mov
pop
je
repz
je
and
mov
ret
pop
mov
ljmp
loope
push
mov
xchg
testl
push
pop
insb
orl
cmp
xor
add
inc
add
adc
and
push
and
inc
fidivrs
sub
sbb
lret
xchg
ret
fcoml
xor
push
pop
out
outsb
cli
test
sbb
xchg
test
shrb
lcall
out
subb
xor
jne
jge
xor
je
inc
pop
xchg
mov
lcall
repz
xor
lahf
xchg
sub
stos
repz
mov
jns
xor
inc
add
xor
inc
cmpsb
cmp
idiv
mov
icebp
mov
lret
inc
ljmp
or
mov
clc
add
cs
jmp
push
mov
imul
jge
dec
xor
sub
jle
cmp
sub
xor
outsb
adc
imul
mov
cmc
cmc
sub
mov
dec
je
popf
data16
xchg
inc
mov
leave
dec
scas
jg
cmp
cmpsl
pop
mov
loopne
cmp
imul
adc
jmp
cmp
into
add
adc
pop
data16
mov
or
inc
and
rcll
insl
ss
out
in
cltd
das
cmp
dec
mov
leave
aad
ds
arpl
add
ljmp
rorl
dec
xchg
ret
or
mov
jno
fwait
test
or
stos
and
mov
cs
fcmovbe
clc
loopne
fnstcw
xchg
aad
test
ljmp
scas
out
cltd
repnz
repnz
sbb
pop
daa
sub
jmp
imul
sub
dec
cmc
jbe
adc
les
lds
cmpsl
push
mov
jmp
fadds
into
inc
adc
inc
pop
adc
rorb
mov
ds
clc
mov
push
movsb
and
outsb
sti
mov
bound
inc
fsubrp
mov
xchg
stos
js
mov
mov
sbb
xor
or
scas
nop
aad
test
mov
or
dec
mov
jne
pop
stc
test
sbb
mov
adc
mov
js
js
lahf
outsl
push
mov
test
sub
jg
push
filds
cld
hlt
jnp
mov
xchg
and
mov
adc
push
orl
stos
or
insb
jno
lcall
faddp
push
jl
scas
call
push
out
lds
pop
mov
push
push
ret
and
mov
jns
stos
jge
pop
push
mov
out
mov
test
pusha
les
pop
or
xor
leave
sahf
cwtl
push
movsl
dec
pop
das
data16
cmp
dec
ret
jb
inc
test
inc
mov
lea
imul
cmp
xchg
fidivrl
je
shlb
push
mov
fwait
cmp
adc
mov
mov
sub
fcomip
rolb
scas
xor
daa
jnp
pusha
inc
jle
scas
lock
ja
xorl
fcomps
mov
fstps
inc
cmp
and
adc
xor
cli
jb
loopne
lret
lcall
out
jne
cmp
andb
arpl
fdivrl
adc
sub
xchg
mov
popa
stos
out
jg
ja
adc
mov
jno
fisttpl
rep
outsb
dec
or
inc
int
mov
rcl
shrb
fisttps
pop
jl
push
mov
xor
xchg
shlb
adc
xchg
bound
xchg
jbe
jecxz
incb
inc
push
out
loope
imul
dec
fimull
sub
cmp
clc
xchg
pop
or
bound
mov
lds
inc
mov
push
iret
mov
jg
andl
mov
mov
imul
mov
sti
mov
test
xchg
loopne
fstpt
inc
cmp
rol
mov
lods
data16
xchg
push
hlt
or
jno
sarb
cmp
mov
lahf
push
repnz
fcoms
stc
scas
xchg
frstor
jmp
inc
jg
jmp
pusha
or
xchg
adc
out
icebp
inc
pusha
sub
inc
stc
add
mov
scas
lods
fs
jecxz
xor
test
pop
aaa
jle
adc
cmpsb
dec
pop
js
and
int3
test
add
call
adc
jmp
and
jns
xlat
cltd
jle
add
subb
and
or
je
mov
cmp
jne
and
jge
cwtl
ljmp
xchg
xchg
ja
stc
movl
iret
pop
stc
aas
test
xchg
push
sbb
add
fstpl
int
mov
xlat
lock
pop
sbb
push
sub
add
in
and
jmp
test
lods
cs
cmp
sahf
xor
cmp
jg
add
lock
sub
scas
sbb
repz
into
mov
cltd
ja
xor
mov
test
and
rcll
xlat
test
mov
jae
rep
push
mov
xchg
jle
and
aad
inc
xchg
lret
jnp
cmp
mov
rol
inc
adc
ljmp
pop
int3
das
cli
and
mov
aas
jno
mov
fidivrs
sub
pop
mov
push
inc
xlat
pushf
movsl
jb
ja
fiadds
pop
rcll
test
int
nop
jl
enter
jp
or
ret
push
pop
ret
adc
fisttpll
addr16
and
add
in
mov
mov
mov
je
popa
sbb
push
push
pop
mov
in
jge
loop
mov
mov
jbe
mov
or
xor
jb
pop
adc
aad
gs
lock
addb
pop
jb
pusha
ss
aad
cld
and
push
test
pop
aam
mov
pusha
add
sub
jecxz
leave
and
les
sar
ds
mov
scas
push
popa
mov
cmp
pop
sbb
mov
lcall
push
mov
jbe
jg
mov
xor
jmp
mov
sub
iret
mov
and
inc
inc
ffree
das
inc
test
repnz
dec
filds
cmp
push
dec
push
jle
sbb
popa
jg
mov
iret
xchg
jnp
enter
pop
cli
lret
loope
jmp
push
or
enter
mov
loopne
or
cmp
aas
inc
pop
adc
inc
xchg
aaa
rcl
loop
xchg
sbb
movsb
rclb
sub
arpl
and
mov
adc
cmp
es
push
fdivrl
jmp
aas
jp
mov
xor
in
dec
loope
out
lret
push
mov
xchg
es
jae
push
mov
mov
mov
stc
add
test
fcomps
insl
add
mov
stos
ja
xlat
mov
push
sub
in
xchg
push
inc
imul
or
jmp
xchg
in
movswl
or
xchg
xchg
add
cmp
inc
mov
movsb
mov
xlat
enter
in
xchg
shrl
ret
xor
push
jbe
fstpt
test
jecxz
jle
fs
mov
xor
mov
mov
or
adc
dec
add
sub
pop
lods
mov
sbb
cmp
sbb
les
adc
sbb
hlt
leave
rcl
mov
mov
push
addr16
fidivrs
mov
mov
sbb
xchg
sbb
push
add
mov
popf
add
add
adc
mul
jl
cmp
cltd
pop
jae
dec
cmp
mov
arpl
xchg
jle
mov
les
fmull
lcall
xchg
cmpsl
mov
push
aam
mov
daa
pop
roll
pop
cmp
push
cmp
popa
aaa
inc
jnp
jg
out
repz
out
test
fs
lds
push
scas
adc
jne
int3
out
cmp
push
outsb
hlt
push
push
mov
push
movsb
sbb
jne
stos
push
sbb
hlt
lds
pushf
dec
push
data16
das
ret
scas
roll
lahf
xchg
fmul
loopne
inc
xor
mov
cmp
or
in
mov
aas
push
fucomi
jns
ja
adc
js
jae
jg
and
lods
pop
pop
push
mov
jle
mov
ret
aaa
or
mov
push
cltd
loop
xor
adc
jmp
dec
lods
lahf
mov
pop
fimuls
sbb
mov
clc
mov
xor
or
adc
cmp
stos
call
pop
mov
rcr
lods
rclb
inc
xor
in
std
fwait
sbb
mov
jne
rcrb
mov
push
adc
xor
inc
cmpsb
push
loope
sbb
push
jb
js
or
fdivs
out
push
hlt
ds
lds
jb
pop
in
jl
dec
inc
dec
dec
pushf
inc
out
mov
inc
inc
test
mov
and
pop
popf
test
test
push
mov
ss
lods
xchg
cmp
int3
mov
iret
ja
jno
mov
push
pop
cmpsb
rcrl
push
add
sti
popa
repnz
lret
in
sbb
fists
and
xchg
js
aaa
mov
gs
mov
mov
jp
cmp
stos
test
out
aam
pop
add
xchg
xchg
xor
cmc
js
outsb
inc
adc
ljmp
xchg
push
xchg
inc
pop
xchg
divl
test
bound
xorl
dec
xlat
daa
outsb
jnp
xor
lods
in
lock
outsl
mov
lret
mov
insl
inc
arpl
or
clc
frstor
test
gs
sbb
add
pop
cmp
jecxz
pop
mov
add
push
stos
push
or
insl
inc
jecxz
pop
scas
jecxz
fistpll
test
mov
jbe
and
fstl
subl
dec
iret
or
addb
xchg
push
cmc
inc
push
adc
mov
sbb
jne
adc
push
pop
icebp
sub
or
push
jo
add
push
std
outsb
sbb
dec
xor
pop
inc
mov
or
inc
adc
cmp
pop
sbb
jmp
sub
stos
mov
aas
jb
and
mov
es
mov
repnz
aad
shrb
std
cmp
or
jl
shll
shll
mov
xor
pop
adc
aam
and
ja
aaa
xor
adc
jae
nop
cltd
stos
cmp
int
cmp
imul
cmp
jbe
insb
lods
mov
jle
jbe
inc
addl
loope
cmp
nop
fsubrs
das
mov
int
mov
arpl
pop
inc
notb
clc
sti
fwait
push
lret
jne
pop
jmp
je
jge
outsl
xlat
sub
xchg
push
mov
out
sahf
sarl
add
popa
cmp
add
fnstcw
lods
movb
mov
arpl
fisttps
jbe
dec
cmc
out
push
sbb
aad
and
jb
insb
cmp
mov
xchg
pop
jmp
popa
and
cmp
inc
lret
loope
jecxz
jae
pop
dec
sbb
jle
push
sbbb
out
mov
ret
cmpsb
js
mov
ljmp
cmpl
push
out
es
std
sub
dec
pop
aaa
add
add
or
imul
xchg
stos
and
cmpsb
lret
daa
push
dec
pop
cmp
ds
adc
outsb
clc
pop
fidivs
jnp
mov
inc
cmp
or
or
push
pop
shrl
aaa
cmp
pop
jb
push
popa
push
stos
xchg
test
dec
jl
push
je
dec
ljmp
cmp
adc
mov
mov
and
jle
add
lods
ds
ja
pusha
xor
cwtl
cvtpi2ps
jl
pop
repz
xor
movaps
sbb
fnsave
js
je
daa
pop
fmul
lret
sub
push
mov
push
jo
cmp
call
dec
pop
adc
xchg
mov
sbb
ret
sbb
jbe
mov
jns
dec
or
loopne
mov
cmp
lods
jns
and
pushl
into
aas
lret
cmp
lcall
cmp
aam
fidivs
lea
xchg
mov
jg
push
pop
push
into
sub
pop
push
fimull
enter
in
mov
xchg
mov
cmp
xchg
shlb
adc
insl
lds
shll
in
or
cmc
je
nop
dec
icebp
mov
call
pop
xor
les
rclb
ret
jl
xor
lret
dec
xor
xchg
cmpsl
push
test
mov
lds
js
xorl
xchg
lahf
subl
inc
mov
in
pop
sub
das
sahf
outsl
rcrl
mov
jg
jle
or
sub
push
xchg
pop
outsl
add
xchg
sbb
clc
mov
aad
test
cmp
dec
jo
les
add
xchg
push
loope
ret
fwait
sub
inc
gs
je
shufps
in
and
pop
ss
scas
add
pop
pop
hlt
add
add
std
sbb
or
test
cmp
jg
cmp
stc
mov
sbb
pop
fbstp
jbe
cld
pop
inc
testl
and
popa
je
decl
cmp
cmpsl
push
sbb
mov
insb
xor
jns
sbb
push
sub
lea
sbb
call
add
cmp
inc
daa
push
fdivl
mov
xor
gs
jl
out
cmpl
or
sub
scas
enter
int3
addl
cmpsl
in
jmp
push
inc
xchg
and
adc
cmp
xchg
add
lods
fiaddl
pop
das
sbb
aaa
mov
insl
into
cs
dec
fbld
sbb
xchg
push
daa
push
ljmp
add
int
mov
out
mov
sub
mov
fmul
xchg
xchg
xor
dec
fdivp
cld
push
dec
loop
mov
add
cmc
jp
jp
push
out
pop
into
mov
adc
shlb
lcall
or
sbb
cmp
stc
sub
jb
sbb
xchg
xchg
sbb
outsl
test
inc
mov
xchg
add
imul
xchg
jo
movsb
cmpsl
insl
in
lahf
rorb
cmp
stos
lahf
or
fidivrs
and
adc
jns
mov
mov
ljmp
mov
xchg
dec
dec
inc
or
cmpl
popf
lods
push
jge
add
mov
pop
mov
aad
lods
dec
sbb
sbb
xor
jecxz
add
adc
jp
inc
mov
mov
pop
mov
int
jnp
and
xchg
popa
stos
shr
insb
and
daa
movsl
dec
mov
fsubl
xchg
sbb
fldt
dec
ret
test
mov
add
iret
mov
xlat
scas
push
je
insb
inc
in
jmp
jle
mov
xchg
adc
in
cld
cmp
insb
outsl
add
mov
scas
aam
cld
xor
cmp
mov
test
das
pop
push
pusha
xchg
xchg
mov
aaa
pop
fbstp
xchg
lock
aaa
or
mov
adc
xchg
push
mov
adc
mov
cwtl
nop
ja
xchg
mov
sbb
mov
aaa
xor
ficompl
mov
xor
mov
fs
subb
int3
sbb
and
test
cmp
push
fsubr
iret
hlt
jp
xchg
fwait
bnd
adc
cmp
adc
or
xchg
jns
iret
mov
adc
mov
mov
lods
cmp
mov
push
rorb
outsl
jg
mov
call
stc
adc
shrb
ss
shrl
jno
mov
cwtl
divl
in
pop
mov
mov
xor
mov
push
ret
cmpsl
inc
or
mov
shll
and
mov
jbe
dec
fildl
xchg
dec
jmp
icebp
js
pop
mov
xor
push
mov
or
lcall
push
icebp
inc
mov
decl
sarl
cmp
adc
out
jae
jns
mov
incb
mov
dec
popl
mov
jmp
sbb
or
cli
pop
or
mov
cmp
enter
dec
sub
insb
sub
inc
sarb
push
mov
leave
rolb
outsl
adc
aaa
pop
xor
sarl
cmpsl
push
mov
dec
mov
sub
jo
cmp
add
mov
loopne
xor
ljmp
lcall
loop
dec
int3
call
lods
fisttps
and
jecxz
aas
ds
outsb
push
or
jo
data16
pop
cmp
dec
aad
and
mov
adc
dec
in
aam
imul
stc
aad
into
jmp
dec
pop
jb
cltd
push
insb
roll
cld
not
movsb
insb
clc
shrl
loope
ret
push
mov
iret
rolb
mov
cmp
fistpl
and
pop
xchg
mov
movsb
mov
dec
rcrl
ja
test
sbb
dec
xchg
dec
das
jbe
add
mov
or
arpl
cld
add
lahf
adc
xchg
movsb
pop
cmpsb
js
xor
add
mov
dec
pop
sbb
mov
popf
dec
fldl
into
cmp
mov
pop
sub
and
cmp
cld
addl
lds
cmp
cmovge
lods
cmp
mov
mov
jmp
push
std
xchg
jno
loopne
cmpb
adc
mov
mov
add
xchg
mov
pop
jno
enter
dec
or
adc
dec
sub
and
cmp
and
adc
push
mov
gs
dec
cmc
jae
xchg
shrb
test
stc
shl
mov
clts
push
dec
jo
cltd
movsb
sub
insl
aas
jne
daa
shrl
inc
sub
in
mov
xor
addr16
fstpl
jnp
sub
div
jne
push
jo
mov
fistl
call
ret
lcall
pop
scas
and
push
adc
inc
out
pop
dec
je
das
pop
push
rorl
pop
mov
mov
fsin
in
addr16
loope
sbb
or
jge
out
movsb
rorb
or
insb
jns
outsb
dec
pop
cmp
dec
add
fwait
dec
push
mov
mov
mov
xlat
repnz
adc
add
jecxz
xlat
imul
jl
out
xorb
dec
subb
push
sub
pushf
nop
cmc
push
xor
lds
adc
ja
cmp
jl
hlt
adc
out
daa
insl
movsl
iret
es
ss
loop
or
incb
cwtl
and
enter
xchg
push
xor
lret
mov
mov
lds
adc
inc
cld
mov
fwait
ss
xorl
and
mov
jae
psubb
lret
xor
out
xor
scas
lds
lock
sub
jne
push
insb
jb
jb
dec
ret
ja
jmp
sub
cld
popa
adc
xchg
xor
cmp
ror
cmp
pop
dec
fsubrs
mov
daa
mov
sahf
pop
enter
scas
loopne
pop
xchg
jg
into
orl
cmp
push
out
fsubs
pop
hlt
clc
ss
sbb
test
rorb
into
sbb
add
mov
mov
push
int3
test
and
out
xorl
mov
fcoml
lret
cs
inc
mov
sub
cmp
sbb
jge
pushf
outsl
insl
push
insb
cmp
or
inc
jb
cmp
jl
xchg
out
push
push
cltd
ret
mov
push
aaa
push
dec
fbld
mov
cmp
lret
lods
inc
aad
xor
icebp
inc
icebp
lods
test
loop
fisttpll
lcall
lods
xchg
mov
xchg
mov
dec
sahf
int
rcrl
inc
pop
add
aaa
nop
or
pushf
pushf
and
lcall
dec
addr16
lea
mov
pop
xchg
cltd
shr
pushf
call
and
shl
pop
xlat
mov
lock
daa
imul
lahf
enter
aad
in
pop
xchg
jb
test
mov
sub
sahf
sbb
stos
push
ret
sub
push
les
adc
lds
mov
call
sub
mov
test
sub
inc
adc
push
adc
in
mov
cwtl
mov
mov
pop
adc
sub
add
out
rol
mov
into
sub
nop
arpl
in
mov
push
es
jmp
cli
mov
pop
add
jae
xor
ja
enter
ss
lcall
cmp
repz
in
cmc
test
movsl
lret
mov
aaa
mov
faddl
sbb
pop
inc
push
adc
sub
cmpsb
iret
test
add
mov
mov
sub
dec
mov
or
ret
stos
jne
jge
icebp
cwtl
lea
xor
add
jo
fldcw
jl
jnp
leave
imul
and
add
insb
add
xchg
mov
loope
push
add
add
ljmp
xchg
stc
mov
or
imul
xor
jmp
rcll
lcall
push
xor
shlb
inc
mov
cltd
das
imul
mov
push
shl
mov
push
pushf
jg
mov
adc
es
and
pop
iret
pop
fidivrl
mov
lds
mov
jecxz
testb
imul
ret
mov
mov
jbe
pop
adc
jb
inc
arpl
addb
adc
push
repz
cmp
xchg
jmp
int
out
dec
xor
sub
insb
cli
or
jmp
xor
jnp
ljmp
icebp
adc
pop
stos
or
mov
ret
arpl
sub
and
mov
jmp
jecxz
sbb
mov
mov
gs
addr16
jo
pop
or
lea
and
ds
jmp
lret
es
or
movsb
fwait
pop
loope
in
loope
cmp
pop
in
and
clc
cmp
cltd
mov
rcrl
cmp
ljmp
jle
fimull
push
xchg
jbe
pop
adc
inc
xor
dec
dec
imul
into
jbe
sub
jno
lods
add
rorb
pop
pop
test
call
or
add
int
test
xchg
stos
insb
fs
movsl
or
lods
popf
lea
cmp
int3
sbb
jl
push
pop
es
jecxz
lcall
iret
flds
sahf
push
daa
insl
js
cmp
outsl
shll
negb
xchg
or
mov
adc
mov
popa
dec
mov
xor
inc
fidivrs
sti
int
cs
lods
adc
dec
popa
mov
cmp
push
ret
int
jb
xlat
mov
cmpsb
lret
inc
orb
adc
xor
shll
daa
mov
adc
add
out
push
pop
sbb
pop
lea
jge
aas
inc
lods
lea
mov
leave
mov
out
lret
jo
push
popf
arpl
dec
mov
imul
sub
mov
shr
call
loop
repnz
pop
mov
outsb
into
mov
rcll
aaa
movsb
stc
nop
sbb
test
or
dec
inc
popf
cmpsb
fsubl
into
xor
pop
inc
mov
add
fimull
sbb
les
dec
jg
loope
push
pop
aas
mov
xchg
push
mov
movsl
and
sbb
mov
and
jle
andb
cltd
xlat
test
mov
das
loopne
mov
js
fcoml
sbb
add
in
dec
lock
jo
inc
cld
push
out
push
lret
jle
adc
sbb
loop
addr16
int
or
or
pushf
sarl
pushf
xchg
push
cwtl
sub
sub
sub
or
sub
pop
pop
and
xchg
loope
sbb
cmpb
xchg
xor
lods
jbe
pop
xchg
pop
ret
mov
mov
jecxz
dec
lret
hlt
ret
sub
mov
push
jb
mov
out
into
xchg
adc
mov
movb
aad
mov
inc
movsl
pop
subb
gs
pop
xchg
mov
pop
add
in
data16
fstl
and
and
or
jmp
pop
cmp
cmc
pop
sub
cld
je
sub
ss
pushf
jbe
lahf
fs
call
cmc
loop
mov
shrl
push
inc
and
cmpsl
mov
inc
pop
or
loop
pop
jno
daa
in
repnz
mov
in
inc
arpl
cmp
out
dec
mov
filds
lea
pmaxub
cmp
sti
mov
rcll
pop
jle
in
xor
jmp
inc
mov
xchg
lahf
jge
outsb
cmpsb
lret
jo
add
addr16
sbb
imul
sbb
inc
push
sbb
inc
and
cmpsb
outsl
stos
int3
movsb
pop
jecxz
repz
mov
cmp
lcall
outsb
push
inc
test
jl
js
lds
dec
mov
cld
test
xchg
or
imul
xchg
inc
jecxz
les
inc
pop
sub
dec
rep
cmpsl
xor
push
add
popf
xchg
in
mov
lret
xor
mov
push
shrb
adc
outsb
stos
adc
cli
pop
stos
shl
mov
mov
lret
push
fisubrl
fwait
or
fnstsw
mov
or
in
jnp
mov
scas
stc
sti
movsl
dec
mov
aas
push
pop
jecxz
and
ljmp
ss
jge
dec
jae
jg
mov
mov
push
sbbb
fcompl
cmp
fldenv
inc
xchg
es
dec
stos
xlat
es
sti
fidivrl
pop
test
pushf
repz
jno
and
xor
push
in
mov
daa
dec
xchg
mov
jb
dec
stos
sahf
movsb
mov
movsb
in
pop
enter
sbb
sub
mov
push
inc
movsb
xchg
add
bound
pop
xchg
bound
mov
mov
addl
pop
aas
xchg
push
xchg
dec
inc
into
xlat
or
in
subl
mov
fs
fsubl
pop
xchg
jmp
inc
dec
pushf
icebp
xchg
rclb
daa
in
je
shlb
sbb
imul
pop
dec
loop
add
stc
or
or
sbbb
adc
jnp
cmp
xor
mov
xor
ret
cmp
mov
fisubs
lods
hlt
sar
test
clc
in
jl
mov
testl
imul
add
mov
in
das
jb
bound
shrb
sarb
in
out
cli
mov
fisubrl
fstps
aam
push
xchg
in
sub
pop
mov
push
pop
in
push
aad
movb
and
xor
add
xor
test
gs
push
jno
adc
fmull
mov
sbb
aad
mov
mov
sti
ss
mov
hlt
sbb
aaa
lods
js
inc
nop
insl
lret
add
sbb
push
pop
mov
out
in
or
addr16
lret
sbb
cmp
push
pop
push
xor
sbb
push
mov
ss
or
loope
fistl
outsl
shrl
sbb
scas
loopne
punpcklbw
ja
cld
xor
in
xor
jg
roll
dec
in
inc
sahf
lret
push
ljmp
hlt
lods
mov
xor
xchg
pop
lods
inc
jmp
jo
sbb
or
xchg
mov
aaa
inc
mov
subb
pusha
dec
repz
push
daa
jecxz
xor
dec
mov
dec
mov
mov
add
cltd
out
xchg
or
mov
mov
sbb
sbb
and
mov
insb
push
repnz
jb
add
inc
in
sbb
push
rol
jno
add
push
xchg
clc
bound
test
das
jnp
or
in
flds
xor
pop
call
adc
push
loopne
fsubrs
nop
loop
cli
mov
jae
push
push
rorl
sbb
pslld
cmpl
lcall
out
repz
dec
aam
addb
ss
ds
push
or
xlat
cmp
rorl
faddl
mov
push
jne
inc
addb
ja
cmp
sarl
mov
pop
push
sahf
dec
lds
bound
mov
movsl
push
sbb
lret
movsb
lcall
cmp
push
mov
movsb
in
lods
into
popf
mov
and
loope
jecxz
mov
fcom
inc
daa
cmpsl
mulb
and
push
sbb
jnp
and
and
sbb
jg
incl
ds
ja
fwait
mov
ss
jg
inc
mov
inc
jecxz
ret
loop
push
stos
in
repnz
or
dec
adc
sbb
loop
out
and
adc
dec
or
mov
inc
mov
outsb
dec
stc
jge
and
xchg
loop
mov
jecxz
sbb
iret
xor
xchg
xchg
rcrl
pop
dec
mov
push
pop
imul
rcl
push
add
rclb
std
cmp
mov
icebp
xor
imul
and
mov
iret
leave
jae
adc
lds
fiaddl
fdivp
inc
mov
repnz
dec
mov
mov
icebp
clc
mov
rcrl
sbbb
lret
hlt
sbb
push
pushf
xchg
mov
push
movsb
pop
or
dec
js
dec
cmp
sbb
xchg
outsl
xor
daa
jae
xor
add
outsb
arpl
pop
mov
int
fmul
cld
inc
jle
icebp
mov
and
xchg
imul
xlat
enter
add
add
or
or
cmp
push
jle
push
jp
mov
or
stos
lret
movsl
ss
aam
insl
movsl
inc
xchg
sub
sub
test
inc
mov
ja
mov
je
call
sub
int3
es
ret
cs
idivl
gs
jno
idiv
dec
xor
inc
xchg
mov
mov
je
cmp
arpl
xchg
push
jno
xchg
imul
lea
movsb
mov
or
aaa
test
test
dec
ss
fimull
jge,pt
lock
shll
lock
sbb
pop
shrb
push
mov
repz
insl
fnstcw
or
sub
repz
subl
sbb
sti
out
inc
adc
aas
pop
loopne
xchg
and
jle
out
inc
sub
cmp
daa
xlat
mov
push
xchg
sbb
std
push
lods
xor
or
mov
in
pop
jno
mov
jecxz
and
into
aam
xchg
test
movsb
arpl
test
fidivrl
mov
inc
push
insb
adc
xor
push
push
clc
push
xchg
inc
push
pop
inc
add
inc
je
fnstsw
ror
in
inc
xchg
or
push
or
lods
inc
pusha
cmp
rcrl
loop
leave
sbb
in
jns
fcomps
adc
lahf
pop
aaa
shr
add
loopne
les
xor
add
mov
jae
loopne
or
ret
jecxz
pop
lahf
pop
jmp
hlt
into
sahf
sbb
sti
imul
das
clc
aaa
std
out
mov
popa
mov
inc
cwtl
daa
imul
lahf
and
loop
adc
aas
movsl
jne
clc
in
fdivrs
xchg
sub
ss
nop
in
add
push
dec
in
pop
cwtl
aad
aad
lods
pop
sbb
or
repz
pop
decl
dec
and
mov
sub
ljmp
adc
rcrb
int
lahf
mov
lods
dec
mov
mov
push
cs
or
out
xchg
dec
shrl
std
ja
insb
icebp
cltd
push
fidivrs
adc
adc
nop
pop
jae
lods
sub
xor
jl
mov
mov
xor
mov
lret
add
jp
cwtl
pop
dec
in
xchg
and
add
adc
scas
call
jae
cmpsb
ja
push
add
popa
cmp
jne
loope
rcll
aad
push
sbb
aam
mov
les
pop
push
mov
sbb
xchg
adc
aas
sub
xor
and
sub
cmpsl
shlb
out
and
mov
movsl
jo
adc
and
cli
sbb
loopne
inc
sti
das
daa
repnz
mov
test
or
mov
xor
and
cmp
mov
cwtl
push
push
push
pop
movsb
adc
pop
outsl
pop
sahf
in
sti
sub
je
lret
inc
sub
fsub
test
jb
mov
jle
dec
outsl
and
in
sub
lods
push
and
inc
fdivrs
loop
jge
xchg
adc
add
inc
dec
and
orl
and
pop
jl
inc
fs
loop
and
add
aam
jo
test
lds
xchg
pop
xor
adc
jae
push
and
pop
cmpb
outsl
mov
xchg
push
mov
addl
adc
push
dec
shll
mov
inc
lret
ja
fists
test
dec
jae
fstps
rol
in
push
push
imull
mov
push
lds
sub
sub
in
loop
mov
fistl
dec
inc
nop
inc
pop
push
push
iret
insb
lahf
inc
add
dec
add
sti
xchg
jne
push
jmp
or
cs
fsubs
inc
xor
sbb
or
dec
add
sbb
pop
mov
aas
or
push
xchg
insl
cli
inc
mov
jle
cmp
sbb
pop
xor
test
aad
aaa
xchg
fs
test
fwait
aad
mov
pop
push
dec
enter
in
sahf
cmp
lret
push
sub
jle
lahf
outsl
dec
or
stc
cs
aad
addl
movb
pushf
mov
mov
pushaw
rcrb
pop
mov
push
call
inc
pusha
mov
sti
cmp
mov
js
insl
dec
sbb
lret
jnp
push
repnz
inc
jnp
and
out
add
xchg
mov
sbb
xchg
adc
mov
ret
fldl
gs
mov
mov
lods
xchg
mov
imul
xchg
push
dec
fs
lds
fs
das
out
call
cmp
out
adc
inc
data16
push
pop
sub
movsb
movsl
ljmp
push
imul
pop
sub
xor
xor
iret
jae
shlb
mov
push
sub
ljmp
inc
call
sub
test
subb
imul
sub
ret
icebp
lahf
push
pop
rol
pop
test
add
mov
jmp
jge
out
insl
aad
adc
dec
add
push
outsb
dec
popa
dec
out
push
xor
add
xor
adc
sbb
jns
or
int3
in
jne
out
cmp
lahf
fadd
inc
jns
sub
push
arpl
or
mov
stos
lods
jmp
arpl
xor
xor
mov
aam
shlb
js
xchg
repz
pusha
sahf
add
jp
arpl
push
cld
sub
scas
mov
pop
adc
bound
or
loopne
mov
or
icebp
jle
mov
outsl
out
push
xchg
pop
je
dec
pop
inc
push
aam
mov
loopne
ljmp
xchg
mov
movsl
rcl
adc
mov
ret
addr16
lock
sti
les
mov
dec
shll
xchg
in
mov
int3
sbb
jmp
in
test
ret
int
scas
xchg
push
sahf
je
xor
sti
addb
pop
jge
int
lods
sbb
mov
outsl
loopne
rcll
cmc
js
rorl
add
cmp
xlat
add
cwtl
dec
imul
jmp
test
xchg
and
mov
jne
lret
aas
sub
jno
daa
roll
out
push
jb
enter
repnz
sub
jno
fiadds
stc
jno
rorl
pop
clc
sahf
js
pop
sub
out
dec
mov
dec
jns
mov
ljmp
pop
dec
push
dec
jle
xchg
fsubs
lahf
aaa
mov
mov
movsb
and
nop
jb
sti
sub
inc
mov
mov
int3
mov
fucomi
push
add
std
mov
movsl
dec
dec
stos
inc
jnp
aad
cli
and
cmc
pop
outsb
lcall
add
xor
aad
mulb
push
mov
push
xchg
ret
and
dec
mov
in
jecxz
repnz
and
iret
mov
mov
jae
mov
dec
stos
das
test
rcr
loope
push
jle
adc
ss
mov
repnz
sub
pushf
push
push
mov
jp
leave
mov
cmp
mov
test
jge
xchg
mov
scas
lea
aad
dec
inc
or
incl
pop
cmp
aas
lods
shlb
ljmp
xor
mov
mov
out
fs
xor
push
pop
aad
arpl
sub
enter
dec
movsb
mov
sub
jbe
and
add
and
je
xchg
jbe
jmp
jge
aad
js
lods
int
lock
cmc
aam
jp
dec
push
dec
xor
out
aad
pop
int
sub
into
rclb
inc
xchg
xchg
aad
or
xor
sub
jo
sub
mov
pop
mov
fwait
lahf
jns
sar
loope
shr
xchg
inc
fcmovbe
je
clc
sub
mov
sub
fcomi
dec
stos
pop
cs
cwtl
int3
pop
dec
dec
jge
mov
jg
jg
icebp
adcb
push
mov
or
stos
jno
jle
sbb
inc
cmp
cmp
das
mov
xchg
ds
jno
test
jae
or
ror
adc
mov
xor
pushf
in
lret
or
outsb
sub
lds
mov
mov
add
pop
or
sbb
xchg
shr
xlat
mov
inc
fs
jl
cmp
pop
pop
or
shrl
and
xchg
adc
mov
push
mov
adc
or
movsl
loope
mov
xchg
pushf
jmp
adc
mov
movsl
out
test
mov
clc
fstl
and
incl
test
mov
lea
push
xchg
movsl
jmp
fsub
pop
or
testb
push
jl
mov
mov
sub
shrb
es
out
notl
loopne
push
cwtl
xlat
xchg
jl
ja
jge
xor
leave
std
pushf
movsb
or
rcll
push
test
dec
jle
sbb
stc
adc
or
xor
faddl
into
repnz
xchg
ss
push
push
xor
mov
mov
xor
dec
sub
dec
pop
jl
jmp
subb
lods
leave
xchg
mov
and
popa
into
rolb
and
adc
pop
fisttps
inc
stos
shlb
test
push
sbb
fsubrl
and
cwtl
nop
and
mov
in
add
or
mov
in
jbe
fistpl
sub
pop
js
out
push
std
sub
pop
pop
out
push
mov
xchg
scas
add
lea
das
xchg
pop
fistps
xor
sbb
inc
in
pop
xchg
lods
cmp
mov
inc
jae
dec
cmp
jge
imul
mov
sub
shll
fiadds
add
jbe
xchg
inc
das
repz
aas
ja
aam
jo
rorl
pop
inc
aas
js
stos
inc
xchg
mov
sub
out
fucom
push
sub
cltd
mov
cmp
roll
ja
mov
sub
test
or
add
cs
in
and
jmp
lret
hlt
aas
xchg
fsubrp
hlt
ret
aas
or
inc
popa
jnp
ljmp
pop
std
dec
sub
xchg
inc
and
and
cmp
xchg
jae
loopne
lret
sbb
push
xor
mov
rorl
xchg
push
xor
int3
xchg
sbb
inc
dec
mov
push
jle
loopne
mov
add
loopne
addr16
jle
pusha
mov
int
out
pop
push
out
int
in
hlt
dec
xchg
enter
xchg
xor
pushf
add
test
dec
xor
pop
das
mov
insl
xor
jl
jmp
test
or
pop
dec
xchg
ljmp
xchg
movsl
fnstenv
sub
in
dec
cmp
lock
clc
dec
sbb
mov
xor
adc
notb
xor
sbb
inc
cmp
jns
jae
aad
mov
sub
mov
inc
mov
and
push
and
xorb
sti
pop
adc
icebp
inc
xchg
dec
xor
xor
cltd
xor
ja
cmp
mov
jge
dec
lcall
aaa
rcrb
sahf
dec
mov
clc
fistps
cmp
ret
lds
sub
push
xor
cmc
add
sub
or
cmc
loop
mov
sbb
mov
mov
push
jge
repnz
aaa
mov
pop
push
sub
imul
xor
aam
sbb
fidivl
jb
pop
xor
imul
ficoml
fnstcw
cmp
lret
sbb
pop
add
imul
mov
int3
movsb
pop
negl
and
stos
hlt
movsl
loop
mov
outsb
js
sub
push
mov
cmpsb
push
pop
jmp
push
or
push
mov
movsb
int3
and
jmp
pushf
mov
inc
ljmp
add
mov
rcr
adc
xor
cltd
xlat
lcall
dec
insl
or
daa
lods
repnz
mov
or
jmp
loope
cli
pop
mov
nop
adc
ret
adc
movsb
xchg
xor
push
sub
roll
insl
sub
adc
inc
sti
push
mov
mov
cmp
gs
jne
inc
dec
stc
mov
xor
or
push
sub
mov
fldcw
idivl
pop
xchg
jmp
fsubs
das
pop
xchg
repnz
out
bound
dec
jge
enter
xor
test
cmp
repz
fdivrl
inc
mov
movb
fs
loope
clc
lahf
cmpsl
xchg
sub
adc
mov
mov
imul
das
jp
in
cld
push
pop
scas
sub
dec
pop
mov
and
stc
pop
sub
fcoml
ss
loopne
xor
push
ljmp
test
xchg
adc
arpl
pop
loop
aad
cmp
adc
repnz
out
into
les
aas
pop
xor
inc
adc
jae
out
xor
push
sub
xor
cli
mov
jae
dec
mov
loop
inc
cmp
jo
movsb
cs
inc
xchg
sar
test
mov
jle
cmp
or
pop
in
mov
and
ja
data16
pop
repnz
or
mov
in
pop
sbb
cs
sbb
or
in
orl
or
aaa
ljmp
repz
push
adc
or
fsubs
push
or
jnp
and
cmp
dec
lahf
push
inc
les
or
lea
aaa
test
mov
and
jae
mov
and
inc
inc
push
add
aad
mov
inc
add
popf
mov
jno
in
jmp
mov
cmpsl
ja
and
mov
and
loope
lock
ljmp
xlat
adc
div
ficoms
sbb
addr16
imul
hlt
jo
movsl
stos
inc
push
insb
out
je
lods
ss
cmp
out
mov
lea
test
or
dec
mov
aad
push
dec
test
rcrl
repz
jmp
mov
sbb
icebp
dec
ljmp
scas
xor
subl
sub
push
adc
andb
mov
lret
jl
dec
inc
add
mov
divl
cwtl
sbb
mov
nop
xchg
fmuls
pop
outsb
outsl
add
jmp
pop
xchg
add
inc
push
adc
cmpsl
mov
pushf
rorl
xchg
out
sub
xor
sbb
dec
jecxz
outsb
aad
addr16
imul
in
or
jnp
sbb
xchg
inc
movsl
sahf
cltd
repz
lods
sbb
and
in
xchg
cmp
test
out
cmc
adc
cmp
inc
xorl
insb
outsb
push
das
inc
cli
fs
inc
in
mov
sbb
and
movsl
sbb
add
jecxz
adc
sahf
sti
ret
push
adc
xchg
outsb
add
push
frstor
add
adc
lds
aam
mov
js
cmpsl
imul
loopne
inc
arpl
xchg
add
mov
out
mov
mov
add
inc
xchg
sbb
sbb
insl
push
int
lods
pop
push
insl
fstl
adc
test
movsb
jmp
and
aad
lods
adc
lods
test
xchg
jecxz
pop
rcll
cmpsl
mov
test
pop
mov
jecxz
fstpl
jo
sbb
push
add
cwtl
jnp
or
inc
mov
pop
out
shrl
loopne
loopne
jns
mov
jmp
in
imul
sub
push
jns
mov
push
inc
int
lret
out
sarb
cmc
insb
mov
adc
repnz
je
xchg
xor
pop
sub
lret
mov
js
frstor
leave
xlat
and
rclb
lahf
pusha
mov
test
cld
jns
out
mov
inc
orb
jo
dec
pop
cmp
xchg
std
fisubs
pop
dec
ds
xor
data16
loopew
mov
call
enter
insb
inc
adc
mov
aaa
movl
sbb
push
imul
mov
aas
inc
daa
xor
aas
into
mov
mov
mov
adc
outsl
lods
lds
dec
pusha
dec
pusha
xchg
and
dec
popa
or
lcall
movsl
xchg
int3
mov
movsl
insl
and
mov
lahf
mov
stos
popa
pop
daa
sbb
int3
fisubrs
shrb
xchg
dec
rcll
inc
push
loopne
les
mov
cld
mov
xor
popf
inc
xor
xor
mov
jmp
mov
ficoml
daa
divb
push
into
mov
pusha
mov
sbb
or
mov
dec
push
orb
add
push
sub
insb
je
push
mov
mov
sbb
pushl
test
ljmp
add
sub
lret
pop
and
cmpl
packuswb
subl
sbb
jmp
sub
cli
or
clc
test
or
inc
mov
test
mov
lret
cmp
fbstp
mov
adc
scas
btc
cli
cs
std
aam
pushf
push
repnz
jmp
ror
stos
xor
pop
sarb
in
and
outsb
xlat
cltd
add
pop
ja
sub
push
jcxz
test
inc
xchg
stos
test
repnz
rorl
imul
shrl
lret
mov
push
mov
cmp
pop
cmpsl
std
test
inc
outsl
adc
popa
mov
push
insl
stc
fs
jnp
push
jbe
int3
inc
cmp
mul
push
mov
clc
fidivl
sbb
mov
clc
addr16
shlb
pop
outsl
out
jno
jno
testb
mov
sti
jl
cmp
add
aaa
ss
xor
xor
mull
and
pop
and
gs
xchg
cmp
and
pop
jae
out
pop
dec
mov
int
mov
ffreep
xor
movsb
shll
mov
leave
inc
push
jl
imul
sub
push
or
sub
out
and
ds
jbe
or
mov
push
mov
fsubrs
scas
mov
xor
adc
pop
fidivs
fldenv
and
loopne
or
out
jae
ja
dec
add
shl
inc
loope
mov
lret
in
js
and
into
mov
jg
jae
sub
loop
inc
lods
pop
cmp
jmp
cli
rorb
cmovl
fs
cmpb
out
jg
sub
sbb
or
shll
daa
mov
int3
ljmp
cmc
add
ret
mov
in
test
cwtl
gs
dec
or
push
mov
xor
in
or
scas
mov
es
imul
mov
iret
fbld
pop
inc
xchg
push
dec
cli
adc
push
icebp
sbb
ret
dec
subl
xchg
lahf
cmp
popf
mov
jbe
aam
cli
in
in
ficompl
loopne
gs
sarb
jb
mov
fiadds
fmull
dec
cmpsl
fimuls
sbb
sahf
les
mov
insb
mov
pusha
fistps
cs
add
in
test
clc
loop
and
mov
dec
hlt
bound
push
sub
mov
in
jb
xorl
inc
lret
test
jae
ret
in
ja
cmc
xchg
jb
decl
push
lahf
fnsave
movsb
lcall
sub
jge
mov
cwtl
fs
imul
sbb
je
jle
pop
popf
push
sbb
mov
int
mov
xchg
ret
sbb
lahf
pop
dec
fldenv
pop
inc
sbb
push
aas
mov
mov
inc
test
inc
xor
popa
xchg
mov
or
pop
movsl
arpl
or
loop
xor
movsl
jecxz
inc
push
pop
mov
fwait
or
lcall
xchg
or
adc
sarl
jne
pop
pop
jns
jecxz
xchg
into
cmpsb
xlat
loopne
push
jne
and
out
dec
jb
mov
xchg
cs
scas
jns
push
int3
lcall
movsb
jmp
pusha
out
mov
sub
arpl
call
iret
dec
int
jb
mov
push
incb
movsb
cmpsl
ljmp
mov
rol
repz
mov
test
iret
xchg
repnz
sbb
push
mov
and
sub
nop
xchg
cmpsl
fcmovb
mov
jge
in
out
xchg
sti
addr16
xor
or
inc
aas
call
loopne
push
fnstsw
mov
std
notl
outsl
cli
and
inc
or
testl
lds
jnp
shll
fildl
xchg
or
push
jmp
ret
imul
bound
shlb
adc
jne
out
popf
fistpl
inc
cmp
adc
add
shr
jg
push
insb
int
pop
stc
aad
stc
stos
mov
cltd
movsb
fsubr
aaa
ss
cmp
cmp
addr16
sub
bnd
add
mov
out
jb
mov
xor
and
test
cli
mov
outsb
sar
ret
cli
jp
push
or
out
jnp
inc
lret
mov
popf
das
lock
mov
push
pop
cld
jge
cmp
js
in
jb
adc
lahf
pop
fdivl
mov
test
cmp
push
lods
inc
loopne
stos
data16
pop
xor
inc
push
dec
out
sbb
daa
clc
fcomps
movlps
pop
rcrb
js
iret
das
ja
inc
insl
mov
lret
mov
xor
movsb
push
rcrl
add
cmp
inc
push
or
push
sbb
into
jns
int
into
into
dec
jmp
mov
negl
dec
insb
inc
adc
xlat
es
into
sub
adc
std
xor
rep
addr16
clc
out
xor
sub
sub
setns
fstpt
fcoml
mov
mov
xchg
mov
jge
mov
ret
jno
add
icebp
ret
jno
std
mulb
mov
dec
mulb
shlb
into
and
pop
xchg
call
mov
je
push
mov
sbb
or
lods
imul
xor
xchg
ja
lods
sbb
fldcw
mov
jmp
jg
cmp
cmp
repnz
nop
lods
sub
xchg
jne
jb
xchg
xchg
cmpsl
lahf
xor
sbb
shll
xchg
loopne
icebp
jle
mov
ret
pop
fld
jnp
ror
xchg
sub
punpcklwd
push
jbe
xorl
jle
repnz
add
or
cltd
and
xchg
das
jl
sarb
shl
mov
fidivrs
fisubl
sub
pop
ret
cmc
mov
xchg
pop
or
mov
lds
das
dec
mov
packuswb
cli
mov
mov
pop
sbb
adc
xchg
or
dec
mov
push
sub
dec
pop
inc
dec
fs
push
and
sbb
rcrl
cmpb
dec
ja
pop
fsubrl
xlat
mov
or
stc
mov
scas
stos
push
inc
xchg
ffreep
mov
stos
pusha
adc
sub
cmp
jge
fiadds
add
mov
xchg
fs
data16
out
pop
cmp
dec
fdivs
rol
cmp
jecxz
fisubrl
or
in
imul
cmpsb
aaa
test
mov
xchg
movsb
insb
inc
push
sbb
inc
mov
scas
decl
mov
lods
arpl
xchg
jbe
cmp
jo
xchg
rorb
testb
ja
cmc
test
mov
jae
jmp
js
pop
pop
test
adc
jne
lcall
sbb
sbb
out
mov
cld
mov
push
xor
aad
mov
jbe
es
outsl
xchg
push
sarl
sub
mov
sti
mov
jo
pop
aad
hlt
notl
outsl
data16
sub
adc
pop
mov
gs
mov
fistpl
loopne
shl
mov
sarb
mov
cwtl
adc
ljmp
cld
dec
scas
aaa
data16
das
lods
and
das
xor
pop
pop
loope
imul
lods
int
jl
push
rorl
imul
mov
add
call
xor
popa
sbb
push
test
dec
sahf
adc
xchg
dec
imul
and
stos
and
mov
out
mov
xor
push
cmp
sub
mov
sbb
mov
push
push
or
outsl
aaa
fst
call
stos
js
mov
mov
popaw
lret
pop
insl
adc
adc
aam
imulb
pop
inc
inc
add
rolb
mov
into
and
inc
jl
iret
jb
idiv
jns
or
jl
icebp
adc
mov
scas
movb
loopne
gs
pop
ja
push
clc
imul
push
xor
inc
push
jle
xchg
das
in
cmpsl
jnp
sarl
add
test
fstps
icebp
call
cltd
arpl
cs
push
sbb
mov
jle
lret
fs
push
arpl
shlb
and
cli
push
push
mov
lods
and
push
cmpsl
sbb
into
es
in
fwait
jnp
jbe
sbb
and
add
sbb
iret
les
inc
xchg
out
outsl
adc
stos
jp
je
pop
daa
xchg
xchg
fcmovbe
and
mul
ljmp
fs
xchg
and
inc
xchg
cmp
int
push
or
mov
adcl
nop
pushf
aaa
pop
andb
xlat
fdivl
jnp
and
push
sbb
add
out
outsb
mov
mov
jge
lcall
rol
sbb
xchg
stos
lods
popf
jne
sbb
mov
xor
in
add
mov
xchg
push
jge
push
cmp
lcall
push
das
dec
outsb
stos
pop
bound
test
sbb
mov
pop
mov
cli
adc
cmpl
mov
jb
in
add
adc
add
into
jg
xchg
test
jbe
add
mov
sub
es
jbe
xor
aas
xor
mov
cmp
or
mov
add
and
dec
sub
dec
shlb
xor
inc
fdivrs
dec
fistl
mov
out
push
mov
and
jmp
gs
xor
add
jmp
xchg
rorl
enter
mov
mov
into
loope
push
stos
xchg
mov
inc
fsts
push
lret
xchg
test
xchg
or
cmpsb
repz
pop
test
pop
stos
dec
test
mov
mov
ret
cmp
fcmovnb
js
enter
scas
sti
aad
hlt
xchg
xchg
test
test
push
dec
jg
inc
shlb
pop
aad
repz
adc
leave
sahf
and
mov
mov
jne
loop
mov
jecxz
cmpl
movsb
jne
xchg
mov
cmp
mov
out
jg
adcl
ret
in
in
xor
sbb
cmp
xor
dec
int3
xchg
sbb
lds
fbld
cmp
shrl
mov
mov
in
icebp
push
push
mov
into
fwait
js
mov
push
cmp
stc
inc
hlt
into
or
std
and
testl
jo
loop
inc
pop
mov
fdivl
mov
pop
jne
fistpl
sub
int
daa
sbbb
loope
jbe
xchg
bound
test
movsb
mov
insb
insb
rcll
nop
pop
pushf
lods
xchg
ds
mov
pop
xor
jbe
es
mov
jmp
test
shlb
aad
mov
clc
popf
gs
lret
and
cmpsb
jmp
or
xchg
bound
push
mov
mov
sbb
push
sub
cmp
lods
dec
inc
mov
mov
pop
mov
test
lahf
push
sti
or
shlb
mov
push
cmp
int
aas
sbb
or
xchg
and
jne
aam
repz
mov
out
or
push
inc
scas
repz
stos
sbb
xor
xchg
cmc
xor
mov
test
xchg
xor
jl
or
add
test
xchg
cmp
es
js
lcall
aas
vpinsrw
mov
xorb
mov
aad
js
and
pop
in
inc
or
dec
cmp
insb
jmp
xorb
jbe,pn
aam
decl
adc
ja
and
je
xor
cmpl
dec
cwtl
psubusb
xchg
cltd
mov
and
dec
cmp
lret
jo
inc
cmc
jbe
xor
push
inc
cmc
xchg
fisttpl
test
cwtl
clc
xchg
mov
sbb
and
sub
in
jns
icebp
test
sub
rcrb
push
int3
push
dec
dec
jb
adc
xchg
popa
cmp
or
pop
int
aad
popa
mov
stos
cmpsl
hlt
xchg
or
mov
aad
test
das
dec
pushf
insl
xchg
or
movsb
loopne
mov
mov
mov
out
movsl
lret
add
jp
jbe
pop
adc
and
call
pop
mov
cmp
xchg
and
push
mov
loop
adcl
pop
mov
lret
dec
je
jl
cmpl
mov
jge
imul
lock
fldcw
aas
leave
in
add
or
repz
sbb
ret
jecxz
inc
hlt
stos
jbe
je
mov
or
call
add
sti
cmpb
add
leave
notl
push
push
popf
mov
mov
sub
inc
in
xchg
jmp
movsb
pop
mov
or
jnp
mulb
jne
fwait
shll
test
mov
xchg
cld
orl
stos
push
xchg
pop
cmpsb
or
les
in
cld
or
mov
jno
loope
inc
or
xlat
add
sub
daa
es
xor
mov
jo
shlb
popa
lds
data16
xor
mov
add
imul
push
out
imul
js
gs
shrl
cmpl
cmpsb
int
jmp
insl
fldcw
sub
out
lds
sbb
or
scas
mov
fstpl
shl
xor
das
es
adc
push
push
test
sub
mov
mov
mov
out
movsl
stos
cmpsb
or
xor
push
pop
lods
insb
sub
lock
push
mov
into
nop
mov
lods
xor
fwait
sub
inc
imul
mov
mov
js
mov
xchg
lods
and
lea
fildll
lods
sahf
je
xor
xor
xchg
inc
sahf
jg
call
mov
add
and
aad
add
mov
fldl
sbb
outsb
scas
mov
pusha
dec
je
jnp
scas
popa
cs
mov
popf
test
shlb
mov
adc
leave
rcr
xor
daa
scas
pop
lea
cmp
outsb
cmp
aad
xchg
dec
xor
es
mov
cmp
mov
repz
mov
dec
mov
mov
out
hlt
mov
adc
mov
push
in
push
push
pop
cmp
mov
xchg
cld
dec
test
outsl
push
inc
movsb
and
dec
aaa
into
int3
mov
sub
cmp
outsb
sub
into
nop
outsl
mov
adc
stos
pushf
fwait
rcl
jb
mov
push
insl
mov
pop
jbe
pop
dec
xchg
std
mov
mov
mov
xor
out
lds
out
aaa
jmp
and
fiadds
push
jge
sar
inc
ret
add
std
loop
jg
sub
adc
adc
mov
jbe
push
fwait
pop
pusha
fldt
inc
add
dec
insl
xchg
xchg
dec
int
call
shlb
lock
or
int3
jae
or
popf
dec
cmp
in
loope
mov
movsb
loop
fnstsw
dec
enter
pusha
loopne
xor
and
lods
inc
int3
sub
or
popf
mov
inc
fsubs
inc
ror
add
mov
rcrb
in
cmc
jns
orl
and
pop
roll
cmpsb
push
pop
add
stos
inc
popf
cs
add
mov
shl
adc
sahf
cli
push
outsl
test
mov
outsb
cltd
push
sub
or
ret
dec
into
nop
mov
xchg
mov
cwtl
pop
ja
lret
mov
out
fcomps
adc
bound
stc
push
std
rcll
adc
rcrl
and
pop
movsl
dec
lahf
mov
pop
and
xor
cmp
adc
sub
mov
sub
test
cmp
cwtl
in
mov
add
pushf
stos
cld
jae
cltd
scas
mov
mov
fisttpl
cmpsl
pop
ljmp
push
jp
mov
ficomps
or
in
sub
xchg
inc
cltd
popa
xchg
push
sub
lock
ja
rclb
jno
scas
fistpll
fisubs
and
mov
xchg
push
sub
test
movsl
aam
call
dec
call
lret
sub
jmp
xor
mov
fstpl
rolb
frstor
loope
das
imull
xchg
mov
daa
jb
and
cs
std
dec
push
jo
jnp
jno
fdiv
dec
lret
sti
xchg
out
add
sbb
push
mov
andb
adc
out
inc
stos
outsb
mov
xchg
cmp
xor
xchg
enter
call
xor
push
shll
push
out
sub
cld
fidivrs
mov
mov
xchg
sub
lds
cmp
lods
es
mov
pop
xchg
cs
mov
cli
das
and
push
das
test
aaa
push
inc
out
fmull
sbb
fadd
fbstp
sub
sahf
ret
repnz
push
les
sub
dec
or
popl
sbb
push
mov
xor
push
clc
jbe
leave
aas
dec
dec
sub
enter
inc
or
test
cmp
sbb
lahf
aas
out
lock
clc
jno
out
std
mov
pop
mov
cmc
xchg
adc
sub
mov
sub
jg
push
mov
shll
or
testl
test
cltd
movsb
xor
push
push
and
lock
in
adc
pop
jne
aam
insb
cmpsl
ljmp
or
ss
icebp
leave
shll
loope
iret
push
std
adc
loopne
inc
inc
sub
lds
jmp
cli
lcall
fcmovnu
xor
mov
mov
dec
out
mov
pusha
fsubrs
fwait
mov
sub
inc
in
pop
cmpb
xchg
mov
scas
jb
fs
in
insb
ljmp
test
fs
in
push
add
and
pop
cmp
inc
test
sarl
fstpl
rorl
add
jge
lds
ja
test
jno
es
movl
sub
jae
and
mov
xor
and
sbbb
jbe
dec
int3
xchg
inc
movsl
push
inc
sub
or
outsb
repnz
or
xor
sarb
jmp
cmc
adc
rcrl
cli
insl
sarl
pushl
cmc
cmpsb
iret
jo
jnp
dec
push
sar
mov
sti
cli
loope
mov
enter
je
mov
loop
push
jae
pop
or
xor
daa
cmp
sbb
lds
movsl
add
inc
subb
mov
mov
jb
sbb
jno
lock
push
jb
enter
or
int
push
push
pop
loopne
gs
pop
out
in
sti
mov
dec
inc
dec
sub
clc
pop
data16
push
mov
and
mov
bound
cmp
out
jne
cs
mov
subl
cmp
pop
mov
dec
and
or
loop
rcrl
aas
jno
xchg
data16
pop
fcmovnbe
daa
int3
or
pushf
and
scas
jbe
test
sahf
dec
dec
xchg
add
repnz
pop
lock
stc
cmpsl
sbb
gs
daa
jae
or
test
or
ja
insl
scas
and
inc
push
imul
sub
mov
leave
mov
add
movsl
nop
aam
pop
push
fldt
pop
or
sub
inc
stos
cmp
shll
mov
ds
out
sbb
sbbl
into
fnsave
daa
in
or
inc
shr
add
out
sti
dec
loop
xchg
divb
add
popa
fisttps
movsl
pop
or
test
enter
adc
imul
int3
je
cmpsb
sub
fucom
dec
mov
stc
out
sar
push
inc
pushf
xchg
adc
mov
xlat
fs
dec
pusha
scas
sbb
ljmp
inc
push
les
lret
mov
push
das
push
mov
je
mov
out
je
sbb
adc
mov
mov
jl
jns
dec
adc
notb
add
xor
sbb
daa
test
fsubrl
pop
sbb
pop
and
pop
aas
pusha
or
xor
mov
lods
jno
push
test
mov
and
xorb
into
xchg
xchg
pop
loope
mov
inc
pop
dec
cli
loop,pt
pop
xchg
daa
aaa
lea
push
cmc
in
mov
sub
lea
lods
repz
or
xorb
jns
adc
inc
in
cmp
cmp
cmp
or
ficoml
jnp
pop
scas
mov
xor
cltd
out
std
xchg
mov
adc
dec
out
in
into
and
mov
xchg
popf
stos
inc
outsb
test
push
into
push
popa
mov
pushf
mov
fists
cltd
rol
adc
repz
jle
aas
jp
xchg
gs
leave
mov
ds
push
jecxz
inc
ja
mov
in
push
xor
setno
stos
out
das
inc
inc
negl
outsb
xchg
dec
sub
sub
out
mov
push
mov
imul
cld
jg
push
pop
pop
pop
push
rcll
scas
test
sub
pop
mov
add
std
cmp
in
mov
xor
call
pop
inc
add
pop
and
mov
imul
jl
mov
js
cmpsb
cmp
stc
adc
in
arpl
push
stos
loopne
sub
dec
clc
enter
imul
push
fdivrl
mov
dec
stc
movsb
mov
lret
xlat
and
dec
inc
fistl
cmpsb
in
adc
sahf
aas
not
lret
add
jns
cmc
push
fwait
shlb
add
sub
mov
lcall
je
fcomp
mov
fisubrs
jne,pt
pusha
adc
pusha
sbb
xorl
rorb
aas
rorl
fyl2x
pop
in
in
sbb
pop
call
xchg
mov
int3
fsubr
cmp
arpl
mov
and
mov
mov
dec
dec
mov
aaa
in
or
leave
aaa
adc
and
mov
mov
ss
push
aad
add
push
aam
mov
out
lcall
cmp
xor
pusha
jp
ficoms
aad
faddp
lahf
in
imul
cmp
or
xchg
xor
daa
cltd
inc
mov
hlt
and
push
iret
and
mov
cmp
fcompp
sbb
negb
or
loope
test
fwait
movsl
inc
incl
dec
push
push
inc
sub
lcall
enter
or
cs
sbb
mov
cmp
xchg
test
test
xchg
in
xor
mov
dec
sar
cmpsb
mov
mov
in
lret
imul
mov
sti
aas
mov
mov
sbb
lret
movsb
shlb
pushf
pop
js
sbb
dec
or
sub
leave
push
mov
push
std
mov
sbb
push
sub
xchg
scas
xorb
es
xchg
lcall
lock
xor
jne
clc
stc
adc
clc
std
or
ds
push
adc
mov
jg
lcall
loop
xor
les
mov
sbb
push
jg
xlat
sub
xchg
adc
nop
nop
mov
pop
ret
int3
lods
adc
pop
push
in
aaa
je
push
aam
scas
inc
xchg
std
dec
sub
movsl
sbb
sub
xchg
inc
dec
aad
pusha
xchg
dec
sbb
mov
imul
push
das
lods
inc
mov
jbe
and
outsl
add
cmp
xchg
mov
int3
in
insl
cld
in
mov
jmp
pop
cmp
cmp
lret
sti
or
mov
lahf
jo
xchg
inc
dec
insb
sub
add
addr16
lahf
cs
jnp
mov
dec
sbb
and
cltd
stos
or
lahf
cmp
jge
xor
mov
lea
divl
mov
add
inc
sub
sub
pop
push
pop
xor
pop
pop
fsubrl
bound
push
test
test
jp
mov
or
rorl
sti
push
call
cmpl
mov
leave
adc
mov
mov
sub
repnz
cmp
lcall
out
push
sbb
out
imul
lea
mov
mov
sbb
mov
aas
inc
jns
adc
sub
testl
lahf
sub
ret
fnstsw
stos
jge
mov
ret
movsl
sub
or
add
stc
call
cmp
mov
dec
pop
jge
jp
mul
sbb
push
fwait
mov
cld
adc
push
lahf
imul
jnp
int3
movsb
mov
bound
xlat
movsl
pop
lock
stc
bound
xchg
cmp
cmpsb
faddl
sub
fsubl
ficomps
shlb
hlt
sub
ja
aas
mov
in
addr16
mov
push
or
mov
cmp
mov
data16
jge
xchg
negb
pop
je
push
jo
pop
imul
in
lret
outsl
cld
jns
dec
dec
and
pop
pop
das
subb
and
push
cmp
mov
xchg
dec
sub
aas
dec
mov
pop
jb
in
gs
mov
add
das
pop
aam
cmp
aas
pop
inc
sbbb
sub
mov
ljmp
aad
call
loopne
jl
xor
dec
out
js
cmp
push
and
xchg
aam
mov
sbb
dec
stos
adc
adc
pop
and
leave
dec
mov
cmpsl
in
or
lds
out
ja
fdivrl
cmpsb
fucomi
or
xor
sbb
and
repz
in
lret
adc
mov
xchg
push
in
or
add
sbb
lahf
and
xchg
test
lcall
mov
icebp
addl
inc
sbb
in
aas
jmp
sub
mov
icebp
xor
pushf
das
sbb
lret
hlt
jle
sub
adc
shll
mov
test
push
cltd
fildll
leave
sub
std
testb
jl,pt
mov
jg
ljmp
pop
add
movl
fsubrl
push
je
jmp
repnz
and
xchg
cli
fsubs
dec
jbe
aam
push
jg
mul
cltd
outsb
sbb
sub
dec
mov
xor
sbb
repnz
lahf
sti
daa
leave
iret
ljmp
cld
cmpsl
pop
imul
xor
loopne
aas
lret
loopne
mov
dec
rorl
mov
lret
in
andl
aas
inc
and
push
mov
mov
and
hlt
icebp
mov
pushf
dec
gs
sub
jb
ficompl
jbe
sub
aam
inc
repz
iret
cmp
cwtl
push
std
cltd
ret
jnp
in
mov
mov
cmp
lahf
insb
mov
incl
push
xchg
jp
xchg
dec
aam
lea
leave
mov
jle
sahf
icebp
xlat
sbb
push
pop
jne
mov
cmp
mov
int
jecxz
out
pop
push
std
cmp
mov
add
pop
and
push
add
adc
sub
nop
mov
shll
add
or
cmp
insb
das
and
mov
dec
dec
rorb
mov
sub
popf
mov
je
js
jbe
mov
xlat
xchg
notb
push
repz
pop
mov
xchg
fs
jb
bound
rol
dec
push
movl
xchg
mov
adc
loope
mov
daa
clc
push
sahf
adc
out
push
pop
mov
mov
or
jmp
push
cmp
mov
push
popa
pop
aam
int
lock
mov
mov
cli
das
push
loope
sbb
push
mov
push
mov
or
push
rcrb
push
jns
mov
sub
push
mov
in
jle
mov
sbbb
insl
or
push
sahf
fs
mov
mov
daa
xor
jge
mov
out
mov
and
aam
sbb
scas
cld
sti
lods
mov
adc
imul
or
mov
scas
cmp
mov
stc
mov
xchg
mov
xchg
xchg
cmpsb
stc
lret
insl
sub
es
lods
jp
jle
xor
cmp
fldt
add
ret
sbb
or
shrl
rcl
neg
fwait
arpl
sub
stc
or
lcall
mov
and
sti
push
aaa
cmpsl
and
dec
pop
push
scas
inc
xor
insb
xchg
mov
jmp
or
sub
jne
mov
mov
addr16
cmpl
xlat
popa
psadbw
cs
sbb
test
xlat
into
cmpsb
subb
dec
pop
in
xchg
lcall
movsl
dec
pop
xorb
mov
mov
xor
xchg
mov
clc
popf
add
xor
dec
pop
imul
push
mov
sbbl
test
inc
loope
sarb
enter
shrl
sub
pop
scas
cmp
lret
mov
sbb
mov
out
hlt
inc
ljmp
lds
in
rcr
jmp
jg
pop
xor
xor
mov
jne
test
int3
add
dec
push
negb
xor
pusha
push
xchg
xor
mov
test
outsl
sub
jb
cld
std
scas
add
jbe
jo
sahf
jne
pop
xchg
pop
int3
cmp
sbbb
mov
mov
mov
es
cmc
mov
int3
and
dec
cld
pop
push
sbb
pop
imul
jp
mov
std
pop
in
test
fldcw
sbb
dec
or
or
fldcw
adc
fmuls
push
movsb
ret
fsubl
push
popf
jle
jl
dec
test
cmc
sub
push
mov
outsl
fwait
push
adc
push
loopne
mov
insl
popa
jnp
popa
and
adc
lods
out
sbb
lcall
aas
and
scas
mov
sti
inc
xchg
imul
add
cld
es
add
pushf
mov
push
rcrl
loopne
jge
lahf
cmp
subb
sbb
cmc
add
push
and
jecxz
es
pop
or
inc
mov
aas
cld
sub
das
dec
xchg
insl
scas
call
data16
mov
mov
xor
ja
push
rol
sbb
add
push
jl
jge
add
mov
insl
es
pop
fxam
imulb
mov
cmc
push
shrl
mov
mov
sbb
pop
push
ljmp
mov
dec
leave
shll
or
and
xlat
xchg
or
icebp
push
cmp
inc
fdivrl
jnp
leave
inc
mov
in
testl
jmp
jne
subl
fisttpl
xor
mov
push
mov
mov
js
and
lcall
jmp
or
loope
xor
mov
stc
mov
inc
inc
mov
cld
enter
jae
inc
and
dec
jmp
xor
xor
adc
mov
sub
xchg
and
pusha
sub
sbb
addl
stos
jno
and
pop
push
mov
ret
mov
fidivl
mov
inc
negb
fistpll
fcomip
xlat
mov
notb
clc
adc
lret
mov
rol
aam
lea
popf
leave
movsl
loop
test
mov
aad
fsubp
aam
push
adc
rcr
and
dec
push
adc
jl
cmpsb
in
or
jbe
ret
rcll
es
mov
or
cmpsl
sti
lds
add
pop
rclb
cmp
mov
insl
mov
jbe
test
stos
push
dec
repnz
pop
or
rcl
shrb
mov
stos
cwtl
imul
xor
ss
shll
cwtl
icebp
mov
mov
pop
mov
aas
mov
cmp
dec
mov
push
jne
movsl
mov
xchg
mov
iret
and
loopne
add
pop
mov
lcall
push
cmp
out
push
inc
shrb
cmc
gs
ds
inc
xor
cltd
add
rcr
inc
mov
mov
ss
testb
push
imul
out
cmpsb
or
nop
xchg
ja
aaa
ds
dec
inc
inc
inc
cmpsb
cmpsb
add
test
push
ret
add
pop
outsb
cmp
cmp
jge
xor
jno
test
outsl
mov
fwait
sbb
ret
sub
cmp
add
std
adc
fmul
push
gs
xor
push
stc
test
push
popf
sti
xchg
sub
xchg
mov
mov
shrl
out
dec
cmp
test
fucom
jl
xchg
and
mov
fdiv
mov
inc
data16
dec
add
cld
adc
cmp
clc
nop
mov
sbb
cwtl
xchg
or
std
ljmp
jne
mov
cmpsb
rcll
push
in
adc
and
and
sbb
mov
jl
pop
test
cmp
add
daa
and
lahf
fsubs
aas
and
daa
jge
ja
pusha
sahf
hlt
inc
ret
aam
push
dec
xchg
cmpb
xchg
enter
gs
and
mov
lock
or
sub
stc
mov
dec
insl
xor
sbb
sub
hlt
jecxz
arpl
xor
mov
jle
insb
xacquire
ss
pop
popf
lods
mov
dec
and
adc
fstpl
sub
lret
pop
lret
mov
xchg
xor
loop
mov
push
sub
js
jg
cmp
sbb
lret
dec
leave
push
mov
cmpsb
lahf
insl
add
ljmp
push
dec
pop
dec
sbb
into
jae
insl
lret
and
ds
push
xchg
stc
int3
mov
loope
xchg
mov
pop
je
daa
jl
cmp
ret
jbe
mov
cld
cmpsl
dec
inc
scas
jae
mov
adc
and
aas
xor
inc
jecxz
or
popa
test
mul
sbb
idivb
pushf
shll
lds
xchg
cmp
push
sub
mov
jecxz
cmp
xchg
jmp
enter
or
insb
sub
clc
es
jge
add
add
es
ret
push
or
divb
gs
jne
rorb
and
cmp
fsubr
shlb
add
idivb
push
fistpl
jmp
scas
out
insl
xchg
adc
push
lcall
scas
inc
and
xchg
movq
and
dec
sbb
pop
into
iret
sarb
addb
or
sahf
jmp
ljmp
scas
sahf
bndldx
or
clc
les
mov
dec
test
and
std
dec
inc
in
jmp
cs
fnsave
pop
and
dec
stc
or
xor
cmp
test
shrb
rcl
clc
idivl
jle
pop
sbb
cld
imul
cmp
xchg
mov
iret
fisubs
es
xchg
cmp
lods
lods
mov
mov
mov
jne
or
stc
les
xchg
xchg
lret
mov
fbstp
out
rol
shll
add
fisttps
lret
ljmp
mov
sar
addr16
fsts
mov
loope
fs
ret
fadds
mov
jg
or
cs
push
xor
divl
sbb
leave
nop
ret
cmp
adc
push
scas
mov
push
lock
dec
fmuls
mov
push
or
inc
movsb
out
dec
pop
in
rcrl
xor
into
mov
aam
or
hlt
sbb
jle
pushf
pop
cmp
data16
scas
mov
ljmp
xchg
mov
sub
xchg
mov
andl
xchg
push
repnz
pop
mov
fbld
or
shl
cmp
in
lds
adc
push
adc
push
jbe
xchg
push
cld
mov
inc
adc
xchg
in
in
inc
iret
bound
push
scas
pop
cmp
pop
jnp
dec
push
fistpll
filds
sbb
aas
je
push
dec
adcl
mov
dec
lea
mov
cmp
into
fwait
xchg
daa
xchg
pop
int
push
ret
fisubrl
or
in
cmp
add
sbb
inc
cld
adc
pop
pushf
mov
cmp
xchg
scas
sub
mov
and
and
sbb
mov
arpl
aaa
inc
and
mov
and
push
addr16
inc
mov
ljmp
test
ss
cwtl
jnp
aad
bound
mov
das
cmp
decb
pushf
ds
nop
into
call
jmp
pop
lret
or
mov
push
jle
xor
setb
loope
mov
mov
insb
out
aad
clc
push
pop
push
xlat
add
imul
add
gs
jbe
nop
cmpsb
imul
ljmp
and
cmpsb
lds
stos
inc
test
dec
jo
or
mov
loopne
jno,pt
pop
pop
add
sbb
mov
adc
test
ss
ds
jge
scas
dec
sbb
and
xlat
xchg
pop
cmpsb
fcmovbe
sbb
dec
xor
test
jo
rclb
leave
add
aam
sub
dec
imul
ficompl
jmp
je
adc
xchg
push
je
and
aas
leave
and
xlat
sub
mov
jle
mov
inc
sub
test
fs
scas
pushf
popa
add
push
mov
ret
aas
push
lea
enter
and
sbb
pop
push
pop
add
nop
mov
ret
lods
push
dec
shrb
mov
test
aas
push
iret
sarb
xor
push
mov
mov
jp
pop
in
mov
push
xchg
loop
push
mov
inc
iret
mov
das
hlt
mov
aas
jbe
stos
lret
dec
or
adc
jecxz
push
lods
lods
adc
int
mov
mov
sub
and
cs
popf
or
sahf
sahf
pop
cmpsb
cmp
xchg
xor
aaa
bswap
xorb
pop
jl
mov
sbb
aad
mov
les
int3
push
jne
pop
adcl
xchg
sahf
scas
mov
and
movsb
hlt
lods
and
lret
dec
jl
lcall
jge
mov
push
aas
scas
jecxz
cmp
cmp
dec
xchg
dec
aas
mov
push
repz
fdivl
adc
data16
mov
sbbl
jmp
jbe
inc
mov
aas
mov
lea
insl
into
jg
inc
and
lret
popf
js
xchg
cmc
dec
std
ret
aam
mov
jl
insb
fwait
pop
shlb
mov
lods
pop
xor
imul
lcall
mov
fldcw
sub
sbb
fs
pop
xlat
mov
pop
sti
lret
xchg
pop
mov
mov
rcrb
pop
or
movsb
xchg
push
js
sbb
push
mov
rorl
cmp
std
mov
stos
or
jecxz
add
test
outsb
mov
testl
fildl
mov
adc
mov
test
cli
mov
cmpsl
imul
movl
movsb
xor
sbb
jno
xchg
and
xchg
xchg
inc
add
mov
std
aas
sbbl
test
xlat
xor
pop
nop
mov
in
imul
push
add
call
iret
xor
rcrb
pop
xor
mov
cmp
aad
or
pop
ret
stos
test
mov
fists
pop
jge
jns
lock
mov
xlat
in
rcrb
xchg
ljmp
lods
cmc
loope
pop
and
lretw
jg
scas
mov
in
leave
push
iret
popf
mov
sbb
mov
adc
out
aaa
xor
xor
and
imul
cmpsb
int3
or
out
lock
nop
fwait
pop
xchg
and
sub
js
lods
xor
shr
popf
out
jp
orb
jecxz
jg
mov
inc
add
in
mov
in
push
std
push
jbe
popf
push
mov
js
xchg
push
or
leave
mov
jae
jmp
out
jns
in
and
pop
cltd
aas
xor
xchg
sub
ljmp
sub
jbe
fcomi
jge
sub
pop
in
push
mov
ficoms
insb
or
push
test
out
dec
dec
pop
aam
fldcw
sub
xchg
ss
cmc
ret
testl
sbb
int
scas
daa
xchg
cld
push
sub
and
shlb
mov
pop
jg
ds
jge
aam
sahf
sbb
notl
xchg
fmull
jb
ret
jns
xchg
iret
push
mov
jl
hlt
jo
inc
mov
pop
jae
popf
lcall
lret
in
and
pop
add
jmp
fmuls
xchg
mov
xchg
ja
in
rcrb
ret
dec
add
mov
mov
loopne
xchg
pop
divl
loop
leave
push
imul
cmp
data16
adc
xlat
into
jo
mov
dec
jb
arpl
xchg
dec
inc
stc
sbb
packssdw
mov
xor
lret
pop
push
mov
add
pop
add
rclb
cmp
pop
push
xor
pushf
icebp
in
clc
aaa
idivl
mov
aaa
pop
ds
out
dec
in
lret
add
iret
outsl
stc
clc
bound
stos
pop
inc
sti
addr16
repz
fsubrl
sub
push
jl
sbb
sub
push
pop
repnz
call
fsubs
setp
fnstcw
dec
add
ret
inc
fldlg2
testb
sbb
loopne
test
xor
push
sbb
xor
cmp
cmp
jb
jbe
cltd
bound
mov
sbb
inc
jb
mov
mov
sub
jmp
dec
push
add
inc
push
dec
aam
call
push
push
cmp
pop
push
sub
pop
jnp
es
insb
dec
push
fmuls
mov
adc
movsl
popl
xchg
mov
into
das
mov
cmp
bound
adc
lret
out
mov
lahf
and
mov
mov
lods
ljmp
add
adc
sbb
out
adc
shll
aam
mov
aad
imul
fs
sbb
mov
test
leave
inc
dec
lods
mov
aad
cld
icebp
dec
mov
jnp
popa
lahf
jge
adc
rorb
int3
mov
sarb
cmpsl
dec
inc
inc
inc
xor
xchg
loop
test
mov
pop
xlat
scas
lock
into
pop
sub
dec
cmpsb
cmpl
lock
or
mov
ss
stc
iret
push
addr16
or
mov
push
in
decl
xor
jg
test
sbb
addr16
mov
add
cmp
jle
cld
popf
adc
add
clc
mov
adcb
pop
rcrb
sbb
iret
xchg
add
xchg
int
mov
leave
mov
cld
jl
cmp
pop
repz
inc
inc
mov
sub
xor
lea
mulb
add
sbb
adc
mov
xorb
in
xchg
repz
fdivp
lret
jb
ret
bts
mov
mov
inc
fadds
ja
test
test
fcmovnu
pop
push
stos
lret
lea
inc
push
push
dec
dec
imul
into
fldln2
pushf
jno
int
jl
fldt
cmp
pusha
aas
and
shrb
repz
jmp
sub
insl
mov
fldcw
and
mov
popa
xor
mov
xchg
dec
jae
jmp
fwait
pop
pop
aad
cmp
in
or
and
in
adc
mov
xchg
xchg
push
mov
loope
icebp
adc
sbb
mov
mov
stos
cltd
and
cmpl
cs
xchg
sub
mov
adc
mov
cltd
adc
push
sub
xchg
sbb
pop
xchg
pop
test
cmp
push
sbb
dec
test
push
mov
rcr
daa
fs
dec
daa
loop
je
ljmp
dec
fsts
adc
rorl
jl
cmp
xor
and
loope
int
push
cmp
testl
dec
aam
shl
sbb
aas
push
fwait
jo
sbb
lock
xor
stc
pop
push
add
cmp
shr
out
out
imul
sbb
and
push
sbb
movsl
and
idivb
jb
loope
cmc
inc
maskmovq
lock
dec
inc
test
repz
lea
popa
fdivs
roll
ljmp
rclb
popf
or
inc
jecxz
pop
jmp
push
test
cmp
mov
loopne
ret
fildll
jg
cmp
push
lea
pop
cmc
jle
jno
mov
mov
lods
jb
imul
out
pop
out
xchg
mov
fistpl
inc
pop
push
mov
sti
in
in
mov
mov
daa
aad
je
pop
push
pushf
lock
shl
or
repnz
mov
loop
repz
xchg
mov
mov
ret
popf
add
sti
sub
mov
testl
mov
ds
dec
dec
mov
adc
jbe
mov
cli
bound
imul
outsl
lahf
push
and
jmp
jbe
mov
push
shl
loop
xchg
jb
sbb
call
call
xor
outsl
cmp
and
mov
mov
loopne
ljmp
mov
enter
sahf
ss
add
mov
cmpsl
shr
rorl
pop
or
sbb
pop
mov
call
mov
add
mov
into
or
mov
jmp
je
jge
sub
mov
aam
mov
es
in
or
inc
clc
in
fidivl
add
nop
inc
aaa
sub
and
cli
es
fadd
push
lret
cmp
sub
mov
push
mov
jno
add
adc
xchg
mov
jecxz
xor
loop
mov
mov
mov
pop
sub
stc
mov
nop
push
out
aas
cmc
jle
out
dec
push
in
sbb
add
inc
sti
int3
pop
pop
sar
mov
mov
add
insl
cmp
loopne
jne
movsl
lahf
ret
jle
fwait
int3
mov
cltd
xchg
sbb
in
cltd
add
inc
sbb
call
lds
adc
sbb
and
popf
pushl
cmp
dec
inc
js
aas
xor
push
pop
pusha
push
cli
mov
test
js
pop
stos
cmpsl
cmpb
pop
test
pop
jge
xchg
adc
lds
cmpsl
enter
xor
add
insb
inc
xchg
mov
pusha
xor
push
fldenv
mov
movsl
dec
sarb
aaa
aam
mov
push
pop
arpl
cmpsb
mov
pop
pop
pop
movsb
daa
xchg
or
adc
mov
ss
mov
fimuls
or
imul
inc
imul
or
mov
in
sub
jecxz
pop
inc
mov
loop
mov
in
jmp
and
add
push
sbb
mov
mov
sub
dec
lret
jp
adc
add
popa
das
test
push
imul
fadds
jecxz
outsl
pop
cmp
jmp
lods
inc
leave
and
jmp
cld
cwtl
or
xor
icebp
xchg
mov
hlt
mov
and
les
sarb
pop
jge
aam
jmp
outsb
sbb
push
and
cmp
imul
push
jnp
dec
fstps
dec
in
std
cli
mov
js
mov
fdiv
in
inc
int
sti
sbb
and
push
push
and
fldt
add
fnstcw
cmpsl
dec
stc
cmp
pop
andl
push
jbe
data16
push
xor
pop
test
jnp
dec
pushf
in
sarl
jbe
insl
ret
je
jnp
cmpsl
mov
add
xor
cmp
push
mov
dec
push
inc
mov
pop
rcll
xor
pop
sub
push
sub
je
and
xchg
enter
aaa
fs
mov
imul
xchg
data16
mov
add
mov
out
fst
mov
fsubr
push
loopne
test
mov
mov
jg
jmp
xchg
pop
and
or
jg
out
sub
call
and
jo
pushf
or
cltd
jmp
push
sbb
push
rcll
out
int
aaa
jne
gs
shr
in
cmp
jne
mov
mov
roll
es
mov
xor
mulb
xchg
std
cmp
jno
test
xchg
jmp
mov
fwait
pop
jnp
outsl
bound
push
xchg
fistpl
out
xlat
or
sbb
xor
out
in
mov
dec
sbb
les
dec
test
les
lea
cmp
mov
test
outsl
xchg
mov
sahf
pop
lret
xchg
adc
pop
xor
shr
les
arpl
sbb
fwait
sbb
lea
out
iret
xchg
sbbb
sbb
bound
repnz
add
lods
mov
mov
lret
stos
jnp
pop
sub
add
mov
leave
cltd
push
mov
loop
jp
test
dec
jmp
fidivrs
jp
mov
mov
sub
iret
mov
jbe
pop
jl
ret
nop
out
ja
dec
test
sub
imul
add
dec
jmp
call
aam
ljmp
push
les
and
mov
and
xchg
xchg
or
into
lods
pop
jl
out
pop
out
and
iret
mov
cld
addl
ss
sbb
pop
movb
push
enter
test
sbb
adc
mov
in
stc
sahf
cmp
js
xor
lock
test
dec
fimull
bound
lret
and
les
mov
and
mov
scas
js
aam
int
mov
and
inc
fildl
lock
add
pusha
imul
rclb
mov
pop
cltd
cmp
pop
lcall
std
mov
call
mov
ljmp
into
nop
incl
cli
clc
arpl
shld
dec
aad
xor
jne
mov
std
inc
sbb
out
inc
jp
in
int
xorl
jg
dec
rcl
cld
mov
jae
mov
outsl
or
jle
lds
push
mov
lret
insl
cmp
jo
xor
xor
push
mov
insb
lods
daa
mov
push
push
call
sar
sub
sub
jo
pop
sub
mov
mov
mov
mov
sbb
jp
aaa
sbb
adc
sbb
inc
shrl
fadd
and
inc
aam
sub
ja
rorb
push
clc
mov
xor
mov
hlt
imul
add
push
stos
xor
inc
jno
pop
es
cmp
mov
mov
scas
cwtl
jle
lret
and
mov
lahf
mov
push
stos
dec
inc
and
daa
cmp
xchg
movsl
pop
lds
sbb
fcomi
and
xor
lds
cmp
mov
inc
push
xor
lcall
add
clc
cmpsl
inc
sub
jnp
aam
mov
xchg
push
bound
ret
sbb
jnp
test
xchg
lahf
mov
dec
mov
hlt
xchg
test
or
inc
fwait
ret
jns
roll
pop
push
pop
sti
push
enter
lods
addl
xchg
pop
inc
test
sbb
add
shrl
jecxz
push
push
adc
jnp
frstor
cmp
out
lret
sub
push
icebp
xor
jge
xor
add
repnz
push
lea
insb
aad
xchg
cmp
cld
scas
adc
or
adc
mov
sti
cld
dec
dec
dec
fs
lods
mov
xor
mov
stos
mov
in
int
addr16
les
out
xor
mov
loope
xchg
gs
mov
test
test
dec
and
fnstcw
inc
and
or
aad
sahf
pmuludq
jbe
fiadds
xchg
push
mov
in
adc
cmpsb
xor
or
xchg
aad
ret
mov
mov
test
dec
mov
shll
mov
sub
scas
or
js
test
ds
int
flds
inc
push
xor
bound
call
mov
cmp
xorl
push
in
dec
fidivrl
data16
push
stos
sub
cmp
mov
cmp
cld
and
dec
lahf
push
mov
sbb
pop
xchg
mov
adc
jne
into
dec
mov
adc
jecxz
fs
ljmp
adc
fimuls
pop
outsl
stos
lods
cltd
push
add
cmp
sbb
stc
push
jl
pop
shll
mov
insl
mov
adc
mov
jns
dec
ret
push
bound
insl
pop
sub
or
inc
inc
lret
sbb
push
lods
in
mov
insl
push
pop
mov
push
adc
fmul
mov
fists
xor
and
xchg
in
sub
and
jl
fs
sbbl
js
in
or
push
popa
add
pop
sbb
lea
mov
in
ljmp
stos
xlat
fsubrl
and
jo
inc
mov
adc
pop
lds
js
sub
adc
arpl
sub
or
das
jae
icebp
rorl
arpl
stos
arpl
jb
dec
fnstsw
cli
push
fbld
scas
xchg
cmpsl
int3
insl
aam
push
jne
lcall
add
mov
xor
push
or
roll
cmp
or
cmovnp
push
icebp
call
jp
mov
dec
push
stos
mov
cltd
jg
mov
mov
sub
cmc
pop
sub
dec
and
xor
sahf
jo
sbb
mov
mov
jmp
dec
stc
cwtl
stc
icebp
ss
test
scas
lock
inc
addr16
dec
out
add
and
push
cmp
rcrl
dec
adc
aad
sub
mov
lret
aaa
mov
pop
cltd
scas
dec
es
lods
dec
jo
push
adc
sbb
lds
jo
sbb
arpl
les
and
scas
mov
adc
bound
sbb
lret
faddl
movsl
in
dec
ror
xchg
mov
cmpsl
and
cli
fwait
sbb
mov
inc
push
in
cld
insl
in
sub
cmpl
inc
ret
push
adc
mov
arpl
xor
popf
gs
lcall
aam
in
movsbl
pushl
leave
divb
xchg
cwtl
push
xor
inc
fsub
mov
jl
scas
add
or
push
push
fstpt
scas
shr
cmp
mov
push
jg
pop
mov
mov
cli
mov
dec
cmp
cmp
pop
les
int3
es
and
cmpsb
lahf
jle
sbb
enter
xchg
test
lock
push
fidivrl
pop
fs
mov
mov
and
sub
daa
sbb
xchg
inc
mov
ret
lret
and
pop
adc
mov
xchg
in
test
sti
mov
jne
scas
jb
icebp
in
shl
pop
stc
cld
mov
add
sarb
loop
int3
pop
dec
imul
rorl
sub
outsl
and
xchg
jmp
insb
test
inc
adc
in
cs
xor
shll
jecxz
out
bound
pop
and
xor
scas
xlat
ret
dec
aas
les
adc
mov
mov
mov
jge
lods
mov
adc
call
mov
xchg
test
push
push
dec
mov
nop
in
scas
addl
mov
adc
mov
pushl
lahf
pop
pop
cmp
nop
sbb
mov
adc
aaa
cmc
pop
lret
pop
push
push
aad
xchg
int3
sub
pop
jne
in
pushf
jge
je
pop
add
ja
lods
in
sbb
inc
push
push
adc
std
push
pushf
add
pop
je
cltd
fidivs
aam
jle
lcall
lods
mov
jnp
pushw
sub
loope
mov
lods
sub
int3
loop
mov
scas
scas
imull
add
pop
pop
inc
dec
mov
iret
jle
push
mov
movsb
inc
lock
loop
aad
xor
cmpsl
jae
test
fwait
inc
mov
outsb
cmp
cmpsb
das
test
inc
aas
sbb
sub
aad
dec
in
jns
sub
mov
es
xor
leave
xor
arpl
pop
xchg
push
push
mov
mov
jae
pop
mov
cmp
shll
inc
dec
jge
call
popa
and
push
popf
scas
das
sub
mov
sbb
sbb
imul
mov
lods
aad
sub
push
jge
imul
pop
icebp
enter
test
add
into
jg
call
sbb
dec
sbb
int3
pusha
clc
bound
cs
push
sar
cmp
call
mov
add
repnz
fwait
add
jmp
jmp
daa
dec
out
mov
pop
sbb
repz
ret
mov
dec
jne
ret
jl
mov
pushf
ss
nop
rolb
xor
inc
dec
loop
imul
push
push
xchg
dec
and
andb
scas
stc
jl
gs
loop
ficoms
ja
lcall
out
cwtl
iret
inc
and
jg
sbb
loopne
mov
jecxz
das
lods
stos
or
repz
mov
repnz
jle
mov
pop
inc
mov
pushf
xchg
daa
es
icebp
pop
pop
cld
jnp
jo
jnp
push
lea
jl
rcl
shl
or
sub
pop
push
aam
mov
dec
pop
cmp
sti
das
hlt
mov
imul
and
enter
sub
adc
inc
test
rcr
xchg
aam
mov
lcall
push
dec
sti
cmp
xor
or
imul
add
pop
sub
cwtl
pop
ljmp
lcall
gs
mov
inc
idivl
loope
mov
sub
mov
das
sbbl
and
mov
popa
repnz
cmpl
push
out
fiaddl
jnp
xchg
inc
out
aad
sub
cmp
xor
mov
into
push
sbb
jo
fiadds
mov
sti
ffree
mov
mov
div
sub
xchg
dec
fistpll
lret
mov
and
out
rorl
inc
cmp
add
daa
xor
negl
sbb
mov
lds
cmp
cmpb
repz
imul
loop
test
sbb
out
lods
xor
push
popf
cmp
loopne
addb
cs
in
out
in
lea
and
xchg
test
std
cs
push
fdivs
imul
icebp
repz
xchg
add
jmp
out
xor
ljmp
cmp
test
roll
mov
aam
push
xchg
xor
dec
or
cld
mov
mov
xchg
jo
lock
jnp
sub
lock
mov
sub
ss
mov
std
scas
inc
sub
push
test
into
jg
sbb
pop
adc
adcl
inc
and
cltd
rorl
xor
test
jp
jo
lahf
cmc
push
xchg
push
cmp
lcall
mov
pushf
std
pop
lahf
pop
jge
adc
pop
push
xor
mov
mov
shlb
jmp
or
aas
cmp
repnz
mov
xor
mov
stos
movsl
cwtl
jecxz
or
in
adc
inc
js
pop
adc
aaa
ja
jg
test
mov
jecxz
dec
jmp
ljmp
das
inc
xchg
pop
outsb
xchg
lea
dec
pop
psubusw
lods
push
pop
xchg
bound
inc
stos
stc
push
inc
cmpsl
dec
mov
mov
rorl
ret
rcrb
jns
push
test
cmp
sub
arpl
dec
dec
rolb
mov
jne
outsl
in
mov
cmp
js
fwait
pop
xor
or
mov
inc
cmpsb
mov
mov
or
xor
push
cmp
roll
ret
divb
xchg
lock
in
and
inc
xchg
xchg
test
cwtl
frstor
imul
divl
jle
xor
jo
and
std
dec
pop
das
or
inc
in
and
dec
int
cs
lret
lods
mov
fildll
repnz
push
lods
pop
in
cmp
mov
mov
es
int
pop
mov
dec
push
enter
test
ja
jp
sbb
lods
cmpsb
pop
mov
cltd
mov
dec
in
jge
lock
scas
std
or
loope
mov
add
imul
mov
sub
xor
push
aad
cmp
xor
add
fptan
mov
xchg
sub
cmpsl
dec
sbb
lahf
scas
out
mov
outsb
xchg
sbb
ljmp
lods
dec
jg
test
lret
aas
enter
dec
or
push
push
pop
movsb
cmc
fdivrl
je
cmp
or
lret
mov
test
pop
and
cmp
ja
rol
mov
hlt
push
std
mov
and
jae
aas
jbe
mov
mov
enter
mov
cs
sbb
loope
xlat
fmul
or
push
mov
xchg
xchg
xor
add
jecxz
imul
or
mov
push
push
neg
sub
in
push
int
shrd
xlat
jns
pop
xchg
lcall
push
out
shr
mov
and
jo
shll
push
lret
push
jnp
test
test
dec
cmp
or
push
add
pop
or
xchg
cmpsl
cmp
sbb
int3
addr16
cmp
mov
mov
lods
aad
or
mov
scas
nop
mov
xchg
cs
pop
std
jecxz
out
cmp
negl
ret
xor
scas
insl
dec
sub
add
test
push
iret
sti
sub
test
shlb
aad
leave
std
out
aam
cld
pop
fidivl
es
push
sbb
pop
add
cwtl
sub
mov
mov
add
push
loope
xchg
add
jmp
addl
jne
stc
stos
call
movsl
push
add
push
inc
cwtl
pop
mov
cmpsl
xor
fs
mov
arpl
or
lods
sub
cmc
imull
dec
outsl
dec
cld
sahf
ret
push
xor
push
les
pop
pop
add
sbb
push
dec
jno
out
mov
imul
fwait
ss
sub
cmpsb
popa
sbbb
aaa
mov
divb
cmp
test
xor
stos
arpl
in
jle
sub
xor
mov
inc
fistpl
pop
fisubl
loopne
adc
jne
imulb
arpl
fiaddl
shl
icebp
lahf
jb
mov
cli
ljmp
dec
cld
ss
add
es
ficoml
pop
mov
xchg
mov
jg
mov
addr16
mov
jmp
insb
popf
les
inc
out
mov
decb
mov
sub
adc
jnp
dec
lea
inc
mov
lret
loope
lock
sahf
int
cmpb
lret
pop
pop
cmp
loope
aad
push
loop
mov
jne
and
push
add
stos
adc
nop
insl
mov
loop
jmp
out
or
sbb
das
xor
shrb
mov
or
push
cs
xchg
fisttpll
iret
mov
stos
loop
push
adc
inc
add
and
fucomp
mov
xor
enter
js
inc
leave
stc
jne
bnd
push
rol
jbe
mov
movsb
test
and
mov
icebp
incb
cmp
insl
push
rcr
decb
movsl
add
sbb
jbe,pt
in
sub
sbb
hlt
aaa
xor
enter
scas
pop
ret
and
nop
lcall
inc
sbb
inc
fsubr
or
xor
fwait
push
fistl
stos
fnstenv
out
jl
das
sbb
shrb
mov
add
mov
sahf
xchg
das
sti
adc
xchg
push
imul
idivb
push
fcomps
lods
sbb
fwait
jmp
sub
xor
mov
mov
lahf
das
cwtl
xchg
movsb
clc
cld
cmp
cmp
subb
xor
fnstsw
test
add
and
ja
movsb
loopne
leave
jnp
ljmp
sub
into
cmp
mov
push
outsl
pop
mov
pop
pop
pop
dec
sub
mov
inc
mov
mov
pusha
push
std
dec
mov
add
pop
jge
inc
add
lods
insb
or
adc
or
loopne
call
mov
int
outsb
push
or
dec
aaa
inc
ja
push
or
into
mov
movsl
sahf
or
pop
cmp
sbb
and
sub
rolb
fdivs
add
mov
ficomps
jae
pop
xor
test
inc
inc
in
and
fildl
or
rcl
scas
clc
mov
cs
pop
pusha
sbb
push
mov
into
pusha
stos
cmp
sub
push
loopne
pop
pop
cltd
cmpsb
mov
sbb
flds
gs
lods
add
pop
and
loop
adc
pop
push
jecxz
sbb
mov
inc
test
xor
dec
sbb
pop
test
xor
test
das
enter
jbe
popa
pop
into
repz
add
lahf
cmp
lods
push
jae
mov
push
or
nop
pop
adc
push
sbb
pop
pop
mov
dec
add
add
sbb
sbb
fiaddl
call
test
mov
das
cmp
and
fwait
and
cmp
dec
jns
int
test
mov
in
sbbl
and
cmp
movsb
js
int
ja
bound
push
fnstcw
insb
lret
pop
iret
mov
pop
shll
sbb
dec
jo
daa
or
xchg
cmp
push
aam
int3
sub
cmp
pop
loopne
enter
cmpsb
ljmp
sub
mov
dec
sbb
push
xchg
jge
mov
mov
adc
mov
pop
frstor
cmp
jb
dec
and
adc
data16
call
loope
and
mov
lds
xor
xchg
jb
lods
sbb
inc
jecxz
not
adc
lahf
pushf
jl
lcall
xchg
pop
xchg
in
jecxz
mov
aam
popa
sbb
in
test
xchg
call
fmulp
cmpsb
or
sbb
and
enter
out
mov
addr16
pop
test
repz
ss
leave
cmc
adc
rclb
popf
daa
mov
push
pop
psrlq
lcall
sbbb
bound
and
mov
enter
xchg
stos
xchg
add
mov
clc
popa
cmp
mov
xor
jo
stc
adc
push
andl
dec
aad
sub
popa
cmp
ds
in
mov
sbb
mov
adc
dec
jbe
sti
jns
sub
lret
and
xchg
xor
sti
clc
sbb
dec
fcmovu
pusha
mov
xor
sbb
dec
and
push
mov
imul
add
xorb
je
lret
aas
cmp
pop
xor
jno
in
gs
jae
imul
and
clc
mov
inc
push
mov
leave
popf
jae
jmp
dec
mov
stos
or
push
dec
test
push
and
imulb
lds
inc
dec
push
icebp
xor
gs
mov
mov
xchg
arpl
mov
sub
rcrl
orb
imul
mov
dec
jbe
inc
fdivs
add
fwait
movb
cmp
insb
lods
testb
pop
sar
sbb
aad
data16
lret
add
pop
lcall
jle
adc
jp
dec
mov
mov
gs
and
cmp
enter
push
rorl
nop
pop
and
mov
roll
push
dec
add
cmpsl
out
sbb
inc
ret
mov
jae,pn
jl
adc
int
jge
sub
stos
jo
adc
inc
adc
cmp
inc
in
ljmp
flds
mov
leave
rcrl
cli
lret
mov
inc
push
data16
push
push
psllw
mov
mov
arpl
mov
pop
in
cmp
cmp
inc
cmp
ret
push
mov
adcb
jae
push
iret
and
mov
ljmp
mov
and
jae
movsl
push
mov
pop
ds
and
push
inc
jecxz
dec
int
outsb
repz
addr16
pop
sbb
xchg
scas
sbb
mov
cmp
inc
movsb
mov
stc
mov
pop
and
or
inc
sub
iret
ret
xchg
add
xor
dec
adc
out
jg
or
test
ds
mov
inc
aaa
fistl
dec
rorl
popa
jmp
orl
push
or
lods
or
adc
or
cld
dec
lahf
ret
inc
scas
lods
lock
add
xchg
and
dec
push
aas
negl
ret
rsm
or
inc
outsl
pop
inc
lods
inc
push
lcall
sub
sbb
and
push
jmp
sub
insb
rol
dec
jecxz
js
test
jb
lahf
jle
inc
into
or
inc
je
negb
rcl
daa
mov
mov
test
imul
icebp
jge
add
inc
outsl
mov
sub
pusha
imul
enter
xor
pop
movsl
pop
jne,pn
cld
outsl
je
jne
xor
pop
inc
or
dec
push
or
imul
mov
pop
add
cmpsl
repnz
cmp
jecxz
sti
xorl
cli
shrb
adc
aad
jo
mov
fs
add
lods
jmp
adc
cmp
jmp
ja
mov
scas
cmp
cli
add
fcomps
stos
jg,pt
xchg
mov
iret
sbb
cmp
jnp
outsl
aad
mov
xchg
test
push
icebp
cmp
mov
jb
mov
and
mov
mov
arpl
mov
push
mov
and
addl
mov
inc
roll
ds
push
xor
fs
rolb
imul
fwait
inc
inc
scas
hlt
jmp
sub
inc
out
push
insl
inc
popf
cmpb
inc
jl
aas
lahf
scas
or
xchg
in
adc
and
out
rcrl
scas
adc
add
push
pop
push
pop
es
dec
jbe
scas
xchg
cmp
add
popf
mov
sub
jmp
cli
jl
movsl
shll
and
repnz
mov
jae
in
cmp
push
packsswb
and
loopne
jmp
lea
or
popa
es
dec
jecxz
fbld
mov
push
jg
or
dec
pop
aaa
add
jo
imul
inc
jg
pop
inc
or
sahf
fstpl
add
in
pop
sbb
fldt
jo
xor
sub
mov
movswl
out
pop
stos
adc
add
mov
lods
movsb
repnz
and
pusha
lea
mov
mov
imul
pop
movsl
out
insl
dec
fsubrl
pusha
cmpsb
clc
mov
dec
outsl
inc
fistl
adc
push
cs
pcmpeqw
mov
cld
fsubs
adc
mov
mov
js
pop
xor
xchg
ret
fisttpll
push
gs
sarl
add
arpl
sbb
mov
inc
mov
and
jmp
xor
pushf
popa
cltd
jnp
sti
add
cwtl
data16
stc
clc
in
mov
mov
push
movq
or
or
xchg
ljmp
add
cs
cmpsl
or
pop
xor
iret
mov
xor
out
jae
filds
rolb
xchg
aas
mov
inc
fsubrl
adc
adc
fnstcw
outsl
inc
mov
mov
sub
std
xchg
sahf
scas
call
pop
in
setns
and
inc
stc
and
jl
movsb
xorl
inc
scas
sarb
shr
out
pop
test
inc
mov
rclb
mov
or
shlb
bound
int
popa
aas
inc
shlb
inc
pop
mov
lock
sarl
push
mov
pop
inc
jmp
test
push
inc
insb
sbb
subl
jne
jbe
mov
test
movsl
inc
std
mov
jle
push
pop
mov
repz
mov
mov
pop
pusha
and
js
mov
inc
push
dec
dec
daa
push
js
sub
xchg
add
nop
popa
or
dec
xchg
out
ds
xchg
das
add
jae
inc
std
pop
jg
inc
push
fisubl
gs
shll
dec
dec
pop
shrl
mul
xchg
leave
out
sub
jae
fisubrl
jmp
xor
jmp
xor
mov
and
push
test
and
insl
sbbl
cmp
leave
insb
movsb
test
add
sahf
sub
or
jae
xor
pushf
jecxz
push
push
push
pop
cld
inc
adc
sbbb
xor
pushf
and
jp
xchg
std
add
andb
push
loopne
sbb
pop
dec
xor
les
cltd
push
js
pop
inc
hlt
fucom
cs
call
jl
adc
mov
paddsw
xlat
lret
jae
xchg
pop
jecxz
aam
jb
imul
imul
loop
add
test
xorb
pushf
jne
iret
sbb
mov
cs
jg
jg
cmp
std
sti
rol
imul
ja
push
xor
aam
push
ret
or
movsb
lea
mov
mov
loope
fsubrp
insb
fwait
es
or
repz
scas
lds
xor
test
sub
cmp
lret
sbb
push
fwait
je
movsl
jae
repz
mov
int3
push
lret
sbbl
fs
sub
rorl
mov
divl
stos
movsb
loop
shlb
sbb
cmp
mov
mov
ret
outsb
push
in
sub
iret
mov
sub
mov
inc
pop
ror
enter
fmuls
adc
aaa
cmp
rcr
jmp
cs
pop
clc
cmp
jo
aam
xchg
jbe
sar
imul
adc
mov
xchg
inc
aas
mov
nop
cmpsb
or
mov
sbb
inc
test
pop
pop
adc
jns
inc
ss
xchg
push
jp
aas
mov
xchg
out
xor
das
mov
cs
lock
dec
pop
xor
adc
aaa
xchg
mov
cmp
cmc
call
push
xor
divl
push
cltd
xor
loopne
push
push
div
pushf
inc
mov
sbb
sub
mov
or
cmp
jmp
lds
in
std
sbb
lods
gs
testl
sub
mov
inc
adc
sub
rolb
js
mov
sub
push
inc
xchg
scas
into
or
outsb
or
xchg
dec
cmp
sti
inc
dec
mov
shr
aas
jno
inc
jno
xor
mov
cmpsb
movsl
xor
xchg
dec
scas
mov
test
mov
test
xlat
xchg
jae
je
hlt
leave
aas
dec
dec
jb
lea
push
jnp
ret
xchg
je
cld
pop
into
in
xchg
push
xor
xor
cmc
mov
and
in
in
push
mov
pop
jae
fbld
dec
jle
in
pop
xor
mov
arpl
loope
mov
jmp
mov
mov
mov
sbb
adc
adc
scas
outsl
out
fldl
and
fnstsw
scas
test
ljmp
cmp
jl
pop
movl
cmp
stc
xchg
in
cmpsl
mov
es
aam
pop
sub
or
fsts
mov
je
push
mov
das
repz
jns
add
sti
lods
pop
xor
and
into
out
sbb
inc
mov
push
add
inc
fstpl
cs
popf
mov
jno
mov
je
dec
push
xchg
outsl
outsl
notl
in
into
test
je
std
lock
mov
inc
mov
add
es
fs
sub
gs
icebp
inc
mov
ss
stc
pop
pusha
in
loop
mov
ss
scas
add
sbb
ss
clc
xor
xor
mov
pop
or
add
sub
dec
dec
imul
dec
pusha
adc
pushf
bswap
or
test
int
push
fisubrs
or
push
or
mov
and
pushf
mov
in
ds
fildl
gs
lahf
jns
and
and
out
cmp
cmp
push
dec
sub
jmp
std
arpl
daa
les
xchg
test
jle
add
call
adc
out
stos
add
stos
mov
inc
sbb
xchg
cmp
xchg
adc
dec
ret
jnp
bound
jmp
add
jge
nop
mov
out
aam
jmp
adc
iret
idiv
mov
fnsave
sbb
pop
call
repnz
mov
enter
mov
xchg
xchg
into
mov
stos
addb
and
xchg
out
inc
or
mov
inc
into
push
cld
orb
sbb
ffreep
inc
es
mov
lahf
pop
insl
mov
push
add
jne
insl
xlat
pop
cmpsl
icebp
and
jne
jne,pn
cmp
je
xor
mov
dec
test
or
enter
popf
pop
jns
sub
pushf
movsl
divb
popf
out
leave
sarl
pop
and
hlt
arpl
aas
mov
cmp
dec
cmp
mov
add
clc
mov
insb
dec
jmp
stos
fldt
fcoms
add
popf
xchg
outsl
jbe
dec
cmpsl
decl
ja
lcall
sbb
fwait
jo
xchg
cs
sti
mov
inc
mov
es
dec
popf
xchg
insl
shrl
push
shlb
or
xlat
clc
repnz
push
add
mov
mov
lods
pop
in
psrld
jg
cmp
push
push
and
xor
xchg
gs
xchg
inc
loopne
add
ss
out
fstps
or
out
ret
ds
fisubrs
cmpl
cld
int
inc
cmovbe
sbb
lret
push
add
and
clc
sbb
adc
scas
popa
das
mov
or
nop
adc
dec
mov
pop
jge
jmp
orl
and
lcall
pop
mov
gs
repz
ja
mov
and
mov
add
fistps
and
jb
fistl
mov
pop
pop
xchg
push
leave
pop
lcall
and
test
push
push
add
fnsave
jno
stos
mov
mov
sub
bound
aad
or
negb
cmp
jecxz
xlat
lods
cmc
ror
sti
and
insb
mov
or
xchg
mov
pop
mov
test
rol
in
test
test
mov
cmp
cltd
push
mov
push
movsb
xor
fdivr
and
push
sarl
out
dec
adc
jae
push
mov
add
popl
mov
imul
dec
or
push
jb
adc
mov
outsl
clc
push
and
xchg
popf
mov
or
roll
push
sub
xor
imul
mov
inc
stc
cld
push
ja
or
inc
pop
inc
mov
movsl
scas
add
dec
insb
jmp
xchg
jg
sti
cmp
subb
mov
and
mov
das
push
fcomip
movsl
mov
insb
cs
js
and
lahf
pop
lods
fisubrl
ret
mov
lods
loopne
dec
cmp
dec
push
fstpt
or
pop
das
xchg
dec
clc
jnp
push
pop
and
push
inc
ja
inc
out
sbb
fsts
push
inc
xchg
xor
js
sbb
in
inc
iret
lods
test
push
xor
je
jle
cwtl
push
cmpl
mov
cli
add
leave
push
sub
or
mov
and
adc
test
xor
repz
hlt
mov
lods
sub
or
mov
fdivrs
fs
int3
fmul
sub
test
inc
xor
leave
jae
adc
mov
adc
add
imul
xchg
dec
sbb
or
hlt
jl
add
mov
xor
xchg
sub
aam
lahf
push
push
fbstp
adc
scas
add
test
push
mov
mov
xlat
mov
sub
jne
jno
pop
ret
shl
mov
push
xchg
pop
dec
and
and
xchg
jne
adc
and
push
cmp
into
loopne
cld
add
daa
inc
std
sbb
xor
and
imul
push
mov
cs
xchg
adc
xor
sar
stc
pop
pop
es
shrb
jb
mov
fwait
cmp
mov
xor
jge
pop
fwait
scas
je
jecxz
rcr
fsubrl
push
xchg
enter
outsl
mov
insl
or
inc
sub
push
pop
add
and
in
outsb
fs
push
cltd
orl
cmc
cli
adc
pushl
or
add
mov
bnd
inc
inc
stc
out
lret
push
movsb
mov
scas
sahf
out
pop
cmp
and
pop
popa
inc
insb
sub
cmc
fcompl
inc
fisttpl
mov
mov
ja
xor
dec
pop
inc
arpl
mov
leave
rcr
cmpb
inc
in
adc
mov
das
inc
aam
mov
push
adc
loopne
inc
sub
mov
imul
outsl
inc
mov
sub
imul
add
shl
imul
insb
test
imul
sub
pop
fdivrs
ret
sbb
cmp
popa
stos
mov
push
jmp
mov
mov
clc
add
outsb
call
push
adc
fimull
sbb
jle
stos
fs
lcall
dec
xchg
jnp
sub
adc
inc
push
mov
loop
outsb
dec
inc
scas
or
jge
or
sbb
mov
fists
repz
cwtl
or
mov
and
movb
or
cmp
xchg
jae
mov
or
jecxz
nop
inc
jge
xor
outsl
sbb
into
adc
jl
lahf
lcall
adc
addr16
mov
add
cmp
push
cs
into
jecxz
push
adc
daa
imul
dec
jae
fsubrs
stos
or
cmpsb
jge
pusha
les
mov
ds
adcl
xor
jecxz
nop
test
rolb
or
push
adc
shlb
push
jp
lret
push
int3
jle
outsb
pushf
outsl
ds
and
dec
xor
inc
push
sti
mov
jge
movsl
movsb
cmpb
imul
mov
ljmp
sbb
cwtl
push
jae
jo
pop
pop
mov
pop
into
push
or
cmc
fmull
outsb
mov
andl
aaa
leave
cld
aas
popf
in
push
push
andb
cltd
sbb
push
sbb
aaa
ljmp
dec
data16
fs
cmp
sub
xchg
test
and
pop
jns
fwait
out
mov
lret
jp
inc
iret
mov
sub
int3
push
mov
loopne
in
xchg
mov
adcb
aas
testb
lods
push
inc
insb
inc
shll
pop
or
fidivl
shlb
les
out
imul
iret
lds
add
ss
push
sbb
in
into
test
ffree
fwait
jmp
scas
out
nop
dec
je
lds
iret
fnstsw
inc
push
les
dec
ss
jle
les
add
cltd
decb
loope
cmp
xchg
pusha
cmp
xchg
test
mov
stos
lcall
adc
lea
js
rorb
pusha
add
mov
dec
mov
push
and
xor
pop
comiss
pop
push
mov
ja
in
loope
leave
dec
ret
jns
jb
dec
push
adcl
fisubrl
push
mov
pop
xchg
dec
push
mov
or
jae
inc
push
push
jge
in
lcall
jle
dec
mov
pop
imulb
loop
dec
mov
test
dec
sub
in
jecxz
push
les
pop
outsl
fstps
xchg
mov
mov
jg
adc
lret
jecxz
fcmovnu
sub
mov
rclb
call
and
mull
or
sub
ss
mov
retw
movsb
lock
mov
pop
jmp
jle
or
stc
sub
stc
stos
and
stos
outsl
xchg
jmp
cmp
imul
cmp
xchg
mov
push
push
add
xabort
scas
lock
mov
add
and
jbe
lock
dec
movsb
and
andl
or
das
xor
int3
ljmp
iret
lret
cmp
push
in
pop
je
push
lea
add
ficoml
cmp
iret
sbb
clc
orl
rolb
inc
testl
rol
and
add
sbb
dec
sub
lds
cltd
popa
fcomps
lea
aas
popf
rol
xor
sub
iret
xchg
out
push
sarb
ret
fs
cmp
jnp
jnp
pusha
inc
mov
xchg
mov
addb
jno
enter
loope
stos
gs
popa
ret
adc
xor
shlb
xchg
or
out
daa
inc
and
sbb
es
sub
sub
sub
pop
test
mov
insb
rol
iret
mov
insl
dec
pop
cli
jmp
lods
pop
mov
mov
js
mov
push
xchg
push
push
movsl
popf
push
inc
imul
aad
ja
adc
cmpsl
push
arpl
insb
push
fcompl
enter
call
pusha
xchg
notl
cli
dec
shll
sbb
es
adc
pop
lods
jo
mov
and
mov
fiaddl
enter
fwait
les
pusha
xor
aam
xlat
push
push
dec
pushf
repz
mov
leave
aaa
push
pop
jne
push
rclb
scas
add
out
jnp
sbb
stos
push
or
xchg
mulb
dec
scas
int3
clc
push
andl
and
das
bound
mov
test
ud2
data16
add
jae
and
add
push
push
out
mov
out
and
add
das
sub
adc
stos
jbe
addl
xchg
sbb
dec
pop
js
add
icebp
test
rorb
xchg
mov
push
ss
decb
aaa
add
sub
dec
leave
xchg
or
imul
imul
iret
add
js
fwait
xchg
mov
jbe
mov
fwait
adc
xchg
insl
js
shll
rol
rcrb
or
insb
fsubl
or
fwait
insl
push
scas
pop
addr16
jnp
add
adc
or
into
addl
mov
aad
mov
xchg
add
das
sbb
jg
mov
aad
in
add
ljmp
mov
mov
gs
dec
xchg
callw
push
sbb
push
fwait
andl
xchg
sub
push
popa
out
je
ret
dec
mov
xor
cmpsb
add
jmp
xchg
mov
mov
clc
sub
mov
mov
jmp
adc
add
or
cmpsb
xchg
add
push
adc
mov
test
sub
rcrl
inc
outsl
call
xorb
and
ret
movsb
xor
push
inc
hlt
inc
mov
stos
ret
addr16
cli
add
jne
cli
or
insl
fsubl
sahf
pusha
mov
push
mulb
adc
clc
push
jbe
stc
cs
cmp
pop
adc
fxch
lock
inc
push
dec
pop
xchg
rorb
cmp
test
sub
cmp
mov
adc
icebp
cld
mov
lahf
mov
jg
push
lcall
fnsave
and
jne
aas
jbe
mov
lret
mov
orb
popfw
sbb
das
or
mov
add
in
in
and
lret
into
in
adcl
andb
repnz
mov
scas
inc
mov
es
sub
adc
sti
fsubs
inc
cld
mov
inc
xchg
mov
xor
mov
stc
push
aaa
pushl
xor
cwtl
mov
or
bswap
repz
sbb
sub
sbb
inc
loope
push
aad
sub
mov
mov
int3
not
or
cs
rcl
pop
adc
push
fsubs
jge
jne
rorl
shlb
sbb
dec
pop
ds
adc
sbbl
inc
dec
ficoms
cld
inc
sbb
sub
and
fstl
pop
mov
mov
pop
int3
repz
jae
outsl
ret
dec
sbb
std
icebp
add
adc
pushf
ds
bound
outsb
xchg
lret
xor
in
mov
mov
movl
or
clc
ds
aaa
sbb
popa
adc
ss
inc
jecxz
mov
test
je
xor
jp
sbb
pop
xchg
inc
or
in
add
mov
push
sbb
push
lret
mov
dec
xchg
mov
cmp
xchg
cmp
xchg
mov
jns
sub
and
jb
sub
mov
cmpsl
aaa
loope
or
sti
push
sbb
frstor
xchg
sbb
dec
mov
ret
xchg
insb
pop
popf
add
sub
insb
jnp
dec
or
jmp
mov
sbb
out
xchg
sahf
dec
sbb
ds
popf
xor
mov
inc
pop
push
sub
out
jnp
test
es
sbb
sahf
out
push
or
xor
cmpsb
fwait
mov
out
xor
out
adc
outsl
mov
push
scas
sahf
and
adc
jp
dec
insb
popf
mov
outsb
adc
dec
or
test
lcall
fldenv
inc
test
out
and
hlt
int3
mov
xchg
xchg
cmc
xor
idiv
mov
sarl
cli
loop
std
sub
ss
pop
xor
cs
jno
ja
sub
xor
insb
jne
rorl
mov
sti
adc
inc
aas
mov
bsr
test
or
push
dec
cmp
dec
stos
rclb
clc
sbb
mov
aaa
fisttps
aad
push
pop
and
jae
and
imul
in
call
xchg
lock
pop
or
xchg
adc
xor
orb
jge
dec
cwtl
ret
cli
xchg
mov
int3
lcall
dec
pop
lret
push
and
sahf
int3
out
cmp
cltd
xchg
jp
out
xchg
mov
xchg
scas
enter
fcomps
sarl
data16
push
aam
into
or
jb
idivb
pushf
mov
cmp
mov
mov
js
test
repnz
sbb
orl
frstor
xchg
imulb
mov
adc
lods
lret
ss
das
jp
lahf
pop
in
jo
cld
cmp
push
inc
mov
sbb
lds
adc
test
or
leave
pop
xchg
push
shlb
cmp
xchg
es
mov
int
push
adc
dec
mov
push
divb
mov
bswap
lds
mov
outsb
inc
cmp
xor
cld
pop
push
cmp
push
xlat
arpl
jae
pop
cli
jp
notl
or
sub
cld
push
pop
inc
jmp
or
jno
out
fcmovbe
stos
push
jno
cmp
bound
insl
cld
fidivrs
js
push
outsl
lods
das
pusha
dec
loop
sbb
adc
lods
cmp
xchg
sub
add
cmp
add
out
shl
push
arpl
arpl
lahf
sub
push
icebp
call
adc
pop
sbb
mov
fs
mov
popa
leave
jns
sahf
jne
push
sbb
ds
popf
jg
lods
stos
sbbl
mov
inc
cs
mov
les
xor
int3
mov
mov
sbb
adc
lea
sbb
xchg
int3
pop
xchg
insb
ret
aaa
and
movsb
arpl
xlat
mov
and
add
jns
mov
adc
ss
into
cli
imull
sbb
jo
test
call
ds
in
xchg
mov
xchg
cmc
das
pop
arpl
test
int
pop
sti
mov
lahf
xor
push
sbbl
jnp
dec
or
int3
sahf
push
inc
mov
insb
dec
leave
out
pop
mov
or
leave
jmp
cmp
in
lods
lds
ljmp
mov
sarl
stos
test
shlb
pop
xchg
stos
pop
dec
stos
inc
mov
push
push
shl
cmp
xor
jge
xor
pop
scas
scas
stos
fs
adc
sub
sub
loopne
sbb
add
sbb
sbb
or
hlt
jg
adc
push
push
dec
cs
sarb
das
pop
add
xchg
push
push
jno
pop
inc
mov
mov
or
pop
xchg
lods
nop
lret
or
adc
mov
pop
imul
push
movsb
imul
cmp
aam
test
jne
inc
xchg
bound
mov
insl
jp
ss
inc
in
sarl
ljmp
popa
pop
jp
dec
das
dec
loope
mov
add
test
cmp
dec
fimuls
lock
ss
cli
outsl
into
loop
rcll
pusha
sti
adc
xor
jg
fistpl
or
mov
insl
jecxz
sahf
mov
inc
push
mov
out
cltd
add
arpl
lods
adc
jg
test
ss
mov
sbb
xchg
int3
jmp
addl
pushf
test
cltd
add
nop
ss
cmpsb
xchg
mov
and
adc
jnp
mov
lock
repz
cmp
roll
ret
sbb
sahf
lods
stc
inc
sbb
stc
sbb
mov
bound
push
xchg
mov
andb
aaa
and
lret
add
adc
inc
xlat
les
daa
cmp
out
mov
rolb
mov
sahf
loopne
in
jo
test
loope
rolb
mov
or
adc
dec
push
jne
fstpl
fsubs
imul
pop
jo
popf
pop
inc
mov
aaa
sbb
push
sub
jp
mov
or
in
lret
jnp
xchg
rclb
ffreep
std
sbb
fdivrl
imul
lea
fnstenv
nop
ljmp
out
jecxz
insb
repz
sbb
mov
ficomps
inc
lods
cld
scas
je
ficoms
add
cmp
jp
mov
lods
cltd
cmpl
insl
cltd
sub
aad
dec
test
dec
in
iret
loop
out
jb
dec
xchg
je
xor
sahf
mov
fsub
test
add
xlat
ljmp
inc
pop
cld
mov
cld
insl
mov
cwtl
test
mov
pushf
aas
aaa
pop
ret
sbb
int3
mov
incl
aas
ret
push
repnz
adc
lds
jp
pop
mov
sub
sbb
inc
dec
mov
or
jge
inc
xor
loop,pn
jmp
inc
adc
adc
pop
cli
dec
stc
jle
or
fisttpll
outsb
sub
and
pushf
insl
sub
inc
add
out
fldenv
dec
xorb
mov
in
mul
fisubl
pop
and
and
jp
jo
xor
jecxz
jge
movsb
js
cmp
jno
out
lcall
cwtl
test
loop
incb
sbbl
or
mov
hlt
sbb
or
mov
cld
dec
cmc
scas
adc
pop
sti
call
push
test
std
addb
mov
dec
scas
lock
push
sbb
xor
or
jge
pop
dec
jbe
das
test
dec
in
fisubrl
push
adc
in
jbe
pop
jae
inc
test
push
mov
test
mov
jns
insb
sbb
mov
lea
xchg
rcll
jb
dec
jae
jo
mov
shll
push
push
test
fs
mov
mov
call
adc
test
push
test
ss
repz
sbb
fisttpll
aam
and
popl
ret
out
insb
lret
rcrl
test
cmp
add
in
mov
cli
mov
mov
aaa
cmp
cwtl
mov
and
mov
jmp
pop
xor
cli
pop
lea
idivb
mov
mov
xchg
pop
push
push
aas
es
nop
or
stos
in
nop
xlat
fldl
out
bound
cld
jbe
roll
lret
adc
jo
cmp
dec
push
or
leave
pop
xor
lock
xchg
dec
xor
add
in
in
addr16
cmp
aas
fadd
test
jmp
dec
roll
enter
jne
cld
mov
push
and
adc
jbe
rorl
out
push
mov
call
pop
dec
cmp
shll
fsts
pop
les
enter
or
popf
mov
scas
lahf
push
sahf
add
fistpl
xchg
jne
fisttpl
cmp
mov
adc
jmp
adc
and
popf
lock
outsl
rclb
or
mov
cmp
mov
ds
ss
inc
mov
popa
mov
mov
out
addb
xor
sub
mov
adc
dec
loopne
data16
in
xchg
ret
cli
into
andl
push
nop
push
inc
lahf
inc
mov
jns
loop
shrb
hlt
xchg
lret
stos
lock
fwait
in
pop
jl
adc
outsb
fwait
sub
pushl
out
add
push
xor
ja
loope
scas
jmp
pop
lret
jge
jecxz
pushf
iret
add
push
stos
sti
out
xchg
cmp
ret
je
push
fwait
out
std
sbb
in
sti
sarb
andl
out
or
push
cmp
push
xchg
nop
sub
mov
mov
gs
mov
addr16
sub
adc
shrl
xchg
or
and
in
fisubrs
cmpl
cmp
push
scas
xlat
sbb
fwait
jae
mov
lds
aaa
mov
or
push
xchg
daa
xchg
dec
pop
push
pop
jne
pop
cmp
test
mov
xchg
jns
call
jge
pop
and
shlb
cmp
jne
dec
stos
int3
adc
in
adc
imul
pop
inc
mov
sub
dec
cmc
ret
hlt
into
in
inc
dec
lods
fmuls
pop
xorl
iret
into
jb
or
lret
xchg
aaa
mov
sub
mov
adc
cwtl
repz
js
add
movsl
sbb
dec
std
adcl
insl
sub
jb
mov
or
mov
dec
call
jb
mov
mov
jle
push
loop
popa
icebp
and
nop
dec
mov
or
and
in
pop
test
fsubs
and
jmp
cmp
inc
jae
fucomi
fisubl
mov
jns
push
aam
push
mov
mov
pushf
push
sub
push
cmc
sbb
push
div
cmp
jmp
test
inc
sbb
insb
add
mov
jecxz
into
scas
lea
xlat
push
imul
sub
adc
mov
adc
xor
movsl
out
dec
lret
xor
jo
jb
adc
adc
and
lcall
mov
lods
pop
loop
lret
sbb
cmp
and
adc
lods
ret
push
cmp
shl
xor
fmuls
outsb
sbb
roll
xchg
pusha
xchg
imul
add
fld
iret
rcpps
lock
pushf
imul
mov
or
adcb
sub
mov
jbe
fsub
xor
mov
push
int3
aaa
jge
xchg
or
loopne
jnp
jp
lods
and
mov
cmp
divl
inc
pop
hlt
or
mov
leave
and
movsb
mulb
mov
mov
loop
in
inc
test
push
lea
movsl
mov
icebp
jbe
int
adc
and
ret
mov
xchg
add
test
testb
jbe
dec
mov
mov
es
loopne
adcl
and
aad
push
rcrl
xchg
scas
sub
mov
inc
sbb
ss
push
mov
arpl
movsl
xchg
ds
ficoms
cmp
push
mov
mov
daa
push
inc
bound
pop
adc
pop
mov
xchg
mov
jno
jecxz
xchg
add
add
gs
mov
call
data16
lret
or
push
popf
cli
dec
jmp
lock
jge
add
inc
pop
lea
popa
cmp
in
subl
dec
jg
sbb
cmp
rolb
or
mov
push
mov
jmp
adc
stos
daa
shlb
inc
cli
fwait
cmpsl
imul
cltd
clc
pusha
dec
addr16
xor
lds
out
cmp
mov
pop
cmp
xor
inc
repz
jnp
dec
xor
lds
mov
xchg
jl
pop
push
icebp
xchg
mov
xchg
add
inc
decb
push
call
pop
shll
inc
mov
push
imull
pop
sar
xchg
stc
pop
in
xor
mov
jmp
aad
int
in
fbstp
andb
cltd
std
mov
scas
test
test
negl
pop
lods
ret
ljmp
xchg
mov
push
sub
rcrl
xchg
cmp
pop
pusha
mov
xor
test
or
inc
cmp
ja
fsubrs
mov
lret
das
mov
sub
jne
mov
fcoms
jae
or
cmp
jl
push
test
insb
sbb
cmp
insb
mov
in
rolb
pop
lock
mov
stos
jmp
dec
aad
or
inc
sbb
sub
push
and
ret
dec
jecxz
test
ucomiss
or
xor
push
pop
mov
dec
std
mov
xor
push
push
dec
sbb
test
insb
pop
cmp
inc
push
dec
arpl
sbb
es
imul
por
cs
or
inc
inc
sbb
cmp
xor
jnp
mov
loope
jle
sbb
sub
mov
jns
xchg
pop
and
repnz
rcrb
loop
ret
push
stc
shrl
mov
add
js
fimuls
lods
loop
xchg
pop
loope
dec
or
mov
cmpsl
sub
popa
cmp
mov
cs
mov
or
cmp
mov
push
sub
ljmp
dec
adc
inc
jae
out
mov
iret
jne
dec
test
ds
inc
insb
das
mov
and
std
jo
hlt
mov
sbbb
test
jge
jl
mov
pushf
pop
adc
adc
arpl
mov
mov
in
fisubl
adcl
shrl
insl
enter
xchg
out
adc
sub
push
push
and
sbb
jae
inc
push
test
dec
push
inc
jne
test
push
and
loopne
fcompp
sti
js
inc
mov
sbb
stc
dec
shll
inc
add
mov
pushf
or
cld
fwait
sbb
aaa
ret
cli
mov
adc
jb
xchg
js
dec
loopne
pusha
mov
ljmp
mov
jmp
cmp
sti
cs
inc
popa
movl
imul
xchg
scas
push
dec
ljmp
jg
or
mov
fistl
push
shl
sbb
into
jmp
rcll
mov
out
ret
mov
sub
xchg
not
inc
out
out
sub
adc
and
dec
nop
es
orl
adc
xchg
push
nop
es
aas
into
xchg
push
mov
fs
clc
stos
aad
push
cltd
insb
mov
mov
pop
xchg
inc
aas
pop
das
adc
lret
xchg
xor
pop
mov
inc
add
out
xor
pop
in
mov
ret
xchg
fdivrl
xor
xor
fisubrl
or
dec
ficompl
ja
subl
sub
scas
mov
adc
jno
scas
pop
lahf
sbb
add
sbb
fistpl
mov
mov
divl
dec
xchg
das
scas
pop
jge
dec
and
push
fildl
xor
xchg
inc
test
sub
lock
loope
pop
bound
fwait
xchg
fisubl
add
xorb
cmpsl
lret
icebp
sub
push
add
das
cmp
inc
in
wrmsr
cmpsl
fists
movsb
gs
sub
lock
xchg
sahf
cmpsb
ds
dec
inc
arpl
clc
jge
cli
out
xchg
adc
cmp
sub
cld
jns
out
pop
and
addr16
xor
adc
inc
jle
outsl
cmp
mov
jne
xlat
xor
enter
dec
lcall
push
lock
stos
adc
xchg
fs
ficomps
ret
or
mov
dec
clc
scas
outsl
lods
push
rcrb
lret
mov
test
sti
aam
cmpsl
lea
xor
mov
lret
dec
adc
lods
inc
popa
stos
je
jecxz
addr16
xchg
fwait
out
xor
fistpll
jle
xchg
sub
stos
mov
add
lret
push
sub
sar
nop
jecxz
ret
push
mov
ss
rol
enter
fistl
sub
push
fldt
xchg
cld
cli
enter
push
sub
inc
mov
ljmp
lods
jnp
std
sahf
in
cwtl
imul
nop
or
sub
xchg
inc
arpl
mov
and
push
push
dec
fsts
push
cltd
or
orb
add
jp
cmp
movsb
xor
mov
insb
das
xchg
iret
out
and
adc
xor
xchg
mov
enter
popa
stos
mov
pop
xor
mov
dec
and
mov
cmc
lahf
jmp
aas
cmpsl
xor
jp
dec
mov
push
stos
stc
or
inc
jo
inc
mov
in
addr16
cmp
sbb
mov
test
pop
loopne
mov
je
jbe
cli
jo
sub
sub
imul
inc
in
adc
mov
mov
shl
inc
pop
mov
inc
into
cltd
bound
js
add
outsb
jns
jae
adc
mov
les
jg
mov
std
icebp
nop
je
sbb
inc
or
jmp
xchg
mov
xchg
adcl
cmpsb
lret
mov
mov
jae
vpunpckhqdq
cs
cltd
insb
inc
test
jl
mov
adc
cmp
cmp
lds
fs
out
into
and
sbb
adc
or
push
lcall
push
xchg
ja
sub
movsb
pop
cli
icebp
es
cld
movb
not
fsubl
loopne
jns
cmc
popa
movsl
je
ja
in
lahf
jno
jb
cld
pop
sete
push
push
cli
stos
gs
les
sbb
bound
sub
pop
repnz
iret
nop
clc
cmp
add
insb
jl
xchg
dec
mov
inc
cld
dec
out
repz
or
rcrl
add
push
fbstp
fstpt
xor
lret
add
pop
mov
sub
add
das
pop
mov
cmp
jo
in
fbstp
std
mov
push
shrb
pop
push
mov
es
mov
in
mov
daa
in
mov
in
push
push
cs
xchg
in
inc
xchg
movsb
fisubrs
push
mov
pop
sbb
xor
rclb
rcll
mov
mov
dec
jo
mov
push
adc
and
mov
mov
push
lds
pop
jb
sub
mov
sub
or
stc
inc
jbe
pop
cld
in
jge
sub
add
push
lods
pop
or
out
jbe
fcoml
inc
hlt
inc
xor
or
mov
arpl
out
into
movsl
mov
add
imul
out
ret
test
pop
pop
push
repz
mov
test
sub
dec
adcl
jnp
dec
jo
loopne
je
mov
dec
jg
in
cmpsb
imul
clc
test
mov
arpl
jno
cli
or
loope
lcall
scas
xor
push
mov
movsl
cmpb
imul
nop
notl
mov
jo
xor
xchg
adc
dec
andl
cmp
mov
push
rcrb
mov
aad
imul
mov
sub
or
mov
cli
mov
jbe
out
scas
rorb
jmp
sahf
es
cmpsb
push
jb
orb
rcr
jae
mov
add
fnstcw
pop
not
push
pop
sti
xor
ds
or
sarb
pushf
push
imul
insb
and
pop
jnp
outsl
jne
xchg
jnp
jns
jle
xchg
je
insl
aad
or
jmp
xchg
dec
in
pop
adc
dec
push
sarl
mov
js
insl
js
out
add
in
xchg
daa
mov
push
mov
fldt
jmp
fsub
add
idivb
xor
mov
cmp
in
arpl
jecxz
js
xchg
xchg
scas
leave
popf
mov
movsl
or
inc
adc
sarl
sub
and
hlt
ljmp
bound
scas
stos
add
test
loop
rcrb
pop
mov
cmpsl
lds
outsl
xor
xchg
xor
daa
les
pop
rcrb
mov
jg
fistpl
outsl
nop
xchg
dec
lea
test
mov
push
inc
jns
add
das
jmp
sbb
mov
fmuls
mov
push
push
shr
sahf
mov
in
push
cwtl
clc
fcoms
dec
dec
jge
jp
xchg
in
jg
dec
push
decb
push
test
mov
mov
lods
xchg
push
xchg
push
mov
sbb
adc
push
popa
into
jle
xor
jg
in
popf
outsb
ficomps
mov
inc
lods
stc
movsb
pop
mov
xor
arpl
mov
pop
roll
push
xchg
sbb
js
clc
adc
cmp
sbb
test
cltd
andb
xor
cmp
enter
ljmp
xor
pop
add
add
fcompl
pop
mov
into
inc
pop
sub
addl
xchg
repz
repnz
in
lret
xchg
repz
and
sub
inc
mov
clc
xchg
cli
sahf
pop
sub
xchg
mov
push
adc
sub
jl
xor
jg
into
cmp
and
dec
cltd
mov
lods
or
sub
shlb
jne
adcl
cmp
cmp
jecxz
and
sbb
jne
jecxz
popa
sub
fbld
pop
lods
aam
icebp
je
mov
mov
jmp
lds
filds
notl
mov
mov
inc
mov
mov
stos
rorl
pop
cmp
mov
cli
cli
pop
push
mov
xor
pop
fucomip
inc
out
pop
shl
cmp
hlt
rcrb
data16
mov
pop
mov
shrl
add
and
inc
test
mov
inc
dec
xor
jns
mov
dec
out
adc
jbe
inc
gs
mov
push
jmp
add
fsubp
mov
ljmp
das
vmovd
sbb
rorl
xchg
inc
inc
sti
and
jns
and
in
loopne
fsubrl
sbb
sti
and
sahf
mov
icebp
je
cmpsl
stos
ss
ret
in
sar
loope
daa
mull
push
mov
cmp
testb
sti
dec
sbb
leave
jne
adcl
aas
mov
arpl
dec
test
cld
mov
or
xor
xchg
push
inc
stos
lock
dec
addr16
je
pop
cmpsl
cmp
and
cwtl
mov
fmulp
jp
mov
mov
nop
dec
xor
hlt
out
into
lock
fildll
cwtl
ret
mov
push
adc
mov
xor
jg
pop
xchg
push
scas
push
int3
fnstsw
push
mov
sbb
fnstenv
mov
add
pop
aad
cmp
shl
addl
aaa
nop
adc
aad
fdivrl
aad
insb
xchg
add
lds
decl
call
pop
jno
shrl
pop
js
mov
dec
mov
lea
pop
cmp
fstpl
inc
data16
jg
mov
or
rcr
or
push
mov
dec
and
pop
pop
dec
jns
insl
xor
push
mov
jae
leave
xchg
mov
push
cmp
repnz
dec
jno
xor
adc
cmp
lods
sbb
fimull
popa
mov
pop
adc
xchg
pop
xchg
andb
pusha
jne
fidivrl
lock
stos
cmp
out
add
popa
loop
out
and
xor
in
cmp
push
push
iret
lahf
call
sti
ja
xchg
xlat
pop
pop
aaa
mov
int
jo
or
movsl
mov
dec
pop
xor
mov
cmp
dec
pop
sbb
paddq
push
push
sar
lods
mov
addr16
fldcw
jo
lret
ret
lret
mov
or
les
or
sub
sbb
or
cmp
sbb
mov
jae
or
dec
int3
inc
in
call
lret
mov
dec
lods
or
xchg
mov
mov
xchg
adcl
outsl
insl
lcall
push
stc
int
in
jnp
clc
lcall
inc
mov
fistl
push
fimull
inc
mov
fisttps
sub
pop
out
int
dec
mov
xor
cltd
adc
jle
adc
add
dec
push
jl
inc
or
inc
cltd
mov
cmp
pop
inc
sub
das
enter
std
cld
mov
dec
fldt
adc
push
sahf
jle
add
xchg
add
sub
or
outsb
pop
mov
lahf
sub
mov
jge
or
stos
mov
pusha
inc
popa
sahf
xchg
mov
jne
and
sub
jno
pop
mov
ljmp
lock
cmp
or
xor
mov
or
out
jnp
cli
inc
mov
sub
mov
mov
repz
or
ljmp
leave
xor
ljmp
aas
adc
test
jecxz
imul
aaa
insl
int
in
push
hlt
dec
mulb
shrb
xor
mov
mov
int
sti
fwait
push
data16
je
fidivl
pop
push
sbb
adc
clc
call
inc
sub
pop
xchg
xchg
push
daa
xchg
es
or
jmp
push
jp
inc
adc
sub
xor
ja
sbb
push
jo
xchg
leave
lahf
mov
call
dec
int
ss
call
pop
sbb
lcall
inc
push
jne
sbb
iret
jle
fsts
push
dec
subl
inc
es
outsb
fs
mov
push
popf
mov
jmp
dec
fnstsw
mov
and
sbb
jae
mov
mov
jp
mov
fsubrl
outsl
or
aam
inc
dec
leave
dec
mov
js
jg
int
scas
dec
lcall
xor
cmp
imul
popa
ja
inc
fsubrl
test
mov
in
mov
faddl
test
sbb
mov
nop
pop
popl
mov
aam
mov
add
xor
daa
inc
aaa
lret
out
pop
mov
jge
xor
xor
adc
push
mov
test
cmp
xchg
xor
sarb
andl
scas
es
mov
int
push
and
fs
push
fsubrl
arpl
pushf
adc
mov
adcb
xchg
loop
add
or
fnstcw
pop
inc
mov
cmp
pop
push
ds
mov
inc
push
in
lret
sub
sub
test
das
push
mov
jnp
cmc
cmc
mov
and
pop
outsl
adc
mov
pop
mov
ss
xchg
cmp
push
repnz
cmc
mov
push
mov
enter
lea
xchg
inc
outsl
mov
jl
in
lods
adc
in
lret
rep
add
sahf
inc
dec
hlt
push
gs
mov
cmp
pop
mov
movsb
inc
add
sbb
add
inc
lahf
mov
push
aas
or
jne
das
out
pop
insl
nop
xor
aam
xchg
push
xchg
jae
pop
test
stos
outsb
pop
repnz
dec
fwait
sbb
pop
or
mov
push
jge
xor
das
push
filds
insl
push
outsb
outsl
cmpsl
bound
xchg
icebp
or
jns
add
and
and
hlt
adc
movsl
sti
sbb
xor
pop
aam
and
mov
mov
je
test
mov
ljmp
pop
sahf
es
sub
popa
adcl
cltd
jecxz,pn
add
xchg
pushf
inc
gs
out
popa
fistpl
daa
fwait
rcr
ret
call
dec
mov
cmp
sti
fs
into
push
xchg
sbb
xchg
adc
mov
fists
add
jnp
inc
sbb
popf
sbb
mov
fisubl
test
adc
dec
pslld
call
rorl
sub
inc
jecxz
sub
mov
rcrb
out
jl
stos
pushf
or
cwtl
pop
insb
and
mov
ja
mov
pop
pop
mov
ljmp
pusha
frstor
pop
insb
cmp
add
xlat
into
xorl
inc
jns
push
lret
andb
fwait
je
dec
or
lret
repz
lea
loope
mov
lahf
lock
sbb
movsb
dec
idivl
fidivrl
movsl
cmp
cmp
insl
xor
jmp
fldl
shrl
pop
pushl
outsb
mov
das
call
ja
mov
sbb
daa
inc
jl
mov
shll
mov
cwtl
jne
pop
iret
popa
jnp
clc
mov
test
fucom
fidivrl
adc
mov
add
cmp
mov
or
loopne
sbbl
adc
mov
or
je
jae
pop
jmp
in
aas
je
stos
scas
or
outsl
imul
outsl
push
addr16
mov
pusha
mov
and
mov
or
frstpm(287
lds
js
push
mov
lock
sub
dec
js
icebp
sub
loop
aam
je
sti
jmp
fdivrl
aam
push
add
inc
xor
iret
decb
sub
xor
outsl
push
jo
pop
rol
nop
pusha
mov
mov
mov
and
jbe
je
mov
sub
mov
lock
loope
jmp
adc
aad
sbb
fistpll
cmp
sbb
xor
jecxz
stc
test
xor
cmpsb
cmp
or
popf
ret
ds
cmp
or
and
cmp
sub
xchg
xchg
mov
pop
test
xchg
and
fs
pop
xchg
add
dec
movsl
fs
sbb
lods
repz
popa
gs
xchg
lds
cmp
ficoms
pusha
es
add
xchg
mov
sarb
mov
es
or
out
xlat
pop
lret
sub
xchg
outsb
add
add
adcb
lock
lahf
dec
in
fsub
mov
subb
ret
pop
jmp
pop
repnz
pop
ret
rcl
cs
push
adc
es
stc
inc
std
pop
or
loope
push
mov
sbb
dec
cld
notl
dec
sub
mov
rcll
std
ljmp
fucomi
push
jne
shlb
mov
cli
enter
sub
cmp
dec
mov
xor
ljmp
xchg
fucom
sbb
sub
xor
cmpsb
sbb
or
xchg
cs
push
pop
pop
popa
fmuls
mov
dec
loopne
out
sbb
sti
fs
jb
mov
lea
or
in
cmp
icebp
jbe
fwait
add
int
aaa
mov
or
and
push
sbb
cmpsb
inc
cmp
mov
jne
sbb
scas
cmp
sbb
outsl
ja
or
test
jno
lcall
pusha
mov
popa
iret
cmp
mov
nop
subb
mov
rcr
orb
pop
popa
iret
pop
mov
cmc
cmp
add
aam
lods
pop
mov
lock
loopne
out
pop
loope
and
push
push
mov
push
out
lcall
in
popa
or
lret
xlat
sub
xchg
iret
xchg
popa
jb
xchg
arpl
aad
xor
ljmp
pop
and
imul
mov
lea
repz
cmp
outsb
cmc
into
jp
pop
sub
repz
add
call
pop
rclb
int
sub
pop
fsubs
lods
pop
dec
insl
shlb
adc
push
add
pop
mov
jne,pn
cltd
and
sbb
jmp
enter
ja
imul
loopne
push
sub
pop
scas
mov
jb
das
faddl
xor
sbb
ret
xchg
faddl
fisttps
mov
lods
aaa
scas
cmpsb
inc
cltd
xchg
pop
jae
pop
add
mov
loope
adc
pop
push
bnd
push
aam
outsl
imul
int3
lods
sub
popa
cmp
sbb
xor
enter
cmp
jno
cmp
mov
fwait
insb
or
push
cmp
call
mov
dec
lret
sbb
sahf
movsb
mov
lret
pop
cmp
sbb
mov
pop
pop
adc
stc
push
stc
xchg
cmc
test
dec
dec
dec
stc
push
xor
lock
std
pop
mov
push
push
cmp
jge
mov
fstl
pop
test
mov
pop
jl
xchg
cmc
ss
jg
dec
dec
sub
jg
cmpsl
sti
cmp
fs
out
std
mov
push
push
sbb
xchg
js
xor
ret
clc
jle
ror
jl
lods
scas
add
xor
xchg
dec
push
lahf
pop
sbb
inc
adc
out
sahf
rolb
lock
and
notb
out
push
int3
adc
pop
stc
sahf
add
sub
jg
sub
xor
in
loop
pop
mov
sub
daa
cmpsb
sub
fistpll
push
xchg
iret
imul
mov
cmp
insl
inc
shlb
add
mov
gs
aas
cmp
add
push
xor
sub
imul
fisubs
adc
dec
hlt
mov
mov
pop
or
mov
lahf
push
cmp
int3
add
xor
sbb
in
andl
movsb
jnp
xor
andl
sub
out
cmp
ljmp
xor
sahf
inc
pop
xlat
ja
pop
dec
sbb
cmp
mov
push
int
imul
sbb
fdivr
loope
add
jl
xchg
test
js,pn
xchg
xor
inc
lds
mov
jle
mov
hlt
and
jecxz
adc
into
or
sbb
lahf
or
rcll
psubb
xchg
fiaddl
or
add
adc
add
push
mov
scas
pop
rcr
adc
ss
out
push
lea
or
mov
cmp
mov
stc
jle
aam
rcrl
dec
xor
push
pushf
fisubrs
push
jp,pt
xchg
mov
sbb
cs
lods
add
jmp
jns
mov
dec
fs
mov
xchg
push
cmp
add
adc
sbbb
ljmp
push
or
xor
shll
es
out
mov
adc
in
insb
add
out
dec
xlat
dec
dec
lds
pushw
mov
into
int
lock
sbb
ret
cmp
clc
mov
push
loop
adcl
push
pop
enter
inc
jb
jp
addl
jnp
mov
xchg
adc
dec
push
add
push
jg
icebp
les
stos
fldt
dec
sti
cmp
pop
lock
dec
mov
sbb
das
loope
cmp
leave
scas
js
dec
pop
shl
xchg
pop
je,pt
es
jg
mov
in
dec
notb
xor
and
in
and
shlb
adc
inc
faddl
lods
lods
mov
lods
inc
pinsrw
push
add
clc
stos
dec
pop
or
in
arpl
jp
test
ret
lahf
jmp
enter
lds
inc
xchg
scas
in
inc
inc
rcrb
jge
psubusb
cmp
mov
push
je
xchg
fprem
mov
xchg
sti
fadd
jns
dec
cld
and
cmp
clc
add
mov
in
jno
jno
ret
in
mov
cmc
out
movsl
aam
jg
dec
cmp
rcr
lcall
insl
testl
imul
sbbl
fldt
jne
mov
scas
cli
xchg
inc
and
out
stos
mov
cwtl
jb
in
cmc
mov
sbb
and
add
shl
out
or
ret
or
imul
or
dec
sbb
jl
inc
jg
adc
xchg
mov
loope
sub
out
bound
aas
cmpl
aaa
inc
inc
int
test
xchg
mov
call
push
adc
popa
pop
nop
std
adc
push
loop
int
or
je
lahf
lcall
movsb
and
call
sub
stc
xlat
rorb
and
ficompl
dec
pop
jg
xor
ljmp
mov
test
push
xor
xchg
add
mov
fidivrl
lcall
mov
into
xchg
ljmp
xlat
inc
lds
mov
or
xor
rcll
fsts
fwait
sbb
sub
mov
jo
jecxz
cwtl
push
cmp
add
sahf
add
push
in
aam
jbe
flds
ret
push
mov
ljmp
int3
push
cld
adc
cld
ds
out
jns
xchg
icebp
add
out
inc
adc
pusha
sbb
out
movsb
jb
cmpsb
incl
cmp
aaa
cmp
fisttpl
imul
in
add
mov
rcl
outsb
pop
and
adc
push
and
sub
pop
cmc
aas
mov
push
push
out
push
push
sbb
pop
or
xchg
iret
cmc
shll
aaa
mov
das
fsubs
call
rcll
inc
xchg
xlat
inc
and
mov
mov
test
mov
and
ja
dec
mov
push
cmp
or
push
mov
shll
dec
movl
lret
and
stos
jle
jle
test
xor
movsl
ss
shll
xchg
xor
sbb
sbb
cltd
ficomps
fwait
push
fwait
lret
inc
das
mov
or
or
jo
cmpsb
xchg
es
mov
outsl
outsl
fs
or
inc
jns
insb
mov
aaa
cmp
lret
pop
ror
pop
pushf
mov
or
cld
pop
pop
pop
insl
jo
loope
in
aad
adc
push
orb
gs
out
movsl
testb
arpl
xor
lret
std
sahf
and
cmp
or
lods
stos
jle
sbbb
add
push
jl
mov
pop
call
repz
add
gs
mov
adc
outsl
fwait
cmc
xchg
inc
mov
mov
testl
shll
push
repz
sbb
loope
test
add
mov
push
pop
cwtl
std
push
cmp
xchg
insb
mov
jo
mov
inc
mov
inc
aam
mov
loop
adc
insb
push
imul
push
kmovb
loopne
add
out
out
mov
cmp
icebp
adcb
ret
lods
inc
outsl
inc
jmp
lods
daa
in
imull
mov
stos
je
mul
or
cmp
cwtl
sbbl
mov
fwait
jmp
pop
shll
lcall
and
test
mov
fidivrs
in
push
add
std
sub
call
sahf
sti
and
mov
or
mov
jp
enter
add
mov
xchg
int
cwtl
test
stc
jmp
jbe
stos
out
and
std
lock
mov
fadds
bound
add
stos
push
je
jp
popf
mov
out
cmpsb
xchg
dec
sub
loop
jb
lea
loopne
jno
lock
sub
jmp
sbb
popa
jae
mov
cmpsb
xchg
cmp
push
push
push
fidivl
mov
ror
roll
xlat
lea
mov
repnz
scas
sti
push
loop
push
pop
aam
cmp
push
dec
repnz
sub
out
mov
roll
in
stos
and
push
cld
mov
mov
jp
and
cld
mov
xchg
into
mov
or
jg
cltd
sahf
shll
sub
xor
js
and
mov
adc
movsb
outsl
or
inc
pop
jmp
pusha
test
or
les
cmpsb
call
xchg
lahf
pop
dec
jnp
repz
cmpsb
xor
inc
push
mov
push
lods
or
js
ret
add
in
xor
aas
sbb
outsb
jge
xlat
add
ret
or
sub
imul
cltd
loope
push
sub
popa
stos
fimuls
iret
jns
dec
outsl
jnp
add
pop
xchg
pop
push
shll
stos
lods
and
pusha
xchg
dec
insb
cmp
xor
rolb
leave
mov
lret
ljmp
jb
add
add
cmp
or
jae
jl
jp
pop
addb
mov
movb
cs
cmp
lret
stos
movsb
inc
mov
mov
jbe
mov
cli
bnd
xor
cmc
pop
insl
jl
push
mov
jmp
cltd
cltd
mov
xchg
sub
test
or
mov
ds
push
jns
loopne
stc
loope
lods
mov
cmp
fmul
sub
adc
sbbb
test
jb
jle
inc
rcll
shl
lea
push
jecxz
cs
mov
adc
shlb
cwtl
adc
or
jle
cltd
jbe
das
add
jb
add
popf
jnp
gs
data16
xchg
or
push
sbb
gs
ljmp
jnp
lds
mov
mov
loop
hlt
sbb
inc
mov
sbb
in
repnz
xor
or
std
xor
popf
lods
inc
jge
dec
jp
idivb
mov
xchg
stos
and
iret
sbb
mov
xlat
fildll
jecxz
lea
lds
sbb
arpl
xchg
xchg
std
fisubl
ret
in
inc
cli
inc
repnz
push
lock
arpl
sub
pop
imul
cltd
mov
lahf
jnp
stos
gs
and
mov
pop
jmp
lds
mov
cmpsb
jmp
lahf
dec
push
ja
es
xchg
pop
icebp
subb
inc
mov
je
stos
mov
fisttpl
sbb
out
std
shrl
add
mov
sub
fistps
mov
lcall
ds
jae
jns
xchg
shr
mov
inc
bound
mov
jnp
cltd
aaa
push
lahf
cltd
add
cmpsl
and
fisttps
xor
mov
inc
ja
loope
push
mov
fsub
mov
pop
dec
fildll
mov
int3
and
sub
cmc
adc
lahf
push
fwait
lret
fs
mov
cmp
pop
mov
cmc
loope
mov
inc
rcrl
aam
sub
adc
cmc
mov
or
scas
cmp
jne
and
add
ficoml
std
xchg
xor
icebp
sahf
pop
fldt
fdiv
stc
adc
jecxz
mov
jne
ja
inc
push
shrb
jnp
inc
add
fildll
mov
insb
add
mov
and
cltd
push
stc
mov
in
inc
clc
lods
push
mov
in
or
mov
mov
fdivrl
mov
adc
mov
pop
insl
in
or
lcall
lea
or
int
into
xlat
ret
pop
int
add
sbb
or
lods
out
cmp
into
sbb
cli
or
mov
inc
aaa
out
jnp
xor
fcmove
adc
test
pop
mov
rol
cmp
and
inc
popw
mov
popa
shlb
fadd
pop
nop
int
cld
inc
sbb
stos
xchg
test
pushf
lods
xchg
mov
xor
pusha
mov
sbb
orps
dec
sbb
inc
add
shlb
sbb
sub
out
and
mov
push
xchg
mov
xor
adc
sbb
sbb
pop
adc
sbbb
sub
hlt
popa
push
inc
dec
mov
cmp
add
jle
push
sbb
xchg
std
js
xchg
imul
inc
int3
cld
sahf
or
daa
jnp
cmp
xor
loop
in
or
push
hlt
imul
gs
enter
inc
test
push
push
xor
xor
popf
sub
or
jl
mov
test
inc
xor
scas
cmpsl
mov
popa
inc
inc
jo
mov
das
xchg
out
popl
je
inc
push
mov
pop
testl
pushf
push
sbb
in
adc
lds
or
jge
pop
pop
iret
mov
data16
ja
push
rclb
or
or
mov
adc
pop
xchg
mov
xlat
cmp
and
out
in
adc
mov
mov
fwait
roll
scas
and
loopne
mov
popa
arpl
pop
mov
dec
sbb
test
mov
lret
mov
jecxz
adc
cmp
sbb
jnp
in
shll
std
fnsave
xchg
jns
mov
pop
dec
shrb
mov
or
mov
sbb
scas
outsl
ljmp
loopne
jmp
insl
test
pop
push
mov
pop
mov
test
jp
add
mov
add
jmp
test
rclb
out
cmpsl
andl
cs
aas
mov
insb
or
inc
lahf
jne
sahf
hlt
xlat
ret
icebp
xchg
dec
push
loope
xchg
mov
divb
cmpsl
inc
into
fnstsw
enter
setns
push
clc
dec
in
pop
pop
pop
xor
mov
in
push
push
in
add
bound
aaa
je
test
gs
scas
mov
ljmp
and
jmp
jl
cmp
fsts
adc
mov
cmp
jl
es
popa
xchg
movsl
dec
outsb
fs
push
icebp
sbbb
pop
leave
cltd
imull
add
aas
push
xchg
adc
add
add
call
rol
mov
add
outsb
inc
jge
adc
outsb
xor
lahf
mov
xchg
mov
pop
imul
sub
mov
int3
stos
adc
mov
bound
ja
and
push
fs
in
add
insb
scas
pop
push
mov
repz
ljmp
pop
and
mov
xchg
pop
adc
mov
inc
xchg
lds
add
in
sbb
xlat
pop
stos
mov
filds
pop
push
int
insl
leave
fs
sbb
lock
ret
dec
push
sbb
add
sbb
adc
sub
popa
test
dec
and
fistps
pop
sbb
and
jnp
cmp
pop
ror
daa
mov
call
mov
aas
sub
inc
je
add
fs
mov
cltd
subb
pop
sub
dec
testb
push
mov
and
mov
aas
shlb
pusha
xor
loope
mov
jp
ljmp
cmp
test
arpl
push
add
sub
rcr
xchg
sub
loop
mov
ret
sahf
sub
dec
stc
pop
sti
xor
jecxz
enter
or
cmp
xchg
dec
cltd
das
jmp
mov
xchg
daa
hlt
push
stos
dec
add
repz
inc
cltd
not
add
xchg
mov
daa
out
aad
ljmp
add
pop
loop
mov
lahf
cwtl
mov
or
repz
dec
mov
and
pusha
mul
movsb
push
mov
pop
xor
dec
shl
out
or
loop
movsb
sbb
push
je
jbe
subb
mov
jnp
pop
iret
sbb
or
roll
and
xor
adc
imull
jg
jle
push
cmpb
sub
jg
jb
aad
push
dec
or
cmpsl
scas
les
push
pop
inc
dec
mov
insb
mov
jnp
push
rcrl
addr16
push
push
lods
mov
mov
mov
cmp
inc
mov
lods
imul
aad
or
mov
aaa
faddl
mov
fistpll
test
fsubp
or
fcmovb
jle
mov
cmpsl
daa
in
and
adc
cmc
mov
mov
dec
mov
pop
add
push
lock
data16
gs
or
scas
pop
jl
dec
or
enter
dec
faddl
mov
sub
or
xlat
push
jp
cltd
and
jno
cmpsl
push
pop
add
fsubr
lods
out
cld
iret
pop
clc
and
jae
pop
iret
ffree
xor
sub
js
ss
mov
push
ja
mov
xchg
xchg
xor
inc
push
mov
mov
ljmp
pushf
ss
fwait
int3
test
mov
xchg
mov
mov
into
repz
cltd
into
loop
xor
jno
loop
ficompl
js
inc
xchg
mov
out
push
adc
xchg
popf
xor
pop
mov
movsl
out
fildll
int3
mov
inc
sbb
imul
or
jmp
add
mov
ds
and
jg
loope
xlat
pushf
cmp
sahf
lea
popf
push
inc
sub
cld
cmp
sbb
imul
sbbb
dec
iret
popa
jno
push
inc
pop
movsb
or
outsb
jl
jp
xorb
push
and
lahf
adc
cmpsl
fbld
cmp
sub
cli
loop
testb
or
dec
push
inc
das
loope
fdivl
int
sbb
leave
mov
andb
add
jns
out
arpl
inc
add
pop
jo
mov
clc
adc
xlat
and
mov
cmp
and
sahf
cmp
xchg
and
xchg
cmp
mov
shrb
adc
das
aaa
cmpsb
mov
mov
pop
mov
fiaddl
mov
add
or
add
push
add
mov
and
mov
pop
dec
out
cmp
xchg
call
js
xor
mov
mov
jb
fst
lret
cld
andb
test
pop
jl
or
call
test
ljmp
sar
sbbl
lods
adcb
dec
aad
inc
inc
popa
js
daa
mov
jb
je
xchg
fidivrs
xchg
addl
loopne
in
xchg
cmc
jge
iret
xchg
jb
orl
in
lock
or
or
and
jge
mov
mov
testl
jle
hlt
das
mov
xor
mov
pop
dec
clc
les
mov
sbbb
xchg
out
push
aaa
push
test
ljmp
sub
push
pusha
repz
push
shl
das
sub
lcall
inc
cmpsl
xchg
pop
test
fldcw
jb
fimull
out
in
cmp
xchg
jle
or
add
in
jge
cld
das
inc
mov
adc
shrb
cwtl
lock
and
xchg
jb
push
faddl
stos
push
or
iret
jae
jle
mov
dec
xchg
push
push
and
sarl
dec
lods
and
push
adc
aaa
divb
jbe
lcall
mov
enter
pop
int3
js
aad
mov
inc
fiadds
jp
xchg
add
xchg
mov
decb
pop
aas
fnstcw
pop
in
outsb
ja
in
lods
dec
sbb
add
cs
and
push
dec
in
stos
es
jne
rcrl
push
addr16
addr16
and
push
fiadds
sub
dec
xchg
sub
xorl
mov
fidivrs
sarl
adc
arpl
test
inc
xchg
push
xchg
jbe
sbb
in
cmc
movsb
fsub
push
lods
xor
in
mov
repz
mov
ficompl
xlat
sbb
mov
scas
dec
test
pop
push
mov
in
pop
inc
add
enter
adc
xchg
bound
cmc
sub
out
xor
jns
ret
iret
aas
inc
inc
fwait
repz
cs
hlt
add
lea
clc
jbe
outsl
adc
mov
and
xchg
xchg
loopne
sub
mov
leave
inc
shrb
pmulhw
mov
imul
jbe
imulb
push
fs
add
shrl
rcll
sub
adc
ljmp
lods
and
stos
shr
js
test
mov
cmp
mov
mov
and
les
and
rcrb
and
sahf
ljmp
mov
mov
test
xchg
inc
popa
loope
jo
cs
cwtl
sbb
add
jmp
mov
xchg
dec
add
push
rcrb
pusha
test
or
cld
clc
or
aas
fcmovnbe
inc
or
data16
pop
lret
sti
xor
mov
pop
inc
icebp
push
test
xor
movsl
out
inc
cmpsl
loope
in
jbe
cltd
fsubp
and
adc
arpl
out
faddl
lea
pop
add
mov
inc
dec
incb
rorl
mov
mov
mov
sti
inc
ret
add
or
jecxz
lcall
out
mov
sub
ficompl
push
pop
icebp
fists
in
aam
sahf
cmp
pop
mov
lods
mov
popa
cmp
js
mov
and
xchg
xchg
jecxz
test
mov
mov
adc
mov
sbb
mov
cmp
sbb
insl
test
fs
dec
lds
xlat
jbe
dec
sub
icebp
xchg
or
or
inc
lcall
mov
test
adc
xor
mov
push
arpl
repz
sub
or
add
lret
rolb
dec
inc
fisubrs
nop
movsl
or
mov
and
fdivl
dec
fwait
cmp
rol
ds
pop
shll
fs
pop
mov
aam
xchg
mov
xchg
mov
xchg
inc
jo
dec
rorb
daa
ret
insl
divl
jmp
mov
cmp
inc
add
mov
clc
jmp
fidivl
insl
lret
pop
jb
popa
cs
or
mov
jge
jne
jae
jns
clc
mov
xlat
jno
add
jg
push
jbe
jo
movups
adc
fucomip
iretw
in
orl
jl
cmc
into
push
lea
jecxz
mov
test
mov
imul
add
insb
arpl
test
test
stos
scas
mov
cmpsl
imul
insl
loopne
sbbl
sub
jb
loop
push
pop
sub
cmp
jo
pop
call
or
nop
aaa
std
ret
es
or
orb
ljmp
scas
imul
sub
pushf
subb
xchg
xor
popf
call
es
je
rcll
push
out
pop
dec
xchg
daa
lcall
outsl
es
fistps
xor
scas
out
xor
cmc
dec
arpl
jg
xchg
out
sbb
insl
movb
or
mov
xchg
mov
aaa
cmp
outsb
sarl
pop
jb
ss
inc
inc
ljmp
rcrl
xor
int
mov
cmpsb
sti
dec
je
pushf
cld
test
mov
pushf
sbb
aad
imul
xor
inc
lret
nop
mov
jmp
ss
stos
addb
mov
xchg
and
push
enter
mov
scas
add
fidivrl
jno
hlt
and
cmp
pop
inc
dec
xchg
xlat
ret
addb
cld
xor
test
xchg
mov
cmp
mov
jo
sbb
pop
into
ljmp
push
fildll
cld
test
idivl
add
cmp
jg
jns
and
and
incb
shrl
insb
sub
push
andl
pusha
mov
fisubrs
cmp
jmp
jnp
lea
int3
stos
push
stos
out
jmp
les
arpl
sbb
cld
insb
cmp
mov
add
or
stos
add
sub
movsl
fldcw
add
or
ss
mov
mov
inc
lret
test
xchg
mov
andl
xchg
jae
adc
inc
cmpsl
insb
movsl
daa
std
insl
mov
add
divb
mov
stos
mov
dec
cmpsl
mov
out
jp
sahf
inc
out
pop
int3
fs
pop
push
mov
ja
mov
xor
and
cwtl
pop
imul
loopne
pop
inc
stc
sbb
jmp
leave
inc
mov
sar
xor
mov
fcomp
int
in
in
cmc
insb
bound
hlt
cmp
test
fnsave
mov
gs
pop
repz
repz
dec
dec
sbb
std
addr16
dec
push
cltd
imul
pop
dec
lcall
mov
scas
sbbl
jecxz
int3
nop
orb
xor
cmc
pop
jo
adcb
adc
stos
mov
mov
add
jnp
mov
std
shr
xlat
inc
inc
test
xor
js
clc
imul
mov
movsl
addb
fsubrl
mov
fistl
jnp
add
jge,pt
js
mov
mov
xlat
jno
add
sub
mov
inc
dec
rolb
xor
fnstsw
pop
jae
mov
mov
pushf
mov
cmp
or
sarl
cmp
push
rcll
pop
add
lods
gs
into
ja
hlt
pusha
cmpb
jnp
enter
loopne
sub
pop
mov
or
in
add
push
pusha
and
push
daa
nop
in
ja
gs
dec
xor
mov
inc
pushf
insb
jge
pop
test
aad
data16
sahf
das
mov
dec
xchg
scas
adc
popl
adc
mov
scas
sub
cmp
jbe
roll
adc
nop
xlat
test
adc
daa
pop
cs
popa
pusha
sbb
jp
lock
xchg
sbb
xchg
jno
sti
add
xor
mov
mov
repnz
sub
xor
or
dec
pop
incb
insb
jne
not
push
fwait
sbb
fcoml
jns
into
icebp
xchg
push
ss
push
outsl
jge
popa
jo
or
mov
ljmp
lds
icebp
ror
push
add
or
adc
data16
add
movsb
xchg
and
mov
or
enter
sub
dec
dec
xchg
cwtl
cmpb
xchg
mov
sub
pop
shlb
js
sbb
push
sbbl
imul
call
dec
imul
dec
nop
or
or
lock
push
mov
fdivrs
in
movsb
or
sbb
repnz
jno
and
loopne
adc
stos
leave
outsl
shrl
lcall
sub
dec
popf
out
pop
jle
fsubrs
mov
andl
mov
xor
rcrl
xchg
push
mov
add
xor
das
into
lods
popf
adc
xchg
seto
outsb
imul
movb
mov
mov
dec
pop
seto
cmp
sbb
add
adc
push
jmp
and
pushf
mov
inc
test
mov
xor
xor
in
cmp
je
inc
stos
xchg
xor
sub
rcrl
sti
jo
cmc
pop
xchg
cmc
leave
movsb
mov
sbb
or
fsubrs
push
loop
jecxz
xchg
jp
lret
cmp
ljmp
push
fcomps
cmovg
lds
div
decl
pop
int
mov
fdiv
jle
and
lds
rcrl
out
jmp
daa
xor
pop
sbb
loopne
xor
enter
mov
jne
adc
pop
push
xchg
sub
int3
gs
mov
cwtl
xor
xor
lods
js
cmpsl
decl
mov
cmp
sub
and
add
sahf
jg
repnz
js
icebp
mov
dec
mov
ljmpw
decl
sarl
or
xor
add
push
shlb
shl
jae
adc
lcall
pop
inc
fildl
push
shld
xchg
scas
xchg
rcl
ja
push
lock
mov
adc
insb
sbb
bound
sbb
sub
jg
lds
inc
jne
xor
decb
mov
pop
xor
adc
frstor
push
pop
pushf
sti
sub
xor
cmpsb
add
inc
enter
and
cli
mov
sub
dec
fdivrs
adc
adc
lods
or
cmpsb
jbe
or
je
push
inc
int
xchg
je
in
test
jecxz
xchg
pop
lcall
mov
js
mov
cmp
into
cmpsb
pushf
rcrb
or
jmp
add
xor
aaa
jnp
imul
sbb
das
fnstsw
mov
lea
push
test
imul
pop
popa
xor
cmpb
scas
sti
jns
sbb
in
arpl
in
mov
push
jbe
jecxz
insb
flds
sbb
int3
push
jo
xrelease
jp
xor
dec
mov
leave
dec
test
mov
or
push
call
and
sbb
adc
add
pop
xor
add
in
scas
insb
test
mov
lds
out
add
jp
js
sub
out
sbbl
sub
inc
mov
ljmp
test
xchg
sub
ljmp
frstor
shr
shll
xchg
xor
shlb
enter
inc
daa
nop
dec
aaa
jne
push
and
aaa
push
aas
xor
imul
into
lahf
outsl
jns
xchg
movsl
sarb
and
cmp
push
xchg
xor
cld
dec
push
xchg
aad
or
xor
aad
loope
jle
sbb
lea
dec
divl
xlat
mov
sub
mov
pop
add
or
push
mov
pop
push
bound
cmpsl
push
push
pusha
fildll
lahf
adc
sbb
xlat
nop
jg
scas
bound
xchg
popf
out
arpl
and
ret
fadd
pop
pop
in
stc
mov
and
xor
lret
data16
dec
test
xchg
mov
jge
inc
aad
or
popf
sub
push
cmp
addr16
sti
movsb
popa
mov
jnp
sub
sub
pop
outsb
mov
les
mov
mov
cli
test
fidivrl
mov
pop
ja
push
pop
sarb
insb
mov
cmp
adc
imul
fdivrp
call
scas
pushf
jns
and
popf
pop
iret
push
mov
mov
shr
popa
jne
ja
rorl
xchg
outsl
dec
dec
addr16
or
stos
or
lock
or
mov
ljmp
sbb
add
mov
fwait
leave
fldl
xorb
andb
aad
fsubrs
sub
dec
xchg
into
adc
pop
arpl
dec
sar
mov
adc
inc
add
xchg
ret
jge
lret
std
cmp
in
addr16
dec
jo
sbb
xchg
pusha
cli
rsqrtps
pushf
int3
arpl
cmp
out
pushf
mov
pop
mov
cmp
mov
jmp
add
shll
mov
mov
sti
stos
repz
add
leave
xchg
aad
enter
lahf
repnz
repz
and
mov
mov
repnz
mov
mov
fnstsw
mov
jbe
fcoml
mov
lods
mov
lret
cmovns
jmp
lds
aam
dec
ret
push
testb
mov
movsb
es
push
pop
fsubs
xor
mov
popa
inc
arpl
or
or
pop
xchg
insb
jbe
nop
xor
jne
lahf
cmpsb
int3
outsb
mov
jne
roll
lock
xor
clc
jbe
fisttps
sub
out
scas
fcoml
pop
adc
push
inc
jae
jno
jmp
daa
fnstsw
dec
stos
adc
lods
cmc
dec
xorb
cli
mov
decl
add
and
je
jecxz
test
jle
mov
pop
xor
ds
jmp
jbe
subl
xchg
xchg
outsb
push
jl
push
mov
sbb
mov
lods
pop
sarb
in
mov
jbe
pop
in
out
sti
icebp
jo
ret
push
push
shrl
test
lock
mov
mov
mov
or
xchg
or
shrl
or
cmp
push
jnp
xchg
and
mulb
stos
ret
repz
mov
adc
cmp
inc
mov
insb
mov
ds
and
imul
bound
gs
push
add
test
cld
popf
or
out
inc
aaa
test
fdivrl
xchg
ljmp
mov
mov
and
mov
sbb
pop
xchg
lahf
clc
arpl
scas
test
dec
adc
test
fs
shlb
jne
sahf
and
outsb
jne
cmp
roll
jb
jecxz
insb
inc
mov
stos
xor
push
xlat
xchg
push
fisttps
mov
sub
pop
push
push
mov
enter
push
adc
xor
ss
sbb
jns
add
sarb
pop
cmp
pop
pop
outsb
cwtl
insb
rorb
jl
imul
aad
out
xorb
pop
mov
adc
jp
cs
dec
outsb
sbb
jle
xchg
pop
enter
mov
pop
inc
aam
test
sarl
dec
sbb
jg
push
ret
inc
and
scas
push
in
inc
scas
jnp
addr16
int
jae
inc
insl
mov
add
int
loope
fwait
or
out
mov
xchg
jo
jle
mov
dec
pop
je
sub
jae
inc
dec
idivb
outsl
mov
out
jmp
add
or
xor
jae
rcll
les
add
pop
je
add
jo
loop
sahf
adc
lods
repz
pop
stc
shlb
out
pushf
jo
popl
sbb
sbb
or
push
mov
mov
xorb
je
xor
mov
fwait
jecxz
cld
inc
out
fistl
rcl
aam
sub
shll
mov
mov
xor
fnstcw
cmp
jmp
sub
in
cmc
sub
dec
mov
sti
and
xor
pushf
cmc
jecxz
mov
jge
stos
fildl
dec
lcall
addb
movl
cwtl
inc
mov
test
cli
mov
out
mov
jg
add
pop
test
push
pop
out
cltd
or
or
mov
aas
dec
cmp
adc
sub
es
es
pop
es
inc
push
fdivrs
xchg
popf
pop
mov
icebp
stos
cltd
dec
cmpsb
jb
or
and
pushf
imul
mov
mov
std
aam
out
sti
jg
sbb
test
aaa
aas
sbbb
or
ret
test
cli
add
inc
mov
pushfw
popf
pop
mov
lahf
mov
cltd
sbbl
lds
test
and
and
mov
fistps
sbb
mov
into
mov
mov
idiv
in
pop
xchg
mov
add
mov
sub
cs
push
imul
jle
sbb
adc
outsl
dec
push
mov
repz
ret
popa
adc
rcl
xchg
jge
es
sub
mov
jno
popf
push
xchg
idivl
push
xchg
cli
js
sbb
inc
xor
inc
dec
ljmp
mov
inc
ret
rcrb
mov
adcl
jp
mov
mov
mov
int
fwait
sub
mov
jne
nop
nop
pusha
cmp
rolb
ret
jecxz
icebp
cld
pop
or
outsb
pop
mov
add
add
pop
stos
jecxz
xor
or
pop
cmpsb
sub
ds
mov
xor
push
mov
adc
xchg
xor
and
incl
fs
or
or
xchg
daa
pop
jns
mov
and
jl
inc
pop
push
les
movsb
pushf
and
aaa
mov
dec
xchg
mov
sahf
pop
xor
loopne
std
dec
push
pop
orb
je
mov
jmp
sbb
sbb
call
xor
out
jmp
jnp
or
lcall
adc
push
jle
push
pop
test
repnz
cmp
scas
icebp
xor
adc
mov
icebp
push
jecxz
sahf
out
fdivrl
pushf
cld
pop
push
or
and
pop
dec
inc
push
in
pushf
hlt
iret
aaa
add
popa
out
decl
sti
dec
icebp
mov
fidivrl
nop
fstl
imul
testl
jnp
movsb
call
push
lock
pop
sbbb
xor
inc
add
imul
xsha256
cmpsb
adc
loope
enter
les
mov
out
pop
add
xchg
mov
xor
repz
and
outsl
or
pop
shr
adc
nop
sub
fwait
cmp
jmp
sahf
nop
stos
cwtl
insb
cmpsl
push
iret
mov
xor
cmpsb
out
outsb
rcrl
xchg
jecxz
lea
pop
ss
xchg
jbe
cmpsb
pop
mov
xchg
add
sbb
pop
adc
jecxz
imul
jp
idivb
lods
jmp
sbb
jno
pusha
xor
xor
push
sbb
jp
and
add
pop
call
xor
icebp
or
mov
jo
cmpsb
int
aam
out
add
cmp
xor
and
xchg
in
xlat
aam
shrb
imul
movsl
sub
sahf
push
std
scas
loope
add
push
jno
cmc
pushf
and
sub
rcrb
fisubl
nop
test
cli
sbb
jp
lret
sub
push
cld
pushf
add
test
leave
aam
sub
sbb
xor
or
mov
cmp
std
mov
roll
test
cmp
mov
xchg
inc
repz
jo
jns
xlat
jecxz,pn
cmp
int3
sub
cld
xchg
pop
ds
pop
lods
add
or
xchg
ret
lds
sub
enter
int
ss
mov
mov
ret
cmp
imul
js
mov
sahf
subb
mul
pop
xor
push
lods
popf
je
imul
adc
or
adc
cwtl
imul
jle
push
mov
aam
pop
mov
adc
push
sub
test
aad
pop
in
xor
aas
mov
xchg
daa
es
outsl
test
imul
test
dec
and
xchg
stc
aas
std
lcall
jmp
stos
fwait
out
sub
and
push
sub
pop
sbb
and
sub
jl
ja
pop
or
mov
push
movsb
or
push
xor
fsubrs
sbb
mov
fs
add
add
arpl
add
rorl
mov
mov
cmp
xchg
movsb
decb
pop
shl
mov
in
ret
jmp
xor
mov
aaa
cmp
test
shll
shll
adc
push
mov
dec
mov
or
inc
into
and
sbb
jmp
sbb
xchg
mov
push
xchg
in
pushf
imul
inc
pushf
mov
insl
movsl
in
lea
imul
outsl
sahf
xorl
outsb
and
movsl
subb
les
rol
xchg
or
ds
lds
lea
xor
lret
push
lods
mull
dec
in
sbb
addb
adc
repnz
stos
mov
lea
dec
and
dec
xchg
dec
lock
sub
lds
in
cwtl
xchg
inc
insl
xlat
cli
and
or
rcrb
mov
pop
cmpsb
outsl
pop
xchg
and
loopne
cmp
test
ret
cs
les
jno
neg
rcll
pop
test
inc
fdivrl
scas
pop
iret
mov
icebp
add
pop
push
xor
ret
adc
cmc
or
jg
arpl
ret
int3
mov
pusha
and
push
dec
adc
idiv
pop
gs
sahf
out
pusha
fnstenv
cs
jge
mov
xlat
xchg
sub
mov
orl
jecxz,pn
ljmp
mov
or
adc
pop
movd
xchg
sub
lods
pop
xor
enter
daa
dec
hlt
push
adc
and
aas
js
aam
inc
mov
cs
loopne
pop
or
ret
rcll
cmp
faddl
in
push
xchg
dec
arpl
cmp
or
clc
test
pusha
cmp
and
jbe
push
mov
mov
push
push
jo
test
pushf
adc
imul
push
xbegin
inc
jb
rcrl
cld
aas
add
lock
mov
inc
into
inc
add
pop
lea
pusha
push
dec
test
test
or
cmp
sbb
jo
sub
cltd
jge
ret
pop
push
sbb
orl
and
mov
leave
pushf
movsl
push
or
mov
mov
lahf
inc
and
mov
mov
movsb
xor
add
and
mov
imul
jae
stc
lods
andb
out
out
aas
jmp
jns
scas
cltd
jge
push
les
push
add
lret
dec
pop
test
rclb
pusha
jo
or
xchg
jecxz
jnp
pop
fildll
adc
repnz
push
cli
sti
xor
pop
and
jmp
sbb
add
sub
data16
cli
subb
jl
dec
idiv
call
mov
sub
aad
shrl
rclb
mov
hlt
xlat
mov
setb
or
gs
sbb
inc
add
mov
cmp
jge
out
push
sub
hlt
jmp
sub
inc
cs
leave
xor
fsub
lahf
testb
push
daa
jns
popa
and
xchg
jns
sub
mov
push
addr16
or
mov
sar
enter
pop
pop
int3
xchg
lret
mov
js
mov
call
and
daa
arpl
mov
scas
adc
lock
cmp
leave
mov
addb
mov
leave
xchg
inc
pop
shr
cmpsb
jmp
rcpps
xlat
movsl
lock
inc
dec
stos
scas
sbb
nop
xchg
rorl
into
addr16
push
mov
mov
enter
scas
aaa
lret
jle
bound
add
add
jle
adc
push
fistps
call
pop
sbb
fidivl
sub
mov
les
adc
mov
push
mov
inc
into
repnz
ljmp
jmp
mov
je
push
lahf
push
inc
lahf
cmp
mov
fs
js
mov
adc
loopne
jne
sub
xchg
js
movsl
divb
mov
jne
pop
cwtl
fwait
sub
in
add
je
and
imul
dec
or
xchg
sub
in
cwtl
notb
out
inc
js
jbe
dec
nop
pop
mov
sbb
ljmp
lods
pop
ds
lret
cmp
popa
sbb
xor
cld
cmp
mov
inc
test
jne
and
icebp
jnp
ret
mov
push
test
cltd
dec
and
addr16
sub
loope
lock
push
fcompl
movsl
jnp
out
in
jmp
sbb
jnp
adc
fucomp
in
jno
add
hlt
lods
popa
mov
out
sub
push
or
cmpsb
sarb
and
clc
dec
xchg
lret
push
add
popl
std
cld
adc
push
shl
and
notb
push
popf
jg
negl
jno
test
adc
pop
add
call
pop
addr16
push
insl
pop
sub
lds
lret
loop
popa
mov
push
sarl
mov
jecxz
lcall
push
jno
sbb
scas
pop
fisubl
pusha
cmp
shlb
adc
inc
inc
dec
cmp
ror
add
mov
negl
ljmp
lock
test
push
cmp
or
dec
xchg
inc
test
test
mov
bsf
and
mov
jne
sarl
push
xor
mov
jp
cld
add
ds
push
ja
les
pop
in
adcl
and
push
ret
test
negb
adc
jbe
jmp
cmpsl
test
push
xor
lcall
loope
lahf
dec
iret
shlb
dec
in
sbb
cmp
sub
jne
add
lcall
popa
cmp
adc
push
sbb
lds
daa
adc
sbb
push
movsl
or
cld
into
sbb
fs
jae
push
imul
rclb
mov
xor
jno
push
mov
cmp
dec
and
shlb
push
push
mov
je
jne
xchg
add
xor
icebp
xor
test
lock
repnz
stos
fcompl
add
mov
mov
mov
sbb
and
jae
sbb
loopne
ficompl
add
add
fstps
dec
jb
testl
sbb
inc
push
stos
icebp
add
cmp
sti
jns,pt
jecxz
scas
cmpl
subl
jns
ljmp
popf
xchg
imull
or
cmpsl
xchg
push
movl
into
imul
cmp
arpl
mov
mov
imul
ja
inc
scas
cs
push
test
sub
adc
shlb
add
jp
mov
int
ss
pop
enter
mov
xor
xor
xchg
xor
fsubr
or
fwait
in
push
rcll
inc
icebp
jmp
mov
outsb
push
sub
testl
pushl
sbb
jno
pop
lds
jg
xor
movsl
jl
rclb
je
lock
dec
fmul
movsl
push
aaa
add
lret
push
adc
iret
lret
roll
cmp
into
pop
mov
add
sub
mov
pop
xor
sbbl
xor
cmc
mov
and
stos
dec
mov
dec
adc
push
or
mov
cs
nop
notb
fs
push
pop
lods
jno
cmp
mov
addb
mov
test
inc
mov
mov
test
popa
jp
push
sbb
xor
pop
sbb
inc
push
push
push
sub
mov
testl
mov
addb
jns
xchg
xchg
out
jbe
xchg
push
pop
jae
les
xor
in
mov
xchg
ss
std
sahf
mov
adc
add
add
in
sti
mov
cmp
sub
out
pop
push
loopne
mov
pop
daa
push
xchg
mov
push
into
cmp
clc
pop
sbb
decl
inc
test
cmp
das
insl
pop
lods
loope
call
push
sbb
hlt
inc
cmp
inc
imul
jns
push
jbe
and
in
sbb
mov
jo
ja
jb
mov
rcll
cwtl
call
shll
mov
cmc
mov
adc
call
adc
adc
cmpsl
sbb
ret
dec
inc
mov
imul
subb
into
xchg
push
scas
testl
mov
inc
stc
mov
scas
mov
xchg
and
sub
push
jb
movsb
inc
or
pop
add
jns
popa
pop
enter
pop
or
out
or
popa
sbbl
pusha
les
dec
loop
mov
idivb
aam
adc
mov
cwtl
aam
add
pop
cmp
and
push
sub
mov
push
sub
lea
imul
xchg
fnstcw
cmp
sarl
dec
test
push
stos
lods
aad
cmpsl
dec
lds
jno
inc
les
sub
sub
jge
rcrl
dec
xchg
movsl
mov
cmc
mov
mov
jmp
les
mov
fmuls
lods
pop
popa
gs
jns
cmp
and
and
lods
push
test
cmp
mov
xchg
pop
aam
xor
popf
imul
std
push
jl
setne
ja
cs
lock
icebp
ljmp
push
cwtl
or
push
sub
and
addr16
rorl
lds
xlat
out
cli
sbb
jecxz
pusha
adc
gs
nop
cmp
jne
mov
pop
test
xor
push
in
or
xor
fsubrl
fsubl
insl
pop
inc
add
stos
stos
adc
cmpsl
push
out
setne
call
mov
aaa
pop
movsl
cmp
out
movsl
mov
mov
loopne
out
mov
jle
sub
and
mov
cli
filds
jge
xchg
jae
test
test
sub
lds
sub
jg
or
stos
xor
pop
mov
dec
loop
sub
sub
fstps
sar
cltd
int
xchg
or
push
leave
or
add
loop
sahf
mov
mov
cmp
out
sub
sub
adc
adc
stos
test
test
mov
lods
lods
dec
mov
aas
sbb
xchg
and
mov
mov
stc
sbb
out
mov
and
ss
mov
push
add
btr
repnz
xchg
cmp
test
dec
int3
pop
inc
xor
pop
push
xchg
xor
dec
inc
dec
rcl
or
testb
pop
das
cmc
dec
sahf
xlat
imul
aaa
cmp
xchg
neg
push
ds
xchg
repz
fstpt
sub
jns
jns
rorb
stc
lret
inc
mov
ds
mov
loop
push
daa
push
lret
or
mov
cmp
call
sti
daa
cld
sbb
ja
mov
push
or
imul
lcall
ja
mov
xor
and
or
nop
lods
les
insb
sub
ds
movsb
xor
push
sub
dec
shrb
lahf
cld
jle
mov
int3
xor
mov
mov
push
into
sub
xchg
popa
popf
loopne
push
in
arpl
jae
mov
iret
in
jge
cmpsb
and
mov
out
fistpl
mulb
or
int3
shll
cmp
jl
or
pop
daa
fs
mov
sbb
inc
das
sub
imul
and
inc
adc
je
cld
xchg
dec
cmp
push
rolb
lret
mov
mov
mov
mov
scas
shll
decb
in
mov
push
xor
lret
push
outsb
rcll
rep
xor
ror
popf
push
and
repz
sahf
or
mov
movsl
insb
scas
adc
andl
jb
inc
lret
outsb
mov
add
sbb
xor
loopne
xchg
inc
mov
ss
into
into
mov
popa
stc
push
sbb
mov
adc
push
test
dec
icebp
leave
xchg
add
mov
jge
idivb
lahf
fiadds
nop
fmuls
sbb
fucom
mov
mov
call
gs
adc
jge
les
lea
pop
andl
cli
bound
sbb
pusha
jae
mov
dec
add
and
and
adc
rcll
mov
xchg
ljmp
lcall
adc
ror
xchg
sbb
xor
cmp
jg
scas
jge
jbe
shr
mov
and
sahf
fisubs
jle
lcall
call
out
jp
cmp
jp
out
lahf
inc
pop
stc
nop
xor
sbb
cld
jl
inc
cmpl
test
jbe
aas
and
cmpl
loop
fcompl
mov
out
xchg
call
mov
into
xchg
icebp
movsb
mov
hlt
nop
xchg
rcrb
mov
push
test
aam
repz
cmp
cmpsb
pop
aam
pop
cwtl
push
std
jmp
sbbl
nop
dec
ja
sub
jmp
mov
mov
jns
insl
daa
in
jmp
imul
mov
dec
cmp
out
das
add
sti
pop
inc
dec
lcall
insb
int3
shrb
fidivl
jmp
ljmp
test
xchg
lods
dec
shrl
add
sti
movsl
pusha
cld
ret
vmread
test
cld
test
out
xor
pop
mov
mov
ficompl
add
loop
mov
test
pop
xor
add
xchg
mov
outsl
push
ja
call
sub
daa
icebp
push
ret
dec
shrb
add
dec
mov
in
lock
push
push
sbb
loope
and
push
mov
mov
stc
lods
adc
fldl
fst
gs
mull
cli
pop
jmp
fwait
rclb
jp
rolb
cmp
add
mov
ja
push
fidivs
ret
mov
sbb
arpl
pop
icebp
cmp
pop
stos
push
mov
cmpsb
sub
in
cmp
push
dec
int
jp
shl
jmp
das
sti
pop
sub
popf
mov
addl
test
xor
jge
jnp
xor
mov
mov
mov
mov
sub
cmc
xchg
dec
test
incl
xchg
dec
orb
ror
adc
call
ds
push
dec
jmp
lret
sub
mov
outsl
mov
mov
push
jb
ljmp
aam
push
repnz
mov
fisubs
fst
mov
rcrl
mov
mov
xchg
jg
jno
add
inc
les
hlt
and
jb
je
mov
stc
mov
dec
inc
adcb
adc
in
rcll
fnstsw
call
lock
pop
mov
mov
fistpll
imul
and
sub
aad
out
xchg
out
xchg
movsl
rol
addr16
adc
jb
cmpsb
jb
cmp
cmp
imul
subb
and
adc
adc
repnz
je
scas
std
dec
push
sbb
adc
addb
jo
test
sbb
cmp
paddq
imul
push
sbb
mov
cmpsl
and
cmp
mov
sarl
scas
mov
cmpsb
dec
jnp
add
jl
popa
inc
sti
mov
sub
mov
out
mov
insl
cld
dec
and
mov
xlat
push
inc
mov
sub
mov
lahf
dec
pop
pop
sub
or
sti
aaa
iret
and
call
sub
xchg
popa
xchg
mov
adc
dec
mov
in
fsubl
fcoms
mov
mov
int
inc
dec
inc
in
push
add
adc
lahf
cmp
aas
jl
les
subb
jns
xorl
push
jg
cwtl
jns
mov
scas
or
imul
lods
push
sbb
fs
lods
loopne
lods
sbb
xchg
xchg
inc
jae
in
add
sub
mov
mov
icebp
add
push
hlt
and
dec
xchg
in
cmp
mov
in
test
push
xlat
movsb
repz
scas
push
pop
add
ret
xorl
mov
sub
imull
call
fcoml
cli
xor
xor
jmp
mov
stos
jne
mov
xor
and
mul
pusha
dec
imul
test
and
push
sub
xor
bound
push
cmp
inc
dec
data16
jg
insl
popa
ret
call
adc
das
mov
jbe
std
data16
mov
jnp
dec
outsb
fildl
add
jno
add
mov
outsl
out
pop
neg
jge
int
push
jle
test
clc
push
pop
push
push
adc
fldt
inc
dec
adc
insb
pop
inc
pop
push
mov
push
das
mov
insl
dec
jbe
push
jo
js
cmp
pop
xchg
inc
outsl
popf
iret
jno
daa
sub
mov
leave
dec
sub
es
arpl
and
cmpb
mov
ficoms
ja
adc
or
pushf
mov
in
dec
cmp
dec
pop
jmp
insb
adc
enter
jo
and
xchg
pop
js
jne
push
sbb
jno
pusha
fsubs
cmpsb
in
or
nop
outsl
dec
sub
push
jg
sub
mov
sti
lods
jg
mov
or
dec
jecxz
sahf
in
ret
pop
enter
push
sbb
sub
add
adc
roll
cwtl
push
jb
cmp
jp
push
mov
cmp
icebp
adc
rolb
pop
mov
xchg
or
mov
ret
loope
inc
std
mov
jae
pop
pop
xchg
jecxz
movsb
hlt
stc
add
pop
stc
into
dec
out
adc
cmc
cmp
pushf
jg
sub
and
roll
pop
push
gs
and
rorl
xor
xor
add
mov
lea
mov
je
adc
addr16
or
outsl
cmpl
fsubrs
mov
sahf
in
push
push
mov
cmpsb
aas
xchg
in
dec
je
xor
xchg
mov
pop
pop
data16
ljmp
push
mov
inc
les
xchg
scas
mov
xor
inc
push
in
ficoms
push
sbb
aas
mov
cld
sahf
sub
adc
and
push
test
lcall
ljmp
nop
mov
insb
lret
in
mov
cmp
pop
dec
fisttpll
lods
cmp
lret
inc
xchg
xchg
push
mov
ret
pushf
gs
pushf
mov
push
add
inc
add
xchg
lods
and
jg
sbb
mov
hlt
ror
dec
and
push
das
add
test
push
push
insl
movsl
icebp
ss
cwtl
lahf
and
jo
jno
mov
cmp
mov
call
sti
lds
dec
movsl
mov
push
cmp
nop
stc
or
add
ret
jg
xchg
sub
and
lahf
xchg
jb
rclb
lcall
adc
stos
xchg
xor
arpl
push
test
mov
rcrb
out
arpl
addr16
dec
mov
inc
fisubl
add
mov
ficompl
imul
loope
cmp
out
xchg
jmp
mov
gs
fwait
aad
push
xlat
test
jne
lea
out
out
xchg
jecxz
movsl
sub
int3
das
xchg
int
in
cwtl
stos
aas
scas
fcomp
mov
mov
dec
push
or
fdivl
or
frstor
aas
cmpsw
mov
push
popf
push
push
imul
loop
xor
xchg
addr16
lret
pop
movsb
repnz
push
aas
andl
or
xor
nop
hlt
inc
hlt
das
lcall
aaa
or
imul
mov
push
jge
testl
aad
adc
xchg
xor
gs
and
pop
shll
pop
lock
mov
pop
push
push
in
mov
mov
and
jecxz
out
cld
repnz
and
lods
nop
jnp
scas
jmp
popf
pop
lods
fimuls
lock
mov
xor
push
xor
repz
shll
je
and
std
in
pop
add
xor
mov
shlb
push
cmp
in
inc
dec
out
call
jae
jp
mov
xor
outsw
arpl
xchg
cld
sub
shl
xchg
ret
rcl
jle
xchg
insl
push
or
shrb
outsl
cs
leave
test
lock
jns
cwtl
jo
je
pop
inc
dec
pop
jo
aas
clc
test
lahf
out
and
sbb
cld
iret
fidivl
aam
ret
dec
or
int3
push
insb
add
fisubl
inc
sub
xchg
cmc
fs
inc
or
or
jg
mov
jecxz
arpl
push
sub
pushf
cmp
fldt
mov
addr16
out
mov
sbb
mov
popf
es
push
in
shrb
push
cmp
xor
dec
xchg
fdivs
inc
or
jns
xchg
cld
pop
jb
fcoml
dec
dec
ljmp
shl
fisubl
add
cmp
loope
stos
push
mov
mov
daa
push
icebp
fildl
xchg
mov
pop
divb
xor
xchg
pop
dec
inc
adcl
pop
mov
mov
addr16
jb
push
pop
and
outsb
pop
gs
ljmp
dec
xor
adc
pop
pop
negl
in
pop
sbb
xchg
iret
jb
std
add
add
push
stc
jmp
xor
lds
mov
xlat
mov
daa
das
loop
or
sub
ljmp
stos
fcmovnb
cli
jno
cld
fisttpl
pop
call
mov
out
jno
mov
sbb
xchg
in
lret
pop
lods
mov
arpl
dec
mov
jg
je
aam
adc
bnd
in
push
sbb
rcr
adc
int
add
inc
mov
loopne
cmc
pusha
xchg
push
test
int
dec
sbb
mov
xor
pop
fiaddl
lcall
aas
sub
stc
fndisi(8087
out
cs
mov
outsl
sahf
bound
mov
xchg
aad
loopne
pop
jmp
push
std
out
push
jg
push
pushf
push
jo
sub
inc
push
mov
mov
sahf
xchg
lret
insl
mov
fstpl
mov
fistps
cltd
popa
in
mov
fwait
out
sti
lea
inc
mov
xchg
out
rcrb
ret
mov
rorb
iret
movsl
icebp
jbe
loop
ljmp
addb
stc
xor
cltd
mov
mov
sbb
pop
xor
cli
sub
outsb
sub
push
int3
push
es
jns
loop
fbld
jg
inc
fdivs
repz
nop
mov
push
xor
mul
out
das
lret
mov
sbb
jnp
jle
add
push
push
and
push
popf
ss
xlat
mov
sbb
dec
lret
sti
adc
xor
cltd
inc
mov
jne
add
mov
pop
leave
add
or
adc
adc
out
stc
cmpsb
out
jg
mov
mov
aam
cmpsl
sbb
jge
in
iret
xor
xchg
out
mov
cmpsb
hlt
shlb
loop
add
xchg
inc
mov
cmp
mov
adc
dec
jbe
mov
pushf
movsb
shll
sbbl
out
stos
leave
adcl
mov
mov
icebp
lahf
cmp
mov
pop
pop
mov
pop
xor
popa
mov
sar
mov
dec
mov
xor
and
dec
ljmp
arpl
push
pop
dec
fchs
mov
inc
sbb
fwait
repnz
arpl
mov
xor
jne
fcoms
sbb
push
idiv
lock
push
daa
mov
and
clc
xor
addl
sub
leave
sbb
pop
popa
xor
mov
inc
jmp
leave
adc
in
mov
lods
out
add
mov
mov
pop
int
movsl
push
add
cmp
test
mov
mov
push
mov
pop
mov
and
cmp
fdivr
inc
stos
sahf
scas
jge
cli
test
mov
add
cmp
insl
cmc
shll
adc
int3
push
imul
dec
xor
mov
mov
aas
shrl
ss
jl
sub
pop
addl
aas
jnp
and
pusha
cmp
mov
dec
stc
mov
lds
mov
pushf
insb
dec
and
jo
push
cmp
pop
dec
sbb
enter
sub
pushf
sbb
dec
clc
push
cmp
dec
rorb
ficoms
jg
sbb
subb
sub
test
es
jne
ret
and
cmc
or
daa
popf
mov
xchg
test
mov
fwait
and
adc
push
aad
mov
aaa
call
inc
fcmovne
cmc
push
jmp
lea
sbb
hlt
jno
cmp
test
adc
push
inc
icebp
lret
xchg
and
inc
in
cmp
mov
pop
test
push
andl
add
cmp
jbe
mov
mov
cwtl
out
sbb
sbb
xchg
add
movsl
iret
mov
mov
jns
js
rorl
dec
sub
push
arpl
int
xchg
stos
push
cmp
mov
mov
mov
int3
scas
dec
fadds
lods
mov
cmp
mov
mov
aas
cmp
inc
pop
scas
sub
loop
test
out
in
out
imul
lret
add
or
push
push
xchg
jno
dec
sub
pop
pop
stc
pop
inc
mov
xor
and
mov
pop
push
sbbb
cmpsl
inc
cld
pop
mov
negb
push
or
imul
sbb
jo
sbb
push
inc
insl
xchg
push
outsl
mov
and
js
lcall
in
addl
pop
stos
cmp
sahf
and
aad
inc
xchg
and
fldl
push
or
adc
inc
in
add
idiv
out
add
enter
cmp
jbe
cld
repz
cmpl
mov
rolb
push
push
testb
cmp
jo
dec
iret
cmpsb
lahf
push
push
pop
push
notb
xor
out
mov
push
add
and
or
mov
xor
inc
lret
sub
xor
sti
shll
repz
lcall
add
ljmp
repnz
lods
in
and
add
xor
xrelease
loope
sbb
pushl
adc
shrb
sbb
sti
mov
xchg
lret
xchg
push
into
das
pop
out
stos
hlt
mov
mulb
ss
xchg
and
cmp
jno
jno
jle
pop
mov
addr16
cmp
fs
movsb
jb
stc
adc
xlat
in
adc
mov
jp
sbb
rcll
repnz
adc
jl
repz
stc
cmp
shl
lock
enter
movsb
sub
movsl
mulb
in
int
mov
push
xor
lea
leave
push
push
push
sbb
xchg
lock
dec
dec
test
lods
jp
xchg
into
and
push
push
es
jecxz
push
lods
adc
daa
cmc
cmp
dec
dec
imul
or
add
inc
insl
adc
add
loope
pushf
xchg
mov
push
test
in
int
ret
xor
imul
imul
pop
cmpsl
cmpsb
push
xor
aas
or
dec
cs
push
fcoml
test
stc
dec
movsl
cwtl
sahf
dec
rorb
xchg
insl
rolb
mov
and
cmp
jg
add
cmc
aas
or
insb
fidivrl
xchg
ss
mov
mov
add
insb
push
jb
sub
cld
pop
in
xchg
cld
lea
sti
pop
ret
xchg
data16
call
lret
sbb
mov
int
orl
lcall
rolb
movsl
out
arpl
xor
fwait
xchg
cmpsl
mov
dec
cmp
ss
cmp
sub
data16
shrb
mov
in
jns
mov
and
rcrb
lcall
lods
inc
add
int3
jns
mov
or
mov
sub
in
sbb
push
mov
lock
bound
inc
ret
sbb
stos
cmpsl
xor
lods
rcrb
inc
insb
test
push
and
js
pop
fbstp
dec
mov
test
arpl
sbbb
jo
mov
xchg
adc
aas
pushf
and
cmp
arpl
stos
inc
subb
adc
sub
cld
add
sbb
int3
sbb
repnz
push
js
dec
rcrb
sbb
call
mov
repz
scas
mov
dec
xor
dec
pop
fistpll
or
mov
out
or
pop
sbb
mov
mov
adc
mov
mov
xlat
pop
push
mov
lret
outsl
aam
sbb
das
icebp
push
in
sub
mov
outsl
push
push
inc
or
rcrb
inc
adc
test
or
adc
xor
insl
mov
and
jp
fldt
scas
xor
mov
jp
daa
test
or
adc
cmp
gs
push
in
popa
xchg
jno
std
push
xor
cltd
xor
push
std
dec
call
das
in
add
lret
addr16
or
pmulhuw
fnstenv
cmp
jns
or
mov
or
pop
test
sbb
jns
shlb
or
sbb
sub
inc
cmp
xchg
in
mov
sbb
nop
adc
pop
mov
sti
mov
aam
shlb
fnstcw
adc
mov
lods
push
jp
and
adc
push
pop
xchg
jnp
push
ret
xor
inc
out
jg
aam
mov
stc
sahf
dec
popa
insl
shrb
repz
sbb
add
sub
pop
lods
nop
nop
cmpsl
mov
cmpsl
test
xchg
mov
sub
cmp
adc
enter
mov
gs
nop
lods
fsubl
out
shl
xlat
sbb
adc
aam
icebp
and
nop
into
sbb
les
add
push
dec
lds
lds
mov
cmp
and
mov
ljmp
out
xchg
loop
imul
adc
or
push
shll
pop
inc
daa
adc
ret
and
insl
xchg
jae
pop
mov
sbb
loopne
pop
aaa
xor
popf
or
movsb
cmp
add
lods
and
jmp
jge
pop
adc
test
int3
out
hlt
adc
fs
aaa
push
mov
dec
mov
shrl
ja
cld
je
pop
mov
dec
out
subl
push
sbb
fisttpl
cmpsb
inc
mov
gs
mov
or
mov
loope
mov
mov
mov
push
inc
es
aad
jae
nop
dec
js
pop
dec
adc
xchg
xchg
or
cmpsl
scas
cmp
gs
sub
adc
rcll
loop
clc
jg
lahf
xor
jecxz
enter
xchg
ret
dec
shrl
or
ret
and
test
jnp
iret
out
pop
repnz
mov
lcall
cmp
leave
out
push
xchg
cmpsl
lret
sub
lods
scas
push
les
adc
sbb
mov
push
iret
lea
test
imul
stc
fsts
pop
and
xor
repz
andb
jnp
jns
mov
dec
and
mov
and
xor
in
jl
dec
jo
jo
bound
sub
xchg
sub
mov
aad
push
cwtl
xchg
sbb
in
xor
cwtl
ljmp
pop
cmp
add
xor
leave
pop
lods
jg
inc
sbb
out
in
lea
addr16
jmp
imul
xchg
aaa
lds
cs
movsl
scas
cmp
push
ficomps
test
mov
jg
cltd
xor
mov
pop
push
sahf
insb
mov
jns
stc
icebp
dec
and
stos
or
xchg
pop
call
push
mov
and
xor
push
mov
cli
outsb
cmc
add
jle
jp
jbe
cmc
out
push
repnz
adc
cmp
ljmp
inc
add
sub
js
inc
jle
shll
enter
and
xchg
mov
xor
mov
mov
mov
mov
push
pushf
notl
sub
movsl
pop
loop
rclb
ja
jle
push
and
daa
lcall
test
sahf
ds
jb
or
icebp
imul
and
rorb
stc
xchg
dec
sbb
dec
push
mov
std
lcall
push
xor
decl
mov
or
sbb
xchg
and
popf
mov
add
xor
out
cmpsl
int3
dec
test
insl
call
cmp
pop
repnz
rorb
and
jg
adc
pop
push
dec
cmp
fbld
les
je
leave
cs
gs
daa
fistl
adc
ret
mov
push
cld
jne
ror
pushf
jnp
cmp
shl
jae
mov
hlt
lret
xchg
icebp
aas
in
call
inc
or
aad
sahf
inc
fimuls
outsl
popl
inc
jle
push
inc
adc
repnz
dec
adc
out
aad
mov
cmp
lods
adc
sub
test
repz
adc
fidivl
cwtl
daa
repz
mov
das
fildl
mov
out
imul
fcompl
push
and
jb
and
repnz
fildll
sub
push
lea
or
fwait
xchg
add
jns
or
in
fs
mov
gs
pop
aaa
mov
or
mov
xor
out
sub
stos
push
fisubrl
cmp
in
arpl
inc
daa
cwtl
add
pop
sub
jg
adc
cmp
sbb
mov
xchg
mov
movsl
outsb
cwtl
xchg
and
out
je
nop
arpl
jl
icebp
mov
into
mov
rcrb
and
cld
sbb
repz
mov
sub
cmp
jmp
stos
mov
shl
xchg
cld
popa
int3
loop
idivl
loopne
mov
hlt
in
jle
in
out
ret
aad
add
inc
mov
pushf
adc
in
jge
mov
ffreep
cmp
outsb
out
loop
push
mov
sbbl
lcall
jbe
push
mov
adc
inc
scas
sti
je
sbb
dec
xlat
xor
fmuls
insl
xchg
int3
fucomip
cmp
dec
push
enter
jne
arpl
cmp
and
push
popl
sub
scas
pop
or
mov
inc
jb
pop
add
cmp
cmp
test
fsubs
insb
sbb
imul
ret
es
mov
push
push
loop
call
scas
jno
jg
mov
fisubrs
aam
movsb
nop
push
enter
or
xchg
inc
dec
mov
and
xchg
loope
cmp
int
mov
sbb
jge
cmp
outsb
fcompl
lods
pop
int3
mov
test
into
add
lcall
das
ficomps
repnz
gs
add
or
ds
fisttps
jge
and
stos
push
cmp
xchg
mov
and
clc
sbb
lahf
rclb
movsl
mov
call
xchg
data16
dec
cmpsb
push
sub
mov
cmp
cmp
aas
js
pop
cmp
cmp
test
adc
cs
dec
pop
lock
adc
lahf
mov
mov
fiaddl
nop
fmuls
xchg
pusha
cmp
cmp
adc
push
xchg
jae
lret
add
popl
sbb
out
insb
int3
xchg
or
mov
pop
cs
sbb
sub
push
jle
add
pop
adc
push
ja
out
in
les
aad
jl
xor
dec
pop
jo
cmc
test
lahf
movsb
lahf
push
into
pop
jge
ja
dec
popa
pop
iret
cmp
js
mov
movl
adc
add
adc
xchg
push
cltd
xor
xchg
xchg
ror
jbe
out
adc
jmp
cltd
test
in
jge
push
and
fld
jecxz
adc
inc
adcb
cmpsb
loope
outsl
int
das
bnd
ljmp
and
fscale
imul
sbb
nop
jbe
lea
rclb
test
cmp
mov
mov
adc
fnsave
add
mov
stc
mov
faddp
cmp
cmp
test
xchg
xchg
xchg
aad
and
adc
lods
jg
push
and
cmp
mov
mov
jmp
xchg
gs
dec
mov
loopne
movl
pop
and
and
test
or
sahf
mov
sub
or
test
push
outsl
leave
imul
sub
lahf
and
outsl
pop
mov
in
pushf
inc
dec
jnp
jnp
enter
repz
cmp
cmp
int
push
loope
dec
xchg
push
adc
lret
idivl
sbb
lahf
std
inc
lea
insl
gs
push
das
mov
bnd
rorl
fiaddl
dec
dec
call
mov
outsb
fsubl
notl
fcmovnbe
jecxz
xor
xor
ds
loopne
xor
add
rcll
stc
and
inc
mov
test
mov
or
in
inc
push
mov
cmpl
cmpsl
movsb
fsubr
stos
jle
jno
jl
inc
fistl
fsub
jb
sub
xchg
and
stos
scas
sbb
aaa
xchg
or
lcall
xchg
mov
xchg
inc
cmpsb
or
ljmp
ror
ret
les
rorl
jge
lods
shlb
out
movsl
and
lock
cmp
shl
cmc
ss
add
pop
adc
stos
add
out
jg
xchg
test
fsubs
adc
fcmovbe
movsb
mov
add
inc
not
mov
mov
adc
cmp
cmpsb
scas
stc
iret
jecxz
call
xor
or
xor
add
xor
in
jns
cwtl
cltd
jmp
mov
inc
push
or
sbb
mov
es
out
mov
sub
mov
cltd
fwait
xchg
movsl
clc
sub
xor
fcmovb
mov
ret
and
sub
pop
push
inc
jae
pop
or
inc
jp
sahf
jg
mov
int
fwait
pop
mov
clc
xchg
loope
aas
jnp
xchg
pop
mov
into
int3
daa
call
ljmp
ja
out
add
xchg
cli
jnp
leave
inc
out
lret
mov
gs
or
loopne
scas
xor
jb
xchg
dec
outsb
pop
jns
xor
mov
push
loopne
inc
fimuls
imulb
sbbl
inc
jle
enter
push
sub
push
and
adc
adc
neg
scas
sbb
jecxz
pop
icebp
jmp
ds
sbb
pop
mov
flds
ljmp
push
lret
in
loopne
arpl
cmp
inc
inc
adc
movsl
popa
dec
fwait
mov
out
sbb
inc
add
mov
fs
and
ss
dec
jecxz
test
adc
mov
inc
lods
rorl
negl
insb
dec
push
inc
add
into
movb
dec
and
aad
enter
cmp
mov
stos
movups
rol
pop
dec
jmp
mov
add
js
or
ja
out
fs
adc
pushfw
std
pusha
mov
cmp
push
jne
shll
clc
and
inc
sub
sub
or
pop
fcmovne
push
pop
cmp
jle
lods
dec
or
inc
aam
jo
mov
popf
in
sti
jne
xor
add
icebp
aad
push
ljmp
xchg
sbb
sub
sub
sarb
and
lahf
imul
sbb
inc
out
cld
les
mov
das
enter
dec
mov
mov
mov
gs
sub
repz
mov
xorb
mov
jne
lret
pop
je
repnz
imul
shll
bound
enter
xor
int
rep
or
iret
in
lahf
push
mov
adc
cmp
call
xor
in
popa
xchg
dec
ds
out
and
xchg
or
push
pop
addb
and
ret
mov
dec
fmulp
hlt
lahf
out
imulb
sub
ret
adc
xchg
cmp
mov
push
push
sub
adc
xchg
out
mov
mov
dec
das
hlt
out
or
popf
fbstp
movlhps
mov
sub
mov
push
xchg
stos
fistpll
fwait
pop
cltd
stc
push
pop
cld
sti
andb
int
cwtl
loop
mov
lret
cmc
jmp
xlat
insb
adc
movsl
push
adc
or
idivb
lret
mulb
stos
pop
nop
cmpsb
add
adc
cwtl
ficoml
stos
jo
loopne
add
xlat
pusha
test
xor
jp
mov
fs
rorl
pop
pop
mov
mov
cmpsl
xor
test
addr16
lds
movsl
mov
xchg
xor
rolb
push
pushf
dec
mov
mov
and
pop
cmp
push
roll
lds
jmp
test
mov
loopne
mov
pop
ret
adcl
test
outsl
arpl
cli
imul
movsb
sar
adc
sbb
rcll
add
cmp
std
jnp
xchg
mov
mov
rcrb
notb
xchg
cmp
icebp
lret
les
pop
adc
or
cld
mov
sarl
pushl
sub
push
pop
mov
in
imul
mov
aad
pop
out
cmp
sub
imul
adc
xchg
scas
stc
repz
stc
and
xchg
push
cwtl
mov
test
sarb
xchg
cli
xor
les
clc
lods
mov
orb
cmp
ret
aaa
push
and
xor
popa
pop
pop
data16
ljmp
inc
fcoml
or
dec
jle
xchg
mov
add
outsl
mov
push
add
outsl
imul
mov
test
push
lods
push
xor
iret
daa
loop
call
cmp
aad
lret
cmp
xchg
cmp
or
es
clc
adc
cmpsl
cmp
test
push
jns
add
sub
cmpsl
das
pop
aam
inc
jecxz
dec
je
fcmovnu
in
dec
jo
push
test
jb
jge
xor
test
fnstenv
or
in
aad
insb
std
out
pop
loope
or
cmpsl
inc
out
jle
int
or
add
lods
add
mov
leave
in
pop
stos
gs
mov
mov
xor
mov
mov
jmp
inc
leave
stos
out
cmp
decl
sub
jnp
push
jno
dec
cld
and
cmc
fadd
and
gs
xor
lock
sbb
ds
fsub
inc
dec
mov
sti
or
bound
sub
jle
scas
sbb
fildll
xchg
push
inc
mov
popa
ja
les
mov
inc
fcoms
jne
in
outsb
xchg
push
push
scas
mov
xchg
pop
jno
ficoml
test
test
sbb
test
add
fwait
nop
stos
aam
icebp
stos
lds
stos
shrb
shlb
es
xchg
scas
pusha
aam
mov
mov
cltd
sbb
repnz
push
outsb
or
gs
add
mov
pop
mov
insb
or
dec
addr16
xor
movb
int
sub
cld
das
je
clc
shlb
jno
or
stos
jecxz
xchg
aas
jge
add
scas
ja
iret
or
movsb
jne
xchg
test
insb
test
decb
cltd
daa
repnz
jbe
xchg
push
jae
cmp
jp
stos
jmp
rcrl
test
dec
pushl
push
std
bound
inc
jno
and
mov
push
les
add
dec
scas
popl
jecxz
enter
jecxz
js
adc
add
out
lahf
jnp
fdivrp
stos
push
outsb
lahf
cmp
and
xor
xchg
jbe
nop
cltd
dec
jns
stos
clc
mov
inc
test
lret
cmp
mov
rcll
push
sub
outsl
and
sahf
inc
outsl
movsl
andl
sbb
dec
push
outsl
repz
push
adc
fs
js
xchg
jo
mov
and
in
xchg
std
jecxz
js
add
mov
push
push
xorb
aas
add
push
mov
pop
jbe
or
inc
lods
cmp
fs
jne
popf
mov
movsl
dec
repz
mov
out
lret
pop
mov
cli
dec
lods
cmp
mov
loope
in
cmp
jle
adc
dec
sbbl
imul
nop
and
or
pushf
pop
movsb
sbb
sub
pop
adc
scas
or
mov
xor
or
es
mov
or
jg
xchg
std
clc
loop
xchg
loop
cmp
fbld
lahf
inc
inc
mov
pop
enter
ds
xlat
rorb
mov
bound
sbb
pop
jg
repz
cltd
dec
sub
push
into
xchg
or
pop
popf
andb
push
inc
and
mov
add
dec
xlat
shlb
rorl
mov
sub
jmp
fwait
cwtl
cld
mov
cld
pop
sbb
mov
jecxz
xlat
xor
add
adc
pop
iretw
ljmp
push
ljmp
jo
mov
sbb
add
inc
insb
sbb
in
lcall
inc
or
and
cmp
pop
iret
lods
daa
leave
data16
xor
test
in
mov
ss
fcmovu
int
movsl
shl
pop
mov
test
xchg
outsl
or
loope
arpl
sbb
popf
add
push
cmp
xrelease
cmp
popf
jns
call
add
repnz
sbb
inc
mov
mov
add
adc
xchg
out
xor
adc
mov
mov
jne
aas
xchg
and
scas
pop
outsb
push
mov
xchg
lods
push
dec
pop
push
jmp
and
inc
insb
pop
fildl
shlb
into
std
or
mov
pushf
xor
jmp
pop
sbb
pop
cmc
dec
mov
loop
int
sarl
out
std
in
push
iret
lods
js
ja
pop
mov
lds
nop
sub
pushf
dec
out
dec
js
and
mov
jge
not
out
sub
push
pushf
ficoms
pop
add
mov
movsl
call
mov
cwtl
sub
mov
add
sbb
dec
and
or
hlt
cmp
lret
bound
into
ljmp
sub
mov
rorl
sbb
movhps
call
sbb
push
xchg
sub
or
push
pop
imul
sub
mov
or
jno
jmp
sbb
mov
aam
mov
insb
mov
sbb
push
data16
inc
mov
push
mov
test
jae
aam
mov
xchg
mov
xor
and
dec
les
js
xchg
sbb
fiadds
rcl
add
xchg
loop
adc
mov
popa
inc
out
je
lcall
bound
pop
les
jbe
pusha
ss
add
loopne
test
cmpsb
inc
adc
pushf
adc
mov
xchg
lds
in
jecxz
pop
sub
shll
sub
test
mov
cmp
and
xchg
add
or
jmp
mov
push
int3
stc
fisttps
cmp
stc
les
mov
dec
xorb
mov
mov
add
or
xchg
pop
pop
push
mov
sti
xchg
mov
seto
hlt
ja
fidivrs
in
out
add
lcall
mov
shll
inc
popa
dec
mov
add
mov
cltd
adc
vmovups
push
xchg
xchg
out
scas
xor
daa
test
sub
scas
push
dec
and
fwait
lea
fwait
sub
jl
mov
mov
mov
inc
xchg
movsl
je
jno
cmpsl
mov
sub
jnp
lahf
sub
and
cmp
repnz
sub
leave
imulb
movsb
xchg
push
fnstenv
aas
pop
fsubrs
cmp
xor
loop
sub
test
jnp
imul
ret
es
push
cmpsl
mov
ja
xor
mov
movsl
loopne
or
adc
inc
shlb
xchg
test
push
push
aaa
rorl
insl
stc
and
inc
cmc
scas
out
mov
js
jo
sub
xlat
xlat
leave
es
push
mov
ds
bswap
push
std
outsb
jg
shrl
push
jp
lret
movsl
xlat
dec
cmp
push
mov
push
cltd
pushf
in
and
mov
adc
cmc
es
ret
cwtl
lahf
mov
sub
fbld
sub
jecxz
dec
fwait
push
enter
insb
adc
xchg
out
cltd
mov
mov
xchg
data16
out
and
dec
pushf
mov
dec
xchg
or
inc
gs
jp
mov
mov
sbb
pop
push
hlt
ret
in
aad
cltd
pushf
jbe
jmp
int3
fimuls
cli
sahf
sub
and
sub
hlt
xor
icebp
fstps
pop
dec
push
mov
out
idivb
adc
pop
out
pusha
leave
movsl
test
movl
fistpl
or
push
mov
insb
dec
daa
das
rclb
clc
xchg
jg
fs
inc
outsb
loopne
or
ljmp
or
popf
inc
pop
notl
dec
mov
shlb
movsb
into
rcr
pop
xchg
sbb
mov
mov
pop
jne
int
out
aaa
dec
js
mov
inc
jo
jae
fwait
adc
pop
es
in
loopne
or
rcrl
repz
inc
pop
out
adc
ss
rcrl
mov
sub
inc
jle
pop
push
in
ljmp
insb
xchg
ret
cs
pop
mov
into
adc
adc
es
daa
divb
dec
fs
jne
lods
add
pop
mov
fwait
mov
dec
xor
pop
sbb
mov
dec
inc
cmc
pop
and
mov
mov
test
jb
fsts
pop
xchg
cmpl
and
dec
mov
lock
mov
sub
pop
dec
loope
fwait
xor
dec
shrl
add
sub
pop
pop
inc
cmpb
adc
out
push
lret
mov
jno
or
inc
in
inc
bound
xchg
ret
xchg
pop
push
adc
sbb
sub
mov
sbb
xchg
dec
adc
push
mov
dec
or
imul
push
jns
inc
outsl
in
pop
loop
mov
fildll
mov
or
inc
gs
sub
or
mov
repnz
loope
jg
jle
push
dec
and
xor
mov
dec
xor
mov
xchg
mov
cmp
into
mov
cltd
out
adc
inc
sbb
lret
rcrb
gs
or
push
mov
icebp
dec
cmp
or
pushf
push
rorb
pushf
mov
imulb
mov
test
cmp
and
sub
ss
adcb
inc
test
and
in
call
loop
dec
xchg
loopne
nop
xor
dec
pop
lahf
xchg
adc
fwait
ljmp
ret
rcl
xchg
inc
mov
movsb
ds
mov
adcb
jg
cmc
cmp
es
add
cltd
xchg
or
xchg
fidivl
pop
mov
cltd
jmp
jge
and
cmp
daa
push
push
xchg
enter
pushf
jg
stos
cs
mov
nop
xlat
jmp
mov
mov
hlt
mov
lods
or
add
jg
test
imul
mull
sub
adc
and
jmp
ljmp
scas
or
jl
push
lret
popf
outsl
movl
sti
rcrl
movsb
popa
sarl
push
add
push
aaa
pop
xchg
in
mov
or
incb
mov
lret
xchg
cmp
insb
and
xchg
adc
fildll
lods
add
push
xchg
dec
outsb
orb
fnstsw
sti
lods
popf
inc
mov
or
daa
mov
cltd
cmp
inc
mov
aas
mov
mov
insl
rorl
pushf
push
mov
jl
insb
mov
data16
pop
mov
mov
addl
jne
mov
jg
mov
sub
sub
lret
sub
adc
data16
dec
inc
cli
sbb
or
clc
push
jb
or
cmc
lock
aad
push
js
loop
mov
or
fiaddl
insl
int
sbb
sti
enter
pop
mov
or
insb
sahf
dec
cmc
and
mov
jmp
cli
adc
sub
fs
in
scas
xchg
fs
mov
stos
test
or
into
mov
out
mov
xlat
ja
pop
hlt
add
imul
inc
loope
ljmp
cmpl
push
push
xor
fdiv
add
or
cltd
push
out
mov
cwtl
and
jnp
sub
shlb
enter
lahf
mov
cmpsl
dec
or
dec
dec
shrl
incb
push
and
pop
mov
pop
pop
mov
adc
or
fmull
cmp
cmpsb
imul
cmp
mov
xchg
mov
xor
js
cmp
fnstenv
mov
fdivr
xchg
pop
push
dec
les
or
outsb
repz
pop
jo
aaa
xchg
movb
sarl
lods
sti
sub
or
mov
gs
shll
movsb
fistl
cmp
outsl
sub
jge
fsub
test
or
adcl
fs
mov
mov
arpl
loop
movsb
fcomip
loope
out
mov
sti
fcmovnu
sahf
dec
movsl
lahf
ljmp
lods
fbstp
mov
push
cmp
in
in
jmp
cmc
test
data16
pop
data16
test
adc
dec
rorb
mov
lock
out
sub
outsl
inc
adc
bound
insw
jbe
dec
mov
sbb
dec
dec
ret
mov
je
mov
ficoms
adcb
insb
pop
cwtl
imul
outsl
or
cmp
cmp
mov
ret
cmpsl
js
lods
lock
movsl
imull
mov
xor
xchg
xor
ljmp
inc
hlt
sub
negl
subb
mov
clc
popa
lret
mov
xchg
add
mov
pop
popf
xlat
mov
sbb
cltd
lret
roll
push
movsl
xchg
pop
subb
lds
push
push
jb
stc
dec
jmp
add
dec
jg
mov
jecxz
jnp
xchg
sarl
not
jns
mov
jecxz
mov
outsb
cmp
inc
cmc
pop
movsb
orb
dec
push
sti
inc
lods
movsb
iret
pop
std
es
xor
xchg
bound
inc
inc
xor
out
pop
adc
sbb
insb
into
and
push
dec
addr16
add
cmp
xchg
fcoms
nop
push
push
ret
mov
inc
adc
adc
cmp
out
jno
pushf
or
pop
xor
clc
lret
nop
cmp
mov
xor
cltd
cmp
aas
movsb
in
movsl
push
push
stos
insl
lret
pop
cmc
push
inc
jl
mov
pop
jg
enter
hlt
stos
fnsave
repnz
inc
push
outsb
ja
mov
add
xor
and
mov
rorl
push
mov
movsl
mov
jb
dec
das
loop
ficomps
mov
mov
sub
test
sbb
mov
fnstcw
adc
and
sub
push
pop
stc
push
cmc
xor
cli
xor
sarl
div
add
fneni(8087
lock
test
and
xchg
cli
or
mull
xchg
loopne
popa
xchg
pusha
xchg
imul
xchg
bound
and
pop
icebp
in
pop
push
jb
nop
pop
pop
mov
inc
jg
mov
pop
out
int
mov
ja
push
popa
inc
jb
push
dec
jle
fscale
push
mov
rcrl
arpl
inc
pop
cmp
mulb
mov
xor
decb
xchg
or
xor
inc
adc
inc
shlb
fnsave
jge
xchg
gs
std
cld
lods
dec
paddd
rcll
and
pusha
cmp
repnz
frstor
lahf
sti
or
popf
into
dec
stos
push
movsl
and
adc
insl
out
neg
arpl
sub
sbb
cmp
jo
pusha
loopne
jbe
pop
push
or
xchg
ja
aas
dec
inc
enter
xchg
fldlg2
daa
test
aam
movb
mov
pop
jne
jns
aad
mov
rclb
pusha
shlb
dec
aaa
fistl
mov
mov
dec
shr
dec
sbb
lret
lds
ds
popf
ds
or
mov
adc
pop
push
hlt
dec
je
insl
jns
jg
xor
or
adc
decb
nop
icebp
arpl
jmp
jge
sti
lods
or
xchg
lcall
test
scas
push
test
pop
cltd
mov
aas
jno
sub
jecxz
sub
inc
daa
int
mov
mov
mov
ret
sub
and
sarl
mov
dec
clc
jge
lret
in
cld
xchg
dec
jmp
ds
push
mov
cmpsb
inc
mov
stos
mov
bound
cmp
inc
pop
and
and
xchg
inc
mov
cmp
loop
andl
arpl
mov
jge
pop
pop
lds
jbe
add
xor
inc
adc
insl
hlt
jp
inc
push
out
ret
int
addl
test
loope
inc
je
mov
or
rolb
fisttpl
sbb
repz
or
mov
jle
mov
mov
xchg
movsl
ljmp
xor
inc
repnz
xor
sub
ret
outsb
mov
sub
xor
insb
daa
outsl
pop
lcall
mov
int3
adc
sub
fwait
test
sbb
push
ljmp
cli
mov
sbb
adc
in
movsb
mov
xchg
cltd
mov
push
push
pusha
mov
jae
rcrl
lods
and
loop
sbb
xor
adc
iret
cmp
add
xlat
fdivr
rol
jge
mov
movl
aad
stos
cmp
pop
int3
jno
scas
xchg
mov
js
mov
jmp
fsts
dec
xor
push
push
fidivrs
ljmp
lret
jmp
call
subb
push
inc
pushf
push
dec
sbb
cmpsb
decb
into
popf
xor
push
add
mov
testb
ret
dec
ss
mov
add
pop
adc
mov
or
mov
loopne
mov
push
sub
mov
lds
stc
mov
xchg
mov
loope
outsl
iret
lcall
jnp
stos
jge
dec
test
mov
movsl
sub
inc
mov
jnp
push
lret
jne
insb
arpl
xchg
mov
sub
mov
pop
sbb
adc
xchg
out
jl
ja
sahf
leave
mov
sbb
lds
notb
imul
adc
dec
adc
fisttps
in
pop
cmpsl
pop
xchg
and
std
les
loope
arpl
cmpsb
xchg
pop
cld
push
outsl
lods
or
jae
mov
pop
aad
into
pop
lods
sbb
jmp
inc
dec
cmp
sbb
xchg
dec
hlt
hlt
mov
fisubl
stos
and
jns
js
jl
adc
push
push
test
stc
cltd
aam
xchg
mov
mov
mov
lcall
push
push
mov
pop
imul
in
inc
jmp
dec
das
les
xchg
and
jmp
fs
imul
scas
sbbl
jge
mov
jbe
test
outsl
fstps
or
inc
inc
push
pop
ja
cmp
je
lret
jns
lds
sbb
mov
clc
jp
dec
jb
mov
add
mov
push
cmpsl
sub
jle
sub
inc
mov
mov
add
mov
inc
cmc
sti
adc
mov
inc
pop
add
out
in
subl
xchg
sub
add
xchg
sbb
push
jo
ljmp
inc
ret
inc
setg
testl
enter
outsl
cmp
adc
xor
cmp
mov
mov
mov
gs
push
adc
or
lds
out
dec
cmp
mov
fcmovb
mov
pop
les
adc
push
mov
xor
fcoms
pushf
cmc
aad
test
fsubl
mov
pop
adc
inc
stos
or
jecxz
add
imul
push
shr
scas
and
fwait
ds
out
cmpb
sub
adc
or
cwtl
sbb
andb
fdivrl
mov
mov
test
call
pop
pop
or
adc
aam
cs
push
leave
xor
in
idiv
scas
mov
push
scas
adc
je
out
sbb
sub
inc
lret
scas
xchg
or
inc
and
or
das
outsl
out
repnz
test
and
fdivrs
adc
repnz
lods
stos
sbb
les
stos
add
pop
pushf
ficompl
into
int3
xor
ljmp
xor
dec
mov
int3
push
dec
das
ret
cmc
pop
sbb
mov
xchg
int
jp
ss
movsl
loope
lock
fstpl
arpl
jl
add
xchg
pop
xchg
mov
je
daa
jge
mov
jno
aas
lods
aas
addr16
gs
popf
sub
shll
sbb
leave
mov
xchg
add
jo
sub
adc
push
and
pop
fsubl
leave
adc
out
sahf
jb
add
repz
stc
dec
and
lcall
into
icebp
adc
cmpl
leave
iret
or
mov
sbbl
stos
add
dec
test
ret
jb
out
mov
cmp
rcrb
inc
xor
jae
sarb
out
adc
jnp
add
push
iret
out
pop
xchg
popf
fsub
fs
add
fwait
aam
inc
fwait
lods
out
js
mov
sahf
insl
xchg
mov
movsb
ljmp
push
adc
sbb
xorb
ja
mov
rcrb
in
cmp
testl
xchg
sub
xor
enter
adc
ret
sti
and
into
hlt
push
ss
dec
xchg
ror
popa
test
lods
push
xor
negl
repnz
aaa
pop
dec
pop
aaa
mov
pop
es
mov
jge
std
scas
lret
sub
pop
xor
sbb
adc
in
insb
out
mov
mov
sub
add
sbb
aam
add
insb
insl
cmpsb
adc
lea
imul
sbb
aaa
inc
inc
mov
sbb
jno
mov
mov
sub
out
inc
push
cld
in
inc
out
dec
sub
xchg
xchg
mov
cmp
inc
sbb
cwtl
pop
bnd
sbb
add
fcomp
jge
shl
daa
or
push
mov
xor
notb
xchg
insl
jnp
and
mov
adc
in
push
mov
xchg
lock
pop
inc
shrl
cmp
sti
jo
out
les
jmp
ficoml
or
mov
into
jl
inc
fsubrp
pop
xchg
mov
ljmp
ds
andl
lods
addr16
out
dec
cmp
jno
les
enter
rolb
subb
xchg
adc
jne
repnz
mov
test
test
xchg
outsb
aas
scas
dec
sbb
ljmp
mov
mov
js
dec
xor
or
sbb
dec
mov
push
cmp
fists
into
dec
pop
sahf
sbb
xorb
mov
inc
leave
pop
add
xor
or
jbe
bound
inc
iret
adc
loopne
sbb
ret
adc
jmp
xchg
or
or
add
mov
aas
arpl
hlt
jns
fsubrs
out
ret
dec
jl
inc
testb
divl
mov
movsb
cli
cmpsl
imul
push
jle
sub
in
cs
aam
xchg
ljmp
or
or
push
fstl
inc
jge
mov
adc
pushf
lcall
sub
daa
es
mov
inc
pop
sbb
lods
add
or
pusha
rol
pop
shl
in
lcall
add
mov
xchg
jmp
push
out
std
lods
std
push
xchg
pop
jbe
clc
mov
aad
xchg
mov
dec
movsb
add
jbe
mov
push
mov
addb
lods
adc
xchg
adc
nop
lods
ss
sub
and
fwait
nop
repnz
sub
mov
jo
cmp
mov
call
in
sbb
xchg
fnstsw
push
clc
scas
shufps
inc
loope
icebp
jp
frstor
or
insl
pop
jbe
sub
outsl
je
and
push
and
push
jno
push
push
jns
sbb
or
jge
mov
scas
or
or
or
cmp
fists
pop
cmp
mov
cli
outsl
adc
mov
ret
shll
push
push
mov
sbbl
je
sahf
iret
ds
jno
icebp
pop
sahf
or
cmc
test
stos
test
fldl
and
movd
outsl
pop
out
insb
mov
jg
repz
and
mov
in
dec
in
sub
inc
stos
repnz
rcrl
pop
inc
ss
and
xchg
xor
pop
add
repnz
push
arpl
ret
mov
adc
pop
push
in
xorl
ja
sub
xchg
adc
jp
jnp
cmpsl
mov
mov
das
inc
push
jmp
out
jl
jp
aaa
inc
mov
pop
faddp
rcrb
xchg
jno
mov
push
lcall
sbb
xchg
mov
es
pop
es
cld
negl
sar
jge
mov
repz
clc
ficompl
loope
fwait
xchg
mov
repnz
mov
cmp
mov
loopne
movsb
test
lea
and
mov
or
and
or
sarl
ss
mov
mov
mov
add
jns
jns
mov
test
int
sub
xor
mov
add
mov
and
dec
mov
mov
xchg
stos
loopne
and
cmc
js
pop
ljmp
jp
jb
je
fdivrs
pop
fisttps
outsl
arpl
dec
pop
add
fcmovu
in
adc
adc
pop
std
pop
add
or
loope
add
es
adc
dec
push
or
test
add
fiadds
jne
cltd
mov
mov
scas
out
push
popa
es
movsl
cs
inc
mov
cmp
sub
aam
cli
push
xchg
mov
xchg
jecxz
sub
lea
bound
ss
xchg
xchg
fldl
aaa
or
shlb
mov
bound
rcrl
adc
dec
jbe
push
sub
stc
mov
ds
adc
shll
push
mov
ljmp
adc
sbb
sbbl
mov
add
xor
repz
orl
sub
andl
push
jg
or
cmpsb
cmp
addr16
cmp
inc
inc
cmpsb
pop
cmp
sub
daa
sbb
dec
movsb
aam
xchg
mov
scas
int3
pushf
xchg
les
stos
in
xchg
popa
cmp
sbb
fdivs
fildll
rclb
andb
test
mov
jo
xchg
out
mov
mov
test
stos
mov
out
cwtl
notl
aas
test
pop
movsbl
jge
call
xchg
inc
xlat
test
addr16
fcmovnbe
out
add
dec
xor
pop
loopne
mov
mov
in
jae
lcall
mov
xorl
push
inc
daa
adc
ss
loopne
jmp
nop
cmc
sub
mov
test
cmc
sbb
movsl
pop
insb
sub
out
cmp
imul
ljmp
in
insl
or
pop
in
sahf
dec
or
stos
mov
sbb
ds
outsb
or
sbb
ss
sbb
rcrb
mov
call
push
inc
inc
mov
jmp
cltd
pop
jmp
sti
notb
jecxz
or
shll
sub
push
data16
in
icebp
test
and
and
testl
mov
repnz
mov
push
test
dec
cltd
sub
addr16
imul
mov
inc
hlt
lret
pop
ds
mov
and
adc
cmp
xor
mov
add
mov
pop
iret
cmp
fmuls
mov
stc
jmp
mov
shll
jbe
add
dec
push
das
adc
cld
lcall
sub
ret
dec
leave
ret
gs
stc
imul
icebp
cmp
adc
sti
or
add
stc
cmp
xchg
nop
cmpsb
adc
dec
mov
pop
loope
int
imul
inc
mov
xchg
stos
sbb
mov
cmp
fsts
push
mov
stos
xchg
das
outsl
les
pop
dec
add
lcall
add
popf
xorb
lods
pop
sbb
pop
ret
push
xchg
repz
loope
inc
cli
xor
les
inc
movsl
sub
loopne
or
orl
ficoms
adc
ljmp
hlt
cmpsb
pop
stos
test
loopne
adc
mov
jb
and
lret
cmpsb
or
das
lcall
les
leave
outsl
pop
mov
loope
stos
mov
push
mov
dec
push
ja
daa
pop
push
dec
pop
xlat
out
scas
and
idivl
pop
inc
insl
les
enter
mov
lods
faddl
cs
sub
mov
loopne
pop
scas
andl
fldl
aad
js
mov
add
jp
mov
pop
rcll
mov
or
into
pop
bound
jmp
jg
pop
fbld
cmpsl
andl
and
lret
negb
cli
dec
popf
ss
cwtl
shlb
unpckhps
test
aaa
pop
fcoms
pop
ret
jnp
jne
sub
xchg
xchg
inc
add
fsts
jmp
andb
and
fldcw
aaa
and
sbb
cmp
stc
and
mov
xor
xor
pop
or
lods
daa
cmp
jp
insb
daa
jno
sub
test
lods
xchg
mov
or
push
lret
movups
push
xlat
jns
adc
jne
shll
mov
mov
cmpsl
adc
xor
test
sbb
lods
mov
ljmp
inc
fldl
sbb
add
fisubl
aas
jmp
jae
xor
add
sahf
push
pop
mov
in
add
mov
xchg
mov
and
xchg
jbe
sbb
push
insl
and
es
adc
mov
inc
and
jecxz
out
add
scas
mov
es
data16
jmp
cli
and
pop
cmp
icebp
xor
cmp
sti
jae
fdivr
xchg
pop
hlt
xchg
sbb
int3
call
mov
and
clc
out
fcmovnbe
inc
lods
xchg
jbe
popf
popf
stos
stc
repz
mov
inc
cmp
lahf
xor
dec
rolb
sbb
mov
arpl
add
add
lock
fs
test
andb
les
jg
scas
cmp
push
stos
test
test
mov
or
movl
xchg
fsubrl
dec
pop
imul
jle
inc
jl
shlb
mov
xlat
cmp
lock
repz
int
int
cli
adc
and
pop
mov
inc
pop
jne
pop
dec
cld
mov
pusha
shrl
jecxz
and
insb
push
jnp
daa
dec
inc
psllq
ret
pusha
mov
push
rorl
std
mov
ds
mov
fs
lcall
call
je
loopne
sbb
outsl
push
movsl
mov
fidivs
cmp
movb
rcrl
cli
inc
jb
mov
inc
imul
cli
fldl
nop
stos
push
imul
test
pop
dec
enter
nop
xor
adc
fsub
cmpsl
stc
inc
push
xchg
and
repnz
mov
sub
bound
loop
pushf
add
dec
outsl
outsb
cmc
mov
sub
xchg
or
ficompl
fisubrs
jo
and
mov
jl
add
ficompl
das
cmp
sub
cmpsb
adc
shll
add
icebp
stos
daa
pop
add
sbb
sahf
mov
outsl
mov
cmp
out
leave
sbb
fnstsw
jl
inc
cs
ret
jbe
mov
xchg
sbb
mov
in
mov
stos
push
xchg
mov
shll
lea
pushf
test
push
lds
call
or
add
jp
jge
mov
enter
rol
dec
jbe
mov
loopne
in
cli
mov
or
jo
xor
je
pusha
test
test
std
sarb
in
mov
dec
inc
or
lods
bound
pop
add
mov
lret
cltd
bound
jo
dec
jl
jmp
xchg
fsubrs
jo
jge
push
sahf
scas
nop
inc
mov
pop
lret
and
mov
adc
jmp
ret
and
in
cmp
mov
jl
fistl
stos
xchg
add
inc
repz
popa
push
mov
fisubrs
rcr
dec
ljmp
fsts
ret
sub
lock
test
or
aam
std
mov
mov
into
and
mov
out
push
and
enter
shll
adc
mov
xchg
repz
cmp
movsl
mov
or
cmp
pusha
dec
test
sub
fs
pop
sbb
mov
mov
and
repz
mov
pop
or
jnp
fdivrl
ret
icebp
scas
stc
jbe
das
push
imul
dec
data16
out
shlb
lret
dec
sub
xlat
add
xor
xchg
pop
dec
mov
imul
mov
xor
sti
xor
scas
int
ss
jecxz
pusha
mov
ljmp
clc
fistpl
sbb
adc
fsub
dec
cmp
xchg
pushf
adc
call
out
adc
je
and
scas
adc
jmp
sahf
xlat
iret
test
add
bound
pop
inc
scas
mov
xchg
push
xchg
mov
fadd
mov
inc
inc
lahf
inc
out
nop
mov
mov
adc
sub
or
mov
repz
jp
xor
push
xor
cmp
cmpsl
sub
pop
xor
mov
xchg
jo
imul
sbb
dec
mov
cwtl
add
jmp
xor
lds
xlat
lods
fisubs
sub
pop
lahf
leave
push
pop
aaa
outsl
push
and
stos
dec
push
xchg
pop
mov
add
adc
add
aaa
push
jmp
out
inc
push
cltd
add
cmpsb
push
cmpl
cs
xchg
hlt
jg
fcoms
push
xchg
or
scas
arpl
sti
add
enter
push
fdivs
xor
xor
into
adc
into
inc
inc
fnstcw
dec
into
sbb
pop
pushf
lea
add
ds
movsl
jne
rcrl
enter
pop
or
out
jge
sahf
nop
add
in
cmp
arpl
out
ret
ret
scas
inc
test
cmpsl
cltd
popf
addr16
pop
loop
and
enter
cmpsl
in
std
pop
adc
shll
push
mov
daa
js
cmp
cs
loopne
or
jnp
mov
dec
cli
pop
dec
lods
jecxz
sub
dec
sahf
das
xchg
scas
sbb
sarb
imul
jle
mov
mov
xor
pop
sub
xor
inc
mov
out
ret
ss
jmp
xlat
dec
mov
pop
mov
push
adc
and
dec
mov
test
mov
enter
outsb
dec
dec
aam
cmp
push
in
stc
inc
jmp
cmp
ret
lahf
gs
out
sbb
pusha
test
popf
and
xchg
cmc
cmp
mov
js
jbe
shrl
lds
imul
push
adc
iret
testl
mov
adc
inc
hlt
jo
or
push
sahf
cmp
dec
lods
push
xchg
cs
mov
xor
mov
imul
pop
mov
and
mov
dec
shrb
xchg
dec
movsb
add
data16
gs
jae
loope
out
aas
repnz
icebp
push
pop
inc
cwtl
cmp
fmul
mov
pop
mov
aas
aas
and
pop
cwtl
stc
insb
xchg
mov
fcomi
jp
fiadds
cmp
adc
add
je
cltd
sahf
daa
pop
pop
into
addr16
dec
or
cmpsl
leave
inc
and
ret
adc
js
movsb
jge
mov
daa
in
inc
bound
addr16
inc
lcall
ficoms
lods
imul
xchg
js
mov
ret
data16
imul
sbb
push
imul
lods
xchg
inc
adc
lcall
pop
xchg
adc
push
xchg
mov
mov
cmp
add
insl
xor
jb
push
aam
lret
in
mov
addr16
lds
ret
dec
push
scas
pop
stos
jbe
cmp
cmp
xchg
mov
imul
or
out
arpl
pop
xchg
cld
aad
in
ljmp
cmc
xchg
push
and
or
movsl
out
inc
loopne
cmpsb
cmpsl
fisubrl
test
cmp
jg
cld
pop
mov
movsb
rol
orb
iret
inc
xchg
cltd
ja
jp
lods
lods
push
sbb
test
xchg
cmp
jmp
adc
sarb
test
cwtl
or
mov
cs
stos
ret
negb
mov
test
mov
sbb
add
fadds
cmp
stos
iret
push
dec
mul
not
in
sub
push
sarb
les
out
xchg
xchg
push
sub
ret
xor
jecxz
pop
jp
loop
cmpsb
fimull
insl
cmp
or
dec
mov
rol
xor
pop
jmp
adc
push
inc
cwtl
inc
jb
jae
icebp
stos
jmp
push
ret
ljmp
mov
mov
push
rorb
mov
rorl
sbb
pop
and
je
push
outsl
or
addb
popf
lds
inc
test
lea
jno
jl
fidivrs
add
push
mov
push
sbb
pop
pop
inc
shr
mov
cmp
cmpl
jp
mov
inc
addb
enter
pop
jmp
push
push
sub
xchg
dec
fistpl
push
es
xor
cmpsl
mov
mov
adc
and
pop
inc
test
fwait
sub
std
cmc
mov
pop
ds
jnp
pop
dec
jno
lods
imul
popa
idivb
dec
mov
addr16
adc
add
ds
xor
lods
es
push
rcr
push
clc
gs
mov
clc
outsb
mov
mov
sbb
jbe
addb
inc
cwtl
mov
xor
mov
or
adc
xchg
les
add
jecxz
xchg
inc
mov
into
lret
dec
loopne
gs
and
les
cmc
enter
adc
xchg
arpl
mov
jno
imul
nop
inc
cmp
or
fidivrl
xchg
daa
mov
cmpsb
popf
shl
xchg
push
and
xor
cmp
sbb
inc
stos
in
mov
inc
aas
ljmp
movsb
sub
push
clc
fwait
mov
lea
lcall
cld
or
or
fcoms
test
push
cld
mov
sub
dec
jmp
out
shll
aam
mov
push
xchg
movsb
stc
or
in
mov
mov
dec
leave
mov
push
ret
scas
lds
stc
imul
clc
cmpsb
rolb
xchg
sub
inc
rorb
into
xor
rorb
push
shlb
jbe
and
cwtl
rol
sub
test
hlt
addr16
pop
sbb
xor
push
cmp
lret
nop
dec
imull
pop
or
fsubp
sub
repnz
outsb
dec
mov
sub
dec
ficompl
jg
inc
cmpsl
push
dec
in
orl
dec
mov
push
pop
and
sbb
mov
mov
and
sub
adc
int3
test
mov
sbb
cmp
xchg
subb
lcall
jmp
loopne
adcb
arpl
daa
bound
inc
mov
das
mov
in
neg
push
add
data16
les
lea
adc
repnz
xlat
fsub
push
or
sub
incl
jle
pop
adc
xchg
test
push
stc
ret
insb
pop
add
fstl
out
adc
jecxz
mov
pop
dec
jl
push
push
lahf
ss
fsubs
pop
add
sub
jne
insl
push
dec
cli
mov
insb
out
inc
or
dec
sarb
pop
mov
jns
push
and
pop
mov
jae
adc
dec
cmp
mov
mov
imul
aam
inc
aam
fmuls
daa
repnz
test
add
xlat
cmp
mov
add
outsl
icebp
shll
jecxz
inc
imul
sub
enter
xchg
add
sub
or
or
shlb
xor
xchg
inc
or
dec
xor
jb
and
cwtl
xchg
sbb
sbb
rcl
shl
cmp
inc
cmpsb
sub
xchg
dec
subb
sub
adc
push
mov
cmc
jmp
out
sti
sbbl
fildll
mov
xchg
sbb
lds
adc
repz
inc
das
rcrb
pop
xchg
or
test
mov
push
add
lret
and
dec
pop
out
mov
xlat
test
and
pop
fidivl
arpl
sub
lret
pop
adc
jmp
into
cmpsl
imul
mov
dec
loope
mov
fmuls
mov
inc
mov
cld
add
mov
mov
push
fwait
xchg
test
hlt
fistl
addb
pop
mov
sub
pop
mov
int3
mov
xchg
aad
scas
repnz
ret
pop
test
dec
mov
dec
jmp
mov
sti
mov
push
and
mov
cmp
sbbb
jae
out
lods
inc
cmp
inc
in
pop
repnz
xchg
outsl
nop
int
aam
mov
fisubrs
adc
mov
stos
imul
sub
mov
mov
cmc
cli
cmp
je
add
sti
xchg
fists
stos
js
jp
js
jne
lcall
insl
out
and
fstl
scas
add
icebp
imul
adc
jns
and
sub
pop
aaa
push
mov
loope
cmc
in
lods
inc
mov
jle
mov
xchg
int
and
mov
inc
arpl
loop
mov
movsb
sti
mov
or
mov
into
pop
int3
push
movsl
sub
inc
sbb
stos
mov
add
add
lods
lea
or
jne
lock
pop
push
jb
repnz
int
mov
dec
rol
jae
mov
pop
loop
sbb
xchg
push
mov
insl
pushf
dec
dec
test
xorl
sbb
arpl
cmpsb
bound
repnz
jnp
lea
add
jbe
outsb
pusha
fisubrs
dec
cld
fistps
mov
pop
cmp
adcl
jne
dec
mov
adc
xchg
adc
lahf
arpl
in
inc
inc
sti
ds
ret
and
out
inc
clc
lods
outsb
das
gs
xchg
inc
or
das
and
shlb
test
dec
fcompl
pop
jne
pop
test
mov
nop
xchg
pusha
icebp
ds
adc
test
jle
aaa
bound
cmp
add
push
cld
cld
fwait
pop
lret
les
popa
add
xor
outsl
jbe
push
sbb
insl
push
cwtl
jl
test
or
or
data16
rclb
mov
jp
rorb
cmpl
sahf
pop
jge
das
add
orl
test
std
popf
shlb
ds
data16
ret
pop
fisubrl
cli
mov
dec
mov
sub
imul
es
loopne
bnd
sbb
rol
dec
mov
pop
dec
movlps
mov
mov
outsl
lock
sbb
sub
clc
in
xchg
js
sarb
mov
adc
prefetch
inc
and
in
ds
or
mov
jp
xor
jp
mov
je
xor
ds
mov
cmpsb
imull
or
mov
mov
int
pop
fadds
dec
xchg
out
call
cmp
pop
and
push
rcrl
aas
cmp
cmp
mov
in
pusha
pop
cmpsb
pop
in
and
pop
inc
cli
cs
dec
mov
sbb
ficoms
xchg
mov
in
xor
push
orb
call
push
leave
cmp
jb
lahf
cs
inc
scas
pop
xor
cmc
mov
mov
add
notl
movsl
negl
pusha
std
push
addr16
sub
mov
fwait
mov
mov
pop
in
push
inc
enter
sbbb
add
and
adc
sbb
xchg
jmp
sub
rorl
stos
jmp
mov
cmpsl
aaa
jmp
jo
mov
dec
aaa
cmp
sbb
adc
rcr
add
cmc
sub
mov
je
shrb
int3
cwtl
add
xchg
cli
pusha
cli
add
xchg
jo
js
fs
call
mov
ja
mov
aaa
or
jmp
pop
fistpl
or
xchg
adc
jne
or
pop
push
or
sbb
js
jne
mov
cltd
sbb
pop
lea
sbb
jge
mov
xchg
and
loope
add
inc
sbb
sahf
inc
pop
xchg
lds
push
es
and
push
enter
cmp
pop
js
xor
dec
mov
call
nop
xchg
mov
fisttps
xchg
xor
rolb
cltd
mov
loope
sub
mov
and
jmp
mov
scas
in
data16
test
mov
inc
mov
repnz
mov
data16
xlat
addl
out
xchg
add
xchg
push
fsubr
lods
scas
insb
mov
jg
sbb
fdivrl
adc
int
add
jmp
aaa
ret
jp
cwtl
xchg
addl
sbb
repz
and
lea
inc
into
jl
xchg
jne
sbb
cmc
dec
out
xlat
jmp
inc
gs
into
jns
inc
push
rorb
mov
daa
daa
ret
popa
ljmp
lock
into
mov
hlt
jns
xchg
sub
insl
lods
popf
std
movsb
mov
jp
add
xor
je
repz
push
mov
mov
sbb
mov
adc
mov
and
in
jne
xlat
arpl
fstp
or
jl
nop
adc
xor
lret
movsl
fs
pop
xchg
inc
fldl
pop
in
or
jecxz
mov
insb
aam
fistpll
push
and
sub
cmp
jg
xchg
fstps
ja
xor
shll
mov
sbb
hlt
nop
aas
inc
sub
fdivrl
add
pushf
dec
add
stos
pushf
dec
cmpl
or
int3
mov
push
scas
push
popf
enter
data16
test
cmpsl
call
loope
orl
enter
clc
popa
ja
in
xor
imul
testb
push
mov
add
xor
xchg
xlat
icebp
shr
fsubr
insl
leave
xchg
and
push
stos
jmp
clc
rolb
jns
addr16
lret
inc
nop
pop
jbe
xchg
lods
jne
in
arpl
jmp
int
pushf
jns
or
xor
loop
sub
push
adc
repnz
xor
imul
incb
xor
into
into
data16
jb
sub
ds
pop
fs
fcmovu
xorb
hlt
sub
inc
cmp
addr16
and
mov
int3
pop
jo
xchg
fs
cmp
sub
nop
adc
sub
inc
push
and
cs
push
mov
ja
orb
inc
addr16
shld
or
dec
or
jmp
mov
cmp
add
pop
xchg
cltd
push
inc
addl
adcl
into
push
fisubl
stos
fldenv
jmp
jp
scas
int3
mov
sarl
push
andl
pop
mov
test
pop
adc
fists
push
cmp
aad
mov
cld
jp
add
add
mov
xor
push
imul
call
gs
push
sub
shll
popf
push
pop
test
adc
dec
mov
xlat
add
negl
dec
mov
test
ret
test
or
fnstcw
pop
shrb
lea
outsb
adc
cmp
in
adc
adc
lcall
push
xor
pop
movsb
cld
rcrl
movsb
xor
xchg
lock
rcrl
xor
jb
out
or
mov
aas
lds
cltd
dec
ljmp
stos
repz
fbld
dec
arpl
sub
jle
jl
push
out
decl
jp
andl
mov
in
add
xor
pop
cwtl
dec
imul
insb
xor
es
pop
mov
cmpsl
addr16
dec
add
cmp
adc
cmpsb
xlat
xlat
test
jge
ror
addr16
jmp
and
pop
ds
stos
in
psubsw
dec
aad
cmp
pusha
fs
mov
cltd
aad
cltd
icebp
adc
xchg
repz
sub
je
repz
fldln2
in
arpl
loopne
sub
arpl
pop
adc
dec
jne
push
mov
inc
and
test
not
pop
lcall
adc
insl
nop
dec
clc
lret
xchg
popa
cmp
dec
icebp
loopne
jns
flds
and
xor
in
pop
pcmpeqw
clc
xor
cmp
and
jge
xchg
jbe
and
and
push
mov
mov
adc
mov
xlat
popf
adc
jns
inc
adc
daa
cmp
cmpsl
sahf
in
sub
jns
and
pop
std
push
rorl
pop
xchg
add
aas
call
mov
lods
sub
test
push
inc
xor
lock
xor
mov
roll
in
push
movsb
fistpll
mov
les
add
sti
gs
out
mov
inc
insl
mov
test
imul
sub
out
lahf
lods
lahf
mov
rcr
inc
movsl
adc
imulb
pop
lock
and
jp
jmp
dec
xchg
aam
ret
pusha
sbb
imul
add
stc
dec
jno
mov
call
cmp
add
xlat
push
cmpsl
mov
es
addr16
in
xchg
stos
lcall
bound
clc
pop
add
jg
setne
mov
mov
inc
int3
pusha
jg
sbb
pusha
xchg
mov
aas
mov
popa
add
jb
pop
popf
in
jae
std
fucomi
rolb
repnz
cmpsb
pop
cmp
mov
jge
pop
cmpsl
pop
pop
xor
dec
aam
push
xchg
push
pop
pop
std
cmp
inc
xchg
sbb
mov
cmp
fwait
int
icebp
push
dec
aad
inc
mov
adcb
imul
clc
out
iret
leave
and
aam
lret
push
mov
push
sbb
jl
nop
daa
jl
popa
inc
mov
aam
les
js
dec
sbb
cmpsl
xchg
inc
daa
cmp
cmovne
das
or
jp
inc
mov
roll
rcrb
lret
test
into
shll
repnz
insl
pop
lea
and
call
popf
outsl
pop
mov
call
es
into
and
mov
pop
scas
lds
add
mov
sub
fildl
test
inc
out
mov
or
jmp
int
cmp
add
bound
xor
jle
pop
fisubl
sbb
xor
mov
or
rcll
cmp
cmp
cmp
xor
adc
repz
push
dec
bound
sbb
fdivs
xchg
pop
mov
xchg
push
ret
pop
cmp
sub
push
push
jnp
cmp
test
nop
cmp
sbb
daa
daa
cmpb
and
cltd
fwait
jle
outsl
test
in
push
add
outsb
fs
and
xchg
mov
js
pop
arpl
push
cmp
mov
arpl
iret
dec
jecxz
imul
adc
lea
repnz
scas
test
cmp
jecxz
mov
inc
adc
test
test
idivb
ljmp
outsb
imul
cmp
into
jl
js
sahf
or
dec
outsl
or
dec
adc
pop
leave
mov
push
out
push
sub
rorl
mov
xchg
gs
lods
and
fcmovne
daa
mov
addr16
xchg
movsl
daa
xor
fcom
push
pop
test
outsl
vmovntps
cmc
insl
mov
inc
popf
mov
pop
shll
cwtl
mov
mov
jne
insb
sub
sahf
inc
xchg
or
gs
in
add
cwtd
cld
addl
fdivl
std
xor
mov
xor
push
or
int3
gs
popf
and
adc
movsl
dec
sbb
test
dec
notl
cmpsb
mov
repz
adc
test
dec
lcall
pop
jmp
jg
and
addl
cwtl
mov
inc
jae
xchg
stos
xchg
and
xchg
stos
inc
int3
dec
repnz
pop
dec
jp
inc
sub
cs
and
push
jmp
or
ss
or
push
test
sbb
jns
ret
hlt
lods
insb
mov
ret
shll
outsl
mov
mov
lock
add
mov
push
bound
or
pop
or
sbb
out
shll
add
sti
sti
mov
push
xor
in
jae
insl
push
mov
or
cmp
and
ret
stos
push
in
mov
xchg
jle
lahf
push
iret
fcmovnbe
mov
pop
icebp
sbb
mov
sahf
mov
ljmp
lods
sbb
mov
enter
mov
jecxz
cmp
jb
sbb
mov
xor
add
lock
jns
in
mov
mov
dec
dec
cmp
mov
sub
sbb
mov
adc
mov
repz
out
pop
pop
lods
push
jl
out
cmp
std
jg
sahf
jl
pusha
fwait
orb
outsb
popf
aas
insb
adc
in
jle
adc
sbbl
jl
adc
cmp
insl
jb
lret
loope
and
sahf
jg
inc
and
push
dec
sti
jb
jmp
js
insb
add
ss
mov
mov
lret
test
mov
jg
nop
int
scas
ljmp
jmp
xlat
lock
out
mov
repnz
pop
cltd
insl
adc
data16
movw
and
and
fwait
test
xchg
movzwl
mov
mov
adc
arpl
adc
or
es
pop
push
push
xor
je
mov
adc
jecxz
out
mov
add
test
notb
mov
and
orl
sbb
dec
rolb
int
lahf
cli
push
push
out
ret
sbb
jo
test
ret
hlt
fsubrs
movsl
repz
jge
testl
dec
jo
inc
mov
les
adc
outsl
je
scas
mov
jp
lahf
xchg
aas
add
adc
mov
imul
out
mov
dec
and
and
sti
je
leave
dec
mov
and
loope
loop
dec
add
jnp
inc
ret
xchg
int3
roll
sbb
addr16
jo
lahf
mov
out
jle
les
dec
adc
shrb
xor
jae
lahf
aaa
or
jp
sahf
jle
sbb
dec
sbb
pop
push
divl
popa
inc
test
xchg
mov
adc
or
icebp
lret
mov
out
repnz
or
orb
call
and
test
xor
sub
sub
test
rclb
inc
push
pop
jnp
xorb
or
push
lods
clc
lods
ljmp
xor
or
ficoms
lock
popa
mov
pop
ds
int3
cmp
sbb
sarb
das
mov
sub
mov
mov
movsl
loop
sti
daa
xchg
mov
xor
call
fadds
aam
dec
or
notl
mov
dec
pop
push
cwtl
aas
out
jmp
sahf
sarb
mov
fists
dec
cmpl
inc
mov
or
fwait
jecxz
mov
enter
or
hlt
iret
pop
mov
cli
cmp
inc
inc
rclb
out
pop
lahf
rcrb
xor
push
pop
pop
sbb
popf
lock
push
and
ja
push
lahf
and
lock
stc
push
movsb
stos
push
mov
cltd
pop
mov
test
fsts
cs
or
clc
push
mov
fnstenv
les
mov
and
adc
aaa
addl
mov
fs
repz
pop
fwait
add
fwait
dec
pusha
mov
out
fwait
jae
adc
push
xlat
fidivs
xchg
pusha
aas
int3
mov
ss
cmp
sub
fcmovu
sub
push
mov
pop
lea
pop
test
cmp
sub
idiv
int
or
sbb
fldl2t
adc
or
mov
mov
cmp
xchg
inc
fists
and
mov
cwtl
ret
les
and
mov
ds
shll
pop
pop
sub
loop
movsb
and
sbb
sbb
mov
cmp
sbb
idiv
into
inc
popa
sbb
es
dec
daa
div
idivb
add
dec
inc
stc
cmc
and
aam
fdivr
js
push
sub
nop
scas
push
push
sub
mov
xor
fs
shll
fadds
lods
inc
in
enter
jmp
sub
out
and
adc
rep
test
stc
in
insb
xor
insl
scas
pop
mov
xchg
push
mov
jle
push
je
cltd
ret
dec
pop
mov
fsts
nop
or
jbe
mov
fwait
jmp
lahf
loop
lcall
dec
ja
lret
cmp
pop
or
in
lret
fistpl
out
sti
add
lret
stc
jbe
mov
mov
add
test
inc
push
data16
lret
mov
repz
mov
cmpsb
mov
or
lret
jnp
pop
loop
ljmp
clc
push
les
scas
xchg
outsl
add
lock
jmp
pop
sbb
inc
ljmp
sti
je
jb
rorl
jecxz
mov
les
sahf
sub
pop
mov
jge
loop
repnz
pusha
push
sbb
push
add
add
push
iret
push
push
aad
insb
popf
es
xor
push
ss
stc
stc
pushf
push
adc
cvtps2pd
das
mov
mov
sbb
mov
xchg
repnz
push
mov
cld
mov
cltd
rcrl
and
cmp
aas
mov
mov
fbstp
test
outsb
cmp
mov
mov
dec
stos
pop
mov
in
insb
in
push
mov
dec
adc
out
lock
lahf
sub
mov
and
jne
fs
hlt
jge
mov
inc
mov
xchg
pop
cmp
xor
repz
arpl
and
push
sbb
test
sbb
sub
dec
jge
and
dec
fdivl
ss
scas
ss
std
inc
pop
aam
test
mov
xchg
sub
cmp
mov
rol
dec
xor
xor
cmpsb
sbb
ror
dec
mov
ds
xchg
out
repz
and
xchg
arpl
mov
ljmp
adc
addr16
fiadds
cmp
orl
and
fcoms
outsb
adc
adc
mov
jle
in
add
fwait
mov
xor
push
mov
adc
sbb
imul
adc
add
daa
bnd
sbb
adc
pop
fsubs
in
pop
jns
or
xlat
cmp
ljmp
ret
leave
xor
mov
shl
push
cmpsl
popa
mov
adc
jg
mov
jnp
stos
setle
cld
out
std
push
mov
lret
push
or
mov
inc
and
push
inc
cli
jnp
jmp
in
jmp
pop
mov
movsb
or
mov
sbb
or
popf
adc
sbb
pop
adc
js
aaa
stos
movsb
es
gs
cmpsl
shlb
andl
push
inc
movsl
jbe
clc
jmp
push
pop
sub
into
movsb
inc
sub
test
ficomps
adc
xor
gs
clc
ret
lods
mov
push
pop
cld
jno
addl
xor
mov
adc
out
jo
dec
adc
adc
sub
cltd
xchg
mov
xor
loope
ja
mov
inc
push
imul
ds
repz
or
add
jno
mulb
scas
gs
and
xor
jl
daa
push
dec
stc
out
gs
call
inc
bound
test
shr
hlt
mov
mov
mov
lret
mov
in
cld
lret
stos
call
lea
sub
push
xor
loopne
test
mov
daa
mov
pop
sahf
inc
dec
xchg
mov
mov
push
mov
fmulp
inc
xlat
cmc
adc
pavgb
lea
movsb
mov
stc
inc
fidivl
es
push
out
xor
clc
mov
negb
sub
push
sbb
cmp
xor
xchg
mov
lods
daa
enter
icebp
add
add
pop
push
ss
xor
std
xchg
lret
jmp
lock
sahf
add
inc
jmp
arpl
ss
dec
sbb
repz
ret
push
mov
adc
decb
cmp
loopne
xchg
je
call
dec
pop
aas
shll
js
rcrb
inc
es
and
cld
pop
fisubs
jmp
dec
jl
sbb
dec
adc
repz
leave
mov
mov
mov
adc
nop
jl
jle
mov
fwait
push
mov
adc
and
dec
cld
rcr
sbb
dec
add
sbb
test
movsb
notb
mov
insl
pop
rorb
hlt
adc
enter
ljmp
aad
movsl
push
orb
out
cmp
negb
or
sub
sub
lret
xchg
push
xor
les
mov
dec
adc
jp
fsubr
mov
mov
mov
sbb
fs
or
ss
xchg
adc
xor
sbb
icebp
sarl
lret
add
lret
mov
iret
adc
dec
lds
sub
pop
cs
test
jo
outsl
sbb
outsl
push
imul
out
insb
addl
jns
std
lret
mov
mov
adc
stc
inc
std
fiadds
movsb
leave
leave
push
das
ret
push
pop
jecxz
push
push
adc
jp
fsubrl
test
mov
push
call
in
xchg
adc
jmp
push
cmp
mov
cld
inc
pop
adc
inc
xchg
xchg
aas
jl
sub
loopne
or
mov
popf
cmp
jb
xchg
pop
push
sbb
push
nop
inc
xchg
std
dec
fildl
orb
sub
pop
jo
hlt
cmp
cld
push
outsb
lds
sbb
or
fcoms
rcrb
aaa
in
mov
pusha
mov
div
mov
adc
jne
mov
ds
jle
clc
lock
jge
xchg
sbb
pop
dec
orl
jb
fsubs
xlat
cmpsl
cmp
or
enter
pushf
pop
sbb
loop
push
push
cmp
or
stc
ret
ret
jle
iret
mov
fimull
daa
fildll
stos
roll
mov
enter
inc
lahf
add
sbb
pusha
sbb
adc
lahf
pop
adc
mov
dec
outsb
rorl
xor
cmc
mov
lods
lret
push
mov
rcrb
xchg
faddl
cmp
sbb
dec
xchg
imul
cli
shl
jae
adc
pop
xchg
mov
out
sbb
ja
push
inc
test
lds
arpl
lret
popa
stos
or
mov
inc
scas
jae
test
xchg
data16
mov
pop
jle
stos
mov
adc
mov
mov
inc
lahf
sub
xchg
cs
stos
movsb
push
fldcw
data16
into
int
jne
ds
mov
cmc
pop
ret
std
icebp
ret
notb
pop
stc
aas
loope
roll
jb
cmp
insb
test
rcrl
jge
pop
mov
out
push
or
mov
bound
jmp
loope
cmc
dec
fwait
lret
and
cmp
mov
hlt
insb
cmp
add
sub
inc
jo
sarb
pusha
or
inc
lods
sbb
mov
and
lock
xor
inc
jns
jl
pushf
pop
stos
cmpb
mov
mov
jecxz
test
xchg
bound
add
pop
aaa
test
mov
dec
fisubl
xor
addl
pop
rcrl
gs
outsb
fdivl
adcw
out
jno
dec
clc
jae
aas
repz
xor
xor
sahf
push
aam
inc
fsub
inc
xchg
ja
fprem1
mov
jg
lods
xlat
jecxz
jno
mov
pop
dec
or
sti
mov
cld
outsb
pop
add
aam
jp
cmpsl
pop
cli
sarl
sub
sti
and
mov
mov
fwait
mov
daa
mov
mov
dec
or
imul
pop
pop
mov
sbb
insb
mov
fbstp
sub
cltd
ds
imul
cli
bswap
jp
xor
insb
sub
movsb
add
sti
inc
lret
shrd
push
lahf
cs
lock
mov
xchg
push
jb
pop
and
fstl
pop
xor
cs
dec
lcall
lock
or
popf
lods
outsb
jnp
shr
xor
in
sub
aad
jecxz
addl
cmc
add
sub
add
bound
xor
add
inc
cmpb
push
lea
dec
mov
xchg
fs
and
jg
mov
cmpxchg
ja
shrb
arpl
pop
mov
js
jns
sub
lds
xor
lock
fldl2t
scas
and
mov
jg
jne
data16
push
cmp
fdivrl
xor
mov
or
leave
jo
sub
inc
push
inc
lcall
and
enter
xor
in
jl
dec
jmp
int
jo
sbb
loop
add
dec
xorb
dec
mov
sysenter
cltd
jbe
sub
jnp
xlat
add
scas
sbbl
add
sahf
jno
or
ds
popf
xchg
std
pop
pop
loope
jns
push
gs
addl
add
mov
mov
or
test
pop
inc
pop
arpl
shlb
pop
loopne
sarl
cmc
add
mov
xchg
sarl
outsb
shl
sub
stos
pop
lcall
inc
daa
mov
fidivrs
aad
mull
inc
test
cmp
jns
dec
xchg
mov
popf
test
das
mov
sahf
push
cmpsl
sub
sub
and
xchg
test
jge
jecxz
add
stc
mov
es
das
push
fnstenv
in
lcall
sub
outsb
mov
repnz
inc
and
mov
pop
push
adc
loop
pop
cmc
jle
push
cmp
das
add
fwait
data16
je
je
xlat
lock
jnp
jl
aam
iret
add
es
into
enter
insl
cmpsb
leave
and
sti
jg
ja
cwtl
pusha
stos
xchg
sub
cmc
pop
jecxz
push
mov
pop
jge
mov
pop
loop
inc
push
mov
sahf
popa
or
cmp
jl
jbe
out
xchg
or
sar
in
push
and
jle
fstpt
push
scas
mov
int
and
pop
and
jecxz
add
aas
pop
out
repz
inc
lods
aas
add
rolb
mov
cwtl
push
mov
pmulhuw
ljmp
add
nop
jle
fldenv
out
bound
jb
jmp
ja
mov
xor
fldcw
mov
push
push
fwait
cmp
add
jo
or
jns
shrl
dec
jg
ret
sub
test
int
inc
shrb
pusha
ret
enter
ss
inc
sbb
or
movl
mov
fdivl
mov
dec
and
cwtl
dec
std
lahf
pushf
mov
and
fwait
gs
lcall
call
xor
jmp
fimull
or
loopne
or
mov
popf
xchg
icebp
hlt
pop
jmp
scas
shrd
call
or
inc
movsl
xchg
push
mov
dec
mov
mov
es
stc
mov
pushl
cli
and
add
shll
jmp
cmpsb
outsl
push
pop
lock
lret
pushf
jmp
lret
jns
fldenv
rolb
sub
pop
fmuls
lods
dec
int3
xchg
sti
mov
dec
jno
sub
add
sub
das
lret
xchg
inc
push
popa
inc
outsl
mov
jle
repz
rclb
mov
sbb
pusha
stos
mov
jge
pop
dec
dec
stos
or
stos
jmp
loop
test
fdiv
in
or
fdivrl
rcr
lods
or
scas
xor
es
insb
mov
jb
popl
mov
jno
or
and
inc
cwtl
ljmp
mov
out
jo
rcrl
push
out
ljmp
jmp
fistl
adc
xchg
or
fiaddl
push
scas
mov
mov
fcomip
arpl
jecxz
add
arpl
or
mov
push
cmpb
mov
xchg
insl
out
subb
pop
xchg
add
push
lret
clc
mov
cli
neg
js
add
inc
push
cwtl
inc
lret
push
push
jbe
mov
add
lea
ret
les
jns
add
push
stos
mov
loop
cld
mov
insb
pop
adc
nop
aam
adc
mov
sub
sti
mov
sub
adcb
dec
inc
popa
fs
lock
testb
fldcw
outsl
push
inc
imul
incb
fldt
iret
inc
pop
sti
int3
push
xor
in
aaa
push
xor
jb
mov
lods
pop
int
jecxz
mov
fsubrp
outsb
mov
sub
push
adcb
test
roll
lods
cmp
repz
loopne
adc
cmc
jmp
jmp
cmp
xchg
jbe
jle
jp
in
fsubrl
cwtl
fucomp
or
sbb
arpl
pop
push
nop
push
scas
xchg
inc
notl
pop
mov
mov
dec
repz
and
cmp
mov
dec
mov
subb
jmp
sub
dec
out
call
negl
add
mov
push
inc
popf
sub
fisttps
leave
stos
out
enter
lock
xor
or
out
mov
inc
cld
cld
lods
bswap
xchg
repnz
in
inc
xchg
cltd
sarl
sub
adc
mov
insb
nop
stc
sbb
adc
stos
gs
int3
inc
xchg
test
cli
adc
or
cli
xlat
xor
hlt
mov
repnz
add
mov
xchg
sbb
ret
loop
jb
mov
mov
add
or
push
sub
stos
and
inc
and
mov
pop
or
mov
rcll
and
hlt
sub
adc
jns
mov
xor
jbe
shll
jne
lahf
push
dec
frstor
cmp
rorb
ljmp
fwait
cmp
mov
ja
insl
inc
dec
lock
and
xchg
push
sbb
rclb
mov
and
dec
scas
sub
pop
rcrb
and
jo
inc
enter
out
cwtl
push
xchg
js
xchg
xchg
mov
sbb
inc
aas
in
dec
push
imul
mov
mov
add
leave
mov
mov
or
lds
clc
xor
sub
je
cltd
push
pusha
pusha
daa
pop
outsb
cmp
pop
cmp
popf
test
fwait
mov
insl
hlt
sarl
in
sub
sub
aam
enter
je
cmp
jmp
cmp
or
mov
ds
push
add
add
sbb
or
or
enter
cmp
push
test
and
adc
mov
push
rclb
mov
and
xor
xor
in
inc
das
mov
or
inc
adcb
adc
sub
in
test
mov
or
mov
fs
mov
rcr
in
hlt
push
clc
and
fildl
popf
pop
pop
xor
popf
sysret
nop
insl
push
xor
pushf
ficompl
ja
iret
in
push
test
int3
dec
cmp
gs
sub
cmp
jae
add
push
xor
jno
xchg
nop
inc
mov
xchg
repnz
cmpsb
movsb
adc
mov
pop
dec
mov
daa
adc
out
mov
cmc
push
into
pop
int3
sahf
scas
xor
push
push
cli
clc
jae
js
sub
inc
repnz
mov
sbb
lcall
in
ret
mov
cld
xchg
call
jp
sbb
xor
xor
cmc
call
ficoml
mov
inc
xchg
lock
xchg
rcrl
ret
pop
cmpb
out
bnd
pop
in
jbe
mov
stos
mov
jmp
mov
clc
pop
in
mov
call
inc
jg
push
sbb
pop
out
jae
push
mov
jb
xchg
sbbl
lcall
and
out
int3
or
sbb
lods
aaa
xor
or
push
scas
or
icebp
push
jge
mull
popa
lds
adc
or
xor
stos
sbb
rolb
adc
xchg
xor
add
sbb
inc
pusha
xchg
decb
fwait
popf
xor
sarb
jno
pop
cmpsl
and
lret
incl
data16
ficompl
or
jb
fcoml
jns
lret
inc
inc
xchg
mov
add
mov
or
pop
insb
mov
fisubrs
shlb
xor
jl
jl
mov
pop
xor
test
inc
xchg
dec
outsb
clc
cwtl
repnz
psllq
cli
inc
lret
scas
mov
cwtl
add
lds
sbb
shrl
push
inc
test
inc
jb
add
xchg
lahf
into
lock
jl
push
pop
out
pop
sbb
fwait
out
adc
test
pop
divl
dec
ljmp
stos
sbb
pop
and
lret
xchg
mov
icebp
mov
roll
sbb
cmp
cmp
push
cmp
inc
sti
mov
sti
pop
std
xlat
loopne
mov
mov
xor
xlat
out
dec
mov
cmp
cmp
mov
into
cmp
and
pusha
push
mov
cs
bnd
sti
ficoms
std
or
pop
lods
sub
lods
test
scas
sub
sub
imul
xchg
sub
adc
loope
inc
sub
push
xchg
jecxz
gs
ja
popf
sub
mov
sub
mov
nop
test
mov
cltd
rorb
bound
repz
dec
aaa
mov
mov
xor
lcall
jmpw
aad
push
fnsave
push
ds
ret
jmp
pop
mov
mov
stc
add
ja
cmp
and
outsl
clc
shl
adc
js
orl
out
gs
ret
lcall
xchg
cli
jae
jl
dec
and
inc
mov
fmul
sub
mov
js
subl
lret
test
xchg
arpl
lar
or
sar
mov
out
es
frstor
gs
pop
in
sbb
outsl
xlat
push
lock
and
push
test
push
jnp
ljmp
lock
add
or
mov
xlat
cmp
loop
push
xor
std
dec
sub
lods
xchg
outsl
aad
cld
je
push
push
loopne
mov
sbb
cmp
andb
adc
mov
cwtl
hlt
popf
xchg
into
inc
jb
in
std
xlat
push
hlt
add
inc
cmpsb
mov
xchg
jp
jbe
fwait
test
stos
push
push
js
outsl
inc
in
popa
pop
stos
lods
pop
adc
movsl
pop
js
pop
cmp
scas
in
mov
sbb
cmp
out
repz
lods
shr
int3
mov
clc
and
icebp
ret
jg
mov
jno
lock
dec
push
aas
dec
xor
jbe
out
add
add
pop
in
jae
sub
cmp
in
nop
mov
xor
cmp
pop
inc
fldlg2
mov
jmp
ds
pop
xchg
movsb
int3
into
rcll
mov
popf
mov
mov
dec
cmovnp
and
mov
mov
mov
ret
add
fstps
cld
test
das
cs
fwait
mov
ja
push
or
mov
or
push
add
shll
int
sbb
jmp
es
and
cltd
mov
dec
icebp
sahf
js
je
cmp
imul
call
sub
push
popa
test
addr16
mov
xchg
push
int3
mov
out
fldl
addb
jne
mov
frstor
fcmovu
inc
jg
in
out
mov
movsb
sbb
addb
jge,pn
mov
adcl
outsl
sbb
jle
in
test
lret
loopne
xchg
push
ss
aam
aam
mov
push
or
out
rorl
hlt
push
cmpb
dec
pop
adc
sbb
pop
cmp
out
mov
jnp
mov
or
cmp
stos
jl
in
or
cld
mov
div
sub
fs
out
leave
adc
faddl
mov
mov
hlt
mov
pop
mov
mov
adc
hlt
daa
mov
shll
clc
imul
sub
mov
scas
clc
or
sub
loopne
fistpl
adc
mov
inc
cmpsl
pop
add
sbb
xchg
xlat
fnstsw
int3
mov
dec
pop
dec
jg
addr16
mov
popa
xor
imul
lods
nop
mov
cmp
popf
and
or
and
out
loopne
in
mov
jb
loope
test
dec
ss
lea
sbb
arpl
push
lahf
sahf
add
push
imul
mov
mov
or
jo
xchg
subb
dec
sub
movsl
jnp
gs
fdivs
or
movsb
pushf
rcrl
push
inc
ja
jge
orb
ja
dec
stos
or
loope
jno,pn
dec
subb
lcall
nop
mov
or
lods
icebp
cmc
in
inc
outsb
dec
or
or
mov
xchg
mov
movsl
fcoml
pop
inc
mov
and
push
add
cmp
dec
sti
push
pop
push
sub
fisubs
push
movl
divl
xor
lods
mov
insl
mulps
jns
add
push
push
fmuls
or
push
pop
mov
fs
cmpl
shl
repnz
ja
inc
adc
inc
out
inc
dec
pop
sarl
mov
mov
stc
and
jo
xchg
xchg
push
aam
push
adc
pop
cwtl
ror
aad
or
jp
xchg
sbb
ds
jge
cmc
ljmp
stc
jb
addr16
cmp
push
push
dec
es
push
sbb
test
mov
cmpb
xor
movsb
cli
loop
dec
xchg
mov
pop
xchg
movsl
cmp
outsl
imul
pop
xor
mov
mov
das
sub
dec
and
stc
adc
addb
or
pop
pop
and
movsl
ds
loop
testl
dec
popf
push
lods
xchg
mov
adc
out
or
stos
xchg
or
mov
adc
shll
jl
sub
xor
jmp
mov
jg
adc
mov
mov
insb
or
js
xchg
dec
pop
mov
dec
adc
push
pop
inc
mov
jp
inc
in
pop
or
or
scas
xor
sub
jbe
movhps
imul
sub
adc
jns
into
cmp
aas
push
daa
scas
jp
dec
xor
dec
xor
xchg
fnstsw
inc
xchg
fldt
loop
sub
or
push
xchg
mov
lock
nop
mov
insl
int3
mov
pop
sbb
int
jg
push
add
rolb
inc
or
arpl
xchg
ljmp
rcl
stos
xchg
xchg
xchg
cltd
aas
pop
out
push
lahf
popl
arpl
xchg
pop
ja
fistl
and
inc
lods
add
pushf
sub
lock
ljmp
test
lock
mov
ret
pop
jne
lea
mov
pop
int3
popf
popf
imull
fistpl
sbb
shrl
dec
dec
add
inc
mov
xor
call
int3
mov
or
fnsave
bound
pop
aam
inc
push
fs
int3
lock
mov
pusha
cltd
push
and
xchg
jnp
mov
sar
jo
xchg
dec
fwait
pusha
mov
jno
xlat
or
mov
xacquire
cmp
mov
sbb
sti
stos
out
mov
lods
push
adc
sub
xchg
ljmp
div
xchg
outsl
ret
inc
outsb
xchg
pop
jo
add
test
test
jl
pusha
adc
sub
jnp
loopne
aas
std
adc
xchg
mov
cmp
push
shl
sub
push
mov
xchg
lds
or
ljmp
jne
repnz
xor
mov
xor
les
push
in
movsb
fidivrs
pop
fsubr
imull
xlat
mov
gs
or
sbb
ja
push
subb
fcompl
nop
mov
out
mov
mov
pop
and
jae
stc
cmp
sub
dec
jecxz
sbb
jecxz
jns
adc
mov
lock
jle
jmp
inc
in
fistl
sub
push
leave
xchg
inc
in
insb
lock
xchg
mov
jle
lahf
sahf
add
jle
inc
imul
loope
cli
sbb
jb
mov
push
sbb
pop
mov
sbb
lahf
sbb
outsl
adc
mov
sbbb
inc
aaa
movsl
subb
dec
sub
aas
mov
inc
adc
divl
int3
insb
add
icebp
in
dec
sbb
out
sub
sub
dec
xlat
pusha
xlat
es
push
test
int
icebp
push
xchg
inc
mov
scas
stc
push
lods
push
cmp
jmp
dec
xchg
ret
lcall
inc
cs
and
push
push
and
pop
xor
scas
cmpsb
mov
pop
jo
scas
int
aad
fisubrs
insl
xor
jecxz
dec
pop
adc
sti
or
pop
xchg
rorl
mov
cmpsb
or
mov
and
int
mov
fsubl
adc
adc
mov
and
sahf
push
push
and
mov
mov
and
es
jbe
cmp
jo
sub
bnd
insb
fucom
adc
add
cli
fmull
push
jb
rcl
and
lods
jns
mov
pop
daa
mov
adc
and
pop
adc
push
cwtl
data16
gs
lods
xchg
in
dec
sti
scas
sub
ficoml
loop
into
xchg
lret
loop
cld
cld
or
ja
les
rorb
test
sub
xchg
push
test
sbb
fmull
sti
loop
pop
jo
mov
and
jo
int3
rolb
sub
add
lcall
dec
ficomps
xor
outsb
jae
push
repnz
roll
jnp
subl
out
adc
aaa
int3
cmp
push
and
loope
out
fidivl
outsl
in
push
mov
mov
cmpsb
mov
push
aaa
jae
add
fwait
mov
popa
inc
push
inc
mov
xchg
fidivrs
and
mov
pop
aad
add
jle
cmpsb
sbb
add
test
adc
sarb
sbb
sahf
push
adc
imul
mov
ret
pushl
addb
cmp
mov
adc
sub
pop
xor
insb
mov
aaa
push
scas
inc
push
iret
es
jge
pop
loopne
fptan
mov
sub
xor
dec
lret
ret
cmp
fs
ret
lret
cmc
mov
fdivs
test
bound
cmpsl
aam
lcall
or
adc
lods
pusha
test
out
ret
or
or
cmpsl
ret
aaa
cltd
cmp
inc
jb
inc
aas
fucomip
sti
and
int
sub
insb
jbe
dec
xchg
pop
inc
fistpll
sahf
mov
dec
outsl
push
jmp
xchg
xor
aas
dec
xchg
sub
sbb
js
xchg
jl
xor
xlat
pop
xchg
stos
and
into
mov
or
js
jmp
stos
xchg
fwait
sbb
loope
cmp
shlb
cld
jg
dec
cmpsb
incl
dec
dec
pop
jns
ds
xchg
sahf
lahf
push
xlat
stc
out
rcll
mov
dec
in
pushf
orb
aaa
movsl
rorl
aam
ss
iret
inc
js
lcall
push
inc
lahf
xchg
insl
imul
es
or
cmpsb
mov
insb
dec
mov
xchg
xchg
aad
cwtl
icebp
lahf
push
jle
scas
add
cmp
xor
testl
in
cwtl
leave
in
add
dec
sbb
and
and
push
dec
cmp
loopne
jbe
or
enter
push
xor
add
dec
ret
pop
jb
mov
cld
xlat
cmp
mov
jo
out
pop
sub
mov
dec
adc
inc
mov
icebp
sbb
mov
cmp
in
imul
ljmp
daa
imul
jns
and
adc
call
xchg
or
add
and
sub
sub
and
cld
in
push
adc
xchg
leave
aad
icebp
jns
jecxz
ljmp
test
and
int3
xor
clc
mov
nop
sbb
les
fldenv
mov
fiaddl
aam
cmp
aam
xchg
mov
or
pop
and
cmp
dec
inc
jecxz
sbb
xor
test
sbb
arpl
pop
push
lahf
addb
xor
or
test
xorb
enter
or
das
pop
out
call
leave
cmpsb
pop
filds
push
je
sbb
push
pop
incl
mov
lock
test
fcmovnb
and
jge
jge
shr
js
xchg
xor
addr16
xchg
xchg
pop
sub
add
lods
jecxz
xor
and
leave
scas
filds
push
sub
xchg
xchg
lock
test
fdivs
popa
dec
cmp
pop
dec
mov
jmp
fs
or
popa
mov
cld
ds
mov
imul
adc
sbb
cmp
lods
ds
adc
lods
pop
loopne
loope
push
mov
clc
pop
push
xor
test
adc
imul
xor
or
jo
pop
fcompl
lods
push
push
pop
mov
xor
loop
loopne
lock
sub
cmp
std
xchg
mov
mov
leave
add
and
cld
pop
jp
dec
dec
ja
lods
daa
sub
xchg
repz
lea
inc
std
cmp
fisubrs
dec
push
dec
insl
mov
ret
xchg
jecxz
mov
pusha
nop
pushf
xchg
mov
xor
ret
inc
sbbl
lods
sub
cmp
add
sahf
mov
mov
sbb
fldenv
dec
inc
pop
sbb
imul
cmp
fwait
sub
mov
pop
push
sti
push
dec
fbld
add
clc
lcall
cmp
lods
xchg
lock
enter
lods
es
jnp
jmp
mov
arpl
int3
pusha
clc
dec
mov
dec
arpl
div
repz
mov
jl
pop
out
into
push
jmp
sbb
sub
jo
ret
sub
fucomp
inc
sub
adc
mov
je
movsl
lock
stc
leave
adc
xlat
add
cltd
lahf
outsl
or
lcall
and
or
leave
fistps
mov
mov
xor
add
fists
movsl
movsl
es
aas
adc
inc
push
inc
stc
pop
dec
xor
mov
push
cmp
dec
lods
mov
outsl
ret
loopne
aam
inc
js
aam
add
xor
repz
sti
pop
aam
mov
cwtl
mov
or
jg
int3
adc
imull
push
jg
jmp
adc
xor
jl
mov
sub
mov
loop
lds
adc
jns
fs
xchg
in
popf
lea
sbb
cld
push
mov
pusha
lock
leave
test
mov
enter
stc
mov
popa
mov
sbb
repnz
jb
dec
pop
cmpsl
add
add
push
xor
vmread
leave
addr16
pop
ja
in
dec
movsb
or
cmp
sub
push
push
cwtl
jp,pt
adc
mov
insb
cmc
xchg
shll
dec
shrl
add
add
or
and
ror
push
jp
xchg
xor
cmc
or
inc
ret
pusha
pushf
loop
xorb
aam
imul
adc
fs
add
inc
xor
push
add
adc
test
adc
aad
cmp
stos
out
shll
stc
push
clc
lods
lahf
ret
dec
in
cld
mov
outsb
aad
push
in
lret
dec
push
ret
or
negb
je
push
test
xchg
mov
and
mov
stos
insl
loopne
sub
sti
push
lds
aam
push
aad
movsl
cmp
xchg
mov
mov
dec
aaa
cmpsl
pop
into
stc
ret
xor
cmp
mov
lret
popf
fisubrl
adc
sbb
sub
fadds
je
sub
clc
mov
inc
sbb
in
incb
pushf
lea
ror
mov
cmc
xor
jb
inc
fstpl
sbb
pop
test
pop
dec
dec
and
ljmp
inc
loope
xchg
or
cs
into
lds
shrl
in
mov
xor
mov
dec
jne
and
mov
cld
mov
or
xchg
gs
notl
inc
lock
push
jns
insl
mov
sbb
cmp
mov
add
outsl
inc
mov
add
jg
lret
pop
and
out
lds
mov
inc
mov
outsb
pop
pop
and
dec
repnz
sub
out
xor
into
mov
mov
mov
or
push
cmp
mov
pop
lods
stos
cmpsb
divb
pop
fimull
fcmove
sti
lods
push
lods
or
pusha
jl
jmp
xlat
or
jg
arpl
mov
push
sbb
inc
mov
jne
cmp
out
mov
das
sahf
jne
and
jb
lock
je
xor
push
dec
out
imul
sbbb
movsl
orb
mov
jmp
mov
and
mov
jge
cmp
cmp
push
sub
sahf
inc
xchg
sbb
dec
push
add
loope
cmp
pop
jae
call
jne
cmp
add
add
testb
jno
dec
pop
lret
xor
insl
cmc
sbb
out
aad
pop
fmull
sbb
loope
xchg
enter
lods
ror
jge
movsb
fistpl
imul
test
adc
mov
outsb
sahf
fdivl
aad
inc
iret
jnp
adc
sbb
mov
das
subl
jno
cmpsb
push
in
cmp
inc
sahf
mov
adc
xor
mov
aad
xchg
mov
pop
jno
mov
jnp
bound
sub
push
or
shll
jl
leave
dec
cmp
push
sbbl
inc
jl
test
inc
clc
xchg
icebp
test
addb
mov
outsb
xchg
addl
inc
jle
jg
cmp
lahf
ret
loope
cmc
cmp
adc
cmp
adc
and
lods
inc
sti
je
pop
sub
fcomi
inc
cmp
jmp
add
and
fldpi
ja
loopne
dec
push
or
jno
jo
and
fimuls
and
add
sub
fdivl
pop
xchg
xor
dec
addl
dec
rclb
adc
or
lods
hlt
push
cmp
stos
das
mov
add
push
mov
lods
repnz
mov
test
sub
into
pop
std
scas
cmp
mov
mov
push
loop
aas
and
sbb
sbb
scas
enter
push
mov
xor
lahf
xchg
sbb
xchg
ljmp
shrb
mov
imul
inc
out
jnp
repz
cmp
addl
push
fucomi
lahf
mov
iret
add
js
gs
dec
or
push
pop
test
pop
stos
or
cmp
push
sub
push
push
jb
jb
pop
sarb
lds
stos
addr16
adc
inc
mov
pushf
lret
jne
leave
or
push
push
or
outsl
scas
or
mov
rorb
dec
outsl
cmp
xchg
mov
push
daa
loopne
jae
cmc
insl
aaa
push
or
push
test
push
loope
cmpsl
xchg
out
mov
jns
mov
call
or
orl
jmp
imul
push
dec
insb
mov
int
out
xchg
jno
insb
ret
frstor
push
test
jne
mov
aas
push
aam
in
dec
rol
and
inc
pop
jae
clc
mov
jo
mov
add
test
icebp
mov
or
jle,pt
jne
ret
jbe
sub
sti
push
sbb
ja,pt
pop
data16
mov
lods
iret
mov
test
rol
iret
pushf
popa
xchg
pop
dec
inc
popf
out
int3
std
movsb
inc
jecxz
das
mov
push
add
xchg
xchg
inc
mov
dec
push
dec
cmc
pusha
mov
sub
cmpsb
or
testb
in
lods
imul
popf
stos
call
push
std
adc
sti
and
and
cmp
jno
sbb
pop
loop
jo
adc
pop
lods
pop
jge
scas
sbb
popa
cmpsb
arpl
adc
push
in
outsb
dec
fstl
push
sbb
push
sar
ret
mov
insl
lret
and
cmc
mov
cmp
adc
out
test
idiv
mov
stos
pop
inc
addr16
aam
pusha
clc
fs
sbb
sbb
in
push
sbb
shl
push
cwtl
data16
fnstenv
out
fsubrl
and
jb
push
fsubl
stc
cmp
fldcw
into
xchg
test
shlb
push
lods
hlt
out
cltd
or
push
cmc
pusha
pop
shr
call
cmpsb
mov
sahf
fiaddl
and
xor
push
mov
or
cli
mov
jb
call
inc
mov
fstl
mov
adc
imul
fwait
hlt
out
jecxz
call
and
shll
mov
lds
xchg
dec
std
and
ss
daa
jecxz
popa
pop
subw
jb
jmp
xchg
bound
mov
mov
sbb
notb
gs
jo
jnp
mov
mov
sub
cmp
stos
stos
es
inc
movsb
pop
adc
loopne
stos
test
dec
cmpsl
test
jnp
loope
aas
push
xor
icebp
std
int
movsb
and
xor
xor
jecxz
lret
push
pop
add
test
cmp
out
sub
shrb
shrb
sahf
jecxz
add
sahf
cmpsb
insb
outsb
movsl
inc
jnp
mov
xor
ret
xchg
arpl
jo
dec
sbb
or
jb
test
out
pop
mov
pop
sub
or
dec
daa
imul
inc
sbb
or
repz
movsl
push
sub
mov
hlt
xchg
out
push
test
lea
xchg
jno
lret
push
rcrl
ret
pop
rolb
stc
dec
mov
mov
push
lcall
pop
mov
mov
int3
mov
jb
lcall
inc
jg
lret
leave
cltd
dec
fildll
in
fcompl
jb
stos
lea
jle
in
add
dec
xchg
jno
cmp
add
or
add
cmp
push
adc
push
pop
and
sti
incb
add
test
xchg
mov
popf
shlb
adc
inc
and
cld
jecxz
push
fs
js
lcall
out
jp
sub
in
pop
insb
adc
adc
ja
inc
aaa
fisubl
movsb
pop
sbb
addr16
iret
add
pop
pop
clc
inc
subl
jmp
les
and
push
dec
inc
cmc
shll
popf
xchg
ret
nop
or
push
lea
mov
addr16
add
movsb
dec
dec
repnz
rcrl
out
xor
aad
sub
fidivl
dec
cmc
cmp
stos
dec
sbb
mov
mov
lahf
les
loop
ljmp
lds
fwait
inc
fsubr
inc
jbe
clc
push
xor
sbb
scas
roll
das
outsb
push
les
pop
mov
out
addl
jne
pop
div
rorb
dec
std
je
pushf
int3
je
lock
dec
mov
sbb
div
cwtl
divb
mov
imul
lods
outsb
shlb
aad
cwtl
rolb
pop
clc
jle
add
cltd
jb
sbb
xchg
mov
or
adc
repz
xchg
or
loop
testl
xchg
pop
ret
repnz
and
sarl
inc
pushf
lret
mov
and
ficoml
push
mov
arpl
xchg
out
inc
push
xlat
ja
jbe
pop
mov
xchg
push
aaa
pop
cmc
sub
imul
out
mov
pop
repz
inc
je
ds
jne
cli
add
jae
mov
sub
inc
inc
dec
shl
outsb
mov
in
xor
cli
rcl
gs
cwtl
or
cmpsl
xor
iret
or
push
fstps
inc
test
movsl
fsubs
jb
sbb
fs
scas
rorl
xor
int3
xchg
sbb
push
xor
stos
or
jno
rcrb
adc
xor
pop
movsl
js
into
popf
sbb
out
add
popf
push
pop
es
cld
lret
imul
push
repz
inc
pop
out
cmp
mov
out
sub
lea
cwtl
popa
js
lret
repnz
lock
mov
aas
mov
mov
dec
mov
fnstsw
mov
in
xchg
lret
dec
dec
lret
negb
mov
inc
adc
mov
sub
int3
mov
roll
add
out
sub
rcr
movb
mov
lods
dec
inc
jbe
sub
mov
push
daa
mov
loopne
and
mov
ljmp
inc
notb
test
imul
stc
fdivrl
in
lcall
inc
into
cmpsl
int3
movsbl
test
push
jg
rolb
jmp
cmp
add
adc
mov
xchg
push
aad
mov
sub
mov
cmpsb
xchg
scas
and
out
mov
lea
mov
shrl
xadd
add
lret
mov
xchg
xorb
fwait
xchg
pop
mov
lods
mov
int
push
ja
pop
jnp
jmp
push
aam
inc
xchg
sbb
int
mov
aaa
or
push
mov
xor
and
sbb
inc
ret
jecxz
and
repnz
jnp
cmp
sbb
subl
dec
scas
inc
stos
xchg
sub
adc
dec
loopne
and
xchg
inc
jmp
mov
fmull
push
sub
int
push
inc
imul
lods
mov
mov
sub
dec
sbb
pop
es
lret
pusha
jp
in
cmp
xor
cwtl
inc
cmc
add
cs
add
in
mov
mov
test
fwait
or
xchg
pusha
test
outsl
add
dec
lret
in
pop
test
xor
outsb
repz
inc
mov
lret
jmp
mov
xlat
jae
inc
fidivl
push
lahf
cmp
push
inc
push
outsb
dec
xchg
aas
xchg
sbb
popa
mov
jnp
nop
xchg
fildll
add
mov
mov
sub
push
xchg
pusha
mov
scas
gs
sti
xor
jl
outsb
sahf
add
jb
dec
and
or
or
xchg
movsb
sbb
mov
cmp
or
cltd
dec
add
movsl
adc
dec
jb
dec
cli
dec
adc
xor
fistpl
or
inc
pop
fidivs
ret
mov
int
xor
adc
pop
outsb
mov
or
rol
orb
jo
clc
add
mov
push
jae
xor
aad
arpl
and
mov
pusha
add
mov
and
or
aas
cmp
cmp
or
popa
pop
add
cmp
push
clc
jo
lahf
dec
cmpsl
scas
pop
pop
ror
shll
shlb
jae
mov
pop
sbb
pop
ret
pusha
xchg
cli
add
nop
lahf
pop
cmp
out
sbb
int
stos
adc
out
dec
and
sub
add
rorb
mov
lds
jae
sub
or
inc
sahf
or
sarb
inc
xchg
fstps
fs
icebp
cmp
mov
imul
jl
sub
lods
shll
popf
pop
or
leave
mov
mov
call
cmpsl
lds
inc
mov
adcb
ret
push
jecxz
push
lea
fisubl
cmp
test
movsl
scas
adc
cld
pop
leave
inc
mov
push
into
test
pop
sbbb
in
xchg
rorl
jg
mov
pop
sbb
inc
cmpsb
std
enter
pop
mov
push
add
push
jbe
loopne
ss
pusha
fcmovu
sub
or
push
push
call
dec
sbb
jge
bound
cmp
jo
xor
imul
ret
xor
inc
xlat
hlt
imul
outsl
jne
shlb
xchg
or
mov
sub
jl
jb
mov
mov
sbb
movsl
icebp
or
fldenv
enter
add
cmp
aad
fdivs
mov
xlat
negb
xchg
add
test
inc
sbb
sbb
mov
sub
jp
js
out
and
push
pop
pop
push
push
hlt
xchg
xchg
xchg
mov
outsb
les
dec
jb
jne
xchg
cmpsl
pop
pop
std
push
insl
add
xchg
testb
scas
mov
jno
mov
inc
pushl
add
jl
rcrl
jp
mov
insb
mov
aad
jge
stos
jl
ret
mov
ret
or
mov
adc
push
cmc
mov
add
popf
mov
and
ficompl
cmp
test
nop
idivb
jne
or
scas
dec
out
lea
mov
push
jle
jb
mov
fldenv
and
jne
mov
lret
test
jne
xor
call
scas
or
test
push
sub
mov
vpunpcklwd
push
negb
pop
xchg
scas
jno
jmp
push
jmp
push
sub
mov
add
cmp
mov
adc
jl
and
add
pop
jb
out
cmpsl
imul
pop
pop
out
xor
movsl
dec
int3
cli
pop
mov
xchg
push
jge
out
into
fnsave
xlat
push
cmp
pop
stos
popf
xor
sbb
mov
movsl
mov
sub
mov
jns
dec
shrl
add
pop
das
and
push
outsb
insl
imulb
inc
add
cmpsb
and
jb
aam
jno
pusha
fiaddl
or
icebp
stc
rcl
mov
out
push
fs
int
sbb
leave
jl
xor
or
mov
clc
mov
test
pop
push
popf
dec
sar
sbb
scas
out
cmp
jecxz
dec
loop
in
mov
rolb
movsb
xchg
mov
jge
mov
jecxz
inc
sbb
outsl
adc
inc
xor
inc
jp
jp
ret
push
pop
xor
mov
jne
sarl
xor
pop
test
or
fstpl
js
jbe
daa
rcrb
out
mov
test
push
shrl
out
dec
pop
in
jae
cmp
sbb
xchg
pop
inc
stos
idivl
sbb
jmp
loopne
and
nop
lret
dec
xchg
pop
cmp
aas
lock
jmp
inc
lods
int
xchg
test
fs
pop
test
in
inc
cmp
sbb
or
pop
mov
adc
dec
mov
mov
sub
push
inc
inc
fsub
aaa
into
mov
sub
fistpll
aaa
or
cmpsl
dec
ret
pop
cmc
xchg
pop
test
outsb
fidivl
retw
jecxz
insb
iret
cmp
popf
arpl
fwait
lods
pop
xchg
out
aad
mov
mov
xchg
inc
sub
je
xchg
cmp
cmp
push
cs
mov
loop
push
xchg
mov
jmp
add
bound
or
int
xchg
sbb
add
lock
loop
jae
jb
loope
sbb
or
cmpsl
add
mov
lret
lds
lods
scas
loopne
push
mov
xchg
jo
xchg
aaa
push
inc
add
cltd
adc
push
and
xchg
mov
xchg
data16
fdivl
clc
daa
aad
sahf
jbe
xchg
mov
add
scas
xor
daa
popa
lea
hlt
add
xchg
jne
push
mov
jle
mov
mov
cmpl
pop
out
sub
dec
repz
jbe
fimull
pop
add
cli
mov
dec
fnstsw
jl
add
fsubs
cltd
fstl
push
pop
push
testb
orl
mov
stc
scas
lea
xchg
aad
xor
jge
push
mov
inc
sti
mov
sti
bound
scas
sbb
int3
and
jmp
lret
into
nop
icebp
xor
mov
int
pusha
js
add
mov
xor
ss
cmp
sbb
js
or
enter
subl
cli
sub
fbstp
sbbl
or
repnz
xchg
rcl
mov
inc
stos
cmp
stos
mov
sti
mov
xchg
jno
xchg
mov
mov
in
fidivrs
xchg
leave
in
gs
test
cmpsl
nop
lret
cmp
sbb
lret
jne
mov
sahf
testb
cld
gs
push
loope
pop
imul
dec
in
cwtl
add
mov
stos
push
sub
add
xchg
sahf
mov
dec
adc
cmp
push
hlt
push
add
sub
pushf
arpl
jns
xlat
in
pop
dec
cld
adc
xchg
dec
into
dec
mov
std
dec
add
pop
add
push
jno
add
jg
clc
sbb
sbb
cmpsb
dec
mov
or
jo
jl
mov
push
lahf
pop
xchg
push
jmp
and
sti
mov
lahf
lret
sbb
xor
bound
scas
cmp
dec
inc
cmc
mov
adc
push
and
mov
fsubl
cltd
lret
scas
add
or
xchg
adc
cwtl
add
pop
sbb
pushf
adc
ret
mov
pop
inc
jp
in
add
iret
push
push
push
adc
bound
adc
mov
cmp
loope
call
push
sbb
sub
and
and
sahf
enter
add
mov
insb
insl
lahf
push
repz
lret
mov
cmp
xchg
cmp
cltd
imulb
xchg
mov
add
and
mov
and
pop
mov
inc
jno
test
loopne
cmp
into
scas
in
mov
dec
mov
pop
inc
dec
pushf
es
pop
or
and
rcrb
int3
cmpsb
pop
ret
pop
cmp
xor
and
add
xchg
mov
mov
cmpsb
pop
fwait
das
cld
xchg
test
sub
jb
jno
in
or
xlat
xchg
inc
xor
add
clc
mov
shlb
cmp
mov
xchg
call
es
push
cmp
outsb
xchg
pop
push
scas
cmp
add
mov
push
loope
imul
mov
mov
ljmp
test
xor
sete
or
jo
ds
jle
jno
rcrl
jmp
sub
jecxz
adc
xchg
scas
lret
jl
daa
loop
jnp
call
inc
clc
dec
rolb
adc
inc
mov
into
fsts
in
leave
pushf
loope
inc
jnp
adc
push
rcl
sbb
inc
pop
sub
and
movsb
mov
xlat
movsl
mov
xchg
pop
mov
xchg
fimull
and
or
in
in
add
fldpi
push
jo
sti
cs
sbb
xchg
mov
hlt
aad
aam
mov
in
addr16
xor
and
mov
jg
in
add
mov
sub
ds
enter
fstl
and
xchg
ljmp
int3
ljmp
jne
sub
inc
ret
fcomps
movsb
lods
adc
popf
jl
xor
cmp
sbb
cmp
pop
aaa
jns
out
testl
mov
int3
insb
add
mov
dec
inc
das
call
addr16
outsb
gs
daa
fldt
jns
xchg
jecxz
push
jmp
imul
ljmp
cmc
aad
aam
push
ja
push
andb
fs
sar
lahf
ret
into
or
jbe
add
lock
mov
mull
gs
mull
xchg
jge
push
mov
push
adc
notb
dec
icebp
addb
movsl
repnz
sbb
scas
out
inc
and
lret
stc
pop
sahf
push
cmp
test
mov
aaa
scas
mov
mov
sbb
iret
and
sub
fwait
push
leave
push
xchg
mov
sbb
inc
inc
out
adc
ljmp
cli
jns
les
sbb
pop
dec
pusha
imul
les
pop
lret
insb
lods
fiaddl
loopne
mov
cmovb
imull
aam
jge
aas
push
adc
in
mov
or
push
xchg
adc
adc
inc
sbb
out
adc
nop
mov
lcall
or
movsl
ret
arpl
insl
cmp
jno
adc
aam
or
out
push
and
adcl
in
xor
aam
xchg
cmp
cmp
clc
dec
adc
adc
mov
push
leave
sub
dec
clc
add
inc
lcall
pop
loope
xchg
xlat
add
jl
les
mov
leave
fninit
add
xlat
xchg
inc
xorb
xchg
dec
pop
adcl
imul
setle
adc
divl
jo
push
out
jmp
xchg
lea
cmpb
ror
out
sbb
shlb
cmp
push
test
into
fbstp
ljmp
inc
loopne
rcrl
inc
jno
dec
js
sbb
and
add
mov
xor
subb
add
fists
or
cmp
xchg
mov
scas
inc
xchg
or
jno
lods
jne
push
sub
or
adc
ss
push
or
mov
mov
cli
sbb
and
mov
dec
jnp
push
add
jle
daa
out
xchg
shll
jp
inc
push
lods
add
pop
lcall
jns
insb
data16
cld
sub
pop
lret
int
jne
pop
dec
roll
xor
sarl
xchg
xchg
ljmp
sub
fisubl
sbb
xor
dec
fistpll
test
cli
dec
jns
fwait
sbb
xchg
pushf
pop
push
add
sub
fdiv
test
inc
push
adc
psubw
lods
and
lret
insl
test
test
sub
dec
jns
cli
loop
cmpsl
cmp
pop
loope
inc
loopne
and
aam
add
mov
ljmp
or
adc
daa
outsl
test
cld
int3
sub
fs
and
fisttps
imul
sahf
es
add
adc
sbb
test
push
xchg
mov
jecxz
mov
and
jb
xor
aaa
addr16
inc
pop
jmp
jge
call
push
adc
adc
arpl
imul
iret
dec
imul
loope
cmp
mov
mov
dec
push
aam
push
fsub
or
lock
shlb
stc
lcall
jns
addr16
aad
xor
dec
je
scas
jo
push
fsubrs
or
cwtl
mov
lcall
cltd
pop
test
fldt
aas
inc
xchg
test
mov
push
add
adc
scas
fsubrp
sar
dec
ret
lods
mov
rclb
mov
and
dec
xchg
pusha
xor
pop
push
out
mov
sahf
ficoms
sub
repnz
inc
jno
adc
jns
mov
sahf
addb
repz
push
loopne
ljmp
ret
xchg
mov
sbb
inc
inc
mov
add
les
insl
xor
outsl
jo
out
sbb
jae
mov
or
mov
add
lock
imul
adc
loop
dec
fcmovnu
and
and
pop
jecxz
scas
lods
jge
std
fs
adc
ficoms
loopne
sub
sub
aas
insl
dec
int
mov
cmpsl
mov
jl
jo
add
aad
push
adc
mov
sarb
inc
lcall
bound
cmp
xor
push
in
movsl
rolb
xchg
push
mov
mov
cli
aam
mov
inc
mov
fstpl
pop
mov
inc
mov
movsl
dec
lret
rol
loope
push
push
outsb
incl
les
pop
rcll
jne
jae
sub
mov
dec
pop
add
pop
or
test
fcompl
push
mov
in
mov
lock
pusha
call
mov
inc
jp
mov
jp
push
inc
mov
push
clc
push
adc
stos
jle
adc
into
add
add
jne
fisubs
pop
mov
and
ljmp
pop
in
xchg
int3
pop
inc
or
outsl
push
xchg
fsubr
push
adc
mov
stos
mov
push
xchg
movsl
into
xlat
or
or
shlb
dec
ljmp
cmp
or
in
es
lcall
mov
dec
mov
jecxz
popf
jo
imul
popl
inc
jnp
sbb
test
xor
shrb
lods
add
dec
mov
lahf
shrl
mov
sti
add
cmp
xor
dec
cs
mov
cmpsb
dec
dec
pop
push
int3
cmp
popa
adc
scas
add
or
mov
inc
in
mov
je
fldl
sub
add
fldcw
mov
into
xchg
jg
mov
orb
imul
lret
mov
pusha
out
jg
push
icebp
daa
cmp
scas
mov
jecxz
or
pop
inc
popf
call
test
adc
dec
push
sub
test
push
xchg
in
mov
push
inc
pop
repz
adc
ds
insb
jmp
flds
int3
cmpsl
in
xor
mov
jo
xor
mov
or
inc
cltd
or
xor
enter
and
mov
cmp
fldl
add
or
jle
data16
loopne
mov
mov
or
ficoms
in
mov
mov
fwait
jle
pop
lods
jb
js
inc
mov
insl
clc
xchg
dec
cmp
in
shlb
pop
pop
jbe
add
popa
sub
jle
push
call
int3
push
loopne
mov
test
jg
mov
fsubrl
shlb
jo
movsb
sbb
jp
jmp
fcmovnu
mov
cs
mov
jb
xchg
shlb
mov
ja
jl
fcmovnu
outsl
xchg
sbb
andl
mov
push
out
xchg
stc
add
loope
dec
gs
dec
cld
testb
in
push
or
repz
mov
pop
movsl
pusha
adc
and
mov
rcl
or
jnp
sub
lods
sbb
pop
mov
pop
cltd
subl
sub
cltd
or
hlt
or
cmc
mov
mov
sbb
cmp
or
aam
mov
js
test
adc
inc
movsb
out
push
test
movsbl
test
adc
xchg
mov
adc
jb
xor
inc
out
dec
and
insb
and
popf
xor
les
jecxz
cmp
out
inc
jo
js
dec
faddl
ja
es
dec
popf
jno
ret
cmp
sub
dec
sti
imul
add
mov
and
inc
jl
daa
dec
aas
xchg
mov
cmp
ja
or
shlb
icebp
or
fcoms
adc
int
sub
int
xchg
mov
adc
insl
sbb
adc
mov
imulb
aad
and
and
jno
or
sub
xor
cli
add
adc
fucomp
dec
xchg
in
inc
push
xor
test
cmp
inc
mov
sub
insl
pushf
pop
iret
in
sbb
and
sbb
pop
jne
adc
dec
loopne
test
cmp
negl
imul
mov
loopne
cmp
leave
sub
pushw
mov
push
jnp
xchg
mov
xchg
int
add
outsb
fstpt
push
push
xchg
jge
inc
lea
jecxz
aas
jg
sub
test
ret
ret
int3
aam
dec
insl
inc
jae
sti
fisttps
sbb
cli
jmp
xchg
pop
or
jbe
jb
ss
dec
dec
mov
test
mov
rolb
mov
mov
sbb
push
imul
add
pop
jae
popf
add
testb
sahf
jmp
mov
call
pop
cwtl
ret
mov
jecxz
push
insb
bnd
movsl
push
popa
and
push
xor
inc
and
ret
dec
faddl
xchg
push
jp
mov
fsubs
lcall
mov
jnp
inc
cli
scas
xor
jle
jae
aad
enter
dec
mov
fnstcw
jb
xchg
pop
cmpsl
or
and
inc
mov
and
jno
mov
push
xchg
loopne
jb
sub
and
add
mov
mov
jne
cmp
addr16
mov
cs
ret
loopne
out
cmp
and
and
in
xchg
push
cltd
insb
test
add
jb
pop
inc
ror
pop
insl
movb
jg
pop
add
cmp
add
imul
pop
stos
mov
push
jle,pt
adc
inc
adc
fildll
cltd
dec
xchg
out
jle
dec
or
sub
sub
dec
lds
leave
lret
inc
inc
jle
orb
hlt
lods
sbb
stos
std
sub
fldenv
mov
rclb
ljmp
mov
mov
repz
loope
jne
jl
lcall
jmp
out
fcom
mov
movl
and
mov
mov
pop
pop
or
and
cmpsb
into
or
flds
cmp
pop
sahf
movsl
pop
aam
jae
jle
or
shr
rcrb
mov
mov
sbb
fnsave
fwait
shl
ds
dec
ds
insb
pop
lds
push
dec
pusha
aaa
adcl
sbb
daa
pusha
shll
negl
lret
js
xor
jbe
push
xor
xchg
in
sub
insb
aam
out
popa
test
fidivrl
push
sub
add
push
jne
cmpsl
mov
mov
out
jnp,pt
out
cmp
mov
sarl
pushf
arpl
mov
push
mov
lods
and
or
int3
push
icebp
inc
lcall
xor
xchg
fbstp
or
push
dec
mov
lret
loopne
imul
sub
inc
fdivr
push
arpl
divl
inc
mov
fwait
inc
enter
mov
dec
popf
cwtl
add
sbb
push
pop
xor
sahf
fdivr
jbe
sar
cmc
popa
sbb
mov
fwait
inc
gs
fbstp
pusha
cmpsb
test
shll
and
cmp
mov
or
adc
int3
iret
xor
clc
xlat
jno
push
add
cltd
pusha
shlb
inc
sub
push
leave
sub
insl
test
dec
inc
or
push
fsubrl
pop
cli
ret
xchg
stc
mov
shll
mov
sub
insl
xchg
adc
in
daa
mov
push
test
movsb
or
push
ret
lret
pinsrw
adc
shrl
sbb
sar
fs
into
adc
cmpsb
or
push
shll
xor
pusha
std
mov
hlt
jb
jmp
push
in
xchg
imul
scas
cmp
ja
push
fcoms
add
testl
hlt
imul
aad
pop
pop
add
mov
and
movsl
daa
fsubrl
sbb
sbb
aas
pop
push
sti
mov
push
sarl
lods
out
pop
push
push
ja
mov
and
testb
roll
push
jb
bound
in
insb
dec
dec
dec
and
testl
inc
xchg
cwtl
push
jl
add
fidivrl
pop
mov
jns
pop
sub
scas
jg
jns
xor
sub
ret
lret
push
sbb
enter
shrl
pusha
jge
les
mov
sarl
shrb
pop
mov
stc
aam
pop
pushf
daa
inc
in
cs
loop
xchg
cmp
fstps
repz
fisttpll
xor
imul
xor
cmp
add
rcr
cmpsb
mov
cmp
not
stos
aam
xchg
pop
aad
subl
int
mov
jne
ja
jle
cmp
jne
inc
fmuls
pop
fiaddl
xor
xlat
call
dec
pushf
cmp
lret
pushf
sub
nop
sbb
xchg
test
hlt
mov
sti
iret
scas
jmp
sarl
sarb
leave
std
xchg
imul
mov
mov
dec
or
cli
lcall
fxch
cltd
xchg
out
outsl
xchg
xchg
xchg
or
and
push
paddw
popa
ja
or
mov
pop
lock
insb
pop
outsb
pop
int
lret
ret
faddl
push
loope
lea
fst
fadds
gs
xor
sub
fists
fwait
sub
js
sti
xchg
leave
xor
add
pushf
cld
xchg
cmc
push
cwtl
cld
js
sarl
adc
ljmp
adc
movl
cwtl
xchg
xchg
mov
inc
mov
lods
int
mov
addb
aam
fsubr
enter
lcall
cmpsl
fisttps
mov
lret
sub
lods
lods
loop
ss
mov
cltd
mov
cmc
mov
mov
push
popl
lods
testb
mov
lret
in
stc
cld
std
sub
mov
mov
pusha
adc
dec
dec
ja
aad
cmp
scas
lret
sahf
out
xchg
add
mov
or
cmp
fadd
or
xor
and
clc
xchg
repnz
mov
push
mov
imul
addr16
xchg
xchg
pop
xorb
fsubrs
jae
gs
sub
ja
dec
mov
pop
pushf
or
in
movsb
inc
aad
cmpsb
cmp
jae
dec
popf
sbb
out
jbe
add
aad
xchg
fs
mov
dec
sbb
loopne
int3
pop
jno
ficompl
mull
mov
sub
out
or
pop
sti
pop
mov
xor
and
lds
mov
add
push
jmp
enter
push
cmp
out
jmp
daa
dec
xor
adc
dec
mov
push
cmpsl
fcmovne
ljmp
dec
adc
cs
cwtl
inc
dec
sub
pop
das
into
fisubrs
cmpsl
cs
sbb
pop
mov
lahf
clc
and
popa
icebp
sbb
xor
lea
ret
mov
pop
sbb
pusha
or
xchg
pop
inc
lock
out
mov
mov
mov
and
mov
sahf
xor
jb
idivl
add
mov
add
cmc
data16
hlt
add
jbe
and
imul
inc
inc
scas
js
popf
lret
mov
pop
adc
jb
add
in
aad
cld
scas
aam
cmp
fidivs
in
adc
adc
add
fiadds
shlb
push
and
outsl
rclb
movsl
jno
sub
cmpsb
fisubs
add
pop
clc
mov
shld
into
fs
dec
cmp
mov
jecxz
push
xchg
add
arpl
xor
xchg
cs
xor
scas
add
add
mov
es
xor
adc
call
xor
sahf
dec
pop
mov
negl
lock
push
fsubrp
pop
pop
mov
sbb
inc
scas
mov
sbb
dec
je
iret
jns
xchg
mov
rclb
lods
loopne
outsb
jnp
test
pop
iret
add
or
in
movsb
xchg
pop
cld
call
add
inc
jecxz
xchg
pusha
data16
mov
mov
inc
sbb
sbb
mov
sbb
inc
cmc
js
and
daa
pop
mov
imull
scas
fwait
lds
sbb
rorb
adc
ret
xor
adc
mov
jo
cmpsb
lret
jmp
push
mov
in
sub
hlt
addb
idivl
ret
xor
je
push
out
pop
mov
dec
or
pop
jp
daa
mov
hlt
test
scas
mov
or
inc
jnp
adc
shll
cmp
cmpsb
loopne
xchg
test
pop
pop
xchg
pop
pop
stos
cs
sub
notl
mov
fsubrl
jle
inc
loope
mov
mov
rcrb
stos
push
out
movsb
nop
cmp
push
std
dec
xchg
fistpll
xor
dec
aas
out
ds
into
stos
push
mov
cmc
lock
adcb
mov
and
test
or
stos
mov
xor
jle
sub
mov
std
add
pop
mov
popa
setnp
mov
mov
pop
fdiv
incl
jp
addr16
imul
mov
dec
or
stc
pop
inc
mov
or
test
jnp
mov
add
sti
mov
sahf
push
add
cmp
cld
jae
cmp
outsb
push
mov
scas
pop
mov
xor
je
sub
push
jno
push
sbb
mov
mov
mov
or
push
push
cmpsl
mov
aas
arpl
or
lock
addb
mov
xor
aam
add
mov
or
pop
mov
push
pop
mov
mov
lahf
mov
clc
cmp
sbb
imul
les
leave
xor
loopne
arpl
je
sub
push
push
loope
das
mov
inc
dec
aaa
xchg
fcoms
faddl
ret
rcr
call
and
mov
adc
or
loopne
pop
adc
lods
mov
mov
int3
sbb
lods
xchg
jae
js
cli
push
loopne
imul
sub
sbb
scas
mov
in
sub
and
rorl
fld
mov
cld
sti
inc
test
push
mov
lahf
pushf
sahf
fadds
pop
adc
dec
jae
mov
xchg
movsb
ja
sub
imul
xor
xor
pop
xchg
test
push
or
lcall
aaa
mov
rcr
jmp
add
gs
xchg
or
adc
xor
xchg
push
jl
shr
xchg
shr
outsl
leave
in
push
adc
inc
sbb
in
mov
xchg
xor
inc
and
stos
mov
ja
clc
int
mov
mov
mov
sahf
add
pushf
scas
int3
gs
jae
ret
mov
popf
jmp
or
xor
outsb
sub
and
stos
sbb
loopne
sbb
movsl
xchg
push
mov
push
mov
sti
insl
pop
imul
outsb
jg
notl
clc
dec
pop
imull
push
mov
push
test
push
test
jno
sub
cmc
pop
ret
mov
inc
inc
mov
inc
aaa
xor
mov
inc
cwtl
insb
xchg
inc
push
into
fnstenv
popa
pushaw
fs
inc
jge
mov
and
hlt
out
sbb
cmc
test
pop
add
add
outsb
mov
sub
push
mov
pop
sub
mov
sub
sbb
xchg
mov
add
addr16
cmc
jns
inc
loop
adc
xchg
loope
dec
adc
and
xor
mov
add
pop
ret
inc
dec
mov
mov
push
xor
inc
aaa
cwtl
mov
cwtl
add
adc
aas
pop
stos
in
decb
pop
jnp
test
flds
jl
out
xor
cltd
lea
cmpsb
sbb
pop
xchg
hlt
stos
mov
and
icebp
add
jp
jae
add
xchg
add
dec
push
jo
xchg
test
sbb
cmp
pop
inc
insl
jg
popf
lods
push
je
or
sub
in
ja
loopne
push
mov
mov
sub
pop
xor
sbb
adc
jns,pn
jbe
cld
or
adc
jge
ljmp
cmpsl
mov
ja
jae
jecxz
mov
rcl
push
jne
push
and
popa
push
ret
inc
in
dec
cmp
and
call
loopne
fucomp
ret
mov
rolb
lea
dec
and
ljmp
cmp
and
jl
in
push
add
testl
or
xchg
adc
jl
mov
jge
test
push
xlat
pop
sbb
mov
dec
or
outsl
jle
ljmp
dec
jns
and
xchg
jecxz
mov
cli
rolb
pop
adc
loope
lahf
loop
pop
and
test
dec
aam
push
faddl
pop
jo
mov
xchg
sbb
mov
push
lods
sub
cwtl
cmp
in
daa
ja
in
push
add
mov
test
push
pop
lret
xchg
push
inc
and
add
sub
mov
sub
lcall
cli
sahf
stc
test
cmp
sub
xchg
es
and
ffree
and
js
mov
sub
popf
or
cld
mov
mov
popa
mov
jbe
aas
and
adc
or
stos
jns
push
ja
adc
push
xchg
imul
add
pop
jns
mov
push
sub
fisttps
sbb
push
pop
dec
jl
pop
rcr
cmp
mov
test
scas
icebp
xor
or
fldt
and
shl
or
std
xor
or
js
lret
and
cli
jle
jmp
pop
push
jg
sar
jmp
xor
inc
xchg
mov
adc
lods
lds
sub
mov
in
loope
incb
scas
and
push
out
dec
push
xchg
iret
fs
xchg
gs
jp
jp
ds
cmc
stos
outsb
stc
enter
out
cld
mov
jnp
cli
fwait
mov
add
mov
pushf
cmpw
inc
dec
lret
lret
inc
iret
xlat
xchg
or
cltd
rcl
mov
add
loope
push
in
mov
iret
add
mov
outsb
loop
jb
mov
or
xor
and
pop
adc
inc
pop
jg
push
push
xchg
dec
es
jo
mov
jg
jae
xchg
imul
pop
test
inc
cmpb
addl
push
lock
test
cvtdq2ps
pop
popa
out
or
out
sarb
fnsave
fstl
sbb
iret
subb
xorl
mov
andb
out
scas
add
push
mov
cmpsl
popa
adc
cmp
xchg
push
xchg
cmp
mov
push
mov
enter
lea
push
aad
sub
lods
in
mov
out
adc
das
sbb
cli
fcmovnbe
shrl
xor
or
lret
fwait
and
push
or
jb,pn
push
nop
imul
stos
sub
jge
imul
inc
jge
stos
jo
lds
lds
ja
insb
xor
push
xor
jb
clc
stc
std
add
mov
inc
or
jle
add
jne
sub
clc
sarb
and
das
dec
mov
and
out
push
sub
jl
xchg
xchg
pop
addr16
daa
xor
cmp
fnsave
push
dec
push
call
xchg
in
xor
testl
inc
in
daa
cltd
movb
adc
sbb
xchg
dec
fucom
lds
pop
fdiv
pop
push
and
xor
sub
push
jo
jmp
mov
push
fwait
cmc
aas
mov
shll
shll
sub
xchg
sahf
mov
std
in
cli
xor
aad
xor
lea
call
mov
jp
imulb
pop
shll
dec
lret
out
ds
push
add
jb
mov
add
push
sbb
gs
leave
sbb
inc
push
jae
rorl
out
inc
outsl
int3
mov
ss
mov
cmpsl
cmpsb
js
xor
lods
xchg
pop
mov
cmp
xchg
ret
icebp
mov
stos
imul
xchg
in
adcl
add
push
cli
orl
imul
add
pop
js
pop
inc
or
clc
cld
mov
mov
hlt
das
cmp
cmpl
sub
and
xor
in
subl
or
loope
cmp
insb
pop
shll
sub
icebp
fwait
outsb
cmp
cmpsb
inc
jle
movsl
inc
xor
aaa
adc
loope
add
push
mov
cmp
out
notl
insl
jnp
xchg
gs
int3
xchg
faddp
push
inc
dec
gs
movsl
scas
mov
sbb
cmp
xor
insl
lret
jg
insb
mov
inc
ja
iret
mov
or
test
or
mov
das
gs
cmp
or
jmp
pop
pop
pop
xor
dec
je
push
repz
dec
xor
sbb
mov
cmp
in
and
hlt
xor
lea
cmc
idivl
repnz
xchg
jge
adc
xchg
pop
pop
test
lcall
inc
lock
push
xchg
sbb
sub
iret
xchg
shl
pop
adc
adcl
jno
insl
inc
mov
pop
outsl
cmp
pop
mov
xor
sti
fcompl
iret
and
out
bound
cld
decl
pop
jne
ret
in
xor
sbb
ficoms
xchg
push
mov
cmp
add
stos
lret
shr
sti
gs
jns
test
lods
insb
imul
iret
add
adc
mov
jns
ljmp
jge
mov
xchg
and
pop
push
bound
mov
cltd
out
js
sub
dec
push
jmp
jne
sti
add
cli
addb
shll
shrl
daa
ja
repnz
and
dec
inc
adc
mov
sbb
mov
xor
sub
xor
iret
repnz
arpl
or
pusha
in
insb
jnp
xchg
dec
jmp
push
mov
xorl
andl
adc
fidivs
push
mov
loopne
dec
jno
jg
mov
inc
in
inc
or
xchg
loopne
cmp
or
ss
add
or
test
icebp
xchg
test
loopne
shlb
mov
mov
mov
arpl
mov
sbbl
pop
dec
jmp
push
sbb
ja
mov
icebp
jbe
shll
xchg
rclb
in
jmp
add
xchg
inc
das
std
push
cwtl
push
add
daa
push
dec
loop
or
lret
pop
test
xor
cmpsl
sub
push
test
popa
jns
test
push
addr16
mov
jp
jo
loope
xchg
mov
cmp
jg,pt
loop
xchg
mov
iret
add
lods
pop
call
add
fimull
pop
fistpll
push
lock
cmp
jmp
mov
ror
repnz
dec
jno
cmpsl
addr16
push
adc
loope
push
mov
jmp
xor
sbbl
mov
or
in
mov
sti
out
dec
pop
ljmp
and
outsl
dec
sub
bound
jg
shl
sub
push
dec
mov
push
mov
lock
movsl
push
jle
test
neg
les
lock
ja
stos
xchg
sbbb
push
xchg
jge
xchg
lret
cmp
sub
test
popa
cmpl
enter
in
inc
cmp
mov
adc
sub
loope
test
push
sub
fidivs
cmpl
mov
dec
cmp
cmp
lods
mov
and
shrb
mov
adc
pop
cwtl
mull
lret
pop
jle
xor
cmp
mov
test
pushf
out
mov
sub
cld
mov
sbb
xchg
add
mov
dec
xchg
add
aaa
xor
lret
movsb
xchg
loope
cmp
cmpsl
mov
xchg
mov
pop
repz
push
in
cwtl
fcomp
fmuls
mov
adc
add
push
stc
fsubrp
adc
dec
inc
inc
pop
fists
movsl
add
and
xchg
clc
sbb
js
adc
mov
push
adc
dec
fisubrl
sub
sbb
sub
inc
out
idiv
add
das
int
pushf
push
dec
arpl
adc
and
out
sbb
jl
cmp
int3
fdivrl
add
fld1
xor
push
lods
jle
jecxz
sub
das
lods
notl
hlt
shrl
xor
mov
and
fisttpll
les
sbb
sbb
xrelease
aaa
mov
mov
bound
fsubs
cltd
xor
imul
dec
adc
fmuls
inc
fmul
leave
stos
scas
inc
xor
data16
xlat
ljmp
ja
fwait
pop
mov
int3
jns
xor
psubw
test
inc
push
xor
cwtl
xchg
icebp
out
aas
mov
imul
and
sub
in
out
add
mov
mov
fsts
lret
adc
fwait
pop
jne
xchg
dec
xchg
lcall
dec
clc
scas
sub
jae
lahf
mov
or
leave
push
xchg
mov
repnz
rorb
push
test
ljmp
mov
testb
cwtl
inc
pushf
ljmp
push
sub
push
lcall
movsl
pushf
push
in
adc
cmp
sbb
es
xchg
rcll
sbb
insl
adc
mov
or
mov
and
ficoml
lret
movb
aaa
sbb
lcall
sbb
int3
pop
pop
inc
clc
lea
jge
in
pop
sub
test
pop
into
push
mov
xlat
fbld
pop
test
pushf
das
negb
push
cmc
mov
push
gs
stos
mov
mov
scas
sbb
mov
lcall
lahf
loope
pushf
out
sbb
push
fidivrs
call
xchg
ljmp
aad
insl
rorb
pop
jnp
sub
jb
dec
pushf
scas
jne
cmp
mov
mov
repz
int3
dec
or
negl
ret
js
adc
sub
adc
mov
data16
sbb
jecxz
fcompl
dec
add
sub
push
jbe
out
lcall
gs
je
push
pop
push
aad
pop
jae
sarb
cmp
or
mov
dec
push
jl
insl
sub
lods
push
sbb
hlt
xor
pop
jp
test
fidivrs
outsl
dec
pushf
cmp
lahf
jp
xor
nop
adc
test
stos
pop
lahf
pop
pusha
lea
adc
adcb
jae
jae
gs
add
lret
and
movb
and
es
xlat
lahf
out
test
mov
and
adc
insl
pop
pop
idivb
sub
test
in
icebp
mov
push
adc
mov
rcll
into
push
jp
inc
or
mov
dec
push
fnsave
push
popf
cmp
add
cld
imull
xor
fisubl
lea
add
jns
and
sbb
clc
xchg
div
mov
das
cmp
inc
ret
add
jg
add
sbb
pop
rcll
call
jecxz
sub
psubusb
and
lea
cli
rcl
inc
jecxz
push
jnp
or
mov
dec
sbb
cmp
sub
adc
loopne
push
movsl
pusha
int
addr16
fstl
push
orb
into
popa
push
cmp
pop
das
cmpsl
pop
jge
push
stos
pop
jb
addr16
loop
sbb
notb
repnz
out
leave
stc
pop
jae
aas
cmpsb
push
mov
inc
sbb
jmp
lret
std
inc
setle
outsb
or
rcrl
shll
cmp
push
cltd
insl
gs
mov
test
fsubrl
jae
cmp
xlat
inc
dec
xchg
lcall
ljmp
fiadds
inc
mov
mov
adc
or
xchg
hlt
shl
add
xlat
add
in
sbb
mov
ret
push
shll
dec
mov
and
in
mov
xchg
or
sub
into
mov
pop
scas
adc
lock
cmp
pop
push
into
out
jmp
lock
lds
add
cmp
cmp
push
out
test
out
mov
pop
pushf
adc
inc
push
clc
cmp
mov
clc
loopne,pt
test
pop
cmp
fcompl
inc
aaa
stc
out
mov
push
or
rolb
sbb
pop
mov
iret
test
pop
push
xchg
mov
mov
push
insb
mov
push
and
shrl
out
test
cmp
cmpsl
aaa
adc
mov
std
sub
repz
or
mov
or
sub
mov
jge
fsubl
xchg
outsb
sbb
mov
js
sub
pop
sub
out
repz
xor
in
nop
int
loopne
or
and
pop
and
dec
mov
pushl
loope
xchg
xor
movsb
jmp
mov
bnd
ljmp
cmp
int3
scas
jl
adc
dec
call
jecxz
jnp
aas
rcl
sbb
into
add
or
jbe
daa
mov
imul
sbb
mov
xchg
fdivrs
imul
lret
lods
cmpl
sub
fstpl
jl
xor
imul
iret
xor
inc
mov
add
add
xchg
mov
or
dec
jge
push
insb
stos
xchg
cmpsb
push
cmpsb
jae
and
and
adc
fistl
xchg
jp
or
jge
mov
icebp
mov
pop
in
or
inc
push
or
jae
push
std
outsb
jge
out
jmp
xchg
stc
xor
sub
cmp
jmp
dec
loopne
sbb
mov
in
in
test
loope
in
ret
or
outsb
mov
negl
mov
pop
sbb
int3
jle
mov
popf
sub
mov
dec
and
movsb
jno
inc
push
in
lret
jge
xchg
dec
xor
mov
lds
push
daa
or
push
cmpsb
test
or
xchg
add
notl
test
pushf
and
dec
adc
lods
push
pop
sbb
fcoml
push
test
fs
lods
mov
jbe
mov
cmpsb
dec
out
in
mov
fs
insb
add
nop
dec
and
push
mov
inc
mov
mov
pop
insb
pop
fisttps
xor
sbb
mov
sbb
push
fistl
add
dec
sbbl
aam
roll
fs
js
mov
repnz
jnp
pushf
inc
ja
arpl
sub
pop
pop
sbb
gs
in
cli
xor
imul
cs
js
std
push
lods
and
pushf
sub
inc
push
rorl
xchg
jle
mov
insl
jge
shrb
repnz
inc
inc
and
jle
xchg
add
pop
into
mov
sbb
data16
js
mov
adc
pop
scas
divps
dec
aaa
loop
mulb
es
mov
mov
dec
arpl
sub
fsubs
stc
scas
ja
and
jge
daa
cmc
inc
push
insb
mov
add
pop
adc
fdivrs
addl
rolb
mov
and
fwait
mov
aam
lock
jg
sahf
test
mov
iret
sbb
or
xchg
mov
adcb
xchg
add
fwait
cmpsl
jl
cmp
std
inc
mov
xchg
or
scas
sar
pop
push
lods
mov
les
add
sbb
jnp
lcall
push
jge
inc
leave
jns
jae
mov
pop
fchs
fstpl
in
jge,pt
or
dec
daa
inc
pop
mov
mov
or
pop
mov
and
push
xchg
fidivs
adc
xchg
mov
sub
add
ss
pop
imul
shlb
xchg
les
adc
les
cmpb
test
fsubs
mov
push
out
movsb
call
adc
cmp
xchg
jb
push
stos
and
mov
xchg
or
cmpsl
push
ja
mov
sub
push
sahf
out
pop
cmp
cmpsl
pop
fildl
add
ret
rcl
scas
sbb
cli
outsl
lahf
jne
nop
scas
test
int
push
or
fs
stc
push
pop
in
pop
and
stos
cmpsb
mov
xchg
pop
int
push
int3
push
dec
pop
in
jnp
int3
xor
aaa
insb
movsb
out
dec
mov
jp
sub
push
mov
mov
jno
add
jge
xchg
jle
repnz
xchg
out
mov
sbb
push
add
xchg
cmpsb
pop
mov
ficoms
fstpl
shl
xor
test
xchg
push
testl
addl
mov
pop
add
shll
cld
cmp
xor
mov
vpshlw
mov
js
lods
dec
jae
pop
ret
dec
dec
mov
sahf
pop
aas
iret
je
sbb
and
outsl
orb
xchg
add
sub
nop
sbb
jge
mov
andl
dec
fwait
rorb
mov
or
insb
mov
and
push
mov
pop
cmp
cmp
lret
cmpl
out
jno
cs
xor
push
test
push
and
ljmp
sub
insb
mov
imul
popa
or
pop
negl
inc
mov
popa
test
lret
inc
adc
daa
or
mov
rol
xchg
jle
aas
mov
dec
mov
mov
or
inc
mov
test
and
jle
inc
aam
jmp
cli
ds
pop
mov
adc
xchg
outsl
adc
adc
sbb
fnstsw
ret
pop
dec
jecxz
mov
add
pop
inc
cmpsl
push
cmp
mov
cmc
cmc
sarb
inc
jae
fsubl
lea
pop
mov
pop
push
and
std
lret
adc
xor
pop
ss
mov
or
push
push
je
xor
jae
adc
fdivrl
adcl
cmpsb
mov
cmpsb
movsl
adc
aad
push
arpl
rcrl
pop
or
xor
add
sahf
call
mov
xor
xor
push
mov
adc
cwtl
das
cwtl
cmp
roll
add
stc
rcrl
add
jp
add
hlt
bound
scas
loope
inc
les
mov
add
pop
fidivrl
add
sub
loopne
stc
insb
pop
in
pop
cbtw
test
outsb
fsubp
push
test
xchg
insb
or
in
call
sti
jae
rolb
lods
pushf
mov
push
xchg
xchg
jmp
mov
push
aam
mov
pop
loopne
shr
jno
push
aad
sbb
je
dec
xor
nop
adc
jae
jne
dec
jg
xor
jne
or
cmpsb
mov
ljmp
out
imul
lret
lret
or
push
sub
xchg
outsl
inc
inc
inc
stos
sbb
sbb
arpl
pop
fcoms
inc
pop
push
int3
pop
fsts
xchg
cwtl
push
inc
xchg
add
xchg
test
or
stc
xchg
add
shll
pop
and
cmp
imul
lcall
subl
jge
cmp
bound
jae
iret
ret
mov
dec
mov
insb
idivb
adc
cmp
pop
xchg
ficompl
cli
pop
mov
stc
shll
pop
dec
xor
fistps
out
stos
scas
mov
push
sti
fisubrl
test
aas
jmp
sti
lcall
sub
sub
std
test
mov
adc
push
xchg
les
notb
out
in
in
sub
inc
inc
mov
sbb
pop
push
fsubrl
js
je
iret
scas
xchg
cmp
ja
cltd
add
jnp
jg
decb
sarl
les
xlat
or
pop
dec
mov
adc
subb
mov
dec
sbb
divl
cmp
pop
inc
and
sbb
mov
rorl
dec
fucom
sub
push
loope
pushf
call
push
clc
xor
or
mov
mov
push
addr16
out
pop
push
jo
sub
mov
sbb
push
and
xor
sbb
mov
enter
nop
aad
ret
jb
push
xchg
push
fcmovnu
xchg
arpl
and
rcrl
imul
pushf
sbb
xor
int3
sub
fisttpll
cmp
imul
mov
pause
mov
mov
rclb
adc
loop
xorb
int
dec
jnp
mov
jg
push
lcall
mov
add
sbb
popf
ljmp
push
push
push
push
shll
pop
lahf
mov
cs
es
into
jl
inc
cli
and
nop
mov
pusha
loop
mov
test
fstl
sbb
cmp
stos
ljmp
out
cmp
pusha
into
notl
jmp
decb
ljmp
das
repnz
insb
push
xchg
push
fwait
insl
xchg
into
lods
xchg
jae
xchg
inc
adc
ja
xchg
fnstenv
or
nop
jno
push
sub
les
imul
fwait
add
das
stc
mov
icebp
mov
inc
dec
popa
or
pushf
add
cmp
mov
scas
cmp
mov
sub
mov
push
ret
adc
cmp
mov
jle
iret
mov
mov
jle
subb
daa
addr16
xor
mov
adcl
loope
test
cmp
cmp
adc
mov
les
mov
lods
cmp
cmp
mov
pop
cmp
push
incl
icebp
or
mov
push
sbb
ss
mov
fwait
dec
ds
mov
data16
xchg
jmp
pop
popa
cmp
testl
cmp
leave
sbb
push
cwtl
in
mov
xchg
out
or
mov
cmp
int
imul
lds
stc
xchg
outsl
push
inc
rolb
dec
or
jae
pop
mov
mov
fs
enter
dec
aad
add
adc
pop
add
lods
xchg
jmp
ret
cmp
xchg
push
xchg
inc
cmpsb
mov
pop
or
aaa
fs
iret
gs
fistl
inc
jmp
cmpsl
mov
movsl
dec
pop
mov
movsb
push
loopne
ljmp
imul
mov
pushf
pusha
dec
pop
jl
cmpsl
push
subb
gs
repz
cmp
inc
pusha
pop
ja
push
inc
pop
clc
xor
inc
pusha
sub
cs
shrl
adc
xor
aad
sub
or
jle
cmc
out
push
jae
cmp
sahf
sub
cmp
jle
stos
outsb
mov
bound
sbb
pop
notl
cmp
icebp
cmp
loop
add
ljmp
xlat
xor
inc
lds
mov
jns
mov
daa
push
xor
sahf
jns
repnz
cmp
ret
mov
dec
add
pop
in
and
mov
hlt
mov
insb
xor
dec
shll
aad
inc
jmp
rolb
jnp
jle
mov
xor
mov
cld
leave
fnop
aas
outsb
sub
lret
push
je
je
jl
mov
out
xchg
add
jns
daa
jae
call
scas
jno
push
xchg
dec
sub
pop
lcall
jg
cmp
pop
fldcw
in
repz
sub
ficoms
and
mov
mov
mov
dec
push
lds
lcall
enter
dec
je
rorb
in
and
cmc
cmp
xchg
fmul
addr16
jg
js
push
jmp
ljmp
xchg
lea
test
adc
test
lret
jecxz
sub
xor
push
pop
push
fstp
jno
lret
or
push
addr16
jg
pop
cli
push
jb
in
mov
inc
push
js
xchg
jmp
pop
dec
mov
fucomip
es
outsb
orb
sbb
int3
and
cmp
jecxz
ret
sub
scas
test
jge
cmpsl
fwait
inc
jb
cmp
xor
or
mull
call
sub
lods
push
les
xchg
lret
sbb
jecxz
fwait
xchg
ljmp
daa
jne
test
sub
outsb
cwtl
vunpckhps
ret
adc
decl
push
sbb
jp
in
lcall
and
add
mov
scas
add
movsb
mov
push
std
mov
outsb
sahf
jb
jae
sub
mov
mov
outsl
enter
icebp
xor
push
sbb
pop
in
fcomps
sub
fnstcw
out
dec
cmc
sar
xor
arpl
inc
dec
xchg
adc
std
or
mov
xorl
cmp
pop
mov
pop
xchg
add
repz
jns
dec
adc
in
adc
or
add
addr16
push
push
ja
cld
or
and
shlb
jp
pop
clc
test
cwtl
aas
out
in
adc
or
inc
fcoml
loopne
xchg
mov
pop
cli
sbb
xlat
aas
or
push
testl
inc
shll
inc
ss
jo
inc
xchg
push
popl
or
repz
adc
mov
mov
jno
cltd
addb
orl
sub
jns
mov
sub
push
mov
add
dec
test
popf
loop
lods
fldenv
inc
inc
imul
cmpsb
jbe
dec
icebp
pop
mov
movsb
mov
or
dec
gs
mov
mov
add
mov
xor
hlt
bound
ja
sub
sub
test
call
loop
lods
mov
pop
es
push
movsb
fadds
lcall
xor
xorb
pop
sub
push
push
mov
andl
fwait
sub
fcoms
push
sbb
pop
mov
or
das
jge
add
fdivrs
addr16
dec
iret
sti
jp
push
fldt
sahf
add
std
lret
adc
push
lods
loop
aad
mov
sahf
or
push
or
cld
jno
pop
pop
sbb
repnz
daa
movsl
dec
dec
lds
pusha
aas
xchg
dec
movb
sbb
imul
push
sahf
ret
xlat
dec
fmull
sub
movb
les
shll
pop
dec
or
or
js
mov
push
jno
pop
jmp
enter
addr16
mov
dec
out
popf
aaa
mov
or
jae
lret
stos
mov
jnp
ljmp
test
dec
dec
faddl
in
popf
dec
std
cmpsb
mov
addr16
lock
outsb
add
test
xchg
sahf
jg
insb
lock
repnz
lods
outsl
pop
lock
iret
mov
jge
in
out
add
inc
leave
testl
lea
psllw
mov
xor
ret
xchg
sub
adc
pop
add
fsubs
xlat
stos
lcall
adc
add
xchg
inc
inc
mov
add
push
lcall
or
inc
xchg
ss
adcb
pushf
and
mov
cmp
push
pop
pop
inc
mov
sbb
jns
iret
push
imull
loopne
repz
out
jno
out
jb
cmp
scas
or
icebp
jl
repz
iret
test
loop
movsl
or
fldpi
mov
into
or
mov
pminub
pop
into
insb
xor
dec
js
pop
adc
frstor
mov
or
out
and
inc
xor
or
pop
je
and
lahf
xorps
fdivs
inc
fcoml
cmp
jae
jb
sbb
jmp
test
imul
inc
js
sahf
test
ja
das
and
repz
sub
jp
pushf
add
cmp
aas
in
push
push
icebp
rcrb
and
js
ds
push
and
icebp
sbb
xchg
mov
in
sti
mov
adc
pop
dec
add
xchg
mov
mov
cwtl
dec
xor
pop
cltd
inc
repnz
mov
fwait
add
jl
fs
jae
inc
and
mov
fnstsw
sarb
push
or
push
adc
ja
push
mov
xor
fnsave
aas
test
or
sbb
arpl
and
xchg
rol
fdivp
jo
inc
mov
xchg
ljmp
loop
cld
jl
mov
pop
cwtl
and
js
dec
pop
mov
sub
xchg
cmp
push
cli
inc
lahf
mov
push
ss
out
xor
idivb
sub
lods
cmpsb
or
fbld
aas
loop
push
xchg
das
jo
pop
mov
roll
sub
mov
addl
leave
mov
push
out
and
jmp
xor
inc
scas
sub
mov
mov
pushf
in
fucomp
mov
jbe
cmc
xor
addb
mov
scas
pusha
test
push
pop
adcl
mov
fisubl
repz
jae
cmp
test
add
and
popa
fs
lea
xor
adc
inc
xor
mov
jnp
adc
mov
loopne
negl
jmp
cmp
loope
fisubl
divl
push
mov
sti
push
pop
push
xor
jns
mov
ja
jge
push
adc
mov
pop
cmc
test
xor
push
pop
lods
lock
pusha
mov
xchg
adc
adc
dec
mov
clc
rolb
mov
or
add
clc
xchg
movsl
out
inc
idiv
ret
mov
stos
pandn
mov
stc
aaa
ljmp
out
or
lcall
lea
xchg
fbstp
das
ficoml
xchg
shll
xchg
jb
lret
xor
push
mov
cmpsb
scas
and
ja
jle
mov
inc
ja
add
lret
mov
pop
mov
clc
inc
aaa
xor
pop
sub
pop
xchg
repnz
dec
stos
fmull
es
push
stos
in
sub
jae
adc
or
cli
jae
add
mov
sub
adc
cld
mov
fisubl
cld
xchg
negl
mov
aaa
pop
arpl
gs
sub
ret
stos
arpl
popa
adc
sbb
add
jb
inc
push
arpl
mov
jp
dec
dec
mov
hlt
inc
add
xor
push
je
inc
and
pop
stos
into
sbb
call
mov
xchg
adc
dec
fiaddl
dec
sub
sbb
nop
and
xchg
enter
mov
add
inc
and
popa
push
call
sbbl
sti
mov
adc
sbb
rcrl
ficomps
js
cmp
jbe
repz
lcall
pop
jae
dec
pop
push
testb
outsl
les
push
push
dec
clc
and
ljmp
cwtl
lret
sbb
xor
mov
cli
aam
add
int
adc
inc
fildll
mov
pop
sub
push
sbb
inc
aas
cmp
dec
xlat
and
sub
daa
lods
jbe
fwait
iret
dec
outsl
int
and
xchg
xor
mov
and
sbb
xlat
cltd
insb
cs
push
into
and
mov
xor
and
mov
loopne
mov
std
rcll
mov
aad
repnz
mov
test
cmp
pop
add
cmp
lcall
xor
test
out
ud0
xor
sub
imul
fstpl
cs
push
sarb
mov
clc
in
pop
ds
sti
scas
mov
inc
out
data16
sub
rclb
call
xchg
fsts
mov
mov
jbe
nop
push
and
aas
push
insb
shll
loop
mov
mov
inc
and
jmp
in
addr16
sub
mov
les
fs
lds
jne
and
lret
mov
out
pop
cld
dec
sbb
sti
add
out
leave
lcall
mov
xlat
enter
lret
hlt
jg
pop
aad
loop
add
mov
jge
add
insl
dec
pushf
aas
xchg
xchg
inc
aas
pop
insl
mov
mov
mov
cmp
lret
cmp
sub
js
sbb
subl
mov
in
mov
bound
mov
mov
xchg
mov
fcoml
cmpsl
ret
shll
rorl
gs
jge
xchg
adc
mov
cld
fldt
movsl
add
loop
addr16
in
xor
movsb
jg
push
push
xor
jnp
popa
fwait
repz
imull
fwait
lahf
gs
inc
xorb
notb
or
ja
pop
mov
js
out
or
test
mov
xchg
push
aam
sub
ljmp
pop
int
andl
mov
arpl
pop
cs
cmp
insl
cmp
idivb
inc
into
and
xor
bound
es
jg
pop
and
adc
pushf
mov
cmpsb
xchg
dec
push
dec
aad
into
jno
xor
in
mov
pop
push
cmp
in
aas
sub
daa
lahf
je
lea
xchg
popf
push
xor
fistps
push
pusha
pop
push
insl
cmp
cmp
js
das
ljmp
sub
cld
repz
and
icebp
in
pop
push
rcl
daa
std
inc
decb
add
xchg
andl
in
pop
leave
dec
sub
xlat
xor
cmp
cwtl
adc
cmp
icebp
pop
inc
fs
xchg
push
push
dec
xchg
mov
xchg
pop
sub
cmc
mov
xchg
jbe
mov
rol
pmuludq
cmp
dec
or
mov
clc
fwait
test
loopne
xchg
push
pop
mov
add
jg
cmp
sbb
push
inc
pusha
cli
jp,pn
in
movsl
cmp
loop
imul
test
cmp
loopne
les
enter
leave
stos
lret
dec
inc
outsb
adc
ss
icebp
add
clts
notl
lahf
pop
adc
aad
push
shrl
pusha
icebp
fisubs
adc
mov
inc
call
jge
jb
in
and
out
push
adc
pop
lret
cltd
adc
sbbl
clc
fwait
je
fnstenv
outsl
leave
jmp
fmuls
xchg
add
mov
stos
pop
and
pushf
aad
jp
inc
cmc
dec
popa
mov
out
cmc
test
sub
call
pusha
scas
cmpsb
loope
xor
push
sub
loop
mov
xor
add
jno
stos
insl
sti
push
test
sub
test
push
cmp
sbb
mov
add
fs
and
je
xchg
idiv
or
ss
fadds
mov
sub
xor
push
mov
test
fwait
out
std
mov
jle
call
js
jge
push
out
xchg
adc
into
imul
cmp
ficompl
dec
aad
inc
lds
mov
pop
ret
mov
scas
mov
enter
imul
mov
xchg
push
push
orb
cltd
bt
popa
push
pop
aad
and
mov
cwtl
pop
js
subb
dec
sbb
cli
outsl
mov
push
dec
mov
je
inc
push
and
xlat
adc
add
ret
repz
push
lock
into
pop
fidivrl
cmp
in
mov
cs
lcall
imul
bound
adc
xlat
jno
jp
jecxz
add
repz
test
fst
and
out
jb
and
movsl
inc
dec
pop
stc
sarb
rolb
xchg
out
shlb
push
jge
add
push
mov
pop
push
lds
sub
sbb
or
fwait
and
sub
in
mov
xchg
outsb
les
insl
xchg
std
aaa
fimull
push
sbbb
or
add
icebp
xor
push
lock
cmp
sbb
jnp
call
outsl
inc
cmpsl
inc
loopne
mov
int
mov
jle
sti
cli
test
adc
iret
cmc
sbb
int
daa
enter
sbb
aad
dec
rol
xchg
jo
dec
lock
cmp
xor
inc
ds
cmpsl
xlat
cmp
jg
test
daa
gs
xor
mov
clc
or
sub
in
ret
movsl
jbe
ficompl
stos
dec
sbb
testb
sbb
jmp
enter
cltd
push
pop
push
aad
cs
jg
in
xorb
mov
test
sti
add
aaa
pop
loopne
icebp
jbe
cmc
pop
movsb
and
push
daa
adc
push
xchg
lea
cmc
adc
orb
dec
inc
and
or
pusha
inc
mov
aam
es
call
pop
push
mov
fcomi
mov
cld
popf
add
dec
and
repz
addl
push
cltd
popl
mov
aam
xchg
in
adc
inc
push
clc
inc
xor
mov
sbb
jge
clc
in
jo
roll
jo
inc
mov
sbb
mov
lea
xchg
aam
outsl
stos
js
mov
or
test
mov
pop
lahf
scas
mov
imul
jns
stos
ds
stos
ss
mov
ljmp
stos
lods
ret
jge
adc
and
or
pop
popf
sbb
loop
out
cmp
ja
outsl
push
mov
outsb
sub
mov
sub
inc
and
movsl
cmpsl
ss
mov
ja
incl
pop
cmp
push
inc
adc
xor
mov
ret
or
ret
inc
outsl
mov
and
inc
xchg
out
jnp
test
adc
mov
cmp
xchg
jbe
test
outsl
stos
or
jg
imul
mov
push
ret
xor
js
pushf
clc
outsb
push
push
sub
ja
and
sub
out
inc
mov
cmp
ficomps
enter
js
pop
mov
cmp
aas
pop
push
call
aas
int
int3
sbb
ss
js
mov
jmp
loopne
lods
push
mov
sti
and
cmp
fwait
sub
adc
inc
sub
data16
jg
mov
out
push
clc
cmp
push
imul
or
out
adc
out
xor
outsb
cmp
int3
jae
mov
bound
in
fs
xchg
andl
mov
and
sub
mov
jp
jo
or
xor
pop
insb
ja
pusha
enter
jno
cmp
mov
ja
int3
enter
data16
push
xchg
add
call
pop
fisttpll
nop
add
mov
mov
push
xor
repz
dec
mov
enter
das
stc
hlt
add
add
fmuls
xchg
insl
inc
mov
add
js
mov
jl
or
dec
push
lods
push
dec
dec
lods
adc
mov
leave
test
sub
xchg
les
add
and
pop
nop
pop
inc
push
imul
mov
cmp
fldl
test
ret
xlat
int
jecxz
push
xchg
push
dec
push
movb
cs
sbb
addr16
cmp
pop
add
mov
sub
sarl
lret
push
mov
sbb
dec
stos
and
jns
dec
xchg
leave
enter
sub
dec
mov
fs
adc
push
int3
mov
rolb
int3
gs
push
negl
insl
sti
adc
mov
add
test
inc
imulb
jp
or
test
inc
and
out
and
dec
into
fucomi
mov
inc
addr16
lods
dec
adc
and
lahf
aaa
mov
jp
dec
lret
add
into
dec
inc
out
ds
pop
add
inc
imul
add
add
fsubl
aad
cmp
mov
xor
inc
inc
jb
push
out
cmc
gs
pop
loope
mov
push
es
mov
sbb
mov
push
rorb
insb
outsl
mov
clc
mov
test
sbb
fstpt
in
iret
inc
roll
rcr
push
call
jl
inc
and
loope
out
pop
or
or
xchg
data16
pushf
iret
mov
pop
sub
lea
cmpsl
sub
sub
shrl
and
js
ret
out
aad
dec
cltd
jo
push
jbe
xchg
pop
or
insl
andb
ljmp
aas
mov
mov
and
pop
adc
jmp
ds
lds
cmp
filds
jp
int
shlb
fdiv
loop
mov
inc
aad
mov
cmp
test
lret
mov
jnp
pop
rcrb
stos
pop
in
mov
xor
lcall
ret
sahf
mov
sbb
inc
lret
std
xchg
movsb
mov
jmp
dec
outsb
mov
or
pop
mov
pop
test
ret
rcrl
mov
loop
sahf
jl
outsl
pop
stc
xchg
scas
clc
movsb
dec
inc
xor
aam
jle
inc
and
lcall
scas
xorl
cmp
in
fwait
xlat
mov
cmp
pop
lea
or
cmp
mov
inc
mov
sub
and
stc
iret
jnp
inc
xlat
mov
and
mov
ret
pop
sbbb
xchg
cmp
inc
and
test
fcmovnb
pop
fsubrl
sti
stc
add
jle
ljmp
fcmovnbe
jmp
mov
and
and
push
cmp
jo
stos
mov
or
dec
sub
or
fiadds
xchg
gs
push
cwtl
add
dec
movsb
aad
scas
and
aad
push
shll
sarl
ds
pop
push
fwait
sbb
cmp
inc
mov
mov
push
cmp
out
cli
and
and
and
cli
pop
jecxz
xlat
or
push
push
push
dec
aas
mov
mov
push
jbe
jno
fsubs
mov
push
into
jecxz
cltd
mov
or
movsl
fiaddl
shrb
sbb
pop
add
ja
lods
sti
pop
or
les
fstpl
inc
addr16
push
inc
pop
inc
testl
mov
lds
xchg
hlt
aad
ficomps
mov
bound
xchg
jbe
xchg
jnp
js
dec
and
jecxz
cwtl
loopne
fwait
xadd
js
fisttps
sbb
repz
int
mov
in
adcb
inc
aas
pop
repz
jl
ljmp
pop
rorb
outsl
shr
sub
adc
mov
sahf
mov
pop
aaa
jp
xor
push
aad
adc
out
jnp
inc
into
int3
mov
stos
int3
scas
rcrb
lret
rcll
ss
addr16
loopne
add
cmp
sbb
cmpsl
lret
inc
jle
sub
insb
sub
loope
rcrb
dec
sub
popf
insl
sbb
mov
cmp
das
out
cmp
int
loope
xchg
inc
and
sub
in
popf
push
sub
enter
push
mov
xchg
nop
push
dec
and
cmc
cmp
dec
test
inc
push
loop
fidivrs
jmp
cld
lods
xor
xor
xor
js
incb
aad
into
push
sbb
pop
fidivl
push
push
sub
pop
fucom
loop
sahf
or
pop
inc
or
sahf
jmp
rorl
int3
dec
gs
arpl
mov
imul
jae
jle
das
lcall
or
mov
push
insl
cmpsl
clc
pop
or
dec
sbb
ss
adc
add
push
cs
and
int
popa
or
xchg
aad
or
iret
lods
addr16
jg
cmpsb
push
add
jb
sbbb
and
sti
pop
and
adc
fcomps
cli
mov
lds
call
sub
out
add
ds
ret
hlt
ja
add
imul
add
sbb
mov
ret
jnp
and
addb
loopne
out
xchg
jg
or
sbb
adc
mov
pusha
int
shrl
js
sbb
enter
sbb
xchg
xlat
jmp
ss
xchg
dec
sti
imul
cwtl
mov
fildll
lret
xor
push
lods
test
cmpsb
test
push
jo
int3
xlat
mov
loop
int
int3
sbb
out
xchg
xor
ds
loope
andl
inc
aad
ds
inc
movsl
cmpsb
push
cld
cmp
mulb
push
iret
ret
push
scas
int3
adc
xchg
stos
mov
test
xchg
scas
and
jbe
fsts
adc
xor
pop
dec
jo
push
aam
mov
jge
dec
fnstcw
jmp
out
xchg
push
fs
cltd
mov
mov
cmpsl
jecxz
dec
or
or
sti
sbb
pop
and
add
push
sub
xchg
bound
enter
pop
out
jne
popa
gs
sbb
andb
jne
mov
out
xchg
pop
outsb
divb
int
pop
lods
xor
jp
rol
iret
mov
push
push
fisubs
data16
fldcw
xchg
sbb
mov
or
daa
sbb
mov
adcl
scas
xchg
flds
lds
jbe
daa
iretw
int
push
push
xor
sub
xchg
cmp
mov
cmp
test
js
jo
lea
jb
lcall
push
cmp
xor
cwtl
sbb
inc
xor
lea
dec
push
xor
test
repnz
xchg
xor
scas
mov
fsubrl
push
shl
adc
or
xchg
popa
ja
mov
sub
fwait
or
lods
insb
adcb
push
fldcw
xor
in
cwtl
mov
pop
mulb
iret
jp
mov
and
xchg
stos
jecxz
and
fwait
and
or
jecxz
dec
test
fs
ljmp
adc
sub
cmc
sub
cmp
dec
or
sti
add
pop
push
movsb
jecxz
imul
mov
loope
mov
push
js
dec
call
out
mov
aaa
xchg
repnz
xorl
mov
mov
loopne
jge
call
cmp
in
out
adc
push
mov
pop
loope
stos
cli
cmp
movsl
mov
mov
jge
cwtl
or
pop
stos
iret
adc
test
mov
ret
mov
cs
aad
repnz
xchg
cmp
xchg
mov
aad
jnp
xor
or
or
inc
push
fbld
sub
outsb
loop
sbb
mov
inc
and
push
mov
data16
sbb
inc
xchg
mov
test
inc
jno
dec
repz
inc
js
or
pop
xor
mov
sbb
sub
cmpsb
jle
cmp
sub
sub
lods
dec
fcomps
mov
or
iret
scas
shlb
cltd
sbb
iret
adc
int
jnp
adc
add
sub
cld
sub
dec
fcmovbe
pushf
sbb
out
xor
andb
add
jp
icebp
lcall
in
xor
roll
aaa
movsl
dec
sub
add
fwait
cmc
jae
push
and
dec
jle
mov
dec
xor
dec
sub
inc
pop
dec
clc
movsb
mov
or
mov
xor
aas
pop
xor
fcoml
dec
gs
subb
fisubl
aam
enter
mov
cmp
pushf
out
aas
loope
clc
into
push
jge
sub
outsl
pusha
push
cmp
add
add
mov
fs
and
cmp
mov
jg
aas
pusha
out
push
loop
cwtl
mov
icebp
lahf
and
outsl
mov
dec
xor
movb
pop
mov
adc
lahf
add
fiadds
sub
int
cmp
loop
mov
mov
mov
lods
jne
mov
xor
jae
add
mov
repnz
pop
outsb
adc
test
mov
xor
dec
std
fcompl
dec
jecxz
add
inc
lahf
cs
or
int3
xor
pop
adc
shll
pop
inc
mov
out
or
sti
push
sarl
in
aaa
ret
pop
sub
mov
int
lret
test
std
xor
mov
pop
dec
jl
jl
cvtdq2ps
enter
int3
xor
add
fimull
jp
dec
and
lahf
pop
and
lret
js
dec
insb
mov
or
shrb
sub
push
cmpl
mov
in
sbb
xchg
or
or
jae
dec
xchg
xor
xor
jne
loopne
mov
jno
testb
dec
sub
and
sahf
sub
jne
aaa
movb
sub
inc
xor
ficomps
dec
jnp
mov
mov
jns
cmp
push
push
push
stc
inc
pushf
cld
loop
dec
inc
dec
xchg
insl
std
jmp
adc
test
shrl
cs
enter
mov
push
mov
gs
adc
or
xchg
leave
push
xchg
cmpsl
shll
std
enter
or
mov
stc
pop
aad
or
mov
mov
cwtl
push
out
adc
jp
push
cmp
adc
jge
dec
pop
scas
or
xor
xchg
jmp
test
inc
mov
lret
sub
imul
fstps
or
sti
and
pushf
sbb
push
cltd
lcall
outsl
cmp
in
cmc
fildl
sahf
dec
rcll
nop
push
and
ljmp
rclb
sbb
sub
iret
lret
or
movsb
push
in
sub
add
daa
icebp
xor
out
rcr
mov
inc
aaa
filds
mov
into
cltd
mov
cltd
xchg
sub
adc
mov
cld
test
stc
sbb
mov
dec
movsb
gs
cmpl
repz
xchg
filds
mov
test
aad
jnp
int3
sbb
repz
push
test
xchg
mov
jo
loop
movl
js
mov
shrl
and
add
daa
jo
jmp
adc
push
dec
xor
dec
push
xor
test
and
mov
jge
jnp
fidivs
mov
pop
push
mov
inc
les
dec
mov
mov
jae
out
xchg
or
dec
sub
out
sub
cld
scas
pop
ficomps
call
and
orb
addr16
scas
jns
fistpll
icebp
adc
inc
repz
add
mov
adc
push
pop
xchg
sahf
testb
pop
gs
dec
movq
popf
shlb
jno
cmp
pusha
clc
mov
xchg
and
ret
dec
sarb
pop
sub
stos
mov
mov
mov
addr16
pop
cmp
pop
decl
loop
lahf
dec
mov
pop
add
ss
dec
push
ret
inc
inc
push
pop
sahf
adc
jmp
stos
mov
pop
cmp
sbb
icebp
ljmp
test
mov
pushl
jo
push
cltd
jo
jne
jmp
shll
jge
data16
mov
push
rorl
stos
div
mov
ss
es
xlat
cs
xor
aas
fists
sub
inc
aam
jl
pop
in
stos
loop
test
adc
int
pop
lock
and
cmpsb
ds
inc
sbb
mov
fbld
test
shll
jecxz
jne
mov
jns
lcall
add
fdivrs
cltd
inc
pop
mov
pop
cld
cmp
xor
and
js
sub
inc
adc
mov
sbb
mull
jl
or
mov
jge
cmp
push
cmp
sbb
addr16
fildll
js
in
mov
inc
jecxz
cli
dec
xchg
pop
cmp
adc
loopne
mov
and
or
je
push
sub
xchg
popf
sub
das
fisubrl
mov
mov
lret
mov
test
xor
mov
inc
xor
aam
enter
add
lods
rcrl
outsl
cmpsb
fs
sub
push
insb
push
sbb
dec
rcrl
inc
add
cmpsb
xchg
jmp
ja
aas
nop
mov
sub
rcll
cmp
in
mov
imul
imul
imul
cmp
add
xchg
pushf
sub
popf
inc
daa
arpl
xchg
stos
xchg
jg
andl
and
cmc
jecxz
inc
arpl
mov
jbe
push
mov
flds
out
sbb
jno
jl
shl
int
lahf
stos
fnsave
push
cli
xchg
push
mov
out
inc
es
mov
movl
pop
mov
lods
or
cld
cmp
pop
out
popf
sbb
and
in
add
and
sbb
pop
push
cmp
dec
dec
int
pop
inc
addr16
push
ret
add
push
xchg
subb
cltd
mov
push
mov
push
in
icebp
cmp
cmp
testl
jmp
mov
or
sub
sbb
push
pop
lret
loope
out
cwtl
ficomps
cmpsb
mov
xor
paddb
cmpsb
jns
xor
or
ret
dec
inc
mov
sti
out
in
adc
lea
adc
out
jno
aad
dec
adc
and
fsubrs
out
loop
mov
mov
clc
out
sub
push
mov
jo
add
inc
mov
mov
cmp
mov
mov
sbb
bound
xlat
dec
sarl
or
lahf
icebp
or
ss
inc
repnz
jg
rclb
jo
mov
andb
or
out
daa
inc
pop
test
nop
les
mov
pop
in
push
test
and
scas
outsl
xlat
pop
mov
scas
inc
xor
jp
lds
and
xchg
dec
jno
mov
fimuls
cmp
mov
or
addl
push
mov
inc
dec
xor
inc
xchg
mov
pop
sub
adc
push
xor
mov
push
iret
xor
mov
push
fldenv
push
xchg
fiaddl
lret
sbb
inc
inc
or
cmp
cs
jo
sub
jge
in
and
mov
add
jno
daa
xchg
inc
lcall
daa
xor
int
ss
negb
ret
add
sahf
push
aam
xchg
pop
cli
jecxz
push
imul
xor
or
lods
js
in
sub
ja
orl
xchg
dec
sbbb
xchg
sub
or
mov
or
das
es
test
cli
mov
sbb
and
jl
je
scas
pop
adc
aad
clc
mov
cmp
push
or
pop
data16
addl
cs
push
xor
sub
js
imul
cmp
lods
icebp
and
xor
inc
jmp
mulb
mul
jbe
pop
jg
leave
lock
inc
jns
mov
pop
ss
arpl
arpl
jnp
nop
clc
imul
cmpb
adc
xor
push
adc
adc
mov
lret
clc
movsl
bound
lahf
pop
pop
lds
push
stos
mov
lock
scas
sub
and
xchg
sbb
lods
push
and
ret
test
mov
iret
test
ror
fs
adc
loopne
sbb
inc
iret
lret
xor
dec
lret
out
xor
shrb
or
add
test
aas
xchg
fs
cmpb
cmp
js
popa
xchg
push
push
sbb
push
ljmp
test
mov
clc
push
push
jmp
test
insl
mov
aad
ja
sti
inc
pop
imul
imul
loopne
sbb
test
cmp
push
cmp
imul
pop
std
pop
call
xor
push
arpl
call
add
jo
cmp
xor
leave
insb
imul
imul
and
addr16
lret
outsl
aam
data16
mulb
xchg
xchg
cli
scas
mov
push
popa
or
into
xchg
sbb
xchg
clc
je
lea
inc
dec
lds
int
lea
xor
divb
jl
mov
imulb
sbb
fcom
add
and
mov
call
addr16
cmp
ds
adc
dec
jnp
in
lock
inc
sub
aam
sbb
mov
fisttpll
mov
lahf
outsl
mov
icebp
fs
repz
cwtl
fidivs
loopne
cmpl
cmpsl
mov
imull
dec
adc
popa
icebp
mov
xor
mov
push
push
xchg
dec
inc
call
insl
fisttps
mov
jle
mov
pop
ja
mov
pushf
sbb
xor
sbb
ljmp
aad
pop
inc
jge
comiss
mov
imul
adc
fnstcw
fsubrs
push
cmpsl
pop
fstpt
and
lret
rclb
mov
xor
cmpsb
mov
jae
fsubl
imul
lret
mov
dec
aad
push
or
movsb
add
adc
daa
pusha
gs
cli
mov
pop
push
int
cli
arpl
inc
xchg
push
sbb
sub
dec
inc
push
shll
adc
xor
das
scas
stc
push
loopne
sbb
cmp
sub
xor
cmp
lods
fmull
test
dec
cli
mov
push
rorl
pop
data16
xor
jecxz
inc
jmp
pushf
push
lods
pop
arpl
xchg
lcall
mov
xchg
mov
shlb
xor
pop
out
sub
push
lea
mov
aam
aas
aad
add
adc
adc
ss
out
shlb
xor
push
fsubs
or
ljmp
mov
rcl
es
xor
ret
les
xlat
cmp
and
fcmovnb
dec
and
lret
dec
mov
rcrb
arpl
out
stc
nop
inc
jbe
mov
xchg
add
or
gs
dec
iret
lods
inc
sbbb
mov
popf
or
sub
mov
lcall
mov
jg
sbb
sbb
dec
inc
fucomi
rcll
sbb
mov
icebp
add
jns
rcll
mov
in
test
mov
mov
mov
mov
ja
loopne
jne
sbb
iret
inc
fildll
xor
call
pop
int
outsb
cmp
in
icebp
rolb
push
insl
lock
shll
daa
or
inc
out
mov
mov
dec
inc
cmc
jbe
jmp
cld
popa
push
pop
sub
ror
cmp
aam
outsl
add
xchg
fadds
sbb
in
xchg
sub
aas
test
mov
and
loopne
jbe
or
jnp
jecxz
push
pop
fs
push
mov
add
add
jmp
push
mov
lahf
pop
test
shll
mov
loop
inc
nop
cmpsb
loopne
xor
mov
movsl
sub
pop
xor
adc
lcall
adc
ss
xchg
sub
mov
enter
idivb
in
xor
out
mov
incl
fistps
and
push
inc
pop
shlb
xchg
repz
mov
mov
dec
mov
movsl
scas
inc
pop
fcmovnb
ljmp
cwtl
inc
movsl
sbb
cmp
jecxz
sub
xor
mov
fiadds
repnz
test
ror
pop
inc
dec
pop
mov
sbb
sub
add
ja
add
push
jne
inc
mov
in
sub
dec
outsb
sbb
jle
push
xor
mov
push
inc
mov
push
xchg
and
pop
inc
rcr
nop
ljmp
popf
add
and
and
mov
jecxz
leave
loopne
push
lods
push
roll
fistps
das
repz
adc
popf
mov
ss
cmovle
push
and
sub
ret
xor
inc
fsubl
call
mov
mov
xor
jb
aas
mov
lcall
mov
push
and
sbb
ss
jge
clc
cltd
sub
xor
adc
popa
lock
xchg
push
js
cmp
inc
mov
sub
int
jecxz
fcoml
pop
pop
test
cwtl
movsb
adc
add
cmc
and
call
adc
pop
mov
adc
dec
dec
add
mov
arpl
aaa
cmp
imul
xchg
inc
loop
xchg
sbbl
add
sub
stos
lahf
jg
in
out
iret
push
push
nop
jo
xor
cmp
dec
push
in
mov
arpl
cmc
andl
aad
add
fs
dec
dec
adc
shrl
push
pop
mov
or
movl
mov
int
bnd
mov
loopne
mov
std
push
ret
mov
rclb
jle
xchg
jp
outsb
and
andl
out
inc
mov
cmp
pop
inc
inc
mov
inc
pop
mov
pushf
aad
ss
lret
jg
mov
xchg
loope
mov
inc
pop
movsl
mov
jge
out
insb
aas
std
call
mov
shl
push
repnz
jno
mov
push
jae
mov
or
add
test
xchg
sbb
mov
imul
mov
adcl
pop
aad
lcall
dec
lea
testb
sbbl
bound
adcl
mov
imul
sbb
in
mov
fstl
test
push
lahf
ljmp
les
adc
outsl
xor
mov
cs
mov
sbb
mov
jae
fsts
adc
pusha
jg
into
fst
inc
mov
shll
stc
sub
push
xor
out
pop
out
mov
sub
lods
repz
pop
fsub
mov
xchg
outsl
add
jle
xchg
jns
jb
addr16
inc
cwtl
mov
cs
lcall
cmpsl
and
jbe
shr
lret
arpl
jmp
je
pop
je
mov
subl
mov
cmp
int3
scas
or
adc
jecxz
test
mov
ret
fs
and
ret
idivl
out
stc
cmp
jp
push
insl
inc
sub
jmp
jnp
sti
sbb
mov
mov
out
lock
adc
add
scas
js
popf
sub
stc
adc
orb
cmc
ss
sub
cmp
cmp
adc
inc
pop
jmp
xchg
test
call
or
loopne
mov
push
inc
imul
cmpsl
mov
cli
cmpb
into
lea
pop
mov
cld
inc
scas
jge
xchg
mov
mov
aam
pop
arpl
jmp
xchg
push
imul
cmp
adc
xchg
mov
rcll
leave
shrb
fstl
dec
mov
shrl
or
jle
aas
xchg
dec
mov
je
sub
es
rorb
jp
iret
subl
sub
sub
inc
push
dec
cmp
mov
mov
arpl
popf
jns
cli
pop
nop
mov
stos
adc
pushl
sbb
sub
ror
out
cmc
xchg
cs
and
dec
dec
jmp
cwtl
mov
aas
in
sar
clc
push
mov
in
add
cmpsl
icebp
xor
mov
and
ja
inc
sahf
stos
in
push
out
ficomps
pusha
mov
aaa
das
lds
and
sub
cli
cwtl
lds
jnp
or
sub
rcr
insl
sub
scas
scas
mov
test
or
aam
sahf
sub
repz
sti
fiaddl
das
cmp
or
inc
mov
lods
outsl
fs
stos
into
pushf
mov
cld
aad
imul
pop
mov
add
insl
inc
mov
outsb
ljmp
scas
mov
dec
faddp
scas
popf
mov
test
mov
repnz
nop
sub
in
add
adc
ss
push
inc
jne
js
push
mov
lock
ret
mov
push
xor
xchg
dec
pop
pusha
sti
xor
cmp
and
movsl
psadbw
xchg
in
pop
imul
lret
aam
lret
xor
dec
or
and
jge
mov
call
not
dec
mov
rcrb
int
rcrl
dec
lods
fs
mov
adc
insl
loop
outsl
aaa
sbb
push
lock
out
mov
push
mov
inc
and
push
popa
sbb
and
dec
mov
movsl
cltd
pop
inc
fiaddl
xor
cli
lret
push
or
fisttpll
mov
adc
push
lcall
sahf
adc
sub
cmp
add
push
jg
fstl
repnz
arpl
pop
mov
adc
shll
cmp
ss
mov
fisubs
mul
clc
lods
push
sub
sub
test
xor
in
adcl
sahf
mov
push
imul
jge
and
xor
push
xchg
push
mov
hlt
jmp
xor
into
insb
mov
out
pop
and
mov
pop
inc
bound
mov
clc
jmp
cld
divl
or
call
stos
into
mov
push
fs
adc
push
stos
add
xchg
rcrl
ret
out
cli
sbb
shlb
push
out
mov
sbb
pop
mov
loop
aas
xchg
icebp
sti
jl
and
in
cli
xor
add
popa
pop
orl
adc
lret
pusha
adc
xchg
insl
aad
ss
bound
aaa
pop
sub
or
out
dec
mov
mov
mov
out
fistps
aam
inc
xchg
js
addl
push
das
daa
pop
sbb
repz
lret
and
ss
out
inc
enter
repnz
inc
lock
lock
xchg
jns
cmp
add
lret
aam
sbb
xor
es
lahf
push
fcmovb
std
and
mov
std
xor
jmp
popf
repnz
mov
add
into
fstpl
cmpsb
mov
jns
jecxz
sti
test
xchg
push
clc
mov
lahf
push
push
lret
mov
lods
sub
and
das
mul
pusha
inc
popf
shlb
push
scas
fcomp
les
bound
sub
mov
mov
adc
and
hlt
mov
cmp
dec
inc
inc
and
xor
mov
jb
sub
sub
dec
dec
and
lret
or
stos
pop
cmpl
in
pop
ja
and
daa
adcb
fwait
jmp
push
mov
push
sbb
arpl
addr16
sbb
int
xlat
mov
cmp
push
dec
pop
cs
jnp
imul
dec
cltd
xchg
jle
into
imul
fmul
add
bound
dec
jb
pop
lods
fsub
es
jecxz
or
add
icebp
hlt
add
scas
pop
aam
sub
out
lock
aam
sub
aad
loop
out
push
cs
scas
lods
jnp
push
test
movsb
pop
fldt
aad
push
mov
mov
insb
xor
dec
adc
jno
test
jp
test
push
sub
dec
adc
lds
dec
sahf
ds
or
push
pop
ss
loope
shrl
hlt
cmpsb
std
popf
flds
loopne
imul
stos
iret
mov
jns
or
xchg
and
popa
js
mov
cmp
mov
shll
inc
cmpsb
repz
sbb
xor
adc
push
in
jbe
inc
push
mov
mov
test
sahf
jp
movsl
aaa
sub
cmp
dec
push
xchg
mov
add
and
mov
adc
icebp
mov
sub
cmp
fcompl
push
mov
mov
movsb
imull
punpckhwd
and
xor
test
jle
fldenv
and
cwtl
sub
aam
mov
mov
daa
push
cwtl
xchg
lock
stos
and
ss
mov
mov
loope
and
jmp
adc
shl
pop
addl
inc
std
lea
aam
or
mov
inc
cs
adc
sbb
push
gs
push
cwtl
clc
lea
push
and
lcall
mov
mov
mov
mov
xor
js
arpl
addr16
mov
int
pop
dec
mov
cmp
je
lea
jl
stos
cmp
cmp
xchg
sub
ja
test
lret
jb
icebp
fs
out
and
xchg
les
stc
mov
out
cs
dec
xchg
dec
jmp
andl
or
push
push
popf
cmp
rol
push
or
add
push
lock
ret
in
xchg
push
mov
addr16
stc
aam
aaa
aaa
js
jecxz
cmp
mov
cltd
push
scas
aad
dec
shrl
mov
int
repnz
rcrb
mov
dec
and
test
popf
adcl
dec
pop
mov
mov
rcrl
add
push
out
adc
insl
fsubl
cmp
call
aas
mov
and
in
into
pop
sub
iret
inc
cltd
ljmp
and
sub
cmc
repz
jle
fcompl
pop
jg
sbb
dec
push
xor
pop
mov
xchg
push
dec
jo
pop
and
cmp
add
lods
or
cmpl
das
loopne
scas
cmp
push
and
push
int
popf
mov
push
lods
outsb
cmpsb
lea
inc
xor
aaa
xchg
movsb
or
test
not
gs
leave
fbstp
sahf
lret
lock
mov
cmpsl
xor
mov
pop
jne
popf
xlat
push
xor
xchg
mov
jl
test
dec
mov
lea
hlt
push
nop
xchg
jp
mov
call
mov
aaa
sub
push
jae
aam
xchg
push
or
push
es
out
sti
mov
dec
xchg
sbb
popf
jmp
mov
cmp
mov
xor
jmp
push
and
push
nop
sbbl
movsl
mov
xor
test
ja
lods
jne
icebp
mov
cmp
sti
fsubr
fistl
insl
dec
add
pop
push
and
frstor
pop
test
aaa
ficoms
adc
xchg
stc
pusha
lods
lds
adc
ret
jns
test
pop
inc
popf
in
ja
add
xor
fs
cmp
jnp
cmpsb
mov
add
inc
stos
mov
cltd
movsb
test
das
mov
jb
aas
int3
or
ret
cmpsl
push
xchg
sub
fisubl
adc
sahf
stos
mov
jae
jp
jle
mov
cmp
out
push
daa
inc
mov
orb
inc
call
sbb
pop
mov
rcrb
cmp
inc
imul
mov
jne
lret
or
fdivrl
mov
lods
pop
ljmp
subb
lret
mov
or
adc
rorl
xor
ljmp
test
ljmp
mov
leave
and
xor
adc
push
lcall
xchg
lahf
repnz
mov
mov
loope
icebp
mov
insb
aam
aam
lret
xchg
and
xor
mov
sbbb
ss
andb
ret
les
icebp
lret
xor
add
mov
scas
mov
pop
jne
or
sbb
in
or
mov
sub
cmp
pop
and
mov
aad
cmp
into
xor
cwtl
divl
pop
pop
xor
adc
fsubrl
mov
and
dec
dec
mov
sub
cli
or
call
sbb
js
outsl
shlb
sbb
loop
lea
movsb
mov
push
push
and
ljmp
aad
clc
js
push
add
add
sbbl
push
mov
cmp
ss
push
dec
push
arpl
cli
mov
js
sub
sahf
cli
jne
js
cli
push
inc
jns
cmc
cmpsb
xor
movsb
lahf
es
inc
jle
bound
sbb
sbb
ficomps
pop
in
push
sbb
pop
aad
popa
add
and
in
cmp
cmc
xor
pop
cmp
insb
fbld
subps
lea
repz
xor
cld
jmp
aaa
lret
adc
test
ret
and
leave
gs
inc
mov
scas
cmp
and
fwait
push
lea
mov
jmp
ljmp
test
jnp
fstpl
mov
jno
bswap
in
lds
shrb
int
decb
aaa
arpl
les
scas
add
nop
repz
jbe
jno
lea
sbb
push
xor
xor
fbstp
scas
int3
add
sarb
dec
rorl
popl
mov
adcl
pop
mov
outsl
out
scas
adc
sahf
int3
push
icebp
enter
pop
insl
mov
add
out
in
pop
xor
mov
mov
mov
jmp
dec
outsb
xor
dec
leavew
xor
iret
in
jmp
lods
inc
inc
popa
cmp
scas
push
mov
add
mov
dec
cmp
xorl
xchg
popf
ss
pop
outsl
mul
rol
push
dec
jns
xchg
dec
incl
test
sbb
or
inc
in
and
scas
pop
sbb
cmp
clc
push
out
aas
jmp
popf
dec
fdivp
insb
mov
test
mov
add
adc
cwtl
cmpsl
repz
sub
ret
aad
outsb
mov
je
dec
adc
cmpsl
sub
mov
outsl
addr16
pop
mov
jge
mov
mov
jg
repnz
ret
in
hlt
push
dec
sahf
mov
add
cmpsl
mov
mov
adc
sbb
into
test
lret
fcoms
fst
out
jne
aas
mov
or
andb
xor
push
mov
mov
jle
inc
or
cmp
int
movl
or
out
and
xor
shlb
cmp
shlb
inc
cmpsb
push
or
add
hlt
test
and
mov
inc
stos
or
stos
pop
mov
pop
nop
jo
mov
push
cli
dec
pop
push
lds
xor
cmp
and
imul
mov
imul
int3
orb
addb
ljmp
push
fcomps
js
mov
xchg
xchg
push
popf
sub
inc
imul
out
int3
ja
inc
icebp
mov
dec
mov
cltd
mov
add
jnp
cmp
mov
inc
aam
inc
and
mov
mov
push
clc
iret
fstpt
sub
or
xlat
ja
leave
inc
out
jg
mov
fldenv
aad
ljmp
inc
enter
xor
mov
sub
xchg
xchg
into
jbe
pop
sub
sbb
out
sub
dec
jo
sbb
pop
sub
add
mov
stos
fdiv
cs
stc
add
pop
into
sbb
mov
shrb
cld
cmp
xor
mov
pop
xor
add
jnp
test
mul
movsl
lahf
mov
push
out
sub
js
cli
pop
movsl
and
inc
pop
push
shlb
mov
jbe
xchg
cmc
icebp
mov
and
or
lds
add
out
mov
push
sub
stc
bound
xorb
mov
jo
pushf
and
push
inc
jle
cmp
and
mov
add
mov
add
daa
idiv
pop
lods
sub
in
push
in
or
sub
mov
loopne
pop
in
pop
mov
int
leave
aaa
add
mov
popf
out
popa
inc
jae
xchg
mov
inc
mov
ror
add
es
les
test
pop
pop
inc
cmp
lods
lret
xchg
push
pop
mov
xchg
sub
pop
fnstcw
jbe
xchg
ljmp
sbb
das
inc
jne
inc
mov
fsts
ret
adc
cmp
shr
clc
pop
jmp
stc
xchg
cmpsl
sbb
loope
mov
and
movsl
cmp
mov
mov
xchg
scas
fwait
movsb
sub
lock
imul
jecxz
arpl
mov
mov
mov
push
call
je
or
push
xchg
out
leave
repz
and
inc
pushf
shll
sarb
sub
xchg
pop
in
shrl
mov
movsb
fistpl
mov
xchg
push
push
jecxz
sub
push
sbb
shr
cli
popa
xchg
jbe
test
iret
mov
sarl
ds
jo
roll
in
and
push
sbb
loope
out
adc
mov
pop
mov
push
lea
shll
pop
shlb
ds
sub
mov
push
adcl
adc
cltd
jae
xchg
and
paddsb
insl
je
and
icebp
mov
or
or
adc
add
adc
mov
rcrb
mov
jns
pop
stos
push
and
or
jb
cli
int3
ss
and
jae
std
inc
in
lock
jg
pusha
imull
jnp
jo
imul
push
sub
lret
adc
xchg
lea
and
sbb
scas
push
gs
cmp
addr16
mov
mov
sbb
mov
fcmovnbe
xor
push
scas
adc
subl
inc
mov
cmp
push
in
pop
adc
out
dec
mov
xor
repz
xchg
outsl
out
in
xchg
mov
push
rcll
jbe
scas
and
imul
js
cmp
ret
add
mov
mov
mov
sbb
xchg
mov
jg
iret
mov
add
lods
call
aaa
lods
stos
mov
repz
ljmp
jmp
in
sub
into
data16
icebp
sarb
mov
rorb
stos
xchg
adc
cli
fnstsw
jno
push
adc
ljmp
cld
orb
enter
push
pop
pop
and
jnp
xchg
or
jo
push
jmp
fidivs
cltd
lock
mov
jb
push
bound
add
xor
mov
scas
inc
outsl
sbb
mov
jmp
cltd
scas
or
cmp
movsb
lret
jns
mov
ror
xor
dec
push
dec
daa
shll
sub
test
jmp
mov
out
cmpsb
mov
jo
stc
movl
sub
lahf
inc
into
jl
js
mov
sbb
inc
inc
sub
ret
andb
and
outsl
cmp
fsubrp
adc
aad
sub
mov
nop
mov
aad
add
inc
es
fstl
aam
call
ficompl
or
shl
cwtl
pop
cmp
enter
inc
in
cmp
popf
dec
sub
mov
test
inc
imulb
sub
xchg
shll
js
dec
mov
ja
inc
mov
mov
aam
mov
lret
lods
les
sarl
in
push
push
in
lret
js
ds
jmp
mov
xchg
loopne
les
rclb
mov
daa
inc
or
cmp
clc
pusha
cmp
aaa
daa
ljmp
cmpsl
fwait
rcrl
sbb
sbb
sbb
popl
gs
or
mov
mov
sub
rcll
cld
cmp
ljmp
mov
lcall
loop
push
jg
xchg
pop
and
mov
jge
xchg
and
xchg
cld
setl
add
inc
or
insl
pop
test
iret
jg
cmp
cmpb
iret
dec
clc
or
je
js
pop
hlt
adc
hlt
in
adc
shrl
and
iret
data16
fadds
cmp
les
idivl
mov
je
fwait
rorl
pop
jecxz
add
icebp
xchg
push
inc
inc
mov
mov
jbe
int
mov
cld
cmp
add
leave
push
cmc
cmp
jbe
adc
lahf
xor
xlat
xlat
mull
xor
test
adc
xchg
sahf
imull
ds
pop
imul
shlb
add
jge
pushf
inc
xchg
jo
test
add
mov
fwait
les
sub
or
push
scas
icebp
jno
pop
in
sbb
jo
insb
mov
in
ret
sbbl
xchg
sub
ret
jg
sarb
repz
sub
shlb
push
in
cmc
xor
jge,pn
dec
out
incb
pop
jb
mov
test
jp
xor
in
stc
mov
push
repnz
sub
pushw
sbb
in
movsl
mov
push
idiv
xor
push
pop
or
jmp
test
cmpl
or
xchg
mov
js
push
or
mov
add
stos
out
cli
inc
or
rcrl
cmp
mov
xchg
and
leave
xchg
movsb
andb
das
cmp
add
cmc
das
sarl
mov
andb
sub
es
push
popl
movsb
imul
mul
sbb
ljmp
and
pushf
sub
mov
xchg
jne
arpl
add
dec
lods
movsb
mov
and
adc
mov
shr
inc
rclb
out
bound
dec
jmp
mov
mov
add
mov
jmp
jg
sub
cmpsl
inc
orb
test
popf
out
daa
loopne
mov
inc
cmpsb
dec
test
mov
cltd
push
data16
dec
and
or
rcrl
shlb
xor
nop
mov
cs
xor
xor
cmc
dec
popf
push
fcoml
popf
and
clc
pop
pusha
mov
sahf
jle
das
pop
mov
sub
jbe
xlat
sub
ficomps
sbb
stc
add
ja
cmp
jbe
mov
sub
cmp
xor
adc
jae
popa
in
push
adc
lret
in
out
push
es
jne
push
aad
and
mov
in
lret
sbb
push
mov
and
jns
repnz
stos
adc
popa
mov
inc
scas
fimuls
ljmp
popf
jle
cmpsb
dec
mov
mov
popa
test
jno
dec
int3
mov
roll
cmpsb
mov
xlat
xchg
fst
cmpsb
icebp
addr16
xchg
inc
xlat
mov
adc
stos
cmp
lods
test
sahf
push
lahf
mov
popa
fisttpl
and
sarl
sbb
aad
lcall
cs
into
pop
xchg
push
and
adc
sub
dec
sub
fcoml
loop
jg
ljmp
pop
movsl
mov
mov
adc
insb
popa
pop
mov
mov
movsl
out
loope
jg
mov
xor
mov
cmp
call
les
lock
idivl
fnstenv
into
sub
scas
or
push
xor
out
mov
xchg
jp
bound
test
jge
out
aad
sbb
repz
lods
jle
cs
add
xchg
sbb
pop
fistpll
icebp
add
in
inc
sub
inc
sub
add
jp
pushl
jo
dec
scas
call
push
jne
lds
sub
stc
nop
push
lds
out
in
loope
cwtl
push
push
sub
sub
pop
and
outsl
cld
sbb
test
andb
cwtl
stc
xchg
hlt
lahf
int3
lock
imul
imul
jge
adc
je
repz
cwtl
fildll
pop
sub
jae
ljmp
push
test
loopne
xchg
lock
iret
loope
pop
cli
fstps
dec
js
add
mov
dec
into
jge
lea
inc
xorl
hlt
mov
divb
lret
inc
mov
xchg
mov
dec
sub
inc
arpl
xchg
xchg
dec
adc
mov
xchg
mov
or
divps
repnz
inc
or
pop
mov
sub
test
mov
adc
rcll
cltd
xchg
mov
loopne
inc
loope
daa
push
popf
out
mov
mov
jg
dec
aam
in
xchg
xor
ljmp
outsl
pop
cmpsb
push
push
add
adc
fisttps
in
pusha
rcr
cld
lods
push
rcr
dec
push
shrl
mov
sti
icebp
or
sbb
push
sub
adc
andb
push
mov
sahf
aad
and
dec
jnp
movsl
dec
lds
jno
dec
and
fldenv
push
inc
inc
pop
enter
mov
add
cs
mov
and
adc
cmp
popf
test
rcr
lds
sbb
test
or
js
mov
out
xchg
int3
push
test
xor
sbb
mov
adc
lahf
enter
xor
hlt
push
cltd
js
xchg
ja
xchg
dec
xchg
or
imul
mov
call
or
sahf
xchg
bound
insl
xor
mov
test
mov
fdivrl
fs
addr16
sti
mov
out
movsl
adc
mov
repz
mov
pop
aaa
adc
jns
add
shlb
stos
xlat
lret
insl
test
adc
sbb
test
out
jg
cltd
mov
sub
xchg
hlt
sub
push
mov
add
jo
repnz
pop
inc
iret
mov
fcmovb
dec
push
push
aaa
icebp
xor
divl
movsl
mov
add
repnz
xor
fstps
dec
dec
cmp
xchg
jb
adc
sbb
mov
out
pop
cltd
cmp
xchg
repnz
xchg
jo
jne
jne
fldl
scas
or
js
mov
inc
mov
mov
sarb
mov
test
addl
addr16
arpl
xchg
rolb
cld
in
push
sbb
jmp
xchg
imul
inc
and
imulb
push
mov
adc
cmpsb
push
int3
aad
mov
mov
mov
into
sub
cltd
adc
and
pop
clc
lods
cld
bswap
inc
pop
cmp
add
lret
push
fs
pop
icebp
mov
jbe
jb
dec
xchg
mov
inc
int
cmp
or
rorb
mov
test
scas
cmp
dec
push
xchg
and
dec
xchg
xchg
sbb
sub
cwtl
imul
dec
mov
arpl
mov
subb
cmpsb
mov
iret
int
fidivl
loopne
adc
dec
out
add
sahf
inc
push
mov
xchg
sub
cmc
in
shr
sbb
cmp
dec
aad
add
orl
decb
insl
mov
sahf
iret
ss
pushf
ds
push
ret
in
addr16
stos
stos
pminsw
mov
lret
xor
jge
gs
and
jp
cld
push
jmp
out
addl
lret
movsb
sbb
sub
fmuls
insl
xchg
je
add
and
jge
fwait
mov
lock
movsl
divl
les
test
pop
pop
pop
gs
jp
popa
sub
jo
pop
inc
data16
cld
push
rdtsc
jns
rcll
imul
cmp
mov
or
dec
sti
jp
adc
inc
cli
jbe
dec
repnz
aam
xor
pop
out
aam
in
pop
mov
shl
mov
xchg
inc
lock
in
ret
pushl
jnp
and
push
jge
addr16
loope
rclb
adc
xorb
imul
decl
daa
push
mov
inc
arpl
in
orb
mov
scas
jb
push
out
pop
mov
lret
lock
xor
sbb
xor
mov
pop
enter
sub
lret
mov
dec
pop
cmp
mov
or
cli
sub
lcall
and
in
and
dec
xor
aad
pop
leave
jle
push
sub
adc
adc
or
outsl
ret
fistpll
test
iret
rcrl
ss
xor
ret
ffree
arpl
inc
repnz
mov
loop
cmp
sbb
idivb
and
cmp
aad
jne
sbb
add
insb
or
adc
popa
push
sbb
outsl
jbe
mov
mov
jb
movaps
push
mov
das
dec
jg
add
mov
shll
aas
loopne
ficomps
insb
pop
inc
lret
and
pushl
insb
js
mov
nop
push
movsl
sbb
mov
inc
and
mov
gs
repz
mov
lcall
xchg
or
cmp
push
sbb
int3
or
xchg
lods
das
negb
push
repz
outsl
andb
imul
or
xchg
mov
sub
out
dec
testb
inc
sub
mov
jne
mov
lahf
sbb
jecxz
or
xchg
fidivrl
mov
addl
jp
pop
test
rcrb
arpl
push
push
pop
mov
push
mov
sarl
xchg
fadd
jno
call
mov
push
aad
xchg
sar
cwtl
or
xlat
cltd
sub
cmp
bound
inc
loop
aam
lret
movsl
and
mov
mov
sbb
test
sbb
add
sarb
daa
xchg
lock
fsubp
js
or
in
sbb
lret
cwtl
inc
aaa
and
adc
xchg
sarb
mov
cmc
arpl
orl
dec
les
je
imul
sbb
cmp
dec
fadd
xor
cmp
xlat
es
mov
adc
dec
pop
shlb
adc
add
mov
sbb
push
outsl
and
push
sahf
dec
in
lcall
das
cmc
jo
paddsb
sub
les
aaa
in
lret
daa
out
jg
mov
or
mov
das
inc
push
fidivrs
mov
xchg
cli
inc
jp
cwtl
inc
idivb
stc
das
outsl
and
js
out
fisubrl
int
mov
pushf
mov
fidivrl
add
add
jle
and
push
xchg
mov
sbb
mov
shl
orl
inc
iret
mov
das
test
cmp
mov
movsl
lock
or
add
cmpb
adc
nop
inc
ss
push
insb
fcompl
popa
pop
push
outsb
mov
cmp
jnp
push
stc
cmpb
inc
jb
sbb
push
cmpsl
inc
popf
int3
cs
push
stos
push
or
inc
loope
imul
js
mov
lock
xor
insl
int3
jo
ja
pop
push
xchg
mov
aam
xlat
je
cwtl
pop
adc
sti
in
test
aad
dec
cmp
cmpsl
pusha
pop
pop
cli
jo
movsl
mov
repz
xor
or
js
icebp
fstps
xchg
jnp
sahf
push
mov
int
dec
repz
lcall
ja
pop
push
pop
sbb
push
mov
in
and
or
aad
loop
mov
adc
lret
add
mov
repz
fistps
mov
lcall
jns
or
pushf
jmp
add
adc
shll
loopne
scas
ret
loop
pop
imul
iret
test
movsb
lret
jge
dec
test
mov
mov
adc
mov
pop
je
pushf
popw
add
js
dec
cmp
push
imul
cmpsb
notb
cli
jns
and
or
adc
repnz
call
cmp
test
popa
es
dec
sub
push
aas
out
adcl
rep
push
cli
addr16
xchg
stos
ja
dec
ljmp
lret
mov
cld
adc
jne
ljmp
pop
or
ja
jnp
push
pop
gs
xchg
in
ret
andb
loopne
test
frstor
pop
mov
cmp
inc
jge
jl
inc
inc
xor
in
jg
cli
cmp
add
and
in
loopne
or
leave
addl
push
cmp
cld
xor
call
outsb
pop
cmp
sub
xchg
jp
mov
add
ljmp
rclb
clc
xchg
xchg
stos
or
and
sbb
xchg
out
jecxz
pop
testb
xchg
out
testb
or
xchg
sbbl
sub
repnz
jmp
dec
mov
pop
mov
inc
xchg
and
ss
xor
xor
lds
fisubs
fcomp
aad
mov
xor
aad
notl
insl
jg
jne
pop
shlb
mov
ss
pop
push
jae
jecxz
in
sub
iret
sbbl
jae
insb
jno
push
push
inc
mov
mov
mov
push
fldl
lret
mov
loopne
outsb
pop
sbb
mov
pop
cmp
lret
cmp
sub
imul
mov
testl
enter
cs
enter
fcos
scas
xchg
in
mov
dec
inc
ljmp
sub
or
push
cmpsb
fsubl
addr16
dec
jmp
sub
push
xchg
mov
add
mov
test
and
dec
aad
fsubs
adc
pop
lods
mov
jmp
inc
mov
or
les
pop
stos
mov
sub
rclb
clc
add
into
jne
sbb
bound
mov
push
fnsave
data16
mov
push
pop
pop
mov
mov
sarl
repz
stos
test
adc
adc
sub
hlt
lahf
ficoml
jecxz
ja
push
adc
xchg
mov
dec
sti
in
ja
std
ds
pop
movsb
lea
inc
pop
jno
neg
or
mov
fidivrl
jmp
hlt
xor
add
dec
xor
add
loope
ljmp
xchg
pop
sbb
sti
push
je
push
inc
out
xorl
stos
rcr
adc
jns
jae
lods
sbb
pusha
loopne
pop
xchg
jmp
mov
mov
aad
call
cwtl
call
sub
leave
mov
sarb
loopne
jns
leave
xor
mov
pushf
imul
int
sub
imul
fwait
mov
sub
mov
adc
pushf
xchg
das
sti
adc
scas
and
sub
mov
jmp
and
pop
into
add
jb
dec
add
xor
mov
push
js
xor
sbb
int3
inc
lods
cs
loope
lds
adc
xchg
std
push
xchg
pop
hlt
cmp
xor
cli
mov
popf
and
mov
and
adc
xor
sub
dec
mov
shlb
into
dec
and
cmpl
lret
repz
and
dec
sti
dec
sub
sub
sbbl
cmc
bound
cmpl
shl
les
add
orb
mov
in
jecxz
in
daa
and
cmp
mov
jae
lods
jns
mov
outsb
test
push
fwait
xor
add
push
mov
xchg
mov
out
js
dec
jmp
sbb
dec
push
jnp
add
sub
xchg
inc
sub
push
int
aad
mov
jbe
fs
imulb
or
xor
mov
jns
adc
fisttps
iret
and
sahf
je
mov
std
addr16
mov
jp
mov
rorl
jp
jbe
or
pop
sub
popa
or
addl
pop
sti
push
ja
fimull
fnstenv
jae
pop
inc
mov
inc
rorb
mov
insl
mov
push
mov
lods
pop
scas
mov
sub
dec
cld
add
sahf
gs
int3
loop
xor
mov
fs
popa
aas
hlt
mov
ljmp
repnz
iret
cmp
mov
loope
mov
lahf
lods
outsb
insl
mov
or
and
inc
cmp
cmp
xor
jno
adc
inc
add
pop
mov
cmp
or
in
push
aad
sbb
cmp
sbb
arpl
in
std
mov
mov
push
pop
outsl
in
sahf
loope
jnp
lods
mov
cmp
insb
sbb
lods
jge
mov
shrb
inc
lds
sub
mov
fisubrs
mov
or
inc
sub
inc
int3
into
nop
in
aad
cwtl
scas
inc
mov
mov
subl
mov
add
and
dec
xor
rcll
add
dec
cmc
xor
and
lahf
mov
into
pop
das
mov
js
ja
bound
and
or
and
mov
mov
jle
jp
dec
repz
inc
xor
ljmp
sbb
ret
inc
or
pop
popf
and
and
jmp
push
outsl
es
xchg
sti
je
inc
in
or
sbb
lods
xchg
fnstenv
nop
sub
repnz
lret
aas
dec
jle
mov
mov
push
jp
in
das
ret
in
mov
setns
in
cmp
scas
lret
dec
bndldx
pop
push
or
inc
rcl
sub
out
orb
mov
hlt
cmp
xchg
lahf
push
mov
push
or
jp
inc
ss
popa
inc
pop
lea
cmp
pop
jb
push
inc
push
or
dec
inc
in
jge
movsl
hlt
out
dec
rclb
add
pop
mov
or
sbb
call
lea
lret
push
mov
mov
mov
das
lods
dec
lock
ficoml
push
scas
pop
inc
mov
push
mov
dec
ja
lds
nop
ljmp
cmp
stos
push
arpl
cs
int3
fists
jle
sti
cmp
pop
aaa
push
dec
lea
stos
int
add
pop
mov
inc
lock
mov
pop
pop
or
movsb
mov
rclb
pop
pop
xor
hlt
mov
into
iret
jno
fsubs
mov
out
adc
xchg
lret
out
mov
mov
shlb
ljmp
fsub
jecxz
out
mov
dec
push
jg
cld
in
pop
cmp
add
xchg
bswap
mov
jo
rdpmc
jle
dec
cli
push
sbb
jb
popf
ret
out
scas
loope
inc
push
shlb
sub
hlt
add
mov
dec
jl
sbb
cli
cltd
adc
sbb
popa
inc
stos
xchg
sub
cld
outsb
add
and
shl
outsl
mov
lock
adc
fadds
arpl
shrb
cmp
jle
adc
jge
test
shll
hlt
mov
test
stos
adc
or
rcll
add
ja
cmp
iret
pop
cmc
or
push
pop
xchg
cmp
test
test
xlat
test
sbb
sub
jle
and
xorb
testb
lods
notb
sub
fxtract
sbb
ja
lock
rcrb
pop
bnd
mov
mov
or
mov
test
mov
add
push
outsb
push
mov
pop
js
push
in
and
fwait
andl
sbb
cs
sbb
push
mov
jle
sbb
jno
loope
fistpll
xor
mov
mov
sbb
cld
imul
int3
ret
loop
pop
dec
hlt
lret
adc
jae
jb
imul
stc
popa
sbb
test
sub
cmp
push
test
cwtl
mov
mov
and
popl
in
pop
sbb
dec
cli
stos
xchg
jnp
loopne
repnz
out
jb
loopne
imul
adc
jle
ret
ljmp
out
mov
push
xor
fadd
aad
mov
stc
fs
mov
push
sub
jg
mov
int
ret
shrb
push
and
push
pop
mov
sub
jb
push
mov
add
adc
xor
je
xchg
movsl
dec
mov
cmp
lcall
add
pop
push
adc
push
aad
jnp
pop
test
pop
fabs
xchg
stc
imul
jb
rorb
loope
xor
and
xor
sub
jmp
xor
rolb
inc
rolb
add
mul
cmp
test
mov
jb
dec
mov
rorb
in
movlps
hlt
xor
inc
insb
add
cmp
fisttps
pop
out
add
mov
cwtl
lret
shrl
aas
cmpsb
rcll
hlt
or
movsl
push
jne
or
xchg
jno
out
adc
pop
mov
inc
repz
imul
xor
subl
dec
adc
and
mov
and
leave
popf
and
shll
repnz
pop
push
loop
sbb
inc
inc
lds
sub
push
jb
cmc
ret
jnp
hlt
or
jmp
mov
aas
outsl
dec
aas
xor
sbb
jge
hlt
fisubs
sbb
gs
and
das
push
push
aaa
sbb
or
jns
dec
nop
insl
enter
out
mov
pop
js
pop
adc
lock
pop
gs
or
shr
mov
in
lret
mov
in
sahf
icebp
pop
xchg
or
ds
xor
lods
mov
ds
icebp
inc
insl
inc
dec
pop
mov
xchg
jge
push
sub
pushf
scas
sbb
roll
jge
push
or
ffree
or
stos
xchg
mov
shll
imull
adc
and
cmpsl
or
sub
push
mov
push
sbb
pusha
mov
mov
scas
mov
shrl
imul
loop
dec
xor
fwait
pushf
push
shlb
sbb
lods
inc
inc
push
stos
shl
mov
or
test
dec
mov
jae
sarb
xchg
sub
jns
loopne
xchg
jae
std
cmpsb
jge
andl
mov
xchg
int3
rorb
inc
insl
dec
jae
imul
ds
mov
and
cmp
hlt
or
dec
jp
arpl
inc
call
push
xchg
jge
sub
outsb
lret
fdivs
leave
stos
pusha
xchg
pop
fmuls
fsubrp
loop
daa
sub
sbb
adc
int
ret
jp
aad
jnp
fninit
addb
mov
sub
out
jo
cli
fwait
out
inc
movsl
or
aam
movsb
cmc
insl
dec
imul
ds
add
testl
push
xchg
mov
popf
dec
mov
lods
sbb
jb
mov
pop
outsb
test
addr16
test
out
aas
jno
mov
clc
push
sub
loop
loop
test
cmp
sub
fldt
cli
or
daa
stos
jecxz
mov
mov
movsb
or
inc
cmc
fwait
add
scas
outsb
and
jecxz
mov
xor
pop
test
sbb
mov
push
cmc
pop
notb
sbb
stos
xchg
ret
lahf
inc
adc
mov
setg
bound
cmpsl
jp
jnp
inc
js
daa
cmp
adc
add
shl
repz
repnz
shlb
mov
push
dec
mov
mov
jb
add
arpl
into
dec
jb
push
jg
add
loop
push
add
pop
and
cmp
push
xor
data16
jbe
xor
rcr
mov
add
fcompl
dec
dec
mov
call
mov
cmc
repnz
push
iret
inc
xchg
mov
clc
test
rolb
push
sbb
dec
and
ficoml
test
xor
xor
aas
popa
je
fnstcw
sbb
rorl
push
ret
adc
ret
sub
jmp
add
icebp
outsl
in
adc
in
sub
in
test
push
aad
les
cld
cmp
mov
or
and
scas
es
xor
adcb
pop
jle
xchg
int
repnz
xor
sub
pop
mov
cmp
fists
cltd
das
jle
leave
es
lcall
pop
sub
jne
mov
ret
pop
loopne
push
in
jns
mov
cltd
mov
sbb
int3
sub
and
stos
scas
mov
xlat
leave
cmp
or
arpl
pushf
sahf
movsb
movsb
out
xorb
into
sub
fimull
inc
cmp
popf
adcl
sbb
bound
or
mov
mov
std
pop
mov
adc
leave
push
xchg
mov
jecxz
testl
add
and
mov
pusha
jle
data16
cli
dec
mov
test
repz
and
mov
sbb
mov
fsubrs
loope
push
les
pop
mov
adc
sti
fwait
add
mov
ja
push
xor
fs
into
sarb
xchg
dec
jo
adc
out
push
dec
arpl
mov
popa
rol
scas
add
mov
xchg
lods
subl
adc
push
mov
sbb
xor
mov
hlt
popf
mov
lods
sbb
cmpsl
or
jl
icebp
out
inc
pop
dec
and
lret
xor
dec
ret
mov
xor
sbb
push
mov
lret
rdtsc
fdivl
flds
jp
sar
jae
aaa
or
lret
xlat
test
dec
inc
andl
mov
jo
icebp
enter
ljmp
iret
or
add
lret
out
cmc
mov
bound
orl
ds
cld
adc
push
lock
pushf
mov
mov
pop
cwtl
mov
jo
mov
push
jns
mov
inc
cmp
dec
ljmp
sub
sahf
pop
and
or
data16
xor
in
movsl
and
inc
mov
mov
outsl
imul
sub
sbb
roll
add
call
bound
imul
and
adc
negl
rol
fdivl
push
mov
add
mov
adc
dec
repz
in
in
cmp
hlt
adcl
or
out
inc
outsb
icebp
sbb
jne
add
jae
lret
sbb
call
ret
insl
inc
sbb
mov
pop
jne
dec
roll
cld
lods
fdivrp
rolb
hlt
sbbl
mov
or
jo
jb
inc
out
enter
lcall
clc
imul
or
lret
dec
fildll
ficompl
mov
inc
stos
out
xchg
int3
adc
lds
adc
jmp
inc
lret
ret
nop
mov
inc
lods
push
in
push
ds
ficoml
add
nop
sbb
jmp
dec
mov
rorl
insb
addr16
mov
hlt
xchg
int3
sarl
adc
pop
test
scas
fwait
lock
sti
sub
mov
js
fwait
aas
adc
bound
and
rcrb
pusha
xchg
inc
mov
enter
out
jae
bnd
xor
out
mov
push
pusha
pop
adc
movsb
fisttpl
test
mov
lock
push
jne
scas
lds
mov
out
jbe
lea
std
das
lea
jmp
mov
inc
pop
pop
pop
add
push
mov
pusha
test
in
pop
cs
sub
xor
xchg
pop
xor
pop
and
inc
mov
aaa
xchg
mov
je
mov
add
and
divb
sub
pop
in
iret
je
sbb
and
jmp
xor
sbb
inc
jae
dec
adc
cltd
mov
jb
mov
enter
and
jne
stos
repz
icebp
sbb
ja
mov
sub
dec
pop
cmp
pop
lret
cmp
mov
aaa
inc
sbb
jb
sub
add
xor
les
pop
imul
out
pushf
repz
add
sbb
mov
add
inc
inc
mov
into
scas
pop
call
incb
cmp
mov
jns
repnz
jmp
pop
sub
jb
push
cmpsl
jbe
fwait
cmpsl
mov
rcl
mov
add
enter
mov
jbe
lock
xchg
jae
pusha
xchg
cmc
push
icebp
add
lret
xlat
xchg
into
pop
jb
sbb
jne
jp
repz
outsl
sbb
sub
mov
das
cmp
mov
cmp
pop
mov
xchg
and
pop
mov
jge
mov
ja
inc
xor
or
in
rolb
pushf
inc
xchg
movsb
popf
pushf
inc
fsubs
xchg
mov
and
mov
cmp
into
xchg
aaa
popa
or
scas
dec
shl
mov
inc
movsb
shlb
test
fdivrl
adc
test
cmp
test
or
cmc
dec
push
sbb
fsubp
andl
sub
pop
das
jg
sub
stos
cmpl
ret
shlb
adc
jle
inc
fldl2t
jne
ds
mov
xor
or
xchg
decb
das
pop
xor
loop
xor
pop
repnz
inc
or
out
pop
iret
test
cmpsl
inc
sbb
mov
fwait
call
or
shll
fs
frstor
fstps
xor
fdivs
pop
lods
inc
popa
adc
adc
jmp
and
iret
xor
inc
scas
std
adc
sbb
js
or
loope
ss
push
movsb
movsl
daa
inc
popf
outsb
sub
pop
cmc
out
inc
mov
in
clc
into
popa
add
cld
mov
inc
push
rcrl
pop
push
sarb
mov
lcall
rcrl
mov
inc
push
and
movb
push
push
shl
xor
dec
mov
cld
or
or
and
jg
pop
or
icebp
jecxz
xor
test
adc
pop
repz
xor
xor
add
js
cmp
loope
sub
mov
or
and
lret
mov
in
dec
das
test
push
inc
cld
push
nop
enter
sarl
push
or
sbb
inc
pop
loopne
pop
jl
xor
lock
mov
push
fcoml
mov
mov
sbb
and
mov
aaa
sbb
cli
ret
ljmp
mov
sub
sbb
cli
sub
pop
mov
lea
adc
icebp
jae
fwait
cli
cmpsb
mov
popa
xor
test
cmpsb
jl
mov
jp
mov
repz
andb
lods
jmp
sub
add
movsb
lret
lea
frstor
popf
mov
mov
mov
outsl
push
mov
sbb
int3
and
adc
ds
and
push
mov
out
les
lock
push
mov
paddusb
loopne
fildl
in
ljmp
pop
inc
xor
bound
scas
add
pop
scas
cmpb
sub
push
hlt
ret
jb
icebp
pop
xorb
cmp
mov
ss
cmp
shl
inc
jl
mov
cld
sarb
jecxz
xchg
cmp
push
inc
mov
fldt
push
dec
and
inc
cli
jg
sbb
push
cmp
arpl
mov
mov
daa
or
mov
test
push
je
push
stos
inc
dec
jmp
xorl
lcall
dec
mov
icebp
lcall
add
inc
incb
ficomps
sub
jb
scas
loop
xor
xlat
push
or
inc
fwait
cmp
popa
inc
leave
mov
mov
pop
jg
nop
lods
stos
int3
test
mov
add
push
iret
lods
sbb
movb
xchg
mov
das
divb
mov
lods
fisubl
gs
dec
mov
iret
and
mov
xor
fldt
inc
hlt
pop
sub
mov
xchg
nop
in
ficomps
push
lods
jbe
das
cmp
hlt
fistpll
out
hlt
aaa
mov
popf
mov
icebp
mov
mov
mov
dec
xchg
cmpsb
test
and
xor
outsb
ficoml
xlat
xorb
mov
test
mov
aam
testb
jge
fwait
pushf
lahf
mov
repnz
jecxz
pop
sub
aam
or
in
jle
inc
das
cltd
shll
int3
ds
add
inc
dec
inc
sub
push
adc
dec
mov
insl
mov
call
arpl
mov
in
fs
or
gs
mov
leave
mov
mov
push
adc
adcl
mov
xor
iret
mov
scas
int3
divb
pop
sbb
sbb
popf
jl
xchg
fcompl
dec
xor
aas
push
mov
pusha
inc
cmpsl
and
loop
mov
fadds
push
cmp
jo
xchg
xchg
add
or
scas
mov
xor
xchg
pop
push
mov
clc
dec
mov
fsubs
or
cmp
xchg
js
pusha
adc
mov
out
shl
jns
mov
in
pop
les
and
sub
imul
xchg
movsl
aam
stos
push
dec
mov
lds
icebp
fsubrl
in
mov
sbbl
fistpl
out
outsb
cmpsb
pop
sub
or
icebp
std
aas
aad
in
jmp
pop
push
scas
xchg
movntps
inc
fstpl
arpl
sub
adc
lret
jo
insb
cmpsb
nop
loop
dec
dec
popf
push
sub
aam
xor
dec
aam
subb
sub
enter
test
inc
movsb
push
dec
out
clc
push
cmp
dec
bound
or
sbb
jbe
inc
xchg
mov
inc
sub
es
out
add
sub
hlt
mov
jnp
or
idivb
lahf
cmpsb
fbstp
pop
cmpsb
lea
lods
xchg
movsb
mov
stos
mov
or
inc
in
mov
lock
cmp
push
in
xchg
les
cs
incb
pop
shrb
out
or
fbstp
or
mov
push
jl
negb
mov
or
shll
sub
lret
lahf
in
addr16
adc
dec
jbe
mov
jp
inc
insl
and
push
arpl
jo
push
push
dec
daa
jp
cmp
pushf
lods
mov
dec
rcll
inc
ja
dec
jmp
rcrl
xor
add
adc
mov
lods
jl
xchg
add
sbbl
and
xor
jae
and
add
push
mov
and
sub
lods
adc
mov
rclb
shrl
mov
mov
dec
push
stos
push
insl
ss
jno
je
rcrl
cmpsl
in
or
mov
nop
and
int3
or
lcall
pop
shll
or
push
pushf
insb
push
in
inc
lods
sbb
inc
push
lds
pop
adc
cld
lcall
insb
cltd
test
lahf
jns
cwtl
xor
dec
push
call
fstl
sub
add
dec
in
stc
aam
pop
sub
das
xor
inc
jp
sbb
cmc
xchg
sarl
push
jbe
mov
stos
mov
pop
ret
out
dec
pop
int3
dec
mov
push
adc
adc
jns
in
mov
bound
stc
cmp
lods
in
dec
fiadds
jmp
and
hlt
cmc
cmp
rcll
out
push
mov
aas
mov
jg
pop
xchg
std
fs
sub
cli
lds
aas
fwait
daa
ja
ds
dec
inc
popa
enter
popl
repz
mov
cld
out
cld
rcrb
sub
mov
in
and
sbb
xchg
sbb
pop
movsb
cs
mov
test
mov
pop
cmp
pop
cmp
stos
xor
fcomps
jg
jo
xor
inc
dec
lock
in
mov
push
adc
lret
cmpsl
lods
sub
xor
dec
or
cmpsb
sti
fldt
negb
mov
push
sbb
lods
mov
xchg
mov
pop
lea
stos
insb
fbld
or
data16
inc
dec
call
adc
xchg
lret
and
cli
push
loopne
adc
mov
fsubs
into
insl
dec
inc
popf
inc
stos
std
and
movsb
lea
or
js
outsb
test
xchg
enter
lods
insl
scas
pop
push
cmc
into
stos
mov
pop
clc
fisubs
cmc
cli
add
sbb
ja
lods
fwait
repnz
cmpb
dec
add
and
mov
dec
stos
idivl
cmpsl
movsb
mov
movsl
push
test
xor
dec
sub
add
ss
dec
insb
cmp
jnp
mov
test
dec
popa
cmpsb
stos
test
mov
shl
dec
loope
lea
xor
sahf
dec
nop
inc
lods
outsb
popf
mov
fwait
out
jg
mov
jle
mov
or
nop
jge
loope
sahf
mov
push
mov
aaa
mov
dec
pop
test
fwait
roll
cmp
and
popf
jnp
into
sbb
lds
inc
shr
dec
push
mov
sbb
test
popf
int
ret
cmp
cmpsb
loopne
cmp
shrl
scas
add
sti
clc
pop
out
pusha
outsb
aaa
or
negb
sti
dec
or
scas
loop
mov
sub
inc
scas
idiv
xchg
lret
test
loopne
out
insl
cmc
or
ret
addb
dec
add
insl
jnp
xchg
or
mov
lret
lea
aaa
or
pop
ficomps
adc
cmc
sarl
ljmp
pop
xor
mov
adc
in
mov
enter
fiadds
daa
scas
lret
loop
pop
stos
and
mov
movsb
sbb
push
mov
arpl
loopne,pn
jns
cmc
stc
push
cmpsb
fsubl
in
mov
xor
mov
decb
fcoms
sub
push
cltd
and
cmp
fldl
test
mov
stc
ljmp
inc
xor
add
jns
pmulhuw
lock
push
fsubrl
int3
sub
out
jle
jbe
jecxz
out
push
in
adc
sarb
or
mov
mov
and
stos
dec
test
add
dec
sub
and
leave
dec
sub
out
sub
push
into
jg
mov
fstps
fwait
mov
ds
mov
ja
inc
cmpsl
xchg
jmp
arpl
or
fistps
ret
pop
cld
aad
pushl
mov
movsl
out
jp
popa
sbb
and
loopne
sbb
jb
mov
or
jns
lcall
mov
cltd
and
jecxz
test
add
les
xchg
dec
mov
ss
loopne
inc
jecxz
std
sub
pop
fmuls
sbb
dec
mov
or
insb
mov
aaa
lods
ds
xchg
sbb
jecxz
out
and
push
jnp
adc
sub
testl
dec
sarb
shl
xchg
shl
leave
je
and
ror
lock
push
pusha
nop
das
or
sub
imul
sti
loopne
xchg
icebp
mov
subl
stc
add
mov
jne
push
int3
xor
in
int3
int
in
or
jp
pop
data16
add
pop
mov
mov
mov
es
mov
pop
mov
adc
rorb
add
nop
pop
push
stos
imul
jno
xchg
xchg
pushf
xor
sbb
test
mov
dec
sbb
xchg
mov
sbb
push
mov
sub
sub
inc
or
fwait
inc
shrl
push
inc
jle
add
pop
and
ljmp
ret
mov
arpl
not
sub
pop
scas
xor
push
lahf
movsb
cmpsb
mov
fs
lcall
lds
ret
inc
into
xchg
add
cmc
js
mov
pushf
out
in
cmc
movsl
inc
rclb
and
out
jle
subl
xorb
or
fwait
movsl
jmp
xchg
insb
js
push
mov
mov
mov
inc
push
xchg
xor
push
cs
push
add
mov
push
xor
mov
push
dec
pop
mov
jmp
stos
addr16
adc
jg
or
addr16
jbe
mov
mov
push
jns
sub
adc
jl
mov
sbb
sbb
repz
jg
cli
mov
dec
add
push
aas
xlat
adc
push
je
insb
not
jle
jb
dec
lock
or
and
dec
inc
dec
aaa
sub
pinsrw
cmpsl
and
nop
jne
push
cmc
aaa
dec
xchg
pop
lret
out
cld
mov
mov
mov
push
mov
and
dec
in
repz
mov
push
push
pop
xor
mov
lret
push
imul
stos
jns
insb
add
pop
inc
fmuls
push
rcrb
or
arpl
cmp
add
rcl
pop
mov
mov
in
jo
iret
in
mov
push
ss
push
jbe
push
jns
mov
jbe
mov
ficoml
gs
mov
xor
xlat
xor
add
divl
inc
inc
pop
std
cmc
insl
sub
addr16
mov
test
pushf
xchg
lock
sbb
lahf
sub
and
dec
adc
loop
mov
rcr
sbbl
add
js
mov
iret
dec
jp
fdivl
adc
ret
or
mov
pop
jmp
pop
nop
ds
mov
sub
insb
ret
push
xchg
dec
xor
fdivl
fdivr
mov
mov
test
mov
shrl
jle
imul
xrelease
mov
push
dec
xchg
in
adcb
jp
iret
cmp
stos
xor
stos
add
iret
addr16
lods
int3
testl
xchg
cwtl
push
cmpsl
mov
insb
or
adc
jb
lret
lea
and
sub
loope
shll
adc
ret
in
xchg
push
es
movsb
xor
mov
push
aaa
and
dec
add
shr
push
cltd
fildll
pushf
dec
andb
and
js
push
adc
nop
mov
jbe
fcompl
lahf
inc
into
call
mov
dec
into
mov
fcoms
push
and
inc
pop
leave
mov
out
mov
clc
es
popa
mov
test
xchg
in
mov
hlt
mov
test
and
mov
mov
jmp
outsl
lods
es
or
dec
aas
arpl
inc
fildll
mov
dec
fstpt
dec
hlt
inc
in
hlt
cs
std
cmp
mov
cs
imul
shl
push
in
cmp
cmp
or
or
data16
mov
cmpsb
or
jle
pop
or
negb
mov
add
lret
dec
and
pop
cmpsl
mov
push
adc
mov
fucomi
cli
aad
imul
sub
in
adc
inc
sub
cmpsl
roll
in
mov
andl
outsl
flds
out
cmpsb
cli
pop
lret
mov
xor
xor
movsl
in
jl
mov
leave
int3
lods
fidivl
loop
or
push
pusha
xor
out
xlat
dec
test
cmovnp
loope
pop
fs
out
sub
adc
jae
fs
mov
sbb
into
adc
jno
cs
mov
sbb
fucom
test
jns
mov
call
fwait
sub
sbb
push
std
pop
shr
shl
into
jecxz
addr16
fmull
ret
sar
jne
arpl
mov
imul
loop
sub
xchg
jne
and
adc
pop
lret
xor
in
imul
and
mov
mov
cld
loope
push
mov
in
out
lea
loope
sbb
mov
adc
cltd
cmpsb
or
repz
ss
in
push
or
dec
and
xlat
orl
shll
leave
rol
xchg
or
or
push
xchg
shll
mov
inc
aad
rcll
push
orb
jge
push
out
pop
pop
cs
mov
xchg
cwtl
cli
push
lods
ret
jle
fisttpl
xchg
adc
cs
mov
xchg
insb
xchg
ret
insb
dec
add
and
jnp
cmp
int
inc
jmp
add
push
js
xchg
jle
pop
push
and
jl
inc
fdivrs
lret
cs
push
pop
add
jg
xchg
xor
xchg
pmuludq
lock
sbb
divb
jno
mov
fpatan
fnsave
adc
shr
mov
push
push
inc
xor
das
xor
popa
push
shlb
pop
push
imul
push
pop
mov
movsl
adc
mov
push
push
cld
jnp
xor
daa
scas
gs
and
inc
pop
jle
mov
mov
insb
xor
out
pop
imul
fdivr
xor
fisttpll
dec
mov
cmp
jp
lods
mov
jnp
push
ret
in
jo
cmp
push
and
sbb
in
orl
in
iret
adc
fcom
insb
lods
out
push
xlat
and
ret
aam
das
shrb
fs
divb
pmulhuw
cmpl
js
mov
lret
dec
sbb
test
sbb
fistps
cmp
pusha
and
xchg
loop
fs
ret
mov
or
orl
cli
test
pop
lods
push
pop
faddl
inc
mov
adc
jae
jmp
mov
add
push
lret
arpl
and
sub
sub
inc
pop
fsts
cs
mov
ja
cmc
mov
jns
fnstsw
mov
lret
jnp
xor
dec
ja
repnz
ret
push
int3
rorl
and
in
pop
stos
fs
pusha
mov
ret
push
leave
mov
pop
sti
cmp
cwtl
jns
movsb
sar
pop
sub
mov
push
xchg
pop
jmp
pop
push
sbb
mov
std
jns
pop
arpl
mov
jnp
int3
notl
push
mov
ss
push
and
mov
mov
movsb
or
shlb
mov
pop
mov
in
fucomip
fwait
xor
hlt
clc
stc
in
and
xor
les
pop
mov
adc
push
not
arpl
mov
sbb
sbb
mov
xor
add
mov
fcmovnbe
jbe
int3
push
and
add
daa
lcall
jb
xchg
mov
push
push
add
and
mov
xor
out
subl
repnz
hlt
ret
test
mov
sbb
test
inc
pop
movsl
sahf
sbb
adcl
popa
cmpb
mov
popa
andl
cmc
mov
scas
push
jb
mov
rorl
ficoms
jp
adc
test
imul
or
xchg
xchg
push
dec
jo
pop
out
out
fldenv
sub
jmp
mov
pop
push
arpl
loopne
aad
xchg
mov
ficompl
xchg
lods
scas
xchg
stos
movsl
or
mov
cs
dec
and
stc
jno
out
movsbl
lret
inc
and
aam
or
into
daa
js
sub
lods
movsb
filds
shrb
xchg
sbb
das
popa
aaa
jmp
jmp
fwait
and
push
jbe
mov
cmpsb
imul
add
or
outsb
icebp
sbb
mov
mov
jbe
sbb
lcall
jbe
icebp
mov
sub
negb
jo
aas
pop
dec
mov
ss
popa
inc
jnp
lahf
mov
push
lahf
repz
stos
int3
lods
mov
cltd
stos
or
lahf
out
stos
gs
cmp
push
mov
adc
xchg
xchg
ret
stc
pop
mov
cmpsb
xor
jo
xor
xchg
faddl
mov
pop
adc
jno
test
shll
pop
arpl
and
pop
loopne
mov
mov
stos
out
fwait
sub
xor
out
int
inc
jb
jne
mov
lea
dec
mov
cld
daa
sub
aam
add
dec
xchg
mov
inc
fs
shrl
mov
sarb
mov
out
mov
js
sbb
dec
mov
repnz
fsubrl
shll
mov
sub
loop
mov
sbb
movsl
push
fwait
mov
sbb
push
outsb
sahf
pop
push
push
inc
mov
cmp
pushf
pusha
cmp
fsubs
fcmovu
aad
pop
mov
push
lahf
and
or
lds
cmpl
mov
les
fisubs
jp
pop
and
inc
and
addl
add
cmpsb
mov
adc
add
jmp
jbe
and
mov
mov
call
xchg
or
fstl
je
xor
int3
lock
fidivs
and
xor
stos
rcl
mov
dec
ror
jge
jbe
xchg
fsub
mov
pop
shrb
mov
jge
dec
fnstenv
hlt
addl
cmp
lock
xchg
pop
out
dec
sbb
lods
std
cmp
inc
mov
test
pop
sub
out
push
outsl
mov
pushf
xor
xchg
test
int3
xchg
pop
decb
aaa
lret
xchg
lcall
roll
icebp
pop
inc
ret
pop
sbb
subl
jb
iret
push
sbb
adc
push
mov
popf
dec
adc
in
xor
lret
repz
out
or
out
aad
inc
xchg
lret
loope
push
mov
push
jae
stc
insl
sbbb
inc
fdiv
shrb
loop
sub
scas
shll
fmuls
jp
popa
gs
ljmp
shll
inc
fisubl
lea
mov
xchg
stos
inc
xchg
stc
pop
enter
jns
dec
mov
je
xchg
add
sahf
xor
push
loop
and
ret
push
testb
adc
inc
scas
pop
jbe
iret
push
sbb
cmpsl
push
mov
lds
cmp
push
movsb
adc
sub
out
mov
rcll
data16
xchg
std
dec
loopne
or
ret
push
fabs
cmp
ja
pop
jge
ret
pop
arpl
add
push
pop
mov
xchg
pop
pop
add
xchg
out
inc
mov
fdivr
sti
adc
sahf
push
sub
jb
add
out
sub
inc
inc
xchg
xchg
cmc
dec
repz
add
push
pop
repz
xor
subb
lret
test
out
out
andl
dec
es
loopne
int
mov
cld
addr16
or
fnstenv
push
mov
adc
mov
cwtl
in
sbb
push
xchg
xor
lea
jo
sarl
movsb
dec
fldcw
and
mov
inc
sbb
cwtl
imul
jae
jge
push
jne
lock
adc
add
push
gs
out
dec
cmpsl
push
in
in
adc
shrl
xchg
inc
push
or
lods
roll
cmp
loop
clc
push
add
sti
push
sbb
ja
xchg
fnstsw
in
popf
xor
inc
std
fcmovu
and
shlb
xchg
fimuls
cmp
leave
push
jne
mov
dec
add
push
xchg
dec
stc
xor
inc
or
stos
das
inc
cmc
jg
sbb
rcrl
and
repz
ds
data16
fs
add
movd
jl
out
nop
mov
jbe
in
fwait
clc
in
jns
adc
addr16
fildll
data16
inc
repnz
insl
addr16
bswap
mov
jle
ljmp
adcl
test
mov
adc
shrb
ja
or
xchg
add
leave
and
loop
push
divl
inc
jb
pop
push
xor
lahf
out
cli
aaa
xor
jmp
lock
je
push
push
or
int3
outsb
shll
mov
sub
inc
fwait
rcrl
push
insl
jae
mov
movsb
adc
lock
xchg
out
stos
leave
cmc
popf
fistpl
jmp
jo
div
or
imul
push
je
mov
dec
mov
outsb
push
push
sub
fwait
mov
or
dec
out
repnz
in
imul
xchg
mov
xor
testb
sbbb
lret
stc
inc
movsl
lods
or
pop
adc
mull
sbb
jp
test
xchg
pushf
adc
stos
cmc
jne
pop
sub
sti
and
inc
hlt
fisubrs
xchg
push
and
or
adc
je
daa
mov
insl
pop
xchg
jb
test
xchg
mov
out
out
test
sbb
xchg
pushl
stos
out
adc
lret
iret
or
hlt
cmp
arpl
xchg
nop
jno
sub
ss
jmp
pop
shlb
xchg
cmp
movsb
sub
lahf
in
cs
insb
fiaddl
or
mov
push
inc
xchg
adc
aaa
rorb
xchg
dec
cmp
hlt
dec
es
incb
inc
jne
imul
rcrl
les
or
scas
mov
loop
stos
xchg
pop
out
loopne
shl
push
sub
dec
inc
fisttpl
arpl
hlt
jge
cmp
andb
mov
jne
xor
push
lea
andl
fs
jp
bound
xchg
fdivrl
push
gs
leave
repz
push
push
pop
in
mov
outsl
pop
mov
pop
dec
das
out
rcrl
jae
movsb
inc
cmp
add
stos
fcmove
imul
dec
push
mov
lret
cltd
and
xchg
cmp
lods
xorb
imul
mov
aam
es
fildll
ud1
iret
dec
and
jb
js
push
ljmp
jbe
popf
enter
pop
cmp
in
hlt
jmp
dec
mov
fcmovnb
xor
in
imul
adc
pop
xchg
subl
les
ret
inc
mov
push
out
jns
in
sbbl
sub
int3
add
jle
rorl
sbb
mov
jle
lahf
xchg
jbe
aas
test
shrl
dec
jl
xchg
mov
into
shll
in
sub
sti
sub
int
pushf
xchg
mov
xchg
aaa
xlat
mov
add
aad
xor
xchg
adc
push
pop
jg
leave
int3
bound
rcl
icebp
cli
fildll
push
pop
sbb
adc
orb
imul
ret
mov
jge
and
mov
bound
popa
or
loopne
inc
mov
xorb
fcmovnb
sub
pop
lahf
lods
mov
lret
inc
cmp
test
cmc
ljmp
in
mull
sub
or
jae
jne
push
jmp
pop
mov
and
subl
fists
jg
mov
mov
sub
ss
inc
pusha
arpl
iret
pop
inc
push
in
mov
xlat
xor
int3
ret
push
pop
call
aaa
mov
adc
push
cmp
push
mov
leave
mov
cmovno
xor
pushf
icebp
or
into
or
stc
in
inc
push
decl
loope
sbb
pop
xor
sbb
enter
scas
in
es
push
xchg
sahf
cmpsb
clc
cs
mov
pop
xchg
sub
xchg
in
das
lret
mov
or
cmp
or
ret
add
mov
in
xchg
cmpl
movsb
xor
cmp
repz
lret
jmp
sbb
mov
mov
jns
add
inc
cmp
dec
out
inc
leave
pop
adc
mov
call
lods
jge
dec
daa
arpl
cld
push
icebp
add
fnstcw
call
sub
sahf
add
mov
dec
cmpsb
adc
jge
xchg
inc
inc
jb
add
mov
ja
inc
leave
cmp
jo
push
arpl
int
mov
and
dec
xchg
adc
es
jbe
sbb
mov
lret
enter
dec
andb
lret
jmp
cmp
lds
and
mov
shrb
push
test
mov
data16
jbe
cli
jg
sub
sub
js
xchg
mov
lods
ss
lock
pusha
test
ds
ds
inc
test
sub
test
pop
xchg
add
loopne
cltd
add
pop
bound
or
shll
outsl
lcall
test
mov
jb
push
fs
shl
pop
out
daa
xor
repnz
cmpl
imul
mov
sbb
jmp
or
movsl
ss
decl
movsb
pushf
cmc
movsb
or
cmpsl
ret
jmp
ljmp
jb
stos
sub
or
mov
rolb
inc
sbb
dec
repnz
jle
hlt
dec
fs
hlt
rorb
les
paddd
mov
ret
xor
andb
test
push
ja
mov
ret
lret
or
mov
sbb
add
and
mov
sub
pop
int3
test
jle
adc
out
pop
push
hlt
sub
bound
mov
inc
test
push
xor
mov
jbe
push
daa
fcomps
loope
cmc
test
sub
in
or
rorl
sub
mov
ss
mov
fs
xor
adcl
stc
jo
mov
adc
repnz
jle
shlb
jns
psubq
data16
inc
xchg
adc
icebp
push
mov
call
mov
xchg
jb
dec
adc
flds
cmp
pusha
jl
scas
mov
adc
pop
mov
aas
int
orb
les
test
add
test
pop
mov
sbb
jnp
jl
xchg
cmp
rol
pop
cmp
stos
fisttpll
pop
lds
inc
inc
xchg
int3
call
push
scas
adc
and
testl
push
jp
sbb
add
test
mov
or
out
jecxz
or
popf
aad
loopne
sub
xchg
daa
cmp
notb
pop
pushf
aaa
int3
or
cmpsl
sbbl
cld
and
rorb
test
xchg
adc
clc
xor
jns
icebp
mov
and
cmc
xor
jl
dec
xchg
xor
jo
out
cs
imul
lret
pushl
ss
cwtl
push
clc
lods
outsl
imul
jae
jecxz
hlt
inc
jecxz
outsb
push
repnz
pushf
mov
push
sbb
loope
add
dec
scas
pop
pop
int3
inc
cmpsl
cmpsl
nop
dec
sbb
sbb
push
mov
outsb
clc
mov
xchg
xchg
push
fwait
jb
mov
cvtps2pd
sub
mov
jno
in
add
xchg
ss
pop
scas
mov
ljmp
pop
inc
push
adc
jne
jg
pop
scas
insl
lock
mov
repz
mov
mov
pop
sbb
ss
cld
cmpsb
stc
ret
jecxz
pop
or
shrl
call
fdivs
inc
push
cmp
imul
sub
pop
adc
mov
lahf
sub
and
sbb
mov
cmp
call
mov
and
out
negl
out
loopne
fcoms
movsb
cmp
mov
test
xchg
dec
pop
test
fcmovu
das
and
cltd
in
int3
fdiv
inc
aad
jle
inc
pop
lods
es
insb
or
pop
xchg
adc
mov
stos
mov
into
or
iret
and
adc
enter
xorl
inc
fwait
push
push
sbb
inc
incl
fdivrs
fidivs
insl
loop
in
adc
pop
scas
or
mov
adc
adc
push
pop
cs
outsl
sbb
sbb
inc
ret
jg
loope
and
push
insb
cmp
out
lcall
shll
push
cld
int
pop
and
lret
inc
fmuls
out
cmpsb
adc
push
fidivrs
xchg
adc
xor
cld
inc
push
push
fwait
cltd
out
int
mov
pop
cmpsl
lods
pop
push
mov
jae
arpl
and
push
sub
pop
sti
pop
imul
sbb
rcrl
jae
inc
inc
popa
and
fldl
mov
jge
dec
ljmp
setne
lret
jns
inc
jp
push
mov
mov
pushf
mov
inc
test
fisubrs
push
mov
sub
cs
fistpl
sub
add
fidivl
enter
jmp
fiaddl
arpl
dec
push
gs
and
sbb
sbb
scas
js
jmp
sbb
out
fisttpl
lahf
sub
lret
fcoml
xchg
jae
sbb
inc
leave
cmp
rcr
fucomi
ljmp
cmp
add
je
jmp
jmp
jbe
scas
imul
add
sbb
jbe
fwait
stc
loope
pop
test
leave
push
daa
leave
sbb
aas
icebp
dec
pop
dec
push
jle
add
fucom
fists
adc
outsb
adc
jle
or
rcl
sub
pop
jge
adc
stos
test
and
mov
sti
sbb
dec
adc
loope
insl
xchg
lods
repz
fstpt
xchg
fs
lret
mov
pusha
pop
das
lret
jae
fnstcw
ds
xchg
fimuls
jp
push
ljmp
push
cmpsl
test
xor
xchg
or
pop
and
pop
xor
pop
stos
or
xorl
stos
nop
aad
cmp
into
out
sub
adc
push
lock
sbb
stc
lock
xor
pop
add
inc
mov
mov
addb
adc
pop
in
popf
mov
xchg
aaa
dec
les
add
es
out
inc
or
bound
stos
add
pop
jnp
add
rcll
mov
push
mov
adcl
xor
lods
fsubs
rep
push
sbb
ds
jecxz
roll
cmpsl
mov
fisttpl
xorb
push
out
push
push
gs
jne
popa
mov
fisttps
je
outsl
push
subb
and
xor
dec
test
push
xchg
scas
inc
push
cmp
hlt
xcrypt-cbc
cmpsl
xchg
mov
loop
ret
jne
dec
push
inc
xchg
fidivs
sub
and
cmp
lods
pushf
and
jnp
mov
das
cmp
addr16
cmp
pop
jge
ret
inc
ftst
mov
sbb
notl
or
sbb
cs
stos
pop
xchg
pusha
data16
cmp
hlt
into
inc
psrlq
jecxz
test
pusha
lea
sbb
mov
xchg
test
mov
jns
jb
xchg
jmp
mov
jmp
pop
fwait
inc
jg
jle
mov
cmpsl
pop
sbb
loope
cmc
sub
jnp
inc
xorb
fdivl
call
arpl
lods
fwait
ja
mov
mov
outsb
shlb
xor
push
jbe
mov
mov
add
imul
ret
pop
xor
fisubl
pop
and
ret
xchg
dec
or
out
jge
add
lea
clc
sti
adc
xor
jmp
pusha
and
cld
cmp
je
sbb
mov
inc
movl
sbb
xchg
rol
test
and
cmp
mov
add
shrb
in
mov
sti
or
imul
pop
inc
ror
insl
adc
jns
adc
ud0
add
inc
push
mov
cmpb
sbb
jae
sbb
mov
sbb
rcll
cwtl
lcall
mov
dec
inc
insb
inc
cmp
idivb
mov
push
sbb
pop
jl
mov
mov
nop
outsl
popl
in
lcall
cld
mov
cmp
and
gs
xchg
pop
push
mov
xor
mov
dec
clc
xchg
and
xor
xor
adc
loope
int
adc
fstps
or
mov
dec
mov
outsl
stos
xchg
addr16
lea
push
xchg
adc
orb
mov
jbe
mov
xchg
stos
mov
int
aaa
lds
mov
jl
jne
test
add
pop
repnz
jno
xor
ljmp
xor
push
sub
inc
scas
add
and
rorl
cmp
imul
adc
dec
loope
dec
xchg
mov
outsb
push
repnz
inc
les
or
push
mov
mov
fisubrl
rcr
or
sub
mov
jnp
adc
sub
outsl
cmp
inc
int
popf
mov
push
dec
sarb
cmp
popf
and
scas
lods
mov
pop
mov
std
repz
rcrl
cmp
test
repz
and
xchg
cmp
out
popa
xchg
cli
pop
xor
int3
imul
clc
xchg
addr16
rcrb
mov
daa
and
inc
popf
arpl
cmp
inc
mov
dec
or
sbb
cld
push
fisttps
xchg
idivl
pop
jp
lret
idivl
inc
lahf
jle
dec
and
and
mov
in
cmp
jbe
clc
test
xor
out
ficomps
insl
push
cwtl
loop
sbb
mov
cmp
into
and
lcall
or
das
mov
ret
xchg
loopw
mov
enter
sbb
push
push
loop
jbe
jo
ljmp
inc
push
int3
adc
nop
sub
mov
shr
mov
loopne
adc
clc
mov
notl
imul
ret
mov
and
jns
xchg
stos
adc
jecxz
and
lcall
adc
mov
push
dec
sbb
ficoms
jecxz
and
hlt
outsl
aam
outsb
leave
jno
lahf
push
mov
leave
cwtl
arpl
lret
cmp
imul
dec
in
jno
movsb
shrl
jge
outsl
fbstp
pushf
sbb
imul
adc
repnz
mov
adc
iret
fdivs
lret
jl
xor
outsb
push
popa
add
mov
popa
fidivs
jge
xor
out
or
push
mov
jle
add
fnsave
out
xchg
icebp
test
pop
adc
aas
int
pop
mov
xor
in
scas
fdivrl
push
adc
pushf
jne
mov
inc
xor
cmpsl
push
out
or
hlt
stos
adc
mov
and
adc
xlat
jg
test
cmpb
leave
int3
lods
and
xchg
push
xchg
inc
fstps
push
xchg
push
jecxz
outsb
insb
push
push
std
in
xchg
test
xchg
and
shll
or
pusha
or
sti
mov
fcoml
push
adc
shrb
xchg
cwtl
lds
cmpl
dec
icebp
adc
or
pop
add
out
sub
jnp
pop
xor
lea
enter
cmpsb
jno
xor
gs
pushf
jge
mov
leave
add
in
cld
jns
xchg
mov
imul
mov
and
xchg
jge
dec
xchg
ss
jge
xor
lods
out
mov
inc
aaa
xor
adc
xor
mov
sub
dec
mov
sbb
stos
sar
es
dec
dec
mov
in
fsub
sahf
lcall
push
fwait
mov
cltd
cmp
testb
sub
fs
movb
push
xchg
ret
ds
pushf
loope
dec
sbb
mov
sbb
popf
cltd
shlb
inc
jle
cld
cwtl
jle
sub
test
cmp
mov
dec
imul
insl
jae
mov
scas
mov
adc
test
daa
dec
xchg
cmp
cwtl
fbld
mov
js
push
out
cmc
sub
imul
enter
sub
leave
in
imul
adcb
in
orb
mov
mov
rcrl
loopne
add
jns
sti
fidivs
stos
or
sbb
xchg
push
cmpsb
push
call
dec
add
lahf
adc
mov
in
pusha
jmp
enter
xchg
jl
and
jb
jmp
xchg
loop
arpl
xchg
push
pop
sub
mov
dec
dec
insl
in
mov
repz
lea
mov
add
call
imul
jmp
add
sbb
sub
loopne
push
pusha
in
and
jnp
aaa
add
jne
dec
pusha
dec
iret
mov
cli
leave
jno
sti
js
pop
jns
xchg
push
stos
fwait
cli
mov
xor
in
lret
sbb
ds
jno
adc
xchg
iret
gs
jmp
mov
shlb
addr16
mov
cmp
sub
jo
inc
stos
pop
push
dec
fiaddl
js
adcb
xchg
imull
pop
push
mov
leave
jae
jbe
and
mov
pop
inc
or
test
iret
or
loope
push
ja
inc
xchg
popa
lret
xlat
sub
rep
mov
pop
cmpsl
hlt
insb
imul
aad
push
lcall
lea
cmpsb
mov
sub
xor
mov
or
jnp
inc
adc
mov
push
xchg
movsl
sbb
cltd
data16
stc
in
lods
mov
fcmovu
std
icebp
ficoml
adc
popa
cmc
xor
jnp
pushl
dec
int3
sub
scas
or
mov
pop
arpl
fiaddl
shlb
mov
xor
subb
xor
lret
cmp
cmp
sar
mov
mov
mov
rcrb
inc
mov
lahf
adc
inc
adc
addr16
inc
jnp
push
sub
subl
pop
cwtl
pop
sahf
mov
and
mov
out
xchg
or
jne
in
es
xor
rolb
add
ljmp
nop
add
jl
jmp
repz
test
or
xchg
sbbl
cwtl
mov
xchg
sbb
dec
xchg
pop
scas
mov
mov
inc
je
sahf
ljmp
add
push
int
push
cwtl
mov
pushf
mov
jo
push
jne
mov
add
pop
mov
jmp
jmp
pop
mov
dec
jb
out
rcrl
mov
shrl
lret
inc
lds
mov
jno
test
xchg
dec
fidivs
jb
or
xlat
jbe
fdivs
lret
xchg
mov
jge
sub
and
rclb
adc
sub
data16
into
lods
xchg
lock
push
dec
mov
jmp
and
mov
lods
stos
mov
repz
scas
xor
pop
fidivs
out
sbb
ret
jo
stc
jl
iret
or
mov
das
jno
dec
cld
into
jns
cmp
inc
iret
ds
movsl
clc
and
je
lock
mov
lds
ljmp
lock
xchg
lcall
sub
iret
es
pop
enter
sub
fisubl
add
cwtl
iret
fnstcw
mov
xchg
inc
pop
pusha
popf
and
movsb
cmp
lds
inc
stos
mov
ss
mov
inc
or
shll
or
repz
dec
test
cmp
imul
in
xor
imul
mov
sbb
pop
mov
enter
cmc
stos
enter
dec
jecxz
jno
mov
add
je
rcr
xchg
pop
cmp
movsb
pop
sub
fldl
adc
dec
adc
pop
push
xchg
fildl
loopne
das
andb
fstps
push
faddl
loope
sbb
jbe
ret
push
and
add
and
jmp
xchg
or
dec
out
mov
ljmp
pushf
xor
xor
popa
cltd
loop
movsl
push
adc
scas
mov
cmp
adc
jge
cmovle
or
dec
mov
out
add
int3
jae
add
pop
je
lahf
scas
xor
aad
xchg
movsb
xchg
arpl
outsb
pop
test
mov
lahf
test
push
dec
cmp
adc
xchg
inc
in
xor
and
mov
stos
mov
jle
mov
fcomi
or
pop
push
cmp
cld
xchg
adc
movsl
xchg
sahf
sbb
inc
rclb
xchg
sub
push
pusha
stos
ja
lret
mov
jecxz
xchg
fcomp
outsl
xchg
cs
fsubs
enter
idivb
dec
and
rorb
insl
lcall
jecxz
or
lahf
mov
mov
aam
aad
pop
mov
pushf
pop
les
mov
mov
jp
dec
sbb
sahf
cmpb
out
or
xor
insl
or
sbb
popa
inc
in
pop
mov
mov
fsub
cmpsb
sub
movsl
adc
jp
xchg
lahf
sub
dec
xor
rcll
dec
dec
sbb
lcall
arpl
jnp
hlt
or
fisubrl
sbb
bound
aas
in
and
notb
jno
push
xor
push
push
jae
adc
push
dec
fisttpll
das
std
sbb
mov
movsb
push
jmp
sub
jp
aad
and
fistpll
inc
sarb
aad
xor
add
cli
mov
sti
ljmp
cs
iret
adc
mov
xor
cwtl
aaa
cmp
jle
rcll
mov
mov
jp
sbb
sbb
sub
mov
or
fldenv
pusha
out
fbld
xor
pop
add
jae
popf
insl
dec
xchg
mov
sub
or
fucom
mov
rcll
dec
xor
testl
cmp
rol
or
push
mov
adc
jg
insb
gs
enter
pop
cli
mov
popf
pop
jns
add
sahf
xor
pop
adc
jmp
lret
sbb
int3
test
push
int
pop
and
push
cmp
jge
jge
jmp
fs
mov
mov
inc
add
stc
adc
cmp
leave
cld
testb
sbb
repz
and
test
inc
xor
inc
sub
aad
mov
jns
daa
das
shlb
adc
clc
mov
daa
pushf
jo
scas
js
add
xor
sub
mov
daa
lcall
int3
adc
push
lcall
ret
cmp
dec
xor
ret
mov
daa
jecxz
fs
hlt
jns
adc
jge
dec
in
outsb
jmp
mov
aas
test
adc
test
xchg
movd
pop
push
or
test
aaa
scas
jne
xor
insb
loop
dec
adc
or
dec
sbb
jg
ds
lcall
xchg
mov
notl
adc
popf
jb
ja
frstor
mov
cmp
je
addr16
adc
jmp
jmp
sbb
int3
leave
sbbl
fsubl
sbb
lock
push
aaa
adc
pop
out
push
dec
outsl
jno
xchg
jle
fs
push
inc
and
fidivl
out
lea
lods
sbb
add
xchg
xor
and
bound
and
dec
outsl
xor
pop
inc
adc
jmp
addl
mov
xchg
mov
es
loop
in
adc
and
adc
movswl
cmpsb
push
js
pop
inc
mov
dec
xchg
cmp
jae
xchg
add
or
cmpsb
pop
arpl
adc
inc
test
add
inc
sub
aas
cmp
xchg
push
jno
sbb
enter
fisubl
xor
mov
jne
jae
dec
mov
jle
adc
mov
popa
mov
sub
xor
fistps
rorb
aaa
in
scas
inc
rcll
lea
popf
test
test
pop
xlat
movsb
fistl
inc
out
add
sbb
test
pop
adc
mov
jge
jecxz
stos
mov
and
in
lock
mov
pop
fsubrl
mov
cs
push
and
mov
std
hlt
lret
dec
iret
mov
xchg
adc
loop
insl
iret
push
setg
jge
aad
dec
or
or
outsl
ss
mov
imul
sbb
mov
negl
add
daa
outsb
std
sbb
mov
cmp
fsub
aaa
movb
cmp
xor
ljmp
mov
insb
cmpsb
ss
and
shll
subl
stos
jmp
loope
in
push
cmpsb
loope
movsb
push
fsubs
lock
fdiv
mov
scas
jne,pt
loopne
fcomps
mov
pop
addb
cmp
shr
addb
js
in
add
xlat
pop
jecxz
and
shrb
lods
mov
fidivl
sbb
movsb
movsl
jb
or
pusha
push
inc
scas
xlat
inc
pushf
test
dec
repz
sahf
push
fwait
or
or
enter
test
mov
xlat
cmpsb
cltd
rcrl
dec
jb
xor
jmp
push
jmp
cmc
enter
ljmp
int3
lock
mov
fildll
or
adc
mov
jle
and
sub
ucomiss
mov
push
mov
mov
insl
fs
push
mov
lret
xchg
int3
imul
js
lea
mov
xchg
jnp
jg
adc
cs
add
mov
sbb
es
mov
xchg
push
mov
sub
adc
loop
and
jge
sub
imul
shl
lods
mov
cmp
adc
add
lock
int3
push
xor
int3
and
aas
xor
mov
sub
cld
in
dec
test
push
adc
xchg
adc
cmp
sbb
mov
inc
sbb
add
clc
inc
push
mov
push
push
cltd
test
aaa
rcrl
dec
push
ljmp
scas
mov
xor
sub
and
inc
shll
inc
pop
add
dec
andb
out
jg
pop
bound
cmpsl
sub
popa
mov
sub
stos
std
jns
movsb
std
and
in
mov
cwtl
scas
cmp
ds
add
lahf
jnp
sbb
leave
or
popf
or
dec
out
mov
pop
push
xor
loopne
pop
add
push
std
rcll
fiadds
je
movsb
add
mov
sub
scas
inc
cmpsb
adc
std
lock
jbe
xchg
sbb
outsb
xor
das
mov
sbb
out
dec
dec
jno
mov
orb
mov
cmp
xchg
roll
scas
inc
dec
fsub
adc
mov
out
mov
lahf
dec
fstpl
bound
mov
jge
cmp
xor
in
dec
or
div
jmp
cmp
jl
xchg
or
add
imul
mov
mov
incl
mov
inc
outsb
xor
ret
js
jae
dec
negl
inc
add
insb
and
mulb
mov
xor
add
push
subb
xchg
arpl
jnp
lock
dec
cli
mov
out
outsb
or
sub
js
jbe
mov
or
mov
shrl
mov
cmp
ret
idivb
test
shll
insb
mov
add
test
fwait
mov
xchg
ret
test
jmp
mov
std
or
dec
xor
loopne,pn
jmp
mov
mov
jnp
xchg
out
pop
rcr
lea
out
sbb
pop
adc
and
xchg
inc
sub
push
cmp
ret
xlat
addr16
std
neg
jbe
fcomp
scas
dec
ja
jae
jp
in
mov
inc
inc
xchg
or
sarl
push
adc
inc
push
aad
ret
addr16
repnz
mov
mov
adc
mov
gs
out
cltd
mov
lcall
sub
int
push
in
sub
pop
xchg
and
scas
pushl
stc
mov
adc
imul
inc
xchg
sub
pop
push
xor
push
inc
in
daa
pop
roll
and
xchg
std
sbbl
enter
push
fwait
call
pop
jp
ds
adc
rorb
inc
xchg
std
daa
cmp
push
mov
js
sub
dec
dec
or
jge
xchg
in
pop
fidivl
mov
rolb
addr16
pop
adc
addl
ftst
pop
lock
add
add
sbb
pop
or
or
mov
adc
ss
addr16
in
mov
js
scas
into
xor
outsb
dec
cld
or
arpl
sub
rcll
sbb
push
sti
sub
nop
icebp
lahf
jae
insl
cmc
cmp
mov
pop
es
incl
sbb
aad
mov
sbb
mov
cltd
lock
xor
mov
scas
xchg
into
aam
lds
fnsave
lcall
rcll
add
adc
mov
pop
lcall
leave
push
adc
lcall
add
test
jp
cs
fstpl
mov
push
xchg
js
scas
push
fdivrl
inc
shrl
lret
dec
into
lcall
sub
push
dec
xchg
idivl
in
mov
or
push
in
jg
ret
sar
call
jge
pushf
add
jge
les
fwait
scas
inc
fimull
mov
and
out
lret
stos
cltd
jne
push
xor
rcr
out
imul
mov
lret
and
sub
pop
cmp
in
sub
and
rolb
pop
scas
and
leave
lret
push
pop
pop
sub
jle
mov
je
data16
adc
mov
in
xchg
mov
xchg
jne
cmp
dec
into
or
int3
and
call
mov
and
in
xchg
sbb
and
fcomps
cmp
and
ljmp
or
imul
xchg
jb
pop
std
adc
xlat
dec
cmp
rcl
pop
jg
inc
cmc
dec
dec
mov
pop
jb
mov
jl
inc
xlat
mov
or
push
pop
je
lret
outsb
pop
popf
in
int
xor
in
adc
das
pop
jp
hlt
and
pop
cld
pop
and
test
shll
cmp
mov
inc
xor
mov
rcrb
mov
out
scas
in
loope
pop
enter
adc
scas
cwtl
scas
jbe
or
mov
sub
fwait
sub
es
pop
push
ljmp
lahf
fisubrs
inc
and
mov
adc
gs
jp
fs
xchg
mov
mov
sub
daa
pop
jae
ficoms
test
pop
gs
push
jne
hlt
movsb
mov
cmp
push
data16
pop
mov
int
push
rol
and
jecxz
shrd
xchg
cmova
imul
lcall
jp
ja
dec
push
dec
imul
rolb
scas
xchg
out
cmp
jno
sub
idiv
mov
out
stos
mov
dec
dec
dec
push
int
data16
pop
mov
push
or
lcall
push
shrb
lods
adc
xor
push
add
push
in
fadds
xor
add
mov
adc
mov
or
jge
fcmovbe
bound
dec
mov
inc
and
shlb
movsl
dec
adc
imul
jmp
push
pop
push
popa
arpl
sbb
inc
and
pop
jns
jnp
enter
sub
sbb
fucom
stos
xchg
mov
rorb
arpl
rcrl
xorb
addb
loopne
fwait
imul
test
testb
imul
cmp
fs
cwtl
rolb
in
arpl
pop
inc
out
popa
fdivrp
jns
xchg
imul
sub
stos
ret
cmp
cmp
jge
adc
pop
and
jo
add
sbb
mov
sub
lret
movsl
push
push
popa
add
adc
jb
stos
fidivrs
fidivs
or
test
mov
push
or
outsb
sbb
push
xchg
pop
loope
add
cmp
pop
mov
and
in
ret
mov
jle
and
or
repnz
stos
pop
cwtl
insb
out
jo
sub
inc
rol
leave
sti
adc
popa
addr16
pusha
mov
pop
sbbl
sti
push
mov
rcll
push
rcr
arpl
sbb
jno
aad
cs
adc
test
aad
cmp
dec
int3
pushaw
int
xorb
inc
and
jecxz
test
insb
ss
push
add
jnp
pop
mov
mov
add
jnp
xchg
xchg
cmp
data16
scas
sbb
fwait
pop
adc
orl
and
sub
or
sub
inc
add
xorl
push
inc
mov
mov
rcrl
mov
jae
mov
mov
aam
jnp
sbb
sub
xor
add
dec
mov
sub
in
arpl
stos
popa
incb
mov
inc
or
push
mov
mov
jmp
xchg
mov
mov
addr16
test
insl
cmp
insb
popa
negb
push
outsb
ja
mov
fistpl
bound
pushw
cld
mov
arpl
shl
push
push
mov
xchg
dec
lock
outsl
dec
iret
in
push
mov
testb
mov
imul
push
and
int3
loop
sub
loope
pop
pusha
in
jl
and
push
xchg
out
imul
test
jecxz
xchg
fwait
sub
dec
stos
repz
popf
and
mov
lret
pusha
push
leave
stc
xchg
mov
enter
pop
inc
std
mov
ret
push
ret
rcrb
call
clc
mov
test
fdivrs
fldt
dec
aas
mov
xchg
ljmp
sub
dec
icebp
push
fdivrs
pop
add
fcomps
iret
cli
mov
xor
pusha
testb
inc
out
in
sti
movsb
cltd
pop
mov
repz
and
mov
inc
cs
out
ja
pop
jecxz
std
mov
push
inc
mov
js
arpl
out
cmp
out
pop
stos
sub
inc
loopne
xor
xchg
gs
xchg
cmp
push
jl
mov
out
jecxz
scas
pushf
inc
in
cmpsb
nop
es
dec
repz
cmp
dec
mov
and
add
mov
imul
pop
and
mov
in
mov
xorb
movsl
in
shll
ja
pop
loope
leave
cmpb
or
adc
ret
int
cmp
into
sbb
push
or
mov
inc
mov
in
movsb
mov
fidivrl
notl
mov
cmpsl
pop
fistps
inc
push
and
mov
cmpsb
into
and
xor
push
ret
inc
nop
dec
adc
mov
rorl
ljmp
jmp
dec
in
pop
clc
jns
test
sahf
or
and
or
push
insb
push
xor
mov
mov
arpl
sti
mov
add
or
fld
xor
inc
mov
mov
sti
or
imul
jb
xor
jno
sbbb
cmpsb
mov
leave
jb
mov
add
fadds
fmuls
imul
mov
lods
pop
cmp
les
call
inc
loopne
mov
shll
jae
dec
int
push
insl
sbb
jecxz
aad
xor
lea
stc
clc
adc
mov
pop
inc
push
insb
pop
movlps
ret
push
jge
mov
fldenv
mov
je
add
adc
cmp
sbb
mov
inc
nop
mov
enter
notl
insb
or
inc
sub
xchg
mov
lds
jle
xchg
push
push
adc
push
mov
inc
mov
sbbl
push
or
push
xorl
jle
je
into
add
insl
insb
mov
imul
sub
movsb
imul
pop
cwtl
pop
int
nop
mov
cld
and
mov
sbb
gs
mov
jnp
imul
pop
repz
push
add
lret
scas
into
nop
int3
outsb
test
mov
repnz
arpl
cmpsb
sub
cmc
sub
shrl
cli
nop
mov
mull
paddw
sub
lock
mov
ja
dec
push
jo
lds
push
test
wbinvd
dec
sarl
dec
fs
and
xlat
xor
cs
mov
lahf
xor
jne
scas
push
imul
mov
pushf
js
xchg
sub
inc
imul
cmc
test
dec
add
je
xchg
xchg
jae
mov
in
popa
fwait
dec
aaa
sti
js
in
inc
pop
adcl
inc
and
cwtl
lea
jmp
mov
cmp
jecxz
pop
loop
pop
test
jle
fnstsw
mov
mov
scas
std
inc
aaa
mov
mov
data16
fsubrl
mov
sbbl
into
adc
fcmovu
adc
inc
mov
adc
std
pop
jle
xchg
cmpsl
sub
push
add
xor
jge
cmc
mov
aad
mov
add
sub
in
mov
push
pop
lret
xlat
jl
xor
popf
movsl
mov
lahf
sti
dec
ret
jl
push
xchg
adc
leave
pop
loop
mov
pop
mov
bound
add
push
das
scas
leave
ret
or
out
fwait
mov
mov
js
jno
inc
dec
es
cmc
sbb
movsl
in
mov
push
inc
imul
pop
xor
lods
xor
cmpsb
stos
in
cmpl
shr
popf
add
loop
or
jns
adc
shrl
loopne
movsl
sbb
in
mov
ret
or
pop
fcompl
mov
ficoms
push
repz
daa
cmp
mov
movsl
cmp
sbb
cwtl
add
xor
mov
stos
sub
xlat
pop
loopne
add
push
pop
cmp
push
push
insl
arpl
cmp
dec
xchg
adc
ror
cmp
push
adc
enter
xlat
shlb
mov
mov
or
xor
fs
jo
and
mov
adcl
cwtl
insl
mov
enter
mov
pop
jbe
mov
pop
push
add
popa
adc
insl
fwait
dec
stc
fcmovnu
outsb
int
cli
mov
jp
ds
pop
pop
or
iret
or
icebp
pop
fcmovbe
jo
ret
mov
testb
cld
fs
inc
mov
inc
sub
mov
pop
cmc
xor
arpl
sbb
int3
daa
jp
pusha
pop
xchg
shlb
sub
aam
out
or
xor
fsubrs
lret
xchg
cmp
add
pop
dec
out
loope
popa
mov
addr16
into
jbe
addr16
jb
push
jl
and
dec
divl
inc
fisubl
and
or
mov
mov
mov
and
push
and
mov
pop
push
jmp
jb
fs
inc
dec
jbe
cmp
sub
adc
mov
bound
lock
ss
shll
dec
jo
push
test
cmpsb
in
xchg
pop
in
jle
fcmovbe
std
add
mov
pop
test
sbb
aad
add
dec
cmp
lea
xor
push
scas
jbe
adc
les
xor
js
pop
add
mov
dec
mov
lahf
jmp
push
sbb
daa
and
int
cmp
ja
pop
or
xchg
leave
mov
popa
jmp
scas
pushf
push
mov
stos
jns
jbe
pop
mov
pusha
stos
xlat
or
xchg
les
adc
xchg
add
mov
pop
pop
loopne
arpl
shll
jnp
xor
cmpsl
fnstenv
xchg
or
lahf
pop
test
cmp
pushf
in
adc
or
push
icebp
cmc
mov
sub
fistl
xchg
test
stos
fmuls
testl
or
cltd
jle
mov
icebp
xchg
push
jmp
enter
in
shlb
sbb
sarb
cmp
outsl
add
inc
mov
enter
xorb
pop
pop
cmpsb
inc
add
cmpxchg
mov
enter
inc
int3
jbe
mov
popf
or
lea
shrl
cmc
cwtl
pushf
stos
or
lret
test
mov
adc
jnp
lods
ds
insb
mov
stos
scas
xor
repnz
fsubl
nop
pop
mov
adc
cli
mov
and
or
dec
cmp
inc
xor
or
fstps
mov
push
popf
aam
out
jle
xchg
xor
les
outsb
mov
push
daa
pop
xchg
pop
pop
arpl
mov
and
push
jge
sbb
cvtpi2ps
inc
nop
ss
rol
inc
scas
jmp
jle
mov
ds
dec
add
ljmp
mov
and
into
lret
popa
push
add
ret
stc
xor
ret
lods
and
lock
dec
mov
loop
mov
inc
dec
inc
and
xorl
nop
xchg
mov
xchg
pop
mov
loope
jmp
inc
les
lds
in
inc
sbb
mov
testb
and
test
pushf
xchg
stos
sub
movsl
je
icebp
jge
scas
or
inc
push
loope,pn
pop
lcall
sti
lods
sti
aam
fwait
dec
push
cmc
xchg
adc
shrb
inc
stos
daa
fnstcw
jmp
insl
hlt
std
or
jmp
addr16
jne
jge
ss
cmp
stos
in
xchg
xor
push
xor
sbb
mov
xchg
pop
ret
mov
out
xor
aaa
add
and
test
je
mov
push
and
js
jle
subb
jge
enter
out
mov
cmp
mov
ret
daa
xchg
sarb
and
out
and
outsl
aaa
insb
cld
data16
add
push
inc
sub
call
cwtl
and
cmp
push
xchg
dec
push
test
xor
leave
xorb
addl
jo
bound
adc
cmp
xchg
loop
add
dec
mov
jmp
inc
test
enter
xchg
pop
xchg
int3
aad
lahf
cmp
scas
push
in
cmpsb
or
jg,pn
jle
cmp
bound
cli
dec
dec
and
sbb
push
dec
movsl
sbb
xor
or
aas
ljmp
aas
xor
jmp
mov
xor
pop
push
das
ss
std
pushf
adc
add
aad
dec
jbe
xor
outsl
shll
lcall
mov
sub
add
test
pop
rcl
or
addl
jb
in
fstpl
and
push
xchg
and
jno
arpl
sub
mov
cmc
sub
out
mov
and
in
jle
cmpsb
jp
fmuls
xor
inc
call
add
lods
pop
shl
test
sbb
adc
fnstcw
daa
pop
pop
add
and
adc
inc
jae
add
popa
mov
mov
adc
outsl
fildl
lea
push
sbb
add
loop
jmp
jbe
xor
jmp
or
adc
sahf
sub
rolb
scas
pop
xchg
fiadds
je
jbe
filds
dec
test
or
mov
dec
cwtl
into
pop
or
mov
cmc
cmp
orl
adc
gs
rorw
add
and
push
ret
je
ds
xor
jae
addl
out
scas
test
and
pop
pop
std
push
inc
jae
stc
push
mov
mov
mov
push
bound
and
mov
push
mov
mov
inc
add
daa
jns
xor
or
test
or
repnz
jnp
mov
stc
add
cmp
les
jmp
test
cwtl
add
popa
dec
sbb
push
ds
int
mov
dec
pushf
popa
or
fnstsw
stos
out
mov
insb
pusha
call
shr
std
adc
mov
jle
xchg
push
push
inc
mov
or
lods
ret
xor
mov
sub
notl
in
adc
repnz
dec
mov
pop
dec
aad
inc
mov
xlat
add
sahf
jmp
xor
push
cmpl
sub
jae
out
repz
adc
or
cld
sub
loopne
je
mov
ss
mov
icebp
pop
push
test
imul
push
out
cld
jnp
hlt
testb
or
fwait
xchg
ret
jle
push
shlb
adcb
ljmp
pop
andl
lcall
shll
jmp
mov
sub
jae
stos
ret
mov
inc
mov
or
je
into
aas
mov
sbb
mov
mov
dec
int3
sub
iret
mov
pop
loopne
xchg
xchg
clc
sub
add
sbb
push
cmpsb
inc
xor
or
add
dec
imul
lods
and
mov
mov
adc
into
data16
popf
iret
out
push
jnp
mov
xchg
pushf
pushf
sub
aaa
jp
dec
sbb
insb
push
and
add
mov
cmp
ja
aad
shl
and
fmull
xchg
cmp
push
rol
nop
fbstp
jb
cmp
pop
psubsb
sub
bound
mov
dec
jmp
sbb
and
loopne
rolb
les
stc
enter
cli
adc
jne
xor
scas
inc
incl
add
mov
into
pusha
jo
push
jecxz
jns
mov
pop
js
movsb
jmp
fcom
lcall
jmp
sub
lods
jmp
popf
push
or
dec
jb
enter
shll
inc
ljmp
stos
rclb
cwtl
add
sub
cli
cmpl
cwtl
jbe
cltd
mov
xor
mov
je
and
push
stc
insl
mov
mov
push
gs
xor
fsubrs
push
stos
ret
les
imul
and
mov
cmpl
fcomi
mov
shl
clc
sbb
push
insb
dec
repnz
fwait
mov
pop
dec
fldenv
adc
je
clc
mov
jmp
pushf
xor
xchg
daa
push
fbstp
push
xor
cmp
jae
jecxz
sub
fildl
mov
dec
outsb
loopne
orl
lods
dec
fisubrl
xchg
and
shrl
ret
jbe
inc
add
int3
sub
dec
or
frstor
rcrb
pop
sbb
adc
xor
loopne
xchg
push
adc
aam
aas
push
adc
mov
cli
and
mov
fsubs
cmpsl
sbb
add
rep
mov
scas
push
mov
dec
xlat
mov
jmp
aas
xor
inc
cmc
arpl
loopne
sub
mov
inc
outsl
cltd
icebp
adcb
outsl
cmp
cmp
cmp
add
lcall
out
mov
enter
scas
jbe
lock
xchg
mov
js
adc
jecxz
sub
cmp
stos
push
mov
add
push
xlat
add
outsl
push
push
or
fisttpll
in
in
pop
addr16
inc
aad
loopne
loop
sbb
mov
or
mov
cwtl
cli
dec
int
mov
mov
ja
pop
sbb
xchg
sub
pop
loope
add
popf
jecxz
bound
mov
outsl
testl
jae
dec
fwait
scas
cmpsb
loop
ss
add
ds
mov
and
dec
imul
adc
pop
xchg
xchg
fmull
int
cld
popf
dec
leave
insl
cmp
dec
cli
rcr
cmp
xchg
inc
je
cmpsb
push
push
mov
dec
in
in
sbb
jle
xchg
in
or
mov
push
pop
je
cli
adc
xchg
lods
sub
js
jl
mov
add
cmp
popf
nop
xchg
cmc
js
or
mov
inc
addr16
cmpsl
cmp
call
pop
add
mov
repz
jo
lcall
out
xor
push
inc
cmp
pop
jl
pusha
lds
repnz
fisttps
or
mov
sub
pop
loop
pop
jno
subl
jno
jl
adc
fmulp
add
mov
in
jbe
sbb
cmp
or
mov
xor
xchg
sub
and
imul
imul
fisttpl
std
cs
jo
mov
sbb
pop
push
jg
int3
ljmp
mov
add
jnp
push
xchg
bound
mov
loope
push
hlt
push
daa
xor
mov
outsl
push
jmp
sbb
mov
add
fists
shrl
ljmp
fldcw
inc
add
popf
push
pop
repnz
dec
xor
mov
mov
mov
dec
jae
mov
cld
adc
sbb
add
cltd
shlb
xchg
pop
mov
push
sbb
jp
fisttpll
mov
mov
insl
pop
jno
sub
and
jecxz
out
pusha
push
xchg
lods
dec
movsl
sbb
pusha
stc
xchg
out
mov
sahf
sub
mov
pusha
xor
mov
inc
pop
dec
push
add
lret
dec
and
rcrl
outsb
aaa
insl
xchg
add
scas
xor
mov
or
test
jb
jp
bound
inc
mov
xchg
in
repnz
xor
and
xor
mov
cmc
jns
push
outsb
inc
fwait
xor
fcmovb
dec
sub
rcll
xchg
sub
jmp
mov
lock
cli
sub
xor
lahf
popa
rorb
scas
dec
mov
mov
sti
repz
inc
inc
out
es
clc
xor
dec
repz
stc
or
pop
mov
mov
cmp
cmpsl
and
pusha
lcall
jae
mov
daa
sub
adc
xchg
jae
stos
cmpsb
aaa
mov
gs
js
pusha
scas
and
fs
pop
sub
pop
pop
push
mov
add
push
xchg
into
mov
adc
inc
xchg
repnz
arpl
jnp
popf
xor
cmp
cmc
aaa
mov
scas
call
aas
bnd
cmpl
add
lods
loop
adc
sbbb
sub
in
test
pop
sub
cmp
push
fwait
lahf
dec
jns
jmp
cmp
mov
sub
jge
add
jg
loope
sbb
or
jbe
js
shlb
pop
dec
push
push
loope
inc
out
cmpsl
clc
hlt
add
jecxz
fwait
xchg
jg
nop
add
mov
aad
out
push
or
push
stc
jae
lret
into
notb
rcrb
and
adcb
push
or
add
fstpt
adc
dec
mov
addb
pushf
adc
rcr
mov
loop
dec
cmpb
cmpl
je
lds
push
push
into
mov
addb
adc
ds
mov
adc
outsl
dec
or
repz
popl
mov
jbe
jle
inc
pop
xchg
jns
nop
pushf
es
sub
outsl
mov
pop
jnp
ds
mov
aaa
in
pop
lods
or
adc
or
mov
xor
jb
push
jns
bound
subl
or
sub
cmp
xor
hlt
mov
jle
nop
pop
movsl
pop
movsb
adc
sub
pop
jns
sub
jle
cmpb
daa
repz
or
stos
xchg
sbbb
and
lahf
and
lret
je
xchg
push
rorl
outsl
popa
loope
push
pop
popa
iret
stos
gs
xor
aaa
pop
lods
hlt
add
and
in
aad
ja
adc
je
pop
pop
fidivrl
test
mov
test
pop
out
dec
mov
pop
cmp
push
out
cmpsl
push
repz
cltd
adc
jp
sbb
sbb
inc
jbe
sbbl
inc
jbe
dec
jbe
outsb
iret
in
dec
xor
pop
sbb
inc
mov
outsb
ror
dec
loope
mov
mov
mov
push
icebp
insl
add
les
in
outsb
iret
pop
push
mov
mov
sbb
cmc
ss
stos
mov
push
push
mov
cmp
add
addb
cld
jmp
push
std
pop
push
shrb
aaa
inc
push
in
pop
inc
lahf
dec
jle
dec
jbe
mov
jge
jmp
dec
ja
cmp
dec
lret
addr16
cmp
shl
pushf
sti
xchg
fisttpll
fisubrl
cmpsb
adc
push
push
pop
jbe
xchg
jge
int3
xchg
int3
notl
dec
inc
lods
xchg
or
nop
xor
ret
dec
mov
jnp
xor
xchg
xor
in
rcr
and
loope
and
jmp
test
insb
nop
mov
cltd
mov
imull
mov
xor
lock
pop
adcl
idivl
sub
mov
cmc
push
cmp
cltd
mov
outsl
and
cli
fiadds
cmp
fildl
jge
addb
xchg
sbb
lods
cwtl
pop
stos
cld
jg
enter
scas
in
lock
pop
mov
mov
lea
leave
adc
divl
arpl
hlt
test
aad
inc
pop
push
sub
pop
das
popf
mov
jmp
mov
roll
ficompl
clc
movsl
sarb
aas
cmp
and
fimuls
adc
or
lea
les
and
sbb
stc
test
push
rclb
das
lock
out
push
push
addr16
cmp
sub
icebp
xchg
push
rolb
ja
or
out
sub
call
mov
xchg
loope
xor
popf
push
and
xor
jmp
mov
push
adc
inc
push
push
pop
xchg
xor
test
dec
jge
data16
mov
repnz
in
inc
scas
and
mov
sbb
aas
pushf
cwtl
cmc
ret
mov
sti
fnstenv
and
lret
das
add
mov
inc
jnp
stc
pop
mov
add
xor
mov
jge
xor
mov
shrb
mov
rolb
aad
test
rcrb
jge
mov
jne
dec
adc
dec
lods
out
fwait
bound
fwait
adc
mov
inc
mov
mov
pop
add
sub
roll
inc
cwtl
xor
mulb
pmuludq
push
roll
lods
hlt
adc
and
and
mov
ljmp
out
jp
sub
gs
pop
adc
clc
dec
pop
jmp
inc
lret
mov
aam
xor
xchg
orl
mov
mov
int3
lcall
cmp
push
mov
fdivrs
int
add
cmc
or
scas
xor
std
adc
popf
jns
nop
ja
pop
clc
inc
xlat
test
divb
xchg
icebp
fildl
icebp
mov
sbb
dec
leave
test
jmp
mov
adc
sbb
xchg
cmpsb
mov
mov
rclb
mov
push
adc
pop
test
pusha
jg
andl
stos
fldt
adc
lcall
or
xchg
in
fimuls
cmp
ss
pop
push
cmp
jmp
ds
lahf
mov
push
or
mov
push
loopne
iret
and
add
repnz
test
and
sbb
enter
fdivl
lret
mov
inc
inc
mov
jnp
shl
insb
mov
fwait
les
add
aam
xor
aas
xchg
sub
push
xor
rorl
push
push
push
jl
fistl
dec
fcoms
lret
lret
pushf
push
cmc
ffreep
ret
push
sbb
and
stc
daa
jmp
sub
pop
sub
rolb
pop
bound
mov
jne
or
out
mov
add
rorb
sti
daa
or
adc
mov
lods
shll
xor
inc
sbb
es
lahf
arpl
test
and
jo
cs
pusha
xchg
fs
or
and
push
notl
sbb
cmp
pusha
clc
xchg
mov
jge
outsl
mov
push
dec
jne
sub
adc
inc
adc
rorb
sbb
cmp
push
jp
sti
jp
pop
adc
mov
stc
mov
mov
mov
mov
jg
divl
jbe
out
gs
xchg
pop
inc
lret
mov
mov
lods
mov
or
xchg
or
push
mov
fisubrs
int3
test
mov
aad
lock
xor
adc
adc
mov
test
mov
mov
jno
cmp
adc
es
fildl
int3
add
cmp
pop
mov
or
fmul
xor
mov
mov
mov
lret
pop
xchg
sbb
imul
mov
xchg
fstps
mov
mov
repz
add
dec
in
mov
jl
xchg
icebp
mul
sub
fnstenv
aad
ret
dec
cmp
cmp
dec
js,pt
lods
fs
fistpl
outsl
stos
lea
lock
popf
pop
enter
jecxz
fcom
adcb
or
cltd
ja
jp
push
ficomps
pop
pop
adc
fdivrs
cwtl
cmc
jne
lcall
xchg
test
shlb
jae
nop
cmp
in
loope
arpl
inc
imull
cmp
mov
jo
mov
fldcw
movsl
sti
lea
outsl
aas
inc
std
das
test
mov
popl
leave
popl
pop
outsb
pop
adc
add
sub
xchg
aam
lods
push
push
sbb
rcll
fdivs
and
cmp
lea
lods
mov
cli
mov
cmpsb
nop
mov
std
aaa
inc
loope
enter
dec
xor
das
stos
fisubl
addb
clc
push
outsl
cmpsb
mov
shrl
xchg
dec
mov
jns
pop
xlat
movsl
loop
xlat
xor
xor
call
js
dec
xlat
or
jge
add
out
pusha
jmp
rclb
inc
in
imul
xchg
xor
xchg
xchg
ficomps
data16
mov
push
xor
js
stos
cmp
imul
pop
mov
rcll
mov
jo
bound
lret
mov
dec
inc
mov
sbb
or
push
and
inc
add
adc
fwait
jg
call
mov
sarl
sarb
test
mov
sbb
add
lcall
stc
sbb
sbb
jecxz
stos
pop
dec
adc
jo
lods
leave
cmc
and
jo
sub
xchg
inc
and
scas
and
xor
mov
inc
pop
sti
mov
lods
arpl
inc
sub
inc
pop
jae
sub
ss
cmp
and
in
daa
stos
ljmp
mov
sub
lods
ret
in
sahf
call
pextrw
dec
xor
lret
push
push
mov
sti
andl
mov
fldcw
sbb
push
shrb
scas
jp
cmc
or
fsubrs
xor
push
sbb
test
inc
xor
lcall
pop
push
repz
mov
lock
or
fcmovne
push
fiadds
and
popf
mov
adc
xor
jae
dec
stc
xor
test
pop
sbb
leave
mov
and
insl
fwait
jb
cli
dec
dec
or
dec
fmull
lret
mov
dec
push
cmp
mov
mov
jo
dec
xchg
ret
int
shlb
push
dec
loop
loopnew
pop
dec
or
mov
add
fnop
cwtl
jb
outsb
nop
rcll
fucomp
stc
outsb
push
aaa
push
mov
std
pop
scas
pop
mov
mov
jle
aaa
sbb
jbe
pushf
fistps
shlb
or
or
in
dec
xchg
mov
clc
inc
das
ljmp
mov
jle
in
neg
mov
push
dec
clc
bnd
iret
gs
cli
jnp
dec
mov
enter
pushf
test
or
sub
call
xor
stos
pop
dec
iret
push
lcall
call
fildll
stos
mov
xlat
mov
aas
dec
pop
xor
mov
add
xchg
jnp
push
pop
in
push
sbb
mov
sbb
outsl
outsl
dec
filds
jns
xchg
cmp
je
push
insb
shrb
test
sar
push
dec
pop
shll
mov
pop
sbb
pop
clc
fnstcw
mov
cmp
sbb
fadd
test
cmp
iret
adc
data16
pop
in
xor
inc
jbe
cmpsb
mov
adc
sbb
bnd
aas
repz
or
xor
sbbl
sub
dec
in
xor
sbbb
mov
cli
shrb
pop
cli
jnp
sub
sbb
popa
cmp
pop
cmpb
inc
cmp
jmp
stc
push
leave
cltd
sub
push
xchg
adc
ret
sbbb
faddl
hlt
add
movsb
cld
mov
cmp
adc
jns
ror
insl
jmp
lret
mov
sbb
push
add
jae
aaa
dec
fs
dec
mov
push
dec
xchg
inc
frstor
mov
pop
std
jle
and
cmp
loop
push
mov
pushf
jo
mov
mov
adc
jl
sub
fstpl
subb
pusha
test
xchg
sbb
iret
push
sbb
adc
pop
stos
and
sub
xchg
sti
fwait
loopne
insl
jge
pop
cs
fstl
sbb
enter
pop
fcomps
lcall
popf
iret
sar
data16
mov
mov
adc
and
add
or
push
dec
cmp
xchg
mov
xchg
jo
ljmp
insl
lcall
bound
pop
sbb
add
es
sahf
sbb
or
out
and
mov
rclb
pop
dec
xchg
orb
fsub
sbbl
xchg
push
xor
jo
jo
and
ror
xchg
inc
out
xlat
mov
pop
mov
mov
call
cwtl
out
lcall
sar
mov
push
add
sub
dec
repz
icebp
sbb
std
sti
jo
ljmp
lock
int3
dec
xchg
xchg
in
inc
test
add
aam
insb
sub
push
jmp
sub
mov
stos
jl
xor
add
adc
lea
pop
int3
add
dec
leave
pop
push
mov
add
int3
into
imul
mov
sahf
mov
in
add
imul
jo
iret
sbb
inc
mov
jns
dec
je
push
out
aam
xchg
aas
mov
mov
std
shlb
pop
add
xor
fcompl
jno
in
movsb
jno
data16
jecxz
test
addb
scas
xchg
and
mov
and
pushf
out
icebp
push
mov
sub
sarl
lcall
popf
clc
sbb
xor
mov
mov
push
xor
ret
das
mov
mov
in
loope
incl
in
lea
push
cmpsb
cmp
mov
mov
mov
cmpsl
cmpb
push
dec
jmp
push
out
stos
out
or
and
xor
dec
cs
sub
and
out
jb
rorl
push
fs
es
cmp
adc
xor
addr16
in
stos
leave
imul
push
sub
scas
lds
jo
mov
jb
ss
xchg
push
ret
cmpb
pop
enter
fmuls
xor
fdivl
idiv
push
cs
and
mov
and
xor
lods
xchg
mov
jbe
jns
int3
xchg
or
int
gs
push
xchg
add
mov
gs
xchg
icebp
incl
sarl
lods
or
daa
fsubrs
xchg
push
mov
xchg
adc
shll
mov
jnp
add
push
push
mov
xchg
jae
cmp
hlt
pop
xor
mov
ja,pn
jg
add
inc
inc
xor
cmp
push
mov
and
dec
out
sub
mov
insb
movsl
mov
dec
lahf
cmp
shlb
fcomp
mov
repz
xchg
and
add
cmpsb
xor
pop
insl
or
pop
push
dec
xchg
xor
roll
xor
in
lcall
mov
xor
inc
cmpsb
push
push
cli
fbld
mov
lods
pop
cmc
int3
adc
insl
ljmp
pmaddwd
imul
inc
lock
das
push
push
lret
addl
fstpl
jge
repz
mov
hlt
mov
ror
cltd
pusha
or
cmpsl
test
scas
inc
into
or
or
clc
adcb
sub
clc
repz
repnz
addb
mov
push
cld
mov
sbb
fs
or
out
sbb
push
iret
adc
idiv
xchg
pop
mov
sub
sub
in
xchg
imul
popa
or
or
sub
adc
lock
jne
or
andl
dec
pop
xor
loopne
cmp
in
inc
testl
lret
aas
mov
sbb
add
in
mov
movsl
mov
push
mov
lret
les
xor
push
xor
xchg
mov
jecxz
sub
add
cld
or
or
push
test
pop
popa
mov
adc
xchg
clc
mov
inc
mov
subb
pop
ds
mov
cmp
jp
push
push
rorb
popf
dec
dec
sbb
jb
cmpsb
bound
jae
mov
or
aas
fwait
bound
and
test
push
lds
add
push
fisttpll
sub
sub
mov
add
jbe
sahf
and
xlat
dec
lock
push
lret
stos
fisttpll
add
push
sbb
push
cld
out
dec
in
movsl
add
mov
adc
mov
cmp
gs
push
and
inc
inc
leave
and
shlb
push
adcl
and
mov
lahf
xchg
loopne
in
xor
add
jb
add
pop
mov
repnz
and
daa
add
inc
andl
lods
sbb
insl
rdtsc
pop
jl
cmp
scas
clc
push
cs
shlb
div
sbb
adc
mov
hlt
loope
rorb
subb
outsb
test
dec
lods
mov
popa
mov
ret
ret
imul
daa
popw
iret
jmp
mov
jo
cmp
cmpsb
mov
dec
jbe
mov
movsb
push
daa
dec
movsl
sbb
jecxz
xchg
or
lds
cmpb
dec
jecxz
pop
fisubs
imul
cmp
and
dec
lahf
test
mov
mov
int3
cmp
cmpl
lock
xlat
ja
loop
fiaddl
mov
adc
sub
movsl
imulb
popf
punpckhdq
sbb
push
mov
pop
pop
mov
dec
lock
sarl
decl
cs
enter
push
adc
lret
adc
pop
mov
lds
loope
ja
xor
xchg
sub
stos
rorb
je
push
dec
add
mov
leave
stos
outsb
ret
pop
shlb
adc
mov
push
add
data16
xor
cltd
push
sub
or
pop
jns
aaa
fadds
cld
xor
mov
or
mulb
js
jne
rorb
out
push
lahf
ds
sub
xchg
outsb
insb
out
add
cmp
lcall
mov
xchg
aaa
and
les
sbb
scas
dec
fadds
xchg
lds
movsl
jne
in
lock
push
imul
divl
xchg
dec
pop
shll
iret
out
push
lods
jl
repz
dec
mov
in
lock
decl
out
cld
js
aad
leave
pushf
in
mov
fmulp
sahf
insb
mov
dec
add
jnp
sub
jecxz,pn
dec
sahf
jmp
fadds
inc
or
imul
out
mov
aaa
fldcw
repnz
aas
adc
jbe
xor
bound
adc
stos
add
mov
fwait
jnp
outsl
mov
add
arpl
dec
dec
adcb
iret
das
out
xchg
rcrl
adc
pop
cmpsb
test
cmp
pop
clc
lods
movl
inc
xchg
movsl
xchg
ret
adc
fistl
rolb
dec
jge
leave
js
iret
cmp
subb
xor
mov
call
out
stos
pop
mov
mov
mov
test
je
inc
fistl
dec
dec
lea
jmp
mov
mov
es
mov
sar
add
add
mov
mov
or
jns
aad
mov
add
mov
mov
dec
mov
outsb
or
jecxz
sbb
out
xor
dec
inc
mov
sbb
inc
pop
mov
cli
in
mov
mov
cmpsb
jo
or
mov
ljmp
call
stos
cmpsb
mov
cmp
adc
inc
fwait
hlt
stos
cs
data16
mov
jnp
mov
sbb
pop
les
mov
adc
call
imul
mov
pusha
xchg
dec
outsb
mov
movsl
jne
cmp
lock
pop
mov
sub
js
cli
push
xor
inc
pop
roll
xchg
lret
js
imulb
jmp
incl
insl
mov
sub
mov
outsl
jecxz
bound
sub
mov
scas
mov
je
mov
fstl
lods
out
inc
loop
or
sub
fs
sub
sbb
xor
pop
jae
popf
jae
add
rorb
ljmp
pop
mov
lret
dec
mov
adc
add
lret
jb
push
cmp
adc
add
jle
sti
pop
test
pop
cltd
add
in
push
adcl
push
filds
shrl
pop
lods
mull
pop
in
pushf
nop
sbb
xor
or
mov
and
push
pushf
xor
jbe
lea
xor
shll
imulb
push
aas
xchg
push
pop
sbb
test
pop
xor
cmp
mov
mov
adc
repz
mov
aad
in
jge
xor
mov
test
sbb
in
mov
insl
fidivs
shll
test
addr16
fs
mov
mov
mov
sbb
in
les
jb
loopne
add
insl
std
or
fsubrl
ds
push
cmp
dec
lods
inc
push
xchg
sbb
xor
mov
imul
xlat
aas
cmp
cmp
mov
fisttps
shlb
sub
rcrb
xchg
fcomps
inc
in
sub
imul
or
das
mov
jns
pop
mov
adc
scas
cmp
xor
je
mov
inc
lahf
jecxz
test
test
inc
mov
adc
push
andl
out
test
in
jae
je
or
xor
pop
mov
add
pop
mov
fcom
sub
add
inc
cmp
aas
sbb
sub
jno
int3
cmc
push
mov
sub
jmp
jnp
icebp
and
lds
adc
sub
sbb
and
subb
xorl
pop
lds
cmp
ficoml
adc
aad
and
jb
lds
subb
adc
mov
bound
pop
add
in
cmp
shll
stc
ljmp
inc
add
mov
dec
sahf
dec
je
icebp
push
stos
mov
fisubrs
outsw
mov
mov
add
jae
aad
jle
pop
inc
jae
notb
mov
dec
in
lret
leave
clc
ljmp
cmp
cmpsl
sub
pop
add
fstps
mov
xchg
push
addr16
ret
cmp
xor
cs
cli
mov
mov
addb
and
or
sbb
mov
inc
fdivl
je
rcl
negl
ret
xchg
test
xor
and
or
loope
cmp
pop
push
dec
leave
outsb
jp
pushf
sub
cmpsb
pop
enter
and
fmuls
inc
stos
popf
cmc
push
ss
outsb
sti
sbb
pop
call
cmp
cmpsb
xchg
in
shll
sbb
adc
cmpsl
sbb
mov
sbb
test
xor
fcoms
lret
fwait
enter
fs
and
cmp
and
sti
in
int3
fsubs
int
bound
js
daa
cmpsl
mov
push
mov
cwtl
mov
pop
sbb
sbb
mov
lock
pusha
mov
xchg
clc
pop
sub
imul
int3
in
negl
fwait
adc
lcall
outsl
ret
mov
aam
cmp
pop
pop
lret
test
xor
frstor
mov
enter
out
jo
push
mov
xor
xor
out
shrb
cmpsl
pop
add
filds
pop
push
cmp
stos
int3
daa
or
popa
insl
and
data16
mov
cs
aad
ret
and
jecxz
ret
mov
fdivr
mov
cmp
mov
inc
pop
movsb
pop
imul
scas
les
mov
ja
ja
dec
mov
mov
rclb
out
push
lahf
mov
mov
pop
mov
add
pop
push
aaa
js
fcoml
pop
inc
mov
mov
rcll
fcmovnu
fisttpl
pop
inc
xchg
cmpsl
aam
mov
cmp
insl
add
popa
cwtl
shlb
stc
push
movsl
faddl
mov
inc
adc
or
clc
pop
push
int3
sahf
xor
scas
rcll
add
mov
cwtl
sbb
incl
in
inc
or
cmp
mov
pop
lods
jns
loope
jle
mov
repz
mov
jg
fstp
mov
or
shll
stc
xchg
mov
fcompl
dec
fimuls
inc
mov
sbb
fstps
mov
sub
push
dec
lcall
out
mov
xor
push
cmp
das
mov
and
sbb
dec
inc
ja
stos
mov
dec
out
push
push
sub
mov
outsl
insb
int
gs
jl
push
cmpsl
and
jmp
fiaddl
mov
outsb
rcr
jno
test
mov
lcall
in
or
push
jg
das
push
sbb
mov
cmp
ret
mov
sar
scas
movsb
test
add
es
incl
mov
push
test
in
loopne
call
and
adc
adc
jg
jle
in
push
lods
adc
ja
or
cwtl
sub
push
sub
cld
stos
rcrb
mov
test
jecxz
push
pop
cmp
push
mov
push
cmp
cwtl
lods
adc
imul
fs
ffree
mov
icebp
xchg
xor
jle
aad
jae
test
mov
mov
in
inc
les
repz
xor
fnstcw
int
adc
inc
mov
dec
test
scas
repz
inc
lods
leave
mov
rcr
cmc
mov
xorl
mov
cmpl
dec
pop
rorb
fadds
mov
sub
stos
dec
or
pushf
scas
call
inc
cmp
jae
add
jmp
push
imul
xchg
cmpsl
jne
inc
lds
into
or
gs
lahf
in
repz
mov
mov
mov
push
mov
sbb
mov
sub
pop
movl
sub
inc
mov
or
mov
sbb
adc
pop
sti
cltd
mov
jge
je
inc
fidivl
xchg
dec
in
movsl
cmpl
pop
xor
daa
jge
mov
sbb
mov
jmp
pop
adc
xor
aad
loopne
imul
in
jo
xchg
rcll
jbe
sbb
sahf
in
xor
adc
lods
mov
pop
lods
sbb
fs
jmp
mov
clc
ds
orl
sbb
pusha
fsubrs
push
dec
adc
cld
sub
es
hlt
inc
lods
sub
adc
jmp
and
imul
jae
mov
jp
push
adc
adc
pmaddwd
push
xchg
lret
sbb
lds
in
push
or
outsb
or
mov
jp
fdiv
test
xchg
mov
in
xchg
cltd
add
add
call
xchg
mov
mov
xor
div
fs
arpl
subb
shlb
mov
inc
testl
in
cmp
pop
icebp
ja
xor
clc
nop
std
insl
in
ds
sar
fbstp
mov
sbb
inc
mov
xchg
je
lea
movsb
lahf
test
loop
jae
or
test
dec
inc
and
cs
sub
pop
adc
xor
sub
and
je
popa
mov
push
or
push
hlt
movl
js
sub
and
xor
jle
sbb
push
mov
flds
push
fxch
aam
push
pop
xchg
outsl
sbb
leave
mov
into
mulb
push
jp
shl
xchg
jg
in
lds
into
call
je
xlat
xor
xchg
scas
test
movsl
cmp
les
xchg
andl
test
mov
aad
cmpsb
cltd
dec
cmp
scas
pop
xor
mov
sub
push
lcall
cmp
or
adc
loop
mov
aad
stos
xchg
fcmovb
mov
or
insb
pop
sbbb
or
imul
sahf
inc
mov
call
cwtl
lcall
cmp
shl
jns
cld
sbb
xchg
sub
xlat
xor
or
ljmp
aaa
adc
outsw
mov
imul
push
xorb
push
inc
inc
data16
push
xor
mov
fists
dec
xchg
xor
sti
push
mov
push
mov
cltd
loop
setno
push
enter
inc
xchg
and
frstor
shll
icebp
mov
sti
lock
jne
popa
dec
lds
inc
sub
ret
or
adc
vmovups
sub
dec
sbb
push
vmread
xor
cmpsb
xor
neg
pusha
js
lods
push
and
shlb
push
lods
es
jnp
mov
xchg
fwait
cmp
push
sub
sbb
or
mov
call
xor
lcall
inc
inc
push
popl
mov
xor
pop
testb
pop
xor
mov
bound
sub
mov
or
mov
jmp
mov
loopne
push
xchg
lods
popf
xchg
cs
jne
shll
push
and
lds
pusha
adc
jo
repnz
iret
and
cmpsl
idivb
int
xchg
jno
call
adc
sub
pushf
mov
fwait
dec
cmp
out
pop
sarb
sub
push
pop
sub
ja
jmp
pop
pop
scas
push
push
popa
lret
sbb
or
add
lods
hlt
and
decl
xchg
ret
clc
cmp
sub
lret
adc
dec
sbb
add
lret
jmp
cli
pop
jmp
lds
lret
inc
adc
out
pop
xchg
pop
add
mov
gs
cmp
jle
xchg
add
cmpsb
jns
and
fucom
adc
push
insb
sarb
pushf
insl
mov
test
adc
out
mov
mov
mov
sub
fdivrs
scas
pushf
push
out
adc
ja
jo
cltd
xchg
fs
fsubrl
das
push
pop
les
adc
sbb
adc
add
daa
cwtl
cwtl
or
movsb
stos
pop
pop
sbb
out
popa
inc
incl
int
mov
push
and
push
add
xor
lock
adc
xor
test
outsl
pop
mov
xor
adc
sub
push
popf
mov
testl
push
mov
add
pop
pop
dec
mov
pop
push
js
or
loop
sar
in
pop
lcall
jp
mov
dec
addl
outsb
ja
movsl
inc
lret
es
push
mov
mov
push
pop
jo
idiv
sub
adc
adc
push
in
fdiv
adc
clc
movsl
lock
ret
jg
gs
addr16
push
push
jle
fildl
daa
call
dec
lock
outsb
enter
mov
pushf
sub
sbb
xor
inc
and
jo
imul
iret
xchg
cmpsl
in
repnz
xor
adc
rclb
mov
imul
and
jo
into
push
jmp
and
shlb
scas
movb
xchg
bound
jmp
pop
jb
sub
cmp
lock
ret
jno
adc
hlt
out
loop
or
jb
aas
xor
or
jb
adc
rcrl
lock
xchg
out
lods
cmovle
xor
sbb
fisubrl
lret
and
cli
sbb
jno
pop
mov
je
dec
popf
add
pop
mov
dec
cmpsl
cli
popf
or
or
dec
adc
loope
mov
daa
ss
adc
mov
push
jbe
push
ret
in
sub
xlat
mov
aaa
lcall
addl
scas
xor
addr16
and
test
aas
in
mov
fstpt
jecxz
cld
pop
jns
mov
iret
lret
pushf
lahf
ds
lahf
test
lret
loopne
pop
mov
pop
movsl
dec
adc
ljmp
std
cltd
jp
sub
jge
dec
inc
jno
std
negl
lret
xchg
ljmp
adc
mov
test
dec
xlat
rcrl
or
dec
sub
test
inc
out
popf
scas
fisubrl
rclb
xchg
test
test
cmp
je
fsubs
add
sbb
sub
dec
fldenv
in
cltd
jg
adc
push
xor
cmp
cmp
cmc
sbb
shl
add
inc
jmp
pop
and
fsubrs
xor
enter
cmp
xor
aas
repz
inc
mov
ljmp
notb
imul
push
cld
dec
stc
xor
shrb
bound
jae
pop
mov
imull
cmpsb
mov
mov
lret
sahf
fadds
outsb
mov
repz
aad
adc
arpl
pushf
aas
mov
aad
jno
xchg
push
pop
jno
xchg
jle
inc
sarl
push
mov
mov
jo
lock
xchg
mov
mov
pop
sub
mov
int3
out
call
push
movsb
pop
data16
sub
cwtl
bound
or
gs
aam
push
std
mov
cwtl
repz
in
xor
push
rcr
mov
cmp
xchg
xchg
fstpl
push
addl
stos
push
ror
xchg
inc
or
mov
je
mov
jg
xor
ret
lds
movsl
add
ror
add
mov
sahf
jns
fwait
dec
or
cmc
pop
cwtl
mov
cli
jb
add
mov
gs
out
mov
loope
xchg
adc
ds
into
ss
jns
pop
rol
pushf
jmp
popa
cmpl
dec
pop
cmpsw
mov
pusha
mov
xor
and
mov
clc
out
or
aad
hlt
mov
test
fmuls
les
xchg
xchg
popa
dec
inc
sbb
push
xor
sub
xchg
js
movsb
in
pop
xchg
sbb
and
sub
andl
xor
jl
outsb
and
scas
pop
lldt
pop
cmp
aam
dec
mov
push
stc
mov
call
fstl
mov
gs
adc
add
fidivrl
mov
inc
push
dec
add
xchg
je
lods
sub
adc
or
mov
ror
mov
mov
push
jecxz
inc
and
and
xchg
fadds
push
and
test
push
xlat
test
xchg
xor
inc
cmpsl
xor
popa
push
pop
push
mov
fwait
adc
or
xor
dec
mov
jns
mov
notb
pusha
fisttps
inc
xchg
adc
mov
cld
lds
ficompl
sbb
mov
aam
in
ret
mov
pop
dec
sbb
cld
incb
pop
jo
pmovmskb
fldcw
lahf
and
inc
stc
mov
jb
xor
cwtl
add
mov
mov
or
dec
cltd
xor
sbb
mov
jbe
push
pop
push
mov
mov
pop
lea
aam
jnp
sahf
and
insl
mov
jno
push
test
push
clc
cmpb
test
xor
je
and
shlb
ja
movsb
mov
mov
sarl
xchg
lock
pop
jecxz
xchg
notl
sar
sbb
test
and
loopne
lahf
call
adc
push
ret
repnz
ret
ret
xchg
dec
mov
out
push
pop
movsb
mov
rcrl
or
sub
shlb
sub
dec
orb
pop
loop
fcompl
daa
in
mov
out
adc
push
cmp
leave
and
mov
xor
das
mov
add
lea
dec
ret
jl
mov
std
mov
fidivl
bound
or
dec
or
and
stos
loope
rcll
leave
sarb
insb
stos
inc
mov
jecxz
push
incb
test
sub
shlb
push
sar
push
xchg
mov
jg
daa
mov
adc
mov
out
mov
cmp
or
mov
xchg
xlat
xchg
je
inc
in
aad
ret
mov
sbb
adc
das
int
dec
ss
test
cmpl
inc
les
jne
xchg
push
inc
out
jle
stos
ret
js
leave
xchg
js
mov
or
scas
jae
jbe
mov
mov
pop
mov
pop
push
cmp
dec
sub
jo
adcb
out
hlt
push
push
testl
pop
out
insb
sbb
or
jmp
sub
xor
out
adc
cli
inc
pushf
adc
es
and
aas
xor
pop
lods
jl
cwtl
or
xchg
xchg
fldenv
rcl
xchg
or
fistps
loopne
mov
ja
push
insb
sub
cmpsb
jo
mov
xchg
loopne
iret
lods
sarl
push
orb
cs
and
cmp
jo
pop
out
cmp
mov
jae
dec
movsl
lret
inc
dec
adc
daa
jne
inc
cmc
push
dec
aaa
add
sub
dec
push
jle
out
push
lods
adc
ss
mov
xchg
mov
jle
adc
mov
in
lcall
sub
stos
jno
dec
sub
jecxz
push
outsl
jle
pop
lret
jg
push
cmp
xchg
mov
insb
pop
xor
scas
imull
lret
mov
dec
xlat
outsl
sbb
imul
pushf
add
stc
jge
adc
push
aad
std
imul
leave
jo
mov
clc
mov
cltd
jge
push
cmp
loop
iret
aaa
dec
aas
and
push
push
lods
mov
and
stos
xor
push
sbb
jne
sub
mov
xorb
pop
dec
xchg
lahf
pop
xchg
sub
cs
sti
xchg
push
loopne
stos
push
mov
insl
xchg
roll
aaa
in
shrb
out
je
loope
pop
and
mov
nop
xchg
mov
mov
mov
inc
icebp
add
lods
sub
jge
daa
loopne
addr16
adc
leave
fidivs
movsl
call
insl
jbe
mov
in
mov
cld
stos
jecxz
mov
unpckhps
mov
adc
in
int3
addb
sbb
jp
rclb
mov
mov
mov
push
out
stos
mov
mov
jmp
sub
loope,pt
jns
sub
into
cmpsb
mov
arpl
test
jo
and
enter
rorb
lock
pop
adc
mov
mov
pop
pop
push
scas
out
repnz
insb
ret
aad
jecxz
dec
cli
mov
mov
test
pop
jmp
jae
out
idivl
mov
inc
xor
jnp
jmp
rcl
adc
sbb
pop
push
xlat
dec
cwtl
mov
xor
mov
stc
inc
cld
xchg
jmp
imulb
ret
sbb
jl
data16
push
dec
jbe
call
inc
dec
lock
mov
je
int
pop
mov
add
push
rcrb
xlat
inc
cli
mov
subb
push
out
push
fdivs
out
movd
ss
pop
sbbb
push
or
push
xchg
and
push
cmp
push
dec
xchg
xor
lahf
mov
nop
push
add
loope
movsb
std
add
mov
push
incl
adc
xchg
push
int3
hlt
movsb
sahf
mov
xlat
push
loop
jmp
scas
pop
push
pop
filds
leave
lret
hlt
cmp
das
cmp
inc
sub
adc
sub
mov
test
test
int3
inc
or
pop
pop
adc
or
sub
std
ret
push
mov
fmul
jnp
cmpsb
aad
lods
cmp
shlb
cmp
andl
jb
or
inc
cmp
jo
mov
jo
add
adc
mov
mov
jp
xchg
inc
inc
pop
mov
xchg
sbb
push
ljmp
outsb
fidivrl
in
ds
mov
mov
push
fisubrl
loope
dec
repnz
pop
mov
pop
xchg
jmp
mov
mov
mov
push
les
xor
jle
mov
aaa
movsb
jb
lahf
cli
jno
pusha
mov
xchg
data16
mov
pop
pop
fisubrs
bound
pop
inc
shl
adc
insb
jle
addb
adc
lock
sbb
fidivs
cmp
mov
jo
mov
shl
lods
push
xchg
xor
das
cmc
xchg
xor
jnp
adc
sbb
dec
push
stos
cmp
out
mov
add
jg
jg
add
loope
orl
sub
aam
xchg
out
mov
mov
xlat
out
jl
fdivrl
mov
cmp
xchg
push
stos
inc
inc
pop
cmp
mov
imul
adc
into
je
and
cmp
mov
xor
mov
mov
mov
aas
fistl
sbb
cmpsl
adc
jnp
push
sbb
std
dec
mov
rcrl
jg
xor
jmp
dec
push
dec
push
cs
lods
cli
sbb
cmp
mov
inc
xchg
jo
cmp
ffreep
movsb
jnp
out
bound
lea
push
push
dec
jae
mov
sub
pop
orb
mov
mov
push
ja
xchg
leave
test
popa
pop
mov
xchg
pop
clc
push
daa
clc
lret
add
rorl
pop
sub
test
xchg
pop
sub
jb
outsl
mov
xchg
pop
rolb
mov
int
add
dec
sub
cwtl
in
out
jne
mov
push
stos
rcr
lock
inc
jo
push
fwait
push
push
adc
mov
dec
xor
mov
sub
push
xor
xchg
aad
sbb
clc
and
nop
aam
and
mov
mov
mov
dec
push
mov
xchg
cmc
outsl
jbe
push
test
add
xor
push
enter
add
dec
ds
cmp
cmc
push
xchg
shlb
loopne
sbb
dec
xchg
pop
adcb
fs
pushf
xor
push
xchg
int
pop
sbbb
in
push
fistl
adc
inc
mov
mov
incb
inc
mov
pop
fincstp
push
lahf
cmp
rcr
fnstenv
sahf
in
testb
sbb
movsb
int3
pop
and
and
cmp
cmp
add
pop
mov
pushf
mov
int3
inc
or
cmp
inc
jp
mov
xor
data16
ja
movsl
lds
mov
rorl
fidivrl
mov
movsb
imul
jl
test
xchg
xchg
lret
and
lea
stos
jns
cmp
dec
negb
xor
arpl
lock
or
and
fistl
push
es
shlb
push
lret
lds
jns
xchg
jnp
sbb
fisubrl
mov
iret
mov
mov
mov
subl
das
mov
pop
loopne
jbe
jbe
sub
push
cwtl
sbb
lahf
xchg
scas
shll
jge
call
push
and
push
shrb
dec
mov
fs
out
insb
lret
lret
fsubr
inc
sub
xchg
and
popa
rcr
or
jmp
aad
add
cmp
mov
loopne
push
in
pop
push
dec
popf
ss
pushf
xchg
or
push
inc
mov
jge
addr16
push
iret
push
out
inc
iret
jmp
sti
push
icebp
repnz
cmpb
fstl
inc
mov
adc
jle
and
mov
jge
in
push
fidivrs
jb
scas
cwtl
arpl
mov
shlb
push
bound
mov
pop
jno
cs
or
cmpsl
pop
imull
std
push
jo
dec
sar
data16
adc
jge
cmp
xorl
in
xlat
inc
mov
push
in
push
mov
push
xor
push
xchg
xor
cmp
or
mov
popa
or
xchg
outsb
xchg
inc
out
dec
jge
pusha
clc
popa
nop
andl
mov
hlt
sub
fisubs
cs
push
cmc
adc
xchg
mov
rol
arpl
sbb
push
inc
mov
or
sub
inc
adc
fstps
in
adc
shlb
popa
pmaxsw
cmp
push
sbb
fdivl
push
mov
cmp
sub
arpl
or
jl
scas
inc
scas
pusha
mov
xchg
inc
out
repnz
lods
mov
frstor
cmp
push
sbb
cmpb
push
out
in
add
cmp
and
mov
shlb
mov
lea
andl
push
dec
cmpsb
les
shlb
int
insb
and
jo
lcall
dec
or
add
pop
mov
cmpsb
sub
mov
enter
out
jo
data16
cmpb
out
inc
sbb
daa
lds
jl
jle
push
lods
shl
xor
jecxz
fdivrl
pop
in
sahf
add
std
mov
out
sti
push
mov
add
mov
xchg
movsb
out
pushf
sbbb
and
inc
xlat
cmpsl
mul
lock
std
add
add
flds
into
lods
add
pop
lcall
mov
xchg
test
je
call
cmp
xchg
jne
pop
fmul
popf
fmuls
mov
ljmp
inc
fwait
push
push
xor
adc
jno
inc
push
ret
nop
push
sub
out
dec
cmp
aad
push
loopne
enter
sub
cmpsb
add
inc
sub
jnp
xlat
push
or
inc
int3
or
fcmovne
popa
loope
jp
repz
pop
sbb
adc
cmp
cmp
arpl
mov
lret
enter
cs
jae
adc
pop
mov
and
leave
jb
out
xchg
das
loopne
fnstenv
pslld
xchg
xchg
lret
repnz
add
shr
lahf
cltd
mov
fiaddl
nop
cmpsl
adc
idivb
out
adc
inc
adc
adcb
jo
outsb
nopl
cs
inc
jge
cs
sub
sbb
ljmp
mov
sbb
loop
in
sbb
add
push
lret
in
shlb
repnz
xor
dec
lcall
jecxz
mov
js
fistpll
xchg
pop
mov
mov
int
cmc
std
mov
or
cmp
or
ss
test
mov
dec
pusha
loope
adc
xchg
mov
dec
fdivl
ja
lock
sbb
popf
cmpsl
cmpsb
int
mov
sbb
sub
stos
sub
inc
pop
stc
std
xorb
pop
xlat
mov
je
stc
sbb
jmp
and
push
fidivs
jne
out
push
pop
js
sub
mov
ret
inc
clc
call
sub
pop
sub
or
lds
mov
ja
sub
mov
movsl
pop
xchg
pop
jo
mov
pop
cwtl
jmp
or
jnp
in
push
cmp
gs
mov
adc
add
sbb
jae
xchg
rorl
sbb
mov
pop
ljmp
sbb
je
das
int3
cmp
outsb
out
xchg
pop
pop
cmpsl
pop
aas
dec
push
mov
std
loope
data16
inc
test
pop
pop
inc
inc
mov
fwait
std
cmc
fsubs
xorb
inc
jno
mov
cmp
xchg
mov
pop
loop
jns
and
xorl
jae
push
push
testl
push
mov
jecxz
outsl
cmp
out
and
in
sbb
notl
loop
sahf
cwtl
bound
cld
fstps
push
ss
push
lret
out
scas
push
pop
sbb
mov
fs
dec
gs
adc
push
lock
and
mov
mov
in
push
imul
push
adc
pop
mov
fcoml
jne
jo
adc
mov
fstl
adc
insl
xchg
addr16
or
cmpsl
sbb
inc
sub
and
dec
mov
inc
jp
mov
popf
cmp
shll
dec
and
test
sbb
mov
xchg
adc
fmuls
mov
je
jmp
in
or
cld
je
xchg
mulb
je
call
daa
daa
add
jno
jns
cltd
js
cwtl
jecxz
repnz
xchg
lahf
repnz
fstps
repnz
xchg
mov
xchg
in
and
or
cltd
push
mov
push
adc
dec
je
jne
xchg
bswap
cmp
jge
test
sti
ret
jle
gs
and
mov
loop
stc
and
arpl
jae
adcl
cmp
and
in
dec
rcrb
ret
and
cmp
out
fisttpl
push
je
and
gs
rcrl
mov
jno
lods
movsl
pop
fsubp
xchg
sub
dec
and
mov
mov
pop
cltd
cmp
sub
je
sub
aas
jbe
imul
fisubrl
lds
jb
jmp
jns
paddw
imul
ret
jecxz
sti
sub
xchg
loop
ret
mov
fdivrl
in
xor
jne
and
inc
inc
jae
shlb
and
inc
addb
fcoms
loopne
push
outsl
cmp
in
mov
cmp
lret
data16
mov
mov
jo
adc
sbb
or
jns
jp
les
arpl
xlat
pop
push
xchg
lcall
jnp
cmc
cmc
adc
jae
xor
xchg
sbb
xlat
jp
std
in
sub
push
xlat
clc
stos
jecxz
push
jmp
lods
jo
pop
ret
add
loopne
lods
repnz
xchg
xor
push
cld
sbb
add
pop
scas
mov
pushl
push
push
out
fldl
out
aas
mov
js
push
jne
lods
test
in
frstor
lcall
mov
jge
scas
inc
je
into
aaa
jno
jns
push
call
cwtl
push
xchg
mov
push
aad
add
jmp
aas
ror
sub
cld
adc
dec
mov
sbb
lea
cmp
sbb
dec
xchg
popf
xor
push
int
xchg
iret
movsb
popa
ret
pop
icebp
pop
push
in
cltd
cli
push
call
xchg
mov
sub
lret
push
pop
dec
jns
out
mov
cmp
sbb
dec
adc
stos
dec
jb
lods
orl
jnp
or
and
sahf
clc
iret
xlat
and
pop
mov
call
repz
dec
rorl
bound
movsb
fcompl
cmpsl
and
cmpsb
stc
pop
testb
in
lret
stos
mov
jecxz
bound
sub
pop
nop
xchg
incb
or
push
mov
das
add
stos
inc
ds
push
popf
out
cmp
jno
xorl
imul
imul
call
dec
lret
cltd
jnp
xchg
inc
pop
xchg
das
cmp
sub
lcall
mov
push
jp
push
mov
bound
dec
cmpsb
sub
sbb
dec
sbb
add
push
jmp
loope
mov
jno
xor
test
into
pushf
rcll
jmp
xor
dec
xchg
mov
pop
arpl
and
sub
adc
sbb
jecxz
sarb
test
xor
jmp
mov
inc
add
xor
push
dec
dec
cmpsb
jg
addr16
jo
inc
jae
insb
clc
and
sbb
das
cmp
ror
mov
out
jo
dec
mov
adc
fsubs
push
xlat
dec
mov
aam
mov
cmpsl
clc
xchg
fisttps
xchg
icebp
dec
lcall
sbb
out
and
mov
mov
aas
jo
mov
into
mov
pop
add
out
nop
sub
or
and
or
sbb
inc
jle
push
mov
outsb
xor
jno
jo
inc
scas
aaa
jp
mov
mov
dec
leave
inc
call
adc
daa
fnstenv
movsb
or
xor
leave
jne
data16
push
pop
xor
inc
xor
jp
arpl
pop
xchg
jne
mov
cmp
insl
or
jno
xchg
push
adc
or
push
ret
sahf
mov
xchg
sub
dec
or
add
arpl
dec
sbbb
aaa
inc
mov
cmp
lds
cmp
sbb
lahf
jbe
jle
cmp
push
or
jae
or
inc
rcrb
cltd
mov
jbe
sub
lds
dec
bnd
int3
mov
mov
inc
in
sahf
mov
add
or
test
cltd
push
or
push
out
decl
push
inc
sub
lea
cmp
iret
mov
es
in
inc
lahf
js
out
inc
jmp
dec
call
sub
xchg
aad
pop
jae
adc
popa
cmc
xor
xlat
mull
xor
imul
imul
stos
inc
fwait
inc
and
pop
jmp
mov
lcall
xchg
lahf
push
lds
fldcw
push
lret
sbb
insl
pop
lahf
mov
push
jl
xchg
test
jmp
insl
mov
or
push
push
lock
arpl
adc
cmp
inc
inc
cmp
adc
lret
shrl
iret
insb
xlat
mov
outsb
xor
push
dec
cmpsb
je
mov
sbb
bound
mov
stos
fmulp
pop
sti
mov
aaa
into
call
and
test
rorb
dec
mov
adc
cli
stos
loopne
inc
aas
call
push
out
cmp
or
or
imul
dec
add
adc
hlt
xchg
dec
js
movl
xor
mov
lret
push
push
xlat
add
popf
mov
jg
cmpsl
mov
cmc
ret
adc
ljmp
fwait
cld
push
imul
idivb
add
ret
pop
jp
lods
sbb
aas
sbb
movsl
lea
sub
pop
mov
jbe
pop
fbld
jge
or
std
lock
mov
jmp
dec
mov
sub
or
dec
ret
idiv
add
rcrl
test
stos
idivb
mov
sub
clc
lock
es
mov
mov
movsl
ljmp
orb
jae
xorl
mov
ss
int3
daa
or
shll
testl
cbtw
out
out
movsb
jge
into
popf
inc
mov
pop
push
mov
int
mov
rcrb
jmp
int3
subl
and
in
repz
add
adc
or
cmp
mov
jo
jne
pop
mov
lods
cwtl
fcoms
mov
stc
pop
push
mov
mov
fistpll
bound
int
mov
les
mov
sub
or
cmpsl
pop
mov
xchg
pop
popf
or
fiadds
imul
in
jb
push
jp
in
jb
cs
or
ret
lahf
cs
push
js
popa
pop
pop
int
pushl
cmpsl
pop
rorb
xor
es
mov
xor
out
mov
push
adc
sbb
jb
mov
dec
or
lcall
pop
inc
add
shr
cwtl
aaa
pop
mov
dec
xchg
fisttpl
sahf
mov
loope
mov
jne
mov
mov
xor
inc
jecxz
cld
and
pop
insl
stos
sbb
push
in
fs
xchg
stc
xor
cmp
mov
aam
sbb
mov
and
mov
js
ja
repnz
sahf
out
arpl
and
and
xchg
and
mov
shll
cmp
and
fucomip
adc
ljmp
mov
fdiv
jl
dec
mov
insl
fbstp
jl
outsb
adc
push
outsb
je
pop
pop
inc
cmp
ja
fistpll
cmpsb
lds
xchg
xchg
and
ret
fmull
leave
lock
jge
in
push
cmp
xorl
xlat
lahf
in
stos
inc
pop
out
mov
mov
outsl
pop
adc
popa
iret
cmc
sbb
push
push
cmp
mov
push
lods
out
pushf
fwait
lahf
mov
cmpsl
cltd
repz
jecxz
iret
rolb
pand
aaa
lret
inc
push
add
mov
in
lds
mov
sub
das
cmp
enter
das
dec
pop
mov
ret
test
aam
and
gs
mov
ds
jp
lcall
cltd
or
mov
jb
leave
xchg
call
rcrb
fisttps
or
sbb
mov
sub
subl
push
test
cmp
xor
arpl
xchg
mov
or
icebp
sbb
fs
hlt
xor
and
cmpb
movsl
adc
dec
jge
push
das
add
push
cli
xchg
fdivl
dec
fbstp
add
pusha
dec
pusha
xchg
adc
ja
scas
xchg
mov
add
sbb
mov
stos
ljmp
sarl
push
push
mov
enter
scas
iret
or
pop
dec
pushf
lret
inc
adc
loope
std
fcoms
loopne
ret
xchg
mov
fimuls
mov
adc
pop
cmpsb
rcll
push
mov
mov
hlt
xchg
aam
push
hlt
push
adc
push
dec
gs
mov
fidivrs
sub
mov
cltd
sahf
mov
fisttpll
pop
clc
sub
addr16
push
adc
jmp
cwtl
lret
jmp
xchg
ss
sbb
xchg
das
jb
inc
or
push
mov
inc
push
push
mov
sti
push
mov
aaa
and
mov
sahf
test
insb
push
mov
lret
push
ds
mov
fdivrl
jecxz
jmp
push
pushaw
movsl
jb
insb
in
push
add
xchg
mov
imul
add
stc
cmp
pop
sub
jno
repz
nop
jecxz
xchg
divb
jecxz
adc
insb
mov
pusha
nop
shll
pop
loope
test
jmp
pop
xor
lock
mov
adc
scas
push
fmull
rolb
push
lret
pop
push
dec
inc
mov
cmp
popf
sbb
ja
pop
or
aas
inc
mov
push
test
insb
lods
fwait
imul
scas
jae
xchg
addb
adc
sbb
add
cli
mov
ja
adc
xor
les
adc
loopne
jbe
loope
pop
cmpsb
inc
or
adc
cmpl
xchg
lret
push
int
inc
push
movsl
xchg
jno
mov
or
mov
lds
pop
cmp
or
mov
inc
jecxz
sub
into
ja
movsb
loope
test
jecxz
jb
xlat
pushf
and
cmpsl
arpl
lds
or
lods
sub
mov
out
loop
in
or
jae
cmp
imul
ret
jge
mov
xchg
mov
insb
testl
push
pop
divl
rcll
dec
pop
lcall
xorb
insl
dec
mov
push
pushf
incl
dec
sub
test
mov
push
pop
cli
hlt
leave
stos
je
cmp
xchg
jno
rclb
imul
in
ror
xchg
sbb
push
addr16
push
or
iret
arpl
mov
or
and
test
and
adc
and
or
imul
pop
and
imul
sub
mov
leave
mov
stc
scas
and
jno
pop
loopne
movsl
mov
xchg
dec
pop
cmpsl
fwait
adc
sub
push
sbb
cmp
test
pop
cmp
pop
push
int
mov
xchg
mov
lods
fildl
and
repz
pop
insl
mov
test
out
std
fwait
and
push
out
xor
mov
inc
xchg
test
pusha
lea
dec
std
mov
mov
jne
call
push
adc
xor
test
sbb
call
dec
push
pushf
js
shlb
mov
cwtl
mov
in
pop
ficomps
cmp
push
or
cmpsb
ror
cmpsl
dec
int
stc
in
dec
xchg
xchg
rcrb
mov
jb
inc
pop
rorb
xor
fs
push
pop
sbb
int3
loope
je
add
clc
insb
xchg
out
cmpsl
cmp
lods
jg
xchg
das
xor
inc
xchg
divb
ja
pusha
pop
fs
imul
mov
imul
ret
into
sub
shrb
sub
push
aaa
icebp
mov
pop
jmp
cs
mov
cwtl
lock
dec
lods
or
jp
bound
mov
movsb
or
sub
cmpsb
je
pop
fstl
pop
stos
pushf
icebp
lods
cwtl
fisubl
inc
filds
mov
xchg
xor
lahf
jno
and
mov
adc
jae
ljmp
sub
inc
xchg
or
sbb
sbb
fstpt
lds
mov
or
nop
mov
sbb
xchg
sub
repz
lea
popa
jb
xchg
cltd
aaa
mov
push
ret
xchg
mov
popa
or
jbe
push
push
mov
std
stos
and
hlt
push
sbb
mov
icebp
jle
jnp
cmp
mov
inc
dec
inc
mov
cmc
mov
out
xor
bound
xchg
fistps
cmp
arpl
cmp
bound
shl
or
daa
daa
mov
in
mov
push
enter
jno
mov
loop
pmuludq
test
pop
push
push
stc
ret
sub
lret
test
add
ret
and
and
fs
dec
add
mov
and
lcall
add
dec
out
outsl
cltd
fldl
push
push
inc
pop
stc
dec
or
pop
pop
sbb
push
ficomps
xchg
sub
and
add
movsl
inc
pop
pushf
adc
adc
mov
cmpl
call
sub
jnp
add
cmp
mov
mov
push
mov
lcall
les
cmpl
ja
or
mov
scas
and
jae
shll
ss
icebp
loope
jmp
scas
cmc
mov
add
aad
inc
adc
aaa
mov
adc
dec
pop
js
imul
and
ljmp
and
sub
push
arpl
dec
pop
adc
js
rorb
adc
testl
mov
push
mov
inc
cltd
lods
lock
stos
aaa
out
xchg
push
cmp
daa
inc
lahf
lcall
dec
mov
imul
cmp
cmp
cmp
pop
in
inc
out
xchg
mov
xchg
mov
in
shr
ja
out
imul
je
add
xor
test
imull
sbb
fadd
sbbl
adc
fsts
lea
mov
pop
mov
mov
mov
into
add
inc
addl
sbb
pcmpgtw
jne
xchg
dec
pop
adc
cltd
fidivrs
in
mov
pop
mov
inc
in
cmp
or
iret
mov
imul
push
sbb
test
and
jge
mov
arpl
jne
popa
js
jnp
mov
adc
jae
xchg
call
xchg
cmp
push
je
mov
sub
cmp
dec
xchg
or
and
mov
xchg
mov
jecxz
test
orb
sub
aaa
lahf
jge
add
inc
adc
gs
cli
js
subl
mov
paddw
out
inc
vcmpss
jo
lcall
push
cmp
mov
mov
dec
ss
xchg
mov
and
sbb
jl
add
dec
or
test
popf
xor
jae
ret
hlt
adc
inc
xchg
pop
push
into
notl
out
mov
jmp
xchg
push
fcomps
adc
sbb
push
adcb
xor
add
push
aaa
mov
sub
je
in
or
aad
out
cld
jl
dec
mov
iret
jge
ljmp
shl
neg
test
nop
out
pop
out
xor
or
xchg
aaa
or
xor
pop
xchg
pop
loope
inc
enter
mov
xlat
fidivs
sarb
scas
sub
cltd
movsb
xchg
ljmp
inc
ror
das
adc
jp
mov
dec
xor
enter
pop
xchg
sub
and
cmp
cli
or
repnz
cmp
sbb
xchg
clc
shlb
and
int
icebp
jns
inc
inc
sarl
movsb
frstor
out
push
insl
fcom
imul
insl
fistpll
cmc
neg
cwtl
xchg
pop
mov
jns
jae
cs
mov
xor
fdivrl
cmp
fsubr
repz
fwait
data16
into
popa
popa
incl
outsl
arpl
clc
sub
daa
dec
xlat
add
pop
adc
aas
addr16
ret
mov
arpl
inc
jnp
scas
bound
jmp
popa
inc
push
cmpsl
loope
je
mov
sbb
push
mov
jae
out
xchg
add
ss
cmc
pop
and
shr
mov
jns
popf
mov
mov
imul
jns
addr16
cltd
dec
pop
push
flds
jne
push
sub
scas
stos
push
mov
add
pushf
lahf
and
pop
dec
loop
fsubrl
xchg
cmpsb
xchg
sbb
pop
mov
cltd
lret
dec
repz
push
test
dec
daa
mov
outsb
mov
jbe
push
rolb
sbb
dec
mov
cmp
mov
cmp
xor
cltd
int3
push
xor
clc
mov
xchg
loopne
fstpt
fsts
add
and
mov
sbb
mov
sub
dec
ficompl
lret
leave
mov
jae
les
lahf
dec
aad
mov
adc
scas
pusha
pop
or
negl
sub
mov
pop
adc
pop
push
dec
stos
out
aam
xchg
aad
fs
std
cwtl
mov
cmp
neg
sarb
ljmp
loopne
adc
arpl
mov
lret
pop
add
cmp
xor
or
outsl
or
adc
cmp
cs
sbb
push
xor
push
mov
loope
push
fsubrl
push
mov
jp
rclb
dec
add
pop
mov
mov
mov
or
movsl
scas
cmp
cmp
hlt
cli
add
inc
imul
inc
dec
stc
popa
lods
cmp
call
rcr
mov
or
dec
dec
mov
addb
movsl
jae
xchg
xor
cmp
sub
rclb
popf
aad
test
sbb
pop
scas
dec
jg
loopne
inc
rcrb
gs
sahf
cmp
inc
out
push
ds
lods
cmp
sub
addr16
mov
push
sub
adc
dec
repnz
xchg
nop
in
mov
arpl
sbb
lret
lcall
xor
adc
jno
adc
mov
jmp
sbb
sbb
cmp
jg
stc
pop
cmp
lret
rcrl
adc
or
and
inc
add
jnp
cli
rcll
in
fimuls
mov
ss
es
adc
enter
call
adc
and
xchg
shl
imul
cmp
or
and
call
and
dec
lcall
addb
iret
decl
xor
sub
in
adc
js
mov
and
mov
mov
ret
mov
in
nop
cltd
pop
dec
fwait
arpl
in
sti
adc
or
mov
icebp
insl
jnp
sbb
xor
sarl
out
lea
addb
ret
leave
repz
in
sub
pop
insl
mov
pop
lds
mov
mov
mov
adc
jge
shrb
in
ss
add
push
mov
sub
andb
aam
pop
pushf
pop
jno
sbb
stos
mov
loop
push
inc
icebp
jg
cltd
lcall
test
inc
push
iret
shlb
ficomps
std
arpl
pop
push
xor
fmuls
test
pop
or
outsl
or
push
mov
fiadds
and
inc
jmp
fsubrs
out
mov
push
xor
shrl
mov
xchg
mov
fidivs
add
mov
mov
push
add
repnz
inc
add
idiv
jge
scas
mov
or
push
into
lods
dec
jne
mov
lods
lods
pop
lock
push
es
mov
pushf
push
jg
and
leave
daa
clc
xlat
inc
outsl
subl
xor
cli
push
jae
loopne
cmpsb
add
pop
es
sub
ja
push
sbb
cmp
leave
lret
dec
sahf
jbe
lods
push
nop
pop
sub
pop
cld
hlt
inc
jns
sub
push
fstp
sbb
aaa
jnp
lret
pop
jmp
popf
jbe
inc
pop
cmpb
enter
mov
xor
rcrl
out
sbb
pop
jge
hlt
mov
mov
cmp
addr16
mov
adc
mov
outsl
dec
adc
xchg
fstpt
xchg
inc
sbb
lds
xchg
aaa
cltd
pop
add
lahf
shll
imul
das
push
pusha
cmp
mov
push
sub
jecxz
push
shlb
sbb
stc
mov
dec
repz
stos
je
add
mov
inc
aaa
mov
cli
out
or
int3
jae
lcall
std
cli
in
std
add
roll
insb
add
lahf
addb
mov
push
adc
incl
in
or
aad
push
mov
pop
and
divl
test
dec
jo
test
mov
sbb
jecxz
cltd
push
mov
icebp
mov
rcrb
add
adc
mov
in
inc
push
xor
roll
in
pop
jns
out
jns
adc
mov
roll
insb
add
push
lds
shrl
adc
movsl
sbb
mulb
or
cli
out
int3
jp
pop
lcall
mov
cmp
jmp
push
mov
in
hlt
jp
jecxz
loopne
cli
enter
stos
jmp
cwtl
or
repz
in
xor
pop
pop
add
jl
in
mov
cmp
mov
out
sbb
outsl
sub
mov
mov
aad
scas
pop
jecxz
mov
or
mov
and
outsl
rorl
and
lds
jmp
push
jne
xchg
out
xchg
fldl
xor
sub
push
mov
mov
cld
movsb
aam
and
dec
rorl
push
mov
insb
gs
xchg
add
fcoms
cmp
jo
add
arpl
mov
jecxz
inc
mov
cmp
adcl
sub
outsl
fstpl
jmp
pushf
test
push
fsubl
pusha
pop
sti
outsl
ljmp
mov
adc
cmp
inc
cmp
ret
xor
fldenv
pop
pop
pushf
mov
daa
add
mov
lret
fdivs
enter
nop
inc
lret
mov
and
scas
lcall
into
jno
aad
dec
push
push
jno
inc
lret
inc
jns
repz
fidivl
call
or
mov
fucomp
mov
das
xchg
fsubrl
jae
in
ljmp
fsubp
call
cmp
je
jmp
xchg
xor
cli
adc
push
xorb
pop
pop
xchg
adc
mov
sbb
outsl
mov
add
inc
ret
aaa
add
lds
pusha
dec
lret
or
mov
sub
mov
addl
mov
or
jecxz
fcmovnu
fcompp
xchg
test
inc
and
pop
js
hlt
es
push
lock
pop
ss
sub
ficoml
push
popf
hlt
jge
inc
mov
push
lret
push
mov
jge
scas
data16
add
sarb
popf
xlat
add
jmp
jae
sbb
xchg
xchg
add
pop
nop
mov
lds
repz
sahf
mov
push
add
xor
std
mov
or
jne
lds
icebp
lods
jge
test
sub
rorl
cli
mov
int3
lret
push
hlt
xor
inc
mov
call
test
fsubrs
in
cmpsl
mov
xchg
or
ljmp
iret
dec
cmp
xchg
fwait
stos
lea
cmp
pusha
js
cmpsb
xchg
and
sub
bound
xchg
pslld
or
push
cltd
insb
rorl
inc
dec
cmp
cmp
push
cmp
inc
loope
mov
sarb
stos
add
pop
addr16
iret
pop
das
mov
push
lahf
push
es
jo
push
xchg
cmp
ds
pop
jle
nop
jae
add
cltd
xchg
dec
dec
jle
lcall
adc
xchg
sbb
mov
mulb
lcall
movsl
test
mov
mov
out
mov
pop
xchg
mov
neg
add
mov
lock
mov
scas
and
je
sbb
pushf
movsb
pop
flds
dec
lret
movsl
inc
out
subb
je
push
aas
sti
mov
dec
adc
mov
mov
test
sub
inc
insl
push
or
dec
jmp
fisubs
pop
cmc
xchg
fistpll
inc
mov
fwait
gs
and
cmp
xchg
dec
or
mov
mov
push
pusha
push
add
sbb
test
xor
fcoml
outsl
dec
push
jno
jge
dec
jbe
xchg
and
push
cmp
mulb
jnp
or
push
ja
enter
xlat
pop
push
insb
rorb
mov
scas
outsb
imul
cmp
pop
fisubs
testl
test
out
aaa
ljmp
fsts
pop
and
and
mulps
test
lahf
mov
add
xorb
fldl
scas
loopne
cmpsb
movsb
lcall
xor
decl
out
pusha
out
hlt
mov
add
lods
mov
outsb
pop
insb
lcall
in
jo
repz
mov
adc
xor
mov
movsb
inc
repnz
xor
mov
xchg
fs
fldcw
dec
clc
nop
shll
aas
dec
orl
je
popa
or
xchg
xor
fs
sub
xor
scas
movsl
inc
xor
sbb
cmpsl
push
and
push
push
or
xor
movsl
mov
dec
push
jmp
cli
sbb
inc
call
scas
mov
fdivrs
mov
sahf
aas
std
cwtl
ja,pn
xchg
xchg
or
jp
mov
push
rcrb
aad
mov
aad
lock
push
int3
push
mov
mov
je
imul
and
mov
mov
je
dec
scas
push
call
push
or
scas
fdivrs
inc
jnp
xor
and
mov
or
aaa
pop
repz
mov
mov
push
dec
in
loop
push
xchg
sbb
push
stos
add
pop
aam
sbb
leave
mov
mov
push
fs
int
sub
jg
jg
jp
inc
push
lods
pusha
sbb
push
xor
cmpsb
push
mov
mov
push
jl
nop
fstps
nop
adc
cltd
mov
lods
adc
into
inc
sahf
fwait
jo
fwait
pusha
mov
sbb
adc
inc
jb
dec
pop
xorb
sbb
loopne
jecxz
out
xchg
cwtl
into
jb
push
xor
ljmp
cli
hlt
ljmp
jl
mov
cmp
sub
pop
jbe
sbb
add
and
cmp
and
cld
jb
aaa
xorl
mov
mov
movsb
xlat
nop
inc
loope
ds
adcb
fadd
xchg
cmpsb
add
push
shlb
mov
sahf
cmp
inc
cltd
insl
orb
dec
ja
leave
in
lcall
test
sbb
in
xor
lods
xor
cs
jmp
fsts
mov
mov
jg
pop
aaa
sahf
adc
inc
xchg
test
mov
int3
adc
fstpl
mov
test
inc
cmp
jae
int3
fistpl
idivb
into
pop
stos
xor
imul
xor
mov
or
add
insl
cmpsb
stos
shll
push
sub
out
iret
mov
or
xlat
jo
or
dec
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
adc
mov
movsb
lods
sarl
enter
roll
scas
and
aas
mov
fists
loop
inc
mov
xchg
pop
imul
adc
add
fcmovne
call
gs
mov
lods
adc
jne
or
mov
fwait
sbb
add
pop
xor
leave
lahf
sbb
int3
xor
fcomip
out
pop
fsubrs
pop
mov
aas
inc
ret
pusha
sti
pop
int
inc
mov
xor
shrl
and
push
or
sbb
sbb
cltd
dec
test
xor
pop
mov
mov
push
outsl
or
adc
push
adc
and
dec
adcb
push
mov
stc
pop
mov
cmp
adc
shrl
mov
mov
push
lods
les
sub
mov
xchg
jns
lahf
dec
pop
push
outsb
arpl
add
dec
or
aaa
cmp
int
push
or
cld
rorb
jae
bound
fcmovb
xchg
fs
fsubl
test
and
adc
dec
inc
imul
dec
fcomps
push
je
cltd
sti
ja
jle
mov
out
add
xor
cmp
arpl
or
testb
imul
xchg
mov
enter
cmp
lret
scas
xchg
repnz
fisttps
sarb
mov
jl
mull
aas
mov
lret
lds
ret
or
out
xchg
xchg
jge
xchg
fdivl
pop
add
ret
movsl
in
push
mov
dec
xchg
jmp
dec
movsl
andl
sbbb
test
movsb
fnstenv
iret
push
sbb
xchg
xor
imul
add
sub
inc
xchg
adc
adc
dec
call
sub
lcall
push
rcrb
or
pop
out
and
or
dec
cmp
push
xchg
fdivrl
fwait
push
test
leave
sbb
mov
ret
push
mov
cmpsl
push
cli
mov
in
mov
rorb
mov
cli
mov
or
and
cld
lcall
pop
stos
xor
cmp
ljmp
and
push
lods
int3
inc
cmp
test
jae
insb
xor
xchg
sbb
roll
scas
sub
xchg
cmp
jg
cmp
add
xor
int3
push
or
cwtl
imul
fcompl
ffreep
outsl
xor
sbb
aas
mov
cvttps2pi
int
jle
jno
scas
or
popfw
dec
aas
lret
sbb
xchg
push
repz
mov
rol
outsl
sub
sbbb
mov
sub
or
pushf
cmc
or
pop
inc
push
cmp
fisttpll
pop
mov
cli
sahf
mov
or
icebp
jecxz
fisubs
nop
dec
idivl
mov
leave
cmpb
nop
push
mov
out
lds
mov
jecxz
nop
movsb
fildl
mov
sarl
pushf
xor
sbb
pusha
push
sub
loop
cmp
test
data16
mov
jp
test
xchg
and
inc
pushf
das
jne
xor
xchg
xchg
fsubrs
fstl
inc
push
xor
sub
sarl
mov
or
xor
xchg
sti
pop
add
push
jge
rclb
jmp
cmpsl
mov
or
and
lret
add
insb
mov
cmp
pusha
push
push
pop
push
rol
dec
xchg
or
stos
js
jl
mov
movsb
outsl
mov
das
xor
aas
cmp
movlps
cwtl
in
push
fstpl
scas
lods
and
nop
int
xor
fisttps
sub
push
adc
adc
jl
pop
xchg
mov
mov
ret
hlt
xchg
lods
adc
test
add
pop
push
gs
mov
xchg
inc
pop
stc
pop
add
add
test
clc
dec
xchg
add
cmpsb
call
cmpsb
xor
xchg
inc
xor
rorl
push
fidivrs
inc
inc
adc
insl
aad
imul
test
lods
ret
jl
mov
clc
mov
nop
ljmp
adcb
add
xor
sub
push
cmpb
jp
pop
lea
xchg
and
out
mov
je
mov
movsb
aaa
jl,pt
std
iret
fidivrl
mov
push
outsb
sar
lock
pushf
cwtl
push
cmp
fidivs
xchg
xchg
gs
pop
xor
scas
xchg
xchg
test
icebp
imulb
add
xorb
jp
adc
push
testl
push
add
sahf
add
sbb
sub
xor
in
adc
xchg
sti
mov
aam
pushf
adc
cld
or
call
cltd
or
aam
ss
mov
test
pop
mov
and
imul
and
adc
out
jge
lret
movsb
insl
dec
xchg
ret
in
xchg
jecxz
or
add
repnz
add
mov
push
mov
xchg
lahf
xor
xor
mov
and
push
xor
scas
pop
sub
sub
push
jo
mov
lods
pop
pop
fiadds
or
lods
mov
idivb
mov
pop
hlt
add
out
cltd
mov
xchg
xchg
cmc
fbstp
or
ljmp
pop
outsl
in
dec
insb
ja
sbb
sbbl
inc
ret
sub
cwtl
pop
clts
stos
lods
sbb
imul
insl
inc
iret
lea
mov
scas
inc
and
imul
cltd
roll
sarl
out
cltd
popa
cld
jle
mov
repnz
into
add
dec
or
or
mov
ret
mov
pop
xchg
pop
sbb
nop
ret
pop
pop
pop
cmp
fists
mov
ret
sub
mov
dec
and
arpl
ret
ja
mov
lock
add
sub
in
fisubl
fildll
loopne
incl
or
loopne
xor
xlat
sar
into
sti
jno
mov
or
aam
dec
jb
out
shlb
popf
pop
inc
scas
inc
sahf
jne
fmull
mov
mov
and
cmp
mov
repnz
pop
inc
pop
aaa
jecxz
jbe
add
sbbl
lret
pop
js
call
scas
xchg
mov
lock
aaa
xor
shl
jae
daa
ficoml
ret
jne
xchg
lock
jns
aad
ret
mov
jne
inc
pushf
mov
dec
sarl
mov
shrb
stos
pop
xlat
int3
and
jecxz
das
stos
pop
and
xchg
in
mov
xchg
lahf
outsl
lds
test
test
std
pop
in
cmp
mov
popf
sti
les
xor
fists
jne
xchg
add
sarb
divl
fists
cwtl
cmp
xor
inc
adc
inc
lret
pop
in
call
mov
inc
adcb
add
jecxz
and
not
mov
jbe
and
and
cmp
mov
scas
dec
bound
xchg
inc
stos
sub
loope
lahf
fimull
ljmp
pop
fidivl
add
dec
or
test
shll
jno
aaa
loope
mov
xor
scas
mov
negb
jp
mov
cmp
insl
jb
xchg
test
popf
out
push
xor
leave
jl
xor
and
imul
mov
xor
in
lock
sbb
and
rorl
add
mov
fisubrl
inc
popa
dec
sarb
int
jbe
mov
loopne
call
jle
xor
and
cmc
pop
fnstenv
push
mov
jge
dec
push
ret
push
ljmp
jge
push
mov
rorb
mov
int3
mov
dec
or
jle
divl
sti
xchg
fdivr
lcall
sti
adc
in
fcoms
xchg
xor
mov
aaa
jmp
and
xor
xchg
pushf
inc
mov
out
icebp
ljmp
ret
mov
sub
pusha
les
sub
je
lahf
mov
test
mov
lods
inc
int
dec
pop
xchg
call
or
int3
icebp
scas
movsl
scas
fnstsw
push
sub
inc
or
test
out
dec
push
sub
or
test
and
outsl
xor
into
fcmovbe
cmp
lds
xchg
sub
sub
shlb
leave
icebp
pop
cld
pop
pop
lahf
jmp
sbb
stc
inc
dec
pop
lcall
push
cmpsb
dec
cmp
and
pop
fistpl
cmp
cwtl
xor
ss
mov
pop
mov
dec
mov
inc
xchg
mov
cmp
cmp
int3
push
lds
sub
imul
mov
xchg
cmp
jnp
sub
pop
les
cmpsb
hlt
inc
or
fdivrl
push
cli
xchg
nop
test
xchg
leave
test
and
les
mov
mov
mov
mov
add
jb
mov
out
push
xor
lret
mov
js
xchg
sbb
je
mov
mov
sbb
js
xor
iret
push
sarl
call
jns
insb
pop
lods
testl
lret
mov
and
add
cmp
inc
inc
das
decb
test
ficompl
pop
cmp
je
pop
popa
xor
mov
dec
leave
lret
jmp
jno
lods
cmp
sub
pop
lea
mov
aas
jmp
or
ja
fistpl
pop
inc
push
mov
movsl
lcall
adc
mov
xor
hlt
cld
xor
cld
lods
ljmp
mov
and
cmpl
jmp
js
mov
mov
xchg
cmp
lahf
or
mov
cmc
aas
test
adc
test
out
nop
cmc
pop
ret
movsl
mov
lret
shlb
cltd
adc
sbb
in
adc
xchg
push
xlat
jne
lods
movsb
xchg
call
in
adc
gs
fldenv
mov
loop
sbb
je
stc
mov
sbb
ficoms
ds
mov
es
fst
adc
out
fdivr
insb
pushf
popf
lock
pusha
adc
test
filds
mov
mov
iret
mov
cmpsl
stos
shlb
dec
pop
lahf
push
scas
imul
test
lret
pop
xchg
insb
push
out
cli
or
mov
jbe
clc
adc
mov
popf
or
sbb
leave
scas
out
add
adc
js
add
punpckhbw
aam
xchg
push
stos
inc
mov
xor
cwtl
nop
sbb
div
lret
mov
jmp
add
mov
xor
cmp
lcall
mov
and
pushf
inc
mov
lea
imul
fidivrl
mov
push
sub
call
jo
push
push
lods
mov
or
iret
mov
ret
mov
addr16
in
jno
in
pop
xor
sub
jge
aad
mov
add
outsb
mov
scas
sbb
outsl
enter
cmpsb
nop
les
push
mov
jns
std
jge
mov
shl
outsb
pop
inc
scas
jbe
in
leave
sti
in
stos
jo
fsts
mov
popf
xchg
dec
shlb
icebp
jecxz
mov
shrl
push
pop
add
mov
mov
aas
lock
push
push
imul
push
ret
push
mov
mov
mov
jge
enter
and
push
call
lahf
cmc
push
add
adc
lods
cs
ljmp
jno
mov
aas
pop
pop
in
adc
sub
add
sti
dec
sbb
inc
jae
mov
sbb
test
pusha
sarb
dec
adc
xchg
xor
bound
inc
push
shrb
ret
add
sub
pop
pushf
aaa
sarl
sub
into
je
jmp
fimuls
adc
mov
stos
push
sbb
xchg
xchg
gs
sub
inc
mov
jle
aam
pop
pusha
cmpsl
sbb
mov
inc
icebp
test
or
sub
ds
jb
and
test
aad
enter
repnz
iret
mov
jg
enter
cli
cmp
mov
shrb
add
jp
jl
adc
and
pop
adc
xchg
data16
dec
fistl
in
aad
jno
popa
lahf
frstor
outsl
scas
lds
lahf
and
push
aam
repz
pop
loop
sbb
fidivrs
mov
sarl
lahf
jns
jns
mov
sbb
push
aad
xchg
movsb
mov
jbe
jo
sbb
lock
fmull
aad
daa
loop
inc
daa
cltd
push
add
inc
lcall
aad
ror
fnstsw
add
fisubrl
xor
xchg
mov
sti
movsb
cmp
orl
xchg
pusha
sub
movsb
fbld
mov
inc
movsl
mov
dec
jmp
cmp
mov
cmp
jno
mov
mov
and
pop
pusha
out
imulb
jp
push
sbb
in
xor
and
loopne
sti
jae
push
pop
sub
add
fldt
icebp
sbb
xchg
inc
xchg
xlat
ret
je
xchg
mov
or
bound
icebp
jb
shrl
into
insb
push
mov
push
mov
rclb
aaa
jmp
sub
aas
cs
icebp
xor
cltd
adc
xor
jp
xchg
add
cmpsl
or
sbbb
arpl
jecxz
mov
mov
xlat
dec
sub
add
mov
add
add
mov
fs
ljmp
fwait
push
xor
push
jo
mov
sub
pushf
mov
lods
jl
int3
push
sbb
pop
mov
sbb
cmp
jl
iret
mov
fnstsw
cmp
xchg
sub
xor
inc
jg
push
mov
pushf
repnz
idiv
cmpsl
add
inc
push
mov
mul
add
out
jns
inc
sbb
mov
lcall
mov
cld
out
or
insl
shrl
or
lret
adc
add
loopne
hlt
fistpl
aad
mov
push
or
pop
mov
inc
ljmp
mov
inc
push
aad
add
push
testl
lods
shl
mov
rol
and
int3
xchg
lock
call
dec
push
cmp
mov
jae
lods
adc
jb
and
jbe
add
mov
lret
iret
pop
in
cmpsl
and
je
popa
mov
test
icebp
in
push
and
enter
mov
rorb
jge
cmc
test
stos
xor
mov
lea
cmp
xor
into
insb
dec
sbb
pop
shl
andb
shll
mov
mov
pop
cmp
pop
mov
or
sub
push
lret
outsb
jle
jo
pop
outsb
je
xor
sub
lods
cmp
jbe
daa
sbb
ljmp
cmp
cmp
mov
out
leave
xchg
fwait
add
das
mov
shlb
loop
aaa
hlt
or
cwtl
aam
out
jo
arpl
push
shlb
and
scas
sub
lcall
sarl
push
add
mov
jl
cld
out
sbb
cmp
ss
fbld
in
repz
cli
mov
pop
lcall
loopne
inc
insb
les
xchg
loope
jl
push
xor
xor
jl
cmp
lret
adc
call
out
push
cmp
repnz
jbe
clc
insb
push
pop
push
fstpl
pop
ds
bound
cmpsl
fisubl
in
and
dec
mov
sub
push
test
lcall
stc
je
cmp
xor
sbb
push
lods
lret
or
push
test
or
test
cmp
jle
pop
mov
jge
xchg
push
add
roll
insb
out
fidivrl
insl
loopne
jg
adcb
ret
repz
mov
fdivrl
sbb
cltd
cmp
fidivrl
out
in
lahf
dec
loopne
jecxz
xor
out
xlat
jmp
sub
add
mov
fwait
mov
pop
aam
adc
sub
mov
dec
push
cltd
rcrl
or
cld
ljmp
xor
pop
leave
ret
imul
add
dec
es
or
mov
cmp
jge
mov
jmp
and
sbb
das
xor
cmp
sbb
inc
lret
das
cmp
adc
dec
add
bound
int3
movsb
inc
xor
ds
cmpsb
enter
or
leave
sub
cmp
loop
inc
mov
fcom
and
pop
icebp
fdiv
mov
adc
inc
out
mov
cltd
lret
lcall
mov
mov
jge
repz
sub
mov
addr16
loopne
out
xor
sbb
enter
inc
push
cld
std
ret
cmp
adc
mov
inc
shlb
mov
scas
mov
mov
cmp
nop
pop
sub
imul
xchg
aas
in
pop
cmp
mov
or
hlt
sub
push
in
jp
repz
cmp
jnp
ret
rol
push
cmpsl
aad
clc
cs
pop
xchg
lods
sub
popf
movl
popa
xlat
and
jno
add
je
les
pop
inc
sti
xchg
add
mov
sbb
and
pop
add
cmpsl
clc
shlb
sbb
frstor
aad
sub
xor
addl
fildll
add
pop
xchg
jmp
cmc
lock
and
cmc
leave
cwtl
loope
adc
je
pop
and
imul
xlat
jle
adc
dec
call
push
sbb
mov
out
enter
mov
scas
mov
stc
xchg
xchg
dec
dec
stos
lds
pop
pop
push
daa
push
int
mov
mov
inc
movsl
inc
jnp
stc
lahf
aaa
addr16
or
lock
jmp
cltd
in
adc
jb
mov
arpl
xchg
test
cmp
mov
mov
pop
ss
and
or
mov
and
mov
jl
clc
push
cs
cmp
mov
dec
fstp
xchg
pop
mov
fnstenv
push
mov
mov
jmp
daa
dec
sti
cmpsl
jg
mov
jp
cmp
fmul
or
jle
jge
ja
adc
dec
dec
incb
std
jbe
xchg
movsb
add
outsl
roll
push
jbe
push
leave
push
dec
mov
pop
mov
je
cmp
fcomi
cmpsb
add
fs
jne
scas
sub
jnp
loope
push
or
mov
mov
and
sahf
je
dec
aas
jnp
aam
cmpsb
ljmp
add
mov
jl
mov
outsl
push
mov
pop
idivl
in
fucom
test
in
push
mov
push
ja
mov
ljmp
ret
fs
ds
dec
loop
xchg
or
fstl
hlt
sub
xchg
mov
scas
andb
mov
leave
rcll
xchg
mov
es
and
mov
leave
ret
rolb
mov
push
shlb
push
stos
leave
adc
inc
in
outsb
push
fnstsw
outsb
adc
fisubrl
ficoms
nop
inc
cmp
stc
rclb
je
pmullw
lods
lret
fcmovb
fidivrs
add
pushf
push
cli
aaa
pop
mov
xchg
pop
aad
loop
xchg
or
loope
mov
test
movb
jle
mov
push
fsubr
mov
jle
cmp
in
pop
push
es
enter
xor
mov
enter
cmp
rcll
stos
fstp
and
push
add
ljmp
sub
and
ja
out
das
inc
ljmp
lock
popa
rorb
mov
dec
or
push
repnz
adcl
loope
rcll
mov
fdivrs
gs
jnp
in
or
dec
add
aam
cmp
sbb
push
push
fsubr
aad
movsb
jae
mov
inc
xor
xor
push
add
mulb
and
pusha
ret
push
mov
or
pop
push
dec
jnp
mov
imul
adc
dec
pop
inc
rcr
dec
or
push
push
mov
and
sbb
xchg
ds
xchg
mov
fsubrl
and
cmp
jp
aaa
imulb
cli
filds
gs
push
jno
mov
xor
js
xchg
pop
adc
aam
lods
adc
cmpsl
test
dec
push
fildl
sbb
xor
icebp
mov
mov
arpl
popa
inc
addb
lcall
jnp
lds
lods
in
pop
je
les
in
mov
xlat
jecxz
and
and
mov
cmp
push
xor
xor
je
lahf
scas
test
sub
pop
mov
bound
aam
dec
cld
adc
push
adc
scas
mov
mov
fstl
xchg
jb
clc
add
pop
mov
lahf
mov
cmp
icebp
xchg
pop
cmp
cwtl
sbb
sti
push
in
and
ret
jnp
adc
cmp
xor
mov
aaa
inc
dec
push
xchg
rclb
mov
and
je
inc
aaa
outsb
inc
mov
lret
mov
test
add
out
mov
or
imulb
shlb
jl
aaa
add
adc
rclb
bound
mov
push
pop
imulb
int3
mov
ret
fcoms
inc
jnp
clc
cmpsb
mov
inc
js
cmp
mov
cmc
das
dec
mov
das
icebp
sub
xchg
jle
mov
lret
mov
mov
xor
and
cmp
mov
sub
decl
mov
es
cmpsb
mov
cmc
jnp
scas
xchg
unpckhps
jnp
nop
movntps
popf
idiv
aas
out
popa
test
jo
je
pushf
popa
in
inc
loop
inc
int3
adc
test
lea
lcall
lds
lcall
jns
jge
and
push
inc
push
call
xchg
push
mov
lock
push
imul
cwtl
push
mov
pop
jo
xchg
ss
or
push
mov
jge
pop
js
jbe
int
arpl
movsb
xchg
imul
outsb
xchg
and
cmp
mov
push
inc
enter
ror
ret
sti
jle
mull
mov
sub
cmpsb
mull
fsubrp
mov
mov
icebp
fbstp
sti
popa
lock
jnp
sti
gs
cmp
data16
sub
in
jmp
bound
aaa
je
push
cmp
push
inc
adc
imul
stos
sub
push
dec
outsl
lahf
leave
xchg
add
pop
xor
je
daa
jbe
in
pop
test
fistl
inc
shll
pop
mov
inc
outsb
dec
jle
xor
dec
lods
or
in
loop
adc
inc
in
lock
xor
mov
repz
pop
adc
loope
mov
push
gs
das
mov
adc
mov
fcompl
insb
jnp
in
pop
divb
lahf
call
sbb
adc
mov
cmovbe
cli
cltd
inc
pop
jb
sub
imul
loop
mov
fstpt
insl
mov
out
into
push
lock
add
mov
insl
js
mov
aad
es
push
scas
mov
addr16
loopne
insb
movsl
cmp
cmpsb
loope
lcall
bnd
jns
outsb
fwait
test
out
or
insl
enter
out
cmp
jl
int
mov
ss
in
call
lret
cmc
rol
jno
dec
push
sbb
xor
push
pop
cmpsb
fadds
cmpsw
or
data16
test
clc
call
mov
scas
ret
je
test
fsubr
jno
add
bnd
popf
shll
ds
daa
std
dec
dec
addl
mov
xor
lods
sbb
js
pop
cmp
xchg
mov
shll
scas
pop
stos
and
repnz
mov
and
dec
dec
fistpll
gs
dec
jg
mov
jl
ss
push
dec
addb
fcmove
cmpsl
aaa
lret
outsb
aam
dec
xchg
inc
xchg
cmp
mov
and
inc
loope
in
jb
ret
adc
dec
inc
out
aad
data16
push
mov
cmpsb
daa
imul
and
movsl
mov
insb
cs
lret
hlt
fldt
mov
dec
jns
mov
inc
lds
inc
loope
inc
iret
mov
push
add
cli
daa
jecxz
call
sbb
jmp
xor
jne
std
je
push
mov
je
ljmp
adc
sub
xchg
gs
rorl
or
add
pop
pop
inc
inc
insl
lea
hlt
icebp
xor
sub
arpl
into
nop
dec
mov
push
ror
jmp
jns
xor
lret
mov
cwtl
cs
inc
mov
add
pop
jb
or
inc
push
insb
add
sub
scas
ror
mov
daa
sbb
mov
cltd
lock
aas
rclb
xchg
jne
cmp
xor
test
into
mov
scas
stos
push
pop
pop
mov
lcall
lods
ficomps
mov
mov
jecxz
shrb
sbb
adc
sub
outsb
xchg
mov
mov
stos
and
leave
add
movsb
xor
lret
xor
inc
mov
add
push
mov
mov
cmp
lcall
and
dec
insl
shlb
nop
arpl
mov
xor
xchg
inc
out
adc
cmp
rorl
inc
adc
push
fwait
sti
mov
iret
add
jl
fidivrs
ret
jge
push
mov
push
cs
subl
aas
and
push
sub
push
inc
xor
xchg
jp
outsl
add
aam
int3
xchg
add
out
sbb
jno
movsb
push
mov
das
in
mov
gs
mov
sti
mov
mov
and
push
enter
push
pop
sub
pop
fimull
xchg
popf
dec
jne
push
or
adcb
daa
imul
and
pop
mov
or
mov
cld
xchg
insb
mov
lods
dec
out
pop
cmpsl
cmc
insl
pop
pop
sbb
xchg
test
jecxz
push
or
in
cmp
jmp
mov
xchg
je
in
or
popf
aaa
mov
add
pop
sub
loope
out
adc
mov
int3
pop
fistps
loop
daa
jo
push
test
or
rol
out
fimuls
repz
push
lods
xchg
adc
in
ds
ret
outsb
push
in
xchg
sti
jne
sub
cmp
adc
adc
and
fs
dec
or
push
dec
push
sub
lods
adc
ljmp
adc
mov
scas
inc
sub
dec
pusha
lds
lea
nop
shlb
test
aaa
xor
mov
adc
adc
fstps
inc
mov
xchg
sar
jp
adc
mov
cmpsl
and
pop
sbb
outsb
dec
jne
repnz
dec
mov
enter
lahf
rclb
dec
aam
and
jnp
dec
loop
aas
loopne
cli
loope
addr16
pop
jg
movsb
push
adc
mov
sarl
dec
push
pop
xor
nop
mov
inc
pop
repnz
jo
movsb
mov
ss
push
pop
arpl
test
jecxz
sub
and
push
jecxz
pusha
dec
int3
movsb
cli
add
sbb
call
test
xor
int3
aaa
scas
jg
scas
xor
subb
jg
mov
inc
jbe
mov
fisttpll
negl
xchg
lahf
xchg
push
mov
sub
clc
dec
fwait
andl
decb
pavgb
ds
sbb
cld
mov
xchg
mov
int3
cmp
mov
cs
data16
cmp
movsb
cld
idivb
xor
or
jb
cwtl
add
jns
pop
addr16
push
repnz
inc
lods
cmpsb
or
dec
mov
inc
std
cmp
push
or
jno
lea
inc
push
sbb
nop
lret
in
sti
call
js
push
or
jne
scas
std
in
mov
xor
cmp
pop
cmpsb
add
push
xor
mov
or
push
cwtl
nop
mov
ja
test
movsb
push
dec
xor
into
and
fldpi
mov
jmp
jmp
fstpt
mov
ret
aaa
xchg
ss
cmpb
mov
inc
add
adc
mov
jae
lea
icebp
jno
mov
inc
int3
pop
xchg
es
arpl
mov
mov
inc
and
sub
sti
xlat
sub
sbb
add
mov
cltd
adc
push
nop
outsb
loope
test
ds
filds
sbb
jmp
fwait
daa
cli
mov
xchg
imul
xchg
lods
or
orl
pop
outsb
add
test
aaa
and
stc
sub
in
push
aas
or
mov
add
fsubr
outsb
popl
adc
jp
mov
mov
mov
imul
cmpsl
test
sub
cmpsl
das
lods
in
ja
testb
cld
mov
mov
add
test
mov
mov
cmpsb
pop
or
jne
decl
pop
dec
out
mov
adc
fldcw
sub
shrl
add
mov
xchg
aaa
jb
es
cli
out
mov
sbb
repz
cmp
adc
fldcw
scas
mov
jnp
and
cmpsb
in
add
clc
mov
xchg
ret
test
in
inc
push
cli
js
xchg
and
ss
jecxz
fimuls
cmp
in
outsl
cmp
outsl
ret
sbbl
and
or
fcmovnbe
xchg
fistpll
and
push
popa
dec
or
pushf
sarb
jnp
push
dec
add
add
fwait
add
inc
xchg
js
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
shlb
add
and
