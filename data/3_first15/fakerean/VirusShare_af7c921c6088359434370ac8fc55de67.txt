sbb
add
mov
sbb
imul
jo
or
cmp
mov
xchg
nop
jmp
out
inc
in
lcall
ret
mov
mov
mulb
xlat
and
gs
mov
aaa
loopne
addb
fwait
jo
push
mov
push
nop
push
inc
mov
data16
imul
cmp
push
pop
or
int3
xchg
inc
xchg
out
ret
push
dec
ja
aam
es
bound
sbb
ja
aaa
pmulhuw
push
aam
mov
ror
mov
adc
cld
jbe
push
jg
lahf
push
ret
mov
in
lods
and
sbb
test
ljmp
mov
sub
call
cs
aaa
out
into
or
mov
insl
sbb
xlat
add
insl
call
sahf
push
xchg
sahf
inc
or
push
sub
shll
cmp
shl
mov
enter
insb
ljmp
inc
arpl
data16
out
orl
xchg
mull
test
je
mov
inc
or
push
sbbl
add
gs
aam
pop
fstpt
push
mov
in
xchg
inc
das
movsb
dec
fstps
sbb
dec
cmpsb
bound
cld
lods
push
dec
out
mov
xchg
xchg
sub
cmpsb
sub
push
push
and
mov
cmp
sbb
roll
sbb
sbb
outsb
adc
mov
lret
push
scas
xor
mov
jns
stos
or
sarl
sub
xchg
sbb
or
icebp
and
push
sti
inc
xchg
jae
stos
into
mov
out
jmp
mov
pop
mov
stc
push
pop
xor
sbb
testl
push
sbb
mov
mov
sbb
outsl
out
roll
andb
mov
jne
mov
cltd
adc
push
and
push
jge
jmp
divl
std
arpl
dec
push
mov
mov
adc
test
mov
jmp
jge
and
fcmove
dec
pop
lret
jp
mov
adc
mov
shlb
outsl
or
mov
add
inc
stc
fcoms
inc
adcb
push
mov
jge
jg
fsts
dec
inc
mov
push
in
mov
in
lret
cmp
lock
ret
lret
pop
ljmp
add
gs
or
inc
and
push
in
or
cs
stos
xor
mov
insl
xor
dec
aad
add
cli
les
or
lahf
seta
cmp
lahf
jge
imul
pop
into
cs
unpcklps
idivb
ret
mov
je
ret
xchg
aam
push
cwtl
xchg
mov
subb
imul
in
lret
pop
mov
jbe,pn
jbe
mov
jo
dec
hlt
roll
jb
adc
push
cmp
mov
cmp
cmpsl
mov
push
hlt
jge
leave
add
rorl
outsl
in
and
dec
dec
inc
inc
or
fmulp
adc
mov
fdivrp
mov
aam
or
daa
jl
aad
jne
xor
sbb
xor
fimuls
pop
sub
lea
ret
arpl
mov
and
xor
inc
fwait
push
shrb
cmp
sbb
out
call
shr
push
jo
mov
xor
mov
sbb
in
dec
sbb
pop
rolb
mov
pop
pop
push
lds
subb
sub
jle
pop
dec
fsubrl
mov
push
dec
add
int3
movb
int3
out
pop
rcr
cltd
or
js
daa
outsb
movsb
xor
pop
mov
jb
adc
xchg
push
in
mov
push
xchg
dec
mov
lahf
leave
subl
ja
enter
aam
ds
stos
mov
add
add
shrl
ror
sti
add
les
insb
fwait
aam
pop
or
push
mov
cli
push
ds
xor
ss
or
out
pop
mov
loop
add
lock
in
sbb
imul
sbb
icebp
xchg
sbb
rcrl
scas
fstpt
sub
outsl
fidivrs
jg
out
mov
push
xor
lret
addr16
fs
popl
or
xchg
repnz
jl
jns,pn
ficompl
rol
pop
movl
push
fldenv
jge
cmc
fnstenv
inc
jecxz
test
in
imul
stc
into
inc
dec
pop
repnz
loope
mov
clc
xor
fs
in
or
cltd
mov
push
ret
cmp
add
fldl
and
xor
cs
in
add
sbb
rorl
jbe
repnz
sub
cmp
into
xor
out
out
xchg
fisttpl
sbb
mov
pop
cmp
jnp
mov
flds
rcrl
dec
leave
mov
jno
rclb
inc
dec
sub
mov
jecxz
lods
pop
mov
aaa
fsubr
daa
sub
inc
xor
pop
push
rcrb
std
xor
or
loope
jecxz
jge
mov
fwait
ds
xchg
test
insb
cmp
in
add
ljmp
decb
loopne
les
push
jns
sub
nop
and
out
cltd
mov
mov
mov
xchg
jecxz
sbb
or
inc
sbb
jle
jb
cld
sub
jno
ret
inc
inc
mov
or
sbb
push
push
mov
jnp
outsl
mov
loope
and
xlat
out
les
cmpsl
mov
and
iret
and
popf
fidivl
mov
mov
testb
cmp
in
inc
jl
gs
mov
scas
dec
fs
orb
fisubs
sub
jmp
or
hlt
ja,pn
mov
mov
js
dec
lcall
clc
push
and
pop
int
std
mov
icebp
push
push
push
adc
and
shrl
xchg
dec
add
adc
lds
or
test
lds
adc
insb
xchg
mov
repnz
cld
pusha
sub
outsl
cld
or
fnstsw
pop
sbb
pushl
jnp
and
pop
dec
pop
jge
daa
cmc
xor
or
loopne
xchg
loopne
mov
es
pushf
ds
fs
cwtl
add
in
and
xchg
js
xchg
stc
pusha
cli
popf
jnp
mov
cld
inc
lret
xor
jecxz
mov
popa
mov
xchg
or
addr16
and
orb
or
cmc
maxps
es
test
data16
or
out
stos
mov
nop
lods
sbb
pop
adc
cmpsl
outsl
ljmp
test
xchg
mov
pop
xor
sbb
outsl
and
or
data16
sub
jno
push
stos
sbb
dec
cmp
and
popf
jge
fwait
out
xor
insl
std
mov
repnz
int3
inc
mov
inc
repz
mov
aas
test
inc
and
jmp
scas
add
xchg
cs
mov
ja
fs
mov
lods
rcrl
add
sarb
addb
mov
fdiv
mov
jns
pusha
imul
lods
in
aad
pop
aas
ficomps
adc
pushf
lods
push
lods
cmp
aas
and
fdivrl
sahf
xchg
mov
pop
cli
pushf
test
cli
in
sub
enter
mov
dec
dec
int3
mov
cmpsb
fistps
loopne
xchg
adc
xlat
shrb
jno
psubsw
pop
mov
pop
idivl
and
and
push
push
jae
cwtl
ficoml
sub
push
push
sbb
fcmovne
mov
mov
or
cld
and
adcl
cmp
fstl
and
lock
mov
xchg
inc
mov
sub
xchg
rclb
test
push
mov
fdivl
sbb
addb
cmpsl
sbb
divb
pop
aas
imul
push
mov
repz
shrb
jno
adc
inc
gs
jno
mov
push
fisubl
lods
mov
adc
arpl
in
aaa
loop
insl
push
pop
fimull
xchg
rcl
cld
or
cmpb
inc
pushf
cmp
jg
dec
repz
mov
dec
cld
out
cmc
mov
insb
xor
in
sub
mov
adc
add
mov
movsl
into
ja
mov
xchg
sbb
les
xchg
sub
and
inc
repz
ret
fbld
das
sub
push
das
mov
cltd
ss
push
push
dec
movsb
xchg
fcom
clc
imul
cli
jg
sbb
scas
mov
mov
call
rolb
and
icebp
out
test
push
test
nop
pop
push
popa
cmp
aad
sub
loope
mov
mov
cvtps2pd
xchg
jmp
cmc
mov
movsl
pop
adc
in
xchg
xchg
rcll
gs
sub
mov
in
adc
movsb
mov
mov
inc
insl
mov
aaa
sar
cmpsl
dec
negb
push
enter
push
xlat
lods
push
addr16
mov
hlt
inc
mov
jl
cltd
les
and
mov
sti
mov
push
and
and
aaa
mov
vmwrite
xchg
ja
adc
int
mov
stc
jbe
or
add
bound
inc
and
mov
inc
jae
xlat
sbb
xchg
cld
add
mov
jle
js
lcall
nop
push
xchg
mov
out
es
orl
icebp
or
aam
stos
pop
pop
pop
aad
add
cmp
and
call
cltd
add
fiadds
dec
cmp
mov
adc
xchg
sti
xchg
jb
in
test
mov
push
jne
das
inc
cmpsb
mov
ljmp
xor
mov
nop
aam
fdivrl
aad
or
ja
lcall
xor
std
movsl
xchg
sbb
sub
daa
inc
sbb
icebp
jl
cmp
fmuls
jno
fmuls
adc
push
jmp
es
xchg
cwtl
stos
mov
jbe
les
or
fimull
and
or
mov
mov
fsubr
popa
int
add
repnz
cmp
add
test
cli
push
inc
and
pmaddwd
push
adc
mov
jns
adc
icebp
mov
adc
sub
mov
mov
sub
jmp
xor
mov
xchg
sub
mov
jb
xchg
ja
sub
pop
cmpsb
fisubl
dec
cmpl
xchg
mov
rclb
mov
pop
mov
nop
ret
push
inc
cmp
xor
xlat
pop
jns
xchg
lods
repz
jmp
jmp
and
mov
or
adc
daa
fwait
xchg
lcall
xor
and
mov
sbb
lahf
jae
add
popa
int3
mov
ficoms
push
ja
mov
loopne
sbb
xor
ja
sbb
lds
sti
mov
jne
cmpsl
lods
inc
push
sbb
push
pop
ja
jb
pop
mov
adc
pop
or
push
sbb
loop
es
pop
cmp
sbb
int3
jge
inc
rol
pop
push
jmp
cmp
subl
cmp
insb
addr16
stos
inc
or
outsl
xor
inc
pop
or
out
adc
xor
mov
xor
pop
mov
in
in
pusha
sbb
inc
mov
aad
test
push
stos
cwtl
dec
dec
mov
adc
fstps
xchg
jnp
idivb
andb
cwtl
into
or
pop
pop
fs
xor
and
enter
sbb
jge
mov
sarl
bound
outsb
xor
sti
add
aam
scas
jns
out
jp
adc
addr16
insl
sub
cmc
out
test
mov
lea
pop
cmp
cmpsl
cmp
iret
incl
ret
in
cmp
lds
out
inc
push
fcomps
sbb
in
mov
leave
out
enter
xchg
lahf
fstpl
pop
jl
mov
out
movsb
sub
stc
iret
cmp
ficoml
xchg
js
mov
pop
mov
call
mov
and
loop
mov
int3
sub
pop
adc
xcrypt-ctr
cmpsl
pop
mov
push
mov
in
jl
add
mov
sbb
cmp
rsqrtps
iret
mov
xor
xchg
mov
xchg
repz
or
or
inc
repz
sahf
inc
mov
pushf
push
rolb
mov
test
cmpsb
xchg
pop
std
pop
gs
dec
mov
push
xchg
add
mov
dec
xor
rcrb
fstl
sarb
mov
mov
por
sbb
mov
enter
xor
mov
cmp
ds
jmp
dec
movsl
das
lds
shll
add
add
pop
jb
push
cmc
stos
xorb
dec
push
out
push
iret
movsl
add
jno
in
sbb
enter
loopne
pop
rcll
cmp
adc
mov
jbe
mov
push
aam
adc
inc
push
sarb
roll
add
jg
into
movsl
sti
fwait
shrl
clc
mov
mov
loopne
lds
imul
repz
push
cmp
rcrb
rcl
out
mov
lcall
and
xchg
xor
icebp
push
push
stos
add
mov
cmpsl
imulb
test
fcmove
enter
movsb
sub
inc
sub
add
and
push
mov
repnz
je
cmpl
adc
pop
and
dec
sbb
xchg
orl
cmp
out
cmp
mov
mov
or
shlb
push
leave
test
inc
std
mov
push
loop
push
fxch
lods
cltd
imul
lret
mov
sub
dec
adc
shrb
dec
aas
icebp
lahf
mov
in
pop
dec
or
sub
aaa
stos
jnp
dec
int3
insl
into
out
or
push
fsts
iret
mov
js
or
aad
jecxz
push
das
roll
push
pusha
rcrl
cmp
pop
and
mov
in
push
push
fs
ret
ja
push
mov
rcll
ljmp
mov
mov
pop
cmc
sarl
lock
or
add
xchg
dec
fidivs
add
cmp
fistpll
int
ret
add
push
imul
sub
int3
pop
mov
les
pop
jecxz
fdivs
scas
aaa
sbb
idivl
popa
iret
jns
jge
fistpl
out
fsubrp
xchg
out
imul
mov
xchg
pusha
in
mov
daa
jmp
xor
xor
nop/reserved
insb
imul
fnstcw
stos
insb
mov
loope
icebp
imul
rdtsc
pop
pop
add
pop
fwait
mov
cmp
ret
movsl
call
es
into
cmp
xchg
pop
push
aam
out
xchg
adc
je
rcl
movsb
or
pop
pusha
clc
or
cmp
dec
fadds
mov
xor
jl
in
sti
dec
incl
push
lret
jno
or
add
cmp
sub
fcomps
inc
imul
mov
aam
dec
pushl
or
xchg
sbb
scas
hlt
mov
movsb
in
xchg
into
adc
jo
pop
out
sbb
xor
div
pop
scas
es
daa
cs
shl
jno
lods
arpl
loop
lahf
mov
lods
push
les
pop
add
loopne
xchg
xlat
clc
mov
xlat
fs
jl
js
xchg
sub
and
out
jo
adc
loope
mov
dec
fisubs
pop
push
insl
ficoml
fisubl
imul
shlb
cld
jno
icebp
sub
loop
arpl
in
nop
sub
insb
and
insb
pmaddwd
xchg
mov
lds
pop
negb
inc
mov
xchg
leave
xchg
inc
movsl
fldl
inc
cmp
leave
add
cs
mov
adc
adc
xchg
outsl
mov
fsub
pop
sar
aam
mov
and
icebp
sub
mov
rolw
push
ja
xor
call
dec
popf
mov
int3
ja
pop
adc
fcmovne
add
aaa
rcrb
in
icebp
outsl
lds
sub
enter
popa
das
push
sti
adc
data16
test
mov
and
lret
inc
mov
in
xorb
push
dec
sub
stc
iret
push
add
scas
mov
inc
addr16
lds
or
inc
xor
jmp
mov
fs
in
dec
and
pushf
scas
pop
cltd
pushf
ficompl
xor
dec
lret
jg
js
push
dec
repnz
or
iret
popa
aas
repnz
or
leave
jae
ret
lods
je
flds
lcall
xlat
test
adc
out
add
lods
pop
and
leave
push
daa
mov
xor
popf
out
push
xchg
ret
fnstenv
fsubrl
cmp
and
stc
icebp
push
enter
add
lea
and
jmp
push
pop
imul
mov
xor
push
lock
icebp
hlt
pushf
stos
mov
cmp
add
jno
mov
pop
cmp
mov
jno
jecxz
cli
mov
add
and
push
je
cmp
jecxz
leave
xor
xchg
push
push
lea
mov
ret
loop
xor
lods
mov
xchg
imul
dec
mov
xchg
and
cmp
decl
adc
ds
hlt
scas
out
aas
cmpsb
push
sti
xchg
adc
sahf
pop
sub
xorb
inc
lret
push
inc
mov
sbb
mov
inc
outsl
adc
loope
and
imul
cmp
inc
je
stos
xor
add
and
mov
push
cmc
and
pop
lahf
mov
movntq
or
push
ret
pop
pop
cmp
pop
insb
aas
add
inc
mov
out
jnp
xchg
xchg
pushf
repnz
mov
xchg
push
mov
insl
push
sbb
js
popa
cmp
and
mov
mov
bound
cltd
push
pop
lods
movntq
cltd
dec
ljmp
pop
movsl
mov
jbe
in
aam
ud0
add
loop
push
push
scas
sub
xchg
sub
out
mov
aad
mov
or
lods
fidivrl
xchg
lahf
or
sub
setnp
aas
mov
mov
mov
jbe
gs
lahf
mov
call
hlt
lods
cmp
sbb
jp
and
push
dec
jl
push
mov
push
jg
ret
daa
push
or
mov
call
pop
pop
das
adc
movsl
pop
cltd
xchg
mov
cmp
cld
mov
mov
lret
jo
out
outsb
mov
sub
daa
and
inc
icebp
jne
repz
sbb
std
es
dec
push
scas
cmc
cmc
mov
xchg
movsl
mov
int
fisubl
add
jne
or
js
sub
pop
bound
mov
inc
movsl
loop
movsb
xchg
mov
cmpsb
pop
mov
and
push
adcl
ss
movsb
fcmovnbe
fdivrs
jbe
imul
out
inc
sbb
iret
mov
push
xchg
jg
movsb
dec
insb
fildl
and
sbbb
add
gs
mov
ja
xchg
and
pop
arpl
inc
cmc
mov
or
xchg
stos
subl
mov
xchg
lea
es
insb
pop
cmp
mov
cmc
push
lea
and
repz
sahf
jbe
cmpsb
lds
in
rcll
cmp
mov
cltd
mov
jmp
sub
pop
mov
jne
inc
push
mov
jmp
fs
cmp
xlat
dec
loop
fsubl
sbb
stc
cli
jnp
dec
sub
aas
outsl
lods
fwait
jl
lods
pop
ja
sub
dec
mov
lahf
push
shlb
cmp
pop
dec
and
insl
jle
in
mov
es
xor
clc
or
dec
adc
loope
rcll
push
push
outsl
nop
outsb
sub
je
fdivs
inc
sbb
add
cvtps2pi
sbb
inc
imul
stos
dec
mov
dec
sarl
or
sahf
icebp
dec
into
sub
mov
gs
mov
sub
insl
popa
adc
dec
push
rclb
into
bound
into
push
data16
cli
loop
mov
pop
out
clc
std
in
xlat
cmp
jp
xor
dec
loope
sub
cmp
stos
inc
les
mov
js
pop
ficoms
xchg
add
sub
or
and
mov
bound
arpl
or
mov
pusha
scas
and
jo
push
and
ret
add
out
decl
test
mov
clc
fadds
repnz
mov
and
xchg
cmpl
jae
fsubrs
movsb
mov
int
adc
movsb
push
cmp
dec
cmp
mov
mov
ja
ds
rcrb
movsl
xchg
jne
stc
mov
outsb
js
pop
sbb
ss
sub
clc
sub
sbb
arpl
daa
stos
dec
mov
sbb
cmp
or
adc
cli
sbb
add
repnz
jae
daa
xor
mov
adc
mov
sbb
cmp
sarl
adc
jae
adc
sub
call
ds
aam
outsl
mov
rol
addr16
nop
ja
xchg
push
xchg
jbe
imul
ret
jb
int
inc
negl
lcall
mov
and
fwait
or
jg
sub
rol
insl
int
lods
mov
inc
lock
int3
mov
pop
fnsave
pop
in
aas
in
xor
cs
mov
bound
push
xchg
push
out
fisubrl
mov
and
mov
or
loopne
mov
les
mov
inc
into
push
cmpsl
into
inc
mov
imul
and
les
xor
xor
mov
in
mov
jmp
add
fisubrl
stos
cwtl
mov
mov
xchg
addr16
imul
mov
nop
lahf
mov
xchg
cmp
cld
sub
adc
ljmp
mov
loopne
jge
mov
sub
jmp
push
push
xchg
aas
cs
xchg
test
imull
insl
aad
inc
sbb
mov
push
iret
cwtl
decl
call
mov
stc
lock
mov
mov
mov
sbb
push
xchg
xor
js
call
popf
stos
push
test
push
and
fisttpl
mov
pop
xor
pop
loope
pop
fwait
adc
pop
adc
arpl
jb
add
icebp
pop
int
add
leave
adc
lahf
cwtl
fwait
movsb
sbb
jb
aad
arpl
pop
gs
dec
mov
in
xchg
or
nop
or
push
sarl
jns
lahf
scas
dec
mov
insl
pop
pop
dec
fs
push
insb
dec
and
sarb
rorb
pop
mov
pop
cwtl
cmovg
xchg
mov
daa
das
cmpsl
out
cmc
jo
sahf
mov
fs
or
pop
pushf
lods
jbe
ds
cmp
push
outsb
xlat
inc
lret
xchg
push
outsl
mov
jnp
mov
popf
loope
adc
xchg
and
hlt
sbb
pop
xor
imull
sarb
aad
fildll
ss
lds
loop
cmp
roll
ss
in
ret
push
sub
rorl
stos
into
cmpsb
stc
sbb
mov
pop
xor
inc
push
mov
pop
fwait
cwtl
push
scas
cmpsl
pmulhw
pop
push
dec
dec
lahf
test
jbe
cmpsb
dec
cltd
add
int
imul
pop
cmp
add
in
xchg
fcom
loop
cmpsb
inc
xchg
pop
fdivrs
mov
adc
pop
xor
or
icebp
mov
dec
mov
test
je
aaa
or
jne
push
sti
push
insl
ss
in
shrl
push
push
sti
lcall
scas
sub
pop
sbb
mov
adc
shll
repz
inc
sbb
out
mov
pop
into
scas
cmp
fwait
sahf
int
xchg
mov
xor
xchg
sti
popf
and
inc
ds
xor
std
mov
out
pop
cli
xor
clc
mov
sbb
iret
push
and
jl
or
jge
shll
aas
xchg
stos
pop
jb
or
xorl
outsb
or
je
daa
mov
and
scas
cmp
adc
pushf
mov
mov
jb
push
arpl
rol
data16
cmc
dec
dec
sbbb
jp
mov
adc
mov
sub
stos
aad
mov
add
push
push
pushf
ja
in
cltd
fdivs
inc
or
jecxz
xchg
mov
daa
lahf
inc
loop
xchg
or
and
mov
js
ja
adc
in
in
cmp
push
xchg
xchg
loop
ljmp
nop
lea
aas
and
cmpsb
js
sub
and
pop
add
and
rclb
sarl
adc
es
adc
leave
cld
sahf
add
pop
adc
cmp
xor
adc
in
jge
hlt
pop
dec
adc
add
rcr
dec
movsl
xor
addr16
jge
int
adc
sbb
lahf
jg
in
out
add
adc
sbb
jnp
jmp
mov
icebp
adc
push
imul
xlat
popa
jge
mov
mov
jo
add
ljmp
mov
repz
pusha
movsb
cli
in
mov
and
or
pop
pop
ret
jecxz
cmp
andb
arpl
cmc
bound
scas
xor
sub
aam
lret
mov
icebp
notl
jl
mov
dec
frndint
add
pusha
xchg
sub
mov
out
add
jbe
shl
dec
sub
ljmp
sub
setns
mov
popa
mov
popa
daa
xlat
popa
ljmp
lea
mov
cmp
mov
imul
pushf
pop
sub
cmp
jp
xchg
mov
popa
das
dec
aam
jno
push
sub
push
rcll
iret
push
repz
lea
lcall
std
adcb
and
into
jno
aaa
inc
aam
or
xchg
jmp
cs
mov
add
or
and
daa
dec
lcall
mov
enter
push
shrl
and
movsl
inc
call
jp
in
rclb
inc
int3
pushf
fstpl
or
sub
lock
in
jb
push
and
dec
scas
arpl
adc
push
mov
cmp
and
xor
dec
jge
push
adc
fstpl
cmp
cmp
push
icebp
push
jns
pushf
xor
lods
jno
loope
jl
push
xchg
gs
rclb
xchg
cltd
stc
add
jnp
cmc
lock
inc
inc
sub
push
nop
push
out
push
mov
inc
cmpsb
inc
push
or
and
xor
adc
fdivrl
mov
in
bound
enter
dec
xor
aas
pop
mov
push
cmp
outsl
lods
jo
andl
sub
aam
loope
push
sarb
lret
push
push
sbb
mov
jb
pushf
mov
pop
std
pushf
cld
xchg
fwait
push
push
test
lods
sar
icebp
mull
mov
fucompp
sahf
in
xchg
in
mov
rorb
xor
mov
mov
pop
push
xlat
div
in
push
in
jg
add
and
xchg
push
or
inc
pop
mov
push
dec
hlt
jmp
mov
addb
dec
dec
push
inc
idivl
push
jb
xor
sbb
fnstcw
repz
sub
bound
ja
push
dec
lods
loop
into
arpl
cmp
mov
mov
sub
pop
jecxz
sub
test
and
lret
mov
or
jge
add
fwait
loop
fstpl
jae
push
mov
cmpsl
pop
js
and
push
jbe
scas
mov
aad
xchg
ja
gs
push
inc
and
stos
repnz
xchg
or
xchg
out
push
cmc
es
bound
jae
push
inc
adc
shrb
xchg
xlat
fwait
mov
mov
sahf
filds
in
ljmp
adc
ja
cli
xchg
in
or
mov
inc
cmpsl
aas
icebp
in
icebp
into
push
pushf
add
xchg
jns
or
jge
dec
mov
leave
lret
push
add
pop
test
ss
add
jecxz
into
cmc
loope
mov
cmp
pop
aam
add
out
addr16
xchg
sub
out
icebp
sub
jne
xor
push
stos
cmpsb
jmp
popl
test
pop
adc
xor
adc
test
lahf
add
sbb
pop
jmp
dec
pop
pop
push
das
cmc
subb
cltd
rolb
call
outsb
mov
iret
inc
gs
jp
les
xlat
and
adc
clc
inc
cld
push
push
push
add
or
mov
ret
dec
dec
cmp
ret
pop
pop
adcl
in
or
xor
stos
add
cltd
cld
call
and
loope
popa
shlb
clc
inc
arpl
shr
aad
repz
mov
movsb
pop
jbe
or
xchg
jmp
push
jecxz
lret
enter
je
daa
push
cwtl
aaa
jmp
or
jo
fmul
cli
test
ror
stos
xlat
and
shll
cltd
add
cmp
scas
ljmp
push
and
push
imul
enter
push
jae
add
insl
push
stos
pop
mov
sar
iret
test
rorl
sub
repnz
dec
and
test
ss
sbb
sub
out
and
mov
sub
fld
push
dec
fsubs
pop
add
jae
sbb
adc
dec
jno
push
mov
es
push
xor
fildl
in
jp
mov
or
dec
lcall
or
pop
xchg
andb
or
mov
adc
push
mov
dec
test
fs
sbbb
or
scas
jmp
sbb
rolb
sbb
push
push
jmp
notb
sbb
sbb
repz
imul
test
les
jbe
out
inc
pushf
pusha
addl
repnz
insb
cmp
divb
mov
rcl
add
jmp
push
imul
xor
sub
jle
mov
je
lods
outsl
addb
jecxz
mov
jno
fstps
les
sahf
repz
out
mov
dec
fcompl
popa
push
dec
push
push
loop
mov
das
pop
xor
push
jge
incb
imul
adc
pop
mov
psllw
sbb
sbb
cltd
add
adc
aaa
shll
and
in
cmp
int3
and
push
stos
mov
sbb
pop
sub
dec
push
movsl
mov
dec
adc
xchg
fiadds
or
pusha
nop
test
xchg
cmp
sub
sbbb
ss
pop
jp
std
cld
sub
icebp
and
mov
test
test
push
adc
cmp
push
lahf
inc
dec
fsubrl
int
rcrl
jo
mov
fidivrs
out
sub
mov
stc
leave
das
push
adc
jle
enter
mov
into
jnp
xor
nop
shlb
leave
push
lods
push
and
pop
and
repnz
pushf
into
aaa
mov
out
inc
jl
lret
leave
icebp
cltd
add
push
sub
in
mov
adc
mov
ljmp
dec
push
mov
add
bnd
xor
mov
adc
in
xchg
xchg
dec
mov
pop
loope
sbb
mov
movsb
in
mov
hlt
out
and
add
scas
lret
into
cmpsl
ds
jns
pusha
cmp
daa
scas
push
inc
loopne
sub
sub
cmp
add
xchg
add
ds
push
pop
outsl
pop
inc
imulb
insl
or
cmp
lods
xor
int3
imul
mov
leave
jno
test
inc
pushf
xorl
or
push
mov
enter
lret
xor
and
test
or
stc
inc
andb
test
adc
and
pushf
popa
out
dec
pop
enter
sbb
cmc
pop
cmp
sar
scas
jle
dec
adc
loop
mov
sub
popa
push
int3
adc
push
mov
mov
testl
xchg
push
mov
jb
jp
xchg
les
sar
push
inc
test
test
push
test
inc
dec
inc
cmp
movb
push
cltd
mov
outsb
lcall
dec
cwtl
push
pop
mov
xlat
xchg
mov
dec
pop
xchg
xor
pop
mov
cltd
pop
leave
or
or
sub
cmc
jmp
aas
sub
cmpsb
rcrb
adc
xorl
mov
in
pop
loopne
dec
pop
mov
cmpsl
cmp
pop
test
xchg
shrb
dec
push
divl
mov
jmp
rol
xchg
pop
test
push
lea
aad
fsubrs
xchg
sub
rorl
jb
aaa
sub
xor
jae
or
repnz
sbb
mov
push
mov
mov
cmp
loope
or
fsubrs
adcb
ljmp
pop
fldt
xchg
pop
testl
cs
push
subl
lods
mov
jmp
sarb
in
push
test
jb
dec
push
out
fdivrs
inc
stos
mov
mov
lods
sub
sti
jb
sbb
add
outsl
and
inc
pop
add
jbe
push
mov
cwtl
cmp
sti
jno
shrl
xchg
add
stos
popf
pop
lods
aaa
xchg
or
daa
mov
loop
std
outsb
sbb
fbstp
mov
or
lds
mov
xlat
sbbl
cmp
inc
push
push
aam
push
pop
int
push
lcall
lock
inc
add
sub
rorb
into
repz
lea
ljmp
push
xor
ficompl
adc
mov
in
icebp
fisubrs
sti
in
and
xchg
jge
pop
pop
sbb
xlat
cmp
xor
xor
test
mov
and
sbb
sub
mov
in
fwait
lcall
dec
add
push
repz
cs
sahf
cmp
mov
test
xor
or
mov
jnp
mov
mov
sub
push
shrl
pushf
mov
ds
push
mov
in
lds
push
imul
fnstenv
push
jmp
mov
gs
lahf
xchg
adc
clc
mov
ret
mov
pop
push
rolb
xchg
std
push
xor
cltd
push
fidivrl
in
mov
aam
mov
cmp
xorl
mov
jae
and
xchg
aad
push
jae
inc
nop
push
dec
cltd
dec
jo
mov
pop
outsl
sahf
hlt
mov
cmpsb
frstor
mov
iret
cli
and
xorl
xor
dec
jns
sbb
rclb
outsl
js
rol
push
fcmovne
sbb
lret
lock
pop
shlb
mov
out
or
inc
fsub
sti
dec
dec
scas
push
subl
xor
cmp
out
mov
sbb
popl
mov
mov
xchg
fs
dec
imul
ss
gs
test
movsl
and
ds
xchg
pop
pop
jle
adc
addr16
icebp
mov
and
dec
xchg
das
js
push
data16
gs
add
add
daa
jae
push
lret
sub
sbb
aas
fidivs
cwtl
flds
mov
xor
pop
mov
xor
adc
sub
inc
xchg
pop
push
sub
xlat
sub
rcrl
in
shlb
dec
mov
sarb
mov
xor
cmp
xchg
in
dec
xchg
inc
mov
in
and
insb
and
mov
push
inc
js
dec
push
cltd
loope
das
mov
ss
dec
xchg
and
or
mov
xchg
loope
popa
loop
je
and
cmc
loope
push
jle
sahf
or
insl
push
std
xchg
push
mov
arpl
addl
add
pop
jns
jmp
call
and
add
dec
sbb
inc
inc
sbb
sub
push
push
sbbb
shrb
mov
popf
ja
cmp
jb
dec
je
or
scas
or
test
dec
mov
inc
out
arpl
ljmp
in
push
hlt
mov
mov
sbb
dec
sbb
jno
in
movsl
aaa
lods
fldcw
movsl
cli
push
movsl
cwtl
daa
ds
lods
movsb
outsl
pop
cmp
das
das
mov
inc
or
addr16
xor
dec
xchg
inc
aas
push
jnp
clc
inc
inc
aad
xor
xor
lahf
mov
adc
pop
mov
insl
jl
pusha
xchg
mov
shlb
gs
mov
loop
push
add
cmp
and
and
adc
xchg
and
aaa
imul
test
mov
subl
test
jmp
jg
inc
popf
ss
out
orb
pop
mov
pop
pop
insl
pusha
fst
fs
cmp
cmp
push
out
jbe
les
les
inc
sbb
into
inc
pushf
cmpsl
sbb
add
add
fimuls
mov
push
sub
mov
in
fistpll
mov
daa
mov
cli
and
insb
out
repz
daa
inc
push
arpl
push
pop
jns
daa
fs
pop
xor
dec
mov
shr
push
dec
es
push
test
and
jno
xor
shrb
faddl
jo
data16
movsb
flds
outsb
data16
mov
clc
inc
aaa
jae
mov
xchg
mov
dec
push
aad
sbb
jl
adc
jb
jp
and
push
push
or
fsubrs
inc
dec
cmp
and
in
div
mov
mov
pop
push
sub
dec
xchg
out
pushf
leave
xchg
cmc
mov
dec
ficoms
xor
icebp
pusha
jecxz
ret
pop
push
dec
popf
xchg
dec
lods
int3
xlat
aaa
sbb
cwtl
add
add
cmp
inc
int3
push
sub
scas
jo
arpl
es
pop
push
and
add
adc
lods
push
lret
add
or
icebp
insb
sbb
cmp
pop
push
mov
aad
mov
inc
idivb
lods
hlt
xchg
in
mov
sti
int3
add
add
ss
xchg
movsl
inc
inc
jp
sbb
es
dec
add
filds
fbstp
cwtl
popf
test
mov
cltd
pop
ss
fdivp
rcl
mov
mov
scas
cmp
je
xchg
cmc
jns
lahf
and
jecxz
fadds
adc
mov
out
fwait
pop
mov
mov
mov
push
pop
mov
loop
jge
test
pop
outsl
cltd
das
inc
loop
fldpi
fwait
cli
imul
cmp
mov
xchg
add
insl
sarl
int
fstpt
mov
mov
cmp
xor
ucomiss
stos
mov
mov
testl
sbbb
addb
adc
out
dec
loop
lods
pushf
call
mov
xlat
test
fstl
cld
jl
cmpl
loope
enter
pop
add
jmp
enter
rcrb
dec
fildll
inc
mov
dec
add
pushf
cli
notb
xchg
adc
mov
sub
jo
movsl
xchg
sub
sbb
push
and
mov
lods
push
das
add
mov
xor
xchg
add
sbb
and
int
loope
or
fdivr
aaa
xlat
addl
adc
les
gs
xor
push
repnz
or
mov
jge
outsb
shlb
inc
mov
mov
rorb
jle
cmp
in
mov
mov
rolb
bswap
test
fcmovnu
iret
daa
cmpsl
cmpsb
mov
imulb
xchg
aam
pop
mulb
stc
dec
cmp
pop
mov
rcll
das
pop
mov
pop
js,pn
ss
push
push
inc
jp
pusha
add
imul
add
lods
scas
sbb
sub
adc
adc
dec
sbb
sti
inc
pop
rcrl
loop
dec
test
mov
jmp
lret
imul
pop
pop
nop
cmpsb
and
popf
cmp
repnz
hlt
inc
push
xor
aam
mov
call
es
push
adc
icebp
mov
gs
fmul
call
outsl
dec
push
lret
xor
mov
mov
js
call
mov
push
adc
ja
ss
aam
adc
daa
xor
jl
xchg
repz
mov
push
shrb
lods
sub
mov
cmpsl
fwait
rcrb
add
mov
sub
adc
dec
mov
xchg
imul
mov
ret
ret
sub
push
out
pop
jo
xchg
sbb
inc
sub
int3
xchg
in
jbe
mov
movsl
nop
push
mov
jle
test
adc
mov
sbb
lret
mov
sbb
incb
dec
mov
push
lahf
lods
sub
adc
lods
and
lcall
or
sbb
aaa
sub
insb
je
cltd
dec
pushf
in
ret
jmp
loope
aam
dec
jbe
out
pop
daa
sbb
jg
cld
aad
sub
cli
pop
fildll
lret
mov
dec
movsb
pop
mov
dec
je
std
andb
cmpsb
adc
cmc
int
lret
dec
mov
in
xchg
mov
data16
jae
out
mov
inc
cmp
push
pop
adc
cmp
aaa
js
inc
fs
mov
loopne
sbb
testb
popa
out
jecxz
xor
scas
cltd
push
pop
xor
fnsave
fstps
insb
stos
insl
sti
jl
mov
es
stos
out
cmp
push
sub
ret
jb
mov
ja
jmp
cmp
push
pop
jl
mov
dec
jnp
mov
into
sbb
xor
loope
inc
or
movb
shlb
ljmp
int3
jmp
cwtl
jbe
arpl
cwtl
int3
fdivrs
frstor
repnz
mov
sub
jo
adc
cmpsl
rorl
dec
gs
lret
ds
jo
mov
les
cwtl
vpsllw
test
dec
or
cltd
out
adc
fwait
mov
jbe
fwait
ja
shlb
mov
lcall
pop
and
push
inc
loop
rolb
or
test
data16
xchg
divl
inc
xor
sub
fstl
pop
das
lahf
insl
adc
push
cwtl
xor
push
jmp
outsl
test
push
pop
dec
xor
inc
int3
mov
int3
and
das
mov
cli
xchg
cmpsl
xchg
cld
cmp
loop
push
and
or
push
sti
test
scas
sahf
xchg
sbb
sub
and
fistl
aad
call
add
adc
fcomps
xor
xor
xchg
push
xchg
clc
outsl
push
aad
addr16
add
imul
sbb
mov
jbe
and
xchg
out
lcall
test
fistl
xlat
shl
jae
and
jns
xorl
test
fisubrl
rcl
mov
pop
push
sbb
adcl
and
lret
xchg
icebp
cwtl
fdivrl
mov
mov
imul
insl
in
cmpsb
popf
adc
ljmp
sbb
rcl
repnz
outsb
lcall
mov
inc
and
xchg
jns
mov
pop
mov
movsb
cmpsb
xchg
adc
mov
mov
out
dec
dec
inc
outsl
loopne
adc
inc
inc
out
xchg
jb
mov
inc
dec
mov
xor
fidivl
pusha
pop
inc
in
jecxz
insb
ss
fwait
mov
or
adc
mov
cmp
lds
mov
jb
sub
sahf
jo
addr16
ljmp
mov
xchg
adc
and
shlb
push
scas
cmp
ficoml
sar
mov
nop
insl
loop
scas
iret
mov
xor
pop
add
xchg
lret
xor
inc
arpl
cmp
test
push
icebp
jecxz
sub
lods
rorb
test
pop
scas
or
in
ret
jl
lds
push
xor
sbbl
outsb
lahf
xchg
mov
inc
xchg
cwtl
mov
inc
out
cmp
rcll
shrl
sbb
ja
mov
outsl
in
les
jne
ret
sub
sarb
inc
cmp
inc
sbb
lods
inc
or
int3
inc
lea
pop
xchg
pop
or
ret
das
xchg
cmpsb
sbb
sti
aaa
out
in
fcoms
dec
stc
or
popf
hlt
js
and
and
dec
lea
adcl
test
mov
rorb
xor
sub
aad
mov
mov
xchg
adc
aad
jae
cmpsb
mov
ljmp
push
dec
xorb
jo
into
adc
rolb
rcll
ss
insl
inc
cmpsl
mov
addl
sbb
pop
rcrw
notl
data16
mov
enter
ds
das
inc
inc
add
mov
xorb
push
cmp
call
push
lret
inc
cmp
or
imul
mov
icebp
cmp
cmp
adcl
push
je
in
es
xor
xor
add
in
imul
cwtl
sbb
emms
and
or
fisttpll
je
outsb
enter
call
sub
loopne
movsl
rorb
pop
push
jp
mov
sbb
xor
in
pop
es
pop
imul
mov
and
jb
xchg
cli
lock
and
sub
mov
dec
xlat
dec
scas
sub
in
jno
or
scas
cwtl
stos
pop
fdivl
adc
or
movsb
mov
cs
xchg
cltd
push
and
es
lods
xchg
sbb
test
pop
loope
test
adc
gs
or
or
xchg
xor
cmpsl
int3
sahf
mov
loopne
cmp
aas
jbe
mov
std
rcrb
and
je
movl
ret
push
pop
or
push
dec
addr16
mov
add
ja
push
fisubrl
adc
and
shll
inc
xor
mov
imul
mov
jnp
lods
mov
repz
mov
mov
inc
shlb
mov
dec
cmc
jne
imul
xchg
adc
cwtl
lahf
cmc
push
sti
xchg
sbb
mov
outsl
repnz
push
aaa
cs
mov
lret
pmullw
sti
jge
dec
je
or
je
ss
xor
lods
mov
mov
addl
mov
sti
pop
and
in
jge
stc
inc
mov
fldcw
adc
jge
mov
lahf
pop
stos
fs
gs
incl
xchg
pop
mov
push
jne
ret
inc
xor
inc
cmpsl
out
notl
test
call
in
bound
xlat
popf
sbb
mov
cmp
lahf
jb
in
repnz
cld
clc
test
clc
and
push
or
pop
stc
pop
movsb
outsl
mov
mulb
pop
lcall
repnz
std
mov
imulb
fiaddl
inc
lods
xor
ljmp
adc
scas
lods
int
out
out
movsb
orl
and
faddp
mov
push
pop
cld
cld
cmpsb
cmpsb
rcrl
sbb
mov
mov
or
mov
cmp
pop
adc
adc
lcall
mov
cwtl
or
imul
call
inc
and
xchg
adc
xchg
pop
fadds
sub
sbb
jb
adc
in
sbb
scas
into
pop
mov
das
sbb
mov
or
and
xor
mov
or
jb
out
mov
push
mov
jb
pop
push
loop
notb
xor
mov
mov
sub
int3
adc
pushf
ss
jl
lock
aam
jl
and
dec
fwait
jbe
lret
xorb
or
cli
inc
jns
jnp
mov
ror
stc
xorb
push
jne
dec
arpl
fildl
fnsetpm(287
push
clc
pop
pop
lret
out
sbb
pop
arpl
sub
mov
mov
xchg
call
adcb
jp
call
push
or
xchg
push
test
aad
xchg
adc
xchg
cmp
jmp
mov
mov
push
aaa
add
mov
fisubrl
or
aad
gs
mov
xor
mov
mov
scas
inc
popl
jnp
mov
add
push
lcall
shl
jo
or
push
into
ds
jnp
push
inc
inc
lea
fimuls
cli
mov
lcall
pop
cmp
outsl
repnz
cltd
inc
xorl
stos
mov
nop
or
sub
push
adc
mov
fcmovnbe
add
mov
pushf
bound
test
and
flds
pop
out
andl
testb
dec
data16
int
out
fsts
or
das
aam
push
cmp
dec
fcom
cmc
test
icebp
dec
in
dec
shrl
or
stos
bnd
repz
dec
adc
movsb
in
push
pop
adcl
ds
pop
add
mov
jae
jno
pop
xor
or
mov
pop
in
hlt
pusha
mov
xchg
fimull
hlt
pop
adc
repnz
cli
imul
cmp
jmp
push
jl
aad
adc
push
xor
push
in
fmulp
out
aas
movsb
xchg
in
pop
aam
push
add
cmpsl
mov
pop
cld
fistpll
mov
and
xor
leave
ret
repz
data16
and
add
repz
lret
insl
lcall
loope
adc
pop
xor
repz
inc
cs
gs
mov
adc
das
fistps
lret
outsl
movsl
inc
mov
sub
pop
add
test
or
jmp
pushf
mov
sub
and
testb
add
dec
inc
in
das
sbb
or
cmp
mov
sub
pop
sti
test
adc
fcmovnbe
xchg
cs
lret
mov
mov
jp
and
mov
pop
fcomps
ds
popf
cltd
adc
mov
mov
bound
add
bound
mov
mov
mov
xor
mov
mov
xchg
movsb
sahf
xor
mov
push
sbb
pushf
mov
push
mov
jno
mov
xor
pop
mov
and
xor
cli
sub
mov
int3
mov
mov
sub
cmp
or
add
add
push
mov
fildl
xor
sub
popa
cs
add
sbb
stos
pop
int3
mov
sti
mov
mov
sbb
outsb
mov
mov
xchg
leave
add
movsb
push
add
mov
and
ret
test
cmp
inc
and
mov
xor
jbe
push
sbb
out
jge
imull
div
call
xor
js
out
sahf
jl
pop
add
aam
stos
push
push
xor
fldcw
and
pop
xor
cmp
movsl
test
sti
mov
divl
xor
lds
out
xor
in
inc
jb
std
cmp
or
adcl
sar
mov
insl
or
ret
out
mov
cs
sbb
inc
les
xor
scas
test
mov
icebp
scas
pop
dec
in
jae
jp
mov
mov
mov
mov
aaa
jecxz
pop
mov
xor
adc
std
jne
stos
sub
sbb
pop
arpl
insb
xor
sub
and
dec
and
or
mov
pop
mov
ret
lahf
dec
mov
bound
add
mov
add
lahf
rolb
rcrl
xchg
add
push
loop
inc
mov
or
stos
pusha
notl
jg
dec
in
mov
mov
mov
stos
adc
adc
fwait
lcall
ret
jno
lock
inc
and
add
pop
pop
mov
pop
sbb
and
sub
call
inc
or
ss
xchg
sti
inc
popa
or
scas
stc
insb
mov
pop
icebp
idivb
mov
xor
popf
adc
mov
out
mov
jne
imul
int
loop
mov
fadd
mov
sarb
movsb
in
pop
jge
pusha
xorl
pop
cmp
xchg
cmpsl
ret
mov
push
xchg
pushf
int3
adc
inc
rcl
lods
fwait
or
mov
inc
push
pop
int3
xchg
jo
mov
rol
mov
jns
repnz
xchg
or
je
mov
cmc
pop
out
leave
pop
imul
and
mov
nop
push
sbb
dec
outsl
and
mov
mov
scas
push
inc
fmul
add
cs
gs
jg
xor
leave
jmp
arpl
imul
push
iret
jecxz
xorl
in
bound
lea
aam
cmpsl
das
adc
mov
test
xchg
jecxz
imul
add
ljmp
push
dec
les
mov
les
shll
add
adc
xor
adc
in
filds
fbld
outsl
pop
jne
mov
dec
mov
mov
xor
movb
lds
xor
negl
cmp
and
sub
jns
jmp
rcll
pop
push
jmp
dec
fwait
je
pop
cmp
or
fsts
inc
pop
ljmp
push
jmp
lds
fldcw
cmp
dec
arpl
mov
dec
jnp
dec
lcall
sub
out
sahf
xor
or
inc
addr16
and
lret
mov
cli
incl
jbe
dec
hlt
jge
xor
cmpsl
std
adc
daa
ja
je
aaa
aad
insl
push
icebp
lret
enter
mov
out
clc
mov
push
addr16
leave
and
mov
jnp
push
cmp
insl
mov
jg
pop
mov
push
mov
ret
call
mov
adc
imul
mov
push
cli
enter
popa
aaa
rorb
adc
fdivl
adc
or
cmp
icebp
fcom
cwtl
mov
xorb
mov
shrl
pop
shlb
leave
aad
xchg
lea
cmp
fcompl
push
adc
mov
testl
out
data16
jg
in
cld
cli
mov
xchg
xor
movsb
sbb
cs
in
test
imul
push
ja
hlt
fwait
shrl
and
jle
aas
xchg
xchg
pusha
sub
sub
popa
or
loope
sub
test
imul
mov
jl
jo
add
jbe
sub
sahf
shl
in
adc
sarb
loopne
sbb
mov
pop
sbb
insl
mov
out
add
shrb
enter
mov
mov
mov
test
test
je
mov
mov
mov
or
mov
or
mov
std
cmpsl
lods
jmp
leave
inc
test
jge
inc
pop
xor
push
adc
sbbb
add
out
jge
pop
ret
jnp
clc
xchg
sbb
inc
jge
in
aam
push
pop
xor
mov
push
and
enter
sub
movsl
mov
in
mov
cmp
loop
mov
sbb
enter
dec
call
mov
mov
clc
mov
push
sub
aaa
dec
daa
pop
dec
loope
cmp
rclb
sbb
movsb
cwtl
pushf
push
stos
adcb
ljmp
xchg
ret
add
sbb
outsb
or
jmp
jge
lcall
int3
icebp
sbb
in
xor
orb
mov
in
push
push
add
stc
pop
adc
cmp
jae
sbb
xchg
stc
std
int3
add
fimull
movsl
cli
push
dec
mov
or
test
mov
push
movsb
shrb
imul
adc
push
mov
repz
mov
cld
jp
dec
cmp
stc
mulb
lock
fistpll
mov
push
and
mov
add
daa
das
lock
js
push
add
cmc
and
inc
pop
popa
adc
cld
and
mov
cmp
ja
hlt
cmpsb
cmp
push
cmp
dec
mov
adcb
orb
mov
sbb
test
leave
ljmp
pop
stos
sahf
add
out
repz
sti
sahf
xlat
pop
invd
dec
aaa
rclb
outsb
test
sub
pushf
sahf
sahf
mov
sbb
int3
gs
or
stos
arpl
adc
inc
movsb
or
lret
push
jbe
icebp
xchg
push
add
cmp
ret
icebp
pop
mov
call
dec
dec
lock
loop
mov
jae
in
mov
mov
cmp
dec
dec
jae
cwtl
cltd
mov
outsb
jge
les
pop
in
hlt
mov
mov
xor
stos
push
aaa
imul
es
and
in
dec
pop
in
and
mov
xchg
jns
or
adc
popa
xchg
nop
nop
dec
jb
mov
xchg
arpl
int
cltd
sbb
jno
out
lea
mov
mov
mov
lock
lahf
dec
lcall
sbb
icebp
out
mov
add
sbb
inc
or
xor
add
or
aaa
xor
cmpsb
stos
les
cli
dec
mull
loop
jmp
lods
sub
xchg
inc
dec
pusha
dec
mov
lcall
dec
ja
cmp
and
or
mov
icebp
mov
loope
sbb
movsb
das
jmp
test
push
test
mov
mov
rcrb
xchg
adc
cmc
cmp
mov
cld
leave
je
mulb
call
lock
xor
and
jecxz
iret
sub
mov
jnp
ja
inc
cmp
xor
insl
adc
aad
add
mov
mov
shr
mov
mov
mov
jp
es
std
jmp
aam
orb
jo
ljmp
and
add
mov
mov
bound
jbe
nop
sbb
xchg
mov
je
push
shlb
stos
mov
add
and
push
in
loop
push
or
out
dec
xchg
shlb
xor
dec
filds
adc
add
dec
and
mov
gs
xchg
mov
jae
lret
mov
inc
adc
ret
test
test
subl
mov
adc
icebp
and
ljmp
mov
in
lock
sub
sub
sahf
or
pop
mov
sti
cld
pop
call
and
and
mov
push
mov
xor
loope
sbb
imul
pop
dec
enter
loope
movsl
test
flds
and
arpl
add
cld
mov
cmc
cmpb
in
ficomps
adc
jmp
mov
mov
bound
ja
shl
shrb
jne
jno
inc
cmpsl
or
sub
enter
dec
js
jnp
mov
and
shll
mov
enter
fwait
mov
jbe
and
lds
pavgw
aas
lahf
leave
cmp
push
std
push
ss
push
mov
jl
fcmovu
mov
cltd
pop
jmp
or
xor
push
jecxz
cwtl
mov
out
insl
adc
xchg
sbb
arpl
jle
mov
push
jae
stos
lds
jno
and
push
add
adc
sbb
clc
or
mov
cmp
fs
out
sub
es
shlb
xchg
fsubrs
add
xchg
add
clc
stos
mov
shrb
inc
pusha
cmpl
mov
std
out
sbbb
pop
sarb
out
mov
xor
inc
daa
lock
scas
fst
cmp
shlb
movsl
int
add
cltd
shll
and
push
jmp
mov
aaa
push
imul
sbb
push
xor
and
dec
dec
shrb
mov
jg
mov
add
mov
push
outsb
addl
aad
out
ja
fstpt
lret
xor
xor
pop
and
or
xorl
cs
lea
cmpsl
jb
hlt
sbb
mov
idivl
clc
cmpl
mov
std
fcmovne
test
jno
pop
mov
clc
cld
movl
mov
sub
ljmp
shrb
jae
and
jl
inc
adc
mov
fistl
mov
pop
loope
or
repz
dec
loope
es
add
cmp
add
push
lea
xor
mov
dec
mov
outsl
mov
sbb
jno
add
sbb
notb
add
cli
iret
jmp
xchg
push
fnstsw
mov
lods
ljmp
fwait
adc
pusha
push
testb
jmp
aaa
cmpsb
shll
pop
jns
mov
in
or
int
insl
ljmp
std
mov
jp
add
jbe
push
out
mov
and
sbb
xor
ret
aam
jne
lea
jp
out
in
enter
jno
xor
mov
xchg
push
adc
jg
xorb
xor
pop
pushf
pop
lea
repnz
jns
data16
inc
je
push
dec
inc
pop
cltd
xchg
mov
roll
imul
leave
in
movsl
xor
pop
mov
mov
or
insb
mov
mov
cmp
dec
test
mov
adc
jecxz
dec
jno
adc
notl
arpl
or
nop
outsb
inc
jne
rorl
push
mov
scas
jns
lds
mov
push
stc
jg
fs
aam
out
insl
aam
in
aaa
dec
fnstenv
mov
jl
fldt
ds
adc
sbb
pop
dec
inc
dec
addr16
imul
pusha
outsl
jecxz
xor
dec
insl
and
lret
fdivl
mov
pop
pushf
add
mov
mov
or
test
scas
sub
mov
int3
int
cmp
and
out
xorl
ds
outsl
fstl
int
push
hlt
inc
xchg
jbe
sahf
pushf
cli
les
sub
lds
or
or
jl
inc
rcrb
or
js
and
loopne
insl
jae
xor
or
sub
cmp
mov
or
ss
dec
fidivrl
add
ret
adc
ror
push
inc
das
cmp
jns
sti
or
lods
dec
sub
imul
cmp
call
test
imul
jb
movsb
dec
cwtl
fisubs
jbe
cmp
lret
xchg
adc
or
bound
inc
pushf
mov
out
cmpsl
movsl
xchg
adc
movsl
aad
lahf
pop
sti
divl
sahf
mov
leave
rorl
lods
loopne
pusha
xchg
aam
inc
pop
test
shlb
test
outsl
daa
sub
imull
xchg
cli
adc
cmpsl
mov
jo
aaa
sbb
mov
sub
dec
stos
dec
int3
xchg
sub
cmpsb
mov
andb
mov
je
imul
cs
test
in
dec
push
rorb
jns
cmp
js
das
gs
xor
lahf
xor
fcmovbe
xchg
cmpsl
push
cmp
pop
dec
std
adc
jle
shll
stos
mov
popa
push
cmc
lret
cli
aad
jno
mov
cli
or
and
dec
jo
xchg
ror
aaa
pop
mov
inc
adc
call
loope
ret
cmpsb
repnz
add
sbb
jnp
pop
push
mov
fs
and
add
xchg
insb
push
cmp
jb
mov
adc
pop
xchg
inc
fs
push
mov
jge
xchg
cs
fwait
out
pop
ss
in
cli
stos
popa
decl
or
or
xchg
stos
or
add
mov
sbb
pop
xor
fwait
clc
movb
repz
push
pop
jns
fmuls
aad
in
add
cmp
scas
cmp
in
scas
insl
xor
dec
dec
pop
sbb
mov
or
pop
xchg
and
push
std
nop
sbb
sbb
adc
lds
fimuls
inc
xchg
sbb
sbb
pushf
jp
out
outsb
dec
sub
lea
inc
mov
outsl
mov
push
cmpsl
cli
xchg
scas
aam
lea
cmp
test
jbe
popf
das
lahf
in
dec
inc
addr16
pop
mull
enter
setge
cmpsl
push
sahf
mov
aad
mov
mov
insl
lods
xor
and
out
jns
subl
shll
xor
lock
jmp
fsubrs
push
popf
cwtl
stos
lock
out
jle
lds
daa
pop
dec
out
and
mov
lock
insb
das
inc
cltd
outsb
pop
push
xchg
rclb
inc
add
mov
jbe
push
ret
adc
mov
adc
mov
mov
cmp
insl
das
sbb
dec
add
push
xchg
test
push
mov
sub
add
aam
icebp
mov
stc
and
jl
jns
push
mov
fldl
fwait
jne
and
outsb
xchg
mov
stos
xchg
ret
or
dec
or
insl
dec
pop
lock
jne
xlat
inc
push
lods
pop
jp
and
in
jg
jbe
out
mov
cmp
add
sahf
test
or
fsubrp
push
iret
es
cmpsl
or
xchg
cmpsl
repnz
jecxz
insb
or
add
inc
xchg
shll
and
shrl
mov
xchg
push
pop
rcr
and
das
loope
fsts
mulb
cmpsl
and
xchg
xor
lds
cmp
aad
test
jnp
out
dec
data16
aaa
rorl
xorb
mov
xlat
push
or
sbb
lea
jno
orb
jae
pop
add
icebp
stos
imul
xor
cmp
daa
mov
stc
gs
pop
add
cmp
fistps
pop
mov
inc
mov
cwtl
bound
int
inc
rol
and
insb
out
test
enter
and
js
xchg
jns
movb
in
outsb
stc
mov
sbb
xor
notb
xor
cmpsl
lods
mov
push
xchg
in
and
int
call
imull
sbb
cli
sub
push
sbb
cmpl
adc
inc
out
into
ret
push
es
testb
icebp
idiv
sbb
movsb
sub
filds
sub
arpl
add
ljmp
mov
add
enter
jnp
push
and
xchg
mov
cld
ret
clc
es
mov
fcomps
xchg
fdivr
hlt
push
imul
jmp
jle
sbb
inc
ret
sbb
mov
lret
scas
pop
mov
cmc
xchg
xor
fwait
loopne
in
xchg
mov
jl
lock
or
daa
push
dec
imul
into
xchg
mov
push
pop
mov
pop
dec
add
mov
loopne
fxch
in
push
cli
jge
pushf
pushf
dec
xchg
adc
xor
sbbl
and
lret
mov
push
lods
sbb
sbb
add
fistl
xor
out
repnz
iret
jmp
scas
jmp
popf
or
mov
sub
mov
ljmp
icebp
sub
fimuls
orl
cmp
je
mov
mov
icebp
dec
cmp
and
lock
add
je
dec
loop
pop
adc
dec
popf
sbb
cld
test
bound
popa
js
jle
pop
insl
cmp
dec
cmp
hlt
les
out
cs
mov
lret
xchg
sbb
xlat
cmp
and
mov
loop
in
in
cmp
aam
xchg
xchg
ja
adc
out
cmp
fcmove
insb
movsb
xchg
push
test
test
adc
mov
mov
xor
nop
sti
mov
inc
je
dec
dec
mov
gs
mov
scas
inc
fildll
dec
addb
sahf
fs
and
leave
xor
push
or
inc
xor
outsb
scas
pushf
xlat
sahf
pop
xchg
mov
jno
or
xchg
xor
pop
jmp
stc
and
iret
sti
mov
outsb
jg
pop
adc
es
in
lock
xchg
xchg
std
fsts
pop
cli
lret
xor
je
pop
test
and
or
in
inc
popf
stos
scas
push
ret
addl
cmc
push
lahf
sub
fstpl
rorb
mov
aam
jnp
popa
cmpsl
inc
jae
inc
xor
inc
clc
mov
sub
es
ss
inc
iret
aas
icebp
add
ss
ficoms
fisttps
repnz
sub
in
lahf
push
pop
paddsb
cmpsl
push
dec
int
xor
pop
dec
cmpb
mov
bound
jle
je
pop
jmp
enter
fdivrs
inc
mov
jge
daa
lods
pushf
inc
push
lds
mov
xor
push
xchg
clc
sub
jno
xchg
xchg
repnz
dec
outsl
xchg
out
jae
sbb
sarl
or
cmp
hlt
pop
ffree
fsubrl
mov
cmp
test
andnps
int3
inc
cmc
fwait
dec
pop
out
fldpi
lret
stc
dec
sti
pop
fsub
xor
rorl
jl
jns
sti
fs
push
mov
in
fistl
js
xchg
std
jno
jne
mov
pause
mov
mov
inc
or
aaa
jmp
je
sbb
pop
xchg
xchg
stc
jae
or
dec
fcomi
mov
mov
cmp
sbb
push
jge
in
dec
mov
jecxz
sbb
sbb
mov
int
jae
xchg
inc
jg
sub
imul
cmp
dec
inc
rorl
xor
out
stos
or
dec
dec
jo
xchg
sub
adc
sbb
xchg
call
lret
movsb
inc
in
dec
mov
les
ret
rorb
or
jge
test
lock
ret
xchg
jge
pop
fcomps
lds
push
dec
fsubrl
fmul
cmp
xchg
jmp
out
sar
xor
imul
add
or
iret
outsl
mov
mov
or
outsl
cmpsl
cmp
repnz
incb
js
dec
test
scas
xor
xor
test
mov
mov
push
pop
icebp
dec
add
les
add
imul
outsl
push
ljmp
xor
cli
aam
add
sub
jp
inc
jo
int3
gs
je
pop
pusha
xchg
arpl
in
pop
xchg
pop
lea
ret
sbb
push
stos
pop
xlat
push
je
jo
sub
push
fsubl
push
mov
leave
into
pop
mov
xor
stc
std
or
nop
ficoml
mov
fmull
jl
adc
sub
je
andb
pushf
test
pop
mov
stc
inc
pop
pop
xchg
xchg
nop
aas
adc
and
add
pop
jg
ja
sahf
xor
xchg
ja
push
or
pushf
pop
incb
jo
mov
and
mov
adc
add
sbb
jmp
pop
sub
xor
sub
lds
arpl
jo
jae
sub
push
adc
iret
mov
mov
enter
ret
add
mov
pop
ja
cmc
in
in
mov
push
push
rcrb
imul
sti
aam
add
mov
push
jecxz
pop
jbe
stos
mov
enter
inc
mov
aam
jle
or
js
adc
jecxz
repz
adc
dec
out
pop
jmp
dec
add
inc
outsl
rol
fisubrs
les
push
add
in
pop
jbe
test
sub
dec
dec
clc
test
cmp
pop
pusha
xchg
out
jns
mov
jbe
fisubrl
test
pop
and
pop
sarb
sub
imul
shll
test
sbb
add
cwtl
inc
xchg
mov
and
push
mov
sbb
scas
or
xchg
jge
mov
cmp
and
pop
mov
les
fsts
mov
outsb
xchg
clc
das
loop
out
dec
jmp
out
outsb
adc
scas
adcb
sub
jb
mov
sub
insl
mov
xor
mov
push
in
lea
rcr
ja
push
aad
testb
aas
mov
push
jge
cmpsb
dec
pop
mov
pop
inc
movsb
push
lds
xor
lcall
rorb
adc
cmp
jp
jb
mov
jno
pop
dec
push
movsl
outsb
xchg
adc
inc
stc
push
ror
arpl
test
adc
das
jecxz
scas
jp
pop
sbb
lret
insb
loop
adc
es
stos
lcall
jae
mov
shll
icebp
and
push
daa
std
and
xor
xchg
ret
loopne
jg
jmp
or
push
lret
mov
push
add
mov
jno
les
mov
sti
xchg
push
addb
lods
pop
gs
shrl
push
cvttps2pi
mov
into
add
mov
das
xor
cmp
in
mov
fwait
lahf
inc
sbbl
xchg
adc
dec
icebp
cmc
data16
inc
out
ljmp
mov
push
mov
mov
push
adc
push
adc
push
sub
inc
mov
sub
bound
pop
push
insb
enter
pop
daa
ds
mov
adc
jmp
daa
mov
lea
mov
push
xchg
xchg
xor
out
movaps
fdivrs
out
cmp
imul
loop
pop
pusha
cmp
leave
out
jmp
lods
and
pop
or
inc
call
and
inc
xor
loopne
and
pop
pop
cmp
loope
mov
call
inc
je
das
mov
stc
xlat
fadds
sarl
inc
shlb
movsb
int
inc
dec
sbb
cmp
lods
ljmp
sti
mov
sbb
pusha
dec
pop
inc
dec
in
mov
add
mov
and
push
push
lea
shll
adc
repz
stos
outsb
mov
mov
fmul
sbb
cmpb
cmp
fs
lcall
movsb
or
stos
push
jg
das
push
push
std
xchg
insb
pop
negl
jo
shl
cld
pop
cli
in
jno
mov
fcomi
cmp
mov
jne
imul
and
movsl
inc
repnz
aas
test
gs
mov
out
out
pop
mov
mov
fstps
aam
inc
or
xchg
lds
xor
mov
orb
add
jle
ficoml
jnp
mov
pop
lret
aas
insb
or
sbb
out
daa
jl
dec
arpl
dec
mov
mov
mov
mov
loopne
stos
cmpl
icebp
xor
add
movsb
push
fadds
repz
mov
std
les
mov
sbb
push
arpl
and
cmp
sbb
aad
pop
fbld
stos
mov
sub
cmp
xor
sub
cwtl
stc
movsl
cwtl
jp
xlat
mov
jb
icebp
std
xor
dec
lcall
sbb
xchg
into
nop
orb
inc
fadds
test
push
xor
daa
enter
daa
push
call
popl
incl
add
adc
scas
mov
int
scas
push
cmpsb
push
sbb
xchg
dec
inc
mov
mov
mov
ja
jmp
test
pop
mov
loopne
out
loope
loopne
dec
sbb
fldl
cmp
in
lock
fidivs
test
pop
das
fcomps
and
jmp
ret
in
lock
pop
loopne
jmp
lds
outsl
pop
ret
inc
daa
or
sbbb
inc
fcomi
mov
lods
pop
xor
and
add
dec
mov
fmuls
icebp
lods
in
notb
cmc
stos
arpl
loopne
int3
xchg
fsubl
loopne
es
xor
or
mov
or
inc
sti
dec
sti
dec
repnz
int3
pop
in
adc
std
and
add
inc
stc
inc
or
inc
xchg
das
jmp
push
fdivs
push
lahf
cmpsb
dec
ja
push
iret
jnp
arpl
dec
or
add
lcall
push
aad
xorb
add
push
sub
arpl
jmp
ja
loopne
pop
xchg
push
cmp
push
out
jae
ret
pop
test
lock
mov
inc
lahf
and
bound
std
in
and
stos
add
mov
pop
pop
inc
enter
or
sub
pusha
and
dec
sbb
and
lahf
pop
add
fisubs
fdivrl
xor
jmp
loopne
cmp
xor
adc
sbb
adc
sahf
add
push
cmpsl
xor
fldcw
and
loopne
cmpsl
notb
dec
cmp
and
push
fcomi
add
adc
mov
inc
data16
loope
add
int3
sub
lods
jmp
loopne
add
mov
xor
pop
scas
in
lcall
les
ss
mov
shl
push
mov
sub
add
imul
cmp
ljmp
mov
jbe
add
mov
lret
aad
das
rorb
pop
mov
sub
add
dec
pop
int3
mov
lret
xor
sub
jmp
test
iret
xor
js
jns
jne
lods
es
or
xor
cmpsl
mov
ds
outsl
nop
cmp
xlat
je
and
popf
das
add
sbb
dec
pusha
pop
pop
jecxz
mov
ret
insl
xchg
bound
xchg
jno
jp
out
mov
sub
sbbb
mov
cmpsb
jno
dec
xchg
fs
jnp
xchg
add
jb
scas
add
push
sbb
xchg
jbe
sbb
and
adc
test
in
or
sbb
rcl
ret
ret
scas
sahf
leave
insb
push
gs
clc
sarl
std
rolb
sahf
mov
mov
adc
dec
ja
addr16
scas
out
add
js
es
adcb
lret
cltd
out
sub
sbb
sub
push
scas
jns
insb
lods
movb
inc
push
add
movsb
je
jmp
sahf
in
dec
pop
scas
insb
cmpsb
cld
jb
pop
sahf
adc
mov
aas
push
movsb
fdivs
mov
outsb
push
push
jle
sahf
fs
test
fdiv
cs
adc
mov
push
sub
push
mov
jl
int3
sbb
dec
jne
cmp
pop
fldt
rcr
fisubrl
addb
jmp
dec
arpl
pop
lods
dec
sar
std
adc
push
dec
cmp
mov
sub
push
sub
in
sbb
mov
test
xchg
stos
push
cmp
inc
ss
out
xchg
mov
testl
mov
ja
adc
push
mov
lret
shll
pop
xchg
das
lahf
sbb
js
test
int3
shr
movsb
or
cwtl
sbb
inc
mov
jb
xchg
push
push
imul
insl
repnz
aad
jp
adc
pusha
mov
sbb
sar
ret
mov
mov
fidivs
in
or
les
dec
push
movsl
mov
dec
cli
loope
je
shlb
icebp
leave
std
cmp
fldt
pop
mov
lcall
pop
mov
pop
mov
inc
inc
jecxz
pushf
out
enter
inc
pop
mov
cmc
adc
adc
mov
mov
outsb
jp
sub
imul
mov
mov
lds
cmpsl
jb
aam
sub
aaa
in
mov
adc
test
sub
sti
jnp
xchg
xor
jecxz
push
mov
bswap
push
je
sub
cmp
mov
bound
and
jo
sbb
repz
movsb
es
sub
xchg
cli
insb
mov
or
adcl
sub
mov
push
mov
fwait
cmp
or
mov
xchg
cmpsb
call
xor
in
out
jo
jle
aas
mov
cld
rol
xchg
and
aam
sbb
dec
jbe
jmp
leave
ja
and
mov
fisubs
filds
jmp
out
sbb
outsl
les
push
mov
dec
xchg
inc
mov
mov
test
cmp
rcll
loope
and
subl
adc
sbb
scas
daa
dec
test
jbe
sub
sbb
fisttps
inc
popf
imul
mov
pushfw
mov
jmp
cmpb
iret
pusha
jmp
scas
lcall
stos
outsl
cmp
loop
fiadds
pop
cmp
or
cld
push
lds
in
inc
adc
xchg
xor
jge
xor
ds
jl
mov
lods
addr16
jae
mov
and
xchg
fidivs
mov
xchg
fidivs
or
push
cmc
stc
mov
stos
xor
mov
lcall
xor
gs
fld
cmp
out
mov
stos
xorl
fdiv
mov
ret
cbtw
pop
fcoms
jns
ret
fs
jge
cmp
repz
xor
or
es
cmp
jbe
mov
ret
pop
and
dec
movsb
popa
fs
jno
xorl
pop
data16
push
or
jo
fnsave
push
sub
dec
or
outsl
loope
jns
pop
mov
sub
test
pop
xchg
in
push
aam
outsb
adc
pop
pop
mov
mov
mov
sub
and
jne
adc
lods
push
jbe
mov
mov
mov
xchg
bound
and
outsl
enter
sbb
loope
aaa
add
mov
xor
sbb
dec
daa
fmuls
mov
xchg
lea
inc
out
add
mov
jmp
out
lret
fadd
adc
add
insb
cwtl
iret
add
and
icebp
fcompl
xor
sahf
push
xor
in
fisubs
or
loop
dec
jl
sub
mov
insb
adc
xchg
jle
imul
repz
lock
cli
mov
dec
xor
sahf
sbb
mov
scas
dec
xchg
negb
popf
or
lods
cs
test
std
cmc
pop
cltd
and
cmpsl
and
sbb
mov
shlb
or
out
sub
je
and
jns
dec
xor
mov
pop
daa
fxch
mov
ret
jg
xor
outsl
jp
not
and
das
stos
lds
xchg
outsb
sub
add
lcall
ret
loop
mov
pop
mov
lea
xchg
push
imul
jns
cmp
push
rorb
jne
adc
ds
loopne
cmpl
movl
push
loope
enter
pop
cmp
add
and
xchg
cltd
repz
out
jae
xchg
out
sbb
rorl
xor
mov
test
mov
ss
in
sub
lcall
insb
mov
mov
lock
or
cmp
pushf
pushf
sti
sbb
in
int3
pop
pop
cmc
sti
mov
dec
lea
inc
ljmp
fwait
jl
pop
xor
cmpsl
inc
popa
dec
cmp
sbb
data16
testl
imul
jo
sbb
int
push
jmp
je
mov
jns
in
ja
push
cmp
je
xor
repz
cs
mov
les
and
lret
rol
xlat
aaa
and
loop
add
xor
or
jns
pop
dec
sahf
rolb
inc
out
lret
loop
test
cltd
out
inc
pop
sbb
push
stos
xorl
insl
sbb
fimull
sub
push
push
shl
lods
cwtl
icebp
vpsubw
inc
jg
jb
or
and
fstpt
jae
les
incb
xchg
mov
jg
mov
xor
xchg
sub
mov
dec
lock
daa
fcmovnbe
mov
add
pop
test
jp
sbb
sub
jno
add
cmpsl
fcoms
add
jl
clc
cmpl
push
or
aad
sub
push
jg
stos
popf
roll
pop
add
popa
lcall
pop
mov
fcomi
rolb
mov
push
notb
ja
cmp
mov
outsb
stos
movsl
fwait
movsl
push
inc
adc
push
jae
aam
fsubl
test
and
push
out
stc
ficoms
add
jp
sbb
xor
pop
sub
shll
dec
sbb
mov
int3
ja
mov
inc
pop
mov
orl
inc
stc
and
mov
add
sub
jecxz
clc
jmp
cli
pop
pop
lret
mov
xor
inc
addr16
call
shrl
mov
mov
and
inc
adc
add
mov
imul
xchg
cltd
adc
xor
jne
sbb
popa
jb
add
aas
insl
dec
iret
aaa
sti
push
cmp
mov
fdivs
shrl
mov
je
ret
dec
rcrl
dec
jl
add
add
mov
cmpsb
mov
mov
push
call
rcl
addr16
push
xor
loop
add
inc
insl
sbb
imul
or
cltd
rcl
lods
ljmp
lods
mov
sbb
adc
add
push
jno
rorl
les
add
and
loop
imul
adcl
jg
repnz
mov
push
sbb
fisttpl
fimuls
push
bound
cltd
add
les
xor
dec
jo
adc
pushf
inc
xchg
out
aad
stc
push
jmp
add
pop
int3
jns
dec
aas
xchg
push
xor
mov
pop
pop
inc
mov
push
aaa
xchg
xchg
stos
mov
ss
fcoms
shlb
mov
outsl
movsl
pop
incl
clc
out
stc
mov
xorb
lret
xchg
mov
lods
pusha
and
addr16
enter
inc
xor
clc
jne
pop
fidivrs
movsb
mov
cmp
mov
xor
addr16
notb
jnp
xchg
sbb
adcl
in
mov
jp
add
jno
gs
cs
test
xchg
fistpl
mov
out
inc
sub
cs
fsubrs
nop
fscale
inc
cwtl
enter
scas
cmp
aas
xchg
in
push
or
loopne
add
xchg
xor
ret
mov
popf
sbb
out
pop
lds
test
jb
mov
sub
jae
mov
push
adc
xchg
cmpsb
andps
shll
mov
cmp
scas
sbb
bound
push
cmp
jbe
test
and
xor
out
add
sbb
adc
je
lea
stc
daa
aam
ss
push
jae
push
xor
fs
out
cmp
int3
xchg
sub
inc
lds
and
and
les
push
and
inc
movb
add
xchg
cmp
jnp
push
fxam
pop
lahf
in
cmp
inc
ds
xlat
add
sub
dec
cmp
lret
push
lcall
jnp
subl
hlt
mov
mov
mov
jne
and
jnp
stos
stos
dec
pop
shlb
xchg
xchg
pop
pop
mov
aas
aaa
inc
push
jmp
repnz
and
mov
in
push
inc
jbe
mov
test
jecxz
repnz
out
add
sbb
fsubrl
xchg
int
mov
mov
shr
ret
bound
sbb
cltd
fs
push
and
inc
out
jecxz
inc
ljmp
scas
mov
dec
cmp
jae
aaa
stos
int
ret
popf
cmpsb
push
pushf
add
cltd
andb
enter
pop
mov
test
push
sub
fdivp
aam
inc
mov
pop
rolb
xchg
jo
push
out
inc
mov
in
daa
xchg
jnp
inc
inc
add
add
popl
mov
jecxz,pn
lock
outsl
push
push
leave
mov
test
dec
mov
sub
imul
fbstp
cmc
xchg
mov
xchg
mov
dec
sbb
pop
imul
sbb
popf
movsb
adc
cltd
push
and
or
mov
pop
push
dec
jbe
daa
leave
enter
and
cmp
in
sub
or
stos
or
outsb
sti
sbb
jae
mov
data16
mov
dec
mov
xchg
push
stos
inc
movsb
jo
cmpsb
push
ja
lcall
sub
and
mov
sub
xchg
insl
das
stc
jge
in
jp
xchg
imul
push
jmp
in
inc
adc
rorl
fcoml
mov
push
cli
push
xor
stc
hlt
xor
jle
sbb
lds
mov
addr16
mov
or
inc
pop
xor
ret
jl
pop
mov
stc
mov
ljmp
xlat
daa
adc
loop
or
adc
xor
push
lcall
push
fildll
mov
mov
loop
inc
ret
xchg
adc
adc
or
cs
orb
mov
pop
pop
pop
cli
nop
pop
mov
enter
outsb
jmp
xor
mov
jg
scas
push
loop
aas
add
scas
mov
jp
and
faddl
jnp
and
cmpsl
test
and
mov
dec
jae
or
sahf
mov
adc
sub
jmp
or
sub
or
or
repz
add
leave
mov
in
ja
insl
jae
out
xchg
sub
push
int3
adc
xchg
push
jo
daa
shll
dec
popf
ficoms
mov
loopne
xchg
or
popf
and
out
pop
popa
adc
scas
sbb
scas
daa
mov
fdivp
inc
rol
add
dec
ret
or
shlb
jmp
or
addr16
add
popa
cli
dec
outsb
cltd
movsl
test
test
stos
add
cmpsb
add
outsb
movsl
mov
mov
lret
xchg
subl
pushf
inc
pushf
and
sti
add
out
sbb
sub
mov
fcomps
add
add
popf
jno
or
leave
int
jbe
mov
cmp
mov
inc
dec
sysenter
pop
nop
scas
int
inc
jbe
xchg
sahf
push
jbe
fdivrs
stos
ja
sti
stos
pop
cmp
aam
cmp
in
pop
scas
fisubl
andl
add
lcall
mov
repz
inc
movsl
jmp
mov
xchg
cmp
or
pop
push
cmpsl
arpl
mov
lahf
stos
pop
sub
sti
jmp
pushf
lods
data16
cmp
subb
and
pminsw
jns
mov
in
test
and
push
push
mov
push
dec
pushl
imul
pushf
sub
mov
dec
xchg
shrb
mov
push
inc
dec
xor
jns
cmp
jmp
pop
mov
fidivrs
aas
mov
add
push
and
sahf
hlt
je
push
sub
outsb
xchg
cmp
popa
repnz
ljmp
gs
cmp
lahf
sbb
aam
mov
sahf
sbb
jle
sub
lea
mov
or
shrb
lock
test
fildl
repz
cltd
push
cmp
outsb
mov
pop
cmp
push
mov
and
mov
xchg
popa
call
cmp
and
and
inc
test
outsb
dec
and
xchg
insl
mov
and
cli
pop
dec
sub
loopne
pop
pop
mov
dec
enter
mov
pop
pop
popa
int3
push
mov
dec
ret
mov
cmc
aas
rolb
pop
jne,pn
mov
lret
aas
icebp
push
mov
dec
push
bound
paddsw
lods
push
les
lret
mov
xchg
testb
ja
rolb
cwtl
cli
js
imul
push
mov
cmp
inc
pop
lea
cmpsb
shlb
sahf
in
rcrb
and
cmpsl
lahf
push
fisttpll
jns
xchg
adc
adc
sub
push
fcmovb
mov
aam
lcall
aad
loop
adc
sbb
mov
pop
sub
stc
mov
push
sti
jo
sub
aas
xchg
mov
dec
sbbl
jmp
and
mov
shrb
xlat
add
leave
sub
or
aaa
xor
movsl
cmp
aad
outsl
nop
mov
pop
mov
js
sub
sub
push
xchg
pop
inc
pop
imul
mov
mov
daa
mov
pop
loope
and
jecxz
jl
cmp
jbe
jne
movsb
or
stos
ljmp
scas
pop
cmpsb
adc
mov
xchg
outsl
cli
dec
clc
repnz
cwtl
xor
data16
xor
outsl
or
testl
int3
fxch
sbbl
sbb
xor
mov
xlat
mov
xor
mov
insb
loop
das
xchg
lods
iret
fsub
or
push
sbb
inc
jle
stos
sub
sub
pop
cmp
cmp
daa
insb
push
or
mov
sbbl
adc
adc
adc
add
aas
enter
lock
mov
fnsave
or
pop
sub
repz
repnz
xor
dec
rcrb
jle
inc
sub
popf
mov
repz
loopne
mov
sbb
xchg
jp
sarl
lahf
loop
addr16
faddl
xchg
add
inc
dec
in
das
aam
cmc
cwtl
cmp
mov
jbe
cmp
sub
add
inc
out
nop
pop
mov
push
xchg
loope
jae
js
fyl2x
dec
idivl
cmpsl
andl
sub
adc
mov
and
fcmovnu
mov
outsb
inc
cmp
cli
mov
jno
push
scas
fnstsw
push
scas
jecxz
sub
lock
mov
aad
push
jl
ljmp
aam
mov
ja
int
test
out
sbb
jno
stos
das
jecxz
out
ds
xchg
inc
addr16
dec
push
test
lret
xchg
adc
movsl
leave
ss
mov
cwtl
in
sbb
jae
fdivl
jmp
movsl
mov
lds
out
in
pop
mov
rcrb
cmp
pop
test
das
push
mov
push
push
inc
pop
shll
and
mov
lock
mov
lods
and
pop
and
pop
mov
xor
inc
xorb
gs
stos
jnp
mov
xlat
in
push
mov
testl
out
rcll
mov
test
push
sub
lea
dec
ret
or
xchg
sbb
cmpsl
in
add
sbb
repnz
daa
cmc
pop
sbb
lds
inc
int
les
jns
gs
cltd
cmp
adc
fiaddl
hlt
lret
mov
jnp
xor
dec
movb
fldt
sbb
ljmp
lret
lret
leave
dec
inc
icebp
xor
aaa
push
mov
lods
and
push
pop
jb
mov
fmul
adc
lods
push
std
adc
repnz
and
or
pusha
jmp
into
cmp
mov
sbb
rorb
adc
cmpsb
pop
sub
cli
mov
cmp
enter
jns
jnp
add
dec
fdivrl
mov
subl
cs
mov
sbb
dec
xchg
and
movsl
mov
ret
inc
ss
cmp
push
dec
and
incl
pop
mov
xchg
cmp
into
rsqrtps
mov
sbb
mov
xchg
scas
adc
and
fimuls
les
pop
xchg
je
jecxz
mov
pop
xlat
imul
pop
jge
and
mov
lcall
sub
iret
pop
lret
aaa
stos
mov
mov
xchg
stc
cmpsb
add
out
sbb
jmp
into
mov
les
jbe
aas
xchg
ja
dec
sarl
rcr
and
jecxz
add
xor
sub
xor
adc
push
pop
in
bound
bound
ja
pop
test
cld
insb
jge
inc
pop
sub
cld
xchg
mov
rclb
cmp
aam
in
push
fwait
add
mov
lock
aad
ja
mov
mov
pop
jmp
push
push
repz
push
inc
xor
andl
dec
stc
stos
cmc
popa
addb
cmp
mov
adc
int
cmp
fldcw
mov
rcr
xchg
xlat
or
or
mov
subl
ja
sub
mov
loope
aad
xchg
push
cld
sub
pop
inc
pop
scas
jmp
ficomps
xor
popa
or
push
in
shrl
cmp
add
mov
and
orl
xchg
mov
outsb
inc
repnz
adc
shlb
jae
or
and
xchg
mov
mov
add
mov
clc
jge
popa
repnz
jb
mov
or
ret
ss
sub
xor
dec
cli
sub
inc
notl
int3
aad
xor
dec
sbb
in
insl
cmpb
sbb
xchg
cmp
add
sub
std
adcl
aam
ret
fldt
xchg
ss
cld
mov
pop
sub
pop
inc
repnz
inc
punpckldq
push
pop
dec
js
pop
pop
in
pop
js
addr16
arpl
pushf
sub
lcall
sub
les
sub
lods
or
loop
fwait
je
into
mov
sub
mov
sbb
sbb
sub
push
push
stc
jne
sub
xor
inc
icebp
mov
pop
dec
xor
lods
mov
stos
sub
in
js
dec
dec
mov
mov
ss
data16
xor
push
cld
imul
nop
in
mov
popa
sbb
pop
iret
rorl
clc
fstl
jle
or
adc
adc
mov
mov
popa
movsl
leave
xchg
adc
loopne
mov
test
lcall
inc
cmp
mov
cmp
mov
inc
and
jae
fwait
loopne
fwait
lcall
out
insb
mov
mov
add
push
test
inc
outsb
xchg
rorl
pop
pop
icebp
add
pop
mov
lea
inc
push
popl
leave
jnp
repz
inc
lahf
xchg
inc
jle
push
leave
pop
scas
and
mov
xor
adc
xchg
pop
dec
cmp
aaa
in
mov
test
movsb
or
and
out
xchg
pop
cmp
nop
stc
dec
test
add
aad
mov
xchg
sbb
sbb
test
test
push
mov
sarl
or
leave
test
sahf
leave
mov
sahf
xchg
pop
ficoms
sarb
xchg
cld
stos
imul
leave
xor
lahf
sbb
jmp
addr16
rorl
xchg
lret
xchg
xor
in
mov
jbe
lock
dec
sub
xor
test
ret
jns
xchg
push
cmp
pop
pop
mov
test
dec
dec
fs
sbb
and
das
fcmovbe
hlt
add
push
push
pusha
push
jmp
jne
sub
mov
lods
inc
dec
pop
and
lock
dec
daa
cmpsb
add
aas
fscale
mov
and
mov
mov
fstpt
add
ss
push
add
add
ret
jecxz
sbb
and
push
sarb
les
push
aaa
pusha
aas
adc
dec
or
outsb
repnz
mov
dec
dec
in
ficoml
call
sub
xlat
ljmp
pop
mov
fdivrs
test
pop
add
lret
cmpsb
sti
fucomp
jns
push
adc
outsl
hlt
and
push
daa
push
mov
cwtl
icebp
push
out
cmp
or
aas
jnp
enter
or
and
inc
mov
out
stos
sub
rorb
bswap
mov
mov
ja
lret
hlt
push
rolb
xor
aaa
sub
pop
shlb
movsl
stc
stc
lea
mov
pop
xchg
jns
xchg
add
fiaddl
rol
sarb
jb
inc
push
mov
or
inc
dec
mov
add
mov
add
push
pop
aaa
popf
neg
out
xchg
mov
iret
dec
push
dec
jmp
lahf
sub
and
repz
add
roll
pushf
scas
mov
gs
lret
xor
cli
or
sub
iret
dec
sub
sub
je
dec
mov
shlb
addb
enter
dec
jne
sbb
push
sahf
mov
adc
sarb
je
movsl
xchg
fs
popa
sub
add
loope
rorl
push
daa
sahf
and
pop
push
jecxz
xchg
and
rclb
imul
mov
iret
xchg
push
iret
push
lods
popa
jmp
shr
jmp
aam
rclb
mov
add
test
pop
add
popa
pop
jbe
mov
jae
insb
cmp
shlb
mov
jns
inc
dec
mov
hlt
stos
sbb
xor
push
rorb
xchg
push
cld
and
xlat
rcll
and
sbb
sbb
lds
imul
pop
cmc
in
sub
js
jne
mov
add
push
lcall
int3
insl
in
adc
aaa
stc
int3
push
imul
mulb
jae
test
in
js
arpl
loop
mov
jecxz
in
inc
lcall
test
test
mov
sbb
cmp
mov
es
mov
icebp
sbb
cmc
fs
jnp
or
push
mov
stc
fbstp
mov
leave
repz
mov
scas
ffree
in
lock
fwait
cmpl
and
aaa
int
mov
sti
daa
arpl
mov
outsl
dec
mov
lret
outsb
hlt
mov
iret
inc
addl
daa
pop
adc
lret
mov
pop
xor
icebp
xchg
mov
inc
inc
xchg
pop
cmpsb
xlat
sti
inc
outsb
int3
ret
jae
repz
dec
imul
jle
push
nop
daa
xchg
nop
in
dec
loope
out
adc
pop
jge
aam
jecxz
jmp
inc
lcall
mov
cwtl
mov
lods
push
rcll
xlat
aam
mov
fldt
push
mov
sbb
stc
push
lret
jns
test
dec
sbb
push
adc
mov
in
cmp
or
lret
cmp
sub
iret
shll
add
cmp
ret
or
scas
adc
pushf
lret
jbe
pop
pop
push
add
add
rcl
incl
and
inc
sub
push
mov
push
mov
ret
fs
mov
mov
inc
adc
mov
fsubrs
int
js
or
mov
cmp
mov
cltd
test
xchg
test
adc
scas
les
loope
and
sub
cli
popa
dec
mov
int
ret
jns
add
jge
sub
pushf
out
sub
sbb
fdivs
ds
fcomps
jmp
icebp
xor
cli
ja
sub
jg
mov
fistps
xchg
fidivl
cld
fcmovne
cmpsb
in
push
lea
adc
sbb
mov
push
mov
roll
in
cli
sbb
fucom
leave
mov
mov
xchg
lahf
hlt
lcall
mov
jae
jle
ja
mov
mov
ja
shlb
add
iret
dec
scas
nop
xchg
pop
fdivr
lcall
rorb
ds
outsl
jle
lret
ss
out
rcll
lods
lea
dec
add
or
push
out
jl
in
dec
adc
add
arpl
nop
leave
add
js
mov
imul
mov
pop
mov
push
outsb
cmp
pop
dec
pop
fbld
xorb
les
ja
rolb
cmp
movsb
jmp
push
mov
mov
push
ss
addr16
jbe
xchg
inc
daa
mov
mov
sbbl
notl
push
cld
inc
dec
mov
jns
or
aad
lds
xchg
cld
dec
rcrb
int3
fucomi
adc
jge
aas
xchg
nop
ret
adc
pop
cld
and
lods
in
xchg
adc
xchg
aaa
cltd
mov
jmp
mov
sub
lret
fisubl
inc
push
sub
in
adc
daa
sub
push
push
fcmovbe
cmc
mov
testb
inc
je
dec
int
jmp
xor
lret
add
decb
adc
and
adcl
xchg
loope,pn
jle
hlt
cmp
movsl
in
xor
fdivrp
sub
mov
dec
scas
xchg
loope
xchg
pusha
mov
out
aad
dec
dec
hlt
jge
mov
sbb
das
inc
mov
dec
cmp
clc
push
cltd
nop
out
xlat
cs
je
sub
mov
add
sub
cmpsb
adc
repnz
add
lahf
pop
ds
sarb
rclb
and
loopne
aaa
adc
mov
sub
mov
testb
popa
cli
popa
push
nop
mov
adc
adc
dec
fnstsw
xchg
daa
test
dec
and
xor
mov
jae
leave
je
ror
aas
enter
pusha
push
je
fcomps
mov
mov
xchg
popa
dec
aad
aad
push
fwait
inc
push
jmp
adc
rcrb
sbb
fmuls
aad
lret
dec
and
jge
mov
dec
jp
aam
int
stos
gs
xor
inc
in
rorl
call
dec
rorl
sahf
or
cmc
inc
popf
lret
jo
adc
pop
mov
or
pop
push
std
xchg
lret
and
mov
pop
fs
fistl
mov
cmpsl
add
es
mov
dec
xor
leave
or
imul
add
scas
push
push
push
std
push
lea
ret
push
orb
adc
out
sub
jle
and
mov
or
xor
pop
pop
inc
sbb
push
fisttpl
cli
repz
mov
mov
adc
cmpsl
mov
jmp
jb
aam
sbb
mov
xchg
cwtl
repz
pop
sbb
sar
dec
xchg
mull
sarb
mov
cltd
jno
pop
jg
pop
mov
es
loop
test
ss
mov
add
cmc
rolb
xchg
mov
xchg
nop
push
xchg
es
decl
fldt
je
incl
ja
or
push
push
movsb
shlb
sub
fs
inc
fldz
nop
lock
xor
mov
js
inc
dec
imul
ss
add
mov
mov
outsl
or
fldenv
mov
mov
fsubs
mov
or
jle
add
aam
mov
ljmp
ret
sub
xchg
arpl
mov
dec
add
or
adc
push
inc
mov
data16
addr16
jmp
pop
cmpsl
pop
inc
jne
stc
push
aad
adc
into
das
xchg
mov
mov
inc
mov
and
mov
rcrl
loope
imul
fcomp
or
jecxz
cmpsb
dec
jmp
std
rclb
ret
clc
mov
or
dec
in
fsubrp
xor
push
sbb
fs
dec
ja
arpl
jo
bnd
push
das
pop
lcall
pop
call
adc
cmp
lds
dec
cmc
ffree
lahf
stos
leave
mov
mov
xchg
rcll
dec
mov
orb
imul
pop
sbb
pushf
sbb
add
jecxz
ret
lock
aad
scas
xchg
in
scas
push
mov
fisttpll
nop
lcall
imul
int
movl
jae
ret
repz
push
dec
mov
add
cmp
and
fldcw
out
mov
jge
nop
push
sahf
rorl
int
std
pop
pop
jae
js
bound
mov
lret
das
jecxz
xchg
xchg
ret
or
xor
push
xchg
xor
ret
xor
push
das
std
icebp
imul
sbb
xchg
out
add
scas
ds
jns
daa
pop
pop
and
or
aaa
das
popa
adc
rorb
nop
pusha
mov
mov
rolb
movsb
iret
sbb
sbb
std
cmpsl
xchg
mov
push
and
ret
sub
das
or
pusha
pop
movsl
hlt
scas
out
or
js
stos
add
stos
cs
push
add
outsb
pop
mov
or
or
ss
cmpsb
sarb
aaa
cmp
ss
jle
js
pop
movsb
scas
test
push
inc
adc
dec
cltd
jp
mov
call
lea
and
gs
mov
sahf
std
stos
xchg
dec
movsb
mov
lret
lods
inc
pusha
hlt
clc
mov
jo
mov
mov
push
dec
jae
mov
jb
jl
dec
and
call
mov
fwait
in
rcrl
inc
cwtl
jb
cld
mov
push
gs
adc
std
inc
mov
in
cmpsl
rorl
sti
cmpsl
adc
xchg
or
cmp
sbb
shlb
add
cmp
mov
sbb
inc
pop
fidivs
mov
dec
repnz
aad
stc
push
cmp
test
pop
cmp
lahf
sbbb
xchg
cltd
iret
sbb
add
and
and
rorl
and
xchg
mov
dec
xchg
fsts
ret
mov
mov
push
ret
pop
lret
icebp
jne
mov
push
rcr
orb
xchg
into
or
jne,pn
mov
incb
dec
fildll
mov
in
mov
mov
movsl
or
daa
or
sub
cltd
lahf
cmc
sub
push
jns
mov
xor
cltd
sbb
cltd
aaa
xchg
ror
sub
sbb
sub
call
mov
sub
and
cmc
cmp
js
jg
cmpsl
stc
jno
fisttps
divl
in
scas
inc
mov
mov
push
xor
jb
xor
stc
fldt
xor
fwait
cmp
and
lea
cwtl
cmp
jecxz
fdiv
fbstp
pushf
mov
or
push
insb
pop
adc
int3
jns
push
sar
mov
test
add
add
call
fnstenv
xor
jge
ds
xorb
jbe
int3
scas
inc
shl
xchg
push
push
lds
add
mov
call
sbb
add
sbb
push
or
shlb
loope
aam
mov
pop
or
cwtl
push
push
cmpb
lahf
push
rorb
inc
cli
insl
icebp
mov
aas
nop
es
repnz
pusha
mov
ljmp
push
call
lea
scas
or
xchg
pop
pop
repz
or
loope
inc
adc
and
scas
out
rolb
insl
pop
or
inc
sahf
mov
push
mov
sbb
ja
lods
pop
cltd
dec
in
je
lret
loop
bound
insb
inc
jno
add
scas
mov
outsl
aad
push
mov
push
push
out
dec
insb
lcall
mov
andl
call
sub
mov
jg
mov
adc
sub
inc
test
or
jno
or
jb
repz
int
mov
or
inc
mov
xchg
or
icebp
push
jo
mov
inc
jns
jge
cs
cmpsl
je
cmp
inc
adcl
add
call
and
cli
loopne
testl
fiadds
sub
int
outsl
inc
dec
lock
mov
add
rolb
addr16
cs
subl
in
notl
adc
out
out
push
push
jmp
sbb
pop
sub
mov
outsl
sbb
xchg
ret
cmp
nop
sahf
stos
mov
push
ljmp
fldenv
push
setp
inc
mov
mov
fldl
cmp
clc
aaa
movsb
stc
cli
dec
cmpsb
insl
cwtl
push
imul
pop
mov
cmp
inc
shrl
sub
leave
mov
mov
jle
jb
jl
mov
lods
mov
test
push
sti
lock
mov
xchg
xchg
mov
fstp
sub
rolb
mov
data16
aad
or
pop
lods
or
in
mov
pop
clc
push
sub
push
mov
pusha
lcall
adc
inc
adc
dec
lds
inc
fldcw
leave
pushf
iret
test
and
aaa
hlt
or
mov
push
cmp
push
lock
jae
jecxz
stos
out
pop
and
mov
mov
fwait
stc
sub
pop
lds
dec
push
sub
adc
adc
cmp
add
and
into
lock
loope
cwtl
repz
loope
push
inc
or
inc
gs
mov
cs
xchg
mov
into
mov
lret
ja
mov
add
push
xchg
cmpl
daa
fbstp
push
cwtl
scas
dec
and
xchg
push
dec
aas
mov
sbb
xchg
enter
or
bnd
addr16
xor
xor
cmp
imul
cwtl
rol
arpl
lods
fs
dec
int3
iret
dec
in
xchg
xor
jb
sub
clc
addr16
pop
lods
fwait
sbb
int
xor
ds
push
stc
jo
push
cmp
sub
mov
lret
mov
mov
nop
lcall
jae
icebp
jp
mov
dec
cmp
and
fidivs
push
fwait
inc
scas
mov
mov
mov
fildl
xor
dec
xchg
pop
shrb
mov
push
daa
mov
cmc
in
sub
rorb
cmp
inc
pop
ja
push
cmpsb
sbb
lea
xchg
ds
in
and
and
shlb
cmp
cmpsl
dec
jns
sub
lock
sub
or
xchg
cmpsb
cwtl
mov
push
or
insb
mov
cmc
push
sbb
imul
imul
jmp
push
xchg
mov
stc
out
cld
sarl
or
sahf
sbb
test
mov
movsl
popa
hlt
push
fcmovnu
lret
ljmp
add
jge
dec
xchg
pop
idivl
sub
mov
hlt
jnp
mov
cmc
jmp
repnz
out
ss
xchg
or
adc
aaa
cwtl
scas
mov
lock
mov
adc
mov
dec
mov
add
mov
cmpsb
out
out
fcomps
mov
arpl
mov
and
cmp
mov
inc
gs
push
jbe
jae
pop
ja
jnp
or
daa
fs
cld
add
std
inc
rclb
scas
lret
or
scas
push
aad
leave
pop
cli
xor
out
inc
das
push
out
das
mov
das
mov
mov
fs
inc
cmp
jecxz
pop
xorb
incl
xor
sub
negl
cmp
sub
dec
cmovnp
test
inc
cld
xchg
push
sbb
add
add
test
rclb
stos
mov
dec
lds
sub
and
in
sub
push
addr16
dec
sahf
js
adc
fsubrs
cmc
lock
test
fimuls
jge
push
or
inc
ljmp
inc
loopne
test
or
aad
aaa
dec
xlat
stc
popw
pusha
mov
mov
ficoms
in
out
dec
dec
insl
or
push
mov
aad
xor
xorb
jae
dec
shll
adc
shlb
sahf
arpl
sbb
ret
cli
outsb
divb
xchg
mov
bound
cmp
dec
mov
xchg
xchg
pushf
mov
push
push
dec
ficompl
adc
xchg
xchg
push
testl
jo
in
and
xchg
push
mov
mov
jg
icebp
iret
out
mov
inc
mov
push
ret
dec
data16
push
jne
cs
call
test
mov
insb
xchg
dec
sub
mov
sbb
xchg
cmp
outsl
pop
pop
shll
and
out
imul
pop
das
outsb
fs
test
pop
cmp
ljmp
jno
cld
inc
push
or
jne
shlb
dec
movsb
push
cs
test
inc
cmp
ss
xchg
mov
jns
in
mov
js
enter
pop
push
xor
sub
or
jl
push
cmp
out
push
aad
adc
mov
xor
jns
push
lret
mov
fimull
adc
xchg
clc
cs
inc
andl
xor
add
enter
xchg
aas
faddl
int
and
lret
leave
push
in
xchg
or
push
jne
jnp
iret
outsb
imul
pusha
sbb
pop
xchg
in
aam
test
shlb
cmp
es
xor
cmp
outsb
and
xchg
push
int3
xor
sub
cmpsb
cmp
mov
test
in
in
fwait
aas
inc
addr16
ss
jns
fld
xor
mov
sub
mov
int
fdivrs
fcmovbe
or
shll
rcll
fwait
imul
xor
jp
ljmp
cmp
mov
xor
movsl
lods
imul
jbe
xchg
xchg
cld
imul
push
lea
outsb
out
push
sub
stos
push
gs
aas
lods
mov
ficompl
hlt
xor
cmp
adc
jecxz
out
jnp
int
pop
je
orl
aad
adc
mov
icebp
rclb
loop
jle
in
xchg
shrb
sbb
inc
stos
lea
shl
push
rorl
xor
scas
pop
das
inc
ds
xchg
xchg
cmp
stos
mov
pop
insl
pop
inc
fiaddl
push
sti
ficomps
sbb
push
dec
xor
or
and
daa
daa
push
pop
mov
cs
pop
jp
dec
inc
in
xchg
cwtl
leave
popa
aas
push
and
das
sub
cltd
adc
aaa
pop
jbe
mov
pop
push
lods
pop
fisubl
dec
jb
enter
sub
mov
arpl
add
in
add
sub
ret
xor
pop
jl
mov
xor
ss
push
out
jmp
dec
push
cs
adc
add
fsts
outsb
mov
mov
adc
add
pop
xor
lahf
aaa
push
sbb
mov
ljmp
ficompl
cmpsb
jecxz
cld
mov
or
out
loopne
lret
arpl
xchg
add
or
ljmp
rcr
pop
mov
fs
sub
fstl
pop
mov
lock
addl
insb
fstpt
decb
std
sub
mov
mov
cmp
cltd
mov
add
fidivrs
sbb
bound
sub
sti
dec
and
dec
jnp
sbb
sti
xchg
pop
add
adc
xchg
mov
fldenv
jo
mov
xchg
mov
xchg
call
ret
in
std
push
fbld
mov
sub
inc
mov
enter
negl
sbbb
gs
idivl
imul
in
out
pop
arpl
xchg
mov
std
sub
and
cs
fists
fisubrl
fcmovne
pop
into
pop
sub
sbbl
push
mov
add
push
mov
or
imul
fists
pop
adc
cmp
fistps
push
cmpl
lea
rol
sub
xchg
fcomps
hlt
cmp
cmpsl
inc
pushf
pushf
adc
lret
inc
xchg
popa
dec
push
sbb
sbb
into
lcall
mov
mov
mov
mov
mov
mov
mov
notl
imul
hlt
mov
xor
add
sbb
cmp
in
jmpw
xchg
fs
xor
xlat
lret
mov
push
or
dec
test
jnp
fcomps
xor
mov
pop
cmp
jl
movl
adc
push
pop
jae
lahf
stc
cld
xor
aaa
jnp
es
sub
mov
pop
fisubl
xor
pushf
aam
ljmp
cmp
cmp
push
aas
stc
pop
fsubl
jb
lahf
adc
or
js
icebp
mov
shlb
mov
ljmp
and
mov
cmpl
int
imul
in
in
in
pop
test
push
out
lcall
mov
in
lcall
les
mov
and
mov
cli
fdivrs
pop
adc
mov
add
add
xor
sar
sub
mov
cmpsl
ja
inc
sub
jp
pop
pusha
push
mov
sbb
mov
pop
jno
sbb
in
or
fiaddl
pushf
aad
sbb
sbb
dec
test
pop
mov
pop
loop
push
pop
scas
test
mov
xor
add
cltd
out
xchg
scas
shrb
sbb
iret
das
cli
jecxz
xchg
fstps
push
arpl
add
lcall
xor
scas
sarl
iret
jne
lods
in
out
dec
and
adc
loop
fiaddl
jnp
mov
adcb
dec
pop
sbb
gs
into
xchg
cmc
fwait
add
inc
mov
mov
push
xorb
jmp
push
lahf
out
add
and
add
js
or
xor
xchg
pop
adc
cwtl
inc
push
sub
test
stc
cmpsb
cmp
int
cmp
data16
ret
xchg
dec
jnp
fiaddl
or
inc
cmpl
repz
pop
fdivrs
nop
jns
mov
pop
roll
jne
fcoms
cmp
mov
dec
les
mov
xchg
and
dec
cmp
call
push
hlt
inc
xchg
jns
clc
jns
ja
lcall
adc
mov
add
int3
jno
sbb
cmc
xor
clc
or
movsl
jnp
ficoml
pop
xlat
shll
xor
push
jp
inc
shll
or
sub
dec
jmp
cltd
fs
lahf
jle
stos
fstpt
sub
or
movsb
aam
fsubp
push
icebp
xor
test
dec
ja
out
cld
sub
aad
les
jmp
jbe
add
fcmovnbe
cli
mov
cmpsl
scas
push
push
sbb
stos
hlt
lahf
add
loop
testl
jle
repz
fwait
jge
dec
cmp
mov
mov
pop
xchg
iret
jmp
out
in
into
xor
xor
add
lods
push
aam
ffree
mov
push
xor
mulb
jno
sbb
sub
mov
jecxz
push
cmp
dec
arpl
sub
push
leave
mov
insl
pop
mov
stc
pop
or
addl
inc
inc
cmp
loope
js
sbb
or
ja
jg
adc
mov
sub
lds
cmp
rolb
cwtl
gs
ret
fwait
popf
insb
into
jl
stos
shl
xor
fcoms
rorb
adc
popw
jne
inc
pop
or
jmp
jmp
push
aad
mov
loopne
in
push
loope
jg
xor
aam
sbb
mov
insb
mov
and
lret
aad
scas
enter
adc
cmp
out
das
mulb
aas
repz
test
fs
movsb
scas
in
aad
rcrb
push
shrl
push
add
out
xor
cmpsb
lcallw
ret
sbbb
loop
das
enter
scas
ret
call
push
addl
mov
mov
pop
mov
xchg
add
inc
lods
xor
jle
push
test
js
add
lock
lock
int
imul
sbb
mov
mov
ficoml
lods
into
add
shrb
push
or
mov
imul
xlat
ror
ds
ljmp
cltd
cmp
mov
xor
push
aas
cmp
sub
out
aad
pusha
dec
cmp
lock
dec
jnp
fstl
pop
and
mov
enter
aad
mov
fsubs
or
sbb
das
ret
xchg
cmp
iret
sub
popa
adc
notb
mov
adc
mov
pop
aaa
ffree
cld
out
sti
cld
filds
mov
cmc
xchg
shll
mov
and
movsl
push
adc
sbbl
sbbl
sbb
hlt
fnstenv
jo
and
imul
add
jo
mov
sub
lcall
fs
lahf
cwtl
mov
push
sub
xchg
pop
cmp
or
repnz
adc
and
mov
push
sub
mov
xor
push
pop
and
adc
dec
jo
or
xor
pop
mov
or
xchg
sub
pop
jb
iret
fldl
inc
into
and
call
hlt
pop
test
and
xlat
insl
mov
push
fwait
jl
add
psubw
xor
cld
sti
ja
pop
jb
nop
lret
lods
or
ret
and
mov
sub
ret
lods
sti
dec
mov
sbbb
movsb
enter
test
xchg
test
iret
mov
nop
pop
out
fimull
add
popa
add
insb
and
push
mov
into
pop
ret
lcall
lds
lret
or
add
ja
xor
ret
adc
or
lcall
inc
inc
js
add
cs
je
mov
sti
arpl
mov
movsb
inc
mov
out
clc
push
cmp
mov
pushf
std
nop
incl
push
insl
xchg
lahf
enter
dec
inc
and
sub
ds
dec
iret
sbbl
daa
mov
pop
lock
sub
pop
js
mov
outsl
mov
movsl
movsb
or
xchg
jnp
sub
mov
mov
inc
sbb
pop
dec
inc
test
push
sbb
jl
outsb
aad
xor
mov
or
push
dec
push
sahf
mov
sar
dec
repnz
cmp
mov
push
loopne
nop
fs
stos
fimuls
lahf
icebp
lahf
in
push
jecxz
cltd
fnstsw
fdivr
jno
xlat
inc
or
div
sbb
movl
insb
or
jns
dec
mov
xor
shrl
outsl
push
cwtl
push
movsl
inc
add
lahf
call
shll
or
arpl
pushf
aaa
jle
push
sub
sbb
add
mov
in
xor
jnp
pushf
xor
mov
add
cvtps2pd
inc
push
inc
sbb
add
sbb
mov
stos
push
jecxz
mov
inc
leave
inc
push
jge
shlb
sub
push
adc
mov
sbb
cmpsl
sub
dec
xchg
test
int
shlb
push
ljmp
bound
mov
or
ret
negl
pop
pop
je
adc
push
pushl
inc
gs
cli
dec
add
lods
repnz
sbb
push
dec
inc
aaa
pop
push
idivb
das
dec
not
mov
jp
roll
jne
sub
dec
sarb
mov
and
mov
or
pop
ljmp
xchg
dec
sbb
mov
and
data16
jns
push
pop
jno
loop
add
inc
xchg
push
stos
gs
push
ds
mov
nop
mov
jg
sub
jp
popa
mov
jb
jbe
sbb
mov
fdivr
iret
lea
loope
sub
mov
add
sub
std
inc
inc
mov
inc
sub
xchg
dec
movsb
mull
sub
imul
shll
std
and
mov
sbb
pop
into
cmp
or
xor
inc
mov
ret
jbe
lock
pop
cmp
jb
aas
inc
mov
and
iret
cmp
iret
sub
bound
es
ret
popa
insl
xlat
bound
xor
or
inc
daa
inc
fisubl
enter
add
or
clc
in
mov
adc
lcall
ds
cmc
aad
push
outsl
lds
lods
sub
jle
xchg
lock
stos
xlat
call
inc
or
jmp
out
data16
aad
push
repz
xor
pop
dec
ss
cltd
sbb
icebp
pop
pop
test
xchg
pop
cmp
testb
sub
and
fisubl
jns
fldl2e
arpl
shlb
sub
fs
in
vmovdqa
loopne
fidivl
push
nop
mov
dec
imul
xor
out
pop
jecxz
outsb
add
adcl
and
popa
and
imul
sub
mov
ds
push
lcall
repnz
xor
jp
das
pop
jns
push
mov
inc
clc
in
cmp
sub
inc
fcompl
aas
in
mov
sbbl
outsb
clc
mov
rorb
xchg
ds
mov
or
add
std
pushf
sbb
shrl
pop
mov
mov
mov
dec
cmp
jns
pop
mov
sub
cltd
stc
iret
mov
loopne
daa
mov
adc
je
sub
inc
test
jo
in
push
je
jge
inc
fiaddl
push
rcll
sbb
aas
fistps
das
dec
mov
cmp
int3
sti
push
add
push
mov
sbb
cmp
or
adc
out
jge
pop
mov
cmp
ret
scas
out
xchg
xor
xchg
pop
cmpsb
inc
dec
mov
xchg
stc
imul
or
dec
lds
stos
add
dec
test
rol
jg
jno
cld
mov
jns
sub
aam
or
lods
jne
repz
popf
jmp
mov
arpl
in
mov
mov
arpl
lahf
cld
mov
sub
mov
mov
das
xor
jp
std
iret
jmp
fsts
push
push
leave
add
jle
cmpsl
mov
mov
adc
and
popf
pop
cmp
lret
and
mov
sub
xor
jecxz
dec
dec
addr16
psllw
mov
pop
mov
mov
dec
xor
dec
pop
insl
enter
repz
sbb
mov
addl
inc
and
mov
and
push
loop
mov
push
imul
xlat
push
faddp
add
pop
bound
pushf
inc
jp
sub
jle
sub
jl
jno
sahf
insl
ljmp
fldenv
or
xor
push
fiadds
les
jecxz
jg
shrl
shrb
mov
cs
jo
adc
fwait
ret
lahf
popf
test
dec
mov
mov
push
rclb
fwait
test
orb
lahf
stos
pushf
sub
neg
xchg
in
mov
and
xchg
mov
mov
ljmp
push
ficoml
scas
in
inc
jmp
jns
int
pop
rclb
sbb
hlt
lret
push
fldenv
jne
mov
addb
xor
cmp
out
dec
xor
imul
push
cld
or
mov
cmc
sub
xchg
sbb
push
mov
add
adc
cmp
adc
lahf
push
lods
inc
mov
cltd
mov
cld
cmp
add
enter
dec
lds
inc
mov
fwait
mov
inc
xor
dec
sbb
int
pop
mov
and
popf
and
xor
mov
jne
loope
xor
inc
adc
jp
lret
cmpsb
cmp
mov
test
sbb
pusha
inc
or
adc
subb
lods
dec
fcoml
orl
test
pop
stos
ljmp
std
ljmp
pop
cli
popf
arpl
push
xor
stos
in
stos
push
mov
adc
popf
shr
dec
cmpsb
iret
mov
pop
arpl
cmp
outsl
push
repz
jno
cmp
je
fldenv
pop
sub
and
pop
xchg
push
mov
ss
in
push
jnp
add
cli
dec
test
sti
cmp
mov
inc
sub
mov
mov
lds
xchg
imul
cmp
mov
push
outsl
xchg
pop
sti
jmp
pop
inc
sbb
push
xchg
cltd
sbb
icebp
loope
dec
lret
ficoml
fdivrs
add
jmp
push
mov
popf
data16
mov
sbb
test
jp
push
add
sar
push
push
push
cwtl
mov
mov
push
push
cld
int3
push
aaa
lock
pop
adc
lret
adc
or
int3
sbb
pop
dec
mov
dec
cltd
xchg
cmp
stos
das
mov
sub
dec
ss
repz
icebp
mov
sbb
pushw
mov
std
out
pushf
jno
sbb
rcrb
flds
mov
les
jge
sub
test
into
or
dec
lret
icebp
jno
pop
getsec
push
mov
int3
jno
movsl
xchg
sbb
push
fcomps
or
fnop
enter
xor
cmp
imul
sbb
xor
pop
std
inc
decl
mov
xlat
and
dec
dec
stos
movsl
xchg
sub
sub
mov
sub
pop
xor
mov
dec
std
sub
sahf
vunpckhpd
xor
fnstenv
popa
lret
mov
andb
daa
int3
insl
data16
shlw
mov
inc
jge
repnz
xchg
or
clc
jge
mov
mov
push
cltd
mov
dec
cmovno
hlt
jle
push
or
fsubrs
push
add
xchg
dec
xchg
int3
pop
inc
jb
cmpsl
clc
dec
jge
cmpsl
mov
adc
pop
lods
push
jbe
stc
sbb
push
push
adc
imul
test
inc
stos
add
sbb
lcall
xchg
mov
test
sub
out
test
inc
aas
mov
stos
cmpsb
xchg
mov
xor
xor
movsl
jne
lods
sarb
pop
dec
xchg
sub
inc
scas
add
sub
shlb
insl
pop
sbb
jne
jae
xor
loop
pop
xchg
and
push
cli
cli
sbb
fs
fbld
push
sarb
mov
mov
cmp
inc
lcall
adc
aam
jecxz
frstor
xchg
jo
jne
adc
and
xlat
adc
addr16
lock
inc
sbb
fs
orb
outsb
mov
mov
xchg
imul
add
xlat
add
mov
sub
adc
adc
ja
lods
mov
nop
mov
aas
std
cmp
stc
iret
addr16
push
test
rclb
sahf
fdecstp
mov
sbb
shrl
fwait
jb
pop
ret
inc
clc
xchg
sti
sarb
call
fcoml
cmp
ficomps
ret
dec
sbb
push
sahf
cmpsl
push
inc
push
jb
fiaddl
or
sub
sbb
sub
mov
pop
or
pusha
dec
test
xor
repnz
lret
sarb
movsb
mov
add
leave
mov
aad
xor
addr16
shrl
adc
sub
arpl
pop
mov
rclb
cmp
dec
xor
aas
aam
adc
sub
and
fisubs
xchg
daa
sbbb
dec
dec
stos
push
adc
shl
cmovns
xchg
je
ja
stos
movlps
lock
in
fldenv
movsl
sub
test
jp
and
sbb
mov
ret
cs
mov
or
mov
imul
or
jnp
jmp
movsb
add
lea
aam
filds
or
lcall
lret
pop
jp
add
pop
leave
dec
sbb
mov
mov
ss
sub
dec
jne
mov
repnz
aad
mov
pop
mov
cmpsb
fwait
fs
jp
dec
pop
adcl
mov
shrb
stc
int3
popf
int
mov
add
scas
or
adc
insb
inc
imul
mov
mov
inc
jge
xchg
sti
xor
mov
in
aad
add
sbb
jle
or
dec
xchg
adc
jo
jle
and
add
push
sub
pushf
inc
push
cmpsb
ss
jno
sub
cmpsl
aas
adc
cmc
loop
loop
rclb
pop
dec
scas
cmp
adc
mov
adc
sbb
test
cs
push
test
mov
sub
mov
mov
lock
adc
jnp
orl
mov
xchg
scas
out
adc
call
cmc
xor
popf
mov
adc
xchg
push
movsb
xchg
mov
pop
xor
cmp
cmp
movb
stos
fnstenv
enter
dec
subl
jp
push
sub
cmp
xor
test
jbe
jl
add
lock
jno
pop
cli
mov
xor
dec
outsl
je
xor
cmpb
out
cmp
jno
mov
stos
mov
fistl
in
and
pop
cli
jno
and
and
cmp
shlb
push
jnp
ja
ljmp
pop
popa
xor
sbb
cli
cmpsl
loopne
repz
xor
je
pop
in
dec
js
idivb
imul
push
push
pop
and
cli
popf
jne
and
dec
sub
adc
push
mov
call
call
push
addr16
push
in
mov
adc
jo
aaa
add
push
cmp
loopne
push
stc
loopne
jnp
add
mov
mov
lods
mov
sub
push
mov
add
ret
xor
lahf
mov
js
int3
cmp
sub
loopne
in
dec
add
pushf
jnp
add
mov
mov
sbb
push
sub
movsb
xchg
mov
add
int
mov
hlt
out
outsb
popf
jl
stos
jb
fdivr
stos
pop
insl
sbb
fildll
mov
rcl
push
sbb
das
popl
fsubr
push
out
sbb
lods
pop
cltd
pop
fldt
sbb
jne
fxch
ljmp
bound
push
add
mov
mov
out
mov
cmpsb
and
loope,pt
and
lcall
pop
mov
xchg
ja
ret
inc
out
out
jo
pop
lock
mov
inc
lods
pop
dec
push
fdiv
mov
and
sub
jno
sbb
jecxz
arpl
mov
jne
jnp
pop
hlt
mov
nop
inc
mov
dec
mov
sub
or
repz
lahf
hlt
stos
dec
cwtl
add
jae
push
jns
pop
fwait
mov
adc
pop
lds
lahf
aad
outsl
mov
sbb
push
sub
push
data16
jo
or
adc
inc
jns
jmp
pop
gs
dec
insb
imul
xor
icebp
xchg
jnp
xor
sub
mov
test
mov
dec
sub
push
push
add
or
sub
filds
out
movsl
icebp
dec
inc
jmp
jge
ret
adc
test
mov
mov
jne
divl
xor
dec
stos
bound
jae
fildll
jge
stos
sub
lcall
lods
mov
push
outsl
out
push
adc
jb
adc
push
scas
jo
inc
mov
pop
cmp
inc
addr16
psubsw
data16
cmpsb
fcmove
lea
mov
aam
xchg
lods
sbb
push
or
into
cmp
mov
cmp
add
or
mov
or
aam
xchg
add
out
xchg
mov
cmp
jp
push
out
cltd
push
das
xor
or
inc
loope
push
mov
sarl
and
xor
mov
mov
mov
mov
mov
mov
test
push
fildll
inc
add
dec
adc
fcmovne
imul
ljmp
push
or
in
outsl
cltd
or
mov
sar
fwait
mov
xchg
mov
dec
mov
sub
cmpsl
xchg
lea
lods
repnz
icebp
arpl
daa
or
cmp
into
mov
or
mov
mov
fdivr
fiadds
add
rcrl
nop
dec
add
scas
icebp
mov
out
fcoms
pushf
sahf
scas
imul
dec
and
mov
mov
add
pop
lods
dec
adc
jecxz
sbb
out
mov
out
insl
xor
in
scas
sti
rol
add
repz
imul
inc
or
adc
mov
aas
ret
shrb
dec
lods
ss
in
in
cmpsb
rcll
out
clc
jae
es
clc
lret
fwait
xchg
insl
icebp
out
push
mov
jp
push
out
xlat
xchg
jbe
and
fbstp
in
jp
push
lock
addr16
cmp
popf
xchg
imul
mov
add
jp,pt
push
mov
add
or
insb
test
and
xchg
xor
stos
mov
fs
into
es
testb
sahf
lea
push
mov
jmp
sub
xchg
or
test
aas
iret
je
and
jb
jbe
lret
ja
inc
arpl
jg
jg
femms
pop
rolb
cmpsl
pop
jbe
xor
data16
or
test
adc
ja
adc
sbb
adc
push
xchg
mov
ds
xchg
sbb
dec
xchg
into
loope
xchg
cmp
pop
aam
jnp
and
or
rorl
push
repnz
xchg
cmpb
pop
push
xchg
xchg
testl
fsubrl
mov
popl
inc
mov
jg
mov
mov
sbb
xchg
test
push
mov
cs
testl
add
pop
sub
outsb
stos
or
dec
mov
popf
sbb
mov
mov
outsb
mov
mov
pop
jbe
ds
xor
lahf
dec
leave
lahf
mov
out
push
mov
testl
lret
xchg
ss
and
mov
push
adcb
jg
push
push
std
imul
das
inc
fimull
or
mov
fdivrs
stos
movl
fstpl
jnp
inc
jb
pop
out
mov
push
cmp
popf
nop
inc
iret
ss
cmc
sub
sahf
ljmp
or
jns
inc
push
jno
sbb
outsb
shl
test
and
sbb
nop
std
push
lcall
and
ds
gs
aaa
add
xchg
rclb
movsl
fldl
dec
dec
popf
sbb
int3
repz
pop
lcall
out
push
gs
call
ss
xchg
pushf
dec
adc
pop
es
mov
int3
pop
lock
aas
repz
fs
cmp
pushf
jae
pop
stos
lret
test
fldt
and
pop
cwtl
jge
cli
and
sti
add
cmp
sbbl
test
pop
inc
mov
fstps
notb
in
out
in
push
int3
popf
jecxz
xor
inc
dec
cld
inc
dec
jp
fiaddl
shlb
jg
inc
test
rorb
add
push
mov
xlat
fs
push
repz
repz
mov
rorl
out
rcr
mov
les
andb
movsb
and
inc
sub
das
outsb
pop
and
mov
pushf
xor
lahf
and
xchg
push
jno
xchg
jp
mov
fldln2
mov
fsubr
sub
bound
jge
aam
hlt
cmp
mov
into
xorl
xchg
repnz
sub
cmp
repz
test
lret
in
lock
scas
pop
outsb
out
mov
daa
idivb
shll
hlt
fcomp
sbb
sbb
mov
cltd
push
jg
sbb
or
pop
push
cmp
out
adc
ret
and
cmc
into
cmp
jae
push
lret
hlt
roll
bound
mov
scas
jno
fcomi
pop
gs
seta
or
repnz
and
mov
test
mov
adc
daa
outsl
and
inc
nop
ds
xchg
jmp
xor
dec
aas
mov
hlt
bound
insb
stos
sub
sub
pushf
jle
inc
test
adc
or
dec
gs
xlat
in
mov
pop
or
mov
mov
sub
fcmovu
mov
add
mov
mov
xchg
xchg
push
jg
bound
clc
lds
or
push
fstp
pop
pop
xchg
push
mov
inc
sti
adc
scas
jb
dec
jo
sbb
es
add
adc
cmp
mov
add
mov
sahf
icebp
dec
mov
fsubp
inc
xchg
mov
mov
sub
mov
jmp
rorb
out
sub
cmp
push
fisttpl
xchg
repnz
out
cmp
push
sbbl
mov
sahf
jbe
test
push
push
mov
mov
into
dec
jne
pop
fiaddl
add
movsl
insb
lret
jae
mov
jns
hlt
dec
mov
pusha
test
sub
xchg
inc
fs
pusha
je
pop
push
loope
cmc
mov
xchg
movsb
pop
lret
and
jge
and
sbb
jmp
fucomp
pop
out
int3
loopne
mov
mov
std
insl
ja
sbb
rorl
lods
xchg
mov
test
mov
daa
je
or
pop
out
ds
xchg
rcrb
adc
pushf
mov
jno
lcall
pop
sub
sub
mov
ret
mov
and
ret
mov
stos
xor
jb
stos
int
mov
movsb
push
push
cmpb
pop
and
cli
sub
loop
movsb
arpl
fidivrl
push
sbb
jl
pop
iret
sbb
ficoml
addr16
outsl
mov
popa
cmp
lret
mov
xor
pop
xchg
or
test
add
call
sub
es
and
push
xchg
nop
pop
scas
gs
mov
xchg
xchg
into
dec
hlt
lret
in
inc
ljmp
inc
xchg
outsl
popf
loop
sub
bound
dec
sahf
pop
nop
sub
push
movsl
jge
push
cmpsl
out
cmp
ja
bound
inc
fdecstp
scas
pusha
popl
shll
mov
adc
imul
mov
mov
clc
test
xor
lcall
scas
jmp
sub
adc
pop
scas
pop
inc
or
sub
or
pop
inc
call
or
inc
xchg
and
cltd
std
xchg
jbe
repz
fstpl
mov
idivb
jae
and
push
pop
js
inc
mov
pop
pop
adc
out
inc
add
cmp
xchg
mov
pop
in
xchg
dec
add
aad
pop
mov
scas
aad
call
jmp
and
out
pushf
pop
ljmp
or
ds
jp
xchg
movsl
mov
out
push
mov
pop
cmp
and
in
std
fdivl
and
xchg
inc
push
call
pop
dec
xor
xchg
xor
sbb
xor
xchg
or
lock
pop
ret
mov
div
sbb
xor
lcall
jnp
loopne
xor
mov
daa
and
dec
mov
pop
mov
adc
rcr
xlat
out
or
movsb
lods
mov
out
and
sub
int
mov
mov
inc
lea
addr16
in
ljmp
cmc
test
adc
int3
or
dec
pushf
cmp
cmp
das
in
add
aas
cwtl
xor
cmp
fistpll
aas
mov
fimull
nop
in
ret
sbb
mov
dec
pop
cmp
xor
xor
test
sarb
push
mov
stos
mov
jns
sarl
cltd
inc
loopne
lock
or
imul
cmp
call
sbb
lds
test
xchg
in
invd
and
test
mov
dec
push
sbb
sti
and
dec
xlat
clc
pop
push
cmp
xchg
mov
scas
iret
or
xor
orb
sti
and
dec
nop
jae
cltd
jns
adcl
lds
mov
push
mov
jns
push
sbb
movsb
add
insb
imull
cmp
leave
js
test
dec
stos
sub
dec
ds
repz
and
or
xchg
push
test
test
inc
rolb
push
cmp
adc
or
dec
iret
cmc
lcall
outsl
and
mov
dec
cli
or
dec
mov
int
xor
loopne
jp,pn
and
daa
mov
or
stos
mov
lahf
test
mov
jge
jnp
add
jmp
into
mov
pop
pop
sbb
push
pushf
fwait
push
imulb
cmpl
lret
and
inc
xlat
sub
out
xchg
sub
dec
xchg
ret
dec
fs
mov
inc
in
sbb
jb
test
lret
or
in
add
mov
repz
mov
mov
outsb
ss
push
jo
sub
xor
addr16
xchg
xchg
cltd
xchg
pop
adc
jb
lret
jae
xor
xchg
push
sub
push
std
inc
or
orl
sti
sub
daa
mov
loop
or
aas
mov
pop
or
and
cwtl
in
call
sbb
shrl
loope
aam
arpl
pop
and
mov
lcall
push
int3
cmc
pop
xor
xor
mov
ljmp
lods
xchg
mov
in
mov
lods
pop
push
pop
rcll
andl
jp
lods
int
bound
dec
rcr
gs
stos
xchg
inc
aaa
ss
std
sahf
popa
xor
enter
cmc
mov
ja,pn
inc
div
push
mov
push
in
int
fistpl
int
pop
or
les
push
sub
ret
fildl
and
dec
aad
orl
pop
mov
stos
insb
jbe
mov
adc
sub
and
sbb
repz
aam
xor
aaa
push
add
fists
insb
scas
jmp
pop
inc
xor
test
hlt
pop
out
sub
fs
jmp
sti
sbb
into
xor
sbb
outsl
mov
pusha
nop
sub
fidivrs
lds
in
sbb
jae
sub
ret
lret
sbb
iret
bound
test
repz
cmp
loopne
pop
xor
out
dec
in
outsb
mov
xchg
in
inc
lahf
adc
scas
sub
fadds
int
cmpsb
mov
lods
hlt
xchg
pop
xor
push
in
nop
stos
jle
or
arpl
pop
scas
sbb
ret
enter
dec
inc
dec
rorb
pop
daa
inc
pop
push
dec
ljmp
fnstenv
data16
loop
mov
dec
mov
test
repz
lods
mov
mov
xor
pop
push
stc
sub
xchg
loope
jbe
fstl
mov
test
dec
or
dec
rcrb
pop
pop
pop
inc
push
and
xlat
lahf
mov
dec
loop
loope
ja
lret
push
gs
mov
mov
into
hlt
xor
add
es
lea
dec
les
icebp
jb
dec
push
stc
outsl
or
inc
and
and
repnz
xchg
es
repnz
add
jg
and
push
xchg
lods
outsl
jle
xor
shlb
bound
sbb
add
xchg
enter
sti
int3
or
movsl
mov
out
aas
mov
jns
jle
push
mov
repnz
jno
xor
jno
fsubrs
lret
mov
ja
ret
lea
inc
cmp
or
inc
xlat
jno
mov
leave
xor
mov
and
rolb
pmulhuw
jbe
lds
out
xor
mov
and
test
sbb
or
adc
pushf
stos
and
mov
push
pop
test
xorb
adc
hlt
add
loope
add
pop
adc
jg
cmp
cmpsb
rclb
das
dec
fcoms
dec
lds
cmp
loope
xchg
or
test
push
repz
leave
sbb
push
out
inc
pop
inc
bound
mov
adc
sub
xchg
ret
in
mov
pop
ret
inc
push
push
cs
push
sub
or
lret
pop
adc
lds
sarl
add
iret
mov
gs
add
add
dec
movsl
bnd
mov
out
sbb
push
jge
in
test
mov
jge
mov
test
push
fstps
xor
fisttpl
add
inc
test
incl
aas
cmp
imul
mov
pop
leave
dec
icebp
and
and
dec
lcall
ja
add
jmp
ljmp
lds
repz
and
xchg
xlat
arpl
inc
mov
hlt
gs
adc
add
iret
shlb
cli
cld
lahf
push
fucomp
pop
inc
cmp
fmuls
mov
std
or
xchg
popf
jnp
jae
rcll
rorl
cmpsl
cmp
popa
into
mov
push
ja
lret
dec
lock
mov
int
push
jle
andb
cli
xchg
mov
cli
push
clc
dec
aad
push
iret
push
aaa
int3
mov
push
mov
outsb
out
xchg
int3
pop
xorl
or
stc
dec
andl
mov
pop
pop
mov
icebp
mov
push
xor
mov
bound
je
test
loopne
sbb
shrb
cmp
int
clc
fcoms
das
ret
iret
fisubrl
insl
sub
xor
orb
lds
mov
mov
loope
xor
sbb
test
mov
dec
mov
sbb
mov
jmp
mov
fsubs
add
ds
fsubs
and
and
rorl
lret
or
cmp
in
jbe
decb
jmp
cs
into
mov
inc
nop
rcrb
xor
jle
popa
fidivrl
enter
jg
sub
inc
inc
es
pop
or
pop
scas
xor
pop
inc
test
pop
mov
mov
ja
adc
sbb
aad
rcrl
popa
ret
enter
test
pop
in
sub
or
and
pop
push
sti
cld
and
data16
ret
int3
mov
and
into
sarb
add
pop
cmc
addl
loopne
adc
mov
dec
adc
jmp
dec
in
or
dec
dec
push
popf
repnz
rcr
sub
ret
sbb
dec
fcmovbe
xor
dec
and
aaa
bound
mov
fstp
cmpsb
cmp
sbb
ret
mov
fstpt
inc
scas
ret
mov
stos
adc
xor
shll
jnp
je
pop
xchg
fldenv
lret
xchg
in
dec
and
push
int
or
inc
mov
add
mov
jnp
lods
mov
mov
pop
jecxz
adc
repz
andl
mov
dec
sbb
fs
push
ss
sub
inc
inc
addr16
popa
add
cmp
testb
or
xchg
das
insl
jle
cmpsb
xchg
rorl
ret
pop
movsl
xor
popa
fs
mov
pop
ret
or
insb
sub
fisttps
xor
int
jno
in
pop
or
mov
orl
dec
cld
hlt
sub
movsb
push
insl
aaa
in
xor
cmp
push
or
xor
mov
test
xchg
adc
inc
jge
and
repz
add
adc
mov
imul
in
pusha
and
stos
sbb
adc
cmp
xchg
pushf
test
sub
pop
push
adc
and
add
cmc
mov
or
inc
je
push
nop
add
inc
xlat
pop
or
jl
xlat
cltd
cld
shlb
xchg
leave
in
cwtl
xchg
callw
cmp
add
stos
xor
xchg
jns
mov
loope
push
pusha
cmpsl
fs
cwtl
ljmp
xchg
jg
std
mov
insl
stc
out
sub
sub
mov
sbb
lea
loop
in
in
mov
hlt
push
inc
movsl
jl
xchg
clc
jne
sbb
nop
push
pop
scas
mov
adc
jne
fstps
outsb
lock
adc
xor
mov
push
je
mov
cli
adc
and
xchg
push
popf
mov
adc
inc
sub
xor
xor
mov
jp
jecxz
jl
add
xchg
cld
cld
dec
in
add
xor
js
pop
and
negb
dec
cwtl
nop
lret
push
xor
aas
pop
or
jg
add
stos
xor
or
mov
sbb
jnp
jp
sti
xor
dec
mov
mov
mov
xlat
mov
inc
pop
out
and
loop
pop
movsb
movsl
fistpl
adc
ja
sti
xchg
mov
cli
fisubrs
adc
pushf
insb
icebp
or
in
dec
lods
jg
pop
sub
sub
fmuls
lods
mov
imul
xchg
ss
inc
pop
inc
xchg
rcr
xchg
sbb
pop
and
dec
xor
and
ret
add
xor
aas
out
and
xor
inc
xchg
pusha
dec
inc
int3
pop
test
mov
pop
mov
fildll
bound
pop
or
mov
and
data16
push
mov
xchg
inc
xor
out
movsb
incl
mov
fldcw
lahf
jnp
jne
mov
hlt
inc
sbb
lahf
xor
shr
icebp
clc
adc
lea
fcompl
xchg
xchg
cltd
mov
sbb
xchg
enter
adc
add
loope
fdivs
sbb
lock
dec
pop
sti
aam
xchg
cmovae
mov
enter
xchg
pushf
pop
out
push
xchg
jecxz
test
loope
xchg
por
pop
jp
call
push
and
ja
jno
popf
stos
jge
add
mov
mull
mov
cmp
shrl
stc
icebp
push
add
mov
or
rolb
mov
mov
dec
pop
popf
enter
sarb
mov
xchg
mov
sbb
es
iret
loope
fs
xchg
testl
jle
movsb
ficompl
ss
cmp
aad
cltd
in
rolb
xchg
xchg
push
jecxz
loope
jbe
mov
rorl
out
dec
lahf
fnsave
jecxz
cmpsb
jb
iret
stc
or
call
dec
shr
repnz
in
mov
add
fistps
pushf
fucomp
cwtl
popa
push
cwtl
cmp
hlt
fs
xchg
mov
mov
inc
mov
sbbl
rorl
push
rolb
sahf
out
push
hlt
sbbb
cmp
sub
scas
je
sarb
rol
dec
fcmovnu
cmp
ljmp
dec
loope
out
push
mov
adc
sbb
cmpsl
cmpsb
push
or
stos
rol
mov
pusha
in
ja
inc
cmp
cmp
dec
pop
mov
inc
pop
cmpsl
push
test
sti
mov
pop
jp
mov
push
pop
les
adc
stos
jne
mov
cmp
cmp
push
push
pop
mov
or
jmp
mov
xor
and
outsl
mov
in
adc
jge
ds
lret
js
push
cs
lea
jae
jb
insl
dec
pop
add
jb
push
jae
mov
inc
jns
jo
out
xor
popf
sub
sub
and
std
sbbl
jle
push
rcll
popa
sub
jae
dec
arpl
push
movsl
repnz
cmpsb
sahf
or
sub
iret
mov
sub
xor
cwtl
scas
inc
test
out
mov
push
loopne
pusha
mov
cmp
push
inc
lcall
rcl
xor
jbe
stos
mov
add
into
dec
cld
cmpsb
sbb
cmp
xchg
add
or
dec
loop
xchg
sub
jle
and
mov
ljmp
adc
push
aaa
outsl
xor
dec
testl
int3
jne
inc
inc
leave
jb
in
daa
cmp
ret
jp
jne
aas
add
push
pushf
imul
and
js
popa
mov
mov
xchg
cmp
lret
lea
pop
jmp
pop
push
out
jmp
xchg
pop
xchg
leave
popa
mov
mov
cmpb
dec
lods
and
shlb
mov
add
stos
mov
mov
cmp
inc
mov
push
lods
ljmp
test
mov
inc
out
mov
test
das
loopne
inc
fcomps
mov
add
and
dec
in
mov
cwtl
inc
loopne
adc
iret
sub
mov
jmp
mov
orb
cmp
and
sbb
jne
adc
inc
push
inc
or
sub
pop
mov
jge
enter
fwait
mov
divl
test
popa
pop
sub
sub
xor
mull
jmp
xchg
imul
add
inc
outsb
cmp
adc
iret
xchg
cwtl
and
mov
mov
xchg
mov
cwtl
movsl
sub
push
dec
enter
push
cmp
movl
aas
jl,pt
in
leave
sub
les
adc
rcrl
loope
loopne
pop
fmull
and
jg
lods
les
loope
inc
in
jge
or
int
cld
inc
jg
mov
and
cli
push
sti
bound
jae
inc
mov
lods
fnstenv
pop
fisttpll
mov
xor
jmp
cmp
addr16
cltd
inc
dec
lds
repz
xor
cmp
sbb
jecxz
test
aas
aas
mov
mov
imul
das
daa
iret
mov
in
sub
mov
mov
xchg
sti
push
lea
and
cmp
in
xor
stos
and
cmpsb
jo
push
inc
inc
lcall
pop
nop
mov
dec
xchg
cmp
test
mov
jne
sbb
push
cli
pop
mov
fstps
cmp
shrb
aad
add
push
mov
adc
shll
not
int
iret
in
xchg
pop
cmpsb
mov
popa
dec
dec
mov
xchg
mov
push
ljmp
popa
rcrl
and
out
pusha
and
imul
arpl
and
imul
mov
push
fucom
lret
sbb
fs
addr16
jb
sbb
mov
in
das
jne
xchg
pop
inc
cmp
inc
push
cmp
cmpl
pop
ret
push
imul
sbb
adc
add
imul
push
push
imul
inc
roll
aad
cmp
xorl
push
xchg
sbb
xchg
adc
lcall
test
das
dec
and
jp
push
jle
scas
fisttpl
mov
rcll
xchg
test
sbb
jle
and
lcall
xlat
jmp
sbb
and
in
adcl
sub
jl
shlb
std
xchg
pop
jno
mov
stos
rolb
dec
int
in
or
push
int3
lods
mov
adc
xchg
in
xor
fcomip
dec
std
outsl
out
lret
pop
adc
inc
mov
add
mov
push
scas
mov
adcl
inc
cmpsb
mov
icebp
sbb
lods
cmp
arpl
inc
movnti
mov
lods
fmulp
add
mov
adc
stos
push
mov
popf
ja
pop
mov
sub
xor
adc
test
es
lods
mov
loope
sbb
cli
stos
loopne
cmc
pop
mov
fidivl
push
mov
popa
rcrb
dec
jnp
inc
sbb
mov
and
ret
rcrb
push
fstpt
xchg
imul
pop
xchg
mov
fisubrl
ret
dec
xchg
inc
sub
lds
push
into
stos
pushf
in
incb
pop
out
lds
stos
dec
mov
clc
or
inc
xorl
outsl
inc
insl
xor
mov
popf
jns
pusha
xor
test
mov
sbb
dec
insb
sbb
in
imul
out
stos
jl
mov
out
cmpsb
outsl
enter
adc
xchg
imul
inc
adcb
lods
push
inc
daa
int
pop
stos
fsubr
push
leave
clc
stos
push
mov
sbb
sub
lods
cld
dec
sub
mov
dec
adc
std
add
mov
xchg
pop
test
adc
daa
or
mov
xor
xor
sub
xorl
add
outsl
lahf
or
cwtl
faddl
mov
xor
cmc
xchg
jg
fcoms
pop
iret
mov
fstpl
ret
mov
push
sahf
push
inc
out
mov
lods
ret
xlat
and
mov
sub
xor
jg
xor
mov
sub
sub
mov
iret
or
adc
mov
xor
icebp
lahf
or
mov
jge
sbbb
ret
stos
cld
sti
int
sub
cmpsl
out
push
cmpl
decl
popf
stos
ja
mov
fcmovne
sbb
add
test
movsl
dec
dec
inc
adc
xchg
xchg
movsl
cwtl
cmp
add
testl
push
ds
mov
sbb
test
and
mov
adc
es
cmc
popl
mov
xchg
movsl
test
jg
mov
mov
in
jo
xor
imul
xlat
rorl
loope
enter
stos
fistps
test
adc
fidivrl
mov
or
pop
fs
xor
loop
mov
rolb
xor
mov
ss
push
imul
outsl
sub
sbb
into
inc
sbb
sub
test
pusha
and
and
xor
sti
mov
mov
mov
xchg
addb
mov
into
movsb
xchg
aaa
lea
jns
adc
mov
aam
and
and
cwtl
lea
push
dec
jp
sub
faddl
dec
lret
add
arpl
xchg
popa
test
mov
mov
mov
mov
xor
rolb
adc
cld
repz
incb
inc
pop
sti
add
sahf
data16
mov
and
sub
js
xchg
jb
mov
lcall
push
xor
scas
roll
adc
fmull
jns
and
mull
fiadds
pop
in
sbbl
fmul
dec
push
jbe
xor
sbb
test
test
jg
movsl
mov
xorl
jl
imul
or
add
pop
or
sti
aad
push
sbb
fwait
dec
or
mov
adcb
iret
cmp
fdivl
mov
icebp
out
aaa
mov
push
pusha
loop
and
cmp
sub
inc
jne
and
lcall
add
inc
xchg
or
fildl
add
jge
sub
cmpsl
xor
mov
and
fdivrs
and
pop
pop
repnz
lods
or
mov
mov
inc
jg
jl
xor
test
xchg
adc
sbb
adc
push
je
mov
es
and
mov
into
mov
jo
leave
mov
inc
adc
mov
outsb
fwait
insb
sub
inc
fxsave
es
aam
js
cmovns
jne
inc
es
int3
cs
cli
jecxz
sub
jne
and
and
sub
test
pushf
fistl
mov
dec
adc
mov
cmp
xor
popf
rcrl
and
das
adc
jl
imul
cmp
xchg
push
int
mov
adc
push
mov
call
ds
xor
fwait
adc
inc
add
jno
jae
enter
or
fisttps
les
sub
mov
push
jl
and
out
or
inc
mov
mov
ret
ror
mov
pop
xor
lcall
imul
dec
jl
jp
mov
sbb
adc
movaps
lods
cld
push
xlat
das
and
in
sub
in
fcomi
movsl
ja
sbb
mov
roll
xchg
dec
cltd
mov
inc
xchg
sti
adc
xchg
movsl
outsl
sub
sbb
mov
or
outsb
arpl
lods
push
stos
aad
sbb
cwtl
lods
outsl
sbb
mov
mov
or
push
mov
pop
insb
and
cmp
jae
jbe
enter
sarb
sbb
mov
and
in
inc
lods
and
cld
mov
sub
movsb
bound
pop
test
or
dec
pop
lahf
scas
mov
ror
jg
in
fcoml
xor
add
mov
lret
add
jo
pop
sbb
cmp
pop
xchg
mov
orl
jno
hlt
adc
adc
out
cmp
das
sbb
in
push
pop
lret
addr16
pusha
jle
push
mov
adc
dec
sbb
mov
or
in
mov
enter
sahf
xor
dec
xor
out
repnz
mov
inc
gs
lret
loop
movsb
lea
push
sub
lret
fdivl
aaa
or
insl
daa
sahf
rcrl
scas
and
push
movsl
push
cli
mov
xchg
mov
jns
fs
mov
shl
dec
xor
jmp
ja
stc
insb
scas
xor
daa
mov
fsub
out
leave
test
jns
lret
xlat
xor
sbb
insb
int
dec
sub
push
cli
dec
adc
pop
cmp
mov
mov
push
testl
jnp
pop
fnstsw
mov
adcb
cs
and
fisttpl
lret
std
pop
or
in
cmp
das
xlat
jbe
jnp
dec
mov
dec
push
push
lcall
push
adc
xchg
mov
push
pop
outsb
mov
clc
jo
imul
rclb
and
test
jbe
cmp
push
jg
mov
call
in
sbb
orb
pop
jmp
dec
dec
jno
je
xor
xchg
movl
mov
in
mov
pop
and
adc
cmp
jle
test
lock
or
pop
adc
mov
into
lds
jmp
out
ja
mov
jbe
xchg
in
dec
rcll
inc
lock
fcos
aas
push
arpl
std
inc
ljmp
xor
pop
js
cs
sbb
and
push
ret
cmpsb
cltd
scas
stc
int
mov
shr
mov
xor
rclb
lods
lods
pop
enter
jns
lods
sub
or
daa
arpl
out
pop
and
or
movsl
and
add
pop
sbb
addr16
cmp
faddl
jnp
jp
mov
lock
mov
mov
push
sbb
aaa
xor
add
popa
or
int3
jb
iret
or
sbb
mov
or
jns
or
lds
outsl
pop
test
jmp
leave
ja
faddl
iret
fdiv
mov
scas
and
push
imul
or
jl
mov
aad
insl
loopne
jnp
ror
jecxz
loopne
sbb
jp
jg
inc
sbb
aaa
jns
aaa
xchg
mov
mov
mov
dec
les
pop
fdivp
ret
les
aaa
mov
xor
mov
ret
jecxz
test
push
enter
pop
and
enter
fnstenv
aaa
sbb
leave
xor
mov
push
rorb
mov
and
sub
sbb
incb
lock
push
and
call
loope
add
mov
pop
repnz
rorl
gs
adc
lock
or
cmpsb
inc
sbb
inc
fcmovbe
lods
add
sbbl
sub
repnz
ficomps
and
int3
push
mov
jns
mov
push
fdivs
insb
fcoms
lea
outsb
pop
std
sti
faddl
jae
jae
and
sbb
fsubrl
jmp
lahf
push
jl
lods
repz
outsb
or
ljmp
lods
pop
adc
sbb
mov
inc
dec
cli
dec
je
aad
mov
sbb
lock
int3
mov
je
ret
or
loope
sbb
in
sbb
enter
das
or
pop
lods
shl
cmpsb
clc
fwait
hlt
into
sbb
cwtl
jl
add
push
cmp
add
pop
xor
cmp
aaa
bound
xor
xchg
sub
jbe
cmp
cmp
xor
cmp
push
mov
cmp
cltd
dec
fnstsw
inc
mov
jo
cwtl
cli
sahf
mov
push
aaa
cwtl
mov
scas
push
aas
cld
sub
xchg
jnp
xchg
sub
push
sbb
mov
in
insb
loop
lahf
enter
jb
and
arpl
dec
fstl
aas
sub
mov
push
call
add
addb
jbe
cmp
dec
ds
xchg
les
js
sub
mov
and
jmp
icebp
xchg
test
pop
ret
daa
fistps
inc
pop
imul
imul
scas
jecxz
call
xchg
jmp
push
mov
std
adc
pop
ret
loope
add
outsl
cmp
ss
mov
out
pop
dec
fldt
jae
jg
jnp
cltd
lea
sub
pop
call
test
frstor
adc
sbb
jns
lret
aam
out
ficomps
shlb
xchg
inc
call
adc
fadd
out
sub
shlb
mov
xchg
push
lods
or
sbb
sbb
shll
push
mov
xchg
pop
dec
xchg
sti
rcll
xlat
cmp
test
pop
lock
and
cld
sti
insl
nop
inc
test
repz
dec
adc
adc
cmc
xor
mov
fwait
pop
add
fs
mov
imul
jmp
daa
pop
pop
fucomip
ret
sbb
shll
ds
mov
cmp
push
jns
out
pop
js
dec
icebp
push
jge
ja
sbb
ret
sub
int3
mov
add
je
push
movsl
cli
push
jp
cltd
xchg
test
adc
sub
testb
cmp
popw
lret
inc
jbe
xor
mov
pop
jb
pushw
fisttps
cwtl
pop
mov
fstps
mov
arpl
js
lahf
inc
xor
mov
imul
inc
mov
push
repz
out
insb
mov
arpl
adc
jns
mov
mov
and
scas
fcmovne
fildll
sbb
hlt
popa
cmp
leave
es
pushf
cs
push
js
lods
add
or
shrb
lahf
mov
push
std
or
pop
sbb
inc
in
push
push
stos
out
adc
sbb
add
mov
or
rolb
test
push
sbbb
negl
insb
out
push
repz
cmpl
jecxz
int3
test
push
sbb
in
into
fimull
add
fdivl
out
adc
pop
cmp
or
andb
xor
pop
leave
inc
addr16
mov
push
or
xor
in
pop
inc
out
cmp
fcmovnb
mov
mov
std
push
inc
lahf
xor
pop
xor
inc
imul
xchg
xchg
je
mov
push
in
jae
movsb
add
and
jae
ret
jle
arpl
pushf
push
out
scas
cmp
jg
jae
fidivrs
mov
lea
aam
or
inc
xchg
lds
icebp
fisttps
mov
pushf
test
cmp
lea
mov
mov
lahf
ret
sub
push
cmp
mov
into
ja
lods
adc
mov
mov
sub
arpl
jp
jno
jo
shll
xor
and
popf
into
mov
mov
jecxz
test
jmp
cmp
int3
mov
inc
dec
push
push
mov
loopne
gs
icebp
lret
and
dec
scas
enter
mov
dec
cmc
addl
sub
aas
sbb
mov
in
js
movsb
and
mov
stos
xchg
insl
movsb
outsb
insl
adc
fwait
push
xchg
daa
test
adc
xor
push
jmp
dec
rcrl
pop
mov
fstpt
xor
leave
mov
xchg
ja
inc
ds
cltd
mov
adcl
dec
or
push
loop
mov
imul
repnz
shll
inc
jl
je
pop
les
inc
pop
out
mov
xchg
mov
add
push
cmp
lcall
xchg
lods
ss
int
cs
cmp
out
or
test
popa
pop
add
into
sbb
outsb
inc
ljmp
aad
cmp
shrb
test
jbe
mov
sbbl
mov
es
xor
incb
repz
sbb
outsb
std
or
dec
push
inc
movsb
mov
jge
jae
fs
pop
sbb
fimull
pop
cli
les
cmp
test
sbb
dec
pop
lret
mov
push
mov
int3
stc
fstps
sbb
push
iret
push
aaa
cli
bound
hlt
push
enter
addl
or
in
dec
mov
loope
mov
call
adc
sub
add
push
imul
ds
mov
inc
bswap
push
push
mov
rorl
push
ja
shrl
dec
xor
dec
andb
cmpb
lea
and
pop
into
sarl
mov
sbb
sbb
scas
xor
and
push
int
cmp
mov
out
aas
sti
shll
shll
mov
cmp
cmp
imul
inc
add
shll
imul
add
rcll
adc
dec
fwait
fs
in
mov
sbb
push
xor
mov
inc
mov
cmpsl
sub
ret
jg
pop
adc
ljmp
inc
loop
fisubs
jg
xchg
ret
or
lret
pusha
sub
cwtl
pop
imul
enter
movsl
ret
adc
xchg
sub
add
sbb
mov
mull
arpl
mov
cmp
ljmp
lock
inc
test
cli
shll
mov
mov
mov
shrl
cmp
addr16
inc
mov
movsb
les
out
mov
sub
and
sar
lret
xorl
sbb
or
dec
mov
out
dec
jp
popf
stos
lods
inc
and
call
das
cmp
mov
cmp
stos
sahf
fidivl
mov
negb
icebp
fwait
push
push
stc
jecxz
in
push
mov
enter
mov
or
enter
cmc
add
mov
fstpl
loop
fs
test
leave
test
lods
or
lret
push
aas
mov
in
mov
push
mov
das
inc
mov
inc
pop
sbb
mov
icebp
mov
std
lds
fisttpl
cmp
divl
sbb
loope
in
cmpl
add
ficomps
ret
pop
test
dec
out
test
addr16
and
inc
inc
cmp
sbb
mov
xor
div
call
lods
fwait
or
int
and
stos
inc
jmp
test
jo
stos
mov
es
sub
nop
mov
push
add
jns
rorl
mov
add
cmp
movsb
stc
cmc
repz
ds
xor
mov
std
add
xchg
xchg
cmp
and
mov
fsubrl
movsb
out
and
sub
int
or
push
arpl
cmpsl
pop
aas
sub
inc
shlb
das
mov
fldcw
shl
dec
in
enter
cli
mov
xchg
sahf
clc
je
sbb
mov
popa
fdivrp
push
mov
movsb
and
in
lret
add
push
out
and
lahf
pop
xchg
repz
jmp
mov
xchg
mov
add
rcll
push
hlt
sbb
test
mov
divl
mov
popa
and
push
xor
mov
jo
lahf
lret
mov
pop
out
fnop
loop
push
shll
mov
fldt
stos
imul
xchg
fucom
fstpl
pop
cmp
pop
adc
jb
stos
or
mov
add
xor
stc
js
mov
mov
lods
jo
sahf
xchg
daa
and
insb
fnstsw
hlt
cmc
int3
jp
dec
call
ss
sarb
push
push
fwait
pop
daa
inc
clc
in
dec
stos
jae
mov
jp
dec
lds
loopne
cmp
mul
out
test
inc
icebp
jb
adc
mov
or
mov
or
ja
pop
mov
dec
pop
pop
sub
cmp
test
and
leave
rol
repnz
arpl
mov
cmp
pop
adc
hlt
adcl
aam
push
dec
cs
xchg
xchg
pop
dec
std
dec
mov
or
data16
jne
nop
les
in
inc
jge
aas
push
mov
mov
cmp
cs
test
jp
jne
push
leave
cwtl
das
mov
inc
mov
inc
outsb
cmpsb
frstor
jmp
jns
inc
loope
jg
popa
movsl
xor
data16
pop
push
mov
loope
cli
xor
js
enter
dec
lret
pop
mov
xor
loope
mov
and
std
pop
xor
movsb
loop
mov
orl
add
add
stc
xor
out
lock
arpl
bnd
ljmp
sub
mov
out
sahf
aas
or
or
sbb
aaa
sub
rclb
aam
xchg
or
jge
dec
in
dec
dec
aas
jg,pn
pop
sub
out
jmp
mov
mov
add
aam
mov
fwait
es
or
xor
adc
js
cmp
test
cli
pop
jp
cld
cmc
mov
sub
lret
xor
cwtl
ds
mov
xor
dec
ss
add
xchg
lret
push
jno
mov
int3
loopne
or
dec
cld
and
push
gs
or
push
mov
clc
int3
cmp
lcall
mov
or
pop
dec
dec
inc
ljmp
inc
stc
je
dec
js
out
shll
push
xor
push
pop
hlt
popa
cld
int
pop
lahf
popa
or
push
cmpsb
xchg
xchg
sbb
fbld
inc
leave
lret
imul
push
xor
das
fs
dec
push
insl
or
adc
fs
jnp
push
mov
mov
dec
fisubl
dec
sbb
std
std
xor
inc
mov
push
aam
loopne
ss
pop
xor
ret
dec
loope
mov
jnp
and
xor
loopne
fdivl
xor
mov
mov
fildl
outsl
push
cmp
lahf
sar
stc
cmp
jb
mov
aam
and
lods
faddl
xor
in
lahf
je
mov
push
lods
mov
xchg
movsb
bound
stos
mov
lods
lcall
dec
ds
ret
pop
or
call
inc
xchg
test
ret
jg
fsts
and
adc
xor
lahf
icebp
fistpl
int
mov
dec
aaa
mov
mov
fwait
jbe
pop
imul
rolb
xor
test
cld
mov
js
nop
or
jmp
daa
mov
xor
stos
jo
fnstsw
mov
and
rcrb
shll
sbbl
push
pop
and
xchg
ja
and
bound
out
push
stc
fnstsw
rcr
mov
out
js
fsub
mov
pop
inc
or
gs
das
mov
bound
cmp
lahf
orb
mov
out
in
adc
mov
jns
or
lods
push
daa
rcll
xchg
out
sub
ret
pop
inc
xchg
pop
pop
push
inc
test
pop
fs
loope
jo
inc
aaa
mov
imul
mov
sbbl
pop
sub
ret
in
gs
or
sub
mov
push
jmp
mov
push
sbb
aam
pop
jns
aaa
add
mov
add
xchg
ljmp
xor
leave
push
orl
imul
and
ja
loope
push
jno
das
out
in
repz
addr16
mov
pop
jnp
sub
fs
ljmp
or
fcoms
add
sbb
push
nop
dec
popa
cmp
gs
xor
out
dec
pop
add
add
aam
xor
adc
mov
or
clc
rcll
mov
dec
fldl
sbb
adc
mov
pop
popa
jne
adc
cmpsl
icebp
fisubrl
add
cmpsb
sbb
lahf
cmp
loope
enter
add
testl
stc
cld
out
xchg
stos
cld
xchg
js
jbe
cmp
push
js
xchg
inc
lods
fisubs
mov
and
inc
test
out
pop
or
and
sbb
xchg
fxam
cs
scas
jge
cmpsb
push
jo
push
sbb
push
xchg
sub
ret
or
xor
jl
fnstcw
push
mov
sub
sarb
fs
jae
pop
push
mov
push
add
mov
push
std
outsb
xchg
pop
das
jbe
push
out
push
rcrb
mov
addr16
jmp
movsb
add
jns
std
lcall
xchg
outsl
call
adc
ret
push
sub
fsubrl
and
sbb
loop
ret
pusha
pusha
add
mov
addr16
pop
inc
stc
mov
ret
jae
pushf
and
dec
je
test
cmp
je
mov
pop
out
into
lea
rorl
sbb
push
mov
ficompl
cmp
fidivrs
aam
aad
subl
lret
xchg
das
pop
jl
ljmp
fadds
pop
xchg
icebp
clc
sbb
add
jg
add
pop
out
shlb
mov
xchg
adc
or
xor
add
stos
cli
arpl
push
push
movups
shr
sbb
ljmp
pop
ljmp
das
cs
or
jo
out
in
daa
loopne
dec
push
iret
mov
or
test
lods
pop
or
xchg
das
push
mov
push
out
add
push
arpl
jl
iret
or
std
cmpsl
xchg
data16
and
xor
pop
push
jbe
push
add
mov
outsb
dec
sbb
pop
push
mov
sub
das
in
scas
insl
ljmp
or
sub
stos
pop
cld
into
shll
or
iret
cmp
shlb
mov
dec
pusha
or
dec
adc
loopne
add
icebp
fwait
movsb
pop
insb
je
adc
mov
leave
stos
fmull
leave
and
imul
pushf
lahf
mov
icebp
pop
into
push
add
test
test
push
inc
aas
mov
jno
leave
ljmp
dec
andb
lcall
filds
mov
aaa
cmp
lcall
movsb
stos
iret
movsl
xchg
pop
addr16
pop
or
cltd
arpl
pop
pushl
mov
ja
rorl
xor
mov
jno
xor
std
push
insl
xlat
or
mov
mov
out
incb
push
push
rolb
pop
adc
ljmp
aaa
insl
lock
adc
mov
lods
xchg
mov
arpl
mov
and
xor
pop
lock
enter
stc
adc
add
lods
sarl
inc
std
and
jns
jns
mov
in
icebp
notb
ja
or
ret
push
daa
sbb
mov
adc
test
cmpb
ja
pushf
mov
cmpb
repz
lret
jae
rolb
out
lret
hlt
mov
outsb
xchg
aaa
test
pmaxsw
movsb
or
aad
jns
lock
sub
les
jecxz
and
dec
popa
pusha
sub
inc
inc
xlat
mov
inc
repnz
inc
aad
inc
mov
jbe
xchg
loop
dec
push
fbstp
leave
jne
or
mov
inc
clc
jb
sbb
jp
mov
dec
sub
cmpsb
repnz
jecxz
rorl
aas
mov
add
cmp
fmull
rorb
cmpl
pusha
pushf
notb
cld
lods
cmp
adc
outsl
imul
out
fnstcw
int3
aad
xchg
xor
orl
dec
xor
mov
sub
add
and
ret
push
sbb
lcall
fcmovnu
fldenv
mov
es
and
xchg
repnz
daa
fildll
ds
incb
loop
int
test
or
xchg
insl
adcl
stos
movsl
scas
sub
cmc
xchg
std
test
fwait
xchg
add
push
daa
fs
repz
lds
jecxz
jbe
test
mov
bound
ds
clc
cmp
clc
mov
popf
shrb
stos
add
js
ret
std
push
xor
jno
inc
leave
dec
fimull
mov
pop
insl
pop
and
cmp
lods
sbb
cmp
cs
ljmp
pop
dec
pop
pusha
push
rclb
mov
xchg
roll
lods
sub
incl
sub
jl
push
pop
dec
loopne
cs
je
hlt
dec
cs
inc
adc
dec
cmpsl
out
ret
xor
pop
shll
out
ds
cltd
jno
mov
push
repz
out
mov
adc
inc
fdivrl
add
add
dec
mov
js
mov
cmp
mov
pushl
lcall
lcall
sbb
repz
outsl
mov
pop
mov
xlat
adc
jmp
fnstsw
inc
test
ss
dec
xor
jecxz
das
notb
cmp
mov
adc
jg
aaa
in
mov
and
adc
pop
dec
jp
inc
pushf
into
rorl
push
mov
nop
clc
aaa
outsb
inc
mov
xor
sbb
jl
mov
es
jecxz
adc
adc
pop
adc
mov
cli
cmp
xchg
pop
add
cmp
ja
add
or
out
popa
fwait
pop
jle
pusha
and
ficompl
push
mov
mov
adc
fld
jo
sbb
nop
mov
cmp
sti
adc
mov
sub
stos
jmp
aaa
insl
cwtl
push
adc
jg
fs
cmp
xor
push
stos
jp
rorb
mov
icebp
jl
movsb
shll
sub
push
enter
or
dec
push
fildl
jbe
das
lret
into
push
pop
mov
inc
pop
lret
lahf
lds
xlat
pusha
dec
jae
inc
arpl
lret
mov
mov
dec
int3
movsb
mov
and
pop
int3
clc
pop
ja
sbb
dec
dec
cs
inc
and
icebp
nop
add
xlat
cltd
stos
call
in
or
dec
pop
sub
pop
in
add
push
das
add
sbb
jbe
push
js
mov
inc
movsb
mov
mov
lds
mov
xlat
pop
sub
into
inc
and
push
test
push
lea
pop
ret
mov
lret
lret
dec
mov
leave
mov
dec
pop
lods
movl
jae
dec
jns
into
orb
lock
mov
aas
xchg
movsl
rclb
xor
add
mov
ja
mov
les
test
ret
and
jmp
out
repnz
cmp
xchg
xor
pop
mov
add
dec
ret
sub
jmp
xlat
ret
jmp
jmp
jg
mov
fnstenv
mov
jo
repz
add
data16
cld
dec
lods
jl
mov
fisttpll
aaa
cld
and
lds
test
inc
jmp
pushf
aad
data16
lock
inc
test
fwait
bound
sub
incl
rorb
mov
shrl
ds
cmp
out
into
add
cmpsl
rcr
ljmp
push
movsl
sbb
inc
cwtl
sbb
out
movsb
xor
or
jne
iret
imulb
es
and
stos
jmp
mov
rcll
pop
push
fisubrs
or
mov
fmul
aam
push
and
xchg
popf
bound
in
sub
fnsave
ss
pop
aam
lea
call
add
cmpl
mov
sahf
mov
mov
in
pop
aas
lret
push
fwait
nop
jne
mov
push
inc
fmul
loop
in
jno
adcl
inc
test
and
sub
add
movsl
push
adc
mov
jo
push
mov
sbb
stos
pop
repz
cld
mov
outsb
in
cmp
scas
push
mov
addr16
jp
mov
rcl
sbb
mov
push
pop
mov
fdivrs
push
dec
aam
mov
xchg
negb
xchg
movsb
data16
or
mov
pmuludq
call
outsb
out
stos
sub
das
int
push
jne
loop
xchg
int
xor
les
xor
mov
filds
fdivp
add
adc
ds
xchg
pop
xchg
jae
dec
push
sub
sbb
shl
xchg
push
jle
int
nop
dec
cmpsl
push
call
push
or
repnz
lods
cs
or
jl
test
and
xchg
mov
movsl
adc
bound
js
or
das
adc
hlt
xchg
add
fwait
pop
xor
dec
idivb
dec
jno
cmp
dec
lcall
insl
xorl
loopne
aas
mov
lcall
xchg
or
pop
in
rorb
cmpsb
cmpsb
push
jne
rcl
jl
decl
ss
out
xchg
jmp
push
jp
ljmp
and
loope
ss
jne
call
inc
lahf
cmpb
sub
ds
pop
push
lods
lds
ds
push
call
mov
js
sahf
lcall
mov
out
xchg
das
cmp
add
or
inc
pop
sbb
push
rcrb
fstl
inc
and
adc
mov
xorl
mov
ljmp
mov
pop
adc
cmp
pop
test
and
insl
es
mov
add
jno
in
dec
push
push
xor
js
clc
int3
adc
mov
clc
nop
xor
push
in
xchg
or
int
arpl
aad
bound
adc
adc
jno
mov
out
mov
pop
ljmp
cs
lods
test
in
sub
inc
popa
mov
inc
push
cmp
push
xor
push
das
outsb
pop
mov
in
mov
lret
ljmp
stos
xchg
xchg
jb
stc
push
push
xchg
xor
push
out
jle
call
push
sub
mov
push
hlt
mov
mov
cmpb
addr16
xor
subb
rep
sbb
xlat
int3
inc
push
imul
mov
xlat
cltd
add
or
or
mov
sbb
pop
js
mov
mov
push
xchg
sbbl
shr
add
fisttpll
xchg
testb
or
test
or
inc
js
shll
inc
inc
test
cld
aad
xor
mov
cmp
inc
add
rorl
sbb
xchg
xchg
push
sbb
jecxz
ja
jae
pushf
loopne
mov
fists
andl
jge
adc
test
push
mov
nop
mov
loopne
imul
mov
popf
ds
shlb
push
sub
dec
nop
scas
cmp
frstor
add
add
pop
shl
jbe
xchg
jge
mov
retw
or
or
sti
inc
push
bound
xorb
xchg
mov
js
stc
mov
and
dec
test
in
sub
cmp
insl
xchg
shrb
push
int3
dec
sub
loopne
jmp
pop
mov
mov
pop
pop
xor
testl
js
pop
adcl
push
cmp
movsb
movsb
and
xchg
mov
scas
adc
xchg
fdivr
pop
lea
jmp
add
adc
inc
daa
loopne
mov
jle
xor
pop
mov
or
sarb
cwtl
inc
mov
fwait
mov
and
pop
sarl
lea
mov
cmp
or
and
sbb
sbb
mov
decb
and
xchg
in
xchg
sbb
into
call
int3
mov
loopne
jl
xor
adc
imul
inc
push
andl
xchg
add
cmp
dec
mov
mov
xlat
leave
cmp
cmpsl
mov
dec
setge
les
and
and
in
ret
sub
and
push
mov
ret
subl
out
jmp
cli
push
mov
cmp
lcall
sarl
and
popa
adc
mov
inc
mov
cmc
pop
inc
loopne
fimuls
andl
mov
and
ja
mov
stc
sbb
pop
repnz
insb
rorb
fists
aaa
xor
enter
ret
movsb
cmp
mov
pop
cmp
mov
fsubrl
es
clc
loopne
or
mov
rcrb
out
mov
inc
jp
sub
outsl
out
lods
clc
mov
sbb
add
push
hlt
dec
adc
repz
sarb
jns
pop
inc
hlt
ds
or
inc
xor
rclb
jl
lods
insb
xor
mov
sub
cmpb
and
pop
push
ds
sub
out
xchg
int
stos
mov
out
aam
test
jecxz
inc
out
pop
jo
xor
push
inc
sub
repnz
ljmp
in
push
testl
stc
mov
inc
int3
push
push
rcrl
sti
mov
mov
mov
jnp
cld
push
out
out
adcb
test
push
nop
jno
std
mov
cmpsb
mov
ss
pop
fwait
test
test
xor
mov
loopne
sbb
add
ret
fmul
pop
iret
push
aad
icebp
mov
or
sbb
cli
dec
sbb
sarb
inc
inc
mov
adc
cmp
test
jbe
data16
test
das
dec
in
aad
cmpsl
xchg
cs
mov
cmp
push
lret
or
popf
test
aas
inc
jp
inc
xor
cmp
in
dec
pop
fstpl
test
mov
sub
xor
xchg
sbb
inc
fmulp
jecxz
mov
push
pop
fdivrl
or
enter
xchg
dec
or
addr16
add
and
rorb
aad
push
addb
iret
xchg
add
out
clc
insb
push
pop
leave
mov
stos
push
icebp
xchg
jbe
jbe
jnp
push
pop
mov
test
ljmp
mov
push
int
movsb
cwtl
push
repz
in
cmp
push
jne
xchg
mov
fnstsw
add
adc
sbb
int3
out
popf
jmp
mov
clc
jl
sub
enter
jbe
outsb
pop
or
xchg
into
js
xor
test
ret
xchg
push
rolb
cmpsb
add
mov
add
inc
mov
and
outsl
aam
xlat
dec
mov
shrb
adc
fidivl
mov
test
cmpl
sub
xor
push
out
mov
ficoml
xor
shr
insl
cmp
test
add
xchg
cmpsb
ret
dec
repnz
pop
cmp
adc
xchg
xor
rcl
pop
rolb
or
je
lea
insl
push
adc
icebp
outsb
xchg
roll
dec
leave
cmpsl
jl
cmp
xchg
xchg
ficompl
pop
xor
sub
push
hlt
out
sub
aam
lahf
jns
movsb
sub
sbb
jl
jp
sbb
mov
hlt
push
sbb
mov
inc
xchg
mov
mov
mov
and
add
pop
push
enter
fwait
jns
fucomp
int
rcll
or
xchg
call
flds
mov
addr16
pop
shll
pusha
inc
add
test
loop
xchg
and
divb
adc
shlb
or
sub
cli
cmp
and
outsl
int
imul
xchg
lock
or
dec
xchg
xchg
aad
int3
dec
push
movsb
ror
hlt
test
jmp
or
je
or
lahf
imul
adc
mov
mov
popf
push
xlat
call
and
mov
cmc
pop
xchg
iret
sub
jb
daa
lret
mov
or
dec
outsl
and
xchg
icebp
stos
ret
push
mov
jne
cmpsb
imul
idivl
xlat
cltd
scas
or
pop
loopne
enter
andl
in
adc
cmpsl
mov
xor
ret
or
fnsave
mov
sbb
mov
jno
pushf
test
movsl
add
sbb
add
out
sahf
cmp
jo
adc
stc
popl
add
lret
lods
xchg
movsl
adc
push
cmp
je
cmp
pop
out
aas
push
ret
insb
mov
pop
loopne
push
pop
ret
mov
lds
sti
mov
outsb
repnz
or
je
push
aaa
push
pop
outsl
sub
push
xchg
test
lds
movsb
pop
push
xor
shl
mov
cmpsl
data16
sub
ljmp
cli
and
cli
insb
mov
ja
adc
rorb
enter
sbb
lea
cmp
mov
fisubrl
jl
js
push
jmp
aaa
lock
outsb
mov
repz
je
jge
lahf
push
std
dec
mov
mov
inc
xchg
xchg
aas
int
pop
jo
sub
shr
js
test
mov
jmp
fmul
sbb
fsts
pop
cmpsl
jnp
lea
inc
pop
test
test
sub
ds
inc
dec
mov
cmp
rep
jge
ja
xchg
jae
jmp
ret
hlt
mov
sar
in
cli
lock
mov
xor
rol
pop
add
fildl
imul
mov
pop
push
mov
pop
jp
sbb
jle
xchg
fs
cli
lret
gs
xchg
cmp
int
inc
cmp
fists
mov
shlb
push
stos
pushf
cli
daa
repnz
mov
rcl
nop
enter
aad
or
and
xor
call
es
subb
stc
and
pop
imul
pop
mov
sbb
sub
arpl
int3
xchg
fildl
dec
out
idivb
out
fs
jno
and
xor
adc
push
jnp
push
sbb
mov
mov
rclb
loope
cmc
inc
and
mov
fs
xlat
movb
pop
push
sbb
xchg
stos
addl
lea
push
and
sbb
and
popf
cmp
in
inc
rcr
stos
and
xchg
mov
jmp
mov
and
pop
mov
scas
cmpsl
pop
rolb
pop
scas
push
insl
inc
outsb
inc
cmp
aas
cld
inc
out
jbe
outsb
mov
push
pop
ret
adc
movsl
mov
mov
mov
call
fwait
inc
push
mov
mov
out
and
dec
mov
out
jno
in
lret
loope
xchg
cmp
adc
fimull
xor
test
out
imul
ds
roll
shl
dec
mov
jnp
call
cmp
pusha
and
dec
mov
sub
out
sbb
inc
xchg
cli
push
clc
ror
inc
mov
xchg
out
ret
pop
and
fiadds
imul
inc
in
and
stc
mov
loop
mov
pop
in
mov
or
and
push
mov
or
stc
js
pusha
dec
test
dec
sub
cld
push
sbb
out
ret
addr16
lock
pop
adc
and
aas
or
inc
adc
jmp
dec
jo
sbb
sarb
and
mov
and
inc
mov
xor
cmp
push
mov
mov
push
pop
adc
outsl
aaa
cmp
loopne
out
in
dec
out
arpl
lock
sbb
ret
jbe
pop
sub
out
test
adcl
hlt
shrl
mov
dec
or
mov
jno
fcoml
lods
xchg
or
and
cmp
or
iret
repz
mov
pop
mov
scas
insl
and
mov
loope
sub
xchg
jmp
movsb
add
test
or
div
divl
lret
bound
mov
adc
sbb
and
push
leave
mov
in
popa
jns
pop
test
pop
sbb
outsl
or
ja
int3
dec
ja
and
div
adc
inc
les
and
jae
mov
jp
mov
or
pushf
jmp
les
xchg
js
sahf
sbb
mov
or
icebp
mov
fadds
sbb
int3
lret
or
sarb
aas
lahf
mov
cmp
rcrl
stc
mov
jp
dec
lds
push
ljmp
int
mov
int
or
dec
mov
stos
cmp
sub
test
jo
out
in
mov
rcrl
scas
imul
push
std
sub
movsb
pop
fs
subb
mov
pop
inc
push
daa
cmp
jb
jp
lods
movsl
lret
push
inc
or
and
or
mov
mov
sub
adc
sbb
add
call
es
popa
pushf
inc
mov
das
out
std
in
xchg
add
movsb
mov
fiaddl
rol
inc
leave
push
lret
test
push
sbbb
inc
push
sub
mov
into
mov
fdivs
ljmp
call
jge
pop
add
mov
insl
vpsubw
loopne
rcll
ret
mov
stos
inc
push
mov
std
fistl
popf
mov
enter
pusha
cmpsb
cmp
push
or
mov
test
xchg
xchg
jecxz
adc
sbb
gs
sub
xchg
lock
inc
mov
push
xchg
mov
lcall
mov
xlat
or
nop
test
push
jnp
xchg
and
int3
mov
mov
and
dec
xchg
cltd
or
push
dec
je
roll
stc
push
push
sub
sbb
xor
jbe
sbb
add
pop
insb
test
xchg
out
inc
sub
push
push
push
pop
mov
cltd
mov
into
test
hlt
ss
scas
jmp
test
pop
sub
cli
std
fs
and
inc
fsubs
sbb
movsl
and
mov
cmp
pop
pop
mov
nop
sti
out
gs
xor
push
cmc
fsubrl
mov
xor
sbb
test
inc
out
pop
push
scas
dec
add
js
adc
xchg
xlat
mov
jecxz
dec
jns
lahf
pop
mov
pop
iret
dec
jge
shlb
lret
mov
sbb
sbb
es
jb
xchg
jo
push
ds
mov
cmp
sub
and
mov
or
xlat
call
add
sub
mov
push
imul
stc
mov
lret
add
mov
in
iret
aaa
fimuls
fbld
inc
std
dec
sbb
hlt
mov
stos
lcall
loope
cmp
xchg
mov
mov
lods
outsl
test
push
mov
adc
dec
nopl
lret
lahf
ror
push
out
insb
dec
sbb
dec
push
jp
pop
add
sbb
adcb
addr16
icebp
mov
cmp
dec
xor
inc
sbb
aas
fisttpl
add
and
cmpl
addb
roll
or
out
js
jns
cmp
push
inc
lock
loop
scas
fstpt
insl
adc
and
push
and
out
stos
sub
push
sarl
adc
push
pop
fisttpll
dec
test
fistpl
sbb
insl
xor
faddl
iret
mov
dec
pusha
xor
bound
mov
or
je
fldenv
sub
xchg
adc
leave
pop
mov
out
push
jne
cmp
pop
pop
cltd
std
add
je
push
lock
lret
dec
in
daa
out
cmp
nop
inc
loopne
pop
nop
sub
ljmp
sub
pop
mov
lods
lahf
push
mov
jne
bswap
jl
mov
rcrl
xlat
mov
mov
cwtl
outsl
imul
scas
mov
pushf
in
movb
stc
mov
xor
jno
push
inc
mov
cmp
lods
ljmp
push
mov
stos
sub
in
cmpsb
xchg
lds
fadds
sbb
aas
xchg
pusha
jnp
adc
lock
push
push
adc
icebp
add
shll
xor
pop
push
int3
movsl
test
and
ds
ja
fsubrl
dec
pusha
jmp
pusha
mov
sub
sahf
adc
pop
jmp
push
scas
add
test
adc
lret
mov
pop
jecxz
or
push
int3
push
mov
push
loope
data16
mov
pop
lock
adc
clc
push
cmc
or
xchg
lods
lahf
push
pop
mov
push
daa
xchg
fldl
jnp
fwait
scas
add
pop
test
jmp
gs
pop
xchg
iret
or
mov
aad
xchg
aam
addb
add
mov
pusha
cmp
cs
mov
shlb
cwtl
or
dec
cli
rcl
cld
aaa
add
sbb
jl
xor
cmpsl
mov
mov
mov
shlb
sub
iret
mov
bound
sahf
mov
test
divb
pop
xchg
mov
xchg
bound
mov
push
adc
xchg
scas
mov
scas
or
js
sarb
shll
lcall
jl
mov
out
ror
sub
push
fs
adc
mov
aad
inc
push
mov
push
or
inc
mov
cmp
adc
stos
or
cwtl
out
in
or
push
insl
sub
and
jle
clc
int
dec
testl
movsl
mov
pop
sub
and
aad
int3
cs
jns
out
jecxz
sub
cli
aam
pusha
stc
push
imul
push
pop
cld
xchg
cmp
std
xor
cmpsl
lods
in
cmpl
cmp
orl
shrb
imul
ret
not
or
inc
popf
std
ficomps
sbb
jmp
push
mov
push
test
orb
insl
add
icebp
add
dec
jecxz
mov
or
cmc
lcall
repnz
xchg
out
andl
jl
popf
xchg
clc
loop
out
out
icebp
xchg
inc
mov
cmp
cld
pushf
call
sub
aas
int
or
cmp
pop
pop
xchg
jb
jle
dec
dec
movsb
addr16
pop
xor
in
pop
mov
adc
shll
mov
jmp
and
cltd
pop
pop
in
sbb
arpl
push
dec
clc
out
inc
adc
loope
mov
lods
cmp
mov
sti
or
js
add
fmulp
lret
rcll
out
dec
sbb
into
inc
pop
and
loop
test
pop
stos
pop
inc
aaa
sbb
jecxz
loop
imulb
and
cltd
insl
pop
inc
stos
lahf
xlat
pop
orb
mov
pop
lock
rclb
jae
or
cmp
and
popf
pushf
mov
lahf
mov
fidivs
fistps
dec
loop
fldenv
mov
sahf
push
jecxz
inc
aas
sahf
daa
push
faddl
and
lcall
xlat
cltd
or
pop
or
pop
push
dec
cmp
inc
sbb
stc
dec
cmpsl
mov
xchg
fnsave
xchg
shll
push
fdivl
push
mov
roll
arpl
dec
inc
aas
add
push
hlt
sub
mov
pop
push
cmp
data16
clc
mov
add
into
dec
sbb
addr16
jge
xchg
push
divb
lcall
inc
icebp
xchg
data16
xchg
push
aaa
fldcw
aam
dec
and
pop
xor
imul
enter
aad
repnz
dec
and
es
cmp
test
aad
rolb
out
push
or
call
test
add
inc
jecxz
or
pop
test
ljmp
mov
cmp
dec
lea
aaa
mov
hlt
imull
push
mov
shlb
adc
test
inc
lahf
inc
pusha
popf
out
xchg
inc
cwtl
cld
xchg
lock
mov
and
jge
or
mov
out
and
rep
mov
pushf
clc
jl
das
add
inc
icebp
dec
sti
sub
jl
mov
rcrb
mov
push
mov
iret
lds
daa
jmp
cwtl
or
mov
add
cmpsl
xchg
std
pop
call
shr
jp
or
jno
cmc
in
cmp
aad
dec
lds
vsqrtsd
in
xor
jno
jne
sahf
pop
fwait
cmc
jne
addr16
sbb
testb
orl
dec
lret
call
in
mov
mov
into
movsl
loop
xchg
or
xchg
pop
in
lret
das
dec
faddp
notl
dec
aaa
fs
pusha
inc
and
or
sbb
sub
cmp
in
bnd
in
scas
add
movsb
test
imul
mov
adc
clc
aas
icebp
leave
dec
mov
outsb
and
mov
add
jae
adc
mov
sub
mov
adc
sti
mov
mov
stos
mov
sub
cmc
pop
jnp
sahf
mov
daa
call
push
cwtl
mov
add
jge
ljmp
jmp
cmp
mov
cmpsl
fsubl
pop
je
push
mov
loop
aas
loop
imul
shl
movsb
repz
bswap
pusha
movsb
imul
mov
fistps
push
mov
and
sub
dec
sti
or
scas
insb
cmc
fs
in
and
or
inc
or
mov
enter
xor
aaa
xchg
mov
sbb
shr
mov
add
int3
push
int3
xlat
fs
jge
mov
cs
notb
cmpsb
pop
aaa
sbb
pop
inc
mov
mov
push
push
out
loop
push
xchg
ret
pop
sbb
fcmovu
or
xchg
daa
cmp
pop
aaa
sub
in
cmp
mov
inc
push
stos
dec
in
rclb
sbb
adc
or
mov
subb
das
repnz
into
loope
mov
jg
rclb
adc
mov
in
inc
popa
xor
bound
jmp
adc
pusha
mov
xchg
cmp
cld
ret
outsb
setp
jg
scas
jmp
mov
lods
es
dec
xchg
iret
repz
pop
sub
inc
sar
dec
out
push
mov
movsl
cmc
call
movsl
adc
aad
fsubrs
stc
rolb
fists
inc
or
hlt
jne
je
cmp
lea
sbb
jne
stc
test
jb
movsb
addr16
hlt
in
add
stos
push
jb
int3
and
xor
and
int
scas
adc
add
loope
add
iret
push
call
ds
in
sub
ror
cmp
ja
cmpsl
sub
jns
nop
pop
cli
xchg
les
cmc
push
inc
popa
lds
and
out
pop
push
or
imul
cmc
cmp
sbb
xchg
mov
mov
jg
xlat
ds
fisttps
ljmp
icebp
and
aaa
pop
mov
arpl
mov
pusha
and
hlt
cmp
or
hlt
push
dec
hlt
adc
jb
stc
notl
stc
pusha
sub
fmull
lea
sarb
das
mov
ss
or
cmpsl
insl
aaa
sub
mov
pushf
call
jp
pop
call
xchg
hlt
push
mov
scas
ss
lcall
xchg
dec
cltd
adc
mov
sbb
push
popf
jle
mov
dec
das
push
mov
and
aam
dec
push
inc
jns
sbb
sub
adc
push
adc
mov
in
pop
enter
les
imul
inc
pop
shl
cmp
push
inc
out
test
xor
sub
stos
addl
sbb
or
scas
push
dec
add
xchg
mov
adcb
daa
mov
inc
insb
cs
imul
jne
sbb
sarl
mov
push
adc
pushf
add
and
mov
popa
xchg
jmp
lock
add
imul
test
add
fwait
pop
push
cmp
hlt
popa
icebp
mov
rcrb
lds
sub
xor
pop
xor
sub
lahf
dec
in
and
test
sbb
neg
pop
xchg
inc
xchg
cmp
xor
stc
adcl
insl
cmp
arpl
and
push
xor
xchg
test
cmp
roll
jno
iret
mov
cmp
repz
outsl
pop
lea
cmc
ja
pop
mov
mov
enter
rcrl
aas
sahf
fs
out
cmp
icebp
das
movsb
loopne
add
insl
lret
pop
inc
movsb
mov
pusha
in
loopne
push
call
test
xchg
and
fidivs
xchg
mov
cltd
out
cli
jmp
decb
jmp
fisttpl
push
mov
faddl
push
push
dec
mov
sbb
mov
adc
add
je
jmp
insb
jmp
testb
jne
sar
orl
pop
lods
sbb
and
into
stos
cld
arpl
or
xchg
rcll
aam
push
les
dec
adc
clc
iret
fists
cmp
lea
jecxz
ret
sbb
sbb
mov
push
clc
ficoms
ret
dec
lods
adc
jle
xor
imul
push
pop
ret
xor
mov
cmp
mov
and
mov
xchg
sub
pusha
dec
cmp
div
mov
dec
mov
pop
mov
xchg
push
fimull
and
repnz
adc
scas
loop
mov
sbb
lretw
inc
rorb
popf
cmp
negw
sub
push
enter
mov
and
rorb
orl
jl
xchg
ss
or
push
jnp
lea
ret
inc
jne
mov
test
imul
leave
pusha
push
pop
dec
jb
scas
in
inc
push
imul
jecxz
and
in
std
jo
jmp
pop
div
add
enter
nop
xchg
nop
cmp
out
jo
jl
pop
ss
push
jne
sub
call
xor
adc
xor
mov
jl
mov
pop
fisubs
mov
jnp
push
sar
dec
push
movsl
lds
pop
pusha
pop
mov
xchg
mov
in
pusha
mov
aad
mov
dec
fdivr
xchg
leave
ja
pop
mov
mov
pop
cmp
pop
or
mov
enter
sbb
inc
daa
dec
aaa
lcall
sahf
iret
dec
jns
mov
in
inc
push
dec
add
orl
xchg
aaa
sbb
dec
pop
pop
xchg
inc
mov
inc
mov
imul
mov
cmp
jg
loope
adc
mov
out
test
mov
int
jg
jnp
jb
adc
gs
hlt
pop
mov
push
jl
mov
add
sub
mov
rcrb
sbb
test
jecxz
mov
mov
pop
pop
and
mov
xchg
pop
xchg
push
inc
test
ret
adc
test
repz
popa
inc
mov
mov
mov
inc
stos
xchg
cmp
pop
test
outsb
filds
outsb
scas
out
pop
xor
xor
insb
movsb
cs
adc
pop
pop
or
std
mov
imul
movsb
scas
fwait
into
jecxz
js
push
cltd
stc
pop
and
insl
push
iret
enter
mov
ret
std
sub
cwtl
subl
xchg
stos
adc
in
test
movsl
mov
xchg
dec
sahf
outsl
in
lods
ficompl
aaa
mov
sbb
sbb
adc
out
andl
xchg
popa
fidivrl
stos
push
std
mov
in
loop
add
mov
mov
int3
lcall
xchg
mov
popf
in
xchg
push
mov
sahf
mov
sub
add
adc
ds
fs
imul
pop
sbb
rclb
xor
js
jmp
inc
frstor
xor
bound
lret
cmpsl
imul
lea
idivl
stos
xor
pop
or
or
test
test
and
mov
jno
jno
in
inc
inc
adc
dec
movsl
idivb
gs
dec
add
adc
hlt
or
cld
ret
loope
ljmp
xchg
clc
adc
jl
mov
idivl
rol
loopne
test
sub
dec
cmp
xchg
dec
int
movsl
fdivrp
cli
pushf
movsl
and
inc
or
test
hlt
cmc
push
mov
mov
xchg
pop
les
adc
xchg
mov
mov
out
rep
mov
jp
cmp
out
lea
loopne
xchg
inc
and
xlat
mov
or
fwait
in
jne
test
mov
xchg
sbb
fbstp
fiadds
jo
dec
jb
test
mov
sbb
shr
scas
clc
mov
or
icebp
mov
pop
sub
icebp
shrl
dec
xchg
cmp
int
dec
in
push
mov
jmp
call
cmp
icebp
xorb
js
xchg
aam
sub
fldt
dec
add
xchg
jbe
div
push
mov
loop
push
pop
adc
xor
test
pop
adc
push
jg
lea
pop
imul
sbb
inc
sbb
pop
test
les
test
xchg
sbb
and
fsubrl
insb
mov
test
insl
ss
inc
xor
jge
add
lods
and
push
jae
add
sub
cld
lcall
mov
fstps
xchg
mov
pop
pop
dec
daa
ds
shrl
ficompl
sub
or
or
jp
inc
mov
and
push
or
adc
notb
sbb
mov
aas
xorps
mov
dec
or
popf
jbe
out
aam
sub
xlat
mov
sarl
in
movsl
dec
pop
dec
xchg
bound
int
add
push
mov
lock
lea
aaa
xchg
jmp
cmp
iret
ljmp
hlt
test
out
sbb
mov
or
mov
roll
dec
xchg
rcl
pop
sub
or
and
sti
flds
negl
mov
sbb
cmp
btr
sbb
cli
js
xor
and
pop
out
cmp
cmp
push
push
fwait
pop
loopne
xor
dec
and
xor
and
daa
into
mov
mov
xchg
cmc
stos
xor
aam
sub
xchg
imul
or
xor
mov
cmpsb
and
hlt
or
jl
lds
jge
xor
out
addr16
pop
or
ja
icebp
dec
sti
int
loop
or
ja
shr
ja
xchg
inc
repz
adc
mull
jge
insb
addr16
fsubrp
test
adc
ret
shll
shl
aam
aad
imul
les
mov
and
dec
dec
jmp
aaa
movsb
bswap
scas
lock
nop
jne
ja
push
repz
xchg
pop
mov
data16
xchg
pop
ds
pushf
push
pop
xlat
leave
lock
mov
inc
sbb
insl
cmp
push
adc
jno
mov
lahf
sub
into
xchg
pop
enter
push
mov
stos
dec
sahf
jnp
pop
js
mov
cmp
push
stos
sarw
icebp
sbb
push
or
xchg
dec
push
scas
dec
mov
popa
and
mov
dec
cltd
push
push
subl
out
stos
addb
mov
xor
mov
gs
std
testb
pop
pop
scas
enter
faddl
cld
and
mov
push
push
fistpll
and
jno
and
sub
jb
rolb
pop
ljmp
enter
fidivs
xchg
loope
mov
fwait
mov
and
fmuls
lahf
push
cmp
imul
test
sub
int
aas
nop
inc
out
mov
pop
mov
popf
pop
add
sub
gs
jbe
pop
cmp
mov
andb
adc
jne
outsl
cmc
aas
ljmp
xor
test
rcll
mov
mov
jmp
mov
inc
xlat
jmp
lret
mov
mov
sub
adc
dec
lcall
xchg
enter
xor
push
mov
cmp
lahf
jmp
push
aaa
loop
aad
enter
add
xchg
lds
xchg
cmp
cmp
jmp
push
xchg
stc
push
xchg
cmc
add
imul
xchg
and
lret
jnp
push
pop
and
xchg
cmp
enter
ss
xchg
aaa
out
sub
add
hlt
test
in
jnp
lock
mov
cmc
movsl
pushf
dec
xorb
cld
pop
imul
les
clc
fcompl
sub
or
mov
cmp
dec
sbb
lods
push
imul
pop
dec
fs
sub
push
xor
lds
xchg
xchg
dec
mov
sub
sbb
int3
pushf
das
mov
mov
sti
pusha
pop
jb
fcompl
push
rcr
pop
fdivr
xchg
pusha
out
ljmp
xor
cld
cmp
push
jmp
inc
push
inc
mov
outsl
xor
pushf
pop
pop
inc
push
hlt
adc
add
dec
int3
jo
cli
les
imull
enter
addr16
mov
push
clc
pop
mov
cmpsb
shll
xor
shr
sbb
xor
popf
scas
mov
push
add
add
sub
push
mov
xacquire
scas
cmpsl
push
mov
sub
pop
in
mov
mov
loopne
ds
inc
cmp
fcomps
sahf
sub
jl
or
pop
insb
aad
loop
enter
leave
inc
jg
xchg
into
fnsave
stos
jg
dec
dec
dec
in
xor
int3
stos
mov
pop
scas
sbb
dec
pop
and
jl
popf
pushf
cmpsl
mov
sub
inc
pusha
adc
mov
sbbb
loopne
data16
sahf
adc
mov
lods
inc
mov
out
mov
push
xor
fisttpl
pop
hlt
call
push
lahf
ja
outsb
paddsw
aad
pop
in
pop
in
inc
push
iret
push
xchg
adc
push
sahf
xor
xchg
scas
les
add
outsl
loop
lret
mov
dec
adc
xchg
mov
in
mov
lock
xchg
fsubrs
cmc
lods
push
lahf
add
push
sbb
adc
push
jmp
repz
pop
test
jbe
mov
push
push
inc
sub
ret
cmp
out
addr16
fwait
mov
lods
sbb
outsl
cs
clc
mov
jne
sub
out
jae,pn
sub
outsl
adc
dec
dec
cwtl
sbb
ret
imul
sub
add
cmp
scas
aam
adc
call
aam
rcll
xchg
gs
mov
test
xlat
jno
pop
and
sbb
stos
pop
adc
adc
testb
arpl
jmp
cmpsl
decl
rol
das
add
mov
pop
xor
mov
scas
stos
xchg
mov
and
mov
lods
lods
aaa
lock
notb
enter
fs
jnp
subb
or
push
sbb
xchg
loope
add
add
sbb
jmp
pop
clc
xchg
orl
lods
ja
xchg
fbld
data16
and
push
jns
sub
fsubs
scas
stos
pop
aas
jnp
fs
mov
mov
push
loope
loope
fninit
dec
mov
pop
xor
xor
lock
lock
loop
cmp
xor
mov
add
jle
sbb
hlt
lods
xor
popf
pop
adc
bound
xchg
divl
in
cmp
adc
icebp
fcompl
pop
jmp
sub
sub
ds
push
inc
pop
cmp
xor
je
dec
ljmp
mov
ffreep
mov
jno
pop
ja
stos
stos
cmpsb
std
rcrl
in
nop
and
push
aam
add
js
push
inc
fwait
subl
sub
mov
outsb
xchg
data16
test
or
inc
jge
sbb
push
push
lahf
inc
inc
outsb
mov
fbstp
jnp
mov
xor
jns
jecxz
into
cwtl
fadd
xor
cmp
bt
adc
out
and
shlb
mov
repnz
leave
dec
fs
adc
orl
cmpsl
cld
mov
int3
roll
pusha
or
pop
cmp
aas
les
jmp
xchg
shrl
sub
cmpsl
pop
arpl
shlb
dec
fxsave
aad
xchg
lds
fadds
and
add
cmpsb
add
es
adc
lods
ss
inc
adc
push
outsl
and
pushf
lret
cs
mov
inc
in
gs
loope
sbb
popf
lret
test
lods
push
mov
loopne
sub
xchg
loop
stos
mov
stc
out
pop
adc
es
add
dec
aam
jbe
add
iret
ds
jecxz
add
dec
xchg
pop
fsubrl
fistps
xchg
xor
lods
les
das
adc
pop
sub
add
into
mov
push
mov
js
push
fs
pop
leave
sub
lret
pop
jno
dec
mull
pop
mov
out
fsin
mov
inc
insl
test
ja
idivl
push
push
movsl
flds
jb
je
mov
sub
out
and
jo
imul
push
pop
cmp
mov
inc
jge
aam
dec
fs
sbb
sub
push
jo
pop
adc
sub
fisttpll
in
subl
pop
mov
mov
mov
or
es
fdivl
aad
insl
push
inc
inc
sahf
ficomps
mov
jo
sahf
push
jnp
mov
bound
aam
iret
imul
xchg
dec
je
outsl
test
jmp
lds
dec
imul
mov
push
in
mov
and
or
sbb
into
cmp
dec
mov
mov
or
lods
cmp
or
or
lret
out
test
shrl
fstpl
aaa
xchg
fsubs
xlat
mov
mov
or
and
dec
sbb
gs
repnz
mov
xchg
cmc
xchg
mov
pop
adc
cltd
push
push
mov
adc
int3
sbb
shll
xor
fsubrl
pop
or
and
cmp
inc
sbb
stos
mov
jge
cmpsb
cmp
out
sub
or
arpl
add
jb
fucomip
dec
fucomip
push
popf
imul
stos
xchg
mov
test
and
or
push
inc
adc
dec
mov
lret
xchg
cli
cwtl
in
xchg
and
xor
lret
ffree
hlt
fwait
xor
adc
lret
push
mov
lock
push
ljmp
push
xor
aam
sbb
jle
out
mov
mov
add
ljmp
add
lret
scas
mov
jb
xchg
dec
jge
jge
xchg
test
rolb
sub
aam
ffree
es
push
xor
xchg
jp
cmc
out
pop
pusha
and
cmpsl
lods
sub
sbbl
dec
mov
int3
rolb
pusha
push
push
inc
adc
pop
subl
int
sar
mov
inc
xor
sub
pop
ror
lods
cmp
inc
movsb
scas
call
sub
popw
fadd
mov
push
dec
cltd
loop
les
adc
lock
mov
lods
xor
je
jg
mov
mull
pop
and
jmp
jbe
jns
mov
outsl
mov
notb
push
jnp
loope
jne
js
cmp
mov
cmp
outsl
inc
int3
in
mov
add
negl
inc
sbb
leave
ljmp
popf
adc
inc
out
mov
inc
js
adc
mov
repz
xchg
bnd
add
cs
sbb
xchg
xor
sbb
iret
addr16
cmp
push
lods
add
stos
das
popa
es
ficoml
jb
dec
fcom
mov
dec
aam
pop
outsb
jecxz
push
mov
outsl
leave
outsb
mov
mov
dec
inc
xlat
cmp
rorl
movsl
push
pop
cmp
cmp
enter
adc
add
sub
xchg
or
inc
or
dec
sti
or
popf
pop
les
ficomps
ret
sbb
pop
rcl
xchg
std
mov
mov
fadd
cmpsl
mov
jle
pop
stos
mov
loopne
leave
bnd
clc
xchg
push
lock
jp
pusha
outsb
push
aas
cld
fldl
test
sbb
icebp
inc
sbb
fnstenv
push
push
pop
xlat
sbb
iret
inc
lahf
adc
scas
pop
lret
push
incb
daa
dec
mov
ja
loope
das
push
push
in
jmp
dec
jns
cmp
icebp
pop
test
fldenv
or
jno
mov
lret
mov
mov
sub
adc
int
push
in
scas
lcall
adc
aam
sub
mov
mov
jg
fidivrl
rolb
into
sbb
inc
jo
sbbl
movsb
mov
ja
shll
mov
lods
xchg
jmp
scas
test
lea
jg
fisubrl
pop
out
shlb
adc
repnz
push
enter
arpl
or
cli
add
mov
or
mov
push
insb
dec
cmp
outsb
dec
and
cmovl
bound
js
fbld
sbb
lock
js
add
jno
mov
jg
jns
loop
scas
and
mov
mov
sbb
imul
sbb
mov
loopne
gs
xor
imul
push
daa
push
pop
js
pop
push
pop
add
call
stos
cld
scas
jnp
loope
scas
pop
iret
inc
jecxz
shlb
icebp
xchg
pop
lods
pop
hlt
aad
fldl
lds
fs
lds
inc
data16
test
stc
in
add
cmp
aas
out
jb
adc
adc
pop
cmp
mov
and
add
repz
aas
or
jo
cmc
out
out
mov
mov
xchg
mov
add
mov
test
mov
push
sbb
rorb
pop
xchg
std
lods
jecxz
subl
cmp
or
sbb
cmp
xor
lods
adcl
les
cmc
mov
sbb
add
popf
adc
je
aad
shlb
leave
push
lea
mov
pop
adc
filds
pop
cmpsb
test
jecxz
cmp
bound
sub
xchg
pusha
add
push
push
add
out
enter
xor
ss
sarl
fnstenv
sarb
adc
mov
cmp
adc
jne
iret
jge
dec
rcrl
sbb
pop
adc
mov
add
lea
imul
dec
mov
jecxz
cmp
std
cmp
jg
jns
inc
cli
ss
cmp
inc
js
pusha
dec
adc
lods
adc
out
mov
mov
loop
pop
adcb
test
ss
insl
or
mov
ljmp
insb
pop
call
xor
ja
scas
sbb
scas
or
popf
push
dec
movsl
inc
adcl
sub
mov
add
mov
pop
dec
test
stos
push
adcb
icebp
jb
sbb
push
push
and
lret
cmp
into
and
cmp
xchg
inc
xor
das
repnz
jmp
jno
push
int3
adc
sub
xchg
mov
out
pop
cli
sarb
cmpsb
push
push
daa
dec
jns
push
fstps
push
aaa
xchg
adc
mov
sbb
adc
iret
and
sbb
inc
arpl
into
push
lock
mov
cmp
jmp
xchg
mov
lods
or
frstor
je
shlb
or
ficoml
loopne
mull
js
cmp
out
ss
cmp
leave
scas
add
add
and
mov
push
mov
add
test
stc
mov
jo
cmp
cmp
imul
add
js
mov
sbb
dec
dec
scas
xor
adc
nop
in
shl
test
pop
pop
icebp
mov
out
jns
cld
bound
mov
add
cmp
stc
dec
in
rcr
inc
jmp
push
mov
pop
test
fsubrs
or
sub
push
incl
repnz
icebp
jne
mov
sub
jo
les
xor
out
jmp
into
inc
jge
out
cmp
xor
lret
jbe
jne
cmpsl
jns
out
inc
outsb
addr16
add
pop
sbb
mov
mov
sub
stos
and
mov
jl
inc
xchg
daa
mov
rcrl
es
cmp
ljmp
in
sbb
enter
psubb
add
jns
mov
hlt
testb
outsb
mov
mov
ret
xor
pop
pop
cmp
insb
add
dec
lahf
test
adc
pop
sti
out
dec
out
xchg
cltd
dec
arpl
and
pop
loope
cmc
rcrb
int
out
jns
xor
in
push
mov
subl
pop
adc
cmpsl
imul
xlat
addb
push
push
addr16
shlb
ret
outsl
or
mov
aam
pcmpeqb
mov
shrl
jo
mov
aad
xor
cmp
cli
jmp
lods
cld
or
lock
and
xor
xchg
rclb
aas
and
sub
jne
aam
je
xor
adcl
xchg
imul
sbb
pop
pop
xor
pop
and
pusha
fwait
xor
nop
test
test
push
jnp,pt
xchg
loope
xchg
inc
mov
das
xor
cmp
fidivrs
mov
vrsqrtss
sub
scas
add
sbb
je
aas
cmpsl
bt
cmpsl
lret
jno
test
ljmp
fmul
ret
and
in
cmp
push
pop
cmpsb
insl
enter
call
imul
leave
pusha
xchg
andb
dec
mov
xor
dec
sbb
xor
push
xchg
mov
jmp
movsb
xchg
int
xorb
or
mov
mov
nop
cltd
cmpsl
decl
push
nop
stos
loop
push
mov
inc
mov
or
sbb
lods
lcall
sub
adc
test
stc
fisubrs
flds
rorb
mov
mov
jge
daa
and
add
int3
pop
fyl2x
and
sarb
lods
xchg
cmp
repz
dec
bound
push
cmp
test
adc
xchg
mov
mov
aaa
cmpsl
cmpsl
dec
adc
or
test
test
xchg
add
mov
push
shll
iret
hlt
les
add
add
xchg
add
aas
mov
add
mov
insl
stc
frstor
test
loopne
cmp
daa
pop
mulb
dec
push
std
pop
sahf
andl
cmp
insb
or
adcb
cmpsb
xchg
sbbl
sbb
fs
lret
mov
cld
ret
ret
mov
mov
or
pop
outsl
and
cwtl
xchg
movsl
shlb
inc
repz
repnz
sarb
or
sahf
cmp
xor
xchg
xchg
sub
lock
insl
loopne
outsb
loopne
or
iret
jo
push
or
test
jmp
mov
dec
or
jmp
mov
jbe
dec
mov
aas
xchg
and
mov
lret
sub
shr
pop
xor
aaa
push
imul
mov
pop
cmp
push
mov
jmp
cltd
jp
push
pop
mov
rol
orl
aaa
popw
fnsave
iret
xchg
stc
out
dec
lds
aas
lock
icebp
mov
cltd
ss
xchg
int3
aam
sub
aad
inc
filds
mov
dec
stos
sub
adc
or
push
push
sub
push
adcb
das
mov
leave
dec
loopne
xchg
loopne
pop
sbb
add
pop
dec
pop
fdivrl
rorl
push
inc
ret
cwtl
and
add
sub
cmp
jns
xchg
xchg
aam
daa
in
cmp
push
ret
es
out
push
lcall
mov
ds
test
or
mov
adc
mov
stc
stos
mov
shlb
adc
cmp
int3
fwait
dec
aad
js
push
lds
fisttpl
mov
stos
das
and
psubw
out
and
pop
jns
lea
push
inc
push
push
jne
adc
je
test
in
out
or
push
cmp
mov
ret
mov
mov
jmp
jle
mov
pop
inc
scas
mov
xchg
mov
fmuls
repnz
push
cmp
mov
sbb
daa
repnz
mov
pop
xchg
in
and
cmc
or
arpl
cmp
cmp
add
enter
adc
jo
mov
scas
add
mov
mov
scas
inc
stc
xor
sub
or
test
jne
add
mov
mov
cmp
adc
adc
pop
jl
push
adc
inc
or
hlt
jae
jo
or
inc
xchg
push
in
sahf
jmp
movl
push
mov
inc
js
mov
pop
test
cmp
cmp
cwtl
popa
or
ficompl
mov
mov
cs
ss
mov
push
xorb
sbbl
ret
sbb
inc
and
mov
loope
lds
fsubrs
adc
orb
lods
sbb
pop
jle
adc
fidivl
bound
dec
mov
push
or
prefetch
sub
lret
cmp
inc
dec
sub
sub
ljmp
and
out
mov
pushf
push
xchg
push
push
lock
aad
hlt
push
rdtsc
push
xor
bound
mov
or
push
jmp
inc
popf
inc
pop
dec
jae
idivb
mov
adc
cmp
cmp
fcmovnu
aaa
xchg
sub
inc
xorb
shl
cmc
das
int3
cmp
xor
pop
dec
nop
mov
push
bound
out
dec
pop
jle
lret
jnp
adc
loopne
imull
cld
lcall
imul
ljmp
sahf
into
cwtl
adc
pop
rcrl
push
loope
sbbb
and
pop
icebp
sub
dec
mov
lcall
pop
inc
imul
je
mov
sub
cmp
ja
add
xchg
and
lea
xchg
std
dec
push
cmpsl
cli
ret
push
inc
jl
add
and
popa
dec
in
cmpsb
xchg
mov
dec
add
stos
cld
adc
std
sbb
aam
jecxz
xchg
xchg
sbb
in
ret
fadd
in
lret
adc
xor
adc
pop
xchg
push
js
adc
jbe
jbe
inc
stos
enter
mov
pusha
insb
aas
out
addr16
lea
out
inc
pop
xor
in
push
cmp
and
sbb
imul
xchg
filds
iret
jae
in
dec
sti
xlat
sbb
les
daa
out
test
pop
and
inc
mov
loopne
xor
ds
or
out
test
pushf
inc
lods
popf
mov
dec
push
xlat
outsb
xchg
popa
sbb
pop
icebp
and
jge
pusha
fnstsw
xor
loopne
ficomps
sbb
addr16
xchg
sahf
divps
loope
mov
push
push
mov
or
push
out
shl
xchg
mov
inc
inc
lds
pop
pop
mov
dec
and
cli
push
dec
cltd
movsb
jg
push
rcrl
jae
pop
gs
cmc
jl
cs
xchg
dec
jmp
jg
jle
test
xor
cmpsl
mov
repz
jp
sahf
sbb
add
adc
insb
mov
jmp
in
gs
scas
or
lahf
adc
xchg
lods
pop
lods
mov
mov
dec
sti
xchg
jae
push
sbb
and
push
enter
cmpsb
aad
push
pop
fistpl
sti
and
mov
mov
add
loop
or
jp
xchg
fldcw
insl
call
adc
jns
jecxz
lock
push
cmp
cltd
cmp
enter
stos
pusha
jge
shlb
mov
mov
scas
sbbb
movsb
bound
out
ss
or
xor
pop
jmp
cltd
xor
sbb
loopne
mov
leave
pop
jle
xchg
pop
pop
push
repz
jne
lcall
dec
test
fmul
and
adc
arpl
cwtl
jg
aad
fsubp
movsb
and
mov
or
arpl
fcmovu
mov
push
mov
or
xor
in
pop
jecxz
mov
aas
fwait
roll
jns
and
xchg
loopne
mov
push
or
orps
rorb
dec
lahf
pop
xchg
cmp
ljmp
jnp
xchg
dec
rclb
mov
gs
in
ss
repz
push
xchg
roll
inc
fs
shrb
icebp
in
sahf
mov
mov
xchg
or
loope
int
push
into
dec
jecxz
adc
xchg
ja
aas
pop
lret
cltd
outsl
dec
mov
loope
pop
push
push
mov
mov
sub
inc
mov
fwait
sti
cmp
sbb
mov
sub
adc
les
push
cmc
pop
stc
arpl
enter
stos
leave
aad
cmp
rolb
jp
sub
pop
mov
sub
xor
out
loopne
dec
pop
data16
lea
les
cmpsb
fisubrs
sub
out
inc
fs
fwait
or
adc
movsl
mov
inc
xlat
lea
mov
push
or
imul
inc
lea
mov
lea
jno
jno
lret
std
push
sti
xor
inc
pop
fnstcw
imul
jge
jle
lret
imul
jb
sub
scas
mov
lea
lds
adc
jnp
imul
jb
aas
pushf
dec
lcall
jl
clc
or
aaa
xor
add
push
cltd
jno
clc
jnp
add
pop
hlt
rol
mov
fimuls
mov
les
mov
loopne
sub
and
mov
es
pop
stc
jae
mov
sahf
xchg
ret
jp
cmp
xchg
ja
nop
je
shrb
cmc
inc
sub
jno
mov
pop
enter
in
nop
and
test
add
xor
jb
out
mov
dec
push
mov
popf
out
mov
into
inc
and
push
sbb
icebp
popf
mov
fs
insl
adc
jno
pop
push
jo
ds
adc
adc
outsl
mov
sarb
add
jne
ss
xor
mov
or
sub
mov
mov
sbb
pop
test
sbb
cli
call
pushf
cmp
pop
loopne
fnstenv
pop
addr16
leave
mov
mov
adc
xchg
mov
leave
lods
jl
and
lcall
cmp
in
cltd
iret
or
sub
aad
mov
sti
jb
clc
adc
ss
cmp
mov
fistpl
adc
aam
inc
dec
punpcklbw
out
out
bound
int
shr
ret
out
rcl
pop
cmp
jo
lret
adc
push
push
sub
mov
inc
xchg
sbb
clc
fidivl
scas
or
fidivrs
xor
jnp
mov
out
add
xchg
sub
in
mov
and
cmp
mov
out
mov
outsb
jno
es
jmp
pusha
stos
aaa
xchg
jno
inc
pop
sti
data16
cs
cmpl
or
push
fnstcw
lods
or
fisttpll
ret
push
mov
into
jg
ja
lahf
bound
cld
call
xor
ficompl
lods
cli
xchg
push
or
in
push
add
push
outsl
mov
mov
mov
push
mov
shll
std
cmp
inc
add
in
jle
dec
lret
or
jg
jb
xor
and
addr16
bswap
in
out
ret
ret
sub
adc
jbe
mov
push
ficomps
xorb
pop
mov
xchg
xchg
icebp
aaa
movsl
cmc
mov
stc
jb
pop
or
shl
cltd
stc
xorl
cld
rclb
adc
fstps
andl
pop
int
aaa
or
pop
xor
lcall
xchg
loopne
ss
inc
movsb
aas
push
inc
enter
dec
jmp
fsubrs
subb
enter
popa
cmc
push
mov
cltd
lret
clc
std
sbb
mov
or
adc
gs
sbb
push
shll
arpl
lahf
fbstp
sub
mov
push
pop
cmp
imul
es
loop
mov
loope
cmp
inc
movsb
cmp
cmp
sbb
mov
cwtl
mov
jae
cmp
push
es
mov
dec
fstp
push
es
pop
and
nop
pop
xchg
sub
push
or
pop
pop
rcll
cmp
das
jno
adc
sbb
adc
add
jnp
repnz
ret
cmpsb
xchg
fidivrs
das
shrb
push
jl
call
lahf
jecxz
xchg
outsb
adc
push
out
mov
xor
sub
push
sub
mov
leave
pop
mov
push
sarb
fnop
sti
inc
sbb
mov
sbb
or
icebp
xor
repz
xchg
xor
push
jecxz
mov
arpl
inc
call
scas
test
push
jge
pop
loopne
fildl
lret
cli
pop
arpl
cmp
je
sti
adc
cmp
jp
sub
rcll
in
xor
jp,pt
lods
pop
fcoml
lock
test
shll
push
test
das
or
cmpb
test
cmp
pushf
scas
movsb
dec
mov
lcall
pop
enter
std
jmp
sub
clc
lret
adc
lea
mul
cmpsl
arpl
gs
int3
sub
movsl
loop
in
hlt
in
push
dec
mov
xchg
jb
mov
pop
das
inc
mov
jmp
fisttps
addl
xlat
stos
fucomp
sbb
fists
or
mov
and
jae
push
xchg
es
inc
xchg
push
sub
clc
mov
inc
pop
add
inc
dec
test
testl
jno
sbb
je
mov
call
jp
in
sahf
jne
push
sbb
pop
les
insl
shlb
jle
push
and
jp
sub
and
mov
add
shll
xchg
rclb
adc
lret
xchg
jg
and
aam
pop
sub
call
test
popf
test
lahf
inc
gs
jb
push
xchg
stos
inc
movsl
adc
out
add
loope
or
test
or
gs
and
fs
cwtl
add
add
repz
pop
jle
add
int
cmc
dec
cmp
fidivl
js
push
pop
add
push
xchg
lds
aad
xchg
pop
test
shl
jge
mov
fcoml
or
out
dec
iret
dec
hlt
sub
stc
jl
dec
cmc
out
xor
inc
xor
aad
stos
lret
mov
pop
in
imul
mov
mov
ss
pop
and
or
lahf
cmp
pop
cli
cld
cwtl
sbb
aam
in
enter
xchg
sbb
add
testl
push
xor
insb
sub
jns
es
sbb
mov
mov
aam
jg
push
add
xor
lods
xor
cwtl
push
cmp
arpl
sub
insl
and
dec
aas
adc
bound
lea
and
cmpsb
fsub
cmp
xor
loop
aad
mov
sub
mov
add
xor
cltd
inc
aas
jl
adc
inc
aas
dec
arpl
repz
arpl
pop
mov
lret
stos
xor
mov
jne
adc
sbb
and
imul
scas
adc
cmp
push
cmc
notb
lds
nop
jae
push
js
xlat
xchg
mull
cmp
aaa
stc
and
sbb
aaa
and
nop
es
cmp
imul
mov
xchg
adc
cmp
addr16
icebp
xor
pop
lea
or
das
mov
insl
mov
inc
push
std
lret
push
pop
rcrl
arpl
jae
stos
push
imul
jp
aam
pop
xchg
lds
lret
arpl
sub
adc
jo
ljmp
cmpsl
xchg
fwait
cwtl
cmp
push
andb
ficompl
jl
into
xlat
ds
sbb
shll
xchg
ss
mov
in
cmpsl
enter
xchg
lahf
and
and
fcmovne
data16
xchg
adc
call
xor
inc
lods
out
sub
cmp
inc
movsl
fstpt
xor
jns
jge
jno
mov
mov
push
cmpsb
sbb
add
lods
cltd
loope
adc
mov
popa
mov
into
pop
test
sahf
ljmp
push
leave
fwait
movsb
inc
test
lods
push
cli
jecxz
aam
xchg
cmp
xor
pop
in
vmread
push
pop
and
xor
or
pop
cli
mov
jb
outsl
xchg
bound
ret
pop
mov
and
int
in
not
jecxz
jb
insb
outsl
std
sub
cmp
repnz
shlb
fdivl
mov
xor
or
xchg
stos
dec
jmp
lods
push
lea
cmp
cs
adc
pop
jg
out
test
ljmp
pop
adc
inc
rorl
or
jbe
int
pop
pop
push
mov
ret
inc
lret
mov
loopne
out
xchg
insl
sub
cwtl
sbb
cs
daa
mov
imul
movsb
or
in
sub
push
mov
aam
addb
lret
dec
adc
jo
lds
stos
ret
pop
rcrb
adc
loop
int
insb
xor
and
adc
lret
pop
mov
cmp
rcr
out
pop
dec
fistps
clc
dec
es
sub
bound
popf
insl
mov
mov
and
pop
imul
mov
cmpsb
daa
xlat
jae
cmc
inc
movsb
mov
movsb
repz
lret
orb
int
iret
addr16
enter
xorl
sbb
jmp
popf
lea
adc
imull
xchg
pop
gs
fbstp
loope
jns
fld
mov
int3
sub
iret
push
or
xlat
sub
jbe
pop
dec
movsb
icebp
es
jle
jle
pop
pop
and
xor
imulb
in
and
lods
jne
dec
ja
push
fildll
xchg
mov
adc
lods
xchg
pop
out
mov
fs
lock
xchg
mov
lock
jge
add
out
inc
ds
je
shlb
icebp
pusha
int3
sbb
rorl
xor
fists
pop
int3
mov
call
jo
push
arpl
and
lods
stc
ljmp
sbb
test
or
icebp
pop
arpl
ljmp
jae
lahf
mov
popf
ss
jg
pop
cmp
adc
push
arpl
adc
or
mov
roll
push
cmp
sbb
popa
jnp
js
push
dec
cmpsl
cli
inc
mov
jb
cli
adc
pop
mov
addl
add
adc
imul
add
ja
inc
add
inc
adc
sbb
data16
aaa
js
inc
jmp
add
or
fsubl
aas
cmp
and
pop
adc
cld
sub
sub
inc
inc
pop
rorb
mov
xor
ds
bnd
cmp
sahf
xor
rorl
movsb
jg
mov
gs
xor
aas
cltd
inc
mov
aas
stos
xchg
stos
pop
xchg
push
scas
jle
mov
xchg
lahf
pop
inc
insb
pop
addr16
insb
orb
xor
jecxz
fwait
pop
mov
adc
repz
fldenv
cmp
mov
dec
sti
mov
dec
idivl
test
push
xlat
add
lock
stos
loop
hlt
sbb
mov
enter
test
ffree
dec
rcll
push
mov
adc
pop
sti
jns
and
test
jne
xor
dec
js
add
je
and
int
clc
pusha
cmpsl
mov
or
and
or
test
cs
cmp
rcll
daa
xchg
or
cmp
test
addr16
cwtl
inc
aaa
jle
ret
loop
pop
cmp
movsb
lret
in
fs
adc
mov
xchg
or
lcall
test
sti
push
xor
lcall
push
or
shrl
jb
pop
mov
push
cmpsb
lods
stos
push
int
add
ds
dec
sahf
add
outsb
nop
sub
xchg
jns
xchg
filds
mov
lock
add
jae
ret
arpl
mov
lret
xlat
test
lock
and
fsubrl
mov
push
pop
cli
loope
sub
dec
call
es
bound
ret
pop
aad
xchg
add
fnsave
lods
sarl
pop
test
mov
das
movlps
jmp
fs
loopne
add
jne
in
hlt
xchg
jne
pop
fdiv
adc
pop
adc
jmp
xchg
dec
ret
imul
mov
sub
mov
lock
inc
or
xlat
sbb
mov
ja
pop
les
mov
xchg
push
int3
mov
sub
jnp
jne
xchg
ror
adc
xor
cmp
adc
xchg
lods
mov
mov
or
cmp
sub
lds
cltd
xor
fisubl
lcall
pop
cmpsb
mov
stos
xlat
hlt
mov
sub
push
and
shrb
push
mov
gs
imul
add
xchg
jo
and
daa
cmpsl
jno
or
dec
add
bound
inc
jl
pop
movups
lcall
scas
stc
push
sarb
pushl
roll
mov
pop
jle
add
sti
jmp
and
pop
shlb
jg
es
cmpsb
inc
mov
lock
jg
fistpl
xor
mov
nop
clc
jae
push
push
ror
das
push
das
add
add
leave
xor
jae
inc
insb
inc
shrl
or
mov
leave
add
mov
jo
repnz
sub
gs
push
int3
lahf
rorl
out
mov
sub
push
mov
push
ror
push
pop
mov
xchg
lret
push
mov
jmp
iret
leave
sub
mov
dec
out
bound
adcb
mov
push
popa
inc
jmp
pusha
loop
sbb
sub
sub
andl
pop
cs
sbb
inc
jno
xchg
les
in
adc
jl
dec
add
mov
out
loopnew
bound
popa
add
adc
gs
movsl
jns
or
loopne
mov
pop
mov
aam
dec
or
push
dec
pushf
pop
ljmp
pop
xchg
andl
push
mov
and
test
test
sbb
pop
xor
mov
pop
xchg
dec
clc
cs
aad
cwtl
xor
push
inc
sub
adc
in
in
loopne
xor
repnz
nop
dec
sub
mov
fsubrl
in
cmp
ja
dec
scas
out
dec
mov
hlt
std
out
add
push
int3
stc
adc
or
leave
dec
lret
test
pop
outsl
inc
lods
js
sbb
add
mov
mov
push
push
std
loop
push
mov
push
cmpsb
cltd
movsl
dec
jo
cld
fisttps
insl
mov
sub
hlt
stos
mov
sbb
aaa
and
int3
ror
in
adc
hlt
repnz
xor
mov
mov
fcoms
sti
mov
arpl
in
or
insb
mov
mov
fidivrs
popf
pop
jmp
ljmp
mov
mov
sbb
mov
jbe
es
insl
jnp
in
ljmp
cltd
push
mov
sbb
or
jmp
and
enter
mov
rcrl
mov
lea
inc
enter
cmp
cs
je
adc
int
xor
or
int3
shll
pop
divb
arpl
pop
and
out
xchg
inc
lret
mov
mov
fistpl
mov
ror
pop
ljmp
jne
jno
pushf
fwait
pushl
mov
outsb
scas
loop
mov
enter
cltd
mov
mov
lods
push
into
push
push
test
sbb
cmpsb
lcall
outsb
xchg
sar
cmpsl
mov
push
mov
shr
add
jns
mov
xor
jmp
aaa
je
jae
add
xchg
add
jb
scas
ds
in
iret
pop
pop
lods
push
add
sbbl
and
aam
mov
mov
xchg
sub
stc
incb
mov
loopne
cs
mulb
in
add
imul
pop
cltd
mov
hlt
cmp
shl
xchg
enter
ret
repnz
xchg
pop
sub
lret
out
sbb
ja
and
in
pop
mov
or
jmp
daa
lcall
ds
stos
ss
lods
daa
jmp
xlat
and
sbb
daa
jno
jo
addl
sub
mov
push
mov
xchg
into
add
inc
add
jb
jo
push
cmp
les
popa
shrl
stos
mov
fistpl
inc
jno
inc
mov
test
mov
stos
mov
cli
mov
or
sub
fisttpl
jbe,pt
push
les
cld
mov
push
outsl
or
xchg
lcall
into
jecxz
push
push
ficomps
push
js
movsl
divb
sub
cmp
pop
cmp
cmpsl
xor
lcall
xor
xlat
lock
adc
popf
ss
jmp
or
and
or
xor
xor
cwtl
bound
stos
push
jne
ss
sub
push
jmp
sub
mov
lods
icebp
sti
push
push
mov
pusha
mov
test
fs
xchg
sarb
test
pop
xchg
clc
push
xor
inc
jnp
fbld
or
cltd
xchg
call
pop
mul
enter
ds
loope
cld
jae
int3
clc
adc
out
arpl
add
pop
sti
lcall
mov
adc
fisttpll
punpckhwd
xchg
aas
add
fidivrs
lret
mov
ss
ficoml
in
mov
cmpsb
pushf
mov
push
xorb
jb
inc
pop
inc
dec
outsb
mov
jmp
jbe
or
movsb
mov
or
into
outsb
dec
sbb
lods
in
push
out
xor
cmc
iret
push
push
or
aaa
sub
stc
push
ret
cmp
in
push
and
add
add
lods
into
xchg
rolb
mov
addr16
push
jl
cmp
jge
push
mov
mov
sub
into
sbb
dec
xor
in
pop
test
fidivl
or
jb
jns
xchg
jo
insb
outsl
xor
aad
scas
lahf
xlat
sahf
fdivrs
lds
mulb
xlat
fidivl
xor
leave
xchg
out
sbb
fisttpll
mov
mulb
jne
jbe
inc
les
cld
xchg
sarl
int
mov
pop
scas
xchg
das
sbbl
jl
xor
mov
or
mov
and
addl
cmp
mov
dec
and
cmp
jg
scas
sbb
insb
dec
lds
cmp
cltd
popa
aaa
mov
cmp
sbb
loope
push
lret
pop
mov
outsb
mov
leave
movl
cld
or
fisubrs
adc
loopne
ja
lcall
sbb
cmp
popf
or
xchg
mov
insl
lahf
xchg
out
xchg
mov
stos
pusha
xchg
arpl
mov
sti
inc
js
outsb
mov
dec
jg
adc
out
xor
sahf
pop
xor
mov
bound
pop
clc
pop
fnstsw
data16
mov
jbe
fidivl
int3
test
xor
pusha
cmp
in
fwait
pushf
and
ds
pop
push
aas
shlb
popf
dec
xchg
mov
cmpb
int3
das
and
arpl
div
push
jo
filds
xor
inc
push
gs
sahf
sbb
mov
sbb
mov
iret
imul
rcl
cli
shlb
sbb
test
pop
dec
xchg
sub
fimuls
pusha
mov
fimuls
popa
in
push
adc
shl
andb
int
sahf
xor
scas
sbb
jecxz
sbb
test
cmc
mov
dec
mov
in
push
sub
lea
or
cmc
adc
lret
les
lcall
cltd
aaa
cltd
icebp
mov
cwtl
lahf
outsl
or
mov
shrl
jg
in
push
jns
xchg
loopne
mov
dec
push
int3
inc
xchg
pop
fsts
push
push
push
je
imul
in
xor
inc
mov
mov
adc
ret
xchg
addb
push
mov
mov
mov
mov
mov
in
and
xchg
clc
mov
cmp
fadds
repz
movsl
sbb
push
fstp
inc
and
fistl
push
push
xchg
xor
push
inc
push
lcall
out
pop
in
hlt
cli
add
sbb
add
mov
mov
mov
fmul
sub
fnstcw
mov
mov
mov
dec
int3
sbb
push
clc
sti
xor
push
in
and
jae
xchg
cld
incb
xor
js
pop
std
rcll
mov
cmpsb
jnp
inc
daa
rolb
dec
jae
sbb
mov
push
popf
cmp
cmc
or
in
pop
pop
loopne
sbb
cmpl
data16
mov
out
xlat
mov
cmp
inc
cmp
sarl
mov
sub
sub
clts
imul
xlat
xchg
mov
xor
push
sahf
pop
loopne
push
rcrl
sbb
lret
bound
sub
ljmp
pop
fists
movb
shll
addr16
js
inc
aam
pop
ljmp
sahf
inc
sbb
cmp
ds
xchg
arpl
sub
lcall
push
push
loope
push
and
cld
and
and
ljmp
push
and
inc
sbb
les
pop
dec
mov
push
and
adc
mov
mov
xchg
jp
push
push
xchg
out
xchg
push
cli
mov
stc
imul
scas
mov
sub
adc
addl
fnstenv
mov
test
rorb
cwtl
shlb
adc
or
lcall
ja
push
xchg
lds
or
xchg
addb
mov
sarl
mov
int3
jmp
xor
add
cmp
bnd
test
inc
adc
pop
dec
pop
out
lahf
jo
ds
cltd
ss
add
sub
push
adc
aad
js
pop
in
fidivrs
hlt
dec
iret
adc
xor
and
inc
fisttpl
sbb
mov
cmp
nop
ret
jg
adc
cmpsb
pop
and
ja
cs
add
inc
in
mov
xlat
insb
shrl
push
movsb
lds
and
fisttpll
je
pop
dec
jns
pop
out
cmp
or
mov
dec
in
jp
cmc
ret
adc
push
int
adcb
pop
leave
add
add
fcmovnu
loopne
loopne
mov
int3
sbb
add
popf
sti
arpl
shrb
rcr
mov
sbb
jbe
dec
sbb
mov
stos
ljmp
lahf
ret
xchg
dec
cld
mov
cmp
mov
repz
sarb
and
cmp
rorb
lcall
cmp
icebp
lea
pushf
cmp
and
out
mov
and
mov
rol
mov
jns
mov
mov
add
add
subl
inc
sub
cmp
ljmp
jne
test
mov
ficoms
popa
inc
fcomps
je
or
sub
and
dec
inc
ss
call
xchg
xchg
in
out
xor
pop
mov
outsb
outsl
aaa
insl
or
decl
movsb
cmp
sub
mov
pop
icebp
cmp
jmp
mov
js
es
sbb
cmp
mov
mov
adc
jbe
loope
inc
xchg
divl
enter
in
mov
xchg
lds
push
adc
add
and
push
les
nop
pusha
adc
imul
adc
clc
and
cmp
or
and
sbb
addr16
jne
clc
movsb
mov
out
jns
ss
movsl
or
pcmpeqw
push
cmp
pusha
je
push
lcallw
fucomp
mov
dec
xor
aaa
sbb
mov
and
je
sub
enter
adc
mul
ret
xchg
stos
test
adc
xor
mov
xor
pop
mov
mov
mov
add
sub
out
xor
lret
test
pushf
xchg
jge
push
outsb
push
jge
shrb
jno
in
dec
dec
xor
test
inc
xchg
push
shlw
pusha
xchg
xchg
xor
mov
and
mov
add
ss
pop
call
cs
add
push
xor
push
lock
je
divb
pop
xchg
rcrb
and
push
push
ficompl
hlt
pop
scas
xor
jg
mov
jo
arpl
push
aad
clc
aad
jns
xor
out
sub
jno
push
lret
sahf
lods
or
pop
xchg
jle
popa
daa
pop
insb
pop
cmp
dec
jl
mov
int3
jbe
sub
jo
mov
xchg
xor
mov
mov
gs
faddl
out
sub
hlt
test
pushf
inc
xchg
push
imul
int3
cwtl
pushf
clc
jnp
or
das
mov
inc
movsb
test
xorl
into
shll
aad
jecxz
leave
xlat
add
add
je
adc
add
and
jb
movsl
jecxz
stos
pop
lret
outsl
filds
loop
and
xor
fmuls
outsl
jne
pop
arpl
xor
push
stc
lock
mov
mov
rcr
pop
loope
adc
pop
push
and
xor
test
sbb
or
adc
jle
xor
inc
movsb
xchg
and
dec
jne
orb
movsl
cmp
icebp
shrb
out
mov
shlb
decb
daa
shl
imul
push
popa
lds
cmc
lret
pop
fildll
in
xchg
cmp
push
outsl
and
mov
or
mov
movsb
ljmp
push
mov
xchg
sbb
adc
xchg
dec
out
mov
addl
xchg
mull
mov
sub
pop
and
sahf
test
test
stc
xchg
out
fisubs
adc
hlt
xorl
insl
in
mov
sub
mov
xor
ds
das
mov
dec
mov
push
cmpsb
stc
test
inc
adc
mov
arpl
push
test
ds
xor
lods
fwait
dec
jle
adc
aam
lcall
cmc
lods
push
and
push
icebp
xchg
cwtl
addr16
mov
aad
andl
mov
jmp
ljmp
lahf
loop
fidivl
sub
lock
xor
mov
data16
inc
push
push
loopne
pop
rcrl
pop
incl
sbb
insl
lahf
push
stos
add
out
in
jg
fldenv
mov
out
push
jmp
sub
jmp
mov
ljmp
lcall
in
aaa
add
aam
ja
fiaddl
push
sbb
enter
push
push
dec
pop
sub
fldcw
insl
ret
test
mov
shll
cmp
and
inc
mov
fsubs
push
in
stos
sub
ljmp
xor
xchg
jmp
jns
cld
psubb
insb
xchg
sar
cwtl
inc
push
jno
cmpsl
or
test
xchg
inc
loop
jo
sub
jp
jbe
push
lock
pusha
inc
dec
mov
pushf
pop
jg
rclb
repz
outsl
adc
lock
and
and
sbb
not
mov
xchg
cmc
add
adc
or
mov
sub
dec
xchg
pop
or
mov
pop
and
bound
xchg
sub
popa
cltd
out
lods
rep
mov
les
adcb
xor
dec
loopne
hlt
ss
sahf
xorb
mov
cmp
aam
add
mov
loop
movsb
imul
das
aam
in
or
icebp
sub
mov
add
push
test
xlat
mov
pusha
lods
lret
dec
lock
jle
pop
mov
and
adc
aad
xchg
movsb
aad
popa
lds
pop
sbb
roll
aas
cli
das
mov
xor
dec
out
jl
dec
test
out
cld
je
dec
jno
mov
mov
cmp
sbb
jmp
out
xor
push
and
stc
sub
xchg
and
ja
aas
mov
aas
mov
cmp
das
sub
mov
jo
scas
insl
shlb
aam
cmp
jnp
adc
movsl
ljmp
es
or
cwtl
xor
add
or
xlat
test
lods
mov
and
add
mov
push
sbb
orl
xchg
push
mov
xor
int3
nop
jnp
xchg
sub
push
paddsw
arpl
inc
scas
loopne
mov
push
test
or
add
cli
nop
lret
mov
enter
fstpt
aad
fistpl
iret
mov
xchg
in
mov
dec
mov
lcall
and
add
imul
jmp
cwtl
fistpll
scas
call
bound
push
inc
mov
jae
push
xchg
shrb
inc
cwtl
mov
popa
cmp
sbb
leave
fsubrs
jmp
adc
fcoml
mov
xchg
jmp
cmp
cmpsb
ja
mov
cmpsb
jle
push
mov
sbb
ret
adc
xchg
lret
pop
add
in
pusha
cmp
push
inc
cmpb
popf
jg
cmp
push
pusha
sub
mov
notb
popf
fisttps
out
rorl
sub
ret
bound
fnstsw
xor
repz
pusha
push
inc
mov
cwtl
jl
call
int3
call
sbb
test
jne
ja
add
mov
mov
loopne
inc
pop
sbb
into
pop
sbb
test
loopne
sti
cmp
cs
adc
xchg
fists
mov
inc
mov
mov
dec
inc
sub
or
xchg
pop
inc
push
inc
roll
mov
pop
les
je
dec
leave
cmp
add
jbe
mov
int
xor
fistpll
and
sbb
adc
loop
out
adc
jnp
xor
jbe
add
ret
testl
mov
mov
adc
pop
cld
out
cmpsb
ret
aam
pusha
je
mov
xchg
dec
xchg
in
pop
jge
push
mov
mov
sbb
pusha
push
or
pop
xor
test
ret
hlt
idivl
pop
xchg
mov
lods
mov
shl
js
push
inc
jl
jnp
inc
fisubrs
mov
lahf
sar
inc
loop
or
mov
popa
ljmp
lret
lea
or
pop
and
xor
pop
js
test
inc
or
jo
inc
test
addl
inc
out
sub
or
and
scas
cmp
xor
cmpsl
dec
or
in
or
or
mov
xor
jg
fildll
lock
addr16
cmp
lock
xchg
and
fdivs
jmp
iret
mov
inc
xlat
xor
push
dec
mov
sub
lock
push
mov
push
lret
xchg
add
dec
call
nop
and
jl
enter
lds
add
mov
cmp
add
jp
cltd
push
loope
adc
and
rolb
add
test
pop
dec
mov
adc
mov
push
xchg
push
sub
test
daa
scas
dec
cli
pusha
jg
shll
sti
cmp
xchg
cmp
sub
in
ret
and
or
rclb
mov
pop
push
or
add
fistpll
dec
mov
clc
aas
cmpsl
imul
pop
fisubl
rolb
cmpsl
insl
jg,pt
out
rclb
push
arpl
popa
inc
mov
insl
into
in
jae
xchg
aad
push
in
and
mov
repz
pop
lea
call
imul
add
inc
inc
outsb
xchg
movsl
aad
pop
xchg
lods
outsl
sbb
xorb
jno
fmul
fiaddl
js
lret
mov
xchg
aaa
jne
shr
jg
cmp
shll
insb
sub
gs
sub
nop
mov
mov
or
cmp
jle
aad
xchg
push
and
and
out
sarl
lret
jae
imulb
mov
xchg
push
adc
mov
dec
imul
sbb
je
iret
cmp
add
aam
push
test
loopne
mov
sub
xchg
std
adc
add
and
sub
movsb
cwtl
lea
repz
rorb
and
jb
in
nop
sub
lock
scas
pop
scas
sbb
roll
add
ret
mov
jmp
adc
xchg
and
fists
pop
roll
jmp
xchg
pop
imulb
jns
out
lock
in
int3
shlb
ja
xchg
sub
mov
pushf
sub
inc
mov
adc
push
loope
jecxz
iret
test
and
jo
cmp
leave
sub
adc
adc
subb
mov
or
or
ret
mov
les
pop
xchg
cltd
outsb
scas
loopne
xor
xchg
mov
fwait
jmp
mov
and
sbb
xchg
cmc
cltd
inc
cmp
and
jo
aaa
mov
sbb
nop
pop
inc
pop
fisubl
inc
jge
push
fisttpll
adc
dec
int
mov
jge
xchg
sahf
mov
mov
xchg
loop
pushf
iret
shll
ret
ss
jbe
sbb
cmc
cmp
iret
xor
push
stos
sub
sbb
adc
and
lret
hlt
out
dec
push
ljmp
out
push
push
std
fstps
pop
cs
jp
inc
dec
jecxz
pop
test
lahf
sbb
sti
xor
in
insb
repnz
cld
adc
fwait
inc
sub
jno
lock
iret
adc
aad
sub
xor
sub
leave
mov
pushf
sub
fnstenv
mov
add
fadds
and
sub
es
imulb
sub
stos
mov
pop
cmp
mov
adc
daa
or
cmp
js
insl
repz
jae
scas
xor
dec
sbb
mov
push
in
les
dec
aaa
icebp
add
and
sub
pop
aaa
pop
push
mov
ret
fwait
adc
mov
lods
push
lds
push
pop
into
adc
jmp
xor
gs
cmp
mov
inc
mov
sbb
push
fistpl
fs
ja
mov
jo
in
xor
call
jl
mov
sbb
push
lods
pop
aaa
dec
mov
xor
add
es
and
jl
aad
xchg
outsl
ja
je
and
loop
std
xor
xchg
jge
fistps
dec
mov
mov
xchg
or
push
scas
jecxz
aam
mov
jo
inc
aad
xlat
or
ss
pop
add
ds
jl
cli
sbb
sarl
or
mov
insl
sbbl
xchg
and
lock
lods
xchg
sub
adc
bnd
daa
mov
ljmp
xor
ret
xor
rol
mov
mov
adc
add
xor
sarl
push
into
rcr
std
add
movsl
add
push
into
pop
and
shll
pop
cmp
mov
cmp
sbb
ret
add
clc
cwtl
outsb
fdivl
aam
cmp
pop
or
mov
adc
inc
enter
mov
or
xor
sub
popa
jecxz
mov
idivb
dec
mov
int3
data16
pop
shl
lods
add
cwtl
or
pop
out
dec
shr
mov
dec
mov
insl
testb
xchg
mov
push
pop
jo
mov
add
add
imul
into
dec
sbb
out
out
ljmp
pop
add
cmp
inc
jp
push
xor
push
cmpsl
sbb
push
enter
push
cmpsl
imul
fs
lock
shlb
pop
sti
pushf
fs
adc
xchg
stc
jge
xor
or
pusha
jecxz
dec
nop
shll
stos
pusha
cmpsl
jp
pop
insl
pop
call
xor
sbb
add
test
clc
insb
push
incb
cmpsb
pop
cmpsl
push
cmp
mov
stc
xchg
dec
fadds
mov
add
arpl
xchg
adc
lret
pop
enter
xor
cmp
in
or
mov
mov
sub
add
xchg
push
dec
push
pop
xor
push
jo
out
add
lret
lods
fmuls
jb
pop
cld
inc
popl
repz
hlt
jmp
loop
or
movsl
push
notb
cld
xchg
pushf
aas
js
and
push
push
mov
call
outsb
jle
cmpsb
pop
pop
insl
mulb
mov
and
stos
dec
cmp
jne
cltd
pop
push
jl
cmpb
lahf
test
xchg
ja
mov
pop
arpl
enter
mov
aaa
xlat
mov
sub
leave
pop
stc
inc
pop
mov
pop
sbb
xor
sub
imul
or
inc
sub
cs
mov
push
mov
addr16
add
dec
xor
push
mov
jno
jbe
push
lret
xchg
push
in
mov
outsl
pop
gs
sarl
dec
movsb
xchg
jg
xlat
hlt
add
and
xchg
loopne
aaa
cmp
ret
lahf
cmp
or
test
bound
nop
dec
sbb
fnsave
popa
xor
mov
iret
lods
scas
pop
sti
sbb
sbb
xor
pop
push
test
add
mov
push
add
jl
insb
add
test
mov
cmp
sbb
in
pop
test
jo
outsl
or
adcl
les
fdivl
cmpsl
outsl
jmp
mov
mov
fstpl
cmpsl
sbb
enter
std
sarb
jne
lret
push
dec
mov
arpl
or
jp
jno
jnp
pop
mov
adc
cmp
repnz
xchg
cmp
adc
and
sbb
or
sbb
cmp
in
cmp
fmul
pop
aas
scas
mov
and
test
jns
pusha
jo
xor
jbe
std
xor
in
mov
mov
aas
jecxz
jbe,pn
sub
or
lock
dec
or
dec
push
cmpxchg
push
lret
mov
cmp
mov
push
cmp
mov
and
cld
sub
mov
jmp
icebp
out
repz
or
xchg
push
notb
or
pop
andl
popa
repnz
sub
sub
or
test
xor
add
repz
sbb
push
repz
idivl
xor
cmpl
sahf
js
cmp
push
or
in
and
cltd
sarl
pop
and
daa
adc
faddl
push
and
add
xchg
mov
cmpsb
push
mov
mov
sti
outsl
repz
lahf
add
mov
aaa
int3
out
out
mov
push
fwait
adcb
mov
popa
lock
sahf
cmpsl
jle
pop
ja
xchg
pop
test
popf
fstpt
hlt
jecxz
dec
cmp
and
in
insl
nop
out
jle
fbstp
fidivl
data16
movsl
cmp
jo
jecxz
sub
or
sarl
push
test
xchg
xlat
mov
outsb
nop
add
fisttpll
add
dec
cmc
jnp
mov
mov
add
push
adc
jmp
add
mov
cmp
add
sarb
adc
mov
daa
push
cmp
add
cmpsb
and
xchg
pop
nop
xchg
push
lret
cld
sti
sub
cmpsb
pop
stc
xor
push
das
jl
bound
cmp
or
imul
iret
xchg
sbb
and
fldl2e
lea
pop
inc
jne
lcall
jmp
xchg
outsb
add
xorb
sbb
or
xchg
cs
enter
sbb
sub
ficoml
jge
gs
out
inc
lods
mov
lcall
insl
push
mov
xchg
movsb
vpsubusw
cmpsb
mov
aad
sub
adc
or
sbb
sahf
repz
mov
push
test
ss
in
pop
push
or
aad
xchg
lds
ja
or
sub
mov
pop
jge
xchg
stos
sbb
xor
xchg
adc
fstl
or
loope
movsl
adc
cmp
sbb
jl
icebp
cmp
jl
push
stos
in
dec
push
mov
fsubrl
jne
in
aas
jp
in
mov
cld
shll
mov
or
inc
mov
mov
jns
inc
lcall
rclb
mov
cmp
and
inc
add
adc
push
addl
fildl
popf
lea
jno
sbb
xchg
rorl
pop
mov
out
dec
push
add
mov
je
enter
js
xchg
xor
mov
cmp
xchg
fmuls
loopne
pop
xchg
jno
lea
pop
je
std
jg
das
aas
aad
sbbb
inc
adc
ja
stos
cs
mov
loop
sbb
push
sti
aas
jg
je
xor
lret
add
scas
sbb
xchg
xor
mov
mov
jmp
add
pop
insb
pop
or
and
mov
pop
sti
add
mov
mov
dec
inc
inc
pushf
orl
mov
inc
jnp,pn
push
ret
shl
dec
pop
cmc
mov
imul
inc
cmp
cltd
ret
and
pusha
sub
push
pop
inc
mov
cltd
jmp
outsb
xchg
or
push
push
jg
inc
test
movsb
mov
adc
aad
call
loopne
ret
pusha
sbb
cmpsl
inc
fidivrs
icebp
cld
movsb
or
mov
mov
pop
jnp
leave
ret
clc
loope
xchg
add
jo
sti
arpl
lods
or
and
fisubs
push
cmp
mov
xor
push
sub
lret
lods
insb
push
loopne
aaa
cmpsl
inc
movsb
pop
or
jbe
sbbb
fwait
cmp
push
xor
push
test
push
imul
and
mov
ficoml
xchg
mov
sub
jnp
lret
push
cmpb
sti
movsb
in
pop
stc
cmp
xor
nop
mov
movsb
and
fcmovnu
push
or
std
pop
push
mov
fsubrs
cltd
cmp
loopne
sbbl
insb
mov
unpckhps
ret
int3
jae
movsb
mov
sbb
adc
add
add
sbb
imul
gs
push
sbb
push
sti
xchg
jno
test
inc
lods
push
jge
pop
mov
xor
or
jp
fisubrl
fsubs
add
fsubl
push
sub
mov
push
push
aam
sub
cmpsl
jl
andb
push
pop
xor
idivb
cli
mov
and
movsl
xchg
jmp
sti
mov
mov
arpl
jne
jae
pop
loope
movsb
cmp
add
outsl
lods
enter
imul
stos
jmp
mov
sbb
orl
mov
cmpsl
mov
add
push
pop
mov
jge
decl
or
rcrl
xchg
imul
or
xchg
jecxz
fdivr
xor
lods
mov
imul
sub
cltd
or
push
cltd
add
pop
loopne
rcrl
cltd
inc
movsb
insl
mov
fidivrl
shll
and
iret
adc
out
sub
in
push
pop
jp
pop
push
push
cwtl
xor
call
mov
mov
pop
jmp
push
adc
push
xchg
mov
cmp
aas
aas
movb
shlb
adc
cli
cmpb
mov
int
andb
jno
jb
ja
subl
ja
fwait
sub
sbb
fadds
fs
ret
mov
or
jecxz
jbe
xchg
inc
xor
add
lock
dec
mov
xor
mov
jne
xor
adc
scas
xchg
cli
outsl
insb
cmp
dec
je
das
ret
mov
ficomps
or
pop
mov
pop
in
clc
push
sti
xchg
add
add
aam
aas
adc
xchg
sahf
mov
dec
xor
js
add
sahf
pusha
mov
ja
push
pop
push
xchg
adc
mov
popf
sarl
rcpps
jp
lcall
repnz
sub
dec
aad
sbb
push
xbegin
test
pop
bnd
dec
add
xchg
test
pop
jbe
cli
jge
cmp
add
adc
aaa
xchg
fsubrs
xor
and
sub
cmp
pop
jg
and
ds
sub
shrl
adc
or
mov
mov
sub
imul
sbb
pusha
shll
dec
xchg
dec
inc
dec
xor
pop
mov
push
data16
test
pop
xor
daa
movsl
rdpmc
add
or
xchg
pop
jno
sbb
scas
daa
lret
or
pop
cmpsb
in
mov
mov
test
popf
adc
cmp
fs
icebp
fcomp
test
mov
xchg
jbe
mov
loop
hlt
sarl
movsl
popa
in
xchg
imul
push
cmc
inc
int3
out
xorb
mov
adc
dec
lods
jno
repnz
dec
push
or
adcl
imul
repz
arpl
lahf
rcrb
xor
push
cmp
jno
dec
sbb
mov
cmp
test
xchg
enter
or
stos
jp
xor
jp
into
imul
or
push
in
mov
mov
subl
fbstp
fisubl
adc
jns
adc
popf
cltd
pop
mov
pushf
arpl
sbb
call
adc
mov
js
push
or
and
dec
or
xchg
jns
aas
rol
nop
stc
pop
xchg
hlt
mov
push
jmp
pop
cmp
enter
scas
movsb
xor
cmp
xor
mov
pushf
add
adc
sarb
add
sbb
dec
lods
add
out
test
mov
jno
xchg
daa
lock
movsl
pop
fldlg2
cmp
insl
in
pusha
inc
mov
test
loope
jmp
out
lret
and
push
imul
in
lcall
dec
push
mov
fwait
sub
or
dec
out
out
jnp
inc
cwtl
sub
dec
fistpll
icebp
aam
cmpsb
subl
sti
es
and
lds
pop
sub
int
jbe
xor
iret
in
sti
mov
adc
cld
cltd
fisttpl
outsb
lods
fcmovb
aaa
inc
and
mov
dec
call
sub
and
pop
lock
jp
loop
int
out
out
iret
std
inc
call
mov
mov
pop
cmpsb
test
fsubl
xchg
daa
sub
sbb
dec
xor
fiaddl
out
roll
nop
mov
mov
aaa
xorb
jge
wrmsr
xchg
sbb
cmp
hlt
popa
mov
inc
inc
aas
out
xchg
pop
rorl
pusha
inc
xchg
clc
ss
pop
and
testl
cmp
fs
out
insb
test
into
pop
add
push
aaa
pop
loope
loopne
nop
jmp
push
bnd
ja
push
cwtl
fldl
adc
xchg
cld
lret
outsl
xor
popa
jb
stos
add
mov
mov
and
mov
mov
push
ret
outsl
mov
xchg
xor
or
loop
mov
das
xor
sub
pop
push
imul
fdivl
sbb
ss
jmp
fsubp
jb
add
xchg
fnsave
aam
mov
in
ds
pop
cmp
sub
lds
jb
in
fadd
fucomp
clc
incb
movsb
movsl
mov
add
dec
pcmpgtb
dec
lds
mov
sbbl
mov
mov
add
insb
push
js
add
cli
adc
pop
rorl
push
mov
jecxz
in
stc
mov
enter
mov
xor
lcall
out
adc
push
mov
mov
incb
mov
sub
insb
lret
jmp
mov
xor
mov
inc
and
into
test
mov
xchg
mov
outsl
and
mov
in
fstpl
notb
xor
addr16
cmp
das
add
out
push
push
inc
aad
mov
and
adc
jae
add
pushf
and
adc
mov
out
mov
sbb
out
movb
push
jae
lahf
inc
cmp
jae
pop
pop
ret
xor
dec
sub
inc
push
sub
lcall
es
out
cmp
leave
sahf
fiadds
loope
fldl
jle
arpl
imul
sub
mov
outsb
xor
fbstp
int
mov
call
dec
negb
pop
lds
mov
adc
xchg
out
cmp
rcll
adc
push
xlat
or
cs
into
lods
inc
cmpsl
or
fidivs
icebp
pop
jle
fmul
jo
inc
push
xorl
inc
mov
inc
negb
lret
sub
scas
or
mov
jnp
jnp
xchg
jne
arpl
cmpsb
pop
rcll
movsb
dec
clc
jmp
sub
pushf
jnp
adc
int
hlt
mov
dec
lahf
fcoml
cmc
nop
insl
push
adc
xlat
mov
mov
loop
inc
push
fldt
and
mov
loop
inc
dec
imul
inc
sbb
jbe
xchg
cmpsl
std
adcl
lcall
adc
stc
lods
xchg
enter
add
cmp
push
repnz
popa
in
push
adc
xor
fldenv
pop
imul
add
mov
popf
mov
push
testb
push
idivb
or
inc
jmp
mov
jae
stos
dec
aaa
fsubrl
pusha
mov
add
add
stos
leave
es
ficoml
cli
pop
jno
jb
xchg
std
adc
int
insl
adc
lcall
inc
inc
mov
pop
or
imulb
stos
sti
mov
insl
and
mov
scas
sbb
push
cld
and
sbb
shr
fistps
inc
adc
jl
fcom
or
pop
push
test
mov
mov
pop
and
mov
dec
imul
clc
dec
or
dec
xor
fstp
add
lock
aam
jecxz
ret
arpl
stc
popf
add
nop
xchg
cmpsl
push
mov
ffree
mov
xor
ret
jns
cmp
mov
aas
jle
push
jg
cli
pusha
int3
loopne
dec
aaa
dec
xchg
dec
out
aaa
pop
fnstsw
ljmp
out
enter
add
sbb
insl
jl
xchg
imul
mov
sub
pop
lahf
xchg
add
sbbb
hlt
xchg
xchg
sbb
ljmp
scas
fucomip
jns
ja
sahf
arpl
cmpsb
pop
pop
sbb
xor
sub
mov
cmp
jl
mov
pop
xchg
mov
sti
es
out
cltd
mov
jl
mov
cmpb
pop
repz
xchg
test
js
ja
fisttpll
pop
std
sub
xor
mov
pushf
or
test
fdiv
push
imul
in
pop
xor
cmpsl
mov
push
pop
test
fs
repz
lock
stc
movsb
jns
clc
test
scas
aas
pop
loope
shlb
int
pop
cmp
and
popf
sub
rorl
orb
push
push
mov
jns
daa
pop
loopne
pop
outsb
shlb
mov
sub
test
dec
sahf
mov
ja
aad
sub
lds
sub
push
insb
push
pop
out
mov
mov
jo
imul
cli
mov
dec
cli
hlt
movsl
cltd
dec
imul
ljmp
and
imul
xchg
ja
popf
out
push
movsl
hlt
scas
fsubr
pop
insl
mov
and
cmp
into
rcrl
aas
pusha
add
mov
sti
pop
out
xor
movlps
fidivs
inc
iret
add
outsb
sub
mov
cmpsb
adc
rcrb
xacquire
mov
lock
lods
lock
xor
fnstenv
dec
add
sub
pmullw
add
push
cmp
jmp
inc
aad
sub
aam
ljmp
xor
mov
fisttps
faddp
les
jne
mov
shll
data16
fidivl
inc
in
dec
nop
fs
jecxz
sub
pop
or
cli
clc
call
cli
mov
sahf
jle
hlt
rcl
sbb
jno
sbb
lods
inc
xor
adc
mov
mov
pushf
aam
sbb
mov
out
pop
pusha
mov
or
lret
scas
jle
sbb
nop
mov
add
sub
cmpsb
popf
push
inc
pop
sbb
xchg
add
dec
xchg
dec
push
mov
js
cmp
push
imul
fstpt
test
lret
loope
ja
jne
cmp
or
or
aam
sbb
test
lret
pop
ss
lock
mov
mov
mov
jae
adc
add
cmpsb
push
push
adc
cmp
jne
ds
and
popf
movsl
insl
leave
repnz
loop
aam
cmpsl
cmp
pop
out
sbb
jnp
lds
jns
imul
add
enter
lods
sbb
mov
loopne
movsl
jl
adc
stos
out
or
rcrb
sub
xchg
ljmp
xor
or
xchg
xchg
sub
xchg
push
jb
pop
cld
pop
mov
roll
sti
in
mov
adc
adc
enter
lret
cmpsb
divb
mov
mov
sbb
hlt
loop
icebp
inc
jns
stc
shr
sub
dec
mov
dec
mull
mulb
test
les
jae
push
or
std
push
mov
fwait
cmp
icebp
add
sbb
test
push
lret
xchg
lret
nop
jle
pop
cmp
pusha
mov
sbb
stos
mul
jb
test
mov
rcrb
jp
add
mov
mov
insb
push
jle
xchg
push
nop
popf
and
bnd
sbb
es
and
jno
xor
mov
jb
shlb
mov
adc
enter
xchg
repnz
mov
mov
insl
aam
imul
adc
add
jo
mov
repnz
jae
shll
push
aas
fwait
mov
stc
loope
pop
adc
adc
add
shufps
or
cmp
add
lds
inc
dec
adc
pop
aaa
fsubrl
outsb
fimull
push
jns
mov
std
stos
jbe
dec
aaa
push
in
mov
arpl
lods
loopne
dec
imul
fwait
test
adc
add
ss
cmp
xchg
push
xchg
xchg
aas
stos
and
mov
jbe
in
insb
fsubr
sub
sbb
push
call
dec
push
cmp
jmp
movsl
xor
test
or
jbe
ds
or
jmp
das
inc
push
frstor
out
inc
push
pusha
and
push
outsb
iret
stos
pop
mov
mov
inc
dec
out
aas
idivl
pop
mov
pop
shlb
add
mov
mov
ds
daa
outsl
cmp
adc
jo
xchg
pusha
lds
verr
lock
out
sbb
jns
mov
xor
int3
je
xchg
insl
bound
ja
lock
pop
xchg
xchg
pop
cmc
dec
xchg
xlat
dec
adc
add
jo
mov
dec
lea
addr16
fwait
out
jmp
jns
xchg
mov
adc
push
add
jne
dec
sub
mov
sub
xor
dec
pop
fcompl
xchg
mov
test
in
jmp
js
repnz
inc
call
and
sarl
in
xor
adc
sbb
je
sti
inc
incl
mov
xor
mov
pop
sbb
daa
popa
imul
mov
xlat
xchg
je
aad
insb
mov
pop
cmp
mov
mov
sbb
outsb
push
push
or
iret
fidivs
ret
popf
leave
adc
mov
and
dec
xor
mov
xchg
test
jno
and
in
stos
outsb
pop
popa
dec
stos
sub
mov
test
test
flds
dec
pop
push
aaa
cmp
repz
scas
call
mov
push
scas
loope
xor
mov
aaa
xor
adcl
sbbl
in
test
cli
xchg
jmp
loopne
adc
jae
das
dec
push
push
push
dec
push
push
xchg
mov
sbb
dec
insl
push
xlat
icebp
outsl
scas
aaa
fisubl
lds
jnp
or
xorl
lods
xlat
dec
pop
xchg
push
scas
push
iret
int
rolb
add
mov
jae
jl
push
outsb
mov
cmp
mul
aam
add
fsubrs
cmp
mov
adc
sub
pushf
mov
nop
in
lahf
adc
fwait
dec
lcall
dec
inc
dec
jne
push
ljmp
dec
mov
inc
or
or
lock
call
mov
imul
push
cmp
adc
or
add
mov
mov
jno
loope
fcoml
jmp
dec
loopne
addb
jg
jns
mov
jg
cmp
out
in
mov
adcl
movsb
stc
sbb
jne
push
cmp
xchg
xor
and
dec
scas
or
aas
jb
packssdw
imul
xchg
mov
xor
sbb
inc
rclb
adc
aas
mov
divb
pop
dec
pop
mov
insl
push
mov
fbld
mov
mov
icebp
shrl
fcoml
insl
or
sbb
pop
or
push
and
nop
push
scas
cli
shlb
push
or
pop
jns
aas
and
lret
mov
push
fsubs
jmp
add
imul
sti
subl
out
and
in
push
test
jg
push
push
in
push
xlat
jne
xlat
int
cmp
arpl
repnz
fistpll
push
cmp
inc
push
inc
fdivr
mov
xor
test
jnp
mov
popa
inc
mulb
stos
lods
movsb
jne
rorb
xor
and
sbb
adc
mov
mull
sub
aad
vprotw
out
xchg
xor
sub
std
and
cmp
mov
add
psubsw
inc
mov
mov
lods
test
jne
aad
subb
adc
jp
and
inc
push
mov
mov
inc
xor
out
add
add
cmpsl
cmp
mov
imull
or
incl
retw
je
pop
jo
mov
test
inc
lock
rorl
mov
inc
out
sahf
add
jbe
cmp
jecxz
loop
pop
and
ret
out
scas
loope
flds
xchg
test
mov
xchg
adc
sbb
inc
push
ja
pop
shlb
push
je
outsb
test
out
sarl
mov
mov
lret
xchg
cli
loop
aaa
push
mov
inc
sbb
adc
dec
fwait
stos
ret
dec
je
push
mov
jmp
mov
loop
push
inc
fildl
repz
cmp
mov
sbb
icebp
push
stos
std
loopne
pushf
les
out
jae
pop
or
insb
imul
cmpsb
fcompl
sbb
sbb
dec
aas
and
pop
add
or
jmp
inc
pop
in
mov
shlb
jb
add
xor
or
xor
xor
adc
jb
dec
adc
rclb
push
mov
and
fidivl
mov
dec
cmp
mov
mov
loop
fisttpll
int3
add
pop
in
lea
xchg
jge
xor
std
mov
jl
paddd
mov
lcall
in
fcomps
push
xor
pop
jl
push
mov
push
lahf
jbe
ret
xchg
movsb
gs
in
lods
sub
adc
aas
xor
sub
inc
xor
jnp
andl
rcll
or
int
loopne
nop
and
mov
insb
je
xchg
push
mov
inc
adc
or
imul
dec
fsub
cmp
int
and
mov
mov
out
fdivrl
daa
add
js
cmpsb
loopne
mov
xchg
dec
dec
mov
sbb
lods
cmc
sub
jmp
jb
lds
out
mov
fs
mov
ffreep
push
cltd
outsb
test
adc
in
jle
lea
jo
inc
aam
rcll
repnz
or
jmpw
cmpsb
out
mov
xchg
xchg
scas
lret
adcb
enter
cmpsb
xchg
clc
adcb
ret
or
or
xchg
or
mov
cmp
jecxz
nop
add
mov
pop
mov
or
inc
adc
in
cmpsb
pusha
cmc
cmpsl
cmpsl
pusha
mov
push
sti
pop
push
lret
iret
inc
cltd
int3
loop
sub
and
insb
aaa
fs
mov
mov
add
faddl
pop
shr
and
pop
pop
dec
stos
jl
xchg
lock
inc
adc
push
lea
pop
jl
insb
cli
pusha
out
cmp
imul
sbb
fstpl
xchg
scas
push
cs
outsb
into
jp
mov
sub
imul
add
cwtl
loope
fldenv
popf
jge
hlt
inc
inc
mov
pop
popa
imul
fbld
fisttps
pop
cmp
inc
sub
cmp
push
xchg
bound
lret
mov
test
jnp
add
fcomp
mov
mov
std
sbb
push
int
xor
mov
inc
mov
pop
push
xor
sbb
jmp
mov
dec
mov
adc
add
aad
push
enter
outsl
and
stc
pop
lods
xlat
jne
lods
cltd
dec
cs
mov
and
test
shl
jg
lods
mov
and
enter
sbb
fdivl
lds
mov
add
ja
add
shlb
shlb
in
ljmp
xchg
mov
and
sub
ljmp
movsl
adc
push
pop
in
rcl
dec
inc
push
pop
iret
pushf
pushf
aam
pop
icebp
gs
mov
push
xor
xor
inc
or
jp
cmp
xor
mov
add
push
jmp
mov
fistl
push
imul
xchg
add
xor
sub
iret
mov
in
insb
mov
mov
cltd
sahf
dec
and
shlb
repnz
add
aaa
mov
push
ret
jns
jmp
or
inc
pop
test
pop
and
lret
rolb
mov
xor
aas
xor
mov
and
xchg
adc
icebp
sub
jg
jecxz
pop
es
fsub
cmp
inc
jmp
jp
scas
add
cs
dec
push
imull
sub
pop
cmpsb
mov
mov
iret
popf
cs
mov
push
cmp
hlt
cmp
rcrl
popf
xor
sbb
add
pop
mov
cmp
mov
rcrb
pop
mov
push
hlt
or
sbb
mov
cld
jp
incl
or
adc
dec
fcmovne
adc
icebp
xchg
ret
filds
pop
push
pushf
push
and
aad
push
cli
js
adc
cmp
cmpsb
ljmp
paddsw
out
shl
adc
adc
test
rcrl
cmc
dec
out
gs
inc
push
mov
jmp
add
mov
push
orb
faddp
fstpt
repnz
gs
test
sbb
inc
inc
dec
adc
jns
jne
cmp
or
sub
loope
adc
mov
pop
pop
cli
js
pmuludq
add
pusha
inc
in
jp
ss
jae
lcall
cmc
cld
push
pop
in
add
sub
xor
data16
and
mov
enter
add
ds
mov
sti
add
push
jp
rorl
adc
or
jnp
jmp
pop
adc
out
jmp
push
mov
add
mov
lea
cwtl
mov
push
hlt
out
popa
loope
jnp
outsl
hlt
cmp
jb
cmp
or
jmp
inc
sbb
cmp
test
add
and
andb
xor
mov
ljmp
xor
or
bound
ficoms
or
push
inc
aaa
stos
jge
cwtl
adc
xor
cmc
inc
incb
mov
push
stos
xorb
into
sub
iret
int
or
out
in
pop
mov
sbb
inc
fdiv
fists
push
adc
xchg
sbb
adcl
test
cmc
xchg
mov
addr16
xor
imul
sbb
outsl
mov
mov
mov
sbb
pusha
lret
inc
xor
sub
sub
mov
test
xor
cmpsl
or
rorl
push
mov
push
pop
pop
pop
sti
add
popa
lods
xchg
leave
mov
xchg
cld
nop
out
ja
cmp
fdivrs
shll
mov
cmpsl
mov
bnd
subl
mov
xchg
cmp
lea
and
inc
notb
and
mov
xchg
cmc
push
dec
jbe
adc
jecxz
and
insl
push
mov
lods
mov
pop
mov
cld
je
rorb
sbb
jg
mov
xorl
sub
pop
lods
inc
mov
rdpmc
test
dec
sbb
cmpsl
and
sarb
dec
adc
inc
js
fcoms
aas
adc
lahf
push
or
cmp
inc
push
adc
ss
xor
cs
ret
mov
stos
inc
subl
mov
xchg
jae
ja
push
shlb
fucomip
jp
dec
sti
mov
je
xor
bound
rcrb
movsl
dec
add
jp
jae
lcall
sarl
daa
adc
add
in
mov
pop
push
sub
inc
mov
cli
lods
mov
lea
cmpsb
inc
scas
push
cmp
aad
dec
push
push
mov
jecxz
mov
jno
mul
fnsave
mov
ja
inc
or
cmp
cltd
loop
mov
pushf
dec
in
lret
pop
pop
popa
push
jmp
push
xchg
cld
orb
cld
mov
jnp
inc
fwait
leave
push
lods
pop
jns
jno
rorb
jo
movsl
lock
xchg
push
dec
xor
jmp
in
dec
outsl
int3
outsl
hlt
sahf
sbb
mov
call
out
xchg
ret
mov
sub
mov
out
sbb
jb
into
addl
sub
sbb
inc
mov
or
push
cmp
dec
movsl
movsl
lret
cmp
mov
scas
pop
clc
sarb
xchg
push
add
in
jg
test
xchg
sarb
mov
pop
sbb
loop
int
pop
or
push
xchg
mov
lret
je
call
mov
iret
movsb
ss
out
xor
cmpsb
nop
clc
xor
pusha
add
aam
sahf
movaps
inc
cltd
mov
pop
gs
das
data16
lock
dec
js
xor
out
in
lds
pusha
mov
cmp
dec
movsb
sub
mov
inc
shrl
jmp
lcall
cmp
dec
cmp
pusha
adc
ret
out
xor
and
mov
cmpl
push
and
repnz
ret
push
aaa
test
std
push
jno
js
outsb
inc
adc
out
dec
lods
in
loop
or
lahf
mov
lods
fidivs
movsl
test
add
stos
cwtl
fnstsw
or
sbb
pop
xchg
inc
les
pop
fcomi
insb
les
iret
enter
cltd
inc
or
mov
mov
push
mov
mov
lods
push
call
cli
or
lods
test
pusha
das
ja
xchg
dec
sub
sbb
jne
insb
and
hlt
ret
mov
in
xchg
jecxz
push
lds
inc
fstpt
dec
notb
popf
xor
movsl
jl
int3
sub
mov
add
and
movsb
dec
dec
fsubrl
inc
ds
adc
push
jmp
clc
notb
push
fstpt
roll
mov
ja
es
dec
cld
fisttps
xchg
stos
sahf
push
mov
fldt
daa
lahf
cld
jle
jl
cmp
push
aam
or
cmpsb
mov
mov
cmpsb
dec
or
lcall
add
popf
mov
imul
scas
add
leave
push
pop
dec
xlat
lcall
jae
add
and
lds
xchg
sub
xchg
dec
fwait
sbb
repz
sbb
mov
add
mov
xchg
jo
aad
fwait
xor
test
mov
mov
mov
push
pop
xchg
mov
out
xchg
dec
xchg
inc
lock
add
cmp
adc
sbbl
je
paddw
dec
xchg
incl
cmpsb
cmp
add
cmp
add
lds
mov
or
popa
sub
mov
pop
dec
adc
cmp
jb
xchg
es
out
pop
cmp
imul
out
sub
hlt
mov
pop
cwtl
je
jae
xchg
and
pushf
cmp
lret
das
push
pop
push
mov
gs
sub
jle
xchg
lahf
mov
sarl
shlb
data16
mov
hlt
fnstsw
add
inc
push
sub
shll
call
xchg
xchg
xchg
xor
mov
int3
data16
sarl
out
scas
cli
sti
hlt
mov
dec
mov
lock
push
push
bound
insl
push
xor
adc
dec
mov
dec
or
pusha
lea
sti
es
repz
lahf
jl
mov
add
out
dec
sub
push
gs
push
mov
jge
das
xor
test
and
pop
ss
lret
fsts
repnz
push
aas
out
mov
jno
jmp
repnz
jnp
iret
in
add
inc
jo
pusha
xchg
jp
imul
loopne
rcr
xchg
outsl
add
scas
mov
ljmp
mov
loopne
call
js
lods
push
xor
out
popf
lea
sbb
dec
adc
mov
inc
sub
jmp
aaa
mov
les
pusha
fidivs
add
push
mov
lea
outsb
push
fdiv
or
pop
or
pop
jg
negl
int
icebp
mov
clc
int
dec
cmp
cs
pop
das
fadds
push
testb
rol
xchg
xor
iret
mov
mov
cmc
cmp
jo
mov
fwait
cmp
call
mov
nop
and
pop
dec
dec
fildl
xchg
hlt
sti
rorb
xor
adc
fmull
xor
in
pop
sahf
adc
mov
push
ret
mov
mov
add
nop
pop
arpl
dec
mov
mov
in
aaa
inc
sti
cmpsb
sbb
or
inc
mov
imul
insb
mov
or
or
fs
sti
jge
push
mov
push
pop
aaa
push
or
cmp
jbe
lret
test
stos
mov
dec
sub
std
sub
cltd
push
mov
dec
pop
inc
gs
cmp
xor
dec
xor
lock
jae
scas
inc
ds
cmp
icebp
out
adc
and
stos
mov
mov
fmul
shll
jecxz
xchg
inc
out
fs
test
aad
gs
or
mul
xchg
rcr
mov
or
add
jno
mov
fcomip
push
push
out
fldl
cli
fimull
out
mov
inc
into
fs
pop
lods
or
mov
psubb
aam
loope
loope
jecxz
ret
je
add
mov
mov
xor
jne
js
sub
jne
xchg
xchg
xor
insl
mov
adc
jp
jl
jg
fwait
sarb
out
ss
adc
call
popa
inc
xchg
push
and
mov
push
dec
into
cli
jg
icebp
push
add
outsb
inc
or
stc
cld
mov
mov
mov
pop
add
fidivrl
jl
inc
in
lea
in
rcrb
das
xchg
sub
les
mov
leave
repz
adc
inc
adc
out
psllq
out
aaa
and
into
daa
inc
imul
cmpsb
pop
inc
and
sbb
mov
scas
lods
out
mov
insb
sbb
shlb
mov
mov
cmp
test
out
lock
jg
jbe
dec
sbb
movsb
jbe
repnz
or
shrb
xor
out
xor
mov
mov
or
pop
enter
xchg
mov
xor
pop
add
fstl
adc
and
add
ljmp
scas
test
test
inc
pop
mov
lock
push
outsb
mov
ret
imul
inc
pop
iret
loop
xchg
adc
test
outsb
imul
add
mov
or
ds
sbb
dec
mov
sahf
cmp
mov
nop
les
ficomps
int3
sub
scas
je
aam
xor
test
outsl
scas
roll
cmp
sbb
mov
jmp
sti
xor
adc
mov
adc
fisttpll
dec
rolb
xchg
mov
nop
mov
mov
jne
addr16
insb
mov
cmc
push
sbb
loop
cwtl
rorl
cwtl
mov
nop
mov
jbe
xchg
out
mov
in
and
dec
stos
stc
pop
mov
pop
test
faddl
pop
or
das
into
mov
or
bound
and
das
cmp
out
orb
push
jl
pop
fsubr
xor
add
cmc
mov
lret
adc
sbb
mov
push
test
push
add
nop
faddl
push
dec
test
iret
test
and
out
testl
mov
jae
ljmp
jo
out
int
add
xchg
in
lahf
inc
sub
xchg
repnz
insl
fmuls
daa
add
pusha
lret
mov
cmp
into
or
lods
xchg
or
adc
jmp
push
cmc
xchg
gs
sbb
push
push
inc
cmp
pushf
adc
insb
fadds
jbe
popa
cmp
mov
test
inc
repnz
jge
mov
jp
aam
and
push
cli
push
out
mov
and
bound
sti
pop
mov
sbbb
and
jecxz
push
jmp
adc
xchg
iret
aad
cld
dec
jo
dec
dec
cmp
out
into
mov
inc
pop
mov
push
add
jge
roll
out
cmp
sti
mov
inc
int3
sbb
shl
inc
dec
mov
inc
mov
pop
pop
lods
cs
cli
lock
mov
push
pusha
dec
dec
mov
loopne
mov
leave
ss
adc
rolb
and
dec
adc
test
mov
inc
mov
cmp
jge
cmp
imul
out
add
jg
lods
notb
add
aad
xorl
or
xor
shr
leave
jp
pop
xlat
imul
jg
enter
in
sahf
pop
es
or
adcb
pusha
arpl
cmp
mov
shlb
sub
xor
pop
call
jecxz
mov
xor
or
cmpsb
adc
sub
adc
mov
jb
and
mov
rolb
outsb
and
add
jbe
ret
jmp
mov
jge
push
mov
scas
cmp
incl
xchg
pop
adc
push
jmp
cmp
pop
xchg
inc
stos
adc
xor
add
sarb
mov
loope
fcmovbe
jbe
imul
stos
cmpsb
inc
xchg
mov
les
and
inc
jb
jnp
shrb
pusha
repnz
push
xchg
add
pop
xchg
jns
sub
adc
xor
into
mov
dec
jne
jns
cs
add
sahf
repz
daa
jecxz
add
jne
and
subb
sub
out
das
outsb
cs
int3
in
cmp
mov
or
xchg
xchg
mov
inc
xchg
inc
lret
test
aas
out
add
sub
xor
outsb
mov
xchg
sub
xchg
sbb
ljmp
sti
lock
cld
aad
out
roll
gs
notl
adc
std
jno
in
fwait
sti
jp
ret
jl
xchg
cli
jnp
das
adc
pop
jns
lea
shll
pop
mov
lods
pop
cwtl
cmpsl
in
pushf
movsl
leave
out
xchg
xchg
dec
imul
pop
push
and
jbe
xchg
jne
or
popf
cmc
pop
pop
jmp
insb
mov
pop
pop
push
cs
sarb
int3
inc
sub
mov
jbe
imul
insb
pop
mov
cmp
mov
sbb
and
pusha
aaa
push
sbb
mov
cmp
dec
and
scas
pop
outsb
shr
cmp
push
fstl
mov
fstl
data16
pop
repnz
pop
xchg
lea
loope
sub
je
sbb
pop
fisubl
push
cmpsb
hlt
cmp
dec
imul
push
sub
aam
push
mov
pop
pop
pop
popa
sub
jg
fldenv
outsb
sub
mov
and
mov
imul
pop
inc
cmpsb
imul
pop
dec
pop
std
imul
sahf
fmul
fmuls
fnstenv
loop
test
bound
jnp
mov
fstpt
pop
adc
push
out
mov
jbe
popa
test
iret
pop
pop
bnd
ret
data16
jecxz
fists
jb
jg
fsubrs
aad
and
decb
arpl
add
enter
test
or
xorb
ds
ret
cmp
adc
jle
or
outsb
leave
jo
add
lea
add
mov
sarl
adc
movsl
lret
into
out
inc
ljmp
jg
out
das
or
jns
sub
adc
imul
sub
lods
out
repz
js
cmp
cli
loopne
dec
adc
jbe
mov
pop
bnd
addb
or
dec
in
iret
xor
insl
loop
jp
out
lea
inc
sti
cmpsb
xchg
jg
cld
xchg
cli
and
aaa
sub
shl
cwtl
jo
push
sbb
outsl
jecxz
enter
stos
or
mov
hlt
push
mov
or
xchg
sub
lcall
jle
mov
push
fisttpll
roll
xor
outsb
xor
jb
push
adc
mov
pop
jg
xor
mov
inc
daa
cmpsl
ret
imul
aas
in
cltd
mov
ss
movl
into
mov
call
lahf
mov
int3
xor
xchg
nop
jecxz
ret
dec
bound
adc
push
jnp
pop
fs
mov
ss
icebp
jp
mov
fistpl
mov
cmp
inc
xchg
jle
jl
sbb
xchg
divl
push
add
arpl
push
add
out
fldt
lret
lret
pushf
movsb
fidivl
xchg
hlt
leave
cmp
xor
cs
lahf
imulb
dec
push
mov
stos
inc
adc
leave
xor
push
flds
scas
ljmp
mov
cld
fldenv
xor
test
mov
das
pop
js
push
add
lcall
pop
cmp
jo
mov
int
lea
or
sbb
mulb
pop
sarl
pushf
fiaddl
bound
test
adc
in
jp
jle
addr16
cmp
cli
stos
out
pop
cmp
ret
adc
jns
leave
mov
sub
data16
adc
sarb
inc
cmp
jo
sub
add
hlt
repnz
mov
je
jge
mov
ret
mov
shlb
insl
xor
les
insl
mov
popf
in
fnstsw
insl
shlb
movsl
mulb
push
in
cmp
mov
mov
fwait
push
lods
mov
mov
sub
push
aas
stos
cltd
adc
shll
data16
push
xor
fstl
mov
aaa
add
lret
xchg
add
xor
int
stc
push
mov
rcl
inc
mov
push
sar
pop
fwait
fwait
jmp
daa
loop
fstpl
pop
popf
test
mov
bound
xor
jge
fcoml
neg
and
mov
mov
xchg
jl
and
mov
jg,pt
xor
fstps
or
imul
mov
inc
xlat
repz
fcmove
ja
sub
ret
push
adc
mov
aaa
add
je
fdivrp
aas
sub
xchg
sbb
out
lods
repnz
or
sbb
in
popf
jl
ficomps
pop
pusha
jmp
mov
add
sbb
push
and
das
jmp
ds
shrl
xchg
xchg
into
int
sub
inc
fdiv
jmp
cmovne
cmpsb
fstl
xchg
ficoms
sbb
xchg
mov
mov
lock
dec
mov
mov
pop
cwtl
daa
aad
les
cmpl
adc
int
xor
fsubs
js
inc
iret
mov
cmovnp
jle
inc
adc
xchg
rolb
sti
mov
mov
xchg
push
and
jmp
or
pop
leave
stos
cltd
push
push
icebp
int3
shll
dec
stos
or
jge
cmpsb
lret
mov
add
push
sub
jns
insl
or
pop
aad
inc
scas
out
outsb
push
xor
pop
lret
sub
test
rorb
in
arpl
in
cmp
hlt
pop
push
mov
popf
pushf
sar
push
testl
mov
mov
mov
fs
mov
mull
xorl
pop
daa
outsl
pop
sbb
or
lret
in
jmp
fistl
hlt
rorl
icebp
push
lcall
loop
add
test
or
repz
repz
or
call
xor
cltd
adc
and
into
test
int
jno
xchg
pop
lods
jp
jl
dec
mov
pushf
inc
cmc
mov
in
lods
addr16
int
nop
mov
mov
mov
imul
out
arpl
icebp
outsb
outsl
jl
daa
xor
idivl
inc
adc
jae
adc
pop
gs
js
arpl
movsl
lea
add
ja
sub
push
fsubrs
fs
ret
push
mov
clc
xchg
stos
pop
jbe
popa
lret
movsb
pop
mov
add
outsl
bound
push
add
xor
inc
mov
fstl
scas
lods
inc
mul
mov
dec
sub
push
rcll
push
sub
or
inc
dec
ljmp
in
mov
fwait
cmp
loopne
sbb
mov
pop
or
cld
mov
bound
shr
xor
mov
and
pop
gs
cmp
adc
test
add
cmpsb
fpatan
xchg
mov
mov
cmpl
mov
jge
loope
mov
cmp
inc
lods
pop
test
mov
hlt
xchg
cwtl
xlat
add
jnp
pop
mov
ljmp
pop
popf
ss
dec
lret
mov
xor
bound
inc
add
scas
lea
adc
sbb
sbb
push
mov
fnsave
lret
xlat
cmove
inc
imul
stos
cmp
xchg
dec
cld
je
fs
sub
ja
jmp
stc
mov
rorb
cmp
pop
jnp
push
xor
jl
mov
push
nop
cli
add
test
add
lods
mov
sbb
push
icebp
xor
sbb
sbb
jnp
pop
dec
insl
sub
push
jge
inc
out
mov
je
fnstsw
and
push
push
push
rcrb
lock
mov
mov
icebp
int3
insb
cmp
or
inc
jbe
sahf
sarb
pop
adcb
pop
dec
xchg
scas
push
mov
jbe
ja
push
mov
add
clc
das
xlat
jle
lahf
outsl
dec
loop
nop
mov
roll
push
movsl
pop
das
xchg
pop
adc
es
imul
mov
adc
insb
xchg
xlat
sti
dec
add
jns
mov
aam
cmp
dec
dec
cld
xchg
pop
push
outsb
mov
mov
dec
jmp
bound
adc
mov
cmp
add
idivb
cmp
shrb
es
sti
xchg
lcall
lods
mov
xchg
ljmp
mov
adc
jg
imul
cmp
mov
jle
sarb
loope
xor
add
notl
sarl
xchg
jo
aas
xchg
adc
subl
out
cmp
xor
stc
push
sub
push
xchg
repz
je
push
jo
pop
in
push
jge
pop
mov
or
mov
orl
mov
jl
jae
in
push
inc
cmp
daa
stos
dec
sub
jnp
inc
fbstp
cmp
mov
xchg
cmp
popa
jae
fsubrl
sbb
scas
cmpsb
jbe
jecxz
mov
outsl
jne
xchg
subb
adc
out
ds
dec
sub
in
fscale
lods
jmp
enter
inc
movsl
and
sahf
js
mov
test
mov
add
pop
cmc
jo
outsl
xor
xor
cmp
push
mov
cmpsb
jg
mov
les
xchg
and
leave
mov
imul
aaa
idivb
mov
adc
das
inc
inc
insb
lret
mov
sub
jbe
sub
adc
scas
stos
test
fisttps
mov
aas
mov
jnp
ror
jmp
clc
adc
das
adc
add
scas
jne
adc
jo
imul
pop
out
inc
xlat
std
and
ret
aas
insl
push
xchg
pop
outsb
fisttpll
aad
jg
xchg
stos
dec
inc
movsb
ljmp
les
pop
mov
or
adc
cwtl
mov
jg
xor
aad
add
or
inc
loope
add
div
xlat
mov
movsl
cli
loope
dec
and
sbb
xchg
int3
cmp
stos
pop
pop
mov
add
test
scas
xchg
pop
icebp
cmp
xchg
aaa
lahf
pusha
pop
pop
mov
xchg
jno
pop
es
sbb
dec
cltd
rorl
mov
and
push
icebp
jnp
and
loopne
lret
pop
pop
movsb
rorl
pop
sti
hlt
xor
outsb
jno
xor
dec
mov
dec
popa
iret
xchg
or
lahf
js
faddl
scas
enter
add
pusha
mov
mov
cwtl
adc
lock
mov
es
into
and
lret
rcll
scas
pop
addl
shll
push
loope
xbegin
loope
cmp
cmp
add
movsb
add
fwait
xchg
push
inc
dec
test
cmp
or
push
rcr
cmp
mov
lret
loop
test
int
sti
aaa
mov
inc
orb
add
nop
roll
push
fistps
push
call
outsl
scas
and
pusha
repnz
adc
mov
mov
inc
xchg
outsl
pop
mov
and
adc
call
lret
int
mov
xor
cmp
addb
inc
jne
push
pop
pop
sbbl
inc
adcl
jne
mov
cmp
xchg
repnz
roll
cmc
std
add
cmp
mov
mov
xchg
mov
ret
push
or
rcll
mov
negl
ss
pop
mov
mov
push
out
jle
ret
jl
mov
push
dec
nop
push
mov
jno
mov
adc
jnp
insb
push
or
ret
int3
jne
xchg
int
sti
mov
std
mov
rolb
push
adc
xchg
aaa
js
inc
fdivrs
cmpsb
adc
inc
mov
adc
sbb
jae
popf
dec
pop
fs
es
or
je
gs
lahf
rcl
xor
push
mov
mov
cmp
push
jns
pusha
mov
pop
pop
arpl
inc
lock
fidivs
outsl
mov
ja
lds
or
pop
mov
dec
xchg
xor
pop
movsb
and
loopne
hlt
cmpsl
dec
imul
lcall
jl
sub
mov
and
insl
mov
or
imul
mov
divl
or
imul
sub
stos
jecxz
pusha
fstl
in
cmp
sbb
js
arpl
into
shll
out
ljmp
cmp
push
sar
in
dec
mov
xchg
sbb
fistpl
test
sbb
mov
ficomps
push
lcall
adc
lods
test
lret
ret
das
push
sub
movsb
add
jns
sbb
addl
sbb
mov
jo
insl
push
test
jbe
sub
inc
pop
outsl
jno
mov
cmpsb
clc
sub
lods
mov
jns
mov
les
sbb
pop
out
adc
repnz
andl
mov
jg
push
mov
outsb
cmpsb
cli
lods
inc
xor
jg
dec
cmp
and
mov
inc
xchg
cmp
rcll
and
or
cmc
andl
das
pop
in
pop
xchg
push
push
dec
adc
fs
int3
xchg
mov
insb
and
cmpsb
sub
idivb
push
mov
pop
inc
arpl
and
imul
lcall
mov
pop
out
jl
add
pop
pop
push
dec
xchg
xorl
sti
in
sub
lret
sub
pop
inc
ljmp
mov
mov
ja
loop
iret
xor
add
cwtl
fmul
or
inc
mov
in
jno
scas
push
or
std
pop
jl
jp
jecxz
mov
mov
and
cmp
out
leave
dec
shlb
nop
shll
dec
scas
shl
call
scas
or
cmpsb
or
imul
mov
xorl
das
fnstcw
inc
je
mov
addr16
pop
jae
and
repnz
fadd
xchg
add
lret
lcall
testb
enter
ja
out
scas
xor
dec
pop
jmp
fidivrl
jae
pop
incl
lds
sti
rcrb
lock
cmp
xor
jecxz
xchg
xchg
adc
fsubs
sarl
jmp
enter
cmp
xchg
addb
iret
cmp
cmc
ljmp
cmp
lahf
iret
cmpsb
mov
ret
mov
adc
cmpsb
test
fbld
les
inc
lcall
lea
push
adc
push
lock
inc
rcrl
mov
push
mov
mov
mov
cli
pop
rorb
mov
cmpsl
sti
mov
sbb
mov
jo
pusha
cwtl
mov
dec
jle
cli
jl
add
roll
adc
stc
loop
and
in
out
push
sti
int
iret
test
add
andl
fwait
aam
mov
dec
int3
in
test
pop
cs
pop
rorb
mov
inc
out
sub
pushl
fistl
icebp
sub
pop
push
cmp
push
cmp
xor
xor
xor
xchg
add
inc
jmp
mov
and
xchg
adc
cmp
les
pop
aam
repz
js
jne
push
imul
mov
sub
xchg
arpl
pop
fnstenv
jmp
into
or
push
dec
add
scas
mov
xor
pop
jmp
test
inc
and
sub
xchg
or
mov
sbb
jns
mov
pop
or
movl
sbb
xchg
or
xchg
sahf
inc
mov
das
dec
imulb
je
fs
ret
scas
fldl
iret
adc
and
xchg
or
je
pusha
int
cwtl
push
xor
xchg
jl
subl
jp
inc
ja
into
xor
jmp
mov
ror
stc
dec
cli
adc
push
xchg
push
xor
cli
addr16
fwait
cmp
aam
xor
es
inc
fldl
je
inc
stc
sti
mov
popa
pushw
cmp
jbe
hlt
xor
gs
ljmp
dec
sbb
iret
lret
insl
jns
mov
xchg
inc
mov
loope
sahf
push
sbb
aam
cs
imul
xchg
enter
push
mov
cltd
call
sahf
mov
pop
popa
push
stc
push
int3
mov
inc
xor
pop
xchg
cld
mov
shlb
clc
gs
sub
cs
push
mov
cwtl
es
mov
and
repz
add
loope
cmp
daa
test
mov
clc
add
std
cmp
sbb
push
and
push
dec
shll
les
arpl
adc
pusha
cltd
jl
test
xchg
dec
adc
and
cmp
adc
cmpsl
and
into
loop
mov
pop
out
adc
cmp
aad
jb
or
add
cmp
mov
int
outsb
movsb
inc
sub
out
in
daa
sbb
fbld
jns
pop
testb
push
orb
cmp
sbb
push
adc
push
in
aam
or
cmp
mov
shrl
or
sar
lret
push
in
shrb
repz
cmpb
xor
and
or
or
xlat
stos
outsb
lods
in
adc
arpl
xchg
jmp
lret
sub
popa
xor
sub
cmp
out
mov
or
push
inc
outsb
repnz
mov
mov
arpl
push
mov
out
lods
repnz
leave
and
sarl
jb
mov
stos
pop
push
push
jge
stos
xchg
xchg
push
push
sub
xlat
mov
mov
mov
and
sub
cmp
rcll
movsl
xor
testl
fs
movsl
aad
loopne
fmuls
int
inc
jae
movsl
adc
shrl
lret
fisttps
adc
ud0
scas
gs
std
rorb
inc
dec
mov
jnp
add
mov
rorb
aam
push
add
inc
movsl
out
std
in
fwait
cmp
cmp
mov
add
jo
gs
xchg
adc
jbe
jne
out
xchg
out
cmp
mov
xor
in
das
adc
inc
in
hlt
or
push
jae
out
out
leave
js
out
sbb
dec
jnp
out
int
jle
rorb
dec
insl
dec
insl
sahf
cmp
outsl
or
jno
xor
inc
in
in
xchg
ret
sub
xor
pop
and
cmp
push
mov
out
sbbl
js
push
sbb
mov
push
fwait
dec
mov
dec
insb
mov
push
mov
addr16
or
push
cld
sub
test
shlb
pop
cmp
out
jecxz
test
mov
repz
xlat
and
lea
test
imul
loop
arpl
xor
mov
dec
jns
cmpsb
jns
push
inc
bnd
enter
popf
js
xor
sti
xchg
mov
push
adc
roll
xor
dec
loop
push
lret
or
push
scas
call
cmp
pop
and
arpl
lahf
and
movl
add
test
fdivrp
sub
cmp
sbb
scas
ljmp
cmp
inc
roll
lea
lods
pop
mov
or
xchg
and
mov
mov
add
stos
test
adc
insl
push
mov
xor
fsubrs
movl
inc
sub
lret
push
xchg
xchg
sub
jle
std
xor
test
das
or
fimuls
cli
js
test
sub
fs
shr
jns
adc
or
jbe
shr
sbb
in
jp
repz
nop
push
mov
pop
lcall
shlb
and
popa
xchg
test
stos
aad
das
lahf
lods
shll
push
je
sbb
test
fstpt
jecxz
push
and
mov
mov
add
out
lret
mov
and
xchg
pop
movsb
ffreep
divb
add
jno
jno
xlat
jb
idivl
je
add
cmp
and
daa
pusha
jne
icebp
loop
out
xchg
add
xor
mov
add
dec
pop
ja
lea
sahf
sbb
insl
adc
sbb
jle
push
std
sarl
jecxz
ret
test
pop
or
adc
mov
add
sub
sub
rcll
hlt
mov
jns
fstpt
addl
repnz
sti
iret
mov
nop
adc
mov
movl
lcall
pop
and
es
inc
pushf
clc
or
outsl
and
fisubrs
dec
out
cmp
roll
add
addr16
fldcw
outsl
xchg
jp
pop
mov
hlt
out
mov
fs
dec
jne
add
in
inc
push
inc
clc
out
frstor
dec
fistps
mov
stos
addr16
cmp
jb
jle
dec
mov
dec
data16
ret
inc
and
jbe
shll
sub
jmp
and
and
lea
dec
shll
aas
jb
or
jp
fildl
sub
imul
or
addr16
mov
rol
mov
nop
cld
lret
pop
cmp
imul
fisubrl
dec
cmpsl
push
movl
adc
fsts
rcl
add
gs
in
movsb
fsts
int3
in
add
sti
inc
jnp
inc
add
inc
roll
pop
and
fst
lret
aaa
and
mov
daa
mov
cmp
pop
xchg
push
add
roll
ss
sbb
lret
fwait
pop
testl
cmp
sub
mov
enter
xor
jb
dec
mov
sub
scas
sbb
and
fiaddl
mov
inc
pop
adc
std
in
adc
xchg
out
jb
insb
sti
fildl
outsb
jmp
aad
and
subl
cmpb
push
jae
lods
mov
jle
cmp
dec
iret
mov
jo
outsb
add
push
xor
xchg
fadd
orb
rcll
jge
dec
adc
xchg
sub
push
xchg
push
xor
lods
sbb
mov
mov
lods
fsubr
jp
sbb
outsl
and
jmp
inc
jo
popa
sbb
stos
cmpsb
adc
out
xchg
xchg
and
mov
jbe
rcrb
imul
loop
mov
fldl
cmp
pop
mov
push
ss
jg
rol
dec
out
mov
subb
jb
and
out
lea
pop
je
mov
in
ja
fcomp
call
sbb
mov
dec
ficomps
mov
push
scas
inc
adc
aad
in
cmpsl
loope
adc
sub
stc
and
in
cmpsb
or
outsl
imul
sahf
aaa
xchg
out
inc
test
push
das
push
sbb
xchg
leave
push
adc
xor
push
repz
adc
dec
sbbb
add
in
outsb
dec
sub
stos
in
lcall
push
or
lret
gs
imulb
sub
push
insl
fnstcw
hlt
push
inc
mov
in
adc
cmp
movsl
cli
sbb
push
fwait
push
stc
clc
aas
sbb
sahf
add
xchg
mov
sbb
out
jbe
jl
cli
push
and
mov
pushf
rolb
popf
or
inc
test
xchg
pop
imul
mov
mov
mov
mov
or
push
sbb
jnp
cmp
test
lds
pop
loope
jl
xchg
mov
pop
mov
pop
pop
dec
push
xor
pop
sub
jbe
sti
sbb
dec
adc
mov
and
cmpsl
nop
mov
inc
mov
add
sub
ja
out
loop
in
ret
lahf
cs
cli
jnp
cmp
fists
mov
cmc
int
subl
out
mov
add
lds
test
mov
inc
icebp
aad
notb
adc
int
mov
ret
pop
ret
inc
add
jno
lret
sub
xchg
lea
pushf
mov
add
jo
xchg
fcmovnb
xorl
jge
push
mov
cmpsb
mov
adc
sbb
or
leave
or
sbb
in
inc
mov
cmpb
and
imulb
inc
and
or
iret
sti
pop
test
in
inc
mov
mov
mov
ljmp
or
pop
push
imul
movsl
jbe
jno
cmovp
pop
jecxz
jle
adc
cmp
ficompl
xchg
pop
mov
xor
in
insl
dec
dec
mov
jmp
lock
pop
xchg
je
cmc
push
repnz
loope
mov
xchg
repz
cltd
pop
clc
and
jns
pop
xorb
loopne
lret
jecxz
cmp
mov
pushf
sbb
rcrl
jo
test
dec
lret
sti
lret
mov
cs
mov
lock
lds
cmp
pop
mov
dec
xchg
out
mov
xchg
xor
test
std
out
dec
pop
cmp
inc
push
lea
push
aam
and
pop
mov
mov
jno
das
sbb
movsl
call
cmp
dec
dec
fcoml
cmp
test
shrb
movzwl
jl
xor
les
call
imul
in
mov
negb
xor
pop
or
aas
mov
lret
fsubs
lret
in
ljmp
push
stos
shrl
sbb
pushf
or
push
sbb
push
ja
add
repnz
inc
out
or
ja
aaa
push
mov
inc
popa
sar
mov
in
push
jle
into
jbe
pop
sub
notl
sub
push
sbb
push
inc
xor
lods
add
insb
inc
cmp
pusha
scas
fldenv
fldcw
out
xor
push
iret
jb
aas
cmp
bound
enter
mov
cwtl
push
clc
mov
jmp
sbb
mov
int
or
mov
dec
fnstenv
dec
sbb
fildll
addr16
pop
fiaddl
mov
xchg
cmpsl
cmp
lea
xor
push
daa
mov
std
ja
ret
loop
out
mov
mov
mov
pop
inc
in
jl
pop
movsb
and
mov
nop
add
cmp
dec
dec
je
mov
sub
mov
cmp
aaa
ja
mov
std
xchg
outsb
loopne
pop
pop
iret
xor
andb
xor
mov
mov
pop
test
sub
add
mov
xor
push
xor
inc
push
adc
pop
cmc
jecxz
mov
add
repz
mov
add
aam
or
loope
fstps
push
movsl
aam
mov
iret
pop
lea
mov
xor
mov
out
sbb
cld
roll
push
dec
jp
fs
xor
iret
repnz
fs
xor
je
or
sbb
sahf
pop
cmp
and
in
arpl
dec
dec
cmp
loopne
pop
mov
ja
into
cmp
imul
xchg
dec
jo
test
adc
sub
lahf
dec
push
cmpsb
aaa
dec
sbb
add
push
push
pop
repz
push
add
aad
push
test
data16
cmpsb
mov
setp
pop
inc
stc
scas
sbb
cmp
jo
mov
add
adc
out
adc
cltd
pop
ret
mov
mov
add
inc
xor
mov
cmp
sub
out
and
ds
loopne
sbb
jno
gs
fsubl
nop
jg
pop
cmc
dec
je
or
jae
aam
out
sarb
jmp
daa
idiv
ret
mov
cli
or
outsb
cmp
iret
adc
xchg
jmp
sti
test
adc
imul
ja
dec
jae
int
fsubrs
inc
fisubl
test
mov
cli
mov
outsb
xchg
xchg
das
mov
mul
cmpsb
popa
fisubrl
mov
mov
pop
mov
fstps
push
dec
std
scas
xchg
test
inc
aad
push
daa
pop
sub
test
sbb
in
movsl
in
jnp
and
scas
xchg
hlt
lret
jecxz
adc
int3
add
adc
jp
aam
lahf
push
xchg
rorl
testl
gs
sub
dec
push
pushf
ss
inc
inc
scas
fidivrl
mov
cld
das
cld
fists
int
es
push
lret
sub
xchg
mov
in
mov
push
int
dec
ds
mov
mov
add
js
jp
cmpsb
dec
bound
sbb
lcall
es
in
or
cmp
or
push
aaa
and
mov
mov
dec
pop
push
sarl
inc
mov
outsb
mov
inc
push
xchg
jo
sbb
or
mov
cmp
rcrb
js
pop
or
mov
push
movsl
lods
xchg
add
dec
and
jle
and
dec
pop
mov
xchg
ficoml
insl
fsubrl
scas
jnp
mov
cltd
stc
into
call
fwait
mov
jl
bound
repnz
pushl
das
imul
adc
push
je
push
stc
loop
dec
insl
out
push
add
jp
push
mov
jge
or
or
or
and
fwait
stc
push
sub
inc
idivb
fidivs
idivb
lahf
scas
push
mov
ja
and
xor
rcr
loope
xchg
mov
insb
adcl
stc
cs
cmp
incb
inc
push
cmp
and
and
dec
xor
and
out
or
pusha
stos
cmp
xor
mov
outsl
rol
sub
or
and
push
mov
sub
mov
sbb
push
stos
push
and
push
mov
cmp
shrl
sub
std
cmp
inc
imul
xchg
pop
pop
mulps
cmpsb
sub
or
add
inc
jg
lea
or
push
test
lods
sub
insl
mov
loop
mov
mov
nop
push
clc
jg
mov
sub
icebp
mov
or
pop
outsb
or
int3
insb
into
jns
aas
adcb
clc
jmp
adc
pop
imul
xchg
test
roll
jge
cwtl
cmc
adc
popl
inc
shll
jnp
dec
je
mov
xchg
daa
sbb
scas
adc
imul
lret
std
mov
mov
pop
xor
sbb
sbb
cmp
ss
iret
cmp
inc
mov
mov
lea
or
mov
mov
test
pop
pop
iret
xchg
jecxz
enter
lea
xchg
dec
outsb
xor
push
or
mov
pop
push
lcall
out
dec
push
out
xchg
or
mov
dec
push
call
stc
jns
mov
in
fimuls
pop
pop
movsb
sub
mov
pop
xor
inc
push
xor
aas
mov
rcr
jmp
hlt
dec
daa
ret
inc
movsl
jg
sub
and
enter
popa
pusha
cmp
mov
pushf
gs
out
sub
stc
mov
imul
jmp
mov
rorb
enter
stos
pop
push
mov
icebp
pop
cltd
cmpps
loopne
or
hlt
sbb
cmp
push
push
imul
mov
cmpb
shlb
popf
sub
out
ds
push
stc
pop
lret
fcompl
das
push
outsb
in
out
repz
mov
stos
int3
fwait
inc
fidivs
adc
push
mov
sahf
fst
out
cld
fwait
aaa
or
cltd
add
xchg
in
inc
push
xor
jmp
sub
pop
rcpps
imul
lret
es
dec
push
pop
sub
push
popa
clc
daa
scas
test
cli
xor
rep
imul
jp
dec
popl
js
mov
js
hlt
push
or
sub
pop
mov
add
fcomip
xchg
scas
les
mov
mov
rcl
in
sub
stc
repz
mov
mov
hlt
pop
lret
gs
mov
shr
add
inc
xor
inc
ret
push
out
stos
cltd
sbb
cli
pusha
stc
ljmp
adc
or
cmpsb
rol
mov
cltd
inc
lods
sbb
imul
test
pop
push
push
or
fwait
cmc
cmp
scas
faddp
iret
dec
lds
mov
std
lcall
and
aas
pop
shrl
loopne
test
leavew
stos
scas
jns
mov
das
jne
out
gs
je
sbb
sbb
push
mov
dec
add
fildll
inc
push
mov
fsubl
jl
les
arpl
out
adc
movsb
bound
ret
negl
jecxz
in
fucomp
dec
cmp
and
and
lahf
inc
sub
int
xchg
mull
lock
movsl
jbe
stc
incl
add
in
inc
out
mov
mov
stos
dec
push
push
loope
data16
jne
cltd
jno
dec
test
imulb
outsl
outsl
cmp
movsl
lea
icebp
mov
ret
and
lds
ja
sbb
adc
nop
push
sub
test
inc
rcll
aam
clc
mov
cmc
inc
fistps
mov
les
xor
cli
xor
mov
mov
sub
mov
cmp
xlat
pop
xlat
sub
dec
jns
jne
rcll
test
addr16
dec
cwtl
inc
xor
rcrb
fs
jl
ror
bound
notb
mov
enter
aam
dec
test
cld
sub
mov
shrl
int
mov
fcoml
push
sbb
mov
push
ja
adc
insb
loope
subb
test
push
dec
pop
jbe
jno
dec
loopne
das
jns
inc
iret
sbb
and
pushf
xchg
mov
aaa
pop
stc
gs
and
add
icebp
push
les
cli
inc
dec
mull
adc
rorb
insb
push
or
push
loop
mov
rclb
test
inc
push
cmp
lods
loop
insl
push
data16
sub
mov
fimuls
xchg
pop
popf
xchg
inc
mov
clc
stc
jnp
or
sub
leave
repnz
and
sarl
jns
pop
dec
adc
fstps
cld
inc
pop
cmp
sbb
fsub
xor
mov
pop
les
shll
nop
das
jns
fists
and
inc
test
xor
and
test
pop
sub
dec
sahf
sub
ret
adc
inc
pop
and
adc
push
js
sbb
xchg
js
xchg
popl
xchg
xor
popa
rorb
push
pop
sub
adc
dec
test
nop
push
insl
nop
mov
out
iret
mov
inc
mov
fcmovnb
addr16
fldl
and
pop
imul
rcr
daa
and
push
inc
or
mov
aas
inc
ja
andb
sbb
icebp
push
mov
cld
sti
push
fwait
sti
and
sub
sub
push
loopne
mov
push
pusha
jge
popa
rcrl
shlb
jnp
and
mov
mov
insl
lcall
lds
mov
pop
mov
mov
add
arpl
and
and
sbb
mov
stc
into
daa
punpcklwd
jo
jns
mov
push
jb
push
mov
jo,pt
jnp
push
popa
xor
mov
pop
fxch
pop
movsb
xchg
outsb
scas
popf
or
dec
std
aad
mov
inc
push
sti
pop
in
std
sub
movsl
fiadds
adc
xchg
mov
stos
fstpl
adc
cld
cmpsl
dec
in
or
loopne
shll
lock
mov
pop
jge
je
pop
movb
jecxz
mov
call
push
sbb
xor
fistpll
inc
jg
test
push
mov
cmpsl
faddl
out
cwtl
fisubrs
in
fwait
mov
jne
cld
jae
inc
jl
adc
incb
mov
push
mov
rol
mov
les
add
mov
movsl
jns
xor
pop
fisttpll
push
sbb
pop
mov
inc
shl
mov
int
movsb
dec
pop
sahf
cmp
mov
ret
push
adc
pop
aas
jb
cmpsl
add
cmp
orl
bound
mov
pusha
jbe
cmp
movaps
test
in
push
push
or
imul
push
pop
inc
jp
les
pop
lret
and
jg
mov
sahf
and
cwtl
cltd
xchg
jne
mov
push
mov
test
mov
movsb
stos
bound
or
push
mov
jmp
cwtl
cmc
pop
pop
push
fdivrs
dec
shl
sub
jp
fildll
loopne
adc
out
dec
scas
in
stc
xlat
in
scas
mov
sbb
out
adc
sarb
xchg
push
inc
lea
lods
adc
pop
fisttps
mov
sub
loopne
jns
xor
es
notl
mov
cmp
adc
in
mov
xchg
xorl
mov
push
or
call
pop
sbb
out
jl
mov
insl
sbbl
shll
add
lahf
jle
incl
mov
aaa
inc
inc
movsl
data16
adc
mov
outsl
xor
push
jne
mov
jle
or
adc
inc
in
stc
lods
fsubr
and
cmp
addr16
sarb
int
sub
test
repnz
movsl
es
fsts
mov
scas
enter
mov
lcall
xchg
push
pop
cmpsb
fnstcw
mov
mov
inc
cwtl
outsl
dec
dec
stos
xor
cmp
out
and
dec
ljmp
push
xorb
jle
scas
std
fwait
dec
mov
jno
mov
cmp
mov
js
and
out
dec
rolb
imul
push
mov
jp
aam
ret
mov
in
mov
jle
mov
sbb
cmpsl
xor
outsl
and
xchg
push
and
pop
jo
leave
mov
mov
loopne
sub
pop
adc
or
test
push
sbb
push
movsb
add
mov
mov
push
xchg
iret
fcomps
lret
pop
push
mov
jle
popa
and
jbe
scas
mov
pop
js
pop
js
dec
cwtl
or
mov
jb
adc
dec
js
push
xor
sbb
ret
leave
sbb
movsb
imul
mov
mov
jo
and
dec
pushf
les
imul
test
insb
adc
ljmp
pop
cmp
fimuls
mov
shrl
add
xor
jmp
push
scas
outsl
mov
es
outsb
gs
sbb
sbb
xor
daa
shl
push
xor
repnz
xchg
mov
cmp
mov
hlt
add
dec
pop
add
push
rcr
and
pop
sub
and
fimuls
gs
xchg
xchg
ficompl
ja
scas
and
xchg
jecxz
inc
jle
aad
int
das
or
popa
scas
and
cs
lods
sub
imul
adc
mov
and
fnstcw
daa
inc
push
scas
int
dec
scas
test
jecxz
xor
lock
lahf
rol
xor
push
sarb
xchg
xchg
xchg
sbb
fcoms
jle
fwait
fwait
sub
push
push
cmp
mov
ret
stos
push
adc
shl
gs
inc
popa
jl,pt
sbb
adc
pop
mov
mov
mov
sbb
ficompl
test
mov
jle
scas
push
push
loop
mov
xchg
adc
aaa
imul
jl
xchg
cltd
ret
lahf
and
ret
addb
popa
cmp
jns
in
pop
mov
mov
fs
mov
mov
jge
jp
cs
ds
iret
lock
out
stc
repnz
sahf
addr16
adc
xor
pop
fs
cmpsb
inc
jge
fsubrl
lret
sbb
jb
test
sbb
rcl
sbb
out
mov
lret
popf
mov
add
repz
jge
scas
icebp
cmp
cmp
mov
push
inc
mov
jo
fcomps
mov
mov
fiadds
dec
cmp
out
daa
mov
xchg
jp
scas
sub
sbb
shlb
stos
jne
loopne
mov
pushf
sub
sbb
cld
mov
adcl
sbb
je
das
idivb
scas
cmp
sub
jno
in
out
xor
outsb
add
mov
mov
pop
pop
je
push
mov
cmpsb
fs
sub
mov
pop
adc
stos
inc
jecxz
inc
ret
adc
adc
cs
popf
and
loop
fdivrl
adc
ret
xchg
test
dec
int
cmp
push
pop
dec
and
mov
cmpsb
stc
push
dec
or
pop
jecxz
cmpsb
jae
sbb
cmp
shl
mov
clc
imul
in
stc
add
and
lods
add
fdivrp
pop
sti
push
scas
xor
push
inc
fldt
pop
pop
xor
pop
xchg
jg
mov
outsl
mov
aad
xchg
mulb
les
cli
dec
cmp
in
lea
sti
mov
fistpll
lahf
es
adc
enter
mov
sub
mov
pop
stos
lods
lahf
xor
out
fs
outsl
adc
mov
mov
test
mov
int3
or
mov
or
push
hlt
lock
aad
jno
enter
inc
movsb
push
das
sahf
cwtl
std
negl
push
addr16
cmpl
outsl
inc
and
sub
das
jae
jl
jmp
clc
gs
xlat
jno
and
jo
pop
mov
aaa
mov
test
rorl
xchg
sub
sbb
jge
adc
xor
int3
cld
shlb
jae
dec
imul
pop
fwait
ret
bound
lods
sti
ret
xor
popa
add
cmp
and
xor
adc
inc
push
loop
mov
xchg
flds
adcb
xchg
test
dec
and
adc
out
cs
cltd
fimull
rorb
stos
sub
hlt
movl
cmp
push
stos
push
jmp
lods
fdivrs
cmp
ljmp
incb
xchg
aaa
push
push
pop
outsl
pop
jbe
inc
out
sub
into
test
xchg
or
jl
popa
cwtl
loope
dec
pop
out
lods
lret
push
dec
in
pop
push
xchg
addr16
or
outsl
ret
in
and
inc
cmp
xlat
dec
mov
fs
xchg
add
dec
inc
movsl
ret
push
cld
push
and
xlat
popa
shrb
dec
adc
xlat
imull
movsl
aas
adc
mov
imul
loopne
xor
in
adc
pop
shlb
fadd
push
adc
outsl
cmpsl
inc
xchg
mov
jg
mov
shr
mov
mov
enter
repz
cmpsl
sti
dec
mov
negb
pop
gs
xchg
push
xor
cs
rorb
xor
cmp
cwtl
add
std
mov
mov
dec
lods
dec
sahf
jb
ds
xor
cltd
loopne
fisttps
push
sbb
sbb
addr16
outsl
imul
mov
push
frstor
sub
add
les
lret
lcall
cmp
pop
cltd
cmpsb
mov
add
jl
xor
ja
ljmp
add
fsubs
mov
or
ret
ret
cli
mov
inc
idivb
nop
andl
cltd
mov
stc
cmp
cmp
xor
pop
and
or
imul
pop
data16
negb
sbb
andl
pop
sbb
enter
sub
aad
lods
push
adc
int3
xor
call
xchg
push
mov
cmp
movsb
jbe
imul
mov
out
sub
fmuls
adc
mov
jecxz
stos
cmp
jbe
xor
sbb
mov
div
lods
iret
cmp
sarb
and
cmp
push
jge
scas
std
cwtl
imul
xor
pop
movsl
orl
enter
sbb
nop
jg
pop
jecxz
xor
inc
fcoms
push
dec
add
xchg
pop
into
stos
xchg
testb
inc
cmc
dec
lret
push
jns
ss
jg
insl
cmpsb
jb
pandn
in
sti
jnp
ret
sbb
xlat
hlt
inc
test
insl
stos
pop
or
adc
fnstcw
mov
push
loope
int3
jl
mov
insl
mov
add
lret
lret
dec
stos
push
add
xor
inc
fisubrl
imul
mov
idiv
sbb
in
xchg
xchg
add
mov
jns
dec
leave
xor
sbb
xchg
or
bound
dec
jne
mov
mov
fnstsw
cwtl
add
push
mov
mov
cld
fisubrs
xchg
sbb
jecxz
push
mov
ret
shll
mov
in
sbb
xchg
and
jle
pop
jo
sarl
outsl
inc
adcl
adc
or
out
sub
stos
lret
fisttpll
test
rcr
xor
jle
and
ljmp
ljmp
cmp
fsubrs
call
pushf
in
lret
push
lahf
jne
jo
insb
pop
mov
xchg
cmp
jge
jne
sahf
dec
mov
sbb
pop
fadd
sbb
dec
lea
mov
push
adc
das
mov
rclb
xchg
push
xchg
outsl
mov
sub
imul
imull
movsb
imul
imull
incb
fildll
inc
inc
frstor
leave
and
ss
and
ds
cmp
sarb
xchg
enter
cli
lods
fwait
popf
add
iret
je
aas
addr16
xor
fsubrp
xor
js
mov
lods
add
bound
cmp
je
filds
repnz
xchg
repz
push
xchg
data16
sahf
enter
ficomps
int3
add
mov
add
mov
mov
mov
xchg
adc
in
rorl
inc
inc
lods
divl
jmp
aas
pop
and
xor
ja
xchg
jnp
sbb
push
into
and
mov
inc
inc
mov
mov
add
out
outsb
sub
pop
fstl
enter
loop
sbb
mov
cmp
lcall
scas
inc
aad
mov
sbb
jge
ss
mov
pushf
mov
dec
lret
sbb
rcll
or
xchg
mov
sbb
jl
lret
iret
incl
test
gs
loope
mov
subb
jbe
pop
ja
mov
jle
mov
jmp
fisttpl
xlat
ljmp
cli
sti
xchg
mov
xor
and
jo
les
cli
call
pop
dec
call
fldenv
or
cld
dec
test
or
stc
in
fstps
scas
mov
mov
fwait
xor
idivb
lods
mov
shll
std
sub
sbb
stos
dec
dec
ljmp
sbb
pop
jo
xlat
ss
mov
xor
lea
mov
jl
dec
or
dec
movsl
xchg
inc
adc
xor
pop
adc
mov
cmp
xchg
ror
shlb
sahf
faddl
mov
iret
adc
les
jnp
stos
ret
mov
icebp
xlat
adc
test
lret
jecxz
nop
fbld
dec
fbstp
stos
xchg
push
nop
mov
jbe
gs
pop
rorl
inc
adc
ret
pop
addr16
push
jl
push
xchg
xor
loope
arpl
stos
adc
in
jnp
test
mov
movsl
mov
fwait
ljmp
push
jecxz
stos
outsb
enter
mov
ffree
std
inc
jmp
or
jae
iret
out
push
and
mov
imul
es
cmp
cmp
push
inc
xor
fs
idivl
js
xor
xor
mov
movsb
out
popf
sbbb
lcall
jno
xor
sbb
sub
out
jmp
movsl
sub
daa
lret
mov
test
aas
cmc
mov
mov
fst
push
loope
jge
or
mov
fidivl
into
rorb
setne
cmpl
mov
adc
mov
xchg
sbb
bound
jmp
in
pop
push
xor
lods
dec
ljmp
inc
daa
mov
fdivrl
inc
leave
es
sahf
push
pop
insl
mull
cs
mov
add
and
pop
ret
clc
mov
and
aad
jo
clc
inc
idivl
mov
inc
and
fisubs
lds
pop
inc
sub
cmpsb
fiadds
loope
shlb
sti
cmpb
xor
pushf
inc
xchg
pop
sub
fdivrl
stos
jne
faddl
lcall
int
test
scas
aad
bnd
ret
fstps
push
cld
push
mov
xchg
aaa
mov
push
pusha
jo
xchg
jbe
mov
bnd
inc
jmp
roll
or
push
xchg
imul
gs
push
cmc
mov
adc
xor
add
mov
ret
stc
sub
test
aam
icebp
and
out
jp
cmp
out
nop
subl
jecxz
mov
ret
sbb
push
push
aas
jnp
mov
ret
repz
jecxz
sbb
xor
or
add
push
jg
mov
gs
and
rcll
adc
or
mov
mov
ret
out
push
mov
out
cmp
mov
ljmp
mov
mov
or
xchg
mov
jmp
fdivrl
mov
fdiv
in
out
dec
daa
jb
std
jecxz
jae
fnsave
cltd
in
lret
mov
jo
inc
dec
inc
dec
in
inc
adc
mov
sbbb
adc
inc
int
sbb
mov
scas
cmp
jne
popa
ja
imul
fiaddl
cmp
or
in
mov
movsb
mov
dec
pop
xorb
fnstenv
lahf
rorl
mov
sbb
xchg
inc
cmp
and
insl
jb
xchg
and
xor
mov
leave
mov
lock
outsl
imul
in
div
xchg
dec
ret
push
in
es
std
lods
lcall
lret
xchg
testb
fdivl
aad
jnp
sub
ret
mov
clc
int
fs
fs
dec
jg
insb
add
inc
jge
mov
mov
fs
into
arpl
sbb
fs
fldlg2
add
pop
imul
cmp
mov
xrelease
movsb
and
and
pop
std
xchg
mov
push
js
fidivl
sarl
pop
sbb
pop
ficomps
bound
add
pop
test
and
ljmpw
xchg
pop
test
adc
movups
repz
xor
outsl
lahf
lcall
in
in
mov
dec
pop
dec
ficoms
outsl
lcall
xchg
fisubl
mov
scas
cs
sbb
xsha256
cmpsb
xchg
ljmp
cmpsb
dec
out
aad
repz
inc
movsb
addl
mov
lods
push
mov
lods
sub
jo
dec
mov
mov
dec
jbe
lock
loop
and
ja
mov
jle
loop
mov
fwait
or
scas
fsubrs
stos
es
xchg
and
cli
ret
es
xor
lock
lock
mov
leave
xchg
xchg
fcmovu
pop
subl
jp
add
and
sbb
fildl
inc
mov
stc
mov
cmp
mov
dec
jno
xchg
push
push
adc
fs
aaa
inc
jl
fst
push
ficomps
push
xor
pop
adc
insb
jp
loop
sub
aaa
jbe
or
test
in
pop
sbb
imul
call
sub
xchg
stos
ficoms
decl
outsb
insb
ljmp
cwtl
add
sbb
sahf
ss
sti
cmp
mov
imul
in
scas
jp
add
push
int
jb
pop
pop
dec
adc
ffree
test
cltd
scas
xchg
stos
push
pop
push
test
test
push
push
push
mov
mov
idivl
mov
nop
mov
idivb
int3
les
xchg
sbb
test
orl
fwait
jge
pop
sti
mov
fstpl
stos
adc
clc
out
or
add
orb
pop
dec
pop
xor
bound
cmpsb
ret
roll
and
aaa
mov
jae
or
bound
aaa
arpl
adc
sbb
daa
mov
xchg
loopne
notb
rorl
inc
pop
shll
movsb
push
das
aam
mov
mov
mov
mov
lret
dec
xchg
mov
scas
lea
mov
jg
gs
je
inc
jbe
and
loop
jo
mov
ss
icebp
inc
icebp
ror
dec
push
popa
push
popl
jno
je
rolb
dec
mov
jbe
sbb
fcompp
mov
sbb
or
loop
adc
mov
sbb
adc
inc
js
in
mov
or
inc
stos
ret
mulb
xlat
pop
sub
cmp
inc
xchg
sbb
push
test
sbb
pushf
jl
mov
cli
ror
outsb
das
repnz
gs
jmp
call
out
pop
xor
mov
call
cs
jns
adc
or
into
repnz
jne
xchg
sbb
rclb
std
clc
cltd
ljmp
ret
mov
pop
xchg
cwtl
lret
pop
arpl
mov
mov
adc
shr
outsb
inc
xchg
ja
cwtl
je
stos
jb
push
inc
shll
pop
xchg
cmpsb
flds
jne
pop
adc
add
mov
inc
out
xchg
scas
mov
loop
es
pop
hlt
jns
sahf
stc
cmp
inc
hlt
dec
push
adc
pop
adc
movsb
mov
cmp
subb
adc
jae
and
outsl
mov
icebp
fnstcw
pop
xor
pop
out
and
or
push
jl
test
nop
mov
pop
xchg
jmp
lahf
or
enter
loopne
bound
test
ret
popa
js
dec
ds
add
test
xchg
and
movsb
xchg
dec
add
or
push
lret
jbe
negl
push
dec
movsl
pop
push
mov
adc
inc
or
lods
push
and
adc
enter
adc
push
shl
pop
fwait
lret
inc
lea
fcmovne
loop
test
into
jg
test
inc
mov
clts
inc
cmpsl
sub
xor
inc
fisubl
pop
mov
push
adc
lods
or
jg
mov
mov
rorb
fimull
adc
js
out
xor
sbb
sub
cmp
xor
cmp
shlb
push
mov
data16
dec
add
mov
xor
pop
shlb
in
movsl
lret
cwtl
ret
movsb
jmp
and
sbb
jae
sbb
ret
enter
jg
push
mov
adc
pop
fmuls
cli
lahf
push
out
int3
test
add
xchg
add
xor
pop
jle
cmp
pop
idivb
cmc
hlt
cmp
test
mov
add
xchg
shl
orb
pop
js
jg
mov
lds
repnz
mov
iret
outsb
mov
push
aad
mov
or
dec
jecxz
int3
fsubs
gs
imul
fwait
dec
pop
pop
jno
in
jae
shr
jge
adc
inc
add
int3
pop
lret
lcall
mov
mov
sarb
sub
cmpsl
lahf
dec
imul
pop
data16
mov
in
imul
cli
jecxz
xchg
clc
sbb
mov
cmc
lret
loop
mov
cmp
and
bound
push
xor
aad
or
inc
inc
mov
mov
add
shrl
adc
dec
div
icebp
cmp
cmp
xchg
fs
mov
xor
sub
sbb
bound
adc
push
fisubl
xchg
aas
and
dec
dec
sarb
lret
pop
mov
adc
or
xchg
mov
mov
aad
into
inc
fdivl
ja
sahf
psubsb
jns
lock
add
clc
push
pop
ret
or
mov
das
sbb
fdivrl
adc
fisttpll
mov
pop
or
cwtl
nop
loopne
movsb
test
test
out
inc
outsl
fs
scas
cltd
jg
add
icebp
in
lahf
outsl
sbbb
adc
fsubrs
add
and
mov
sub
lods
dec
push
add
dec
pushf
or
lcall
outsb
fs
subl
cmp
add
jbe
cmpb
xor
addr16
jmp
fnstcw
shll
xchg
fs
test
cmp
imul
hlt
jmp
sbb
inc
push
sti
pop
leave
dec
fistl
mov
out
lahf
das
mov
insl
dec
stos
ss
movsb
cmpb
dec
sbb
rol
repnz
or
aas
gs
push
push
mov
jle
xlat
lcall
add
xor
mov
mov
push
lahf
mov
sub
dec
sub
mov
hlt
adc
and
pop
mov
pop
cmp
lcall
xchg
pop
mov
mov
push
fdivrs
xor
mov
repnz
outsl
daa
repz
int
rol
xchg
ror
dec
pushf
decl
or
repnz
cmp
subl
lods
mov
leave
mov
out
xchg
xchg
inc
mov
aad
aad
mov
mov
aad
inc
push
pop
mov
sub
ja
xchg
dec
stc
jo
mov
pop
adc
jl
popl
adc
aas
scas
sarb
jb
lret
cmc
in
xor
fsubrs
cmpsl
jp
sbb
mov
gs
dec
jl
jl
xor
mov
push
and
shr
fiaddl
jo
test
mov
lret
dec
shlb
add
inc
jae
sub
xchg
in
cwtl
adc
mov
mov
sbb
add
xchg
aad
mov
xchg
jle
out
adc
test
add
sub
sub
int3
pusha
into
flds
sub
adc
aas
stos
scas
fistl
sub
cmp
sub
cmp
mov
nop
xchg
xlat
pusha
faddp
push
fnsave
les
mov
mov
mov
xor
xor
mulb
add
fucomi
or
adc
lods
xlat
div
fmuls
movsb
das
cmp
nop
sub
dec
je
scas
fidivrs
fstpl
aaa
test
xchg
and
xchg
mov
lods
inc
dec
adc
popa
cmp
jnp
rcr
in
repz
xor
rcr
lods
pop
negl
lahf
adc
mov
pop
wbinvd
jae
sbb
test
loopne
clc
sub
sub
xor
xchg
pop
sbb
lcall
push
stc
fwait
adc
cwtl
add
xchg
push
xchg
scas
nop
int3
or
aad
push
adc
inc
push
xchg
adc
sub
or
jmp
mov
push
xchg
lret
sbb
sub
les
lret
cmpsb
out
xchg
rep
mov
ja
jmp
mov
and
data16
addl
clc
rcrl
out
add
pusha
and
je
fisubl
jno
or
jnp
jbe
in
lods
cmpsb
shl
inc
lea
gs
xor
data16
adc
and
inc
sub
jmp
jo
xlat
add
sahf
fchs
jae
nop
testb
arpl
sub
mov
fadd
movsl
jle
pushf
mov
push
jb
cs
cmp
loope
jne
cmpsl
shll
sahf
or
sbb
inc
mov
ffree
clc
and
sub
mov
cmp
fldcw
xchg
mov
shlw
out
xor
push
cwtl
push
fimuls
out
mov
mov
push
mov
xor
test
fisttps
push
and
scas
jmp
jecxz
shl
sbb
jp
sub
ret
dec
mov
mov
jge
subb
sbb
xorb
push
jae
out
push
xchg
inc
fdivp
stc
lods
cmp
jp
cmp
jne
or
out
stos
out
loop
dec
sub
mov
inc
cs
imul
mov
sar
cmpsb
or
lods
shlb
adc
cli
mov
addl
xchg
test
ljmp
cmp
inc
scas
cmp
adc
js
aas
negb
imul
push
and
cwtl
inc
repnz
jbe
cmp
das
cmp
mov
outsb
jge
cwtl
cwtl
in
push
cmp
hlt
cwtl
cmc
cwtl
daa
cli
fs
div
or
pop
popf
cmpsl
jne
mov
lds
shrl
notb
mov
mov
add
jnp
sar
inc
loope
pop
sbb
add
js
mov
xor
mov
xchg
pusha
sub
mov
jle
fstpt
test
and
inc
sbb
push
test
fs
int
inc
xlat
jg
push
push
aaa
pushf
mov
sbb
fucomp
notl
push
or
scas
lret
and
sub
aad
pop
cmp
nop
push
and
shl
das
cmpsb
cmp
rolb
sahf
test
pop
mov
push
fadd
sub
push
nop
push
pop
jb
icebp
rclb
lret
call
mov
sub
notl
pusha
inc
push
test
int
or
push
push
dec
mov
dec
xchg
xchg
lahf
jno
shrl
lock
test
sbb
push
test
enter
jae
inc
jle
push
sub
in
xchg
js
arpl
pop
in
sub
cmp
jl
mov
xor
add
jns
es
mov
xor
jbe
mov
scas
aam
dec
lret
std
push
jo
sub
roll
sbb
ror
adc
imul
jnp
pop
and
cmpsl
xor
les
ret
xchg
cmp
pop
adc
lods
popa
inc
adc
sbb
int3
pushf
mov
jp
dec
add
pop
push
outsb
cli
xchg
mov
pop
xchg
test
fisubrl
pop
cmpsb
fisttpll
pop
repz
mov
mov
inc
pop
jb
inc
loop
cltd
sarl
mov
gs
lret
add
loopne
and
in
jge
lret
push
jnp
ljmp
inc
ja
mov
jno
sar
dec
xor
mov
xchg
adc
jae
pop
pop
lret
or
shll
pop
sbb
cmp
dec
and
lcall
push
cld
int
dec
js
jae
pop
and
bound
gs
repnz
sub
incb
nop
aad
xor
jge
dec
or
pusha
mov
cmpsb
push
xor
add
stc
pop
int
imull
scas
imul
aas
jne
jecxz
cmc
adc
int3
jl
iret
or
pushf
jl
dec
adc
jecxz
push
test
pushl
push
xchg
pop
add
ds
mov
mov
or
cmpsb
fstl
js
mov
sub
ja
and
lret
std
lret
testl
xchg
add
jno
sar
out
addr16
inc
out
hlt
mov
xchg
outsb
push
repnz
inc
stos
testb
mov
stc
lahf
cmc
test
xor
dec
mov
aad
sbb
cmp
arpl
test
aad
adc
or
sti
xor
ret
inc
mov
cmp
adc
cmp
rcr
int3
pop
lss
es
cmp
outsl
mov
shr
mov
xor
mov
or
loop
mov
adc
hlt
jmp
lret
jg
jmp
jp
pop
mov
cmp
lods
in
cmp
lcall
mov
ds
loopne
rorl
mov
decl
adc
sbb
jb
jmp
shll
stos
pop
js
jb
pop
outsl
dec
outsl
sbb
mov
push
push
shll
xchg
cmp
aaa
mov
pushf
cmc
fs
movb
or
cmp
xchg
ljmp
dec
xchg
imul
or
fsubrl
pop
imul
xchg
inc
out
orl
sub
mov
cmp
dec
repz
jp
push
inc
or
push
aas
push
jo
mov
push
mov
xchg
les
imul
pushf
and
mov
mov
loope
rcll
jmp
xchg
ja
ljmp
cmp
hlt
sub
push
dec
addb
pop
cmpsb
jne
in
ret
mov
shll
adc
mov
and
sbb
sbb
cwtl
les
inc
or
sub
or
cmpb
jg
and
insb
jg
pop
fldcw
les
push
or
cli
pop
call
pop
add
and
lock
divl
pop
jp
cmp
ss
jae
adc
dec
adc
test
add
je
aad
popa
and
pop
dec
cltd
mov
cld
mov
cmp
cmp
add
sbb
dec
movsl
jne
bound
mov
insl
out
xor
jb
sub
fdivp
sbb
add
push
mov
pop
stc
lds
xchg
fldt
les
jb
push
inc
nop
sbb
repz
sub
pop
inc
cmp
mov
ret
sub
cmp
lods
fwait
pop
iret
jle
xor
into
push
push
repnz
inc
jns
gs
lahf
lahf
scas
pop
test
test
pop
repz
mov
xor
xor
xchg
iret
mov
push
inc
push
ja
mov
popf
mov
or
dec
movsb
xchg
iret
sub
mov
pop
cmp
dec
out
mov
adc
push
mov
aam
test
xor
dec
ret
sahf
ljmp
cwtl
pop
fbstp
or
pop
fcompl
mov
inc
leave
addb
addr16
pop
and
pop
shl
mov
daa
cli
xchg
dec
pop
mov
cmpl
add
fucomi
add
ljmp
scas
mulb
push
aas
int3
sub
lods
out
mov
in
daa
je
cmpsl
adc
xor
pop
jns
loop
push
sub
sbb
push
dec
das
cs
mov
adc
orl
clc
arpl
push
bound
mov
xor
in
xchg
mov
push
dec
in
adc
fdivrl
std
dec
sar
shl
je
scas
pushf
inc
mov
ret
sahf
sbb
and
pop
popf
test
shrl
shrl
nop
push
mov
inc
dec
jl
fidivs
jo
xchg
xchg
adc
lods
sbb
or
pushf
loopne
ficoms
inc
rcrb
mov
xor
in
repz
in
or
fmull
push
pop
inc
jnp
mov
out
xlat
test
sbb
cmpsl
jmp
cmp
into
lock
push
pop
sub
or
lahf
lea
aaa
push
aam
stc
insl
push
jg
inc
jge
sahf
push
sbb
inc
daa
push
daa
mov
imul
popa
sub
xlat
mov
add
push
cmp
test
pop
mov
lods
or
pop
stos
shlb
add
inc
scas
addr16
hlt
push
sbb
enter
adc
fcomps
inc
ret
mov
rorl
pop
cmpsb
icebp
stc
push
sti
add
ja
xchg
mov
mulb
pop
pop
add
add
mov
arpl
repz
insl
sti
jl
jns,pn
fdivs
mov
icebp
mov
sub
inc
dec
xor
add
push
arpl
addr16
push
mov
pop
push
push
push
dec
lret
ja
jl
mov
cld
xchg
dec
outsl
inc
mov
call
xor
fcmovb
jns
mov
xchg
mov
cmp
decb
pop
dec
mov
dec
fwait
xor
aam
cmp
pop
je
std
jl
jne
fists
divl
fld
fst
jecxz
inc
inc
jns
data16
jl
jmp
stc
ss
dec
xchg
enter
add
push
xor
je
xchg
lods
mov
daa
pushf
xor
cmp
fmulp
mov
lea
jno
and
cli
lea
fcmovbe
xchg
loop
outsl
loope
dec
repnz
and
pop
cmp
jg
dec
call
mov
rclb
dec
clc
mov
xor
imul
mov
mov
cmp
xor
frstor
xchg
push
imul
add
add
movsl
mov
aad
mov
jb
rol
mov
leave
mov
mov
and
dec
nop
orb
outsb
fsubs
cmp
inc
inc
sbb
pop
pop
lods
xor
add
xchg
insb
pop
cmp
inc
ljmp
mov
fwait
jmp
adc
int3
adcb
loopne
push
bound
and
fs
lock
int
xchg
ljmp
fmull
push
xor
fwait
loope
enter
aam
xchg
idivl
lret
scas
jmp
in
mov
and
je
xlat
lods
shll
hlt
add
or
insb
popa
les
lds
mov
int
and
mov
fistps
cmc
repnz
leave
inc
aaa
mov
and
cli
inc
cs
repnz
pop
imul
std
lcall
push
add
arpl
sbb
test
jmp
inc
mov
fscale
pop
cmp
nop
jne
arpl
mov
aaa
xor
mov
mov
test
out
jns
arpl
pop
lods
insl
aam
cmp
mov
sub
shrl
mov
sub
push
aas
cmpsl
mov
fs
inc
mov
neg
ret
aas
rol
inc
adc
sbb
or
adc
das
jne
pop
pop
jmp
aas
mov
dec
and
filds
popa
or
jge
sub
and
push
mul
jecxz
repz
repz
xchg
test
mov
rcrb
inc
jb
in
sub
dec
out
mov
jmp
lods
and
cmpsb
sbb
cs
dec
xchg
xor
xchg
outsl
loopne,pt
arpl
filds
jg
ret
repnz
int
fisubl
add
daa
mov
cwtl
hlt
mov
out
out
inc
mov
into
jecxz
aad
sub
pop
mov
jnp
mov
dec
dec
arpl
test
add
test
loop
repnz
cwtl
scas
jo
cmp
mov
divl
clc
aas
jae
movsb
push
subb
mov
cmp
mov
int3
xchg
fs
lds
lret
mov
aam
or
jno
icebp
mov
and
data16
pop
in
repz
sub
cmp
push
lds
test
call
and
sbb
inc
xchg
mov
or
inc
mov
sbb
add
jns
or
arpl
lock
mov
pushf
jp
daa
cltd
cmpsl
push
xchg
cpuid
mov
mov
and
xorl
pop
cmc
sub
add
out
loopne
inc
mov
mov
aas
push
xchg
add
lea
sub
pop
dec
lcall
xor
push
test
jns
inc
pop
xchg
pop
sbb
getsec
sahf
fwait
aam
leave
cmpsl
mov
mov
int
sub
rcrb
mov
push
pop
cmp
xor
std
sub
pop
in
in
adc
inc
dec
adc
loope
loop
or
lods
fstl
iret
mov
je
pushf
lea
sbb
out
inc
jno
adc
rolb
add
test
outsl
mov
lock
test
push
mov
fbstp
add
outsl
scas
push
fdiv
pop
jnp
cmp
test
nop
jns
add
adc
fwait
push
outsb
aam
sub
pusha
or
cmpsl
scas
insl
lock
sub
xchg
into
inc
inc
fsubrs
and
fisttpl
mov
ret
nop
cmc
popf
fiaddl
mov
mov
gs
lret
pop
dec
outsl
enter
add
rorb
dec
call
jle
rcl
fwait
popl
scas
cltd
jae
or
jns
ja
bound
dec
pop
stos
mov
xchg
mov
and
sub
mov
or
pop
stc
cltd
jno
aaa
inc
mov
cmp
adc
divl
fists
daa
sbb
cmp
sti
fmuls
cmpsb
pop
cwtl
dec
jp
sti
adc
pushf
push
push
jnp
xor
mov
dec
xchg
scas
insb
lods
fnstsw
es
jb
mov
adc
mov
icebp
jmp
or
inc
pusha
mov
decb
inc
scas
sarb
push
xor
adc
jmp
fcmovnbe
sub
jno
push
popa
and
add
f2xm1
jno
loop
lret
in
pop
jmp
ds
xchg
sbbb
dec
xor
test
call
cmp
dec
mov
lods
xchg
gs
and
push
adc
adc
jbe
inc
xchg
inc
mov
adc
adc
loop
insb
inc
fwait
insb
and
and
pop
insb
adc
scas
xor
stos
push
jmp
add
xchg
jecxz
xchg
dec
icebp
dec
and
xchg
lret
pop
mov
arpl
mov
add
push
mov
popf
into
popf
jne
into
sbb
cmp
pusha
fisubs
jle
pop
cmp
mov
mov
out
mov
enter
dec
stos
lods
popf
xchg
mov
cmpl
xorl
mov
lods
jp
rclb
pop
nop
mov
test
mov
jge
xchg
popa
dec
insl
inc
jns
sbb
hlt
inc
mov
insb
pop
fmuls
rorb
mov
lret
fwait
jo
pop
mov
xchg
add
out
push
sarl
rcrb
push
insb
add
and
jecxz
rorb
sbb
xor
imul
xor
jns
push
push
xchg
push
inc
jg
add
adc
xchg
roll
lock
stc
xchg
cltd
out
pop
shlb
cmp
adc
mov
push
addr16
xor
push
add
push
dec
fdivl
and
lret
repnz
shrb
scas
xor
and
jns
pop
jge
stos
push
fstpt
jbe
mov
addr16
in
mov
je
outsb
and
in
push
jle
sub
dec
subb
and
jecxz
mov
imul
or
fiadds
or
je
pop
jle
dec
enter
or
or
repz
push
mov
or
fadds
movsl
cmp
push
jnp
movsl
daa
pop
lea
pop
sti
ds
call
pop
scas
daa
push
mov
lea
loopne
cmp
hlt
mov
mov
sbb
jns
sahf
xchg
imul
das
stos
inc
lods
push
cs
and
cmp
aaa
nop
push
sbb
xchg
test
xor
sub
mov
aaa
call
sub
cld
xchg
mulb
mov
adc
ja
sub
test
mov
addr16
hlt
mov
loopne
mov
lods
les
hlt
cli
jbe
int3
mov
jno
mov
mov
xchg
cmp
sti
cmp
sbb
jp
ret
ds
movsb
lcall
les
je
aas
xchg
rcrb
xor
and
jl
sbb
jl
repnz
fnstsw
adc
jbe
sbb
mov
adc
fxch
fwait
xor
inc
ret
cmp
test
fsubrl
xchg
loopne
cs
fxch
fdivp
dec
rcrl
cmp
rorl
mov
cs
incb
insb
sbb
test
adcb
lahf
cs
jl
sub
repz
sbbb
xchg
pushf
rcll
pop
pusha
jp
cmpsb
sub
or
outsl
lret
cmp
sbb
mov
jns
cld
mov
dec
mov
pop
js
jne
pop
push
xchg
ret
cmp
mov
add
sub
xchg
imul
fcomps
sbb
mov
or
fdivrs
pushf
pop
sbb
jns
popf
data16
notb
les
aaa
sbb
das
lahf
scas
xchg
test
aad
inc
xchg
shr
shl
mov
inc
bnd
push
xor
adc
in
enter
imul
or
push
icebp
pusha
mov
or
imul
insb
pushf
push
pusha
es
cmp
pushf
jmp
and
add
cmpsl
popw
fs
aaa
lods
or
push
adc
mov
jmp
dec
btr
push
push
dec
or
mov
push
movl
ljmp
pop
mov
sti
sub
movsl
pop
xchg
jg
pop
idiv
push
xchg
jge
lods
inc
out
mov
mov
xchg
pop
mov
orb
mov
xorb
lods
pop
popf
sbb
fistpl
testl
aas
sub
cmp
test
push
and
mov
movq
inc
mov
les
mov
sbb
adc
jg
movsb
les
push
sbb
in
aas
mov
add
pusha
lret
push
loop
addr16
jns
jge
pop
pusha
adc
lcall
cmpb
add
lea
jmp
dec
push
jno,pt
cmc
cltd
fnstcw
scas
add
movb
add
mov
mov
std
or
mov
cmp
rorb
cmp
mov
mov
and
xchg
dec
roll
and
fnstcw
in
xor
insb
xchg
push
in
shll
sar
mull
int3
cmpsb
dec
stos
sti
inc
cmp
xor
mov
dec
fstpt
xchg
into
jl
lahf
adc
dec
lahf
fcoml
test
xchg
fiadds
mov
fsubl
push
cmp
adc
inc
dec
mov
stos
dec
dec
clc
xor
out
mov
push
lcall
fdivl
mov
ss
js
xor
cmc
push
fsubrs
out
fcoms
mov
adc
scas
lock
jo
sbb
push
xchg
adc
dec
pushf
imul
mov
aas
aam
nop
and
pop
pusha
fidivrs
jecxz
setge
sbb
sub
fdivrl
pop
mov
call
lock
nop
fisttpl
test
ds
sub
pop
pusha
sbb
ret
sub
mov
xor
pop
popa
int
lcall
pop
or
mov
call
fisttps
movsl
jmp
in
repnz
adc
ds
ficoml
in
mov
mov
or
in
push
add
iret
filds
mov
xchg
cmpsb
pop
mov
mov
cmp
jb
je
test
dec
sub
mov
xor
sti
xchg
add
popf
rorl
pop
into
cmpsb
outsb
mov
arpl
cli
sti
adc
xor
adc
mov
cld
inc
and
jns
out
mov
fs
leave
pop
push
cltd
insl
and
xor
jo
adc
cltd
or
fdivl
cltd
mov
out
out
or
cld
mov
jae
loopne
orb
inc
mov
or
insb
icebp
push
sbb
and
pop
jae
mov
std
or
sar
cli
sbb
cmp
inc
sbb
fdivr
push
adc
loopne
icebp
sub
or
jo
mov
sahf
shr
fsubrl
rolb
cmp
or
rcrb
hlt
je
mov
push
sbb
sub
pop
mov
sub
pop
mov
outsb
push
ljmp
ret
jge
jmp
fcmovnb
repz
pop
xchg
out
pop
pop
enter
mov
int3
xchg
jae
pop
mov
fcompl
pop
std
pushf
enter
adc
push
insl
mov
ljmp
or
inc
cmp
cmp
vunpckhps
sbb
filds
jle
out
dec
xor
push
xor
push
jnp
adc
loopne
adc
ss
mov
dec
and
sbb
popa
les
xor
mov
insl
or
mov
and
dec
cld
roll
jmp
fidivrl
xor
mov
xlat
test
adc
sub
sbb
sub
mov
fldcw
sub
out
hlt
out
icebp
inc
inc
dec
mov
imul
xor
sbb
mov
sbb
jbe
sub
cmp
mov
mov
push
out
mov
inc
mov
mov
or
jge
or
sti
das
xor
out
cld
mov
lock
aad
fisubs
js
out
cld
push
cmp
push
lahf
cltd
push
mov
jmp
nop
xchg
xor
add
xor
xchg
xor
dec
jmp
nop
out
cmp
punpckhdq
mov
std
icebp
and
add
mov
cmpsb
add
mov
daa
outsb
dec
shll
or
or
push
arpl
adc
in
pop
stos
lds
in
xchg
add
or
jbe
dec
cs
sbb
sbb
dec
add
inc
int
aad
inc
sarl
jmp
aaa
mov
pop
icebp
les
ret
dec
nop
cmpsb
cmc
add
into
xor
xchg
push
add
sub
cmp
inc
xor
sbb
ljmp
movsb
sub
repnz
jns
inc
pop
or
dec
pop
mov
testl
leave
or
scas
jp
dec
movsb
mov
mov
das
fimuls
jae
cmc
movsb
lcall
mov
and
push
mov
mov
movsb
sbb
in
push
gs
and
jmp
lock
in
and
xor
lods
and
push
sub
stc
ret
popf
ja
pushf
rorl
xor
xchg
cmp
adc
mov
or
add
mov
dec
into
outsb
mov
cmp
and
int
lret
lea
lock
xor
sbb
dec
sahf
cli
pop
push
jp
dec
xchg
loop
jp
inc
mov
mov
jne
testl
push
mov
addr16
fldl
icebp
data16
aas
loop
lret
xchg
in
mov
in
pushf
adc
or
filds
loop
addr16
and
in
jo
outsb
out
mov
mov
neg
or
addr16
or
sub
clc
adc
arpl
popf
push
shlb
sbb
aaa
rcll
cs
add
test
sbb
in
cltd
lret
sbb
std
push
or
adc
in
rorb
enter
fildll
or
incl
data16
mov
and
aam
push
cmp
rcll
pushf
cmp
lret
mov
fldl
pop
mov
dec
mov
jb
push
ficompl
inc
mov
dec
cmp
inc
push
popa
ret
les
inc
dec
pop
sbb
jge
sub
hlt
movsb
dec
cltd
dec
add
mov
adc
iret
test
xor
adcb
xchg
leave
cmp
sbb
clc
cmp
adc
inc
or
sbb
fwait
ja
push
mov
mov
and
or
and
movsl
in
jo
push
aaa
es
ss
cwtl
jecxz
aad
mov
aad
mov
mov
imul
ret
push
aam
mov
mov
lret
movsl
test
mov
push
fwait
jmp
or
out
lea
hlt
test
fists
lds
andl
test
dec
cli
sbb
dec
push
shl
xchg
adc
leave
or
and
ljmp
add
mov
popf
popa
outsb
mov
clc
aad
adc
pop
call
repnz
testl
jge
ds
push
mov
shl
scas
jbe
cltd
cld
inc
fcmovb
cmp
ret
icebp
inc
das
or
push
pop
sub
inc
adc
popf
lret
lea
fisttpll
dec
imul
ljmp
cltd
cld
xor
int
call
or
dec
out
icebp
push
add
add
push
add
out
sbb
pop
ljmp
aad
mov
and
xor
in
div
fidivs
push
inc
insl
adc
sbb
sahf
in
mov
cmp
add
mov
pop
sbb
jnp
mov
mov
mov
pop
adc
and
xchg
and
mov
or
cmp
test
dec
int3
aas
mov
push
dec
xchg
pop
negb
xchg
cmc
cld
jne
mov
repnz
sub
mov
das
mov
mov
stos
add
hlt
add
dec
pop
mov
pop
inc
or
jg
loope
sub
sbb
in
insl
jb
std
rcrb
push
sbb
jmp
cmp
mov
pop
inc
shl
dec
cmp
jne
aam
mov
fwait
xchg
mov
sbb
mov
insb
pop
mov
jge
xor
fmull
inc
aas
frstor
mov
cmp
mov
pop
hlt
xchg
mov
inc
cs
shll
xor
stos
outsl
pop
sti
sub
mov
ljmp
sub
ds
fwait
xor
icebp
aas
mov
or
fdivl
sbbb
add
jne
aas
in
cmp
sbb
jbe
xlat
mov
mov
cmp
inc
mov
sub
pusha
fdivrp
push
inc
mov
adc
cmp
cmp
or
fnstenv
mov
jnp
sub
mov
stc
dec
push
xchg
xor
jmp
sbb
inc
jp
rcll
xchg
cmpsl
add
movsl
stos
repz
mov
jo
and
sub
pop
or
sub
push
fisubrs
popl
scas
push
inc
insl
cmc
pop
inc
xchg
call
ds
cld
sub
pop
cmpsb
mov
fstl
pop
inc
xor
pop
pushf
nop
mov
arpl
inc
inc
mov
notl
cs
xor
test
shll
add
adc
shlb
inc
lods
out
pushf
test
pop
cltd
fnstcw
rolb
in
pop
sahf
shrl
and
sbb
mov
cmp
push
xchg
cmp
or
mov
dec
lret
dec
lcall
insl
push
add
sbb
cmp
xor
sub
mov
int
jp
daa
inc
test
test
inc
inc
cmp
mov
lds
loop
movsl
mov
sarl
shrb
and
push
inc
push
jne
cmp
sub
stos
cmp
call
or
addr16
gs
sti
jnp
shll
in
mov
cmp
mov
rol
fs
cmp
push
jge
cmp
les
adc
inc
mov
aaa
fsubl
sbb
ss
mov
movsb
jb
pop
pop
push
stc
mov
jecxz
fs
inc
outsl
arpl
cwtl
daa
sub
int
pop
xchg
mov
inc
jmp
adc
mov
push
mov
mov
aas
das
cwtl
inc
mov
jmp
shll
xchg
mov
cmpsb
mov
lret
or
lock
add
mov
mov
or
xchg
mov
or
push
cld
aam
pop
sbb
or
mov
aas
mov
out
push
stc
mov
push
fimuls
lret
xchg
ret
data16
dec
xchg
cld
lret
out
call
push
mov
inc
ds
cld
mov
in
aaa
in
sti
rcrb
ss
jp
frstor
add
xor
arpl
test
xchg
or
mov
push
mov
mov
popf
mov
inc
push
subb
lods
xor
outsl
lret
push
sarb
mov
imul
movb
sub
jecxz
push
jmp
jl
lahf
shrb
xchg
lock
imul
mov
lds
fwait
lahf
inc
test
dec
jecxz
mov
pop
and
repz
or
dec
ret
data16
aaa
fmull
test
sbb
stos
filds
cmp
mov
add
scas
or
lret
cmp
or
dec
je
stos
sbb
push
mov
sbb
lahf
rol
scas
push
jg
jb
loopne
and
jo
shl
push
and
jmp
ja
xchg
jns
popa
sub
sub
adc
test
mov
mov
mov
loope
or
mov
adc
and
int3
adc
mov
sahf
and
cs
cmpsb
inc
rcll
sti
or
mov
lahf
xchg
jns
bound
mov
mov
cwtl
cmp
xchg
xor
inc
xchg
sub
loope
leave
loopne
insb
fdivrs
jno
sbb
in
xchg
shll
mov
scas
ss
add
mov
dec
lock
scas
int3
lods
aaa
cmpsb
and
xchg
mov
mov
sub
leave
mov
mov
flds
ret
lret
hlt
or
sub
push
xchg
test
ss
int
jnp
xor
daa
cmp
ja
or
repz
call
or
js,pt
je
xchg
out
or
push
sub
push
cwtl
add
mov
or
cmp
xchg
sbb
pop
or
push
xchg
sbb
cwtl
aas
lods
ljmp
mov
push
stos
imulb
pop
iret
xor
xor
jnp
mov
jp
xor
fiadds
push
scas
or
cmp
and
pop
decl
lahf
mov
push
lahf
inc
pop
mov
and
mov
in
jno
pop
mov
lahf
and
std
and
mov
dec
stos
stc
fcom
pop
pop
scas
mov
sub
mov
jecxz
jge
das
or
or
dec
aam
inc
mov
and
xchg
cmpsl
in
push
test
pop
adcb
loop
jle
test
lock
cs
push
ja
jo
mov
cmp
bnd
shl
or
pop
cmp
ss
mov
cmp
jno
pushf
pop
jne
lret
add
cmp
lret
mov
scas
fdivs
sbb
pusha
dec
ds
xchg
aad
jne
movsb
bound
adc
xor
cmp
addr16
dec
leave
add
loopne
push
add
sbb
push
mov
js
loop
stos
sub
sbb
mov
dec
and
fisubl
js
rcll
pop
inc
push
fwait
mov
mov
sbb
rcr
cmp
fs
adc
or
outsb
mov
shll
mov
call
mov
xchg
cmpb
jl
int
icebp
jge
aaa
addr16
lock
xor
pop
movd
iret
jg
inc
pop
and
aas
jle
xor
mov
jle
out
mov
ss
push
js
out
scas
xor
rcrb
ljmp
aaa
data16
dec
sub
adc
xchg
xchg
and
jecxz
sub
inc
jge
xadd
lds
aad
mov
add
push
clc
imul
xchg
out
and
lods
dec
mov
lods
and
fimuls
mov
xchg
sbb
xor
mov
sub
pop
jns
sbb
nop
imul
sub
xchg
lret
cmc
dec
aaa
jg
iret
jbe
lcall
lods
pushf
imul
xchg
mov
jl
roll
ss
iret
sbb
or
mov
cmpl
pop
pop
dec
xchg
pop
fstps
mov
loopne
jo
movsl
aaa
pop
in
jge
jecxz
idivl
out
dec
hlt
xchg
mov
jbe
enter
add
je
inc
adc
mov
call
outsb
jg
xor
insb
xchg
inc
aad
add
imul
movsl
in
fnsave
xchg
push
sub
outsb
clc
inc
ljmp
pop
mov
cmp
cmp
insl
adc
fidivl
xchg
out
in
mov
mov
mov
xor
lret
add
or
mov
inc
out
jne
dec
lock
and
xchg
cmp
fisubl
xor
push
dec
sahf
sub
mov
xchg
and
and
mov
pop
jg
pushf
ficoms
out
rcll
jmp
push
mov
popf
decb
or
xchg
jns
ret
xchg
inc
push
ja
push
ret
loopne
andl
lock
scas
push
pushf
push
jp
lret
push
in
repz
push
and
pushf
repnz
jbe
fcoml
mov
mov
std
fdivrl
xor
cld
lahf
hlt
lock
pop
pusha
stc
lods
sahf
sbb
cli
cmpsl
and
inc
jp
notl
in
repz
imul
xchg
loopne
movhps
sbb
sub
or
out
ret
addr16
imul
sbb
dec
mov
mov
test
ljmp
popf
std
xchg
mov
clc
inc
xchg
add
je
out
pushl
sbb
pop
inc
pop
mov
fidivs
mov
fwait
and
push
push
sbb
jne
cltd
cld
adc
mov
and
sahf
sbbl
movsl
sub
shlb
push
neg
adc
js
fimull
pop
push
push
lds
lcall
or
sbb
mov
rorb
push
xor
jge
mov
outsb
mov
ljmp
mov
shlb
inc
test
mov
ljmp
arpl
push
push
mov
fsubrs
cmpsl
xchg
stos
inc
mov
dec
inc
cmp
mov
add
cld
push
push
xor
in
pop
iret
cli
cmc
jno
call
or
add
xchg
push
push
cmpsl
test
and
xchg
mov
dec
out
mov
movsb
cs
cmpsl
mov
sbb
loope
jg
dec
push
sbb
push
push
lahf
dec
mov
frstor
sar
cmp
jecxz
dec
pop
and
jbe
and
jge
adc
inc
jmp
push
cltd
mov
pop
lret
movsl
sub
shlb
addr16
inc
stc
cld
push
xor
xchg
rcrb
lods
and
add
sbb
stos
add
sub
or
dec
or
cmp
les
sahf
jno
and
mov
dec
sarl
shl
icebp
lds
pop
cmp
mov
lods
xchg
pop
cmpsb
jo
fs
pop
lret
add
push
mov
in
push
mov
cwtl
aaa
sbb
adcb
jo
jmp
and
or
sub
fldt
in
dec
loopne
mov
rclb
lods
and
sub
out
xchg
push
sub
inc
scas
sbb
cmp
jae
call
imul
pinsrw
out
test
lods
in
mov
pop
jne
pusha
outsb
push
cmpsb
cmpsl
cmp
cmp
jb
xor
jp
or
outsb
pop
fisubs
dec
mov
dec
ret
movsb
mov
int3
mov
leave
or
imul
mov
pop
sbbb
inc
jge
mov
repnz
andl
and
loope
push
jp
aam
cmp
sbb
mov
mull
pushf
das
dec
push
daa
sub
out
je
rcr
fldcw
ret
jno
sbb
cmpsl
cmp
inc
pop
cld
adc
mov
push
inc
fiaddl
lods
call
xchg
dec
xchg
cmp
xor
cltd
mov
lret
aas
notl
data16
cmp
and
rorl
sub
pop
mov
cmp
out
out
xor
fimuls
daa
jge
adc
stc
push
push
bound
mov
sbb
sar
xor
and
ret
ret
sub
std
fisubl
roll
or
push
dec
outsb
popa
cmp
test
andb
ret
lcall
call
into
jge
lret
shll
insb
xor
aam
rclb
adc
mov
imul
fst
out
or
adc
jmp
outsb
int3
jge
jae
or
xor
xor
out
push
xor
dec
push
dec
decb
mov
cmp
mov
push
sbb
out
xor
out
cwtl
ljmp
les
lods
or
lcall
ljmp
cmp
jae
aas
dec
fptan
fistps
mov
sbb
aam
les
out
lds
test
or
je
sbb
fsubrs
mov
test
movsl
fwait
sub
outsl
test
aas
sub
lcall
xlat
ss
jnp
jle
bound
sbb
mov
in
fwait
pusha
push
jmp
lcall
xchg
iret
dec
cmp
lahf
lds
add
jnp
mov
push
inc
arpl
mov
push
push
and
sbb
pop
outsl
sbb
push
ss
and
mov
rorb
ret
xor
and
cmpsl
push
fsubs
int3
shrb
in
cwtl
pop
mov
lret
mov
cmp
leave
xchg
add
inc
leave
in
jmp
jg
push
in
sbb
insl
jb
idiv
sub
pop
or
lods
dec
ss
in
mov
dec
in
psubsb
jae
sbb
idivb
adc
or
mov
jnp
push
sbb
imul
mov
icebp
jge
cwtl
ret
cmpl
mov
loopne
in
inc
pop
xor
in
sub
add
xchg
inc
and
test
movsb
jnp
sub
mov
xchg
xchg
jns
fnsave
and
lods
mov
or
sbb
adc
scas
mov
jne
sbb
lods
sbb
lea
sbb
nop
sbb
xchg
sbb
lods
dec
je
fmull
mov
lcall
pop
xchg
mov
aam
adc
mov
inc
stos
cmp
divl
mov
jl
pushf
insb
or
cmpsb
mov
cmpsb
outsb
pop
mov
mov
xor
in
push
test
addr16
insl
adc
out
mov
lcall
aaa
or
mov
addr16
jb
in
dec
out
cs
push
jg
jne
in
xor
xor
iret
pop
stos
idivb
or
jle
mov
scas
add
add
pop
add
and
or
sub
add
arpl
sahf
fmull
sbb
mov
fisttpll
clc
jo
test
jg
out
hlt
div
inc
pop
mov
push
scas
idivl
jo
arpl
inc
popa
push
xor
in
jmp
pop
push
lds
mov
add
je
sbb
leave
jp
int3
lods
imul
lcall
xor
cmp
fcmovu
bound
or
pushl
mov
mov
inc
fimuls
push
and
fisubl
les
addr16
mov
push
jp
data16
jge
aaa
ja
xor
insl
gs
into
add
adc
xchg
out
cmp
jns
dec
lock
cld
imul
cmp
lret
sub
pop
imulb
mov
int3
cli
jle
scas
push
xor
jl
add
lds
dec
in
cmc
xor
pop
xor
aaa
inc
jmp
dec
mov
clc
mov
lods
inc
stos
mov
sbb
add
add
ret
pop
mov
orb
push
push
aad
adc
stos
push
aad
stos
adc
insb
mov
out
ja
imul
dec
jp
stos
inc
xchg
js
dec
jecxz
mov
nop
or
out
les
jbe
push
in
loop
test
mov
add
mov
addb
jl
adc
and
xchg
mov
and
lods
aam
jmp
mov
sbb
in
mov
popf
fcmovnbe
mov
xlat
dec
push
jbe
mov
fwait
cmp
je
dec
sahf
test
icebp
add
out
or
xchg
push
dec
mov
data16
sbb
or
pop
ret
movsb
imul
notl
mov
push
push
mov
les
jno
outsl
arpl
hlt
and
mov
sbb
xchg
mov
shll
adc
rclb
adc
js
pop
inc
shrl
mov
lods
mov
insl
or
dec
sub
mov
push
jbe
jo
loopne
sbb
stos
cld
cli
fs
mov
jne
sub
add
mov
xchg
scas
xor
out
mov
mov
add
filds
enter
frstor
jae
fmull
adc
jg
loopne
fdivrs
out
sti
loop
pop
cwtl
setno
add
addb
scas
inc
gs
test
or
in
ret
jns
jae
jp
or
xlat
fldt
in
inc
jb
pop
jp
push
xchg
sub
cmp
cli
or
cs
jmp
mov
shlb
mov
sub
jp
cmp
xor
add
gs
lcall
sub
mov
add
push
sub
add
mov
pop
aad
clc
push
imul
popf
and
xchg
dec
sbb
xchg
lcall
jmp
pop
outsl
jne
mov
cmpsl
outsl
jge
inc
add
xchg
sbb
dec
lret
dec
je
cmp
lret
loopne
xor
mov
ljmp
insb
or
add
pop
popf
cmpsl
sbb
repz
icebp
mov
aad
sub
xchg
andl
fdivr
bound
or
cwtl
sti
in
xchg
dec
sub
roll
aam
js
test
sub
call
sub
jnp
loope
or
stos
in
jns
fs
adc
lock
sub
imul
push
out
mov
pop
stos
outsb
popf
inc
test
cmp
push
fiaddl
cwtl
xor
xor
sbb
cmp
push
test
push
imul
pusha
jnp
jno
mov
fistps
pop
test
mov
incl
mov
dec
test
mov
insl
mov
shlb
sub
mov
fnstsw
or
jle
in
push
lret
push
pop
gs
or
pop
rcrb
les
mov
jb
sbb
xor
jle
xchg
xchg
enter
out
pop
mov
pop
nop
sbb
mov
cmp
in
mov
or
dec
lret
jp
pop
leave
ja
lahf
push
lcall
pop
pop
lock
and
add
aaa
pop
lret
dec
bound
and
pop
add
push
ja
xchg
dec
sub
fdivl
cld
out
xchg
pusha
push
leave
or
jecxz
dec
divb
gs
inc
loope
stos
xchg
adc
mov
xor
outsb
aad
shll
fdiv
mov
sub
dec
sbb
xor
jmp
sbb
lret
rcrl
xchg
sarb
adc
inc
iret
add
imul
out
lods
imul
sbb
add
repz
rorb
psrlq
mov
mov
or
mov
fcmovnbe
jg
jne
inc
or
push
call
sub
and
mov
cmp
ja
xchg
adc
jbe
in
jp
sahf
cmp
fistpll
adc
inc
mov
cltd
aaa
cmp
add
and
add
jmp
icebp
and
in
movsb
imull
lock
mov
xchg
jo
xorb
notb
int3
popa
jb
subl
jl
jle
push
xchg
rolb
jmp
xchg
mov
mov
in
mov
je
repnz
loopne
out
test
xchg
adc
jge
icebp
push
int3
les
dec
xorl
repz
and
pop
push
sarl
and
sbb
or
cmp
push
sbbb
push
imul
adcb
test
xor
xchg
cmovnp
popa
sub
xchg
mov
push
jge
xchg
sbb
data16
sti
pop
xor
jbe
fnstenv
jno
test
lahf
mov
pop
scas
out
push
out
sti
jp
shrd
adc
mov
adc
rorl
push
pop
sub
add
pop
mov
ret
sub
dec
jge
sbb
cmc
leave
aaa
xor
mov
dec
mov
jne
mov
push
insb
sbb
pop
rcll
test
out
fnstenv
or
xchg
push
mov
mov
sbb
loopne
add
sbb
mov
add
test
clc
lcall
enter
ret
dec
cwtl
mov
lods
push
xchg
jp
lock
out
xor
jmp
outsl
push
sub
je
push
rcll
stos
sub
add
mov
dec
scas
or
jne
push
imul
aam
cmp
inc
push
shr
sbb
fldcw
adc
pop
sub
lcall
or
push
sub
cmp
jnp
mov
and
popa
outsl
out
mov
pop
jp
push
add
ds
dec
orb
es
lock
jns
xchg
pop
fbld
nop
pop
inc
ficompl
and
sarl
lcall
icebp
jle
pop
ljmp
stos
sub
jne
fcmovne
in
jge
cmc
pop
je
fwait
sub
fisubl
fmuls
mov
xor
popa
bound
cmpsb
adc
jne
push
mov
pop
rol
xchg
xchg
xor
inc
jbe
shl
neg
fwait
inc
data16
pop
jbe
mov
xor
or
dec
and
in
fsubl
or
push
push
sbb
gs
shrb
stc
iret
pop
lret
add
mov
and
sahf
adc
lods
aas
sub
pushf
sub
mov
mov
icebp
nop
jmp
fistps
pop
mov
pop
fistl
outsl
shll
ss
mov
xor
popa
scas
loope
add
outsb
sahf
sbb
mov
sbb
repz
lret
stos
in
mov
in
shlb
into
push
mov
mov
rcll
add
jg
fistps
mov
lret
stc
rorb
xchg
test
xchg
hlt
dec
mov
scas
pop
dec
mov
push
or
subb
lcall
mov
fiadds
and
ja
mov
lods
xchg
test
addb
in
loop
cmpsl
mov
lcall
popf
ja
test
push
mov
cmpsl
and
xchg
and
movsb
add
cs
shlb
dec
mov
adc
movsb
mov
inc
mov
popa
lcall
cmc
mov
gs
in
xor
inc
in
inc
mov
stos
jmp
add
lahf
out
out
nop
repz
leave
xchg
lock
pop
in
repz
ret
jl
loope
test
adcb
std
xlat
mov
bound
jl
cmpb
dec
aam
test
imul
push
mov
push
xchg
sbb
xor
xor
jno
out
push
push
mov
inc
mov
jle
pop
sub
es
addr16
sbb
push
xchg
pop
testb
mov
repz
jg
int
xor
jae
adc
dec
push
clc
out
dec
sti
lods
sti
push
inc
mov
divps
aaa
loop
test
push
mov
js
rclb
xchg
inc
xor
mov
pop
inc
pop
adc
lahf
in
jb
push
es
lret
sbb
inc
test
cld
xchg
pop
xor
xor
and
mov
xor
testl
lock
andb
ret
mov
mov
jne
in
jno
sub
sub
movsb
mov
adc
cld
pushf
fcmovu
xchg
or
and
icebp
loope
fimuls
cmp
cmp
mov
stc
push
daa
stc
fcompl
shr
adc
cli
sti
push
and
sub
mov
mov
cmpsl
mov
aam
jb
mov
xchg
cmp
push
mov
sbb
inc
bswap
and
rorb
mov
enter
loope
fcmovnu
imul
add
sbb
popf
jne
dec
popa
pmulhuw
push
push
mov
cli
mov
adc
push
jl
leave
dec
xor
lret
or
jp
cmovo
xchg
call
sub
or
aad
mov
cmp
lock
sti
jl
cmp
sbb
push
lret
popa
cmpsb
imul
es
xchg
jl
dec
jecxz
sbb
sbb
jge
cmpsl
daa
shll
fwait
adc
xchg
add
cltd
imul
loopne
mov
sbb
repz
push
shlb
mov
nop
pop
into
add
rcrb
or
notb
push
pusha
mov
add
mov
add
mov
rcrb
push
xchg
rcr
movsl
xchg
adc
int3
cs
sbb
inc
mov
mov
pop
enter
push
mov
repnz
ret
pop
jmp
movsb
je
fsubrs
push
mov
ja
mov
clc
test
sti
lods
loope
xor
inc
inc
mov
cli
scas
test
sar
jg
mov
add
inc
std
rcrb
pushfw
lea
cwtl
lahf
jmp
in
lret
or
cmp
popa
std
imul
cmpsb
mov
xor
icebp
lods
inc
fdivr
push
or
dec
dec
arpl
pop
pop
ret
or
cmp
movsl
shrb
adc
xchg
adc
adc
sbb
cmpb
push
inc
outsl
mov
push
ds
adc
into
mov
cmpsb
iret
and
cmp
pand
cmc
sbb
jb
add
xchg
dec
bound
adc
inc
repnz
jns
xchg
outsb
xchg
xchg
lds
push
pop
dec
je
imul
cmp
push
loopne
push
aas
les
je
adc
and
imull
mov
pop
cmp
popf
or
jno
jle
stos
ror
addr16
mov
dec
jge
stos
fwait
pop
inc
nop
inc
and
in
fidivrs
pop
and
xor
jae
dec
out
xor
push
sarl
nop
cmpsl
xor
dec
pop
jecxz
sub
mov
test
stos
arpl
shl
and
mov
inc
dec
shrb
jae
stos
aaa
lea
jo
sub
rcll
sahf
pop
mov
or
sub
inc
add
lods
shlb
and
fwait
bound
sub
inc
pop
imull
inc
fs
out
dec
jg
arpl
adc
cltd
sbb
and
sbb
lock
adc
jne
push
push
mulb
scas
jg
test
sub
imul
add
push
push
or
and
inc
cwtl
dec
sbb
cmp
sti
xchg
adc
adc
addl
sub
mov
cmc
inc
cwtl
pop
fisttpl
jg
mov
push
in
or
nop
dec
or
out
fimuls
dec
or
aaa
sar
and
adc
pop
mov
les
push
repnz
jp
das
xchg
stos
sti
shlb
add
jae
out
out
xchg
jp
imul
sub
xchg
xor
jge
adc
xor
xchg
into
sti
rolb
push
out
std
xchg
xchg
pop
cs
jnp
xor
push
xchg
add
mov
push
movsl
ficompl
aas
in
ljmp
stos
jbe
mov
pop
bnd
cmc
ret
shl
mov
xorb
mov
mov
mov
inc
clc
pop
mov
sbb
movsl
mov
push
mov
or
dec
push
jae
in
and
push
cmpsl
sub
ret
ds
imul
test
jb
hlt
jb
lods
jg
mov
xchg
jae
jmp
inc
mov
orl
in
or
rcll
out
cmp
ficoms
inc
loope
popa
push
addr16
popf
idivb
pop
mov
test
fs
clc
hlt
repnz
aad
xchg
aam
and
nop
sbb
bound
test
push
lret
insl
xor
and
out
or
jmp
push
dec
push
mov
adc
cltd
mov
test
out
decl
std
inc
jle
push
xor
jecxz
cmpsb
xchg
icebp
add
sub
push
addb
sbb
sbb
push
adc
cmp
push
mov
xor
jl
es
cmp
sub
fsubs
or
mov
lahf
sbb
xor
xor
sbb
push
xchg
in
jae
mov
into
inc
lret
cmp
ja
ss
lods
sbb
fnsave
out
sti
dec
int
loop
mov
shl
sbb
hlt
repz
fstl
lret
add
jns
xchg
jl
or
jno
pop
cmpsb
jnp
and
push
pop
cld
mov
fwait
mov
cmp
adc
repz
jge
jmp
loope
push
and
xor
movsl
dec
jne
cwtl
or
cmp
into
ror
adc
insb
mov
popa
xchg
sahf
jl
loop
movsl
popf
enter
scas
bnd
shll
xchg
dec
jne
sub
dec
cmp
faddl
adc
or
out
mov
leave
push
sub
sbb
push
push
lret
cld
stc
fmull
pop
int
dec
cltd
jns
sbb
mov
pushf
cwtl
mov
push
out
sarb
jns
xlat
insl
mov
mov
in
dec
mov
inc
movsb
or
and
mov
or
fmuls
xchg
and
gs
insl
mov
repz
adc
insl
insl
adc
jg
jp,pn
push
out
jle
xor
pop
lahf
test
xchg
sub
jmp
sub
mov
loope
test
mov
mov
jne
push
int
cmp
cwtl
outsb
jbe
js
fcmovne
fwait
and
ss
mov
cwtl
add
sub
sti
repz
ss
es
push
notl
cmp
xchg
insl
sub
and
xor
shl
mov
clc
sub
pop
int
in
shl
xor
jae
jne
sbb
scas
cmc
out
ljmp
insl
ss
xor
push
cli
and
dec
cmc
jo
in
cmpsl
push
jo
add
lret
cmpsl
fs
addr16
cmp
xor
scas
shr
mov
leave
and
cwtl
jmp
mov
push
xchg
xchg
je
gs
add
adc
push
sbb
loope
enter
aas
outsb
dec
pop
leave
int
jmp
and
xor
fs
arpl
imull
ret
mov
push
and
repz
aam
or
fwait
mov
dec
leave
mov
cmp
xchg
xor
mov
les
movsb
mov
pop
and
bound
cmp
push
push
push
inc
insb
inc
inc
gs
mov
dec
mov
fmull
and
xchg
or
test
push
out
jb
dec
insb
sbb
fsub
repnz
adc
sub
mov
adc
dec
das
fidivrl
out
pop
lods
jns
scas
js
dec
push
sub
push
popa
lds
inc
mov
inc
lods
cmp
adc
push
inc
lods
cmp
into
sahf
jecxz
js
imul
lret
or
cs
xor
outsl
jne
pusha
decl
pop
cmp
outsb
jle
addr16
sbb
loop
ss
negb
adc
pushf
bound
ss
xchg
cld
mov
adc
lds
fwait
mov
stc
lret
test
out
mov
cmp
ds
cmp
add
mov
pop
push
out
lcall
and
dec
test
add
fsubs
inc
nop
xchg
mov
sub
push
sub
fnstcw
jg
addr16
addl
and
test
insl
xchg
repnz
or
psrld
or
or
xor
outsb
fisubrs
lock
push
cmpsb
push
jae
or
outsl
jnp
mov
roll
das
data16
jge
push
xchg
mov
sbb
ffree
and
je
adc
test
adc
and
push
fbld
ret
test
call
cmp
mov
inc
movlps
lcall
outsl
idivl
and
mov
mov
decl
push
lahf
test
dec
lock
pcmpgtw
ret
inc
or
repz
xlat
ficompl
cmpsb
adc
cmp
loopne
xchg
lods
rcrl
insb
in
sub
sub
shll
pop
jmp
std
cltd
stos
repz
and
pop
jo
js
add
cmc
pop
inc
sbb
cmc
out
aaa
push
cli
jge
mov
sub
movsb
stc
jmp
fcos
mov
je
mov
cmc
jns
mov
xor
fcomps
push
std
repnz
loopne
popa
popf
jle
xor
lods
mov
cs
add
and
rolb
fildll
sub
adc
adc
mov
sub
pop
and
sub
loopne
movsb
sbb
or
fstpl
pop
dec
push
inc
mov
cmp
test
out
lret
xchg
pop
call
inc
mov
fwait
or
ret
shll
or
out
int
or
jne
outsl
test
out
out
adc
mov
mov
jmp
pop
test
pop
data16
jne
dec
clc
pusha
push
stos
es
xchg
mov
rcrb
int
aas
mov
add
outsl
push
pop
mov
and
jmp
sub
dec
push
iret
loop
add
sti
push
out
push
xchg
rclb
das
das
loope
test
dec
dec
lods
jmp
push
dec
ret
cmpsb
sbb
sahf
push
imul
jb
inc
daa
push
out
out
or
pop
jmp
aas
leave
int3
sub
pop
sbb
sar
bound
sbb
out
or
inc
test
pusha
gs
mov
frstor
cs
scas
dec
testb
push
sahf
mov
jp
mov
ljmp
scas
xchg
das
jnp
adc
mov
push
andb
adc
call
jg
incl
dec
pop
or
push
mov
sub
pop
mov
enter
jp
rep
mov
xchg
sub
sti
cmpsb
mov
shlb
mov
and
lret
sub
pop
mov
mov
flds
dec
fiadds
or
std
outsl
dec
sbb
and
lock
dec
lahf
or
jo
xor
jo
dec
pop
sbb
or
adc
lcall
js
sub
pop
xor
test
xor
dec
scas
dec
sbb
pop
push
inc
pop
mov
in
mov
xor
xchg
adc
gs
repnz
and
sbb
repz
bound
mov
addb
and
or
xor
es
ret
adc
stos
jg,pn
lock
mov
jne
mov
shrl
push
lret
xchg
and
mov
mov
icebp
adc
mov
adc
inc
sub
cmpsb
movsl
dec
insb
fdivrp
outsb
mov
pop
adc
mov
inc
sbb
cltd
ljmp
mov
sub
sbb
dec
xor
jo
jbe
inc
lea
icebp
sarl
adc
push
repnz
ret
popl
add
sbb
hlt
out
push
stos
hlt
fistps
sahf
cmp
enter
mov
dec
repnz
sbb
scas
mov
arpl
test
sti
in
or
lock
pop
ljmp
xchg
xchg
sbb
iret
push
stc
jne
or
cmpsb
jg
jle
enter
inc
adc
in
aaa
mov
add
push
xor
pop
aaa
add
xor
or
popf
or
xchg
cltd
inc
pop
dec
sub
cltd
cmp
stc
movsb
ja
sub
ljmp
in
popa
mov
cmpsl
mov
test
ljmp
cs
mov
lret
cmpsl
push
mov
outsb
dec
mov
incb
sbb
ret
mov
popl
push
jecxz
jae
adc
dec
hlt
pop
mov
jns
mov
arpl
shrl
movsl
inc
mov
dec
dec
add
xorl
jecxz
sbb
jno
and
sub
mov
sub
daa
and
push
xor
jg
mov
dec
pop
lds
sarb
mov
movl
sub
inc
xor
insl
rolb
or
mov
xor
cmpb
adc
or
mov
push
xor
pop
mov
jecxz
and
repnz
ja
fdivrl
mov
or
mov
jae
jmp
test
icebp
test
pop
sbb
pop
mov
flds
xchg
dec
addr16
or
dec
adc
shrb
divb
rolb
cmpsb
ljmp
setno
xchg
out
bnd
shll
pop
test
mov
lods
push
and
and
daa
add
imul
xor
xor
mov
js
xor
loopne
in
sahf
sub
cmpsb
or
jo
cmpsb
cwtl
jnp
mov
mov
push
sbb
or
sub
cmp
adc
pusha
scas
cltd
adc
aaa
jb
aam
and
rorb
in
pop
add
lcall
loope
mov
mov
sbb
jb
mov
out
pop
cld
dec
dec
aam
std
adc
das
mov
fiadds
dec
pop
pop
cmp
sbb
movsb
arpl
jg
mov
pusha
out
insb
enter
mov
orl
mov
imul
je
add
test
push
sub
in
fmull
add
sub
push
lds
lods
movsb
sbb
push
mov
dec
fcoms
and
sub
and
cwtl
jno
out
push
xorb
or
and
jae
ljmp
scas
push
pop
pextrw
test
fcoms
sub
mov
insb
jns
cmp
aam
jo
imul
test
sti
push
js
push
mov
repnz
fwait
sbb
imul
add
sub
mov
lea
push
push
adc
pop
xorb
cmp
fcomps
jo
or
insl
cmp
lods
cmp
or
test
adc
pop
pop
pusha
push
js
xchg
outsl
icebp
jbe
popl
outsl
jb
jecxz
mov
std
ret
imul
add
jle
jmp
xor
data16
call
jle
cli
xor
ds
lret
and
fwait
lds
test
ss
push
mov
sub
adc
shlb
test
push
xor
ja
xchg
xchg
pop
xchg
testl
out
jle
subb
mov
out
and
jmp
mov
mul
int
adc
lcall
or
lds
stos
aaa
inc
mov
cmp
cmp
push
sarl
ljmp
mov
loop
ret
testb
aas
iret
dec
ljmp
scas
cmc
xchg
testl
shr
inc
jbe
mov
pop
mov
push
jne
mov
cwtl
add
loopne
dec
movsl
fiadds
push
pop
cmp
sarl
jns
fxch
call
nop
faddp
cmp
jae
push
inc
lock
xchg
imul
mov
loope
shll
enter
mov
mov
mov
or
leave
mov
fwait
jne
arpl
adc
test
or
xchg
loope
xlat
cmpsl
test
mov
dec
das
rorb
ja
cwtl
xor
aam
dec
adc
pop
push
jbe
cltd
xchg
lods
fstps
xchg
imul
mov
jp
xchg
mov
outsb
pushf
pop
fiadds
mov
rcll
pop
mov
mov
cmpsb
adc
cs
fsts
out
gs
sub
pop
repz
sub
add
mov
or
or
fucom
outsl
cmp
dec
addr16
std
dec
loopne
pop
or
push
ret
and
ljmp
jbe
jge,pn
popf
inc
inc
push
in
imul
cli
cli
mov
jnp
and
push
subl
mov
into
ffreep
imul
je
jmp
push
insb
test
sub
popa
cmpsb
cmp
fwait
mov
lret
scas
push
xchg
lods
adc
fildll
push
cmp
mov
adc
rcrl
xchg
mov
outsl
imul
mov
sbb
mov
outsl
pushf
dec
inc
lahf
push
cmpsb
dec
pop
lret
lcall
jge
sub
pop
push
inc
out
sub
jl
inc
cmpsl
mov
mov
shr
inc
adc
add
dec
scas
test
cmp
jnp
jp
mov
or
movsb
test
gs
rclb
aaa
scas
out
push
stos
pop
dec
add
cmp
mov
xchg
scas
lock
fucom
ljmp
mov
jo
pop
mov
stos
mov
push
and
out
loop
imul
mov
sbb
fcompl
test
cmpsb
out
mov
cs
cmp
xchg
pop
fdivrl
fiadds
out
mov
inc
sub
movsb
aad
popa
or
push
aas
lods
dec
sub
xor
pop
mov
rorb
cld
adc
inc
js
ja
hlt
cmp
aam
addb
imull
jns
inc
scas
cmp
std
addr16
aas
add
mov
fs
lret
loopne
mov
adcb
mov
push
call
in
aas
fs
mov
jp
dec
jne
mov
ljmp
pop
pop
hlt
pop
cmp
cmp
aad
adc
ret
insl
jp
mov
mov
nop
xchg
pop
pop
cwtl
sub
add
daa
ss
pop
push
sub
xchg
or
xchg
hlt
or
adc
jo
xchg
dec
mov
push
or
mov
enter
ret
test
fsubs
lret
imul
jmp
lods
or
or
xchg
mov
subl
sahf
inc
pop
jae
xchg
and
push
or
and
out
lret
int3
mov
push
aam
fimuls
sub
inc
sbb
nop
scas
jbe
push
out
popf
ljmp
out
fcoml
loope
daa
stos
dec
mov
hlt
mov
sub
loope
sbb
loopne
rol
cmc
add
inc
repnz
ss
sahf
stos
repz
cmp
test
cmpsb
or
call
push
insl
adc
adc
mov
add
insb
mov
adc
in
xchg
loop
mul
shlb
xor
jg
addb
pop
push
dec
sub
cmp
sbb
scas
adc
mov
lcall
xchg
push
sub
xchg
jbe
jg
pusha
repnz
in
in
rcll
sub
shrl
repnz
movl
mov
clc
cmpsl
daa
pushf
push
jo
xor
int
add
addr16
jbe
pop
popa
mov
and
mov
call
pop
cmp
and
lcall
lock
ds
clc
rcll
test
mov
push
cmc
imul
push
adc
and
or
add
enter
out
int
mov
xor
xchg
ret
xchg
pushf
pushf
dec
aaa
int
adc
les
aaa
fistps
mov
cs
or
ja
xor
add
shr
cltd
loop
ret
pop
jnp
xchg
js
subl
data16
inc
out
and
imul
inc
xchg
fwait
dec
outsb
dec
xor
add
lret
and
or
mov
mov
lods
cmp
jg
adc
aad
shrb
in
call
cmpsb
mov
add
push
mov
xchg
push
push
int3
pop
add
xchg
push
or
arpl
mov
mov
adc
add
mov
cmp
lret
mov
stc
jb
mov
es
imul
mov
add
cmp
dec
push
out
or
or
mov
adc
dec
push
lock
ja
stos
ret
iret
add
je
loope
jge
lea
dec
cli
out
sub
test
or
repnz
and
je
popf
mov
aaa
adc
pop
hlt
xchg
mov
mov
pop
mov
shlb
mov
nop
sub
mov
xor
outsb
rorb
cltd
jmp
push
sti
sar
mov
mov
imul
clc
sahf
push
mov
bound
mov
out
testb
xchg
insb
out
jge
test
or
cld
aam
shrb
dec
test
gs
outsb
cmpsl
sbb
je
sub
dec
es
jecxz
add
arpl
push
xchg
in
shrl
hlt
mov
mov
adc
in
mov
mov
push
lods
es
inc
or
mov
push
fldcw
mov
or
sbb
mov
pop
sub
fisttps
test
sbb
add
jno
inc
push
push
jmp
inc
std
jbe
xlat
xchg
aam
lahf
int
cmpsl
js
jbe
dec
jg
jne
enter
cmpsl
xchg
repz
scas
lret
rcll
ss
icebp
xchg
loopne
ret
xchg
fsts
push
loop
xor
push
sub
inc
mov
push
cld
push
mov
adc
jl
inc
fmull
notl
cmpxchg
sub
mov
push
sub
sub
out
pop
fs
scas
mov
sti
add
mov
mov
and
cmp
cmp
inc
add
pop
xor
jge
pop
lods
xchg
insl
adc
cmc
mov
nop
lds
lahf
mov
cmp
lea
mov
sahf
push
aam
aaa
cld
daa
stos
push
mov
sbb
xchg
mov
inc
jnp
addr16
cmc
movsb
aam
enter
jge
nop
xchg
scas
inc
xorl
repz
enter
aas
lock
lret
test
push
add
mov
jne
sub
push
fwait
cmpb
inc
in
push
push
mov
movsb
loope
mov
fsubrl
adcb
scas
dec
jmp
mov
pop
mov
int
mov
jecxz
mov
jg
mov
pop
sub
xchg
mov
mov
leave
test
dec
cld
mov
add
and
pop
popa
movsl
jg
mov
adc
sub
mov
sub
pop
dec
xor
lret
enter
clc
hlt
pop
mov
or
mov
inc
inc
adc
xchg
out
cltd
xor
mov
xor
cmc
lret
out
insl
int3
mov
loop
or
fwait
pop
fcomps
movsl
inc
mov
and
test
popf
aad
fsubrl
push
mov
mov
ja
jmp
imull
loope
push
xor
sbb
push
and
aad
cltd
ds
mov
inc
xor
sub
popa
xor
jle
adc
stc
pop
popf
dec
xchg
xchg
and
das
inc
push
fiadds
jns,pt
or
arpl
cmp
sbb
cmpsl
add
jns
sbb
sbb
mov
out
or
test
pusha
dec
icebp
add
pop
push
adc
mov
jg
cmp
lcall
cli
movb
lds
aaa
bound
out
adc
sahf
into
clc
adc
in
mov
mov
mov
push
lahf
mov
into
cmpl
and
push
cmp
stos
xchg
push
push
inc
xchg
dec
adc
stos
test
daa
jge
sub
ljmp
sti
push
mov
mov
insl
nop
sbb
stos
adc
gs
mov
add
sub
in
jb
xchg
dec
clc
sbb
mov
cltd
fcmove
push
in
loopne
pop
mov
lahf
incb
pop
push
daa
xchg
dec
mov
arpl
push
stos
leave
movsl
pop
mov
lret
jne
roll
setle
sub
call
sub
pop
cmp
cmp
das
add
push
imul
imul
divb
scas
pop
outsl
sbb
dec
mov
jle
ljmp
enter
cwtl
jle
ss
add
pop
mov
loopne
add
jne
xor
nop
and
jbe
push
out
lods
shll
dec
adc
jmp
cld
pop
dec
addr16
cmp
sub
mov
cmp
cmpsb
enter
stc
jbe
adc
jle
or
mov
cwtl
stc
mov
fidivs
xchg
add
push
shlb
pusha
pop
pop
mov
jnp
mov
mov
jo
ds
out
das
leave
mov
xchg
pop
aas
xchg
xchg
pop
mov
pop
fisubrl
lods
push
clc
fidivl
pusha
inc
mov
cltd
xchg
mov
inc
movsb
pop
shl
inc
fwait
mov
dec
iret
imul
jmp
mov
iret
jno
pop
into
ret
jecxz
sub
push
roll
shlb
cwtl
call
outsb
adc
ss
dec
mov
sahf
mov
mov
mov
out
push
mov
popa
mov
push
xacquire
xor
movsl
leave
inc
movl
or
je
xlat
outsl
xchg
sub
les
or
sub
je
jbe
je
or
pop
dec
adc
mov
mov
sub
jbe
stc
ljmp
sub
add
int3
xchg
out
ret
fwait
cltd
jb
fimull
in
mov
js
inc
mov
add
cmp
sbb
jb
jl
cli
jno
das
adc
lret
mov
lods
fwait
mov
lds
or
mov
sub
push
dec
out
push
mov
add
daa
pop
stos
inc
orl
lea
xchg
loop
dec
bound
bound
or
fdivp
pop
or
sahf
adc
push
xchg
lock
enter
pop
push
mov
xchg
out
das
mov
jl
repz
adc
fisttps
outsl
and
or
iret
out
fidivs
das
aad
aas
cmp
push
mov
cmpsb
mov
mov
cmp
inc
gs
add
pop
pop
fisttpl
jp
and
cmp
mov
mov
sti
stc
int
icebp
scas
loopne
cmp
adc
adc
shlb
mov
popf
lcall
jbe
fsts
popf
xor
jmp
push
xchg
movsb
cmp
sarl
repz
adc
mov
aas
jbe
shlb
aam
pop
dec
push
jae
pop
aad
std
outsl
aaa
sbb
pop
pop
add
stc
xor
mov
inc
pop
sbb
int3
bound
lret
sbb
imul
popa
mov
fcomps
movsb
mov
stos
aas
mov
jo
or
jge
push
cmp
inc
movsb
js
iret
shrb
dec
inc
shll
scas
jg
mov
shll
mov
mov
icebp
loopne
adc
sahf
shrb
add
lods
lds
ret
or
popf
lods
out
sbb
xor
repnz
dec
out
lret
xchg
sub
cmpsb
sahf
xchg
cwtl
sahf
inc
nop
mov
jecxz
outsl
mov
rorl
cmp
int3
xchg
sub
stos
pop
mov
das
or
pop
std
mov
xor
jmp
int3
not
or
icebp
icebp
mov
shrl
in
loopne
or
clc
mov
sbb
jb
xor
in
jl
gs
test
stos
inc
mov
roll
mov
or
test
clc
lock
stos
and
mov
fwait
xchg
sbb
cmp
dec
out
shll
int
push
push
int3
add
enter
push
push
in
sub
subb
add
or
inc
andb
add
mov
pop
ja
cmp
dec
pop
cmpl
adc
clc
and
pop
pop
in
xchg
aas
xor
mov
cmp
hlt
add
cmp
loopne
ja
ljmp
scas
inc
cbtw
out
fidivs
or
inc
mov
push
add
fmuls
lcall
sarl
push
lds
outsb
jp
pop
loopne
adc
test
mov
jmp
add
js
push
mov
arpl
notl
movsl
push
jno
repnz
test
js
movsl
rclb
mov
add
cmpsb
jae
lods
jae
adc
lea
inc
imul
jmp
fwait
pusha
push
xchg
scas
push
xchg
mov
sub
jno
mov
loopne
or
pop
out
das
jo
int3
jae
and
lods
xchg
jno
mov
mov
mov
mov
adc
xor
xor
fsubrs
jae
mov
insb
call
cmpsb
aad
mov
sub
ret
mov
std
iret
cmp
mov
aam
sbb
dec
mov
lcall
leave
les
push
lods
mov
jno
test
mov
push
jp
ret
xchg
int
xor
xchg
aam
adc
andl
push
into
fistpl
scas
cmp
jno
fldenv
lcall
jbe
shl
inc
adc
mov
lret
dec
sub
or
stos
dec
shlb
cmpsl
add
xor
es
cmp
movsb
xor
out
scas
jno
adc
fisttpl
push
enter
les
mov
push
pop
sub
inc
out
fsub
xchg
in
repz
outsb
mov
fcom
pop
mov
insl
les
xor
pushl
sbb
mov
fldcw
push
out
stos
sub
push
pusha
push
dec
mov
enter
or
pushf
pop
mov
fildll
aam
dec
call
sbb
jnp
ljmp
roll
ret
mov
push
mov
stos
push
lods
andb
cmc
pop
das
aas
xor
movsl
clc
jbe
mov
and
dec
stos
xchg
lahf
mov
pop
in
xbegin
loope
or
repz
shl
insl
mov
jno
andb
ja
inc
push
ror
cmp
pop
inc
adcb
sti
dec
int
pop
ret
push
jae
dec
sbb
push
les
ljmp
pop
sbb
and
xor
sti
rcrl
and
pusha
pop
and
dec
jge
dec
mov
jns
mov
jno
jp
sbb
outsb
sub
mov
mov
inc
cli
negb
mov
mov
and
push
push
arpl
xchg
dec
xor
jl
rorb
ja
pop
scas
mov
scas
rcll
imul
sub
outsb
mov
jo,pn
and
add
aas
and
cmc
es
jae
enter
fiadds
pushf
stos
fwait
xor
daa
add
aas
and
and
add
pop
jge
dec
xchg
loopne
sub
jnp
mov
shlb
pop
adc
flds
dec
stos
pop
mov
movsb
jnp
aaa
test
add
sub
dec
pushl
popf
sarl
pop
xor
pop
nop
sbb
leave
jae
mov
in
dec
faddl
and
sbb
dec
roll
js
add
pop
negl
enter
cwtl
sbb
jg
or
test
movsb
and
lret
mov
in
mov
jae
inc
inc
mov
sub
rolb
cmp
test
dec
sbb
jae
test
in
or
adc
fbstp
int
adc
push
sub
fwait
mov
fs
and
mov
dec
or
xor
jecxz
movsb
mov
sub
mov
sbb
lea
sbb
stos
adc
and
xor
mov
xchg
or
jae
push
lcall
jnp
ljmp
mov
shr
cs
dec
orb
jl
jp
xor
aad
cwtl
fistps
cmp
xor
fsub
adc
jae
out
jne
fs
stos
jg
jle
dec
xchg
or
mov
pop
call
das
mov
cmp
sub
decl
pop
jmp
in
dec
movsb
icebp
sar
or
popf
pop
pop
ret
pop
sbb
xchg
xor
loopne
shlb
hlt
add
dec
imul
pop
dec
repnz
inc
jg
sub
loope
fldl
sbb
aaa
cmc
out
outsb
rcll
pop
inc
int3
repz
imul
or
ljmp
xchg
add
loop
push
mov
jo
mov
cmpsl
jb
lea
inc
ret
cmpsb
mov
pop
sar
and
or
and
mov
loopne
push
fistps
popf
xchg
pop
ja
int3
sbb
das
in
clc
sub
in
icebp
stos
out
fdivrl
cmp
jg
int
ja
add
sub
mov
adc
jno
out
mov
leave
jae
jne
inc
push
fdivrl
ret
aad
lret
xor
out
mov
fdivrl
test
notb
cmp
pop
fucomp
insb
sub
leave
test
scas
int3
mov
iret
scas
pop
pop
inc
fs
cmp
in
cltd
fstps
adc
pop
mov
xor
into
fs
fidivrl
xchg
mov
or
jmp
inc
repz
jg
test
inc
mov
rclb
xlat
es
out
js
xchg
rclb
adc
les
es
imul
dec
push
pop
push
push
lds
dec
mov
mov
je
dec
fstps
js
xchg
sbb
scas
push
push
imul
add
push
or
int
dec
add
gs
cmp
cmp
adc
loopne
loopne
cmp
lea
stc
dec
fwait
mov
push
dec
push
jl
lret
or
adc
inc
sbbl
xor
pop
les
out
jns
xor
aas
int
mov
into
ret
xor
cmp
enter
cmp
pop
sahf
loop
cwtl
jp
pop
and
lret
and
push
mov
xor
mov
fnstenv
popf
mov
mov
mov
or
out
in
sbb
xor
insl
mov
lret
popa
xchg
xor
xchg
mov
lahf
jg
add
dec
or
adc
add
iret
dec
cld
repnz
sbb
outsb
fstps
arpl
sub
out
filds
push
jo
or
clc
dec
mov
mov
mov
bound
and
push
into
mov
inc
clc
enter
mov
out
call
shld
mov
addr16
push
mov
mov
mov
or
int
frstor
orb
fnsave
mov
lock
cmp
add
xchg
xchg
pop
lret
es
incl
insl
jle
std
sahf
enter
cmpsl
mov
mov
out
jg
ljmp
mov
lret
and
test
mov
cmp
popf
stos
push
test
cmc
popf
lds
fdivl
aam
out
fs
inc
orb
ja
mov
jmp
loope
std
ror
int
inc
jnp
jae
js
inc
test
in
inc
inc
lea
int3
xor
jge
jns
leave
addb
cltd
mov
insb
sub
mov
loope
sub
imul
pop
mov
cmp
test
fscale
or
aam
cmc
js
pop
divl
xor
mov
adc
cmp
loop
scas
push
cmp
cmpsb
xor
lods
leave
push
push
dec
mov
fucomip
xor
mov
jnp
cmpl
mov
lahf
dec
test
push
cltd
xor
hlt
sub
inc
in
stos
rclb
lcall
lret
mov
cmp
xor
sbb
lods
mov
push
sbb
jp
adc
shr
stos
push
ja
shrl
into
push
and
std
mov
lods
mov
push
fwait
sbb
dec
cmp
xor
pop
inc
xchg
adc
push
mov
aaa
sbb
sub
adc
mov
es
mov
cltd
inc
xchg
cmp
outsl
leave
insb
cmpsb
enter
and
jmp
xorl
bound
push
jae
ffreep
pop
and
xor
sub
or
inc
push
lcall
ja
in
sbb
pop
mov
push
cmp
pop
cmp
or
jecxz
ret
xchg
mov
lods
dec
jb
xchg
inc
insl
inc
ficoml
pushf
cld
xor
jle
or
cmp
adc
xor
xchg
adc
lds
adc
push
je
ljmp
cld
xor
xor
fistps
fs
mov
shr
inc
jg
mov
ret
cs
pop
leave
in
inc
sub
arpl
lahf
xchg
cwtl
xlat
test
daa
jne
mov
mov
cwtl
out
push
push
pushf
fwait
xchg
jge
int3
inc
xchg
inc
mov
outsb
imul
push
jno
aas
cld
stos
mov
cmp
aam
cmp
jmp
icebp
pop
outsl
call
or
dec
aas
pusha
movsb
jno
movsb
hlt
and
call
push
sub
add
icebp
sub
adc
roll
sub
sti
push
or
hlt
cli
push
ret
and
inc
popa
pop
mov
xor
xchg
jl
mov
sbb
das
dec
popa
sbb
xchg
push
std
das
push
adc
inc
sub
sbb
cmp
roll
jbe
or
test
nop
sbb
cmp
loope
jl
icebp
mov
xlat
fs
add
mov
jno
std
movsl
sahf
push
inc
xor
mov
cmpl
fs
mov
dec
xchg
imul
stos
add
or
sti
push
add
int
in
aam
je
mov
insl
sbb
mov
insb
pop
inc
adc
into
xchg
mov
push
push
adc
jne
cltd
push
push
in
lods
enter
push
dec
inc
or
push
inc
out
hlt
cmp
xchg
scas
and
testl
sub
mov
dec
dec
dec
sub
adc
mov
dec
sbb
loop
xor
add
les
in
jmp
stos
outsb
insl
jno
je
adc
mov
push
lahf
dec
cmp
push
pop
add
mov
jo
movsl
rcrl
out
adc
jge
inc
xlat
insl
cmpsl
pop
rorl
imul
sbb
into
lods
in
push
cmp
jno
sbb
jl
dec
inc
inc
and
ja
fiaddl
iret
add
std
cltd
sbb
stos
sbb
dec
push
mov
fdiv
popf
mov
sbb
mov
mov
fs
pusha
pop
loope
fwait
and
pop
pop
xchg
cli
pop
mov
roll
in
mov
push
shrl
and
enter
cld
jns
cmp
nop
outsb
pop
out
cwtl
pop
xchg
or
pop
gs
jnp
jne
aad
mov
xchg
push
jb
cmp
and
bound
imul
dec
cmp
add
icebp
push
cmp
mov
inc
ljmp
sarl
ds
mov
rorb
pop
mov
xlat
stc
arpl
or
jmp
sarb
inc
sti
push
outsb
mov
xchg
iret
sub
in
cmp
cwtl
lret
scas
cltd
in
movsb
dec
mov
subb
out
popa
and
or
mov
stos
sahf
enter
xchg
jecxz
out
adc
and
sbb
and
loopne
lea
sbbl
mov
sti
inc
js
fsubrs
cmp
pop
aam
jmp
rolb
aad
xchg
ret
pop
popa
iret
leave
cmpsb
jns
scas
adc
and
mov
insb
aam
push
fisttps
rorb
loope
xchg
xor
dec
hlt
and
test
popa
cmp
mov
loop
and
inc
xchg
cli
data16
push
add
mov
mov
sub
fiaddl
dec
or
ljmp
stc
faddl
push
mov
add
sbb
stos
fwait
jnp
movsl
inc
es
enter
sub
cli
repz
pushf
test
and
sbb
dec
push
pop
pusha
dec
mov
adc
sub
fsubr
pop
sarl
sbb
outsl
hlt
add
dec
sbb
hlt
lcall
mov
push
inc
mov
add
jmp
push
jne
jmp
xchg
lret
in
inc
sbb
add
inc
repnz
sti
xchg
mov
sti
cmc
lods
mov
inc
inc
sub
pop
xor
mov
mov
sbb
call
rcll
lods
not
push
sbb
les
mov
mov
sub
xchg
sbb
jae
sbb
es
pusha
mov
mov
jp
jmp
out
cmc
xor
or
movsl
shll
xchg
insl
fisubl
push
push
fldcw
mov
inc
push
jo
xor
xchg
or
cmp
clc
pop
push
ds
sub
and
mov
mov
xor
icebp
sbb
rcrl
out
push
adc
imul
in
ljmp
mov
mov
push
stc
inc
bound
cmp
dec
mov
nop
pusha
pop
lret
xor
mov
inc
dec
xchg
or
outsb
nop
add
fstps
dec
mov
les
ficomps
mov
cmp
mov
lahf
push
pop
mul
stc
push
incb
pop
mov
fisubs
filds
cmpsl
add
into
pop
sbb
fs
or
daa
fimull
lret
push
outsl
sub
push
fists
fxch
sub
mov
push
or
inc
push
xchg
cli
push
cmp
jp
sti
pop
jle
jle
pop
xchg
and
sub
or
adc
ss
adc
sbb
stos
xor
fs
xor
pop
rcr
mov
lahf
push
js
xchg
pop
mov
push
aad
dec
lret
ja
das
xchg
push
or
cmc
xor
js
test
aam
cmpb
frstor
out
iret
lahf
mov
stc
aad
and
sbbb
mov
int
rcl
out
sti
dec
loop
lea
dec
lea
adc
mov
jg
leavew
push
xchg
adc
xchg
push
adc
test
push
ja
cmp
push
xlat
lods
add
xchg
int3
in
inc
mov
or
loope
dec
daa
pop
jg
mov
aaa
sbb
adc
mov
ret
cwtl
je
sbb
rorl
das
push
loopne
call
dec
outsb
movsl
or
call
mov
ja
iret
jecxz
inc
push
mov
pop
ror
cmc
ds
inc
and
mov
dec
enter
jnp
out
aas
data16
dec
and
js
stos
mov
push
pop
mov
ds
xchg
fstpt
fstp
cmpsl
popf
test
cmp
std
mov
aaa
xor
add
addl
jns
cmpl
cmp
ror
mov
xor
xor
iret
push
sub
bnd
imul
xor
std
cmp
sti
daa
insb
pop
aaa
jb
and
sbb
int
loope
hlt
aad
sbb
jge
or
add
sbb
xor
loop
std
test
das
inc
clc
pushf
pop
or
and
push
or
xchg
add
jbe
jmp
enter
nop
fistpl
shlb
sub
sbb
in
shlb
cli
shlb
pop
mov
out
mov
in
std
mov
jae
jge
lcall
ret
sub
inc
jl
ficomps
adc
add
out
roll
sub
mov
scas
xchg
out
add
cli
xchg
mov
mov
fisttpl
das
outsl
mov
enter
out
es
pop
in
shlb
shlb
pop
jae
popa
mov
popl
mov
loopne
xchg
xchg
pop
dec
xchg
xchg
xchg
pop
push
mov
cmp
aaa
push
push
mov
test
aam
xchg
sbbb
sbb
mov
xchg
xchg
sti
and
add
fdivl
and
jp
mov
pushf
mov
ret
adc
push
sti
sub
shlb
push
pusha
lret
fildll
push
adc
dec
sub
add
jne
movups
fistpl
scas
je
repnz
jno
sbb
fidivrs
mov
cmp
xor
inc
push
cli
nop
lods
roll
cmp
mov
and
adcl
pop
mov
nop
mov
in
in
xor
adc
mov
cmp
push
and
jns
mov
push
iret
movsl
pop
push
mov
cs
pop
pop
inc
dec
out
add
inc
push
shrb
sbb
subl
sub
sub
in
dec
xor
cmp
int
mov
xchg
scas
in
arpl
ret
xor
ret
rcr
sbb
fisubs
mov
pushf
insb
shrb
adcb
popa
int
or
into
mov
pushf
dec
cmp
jae
sbb
imul
cs
or
mov
mov
in
xchg
ror
jmp
jae
fidivl
test
imul
outsl
mov
cmpl
rcll
cmp
lret
outsb
movaps
js
ss
loop
xlat
pop
jge
or
add
test
lret
fsubr
adc
cli
mov
scas
fisubl
not
add
lahf
loope
cmp
mov
add
popa
and
dec
js
and
rcll
push
imul
jbe
cld
xor
imulb
xchg
pop
insb
xchg
ja
mov
jb
and
movsl
dec
idivb
imul
loop
sahf
dec
int3
pop
push
notl
aas
sub
add
stc
xchg
into
int3
js
and
mov
pop
outsb
lret
and
mov
push
adc
add
and
je
inc
push
out
test
mov
xor
popa
rep
jb
mov
je
jno
test
cmp
pop
jmp
loop
repz
ds
stc
fnstcw
inc
or
stos
std
es
pop
pop
sub
imul
sti
pop
mov
cwtl
jns
jno
mov
push
jmp
jg
insl
or
sbb
addl
insl
inc
pusha
push
in
jnp
pop
and
mov
repnz
pop
iret
loope
dec
pop
inc
push
mov
adc
jbe
out
dec
dec
push
iret
xchg
jne
mov
and
pop
js
adc
jg,pt
lea
mov
in
leave
add
out
cmc
cld
cld
mov
stc
movsl
addr16
repz
loope
xor
inc
pop
mov
adc
push
mov
mov
dec
lea
pop
push
cmp
pop
xchg
pop
jecxz
or
clc
sbb
aam
mov
push
stos
adc
stos
mov
mov
not
loope
or
or
push
loop
sahf
ljmp
push
inc
int3
outsb
adc
jp
adc
adc
push
fidivs
mov
or
and
add
data16
mov
movsl
adc
in
js
daa
mov
mov
dec
cwtl
pop
sub
pop
jbe
mov
inc
cld
mov
lcall
sub
push
mov
roll
jae
mov
popf
outsl
lcall
call
dec
ds
incl
ret
hlt
adc
jo
lret
adc
movsl
mov
mov
sub
add
je
lahf
js
add
push
out
sbb
xor
loopne
lret
loope
inc
andb
fwait
imul
inc
sbb
test
test
bound
test
pop
push
mov
inc
ror
dec
pop
inc
mov
inc
out
dec
repz
cmp
mov
mulb
and
add
mov
jl
popa
sahf
mov
ss
jmp
sbb
sbb
mul
jbe
in
sbb
aaa
lock
or
ss
mov
mov
push
push
gs
repnz
xchg
repnz
jae
adc
sbb
fdivrl
loopne
stos
iret
xchg
sub
and
add
sub
movsl
mov
testl
test
out
rcrl
inc
mov
cmp
xchg
in
lock
sti
xor
mov
jecxz
outsb
ret
lods
outsb
test
adc
lret
negl
pusha
jl
repz
movsb
pop
js
and
out
mov
fcmove
insb
add
bound
adc
dec
push
jno
scas
sub
das
jp
push
in
divb
mov
xchg
pop
mov
std
mov
outsb
fs
pop
es
dec
nop
sbb
data16
mov
mov
inc
shlb
icebp
sub
roll
sbb
addr16
adc
pinsrw
mov
in
mov
arpl
int
push
xchg
sbb
mov
mov
adc
pop
fdivl
fsts
xlat
push
mov
sub
dec
out
xlat
adc
ljmp
ss
jl
jle
in
fisubl
mov
enter
mov
ds
mov
lods
mov
add
insl
jns
push
fstpl
shrl
popf
cmpsb
and
adc
dec
mov
imul
js
insb
test
inc
mov
xchg
rorb
inc
mov
cmp
jne
mov
add
aam
inc
mov
xor
fwait
mov
dec
cmc
push
dec
xor
call
lea
xor
add
cli
sbb
loop
adc
int3
inc
or
int3
pusha
jge
fsts
test
jp
lea
bound
xor
inc
stos
push
repz
out
ffree
jmp
lea
or
in
jle
rorl
cld
das
lods
and
xchg
outsl
push
ret
push
and
cmp
push
jmp
dec
adc
mov
stos
push
test
lea
movsl
sarl
fldcw
pop
in
scas
fwait
mov
xchg
fcomps
es
mov
cwtl
call
mov
xchg
aas
jb
loopne
mov
mov
mov
jp
mov
inc
aam
insb
or
sbb
pop
das
fcomip
les
imul
pop
sub
jecxz
rolb
jecxz
leave
adc
push
mov
push
xchg
popa
hlt
mov
mov
shrb
ucomiss
pop
in
pop
or
inc
mov
pop
mov
pop
pop
lret
fcmovnbe
pop
incb
inc
inc
and
push
add
fcompl
cmp
call
mov
imul
sbb
add
jmp
cs
xchg
leave
add
out
push
xchg
aaa
xchg
enter
je
xor
mov
loopne
daa
xchg
adc
jge
sub
mov
lds
inc
mov
sbb
fldcw
pop
bound
les
dec
push
mov
in
cmpsb
mov
mov
xchg
pop
out
jno
enter
imul
lret
popa
pop
mov
pop
dec
push
jmp
sar
out
adc
mov
leave
mov
shrb
or
fiaddl
and
test
pop
mov
ja
push
pop
xchg
cmpsl
aam
xorb
fbld
lea
fwait
mov
aam
insb
xchg
sub
push
push
mov
je
int
mov
xchg
ss
rclb
addr16
nop
inc
lds
jno
xchg
cmpsl
cmovs
js
dec
push
adc
and
movb
pop
out
adcl
aaa
inc
lcall
cmc
mov
lahf
int3
scas
lea
dec
jns
es
mov
cld
fsubr
xor
jne
push
cmp
je
dec
les
inc
adc
adc
mov
arpl
xchg
and
in
jge
jne
sbb
adc
mov
jns
rcll
mov
inc
in
xchg
or
dec
add
leave
pop
lret
cmp
loop
and
xchg
les
mov
orl
mov
in
std
add
in
shlb
repnz
fs
repnz
loop
loopne
int3
xor
pop
je
push
in
js
and
sbb
xchg
into
mov
push
sarb
data16
fbld
stc
popf
fucomi
ret
xor
add
add
fcoms
aam
stos
adc
sti
cmp
test
decl
or
ss
xor
cmpsb
or
dec
pop
aas
pushf
or
out
push
xchg
mov
dec
mov
ret
shl
xlat
or
loope
aaa
and
mov
pop
cli
jne
mov
and
lds
jmp
cmp
push
inc
adc
inc
push
inc
mov
pushf
mov
shll
xor
mov
adc
sbb
js
lret
or
sar
roll
or
and
dec
or
or
aas
dec
push
pusha
repz
jo
loop
mov
je
fidivl
inc
mov
lahf
call
loopne
dec
enter
cmc
in
loopne
mov
pop
cmp
movsl
or
mov
cwtl
lahf
and
adc
adc
ss
mov
xor
cvtps2pd
jge
rorb
xor
inc
inc
movsb
xchg
add
iret
push
jns
xchg
cld
ret
sbbl
cmp
jnp
cmp
sbb
insb
inc
out
in
sub
mov
rorl
dec
sub
ljmp
movsb
repnz
mov
js
or
adc
test
lods
cld
pop
fdivrl
hlt
in
ror
scas
inc
aad
scas
clc
xor
jmp
popf
popf
mov
jmp
out
push
test
loop
imul
fsubr
rcrb
mov
sbb
out
inc
push
pushf
rcrb
sub
imul
xor
add
loopne
movsb
lods
popa
shlb
or
std
sarl
in
lods
sbb
lret
add
fcomps
in
ljmp
cmove
inc
push
scas
enter
or
pop
sarl
mov
mov
pop
loope
fcoml
sbb
lcall
xchg
adc
mov
adc
in
mov
mov
push
nop
push
or
push
stc
jecxz
xor
mov
js
mov
sbb
in
pop
pop
cmp
movsl
jne
xor
outsl
mov
mov
and
sub
lcall
mov
hlt
jns
fwait
cmp
popa
push
pop
cmp
je
imul
jne
inc
addr16
mov
sub
adc
cmp
pop
mov
adc
aad
out
flds
push
stos
or
cmpsl
pop
hlt
dec
sbb
and
shr
sub
orb
loopne
lds
pushf
mov
mov
imul
xchg
imul
lret
loopne
outsb
mov
jno
mov
stos
mov
jg
lock
push
mov
xor
sub
jl
inc
add
bound
jnp
es
mov
aaa
add
cmpl
jns
fidivl
sub
outsb
sub
jecxz
les
in
push
adc
mov
std
xor
out
test
mov
mov
roll
mov
enter
insl
sbb
decb
xchg
and
xchg
jno
sarb
mov
and
in
roll
mov
outsb
cmp
pop
and
movsl
cmpsl
add
data16
mov
es
cld
in
je,pt
inc
insl
dec
test
insl
pusha
mov
xchg
pushf
xchg
mov
shlb
pop
cltd
adc
iret
adc
lret
push
sti
mov
fidivs
inc
mov
popf
inc
dec
cmp
xchg
jb
das
jle
mov
adc
popa
and
loopne
cmp
xchg
dec
and
push
jle
mov
push
pop
scas
mov
lcall
sbb
hlt
aaa
cmp
push
ret
popf
aad
movsl
aad
xchg
ds
mov
ret
jp
pop
jo
jmp
cmp
add
push
jp
inc
loop,pt
icebp
in
ret
push
ss
clc
ljmp
jmp
xor
movsl
bound
or
cmpsl
sbb
dec
call
lods
in
clc
cmp
sub
icebp
dec
insl
push
dec
cmp
lock
dec
lret
jg
xchg
mov
xchg
sub
or
mov
ljmp
add
push
mul
mov
mov
div
mov
in
push
cmpsb
fnsetpm(287
fwait
ret
ljmp
movsl
pop
or
adc
xorb
jle
sub
pop
aas
xchg
xor
sbb
fsubl
je
inc
subl
and
lods
xchg
or
outsb
sbb
icebp
sbb
mov
or
mov
stc
fstpl
icebp
fldenv
cmp
sub
jge
aaa
movsb
xor
pop
flds
shrb
push
dec
popf
and
add
insl
or
insb
fdivrs
cs
fdivl
mov
push
gs
cmc
aam
insl
or
movsb
mov
lock
rol
rcrl
in
into
dec
jno
aad
cmc
mov
ljmp
jne
das
daa
add
push
or
daa
sub
cld
mov
sub
add
push
pop
and
add
ret
rolb
add
imul
popf
inc
lcall
mov
cmp
pushf
lret
push
test
in
and
es
jp
dec
in
aam
add
jge
jg
in
jecxz
add
add
pop
sub
cmpsb
mov
fidivs
gs
mov
je
lea
and
cmc
xor
cmp
xor
std
xchg
int3
mov
mov
push
pop
scas
push
and
addr16
fdivrs
pop
in
xor
negb
add
repnz
mov
push
xor
inc
ja
sub
jo
fstpt
mov
adcb
cmp
mov
sbb
outsl
dec
push
mov
push
dec
jp
push
cmpsb
int
pusha
add
pop
insb
daa
imul
push
aaa
pop
and
cmp
fwait
out
inc
or
jne
das
adc
fdivs
mov
sti
repz
pop
pop
insb
shl
out
aad
xchg
jg
mov
mov
rcr
dec
repz
fwait
mov
loopne
push
xor
clc
test
lahf
mov
adc
pusha
arpl
sub
jmp
mov
imul
adcb
stc
movsb
dec
lods
add
jae
std
mov
testl
fldl
jae
sbb
push
mov
sahf
sbb
dec
into
sub
jl
and
jmp
ljmp
in
xchg
stos
scas
xorb
cmp
jne
imul
dec
ret
xchg
inc
cwtl
sarl
pusha
mov
mov
je
push
cld
int
repz
jns
movsl
xchg
mov
xchg
adc
addr16
cmpsb
cltd
adc
cld
stos
out
test
ret
dec
push
popf
shll
andb
mov
aaa
and
mov
sarb
jl
add
xchg
dec
mov
into
mov
sub
hlt
or
cwtl
ss
addr16
dec
mov
fsub
aad
cmp
pop
and
mov
cmp
or
sub
xchg
sub
or
out
leave
xchg
shlb
ret
adc
imul
or
or
sub
lahf
push
add
jbe
lods
pusha
sbb
int
movsl
test
mulb
dec
leave
xchg
data16
cmpsb
es
cmc
push
leave
cld
loopne
pop
out
subl
lods
mov
fwait
into
jne
adc
mov
sub
movsb
adc
mov
lea
sbb
pop
lods
mov
mov
outsl
mov
incb
push
fsubrs
fs
ficompl
push
dec
lcall
lahf
ror
and
jae
jbe
jno
mov
nop
jg
pushf
sub
push
xor
pop
xchg
sbb
pop
popa
mov
icebp
jg
cmp
test
nop
or
daa
pop
pop
addr16
repnz
mov
fsubrp
mov
decl
inc
mov
mov
and
test
decl
in
lods
jl
pop
cmp
outsb
bound
cmc
cltd
jg
lock
adc
shll
lock
lret
push
je
ds
dec
jecxz
pop
add
insb
mov
lds
mov
pushf
loopne
test
daa
jnp
subb
ljmp
mov
inc
rcr
ljmp
aad
mov
aad
sub
inc
xchg
inc
mov
je
fs
int
mov
shlb
ss
add
and
and
push
add
mov
inc
in
scas
pushw
lods
mov
fwait
jo
out
sbb
add
call
mov
stos
xchg
mov
lahf
ja
in
out
cli
push
or
xor
sub
inc
enter
out
jne
cmovle
shrb
and
testb
sbb
bound
std
jg
cmp
mov
sbb
jg
daa
push
movsl
mov
andl
loope
pop
xchg
dec
mov
popa
lods
jno
or
rorl
loope
pop
adc
ja
push
lret
push
add
imul
sbb
inc
test
lods
cwtl
add
aad
mov
xor
repz
cwtl
pop
mov
jo
out
in
jl
test
insb
test
das
pop
lods
add
add
xor
sub
fwait
repnz
jns
icebp
or
jb
and
imul
add
sub
push
and
push
test
add
xor
and
cmpsl
xchg
out
icebp
fistpll
jecxz
lods
fs
mov
js
in
xor
add
cmp
lret
testl
cmpsb
leave
enter
icebp
add
mov
les
and
sub
js
dec
out
clc
mov
outsb
jmp
xor
inc
sub
cmp
in
or
mov
adc
pop
lods
push
int3
out
and
or
jns
and
push
add
jg
imul
add
fidivrl
scas
andl
mov
mov
mov
jae
aas
jg
fcompl
jp
roll
or
push
jae
aaa
loope
pushf
cmp
ja
xor
xor
adc
mov
jecxz
sbb
stos
out
cmp
jl
add
mov
dec
adc
shll
push
or
add
pusha
inc
out
movsl
nop
and
add
xchg
stos
mov
push
jl
pusha
cmp
ljmp
into
imul
dec
stc
addr16
movsb
iret
push
jge
fcom
in
in
fiadds
sbb
dec
clc
insb
fistpll
call
int
mov
push
xchg
mov
jmp
inc
lods
add
repz
out
movsl
mov
imul
sub
inc
pushf
stos
and
xchg
ret
pusha
adc
xchg
gs
mov
insl
jmp
xchg
push
mov
mov
aas
enter
test
mov
test
mov
sub
and
cmp
popf
jno
pop
lcall
xlat
sbb
aam
fdivrl
xlat
out
xchg
mov
mov
sub
adc
mov
adc
fcoml
lods
jp
jo
aam
mov
cmp
mov
into
ja
push
stc
stos
cltd
cmp
pop
es
popf
pop
cmp
into
fstpl
call
jnp
mov
dec
jnp
xchg
jmp
dec
jae
mov
jo
inc
mov
jecxz
sbb
mov
mov
aas
ret
outsb
es
lds
lea
iret
pop
addr16
jle
pop
xlat
sbb
jl
jmp
push
jne,pn
mov
insl
test
inc
push
mov
leave
js
xchg
jg
andb
or
in
push
pusha
push
mov
dec
shlb
jge
sub
andl
or
ror
das
push
lret
push
jmp
loopne
adc
out
adc
dec
sub
test
inc
pop
mov
sub
rolb
mov
leave
adc
xor
aaa
aam
or
cld
pop
call
or
sbb
push
bound
ret
mov
mov
aad
stc
adc
stos
mov
xchg
or
xchg
adc
mov
cmp
jmp
dec
insl
mov
imul
cmpsl
adc
popa
push
and
iret
fsubl
adc
mov
or
inc
insb
xchg
mov
or
xor
cmp
clc
mov
dec
cmp
insb
popa
in
cmp
cmp
aam
dec
cmpsl
pop
out
dec
enter
jmp
and
jmp
loop
popa
imul
mov
cmp
push
out
ljmp
sbb
gs
lock
adcb
push
imulb
adc
repz
adc
loope
ja
adc
mov
cmpsl
scas
clc
inc
mov
mov
hlt
frstor
inc
inc
scas
testl
jnp
inc
cld
jle
xor
lret
les
xchg
loop
push
mov
jle
sub
ret
inc
sbb
insb
fcmovbe
dec
mov
mov
sub
mov
rcll
push
mov
jb
pusha
push
in
rep
outsb
fimuls
sub
adc
outsb
lds
lock
inc
test
or
jne
fistpll
jne
clc
xchg
loope
ret
sub
inc
mov
lahf
enter
mov
sbb
pop
dec
xor
into
and
mov
rcl
and
mov
icebp
dec
dec
fstps
dec
cmp
nop
ucomiss
sbb
adc
lds
daa
gs
enter
or
xchg
pop
in
mov
test
loopne
sbb
pop
imul
out
push
pop
incb
jo
inc
mov
out
sub
push
mov
test
dec
ljmp
lret
imul
fstl
pusha
mov
dec
clc
js
movsl
push
adc
stc
out
push
cmp
jae
leave
mov
sub
mov
enter
mov
pushf
test
sti
sbb
push
roll
dec
out
adc
iret
xor
mov
pop
jle
clc
push
movsb
xor
nop
xorb
sub
adc
pop
insl
or
bound
mov
roll
add
shr
orl
mov
or
mov
enter
push
xchg
jno
inc
pop
mov
jecxz
gs
and
jns
add
xchg
push
pop
mov
lods
jne
jge
dec
movsb
push
movsl
pop
push
jg
xor
arpl
or
lret
mov
mull
fldl
dec
pushf
dec
pushf
insb
sbb
sbb
fcompl
shl
xor
and
push
sub
and
sub
movsl
lds
mov
ds
fdivl
test
mov
aas
dec
push
int
mov
out
test
mov
xchg
mov
loop
jecxz
int3
iret
sahf
or
xchg
icebp
jb
pop
xchg
and
das
xchg
mov
lcall
mov
jge
inc
cmp
in
rcll
xor
mov
dec
sbb
sarl
cmp
mov
mov
mov
jp
mov
out
push
test
xchg
orb
fidivl
test
or
loopne
movlps
inc
mov
jne
faddl
inc
lock
inc
test
xor
jg
in
ja
adc
or
ljmp
shlb
push
xor
mov
jo
xor
dec
fistpll
or
pop
push
sahf
lods
inc
cmp
out
stos
pop
xchg
test
push
and
in
arpl
sbb
inc
enter
hlt
lods
fwait
ds
cmpsl
cmp
imul
inc
sbb
sub
xchg
sbbl
inc
inc
jg
das
lds
inc
and
adc
out
inc
jns
and
adc
cmp
ret
into
lret
mov
nop
ret
loope
mov
in
loopne
lods
out
push
out
jo
sbb
mov
rol
cmc
xchg
jl
pop
jl
adc
dec
push
xchg
or
mov
test
sub
repz
mov
add
insb
sub
sbb
ret
sarb
je
scas
inc
cmp
scas
sbbb
test
xor
scas
xchg
push
loop
in
mov
fcomps
or
jne
sbb
shlb
xor
fdivrs
mov
out
jge
and
test
push
xchg
inc
cs
pop
loop
cmp
pop
inc
sub
out
test
mov
test
and
fs
loopne
imul
cwtl
in
lret
jbe
inc
dec
inc
movsl
pop
sbb
pop
add
stos
jp
jge
sub
pop
add
out
jbe
movsl
cmp
xchg
adc
add
in
dec
sbb
jmp
sub
inc
pop
scas
aas
xchg
lds
dec
aad
jp
loopne
cmp
inc
shll
push
neg
les
dec
jp
test
or
jb
sahf
stos
jge
fdivr
jb
inc
add
addb
inc
push
les
sbb
out
dec
inc
xlat
jp
insl
dec
movsl
mov
ret
orl
sbb
in
das
outsb
mov
jae
sbb
mov
arpl
js
rclb
or
imul
sbb
xchg
xor
push
ret
lods
lods
or
dec
call
cwtl
repz
xorb
mov
mov
sahf
movsb
add
aad
lds
sbb
inc
or
dec
and
pop
fdivrs
rorb
and
jmp
ljmp
movsl
jp
cld
addb
inc
int
dec
insl
loop
sub
gs
mov
loop
outsl
jge
mov
dec
mov
aad
iret
loope
and
cmp
cmp
jno
fisttpll
add
cwtl
mov
arpl
mov
sbb
in
or
and
mov
adc
insl
add
mov
andl
push
stos
pop
stos
add
mov
je
sbb
mov
push
jmp
cmpsb
or
mov
rorb
sub
ds
cmp
fimull
push
push
push
cld
lret
frstor
pop
jle
add
pop
add
mov
inc
mov
lea
push
pop
inc
jecxz
out
mov
int
pop
sub
sbb
dec
lret
cmp
xlat
sub
addr16
xlat
pop
mov
sbb
fdivs
aas
ss
fs
mov
push
jno
mov
fs
mov
mov
mov
pushf
shrl
xchg
pushf
ret
cli
daa
stos
add
push
inc
push
sub
mov
imul
pop
lea
xor
insb
pop
pop
adc
fadd
sub
fdivrl
rcrl
iret
cmp
fs
outsb
pop
push
movsb
sbb
popf
test
movsb
cmc
cwtl
sub
iret
cwtl
psadbw
xchg
xlat
inc
dec
ljmp
in
jbe
jno
adc
loop
add
mov
adc
mov
ds
test
ret
adc
push
pushf
inc
sbb
mov
andl
mov
xchg
dec
cmp
mov
xor
xor
cwtl
enter
inc
cmp
push
jmp
jl
pushw
xor
adcb
mov
sarb
loope
insb
add
mov
fsubp
cmp
stc
sub
lds
add
mov
outsl
fstpt
and
mov
loope
mov
fdivl
adc
inc
dec
inc
rol
and
fisubl
xchg
stos
dec
xchg
xchg
cmp
push
jl
cli
in
push
xchg
repz
pop
dec
cld
call
lock
test
hlt
xchg
dec
repnz
cmpb
dec
pop
cmpl
inc
aaa
negb
popf
pop
sub
cmp
les
push
add
and
push
or
dec
movsb
lahf
mov
orb
sbb
adcl
pop
testl
rorb
repz
std
pop
mov
cld
sbb
xor
jbe
or
sub
scas
and
pop
jne
pop
ds
ja
in
out
inc
inc
scas
insb
popa
test
sbb
mov
or
je
aas
xchg
mov
stos
jp
scas
test
sbb
adc
insl
cmp
jns
out
repnz
iret
out
jl
and
inc
sbb
and
incl
push
push
push
mov
cmp
stos
stos
lcall
js
iret
or
fisubrl
push
sbb
icebp
mov
adc
pop
pushf
inc
test
test
xlat
jne
test
fsubs
frstor
sarb
and
push
push
and
lret
mov
cmc
xchg
aas
push
lods
push
jno
cmp
jnp
sarl
xchg
inc
int3
xchg
lds
sub
jmp
push
int
inc
negb
cmp
aaa
jmp
mov
xor
in
aam
lock
pop
xchg
add
nop
stc
or
sbb
sub
cmp
leave
push
mov
jp
std
repnz
dec
ljmp
inc
test
lds
js
sbb
into
scas
push
sub
adc
pop
mov
jo
adc
outsb
mov
mov
pop
imul
icebp
int
popf
xchg
pop
imul
nop
lods
imul
lea
fisttps
aam
mov
push
pop
pop
add
mov
lds
mov
sbb
jp
xor
scas
sub
ljmp
aas
insb
movsl
lods
sub
popa
sbb
repnz
lcall
push
inc
hlt
in
mov
mov
mov
push
push
aam
mov
ja
mov
xlat
mov
roll
mov
shll
add
ret
dec
lahf
inc
mov
cmpsb
mov
test
adc
cli
loope
cmp
dec
fisubs
or
xchg
ss
movsl
add
pushf
sbb
ficoms
jae
imul
es
fnstcw
ljmp
push
es
arpl
mov
hlt
adc
rcrl
into
aaa
test
add
js
xor
negl
add
sbb
sub
xor
rcrl
xor
add
or
gs
clc
add
addb
int3
dec
shr
data16
xchg
inc
adc
das
dec
loope
add
pop
cmpsb
sarb
or
and
cmpsb
lret
shr
add
pop
or
mov
mov
push
and
rcll
lcall
insb
lods
push
pop
jb
pop
jl
and
lods
and
les
sub
xlat
mov
test
in
scas
cmpsl
inc
cmpsl
inc
clc
lcall
inc
cs
dec
cmpsb
bound
xchg
xor
lods
fidivs
sub
je
add
call
sub
push
push
mov
sbb
xchg
cltd
add
int3
scas
mov
xchg
int3
test
xchg
outsb
dec
aas
and
imul
adc
sub
xor
xchg
sub
and
jge
xor
pusha
lahf
cwtl
push
xchg
or
adc
sbb
cmp
inc
mov
mov
push
in
ja
call
and
sti
lcall
insb
jb
sarl
lahf
or
or
dec
or
aaa
mov
cmp
cs
lock
inc
jmp
and
cli
stos
push
jmp
jb
adcl
or
pop
imul
push
fs
or
cmpsb
inc
push
push
nop
sahf
cmp
push
dec
aad
or
mov
dec
jecxz
rclb
popf
dec
rolb
in
inc
dec
adc
movsl
pop
pop
out
pop
in
imull
subl
iret
mov
enter
mov
arpl
mov
push
mov
scas
test
fcomps
sub
sub
mov
mov
test
outsb
sbb
int
inc
icebp
mov
sbb
adc
mov
imul
xlat
pop
sysenter
push
jo
xchg
jne
popa
inc
fs
adcb
pop
lods
push
xor
insl
adc
cs
popf
fxch
cmp
cmp
jno
sub
mov
pop
and
cli
xchg
test
and
not
adc
push
push
and
dec
into
dec
adc
shl
in
std
aaa
lods
mov
nop
iret
jb
cmp
xchg
sub
mov
in
or
inc
dec
mov
push
out
aas
jg
jno
inc
test
cmovae
cmp
push
mov
aaa
xor
mov
mov
pushf
insl
lret
ds
clc
add
lret
sub
add
test
inc
loopne
shrl
adc
mov
fisttpl
dec
insb
stos
sub
shl
xorl
inc
pop
shll
pavgb
lds
sarl
and
xor
xor
lea
mov
imul
idivb
push
add
cmp
adc
push
and
add
scas
mov
insl
jge
adc
adc
ds
push
sub
fwait
add
cmpsl
cmpsl
cmp
sbb
push
int3
fdivr
inc
gs
jl
push
or
mov
adc
mov
and
es
cmp
sub
fildll
cmpl
jb
sbb
popa
sbb
mov
shr
fildl
sub
shrb
mov
xchg
stc
inc
xchg
les
mov
mov
mov
rcrl
rcrb
leave
test
imul
lahf
dec
or
pop
cmpsl
les
adc
jmp
push
stc
pop
test
cltd
shl
hlt
inc
inc
mulb
jb
add
and
adc
xor
mov
add
pop
pop
add
mov
popl
cmp
jno
addr16
push
cmp
xor
mov
imul
jle
test
cs
xlat
cli
mov
cmpsb
mov
xor
sbb
std
aad
imul
jle
pop
out
test
jmp
push
xchg
fisubl
xor
fwait
out
hlt
xor
loopne
shlb
scas
pop
bound
out
fs
dec
cli
daa
imulb
aas
mov
xchg
fst
addb
neg
enter
push
in
fstl
es
inc
and
or
out
adc
push
dec
push
push
ja
clc
and
loopne
xchg
inc
je
jp
scas
inc
out
push
sub
inc
adc
dec
es
sub
pop
mov
aas
jg
lock
imul
adc
ret
fadds
shrl
xlat
xor
or
pop
test
dec
fwait
cwtl
fcomip
push
js
dec
shll
adcl
arpl
loop
cmp
fwait
popa
mov
cwtl
mov
leave
sbb
or
adc
mov
pushf
xchg
mov
sbb
or
inc
mov
loope
fucomi
mov
mov
dec
lahf
mov
nop
daa
pop
hlt
mov
dec
hlt
and
jae
rcr
aad
pop
jl
movsb
loop
pop
inc
dec
test
movsb
orl
jg
cmc
push
das
push
jne
sbb
or
jbe
mov
loop
aaa
lret
into
fwait
xchg
dec
ja
insl
lret
idivb
mov
cmp
inc
into
in
or
push
movsb
sbb
mov
fbstp
jmp
nop
rcr
fcoms
xlat
mov
iret
adc
cltd
xor
out
je
in
inc
dec
in
call
loop
test
xor
dec
jnp
aad
mov
sbb
daa
fsts
mov
xchg
mov
dec
stos
testb
add
scas
jns
int3
mov
dec
out
sub
sbb
jecxz
scas
jnp
in
into
rcr
pop
stos
test
sti
add
orb
mov
in
push
shll
xchg
mov
sub
cmp
jmp
call
test
dec
fs
mov
xchg
cmp
shrl
xchg
dec
insb
nop
loope
fbld
addr16
fwait
out
int3
add
aam
sti
push
mov
adc
in
vmwrite
pop
out
ljmp
pop
xchg
add
mov
sub
hlt
dec
pop
fmulp
pop
pop
rcll
xchg
inc
jl
pop
pop
add
or
pop
stc
mov
mov
xor
cltd
dec
pop
adc
pop
and
xchg
pop
inc
es
sbb
and
shr
faddl
leave
jae
adc
aad
fwait
adcl
mov
sbb
jae
xchg
jle
dec
ret
push
stos
sub
dec
nop
xor
or
roll
push
stos
xor
pop
xchg
xchg
mov
aad
adc
cmc
sub
jae
sbb
dec
mov
pop
clc
and
push
lds
xchg
bts
sbb
sbb
jmp
dec
dec
inc
mov
jge
daa
push
jg
sbb
mov
adc
icebp
sub
add
in
test
scas
or
push
cmp
scas
jae
lahf
cwtl
xchg
sbb
jle
cmp
inc
pop
cmp
fisubrl
pushf
jns
cli
sbb
lcall
cld
mov
test
sbb
add
push
mov
hlt
inc
sub
shr
pop
adc
aaa
in
push
loope
push
les
pop
xor
or
adc
adc
aad
scas
in
fsubs
sti
je
in
add
push
inc
loop
cmp
cwtl
adc
xchg
iret
lods
mov
xchg
inc
pop
jo
mov
xor
rcrl
or
dec
pop
orl
cld
push
pop
jns
xchg
or
pop
and
rorb
idivl
sub
vmwrite
push
fidivrl
pop
sub
mov
mov
cwtl
fdivs
in
imul
cld
jg
aam
stc
dec
ficomps
pop
cmp
pop
adc
int3
loope
incl
outsb
mov
cmpsl
jl
sbb
mov
cmp
lcall
mov
cld
cmc
sub
inc
push
sbb
loopne
jb
lret
xor
xchg
sub
cltd
jecxz
fisttpll
mov
call
fstl
lods
sbb
lods
dec
scas
cld
mov
roll
xor
shrl
adcb
lret
inc
inc
test
mov
stc
sbb
and
jbe
int3
int
mov
dec
clc
orb
jno
jne
mov
repnz
pop
mov
fstl
inc
inc
cmpsb
cltd
and
jns
mov
fidivrl
sbb
mov
or
stos
adc
jmp
rcrl
das
mov
dec
mov
push
jb
addb
int3
in
mov
subb
lods
imulb
ss
xchg
cmp
bound
pop
gs
push
pop
and
mov
add
push
enter
shlb
or
mov
in
mov
cmp
xchg
je
jp
mov
pop
in
adc
dec
add
cmc
notl
or
mov
out
mov
cmp
push
mov
or
push
outsb
add
cmpsl
or
mov
mov
mov
fisttpll
pop
rcrb
bound
push
add
pushf
fs
mov
cmp
adc
adc
stos
mov
mov
inc
jl
mov
mov
mov
xchg
andb
orl
stos
in
bound
imul
cmc
pop
fsubrl
jo
xchg
test
jmp
xor
arpl
mov
mov
aam
aas
xchg
stc
or
jae
inc
push
je
rorl
inc
lcall
cmp
cli
fcompl
test
cmp
clc
push
sar
notb
xchg
in
push
xchg
stos
int
xchg
push
xchg
js
clc
add
jmp
and
lods
imul
mov
xor
popf
mov
inc
ds
cld
mov
xorb
xchg
dec
lods
loopne
jg
and
sbb
enter
test
outsb
lods
sbb
in
rclb
mov
pusha
jle
adc
mov
mov
mov
cmp
data16
das
jne
push
mov
xor
xlat
pop
fs
dec
out
gs
fcom
pusha
cmp
test
lea
in
pop
dec
outsl
stos
inc
dec
icebp
into
repz
dec
xor
pop
sub
dec
mov
mov
sub
bound
cmp
inc
fs
imul
sbb
cmp
cld
mov
icebp
clc
cmp
adc
and
ja
rcr
pop
mov
sbb
insl
clc
push
mov
sbb
frstor
cmp
fcompl
cmp
out
fisubrl
ret
mov
hlt
lock
push
pop
es
pop
xorb
loop
mov
xor
sbb
ljmp
inc
inc
xchg
mov
lds
icebp
mov
ja
lret
cmpsl
into
gs
fiadds
outsl
lods
mov
int
mov
cmp
aad
arpl
mov
insb
xchg
jl
and
jle
maxps
fldz
cmpsb
inc
inc
mov
cltd
test
test
pusha
add
adc
xchg
dec
jmp
add
push
add
add
fidivrs
scas
stos
cli
leave
push
in
pop
sbb
xor
mov
mov
stos
sbb
inc
mov
push
test
sbbl
and
xor
adc
jg
mov
out
mov
sub
sub
add
sti
call
sarb
ror
sti
xor
mov
mov
testb
xorb
test
sub
je
add
rorl
jbe
imul
out
push
mov
dec
jb
movsl
inc
jg
xchg
in
adc
and
or
inc
jmp
jo
std
cmc
xchg
pop
push
mov
dec
dec
adc
ljmp
std
pop
push
lds
mov
scas
pop
fcoms
je
sarl
push
cld
push
xchg
cwtl
or
fs
mov
popf
push
movsb
mov
sbb
and
ja
and
mov
insb
movl
popa
inc
add
pop
jle
cmp
movsl
es
stos
cmp
sahf
mov
jge
ror
xor
loop
xor
push
sub
orl
adc
pushf
test
xchg
xor
sbb
aas
lods
inc
push
push
xor
mov
lods
sbb
or
jecxz
repz
or
sbb
adc
jg
in
push
gs
sbb
push
lods
sub
fimuls
xchg
movsb
pop
push
scas
out
cmp
lods
andps
add
out
push
pop
or
pop
dec
cmp
sahf
ret
cmp
clc
enter
pop
push
cmp
popa
or
loop
push
xchg
xor
xchg
push
negl
and
movsl
add
movsl
jle
insl
sbb
pop
data16
pop
adc
mov
push
push
jp
cmp
pop
xor
outsb
push
outsl
jo
lret
ret
mov
xchg
fdivrs
and
sub
mov
bound
cs
jl
jns
xchg
mov
daa
cmp
sub
mov
aaa
fildl
or
dec
or
lcall
inc
mov
mov
cmp
pop
cmp
inc
sbb
int3
pop
add
outsb
addr16
cmp
movups
pop
or
inc
gs
iret
mov
mov
pusha
push
sub
dec
cmp
sub
jp
xchg
nop
and
idivb
cmp
push
iret
xchg
ret
int
movsb
and
dec
jo
jmp
mov
jp
and
cwtl
add
sub
lahf
jmp
divb
adc
ret
fcmove
lahf
lods
push
xlat
loopne
mov
rorb
jg
clc
testb
add
aam
pop
fisubrl
xchg
std
sbb
sbb
pop
jmp
mov
or
in
dec
nop
mov
xor
in
and
outsb
aaa
movsb
inc
shr
aas
aam
lock
dec
or
mov
xor
aad
lea
in
xor
in
scas
pop
stc
sub
add
je
scas
sbb
test
cmp
or
jg,pt
das
xchg
int3
cmp
sahf
mov
mov
inc
std
adc
push
xchg
and
push
lods
in
ret
mov
std
data16
pop
pop
mov
xchg
fdiv
mov
fldl
in
sbb
mov
sbb
sub
stc
loope
add
incb
mov
faddl
inc
inc
shlb
in
test
cmp
mov
shl
andb
test
pop
aaa
cmpsl
and
addr16
testl
pushf
xor
jg
subb
dec
decl
fstpl
rcrl
sbb
fldl
inc
test
sub
or
xlat
mov
andb
jns
das
test
sbb
jb
mov
leave
mov
mov
lcall
jno
xchg
loopne
ljmp
add
arpl
movsl
fisubrl
xor
mov
mov
add
fnstenv
sub
adc
dec
in
adc
lea
rcl
cmpsb
cmpb
fld
jbe
icebp
xchg
mov
je
fwait
pop
adc
filds
out
lea
cmp
or
hlt
out
mov
jae
mov
jnp
jg
lds
and
lahf
in
inc
pop
dec
xorl
and
xchg
mov
fs
shrb
mov
mov
lahf
mov
out
xor
imul
sbbb
and
dec
mov
push
and
ja
jle
jmp
inc
add
enter
xor
jmp
daa
es
scas
mov
xlat
or
scas
cmp
icebp
lcall
mov
jmp
es
sbb
lahf
pop
jb
or
shlb
push
loopne
cmp
fcomps
sti
pop
jb
out
jge
out
test
es
aas
sub
xchg
sbb
inc
in
fsubrl
lods
xchg
cwtl
mov
subb
xchg
mov
xor
dec
lahf
in
pop
adc
repnz
lret
movsb
push
lret
jge
mov
bound
inc
dec
pop
mov
outsb
aas
pop
mov
xchg
inc
ds
sbbl
bnd
in
dec
mov
fbld
or
movsb
rcl
adc
dec
push
xlat
fs
inc
sub
add
sub
aam
loopne
gs
lods
mov
xlat
adc
mov
or
dec
jae
in
push
push
jp
outsl
sbb
push
loop
push
ret
pop
loope
icebp
xchg
pusha
out
push
mov
dec
adc
and
or
xchg
sub
sbb
es
pop
xchg
int
push
jp
cli
and
mov
and
xchg
add
aaa
add
push
call
dec
xor
insl
imul
shll
mov
pop
aas
scas
lods
dec
push
in
aad
add
and
inc
dec
stos
mov
dec
pop
imul
cmp
adcl
inc
push
sub
jg
inc
mov
push
int3
push
mov
test
fisttps
push
lahf
jg
pop
cmpsb
ss
data16
sbb
scas
add
pop
mov
or
xchg
addr16
shr
sub
and
xor
push
and
leave
dec
test
fcompl
repnz
repnz
pusha
adc
xlat
cs
and
adc
push
cs
push
ljmp
outsb
mov
lret
push
pop
mov
in
cld
xchg
inc
xor
adc
dec
or
dec
ja
dec
xor
call
stos
inc
aas
iret
or
sub
in
dec
push
add
push
stos
cmp
xchg
mov
or
out
popf
dec
mov
aad
mov
rolb
test
push
scas
dec
add
mov
cmp
pop
int3
dec
pop
adc
inc
dec
push
out
mov
jmp
mov
pop
sub
pop
or
xor
pop
leave
lea
lods
xlat
xchg
push
sbb
repnz
ljmp
in
dec
sbb
jl
sbb
jae
les
dec
rolb
cld
cli
mov
jmp
jns
and
adc
enter
mov
adc
xlat
jne
icebp
stc
sti
insl
or
mov
push
arpl
push
das
lods
sahf
mov
inc
xor
repz
iret
out
sub
lahf
ljmp
or
inc
cmp
sub
pop
or
into
sahf
sub
outsl
in
arpl
jecxz
dec
lock
sbb
adc
push
test
filds
xor
pop
mov
sub
pop
stos
or
outsb
adc
mov
in
stos
das
jg
stos
je
add
pop
adc
pop
mov
int3
pop
mov
jo
cmp
push
js
enter
dec
lods
mov
pop
mov
mov
jp
enter
xchg
outsl
inc
test
xchg
push
gs
jle
cmp
ficompl
stos
xchg
push
adc
mov
pop
fdivp
std
sub
scas
ret
lods
pushl
ja
and
iret
lods
adc
addr16
mov
insl
pop
movsb
push
and
int3
push
and
sbb
cmp
or
in
cmpsb
sbb
jns
insb
push
outsl
inc
out
cmp
add
xchg
sub
lret
sub
jnp
adc
jo
jns
shlb
jns
popa
jg
add
rclb
mov
in
loopne
cs
negl
js
inc
lcall
gs
mov
mov
jg
push
popa
mov
out
xchg
es
mov
inc
scas
cltd
call
pop
pop
add
jbe
mov
add
out
xchg
xlat
movsb
mov
movsb
inc
adc
scas
sbb
jecxz
sub
cli
out
fsubr
sbb
ret
cmp
sarb
test
stc
push
mov
pop
lods
jb
fstpl
mov
mov
xlat
pushf
lcall
in
add
mov
sub
icebp
mov
lret
push
mul
jl
adc
or
pop
mov
repnz
cmpsl
cmp
je
inc
into
xchg
aaa
cmpsl
push
aas
mov
repz
xchg
inc
orl
lret
adc
and
data16
movsb
lret
lods
aas
xchg
jp
cmpsl
lret
adc
in
xchg
mov
cmp
pop
jae
repnz
adc
arpl
daa
imul
inc
insb
jmp
in
or
leave
or
adc
jbe
test
nop
add
sbb
dec
mov
outsb
mov
jl
adc
or
cmpsl
das
add
es
push
es
std
push
testb
xor
rclb
leave
jg
add
push
popa
xor
push
pop
push
mov
into
mov
mov
adc
rcl
fcomi
popa
pop
push
ret
aam
clc
out
cmc
in
xor
cld
sti
push
xlat
push
inc
cmp
sahf
sbb
adc
sarl
pop
inc
pop
pop
mov
sub
xor
pop
nop
jl
dec
outsb
rorl
incl
mov
add
ss
inc
mov
jno
gs
pushf
shlb
xor
movsb
flds
cmp
or
jne
mov
push
add
push
jnp
and
fstpl
sbb
push
pop
ficompl
sbb
ret
mov
push
xchg
mov
sub
test
xlat
adc
cmp
into
mov
ret
jmp
mov
nop
jnp
xor
push
and
or
mov
xor
cwtl
mov
push
push
clc
and
xor
decl
lret
pop
push
mov
lds
xchg
sbb
adc
mov
aaa
cmp
pop
sahf
push
stos
sti
andl
sbb
and
ret
arpl
mov
cmp
outsb
sbb
jg
pop
sbb
sub
in
inc
mov
inc
mov
mov
mov
dec
imul
mov
add
js
outsl
iret
movsl
jg
les
fs
xchg
mov
sahf
inc
pop
out
pop
xchg
into
xchg
in
and
xor
lods
dec
push
daa
adc
dec
sub
xchg
xchg
fcoms
in
mov
push
jb
mov
or
xor
loope
nop
sbb
xchg
sub
call
mov
and
pop
mov
shr
mov
mov
xor
daa
sbb
movsl
in
setnp
ret
xchg
xor
inc
std
add
fs
or
jns
std
sbb
push
sbb
popf
cmp
push
pop
mov
idivl
add
mov
or
jl
mov
cmpsb
sub
cmpsb
inc
mov
xchg
leave
push
push
mov
inc
movsb
gs
sbb
sti
inc
jl
ret
data16
sbb
and
imul
xor
aas
in
or
dec
inc
insl
out
idivl
inc
dec
push
jp
iret
movsb
mov
loope
xchg
lea
sbb
std
stos
dec
mov
push
push
mov
call
sub
gs
sbb
lock
or
mov
xchg
cwtl
in
pop
shrb
into
and
dec
sbb
jg
syscall
cmc
cmp
lret
sub
test
shrb
popa
inc
test
jle
jbe
sbb
andl
scas
dec
or
add
popf
xchg
cmpsb
pop
cmp
ret
scas
cmpl
push
add
pop
adc
mov
dec
popa
jae
sti
sub
xor
lret
inc
and
xor
dec
push
cmp
xchg
int
sub
loop
das
je
jb
mov
ficoml
xchg
rcrb
pop
cwtl
dec
jg
call
and
dec
addr16
cs
mov
mov
loope
ja
ja
iret
bound
sbb
mov
push
mov
adcl
test
mov
out
out
inc
aad
xor
cmpsb
sub
xchg
and
or
jno
sbb
mov
mov
stc
test
mov
push
movsl
les
lret
ficoml
outsb
cmpsb
sbb
iret
fisttpll
push
sub
scas
xchg
inc
fwait
hlt
test
mov
inc
movl
outsl
jl
pop
or
mov
in
inc
sub
xchg
aad
xor
cmp
orb
adc
cmpsb
js
mov
mov
pusha
pop
cmp
lcall
sbb
add
xchg
daa
rorl
sbb
not
mov
mov
loopne
leave
lock
into
nop
jl
sbb
ret
add
gs
ss
shlb
sbb
push
adc
cmp
shrl
and
js
xchg
lds
bound
cltd
cmp
jecxz
jle
cmp
stos
cmp
pop
pushf
int3
cmp
jae
sarb
out
push
test
popf
xchg
sub
stos
push
and
pop
mov
or
mov
out
lret
xor
cmp
lods
pop
sarb
sub
mov
das
fwait
xchg
xchg
movsl
movsb
mov
insl
xlat
mov
mov
mov
cmp
sub
arpl
lds
jo
pop
xor
out
rorl
pop
int
and
test
pop
and
and
pop
xor
jno
push
mov
daa
push
fsubs
out
in
cmpsl
les
adc
cmp
mov
data16
insb
dec
xchg
and
pop
scas
cmp
mov
das
pop
fs
xor
sbb
or
stos
mov
or
les
push
in
insl
cmp
sbb
or
push
jg
scas
pop
mov
mov
mov
mov
les
or
lahf
jo
push
std
fchs
sbb
adc
mov
adc
mov
pop
in
xor
call
cltd
leave
cmpsl
inc
inc
push
dec
js
jns
aaa
pop
add
inc
mov
pop
or
mov
xor
adc
out
repz
dec
mov
rcrb
sbb
mov
imul
dec
shrb
jae
ficoms
inc
and
ret
jge
aas
add
addb
xor
cmpsl
fcmove
jge
aad
rcrb
lea
int
sub
divl
dec
loopne
cld
mov
insl
mov
sub
fcmovbe
test
cmpsb
in
pushf
xor
lock
push
cmp
mov
test
sbb
push
pop
xor
cmpsl
push
cmc
loop
cld
or
jne
cli
jl
gs
stc
imul
sahf
push
dec
test
lahf
pop
push
jo
mov
sub
add
add
incb
pop
mov
sub
xchg
adc
mov
icebp
sbbb
dec
xor
xchg
adc
and
jo
dec
jno
jae
rorl
lcall
insl
jo
cltd
mov
sbb
jo
push
bound
out
push
shr
addb
xchg
ret
into
pop
aas
lods
xorb
or
add
mov
loope
frstor
mov
popl
sub
imul
fiaddl
push
push
mov
mov
cmpsb
mov
movsl
lock
cmpb
push
pop
cmc
sub
ja
insb
sub
into
cmp
push
add
hlt
cmc
das
cmp
push
jmp
cmp
push
cmc
into
test
ret
mov
add
js
adc
mov
mov
pop
or
mov
or
lods
je
mov
xchg
pushf
mov
jno
or
icebp
sub
test
les
ja
cmpsb
adc
aam
sub
mov
nop
out
inc
sbb
pop
xchg
xchg
repz
or
stos
out
and
mov
imul
or
mov
iret
mov
roll
add
sub
cmpsl
cld
je
mov
adc
mov
pusha
xchg
in
push
inc
and
mov
repnz
jp
or
xchg
jle
mov
lcall
insl
cld
push
and
loope
mov
push
fdivrl
jge
nop
incb
push
jg
mov
mov
lret
test
aam
lea
xchg
and
lods
lock
pop
cmc
ret
inc
xchg
xlat
ja
nop
pop
jecxz
js
xor
mov
cli
test
dec
decl
jmp
repz
rcll
mov
jns
dec
cld
cmpsb
pop
fimull
outsl
cltd
or
hlt
out
ja
mov
and
aaa
mov
mov
inc
sbb
pop
call
movsl
xchg
leave
pushf
sub
mov
xchg
lock
enter
jl
xor
mov
int3
mov
add
push
adc
push
xor
fnsave
roll
scas
lret
outsb
dec
aas
test
ljmp
add
lods
lret
iret
mov
and
addl
mov
xchg
int3
adc
mov
lret
jae
push
and
mov
shr
shll
in
mov
loope
pop
mov
addb
inc
push
xlat
jne
xor
mov
call
dec
jp
mov
mov
das
dec
int
aas
adcl
addr16
aas
adc
dec
sub
push
mov
and
es
cmp
jns
mov
cmp
inc
xlat
jne
xchg
push
add
xchg
cmc
in
jmp
add
add
xor
xor
in
stos
adc
push
jmp
test
outsl
push
in
loop
orl
push
pop
dec
lahf
xchg
rcrb
jecxz
sub
sbb
pop
lea
mov
rorl
or
push
cltd
cmp
or
jo
cmp
dec
out
cmp
mov
mov
mov
xchg
popa
cmp
dec
jge
inc
mov
test
xchg
add
lods
mov
ss
sub
loope
je
dec
lret
mov
sbb
in
sbb
nop
push
out
stos
mov
pop
inc
arpl
arpl
out
and
mov
cmp
sbb
mov
lds
push
repz
cmp
mov
andl
stos
push
cld
into
jp
sahf
mov
push
dec
mov
sub
mov
adc
loop
test
jno
cwtl
push
jnp
popa
mov
xchg
pminub
ss
mov
inc
sub
int3
popa
xor
dec
sbb
ljmp
insl
xchg
push
push
fnstenv
flds
jbe
movsl
or
inc
mov
adc
and
push
repz
or
or
mov
repz
ficoml
mov
stc
mov
pop
sbb
int
xchg
outsl
bts
repz
xchg
sahf
in
or
and
out
sbb
mov
aam
pop
jecxz
mov
pop
mov
xchg
icebp
xchg
xchg
or
cld
pop
iret
enter
and
in
mov
xor
insb
subb
inc
into
jl
push
in
mov
loop
inc
subl
ret
sarl
and
mov
cltd
inc
sahf
adc
notb
ror
dec
in
stos
mov
inc
and
ret
pop
jl
xor
lods
pop
sarb
sbb
insl
ljmp
pop
mov
fnstsw
cmpsb
mov
mov
popa
movsb
test
addr16
xchg
into
inc
xchg
dec
mov
insb
nop
rcrb
imul
mov
outsb
cmp
pop
pop
aam
flds
push
push
cmp
sbb
cmpl
in
arpl
add
xor
repnz
cmpl
jo
jns
pop
xchg
fadds
in
and
in
pusha
mov
rorl
cmc
cmp
or
jecxz
mov
hlt
dec
into
roll
jp
out
sbb
jl
movsb
add
jne
sbb
dec
adc
icebp
or
mov
getsec
cwtl
sbb
lods
ds
int3
pop
call
cmp
popf
inc
out
xchg
push
xchg
push
cmp
lcall
pop
xchg
cs
fwait
out
jbe
sbb
xorl
mov
pop
mov
enter
pop
fwait
daa
stos
cmpsl
outsb
insb
mov
fcomps
loop
bound
cmp
ss
adc
jge
jmp
pop
rorb
xor
xor
push
ljmp
cli
sbb
orb
loopne
jo
and
mov
sahf
cmp
xor
sahf
mov
ficomps
shr
lds
pushf
mov
ret
nop
mov
ja
repz
sub
out
daa
icebp
add
xor
inc
xchg
negb
jle
jo
lock
adc
frstor
inc
std
jle
xchg
mov
and
dec
popa
ljmp
mov
movsl
dec
add
testb
cltd
jnp
mov
cmp
aad
fs
mov
imul
sbb
rcr
popf
int
pop
adc
je
cwtl
inc
test
sub
sbb
push
loop
jp
mov
mov
sbb
xchg
popa
cmp
dec
jno
xor
loop
sysexit
daa
or
test
mov
xlat
xor
or
out
xor
add
xchg
push
add
gs
adc
adc
rorl
mov
mov
mov
push
aad
repnz
sub
jle
mov
lcall
inc
mov
in
inc
add
loop
lcall
movsb
shl
fnsave
popa
cmpsb
nop
cmc
shll
mov
inc
xchg
mov
ljmp
pop
lahf
mov
inc
mov
push
bnd
jbe
add
push
mov
sti
cli
cmpsb
fs
mov
lret
fucom
pop
fcomps
sbb
cmp
sbb
mov
pop
int3
jg
or
ss
shlb
and
xchg
aad
mov
xor
push
push
jle
jp
repz
xchg
fst
push
fwait
pop
add
or
mov
push
sub
sub
fnstenv
shrb
dec
stos
sbb
sub
pop
push
push
into
lahf
cs
rclb
and
or
inc
psllq
cmp
icebp
cmp
mov
mov
jo
pop
sbbl
mov
ret
jo
jb
mov
pushf
lret
xchg
pop
loope
jmp
iret
mov
or
push
enter
cmp
push
pop
push
popf
mov
pop
aaa
push
cli
or
dec
inc
ret
sub
hlt
popf
in
ljmp
leave
cld
mov
in
fiaddl
bound
and
push
xor
lea
imul
push
cmp
std
mov
icebp
jle
rorb
and
inc
jle
push
sbb
jbe
arpl
pop
repz
lret
xchg
out
insb
arpl
jmp
in
iret
test
icebp
rcl
mov
sub
pushf
cmp
push
and
divl
je
les
fistpl
dec
dec
jne
mov
nop
leave
and
pop
mov
or
inc
fsubrs
adc
shlb
bound
cmp
jl
gs
notw
adc
fsubs
lods
mov
xchg
faddl
inc
or
imul
loop
cmp
mov
push
push
inc
inc
jnp
repnz
rorb
inc
cs
and
xchg
add
ret
xchg
cli
pop
push
xchg
rcll
jge
adc
dec
xchg
in
sbb
push
fcoml
sub
jne
dec
mov
add
add
test
enter
jno
insb
cwtl
xchg
jg
adc
imul
bound
insb
daa
cmc
data16
cs
bound
imul
adc
lods
pop
adc
repz
jle
fidivrl
dec
or
sbb
aam
xchg
nop
std
pusha
icebp
sbb
in
lods
mov
xor
insb
sbb
inc
ljmp
clc
jns
cmp
mov
sbbl
pop
iret
inc
fsubl
sbb
es
repz
fwait
and
js
out
sbb
xorb
mov
jmp
out
int3
stos
fdivrs
std
cmp
ds
mov
sub
push
mov
jp
adc
lods
cmp
sbb
test
dec
cmp
push
jo
mov
mov
pop
jl
pop
mov
jle
movsb
fistpll
mov
lods
push
pop
mov
sbb
fs
ljmp
dec
ja
pusha
mov
pop
push
arpl
lods
mov
add
xchg
imul
mov
cwtl
jg
hlt
cwtl
xor
xchg
into
adc
sbb
push
mov
cmp
or
cmpsl
mov
sbb
jmp
sbb
xor
insl
jb
subb
jb
xor
pusha
push
les
xor
loopne
pusha
ret
dec
ljmp
ja
adc
sti
icebp
bound
push
lods
movsb
inc
leave
lret
mov
scas
inc
mov
pop
xor
jp
push
jl
fs
out
xchg
inc
in
ret
xor
test
enter
imul
sub
push
test
mov
xor
bound
xchg
dec
cld
or
lods
inc
adc
adc
xorl
outsb
push
push
mov
test
xchg
cmc
mov
and
jle
outsb
addr16
mov
inc
mov
sub
mov
push
jecxz
std
cmp
shlb
mov
sbb
cmc
loop
leave
mov
ficoms
mov
jbe
fwait
les
cmp
sub
mov
inc
xchg
cltd
push
sbb
push
lods
es
cmp
pop
jp
test
push
cpuid
push
dec
loopne
sbb
cmpsl
leave
out
push
add
mov
in
inc
add
pop
mov
fnstcw
push
mov
loope
cmp
jg
xor
incb
in
fistps
inc
insb
push
scas
outsl
xor
iret
aas
int3
icebp
out
into
mov
movb
xor
shrb
mov
sub
addr16
mov
mov
test
das
cmp
xor
lret
jno
sub
jp
dec
fisubs
out
cmp
cmp
test
insl
mov
daa
sub
sbb
hlt
in
dec
xlat
ljmp
out
shrl
add
sub
mov
cli
hlt
inc
and
pop
and
js
and
cmp
mov
inc
roll
cmc
dec
aam
or
ds
inc
imul
int3
lea
jb
cli
pop
inc
mov
fdivp
push
inc
cmp
xor
and
pop
imul
outsb
ja
mov
loope
icebp
push
jge
xchg
hlt
shrb
arpl
xchg
loop
das
sbb
mov
push
push
adc
mov
sbb
pop
xchg
jbe
nop
push
in
sub
shrl
add
mov
aad
fsubl
movsb
jae
fldenv
mov
scas
rclb
movsl
enter
movsl
push
push
shl
mov
add
mov
loopne
xchg
mov
mov
sub
cmp
and
addr16
imull
dec
sub
push
iret
jg
xor
and
push
push
xorb
lret
shrl
movl
inc
pusha
imul
mov
mov
xchg
cs
rcrl
rcll
mov
fcomps
mov
mov
cmpsb
aas
nop
fwait
popa
gs
dec
inc
ficompl
lahf
cld
xchg
mov
loope
lcall
scas
sub
mov
in
add
push
adc
movsb
push
loopne
adc
loopne
cmp
jle
sub
add
and
dec
mov
les
fnstcw
inc
xchg
and
into
pop
pushf
jnp
stos
dec
ror
inc
fwait
inc
inc
in
cmp
mov
icebp
lods
test
das
nop
xchg
adc
and
dec
add
in
shlb
sahf
sbb
je
leave
push
scas
pop
adcb
fs
ljmp
mov
scas
enter
adc
sbb
jo
pop
xor
movsb
inc
das
das
addr16
js
out
fwait
enter
xchg
mov
mov
jo
inc
xor
stc
and
fisubrs
sbb
pop
jp
ds
int3
or
in
xchg
sahf
addr16
je
xorb
xchg
lock
cltd
aas
lock
cmova
fld
push
divl
xchg
lods
jnp
cld
loop
xor
jle
dec
das
jno
add
in
or
jns
xchg
and
ret
mov
push
paddb
cs
xor
hlt
mov
popf
sbb
jno
cmp
in
enter
xlat
jmp
jmp
icebp
popa
mov
mov
push
xorl
fildl
int3
ljmp
sub
adc
cwtl
cmp
mov
clc
mov
xchg
ja
inc
movsb
je
jno
mov
mov
lret
mov
mov
mov
sub
jg
stos
mov
push
adc
dec
dec
and
push
xchg
cmpsl
daa
xor
adc
rcll
or
mov
mov
dec
ljmp
imul
xchg
lret
icebp
out
xor
pop
nop
stos
lret
sbbb
inc
xlat
mov
sbb
insb
popa
fs
call
je
test
stos
movb
or
outsl
pop
shll
mov
aas
adc
jp
push
and
pusha
or
and
daa
sarb
iret
mov
pop
jl
das
pop
cltd
lret
and
insb
adc
aad
pop
inc
lods
mov
ss
lock
or
jo
in
sub
stc
add
sub
lea
lock
add
mov
push
cltd
sub
sbbb
sbb
repz
ret
lock
out
mov
dec
pop
xor
hlt
into
dec
test
std
inc
lret
fmull
xchg
add
lock
std
push
pop
loopne
xor
push
in
cmp
test
sti
shlb
stos
out
icebp
int
pop
jbe
popa
push
test
push
or
scas
leave
xchg
push
push
cmpsb
sbb
sub
lcall
add
fdivs
mov
movl
into
pop
sub
push
xorb
loopne
xchg
push
cld
fistl
mov
insb
arpl
pusha
inc
imul
lcall
mov
inc
lock
jmp
repnz
lds
push
pop
lods
cmpsb
loopne
repz
insl
stc
rcll
cmc
mov
rol
rolb
sbb
add
adc
sbb
jbe
cld
jnp
cli
sbb
aam
iret
loop
adc
sub
addr16
lea
insb
int
xor
aaa
sbb
sub
out
jo
shrb
mov
add
cmp
stos
lds
fists
in
loope
jb
adc
or
lock
shl
addr16
testb
orl
fcmove
orb
in
loopne
cld
in
adc
xor
lahf
push
cs
scas
fisubs
ror
push
jns
xchg
sbbl
cli
add
push
or
arpl
sub
inc
js
jmp
fildl
cld
jl
inc
and
jg
cmpsb
pop
fildl
arpl
cwtl
mov
repnz
in
mov
lock
dec
add
in
clc
jne
cmp
outsb
pop
or
lahf
or
push
xor
or
out
sub
stos
push
sub
push
mov
and
push
pusha
or
lcall
out
mov
ljmp
xchg
sarl
xchg
dec
inc
aam
ja
mov
daa
cmp
dec
cmp
clc
orb
aaa
mov
jge
cmp
arpl
test
xor
movsl
mov
pop
xchg
pop
outsb
add
sbb
or
data16
adc
aaa
xor
aam
repz
ror
fs
jg
push
lret
xor
daa
loope
std
jp
xor
mov
loope
add
adc
loop
mov
divl
mov
push
sbb
mov
test
and
loop
fisttpll
leave
sub
cmp
xor
hlt
aam
in
cmp
cs
stos
push
jo
aad
shll
jo
and
out
dec
mov
imul
cmp
xor
push
sub
jge
les
jb
pop
xor
dec
aam
pop
imulb
jge
cmpsl
inc
add
or
lds
mov
in
ficompl
dec
aam
inc
enter
dec
jp
xchg
sbbl
mov
xchg
leave
and
push
push
xor
addr16
and
jl
sti
fists
push
dec
ret
xor
and
gs
outsl
add
inc
push
int3
sbb
jp
mov
movsl
mov
out
jl
lret
aad
inc
in
scas
dec
rol
frstor
or
add
fbstp
ja
fcmovnu
mov
sarl
lcall
dec
jns
add
mov
outsb
adc
cmpsb
insl
pop
pop
xor
add
scas
outsl
xchg
daa
push
mov
sahf
dec
mov
int3
or
repnz
sarb
xchg
xchg
lcall
jp
loope
xor
inc
mulb
sarl
xorl
imull
hlt
mov
cmp
testl
lea
loop
sub
cmp
pop
jle
adc
aam
cmpl
cmp
in
fcoml
ds
cld
add
jle
jl
out
inc
lcall
inc
xor
push
test
addb
in
clc
ds
das
dec
inc
repz
fwait
test
sub
mov
addb
mov
ljmp
dec
mov
and
cmp
cmpsl
cmp
je
push
lods
sbb
mov
js
out
inc
das
outsl
dec
add
shll
adc
out
cli
add
das
xor
fstps
leave
out
int3
adc
dec
cmc
mov
nop
fs
push
push
xchg
vpaddb
imul
pop
in
aam
stos
or
icebp
mov
mov
mov
lods
gs
cmp
das
lahf
popa
jp
icebp
fcoms
sub
sub
ja
stc
mov
xchg
inc
mov
popf
sub
ds
clc
test
je
xchg
xchg
mov
mov
mov
out
mov
mov
dec
repnz
imull
or
ds
inc
js
lahf
daa
je
mov
jp
xchg
mov
or
cmp
cltd
push
es
cmp
lock
jb
xchg
mov
test
leave
xor
mov
jb
ljmp
jnp
hlt
push
loope
das
xchg
or
idivb
xchg
out
int3
dec
pop
int
push
test
cmp
iret
enter
jo
mov
rorb
pop
mov
inc
add
inc
pop
xor
and
push
cli
enter
xchg
xchg
adc
xor
fiaddl
fisubl
fimuls
call
je
inc
ret
adcb
cmpsl
cmp
les
fbld
stos
xor
jae
mov
lret
inc
fcomps
call
add
cmpsb
adc
pop
mov
mov
jno
jns
daa
or
outsb
pop
arpl
push
pop
js
cmp
fsubrs
sub
pop
push
lahf
mov
or
ja
inc
jne
jo
repnz
fcoms
ja
nop
lahf
sub
lods
loope
repz
add
sub
mov
in
sti
je
sbb
xchg
subl
inc
inc
sbbl
xchg
je
aaa
mov
inc
dec
or
push
mov
sbb
mov
or
pushf
jg
mov
fistpll
inc
push
repz
and
fidivrl
sahf
cmp
dec
rolb
fcoms
clc
lahf
scas
in
xchg
mov
and
sbb
and
cmpsb
add
hlt
repz
add
dec
scas
mov
push
dec
les
xor
sti
daa
into
dec
call
jno
xor
xor
push
push
inc
lock
das
dec
push
aas
inc
push
inc
rorl
mov
sahf
je
dec
out
push
ret
sti
frstor
or
dec
shl
xchg
sub
inc
push
lods
ret
fstps
xchg
sbb
int3
mov
adc
sub
cmp
push
mov
ja
pop
and
stos
iret
dec
cmp
fsubrl
dec
sub
pop
stos
cmp
ret
jo
dec
sub
push
nop
add
pop
push
and
mov
cmp
mov
sub
and
cmpsl
fbld
or
push
enter
push
jge
xchg
cmp
or
xor
mov
das
add
lds
cmp
cld
sbb
sahf
mov
popf
xor
or
roll
fwait
mov
pop
fstps
mov
jae
add
ds
pop
xchg
cltd
fwait
out
adc
ljmpw
push
leave
das
mov
mov
fldt
pusha
jmp
jp
inc
xlat
mov
dec
mov
xchg
ljmp
fsubl
push
pop
xor
dec
adc
addr16
inc
movd
sbb
adc
xlat
xor
pop
and
adc
xchg
ret
test
int3
mov
scas
mov
popa
inc
add
or
mov
jl
data16
leave
mov
je
cwtl
pop
loop
pop
outsl
push
dec
push
dec
inc
int3
sarb
scas
cmp
int3
and
or
scas
sub
ret
dec
jae
and
inc
xchg
jno
push
fnstcw
repz
test
out
xor
xchg
pop
jbe
leave
sub
adc
sub
push
jge
insl
pop
lods
pop
mov
cmp
xor
cmp
pop
dec
push
shl
sbb
repnz
pop
sbb
inc
outsl
clc
dec
pop
mov
mov
pop
leave
cmpsl
or
and
jle
fwait
push
dec
jbe
jg
dec
out
adc
int3
mov
jbe
dec
mov
js
sbb
mov
push
sbb
nop
iret
jbe
daa
sahf
mov
mov
dec
jle
cwtl
fcompl
xor
dec
lahf
lahf
sarb
add
stc
xor
bound
and
fstp
xor
mov
and
add
scas
cli
cmpsl
shlb
in
jecxz
push
inc
pop
xchg
push
and
lret
add
imul
popa
icebp
or
andl
es
pop
xor
shlb
call
sarl
dec
push
std
pop
adc
bound
inc
sbb
push
dec
mov
stc
inc
sub
mov
xchg
mov
lahf
lea
dec
sbb
cwtl
int
sub
movsb
dec
test
jbe
shr
in
jbe
and
sub
xor
cmc
dec
mov
ret
add
lds
enter
xchg
mov
pop
lret
lds
loop
inc
insl
mov
mov
dec
in
and
mov
sub
mov
mov
push
add
push
fld
test
mov
and
adc
lods
and
pop
xor
xor
lock
sub
mov
scas
push
adc
adcl
stos
popl
ds
ja
sti
jae
ret
sub
pop
mov
lds
add
dec
cmp
rclb
sbb
aam
pop
dec
repnz
nop
pop
stc
loop
sub
jns
add
stc
jb
mov
dec
sbb
idivl
cmp
mov
enter
lret
lahf
adc
stos
or
lock
adcb
mul
add
repz
mov
pop
fdivrl
adc
mov
jbe
push
leave
jg
jae
sub
jmp
popf
pop
cld
shl
in
ljmp
mov
jmp
mov
mov
cmpsl
add
sti
jg
push
mov
inc
push
nop
xor
enter
fidivrl
jg
ret
out
fsub
imul
int
stos
cmp
clc
test
in
pop
test
js
push
jbe
pop
pusha
jne
ror
repnz
rorb
push
fxch
aas
cld
adc
rcrl
jns
cmp
stc
scas
popf
xchg
cs
ja
add
scas
gs
in
jnp
cmp
add
lea
inc
mov
leave
aas
xchg
out
popa
jb
push
fdivs
scas
in
dec
push
sbb
sbb
test
xchg
enter
je
sbb
imul
aad
mov
jnp
aaa
fcmovb
jge
cmp
mov
out
dec
adc
ret
xchg
stc
mov
jno
xchg
cld
mov
movsl
std
adc
jp
push
jns
test
mov
cmpb
leave
inc
sub
stos
pop
int3
cmp
mov
jge
in
pop
bnd
push
sub
sub
fdiv
mov
sub
pop
push
push
xchg
jno
add
frstor
sub
xor
cmpb
jne
xchg
mov
insb
sti
dec
pop
dec
icebp
gs
mov
rcr
mov
push
jg
movsb
mov
mov
in
xor
dec
test
vunpcklps
mul
mov
dec
es
pusha
loopew
fisubl
xchg
sbb
je
dec
das
ret
push
ror
pop
push
aas
loopne
xor
pusha
sti
sbb
mov
sub
xchg
pushf
in
mov
or
rorl
leave
pushf
xor
jge
add
add
lods
lods
lahf
test
push
jnp
in
push
add
arpl
mov
lahf
cmp
movl
push
daa
es
xchg
cli
xchg
cmpsb
xlat
push
sbb
mov
pop
cmpsl
test
dec
cmp
xor
cs
lods
sahf
mov
enter
or
inc
shrl
insl
outsl
jmp
jae
xor
lock
mov
aaa
and
mov
popf
mov
mov
lcall
loopne
cmp
nop
out
add
xor
mov
dec
xchg
loope
sub
sti
inc
ljmp
mov
cmp
mov
cmpl
and
jp
ja
ljmp
sar
adc
mov
int3
sub
std
pop
jmp
or
pusha
fidivs
and
xchg
mov
cld
jnp
ljmp
stc
fwait
daa
fistpll
test
jno
mov
inc
sbb
je
mov
fildll
loop
or
xchg
ffree
loope
inc
ret
push
pop
dec
ljmp
sbb
adc
jmp
mov
rcl
lret
addr16
add
inc
pop
inc
icebp
shll
mov
into
out
in
mov
add
mov
mov
cmp
in
cs
or
push
scas
sub
test
cmpsb
hlt
je
push
loop
adc
inc
adc
push
push
sarb
loopne
int3
out
or
or
orl
add
mov
xor
adcb
aam
mov
sub
sub
sar
adc
mov
test
xchg
jl
jns,pt
ret
mov
mov
repz
and
push
inc
inc
mov
xchg
repnz
arpl
pushf
imul
add
leave
mov
rol
push
fsubl
sub
test
xor
mov
fidivrl
mov
out
mov
call
lds
dec
or
je
sub
jae
enter
xchg
popf
sbbb
sub
lret
or
sti
mov
dec
lahf
cmp
jns
mov
mov
repnz
leave
add
push
sbb
sub
push
mov
fidivrs
insb
xor
xchg
push
mov
popf
jmp
mov
push
outsl
out
mov
sahf
or
cmp
in
scas
mov
adc
dec
loop
sub
mov
ret
cmpsb
push
popa
and
sbb
in
incb
aad
scas
loopne
cmp
pop
test
lock
outsb
add
imul
mov
fldcw
mov
mov
inc
and
and
ds
jno
push
dec
fsubl
rclb
rclb
test
addr16
mov
xor
mov
inc
mov
pop
add
and
and
add
pop
inc
pushl
aam
ja
bnd
push
mov
pop
jmp
cmp
xlat
movsl
cmp
mov
in
dec
mov
add
jae
and
movsb
mov
cmp
adc
mov
xchg
mov
mull
nop
cmp
jo
popa
std
dec
stc
ret
jbe
jmp
aam
sti
inc
cmpsl
pop
leave
ret
pop
sarb
add
movsb
iret
jnp
outsl
dec
fcmovnu
adc
mov
movsl
adcl
mov
ds
jg
out
subl
lcall
sbb
shrb
and
pop
cmp
mov
xor
jae
mov
cmpb
mov
mov
xchg
cs
or
lret
int
das
out
sub
mov
push
int
stos
xor
xor
fimull
add
pop
fnsave
sub
adc
pop
jns
loop
xchg
rorb
idivb
jl
int3
les
popf
decb
inc
push
sub
mov
pop
hlt
dec
jg
stos
mov
movsl
pushf
test
push
mov
inc
repnz
mov
aad
scas
jae
inc
jbe
mov
xor
scas
or
mov
mov
pop
cld
rolb
lret
inc
aas
mov
jp
adc
mov
mov
add
and
icebp
mov
cltd
jmp
cs
repnz
pop
iret
aam
sbb
inc
popa
outsl
sbb
in
loope
notb
inc
and
out
and
std
imul
in
cmp
jmp
sbb
dec
cltd
mov
jo
adcb
rolb
inc
insl
in
bound
inc
sbb
test
jb
xorb
loop
pushf
ljmp
mov
or
ss
in
mov
mov
mov
notb
mov
mov
mov
hlt
cwtl
fdivp
pushf
cmc
xor
sub
adc
ljmp
add
adc
lods
pop
xlat
mov
out
testb
data16
ret
stc
fcmovnu
ja
in
into
je
test
adcl
dec
das
inc
add
sbb
mov
sbb
andb
std
enter
mov
dec
repz
mov
inc
mov
imul
cltd
or
lret
rcrb
test
sub
loope
mov
mov
lcall
jmp
mov
cmc
out
pop
addl
cltd
sub
ret
mov
aaa
push
lods
outsl
push
xchg
add
imul
jo
xor
xchg
lods
enter
and
shll
push
pop
sub
lods
cmp
aad
scas
mov
push
fcoms
push
add
addr16
pusha
outsb
cmp
lahf
test
sub
pop
movsb
adc
jmp
add
push
data16
daa
mov
jb
in
dec
loope
and
pop
imul
cmpsb
cwtl
and
sbb
icebp
mov
or
mov
mov
mov
pop
add
repz
xor
aaa
ret
sbb
xor
pop
mov
sbb
jo,pn
call
jnp
fwait
mov
jns
jns
pop
jl
inc
scas
cs
test
mov
hlt
push
mov
or
adc
rcrl
or
push
inc
jp
ret
sahf
stos
ret
aam
mov
ret
xchg
ss
addl
and
mov
pop
dec
into
es
enter
jecxz
pop
ret
pushf
int3
inc
or
xor
jecxz
pop
mov
inc
pop
subb
xor
jg
mul
dec
push
dec
pop
pop
xor
sarl
adc
xchg
pushf
pusha
mov
jae
lcall
jae
xchg
sbb
xchg
fwait
or
xchg
daa
stos
stc
ret
mov
andl
cmp
cmpsb
lcall
loope
push
mov
lcall
mov
xchg
bound
fcmovnu
jecxz
cmc
mov
mov
mov
push
jae
mov
iret
jo
das
imul
sub
mov
imul
sbb
adc
adc
push
push
out
and
sbb
adc
sub
pop
mov
push
pop
rcrb
sub
and
scas
sarb
repz
mov
jp
enter
movsl
addr16
test
mov
sub
loopne
lds
leave
dec
jge
outsl
scas
sti
jge
add
shr
xor
add
and
dec
cmpsb
mov
scas
mov
lods
jne
push
xchg
jbe
das
sub
imul
dec
in
mov
hlt
add
enter
pushl
mov
push
jbe
mov
jno
xacquire
fstpl
jno
mov
js
in
ss
insb
mov
xchg
mov
fidivs
and
adc
imul
aaa
dec
scas
push
xor
xor
inc
outsl
icebp
xor
inc
push
lds
dec
fsubr
in
js
push
xchg
sub
jmp
mov
jnp
push
in
jp
int3
loope
inc
lock
inc
pop
fwait
jp
add
enter
adc
pop
mov
cmp
sub
sbb
fsts
lds
stc
push
mov
push
inc
mov
lcall
mov
popf
push
das
sub
bound
out
iret
sub
out
xor
cltd
iret
icebp
hlt
fimuls
fwait
cmc
subl
test
scas
and
scas
jae
str
lods
push
cmp
int3
or
in
or
hlt
inc
std
adc
xor
inc
fadds
in
mov
decb
sbb
jg
test
into
mov
cs
cmpsl
push
dec
out
cmpsb
arpl
xlat
push
out
cwtl
jo
xlat
inc
lods
sbb
push
repz
call
cmpl
xchg
loop
push
xlat
je
mulb
xor
shll
pusha
pop
inc
adc
xchg
dec
push
mull
mov
mov
nop
xchg
jns
gs
stos
and
stc
outsb
les
in
dec
gs
dec
jns
add
pop
dec
mov
ret
add
es
mov
inc
push
and
mov
jo
mov
pop
mov
mov
sbb
jno
pop
adc
addb
mov
or
dec
dec
das
dec
mov
mov
mov
cmp
stc
and
lock
cmpsl
in
adc
cld
inc
sbb
push
enter
out
inc
fs
inc
out
ret
movsb
lret
ficoml
test
fwait
cmp
xchg
outsb
push
testl
test
fdiv
inc
xchg
adc
add
xor
sbb
sbb
inc
xchg
out
push
pusha
push
mov
inc
push
xor
push
pop
ss
ja
jbe
gs
xor
ds
mov
jnp
shrb
and
mov
push
adc
cltd
or
stc
decl
xor
add
loop
adcl
push
push
movsb
inc
add
fstpl
shll
xor
jecxz
jg
dec
xlat
jmp
int3
dec
aad
cmc
pop
mov
pop
call
ret
inc
or
cmpsb
je
sub
stos
movsl
mov
inc
mov
adc
cmp
cmp
js
xchg
fmulp
or
test
mov
mov
pop
gs
into
rclb
mov
test
mov
adc
xor
mov
clc
cmp
daa
shll
std
outsl
cmpb
ja
pop
imul
ret
or
and
enter
es
test
loope
imul
xor
iret
lea
imul
push
lcall
movsb
adc
pop
mov
pusha
push
cmp
or
push
sbb
sub
mov
fimuls
jae
or
cmp
mov
jnp
cmpl
cmpb
adcl
lds
pop
int
in
sub
sbb
mov
sbb
lods
adc
xlat
fcompl
cmp
xchg
sbb
xlat
mov
test
inc
and
das
ret
scas
scas
leave
push
outsl
dec
jno
fxch
xlat
scas
test
jns
push
lods
cmp
inc
shl
dec
adc
pop
test
outsb
movsl
movsb
mov
and
mov
cmp
rcrl
push
jmp
test
shlb
mov
movsl
and
insb
xchg
sub
bnd
leave
xchg
xor
daa
aaa
pop
pop
imul
sbb
inc
add
in
lods
stos
imul
mov
and
lock
out
loopne
dec
imul
cmp
into
movb
jne
pop
xchg
filds
adcb
mov
insb
cld
pop
mov
das
inc
dec
pop
into
test
fwait
bound
push
fisttpl
cld
lcall
xchg
sub
jae
aaa
and
xor
cs
add
lock
xchg
arpl
lods
movsl
pop
sub
push
cmpsb
rorl
jge
or
mov
int
hlt
into
jae
dec
push
mov
lods
xor
gs
sub
mov
imul
or
bound
mov
cs
out
add
jg
push
adc
cmp
jle
jns
or
pop
dec
sahf
leave
sbb
addr16
mov
shlb
imul
and
fs
scas
inc
lods
loopne
push
rcl
and
pop
aaa
repz
cmpsl
cmp
push
pop
mov
cmp
fs
call
jl
and
dec
test
push
jns
ret
aad
hlt
inc
xor
mov
cmp
stos
imul
adc
mov
pop
and
lret
jmp
pop
mov
jg
xor
cmp
jbe
xor
mov
in
sbb
jbe
xor
jecxz
call
nop
xor
xchg
out
add
sti
jbe
mov
mov
stc
call
insl
lahf
movsl
int
insl
sbb
adc
pop
popf
cmp
jno
fisttps
into
ds
movsb
mov
leave
mov
inc
xor
and
imulb
pusha
lods
jns
push
mov
adc
in
daa
jbe
and
je
insb
adc
push
bsr
push
shl
test
bnd
popa
xchg
cmp
push
push
mov
mov
add
repz
icebp
mov
aad
dec
and
jb
sub
xchg
fs
mov
out
or
adcl
and
inc
hlt
xor
mov
aas
inc
mov
push
mov
push
test
shll
into
sbb
dec
sub
mov
out
xor
fimull
mov
mov
pop
ja
insl
shlb
inc
add
push
aam
fwait
adc
jno
push
sbbb
push
mov
adc
or
test
inc
cmp
orb
mov
movsl
xor
xchg
push
pusha
int3
sub
test
sbb
ficomps
push
xchg
xor
lret
arpl
dec
dec
dec
cmc
repnz
mov
inc
outsl
push
das
pusha
lret
lret
jns
add
iret
cmp
mov
in
xchg
imul
andl
mov
sbb
scas
and
test
in
and
mov
sub
push
rol
lods
push
mov
icebp
pop
mov
rcrl
push
fidivl
ret
in
fldenv
push
or
mov
xor
mov
std
in
adc
test
mov
dec
iret
mov
les
stos
into
add
push
jne
aad
cmc
ret
enter
insb
js
imul
pop
lcall
ja
testl
and
adc
inc
idivb
jmp
xchg
cld
pop
ljmp
mov
sub
mov
sbb
in
fsubrs
aad
mov
sub
je
dec
rcrl
lea
mov
xchg
std
cmpsl
mov
push
xchg
mov
mov
aas
fmulp
inc
jg
in
jecxz
out
pop
push
cmp
stc
xor
sbb
popa
add
cmpl
rol
les
out
mov
pop
cli
je
imul
or
mov
mov
pop
xchg
pusha
lahf
dec
add
sbb
cmp
inc
or
addr16
mov
cwtl
sub
adc
cmpb
sub
nop
push
add
test
push
jnp
notb
les
push
or
bound
pop
sbb
pminub
mov
inc
jl
call
sbb
cmpsb
insl
sub
cmp
movsb
and
rcr
jns
dec
xlat
out
inc
testb
push
or
pop
insb
aas
mov
jnp
out
push
jns
popf
jmp
sbb
fldl
xchg
insl
push
dec
fcompl
sbb
int
lret
pop
mov
inc
lret
jl
mov
cmp
mov
adc
jecxz
roll
testl
sbb
cmp
sbb
pop
sub
push
repnz
or
pop
push
inc
jnp
test
rclb
pop
cmpl
mov
add
cli
dec
push
mov
stos
jbe
sti
movsl
and
iret
sub
pop
lods
mov
cmpsl
lds
push
shrb
mov
test
pop
out
push
sarb
aas
cwtl
adc
pop
outsl
nop
cmp
stos
imul
jp
mov
test
pop
dec
pop
adc
xor
xchg
outsl
lock
cmc
sbb
sub
pop
adc
add
fisttps
ret
mov
cltd
or
mov
mov
test
std
push
fdivl
mov
cmp
mov
sbb
stos
sub
xor
sub
lods
or
test
jo
cli
jmp
and
sub
mov
in
adc
mov
mov
push
std
push
jg
jo
out
cmpsb
cmp
mov
dec
rcrl
xor
inc
dec
hlt
push
dec
cmp
into
pop
xchg
adc
leave
ret
mov
or
arpl
mov
cmp
pushf
jmp
out
out
mov
or
mov
aas
sub
or
push
cmc
xor
jne
int
lcall
sarb
call
inc
imul
out
cmp
jnp
lret
subl
add
pop
or
daa
stos
xor
push
dec
lea
daa
adc
outsl
or
pop
inc
push
bound
lea
mov
int3
dec
mov
sbb
fldl
in
mov
out
rorl
roll
jle
xchg
sub
jmp
mov
pop
clc
pop
aad
call
xchg
nop
out
sti
jge
pop
pusha
push
xchg
xor
inc
xchg
mov
xor
xor
pop
inc
pop
inc
push
push
stc
cmp
cmp
lds
mov
aam
push
mov
pop
dec
cltd
cmpsb
dec
mov
test
arpl
icebp
jnp
out
shlb
addr16
adc
hlt
push
xchg
fprem1
rorl
test
add
or
jno
test
cmp
adc
xchg
dec
inc
cmp
negb
das
iret
mov
cmc
xchg
mulb
pop
mov
test
shlb
orb
push
pop
cmpsl
sahf
mov
stos
out
scas
add
cmp
sbb
mov
test
call
mov
dec
les
or
xor
movsl
xchg
int
enter
mov
push
fisubs
test
push
inc
movsl
negb
cltd
pop
icebp
pusha
roll
push
xor
sub
fmulp
rclb
loop
inc
sbb
sub
cmp
xchg
idivb
and
cwtl
pop
icebp
push
popa
cmpsb
cmpsb
push
pop
sbb
addr16
pop
mov
or
and
xchg
push
pop
call
jne
sbb
cltd
call
out
ret
mov
imul
aas
shl
roll
pop
das
out
cwtl
cmp
lret
cmp
pop
ljmp
add
ret
data16
fisttps
repz
es
pop
test
pusha
or
mov
insl
lods
fs
nop
sbb
push
sti
mov
jae
or
decl
cmp
int
out
popf
repnz
dec
imul
in
imul
outsl
sub
divl
int3
xor
divb
jne
sub
sbb
sbb
in
xchg
inc
push
fisubl
xor
xor
cltd
add
fildll
inc
mov
inc
lock
push
rorb
ja
fistpl
cs
ret
mov
lret
fistps
xchg
shrb
adc
pop
pusha
aas
orl
cmpsb
cmp
arpl
xor
mov
xor
jne
hlt
pop
int3
lret
pop
xor
mov
data16
xchg
test
pop
addl
dec
shrb
das
in
xchg
imul
cmp
cmpsl
push
mov
aad
mov
lods
lods
loope
sbbb
mov
bound
mov
xor
mov
enter
xlat
and
cmp
pop
jns
xor
inc
xchg
test
iret
test
add
mov
loope
mov
out
cld
mov
mov
shrb
out
pop
or
in
je
movsl
mov
loopne
sbb
stos
sti
fnstenv
daa
xchg
pop
xchg
addb
neg
nopl
push
add
std
iret
xchg
add
ret
ljmp
ret
std
jno
popf
add
jl
pop
fsubrl
sahf
jno
jg
std
js
ss
ja
inc
std
out
fldl
sahf
adc
mov
shlb
cmc
push
mov
call
pop
inc
inc
inc
or
mov
lock
imul
addr16
cmp
dec
inc
lods
adc
add
in
push
sbb
xchg
cmpsb
test
mov
push
mov
sbb
jle
sub
jbe
pop
out
jmp
cmp
sbb
pop
adc
faddl
jbe
push
lods
stc
pop
jle
enter
lcall
mov
ret
or
lods
push
mov
fidivrl
xor
xchg
sbb
push
inc
testl
push
addr16
pushf
dec
jo
sbb
mov
test
clc
dec
vorps
cld
mov
int
mov
sub
lock
mov
mov
les
ror
cmp
push
out
aas
lock
xchg
dec
sbb
mov
imul
mov
fidivs
ret
jae
jg
mov
fcmovnbe
inc
fstps
push
cmp
xor
push
repz
inc
inc
pop
dec
loopne
lds
xchg
in
aaa
loopne
in
mov
push
stc
insb
shrb
rclb
mov
inc
ret
inc
cld
insl
pop
loop
in
inc
and
lcall
sbb
mov
sub
push
and
jg
xor
inc
aam
dec
pushf
subb
ficoml
into
dec
xchg
pop
xor
add
jg
loop
fcomps
jo
int3
ret
lock
sbb
cmpsl
enter
movsb
pop
mov
mov
fistpll
pop
push
adc
movsl
mov
pop
stos
insb
xor
mov
fldcw
loop
addr16
fxch
cmp
xchg
inc
dec
mov
fdivrs
fisubrs
cmpsb
adc
mov
or
mov
mov
popf
ret
add
lret
pop
mov
outsl
mov
add
mul
imul
mov
daa
je
inc
adc
dec
jmp
or
add
lret
jle
icebp
xor
xchg
mov
in
bnd
and
pop
pop
aaa
mov
arpl
xchg
pop
jecxz
loopne
jb
fwait
sub
or
mov
jbe
ljmp
xor
push
in
ljmp
cmp
dec
and
pop
je
mov
scas
scas
cwtl
fninit
xchg
and
lods
sub
loop
xchg
stos
lcall
mov
lahf
cmp
mov
stos
lds
push
int3
mov
jns
jl
std
aad
das
stos
lret
leave
fsubr
and
cmp
add
es
notb
xor
pop
jl
movsl
or
in
daa
lret
out
sbb
out
addr16
mov
pop
fwait
repz
mov
add
jge
pusha
xchg
in
add
cmpl
callw
adc
pop
pop
add
and
inc
nop
jbe
ret
add
or
mov
mov
mov
int3
and
cmp
fs
mov
lcall
loopne
adcb
daa
lcall
lods
notb
mov
dec
out
int3
inc
mov
xchg
push
add
xchg
xchg
pop
jno
mov
xor
lcall
xor
jecxz
out
ja
xchg
rcl
ds
sub
stos
inc
mov
mov
fwait
xchg
add
cli
and
xchg
xchg
jmp
and
inc
shlb
mov
rorl
pop
jl
push
ret
ss
aam
lret
inc
insl
adc
adc
pop
xor
out
je
repz
or
inc
scas
or
stos
iret
mov
sub
and
lcall
popa
lret
icebp
push
icebp
pop
dec
push
ljmp
bound
movsl
cmpb
mov
push
inc
movsb
lods
push
inc
mov
out
loop
mov
pop
in
pusha
adc
add
mov
pusha
add
es
inc
int
sub
cmp
sub
jo
js
inc
repnz
dec
pop
or
aam
ss
mov
repz
dec
gs
add
dec
adc
lock
cld
shlb
pop
in
movsb
pushf
and
push
movsl
mov
inc
or
cmp
sub
icebp
jne
mov
sub
lds
hlt
fidivrs
pushf
cmc
fdivl
sub
and
push
fldl
mov
xchg
jno
adc
test
hlt
push
out
xor
cmp
iret
rcll
push
iret
mov
xchg
ja
sub
mov
dec
jmp
or
mov
lret
dec
xor
loope
enter
addr16
sbb
mov
adc
fisubs
jae
pop
cs
sub
mov
dec
pusha
add
lea
and
fildl
lret
inc
pop
push
es
fmuls
push
ret
mov
adc
or
inc
in
pushl
xchg
pop
xor
out
xchg
inc
inc
or
dec
lret
mov
aad
in
into
sarl
jl
hlt
push
rcrl
out
loope
not
mov
sti
in
xor
sub
push
loope
dec
int3
xchg
shl
dec
ja
pop
lea
inc
push
cld
pop
and
xor
add
idivl
outsb
jne
imul
mov
xor
pop
cmp
push
pop
jno
test
adc
outsb
sub
jecxz
xor
pop
pop
xorl
add
sbb
fwait
xchg
es
sahf
es
push
pop
xchg
in
in
sbb
xor
in
in
les
adc
scas
jb
shll
repnz
pop
xchg
cli
fwait
sub
jecxz
lea
sti
inc
jbe
dec
cmp
lea
push
dec
cwtl
mov
adc
stos
hlt
or
push
jle
lock
movsb
xor
inc
mov
fldenv
xchg
lahf
mov
sbb
ret
shrb
dec
lcall
lods
fisttpl
ss
ret
sbb
mov
bound
push
mov
and
jnp
cmp
icebp
xchg
mov
rclb
idivl
jle
add
mov
mov
push
push
xor
jp
xchg
adc
add
outsl
jb
adc
push
enter
lds
push
mov
arpl
lahf
add
dec
jae
into
dec
lahf
in
je
and
into
and
mov
pop
push
out
and
ss
cmp
push
adc
mov
xor
outsl
mov
mov
movsb
mov
insl
outsb
push
in
xor
sub
addr16
push
outsl
adc
dec
mov
pop
lds
iret
sbb
ds
jecxz
in
and
in
fisubrl
out
xchg
push
jle
push
ret
sbb
sbb
movsb
add
loop
js
push
out
insl
aas
pop
mov
lcall
inc
add
call
adc
xchg
jmp
scas
ret
jp
jge
inc
xchg
les
fisttpll
adc
dec
mov
cld
add
and
pop
mov
ja
repnz
push
sti
xchg
mov
cmp
loope
push
into
pop
adc
mov
test
inc
mov
js
fisubrs
or
and
arpl
cs
loope
and
cs
xor
js
xor
out
and
pop
fnstenv
cmp
cmp
leave
sub
dec
sub
add
and
movsb
ljmp
cli
inc
dec
push
insb
out
push
inc
jg
sub
pop
sub
and
sub
and
popa
lcall
ss
or
out
sbb
cld
call
popa
subb
push
mov
and
mov
pop
lea
jbe
xor
fs
inc
add
and
fdivr
inc
scas
push
adc
xor
jo
jno
ret
and
dec
outsb
or
fcoms
jnp
sub
test
fwait
or
xor
sub
aad
outsb
jmp
movsb
dec
aad
add
mov
sub
xor
ljmp
inc
fndisi(8087
ret
adc
fsubrl
popl
call
xchg
loop
es
xchg
call
or
cs
sbbl
testl
jne
in
test
pop
cmp
or
in
jo
js
jle
out
mov
push
repz
sub
or
jbe
lds
movsb
ljmp
test
cld
cmp
fistps
mov
dec
adc
dec
adc
pop
loope
mov
iret
cmp
pop
popa
mov
cwtl
cmpl
in
pop
test
pop
cmp
and
xorl
push
pusha
sbb
jg
xchg
lock
pop
adc
mov
stos
scas
jo
pop
xchg
hlt
or
add
push
stc
jl
cltd
es
dec
pop
ljmp
icebp
and
mov
insb
adc
mov
and
xchg
daa
push
popa
es
ja
jb
rsm
pop
or
mov
fwait
imul
out
addr16
fcmovb
fsubr
cmp
outsb
mov
and
scas
cmp
inc
repnz
lds
mov
sub
inc
pusha
ret
add
inc
cmovo
cld
lds
lods
in
pop
lock
imul
neg
mov
inc
lock
xchg
call
cltd
adcb
xor
movsb
push
mov
or
pop
sbb
sbb
icebp
adc
pop
sti
xchg
les
xchg
aam
aam
cltd
xor
cltd
mov
dec
dec
sti
mov
mov
jns
sub
add
lods
test
mov
out
and
add
jbe
sub
or
xor
std
dec
aas
pushf
fs
ret
lret
mov
gs
lret
or
das
and
ret
and
mov
pop
lds
push
repz
push
push
les
shlb
iret
jmp
rclb
dec
jbe
pop
cmpsl
mov
cwtl
fsts
mov
xchg
stc
fisubrs
xchg
lock
adc
data16
cld
xlat
jne
dec
mov
pop
xchg
pop
aaa
mov
out
mov
es
dec
jae
pusha
sub
fldt
xchg
pop
mov
xor
movsl
or
sub
cs
mov
mov
imul
pop
pop
jl
xlat
pop
ds
jl
ror
aas
out
imul
es
sub
jmp
add
mov
cmp
fisttps
dec
jb
push
sub
rcrl
dec
xchg
mov
bound
cmc
leave
fisttps
and
xor
push
and
cwtl
cmc
fs
or
iret
inc
inc
xor
rolb
or
cmp
mov
cmp
imul
cmpl
cmp
xchg
xchg
inc
mov
bound
push
xchg
xchg
in
pop
push
cmp
dec
int3
dec
clc
jl
xchg
idivl
sbb
repz
sub
scas
test
xchg
bound
adc
xor
lret
imul
mov
sbb
push
int
xlat
cmp
inc
mov
push
in
mov
jge
jg
xlat
xlat
jno
imul
xchg
jo
enter
xor
nop
push
in
cld
popa
inc
test
icebp
push
mov
mulb
scas
mov
dec
in
and
push
adc
mov
and
popf
jle
icebp
jns
les
sbb
push
jno
xlat
cltd
cmp
out
daa
cli
dec
cli
loope
cmc
xor
and
push
std
loop
repz
or
inc
xchg
xchg
pop
cmp
pop
clc
test
xchg
das
rcrl
mov
incl
jp
adc
adc
clc
mov
std
fmuls
adc
mov
mov
lock
cmp
cwtl
pop
mov
test
inc
mov
mov
dec
roll
sub
lods
or
insb
add
add
push
fistpll
adc
mov
dec
sbb
push
dec
pop
sub
test
or
imul
mov
mov
movsl
pop
cld
test
jg
das
push
addr16
inc
pop
subl
xchg
mov
out
into
aam
jge
in
xchg
dec
jg
and
es
xchg
call
mov
outsb
fistl
mov
rolb
dec
and
xor
mov
stos
jle
pop
cmp
xor
ret
lret
xchg
jnp
jne
ljmp
sub
push
imul
dec
mov
nop
daa
ja
jle
out
pusha
repz
stos
loope
lock
enter
pop
fistpl
adc
xor
push
sahf
lcall
out
mov
sar
mov
imul
add
popf
mov
add
or
adc
ss
add
sbb
std
xor
imul
leave
cwtl
sbb
enter
popa
pop
hlt
imul
push
inc
mov
mov
fisttpl
mov
jmp
pushf
jmp
pop
xor
fcmovnb
stos
pop
inc
or
mov
jno
jnp
xor
push
cmp
push
fnstcw
xchg
cmp
push
or
dec
data16
fadds
dec
outsl
cmp
insl
and
xchg
dec
popf
repnz
sbb
sub
in
fcmovnu
dec
pushf
sub
fidivrl
mov
js
das
in
ljmp
add
mov
mov
dec
ss
rcll
es
jae
in
cmp
sbb
leave
add
lock
lods
std
shlb
pop
add
jo
dec
adc
xchg
lock
popf
leave
sti
incl
xchg
outsb
aad
in
addr16
mov
notl
mov
cli
sbb
fs
loopne
mov
aam
gs
lret
js
in
loope
push
jecxz
fisttpl
outsl
insl
pushf
push
push
or
sbb
fcmovnu
push
scas
add
xor
insl
pushf
insb
xor
or
mov
ds
dec
dec
cmpsl
jmp
cmp
sar
mov
inc
imul
insb
xchg
mov
daa
dec
xchg
iret
mov
loop
jno
adc
out
cmp
int
in
imul
mov
ret
ss
js
test
mov
popa
out
or
push
pop
xor
scas
in
sub
pop
sbb
decl
cwtl
prefetch
movsb
fiaddl
xchg
test
mov
cmp
fs
xlat
test
ds
hlt
scas
inc
jg
jl
insb
cmp
xchg
loope
fcmovnbe
xchg
es
aas
in
bound
in
lods
xchg
mov
lret
or
push
mov
sti
mov
clc
push
mov
scas
push
iret
in
fnsave
lock
cmp
roll
or
xchg
adc
loop
dec
shl
or
nop
clc
pop
ja
mov
fxtract
out
jle
add
adc
popf
les
mov
push
dec
in
pop
scas
shr
push
lret
jnp
cmpsb
add
or
testl
enter
push
mov
mov
stos
insb
xor
int
je
sti
adcl
jg
sbb
mov
push
cmpsb
push
xchg
cwtl
pop
aas
out
dec
lods
dec
test
inc
or
dec
pop
imul
icebp
sbb
xor
frstor
sub
imul
in
cmp
mov
jo
lods
jb
inc
idivl
aam
inc
loopne
cltd
sti
and
mov
dec
fildl
inc
dec
lcall
sub
test
adc
inc
push
jns
cmp
cmp
adc
pop
adc
repnz
scas
fsubrs
inc
adc
addr16
xor
cmpl
jns
xor
jmp
rcrl
mov
test
in
lahf
jns
jecxz
inc
shrl
lret
mov
mov
mov
jb
xor
sbb
test
dec
mov
ret
mov
mov
call
imul
xor
int
add
in
adc
push
add
mov
or
jp
enter
sbb
push
mov
stc
add
aad
es
push
or
fbstp
jg
xchg
xor
imul
inc
add
cmc
fsubs
outsl
repz
loop
inc
call
test
adc
je
jno
cmp
add
rolb
ljmp
jmp
out
mov
ret
into
loopne
inc
enter
or
dec
fcomps
call
outsb
loope
pop
test
pusha
test
xchg
jp
sbb
not
adc
rcrb
add
lods
push
pop
not
stc
and
leave
push
aas
popa
sbb
nop
ss
fstl
xor
es
jp
inc
adc
stos
mov
or
mov
mov
mov
jl
repnz
cmp
int3
inc
mov
bound
aad
outsb
je
out
cmpsl
jno
cmp
push
pusha
shrl
rcll
or
es
adc
iret
cmpsb
test
das
mov
movsl
leave
xor
ficoml
adc
icebp
add
fs
sbb
mov
in
jg
xchg
pop
mov
icebp
pop
lret
out
fcmovne
les
jae
dec
inc
or
loopne
dec
jb
pop
enter
jo
dec
dec
shl
in
lds
bnd
je
sbb
jb
gs
repz
outsb
mov
cmp
jmp
xor
icebp
repz
mov
add
cli
fsts
ja
insl
testl
add
lods
mov
mov
jo
mov
inc
or
cmp
inc
ret
cltd
fldcw
push
fwait
jnp
mov
jl
mov
add
icebp
movsl
je
scas
ss
jecxz
cmp
addl
sbb
jge
jle
in
jg
xorl
adc
mov
fldt
jns
jg
loop,pn
les
xor
sub
ja
mov
pop
loopne
or
sbb
or
enter
pop
arpl
mov
ljmp
jne
xlat
mov
mov
xor
xchg
jl
lods
mov
sbb
mov
es
sub
data16
call
adc
push
stos
add
adc
mov
stc
int
xchg
popa
insl
clc
jl
insl
repz
and
mov
movsb
addr16
push
cs
sub
xchg
adc
notl
add
and
sub
adc
pop
push
mov
xchg
adc
sub
mov
inc
dec
xchg
mov
pop
pmullw
cwtl
xchg
lds
pop
movsl
stos
hlt
or
sbb
mov
jl
fisttps
inc
ret
xor
sbb
jmp
mulb
pop
or
jne
ds
mov
cwtl
sarw
lahf
jne
dec
movsl
adc
insl
dec
fmul
insb
sbb
push
sbb
pop
dec
adc
xchg
inc
xchg
sub
enter
push
xchg
in
orl
inc
push
inc
bound
jle
test
push
mov
lock
pop
or
push
ret
movsl
inc
adc
je
out
and
ret
rcll
out
scas
sbb
outsb
out
push
cmp
mov
jbe
rorl
push
popf
jmp
push
or
hlt
dec
sti
and
ja
or
add
mov
mov
pop
out
jle
roll
outsb
inc
out
and
test
jl
add
hlt
dec
sbb
xchg
lods
leave
mov
jle
mov
jecxz
std
cmp
pop
add
cmp
jns
js
popa
leave
cmp
sub
mov
xchg
and
icebp
mov
pop
ret
cld
xchg
push
scas
les
mov
cmp
fimull
test
inc
clc
aad
mov
push
rolb
push
and
stos
in
fmull
fs
lock
cmp
pop
adc
mov
adc
add
mov
xchg
roll
fdivs
ret
out
mov
add
or
jb
pop
push
insb
call
push
add
movsl
push
cmp
icebp
loope
sarl
testb
push
cmp
insl
lea
dec
mov
dec
pop
and
loop
stos
sub
push
add
pop
mov
pop
dec
ret
jbe
mov
mov
aaa
xchg
sbb
cmc
aaa
ret
lods
jg
mov
dec
iret
sub
data16
mov
sti
lret
add
test
fiadds
mov
xor
pop
adc
pop
add
sbbl
cmp
out
lock
aaa
repz
je
mov
xor
mov
test
mov
or
sub
pop
xchg
loop
out
mov
xchg
imul
js
dec
ret
das
cmp
cmp
xlat
push
dec
mov
mov
das
pop
and
rcll
rorb
fildl
inc
icebp
inc
add
push
gs
add
leave
leave
imul
xor
push
jbe
or
inc
loopne
add
cmp
or
jo
cltd
cmp
daa
mov
jl
or
ret
jae
jb
jmp
insl
mov
lahf
mov
shlb
sbb
jl
mov
test
push
dec
pop
mov
sub
inc
repz
fcomi
fwait
mov
sub
adc
mov
mov
inc
fisubrs
out
gs
pop
pop
movsb
xchg
dec
cmpb
sbb
in
shr
lods
sub
aad
loopne
xor
or
xor
lcall
lahf
sub
adc
dec
fs
xchg
push
mov
or
rclb
pop
push
xor
sub
dec
fs
and
lret
int3
cli
or
xchg
mov
arpl
out
stos
xchg
stc
sbb
fstpl
in
mov
inc
jl
inc
cmp
sti
dec
fimull
pop
dec
add
fcomps
push
or
nop
setge
pop
pop
inc
xchg
or
sti
jns
push
xor
mov
stos
add
addl
mov
ja
inc
ficomps
jp
dec
push
mov
scas
add
inc
sub
add
jmp
dec
sarb
ss
sbb
push
jp
cmp
add
dec
dec
push
lret
add
dec
mov
mov
cmp
fmull
push
sbb
sub
out
call
mov
out
dec
and
cmp
ret
mov
lret
arpl
xor
in
xchg
add
adc
lea
and
and
jecxz
mov
popf
lcall
adc
add
dec
test
xchg
cmp
dec
stos
lret
std
xchg
cmpsl
jge
pusha
pop
stc
fnstenv
ret
mov
sub
lahf
jg
aas
aam
and
sub
pop
add
aaa
stc
sub
inc
out
sub
ljmp
sbb
ret
lahf
test
arpl
shll
ljmp
outsl
xchg
in
addr16
fdivrs
pop
jg
ja
mov
and
mov
sub
xor
clc
xor
sub
in
roll
sub
add
pop
popf
imul
movsl
stc
scas
or
shlb
lods
lods
popf
and
jne
mov
push
sub
and
popf
add
testb
mov
in
xchg
ljmp
lock
cpuid
pop
stc
stc
and
roll
xchg
lods
xchg
pop
hlt
jbe
div
jle
std
mov
dec
rol
lods
push
lret
test
int3
cmpl
inc
enter
aam
push
scas
scas
add
fadds
hlt
mov
and
adc
dec
add
shl
adc
push
in
inc
mov
cmp
mov
or
jb
fcoml
push
bound
jge
jecxz
mov
hlt
stos
and
decb
mov
pop
int
addr16
daa
push
stos
pop
sub
sub
mov
mov
js
or
fldt
int
mov
fucomi
imul
xchg
push
clc
shlb
sub
lret
mov
fldl
dec
xor
cwtl
adc
je
or
cmp
das
js
pop
mov
pop
adc
repnz
aaa
js
sahf
lret
mov
mov
cld
add
std
xchg
shrl
lods
popa
jno
addr16
lods
sahf
andb
push
in
sbb
push
push
outsb
push
mov
jmp
out
sbb
dec
adc
mov
mov
in
push
sbb
sbb
mov
pop
and
mov
push
mov
xchg
xor
inc
fnstenv
dec
in
cmc
dec
pop
aad
dec
loopne
roll
xchg
jbe
or
or
lods
out
mov
pop
adc
dec
push
out
pop
addr16
out
outsl
pop
inc
mov
pop
pushf
aaa
dec
data16
jno
jecxz
xchg
mov
push
push
lds
adc
scas
mov
movsb
mov
pop
dec
inc
js
roll
pop
xor
push
adc
inc
or
fs
test
push
hlt
daa
jne
sarb
dec
hlt
rolb
pop
mulb
xchg
push
enter
sub
xchg
imul
mov
mov
jo
jle
fcoms
inc
sub
lahf
jae
popf
xor
data16
mov
inc
pop
stos
shr
pop
jl
cmpsb
out
movmskps
jp
add
dec
hlt
push
xorl
mov
add
inc
sub
inc
inc
pop
pusha
mulps
out
push
jns
shlb
mov
ret
and
and
jle
rcr
fidivs
push
out
pusha
decl
loope
inc
jmp
sbbl
fldcw
pop
testl
outsl
sbb
rolb
sbb
cmp
sarl
or
push
mov
scas
mov
xchg
cmpsb
insl
mov
loope
cmpsb
or
mov
ficomps
sub
add
clc
fnstsw
mov
jno
cmp
and
sbb
dec
popa
push
push
inc
mov
fnsave
gs
in
inc
insb
lcall
ret
pop
rcll
push
scas
jge
call
fsubrs
repz
rorb
lret
adc
rcrl
lea
mov
xchg
ror
inc
xchg
inc
jb
shll
jno
sti
loopne
lcall
mov
adc
std
repz
inc
add
adc
mov
sub
lods
push
mov
mov
jae
enter
out
lahf
in
mov
inc
ja
fcoms
int
adc
push
mov
xchg
sub
inc
cltd
outsl
mov
mov
push
dec
or
outsb
sbb
mov
mov
jg
out
xchg
mov
fsqrt
ror
xor
jnp
jl
shll
mov
mov
inc
div
pop
fsts
ljmp
in
bound
mov
cmc
es
in
cmc
jmp
imul
pop
pop
sub
fsubrs
cs
ret
mov
jns
ret
push
jecxz
and
xchg
inc
pop
test
lods
push
pop
pop
scas
mov
sbb
inc
hlt
sarl
out
cmc
push
pop
cmc
arpl
xorb
or
cltd
sbb
push
rol
jno
mov
mov
pop
sbb
hlt
push
push
movsb
jmp
push
xchg
dec
shlb
adc
sbb
arpl
int3
pop
push
xchg
sbb
mov
push
dec
cmpsb
push
std
push
inc
xor
jns
iret
or
bound
push
adc
xchg
sub
dec
gs
mov
mov
sti
sahf
or
jecxz
stos
jmp
std
jno
shrl
dec
test
bound
add
dec
lock
les
pop
jns
movsl
mov
sbb
int3
sbb
ja
movb
fsubs
pop
add
jmp
mov
arpl
shl
clc
out
cs
push
loope
pop
dec
xchg
jns
andb
sarb
push
sahf
sub
jl
sub
ret
push
not
or
pop
enter
jo
sub
pop
adc
lds
sbb
aaa
test
add
and
dec
jge
mov
repz
mov
pop
cld
enter
sahf
lods
pop
mov
jne
xchg
dec
mov
jb
jb
cmc
dec
sub
xor
add
xor
push
add
bound
jbe
adc
pop
cmpsb
mov
scas
sahf
sti
dec
xchg
pop
rorl
jge
xchg
mov
add
adc
xchg
xor
dec
pop
mov
out
mov
icebp
sbb
cld
leave
add
push
sbb
call
fdivl
ljmp
jmp
int3
cwtl
ret
int3
mov
add
push
and
sub
into
or
pushf
push
push
rorb
push
lea
mov
mull
xor
lea
sbb
xor
stc
jmp
push
out
mov
push
adc
lret
fistpl
hlt
mov
stos
icebp
adc
mov
xchg
adc
ret
add
sbb
cmp
das
dec
cltd
jo
fildll
sub
or
push
mov
push
adc
mov
jae
sub
fsubs
cmpsb
mov
aaa
and
pop
mov
jecxz
arpl
mov
in
dec
pop
xchg
pop
cld
cmp
hlt
je
leave
push
xor
rcrl
nop
inc
lcall
mov
daa
add
and
xor
jg
sbb
xchg
push
je
imul
stos
push
lahf
add
mov
dec
sub
or
push
rcll
sub
pop
mov
into
orb
int3
stc
inc
push
ds
out
mov
ret
rol
push
cli
jp
jecxz
scas
aam
push
xchg
jp
pop
mov
dec
and
test
dec
sub
sub
jb
cli
dec
test
mov
pushl
stos
push
sub
cmpsb
xor
out
mov
push
adc
mov
push
jbe
leave
push
mov
xor
adc
fsubl
repz
mov
add
aam
xor
push
and
cmp
pop
mov
jecxz
xchg
xchg
xchg
out
jmp
cmc
fadds
gs
push
fidivs
loop
sbbb
notb
ret
or
push
pop
dec
mov
stc
shlb
stc
pop
test
lret
loopne
inc
push
std
stos
pop
cmp
inc
adc
dec
loopne
inc
mov
adc
aas
sahf
aad
jb
daa
add
add
lds
insb
mov
mov
pusha
sbb
outsl
xchg
adc
push
cli
ret
push
ret
and
shlb
pop
test
jns
or
mov
mov
fbstp
inc
lahf
xor
sbb
pop
jbe
dec
sub
pop
call
cmp
call
add
mov
push
xchg
lret
cltd
decl
repnz
xchg
enter
sbb
repz
call
xchg
push
out
mov
sub
lea
insb
sbbb
popf
sbb
or
popf
loop
mov
imul
sbb
enter
pop
push
cmp
arpl
pop
fldenv
inc
icebp
cmp
push
mov
xchg
jp
jge
pop
xchg
subb
jl
sbb
addr16
aam
aas
sarb
sahf
ficomps
adc
or
jecxz
ljmp
jge
and
je
out
movsb
insl
push
das
rcrl
push
push
out
mov
adcb
sbb
mov
int
decl
sbb
call
rcrb
cmp
or
or
xlat
aad
shr
jge
xlat
cld
pushf
popf
pop
lahf
adc
cmpsb
repnz
or
or
sbb
aaa
mov
repnz
dec
rcl
inc
mov
cmpsb
mov
pop
arpl
das
out
mov
xor
xor
cmp
fbstp
and
ljmp
outsl
mov
fstl
sub
ret
fcomip
dec
jmp
repnz
and
movnti
cmp
movsb
gs
nop
outsl
das
adc
stos
or
and
push
into
and
and
add
dec
or
jns
loope
stc
repz
mov
dec
mov
sbb
pop
pop
arpl
loope
je
xor
out
shl
and
mov
fs
rclb
mov
les
call
repz
mov
leave
and
jge
loope
outsb
test
lods
mov
rcrl
mov
pop
xchg
fcomps
or
cwtl
stc
dec
cmpsl
out
sbb
fcomi
fdivs
sub
inc
pushf
pop
lcall
dec
mov
lea
mov
in
addb
lret
mov
mov
or
xchg
push
mov
lret
addb
lcall
dec
pop
lods
sbb
data16
xor
lods
fst
gs
mov
fld
sub
int
ds
mov
in
das
pop
shlb
rorb
pop
jo
add
cmovs
mov
fimuls
les
push
iret
xchg
aas
hlt
ret
daa
sbb
sbb
sub
clc
dec
ljmp
push
mov
cmp
sub
add
xchg
ljmp
mov
testl
idivl
lods
mov
pop
outsb
rolb
xlat
cmp
xchg
sar
sbb
dec
repz
push
cmpsl
sbb
sub
jl
jns
lea
mov
dec
pop
xchg
pand
adc
xor
lods
ror
mov
mov
lahf
sbb
jno
or
push
enter
dec
pusha
mov
arpl
cmp
test
cmp
sti
adc
adc
push
dec
sahf
aas
and
and
mov
xchg
add
mov
inc
push
add
decl
and
call
push
lock
and
cld
call
stos
call
cmc
movsl
dec
cmc
or
and
inc
mov
sbb
mov
push
cmpb
lahf
inc
sub
adc
das
xchg
push
stos
sti
nop
call
test
popf
stos
mov
mov
xor
dec
dec
jb
clc
cld
xor
and
icebp
int3
in
inc
test
idivb
mov
movsl
cwtl
dec
shrb
js
popf
fiaddl
jmp
adc
xchg
xlat
or
cmc
pop
test
xchg
loop
fnstsw
adc
and
loop
stos
xchg
iret
mov
push
pop
xor
fiaddl
lea
mov
std
and
in
inc
cltd
arpl
mov
out
test
inc
jns
jg
inc
mov
or
hlt
pop
pusha
sahf
inc
or
in
lea
insb
into
inc
jle
imul
loop
fldl
fdivl
jg
outsb
adc
dec
push
dec
ja
jno
mov
xchg
mov
sub
and
add
nop
adc
repz
xchg
daa
cmp
pop
lcall
xchg
andl
pusha
xchg
div
xor
sub
lds
outsl
pop
jg
xlat
cwtl
and
mov
cmpl
data16
ja
adc
cld
push
stos
sub
hlt
mov
mov
outsb
and
stc
inc
sub
mov
cld
test
inc
pop
lret
mov
shlb
pusha
mov
mov
test
add
jnp
jbe
xor
repnz
test
pop
mov
nop
dec
mov
repz
xchg
cmp
dec
add
push
sub
or
or
adc
shlb
clc
pop
cmc
mov
sarl
xor
push
jp
inc
nop
pop
mov
pop
enter
daa
rol
sub
dec
adc
clc
or
dec
jl
inc
xlat
outsb
repz
push
outsb
mov
and
lret
cmpl
add
lods
push
mov
insb
and
into
pop
dec
push
outsb
and
rcll
bnd
daa
jmp
pop
adc
jmp
stc
and
inc
aam
xchg
adc
aam
test
mov
add
jnp
adc
cmp
or
and
sbb
loopne
lds
js
xor
mov
lea
cmpsb
jle
inc
out
outsb
sub
cmp
into
aaa
imul
xor
lods
pop
cmpsl
dec
or
insb
mov
das
fdiv
loop
mov
arpl
lea
aad
mov
push
mov
inc
lds
int3
xchg
cmpsb
dec
shll
addb
lcall
rclb
lods
into
mov
cmp
jge
xlat
fisttps
pop
cmp
cmp
mov
xchg
ret
cwtl
pop
out
or
mov
push
cwtl
movsl
hlt
mov
fildll
lea
dec
push
insl
dec
subb
test
jno
mov
and
dec
push
xchg
push
ret
cld
jmp
xchg
dec
adc
in
cltd
insb
lds
iret
fwait
iret
dec
add
mov
cli
aad
add
ret
out
and
or
icebp
stos
jo
lods
lret
or
mov
in
adc
fldenv
cmpsl
popf
push
lds
insl
stos
mov
orb
mov
jnp
and
xor
flds
sbb
lods
xchg
dec
xchg
mov
adc
sub
hlt
xor
mov
pusha
pop
pop
jno
push
dec
cmp
cmp
test
sbb
fidivrs
sbb
cwtl
cltd
scas
xor
sub
push
pop
xchg
xchg
and
xchg
mov
sbb
call
rcrl
fucomi
clc
repz
loope
push
in
notb
test
dec
cmpsb
mov
decb
or
xor
fstpl
cmp
push
sbb
mov
mov
fadds
in
mov
jns
sub
shrb
mov
cmp
sub
mov
push
jae
inc
aas
lret
cmp
and
popf
sahf
inc
jp
leave
jo
testb
pop
scas
repnz
jb
and
cmp
inc
in
pop
add
mov
jno
outsl
insb
push
sti
inc
pop
pop
inc
mov
mov
xor
int
cltd
rorb
std
adc
jo
xorb
popa
xor
test
std
jbe
dec
cmpsb
add
mov
pop
rcrb
out
sub
push
dec
cwtl
pop
insb
inc
adcl
cmp
mov
xor
pshufw
enter
fidivl
xchg
jno
sub
sub
xchg
mov
out
loopne
in
xchg
mov
jecxz
xor
js
mov
inc
hlt
out
lret
push
out
or
add
and
ret
mov
sbb
sarl
lods
push
dec
sbb
mov
jb
pop
lods
pop
sti
nop
ret
mov
cmp
std
scas
cmp
xor
xorb
cltd
int3
xor
fdivrs
mov
in
jg
and
iret
mov
out
jmp
cmp
arpl
push
and
div
cwtl
ret
lea
popa
sbb
xor
int3
push
push
sbb
stos
jne
shl
jg
sub
xchg
das
dec
add
dec
clc
aam
nop
jno
bound
mov
lret
stos
les
lret
cli
scas
xchg
jae
movb
stos
jp
pushf
pop
pop
outsb
enter
std
pop
push
pop
popa
mov
jg
test
xchg
std
js
push
scas
fistpll
cmp
adc
aad
xchg
or
and
addb
test
push
pop
popf
jl
add
movd
test
adc
in
sub
aas
pop
mov
ljmp
leave
adc
cmp
enter
add
xor
and
sahf
sub
jbe
add
xor
and
pop
jl
mov
enter
vunpcklps
inc
mov
adc
xchg
jmp
cmp
add
loope
lods
cmp
lret
popf
cltd
cmpsb
outsl
mov
push
gs
aad
inc
cmpsb
fstp
adc
ret
gs
cwtl
xchg
cltd
and
ret
cmp
jge
xchg
pop
jae
test
mov
js
inc
stos
mov
mov
popa
out
mov
add
sub
sub
shl
lret
xor
push
mov
mov
insb
xchg
pop
nop
sbb
das
lock
lahf
pop
jns
std
or
dec
xchg
jb
push
out
cs
insl
inc
push
xor
xor
xchg
mov
pop
pop
in
roll
mov
mov
out
neg
inc
sbb
arpl
pop
lcall
cld
sbb
or
icebp
or
mov
jmp
mov
and
push
or
pop
inc
xchg
inc
fnstcw
mov
add
js
xchg
mov
lds
mov
sub
cmpsb
fdivp
cmovns
mov
sub
sub
scas
arpl
scas
lahf
xchg
push
outsb
in
jge
sub
stos
repz
dec
dec
mov
and
push
mov
push
lods
lret
mov
mov
xor
es
out
sarl
or
push
in
jns
mov
lds
dec
lahf
sub
mov
xor
out
push
mov
pop
lds
insl
push
xchg
cli
loopne
sbb
cltd
enter
jae
sub
lret
bound
sahf
mov
inc
mov
sbb
insl
mov
ret
addr16
lock
xor
add
dec
movl
iret
fidivrs
sub
mov
jle
in
fcmovbe
in
addb
pop
pop
int
das
aas
arpl
sub
jnp
add
adc
xor
or
mov
dec
fnsave
cli
je
ficoms
push
mov
push
les
add
xchg
arpl
sub
aaa
std
inc
mov
dec
inc
leave
enter
jmp
es
mov
pop
ja
ss
xchg
fnsave
jecxz
pop
jge
inc
ss
lock
repz
dec
dec
xor
sub
cmovg
push
jne
xor
jg
jecxz
call
mov
shll
push
cmpsl
push
push
pushf
cwtl
aam
ret
push
repz
out
inc
stos
popa
sarl
jle
jmp
xchg
cmpl
mov
adc
iret
pop
xor
ljmp
xchg
mov
adcb
es
cmc
mov
push
pop
or
jp
cmpsb
in
mov
jmp
mov
mov
push
mov
sub
push
mov
jl
test
das
call
add
cli
cmc
outsl
adc
cmp
aam
dec
scas
adcl
pop
add
lea
mov
ja
jge
add
pusha
mov
mov
mov
fistpl
lea
imull
pop
data16
movsb
mov
cmp
dec
roll
cmp
mov
sbb
loopne
mov
enter
in
xor
fidivs
xchg
out
inc
pop
push
into
jl
les
or
push
add
clc
cli
mov
adc
stc
pop
xchg
dec
pop
pop
dec
mov
outsb
movsl
xor
add
push
mov
jl
in
lods
push
push
insl
sbb
dec
pushf
xchg
sarl
mov
sub
pop
jns
lods
mov
jmp
mov
out
mov
xchg
push
and
xchg
daa
dec
stc
xchg
mov
push
sbb
pusha
cli
cmp
stos
rolb
cli
adc
pop
push
test
and
push
insl
cmp
cmpsb
lret
pop
xor
in
fnstsw
arpl
sub
repnz
jnp
xchg
enter
pop
adc
add
dec
les
insl
out
cmc
ja
inc
negl
push
test
insb
js
fsub
bound
jo
pop
xchg
mov
pusha
adc
cs
add
call
std
enter
cmp
xchg
and
inc
xchg
mov
sbb
pop
scas
sbb
mov
sbb
ror
and
mov
sbb
lahf
inc
fiadds
std
mov
fadd
xor
add
xor
fimuls
xchg
add
xchg
adc
mov
jo
fidivrs
or
mov
out
mov
inc
mov
ja
cmp
fists
sub
or
inc
sub
int3
pushf
and
jne
adc
adc
lock
dec
cmp
orb
fimuls
push
dec
fsubr
and
jno
jmp
stc
pushf
sub
in
imul
pushf
cmp
add
add
or
adc
jb
sub
jle
pop
sti
dec
iret
push
subl
push
cs
fs
inc
stos
push
aas
mov
loop
cs
aam
in
loopne
int
mov
sarl
mov
sbb
clc
rorb
sub
mov
adc
xchg
and
daa
pop
sub
or
xor
pop
cmp
and
mov
mov
pop
adc
mov
push
cmp
add
or
mov
sub
scas
xchg
and
inc
dec
mov
jb
mov
and
dec
and
jp
mov
cmp
orl
add
rclb
fs
inc
andl
jecxz
xor
xchg
push
lds
fimull
scas
push
insl
rcrb
scas
orl
mov
and
mul
ss
cmpsb
pusha
es
or
lds
jb
int3
pop
mov
gs
inc
jb
inc
in
push
sub
pop
cltd
push
sbb
shl
or
cmp
mov
int
gs
adc
dec
mov
pop
fisubl
cld
stos
push
mov
test
mov
je
lods
cwtl
mov
cs
push
mov
sbb
cmp
gs
addr16
push
imul
pushf
movsb
cltd
addr16
test
shlb
jnp
cmc
fsub
mov
pop
push
mov
xchg
rcl
mov
dec
and
sub
mov
aas
call
jp
jae
cmp
sub
sub
push
mov
int3
and
xlat
adc
adc
jb
ja
inc
push
lods
mov
into
shrb
rcr
fdivrp
dec
adc
into
xor
pop
jle
ss
sahf
add
fs
adc
pusha
sub
cmp
cmp
das
jae
add
dec
lret
mov
test
sbbb
inc
pop
xchg
xchg
push
push
mov
mov
mov
jns
jle
sbb
and
mov
repnz
fcom
push
push
xor
xor
aad
and
sbb
xchg
pop
xchg
mov
dec
das
cmc
jns
scas
jno
test
adc
cmp
icebp
fwait
lds
add
test
lret
into
ds
xor
mov
jg
jo
inc
in
mov
mov
lahf
xchg
mov
movsl
mov
mov
lods
adc
inc
dec
ss
fwait
push
into
ficompl
adc
test
adcb
and
add
mov
and
cld
scas
dec
pop
sbb
fsts
cmp
insl
mov
xor
jo
and
leave
sub
cmp
lods
mov
out
andb
ret
dec
lret
cmpsl
pop
es
pop
inc
mov
test
xor
xlat
pop
xchg
cbtw
adc
adc
push
ss
hlt
xorb
jg
inc
jmp
add
mov
aaa
int3
aas
push
jl
lds
insl
ret
cmp
push
iret
add
sarb
pop
sub
cmp
test
or
clc
pop
subl
cmp
cwtl
or
xchg
add
push
or
adc
mov
mov
xchg
lods
pop
jmp
popa
and
rcrl
lahf
inc
add
ss
lret
aas
lds
xchg
mov
mov
imulb
popf
movsl
push
and
pop
adc
leave
test
addb
inc
stos
in
mov
sub
jg
pop
inc
repnz
test
leave
repnz
fildl
mov
cmc
jmp
mov
or
outsb
sti
int
repnz
rcrb
xor
lret
sub
shrl
push
fldl
lahf
jnp
mov
xor
pushf
dec
arpl
push
mov
jb
add
sbb
test
lcall
jg,pn
jnp
mov
pop
xchg
out
test
dec
fs
mov
sub
das
dec
mov
push
or
add
outsb
jge
or
push
pop
pop
mov
and
aaa
push
icebp
lods
stos
les
aas
cli
push
out
cwtl
addr16
push
mov
adc
cmp
xor
psubw
lret
lods
int3
cmc
loope
fldcw
inc
lea
notb
and
push
int3
lea
pop
jo
inc
in
aaa
cmp
add
lock
adc
test
xchg
test
in
pop
mov
xlat
and
inc
pop
mov
das
sbb
xchg
fistpl
mov
lret
scas
cmc
ljmp
das
or
and
bound
mov
sbb
mov
mov
insl
add
mov
scas
es
mov
cmc
mov
fcomps
pop
mov
sub
loop
xor
test
pushf
pop
xor
cmp
push
mov
in
mov
mulb
mov
and
movsl
xchg
add
jnp
mov
je
aas
dec
rcll
popf
mov
adc
iret
inc
fcoms
cmc
rorb
popa
and
mov
add
out
popa
lods
sti
ds
repz
xchg
and
jne
cli
sti
xlat
int
andl
fdivrl
fstps
xor
jecxz
jo
lods
adc
mov
jmp
arpl
pop
jmp
sahf
popf
aas
and
testl
push
pop
mov
ror
dec
inc
adc
push
pop
pop
cmp
cmc
aam
add
pop
test
aas
jnp
rcr
lock
xchg
push
and
int
psrad
inc
pop
test
enter
shl
dec
cltd
pop
adc
xor
sub
sbb
popf
and
jmp
mov
cli
shld
push
daa
cmp
xor
jg
das
inc
or
push
inc
push
dec
ret
sbb
cmp
mov
add
and
mov
sub
sbb
mov
push
push
mul
inc
xor
or
dec
dec
adc
add
movsl
fwait
mov
hlt
jo
jae
add
mov
outsl
test
out
push
xor
aad
and
mov
mov
pop
cli
pop
cmp
push
in
add
mov
ja
add
pop
adc
xchg
popa
rolb
pusha
subl
dec
add
cli
ljmp
xor
mov
cmp
push
arpl
aaa
jo
cs
xchg
outsb
movsl
movsb
repz
or
outsl
xchg
aad
repnz
dec
loopne
push
jp
movsb
out
cmp
push
mov
push
dec
pop
jnp
cmp
jl
fimull
scas
fwait
js
shlb
jnp
and
shrb
mov
xchg
inc
fistpll
cmp
ds
mov
nop
xor
jae
repnz
cmp
dec
mov
mov
rcll
lock
push
push
lcall
push
and
mov
xlat
les
test
and
mull
int3
mov
inc
and
xchg
outsb
pop
fsubs
daa
pop
pop
ret
pop
adc
adc
enter
leave
mov
inc
xor
addb
dec
jne
jb
sub
ljmp
lret
and
sti
xorb
push
enter
and
addr16
mov
stc
cli
pop
or
cld
into
popf
imul
jl
inc
jns
lret
lret
jl
loopne
enter
lock
nop
push
inc
insb
cmp
nop
pop
pop
sbb
pop
adc
lock
cmp
ss
pop
cmp
jecxz
insb
cs
sti
mov
dec
testb
cs
lcall
sub
add
push
adc
insl
cmp
orb
ljmp
loopne,pt
movsb
int
pusha
xchg
lahf
fbld
jmp
inc
xchg
jae
int
jns
rclb
dec
ret
cmp
dec
xchg
or
push
sbb
popf
push
push
jne
dec
mov
adc
adc
adc
push
stos
pop
movsl
mov
mov
sub
roll
pop
fs
in
aas
hlt
fiadds
inc
fists
push
add
orl
ljmp
scas
push
cmp
sub
pushf
jecxz
xchg
sbb
sub
cmpsb
jno
push
test
push
mov
sti
testb
es
fwait
pop
les
xor
out
ficoml
loope
jbe
pop
sbb
mov
mov
xchg
cli
pop
inc
popa
insl
pop
mov
adc
iret
int
jmp
jne
mov
ja
aaa
icebp
daa
xlat
cmp
xchg
xor
add
push
mov
sahf
xor
insb
insb
mov
dec
inc
inc
leave
imul
leave
cltd
repz
cmp
mov
cmp
in
push
lahf
mov
sub
add
and
inc
int
sbb
adc
or
mov
jp
and
ficomps
xchg
push
cld
jbe
ret
fidivl
and
lret
adc
addl
mov
lea
mov
cmp
and
pop
xor
xchg
ds
sbb
flds
lods
inc
cmp
push
lcall
sub
pop
fstpt
inc
inc
leave
sub
sub
pop
pop
mov
xor
cmp
ja
jae
cltd
mov
inc
ds
imul
test
xchg
pop
dec
push
cli
add
xorl
dec
push
pop
or
shr
cli
xlat
mov
or
mov
sub
pop
pop
mov
hlt
inc
call
and
cmp
je
dec
push
hlt
test
adc
adc
bound
cmp
xchg
mov
aam
imul
mov
fadds
je
sub
aaa
aad
push
enter
xchg
int
jne
mov
inc
pop
cmp
fists
adc
jae
rcll
mov
jns
jnp
dec
jns
jg
pop
std
enter
or
sahf
push
pop
adc
es
adc
dec
sub
jmp
dec
imull
xor
xor
popa
xchg
push
cmpsb
add
mov
in
fsubrl
les
fwait
mov
out
lcall
ror
and
push
cmp
inc
insl
les
es
loop
xlat
push
mov
lock
cmp
scas
dec
sbbb
lods
sbbl
or
jp
popa
inc
sbb
cmp
scas
pop
shll
mov
movsl
adc
mov
and
jecxz
clc
aas
ds
adc
daa
out
outsl
movsl
pop
sbb
sbb
push
lods
and
out
xchg
sbb
mov
ljmp
inc
lret
jae
pusha
xor
pop
mov
cmp
cltd
add
popa
dec
popf
inc
jb
test
loope
push
jge
add
inc
fs
cltd
lods
iret
cwtl
popa
sub
inc
test
jp
decl
mov
fcmovbe
xchg
shlb
test
or
stc
pop
sbb
dec
iret
xchg
stc
jg
xlat
imul
out
fmuls
ret
xor
jp
aas
jecxz
sub
pop
mov
adc
out
cwtl
mov
sbb
push
aaa
push
inc
xor
rol
mov
sbb
sub
insb
adc
dec
outsl
jge
cmpsl
xchg
jns
arpl
aam
push
mov
pop
jo
dec
xchg
sbb
mov
movsl
das
sub
jmp
lahf
mov
int3
cmp
fistpl
sahf
mov
pop
aam
cmp
in
lods
cs
sbb
cmp
and
pusha
and
push
add
scas
xchg
xor
dec
adc
lea
sub
cmp
outsl
dec
jl
shrl
ret
mov
hlt
rcrl
stos
popa
xchg
test
aas
addb
inc
mov
sbb
test
jmp
clc
sti
xor
sub
dec
ss
xor
sbb
cmp
push
pushf
inc
cmp
sub
push
pop
pop
js
jmp
mov
pop
xchg
sahf
cmp
imul
popf
mov
lret
xchg
out
lock
mov
inc
sub
imul
stos
mov
fwait
scas
and
xchg
lea
stos
dec
imul
cs
pop
adc
adc
push
aaa
insb
dec
jo
lock
dec
adc
mov
xchg
xchg
inc
popa
addr16
or
iret
dec
jo
testl
sbb
imul
xchg
push
cmp
cmp
adc
gs
mov
inc
outsb
cwtl
xchg
dec
test
cmc
pop
out
nop
in
cmp
int
cltd
adc
mov
add
jae
push
aaa
jo
mov
xchg
faddl
mov
movsb
pop
sbb
fldt
fs
mov
xchg
jns
das
daa
cmp
xlat
rcrb
dec
sahf
xchg
xchg
mov
lret
mov
insb
bound
test
mov
xchg
xchg
or
fs
push
adc
movsb
popa
sub
jle
fmull
icebp
insl
mov
jp
sahf
jae
js
or
sbb
gs
and
push
cmp
daa
jo
lds
push
cwtl
cmp
or
outsl
and
mov
mov
repz
notb
fnsave
add
jae
adc
test
loope
jg
sbb
and
aam
jbe
jecxz
arpl
and
xchg
xchg
sub
mov
movsb
pop
xchg
and
add
sbb
xor
jo
mov
pushf
and
cld
arpl
adc
ret
add
or
xchg
dec
adcb
mov
fldenv
xchg
add
arpl
ret
dec
clc
cli
adc
sbb
fldl
cltd
fstl
jo
push
lret
pop
popf
sbb
adc
hlt
repz
pushf
dec
repz
sbb
mov
pmaddwd
adc
pop
scas
pop
mov
pop
adc
je
sti
sbb
dec
aam
das
shlb
aaa
cmp
idivl
push
push
loop
es
xchg
pop
mov
or
fninit
cmp
cwtl
xor
adc
xor
mov
test
xchg
push
test
pop
dec
and
sti
cmp
fsubp
push
cld
ret
pusha
mov
and
lahf
pop
mov
dec
cltd
lcall
outsb
stos
pop
mov
xchg
or
jl
aad
js
and
ret
popf
out
sub
sbb
pop
xlat
dec
inc
add
pop
ret
clc
lcallw
mov
pop
or
loopne
mov
and
daa
sbb
xchg
pop
inc
sahf
push
jne
das
cmp
stos
clc
into
add
pop
adc
fs
xchg
xor
ret
test
call
push
mov
bound
lods
imul
mov
test
mov
daa
pop
mov
jle
inc
and
repnz
mov
testb
sbb
xchg
repnz
push
jle
fdivrl
lods
cmp
push
in
pop
xor
push
pop
push
xlat
shll
loopne
xor
cmc
pop
loopne
pop
in
push
cs
lock
rcrl
pop
lea
push
add
lea
stc
mov
push
cltd
stos
incb
popa
mov
push
cmp
cmp
lcall
add
outsb
jnp
orl
jle
pop
sbb
jecxz
sahf
xchg
cli
xor
aam
jge
push
in
fwait
dec
mov
pop
adc
cwtl
ror
icebp
jecxz
imul
dec
cmp
inc
jb
loopne
imul
dec
lods
cmp
imulb
mov
shll
insb
inc
mov
fcomps
sbb
dec
mov
xchg
mov
sbb
out
lods
ret
in
xchg
dec
push
push
adc
cmp
sub
scas
ja
cmpsl
cmp
mov
imul
cmp
cld
inc
dec
mov
imul
hlt
leave
or
test
mov
mov
rcrl
cmc
sahf
nop
aaa
stos
shlb
mov
into
inc
andl
adc
movsl
sub
hlt
sbb
lret
xchg
ja
xchg
pushf
out
inc
adc
dec
cwtl
fwait
jle
mov
lea
ss
mov
xchg
sbb
pusha
out
testl
in
jnp
dec
dec
vcmpss
into
fnsave
jecxz
stos
ss
or
xor
or
cmp
loope
lds
cmp
movsb
mov
imul
push
mov
pop
push
ret
inc
pop
inc
fcoms
sbb
push
jbe
fmul
dec
shrb
aam
ds
int
sbb
mov
or
mov
xchg
mov
xchg
push
in
shrb
xchg
xchg
mov
and
push
movsl
je
pusha
mov
in
les
sub
push
sbb
mov
jnp
icebp
stc
push
leave
dec
mov
jns
or
lret
xor
push
loop
mov
xor
iret
or
inc
pop
mov
adc
dec
faddl
popf
mov
jnp
fnstsw
mov
mov
xchg
dec
test
sbb
pusha
mov
bound
push
add
sub
inc
dec
movsl
popf
repnz
pop
and
mov
jp
sarb
fdivl
xchg
cmp
mov
rcll
iret
lods
adc
cmp
ss
lods
xlat
fnsave
xchg
push
fucomi
cmp
ds
and
push
inc
imul
scas
fwait
outsl
dec
movsb
popf
mov
jae
sub
inc
jmp
lcall
pop
dec
adc
daa
jb
xchg
out
mov
movsb
adc
xchg
into
push
xchg
hlt
jo
jne
rcrl
inc
jmp
push
push
xchg
pop
repnz
and
jmp
dec
adc
cmp
mov
mov
xor
ret
pop
mov
lock
mov
cmp
inc
inc
mov
cmp
adc
xor
std
test
es
lcall
outsb
lret
mov
mov
dec
pushf
jl
jge
dec
mov
pop
add
xchg
outsl
mov
jae
sub
repz
movsl
scas
xor
aad
xchg
cltd
out
push
loope
or
sahf
aam
cmp
mov
mov
rcrb
push
testl
sarl
jae
jns
xor
pop
arpl
dec
gs
and
cmp
sub
jo
iret
mov
sbb
mov
out
iret
jg
inc
and
hlt
pusha
pop
sbbl
dec
mov
inc
test
push
sub
repz
xchg
leave
int
mov
test
sub
cmp
dec
xchg
out
adc
int3
stos
cmpl
pop
pop
jo
mov
sub
jg
out
mov
and
frstor
mov
mov
aam
pop
jbe
jmp
push
pop
icebp
push
inc
mov
and
daa
test
subl
lock
or
js
fs
fcmovb
xchg
iret
in
shll
pushf
inc
mov
jno
push
icebp
arpl
xchg
push
fistps
push
into
xor
and
shl
insb
jge
popa
sti
xor
inc
inc
jo
pop
adc
je
pop
jns
mov
es
pushf
xchg
dec
mov
movsb
daa
fisttpll
add
mov
adc
sti
push
ret
fst
movsl
sub
sahf
outsb
js
test
fidivs
dec
scas
out
int3
int
mov
int
add
xor
jnp
pop
xor
xchg
pop
outsb
or
ljmp
movsl
sub
pop
push
or
ds
jbe
push
cmp
inc
inc
sub
loopne
push
mov
repz
cmp
mov
ljmp
and
xchg
cmp
inc
popf
ret
jbe
icebp
outsl
insb
lds
repz
dec
cwtl
repz
ljmp
xchg
mov
sarl
in
and
xrelease
and
mov
aam
scas
jno
jno
inc
inc
aam
out
mov
pop
fldl
push
mov
je
cmpsb
fwait
dec
pop
cmpsb
pop
cmp
lret
cmpsb
mov
lret
mov
xchg
cmp
aaa
fs
mov
out
daa
fidivrl
add
sbb
jmp
loopne
mov
push
shrb
cmpsb
mov
push
clc
mov
out
lahf
mov
aad
sbb
jbe
push
test
mov
mov
xor
mov
mov
xchg
shlb
lret
sbb
popf
jle
xor
fs
pusha
cmp
testl
xor
xor
insb
xchg
notl
pop
mov
hlt
orb
inc
out
push
pop
call
rorl
out
inc
xchg
addr16
push
and
lods
sub
and
and
mov
loop
dec
push
sbb
or
jmp
inc
xlat
mov
testl
jecxz
push
or
xchg
push
ret
cwtl
mov
shlb
movsl
push
cmp
inc
ljmp
push
or
cmc
jns
pop
dec
dec
mov
mov
roll
stos
mov
fisttpl
jae
imul
mov
rcrb
jecxz
jp
cwtl
push
pushf
fsubp
movsb
movsl
leave
test
in
icebp
mov
mov
mov
sarl
test
pop
xchg
xchg
dec
cmpb
mov
pop
pop
or
enter
rcrl
xchg
lahf
out
dec
dec
les
jae
in
insl
adc
test
lret
mov
cwtl
or
mov
jnp
sahf
xchg
dec
pop
out
mov
out
push
cmpsl
dec
add
cmp
adc
sbb
mov
mov
xchg
stos
pop
cmp
loope
jecxz
ss
xchg
push
int3
sbb
push
enter
xchg
push
jae
repnz
mov
repnz
ljmp
adc
and
jmp
jecxz
in
lods
imul
fdivrp
movsl
mov
sbb
cmp
dec
mov
cwtl
arpl
imul
dec
mov
loope
inc
lret
inc
sub
mov
mov
inc
movsl
aam
adc
jne
in
js
xchg
outsb
cmp
jecxz
adc
stos
arpl
cmp
sub
pop
loopne
js
fs
pop
in
mov
idivb
ss
xorl
xor
stc
xchg
sbb
mov
daa
dec
scas
rcr
lods
lcall
sub
iret
cmp
push
pusha
mov
adc
sti
sbb
jl
push
xor
mov
sahf
xor
lret
pusha
shlb
cmp
dec
popa
jbe
pop
xchg
pop
fdivrl
pop
fucom
mov
dec
fldt
and
push
gs
sub
push
xor
loope
ficompl
insb
test
push
xchg
pop
mov
stc
and
fimuls
mov
fiadds
xor
jmp
aas
or
jae
ficompl
pop
lods
pop
mov
ficomps
jge
sarb
xchg
shlb
pushf
repz
inc
push
mov
push
fwait
xchg
xchg
mov
lret
pop
stc
lds
sahf
daa
dec
push
and
ds
sbb
jmp
pushf
pushf
mov
cwtl
xchg
enter
mov
ret
enter
ret
imul
push
cmc
cmp
movsb
enter
add
adc
out
mov
in
in
and
daa
xchg
loopne
push
sbb
push
jne
dec
ror
xchg
pop
daa
push
fildll
fwait
in
cmp
sbb
cltd
sbb
in
jge
inc
insl
sbb
add
int3
pop
ljmp
pop
daa
jle
mov
cmp
loopne
out
push
xor
aaa
inc
or
aaa
jbe
or
mov
add
push
push
sarl
jmp
jle
inc
pop
mov
cmpl
and
pop
push
sti
loope
mov
cwtl
mov
jg
cmp
sub
xchg
test
sahf
sub
int3
imul
pop
lock
stos
jo
push
lds
xor
pop
cmp
test
mov
dec
sub
pop
inc
ja
adc
xor
xor
sub
xor
mov
gs
jae
fstl
lcall
dec
ret
call
into
cli
mov
popa
test
out
imul
repz
popf
push
bound
pop
jge
and
hlt
jne
divl
lods
mov
cmc
into
and
insb
lret
filds
pushf
movsl
shr
xor
mov
xchg
xor
enter
pop
and
pop
pop
cld
jno
adc
jge
mov
ja
lahf
outsb
hlt
call
sub
xor
hlt
ljmp
scas
xor
es
mov
imul
mov
mov
jne
push
mov
and
jns
ss
ljmp
sub
in
push
aam
hlt
rcrb
aad
sbb
imul
mov
sub
sbb
je
out
lods
int
inc
adcl
dec
mov
ficomps
insb
mov
cmpsb
sub
sub
dec
add
hlt
aam
popa
push
clc
cmp
data16
add
psllw
or
mov
icebp
xor
mov
out
les
cmc
add
mov
mov
xor
jle
leave
jne
fiadds
pop
mov
addr16
mov
inc
rcl
mov
jns
dec
fstps
rorb
cwtl
mov
jmp
inc
mov
lret
andl
sbb
dec
sbb
mov
cmpsl
scas
loop
mov
fsubrs
or
shll
ds
and
dec
sbb
fnsave
out
sbb
lcall
pop
in
cmp
inc
in
sub
popf
dec
iret
stos
adc
pop
ljmp
sub
cmp
leave
scas
dec
xchg
lds
fcomi
mov
mov
insl
enter
lret
in
mov
icebp
loope
xchg
fisubs
pop
cli
sbb
jne
mov
mov
jae
stos
sti
mov
cmpsb
pop
ljmp
fstl
push
jb
xor
dec
mov
mov
in
push
jae
pop
mov
mov
cltd
jnp
les
dec
cltd
dec
push
xchg
je
push
clc
push
sbb
and
cwtl
arpl
sub
jbe
ret
pop
mov
and
lahf
mov
fcmovb
and
adc
lret
cmp
ja
sub
lds
pop
push
or
cmpsl
rol
ss
arpl
inc
aam
imul
aaa
and
shl
test
pop
fs
jmp
cmpl
sub
aad
scas
ret
adc
ret
jecxz
jle
out
xchg
push
push
or
mov
in
fdivrs
icebp
dec
jns
int3
push
scas
mov
mov
mov
xor
das
pop
fisttps
aas
rcrl
jle
sahf
pop
dec
into
in
xchg
sbb
xchg
lods
add
out
lcall
mov
out
imul
lret
es
insb
fdivr
mov
xor
add
push
or
and
jno
inc
push
mov
pop
jmp
out
jmp
xor
inc
and
add
cmp
out
xchg
inc
repnz
jns
pushf
pop
xchg
adc
jmp
test
adcb
sbb
in
iret
and
pop
ljmp
xchg
inc
push
cwtl
and
and
mov
out
xchg
es
fldt
insl
dec
and
in
mull
insl
xor
out
sti
aam
cmpsl
mov
pop
jne
jmp
sub
inc
push
pushf
int
push
xor
pop
lds
inc
iret
stos
outsl
aaa
mov
mov
jge
mov
aam
sbb
mov
data16
dec
cmc
push
lret
xchg
xchg
arpl
push
push
and
jbe
and
mov
inc
repnz
push
popa
xchg
cmpsl
out
rcrl
dec
rolb
cmp
push
addr16
jle
mov
sbb
mov
int3
fdivrs
inc
lods
lahf
test
mov
shll
sub
jb
rcrl
pushf
jcxz
lcall
cltd
jno
imul
or
ja
or
and
loopne
pop
imul
loop
push
test
sahf
xchg
inc
mov
lods
dec
cmp
xchg
add
fdivrl
movswl
clc
push
dec
movsb
mov
adc
and
push
mov
mov
pop
out
jecxz
xor
mov
mov
or
leave
or
mov
sub
out
sbb
es
pop
sub
fwait
sbb
clc
faddp
pop
aaa
sub
and
mov
aad
sahf
std
addr16
lods
rcrl
cmp
imul
inc
add
in
fnstcw
hlt
out
jae
inc
idivb
mov
mov
jl
in
or
push
int
sub
lcall
sarl
int
adc
test
std
pop
push
nop
lds
dec
mov
in
je
mov
and
orb
push
stos
push
pop
add
xchg
add
shl
push
js
inc
or
inc
mov
in
imul
mov
stos
js
insl
push
rcrl
cmpl
jne
bound
adc
mov
jae
enter
xchg
mov
inc
sti
mov
cmp
dec
push
mov
pop
push
cwtl
addr16
movsb
adc
cmpsl
fwait
sbb
or
iret
int
ja
clc
or
fnstenv
insl
jo
push
and
stc
mov
adc
je
in
pop
dec
out
pop
fistpl
out
pop
cmpsl
imulb
or
loopne
popa
push
sub
cmpsl
adc
test
sbb
inc
mov
iret
lds
add
insb
addl
imul
sub
je
stos
dec
inc
cmc
jb
xchg
fxch
cmc
jmp
imul
ja
mov
pop
cmp
cmpsb
and
dec
lcall
aad
fs
mov
xor
out
repnz
xlat
pop
cmpsl
jg
jle
fcoms
lret
ror
mov
leave
das
out
test
inc
add
or
xchg
push
add
roll
pop
iret
shll
shlb
mov
not
ret
lock
pop
cmpsl
mov
mov
push
xor
jmp
mov
cmpsb
jg
flds
call
fadds
lahf
mov
mov
inc
shlb
inc
stc
nop
pop
outsb
cmpsb
push
add
mov
add
mov
cs
lock
je
les
jecxz
in
inc
in
cmc
shlb
pusha
xchg
xchg
jne
ret
movsb
push
push
inc
nop
lods
cltd
call
call
sub
lods
mov
inc
stos
je
mov
adc
sbb
inc
in
mov
pusha
xor
stos
pop
add
hlt
xchg
xchg
jecxz
mov
scas
sub
or
mov
xor
add
scas
insl
lret
out
xor
das
int
adc
es
lods
decb
push
inc
cmpl
lds
ss
sub
out
pop
xchg
mov
mov
flds
in
or
and
stos
mov
dec
pop
mov
mov
out
jp
xlat
movsl
pop
pop
adc
daa
mov
insb
xor
cwtl
popf
and
jnp
ret
ret
adcb
jecxz
jl
adc
add
ficoml
xchg
mov
out
cmp
and
mov
sub
daa
fimuls
pop
out
testb
push
dec
les
pop
fistps
flds
or
xrelease
fucomi
mov
imul
xchg
sub
jg
aas
insb
jne
sbb
cwtl
pop
movsb
fistps
sbb
shl
out
jp
int3
cli
add
or
jbe
adc
aas
mov
and
push
cmp
pop
pop
enter
loop
xchg
fwait
shl
shlb
add
fldenv
adc
test
mov
sbb
dec
push
enter
push
or
cs
sbb
in
iret
mov
fdivr
adc
or
xchg
push
dec
mov
call
adc
and
and
add
mov
and
mov
popf
in
push
jecxz
pop
and
sti
sub
xchg
mov
dec
add
int
xchg
rorb
scas
jo
test
insb
inc
sbb
sub
out
cmp
inc
sub
arpl
cmp
adc
xchg
es
or
dec
fstl
cmc
xchg
jnp
pop
or
and
icebp
jno
aaa
sbb
sbb
data16
and
pop
test
in
imul
and
and
push
sub
inc
sbb
ljmp
cld
mov
into
sbb
mov
mov
pop
mov
mov
outsl
loope
std
les
or
subl
aas
sbb
push
lret
push
push
scas
aaa
xchg
into
dec
push
push
inc
mov
cld
jecxz
in
cwtl
scas
insl
test
push
imul
adc
mov
inc
mov
push
inc
loop
adc
jno
dec
inc
push
push
sub
jp
or
bound
sbb
outsb
outsb
pop
or
pop
jp
in
jmp
mov
shll
mov
negb
test
mov
sahf
fnsave
inc
adc
dec
dec
dec
push
mov
mov
or
add
jne
xchg
push
mov
lret
dec
xchg
mov
pop
push
out
pop
aad
push
int
mov
jae
xor
addr16
pop
dec
cli
sub
popl
push
cld
cmp
les
push
and
aas
and
in
outsb
xor
pop
cld
dec
fadds
dec
jge
cld
cmp
ret
inc
mov
jns
es
arpl
iret
mov
popa
flds
inc
sub
std
test
pop
ljmp
repnz
aam
inc
add
cmp
pop
es
lods
jo
in
add
aas
pop
pop
into
jg
mov
pop
sar
inc
int3
fbstp
lahf
rorl
adc
mov
inc
xor
repz
xor
aas
stos
inc
aas
mov
or
sub
scas
scas
pop
jo
out
je
sub
fiaddl
sbb
xchg
arpl
mov
in
push
push
push
inc
loopne
inc
gs
jb
mov
xchg
mov
mov
loope
mov
notl
cmp
and
dec
sbb
sbb
or
adc
inc
addr16
cmp
test
dec
mov
jg
scas
icebp
pop
das
shll
sbbb
lret
jle
aad
out
add
sub
rorb
dec
fsubrs
popf
jne
xor
sbb
lods
jns
leave
out
lret
and
enter
loope
or
cmp
das
stos
push
sbb
sub
jle
das
mov
rcl
loop
mov
aas
or
jl
fisubl
xchg
pop
jb
mov
pop
stc
adc
movb
les
adc
jge
fsts
popf
and
fisubs
dec
cmp
bnd
sub
test
ret
inc
fwait
sub
mov
xchg
adc
ds
rcr
lods
repnz
loopne
cmp
into
into
dec
cwtl
stc
inc
push
in
cmp
pop
sbb
jb
mov
mov
imul
pop
xlat
je
lods
inc
sbb
cli
inc
mov
inc
pop
movb
and
xchg
cli
fdecstp
scas
push
sub
sbbb
jo
call
incb
in
adc
outsb
insb
and
out
jmp
adc
jl
mov
inc
iret
les
xchg
out
lret
aaa
mov
xchg
push
xor
out
arpl
les
or
ret
dec
jg
notb
sbb
add
sahf
sub
clc
adc
inc
push
cwtl
pop
xor
faddp
sbb
call
fwait
movsl
adc
fnstsw
dec
xor
in
jbe
jg
or
gs
cwtl
mov
mov
inc
mov
cmp
hlt
cmpb
jecxz
mov
add
call
les
push
ret
insb
in
cmpb
jb
xchg
hlt
sbb
jle
aaa
add
stc
pop
push
in
mov
sub
pop
loopne
stos
pop
jns
cmc
lret
jbe
rorb
inc
cs
jg
cmp
rcr
cmpsl
mov
mov
in
mov
inc
mov
and
adc
pop
fnstsw
inc
pop
sbb
xor
jg
sub
test
pop
jb
mov
xlat
adc
fs
icebp
cmp
xchg
arpl
ss
sub
or
mov
lret
pop
sub
mov
sbb
in
push
sbb
add
cmp
inc
mov
rclb
fists
fisubs
imul
rep
xor
xchg
jecxz
es
bts
data16
jo
add
mov
cmp
js
outsb
nop
or
jae
jmp
loope
inc
dec
inc
jne
mov
cmpsb
and
mov
xor
fisttps
or
sub
sti
stc
sbb
jp
cmp
jb
cmc
mov
add
or
fstps
dec
inc
pop
sub
mov
aaa
scas
xchg
and
mov
dec
adc
sub
pop
and
pushf
fildll
scas
rorb
xchg
out
je
push
movsb
sti
fnstenv
subb
jns
sub
imul
mov
or
push
push
iret
mov
xor
inc
mov
fimuls
push
gs
sub
test
clc
adc
push
lret
lock
pusha
push
insb
inc
xchg
lds
push
dec
rorb
pop
negb
cltd
and
aas
push
iret
inc
xchg
sbb
ljmp
sub
es
add
xchg
scas
sti
imul
negl
fstps
imul
push
mov
mov
je
jo
mov
fwait
cmp
enter
sbb
fisubs
outsb
cld
xor
sahf
int3
icebp
xorb
push
mov
xchg
mov
jo
call
aas
mov
das
cmp
jle
push
jne
sbb
dec
mov
mov
rol
xchg
hlt
sbbl
das
pushl
sub
ja
cmc
mov
add
inc
pop
outsl
imul
flds
lret
jl
data16
xchg
xchg
mov
inc
lahf
int3
pop
dec
sub
aam
push
add
mov
outsl
out
inc
xchg
ds
dec
mov
xchg
jae
mov
in
add
jae
pop
cmpsl
dec
mov
pusha
out
xchg
int
and
xor
xchg
push
push
js
push
pop
mov
imulb
and
aas
gs
test
cltd
sub
push
pop
pusha
or
or
mov
ja
lea
dec
lcall
stc
ret
mov
inc
or
mov
cs
push
lcall
push
cmp
scas
or
cmp
mov
push
mov
mov
or
xor
sti
cmp
in
pop
or
pop
adc
push
cmpsb
mov
cmpsl
mov
jecxz
aaa
pop
cmpsb
jp
test
inc
cmp
pop
or
aaa
test
cmc
add
mov
rol
aaa
enter
mov
jbe
sub
sbb
movsl
add
lock
test
aaa
xor
cmpsl
bound
sub
add
xor
aas
xchg
ret
ljmp
inc
scas
mov
aam
dec
lods
adc
dec
test
jnp
mov
mov
fisubrs
lcall
repz
add
js
and
pop
cs
out
daa
insb
repz
daa
xor
cmp
arpl
int
std
shrl
out
push
jb
sbb
dec
adc
ss
or
mov
or
in
addl
aas
bound
mov
flds
arpl
lods
rorl
and
lahf
insl
in
push
xor
adc
and
sti
dec
xchg
arpl
jge
ret
pop
pop
xlat
jno
loopne
ljmp
sbb
mov
or
xchg
cmc
jmp
cmc
aaa
rcrb
sbb
cmp
pop
dec
hlt
and
cli
movsl
lds
and
mov
cmp
andb
cmp
push
leave
pop
subb
cmc
pop
iret
and
insl
mov
and
pop
stos
dec
pop
cmp
mov
mov
jno
js
pop
mov
loopne
dec
pop
scas
mov
xchg
addr16
jg
adc
rcr
dec
or
daa
push
sbb
push
push
das
and
inc
out
sti
mov
in
jmp
pop
rep
out
shl
dec
outsb
gs
pop
dec
xchg
fcomps
stos
inc
repz
ds
dec
in
add
mov
mov
jl
jbe
lcall
jg
lods
out
pop
xchg
jge
xor
mov
and
inc
sub
adc
adc
push
pop
jbe
xchg
inc
and
sub
imul
mov
xchg
nop
subb
pusha
add
and
and
cmp
push
sub
icebp
ficoml
push
loope
movsl
cmc
movsl
add
mov
daa
ror
mov
mov
and
divb
cltd
mov
stc
push
stos
push
adc
mov
dec
data16
pop
imul
pop
mov
aad
pop
je
or
mov
out
shlb
jmp
pop
xchg
mov
cmp
and
mov
scas
mov
loopne
mov
loope
jb
jge
out
ficomps
pop
dec
mov
push
sub
imul
push
pop
mov
xchg
dec
stc
add
gs
jb
in
pop
inc
pop
fmull
cmp
cmp
nop
adc
jecxz
cmpsl
push
jle
pop
testb
xor
jmp
jae
outsb
cmp
scas
dec
popa
ja
adc
pushf
cmp
dec
xor
add
das
je
pop
jo
add
into
pop
or
cmp
nop
popa
sbb
in
cmp
scas
adc
test
mov
insl
movsb
out
sahf
sub
add
fistps
mov
aas
ljmp
and
ficoml
lock
jmp
sbb
int3
cmp
in
sbb
mov
jbe
gs
or
inc
repz
add
jae
xor
mov
sub
adc
mov
stc
dec
add
sbb
pop
outsb
loop
sahf
out
xchg
xor
idivl
jne
mov
xchg
xchg
pusha
popf
fucomi
sbb
mov
les
sbb
repnz
and
sbb
int
decb
xlat
lods
sbb
mov
xchg
fdivp
or
jae
je
lea
lea
fs
cmp
mov
imul
dec
stc
je
scas
inc
repnz
bound
xchg
and
push
dec
addr16
lret
pop
or
mov
pop
addr16
push
ds
sbb
dec
movl
cmc
dec
sbbl
shlb
mov
mov
sbb
or
pop
stc
mov
or
jge
add
inc
push
adc
ljmp
and
jecxz
push
addr16
and
xor
xor
xor
addb
mov
jle
sahf
pop
xchg
mov
adc
jge
or
jmp
rcrl
aaa
loopne
xchg
popa
xor
inc
xchg
xor
inc
ss
test
test
lock
xor
mull
inc
mov
daa
dec
push
mov
mov
lret
movsl
xchg
add
dec
ret
sarb
fs
adc
rorb
dec
or
jb
sbb
pop
pop
outsl
and
xlat
xchg
and
sbb
xor
call
adc
add
shl
nopl
inc
sbb
sbb
movsb
fs
imul
test
arpl
out
push
push
pop
stos
cmp
inc
jne
adc
lea
add
lret
add
pop
addr16
mov
movsl
cltd
cmp
sub
test
mov
cmp
bnd
repnz
test
add
addl
pop
shll
sti
int
jp
popf
movsb
lock
andb
cli
push
inc
outsb
movsl
sub
stos
hlt
mov
cmova
pop
mov
outsl
pusha
jno
in
inc
in
jge
es
push
push
cli
je
dec
xchg
inc
sbb
aaa
dec
insb
iret
lods
xchg
cwtl
xor
lcall
inc
jmp
jb
fs
jno
xchg
neg
sbb
rcl
mov
sbb
incb
scas
pusha
cs
pop
mov
lods
sbb
sub
push
in
sbbb
mov
or
add
enter
push
dec
imul
jge
loop
mov
in
loope
sahf
xchg
dec
mov
lock
int3
jp
xor
movsb
mov
dec
cmp
and
cmc
fimuls
test
mov
and
jge
out
inc
les
xor
test
rep
and
loop
sarb
push
ret
mov
inc
loop
imul
cwtl
fsubs
orl
adc
inc
mov
jecxz
sub
push
loope
xchg
pop
dec
ret
mov
movsl
fidivl
xchg
les
gs
mov
push
mov
mov
ret
jecxz
pushf
mov
push
adc
call
jl
mov
insl
in
mov
gs
pop
mov
push
adc
ljmp
sbb
pop
adc
jae
push
inc
sti
pop
in
mov
out
push
mov
jno
push
ja
and
push
popa
adc
push
loopne
dec
and
push
enter
hlt
xchg
imul
lock
inc
ss
orl
sti
dec
mov
data16
andb
add
xchg
sbb
push
ret
leave
test
out
push
es
cwtl
inc
hlt
dec
mov
sub
sub
dec
cmpl
ds
cmp
fdivrl
or
mov
add
mov
movsb
rolb
iret
int
jb
call
insb
fmul
fwait
and
xor
xorb
xor
popa
push
xchg
adc
int
mov
mov
popf
test
add
enter
std
and
ds
jne
fisttps
xchg
add
push
xor
fs
andb
xchg
dec
lock
dec
push
movsb
mov
insl
gs
and
sbbl
and
jl
xor
mov
fnsave
sub
adcl
cs
dec
xor
bound
int
jno
ljmp
fwait
icebp
addb
cmpsb
cmp
or
pop
sbb
add
dec
test
dec
std
jo
sub
repnz
aad
adcl
inc
xorl
xchg
xchg
lahf
and
jo
test
rclb
jmp
lcall
repnz
mov
cmp
mov
rclb
popf
adc
and
enter
sti
mov
sub
mov
rcl
sbb
mov
leave
sub
mov
popf
sbb
jge
cmp
mov
add
cmpsl
mov
xchg
xchg
push
add
and
dec
or
fistpl
scas
cwtl
xor
inc
and
mov
lahf
jno
pop
rcrb
enter
xchg
push
ret
dec
rorl
mov
sbb
mov
xchg
mov
pop
cmp
lds
fiaddl
icebp
lods
mov
jno
xchg
adc
lock
push
push
mov
cmpsl
cmpsb
loope
fisubrs
pop
inc
jle
mov
hlt
jb
jle
js
cwtl
sub
je
adc
jg
xor
cmc
mov
test
insb
inc
mov
rorl
je
jle
nop
shrb
ffreep
les
lcall
pop
mov
popf
sub
and
inc
mov
negl
mov
inc
inc
out
sahf
inc
xchg
shl
fdivrp
shrl
adc
push
jmp
bswap
imul
adc
stos
add
lea
lds
fldcw
mov
jno
xchg
jle
ja
pop
xchg
gs
int
mov
adc
cmp
rcll
shll
repnz
and
insb
cli
and
mov
xchg
add
fdivrp
lds
xlat
xorl
shlb
scas
mov
mov
pop
cmpsl
adc
negb
xlat
pop
fadd
cmpsb
fsubl
jae
sub
jp
dec
icebp
imul
cmpsl
aam
pop
add
fs
jnp
jmp
mov
jae
and
push
mov
and
inc
mov
daa
stc
and
pop
fistps
insb
cwtl
ja
stos
ds
out
pushf
dec
or
and
push
cmp
sub
jb
sub
xchg
mov
jb
addr16
mov
dec
arpl
push
push
dec
ja
ja
daa
pop
test
xor
and
ret
nop
cmc
jmp
mov
xchg
aas
icebp
popf
scas
lret
fucomi
test
xchg
enter
or
insb
xchg
cmc
dec
add
pop
test
popf
adc
adc
jno
sar
mov
pop
lods
mov
sub
pop
pop
into
cwtl
push
dec
mov
pop
pop
jo
icebp
xor
jmp
insb
pop
ret
lock
dec
push
jecxz
and
xor
loope
pop
sahf
rol
cmc
mov
scas
push
push
jge
push
add
daa
sub
pop
xor
fs
xchg
pop
movsb
leave
jp
mov
imul
dec
iret
fistps
adc
loope
push
mov
cwtl
xor
in
int
aam
es
mov
jae
fsub
das
xor
sbb
xchg
mov
xchg
mov
arpl
ficoms
jno
ds
jnp
sbb
xchg
scas
cwtl
inc
jbe
cmp
fwait
in
jecxz
fimuls
jg
jae
fdivr
out
cli
mov
lahf
and
inc
dec
in
pop
movsb
nop
push
cmpl
testl
ljmp
fnstenv
mov
adcl
lods
int3
jb
xorl
sti
push
aad
repnz
dec
test
int
aaa
in
pop
sbb
mov
push
ljmp
mov
sbb
xor
addr16
sti
lcall
jecxz
cld
jno
ljmp
pop
lds
xor
or
cmpsb
lock
jmp
sahf
clc
sbb
jno
int
mov
and
iret
mov
dec
cmp
insb
push
aaa
inc
jae
les
mov
mov
shlb
in
sub
out
xlat
jns
jno
xor
adc
pop
mov
xchg
adc
loop
fsubr
outsb
cmpb
sub
fstpt
push
cwtl
les
arpl
pushf
mov
adc
mov
dec
rclb
in
xchg
inc
stos
mov
dec
xchg
xlat
sub
iret
xor
aad
ret
push
sbb
les
lods
in
iret
xor
xor
push
adc
sbb
push
push
pop
cmp
dec
dec
gs
sbb
xor
mov
fs
push
xor
hlt
mov
ds
xchg
ds
push
lahf
mov
mov
fwait
adc
add
push
jb
fcmovnu
sbb
dec
sub
stos
movsb
cmp
push
cmp
xor
sahf
mov
les
xor
add
lods
and
sbb
roll
ret
rcl
push
jp
mov
cltd
leave
gs
movsb
jb
adc
push
loope
icebp
clc
adc
add
in
inc
jno
sarl
adc
xchg
sbb
mov
inc
and
js
sbb
rorl
cmp
repnz
iret
fldcw
shl
sub
sbb
mov
sarb
push
sub
inc
cwtl
sbb
pop
enter
andb
repz
xor
cwtl
jo
stos
repnz
idivl
push
jae
data16
loope
mov
shlb
or
cmp
cmp
aam
in
test
cmp
xchg
stos
push
ss
frstors
mov
mov
jb
mov
mov
leave
adc
jbe
repz
sti
out
test
push
jnp
jl
out
fsubrl
dec
stos
or
lahf
cmp
std
mov
jl
xchg
jae
push
sahf
xchg
loopne
mov
repnz
xchg
and
push
inc
pushf
or
out
sbb
negl
imul
out
cli
jmp
dec
enter
jnp
pop
cs
sbb
pop
iret
out
push
cmc
ret
scas
inc
mov
adc
mov
mov
pusha
adc
mov
adc
jb
aad
cmp
pop
lahf
push
dec
aam
dec
pop
add
adcl
cmpsl
push
inc
mov
call
adc
cmp
ret
shlb
cmp
sbb
inc
or
lods
div
cmp
pop
sub
scas
push
mov
cmpb
mov
testl
jb
notl
fcmovu
push
pop
mov
mov
sbb
cmp
jno
cli
mov
arpl
mov
mov
call
sbb
xchg
pop
fidivl
test
cmc
pop
je
mov
ja
sahf
dec
imul
ljmp
lods
sahf
repz
mov
fmuls
add
ficoms
lahf
and
adc
xor
sub
inc
inc
fistl
or
lods
pop
bound
pop
test
xchg
push
outsb
ja
rorb
cmc
sbb
sbb
xorb
or
iret
lret
mov
bound
loopne
pop
mull
push
xor
or
popf
pop
add
lock
inc
rep
fiaddl
cmp
ficoms
int3
out
add
inc
mov
cmp
pop
jb
rcl
jge
mov
imul
idivl
mov
scas
xor
inc
stos
out
ljmp
incl
mov
pusha
inc
das
std
adc
sbb
lea
mov
cli
sbb
xor
sbb
dec
lods
jle
icebp
cmpsb
push
mov
jno
ret
or
xchg
cmp
cwtl
mov
push
add
mov
adcb
filds
and
gs
repnz
stc
stos
pushf
ljmp
mov
push
pop
je
xchg
ja
xchg
test
dec
and
outsb
ljmp
dec
insl
mov
sub
bsr
cmp
mov
xchg
lret
andb
inc
xor
addl
and
inc
repnz
outsb
push
int
mov
jg
jg
jno
ja
ror
push
push
mov
and
loopne
out
and
add
scas
nop
jle
xor
jmp
fs
scas
ret
aas
arpl
clc
lds
test
mov
push
faddp
push
dec
jne
jp
inc
jp
cmp
mov
cmp
sub
sbb
dec
dec
add
ja
lahf
jo
mov
popf
dec
mov
push
shll
ds
outsl
adc
loope
xlat
mov
ljmp
xor
mov
xchg
xchg
sbb
bnd
mov
aas
dec
inc
mov
pop
les
sahf
flds
cmp
mov
xchg
dec
stos
bound
mov
rorl
sbb
gs
aad
jb
outsl
cli
out
sahf
or
or
ljmp
subb
stos
push
push
adc
repz
int3
je
jmp
xchg
int
bound
data16
stos
cmp
xchg
lods
movsb
rorl
mov
ret
out
pop
jbe
cmc
out
sbb
fsubl
inc
imul
lds
loope
cwtl
xor
fldt
cld
fwait
push
mov
jo
inc
sub
cltd
push
addr16
push
xor
movsb
lahf
mov
mov
cmpsb
mov
scas
sbb
sbb
addb
andl
and
fsubrl
push
push
insb
popa
pop
bnd
call
sbb
adc
repnz
mov
pop
mov
sbb
loope
xchg
xor
and
mov
fcmovu
sti
inc
jno
out
push
add
and
jmp
call
xor
xor
mov
dec
leave
jmp
cs
sahf
jb
fs
xchg
adc
mov
test
test
xchg
jbe
int3
cs
pop
sbb
dec
lahf
mov
mov
sbb
dec
arpl
push
test
lea
jp
jg
insl
mov
loope
rcll
fbstp
sub
fisttps
lahf
adc
and
flds
mov
mov
jo
mov
scas
add
daa
movsl
jmp
xchg
movsb
ret
sbb
adc
and
push
cmp
jbe
pushf
and
loope
jle
orb
lock
js
ja
sahf
push
jge
sahf
cmp
bound
push
adc
stc
das
add
push
lcall
les
push
rorl
nop
pop
dec
les
pop
dec
imul
test
push
adc
rcrb
pop
lea
cwtl
push
xchg
or
push
lds
dec
adc
mov
sbb
lahf
mov
out
stc
jg
inc
js
cmc
imul
add
enter
lods
loopne
push
and
inc
mov
adc
movsb
or
sub
inc
in
dec
xor
ret
stos
loope
loop
pop
mov
out
cli
push
sbb
sub
sub
mov
daa
mov
into
mov
std
out
popa
add
push
xor
repnz
dec
jb
pop
loop
call
clc
pop
add
imul
mov
sbb
call
pop
push
out
xlat
pop
loopne
adc
add
sub
cmp
cmp
or
mov
sarl
imul
mov
add
jle
repnz
sti
sub
sbb
pop
sub
mov
aam
pop
jg
loop
test
xlat
aaa
mov
jg
mov
fcmovu
add
xchg
pop
imul
into
cmp
jno
rcll
rolb
pop
push
mov
push
nop
fidivrl
push
mov
mov
mov
or
out
call
in
pop
lret
loopne
cmpsb
jp
pop
push
pop
bound
lods
pop
cmpsb
push
dec
jns
push
movsl
lods
xchg
out
cltd
sbb
pop
and
pop
mov
pop
jae
or
cmpsl
fdivs
jp
gs
inc
shrb
mov
inc
inc
cld
and
push
rcrl
adc
shll
cli
mov
add
add
fwait
cmp
outsb
xchg
gs
sbb
cs
mov
mov
add
test
mov
ret
push
icebp
arpl
loopne
andb
mov
cmpsl
xorl
jge
xchg
fcmovnbe
sarl
adc
and
mov
sbb
pop
add
cwtl
jns
jno
movsl
sbb
in
pop
inc
sub
mov
out
cld
jg
ds
xchg
in
bound
arpl
push
inc
movsb
ljmp
mov
out
sub
mov
mov
andl
out
or
adc
sub
xlat
dec
xchg
call
mov
xchg
dec
stos
xor
mov
les
pop
inc
addr16
mov
repz
add
mov
aas
dec
stos
out
test
out
cmpsb
scas
repz
or
and
and
sub
mov
test
mov
fwait
lock
arpl
mov
pop
mov
dec
test
pop
cmp
mov
rclb
inc
cmp
xor
add
icebp
cmpb
mov
inc
adc
inc
addr16
aas
in
ret
insl
cld
push
gs
pmuludq
std
cmp
nop
stos
push
inc
push
incl
mov
cmp
sbb
mov
daa
movsb
xor
sbb
mov
insl
sub
shr
dec
ljmp
pop
cmp
fld
push
out
mov
and
adc
and
sbb
xor
sbb
add
fbld
sbb
pop
lret
cmp
sbbb
fnstcw
test
mov
or
jg
out
cmp
data16
sub
pushf
jbe
aam
hlt
fcompl
dec
mov
shll
sbb
sbb
sbb
lock
cwtl
aas
notb
clc
push
sti
mov
loop
in
lcall
mov
mov
negb
or
cli
cmp
mov
sbb
mov
inc
or
loop
push
cltd
push
lret
movsl
push
sbbb
xor
ljmp
add
repnz
pusha
fsubs
popf
stc
aam
and
pop
gs
orl
fcmovnu
fs
mov
test
pop
es
adc
mov
repnz
lods
cmpl
xchg
pop
xchg
fcmove
mov
pop
push
lods
stos
push
push
jle
hlt
sub
arpl
adc
scas
push
test
jg
ds
mov
jl
shlb
mov
mov
test
xor
enter
ja
inc
dec
imul
fsubrl
adc
pop
test
xor
scas
adc
pop
repz
cs
push
lcall
jl
or
and
filds
pop
inc
bnd
pop
aam
popf
stos
mov
mov
xchg
add
xor
jne
jo
shrl
scas
mov
ss
mov
les
and
lock
aad
mov
loope
mov
sahf
sub
ds
and
lds
cmp
and
es
fiadds
icebp
lcall
jne
xor
imul
or
insb
out
push
into
popa
mov
sbb
loop
inc
sahf
cmpsl
rcll
and
add
cmp
adc
jle
mov
js
lahf
ret
push
ret
inc
and
push
pop
shlb
push
cmc
jno
popa
cmp
pop
inc
test
nop
jne
pop
sbb
out
cmp
mov
and
testb
dec
cmpsb
mov
lods
leave
inc
adcl
test
arpl
aaa
cmpl
sahf
push
jmp
icebp
mov
cltd
push
movsb
enter
imul
mov
push
sub
outsb
imul
lods
xchg
clc
pop
mov
and
pop
lea
es
call
mov
push
xor
clc
mov
negl
cmp
cmp
push
enter
push
jmp
fnstenv
mov
fs
adc
and
shlb
imul
out
ljmp
andl
inc
add
push
inc
ret
jmp
pop
pop
insl
out
cmpsb
and
scas
dec
jns
cmp
imul
push
push
test
dec
adc
sbb
fdivrs
addr16
es
mov
inc
outsl
pop
and
arpl
loope
pop
mov
jge
mov
rcl
lcall
jbe
adc
pop
cltd
sti
icebp
jo
mov
pop
incb
shlb
sbb
jae
popl
xor
inc
movsb
mov
xchg
dec
jmp
adc
fsubs
popa
push
mov
daa
lret
or
lcall
pushf
adc
mov
mov
cmpl
lds
xchg
insl
imul
push
addr16
dec
sub
adc
pusha
fwait
mov
inc
test
pop
into
ret
xchg
mov
gs
push
lea
inc
or
ret
pop
xor
pop
xor
cmc
lcall
dec
fdecstp
addb
lret
xor
les
mov
lret
sub
fldpi
push
jmp
icebp
xchg
lahf
iret
push
dec
adc
or
jmp
or
mov
repz
cmp
xchg
add
sub
add
cmp
and
sub
mov
into
outsb
cmp
inc
fwait
xchg
ret
andl
cmpsl
movsb
mov
fiaddl
ret
mov
or
inc
xchg
push
stos
rol
es
jbe
jl
dec
and
stc
int3
push
adc
aam
push
stos
insb
inc
or
lret
dec
pushf
pop
pop
push
push
out
inc
fimuls
xchg
sbb
pop
sahf
and
jl
lds
inc
mov
icebp
push
daa
cmp
lret
mov
cmp
push
into
loopne
sbb
mov
dec
rol
mov
ljmp
test
lods
cli
push
jne
sbb
les
cmpsl
aas
cwtl
fnsave
pop
stos
je
mov
cmp
lds
xchg
int3
adc
imul
xchg
addb
or
mov
fwait
cmc
adc
cmp
sti
into
jmp
and
icebp
mov
lea
clc
dec
sti
xor
shlb
sub
bound
imul
jnp
ret
lcall
rcrl
mov
incb
inc
fprem1
dec
mov
jbe
xor
cmp
outsb
orl
mov
pop
les
push
lcall
insl
lret
mov
scas
mov
cmpsb
stos
and
jbe
xor
mov
in
sahf
and
ss
ss
dec
scas
jae
cmp
push
push
pop
imul
xor
pop
adc
push
push
mov
scas
jle
and
jmp
jmp
mov
in
dec
imul
mov
push
jp
repz
imul
lea
roll
mov
dec
aaa
lock
enter
dec
and
imull
clc
lock
mov
int
and
mov
add
fwait
into
jmp
inc
mov
shrl
add
push
adc
imul
and
mov
std
mov
sbb
push
sbb
mov
xchg
push
mov
dec
adc
call
mov
mov
ss
ret
adc
aaa
mov
repnz
push
pop
lret
xchg
pop
mov
sti
jle
sub
testb
jp
xchg
add
mov
sbb
dec
inc
addr16
sub
mov
mov
mov
mov
sub
push
push
push
daa
mov
xchg
cltd
icebp
imul
andb
stos
sub
lea
push
and
aam
cmp
add
movsl
mov
and
in
jmp
fsubrs
sbb
add
jmp
mov
loop
lahf
dec
fwait
push
pop
mov
mov
and
mov
inc
imul
dec
lret
std
mov
popa
cs
and
push
adc
dec
mov
mov
stc
jbe
pop
xchg
mov
aaa
cmp
aad
xchg
shl
lods
mov
int3
iret
pop
jl
outsl
mov
lret
in
jne
xchg
out
rolb
inc
add
imul
xchg
pushf
cmc
daa
mov
xor
sbb
sbb
stc
lret
js
mov
jne
dec
add
aaa
xchg
jnp
inc
jae
mov
pop
rcrb
adc
popa
bound
movsb
xchg
nop
inc
mov
xlat
push
adcb
mov
jle
and
setl
out
push
out
call
jbe
add
cmc
outsl
dec
xchg
cmp
in
aam
push
push
lds
ja
adc
movsb
xchg
and
popf
dec
push
inc
dec
xchg
cwtl
mov
fs
or
mov
add
ja
pop
cmp
dec
pop
cmp
dec
loopne
lock
orl
ret
cltd
shll
outsb
std
adc
add
push
cmp
mov
nop
xchg
sub
cmp
jp
int3
pop
sbb
mov
enter
jg
fnstenv
mov
adc
mov
gs
xchg
call
daa
pop
jmp
std
adc
jb
std
jbe
hlt
sbbl
shl
xchg
jmp
mov
xor
insl
cs
jns
cmp
add
mov
imul
add
jb
and
pushf
or
and
fcoms
cld
cltd
call
hlt
push
jg
and
out
fistpll
cli
stc
in
mov
adc
test
cmp
jnp
cs
fsubrl
cmp
mov
stos
rcll
jnp
shlb
hlt
xor
or
inc
out
imul
setbe
sub
aad
lock
fcmovb
push
sub
mov
in
icebp
jg
mov
es
faddl
pop
fimuls
add
push
or
mov
add
xchg
sub
adc
pop
or
sub
cmp
aas
out
add
adc
push
push
std
push
lods
test
in
ret
adc
mov
iret
insl
mov
int3
xor
test
fidivrs
and
mov
in
rorl
jle
fldt
mov
xchg
lods
faddl
pop
push
sbb
lea
inc
jge
and
mov
mov
icebp
pop
add
cs
jle
movsl
aam
jg
lcall
ret
es
sbb
es
jns
ficoml
or
aaa
std
sbb
sub
rclb
addr16
mov
nop
xchg
jecxz
dec
into
rolb
imul
or
mov
out
in
xchg
sbb
lret
xor
mov
xor
sub
das
mov
daa
dec
pushf
roll
push
ja
js
push
mov
pop
cmp
bound
mov
xchg
or
jecxz
sub
shl
pop
imul
aad
jl
push
jle
pop
ljmp
lods
inc
das
lcall
inc
sbb
mov
cmp
int3
mov
lods
pop
int3
cld
cmp
cwtl
rcrl
sub
jge
inc
push
lret
movsb
call
pushf
in
ds
sub
adc
gs
xlat
pop
test
cmp
cmp
fcompl
sbb
nop
add
xor
cmpsl
xchg
inc
js
into
cmp
sub
pop
insb
dec
loopew
pop
or
xor
cmpsl
or
test
sarb
xor
hlt
mov
push
sbb
mov
and
add
jg
sarb
ljmp
sbb
and
leave
dec
pusha
jl
mov
das
pop
sbb
xchg
insb
sub
leave
adc
into
and
xor
sbb
mov
inc
aaa
bnd
rol
mov
inc
imul
mov
stc
lahf
sbb
push
loopne
gs
in
lock
add
adc
stc
std
xchg
inc
jnp
mov
adc
xchg
stc
int3
dec
or
xlat
mov
insb
xchg
sbb
scas
test
in
mov
sbb
sbb
cmp
loop
pop
lds
iret
into
negl
je
pop
loope
jl
movsb
gs
and
sub
sbb
mov
dec
dec
fsubs
jnp
and
sbb
cld
cltd
repnz
incb
mov
inc
inc
imul
pop
push
jmp
clc
dec
fists
imul
jle
add
enter
inc
pop
push
inc
ljmp
jnp
jne
inc
aam
scas
cs
mov
int3
push
arpl
in
js
adc
ljmpw
xchg
push
and
dec
lods
clc
xor
jo
mov
pop
repnz
fdivl
in
dec
cmp
lretw
int
js
jno
jae
std
fs
sahf
push
test
std
std
sbbb
hlt
add
fisttpll
push
pop
test
add
pop
ljmp
push
jnp
in
dec
out
sahf
rol
or
cltd
xor
or
fbld
nop
mov
xor
and
xor
icebp
fdivr
mov
lahf
jmp
xchg
or
and
mov
or
add
mov
lock
pushf
sbb
inc
sub
mov
mov
jge
in
hlt
xchg
mov
push
sti
out
ljmp
icebp
inc
lock
push
xor
mov
inc
cmp
mov
test
icebp
mov
call
jne
iret
and
int
inc
jmp
mov
loopne
mov
fldcw
jnp
bt
mov
or
mov
aad
test
jbe
addb
sbb
sarb
or
fwait
scas
xchg
mov
inc
lcall
mov
inc
mov
mov
ficoms
pop
ret
and
and
daa
mov
arpl
push
pop
repnz
and
fnstcw
adc
sub
sbb
mov
xchg
or
pushf
aas
mov
cvtps2pd
psubq
pusha
into
add
movsl
out
lods
insl
enter
sbb
dec
or
push
xchg
addr16
mov
scas
rcrb
int
mov
xchg
dec
movsl
xchg
mov
cmc
cmpsb
addr16
and
out
mov
dec
je
or
cmp
mov
test
ss
xchg
inc
mull
loopne
xchg
fsts
je
dec
jnp
sub
add
dec
xchg
cld
adc
jp
fldenv
movsb
sarl
sahf
lret
mov
out
bound
shll
push
mov
add
xor
and
adc
cmc
jle
inc
jle
lods
cmp
aas
mov
pop
int3
loopne
frstor
mov
iret
imul
out
xchg
cmp
out
mov
cwtl
jmp
and
mov
repz
mov
sbb
pushf
loop
lock
sbb
jle
cmp
and
mov
dec
jg
loope
xor
mov
sub
xchg
dec
int3
pushf
lock
push
stos
sti
stc
mov
jge
ret
arpl
iret
or
lahf
aaa
add
inc
jmp
test
cwtl
mov
mov
push
lahf
or
aas
xchg
sub
jp
adc
dec
lock
xor
clc
stos
mov
push
jae
push
sbbb
mov
adc
xor
inc
dec
das
rcrl
insl
pop
mov
xor
ss
sbb
inc
hlt
dec
cs
and
fs
sbb
fcmovnb
jmp
mov
nop
or
cmp
jo
pushf
clc
add
hlt
fldcw
inc
nop
pusha
les
or
hlt
push
ja
mov
cwtl
test
sti
lret
fldt
cwtl
iret
mov
call
jne
ficoms
ds
out
in
adc
gs
call
mov
dec
add
xor
out
adc
lods
stos
adc
push
movsl
lahf
jo
or
add
jecxz
push
xor
sarb
fstp
je
std
add
cmpsb
mov
push
ret
les
adc
cs
cmpsl
dec
cmp
daa
cltd
sti
imul
daa
iret
imul
stc
pop
in
test
in
cmp
cs
loop
adc
addb
mov
mov
xor
mov
sub
out
dec
xor
orl
xchg
pop
leave
cmpl
clc
orb
mov
xchg
test
xchg
pushf
mov
decl
subb
pop
cs
mov
or
imul
adc
cmpsl
nop
xchg
push
out
adc
insl
addr16
cmp
leave
sbb
pushf
orb
arpl
mov
es
ja
sub
cmp
movsl
fcoms
push
and
jno
daa
pop
xchg
push
dec
stos
in
jle
pop
std
mov
js
in
xchg
test
ret
imul
rcrl
test
push
jecxz
rorb
xor
dec
mul
insb
ljmp
dec
stos
fistpll
inc
pop
insb
xor
mov
inc
into
je
shll
popa
in
jmp
aas
fidivrs
in
test
xor
fdivl
out
sub
lds
popf
arpl
xchg
imul
jmp
add
dec
repz
pop
add
inc
stc
stos
pop
mov
jg
insb
ficoms
popa
imul
mov
ss
sbb
cvtps2pd
sub
jbe
das
jmp
outsl
fdiv
and
loope
lock
fcmovb
sub
cli
mov
cmp
pop
jns
psubb
pop
into
inc
dec
or
jns
jg
inc
add
test
nop
fistl
lock
push
and
or
cmp
or
popa
in
push
sbb
xchg
adc
push
loope
cmpsl
fs
in
and
sub
and
shl
filds
fsqrt
fdivp
rclb
and
and
push
or
fwait
xchg
add
cmp
insb
jbe
call
mov
jle
jmp
xor
mov
mov
cmp
lods
and
sub
dec
sbb
gs
std
cs
pop
pop
pushf
dec
xor
scas
cs
ja
fstl
fdivr
data16
push
dec
rep
jmp
xor
or
inc
fildl
mov
add
fldenv
add
xor
std
scas
jp
insl
lods
clc
faddl
movaps
jne
cmp
aas
int
int
or
dec
inc
test
xchg
lea
xchg
inc
sub
mov
sbb
jno
xchg
pop
test
jae
fildl
or
jae
ror
jb
add
ja
repnz
mov
mov
mov
push
pop
sub
mov
cld
and
sbb
cmp
cwtl
sti
addr16
adc
adc
xor
loopne
inc
sti
cmpsl
jnp
sbb
ret
pop
rcrb
pop
or
jl
adc
cwtl
jge
pop
adc
push
xor
jmp
les
scas
jl
and
daa
es
sahf
mov
jbe
sub
out
test
scas
decl
xor
mov
inc
inc
and
jne
sub
cmp
fisttps
ret
xchg
into
adc
mov
pop
addr16
adc
sub
je
orps
ds
imul
sahf
sub
sub
dec
mov
fisubrs
and
aaa
lret
adc
sub
cmp
and
in
xor
les
sub
adc
frstor
inc
div
sbb
scas
rol
stc
frstpm(287
push
and
xchg
ret
stos
or
adcb
in
add
jns
dec
movsl
push
lret
jp
cltd
scas
pop
push
in
and
fiadds
idivl
fstpl
bnd
add
mov
inc
jp
test
repz
xor
out
push
lea
loop
adc
call
mov
aas
push
mov
mov
mov
push
add
pop
scas
pop
pop
cmp
mov
pop
pop
arpl
dec
loop
jae
in
pop
push
hlt
adc
loop
add
in
fnstsw
decl
cli
inc
test
mov
cmp
sbb
cmpsb
cmp
add
sbb
xchg
xor
scas
pusha
xor
scas
dec
adc
outsb
xor
das
adc
cmpl
cmp
sbb
les
movsb
cmpsl
dec
or
sub
inc
xlat
or
dec
or
push
xchg
pop
iret
sbbb
or
xchg
cmp
stc
jge
add
test
mov
andl
pop
and
jb
sti
dec
ljmp
aas
adcl
mov
xor
mov
xchg
mov
jl
adc
mov
cmc
push
sbb
sahf
push
imulb
std
loop
mov
xchg
movsb
dec
inc
jg
iret
adc
push
adc
adc
pop
add
cmp
jbe
pop
push
insb
ja
xchg
icebp
mov
jns
cmc
pop
fmuls
stc
jne
cld
pop
ret
movsb
jns
lea
jecxz
mov
add
dec
addr16
cli
xor
fs
mov
jmp
mov
add
pop
cmp
pop
mov
pop
mov
leave
mov
add
cmp
jo
icebp
and
scas
pop
into
xchg
or
les
jne
fstpl
inc
lock
addl
je
addr16
loop
inc
and
or
dec
jns
mov
sbb
xor
lea
mov
fs
and
jne
ret
cmc
imul
test
xor
fwait
xchg
popa
psrad
adcl
xchg
sub
test
adc
lods
or
pop
lret
scas
sub
push
or
jp
mov
or
jl
mov
es
fidivs
mov
push
sub
jno
roll
push
dec
int
repnz
in
and
xchg
inc
gs
scas
icebp
int3
mov
lret
and
push
movsl
jb
dec
and
gs
aaa
ss
push
mov
pop
aam
ss
cmp
or
pop
xchg
iret
xor
mov
cmp
add
data16
adc
jo
fwait
enter
sbb
leave
mov
jns
cltd
mov
xchg
mov
xchg
inc
loopne
fdivs
jmp
cmc
sub
icebp
dec
fdiv
jne
insb
test
mov
xorb
jno
aaa
inc
adc
mov
pop
pushl
mov
push
out
jae
test
clc
and
xor
mov
je
fiaddl
dec
jmp
jg
xor
lret
push
sbb
cmp
inc
or
into
and
jmp
mov
clc
xchg
jmp
mov
scas
cli
adc
call
pop
xlat
orb
fs
mov
iret
outsl
addl
adc
fisttpll
inc
neg
jbe
sub
shr
jg
mov
cmpsb
inc
pop
cmp
lcall
frstor
idiv
push
xchg
ret
sbb
adc
or
es
adc
pop
xchg
inc
inc
xor
clc
adc
lret
push
sub
mov
sbb
adc
jno
push
loopne
xor
mov
stc
jnp
adc
insb
dec
mov
dec
les
dec
or
mov
sarb
aad
adc
add
in
call
dec
pop
adc
test
pop
sbb
mov
aam
orb
add
cmpsl
sarl
sbb
test
add
repnz
pop
fdivl
ds
xchg
jmp
stos
jo
call
imul
jne
mov
pushf
lock
adc
jecxz
and
add
test
flds
sbbb
js
movl
sub
adc
pop
stos
dec
mov
shll
cmp
xchg
in
jmp
into
mov
shrb
outsb
stc
pop
or
mov
adc
add
mov
and
mov
push
in
mov
fistl
or
neg
jnp
pop
pop
nop
pop
sbb
inc
fists
cld
test
or
mov
add
inc
push
outsb
jo
mov
shlw
cmp
addr16
sub
lds
jns
repz
sbb
dec
loope
out
mov
xchg
andb
dec
xor
mov
lret
icebp
outsl
lcall
sub
cmpsl
sub
xor
mull
in
adc
stc
sbb
hlt
sahf
jns
ret
sub
ljmp
sub
xor
lods
xorb
mov
cmp
aam
inc
imulb
pushf
inc
loop
mov
jno
mov
mov
pop
loopne
adc
scas
fcompl
inc
cmp
popf
arpl
lods
out
mov
ljmp
loope
dec
rcrl
push
adc
dec
ret
scas
adc
loop
popa
pop
fnsetpm(287
cmp
out
lahf
in
mov
aaa
arpl
out
adc
or
dec
rcl
movl
mov
shl
push
xchg
popf
out
rol
or
mov
mov
daa
sbb
xor
bound
movsl
lods
pop
sbb
xchg
lea
imul
pusha
repz
xor
aad
or
ja
adc
mov
adc
out
std
fadds
jecxz
iret
sub
or
aam
pop
mov
adc
and
into
pop
cmpsb
call
pusha
repz
push
xchg
mov
jp
scas
repz
mov
test
xor
outsl
dec
inc
mov
pushf
cwtl
and
outsl
lock
sub
pop
or
xchg
sti
cmp
add
dec
adc
pop
lcall
push
or
out
mov
lcall
out
jnp
adc
jns
int3
jbe
leave
cmc
enter
stos
mov
lods
aas
add
jg
and
in
push
jne
fs
stos
push
dec
adc
push
pop
cmp
cmp
lret
loopne
adc
sub
push
out
stc
sub
pop
inc
ljmp
gs
sbb
sbb
lret
xor
dec
out
pand
fbld
jg
mov
lret
mov
pop
pop
dec
push
decb
loope
addr16
out
testb
dec
inc
push
daa
sbbb
aaa
sbbb
mov
test
push
inc
test
jno
push
xor
add
cmpsb
mov
xchg
insb
in
outsl
jl
imul
mov
mov
push
int3
movsb
mov
rcll
shlb
push
jne
xchg
ret
inc
mov
cmp
adc
xchg
fiadds
std
bound
dec
dec
xchg
jno
sub
mov
or
scas
daa
mov
pop
bound
mov
mov
in
cwtl
or
pop
daa
nop
cmpl
ret
ds
mov
or
sub
std
std
aad
fidivs
jp
pop
inc
mov
roll
subl
pop
sahf
pop
ret
pop
push
movsb
decl
xor
cmc
sbb
dec
pop
adc
pop
mov
mov
rclb
les
inc
enter
pop
scas
sbb
test
mov
mov
xor
test
pop
dec
out
mov
xchg
test
imul
pusha
xor
push
jo
and
mov
dec
dec
xor
clc
xchg
fidivrs
sub
or
popa
cmc
aas
inc
lods
or
push
and
jecxz
aas
aas
stos
pop
es
xor
sti
jmp
int3
xchg
stos
mov
lret
dec
sub
xchg
push
inc
mul
fsubrl
push
mov
mov
xor
push
mov
lahf
rclb
fldcw
dec
mov
clc
jbe
daa
fnstenv
mov
addr16
xchg
insb
pusha
icebp
pop
pop
rorb
and
ret
jmp
roll
adc
add
xor
cmp
cmp
jecxz
dec
lahf
add
jp
jbe,pn
iret
lret
or
mov
cmp
cmp
orl
std
jp
pop
leave
fwait
xchg
push
jb
call
insb
lock
in
jp,pn
cmc
shlb
add
and
jecxz
loopne
jno
imul
xchg
sub
inc
pop
add
xchg
jnp
dec
and
xchg
cli
add
mov
or
pushl
fcmovnu
pop
push
lret
fwait
cli
inc
or
push
jo
mov
mov
push
sti
jmp
ja
add
xor
jle
mov
in
push
jle
push
dec
pusha
inc
dec
mov
lea
adc
bound
dec
lahf
cwtl
mov
jbe
dec
jns
nop
aaa
xchg
dec
shll
int3
test
xchg
popa
mov
jb
or
fstl
jae
mov
xlat
pop
loope
jge
cmp
aaa
add
out
adc
sbb
aad
mov
mov
jne
int
iret
xchg
hlt
sub
jnp
stc
adc
loope
leave
lcall
pop
ds
jle
add
push
jle
and
addr16
test
aaa
ljmp
sbbl
popa
std
into
mov
mov
mov
test
sub
ljmp
sti
test
adc
xchg
pop
jns
push
js
lock
cmp
pop
xor
mov
insb
out
mov
pushf
iret
cmp
addr16
jo
xor
rclb
into
mov
gs
fucomi
out
enter
std
cmpsl
add
orl
and
push
push
dec
aas
leave
movsl
pop
clc
mov
hlt
cmpsl
or
pop
sarb
pop
imul
mov
push
arpl
push
jmp
xor
xchg
nop
pcmpeqw
int3
dec
cmp
mov
into
or
aam
pop
mov
add
jle
test
call
jp
jo
xor
roll
or
test
scas
lock
push
insl
int
decb
lds
or
cmc
popa
iret
jbe
mov
mov
movzbl
ret
ss
xlat
ds
mov
cmp
test
call
dec
jmp
mov
stc
cmp
mov
inc
lahf
mov
adc
in
fsubr
daa
into
inc
or
les
jle
fnstenv
mov
push
aas
fdivrp
pop
jno
inc
les
pop
lds
lock
insb
push
adc
hlt
notb
ret
cmp
jns
scas
sti
xchg
fdivl
push
daa
xlat
insb
inc
das
add
dec
jnp
std
adcl
lahf
ljmp
or
cli
dec
add
ljmp
mov
cmp
out
imul
fstpl
jbe
jno
cmp
movsl
pusha
and
repnz
adc
inc
mov
fcoms
jl
jg
pop
test
xor
cli
in
cmpsl
inc
sub
xchg
jecxz
iret
xor
fldcw
and
xchg
cmpb
jo
inc
scas
ret
mov
sub
das
push
add
and
lds
push
add
adc
movsl
popf
mov
push
mov
push
mov
push
and
out
mov
or
sbb
push
inc
mov
hlt
lods
ja
xorl
enter
inc
popa
dec
aad
cwtl
jns
lods
clc
add
xor
inc
push
mov
inc
es
cmpsl
mov
dec
shll
push
and
xchg
pop
lret
pop
jl
das
shrb
xor
call
ja
ret
push
mov
mov
jp
pop
add
jnp
ja
dec
sub
int3
jg
sub
ja
imul
xor
lods
xchg
stc
xor
lret
push
or
push
lock
dec
icebp
es
and
in
in
or
lcall
xchg
mov
sub
ja
testb
adc
les
mov
fcmovne
lret
psrlw
cli
ds
xor
push
jle
mov
push
ss
mov
push
aad
aam
shl
mov
sbb
shl
cmc
inc
mov
xchg
cmpsb
shll
mov
gs
outsl
push
mov
and
or
mov
es
imul
ljmp
lds
pop
push
inc
jmp
hlt
lret
push
pop
mov
jmp
stos
sub
addr16
mov
sub
push
push
shlb
rolb
cmc
xchg
dec
in
sbb
or
lock
xlat
pop
dec
movsb
push
fdiv
cmp
dec
xchg
test
xchg
mov
cmp
xor
cli
into
out
popa
packssdw
subb
jae
in
mov
pop
fcoms
inc
jp
movsl
sbb
das
push
or
out
fdivs
aaa
sub
arpl
dec
xlat
fldenv
je
mov
or
fdiv
mov
add
inc
jmp
repnz
aam
jo
call
test
mov
cmp
scas
das
dec
iret
jns
xor
es
pop
cmpsl
sbb
sub
inc
int
jecxz
sub
push
adc
or
lahf
repz
pop
ficoms
inc
adc
lds
lock
xchg
add
sbb
rcll
add
mov
adc
outsl
out
dec
jge
iret
rorb
loopne
fistl
ds
pop
mov
loopne
add
cmp
jl
fiadds
dec
nop
dec
cld
les
in
xchg
test
xor
and
fdivrl
jge
cmp
jg
test
jecxz
or
sub
testl
jmp
mov
mov
lret
stc
movsb
pop
mov
inc
cmp
sub
orl
inc
rcrb
mov
xor
cwtl
dec
lock
or
fimull
sbb
cmp
movsb
dec
insl
sub
setns
and
and
sysexit
sub
loop
test
imul
daa
ljmp
jno
shrl
inc
cmp
mov
lods
add
in
mov
mov
and
sub
aaa
in
push
sub
push
lahf
sbb
aam
ja
out
rcll
scas
push
mov
data16
sbb
and
lcall
jno
ret
lock
fcmove
xor
pop
aas
add
add
jg
xchg
mov
movsl
mov
pop
sub
stos
movsl
fcomps
mov
enter
lods
mov
add
and
ds
fisubl
sbb
pop
mov
lock
pop
sub
orl
insl
xor
inc
fiaddl
cmp
imul
cmp
cmp
jo
lahf
cmp
jg
pop
fcoml
pop
xchg
mov
fmulp
cmpsl
lcall
or
cld
sub
cmp
mov
jbe
stos
dec
mov
jb
in
ljmp
and
setne
stos
jle
call
pop
xchg
testl
pop
mov
or
scas
shrl
mov
mov
outsb
shll
fs
cmp
test
test
std
fadds
mov
movsb
fcmovnbe
add
sub
push
das
jno
jl
ret
push
mov
and
decl
pop
leave
in
loop
fcomps
in
pushf
dec
pop
xlat
sub
sbb
cmp
aad
xor
push
push
mov
mov
and
pop
sti
mov
fcmovbe
xor
sbb
add
add
imul
jecxz
js
sub
mov
sub
ja
jnp
dec
clc
sub
push
cmp
jb
stos
pop
sbb
stc
xor
scas
jb
add
orb
gs
frstor
hlt
lahf
mov
push
shl
mov
mov
adcl
push
mov
repnz
es
shrb
ljmp
cli
lcall
push
xor
jo
xchg
lahf
cmp
shlb
idiv
jmp
sub
push
fsubs
lret
adc
lods
xor
mov
pop
clc
test
xchg
fisubrl
dec
xorb
rclb
or
mov
sub
stos
stos
mov
mov
xor
stc
loopne
inc
jl
pop
add
sbb
push
push
movsl
addr16
and
jno
add
push
lret
fstl
jo
xor
jne
or
test
leave
pop
add
dec
orb
xor
xchg
adc
sbb
roll
outsl
jnp
std
pop
lret
push
pop
insl
mov
pusha
test
std
int
bound
rclb
imul
and
mov
pop
arpl
cmp
push
cmp
mul
mov
ljmp
xor
xchg
add
or
jne
movsl
jne
ret
ret
aam
loop
ficompl
loop
jl
in
adc
pop
xchg
push
mov
cmp
test
mov
sub
xchg
sub
mov
out
jb
stc
mov
or
pop
jge
shrb
fstps
clc
imul
mov
dec
or
aam
push
neg
cs
sbb
dec
sbb
pusha
add
sub
aas
dec
outsl
or
mov
pop
lock
jmp
test
jmp
pop
xor
sbb
subb
ficompl
jmp
inc
clc
adc
mov
push
popf
aaa
pop
mov
ja
sbb
mov
cltd
ret
push
mov
jo
mov
ret
insb
repz
dec
inc
sbb
dec
inc
lea
in
nop
sarl
fisttps
ds
pop
inc
fucom
stos
mov
mov
pop
movsb
sbb
push
jo
xchg
sbb
lods
int
popa
or
bound
push
in
sarl
and
jmp
or
loopne
outsl
lock
sbb
je
sub
dec
test
xlat
push
mov
cmpsb
mov
orb
rclb
je
outsb
nop
jne
adc
or
pop
dec
push
sub
mov
mov
nop
sub
add
pop
pop
popa
pop
or
add
cltd
push
xorl
movl
test
and
and
push
or
and
test
in
sahf
les
loopne
addr16
outsb
cmc
pushl
cltd
pop
sarl
or
decb
les
mov
and
pop
ljmp
jmp
mov
mov
xlat
push
mov
cmp
adc
lret
and
rorb
inc
or
cli
arpl
scas
movsb
sahf
jmp
insl
push
iret
ret
fcmovbe
push
push
stc
insb
movsl
hlt
pop
lods
and
cld
sbb
push
cli
stos
das
dec
xchg
or
xor
push
out
pop
inc
mov
mov
cli
mov
mov
jae
pusha
cs
aas
inc
mov
gs
push
filds
popf
sarl
or
inc
pop
or
mov
push
inc
push
sub
data16
sti
mov
xchg
imul
jne
add
in
xchg
dec
mov
and
push
stos
loope
pop
daa
aad
sbb
adc
jmp
dec
or
mov
mov
mov
dec
adc
mov
imul
daa
sub
jno
inc
sbb
lahf
andb
mov
or
in
inc
inc
dec
or
push
pop
xor
sbb
mov
mov
fcmovbe
lcall
pop
pop
mov
sarl
fldenv
pop
call
cld
jae
decl
xchg
cmp
cs
pop
sbb
push
scas
or
or
fwait
sub
mov
mov
dec
mov
stc
dec
imul
loopne
jl
insl
push
idiv
jbe
sub
cltd
or
outsb
inc
popa
fs
sub
pop
adc
pushf
sbb
in
lcall
aas
lods
ret
push
in
daa
mov
sbb
jne
pop
jp
or
rcll
xchg
mov
and
xchg
shll
cmp
pop
mov
imul
std
push
ja
mov
cltd
in
nop
sub
les
scas
sbbb
inc
jne
mov
adc
ret
mov
sbb
push
rorb
aad
or
adc
ret
pop
jmp
in
aad
mov
fxch
popl
cli
dec
enter
xor
subl
xchg
rcl
sbb
stc
lret
and
jns
repnz
inc
ret
xchg
rcrl
xchg
dec
push
stos
flds
cmc
fcmovbe
jp
sarl
test
mov
je
cmc
mov
imul
jnp
add
lods
fisubs
mov
cwtl
mov
lret
subb
cmp
dec
sbb
pop
pop
rcll
fsubrl
mov
shll
int
bound
add
pop
sub
fcoml
es
insb
pop
jae
nop
jnp
dec
fcoml
jle
push
ret
pusha
cld
and
dec
sbb
inc
mov
xor
insl
cs
in
enter
fldcw
adc
mov
stos
adc
shr
arpl
maskmovq
mull
xchg
testl
pop
arpl
outsl
mov
or
rcrb
ljmp
stc
push
or
ror
lea
mov
and
lcall
cmp
dec
add
mov
mov
sti
mov
out
mov
jmp
int
sub
aas
dec
test
mov
insl
fwait
aad
jne
out
xor
inc
inc
dec
xchg
jle
test
sti
xchg
hlt
lcall
repz
jbe
inc
mov
dec
fisubl
es
and
sub
lret
push
xchg
pop
out
push
sub
clc
cli
cmpsl
int
xchg
fdivrl
test
pop
inc
xorl
rclb
mov
mov
inc
mulb
pop
inc
ret
or
push
dec
cmp
sbb
cltd
and
xchg
dec
dec
mov
hlt
add
mov
jb
xor
push
xchg
jmp
pop
or
jns
cli
xlat
in
mov
nop
and
in
mov
imul
jp
mov
dec
dec
dec
xchg
mov
cmp
mov
mov
std
loopne
test
aas
xor
ds
lcall
into
push
jmp
imul
push
cmc
dec
sub
pop
xchg
inc
jae
fs
and
xor
cmp
xor
icebp
cmpsb
push
into
test
fwait
xlat
jne
push
add
sarl
push
xchg
dec
bound
inc
sub
enter
xchg
sbb
ret
mov
and
jb
mov
cltd
push
outsb
rclb
addl
jg
dec
push
daa
dec
xchg
sahf
mov
out
sub
in
add
cs
push
scas
jne
leave
lock
popa
xchg
ficomps
xchg
sub
xlat
mov
fiaddl
push
insb
lcall
dec
cltd
jne
sbb
and
sbb
inc
jbe
xchg
aas
dec
mov
popa
mov
jmp
inc
lret
and
inc
loope
inc
cmp
int3
icebp
mov
sti
lods
mov
sbb
sahf
cmp
xchg
lods
add
idivb
scas
out
mov
andl
in
iret
bound
subl
adc
add
xor
fmuls
imul
mov
sbb
cmpsb
repnz
jge
mov
sub
add
std
jmp
rcll
lahf
mov
sub
test
mov
mov
adc
dec
and
sbb
cltd
and
xor
rcll
add
out
cmpsl
sahf
or
cmp
aaa
je
data16
xor
mov
and
je
and
pop
or
pusha
in
add
and
sbb
and
arpl
inc
cmp
sbb
cmp
mov
mov
mov
add
adc
sbb
pop
mov
es
fadds
adc
mov
ja
test
sbb
es
jae
pop
pop
loopne
mov
jns
in
lret
inc
push
xor
pushf
lret
inc
outsl
stc
sbb
mov
fwait
popf
adc
inc
xor
mov
jg
push
js
xchg
mov
mov
aam
and
scas
popa
dec
pop
pop
rolb
movb
and
xchg
push
fstps
dec
add
jmp
popa
cmc
push
or
test
mov
ficomps
andl
pusha
add
jmp
mov
sbb
leave
xchg
sbb
stos
push
xchg
mov
sub
repnz
jo
ja
jns
inc
ret
add
fsubrl
sub
cmp
lret
sahf
mov
iret
rcrl
repnz
cmpsl
push
dec
fst
sub
sbb
and
pop
inc
enter
add
mov
inc
sub
xchg
push
xchg
clc
push
lock
icebp
pop
mov
jbe
mov
mov
jb
sub
das
dec
frstor
fiadds
rorl
lret
xchg
bound
mov
cld
mov
rcl
inc
mov
aad
sub
fdivp
mov
sbb
in
shl
and
clc
mov
mov
jecxz
xchg
das
mov
cmp
lret
xchg
out
xchg
sub
adc
pushf
incl
movsb
ljmp
cmpl
sbb
xorb
xchg
or
and
clc
scas
arpl
test
push
sahf
lcall
adc
add
jmp
and
lods
fcmovbe
test
or
mov
or
push
into
xchg
roll
stc
push
push
rcrl
cmp
mov
add
fistpl
cmpsb
push
mov
pop
pop
insb
xchg
adc
and
pop
clc
std
rcr
mov
int3
jmp
lret
jns
xchg
sbb
add
std
cld
pop
mov
negl
jmp
mov
fimull
fiadds
sub
xchg
lock
xchg
dec
jmp
xor
push
cmp
jns
and
dec
cltd
pushf
sbb
insl
xchg
xchg
jae
std
mov
or
lret
pop
popa
loopne,pn
cmp
shll
pop
pop
push
jg
add
xchg
insl
xlat
pop
lds
xchg
xchg
gs
pusha
lock
mov
dec
sbb
push
ss
jg
mov
push
sahf
and
dec
imul
shlb
mov
lcall
pusha
pop
dec
jno
pop
mov
push
aas
fdivs
rorl
test
add
sbb
rclb
xchg
jle
pushf
std
push
mov
inc
cmp
roll
push
and
repz
mov
test
out
out
fisttpl
enter
mov
and
popf
outsb
cmpsb
mov
inc
negb
mov
xor
push
mov
cmp
rcrl
push
mov
sbb
mov
push
inc
push
mov
outsl
and
xor
adc
data16
aam
xchg
inc
add
ja
popf
push
scas
inc
insl
inc
ljmp
dec
jno
adc
dec
pop
out
ds
cld
xchg
and
fwait
push
sbb
mov
inc
and
dec
sub
gs
and
cli
mov
cltd
enter
cmp
add
fdivs
daa
jnp
sbb
call
or
jl
mov
popl
out
imul
lret
add
in
cld
lock
stc
lahf
mov
imul
loopne
or
pop
dec
ljmp
je
shlb
js
frstor
or
ret
sub
lahf
popa
mov
addb
call
sub
std
adc
daa
sub
test
cli
mov
push
pop
mov
jns
and
mov
out
je
sbb
stc
ret
lret
lea
inc
jle
and
sbb
mov
ds
mov
pop
pop
mov
push
filds
dec
xor
adc
add
and
dec
push
lock
push
sbb
mov
mov
xor
jle
ja
dec
in
popf
mov
xor
mov
mov
and
pop
imul
std
mov
xchg
xor
rcrl
scas
pop
sarl
cmp
mov
leave
arpl
test
jbe
inc
out
ficompl
call
inc
sti
movb
jecxz
ja
sbb
test
jle
inc
aam
lret
pop
jmp
and
scas
inc
callw
outsl
add
and
fdivrl
sub
add
or
stos
pop
ret
jp
clc
xchg
mull
cmpsb
add
cmp
movsl
jmp
lret
mov
nop
scas
sbb
sbb
xor
dec
xor
test
push
mov
addr16
mov
cmp
movsl
ficoms
ljmp
add
jge
push
clc
or
xor
xor
jno
shr
scas
jl
mov
movsb
and
push
jno
loopne
add
sbb
and
mov
dec
pop
adc
xchg
and
push
and
jecxz
pop
lea
push
or
scas
add
test
ret
dec
and
or
repnz
scas
xor
adc
outsb
sbb
outsb
into
test
iret
lahf
xchg
stos
sti
stos
pop
or
mov
adc
fidivs
sbb
scas
imul
adc
out
xchg
lds
rcl
mov
cld
jmp
shlb
orb
in
icebp
fwait
mov
push
jg
dec
push
dec
sbb
sbb
dec
mov
lods
pop
cmp
push
adc
jbe
dec
data16
push
out
addr16
mov
mov
fistpl
fadds
xchg
sbb
fdivs
xlat
jmp
popf
sbb
adc
lret
stos
and
pop
dec
push
jmp
pop
mov
jbe
rcrl
cmc
adc
xchg
inc
or
addr16
xchg
ret
and
lock
cmp
hlt
inc
push
inc
aad
sbb
outsb
imul
iret
loop,pn
adc
ja
data16
mov
enter
js
jge
out
aam
loopne
in
scas
jl
ljmp
jp
cmpsl
push
mov
push
test
mov
or
adc
inc
mov
mov
movsl
scas
repnz
cld
mov
inc
sbb
add
repnz
mov
fists
lret
mov
bound
pop
ljmp
daa
cmp
or
sub
imul
xor
popf
push
jecxz
enter
into
aam
jne
flds
dec
lahf
mov
xchg
ret
and
psubd
popf
dec
insl
in
mov
push
popa
cmpsl
mov
and
ret
mov
gs
out
sub
fnstsw
lcall
das
mov
les
not
outsb
adc
inc
push
xchg
test
in
lods
xchg
xchg
cmpl
or
sbb
sub
mov
insb
loop
pop
cld
aam
push
mov
inc
cmpsb
loop
cmpsl
cmp
mov
adc
test
inc
push
imul
sbb
push
dec
insl
pop
mov
xchg
push
cwtl
test
ret
mov
mov
adc
outsl
data16
adc
and
sbb
in
push
fsubrs
xchg
js
add
add
push
xchg
mov
sti
test
pop
jmp
mov
shlb
ljmp
int
push
mov
inc
pop
jmp
pop
lods
lods
inc
add
mov
adc
lcall
cld
loope
cmc
fnstsw
pushf
dec
andl
cmpsl
js
add
mov
iret
in
orb
imul
sub
cmp
int
cmp
xor
fwait
jmp
aam
lret
movsl
fsubr
sub
adc
inc
repnz
sub
adc
lahf
or
sbb
cld
and
lret
xor
in
jge
pop
out
cltd
lret
mov
mov
inc
inc
cmp
adc
pop
cmpl
xchg
movsl
clc
sbb
push
cmpsb
push
push
xchg
arpl
je
pop
mov
xchg
push
mov
xchg
adc
xor
ds
inc
adc
repnz
das
xor
mov
mov
mov
jbe
cld
cmp
push
sbb
negb
jecxz
pop
xor
sbb
jae
into
dec
stc
xlat
aaa
pop
push
or
and
and
cmp
add
or
mov
popf
mov
or
scas
push
sbb
jecxz
fnstsw
sar
xchg
xor
jmp
xchg
loope
arpl
or
jns
inc
adc
or
jmp
push
inc
rorb
push
loopne
jmp
xor
addr16
stos
jle
mov
cltd
fs
mov
ret
clc
lea
sub
jp
movsl
addb
jns
mov
pop
xchg
out
adc
or
jge
adc
dec
push
cmp
xchg
lcall
push
jmp
aaa
rol
fucomi
cmp
or
movsl
and
dec
cld
jb
iret
mov
lcall
pop
jmp
dec
mov
rorl
std
cmc
test
dec
push
xchg
xchg
pop
lods
add
outsb
out
pusha
sub
pop
mov
pop
add
ljmp
and
sbb
test
mov
sbb
inc
cmpsb
xchg
inc
dec
pop
xchg
jle
jo
lds
cmpsb
sub
pusha
mov
in
test
mov
repnz
and
adc
xchg
pop
and
add
cld
sub
stos
int3
inc
inc
rolb
je
std
imul
adc
mov
pop
xchg
outsb
pusha
aam
movsb
frstor
fpatan
mov
mov
mov
xchg
sub
add
dec
pop
xchg
jmp
mov
add
push
xchg
out
sti
and
pop
pop
mov
inc
pop
xchg
xlat
pop
sbb
jl
jns
jecxz
fs
aad
in
adc
push
pop
in
or
inc
das
xchg
mov
mov
jae
clc
inc
int3
sub
mov
test
adc
jb
sbb
push
inc
jae
mov
out
insb
notb
cmp
dec
iret
das
dec
js
mov
cs
cwtl
push
fistpll
mov
int
test
mov
sbb
or
popa
daa
jmp
out
add
call
stos
xor
add
push
lret
aad
mov
faddl
xor
mov
and
lods
xor
mov
xchg
mov
adc
push
push
test
dec
mov
or
cmc
clc
pop
fcomps
sub
sbb
ficoms
jo
cmp
imul
and
and
movsb
mov
ja
popa
rol
sbb
cltd
sbb
ficompl
outsb
add
xchg
lcall
repnz
push
clc
sub
push
inc
add
jnp
sbb
push
sahf
mov
xor
push
fsubrs
pusha
mov
in
scas
mov
or
or
cmp
cmc
fcomi
loopne
sub
scas
mov
cmpsb
dec
nop
aas
roll
mov
lcall
loope
lret
jg
pop
cli
data16
insb
pop
mov
xchg
fnstsw
adc
adc
push
adc
mov
cs
fistpl
cwtl
mov
jge
aaa
xchg
push
xchg
testb
lahf
push
stc
fiadds
xor
add
jnp
ffreep
cmp
and
test
lods
sbb
inc
cli
pop
ss
pop
jo
in
icebp
ljmp
test
add
inc
push
sbb
mov
mov
sub
mov
fadds
test
push
das
aaa
in
ror
jp
dec
xlat
push
jge
jnp
out
dec
inc
loope
jnp
jmp
sbbl
sti
scas
push
outsl
adc
mov
dec
ss
addr16
enter
mov
mov
sbbb
ljmp
xchg
dec
ds
pop
sub
lods
jle
sahf
in
scas
xchg
bound
mov
xor
adc
or
mov
insl
xor
icebp
pop
loopne
icebp
data16
jl
jmp
movsb
fldcw
add
outsl
pop
sti
dec
ret
pop
dec
test
iret
mov
push
out
jbe
out
mov
loope
or
fnstenv
notl
jle
int3
pusha
inc
cmp
addr16
cwtl
pop
clc
jae
popf
push
adc
stos
hlt
inc
dec
ss
mov
dec
call
or
rclb
in
inc
cmc
add
insl
add
lea
xorl
ljmp
cmp
loopne
push
loope
inc
or
xchg
les
test
gs
push
add
add
mov
lahf
sti
addr16
cli
into
sbb
mov
jo
mov
push
notb
out
xor
clc
fldcw
fsubs
shl
push
or
xlat
inc
inc
push
out
mov
pop
push
shl
loope
inc
pop
xchg
dec
gs
out
outsb
xor
mov
rcrl
lcall
cmp
das
mov
repnz
dec
fstpt
mov
aas
and
push
shlb
and
test
fs
mov
mov
mov
mov
or
std
jg
rolb
loopne
into
and
mov
xchg
xor
pop
xlat
mov
add
fimull
dec
leave
xor
mov
push
outsl
push
inc
dec
and
adcb
popf
xchg
or
and
and
jp
mov
repnz
sub
call
pusha
sahf
cmp
inc
mov
add
xchg
mov
pushf
mov
jp
scas
rcrb
adc
es
pop
xchg
out
inc
arpl
aad
jl
xor
add
mov
sub
and
jbe
fnstcw
jne
popa
and
mov
add
inc
js
sbb
roll
addb
leave
mov
sbb
sub
bound
mov
lods
in
xor
mov
push
jg
mov
in
lods
cs
icebp
in
fsubs
lret
xchg
push
mov
rol
dec
shll
and
adc
hlt
divb
inc
mov
lcall
inc
sbb
dec
addl
jmp
push
and
adc
mov
or
lret
imul
sbb
xchg
jns
cld
pushf
sub
cmpsl
cmp
xor
pop
and
mov
clc
les
dec
cwtl
push
into
dec
pushf
les
stc
lret
gs
dec
adc
icebp
movsl
insb
xor
xor
mov
mov
je
push
cmp
mov
add
test
mov
fsubl
movsb
xchg
jae
push
fmuls
pushf
mov
addr16
jnp
lcall
jo
inc
test
add
xchg
push
mov
sbb
daa
inc
adc
and
hlt
stc
in
clc
inc
mov
mov
inc
mov
and
int3
js
mov
adc
bound
mov
inc
add
xor
loopne
setno
or
cmovl
fldcw
dec
cltd
and
lods
cwtl
into
mull
push
out
or
jb
into
xchg
leave
lcall
incl
out
fisttpl
pop
xchg
jmp
int3
aad
aad
es
or
call
jg
mov
fnsave
mov
or
and
pop
cs
out
shl
jmp
mov
inc
scas
mov
in
sub
push
cmp
shll
lods
leave
xchg
xchg
imul
ret
cld
push
mov
fdivr
popf
imul
jle
movsl
pop
push
mov
cli
xchg
ret
pop
dec
into
iret
push
ljmp
mov
js
aam
or
push
nop
xchg
jp
lret
push
push
push
vminss
sbb
sbb
jge
out
adc
mov
dec
in
cmp
mov
xlat
xchg
pop
call
sbbl
popa
cmp
outsb
loop
cmp
cmp
xchg
mov
mov
xlat
out
pop
sbb
cltd
or
xchg
xchg
mov
stos
push
xchg
iret
mov
sbb
mov
fsubrl
xor
mov
out
ljmp
xor
add
fs
lock
out
aad
mov
daa
jg
rclb
mov
or
cs
nop
pop
xor
aaa
cmp
ds
inc
mov
jmp
pop
cmc
ret
pop
movsl
mov
sbb
sub
add
popf
mov
push
cwtl
movsb
pop
mov
mov
outsb
popf
ljmp
es
xor
cltd
and
dec
test
jl
dec
test
repnz
clc
jp
pusha
push
out
and
in
add
push
pop
scas
mov
lods
sub
adc
xchg
daa
out
int
push
insl
or
mov
in
xor
out
sbb
out
and
inc
jnp
mov
add
fdivrl
xor
inc
insb
imul
shrl
in
aaa
sbb
jns
call
cmp
add
sbb
enter
and
mov
aaa
lret
int
cmp
in
je
add
imul
dec
xor
lods
out
test
cmpsl
shll
sbb
test
stc
xlat
int
sbb
hlt
pop
adc
inc
call
add
xor
mov
jmp
fimuls
jnp
add
imul
fdivrs
imul
test
popf
push
mov
xchg
insb
ret
xchg
jg
add
jo
jecxz
lcall
or
xchg
sbb
cs
xor
ret
xchg
and
inc
push
xor
add
or
mov
push
or
out
sti
ret
pop
fwait
sbb
movsl
and
push
insl
inc
push
sub
sbb
int
popf
repnz
and
mov
mov
push
mov
push
lret
xchg
sbb
pop
loop
jbe
jae
push
cs
xchg
cld
jae
mov
mov
cld
repnz
aaa
dec
mov
mov
test
inc
decl
inc
jg
mov
dec
push
aad
xor
addb
mov
imul
popa
outsb
xchg
xchg
pop
push
enter
lds
shlb
xor
dec
inc
les
ljmp
rolb
mov
popl
xchg
xchg
aam
or
push
mov
out
das
sbb
dec
jbe
mov
mov
mov
out
outsb
xor
insl
mov
dec
cli
jmp
insb
sbb
mov
cmp
call
or
jg
je
mov
xor
mov
cmp
orb
inc
inc
mov
jmp
and
xor
xchg
mov
popa
mov
inc
push
pop
mov
xchg
out
adc
xchg
aam
stos
inc
sbb
ret
xlat
sbb
fs
inc
imulb
imull
and
xchg
dec
pop
pop
mov
icebp
cmp
lds
pop
cwtl
jle
mov
out
push
inc
jp
sub
or
je
out
jge
scas
xor
mov
mov
lods
fcmovnb
and
push
xchg
jns
dec
insb
pop
arpl
sub
rclb
mov
mov
jge
pop
ljmp
or
fidivrs
mov
mov
and
test
pushf
cmpsb
pop
int3
push
int
mov
dec
pop
sbb
adc
mov
push
or
or
mov
jge
cli
lret
or
or
in
mov
dec
sbb
or
ja
enter
rorl
push
xchg
xor
aad
push
pop
into
shlb
hlt
dec
das
stc
fldcw
fs
push
push
and
cli
je
mov
pop
addr16
fistl
movsl
mov
or
jnp
lds
add
mov
pushf
dec
mov
jo
add
cmp
jge
mov
cmp
xchg
sbb
jge
int
pop
lods
int
popa
nop
rcrb
repnz
mov
stos
movl
divb
mov
pop
sub
mov
inc
movsb
pop
scas
rolb
push
dec
and
inc
jmp
sub
std
pop
pop
inc
mov
ja
sbb
ret
loopne
jbe
int3
loopne
sarb
mov
jne
mov
add
ficoms
mov
pop
and
mov
fcomp
or
ror
adc
sub
les
sub
insb
push
xlat
pop
mov
xchg
mov
mov
push
std
mov
jle
mov
gs
arpl
imul
mov
mov
mov
jns
mov
aam
push
std
movsl
lret
sub
popf
fcoms
push
outsl
jmp
hlt
ja
cmpsl
adc
lret
cld
cmp
xor
or
cmp
pop
mov
adc
and
add
pop
imul
xor
pop
repnz
push
add
mov
xor
frstor
pop
fbstp
clc
sbbl
lods
inc
sbb
pop
es
xor
push
and
pop
xlat
mov
addr16
mov
std
out
cmp
je
out
xchg
fimull
idivl
mov
sbb
and
loope
shl
sbb
adc
and
jbe
addr16
inc
dec
lds
fisttps
roll
in
lahf
aas
push
jge
mov
sbb
pop
add
fdivs
mov
js
xchg
jg
fwait
bound
scas
sub
pop
dec
fmull
jg,pt
repz
enter
add
das
mov
pop
mov
adc
or
loop
ds
cmp
loop
cmpsl
mov
add
mov
es
sbb
sub
pop
or
jo
call
mul
repz
ss
mov
in
stos
and
out
xchg
enter
sub
add
jle
mov
shlb
iret
xlat
jo
cld
push
dec
ret
bound
cmc
mov
cmc
inc
xchg
and
jo
out
addr16
movsb
dec
and
sub
scas
xchg
dec
xchg
adc
psubsw
inc
mov
push
mov
mov
xchg
mov
in
sbb
loop
mov
repnz
jne
icebp
pop
push
stos
mov
xor
repz
sahf
sbb
sti
jge
and
inc
pop
mov
stc
and
pushf
and
xor
insb
dec
cs
jp
bound
inc
bound
loopne
dec
out
movl
int3
cmp
test
lods
cmpb
test
in
or
cli
mov
scas
ret
popa
pop
loope
add
out
cmc
test
mov
sub
sub
mov
jno
test
movsb
xchg
mov
imull
fcmovnbe
arpl
aad
in
cmp
pop
xchg
ret
mov
jbe
out
add
jecxz
sbb
rorl
jnp
or
insl
lcall
sbb
mov
cmpsb
or
icebp
imul
cwtl
jo
pop
cmc
sti
push
ljmp
aas
sbb
stos
sti
pushf
addl
inc
stc
idivb
icebp
icebp
pushf
aam
adc
xchg
jp
rcrb
testb
adc
faddl
test
xchg
mov
je
xchg
pop
movsb
rol
stc
xlat
mov
mov
cld
cmp
aad
xchg
mov
cmpsl
adcl
fnstsw
jle
cwtl
sub
popl
sarb
mov
add
out
or
mov
test
xchg
shll
sbb
or
loopne
setnp
sub
lret
adc
adc
push
fcmovnu
js
dec
in
pop
popf
gs
test
push
or
sbbl
jb
pop
stc
push
and
mov
cmpsb
jmp
clc
cmpsb
scas
data16
stc
jecxz
mov
cmpsl
add
dec
call
out
repz
sub
mulb
mov
xchg
adc
cs
push
test
xchg
lock
sbb
je
roll
jae
adcl
inc
mov
out
adc
xchg
lret
mov
cltd
dec
mov
stc
adc
jmp
loop
jb
testb
test
test
push
inc
nop
inc
xchg
ret
and
pop
popf
sub
pop
lods
cmp
cmp
inc
mov
xor
aaa
ret
dec
xor
push
push
add
inc
divl
pop
push
mov
jo
and
dec
ss
lahf
insl
pop
imul
scas
cmp
sub
fstp
cmpsb
pop
xchg
mov
mov
ret
int3
test
outsb
stos
lods
sarl
mov
or
sahf
sti
or
ret
subl
or
mov
int
ficomps
idivl
jg
movsb
daa
sub
addl
std
push
out
mov
sub
pop
shrl
add
ds
jg
dec
mov
jne
jb
jle
shrb
pop
es
mov
cmp
js
dec
xchg
scas
sti
pop
mov
or
jb
xor
cld
fsubp
int3
dec
lods
lods
or
sbb
jg
cli
mov
aas
leave
xor
test
mov
or
imul
gs
iret
mov
or
movsb
jmp
xchg
outsl
cltd
mov
mov
call
mov
test
pop
push
push
lock
or
testb
jnp
xchg
sub
xchg
mov
fisttpll
and
xchg
xchg
push
jmp
dec
es
push
call
mov
add
mov
push
fimuls
sti
pop
test
pushf
adc
dec
cli
loope
dec
fisubs
mov
xchg
in
adc
sar
loope
in
lcall
inc
fst
inc
jne
or
icebp
out
test
daa
xchg
aam
mov
pushf
pop
sbb
sbb
ret
ret
pop
fwait
cmp
or
into
int
mov
lea
xchg
sub
mov
mov
jns
popa
ret
shll
add
filds
fiadds
push
push
add
sub
or
jge
je
xchg
cltd
sub
roll
xor
push
fstps
push
inc
insl
push
inc
add
xchg
mov
add
sbb
push
stos
push
hlt
cmc
cld
jecxz
aas
movb
sbb
mov
inc
inc
sub
les
sti
stos
loope
and
sub
xchg
aaa
imul
mov
cli
dec
push
imul
pop
mov
in
push
push
adc
cs
xchg
clc
outsl
fwait
lock
mov
xchg
adc
mov
addr16
fsubs
add
dec
sarl
or
mov
std
out
dec
sti
dec
adc
xchg
mov
bound
imul
adc
xor
mov
je
and
push
push
in
xchg
xchg
xchg
lods
lods
dec
femms
and
mov
sti
adc
sub
bnd
mov
or
outsb
je
loopne
imul
dec
divl
leave
fiadds
fdivrl
push
push
pop
dec
pop
in
push
adc
lret
subb
adc
pop
enter
push
cld
outsb
pop
bound
jg
ljmp
pop
xchg
pushl
push
lock
mov
xor
lahf
sbb
lds
jno
sub
data16
movsl
xchg
aas
icebp
xchg
mov
mov
and
das
mov
push
sub
scas
outsl
xchg
cwtl
fnstsw
scas
xor
xor
into
and
js
out
out
mov
add
sahf
pusha
mov
es
mov
dec
mov
inc
rcll
pop
fwait
dec
pop
mov
sub
lret
add
pop
das
movsb
jns
loope
stc
and
xchg
test
or
cmp
pushf
psubusb
es
sbb
flds
subb
jle
out
xchg
imul
and
outsb
sahf
sub
sbbl
jo
mov
cmp
aad
jnp
sbb
les
stos
data16
cmpb
pop
pop
cs
mov
call
cwtl
or
daa
testb
ljmp
and
jno
mov
call
mov
arpl
pop
jp
mov
pop
pop
pop
loop
rolb
inc
jecxz
inc
jo
lahf
add
ljmp
jp
xor
adc
push
cmp
push
pop
inc
and
mov
push
jp
pop
pop
jp
aam
mulb
jge
pop
inc
imul
jl
cmp
push
xchg
sbb
push
test
sarl
jmp
outsl
cmp
sbb
sub
int3
in
mov
or
xchg
or
add
mov
push
push
jp
or
push
pusha
sti
std
sub
outsb
insb
adc
push
and
push
sub
and
aam
popa
addr16
mov
xchg
pop
cld
popa
movsl
and
sbb
or
or
push
mov
cli
cmpsb
push
cltd
or
jmp
int
inc
push
nop
iret
clc
adc
test
pop
pop
sbb
rolb
mov
insb
xchg
ds
lret
mov
dec
insl
lahf
notb
and
stc
xchg
xchg
filds
cmp
lods
mov
mov
jp
ja
mov
sub
int
aam
pop
pop
cmp
jae
in
aad
fsubrs
movsb
psrlw
sbb
mov
dec
lods
inc
add
divb
jbe
cmp
insl
rcll
fstpl
lcall
mov
and
sub
test
cmova
xchg
jnp
sub
inc
jnp
enter
xor
cli
into
stos
dec
and
xor
imul
les
ret
xlat
jns
scas
mov
leave
sbb
loopne
shrb
outsb
sub
mov
fs
sbb
mov
rsqrtps
shrl
inc
arpl
pop
cmp
mov
push
sub
clc
lret
dec
jmp
mov
jns
or
in
inc
dec
fcomp
lret
push
adc
outsb
xchg
push
adc
hlt
mov
push
cmpsb
mov
lahf
popa
lea
or
nop
mov
mov
jne
jae
sbb
cmp
sub
mov
je
cmpb
or
outsb
icebp
hlt
xlat
lods
scas
cmpsb
in
fcoml
test
push
cmp
int
ljmp
lods
in
test
dec
arpl
pop
gs
loop
and
mov
fsubs
sbb
mov
jmp
cmpb
sbb
pshufw
push
cli
jne
rorb
push
inc
inc
sub
nop
xchg
jle
push
idiv
jl
pop
pop
cwtl
stos
adc
sbb
fwait
test
ret
fucom
xor
mov
and
cmp
xchg
and
pmaddwd
push
and
pop
pushf
or
push
jo
jecxz
mov
test
pushl
mov
in
add
fldt
scas
xorl
cmpsl
cmp
sbb
iret
jnp
jl
sub
vorps
scas
xor
popa
out
jge
adc
jae
shrb
push
mov
mov
aas
jnp
nop
cmp
int3
leave
jns
or
ja
gs
out
sub
hlt
push
aad
xor
and
in
xor
testl
xchg
cmpsl
int
dec
inc
mov
mov
jg
daa
jmp
cs
call
mov
popa
orb
movsl
pop
int3
push
pushf
int
scas
sbbb
dec
push
imul
mov
outsl
inc
sti
cwtl
ljmp
jno
in
xchg
inc
test
inc
inc
inc
in
xor
and
jmp
mov
xor
leave
test
mov
hlt
mov
push
xchg
jecxz
mov
and
push
pusha
pop
rolb
lods
jb
test
jl
in
and
popa
and
or
adc
mov
shrb
or
mov
imul
fdivrs
fwait
and
out
dec
xchg
pop
pop
cmp
inc
sub
aad
test
add
xchg
clc
test
mov
lret
jae
aaa
sub
cmp
lods
enter
fs
shrl
add
aam
pusha
and
xor
pop
popf
jno
sbb
cmp
sbb
xor
gs
repnz
xor
out
sub
fnstsw
xchg
scas
sarl
mov
ss
or
mov
jg
pop
xchg
test
push
or
out
in
pop
sbb
aam
xor
loopne
jnp
jne
pop
mov
stc
subb
push
pop
cmp
dec
nop
lds
cltd
lret
inc
mov
movsl
pop
daa
lcall
xlat
push
inc
repnz
mov
movsb
mov
int
mov
pop
fstpt
push
test
fdivrp
xchg
jmp
in
jp
cmp
add
dec
lock
fstps
push
or
mov
movsb
cwtl
xchg
or
jo
jle
dec
int3
cmp
adcb
push
ret
cmpsl
mov
mov
jp
add
fidivl
xchg
push
int
mov
pop
push
jle
addr16
out
push
pop
or
enter
fsub
pop
sub
inc
or
arpl
int3
push
push
xchg
add
xchg
xor
jno
xor
mov
cmp
xchg
pop
mov
jmp
ljmp
push
pop
push
stos
mov
test
add
insb
sbb
repz
in
std
aaa
mov
test
xchg
adc
rol
jo
outsb
and
push
jnp
push
inc
xor
rcl
mov
or
aas
movsb
mov
ja
idiv
sub
imul
pop
sub
dec
je
iret
push
and
dec
out
jo
cld
loopne
adcb
add
cmpsl
push
imul
adc
dec
sbb
lret
sbb
lret
mov
gs
push
inc
iret
jb
xlat
mov
test
in
sbb
mov
loopne
mov
outsl
lret
shll
aam
push
add
push
jmp
mov
inc
cmp
lcall
sub
fmuls
cld
sbb
lea
cmp
pop
push
aaa
cmp
ja
cli
mov
pop
cmp
ja
in
fidivrs
lea
stos
in
cmp
es
sub
mov
ds
cli
push
and
clc
xor
and
in
rol
test
jns
imul
push
adc
xor
or
mov
and
mov
cmp
sti
notl
push
dec
ret
jle
je
mov
mov
aaa
dec
fnstenv
stos
inc
pop
mov
sub
mov
xlat
fadds
pop
mov
imul
loope,pn
xchg
inc
cmp
aaa
fnstsw
std
jae
mov
je
cmp
mov
sub
adc
flds
cmp
movsl
insb
lret
cmp
and
xor
xchg
leave
rcll
cmc
std
int3
or
ficomps
adc
push
fisttps
mov
mov
pop
sub
pop
inc
repnz
aas
ja
or
fbstp
dec
xor
sub
fiadds
int
call
jae
xchg
ret
cli
push
add
sarl
mov
pop
dec
mov
cmc
adc
sar
or
js
xchg
xor
adc
cmpsb
xchg
xchg
add
ja
cmp
mov
jno
ljmp
decl
push
fstl
xor
fmulp
or
movsb
hlt
fisubrs
jge
sbb
push
and
in
or
adc
cmp
int
ret
jbe
cld
out
mov
xchg
xchg
or
andnps
jae
fstps
negb
cmp
lret
lret
cmp
pop
sub
bound
and
add
das
xor
mov
clc
pop
or
xlat
cmc
out
mov
lcall
sub
or
fstps
mov
jbe
push
mov
std
and
test
stos
sbb
mov
loop
ficoml
ss
mov
jge
push
mov
jle
fwait
jne
xchg
jbe
pop
mov
push
shlb
clc
lahf
lock
xchg
aam
jp
jge
or
inc
or
std
fistpl
pop
repz
dec
jecxz
add
aaa
and
cmp
fdiv
mov
in
stos
cmpsl
mulb
cmp
xchg
mov
ljmp
into
stc
sub
rol
gs
sete
pop
cld
ffreep
mov
andb
mov
arpl
xchg
call
mov
mov
or
mov
pop
jo
xchg
ljmp
ss
add
in
mov
ret
and
ds
rcrl
out
jo
scas
aas
fdivrs
out
hlt
pop
jns
loope
gs
ja
xchg
fwait
rorl
negb
movsb
jle
enter
sbbl
mov
sbb
mov
mov
xorb
inc
lods
jnp
and
sbb
push
mov
mov
mov
cwtl
xchg
loopne
fidivs
xor
cmp
jg
imull
mov
lods
pop
or
scas
xchg
push
jno
adc
dec
mov
sub
ljmp
je
fcom
outsl
in
sub
dec
leave
mov
cmpsl
cmpsl
movsb
mov
mov
jbe
pushf
roll
nop
or
cmc
lret
mov
xchg
sbb
es
push
test
call
sub
or
push
js
and
lock
or
sbb
sub
test
outsl
mulb
testl
push
and
lods
int3
mov
sbb
mov
loope
out
cmpb
mov
test
in
mov
adc
andl
mov
les
cwtl
sbb
imul
cmp
mov
cmp
in
mov
fwait
mov
fistl
mov
jns
hlt
inc
and
pop
daa
idiv
mov
inc
adc
and
mov
clc
fmul
adc
andb
popa
enter
daa
in
into
fnstcw
or
cmp
iret
xor
xchg
pop
and
aad
loope
xor
inc
add
add
jmp
rcl
push
inc
dec
and
xor
push
shrl
mov
adc
nop
fidivs
jae
sub
ljmp
mov
and
fwait
cvtps2pd
inc
xor
rclb
xor
jo
mov
out
aas
popf
movsb
ds
ljmp
movsb
lahf
mov
fdivrs
outsb
add
sbb
push
stos
je
pop
ds
loope
pop
and
xchg
sub
push
adc
inc
xor
nop
adc
cmpsb
cltd
lret
mov
jbe
xchg
pop
leave
lds
ss
sub
imul
mov
inc
add
inc
mov
cmp
cld
adc
ja
insl
jns
scas
arpl
jg
cmpsl
es
sbbb
nop
xchg
cmp
lcall
std
std
pop
or
enter
repnz
adc
and
sub
test
inc
push
test
or
sbb
mov
and
shlb
lret
sub
ds
fimull
dec
jo
or
mov
dec
aam
xor
pop
fildll
push
mov
lea
ret
and
xor
pop
cmp
ret
mov
adc
sbb
add
adc
xor
push
sbb
mov
fadd
mov
push
adc
lret
mov
sti
mov
shl
sub
into
sbb
mov
sub
fdivrs
sahf
lods
mov
mov
scas
sub
in
sbb
jnp
repz
call
pop
sbb
cmp
leave
pop
jg
push
lea
lahf
adc
lds
aaa
mov
jb
inc
mov
test
or
cmp
xor
sub
call
or
jne
or
sub
mov
add
pop
mov
sbb
inc
dec
lea
push
addr16
mov
cmp
mov
mov
sti
mov
sbb
std
lcall
cli
adc
mov
lods
sub
xor
sbb
rorl
test
cmp
sub
test
cmp
pop
fdiv
icebp
jne
rcrb
xchg
pusha
imulb
sub
cmp
ret
adc
push
xchg
sub
lahf
pop
ret
out
js
repnz
lcall
mov
stos
or
or
xchg
rorb
pop
rcrl
cmp
insb
inc
push
xor
sbb
sbb
push
fcomp
and
jle
pushf
mov
mov
cmpsl
lret
mov
jbe
pop
out
inc
fnstcw
movsb
fstps
loope
lret
fidivrl
mov
xor
inc
mov
cmpb
frstor
test
sbb
out
sbb
push
je
stos
mov
xchg
cmpsl
int3
scas
mov
sub
mov
xor
or
xchg
in
cmpsl
xchg
cmp
sub
insl
ja
stos
xor
dec
and
shll
int3
jp
cld
and
mov
or
sub
jg
das
adc
pop
jecxz
dec
jg
cmp
xor
inc
loop
fs
imul
mov
hlt
sub
je
sbb
mov
fsubr
bound
shl
cmp
std
andb
loope
push
cwtl
mov
movsb
and
js
loop
inc
add
mov
fcomp
cmpl
jge
in
cmp
dec
lcall
xchg
sub
repnz
sarl
frstor
stos
out
arpl
cmp
inc
dec
inc
jne
sub
lds
dec
adc
mov
xor
je
nop
nopl
cmp
pop
popf
outsb
outsl
lods
mov
stos
decb
cvtpi2ps
dec
fs
cmp
pusha
push
lret
sub
mov
jae
js
pushf
jnp
out
inc
fs
stos
or
jae
mov
mov
jnp
fcoml
adc
iret
xchg
inc
clc
insb
mov
out
mov
sbb
out
cmp
je
or
dec
jno
mov
fcmove
adcl
cmpsb
stos
push
dec
or
inc
sbb
daa
mov
mov
jl
sub
push
mov
gs
push
cli
jmp
dec
inc
fists
mov
dec
loopne
test
mov
inc
ss
pushf
loopne
push
mov
in
cld
pop
sahf
sub
mov
inc
hlt
dec
xchg
xor
adc
out
push
xchg
jnp
push
inc
mov
das
ror
or
out
jb
lds
mov
shll
test
dec
cmpsl
xor
dec
shrb
pop
aas
sbb
mov
dec
inc
jns
sbb
sahf
mov
aaa
loope
jge
ret
lea
test
insl
stos
add
dec
cmp
rcr
and
out
repnz
outsl
movsl
pop
filds
dec
ret
cmp
sbb
pop
lret
mov
scas
adc
pop
fisttpll
cmp
mov
in
jb
push
cmp
dec
xchg
fdivrs
ret
lahf
aas
inc
scas
inc
js
push
cmpsl
out
adc
mov
stos
mov
jbe
les
xor
sbb
adc
pop
adc
leave
cmp
movsb
aas
arpl
ds
daa
cmpsb
push
aam
push
ficompl
inc
mov
movsl
mov
jle
popf
cld
inc
decl
stos
cli
out
mov
mov
divb
cmp
inc
ss
dec
ret
or
push
insb
pop
fdiv
addr16
xchg
je
pop
in
inc
mov
ljmp
xor
out
sbb
std
mov
cmp
repnz
shll
jb
cmp
cmp
add
rcrl
fcomps
mov
mov
sar
xor
loope
fiadds
test
mulb
icebp
fucomip
cmpsl
enter
daa
push
mov
loop
ljmp
bnd
pop
sub
in
cmp
push
pop
jle
daa
das
es
mov
sbb
std
jne
popf
out
xchg
negl
jnp,pn
pop
outsl
cwtl
ljmp
push
imul
sarb
push
cwtl
pop
lods
push
xchg
sub
movnti
sti
in
dec
lock
insl
repz
aam
out
inc
subl
jae
xchg
push
out
inc
xchg
cmpsb
mov
sbb
insl
dec
sub
add
aam
inc
fs
jae
lods
lds
add
jbe
sti
pop
arpl
clc
data16
test
repnz
repz
jmp
addb
dec
cld
inc
shll
xor
pop
jp,pn
std
xchg
in
push
xchg
decl
mov
cmp
mov
icebp
sbb
in
adcb
mov
les
daa
mov
imul
xorl
out
imul
js
sbb
cmp
xchg
sub
jecxz
xor
adc
scas
test
inc
rep
repz
cmp
add
sbb
popf
ljmp
xorl
adc
cli
dec
insb
mov
sahf
inc
push
ja
mov
mov
scas
dec
xlat
insb
hlt
dec
dec
dec
lods
int
lods
dec
arpl
mov
movsb
xor
jp
xor
icebp
rcrl
fadds
adc
and
pop
loop
mov
xchg
ror
pusha
stc
xchg
aas
push
jecxz
das
xor
popa
movl
in
push
leave
push
dec
imul
cwtl
jae
pushf
and
dec
iret
add
jecxz
sbb
divl
sbb
and
cmp
movsl
ja
or
mov
sbb
jns
pop
push
xor
ficomps
call
mov
xchg
jmp
loop
sbb
into
lea
mov
bnd
lea
xlat
sub
adc
sbb
pop
scas
mov
xchg
jl
rcl
test
mov
push
nop
enter
mov
gs
dec
xchg
cli
fidivs
sub
inc
jl
mov
ja
std
sub
call
test
inc
ret
inc
push
mov
mov
sbb
shll
xchg
scas
ficompl
loopne
cmp
sti
sbb
xchg
scas
aas
addb
mov
push
mov
inc
sbb
xchg
comiss
into
ja
adc
inc
add
mov
test
mov
outsb
push
test
loope
sub
insl
jl
mov
out
cmpsb
mov
sbb
popa
stos
insl
ja
popf
pop
aam
pop
sbb
gs
pop
xchg
cmp
xor
cwtl
ret
call
cld
cmp
arpl
cli
lds
add
mov
cmp
iret
push
push
mov
scas
enter
sub
fidivrs
js
daa
cmc
cli
sub
inc
inc
dec
add
xlat
push
sub
add
push
fsubl
xchg
adc
mov
ds
mov
sbb
sbb
mov
adc
fcompl
in
jecxz
jne
add
aad
fnstenvs
int3
cmp
mov
out
pop
push
mov
fidivl
es
xlat
xchg
mov
mov
test
sub
push
cmp
and
out
push
sub
aaa
mov
jl
push
ret
orb
or
in
pop
insl
call
push
popf
aaa
in
add
mov
hlt
inc
and
push
std
push
lods
lret
rolb
xchg
mov
mov
jnp
or
out
test
ret
outsb
jne
pop
imul
adc
or
ljmp
cmp
imul
test
es
loopne
sbb
adc
add
push
add
or
jl
xchg
push
std
out
add
jl
je
or
hlt
xchg
jbe
aas
jnp
in
jge
aas
xor
ljmp
ret
and
push
add
cmp
mov
int
mov
ljmp
push
fadd
repz
cmpsl
mov
push
jmp
mov
mov
and
sbb
jb
mov
push
dec
dec
fdivs
popf
out
insl
inc
pop
gs
mov
jg
mov
mov
lea
pusha
lret
cmpsl
gs
sbb
movsl
dec
imul
xor
dec
insb
sub
addr16
mov
mov
mov
pop
std
cmp
mov
insl
mov
jo
aad
push
ficoml
movsl
push
inc
sbb
xor
std
cmp
cmpsl
mov
leave
pusha
xchg
jbe
mov
sub
lahf
sub
in
cli
leave
adc
dec
js
mov
and
pop
mov
push
pop
xor
mov
sti
mov
lcall
adc
int3
iret
add
cmp
adc
inc
mov
xchg
fidivs
mov
test
dec
leave
bound
jo
cmp
and
fdiv
fwait
cmpl
daa
jo
pop
and
test
sbb
cld
ret
es
data16
cwtl
push
repz
lret
pop
xor
dec
fisubs
and
int
pop
mov
mov
dec
inc
data16
and
cmc
xlat
int
scas
adc
dec
flds
call
imul
dec
mov
xchg
mov
ds
mov
pop
mov
cmpl
xchg
mov
idivl
sbb
mov
ljmp
lea
dec
mov
je
pop
dec
mov
out
pop
aam
mov
out
rolb
lret
inc
cltd
mov
rcrb
mov
out
jl
jp
mov
dec
mov
inc
adc
xor
xchg
sub
daa
les
jo
mov
adc
cwtl
and
inc
xchg
int
and
insb
fiaddl
mov
subb
popf
std
cmpsb
js
or
mov
inc
shll
inc
mov
or
cmpsl
mov
lea
dec
add
pop
mov
add
loop
pop
xchg
dec
jmp
movsb
imul
xchg
sbb
dec
movsb
js
orl
adc
inc
imulb
mov
inc
push
stos
gs
cmpsb
xchg
mov
push
jg
sbb
int
js
lock
jmp
dec
or
cmpsb
outsb
lods
rclb
lcall
push
cltd
inc
mov
lods
adc
or
test
xchg
add
xor
xor
xchg
jge
shrl
jl
cmp
xor
idiv
dec
stos
inc
jg
sub
or
nop
mov
mov
xchg
push
or
adc
sub
scas
xor
dec
mov
cs
xor
aaa
mov
je
mov
push
rcl
pop
stc
mov
ljmp
stos
lret
sahf
mov
xor
inc
lret
or
fbstp
xchg
dec
imul
adc
lret
pop
imul
rcl
xchg
and
loopne
xor
insb
mov
dec
push
or
or
mov
lods
lds
push
adc
pushl
adc
imul
inc
shlb
sub
cmp
out
sub
adc
mov
stos
dec
push
cmpsl
inc
arpl
je
push
sub
ja
fmul
lds
cmc
inc
scas
add
insl
dec
icebp
cld
jl
movsb
inc
adc
xchg
fcompl
fcmovnu
mov
push
sarl
test
stos
mov
push
int3
int
xorl
cld
jno
fwait
in
xlat
cmp
mov
cmpl
adc
sbb
daa
stos
inc
inc
xchg
and
fcoms
dec
inc
mov
push
lcall
popa
shlb
cmp
out
aaa
mov
dec
mov
adc
jl
inc
lcall
das
jb
addr16
data16
mov
incb
adc
mov
ja
or
fs
scas
mov
mov
adc
je
dec
cld
dec
and
xchg
subl
inc
push
mov
mov
jl
repz
gs
and
mov
cmc
cs
and
add
ja
lods
sub
mov
add
mov
jno
cli
xor
dec
lock
and
fisubl
push
fwait
popf
in
es
xchg
imul
pop
mov
xor
stos
test
addr16
cwtl
mov
lret
push
lock
adc
icebp
int
mov
jns
jo
pusha
mov
fnsave
mov
xchg
jns
in
cs
and
xchg
jo
data16
lcall
repnz
xor
cmp
in
jne
test
in
addb
pop
test
mul
outsb
rcrl
push
jne
push
xor
js
dec
dec
dec
stos
xor
add
push
mov
into
inc
xchg
xchg
mov
cmpsl
in
and
jns
sarb
push
mov
sbb
xor
and
dec
add
lock
pushf
sub
push
dec
push
cli
xchg
sbb
dec
addr16
xor
xor
fs
cmpsb
mov
gs
jl
jecxz
out
stc
sub
sti
into
cltd
pop
lea
insl
add
mov
mov
ds
xor
pop
inc
test
int
pop
hlt
popf
add
es
into
out
xor
xchg
insl
add
adc
insl
mov
push
adc
scas
loopne
or
mov
push
jmp
fwait
fs
and
insb
inc
push
xorl
push
in
rclb
ss
cmp
decb
imul
add
mov
dec
hlt
xchg
shr
out
gs
jo
ret
mov
or
add
hlt
das
rorl
out
pop
lcall
sbb
fistpl
int
es
mov
leave
in
int3
cmpsb
xchg
sub
and
icebp
aaa
xchg
fbstp
cmp
mov
add
cmp
imul
sahf
pop
ljmp
rol
mov
push
xchg
cmp
pop
jecxz
xlat
pushl
test
sub
xlat
popf
jle
ja
bound
jecxz
pop
pop
cmc
aad
push
in
addr16
daa
dec
xchg
inc
pop
or
gs
xor
loop
scas
mov
pop
fcmovu
outsb
rcl
sbb
ljmp
sbbb
popa
mov
mov
fnstsw
mov
add
pop
pop
aas
aaa
and
inc
dec
lahf
dec
mov
movsl
push
dec
sbb
movsl
addb
fs
fiaddl
add
clc
into
shlb
sbb
or
in
dec
cmp
push
push
fdivl
push
or
add
push
mov
lcall
movsb
fistl
or
scas
inc
sahf
mov
js
sub
mov
push
or
out
sub
add
mov
jo
and
ja
cmp
fcmovnb
push
sbb
sbb
xchg
push
notb
pop
rorb
dec
or
adc
jge
add
stos
sbb
fisttpll
icebp
movsl
push
loop
mov
push
jl
int3
call
pop
jle
fldt
dec
es
lret
mov
fsub
popa
and
nop
sub
xchg
cmp
and
seto
js
pop
xchg
adcw
mov
fnstsw
pop
xchg
ret
xchg
inc
jnp
ja
xorb
test
inc
jnp
add
xchg
imul
cmp
push
mov
jle
fcmovu
jmp
inc
pop
gs
insl
mov
or
bound
loopne
es
cmc
ljmp
lods
repz
popf
mov
and
and
mov
jle
and
idivl
sbb
adcl
sub
mov
movsl
xchg
inc
dec
das
dec
push
jae
data16
and
cli
cwtl
cli
push
push
push
test
mov
pop
jmp
pop
in
jne
ss
cmp
xchg
daa
inc
mov
addb
repnz
or
jb
mov
xor
mov
or
cmpsl
stos
xchg
add
aam
lds
add
cmp
js
xorl
notl
rolb
cs
pop
pop
ret
aam
dec
fnstsw
cwtl
add
sahf
mov
adc
push
jae
mov
and
xor
push
call
loope
clc
pop
leave
xor
fdivs
fwait
add
pop
dec
sbb
push
pushf
adc
pop
pop
shl
lds
jge
les
mov
dec
fimuls
jae
popa
sbb
add
arpl
cmp
jmp
sti
pop
xor
das
cmpsl
xchg
jmp
mov
mov
xor
mov
push
cmpsl
stc
fsts
push
aas
lret
push
ljmp
and
xchg
or
test
dec
movlps
push
into
push
inc
lret
sub
jb
or
test
in
sbb
cmpb
cmc
rolb
sti
test
jecxz
mov
inc
rorl
or
add
and
out
vshufps
test
pop
in
pop
fcmovu
stc
popa
or
mov
out
repnz
xchg
lcall
and
pop
bound
enter
push
mov
shl
pusha
jg
clc
jbe
push
sarb
mov
push
mov
in
sub
movsb
sbb
fnstcw
clc
mov
push
pop
push
push
add
loop
inc
dec
int
inc
shll
ja
pop
adc
add
arpl
xchg
ret
xor
fstps
jl
or
and
jp
lcall
scas
add
out
mov
cmp
pop
pop
xchg
aad
jmp
mov
sub
adc
ret
sub
mov
or
inc
fstpl
pop
cmp
or
cwtl
std
push
and
rclb
adc
jmp
jl
sub
jmp
pop
adc
mul
ja
add
push
fs
push
das
in
test
cltd
or
jg
mov
rcr
outsl
xor
pop
jo
push
cmc
insl
pop
xor
xor
xchg
movsl
fidivrs
icebp
xor
and
xor
lds
roll
stos
add
fistps
adc
and
scas
xchg
mov
pop
call
jne
out
mov
sbb
push
pop
int
and
mov
xchg
cli
mov
push
sarb
cmp
jecxz
scas
cmp
ret
imul
js
jmp
jae
fs
mov
leave
mov
and
or
bound
sbb
or
pop
das
imul
sti
add
aad
loop
out
mov
testl
and
mov
jmp
xchg
cli
fwait
outsb
ret
sub
aaa
sahf
bound
or
jmp
stos
adc
stos
popf
and
jecxz
cmp
add
xchg
and
stos
cmp
pop
mov
sbb
movb
inc
in
popf
xor
jle
lods
inc
int3
stc
mov
jae
pop
inc
push
sti
pop
test
xor
je
gs
add
xor
mov
xchg
pop
sar
popa
lret
pusha
pop
or
push
sbb
inc
or
int
iret
jg
and
inc
sub
inc
adc
dec
jb
or
and
push
shr
adc
push
test
ljmp
int3
pop
pop
mov
jne
dec
adc
scas
fbld
gs
shrl
sub
push
into
mov
xchg
mov
cld
insl
mov
mov
and
inc
divl
lret
lock
sbb
mov
pusha
or
icebp
jmp
mov
cmp
adc
jno
cmpsb
jbe
dec
dec
out
push
cmpsl
icebp
sahf
mov
out
leave
jle
fnstsw
cltd
shr
dec
outsb
and
cli
xor
xor
cmp
mov
jg
inc
inc
sarb
inc
cmp
arpl
push
cmp
out
je
cmc
mov
int3
push
out
in
pop
out
mov
jp
cmp
test
and
lds
ret
mov
sbb
loop
push
sub
and
cmp
loopne
push
dec
mov
and
ds
out
jo
leave
lahf
inc
push
ljmp
jnp
push
popf
fcomps
fbstp
cmp
mov
push
pusha
push
xor
inc
in
mov
sub
loope
jge
adc
mov
sbb
lcallw
scas
xor
xlat
stos
mov
push
and
dec
mov
and
lods
cmp
icebp
or
jo
push
je
scas
pusha
pop
pop
xor
sbb
xorb
sbb
mov
dec
cld
lock
push
xchg
nop
aam
sub
push
pop
cmp
sub
jg
popa
neg
add
scas
imul
fcmovbe
add
inc
push
add
adc
lock
stc
xchg
imul
xor
out
sarl
aas
aas
or
fcoms
clc
and
pop
pop
out
in
sbb
aad
jecxz
lock
cs
int
loope
imul
lahf
xchg
xor
movl
mov
fsubrl
lea
faddl
sbb
inc
pop
leave
cmc
push
insb
scas
clc
data16
dec
jbe
adc
or
mov
cmp
adc
test
or
mov
addr16
sbb
mov
push
stc
adc
repz
aam
jae
lods
les
push
mov
pop
mov
or
fcoml
test
or
xchg
or
inc
into
inc
insl
ret
add
loopne
xlat
push
test
mov
xchg
adc
and
mov
mov
add
xchg
adc
cmp
dec
push
jo
inc
mov
add
ret
andl
jmp
je
xor
in
inc
pop
pop
push
xor
inc
adc
xor
pusha
jnp
orl
repz
cmp
insl
flds
jae
dec
push
xchg
aaa
fs
inc
lret
sahf
mov
sub
cmp
sti
xor
mov
test
lods
iret
repz
loopne
ss
push
repnz
adc
cmc
cwtl
mov
xor
scas
pop
movsb
andl
iret
mov
ss
negl
cmp
mov
testl
sub
mov
add
daa
mov
mov
or
jl
roll
dec
mov
jmp
nop
stos
jecxz
inc
rolb
scas
xchg
pop
mov
pusha
mov
mov
ja
ds
es
dec
ret
adc
addb
sbb
dec
shl
mov
mov
pop
aam
adc
in
int3
and
cmp
lcall
add
push
cmp
mov
outsb
das
push
popa
mov
push
xchg
pop
add
imul
xchg
push
mov
mov
js
cmp
flds
jno
addl
jnp
ljmp
mov
adc
adcb
bound
jmp
test
push
out
out
fisubrl
mov
adc
mov
xchg
and
adc
mov
add
insb
push
xchg
dec
sub
jle
cmpsl
test
sbb
xor
mov
fbstp
mov
lahf
icebp
sub
xor
enter
pop
inc
sbb
jp
pop
pop
mov
insl
and
mov
cwtl
nop
add
pop
mov
jae
adc
mov
shlb
inc
test
cmovp
inc
fldenv
mov
test
mov
ret
cmc
cmp
daa
movsl
mov
ret
add
jns
sahf
shlb
cld
adc
fistl
out
add
out
cli
fists
xchg
shrb
mov
js
jge
sub
add
sbb
mov
aaa
in
in
lds
lods
pop
out
mov
pop
dec
jp
pusha
add
test
sahf
lea
repnz
jl
in
popf
sub
xor
xchg
movsb
cli
cmc
mov
loopne
mov
fs
push
pop
je
push
lds
and
sub
data16
scas
aam
ja
in
sahf
stos
mov
ret
and
fdivp
leave
test
stos
mov
sbb
ja
pop
popf
mov
and
std
xor
and
imul
xor
adc
push
lods
jb
cmp
mov
sbb
xchg
push
divl
arpl
mov
and
pop
mov
lods
repnz
mov
pusha
movsl
adc
xchg
or
pop
push
xchg
mov
in
lds
push
inc
push
jne
les
pop
push
sub
mov
pop
push
xchg
xchg
int3
mov
adc
sarb
xor
push
xchg
jp
inc
pop
jno
sbb
cmp
ljmp
push
add
idivl
icebp
push
gs
les
fs
sub
int
jge
mov
mov
xor
mov
test
xchg
adc
push
push
or
mov
fiaddl
ljmp
add
scas
scas
adc
cmp
inc
xchg
nop
sub
jl
sbbl
sbb
mov
jge
test
xchg
pop
lock
mov
in
inc
bound
sbb
mov
push
test
jl
cmp
out
cmp
fs
jb
sti
repnz
and
imul
and
push
mov
and
add
inc
insb
sbb
push
dec
lret
mov
ret
add
insb
dec
inc
imul
pop
mov
adc
fisubrs
idivl
adc
jge
cmc
cmp
fs
out
fadds
out
test
mov
mov
aam
xor
lcall
loopne
push
mov
enter
inc
cld
daa
mull
lea
cli
data16
loop
lea
in
mov
mov
adc
repnz
dec
movsb
out
pop
adc
popf
lods
popf
add
jl
jae
cmp
into
dec
cmpsb
xchg
ja
stos
scas
sub
ss
iret
inc
push
or
adc
cmp
pusha
maxps
cmc
and
mov
lea
cmp
addl
mov
sbb
dec
repz
rcll
pop
fst
pop
test
ret
aas
fdivr
out
push
fbstp
xor
inc
aaa
and
push
jns
in
loope
mov
cmp
cmpsl
pop
inc
inc
sub
cmpsb
jp
into
push
iret
xor
fs
add
cmc
jno
cmp
sub
sub
call
and
mov
sti
adc
shl
ret
sti
xor
repz
jp
sbb
mov
and
idivb
mov
and
mov
cs
pop
mov
sub
jbe
scas
pop
mov
insb
sbb
data16
mov
leave
mov
cmpsb
jl
out
pop
arpl
out
in
jl
and
mov
xor
aam
pop
mov
or
sti
cmpb
subl
dec
into
dec
push
test
jle
arpl
xor
iret
in
aam
adc
pushf
mov
lock
mov
adc
adc
shll
pop
lcall
in
mov
sahf
mov
scas
mov
dec
mov
movsl
jb
clc
sbb
xchg
or
and
push
sbb
adc
cmpb
lret
int
or
push
loopne
xor
mov
ljmp
pop
ja
fs
inc
mov
popf
pop
and
xor
push
xlat
push
sbb
cmpb
cmpsl
aad
fldt
xchg
cmp
push
pushf
xchg
test
insl
xchg
ret
mov
mov
xchg
dec
inc
jecxz
daa
xor
rolb
addr16
ja
mov
jae
and
jne
add
push
push
adcb
pop
stos
movsl
sbb
sbb
mov
shll
jge
ja
dec
mov
sub
fwait
aad
arpl
stos
ss
pushf
test
inc
jp
test
inc
xor
and
xchg
cs
add
rcr
cs
jp
sub
ds
fstps
xchg
in
ficoms
push
aad
aam
lahf
mov
and
mov
das
popa
enter
sahf
mov
movsb
push
fbstp
mov
popf
mov
rcr
dec
push
std
inc
push
mov
dec
push
and
scas
cmc
pop
inc
xchg
scas
push
out
pop
pop
call
xchg
lea
push
pop
push
cmp
mov
in
iret
decb
pop
cmc
mov
xchg
movsl
test
testb
imul
adc
jns
add
shll
in
pusha
xchg
cmpl
mov
lret
pop
fsubrs
testb
add
mov
out
enter
int3
xchg
imul
loope
dec
ret
sahf
push
fmull
xchg
out
jmp
addr16
and
inc
enter
sti
jnp
int
test
add
stos
clc
sbb
mov
and
test
mov
out
hlt
and
and
sub
xor
dec
ja
andb
jecxz
jo
popf
je
mov
fsts
mov
rorb
das
in
subl
sbb
mov
add
push
adc
xchg
jecxz
mov
sub
xor
movsl
cmp
mov
push
adc
fisubl
mov
and
stc
or
dec
xchg
enter
lods
cmpsb
mov
into
xchg
pop
aas
mov
fwait
stos
movsb
jns
cmp
mov
fcmovbe
jb
test
and
mov
clc
xchg
shl
ficoms
pop
mov
or
scas
dec
or
decb
mov
into
push
les
mov
pop
xor
aam
fs
push
mov
popa
test
insl
jbe
mov
jge
std
popa
daa
add
sub
aam
jne
in
in
jo
cmp
stc
test
or
adc
imul
lock
adc
sti
cmp
mov
inc
lahf
sahf
add
mov
mov
cmp
mov
jae
ljmp
add
and
bnd
pushf
ljmp
movsl
faddl
xchg
and
roll
adc
mov
out
pop
rorl
push
adc
mov
leave
inc
cmp
leave
adc
sub
jle
push
cs
fdivrl
sub
testl
mov
in
adc
shl
adc
inc
out
dec
sahf
es
nop
mov
push
cli
mov
xor
sub
pop
xchg
xchg
hlt
inc
inc
hlt
cmpb
mov
int3
sbb
orl
stos
icebp
mov
fistl
rorl
outsb
data16
lock
sub
inc
sti
aam
jnp
inc
fistpl
inc
sbb
jp
aam
sbb
push
arpl
cmp
shll
fidivl
and
rolb
cmp
mov
add
or
or
cmc
or
adc
loope
pop
mov
test
into
test
pushaw
clc
jge
mov
bound
add
aam
jo
stos
add
dec
fiaddl
push
bound
pusha
push
xor
cwtl
mov
mov
and
mov
sub
add
into
mov
ds
pop
cmp
and
lods
movsb
xor
mov
das
insl
sti
fs
xchg
lock
xchg
imul
dec
mov
add
movsl
push
push
jl
int
sub
mov
jle
lret
nop
lock
or
fisubrs
cli
sbb
inc
int3
fldcw
cli
stos
int3
ret
jg
mov
jbe
data16
cmc
insb
sti
sub
fs
test
pop
or
vsqrtss
movsl
push
jmp
scas
mov
arpl
fidivl
or
leave
arpl
adcb
pop
mov
dec
dec
addr16
loop
aad
incb
mov
int
push
jmp
cmpsl
fsts
outsl
lods
hlt
sub
sbb
rclb
jb
push
push
dec
testl
ljmp
pop
pop
xchg
jle
mov
add
jl
cmpsb
insl
popf
std
nop
jge
push
mov
rcl
rorb
mov
xchg
pop
inc
fs
xchg
sahf
imul
push
lods
sub
into
gs
mov
push
movsb
leave
aaa
out
or
or
pop
mov
cmpsl
pop
rcrl
imul
mov
fwait
into
int
mov
adc
mov
movl
iret
adc
and
jb
fsub
shrl
pop
insl
jg
test
lea
std
insl
jo
adc
xchg
test
xchg
and
daa
aam
xor
and
lcall
sbb
mov
mov
jae
sbb
and
adc
dec
cwtl
xchg
fidivrs
mov
jno
lahf
out
sbb
shl
jne
pop
es
cmc
xchg
adc
xchg
pop
pusha
ja
inc
pusha
adc
jecxz
push
std
pop
cmc
fs
mov
sub
imul
test
mov
xchg
and
fimull
xchg
std
sbb
push
ljmp
sub
jle
icebp
pop
mov
les
push
cmpsb
arpl
jae
mov
mov
fcmovnu
int3
shl
jl
cwtl
popf
push
fwait
xchg
sub
inc
daa
sub
push
sbb
and
sahf
mov
mov
sbb
lcall
xchg
and
clc
pop
cli
sub
fnsave
inc
mov
inc
or
push
in
push
mov
iret
pop
jno
mov
adcb
test
push
mov
aaa
insl
rolb
xor
dec
push
mov
lea
ljmp
and
mov
fadd
rclb
lahf
mov
dec
pop
lods
cmp
leave
js
outsb
adc
lods
jo
test
lret
pop
inc
les
hlt
gs
and
pop
inc
lret
in
cmpsl
pop
mull
das
lds
mov
iret
mov
mov
and
les
stos
adc
inc
shl
xchg
or
sbb
adcl
lret
fcoms
les
movsl
loope
xor
sub
cmc
negb
or
ret
add
pop
mov
aaa
fsubrs
in
ja
mov
inc
add
or
pop
and
add
or
in
jle
cmp
and
sbb
and
pop
sbb
cmpsb
xor
inc
icebp
mov
pop
neg
or
inc
test
movsb
inc
cmc
adc
ss
fistpll
push
jp
in
xchg
xchg
jl
mov
mov
sub
outsb
jne
outsl
dec
ds
ja
cmp
int
jne
loop
sub
mov
dec
leave
dec
aas
sbb
mov
pop
stc
sbb
je
cmp
pop
inc
sbb
inc
push
and
lock
inc
xchg
sbb
fs
popf
add
cmp
mov
rorb
not
xchg
sbb
or
cmpsl
stos
dec
jl
mov
inc
loope
ja
push
sbb
pop
mov
hlt
fsin
add
in
dec
cmp
jae
inc
dec
dec
idivb
add
xchg
scas
scas
dec
in
imul
ljmp
ret
movsb
shrl
sbb
xchg
nop
mov
leave
push
loopne
sub
adc
jmp
ret
inc
and
pop
hlt
lret
cwtl
rcll
add
jnp
test
out
cmpsb
adc
cld
ret
ljmp
mov
dec
push
insl
dec
cmpsl
cmp
sub
fistpll
testl
jbe
dec
scas
push
xor
mov
orb
inc
sahf
pop
imul
punpckhbw
mov
hlt
or
popa
enter
ret
ljmp
cmpsl
shr
std
out
and
cmp
pusha
gs
push
mov
push
push
push
mov
xchg
pop
push
pop
jno
sub
xchg
lcall
int
dec
aaa
jb
mov
andb
mov
das
or
fs
int3
jae
inc
add
in
shlb
push
mov
call
in
pop
sti
jnp
leave
bound
mov
data16
and
stos
pop
add
xchg
aas
fists
scas
dec
sbb
sub
outsl
mov
outsb
adc
daa
jp
lds
test
fs
data16
push
mov
adc
xchg
outsb
xlat
add
push
xor
dec
xlat
test
ret
lock
push
pusha
xor
pop
sahf
sbb
jl
jbe
jbe
and
cmp
xchg
or
test
in
dec
xchg
pop
cld
stc
shl
in
sub
in
xlat
dec
outsb
outsl
ret
xchg
jg
lahf
outsb
xchg
xor
pop
push
xor
in
mov
jne
adc
sub
addr16
inc
je
insl
loope
call
stos
sbb
mov
cmpsb
xor
xchg
aam
jnp
adc
lret
xchg
xchg
xchg
aas
or
das
mov
lcall
fidivrs
mov
stos
lds
pop
insl
leave
push
mov
push
jecxz
and
lods
adc
cmpsb
stos
in
in
stos
mov
mov
or
ror
cltd
or
pop
xor
mov
jp
adc
cmc
in
dec
push
jmp
mov
or
inc
pop
hlt
pusha
dec
iret
cs
pop
xchg
add
scas
fildl
xchg
cmpl
mov
fldl
cmp
into
ficomps
xchg
cli
xorb
fucom
lds
daa
jnp
loop
push
inc
adc
sahf
xor
leave
xchg
inc
cmp
sub
xor
push
sub
test
pop
leave
sub
sub
in
sub
in
jns
sub
in
jmp
mov
lahf
lea
testl
xor
pop
popa
std
addb
push
rep
out
dec
adc
or
scas
sbb
mov
mov
sbb
mov
jl
popa
cld
adc
sbb
and
xchg
or
fcom
jg
in
scas
test
out
sar
add
imul
imul
mov
and
popf
aas
cmp
dec
test
aad
aam
outsl
leave
sti
adc
ljmp
adc
pop
push
inc
mov
outsb
loop
adc
int3
mov
test
lret
cmp
fucomp
repnz
ds
adc
test
lahf
dec
pusha
and
sub
enter
and
pop
std
jnp
mov
mov
adc
call
xor
shrl
pop
mov
std
push
les
lcall
jb,pt
pop
or
adcb
xchg
fwait
dec
mov
in
fists
ss
pushf
mov
outsb
mov
mov
stos
add
push
sub
jl
test
lds
loope
enter
jp
fidivl
sbb
scas
xlat
sbb
jmp
add
pop
adc
adc
mull
cmp
sahf
pop
sbb
les
sbb
cmp
fistl
and
lock
inc
inc
popf
fildl
inc
sarl
cmp
cmp
repnz
or
jns
stc
mov
int3
sbb
cmp
call
sbb
adc
pop
cmpsl
data16
jge
popa
clc
or
xor
push
dec
nop
add
pop
rorb
push
movsb
inc
xchg
mov
mov
std
andl
cmp
daa
adc
xchg
fisubrs
ret
add
cmp
jl
imul
adc
fldln2
ret
nop
pop
mov
loop
jns
push
jle
fs
aas
in
adcl
inc
enter
dec
and
ja
and
dec
mov
jno
pop
sub
cmpsb
addb
fisubrl
mov
shl
inc
jl
test
flds
rol
mov
fimull
or
insb
mov
and
shll
rcl
leave
fistpl
sbb
mov
pop
mov
cmpsl
push
out
adc
cmpsl
unpcklps
pop
mov
push
gs
rcll
jl
cmp
mov
test
xor
imull
mov
movsb
sbb
mov
push
cmp
cmp
ffreep
jge
sbb
addb
out
pop
jae
ljmp
xchg
scas
outsl
lock
fstp
push
aaa
push
sub
inc
es
push
inc
andb
mov
dec
call
out
aas
mov
sarl
rorb
popa
dec
cmp
mov
imul
adc
cmpsb
add
in
outsl
pop
fdiv
call
cltd
iret
outsb
mov
xchg
lahf
and
sbb
xchg
push
xchg
sbb
cmp
aaa
xchg
pop
mov
mov
add
dec
shrl
outsb
in
dec
lea
std
mov
xchg
notl
jnp
movsb
xlat
mov
cmc
stc
mov
bound
xor
lods
adc
dec
sarl
popa
xchg
push
sbb
cmc
sbb
idivl
xchg
cmp
rol
jge
out
mov
mov
rorb
jnp
add
fs
ror
push
and
lea
xorb
sbb
push
shlb
lret
into
inc
sub
inc
mov
pop
das
mov
sbb
pop
push
cs
push
adc
lods
xor
insl
xchg
add
pop
outsl
mov
pop
inc
mov
pop
sahf
stos
add
sub
lahf
and
addb
cmp
outsb
test
pop
inc
arpl
push
pusha
xor
lods
sti
addl
mulb
aas
addr16
or
cmp
arpl
ret
es
sahf
fnsave
dec
fcoml
mov
std
out
call
es
ret
fs
fimull
cmpl
mov
aaa
push
xor
or
xchg
scas
pop
rol
dec
sub
cmc
mov
stc
testb
push
imul
push
ja
inc
fnsave
ss
fsubl
jne
les
sbb
sbb
cmpsb
das
adc
and
daa
lret
sti
adc
sbb
add
out
ds
mov
and
pop
hlt
lock
fcompl
rcll
hlt
cmp
sub
inc
xchg
shr
test
add
inc
in
pushf
sub
and
inc
aas
jns
push
gs
mov
sub
jle
mov
jb
int3
jno
jmp
and
xchg
add
or
mov
push
xor
movsb
inc
test
add
xchg
ficomps
in
fptan
data16
jne
mov
push
sub
inc
cltd
imul
pop
or
jnp
fsubl
stc
push
fsubrl
pop
mov
sub
lcall
pop
dec
jl
into
push
xchg
mov
push
dec
dec
leave
add
outsl
es
adc
lock
ret
ljmp
cmp
out
mov
pop
cmc
movsb
inc
push
mov
clc
pushf
in
inc
mov
sti
sbb
lahf
xor
mov
sbb
addr16
push
in
xor
or
loop
jo
and
jle
dec
push
mov
push
and
jne
add
aaa
stc
popf
in
das
cmpsl
sub
pop
arpl
sub
sbb
ret
js
out
pop
stos
out
pop
cwtl
mov
es
das
pop
movsl
loop
add
adc
jae
mov
out
xor
mov
sub
es
jle
pop
mov
sub
nop
lcall
jle
das
lock
rcrb
cmp
jb
mov
test
cmp
in
fs
pop
es
mov
jbe
xlat
imul
sti
mov
xchg
mov
bound
arpl
testl
stos
popa
inc
test
out
push
pop
mov
lcall
gs
jbe
lret
nop
das
ds
popa
sarb
and
push
outsl
push
mov
xchg
mov
xchg
xchg
lock
scas
dec
xor
arpl
dec
cld
jmp
sub
aam
aad
or
xor
inc
adc
mov
mov
int
lods
addr16
gs
jge
fwait
inc
push
cmp
xlat
insb
lahf
xor
jle
popa
bound
insl
cmpsl
sahf
mov
loop
jecxz
sahf
sti
jnp
out
fs
pusha
fiadds
shrl
add
popa
jmp
xor
orl
or
fsubrs
jmp
aad
xor
out
aam
bound
and
iret
mov
clc
cld
push
cmp
in
pop
stos
fiaddl
imul
dec
pop
mov
aaa
push
jb
pop
sub
push
sub
pop
mov
inc
out
ficompl
and
inc
inc
lret
push
out
out
popw
add
imulb
xor
lret
repnz
stc
mov
mov
fmull
fadd
out
repz
rol
addb
scas
push
addr16
mov
fstpl
gs
or
imul
dec
jno
rclb
or
push
and
test
mov
repz
mov
test
aas
neg
jns
xor
ffreep
xchg
aad
out
cltd
cmpsb
shl
fs
ds
push
cmp
call
jp
add
sbb
movsb
xor
mov
insl
mov
loope
orl
aad
mov
jbe
cmp
fsubrs
dec
adc
jge
xor
ja
movsl
xchg
sbb
pusha
push
mov
push
cmp
pop
jmp
mov
jae
andl
std
mov
movsl
nop
xchg
xor
or
cmp
mov
adc
jge
or
sahf
and
andl
push
sbb
mov
jbe
lock
lds
int3
or
int3
shrl
mov
iret
jbe
fldlg2
jmp
jmp
mov
push
cld
mov
mov
pop
and
aaa
xor
jmp
mov
lock
inc
and
xchg
int
push
pop
shrl
and
lahf
mov
push
pop
mov
rcpps
sub
rclb
cwtl
sbb
popf
jmp
leave
xorb
push
jae
and
stos
xchg
fs
test
cs
clc
sarl
pop
xchg
lea
insl
cmp
fstps
imul
sbb
shll
cmp
push
sub
mov
popa
int
cmpsb
cmp
call
in
movsl
neg
mov
dec
xor
sub
mov
cmp
fildll
sub
sbb
add
ret
imul
jo
out
jg
aas
mov
loop
lods
icebp
add
push
adc
pop
pushf
movsb
les
mov
cmp
jle
sub
xchg
mov
adc
or
cmpsb
ljmp
scas
outsb
cwtl
mov
scas
fcoml
das
add
lds
nop
xchg
add
sbb
adc
mov
lahf
loopne
adc
ja
or
imul
dec
jne
fldt
lds
inc
dec
mov
rorl
dec
cmc
jae
pop
sbb
add
mov
inc
js
jg
ja
adc
adc
testl
inc
gs
popf
push
sti
test
out
mov
sbb
cwtl
ljmp
int
dec
scas
pop
xlat
call
lcall
pushf
imul
mov
ror
scas
xchg
movntps
insl
mov
ss
xchg
loop
inc
mov
out
test
or
and
cmp
add
mov
clc
test
add
cld
or
mov
scas
ja
les
xor
adc
jl
add
loope
fbld
into
hlt
mov
sub
fwait
xor
or
ljmp
adc
pop
and
into
jb
sbb
mov
lock
aad
pop
loopne
cmc
adc
xlat
mov
sub
pop
repnz
aam
hlt
ja
je
inc
mov
dec
inc
cmp
sbb
cmp
mov
push
dec
fisttps
shll
jecxz
std
mov
insl
add
xchg
xor
lahf
mov
aas
aad
cwtl
jae
jp
sub
mov
insb
fnstsw
or
jecxz
add
pop
stc
sbb
icebp
sti
popf
movsb
mov
lcall
pop
cmp
pop
roll
push
jb
pusha
and
inc
xchg
movsl
ror
sarl
outsl
pop
jnp
rdpmc
fidivl
call
mov
out
cwtl
cmc
mov
sub
rcl
adc
call
inc
dec
rolb
add
loop
xlat
cmp
mov
cmp
js
pop
pusha
out
cmp
scas
mov
cmp
pop
xchg
mov
lods
mov
rorb
insb
mov
dec
add
ret
leave
stc
out
xchg
add
out
pop
cmp
add
mov
clc
adc
lods
push
inc
mov
das
jl
add
cwtl
stc
andl
push
fisttpl
ret
sbb
and
xchg
xchg
repz
push
sub
out
adc
into
cmpsb
in
arpl
jmp
mov
pushf
adc
scas
push
lahf
and
popa
repz
cmp
movsb
or
pop
insb
and
lret
mov
sub
shll
mov
shl
sbb
roll
stc
aam
rcrb
pop
xchg
mov
xor
test
cmpsl
jb
outsl
and
cmp
addb
dec
hlt
fnstsw
out
insb
cmp
adc
push
aas
iret
in
inc
mov
rcrb
adc
pop
mov
and
ds
sbb
into
mov
test
add
clc
sub
jbe
adc
jmp
pop
pop
xor
insb
xchg
aam
dec
lcall
je
xor
and
inc
xchg
mov
mov
xor
or
jge
pop
xor
push
lret
fcmovb
aaa
pop
add
pop
jne
inc
jb
and
pusha
int3
xor
lock
gs
arpl
lret
push
pop
adcl
mov
inc
xchg
or
cmp
jnp
lods
inc
jne
jmp
mov
lods
jns
and
aaa
stos
mov
leave
inc
lcall
dec
mov
sub
xchg
mov
cli
fdivr
js
aaa
mov
or
imul
xor
into
stos
jg
lahf
adc
cmp
mov
pop
jg
incb
cmp
sub
mov
aaa
fwait
mov
mov
xor
shll
and
fs
jo
push
testl
add
add
in
mov
test
pop
sahf
and
inc
mov
shl
xor
lea
adc
loop
rcrb
sub
and
jnp
daa
lds
xor
xor
stos
push
test
sub
fbstp
inc
cmp
daa
or
jmp
mov
cmp
aas
ja
fs
fidivrl
pop
or
test
mov
sahf
outsl
lret
pop
xor
sahf
or
std
push
cmp
and
test
loope
ja,pt
enter
pop
mov
rclb
shrb
std
mov
bound
mov
in
das
push
xchg
mov
ljmp
xor
stos
inc
sbb
popf
std
gs
jno,pt
fwait
test
ja
fstl
icebp
cwtl
movsl
adc
sub
mov
incb
inc
dec
leave
push
and
cmp
xchg
scas
pop
sub
scas
iret
cmpsb
clc
aad
es
adc
aaa
mov
lret
mov
xchg
daa
cmp
mov
jecxz
hlt
xchg
jle
fsubrs
inc
popa
adc
mov
inc
sbb
inc
or
gs
inc
pop
lods
imul
out
cmp
dec
int
jl
mov
lret
xchg
outsb
roll
xor
daa
add
pop
je
ret
dec
cmc
sbb
lods
cmp
sub
dec
gs
jge
aas
push
rol
repnz
mov
dec
sub
ficoms
mov
pop
test
cmp
pop
jl
adc
stos
lea
add
test
rcl
insl
stos
out
nop
arpl
push
push
ljmp
adc
sti
add
mov
push
shl
push
clc
jnp
mov
mov
xorl
or
xor
fwait
les
shlb
aaa
xor
inc
leave
push
ror
dec
push
sub
cmp
and
inc
dec
dec
and
add
xlat
cwtl
shlb
cmp
in
shll
or
notb
xor
scas
gs
and
pop
xor
mov
lock
push
xchg
cs
call
inc
out
in
or
jbe
sub
ffree
jecxz
dec
aas
lea
mov
arpl
ja
pop
push
std
mov
sbb
sbb
mov
outsb
mov
mov
shl
or
out
fsubl
stos
and
cmp
popa
shr
jmp
into
sbbl
fcomps
addl
cmpsl
nop
js
shlb
fisttps
pop
repnz
out
or
fsubs
sbb
jmp
mov
bound
cmp
dec
loopne
mov
dec
mov
xor
rcll
push
mov
mov
xor
sbb
or
ss
mov
imul
fs
mulb
xchg
aas
mov
sbb
movsb
jnp
sbb
repz
adc
xchg
xchg
outsb
pop
push
sub
xchg
fmuls
test
sub
xchg
cs
aaa
jne
pushf
cmc
lret
fiadds
xor
daa
ljmp
mov
lret
cmpsl
cld
adc
jge
fdivr
cmp
fmuls
xchg
sbb
sbb
mov
dec
pop
mov
test
dec
adc
add
cli
inc
repz
adc
imul
pop
call
adc
std
dec
xor
cwtl
inc
jb
lret
mov
sub
xor
rcll
into
addb
int
sub
pop
ja
jns
push
lret
test
lea
cmp
loope
movsl
mov
pop
into
xchg
aas
popa
mov
iret
pushf
push
scas
jmp
fs
xor
loopne
mov
jb
adc
sub
int3
sti
sar
in
pop
dec
mov
sbb
adc
loop
cmpsb
daa
pop
pusha
dec
les
call
rorb
test
nop
ss
cmp
insb
sbb
fidivrl
push
dec
mov
sub
gs
out
mov
dec
sbb
data16
pop
jne
scas
xchg
jmp
mov
pop
mov
pop
xchg
cmp
aas
fsubl
test
jecxz
out
pop
nop
popa
popa
pusha
mov
or
stos
mov
fs
pop
xor
lret
mov
sbb
inc
rorb
out
insl
xchg
movsb
lds
fcmovb
je
or
fwait
cmp
std
scas
lods
pop
fimuls
jmp
ret
sbb
pop
sub
jg
loopne
fldcw
jl
in
inc
sti
cltd
arpl
nop
fst
xchg
cwtl
mov
xchg
cmpsl
xchg
ljmp
cld
clc
or
push
sub
sbb
rcrb
pop
dec
cmpsb
inc
mov
arpl
fldenv
dec
inc
iret
cmp
fiaddl
mov
pop
push
aad
bound
cmpsb
leave
push
mov
scas
jb
lcall
mov
push
jo
and
adc
cmp
xor
sub
lcall
jp
daa
pop
repnz
mov
and
push
adc
movsl
shr
mov
repz
jnp
ljmp
fwait
cmpsl
and
cmp
sub
out
xor
ret
xor
pop
popf
int3
xchg
pop
xchg
js
inc
enter
push
xchg
and
mov
shl
lds
sub
mov
push
rol
fwait
cs
pop
jmp
call
add
xchg
lea
loop
shlb
stc
mov
mov
mov
xchg
int
int
mov
loope
pop
jbe
lahf
ja
lock
or
je
mov
mov
add
je
and
xor
pusha
mov
cmp
int3
int
icebp
cmp
les
into
movsb
icebp
cmpsb
cmp
fs
sbb
notl
cs
dec
xchg
lock
push
cld
pop
jg
aad
sub
or
pop
mov
cmp
gs
loopne
fnstcw
insb
int3
cmpsb
adc
out
imul
loopne
push
xor
adc
mov
adc
fldl
xor
pop
push
sarb
out
lahf
outsb
std
into
fwait
dec
into
stc
outsl
sbb
add
mov
dec
je
pop
negb
lea
mov
sbb
fldenv
inc
loope
fs
mov
add
add
lock
fst
jmp
shll
addl
mov
cld
es
addl
pop
xchg
dec
adc
mov
mov
pop
out
adc
mov
sbb
push
adc
neg
jo
ret
xchg
xchg
sbb
paddusb
mov
add
cmpsl
jno
and
mov
mov
and
xor
jne
adc
sbb
adc
push
dec
adc
xchg
sub
sahf
loopne
pop
and
fs
pop
and
sbb
out
cmpl
fdivl
test
or
rolb
pop
inc
fsubs
js
mov
inc
sti
addr16
sub
xor
sbb
aaa
xchg
or
xor
inc
arpl
pushf
push
jp
or
mov
sbb
nop
call
sub
loop
bound
mov
rcrl
adc
xchg
daa
and
shrb
sbb
cmp
out
fnsave
loope
mov
mov
call
jnp
cltd
es
insb
jae
dec
cli
push
fwait
loope
pop
sbb
test
leave
xlat
test
in
inc
inc
movsl
and
pop
loopne
movsl
jg
xchg
cli
dec
mov
ds
into
xchg
movsb
inc
insb
jns
jg
push
mov
stos
loope
shl
adc
sbb
popf
xor
sub
dec
int
push
jns
cli
dec
push
test
mov
test
inc
xchg
test
mov
in
adc
cwtl
and
mov
fldt
js
and
add
dec
push
xchg
push
mov
cwtl
ljmp
jb
adc
call
add
sub
sub
loop
xor
loope
bnd
sbb
jne
cmp
ret
les
jg
mov
sub
sub
rolb
sub
or
je
cld
out
mov
ret
test
shr
sahf
clc
ja
xchg
scas
cmp
aas
sub
jbe
mov
sbb
incb
mov
out
mov
jne
sub
mov
inc
push
test
scas
jg
cmp
push
sbb
mov
sub
cmovs
jbe
bound
in
inc
pop
or
mov
test
fbld
cmpsl
out
lahf
popf
add
push
xchg
jmp
and
jp
and
fildl
ret
dec
ds
cs
jae
pop
add
mov
movsb
mov
testl
outsl
xlat
pusha
rolb
loope
enter
rcll
pop
fmull
sbb
nop
in
sub
pop
in
cmp
repz
fisubs
lcall
aam
cwtl
mov
mov
xchg
and
xor
pop
dec
movsl
sahf
adc
mov
and
lods
hlt
fists
aas
mov
aaa
mov
fldl
push
test
bound
nop
add
dec
movsl
inc
lret
ljmp
mov
xor
loopne
mov
addr16
jae
sbb
lock
mov
gs
xchg
or
cmpsl
cli
stc
inc
loopne
push
mov
mov
mov
mov
mov
fdivrs
cmp
mov
push
nop
and
mov
mov
sbb
sub
lahf
fwait
lret
test
inc
cmp
mov
xchg
stc
mov
mov
cmp
call
and
dec
inc
mov
popf
xlat
push
or
fwait
sahf
iret
xchg
mov
push
mull
bound
or
xorl
ljmp
fnstcw
das
jecxz
jo
cmp
std
cli
sbb
in
in
xchg
xlat
rol
push
cwtl
mov
cld
inc
jl
jmp
push
push
dec
push
call
in
add
push
xor
mov
lods
setb
shrl
orb
sub
stc
mov
test
adc
popf
and
out
mov
jmp
pop
inc
or
lcall
dec
lock
dec
mov
out
push
jle
pop
int3
pop
or
jp
inc
push
mov
stos
dec
mov
rcrl
adc
lret
or
fwait
test
stc
leave
mov
outsb
cmp
pop
jbe
icebp
roll
xor
jbe
dec
addr16
push
sub
mov
xor
jae
and
sub
or
pop
int3
sbb
sub
or
cli
or
jnp
mov
mov
lahf
cmp
jmp
inc
lds
xor
std
pop
xchg
adc
mov
dec
ds
mov
dec
lds
stos
std
hlt
xchg
movsb
xor
cmp
dec
or
fisubs
lahf
movsb
popf
ljmp
push
jmp
in
sub
ss
cwtl
push
popf
nop
loope
mov
lock
out
sub
cld
fucomi
hlt
jns
pop
ljmp
cmp
mov
push
push
pop
int3
jmp
les
jo
adc
jl
sti
das
ret
pop
mov
enter
inc
cli
inc
out
fwait
xchg
ss
hlt
cmp
outsl
hlt
push
outsb
push
sub
dec
in
enter
call
push
lea
jle,pn
cmp
or
popf
loopne
push
pop
push
stos
dec
inc
pop
sub
push
jl
rclb
pop
fbld
or
cli
xchg
push
iret
xor
jnp
jae
xor
inc
and
enter
adc
xor
outsb
jno
jb
sahf
xor
pop
mov
adc
fucomip
jnp
popa
fdivrl
cmpsb
xor
fisubs
pushf
push
jno
and
pushaw
nop
jbe
test
cltd
push
push
push
jecxz
divl
mov
xor
je
in
mov
jecxz
aas
insl
aad
mov
in
mov
sub
and
sbbb
mov
sub
jne
cwtl
insl
movsb
xchg
mov
popa
fs
scas
nop
loope
popa
mov
cmp
fndisi(8087
fsts
xchg
imul
inc
jne
jg
mov
aaa
push
lds
ja
fimuls
pop
mov
loop
shrb
dec
xchg
repz
js
ds
adc
popf
sub
push
pop
adc
sbb
aad
sub
jge
fdivr
and
flds
mov
mov
pop
sbb
divb
out
stos
and
inc
popf
pop
lret
and
icebp
movsl
ret
mov
bound
xchg
icebp
jmp
mov
sarb
int3
sbb
adc
out
das
pop
jae
jp
inc
into
sbb
inc
mul
shlb
inc
pop
inc
cmp
enterw
aaa
outsb
outsb
and
add
scas
into
fidivrs
scas
insl
imul
pop
into
pushf
sbbb
adc
fdivp
inc
insl
inc
sbb
mov
outsb
test
add
imul
jcxz
lock
cmp
sbb
test
mov
adc
mov
andl
repz
not
sub
por
cmpsb
in
sub
mov
fisubl
sar
and
fidivrl
sbb
addr16
xchg
cli
cmpsl
inc
dec
cmc
testb
push
mov
jge
push
xchg
add
push
rolb
mov
xor
into
xor
stc
xchg
jne
mov
xchg
mov
inc
jnp
and
xchg
into
pusha
cld
punpckldq
dec
mov
jl
int3
xchg
in
jns
mov
sbb
sbb
arpl
add
ret
lods
mov
dec
test
mov
or
lock
clc
inc
adc
adc
jb
dec
jns
inc
jp
insb
add
push
adc
sbb
lahf
test
xor
or
xchg
jmp
fsubl
cmp
xchg
dec
push
aad
inc
stos
leave
ret
xchg
loop
fwait
cmc
jno
jbe
test
in
outsl
mov
ss
repz
test
and
mov
outsl
dec
and
dec
push
push
push
lock
jecxz
mov
and
sbb
push
mov
data16
data16
data16
or
xor
gs
add
jge
ds
and
in
shll
inc
call
into
push
add
dec
aam
cmp
mov
ljmp
cmp
leave
cmp
adc
stos
dec
loopne
inc
mov
fisubs
popf
nop
call
xor
xor
add
xlat
gs
mov
push
loope
cli
inc
sbb
jecxz
je
mov
jl
dec
and
cwtl
cmovbe
pusha
sbb
xchg
pop
inc
movsb
push
xchg
std
pop
or
jno
mov
lahf
and
and
stos
xorl
push
hlt
mov
cmp
mov
and
aam
dec
push
movsl
rep
pop
jno
mov
dec
add
mov
jecxz
add
xchg
lods
lock
jno
and
mov
mov
fidivs
dec
adc
dec
sbb
xor
jl
pop
push
lods
pop
jle
jecxz
xchg
loopne
mov
mov
shl
clc
xchg
out
in
pop
push
call
movsb
or
mov
sbb
aad
imul
dec
jp
xor
push
push
insb
xor
sbb
fsubrl
push
or
jecxz
inc
ja
pop
jne
mov
arpl
shll
repnz
scas
fimull
ret
aad
jl
adc
jno
sub
xchg
mov
movsb
push
lock
jg
pop
gs
in
daa
hlt
gs
pushf
in
loop
enter
jmp
mov
pop
je
mov
daa
mov
mov
inc
lods
lods
sub
fcomps
movsb
mov
push
sbb
jnp
xchg
jne
push
fidivrs
in
test
push
std
les
fmulp
imul
mov
sbb
lret
nop
sub
mov
pushf
fs
xor
ds
dec
fisubl
push
fisubs
int3
fdiv
cli
xchg
jg
lds
push
arpl
int3
std
bound
pop
lahf
mov
pop
adc
jp
imul
xlat
add
mov
cwtl
xchg
ficoml
push
dec
jg
add
test
cwtl
push
inc
js
xor
icebp
xor
mov
lock
pop
es
mov
xor
mov
stc
fbld
jge
leave
xor
shr
sarl
clc
fnstenv
cli
out
stos
rol
add
stos
mov
sub
out
mov
jo
add
lahf
popa
aam
ss
inc
jp
aaa
shrl
xchg
sub
dec
in
pop
or
out
lret
add
mov
pop
cmp
es
sub
xchg
mov
data16
aam
lcall
pop
shll
xchg
jecxz
mov
std
and
nop
xchg
into
mov
xchg
fsubs
mov
xchg
xor
push
sub
test
jge
pushl
lds
sub
lock
and
mov
popa
stos
jecxz
lock
xor
mov
push
sbb
cs
jb
dec
cmc
cmpsb
repnz
push
add
or
aam
xchg
add
or
ret
adc
jne
in
xchg
sarb
sar
fsubrl
fnstenv
mov
xchg
xor
ss
in
jmp
lret
cwtl
mov
sti
pop
lcall
push
and
jp
xchg
dec
xor
outsl
sub
imul
jns
xchg
repnz
jns
rclb
mov
mov
push
add
push
pop
out
test
lock
cwtl
mov
negl
push
in
mov
and
push
cmc
mov
shl
pusha
lcall
xchg
popf
sbb
aad
loope
add
aam
sbb
loope
push
mov
subb
fildl
mov
or
ror
xor
pop
inc
hlt
aad
or
add
mov
test
lods
adc
mov
imul
pop
call
jl
sbb
lock
xchg
xor
cmp
rcl
es
loopne
sar
arpl
rorl
in
lods
mov
lret
or
jnp
aad
and
cmc
les
and
push
cmp
fldenv
dec
ffreep
jmp
inc
dec
push
push
lea
or
push
cmp
or
out
lcall
imul
pop
in
test
outsl
out
inc
dec
adc
xchg
xchg
push
jnp
shll
daa
add
jno
inc
pop
test
mov
pusha
into
adc
in
sbb
dec
ror
int3
mov
mov
es
and
leave
std
fisubrl
cld
xor
sub
test
add
sbb
movsl
cmpxchg8b
into
or
pop
ret
or
fisubrs
scas
add
cmp
call
or
jo
jne
pop
rol
outsb
stos
in
jmp
inc
aaa
imul
push
xchg
pop
inc
mov
pusha
repz
sub
sbb
insl
xchg
add
fwait
inc
mov
sub
add
and
and
adc
aad
call
imul
pop
in
xchg
fcmovnb
adcb
movsb
mulb
pop
dec
fcmovnu
imul
xchg
cld
mov
mov
dec
jg
repnz
and
sbb
arpl
jns
sub
mov
popf
push
push
loop
sti
pop
mov
test
push
fistpl
hlt
ret
and
popf
filds
movb
jle
jmp
push
scas
movsb
or
xchg
aaa
dec
jns
sbb
lods
into
scas
test
pop
jl
scas
outsl
call
xor
js
push
xchg
je
lds
xchg
in
mov
repnz
jmp
pop
imul
gs
cmp
cmpsl
sbb
jge
add
inc
jns
jl
sahf
in
sahf
int
push
jnp
lcall
je
out
mov
mov
mov
sub
fwait
pop
test
pop
ljmp
nop
test
aas
nop
fsub
aam
ss
xchg
sub
pop
jl
sub
outsl
call
scas
adc
mov
lcall
stc
sub
dec
ret
add
sbb
xchg
in
adc
dec
shlb
xchg
adc
shll
popl
test
out
shll
adc
push
insb
jns
mov
in
dec
std
jbe
stos
sarb
jnp
pop
adcb
xchg
popl
or
out
xor
mov
fcoms
cmp
jl
lock
daa
and
xor
sahf
test
push
push
xor
xchg
int
aas
cmp
in
lret
cmc
xchg
subb
mov
lds
pop
and
jmp
stos
dec
cmpsb
xlat
and
jecxz
bound
loop
push
and
mov
js
sub
dec
clc
dec
xorb
lods
jne
mov
push
pushf
ljmp
inc
ds
aaa
in
pushf
inc
dec
pop
cmp
mov
rolb
test
sbb
push
push
jns
xchg
adc
int3
or
dec
loopne
gs
popa
lcall
xor
js
sahf
movsl
les
cmp
imul
push
and
dec
pop
cmp
nop
imul
outsl
xor
pop
orl
or
dec
adc
pop
sarl
andb
mov
mov
das
sbb
push
push
out
push
movsb
cltd
jp,pt
pop
pop
jno
sbb
dec
ljmp
mov
stc
sbb
adc
and
jb
and
jp
cmpl
sub
dec
shrl
cmpsb
push
je
int
outsl
aaa
shrb
push
je,pn
xchg
fidivrs
add
subl
dec
sbb
ss
ficoml
das
mov
scas
xor
jle
test
pop
pop
fistl
pop
inc
cltd
and
lahf
mov
scas
sbb
inc
add
cmp
sub
cli
aad
or
lret
cwtl
mov
hlt
insb
pop
xchg
cmp
jbe
pop
mov
fwait
push
cmpl
pop
int
cs
mov
pop
mov
lods
jmp
fisubl
fbstp
dec
mov
outsb
loopne
xor
pop
dec
stos
out
fs
lahf
scas
xorl
xor
cmp
pop
push
mov
push
jae,pt
nop
outsb
popa
cmp
icebp
lret
popf
sbb
cmpsb
adc
jbe
mov
push
orl
sub
loop
inc
pop
and
mov
hlt
js
aad
sub
jecxz
xchg
xor
popf
dec
or
dec
cmpl
mov
data16
push
insl
notb
aam
push
clc
sbb
push
pop
nop
pusha
daa
popf
push
ret
outsb
rorb
dec
pop
in
aam
xchg
icebp
dec
mul
in
xlat
popl
jb
cltd
das
test
mov
aas
mov
push
mov
leave
cwtl
or
push
stc
rcrl
jle
mov
jp
mov
testl
jnp
xchg
push
mov
cmp
fstps
rcl
pop
outsb
and
addr16
adc
les
insb
arpl
cmp
mov
pop
pop
orb
fwait
js
sahf
divb
lock
jno
in
int
sbb
or
push
in
push
mov
ja
arpl
push
pop
dec
push
loopne
dec
mov
aas
aam
imul
imul
daa
xchg
sbb
or
or
rcrb
mov
shll
dec
scas
les
jmp
add
lea
inc
mov
pop
sahf
negb
clc
cmp
mov
outsl
pop
test
add
push
push
aaa
push
lock
fisttps
inc
iret
cwtl
add
or
mov
or
jbe
or
mov
xchg
pop
fidivrl
pop
testl
and
cmp
mov
orb
mov
ja
out
jb
aad
cmc
notl
adc
push
pop
mov
adc
cmp
mov
sub
loopne
and
int3
cmpsl
cmp
sti
out
fimuls
pusha
lret
xor
cmp
mov
push
add
sbb
shl
pop
sbb
push
adc
test
xlat
xor
xchg
in
xchg
movsl
jl
fcmovb
cld
adc
pop
add
fs
aaa
mov
sub
xchg
icebp
cmp
lock
ss
or
mov
outsb
jge
fcmovb
in
rclb
cmpb
push
or
adc
mov
inc
push
aam
push
imul
xchg
hlt
pop
cmp
sub
jno
mov
ja,pt
addr16
inc
mov
fdivr
rclb
inc
xor
daa
btc
cs
mov
xor
out
jg
pop
xchg
push
cmp
or
pop
rcrl
sub
sub
and
adc
sbb
xchg
sar
lock
jecxz
sub
jmp
mov
lock
push
adc
pop
cmp
dec
jb
pop
out
ficoml
xchg
pop
test
inc
mov
add
jge
ret
xor
pop
add
mov
push
cmpsb
int
pop
xchg
sub
and
testl
std
mov
cmp
sbb
mov
sbb
mov
leave
jns
mov
iret
sarl
and
mov
sub
adc
js
cmc
fsubp
mov
xor
cmp
testb
jne
adc
xor
sub
xchg
inc
stc
mov
cmp
repnz
sub
xchg
mov
pop
mov
pop
inc
cmp
xchg
add
jecxz
mov
outsb
aas
jb
imul
iret
or
jno
xor
out
das
xlat
es
loope
mov
popf
mov
sarb
fs
pop
cli
cmp
mov
cmpb
test
bound
mov
sahf
and
fsubrl
xor
nop
fiadds
out
sub
jo
push
aas
xchg
loop
arpl
stc
push
pop
xchg
mov
xchg
cmp
ljmp
pop
fwait
enter
rolb
ss
mov
inc
jb
std
movb
movsb
jle
and
movsb
jno
dec
jle
hlt
leave
mov
jl
call
incl
push
mov
scas
cld
adc
cmp
movsb
jne
or
mov
fwait
movsb
out
add
push
cmp
xchg
cltd
stos
int
negb
jp
or
pop
xchg
pusha
mov
cmp
out
hlt
loopne
cmpsb
lret
pop
into
jge
sub
jnp
push
adc
sbb
mov
rcll
add
add
loope
inc
dec
adc
mov
cmp
leave
sbbb
imul
xchg
inc
jl
mov
inc
dec
lahf
mov
push
pop
mov
add
sbb
push
pop
push
mov
outsl
jg
push
test
cwtl
dec
cmpsl
js
pushf
fidivrl
insl
cmp
stos
jnp
push
sub
xor
mov
xor
push
pop
push
jno
add
mov
out
sbb
outsl
adc
inc
leave
mov
sahf
push
fisttpl
popa
ret
aam
lea
or
pop
lods
pop
dec
andb
push
les
aad
aam
in
mov
sub
inc
mov
repnz
call
fpatan
fmull
mov
addr16
or
aas
inc
dec
jp
subb
test
push
jb
pop
mov
xchg
mov
popf
addl
pop
xchg
cmp
fldl
sbb
ds
pop
mov
jne
shlb
iret
cmpsb
cs
daa
nop
mulb
mov
mov
daa
xchg
xchg
call
pusha
sub
jb
push
add
aaa
pop
lea
pop
pop
adc
push
push
movsb
jl
mov
adc
sub
dec
pop
xchg
mov
imul
pushf
mov
push
dec
or
dec
pop
xor
leave
sbb
adc
mov
xchg
int3
cwtl
mov
fisubrl
pop
push
xor
dec
rcrl
cli
jno
cmp
in
mov
aaa
rol
shrb
xor
push
cmp
out
out
aas
std
add
loopne
push
enter
pop
imulb
jmp
cmp
inc
jl
cmp
nop
aaa
loop
mov
fwait
or
inc
inc
mov
clc
leave
aas
fisubs
xorb
fimuls
cmpsb
cs
bound
and
cmp
add
mov
push
stos
jge
push
sub
push
mov
pop
jbe
mov
dec
mov
inc
mov
jle
pusha
cmpsb
aas
cli
int3
mov
test
scas
push
out
dec
dec
and
jns
test
popf
pop
jo
out
xchg
jmp
mov
ljmp
push
sti
mov
test
cmp
es
inc
jp
std
out
loop
jg
mov
jns
adc
xchg
out
nop
lret
cmp
iret
adc
push
mov
jecxz
in
add
fnstcw
mov
jmp
dec
push
inc
xor
sti
into
mov
rcl
mov
jb
xlat
and
mov
jl
imul
pop
cld
cmp
pop
xlat
movsl
and
jle
mov
mov
add
aas
sub
and
push
cmp
in
push
rclb
cmpsl
imul
fisubrs
gs
sub
and
pushf
cwtl
imul
mov
call
xchg
xchg
addr16
fnstenv
rcr
cwtl
or
popf
frstor
mov
mov
stos
or
adc
int
pop
cwtl
lds
push
mov
mov
lea
aad
adc
in
subl
popf
leave
lock
mov
insl
pop
fisubrs
dec
add
movsb
fistpll
and
mov
nop
hlt
mov
xchg
dec
cmp
xchg
cmp
fists
mov
cmp
mov
out
adc
xchg
pop
cmp
mov
fidivs
mov
scas
push
sti
ja
adc
push
mov
imul
sbb
jge
mov
and
inc
push
sbb
or
sbb
pop
andl
fwait
cmp
in
daa
fsubrs
nop
fucompp
dec
ljmp
inc
shl
and
int
jb
jo
inc
sub
in
add
jno
inc
or
movsl
fdivl
sbb
lret
rol
mov
sub
mov
leave
hlt
les
jge
or
sbb
push
das
pop
push
ret
shll
add
sbb
negl
adc
jno
sbbb
cs
inc
fbstp
movsb
xchg
mov
or
sti
add
mov
push
aas
pusha
out
testb
jae
aas
cmp
std
xchg
jae
jmp
xchg
inc
fnstcw
sub
std
stos
fstpt
push
push
and
aam
pop
daa
and
lret
ret
xor
mov
out
fistpl
pop
repz
xchg
mov
icebp
mov
ret
cmp
push
cmp
cli
sub
imul
nop
ss
jns
push
scas
inc
js
loope,pt
xchg
dec
aad
dec
ret
shr
lcall
dec
sahf
jle
push
das
mov
shrl
cmp
jns
insl
ja
and
jb
lcall
jle
cmp
xchg
pop
frstpm(287
icebp
sarl
clc
sub
dec
pop
ret
xchg
xor
repz
xor
mov
enter
inc
inc
sbb
ja
call
jp
xchg
add
stc
adc
jp
popf
cmpsl
pop
fldenv
add
pushf
loop
jle
sub
pop
cmp
insb
mov
xor
jnp
leave
push
xor
sti
and
test
es
cltd
aam
fwait
das
xchg
sub
jecxz
bound
stos
pop
xchg
lods
into
push
mov
push
sar
lods
dec
xor
and
dec
mov
or
gs
sahf
sbb
jae
adc
mov
inc
insl
test
push
jmp
push
and
cmp
push
mov
push
dec
mov
dec
xchg
iret
xchg
jbe
les
adc
sbb
cmpl
movsb
data16
lret
jno
nop
data16
sbb
and
mov
clc
push
cmpsl
outsb
lds
jmp
pusha
mov
fwait
lock
inc
sub
and
mov
mov
nop
pop
jp
fadd
into
iret
push
xor
movl
je
xchg
xchg
loopne
ret
jb
stos
or
xchg
aas
arpl
jo
sti
movsl
seta
cmp
sti
popf
jnp
pop
mov
ret
arpl
mov
inc
nop
sub
gs
pop
scas
in
lods
or
flds
or
iret
aad
jae
xchg
stos
cmp
aas
add
das
arpl
leave
xchg
pop
cmc
aad
push
leave
cmc
out
jnp
xor
loop
mov
adc
mov
mulb
jbe
popf
push
fdivr
jg
xor
lods
cmp
mov
stos
pop
bound
fistpl
xchg
out
pushf
into
fwait
jge
cld
jecxz
sub
idivl
or
xor
test
insl
test
ficoms
adc
loop
xchg
scas
push
jno
cmpsl
int3
cmp
add
ja
ljmp
adc
mov
imul
fwait
cmp
xchg
jecxz
arpl
stos
jb
shll
fwait
lahf
mov
fiadds
jb
shrb
mov
loopne
jne
inc
jl
loope
cwtl
out
xchg
sbb
fcompl
out
push
stos
add
lret
push
fisubl
jno
repz
xchg
outsb
cmpsb
push
push
xor
outsl
cltd
int3
mov
shlb
aas
jle
stos
add
xchg
xor
stos
mov
xor
dec
adc
xchg
add
stos
pop
sti
xchg
xchg
xchg
aas
aam
std
iret
cmp
decl
mov
inc
pop
mov
dec
imul
lret
jne
ret
test
test
mov
mov
xchg
test
outsb
mov
cwtl
push
xchg
sub
jl
mov
cli
imul
sub
mov
pushf
je
mov
or
mov
fsubr
test
pusha
scas
call
jb
rol
mov
mov
xchg
pop
int3
inc
mov
mov
inc
pop
mov
xchg
pop
int
arpl
adcb
or
inc
inc
in
or
fwait
in
mov
jbe
enter
mov
hlt
sub
popf
mov
jmp
add
dec
dec
aas
enter
cld
inc
loopne
icebp
xor
div
icebp
sti
subl
mov
ss
pop
call
inc
mov
test
dec
xlat
fsubrs
ja
in
inc
into
add
fmuls
dec
mov
incl
sub
call
imul
std
push
rorb
push
push
mov
mov
lret
divl
out
cmpsl
push
jg
push
loop
insl
hlt
in
mov
into
add
ret
test
mov
sbb
xor
iret
insl
adcl
xor
and
lea
or
jne
jb
fwait
test
mov
roll
fmull
sbb
je
loopne
lods
pop
mov
testb
cmpsl
repnz
add
lods
adc
jns
outsl
outsl
mov
cmp
pop
adc
out
cmp
clc
jb
sbb
popa
or
or
arpl
cld
ret
dec
decl
or
jge
clc
cli
mov
lock
sub
mov
sbb
pop
or
push
pop
lods
icebp
pusha
fbstp
lods
mov
xor
scas
pushw
jne
sub
daa
aad
pop
outsb
mov
mov
call
mov
aad
fwait
lds
rorl
push
movsl
jae
adc
fisubl
or
sbb
pop
dec
push
rcr
jg
mov
inc
es
mov
pusha
repz
xlat
pop
fisttps
out
mov
ja
fcomps
jae
xor
in
add
push
mov
popf
test
ss
xor
ljmp
outsb
fdivl
iret
mov
aas
je
mov
jle
xlat
sti
popa
aad
add
inc
push
lea
sbb
xchg
mov
cmp
jns
mov
ficoml
adc
cmpl
out
fwait
rcl
mov
ss
mov
data16
push
icebp
sub
push
mov
scas
xor
ror
fs
or
add
cmp
inc
int3
adcb
cmp
pop
daa
or
sahf
in
xor
lods
insl
lahf
pop
test
or
ja
dec
int
cltd
add
popa
cli
das
lock
cmp
mov
cli
loopne
mov
cmp
ss
addr16
cwtl
js
cmc
mov
loop
cmc
out
scas
cmpsl
test
nop
rcl
movsl
xchg
lods
outsb
ja
adc
jge
outsl
inc
mov
or
lock
adc
js
and
mov
add
add
sub
inc
mov
mov
sub
xchg
or
add
push
cmp
aaa
add
std
repz
pop
subb
inc
pop
inc
pop
mov
ja
sahf
dec
int
xor
lcall
ja
sbb
mov
mov
lds
mov
imul
jbe
xor
dec
xchg
mov
insl
ss
jns
xlat
test
jecxz
push
jns
bnd
fdiv
nop
imulb
in
mov
dec
xor
sti
fimuls
xor
jb
adc
stc
int
scas
shlb
mov
mov
ret
dec
shrl
testb
das
jle
aad
mov
push
ljmp
mov
in
popa
or
mov
mov
inc
jle
mov
ja
std
stos
cmpb
xchg
ljmp
in
jbe
in
or
fsubrs
mov
jg
stos
arpl
or
in
mov
subb
stos
pop
jle
mov
je
sbb
inc
rolb
daa
push
imul
adc
sbb
mov
test
push
loope
fwait
xchg
stc
xchg
mov
ficompl
repnz
mov
adc
or
fcmovne
jbe
in
iret
mov
pop
inc
orl
lock
inc
std
jl
xchg
push
inc
cmp
push
fisubs
push
jge
mov
ljmp
fsubs
jp
in
ljmp
pop
inc
mov
and
xlat
cltd
sahf
out
mov
fs
mov
mov
mov
mov
dec
aaa
stos
adc
mov
push
add
and
dec
or
mov
aam
cs
jo
fs
pop
sbb
push
sbb
pusha
fsubl
outsl
pop
mov
pop
mov
inc
test
int
push
bound
call
cmp
popf
dec
je
out
push
sbb
mov
and
pop
bound
insl
sarb
adcl
out
pop
pop
into
xor
ss
les
addb
jmp
bound
sub
in
movsl
xor
cmpsb
fstl
dec
jae
xlat
lods
lcall
push
or
pop
in
and
lret
das
mov
bound
shl
orl
sub
sub
mov
mov
jecxz
inc
mov
dec
roll
sbb
loopne
cmc
xchg
std
out
sub
cmc
lcall
sub
clc
xor
dec
or
mov
jae
mov
mov
jg
or
cwtl
mov
aas
push
inc
popa
sub
xchg
mov
xchg
out
push
jne
inc
cld
rep
in
jns
das
jecxz
or
xchg
into
push
sub
jl
push
xchg
pop
fnstsw
loope
cs
cmc
loop
mov
ret
lcall
fsubs
mov
lret
pusha
push
sbb
popl
aad
mov
sbb
xor
xchg
xchg
loopne
adc
cwtl
sbb
or
push
cmp
sub
mov
jmp
mov
rcl
cmp
push
lds
mov
push
nop
repz
rolb
push
stos
aaa
addl
mov
loop
inc
mov
lahf
cltd
mov
jecxz
sti
and
insb
aad
mov
aas
int3
sbb
addl
cmp
mov
cmp
pop
shrb
cwtl
push
push
add
mulb
out
aam
repz
idivb
sbb
push
mov
lds
iret
jl
sahf
pop
pop
inc
mov
leave
std
adcl
push
bound
and
mov
test
xchg
mulb
and
push
das
xchg
pop
mov
lcall
jnp
lahf
stos
dec
lret
aad
cs
mov
xchg
dec
add
lock
pop
cmp
mov
mov
mov
fsubs
mov
lahf
outsb
mov
pop
cmp
orb
lods
cs
sti
and
add
cs
and
and
ret
xor
sbb
and
jecxz
fnsave
push
cmc
stos
cmp
push
xchg
ljmp
lret
rcrb
rcrb
inc
decl
inc
jg
andb
pop
fs
pushf
add
inc
or
sub
jb
lea
testl
cld
daa
push
mov
in
movsb
pop
ljmp
jb
int3
mov
pop
sbb
test
xchg
scas
ret
aas
das
sub
iret
fisttps
test
cmpsl
inc
stos
mov
xchg
mov
pusha
xchg
imul
push
adc
lods
dec
int
add
loop
fistl
inc
mov
xchg
mov
pop
mov
lcall
mov
lcall
pusha
test
or
fstps
mov
bound
inc
sbb
cli
aaa
adc
fidivrs
inc
jmp
jge
popa
xor
lods
push
ret
je
movhps
aam
scas
add
xchg
lahf
inc
lods
aaa
or
fs
mov
xchg
add
pop
sarl
mov
in
jmp
xor
shll
add
pop
es
pop
and
cmp
adc
sbb
push
das
stos
test
pop
lret
stc
pop
movsb
add
loope
lcall
push
mov
or
dec
fldenv
mov
fstl
jecxz
sarl
outsl
jle
cwtl
into
mov
and
ret
stos
push
jmp
sbb
in
cli
push
lods
inc
out
sbb
xchg
mov
jecxz
div
xadd
lahf
out
mov
push
pusha
xor
sub
outsl
fisubrl
pushf
sbb
mov
mov
jnp
mov
movsl
or
cmp
push
test
push
pop
adc
push
lods
test
das
les
sti
popa
xchg
cmpsb
mov
xchg
imul
dec
jecxz
inc
rcll
clc
out
mov
test
int3
adc
dec
pop
mov
mov
push
fsubs
out
sti
pop
jmp
adcb
inc
inc
push
std
jg
xor
mov
jmp
sbb
mov
jne
cmp
mov
gs
sbb
pop
shrl
add
cmpsl
aaa
mov
xchg
outsl
xor
pop
xchg
cmp
js
mov
in
enter
adc
aad
mov
or
mov
mov
mov
out
out
into
inc
fwait
out
dec
sbb
lret
incl
lods
leave
enter
jnp
push
xlat
push
jae
push
sub
out
std
insb
push
pop
lds
popf
jb
xor
insb
fs
popa
cmpl
cwtl
sub
test
jg
test
out
rcl
mov
insl
inc
inc
test
stos
push
test
or
in
mov
lret
enter
cltd
dec
and
inc
pop
inc
xor
out
pop
mov
cld
fidivs
dec
lock
or
sti
jle
xor
jbe
dec
adc
imul
jae
iret
movl
cmpsb
dec
out
in
mov
sub
jmp
out
fs
xchg
hlt
lods
lret
pop
dec
frstor
adc
jno
scas
outsb
gs
ret
fwait
lods
orb
xor
push
in
mov
call
and
and
nop
lock
cli
mov
mov
das
fstpl
ss
push
scas
mov
jg
sbb
jl
js
fdivl
mov
bound
in
add
aaa
cltd
jo
jg
push
mov
imul
jge
lds
stos
sbb
push
or
add
ja
push
xor
imul
mov
xchg
inc
or
add
jg
leave
in
lret
cmp
or
ficoms
incb
int3
pop
dec
icebp
out
in
jno
rolb
pop
shrl
shl
cli
adc
or
in
pop
push
fsubl
arpl
sbb
sbb
push
sub
es
add
pop
dec
aam
addl
lahf
mov
int3
aam
mov
mov
ficoml
ds
and
sub
out
in
jo
std
sub
mov
xchg
fldenv
jge
push
xor
jmp
inc
fdivl
cmpsl
arpl
sub
mov
mov
push
mov
fcoml
sub
int3
dec
cmpl
pop
jb
mov
cli
and
push
xor
jno
mov
dec
gs
cmc
cwtl
xor
fnstenv
subb
pop
sub
mov
mov
jae
subb
insl
fistps
lea
in
sub
xchg
dec
push
gs
mov
andb
stc
pop
push
call
xchg
mov
test
push
xor
and
out
pop
movsb
popa
sbb
push
jge
cmp
cltd
push
add
push
mov
mov
xor
sbb
pop
divl
pop
dec
adc
shlb
out
sbbl
lcall
fcomip
lds
vprotd
or
pop
inc
arpl
and
ljmp
leave
in
stos
pop
xor
push
out
or
dec
sub
je,pn
mov
mov
xchg
add
sub
lock
sub
jmp
nop
je
mov
inc
cltd
outsb
jl
pop
sbb
adc
cmpl
mov
aam
add
imulb
mov
inc
adc
or
out
mov
lods
out
lds
dec
add
push
sub
jl
sub
mov
dec
scas
xor
fisttpll
jg
fsubrs
sub
xchg
dec
mov
enter
out
xor
ror
les
inc
xor
mov
ret
xchg
push
mov
icebp
repz
jmp
hlt
xor
xor
adc
js
sub
xchg
or
test
dec
out
bound
push
xlat
add
fdivr
call
loope
dec
ss
fiadds
xor
idivb
stos
pop
or
sahf
pop
pushf
cs
fcomip
shll
lds
push
mov
int3
loop
mov
and
fistpll
fnstenv
and
imul
jne
xchg
sbb
insl
ret
jne
rcrb
mov
roll
lock
aaa
lock
cmpsl
mov
lcall
stos
clc
jbe
lret
jge
xor
loop
je
js
push
fadds
outsl
sub
notb
adc
imul
lcall
cltd
jbe
js
adc
pop
in
aad
or
and
xor
aas
mov
dec
popa
jb
inc
push
mov
aas
mov
add
fsubs
sahf
popf
mov
imul
pop
cmp
and
js
xchg
or
cmpsb
and
xchg
and
nop
xor
xlat
jns
into
mov
pop
insb
out
inc
lahf
jecxz
stos
out
out
mov
push
roll
xchg
pushf
repz
sbb
add
xchg
add
stos
push
jecxz
inc
pop
out
inc
in
fbstp
xchg
pop
mov
nop
dec
ds
jmp
ljmp
addl
call
lret
repnz
push
nop
push
pusha
xor
and
cmc
pop
andl
mov
addb
fxch
imul
imul
mov
xchg
sti
cmc
movsl
xor
pop
popf
jp
popa
out
das
daa
push
movsl
sahf
repnz
or
jnp
pop
shll
jo
jo
cmp
hlt
scas
jb
sahf
add
push
lock
inc
call
std
add
movsb
push
dec
repnz
pop
dec
xchg
adc
andl
std
loope
fwait
pop
cmp
pop
xor
xorb
out
fcos
dec
or
repz
cli
mov
stc
jb
insb
or
iret
mull
add
jecxz
stos
xor
inc
outsb
not
out
popf
adc
les
sbb
fs
inc
mov
aad
bswap
mov
push
inc
sarb
popa
in
stos
mov
add
repnz
or
push
lret
pop
bound
jo
mov
stos
icebp
and
push
enter
ficoml
bound
push
cltd
outsl
jbe
js
pop
out
sub
rorl
xchg
adc
jnp
scas
outsb
sbb
mov
clc
movsb
xchg
dec
mov
lret
aaa
push
pop
mov
stos
mov
or
and
outsl
ja
in
xor
and
idivl
addr16
or
jmp
jg
mov
out
outsl
rcr
stc
lcall
xor
je
mov
push
cmp
fisttpl
add
and
movsl
ds
pop
sub
or
xor
adc
cs
jg
and
sar
in
dec
or
dec
push
aaa
push
add
push
sbb
pop
ljmp
mov
push
xor
jb
jns
pop
cmp
cmp
fadds
inc
in
dec
mov
out
aas
and
mov
fs
lock
sub
fisubs
mov
mov
pop
enter
enter
mov
mov
out
subb
dec
adc
test
dec
and
jg
xchg
adc
rcr
fnstenv
cmp
mov
dec
mov
lds
mov
loop
cmp
jge
mov
sub
mov
push
ljmp
fwait
xor
jle
mov
push
out
mov
out
cmpsb
jle
pushf
mov
jecxz
or
add
into
scas
gs
xor
jne
gs
sub
xor
sub
xor
mov
dec
cmpsb
imul
dec
subl
repnz
lahf
push
enter
mov
decl
je
arpl
sbb
shrl
add
inc
leave
mov
in
sbbb
data16
add
xorl
loope
sbb
mov
xor
jg
add
xor
lock
lret
cmp
jb
mov
out
cmp
out
addl
das
sbb
inc
mov
scas
out
loopne
add
inc
scas
out
fbld
mov
in
jae
push
mov
xchg
push
ficompl
daa
pop
jae
jp
pop
push
cmp
xchg
mov
andl
subb
cmp
stos
cmpsb
xchg
xchg
sti
sahf
ret
mov
out
adc
adc
into
cmp
dec
xchg
add
lods
pop
jmp
sbb
push
xchg
ret
jbe
jno
sbb
add
jne
popf
ljmp
enter
fists
mov
and
jmp
push
js
ficoms
push
or
fwait
mov
push
gs
or
cmp
in
pop
mov
ret
test
stos
clc
aaa
in
pop
push
adc
data16
out
leave
pushf
int
mov
sub
ss
int3
add
inc
rcl
movsb
jb
sub
pushf
cwtl
mov
sbb
sbb
push
and
lret
sub
cmc
sbb
aad
leave
arpl
mov
lods
test
arpl
mov
dec
mov
mov
dec
and
sub
jne
jmp
ficoml
jmp
sahf
adc
ss
xlat
xor
mov
sbbb
xor
xlat
dec
lods
popa
testl
aas
adc
xchg
ret
pop
xchg
cmpsl
fsubrl
xchg
stc
pop
stos
or
and
cmp
add
shl
ja
cmp
mov
xchg
mov
dec
movsl
sub
mov
lahf
mov
insb
inc
mov
mov
jno
and
in
fsub
lret
es
cwtl
jns
sti
jle
negl
dec
int3
xor
out
jmp
jb
inc
adc
pop
out
outsb
in
xor
inc
and
xchg
jb
sahf
push
adc
mov
push
mov
inc
inc
push
dec
mov
leave
dec
xchg
jno
lods
jmp
or
and
lret
xor
mov
pop
mov
fucomip
sbb
fiadds
push
xlat
clc
push
dec
dec
mov
cmp
in
jl
cmp
adc
sub
and
stos
outsb
leave
cltd
mov
jle
cld
pop
sub
fiadds
aaa
iret
cltd
cwtl
enter
xorl
sarb
in
pop
sbb
arpl
nop
xor
loopne
sti
sarl
add
dec
scas
cmp
dec
xor
daa
pop
scas
mov
inc
xchg
aas
xchg
or
les
mov
stc
call
pushf
call
mov
mov
jmp
cld
xchg
push
pop
sbb
push
xlat
cmp
mov
jmp
inc
sub
aaa
stc
cmp
jae
aas
int3
mov
ret
lds
aas
sub
push
jne
outsb
cmp
and
out
mov
cmpsb
mov
pop
push
cs
popf
or
mov
pushf
and
jnp
outsl
scas
sahf
mov
cmpsl
jge
jns
ret
cmpsb
cmp
mov
push
ja
xor
xchg
or
fmulp
pop
jg
mov
std
push
xchg
cmp
and
outsl
fwait
lahf
sbb
pop
mov
sarb
mov
aas
mov
popf
arpl
push
push
test
js
pop
cld
or
mov
add
outsl
xchg
lret
jmp
pusha
mov
push
test
adc
jnp
arpl
fcomi
cmp
inc
xchg
sub
push
rcr
and
pushf
sub
mov
sar
cld
jo
cmpsl
imul
rcll
pop
push
mov
pop
repz
enter
xchg
fcomps
pop
addl
divb
outsl
xlat
mov
repnz
lock
movsl
add
negl
daa
pop
xchg
jmp
mov
popf
mov
scas
xchg
inc
les
sub
int3
lret
xchg
or
pop
mov
or
and
xchg
pop
xlat
lahf
orl
in
pop
xor
jg
xor
out
negb
ficoms
pop
cmp
push
and
add
pop
mov
divb
fldt
adc
ljmp
mov
xchg
dec
sbb
dec
xchg
hlt
or
add
bound
test
cmp
jae
pop
loope
mov
imul
pop
pop
cmpl
fwait
pusha
pop
enter
rorb
jbe
or
mov
ret
add
in
pop
imul
cmp
arpl
add
push
leave
ss
adc
xor
cmp
adc
loop
inc
inc
push
jae
sbb
pop
pop
dec
sub
call
mov
or
rorb
pop
cmp
fists
fisttpl
daa
mov
push
jnp
and
ljmp
ret
outsl
pop
fcomip
addr16
cmp
jmp
xchg
adc
adc
cltd
mov
loop
adc
ret
data16
mov
jb
repnz
cmp
adcb
jl
pop
pop
or
outsl
movzwl
fsubr
add
scas
inc
negl
data16
xor
out
and
pop
outsb
lret
jle
cli
ret
test
aas
aas
aam
dec
fstpl
xchg
mov
shlb
jecxz
call
and
add
mov
lcall
popf
sub
out
fisubs
mov
hlt
push
add
rcll
gs
cmp
jle
push
popf
xchg
fdivl
addr16
outsl
lock
je
mov
adc
gs
pop
daa
pop
dec
jnp
ret
adc
mov
subb
insb
test
clc
push
mov
jle
dec
out
lds
add
sub
cmpsb
loop
lods
stc
fcoms
jp
mov
add
cmc
les
fcoml
mov
out
in
pop
dec
popf
data16
out
push
pop
imul
mov
dec
cmp
cmpsl
arpl
pop
mov
outsb
mov
and
adc
sub
aaa
pop
test
cld
test
mov
movsl
fimull
jo
and
mov
mov
cmp
rorb
lcall
add
push
es
mov
jmp
xor
jl
mov
in
jne
popf
xchg
adc
dec
sbb
sub
dec
rcrl
and
inc
imul
and
lret
xchg
inc
mov
movsb
fiaddl
jns
call
adc
lods
adc
pop
fwait
mov
mov
movsl
mov
sbb
jns
test
dec
test
aaa
repnz
add
add
pop
xchg
stos
xchg
fstps
sub
adc
ss
je
add
push
scas
adc
dec
inc
repnz
pusha
dec
lahf
test
and
mov
data16
cltd
sub
mov
xor
xchg
cmc
lcall
hlt
pop
lret
jmp
fsubrl
push
bound
cmp
push
daa
push
shll
fwait
cmpsl
adc
jle
xor
jmp
cmp
inc
je
sub
loope
xchg
dec
sbb
cmc
stos
cmp
cli
sbb
jo
call
xor
std
cmp
jge
les
faddl
xor
cmp
test
mov
dec
les
xlat
ja
jl
sub
dec
loop
in
pop
dec
xor
popf
std
and
pop
inc
push
fwait
mov
daa
movsb
and
fsts
pop
loopne
mov
fsubrp
je
mov
dec
xorb
iret
push
adc
sub
inc
testl
rcr
clc
aad
adc
maxps
push
sbb
jae
in
jo
push
mov
lods
test
je
mov
xchg
mov
push
xchg
cmp
movb
dec
push
sbb
flds
xchg
mul
stc
aaa
daa
popa
mov
cmc
xchg
inc
stos
fs
mov
sbb
adc
test
pop
cltd
test
insl
jp
out
dec
push
xchg
adc
jno
jl
jecxz
fstps
fidivrs
and
ljmp
iret
clc
and
mov
add
mov
les
lds
and
adc
jno
cmp
bound
and
dec
aad
ljmp
xor
lret
sub
inc
push
movsl
mov
dec
add
pop
scas
mov
mov
xor
jmp
in
out
add
sub
add
orl
push
or
es
bound
and
movsl
mov
out
cmpsb
insl
cmc
bound
mov
lahf
cmpsl
loopne
jns
pop
push
xchg
fdivp
jne
lret
lea
sub
ret
shll
mov
push
mov
aas
cmpsl
sub
pop
or
mov
sti
insl
popf
mov
fistps
test
inc
ss
out
fwait
lret
pop
jg
mov
pop
cmp
movsl
dec
sub
mov
sbb
test
mov
das
test
jmp
xorl
xchg
xchg
and
lret
test
into
rcrl
push
jg
push
mov
dec
mov
leave
jbe
loopne
inc
fldt
jle
lock
lret
test
pushf
iret
mov
pop
repnz
mov
cmp
pop
out
and
cmp
andl
inc
outsb
pop
lock
pop
leave
gs
push
out
fcmovbe
mov
in
cmp
push
sub
pop
test
add
scas
pop
in
adc
call
xor
sahf
ja
sub
push
add
jecxz
test
xlat
sub
dec
push
out
xlat
fdivrl
jne
stos
mov
rcr
cwtl
mov
bound
adc
scas
ljmp
lcall
jmp
js
mov
ss
adc
mov
call
popf
xchg
dec
in
out
shr
js
or
sub
mov
mov
test
aam
push
cmp
test
jne
cmpl
xchg
xchg
fisubs
iret
in
fcmovb
pop
pavgb
sub
adc
sub
pushf
outsb
lods
addr16
fs
out
ja
add
out
loope
in
sbb
pop
mov
es
sbb
bound
aas
dec
adcl
in
mov
pop
jo
xacquire
sub
imul
aas
jae
ja
test
add
mov
jnp
mov
rcll
xchg
inc
xor
arpl
mov
loope
std
adc
test
gs
mov
adc
sbb
daa
mov
dec
dec
shr
jnp
add
mov
cmpl
fsubl
xor
push
loop
dec
push
sub
data16
sti
sub
jecxz
lods
push
or
mov
cmc
sti
sub
xor
xor
fidivs
and
repnz
jge
aam
js
and
movsb
stos
mov
sub
xor
mov
push
dec
stc
cmpsl
adc
stos
or
popa
movsl
cltd
jae
ret
loop
sbbb
xor
dec
lods
data16
gs
bnd
sub
divl
out
dec
push
insb
call
inc
arpl
mov
dec
inc
out
dec
sbbl
iret
mov
xlat
ret
ljmp
xchg
jge
shrb
xorl
pop
out
leave
mulb
mov
inc
adc
xchg
dec
fs
dec
cmp
in
lcall
out
ljmp
or
adc
stos
loop
sahf
sbb
ficomps
xor
jl
mov
fildll
outsb
xor
flds
lea
imul
jmp
push
adc
test
in
adc
js
mov
sti
mov
ret
push
sub
and
ds
in
stos
push
das
cmpsl
in
int3
cmpb
pop
std
cmpsb
imull
cs
dec
add
and
sub
les
mov
pop
mov
or
jo
xchg
pop
arpl
xor
loopne
mov
sbb
inc
push
xor
add
sub
pop
mov
out
mov
negl
das
sbb
mov
jae
mov
aam
aam
lea
int
gs
nop
bound
xor
sbb
in
adc
sbb
jg
jl
mov
pop
adc
repz
dec
inc
sub
cmc
daa
mov
jge
cwtl
push
movb
bound
mov
xchg
mov
xchg
lds
test
sbb
add
cwtl
mov
push
enter
jo
cmp
test
in
jg
sbb
loopne
xor
sub
push
mov
push
jle
xor
sbb
mov
xor
imul
out
lods
lret
push
ljmp
cli
ljmp
xor
andb
loope
ja
inc
push
sbb
mov
stos
and
mov
add
cmp
clc
cmp
xchg
aaa
mov
mov
jbe
dec
repnz
fwait
outsb
fucomi
inc
add
jl
mov
mov
fwait
aam
addr16
sbb
push
popf
jns
cmp
fmuls
dec
pushf
jle
push
and
mov
out
orb
insl
fnsave
dec
mov
adc
cmp
mov
outsb
mov
hlt
test
repnz
mov
lds
cld
mov
xor
mov
pop
jbe
mov
jbe
inc
add
xorb
scas
stos
into
or
mov
mov
fcomps
mov
mov
shll
and
in
incb
push
hlt
jmp
sub
subl
js
sub
gs
loop
jl
jmp
insb
jecxz
movsl
cld
leave
call
inc
rolb
popa
mov
and
push
xchg
pop
xor
fsubr
and
fwait
adc
loopne
pop
shll
jns
loop
lret
or
or
push
mov
mov
cs
jg
popf
pop
sbb
xchg
scas
test
call
push
ja
pop
and
push
daa
sbb
push
mov
rclb
mov
pop
inc
test
adc
cld
ret
mov
ljmp
nop
and
aad
push
sbb
outsb
mov
rclb
mov
movd
or
pop
inc
mov
aas
int3
jbe
xchg
pop
mov
sub
leave
mov
mov
mov
out
lds
loop
pop
xor
push
xchg
movsl
add
jbe
sbb
jge
loope
or
mov
cmp
sbb
mov
addb
imul
rolb
pop
ss
xor
push
jns
jp
imul
ss
fwait
data16
nop
add
icebp
sub
pop
mov
add
push
enter
pop
and
add
push
and
sub
int3
addr16
add
aas
cmp
fbld
lret
mov
into
rcr
xchg
push
addr16
sbbl
push
sahf
ljmp
xchg
cmp
bnd
or
or
sub
sbb
aas
push
mov
ror
pop
repz
mov
cmp
dec
jl
int3
nop
pop
mov
lcall
xchg
dec
mov
test
xchg
xchg
addr16
sub
scas
pop
out
shrl
cmc
shlb
mov
ds
adc
push
int
push
divl
dec
aad
xor
das
mov
scas
shlb
sub
xchg
cmp
push
xchg
xchg
jno
aad
ja
int
xor
hlt
or
xchg
push
dec
add
je
and
and
jp
inc
pop
outsl
movl
mov
popf
inc
inc
sahf
imul
adc
cmp
push
cmpsb
push
mov
mov
dec
mov
data16
pop
out
sub
dec
pop
jle
mov
add
mov
lahf
dec
jg
or
pop
jno
adc
xor
push
xor
xchg
sahf
or
xchg
shlb
lods
cmpb
mov
cmpsb
cmpl
mov
mov
mov
lods
mov
fdivrs
sbbl
aaa
ret
enter
jle
sub
lods
xchg
or
adcl
stc
aam
lahf
push
lret
mov
xchg
adc
jno
ret
ss
fisttpl
stos
push
push
pop
or
xchg
sbb
fldt
in
repz
aam
mov
mov
jge
adcb
cmpsb
jl
inc
jnp
xchg
mov
loopne
inc
ret
rorb
insl
imul
repnz
dec
adc
sbb
lods
in
fwait
adc
fs
enter
push
push
pop
and
adc
mov
cmp
inc
ret
cmp
mov
mov
sarl
dec
daa
and
fcoml
insb
mov
je
das
mov
push
mov
out
fstl
gs
test
and
cs
loopne
jns
push
es
aam
xchg
add
jecxz
decl
enter
xlat
lods
jo
xor
mov
mov
push
aas
scas
jb
mov
and
incb
fwait
add
aas
rcll
xchg
mov
out
ficoml
pop
mov
and
sbb
jbe
push
aaa
adc
sub
ss
scas
mov
outsb
in
rorl
dec
ljmp
mov
push
cmp
xchg
inc
inc
ds
repz
cs
xor
xchg
push
pop
enter
lea
test
adc
cmp
mov
mov
das
adc
mov
inc
dec
stc
test
popa
sti
mov
mov
and
mov
fwait
push
loop
scas
test
adc
xor
mov
aaa
loopne
mov
popa
cmc
popf
xchg
push
ficomps
into
and
lret
push
cld
mov
mov
or
add
sub
mov
push
push
push
jo
add
inc
xchg
sub
clc
sbb
shr
push
xchg
es
inc
mov
sbb
add
mov
sub
adc
out
xchg
push
mov
into
loopne
jno
sub
rolb
xor
jne
mov
or
dec
sarb
dec
enter
mov
popf
adcb
cmp
arpl
add
cmp
jo
jecxz
cmpsb
xchg
jg
lds
lcall
call
out
in
int3
sbb
pop
push
scas
daa
jp
adcb
repnz
rcrb
inc
in
jge
pop
test
hlt
push
mov
and
mov
lret
jnp
xchg
iret
xchg
test
imul
cmp
adc
xchg
inc
gs
sti
out
nop
out
jp
ja
cmp
cmpsl
xchg
mov
lock
fstp
repnz
loop
lcall
add
or
jbe
subl
loopne
pop
push
xchg
int3
fcmovbe
lock
xchg
popa
or
push
fnstenv
jle
sbb
dec
push
xchg
sub
clc
push
test
jmp
ret
cmpl
xor
add
daa
enter
add
fs
pop
in
push
sbb
and
adc
sbbb
adc
hlt
clc
adc
subl
sahf
scas
idivl
ja
pusha
dec
dec
icebp
inc
push
rclb
jmp
movsb
in
addl
push
sbb
mov
xchg
nop
mov
and
dec
inc
daa
mov
or
out
push
fsubs
cmpsb
cld
mov
lods
subl
ficomps
xor
movntq
bound
das
inc
jnp
data16
dec
fstl
mov
imul
mov
inc
repnz
sub
xchg
in
outsb
push
aas
test
dec
push
and
mov
cmp
cmc
fdivrl
insb
fnstcw
push
adc
add
ss
jp
push
sbb
push
fwait
and
stc
mov
bound
dec
xor
jns
sbbb
push
scas
and
outsb
sahf
push
hlt
dec
dec
push
fwait
or
cmp
cli
mov
cwtl
mov
inc
hlt
fwait
pop
push
xchg
or
lea
mov
and
arpl
jb
push
jae
sar
js
andb
sub
sti
idiv
xchg
mov
inc
adc
lds
sbb
pushf
cmp
mov
inc
jnp
mov
sub
xor
inc
mov
or
sbb
ljmp
dec
movsl
loopne
dec
mov
or
mov
es
enter
loope
das
rcrl
hlt
into
inc
shr
pop
add
in
and
orl
jle
nop
xchg
xchg
ja
mov
sub
scas
jl
rorb
add
lds
sub
es
daa
jbe
int3
movl
ss
pop
jb
mov
or
mov
dec
mov
pop
dec
data16
aad
loop
je
aad
push
int3
mov
loope
sbb
jae
xor
and
sub
xor
jno
in
lock
mov
xor
js
cmp
push
out
push
test
mov
or
vmulss
out
cli
mov
repz
sub
mov
aam
subb
clc
sub
cwtl
mov
pop
mov
and
and
test
push
add
mov
fdivrl
sub
xchg
pusha
mov
jmp
cltd
and
jns
mov
or
inc
adc
xchg
push
addr16
int
mov
and
and
ja
fwait
cli
lea
rorl
cs
je
and
lods
hlt
out
inc
js
in
or
repnz
and
outsb
add
sbb
les
or
aas
stos
pusha
ret
aam
sub
int
sub
daa
push
sub
adc
fdivr
mov
in
cmp
mov
mov
aam
pop
bound
push
jb
pop
subb
mov
push
sbb
add
mov
xchg
xor
incb
jle
or
push
mov
push
loopne
add
shlb
insb
idiv
push
icebp
imul
xchg
or
fisttpll
es
nop
sub
dec
jg
inc
lods
dec
push
in
dec
outsl
fsts
push
sbb
push
pop
mov
es
add
popf
and
cli
push
push
imul
jg
clc
sbb
enter
cld
aam
mov
xor
fdivrp
lret
hlt
in
ret
or
icebp
jo
aad
dec
mov
sti
jmp
repnz
push
mov
inc
aam
mov
test
mov
iret
mov
or
pop
xorb
out
repnz
xchg
adc
incl
stos
adc
cmp
dec
mov
cltd
jb
and
pusha
jle
mov
and
lds
inc
mov
fstps
int3
out
sbb
stos
lock
imul
mov
dec
lea
push
or
push
jmp
call
mov
leave
aaa
xchg
and
jecxz
pop
xchg
mov
xchg
sub
shl
add
orb
ss
and
cmc
hlt
xchg
cltd
ficompl
out
add
push
push
mov
les
xchg
push
fmul
adc
lods
cmp
inc
in
adc
clc
add
in
add
in
adc
sbb
mov
sub
mov
pop
ret
lock
aas
fnstcw
xchg
and
stos
int
jp
pop
gs
sbb
xchg
in
xor
xor
scas
or
jmp
push
loop
into
or
ret
sbb
mov
xchg
inc
jno
loop
and
cmp
ret
loop
in
sbb
movsl
es
shrb
movsb
in
cmp
pop
push
movsb
dec
mov
jns
scas
ds
dec
orb
push
inc
jle
xchg
push
pop
out
cltd
cmp
imulb
fisttpll
jecxz
mov
icebp
inc
loopne
mov
ret
jg
cmp
cld
mov
inc
inc
push
pop
sbb
jb
dec
test
push
decb
nop
jle
repnz
lds
aas
or
fistps
in
fwait
aad
pop
push
cltd
or
and
out
hlt
sahf
lret
mov
hlt
dec
pop
sahf
je
pop
loope
lret
add
inc
fdivl
scas
pop
fsubrl
jl
aaa
int3
or
outsl
dec
lods
iret
ret
mov
data16
or
jne
jns
jb
pop
dec
jo
dec
pop
pop
xor
lods
push
inc
je
or
imul
sbb
and
rol
fcoml
inc
pop
xor
outsb
popa
jmp
loope
xor
lds
jle
cmp
xor
sarb
inc
shrb
in
leave
aam
add
adc
notl
stc
cmp
arpl
mov
sbb
push
int
fucomip
cmp
in
in
imul
cmpb
jo
jo
and
aad
pushf
inc
adc
sbb
arpl
aaa
scas
fidivs
add
push
mov
mov
sahf
mov
outsl
mov
ds
lret
mov
ljmp
or
stc
fsubs
je
or
jge
adc
ss
mov
xchg
and
xor
aad
nop
arpl
sbbl
movsb
fldenv
leave
rorb
mov
jge
out
xchg
jle
loope
mov
aas
push
mov
add
cmp
push
xchg
sub
cmc
data16
add
ljmp
lret
cmp
cmp
cltd
ja
bound
repnz
xchg
push
mov
sub
mov
cmc
sar
sahf
into
mov
or
mov
int
push
jnp
mov
lcall
sub
pop
ljmp
ss
inc
flds
mov
cli
inc
jnp
sub
mov
out
test
pop
insl
filds
xor
test
sub
in
mov
movsb
and
jle
out
outsb
ja
mov
ljmp
xor
fcom
ret
lret
dec
pushf
pop
xor
mov
dec
in
mov
cmpsl
rcll
in
xchg
ret
mov
pop
adcl
add
mov
imul
push
ret
ret
xchg
sub
out
jecxz
xchg
lods
inc
adc
xchg
hlt
mov
sub
sub
mov
test
cmpsb
cmpsb
cld
dec
rorl
cmp
decl
mov
sub
cmpsb
test
push
sbb
xchg
and
call
xchg
loop
icebp
adc
xor
inc
stc
push
mov
and
dec
clc
in
std
sbb
in
cmp
shl
out
cld
nop
es
inc
bound
incl
push
mov
mov
daa
adc
jbe
out
mov
xchg
pop
in
adc
inc
sub
in
jecxz
sub
mov
test
inc
and
cmpb
lods
cmc
lret
or
popa
xchg
jg
fwait
into
mov
int3
clc
add
sub
daa
imul
cmp
push
mov
lea
xor
dec
xchg
add
aaa
movsl
call
data16
jecxz
ja
pushf
mov
dec
mov
mov
inc
insb
fs
jge
push
xchg
movsl
cltd
dec
mov
mov
push
jne
cmp
push
mov
push
fcmovne
test
pop
lcall
jmp
mov
push
sbb
popa
push
rcl
lods
repz
dec
fisubl
mov
xchg
sbb
inc
ljmp
cmc
push
adc
movsb
shrl
imul
out
es
pusha
and
data16
lea
outsl
push
test
lea
cmc
fmull
cmpsl
jb
decl
pusha
fimull
clc
test
addr16
lea
lock
pop
mov
push
neg
sbb
shll
or
loop
mov
xchg
pop
or
ds
jae
inc
iret
mov
fs
inc
mov
push
adc
aas
fdivs
push
sub
push
xor
movb
push
jbe
stos
mov
rcrl
push
or
test
sbb
adc
or
cld
aas
sarb
and
and
pop
lods
bound
dec
dec
lock
les
mov
outsb
repnz
sbb
add
push
dec
lods
inc
cmp
pop
xor
lods
and
xchg
lret
sbb
insb
aas
fsubrl
dec
dec
mov
lods
stc
je
imul
inc
bound
jmp
lock
stos
mov
jp
sti
rcll
cltd
cmpsb
add
xchg
xor
gs
loop
movsb
adc
xlat
and
push
js
imul
jo
and
xor
aas
test
xchg
and
mov
ret
xchg
mov
jl
inc
mov
jle
leave
pop
ja
mov
inc
or
or
popa
pusha
sub
push
pushf
dec
push
xor
imul
mov
lret
clc
add
sbb
cmp
aaa
pop
nop
outsb
sbb
cwtl
in
or
cli
js
and
cmp
rcl
fsts
push
jns
lret
push
mov
sbb
xchg
mov
mov
pop
jbe
arpl
pop
and
dec
adc
fidivl
call
fmull
mov
sbb
pop
cltd
mov
pop
pop
jnp
jmp
stos
push
mov
into
mov
mov
dec
lahf
bound
je
or
dec
jg
cwtl
loop
jl
mov
add
or
adc
mov
cmp
adc
mov
cmpsb
jl
inc
aaa
mov
add
xor
lods
mov
and
dec
cmp
mov
or
jmp
or
loopne
push
or
cmp
cmp
jl
into
and
lods
das
imul
loopne
inc
jae
fimuls
add
mov
add
inc
aaa
addr16
mov
mov
add
push
push
fadd
loop
test
inc
mov
pop
in
pop
out
and
jae
sahf
mov
mov
inc
addr16
add
xlat
pop
add
sbb
hlt
xchg
dec
test
pop
aas
fwait
out
aas
je
lea
addr16
or
fcomps
clc
sti
mov
mov
jbe
or
pop
imul
mov
fstp
inc
call
mov
shll
cmp
dec
sub
mov
cwtl
int
cmp
fstl
xor
iret
pop
outsl
fsts
test
adc
cwtl
mov
movsb
add
adc
pusha
jl
mov
add
pop
mov
sbbb
data16
dec
push
jmp
jmp
out
mov
daa
pop
inc
das
adc
adc
mov
scas
jl
loope
cmp
popa
cwtl
xor
and
imul
and
jl
mov
mov
push
jle
rcrl
hlt
xchg
scas
inc
xchg
mov
cwtl
outsb
scas
sbb
push
imull
jns
inc
fwait
out
ret
js
andl
or
xchg
xor
xchg
cltd
repz
xlat
gs
les
cmp
or
and
sub
faddl
push
xchg
jg
inc
jns
mov
loopne
mov
lret
test
adc
jo
inc
mov
daa
pop
mov
in
in
pop
lret
or
dec
push
repz
int
cmpsl
add
loope
add
insl
enter
scas
outsl
scas
aaa
add
cmp
cmp
stc
out
fs
cmp
es
add
sarl
rcrl
cmp
mov
jmp
push
inc
in
scas
xchg
jmp
xor
shlb
push
dec
inc
xor
jmp
idivl
xchg
mov
add
cmp
ljmp
mov
mov
cmp
or
add
lock
and
pop
add
hlt
enter
mov
inc
mov
out
jno
or
pop
or
cmpsb
cmp
jns
jp
sahf
je
lods
mov
pop
nop
jne
add
inc
repz
jb
push
cld
cmp
xchg
cmp
shll
insb
test
xor
cwtl
add
pop
add
xor
lcall
pop
addr16
shrl
push
nop
aaa
push
mov
int3
cs
and
and
imul
mov
add
inc
cmc
sub
jge
popa
and
jmp
mov
jl
scas
in
lea
lock
mov
pop
sbb
xor
xchg
xor
gs
sti
mov
in
jecxz,pn
stos
xchg
stc
xchg
aaa
loop
leave
lock
scas
jbe
inc
rclb
mov
out
ror
fisubs
jge
repz
inc
scas
mov
aas
xchg
ret
fists
cmp
mov
movsb
dec
xchg
notl
and
jo
dec
movsl
mov
out
xchg
jg
enter
pop
stos
out
jmp
les
lods
and
add
mov
jg
jae
add
jmp
out
inc
lods
mov
in
js
or
jo
scas
sub
sbb
pushf
sub
xchg
add
mov
adc
cmp
out
test
scas
inc
lea
ss
out
fsubr
mov
out
sahf
mov
sbb
aas
test
stos
cmp
ret
cli
mov
ret
rorb
xor
adc
add
jnp
fcompl
or
ss
repz
jns
rcrl
and
mov
sti
adc
xchg
pop
pop
sub
in
fdivl
movsb
and
adc
pop
and
mov
bound
mov
xchg
scas
sahf
insb
ds
jb
leave
xchg
fnstsw
xor
loopne
loop
mov
and
inc
fildl
mov
and
cmpb
mov
in
sbb
sub
out
push
out
in
and
adc
mov
fsubp
cmpsb
push
cmc
subb
mov
add
call
mov
mov
rcll
dec
add
stos
jl
rcll
in
cmp
mov
mov
xchg
negl
inc
xor
jb
add
sbb
in
inc
adc
cli
enter
pop
jecxz
pop
ljmp
cmp
loopne
inc
push
pop
sbb
shlb
pushf
or
fsubrs
sub
cmp
mov
je
push
dec
addb
inc
lods
and
cmp
mov
subl
fsubrl
popa
inc
das
jo
jae
movsb
push
mov
pop
xor
test
sub
test
xchg
out
pop
xchg
sub
mov
sahf
dec
stos
and
call
lock
in
lcall
push
js
pop
lods
test
fnstsw
mov
add
jmp
mov
add
int
mov
cwtl
sub
jmp
sbb
mov
pop
pop
inc
mov
mov
jnp
dec
aad
js
lods
add
jbe
lock
filds
mov
roll
sbb
and
xor
in
mov
inc
ret
outsl
dec
je
mov
mov
mov
lret
xchg
push
jge
loope
xchg
pop
dec
lahf
adc
xchg
cmp
mov
jo
outsb
jnp
hlt
adc
pusha
test
adc
ljmp
rol
dec
ja
xor
mov
mov
and
jp
call
adc
sar
loope
push
cmp
stos
jge
psubq
insl
mul
int
fnsave
xor
mov
push
push
jnp
push
push
push
in
push
xor
xchg
push
int
fs
jge
jge
add
cmp
mov
push
je
add
push
add
sti
jnp
stos
out
paddusb
jns
aas
adc
sbb
xchg
sub
sub
repz
xchg
mov
shl
aad
sbb
adc
in
loopne
out
or
inc
xchg
adc
adc
lock
xlat
adc
std
out
push
lods
xchg
ss
out
pop
sahf
adc
jbe
add
and
hlt
ficoms
pushf
lret
push
mov
inc
sub
adc
dec
or
jle
add
test
jmp
pop
bound
dec
ret
mov
sahf
xor
pop
and
js
sbb
pop
imul
decl
aaa
sub
inc
fistpl
outsl
or
ret
adc
dec
push
stos
and
xor
jl
ja
xor
in
and
repz
lock
xor
pop
in
pop
mov
pop
mov
inc
dec
cmp
jg
mov
jg
xchg
pop
add
loop
lods
xor
sub
pop
aaa
jne
xchg
std
cmpb
dec
test
fwait
dec
or
jb
dec
xorl
out
in
mov
ja
and
jg
fdivs
scas
call
xor
mov
test
xor
mov
xchg
movsb
fisttpll
lcall
adc
aas
shll
outsl
sbb
bound
pop
xchg
xchg
and
test
lds
jno
icebp
stos
and
shlb
jbe
popa
xorl
stc
adc
std
cmp
lret
cmp
sbb
call
shl
insl
pop
adc
pop
jmp
fildl
mov
jl
mov
rdpmc
sbbb
je
xor
dec
loope
int
mov
movsb
cmpl
inc
test
xor
jb,pt
push
push
lret
add
jl
addr16
xlat
inc
aaa
in
mov
hlt
sahf
repz
inc
dec
pop
pop
adc
repz
lret
andb
mov
out
gs
lret
xchg
incb
adc
fwait
bound
add
sbb
jle
pop
stc
enter
and
nop
test
imul
inc
ljmp
pop
in
bound
push
inc
mov
push
xor
inc
or
jp
outsl
cld
sbb
out
push
push
testb
gs
cmc
xchg
sub
mov
mov
jg
repnz
xlat
cmp
rol
or
sbb
repz
scas
pushf
or
clc
mov
into
popf
pop
adc
fwait
clc
sahf
lock
mov
outsb
into
jmp
xchg
sti
mov
xor
nop
xchg
cmpsl
adc
pop
bound
mov
pop
pop
mov
addr16
xchg
and
mov
xlat
into
xchg
mov
inc
mov
cmp
mov
cmp
jecxz
rcl
sub
nop
mov
pop
push
or
lea
sahf
mov
cmp
jo
add
dec
dec
stos
cmp
outsb
lods
leave
and
in
mov
pop
int
icebp
dec
sub
les
pop
xchg
mov
xchg
dec
clc
mov
xchg
add
cmp
mov
mov
cmp
mov
stos
sbb
mov
shlb
hlt
add
xchg
adcb
ss
cmpsl
ficoms
cmc
movhps
xor
pop
insl
sahf
cmp
or
or
dec
test
xchg
xor
xor
fisubl
arpl
loopne
push
mov
mov
lret
dec
sbb
dec
push
fnstcw
or
outsl
push
iret
jae
je
xor
iret
inc
stos
add
mov
inc
ljmp
sub
mov
test
addr16
orl
pop
adc
jecxz
stc
int
or
jne
insb
pop
data16
mov
xchg
lods
testl
cmp
pop
cltd
mov
daa
mov
sub
mov
repnz
adc
test
pusha
icebp
jo
loope
jle
rolb
xchg
aaa
jns
adc
icebp
leave
pop
mov
ja
imul
sub
jp
fldl
dec
fnstenv
and
sbb
xchg
dec
mov
iret
or
inc
xor
mov
pop
or
mov
xchg
mov
push
stos
push
add
cld
aad
pop
dec
xchg
ret
rolb
adc
inc
jne
and
push
les
dec
mov
pop
cmpsl
inc
fwait
mov
cmp
in
pop
cmp
push
xchg
ss
or
sbbl
push
out
and
xchg
scas
jl
ja
xor
pushf
into
adc
cmp
inc
push
mov
lods
out
sub
imul
lds
les
xor
xor
xchg
enter
shll
test
mov
out
and
je
ror
xchg
dec
mulb
popa
jle
mov
ret
pop
sub
loopne
or
push
jns
fmul
ds
xor
fcomps
dec
jge
mov
into
or
jno
adc
fs
cltd
inc
mov
fistpll
std
jge
inc
stos
sbb
out
or
js
scas
hlt
ds
popw
pushf
scas
xor
push
jnp
xor
cmp
les
add
ja
and
xchg
jne
pop
ret
sbb
push
mov
adc
mov
in
mov
cmpsb
popf
cmpsl
mov
inc
jo
iret
jmp
int
mov
out
mov
mov
mov
xchg
adc
test
cld
fsubrl
or
xor
jl
adc
lahf
jle
mov
jbe
xor
pop
xchg
loopne
repnz
lods
jmp
pop
adc
rcll
pop
std
dec
std
scas
jle
rclb
cmp
pusha
mov
out
fdivrl
sbb
xor
fwait
shrl
movsl
sbb
jp
add
mov
sbb
fdiv
pop
cltd
xor
mov
bound
sbb
and
mov
out
mov
in
das
cs
es
add
nop
fisttpl
push
rorl
cmp
or
add
neg
adc
cmc
mov
roll
push
cli
out
scas
xlat
pop
push
insl
xchg
movsb
imulb
xchg
repnz
aad
jno
sbb
dec
mov
mov
sbb
sti
int3
test
mov
mov
xor
iret
push
ljmp
adc
adc
arpl
fisubl
shll
add
xor
in
inc
sbb
insb
jg
test
andl
jge
sbb
daa
mov
mov
arpl
add
add
movsl
adc
fstpt
jecxz
test
xor
mov
test
push
dec
pop
inc
add
inc
call
rcr
inc
mov
sbb
ficomps
lret
pop
xor
dec
fists
cwtl
stos
shll
push
sbb
adc
daa
popf
pop
dec
stos
gs
cmp
out
mov
in
xor
sub
mov
pop
aad
mov
push
outsl
xor
jns
and
in
jae
fnstsw
jns
cmp
enter
je
sbb
mov
push
out
sahf
stc
cwtl
adc
fwait
mov
xor
mov
pop
push
xor
ret
adc
loopne
adc
scas
ss
stos
add
outsl
sbb
push
mov
stc
adc
cmpl
mov
pop
outsb
inc
ljmp
fwait
enter
sbb
jbe
mov
sti
iret
rorl
push
sbb
dec
mov
sub
adc
dec
dec
mov
dec
ss
cmpsb
dec
pop
clc
aaa
mov
or
sti
xor
pop
sub
mov
in
call
mov
loop
imul
mov
mov
mov
mov
fisubs
loopne
sarb
addr16
roll
mov
dec
xchg
sbb
mov
mov
push
les
fisubrs
cmp
jg
int
fwait
sahf
sbb
push
lock
out
dec
xchg
sub
or
mov
insl
or
orb
andb
xor
and
mov
jnp
rorb
dec
xchg
inc
xor
add
loopne
je
push
jecxz
xchg
loope
mov
mov
movsl
xor
int
ret
lds
add
leave
xchg
mov
imul
pushf
adc
out
jno
mov
cld
mov
imul
out
sbb
mov
andb
push
fwait
cmp
cmp
xchg
xchg
es
out
xor
or
xlat
dec
pop
sub
mov
dec
shll
fs
cmp
adc
fwait
add
xor
jae
subl
mov
sbb
cmovns
and
dec
clc
xchg
daa
aam
pop
mov
div
xchg
adc
out
sub
adc
scas
xchg
pop
les
fcoml
mov
adc
out
adc
popa
lret
cmpsl
cs
xchg
pop
lods
roll
repnz
push
into
jno
cmp
push
bound
mov
icebp
push
frstor
rcr
sbb
jns
dec
imul
dec
xchg
push
add
fmul
push
xchg
in
xchg
inc
and
inc
outsl
bound
ret
adc
fcom
jle
lods
sub
mov
leave
add
es
mov
repz
loope
lds
pop
xor
negb
movsl
jmp
push
sbb
aas
clc
cmp
inc
inc
cli
ret
mov
jecxz
pop
mov
popf
inc
adc
xor
ljmp
int3
insb
shrd
xor
out
test
push
push
mov
repnz
dec
pusha
push
pushf
mov
mov
or
add
lods
sbb
inc
sbb
dec
dec
push
int3
enter
fucomi
and
clc
fbld
sub
divl
fisttpl
fwait
xchg
shll
dec
in
add
out
sbb
mov
or
pop
pop
adc
cli
add
adc
cmc
jae
pop
pop
mov
popf
jg
shll
or
jmp
inc
stos
cmp
mov
push
jl
mov
in
nop
cmp
std
xchg
filds
cmp
dec
sbb
je
inc
add
lods
imul
xlat
push
lods
inc
pop
inc
out
push
sub
int
in
sbb
inc
cmp
jne
andl
cmp
xor
fst
push
mov
dec
xorb
icebp
xor
fwait
aad
push
inc
and
aam
loope
or
in
inc
xor
ficomps
xlat
fidivl
adc
jp
das
int
xor
mov
jg
test
call
aaa
xor
pop
mov
test
dec
xchg
in
loope
push
imul
cld
int
xchg
sbb
xchg
inc
dec
fnsave
jno
enter
out
add
ss
in
jp
adc
add
lds
push
xchg
in
sub
mov
jmp
not
dec
inc
popa
pop
gs
cs
mov
pop
sub
aaa
insl
pop
rorb
sti
xchg
mov
adc
fs
es
pushf
add
loopne
sub
xlat
xor
pusha
jmp
adc
outsb
stos
mov
pushf
or
adc
xchg
cld
fmuls
into
mov
xor
add
ss
aam
push
popf
mov
adc
cmp
out
mov
mov
xchg
add
push
jno
int3
cltd
mov
ret
cmpsb
into
nop
xchg
hlt
mov
mov
movsbl
add
test
sub
jle
jns
mov
rcll
dec
jmp
xor
and
xor
mov
xlat
sbb
cmpsb
idivl
add
add
jecxz
mov
movsl
dec
mov
js
push
push
add
jl
xchg
stos
pop
jo
sbb
mov
xchg
into
xor
and
fwait
enter
out
add
xlat
push
xor
cmp
add
out
pop
cmp
add
jo,pt
jne
arpl
rol
xlat
stos
xor
push
fmulp
push
mov
nop/reserved
daa
ret
dec
xchg
jbe
or
ss
jae
pop
pop
rcrb
adc
mov
sbb
leave
popa
jne
mov
inc
mov
mov
inc
cmp
cmpb
iret
push
dec
repnz
lock
add
repz
test
jmp
test
jg
cltd
xchg
lds
cwtl
mov
sbb
cmp
ret
mov
mov
repnz
call
in
push
pop
stos
xor
lahf
sbb
shrb
dec
cwtl
xchg
inc
sbb
mov
xor
fdivs
ret
cmp
mov
loope
adc
rcrl
mov
cmp
adc
sbb
mov
in
loop
mov
mov
and
jbe
dec
adc
int3
jecxz
ror
in
sarb
xlat
mov
shl
fistps
clc
sbb
sahf
mov
fsubl
out
jle
test
imul
nop
iret
sbb
bnd
int3
sbb
jg
mov
sub
add
add
sub
test
adc
loop
fildll
fs
lret
sub
mov
outsb
js
dec
jbe
lahf
sbbl
fisubrs
push
mov
sbb
xchg
lea
js
cmp
mov
push
add
and
test
es
mov
sub
xchg
test
pop
ljmp
rcr
cli
jns
cli
push
imul
fwait
lods
xlat
in
and
push
loopne
lds
lock
in
ss
adc
xchg
add
iret
subb
std
gs
insb
mov
xor
xor
or
add
inc
and
mov
xor
fnstsw
fucom
jno
fidivl
out
pusha
pop
imul
dec
insl
jno
mov
jl
je
jo
adc
std
or
pop
inc
sbb
inc
inc
out
xchg
scas
fwait
dec
mov
sub
nop
add
ret
lahf
cmp
or
out
push
aam
mov
mov
pop
repz
ret
push
mov
nop
and
sub
popa
and
push
or
clc
jne
enter
and
mov
pop
push
sbb
ja
sti
mov
loope
xchg
cmp
push
daa
into
fwait
and
repz
rcl
add
mov
sub
cmp
repnz
mov
aaa
dec
inc
lcall
fists
inc
stos
outsl
pop
adc
jmp
push
and
in
in
pop
dec
jb
aam
dec
idivl
or
ss
sbb
xor
loopne
cwtl
push
xchg
push
imul
ja
lds
cmp
pop
repz
jmp
jmp
cmp
xchg
filds
and
ja
push
push
dec
push
imul
dec
pop
gs
inc
out
cli
sub
xchg
ja
je
stos
sti
enter
jbe
insl
ds
cld
xchg
sbb
jp
int
sbb
ficoms
jbe
fnstsw
sub
adc
ds
jle
clc
pop
xor
pop
test
push
test
mov
pop
inc
and
in
mov
fsubl
insb
cld
je
inc
dec
dec
jbe
ror
das
in
mov
popf
enter
in
jne
test
test
mov
xlat
mov
mov
icebp
fbstp
mov
and
or
clc
add
daa
fwait
btsl
lret
lds
dec
test
decb
stos
test
xor
xor
fnsave
sbb
xchg
and
pusha
xchg
lcall
clc
xchg
mov
pop
test
movsl
pusha
movsb
sub
pop
pop
aam
ds
sub
push
add
addb
icebp
int3
mov
dec
xor
in
inc
sub
sti
fcomi
and
scas
jo
pop
and
stos
inc
push
pop
fadd
pop
sbb
inc
ret
sar
nop
mov
vandnpd
sti
push
xchg
pop
mov
xchg
cmp
jns
xor
jbe
loopne
inc
outsl
push
mov
fistps
in
and
aas
mov
outsl
pop
cwtl
leave
adc
daa
mov
incb
test
lret
mov
push
ljmp
push
mov
xor
mov
add
ss
push
jp
push
jo
push
fistl
xor
sub
adc
pop
out
sub
sub
sbb
lret
out
or
imul
mov
cmp
addr16
lods
je
fmull
jg
push
push
pop
stc
push
pushf
push
add
lcall
out
cmovl
js
daa
and
jl
mov
cs
mov
and
pusha
movsb
leave
sub
lret
jae
mov
mov
pop
lods
inc
scas
push
in
call
inc
imul
jno
insb
gs
daa
push
push
std
ret
inc
in
mov
icebp
movl
xor
push
cmp
mov
or
shlb
pop
sbb
jg
ficompl
mov
movsb
movsb
dec
or
aaa
lret
lret
dec
idivl
adcl
adc
out
xor
stc
or
int3
aaa
stc
push
fimuls
jp
popf
fidivrl
scas
fstl
outsl
pop
sub
or
cmp
xor
and
xorl
daa
pop
fisubrl
aad
stos
ret
mov
sbb
cmpsl
sbb
xor
std
pop
sub
es
and
idivb
or
adc
in
outsb
cmpsb
ss
adc
mov
mov
sahf
lds
std
mov
push
test
repnz
cmp
sub
iret
clc
aam
sbb
inc
jbe
ss
stos
movsl
out
mov
dec
scas
cmpb
pop
je
call
ja
and
xchg
insb
sahf
mov
jns
cmpsl
adc
sub
ret
sbb
mov
mov
adc
iret
adc
jno
repz
adc
push
and
add
push
scas
cmp
mov
xchg
adc
imul
loop
pushf
add
push
jg
and
popf
es
push
es
dec
mov
jbe
jo
fs
hlt
sbb
mov
jge
aam
stos
push
lret
sbb
enter
sbb
out
out
and
scas
lods
pop
daa
mov
adc
out
cs
push
mov
cmp
daa
stc
mov
das
mov
or
outsl
fsub
xchg
popa
rol
les
pop
mov
addr16
mov
cli
jp
sbb
sub
ds
hlt
jge
in
lret
pop
add
bnd
ljmp
jl
mov
jmp
rcrl
pop
cmc
sbb
mov
jp
dec
fidivs
xchg
sbb
push
add
dec
and
call
outsl
nop
lcall
cmp
inc
mov
sbb
in
cmc
rcrb
sub
ja
xchg
adc
test
bound
inc
cwtl
test
add
xchg
fists
pop
push
pop
cmp
dec
inc
stos
add
into
rcrb
mov
jle
xchg
jp
or
lods
jmp
mov
inc
in
decl
and
test
cmp
lods
mov
mov
pop
dec
xchg
mov
fnstenv
add
jo
hlt
test
push
mov
or
and
shll
popl
int
in
xchg
mov
out
pop
pop
mov
sbb
mov
je
and
mov
mov
mov
push
imul
lock
sbb
mov
dec
pop
fadd
sbb
shlb
push
mov
and
ds
pop
test
jecxz
std
outsl
pop
mov
sarb
add
and
test
push
push
mov
dec
push
dec
push
xlat
sub
xchg
lods
xchg
lcall
sbb
sarb
in
sbb
sti
cli
or
out
mov
out
es
test
push
jae
sub
int3
pushf
pop
enter
cmp
movsb
repnz
push
sub
popa
sbb
loop
mov
std
cwtl
aam
or
dec
clc
sbb
and
mov
ja
push
add
cwtl
jle
imul
out
mov
insb
out
das
lret
dec
je
inc
stc
or
aas
mov
push
movsl
mov
mov
mov
das
push
jge
xchg
loopne
mov
and
mov
iret
sahf
adc
in
je
mov
aaa
mov
add
pop
sbb
sbbb
xchg
es
add
pop
cmc
in
xchg
cmp
lock
mov
int3
in
cmp
data16
andl
sbb
lods
jnp
mov
add
jmp
and
jb
repnz
mov
hlt
fiaddl
inc
dec
lds
or
lock
div
movsl
andl
push
sbb
into
out
mov
push
insl
lods
cmp
aad
adc
or
stos
sarl
lret
dec
cli
outsb
data16
lods
push
pusha
ds
and
pop
iret
std
push
push
push
mov
pop
sarb
mov
push
mov
push
stc
imul
sub
dec
sub
leave
xchg
fcompl
sbb
cwtl
sub
dec
mov
pushf
shll
rolb
fisttps
out
jbe
xor
sbb
adc
popf
out
jl
adc
bnd
sbb
cli
sbb
sub
enter
rcll
stos
adc
jle
je
push
outsl
mov
push
dec
das
xor
inc
ljmp
sub
add
ljmp
mov
imul
fincstp
test
lea
fsubrs
xor
mov
mov
sahf
push
add
lods
mov
jb
out
push
sbb
dec
outsl
push
fiadds
adc
jge
xchg
fsubr
xor
pop
gs
pop
mov
add
jbe
pushf
cltd
xor
jbe,pn
out
mov
push
dec
sbb
fsubrl
cmpsb
jmp
or
and
lock
movntdq
or
es
xor
into
pop
scas
add
inc
jecxz
lods
imul
inc
sbb
fsubrs
das
ret
aad
out
xchg
push
data16
push
sbb
sub
jecxz
jecxz
pop
cmp
dec
pop
add
cmp
jg,pn
pushf
ja
cmp
ss
mov
je
pop
xchg
mov
jo
xchg
pop
xchg
jp
jmp
adc
mov
jne
and
out
cmpb
pop
pushf
push
daa
movsb
adc
leave
jmp
scas
arpl
inc
push
mov
aas
sub
pop
dec
cltd
cmp
cltd
mov
std
or
lret
int
iret
mov
mov
pop
lret
xor
adc
cmp
mov
cmp
sub
mov
xor
push
lret
jge
aam
sub
sub
mov
xor
lcall
stos
mov
inc
pop
inc
push
nop
fadds
es
lahf
sti
stos
mov
add
mov
xor
mov
inc
scas
mov
mov
int3
loope
and
loopne
mov
mov
jecxz
mov
stc
or
repnz
ss
jno
rcrl
daa
and
fcompl
and
shr
pop
dec
push
fimuls
gs
andl
xchg
leave
xor
sbb
or
push
adc
inc
cmpsb
xchg
jns
inc
fistps
leave
es
jg
insl
adc
insb
and
repz
xchg
mov
xlat
ljmp
jo
scas
jl
sub
bound
js
cwtl
push
adc
add
inc
in
sbb
push
adc
sbb
imul
popa
xchg
cmp
add
push
cmp
add
fwait
rdpmc
mov
mov
xor
cmp
enter
leave
sub
fcmovnu
jne
add
out
aam
mull
mov
jnp
stos
daa
stos
dec
inc
mov
pop
mov
cld
scas
add
sbb
insl
sub
xchg
or
test
mov
and
mov
mov
hlt
imul
popa
dec
push
imul
xchg
cmp
cmp
cltd
fisttpl
ss
mov
pop
orb
inc
mov
cmc
add
cmp
xchg
in
mov
fists
mov
sub
int3
repnz
pushf
mov
xor
xor
out
mov
cmp
xchg
mov
jne
adcl
xchg
pushf
ror
cltd
int
push
xor
scas
cmpsl
imul
in
and
test
mov
push
xorb
mov
shll
test
or
loope
xchg
cmpsb
data16
aaa
jecxz
insw
xor
lret
sbb
loope
insb
lods
hlt
pop
pop
arpl
adc
mov
xor
cmp
sub
dec
std
mov
in
cltd
pop
aam
mov
dec
in
jl
dec
popf
scas
scas
xchg
jp
scas
js
fsubrl
push
dec
sbb
mov
in
in
add
cltd
pop
jg
dec
out
jno
aaa
jno
stos
fsubrl
pop
test
add
mov
add
push
push
sbb
divl
fcmovne
adc
in
test
test
push
sub
adc
fcompl
sbb
addr16
pop
addl
fnstcw
inc
or
push
repnz
lcall
icebp
and
push
hlt
mov
je
cmp
xchg
fcmovu
int3
repz
jae
sbb
or
lret
push
out
jbe
adc
shll
test
loop
pop
pop
inc
pop
dec
xor
ss
int
pop
testb
movsl
daa
and
enter
or
xchg
stc
in
jbe
call
stos
jae
movswl
xor
popa
dec
in
jne
mov
inc
out
adc
or
xchg
lret
lods
sbb
cmp
pop
mov
sti
jno
mov
xchg
cmp
and
and
js
push
test
iret
cmpsl
or
push
inc
scas
outsb
shll
enter
in
jns
out
xor
lret
add
xchg
jecxz
adc
mov
dec
push
adc
cltd
inc
cli
push
cmpsl
add
mov
inc
mov
cmp
std
and
lcall
pop
jnp
mov
mov
orl
dec
or
pop
outsl
jle
mov
pop
leave
cld
clc
mov
adc
jbe
cmp
inc
mov
xchg
ja
fbstp
jge
ss
and
pop
mov
push
sbb
pusha
fisttpll
stos
jae
in
xchg
cs
je
xorl
or
lret
mov
adc
les
dec
outsb
cli
out
stc
jmp
sbb
and
out
lret
pop
fisubrs
leave
les
push
push
cmp
pop
inc
mov
stc
mov
mov
sbb
xlat
iret
add
out
and
inc
addl
cmpsb
and
mov
push
pop
inc
or
shl
add
outsl
sub
loop
mov
daa
imul
sarb
sbb
cld
pop
fisubl
mov
jp
mov
xchg
fcmove
pop
int
sti
fidivrl
lods
cmp
aas
arpl
add
cs
ds
push
add
pop
repz
xor
adc
out
imul
cs
cmp
jbe
xorb
es
fisttpl
cmp
data16
pop
xrelease
or
out
mov
outsl
shrl
cmp
data16
inc
repnz
or
add
scas
push
jmp
pop
mov
xchg
add
mov
rorl
mov
add
fwait
outsb
idivb
dec
xchg
pop
into
jp
push
mov
addl
aad
mov
jmp
sub
sub
push
mov
scas
adc
pop
sahf
cs
and
scas
aas
or
pushf
lret
mov
cltd
or
icebp
les
aaa
add
js
jmp
jnp
rcl
inc
jb
out
sqrtps
sbb
das
inc
xchg
or
mov
in
xorl
negb
pop
cmpsl
jno
or
popf
dec
jae
mov
mov
sbb
mov
imul
push
in
push
movsl
cs
movsl
shr
gs
xchg
and
and
ficoms
dec
mov
sub
pop
mov
ret
lret
sub
add
push
cltd
lock
inc
jb
push
dec
andl
xchg
cmp
ds
jo
xchg
test
mov
std
pop
mov
ret
and
bound
mov
mov
es
xchg
out
test
xor
das
cld
xor
pop
or
sub
loope
lods
pop
frstor
jbe
dec
js
xchg
shll
and
movsb
repz
pop
in
push
movsb
test
enter
cmp
or
push
mov
push
add
fs
lods
inc
aad
jnp
int
or
inc
or
popa
jns
cmp
adc
push
and
xchg
ds
fldenv
xchg
pusha
ret
xlat
jl
sub
nop
imul
inc
inc
adc
pusha
mov
jo
inc
add
idiv
mov
arpl
sbb
dec
sub
mov
xchg
xchg
mov
aaa
hlt
sarl
jnp
mov
in
iret
or
dec
aad
xor
cmc
add
cmp
std
xor
mov
sub
inc
sbb
pusha
loope
dec
xor
and
jle
push
out
dec
lret
aas
jmp
popf
mov
or
xchg
mov
sub
sbb
sarl
lcall
shl
xchg
fadd
cltd
inc
test
icebp
je
xor
dec
cmp
lods
pop
ds
push
test
fdivs
pop
mov
shl
cli
jnp
scas
stos
cmp
cmc
sbb
adc
inc
cltd
add
adc
jl
and
scas
jno
pop
ss
cmc
insb
mov
js
fists
cmp
pusha
inc
push
inc
mov
or
xor
and
push
ja
mov
pushf
jecxz
dec
leave
xchg
int
test
fwait
test
orb
shlb
notb
inc
xchg
imul
dec
gs
or
sub
hlt
scas
rcr
sbb
mov
mov
aad
bswap
int
inc
or
iret
push
lea
stc
cmp
popa
faddl
mov
adc
outsb
cmp
cmpsl
mov
cmp
int
xor
mov
arpl
cmp
lods
ret
mov
jecxz
dec
mov
mov
push
cmp
fs
push
insl
repz
pop
add
addb
jns
push
and
push
cmp
orl
push
mov
int
test
mov
xchg
push
int3
dec
inc
sbb
movsl
dec
add
inc
aam
call
sub
adc
add
jmp
icebp
leave
fistpl
push
sub
xor
test
and
jg
mov
ss
es
lds
std
inc
xchg
mov
popf
aad
pop
sbb
dec
xchg
jnp
pop
mov
pop
mov
rol
push
push
push
xor
pop
ljmp
mov
in
push
jge
jns
push
sahf
popf
jae
repz
push
shl
inc
fnstsw
adc
dec
gs
mov
lds
data16
mov
mov
jo
sbb
push
xor
dec
pusha
movsb
dec
adcb
sahf
imul
sbbl
notl
mov
or
dec
aaa
pop
mov
push
add
out
xor
repz
mov
jae
mov
xchg
or
adcb
pop
mov
call
aaa
adc
movsb
lock
repz
hlt
or
jb
pop
test
daa
xor
fwait
mov
jecxz
dec
ljmp
sub
or
or
sti
das
jnp
test
xor
loop
mov
es
cs
and
int
test
sti
nop
adc
add
xchg
inc
shlb
jne
inc
lds
push
jmp
xor
je
sbb
jecxz
popa
in
jge
cli
jbe
dec
sub
stos
in
pop
and
imul
pop
pop
dec
push
inc
jp
xchg
push
fimuls
leave
mov
ja
mov
xor
mov
xchg
imul
jnp
xchg
in
push
in
ficoml
or
orb
out
dec
and
push
push
in
jg
pop
loopne
sub
into
int
divb
gs
lahf
jne
out
scas
fcomp
and
inc
repnz
gs
push
out
orb
enter
cmpsl
out
add
fs
cld
dec
adc
or
pop
push
outsb
imul
pusha
dec
jge
push
bound
mov
add
push
outsl
nop
sub
sub
enter
and
sub
arpl
lret
push
mov
cmc
rcrb
aad
fnstenv
cli
pop
scas
test
add
lea
bswap
int3
mov
ja
lods
pop
mov
out
pop
lahf
aam
popa
adc
imul
ljmp
fimull
mov
cld
scas
out
mov
mov
xor
adc
xchg
jmp
dec
dec
cmpsl
je
inc
int3
lret
cmp
xor
pcmpeqb
loopne
pop
pop
sub
fistpll
sbb
xor
inc
ss
sub
inc
xor
mov
dec
std
xchg
into
pop
mov
inc
sti
lds
addl
shrb
or
mov
dec
ja
pushf
adc
sahf
push
fs
lods
cwtl
inc
xchg
push
sti
add
popf
popf
push
dec
pop
cltd
xchg
inc
jle
hlt
add
xor
in
jb
loopne
orl
mov
out
xchg
add
push
incl
inc
lcall
mov
cmp
jae
sbb
xlat
mov
xchg
insb
fiadds
loop
aas
pop
out
xor
movsl
call
outsl
jge
dec
sub
mov
add
fwait
jg
lods
cmp
fimuls
popa
push
add
test
popf
popf
inc
imull
mov
into
mov
push
rcl
loop
add
add
dec
mov
cld
push
in
ret
aas
das
pop
shrb
pushf
hlt
mov
aaa
arpl
leave
mov
push
dec
scas
mov
and
loope
mov
insl
clc
push
inc
pop
cmp
xor
inc
jp
out
fbld
and
mov
xchg
in
sub
pushf
popf
jp
dec
in
dec
push
stc
jecxz
mov
test
or
into
pusha
outsl
xor
pusha
sbbl
jnp
xchg
pushf
mov
pop
push
mov
pop
and
cmp
or
or
lock
je,pn
aad
in
push
lods
cmpl
sbb
jecxz
pop
pop
jmp
cli
mov
cs
sbb
insl
inc
out
pushf
mov
into
and
lock
dec
or
xchg
cmp
das
inc
rcr
jmp
lea
or
rorl
loope
xchg
push
in
lock
mov
or
dec
int
loope
or
mov
jne
jb
ds
icebp
je
lods
daa
ss
popa
and
cwtd
push
cmp
std
lods
and
lret
stc
imul
inc
pusha
lds
ja
mov
hlt
popa
in
xchg
enter
xor
ficoml
adcl
mov
nop
cld
mov
ja
ljmp
xorb
fldcw
xor
inc
sbb
out
cmpsb
aad
jmp
stos
push
subl
sub
lds
mov
jecxz
cmp
loop
push
fstpl
jae
clc
inc
test
insl
sbb
ret
in
sub
jns
mov
or
leave
inc
popf
psrlq
mov
jne
push
fadds
mov
dec
adc
cmp
jne
xchg
pop
imul
sub
and
jmp
iret
rcl
add
pop
xor
and
lock
pop
sbb
xchg
sub
cmpsb
unpckhps
cltd
pop
mull
inc
push
xchg
movsb
mov
pop
gs
fadds
jns
mov
repz
out
sti
stos
mov
mov
xor
or
dec
push
sub
into
adc
lds
cmp
mov
int3
pop
subl
mov
bound
arpl
cmp
push
cli
xlat
insb
cmp
mov
cmpsl
inc
and
add
ficoml
cmpsl
and
adc
cmp
xchg
jle
pop
into
jno
cmp
adc
dec
mov
stos
pop
mov
xchg
push
dec
xchg
push
cli
push
and
or
xchg
in
cmp
aad
inc
movb
pop
pop
mov
and
dec
popf
jge
jmp
repnz
stos
loop
int
imull
push
std
sbb
pop
xor
cmp
imul
nop
lock
mov
cltd
insb
and
test
out
cltd
sbb
cmp
xchg
cmp
movsl
test
dec
loopne
add
xchg
insl
dec
pop
bnd
ja
pop
insb
out
fdivrl
jne
repnz
lock
loop
dec
repnz
cmc
cmp
mov
mov
ret
or
mov
es
and
jo
and
in
mov
mov
repnz
inc
cli
cwtl
sub
bound
mov
hlt
loop
incl
pop
xchg
jnp
mov
test
cwtl
lahf
push
imul
mov
outsl
pop
adc
das
sbb
sti
lods
adc
sub
mov
fbld
inc
fiaddl
gs
mov
cltd
clc
mov
cmp
lods
cwtl
jae
out
adc
pop
nop
xor
ljmp
push
scas
cli
add
inc
jo
movsl
lock
mov
cmpb
adc
mov
sahf
push
rcrb
xor
lods
outsl
xchg
fidivs
enter
add
loope
mov
dec
mov
xchg
loopne
pop
addr16
sub
data16
jns
jae
xchg
push
outsl
push
or
repz
inc
icebp
jbe
pusha
dec
cmp
shlb
scas
popa
push
mov
xchg
in
dec
inc
stos
sbb
xchg
cld
mov
mov
daa
pop
adc
add
jle
dec
int
and
sub
pop
lods
sub
or
ds
mov
jno
loopne
xor
cmp
out
fidivrs
sbb
push
aas
add
cld
sub
lret
shl
push
in
push
ffree
jns
sti
pop
and
fbstp
jecxz
xor
popf
in
adc
icebp
or
mov
push
ja
push
mov
mov
stos
sbb
xlat
pop
cwtl
mov
imul
xchg
fsubrs
jmp
stos
mov
xlat
das
add
or
into
dec
xchg
outsl
pop
jg
lods
fsts
mov
mov
xchg
ja
sti
imul
insl
or
add
ror
mov
scas
push
mov
cs
mov
dec
inc
jo
mov
test
mov
pop
cmpl
lahf
fnstcw
push
pushf
inc
fisubl
push
aam
xchg
repz
mov
add
arpl
popa
rcl
call
xor
pop
cmp
sub
mov
hlt
sub
mov
jae
push
jmp
adc
scas
push
sub
sahf
popf
push
mov
jle
inc
cs
repnz
xor
pop
jg
mov
loop
adc
mov
push
and
mov
sbb
das
ret
lret
addl
add
sbb
push
fistps
and
lds
jmp
mov
sub
test
push
cmpsb
stos
push
mov
jge
or
call
cs
fadd
imul
cmp
lods
pop
sbb
push
and
in
in
and
scas
push
jbe
mov
mov
cli
push
or
xor
popf
idivl
pop
adc
jo
sarl
lcall
pop
into
fwait
sahf
stos
xor
cmp
and
dec
in
into
divb
push
and
jg
lahf
xchg
movsl
out
aaa
xorb
dec
js
je
inc
and
or
cli
push
popa
ficomps
icebp
push
push
es
push
lods
mov
in
add
and
cltd
outsb
jmp
jg
je
into
xchg
cmpsb
cmc
loop
loop
cs
bound
xchg
pusha
xor
push
mov
pop
ret
add
sub
inc
or
ljmp
ret
sti
dec
pop
cmp
mov
fisubrs
and
rep
mov
out
out
sub
sbb
jns
ja
sub
pushf
inc
mov
jns
mov
cwtl
mov
nop
add
stos
inc
jno
dec
pop
or
pop
test
out
ljmp
insb
cwtl
into
xchg
fists
iret
into
bnd
push
int
xchg
jg
pop
into
adc
sbb
es
outsb
pop
cwtd
mov
fst
int3
inc
and
mov
scas
test
addb
pop
cmp
push
cmpb
mov
sbb
lock
pop
arpl
mov
lea
out
pusha
or
loopne
in
adc
fimull
inc
adc
addr16
dec
hlt
addr16
in
and
jne
jl
xor
jnp
insl
sbb
inc
enter
mov
sbbb
push
jl
jge
add
mov
movlps
mov
lahf
push
and
mov
mov
sub
and
ja
jge
ljmp
movsl
out
add
fiaddl
cmp
jmp
sub
sbb
ss
fs
sbb
jg
add
inc
mov
jb
mov
adc
outsb
dec
lock
push
push
and
cmp
inc
mov
fs
push
adc
cli
mov
xchg
in
xchg
movsl
test
jbe
dec
xchg
repz
jnp
mov
pop
sbb
mov
inc
jl
div
mov
xchg
pushl
lods
jp
fwait
cmp
mov
jge
test
sub
icebp
mov
mov
loop
pop
sbb
or
icebp
push
jmp
dec
jo
dec
push
or
xchg
adc
int3
in
or
jecxz
divl
arpl
test
dec
inc
mov
pusha
and
mov
or
dec
nop
popa
clc
jp
push
in
jmp
mov
mov
arpl
dec
jmp
ror
popf
pop
clc
xlat
mov
repnz
shr
movsl
ficoml
nop
ret
loop,pt
mov
fs
adc
cmp
das
cmp
test
dec
idiv
aam
ljmp
addb
gs
sahf
les
sti
lcall
add
gs
push
mov
mov
jg
bswap
sbb
movsl
shrb
dec
cli
or
push
pop
jbe
and
orl
dec
pop
push
popa
mov
and
cmc
jae
dec
popa
inc
hlt
jae
mov
out
jl
test
orl
dec
mov
jmp
dec
ja
outsl
lcall
das
xadd
js
leave
push
pop
jne
cmp
jo
jecxz
mov
or
repnz
ss
sub
push
out
add
call
push
jne
mov
ret
inc
ljmp
icebp
mov
test
xchg
mov
adc
sub
inc
out
mov
dec
and
cmp
jp
out
cli
xor
add
mov
add
pusha
sahf
push
sti
mov
int3
mov
pushf
jne
pop
mov
roll
test
mov
rorb
xor
adc
lahf
or
nop
test
int3
cmp
inc
jge
loopne
sbb
rcrl
xchg
jmp
pop
lock
cmp
push
push
sbb
mov
andb
push
enter
push
mov
ficomps
iret
push
idivb
mov
sub
or
cli
push
test
xor
fs
icebp
push
mov
xor
xchg
out
int3
sbbb
add
push
bound
ret
ret
fisubs
inc
jl
or
in
jp
in
xor
mov
push
arpl
add
jmp
ficoms
push
mov
inc
push
push
arpl
sarl
gs
xor
andb
fldcw
insl
ja
and
popf
mov
and
jmp
ds
icebp
test
fisubrl
sub
mov
jl
xchg
jg
push
mov
or
add
xor
and
or
xor
mov
or
mov
mov
rorb
push
insb
xor
pop
shll
or
mov
xchg
sahf
push
lret
or
bound
out
sub
cwtl
stos
test
jecxz
out
pop
cltd
inc
mov
mov
xchg
iret
push
je
jb
cmpsl
std
xchg
mov
adc
mov
lahf
fdivrl
and
jl
popa
scas
loop
sahf
das
in
sub
push
jle
popa
xor
mov
sub
cwtl
lods
out
sbb
into
or
mov
ret
addr16
inc
jle
mov
fimull
push
and
and
mov
test
sbb
out
pop
push
xor
insl
xchg
jecxz
out
mov
cmp
cwtl
add
ficoms
out
fidivrl
into
fdivrl
loope
push
xor
lods
fwait
in
adc
out
adc
sbbl
stc
sbb
scas
mov
aas
sahf
loope
sub
test
xchg
push
popf
and
xchg
insb
mov
sub
jae
xor
adc
je
fnstsw
popa
push
jmp
mov
inc
shr
out
mov
stos
popa
pop
icebp
mov
xchg
fnstcw
sbb
mov
inc
jecxz
adc
adc
in
or
fdivr
mov
pop
pop
cmp
xchg
mov
pushf
sbb
pop
scas
pop
mov
popa
shrb
pop
inc
nop
mov
fnstsw
lcall
imulb
jg
and
lret
pop
mov
mov
fistpl
add
dec
mov
mov
das
push
push
pop
add
push
enter
loopne
scas
sbbb
aam
sub
xchg
adc
or
mov
out
sarb
daa
xchg
push
dec
frstor
mov
ja
fwait
pop
and
mov
test
shlb
jmp
mov
cs
mov
pcmpeqw
arpl
and
aam
out
hlt
icebp
push
sarb
mov
pop
mov
push
es
push
jmp
cs
mov
test
pop
in
sbb
ficoml
rcr
inc
les
inc
dec
stos
pop
xchg
cltd
fiadds
pop
in
mov
add
xchg
lcall
out
data16
bound
xor
jnp
add
mov
in
insl
cwtl
in
mov
fdivrl
jbe
sbb
mov
rcrl
jo
jne
orb
mov
rclb
pusha
xchg
iret
enter
xchg
insl
aaa
imul
mov
notb
push
mov
push
push
mov
cltd
icebp
sub
out
in
jg
mov
jno
push
add
fs
jb
imul
fisubrs
push
nop
push
fstpt
mov
outsb
add
mov
in
add
les
pusha
push
je
adc
shlb
stos
cmp
adc
pop
cld
lret
cmp
jno
fcmovne
adc
jo
mov
pushf
lcall
sub
inc
lret
cmp
fiaddl
dec
push
popf
sub
gs
movsb
xor
inc
in
sub
jecxz
imul
test
mov
enter
popf
sub
add
or
gs
orl
cwtl
push
pandn
push
repz
hlt
fildl
iret
mov
or
sub
xchg
sbb
pop
sti
test
fwait
mov
sub
aas
dec
or
dec
call
xchg
cmp
pop
adc
subl
mov
nop
mov
aaa
pushf
cmp
repnz
sub
cwtl
fdiv
lea
cmpsb
push
je
loope
cwtl
mov
pusha
lock
push
xchg
cltd
repnz
mov
stc
hlt
adc
call
cmp
jl
sbb
sub
mov
je
mov
jbe
jl
jmp
xchg
pushf
sti
pop
xchg
add
sub
lea
imul
push
cli
xor
js
repz
int3
out
mov
loopne
les
xlat
fnstcw
pop
aaa
mov
in
sub
fisttpl
xor
dec
and
cmp
rcrl
push
pop
aam
testb
sub
sub
dec
cmpsb
outsl
mov
icebp
pop
jg
pushf
xchg
ljmp
add
sbb
mov
ja
arpl
xchg
lods
in
gs
rcr
cld
xor
nop
cli
stc
je
sahf
or
leave
nop
dec
push
cmp
cltd
jne,pn
test
mov
mov
sub
dec
clc
imul
aad
cmpsb
test
clc
in
cs
js
ja
jns
sbb
les
aaa
out
sbb
jle
mov
movaps
into
aas
mov
add
add
lea
and
insb
std
jo
mov
cltd
push
mov
mov
arpl
jecxz
nop
dec
pop
mov
out
mov
fsub
ret
aad
aad
fistpl
xorl
loopne
sbb
test
icebp
insl
and
adc
sub
dec
rcl
fsub
imul
mov
popf
in
add
xorb
mov
insb
out
sarl
sub
cwtl
push
stos
xchg
mov
sbb
and
push
shrb
mov
mov
jnp
mov
add
adc
pop
cmc
aam
xor
pop
dec
lret
dec
bound
in
hlt
fsts
cmp
fcmovnbe
adc
icebp
and
or
sahf
cmp
insb
mov
je
mov
inc
mov
ljmp
sarb
xor
pop
stc
cld
mov
in
shufps
icebp
in
inc
add
cltd
clc
sub
lcall
adc
push
pop
pop
pop
adc
arpl
xor
add
push
xchg
pop
add
pushf
mov
or
push
fs
daa
loope
sbb
in
das
ja
pop
inc
push
cltd
mov
jle
lock
sub
pusha
dec
cmp
xchg
mov
xchg
fstpt
ss
hlt
popf
int
rclb
jbe
sub
mulb
mov
sbb
pop
mov
outsl
pop
add
and
sbb
popf
popa
ret
leave
in
adc
add
dec
mov
mov
push
xchg
es
jns
mov
mov
xchg
mov
pop
outsl
jle
pop
in
aaa
sti
mov
pop
cmp
mov
loop
or
jnp
scas
dec
js
int
cli
jns
mov
push
pop
inc
add
jmp
and
testl
pop
add
data16
pop
mov
int
test
adc
fcoms
into
mov
sub
cmc
and
fistl
push
enter
stos
loope
push
aad
xchg
xchg
jno,pn
repz
loope
fmuls
dec
or
mov
push
push
outsl
shll
idivb
sti
push
pop
mov
jns
movsb
jp
and
cltd
and
dec
and
push
fs
xor
cmpsb
push
mov
jl
or
adc
and
xlat
mov
lea
cmp
mov
push
xchg
fst
and
outsl
divl
ds
push
aad
test
jb
mov
sbb
dec
and
mov
test
rorl
jp
jnp
pop
aad
push
lret
ja
pop
xchg
sbb
cmp
aad
or
jbe
add
add
mov
dec
out
test
push
xchg
mov
mov
into
sbb
push
xchg
out
and
out
or
pop
stos
fucomp
or
sbb
push
stc
je
lcall
outsl
out
sahf
jmp
gs
out
and
xchg
sub
cmp
packuswb
mov
icebp
loop
bound
dec
test
inc
dec
inc
sahf
scas
xchg
js
add
xchg
aad
mov
mov
pushf
sub
xchg
xchg
mov
pop
mov
push
adc
shl
arpl
popa
and
mov
movsb
and
pusha
sub
inc
xor
pop
mov
mov
xchg
xlat
out
push
in
inc
cwtl
cmpsl
mov
or
sbb
je
mov
daa
dec
cltd
inc
mov
pop
mov
das
pop
lods
je
dec
mov
cmp
cli
dec
pop
pop
gs
cmpsb
or
shll
mov
sbb
push
cmpsl
rclb
movb
adc
dec
dec
mov
jae
sarl
mov
outsl
lret
enter
and
imul
iret
dec
mov
fstps
jno
sbb
or
mov
mov
mov
xchg
lret
mov
aam
cmpsl
loop
cltd
out
xchg
cmp
jns
pop
sbb
psubd
iret
jle
into
mov
jge
or
push
mov
xrelease
das
cmc
imul
mov
out
xchg
loopne
adc
mov
ret
xchg
mov
lock
test
mov
sbb
push
dec
xchg
fcmovne
test
mov
aaa
and
adc
hlt
in
pop
in
repnz
sbb
pushl
pop
jo
repz
push
bound
repz
mov
xchg
mov
push
jp
mov
xchg
push
xor
ss
aam
into
pop
repz
js
cmp
mov
pop
les
cmp
jo
pop
lods
fcompl
adc
mov
cmp
outsl
mov
inc
stc
into
jae
or
outsb
cmp
pop
in
into
sub
jo
out
jno
sub
mov
ja
sub
xor
test
mov
inc
xor
mov
jge
ds
add
pop
sbb
stos
popf
sbb
and
andb
mov
mov
mov
lret
mov
adcl
dec
imul
pop
cmp
jecxz
mov
sbb
and
jne
cwtl
mov
std
je
xchg
ret
clc
jbe
psrlw
mov
mov
sbb
sarl
fistps
fs
cmpsl
cmc
or
sbb
dec
test
dec
out
mov
outsl
fisttpl
xchg
dec
xchg
dec
inc
sti
sub
movsb
scas
push
cld
push
dec
mulb
cmpsb
xchg
repz
push
xchg
mov
arpl
mov
add
lods
xchg
outsl
cmp
fists
sbb
and
and
bound
xchg
cmp
cmpl
jns
xlat
xchg
and
pop
cmp
add
aad
aaa
or
dec
xor
sahf
shlb
push
lret
jge
movsb
push
mov
insl
mov
adc
clc
out
fnstcw
push
outsl
test
mov
test
ja
pusha
jg
inc
lea
xor
inc
pop
pop
leave
push
fs
inc
sub
fisttpll
movsb
outsb
mov
mov
and
xor
sbb
clc
mov
clc
mov
and
ret
fdivl
sti
fdivr
xor
lods
lcall
xor
jecxz
mov
les
stos
mov
dec
js
adc
xor
dec
add
jmp
or
inc
cmp
dec
ss
das
clc
mov
insl
cltd
push
hlt
pusha
dec
fwait
sar
mov
outsb
aas
fimuls
cs
fstl
inc
xchg
and
pop
mov
lea
inc
dec
adc
cmpsl
out
enter
shll
scas
cli
icebp
aaa
xchg
gs
addr16
jns
mov
sub
jecxz
icebp
xchg
shll
xlat
xor
cs
ljmp
cltd
and
jb
pop
fldenv
sub
inc
scas
mov
mov
std
iret
lods
or
mov
or
fisubl
mov
pop
ds
je
fstl
ja
cmp
and
mov
sub
test
xchg
imul
pop
insb
iret
mov
lea
cmp
mov
scas
pop
lahf
ja
push
es
xchg
iret
pop
pushf
sub
jecxz
xor
inc
jmp
test
cmp
jne
aam
nop
lret
mov
stos
xchg
pop
les
es
clc
and
outsl
jg
test
jge
xor
addl
rorb
sti
push
adc
pushf
sti
xchg
test
addl
push
or
shl
leave
dec
jl
inc
jnp
and
push
ljmp
or
iret
in
jnp
push
add
and
and
inc
ret
nop
or
test
xor
sarl
jle
in
mov
cmc
push
push
movsb
arpl
lock
and
aaa
pop
daa
stos
add
shll
adc
mov
in
push
jbe
push
xchg
hlt
sbb
aad
idiv
adc
les
aaa
inc
push
sbb
ja
push
pop
fs
xchg
ret
dec
into
leave
fnstenv
mov
rclb
mov
dec
and
les
lret
or
loop
data16
or
mov
lahf
dec
mov
cs
sbb
sarb
add
sahf
mov
mov
test
jb
cmp
test
dec
dec
mov
rcl
dec
fdivrs
mov
lock
adc
popa
test
sub
addr16
aaa
lds
insl
inc
les
xor
xor
xor
mov
push
and
cmp
loop
add
cmpsl
hlt
xor
popa
inc
daa
pop
movsl
int3
sahf
cwtl
shlb
xor
in
dec
mov
cltd
xchg
xchg
fstpl
insb
sub
popf
push
nop
cmp
and
cmp
mov
insb
mov
cmp
mov
shl
sub
xor
outsb
movsb
adc
popa
nop
loop
ss
sub
mov
sub
movsl
xchg
lock
lods
push
xor
xor
dec
pop
clc
mov
iret
pop
sarl
scas
rolb
xchg
jle
ljmp
adc
fs
jbe
sbb
mov
xchg
inc
mov
jmp
int
popa
cs
lret
scas
mov
lock
int3
dec
gs
repnz
out
movsb
mov
int3
jns
sub
fsubrl
scas
or
xorl
cmp
xlat
dec
lret
aaa
lcall
stc
stos
mov
mov
mov
fs
cmp
mov
push
loopne
dec
dec
stos
test
mov
xchg
fwait
cmpsb
call
sbb
mov
int
int
xor
cmpsl
and
out
mov
sub
mov
pop
sub
lea
sbb
jmp
movsb
and
mov
mov
dec
mov
lcall
xor
and
xor
repz
xchg
mov
sbb
adc
shlb
pop
dec
lea
sarl
add
push
lock
call
jbe
mov
popa
push
hlt
pushf
sbb
sbb
lds
dec
jo
pop
dec
pop
cmp
in
aad
js
sub
movsl
divl
xorb
clc
in
adc
sbb
xchg
fwait
fcoms
inc
ret
xchg
add
sub
lahf
jae
cwtl
cmp
loop
pop
mov
mov
out
sbb
loope
jae
xchg
cld
or
popf
pop
stc
pushf
aam
es
lret
sarl
dec
popa
inc
jg
xor
repz
jbe
jmp
inc
xchg
icebp
push
lret
data16
mov
add
push
je
in
push
std
adc
push
xchg
ljmp
adcb
and
lock
jo
jae
gs
mov
sahf
add
jmp
pop
mov
mov
sub
into
mulb
push
insl
jecxz
sub
movsl
mov
sub
xchg
mov
loop
stos
popa
xor
sbb
push
pop
iret
pop
pushf
sbb
sar
fists
int3
xor
xchg
in
adc
push
inc
stos
jnp
jnp
fstl
gs
cmc
sbb
sub
scas
in
inc
xor
out
dec
fs
outsl
or
or
in
inc
scas
inc
xchg
aad
add
inc
jns
mov
or
cmc
xor
push
test
mov
stos
cmpsb
fimull
jbe
push
jecxz
pop
xchg
aam
push
pop
and
jb
mov
rolb
rclb
inc
add
in
cmp
adc
xchg
mov
stc
sbb
imul
scas
and
pusha
add
xchg
nop
xchg
adc
loop
xor
pop
sub
xor
loopne
mov
loopne
jl
scas
ss
popa
and
and
int
jmp
test
leave
lods
cwtl
pushf
cli
mov
and
movsl
jl
fisttpl
js
and
sbb
adc
mov
outsl
mov
loopne
in
out
mov
nop
mov
lods
push
inc
add
or
pop
imul
pusha
movsb
lea
in
push
sub
jmp
sbb
mov
lock
adc
movsl
sti
cmp
cld
loopne
mov
daa
repnz
xchg
pop
fdivrl
or
mov
jmp
insl
jo
sbb
push
or
xor
cmpsl
cli
mov
insl
stos
inc
repnz
xchg
xlat
inc
in
push
mov
push
sub
aaa
test
cli
jg
stc
imul
jo
into
hlt
and
mov
rol
jge
or
mov
cmc
jb
pusha
movsl
sti
inc
sbb
inc
xor
sub
xorl
lcallw
push
addr16
fsubp
jnp
inc
xor
mov
mov
cmpsl
add
lahf
pop
repz
xchg
lock
outsb
ds
lea
or
stos
lret
lahf
xchg
test
cmova
pop
lods
dec
fldcw
mov
mov
outsl
andl
and
jge
inc
and
push
or
arpl
dec
mov
out
ret
es
mov
fs
push
addr16
add
in
push
dec
rorl
movsb
test
mov
outsl
add
jmp
dec
dec
arpl
jl
rcrl
pushf
or
mov
mov
pop
mov
pop
dec
pop
cmp
dec
addl
jmp
mov
shlb
mov
popa
push
mov
xchg
dec
lcall
movsl
notl
mov
mov
mov
lods
pop
imul
out
add
push
mov
cmc
es
cmp
xchg
rcll
dec
dec
pop
pop
cmp
filds
sti
ss
pop
jns
cmp
or
and
sbb
adc
jbe
lret
jb
call
pop
leave
inc
rcl
sub
or
inc
pslld
mov
pop
push
repnz
mov
lret
add
cs
pop
jp
jp
jae
jmp
scas
and
mov
daa
jo
adc
mov
ja
mov
popa
cmp
loopne
cltd
idivb
xchg
or
and
andb
test
nop
roll
mov
mov
data16
out
pusha
insb
sti
mov
add
les
jl,pn
scas
shll
js
test
popf
mov
and
cwtl
repz
ret
inc
ds
pusha
pushf
inc
add
test
dec
inc
int3
adc
mov
sarb
jne
imull
inc
mov
cmpsb
mov
sahf
mov
push
pop
adc
adc
pushf
or
push
add
cltd
pop
pop
fldl
mov
in
ja
xor
lcall
lds
movsb
mov
push
mov
mov
mov
out
mov
in
aas
lret
in
dec
sub
shlb
int
pushf
or
sub
pushf
sbb
inc
rcrb
inc
jbe
adc
push
xor
push
loop
mov
cs
push
dec
pop
and
cli
adc
dec
arpl
jns
fisttps
jl
sub
rcr
xchg
mov
incl
hlt
dec
jecxz
jbe
stos
enter
push
mov
mov
pop
lds
ret
pusha
lret
movsb
jns
loopne
mov
cwtl
push
popa
stos
mov
out
jo
mov
idiv
push
mov
lcall
fdivrs
fldcw
push
mov
fsubrp
int
add
mov
inc
test
inc
cmp
dec
fdivrs
push
mov
add
out
lds
cmp
idivl
aad
push
add
ror
cltd
popf
loop
fstp
into
push
sarb
sbbb
inc
add
adc
test
stc
rclb
add
jg
outsl
jbe
shr
fs
movsb
ror
sarl
xor
ja
jae
inc
leave
xor
in
xchg
les
pop
out
rorb
jmp
cs
mov
inc
sub
rorb
xor
cmp
mov
adc
lds
dec
sete
mov
or
or
and
mov
mov
and
ja
push
lock
dec
in
xchg
or
xchg
inc
test
sbb
into
vcomiss
xor
xchg
pop
jno
out
cmpsl
fstpt
add
adc
cmp
mov
dec
pop
cli
and
lods
aaa
not
cmc
fidivrs
mov
imul
jo
cld
mov
popf
subl
sub
jnp
aas
push
nop
repz
fwait
add
lret
popf
test
shl
leave
jno
push
das
roll
sub
callw
pop
shr
repnz
fnstcw
shlb
in
fwait
lret
scas
cmc
xchg
scas
add
fwait
push
loope
test
es
imul
adc
push
push
mov
or
sbb
push
push
nop
sub
lret
fsubs
pop
maxps
push
icebp
lret
dec
lret
lds
repnz
sbb
add
arpl
sbb
addl
xchg
or
xor
insl
jmp
xchg
in
pop
dec
loopne
xchg
repnz
out
jg
pop
or
jbe
mov
cmc
xor
imul
subb
xchg
lcall
add
icebp
std
bound
mov
xchg
fsubp
mov
fisubrs
outsb
loope
mov
dec
scas
daa
mov
rcrb
pop
mov
test
and
cmc
in
loope
mov
loopne
ret
addr16
pop
outsl
push
in
sub
jge
mov
mov
insb
xor
mov
cld
insl
mov
xchg
stos
add
popf
cmp
lcall
out
xchg
cmp
and
sbb
and
jo
cwtl
xor
lret
scas
popf
sub
jns
ds
push
pop
aam
popf
add
lcall
test
mov
das
add
lds
push
flds
aas
rorl
or
or
pop
cli
add
jecxz
jno
les
mov
dec
test
or
jno
fcoml
out
and
je
jmp
pop
push
mov
dec
movsl
inc
cli
sbb
xchg
jmp
add
pusha
fwait
adc
fnstenv
jl
outsl
jmp
xlat
or
stos
or
push
mov
jg
ss
mov
rcrb
xor
popf
or
fcmovbe
add
sub
stos
inc
jbe
mov
rolb
orl
stos
mov
xor
inc
jnp
adc
hlt
ds
call
sub
outsl
mov
jae
sbb
in
pop
mov
mov
mov
mov
mov
popa
mov
sbb
or
xchg
mov
fs
lahf
dec
cmp
push
mov
cld
jle
dec
sub
data16
mov
and
insl
imul
or
adc
scas
push
out
popa
mov
pop
and
inc
sbb
fst
shll
add
cltd
sub
mov
pop
mov
stc
inc
inc
dec
faddl
pop
push
or
cmp
in
mov
sub
repz
mov
loope
or
mov
loopne
clc
in
rorb
rcrl
pop
into
mov
or
sbb
cwtl
dec
xchg
jmp
push
fcomip
aad
clc
jmp
pop
push
pusha
aad
int3
sti
xchg
test
in
test
dec
cmpsl
cmc
cltd
push
addr16
fcmovne
inc
adc
push
in
sarl
mov
push
or
xchg
push
pop
lcall
cmp
dec
xchg
shrb
mov
xchg
sbb
sub
call
loope
outsl
outsl
jo
xchg
add
push
inc
add
lcall
mov
cmp
cwtl
xchg
nop
dec
dec
mov
mov
aaa
fs
or
clc
imul
add
mov
mov
inc
fcoml
cmp
stos
aaa
xlat
sahf
sti
cmp
adc
nop
sub
stos
or
fisubrs
adc
add
sbb
popa
out
daa
jg
lock
aad
xchg
ds
xchg
fucom
cld
push
sarl
sub
sub
jbe
stc
pop
lahf
fstpt
push
fs
sbb
xor
xchg
pop
ss
push
pop
pop
fisttpll
lock
pop
cltd
inc
and
push
pop
push
lods
push
sbb
cwtl
sahf
ljmp
mov
xchg
out
rclb
or
fcoms
aaa
xchg
aam
std
cmp
mov
popf
test
adc
or
and
test
dec
pop
aaa
push
mov
lock
xchg
das
jge
mov
ret
or
jp
mov
sbb
jmp
mov
in
jbe
jns
dec
cmpsb
cmp
sub
xchg
dec
popa
xchg
jle
arpl
loop
aam
ret
sahf
adc
imul
aaa
scas
in
cmc
sbb
push
or
sbb
cmp
sub
xchg
sti
sti
or
arpl
nop
jo
cld
add
test
setbe
sbb
pop
mov
xchg
sbb
in
hlt
clc
inc
inc
pop
mov
xchg
xchg
jmp
call
clc
add
cmp
sbb
xor
mov
push
xchg
out
add
push
popa
jp
aas
jb
jno
dec
scas
iret
hlt
test
sbb
cmp
pop
cmp
xor
jae
mov
and
xor
add
lret
pop
sbb
out
loopne
sti
test
stos
dec
mov
out
ja
jle
add
sub
mov
mov
loop
push
mov
or
jp
out
into
xlat
insb
add
fsubrl
aas
pop
push
sbb
push
pop
inc
lds
ljmp
hlt
sbb
ss
mov
mov
mov
and
aaa
and
or
inc
adc
mov
cmpsl
test
pop
cmc
xor
mov
mov
movsb
leave
jl
mov
inc
mov
out
mov
ss
idivl
push
call
iret
popf
js
negb
fisubl
mov
aas
stc
push
dec
mov
jno
jo
jmp
add
pop
stc
sub
push
or
sbb
push
cmp
aam
lret
fadds
ret
pop
stos
mov
std
call
lahf
out
inc
inc
call
lods
das
push
pop
xchg
or
xchg
dec
xor
icebp
mov
pop
testl
add
int
fsubs
mov
js
lods
movsl
clc
jle
addr16
xchg
push
int
aam
dec
add
lock
cmp
mov
ss
push
frstor
lea
adc
icebp
scas
dec
and
ret
mov
aam
enter
or
add
fimull
shll
pop
xchg
jmp
jae
aad
in
popa
in
jns
sbb
mov
add
mov
xor
xor
pop
gs
xor
dec
add
incb
mov
rcrl
imul
xchg
cmp
fmuls
inc
outsl
jge
pop
pushf
add
cmp
aam
clc
jp
and
inc
xor
std
test
xor
mov
cmp
pop
int3
or
or
cltd
arpl
data16
out
push
loop
dec
loope
mov
pop
insl
and
add
mov
xchg
jp
sbb
data16
jg
subb
out
lods
sbb
jne
adc
cwtl
sub
push
les
mov
pop
lret
cmpsb
cltd
pop
cmp
push
push
xlat
out
inc
cmp
xchg
dec
scas
push
rcll
rolb
loopne
adc
xchg
mov
jne
inc
add
adc
les
in
mov
into
out
xchg
mov
faddl
adc
xorb
push
and
cmp
sub
adc
orb
inc
faddl
loope
and
fnstcw
ret
pop
std
push
xchg
add
xor
loop
mov
pusha
mov
pop
stos
cld
adc
mov
mov
adc
movsb
fmul
xchg
bound
iret
jns
mov
idivl
fsubrl
sbb
icebp
bound
mov
shrb
cmpsb
xor
sahf
xchg
push
push
lcall
test
mov
sub
js
insl
outsb
mov
adc
andb
and
mov
ret
mov
aaa
sub
adc
std
aaa
inc
inc
hlt
mov
cli
inc
fadds
jae
stc
push
cmp
movsb
sahf
enter
cld
setge
mov
shrd
mov
movsl
popf
mov
jl
inc
mov
rcrl
or
js
mov
popa
xorl
lea
arpl
push
sub
filds
pop
ljmp
jp
shr
add
aas
adc
popa
push
or
ljmp
orb
inc
loopne
and
pop
aad
pop
fcmovb
push
jl
mov
jae
ficoms
fmull
fstl
xchg
lcall
fdivrl
ljmp
xlat
inc
fstl
adc
negl
mov
fucomip
sbb
xor
mov
in
mov
cli
xorb
pop
xchg
mov
lcall
add
xchg
mov
arpl
out
add
fnstcw
xchg
push
cmp
int3
in
sbb
ljmp
xor
or
popa
adc
outsb
dec
xchg
std
loope
je
xchg
daa
xchg
outsb
pop
dec
lea
aaa
sti
lcall
or
jb
sub
movsb
sbb
sbb
jp
push
sbb
test
int3
or
aas
sahf
pushf
inc
cmp
sub
into
or
cmp
repnz
int
loope
in
sbb
sub
mov
in
lahf
xor
or
pop
gs
clc
sbb
and
fdivr
adc
push
fistps
or
mov
dec
in
js
les
repz
call
rcr
and
daa
cwtl
xor
mul
fs
aad
add
mov
sbb
xchg
ja
cltd
xchg
mov
lds
stos
dec
jns
and
sbb
mov
xchg
xlat
xchg
pop
leave
push
sbb
ficoml
push
cmp
aam
stos
mov
or
cmp
loopne
xor
int
es
out
mov
adc
inc
es
out
out
dec
xchg
shr
and
mov
divb
mov
mov
xlat
inc
mov
inc
repnz
xor
cvttps2pi
xchg
inc
in
pop
pop
mov
xchg
jbe
pop
or
add
shrl
daa
movsl
out
mov
stc
inc
sub
inc
lock
inc
subl
xor
jge
xchg
xchg
inc
add
xchg
push
add
inc
loop
push
xor
inc
cld
lahf
es
cmp
stc
gs
ja
mov
idivl
leave
int3
jo
cs
sbb
sub
inc
pop
jle
jb
mov
push
stc
hlt
fucomp
lods
and
fwait
pop
jb
add
clc
or
mov
cmp
jo
xchg
iret
mov
fsubp
dec
pop
mov
insb
mov
stos
test
xchg
or
mov
inc
out
pop
or
mov
mov
aad
add
jmp
sbb
jecxz
push
push
push
loope
jo
in
or
out
xchg
xlat
mov
and
mov
les
int3
test
sbb
mov
fisttpl
push
imul
dec
in
adcb
lea
aam
cmpsb
xor
enter
sbb
push
jb
test
or
add
add
loopne
dec
lea
in
mov
out
mov
jmp
xchg
add
dec
cmpsb
dec
push
loope
xor
sub
pop
lods
xchg
scas
mov
jne
fimuls
jecxz
cmc
movl
in
cmpsl
imul
pop
ret
and
int3
cmpsb
jmp
in
mov
outsb
out
int3
mov
test
stc
dec
cmp
lea
mov
ja
pop
shrl
fildl
sbb
sub
or
inc
sbb
mov
and
sbb
lcall
fwait
shlb
adc
rclb
xchg
push
in
es
rcrb
inc
popf
xor
repz
mov
add
lea
xor
xor
fisubrs
sbb
pop
add
out
rcrl
adc
jecxz
lret
popf
sub
xchg
mov
sub
xor
nop
pop
imul
adc
fsubrs
ret
sbb
movsb
push
mov
and
xchg
pop
cltd
jno
push
aaa
dec
mov
push
notb
gs
push
mov
mov
dec
pop
xor
sbb
aas
cwtl
sbb
mov
je
lock
cmc
movsl
movsb
call
or
dec
daa
mov
jg
icebp
dec
std
jno
mov
out
out
xchg
cmc
lea
scas
adc
push
add
pop
aaa
dec
dec
add
mov
mov
out
clc
mov
inc
fcomps
arpl
popf
negl
insl
push
popf
rorl
jnp
ret
std
lret
xor
cmp
fisubrl
mov
andb
sbb
and
je
sub
outsl
cmp
pushf
dec
mov
mov
push
or
mov
test
jge
pop
jl
inc
push
ljmp
or
mov
dec
mov
sub
sbb
ret
jns
jae
jge
inc
movsb
das
out
mov
in
stos
dec
jae
jno
xor
xor
dec
mov
icebp
mov
ss
sahf
scas
xor
push
lds
mov
cmp
fwait
addr16
mov
sub
cwtl
jl
jnp
sbbb
sub
lret
jmp
jno
xchg
mov
ret
enter
sub
add
loopne
negb
mov
sub
mov
push
sbb
pop
cli
inc
sub
movsl
pop
add
cwtl
test
or
lahf
fsubs
insl
enter
xor
mov
push
jbe
sbb
rol
jno
xchg
jae
dec
and
mov
xchg
mov
sub
arpl
xor
out
mov
imul
push
cmp
idivb
aas
mov
in
or
push
and
clc
call
pop
out
iret
and
push
xor
xchg
addl
hlt
fstl
nop
loope
aad
out
jmp
inc
cmp
push
xchg
pusha
inc
push
adc
pusha
inc
cmpsb
mov
es
and
and
loop
adc
fs
call
sub
andl
mov
sub
cmpsb
shrl
inc
pop
out
lods
sti
xlat
fdivr
sub
dec
icebp
jo
repnz
in
bound
and
dec
enter
int3
mov
xchg
fs
enter
sbb
arpl
sub
mov
mov
insl
enter
rclb
mov
cmpsl
mov
sub
pop
mov
jl
sti
inc
adcb
rcrl
push
jg
sti
fmulp
mov
add
xchg
cltd
sub
pop
lret
or
and
or
jge
jmp
mov
inc
inc
mov
push
ret
jb
mov
cmp
add
fstl
popa
jg
and
and
fwait
gs
sbb
ret
daa
sub
dec
inc
movsb
pusha
out
test
inc
ret
cmp
jle
or
sti
cmp
jno
push
loopne
jo
fbstp
sbb
clc
mov
call
sub
jge
in
fsubs
mov
je
stc
push
ficompl
loope
pop
adc
sbb
imul
mov
inc
int
and
xor
sub
outsl
cmp
es
stos
inc
dec
out
xor
xchg
adc
mov
push
inc
dec
mov
mov
xor
stc
addr16
xchg
int
movsb
repz
fdiv
loop
cmp
mov
or
push
daa
cli
data16
es
sbb
or
int3
xor
pop
movsb
into
out
imul
push
call
fnstenv
stc
adc
insb
ret
mov
add
int
jecxz
mov
fsubl
int
pusha
in
sbb
add
adc
mov
lret
lea
aas
adc
leave
and
mov
and
fwait
hlt
push
add
aas
cmp
cltd
jne
xor
es
jbe
add
stos
inc
pop
jg
iret
cmc
or
fwait
ret
push
or
cwtl
sbb
xor
sti
sbb
ret
mov
int3
jge
into
rolb
sub
or
ss
push
shl
lahf
xor
aam
fstpt
fcoms
iret
out
jg
fisubs
pop
pop
push
jae
les
xor
scas
push
mov
into
jecxz
cmp
cmp
xchg
aam
repz
add
cwtl
nop
gs
popa
loop
scas
push
add
out
iret
sbb
sbb
add
cmp
jns
pop
pop
dec
lods
jge
dec
jno
outsb
sub
add
pop
sbb
xchg
inc
leave
test
inc
sub
loop
aam
xor
imul
test
repz
inc
adc
pop
pop
pop
jmp
shr
jle
xchg
je
rorb
and
addr16
stos
xchg
fcomps
cmp
movsl
mov
xor
adc
and
movsl
fnstcw
mov
jg
movsl
cmp
ficompl
aad
ljmp
mov
icebp
sbb
test
lcall
inc
call
sub
dec
and
adcb
cs
cmp
mov
pop
xorl
push
js
xchg
xchg
sub
in
mov
mov
xchg
mov
sub
cmp
jmp
jbe
or
movsl
popa
pop
hlt
mov
inc
sbb
out
and
sbb
jmp
pop
mov
lahf
push
xorb
xor
imul
mov
or
push
bound
cmp
cmpsl
lods
roll
lods
dec
pop
fmulp
push
addb
mov
outsl
nop
inc
aas
les
mov
inc
fsub
push
sarl
push
pop
push
das
sub
sbb
lcall
sbb
cmp
add
sbb
cmp
test
jno
jo
fwait
cli
mov
imul
xor
call
dec
dec
pop
aaa
lahf
pop
mov
pop
fisttpll
push
adc
xchg
inc
sub
add
bound
outsb
aad
push
mov
fnstsw
cltd
mov
xchg
push
xchg
sub
mov
fwait
inc
sarl
and
in
xchg
addl
jl
cmc
or
mov
testb
pop
outsb
xlat
mov
test
mov
sbb
fisttpl
add
sbb
and
mov
mov
add
pop
fcmovu
cmpsb
aas
jbe
add
mov
fistpl
ror
sub
mov
or
hlt
push
cmp
mov
outsb
inc
mov
fisttpll
mov
popa
and
push
sahf
outsb
popa
stc
lods
fistps
sti
push
push
sbb
in
dec
cmp
push
xchg
mov
fstp
sbb
xchg
loope
add
fwait
aad
dec
jp
lea
xlat
inc
test
mov
fwait
insb
fidivl
dec
sbb
adc
pusha
dec
outsb
pop
dec
pop
movsl
and
mov
or
mov
pop
cmp
ss
sub
sbb
out
add
and
cmp
cs
mov
push
hlt
mov
sbb
mov
jmp
pop
inc
or
mov
lods
aas
insb
push
cmp
dec
ret
shrb
into
popf
mov
test
rclb
lcall
xor
repnz
push
imul
subb
xor
test
push
pusha
inc
ffree
arpl
test
sbb
fmull
jnp
repz
out
push
out
sub
outsl
out
cmp
ret
or
jl
and
push
jns
jnp
in
popf
mov
adc
or
push
cli
cmpsb
shll
dec
and
arpl
mov
jb
mov
jmp
pusha
stos
loope
mov
ljmp
mov
iret
addl
rcrl
push
loop
jecxz
or
inc
lahf
or
cmp
in
jp
cmp
cmp
test
and
and
bswap
fistps
push
sub
xchg
sbb
loop
sbb
or
adc
pop
call
sub
sbb
es
test
aas
rclb
sub
sbb
push
aaa
sub
mov
shlb
test
lahf
dec
dec
inc
mov
jns
adc
sahf
out
add
sub
aas
fadd
xchg
pop
and
dec
fistpll
cmp
sbb
int
jne
ljmp
mov
pop
faddp
sub
ljmp
cmpb
adc
cs
test
xchg
sbb
std
roll
xchg
ss
data16
add
sub
dec
in
pop
lret
stos
add
loope
sub
cmp
xor
jo
cmpsl
sub
and
loopne
sbb
enter
push
lahf
push
inc
inc
imul
std
mov
lret
push
jne
ja
mov
hlt
sbb
add
addr16
adc
int3
dec
std
pop
sahf
xchg
mov
cmpsb
mov
sbb
rcr
lock
xor
xor
cmc
mov
xchg
arpl
outsl
pop
push
mov
out
and
imul
std
roll
xorb
insb
mov
push
jp
add
imul
xadd
adcb
std
pop
pop
inc
sub
push
cld
lods
sub
enter
aaa
out
sahf
icebp
jb
sbb
and
inc
jp
notl
lea
jge
out
mov
dec
add
popa
sub
je
scas
fdivs
xor
jp
cld
sub
fsubrl
pop
or
push
ljmp
adc
lahf
aad
mov
data16
sarb
stos
and
jmp
sar
pop
inc
sbb
mov
aam
into
sbbb
push
test
lds
repz
out
mov
or
add
dec
cmp
sti
pusha
fisttps
loop
cmp
push
aas
faddl
imul
sbb
test
add
jo
js
loope
cwtl
ret
dec
out
hlt
mov
dec
cltd
mov
mov
arpl
jno
in
bswap
inc
mov
shll
andb
push
cltd
dec
jmp
divb
jmp
scas
jge
jbe
loope
ja
dec
inc
inc
pushf
jecxz
jae
cmc
pop
mov
cmpsl
cmp
outsl
outsb
das
pop
pop
jecxz
xor
xor
mov
jns
mov
out
mov
jle
jge
jmp
into
lahf
mov
pop
and
xchg
xchg
dec
mov
sarl
aas
push
das
push
cmc
fwait
and
orb
dec
add
pop
es
cli
icebp
out
or
push
sarb
in
cmpb
bound
sti
mov
pop
ficomps
nop
and
jns
cmp
sbb
mov
cmp
sbb
jbe
xor
xor
outsb
cltd
fsts
sbb
add
push
and
inc
shlb
fidivl
cli
in
inc
stos
and
cmpsl
mov
mov
jp
fmul
pushf
fs
in
jg
insb
mov
inc
xchg
mov
dec
fdivrl
add
mov
cmpsb
jge
sbb
lds
in
add
mov
add
mov
mov
jle
clc
push
aam
pop
cmp
and
arpl
inc
sub
movlps
ret
not
push
mov
addl
movsl
add
cltd
gs
mov
inc
stos
lods
lds
jae
daa
std
adc
pusha
les
imul
cmpb
icebp
add
xchg
imul
aaa
in
xchg
out
test
add
push
addr16
jb
out
sbb
dec
outsb
hlt
push
sbb
xchg
cmc
mov
adc
adc
jb
sahf
or
repz
pushf
mov
mov
sbb
dec
inc
dec
or
ljmp
aaa
jp
out
and
fdivrs
imul
js
lods
push
adc
icebp
adc
or
and
fbld
stc
ret
repnz
rorb
movsl
cs
hlt
lea
cli
fwait
push
addr16
subl
fucomip
dec
pushf
es
inc
cmp
out
or
jb
push
loop
dec
push
stos
sbb
das
fildl
cmp
adc
stc
pop
mov
and
mov
push
int3
popf
add
xor
test
xchg
aas
xchg
in
sbb
fstpl
jnp
shrd
fstps
jbe
inc
fidivl
mov
push
out
xchg
call
ja
cwtl
test
mov
arpl
jmp
cs
cwtl
push
xchg
jge
sbb
xor
gs
mov
xor
int
and
xor
lods
call
mov
xchg
sub
mov
mov
cld
dec
mov
aas
mov
insl
mov
xor
iret
dec
outsl
fldenv
adc
decb
cmpl
pop
mov
fstpt
lods
pop
push
mov
and
cld
and
mov
xchg
mov
sti
pusha
sbb
mov
dec
jo
ds
xor
in
shl
inc
dec
nop
push
dec
int3
and
mov
mov
pop
sub
mov
das
ss
cli
roll
pushf
aad
in
pop
cld
out
push
mov
outsl
imul
pop
mov
jecxz
mov
leave
and
mov
aam
sub
lds
inc
mov
dec
jl
dec
xchg
sub
mov
sub
das
add
sbb
sbb
insl
cmpsl
dec
mov
es
jle
xchg
psllw
sbb
mov
adc
sarl
jb
movsl
pop
adcb
xchg
mov
dec
out
fisttpll
xor
aam
gs
and
xor
push
scas
cmp
cmpsb
js
dec
es
sbb
addr16
ficomps
scas
cld
mov
leave
stos
lock
sub
ds
sbb
pop
adc
adc
popa
adc
xchg
or
dec
lock
stos
lods
push
les
setp
clc
sahf
pop
ret
scas
mov
call
fcomi
inc
pushf
or
data16
cmpsl
nop
push
cmc
lock
int
xchg
les
ljmp
push
add
int3
insl
push
sub
xchg
push
andl
shlb
iretw
sub
shlb
ljmp
sti
call
add
pop
mov
leave
and
fs
push
je
inc
push
inc
gs
cltd
ret
dec
xchg
cmpsl
push
idivb
sbb
les
mov
xlat
mov
hlt
addr16
into
lock
fistpll
pop
push
shl
lahf
inc
shr
subl
addr16
jbe
push
int
data16
shr
or
pusha
xor
out
add
cltd
xchg
fisubrs
addb
xchg
lret
cmpsb
aam
pop
aam
push
outsl
rorb
add
lcall
add
ljmp
ja
xchg
inc
test
and
int3
test
addr16
sub
mov
push
mov
repnz
ljmp
cmpsb
mov
push
fdivrl
mov
add
sti
clc
les
fstpl
aam
enter
mov
in
mov
repnz
xchg
shlb
and
cmp
imul
xchg
xlat
lret
jp
cmp
push
xor
add
fistps
add
lcall
cmp
push
add
bound
addr16
fs
push
fbld
test
ljmp
pop
and
add
push
outsb
js
insb
or
cmp
sub
and
mov
or
scas
in
loope
and
or
fs
dec
dec
mov
scas
jne
sbb
or
cmpsb
inc
icebp
mov
out
cltd
insb
iret
mov
fs
loop
mov
jg
in
test
sbb
aam
mov
mov
xchg
sti
push
lcall
mov
xlat
aaa
test
add
test
push
sbb
mov
insl
add
rcrl
mov
mov
in
sub
mov
stc
insb
dec
outsl
mov
dec
push
jae
or
orl
mov
lret
mov
push
fiadds
xchg
add
xor
loopne
cmpsl
insb
add
add
adc
xor
xchg
mov
xchg
test
pushf
cmpsb
xor
aas
fcmovnb
pop
mov
jmp
pop
test
insb
inc
movsb
inc
and
test
mov
je
incb
divl
fdivl
or
pushf
iret
xchg
cmp
test
inc
out
movsl
repnz
pop
ss
push
cmc
test
xor
cmpsb
lock
pop
mov
sbb
xor
xor
incl
xor
cwtd
lods
mov
into
incl
lcall
cmp
and
or
frstpm(287
mov
cmp
int
cmpsb
inc
repz
int3
cs
mov
loope
cltd
inc
sahf
stos
dec
leave
es
lods
xchg
cmp
inc
in
dec
lds
cmpsb
clc
xchg
dec
fstps
aaa
daa
repz
imul
mov
mov
std
jl
sbbb
arpl
sbb
fmuls
mov
jmp
push
mov
mov
in
sti
sbb
leave
mov
sub
pop
jne
push
aaa
js
pop
mov
xchg
fsubrs
or
aad
in
push
push
repnz
jae
jp
es
cmp
cs
adc
lret
jl
bswap
lods
cld
cmp
jae
loop
cwtl
movsb
out
fdivl
mov
in
push
sbb
cmpsl
jl
imull
adc
xchg
jno
shrl
mov
xchg
outsb
out
and
and
ret
scas
es
testb
add
mov
add
jb
mov
bswap
js
or
cltd
push
inc
xor
mov
mov
es
sbb
adc
iret
loopne
nop
ds
shll
cwtl
iret
mov
jae
xchg
shr
mov
ret
push
repnz
sub
add
mov
jae
inc
and
data16
push
push
add
das
cmpsb
shrl
popa
aaa
inc
ror
pop
out
lds
lods
cmpsb
cmp
and
mov
fdivrs
out
repz
or
sbb
cs
imulb
fcomi
and
fistpll
pop
pop
inc
add
and
movsb
es
pop
lcall
mov
xlat
add
pop
mov
test
add
in
mov
jo
and
imul
dec
xlat
aas
cmpsb
xor
mov
lods
xor
xchg
dec
xor
out
cmp
dec
pop
jo
sub
mov
inc
push
imul
mov
outsl
jle
cs
movsb
fwait
cmp
push
sub
stos
mov
mov
imul
les
bound
add
pop
cld
mov
out
and
in
leave
loopne
repz
push
xchg
insl
sub
jp
or
fs
lahf
adc
mov
sbb
pop
jle
sub
and
inc
scas
fstl
imulb
jbe
int3
push
mov
xchg
jmp
pop
sbb
adc
jns
iret
fiaddl
out
cmpsl
xor
jle
cli
in
lods
inc
aas
in
xchg
adc
push
add
xchg
gs
add
adc
dec
add
je
pushf
jle
sbb
jp
xorb
cmc
sbb
pop
push
icebp
inc
mov
cmp
pop
les
inc
shlb
pop
lret
sub
cmp
cmpsb
mov
cmp
xchg
js
mov
enter
outsl
fisttpl
fldcw
pop
dec
int
inc
fs
insl
or
sahf
mov
neg
pusha
sub
imul
imul
push
lea
les
pop
sub
std
push
push
adcl
sub
mov
imul
outsb
ss
adc
ret
fwait
xor
push
cwtl
xor
daa
test
decl
rorl
mov
mov
cmp
pop
xor
and
andl
in
lcall
dec
rcr
mov
inc
repz
ret
xchg
insl
fcoml
popf
sub
in
jnp
mov
scas
cld
in
das
stos
jnp
jae
movsb
call
and
popf
jns
popf
cmp
xchg
inc
push
xchg
movsl
js
invd
sarl
push
add
cmc
adc
jge
cmp
pop
cmpsl
xor
clc
jae
jno
sbb
jg
adcb
jnp
push
mov
dec
jo
jo
sbb
outsl
rcr
pushf
inc
mov
jno
lds
inc
push
test
and
mov
cmp
push
mov
scas
js
cmpsb
lods
es
daa
add
rcll
sbbb
sahf
mov
sub
mov
fildll
mov
in
aaa
fisubrl
es
jne
shlb
adc
sub
add
pop
pop
mov
sar
sub
cmp
outsb
xchg
das
lret
xchg
push
dec
mov
pop
dec
in
hlt
repnz
aad
adc
inc
fdivl
xchg
popa
cld
push
lods
gs
mov
test
pmulhw
or
sub
movsb
cli
in
cmp
cmpsb
or
aam
rorl
sub
in
dec
jle
sbb
ret
lret
inc
xchg
in
and
inc
sbb
add
out
mov
ja
shr
out
movsl
insl
shlb
popf
xchg
jge
mov
mov
and
sbb
cmpsb
mov
pop
ljmp
daa
mov
push
xor
sbb
or
gs
pop
mov
jnp
sbb
inc
cmc
aad
sub
xchg
mov
sub
arpl
adc
popa
xchg
movl
subb
std
mov
mov
or
cltd
jne
mov
xor
push
add
or
loop
jae
xor
lods
inc
sub
push
add
push
sbbb
adc
xchg
pop
sub
pop
push
mov
in
test
xchg
jmp
sub
out
lret
or
xchg
xchg
rcrb
fmul
lds
or
fmuls
and
scas
adc
iret
and
and
aaa
sti
cmc
xor
push
mov
jp
or
mov
xor
dec
xlat
adc
mov
mov
iret
add
imull
push
sub
mov
mov
into
pop
out
iret
pop
popa
test
push
out
xchg
push
mov
imul
sti
daa
aad
loop
dec
addr16
jmp
shr
xchg
out
into
std
push
xor
orl
jecxz
icebp
mov
sbb
or
aam
fs
xor
cwtl
mov
sub
mov
jle
push
mov
popf
pop
pop
jecxz
mov
pushf
or
add
nop
je
sbb
ret
push
cmp
push
bound
rorb
sub
mov
jo
mov
cmp
enter
pop
xchg
iret
int
into
and
shll
pop
and
movsl
lods
fisubrl
cmp
inc
lcall
stos
jge
mov
mov
loopne
dec
dec
int3
movsl
sti
pusha
arpl
std
stos
jae
imul
dec
mov
lods
dec
and
mov
mov
rcrb
mov
lock
xor
push
movsl
sahf
xor
xor
rcrl
mov
pushl
inc
aam
jnp
push
adc
inc
inc
in
or
aad
or
xor
push
pop
jle
aam
dec
loope
iret
and
mov
push
movl
jg
xchg
cmpb
and
push
inc
clc
stc
cli
jl
loopne
arpl
out
xor
jns
sti
sub
out
xchg
in
cmc
xchg
push
pop
movsl
jno
xchg
pop
iret
push
and
insb
mov
lea
mov
sbb
mov
dec
bnd
inc
adc
cmpsl
fucomi
fneni(8087
stc
fs
dec
push
test
dec
aas
and
les
mov
cmpb
mov
pop
inc
jns
sub
pop
xor
repnz
mov
scas
sbb
test
dec
jl
or
jae,pn
adc
testl
je
daa
int
sahf
inc
xchg
adc
or
int
xchg
subb
not
push
mov
cli
loopne
pop
mov
or
inc
cmpsb
test
ljmp
daa
arpl
jmp
ret
xor
add
sbb
out
cmp
hlt
xchg
jns
pop
dec
out
cmpsb
xchg
mov
adc
push
xchg
cmp
js
sbb
iret
mov
int3
pushf
loopne
add
dec
xor
inc
push
and
shl
push
bound
push
js
lea
mov
or
stos
mov
mov
inc
or
xor
mov
fists
inc
xor
xor
mov
xchg
out
leave
ret
js
jl
xor
or
into
iret
sbb
insl
and
sbb
xchg
sbb
leave
cmp
dec
aaa
cs
out
fidivl
xchg
test
xorb
cld
fwait
dec
int
gs
adc
cmp
mov
inc
addl
int3
in
sbb
ja
pop
std
mov
repz
cltd
push
aad
dec
mov
mov
pop
aad
das
aaa
mov
in
rclb
shl
pushf
push
movsb
shlb
mov
sbb
cmp
call
push
pop
movsb
mov
mov
leave
sub
push
lds
rolb
push
sbb
lds
push
jne
fstl
jae
cs
adc
jg
pop
inc
testb
sub
fsub
test
sub
xchg
jno
mov
cmp
mov
orl
inc
xor
push
jns
add
xchg
sbb
sub
addl
pop
inc
sub
scas
scas
fistpll
loope
pop
inc
mov
stc
sbb
xor
jno
xor
inc
pop
pop
or
mov
pop
xlat
idiv
cmp
out
pop
pop
fmull
sub
scas
mov
dec
out
clc
pop
adc
mov
mov
inc
sti
cmp
out
jo
pop
imul
adc
xchg
jno
xchg
and
or
lret
sub
dec
sti
push
mov
add
cltd
lret
call
jne
adc
lret
gs
pusha
mov
test
fildl
jae
arpl
mov
jno
addb
push
imul
decl
and
je
mov
das
popf
sub
ret
repz
inc
lock
or
xchg
in
adc
lods
mov
cmc
mov
in
loopne
xchg
es
jecxz
not
xor
cmp
lods
mov
xor
and
clc
push
jecxz
mov
dec
test
out
mov
in
sbb
cmp
push
dec
cmpsl
sub
xorl
xchg
pop
stos
clc
arpl
loop
shrl
inc
xor
sub
xchg
jecxz
mov
test
jne
std
aam
jns
pop
pop
fcoms
inc
gs
div
cmpl
cmp
popa
stos
mov
jecxz
aaa
das
iret
mov
push
and
jecxz
sbb
push
mov
adc
push
or
xor
out
cmp
mov
leave
dec
mov
mov
fwait
les
jbe
xor
arpl
mov
xor
out
mov
mov
ret
ja
pop
mov
lret
pop
into
sub
and
sti
lds
mov
das
lret
mov
bound
popf
push
jae
cmp
ss
ret
pusha
mov
loopne
push
cmpsl
inc
push
lret
mov
out
js
cmp
imul
mov
inc
movsl
lahf
jmp
pop
lcall
dec
fs
aad
sti
inc
sub
cmc
int
fucomip
adc
inc
fs
lods
push
cs
pop
pop
out
repz
cld
push
je
add
sbb
hlt
pop
je
adc
pusha
mov
dec
jp
push
scas
adc
mov
int
lock
mov
insl
sub
cmp
cmp
xor
cmpsl
pop
ret
insb
add
popf
popa
insb
or
call
js
gs
test
cmp
in
adc
pop
into
imulb
push
add
xchg
icebp
sub
aad
push
in
test
out
outsb
test
cmp
jo
jne
mov
inc
dec
pusha
sbb
xor
cmp
rolb
ficoms
dec
sbb
insl
cmpsb
addr16
int
mov
push
mov
cmc
mov
mov
mov
in
inc
dec
stos
andb
insb
out
cs
ss
inc
jmp
or
arpl
jnp
adc
mov
mov
pop
ret
movsl
push
sub
outsl
mov
sub
or
gs
cmp
jb,pn
pop
cltd
inc
cli
mov
shll
dec
jmp
push
inc
into
mov
dec
xchg
add
sub
dec
test
jp
sbb
add
pusha
rcll
mov
mov
inc
xorb
orl
cmp
imul
dec
mov
idiv
test
jb
fbld
push
sbb
add
jnp
in
iret
mov
cmc
push
or
add
cmovns
das
mov
or
mov
popf
push
push
imul
xchg
ds
lods
lods
mov
popf
add
iret
pop
dec
mov
arpl
mov
xor
aad
les
addl
adc
arpl
xchg
or
jne
scas
popa
ds
cld
addr16
loope
or
dec
jno
adc
rorl
jae
inc
mov
in
nop
idivl
pop
mov
out
lods
cmp
int
mov
add
mov
xchg
scas
xchg
fdivrl
xor
mov
jle
ss
fcompl
in
cld
or
cltd
mov
in
push
test
mov
lods
jne
mov
push
daa
leave
mov
cmpsl
lock
xchg
xor
add
xchg
jg
mov
jg
adc
inc
cmpsb
dec
leave
mov
clc
push
insb
stc
insb
adc
or
add
int3
lods
sub
popf
cld
add
push
outsl
jmp
cli
in
push
mov
cmp
jno
jmp
ss
fcom
xchg
xchg
mov
nop
xor
push
and
mov
gs
add
pop
inc
aaa
pop
cmp
shll
and
insb
push
mov
mov
and
push
sub
and
orb
ret
lea
test
sbb
insb
lds
les
test
dec
arpl
outsb
imul
test
add
mov
cltd
mov
ja
and
ret
pop
addr16
notl
add
sbb
mov
rol
mov
push
mov
mov
inc
lret
or
or
adc
jecxz
ds
dec
in
inc
xchg
fcmove
push
ret
lock
dec
xor
jl
cltd
cmp
popf
enter
cmpsb
pop
fcoml
jecxz
push
stos
into
dec
xchg
fwait
mov
cmc
jno
fisubrs
sar
notl
aas
gs
add
mov
cmp
push
or
jp
pop
mov
cmp
iret
pop
in
inc
add
movsl
int
cmp
addr16
outsl
and
push
outsb
fwait
outsb
xor
mov
mov
ljmp
insl
testl
shr
sub
or
sbb
rcl
mov
in
and
cli
in
in
scas
mov
adc
int3
cmpsl
xchg
loopne
cwtl
adc
insb
jl
bound
sbb
xor
insb
cmpsl
pop
dec
sub
xorb
sbb
push
pop
inc
push
push
lock
js
push
add
cmpsb
adc
xchg
dec
movsl
cmp
jnp
sub
or
cmpsl
push
adc
rorb
xor
sti
mov
imul
xchg
and
sbb
adc
push
scas
imul
pop
jge
rcrl
aad
adc
js
js
pop
repz
lea
lcall
push
adc
sahf
cmpsl
rorl
lods
push
cs
enter
js
sbb
adc
push
insl
enter
mov
cmpsb
pop
out
movsl
push
add
mov
outsl
lcall
pop
sbb
out
sbb
add
je
cld
push
leave
cmp
bound
pop
int
notl
int
movsl
aas
inc
hlt
sbb
pop
popa
das
mov
les
jmp
popa
loopne
sub
mov
and
aas
sti
dec
mov
xchg
push
cltd
popa
clc
jle
into
leave
jns
ds
fldcw
mov
and
lds
pop
sub
out
jecxz
mov
ret
xor
dec
push
test
jae
mov
cmp
testl
adc
sub
pusha
mov
mov
js
iret
fisubrl
xchg
adcb
push
jp
call
popa
vmovmskps
les
je
inc
mov
sbb
xchg
pop
jmp
mov
repnz
jbe
cmp
ljmp
dec
test
stos
insb
xchg
sbb
test
outsb
outsl
cmc
fists
cmp
cmp
iret
loope
faddl
cmp
dec
fisttpll
and
popa
push
and
xor
shlb
mov
leave
fcomp
fsts
repnz
cmp
pop
cmpsb
not
push
inc
add
jle
insb
pop
mov
xchg
jp
jge
push
pop
cmp
mov
sbb
mov
ret
mov
inc
lahf
in
mov
fiaddl
jp
fstpl
data16
movsl
push
outsb
xlat
cmp
xchg
fs
sbbb
ds
movsl
repz
and
jp
popa
or
and
mov
or
andl
xor
xchg
push
mov
xor
push
mov
or
add
jns
fwait
sahf
int
ljmp
leave
test
out
lahf
stc
jne
ss
xor
add
inc
and
ljmp
jno
in
and
adc
jae
inc
stos
aas
insl
scas
mov
pop
jns
aam
scas
ss
push
scas
adc
push
in
fs
or
adc
ljmp
pop
cld
fbld
fidivrl
add
add
aam
andl
addr16
pop
sbb
test
sub
pushf
bound
adc
mov
xchg
jge
icebp
ret
mov
scas
push
and
and
shrb
leave
cli
adc
gs
outsb
into
cli
mov
push
inc
cmc
jecxz
mov
cld
pop
push
push
gs
mov
rcr
xchg
mov
mov
push
pop
mov
pop
and
shll
ja
or
xor
cmpsl
ret
shrb
lret
ds
iret
faddl
lods
outsl
shr
addl
repz
loope
jmp
mov
inc
loopne
enter
aas
add
leave
push
pop
xchg
lods
xor
inc
into
sub
cmpl
jg
bound
rolb
push
clc
out
push
push
fnsave
nop
scas
mov
xor
dec
inc
cs
shrl
adcb
jnp
push
cmp
movb
cmc
outsl
cs
movsl
sbb
mov
and
or
hlt
and
xor
or
mov
cmc
int
inc
adc
mov
leave
repz
inc
popa
lret
push
lcall
jae
add
cmpsl
stos
xchg
dec
jge
mov
loopne
out
xchg
mov
aas
jno
sbb
movsl
jae
mov
in
pop
jns
mov
leave
mov
movsb
and
in
jbe
fsub
sbb
push
insb
and
aas
xchg
and
iret
les
repz
cmc
shrl
adc
hlt
roll
xchg
cli
jnp
mov
pop
popa
das
xchg
push
mov
lods
movsl
mov
cmp
mov
pusha
jne
inc
loop
pop
mov
sub
mov
mov
and
insb
int
mov
jns
xchg
sbb
mov
push
ret
xchg
mov
rclb
and
mov
and
je
push
jo
and
imul
add
clc
pop
pop
dec
cmp
and
int3
dec
loop
jne
aas
out
lahf
loope
dec
test
in
pxor
add
out
sti
or
out
sbb
fnsave
pop
or
gs
cmp
into
jo
cmp
lret
pop
pop
adc
imul
jecxz
mov
xchg
mov
pushf
dec
clc
lods
sub
rorl
clc
ljmp
lret
sub
pop
jmp
add
mov
mov
repnz
mov
je
out
sub
lret
jo
dec
sahf
dec
dec
pop
mov
seto
cmp
cmp
push
and
ret
dec
pusha
xlat
mov
ds
cmpb
or
popf
dec
and
daa
cmp
jg
inc
pop
push
out
in
repz
adc
adc
leave
repz
mov
push
fnsave
sbb
cmp
mov
or
enter
cmp
lods
out
sbb
outsl
sti
sub
dec
and
inc
push
fidivrs
xchg
mov
adc
addl
push
sub
or
mov
cwtl
imul
and
xlat
fildll
xor
add
jmp
js
leave
jae
movsb
pop
inc
xor
cmp
mov
nop
hlt
mov
xor
cmpsl
test
mov
xchg
sub
adc
xor
bnd
pop
push
xor
sub
imul
jb
fucomp
out
fcmovne
and
idivl
or
rcll
fs
mov
hlt
fadds
mov
std
sti
lock
pop
clc
mov
sub
test
mov
je
enter
sbb
mov
data16
mulb
clc
lods
jmp
fisubl
fisubs
pmaxsw
ljmp
mov
xchg
mov
int
ja
mov
sub
push
movl
mov
mov
add
mov
repnz
dec
mov
mov
ds
mov
xchg
ljmp
push
and
imul
test
xchg
push
adcb
in
pop
mov
inc
fsts
or
cmp
aaa
and
pop
xchg
adc
push
sbb
cmpb
jp
addr16
out
push
lcall
je
jo
jmp
pop
lods
adc
out
loop
cwtl
lcall
cmp
popf
add
mov
dec
or
pop
lea
call
stos
hlt
adc
pop
jg
ss
cld
das
into
push
aad
std
xchg
sahf
lods
mov
clc
xor
stc
xchg
pop
shll
lods
push
adc
out
jnp
xchg
pop
pop
xlat
mov
arpl
sub
inc
out
repz
repz
pop
fwait
pop
std
daa
loopne
cwtl
pop
popa
jg
inc
xor
jb
push
fdivrs
sub
sub
movsb
push
push
jbe
fadd
repnz
add
mov
sub
shrl
mov
pop
pusha
into
inc
or
cltd
cmpb
pop
icebp
cmp
arpl
sahf
daa
cmp
dec
in
cmp
ss
out
adc
fidivl
adc
inc
mov
bound
gs
inc
imul
repz
lret
in
add
lds
loop
jge
ret
jae
add
push
sbb
cli
mov
out
sub
cwtl
xchg
mov
sub
and
shrl
stc
les
out
push
mov
call
in
fstps
pop
into
es
push
add
and
dec
mov
movsb
lahf
mov
addr16
mov
or
ret
mov
lock
mov
sbbb
push
mov
roll
mov
xchg
and
cli
mov
sub
push
add
add
lods
mov
iret
repnz
adc
jne
inc
mov
xchg
imul
test
pop
idivb
push
jns
add
mov
or
cmp
ret
dec
jmp
dec
fsubrl
repz
adc
pop
scas
daa
add
pop
sub
lods
push
pushf
cmp
sbb
jne
mov
sarb
negl
inc
fs
sub
xlat
pop
and
xlat
or
shl
xchg
imul
lcall
mov
roll
adc
fadd
xor
popa
sti
push
addr16
mov
ss
or
jnp
outsb
xor
js
push
pop
sub
sub
test
lcall
adc
and
jge
ds
daa
imul
aaa
fiadds
decb
push
test
xor
sahf
stos
les
out
clc
dec
jno
xchg
cwtl
aad
call
in
das
dec
repnz
inc
mov
into
imul
mov
aaa
inc
ret
xchg
or
cmp
add
hlt
lock
jmp
repnz
jae
jmp
out
insb
and
sub
or
mov
movsb
mov
out
push
push
fcompl
test
std
sar
sub
mov
mov
in
and
jne
and
sub
pop
in
xor
inc
mov
lds
aad
dec
movhps
xchg
push
pop
scas
or
ret
ror
sbb
in
dec
adc
inc
out
sbbl
push
mov
mov
hlt
lock
jge
xchg
sbb
pop
aaa
xor
push
aam
dec
sbb
inc
mov
es
mov
pop
sbb
fwait
xchg
dec
nop
xchg
jo
add
and
and
push
push
push
lods
mov
movsb
or
pusha
loop
jecxz
std
jns
lret
push
mov
shll
orb
movsb
rolb
in
fistl
sub
loop
pop
mov
in
xor
push
xor
dec
out
mov
aad
mov
mov
fadds
scas
jbe
add
in
jns
sbb
pusha
out
fsubs
out
xchg
cltd
sbb
loop
ret
and
hlt
push
mov
dec
mov
cmc
and
stos
pushf
mov
dec
scas
aas
push
stos
idivl
sbb
push
and
inc
idivl
pop
mov
mov
loop
mov
lret
mov
out
jle
mov
andb
adc
cmpsb
push
push
push
enter
out
in
lds
dec
leave
aas
out
mov
push
mov
dec
scas
mov
popf
adc
xchg
decb
or
mov
bswap
imul
in
xor
mov
jnp
rorl
mov
mov
in
adc
or
mov
lahf
rolb
xchg
nop
movsl
jne
test
adc
and
xchg
jecxz
and
mov
mov
adc
ret
aam
dec
xchg
dec
jo
mov
lret
xor
out
sub
outsl
arpl
in
mov
xchg
add
push
push
enter
pusha
out
or
les
arpl
sub
jp
stc
add
mov
mov
jb
iret
into
jns
out
lds
enter
test
out
jnp
inc
cli
in
in
imul
in
push
mov
ljmp
mov
xchg
mov
jno
sbbl
stc
cmc
push
ret
lcall
pop
fiaddl
lahf
cwtl
lret
xor
filds
filds
mov
push
add
inc
test
mov
push
cmp
push
cmp
adc
sub
and
imul
out
outsl
sarb
push
dec
push
jb
aaa
test
hlt
mov
ljmp
xor
cmpl
mov
mov
fstpt
and
lock
out
call
jg
or
mov
shl
addr16
ja
xchg
es
push
in
and
jno
jne
lcall
push
movd
push
push
and
pop
out
jl
xchg
test
inc
insl
shlb
pop
lahf
sti
xor
sbb
mov
pop
stos
xlat
popf
lahf
pop
add
inc
cs
dec
in
out
stc
lahf
in
shl
mov
ret
jg
testb
dec
jnp
gs
push
pop
fdivrs
pop
cmp
push
xor
icebp
lods
outsb
mov
or
mov
jg
int3
xchg
or
dec
cmc
movsb
cmpsb
les
and
loope
xchg
dec
arpl
push
subb
jmp
pop
mov
jae
jl
pop
inc
movsb
test
insb
loope
adc
jg
dec
test
rclb
mov
xchg
mov
push
fisubrl
mov
jae
xor
out
push
pushf
packuswb
imul
stc
mov
jle
rorb
or
ja
ja
mov
lret
push
cli
xchg
jle
pop
jae
jecxz
not
mov
push
roll
lret
cmp
push
fisttpll
add
mov
mov
xchg
adc
inc
arpl
aaa
xor
mov
pop
and
fcomi
mov
jp
mov
cwtl
sbb
lds
js
add
mov
ret
mov
add
mulb
mov
pop
insb
add
daa
sti
or
ret
sbb
shrb
outsb
mov
test
cmp
mov
push
pop
xor
pop
das
lahf
and
adc
xchg
mov
ret
push
mov
repz
or
loop
lods
fsub
arpl
mov
adc
imul
mov
icebp
movsl
scas
mov
dec
or
or
popa
test
movsl
cmp
xchg
das
test
or
mov
ja
sbb
push
leave
cmp
in
mov
jbe
push
outsb
dec
int
imul
dec
nop
fidivl
les
pop
mov
push
mov
stc
sub
jb
insl
pop
mov
es
adc
mov
and
bound
decb
xor
lods
push
aas
pop
les
jbe
mov
pop
mov
xchg
fistpll
rolb
mov
mov
das
stos
in
fldt
shrl
inc
pop
xchg
mov
stos
mov
inc
mov
roll
xchg
pop
xchg
inc
or
jne
call
mov
mov
push
int3
pop
es
lea
ss
jno
fsub
sbb
add
and
outsb
pushf
xchg
adc
xor
les
icebp
pushf
lds
push
ret
pusha
in
sbb
sbb
icebp
push
in
pushf
mov
cmc
jns
stc
jb
push
pop
lcall
js
fisttps
ds
iret
xlat
stos
pop
test
jl
push
enter
int3
data16
and
rorl
add
andb
or
sbb
or
cmpl
xor
repnz
sbb
sbb
mov
jns
and
xchg
pop
mov
push
jne
mov
mov
inc
pop
imul
push
iret
outsl
pop
inc
fcmovnb
mov
mov
cli
sarb
movsl
addl
cltd
cmpsl
shl
inc
stos
or
into
push
dec
test
std
movhps
cld
pop
push
adc
sbb
sbb
jmp
pop
xchg
cmp
push
adc
outsl
lret
jns
aaa
add
adc
into
negl
jg
mov
push
scas
stos
cs
outsl
es
cs
add
mov
iret
ss
ds
lock
cmp
and
and
add
push
add
jle
pushl
lock
xchg
and
or
xor
ja
andb
and
movsb
push
ljmp
mov
loope
jl
dec
stc
cld
xchg
mov
sbb
pop
push
mov
jns
cld
inc
cmp
rcl
and
test
xchg
faddl
stc
push
test
rorl
mov
jae
int3
mov
inc
pushf
sti
or
inc
in
jns
push
std
ret
dec
jb
dec
sbb
xchg
sub
inc
clc
jl
mov
mov
subb
pop
jae
cwtl
xor
mov
sbb
rcll
sahf
outsl
dec
push
fwait
push
xchg
mov
or
and
popa
add
pop
pop
shll
outsb
in
sahf
jp
dec
adc
fdivl
mov
mov
das
xor
mov
into
pop
gs
xchg
outsb
test
lods
lcall
or
lahf
es
cmp
pop
rcr
dec
ficomps
mov
pop
idivb
out
arpl
pusha
addr16
stos
mov
stos
sub
faddl
lret
fisubl
xor
or
pop
sbb
jmp
movsb
ret
out
add
int
lret
nop
in
daa
pop
mov
jl
or
shrb
cmc
lahf
in
pop
fwait
cltd
xorb
testb
iret
sub
fwait
aam
sahf
cmp
mov
pop
inc
call
hlt
mov
adc
adc
negb
lods
inc
cmpsl
test
xor
insb
and
mov
pop
jno
test
dec
jo
or
add
xchg
sub
and
jnp
scas
pop
lds
orb
int3
dec
and
and
nop
dec
popf
pop
mov
imul
lcall
mov
mov
jbe
outsb
sarb
aaa
mov
or
sub
add
push
dec
cmpsl
mov
stos
jns
mov
cmp
imul
mov
leave
dec
rorb
fimull
popa
sbb
push
js
cmp
sub
cmp
mov
cmp
cwtl
add
stos
mov
scas
adc
adc
lcall
push
sub
mov
mov
dec
jne
std
sbb
inc
cmp
sbb
lods
inc
ja
sar
data16
test
ljmp
jmp
aad
aam
clc
inc
rcll
xchg
lock
fadds
jno
fwait
adc
pop
outsb
shlb
fisttps
xchg
bound
sti
sbb
or
push
adc
cli
outsb
xchg
aas
inc
idivl
stos
loopne
hlt
jmp
scas
mov
mov
test
stos
subl
push
sub
aam
mov
jl
mov
mov
or
mov
cmp
popa
jae
mov
mov
cmpsb
stos
add
outsl
repnz
or
fcmove
cmp
or
and
add
add
vfmaddsub213pd
test
xchg
shl
add
stos
cmp
xchg
fdivrp
cmp
pop
xchg
into
scas
shrl
inc
cmp
into
movsb
movsl
test
aad
lahf
push
or
lea
mov
aam
pop
xor
test
cmc
sub
sbb
lods
sub
mov
daa
or
adc
pop
dec
xor
stos
addr16
pop
dec
pop
iret
xor
cmpsb
lods
inc
fsts
mov
stos
stos
dec
jns
aad
pop
pusha
pusha
gs
mov
js
int3
loop
out
pop
dec
hlt
mov
mov
aaa
addr16
jb
fucomp
ret
repnz
dec
xorl
lea
push
or
scas
add
nop
push
out
jnp
xchg
scas
sbb
std
mov
ss
bound
push
imul
mov
imul
and
jbe
inc
dec
xlat
jmp
mov
jg
mov
cmp
inc
or
add
lds
nop
jno
mov
gs
pop
jb
pusha
pop
bound
ds
cltd
std
pushf
xor
inc
xchg
xor
dec
fcos
and
fwait
xchg
or
mov
movsb
sar
shrl
and
pop
dec
stc
cmp
js
push
push
add
pop
cmp
pop
inc
push
and
push
cmp
lods
push
fstl
lcall
jbe
lds
jmp
xor
je
mov
out
loopne
mov
fiadds
cmpsl
or
mov
cmp
pop
and
cwtl
pop
inc
sahf
fmull
lods
fldcw
rcr
roll
insb
jecxz
and
cwtl
push
cltd
cmp
mov
lods
bound
into
nop
jl,pt
xchg
test
ljmp
dec
and
out
pushf
pop
aam
or
je
xchg
adc
and
in
dec
inc
xor
movsl
add
aad
jnp
arpl
std
push
fsubrs
pop
cmp
in
sbb
mov
punpckldq
mov
sahf
or
sub
orl
in
ja
jnp
xchg
hlt
imul
xchg
test
cld
pop
fnstcw
dec
in
or
xchg
popf
ficoml
clc
push
ss
ret
or
in
loop
mov
sub
mov
or
inc
dec
jb
xchg
sub
arpl
cmp
inc
stos
xlat
xor
loope
fldcw
test
jle
mov
adc
fildl
push
jo
fstl
je
pop
mov
inc
mov
adc
or
add
inc
xchg
xchg
das
rcrl
mov
test
sahf
loop
add
cmp
xchg
mov
jecxz
adc
or
jb
mov
mov
sub
cmp
jmp
jmp
loopne
popa
fnsave
jge
int3
jmp
fnstenv
xchg
jp
mov
loopne
fidivrl
mov
add
xor
mov
movsl
mov
popf
sbb
adc
pop
ret
jne
push
inc
inc
imul
fs
scas
dec
push
insb
xor
jp
jg
or
or
xor
cmp
movsb
cmp
xor
icebp
or
stos
dec
shr
lods
xor
in
nop
pop
pop
ffreep
mov
leave
pusha
loopne
add
pop
push
pop
icebp
adc
mov
std
push
push
frstor
adc
fsubl
jl
icebp
imul
mov
aad
pushf
jle
inc
mov
mov
jge
push
shlb
and
cmp
jns
insb
std
dec
dec
enter
jp
repz
and
pop
stos
mov
adc
idiv
mov
xlat
cmp
push
hlt
sub
jno
test
shll
into
sbb
mov
lcall
push
insl
loop
fdivrs
fcomps
jmp
cmp
jle
int
push
mov
int3
sub
stos
loopne
scas
sub
arpl
lods
jae
and
and
pop
lds
fstpt
xor
push
jmp
jge
sub
iret
test
sahf
adc
out
cmp
inc
dec
pop
xlat
mov
outsl
jecxz
es
xchg
lea
pop
dec
ret
fcompl
pop
adc
inc
stos
or
sbb
xor
cltd
jne
fistpl
mov
outsb
dec
pop
jne
test
mov
jle
push
and
shl
xor
test
cmp
push
out
out
dec
std
cmp
jge
add
bound
shlb
mov
xor
dec
rorl
test
adc
cld
clc
lret
push
addr16
data16
dec
cltd
mov
inc
adc
arpl
xor
xor
dec
cmpsb
movsb
and
push
add
out
sbb
mov
cmp
jg
mov
out
mov
in
dec
sti
sbb
sti
stos
cltd
test
in
mov
stos
and
out
leave
add
lcall
nop
inc
data16
jecxz
daa
iret
dec
inc
std
imul
sub
les
push
xor
push
mov
iret
jno
and
lds
mov
test
arpl
stos
call
ljmp
mov
aaa
test
enter
inc
xor
rorl
nop
mov
inc
movsl
add
dec
and
push
pop
loop
fiaddl
iret
mov
rclb
orps
pop
and
ja
sti
and
rcrb
pop
push
xchg
loope
out
out
cmpsl
pop
ret
out
add
punpcklwd
shlb
sub
js
and
vmovntpd
dec
stos
sub
sti
jle
cltd
sti
xchg
dec
fildl
cld
cmp
int
jae
jno
movsb
ljmp
cs
push
loope
es
jo
lock
or
xor
test
sbb
pop
add
cmc
xchg
sahf
jbe
in
push
xor
xchg
mov
mov
sbb
sbb
test
ret
adc
data16
and
ret
cltd
shr
popf
or
inc
xchg
xchg
sbb
push
call
mov
jbe
or
xchg
fcompl
icebp
notl
and
iret
es
cmpsb
test
loop
lcall
out
aam
dec
call
xchg
mov
inc
call
ja
aam
mov
cmc
pop
lahf
xchg
inc
cltd
mov
pop
orl
mov
xchg
xchg
cmc
mov
adc
faddp
mov
sub
xchg
inc
xlat
lcall
test
shlb
xor
jb
mov
ret
mov
mov
aaa
mov
xchg
std
test
or
inc
mov
loope
push
inc
cmp
adcb
fs
leave
ret
lods
out
sbb
mov
jp
jge
ja
mov
dec
sbb
inc
in
je
andb
adc
pop
inc
add
in
mov
push
lret
inc
mov
sub
aad
sub
sub
mov
mov
sub
shl
loop
cmpsl
xor
mov
dec
sub
push
mov
xlat
cmpsb
js
sub
dec
mov
add
data16
lcall
xor
ret
inc
es
add
js
lcall
jns
push
arpl
mov
cwtl
xchg
mov
adc
lea
adc
mov
daa
mov
inc
fimull
jo
outsb
icebp
fbld
and
and
inc
jno
arpl
dec
push
mov
xor
fidivrl
out
push
lret
mov
sub
cld
out
inc
add
lret
xchg
inc
jl
sbb
mov
lret
push
cltd
dec
xchg
cmpsb
mov
ret
xor
mov
stc
jne
cmc
sbb
dec
xchg
repnz
pushf
push
pop
lcall
pop
pop
imul
scas
out
scas
jle
jne
jg
imul
mov
jmp
mov
adc
push
iret
mov
test
push
sub
imul
sar
mov
leave
std
pop
xor
fldenv
popf
pop
fisttpl
flds
stos
ds
or
pop
test
loope
cmp
adc
mov
add
stos
test
mov
imul
cmp
or
insl
mov
leave
jns
push
fidivs
repz
dec
cmp
das
cli
push
lret
pop
enter
dec
stos
cmp
or
daa
jl
popa
cmpsb
shlb
repz
xchg
adc
or
and
test
cmp
pop
nop
loopne
incb
lret
sbb
ffree
imul
add
jl
mov
nop
pop
ja
lock
cmp
out
mov
push
scas
lea
dec
ljmp
in
sbb
aaa
clc
xor
push
jle
mov
call
shll
ss
mov
icebp
pop
dec
mov
jp
in
popa
out
xchg
imul
mov
lock
lret
scas
fisubrl
in
pushf
adc
iret
ret
push
xchg
dec
xor
mov
push
arpl
popf
add
xor
jns
test
out
je
push
xor
add
push
or
cmp
aas
shll
adc
jecxz
lock
hlt
into
xchg
mov
hlt
and
inc
fisubrl
sbb
cwtl
cwtl
adc
scas
xchg
fs
loopne
mov
call
sub
inc
fistps
xorb
push
dec
mov
mov
imul
inc
xchg
sbb
pop
inc
lods
cmp
incb
push
cmp
out
fucom
out
test
loop
ret
pop
sbb
imulb
fcoml
add
jp
shrl
mov
mov
lahf
dec
out
add
xor
jne
cli
rolb
shlb
fsts
insl
adc
bound
or
mul
add
cmp
xor
dec
xchg
mov
lock
jbe
pop
adc
add
fucomip
sbbl
sti
mov
jns
jle
cmp
shrl
add
and
dec
sarl
call
mov
mov
mov
adc
jno
sarb
out
nop
add
or
sbb
in
lea
nop
mov
movsb
inc
mov
punpckhdq
or
pop
sbb
test
lret
jp
mov
mov
pop
bound
push
cmpl
mov
mov
test
pop
xchg
sub
add
pop
mov
ja
lahf
dec
sub
lock
cltd
stos
cmc
out
and
adc
sbb
pop
mov
imul
jno
lcall
ficoml
or
adc
inc
ret
cwtl
bound
in
loope
into
fldenv
test
bound
cli
pop
orb
pop
sbb
addr16
or
jbe
ss
fiadds
mov
add
movsb
aad
aam
shlb
lret
je
nop
dec
inc
ss
pusha
mov
lds
scas
xor
push
and
mov
cmp
cmp
test
into
out
jecxz
or
add
into
ficoms
fists
addr16
js
add
das
mov
popa
cmc
pop
mov
or
mov
shlb
loope
jno
xor
js
ds
jns
xor
cmc
xor
or
insl
mov
subl
std
and
aam
shlb
out
jge
hlt
les
mov
loop
jb
or
sub
out
insl
adcb
pop
mov
sub
iret
mov
div
pop
stos
in
pusha
ss
movsl
stos
cmpsb
fwait
daa
fildl
mov
lcall
and
push
push
add
subb
jno
pop
cmc
lcall
add
popf
add
sar
jge
sub
or
mov
inc
divb
lds
in
add
test
in
mov
in
inc
jge
lret
sti
xor
xchg
or
sbb
subl
inc
and
and
leave
and
xor
and
push
mov
and
movsl
sarl
pop
add
jo
cltd
movsl
cmp
sbb
in
cltd
push
mov
outsb
loopne
insl
arpl
ret
sub
xchg
fcomi
push
inc
xchg
push
sub
jecxz
mov
xorb
aaa
hlt
out
adc
xchg
xor
inc
int
mov
das
test
sbb
push
mov
jle
lret
ds
jmp
xchg
sahf
xor
in
cmpsb
fstl
adc
lret
mov
pop
mov
pushf
pop
adc
int3
adc
push
or
or
test
mov
xor
out
movsl
mov
sbb
lcall
pushf
pop
add
popa
mov
pop
mov
incl
sub
ret
push
add
jle
pop
rcll
push
mov
mov
inc
std
and
mov
fildl
lods
data16
jns
add
add
cmp
rep
scas
or
cmp
test
mov
lahf
addr16
xchg
dec
loope
movsl
mov
aas
fildl
or
cld
in
daa
data16
mov
dec
inc
in
mov
les
add
testl
ja
imul
repz
add
pop
das
inc
frstor
pop
icebp
mov
iret
adc
jno
std
mull
loopne
enter
xor
dec
xchg
or
lock
inc
hlt
dec
cmp
stos
adc
mov
shrl
lahf
push
mov
pop
pop
inc
fildl
mov
dec
mov
mov
pop
stc
sub
outsl
cs
daa
mov
add
sbb
cmp
mov
lahf
inc
xor
jl
adc
mov
xchg
jno
pop
idivb
sbb
out
dec
cmp
mov
roll
pop
sub
movsl
and
dec
test
cmp
sub
dec
mov
pop
lret
leave
sarl
jg
adc
mov
mov
sub
fwait
mov
roll
in
lods
out
or
push
and
sub
inc
xor
sub
mov
lods
push
popf
lea
ficoms
fsubrl
fwait
adc
dec
loopne
cwtl
pushf
scas
dec
repnz
pop
xor
adc
mov
lds
mov
dec
sbb
sub
push
lcall
pop
sbb
aad
ret
xchg
sub
jmp
or
mov
push
mov
pop
lret
rcll
mov
cwtl
sbb
inc
insb
fimull
jp
lock
stos
inc
outsl
aaa
int3
add
mov
mov
mov
add
or
ljmp
fldl
idivl
test
sbb
arpl
xor
xor
ss
pop
enter
mov
adc
pop
imul
icebp
outsl
ljmp
popf
aam
push
xchg
lcall
loope
and
sbb
fcmovnb
jo
mov
hlt
imul
repz
nop
int3
pop
push
and
stos
insb
inc
xchg
mov
mov
inc
iret
pextrw
popf
push
into
fimuls
jmp
clc
lret
mov
jo
daa
sub
sti
lods
mov
sbb
pop
or
pop
jecxz
lea
jecxz
icebp
fidivs
xchg
inc
mov
pop
inc
shrb
mov
xchg
push
jae
dec
pop
xchg
and
or
xchg
icebp
sbb
sti
bound
cltd
pop
sbb
sti
test
scas
shrb
mov
and
jge
push
je
aas
movsb
fdivrl
dec
pop
or
std
incb
stos
ret
adc
andb
out
lahf
inc
int3
nop
clc
jne
cmpsb
gs
add
mov
lods
aad
mov
xchg
jnp
pop
sub
lret
sti
xchg
insb
out
xchg
sbb
fisttps
inc
sti
push
aam
or
jb
dec
or
dec
sbbl
gs
test
mov
aas
xchg
sub
fwait
rclb
test
mov
lock
nop
stos
xor
rcrb
test
sbb
hlt
stc
out
sahf
test
sbb
pop
xchg
jo
fdivl
rorl
mov
gs
mov
out
sbb
pushf
test
dec
fadds
aad
pop
movsl
inc
ret
cmp
xor
inc
int3
adc
push
hlt
into
xchg
out
push
add
and
out
jmp
inc
mov
adc
dec
and
cs
in
mov
xor
pop
lods
inc
daa
loope
cmc
mov
and
jp
pop
or
sbb
lahf
insb
aad
bound
test
dec
out
movsl
nop
int
mov
lret
cmp
inc
shrb
pushw
leave
in
scas
stos
leave
or
fidivl
cs
mov
out
sbb
outsb
xchg
xchg
lret
push
shrl
rol
mov
cmp
fnstcw
sub
jl
pop
cltd
jl
jae
test
stos
call
negl
sbb
push
jo
mov
test
mov
inc
flds
popa
mov
mov
shl
add
stos
icebp
xor
repz
push
cmp
adc
lods
push
pop
cmp
out
mov
xor
lods
mov
dec
sbb
mov
lea
push
sbbb
pop
dec
add
sbb
movsl
hlt
mov
mov
add
mov
xchg
or
ret
jmp
dec
pop
jno
insb
sub
dec
int
mov
roll
xor
sub
addr16
xchg
jb
jno
xor
push
mov
cmp
mov
inc
lods
dec
insb
xlat
adc
push
into
xchg
rorl
test
pop
pop
pop
mov
xchg
idivb
daa
stos
das
cld
inc
shlb
dec
out
je
xchg
enter
cmp
fidivrl
fadds
xor
fstl
sbb
add
data16
aam
jbe
jbe
pop
scas
testl
mov
aam
push
cmpsb
dec
sti
xor
adc
ss
xchg
sbb
mov
add
add
dec
cmc
xchg
inc
push
cld
pop
push
inc
shr
imul
sbb
aad
loopne
out
xchg
adc
ja
adc
arpl
sub
dec
jnp
out
add
push
cmp
sbb
stos
ds
mov
stos
mov
push
cmp
jmp
bound
pop
std
add
test
and
or
and
xchg
pop
jg
xchg
xor
adc
xchg
dec
hlt
push
subl
xor
jg
inc
mov
pushl
dec
out
xchg
clc
out
js
aad
add
int
xor
imul
mov
push
stos
insl
into
fistpll
fnstenv
stos
jnp
pushf
ljmp
push
fnsave
test
mov
int
test
dec
lods
pop
pop
adc
test
lret
and
repz
sbb
scas
jns
int3
jmp
cmpsl
lret
mov
fnstsw
loopne
pop
push
cwtl
cs
sub
cld
cmp
push
das
daa
add
adc
sti
enter
fdecstp
mov
roll
mov
je
or
xchg
xor
arpl
jl
lret
jmp
test
jnp
divb
dec
stos
or
push
test
inc
cmp
fiadds
sar
and
pop
mov
jecxz
rolb
ret
lret
adc
sub
dec
push
clc
imul
pop
jo
push
fldt
test
and
inc
icebp
daa
sbb
mov
addr16
jns
insb
add
negb
ss
or
fs
js
and
sbb
movl
xchg
lcall
sbb
xchg
or
lods
dec
scas
mov
subb
lock
fwait
and
je
les
or
popa
xlat
jg
test
add
std
xchg
mov
cwtl
push
or
sarl
in
add
xor
ds
add
mov
insb
pusha
xchg
les
add
jb
leave
les
sti
adc
in
mov
xor
shrl
adc
inc
adc
pushf
mov
sub
add
mov
push
shl
icebp
and
arpl
sahf
mov
and
enter
inc
mov
cmp
into
mov
daa
out
lea
mov
scas
movsl
jno
cmc
adc
jg
lea
jo
jo
cmc
adc
dec
lret
das
jnp,pt
mov
mov
clc
dec
fcomps
neg
stc
js
out
inc
inc
pop
cltd
jp
add
pop
js
cmp
pop
dec
shll
cmp
test
mov
movsl
sbb
sbbb
into
push
stc
mov
mov
gs
xor
xlat
imul
rolb
inc
dec
aam
mov
pop
mov
in
jno
jae
lds
sub
xchg
pop
data16
jle
push
movsl
jl
cwtl
push
push
xchg
add
or
push
lods
mov
aad
mov
sbb
cmp
fwait
loope
and
hlt
not
popf
sub
or
pop
mov
push
jmp
pop
and
sub
movsl
inc
stos
mov
stos
fwait
cmp
stc
lret
sub
iret
orb
dec
xlat
in
loope
xchg
jle
je
sbb
sub
jle
xchg
mov
add
aaa
mov
xlat
push
jmp
dec
lock
jl,pt
jp
movsb
cltd
xchg
aad
lret
out
mov
mov
cmp
fbstp
mov
xchg
add
repz
fisubrl
xchg
outsl
push
cmpsb
adc
mov
int3
loop
pop
rcrl
test
dec
jnp
xor
in
xor
or
push
jbe
in
and
daa
or
push
pop
adc
jno
xchg
popa
xchg
icebp
jp
fldl
mov
lods
adc
adc
arpl
jge
xchg
rcll
inc
fcmovb
jae
lcall
jae
movsb
xchg
pop
pop
mov
mov
nop
fildll
lea
dec
cmp
push
mov
sbbl
out
push
loope
mov
je
aad
loopne
mov
dec
sbb
push
or
pop
aas
mov
push
shl
and
cmp
in
outsl
sbb
pop
sub
xor
jecxz
fldl
nop
mov
and
cmpsb
mov
mov
repz
sub
add
dec
test
jbe
cmp
inc
cmp
xor
jp
aas
aam
mov
mov
mov
push
jo
addl
in
sbb
loope
subl
sahf
fdivp
daa
push
xchg
push
pop
pop
lock
lea
jge
lea
mov
jp
mov
movsl
or
push
arpl
or
pushf
push
sub
inc
and
add
sbb
fcoml
shlb
adc
or
lods
sub
and
jnp
jmp
icebp
scas
dec
jge
int3
mov
aaa
out
js
gs
cmp
fsubrl
fisttpl
dec
iret
pop
add
ret
arpl
insl
sarl
mov
push
das
xchg
cmp
cmp
push
jl
dec
adc
pop
hlt
lret
in
mov
mov
into
pop
inc
xor
jp
lret
xchg
popf
cmovo
and
hlt
mov
add
mov
push
cltd
clc
fstpl
sub
or
jbe
pop
inc
aam
mov
fwait
add
bnd
icebp
lods
imul
inc
movl
in
loop
pop
sub
jmp
adc
sub
into
imul
dec
dec
je
and
push
test
cs
mov
ret
movsb
mov
mov
and
sub
adc
ret
nop
lahf
mov
ss
xchg
xor
cli
xchg
scas
cmp
mov
test
add
xor
sarl
add
jg
std
push
push
test
test
arpl
popf
filds
jae
mov
in
pop
and
out
mov
inc
push
insl
stc
stos
ret
or
mov
fiaddl
test
andb
movsl
pop
stos
xor
and
pop
add
mov
or
cmp
cwtl
mov
mov
xor
or
mov
jns
and
push
outsl
xchg
aas
testl
push
mov
test
xor
mov
je
push
xchg
fldl
sti
scas
out
mov
mov
mov
pushf
lds
ja
sti
adc
mov
test
fwait
int3
fwait
mov
cmp
dec
mov
sub
out
test
lcall
mov
xor
repz
jge
shl
clc
in
leave
adc
sub
js
push
outsl
pop
mov
scas
insl
xchg
push
pushf
fimuls
pop
fcmovnu
inc
cmp
add
ret
inc
hlt
jnp
sub
xor
xor
mov
fidivs
and
adc
pop
lcall
pop
jmp
imul
sub
int
cmc
cwtl
xor
ss
test
jns
popf
addr16
les
lods
dec
or
test
lods
jg
fldl
fidivrs
xor
test
pop
sub
cmpsb
cmp
cmpsb
push
push
pop
loope
stos
pop
xchg
fistl
jo
icebp
pushf
cmp
pop
pop
shrb
orb
xor
nop
dec
div
fcoms
jae
sarl
shll
ds
mov
aad
push
repnz
push
sbb
mov
mov
int
in
shlb
int3
mov
lcall
adc
hlt
jno
push
push
xor
mov
cli
inc
mov
loopne
inc
out
jb
add
mov
mov
mov
dec
shl
ja
fildll
ss
pop
iret
fstp
daa
mov
inc
sub
add
enter
push
lret
push
imul
popa
xor
sub
das
inc
sbb
inc
cltd
xchg
mov
mov
jge
arpl
roll
mov
xor
lret
xor
fcomi
mov
jo,pn
cmp
xor
jo
jne
push
sub
mov
outsb
ja
mov
xchg
test
insb
notb
insl
repnz
sahf
in
xchg
fmull
aad
mov
fsubs
push
inc
scas
call
cmc
fists
out
push
xchg
imul
fdivl
test
dec
outsb
fnstenv
data16
mov
je
push
sbb
icebp
int
inc
loopne
lods
mov
jmp
out
cmp
jae
push
xchg
ljmp
jne
adc
pop
jmp
sahf
hlt
es
sbb
jmp
or
mov
roll
mov
add
dec
push
jb
dec
popa
jae
fcoms
and
jae
push
jns
das
test
ret
sbb
inc
jo
test
and
cs
jnp
xor
cmc
pop
inc
hlt
dec
fcompl
arpl
jb
pop
adc
sti
and
into
clc
pop
js
pushf
cltd
arpl
call
jne
xchg
fists
andl
mov
fiaddl
push
in
repz
pop
les
popf
adc
out
xchg
test
stos
adc
pop
xor
push
shlb
sbb
push
shr
test
bnd
cmp
push
rorb
jnp
ja
mov
jae
cwtl
pop
insl
adc
lods
rcrb
dec
inc
adc
es
das
shlb
inc
push
add
gs
insl
lahf
jecxz
push
or
fidivrs
xor
pushw
cld
inc
or
inc
cmpsl
mov
es
lret
mov
in
jg
call
jecxz
sub
arpl
popf
stos
fdivrl
mov
lahf
pop
mov
mov
xchg
out
add
ret
push
shl
or
testb
pusha
stos
sti
pop
test
xor
out
lods
sbb
xchg
pop
sub
dec
xchg
mov
das
inc
push
jmp
pop
jge,pt
and
fisubrs
mov
int3
je
fisttpll
mov
cli
jno
leave
stc
sub
xor
cld
inc
pushf
add
leave
gs
leave
lahf
aaa
int
movsl
xchg
push
fldt
sub
cmpsb
insb
xor
aam
fs
push
sbb
test
add
sbb
je
enter
or
test
xor
push
adcl
stc
dec
lahf
adc
std
aas
push
add
orb
push
sahf
lcall
insb
dec
pop
movsl
test
pop
or
cmp
frstor
stos
cmpsb
push
cwtl
repz
push
lods
rcl
add
sub
rolb
idivb
aad
test
out
push
cmp
and
jae
sub
ror
ffree
add
pop
enter
jae
add
push
jbe
xchg
mov
lods
add
push
sub
xchg
mov
sub
dec
das
dec
into
xchg
pop
pop
mov
xchg
pushf
clc
xchg
push
mov
leave
bound
mov
jle
and
cs
xchg
data16
or
imul
lahf
adc
jne
mov
add
cli
loopne
dec
fistpl
inc
enter
jmp
push
js
pop
xchg
adc
cltd
dec
xchg
ss
fsubrs
fwait
sbb
aas
sub
sub
lock
pop
xor
lods
mov
imul
add
lea
add
js
jle
mov
mov
cmpsl
inc
xchg
int3
lock
data16
in
jp
enter
ljmp
xchg
lods
add
inc
push
jns
arpl
or
fs
sbb
adcl
daa
lock
mov
mov
pop
mov
and
or
xor
test
mov
mov
fnstenv
test
inc
mov
subb
outsl
imul
push
jl
sub
mov
pop
mov
test
and
out
push
sti
pop
jecxz
subb
jg
leave
xchg
jns
scas
lret
jb
ds
imulb
loop
and
inc
jae
xor
outsl
out
push
ss
xchg
jge
dec
dec
iret
and
jp
pop
xchg
out
jo
jg
xchg
mov
test
test
mov
pop
inc
pop
pop
add
sub
popf
test
pop
mov
pop
jge
and
jmp
popa
jg
cmc
rcll
mov
xchg
or
sahf
cmp
cld
adc
mov
orl
jb
mov
popf
imul
push
repnz
sub
sub
inc
imul
cmp
and
add
lcall
mov
xor
xor
divb
push
push
jmp
into
sbb
push
fsts
out
imul
pcmpgtw
add
xor
xor
daa
out
imul
addr16
jae
cltd
ljmp
mulb
xlat
mov
push
imul
or
sub
icebp
mov
sbb
jle
mov
dec
aam
lcall
push
loop
or
inc
cmp
dec
adc
insb
add
xor
mov
clc
lcall
icebp
mov
dec
xor
and
mov
mov
and
adcl
sbb
fs
push
mov
imul
int3
mov
xchg
push
jmp
mov
or
movsb
ss
pop
rcrb
lods
sti
sub
jne
xchg
cmpsl
xchg
stos
mov
jno
or
test
pusha
push
test
int
mov
popa
push
repz
mov
test
das
pop
jnp
fldl
mov
lahf
mov
pop
sbb
pop
jno
jecxz
adcl
jns
loope
aaa
nop
test
mov
call
out
xor
in
inc
je
sub
fsubrl
and
shll
movsb
in
test
jmp
rclb
sbb
sbb
icebp
cmp
push
aas
scas
cmp
stc
loopne
sbb
arpl
xor
mov
adc
jg
stos
pop
mulps
lahf
lods
pop
fdivrp
push
inc
or
pop
xchg
repz
xor
cltd
pop
push
bound
pop
sbb
sub
lock
ret
cmpsl
sahf
mov
mov
pop
repz
push
and
xchg
sub
setb
mov
mov
mov
scas
les
inc
cmc
repnz
insl
xchg
cmp
xchg
and
lea
loopne
sahf
fldenv
jae
and
out
sub
sbb
sub
test
inc
dec
fstpt
cmpsb
xchg
mov
xor
loopne
shl
mov
aaa
xchg
or
jno
cmp
cmc
cs
inc
sahf
mov
fs
into
jns
aam
push
xchg
lcall
sbb
cmp
inc
aaa
xchg
dec
out
jge
cs
pop
inc
arpl
fcmovnbe
inc
clc
jb
jg
div
addl
push
adc
out
imul
pop
aaa
sbb
push
adc
mov
gs
pop
sahf
xor
and
jecxz
lret
and
jge
enter
push
sub
add
jl
inc
inc
mov
mov
xchg
sub
inc
and
mov
push
mov
jns
movsb
adc
negl
xor
cmp
adc
das
and
pusha
addb
cmp
adc
mov
pop
and
sbb
scas
enter
jbe
xor
add
ret
mov
lea
cmpsb
pop
dec
xchg
icebp
jp
int3
aas
out
iret
pusha
movsl
aad
cmp
sub
push
sbb
dec
push
jmp
jns
cmp
mov
xchg
in
xor
aam
add
negl
pop
popf
ret
push
mov
out
loopne
out
jnp
das
icebp
pop
dec
xor
sub
fucomp
jb
insb
dec
xchg
sub
repnz
inc
repnz
pop
sub
xchg
call
xchg
sub
sub
xchg
lahf
sub
xchg
or
je
je
cmp
pop
divl
inc
xor
pop
in
jmp
push
sahf
dec
es
inc
and
stos
dec
in
jp
cmp
ss
mov
push
jecxz
mov
fwait
sub
pop
ds
aam
in
push
out
push
shlb
mov
mov
data16
push
inc
cmp
or
sub
push
imul
fidivrl
stc
loopne
ret
filds
aaa
dec
lahf
ret
lds
sub
sbb
inc
jmp
mov
lcall
pop
pushf
sub
popa
cltd
cmp
vmaxpd
and
sub
sub
mov
push
sub
adc
mov
das
mov
sbb
fcoml
fnsave
mov
dec
sahf
adc
xor
push
pop
fnsave
lcall
and
sub
or
imul
or
icebp
mov
test
shr
xchg
adc
adc
push
cmp
popl
dec
jb
ret
push
movb
hlt
xor
repz
pop
adc
add
jle
scas
inc
movsl
mov
xchg
orl
sub
jns
test
ret
xor
addr16
mov
pop
push
sbb
xor
xchg
or
fistpl
stos
mov
hlt
adc
and
jp
mov
mov
mov
jl
mov
inc
jp
out
mov
es
cmc
dec
push
cmp
xor
fdivr
mov
push
add
pop
jl
sub
or
add
jle
jle
ds
mov
dec
out
cmovg
jle
cmp
loope
push
pop
jo
lcall
dec
inc
fisubl
mov
jne
lock
das
cltd
pusha
mov
push
icebp
aaa
push
aas
out
xchg
outsb
adc
add
sub
shll
xor
inc
sbb
js
xchg
addr16
int3
xchg
xchg
enter
xchg
jo
pop
ds
and
mov
in
add
jl
mov
push
lods
xchg
movaps
lcall
dec
or
adc
dec
in
dec
adc
xorb
outsb
fistpl
xchg
xchg
fs
ljmp
lret
jmp
sbb
aas
in
fsubl
mov
lahf
push
lods
jne
mov
or
fisubl
add
push
test
push
inc
ds
inc
or
dec
lods
inc
dec
jge
rcrl
outsl
jmp
sbb
dec
pop
jl
pushf
mov
loopne
ljmp
pop
cmpsl
fdivs
jecxz
inc
or
xchg
and
push
daa
filds
imul
adc
pop
sti
inc
incl
mov
jecxz
dec
sahf
cmp
pop
fidivrs
popa
push
fwait
or
mov
jmp
jmp
sahf
rorl
push
xchg
sbb
mov
mov
lods
xchg
addl
hlt
shrb
in
push
lock
xchg
rolb
leave
in
out
shld
call
mov
cmpsl
mov
scas
test
mov
jns
mov
into
je
adc
or
pop
add
push
xlat
pop
mov
sub
loope
push
icebp
xchg
cmc
adc
mov
or
sub
cmc
lahf
sbb
test
test
sbb
mov
imul
pop
mov
lahf
mov
stc
mov
pop
jns
movb
and
xor
dec
or
or
jle
pusha
adc
arpl
fs
jne
data16
pushf
cmc
mov
mov
cmpsb
adc
pop
add
sub
dec
and
cmp
pop
fwait
add
cmp
cmpsb
cmp
gs
in
fs
movsl
adc
add
mov
les
das
int
lock
jbe
or
out
push
pop
stos
cltd
add
mov
pushf
lods
sub
loop
push
jno
call
sti
xchg
scas
mov
inc
xchg
ss
cmp
shlb
out
inc
out
sbbl
mov
jl
test
int
xchg
push
cmc
mov
fst
jae
test
addr16
es
xchg
incl
xchg
cld
sbb
dec
mov
test
mov
imul
lods
fsubrs
loopne
pop
mov
mov
sub
and
enter
mov
inc
inc
pop
and
popf
add
repz
pop
subl
hlt
fwait
or
or
pusha
js
hlt
sbb
int
adc
mov
out
xor
xchg
sbbl
mov
adc
inc
lret
bswap
lret
cli
sbb
shrl
imul
cli
jp
aas
or
bound
adc
add
icebp
ret
mov
rorl
or
or
jmp
andb
ja
dec
sbb
lahf
xchg
repnz
neg
cwtl
jns
nop
dec
sbb
dec
pop
aad
jg
jmp
shll
and
or
insb
clc
daa
jle
or
mov
shll
inc
jg
idiv
loopne
call
mov
dec
fiadds
xchg
test
or
mov
pop
cmpsl
shrl
xchg
out
test
lahf
mov
pop
cmp
fstpl
dec
push
ds
jno
mov
jecxz
fistl
int
xor
mov
stc
mov
roll
dec
rolb
and
in
inc
sbb
mov
mov
and
mov
dec
das
data16
xchg
cmc
xchg
stos
adc
dec
mov
sub
sbb
mov
inc
inc
sbbb
fdivrs
cmp
dec
testb
jne
jg
out
push
out
dec
in
pop
push
test
in
jnp
cmc
mov
jb
test
cmpsb
int3
push
and
popa
jg
push
out
or
mov
loop
fisubl
mov
ss
mov
repnz
pop
or
sub
jl
ss
xlat
add
cmp
jbe
dec
test
mov
cltd
mov
xor
inc
adc
xor
jb
gs
pop
xor
dec
outsb
add
lret
mov
lahf
lds
push
pop
sbb
or
bound
xchg
out
icebp
sbbb
movsb
shll
mov
shll
ret
push
push
push
inc
sub
sub
sahf
ret
in
bound
dec
adc
scas
inc
fldcw
add
inc
adc
cld
cwtl
aad
rolb
pusha
dec
ds
cmpsb
roll
loopne
fcmove
mov
cs
popa
dec
in
lods
cmp
lods
call
mov
andb
cwtl
jne
cmp
mov
xor
add
jmp
adc
or
pop
push
and
jae
cmp
inc
xchg
cmpsb
dec
fisubs
daa
imul
inc
insb
jne
in
jmp
pop
and
repz
mov
call
mov
aaa
and
dec
icebp
or
jl
sub
sahf
pop
push
pop
leave
lret
adc
mov
aam
and
icebp
in
fnstsw
jb
lods
and
inc
jecxz
bound
mov
fisttpll
int
aad
inc
and
and
xchg
sbb
mov
push
gs
fwait
outsb
fisubl
das
push
cs
pop
push
sbb
mov
clc
sbb
lea
popa
sti
out
sub
or
cmpsl
dec
addr16
push
sbb
fstpl
icebp
aaa
mov
push
ljmp
ficomps
ret
add
push
mov
push
imul
mov
and
mov
push
ja
mov
daa
add
fwait
mov
stc
add
sbb
push
pushl
push
sbb
mov
sub
mov
rcll
ret
ja
xlat
iret
fistpl
scas
shl
fiadds
cmpsb
insb
mov
popa
adc
lods
cmp
pushf
or
inc
sti
inc
adc
mov
xchg
xor
pop
enter
lock
sahf
mov
jg
int
xlat
jmp
xor
sub
out
mov
mov
add
in
fs
jns
mov
sbb
add
pop
mov
in
js
outsl
xchg
mov
dec
inc
mov
repnz
in
push
ret
testl
push
std
push
pop
inc
pop
icebp
nop
sub
xor
pop
ljmp
inc
fsubrp
cmp
xchg
sti
xchg
std
dec
jg
sub
or
test
lods
cmp
pop
dec
jnp
xchg
pop
mov
and
mov
add
push
cmp
add
lea
nop
lea
daa
lret
popa
or
aaa
jg
push
and
or
mov
lcall
mov
fucomip
pusha
and
adc
dec
rcr
repnz
sub
fcmovbe
flds
loope
aad
xchg
scas
lahf
loope
dec
sub
push
ja
adc
inc
sbb
outsl
pop
test
sub
cmp
push
add
fldl
mov
popa
in
mov
mov
and
dec
push
test
mov
push
xor
in
xlat
stos
xlat
jp
cmp
add
fisttpll
pop
inc
lret
loop
sub
fdivrs
out
negl
mov
and
pop
cld
cmpsl
mov
cmp
repz
push
and
repz
mov
adc
xchg
xor
out
mov
mov
sbb
inc
xchg
sub
clc
sbbb
ret
ficomps
and
and
cmp
sub
adcl
push
dec
jns
cmp
pop
clc
decl
mov
adc
xor
mov
lret
push
daa
lds
inc
pop
mov
je
add
in
cld
xchg
int3
mov
or
aad
jmp
adc
popf
push
shll
movups
xor
inc
push
xchg
cmp
repnz
fisubs
iret
hlt
andb
repz
mulb
jmp
mov
sub
adc
mov
movsl
xor
push
mov
stc
das
mov
xchg
imul
jp
rorb
mov
cmpsl
loop
test
pusha
sub
add
das
out
dec
lahf
push
es
stos
aam
mov
push
out
jno
cltd
pop
lahf
push
push
xor
loopne
dec
xlat
cmp
pop
lods
add
adc
enter
mov
jecxz
jmp
cmp
push
outsb
int3
xor
bound
cmc
and
aam
repz
or
pop
and
dec
xchg
mov
sbb
xor
pop
inc
mov
dec
mov
fistps
mov
jae
fldenv
sub
loopne
cltd
test
mov
dec
lcall
dec
ja
mov
cld
movsb
cs
add
iret
xchg
cmp
scas
aam
xchg
ds
addr16
inc
mov
add
fsubl
pop
aas
in
cmp
pop
jmp
pop
and
dec
cltd
inc
and
or
out
inc
in
pop
cmp
cmp
fcoms
add
jnp
mov
pop
addl
cli
xchg
push
or
js
inc
int3
sub
jbe
mov
in
xchg
js
mov
out
push
push
jo
popa
das
insl
mov
ds
cwtl
lahf
inc
dec
outsl
out
inc
jo
sbb
adc
fistl
cmp
adc
loop
xor
addb
pop
sbb
sti
or
sbb
inc
pop
push
das
incl
in
adc
test
sbb
push
gs
out
out
stos
push
int3
push
lret
mov
jmp
sbb
mov
call
loope
pop
jp
fucomip
movsl
inc
jl
mov
outsb
outsl
dec
in
pop
mov
xor
enter
sbb
and
imul
shrb
dec
pop
scas
and
nop
mov
stos
test
imul
or
pop
jb
out
das
lret
inc
xor
test
cwtl
popa
mov
cmpsb
push
ret
imul
stc
call
mov
ret
pop
clc
test
jmp
mov
push
jecxz
inc
ret
hlt
test
movsl
ljmp
cmc
push
sub
cmc
or
das
push
sbb
inc
loopne
pop
mov
jp
sub
bound
jl
lods
fmul
or
das
ret
mov
fs
ds
mov
call
pop
pusha
out
jg
fidivs
cs
mov
sarl
test
adc
mov
mov
int
insl
aaa
and
int3
std
test
pop
cs
shld
cli
mov
push
and
pop
fstpl
sub
int3
xor
scas
cmp
adc
xor
sbb
lods
jbe
ds
lcall
test
dec
iret
es
in
dec
push
in
jbe
sbb
push
sub
addl
jnp
jno
or
shl
in
jb
xchg
and
mov
gs
inc
sub
outsb
daa
and
xlat
adc
jbe
jecxz
sti
sbb
sub
into
test
cwtl
xchg
sti
xor
jp
cmp
add
ret
ljmp
xlat
pop
out
sahf
xor
int
in
lods
in
cmp
cs
or
push
xlat
inc
aam
jae
and
incb
jmp
fimull
gs
xor
test
and
cmp
dec
push
imul
sahf
ljmp
xor
jmp
icebp
pop
dec
scas
aaa
xor
add
in
push
push
in
xchg
cltd
dec
xor
sub
inc
and
lods
xlat
out
sbb
inc
xchg
in
outsl
mov
int
fs
or
dec
pop
int3
mov
clc
xor
xlat
add
jb
pop
nop
insl
xor
mov
out
xlat
mov
inc
roll
and
fsubrs
popa
cltd
enter
not
call
add
aam
mov
les
stos
add
aaa
ret
fiaddl
cmp
push
aam
mov
inc
loop
sub
lahf
sbb
jae
cmp
adc
mov
shl
insb
loop
jbe
pop
aam
pusha
inc
in
jge
idiv
sub
movsb
mov
inc
inc
jmp
sbb
and
sar
testl
push
jecxz
scas
lods
rcrb
repz
invlpg
mov
pop
mov
inc
pop
mov
lret
fimuls
pusha
dec
es
push
minps
xchg
dec
das
jmp
push
ss
pop
inc
mov
popa
into
inc
jge
in
cmp
imul
ret
cmp
xchg
sahf
scas
loop
inc
sub
xchg
xor
sbb
add
add
aad
push
repnz
in
aas
sub
aad
inc
subl
pop
dec
xchg
add
adc
fcomps
daa
push
mov
lcall
adc
mov
add
sbb
mov
out
mov
pop
sbb
orl
push
movsl
add
cmp
inc
div
pushf
adc
cmp
xchg
sbb
aaa
pmullw
js
fs
cmp
jae
sti
pop
pop
pop
pop
aaa
jbe
iret
push
repnz
push
jb
leave
pop
pop
xchg
jp
lahf
out
fistps
push
js
pop
into
xlat
pop
mov
mov
ret
sbb
dec
cld
jg
mov
mov
and
loope
movsb
cwtl
push
shrl
enter
mov
sbb
sub
ret
std
stos
dec
lods
cmp
add
lods
jp
stos
js
xor
jmp
push
lcall
movsl
mov
xor
imul
dec
adc
cmp
hlt
sub
sbb
push
and
movsl
xchg
push
jnp
adc
mov
popf
pop
and
enter
lahf
sti
ss
fdivrl
std
and
insl
cli
testb
and
jmp
cmp
cld
sub
js
adc
dec
movsl
mov
into
into
xchg
je
and
pop
gs
mov
or
xchg
incb
add
push
out
pop
xchg
inc
mov
xor
jno
insb
sbb
stos
addl
push
dec
aas
push
test
inc
hlt
lahf
repnz
mov
jbe
mov
mov
or
lcall
mov
mov
adc
dec
pushf
leave
fwait
xlat
add
mov
inc
xor
mov
addb
out
and
mulb
int
push
jne
sbb
or
jp
and
loope
push
xchg
inc
xor
test
shrd
or
mov
in
lret
out
pop
jle
cmp
dec
push
dec
cmp
mov
pop
gs
aam
sub
dec
lcall
rorl
in
les
movsb
inc
bound
shrb
insb
pop
dec
and
sti
idiv
jl
inc
mov
ds
shrb
cwtl
out
mov
or
stos
scas
fwait
or
dec
and
mov
push
jmp
clc
xchg
leave
jns
mov
aam
fcoms
aas
js
xor
or
out
inc
jmp
mov
mov
in
jg
mov
roll
es
push
xor
push
shll
sti
int
lods
lods
testl
push
insb
adc
testl
cmp
fwait
cmp
or
loop
popa
enter
je
adc
insl
xor
add
mov
lods
loop
data16
lock
xor
or
outsl
shlb
jle
push
mov
lret
xor
xchg
scas
cli
pushf
test
xor
insl
jno
orb
sbb
add
inc
call
or
lcall
daa
pop
pop
mov
mov
push
xor
jo
jle
inc
lret
cmpsb
loop
mov
movsb
mov
es
jne
xor
out
sub
jae
sub
int
add
sub
cs
pushf
pop
xor
sti
lcall
push
and
xchg
dec
and
lcall
jne
fdivr
movsb
push
fisubl
shl
mov
leave
jns
fsubrs
push
cmp
call
adc
xor
xchg
push
int3
je
xor
xchg
fistpll
and
insl
mov
stos
cmp
shll
fwait
shl
in
js
add
and
mov
les
mov
inc
pop
pop
ds
mov
les
pop
mov
dec
mov
aas
xor
je
adc
pushl
adc
aas
push
xlat
arpl
and
jae
cmpb
sti
repz
aaa
leave
iret
push
rol
cs
push
xchg
mov
mov
mov
sbb
and
cmp
xor
repnz
mov
xor
out
adcl
jge
inc
std
sub
mov
adc
xchg
mov
adc
inc
or
inc
mov
add
mov
test
aas
popaw
rorb
xor
test
test
mov
lahf
fsts
mov
icebp
mov
add
fistpl
les
jbe
mov
mov
mov
mov
sub
iret
movsl
push
pop
lds
xchg
daa
push
xrelease
bound
mov
or
pop
ret
xchg
xor
lahf
xor
push
add
push
test
add
dec
movb
push
or
mov
lds
cmpsb
push
mov
pop
pop
lods
gs
mov
test
xor
add
push
xor
lock
sbb
in
out
mov
cmpsb
jmp
mov
ffreep
js
fidivrl
daa
adc
push
pop
pop
add
jg
add
push
xor
enter
jno
mov
mov
dec
imul
jb
pop
jnp
cltd
insl
mull
mov
sub
int
cmp
das
addr16
andl
loopne
scas
or
nop
xor
sahf
and
loope
xor
sbb
and
add
pop
fiadds
dec
mov
je
imul
pop
add
sub
or
jl
arpl
jp
loopne
push
xchg
sbb
sbb
pop
insl
shrb
xorl
add
js
jno
fmul
xor
leave
cmp
pop
pop
mov
mov
xchg
mov
sbb
out
cmc
mov
push
xchg
pusha
sbb
aas
aad
mov
inc
or
cwtl
popf
call
es
fs
sbb
mov
mov
inc
jle
pop
aas
pushf
push
dec
mov
dec
mov
loopne
jge
xor
mov
dec
in
fs
arpl
sbb
sahf
insl
cmp
mov
dec
ss
mov
hlt
fstpl
mov
add
repnz
and
jge
push
jg
hlt
sahf
jecxz
loope
sub
lret
jne
rorl
push
xchg
pop
mov
push
sub
dec
cmp
jg
icebp
cs
jb
or
movb
or
fs
push
bswap
mov
ret
and
xchg
ret
and
sub
or
inc
rorb
mov
jbe
mov
jmp
ja
mov
insl
enter
dec
mov
nop
xchg
test
mov
pop
xchg
pop
data16
dec
loop
mov
aaa
and
mov
push
and
mov
jmp
test
clc
in
mov
or
cwtl
aam
cmp
inc
arpl
fadd
adc
lret
in
loop
insb
push
sub
imul
testb
dec
jmp
cmp
inc
sarb
xchg
mov
enter
roll
jae
clc
sbb
enter
and
aad
popa
push
rclb
std
xchg
dec
js
cltd
pop
ret
and
ror
xor
dec
adc
xchg
stos
cwtl
adc
push
xlat
dec
loopne
popf
into
std
mov
mov
push
lock
push
lahf
cmpl
mov
mov
pop
xchg
aam
sub
dec
out
out
mov
loop
or
xchg
enter
test
pusha
mov
insb
sub
pop
jbe
sub
adc
push
fstl
addb
cli
xchg
cmp
cs
pop
imul
and
imul
push
insl
mov
sub
push
xchg
fildl
faddl
loop
add
mov
dec
mov
call
jl
push
pop
fnstsw
out
je
rcrb
out
xchg
cmp
mov
pushf
xchg
sbb
enter
inc
ret
mov
aas
inc
aad
mov
sbb
jl
jae
xchg
call
cmp
ret
xchg
out
lea
repz
into
divl
int
mov
je
jbe
and
out
push
mov
out
or
into
scas
and
loopne
push
jno
xor
cwtl
scas
pop
incl
pop
movsb
pop
mov
fstpl
js
cmp
pop
dec
das
outsl
jo
add
push
add
call
popa
adc
lcall
jne
inc
push
adc
imul
out
xchg
push
or
popl
sbb
push
mov
jo
xchg
pop
fwait
inc
or
test
inc
movl
dec
es
push
in
mov
leave
inc
cld
rcrl
outsb
dec
aam
pushf
add
mov
sbb
inc
cmp
inc
ja
adc
rorb
ja
jge
aaa
sbb
xchg
mov
or
in
pop
sub
imul
test
mov
sbb
fs
test
pop
inc
jp
in
sti
add
mov
xchg
dec
lahf
mov
out
call
rclb
cmp
cmp
hlt
sbb
fwait
pop
mov
mov
repz
xchg
adc
dec
jg
or
push
pop
jno
lods
pop
movsb
inc
pop
xor
mov
xchg
out
testb
movsl
add
dec
test
and
push
push
pop
jns
les
inc
mov
lret
sub
jmp
xor
add
pop
ret
fistpl
push
jge
inc
lea
mov
cmc
adc
dec
jo
scas
or
rclb
int
imul
sbb
xor
add
jmp
cmc
or
shl
stos
add
scas
and
dec
and
add
int3
aas
fstpt
sbb
sub
andb
mov
mov
mov
rorb
mov
xchg
int3
pop
xlat
sbb
repnz
movsb
lcall
mov
jp
jg
ds
mov
pushf
cmp
sub
mov
loop
data16
fildll
hlt
pop
int3
test
bound
mov
mov
scas
negl
es
popa
sbb
repnz
insb
mov
incb
jbe
mulb
arpl
adc
test
hlt
ret
out
movsl
cli
push
hlt
xchg
pop
jecxz
aas
pop
das
cli
and
rorb
mov
push
mov
out
ljmp
mov
out
sbb
lock
push
mov
pop
pop
scas
push
rorb
sbb
lret
push
add
jno
stos
jo
inc
mov
adc
xor
outsl
dec
jg
fisubrl
dec
cs
fisttpl
sbb
mov
mov
shr
icebp
js
xor
sahf
and
aaa
test
push
sbb
add
mov
xor
pop
mov
jb
fs
push
out
aaa
insb
or
fsubs
repz
mov
mov
push
jb
jecxz
pop
shll
loope
js
inc
jl
jno
mov
mov
or
dec
rol
mov
adc
jge
adc
jo
push
icebp
pop
test
or
sub
jecxz
scas
in
sahf
mov
pop
lods
imul
mov
ja
movsb
or
out
inc
hlt
sarb
inc
jmp
inc
out
fistpl
adc
mov
xor
mov
imul
push
and
out
cwtl
lods
mov
mov
push
lea
jmp
lahf
testb
frstor
stos
jmp
outsl
lods
mov
in
adc
js
mov
cmp
mov
mov
adc
jb
xor
dec
sbb
ret
cli
adc
mov
sbb
movsl
fistps
cmp
sti
mov
fwait
adcl
or
js
int
and
jb
shrb
jae,pn
test
insb
add
xor
lods
aad
jecxz
jo
in
xchg
add
fnstenv
pop
xchg
jmp
push
pop
pushf
pop
and
push
push
push
inc
xor
xor
jo
ret
sub
data16
sub
or
out
ljmp
insl
inc
hlt
out
imul
hlt
pop
sbb
mov
push
cmp
sbb
in
fsubrl
fsubr
push
mov
sbb
adc
shll
mulb
pop
sub
ret
mov
xor
es
sbb
xchg
pop
jae
xchg
jg
sbbb
mov
aaa
ret
mov
pmovmskb
mov
add
int
sub
roll
and
mov
je
push
fwait
cmp
add
cltd
mul
adc
xor
xchg
jmp
out
and
imulb
sbbl
sub
xor
add
xor
aam
icebp
xor
dec
stos
inc
or
je
mov
shr
repnz
dec
loope
loope
scas
nop
inc
mov
es
fiadds
inc
dec
daa
xor
push
cs
sub
test
mov
popf
push
mov
int3
cwtl
fidivrs
jp
dec
mov
stos
xor
pop
pop
mov
inc
pop
aam
cmc
inc
mov
lods
fs
mov
lods
push
dec
sub
mov
cld
pop
cwtl
in
loope
adc
pop
das
std
clc
bswap
dec
sahf
xchg
inc
mov
insl
cmp
out
movsl
xchg
cmpsb
push
adc
pop
jae
pushf
ds
into
jmp
xchg
cmp
mov
movsl
xchg
test
cmp
sbb
pop
mov
push
aas
xor
dec
xchg
out
stos
das
mov
pusha
pusha
and
or
cmc
dec
xor
push
pop
inc
test
xor
mov
call
lds
mov
stc
in
int3
es
call
sbbb
out
mov
mov
stos
or
cmpsb
sahf
ja
out
in
test
add
xor
dec
pop
std
pop
testl
daa
in
idivl
xchg
jns
xchg
lret
push
outsl
ja
ficoms
pop
cmp
jae
imul
and
push
mov
sti
mov
lahf
cmp
xor
add
fwait
cmp
lcall
cmpsl
test
xchg
notb
jge
xchg
dec
push
fldt
lods
je
aas
xchg
insb
shl
adc
xchg
xor
adc
pop
cmp
and
mov
lret
cli
cltd
lods
or
dec
mov
xor
sbb
mov
fstps
frstor
mov
fnstenv
cmpsl
fsubrl
fistl
pop
js
stos
adc
fistpll
in
cmpsb
loope
es
cmpsb
aaa
or
jle
jp
jns
out
xlat
rorl
lea
push
leave
ror
sub
push
test
dec
ret
add
mov
push
and
je
push
loop
inc
ret
lds
jp
std
movsl
adc
sarl
lods
xor
xchg
dec
aaa
mov
pop
fidivrs
pop
add
sub
or
orb
in
jns
or
pusha
repnz
jge
scas
int3
cmp
sub
sbb
dec
das
mov
cmp
nop
push
or
loop
lods
add
xor
cwtl
xor
cmp
push
flds
in
mov
mov
push
lahf
call
les
faddl
push
movb
mov
aaa
cs
imul
test
add
daa
adc
push
xchg
jle
mov
sub
xor
bound
mov
or
mov
insb
into
cld
pop
jns
scas
mull
fs
push
cmp
xchg
jle
sbb
add
dec
add
push
nop
lea
lahf
push
out
push
mov
jns,pt
dec
mov
and
jae
and
cmpb
repz
add
in
mov
loopne
lcall
lret
lds
cmp
orl
enter
mov
xchg
push
adcb
push
mov
dec
fadds
jmp
lock
mov
aas
pop
clc
mov
call
adc
and
mov
lcall
mov
jne
jmp
xor
inc
ficoms
inc
adcb
add
mull
jno
push
mov
mov
inc
movsb
and
repnz
dec
sbb
sub
sbb
mov
dec
rolb
in
outsl
sub
mov
js
inc
shl
add
mull
cmp
repnz
sbb
mov
comiss
inc
mov
mov
jp
iret
aad
shlb
dec
dec
sbb
xchg
adc
xchg
fidivl
inc
sbb
add
or
roll
dec
mov
xor
scas
ret
in
adc
stc
cwtl
add
adc
nop
je
mov
pop
daa
and
imul
cmp
xchg
iret
js
dec
cmpsb
inc
clc
imul
cmp
leave
cmp
movsb
in
push
je
int3
add
test
call
mov
or
mov
push
data16
sbb
ljmp
pop
sbb
sarl
lret
xchg
mov
aam
dec
out
adc
iret
icebp
push
hlt
test
xchg
iret
fdivl
push
adc
jecxz
in
mov
sbb
push
sbb
xchg
stc
sub
std
adc
popa
bound
mov
inc
mov
sbb
dec
negb
mov
xchg
cmp
cmp
test
pop
mov
xlat
popa
fwait
xchg
fcomip
scas
jno
dec
cmc
ret
dec
ljmp
out
push
ds
xchg
and
orl
inc
imul
push
mov
cmpb
rcll
nop
loopne
push
iret
or
xchg
fsts
int3
add
xchg
mov
xchg
jg
pop
add
xchg
and
hlt
dec
and
mov
and
in
in
jge
xor
pop
push
sub
popa
pushf
push
sbb
addr16
cmpsb
leave
incl
test
xor
xor
lods
jae
lea
mov
dec
add
add
fnsave
mov
adc
movsb
push
lret
cmp
pushl
sti
int
mov
mov
cmp
sub
xchg
mov
sub
rcll
add
movsl
out
mov
icebp
cmp
ss
mov
jae
jmp
dec
fisubl
shlb
mov
sbb
sbb
jmp
cmp
insl
xchg
mov
out
movsb
cmp
ret
and
je
sub
sbb
jmp
sub
fldt
mov
lahf
adc
std
ficoml
add
push
fxch
or
and
rcr
pushf
or
jbe
sub
push
fs
mov
pop
into
push
pusha
jne
lcall
test
aad
clc
sahf
imul
movsl
xchg
dec
cli
lret
sbb
mov
push
gs
dec
and
jecxz
mov
pushf
add
mov
inc
xor
ficoml
int
xor
lea
mov
loope
pop
mov
ss
dec
ret
aam
mov
and
sbb
daa
push
aas
xchg
adc
xlat
mov
xor
scas
in
scas
out
leave
or
or
cmpb
outsl
add
dec
pusha
lcall
enter
std
push
pop
xchg
mov
adc
add
pop
leave
mov
std
enter
or
jne
jecxz
insl
mov
idivb
lret
mov
movb
mov
mov
jl
dec
hlt
pop
sbb
or
std
fsubr
mov
pop
xorb
sub
fiadds
std
incb
sar
stos
hlt
lds
scas
imull
data16
pop
idivb
fsub
cmpb
dec
adc
cmp
lds
test
scas
aam
int3
mov
or
jns
cwtl
fcmovnu
rdpmc
mov
jb
sahf
pop
movsl
mov
jae
add
xchg
push
into
cmp
sub
es
xchg
hlt
mov
mov
aam
xchg
cmp
cli
sar
mov
xchg
dec
add
mov
popa
push
rcr
push
sbb
adcb
inc
lods
xor
aas
hlt
data16
loopne
std
mov
dec
stc
pop
xor
leave
repz
mov
inc
aam
out
scas
mov
and
daa
dec
inc
inc
push
xor
loope
pop
mov
xchg
jmp
add
push
test
cmp
push
dec
bnd
mov
jg
mov
lods
or
adc
xchg
fwait
shl
call
in
enter
je
and
mov
pop
xchg
iret
shlb
sarb
jl
mov
nop
out
insb
nop
pushf
hlt
push
in
or
cmp
push
fnstenv
mov
jl
or
dec
dec
push
cmp
lret
cmpsb
sbb
loopne
inc
in
mov
js
mov
dec
xor
add
and
jb
pop
add
adc
xchg
push
jecxz
dec
sti
addr16
rol
out
pop
fcoms
orl
inc
cmp
imul
jne
sti
stos
bound
insb
pusha
jo
insl
jmp
jb
cs
pushf
jl
xlat
aad
es
stos
sahf
add
xchg
aas
rorl
jl
pop
lods
inc
or
pushf
repz
and
adc
inc
pop
je
repnz
aaa
pop
and
shll
into
mov
lock
daa
cmp
fcoml
xchg
inc
popf
jle
popa
in
xor
cltd
push
enter
mov
movb
lcall
testb
pop
mov
gs
jbe
shl
jmp
movsl
int3
sbb
nop
lods
push
test
adc
sbb
iret
ret
rcl
lock
jae
ret
xlat
fistpl
mov
fdivr
sub
fistps
les
mov
sarl
jg
inc
xchg
sti
mov
aaa
mov
push
jg
mov
sbb
jo
mov
cltd
test
cmp
sbb
xor
mov
jb
push
jne
insl
or
cmpsl
lods
scas
mov
icebp
cmpsb
iret
and
es
mul
outsl
fnsave
push
jle
movsl
sbb
sub
cwtl
mov
test
xor
shlb
xor
jb
inc
mov
mov
mov
insb
xor
or
mov
movsl
popf
inc
mov
fwait
xlat
stc
ja
test
sub
out
dec
adc
out
pop
jbe
shrb
sub
pop
test
inc
mov
push
add
cmp
push
push
inc
push
jl
xor
push
lret
jo
imul
mov
pop
adc
xchg
dec
fwait
ja
lods
imul
jno
mov
push
xor
dec
xor
leave
testl
je
mov
push
subb
cmp
in
data16
cld
add
leave
adc
sub
push
xchg
mov
cmp
cmp
ficomps
shlb
sbb
and
mov
push
adc
dec
mov
add
int3
push
sub
jle
clc
cld
mov
xor
lcall
mov
push
mov
inc
inc
dec
les
xchg
lcall
push
call
jecxz
imul
pop
scas
or
mov
aas
mov
cmp
inc
daa
push
in
sub
mov
inc
jle
sub
idivb
std
jno
inc
ds
outsb
popf
jg
lock
in
arpl
pop
or
jo
movsl
sti
bound
mov
push
sbb
call
pop
mov
mov
and
cmp
leave
xchg
mov
pop
xchg
push
loopne
sbb
addl
mov
adc
popf
int3
jns
cmp
jg
xchg
mov
mov
xlat
std
cmp
shl
or
rcr
fsubrl
xchg
sub
push
popf
mov
pushf
mov
outsb
pop
imul
mov
movsl
lret
enter
test
js
fcmove
stos
fisubs
pushf
andb
jns
in
push
or
inc
daa
daa
jmp
les
orb
xor
mov
inc
ret
pop
push
loope
push
xor
dec
dec
fs
dec
inc
fdiv
cmp
out
ret
mov
insl
jl
add
sbb
cltd
sub
xor
add
cmp
and
pop
xor
sub
ret
out
add
cltd
idivl
into
add
pop
fildl
or
mov
sub
xchg
xor
xlat
outsl
lcall
jbe
add
xchg
cld
shlb
addr16
cld
cld
adc
inc
xor
and
aas
xor
insb
inc
rolb
cli
fadds
cmp
leave
add
into
jge
dec
adc
dec
jecxz
negl
scas
cwtl
out
das
in
jns
in
sbb
inc
popa
xchg
lea
cltd
aad
xor
push
dec
repnz
ret
out
push
into
ret
in
mov
xchg
js
and
test
inc
xor
and
int
cmp
les
jbe
les
stos
pop
push
aad
xor
fdivrs
insl
mov
xchg
and
loop
xchg
sbb
mov
adc
rol
stos
inc
jp
cmp
adc
stc
adc
in
arpl
popa
movsl
ljmp
fdiv
fsubl
call
adc
push
fpatan
xchg
enter
lock
and
mov
push
xchg
outsb
in
xchg
fstpt
jl
lret
or
mov
cmp
mov
cwtl
lea
inc
push
mov
and
cwtl
testl
pop
or
mov
push
mov
xor
ror
jmp
cli
jno
aaa
mov
into
adc
adc
mov
add
jns
icebp
sbb
xchg
sbb
inc
lret
xchg
adc
test
or
adc
jmp
adc
inc
bound
shll
mov
mov
push
jg
out
pop
ret
je
mov
mov
xchg
out
jb
cld
sub
ds
loop
sub
incb
rorl
sbbl
cmc
push
cmp
mov
cli
out
push
mov
mov
repnz
push
inc
aam
pushf
scas
fld
cld
rcl
test
mov
popa
or
mov
imul
pop
add
sbb
mov
subl
leave
cs
add
pop
push
add
inc
lds
loopne
stos
cmpb
lret
jmp
jno
movsl
imul
mov
pop
andb
idivb
xorl
bound
hlt
in
adc
adc
es
pop
mov
xchg
es
ret
mov
in
mov
cmp
mov
inc
rorb
loopne
jg
lahf
loop
and
cli
popf
frstor
int3
adcl
ss
push
imul
loope
pop
jmp
aad
dec
push
test
adc
bound
or
mov
pop
jns
fs
mov
mov
jno,pt
movsb
mov
lods
cs
adc
xchg
and
repnz
scas
flds
fwait
icebp
xchg
jp
aad
add
cmp
xchg
jecxz
int3
out
movsl
mov
aaa
iret
xchg
pop
imul
out
adc
pushf
imul
aas
fiadds
scas
add
or
outsb
fmuls
sbb
ja
xor
mov
xor
adc
sub
jns
hlt
jb
adc
mov
mov
rcrl
pop
xchg
sub
mov
jg
mov
hlt
cmp
push
arpl
fldl
popa
jp
in
mov
inc
cmp
xor
enter
sub
fs
dec
sub
pop
or
insb
addr16
sub
jb
std
jecxz
out
mov
fbstp
lock
out
rorl
add
pusha
jp
mov
movsl
xchg
mov
or
mov
call
jg
sbb
imul
fwait
ret
lcall
xchg
scas
xchg
sbb
pop
int
scas
dec
cmp
ret
push
out
xlat
repnz
xchg
out
xchg
repz
into
stos
push
outsl
xor
mov
push
sub
fistpll
add
pop
push
fbld
jmp
mov
and
sub
dec
lock
das
fiadds
stos
xchg
pop
pop
mov
test
pop
in
sbb
cs
xchg
lret
movsl
push
mov
xchg
and
pop
lret
cmc
sbb
pop
popa
add
pop
je
mov
jno
jge
gs
psubq
outsl
jmp
xchg
test
outsb
bound
stos
inc
lcall
arpl
sub
push
xchg
rcl
outsl
andps
testl
imul
aaa
jae
mov
pop
jbe
les
repz
or
pop
ret
sbb
jb
cmp
das
mov
into
add
aaa
ljmp
sbb
inc
pop
lods
shr
mov
sub
cmpsl
cwtl
xchg
push
scas
mov
jmp
hlt
addr16
popf
cmp
pop
jns
ret
ror
outsb
mov
inc
rorb
lds
or
mov
jg
mov
mov
lods
mov
lahf
or
aad
dec
mov
daa
jp
sahf
pop
stos
pop
out
inc
cmp
xchg
fbld
inc
or
sub
insl
in
pop
insl
jno
mov
push
cmp
sahf
mov
rclb
push
movsb
pop
in
jl
data16
jmp
mov
mov
bnd
flds
out
inc
or
loope
decb
loop
add
movsb
cmc
sbbl
movsb
cmpsb
mov
sbb
pushf
lret
xlat
lret
mov
je
or
loopne
cmp
stc
sub
sahf
sbb
mov
jg
cs
cmpl
in
out
pop
cmpsl
dec
rorb
push
dec
shufps
aam
mov
dec
rcrl
mov
add
roll
mov
nop
cmc
pop
mov
mov
jg
loope
pop
iret
pop
inc
inc
inc
dec
xchg
out
push
and
popa
enter
sub
adc
outsb
outsl
idivl
xorl
mov
and
xchg
xlat
mov
add
xchg
xlat
xchg
and
mov
je
int
repnz
popf
cmp
mov
and
pcmpgtd
or
ds
or
or
mov
pop
push
adc
repnz
testb
fadds
pop
mov
in
cmp
jg
jo
cmp
hlt
push
sub
mov
aad
jbe
sbb
js
mov
loope
push
sahf
push
jne
mov
test
lods
imul
pop
movsb
fldenv
and
ror
jg
or
ja
in
inc
leave
mov
add
push
adc
arpl
cwtl
mov
into
jge
movl
jae
push
pushf
aam
pushl
cmp
dec
dec
jne
xor
orb
sub
push
nop
add
mov
push
adc
lock
pusha
or
or
sti
daa
mov
les
nop
mov
or
and
cwtl
or
and
inc
fmuls
cmp
jl
negb
mov
cmp
inc
popa
shll
push
mov
sbb
dec
xor
add
pop
stos
outsl
jl
popa
cltd
popa
mov
pop
fidivrs
fwait
push
lods
sub
and
xchg
and
into
loop
and
jmp
inc
mov
hlt
adc
es
cmp
mov
pop
dec
jbe
lcall
jge
push
aas
out
mov
push
push
jbe
mov
xchg
mov
pop
dec
cld
sbb
push
movsl
or
and
cmp
adc
jo
dec
fwait
sub
push
lahf
adc
es
pop
es
nop
call
lret
cmp
bound
mov
xchg
sbb
stc
jge
aad
or
bound
push
cmpsl
rcrb
xor
mov
or
in
fdiv
andb
jecxz
cld
jbe
jns
loop
push
inc
iret
addr16
movsb
cmc
jne
nop
je
jp
in
mov
jnp
mov
sbbb
movl
fnstcw
std
jge
addb
pop
jae
nop
xchg
and
sbb
push
jmp
std
sub
out
cmp
jnp
sbb
pusha
cmp
jnp
lock
scas
or
mov
stos
rcrl
js
shll
add
and
repz
pop
and
cmp
repnz
hlt
sbb
mov
lods
es
movsl
int3
scas
jbe
mov
cltd
xchg
dec
mov
fildll
movsb
add
into
mov
jbe
repz
and
sbb
andl
insb
push
adc
mov
and
mov
push
dec
outsl
and
push
jno
push
pop
jle
inc
std
add
inc
aaa
sub
fistpl
push
lea
mov
xor
aam
inc
push
mov
xchg
sub
cmpsb
test
push
pop
call
mov
and
loope
fmulp
fnstsw
dec
push
add
jg
jge
dec
add
out
push
xor
and
mov
push
pop
jb
stos
out
cwtl
ss
lea
lcall
shlb
sbb
lea
in
loop
lahf
adc
xchg
adc
mov
sarb
scas
adc
mov
popf
jmp
mov
cmc
int
aaa
inc
and
test
push
add
in
mov
roll
sub
and
adc
cmp
sahf
jle
out
or
mov
xchg
and
pop
mov
push
mov
add
dec
ret
fsts
fstpl
add
mov
ja
pop
arpl
pop
leave
into
outsl
pop
mov
jle
lret
adc
and
dec
jecxz
push
push
bound
mov
in
add
mov
adc
xchg
sbbb
and
dec
ds
mov
mov
add
loope
mov
inc
sbb
mov
jo
xchg
lcall
jnp
loop
jb
jl
mov
sbb
orl
xchg
mov
and
loop
jb
shrl
mov
incl
ja
mov
add
inc
into
ja
pop
add
pusha
push
repnz
xor
stos
test
xchg
out
addr16
out
xor
rolb
stos
jb
cwtl
jecxz
pusha
push
aas
popf
rorb
hlt
mov
out
aad
shrb
sub
inc
xor
pop
cmp
cmpsl
aad
pop
push
mov
jp
lcall
test
or
lods
lea
sti
in
adc
ja
bound
cld
ficoml
fucomi
js
clc
mov
jl
fiadds
ret
dec
push
shl
mov
mov
jge
add
movsl
fsubp
cmp
xchg
or
insl
loop
push
out
push
cmp
lahf
into
dec
js
pop
lcall
mov
push
sarb
mov
mov
aam
and
adc
lods
jg
imul
jb
mov
lods
mov
push
jge
cmpsl
jno
sub
hlt
cmpsb
sbb
andb
cmp
pop
push
dec
ja
movsl
lds
in
pop
xor
dec
testl
cli
in
test
pop
mov
and
sbb
inc
and
ret
jnp
mov
sub
pushf
addr16
pushf
ss
add
sub
daa
cld
mov
test
leave
nop
in
jmp
clc
inc
repnz
and
mov
cmc
mov
imul
and
cmpsl
out
faddl
rorb
cmp
stos
add
xorb
sbb
ret
fwait
adc
popa
lcall
add
fisttps
clc
push
nop
outsl
scas
dec
ret
scas
xor
push
add
mov
sbb
packssdw
pop
cmp
cmp
jno
adc
cmp
loopne
fidivl
mov
add
cmp
mov
cmp
stos
sbb
mov
and
xchg
mov
incb
aad
leave
adc
stos
imul
stc
fsts
popf
lret
mov
fs
les
jo
arpl
dec
scas
push
fptan
ja
inc
add
movsb
push
fsubs
js
les
dec
push
lahf
stos
mov
lahf
je
push
mov
mov
not
ds
popf
sbbl
sahf
xlat
add
test
push
ret
adc
icebp
setle
addr16
popf
sub
sub
mov
push
adc
fidivl
shl
cli
push
ds
pop
mov
jbe
jb
jnp
push
ljmp
into
sahf
xchg
xor
loop
pop
loopne
movsl
addr16
addr16
push
jg
icebp
and
lods
jg
aas
rclb
jle
test
shlb
xor
leave
or
xchg
shl
dec
mov
aad
test
xlat
dec
filds
mov
aas
xor
sbb
and
dec
cwtl
lea
dec
add
inc
dec
push
add
dec
mov
outsl
shlb
scas
daa
cmp
push
mov
add
mov
mov
cltd
mov
lds
xor
loope
jecxz
cmp
into
imul
and
mov
and
int
push
ds
js
jbe
stos
arpl
loopne
dec
pop
scas
orl
cli
xor
xor
sub
sbb
add
dec
inc
cmp
data16
inc
cli
mov
cmp
sub
fdivs
aaa
imul
daa
out
insl
fadd
lds
push
xchg
shrl
inc
jns
or
ljmp
lret
adc
xchg
hlt
outsl
das
cli
data16
mov
mov
pop
push
mov
movsl
iret
push
stc
jecxz
ja
mov
cltd
loopne
rcrb
in
mov
lods
insb
bound
imul
stos
loopne
rcpps
jae
outsl
add
xchg
adc
aas
popa
ljmp
mov
decb
jne
cmpsl
fs
and
stos
mov
imul
adc
mov
inc
or
testl
movsl
movsb
insl
xor
mov
aaa
xchg
rol
out
nop
mov
ret
or
lret
out
mov
xor
iret
fiaddl
xor
add
sarb
scas
jno
cmp
sub
scas
sub
mov
les
out
jae
or
adc
push
push
inc
out
aam
lret
adc
sub
dec
dec
incb
loope
xor
lods
pop
xor
bound
fs
and
xchg
cltd
and
adc
icebp
mov
pop
popl
xchg
mov
and
imul
sbb
cmp
popa
mov
jne
fwait
cltd
xor
aas
fisubrl
arpl
mov
dec
lret
test
cwtl
pop
jbe
mov
pop
std
jb
dec
sbb
and
mov
push
push
insb
mov
dec
inc
inc
ret
xor
and
jle
pop
test
loop
rolb
push
ret
and
sbb
bound
xor
cmp
aas
sub
dec
jns
add
push
aaa
es
sbb
daa
mov
cli
sbb
add
ret
mov
mov
les
mov
and
mov
lea
lahf
inc
or
int
xor
adc
call
enter
inc
mov
out
movsb
pop
add
xor
mov
or
pop
mov
dec
mov
add
xchg
mov
jns
ljmp
in
mov
cmc
mov
inc
popl
mov
fidivrs
jecxz
imul
xchg
xchg
sbb
jl
sub
sbb
int3
hlt
jne
adc
fstl
cmpxchg
pop
and
outsb
or
jb
fsts
and
pop
mov
out
enter
stos
xchg
cmp
stos
imul
ss
and
mov
dec
cltd
add
aaa
loopne
in
mov
enter
mov
call
imul
jno
or
lret
xchg
cltd
es
sahf
cmc
xchg
sub
hlt
push
mov
in
into
pop
cltd
cmc
std
dec
fimull
cmc
cmpsl
or
aad
push
adc
pop
imul
and
sbb
or
movsl
mov
mov
xor
mov
pop
aad
jbe
insb
pop
insb
idiv
or
push
mov
jmp
dec
jae
sub
aaa
adc
cmp
lock
sbb
inc
and
test
jmp
push
iret
loop
andb
pop
mov
je
sti
in
jno
popa
clc
scas
hlt
mov
call
xchg
mov
dec
shl
xor
nop
sar
into
pop
fisubl
and
pop
je
cmp
mov
xor
sbb
mov
ljmp
test
jb
pop
mov
jg
jnp
push
and
cmpsl
pop
movl
cmpsl
movsl
stos
call
dec
movsl
adc
fwait
data16
sbb
push
add
adc
sbb
add
sbb
call
xchg
mov
inc
push
push
incl
adc
insl
cmp
mov
pusha
ja
dec
call
dec
mov
aas
jl
jp
lcall
dec
idivl
insl
sub
aad
adc
std
mov
cmp
xchg
and
and
pop
mov
cmp
mov
repz
enter
cmc
push
bound
add
dec
push
popf
xor
test
icebp
cmp
in
ja
and
sti
dec
mov
pop
sub
test
pusha
add
dec
in
push
decb
jle
mov
test
push
push
movsb
dec
jbe
ficoms
push
sarl
pop
mov
add
xchg
imul
and
and
jl
and
scas
ja
cmpsb
int3
insb
push
test
mov
sub
cltd
mov
movsb
inc
xor
mov
add
nop
mov
push
inc
add
jmp
ja
test
push
icebp
stos
push
or
pop
outsl
mov
pop
sbb
push
iret
cltd
popf
pop
jo
cwtl
repnz
sbb
inc
aas
test
xchg
jne
test
push
adc
imul
dec
repz
loopne
stos
add
pop
pop
sbb
mov
sbb
adc
mov
std
adc
xor
dec
int3
pop
icebp
push
movsb
jno
pop
adc
push
add
and
and
stos
nop
sbb
pusha
inc
fsubrl
sar
fs
pop
imul
repnz
popa
idivb
jecxz
add
or
inc
mov
shl
lea
test
xor
mov
test
ss
sub
xchg
xchg
clc
sti
adc
push
mov
inc
cmp
inc
lock
inc
mov
dec
inc
notl
add
std
or
cld
push
mov
cmovnp
bound
rclb
sub
lock
or
push
iret
add
jmp
pusha
sub
popa
or
int3
mov
addr16
mov
imull
icebp
in
mov
xchg
sub
pop
insb
out
les
adc
mov
pop
lret
cmp
negb
int
mov
or
sbb
inc
sbb
fptan
imull
push
push
ss
mov
mov
insb
nop
xor
cmp
inc
test
cmc
push
or
cmpsb
out
mov
movsl
and
lds
sub
xchg
pop
and
mov
jecxz
cmc
in
out
mov
mov
add
pushf
fwait
mov
aaa
shlb
ror
lret
mov
pop
adc
cmp
cs
push
cwtl
aam
push
femms
adc
jle
sahf
andps
stc
mov
jns
sbb
inc
lret
stc
mov
in
push
loop
jbe
inc
es
push
adc
sbb
out
pop
aad
push
mov
xchg
add
mov
insb
lea
subl
outsl
faddl
jecxz
je
fcmovnb
pop
xchg
hlt
push
icebp
ret
hlt
fistl
sub
add
arpl
sbb
add
call
mov
roll
mov
scas
sbb
and
cs
outsb
cmp
adc
outsl
mov
sub
jle
xchg
sahf
out
insb
cmpsb
cmc
mov
lods
xchg
icebp
mov
out
movsb
and
faddl
aas
fldt
jmp
pushf
fldt
sbb
or
negl
dec
adc
pop
and
inc
fisttps
mov
add
sub
stc
arpl
add
pop
stos
sbb
repnz
or
shrb
jmp
mov
mov
out
cltd
and
inc
add
push
cli
xchg
jno
inc
cwtl
gs
dec
jbe
xor
test
call
loope
mov
mov
es
mov
mov
adc
jp
cmp
jmp
ja
xchg
push
orb
push
testb
clc
push
lds
sti
cs
je
repnz
push
mov
and
push
cmpb
pop
mov
xor
mov
loope
inc
inc
outsb
in
mov
out
inc
xchg
sbb
in
dec
mov
xor
icebp
xor
rolb
lahf
cmp
ljmp
inc
pop
push
push
out
sbbb
out
xchg
lods
test
fwait
inc
and
mov
fisubl
ljmp
cmp
sbb
sub
mov
jnp
push
mov
sti
data16
jp
aad
inc
pop
pop
mov
outsl
je
in
push
inc
insl
push
xor
pop
or
push
mov
cmp
mov
fcoms
mov
inc
stos
cmp
mov
js
mov
test
mov
pop
adc
xchg
fildll
movsb
fiaddl
jnp
testb
jl
add
fstpt
lahf
jecxz
add
pop
mov
fimull
and
popa
mov
popa
clc
test
push
sub
adc
aam
push
adc
aad
lret
popf
test
movsb
cmp
mov
lea
clc
je
xor
std
clc
push
scas
or
jg
loope
mov
loop
and
fsubrs
fcomps
out
cltd
scas
dec
push
clc
hlt
mov
pop
clc
lds
push
jno
stos
subb
inc
orl
jno
xorl
scas
adc
adc
fstpl
dec
sbb
idivb
sbb
pushf
fadd
jo
gs
xlat
jmp
daa
add
ror
add
rorb
lahf
hlt
xor
jecxz
sbb
lret
mov
xchg
rol
aam
ret
test
das
jbe
push
pop
cmpsl
pop
mull
inc
aas
and
emms
pushaw
jne
xchg
sbb
mov
in
in
addr16
hlt
xor
cmp
adc
dec
push
mov
sahf
dec
jmp
push
jb
cmpsb
movsb
and
mov
mov
add
xor
in
jae
and
and
jo
loope
inc
ret
xor
in
cli
jmp
icebp
and
mov
test
mov
jns
in
jnp
cmp
shlb
jl
into
int3
mov
adc
outsb
shll
jns
cmp
loopne
pop
movsb
cmp
and
cmp
sub
inc
ficoml
addr16
rcrb
xchg
add
imul
mov
dec
cmc
or
xlat
mov
xor
dec
cmpl
mov
push
shrb
jp
popf
mov
fildll
adc
and
std
outsb
lods
adc
call
pop
cltd
cwtl
fdivl
and
mov
repnz
xor
aaa
movsl
pop
data16
std
andb
jmp
and
fwait
scas
inc
mov
sbb
xchg
or
int
mov
lea
pushf
es
sahf
jle
out
jp
xchg
jg
inc
add
in
mov
loop
mov
push
inc
std
xchg
iret
sti
lcall
or
aam
popa
push
out
jecxz
cmc
cmpsb
mov
insl
dec
scas
xor
mov
outsb
cmp
push
out
cmp
int
repnz
or
sbb
dec
lds
lret
cltd
or
mov
pop
jge
jo
pop
ljmp
xor
mov
cmpsl
out
cmp
out
pop
rclb
outsb
popf
mov
mov
pushl
fidivs
cmp
cltd
std
icebp
imul
lret
scas
mov
fs
outsl
ret
cld
je
xlat
and
test
inc
lods
push
in
mov
pop
cmp
jo
push
shl
pop
push
testl
fsubr
mov
fsubr
fsubl
push
xchg
outsl
clc
cmpsl
cmp
lea
nop
cmpb
fwait
sub
push
stos
fdivs
or
cs
mov
int
movsl
mov
mov
jb
and
iret
and
cmpsb
lds
cli
mov
push
xchg
xor
jmp
out
jge
sbb
xchg
jmp
stos
div
pop
loopne
sub
mov
fsubl
pushf
jbe
out
decl
pop
jg
xchg
dec
xchg
movsb
pop
or
repnz
jne
enter
jno
mov
add
jno
jmp
jo
jno
jmp
insb
push
sbb
cld
mov
pop
clc
lahf
mov
outsl
mov
loopne
mov
daa
inc
cmp
leave
out
inc
pop
rcl
inc
mov
jmp
add
pop
inc
loope
xchg
addl
cli
insl
clc
mov
insl
cltd
or
push
push
push
add
addr16
mov
push
test
jo
fs
push
out
lds
jle
inc
add
dec
ds
in
jle
jg
push
scas
test
out
mov
mov
push
ds
out
mov
and
jo
sbb
jg
jae
mull
out
stc
inc
sarl
lock
dec
sbb
inc
pop
jmp
inc
aaa
ret
or
and
fisttpl
xchg
jmp
mov
mov
stos
xor
adc
dec
mov
fwait
push
mov
fdivr
and
in
clc
in
das
test
pop
sub
xor
mov
ss
fcoml
ja
jbe
mov
jo,pn
je
inc
loop
lahf
sbb
es
into
mov
adc
cld
jns
lret
jno
mov
mov
add
inc
or
mov
mov
gs
sub
div
adcl
jmp
fsubl
and
jno
mov
cmp
inc
cmp
mov
rclb
xchg
pop
mov
adc
insb
push
or
repz
dec
dec
dec
jno
cmp
or
enter
adc
popa
subb
ret
repnz
fdiv
pop
pop
push
and
dec
aas
inc
xchg
faddl
sti
pop
and
mov
fildl
scas
leave
je
adc
out
cli
pop
mov
and
add
test
repnz
das
fcom
aaa
or
or
pop
daa
add
or
push
fimuls
xchg
int3
fisubrl
mov
shll
je
aam
test
or
or
aas
inc
lret
jno
mov
outsl
jg
jne
loop
enter
dec
cmp
add
pusha
fs
fnstcw
mov
add
dec
test
xor
mov
xor
insb
cwtl
mov
shl
rcrb
jne
dec
and
and
sti
push
xchg
xchg
jmp
mov
or
fs
loope
subb
lds
movsb
shll
sbb
ret
and
adc
add
pop
fiadds
ret
jns
into
repz
xorl
mov
jp
out
loopne
adc
dec
xchg
cli
push
jp
fs
fnstcw
add
jnp
das
mov
clc
cmp
nop
xlat
inc
and
jg
xor
mov
int
mov
xor
and
dec
outsb
ret
pop
pusha
xor
fcmovbe
jo
stc
in
scas
andb
scas
jno
inc
and
nop
xchg
in
cmp
ret
repz
fcom
or
pop
jle
sti
sahf
fdivrs
mov
xchg
sbb
sbb
in
xor
cmp
movsl
mov
add
cmp
xor
insb
xchg
push
jge
and
testb
mov
sbb
mov
stos
fadds
sahf
fistpll
xor
jbe
nop
leave
test
xor
or
cmp
pop
shl
mov
xchg
test
jne
jecxz
jns
sbb
fstpt
xor
leave
leave
lcall
adc
in
push
stc
pop
pop
hlt
dec
push
imulb
nop
push
push
out
fimuls
lock
xor
fsts
jb
cmp
btl
and
pop
add
pop
ljmp
add
iret
mov
lods
daa
pop
mov
outsb
sbb
lcall
in
leave
aam
test
mov
rcr
and
xor
ja
test
and
movsb
mov
les
xor
and
and
outsb
dec
je
sub
adc
and
jl
aaa
aam
push
out
jl
sub
in
call
mov
and
stos
or
int3
int
repz
mov
mov
xchg
cli
mov
push
xor
cmp
ljmp
in
pusha
pop
dec
adc
std
mov
xchg
cmp
and
hlt
insb
insl
fdivrl
ljmp
stos
push
ja
push
add
add
fdivl
pop
mov
imul
dec
clc
sahf
mov
cwtl
cmp
sbb
jb
xchg
dec
xchg
mov
repnz
adc
movsb
cwtl
in
mov
imul
mov
pushf
les
adc
stos
lahf
mov
cmp
cmpsl
push
pop
dec
pop
jge
xor
mov
inc
stc
negb
push
or
inc
add
cmp
shrb
call
insb
xor
dec
pop
rolb
inc
pop
loopne
scas
scas
jnp
sbb
mov
cmp
int
jl
cmp
mov
mov
cmc
add
fstps
imul
pop
js
imul
jmp
movsb
pandn
test
xchg
ret
sbb
cmpsl
inc
aam
push
pop
mov
pop
inc
xchg
pop
mov
pop
or
ds
adc
std
push
lcall
fistl
mov
lret
fucomi
negl
in
push
outsl
lock
decb
divl
jne
je
jg
outsl
inc
bound
inc
shlb
sbb
inc
ret
lret
jns
mov
mov
pop
addr16
in
arpl
inc
orb
or
jp
fisttps
lea
stc
jge
mov
mov
insb
std
sub
ds
sbb
and
punpckhbw
cwtl
push
pop
lret
fcompl
dec
mov
mov
loope
cmp
ja
sbb
push
xchg
fcomp
stos
or
mov
lcall
cmp
xchg
ja
stc
nop
push
decl
arpl
push
out
mov
push
dec
adc
sbbb
sti
gs
data16
push
xchg
in
mov
mov
test
loope
xchg
pop
aas
pop
pop
outsl
js
xchg
lret
stc
aaa
or
hlt
mov
push
push
and
stos
aam
push
xor
cmp
dec
sbb
mov
cli
jnp
mov
setne
xchg
cmc
outsb
or
scas
pop
sbb
or
add
mov
adc
out
mov
xchg
dec
push
in
scas
aad
or
sub
inc
add
mov
dec
subb
fldcw
push
pop
sbb
pop
movsl
xchg
pop
test
gs
testl
add
pushf
in
ret
jns
mov
sub
out
sti
adc
xchg
gs
jne
gs
mov
lret
int
xchg
pop
adc
aas
xor
jns
xchg
adc
mov
xorl
jns
mov
cwtl
sub
pop
mov
cmp
fs
jne
movsl
cmpsl
ret
int3
jns
mov
out
cmp
fs
adc
sbb
hlt
js
rorb
ret
sub
inc
cmp
stc
mov
push
and
mov
sahf
addr16
mov
pop
sbb
xchg
mov
xlat
pop
xchg
jne
and
sub
faddl
or
sahf
int3
or
mov
nop
stos
sub
fs
cld
dec
mov
sub
or
sahf
pop
sahf
int3
xor
mov
dec
cwtl
sbb
popf
push
xchg
dec
fisubl
dec
cmp
cs
xor
xchg
add
enter
cmp
mov
mov
movsb
mov
dec
push
enter
mov
mov
or
dec
rcrb
mov
lods
mov
in
jb
adc
pop
cmp
nop
jle
cmpb
lock
and
cwtl
cmp
mov
in
pop
sub
jb
xor
andb
sub
ljmp
mov
shrb
pop
dec
xor
or
nop
dec
adc
xchg
mov
lcall
mov
inc
push
lcall
and
xchg
leave
aam
out
mov
pop
mov
sbb
out
cmc
int
dec
xlat
divb
add
scas
stc
shlb
ja
lds
and
dec
nop
or
add
shl
jl
and
sbb
sbb
push
mov
mov
jb
inc
jp
fcomps
andl
out
addr16
lahf
iret
je
mov
jnp
movsb
or
out
lds
jnp
sahf
in
rorb
das
pusha
fwait
je
sub
mov
dec
mov
mov
cmpsb
dec
les
into
dec
jmp
push
cwtl
mov
and
sub
and
loop
ss
xchg
mov
lret
and
cmp
das
out
lea
lret
test
into
aad
dec
jne
dec
jp
jp
enter
mov
mov
lcall
add
xchg
gs
pop
push
rcll
scas
jns
fwait
cmp
rcr
imul
xchg
dec
xchg
inc
out
inc
jg
sahf
jp
jmp
cmp
pop
repnz
fcomp
inc
daa
xor
xor
xor
mov
xchg
stos
loop
and
sti
ret
add
jg
push
mov
pop
rcrl
mov
pop
mov
sbb
jbe
and
int
mov
and
fsubr
adc
adc
sbb
nop
lds
cmp
xor
jg
rcrb
jo
stc
mov
out
pop
int
out
push
mov
adc
outsl
popf
je
adc
call
inc
adc
sub
xor
and
push
jb
or
pop
movsb
ss
fmul
in
out
mov
lock
pop
int3
pop
jmp
pop
sub
adc
fsubrp
andb
pop
inc
sub
add
and
xor
jb
cmp
mov
jl
rcl
out
adc
scas
lods
loope
inc
adc
mov
and
mov
push
push
pop
mov
ja
pop
pop
shr
cmpsb
dec
iret
sub
stc
cmp
mov
cmp
iret
scas
enter
adc
loop
xor
cltd
inc
shrb
and
int3
cld
sbb
sub
cmpsl
pop
mov
adc
fcomi
je
outsl
mov
xchg
add
fs
xchg
inc
stos
in
add
cmp
outsb
xchg
not
cmp
jle
stos
and
mov
mov
sbb
xor
cld
sbb
and
xlat
cmp
cmp
stos
mov
daa
jge
mov
add
cltd
fisubs
sbb
bound
lret
mov
hlt
mov
mov
lods
lods
mov
fcmovnu
mov
pop
mov
repnz
sub
out
pop
ret
flds
sub
push
jl
mov
fwait
aas
lea
icebp
inc
orl
rorl
aam
fcoml
pop
std
jnp
movsl
repz
movsb
lret
jg
mov
mov
adc
or
adcb
insb
dec
add
sahf
mov
mov
add
cltd
push
out
cmpb
add
fisttpll
cmpsl
andb
notl
mov
aam
mov
orl
iret
bound
xchg
adc
lock
pop
hlt
mov
pop
inc
aad
cmp
pop
push
pop
mov
mov
lods
ret
insb
mov
or
jecxz
loopne
sbb
leave
xchg
mov
mov
cmp
fmull
push
sbb
push
jecxz
gs
mov
scas
aam
sahf
fwait
inc
ljmp
daa
sub
dec
mov
cmp
in
movsw
adc
shrl
out
sbb
in
mov
cmp
fnstsw
into
jo
xor
addr16
lds
aam
add
jo
fcoms
xor
pop
test
sti
mov
dec
rcl
and
imul
imulb
cli
out
sbb
dec
adc
fsubp
pop
imul
add
pop
fisttps
jmp
imul
addr16
int3
cmp
or
xor
or
lret
mov
loop
sti
and
inc
sbb
insl
in
fldl
mov
sbb
ficomps
fnstcw
fidivl
in
mov
xor
rcll
pop
or
lea
push
negb
push
movsb
and
orb
icebp
enter
xor
adc
inc
inc
not
xchg
outsb
mov
imul
sti
mul
dec
push
outsl
cmp
xchg
xor
sbb
loop
push
xor
dec
sbb
out
int3
sbbb
mov
dec
xchg
dec
lods
syscall
mov
push
pop
js,pn
aam
mov
lcall
pop
cmp
dec
mov
xor
xchg
pusha
dec
dec
aas
outsl
jb
out
dec
insb
cmp
mov
xor
and
in
int
popa
daa
mov
stos
cmpsb
shr
add
pop
imul
sbb
out
add
mov
cmc
arpl
dec
mov
call
addr16
clc
ds
int3
push
fwait
push
cltd
jg
aaa
stc
mov
std
cmpl
mov
fisubrl
stc
lock
outsb
xor
pop
adc
xchg
cld
or
fdivs
jmp
pop
mov
mov
out
cmc
add
std
inc
push
jmp
sahf
inc
or
mov
xor
mov
arpl
call
mov
ss
scas
mov
lcall
push
push
mov
out
push
lret
mov
mov
cmp
popa
insl
mov
outsb
jl
mov
sti
hlt
pop
pop
add
push
lahf
dec
imul
and
mov
shl
popa
mov
xor
mov
fs
sbb
mov
int
sbb
movsb
mov
lods
in
cmp
xchg
jbe
mov
inc
mov
aaa
mov
cmp
mov
xchg
sbb
sbb
inc
mov
sub
gs
rclb
mov
aam
xor
jle
test
mov
xor
sbb
or
aad
imul
jmp
arpl
pusha
push
nop
enter
jl
jle
sub
test
pop
ss
cmp
xor
data16
addr16
mov
lret
inc
ljmp
sarb
xlat
cltd
fwait
inc
nop
xorl
jae
nop
sahf
or
adcb
pop
pop
mov
and
jnp
xchg
mov
adc
jno
mov
popf
data16
xchg
jnp
sbb
negl
push
sub
shrl
shl
in
test
fadd
xor
test
inc
call
push
ss
xor
push
mov
jb
movsl
ja
mov
jns
adc
push
adc
popa
cs
sahf
pop
or
mov
daa
push
sbbb
or
dec
addr16
in
jl
xchg
dec
lcallw
jno
jp
insb
lea
dec
repz
adc
sbbb
jl
sub
test
sub
nop
in
add
or
adc
imul
fsubrl
mov
adc
mov
test
mov
mov
xchg
add
movsl
std
cmp
push
jl
pop
push
push
insb
push
enter
aad
mov
lods
mov
jle
insl
into
cmp
imul
nopl
sub
fisubl
cmp
aaa
int
jecxz
mov
push
jp
cwtl
ss
cmpsb
imul
adc
push
fsubrs
aam
add
aad
sub
xor
mov
test
pushf
and
inc
nop
dec
and
mov
std
cmc
mov
mov
mov
sub
aam
sbbl
push
xor
lret
movsb
ret
ror
jae
push
pop
int3
and
push
icebp
mov
add
scas
pop
cmpsb
and
sti
lods
icebp
sub
push
insl
fistl
inc
jbe
push
jbe
cli
lds
call
cmp
cld
xlat
mov
add
cmp
std
mov
ss
push
push
push
jb
mov
icebp
fisubs
gs
scas
mov
pop
push
popf
or
adc
cld
int
cmp
mov
movsb
enter
out
jnp
shr
add
icebp
mov
clc
jecxz
xchg
push
stos
mov
sbb
inc
cwtl
lods
adc
outsl
or
dec
jb
mov
mov
jo
je
dec
ret
cli
add
inc
mov
das
mov
jb
lret
push
fnstsw
pop
xchg
and
aaa
or
sbb
ja
mov
jnp
aaa
push
imul
xchg
movsl
pusha
cmc
adc
xchg
pop
lods
jb
xchg
push
addr16
sbb
cld
and
rorl
adc
mov
and
add
adc
jle
cwtl
jg
aas
mov
addl
jle
pop
pop
sub
aam
addr16
in
xor
lret
in
stc
sub
mov
mov
pop
add
pop
popf
out
ret
dec
push
cmpsb
jmp
sti
sarl
jb
push
mov
decb
lcall
shr
mov
fistpll
sbb
jmp
mov
repz
mov
push
mov
push
test
cmp
mov
push
jbe
sub
jge
push
fildl
push
sbb
dec
xchg
and
mov
in
mov
push
add
mov
leave
adc
sar
mov
mov
xchg
aaa
mov
mov
push
clc
outsb
lods
repz
xchg
in
pop
or
cmpsl
out
scas
lret
pop
out
je
insl
icebp
jecxz
outsl
sbb
push
test
xchg
cmp
xor
jb
adc
and
push
mov
in
sub
sarl
mov
mulb
jbe
stos
into
cmp
in
fnsave
mov
dec
test
loopne
xchg
loop
daa
dec
pop
push
insl
sbbl
inc
xchg
sbb
push
jb
rorb
sbb
mov
jge
rolb
not
xor
shrl
push
push
inc
outsb
cmp
sub
subl
je
sbb
rorl
adc
mov
int3
mov
dec
jno
dec
nop
jno
sub
pop
sbb
lods
mov
cmp
sub
jae
je
lret
lret
and
push
xchg
stos
jmp
jmp
lahf
lods
aam
jle
das
inc
das
jo
xor
push
insl
xchg
adc
dec
aad
bound
xchg
pop
lret
cmp
jecxz
ret
jl
jbe
popa
add
sub
leave
sub
mov
push
or
clc
iret
ret
cmpsl
insb
xchg
cmp
mov
and
rorl
popf
sbbl
mov
push
and
cltd
xor
hlt
inc
call
test
int3
mov
mov
int3
adc
mov
ficompl
shl
ds
add
pop
add
inc
aas
or
aam
adc
xchg
cmpsb
sbb
mov
subb
sahf
test
lcall
ss
aam
movl
shlb
fcmovne
push
int
pop
int3
add
xor
mov
int3
imul
loop
std
push
xchg
fld
mov
out
bound
adc
ret
in
daa
inc
jns
and
adc
sahf
std
mov
mov
mov
hlt
es
sub
sbbb
cs
jecxz
out
lcall
fdivr
pushf
adc
mov
xchg
push
lcall
int3
or
dec
cmp
lods
shll
ret
imul
cmp
stc
lock
and
dec
cmp
add
dec
and
and
test
push
and
stos
outsl
sti
int3
push
mov
inc
mov
adc
add
insb
in
lock
iret
js
int3
sahf
lods
out
xor
push
pop
js
fidivrs
push
lret
sahf
in
push
das
add
sub
sbb
xor
mov
adcl
jecxz
gs
mov
xchg
push
scas
jns
pushf
ja
cmpsl
push
cmp
mov
js
mov
fmul
out
jnp
ds
data16
fcos
iret
xor
xchg
or
mov
ja
vmovapd
add
mov
mov
add
cli
fwait
call
lods
cmp
and
xor
adc
xor
mov
rcll
ficoms
fsubl
cld
icebp
aam
shrb
xchg
stos
add
mov
ds
sub
lods
and
clc
mov
in
push
int3
jmp
fs
push
mov
jo
call
aad
mov
push
nop
movsb
cmp
dec
jge
pusha
push
sbb
jecxz
or
mov
mov
pop
out
es
mov
add
and
mov
cli
fsubl
insb
mov
call
inc
cmpsb
push
test
and
adc
jo
je
mulb
sbb
sbb
ret
aas
add
mov
or
jg
adc
cmp
outsl
pop
dec
movl
inc
mov
push
fisubrl
mov
pushf
pop
lcall
hlt
insb
aas
xchg
or
cld
cmc
jmp
andb
mov
push
mov
mov
cld
dec
xor
movsl
out
das
add
lret
iret
add
add
call
inc
cmp
out
pop
lods
mov
sarl
and
lcall
fdivrs
movsb
repnz
sbb
fdivp
es
scas
dec
adc
inc
add
lods
int
pop
pusha
mov
jo
lds
jecxz
cltd
es
sarb
xor
lods
and
jmp
rcl
lahf
and
fidivrs
stc
xchg
inc
in
cmc
orl
mov
stos
sub
test
sub
data16
aas
shll
dec
xchg
jg
bound
inc
cmp
jge
sub
xchg
stos
sbb
fs
out
lret
in
push
decl
fs
stc
cwtl
cmpsb
or
push
pop
mov
out
cmp
fsub
push
jle
dec
mov
sub
xor
cwtl
aas
jle
dec
sti
jbe
jp
lcall
sub
and
roll
lock
addr16
test
cmp
shll
cmp
xchg
in
popa
mov
dec
mov
adc
push
fwait
mov
in
mov
adc
sub
pop
jge
cmpsb
bound
pop
xchg
shlb
mov
mov
cmp
and
pop
rcrl
lock
dec
les
add
pop
lods
imul
jb
xchg
popl
sti
add
sbb
scas
subl
loopne
mov
fisubrs
xchg
jecxz
jo
aaa
ja
arpl
loope
mov
xorb
pop
pushl
adc
xchg
push
or
dec
in
jnp
fs
repnz
test
stos
inc
mov
jecxz
subb
or
not
les
sub
xor
sahf
add
xor
stc
xchg
inc
divb
cld
fiaddl
addb
cmp
and
sub
inc
mov
ret
jns
pop
jne
or
push
aam
aaa
mov
inc
filds
dec
lcall
flds
add
push
ret
mov
in
inc
sahf
data16
test
fmull
cmc
jle
sub
int3
adc
popf
mov
pop
dec
jmp
loope
mov
ss
das
fsubs
mulb
pop
test
ss
xor
sbb
add
adc
jle
cmp
jecxz
mov
dec
cmp
adc
push
and
outsb
mov
xor
insl
inc
out
into
js
xor
sub
pop
hlt
adc
mov
sti
pushf
bound
cli
filds
sub
insb
shr
lret
push
call
fmul
push
or
mov
push
jbe
fnstsw
xchg
addr16
lea
jmp
testl
and
xor
in
les
imul
into
mov
mov
cmp
cli
js
and
mov
xchg
pop
add
or
ja
push
jb
lods
adc
xlat
lds
xchg
lahf
popf
iret
clc
push
sbb
out
lods
add
lret
mov
in
mov
inc
mov
orl
fadds
sub
cli
xor
nop
cmp
pusha
add
pop
inc
fsub
sti
jg
mov
cwtl
sub
rcr
push
or
push
sahf
andb
enter
add
sub
lea
clc
mov
cmp
je
mov
add
push
xchg
cmp
mov
cmpsb
inc
inc
jnp
ja
testl
dec
adcl
jecxz
rorb
bound
xlat
cld
jp
idiv
outsl
data16
xor
and
jne
orl
into
ljmp
or
loopne
xchg
inc
jmp
fisubs
fmull
fsubrp
jp
popa
in
fwait
push
mov
jmp
sti
xchg
cmpsb
inc
cld
loope
test
lods
je
adc
push
jb
nop
je
cmp
test
movsb
cli
out
mov
dec
pop
mov
aad
push
sbb
add
or
ret
gs
nop
inc
cli
or
movsb
fs
cmp
mov
pop
repz
fistpll
cltd
stc
pop
rorb
pop
movsb
and
pusha
pop
add
arpl
popa
add
mov
push
xchg
cmpsl
mov
test
daa
sbb
mov
sbb
pusha
push
repz
add
adc
or
aad
movsb
cmp
jo
dec
jnp
js
or
leave
xor
push
pop
arpl
or
jae
add
std
jp
xchg
pop
mov
int
and
and
std
aad
out
xor
stos
mov
dec
lea
or
push
stos
shrb
int
mov
xorb
lret
dec
not
and
fdiv
in
mov
xchg
call
pop
fcoms
pop
rol
cmp
cld
push
jnp
pop
dec
popa
adc
or
xor
pop
test
shlb
and
lcall
int
loope
iret
jg
jno
xor
arpl
or
hlt
pop
data16
mov
mov
xlat
fimull
xchg
sub
inc
dec
scas
repnz
or
movsb
push
out
or
in
subb
xchg
xchg
shll
sarl
sub
out
test
sbb
mov
inc
adcb
sbb
xor
movsb
inc
xchg
pop
rcpps
pop
jp
push
inc
mov
push
mul
dec
push
mov
add
test
jae
push
mov
jo
pop
sub
xor
push
stos
or
sbb
pop
jbe
or
add
jbe
xchg
jo
popf
int
sub
loope
mov
sbb
or
insl
inc
fwait
inc
adc
sub
jmp
cwtl
pop
rolb
mov
inc
jp
push
lods
je
mov
test
fdivp
xlat
lahf
aaa
jo
xchg
cmp
mov
adc
and
jl
cmp
insb
mov
push
inc
pop
dec
jo
ds
dec
cmp
adc
cmp
addb
nop
jbe
mov
decl
xchg
jbe
push
xor
push
out
das
dec
jae
leave
adc
jge
ss
push
cmp
and
shl
inc
incl
xor
cmc
adc
sbb
test
pop
loopne
mov
push
stc
test
cmpsl
adc
mull
outsl
or
aas
jno
add
xchg
andl
xchg
and
pop
icebp
or
push
mov
lods
inc
lods
mov
mov
in
rcrl
popf
stc
data16
xchg
jp
pop
popf
jbe
js
shlb
inc
cmc
repnz
daa
out
mov
sbb
fldenv
add
in
xor
test
repz
fcmovnbe
stos
mov
outsb
mov
lahf
pop
pushf
jae
in
popf
mov
dec
pop
movsl
int
sbbb
lea
xchg
ds
inc
fsub
popa
pop
cs
jnp
es
aad
xchg
outsl
test
xor
dec
dec
hlt
dec
xor
jb
jg
mov
ret
repz
out
mov
and
add
adc
fwait
shlb
mov
push
in
loope
mov
call
cmpsl
sbb
push
in
or
fcomi
lods
push
push
scas
fnstenv
pop
stos
push
add
gs
adc
or
mov
xor
pop
mov
into
add
pop
xchg
cli
dec
int3
sub
insb
sub
mov
into
push
stc
dec
incl
gs
lock
pop
int
nop
in
loopne
push
ds
cltd
jp
push
add
call
leave
movsb
into
xchg
lods
int
cltd
xchg
cltd
push
pop
cs
repnz
xor
ja
hlt
es
add
inc
dec
repz
inc
std
or
pusha
popf
ds
aad
popa
inc
cmp
imul
addr16
iret
test
fmuls
jns
sub
jno
fdivr
ret
or
xor
hlt
and
sbb
xchg
les
rorb
mov
inc
ret
stc
sub
xor
adc
jno
bound
inc
cli
test
jnp
xchg
xor
xchg
lahf
lret
faddl
sub
in
pop
xchg
mov
in
push
mov
enter
ds
mov
cltd
rolb
cmp
sub
push
mov
imul
imul
clc
repnz
das
sbb
scas
fimull
popf
sub
call
sub
adcb
stos
hlt
ret
mov
es
dec
int3
scas
pop
dec
hlt
dec
pop
lods
inc
mov
movsb
push
rep
je
push
jns
mov
fcoml
aam
in
mov
jne
or
mov
mov
mov
xchg
mov
addr16
test
imul
sub
jno
clc
mov
and
xchg
ljmp
test
pop
addl
sub
pusha
jle
mov
cmpsl
insl
mulb
add
xrelease
xchg
mov
pushaw
jl
xor
stc
lock
xchg
pmullw
jnp
inc
je
mov
addr16
fnstsw
mov
xor
mov
xchg
push
out
and
mov
mov
out
mov
sbb
in
movsl
mov
rorl
jne
lret
jg
test
sbb
stos
push
lods
jbe
mov
jecxz
inc
pop
insb
adc
cmp
lcall
push
jl
push
sahf
cmp
lret
les
add
mov
dec
jle
mov
jp
into
arpl
iret
sbb
mov
gs
sbb
fs
xor
mov
pushf
push
jbe
add
jecxz
inc
mov
jle
dec
insl
movsl
inc
vmread
mov
jns
sub
es
aaa
lods
movsl
mov
icebp
outsb
jmp
icebp
sahf
imul
xor
repnz
cmp
xchg
xor
arpl
in
jecxz
sub
outsb
dec
mov
xor
inc
mov
sahf
mov
pushf
add
cmp
rcrb
adc
lods
rorb
fistps
or
push
push
mov
stos
pop
sub
mov
cmc
sbb
enter
push
mov
xchg
adc
mov
cs
push
push
jp
mov
sti
mov
push
push
cmpsb
icebp
mov
dec
mov
jg
add
and
push
out
sub
shlb
push
shr
aaa
sub
js
clc
xor
cmp
in
scas
adc
mov
gs
stos
int3
and
in
add
sub
or
fildl
ss
ret
or
es
vpsllw
in
adc
inc
adc
pop
fstl
ficompl
fcmovnb
cwtl
adc
pop
outsb
stos
dec
sub
ja
or
jbe
dec
push
push
data16
daa
xor
imul
inc
pusha
sub
sahf
imul
rcll
cwtl
sub
cmpb
and
dec
pop
xchg
jbe
push
ret
gs
outsb
out
add
xor
push
aaa
out
js
adc
mov
cmp
lods
mov
shll
xlat
pop
push
cmpl
stos
xor
lods
nop
lret
lcall
push
fisubs
mov
mov
out
mov
sahf
sub
sub
push
pop
and
jno
cmpsb
push
insb
mov
add
xor
gs
ret
popa
push
stos
pusha
add
popf
mov
lret
push
fwait
mov
dec
add
xor
and
or
mov
jecxz
mov
fmulp
imull
pop
imul
xorl
mov
dec
mov
outsb
inc
push
or
roll
jns
gs
test
daa
pop
cmpb
movsb
xor
adc
pop
mov
dec
nop
cltd
fprem1
fwait
cs
mov
cli
jae
mov
into
jb
fdivrp
mov
adc
jl
jle
and
push
cmp
imul
add
test
push
test
notl
int3
pushf
add
push
inc
lea
lcall
mov
inc
xchg
xchg
mov
repnz
add
js
sarl
add
movb
pop
xchg
fbstp
jns
adc
fucomip
xchg
clc
xbegin
mov
das
shrb
mov
jns
cmpsl
lcall
mov
push
ret
rclb
add
lcall
dec
mov
adc
fdiv
lahf
cmc
pop
pushf
test
clc
push
js
push
repz
mov
mov
out
push
inc
push
in
into
sbb
xor
popa
int
jae
add
rolb
push
shlb
mov
and
mull
enter
pop
mov
lcall
repz
push
das
sbb
ss
inc
pop
dec
jno
cmp
xor
and
dec
cmpb
push
sbb
mov
jle
mov
sub
ja
call
stos
iret
jnp
dec
push
inc
cmp
xchg
jl
sbb
incl
or
les
mov
sub
scas
hlt
push
or
cli
push
sbb
mov
mov
inc
or
cld
xor
ficompl
inc
dec
mov
jb
rorl
nop
ljmp
iret
fistl
mov
sub
pop
inc
cmpsb
push
push
cmpsl
add
mov
add
mov
lods
jo
and
jbe
test
iret
popf
repnz
cmp
sahf
in
loopne
mov
pop
jmp
adc
cmp
hlt
cs
jnp
addr16
daa
or
dec
jg
xor
test
xor
fildll
lods
fstps
pushf
movsl
leave
jne
lret
mov
std
inc
push
in
std
mov
sti
inc
adc
andb
ret
add
out
or
lret
sbb
jbe
out
lock
sbb
aam
mov
sub
fadd
sahf
mov
sbb
clc
and
pop
inc
or
mov
lea
test
jne
imul
in
scas
loop
fmul
jl
test
ss
mov
or
mov
mov
cmp
adcb
cmp
and
aam
xor
xchg
sub
je
jp
mov
int
lock
lods
sbb
or
and
mov
push
in
pop
repz
jmp
push
add
ja
pop
shlb
add
and
pop
sub
pushf
test
and
jmp
movsb
lret
jno
push
push
mov
push
add
mov
mov
mov
decl
inc
lock
or
mov
cmp
xor
repnz
dec
and
leave
imul
cmp
jg
int3
cmc
dec
xchg
cmp
repnz
js
cmp
mov
pusha
loope
xchg
inc
jmp
leave
fldl
xchg
lods
xor
mov
sub
into
lret
mov
pop
loop
andb
repz
js
cmp
jecxz
bound
sub
push
mov
sub
dec
mov
jns
jl
or
stos
jns
and
out
inc
dec
mov
aas
cs
pop
iret
stos
xchg
push
gs
scas
mov
adc
fcoms
mov
mov
and
sub
sub
js
mov
std
sti
daa
xchg
push
add
in
jg
gs
gs
call
xor
mov
arpl
outsb
and
and
add
fmuls
cld
add
out
repnz
mov
psubsw
imul
daa
shlb
adc
mov
std
outsb
out
sbb
sub
xchg
sar
jo
push
sub
arpl
mov
rcrb
popf
test
inc
leave
sti
and
xchg
mov
jl
and
je
dec
cmpsl
int
ss
push
cmp
inc
or
gs
insl
leave
fwait
push
insl
cmpsl
inc
bound
xchg
fs
roll
inc
mov
xlat
mov
in
sub
or
sub
adc
daa
add
sub
add
inc
in
shrl
cmp
mov
and
sahf
call
sbb
fimull
test
sqrtps
xlat
cmpsb
ljmp
popf
test
insl
popf
in
out
fnsave
inc
sbb
push
xchg
and
test
fcoms
mov
shrl
mov
popf
shlb
xchg
test
dec
addl
or
mov
push
stc
lret
push
cmp
cli
sub
and
movl
stc
dec
push
es
jae
sbb
loopne
or
cmpsl
mov
ss
and
int
jecxz
iret
inc
dec
cmc
jle
js
push
fwait
push
test
cs
jp
jg
aam
pop
jge
sbb
lret
or
jp
mov
push
mov
push
aam
enter
pop
test
pop
sub
aam
outsl
popa
fwait
jl
stos
xor
xchg
cmpsb
pop
xor
push
or
mov
pusha
cld
pop
jl
mov
pop
sbb
popf
xor
cmp
in
clc
lret
mov
testl
pop
inc
xor
xchg
push
push
lret
fs
inc
push
subb
xor
push
daa
sub
shll
aaa
es
js
mov
pop
aaa
xchg
dec
enter
inc
jmp
mov
dec
in
jb
fdivrl
dec
mov
push
das
insb
xchg
rclb
clc
jmp
add
pushf
mov
mov
add
xchg
popa
xchg
aad
add
nop
aam
inc
ja
xorl
mov
add
pop
xor
stos
insb
xchg
lcall
xor
jmp
ljmp
pop
xlat
testb
les
imul
push
stos
push
push
sub
iret
pop
ret
rcrb
enter
je
int3
shr
jmp
ficoms
jb
aas
and
xor
insl
iret
cs
iret
dec
sub
lahf
mov
mov
fdivl
mov
outsb
mov
mov
dec
stos
adcl
fidivrs
aas
sbb
mov
fsubs
lds
push
mov
mov
das
call
testl
lea
out
xor
push
mov
addr16
movsl
stc
mov
test
jle
mul
ficoml
mov
mov
mov
gs
movsb
dec
hlt
into
call
jns
push
mov
aad
mov
adc
pop
mov
jb
jp
mov
sub
lods
sbb
aam
stos
outsb
dec
pop
jp
pushf
inc
fisubs
pop
fcomps
gs
mov
mov
dec
repnz
push
rcr
or
lcall
inc
pop
sbb
xor
mov
stc
shlb
out
nop
rorb
mov
lret
aas
xor
insl
mov
testb
lds
xchg
mov
sbb
fbstp
mov
lods
and
scas
push
enter
stc
dec
cmpsl
dec
cmp
jg
std
mov
xor
xchg
xchg
dec
stc
inc
pop
and
mov
pusha
lods
push
cmp
inc
xlat
mov
test
je
sbb
or
and
xchg
bound
insl
ret
sub
mov
xchg
mov
xor
imul
adc
pop
xlat
ss
icebp
fcompl
cmc
sub
add
imul
adc
push
lret
stos
hlt
insb
dec
push
cmp
testb
scas
aam
imul
pop
push
push
aad
mov
pop
stos
sbb
sbbl
cmp
add
jmp
push
mov
mov
mov
clc
test
int3
jg
pusha
or
outsb
mov
popa
add
sbb
adc
dec
pop
and
and
stos
add
outsl
xchg
shll
cmp
ret
loop
adc
in
pop
push
arpl
and
sbb
cmp
loop
jmp
sbb
xchg
add
bound
inc
cmpsb
lret
stos
fidivs
xchg
xor
inc
add
cmp
fdiv
cmpsb
jno
push
mov
pop
inc
mov
scas
ljmp
xor
aaa
int3
fidivl
aaa
gs
jecxz
lret
and
cmp
shr
xchg
xchg
dec
adc
pushf
mov
mov
cmc
loope
add
add
or
dec
push
lock
jl
lahf
std
ret
leave
lds
cmpsb
das
add
xor
add
lret
jne
mov
lret
icebp
dec
xorl
sahf
inc
inc
pop
push
insb
pop
push
adc
repnz
dec
gs
cmc
sbb
or
dec
sbb
adc
ficompl
es
pop
out
jno
xor
es
inc
add
test
mov
pop
movsb
sbb
push
rcl
ret
adc
add
repz
cmp
sti
mov
in
ret
xlat
push
pop
cli
jmp
jb
aas
xchg
lods
mov
add
daa
inc
adc
add
dec
jecxz
push
lock
or
fcomp
ret
mov
inc
mov
aaa
cmp
daa
push
inc
inc
addl
pop
cmp
pop
add
or
inc
jle
sub
ss
pop
xor
fs
out
insb
fstpt
fwait
sub
repnz
stos
add
pop
out
push
shll
test
popf
jle
ja
hlt
jmp
dec
or
es
inc
movsb
test
popa
lea
xchg
aas
xchg
mov
dec
xor
test
imul
imul
mov
pop
sub
sbb
mov
inc
pop
pushf
fistpl
aas
pop
rep
xor
mov
and
fs
mov
es
pusha
into
ret
imul
adc
sub
jmp
ret
mov
mov
pusha
mov
inc
test
loope
inc
push
psubw
xchg
jae
xchg
mov
dec
scas
imul
pop
movsb
mov
fcomp
imul
add
or
mov
mov
and
dec
lock
rcll
out
jne
and
je
push
shlb
pop
jns
aad
add
aad
stos
lea
leave
int
mov
pop
jmp
mov
leave
lods
movsb
cwtl
mov
in
cmp
mov
and
lds
xchg
lock
in
cmp
fucomip
xor
test
sub
push
xchg
nop
mov
and
movsb
filds
fcmovnu
cmp
xlat
xchg
cmp
insl
and
sub
dec
cmp
test
mov
and
mov
pop
push
outsl
pushf
xor
movsb
cmpsb
sub
imul
lea
les
push
push
jp
loopne
aad
or
fs
push
sbb
cmp
in
shrb
jge
xchg
daa
sub
cmpsl
mov
pop
xor
xor
mov
fadd
push
dec
pop
pop
jne
adc
cltd
and
dec
js
mov
fld
out
cmp
movsl
aaa
xchg
push
les
imull
pop
jbe
jne
aad
jo
mov
add
mov
or
outsl
adc
or
push
mov
outsl
inc
inc
iret
iret
mov
outsb
add
icebp
std
cmp
adc
jmp
shrl
or
push
lds
pop
test
mov
or
lret
sti
in
popa
pushf
push
adc
xor
or
jne
inc
aam
adc
adc
mov
sbb
lahf
outsl
mov
cmp
fcoml
out
or
repnz
and
loopne
add
jo
repnz
jle
pushf
mov
inc
and
lret
jecxz
jns
mov
inc
leave
sub
lods
pop
outsb
and
mov
xchg
adc
mov
dec
pop
loope
cmp
or
xor
pop
mov
lret
roll
je
mov
rcll
leave
iret
mov
js
xchg
sti
loope
and
and
in
leave
pushf
jns
sbb
adc
mov
popa
insl
jg
inc
int
lcall
mov
xchg
pop
in
mov
pop
jle
pop
ror
lret
sbb
mov
add
cmp
repz
add
fs
lods
jo
dec
inc
icebp
push
out
push
lret
xchg
jno
les
xchg
pusha
outsl
mov
sbb
dec
xor
cmp
push
cmp
cmp
jle
xor
std
add
or
jecxz
loope
out
jae
and
mov
je
push
addr16
and
ss
movsb
cmc
mov
fimull
fs
xchg
ret
aam
pop
addb
shll
sbbl
pop
int
ret
pop
inc
add
pop
dec
clc
push
jmp
ficompl
xor
movsb
sub
and
outsb
and
sbb
jle
or
and
leave
fs
mov
les
push
inc
sbb
adc
or
mov
cmc
mov
fsubl
mov
cli
sti
lock
lods
sti
mov
aad
aad
or
push
popa
jnp
daa
or
xchg
psrad
xchg
stos
lds
sarl
or
cmp
and
add
aam
jle
and
pop
ret
or
xor
adc
jecxz
and
pop
inc
inc
pop
fucomp
dec
loop
test
lods
pop
jg
std
sub
jb
lret
pushf
ja
pop
in
pop
add
cmp
and
andb
test
jp
mov
dec
insb
rcll
push
xchg
jge
int3
add
add
xor
fmul
inc
inc
pop
test
jmp
iret
jmp
add
add
idivl
pop
inc
push
mov
jne
flds
pop
push
add
cwtl
xorl
push
lock
fiadds
inc
mov
scas
add
mov
push
inc
addl
das
sbb
ret
adc
cmp
and
rorl
hlt
cmp
mov
out
aad
fmul
fdivs
xchg
repnz
sbb
sarb
sbb
jae
iret
sbbb
inc
jp
and
loope
enter
adc
push
fcomp
ss
xchg
mov
imul
mov
shl
push
inc
rcrb
nop
popa
popa
lret
push
xchg
ljmp
sub
pop
pop
out
aad
mov
pushf
fdiv
out
mov
mov
jle
push
and
mov
std
jmp
lcall
shll
int3
mov
cmp
and
add
xor
sub
in
xchg
jge
xchg
add
pop
inc
add
push
lret
rclb
mov
repnz
scas
push
popl
mov
add
and
jmp
xor
repz
and
mov
lods
frstor
xchg
imul
cltd
adc
and
inc
stos
inc
mov
or
inc
mov
iret
cmpsb
jnp
push
jne
jmp
sbb
cmp
lret
push
jne
aaa
mov
xchg
fiadds
js
data16
or
push
inc
pop
dec
int
in
stos
xchg
adc
mov
jbe
pop
pop
pop
vmaxps
popa
mov
out
xchg
divb
pop
fldpi
decb
scas
xchg
push
faddp
jl
xchg
iret
sar
fsubrl
jne
fst
fdiv
insb
adc
xchg
xchg
xchg
add
adc
aaa
inc
inc
cmp
test
cli
push
pop
outsl
pop
out
mov
lret
pop
sbb
or
jge
dec
mov
adc
pushf
xchg
das
cmc
test
mov
inc
ljmp
cmp
jl
lods
add
mov
mov
mov
pop
jo
push
jmp
in
pop
daa
pop
sbb
pop
sbb
repz
sbb
ret
fmull
jnp
mov
enter
dec
add
ljmp
mov
idivl
inc
push
dec
lcall
pusha
mov
dec
add
lret
imul
test
stos
lods
add
adc
dec
pop
daa
adc
and
cmp
or
or
out
ror
icebp
xlat
cmp
les
add
jmp
mov
lea
repz
stos
push
enter
adc
std
scas
rcll
adc
sub
cmp
ss
nop
xor
daa
add
lea
mov
sub
xorl
sbb
inc
int3
imul
scas
fcomps
mov
jle
testl
in
ja
lret
les
rcrb
push
push
push
push
xor
add
out
pop
stos
dec
mov
je
jl
imul
addb
out
jno
xlat
sahf
or
jns
and
add
pushf
sub
dec
sub
mov
dec
daa
ljmp
adc
jl
jmp
ds
repnz
push
js
sbb
scas
sub
jb
outsl
inc
inc
mov
shll
pop
insl
mov
sub
ja
scas
pushf
ficoml
jle
push
pop
push
dec
mov
pop
jg
mov
std
cli
call
jbe
fucomip
jne
push
bound
insb
mov
outsl
mov
mov
mov
dec
jno
mov
sbb
out
cmpsb
inc
out
sbb
adc
mov
out
xchg
xlat
pop
popa
push
mov
jb
mov
loopne
mov
inc
xor
sbb
dec
clc
stos
in
dec
insl
sbb
das
fs
adc
jns
mov
dec
inc
dec
filds
push
ds
jge
ljmp
push
jmp
adcb
movsl
sbbb
mov
jp
adc
lds
test
push
adc
pop
fs
or
rolb
int3
cmc
mov
clc
ja
sbbb
sbb
inc
fdivrl
pop
inc
pop
mov
test
fstpt
fwait
mov
jecxz
pop
in
jmp
outsb
ret
int
jno
push
je
loope
pop
xchg
mov
mov
xor
mov
rolb
shlb
add
das
testb
in
push
cmp
adc
fistpl
dec
jecxz
or
push
sub
adc
stos
mov
mov
xor
lea
inc
and
xchg
pushf
insb
incl
jbe
loopne
ljmp
pop
repnz
popf
jge
fs
loopne
mov
sub
ret
dec
fmuls
outsl
push
jnp
lret
adc
mov
enter
lcall
fidivrs
mov
push
sahf
or
sub
negb
test
xlat
lea
add
addr16
pop
xlat
fisttpll
jecxz
adc
xchg
bound
in
push
loopne
jbe
scas
jle
mov
mov
imul
rorl
stos
push
sahf
mov
push
push
sub
cmp
mov
push
aas
mov
jne
lea
in
lods
lods
dec
test
shr
xor
jge
inc
stc
dec
jae
addb
movsl
mov
or
mov
add
ret
aad
xchg
push
pushf
icebp
push
movsb
add
nop
xchg
mov
push
xor
popf
push
stos
gs
push
bnd
cmp
icebp
inc
cmc
out
jge
rcrl
scas
loop
inc
sbb
int
rolb
push
movsl
popw
jno
popf
movsb
and
jmp
xchg
mov
cmp
decb
mov
mov
and
dec
ret
xor
fsubr
dec
jns
test
lret
or
xor
mov
aas
xor
pushf
bound
pop
and
adc
lret
xchg
cli
movsb
mov
ror
les
mov
cmp
fyl2xp1
mov
xor
mov
scas
mov
ret
fs
aas
add
or
adc
insl
jecxz
dec
and
in
pop
scas
pop
jno
aaa
mov
fidivs
out
mov
incb
iret
mov
jle
mov
pop
lret
inc
shlb
fldl
xlat
iret
sbb
mov
aad
lret
adc
cmpsb
xchg
cmp
xchg
addr16
fisubs
stos
ss
stos
aas
repnz
notb
and
aas
rclb
push
dec
push
inc
push
inc
rorl
int
jmp
xchg
inc
rcrb
pminub
dec
fstl
lret
sub
mov
in
aaa
xchg
insl
sbb
adcb
xchg
arpl
rolb
test
jb
inc
dec
mov
mov
dec
sbb
mov
jl
mov
pop
xor
sub
hlt
cmp
mov
jo
mov
xchg
mov
mov
sub
aad
cmpsl
jle
in
pop
or
jne,pn
rcll
out
imul
pop
push
ja
pop
lahf
scas
sahf
cmc
jecxz
out
ret
repnz
push
and
pop
insb
push
in
xchg
pop
sarb
pop
loope
mov
addr16
movsl
daa
and
adc
scas
out
xchg
jmp
mov
fcompl
push
sbb
dec
sub
add
xchg
outsl
mov
adc
repz
jbe
pusha
xchg
popf
pop
cmp
ss
movsb
sub
pop
cmp
icebp
fistpll
sub
or
sbb
sub
out
dec
sbb
mov
ret
cmp
cmp
mov
xorb
cmp
out
xchg
outsl
hlt
or
pusha
sbb
test
inc
dec
push
jae
mov
leave
shlb
adc
lock
je
xor
incl
lods
insb
jns
push
push
inc
outsb
jl
subb
push
gs
jp
aad
insb
jno
pop
xchg
and
cmp
sti
pop
test
sahf
lods
out
test
pusha
pushf
test
and
les
xor
cmpsb
bound
fmulp
add
rol
adc
imul
stos
sbb
in
fwait
fs
shll
dec
shll
addl
pop
test
outsb
lods
test
xchg
sti
mov
inc
xchg
cmp
dec
pop
insb
aad
pushf
and
cmpsl
loop
out
stos
out
adc
mov
pop
mov
mov
jne
fwait
mov
push
fcoml
sarl
pop
out
dec
mov
sti
outsl
adc
add
mov
push
pcmpeqd
dec
dec
jae
mov
or
rorb
and
andl
daa
test
and
cmp
negb
fnsave
jns
fbld
scas
fmull
bound
inc
cmpl
xchg
lret
je
push
ret
xchg
in
jp
fwait
jg
leave
mov
in
adcb
and
pop
push
clc
and
nop
pop
dec
cltd
out
adc
mov
hlt
fwait
mov
movsl
dec
xchg
cs
imul
mov
outsl
lods
sar
or
daa
sbb
bound
testl
in
xor
leave
fisubs
xor
xor
inc
ss
repnz
jo
popf
adc
lret
int
and
inc
pop
lods
shll
xor
scas
push
sub
jp
mov
jne
lods
pop
jle
lcall
sub
add
push
ret
push
jae
imul
push
test
outsl
cmp
pop
jle
fisubrl
sub
cli
mov
add
lock
dec
mov
int3
and
xchg
jns
adc
xchg
adcl
push
sti
xchg
bound
jle
ja
sahf
mov
dec
push
fwait
jecxz
sbb
and
popa
icebp
js
xlat
mov
test
test
dec
andl
jl
leave
jecxz
xchg
mov
jnp
inc
leave
pop
sti
sti
jne
inc
dec
sub
mov
dec
mov
gs
push
push
test
outsl
inc
pop
jae
or
test
jmp
in
sbb
cmpb
fwait
imul
jmp
hlt
sbbb
pop
mov
adc
inc
ret
sarb
cwtd
jp
sbb
loop
test
lock
arpl
mov
loop
insb
pop
mov
imul
xor
das
iret
icebp
fldl
xchg
stos
sti
push
iret
fsub
cmp
fistps
popf
or
xchg
pushf
out
xchg
push
in
sub
stos
push
pop
cltd
xchg
xchg
dec
lock
outsl
inc
mov
out
sahf
test
fadd
fwait
mov
jmp
clc
xchg
add
iret
push
jb
and
push
subl
jno
adc
mov
mov
xlat
ret
std
mov
adc
daa
jb
push
movsl
rcr
jb
arpl
cmp
sarl
ss
xchg
xchg
mov
sbb
push
jne
push
push
jmp
shlb
loope
inc
add
add
out
xchg
imulb
mov
jnp
in
rcrl
push
hlt
inc
out
adc
iret
sub
push
shlb
sbb
icebp
sarl
inc
push
in
subb
test
je
pop
lock
mov
fmulp
mov
xor
pop
loopne
xchg
inc
out
inc
adc
sbb
dec
decb
sub
inc
shr
or
das
xlat
orb
add
fsubl
cltd
roll
push
ja
lods
fiadds
adc
js
push
mov
popa
cmpsb
pop
movsl
xchg
sub
lahf
pop
lods
dec
cmpsl
mov
mov
mov
arpl
cmp
or
or
inc
repnz
out
mov
insl
ss
stc
add
into
cmpsl
dec
repnz
les
jbe
cmp
or
sub
repz
dec
je
and
jns
push
arpl
push
push
out
cltd
mov
jg
push
jne
cmpsb
pusha
adc
ljmp
pop
test
push
add
mov
hlt
mov
mov
mov
aad
dec
mov
mov
fsubs
dec
lret
xchg
inc
add
jb
push
adc
icebp
inc
dec
and
fidivrs
inc
stos
push
aam
andb
in
mov
popf
mov
push
lcall
sbb
mov
dec
rclb
sbb
insl
push
and
outsl
sub
and
xchg
adc
xor
or
aad
jle
jecxz
cmpsb
ljmp
mov
mov
adc
mov
add
ret
js
fwait
test
sarb
dec
fmull
inc
bound
jnp
dec
mov
imul
xchg
rolb
cltd
test
mov
mov
fwait
sub
lods
rcll
loop
add
sahf
cmp
xchg
outsl
jg
rcrl
pop
pop
inc
xchg
mov
adc
push
sub
subb
mov
imul
aad
push
pusha
sarb
dec
pop
fildl
xchg
jg
adc
fmull
shrb
aam
cwtl
jle
jne
dec
addl
popa
xchg
jmp
test
popf
fistps
jp
mov
sub
xor
mov
mov
fwait
cmc
sbb
repnz
cmp
mov
out
mov
fs
lock
lods
adc
cld
cmp
in
fstl
pop
xchg
adc
lcall
mov
fdivs
xor
fidivl
mov
cltd
mov
lret
or
cmp
daa
leave
stc
popf
sub
sub
lcall
dec
add
push
imul
jg
addr16
sbb
push
mov
jp
push
repnz
sub
mov
push
lret
pop
xor
shl
hlt
cmp
sbb
shlb
sub
in
cmpsb
ret
daa
lods
jg
inc
dec
pop
lret
clc
dec
movsl
into
out
inc
repz
fsubl
and
and
sub
stc
xor
mov
pop
push
cmp
mov
mov
sti
mov
cmp
cmp
loopne
and
pop
sbb
movsb
mov
aaa
dec
jle
enter
pop
mov
stc
repz
nop
mov
push
fucomip
mov
in
into
adcl
ss
aaa
in
int
fldl
jle
mov
hlt
jl
add
bound
ficompl
mov
das
clc
lds
inc
scas
orb
loopne
sbb
loope
loopne
add
outsl
add
and
rclb
dec
je
mov
orl
or
jae
repz
dec
jnp
mov
mov
adc
sbb
out
xor
std
sub
aam
fnsave
clc
and
dec
sub
cmpsb
fdivrs
mov
jmp
stos
xchg
adc
jl
fmuls
dec
aad
add
push
out
icebp
test
lods
mov
mov
push
inc
sarb
stos
clc
fildl
ljmp
ficoms
cld
sub
dec
sub
cmp
add
pop
sahf
jg
xchg
adcl
xor
clc
lret
mov
scas
mov
xor
xchg
mov
push
pop
xchg
mov
fwait
and
into
mov
fnstcw
mov
mov
test
push
xorl
mov
and
lcall
lret
pop
lret
mov
xchg
or
mov
mov
fs
neg
xchg
inc
push
add
jb
cs
shlb
popf
mov
lret
ljmp
icebp
xchg
out
dec
in
add
xchg
dec
repnz
jnp
flds
js
ror
inc
xor
or
sbb
pop
dec
lds
std
jnp
lret
les
jle
adc
test
fmull
sarb
push
fstps
cmp
jle
mov
and
mov
test
mov
mov
dec
call
cmpsl
jae
pop
mov
xlat
cmc
lds
push
icebp
out
mov
push
lock
jle
test
loop
dec
fs
sti
shl
pop
bound
dec
ret
lcall
xchg
test
addr16
sbb
jle
std
idivb
inc
push
dec
fiaddl
repnz
and
inc
scas
push
xchg
cmp
pop
ret
out
xlat
jb
inc
push
sbb
or
mov
pop
rorl
xchg
cli
xchg
jl
push
add
xor
inc
xor
mov
jbe
hlt
cmp
nop
lea
int
mov
push
lcall
mov
sahf
andb
push
ljmp
jo
pop
pop
fcmovbe
adc
aas
cmpsl
ljmp
jle
sbb
and
stc
mov
pop
arpl
popf
lret
adc
jge
mov
inc
jg
xchg
fwait
and
clc
pop
loop
mov
mov
int3
and
out
xchg
cmc
inc
pushf
or
pop
lea
pop
loopne
and
cmp
xchg
sub
and
aaa
adc
mov
adc
xor
pushf
ret
sub
push
test
icebp
daa
jl
inc
xor
lret
and
pop
jg
mov
inc
movsb
cmp
sub
cltd
ret
and
jb
movsb
shl
pop
dec
and
andb
in
sub
shl
sub
hlt
loope
jnp
int3
adc
or
pop
jp
or
add
sbb
push
cmpsl
or
or
sub
hlt
xor
stc
shll
push
or
xlat
inc
sbb
lret
cmp
sahf
mov
push
mov
fsubl
or
lods
into
jnp
or
sbb
add
mov
pop
clc
add
push
addb
inc
pop
test
fdivs
sbb
dec
inc
sbb
xchg
addr16
enter
dec
cmp
adc
movsb
or
mov
jmp
lods
xchg
xor
and
push
rolb
imul
mov
add
cld
mov
fs
cwtl
jno
jno
repnz
mov
dec
inc
cli
xchg
adc
cmp
push
cmp
fildl
dec
inc
push
test
push
inc
add
jle
fildl
mov
inc
pushf
icebp
push
push
rorl
fdiv
dec
cmp
bound
jno
movsl
adc
add
jl
stos
pop
js
repz
insb
enter
test
mov
pop
mov
inc
xlat
mov
cwtl
push
jle
call
push
cli
pushf
xchg
or
xchg
and
dec
iret
jae
cld
sbb
and
bound
nop
out
dec
aad
cmp
mov
xor
push
cltd
roll
pop
mov
and
mov
insl
stos
mov
fsubr
jp
fisubrs
adc
dec
loopne
sar
je
dec
pop
mov
fucomp
out
test
lods
xor
dec
jb
adc
sbb
mov
cmp
inc
mov
mov
mov
or
jle
adc
xor
movl
in
push
push
scas
test
popf
inc
dec
loopne,pt
push
xor
add
adc
cmp
into
aad
pop
scas
pop
mov
enter
add
or
mov
js
shll
pusha
xchg
dec
mov
mov
mov
ds
lcall
dec
cmpl
add
cli
lea
pop
lret
pushf
push
xchg
int
stc
mov
shlb
xor
scas
sbb
test
fs
adc
loop
xchg
and
mov
xchg
adc
push
cli
pop
push
js
mov
pop
insb
into
adc
sbb
xchg
jnp
inc
xchg
push
pop
fstl
in
xor
inc
jnp
popa
das
sti
fimull
out
jge
or
adc
xchg
loop
dec
daa
push
cmp
outsl
cmp
jns
addr16
out
sbb
fdivl
mov
in
loopne
fisttps
movsb
lcall
sub
lcall
adc
mov
nop
mov
iret
ja
lcall
outsb
mov
xor
push
pop
pusha
mov
cmpsl
fdivl
pop
mov
loopne
inc
cmp
adc
mov
xchg
outsb
divl
rolb
jp
adcl
sub
xchg
scas
lods
xor
mov
daa
mov
das
js
sbb
hlt
fstps
stos
cmc
push
mov
lods
adc
xchg
pusha
faddl
and
in
std
push
and
xchg
mov
xor
pop
adc
subl
repnz
insl
les
pop
jmp
jae
push
call
mov
cs
xchg
je
scas
addr16
push
push
into
fmull
aam
mov
icebp
arpl
inc
mov
jb
push
adc
mov
into
xchg
or
dec
sbb
xchg
mov
jmp
cld
mov
push
cmp
sti
pop
mov
push
repz
sub
xchg
cmp
imul
pop
xlat
sti
outsb
pop
fdivl
rcl
jle
mov
jbe
mov
add
test
pop
add
test
sub
mov
lds
pop
xadd
mov
rcrl
aaa
dec
fisubrl
mov
or
decb
jl
push
xchg
mov
dec
dec
push
mov
adc
dec
daa
popf
cmp
rcrb
xlat
xorb
shll
or
push
fidivl
lcall
xor
xor
xor
or
adc
lret
cmp
das
data16
cmp
xor
adc
xchg
cmp
push
ss
fiaddl
sub
sbb
cmp
pop
sbb
sub
lods
stos
imul
pop
xchg
in
xchg
cmp
jl
mov
xchg
ja
pushf
jne
mov
shrl
dec
mov
fwait
xor
inc
cwtl
mov
dec
xchg
push
lods
es
scas
cmp
dec
inc
andl
movsl
iret
lods
adc
mov
out
cmp
or
push
cs
add
adc
out
int
lods
adc
mov
push
sub
repz
push
pop
divb
sti
jle
mov
test
jbe
insl
aas
enter
mov
cmp
sbb
stos
dec
or
test
iret
js
jmp
aas
mov
loopne
add
pop
push
mov
sbbl
imul
push
adc
xor
cmc
fnsave
pop
ret
adc
mov
test
std
sub
jge
imul
cld
testb
push
xchg
inc
add
aas
dec
fs
mov
lea
inc
cmpsl
dec
pop
js
push
xor
fsubl
iret
call
fwait
dec
aaa
and
fs
scas
add
rol
jb
pop
dec
xorb
adc
sbb
gs
adc
mul
xchg
fimull
jno
inc
sub
cmp
pop
iret
mov
cmp
insl
inc
insl
cmc
dec
fcomps
jmp
pop
jmp
imul
xchg
lret
add
pushf
xor
shl
cmpsb
xchg
hlt
gs
inc
push
sahf
insl
insb
je
mov
cmp
xchg
mov
cmp
mov
lds
pop
test
jo
stc
dec
push
pop
add
ret
aad
inc
add
dec
cmpsl
sub
ret
fsubs
inc
sbb
rorb
pop
test
jo
ret
pop
push
js
jbe
in
pop
std
sbb
cltd
inc
push
pop
xchg
dec
popf
test
push
and
inc
adc
std
orb
pop
dec
addr16
mov
pushf
nop
and
pop
dec
add
pop
pop
fwait
scas
or
add
jl
cmp
imul
xor
ret
jb
in
addb
popf
jecxz
lea
mov
or
add
pop
clc
lds
inc
xchg
in
or
xor
xchg
ds
push
push
dec
push
jnp
lret
jns,pt
orb
dec
iret
jb
xchg
mov
inc
sahf
add
adc
push
shr
xchg
xor
out
shll
add
in
je
rolb
sub
mov
cmp
push
sub
mov
sarb
inc
sub
push
data16
shlb
hlt
mov
or
add
mov
xchg
xor
adc
dec
push
sbb
jbe
mov
and
adc
or
and
shrb
imul
pop
cmp
in
in
mov
insl
add
sub
mov
imul
dec
aas
jle
cmp
xchg
mov
add
movl
out
jbe
adc
mov
inc
fistpl
ret
int3
nop
push
jp
div
loop
mov
lds
jbe
mov
jns
aaa
jo
cwtl
jge
cmp
mov
insl
enter
mov
outsb
stos
or
cmp
mov
repnz
xor
ss
cmp
jle
mov
cmpl
pop
jns
jns
ret
mov
add
jmp
maskmovq
testl
repnz
add
movsb
mov
pop
cmpsl
mov
add
jb
pop
adc
sub
mov
icebp
fiaddl
or
mov
popa
pop
push
test
sbb
ss
push
scas
or
sub
jmp
lret
test
mov
jo
pop
mov
out
mov
or
ret
dec
pop
orb
inc
sbb
lds
pop
sbb
lods
mulb
lcall
sub
add
or
bnd
addr16
xor
popf
lahf
leave
sub
jge
into
outsb
mov
cli
xchg
mov
imul
xor
add
cmc
arpl
xchg
dec
sahf
orb
test
aam
int3
ficoms
pop
clc
enter
push
insl
pop
fidivs
int
addr16
sub
rclb
stc
insl
and
mov
cmc
add
andl
out
pushf
test
imulb
lea
inc
subl
and
mov
loope
push
and
mov
and
xchg
ret
cmpsl
daa
popa
lds
xchg
jmp
mov
loop
lcall
sub
xchg
push
dec
andl
xchg
les
lcall
xor
cltd
inc
in
mov
into
and
xchg
dec
pop
mov
sub
popa
sub
in
in
sbb
popa
xchg
stos
add
push
hlt
call
dec
cltd
mul
inc
pop
in
dec
lret
and
xchg
mov
and
fisubrl
fdivl
lret
fldl
push
loopne
sub
mov
nop
outsl
sbb
push
push
test
hlt
cmp
aam
into
and
mov
mov
inc
lds
adc
cmp
pop
xchg
dec
mov
dec
ss
insb
rolb
movsb
lea
ror
das
stos
mov
jg
dec
cmpsb
pusha
arpl
lds
leave
mov
xor
mov
inc
pop
filds
ja
bound
sub
mov
movsl
fdiv
xchg
ret
loope
mov
jbe
add
xchg
ljmp
das
ud0
cld
add
xor
push
outsl
pop
mov
nop
mov
fucomp
test
movsb
inc
sbb
push
cmp
arpl
hlt
mov
out
lahf
and
mov
jecxz
fs
mov
roll
mov
jne
xor
pop
xchg
xor
dec
sbb
pusha
je
fs
nop
shl
pop
mov
mov
sub
adcb
stc
loope
add
js
mov
scas
push
mov
in
clc
daa
mov
enter
or
sub
mov
jo
je
xchg
loop
sbb
mov
dec
ret
and
loopne
bound
sub
dec
push
imul
js,pn
frstor
pop
stos
shr
xor
jge
stos
sub
out
das
cmp
add
out
int
shlb
push
je
xchg
fidivl
push
sbbb
out
dec
cmp
nop
cmpsb
mov
push
jne
or
add
jo
add
sbbb
ret
fld
js
cmp
cmp
sbb
sahf
dec
xorl
inc
fcompl
iret
cmp
or
mov
int
add
inc
sub
pop
outsl
sub
call
lea
jns
or
loopne
xchg
push
mov
lods
push
test
call
fmull
enter
add
shlb
add
mov
mov
xor
mov
jle
jl
or
ss
jb
dec
xchg
into
mov
dec
pop
orl
xor
hlt
daa
aas
and
push
pop
imull
test
rcrl
lock
ljmp
lea
fbstp
inc
int3
cmp
adc
js
popf
out
dec
test
mov
popf
jp
jbe
xchg
inc
pop
imul
fimull
fucompp
or
pop
inc
xchg
dec
arpl
out
lock
rcr
pop
mov
lret
sbb
push
repz
js
pop
flds
inc
fs
adc
cmp
pop
lods
mov
scas
ja
in
sub
imul
pop
imul
out
cs
pop
notb
sbb
bound
bound
fcompl
test
add
mov
push
fidivs
push
jmp
lods
jns
clc
add
xchg
lret
inc
mov
scas
or
fstl
dec
sti
sub
sbb
or
rcl
mov
add
pushf
scas
cmpsl
push
test
test
mov
addr16
sub
xchg
mov
aaa
repnz
xor
adc
pop
or
bound
addr16
insl
inc
fldt
hlt
mov
inc
sbb
mov
xor
inc
lods
mov
xor
or
xchg
mov
mov
sbb
repnz
add
add
dec
mov
fldcw
loopne
xchg
mov
push
cmp
push
sbb
test
sahf
mov
mov
cmpsb
xchg
scas
pop
loop
adc
rcr
mov
cmpsl
cltd
push
repz
sti
lds
fsubrs
jo
or
orb
push
outsl
xlat
insb
pop
or
stos
repz
jge
aaa
cmp
movsl
ljmp
aad
in
jbe
push
outsl
dec
push
cltd
sub
ljmp
lret
ss
push
dec
das
loopne
push
add
mov
jmp
sub
adc
push
out
out
inc
test
shll
pusha
push
cmp
and
mov
test
cli
insb
test
push
inc
pushw
out
out
mov
arpl
jno
push
pusha
dec
cmp
das
inc
inc
idiv
jb
sbb
sub
test
xchg
sub
rclb
mov
rorl
int
and
pop
cs
cltd
int3
sub
mov
add
js
adc
int
lea
gs
and
pop
fwait
pop
std
inc
rcrl
int3
inc
push
mov
ja
cld
xchg
pop
adcl
pop
out
adc
cmp
mov
pop
or
sti
andb
mov
push
out
pop
jle
popa
scas
loope
or
mov
mov
pop
shlb
fstl
movsl
inc
ret
gs
ret
xchg
jg
cmc
jl
shlb
inc
or
or
cmp
pop
xor
mov
test
rcll
fmuls
out
icebp
bound
repnz
push
xor
icebp
arpl
cmp
push
adc
lret
sahf
cmp
pop
cmp
adc
cld
jecxz
aad
ja
out
pop
pop
int3
inc
fmuls
mov
and
inc
and
insl
dec
stos
xchg
das
pusha
cmp
int3
hlt
jmp
popa
lock
cmp
push
or
rorl
jle
jns
or
nop
roll
fisttps
xor
enter
dec
add
cwtl
es
popf
lcall
xor
pop
fnstcw
add
pop
ss
push
gs
mov
or
push
movsl
insl
adc
fldenv
arpl
or
sti
adcb
jno
enter
inc
adc
xor
lcall
inc
adc
adc
test
lods
xor
sub
mov
in
and
sbb
lds
insl
lea
inc
jbe
movsl
aaa
jae
fsub
fwait
pop
fs
xor
inc
addr16
mov
cmpsb
xor
sbb
popa
dec
cmp
insb
ret
stos
les
ret
pop
lahf
mov
shrl
fneni(8087
cmpsb
mov
pop
xlat
jecxz
pop
or
divb
cmp
pushf
int3
or
add
insb
push
es
pushf
sahf
pop
and
sub
sbb
repz
or
test
xchg
loopne
pop
movsb
addl
xchg
xorb
addr16
pop
into
idivl
sub
stos
out
fucom
pop
out
jmp
jp
xchg
cltd
push
jne
shrb
or
mov
lret
mov
jns
xchg
cmovp
shll
aad
cli
repnz
pop
test
xor
pushf
adc
mov
stos
fldcw
xor
rorb
jg
test
xchg
aam
cli
push
lods
adc
in
mov
mov
pop
rcr
loop
inc
add
xchg
jno
aaa
push
mov
clc
imul
mov
scas
in
pop
test
mov
lcall
call
xchg
mov
mov
and
fwait
dec
jge
xchg
dec
scas
xchg
ss
jmp
or
sbb
cs
test
xchg
adc
nop
jge
add
mov
mov
ljmp
xchg
mov
sarb
in
rorb
fiaddl
pinsrw
jecxz
xchg
pop
mov
mov
popa
push
ret
adc
jns
aad
cmp
or
shll
push
ficoml
call
hlt
cs
adc
push
imul
aam
xor
or
add
inc
adc
sub
mov
cmp
xor
and
lret
je
loopne
adc
adc
dec
divl
jne
inc
cmpsl
add
jge
out
movsb
insb
fwait
dec
sub
cmp
sbb
sbb
idiv
xchg
and
mov
repz
mov
fldcw
xor
push
mov
test
stos
push
push
cmp
lods
in
inc
cmp
call
call
mov
pop
sub
pop
lret
mov
popf
call
mov
or
int3
mov
jp
lahf
pop
xlat
cmpl
or
cmp
es
push
xor
cli
mov
std
in
ficompl
jo
mov
mov
cltd
fs
mov
stos
shrl
and
andl
std
arpl
filds
cmp
inc
sbb
popa
shll
or
sbb
outsb
lret
cltd
pop
ljmp
and
push
dec
sub
sti
sti
lahf
jle
sti
mov
mov
push
jae
add
mov
mov
pusha
cmp
jb
shrb
push
fistpll
testl
xor
and
sbb
sbb
pop
xchg
xchg
xor
andb
out
dec
push
mov
add
push
dec
pop
scas
mov
data16
pop
pop
push
push
jno
adc
imul
pushw
insl
jle
push
mov
add
add
jecxz
jb
test
mov
testb
sbb
out
mov
jl
push
mov
or
push
bound
pop
jb
xor
mov
or
hlt
mov
addr16
rorb
mulb
testl
cltd
ret
mov
pushf
enter
mov
cmpsl
push
and
enter
sbbl
std
mov
jle
adcb
les
push
loope
and
sub
jno
adc
mov
out
fistpl
xlat
pop
outsl
enter
gs
sbb
lods
test
cmp
and
and
jno
ret
push
and
sub
aas
mov
call
mov
icebp
or
jecxz
mov
vphadddq
movsl
cmp
pop
dec
ret
add
jns
or
leave
inc
movsb
insl
sub
xchg
mov
fnstenv
pop
imul
into
add
popa
js
dec
daa
inc
aad
push
fs
iret
orb
popf
mov
scas
pop
push
jp
mov
lahf
insb
cmp
pop
cld
rol
mov
sarl
sbb
imul
adc
xor
fwait
in
xor
ret
jge
mov
aaa
js
test
cmp
cmpsb
xor
mov
jle
adc
stc
cltd
daa
and
ljmp
inc
cmpsl
cld
dec
sub
and
mov
mov
clc
mov
and
xor
cld
lret
fmul
add
dec
dec
add
cwtl
xchg
pop
sbb
add
sbb
das
sahf
loope
shlb
outsb
sub
fildll
adc
xchg
mov
jmp
test
rcll
test
cmpsb
insb
mov
aaa
in
ss
mov
xchg
push
jne
popa
pop
fnstenv
jmp
xor
pop
pop
dec
inc
es
hlt
add
mov
add
dec
inc
push
aas
mov
jae
xchg
push
es
movsb
xchg
ret
arpl
push
push
add
sbb
push
fsubrl
popa
jbe
je
movsl
pusha
push
pop
mov
mov
in
sbb
push
aam
gs
push
adc
pop
jge
ss
fidivl
scas
mov
lods
int3
inc
xor
or
sub
and
jae
jl
in
insl
cli
inc
mov
fcoms
data16
push
dec
pop
fbld
loopne
shl
inc
fnsave
xchg
xchg
fmull
inc
sbb
or
inc
cmp
mov
rorl
xchg
or
hlt
movsb
rol
add
jg
cmp
stos
imul
add
sub
inc
sub
test
scas
and
enter
arpl
test
cmp
sti
xchg
and
sub
mov
xchg
stc
jnp
inc
aaa
pop
pop
out
mov
int
xor
sbb
add
jmp
or
xor
mov
mov
sub
sbb
mov
inc
popf
lret
sub
scas
jbe
jbe
cwtl
jge
add
xchg
frndint
mov
aam
into
lret
mov
sbb
ret
mov
jae
stos
jb
add
nop
mov
cs
sbb
int3
mov
pop
test
mov
movsb
repz
aad
inc
xor
pop
nop
xchg
test
push
or
ret
out
dec
movsb
popa
repz
xor
daa
and
and
in
aas
cmove
pop
jnp
pop
push
sahf
inc
sbb
stos
mov
pusha
mov
aas
icebp
out
push
mov
add
mov
jp
pushf
in
out
mov
jae
fimull
add
add
clc
lret
jbe
jbe
adc
test
jae
test
push
dec
jecxz
lods
pop
stos
pop
fdivrs
ljmp
pop
jo
pop
inc
dec
cs
ja
pop
icebp
out
pusha
aad
icebp
outsb
pusha
mov
dec
mov
pop
inc
in
fidivl
out
mov
cwtl
pusha
dec
lret
or
xor
mov
lods
daa
jl
nop
sbb
and
pusha
dec
movsl
gs
sbb
sbb
int3
fwait
mov
pop
jo
mov
jae
jae
in
xor
rcrb
ds
add
mov
pop
rorb
or
arpl
test
jb
andl
xor
add
sub
int
daa
adc
cmp
jge
scas
pop
mov
push
shl
inc
mov
jne
in
pop
and
stc
lret
cmp
push
adc
icebp
es
cmc
sbb
outsl
cltd
lret
push
or
xor
scas
adc
and
xchg
iret
add
add
repnz
sub
repnz
cmp
mov
scas
call
mov
aad
lock
imul
inc
pop
mov
cmc
mov
and
int
sti
dec
xor
jge
xchg
cli
jns
sbb
rcl
je
xchg
add
in
insb
push
push
mov
jl
aaa
xchg
in
mov
mov
cltd
sbb
loope
lcall
outsl
mov
mov
out
sub
push
mov
or
mov
inc
in
mov
rol
nop
into
jb
sub
add
inc
mov
sti
sub
pop
mov
sbb
and
outsl
pop
pusha
scas
sbb
mov
movsb
aaa
hlt
popf
shll
out
fcomps
stc
cwtl
popf
js
dec
dec
inc
adc
aaa
xchg
mov
dec
out
sbb
pop
aad
dec
out
fcoms
inc
arpl
or
pop
idivb
xchg
inc
lds
adc
icebp
push
movsl
les
adc
adc
lods
pop
ds
test
xchg
ror
adc
push
sarl
sub
ja
pop
fldenv
pop
or
popf
test
jne
jbe
inc
mov
sub
push
shl
sub
in
lret
mov
mov
and
std
jne
sti
data16
cld
ficoms
or
ds
pop
enter
ss
adc
push
scas
xchg
xchg
pop
jmp
inc
out
mov
mov
push
out
test
inc
or
xchg
lock
jns
and
sbb
push
loop
mov
and
js
movsb
push
popf
mov
mov
aad
repz
mov
adc
in
sbb
cmp
and
mov
adc
xlat
xchg
scas
or
sti
out
int3
filds
cmpsb
jge
js
xlat
addl
nop
inc
jle
mov
mov
ret
sarb
scas
jg
in
jo
idivl
mov
xor
outsl
outsb
popa
scas
mov
out
pop
pop
lcall
xor
mov
inc
jmp
imull
xlat
aam
loop
ja
addb
insb
mov
movsl
loopne
std
sahf
mov
ss
xchg
movb
adc
or
mov
rol
dec
xlat
sbb
je
cmp
mov
mov
insb
mov
mov
dec
outsl
repz
cmp
pop
pop
mov
dec
enter
xchg
mov
in
inc
mov
test
roll
not
cltd
mov
mov
sbb
mov
push
push
pop
ret
and
incl
lret
js
rclb
insb
xor
push
pop
cmp
shrl
and
lret
notb
xchg
adc
arpl
and
sub
jb
mov
mov
test
push
push
repnz
les
aam
stc
andl
mov
call
test
neg
and
pop
pop
fstpt
orl
pop
jl
dec
gs
mov
and
pop
jns
pop
dec
push
outsl
dec
mov
repnz
mov
movsb
dec
pop
rcrl
popf
int
insb
pop
mov
and
fwait
push
ja
sbb
jecxz
ja
jecxz
data16
push
jns
cmp
lods
pop
or
sbb
pop
test
nop
sbb
jg
shlb
addl
dec
pop
mov
xchg
out
sub
clc
jg
push
mov
lea
addr16
xchg
popl
sbb
int3
or
daa
mov
mov
mov
repz
incb
rolb
shrb
cltd
inc
or
pop
loop
popf
pop
loop
mov
subb
scas
inc
pop
pop
pusha
mov
in
dec
jne
xor
sbb
es
in
sub
std
jmp
mov
jecxz
cli
xlat
mov
ljmp
mov
push
and
mov
jmp
jle
push
mov
in
aas
sbb
in
pop
mov
xor
ja
push
mov
push
cmp
jp
outsl
jbe
sarl
dec
repnz
mov
repnz
or
es
movntq
inc
dec
decl
mov
jmp
push
mov
cltd
add
stos
icebp
jne
add
pop
or
shll
or
aam
inc
loope
imul
pop
cli
test
mov
pop
daa
addb
js
nopl
out
stos
mov
and
add
or
push
daa
repz
loope
nop
loope
cli
bound
lods
dec
adc
push
push
lcall
mov
xchg
pop
jb
ss
xchg
movsb
test
ret
and
lock
xchg
lcall
arpl
jae
pushf
jnp
sbb
push
pop
and
add
xchg
imul
rcl
mov
add
in
cmp
add
in
das
sub
and
hlt
test
icebp
mov
mov
dec
jecxz
mov
sti
stos
sub
cli
mov
popa
ret
xchg
push
cld
stos
test
repnz
je
pop
inc
das
sbb
stos
cmpsl
test
bound
mov
movsl
imul
testl
push
lcall
fisubrl
test
pop
addr16
js
adc
inc
in
out
and
cmpsl
add
and
ror
movsl
negb
mov
push
and
xchg
pop
sbb
cltd
cmp
and
mov
test
xchg
cli
loopne
or
in
sub
mov
xchg
idivb
mov
aad
icebp
and
rolb
add
xchg
rol
js
sbb
fdivp
bound
mov
pop
rol
xor
sbb
in
repz
in
xlat
sub
or
mov
shrl
sti
push
push
fcoms
les
or
push
imul
jle
aas
lods
adcl
adc
ljmp
jns
test
lds
push
adc
movsb
int
push
idiv
jecxz
dec
es
shl
pop
pop
sbb
xor
mov
std
mov
pop
mov
ror
mov
push
inc
cmp
fsubr
dec
xlat
test
hlt
pop
jmp
push
xchg
es
cmp
mov
out
repnz
xor
aam
lcall
pop
in
jg
les
push
movsl
inc
sbb
sahf
add
jne
dec
xor
popa
lock
fbstp
movsl
add
bound
xchg
sbb
sbb
xchg
movsl
add
jecxz
xor
stos
pop
inc
divl
lea
xchg
cltd
out
lods
add
fsts
cld
jp
icebp
adc
jns
and
xchg
shr
dec
mov
adc
fistl
push
mov
sbbb
adc
call
mov
les
jp
sbb
lea
xchg
jnp
add
mov
ds
imul
push
xchg
xchg
cltd
stc
out
ds
cli
add
mov
jne
mov
dec
fcompl
repnz
inc
idivb
push
mov
es
repz
repnz
mov
popa
xor
mov
lea
out
inc
sub
movsb
push
sub
mov
inc
add
ljmp
leave
dec
or
mov
lds
loope
lcall
mov
xor
notl
pop
jo
pop
fadds
push
cs
mov
stos
adc
notl
pop
dec
das
dec
dec
jno
lcall
push
test
and
movsl
adc
scas
mov
repnz
fucomp
fnsave
mov
pop
cmpsb
lahf
add
xchg
mov
lods
sub
mov
mov
mull
addr16
jl
jl
sbb
xchg
xchg
jo
mov
mov
lock
mov
popf
or
push
or
sub
push
mov
fidivs
mov
cmp
lret
fwait
add
xchg
nop
mov
popa
sbb
xchg
nop
fadd
icebp
and
or
mov
jno
lret
push
cmc
push
cmpsb
incl
jbe
ficompl
std
or
insl
aas
std
ds
ss
loopne
push
jmp
aaa
imul
gs
lds
or
adc
arpl
xor
jo
mov
loop
dec
decb
in
imul
jns
fdivs
imul
push
add
je
and
push
ljmp
mov
xchg
mov
push
pop
cmp
pop
or
push
std
mov
clc
push
daa
rolb
mov
lret
pushf
scas
pop
sbb
jae
lahf
pop
mov
mov
hlt
xchg
fs
fcmovb
dec
cmc
or
sub
les
and
decl
cwtl
fists
jg
push
push
mov
inc
fstl
sbbb
aaa
bswap
test
xor
push
icebp
and
jg
add
shr
in
dec
insl
xchg
mov
mov
mov
ja
test
sbb
sub
push
mov
xchg
sub
xchg
jge
or
push
xor
lcallw
das
sbb
mov
jmp
push
les
adc
fistps
push
ficomps
sbb
pop
inc
inc
mov
leave
lock
cld
or
in
not
xchg
aas
pop
and
xchg
sub
dec
sbbl
leave
pop
pop
add
daa
jle
adc
mov
xchg
loopne
add
bound
es
outsl
jnp
movsb
pop
mov
push
pop
mov
shl
pop
or
cmp
movsb
stos
ja
imul
mov
shl
cmp
clc
cs
iret
xchg
dec
add
scas
aas
testb
pushf
lret
enter
jns
lods
inc
mov
in
pop
ljmpw
pop
adc
mov
das
pop
out
cmpsl
dec
mov
lahf
pusha
out
sarl
pop
sub
xchg
mov
in
jnp
xor
pop
sub
cwtl
mov
xchg
dec
lock
shll
sbb
subb
rcll
push
jbe
rcrb
mov
fcmovnu
out
cmpsl
mov
jmp
cmp
mov
sub
dec
outsl
mov
or
into
xchg
clc
shlb
cmpsb
sub
cld
inc
xor
add
out
ljmp
pop
push
jmp
stos
jae
pop
mov
mov
push
ljmp
jae
and
cmp
stos
xor
into
lret
mov
dec
mov
jge
push
or
outsl
push
mov
stos
test
jle
xchg
xchg
stc
mov
pop
out
xchg
mov
jmp
pop
fdivs
mov
mov
inc
test
fistps
and
push
cli
sbb
pop
inc
ja
test
add
outsb
addb
cli
shl
pop
cmp
out
jae
add
es
mov
aad
mov
outsl
lret
inc
mov
repz
cmpsb
outsl
insl
mov
and
mov
adc
dec
mov
and
ja
into
and
sbb
fwait
in
xchg
mov
jo
adc
fsubl
and
adc
mov
rcrl
inc
out
dec
fidivs
dec
mov
xchg
pop
sub
push
ficomps
je
cmovg
dec
rol
imul
je
sub
xchg
std
jo,pt
or
inc
sub
out
stc
and
in
int
imul
movsl
fs
loopne
xlat
adc
jno
mov
pop
aaa
dec
aad
nop
mov
lods
scas
fildl
dec
jbe
fldlg2
testl
adc
fildl
mov
xchg
sub
jle
push
adc
call
into
mov
push
inc
fs
orl
aas
fwait
sub
cmp
mov
and
jmp
or
movsb
enter
mov
xorb
and
dec
cmpsl
xor
mov
cs
sahf
psubd
les
notl
adc
imul
and
fmul
xchg
js
jae
test
and
rolb
pop
and
mov
vpsubq
out
xor
inc
sub
dec
xlat
jo
add
ja
cli
add
test
dec
jmp
push
push
add
push
mov
pop
pop
fstpt
dec
into
inc
shl
ss
adc
sbb
aam
mov
loope
fistpll
jb
xor
pop
shrl
and
pop
test
mov
dec
xchg
call
ja
cmp
jl
fdivrl
les
pinsrw
mov
fdivp
xchg
sub
lock
inc
js
enter
inc
pusha
movsl
pop
mov
scas
mov
scas
in
dec
mov
or
mov
es
enter
fs
data16
data16
sbb
lods
push
bound
mov
das
xchg
fstpl
add
andb
xchg
adc
push
pop
sub
fidivrs
or
xchg
gs
jge
popf
add
in
in
xchg
mov
js
xor
sbb
add
rclb
daa
add
cld
xlat
std
sub
shl
sbb
ret
ljmp
and
shlb
pop
mov
rorb
sub
loope
dec
jne
add
pop
xlat
push
dec
or
cs
aam
nop
mov
sbb
xchg
xchg
push
push
dec
jle
rcrb
jne
dec
xchg
mov
repnz
scas
xchg
pop
pop
stos
fsubr
pop
pop
cmp
and
imul
out
jb
jp
cmp
movsb
test
hlt
cmp
pop
push
shlb
cmp
fwait
cld
iret
not
push
fidivrl
dec
movsb
push
xor
sub
std
mov
push
fdivrs
lret
out
aaa
lods
lahf
stc
test
jmp
ss
rcrb
sti
sub
cmpsl
mov
arpl
and
int
int3
xchg
leave
jbe
jo
sub
fpatan
and
fisubl
into
adc
push
or
inc
clc
sub
xor
aas
inc
push
leave
xchg
mov
fists
mov
outsl
mov
jl
cwtl
dec
add
loopne
cmp
xor
jg
cmp
repz
out
ret
jmp
mov
jg
hlt
inc
inc
jge
loop
sub
jg
mov
or
push
mov
sub
in
and
mov
jecxz
cmp
jae
repnz
loope
ficoms
push
and
push
pop
repz
xchg
jnp
mov
jnp
mov
gs
inc
jo
test
pop
jb
gs
dec
xlat
shrl
and
cmpsb
dec
mov
popa
inc
mov
sub
xor
push
dec
and
xchg
inc
mov
repnz
push
pop
mov
or
jo
jmp
and
rcll
jo
cmc
pop
bnd
cmp
adc
mov
stos
push
push
mov
into
cmp
jnp
or
xchg
shlb
mov
aam
testb
aas
inc
leave
xchg
bound
xchg
push
jno
stos
jae
ljmp
and
xchg
mov
pop
and
push
dec
shl
outsl
cmpl
push
popf
jne
xchg
and
sbb
jg
mov
xchg
ret
jl
mov
push
inc
and
sbb
out
xor
or
mov
mov
ds
jae
popf
faddp
or
lods
push
sbb
xor
xor
push
push
in
adc
dec
leave
mov
push
jmp
loopne
sub
decb
ds
push
sbb
dec
mov
jno,pn
jne
in
sub
addb
mov
pop
adc
pop
xor
sub
adc
loope
test
mov
and
sub
inc
fdivrs
jbe
not
sahf
imulb
int
dec
shl
dec
or
jae
inc
popa
or
mov
ret
fists
inc
pop
mov
jb
iret
rolb
jnp
cmpsl
mov
or
ret
into
int3
mov
jne
add
lods
mov
test
push
push
xchg
pop
test
push
hlt
jge
daa
mulb
aam
enter
stos
hlt
adc
incl
inc
scas
fdiv
jmp
xlat
and
pushf
mov
xchg
cmp
jnp
stos
pop
loop
xor
push
xor
daa
mov
lods
repz
sub
xor
pop
xor
addl
fs
lret
cmpps
lds
mov
cli
out
lds
stos
dec
mov
inc
pop
ja
out
mov
popf
lods
mov
cwtl
int3
adc
shrl
rcr
fst
nop
cmp
in
and
test
sub
stos
push
ficoml
arpl
sti
push
js
data16
lret
enter
pop
push
lfs
repz
repnz
pop
pop
sbb
leave
sbb
dec
js
cmp
jno
sub
inc
cmp
xchg
jecxz
push
sub
shlb
dec
sbb
or
jl
inc
mov
pop
mov
inc
sarb
bound
icebp
add
fldenv
mov
lahf
adc
pusha
mov
cmp
jnp
out
fcmove
add
dec
xchg
leave
push
ret
cmp
out
xor
fbstp
xchg
iret
and
mov
ret
stos
push
in
ja
jns
shlb
lret
outsl
push
repz
lahf
add
sahf
in
jge
sbb
bswap
divl
push
sbb
int3
add
pop
cwtl
sub
mov
jp
xor
jge,pt
jmp
or
loop
cmp
mov
mov
mov
mov
lods
inc
notl
mov
push
pop
lea
adc
lahf
xchg
push
leave
aam
mov
cmc
arpl
aad
test
sub
adc
push
std
rcrb
shll
jg
sti
jbe
or
push
dec
gs
insl
push
mov
scas
jnp
incb
ror
jo
and
lds
or
lret
xchg
sub
sbb
rcrb
mov
add
dec
adc
fnstenv
fucomp
jecxz
fxch
aad
push
inc
push
std
cmp
pop
cltd
cmp
mov
dec
mov
sub
jo
and
movsl
mov
dec
xchg
dec
xchg
fldenv
in
rcl
mov
add
data16
inc
cmp
test
push
aaa
bound
sahf
xchg
jne
int
fstl
sub
in
inc
bound
adc
les
popf
xor
or
popa
es
mov
or
movsl
inc
add
test
inc
leave
lock
inc
adc
clc
and
arpl
stos
mov
dec
lret
xchg
jns
mov
call
inc
cmp
push
sub
adc
aad
pop
or
adc
insb
fisubs
fadds
jl
jecxz
xor
cmc
int
sub
fwait
clc
fsubrs
jb
mov
enter
xchg
add
pusha
pushf
mov
arpl
aam
mov
aas
dec
pop
orb
mov
jne
cld
jne
into
gs
ret
jae
xchg
pop
or
sub
add
mov
in
xchg
stos
push
push
std
mov
out
aad
jne
rcrl
ljmp
rolb
cmpsb
mov
dec
jns
xor
push
ds
scas
dec
out
pushf
push
xorb
mov
inc
leave
pop
out
std
inc
inc
test
push
ret
adc
inc
punpcklbw
das
arpl
decl
enter
sbb
push
mov
jecxz
adc
mov
sbb
movsb
jg
loop
inc
mov
adc
pop
daa
cwtl
mov
cmp
sub
ljmp
mov
repnz
dec
jns
shlb
fs
mov
adc
mov
fisttpl
pop
fistl
hlt
cmp
sbb
xor
xor
shl
push
pop
sbb
bnd
or
ss
rclb
jl
repnz
add
lock
loopne
jnp
sahf
pop
push
dec
xor
dec
dec
adc
sbb
into
cmc
inc
pop
xchg
push
mov
pop
cli
mov
sar
sbb
pop
push
loop
jne
adc
jmp
testb
xor
push
xor
pop
mov
imull
jmp
mov
sub
mov
add
sub
xor
dec
hlt
daa
sub
mov
and
or
outsb
bts
scas
push
jle
int
xlat
sar
inc
adcb
mov
xor
xor
jbe
mov
repnz
jne
cwtl
ss
test
adc
jl
insb
int3
jne
sarb
lret
dec
mov
pop
adc
test
daa
insb
fwait
sub
mov
leave
int
adc
or
sub
into
push
xchg
in
je
sbb
repnz
mov
xor
outsb
mov
cli
das
cmpsb
repz
mov
loope
loopne
or
mov
repz
jecxz,pn
fbld
rclb
pop
or
mov
xor
ret
filds
les
add
sub
into
sbb
in
lods
repz
pushfw
add
aaa
jg
mov
or
xor
xor
ljmp
mov
cmpsl
jne
aad
jne
add
push
movb
sbb
dec
or
in
mov
subb
popf
scas
cmp
cmpsb
fidivrs
lahf
mov
sbb
bound
jecxz
add
dec
rorb
and
stc
push
icebp
or
jecxz
int
xchg
aad
pop
and
or
addb
aad
push
frstor
sahf
out
sub
lods
lret
xorl
std
sub
xor
fidivrl
push
inc
push
jmp
js
leave
mov
pop
fnstenv
dec
iretw
in
outsl
aaa
push
in
scas
xor
and
lock
jbe
shll
cs
mov
pop
lahf
daa
adc
jo
ja
adc
daa
fcmovne
push
push
pop
hlt
rcr
adc
in
pushf
xor
cmc
xchg
test
mov
xchg
and
inc
cmp
stos
mov
inc
sub
dec
and
xchg
in
leave
and
push
xchg
jecxz
push
mov
xchg
repnz
mov
lock
sbb
jbe
xor
add
mov
shr
adc
pop
mov
dec
repnz
or
mov
ds
xor
sahf
stos
cmpsb
fistps
mov
sub
jle
sbb
idiv
ret
enter
daa
div
mov
or
pop
push
mov
mov
cmp
add
cmp
xchg
jno
gs
icebp
xor
scas
jbe
lods
repz
mov
pushf
roll
mov
pop
xor
lret
push
lea
or
das
push
repz
cli
xorb
xor
cvttps2pi
jbe
arpl
jo
or
push
aad
popf
sbbb
adc
call
std
jo
jne
push
jo
inc
sbb
pop
outsb
call
xorb
push
dec
fs
and
dec
push
cmp
icebp
mov
imul
idivl
cltd
mov
cmp
xchg
xchg
xchg
in
mov
mov
mov
inc
aaa
add
add
addr16
imull
and
popf
je,pn
je
mov
push
pushw
leave
out
test
jge
cltd
divl
test
sbb
push
push
test
sbb
icebp
push
pop
mov
cmpsl
dec
insl
mov
testl
in
out
outsl
pop
iret
xchg
lcall
stos
fcmovnb
cwtl
fcmovnb
push
dec
pop
mov
cmp
orb
xor
mov
es
sahf
inc
cli
shlb
inc
jge
jnp
xchg
pop
sub
xchg
fst
fisubl
push
mov
dec
cwtl
adc
test
leave
sarb
jb
divb
pop
sbb
and
mov
and
jno
adc
adc
hlt
data16
sbb
int
sbb
mov
jns
insl
repnz
lods
data16
mov
rorb
mov
adc
test
repz
adc
daa
push
mov
hlt
jmp
push
xchg
xchg
pop
cmp
sahf
frstor
jns
xchg
push
std
jb
or
adc
xchg
cld
cmpsl
out
inc
inc
jne
mov
lret
dec
pop
and
or
sbb
mov
ret
xor
mov
js
push
cmp
mov
ja
hlt
movsl
adc
or
xor
sub
push
jp
addb
sub
into
dec
pop
outsl
cli
add
aad
fcompl
call
push
mov
push
gs
xchg
xlat
inc
sbb
lods
and
mov
jmp
repz
ljmp
aam
mov
push
movsb
sub
xchg
cmp
cmc
push
mov
push
cmpsl
mov
sub
jns
add
lock
js
xor
std
dec
popf
lahf
rolb
mov
ds
sti
xchg
jecxz
sbb
lahf
mov
dec
xchg
xor
repz
cli
vmwrite
mov
clc
fdivrl
cmp
leave
cmp
sbbb
jns
mov
repnz
daa
idivl
add
jl
push
lock
div
int
mov
cli
pop
xchg
dec
imul
pop
js
daa
sti
adc
pop
jle
jnp
cmpsb
xor
es
aaa
mov
jle
lea
inc
das
ret
mov
dec
ret
mov
jg
sbb
pop
mov
pop
or
test
and
stc
test
sub
xor
xadd
dec
jno
adc
and
orl
dec
xchg
mov
adc
cmp
stos
mov
test
fstp
shll
fwait
aas
mov
insb
stos
cmpsb
jp
outsl
stos
in
xchg
sub
mov
push
push
and
das
fs
inc
cmpsb
jle
xchg
les
xor
repnz
mov
ds
mov
dec
or
sub
push
sbb
or
into
mov
mov
mov
cli
cmp
ret
inc
sbb
cs
cmp
push
cld
cmp
popa
push
mov
lods
pop
and
sbb
aas
lock
pop
dec
pop
inc
clc
sbb
mov
outsb
inc
scas
jge
daa
ljmp
arpl
sti
push
ffreep
cs
mov
push
inc
icebp
sbbl
fsubrl
filds
std
xor
sarb
inc
add
rorb
cs
ficomps
push
lahf
cmp
stos
and
dec
cmp
pop
jo
maxps
adc
pop
xchg
adc
aam
sub
lcall
mov
fwait
jne
fs
insb
xor
outsb
add
sbb
dec
mov
cmp
xchg
in
dec
rolb
test
aaa
push
in
cld
mov
sbb
mov
pop
lret
mov
inc
aas
enter
insb
pop
lods
inc
adc
leave
out
pop
cwtl
adc
push
pop
push
jg
mov
daa
jns
pop
mov
push
into
mov
pop
leave
sbb
inc
movsb
ds
int3
fldt
mov
repnz
in
sbb
fmulp
jp
aaa
lret
loopne
and
aad
sbb
pop
das
imul
andl
pop
sub
test
test
lret
cmp
jns
repnz
aas
xchg
imul
mov
and
sbb
cmpsl
cmpl
daa
add
sti
out
orl
std
jecxz
jge
jmp
stos
or
push
popf
mov
jg
in
sbb
xchg
push
xor
sbb
insl
adc
cmc
or
or
cmp
sub
cli
into
cli
xor
outsb
jne
jnp
es
cmpsb
push
repnz
adc
mov
lcall
test
cs
pushf
sub
cld
int
mov
dec
popf
stos
fistl
cli
aaa
daa
dec
inc
pop
aaa
cmp
lret
cmp
mov
jns
pop
push
lret
sub
mov
cmpsl
outsb
mov
lods
sbb
xchg
push
push
das
imul
in
fdivrl
xchg
dec
lods
jp
in
arpl
subl
pop
fdivr
mov
daa
xchg
adc
mov
je
lret
sub
mov
ja
xor
and
xor
sub
push
add
adc
js
pusha
jbe
arpl
add
loopne
mov
push
or
cltd
pop
outsl
xchg
insb
loope
lods
enter
sub
sbbb
sti
xchg
out
mov
sahf
insb
call
aam
testl
push
xor
lcall
and
rcl
imul
push
iret
stos
xcrypt-ecb
shlb
mov
inc
sti
mov
leave
fisttpll
mov
dec
arpl
mov
cmpsl
testl
pop
mov
into
or
sarb
jmp
jnp
mov
jl,pt
xchg
pushf
jns
pop
enter
outsb
movsb
aas
jne
fldt
mov
insb
call
or
dec
add
clc
xchg
pusha
rdtsc
rcrl
push
mov
test
mov
aam
lahf
pop
js
mov
jl
repz
mov
or
add
jnp
cmp
mov
and
and
addl
mov
loopne
push
aam
outsl
sbbl
cmp
insl
jg
faddl
inc
mov
insb
aaa
and
or
addr16
jno
es
xor
std
mov
aas
inc
push
dec
mov
cmp
stc
pushf
dec
ds
dec
inc
lods
out
call
inc
mov
xor
rcrb
ret
insb
jae
xchg
jg
shl
pop
lods
out
push
rcl
inc
cld
arpl
cmp
into
dec
leave
in
fildll
insl
in
or
test
adc
daa
std
pop
jle
jnp
mov
and
pop
pop
scas
sbb
xchg
scas
pop
out
add
cmp
pop
repz
jmp
mov
gs
adc
leave
jbe
loopne
add
js
lahf
test
movsl
scas
or
mov
aaa
es
mov
popf
jb
or
jmp
mov
push
mov
sub
push
inc
add
popa
add
mov
jno
push
cltd
jge
in
sbb
jmp
mov
or
cmpsl
js
dec
add
or
daa
adc
pop
idiv
repz
or
push
scas
mov
cmp
xor
sbb
inc
mov
mov
popa
imul
sbb
adc
jns
fwait
mov
and
rcrl
fcomip
cmc
sbb
pop
sub
lock
gs
std
push
les
lret
imul
ljmp
rcrb
dec
out
xlat
pusha
outsb
dec
outsb
pop
jo
cmp
cs
push
sarb
jo
mov
adc
sysenter
mov
cwtl
mov
popl
xchg
push
lahf
lret
aam
xchg
cli
dec
fimull
add
dec
loopne
jnp
pushf
inc
push
mov
mov
mov
nop
jle
mov
test
stc
xchg
movsl
out
int
xor
shrb
add
push
sahf
pusha
sub
pop
cli
pop
or
adc
decl
add
add
in
add
jle
pop
mov
dec
imul
sbb
popf
and
dec
cmp
mov
push
mov
clc
mov
push
loope
add
shlb
aaa
fs
cmpsl
cmp
sub
xor
outsb
push
pop
mov
movsl
stc
bound
arpl
xlat
fnstenv
mov
ret
fldcw
mov
aaa
fcmovnbe
out
lock
ss
mov
dec
inc
fimull
push
sarl
ja
xchg
jg
add
cltd
mov
sbb
roll
lock
xchg
out
push
addr16
adc
cmc
cmp
mov
mov
das
cmp
das
fstps
dec
sub
xchg
add
cmc
test
clc
and
outsl
add
test
out
mov
bound
sahf
push
cmpsb
icebp
dec
mov
mov
jg
ret
sbb
mov
int3
or
inc
or
adc
push
aaa
push
not
out
repnz
outsl
or
dec
jge
test
sbb
dec
out
or
dec
sarl
insl
inc
scas
mov
ja
mov
fnstcw
push
push
mov
mov
popf
jge
es
pop
or
stos
lret
lea
imul
cwtl
stos
stc
lods
lret
sub
test
cmp
out
mov
insb
xchg
jbe
cmp
imul
inc
mov
stos
daa
addb
mov
scas
incl
shr
fldlg2
cltd
xor
loop
es
in
scas
sub
ja
cmp
mov
sbb
cltd
add
ljmp
sub
popf
int
jno
jp
imul
stos
jmp
jae
mov
add
jmp
xchg
movsl
loope
outsb
insb
bound
inc
mov
inc
call
add
xor
lds
sbb
inc
xor
sub
and
dec
inc
add
sti
inc
test
jmp
dec
pop
das
xchg
jo
jbe
cld
call
inc
test
xchg
sbb
or
mov
cmp
mov
repz
or
mov
mov
or
push
pop
jecxz
dec
or
push
es
jne
ljmp
ljmp
neg
movsb
xor
sbb
or
mov
sbb
neg
jbe
sti
ljmp
sbb
rclb
call
xor
loope
rcl
push
jmp
xlat
lcall
fidivrs
adc
shrb
aas
jp
jecxz
aam
jge
fcoms
adc
pop
push
popa
mov
mov
inc
into
idiv
xchg
out
dec
out
xchg
imul
and
decl
leave
out
stos
cld
cli
lcall
mov
pop
push
adc
gs
insl
adc
jecxz
xor
adc
aam
jge
cmp
mov
jp
sbb
xor
mov
push
sahf
inc
adc
pop
push
fbld
mov
lret
ret
pop
movsb
ret
lea
enter
xchg
int3
push
mov
add
dec
jno
call
jno
cmp
addr16
cwtl
push
psubusb
fsub
add
push
jp
pop
mov
push
inc
stos
fadds
lahf
fcompl
in
push
add
push
gs
ficomps
mov
enter
sub
jns
xorb
fldcw
inc
repnz
mov
dec
mov
xchg
shrl
es
mov
fs
stc
rcrl
sub
xor
jle
int3
cmp
adcl
add
sbb
mov
sub
call
lock
enter
repnz
cmp
xor
push
ja
cmpps
fiadds
add
ljmp
xor
xchg
push
inc
cmpsb
mov
cmp
jnp
roll
push
idivb
lahf
dec
aam
sub
pop
loop
repz
aam
arpl
dec
andl
sbb
and
flds
dec
xchg
push
test
mov
cmc
sub
cmp
nop
aas
jno
cli
adc
and
cmc
outsb
mov
cmp
mov
scas
iret
xchg
mov
bound
add
scas
sub
sbb
dec
jne
jne
mov
and
mov
data16
and
jle
es
cmp
hlt
mov
dec
mov
scas
sti
cmpsl
inc
lods
sub
cmc
mov
and
push
cmp
bound
shl
sbb
mov
cwtl
xchg
or
inc
loope
rclb
add
jb
ficoms
dec
lock
imul
xchg
cmc
xlat
sarb
scas
dec
enter
clc
push
add
xor
ret
xchg
mov
mov
dec
stos
xchg
lea
cld
cmpsl
int
test
loop
jnp
test
test
sbb
iretw
dec
daa
fdivrs
adc
add
mov
adc
dec
jns
xor
sbb
inc
stos
pusha
popf
mov
pop
xchg
push
inc
lea
out
mov
test
faddp
xchg
and
add
test
cltd
adc
mov
or
movsl
or
sbb
push
sub
xchg
xchg
mov
cmp
dec
loop
aas
push
pop
clc
aad
push
loop
shll
mov
jne
inc
xor
subl
stos
out
push
jg
arpl
popa
lock
call
jmp
and
dec
jp
or
mov
mov
mov
add
cmp
push
push
aas
test
push
fisubs
add
push
cld
fcompl
pop
jl
les
pop
cmp
enter
mov
enter
add
mov
or
lods
sahf
cltd
mov
std
and
xchg
pop
pop
insb
cmp
rcrl
push
imul
cmpl
and
pop
inc
pushf
imul
out
inc
inc
xor
sbb
lcall
add
ficomps
out
ror
hlt
hlt
in
lret
jne
fisubs
dec
mov
rolb
mov
push
clc
pop
popf
add
in
xchg
pop
xor
jns
lds
push
dec
mov
adc
enter
std
mov
xor
es
mov
xor
sbb
jge
cltd
test
popf
sbbl
loopne
cwtl
ds
mov
loopne
shrb
fst
ret
push
rep
push
mov
or
icebp
imull
or
jecxz
push
popa
xor
aaa
aad
adc
pop
or
mov
xor
loope
pop
data16
into
and
fdivr
adc
xor
jmp
adc
insl
sub
popa
cmp
or
nop
pop
fstpl
rclb
xchg
adc
dec
repnz
shll
idivl
leave
mov
movsl
movups
jno
mov
mov
and
pop
lods
sub
dec
insl
hlt
or
cmp
mov
cwtl
mov
cmpsb
mov
xchg
bound
jg
std
cld
xor
sahf
ret
repnz
outsl
jle
cmp
jge
sbb
mov
push
cld
movsb
scas
add
dec
std
mov
loop
lock
int3
das
pop
lock
fwait
push
xlat
add
in
jnp
popa
mov
sbb
mov
icebp
xlat
adc
loop
dec
rcrb
jmp
push
dec
mov
or
mov
pushf
divb
and
lock
stos
gs
ljmp
outsl
xchg
sub
or
or
aam
fidivrl
shr
repz
mov
gs
dec
add
inc
bndldx
mov
addl
mov
icebp
ret
cmp
mov
jns
test
loopne
xor
sbb
hlt
loopne
inc
cmp
xchg
hlt
lret
iret
int3
and
iret
dec
ret
pop
in
lods
hlt
insl
aas
pop
jo
mov
pop
ljmp
pusha
repz
pop
insl
xchg
mov
nop
in
aam
mov
or
mov
aaa
notl
jae
test
scas
idivb
mov
jns
mov
mul
sub
hlt
pop
xlat
adc
sarl
add
mov
inc
ljmp
pop
dec
or
mov
int
sbb
lods
pop
xchg
push
xchg
dec
push
xor
xchg
and
xchg
sub
cltd
aad
fisttps
lock
hlt
incw
rolb
idivl
daa
fstl
aam
enter
in
mov
pop
cmpl
andb
add
mov
ret
jp,pn
inc
sbb
clc
arpl
pop
mov
out
fdivrs
inc
pusha
push
push
adc
je
das
in
mov
mov
inc
inc
or
sub
int3
mov
sbbb
jbe
out
add
dec
imul
je
movsl
jnp
inc
stos
imul
sti
lock
sub
xchg
insl
loope
int3
in
sub
sahf
jp
mov
xor
adc
in
sbb
enter
lret
jns
mov
pop
out
push
jp,pn
ljmp
stc
inc
xchg
jl
jnp
xchg
in
inc
pushf
fisubrs
lret
mov
jno
sub
mov
sbb
loop
jno
in
jmp
and
or
sub
out
fnstsw
add
and
mov
cmp
outsl
or
lret
lock
mov
dec
scas
push
iret
dec
lods
and
xorl
in
jecxz
dec
adcb
pop
add
jns
jno
dec
inc
negb
iret
xchg
leave
das
push
mov
mov
adc
movsb
iret
xchg
cs
movsb
fdivrs
je
rorb
mov
bnd
adc
cmpsb
add
xchg
cld
adc
push
les
jne
orl
xor
lret
enter
bound
xor
shlb
mov
dec
shlb
leave
dec
and
lcall
push
sbb
mov
or
bswap
inc
ret
cmp
pushf
mov
scas
lahf
movl
and
mov
flds
out
aaa
aaa
inc
jo
mov
lret
test
jns
or
rcrb
lret
mov
test
push
sti
cmp
lea
int3
icebp
inc
std
push
inc
gs
dec
testb
add
or
fsubrs
fnsave
nop
fwait
mov
insl
xor
add
xor
pop
mov
stos
test
and
sub
xor
jae
flds
clc
push
xchg
fadd
xchg
sbb
dec
lcall
mov
pop
shrb
lock
aaa
addr16
jbe
mov
das
cmp
dec
sub
ret
outsb
in
cmpsl
jne
in
mov
cmpsb
movsl
loop
mov
test
mov
and
cmp
or
lahf
cli
pop
xor
mov
notb
inc
mov
arpl
pusha
jae
data16
mov
xor
in
fldt
pop
daa
mov
out
mov
pop
movsl
enter
test
int
rcrb
test
into
imul
add
sbb
mov
testl
popf
iret
aas
shl
imul
jb
dec
jb
jmp
notl
xchg
mov
in
inc
push
xchg
sub
cmpsb
mov
mov
and
mov
jne
aas
push
mov
xchg
or
xchg
mov
jecxz
outsb
and
clc
cmp
mov
loop
gs
fnsave
call
cmp
xchg
sbb
or
fidivl
loop
adc
daa
int3
insl
dec
loope
and
cmpsb
dec
push
jns
sbb
jmp
pusha
test
int
cmpsb
and
jo
push
shll
mov
aad
dec
mov
push
inc
lds
dec
pop
mov
jne
and
push
lahf
mov
dec
fildl
dec
fidivrs
mov
mov
sub
enter
test
pusha
lret
add
dec
out
sub
shlb
gs
in
mov
sbb
or
pusha
mov
shrb
sti
int
mov
out
test
daa
shll
xchg
mov
repnz
sub
pop
jbe
add
mov
cmpsb
cmpl
arpl
movsb
inc
in
fcomip
repnz
cltd
sub
lret
fidivrs
inc
xor
jne
lock
jl
stos
bnd
jne
dec
mov
cmp
push
sub
jl
pcmpeqw
mov
enter
dec
inc
fisubl
std
xchg
sub
add
bound
and
adc
jo
in
shr
mov
sahf
arpl
aad
xor
pop
pop
or
mov
stc
roll
adc
push
fmull
in
push
xchg
jp
fwait
pop
xlat
push
push
jae
xor
fbld
adc
xchg
dec
sub
xor
inc
daa
mov
fsubs
add
sbb
shr
sbb
popa
mov
push
hlt
cmpsb
sub
xchg
or
out
fnsave
sub
pop
push
icebp
xor
stc
mov
inc
xchg
das
test
push
lret
subb
inc
repz
int
push
sbb
ds
pusha
arpl
push
jnp
jae
and
daa
sarb
test
cmpsb
lods
mov
inc
mulb
pop
cwtl
pop
aad
mov
mov
xchg
stc
xor
sub
inc
dec
aad
lret
sub
cmp
subb
cmpb
push
or
pop
cli
xchg
or
daa
mov
jnp
lock
mov
test
fsubrs
add
jp
add
leave
into
and
push
inc
repz
fistps
imul
adc
out
pusha
cmpsl
ret
popa
shll
movsl
cmp
pavgw
xchg
jb
ret
aad
aad
sub
xor
cli
xor
insl
in
repnz
outsb
clc
fidivrs
jle
addr16
push
push
in
shlb
sbb
jmp
xor
jo
pop
ficomps
jbe
push
jecxz
jecxz
sbb
xchg
push
fstl
imul
dec
sub
cld
inc
pop
push
pop
push
out
scas
jecxz
inc
adc
pop
or
dec
ss
movsl
dec
mov
out
hlt
loop
test
adc
sub
add
and
leave
adc
push
sarb
loop
and
icebp
inc
iret
icebp
and
adc
or
mov
mov
sub
adc
loop
mov
inc
lret
out
mov
test
pop
and
test
out
in
sub
push
stos
jge
pop
fbld
pop
iret
lea
jae
add
bound
and
leave
mov
mov
cli
mov
ja
rcl
push
jge
adc
pusha
fists
xlat
scas
inc
test
loopne
rcll
imul
jp
mov
sbb
aaa
sti
in
mov
dec
int3
lock
imul
out
jmp
jns
adc
jns
xchg
and
mov
sarb
mov
sbb
sub
mov
cmpsl
arpl
jmp
mov
call
pop
inc
inc
popa
adc
mov
pop
mov
pop
sbb
cmpsb
call
xchg
clc
dec
sarb
push
sub
iret
xchg
push
xchg
dec
in
int3
stos
xchg
and
add
pop
pop
dec
or
pop
std
out
xchg
inc
push
ja
ss
ds
pop
imul
xchg
mov
cli
mov
mov
nop
insb
and
mov
vpaddsb
inc
std
mov
mov
mov
push
mov
mov
scas
test
mov
mov
outsl
cmpsb
cld
pop
and
dec
or
and
cmp
xor
mov
ljmp
ret
pushl
xor
push
out
pop
jecxz
adc
add
pop
or
mov
and
dec
fwait
shlb
into
imul
inc
stos
mov
roll
pop
fwait
jnp,pt
mov
leave
adc
cmp
shl
leave
and
xlat
inc
mov
cld
mov
mov
push
mov
cmp
jmp
push
ds
cmp
mov
outsb
loop
jecxz
in
xor
test
imul
pop
popa
cwtl
cs
imul
and
mov
hlt
inc
fsubrs
dec
cmp
cmp
dec
inc
div
pop
stc
lret
inc
and
lahf
das
inc
iret
sub
push
insl
subb
iret
cmp
xor
adc
lds
pop
aas
gs
cmpsb
pop
jnp
or
popa
sub
add
daa
roll
jp
or
loop
arpl
adc
int
pop
cmpsl
call
test
jb
test
or
jmp
dec
mov
in
and
not
jae
pop
xor
cltd
and
mov
out
insb
outsl
adc
cli
fstpl
inc
adc
sarb
xor
sarl
insb
into
pop
aas
ljmp
mov
stos
shll
pop
xchg
out
repnz
push
inc
cld
lods
adc
fwait
pop
and
fwait
repz
jno
scas
mov
jmp
das
shll
mov
mov
pop
add
mov
mov
jge
jbe
lret
lahf
std
aad
repnz
cmp
adc
test
add
mov
fs
lahf
imul
aam
push
mov
inc
bound
push
or
mov
cwtl
xor
scas
mov
mov
fdecstp
ljmp
subb
shlb
pop
adc
shll
aaa
fcoml
push
in
scas
in
inc
test
loop
push
ljmp
out
fnsave
jp
mov
aam
fisubrs
les
repnz
push
aam
data16
or
cmp
test
in
push
adc
iret
out
in
dec
xchg
test
shlb
rorl
cmpsb
pop
ret
lods
jg
cs
fldl
xlat
jg
add
push
xchg
and
sub
push
in
push
popa
cmp
and
cmpsl
fstl
lret
pop
das
jb
test
push
pop
adc
jg
mov
arpl
sbb
cmp
add
in
jl
dec
jecxz
jo
jl
sbb
jne
movl
js,pt
lods
inc
test
push
xor
and
mov
adc
shll
xlat
imul
push
iret
scas
lcall
out
cli
fdivl
mov
jp
sub
push
mull
mov
adc
call
aaa
sub
mov
cld
xchg
scas
enter
xchg
cmp
gs
mov
dec
mull
jg
ror
push
mov
jecxz
pop
scas
dec
repz
nop
aad
mov
xor
add
cmp
dec
jb
lret
popw
sbb
nop
jge
cmp
mov
jmp
push
xchg
inc
jb
jo
pushf
dec
sbb
hlt
shlb
lds
mov
dec
pop
hlt
xchg
pop
pop
enter
ror
sbb
cltd
or
jecxz
fs
cmp
xor
adc
shrb
jl
mov
and
enter
call
pop
cmpsb
jge
out
fwait
cmp
test
nop
loope
pop
xchg
test
xchg
insl
out
adc
clc
sub
xchg
call
ret
and
xor
arpl
adc
mov
add
aaa
xchg
pop
rclb
jmp
add
movsb
xchg
xor
fidivrs
or
test
and
sarl
das
dec
es
xchg
jp
stos
es
push
sub
stos
xchg
add
push
mov
sub
and
dec
mov
jg
pop
mov
sti
cltd
pop
nop
cs
ret
dec
clc
nop
fildl
add
jle
fidivrs
push
je
push
pop
lock
add
das
loope
mov
mov
clc
stos
rcr
inc
dec
imul
data16
lret
add
fisttpl
in
fildll
hlt
cmpsb
popa
cwtl
sbb
dec
std
call
jecxz
mov
add
test
mov
loope
cmp
out
stc
sub
lds
push
push
clc
mov
imul
gs
aas
into
mov
push
inc
fwait
mov
ds
addr16
sbb
xchg
cmp
xor
notl
lret
arpl
pop
pop
fmull
cs
mov
cltd
stos
daa
ss
mov
aas
addr16
lea
int
sarl
jge
ja
pushl
test
inc
sub
xchg
push
sarb
inc
adc
mov
ret
aas
or
jae
mov
dec
test
cmp
xchg
repz
mov
decb
jecxz
pop
int
push
in
jmp
xchg
push
in
lcall
add
dec
mov
out
push
inc
fisubrl
rcrl
dec
repz
je
ret
in
sbb
xor
arpl
test
lahf
adc
in
int
ljmp
push
push
jp
mov
outsl
and
xchg
and
cwtl
dec
insb
xor
add
popa
pushf
out
cmc
and
sub
into
hlt
adc
je
jno
adc
icebp
push
xchg
xchg
je
jl
xchg
mov
or
xchg
cmpsb
mov
out
mov
loope
in
mov
xchg
test
hlt
fwait
xor
loopne,pn
sbbb
adc
dec
inc
das
std
movsb
out
nop
mov
cld
out
sub
and
jmp
idivb
popa
ljmp
fiaddl
out
or
ret
stos
daa
lods
sbb
sbb
adc
inc
or
addr16
mov
insb
mov
sbb
test
je
scas
xchg
xchg
fnstsw
push
mov
insl
fnstsw
lds
fsubl
pop
lret
mov
lahf
icebp
shlb
dec
and
rorl
push
loopne
mov
lods
loope
mov
add
cli
cmp
adc
mov
dec
repz
sahf
push
test
outsb
cmc
pusha
int3
sub
mov
mov
jmp
sti
movsl
shlb
mov
cltd
lods
jae
sti
pop
push
mov
push
ss
cmp
jbe
push
dec
fdivs
mov
js
mov
jle
mov
bound
or
and
scas
jne
orb
mov
stc
lds
popa
movb
stos
mov
out
sbb
ja
xor
pushf
lock
repz
mov
jmp
test
shll
scas
out
inc
or
lock
add
ja
ret
push
shld
out
shrb
js
sbb
cmp
jmp
rcrl
xor
and
sbb
xlat
testb
stc
shll
add
movsl
xchg
add
aam
aam
iret
jge
adc
xorb
mov
faddl
pop
and
out
pushf
mov
ja
mov
test
idivb
ss
scas
xlat
shll
jns
sbb
pop
movl
xchg
sbb
je
scas
into
ds
dec
and
jno
out
loope
loope
cltd
xchg
jl
add
push
mul
mov
sahf
repz
jecxz
xlat
xchg
mov
idivl
push
and
mov
stos
pushl
aam
sarl
push
inc
mov
dec
adc
cmp
dec
mov
add
es
mov
push
xchg
or
cmpsl
adc
mov
divb
lcall
and
enter
push
cmpsl
dec
pop
cli
gs
cmpsl
call
pop
push
insl
clc
and
jnp
inc
add
mov
cmpsb
fcoml
jo
cmc
stos
ja
insb
sub
add
or
ficoml
sbb
push
sbb
mov
or
jmp
rclb
cmp
mov
daa
sbb
adc
das
push
mov
lods
adc
add
mov
mov
mov
dec
aad
ljmp
shlb
stc
pop
or
bound
iret
cmp
je
pop
sbbl
fimuls
jge
lds
push
or
push
testl
imul
add
movsl
movsb
in
pop
shrb
pop
xor
rclb
fwait
add
ljmp
mov
stc
adc
or
push
stos
out
fidivrs
cmc
pop
push
mov
fs
ljmp
cmc
dec
imul
mov
xchg
dec
sbb
cmpsb
je
push
push
mov
or
ds
jae
and
mov
pop
add
int
popf
jg
pop
mov
bound
out
inc
pop
les
lods
sbb
rorw
icebp
outsb
push
int3
mov
movsb
imul
shll
out
cmp
ret
sub
mov
imul
es
sbb
xchg
mov
dec
fildll
xor
mov
jae
test
repz
lcall
fldcw
fidivrl
mov
mov
out
push
mov
xor
xor
loop
sub
mov
es
or
adc
test
sarl
cmp
adc
inc
adc
addb
aam
inc
aam
mov
ja
lcall
jp
pop
sub
push
mov
lock
call
out
cmc
lods
xor
test
cmpsb
es
sti
pop
xor
popf
sbb
cmp
and
cmp
dec
and
movsl
add
mov
push
movsb
xchg
cld
aaa
or
repnz
movb
sti
mov
pop
popf
add
ror
in
xchg
out
lea
pop
push
mov
inc
stos
inc
fstl
jle
dec
cmpsl
ret
mov
std
mov
or
sahf
sbb
imulb
push
fwait
ds
and
in
in
jp
mov
adc
push
call
repz
jns
mov
xchg
dec
adcl
lds
or
adc
arpl
xlat
outsl
pop
cmp
std
mov
insl
and
sti
icebp
add
sbb
lret
push
pop
jae
ja
into
pop
repz
inc
cmp
cmp
lods
jbe
icebp
pop
shr
pushf
scas
and
jns
in
cmp
data16
aas
or
sub
pushf
mov
xchg
call
pop
sub
enter
popa
mov
hlt
int
pause
mov
loopne
pop
mov
dec
js
ljmp
fisubl
adc
lahf
mov
lock
in
pop
lcall
nop
int3
leave
lahf
dec
dec
sub
sub
xor
les
or
in
pop
push
sbb
jbe
adc
lods
mov
inc
in
xor
stc
pop
filds
push
es
pop
lcall
sub
hlt
inc
nop
rcrl
inc
fs
in
cmp
int
xor
dec
aad
arpl
subb
test
pop
push
pop
and
or
fsubrs
push
std
aam
fistl
xor
or
loopne
xchg
lcall
dec
jnp
inc
xlat
and
fsubrs
test
test
xchg
in
xlat
pop
cmp
mov
jns
xor
fdivrp
clc
jmp
mov
jmp
xchg
or
push
mov
in
mov
ret
push
jnp
dec
xchg
test
stos
sbb
cmpsb
dec
xchg
les
jmp
insb
pop
mov
mov
mov
mov
ret
push
das
popa
in
icebp
cwtl
xor
mov
add
lret
andb
arpl
xor
data16
mov
cmc
mov
int3
sub
cli
mov
mov
sub
jge
mov
add
test
fstps
xor
push
cmpsl
sbbl
int
pop
pop
loopne
bound
inc
orb
jecxz
inc
inc
mov
xor
shrw
add
out
aad
cs
lods
xchg
pop
cmp
xor
and
add
scas
jp
ret
nop
dec
sub
daa
adc
fistpll
scas
push
pop
jmp
mov
jne
jo
aaa
in
xor
out
lea
imull
push
cmpsl
aaa
stos
jge
repz
mov
aaa
rcrb
mov
in
sahf
jmp
cli
inc
pop
out
sub
fnstsw
xchg
push
cmp
addl
js
orl
and
inc
in
movsb
xor
fldt
push
xor
or
add
aaa
movsl
and
mov
mov
aad
sub
sub
popa
lret
mov
and
sbb
insb
in
mov
in
jbe
fbstp
lock
mov
test
ss
sub
scas
rcrl
mov
stos
gs
and
mov
scas
jecxz
jle
mov
es
inc
push
sbb
sbb
xor
push
rclb
rcl
mov
xchg
or
testb
push
loope
fistl
in
mov
add
pop
fidivl
pop
rolb
ffree
enter
pop
ljmp
cs
mov
sarb
inc
xor
inc
hlt
fsts
in
push
stos
ja
insl
xor
bound
sub
leave
xchg
imul
fucomi
movsl
into
adc
negl
pop
icebp
xor
jmp
mov
out
dec
add
pop
cmpsl
js
push
sub
xchg
aaa
mov
add
sbb
scas
sbb
sti
lret
push
and
pop
add
ficoml
cmpl
pushf
add
in
and
sub
sub
mov
sub
ljmp
lcall
and
shll
xchg
arpl
xchg
clc
adc
rolb
sbb
mov
xchg
push
pop
dec
and
fcomps
lods
pusha
outsl
push
fisubs
faddp
pushf
dec
cmp
pop
mov
stos
data16
mov
aad
icebp
mov
popa
dec
call
jns
insl
ljmp
and
jbe
jp
icebp
sti
xor
jo,pt
in
cmp
mov
mov
xchg
dec
hlt
push
push
or
pmulhuw
les
mov
shrl
push
sbb
pop
xchg
push
push
int3
xchg
mov
mov
jo
dec
cwtl
rcrl
daa
push
daa
jno
mov
jno
insl
sbb
out
sub
cmpsl
or
mov
push
sub
rclb
shrl
push
add
sarb
adc
test
jl
jmp
jae
jmp
enter
dec
sub
push
mov
mov
push
and
popa
pop
jae
popf
sub
add
data16
pop
popa
ss
cmpsl
sbb
sbb
xchg
enter
lods
mov
mov
mov
or
mov
adc
push
sbb
xchg
test
dec
cmp
mov
outsb
add
mov
cmp
jmp
mov
aam
sbb
loopne
lcall
cwtl
inc
rclb
lcall
subl
mov
cli
psubusb
rclb
out
mov
inc
lock
cmpb
jle
cmp
xlat
imul
enter
cmpsl
hlt
jecxz
adc
or
lods
shlb
lahf
ja
inc
jae
push
xor
push
out
mov
dec
shrl
andb
xor
sub
test
jecxz
push
mov
lret
jge
fimuls
xchg
mov
cmpsl
adc
pushf
mov
inc
sbb
sub
mov
loop
ret
jne
xor
cmp
mov
test
into
lcall
add
pop
xor
sahf
je
daa
fdivrl
iret
push
or
dec
push
push
dec
lock
stc
push
adc
imul
mov
sbb
sti
arpl
les
or
scas
in
jo
cmpsl
mov
shr
adc
pop
in
pop
call
adc
mov
fsubs
outsb
xchg
fs
das
pop
inc
outsl
sbb
movsl
mov
jae
insl
or
mov
stc
inc
cmp
repnz
xor
and
lret
daa
xlat
mov
loope
leave
push
repz
inc
mov
subl
mov
inc
push
cmp
iret
adcb
gs
hlt
inc
std
call
and
ficompl
jmp
mov
pop
leave
jo
jb
fs
repz
jmp
jb
mov
sarl
or
jo
jmp
xchg
jmp
or
cli
pop
jp
test
mov
sti
jmp
jg
mov
out
or
call
lock
je
pop
jns
loopne
ffreep
outsb
ja
sbb
test
xchg
pop
stos
cwtl
out
int3
jns
lods
sbb
rorl
rcrl
arpl
sbb
mov
sbb
fcoml
adc
or
push
cmc
out
pop
mov
mov
mov
mov
scas
pop
je
sub
loop
shll
fmull
or
inc
or
dec
xor
out
jno
jo
lret
pop
xchg
lret
loopne
mov
mov
push
leave
mov
lcall
push
push
dec
mov
jp
mov
jae
sbb
mul
div
adc
and
movsb
xor
or
sub
jg
sub
scas
cmc
jle
ss
js
sbb
sbb
call
jg
mov
cmpsb
hlt
out
movsl
imulb
mov
sub
bound
add
dec
mov
adc
mov
sbb
inc
adc
sbb
shlb
outsl
or
sbb
xchg
xchg
popa
jno
sub
out
and
fcmovnb
into
hlt
inc
mov
mov
aaa
jp
dec
sub
in
pop
ljmp
mov
pop
mov
jp
mov
dec
icebp
ss
add
pop
pushf
mov
clc
fcoms
dec
cltd
lcall
dec
cli
out
pop
in
jae,pt
in
dec
cmpsl
mov
stc
cmpb
dec
ds
sub
popf
dec
arpl
aaa
inc
ljmp
addps
jbe
sysret
xor
shl
out
xlat
pop
mov
fildll
sahf
dec
or
jo
push
scas
fnsave
repnz
xchg
sub
ja
aas
repz
ljmp
mov
daa
jp
ret
pop
dec
pop
xlat
jg
outsb
je
icebp
mov
mov
jp
sbb
or
xor
xchg
pop
scas
call
add
and
int
sub
mov
lahf
xlat
pop
cmp
stos
stos
in
sahf
push
in
adc
sbb
xchg
fsubr
das
arpl
mov
das
cmp
mov
push
iret
movaps
testb
inc
add
dec
pop
sbb
pop
adc
repnz
fxch
rclb
faddl
outsl
sub
add
lea
mov
lds
mov
enter
daa
test
adc
xor
lock
cmp
jge
sub
stos
mov
dec
push
movsb
les
js
jae
sbbl
sbb
and
inc
pop
mov
fdivrs
bound
roll
add
sti
data16
mov
scas
pop
inc
pop
mov
fisubl
rcll
add
jne
adc
xchg
ljmp
xor
add
and
call
pusha
decl
icebp
mov
outsl
divb
ljmp
fstpl
js
inc
mov
dec
lfs
xor
hlt
or
cli
add
ss
clc
fldl
pushf
mov
jmp
cmp
in
fcmovnb
fs
cs
into
mov
call
pop
xchg
inc
pop
popf
in
es
lret
lods
and
mov
call
mov
icebp
cltd
jecxz
inc
sub
mov
pop
dec
lods
adc
push
lcall
loop
aas
adc
test
mov
dec
adc
jg
push
pop
inc
xchg
push
dec
jo
xlat
rcrl
addr16
add
mov
lods
fwait
insl
inc
cmp
cld
movsb
jb
mov
push
or
xchg
testb
dec
shlb
jg
xor
cmp
mov
pop
xchg
pop
xor
rcll
mov
stc
fisttps
arpl
push
jns
jecxz
jmp
cmp
dec
cmp
dec
sahf
adc
call
sub
add
dec
sarl
loop
mov
adc
sbb
or
loope
mov
loopne
aas
repz
push
mov
jmp
push
lret
hlt
xchg
les
mov
fptan
dec
dec
lret
cmp
sbb
in
xchg
dec
xor
xor
lods
mov
je
aam
cmp
mov
mov
sbb
pop
mov
nop
cmp
sub
xor
adc
add
pop
hlt
scas
stos
clc
mov
gs
cmp
xor
jle
xchg
mov
leave
jle
sub
icebp
mov
rcrl
cmp
mov
repnz
loope
test
inc
subl
mov
xor
lods
icebp
lods
repnz
and
lds
push
test
mov
in
cmpsb
daa
ja
inc
test
pushf
xchg
inc
xor
jmp
adc
lcall
ljmp
xor
vsqrtps
shrl
cs
jno
sbb
inc
cli
imul
mov
sbb
xor
mov
cmp
cmp
daa
mov
cmp
push
or
in
and
pop
int3
call
add
out
cmp
daa
int
cmc
push
cmpsb
test
outsb
popf
lcall
jp
les
cmp
jl
xchg
jge
jno
loopne
jno
aas
jnp
push
cmp
jb
push
std
jmp
bound
stos
adc
jmp
das
stos
test
arpl
mov
add
jp
ret
je
in
shrb
adc
pop
mov
mov
lods
dec
pop
push
mov
cmp
push
shl
xor
sbb
hlt
xor
add
insl
insb
cmc
roll
and
cmp
ffree
rclb
loop
mov
out
ja
push
loop
shll
imul
sar
xlat
sub
repz
cli
rolb
inc
stos
pusha
dec
lods
or
out
jb
xor
les
jp
sub
xor
add
push
imul
andl
test
mov
stos
adc
dec
mov
inc
jbe
xchg
lock
gs
cs
xor
inc
pop
and
and
adc
in
mov
mov
mov
into
mov
xor
mov
pop
pop
into
icebp
rolb
jmp
sbb
jmp
push
movb
inc
xor
iret
stos
repz
mov
ret
cli
cld
cmp
stc
sub
mov
out
adc
jg
add
pop
pop
cmp
or
mov
xchg
and
nop
leave
push
adc
sub
lock
int
sar
add
or
dec
fmuls
shrb
rclb
test
out
mov
mov
je
jns
mov
stc
push
enter
xchg
adc
xchg
add
sbb
paddsb
enter
push
cmc
pop
lret
mov
stc
pop
xor
dec
mov
lds
xor
addb
push
mov
mov
jbe
or
mov
test
pop
mov
mov
fstps
call
mov
movsb
jae
push
mov
adc
popf
dec
sbb
inc
and
push
in
pop
push
test
cmp
mov
xchg
movsl
dec
add
sbb
sbb
lret
ja
sub
pop
xor
fimuls
test
push
sub
out
pop
insl
rclb
ret
inc
mov
xchg
cmpsl
xchg
clc
push
mov
sbb
sbb
sahf
jae
lahf
movsb
push
mov
or
dec
cmpsl
sti
or
cld
jle
btr
dec
lock
ror
dec
mov
or
cmp
mov
inc
out
add
clc
pop
add
sti
sbbb
inc
adc
inc
cld
lock
push
sbb
push
lcall
sbb
add
sti
fimull
mov
daa
arpl
fldt
push
xor
dec
mov
add
imul
xor
lea
mov
imul
dec
inc
xchg
movl
clc
push
imull
jnp
test
pop
add
outsl
pushf
pop
aad
in
pop
jo
jge
inc
aad
fs
inc
pop
or
push
lds
aad
pop
testl
div
stc
stos
add
movsb
cs
les
push
cwtl
ljmp
add
pop
loope
pop
test
pop
out
sub
cltd
lds
jle
fcoms
push
les
iret
xlat
pop
add
ljmp
roll
psubusb
call
fs
popa
popa
inc
out
stos
push
xlat
movsl
subb
fnsave
sbb
xadd
xchg
dec
insl
sbb
loopne
test
push
scas
fisubrl
lahf
pop
sub
mov
mov
js
dec
test
inc
ficoms
iret
sahf
in
lea
or
mov
inc
fcmovne
ss
jb
lods
test
sub
cltd
sbbb
mov
clc
frstor
add
arpl
jge
in
pop
inc
and
testl
xor
imul
cmp
xor
jae
cmp
cs
mov
fwait
cmpl
or
sub
jbe
push
cmpsb
cltd
repz
flds
fcomps
hlt
ret
cmp
aaa
ljmp
shll
and
notl
lret
dec
inc
xor
sbb
fnstsw
lret
mov
lret
cmpsb
push
nop
fwait
cli
dec
data16
clc
push
lcall
mov
hlt
int3
outsl
mov
or
dec
out
pop
frstor
dec
mov
sub
mov
mov
and
add
mov
mov
pusha
lret
aam
inc
out
stos
call
in
ror
nop
out
bound
fs
xor
in
lds
lret
or
adc
js
nop
push
loopne
mov
insl
dec
imul
lods
mov
mov
fcomip
push
lret
call
insb
xchg
push
in
xor
in
mov
cltd
xor
ret
leave
clc
mov
ds
movl
notb
in
inc
pop
mov
add
and
imul
leave
sub
sbb
xorl
test
rep
mov
cmp
add
call
rorb
jnp
sbb
imul
jae
aad
pop
dec
pop
repnz
xchg
idivb
mov
repnz
enter
xchg
jnp
and
in
sub
sarl
fnstcw
xlat
jmp
cmp
out
and
icebp
sbb
push
sbbb
push
pusha
cmp
subb
test
call
jne
add
xor
scas
mov
movsl
push
or
out
cld
out
jne
pop
fiadds
daa
inc
test
fnstsw
loope
out
repnz
pop
pop
push
cld
imul
xor
jp
cld
pop
test
movsl
ficoms
lea
xchg
xchg
mov
hlt
sbb
mov
popf
gs
xchg
add
xor
mov
xchg
subl
add
rcr
imul
hlt
addr16
add
sub
mov
inc
xchg
es
xchg
mov
mov
pop
inc
sub
xchg
jle
loopne
andl
scas
xchg
mov
icebp
mov
leave
add
incl
sub
xor
mov
sub
and
mov
and
lea
and
out
in
add
cwtl
lcall
sar
pop
ficompl
inc
movsl
lcall
dec
aad
mov
mov
shr
addr16
jmp
or
jne
jle
dec
jg
inc
data16
push
pop
lods
cmovnp
push
add
cmpsl
mov
pop
repnz
xchg
mov
imul
mov
fs
sub
sarb
mov
fcoml
add
pop
or
imulb
add
rorl
add
rcrb
lret
mov
in
aad
jle
andb
mov
xchg
add
sbb
pop
xchg
sbb
fistpll
mov
ret
nop
scas
fs
dec
stc
adc
aas
or
mov
sahf
enter
inc
stc
jbe
test
out
mov
in
sub
cld
shll
jecxz
shl
cmc
fistpl
add
cmc
ret
xchg
das
dec
xor
hlt
mov
or
cmp
rolb
mov
idiv
mov
or
lret
xor
rol
pop
lret
outsb
jnp
mov
aam
or
add
fwait
sub
aas
jns
data16
daa
and
lret
mov
mov
jge
cmpsl
aas
dec
es
lret
or
lahf
push
stos
jo
push
rorb
rol
or
sbb
aad
push
popf
xchg
das
mov
jae
call
sub
cmp
out
dec
sub
fcmove
ret
push
xorb
mov
das
mov
dec
lret
cmp
pusha
mov
add
mov
sbb
test
insl
dec
test
addb
pop
xchg
mov
dec
sub
das
or
mov
and
xchg
inc
ficoml
insb
inc
cmc
cmp
imul
iret
test
mov
loop
mov
test
stos
fs
push
sub
xchg
and
mov
xchg
incb
out
jnp
das
sahf
jns
aad
in
sarl
cmp
in
shl
rclb
mov
notl
aas
add
sub
arpl
shlb
int3
mov
dec
push
lds
xor
andl
loop
mov
or
fucomip
dec
dec
sub
mov
hlt
and
cmp
fwait
aaa
addr16
mov
push
jp
jne
xor
add
dec
mov
and
inc
sahf
outsb
mov
into
xor
repz
and
pusha
adc
mov
jg
shlb
fcmovnbe
mov
mov
xor
jmp
jecxz
jne
cmp
insl
or
dec
ljmp
adc
jmp
sbb
pop
lcall
shlb
push
mov
in
push
mov
cmpsb
dec
shll
jle
inc
pop
adc
not
xchg
xchg
mov
and
shr
stos
fisttps
mov
ds
add
sbb
lahf
sbb
mov
push
loope
stos
sub
inc
push
dec
std
and
test
jno
add
lds
ret
cltd
out
test
lods
xchg
and
mov
loop
xor
daa
lcall
imull
xlat
cli
jmp
scas
enter
jb
xor
adc
pop
push
mov
push
outsb
dec
cmp
jae
in
mov
daa
aaa
iret
negb
jle
shrl
or
add
pop
decl
adc
mov
sub
adc
inc
jge
test
mov
mov
outsb
loop
aaa
push
pop
push
stc
pushf
scas
pop
cltd
mov
pop
adc
pusha
filds
jo
add
test
inc
stc
push
or
shl
call
jmp
sub
pop
jmp
aas
mov
inc
cmp
xchg
mov
adc
adc
hlt
pop
xor
dec
and
ljmp
sahf
mov
jg
aaa
xor
loop
ss
add
adc
jnp
xchg
jae
sbb
movsb
add
jp
pop
and
push
mov
push
mov
rol
popf
mov
data16
cmp
je
jnp
push
inc
sub
in
fsubrp
and
xlat
sub
dec
mov
inc
subb
mov
in
fbstp
cs
scas
or
jmp
jp
jecxz
push
or
adc
mov
dec
int
push
lock
add
mov
pop
jg
or
xlat
outsb
mov
xchg
mov
data16
cmpsl
dec
dec
ljmp
mov
jo
cmp
mov
adc
add
ficoml
inc
dec
add
pop
xor
sarl
or
fisubl
insl
push
ss
mov
mov
in
pusha
adc
gs
push
std
sti
lahf
cltd
rolb
mov
je
std
jmp
data16
lahf
lcall
push
sub
mov
xor
icebp
adc
into
mov
ljmp
nop
popf
sti
inc
clc
loopne
push
mov
call
out
pop
nop
std
pop
add
and
or
popa
fisttpl
shlb
xchg
ds
mov
push
stos
cmc
pushf
test
in
mov
test
or
xchg
imul
std
mov
sbb
in
cmpb
inc
lret
les
add
inc
sbb
push
dec
icebp
idiv
cld
sub
adc
bound
insl
fucomip
dec
into
arpl
push
dec
lock
cmpsb
lret
jae
dec
dec
repz
insb
fcoml
movsb
popf
cltd
push
push
das
ss
sbb
jecxz
jb
xorl
and
lods
stos
fcoml
imul
outsl
adc
in
jp
dec
pop
cld
arpl
gs
ret
pop
out
push
xor
fwait
clc
lahf
in
fistpl
xchg
sbb
das
or
xchg
or
adc
mov
aaa
loopne
mov
mov
fidivrs
push
int
lds
sbb
dec
pop
repz
fs
mov
fsubl
lcall
mov
adc
push
jle
mov
mov
roll
in
lea
mov
in
cmp
xor
lds
sahf
cmp
test
add
je
addb
jmp
mov
lret
pop
add
fstpl
mov
pop
test
fidivrs
pop
lahf
xchg
sbb
shrl
repnz
mov
sbb
jne
stc
dec
leave
xchg
pop
mov
mov
mov
push
mov
dec
test
imulb
cli
inc
sahf
das
push
cmpsb
adcb
mov
dec
dec
sbb
sbb
stos
mov
xchg
push
dec
gs
mov
lds
rcll
jnp
mov
mov
rorl
or
sbb
adc
test
jl
pop
mov
xchg
in
push
pop
lds
pop
clc
sub
loopne
inc
jns
push
cli
or
add
fistpll
sub
loope
in
mov
xor
cs
sbb
les
enter
pop
cmpsl
pop
cmp
mov
cmp
mov
sti
imul
mov
test
xor
fistl
rorl
stos
xchg
lods
dec
mov
or
add
xchg
pop
push
inc
push
mov
iret
xchg
push
add
cmc
sahf
xchg
mov
inc
adc
jno
test
xor
outsl
daa
push
rcll
mov
popa
aam
push
mov
es
jle
xchg
popa
in
add
xchg
adc
inc
rol
pop
clc
out
jmp
fdivrl
ficoms
mov
lcall
xor
xor
dec
test
and
out
xor
push
arpl
daa
xor
fcompl
cmp
pop
popa
dec
subl
cmp
lahf
cli
in
insb
enter
imull
test
insl
imul
les
sub
fstps
aaa
add
or
pop
or
pop
ljmp
push
arpl
or
cmp
mov
mov
test
hlt
mov
cmc
sti
jmp
mov
test
add
jb
stc
aas
and
mov
pop
dec
movsl
dec
iret
ss
jmp
push
sbb
sub
jle
mov
mov
insl
in
aam
movb
xchg
adc
test
push
cmpb
cmp
cmpsb
push
mov
mov
push
mov
dec
pop
iret
addb
push
subb
scas
inc
adc
int3
sbb
int
das
xchg
ret
push
insb
lret
loopne
push
and
iret
mov
ret
push
mov
mov
je
dec
addr16
xchg
pusha
mov
add
sub
mov
pop
push
mov
mov
gs
loop
sbb
test
cmp
out
inc
jmp
jg
loope
jle
mov
in
xchg
mov
jb
inc
push
sarl
mov
iret
test
mov
inc
bound
mov
ja
daa
or
out
stos
loope
nop
js
pop
pop
mov
jne
out
lea
mov
es
jecxz
sahf
mov
push
js
dec
push
adc
iret
sbb
mov
cld
ficompl
xor
cmp
push
and
ljmp
jmp
jbe
push
or
sbb
sub
inc
jle
add
mov
mov
out
mov
fs
cmc
test
xor
push
scas
jecxz
mov
xchg
lods
jnp
pushf
xchg
mov
movsb
cmp
xchg
jnp
or
js
mov
outsb
cmpsl
xchg
cmp
shrl
outsl
mov
adc
js
sbb
xchg
fisubrs
jnp
xor
pusha
insb
lcall
jno
lret
sub
xchg
fidivrs
jae
aaa
cmp
sbb
jne
es
paddb
outsl
sub
cmp
dec
loope
push
int
sub
or
cmp
dec
or
jne
add
popf
lods
mov
fdivr
or
sbb
xchg
jg
cmp
rcr
enter
fnstcw
stos
pop
sub
xchg
xchg
jp
scas
ret
call
daa
insl
mov
pop
rol
adc
cmp
test
xor
mov
jbe
insb
xor
add
outsb
pop
les
insl
xchg
or
outsl
andl
xor
sbb
xchg
clc
das
cli
xor
mov
sub
popa
loop
ja
int
daa
addl
popa
add
adc
xchg
jbe
pop
pusha
sub
mov
inc
int
mov
lret
mov
fildll
pop
inc
loop
insl
stc
in
adc
mov
push
xor
test
gs
test
movsl
scas
fimuls
cld
fisubl
test
imul
pop
das
pop
push
hlt
sub
lret
dec
jo
push
xchg
adc
std
push
jmp
shll
jno
stc
jae
dec
cwtl
fwait
aas
sub
pop
xchg
sub
out
rolb
mov
jnp
mov
lods
aad
or
add
sbb
adc
inc
enter
test
ds
sub
sub
enter
sub
sbbl
jp
fidivl
add
dec
push
cmp
mov
test
cld
jbe
iret
jge
lods
xchg
jecxz
xchg
cmp
fldenv
popa
decb
push
adc
outsl
xor
xor
inc
sti
push
sub
ja
lahf
add
outsl
mov
scas
out
sarb
xlat
mov
lcall
xor
dec
jmp
stos
mov
fadds
mov
cmp
lea
dec
dec
adc
xchg
mov
subb
imul
adc
lods
jl
jno
lahf
add
xchg
lret
std
jp
pop
shlb
ljmp
xor
das
pop
xor
lret
adc
inc
sbb
js
cmp
cli
sbb
jno
cmp
sub
aas
dec
push
jl
mov
movsl
repz
hlt
out
inc
mov
dec
daa
and
testl
jl
repnz
sbb
lret
cmp
jmp
mull
popf
push
xchg
ret
jecxz
mov
and
and
xor
sbb
mov
xor
mov
aas
pusha
cld
imul
pop
and
gs
jecxz
adc
or
mov
cmpsl
int3
jg
movsb
adc
add
mov
mov
cmp
jno
stc
out
or
sbb
dec
sbb
adc
cmp
scas
in
les
pop
jno
lea
clc
inc
xor
scas
jge
push
lcall
pop
pop
pop
lahf
aas
shrb
inc
pop
addb
pop
fsubl
inc
ret
sub
xor
leave
lcall
imul
je
popa
aam
xchg
cmp
jl
repnz
lahf
jp
add
dec
mov
js
lret
test
mov
cmp
xchg
stos
dec
loopne
lock
and
sbb
push
sbb
aaa
sub
sub
cmp
test
or
adc
lock
lea
movsb
in
inc
or
push
movsl
leave
loope
aaa
scas
push
add
or
mov
mov
jp
sub
adc
mov
hlt
xor
xchg
and
cmp
aam
mov
push
inc
xor
sub
repz
pushf
xchg
dec
movsb
inc
inc
xchg
mov
or
pop
mov
movsb
std
mov
in
cltd
cmp
mov
push
mov
rolb
aad
sbb
xor
cmp
pop
mov
jns
movb
aaa
mov
mov
sbb
stc
push
jle
insl
lock
stc
pop
xchg
and
inc
xchg
or
pop
add
and
mov
idivb
push
lret
stos
sti
sahf
mov
ficomps
xor
push
ss
mov
and
shll
repz
mov
sub
cmp
jne
orl
and
jnp
pop
jbe
pop
jne
cmp
shll
mov
fbld
bound
cmp
jne
sbb
imul
aam
aam
imul
sahf
xchg
jb
std
fcmovnb
orl
pushf
mov
mov
add
mov
sub
pusha
pop
fists
pop
test
scas
xor
or
pusha
sub
mov
pinsrw
mov
lods
dec
pop
lods
nop
int3
xchg
jnp
mov
jnp
cs
sbb
xchg
mov
test
jnp
dec
jo
mov
leave
stos
ljmp
fadd
repnz
inc
sub
outsl
fsubrl
and
and
das
cltd
adcb
add
xchg
imul
sti
in
lods
pop
sbb
pop
in
fisubs
cmp
jg
xlat
cltd
scas
push
and
out
fucomi
push
and
loopne
arpl
jnp
or
js
push
and
push
decb
stos
xchg
js
xor
sbb
xor
push
mov
movsl
notb
pop
subl
xor
push
jbe
faddl
push
jge
test
xor
xchg
push
andl
mov
or
xchg
gs
mov
xchg
fwait
inc
push
jmp
adc
xlat
and
sbb
dec
add
and
xchg
xor
add
in
add
lahf
test
out
and
testl
imul
adc
sbb
rcr
in
enter
xchg
into
xlat
orb
repnz
hlt
cmp
push
pop
icebp
mov
mov
out
aad
insl
jns
sub
insb
cmp
push
jae
sbb
imul
sbb
xor
data16
xor
push
stos
mov
add
jno
in
into
loop
cmpsl
or
xchg
loop
jb
dec
mov
gs
add
pop
loop
bound
cmp
mov
aad
popf
xchg
inc
icebp
ljmp
xchg
pop
dec
adc
aam
fsubrs
lret
mov
cmp
sub
gs
jo
pushf
and
jge
push
test
cmp
aad
push
pop
and
js
ret
cld
xchg
aaa
and
je
repnz
inc
scas
repnz
lret
loopne
push
arpl
push
push
jmp
out
sbb
push
sti
sbb
popa
mov
xchg
adc
push
or
lcall
mov
cmp
jns
sbb
inc
xchg
mov
or
pop
sti
inc
test
fcmovu
inc
pop
sbb
jge
lods
sbb
aad
pop
sbb
mov
lret
pop
xor
loop
mov
cmp
add
ss
fildll
aam
xor
rorl
push
leave
outsb
pop
out
sub
pop
fdivrs
add
loopne
mov
cmp
mov
pusha
das
and
push
outsl
mov
aam
aam
sbb
xlat
jmp
out
sbb
or
or
mov
jg
sub
jle
out
mov
and
and
adc
shll
sahf
jnp
pop
xor
int3
in
fists
sub
mov
pop
add
dec
inc
lock
add
mov
cmpsb
jge
out
sub
in
or
ficompl
lock
shll
aaa
in
lods
lea
add
scas
pop
inc
je
lea
outsl
mov
dec
inc
pop
mov
mov
add
negl
and
mov
fcmovu
and
movsl
bound
sbbb
xor
out
mov
xlat
jp
mov
push
outsb
gs
push
pop
insl
shrl
daa
sub
gs
negb
lods
or
xchg
xchg
mov
push
xlat
cmp
xchg
mov
push
sub
mov
mov
stos
loope
aam
shlb
rcll
and
mov
xchg
pop
mov
sbbb
mov
fadds
loope
fidivs
push
push
jne
adc
add
and
arpl
addl
jp
lods
leave
mov
add
pop
std
push
lods
repz
mov
sbb
lods
repz
pop
add
jmp
outsl
shrb
dec
inc
mov
ss
std
mov
jno
clc
or
imul
in
mov
mov
sbbl
push
clc
mov
xchg
inc
fdivrs
jl
shlb
ds
inc
fs
leave
into
lods
pop
pop
jno
or
dec
sub
pop
mov
and
mov
inc
add
data16
mov
mov
adc
cmp
push
mov
mov
xchg
mov
pop
sbb
movsl
repnz
ss
pop
add
pop
and
int3
jmp
push
inc
mov
cmpsb
in
push
adcl
sub
inc
les
lock
out
mov
mov
lock
mull
adc
test
notl
jne
into
inc
mov
sub
scas
dec
inc
jmp
out
loope
cs
lds
fdivrs
sub
test
jle
cli
jb
and
xlat
movsl
das
in
imul
push
shl
out
push
scas
add
inc
cmp
fadd
push
jle
fwait
out
int
or
mov
clc
popa
adc
cmp
pushf
cmp
dec
pop
dec
add
int3
add
jns
add
clc
cmp
ja
cwtl
pop
push
mov
mov
imul
pop
mov
iret
or
in
dec
mov
in
jno
xchg
test
fwait
stc
sub
pxor
aaa
cld
xchg
adc
bound
jle
mov
mov
pop
mov
ljmp
xor
js
add
dec
fsubr
les
repz
dec
aaa
push
out
jecxz
imul
lcall
push
push
mov
popa
push
jnp
js
repnz
and
dec
sar
iret
addr16
ret
mov
lcall
inc
in
pop
push
sbb
add
and
mov
xlat
mov
das
pop
loop
int
xchg
inc
pop
xchg
pop
leave
lds
inc
mov
aas
inc
pop
out
push
repnz
push
sub
shl
mov
add
lock
dec
mov
mov
addr16
orl
lock
ds
push
aas
shl
loopne
dec
fidivl
fbstp
dec
sbb
mov
popf
enter
rorl
sarb
decl
push
xchg
or
mov
cmp
xor
enterw
sbb
pop
test
rcrb
sub
and
in
call
jne
mov
in
arpl
xchg
jp
cltd
or
jmp
rcrb
sub
mov
out
cmpsl
and
and
lods
rol
pop
xchg
inc
xchg
or
push
mov
and
add
enter
cmpsl
pop
add
xlat
push
das
mov
outsl
out
in
ret
and
insl
mov
pop
inc
lahf
push
ljmp
xchg
jne
pushf
cmp
push
pushf
sahf
xchg
or
aam
ja
or
sarb
rolb
pop
dec
xor
dec
adc
inc
push
pop
pop
test
mov
pop
inc
xchg
call
lahf
xchg
lret
mov
mov
aas
lds
pop
sbb
mov
cmp
js
aad
adc
loope
jle
xchg
std
aaa
inc
pop
movsl
pop
pop
pop
pushf
lcall
sbb
js
cmpsl
sub
frstor
inc
pop
jne
icebp
pop
jge
or
dec
arpl
hlt
lret
test
xor
push
dec
mov
shl
mov
arpl
ret
loop
push
inc
adc
or
stos
push
mov
aad
sbb
mov
push
inc
into
mov
mov
lods
out
pop
and
in
sarl
mov
dec
and
mov
and
icebp
mov
ds
push
ljmp
gs
xchg
sahf
xchg
jl
jb
lods
test
push
mov
add
incl
bound
pushf
or
das
leave
mov
adc
sbb
xchg
cwtl
mov
xchg
in
fadd
cmp
das
dec
out
scas
xchg
sub
pop
pushl
pushf
dec
popf
jp
pop
xor
jp
cwtl
xchg
pop
mov
mov
leave
scas
pop
xchg
js
and
push
sti
pusha
dec
xchg
lahf
xchg
shrl
mov
ja
jge
call
repz
mov
imull
fnstcw
clc
shll
jne
rorl
mov
push
scas
std
popf
push
aad
jnp
xchg
inc
push
mov
push
sub
in
out
outsb
pop
pop
call
fisttpll
shlb
mov
xchg
dec
add
fnstsw
sub
pop
arpl
mov
xor
movsb
sbb
in
fmull
std
test
loop
xor
cmp
mov
mov
adc
fmul
mov
adc
addb
mov
int3
out
adc
mov
fmuls
mov
cmp
testl
adc
int
push
out
enter
sbb
dec
test
lret
jle
jg
xchg
aas
mov
inc
xor
daa
and
in
mov
sahf
cmpsb
mov
jecxz
daa
adc
daa
mov
into
fldt
das
sbb
das
jp
jo
hlt
xor
outsb
sbb
pop
xchg
fstps
iret
fucomi
and
pop
cwtl
sbb
cmpsb
stc
push
jle
icebp
jne
sbb
or
in
jae
into
mov
pop
add
in
dec
pop
jmp
dec
shlb
gs
xchg
stos
scas
jnp
andl
dec
jne
dec
pop
mov
sti
lds
or
sub
imul
arpl
stos
lcall
push
aaa
cmp
lea
pop
xor
sbb
push
fdivl
movsl
cs
inc
lods
dec
loop
ss
das
fs
ret
hlt
mov
adc
int
std
imul
xchg
das
bound
psubsw
scas
sbb
xor
arpl
and
mov
ret
outsb
push
mov
dec
stos
dec
and
or
lahf
sahf
xor
push
lcall
sbb
jmp
sub
movsl
xchg
mov
stos
jmp
or
cmp
shl
and
pop
jnp
mov
push
loope
mov
test
aaa
stc
test
xlat
pop
sub
jp
fwait
ret
jo
add
xchg
and
into
int3
pop
addl
mov
sub
loopne
popa
lock
ss
fxch
jno
stc
out
jne
jp
add
jo
shrl
adc
inc
xchg
mov
cmp
add
push
jl
and
jl
cmpsb
mov
xchg
in
mov
dec
xor
push
cmp
aas
mov
dec
inc
repz
push
mov
cmpsb
jl
jb
jne
shl
pop
add
xor
sahf
cs
push
scas
arpl
push
int3
fists
pop
insb
mov
cmp
jg
insb
xchg
sarb
add
pop
jns
mov
fstp
mov
xchg
cmp
imul
out
and
add
cltd
xchg
inc
jecxz
and
xchg
sub
leave
add
pop
call
and
push
sarb
mov
push
es
sbb
fdivs
jns
dec
imul
inc
cs
insl
mov
addr16
xor
adc
dec
jp
or
ficomps
dec
dec
or
std
mov
aad
imul
jp
lods
cmp
mov
ret
lcall
sbbb
gs
insb
inc
xchg
fs
stos
ss
and
ret
push
int
cmpsl
in
jle
out
mov
xchg
int
inc
xor
lcall
int
or
lret
pushf
scas
adc
xchg
xor
rcrb
movsb
add
rcll
xchg
fcmovnu
pop
mov
lahf
cmc
rcr
dec
cld
cs
mov
and
pushf
mov
lods
or
mov
jae
mov
hlt
bound
and
sbb
adc
jne
daa
std
dec
xor
fcmovne
cmp
pop
pushf
jg
sbb
cmc
fadds
lcall
jmp
das
cmp
jle
popl
xchg
and
fdivrs
je
xchg
out
hlt
insl
inc
jne
mov
jl
mov
mov
xchg
adc
stc
or
mov
in
insl
shrb
sub
bound
mov
addr16
push
jg
fisubrs
outsb
int
mov
out
xor
or
lcall
outsb
addr16
in
sbb
test
jle
ds
movsl
data16
ret
das
dec
daa
ljmp
jo
stc
sbb
jmp
push
inc
fcompl
inc
xchg
pop
jbe
or
cmpsb
lahf
add
dec
xchg
aad
int
lea
lods
fstl
out
shl
push
or
mov
cli
sahf
in
movsb
icebp
xchg
rclb
stos
mov
in
inc
outsb
ret
sahf
clc
sbb
push
or
out
sub
scas
test
inc
sub
add
xlat
mov
lret
mov
stos
sub
jp
mov
dec
stos
dec
leave
test
fiadds
cmp
sarl
insl
pop
inc
add
push
out
xchg
mov
sbb
es
movsb
adc
dec
or
ret
lds
or
pop
mov
jo
and
or
ss
push
clc
test
test
pop
inc
aam
lcall
insb
std
inc
xchg
in
mov
arpl
cmpsb
jecxz
gs
loope
xchg
sbb
and
xchg
cmp
pop
sbb
jmp
icebp
push
cmp
out
jb
lcall
and
stc
xchg
mov
into
add
mov
lods
iret
fmul
and
mov
insl
inc
and
and
leave
addr16
jp
das
cwtl
and
jle
mov
loop
push
adc
sbbl
jne
xchg
int3
das
in
push
loopne
call
out
into
gs
into
sbb
mov
add
mov
mov
and
imul
mov
cmp
outsl
jl
das
add
pop
xchg
jge
and
in
jo
push
lret
sub
sub
stos
xchg
inc
or
xchg
stc
xor
xchg
push
leave
jae
push
lea
insl
sbb
jns,pt
ja
insl
sbb
lods
sbb
adc
clc
mov
add
ja
loop
jle
xor
or
cmp
or
jp
lahf
clc
gs
jmp
jns
popf
adc
xor
test
cs
sbb
cmpsl
pusha
inc
test
incl
dec
jle
jp
lock
mov
arpl
adc
xchg
xchg
adc
movl
sbb
sub
dec
xchg
adc
add
dec
push
adc
mov
dec
pop
subb
shlb
insb
mov
sub
popf
sub
fidivrs
push
xchg
fs
int
aad
neg
cmc
mov
xor
gs
dec
push
lcall
pop
lret
rolb
mov
mov
xchg
pop
fucom
lahf
rol
outsl
mov
out
mov
das
adc
scas
push
aaa
lods
sbb
sub
pop
test
mov
xlat
fidivrl
roll
sub
push
cmp
mov
pop
stc
xchg
arpl
cmp
push
jl
pop
push
pop
cmp
and
and
sbb
fnstcw
ss
loopne
loop
mov
fs
in
xchg
fstpl
adc
xlat
add
jne
sub
push
push
push
push
test
inc
push
pop
mov
push
lret
test
sbb
mov
mov
or
pop
mov
push
fildl
fadd
in
lret
test
in
inc
and
fwait
cld
xor
adc
aam
inc
dec
jae
in
mov
out
push
cltd
repnz
push
cmp
or
test
xchg
mov
sti
adc
push
aaa
jb
xchg
add
outsb
lret
ret
jge
lods
arpl
jecxz
mov
out
ds
movsl
repnz
sub
in
nop
inc
and
dec
adcb
xor
mov
sub
out
xchg
jns
pushf
xchg
lea
aas
lods
cmp
mov
gs
aaa
jmp
lahf
loope
or
sti
leave
sti
or
jp
jg
jp
pop
lds
outsl
fnstenv
and
fildl
sub
movsb
sbb
sbb
scas
add
or
mov
stos
sub
dec
xlat
and
mov
xor
aas
mov
mov
mov
push
in
xor
xor
movsb
xlat
xlat
movaps
pop
in
aam
jnp
aaa
jecxz
addb
ss
imul
xor
add
insl
xchg
insb
sub
neg
shlb
dec
mul
adc
xchg
imul
xor
mov
sub
mov
cmp
jb
insl
les
xor
mov
sahf
mov
loopne
adc
lds
and
and
mov
inc
ss
fdivrl
stos
add
out
mov
movsb
fdiv
dec
xchg
add
rcrl
pushf
divb
add
outsl
sbb
testl
dec
adc
sbb
fcompl
pop
mov
ficomps
data16
jmp
add
pusha
in
bound
in
scas
je
rolb
lock
and
add
pop
pushf
xor
ljmp
sbb
stc
xlat
shlb
adc
cmp
test
outsl
int
add
pushf
jne
sub
push
addr16
add
ret
lret
scas
rcrb
or
pop
push
shr
add
cmpsl
shll
xlat
sub
mov
loopne
xor
adc
xchg
aas
cmpsb
aaa
add
mov
cwtl
test
mov
fnsave
push
or
lea
inc
mov
int
inc
mov
int
js
sbb
push
in
stos
rolb
pop
pop
test
xor
or
pop
jns
jbe
sub
lcall
mov
mov
popf
add
sub
out
jle
pop
iret
ss
mov
mov
insb
push
cmp
pop
jne
push
cwtl
into
add
or
aad
pop
mov
rcr
cwtl
mov
sbb
rolb
pusha
xchg
fadd
loope
test
ret
inc
cmpsl
test
cmc
jo
out
dec
rcr
loopne
fcoms
adc
xchg
rcrb
loop
mov
lods
mov
leave
mov
jnp
mov
dec
das
push
dec
mov
pop
mov
es
cmpsb
pop
call
dec
es
rcl
leave
jl
flds
xchg
insb
push
test
cmp
fdivrs
in
in
jg
jo
int3
jecxz
jecxz
sbb
or
adc
or
jp
mov
sub
mov
pop
jecxz
sub
sub
xchg
std
int
jnp
dec
leave
imul
ss
ja
push
outsl
mov
mov
mov
nop
aaa
les
leave
sbb
mov
fwait
push
cmc
xchg
xchg
mov
mov
mov
in
mov
adc
push
mov
out
fstl
mov
call
xchg
mov
cmpsb
test
jmp
ret
jne
inc
xchg
outsl
mov
add
sub
ror
dec
xorl
pop
inc
hlt
mov
or
cmp
cmp
add
push
xor
push
inc
test
mov
lods
xor
fldl
aad
imul
cmpsb
ficomps
and
rorb
ret
cmp
aam
outsl
sahf
add
cmp
loop
cmp
adc
and
lret
repnz
in
lahf
jns
mov
dec
push
xchg
mov
inc
outsl
stc
imul
dec
lret
fisttpll
rcrl
push
add
adc
jno
sub
mov
insl
xor
xorl
cltd
lea
aaa
scas
push
cwtl
push
nop
mov
inc
fsts
insb
ss
in
mov
mov
cmpsb
ss
in
jne
or
lcall
je
inc
in
je
sbb
cmp
call
jecxz
xchg
push
mov
mov
mov
daa
mov
es
into
out
adc
shlb
out
sbb
scas
repz
shlb
stos
cmpsb
lock
jmp
ficoml
dec
fstps
mov
hlt
icebp
or
popa
outsl
inc
cmp
mov
fsubrs
mov
jl
xorl
or
dec
dec
cli
dec
and
sub
xchg
xor
add
out
stos
enter
sti
aad
shrb
mov
pusha
xchg
aam
inc
enter
push
xchg
dec
iret
fsubs
loopne
inc
or
xor
mov
fs
subl
cmpsb
pop
in
sbbb
mov
aaa
cmp
push
inc
xorb
cld
jmp
push
cvtps2pd
leave
aaa
fsubl
adc
sub
mulb
outsl
lret
and
int
adc
mov
std
pop
inc
push
ljmp
iret
divl
cld
sbb
leave
add
mov
rcrb
sbb
push
sub
mov
stc
cmpsb
lock
dec
out
push
fidivrs
lods
jb
add
mov
xor
fcmovnb
mov
add
add
leave
xor
lds
lret
dec
popa
mov
pop
jno
mov
fcomip
fdivrs
jge
fisubrs
clc
shll
xlat
loop
push
pusha
movsb
out
xchg
mulb
push
fdivs
ret
xchg
repz
push
mov
loop
inc
inc
jns
pop
mov
mov
movsb
xchg
test
cli
lret
orl
call
pop
push
aad
int
icebp
push
jmp
xor
push
push
inc
or
jne
xchg
inc
xchg
sarl
xchg
fisubrl
push
or
dec
mov
mov
fsubl
jecxz
push
repnz
cli
dec
cs
lds
pusha
jo
push
and
lea
xor
mov
push
xchg
aam
mov
push
popf
jae
sub
push
lret
dec
push
insb
imul
sbb
jle
adc
or
test
sbb
jae,pn
mov
jnp
push
and
loope
sbb
das
in
in
pop
pop
and
cmc
in
fwait
pop
add
jecxz
or
loopne
jnp
je
push
push
fnstcw
cmp
adc
and
dec
sub
repnz
and
mov
pop
cli
dec
and
jno
cmp
in
pop
cmc
fwait
call
xchg
mov
into
lock
addb
fucomi
add
jmp
in
push
rorl
sbb
rorl
lret
int3
mov
push
imul
test
aas
mov
dec
push
sub
loop
mov
ds
das
jecxz
sahf
cmpsb
jno
es
xchg
lea
out
test
add
call
fmuls
repz
push
cpuid
sbb
mov
mov
push
fsts
loope
xchg
lcall
cmpsb
sub
sub
mov
add
fistps
bound
dec
cli
rep
and
je
and
js
and
aaa
mov
and
outsb
je
in
xchg
and
mov
shl
sbb
mov
mov
addl
notb
out
jg
mov
sub
pop
es
cmp
pop
mov
xor
pop
std
push
adc
call
sub
mov
aam
cwtl
int
push
and
mov
cmpb
movsb
mov
or
lcall
mov
and
je
inc
sub
mov
fsubr
jns
loopne
jbe
mulb
lcall
pop
mov
shr
fwait
cwtl
inc
mov
dec
imul
pop
test
add
jne
push
sahf
outsl
mov
sbb
stc
sub
cltd
aad
rcrb
dec
popf
mov
xchg
mov
sahf
jecxz
imul
fdivl
leave
sub
or
lds
mov
jb
je
lds
pop
mov
into
lods
dec
fldenv
out
mov
fs
push
xchg
lods
ja
push
fstpl
mov
push
in
in
shll
or
pusha
pop
ljmp
push
mov
mov
mov
and
aas
int3
inc
out
inc
iret
divb
sti
jl
loopne
cmp
in
dec
or
fcomi
jne
sub
jl
mov
jae
mov
out
pop
in
pop
sbb
fimull
mov
jge
mov
popa
lods
icebp
mov
push
dec
mov
daa
cmp
lock
cmp
cmp
rcrb
popa
icebp
mov
jge
aas
arpl
imul
das
mov
push
in
in
sbb
fnsave
sbb
sbb
jge
movsb
inc
or
jl
int
ret
dec
jle
fimuls
into
ja
aas
mov
iret
mov
sarl
mov
pop
add
push
pop
push
cmp
xor
test
pop
dec
int
fisubrl
rcll
or
or
jle
popf
test
or
test
sub
ljmp
fiaddl
mov
or
inc
out
in
sub
cli
xor
mov
mov
fstpt
mov
push
cmc
ret
shl
std
xchg
mov
or
fcmovb
sub
jno
in
mov
in
dec
sti
push
cmpl
fcmovne
lret
lret
les
push
mov
sub
dec
jbe
testl
sub
repnz
xorb
data16
sub
rorl
gs
pop
pop
loope
lds
pop
jae
sbb
sub
pop
subb
gs
aad
mov
mulb
movsl
jb
mov
call
insl
push
scas
mov
mov
cmpsl
inc
xor
push
mov
mov
push
push
js
xor
imul
sub
jl
movl
ret
lahf
or
icebp
inc
imul
mov
shlb
xchg
jae
out
xchg
xchg
ja
jecxz
mov
jo
mov
or
and
push
xchg
test
jg
insl
aas
shlb
mov
dec
in
push
adc
mov
inc
gs
add
jnp
ss
jg
sub
xor
cmp
add
xchg
inc
std
in
mov
cld
lahf
mov
or
add
mov
cmp
cli
mov
push
dec
cs
lods
pop
cvtps2pd
mov
mov
pop
adc
cmp
mov
cmpl
int3
pop
bound
inc
cmc
mov
fmul
push
adc
mov
insl
ret
sub
test
cmp
lds
int
push
jae
daa
pushf
outsl
in
jns
iret
xchg
inc
pop
and
xchg
sbb
sub
cld
and
stc
pop
fimuls
stc
popa
rcrb
cmpsb
stos
rorb
cs
movsl
lahf
xchg
fmul
fcomi
cmp
mov
or
bound
cmc
shr
xchg
ret
jo
stos
addr16
stos
int3
jno
sbb
pop
push
bound
das
inc
popf
xlat
add
loop
imul
jle
repnz
xor
pop
pop
jmp
push
mov
rorl
dec
sbb
xor
das
or
sbb
adc
cmp
adc
fcomi
add
mov
jae
shll
out
xchg
mov
xchg
loopne
push
mov
sub
fisttpl
icebp
and
mov
mov
cmp
pop
mov
test
addr16
ret
rcr
notb
mov
fbld
mov
xchg
movsb
movsl
inc
data16
push
test
mov
xlat
jno
adc
lcall
out
dec
add
mov
fwait
xchg
ss
push
or
cmpsl
ret
mov
push
pop
ss
test
pusha
mov
or
in
lods
or
jg
add
je
in
movsb
adc
adc
cmp
mov
and
divb
cli
jne
add
lahf
aad
popa
insl
cli
mov
adc
insb
test
adc
push
in
lahf
push
mov
decl
push
lcall
xor
sub
mov
mov
jbe
fiadds
xchg
push
mov
call
mov
dec
sbb
dec
pop
ffreep
adc
mov
pop
stos
push
aas
add
pop
bound
roll
repz
iret
pop
or
jns
negl
and
je
fisttps
fcomip
push
pop
ljmp
loope
xchg
dec
repz
std
push
jne,pt
ds
xchg
loope
mov
daa
inc
push
xor
sti
and
jecxz
dec
push
cs
push
enter
enter
gs
mov
jge
mov
push
jle
aam
loopne
add
sub
push
adc
jg
add
les
push
ret
nop
jbe
test
in
xor
cmp
fwait
ljmp
mov
stos
push
cmp
ret
les
or
adc
loope
lcall
rclb
imul
xchg
pop
and
inc
int
cmp
xor
sarl
aam
jnp
inc
cld
push
inc
cltd
xchg
mov
jne
or
fst
rcrb
push
and
or
push
movsl
mov
lret
aad
jns
ljmp
stos
mov
insb
or
push
jns
add
andb
ret
sbbl
stc
or
pop
clc
mov
aas
icebp
mov
add
xchg
roll
cmp
lea
adc
repnz
inc
pop
xchg
xchg
xchg
insl
sbb
lret
cld
loope
xorl
mov
notl
sbb
pop
nop
xor
jle
xchg
xor
subb
pop
or
cmp
inc
mov
fmull
in
lcall
stos
pop
fistpll
sbb
cmp
fwait
inc
push
push
push
pop
stos
ljmp
inc
xchg
push
in
xchg
inc
add
and
jmp
stos
mov
push
jb
sbb
push
rclb
push
les
sbb
xchg
decl
adc
pushf
pop
repz
pusha
movsb
mov
rclb
enter
movsb
out
and
xchg
dec
in
sbb
xor
negb
rcr
out
and
push
jp
js
push
mov
jae
pop
lock
xchg
xor
ficomps
cmp
sahf
pop
ja
pop
xor
inc
mov
push
mov
lret
lock
xchg
add
movsl
adc
sbb
or
gs
mov
popa
push
lock
enter
mov
pop
cmp
sub
test
or
mov
inc
push
push
les
dec
inc
sub
hlt
shrb
in
jns
adc
xchg
in
clc
push
mov
insb
cwtl
fst
xor
arpl
arpl
add
sbb
or
lret
fisttps
dec
inc
xchg
imul
into
add
shrb
xchg
xchg
inc
icebp
aaa
filds
into
pop
addr16
xacquire
insl
and
inc
daa
movsb
and
in
jecxz
loopne
sub
sub
in
fidivl
or
ficomps
or
cli
pop
xchg
add
xchg
sub
test
es
out
xchg
xor
pushf
ljmp
or
mov
mov
imul
popf
cmp
push
mov
xchg
push
pop
out
mov
fidivrl
gs
pop
mov
inc
out
outsb
or
or
out
outsl
test
inc
cmp
jl
sub
inc
add
sti
lret
divl
out
inc
adc
iret
dec
mov
aas
fwait
mov
loopne
imul
arpl
xchg
sub
vaddpd
dec
sbb
movsb
ret
mov
push
push
lods
rolb
cmp
push
jmp
int3
xor
jp
stos
mov
jge
test
idivb
andb
in
out
inc
in
inc
nop
mov
mov
push
int
adc
xor
sbb
adc
push
and
lret
cmp
dec
cmpsl
adc
xchg
cmp
sub
cwtl
cmp
icebp
inc
pop
jnp
addr16
cwtl
or
lret
or
js
lahf
inc
scas
sbb
inc
rcrl
lds
aaa
push
pop
or
jg
jae
inc
adc
dec
xor
aas
push
push
insl
insb
push
mov
add
sub
or
imul
test
jo
xchg
mov
xchg
add
ret
or
xor
sbb
mov
mov
mov
or
cmc
jl
out
cmp
add
scas
dec
ret
scas
xlat
inc
in
outsl
dec
cmp
fldl
adc
imul
sti
jne
jge
mov
out
test
fwait
sub
in
imul
gs
fsubrl
jle
repnz
jne
xor
mov
punpckhwd
pop
pop
sbb
pop
push
lret
xchg
and
pop
mov
subl
xchg
inc
mov
inc
fsubp
xchg
xchg
loopne
sub
jecxz
jp
rorb
shll
xor
jmp
mov
je
inc
mov
decb
push
mov
cmp
cmc
jp
push
rorb
mov
ljmp
stos
int3
jecxz
call
insl
dec
rcrl
sub
inc
inc
inc
daa
loopne
sarb
or
xor
push
pop
fdivl
and
and
fistl
ret
inc
in
aas
mov
inc
out
push
mov
ror
lods
lret
je
or
addr16
and
scas
jbe
mov
mov
pop
xchg
insb
int3
ret
inc
lock
lods
popf
or
fwait
mov
stc
add
sbb
or
and
mov
jbe
pushf
sbb
and
aaa
jp
push
cmpsb
cmp
or
inc
mov
fwait
pop
divl
or
insl
test
iret
xor
js
fisubrl
test
or
aad
add
cli
sti
pop
push
push
sarl
cwtl
imul
adc
f2xm1
sbb
idiv
adc
outsb
fidivrl
xchg
push
stos
leave
jnp
inc
jnp
popf
mov
jnp
push
movsb
aas
mov
nop
adc
push
mov
inc
int
pop
shl
sti
xor
sarb
mov
push
inc
cli
adc
dec
jbe
sbb
xchg
mov
imul
jg
dec
add
stos
test
addr16
dec
mov
push
stc
mov
push
cmpsb
push
lock
test
data16
adc
hlt
jnp
add
sub
std
add
lahf
cltd
jl
enter
jo
mov
xchg
movsl
add
dec
pop
add
js
je
pop
pusha
sub
cmpsb
mov
loop
lcall
or
mov
loope
sub
push
lcall
push
push
mov
imul
rorl
adc
cld
ja
ret
pop
pop
fadds
insb
jge
movl
shl
das
dec
aaa
sti
cmpsb
mov
test
fwait
lret
xor
stc
ja
adc
mov
inc
xchg
call
or
mov
push
lret
add
xchg
pop
xor
inc
pushf
gs
xlat
jbe
pop
stc
fwait
mov
xchg
jnp
mov
daa
mov
cs
cmpb
dec
xor
leave
icebp
andb
add
sbb
pop
test
movsb
icebp
mov
jge
out
mov
or
xchg
loopne
outsl
rcrl
jge
idivb
mov
fistl
sbb
in
inc
test
js
cs
loope
loope
insb
int3
sarb
and
pop
out
xchg
push
hlt
pop
cs
ret
jl
movsb
and
cmpb
jbe
jl
inc
lods
int
add
sbb
dec
insb
or
shrb
cmp
sbb
dec
clc
pop
push
xchg
pop
pop
loop
inc
sbb
fs
fadds
aad
or
mov
adc
mov
ja
sub
push
hlt
jge
and
adc
sub
icebp
push
push
out
fildl
stc
icebp
mov
add
divb
cwtl
sahf
test
add
xor
ret
or
arpl
loop
fbstp
sbb
test
inc
ljmp
cmpsb
mov
xchg
arpl
hlt
mov
inc
cld
incl
int3
mov
imul
push
xchg
dec
or
cmp
sbb
mov
ret
xchg
pop
cmc
cmpsl
movsl
jmp
mov
fs
mov
mov
mov
subl
adc
xchg
les
test
js
inc
test
outsl
xchg
sbb
pop
mov
jo
push
movsl
jbe
js
sbb
add
mov
mov
aam
pop
lcall
mov
rcrl
ret
mov
push
mov
push
in
imulb
stos
mov
dec
jno
outsb
mov
xor
ds
rorb
gs
popa
dec
imul
int
call
sbb
pusha
sbb
insb
nop
gs
mov
push
jbe
test
stc
negb
push
adc
js
lea
lds
rcl
xchg
dec
mov
sbbl
push
mov
xchg
or
fs
cmp
sbbb
gs
jmp
inc
inc
and
cltd
insl
ret
dec
je
pop
add
inc
push
adc
xor
xor
enter
inc
jecxz
or
jns
das
mov
pop
dec
dec
jecxz
lret
les
lcall
rcrl
out
notb
aas
popa
cmc
ss
repz
in
bound
ficoms
pop
je
sbb
stos
or
rep
xchg
out
add
shlb
ret
lcall
ret
inc
adc
sub
test
mov
ljmp
jle
rcrl
add
mov
jge
shll
js
imul
rcll
push
in
fstp
ret
add
mov
inc
out
mull
push
push
or
xchg
into
jg
cmpsb
iret
rcrb
outsb
das
pop
cmp
nop
in
dec
sbb
mov
movsb
add
mov
data16
daa
das
mov
pop
sbb
push
inc
sbb
xchg
int
clc
pop
xchg
fnstsw
test
mov
popa
jmp
lods
and
cmp
bound
lods
xor
sub
push
cwtl
sbb
cmp
push
push
fldenv
imul
js
lock
imul
add
ja
mov
xchg
ljmp
mov
divb
jo
test
in
mov
push
mov
lods
or
push
cmpsl
add
movq
lea
aas
adc
mov
jns
push
push
insb
mov
sbbl
push
enter
lea
xchg
xchg
in
cltd
movsb
mov
cmp
lea
cld
dec
icebp
popa
pop
cmpsb
xchg
lret
test
mov
jbe
repnz
xlat
iret
lock
ljmp
cmp
mov
cmp
mov
mov
rol
push
icebp
fisubl
pop
xor
clc
adc
pop
pop
std
mov
fwait
cmpsb
push
push
ret
xor
repnz
sbb
cmp
test
popf
nop
sbb
cmp
push
dec
fildll
and
push
or
int3
clc
xchg
and
iret
sbb
pop
cmpsl
xchg
mov
out
outsl
or
jle
insl
dec
add
xor
xor
leave
hlt
jecxz
popa
xchg
inc
fxtract
lock
das
add
pop
dec
add
and
inc
ret
popl
cmp
outsb
or
insl
sti
mov
mov
add
xor
orl
cmp
jbe
repz
stc
clc
push
or
iret
xchg
test
int
xor
mov
test
mov
loop
sbb
test
iret
shr
cli
push
xchg
push
cli
push
jecxz
sbb
dec
shlb
dec
jns
jns
in
ficompl
sarb
js,pt
cmc
sti
push
cmp
fcoms
data16
data16
xor
ss
push
imul
xor
xchg
push
jge
loop
push
xor
push
xchg
dec
movsb
js
fwait
mov
push
fldenv
jmp
cmpsl
aaa
xchg
cs
push
iret
sub
mov
jne
out
sub
pop
adc
scas
jbe
std
and
nop
enter
lcall
addl
in
adc
push
ficoml
inc
xchg
sahf
cli
xchg
sbbl
mov
pop
nop
es
mov
ret
cwtl
push
shll
jo
jnp
jp
pusha
jno
or
mov
data16
dec
rolb
cs
test
mov
mov
fnstcw
ret
sahf
mov
ret
mov
jbe
pop
pop
mov
cli
push
xor
shl
mov
pop
mov
dec
or
dec
les
mov
sub
mov
int3
cli
repnz
dec
pushf
clc
xor
jb
shl
lret
fidivrl
out
frstor
jl
adc
rolb
mov
xor
fcmovnu
mov
les
adc
jne
and
push
aad
ljmp
or
sti
movb
sub
bound
addb
leave
jle
mov
mov
addr16
push
jp
mov
insb
rorl
mov
stos
pop
xor
or
inc
lock
div
out
push
sub
push
add
or
sub
cltd
cltd
mov
adc
mov
fs
cli
int
mov
imull
push
jg
sub
cmpsl
add
test
das
arpl
sbb
add
mov
push
insb
jecxz
scas
loop
cmp
jecxz
addr16
loope
pslld
mov
popa
push
popf
xchg
jg
xchg
xchg
cmp
fstpl
dec
ljmp
cld
pop
lret
sub
std
mov
cs
or
in
mov
lods
stos
test
or
lock
bnd
pop
clc
inc
inc
inc
mov
and
ror
adc
stos
mov
push
sahf
in
cmp
test
out
pusha
sbb
jno
add
sbb
iret
loopne
mov
inc
xchg
in
sub
cmp
or
adc
imul
repz
repnz
ljmp
mov
psubusb
hlt
mov
sbb
fistps
sub
sarb
cwtl
ss
sub
dec
pop
negb
cltd
dec
xor
cld
mov
in
negb
jmp
mov
cltd
insb
pop
cs
cs
jnp
int3
sub
mov
dec
adc
pop
push
mov
push
xchg
int
mov
cli
lcall
and
push
loope
stos
mov
xor
xor
xchg
xchg
or
inc
mov
jmp
leave
in
ja
test
imul
xor
insl
pop
jecxz
xor
out
and
insb
mov
std
jecxz
jg
call
and
in
mov
sti
inc
cmc
xchg
pusha
xor
arpl
mov
test
jne
cwtl
push
xor
mov
mov
mov
add
lods
jl
xor
insl
outsb
shrw
mov
xchg
adc
jne
repz
pop
lea
ss
repz
cli
ficoms
cli
cwtl
mov
mov
out
or
xor
stc
mov
lods
out
orb
or
out
orb
inc
sub
jns
fwait
push
fnstsw
dec
adc
sti
jge
std
lds
jmp
pusha
pop
mov
mov
insb
popf
test
mov
xor
dec
scas
pop
test
fwait
mov
andb
cmp
dec
xchg
mov
sbb
jnp
stos
jns
add
movsb
rorb
sbb
and
insl
outsb
lret
stos
mov
scas
lods
push
fs
out
inc
into
es
add
push
or
fldl
stos
mov
out
dec
mov
fsubrl
xchg
mov
sbb
aaa
mov
pusha
pop
jb
inc
push
ficoms
dec
add
inc
das
test
lods
ljmp
lret
scas
pusha
or
add
dec
xchg
adc
mov
fisttpll
pop
mov
fisubrs
sbb
aad
fnstsw
and
push
and
icebp
leave
cmp
mov
adc
add
dec
push
lahf
jg
inc
jbe
jo
lods
icebp
dec
leave
jne
cmp
icebp
lret
std
adc
inc
jl
xchg
aad
xor
xor
imul
xor
sbb
lret
sbb
or
enter
cmp
pop
orb
push
nop
xchg
push
ljmp
dec
enter
add
enter
in
fistpll
jecxz
lahf
pop
push
shrb
mov
fwait
or
repz
ss
movsl
mov
cltd
bound
xor
lds
mov
hlt
clc
insb
pushf
fcoms
dec
dec
add
xor
adc
sbb
mov
push
jae
fistps
ss
adcb
adc
std
out
fadd
jecxz
imul
xorb
shr
je
pop
cld
jecxz
aas
inc
leave
adc
cmp
push
xor
mov
add
je
dec
adc
into
dec
repz
ret
push
cmpsb
insl
pop
and
push
rolb
in
sub
xorb
cmc
fcoms
xchg
mov
add
inc
lds
adc
inc
hlt
pop
stc
shlb
inc
mov
sbb
inc
xchg
xor
xor
subb
push
push
loop
ret
nop
mov
repz
push
xor
cmpsl
loope
cs
and
jmp
push
aad
clc
or
dec
mov
or
fstps
testb
jae
and
sub
bound
sub
cmpsb
out
fnstenv
mov
out
mov
shll
inc
out
jb
fsts
cmp
stos
mov
sarb
mov
jp
add
int3
xchg
jecxz
cld
bound
sbbl
jb
jns
mov
iret
mov
push
push
shll
push
pusha
and
and
test
xlat
and
mov
aad
out
stos
jecxz
test
inc
inc
ret
or
xor
add
jge
sarb
loope
std
cs
pop
jle
xlat
add
inc
jae,pt
repz
xor
imulb
pusha
jle
push
lods
mov
ret
outsl
cmp
gs
push
nop
call
push
lcall
add
cmpsl
sub
or
cltd
aas
cmpl
jns
xlat
jbe
dec
jg
jl
add
jnp,pt
loope
lods
sbb
add
shrl
jbe
cltd
cwtl
and
mov
ljmp
cmp
dec
xor
add
lds
int
and
adc
loopew
mov
push
mov
pop
cmp
aad
pop
fwait
lret
mov
jo
test
cmp
push
out
dec
pop
bound
arpl
rclb
leave
cmpsb
mov
push
or
and
enter
data16
mov
je
fdivl
icebp
dec
and
scas
icebp
int
pop
pushl
cs
fldcw
aaa
popa
adc
arpl
ss
pusha
ds
mov
push
inc
mov
mov
mov
lods
jae
cmp
or
pop
xchg
fists
pop
fsubrp
jp
sahf
jmp
shl
sub
push
sbbb
std
cmp
adc
xchg
test
xchg
aas
and
push
pop
in
stos
shll
enter
pop
pop
jl
dec
imul
inc
push
pop
mov
stc
ljmp
xchg
test
leave
pop
mov
xchg
xor
icebp
mov
or
pop
rorb
mov
xor
sbb
mov
movsl
mov
nop
lods
int3
lods
in
ficompl
and
orb
push
es
inc
hlt
inc
jmp
dec
jnp
xor
fldt
clc
mov
add
arpl
push
push
sub
and
mov
ss
mov
inc
pop
pop
cmp
push
out
nop
sub
outsl
insb
or
mov
out
add
xchg
pop
push
sarb
test
push
or
pop
rcr
cmc
testl
stc
adc
xchg
xchg
scas
popf
addr16
in
inc
xor
int
in
push
pop
xchg
test
int
test
movsl
or
out
cmp
movsb
push
rcl
or
pushf
out
mov
mov
pop
pop
repz
out
jbe
cwtl
jae
and
fildll
lahf
mov
mov
loop
enter
shl
mov
mov
out
in
fidivrs
fwait
es
cli
arpl
mov
lcall
pop
shll
xchg
mov
pusha
cmp
cmpsb
xchg
ret
cld
roll
sbb
dec
arpl
mov
xchg
in
daa
lds
fiaddl
sub
daa
fsubp
cwtl
lea
shlb
aad
fnstcw
aas
jge
jbe
cltd
arpl
shlb
fstp
imul
in
lcall
sub
addr16
add
xchg
push
push
mov
push
hlt
stc
ficoms
push
and
xchg
stos
xor
ret
sub
ret
loop
repnz
sbb
and
jnp
ss
sar
and
data16
enter
insb
lea
mov
pop
push
cli
pop
cmp
sbb
cmpb
sbb
rcll
xchg
jne
nop
cmp
mov
int
jge
loopne
fildll
je
sub
enter
pop
jbe
jmp
dec
sbb
push
cmp
movsb
xchg
loopne
sbb
mov
jnp
fisubs
hlt
push
sbb
xchg
dec
push
loop
push
mull
addb
inc
repz
daa
xor
movsb
int
out
jge
add
lret
xor
or
js
cmc
pop
add
jmp
outsb
push
scas
dec
mov
lret
cltd
out
jp
sahf
enter
push
inc
aaa
mov
or
push
sbb
stos
shrl
dec
xor
loop
lret
mov
xor
xchg
push
push
or
sbb
pop
add
stc
in
cmp
cld
jl
xor
test
or
xlat
xor
xor
inc
mov
mov
jo
mov
out
hlt
movsb
das
into
jb
and
fwait
xchg
push
ljmp
int3
das
dec
cs
leave
push
jnp
sbb
inc
mov
repz
pop
jbe
adc
fidivl
rclb
mov
xor
nop
leave
es
mov
cmpl
mov
push
adc
lahf
jmp
add
subb
daa
loope
ja
xchg
pop
or
aaa
adc
mov
outsl
mov
xchg
shlb
push
xor
push
add
mov
sahf
mov
xchg
clc
movsl
jae
fdivs
stc
inc
inc
jne
xchg
popa
ljmp
cmp
pop
popa
and
cwtl
notb
imul
je
sub
lcall
xchg
call
jg
mov
clc
or
fistps
pop
inc
bound
inc
mov
leave
ret
mov
gs
and
dec
or
add
mov
pushf
xchg
in
mov
fidivrs
bound
clc
or
pop
pop
xchg
bound
insl
xor
xchg
in
shlb
int
sub
sbb
nop
out
rorb
clc
repnz
repz
loop
adc
and
loopne
test
roll
pop
fdivrp
mov
xchg
sbb
fwait
clc
pop
pop
hlt
outsl
push
out
ljmp
mov
mov
sub
addr16
fwait
lds
imul
inc
push
xor
and
push
mov
fdivr
lods
push
cltd
mov
mov
or
mov
mov
mov
or
lret
hlt
fidivrs
test
jns
xor
inc
cmp
shlb
inc
push
out
pop
cld
jnp
mov
pop
push
test
pop
std
pop
scas
nop
xchg
mov
jnp
dec
aaa
sbb
lods
push
pop
or
sarl
test
dec
shlb
in
fildll
inc
add
addr16
or
cmc
xor
inc
mov
test
insb
pop
in
mov
xchg
imul
test
enter
xchg
inc
pop
enter
push
xor
mov
push
dec
mov
imul
sahf
je
addb
and
jmp
push
xor
fldcw
sub
push
xlat
ljmp
push
in
jne
les
js
ja
xchg
add
mov
push
inc
lahf
lock
add
repnz
lcall
testb
or
mov
cld
jbe
mov
or
in
jns
add
jno
mov
push
enter
inc
dec
in
je
mov
sub
int
in
adc
mov
mov
jae
xchg
inc
jl
cld
sbb
sbbl
sbb
dec
int3
mov
jb
out
xchg
xor
inc
and
shrb
add
jno
stos
or
jp
jns
jb
ret
lea
sti
test
or
xor
xchg
lods
into
imul
in
mov
in
lcall
adc
pop
lret
je
cmovnp
xchg
fldcw
subb
js
mov
pop
fsub
fstpl
icebp
movb
ret
mov
add
fidivrl
int
in
push
nop
pop
lea
and
adc
lret
inc
out
pand
fiadds
fimuls
jns
nop
lahf
jecxz
pop
jne
rolb
in
mov
dec
sahf
loopne
andl
das
xor
jb
addb
xchg
outsb
cli
inc
push
pop
cmpl
popf
adc
push
jns
push
inc
outsb
push
ja
mov
jl
lahf
mov
push
movsb
popa
add
mov
dec
mov
adc
mov
aam
or
mov
adc
xorb
stos
push
jb
cmp
shlb
lock
sub
dec
lea
lret
sbb
pop
push
jns
daa
shld
add
loop
jge
add
jge
ss
ss
dec
lahf
sar
mov
jno
popl
fdivrs
in
mov
leave
in
out
inc
pop
ffree
dec
push
jae
pusha
les
push
rcrb
fdivr
scas
push
sub
add
rorl
cmc
or
icebp
xlat
sbb
insb
into
or
cld
jg
push
lods
mov
push
xchg
and
out
cli
loopne
jmp
mov
sub
stc
adc
test
fsts
popa
xchg
sub
mov
sub
clc
fstps
dec
jo
jo
xchg
dec
mov
pop
into
cwtl
jae
loop
cmpsl
mov
and
cmp
mov
mov
test
mov
jl
jne
cmp
mov
jae
cmp
add
xchg
and
in
xchg
addr16
push
les
xor
out
shll
adc
clc
dec
or
pop
pop
fwait
dec
nop
popa
pusha
fwait
pushf
ja
andl
push
lea
mull
aaa
pusha
jle
fwait
add
or
mov
jge
mov
push
lret
add
xlat
cmpl
xchg
repnz
out
fnstcw
lret
add
xchg
sub
mov
ret
and
dec
sti
pop
xorb
cmp
sti
mov
xor
mov
pusha
mov
pop
pop
pop
jae
fildll
sub
inc
dec
or
inc
lcall
sarl
xchg
mov
push
jno
cmp
sub
jg
and
lods
lods
iret
pop
pop
test
add
sbbb
fs
xchg
mov
gs
call
cmp
lret
outsl
mov
stos
push
orl
mov
dec
xchg
cmpsb
rorl
arpl
mov
aas
out
pushf
movsb
mov
aam
mov
or
push
xor
out
cwtl
ss
or
xchg
ss
inc
and
push
cld
cmp
cwtl
in
sub
lret
xor
jnp
out
into
mov
xchg
scas
sti
push
ljmp
ja
xchg
cld
jno
push
aam
stos
inc
mov
or
cli
hlt
testl
xor
bound
imulb
push
ds
stos
in
dec
push
int
icebp
push
and
icebp
dec
aam
std
sbb
mov
imulb
push
data16
aad
into
mov
popa
and
mov
cmp
add
insb
js
xor
dec
mov
push
cltd
das
cmp
mov
leave
fs
sbb
andps
stos
cli
lods
jo
into
pop
push
inc
iret
pop
mov
dec
push
jbe
negb
test
cmpsl
xchg
xchg
lret
push
add
cmp
test
outsb
clc
outsl
loope
mov
pop
pop
inc
insb
clc
orb
jnp
lea
shll
xchg
repz
mov
clc
enter
pop
lock
ret
adc
add
test
xor
test
icebp
fs
cmp
jle
shl
fst
xor
adc
mov
test
xor
xor
jne
int3
imul
pop
loope
aad
jge
lret
pop
and
insb
ljmp
mov
pop
fwait
inc
inc
imul
lahf
push
push
xchg
aam
or
xchg
int3
in
out
fcoms
adcb
mov
imull
mov
sbb
aaa
cwtl
pusha
arpl
mov
xchg
movsb
insb
movq
nop
jno
imul
movsl
sub
sbb
inc
in
jp
out
pop
mov
cltd
and
scas
cmp
dec
insb
out
adc
mov
xor
lods
sub
mov
and
lods
incb
icebp
fldenv
lock
xor
inc
adc
sbb
inc
out
jbe
cmpsb
or
inc
std
adc
stos
andb
jae
fldenv
push
jnp
fwait
dec
mov
sub
in
adc
mov
jo
sbb
ljmp
lret
add
mov
pop
cmp
sub
mov
ja
push
pop
pop
sub
or
xorb
jl
mov
inc
inc
adc
stos
mov
adc
cmpsl
fwait
ds
hlt
out
inc
and
ss
lret
add
sub
rcll
pop
jns
mov
sub
lret
dec
mov
mov
cwtl
push
mov
jp
popf
mov
gs
sbb
arpl
popf
mov
test
testb
ds
divb
cmp
ljmp
xor
mov
sub
jl
decb
call
sarl
sti
insb
sbb
mov
jnp
in
push
pop
test
push
push
add
aad
stos
repz
int3
cmp
les
enter
push
xor
hlt
cmp
or
ret
js
cmp
ret
inc
imul
push
push
push
xchg
dec
add
dec
dec
push
lods
xchg
push
cwtl
sub
dec
daa
or
adc
mov
mov
push
mov
lcall
aas
mov
or
fildl
ret
std
fs
movsb
mov
test
cmp
es
rorl
in
stos
mov
jne
aam
hlt
jbe
std
mov
add
or
loop
les
jecxz
into
add
inc
xlat
imul
xchg
test
ret
jp
sti
pop
xchg
test
fisttps
adc
out
mov
cwtl
and
sti
int3
add
bound
outsl
fs
sub
jecxz
pop
pop
cmp
ficompl
ss
dec
xchg
sbb
dec
dec
stos
movsl
inc
cwtl
or
test
mov
and
jecxz
mov
repnz
cld
mov
ja
push
and
lahf
lods
jno
stc
mov
jle
push
cld
iret
loop
pop
es
movsl
pop
shll
loope
pop
cs
and
vmovntps
xchg
mov
shl
icebp
adc
ds
rcrl
mov
mov
or
and
xor
adc
movsl
or
dec
es
jbe
fsubr
jl
fs
lahf
pop
lahf
sub
or
pop
xor
pusha
movsl
pop
xlat
xchg
fwait
es
ror
push
dec
fs
jmp
mov
cmp
loopne
call
js
les
pop
adc
mov
shlb
aas
push
push
insb
testb
xor
push
inc
sub
push
xchg
adc
call
adc
push
ljmp
adc
les
mov
sub
dec
fcoml
ficoms
test
and
jno
cmpb
test
mulb
jbe
call
out
push
imull
fistps
loop
jecxz
cmp
sti
or
and
loopne
adc
jge
aas
add
mov
jae
aad
mov
insb
jle
iret
add
ret
pushf
pop
dec
and
loop
rolb
cmpsb
aaa
mov
adc
cli
inc
and
daa
mov
pop
sbb
pop
push
jae
mov
fidivrl
dec
mov
push
enter
ficomps
clc
add
icebp
jp
ja
divb
addr16
pop
adc
dec
nop
js
andl
sub
das
leave
inc
xor
outsl
mov
mov
pop
je
jb
dec
sub
cld
push
jno
jl
mul
outsb
pusha
or
lahf
insb
repnz
fcmovb
and
mov
pushw
mov
das
and
loope
or
push
fmul
je
stos
and
or
and
mov
into
fistps
in
loop
aad
mov
xchg
jbe
ljmp
stc
fimuls
or
adc
popf
dec
mov
test
andb
call
test
loope
imul
or
sub
fyl2xp1
mov
jmp
or
fwait
add
push
and
xchg
mov
push
or
xchg
cmp
in
xchg
imul
xor
cmpsl
imul
jb
push
pop
jns,pn
lret
int3
fstpt
scas
xchg
fdivs
fcmovne
xor
mov
push
pop
sbb
cld
iret
leave
fmuls
push
mov
out
xchg
call
leave
and
mov
add
mov
sbb
fadd
ja
sbb
inc
dec
adc
sarb
rcrl
cmpb
mov
push
fdivrs
adc
outsb
cmc
add
push
and
sub
jae
test
mov
inc
adc
es
movb
jmp
stos
pop
xor
cwtl
mov
repnz
and
jp
push
leave
shll
sub
xchg
jmp
jecxz
inc
into
int
cs
cmc
fucom
pop
add
fdivr
testb
inc
test
mov
push
fsubl
push
xor
pushl
pop
xchg
lcall
hlt
jo
ljmp
sub
jmp
mov
test
push
fiaddl
insl
mov
mov
negl
sarl
call
je
adc
andl
dec
test
add
mov
adc
mov
imul
adc
out
repnz
pop
dec
adc
push
aam
jns
push
mov
mov
pop
out
xor
jns
add
jb
cmp
orb
push
mov
jmp
lea
jle
add
mov
pop
out
pop
inc
rorl
jae
jmp
push
adc
xor
pop
inc
xlat
mov
adc
fdivl
push
test
mov
dec
xchg
jo
dec
xchg
mov
inc
mov
add
cmp
cwtl
movsb
popl
mov
mov
test
jmp
cmpb
jbe
cmp
inc
inc
dec
xor
negb
jmp
xorl
adc
call
ds
gs
sbb
ja
inc
mov
fiadds
cmp
mov
mov
fisttps
push
movsw
jne
ljmp
xor
inc
xrelease
lret
lret
cli
mov
add
in
rcrl
std
xchg
out
cs
jecxz
lds
lock
outsb
add
and
stc
xor
jns
cwtl
sbb
add
xchg
xlat
lock
clc
into
push
pusha
lock
and
aad
addl
push
lret
dec
pushf
adcb
clc
jns
ret
arpl
cld
sub
aas
mov
fsubrl
hlt
stos
mov
es
sti
negl
popl
mov
mov
in
fidivs
subb
cltd
jne
nop
xor
shr
and
xchg
sub
js
popf
cli
lret
sub
or
push
cmpsl
test
push
xchg
cs
sub
lods
add
sub
mov
jns
lea
mov
pop
jle
sbb
xchg
inc
lea
sti
daa
or
fildl
outsl
pushf
push
xchg
das
and
add
cmp
insb
mov
jmp
xor
scas
mov
addl
repz
fistpll
fdivrl
repz
cld
inc
cmp
sbbl
jb
xor
arpl
mov
call
and
pusha
or
jmp
in
adc
mov
shrb
adc
and
daa
dec
mov
cmp
mov
pop
xor
arpl
xor
sarl
push
push
scas
imul
test
cld
out
jp
shrb
ret
inc
pushf
jmp
cmp
push
insl
pop
stc
test
cmp
repnz
arpl
xor
jl
sub
mov
es
jmp
enter
pop
aas
jg
shrb
insb
addr16
leave
adc
inc
fs
push
or
shr
adc
push
lahf
cmpl
ljmp
and
cmp
cltd
out
mov
lret
dec
sub
cmp
mov
mov
push
push
and
dec
arpl
push
jbe
icebp
in
sub
decl
fadd
fbld
cwtl
cwtl
ljmp
push
aas
pop
int3
fnsave
icebp
jg
xor
cmp
pusha
dec
cmp
jl
orb
addb
adc
and
loopne
jns
cld
clc
movsl
push
mov
arpl
lret
sarl
leave
movsl
push
cltd
outsl
pushw
fisubrs
and
mov
sub
xor
mov
loop
add
in
pop
movsl
mov
and
xor
push
adc
popa
lret
clc
add
rclb
push
jo
xchg
cmp
sbb
test
outsb
movsl
jmp
fimull
mov
add
mov
mov
xchg
pop
int3
fcompl
imul
popf
cmp
push
test
incl
and
cli
sahf
les
xchg
push
fcoml
in
mov
push
push
push
jb
xor
fstl
dec
jge
data16
stc
sub
ror
sub
xor
sahf
sbb
repz
je
in
aam
and
test
push
mov
imul
out
es
pop
add
jle
inc
pop
inc
enter
mov
pushf
xor
cmp
cmpsl
icebp
cmp
and
ljmp
add
add
lcall
pop
mov
data16
inc
loop
aam
pop
outsb
sub
inc
ret
lods
sub
sbb
mov
adc
imul
sub
mov
fwait
ret
icebp
lret
mov
xchg
dec
xchg
es
ljmp
jnp
pop
dec
mov
inc
jl
clc
loop
in
shlb
add
pusha
cmp
add
ds
add
stos
cmp
cs
adc
mov
adcb
rorl
adc
es
mov
push
inc
test
add
rorb
xor
jbe
nop
fidivl
inc
adc
frstor
loope
adc
mov
in
repz
stos
outsl
cs
push
inc
mov
loop
outsl
pop
sti
sbb
dec
in
popaw
mov
negl
addr16
movsb
push
out
dec
pop
xchg
arpl
pushf
cmp
loop
jmp
sub
gs
xor
xchg
mov
cs
xchg
pop
adc
add
in
push
add
sbb
sbb
push
xchg
xchg
jno
adc
push
into
out
mov
and
add
pop
jo
jb
fs
outsb
sar
les
rclb
push
mov
ss
pushf
push
xor
inc
in
in
pop
fidivrs
adc
jno
sub
dec
scas
sub
mov
xchg
cmp
mov
rcrl
out
xor
mov
in
sub
outsl
push
add
cmp
fidivrl
xchg
jbe
orb
popf
pop
xchg
rorb
sub
pop
lcall
imul
shr
out
orb
dec
inc
adc
test
shl
sub
ret
push
and
lret
shrb
movsb
adc
fisttpl
lods
ds
lods
clc
mov
inc
pop
stos
ret
ja
mov
jecxz
jmp
mov
imul
stos
enter
pushf
push
out
adc
es
dec
inc
mov
ret
insl
shrb
lret
dec
pop
in
xchg
loopnew
adc
add
or
and
push
add
xchg
cmp
repz
cmp
roll
ljmp
cmp
jle
pop
mov
in
in
aaa
push
cmc
aas
ret
lea
dec
aad
hlt
lock
xor
clc
hlt
mov
push
test
xchg
fildll
fildll
pop
xchg
dec
lods
pop
loope
and
lods
xor
cmpsb
movsb
jo
mov
rcrl
xor
lea
shl
sbb
ret
xchg
ljmp
xchg
rcr
test
add
sbb
mov
push
dec
pop
inc
es
gs
movsl
sbb
or
daa
dec
test
fwait
sahf
ja
ret
imul
add
mov
xor
out
cmp
inc
divl
mov
cmp
cmp
jge
int3
outsl
jmp
push
shlb
cmp
loopne
repnz
lret
sub
negb
sbb
mov
in
fnsave
xor
sbb
sbb
dec
mov
sub
aad
adc
xchg
sub
pop
and
jnp
push
scas
push
mov
cwtl
mov
sbb
aad
mov
jno
adc
pop
stos
jne
cmpsb
leave
pop
or
or
push
test
mov
jb
pusha
and
add
xchg
pop
mov
repz
push
and
scas
movsb
lret
mov
test
or
scas
test
mov
mov
sbb
insl
or
and
je
xchg
cs
pop
test
sbb
add
testb
iret
xor
xor
push
jle
jecxz
push
stc
cli
roll
je
adcb
movsl
mov
mov
add
loopne
shlb
or
cwtl
scas
scas
test
in
xchg
push
out
cmp
mov
xchg
jno
test
add
fiadds
sbb
pop
add
das
shlb
fs
cmp
arpl
das
insl
std
sub
rcl
lahf
xor
movsb
into
rcrl
dec
and
jg
xchg
mov
int
jo
js
repnz
inc
dec
ret
popf
into
mov
pop
test
mov
in
loopne
cmp
mov
and
and
push
cmp
mov
incl
aas
cmpl
add
jecxz
pop
shrb
mov
lods
or
shl
lret
aas
xchg
jg
je
inc
dec
addr16
lods
mov
mov
rol
mov
jns
fadds
mov
frstor
call
or
mov
pop
or
stos
and
mov
hlt
adc
push
mov
xor
cli
pop
scas
mov
mov
push
pop
fmuls
cmpsb
imul
negb
adc
insb
aam
inc
cmc
in
add
rcll
mov
ret
add
out
and
sbb
xor
lahf
pop
mov
pushf
jge
in
lds
xor
dec
push
add
add
rcll
addr16
push
mov
sahf
push
cmpsb
cmp
xchg
or
mov
out
ret
mov
cmp
xor
inc
ss
sbb
subb
xor
jae
sbb
in
out
add
fldcw
nop
add
and
cltd
test
ror
pusha
mov
lods
imul
add
out
in
pushf
fldcw
test
and
div
rcl
pop
outsb
int3
scas
push
mov
test
pop
outsb
shlb
cltd
jne
cs
std
call
inc
mov
pusha
add
ds
fnsave
cmpb
adc
xchg
pop
fstpt
cli
mov
adc
xor
in
addl
mov
add
push
mov
xor
xchg
cli
cmp
dec
xor
das
jo
xor
ss
cmpsl
sarb
aaa
dec
int
enter
fldcw
jnp
negl
adc
inc
lock
fdivs
enter
inc
and
xchg
pusha
rclb
mov
cmp
and
outsl
or
jns
dec
aam
leave
loope
aad
mov
xor
addr16
mov
rclb
mov
lods
fdivl
push
or
sti
outsl
je
daa
test
dec
dec
xor
adc
out
mov
pop
jno
iret
dec
movsl
mov
sbb
pusha
inc
jp
ror
call
in
xchg
dec
aas
shll
rcrl
into
je
inc
sub
shrl
js
imul
iret
xchg
push
stos
dec
sbb
je
pop
addr16
roll
jge
pop
pop
outsb
push
push
push
pop
jns
jmp
or
daa
push
or
adcl
mov
ljmp
sti
jmp
add
sub
ds
mov
shrl
int
mov
push
stc
xsaves
pop
cmpsb
cmp
push
bound
fisubl
mov
aad
in
in
cmp
cmc
inc
adc
cmpsl
bound
adc
cwtl
je
push
stos
sbb
pop
cmp
mov
push
dec
cmp
in
fisubrs
jecxz,pt
bound
outsb
sbb
imul
push
ss
mov
rcr
rsqrtps
shrl
ret
cmp
cld
lahf
mov
xchg
pop
jecxz
pop
adc
sbb
aam
popa
jmp
xor
push
jo
and
sahf
jge
mov
js
fidivl
nop
flds
mov
sbb
mov
mov
xchg
repnz
mov
popa
inc
fmul
xor
mov
fildl
int
clc
hlt
adcb
push
incb
pop
cmp
cmc
ret
imul
dec
out
negl
jle
adc
hlt
les
xchg
out
pop
loopne
movsl
adc
dec
clc
dec
jo
xchg
mov
dec
jae
cmp
cmp
adc
xor
mov
jp
pop
adc
or
movsl
or
in
std
or
aad
or
dec
cwtl
out
xor
stc
jecxz
push
jb
adc
sub
lods
xor
int
add
jae
hlt
lret
adc
fmuls
and
in
addr16
sbb
jne
adc
test
mov
sahf
enter
pushf
pop
fists
jb
out
sbb
imul
imul
repz
or
mov
jmp
fmuls
sbb
push
xchg
data16
inc
push
lret
lahf
jge
pop
das
cmp
pop
adc
mov
cmpsl
or
xchg
mov
inc
int
cmp
fstl
pop
pushw
lret
cli
or
add
fnstsw
ja
add
cmp
jle
cmpsl
ljmp
pusha
inc
mov
aam
das
push
or
add
test
aaa
xchg
out
push
inc
inc
push
xor
popl
incl
imul
sbb
loope
pushf
orb
sti
pusha
mov
out
test
ja
mov
faddp
insb
inc
pushf
mov
andl
testl
stc
and
clc
rclb
cmp
ds
or
inc
fwait
adc
js
aas
cmpb
scas
incl
icebp
lcall
add
repz
sbb
or
int3
scas
xchg
xchg
enter
lock
leave
frstor
sbb
inc
inc
cmpl
dec
mov
add
test
and
jge
mov
cmp
dec
cltd
mov
fadds
mov
ljmp
adc
mov
pop
fsubs
mov
faddp
ss
xlat
xor
incl
mov
sahf
or
fcomps
xchg
stos
mov
call
add
xor
inc
ret
add
gs
out
jmp
pop
lret
cs
ret
test
cld
test
rol
sub
dec
test
xchg
stos
aaa
or
aad
push
out
push
dec
pop
int3
aad
addr16
cmp
sub
popa
mov
dec
push
sbb
dec
pop
mov
cmpsl
notb
mov
jb
mov
stc
iret
and
add
sub
aad
push
xchg
mov
leave
push
push
shrd
dec
ret
sti
in
inc
or
or
bound
loope
subb
mov
mov
cs
cs
repnz
fadds
cmp
outsb
pushf
add
in
dec
int3
cmp
jnp
adc
inc
xchg
aas
push
outsb
mov
pop
jns
popf
sbb
outsl
insb
or
cmp
pop
imul
sahf
call
pop
dec
or
mov
adc
outsb
add
mov
rcll
add
mov
sbb
jne
adc
dec
mov
xor
fst
fdivrl
cs
xchg
mov
je
pushf
gs
inc
xchg
xor
repnz
je
popa
ret
scas
ljmp
dec
andb
jge
push
add
cmpb
mov
sti
mov
mov
push
sub
sbb
push
jl
loope
inc
mov
sbb
jbe
pop
pop
mov
pop
in
vmread
imul
inc
dec
ds
popa
jmp
divl
or
aad
cmpsb
das
push
mov
lcall
add
push
cmp
sbb
incl
hlt
mov
mov
push
mull
arpl
mov
popf
cmpsl
movsb
dec
not
mov
outsl
pop
es
rcrb
in
je
into
pop
xor
xorl
ss
pop
or
lods
aam
jg
leave
aas
movb
xor
clc
sub
jbe
cmp
mov
mov
pop
popa
outsb
lock
mov
shrb
daa
xchg
out
popl
lock
jb
shll
jne
scas
adcb
jns
lods
imul
add
cmpsl
loope
or
cmpsl
lock
aas
xchg
mov
iret
bnd
xor
inc
push
sbb
sbb
pop
jg
push
mov
fs
sub
or
push
in
mov
pop
cld
lret
data16
sarl
xchg
cli
xor
mov
sub
sbb
repnz
test
jae
sbb
in
push
dec
xchg
mov
rcrl
bound
xchg
or
cwtl
xchg
ljmp
in
rcl
xchg
cmc
fmul
sub
iret
push
out
mov
scas
lods
sub
addr16
out
fiadds
js
fstpt
clc
cmp
sbb
in
cld
xlat
inc
insb
lds
bound
and
or
mov
push
fldl
push
mov
or
mov
testb
sysenter
push
dec
jp
std
xor
js
mov
in
aas
push
insl
stc
mov
pop
ss
out
mov
cli
repz
mov
jnp
sbb
lods
mov
loopne
mov
data16
lods
int3
aad
push
cld
mov
jmp
or
jle
je
add
nop
inc
out
outsl
or
adc
mov
pop
fstpt
jbe
insb
push
xchg
lret
movsl
fdivl
call
pop
sbb
jne
sub
mov
mov
sub
ror
pop
cmp
cmp
das
xchg
out
out
jmp
loop
test
cmp
shr
adc
roll
sub
sti
mov
aas
mov
cmp
aad
stos
sbb
push
std
repnz
dec
mov
dec
inc
mov
pop
sub
popf
lret
xchg
fstpl
stc
fisubrl
mov
fmull
or
sti
out
jle
outsb
fstps
aam
aaa
sbb
inc
push
inc
mov
fildll
jne
jns
test
in
pop
add
int3
mov
div
add
mov
pop
inc
test
mov
push
jo
xchg
and
sarb
pop
cli
cmp
mov
outsb
aas
sbb
pop
adc
inc
pcmpgtd
jno
mov
and
or
leave
xor
pop
bound
inc
push
pop
imul
dec
push
repz
jbe
scas
sbb
xchg
inc
push
push
push
pop
inc
xlat
in
mov
outsl
loopne
repnz
iret
mov
cs
or
and
jl
mull
int
pushf
push
out
push
inc
out
jmp
pop
jle
dec
insb
out
push
mov
ret
pushl
scas
and
in
clc
pop
add
rorb
fmull
sarl
mov
mov
inc
jo
ljmp
pop
mov
pop
cmp
jp
rcrb
mov
mov
mov
int
addr16
fdivr
inc
cmp
xchg
ja
aad
fisubrl
xchg
in
loope
adc
in
popa
cltd
cmp
shr
pop
inc
push
fnstenv
sub
int3
pop
mov
sub
cwtl
loop
ja
push
and
xor
cli
or
sbb
rcr
push
xchg
call
inc
cmp
cwtl
push
gs
sub
test
insb
ret
push
add
xchg
jb
xchg
addl
pop
xchg
push
dec
push
je
lock
xor
cmp
jb
lahf
gs
out
pop
mov
xchg
daa
mov
mov
clc
push
xchg
xchg
xor
mov
xchg
jg
sub
pxor
or
fbld
std
xor
mov
std
cmp
pop
sub
xchg
push
or
fs
sbb
repz
aam
incb
xchg
push
jo
inc
jbe
and
in
imul
mov
push
cld
aas
mov
cli
dec
repz
arpl
inc
sub
add
js
mov
xchg
sahf
xchg
push
icebp
sub
jmp
fcmovne
xchg
mov
test
test
lret
aaa
nop
jl
pop
js
fwait
push
jle
es
pop
pop
and
mov
cs
test
sub
pop
decl
fdivrl
out
or
pusha
and
inc
and
ds
stc
imulb
push
jno
sub
push
rcll
gs
loop
int
ja
fsubrs
fld
xchg
push
loop
ss
or
fwait
and
pop
loopne
pop
cmp
rcrl
arpl
mov
hlt
inc
mov
inc
pop
pop
mov
adc
inc
mov
mov
popa
and
jecxz
or
xchg
jge
jae
out
adc
cmp
mov
mov
xlat
es
dec
leave
mov
lcall
mov
jae
insb
inc
xchg
outsl
jnp
sub
pop
inc
cmpsl
in
mov
and
jle
cs
fcompl
call
pop
xchg
mov
test
stos
lcall
out
and
mov
xor
js
imull
xchg
stos
mov
dec
lods
cmp
out
imul
add
out
filds
lea
lret
jb
jle
xor
js
cmp
test
cmpsb
repz
fs
ret
sub
jp
pop
enter
aam
sub
inc
push
inc
ret
mov
sub
int
cmc
adc
xchg
fmulp
in
push
call
ds
jns
out
add
sbb
pop
popa
aaa
sbb
cmp
cmpsb
movsl
aad
add
mov
pop
xchg
repz
int3
negl
xchg
pop
lea
mov
jg
push
mov
sarl
std
mov
pop
loop
jp
aaa
outsl
fs
dec
pop
outsb
cmpsb
test
inc
and
xchg
int3
jmp
daa
inc
dec
mov
in
in
push
sub
sub
lods
scas
cmp
dec
paddw
xor
add
or
and
clc
add
test
cmp
jnp
stos
sbb
fwait
sbb
imul
dec
subb
fucom
jmp
lret
adc
movsl
cs
out
les
xchg
jecxz
pop
mov
xchg
mov
push
push
mov
sbb
adc
addr16
sbb
cld
pop
inc
or
cmp
inc
sbb
and
jg
mov
adc
xchg
cltd
mov
dec
aaa
test
push
xchg
pop
das
sbb
jle
pop
iret
cmc
mov
movsb
cld
push
or
les
sub
js
jle
mov
pop
es
or
test
in
xor
mov
push
pushf
inc
cld
xchg
lret
ret
xchg
jp
sub
inc
push
out
daa
and
notl
addb
call
dec
xchg
mov
mov
jecxz,pt
movsb
insl
jns
mov
shl
sub
pop
xlat
dec
arpl
aaa
enter
pop
test
sbb
rcrb
dec
cltd
rorl
xlat
lret
adcb
rorb
lcall
sbb
fcmovne
jp
fisubs
mov
xor
xor
pop
mov
ds
mov
aaa
cmp
add
nop
in
jae
adc
xor
adc
cmpsb
clc
rcr
jnp
imul
ja
andl
mov
mov
dec
cmpl
orl
sbb
pop
arpl
xor
leave
cmc
xchg
xchg
imul
loop
pushf
dec
push
rcrb
add
incb
insb
test
and
xchg
lods
xchg
add
data16
lea
push
mov
cwtl
inc
incl
mov
cwtl
addr16
xlat
dec
insb
sbb
add
xchg
icebp
scas
popa
shr
in
fwait
pop
or
fs
andb
or
adc
pop
inc
or
cmc
mov
stos
ret
movsb
pop
fs
xor
pop
fadds
mov
xchg
cmpsb
inc
add
adc
lret
lcall
imul
aas
xchg
nop
cmp
dec
js
xor
xor
out
inc
test
jecxz
jge
push
pop
dec
mov
mov
xchg
lcall
dec
idiv
jns
mov
mov
inc
inc
jno
into
mov
movsb
cs
xchg
jmp
pop
push
mov
std
or
sbb
pop
jb
mov
pop
mov
mov
popa
push
shll
jmp
stos
sub
popa
adc
adc
mov
push
inc
xchg
mov
adcb
dec
pop
xor
mov
xor
aaa
adc
push
mov
mov
push
pop
enter
ja
inc
xchg
mov
add
pop
sbb
ret
mov
xor
adc
ret
xor
sub
adc
clc
out
test
cmpsb
and
fwait
jbe
jp
mov
add
and
xor
fldcw
mov
lcall
add
jbe
inc
xchg
and
pop
or
daa
mov
lahf
mov
dec
mov
or
mov
jae
jb
mov
add
push
xor
xor
mov
imul
mov
pop
dec
mov
cwtl
cmp
sbb
andb
fisubrs
jne
push
dec
xchg
jmp
nop
movsb
pop
rorl
pop
xchg
push
cwtl
push
dec
enter
addr16
jb
je
push
inc
shll
xor
fimuls
mov
cltd
xchg
jae
adc
or
fwait
test
mov
cmpsb
ficoms
or
jb
jle
xchg
mov
ljmpw
aam
ret
jbe
jmp
ss
mov
adc
mov
ret
aam
das
inc
and
pop
pop
xor
mov
imul
fbstp
or
arpl
mov
icebp
in
pop
adc
mov
pop
icebp
lahf
lret
mov
jns
cmpsl
or
push
rcrl
cmp
lock
out
cmp
in
arpl
mov
int
cmc
and
jbe
mov
test
sub
scas
addr16
xchg
jns
or
mov
fwait
mov
mov
clc
aas
and
dec
and
out
addr16
sar
in
out
mov
jle
mov
add
in
lods
in
inc
lods
xor
push
mov
add
xor
or
popf
add
cld
cmc
rcll
xor
test
pop
aam
and
push
push
mov
call
jl
sub
xchg
in
mov
adc
mov
inc
enter
inc
dec
pop
ret
stc
inc
push
iret
into
xchg
lahf
enter
mov
inc
or
shl
dec
mov
into
lds
push
stos
inc
inc
xor
stc
inc
fistl
sub
je
rorb
inc
add
or
stc
pop
out
push
push
jb
jae
dec
push
mov
jns
mov
ficoml
enter
lcall
mov
jle
jp
sbb
cwtl
jmp
data16
sub
pop
adc
rolb
push
adc
sbb
insl
idivl
int
jno
jmp
jg
pushf
fsubl
jae
mov
popf
xchg
push
lods
xchg
mov
insl
icebp
mov
in
push
scas
frstor
addr16
xchg
shll
std
or
xor
mov
sub
nop
mov
mov
pop
mov
fcoml
out
lret
test
mov
jns
lds
nop
cltd
mov
push
paddd
dec
pop
out
lods
dec
mov
xlat
push
push
and
in
mov
fcmovne
iret
call
lods
roll
ds
icebp
mov
and
mov
ret
stos
xor
pop
xchg
lret
loop
subl
xor
iret
lods
mov
mov
imul
add
mov
xor
mov
pop
pop
inc
inc
push
loopne
dec
and
push
repz
cli
je
push
in
or
mov
cwtl
call
push
imul
daa
xchg
xor
or
pop
xchg
popa
sub
call
inc
mov
jg
mov
nop
pop
or
mov
js
sub
jecxz
mov
pop
out
iret
inc
and
dec
cmp
pop
push
lds
push
outsl
sahf
or
stc
mov
mov
mull
cltd
enter
stos
ljmp
enter
in
mov
sarb
sahf
sahf
mov
ds
lcall
jnp
std
add
shll
mov
std
gs
loop
cli
sub
out
mov
scas
rorb
pop
stc
jp
out
inc
shll
jo
iret
xor
jg
fcomi
scas
jp
push
and
clc
shlb
outsb
ret
fsub
or
sub
sahf
outsl
jne
lcall
nop
in
cli
xchg
inc
aaa
repnz
and
push
xlat
adc
leave
cmp
stc
imul
clc
lea
sub
mov
or
add
pop
mov
sbb
scas
imul
cltd
jo
cld
loop
fimuls
jge
sub
cmp
stc
add
xchg
repz
and
pop
lret
data16
int3
aad
pop
dec
pop
pop
stc
mov
and
dec
add
push
pop
pop
adc
lret
cmp
cmp
xchg
xor
dec
cmp
popa
cmp
add
scas
mov
cmp
and
jmp
mov
inc
or
inc
movsl
xor
dec
mov
clc
lret
lret
jbe
test
rclb
sub
test
xchg
adc
jg
mov
jo
dec
pop
pop
push
test
adc
pop
lret
xlat
in
adc
cmpsl
push
stc
jae
scas
push
jl
and
lods
jmp
and
push
in
movsb
in
mov
rcll
in
jmp
testl
pop
dec
mov
sub
jge
in
xlat
sar
sbb
sahf
test
adcl
mov
std
xchg
mov
jge
cltd
xchg
mov
dec
jno
adc
test
ror
push
mov
add
or
jmp
call
das
icebp
out
int
aad
mov
push
dec
dec
cmpsb
out
insl
lods
mov
inc
xlat
filds
mov
pop
pop
xchg
sbb
std
push
mov
std
sbb
and
mov
sbb
dec
xchg
out
cld
insl
mov
sbbl
and
push
jmp
and
or
lock
lea
js
jl
int
hlt
cmc
xchg
adc
jmp
stos
inc
jmp
cs
xchg
mov
jae
fnstcw
inc
hlt
fucom
jno
mov
std
pop
and
iret
pop
bound
xor
ljmp
adc
mov
mov
daa
sub
xchg
ljmp
in
test
addb
sbb
test
adcl
push
add
adc
pop
add
inc
test
js
scas
pop
pop
inc
ja
jge
sbb
fwait
push
xor
jnp
rorb
sbb
es
add
xchg
bound
push
das
dec
gs
inc
xchg
mov
popf
and
dec
inc
outsl
dec
sbb
xor
and
rorl
sahf
sbb
jmp
inc
adc
test
and
mov
jp
shrl
testb
test
dec
add
lds
xchg
test
push
xchg
mov
imul
icebp
fisubrs
sub
lds
outsl
in
jp
in
sub
lods
add
adc
push
inc
lcall
scas
test
jae
mov
jmp
repz
lahf
test
sub
sahf
addl
xchg
xchg
scas
js
call
jne
mov
cld
inc
and
cs
and
mov
jno
cmc
das
mov
ret
jnp
ss
ja
jo
idivl
mov
cmp
je
xor
addl
mov
dec
rcrb
es
inc
hlt
mov
pop
bound
push
sahf
cmpsl
cmp
fldenv
mov
stos
lcall
or
xor
adc
or
lret
frstor
das
inc
jl,pn
push
enter
ret
sub
int
lds
es
aas
mov
cmp
mov
dec
outsl
ljmp
pop
aam
cmp
lock
mul
in
xor
das
xchg
add
inc
rcrl
adc
enter
mov
inc
push
push
cmp
sbb
and
pusha
xor
and
push
jmp
jb
popl
xchg
out
fimuls
out
les
icebp
xlat
push
cmpsl
cmp
addr16
xor
scas
repnz
out
sahf
enter
inc
inc
sahf
fwait
movsb
xchg
dec
std
mov
movsb
hlt
pop
repnz
jnp
arpl
in
cltd
dec
inc
and
lea
daa
dec
jp
jb
xor
xchg
cld
lret
mov
hlt
add
in
xlat
ss
lods
aas
fs
fnsave
push
mov
out
mov
test
mov
scas
cld
aaa
and
pop
sbb
popl
mov
jno
std
mov
lds
sbb
popa
shll
pop
out
xchg
jbe
mov
sbb
arpl
mov
push
sti
add
mov
jno
outsb
imul
orl
inc
push
dec
test
test
aas
push
jo
arpl
test
fsubr
cmp
push
stos
mov
lcall
test
cmp
xchg
push
dec
fwait
pop
mov
lds
mov
or
push
mov
cmpb
aaa
mov
das
mov
negb
inc
cmp
rorl
clc
lcall
sub
push
popa
fsubrs
das
push
cmp
outsl
mov
fs
shll
fs
shl
movsl
inc
xor
imul
push
leave
push
jno
push
mov
fldenv
les
scas
lea
iret
daa
push
das
jle
jp
ds
nop
dec
cmc
lock
insb
scas
inc
cmp
push
sbb
dec
inc
or
mov
in
xor
subb
lds
iret
add
pop
cmp
lret
push
rorl
andb
in
push
sahf
xchg
outsl
cmc
ss
andl
push
lahf
cmp
mov
and
cwtl
sub
jmp
int
daa
adc
loopne
nop
insb
out
inc
aas
fisubl
push
imul
aas
sbb
movsb
pop
jg
sti
insl
mov
ss
cli
jnp
adc
jge
mov
in
push
or
jbe
aas
addb
insl
dec
fisubl
mov
loop
mov
scas
push
and
inc
inc
fwait
cld
sub
rorl
jae
push
inc
inc
test
mov
dec
ja
sarb
add
jnp
loopne
mov
stos
repz
inc
fidivl
aas
mov
test
fisubs
cmpsl
mov
enter
jmp
shlb
add
es
fcmove
rcll
icebp
pop
or
insb
cmpsb
dec
mov
or
sub
imul
flds
out
das
sbb
std
and
out
jb
and
xchg
das
mov
jle
fiadds
lods
cmpsl
inc
in
dec
mov
insl
xor
xor
adc
pop
mov
ret
aas
or
gs
ljmp
jl
leave
push
pushf
jge
test
mov
mov
pop
push
xchg
mov
into
sbb
pushf
in
cmp
mov
mov
clc
mov
dec
add
fwait
jno
cmp
sub
sub
push
gs
stc
lds
mov
adc
imul
and
adc
ljmp
sbb
xor
testb
sti
or
jecxz
jecxz
pop
jnp
cmp
push
jae
cld
mov
pop
stos
or
lret
hlt
stos
adc
and
stos
out
add
flds
xlat
or
repz
mov
mov
mov
jno
ror
lret
jg
test
aam
gs
sub
in
imul
xchg
nop
xor
popf
mov
imul
ss
push
xlat
sub
inc
mov
mov
pop
jg
nop
inc
repnz
jg
in
ret
aad
push
mov
sbb
aas
mov
scas
mov
jns
mov
jb
mov
jecxz
call
cwtl
inc
add
mov
add
dec
hlt
shll
nop
sbb
xchg
imul
push
cs
arpl
dec
mov
fcmovne
fildll
cli
out
rcl
sub
movsb
sbb
shl
cli
xchg
mov
rcll
mov
cmp
add
fisubrs
std
in
shll
and
lock
cmp
dec
outsl
sub
pusha
adc
or
push
jb
xchg
movsl
and
mov
sbb
dec
add
cmp
xchg
jnp
pop
test
xchg
enter
xchg
std
iret
dec
ficoms
ficoml
and
enter
xchg
lods
jge
pop
dec
inc
popa
pop
cmp
push
ds
cmp
lds
cmp
jnp
in
add
ds
sub
jns
mov
and
adc
pop
push
jb
and
jno
push
jns
test
pop
sti
sbb
jle
sub
push
or
gs
xchg
mov
fistpll
inc
pop
lss
cld
hlt
test
ret
cmp
fisubs
into
mov
pusha
adc
repz
loopne
mov
scas
sub
mov
int
jbe
and
xchg
in
gs
jecxz
push
adc
lock
insb
dec
cmc
rcl
cs
test
xorb
inc
aad
ret
clc
adc
stc
mov
xor
cmc
pop
mov
rep
paddd
add
mov
and
cmpb
mov
adc
stos
out
push
rcll
push
cmpsl
cmpsl
dec
jb
loope
pop
sub
inc
jo
rcrl
outsl
sbb
and
sbbl
ds
mov
insb
sub
pushf
scas
insb
rcrb
and
mov
and
jnp
repz
jmp
sub
lcall
arpl
xlat
or
fcoml
sub
inc
inc
lods
out
pop
lods
adc
dec
cvtdq2ps
test
mov
lock
sbb
push
cwtl
fbstp
mov
aad
mov
push
xchg
xchg
iret
sbb
inc
sub
adc
cmp
jae
jge
paddq
pop
mov
ficoml
mov
and
loope
jo
xchg
pushf
sbb
xchg
or
shll
lcall
imul
push
imul
mov
mov
sbb
ror
and
xor
mov
pop
mov
stos
sbb
aad
mov
mov
ret
and
pop
push
aaa
ja
idiv
ljmp
clc
fs
into
jb
jns
loope
xor
sub
cli
mov
mov
imul
lret
inc
lods
mov
sbb
cmp
ja
cmp
out
jecxz
add
inc
sub
test
out
mov
adc
pop
mov
ret
mov
stc
ja
in
aad
sarb
aaa
sub
pop
push
mov
xor
mov
fcoml
push
add
mov
out
xchg
push
shlb
clc
rorl
mov
mov
fsubr
pop
fnstenv
inc
jg
nop
fnstcw
push
jl
je
scas
mov
out
cli
iret
jle
mov
or
sub
xchg
mov
hlt
mov
pusha
in
inc
cmp
mov
decb
into
mov
mov
mov
test
jmp
data16
adc
seta
pop
xchg
test
sbb
dec
int
xlat
insl
xor
inc
mov
fcomp
out
repnz
cmc
aaa
lret
subb
loop
jle
jne
cmp
in
mov
jecxz
cld
stos
pop
stc
sbb
dec
mov
mov
adc
and
or
mov
dec
out
je
lods
mov
pop
cltd
popa
sub
js
movsb
out
movsb
lods
add
lods
das
test
inc
in
dec
iret
in
pop
lds
hlt
mov
outsb
mov
sub
xor
icebp
ja
movsl
cwtl
pop
mov
push
movsb
cmp
cmp
xor
aaa
loope
inc
lahf
inc
sub
mov
loop
add
adc
lds
cmp
mov
test
sbb
test
popf
cltd
push
cld
xor
xchg
jg
cld
movsb
cltd
lds
push
aam
add
mov
fisubs
mov
iret
movsb
mov
rolb
jecxz
xchg
test
push
xchg
mov
fistps
jne
push
jne
mov
imul
push
or
sbb
xor
mov
pop
mov
cltd
mov
imul
mov
push
sahf
or
cmp
das
sbbl
xchg
mov
adc
pop
ret
gs
xchg
dec
jnp
add
fdivl
jae
int3
cmc
in
push
cs
outsb
std
fildl
lahf
loop
mov
cmp
sahf
pop
xchg
and
adc
jmp
pop
mov
sub
pop
mov
rcrb
cmpsb
add
out
cmp
add
jl
fisttpll
push
in
stos
jmp
dec
cmp
sahf
ja
add
lock
clc
pusha
mov
enter
scas
mov
dec
dec
in
mov
popa
imul
cmovge
and
in
mov
push
push
or
push
mov
loop
test
inc
je
and
xlat
fmull
fs
push
or
lahf
int
pushf
or
movsb
xor
sarl
xchg
mov
insb
lret
jmp
test
mov
mov
aaa
inc
imul
mov
jns
xchg
xchg
and
xor
arpl
data16
inc
sbb
push
mov
repz
mov
mov
outsb
and
pop
fisubrl
gs
in
test
inc
dec
icebp
push
mov
and
adc
in
clc
mov
mov
sbb
mov
cmp
add
loop
fs
xor
in
jle
sar
sub
push
add
xchg
lods
scas
mov
scas
or
dec
pop
cwtl
sbb
subb
sub
xchg
jmp
sub
jp
cmp
push
nop
cld
sbb
repnz
loopne
adc
fdivl
ret
xor
mov
mov
add
or
push
aam
xchg
cli
in
jp
jae
adc
cmc
pop
cwtl
int
stc
jnp
fcomps
out
lds
leave
je
cmpsb
cmp
inc
push
mov
jae
out
dec
adc
inc
adc
jge
sbb
lea
orb
fsubr
hlt
mov
imul
dec
fdivl
sub
jb
push
mov
mov
jnp
adc
and
nop
popl
int3
lock
pop
inc
push
movsl
jbe
dec
pop
push
in
sub
subl
inc
outsl
add
loopne
and
rcll
lret
add
dec
jmp
jb
mov
xchg
js
ja
cmpsb
xchg
pop
filds
mov
test
lock
inc
jp
dec
or
mov
cltd
jne
pop
jp
rcll
insl
fs
xor
decb
divl
movsb
mov
out
push
addb
inc
or
push
lcall
rolb
movsl
xor
push
jl
mov
out
push
stc
outsb
movsb
insl
adc
mov
pop
stc
pop
dec
add
mov
dec
cs
jne
fimuls
mov
rcrl
add
cmpsl
int
jno
pop
mov
data16
jnp
jecxz
iret
jne
jl
loopne
add
push
es
mov
inc
imul
cmpsb
push
in
les
jl
pop
push
ror
sub
mov
es
mov
test
cmc
adc
out
cmp
jecxz
decl
out
push
cmp
inc
add
jnp
inc
xor
cmc
cmpsb
mov
or
sub
cmp
sub
mov
add
sbb
mov
popf
aam
aaa
mov
lea
adc
aas
and
mov
lock
arpl
imul
inc
mov
mov
jns
xchg
mov
inc
sbb
js
sub
out
cmp
inc
or
add
or
rcr
cmpl
imull
jmp
fwait
xor
sub
jbe
xchg
ss
cli
shl
sbb
inc
inc
dec
dec
cmpb
mov
addr16
adc
scas
jbe
dec
sub
lea
adc
sbb
std
mov
fdivs
pop
js
outsl
dec
sbb
add
jg
cmp
add
ds
clc
sub
push
xchg
rcr
xchg
in
adc
mov
lahf
adc
or
inc
dec
outsl
inc
out
cmpl
pop
or
dec
push
ret
test
adc
int3
jecxz
mov
sti
adc
ja
sub
fisubrs
or
out
mov
jb
mov
sub
xchg
xchg
xchg
push
xchg
adc
rorb
add
shlb
push
insb
lret
dec
dec
mov
mov
fs
or
xchg
out
loopne
jp
jmp
push
mov
sbb
mov
pop
lcall
dec
adc
into
lock
shlb
mov
xor
cmp
mov
fld
outsl
psubusw
test
and
in
xadd
adc
push
test
push
dec
add
int
mov
mov
add
xor
test
mov
adc
mov
lahf
sarl
adc
repz
jge
jmp
xlat
mov
cld
or
and
mov
or
int
iret
xor
sarb
int
cmpsb
mov
or
or
push
cmp
inc
sub
stos
mov
xorb
and
push
xor
mov
outsl
in
fisttps
dec
icebp
fdivrs
sti
aad
adc
out
fcmovnbe
jae
mov
inc
mov
int3
push
mov
addr16
jmp
cmp
xchg
subl
or
insl
jmp
pop
mov
call
loope
mov
cmp
in
cmpsb
mov
leave
sub
inc
or
in
scas
js
add
push
adc
outsl
jge
lcall
lcall
int
mov
sarl
in
imul
insl
cmp
stos
xchg
xor
and
lock
imul
jg
out
loop
andb
or
sub
push
andb
mov
add
les
cld
xor
cwtl
inc
cmc
sbb
cmc
xor
clc
jno
out
jne
or
mov
pcmpgtd
pop
out
sub
cld
and
jae
in
mov
repnz
fs
pop
pushf
cmp
xchg
out
pop
sub
mov
or
pop
jecxz
movsl
xchg
push
rcll
mov
jne
loopne
dec
punpckhwd
dec
push
out
test
mov
or
fst
push
in
and
sub
sbb
insb
xor
adc
popf
std
jp
fbld
push
fsubrl
or
out
loop
push
cmp
popf
cs
push
xchg
test
or
jns
int
stos
mov
out
test
mov
ljmp
movsb
sarl
mov
and
mov
shlb
cltd
outsb
repz
or
test
popa
jl
cltd
mov
ret
jb
popf
test
sub
adc
ja
sub
cltd
scas
mov
adc
dec
pop
xchg
mov
out
push
xchg
aas
sarb
test
adc
subl
jle
rorl
dec
dec
dec
sbb
movsb
rolb
jns
movsb
and
and
adc
lods
xor
daa
popa
cs
adc
mov
xchg
or
adc
jp
jno
testb
cmpsl
fdivr
dec
dec
xchg
xchg
lcall
out
std
andb
jnp
lret
jecxz
cmp
jbe
mov
pop
sbb
popa
pop
hlt
dec
push
js
fsub
int
mov
inc
jae
int
hlt
mov
xor
xlat
sub
popa
jmp
jo
push
dec
jl
inc
js,pt
mov
push
cmp
int3
jge
lea
stc
sub
fs
push
dec
imul
xchg
fnstcw
adc
mov
mov
cltd
push
and
xchg
test
ss
jo
mov
arpl
and
mov
pop
repz
pop
pop
test
cmp
sbb
jl
dec
jecxz
ds
lcall
or
mov
ret
xchg
cmp
mov
push
mov
push
sub
out
sbb
pushf
pop
movsb
inc
icebp
cli
sbb
stos
mov
stos
push
mov
cmc
xchg
outsb
cwtl
and
mov
lods
and
orl
lcall
mov
mov
push
and
repnz
sbb
in
in
pop
pop
jmp
xchg
sarl
push
mov
es
or
sub
mov
inc
add
sahf
es
mov
mov
loope
imul
inc
cmp
lods
ljmp
push
sbb
test
dec
movsb
xchg
and
cs
adc
pushf
xor
pop
mov
jo
dec
pop
ljmp
sub
or
lds
scas
jns
and
mov
bound
push
ret
ret
adc
test
idivl
dec
adc
jle
aam
loope
mov
cmpl
fcmovbe
inc
jp
loopne
cli
lods
sti
mov
stos
lret
cmpsl
pop
pop
nop
mov
jmp
sub
ljmp
add
xor
scas
sti
std
push
dec
mov
mov
jmp
or
ret
mov
push
hlt
scas
inc
ds
outsw
xor
pop
mov
push
das
inc
push
pop
aad
jnp
int3
dec
jecxz
jno
stc
cmp
ja
push
inc
cmp
in
xor
nop
or
mov
mov
cmc
loope
add
mull
push
movsb
xchg
pushl
pop
jmp
ret
push
cmc
hlt
cmpsb
aas
jl
movsl
pop
aaa
sub
stos
rcr
inc
outsl
mov
leave
mov
loop
and
insb
mov
xchg
xchg
lods
fidivrs
cwtl
jnp
lret
adc
xor
bound
call
push
jae
inc
mov
push
cltd
and
add
sar
pop
leave
ret
enter
lea
leave
fbstp
mov
jae
mov
out
aaa
clc
mov
mov
add
jmp
in
mull
push
imull
cmp
xchg
push
xchg
xchg
aad
xor
stos
jne
or
dec
das
pop
out
adc
inc
insl
mov
dec
in
insl
jge
inc
gs
mov
bound
mov
mov
mov
xor
xchg
push
fcmovnb
dec
sub
xchg
pop
push
sahf
movsb
and
pop
push
test
subb
stos
pop
xchg
inc
sti
xchg
imul
pop
test
insl
out
and
jbe
mov
mov
dec
ror
stos
das
or
push
and
cmpsb
xchg
fildl
popf
sbb
or
xchg
mov
dec
adc
xor
add
xlat
iret
xor
scas
sbb
nop
add
aaa
cmc
sub
arpl
mov
xchg
sub
jne
xchg
loope
imul
pop
scas
test
mov
dec
push
stos
or
dec
mov
flds
xor
inc
mov
and
insb
mov
addr16
jp
push
cs
sbb
xor
and
in
int
pushf
cwtl
shlb
imul
jb
and
cs
insb
insb
stos
or
fidivs
pop
jecxz
push
xor
inc
adc
jno
dec
cmp
fcoml
imul
mov
pop
aas
xor
cmp
jnp
addr16
push
adc
mov
mov
jae
xchg
xchg
push
mov
out
ud2
add
mov
cmpsl
jns
repnz
sbb
je
incb
ret
frstor
enter
sub
inc
push
lods
cmp
sarb
mov
cmpsl
test
leave
mov
insl
pop
iret
xchg
mov
enter
push
iret
sarl
inc
push
cmp
push
icebp
sub
ror
pop
cmp
push
mov
dec
mov
inc
aas
insb
xchg
test
add
mov
int3
out
mov
out
jae
out
stos
xor
mov
mov
fs
pop
xchg
pop
jg
sub
push
clc
push
cs
pop
sub
mov
and
mov
sbb
out
in
cmp
xchg
mov
mov
imul
mov
das
lds
neg
cmc
dec
mov
nop
jne
loopne
icebp
dec
push
jbe
sub
inc
inc
aam
and
ret
push
decl
cmp
popf
jne
jp
mov
jnp
cmp
ljmp
adc
enter
jg
repnz
push
mov
sub
pop
fs
ljmp
rorl
movsl
jmp
daa
movsl
sti
mov
nop
cmp
js
test
dec
mov
scas
or
push
popf
rolb
ds
cltd
dec
fdivrl
insl
mov
jno
inc
add
mov
nop
scas
lods
dec
popa
add
mov
xor
subl
jle
aad
and
pop
jl
or
in
out
jl
dec
fs
sub
rcrl
jno
test
aam
and
pop
test
test
test
sub
imul
push
shlb
lcall
dec
pop
adc
mov
push
stc
adc
dec
ja
inc
jge
scas
scas
xchg
fcoms
cmp
fld
hlt
dec
call
fcompl
mov
mov
pop
dec
add
and
inc
jo
jb
sbbb
xor
insl
test
leave
dec
inc
stos
scas
inc
mov
jae
or
xchg
sub
fsubrp
dec
ret
rcrb
das
jecxz
test
fldlg2
sub
inc
jb
lea
cmpsl
data16
inc
fcmovnbe
cmpsb
or
paddusw
enter
mov
mov
enter
movsl
xor
popa
jae
lea
arpl
xor
int3
test
mov
insl
jbe
into
rcr
or
in
fldcw
shrb
pushf
mov
sub
push
andl
loop
outsb
mov
xor
and
dec
cmp
add
loopne
loop
or
lahf
pop
sahf
inc
add
ficomps
stos
cmp
push
in
or
in
cmpsl
adc
and
test
xor
lock
and
cmpsb
or
jnp
sub
jecxz
mov
aam
jge
sub
js
inc
rcrb
in
dec
mov
jg
aas
sti
push
lock
inc
and
or
xor
mov
xchg
lds
dec
pop
shrl
testl
stc
es
mov
cmp
dec
dec
fnsave
mov
insl
lret
cmc
fwait
mov
cltd
xor
pusha
or
sbb
or
adc
adc
mov
xchg
dec
and
test
nop
outsl
dec
sbb
xchg
add
cs
jbe
pop
mov
xor
mov
out
sbb
or
cmp
xchg
repz
xchg
cmp
hlt
mov
mov
fsubrp
insl
adc
out
push
mov
hlt
fstpl
mov
mov
pop
xor
fcmovnb
shlb
aas
and
enter
arpl
pop
std
pop
jle
mov
push
mov
fnstenv
cmp
or
mov
pusha
or
fwait
ds
adc
leave
add
cli
ja
mov
repnz
daa
mov
out
or
repz
jb
pop
sbb
xor
loopne
dec
jae
faddl
push
ret
dec
sbb
test
sub
adc
pop
mov
mov
push
xchg
into
and
xor
sbbb
int
fwait
inc
mov
ret
mov
repz
lahf
xchg
adc
push
cwtl
mov
xor
pusha
mov
in
lea
cmpsb
xor
sub
jb
xchg
lds
mov
xlat
je
pop
ffree
sar
loopne
or
icebp
inc
jns
mov
mov
adc
repz
sub
lods
dec
ljmp
jmp
cld
xor
push
push
ljmp
adc
add
and
cmp
out
cld
cmpsl
pop
or
push
jmp
xor
ljmp
sbb
xchg
fldcw
mulb
xchg
ss
bound
push
xor
add
cs
mov
cmpsl
in
xor
fs
js
in
fldt
and
int
mov
mov
rsqrtps
jns
ret
int3
ds
and
xor
repnz
je
mov
mov
ss
int
cmpsb
pop
repz
sub
lods
add
stos
pushf
mov
stos
sbb
pop
and
add
mov
je
icebp
sbb
or
loopne
in
divl
jb
ljmp
mov
push
mov
repz
jecxz
rolb
mov
out
xchg
dec
or
jno
out
shll
dec
xchg
pop
add
jmp
pop
cs
ficompl
sub
push
test
jge
or
fnstsw
jmp
mull
mov
cwtl
dec
int3
push
dec
inc
shl
dec
jo
and
cmpl
dec
pop
xlat
add
subl
imul
clc
adc
mov
adcl
jl
cmp
lods
mov
mov
fldl
cwtl
mov
js
testb
or
lods
and
cmp
mov
push
bound
xor
xchg
cmp
ret
xor
pop
movsb
inc
sbb
fistpl
jnp
pop
inc
in
stc
ss
adc
or
icebp
imul
iret
mov
mov
push
mov
notb
test
pusha
popf
sub
adcl
fld
xor
push
pop
mov
rolb
jo
mov
push
mov
mov
adc
pop
mov
and
test
push
push
sti
adc
les
fadds
or
xor
outsb
lock
dec
sbb
cmpsl
mov
imul
xchg
out
or
dec
and
jbe
fwait
xchg
mov
xchg
lahf
outsl
stc
cmp
mov
adc
xor
sub
mov
ja
push
add
push
repnz
jl
xor
cmp
cmp
int
daa
xchg
cld
sar
inc
cmp
lds
dec
enter
int3
es
or
lahf
adc
ret
idivb
mov
lcall
out
xor
shlb
cmpsl
stos
push
cmp
jb
ds
mov
cmp
push
imulb
in
adc
shr
imul
out
pop
sub
and
andl
and
mov
xchg
and
sti
add
add
repnz
mov
pop
sbb
js
mov
push
rol
and
push
and
and
push
inc
inc
ljmp
xchg
mov
sub
ffreep
pop
test
mov
out
iret
into
pop
and
sub
mov
lods
add
xor
in
jecxz
cmp
arpl
xchg
push
movsl
repz
xor
iret
mov
sub
dec
jge
sbb
xor
add
xchg
xor
sbb
shrl
pop
imull
lret
adc
adc
test
mov
sub
test
dec
fnstsw
mov
cmp
sbb
ljmp
daa
inc
jae
add
test
lods
out
jae
loope
js
lret
push
cmc
std
jg
xchg
cld
ret
mov
xchg
cltd
sub
add
lret
ret
xor
lock
xor
in
roll
insb
dec
xchg
js
xor
lods
stos
dec
xchg
fucomip
std
cwtl
jg
adc
sub
and
cli
cmp
pop
ds
das
xchg
mov
mov
testl
shll
sbb
push
call
je
fcoml
movsb
enter
mov
mov
sbb
sarl
add
sub
leave
movsl
inc
fnstsw
mov
loope
loope
sbb
inc
test
lods
push
dec
mov
mov
pop
mov
cmp
int
cs
les
pop
out
outsl
push
mov
jmp
add
sub
leave
nop
sahf
adc
and
in
aaa
xor
dec
ja
das
sti
mov
jecxz
xchg
push
popf
adc
or
mov
inc
imul
mov
xor
cwtl
push
add
inc
popf
inc
mov
insl
pop
xor
mov
lret
pop
fnsave
scas
xor
dec
nop
lcall
jle
push
rcl
iret
mov
iret
mov
pop
jp
lock
xor
jno
pop
or
aam
xor
ret
scas
xor
cmpb
aam
int3
sbb
xchg
test
push
daa
out
push
xchg
test
data16
addr16
iret
fst
maxps
or
out
dec
outsb
or
sub
shrl
xchg
popa
test
jb
xor
int3
mov
aad
adc
sbb
mov
xchg
cmp
sub
loop
lods
adc
cmp
insl
bound
jle
sbb
sahf
mov
ret
mov
loop
pop
or
xor
pop
cmp
enter
cmp
add
sbb
mov
xor
mov
or
mov
inc
mov
pop
pop
or
stc
adc
pushf
push
or
gs
xorl
push
enter
data16
sub
xor
fmul
imul
cmp
mov
pop
scas
dec
pop
stos
add
pop
insb
inc
cmpsl
mov
je
cli
movsl
mov
lret
mov
in
outsb
sbb
stc
lcall
cmc
inc
dec
jo
aam
mov
sub
pop
jo
bound
fwait
add
gs
adc
ljmp
enter
inc
inc
push
mov
cvttps2pi
pop
sbb
add
push
jecxz
dec
ljmp
mulb
push
push
sahf
adc
enter
mov
push
neg
jle
mov
dec
scas
pop
dec
push
mov
scas
mov
bswap
lods
push
mov
xchg
nop
mov
fadds
lds
lock
mov
mov
xchg
jge
das
fdivrs
sub
push
iret
rol
inc
test
mov
adc
nop
inc
int
pop
stos
loope
mov
xor
add
pop
push
dec
arpl
pop
mov
sbb
outsb
push
lret
inc
aaa
hlt
clc
lahf
push
jmp
pusha
in
dec
pusha
jns
jne
shrb
mov
in
shrl
mov
gs
imul
xor
or
shl
lret
xchg
sub
rcr
mov
jne
popa
push
or
imul
jns
bound
pop
xchg
inc
es
mov
daa
arpl
and
iret
lods
push
cmpsl
popf
sub
lock
add
in
mov
push
nop
bound
lret
ja
cmpsb
arpl
enter
xor
push
sahf
add
ljmp
push
ret
xchg
mov
mov
fstpt
jne
mov
std
clc
sub
xor
and
cmp
mov
movsl
test
nop
push
and
out
xchg
inc
ret
push
cwtl
test
or
aas
cmp
sbb
fsubrs
sub
test
rcr
lock
push
outsl
xor
cmpsl
dec
pop
and
aas
mov
icebp
loopne
das
jae
mov
insb
int
jecxz
sbb
and
push
rorl
cs
jecxz
and
pop
jae
push
inc
addr16
pop
inc
fwait
add
jg
mov
mov
fisttps
sbb
out
or
sbb
mov
stos
mov
bound
or
dec
loope
sub
aam
jnp
iret
inc
or
dec
push
fstpt
pop
clc
pop
emms
inc
mov
repnz
imul
sbb
or
jnp
fsubrs
push
stos
sub
imul
jno
add
mov
pop
push
xchg
out
fs
sub
popa
sahf
add
dec
cwtl
fildll
xchg
inc
push
les
in
cs
test
mov
cmp
data16
or
movsl
pusha
inc
ljmp
add
push
mov
adc
pop
jg
loopne
sub
dec
cmp
fwait
add
dec
ljmp
xor
jge
push
das
popa
mov
lock
jp
adc
mov
popf
je
pop
pop
fldt
push
fwait
out
pop
sbb
in
sub
pop
inc
mull
rcll
mov
cmp
repz
fidivs
sub
ds
sub
insl
add
ficoml
dec
lahf
dec
xor
into
sbb
enter
mov
test
aaa
cmp
loopne
cmpsl
push
jnp
out
mov
mov
addl
push
mov
cmp
int3
xchg
pop
cltd
call
mov
enter
sbb
cltd
or
ja
push
nop
arpl
scas
pop
push
cs
ds
in
in
out
mov
jno
ficompl
arpl
mov
shrb
mov
mov
fnstenv
ja
and
mov
mov
inc
or
add
sbb
in
lock
test
xchg
inc
fnsave
mov
hlt
jae
mov
xchg
or
or
stc
or
or
fisubrs
js
repnz
loopne
sub
push
insb
lods
idivl
rorl
adc
popl
add
push
lods
sub
jo
arpl
das
test
ror
idivb
mov
push
xor
pop
std
movsb
lock
sub
push
dec
xchg
cmp
sti
mov
mov
dec
xchg
mov
lahf
push
out
add
mov
inc
mov
fldl
dec
pop
movsl
push
stos
std
xchg
pop
xor
or
or
pusha
cltd
ret
lahf
popa
arpl
jo
das
lret
jle
sbb
ljmp
and
scas
inc
jge
push
cmc
sub
or
cmp
sbb
inc
add
add
and
jb
adc
mov
jno
adc
adc
mov
loope
lock
add
adc
ret
in
pusha
dec
fisubs
aas
jecxz
mov
xlat
push
add
ja
in
add
pop
insb
xor
ja
jge
push
aaa
xorb
aam
mov
es
ja
mov
sub
out
jecxz
test
jecxz
insb
in
push
xchg
inc
repnz
cmp
mov
or
xchg
jge
es
enter
add
xor
imul
mov
cmp
inc
mov
or
les
inc
jle
fnstcw
fsts
fs
icebp
pop
stc
sahf
aad
add
or
insb
out
pop
in
mov
addr16
jmp
ret
orb
jecxz
imul
mov
sbb
push
lcall
out
sbb
sbb
and
icebp
out
adc
data16
xchg
gs
lret
dec
mov
or
add
frstor
cmp
dec
lock
insb
mov
cmp
arpl
repz
push
cltd
mov
cmp
and
xlat
add
pop
xor
aam
or
jne
or
cmp
xchg
dec
cs
scas
sub
pop
outsl
add
movsb
adc
test
insl
or
cmp
in
aaa
dec
pop
adc
icebp
sbb
xchg
addr16
leave
cmp
push
or
xor
mov
in
es
and
fists
jmp
dec
lret
push
ja
ljmp
jnp
incb
xchg
mov
idivl
adcb
shr
add
hlt
sub
inc
jge
js
push
test
push
clc
cmp
add
mov
xorl
mov
jmp
movsb
push
xchg
outsl
xchg
cld
lret
xor
push
mov
repz
insl
mov
cwtl
or
jae
mov
dec
push
dec
xchg
andnps
cmp
std
fdivl
jge
jp
adc
popa
fwait
lods
sbb
call
fists
push
aam
sub
xchg
push
out
push
cmp
xlat
pop
in
in
sbb
test
sub
in
sbb
dec
or
jge
mov
xor
inc
inc
aad
add
shrb
sub
cmc
pop
jmp
jae
jmp
into
sbb
jle
mov
or
jge
xor
into
sbb
jge
add
pavgb
ret
push
popa
or
adc
popa
test
scas
adc
rcrb
std
imull
mov
aas
in
popf
add
xchg
jo
xor
hlt
dec
mov
jb
mov
repz
pop
cmpsb
mov
jnp
push
xchg
mov
int3
and
fdiv
test
fmull
popa
mov
and
mov
push
inc
dec
mov
cmp
xchg
test
push
sbb
fwait
or
out
test
xchg
inc
xor
mov
cmc
add
push
test
js
mov
jle
adc
data16
lcall
sbb
pop
push
mov
xchg
jg
inc
dec
icebp
adc
xchg
in
outsb
xchg
pop
in
loopne
fldln2
pop
jne
sub
out
int
loope
fwait
sbb
es
push
inc
fwait
ja
jns
mov
idiv
cs
adcl
fldl
pop
ds
mov
pop
loope
icebp
gs
gs
xchg
in
fistps
xchg
popa
sub
outsb
adc
rcr
inc
incl
mov
cwtl
inc
sbb
mov
popf
int
fs
jp
vmovhps
rorb
add
inc
lea
into
mov
jb
in
dec
subb
cmp
mov
push
dec
mov
test
push
imul
in
sub
rcrl
cmp
shll
out
lods
ljmp
inc
in
mov
mov
push
jp
push
repz
popf
lcall
cmp
sbb
adc
or
xor
xor
and
loop
dec
lret
cld
pop
mov
push
es
push
pop
movsl
push
fdivl
pushf
inc
inc
ss
pop
jle
repnz
push
loope
sbb
mov
cmp
sbb
jmp
mov
jae
pop
inc
mov
push
lods
mov
icebp
add
mov
outsl
add
ffree
mov
popf
fdivl
or
sub
cltd
fdivrl
jmp
stc
lea
mov
std
psubusb
inc
ret
into
add
push
repz
test
gs
shrb
xlat
imul
imul
push
pop
inc
sub
jmp
push
ss
loopne
push
adc
mov
mov
lret
nop
scas
or
mov
sarb
cmpsb
mov
and
lret
sbbl
fildll
fs
push
sahf
fdiv
pop
jno
cmp
and
inc
hlt
aas
shll
cmp
sbb
arpl
cmp
inc
pop
pop
cwtl
and
les
adc
jnp
imul
mov
fldcw
outsl
sub
dec
jecxz
sahf
out
je
and
int
sub
xchg
jno
push
jns
out
push
in
mov
movsb
or
lds
xchg
inc
loop
imull
add
mulb
andb
inc
xor
mov
ljmp
or
sbb
call
push
pop
scas
inc
data16
cwtl
int3
outsl
and
arpl
divb
sbb
lea
loope
fdivl
insl
cmc
push
xchg
pop
insb
lcall
jmp
cmp
jne
inc
and
inc
mov
lock
dec
into
push
cmpsb
add
mov
push
mov
test
sub
ljmp
sbb
test
mov
popa
xor
xor
inc
pop
jle
or
ljmp
lea
int3
arpl
inc
inc
sbb
out
and
mov
jecxz
ja
lock
push
fwait
jne
stos
clc
sbb
sbb
or
lock
call
sub
sbb
js
addr16
inc
xlat
ret
popa
jmp
jb
imul
add
js
lret
orb
les
std
inc
jmp
movsb
lahf
mov
fcmovnb
sbb
fistl
xchg
mov
shlb
inc
xor
add
imul
test
inc
lock
dec
loop
push
cmp
cltd
stos
data16
mov
mov
sub
test
jnp
repz
pop
xchg
cmc
cmc
in
popa
add
dec
sub
fdiv
adc
dec
push
fildl
mov
lret
je
xchg
xor
scas
std
into
jl
loopne
xchg
int
fcomps
push
mov
xor
or
xor
mov
fmull
inc
stos
cmc
adc
dec
push
je
adc
push
sbb
fsubrl
xlat
jle
mov
sbbb
and
jmp
sub
out
sbb
ud1
push
in
mov
jnp
lcall
jno
fsts
jno
rolb
rclb
pop
inc
push
lcall
mov
push
ret
scas
fucomi
pop
repz
hlt
out
push
scas
movsl
sbb
loopne
jb
in
imul
xor
test
add
mov
sub
fadds
push
loop
mov
stos
cmp
lret
aaa
std
in
push
sbb
cmp
ds
movsl
mov
jnp
lcall
sbb
push
fmuls
das
dec
cmp
mov
int3
push
lcall
dec
popf
out
out
bound
push
movsl
dec
inc
sbb
cli
jle
icebp
xchg
cmpsb
xor
aad
pop
dec
jecxz
push
inc
mov
pushf
repz
or
stos
inc
jno
ret
adc
es
scas
ror
lock
ficompl
cli
sub
test
jl
iret
lcall
cli
aad
xchg
inc
call
and
xchg
mov
test
mov
sarl
repz
jnp
inc
xor
data16
inc
fdivs
lods
mov
lcall
push
cmp
ja
jnp
xor
inc
cmp
lret
or
xor
and
push
aad
fwait
push
nop
pop
aaa
sub
fucom
mov
fcoml
std
repz
cltd
jns
mov
push
bound
xchg
les
mov
lcall
cmc
fsubs
call
cmp
daa
xor
ja
push
mulb
pop
lods
add
mov
js
mov
das
pop
lcall
or
rcr
popa
mov
sti
add
sub
mov
inc
sbb
fsubs
or
mov
jp
mov
pop
jne
mov
pop
icebp
int
or
push
mov
pusha
cmc
popf
repz
adc
shl
inc
test
mov
imul
notb
sub
cmp
jns
adc
arpl
pushf
pop
dec
std
shrb
add
or
push
es
xchg
cltd
stos
xchg
lods
cmp
sbb
enter
jbe
adc
bound
fildll
xchg
cmpsl
cmp
push
mov
add
push
push
stc
or
sarl
hlt
test
inc
jnp,pn
jle
mov
mov
jecxz
insb
iret
or
adc
add
iret
jl
sub
loopne
xchg
das
sbb
clc
xor
lea
addr16
push
es
mov
sub
mov
js
fcmovnu
jge
or
adc
add
shl
cltd
scas
push
and
movsb
pop
sub
xchg
lcall
xor
roll
pusha
mov
iret
imulb
aad
cli
mov
test
cmp
sub
pop
jge
mov
daa
cli
scas
dec
cmp
ss
inc
cmpsb
xor
fiaddl
or
pop
xchg
push
into
mov
sbb
mulb
jae
cmp
jns
mov
ja
mov
push
std
dec
popa
in
mov
mov
cld
subl
sbb
fs
and
sbb
jg
or
lds
cmp
fwait
ja
dec
in
sbb
push
into
fucom
mov
push
ret
add
shll
sarl
pop
mov
push
push
repnz
jbe
jne
jg
dec
ja
cmpsb
in
cmc
adc
push
cmp
fists
sar
xor
mov
cmpsb
jb
sti
mov
rcrb
push
sbb
cmpsb
mov
and
inc
jecxz
mov
gs
cmpsb
add
pop
jnp
imul
xchg
in
xchg
xchg
xchg
enter
or
sahf
sbb
jmp
je
mov
cld
or
xor
test
adc
pop
cmc
jl
shl
pop
xchg
lock
shll
loopne
icebp
add
jo
mov
test
jle
adc
adc
repz
shlb
inc
jns
jl
scas
aas
and
and
xchg
nop
mov
cltd
push
nop
push
cld
push
push
jbe
mov
jns
sti
out
push
or
adc
xor
cmp
mov
shlb
inc
push
mov
insb
inc
insl
xchg
sub
decl
mov
adc
nop
mov
lods
pop
pop
nop
mov
xchg
scas
repz
adc
push
xchg
int
mov
mov
cld
insb
mov
sub
cmpsl
mov
ror
jle
push
push
mov
fst
jns
adc
xlat
add
outsl
jmp
in
xor
outsl
xchg
jge
adc
dec
pop
ljmp
push
inc
xchg
and
lret
push
call
inc
jp
sbb
push
fmul
in
jg
mov
jae
outsl
mov
jo
cltd
xlat
shrb
xchg
xor
icebp
shll
aas
mov
jns
outsb
lret
or
pop
cmc
popf
mov
mov
arpl
orl
outsl
pop
repz
fldt
dec
cmp
insb
repnz
sbb
adcl
pop
cwtl
lds
scas
cmp
jb
subb
inc
pusha
aas
cmc
setp
mov
rorl
and
or
shll
or
xor
daa
add
sarb
mov
sub
fwait
cmp
out
sub
xchg
or
mov
mov
pop
xlat
jne
and
adc
packuswb
ficomps
fcmovbe
jne
lret
incl
sbb
test
and
push
cmp
pop
loope
imul
jo
loop
jb
lret
mov
rcl
cmpsl
hlt
test
mov
add
insb
fidivrl
cltd
mov
test
icebp
inc
bound
sbb
mov
mov
in
xchg
test
fucomip
mov
cld
and
mov
mov
shlb
mov
adc
and
enter
clc
test
push
jae
clc
icebp
mov
outsl
jge
fnstsw
rcrb
cmp
cwtl
lahf
test
imul
inc
xor
push
sub
mov
cmpsb
mov
daa
insl
test
frstor
adc
lret
mov
popa
xchg
dec
popa
jns
sbb
xlat
mov
test
pushf
pop
xor
frstor
add
ret
pusha
repz
adc
cmp
inc
test
fwait
loop
dec
xchg
xchg
das
push
iret
int
lcall
pop
add
push
ja
mov
test
out
hlt
repnz
inc
hlt
lret
jb
dec
mov
sti
les
adcl
in
sub
ficoms
push
jmp
sub
jnp
adc
cmc
stos
mov
es
in
aaa
pop
sbb
std
das
adc
icebp
mov
stc
test
movsl
dec
mov
jne
in
fdivs
je
jecxz
jmp
mov
push
stos
xor
dec
jge
pop
in
cld
lcall
fxch
add
mov
enter
orl
daa
loopne
idivb
in
mov
adc
test
es
xchg
adc
movsb
adc
adc
xor
fisubrl
jae
inc
ffree
or
push
cltd
sub
jle
mov
cmp
push
xchg
shrb
push
mov
mov
cmp
push
sub
movsl
dec
sbb
ret
ljmp
fwait
and
push
xchg
pop
call
xor
cmp
pop
fnstenv
inc
jecxz
or
cmpb
mov
es
sbb
cli
scas
stos
cmp
rcrl
pop
gs
sbb
cltd
push
aaa
cmpsl
sub
xchg
inc
mov
mov
xor
gs
les
lods
jle
in
test
jmp
push
sub
fnstenv
xchg
mov
out
sbb
scas
out
jg
hlt
aas
scas
aam
sbb
cmp
jae
fsub
mov
xor
xor
pop
xlat
ss
lret
add
mov
nop
mov
mov
xor
sub
rol
aam
movsb
xor
fptan
mov
test
gs
mov
push
pextrw
xchg
pop
xlat
adc
or
loop
pop
ja
int3
sbb
ror
pop
and
cmpsl
flds
aaa
sbb
in
fisttps
fistl
cld
arpl
ss
fnsetpm(287
inc
jp
in
fcomp
fcmovb
test
adc
out
repnz
dec
adc
mov
js
inc
cmpsb
cmpsl
mov
std
jb
push
out
push
loop
pop
pop
imul
xchg
push
cwtl
push
xor
ja
mov
inc
outsb
out
stos
mov
mov
mov
repz
shlb
inc
lahf
jmp
gs
pop
sub
and
repnz
enter
clc
cltd
lock
cs
sbb
stos
mov
cmpb
mov
and
mov
mov
add
push
rcrl
aas
jae
in
or
scas
push
jge
push
push
add
xor
das
and
jp
push
lret
sbb
je
adc
test
nop
mov
enter
xor
out
push
or
pushf
xor
clc
xorl
sti
testb
mov
and
push
mov
stos
pop
dec
insl
rclb
dec
mov
mov
stc
sub
pusha
cmp
xchg
push
lret
pop
push
out
rolb
pop
movsb
pop
inc
inc
cmp
orb
sbb
push
icebp
and
insb
imul
pop
mov
orb
push
mov
outsb
leave
sarl
push
sbb
scas
ds
gs
std
xchg
cli
ss
hlt
mulb
push
lods
xor
pop
shll
popa
sbb
or
push
insb
sub
dec
fs
jmp
outsb
outsl
vmovapd
scas
pop
dec
sti
les
fs
mov
and
cli
cmp
jg
test
jecxz
shrb
lret
sahf
sarl
sbb
jmp
adc
pop
mov
push
cmp
cld
xchg
jge
mov
pop
ds
xor
mov
push
cwtl
mov
pushf
jb
lock
adc
fstpl
filds
adc
xor
cmpsb
aam
sbb
cmpsb
mov
ss
fsub
or
and
pop
sub
imul
sub
inc
je
mov
sbb
daa
cvtps2pd
xchg
mov
pusha
mov
scas
cmp
lahf
inc
pop
fstps
push
inc
sub
sbb
jmp
ret
mov
in
cmpsb
andl
or
push
movsl
xchg
jns
pusha
xchg
movsl
and
std
xchg
jg
xor
dec
adc
pop
or
add
popa
lods
cwtl
and
data16
es
cmp
cwtl
pop
lods
sbb
xor
sahf
xor
cs
stos
dec
fcmovb
out
loope
cmp
jmp
xorb
and
sbb
je
jle
loopne
push
and
test
xchg
mov
iret
subb
xorb
jg
lret
movsl
lcall
shl
enter
and
mov
mov
in
push
xchg
int
inc
std
push
cltd
imul
js
xchg
flds
mov
sbb
xor
mov
loop
fnsave
mov
push
pop
mov
out
mov
adcb
mov
pop
call
push
sti
xor
les
sbb
mov
xchg
nop
int3
xchg
inc
xchg
mov
jmp
xchg
adc
mov
repz
aaa
shl
and
mov
sub
sub
stos
cld
dec
lods
push
jg
inc
adc
je
mov
lcall
sbb
jne
aam
or
mov
into
inc
mov
daa
push
or
and
testb
jmp
jne
jnp
outsl
mov
mov
popf
repnz
mov
out
fisubrl
cmp
sub
scas
stos
stos
lret
add
pop
cmp
jecxz
sbb
loop
inc
or
and
or
aas
jnp
lret
pop
cltd
jg
addr16
ret
cmp
sub
sub
push
mov
call
mov
data16
call
mov
dec
test
popa
rol
and
into
dec
out
ds
fwait
xchg
mov
xchg
sahf
mov
repz
adc
jno
mov
or
loop
dec
loop
adc
insl
cld
div
pminsw
rorl
mov
add
pop
xor
pop
and
mov
shlb
cld
mov
xorb
mov
mov
fs
dec
jg
out
imull
xor
mov
pop
push
adc
popf
ljmp
cmp
repnz
fistpll
stos
mov
repnz
pop
cmc
addr16
lock
push
stc
loop
mov
sahf
lahf
inc
outsl
sti
cmp
sbb
loop
pop
int3
sbb
sar
das
mov
movsl
add
sub
gs
sub
dec
adc
sub
test
sbb
pusha
jecxz
jne
inc
out
jno
loope
dec
outsb
pop
push
test
loope
sub
add
dec
cmp
add
fists
ljmp
add
xor
daa
xchg
fucomp
fdivrp
xor
inc
push
stc
ret
push
hlt
shl
jns
adc
cmpsl
ljmp
data16
sbb
adc
movsl
repnz
jnp
mov
push
mov
inc
mov
ret
aas
inc
setne
dec
xchg
test
sbb
inc
aad
mov
es
sub
add
test
aaa
data16
push
or
mov
popa
pop
int
test
mov
push
lock
jp
jno
ja
ja
ret
cwtl
in
pop
push
mov
xor
jns
imul
and
cld
fisubrl
and
stc
addb
out
fbld
sbb
xlat
pop
xor
vmovntps
or
pop
dec
jmp
jg
xchg
icebp
sarb
lds
nop
cwtl
dec
aad
fcompl
xchg
or
mov
add
shlb
mov
movsb
ljmp
hlt
mov
lock
shr
inc
inc
inc
in
cli
cli
jno
inc
ljmp
icebp
fistl
adc
hlt
jg
or
je
popa
ss
mov
xor
dec
out
push
inc
iret
je
xor
daa
mov
mov
sahf
mov
inc
cmp
movsb
pop
adc
mov
push
lcall
dec
movsl
negl
dec
sub
mov
mov
or
int3
jmp
sub
insb
add
xchg
or
and
sub
add
sbb
jp,pt
mov
aad
bound
jne
imul
iret
pop
cwtl
into
out
iret
mov
cmp
sbb
push
sbb
inc
jne
adc
push
out
test
je
arpl
xor
nop
int
leave
mov
aad
out
das
mov
enter
mov
xchg
repz
loop
mov
sub
mov
pop
dec
bound
sbb
mov
dec
ja
stos
push
lea
dec
mov
xor
stc
andb
out
jne
cmp
jl
arpl
and
addr16
xchg
adc
stc
popf
cmp
stos
cmp
mov
hlt
xor
xchg
aad
add
mov
pop
gs
ficomps
pop
sub
sub
rclb
aam
int
sub
subb
rclb
jae
sbb
in
ljmp
or
mov
inc
outsb
fdivl
jns
cmpsb
mov
loopne
and
fists
out
or
jle
scas
push
out
fstl
add
rcrb
nop
subb
insb
and
pop
imul
add
and
and
jae
inc
imul
gs
inc
lds
push
fdivl
jmp
lret
test
int
push
rorb
enter
pop
mov
idivl
pop
jae
xchg
andb
subb
mov
pop
cmp
movsb
cmp
ss
iret
dec
push
mov
stos
stc
iret
fadd
imul
pop
in
stos
ret
iret
lods
xor
enter
hlt
cmp
adc
dec
setno
dec
and
lea
movsb
pushf
fs
mov
lcall
lcall
mov
insl
mov
cli
in
cmp
jmp
mov
aam
int
lea
mov
mov
jne
clc
lods
daa
loope
dec
in
add
pop
divl
ficoml
xchg
jb
aad
add
mov
pop
ret
jg
mov
inc
arpl
insl
stc
inc
jno
into
mov
adc
lea
inc
cmp
jnp
sbb
or
xorl
xor
cltd
jns
mov
movsl
add
popa
in
in
stos
pusha
xchg
mov
push
ret
or
mov
test
and
bnd
fiadds
fnstsw
sbb
mov
xor
xor
or
mov
arpl
jp
ds
fmull
leave
inc
adc
sub
movsb
hlt
orl
mov
cwtl
sub
outsl
and
lods
stos
nop
ja
popf
hlt
jecxz
stos
adc
and
ds
je
cwtl
ds
push
jo
xchg
movsb
loopne
mov
outsl
pop
jb
movsl
aad
imul
jns
popa
orb
pop
or
sbb
inc
xchg
sub
push
mov
mov
repz
insl
loopne
mov
jmp
loopne
mov
popf
imul
mov
loop
rclb
cmp
cmp
sub
test
push
lea
aaa
sub
xchg
pop
loope
pop
mov
xchg
pshufw
adc
dec
mov
rorl
int3
repnz
xorb
dec
sahf
adc
jl
and
arpl
sub
aad
sub
popf
mov
clc
xor
aam
rclb
sub
xchg
xchg
cmp
int
push
adc
xchg
stos
jmp
sub
daa
insl
in
cmpsl
lods
sbb
arpl
dec
cmpl
and
test
push
inc
push
xchg
mov
inc
test
cs
mov
xor
adc
int
std
fidivl
xchg
pop
call
push
repz
mov
mov
jmp
or
mov
pop
lds
jne
imul
and
mov
push
je
jl
mov
popa
movsb
xchg
dec
sbb
jg
mov
mov
popa
jge
out
lock
ja
jb
fxch
and
add
cs
lret
sub
pop
pop
mov
lods
je
sbb
push
xor
pushf
repnz
in
insl
and
push
ljmp
enter
test
cmp
and
aad
loope
cli
adc
shll
orl
mov
sbbl
in
repz
jo
or
shlb
int
fldt
icebp
add
pop
stos
sbb
mov
popa
push
mov
jp
dec
fsubl
jbe
xor
lods
mov
subps
popa
sbb
mov
movsb
andl
repz
fdivl
dec
pop
and
add
nop
cmpl
sub
dec
lahf
test
popa
cmp
sub
mov
aas
es
xchg
jg
les
gs
xlat
jle
imul
ret
push
jge
cli
add
inc
fcompl
pop
pop
xor
popa
sub
or
cmp
arpl
outsb
mov
mov
cmp
sbb
imul
add
stc
popf
cmp
add
out
inc
or
mov
iret
dec
push
mov
stos
jg
sbbl
push
dec
mov
test
dec
mov
adc
in
mov
sbb
and
mov
mov
jo
jmp
push
je
repnz
out
ljmp
dec
and
or
mov
out
dec
sub
mov
adc
loopne
cmp
push
popa
loop
lods
mov
push
out
rep
jecxz
imul
inc
mov
xchg
mov
inc
mov
xor
loope
mov
jbe
pop
inc
dec
outsl
outsb
mov
int3
ljmp
jns
mov
sub
sub
dec
cmp
dec
push
ss
pop
into
xor
jne
pop
iret
or
xlat
xchg
stos
aad
and
mov
fdiv
xor
cmpsb
pop
jge
push
scas
or
xor
sahf
mov
adc
xor
xchg
jae
adc
add
cmp
std
add
jbe
daa
or
rcrb
out
inc
nop
add
xchg
sub
mov
ret
movsb
arpl
aaa
call
mov
inc
or
xchg
cmc
add
push
rcrl
aas
mov
imul
aaa
mov
mov
jns
or
jmp
dec
push
cmp
sub
dec
leave
inc
mov
sub
push
scas
fdiv
jg
xchg
pop
push
jmp
add
pop
scas
xor
xchg
ret
or
shrb
cld
push
loope
and
aaa
clc
or
sbb
mov
adc
mov
jmp
xor
sti
aam
mov
pop
test
push
movsb
add
xor
orl
hlt
xchg
inc
inc
mov
rorl
push
out
jno
sub
add
gs
inc
lahf
sbb
or
in
stos
sub
ljmp
imul
push
mov
sub
std
addb
or
pop
add
mov
push
stos
or
adc
xor
mov
popa
popa
mov
dec
push
or
inc
xchg
incl
inc
mov
mov
xor
add
add
adc
fs
sbb
mov
or
adc
or
sbb
ret
lods
in
je
push
std
mov
imul
push
nop
lahf
imul
movsl
xchg
outsb
rorl
inc
into
mov
xchg
add
sbb
lds
pop
xchg
lret
mov
xchg
cmc
jnp
mov
mov
mov
sbb
mov
cmp
aas
cmp
push
xor
or
pushf
cmpsb
ret
addl
mov
loopne
test
int3
repnz
inc
in
mov
lahf
pop
into
lret
dec
sbb
mov
push
imul
add
xchg
addr16
jge
inc
sahf
cmp
mov
mov
jle
mov
dec
icebp
daa
imul
and
fs
pop
dec
jnp
lahf
and
int3
mov
push
in
repnz
jo
sub
and
adcb
inc
insl
dec
pop
hlt
or
xor
fsubs
das
mov
add
imull
fimuls
xorb
jo
xchg
and
ret
mov
jp
push
rorb
fincstp
dec
out
ret
jg
inc
lea
xchg
inc
ret
lea
cmp
js
rol
cmc
es
stos
rorb
lods
daa
xchg
xor
shlb
mov
jae
lret
sub
notb
jne
cmp
lahf
cmovns
push
push
push
fadds
sbb
fmul
push
icebp
lea
push
sahf
push
jno
fimuls
mov
sbb
enter
xchg
and
jb
sub
mov
sbb
pop
push
ds
dec
test
das
push
dec
push
sbb
mov
and
int
dec
sahf
xchg
daa
daa
xchg
jl
psubw
mov
je
adc
loope
jecxz
push
jl
sbb
sub
and
cmp
mov
dec
inc
cs
xor
fistpl
ljmp
cs
arpl
aad
xchg
or
in
stos
data16
pop
icebp
sub
mov
lods
leave
push
setns
test
jae
pop
cmp
movsl
sub
dec
and
dec
mov
add
aaa
test
inc
rorb
push
cmp
cmc
lret
imul
daa
js
out
xor
call
repz
add
jno
xchg
xor
sbb
mov
sbb
xlat
inc
mov
or
scas
push
pusha
mov
or
add
and
or
loope
push
sbb
scas
hlt
nop
xor
jecxz
insl
cld
movsl
cmp
je
jo
sbb
les
gs
rcrl
dec
jmp
mov
cmp
jl
jo
into
sbbb
lcall
jb
je
mov
sbb
dec
lcall
mov
cmpsb
pop
jp
and
lcall
jmp
aad
adc
aas
mov
daa
fdivrs
lods
daa
cwtl
gs
adc
mov
and
push
fstp
out
mov
pop
xchg
dec
jnp
jnp
mov
sbb
lret
jl
lods
sbb
into
sub
push
mov
std
push
xor
xchg
iret
mov
push
out
cmp
cmpsb
and
mov
mov
mov
push
xchg
lcall
das
push
and
cmp
inc
xorl
jmp
insb
push
pop
shrb
std
aas
icebp
xchg
and
xchg
jg
fdivrs
cld
or
out
shrl
lret
std
addl
push
jae
notl
ficomps
xor
push
sub
mov
movsl
dec
out
pop
mov
insl
push
push
xchg
dec
dec
mov
and
icebp
sub
mov
jne
xor
xor
sbb
fadds
and
xchg
in
lds
xchg
push
cltd
inc
or
or
sub
fidivs
out
jecxz
mov
fisubrl
sbb
popf
in
add
mov
adc
jge
nop
cmp
jae
sbb
test
test
repnz
sahf
push
lods
scas
jns
jno
pop
xchg
sahf
pop
mov
fcoms
rcll
pop
cmpsb
test
mulb
xorb
inc
xor
addr16
pop
fcomps
int
movsb
in
test
push
or
xor
ljmp
push
ds
or
aaa
jle
cltd
dec
push
imul
ja
dec
mov
es
mov
xchg
pop
pop
sahf
xlat
dec
push
stos
add
imul
andl
movsl
dec
xor
outsb
xlat
movsl
cmpsl
rsqrtps
push
ror
scas
roll
outsl
jo
movsb
inc
mov
pop
pop
bound
mov
test
fs
lret
les
test
cltd
mov
dec
push
out
mov
mov
dec
push
xchg
sub
sub
pop
jae
mov
pop
test
and
repz
sbb
imul
add
jns
sbb
mov
aad
scas
shlb
inc
mov
add
mov
dec
addr16
jge
ret
push
mov
sub
pop
outsb
mov
cmpsb
inc
add
push
jl
jg
loop
push
bound
psllq
aaa
sbb
mov
data16
outsl
inc
xchg
jge
push
jle
add
movsb
sub
scas
xorb
jmp
rclb
scas
add
stos
sub
aad
xor
push
mov
cmpsb
in
aad
shll
imul
outsb
rclb
push
cmovno
std
loopne
mov
mov
js,pt
mov
xchg
lea
and
mov
movsb
mov
push
push
push
mov
push
fwait
mov
push
add
rorb
pop
push
mov
dec
jno
jp
aam
jmp
add
repz
outsl
pop
lret
mov
sbb
inc
push
cmp
dec
fdivl
aad
and
push
ffree
cmp
xchg
mov
scas
sbb
je
repz
cmp
cmp
xor
sub
out
push
and
fnstcw
push
int3
loope
push
xchg
arpl
push
in
repz
ja
iret
fimull
cmp
test
jmp
shlb
push
or
push
pushf
ds
aad
imul
pusha
and
xor
xchg
mov
fwait
popa
add
adc
and
add
mov
ret
push
insl
mov
dec
movsl
test
sbb
pop
out
push
or
fwait
mov
in
cmp
mov
and
push
sbb
xor
xchg
movsb
jp
xchg
dec
push
or
mov
push
ljmp
mov
lods
push
mov
cwtl
cmp
jne
jl
ret
cmp
fldl
push
adcb
imul
mov
inc
inc
push
out
sbb
fmull
fxch
out
fisttpll
sub
xchg
push
push
mov
mov
ljmp
shr
out
outsl
jbe
and
popf
mov
adc
push
stos
mov
jp
ja
dec
aad
mov
dec
notl
sbb
cmpsb
jne
out
add
cli
jmp
clc
jmp
cmp
adc
xchg
out
add
mov
xor
mov
inc
mov
inc
jg
fisttpll
aaa
enter
sub
ret
je
xchg
xchg
fnstcw
or
and
xchg
pop
and
pop
pop
add
sub
jl
push
mov
cs
shlb
fldenv
and
ds
mov
lds
cmp
dec
test
jbe
or
mov
dec
pop
jo
aad
xchg
sub
and
gs
pushf
fs
inc
sbb
jne
sbb
add
imul
shll
rcll
xor
daa
jge
jmp
jmp
fbld
sbb
inc
push
jbe
push
dec
imul
and
or
mov
add
jmp
rcll
notl
jo
push
fiadds
push
addr16
das
cltd
push
repnz
mov
sarb
sub
adc
cmp
js
ficoml
push
loopne
cmpsl
insl
les
ret
dec
cmp
and
ljmp
sti
xor
sbb
sbb
idivl
sbb
push
fmuls
popf
pop
or
outsl
sub
lahf
adc
ss
add
cwtl
mov
testl
scas
mov
cmp
loope
jne
leave
pop
mov
shl
filds
loop
pusha
sbb
imul
je
fisubs
je
pop
mov
dec
xor
cmpsl
je
fs
pop
inc
jl
xor
aaa
sbb
ret
fists
ss
add
mov
or
or
sar
jns
push
xorl
dec
mov
in
add
in
std
pop
shll
insl
mov
lods
pop
test
jo
jne
fistl
pop
or
cmc
jp
arpl
adc
daa
push
pop
repnz
and
icebp
mov
scas
loopne
fisubrs
or
or
or
jmp
test
mov
xchg
stos
stc
hlt
push
jnp
cltd
sahf
push
or
loop
leave
fs
mov
decl
xor
das
and
adc
or
jle
jle
jecxz
stc
and
frstor
mov
clc
cmc
out
in
cmp
ljmp
xor
incl
cwtl
stos
lds
cmp
pop
fs
adc
imulb
and
and
dec
inc
xchg
mov
mov
and
mov
or
repnz
mov
insb
lds
mov
xchg
add
cmp
pop
je
aaa
jae
jae
into
xor
outsl
pop
leave
in
jmp
lea
je
sub
push
fisttpll
divb
daa
outsl
add
mov
pushf
aam
cltd
dec
xor
or
jge
jle
lret
cmp
cmp
pop
adc
fsubl
and
jg
or
stos
add
or
sarb
insl
imul
es
loopne
jecxz
in
loop
mov
dec
mov
xor
sbb
mov
aad
negb
mov
cmovo
mov
ja
xor
pop
das
int
sub
ljmp
sbb
sbb
sbb
loope
into
jp
into
aam
lods
or
incl
in
and
test
add
add
pushl
pop
mov
and
leave
push
shll
mov
add
in
jp
lahf
aam
out
push
cmp
adc
das
repnz
xchg
xchg
mov
lock
inc
loopne
jg
ret
jno,pt
aas
jo
fisubl
in
sub
jmp
aam
pop
mov
popa
ds
fidivs
shl
sbb
js
pop
loopne
dec
add
pusha
sub
aaa
movsl
dec
push
ret
push
xchg
sub
cld
lret
adc
fs
stc
mov
mov
mov
iret
es
dec
in
xor
clc
push
xlat
int
push
cmp
jno
push
out
lret
popl
xchg
lahf
add
scas
lock
movsl
mov
jl
jecxz
out
push
fdivrp
fsubrp
mov
sub
int
into
in
sub
adc
imul
push
mov
mov
iret
pop
lock
lcall
inc
aam
repz
sub
xchg
les
mov
mov
push
loop
mov
pop
pcmpgtb
shrl
imul
xor
aam
cmp
icebp
fs
mov
and
xchg
add
add
mov
imul
bnd
jge
shll
mov
sbb
xchg
sbb
in
adc
mov
push
jne
ss
and
jns
mov
sub
scas
xor
cli
decl
hlt
shlb
adc
push
mov
pop
sbb
leave
cmp
out
cmpl
sub
shll
dec
rorl
lock
inc
xchg
dec
shrb
xchg
cltd
cmp
push
js
jbe
fldt
out
jl
aas
add
jno
inc
add
data16
movsl
test
add
into
insb
jnp
les
jne
jno
add
push
arpl
lret
push
sub
mov
mov
sarb
xchg
test
rorl
repz
inc
push
cli
out
mov
test
fidivrs
xor
leave
adc
enter
in
sbb
stos
sub
jge
ljmp
aad
mov
repnz
mov
add
fsts
push
jbe
fdivrs
repz
jmp
rorl
mov
in
inc
rolb
mov
nop
xchg
jnp
lret
imul
jmp
stc
fs
inc
push
mov
cld
push
dec
mov
jb
xor
xchg
inc
aam
xor
jl
nop
adcl
testb
stc
xchg
push
les
sub
data16
push
pop
mov
inc
add
inc
xor
push
in
test
mov
and
xchg
aas
jae
ror
aas
imul
push
fldcw
fiaddl
pop
cmpl
js
sbb
cs
or
es
adc
jp
testl
aam
dec
in
mov
dec
mov
mov
and
fidivs
lock
lret
outsl
insl
mov
daa
in
push
scas
mov
cli
stc
jae
in
pop
call
xlat
mov
push
test
call
jo
jbe
push
data16
cmpb
or
in
fstl
sub
mov
mov
cmp
mov
sti
imul
push
or
pop
mov
cmpsb
in
jge
scas
mov
insl
mov
push
cmp
ds
cmp
or
dec
jae
mov
aam
stos
add
push
orl
push
loope
jae
mov
out
sub
je
pop
jp
lds
in
clc
inc
enter
out
pop
push
out
cmpsl
popf
gs
test
jb
mov
icebp
popl
mov
in
ret
cld
or
out
xor
in
movsl
ss
pop
lea
adc
inc
cld
xchg
imul
xlat
cmp
jmp
in
inc
jge
and
xchg
pop
add
rolb
and
aas
addb
xchg
dec
push
clc
push
push
mov
sbb
aas
fs
jo
ss
lret
fwait
push
cmp
loop
test
xor
xchg
jle
pop
sbb
jmp
sbb
mov
js
sub
push
int3
jp
push
inc
aaa
loopne
insb
xor
push
jb
rcrl
lahf
push
in
mov
sbb
mov
data16
or
mov
lret
lret
lods
lock
mov
push
jge
add
jle
cmc
xor
jae
sbb
in
daa
and
xchg
movsl
outsb
pop
ficoms
dec
pop
ss
jmp
push
mov
add
stos
adc
pop
fsubrs
jle
fstpt
cs
and
push
sarl
push
push
aad
add
sub
jl
fdivrl
or
ljmp
mov
xchg
xchg
and
pop
and
inc
xlat
xlat
ss
lret
pop
pop
mov
push
sbb
jb
aad
cwtl
fsubl
add
sub
mov
aaa
cmc
mov
hlt
pusha
jno
leave
adc
aad
dec
jbe
loopne
jmp
fsub
lods
loope
hlt
inc
ds
jne
push
icebp
ror
gs
pop
scas
mov
in
inc
adc
iret
pop
or
fists
adc
lret
sbb
mov
int3
adc
cli
push
gs
out
shrb
loopne
dec
jge
jmp
xchg
inc
pop
or
inc
or
lret
and
pop
sub
ljmp
stc
sbb
or
hlt
pop
dec
insl
push
sub
fists
mov
push
cs
add
sub
push
scas
push
iret
js
fnop
lcall
fsubrp
outsb
rolb
sub
sbb
jno
inc
fdivl
test
pop
cmc
test
fs
lret
mov
mov
push
rcll
popf
cmp
xchg
pop
fists
jle
push
inc
cmp
enter
sbb
cs
xchg
lcall
aam
sbb
sarb
pop
mov
fs
mov
jne
push
sub
lods
xchg
sbb
jecxz
js
mov
jg
xchg
jg
pop
jl
inc
pop
push
iret
into
ja
mov
sar
xchg
mov
out
xchg
sub
sbb
push
mov
sbb
mov
and
and
xlat
push
lret
cmp
orl
and
jae
push
xchg
push
cmp
inc
push
fwait
xor
or
vprotb
ret
add
xchg
cmp
insl
and
sahf
in
mov
stos
fidivrs
pop
mov
sub
mov
ret
fnsave
aas
fs
popa
lret
dec
fdiv
out
xlat
inc
xor
jno
ja
and
shlb
out
push
loopne
sub
or
sbb
dec
mov
jns
stos
inc
push
adc
sbb
dec
gs
adc
fldcw
sub
mov
or
cmovs
lods
sete
jns
les
xor
fcoml
jo
cli
adc
icebp
ds
addr16
sbb
sarb
mov
out
sbb
dec
mov
inc
pop
xchg
cmp
xchg
mov
push
loopne
xor
test
cmc
mov
pop
int
push
inc
push
roll
decb
cmpsb
imul
push
or
repnz
sbb
pop
fldcw
insl
fimuls
push
cmp
into
push
sub
ljmp
mov
mov
insb
xor
push
nop
adc
lock
test
mov
out
jge
stos
out
pop
mov
mov
scas
or
fs
cmc
repz
test
mov
or
shll
ffree
sbb
xlat
push
jno
pop
mov
jle
xchg
je
sub
aam
lahf
in
push
cmp
sahf
cmp
mov
mov
cmpsb
cmp
pop
frstor
mov
mov
je
push
or
push
add
movsb
or
add
daa
push
hlt
lret
pop
and
iret
scas
jno
jle
insb
outsb
pop
pop
pop
push
push
call
test
inc
pop
cmp
fnstsw
gs
bound
mov
lcall
lahf
pusha
imul
lea
adc
cwtl
xchg
xlat
je
fcompl
sahf
decl
mov
das
dec
movl
outsl
xor
xchg
cmp
pushf
mov
fimull
jbe
stos
lods
or
out
pusha
xor
jne
aaa
mov
or
fnsave
jmp
jge,pt
inc
aaa
lcall
cmc
xchg
push
pop
mov
jns
adc
push
cmp
clc
sbb
pop
sbb
shr
pop
in
aam
out
loop
sbb
inc
xchg
push
mov
mov
hlt
push
mov
es
jge
inc
cmpsb
inc
cmp
mov
mov
jg
icebp
pop
cs
jbe
cli
or
jp
xchg
mov
jg
out
inc
mov
or
adc
cmpsl
leave
inc
lea
fucom
cmp
jns
mov
mov
inc
pop
pop
mov
xchg
xchg
bnd
mov
stc
xor
add
out
loope
mov
push
jle
out
test
push
rcrl
sub
clc
fsts
outsb
mov
mov
xchg
cs
cs
xchg
bswap
push
shr
jg
xor
sahf
fninit
add
popa
adc
shlb
pop
push
movsl
push
nop
insb
loop
push
repz
xor
sbb
inc
xlat
data16
push
xchg
cld
test
mov
daa
ficompl
mov
add
add
mov
stc
jbe
daa
in
cmpsl
leave
dec
sbb
ds
sbb
push
push
lods
lock
fwait
lea
jbe
repnz
and
adc
pop
mov
xor
dec
sbb
fidivl
push
xor
mov
in
push
rclb
xor
dec
add
addr16
pop
mov
arpl
cwtl
mov
imul
jns
push
push
in
adc
aad
mov
test
shr
pop
add
sbb
clc
add
fstps
fadds
mov
push
sub
das
sti
dec
stc
pop
sahf
add
mov
jecxz
decb
cmc
sbb
test
fld
imul
sbb
int3
cs
cli
mov
xor
outsb
aam
out
xor
dec
je
gs
sbb
fadd
repz
pop
adc
divl
sbb
jmp
or
pusha
adc
xchg
adc
xchg
aam
push
add
sub
inc
imul
stos
leave
testb
popf
outsl
jns
sbb
lahf
out
dec
push
test
xchg
xlat
rorl
push
push
out
popa
aad
or
fistl
mov
int3
jns
js
mov
shrl
dec
cwtl
inc
outsl
gs
fisubl
mov
xchg
repz
out
xor
jnp
inc
fsubrs
mov
jbe
sti
adc
mov
mov
repnz
mov
ficoms
sub
fwait
or
dec
add
ffree
push
jmp
inc
out
lahf
dec
cmpsb
cmpsb
jb
gs
es
jnp
dec
fldenv
ret
jo
xchg
mov
adc
lods
in
aam
sarl
clc
mov
xor
mov
xlat
lods
dec
xchg
mov
out
mov
xor
xchg
test
mov
jp
cmpsb
lock
add
dec
ficompl
add
sbb
mov
add
out
cmp
stc
sbb
addb
cmp
repz
push
cwtl
xchg
and
std
sub
aas
icebp
mov
sub
test
fsubrp
sbb
aaa
pop
cs
jp
jae
xor
cmp
pop
jmp
stos
sbb
jmp
pop
mov
dec
sahf
cmpsl
mov
add
add
sub
xchg
lock
loop
mov
pushf
cmpsl
add
or
mov
fimull
lret
orb
dec
fucomi
stc
scas
inc
arpl
adc
or
xchg
xchg
jbe
pop
pop
xabort
sbb
loopne
inc
pop
xchg
fs
adc
imul
aaa
divl
fisubs
and
sub
loopne
xor
xor
roll
push
dec
xchg
inc
movb
jmp
adc
pop
xorl
lods
and
jb
xchg
cmpsb
cmpsl
sti
xor
dec
inc
jb
mov
add
daa
int3
dec
sub
stos
adc
aas
sahf
fisubrl
in
add
pop
cmpsb
shl
in
shl
inc
mov
jns
lcall
icebp
test
shll
sbb
add
push
mov
xor
xlat
fbld
jle
jmp
jecxz
adc
mov
cwtl
mov
sbb
ficoms
adc
or
inc
aaa
mov
or
in
sti
jge
mov
mov
std
mov
mov
cmp
js
das
sarb
imul
lods
add
xor
push
out
cli
jno
mov
push
push
fdiv
movsl
insb
mov
mov
pop
sbb
in
push
jp
into
and
adc
or
stos
adc
cli
or
and
inc
push
jo
movsb
lret
in
scas
daa
lret
and
add
es
mov
rorl
jmp
enter
adc
pop
lret
inc
fdivrl
pop
lcall
xchg
insl
mov
or
leave
xor
dec
mov
mov
jbe
and
xchg
lahf
inc
jnp
cmp
jp
mov
fcmove
xchg
cmp
and
stos
pop
popa
cmc
adcl
iret
rcrb
lea
bound
pop
mov
fstl
ljmp
inc
inc
popa
cmpsl
repnz
cmp
stc
sub
adc
inc
lret
les
js
xchg
cltd
and
mov
pop
xor
lret
cmp
int
pop
les
das
mov
addr16
xor
sub
pop
fcoml
loop
out
xor
mov
mov
mov
mov
pop
in
mov
roll
dec
mov
lds
dec
fimuls
pop
and
test
xchg
sub
stc
or
repz
lea
or
jo
movsb
stos
mov
das
das
cmp
fisubrs
cli
rorl
push
into
jne
pop
bound
mov
sub
pop
inc
xchg
mov
push
fs
lods
dec
cwtl
inc
loop
test
popf
inc
push
xlat
lcall
fldenv
loop
push
fisubrs
xchg
loopne
and
jmp
rorl
int3
mov
xchg
push
pop
stc
mov
sub
cmp
inc
cld
inc
adc
lahf
movl
clc
mov
dec
pop
pop
mov
je
cmp
sub
push
sahf
pop
push
aad
and
xor
fdivrs
adc
imul
mov
xchg
je
mov
aam
sub
mov
dec
int3
sbb
das
ljmp
mov
fs
icebp
add
pushf
push
or
shrb
adc
cwtl
lock
ret
stc
stos
cmc
adc
mov
mov
nop
fcomip
fcomip
scas
mov
pushf
or
insl
neg
inc
outsl
repnz
ds
jo
gs
enter
pop
aaa
xor
pop
fsubp
xchg
neg
dec
pop
in
test
pop
outsl
cmpsl
pop
xlat
jg
fcoml
mov
sbb
out
inc
mov
xchg
dec
sub
test
fdivp
and
cmpsl
inc
or
and
shlb
add
xchg
fcomps
push
icebp
ljmp
fmuls
andb
mov
rcrb
sahf
pop
xchg
repnz
mov
or
insb
test
pop
dec
mov
lea
or
xor
enter
xchg
int
mov
mov
jno
push
ret
ljmp
stos
lds
mov
mov
aad
int
pop
mov
leave
ret
xchg
lock
dec
mov
lods
add
into
movsb
sbb
xlat
in
in
mulb
loop
aad
addr16
int
cmp
push
sub
iret
je
scas
loopne
inc
lea
mov
xchg
pop
dec
xor
xchg
idiv
sub
jl
ror
inc
inc
xor
mov
push
pushf
insl
mov
out
out
outsb
cltd
pop
cmp
mov
xchg
cmp
setne
data16
adc
mov
fistl
leave
jno
xchg
test
push
push
outsl
mov
scas
xor
shrb
mov
movsl
fadds
cbtw
addr16
fsubs
push
cmp
mov
scas
rcr
es
mov
dec
xchg
mov
out
imul
sbb
in
popf
cmp
push
pop
pop
jp
or
cli
daa
cmp
and
fiaddl
cmp
in
add
popa
jae
mov
inc
rcrl
dec
js
pop
dec
cwtl
mov
addb
add
inc
les
pop
out
mov
es
sub
pusha
sti
mov
ja
xchg
mov
mov
push
jb
ret
jns
mov
and
jecxz
cmpl
inc
sub
in
dec
mov
clc
mov
or
lock
add
pop
mov
lods
fs
mov
jae
pop
add
dec
pushf
lret
jmp
push
int3
dec
aam
mov
push
mov
push
add
jg
add
aaa
xchg
push
div
roll
inc
int
in
xor
pop
cmp
jbe
pushl
push
dec
inc
and
and
dec
lods
fs
jge
sub
pop
out
pusha
pop
loopne
jecxz
scas
inc
out
cmp
dec
xchg
orb
lock
or
mov
mov
jne
sub
xor
cmp
jmp
push
int3
inc
push
inc
clc
mov
push
sub
dec
xor
sub
ficoms
xor
repnz
xorb
mov
mov
jecxz
int
or
sarl
or
jg
mov
fxch
outsb
add
test
jne
mov
xor
in
add
jno
adc
fidivrs
out
movsb
in
loope
xor
pop
add
mov
cmp
je
mov
test
sbb
cmp
call
dec
dec
xchg
icebp
jb
mov
mov
lock
jne
lods
pop
mov
dec
sahf
outsl
push
sub
add
pop
jne
xor
fwait
inc
data16
rorl
das
jo
fisubrs
leave
mov
and
lahf
xor
dec
outsl
mov
jmp
orl
fs
xchg
push
mov
aad
lock
fldcw
jns
mov
sbb
fdivr
test
insl
push
xchg
repz
mov
lret
call
adc
shll
dec
mov
pushl
xchg
insb
push
shl
es
inc
in
ljmp
lods
push
jns
cmp
adc
cmpsb
lods
dec
adc
nop
pop
dec
leave
shrl
sbb
cltd
cmpsl
ret
loopne
mov
out
hlt
and
or
dec
movsl
sub
mulb
insl
sbb
sbb
mov
notl
pop
sahf
imul
stc
imul
loopne
imul
dec
xor
jo
mov
and
ds
daa
std
mov
out
xchg
arpl
das
mov
jecxz
dec
inc
in
mov
lahf
enter
xchg
mulps
pop
jle
push
xor
and
insl
outsl
mov
cmp
mov
js
push
test
bnd
leave
mov
mov
pop
cmpsb
jp
mov
rol
shl
jno
pop
iret
mov
mov
fistpl
dec
loop
add
ret
cmovl
sub
es
insl
mov
stos
and
loop
scas
pop
fs
stos
inc
fisubrl
addr16
inc
mov
pop
scas
mov
scas
mov
ret
imul
xor
pop
add
pop
xor
flds
xchg
push
sub
push
mov
ss
xor
or
inc
jns
jle
and
or
mov
inc
fadds
lahf
lock
sub
les
addr16
xchg
xor
ret
xchg
lret
dec
rorl
iret
int
cmpsb
imul
in
mov
lds
cwtl
cmp
push
loope
test
xchg
push
push
dec
call
pop
mov
sub
jb
and
shll
stos
inc
ficoms
add
inc
mov
sarl
pushf
mov
andl
sbb
das
fcmovnbe
fdivrs
cld
adc
jmp
or
fsubr
lcall
popf
adc
ret
add
subb
hlt
add
aam
mov
scas
sahf
lret
fistpl
int3
clc
out
lahf
xchg
data16
or
cwtl
movsb
loopne
xor
sbbb
mov
mov
cmp
ret
shll
movsb
mov
jbe
and
or
xor
jle
lea
cli
icebp
lret
sbb
subl
xchg
loop
sbb
test
pop
out
lahf
movsb
or
in
sti
mov
lea
xor
jmp
adc
mov
xchg
pop
and
dec
movsb
movsb
inc
lahf
cmc
xor
leave
ljmp
cmpsb
pop
aam
or
outsl
or
jmp
mov
lea
lret
push
mov
or
aam
push
pushf
shlb
mov
stc
loop
adc
pop
mov
sub
filds
aam
std
xchg
sbb
push
xchg
std
sbb
mov
enter
mov
cmp
inc
cmp
jnp
jp
push
add
lret
push
psrlq
in
inc
mov
jb
aaa
std
loop
dec
push
mov
movsb
addr16
iret
int3
xchg
add
mov
mov
sbb
cmp
mov
repnz
movnti
test
sti
mov
cmpsl
jp
push
push
xchg
andb
lea
jne
jae
dec
test
or
push
mov
jmp
test
lods
pop
lahf
push
xor
stos
adcb
sti
push
sbb
mov
jns
test
notb
je
push
pop
sub
mov
sub
mulb
jmp
pop
movsl
mov
xchg
xor
lods
mov
fildll
arpl
mov
push
lods
pushf
loopne
add
mov
add
es
int
addr16
jp
in
daa
dec
in
xorl
add
mov
lds
push
ljmp
aaa
sbb
test
jo
cmpsb
or
stc
in
jbe
cmp
inc
insl
test
xlat
sbb
push
je
push
mov
push
xor
cmp
mov
scas
mov
pop
out
xchg
std
test
cli
push
inc
push
and
adc
loope
cmpsb
xchg
loop
or
idivb
xchg
repnz
stos
xchg
imul
ja
dec
sub
decl
xchg
dec
push
push
push
cmpsl
xor
int3
lret
mov
outsl
add
pushf
push
scas
movsl
add
cltd
xor
cmp
push
sub
xchg
in
test
call
jae
mov
xor
scas
call
pop
into
pushf
inc
push
mov
xor
jb
adc
je
sbb
jo
lods
daa
pusha
div
dec
push
adc
xchg
adc
call
dec
sti
ret
xor
fdivrs
out
dec
cmp
mov
mov
inc
inc
xlat
popf
lods
sub
pop
sbb
or
dec
aad
inc
popa
sbb
pop
loop
dec
jge
fildl
mov
imul
insb
and
cwtl
dec
lock
insl
daa
test
jp
addr16
adc
push
aas
lea
inc
sub
fdivp
cwtl
imul
xor
outsb
rcrl
sub
push
pop
sub
pop
push
and
or
scas
jns
dec
stc
dec
jns
cwtl
out
mov
hlt
repnz
cmp
fsubs
push
fs
jg
sub
stc
pop
addr16
rcrb
dec
add
pusha
es
mov
iretw
xor
out
add
test
aam
lods
fisubs
sbb
lds
rcrl
sbb
xor
push
adc
cmp
ret
mov
repnz
jge
nop
and
sbb
out
lods
cmp
cs
cli
mov
icebp
mov
sbb
not
test
or
ja
sbb
inc
add
pop
cli
dec
fnstcw
scas
and
in
insb
mov
sbb
rcrl
pop
mov
xchg
in
mov
pop
idivl
pop
idivl
outsl
andb
frstor
fiadds
or
jg
mov
push
fistps
dec
mov
mov
icebp
hlt
jne
push
nop
pop
adc
pop
add
mov
loope
jb
jl
sbb
sbb
adc
jmp
data16
sub
jno
stos
lahf
out
add
repnz
cmp
mov
add
out
dec
inc
arpl
mov
cmp
mov
fsubr
loopne
cmp
ljmp
popa
fdivrs
push
sbb
scas
cmp
arpl
adc
aam
xor
test
sub
hlt
aam
insb
aas
mov
sbb
decb
dec
mov
jns
fstpl
xor
adcb
rolb
inc
xor
repz
ret
les
in
adc
popf
pop
or
sub
mov
jecxz
movsl
sub
cmc
or
shll
dec
mov
add
mov
aad
mov
shrl
and
adc
push
or
fstpt
xchg
inc
adc
pop
inc
push
pop
cmp
xor
xor
mov
inc
xchg
sub
dec
cmpb
push
lcall
gs
add
and
mov
rcl
popf
ror
scas
push
mov
in
insb
sarl
popa
sahf
and
std
or
ja
xor
mov
or
fs
mov
jmp
xor
das
add
ret
aad
pop
fs
mov
ljmp
pop
repz
mov
outsl
add
loope
jnp
mov
mov
adc
out
cs
and
xlat
push
nop
add
shl
add
sbb
cmpsl
stos
or
scas
adc
push
mov
jbe
daa
pop
orb
mov
and
xchg
inc
or
leave
lock
and
push
inc
incl
jl
test
pop
adc
push
inc
call
fists
testb
shl
fucom
xchg
xchg
mov
fadds
fcompl
pusha
sub
std
repz
cmpsl
pop
xor
push
xor
scas
mov
jmp
push
mov
daa
mov
pop
mov
xchg
mov
xor
and
inc
add
leave
ss
sbb
shl
inc
fs
stos
fnstenv
xlat
pop
mov
dec
or
aam
lret
ljmp
adc
cld
sarl
pop
scas
out
inc
mov
sahf
jmp
add
bound
je
xor
dec
pop
mov
int
xor
cmp
pop
push
jge
pop
ret
xor
xor
or
stos
push
sbb
mov
push
jp
push
nop
adc
cmp
xor
gs
popa
stos
mov
outsb
sti
or
xchg
mov
cltd
mov
pop
repnz
push
movsb
test
std
dec
adc
mov
loope
andb
sbb
mov
movsl
or
mov
into
fiaddl
shl
mov
rcrl
scas
and
jo
dec
int
and
jg
sub
mov
pop
inc
jae
and
or
or
inc
push
xchg
mov
cmp
fsubrl
sbb
push
push
sub
shlb
leave
xchg
mov
jbe
cld
adc
js
and
or
std
add
push
push
pusha
ficompl
gs
mov
mov
repnz
xor
ficompl
dec
je
lods
out
xchg
sub
mov
mov
mov
das
daa
mov
push
repz
jns
incb
icebp
and
xchg
xor
add
aad
jae
daa
xchg
mulb
jne
fs
arpl
rep
add
lahf
aad
jb
push
stos
je
mov
in
int
and
mov
pop
dec
lahf
mov
xor
cmpsb
sub
or
psrld
dec
daa
cld
cld
xchg
xor
ss
pop
jnp
aaa
mov
mov
mov
fisttpl
outsb
xchg
inc
sar
sbb
mov
test
and
or
dec
bound
lods
or
in
xchg
push
push
loop
jmp
into
outsl
inc
int3
mov
pop
test
push
lcall
adc
mov
jnp
daa
jb,pt
inc
push
mov
mov
in
out
push
and
imul
xor
int3
scas
das
pmuludq
adc
xchg
aaa
xor
pop
jecxz
inc
loopne
pop
push
and
in
mov
xchg
add
ret
sub
mov
mov
xchg
xchg
adc
lcall
lret
mov
aam
das
fstpt
jne
outsb
aad
push
daa
cmp
popa
xchg
mov
sub
dec
jmp
cli
pmaxub
insb
add
jecxz
out
sbb
cmp
popa
aas
xor
out
fisttpl
cmp
cmp
pop
ret
out
pop
lret
fmull
scas
mov
rcrb
daa
dec
push
push
push
dec
shll
out
popf
push
ret
out
xchg
adcb
pusha
add
in
insl
or
or
pop
sub
movsl
dec
xor
shrl
push
jmp
bound
dec
sbb
fstpt
dec
lret
ret
daa
xor
xor
fbld
shl
lock
sub
pop
sub
out
cld
pop
gs
dec
dec
scas
and
cmc
aam
mov
jmp
imul
loop
cmc
subl
jmp
dec
test
sti
mov
scas
sbb
and
pop
lods
mov
dec
imul
sbb
popf
cmpsb
cmp
cmpsb
cmpb
adc
adc
das
mov
sub
dec
stos
dec
test
vorps
das
inc
xor
inc
test
sarb
insl
lret
cli
gs
rcrl
pop
lods
dec
or
pop
dec
test
lds
ret
mov
cli
cli
jno
sub
inc
les
jecxz
pusha
movsl
and
ja
lret
and
mov
loope
popa
xchg
sbb
mov
imul
icebp
or
into
imul
adc
xor
mov
in
out
cmp
mov
push
enter
jns
jg
in
in
rcrl
cmpsl
cli
jae
jmp
jg
popf
daa
cmp
mov
mov
xchg
mov
xchg
or
test
cmp
leave
sub
es
sbb
pop
jnp
jle
imull
aam
shr
arpl
clc
push
outsl
mov
mov
movsl
inc
xchg
mov
xor
imul
es
testb
mov
xchg
or
mov
push
out
adc
es
sbb
push
adc
xchg
lods
jb
fwait
xchg
dec
add
sahf
xchg
jne
sub
cmp
popa
jg
dec
repnz
aam
add
jno
repz
jmp
outsl
pushl
fbld
and
mov
mov
and
enter
rolb
add
js
jnp
lock
jne
pusha
stc
mov
push
inc
fsubl
arpl
mov
jmp
loop
sub
insl
iret
or
dec
xchg
sub
push
cmpsl
movsb
fistpll
add
frstor
cmc
outsb
pop
or
stos
inc
out
hlt
mov
sbb
movsl
jb
or
mov
sbb
test
mov
jmp
dec
lret
jmp
xor
dec
js
mov
cltd
add
push
rol
ljmp
lods
pop
add
adc
mov
sub
mov
mov
cmp
outsb
clc
aam
fsubrp
pusha
push
cmpsb
dec
popf
call
cmp
mov
leave
and
mov
stos
xchg
jns
stos
std
sbb
pushf
mov
inc
pop
test
fdivrl
ds
cmpsl
leave
ret
cmp
inc
pop
aam
cmc
or
aaa
bound
out
out
jl
popf
scas
xor
mov
cs
mov
cmp
push
inc
jecxz
push
push
cmc
mov
add
mov
mov
sbb
push
test
bnd
loop
lock
jae
mov
add
xor
fcmovnb
inc
push
repz
int3
dec
xor
imul
lret
xchg
fiadds
sti
mov
rcl
push
test
cs
fdivr
insl
pop
mov
mov
mov
xlat
in
add
and
fcompl
cmpsl
mov
test
mov
mov
jno
dec
data16
jge
ret
or
dec
inc
addr16
xchg
sub
icebp
xor
dec
xorb
or
dec
lret
mov
sub
lahf
test
imul
lcall
test
xor
sbb
ficomps
cmc
aaa
push
movsb
push
jnp
imul
faddl
mov
cmpl
mov
ljmp
jne
addr16
jne
out
adc
push
aad
dec
mov
mov
mov
lahf
lcall
sbb
or
adc
ds
jecxz
out
into
push
sub
into
jo
das
xor
and
mov
fldl
adc
mov
sub
data16
jo
or
aad
jb
loopne
mov
mov
repz
in
jl
jo
shlb
hlt
in
test
insl
and
in
or
out
outsl
mov
adc
mov
dec
xlat
ror
pop
cli
scas
add
sbb
scas
pushf
lcall
jbe
loop
aam
push
test
pop
pop
dec
hlt
dec
lods
pop
cmc
call
arpl
aad
mov
imul
lods
cmpsb
dec
cld
xor
add
fimuls
push
mov
movsl
hlt
sbb
lods
pushf
arpl
fildl
sub
mov
pop
lcall
lods
mov
test
loopne
dec
leave
shrb
push
jle
sub
push
jns
jbe
mov
inc
in
or
rol
lock
int3
mov
inc
cmp
push
daa
stos
pop
sbb
aam
es
pusha
aam
mov
bnd
test
out
sub
push
inc
lock
sti
rorl
jbe
pop
mov
ss
inc
sbb
std
sub
jae
lea
inc
sti
push
addr16
les
stc
insb
mov
sbb
jmp
dec
out
lcall
loope
and
pop
mov
imul
pop
cmp
jo
xchg
pop
pop
inc
frstor
dec
into
in
xchg
fdivrl
mov
rclb
gs
push
int
icebp
push
push
pushf
cmpsb
cmp
leave
divl
jg
and
sbb
fdivl
inc
push
cwtl
jp
pop
lahf
out
inc
lahf
xor
push
leave
and
ficoms
into
int
xchg
jns
pop
lcall
push
cmp
sbb
xchg
mov
jb
push
leave
imul
cli
fwait
fwait
mov
dec
or
push
rcl
xchg
xchg
les
stos
sbb
mov
sub
ret
arpl
sbb
cmp
fistpll
adc
cltd
fwait
dec
or
hlt
mov
sahf
mov
xrelease
and
stos
arpl
or
cmc
sarb
jne
pop
xor
mov
push
and
pop
lahf
jmp
xor
jo
adc
arpl
stc
xchg
pop
stc
jmp
jl
out
xlat
cmpsl
mov
mov
daa
and
push
sbb
movq
push
mov
ss
jmp
fwait
test
inc
mov
push
dec
inc
cltd
jo
lods
addr16
popf
sbb
push
cmc
lret
ret
mov
mov
enter
jne
and
faddl
je
out
xor
in
mov
in
xor
mov
xchg
xcrypt-ofb
cmpsl
sub
add
and
jns
dec
mov
lcall
xchg
jl
fimuls
push
adc
testl
fdivrs
xchg
lret
xor
nop
shlb
dec
xchg
repnz
or
fcoml
into
outsl
movsl
in
jp
jo
and
cmp
enter
fwait
inc
lcall
push
push
adc
mov
rol
sbb
das
jp
xor
popf
imul
add
out
jg
jp
jo
roll
adc
ljmp
or
jge
les
fdiv
add
jmp
and
adc
mov
pop
push
inc
cmp
pop
imul
fsubrp
dec
shl
dec
jno
sub
arpl
rorl
outsb
dec
test
scas
cmc
pop
out
incb
pusha
loope
jne
out
fcoms
cmpsb
imul
cmp
jle
jns
sbb
push
sub
loopne
frstor
xor
jg
lds
push
mov
iret
testb
stc
ret
mov
enter
repnz
add
inc
lods
push
or
push
outsl
lods
fidivrl
xchg
and
and
test
sarl
cmp
aaa
movsb
inc
inc
jmp
mov
sbb
xor
push
dec
pop
push
dec
mov
mov
adc
js
in
cmp
sub
cld
call
clc
adcb
mov
and
rorb
mov
mov
push
jae
jno
push
mov
cld
imul
inc
rol
and
mov
pop
xchg
or
stos
jno
dec
push
mov
outsl
cmp
pop
cmp
mov
in
popf
and
xor
or
sub
movsl
cli
push
fwait
jae
cwtl
out
dec
call
xor
in
roll
push
mov
jg
enter
mov
es
or
fcompl
cmpsl
xchg
pop
repz
adc
xchg
xchg
sbb
fisubs
inc
mov
mov
mov
jno
or
sahf
jns
jle
dec
mov
cmp
pop
jecxz
scas
ljmp
add
sbb
adc
pop
shl
aaa
add
pushf
jb
jecxz
dec
or
inc
lds
push
fsubs
or
test
hlt
fcmovu
mov
subb
push
loopne
loopne
test
dec
std
jge
in
jns,pt
xchg
lret
lock
xchg
dec
ret
imul
stos
xlat
jb
mov
xchg
xchg
addr16
sub
insl
call
negl
fcompl
addb
shrl
movsb
xchg
test
aaa
in
mov
jno
out
jns
adc
test
sbb
cmpsl
jp
imul
or
hlt
mov
fiaddl
mov
cli
add
xor
ret
hlt
test
lahf
and
xchg
jb
sbb
cwtl
or
pushf
push
cmp
enter
mull
jo
push
xor
jmp
jecxz
cltd
rclb
aad
loopne
jno
inc
negl
pop
cmp
adc
ja
outsb
data16
jb
pop
das
push
test
jl
pop
sub
inc
in
call
call
and
cmpsb
jb
daa
lret
and
mov
push
out
enter
push
jb
jno
mov
add
lret
inc
dec
push
xchg
in
faddl
or
pop
push
outsb
call
or
out
shr
in
pop
sbb
insb
mov
add
loope
imul
cmpsb
out
ds
push
cmp
adcl
fcomps
adc
repz
xor
sbb
lcall
mov
sbb
cmc
xor
xchg
and
mov
incl
clc
out
outsb
mov
inc
cmpsb
movsl
push
mov
scas
and
movsl
stos
sub
mov
mov
push
lods
lds
xchg
jb
test
cmp
outsb
push
gs
shlb
mov
inc
test
jns
push
test
push
std
xor
cli
fs
push
ret
cmp
jnp
loop
jge
leave
int3
xchg
xor
mov
into
out
lret
or
pop
aas
out
sub
arpl
cltd
mov
mov
loop
addr16
int3
out
xor
mov
dec
nopl
addr16
dec
mov
dec
pusha
adc
push
or
cwtl
dec
xor
inc
pop
ret
sbbb
mov
mov
insb
je
les
pop
loopne
mov
pop
out
in
ss
int3
xor
jmp
jbe
addr16
dec
mov
repz
push
adc
lods
inc
test
xor
cmp
ret
repnz
aam
mov
jno
or
cli
ficoml
gs
rorb
insb
lds
cltd
inc
in
and
stos
jne
or
cmpl
xchg
in
and
loopne
iret
jbe
insl
in
adc
cmpsb
adc
imul
or
lea
repnz
jno
pushw
shrl
out
inc
rclb
add
mov
mov
push
xor
int
repnz
xchg
or
mov
ss
adc
je
or
jno
inc
push
fwait
jno
sti
pop
out
jb
aad
push
aam
out
imul
mov
push
xor
out
and
pop
in
cwtl
sub
scas
or
push
out
mov
cwtd
dec
nop
lods
dec
or
inc
outsl
mov
lcall
push
ss
push
push
in
pop
lcall
and
or
out
sahf
addl
faddl
xchg
inc
add
loop
testl
jecxz
stos
cs
jmp
mov
imul
int3
mov
fld
dec
ret
ljmp
mov
xchg
repnz
and
pop
in
pop
mov
mov
movsl
cmpsb
mov
jp
pop
stc
pop
mov
add
jle
jo
or
jo
mov
jnp
sbb
and
xchg
call
adc
mov
sbb
lds
out
arpl
repnz
add
pop
pop
and
es
je
push
cwtd
inc
out
sub
shll
ret
movsb
xchg
repnz
in
repz
push
sbb
xor
sbb
pop
in
js
or
vpmullw
or
repnz
loopne
add
daa
mov
sbb
shll
sub
lds
xchg
mov
add
cmp
or
mov
les
push
testl
xchg
xchg
dec
fmul
mov
scas
insb
int3
xor
rolb
inc
nop
sti
es
or
mov
pop
push
lds
sbb
clc
out
xchg
mov
adc
jecxz
push
jmp
popa
xchg
addr16
test
jl
xor
movsb
cmp
lret
imul
in
and
loope
ljmp
adc
add
outsl
jne
xor
lods
popa
pop
daa
pop
pop
dec
out
idivl
call
dec
push
sbb
shl
jo
jle
outsb
cltd
std
mov
inc
mov
pop
cmp
add
sbb
sbb
addr16
pop
ss
hlt
pop
and
or
mov
lahf
adc
pop
hlt
mov
sarb
adc
mov
inc
cld
xchg
loopne
pop
sub
mov
cmp
call
cli
jnp
xchg
or
mov
stc
mov
dec
mov
ficompl
or
in
and
lds
addr16
stc
jecxz
shr
xchg
inc
xchg
fstps
mov
sub
jecxz
aad
inc
je
mov
inc
movsl
hlt
xor
mov
out
test
decb
in
jae
test
imul
push
nop
fisttps
data16
mov
cwtl
adc
fs
ret
lock
xlat
cmpsl
lds
xor
xor
fdivs
imul
popf
xor
mov
push
or
mov
pop
into
sbb
adc
pop
icebp
insb
pop
leave
inc
adc
cli
insl
and
aas
movsl
xor
sub
jae
cmp
push
int
ret
and
mov
in
addr16
in
pop
pushf
lahf
aaa
je
pop
add
stc
mov
in
sbb
jae
mov
int3
mov
arpl
std
sub
mov
ret
std
call
pop
dec
adc
imul
adc
or
mov
stos
call
adc
xchg
sbb
fs
or
ljmp
or
jmp
loopne
jbe
mov
loope
dec
xor
stos
fimuls
sti
mov
lods
mov
pop
into
popf
dec
jmp
gs
lock
std
push
icebp
mov
xchg
cmp
xchg
addr16
call
ss
lock
and
xor
cmp
inc
lret
xchg
pop
lea
jmp
outsb
andb
push
fisubrs
mov
jmp
packsswb
jo
ficoml
push
or
out
pop
or
sbb
es
pop
pop
lea
lea
daa
mov
ret
roll
pop
mov
test
fdiv
cmp
sbb
sti
ret
push
mov
push
jnp
sub
jg
cmpsl
mov
sub
sahf
test
cwtl
sbb
or
sub
loop
xchg
shrb
cmpsb
clc
pop
mov
divb
in
ss
sub
and
ja
imul
xchg
or
mov
je
es
mov
aad
xor
or
jle
lret
sbb
sub
and
inc
sub
les
cmp
test
cmc
cld
cmc
pop
cld
es
xor
mov
push
mov
and
pop
insl
icebp
push
leave
andl
shlb
jp
ds
inc
jge
outsl
mov
or
imul
xchg
or
xor
xchg
cmp
adc
inc
nop
loopne
and
push
mov
cmpsl
xchg
pusha
cmpl
mov
push
jmp
inc
call
mov
xchg
or
pop
fs
and
loop
and
xlat
rcr
icebp
mov
aad
jge
roll
inc
test
or
js
fwait
int
pop
sbb
adc
loopne
jmp
jae
jg
mov
clc
dec
cld
sbbl
cmp
pop
fistpll
lret
int
lock
cmpxchg
ret
sub
mov
into
aam
pop
shlb
sbb
push
inc
inc
mov
jecxz
lea
cmp
xor
out
add
loop
cmpsb
add
nop
push
sub
sub
adcl
mov
push
hlt
loopne
dec
pop
inc
pushf
inc
lock
xchg
or
xor
or
push
add
pop
push
fwait
nop
sub
out
and
cmp
push
mov
shl
push
add
popa
pop
cwtl
std
je
int3
sarl
push
arpl
inc
push
data16
enter
or
mov
jge
popa
xchg
into
jns
punpcklbw
stos
loope
aam
sbb
pusha
jbe
sub
bound
data16
imull
aaa
shll
sbb
xchg
mov
dec
lahf
into
dec
test
enter
dec
bound
pop
xchg
cmp
cltd
mov
xorl
adc
mov
fnstsw
adc
lret
xchg
inc
stc
xchg
das
out
int3
fwait
xchg
lcall
ficomps
das
out
loope
pop
jge
mov
mov
cmp
mov
dec
cmpsb
sub
cmp
jae
lcall
sub
lods
jb
aad
adc
addb
bound
pushf
xchg
js
scas
fwait
aaa
push
leave
mov
sbb
cwtl
mov
pushf
lret
adc
cmp
sub
daa
inc
lcall
lods
push
adc
mov
sbb
lret
pop
jnp
mov
mov
inc
pushf
fwait
lret
xlat
lds
mov
mov
push
mov
ja
sub
pop
lea
cld
push
cmpl
mov
and
aaa
xor
pop
adc
stos
jae
and
push
shl
test
mov
pop
pop
clc
lahf
cwtl
or
mov
jns
gs
mov
arpl
push
jle
push
out
rcrb
in
xchg
and
test
inc
ret
orb
xor
jle
testb
ljmp
repnz
cltd
rclb
push
dec
xchg
cmp
add
cli
inc
push
jae
sahf
inc
add
mov
rorb
pusha
shll
mov
jp
mov
mov
sbb
fnstcw
dec
push
mov
xchg
pop
xor
aaa
out
push
dec
sub
dec
in
icebp
jge
and
fadds
xlat
mov
xor
push
inc
jg
stc
push
push
cmp
jl
sti
push
mov
stc
out
ja
jnp
adc
sub
dec
das
lods
push
pop
sub
cs
repnz
rolb
sub
adc
push
inc
repnz
dec
push
and
sti
int
mov
sbb
jns
mov
out
mov
mov
bound
fidivrs
push
cmpsl
mov
dec
pop
jle
push
je
iret
imul
jnp
mov
push
gs
lea
dec
cmpsl
inc
sbb
fs
inc
inc
testl
int3
mov
movsl
fidivrs
sbb
ffreep
push
xchg
test
cmp
loop
add
retw
cmp
cmpsl
addl
mov
addr16
push
xchg
insl
mov
adc
stos
aaa
dec
les
adc
into
loope
xor
mov
imul
adc
lea
xchg
pop
rolb
movb
mov
daa
in
push
imul
cltd
pusha
inc
and
test
and
mov
push
pop
xor
jne
ss
or
push
aam
mov
ljmp
xchg
sub
push
sub
xor
dec
adc
insb
xor
flds
xchg
inc
sub
and
mov
loope
xor
sbb
adcl
jbe
push
clc
shll
pop
repz
rcl
ret
ret
into
gs
and
dec
push
push
shll
orb
push
sub
sbb
jae
or
ret
cwtl
addr16
mov
hlt
jg
inc
mov
pop
dec
data16
jmp
test
cwtl
aaa
add
out
mov
xchg
aaa
push
jo
rcll
xchg
outsl
lods
jnp
bound
sub
sub
loope
les
roll
mov
xor
and
and
push
pop
arpl
and
cmp
pop
push
sub
mov
xchg
sub
ljmp
or
push
dec
fcmovb
notb
hlt
pushl
jnp
ss
jl
mov
lods
pop
addl
imul
enter
aam
pusha
dec
sbbl
popf
push
mov
nop
jp
mov
decl
cmpsb
adc
je
mov
lret
add
cmp
outsb
mov
push
pop
xchg
jns
lds
add
jb
xchg
aad
xchg
and
push
mov
jmp
dec
mov
pop
dec
cmpsl
mov
add
jae
xchg
popf
pop
into
lret
aam
mov
sarl
sbbl
inc
leave
mov
push
or
mov
mov
adc
cmc
and
es
sbb
fiaddl
mov
push
add
jbe
jmp
push
jg
dec
cld
loope
xlat
aad
pop
int
test
inc
cmp
sbb
push
in
add
cld
dec
int
add
and
gs
or
or
mov
dec
dec
add
xchg
ret
les
inc
push
pop
add
xchg
jecxz
or
sbb
or
repnz
mov
pop
aam
xor
add
pop
mov
out
test
inc
mov
in
xchg
pop
fidivl
push
mov
pushf
icebp
ror
jp
scas
movsb
push
insb
hlt
stc
lods
cmpsl
fidivrs
cmp
cld
pop
nop
push
jne
push
push
jmp
arpl
or
lahf
ss
xchg
out
cmp
out
adc
out
fiaddl
adc
in
push
cmp
sub
lcall
es
sbb
add
jb
in
sub
push
pushf
pop
sarl
ljmp
inc
into
jp
or
nop
inc
enter
cs
imull
loopne
jl
or
jmp
rcrl
pusha
aaa
cmp
cmc
push
stos
push
arpl
test
rorb
push
jmp
aam
out
daa
push
inc
push
xor
lods
jbe
cmp
dec
in
and
scas
and
imul
ret
popl
cwtl
shll
add
jb
adc
int
aas
orl
data16
aam
inc
out
lret
test
sub
sahf
add
enter
mov
jo
sub
sbb
rcll
movsb
mov
cmpsl
sbb
pop
jecxz
jne
mov
stos
inc
scas
imul
outsb
dec
shll
daa
jge
lret
nop
testl
xor
popa
cmp
pop
inc
mov
xor
idiv
test
pushf
mov
mov
mov
and
adc
mov
sub
mov
or
shll
pop
dec
push
or
and
call
cwtl
pop
cmp
xchg
loopne
out
add
xor
jae
test
loope
mov
ret
ds
pop
push
std
mov
cltd
pusha
iret
insb
xchg
cmpsl
je
enter
fmull
outsl
inc
ds
ja
jp
xchg
xchg
mov
add
std
cmp
callw
fnstenv
jmp
lods
out
push
stos
addl
negb
mov
adc
push
xchg
dec
ds
gs
or
mov
push
rcrl
inc
sub
cli
xchg
push
jns
xchg
test
xrelease
add
mov
and
adc
dec
and
or
gs
jle
insl
scas
out
push
lret
sub
pop
cmpsl
add
adc
out
add
push
xor
aas
fiadds
cmp
loope
movsl
hlt
push
or
dec
push
dec
xchg
jae
xchg
jmp
outsb
lahf
int
cld
adc
lret
pop
test
loope
jnp
add
cld
mov
orb
div
mov
mov
push
ds
cs
imul
clc
xchg
xor
pop
xor
negl
test
fwait
mov
mov
xor
leave
daa
enter
fadds
fdivrl
int
sbb
cmp
mulb
ja
aam
xor
add
in
cld
push
aad
cwtl
mov
push
xorb
sbb
pusha
push
and
push
movsl
xchg
cmpsb
enter
dec
lods
and
push
stos
xchg
arpl
push
leave
xorb
sahf
mov
dec
adc
xchg
leave
data16
pop
popa
adc
sub
setge
das
sbb
hlt
scas
mov
out
out
stc
mov
cmp
cmpsb
idivl
in
daa
dec
pushf
js
mov
pop
scas
xchg
lods
adc
ret
data16
and
push
push
outsl
xlat
pop
cmc
mov
jne
jnp
fsts
hlt
cmc
sub
jmp
and
dec
push
xchg
std
push
and
xorl
pop
add
pop
lret
push
push
mov
sub
imul
pop
dec
sbb
or
push
inc
sar
push
scas
add
cli
fiadds
rorl
adc
push
std
cwtl
stos
cmp
es
lea
pop
lods
rol
add
ffreep
and
or
pop
call
mov
xchg
mov
dec
push
mov
scas
and
lcall
out
lret
inc
ret
add
push
call
push
or
sbb
call
push
or
push
rcrb
gs
cltd
cld
mov
dec
or
and
jmp
add
rcrl
jecxz
cmp
testb
mov
fucomi
pop
sbb
jo
xlat
and
jmp
dec
inc
jle
inc
jno
mov
dec
data16
dec
aaa
mov
add
loop
loop
cmp
pop
mov
stos
mov
ret
xlat
and
out
xchg
in
xor
mov
jge
add
sub
gs
in
push
jle
lret
insb
outsb
lods
ret
arpl
fsubrl
pusha
mov
jno
es
adc
scas
lret
mov
rorl
and
loop
lcall
pop
xor
mov
pop
arpl
sub
shr
sbb
push
mov
mov
xchg
xlat
pop
xor
cmpsb
and
fldcw
movsb
jmp
adc
or
xlat
jns
mov
out
pushf
adc
fistps
pop
packuswb
sti
jle
repnz
bound
popa
push
inc
in
or
push
into
sub
dec
push
in
inc
mov
repnz
xchg
add
push
push
mov
xchg
mov
rcrb
inc
enter
cmpsl
dec
lods
mov
inc
jns
add
xor
cs
scas
push
mov
mov
push
or
subb
xchg
mov
ficoml
inc
in
sub
sbb
adc
int
adc
scas
dec
adcb
jnp
cmpsl
pop
adc
xor
adc
adc
push
in
lcall
pop
adc
sub
enter
cmp
and
mov
mov
sub
fcoms
jmp
testl
jmp
push
stos
mov
adc
sbb
loope
push
pushf
aam
std
jnp
aad
push
stos
sbb
std
mov
sbb
movsl
mov
xor
mov
mov
test
push
push
pop
imul
fcompl
jmp
add
popa
je
ret
popa
sub
std
xor
jne
aam
repz
or
lret
cmp
cmpsb
or
fs
rcr
jg
inc
mov
mov
ret
xchg
dec
xor
fs
or
and
loope
sahf
fldt
xor
jl
cmp
push
int
cmpsl
rol
insl
or
out
mov
aas
ljmp
pop
add
fldcw
xchg
jnp
cmp
psllw
sti
test
jb
inc
mov
lahf
jge
ja
pusha
test
dec
xor
fidivl
in
idivb
cwtl
pop
orl
and
scas
dec
cltd
stos
fs
notb
add
sub
inc
xor
fsubr
jae
push
js
mov
cld
js
adc
jl
icebp
mov
mov
dec
shll
and
mov
jno
push
iret
jge
pop
cmp
in
scas
ficomps
mov
movl
xchg
nop
xchg
out
xlat
and
sub
cmp
iret
dec
xorl
add
lahf
int
push
pop
mov
and
aam
rolb
push
push
dec
xchg
repnz
dec
pusha
add
xchg
adc
and
aas
out
jno
test
cmp
jae
cs
dec
and
mov
pushf
and
insb
pop
add
jg
push
imul
inc
mov
in
xor
das
add
xor
pop
lahf
loop
mov
push
and
add
sbb
fabs
pop
roll
mov
or
mov
adc
jp
mov
movsb
jnp
xchg
xor
aad
in
insb
dec
arpl
sub
test
and
repz
pop
ds
movb
pop
sbb
mov
mov
dec
scas
out
imul
inc
add
repz
adc
xchg
data16
in
xchg
lret
push
pop
outsl
sub
inc
scas
adc
lret
std
mov
xchg
cs
jne
ds
lea
les
pop
mov
cmp
push
pushf
lods
or
push
test
insb
test
adcl
inc
push
add
adc
arpl
or
jp
test
shll
sbb
pusha
cmpsb
jb
shlb
pop
out
dec
adc
shr
jnp
in
jecxz
ret
adc
popf
adc
pop
movsl
repz
mov
dec
popa
imul
rol
rcrl
xchg
ja
cmc
xchg
in
mov
aam
mov
sub
mov
sbb
shrb
je
sbb
or
mov
mov
cmpsb
orb
fistl
nop
out
mov
in
dec
adc
fsubrs
inc
fdivl
sbb
aad
popf
movsb
mov
jb
mov
notl
ds
lods
jbe
xchg
dec
fwait
dec
clc
add
pushf
pop
insb
xchg
jg
mov
cmp
addl
stos
xor
lahf
pop
mov
stos
insl
leave
dec
loop
insb
sarl
popa
jne
sbb
inc
jmp
lcall
es
ljmp
dec
int3
shl
add
sti
inc
mov
mov
xor
dec
dec
cmp
adc
addb
fbstp
mov
lcall
outsl
les
sbb
enter
lahf
dec
aaa
push
cmc
clc
mov
imul
or
in
mov
pop
movsb
mov
push
sub
nop
pop
mov
in
mov
call
aaa
adc
outsb
sub
sbb
loope
jne
mov
sbbb
cld
movsl
cwtl
inc
xor
shl
fdivrl
lods
add
add
jecxz
dec
imul
jo
mov
push
les
mov
dec
icebp
and
and
neg
lock
jl
cmp
sub
js
pop
mov
jp
jnp
jp
fnstcw
mov
mov
rcr
scas
push
jle
sahf
or
cmc
mov
sub
cld
mov
push
je
and
jg
aas
psubb
cmpsl
movsl
or
iret
jae
les
test
add
ss
popf
scas
pop
orb
xor
lea
xchg
cld
or
adc
pop
or
movsb
jno
jg
das
xor
push
mov
bound
mov
push
mov
inc
js
out
ret
in
push
push
je
jno
jo
dec
cld
ret
jle
scas
insb
sub
push
pop
mov
test
cmp
add
out
lods
insl
sbb
sahf
in
mov
cld
into
bound
leave
lahf
xor
mov
push
inc
aad
lds
and
shll
push
pop
sub
mov
mov
in
movsb
in
xchg
into
or
jge
pop
dec
pop
cmp
cmpsl
xlat
cli
pop
mov
and
and
cmpsl
jmp
add
cli
lods
and
and
notl
push
ds
pop
movsl
dec
xlat
push
push
adc
mov
std
lret
inc
mov
cmpsb
xor
add
jmp
mov
stos
pop
xchg
mov
push
sub
xchg
push
push
stos
mov
adc
ja
in
out
xchg
inc
stos
dec
and
out
mov
loope
ret
jns
xchg
inc
dec
mov
or
jmp
adc
and
mov
push
jecxz
cmp
sub
xor
repz
sub
bound
push
or
mov
das
inc
leave
arpl
mull
out
into
out
mov
or
mov
jg
mov
scas
jbe
pop
movsb
mov
pop
mov
sbb
icebp
dec
out
xchg
sub
adc
lock
les
cwtl
mov
xor
cli
icebp
mov
xchg
sbb
lahf
movsl
or
andb
mov
dec
sahf
xchg
out
jmp
adc
outsb
es
jp
out
inc
mov
push
xor
add
mov
loopne
es
addr16
push
imul
clc
test
xchg
das
repnz
or
push
pop
adcl
imul
inc
mov
jmp
aas
xor
aam
sub
scas
mov
ljmp
add
int
pop
js
lcall
aaa
addr16
adcl
loopne
mov
jecxz
sahf
loop
sub
jb
pop
adc
and
int3
add
pop
mov
fstp
mov
fadd
pop
cmp
lods
pushl
out
out
push
jmp
test
in
push
mov
mov
hlt
rcll
jmp
pop
imul
push
sbb
mov
ds
xlat
sub
cmpsl
adc
xor
inc
je
mov
xor
or
xchg
je
push
lea
push
add
lahf
popa
outsb
fidivl
data16
call
out
mov
dec
inc
in
sbb
mov
mov
mov
xchg
jb
or
imul
frstor
push
push
sahf
jo
scas
push
test
adc
out
xchg
dec
adc
xlat
jmp
daa
mov
dec
je
cli
xor
daa
sub
repz
repz
sbb
in
into
push
outsl
mul
outsb
hlt
pop
fisttpl
cmpl
pusha
cmp
repz
cld
mov
data16
fs
dec
mov
aaa
jb
test
pop
rdpmc
adc
jno
jecxz
add
out
xchg
pop
push
pop
gs
ret
pop
das
pop
lea
mov
movsl
mov
insb
xor
push
stos
xor
andb
jns
mov
xlat
test
pop
pop
dec
lcall
adc
push
mov
int3
lret
push
adc
add
and
mov
sub
inc
ljmp
cmp
sbb
js
scas
fisubs
jb
push
scas
inc
mov
jo
cs
xchg
loop
movsl
and
mov
dec
nop
cld
and
pop
adc
lods
dec
and
imul
pop
xchg
jb
shrb
out
lret
lret
push
jle
ret
sbb
lods
mov
sub
jns
pop
outsb
inc
jl
cmpsb
jle
push
fisubs
aam
repnz
jae
jp
mov
pushf
fsubp
pop
ljmp
ret
repnz
ljmp
rol
jle
lret
lret
adc
cmp
sahf
inc
or
lods
leave
in
inc
xchg
pop
ret
add
adc
xor
push
mov
mov
in
sub
ja
pop
sub
shll
jecxz
mov
adcl
iret
or
mov
ret
cmpl
mov
xchg
adc
aam
sarb
mov
mov
jle
dec
inc
lods
leave
test
pop
lods
dec
and
mov
inc
aam
pushf
sbb
inc
jo
scas
std
hlt
xchg
jle
jp
inc
or
xchg
movsl
cmp
pop
rcrb
sti
ss
push
out
xchg
nop
mov
mov
sbb
or
rorb
xchg
cmp
insb
roll
stos
sti
adc
test
add
imul
out
fsubrl
sar
ja
adc
aam
enter
movsb
hlt
aad
movsb
jo
adc
pushf
cmp
das
popa
jle
addl
test
or
cs
xchg
subl
lods
ja
cmc
lods
push
push
dec
push
sub
add
repnz
shr
sahf
jge
sub
cli
xchg
lock
shrl
rcr
pop
ret
inc
add
sbbb
jl
xor
sbb
inc
lods
dec
lods
xchg
popa
cli
fcmovne
into
inc
dec
sbb
orl
leave
pop
sbb
sbb
int
xor
fsubrl
ret
shl
out
inc
jnp
and
int3
sub
jae
sbb
xchg
in
cwtl
fdivrs
andb
loopne
mov
adc
stc
sbb
jne
xor
jns
ret
cmp
jae
aam
mov
iret
mov
dec
das
test
inc
mov
mov
dec
cli
xor
push
ret
dec
xchg
loopne
hlt
sahf
pop
jmp
or
pop
fldl
sub
xchg
jge
mull
es
rcrb
shl
xchg
cltd
and
add
ljmp
dec
lock
dec
test
fstps
inc
add
insb
dec
pushf
cmp
dec
jmp
mov
xorb
shr
cmpsb
add
js
mov
cmp
push
sti
cmp
xor
or
sub
cmp
push
and
imul
lahf
adc
adc
add
dec
inc
mov
cld
adc
movsl
out
std
test
push
mov
jmp
lea
push
jge
pop
jo
ja
mov
xchg
cmp
pop
or
pushf
xor
popf
xchg
sbb
fsubl
pop
roll
lea
mov
jo
mov
inc
sub
xor
xchg
dec
loopne
mov
jg
lea
sub
push
mov
jge
movsb
add
mov
mov
mov
cmp
mov
inc
or
inc
pop
push
mov
pop
pop
repnz
xchg
cltd
pusha
stos
sbb
dec
inc
sar
dec
inc
xorl
cltd
push
push
inc
fsubs
fiaddl
iret
jle
xor
lock
lret
jae
scas
jo
jle
in
movsl
fcompl
jns
sub
jge
xchg
int3
lret
xchg
stos
scas
ljmp
jnp
notb
jge
fucomip
add
fisubl
xor
sti
push
mov
adc
cmpsb
int
mov
rclb
jbe
repnz
sub
inc
pushl
sbb
cmp
in
lea
cmp
mov
pop
stos
mov
jp
adc
lea
insl
shrb
mov
jnp
mov
into
sbb
dec
js
popa
mov
sub
jge
aam
jae
filds
fiadds
jb
test
push
mov
mov
lds
jecxz
and
jno
pop
push
lock
jbe
pop
dec
movsb
push
out
jge
cltd
xchg
sub
out
xchg
or
xchg
inc
sbb
add
mov
in
xchg
adc
xchg
sbb
clc
jno
sahf
lahf
or
out
xchg
add
mov
movsb
fwait
out
cwtl
adc
jns
cmp
fidivs
mov
loop
lock
sti
fadd
enter
mov
push
call
inc
xor
cli
pop
clc
flds
aam
push
call
andb
mov
lret
mov
sub
mov
pavgb
or
movsb
adc
cmp
pop
jbe
xchg
push
outsl
out
pusha
or
cwtl
sbb
inc
pop
out
clc
aaa
sbb
dec
in
cmpsl
cmp
mov
or
or
js
repnz
es
sub
push
jae
sbb
jnp
jne
pushf
movsb
mov
sub
mov
add
jge
push
out
inc
jecxz
mov
push
mov
movsb
cmp
jmp
mov
and
pusha
shl
aas
cmc
out
sarb
mov
mov
rep
fimull
mov
xchg
or
and
test
test
adc
xchg
fiadds
pop
jno
in
xor
mov
pop
push
mov
mov
bound
mul
push
cwtl
movsb
xor
lods
inc
ret
sub
or
xchg
ret
ror
and
push
aas
loop
or
rorl
xchg
or
aaa
fwait
cmp
sbb
dec
xchg
scas
and
mov
fs
adc
and
ror
lods
sub
fs
imul
push
pop
subb
xor
and
mov
testl
int3
aas
lret
xchg
out
stc
jbe
xchg
xchg
pusha
mov
push
addr16
xchg
dec
lods
adc
hlt
dec
fistps
jbe
or
dec
out
call
cmpsl
sub
xchg
adc
shrl
movsb
dec
or
aaa
lea
xchg
lods
test
js
sub
fsubl
xlat
dec
dec
or
or
mov
insl
dec
imul
inc
pop
out
xor
mov
push
ljmp
and
fimuls
nop
cmp
or
stos
mov
test
xor
inc
sub
sbb
pop
js
cmp
aas
aas
cmp
push
dec
push
add
js
push
jl
sbb
rcl
push
sti
mov
pop
mov
repnz
insl
bound
scas
sti
xchg
dec
jnp
out
mov
sbb
pop
ficomps
cmpb
push
in
andl
mov
dec
loop
mov
push
jb
fsubp
push
shr
and
xchg
rolb
xor
je
and
push
aam
pop
test
dec
jns
lret
arpl
shr
jb
fsubrs
pop
outsl
push
mov
add
cs
mov
test
pop
fsub
jle
fbld
orb
xorb
push
jge
ja
add
fdivs
mov
aad
repz
add
pop
push
movntps
mulb
outsl
aaa
jb
jle
or
fs
mov
adc
std
out
dec
jbe
sbbb
or
cmp
cmpsl
xchg
rcll
mov
outsl
mov
or
push
cmc
insl
es
clc
adc
fs
loop
push
jle
mov
push
arpl
sub
mov
sub
pop
mov
aaa
mov
js
dec
or
sbb
jb
int
popa
cmp
cli
lcall
push
adc
adc
mov
sub
inc
adc
sahf
fldenv
add
call
cmp
rcrb
in
rcll
xor
ss
int3
push
push
add
dec
outsb
xchg
and
jae
shll
cwtl
dec
cmpsl
outsb
or
sbb
or
jns
jno
xor
loop
inc
in
subl
inc
inc
in
jmp
inc
or
jmp
pop
cmp
arpl
lret
je
dec
xor
aad
inc
sbbl
outsl
push
movsl
repz
int
xlat
pop
lock
gs
hlt
xor
inc
das
mov
jmp
lcall
push
sbb
call
push
addr16
mov
pop
dec
inc
das
dec
mov
stc
sbb
jecxz
dec
lods
push
mov
out
subb
inc
cli
lret
cmp
scas
dec
push
xor
pop
sahf
push
stc
bound
sbb
rcrb
cli
lcall
lds
fistps
ret
dec
hlt
daa
sub
mov
testb
pop
sbb
push
sbb
and
mov
movsl
ljmp
fs
repz
cli
das
cmp
fwait
xor
add
int
stos
jbe
das
leave
mov
lcall
loopne
or
pop
jmp
mov
xor
and
or
mov
shll
daa
add
push
test
cmp
cwtl
jns
sbb
pop
test
jmp
xlat
sbb
mov
xor
add
shl
outsb
push
ljmp
test
mov
movsb
cwtl
push
adcl
dec
in
dec
sbb
or
ljmp
add
subl
inc
cs
dec
lret
pop
sbb
mov
and
stos
inc
add
add
ljmp
into
add
pop
inc
and
jbe
xor
mov
in
jne
pop
data16
pop
aas
cmp
inc
ds
adc
inc
push
pop
sbb
lahf
fucomip
dec
mov
xchg
dec
js
mov
out
sub
addr16
or
pushf
sub
pop
add
imul
ficoms
call
fucom
in
mov
js
adcb
out
adc
rcl
or
xchg
int
lahf
push
flds
or
gs
cld
lea
mov
adc
dec
rcrl
popa
dec
fistpl
inc
or
cli
orb
stc
inc
mov
mov
aad
push
inc
sub
xchg
aad
mov
out
adc
push
sbb
repnz
sub
mov
test
ljmp
int3
jg
hlt
and
mov
cmp
jecxz
aaa
addb
cld
in
cmp
je
pop
cwtl
dec
mov
mov
adc
push
or
and
push
in
cmp
ret
stos
aas
fs
xor
cmp
xchg
int3
test
test
outsl
lahf
lods
sarl
inc
ficoms
shlb
pop
fsubr
cmp
or
adc
jns
ljmp
ds
mov
outsl
mov
cli
lcall
sub
xor
shll
mov
mov
mov
sub
sbb
outsl
in
cmp
add
mov
or
pop
jle
movd
inc
pushf
cmp
and
sar
cwtl
mov
into
in
fldcw
pop
hlt
sub
xor
lock
push
mov
inc
mov
lods
xchg
xor
mov
addb
rolb
jae
out
loopne
adc
jne
mov
xor
dec
les
xchg
cmpsl
and
dec
push
aaa
shll
pop
popf
and
push
xchg
xlat
adc
in
xorl
fld
pop
jle
aam
out
or
inc
push
scas
lods
jb
sbb
nop
cmc
inc
mov
jnp
jae
dec
mov
sbb
push
push
xchg
pop
or
adc
mov
dec
rsm
pop
arpl
push
rcll
and
mov
and
mov
jecxz
ficoms
sbb
mov
mov
push
movsl
or
ds
lods
in
jge
xchg
pushf
pop
test
aad
inc
dec
cmp
xor
sbb
jnp
aas
jge
sub
jo
or
mov
jne
sub
vandps
fidivs
pop
loop
lret
lds
or
leave
mov
scas
sahf
add
js
rcrl
mov
xchg
xchg
in
xchg
lock
mov
fcmovb
insb
imul
call
call
inc
in
mov
mov
inc
clc
and
out
ror
inc
push
mov
add
or
push
add
loopne
add
out
jmp
movsb
push
mov
loope
cmp
pop
xor
xchg
addr16
lahf
fdivl
xchg
xchg
mov
push
mov
or
mov
pop
jecxz
mov
imul
add
cmova
cmp
into
enter
sbb
sbb
xor
mov
mov
add
sbb
sbb
cmp
lret
jnp
push
and
fldcw
xor
shll
jae
xchg
addr16
sub
sbb
add
lods
mov
sti
jae
scas
sbbl
arpl
mov
sbb
scas
lahf
test
pushf
jbe
adc
cmp
ret
test
sub
pop
je
push
xor
call
out
or
jecxz
mov
pushf
fstpl
nop
das
jnp
stos
mov
mov
cmp
leave
imul
adc
add
jo
or
insl
imul
pop
nop
mov
jne
mov
inc
mov
rclb
std
arpl
out
cmp
cmovno
in
push
add
dec
insl
and
cli
add
out
sbb
std
push
adc
xor
in
sub
stos
add
push
js
leave
or
push
sahf
adcb
sub
inc
leave
jl
push
loopne
lahf
test
nop
rorb
push
and
imul
push
mov
push
pop
xor
push
hlt
jno
pop
dec
pop
inc
jl
stos
pop
dec
and
ds
test
popf
pop
fidivrs
dec
push
sub
jecxz
mov
dec
test
sysenter
outsl
pop
pop
and
add
jmp
mov
lahf
jns
nop
pop
call
es
jbe
cld
pusha
rorb
adc
and
lods
xchg
ret
xchg
dec
mov
mov
push
push
push
xchg
cmp
xchg
add
cmovge
inc
into
and
repnz
push
mov
add
mov
xchg
out
mov
pop
pop
jnp
push
push
pop
es
movsb
push
aas
sbb
lods
sbb
sub
cwtl
adc
pop
add
cmp
add
outsl
xorb
clc
and
xlat
iret
jns
mov
add
mov
xchg
xor
mov
mov
cmp
push
stos
idivb
jne
adc
cmp
inc
dec
ds
loope
sbb
xor
xor
lock
mov
lods
lret
adc
dec
jae
dec
xchg
or
or
push
data16
adc
adc
nop
and
shrb
xor
cwtl
fldt
sbbl
icebp
popa
adc
jg
in
movsl
pusha
sub
sub
mov
das
and
icebp
pop
nop
jnp
pushf
out
mov
dec
fisttpl
pusha
inc
mov
cmpsl
mov
imul
or
inc
push
and
mov
mov
xchg
jnp
xor
lock
sti
test
push
test
mov
inc
stc
lods
and
push
cmpl
shrb
sub
dec
arpl
jb
or
xchg
shlb
rcr
aad
xchg
pop
mov
add
jnp
mov
loope
clc
mov
xor
xchg
jp
sub
outsl
inc
call
fildll
test
or
enter
mov
and
mov
mov
test
or
jl
mov
repnz
clc
cmp
mov
adc
xchg
lock
scas
divl
gs
pop
adc
mov
in
mov
outsl
adc
test
lcall
xor
rolb
imul
pop
les
gs
sub
sub
xorl
aas
and
dec
pop
or
cmpsl
iret
rorb
jmp
stos
add
adc
idivb
mov
add
sbb
leave
mov
push
in
lds
dec
std
gs
dec
push
jbe
inc
scas
or
outsl
out
into
or
andl
xchg
xor
pop
xor
arpl
mov
mov
mov
addl
movsl
sbb
add
and
lock
xchg
xchg
mov
cmp
imul
fiaddl
cmp
mov
sub
mov
add
or
ljmp
or
popa
add
jl
les
fstpl
cwtl
popf
push
mov
mov
ljmp
push
jae,pt
inc
adc
insl
scas
adc
inc
shrb
sahf
pop
mov
xorb
ds
sbb
jbe
push
scas
cltd
idivl
sbb
ja
rcrb
mov
enter
lret
aam
jl
pop
pop
rolb
aam
movsb
andb
movsb
mov
xor
fucom
xor
lods
mov
stos
lcall
cmp
dec
in
pop
cwtl
mov
fimull
test
mov
lahf
int3
push
push
ja
xchg
jno
mov
cltd
out
ffree
cmp
andb
cli
inc
and
push
inc
lods
pop
call
ss
mov
xchg
imul
repnz
add
test
jbe
lret
xchg
mov
sbb
dec
sbb
ret
daa
je
sahf
pop
xchg
xchg
dec
popf
xchg
lock
or
addr16
xchg
int3
lea
push
xchg
mov
adc
and
ja
inc
fldl
jp
or
call
mov
or
or
rolb
mov
adc
dec
gs
and
inc
jae
fsubs
cmc
adc
dec
cmpsl
andb
stc
lods
and
aas
push
cld
and
and
and
insl
shll
cmp
lahf
jnp
scas
out
mov
and
mov
mov
xchg
clc
lods
push
shrl
test
shrl
or
mov
popa
and
pusha
jo
cld
pusha
cmp
pushf
mov
rcll
stc
js
imul
or
fistpl
sub
loop
or
push
mov
mov
push
int3
gs
std
cmp
stos
or
cld
loop
sarl
cmp
adc
fsubrp
mov
cmp
out
jp
jecxz
jno
mov
cltd
mov
jmp
rclb
in
cmpsw
pop
in
mov
cmp
push
xor
cmp
and
popa
push
stos
cmp
mov
ds
jmp
mov
dec
ss
or
outsl
cmc
jne
mov
fucomip
jo
mov
cltd
mov
imul
sub
xchg
aad
jmp
scas
repnz
cmp
decl
jg
int
mov
rolb
jecxz
or
scas
jnp
adc
pop
pop
andb
add
sbb
adc
push
sar
icebp
push
dec
popl
add
add
xor
jmp
mov
mov
fisubl
add
data16
sti
popf
paddd
pusha
out
jecxz
bound
dec
das
cmp
mov
rcrb
jb
cld
loopne
mov
sbb
mov
les
cltd
mov
cmp
push
inc
inc
in
pop
das
ret
pop
dec
insb
js
ljmp
int
dec
mov
push
dec
in
stos
inc
popf
les
mov
xchg
call
jle
loop
mov
xchg
dec
mov
fildl
mov
mov
xchg
and
mov
ds
hlt
and
dec
lcall
jo
cmpsl
xchg
fwait
jno
push
jns
mov
mov
cltd
mov
push
jae
pop
xchg
jg
jl
xor
in
push
and
mov
cmp
cmpb
mov
mov
xor
sbb
idiv
enter
jp
lahf
bound
xchg
sub
lods
shl
lock
lahf
fisttpll
cld
and
mov
int
idivl
outsb
rorl
repz
fcmovu
cmpsl
fwait
test
jne
imul
and
shr
jno
arpl
jbe
in
scas
loop
testl
fsubrl
cwtl
or
sub
rol
jg
xor
nop
imul
add
mov
dec
test
data16
mov
xor
xor
adc
shl
xor
ret
adc
into
add
imul
arpl
push
inc
jmp
dec
addl
xchg
mov
cltd
mov
adc
add
insl
inc
in
das
pop
repnz
xor
mov
jae
jmp
hlt
aad
mov
cmp
jl
pop
mov
xchg
add
add
adc
dec
pop
cld
pop
xchg
mov
out
sub
sbb
movsb
das
pushf
jle
push
mov
fdivrs
or
and
sti
in
roll
adc
push
mov
subl
inc
js
test
dec
mov
pop
stos
xchg
jp
pop
fidivrs
jg
in
sub
push
adc
xor
pop
push
shll
rcr
stc
mov
lds
and
sub
std
mov
push
adc
jmp
imul
mov
shl
inc
shlb
cwtl
add
sahf
fsub
rclb
push
pop
es
cmp
push
inc
push
inc
push
test
test
cmp
mov
dec
int3
lea
aaa
inc
mov
inc
inc
andl
int
sub
ss
mov
cmp
jecxz
mov
push
mov
std
ret
mov
pushw
pop
cmp
and
test
pop
lret
sub
xchg
add
push
adc
xchg
nop
mov
fisttpll
jg
aad
stos
loopne
shl
jge
mov
mov
mov
rcll
push
cmp
or
clc
mov
cmp
jmp
xchg
xchg
fsubl
xchg
stos
adc
add
push
or
mov
test
jge
lods
testb
data16
loop
or
iret
out
pop
cmp
je
xchg
mov
pop
cmp
in
cli
movsb
daa
inc
jg
outsl
jo
push
aaa
push
pop
dec
pop
cmp
xor
ljmp
ja
jge
lcall
cmp
ljmp
ss
cmp
push
rolb
sbb
ret
das
jo
cmp
test
dec
jo
lret
or
cmpxchg8b
out
xor
add
pop
mov
pop
add
out
outsl
mov
push
xor
xor
ret
lahf
or
lahf
sbb
cmpsb
push
and
and
inc
stos
mov
and
add
out
and
xchg
inc
jg
fidivrs
std
mov
push
lahf
jmp
mov
jmp
sbb
repnz
adc
dec
adc
jle
in
loope
xor
xor
inc
js
xchg
inc
or
sbb
jl
test
xchg
mov
add
addb
push
mov
pop
sbb
int3
aad
cmp
xchg
push
jge
push
int3
arpl
add
jmp
stos
jns
insb
pop
mov
or
mov
pop
movsb
mov
aad
xchg
lahf
and
ret
jne,pn
shlb
lcall
cwtl
or
xor
cmp
cmp
mov
fdivrl
arpl
add
pushf
xchg
dec
xor
inc
mov
bound
jns
jmp
aam
jns
ret
inc
jle
mov
mov
insb
mov
rol
fwait
sbb
test
inc
hlt
out
mov
push
scas
clc
sbb
fcomip
dec
xchg
adc
jecxz
fsubrl
inc
mov
sbb
lea
int3
and
pop
push
mov
je
lods
fwait
xchg
shll
adc
push
add
jnp
out
jge
cmp
add
sub
mov
mov
pop
les
xchg
insl
xor
jmp
scas
lahf
rcl
and
xor
and
outsb
jno
sbbb
fs
jge
sub
add
and
inc
aad
adc
dec
loopne
aam
mov
and
lcall
push
inc
lahf
mov
pop
ds
sub
test
dec
pop
jns
lret
cs
jg
clc
test
enter
fimuls
and
pop
push
mov
or
xchg
mov
inc
out
mov
xor
push
rcrl
movl
dec
mov
aam
jg
and
lods
clc
xchg
cltd
outsl
pop
outsl
mov
mov
or
xchg
add
lret
or
and
aas
inc
fdivrl
pop
inc
xchg
adc
pushf
push
xor
mov
cmp
push
dec
aam
lahf
out
pop
mov
les
push
xchg
js
cmc
lds
out
cmpsl
sub
pop
add
in
adc
hlt
icebp
mov
out
xor
popf
jae
in
pop
mov
dec
inc
sbb
dec
push
mov
shll
and
mov
loop
adc
pop
or
and
push
add
pop
mov
inc
add
xchg
sbb
sti
dec
sbb
hlt
fmull
cmp
scas
mov
lret
scas
popf
pop
adc
dec
mov
bound
aad
add
sbb
and
ret
cmp
cmc
and
add
or
into
aas
adc
repnz
aam
push
mov
mov
int3
rolb
mov
inc
add
pop
inc
or
xchg
ss
mov
ljmp
jnp
and
ja
loopne
lret
roll
push
ret
scas
cmp
jle
xchg
xor
pop
and
orb
or
subb
in
pop
or
adc
or
movsl
test
pop
out
call
push
inc
cmp
cmp
clc
adc
push
test
loope
mov
push
out
lcall
sbb
sbb
les
dec
jge
push
call
mov
fbstp
lcall
or
xchg
test
addr16
notl
add
fidivs
insb
mov
cmp
jo
dec
or
jg
jmp
pop
jbe
cmp
xchg
add
pushf
repz
into
test
mov
ja
cvttps2pi
push
in
and
mov
aad
fimuls
or
in
pop
sbb
fadds
pop
adc
xchg
out
movsl
jno
dec
repz
xor
pop
insl
mov
std
je
pop
inc
test
xchg
fisttps
cmpl
cmp
push
pop
push
fcomps
rcr
and
xchg
pop
add
xchg
clc
adcl
dec
and
in
fmull
insl
jns
test
xlat
mov
aam
pop
mov
cmp
xchg
leave
in
ficoms
ja
std
jl
adc
leave
int
and
xchg
cmp
dec
sbb
inc
sub
pop
enter
daa
push
movsb
push
push
push
out
push
inc
fists
cwtl
ficoml
mov
int
das
movsb
cmp
inc
sti
les
sbb
mov
pusha
add
sbb
mov
cli
test
test
notl
loopne
andb
inc
fstl
pop
jle
cmpsb
mov
movsb
pop
mov
mov
or
and
adc
out
mov
cld
cmp
cld
mov
add
sbb
mov
outsb
ljmp
add
bound
out
mov
rorl
lret
pop
pop
pop
pop
pop
add
adc
mov
loopnew
and
imul
pop
gs
adc
cmpsl
lods
xlat
divl
rcrl
pop
and
inc
sbb
xchg
cmpsl
bound
je
mov
jg
clc
ds
idivb
mov
xchg
iret
cmc
push
enter
adc
xchg
enter
or
leave
lahf
mov
or
mov
sbb
shlb
adc
cmpsb
mov
cs
xchg
cld
mov
add
push
sub
pop
mov
lea
push
shll
xor
mov
and
std
adc
jl
enter
and
movsb
insb
fidivl
adcb
cmp
pop
dec
jo
out
lret
push
add
pop
shld
fstl
or
pop
repnz
mov
pop
movsb
es
and
jl
dec
mov
push
nop
imul
jge
sub
mov
or
fdivrs
cmp
lahf
cmp
mov
das
fists
rcr
xchg
jmp
jbe
pop
and
mov
ja
jp
mov
outsb
in
sbb
push
lret
jbe
mov
mov
mov
pop
stos
push
imul
enter
adcl
mov
insb
sbb
adc
movsl
movsb
adc
jl
out
push
or
xor
xchg
mov
xor
cmp
orb
shr
ss
mov
mov
idivb
cltd
cmpsl
xor
fdivrs
cmp
xor
call
pop
add
lods
test
sub
testb
push
shlb
add
ja
adcb
arpl
in
ss
clc
and
push
jo
add
insl
and
out
rorb
xchg
stos
mov
pusha
adc
cmp
jbe
mov
push
xor
pop
rcll
cmp
adc
data16
xor
mov
int3
dec
imul
xchg
lret
inc
iretw
in
dec
mov
sbb
ret
insb
shlb
pop
push
shrb
out
dec
add
rcr
xorb
enter
mov
push
push
mov
arpl
dec
out
dec
jo
adc
imul
cmp
pop
shlb
clc
mov
imul
mov
or
dec
jmp
lds
push
cmp
adcl
or
sbb
xchg
cmovne
sbb
cs
addr16
mov
sub
sbb
mov
jmp
mov
enter
stos
orl
or
test
mov
fmuls
mov
popa
data16
lods
xchg
sti
cmp
or
xchg
stos
es
sti
lahf
inc
rolb
pop
xlat
call
inc
or
mov
pusha
jae
out
les
jp
sbb
bound
push
ss
mull
push
ss
mov
sbb
jne
out
fs
rcl
pop
imul
xor
sbb
addl
add
jno
pop
cmp
shll
lods
test
mov
mov
shll
push
push
add
and
push
and
adc
push
ja
in
lret
sub
xor
pop
mov
scas
inc
or
adc
jae
add
pushf
stos
sub
lahf
sbb
mov
test
jnp
pop
mov
negb
dec
push
push
push
imul
pop
dec
fildl
shll
dec
movsb
jmp
adc
mov
adc
movl
lods
xor
sub
sbb
in
jle
cltd
cmp
imul
cltd
into
mov
fcmovnbe
out
sbb
or
ret
popf
loopne
leave
push
add
testb
into
movsl
scas
popf
push
and
shll
fmuls
scas
mov
ret
jno
addr16
fnstenv
fsubrp
shll
scas
jns
jnp
fisubrs
sahf
mov
push
jge
fisttpll
arpl
mov
arpl
cmpb
sbb
fyl2x
mov
adc
in
add
jp
popf
adc
ja
push
pop
push
popa
sbb
inc
shlb
lcall
cmpsl
data16
lea
inc
lret
cld
shl
stos
dec
lods
imul
mov
ffree
sub
subl
pusha
int3
fs
and
bndldx
push
cld
clc
mov
fadd
loope
cmpsl
pop
sbb
daa
jmp
xlat
xchg
std
addr16
into
mov
pusha
jns
imul
push
stos
mov
jmp
push
inc
add
mov
inc
lds
pop
xchg
inc
jne
jle
mov
popf
push
aad
enter
insl
inc
xchg
arpl
push
add
mov
sub
xchg
repnz
arpl
pop
out
das
out
mov
xor
stos
mov
adc
lcall
jmp
out
push
add
pop
jno,pn
jne
stos
ret
arpl
std
cmp
lds
add
inc
jl
add
sbb
jno
xchg
test
mov
adc
jg
in
repz
push
popa
arpl
xchg
movhps
sbb
iret
sub
mov
dec
mov
lea
mov
or
rclb
cmp
xchg
cmp
adc
xor
pusha
cmp
jo
push
xchg
mov
fnstsw
mov
pop
mov
and
std
push
out
dec
clc
adc
dec
roll
adc
xor
imul
movsl
lcall
xchg
sub
cmpsl
and
je
lcall
cmp
into
mov
ja
cmc
bound
jae
inc
leave
fwait
mov
ret
xor
rcr
inc
fwait
loope
and
in
popf
or
inc
or
mov
push
mov
mov
testb
into
popf
or
cs
in
xor
gs
pusha
test
jecxz
lea
cld
shlb
push
cmp
add
bound
pusha
cmpsb
rcll
hlt
movsb
ret
mov
mov
jecxz
test
stc
loopne
cmp
mov
adc
lea
lahf
stos
mov
push
jl
cmp
test
sbb
arpl
iret
pushl
mov
pop
sbb
subb
or
push
sbb
add
mov
ficompl
test
call
mov
mov
add
xchg
sbbb
pushf
loope
ficoms
daa
outsl
fisttpl
inc
jo
ljmp
icebp
fnstcw
xchg
outsb
loopne
or
mov
cli
jmp
cmpb
je
fiadds
pusha
cmp
cwtl
sub
mov
test
sub
xchg
sub
push
js
test
lret
dec
push
sbb
mov
insb
pop
lods
rcll
jo
out
sbb
and
sbb
sbb
ret
pusha
or
pop
jecxz
or
jge
add
test
inc
in
pop
xor
sbb
or
sub
lods
pop
pop
fwait
mov
push
mov
xor
ret
sub
cld
ror
out
pop
repz
lcall
push
or
push
sub
insl
mov
fidivrl
adc
icebp
test
adc
cmpsb
dec
out
add
and
mov
adc
pop
mov
inc
jbe
cltd
add
add
outsl
dec
adcb
pop
dec
jno
fisubl
sub
inc
rolb
ret
adc
jbe
push
imul
ret
in
add
cmp
ret
pop
cmp
sub
call
lahf
mov
aaa
jnp
xchg
pop
mov
popa
xor
pop
mov
mov
mov
cmp
push
call
in
jnp
outsb
jge
insl
sub
test
aad
cmc
cmpsb
iret
dec
pop
adc
dec
adc
aaa
jmp
or
or
inc
sub
lods
jns
cmpsb
jg
push
mov
mov
and
or
incl
jnp
inc
pop
insl
lret
inc
adc
pop
xchg
ret
decl
mov
ljmp
shlb
adc
mov
aaa
popf
fistl
outsl
rclb
notl
pop
or
mov
adc
iret
mov
addr16
fisttps
push
pop
loopne
cmp
enter
mov
xchg
in
data16
jge
mov
cs
out
fmul
pusha
repz
adc
clc
fiadds
jmp
pop
jl
test
data16
mov
dec
inc
sarl
cld
cld
scas
adc
xchg
sub
jbe
jnp
rdtsc
push
mov
enter
push
sahf
inc
rorb
adc
add
mov
mov
cmp
out
cli
insb
pusha
mov
jmp
das
sub
fistpl
xor
lods
arpl
cmp
cli
push
cmp
and
sahf
adc
add
pushf
xchg
decl
sbb
mov
push
jle
test
ret
or
lods
into
push
lock
mov
in
xchg
decl
popf
repnz
xchg
mov
lret
sarb
inc
push
inc
fs
and
push
sub
pop
int3
jmp
mov
or
in
lds
outsb
push
or
mov
lret
gs
cmp
jae
ljmp
inc
and
or
mov
jge
lret
js
and
pop
ficoml
pop
repnz
out
mov
jecxz
jb
mov
in
mov
mov
jns
stos
rcrb
jo
push
gs
je
sbb
pusha
cmpsl
jnp
pop
int
adc
sbb
mov
mov
mov
xchg
pop
push
in
mov
push
testb
pop
xchg
icebp
inc
enter
rcll
sub
daa
test
xchg
movl
movsb
sbb
in
or
outsl
pop
dec
mov
adc
sub
ja
fbld
ror
adc
inc
jns
jae
lds
popf
push
dec
xlat
aaa
mov
pop
ss
dec
nop
insl
imul
shlb
xor
scas
mull
pop
mov
cmp
fdivl
int3
das
cmp
rol
aad
dec
sahf
outsl
sbb
jmp
and
add
aas
sbb
adc
push
jns
xor
pop
repnz
sti
ja
dec
in
scas
adc
add
jle,pn
cmpsb
inc
and
shrl
outsl
stos
dec
lock
lcall
mov
inc
loope
lea
mov
rclb
xchg
lds
std
add
cltd
arpl
mov
jns
mov
iret
xchg
pop
xor
pop
loope
mov
fcmovnb
pop
rcrb
iret
mov
aaa
sti
jp
jbe
push
mov
int3
push
enter
arpl
popf
pop
lret
fstp
cmpsl
mov
test
imul
lods
push
inc
mov
push
daa
loopne
or
cld
dec
orl
xchg
shlb
fs
insb
lcall
insl
mov
mov
nop
mov
and
jg
incb
ret
arpl
mov
mov
inc
loope
fbld
sub
mov
cmovg
adc
aaa
stos
mov
xor
push
mov
and
sbb
ss
xor
mov
jae
imul
xchg
aas
int3
jge
sbb
or
sub
cmp
cmp
subb
mov
sub
cltd
inc
xlat
data16
sbb
xchg
shll
xor
daa
fidivrl
sbb
outsb
push
jle
test
das
jns
rcll
inc
or
lock
loop
mov
jl
test
insl
sbbl
ficomps
jae
orb
test
xchg
mov
cmp
dec
ss
sub
in
je
test
stos
jb
adc
jp
lods
xlat
insl
es
mov
cmp
jecxz
mov
shrl
xor
push
iret
cmpsb
mov
adc
fsubrl
mov
jle
movsb
clc
sbb
mov
mov
push
jbe
ja
xor
lret
enter
mov
cmp
out
inc
push
test
xchg
in
repz
adc
fcmovnbe
ss
mov
xor
add
ror
xor
std
call
test
pop
ljmp
dec
adc
adc
add
test
add
or
stos
inc
pop
repz
outsl
xchg
mov
push
xrelease
xor
jae
test
xor
divl
xchg
mov
in
shll
push
mov
push
fbstp
jb
lcall
clc
call
add
jno
jns
xor
mov
jg
fistl
popa
push
mov
scas
fwait
xorl
es
mov
cmp
xor
mov
pushf
test
or
and
out
or
xor
int3
repnz
fwait
repz
out
pop
andb
fs
outsb
pop
gs
inc
mov
jle
rcrb
scas
xor
pop
push
pop
xchg
shll
iret
pop
xor
test
mov
or
imul
ret
scas
js
mov
push
jmp
mov
mov
push
add
popa
mov
clc
adc
iret
adc
push
push
mov
fcoms
and
imul
lock
adc
adc
mov
mov
push
lret
jle
notb
xor
rcl
and
xor
inc
ds
mov
sub
add
ss
jecxz
jne
lods
leave
pop
or
out
cmp
jmp
les
add
xor
push
xchg
and
push
mov
adc
push
push
and
lcall
hlt
sub
xchg
add
xor
mov
push
push
mov
adc
mov
and
scas
dec
in
nop
jae
pop
scas
cmc
adc
sub
daa
mov
mov
stos
xor
outsb
pop
js
shl
pop
cs
rcrl
jno
test
ds
mov
adc
push
xchg
and
sahf
ds
insb
xchg
adc
xchg
push
mov
imull
push
dec
jl
das
clc
or
xor
out
push
shlb
mov
stos
test
push
stc
call
inc
pop
dec
movl
outsb
movnti
pop
xor
rcrl
icebp
xchg
in
xor
sbb
in
inc
dec
lds
dec
adc
in
sub
xchg
scas
insb
dec
and
cmpsl
mov
jo
xchg
inc
or
nopl
pop
std
adc
push
xorb
pop
lret
jno
jo
push
leave
clc
repz
push
fldt
movsb
aam
xchg
cld
cmpsb
mov
into
dec
jle
cmp
pop
mov
or
das
push
mov
mov
xchg
test
cmpsb
in
cld
push
ljmp
sbb
inc
mov
mov
xchg
xlat
pop
cli
and
bswap
divps
mov
out
mov
pushf
push
or
scas
adc
mov
js
jno
clc
stos
push
je
loop
pop
hlt
jl
std
in
cli
adc
sub
fmul
lock
inc
movsl
jne
outsl
lods
add
cs
xor
jge
fiaddl
shl
mov
lods
lcall
or
sub
lock
arpl
sub
in
jle
and
mov
loope
outsl
rorb
lods
imul
lret
aad
enter
imul
insb
or
push
xlat
aam
pop
lret
mov
movsl
jge
add
fwait
stc
cmpsb
outsb
sub
mov
shl
pop
lods
jp
inc
sbb
cmpsl
imul
fwait
or
xorl
fstpl
outsl
pop
fiadds
adc
out
sahf
cmp
lret
pop
pop
mov
pusha
and
or
push
xchg
push
jne
pusha
shlb
sbb
lds
dec
jbe
andb
push
call
mov
inc
pop
push
adc
fiadds
sub
xchg
xchg
shrb
stos
loopne
or
in
and
into
add
mov
mov
push
hlt
std
cmpb
cmp
jp
sti
jg
pop
jg
repz
push
xor
mov
lods
push
pop
add
lock
pop
jnp
inc
pop
iret
lds
outsl
out
fidivs
xchg
jne
loopne
adc
mov
push
cmc
xchg
shrl
mov
mov
pop
movsb
xor
cmpb
inc
adc
mov
pop
ljmp
call
sbb
cld
jbe
adc
pop
pusha
clc
xchg
leave
not
jno
dec
call
mov
or
test
pop
fisubl
xor
ret
test
or
bound
mov
push
mov
je
mov
loopne
push
dec
fsubl
sub
call
mov
or
mov
fmulp
adc
out
arpl
or
xorb
leave
push
push
mov
jge
lret
sbb
pop
sahf
inc
mov
repz
sbb
xor
push
dec
jb
lcall
fistps
test
fwait
add
popf
in
lret
ss
inc
and
push
lds
push
adc
cmp
ret
enter
mov
in
fwait
add
jecxz
int3
mov
mov
cld
jne
add
mov
cmp
out
psubsb
push
in
add
and
add
push
adc
sbb
or
shll
and
andb
xchg
negb
mov
rcr
and
ja
gs
jae
sbb
imul
call
and
sbb
rorb
sbb
adc
jl
pop
rcr
mov
out
mov
iret
xor
pop
inc
and
jnp
sbb
dec
and
jno
mov
push
xchg
mov
cwtl
sub
or
imul
push
cmp
pop
or
cld
movsl
mov
or
pop
rep
cmc
out
cltd
arpl
or
push
addr16
divb
push
pop
dec
xor
mov
pop
adc
outsb
inc
xchg
test
sub
jae
push
adc
dec
lahf
fs
inc
xor
xor
xor
frstor
into
add
fstpl
lahf
loopne
ret
push
filds
or
and
adc
push
mov
fimull
xchg
pop
sub
push
sub
lret
jo
push
mov
dec
xchg
negl
push
or
movb
je
dec
mov
scas
push
lahf
and
int
push
cmp
lock
or
nop
in
inc
arpl
cmc
fstps
das
into
pop
ret
mov
nop
dec
xor
inc
pop
std
popa
sub
icebp
in
dec
sub
cmpsb
fsubs
enter
movsl
js
repz
out
adc
rorl
insl
cmc
sbb
xor
imul
adc
push
cmp
mov
xchg
xor
fdiv
cmp
ljmp
jl
out
mov
out
fsubrs
leave
jo
mov
mov
mov
pop
dec
sbb
pop
dec
in
or
out
bound
mov
pop
jmp
das
dec
icebp
sti
cwtl
jl
mov
dec
or
cmpsb
rclb
shl
cwtl
aad
out
cmp
push
call
in
mov
push
add
mov
fistps
mov
dec
mov
or
jle
mov
dec
xchg
outsl
cmp
ret
call
jb
jle
inc
scas
jb
adc
push
cmp
sub
fmulp
or
outsl
pop
lea
adc
dec
jecxz
xchg
xchg
rcrb
enter
pop
popf
xor
ss
and
sbbb
loop
add
test
xchg
insb
in
jo
lock
hlt
cmp
mov
dec
xor
sub
pop
lcall
jns
iret
xchg
fdivp
or
inc
pop
or
xchg
jo
nop
sbb
ret
push
xchg
push
sub
lock
sub
jbe
ret
popa
sbb
cmc
and
rolb
mulb
cltd
add
mov
add
out
mov
mov
jne
pop
add
movsl
and
sbb
xor
mov
sbb
xchg
inc
add
gs
enter
out
test
filds
sub
scas
lahf
mov
mov
dec
imul
pop
push
sbb
push
aam
fildll
ljmp
imul
xchg
stos
cmc
lret
popf
or
inc
cmp
pop
test
shll
jl
sbb
mov
testl
test
xor
ror
pop
loopne
test
pop
inc
sub
lret
scas
mov
test
lahf
push
in
fnstcw
mov
fsts
push
push
stos
push
xchg
mov
nop
push
in
xor
fs
out
ds
cmpsb
iret
xor
adc
inc
arpl
cmc
sub
push
rep
pop
mov
push
sub
mov
insl
jl
mov
jb
lcall
mov
mov
sti
add
sub
sarb
dec
sub
fdivl
test
xchg
inc
mov
push
jno
inc
mov
sbb
pop
sbb
mov
addr16
jo
int3
daa
inc
movsl
mov
jo
lds
movsl
rcl
sub
fstpt
addr16
dec
xchg
xchg
jbe
pop
callw
mov
mov
xchg
je
push
xchg
cmpsb
call
pop
mov
pop
push
jnp
rorl
inc
xor
add
push
movsl
add
mov
lcall
fiadds
out
cmp
xor
test
fidivl
jg
sti
adc
jb
fbld
ds
test
adc
mov
jle
ja
lahf
mov
mov
mov
xor
pop
mov
aaa
ljmp
sbb
enter
int3
mov
mov
pop
fwait
xor
mov
pop
bound
das
xor
les
jg
or
sub
pop
es
das
sub
sbb
std
orb
movsl
test
leave
or
push
mov
nop
int3
jecxz
fwait
imul
lods
jno
cmp
icebp
mov
jp
mov
and
push
add
es
cmp
cs
ljmp
sahf
inc
test
and
push
stos
xor
or
shlb
cld
popf
lcall
cmp
mov
out
mov
fnstcw
dec
mov
sbb
nop
sti
movsl
xchg
mov
cmc
add
stos
lods
sbb
sub
lret
bound
adcb
lret
ss
fmul
mov
inc
pop
xchg
in
sbb
push
lods
adc
push
push
or
mov
out
imul
sbb
sti
jecxz
jge
fstpt
ret
mov
dec
stos
insb
push
adc
in
xor
hlt
xchg
mov
sub
pushf
ss
imul
dec
int3
mov
clc
mov
popa
aam
rolb
cmpsb
sbb
dec
fildl
leave
fisttpl
out
loope
test
cmp
loopne
mov
cmp
push
dec
out
inc
dec
inc
std
push
cltd
lods
xor
cltd
lret
lea
push
rclb
popa
ljmp
jecxz
sub
jg
out
push
clc
cmp
inc
jecxz
jns
mov
sbb
inc
mov
mov
icebp
xor
movsl
addr16
lods
jb
inc
stc
movsl
movsl
jge
out
mov
repz
adc
or
xchg
insl
cmp
leave
pop
dec
bound
inc
fnstcw
cmp
mov
stos
sub
das
sbb
stos
es
inc
sub
cmp
or
dec
xor
pushf
sti
jnp
fsub
jne
in
imul
out
movsb
dec
test
into
lcall
int
inc
mov
stos
push
test
lret
test
sub
sbb
sahf
adc
xor
add
rorb
jb
out
dec
adc
inc
jl
jno
ds
movb
cmp
enter
or
arpl
inc
cmpsl
jecxz
xchg
mov
mov
dec
es
jbe
sub
leave
subb
inc
push
outsl
loop
ja
dec
enter
xchg
shrl
out
hlt
incl
sbb
pop
pushl
insl
popf
xchg
cld
cwtl
sbb
xor
jle
mov
insb
popf
insl
punpckldq
stos
out
pushf
or
outsl
rorb
dec
mov
and
pop
hlt
aad
scas
ds
ljmp
imul
rcrb
sbb
idivb
xchg
outsb
orl
cs
outsl
push
out
pop
shlb
incl
inc
jp
cwtl
sub
cli
sbb
decb
gs
mov
out
pop
xlat
mov
mov
sbb
xor
push
mov
loope
mov
jle
iret
imul
loopne
mov
xlat
push
je
orb
inc
rcrl
sub
xor
dec
in
xchg
pop
call
aam
nop
inc
or
and
cmp
nop
push
xor
scas
cs
sbb
push
push
lcall
and
rcrb
cmp
adc
adc
xchg
sti
pop
icebp
jbe
dec
out
sti
jne
repnz
int
shll
cmc
fstpt
add
sti
jb
mov
fsubrs
xor
xchg
fstpl
push
xor
dec
or
jne
push
jb
jg
aaa
outsb
lods
fmul
push
add
into
popf
dec
mov
mov
das
fwait
mov
or
cmp
jns
add
pop
pop
fimull
js
xchg
shrb
lods
lods
push
out
adc
xor
push
ljmp
dec
outsb
or
cmc
cwtl
stos
insb
test
jl
and
and
dec
xor
call
mov
aaa
mov
sbb
decl
ret
push
xchg
sarl
cmpsl
sbb
xor
dec
xor
adcl
xchg
or
pusha
mov
sbb
lret
lahf
arpl
xchg
adc
or
stos
inc
sahf
out
daa
popa
xchg
push
orb
mov
cmp
into
push
mov
push
lahf
pop
add
push
inc
fsubrl
or
push
idivl
ja
je
dec
mov
jmp
cmp
inc
clc
jbe
into
pop
add
xchg
outsl
xchg
popa
lcall
cmp
xchg
xor
cwtl
cmc
cmp
mov
pop
mov
sub
jne
test
addr16
mov
mov
add
xchg
xor
inc
fimuls
loopne
inc
outsb
lods
xor
dec
pop
aam
hlt
mov
sub
push
sub
lcall
cmpps
xor
pusha
sti
xorl
push
imul
sbb
and
cmp
pop
bnd
out
add
jmp
xchg
lods
out
xor
shlb
popa
int3
lods
mov
pusha
aas
jae
iret
jecxz
int3
fdivs
pop
pop
or
call
pop
mov
aam
dec
test
scas
shl
loopne
outsb
out
aas
mov
out
and
jno
push
aam
jecxz
mov
cmc
cmp
push
pop
mov
icebp
adc
xor
in
jmp
bound
scas
jo
jne
sbb
adc
push
mov
mov
push
cmp
dec
mov
fcomps
pusha
les
cmp
mov
xchg
rclb
xor
add
sti
stos
fistl
js
scas
lods
pop
fs
mov
sub
inc
std
inc
ret
dec
outsl
inc
test
adc
sub
pop
cmp
mov
outsb
jl
movsl
fs
ret
insb
fdivrl
mov
mov
call
add
sbb
leave
mov
add
nop
jae
jne
mov
push
nop
fdiv
sbb
shll
ja
sub
fucomip
mov
aam
add
mov
rcl
icebp
adc
xlat
dec
ret
xor
fsubrl
scas
push
pop
je
push
jmp
in
ror
sub
outsl
xor
ss
filds
sub
pop
mov
dec
xlat
fistpll
test
movsl
test
ljmp
in
rorb
push
lods
in
pop
out
add
iret
pop
mov
add
nop
das
in
inc
sarl
inc
fadds
inc
pop
cmpsb
mov
fsubl
xor
inc
insb
les
sar
mov
xchg
pop
shrb
xchg
push
dec
bound
clc
and
imull
in
fimuls
sbb
sbb
cmc
mov
cmp
xor
fbld
aam
call
clc
xlat
mov
aas
fcoms
fdiv
int
das
adc
jne
jmp
push
mov
rcll
lahf
jp
ja
sbb
nop
inc
mov
sub
jno
jge
mov
ds
lahf
xchg
icebp
mov
lea
xor
or
leave
xlat
out
ret
pop
lods
sub
cmp
mov
lds
and
push
xchg
cmpsl
stos
ret
dec
xor
ret
mov
mov
inc
dec
shll
xor
jp
xchg
jns
addr16
imul
xor
shl
in
das
lahf
pop
pop
arpl
push
and
lret
mov
enter
stos
mov
lea
ret
jl
fbstp
cld
push
movsb
mov
dec
lds
xchg
test
mov
lret
push
hlt
xchg
test
arpl
stos
mov
clc
sbb
mov
cmp
outsb
ja
leave
push
mov
fistpl
test
ret
mov
fisubs
pop
mov
add
or
bound
pop
ljmp
jl
jnp
hlt
call
xchg
shll
sbb
lock
lret
xor
enter
test
rclb
xchg
insb
out
xorl
in
cmp
lea
jecxz
or
sbb
adc
xor
push
or
pop
dec
pop
test
sbb
cmp
mov
and
jae
adc
sbbb
aaa
mov
aad
cmovnp
inc
xchg
mov
fmuls
loopne
pushf
dec
repnz
mov
mov
jns
dec
in
test
mov
mov
mov
sub
sub
data16
out
and
scas
dec
dec
inc
sub
or
je
sti
iret
push
mov
and
sub
nop
adc
inc
imul
inc
mov
incb
subl
sub
mov
rcrl
pop
push
jg
imul
decb
fists
add
push
cltd
mov
into
ds
int
mov
fldt
push
inc
or
dec
xor
stc
inc
and
push
pop
dec
loopne
lret
or
xor
or
push
cmp
das
jecxz
decl
jle
push
arpl
pop
pop
sbb
adc
push
xor
call
fnstsw
fsubs
dec
in
pusha
fisubs
add
fwait
add
std
repnz
test
jno
scas
out
jae
dec
jo
sub
neg
mov
fadds
aam
xchg
sarl
or
outsl
cmp
arpl
cs
jne
test
out
cmp
pushf
ret
adc
cld
adc
dec
or
icebp
mov
pop
dec
and
jge
mov
dec
pushf
loop
repz
lods
arpl
mov
push
testl
mov
push
les
xchg
xor
ficompl
movsb
mov
in
es
cltd
fs
and
js
inc
cltd
sub
or
adc
add
sbb
sti
out
mov
std
inc
test
pushl
add
inc
and
and
lret
cltd
push
push
add
lock
and
cmpsl
lret
fistpl
xor
or
mov
pop
push
jp
pop
and
and
mov
xchg
lcall
in
nop
add
aad
fs
das
jae
xchg
cmp
rclb
addr16
xor
fcomp
or
daa
aaa
add
aad
xor
mov
outsb
mov
mov
adc
add
pop
mov
addl
icebp
shr
mov
adc
out
mov
pop
push
mov
and
loope
mov
lret
jo
xchg
cltd
popa
fidivl
pop
sbb
push
lcall
jmp
fidivs
xchg
sbb
mov
push
mov
and
lret
cmc
mov
daa
lret
sbb
jmp
dec
add
jnp
outsb
sahf
adc
inc
add
fidivrs
mov
mov
fstpt
push
ljmp
cmc
in
ljmp
aas
sub
stos
rclb
inc
nop
push
dec
lret
imul
stos
aad
inc
push
xchg
and
inc
lret
cwtl
xor
jge
in
cmp
push
dec
sub
pushf
icebp
jp
sbb
sub
mov
in
cltd
pop
xor
or
pop
sub
ror
xchg
mov
dec
loope
inc
push
pushf
insl
mov
mov
jbe
mulb
push
inc
je
cmp
push
sub
sbb
std
ret
xlat
js
sbb
lods
mov
mov
jb
pop
mov
enter
pop
ljmp
add
sub
fs
or
ret
mov
mov
pushf
pop
xor
sbb
insb
sbb
sub
dec
sub
and
lcall
mov
pop
mov
aaa
leave
mov
inc
leave
or
cmp
jge
xchg
scas
outsl
sub
iret
movsb
iret
mov
mov
jge
data16
pop
sbb
xchg
push
jo
fldenv
ds
popa
es
inc
aad
xlat
daa
int
xor
xor
out
popf
push
jl
and
int
hlt
jecxz
bound
mov
pop
in
test
dec
jecxz
jns
cs
pop
jns
insl
mov
pop
jmp
lahf
cmp
popf
pop
mov
rcrb
lea
out
adc
test
imul
mov
das
clc
sub
fisttps
xchg
lret
aas
mov
or
pop
cmpsl
mov
adc
dec
les
mov
cmp
sbb
je
jo
test
lea
jbe
cmp
lea
mov
pop
scas
pop
mov
dec
add
cs
fsts
test
xchg
daa
roll
xchg
cmp
or
dec
sbb
ss
aam
sub
and
in
sub
aaa
xchg
and
add
mov
pushf
inc
push
jb
sbb
push
insl
lcall
jbe
sahf
inc
leave
sbb
scas
shr
mov
gs
repnz
pop
lcall
xchg
pop
stos
ljmp
pop
pop
inc
cmpb
xor
sarl
adc
mov
repz
sub
cmpsb
and
arpl
into
pushf
test
sbb
xor
outsb
push
mov
ljmp
pushf
mov
push
test
or
aas
lds
sbb
loopne
xor
push
pop
jne
or
sub
sbbl
pop
sbb
mov
add
cmpsb
xchg
int
adc
test
jno
jns
jmp
dec
push
inc
inc
cwtl
jne
mov
add
imulb
inc
adc
lods
inc
xor
ds
cwtl
dec
mov
fs
mov
ss
pop
push
mov
jl
fidivrs
add
inc
cwtl
loop
lock
or
js
sbb
movsl
enter
into
stc
rcrl
pop
push
jne
sbbb
cmpb
pop
adc
dec
lret
out
call
scas
sub
ja
movsb
sub
pop
loop
dec
pushf
add
or
rcrb
loope
add
push
test
outsl
sahf
push
pop
pop
dec
nop
pop
mov
aaa
mov
mov
jnp
les
stos
lock
jne
push
jno
dec
inc
mov
cmp
cltd
inc
aaa
mov
mov
push
es
dec
inc
jns
push
addb
mov
shr
je
je
rcr
in
mov
jne
mov
push
sub
roll
movsl
mov
mov
adc
pop
sbb
lahf
cltd
cld
or
add
sbb
rolb
push
and
pusha
xchg
sub
inc
loope
mov
rorb
mov
fsubs
scas
in
cmp
and
add
jge
rol
xchg
pop
aam
testb
cmc
xor
xchg
fprem1
cmpsb
xlat
aaa
pop
mov
xlat
int
rcrb
push
test
cwtl
aas
orb
mov
pop
sti
das
lods
sbb
pop
jge
orb
fdiv
mov
xlat
xchg
dec
xor
mov
out
or
jg
aaa
stos
inc
xor
shrb
in
not
push
ljmp
jb
jne
xchg
outsl
pop
inc
xor
inc
pop
fcomps
jb,pt
xor
mov
cmpsl
lods
std
popf
or
or
mov
daa
stc
jo
mov
xchg
sub
std
mov
ds
ret
cmp
push
lods
dec
call
push
je
lods
pop
add
fmull
cmp
cs
mov
sub
sub
cmp
mov
pop
jle
lea
mov
fwait
ljmp
sub
inc
push
popa
mov
dec
jle
or
and
cmpl
or
dec
sub
gs
pop
or
pop
rcr
cmpsl
ret
jne
adc
push
sub
jle
and
cmp
xchg
push
sub
mov
cmp
fmuls
push
icebp
outsl
aad
loopne
lret
xor
mov
or
mov
cmp
push
dec
loopne
xchg
fidivrs
or
add
or
pop
cli
add
lea
fwait
test
out
fisttpll
and
scas
enter
jnp
mov
sbb
mulb
mov
push
cmp
call
hlt
mov
cli
and
mov
cs
das
ret
ret
mov
ror
adc
cmp
pusha
sbb
daa
pop
cwtl
cmc
out
xor
mov
push
adc
sub
nop
fcmovbe
or
or
mov
mov
les
adc
mov
push
inc
orb
xor
add
stos
mov
mov
into
mov
add
mov
imulb
and
jl
sti
mov
repnz
scas
out
leave
inc
sub
dec
mov
pushf
fidivs
pop
mov
push
stos
repz
gs
adcl
pop
push
xchg
mov
ja
jno
xchg
mov
aam
aam
mov
jo
sub
push
or
xor
jecxz
dec
push
push
outsb
cmc
cwtl
jbe
lods
xor
lods
gs
lret
mov
stc
sbb
push
out
ficomps
mov
or
imul
xchg
je
cmp
pusha
add
mov
fcmovu
adc
addr16
nop
inc
orl
push
xchg
add
mov
push
sbb
fdivp
lahf
xor
push
ficompl
dec
inc
outsl
lret
jmp
gs
addr16
jl
sbb
mov
bound
pushf
sub
incl
or
aaa
push
mov
mov
into
ret
adc
xchg
loope
add
mov
jg
mov
data16
pop
scas
mov
dec
inc
dec
int3
add
push
addr16
pop
mov
inc
mov
cli
test
je
out
imul
adc
mov
sti
lret
int3
push
fsubs
xchg
lahf
filds
popf
clc
das
sbb
cmc
js
gs
cmpsl
fs
xchg
mov
sub
or
test
mov
scas
jle
aam
inc
daa
rorl
dec
mov
mov
push
lcall
lcall
in
push
daa
rorb
in
and
hlt
add
data16
xor
push
out
adc
and
xor
popa
cmpsl
jne
mov
aaa
daa
int3
std
cmp
int3
xor
imul
pop
dec
loopne
outsb
test
pop
in
scas
jmp
hlt
test
pop
mov
xchg
pop
fstl
mov
mov
bound
xchg
daa
sahf
add
jo
mov
test
jle,pn
out
in
inc
mov
repz
cmp
in
mov
pop
cmc
rcr
xor
sbb
orl
jae
sub
outsl
add
out
rclb
js
in
in
addr16
out
insb
mov
xchg
in
test
jmp
pop
xor
xchg
iret
cld
orb
mov
dec
push
cli
cs
cmp
fnstenv
sbb
cmp
insb
dec
sbb
add
pop
inc
insb
cmpsb
dec
scas
insl
fcmovb
in
sbb
xor
mov
add
xor
jge
mov
stos
mov
mov
push
insb
or
push
mov
mov
cmpsb
push
mov
adc
movsb
pop
imull
mov
es
lcall
dec
in
fisubrl
mov
ljmp
xor
mov
ds
gs
add
mov
rorl
pop
iret
ret
xor
cmp
loop
shll
int3
mov
pop
aad
mov
data16
movsl
fadds
mov
jle
xor
xor
pop
ficomps
and
ret
xor
add
cmc
in
mov
divl
lods
testb
in
add
lcall
rorl
add
dec
and
ficoml
lret
mov
push
stc
pop
dec
and
test
aas
ret
pop
into
mov
call
xchg
pop
fnstcw
xchg
ret
pop
cmp
pushf
mov
mov
jge
mov
mov
sbb
lcall
ja
aas
ficompl
jg
xor
or
mov
and
lock
popa
inc
push
dec
inc
pop
bnd
push
xor
shlb
call
bound
movsb
cmpsl
sbb
in
sbb
hlt
push
idivb
dec
cmp
xchg
push
flds
add
std
dec
aaa
mov
ljmp
clc
lret
mov
call
movsl
fwait
out
mov
push
add
and
pop
pop
pop
outsb
xchg
das
xor
addr16
jmp
dec
sbb
jge
sub
pop
out
fwait
nop
push
cmovno
xchg
ss
pop
fstl
addr16
jno
decb
push
mov
xbegin
movsl
dec
out
mov
add
sbb
scas
jb
mov
mov
xchg
xchg
shll
dec
enter
lret
sbb
shlb
shll
mov
hlt
sbb
out
pop
orb
addr16
xor
push
xor
inc
cld
or
mov
add
xchg
imul
mov
jno
push
jne
fwait
icebp
mov
sbb
or
xchg
adc
and
adc
outsl
out
test
jecxz
mov
mov
cmp
dec
pop
repz
add
adc
adc
aaa
ret
or
lock
cmp
ret
cmpsl
out
sub
out
test
xchg
cltd
sub
sysexit
jno
sarl
push
cmp
gs
idiv
repz
lods
leave
mov
adc
idiv
push
jnp
sbb
repnz
in
adc
out
lahf
add
pop
test
ds
xchg
xchg
das
repnz
insb
dec
inc
mov
in
cmpsb
loope
jne
stc
sub
mov
jmp
emms
leave
iret
std
xchg
cld
test
dec
cmpsb
repnz
pop
mov
stc
mov
xor
mov
mov
push
std
pusha
jmp
mov
fwait
clc
push
sub
sub
call
xor
in
lea
adc
imul
jmp
popf
mov
jecxz
ret
pushw
arpl
mov
in
xor
stos
push
mov
stos
leave
sbb
pop
loopne
pop
popl
mov
cmp
or
into
outsb
stos
jno
incl
out
test
inc
inc
mov
iret
mov
pop
int
enter
adcb
test
push
adc
xchg
pop
lds
jecxz
add
sarl
popa
shr
test
jp
leave
sub
outsl
rclb
adc
movsl
test
xor
mov
sti
pcmpeqb
pop
aas
mov
jo
pop
lret
popa
imul
stos
pop
daa
out
push
xchg
sarl
les
jge
cmp
scas
push
inc
dec
jbe
mov
popa
cli
ja
lcall
pushl
jecxz
sbb
jb
andb
lcall
out
call
iret
mov
adc
mov
in
rorb
das
dec
fmuls
lds
mov
lahf
add
out
das
nop
dec
push
pop
push
sub
xchg
hlt
xchg
inc
jb
gs
sbb
mov
sbb
push
sahf
fcmovnu
aas
adcb
push
jbe
les
ret
mov
mov
ss
sub
xchg
cld
ret
les
inc
mov
xchg
sbb
iret
push
add
push
fs
pop
push
faddl
out
dec
push
dec
sbbl
insl
scas
and
inc
lods
xor
lods
neg
push
testb
inc
rcrb
testb
lods
cmp
cmpl
adc
mov
pushw
and
lods
stos
out
test
or
pop
rcrb
jle
ret
stos
rorb
adc
imul
cld
mov
dec
jb
movsb
test
or
lahf
xor
mov
sarb
mov
cmc
push
push
out
cmp
push
push
aad
cli
xor
movl
inc
inc
and
inc
push
jno
aaa
jne
xchg
dec
sahf
inc
lods
or
fmul
inc
dec
lcall
psllw
sbb
shlb
xor
jmp
push
insl
rorb
int
in
loope
jo
cs
push
mov
mov
es
dec
jbe
xchg
sub
repz
push
imul
push
in
xor
adc
aaa
adcb
jo,pt
lock
mov
int3
movsl
das
cmp
push
outsl
clc
cld
aaa
sub
pop
pop
lock
push
sbb
pushf
cmp
cmpsb
and
lea
out
mov
sub
in
sti
xchg
and
out
xorb
movsl
or
mov
push
push
inc
gs
test
mov
sub
xchg
movsb
cmpsb
scas
pushf
dec
dec
cmpsl
mov
cltd
jp
push
adc
insb
movsl
pop
cmpsb
cltd
jle
sbb
jmp
inc
es
mov
arpl
add
in
and
pop
xchg
sti
inc
xchg
sti
notl
dec
hlt
gs
mov
pop
mov
out
idivb
jns
bound
dec
fsubr
xor
jo
clc
xchg
es
pop
lcall
pop
negb
out
mov
sbb
div
iret
cmpsl
jbe
ja
adc
pop
xchg
ret
repnz
outsb
cld
xor
jne
imul
shll
or
xchg
pop
or
aam
int
dec
pop
jb
lret
cmp
sub
ss
scas
cli
sbbb
pop
push
fiaddl
pop
cltd
jge
movups
rcll
jl
out
pop
stc
jl
xchg
jne
cli
push
scas
mov
mov
or
dec
push
mov
adcb
fs
mov
jle
scas
in
xlat
inc
loop
jg
cli
inc
hlt
sarl
mov
sub
ja
jo
sarl
or
movsb
loop
je
std
xchg
fists
jl
xchg
xbegin
xchg
imul
jns
enter
scas
inc
ret
lea
or
cmpsb
imul
sbb
sbb
sbb
stos
jae
mov
pop
loope
je
test
add
loop
out
jle
jle
or
cmp
imul
mov
hlt
js
add
jle
fiaddl
adc
cltd
inc
int3
cmp
inc
mov
mov
outsb
or
cltd
adc
add
dec
xchg
push
dec
ret
lds
ss
cmpsl
inc
and
es
mov
push
sar
jge
pushf
add
inc
in
loopne
rol
fsubl
push
push
sub
icebp
cli
adc
xchg
aad
ret
aaa
push
mov
int3
mov
dec
mov
movsl
add
or
cmp
pushf
lret
cmc
jne
or
andb
in
sar
jae
pop
insb
and
test
out
jmp
lret
and
pop
pop
xor
dec
lods
out
in
mov
push
mov
aas
inc
andl
scas
mov
xlat
scas
inc
out
lret
out
ds
sbb
aad
sub
xchg
add
setno
ljmp
or
dec
inc
aas
rolb
dec
cltd
mov
mov
jle
dec
cmp
in
sar
out
std
std
ss
cld
pop
pusha
xor
and
add
mov
jbe
cmp
in
sbb
mov
push
insl
out
xchg
enter
stos
add
xlat
inc
int3
mov
in
fcomps
mov
outsl
inc
xor
add
lds
push
cmc
sbb
sbb
cmc
adc
lods
lods
jle
int
sub
xchg
jmp
ds
or
push
inc
scas
dec
mov
stc
mov
lret
negl
and
cld
and
dec
lock
fwait
cli
xor
jbe
lahf
mov
enter
in
movsl
nop
std
lds
xchg
inc
cmp
xchg
fsubrl
out
xor
fldenv
iret
stos
fisubl
sub
out
dec
stc
fs
mov
adc
fldcw
gs
push
dec
pop
or
and
jno
mov
outsl
xchg
pop
fldenv
jecxz
xchg
jb
insb
inc
test
clc
mov
sub
push
cmp
aam
loop
jmp
cmp
cmp
outsb
jecxz
shrl
and
push
cld
jbe
into
sub
push
sub
jae
test
dec
mov
cmp
iret
or
fnsave
adcl
push
jo
scas
sub
mov
push
xchg
sbbl
dec
inc
or
out
cmp
lcall
dec
sbb
nop
sub
mov
cmpsb
lea
jbe
add
xchg
inc
inc
imul
add
cmp
cmp
add
das
pop
das
ret
iret
mov
ret
cmp
lcall
sbb
pop
or
add
cmp
mov
icebp
lods
js
test
and
es
xor
in
test
push
fistps
or
xchg
mov
adc
movsb
js
sti
push
push
icebp
jbe
xchg
jo
xlat
jmp
scas
pusha
xor
adc
outsb
mov
lock
je
mov
sub
sbb
pop
out
lret
jl
inc
les
movsl
iret
lahf
clc
test
jg
pop
outsl
adc
es
pop
lret
lds
sbb
jg
sbb
repz
sahf
jnp
jnp
aaa
lods
mov
es
cmpsb
ljmp
out
test
hlt
push
out
sub
mov
pop
ja
push
imul
sub
outsb
or
sahf
fsubrs
push
hlt
ret
adc
cmp
cli
stos
cmpsl
out
xor
mov
stos
mov
and
out
les
pop
xchg
divb
jg
mov
inc
adc
pop
lea
call
pop
movb
or
orl
adc
jne
shlb
into
adc
cmp
jle
mov
dec
clc
xchg
xor
mulb
cmpsb
outsb
mov
rcrl
shlb
daa
pop
or
xchg
fcoms
mov
or
mov
cwtl
loopne
jb
jge
mov
stos
les
sarb
jecxz
aas
call
xchg
and
pop
sub
jnp
inc
roll
repnz
mov
lcall
inc
add
inc
mov
lea
daa
jne
or
mov
add
ret
stc
rolb
jl
adc
sbb
ret
into
aas
and
test
jo
dec
andps
das
inc
addb
pop
dec
stos
push
sbb
xchg
sbb
mov
scas
dec
clc
xchg
mov
push
shll
add
arpl
das
inc
clc
lods
jb
sub
bound
insl
call
pop
mov
add
loop
aad
mov
in
push
xor
lock
adc
and
inc
ljmp
and
xor
imul
push
popf
mov
pushf
jge
jg
iret
mov
push
rcll
xor
push
aas
outsb
jg
aas
sub
shlb
mov
xor
js
imul
fisubs
push
popa
cmpsb
stos
and
ffree
dec
shlb
mov
shll
mov
push
and
adc
xchg
mov
sub
pop
pop
xlat
stos
xchg
aad
shll
sbb
hlt
out
lcall
repnz
mov
loopne
test
pop
rclb
in
lahf
xor
fisubl
fstpt
fldenv
push
aad
xor
or
push
scas
mov
call
add
mov
fwait
mov
ret
cmp
mov
dec
arpl
notb
iret
jbe
mov
pop
push
mov
insb
les
lahf
cmpsl
adc
scas
loopne
push
test
into
xchg
aaa
mov
jo
movsb
adc
pop
adc
dec
xchg
repnz
mov
xor
sbb
daa
lahf
sub
imul
imul
sub
das
cmp
mov
popf
fsub
addr16
sbb
mov
xchg
test
pop
add
pop
mov
pop
pusha
call
or
sbb
cwtl
shrb
cmp
into
out
push
jecxz
test
mov
xor
out
jge
jp
imul
and
xchg
imul
test
pop
inc
xor
or
jo
sbb
push
add
inc
xchg
mov
push
sub
dec
and
push
pop
mov
inc
adc
pop
ss
or
cwtl
dec
pusha
ficompl
or
jecxz
je
sbb
cmp
fisttps
cltd
ret
pop
ds
mov
rclb
arpl
test
outsb
jl
rorl
jp
xchg
leave
sbb
inc
inc
xchg
dec
enter
in
bnd
or
sub
cmp
out
pushf
scas
push
lret
adc
dec
mov
imul
ljmp
inc
jbe
dec
loopne
daa
mov
add
mov
sbb
cmp
mov
sbb
mov
push
int3
sub
es
dec
pop
and
jecxz
xchg
popf
add
out
and
icebp
loop
or
and
and
jnp
dec
inc
jl
aam
xor
jle
add
gs
sub
leave
xchg
xor
loopne
fists
adc
cltd
out
jae
xor
push
js
sub
push
add
mov
outsl
into
insb
jecxz
xchg
pop
in
stos
mov
ret
cli
jle
testb
stos
mov
add
mov
push
cmp
mov
jle
popa
enter
add
and
je
insl
xchg
add
icebp
dec
mov
sarb
lret
cwtl
lds
pop
jecxz
bound
xor
jecxz
imul
cld
or
jp
inc
or
pop
cwtl
xchg
and
mov
or
aam
add
sub
cli
and
jns
out
in
mov
andb
inc
push
sbb
xchg
xor
adc
add
pushf
and
xlat
push
adc
xchg
hlt
mov
das
xchg
repnz
sbb
leave
add
cmp
mov
sub
lcall
cmpsb
rcr
xchg
xchg
repz
or
jae
and
loope
push
pusha
xor
jecxz
push
divl
test
sub
lea
popa
jns
sub
xlat
adc
fbstp
stos
outsl
fdivrs
push
xchg
imul
jo
int
pop
mov
mov
testl
int
dec
and
inc
and
das
mov
jnp
ljmp
fiadds
jecxz
and
repz
push
pop
sbb
stc
dec
popa
sbb
hlt
cmpsb
scas
sbb
out
insl
mov
mov
cltd
sub
ljmp
push
mov
dec
inc
xor
loopne
lret
iret
inc
bound
push
and
adc
xor
pop
mov
inc
aad
call
jo
hlt
in
test
mov
sbb
jp
cmp
decl
stc
and
scas
mov
jecxz
lock
or
pop
sbb
inc
fcoms
mov
imul
or
xlat
pop
iret
xchg
je
repz
sbb
sbb
mov
sbb
out
loopne
nop
ljmp
mov
popf
notb
stc
movsb
jg
int
ds
insl
jle
out
cs
mov
in
sub
mov
add
insl
cmp
pop
jbe
adc
mov
adc
mov
mov
jl
jle
mov
outsb
sbb
out
pop
rcll
adc
or
push
pop
aam
imul
aam
xchg
cmp
mov
adc
int
and
push
and
sbb
stc
sahf
pushf
data16
movb
les
dec
mov
repnz
rclb
inc
or
xchg
js
mov
pop
mov
add
int
hlt
aas
out
and
in
fbld
mov
outsl
and
mov
adcb
aad
pop
in
lock
cltd
cwtl
loop
sbbl
inc
dec
loope
push
adc
sub
xor
pop
or
push
addb
int
sub
nop
idivl
push
jns
or
mov
cmpsb
fldenv
insl
xchg
jns
xchg
in
rol
sahf
cltd
sti
mov
cmp
lret
clc
aad
loopne
ficoms
sbb
xchg
das
lods
mov
pusha
lods
cbtw
iret
xor
dec
shrl
ljmp
outsb
cmpsl
movsl
je
inc
xadd
xchg
inc
pushf
jp
out
jg
cmp
or
xor
shrb
mov
adc
ljmp
xchg
sbb
das
jl
fmul
mov
fimuls
nop
mov
icebp
enter
add
cmc
insl
outsl
xchg
fs
mov
daa
adc
and
xchg
pop
repnz
xor
popa
mov
or
inc
add
cmp
jo
xor
jne
insl
cmp
loopne
inc
inc
sti
fidivrs
daa
xor
fstps
ds
scas
mov
adc
mov
push
lret
cmp
xchg
pop
loopne
cli
or
inc
inc
iret
and
mov
mov
mov
pop
and
or
or
mov
mov
pop
jno
adc
adc
imul
mov
mov
out
or
lcall
inc
call
sahf
fs
push
mov
jne
jge
outsb
insl
xlat
mov
mov
mov
or
mov
out
dec
mov
cmp
xchg
jno
in
sub
scas
add
popa
pop
imull
lcall
pop
mov
fdivrs
outsl
jo
dec
push
and
lcall
add
sub
push
mov
mov
pop
xor
mov
mov
fldl
xchg
cmc
and
stos
fdiv
xchg
insl
sub
lods
iret
call
mov
adc
fimuls
sub
in
inc
fcmovu
sbb
xchg
push
pop
out
push
push
lret
les
pop
adc
jle
sbb
push
inc
xor
fimuls
ds
and
push
mov
add
aad
mov
jno
outsl
in
or
ds
jae
push
ret
or
mov
repnz
jg
pop
jg
dec
sbb
lea
xchg
adc
pop
cmc
xchg
loope
dec
repnz
inc
leave
mov
push
popf
dec
cmc
push
enter
shrl
lock
mov
aam
lea
stos
shl
pop
jmp
repz
cmp
ss
stos
mov
push
mov
in
insl
inc
mov
cmpsb
loope
pop
jge
shl
sbb
inc
adc
fs
mov
movsl
ret
cli
fwait
xor
or
lock
jbe
loope
out
fildl
or
push
nop
xor
xchg
js
hlt
cmp
iret
pop
xchg
orl
aam
and
nop
in
loopne
clc
test
in
adc
mov
push
jmp
divb
jle
pop
push
xor
cltd
push
sub
dec
mov
sbb
xor
je
lock
inc
and
sub
pop
rcrb
mov
add
jne
adc
mov
cmpsb
cltd
sub
jb
gs
lock
cmp
xor
pop
push
out
scas
fiadds
mov
pusha
inc
push
mov
push
mov
scas
or
xor
sub
dec
nop
mov
es
fisttpll
mov
and
movsb
and
jns
mov
sub
or
pop
fcomp
add
sbbb
andl
jecxz
addr16
xchg
dec
inc
xor
and
mov
mov
lret
sub
sub
xor
push
bound
in
lock
jge
dec
mov
push
cmp
dec
push
clc
mov
aaa
in
xchg
outsl
inc
mov
adc
cmp
movsl
loop
xor
outsb
cmp
xchg
mov
pop
inc
lods
jmp
xchg
sub
jnp
into
xor
xor
mov
shlb
adc
lret
cltd
xlat
imul
pop
loop
bound
ud1
xor
fwait
push
scas
hlt
leave
jle
pop
movb
mov
in
les
pop
mov
es
jl
dec
fcoml
shrb
lods
pop
aaa
fst
push
or
lock
das
pusha
orl
insb
pushf
cli
lods
popf
sub
js
xor
stc
shlw
or
call
push
xchg
inc
inc
sbb
scas
aaa
fisubrs
lods
xor
inc
sub
scas
test
ret
int3
test
outsl
cmp
mov
test
sarl
xchg
mov
pop
add
cli
xchg
roll
push
lret
scas
pop
cmpsb
test
pop
mov
push
cmp
pop
std
adc
cmp
mov
pusha
not
cmp
or
jno
sbb
mov
jo
cltd
sahf
cmpsb
in
pop
jle
jp
out
icebp
and
inc
je
jmp
jo
mov
jmp
arpl
cli
pop
jp
ret
pop
push
out
or
repz
adc
xor
push
xor
jmp
lock
jg
mov
adc
xrelease
pusha
sbb
shrb
mov
cmovl
addr16
cli
lods
bound
rorl
fldenv
sahf
push
and
add
mov
rcl
test
int3
sub
fcmovnu
test
xor
clc
cmpsb
pusha
mov
xor
insb
cmp
cmpsl
mov
test
stc
es
jb
cmp
les
imul
cmp
jg
mov
mov
jl
xchg
insl
xchg
sarl
sub
cmpsl
xor
lahf
cld
pop
test
out
dec
adc
and
mov
repz
push
add
es
cmp
xchg
sub
incl
orb
adc
mov
in
les
pop
xchg
push
inc
stos
ret
dec
lahf
pop
jg
or
dec
fsubs
fwait
and
pop
ja
sahf
cmp
inc
sbb
dec
ds
jmp
jns
adcl
jns
mov
dec
or
aam
xlat
mov
stos
lods
or
pop
cmc
lea
ss
cmp
mov
jne
jmp
sbb
dec
jle
adc
jo
or
jp
jmp
call
cld
jo
in
xor
mov
mov
daa
mov
ret
jo
sub
pop
clc
lods
mov
lods
mov
jo
sahf
pop
out
jg
lret
imul
cmp
jo
sub
lods
scas
cmpsb
pop
push
pop
testl
jne
iret
inc
push
rcrb
popa
push
cmp
or
fmull
data16
shlb
cmp
ds
repnz
push
cmp
aas
out
sahf
lods
sub
and
idivl
stos
push
jb
mov
cld
popf
inc
push
xor
leave
shrl
sbb
mov
cmp
lds
inc
in
outsl
in
push
roll
xor
mov
imul
xchg
and
rcl
enter
insb
sbb
test
inc
ljmp
lahf
leave
dec
aas
fstpl
in
adc
lcall
ljmp
and
mov
in
leave
mov
push
lret
sbb
bound
icebp
hlt
loope
adc
inc
push
sbbb
fisubs
test
movsb
jp
inc
ja
dec
nop
das
aad
xchg
pop
sbb
cwtl
mov
rcll
mov
into
fcomps
dec
out
test
mov
data16
sbb
dec
aas
pusha
shl
adc
loop
sbb
out
push
cwtl
jb
or
pop
loope
ficompl
repnz
xor
pop
seto
sub
jno
push
xchg
stos
int3
cmpsb
or
xchg
mov
aad
cmp
mov
pop
loop
filds
adc
in
push
pusha
xlat
pop
mov
call
mov
jns
ss
mov
test
cmp
pop
pop
hlt
sub
and
sbb
fwait
pop
into
gs
adcb
and
mov
mov
cmc
movb
stc
xchg
sbb
fstps
dec
mov
sub
in
cmp
je
pop
jnp
cmp
cltd
sahf
sbb
xchg
add
sbb
in
stos
lods
lods
fdivr
xchg
add
outsl
xchg
lock
and
mov
jge
mov
int3
xchg
pusha
prefetcht2
fildl
pop
lock
push
jbe
ja
mov
test
out
mov
es
fcmovnbe
mov
das
add
or
data16
out
cmc
mov
loopne
mov
mov
pop
arpl
lock
push
xor
mov
fcoml
mov
jmp
mov
stos
gs
nop
out
cmp
sbb
aam
mov
pop
scas
dec
inc
jbe
sbb
sub
lret
mov
jg
sub
ret
mov
mov
and
or
aad
fwait
cmpsb
inc
popf
mov
mov
popa
sahf
adc
out
add
pop
mov
in
jl
test
ljmp
jbe
data16
mov
std
pushf
in
pop
ffree
stos
lret
xor
and
or
pop
sub
add
repz
ret
es
pusha
popf
fs
pop
ret
mov
mov
fwait
out
js
sub
imul
push
sbb
push
jl
stc
or
mov
loope
xchg
scas
insl
into
push
mov
cltd
push
into
rorl
mov
iret
lret
lock
jnp
imul
xor
adcb
and
les
add
jp
out
cli
cmp
paddsw
inc
mov
inc
std
iret
jp
in
and
sbb
and
hlt
leave
cmp
out
rcll
test
push
xor
fldt
fidivrl
sub
daa
shll
push
cld
mov
outsb
jnp
adcb
sub
and
push
sbb
bound
stos
sub
jno
push
jbe
cmp
repz
daa
xor
leave
fsubrl
icebp
es
popf
push
in
cmpl
sub
cltd
stos
fiaddl
adc
mov
xchg
jno
cwtl
sti
pop
dec
mov
xchg
fnstsw
cltd
sbb
inc
pop
sbb
in
add
outsb
ficomps
leave
inc
mov
cs
fldz
es
or
loope
pushf
xchg
mov
aad
test
or
test
out
mov
fisttpl
std
imul
test
out
in
xor
insb
int3
outsb
mov
pop
ss
sub
stos
pop
lods
adc
lds
or
lea
notl
xchg
popf
getsec
insb
pop
mov
add
jmp
addr16
std
frstor
xchg
inc
sub
mov
and
push
shlb
insb
pop
lret
int3
js
mov
stos
mov
xchg
movsbl
or
xchg
nop
pop
mov
jae
cld
movsb
loop
lcall
mov
nop
lcall
ss
in
sbb
inc
cmp
sub
dec
test
cs
push
and
jmp
push
cmpsl
lret
jns
es
inc
sbb
in
dec
leave
nop
jae
mov
xchg
dec
push
inc
in
and
cli
test
push
movsl
inc
fwait
jle
sub
or
ret
xor
push
mov
add
lods
sbb
mov
add
loop
out
pop
fnstenv
leave
aaa
push
fcmovnb
inc
outsl
mov
data16
pop
pop
rcr
xchg
test
cmp
aad
test
push
and
rcl
ss
push
gs
push
insb
push
imul
mov
add
cmp
push
sub
jbe
push
xlat
mov
lret
push
shr
pop
inc
mov
push
xor
push
push
inc
lret
repnz
call
mov
and
js
mov
outsb
les
test
out
mov
jns
xchg
pop
cmp
jge
loop
stos
push
mov
out
inc
scas
fwait
dec
push
sub
sbb
scas
ds
xor
dec
dec
mov
push
ret
xchg
inc
fdivl
jle
push
cmp
adc
aam
sub
aas
pop
int3
lcall
mov
in
dec
sti
sub
movsl
mov
stos
pop
dec
out
aad
jae
icebp
or
dec
add
jge
mov
xchg
stos
dec
ret
add
sub
negl
or
orb
mov
jae
cmc
das
das
xchg
cmpsl
ret
out
lret
jns
rorl
std
shll
mov
dec
mov
jno
aam
int
insb
cmpsb
xchg
aas
push
iret
mov
ljmp
inc
cmp
add
xchg
cmp
or
cmp
mov
and
in
fnstcw
jbe
aam
rorl
inc
std
cld
mov
cmp
ja
test
rclb
sub
jns
out
addr16
jns
pop
cmp
push
mov
inc
insl
stc
stos
sub
rcl
cmp
mov
jg
jg
fwait
mov
cmp
test
lahf
orb
inc
xchg
ljmp
inc
mulb
popa
lcall
aaa
mov
sub
pop
xor
xor
sbb
push
push
fstl
ret
sub
add
popf
mov
ja
jns
xchg
mov
out
mov
pop
inc
insb
sub
enter
mov
adc
faddl
mov
pushf
and
cmc
in
fimuls
imul
push
add
jmp
pusha
fimuls
dec
sbb
cmp
mov
popf
dec
stos
inc
outsb
rcrl
lcall
add
push
mov
mov
mov
sbb
dec
inc
inc
mov
out
dec
out
pop
sub
cmp
jb
lods
mov
fisubs
and
fisubs
jmp
pop
jle
dec
daa
sub
stc
mov
call
in
fldcw
gs
stos
push
call
dec
fwait
pop
jae
rorl
lods
mov
fcoml
loop
mov
imul
call
xor
lret
xor
mov
push
lahf
pop
rol
fisttps
lods
aad
nop
and
inc
cltd
add
sub
jge
pushf
dec
aad
fbstp
imul
decb
iret
and
push
push
cmp
mov
adc
pop
dec
mov
lcall
movsb
sbbb
movsl
jno
pop
hlt
sbb
leave
loop
aas
sub
jp
popf
shlb
mov
outsb
aad
das
jp
orb
or
push
das
fsts
mov
outsb
push
filds
add
xchg
popf
jmp
out
dec
cmpsb
push
flds
fldcw
mov
cmpsl
push
ja
ficompl
popa
push
xlat
pop
inc
push
icebp
dec
out
lods
ds
and
ret
aad
insb
sbb
aad
shlb
inc
scas
pop
rcrl
loop
mov
clc
push
mov
mov
in
push
loop
or
lds
idiv
dec
xchg
xchg
add
jne
es
pop
cmpsl
push
addr16
adc
add
mov
into
xor
xchg
stc
inc
xchg
aaa
xchg
pop
dec
pop
rep
cmc
xchg
dec
xchg
addr16
daa
in
subb
jmp
ficoml
lret
mov
pop
fs
mov
cld
ljmp
test
or
sbb
inc
mov
hlt
jg
mov
jae
mov
push
int
pop
popw
cmp
and
mov
cmp
scas
pop
popf
push
pop
pusha
add
or
in
jg
aaa
push
push
xor
sbb
xor
lret
test
mov
add
adc
fildll
lahf
sbb
cmp
dec
scas
stos
loop
ljmp
cmp
scas
out
into
pop
pop
aad
push
movsb
dec
cmpsb
pop
movsl
jecxz
inc
mov
cmp
push
mov
test
adc
cmpsl
pop
int
add
pop
aaa
dec
inc
xchg
and
jo
mov
pop
repnz
lahf
aas
xor
fsubr
dec
mov
or
add
dec
movsb
push
pop
imul
add
mov
sarl
sub
mov
jecxz
sub
lds
dec
fsubrl
mov
mov
sub
clc
pop
test
pop
lret
cli
push
pop
in
pop
jb
xor
popa
sub
xchg
mov
sub
xor
jecxz
data16
enter
and
repz
mov
scas
shl
mov
jne
sarb
inc
pushf
cs
fistpl
dec
and
ret
out
dec
inc
add
fidivrs
enter
ficoml
xchg
ss
xchg
scas
jo
push
stos
test
sbb
lahf
inc
rorb
push
hlt
push
cmpsl
ret
dec
clc
test
rorl
xchg
fstpl
nop
js
adc
inc
data16
mov
xor
push
inc
pushf
out
popa
in
fscale
adc
jae
xchg
lods
sahf
pop
lret
fwait
mov
fwait
cmp
push
or
lret
inc
or
fstps
push
jo
ss
into
ja
jg
pop
dec
dec
dec
pushf
jle
das
imul
push
jp
jge
add
pop
repz
cld
pop
sbb
movsb
fdivl
and
mov
aam
jns
jl
sub
and
mov
es
mov
pushf
ljmp
cmpsb
out
push
in
sbb
fstl
or
dec
movsb
sbb
and
jle
in
sbb
push
push
jge
dec
xchg
sub
out
aad
mov
and
jno
push
aas
fistpll
push
out
inc
push
mov
push
sub
xchg
sti
mov
pop
add
xlat
dec
inc
sub
mov
or
xchg
or
inc
mov
sti
xchg
iret
jns
cmp
out
repz
or
fisubl
lods
dec
pop
xor
test
andb
mov
das
push
mov
jbe
fdivrs
cld
adc
fcoml
rolb
xor
scas
stc
pop
inc
inc
mov
sub
mul
out
add
dec
repz
mov
add
mov
out
inc
jnp
push
adc
mov
push
rcrl
xchg
push
shl
sbb
adc
pushw
mov
inc
lcall
add
or
imul
nop
fbld
push
in
repz
pop
mov
sub
or
mov
movsb
dec
add
sti
cwtl
cmc
in
push
or
icebp
push
cli
jp
inc
out
push
fists
cmp
lock
jb
orb
mov
jns
mov
gs
push
or
lods
test
filds
gs
push
out
dec
cltd
lret
dec
call
mov
inc
mov
and
mov
ljmp
mov
ss
pop
clc
das
scas
fsubrp
or
sub
mov
mulb
inc
mov
push
cltd
arpl
push
mov
loopne
adc
and
xchg
mov
outsl
outsl
arpl
jb
jb
gs
test
inc
fs
mov
push
ss
sub
pop
cld
push
vmovhpd
repz
cltd
jbe
push
cwtl
sahf
in
dec
mov
or
push
mov
mov
jns
lods
movsl
minps
xchg
loop
jns
jbe
sbb
xlat
addl
xchg
sbb
sub
cwtl
pop
jge
mov
mov
into
js
xor
scas
lea
inc
loopne
int3
xchg
movsb
pop
dec
adc
or
mov
gs
ret
in
xor
cmp
mov
imul
jnp
repz
dec
aad
sahf
fstpt
int
xchg
mov
mov
push
dec
xor
cs
insb
iret
inc
lcall
push
cmpsb
loopne
fldt
jnp
xchg
jne
jmp
pusha
push
imul
es
repz
arpl
pop
push
aam
adcb
arpl
inc
into
inc
fildll
push
adcl
fiaddl
xchg
mov
mov
pop
ds
mov
out
dec
leave
mov
gs
sti
pusha
aam
sub
sbb
push
test
repz
pop
cmp
add
sub
push
mov
inc
dec
mov
dec
cwtl
sub
stc
pop
pop
dec
jo
ret
push
inc
ficompl
repz
fisttpll
roll
xchg
movsl
inc
xchg
add
jp
xchg
pushf
pop
push
enter
xor
mov
mov
out
mov
xchg
adc
rcl
data16
cmp
xchg
sub
addb
fsub
aas
cs
cmp
popf
cs
mov
call
adcb
mov
rcrl
loope
jns
and
pop
jg
xor
lods
sbb
cmp
lock
add
sahf
xchg
ret
bound
mov
gs
and
hlt
xor
mov
mov
adc
cmp
cmp
into
cmc
ss
into
vbroadcastss
sbb
cwtl
push
cmp
test
repz
jo
inc
test
xor
imul
sub
cmpsl
jne
adc
rclb
popa
xor
push
xor
xchg
push
inc
scas
outsb
sarl
push
adcb
lahf
push
in
push
stos
sbb
imul
mov
xor
push
sub
stos
fs
mov
mov
jb
push
xor
shlb
inc
cmpsl
dec
scas
enter
mov
or
loope
cwtl
xchg
pop
out
ret
mov
and
test
mov
dec
cmp
jo
mov
pop
adcl
and
sarl
call
in
sub
arpl
jae
and
cmp
push
enter
pushf
push
xlat
es
cmpsb
popf
sar
pop
je
clc
dec
lret
or
jmp
lds
jecxz
ja
popa
mov
mov
jmp
jmp
mov
mov
in
cld
or
movsl
aad
imul
call
cmp
xchg
leave
push
stos
adc
scas
shlb
stc
lret
popf
cld
push
push
fnstsw
fwait
adc
int3
xchg
pop
xchg
dec
stc
shlb
pop
lea
movsl
nop
mov
cli
fildll
lret
loopne
int
fdivrp
mov
les
leave
mov
pushf
incb
mov
jg
popa
dec
dec
add
xchg
sbb
repz
imul
dec
fistpl
sub
inc
mov
data16
and
ds
mov
shl
mov
mov
sahf
int3
mov
pop
pop
fwait
adc
xchg
ljmp
xchg
stos
in
xchg
sti
les
xor
loop
out
sbb
inc
pop
mov
clc
jnp
mov
adc
fsubr
and
xor
mov
adc
loop
or
xchg
jb
hlt
jno
push
lds
aaa
test
mov
add
inc
xchg
inc
ret
inc
dec
iret
adc
jp
xchg
out
jno
or
and
add
ja
pop
int
sub
cmp
mov
dec
andl
xor
cmp
cmpsl
jmp
loop
push
decb
pusha
or
push
and
xchg
loop
stos
adc
test
sub
fnstsw
adc
iret
mov
sbb
cmp
dec
sbb
and
dec
cmp
sbb
out
push
or
in
les
pop
adc
testl
outsb
fwait
push
in
ret
and
xchg
add
and
xchg
int
ficomps
cmp
or
loop
xchg
mov
divb
ds
insl
add
or
cli
sbb
cmp
jl
ja
add
xchg
fsubs
and
dec
stos
fucom
ja
ljmp
lahf
inc
xor
mov
popf
mov
rcrb
xor
mov
mov
xchg
xchg
xchg
aas
adcl
sti
aaa
cmpl
jg
es
insl
jae
lock
adc
popf
test
lock
cmpl
pop
and
inc
arpl
roll
int3
xchg
inc
shrl
stos
inc
loop
repz
mov
lods
incl
dec
dec
add
test
fidivl
icebp
dec
and
push
or
xchg
pop
loopne
add
orb
push
add
loop
fwait
test
sti
xchg
out
dec
add
mov
loopne
push
adc
jnp
push
shlb
mov
lcall
inc
jecxz
test
add
jns
int
rcl
loope
dec
cmp
shl
nop
inc
mul
cmp
mov
push
ret
repnz
aaa
cmp
jp
rcll
and
sbb
dec
sbb
push
fucomi
add
mov
loope
xor
std
jae
repnz
fcom
scas
xor
adc
pop
mov
jne
mov
fcoms
or
cmp
dec
fs
jle
rolb
int
addr16
shlb
mov
shl
addr16
xor
icebp
cli
shrb
data16
test
dec
ljmp
int
lcall
test
mov
or
mov
hlt
gs
adc
pop
xor
add
shll
xchg
push
lret
les
push
out
adc
ja
inc
sub
subl
jl
mov
and
mov
data16
adc
sti
mov
das
mov
push
out
fxch
ljmp
test
lret
mov
sbb
into
xchg
movsb
scas
push
cmp
adc
dec
dec
mov
jbe
aaa
imul
push
add
shlb
push
faddl
fstpl
jge
dec
popf
sarl
xor
inc
mov
pop
or
dec
sbb
pop
or
mov
cmpsl
int3
inc
fcoms
cld
push
xor
lret
mov
leave
mov
adc
jno
mov
icebp
insl
mov
insl
pop
jmp
or
sbb
jne
add
test
adc
test
shr
or
outsb
iret
jo
in
mov
cvttps2pi
and
dec
xchg
test
out
jmp
gs
adc
mov
cmp
xor
mov
sbb
push
cwtl
mov
jno
clc
sub
mov
sarb
out
pop
ror
dec
bnd
push
adc
rcrb
js
dec
lds
xorl
es
sub
leave
enter
adc
cmp
xchg
ss
jns
push
cmp
mov
xchg
mov
mov
popf
jns
jg
add
mov
daa
mov
mov
aaa
mov
sub
mov
shrb
lods
mov
das
jmp
ror
stos
in
std
mov
shll
and
jmp
enter
pop
inc
aad
iret
fcoml
pop
and
fsubp
mov
xlat
push
xor
imul
dec
sbb
mov
adc
mov
inc
bound
test
lds
jbe
leave
lahf
inc
into
sti
add
mull
push
sbb
int3
pop
fdivr
je
iret
ds
mov
dec
insl
js
insb
popa
or
loope
push
mov
andl
mov
es
insb
cmpsb
mov
insl
stos
push
xchg
fsub
push
addr16
subb
push
and
inc
sti
jne
negb
jbe
jae
inc
push
mov
lahf
or
pop
loopne
or
fst
or
jns
test
rclb
arpl
pop
mov
in
inc
fs
test
sub
mov
push
int
sub
enter
pop
cmpsb
es
lahf
mov
inc
decl
aam
cwtl
call
mov
jno
and
in
leave
sbb
jae
cmp
xor
push
inc
imul
ja
filds
adc
mov
or
push
testl
mov
loop
nop
dec
das
test
imul
scas
and
sub
jecxz
dec
xor
cmp
xchg
daa
xor
leave
mov
xchg
fistl
jge
cwtl
jle
outsl
scas
lret
popa
insl
in
cmp
fcmove
cmc
test
push
mov
jmp
out
sub
fsubrs
sub
mov
addl
push
push
adc
pop
cmc
mov
shll
lods
int3
fldt
jne
scas
add
xchg
cmpsb
call
mov
cmpsb
push
jns
inc
or
inc
leave
or
or
lea
pop
adc
cmp
push
sti
cmp
xlat
test
jmp
push
mov
stos
mov
aad
sub
mov
mov
cld
out
or
insb
pushl
or
sbb
loopne
cmpsb
pop
mov
fisubrl
pop
mov
cld
cmp
ret
pop
pusha
mov
sbb
sub
xchg
jno
or
xorb
scas
add
inc
fs
xchg
inc
loopne
clc
bound
fnstcw
mov
ret
mov
ficomps
push
adc
pop
jno
pop
rorb
push
mov
mov
sbb
xor
sqrtps
sub
add
mov
in
cwtl
add
jl
sti
arpl
push
shlb
aam
push
mov
popa
or
outsb
pop
add
stos
jg
ja
xor
mov
mov
shll
shrl
push
icebp
lcall
test
lock
inc
mov
pop
fisttpl
clc
add
push
out
repnz
addr16
jae
das
push
lcall
shl
jg
rcll
pop
jecxz
pusha
fwait
bound
add
mov
push
into
bnd
fimuls
dec
mov
push
sti
xchg
xchg
sub
aaa
ret
shrl
push
jge
mov
outsl
mov
mov
movsb
rcll
loopne
andl
xlat
aaa
inc
and
in
xchg
lahf
sbb
in
pop
shlb
loop
push
pusha
add
xchg
ret
jmp
mov
xchg
sub
inc
add
add
mov
iret
rcrb
inc
fldt
roll
ds
cmp
mov
xchg
push
adc
inc
sbb
xchg
cmp
xor
clc
out
jns
push
mov
sahf
dec
push
clc
jg
jae
add
mov
js
xlat
repz
lahf
mov
pop
adc
inc
inc
hlt
push
cld
cmpsl
ficoml
and
subl
loopne
popa
aad
add
lods
rcr
imul
outsl
xchg
pop
fmuls
and
mov
jae
inc
lret
sub
jl
fcompl
jns
pop
nop
imul
mov
mov
jb
pop
pop
hlt
xlat
and
lret
int
adc
rcrb
mov
mov
push
xchg
push
aad
xor
mov
int3
add
push
add
and
jge
adc
or
in
dec
out
mov
push
test
mov
push
out
imul
lret
and
sbb
sbb
dec
sbbb
int
mov
repnz
cld
sub
int
push
mov
jns
jg
mov
xchg
xchg
mov
push
push
into
and
scas
jae
xlat
mov
hlt
inc
mov
adc
dec
push
pop
mov
push
push
jne
aad
repnz
xchg
cmp
ljmp
lahf
cmpsl
jo
inc
adc
in
sbb
ja
ret
stos
leave
pop
push
out
icebp
sub
shlb
push
mov
pop
sbb
nop
lcall
pop
sub
pop
adc
or
push
push
and
mov
jnp
mov
cli
push
out
lods
push
push
test
and
stos
or
shr
mov
pop
add
push
dec
test
push
xchg
xchg
test
cmc
xor
and
pop
jle
mov
sub
ss
dec
xchg
jno
inc
test
loope
test
dec
enter
cmp
pop
icebp
lret
sbb
add
mov
daa
in
dec
bound
adc
lret
cmp
icebp
fidivrs
mov
lcall
dec
jnp
sub
hlt
or
jbe
insb
dec
js
fcompl
jle
xchg
call
hlt
lods
lock
mov
arpl
or
or
ja
scas
andb
fiadds
loopne
dec
lods
sub
sub
inc
hlt
lods
dec
dec
push
aad
popf
hlt
cmpsl
push
sbb
stos
bound
stos
pop
mov
fsubrp
jne
subl
cmp
add
lods
leave
push
sahf
mov
mov
daa
cld
inc
push
pushf
cmp
mov
js
add
inc
sub
or
mov
orl
push
outsb
push
xchg
dec
pop
xchg
in
fidivrl
mov
sub
ljmp
xlat
lds
pop
fidivrs
std
rclb
test
xchg
lds
and
mov
imul
push
pop
jae
adc
jnp
sub
bound
mov
call
ds
cmp
mov
mov
data16
das
xor
pop
lods
pop
mov
fcompl
pop
jne
stc
sub
int3
jg
sub
mov
jne
notb
mov
test
mov
adc
jnp
cmpsl
adc
cmpsl
xchg
xor
sub
or
in
inc
push
or
loop
mov
inc
xchg
jle
popa
push
sbb
movsb
inc
pop
scas
aam
mov
mov
mov
pushf
or
mov
insl
mov
int3
or
cmpsb
daa
aam
mov
xor
lret
outsl
in
push
adc
xchg
xor
dec
fadd
mov
mov
in
adc
pop
aas
adc
jns
insl
inc
cwtl
pop
jb
push
fucomp
ss
push
mov
pusha
sbb
cmp
in
jmp
inc
and
out
out
sbb
push
ljmp
add
jge
cltd
imul
push
push
test
lcall
pop
stos
xchg
ljmp
inc
push
leave
addr16
popf
cmp
sbb
xchg
sti
ds
hlt
adc
ret
add
xor
jns
xchg
iret
fs
jg
fs
outsl
jl
test
das
pop
xchg
jne
pop
ret
dec
pop
add
sbb
fstpt
inc
out
mov
jmp
out
mov
mov
ret
fstpl
or
shl
cld
jl
mov
leave
inc
mov
cmp
inc
xor
into
out
fld
jnp
scas
xchg
inc
xor
or
cmp
inc
loope
mov
and
gs
push
sub
sahf
jbe
ljmp
aas
xor
push
xor
xchg
jp
out
sbb
mov
lret
addr16
sbb
cs
ja
sbb
stos
int
mov
sahf
mov
pop
insb
xchg
xchg
cmp
cmpl
fs
cmpsl
cmp
mov
mov
shrl
ret
test
inc
shrb
jl
xor
jmp
add
push
mov
mov
notb
pop
cmpsb
pop
sahf
fisubrs
ss
cmc
imul
mov
out
popf
fidivrs
fdivp
sbb
movsb
pop
pop
lret
jge
test
test
xor
push
lea
fiadds
dec
inc
jge
inc
scas
xchg
xchg
mov
popa
cld
mov
push
mov
iret
scas
and
es
and
jns
popf
push
inc
es
mov
icebp
jle
mov
jge
shl
xchg
aas
fldcw
lret
jg
pop
test
test
in
repnz
xor
xchg
mov
out
mov
icebp
popa
jns
or
or
inc
fdivp
cld
fnstsw
xchg
jbe
call
add
aas
add
dec
lds
cmp
mov
xor
mov
add
push
push
int3
dec
insl
outsl
in
sub
jae
dec
out
push
push
imul
mov
push
out
lcall
sbb
xchg
rclb
adc
fstpl
push
fstps
and
adc
cwtl
fidivs
jmp
cli
popf
jmp
popa
out
dec
mul
push
sti
out
pushf
add
xchg
adc
xchg
push
test
shlb
inc
adc
dec
pop
std
or
pop
mov
pop
cmp
push
xor
inc
lcall
jnp
outsb
jmp
cltd
inc
jb
aam
and
adcb
mov
pop
or
int
jmp
in
je
repnz
xchg
jns
imulb
xchg
xchg
shll
inc
popf
sbb
js
sub
into
jmp
xlat
mov
or
mov
mov
es
in
mov
or
mov
push
fsubr
cmp
mov
dec
xor
push
pop
xchg
add
pop
adc
inc
in
loope
aad
xor
addr16
pop
fcoml
or
movsl
push
sub
sbb
gs
ljmp
in
test
aad
fisttps
push
pop
add
add
jp
inc
xchg
aam
dec
cmpb
jbe
xchg
xorl
mov
adc
xchg
pusha
shll
cltd
in
in
xor
dec
or
pushf
sub
pop
push
adc
nop
shl
loope
stc
js
pop
adcl
cmpsl
sub
test
addr16
popa
mov
out
push
dec
aaa
stc
cs
inc
mov
gs
popf
insb
xchg
cmc
mov
mov
mov
xor
es
mov
repnz
lods
mov
icebp
xchg
lahf
mov
xor
jp
add
xor
sbbb
popf
mov
inc
push
mov
fisubs
jno
lret
fs
std
test
pop
mov
push
pop
adc
jge
add
aam
cmp
lcall
pop
outsl
lea
in
out
in
imul
lods
jae
movsl
and
lock
push
mov
out
adc
or
mov
mov
cmp
cmp
cmp
jns
ror
xchg
sbb
mov
dec
mov
mov
jb
lds
sbb
imul
les
cmp
xchg
lea
repz
scas
int
dec
mov
ret
insb
dec
xlat
and
jmp
cmpsb
sahf
sahf
lahf
mov
mov
shll
enter
pop
popf
cmp
lret
cmp
jnp
jmp
iret
js
lock
les
mov
mov
popa
cltd
int
or
les
ret
or
inc
ror
sub
xchg
mov
xchg
or
jmp
mov
cmpsl
or
mov
inc
push
and
addb
sarb
je
inc
dec
popf
js
pop
xchg
movb
fisttps
insb
rorb
jae
ja
inc
fdivl
pop
scas
xor
push
or
fs
push
or
fstpl
loop
jbe
xchg
mov
add
or
mov
mov
loopne
into
negl
mov
push
push
dec
addr16
inc
fdivs
cmc
sbbb
mov
fdivrp
cmc
mov
test
ds
add
and
dec
pop
dec
add
inc
inc
mov
or
inc
mov
push
scas
clc
cmpsl
push
sahf
inc
mov
fwait
lods
and
mov
es
inc
sbb
lea
push
cmpsl
mov
xchg
fcompl
mov
inc
pop
in
mov
popa
dec
inc
cmp
cmc
mov
mov
aas
mov
cli
fstps
xchg
dec
or
clc
add
jecxz
inc
pusha
bound
or
add
movsl
add
dec
mov
sarb
imul
sbb
jnp
jo
pop
andb
pop
mov
mov
out
insb
push
jne
mov
loop
jns
xchg
and
scas
loopne
and
jp
scas
cmp
xchg
mov
add
bound
jbe
dec
dec
dec
shll
es
mov
mov
cld
inc
jle
sbb
icebp
adc
and
dec
stc
data16
and
icebp
xor
push
jl
and
aam
imul
jo
add
xchg
push
mov
sub
out
ret
fucomp
shr
adc
mov
jae
test
mov
dec
cwtl
push
pop
push
and
sti
data16
sti
or
cmp
es
mov
jg
in
add
push
mov
mov
sarb
jg
ficomps
add
dec
mov
mov
push
aaa
sub
aaa
cmp
mov
and
stos
aad
scas
pop
iret
jb
cld
pusha
arpl
in
sbb
cltd
add
testb
jne,pn
xchg
or
and
push
repnz
subb
jo
divl
ret
dec
inc
std
enter
xor
fidivrl
push
inc
push
movsb
xchg
jno
cld
xchg
cmpsl
imul
or
mov
pop
inc
xchg
sub
aaa
stos
push
outsb
and
jne
push
cmp
or
lods
jecxz
shl
mov
jp
ljmp
add
sub
fmul
lahf
xor
sbb
jmp
loop
sbb
jae
shrb
lret
pop
das
cmp
sub
adc
imul
dec
ds
xchg
xchg
xor
jbe
sub
adc
dec
int
cwtl
mov
pushf
dec
mov
push
pop
dec
push
shrl
xchg
mov
jae
sbb
sub
push
fwait
pop
mov
gs
push
adc
or
cltd
add
xor
xchg
push
and
jecxz
mov
add
rcr
mov
das
jb
popf
mov
outsl
in
icebp
sti
xchg
pusha
insl
or
xchg
push
xorl
in
iret
les
daa
stos
in
aaa
movsb
xchg
sbb
ss
pop
sbb
mov
insl
fsubrs
lahf
mov
lds
into
xor
add
test
scas
loopne
subb
int
in
jmp
inc
mov
push
inc
jl
or
test
mov
mov
sub
imulb
and
xchg
daa
gs
mov
loopne
mov
push
mov
lcall
add
dec
inc
imul
insb
or
and
jb
sbb
cs
sbb
dec
cmc
pop
pop
pop
aad
sbb
pop
pop
ljmp
and
xchg
adc
fsubrs
or
or
notl
adc
hlt
jl
and
sbb
addb
xor
or
mov
stos
and
lds
jg
xor
mov
cld
sbb
std
lock
inc
in
sbb
push
test
push
aaa
and
mov
dec
add
xor
out
test
shl
out
mov
stos
push
cmpsb
push
insl
and
out
sub
xchg
sarl
mov
add
lds
push
inc
addr16
mov
inc
loop
fldenv
inc
mov
es
stos
dec
inc
mov
adc
adc
pop
xor
lods
mov
icebp
jns
int
push
fidivs
pusha
fadds
sbb
out
inc
mov
push
jg
fnstenv
adc
es
sbb
xchg
cli
adc
sti
sub
into
jl
movsb
push
cmpsl
in
xchg
jns
add
stos
mov
adc
xchg
mov
fs
sbb
sbb
and
ret
ljmp
xor
loop
mov
and
push
jo
push
jl
outsl
inc
mov
xchg
les
inc
fldt
and
push
push
push
sbb
lret
push
pushl
push
mov
out
sarb
dec
lods
pop
outsb
in
mov
jg
dec
add
outsb
mov
jl
xchg
enter
xchg
repnz
xchg
sub
pop
sub
outsb
xchg
les
imul
add
push
popf
or
data16
movsb
dec
sub
jne
std
out
sti
xor
push
mov
insl
inc
lret
dec
push
push
mov
pop
adc
std
shrb
popa
vsqrtps
jle
cmp
shrl
daa
out
dec
fcmovnu
inc
mov
call
aad
and
jg
pop
mov
sbb
xlat
cld
mov
xchg
lea
mov
pop
dec
lods
cmpsl
inc
adc
sub
lock
test
fisubs
std
insl
inc
testl
cmp
and
cltd
pop
adc
lds
xchg
xchg
neg
cmp
jnp
pop
stos
lods
aam
pop
pop
pushf
cld
jnp
add
and
sub
inc
xor
outsb
repz
fsubs
lret
jg
jne
and
test
xchg
je
adc
je
fldcw
push
ret
sarl
ficoml
fwait
push
cmc
je
xor
sub
xchg
or
test
jnp
mov
hlt
xor
je
jo
inc
rcr
hlt
enter
imull
addr16
imul
je
push
mov
movsb
add
mov
jl
cs
add
sbb
sub
les
test
icebp
and
aad
movsl
repnz
mov
aaa
fs
jl
ds
popf
jb
adc
mov
lea
jno
sbb
push
pop
lods
fdivl
cwtl
or
and
jns
outsb
and
scas
inc
imul
movsl
pop
pop
int3
xor
insb
fnstenv
inc
scas
popa
int
lock
ljmp
dec
scas
ss
sbb
push
inc
insb
popf
xlat
jmp
pop
mov
movsb
stc
push
mov
jp
ficoml
sub
push
adc
push
or
cli
add
iret
shll
inc
lods
sub
pop
push
sbb
scas
inc
cmp
lret
xor
sbb
xchg
push
mov
sub
outsb
mov
jbe
sbb
sahf
mov
mov
sbb
aas
mov
inc
mov
cmp
push
sbb
jle
int3
add
ja
fsubl
and
inc
adc
test
xor
nop
and
pop
jg
cld
movsl
cmp
sahf
lret
xor
mov
mov
aas
jo
pop
inc
mov
inc
roll
aad
rcr
sbb
cmp
xchg
jge
clc
push
inc
xor
xlat
dec
rol
movb
or
gs
xchg
and
dec
jbe
subb
pop
int3
cmp
ret
cmp
outsl
push
push
add
mov
pop
ss
adc
divb
lds
mov
pusha
addb
fiadds
cmpsb
sub
sti
or
daa
mov
xor
pop
mov
add
or
lahf
aad
jp
cltd
testb
outsl
and
addr16
cli
pop
push
mov
fistl
lret
xor
insb
pushf
sbb
adcl
jl
mov
lahf
fwait
xor
inc
cmp
and
popf
mov
sbbb
sub
in
xor
or
dec
dec
test
leave
ja
in
sub
jns
fdivrl
repz
sub
shrb
add
repz
add
cmpsb
loop
mov
or
add
pop
xchg
adc
inc
mov
jp
xchg
add
inc
dec
paddb
pop
loopne
orb
rol
mov
idivb
lods
nop
shlb
mov
and
hlt
rcll
mov
push
push
mov
jmp
and
cld
ja
mov
repnz
inc
mov
lock
arpl
mov
mov
sbb
pop
jo
and
pusha
pop
repz
in
out
mov
in
jmp
xor
xchg
push
or
aas
movsb
or
iret
push
jmp
sbb
pop
out
push
loopne
repnz
xlat
push
inc
mov
sub
arpl
xor
stc
nop
sbb
sbb
pop
push
mov
lock
inc
dec
or
je
call
cwtl
xchg
mov
mov
mov
xchg
jnp
pusha
push
outsl
cmpsl
cmp
movb
cmpsl
lret
xchg
mov
cld
xchg
inc
cltd
loope
aas
and
popl
movsb
enter
jno
pushaw
add
aam
js
loopne
sbb
pusha
les
popa
mov
pop
into
les
xchg
int3
cli
jne
in
std
jb
or
rcll
mov
daa
push
je
mov
sub
dec
mov
popa
mov
xor
rcl
sub
bound
leave
test
mov
clc
lea
pop
adc
inc
fsubrl
inc
jecxz
cltd
xchg
cld
sub
imul
cli
sbb
lcall
push
sbb
sahf
mov
dec
mov
jno
xor
pushf
jge
mov
test
pop
ljmp
popf
jo
mov
push
nop
ljmp
jmp
lahf
mov
and
out
push
sub
out
inc
sbb
sub
imul
popa
nop
in
and
jne
roll
jnp
je
jg
out
push
cld
pop
in
bound
fdivrl
jne
shlb
insb
mov
push
push
sbb
int3
inc
add
out
pop
fldenv
sub
sub
sbb
xor
out
adc
adc
das
inc
jp
shl
iret
mov
repnz
pop
pop
sub
mov
pushf
int
not
icebp
aam
ljmp
daa
mov
mov
and
int
jbe
mov
cmc
aaa
mov
pushf
push
cmc
rorl
inc
lods
jnp
cmc
push
dec
test
popf
cmp
stos
sbb
and
xor
fwait
push
divl
call
push
ror
push
mov
dec
jbe
ret
xor
testl
in
push
dec
fisubl
jo
sbb
dec
xchg
stos
inc
pop
dec
add
paddb
lahf
lret
sbb
orl
cmp
in
cli
out
loop
and
mov
idivb
out
mov
mov
xor
push
mov
jae
or
das
int
dec
adc
xchg
in
and
lods
or
xchg
divb
test
sbb
pop
jb
lret
and
or
mov
sbb
sbb
push
jb
loop
ds
pop
mov
jle
adc
jae
test
jo
aaa
pop
pusha
ret
lahf
shrl
sub
push
sub
pop
xchg
adc
gs
inc
or
pop
and
out
sub
or
and
mov
lahf
xchg
pop
in
fstp
mov
inc
jb
jmp
out
pop
test
and
pop
bnd
push
lret
decb
add
lods
test
test
scas
xchg
mov
xchg
push
aas
or
and
sbb
push
and
out
aad
mov
dec
or
xor
iret
xor
fadd
cmp
int3
xlat
push
decb
and
dec
inc
or
in
xor
push
adc
insb
in
icebp
cmc
and
sahf
ja
mov
imul
sub
loope
inc
sbb
gs
pop
imul
push
stos
mov
icebp
pushf
cs
sbb
int3
data16
arpl
call
ja
in
jns
xchg
jno
mov
dec
xchg
xchg
scas
and
icebp
push
cmp
inc
lcall
fs
mov
jns
pop
push
jno
outsb
jnp
andps
mov
cmp
sub
mov
jmp
mov
xchg
inc
jno
and
ds
scas
cs
jmp
fsubrs
push
lret
notb
xchg
ficoml
jg
dec
dec
mov
jne
scas
sub
je
adc
or
and
or
fdivr
dec
sbb
xchg
add
test
add
enter
xor
sub
jle
test
pop
lea
outsb
lcall
data16
sub
dec
jae
call
shl
mov
lret
add
mov
mov
insb
cwtl
pop
pop
jns
stc
loope
jmp
inc
rolb
jne
stos
adc
lret
sbb
out
iret
lods
sub
jecxz
sub
xchg
cmp
xchg
mov
movsl
adc
xchg
cmp
mov
adc
cmp
push
lret
adc
jecxz
mov
aaa
in
insl
lods
aad
adc
xor
adc
fsubl
leave
icebp
dec
lds
test
lcall
leave
cmpsl
data16
lret
push
call
inc
mov
mov
sti
ljmp
jge
stos
lret
jnp,pn
ret
pusha
add
cmc
fildll
sub
loop
stos
cmc
arpl
push
mov
out
arpl
fs
dec
xorb
ds
cmpsb
mov
sbb
ljmp
xor
lcall
sub
fwait
ljmp
pushf
fimuls
pushf
mov
dec
mov
push
pop
or
xchg
jne
fwait
xchg
mov
dec
repz
sbb
add
push
enter
hlt
cltd
mov
cmpsl
dec
leave
pusha
push
hlt
fldl
lock
add
dec
pop
nopl
pop
pushf
into
pop
dec
push
dec
pop
xorl
or
pop
jecxz
ds
test
mov
lahf
imul
ret
fisttpl
mov
jo
xor
push
jnp
mov
sbb
in
inc
sti
dec
dec
cmp
in
pop
stc
xchg
into
in
scas
xchg
inc
jns
lock
xor
adc
lahf
pop
mov
dec
push
add
addr16
test
pop
mov
xchg
scas
mov
inc
push
std
int3
pop
mov
pop
or
out
jne
lock
scas
and
dec
in
push
adc
jbe
push
les
mov
pop
and
js
xor
xor
lock
idivb
jecxz
jp
sahf
add
repz
add
xor
mov
mov
data16
leave
mov
sub
movl
test
cwtl
jle
dec
loope
fstpt
in
fwait
incl
xlat
and
inc
pop
inc
mov
push
jge
xlat
imul
jns
arpl
fs
subl
mov
dec
jge
into
dec
cmpsl
sub
icebp
pop
icebp
cli
test
in
lret
nop
lcall
test
fsubs
inc
push
xor
fstpl
push
dec
cmp
leave
fmull
pop
mov
cld
dec
pop
loopne
outsl
cmp
mov
into
call
push
les
int3
test
pop
pop
ret
lock
sbb
lods
xor
ds
shlb
cli
push
add
aas
out
push
imul
sub
mov
cmpsl
imul
dec
push
mov
jbe
adc
mov
shll
sti
and
lret
dec
push
push
into
add
or
cld
dec
pop
imul
inc
adc
dec
or
sbb
cmp
pop
repz
or
mov
daa
les
lock
test
and
xchg
lret
xor
adc
imul
cli
shll
aas
inc
sbb
aad
sbb
int3
sbb
test
in
dec
popf
les
xlat
mov
pushf
js
addr16
cmp
push
scas
mov
adc
adc
dec
mov
jns
or
mov
adc
cmc
pop
lea
scas
sbb
lods
mov
out
xchg
jae
dec
jp
or
mov
add
fisttpll
mov
jle
adcb
fmull
leave
gs
push
push
les
cmc
push
adc
jp
std
jl
rcl
testb
push
xor
dec
dec
inc
pop
dec
push
dec
adc
iret
push
jnp
push
dec
mov
imul
xchg
mov
and
sbb
leave
push
push
movsb
jne
loope
or
mov
pop
inc
loopne
std
fistpl
mov
or
xor
jo
repnz
imul
mov
aad
adc
xlat
aaa
cs
js
aaa
pop
push
nop
pushf
cmp
sub
mov
cltd
stc
gs
cmc
xor
fwait
mov
sahf
mov
push
insb
lock
gs
jo
dec
ljmp
and
imul
mov
mov
cltd
cmc
pop
xorb
inc
cli
insb
cmp
cltd
popa
inc
pop
pushf
xor
xchg
cmp
push
insl
int3
and
fcomps
jecxz
or
push
dec
ja
sahf
xor
jnp
dec
xchg
std
in
in
sub
push
in
jp
xchg
xlat
leave
nop
mov
or
ja
jg
imul
add
adc
aam
jbe
fisttps
adc
imulb
call
sub
and
test
aad
jl
das
into
shll
lret
pop
int3
cs
ficompl
jno
out
movsl
mov
cmpsl
bswap
fistps
rol
gs
lret
mov
pushl
inc
dec
mov
add
mov
jmp
inc
cmp
cli
mov
xor
inc
mov
push
xchg
sub
inc
jo
movb
dec
dec
sahf
hlt
and
aad
adc
in
dec
jecxz
push
mov
dec
adc
jmp
jne
cld
ljmp
sahf
cmpsb
cmp
out
cmp
sahf
pop
dec
sub
xor
cltd
adc
pop
pop
push
push
push
xor
and
or
mov
repz
xchg
sub
jne
fstpt
xor
out
in
loope
cmp
andl
imul
and
sbb
push
repnz
pop
imul
inc
mov
nop
push
int3
out
mov
outsb
cltd
mov
andb
sar
and
push
sub
adc
aad
sub
jp
in
inc
mov
aaa
outsb
adc
dec
add
lahf
fs
jns
and
sub
dec
insb
ss
int3
pushf
stc
std
sar
stos
add
dec
div
jle
pop
mov
pop
mov
mov
cld
inc
popa
idivb
flds
pop
sbb
mov
clc
les
arpl
lahf
add
adc
pop
mov
xchg
cmpsb
mov
xor
or
bound
lea
dec
xor
or
outsb
xchg
mov
lcall
sub
or
loope
and
int3
add
fadds
in
cmp
jl
stos
hlt
loope
sbb
push
cmp
xor
xlat
add
xchg
mov
mov
jno
cmovbe
or
movsb
addr16
mov
mov
mov
sub
xchg
or
out
lret
push
cmp
ljmp
push
push
outsl
cmp
xor
mov
jge
add
sbb
dec
mov
jmp
sub
mov
inc
shll
jl
inc
fldcw
sub
xchg
cmp
mov
adc
cmp
dec
xor
fcoms
inc
fdivl
dec
sbb
sub
iret
pusha
hlt
mov
sbb
out
xor
or
sbb
dec
fstp
xor
push
out
pop
and
pop
hlt
fwait
inc
addr16
jno
mov
std
cltd
adc
push
int3
push
pop
jp
orl
rorb
push
push
movsb
or
xchg
sbb
cltd
jns
test
mov
fisttpll
imul
ret
mov
adc
cmp
fwait
sub
aaa
cmp
inc
in
fadds
sbb
scas
rorl
clc
das
testb
lods
out
and
or
insb
data16
jne
or
or
loop
adc
xchg
mov
xchg
mov
insl
dec
jns
jnp
add
mov
loopne
cmp
dec
sub
outsl
repz
push
lret
mov
dec
add
data16
into
xor
lock
push
fsubl
mov
xchg
jmp
out
leave
aad
jl
ljmp
mov
dec
int
push
ja
loop
into
cmp
sub
scas
aad
mov
stc
sbb
fwait
je
ljmp
fcoms
inc
mov
test
pop
cmpsl
popf
aas
arpl
pusha
lods
aad
enter
repnz
inc
int3
pop
push
jne
cmp
lock
mov
jae
mov
pop
out
push
xchg
scas
sbb
jae
adc
lcall
pop
aad
mov
ljmp
or
dec
dec
inc
mov
pop
outsl
add
xchg
mov
mov
jl
push
lods
popl
bound
mov
and
push
call
mov
mov
and
jge
gs
out
hlt
std
call
popf
into
sbb
adc
cld
stos
lock
inc
adc
loope
and
dec
stc
cmpsb
ja
shrb
adc
aam
jo
adc
cltd
sub
push
jg
loope
push
orb
pop
lds
cli
scas
jns
pop
sbb
in
xchg
das
pop
lds
lods
mov
pop
xchg
xor
pop
mov
inc
nop
xor
cmpsb
push
or
scas
cmpsb
or
jne
jnp
push
je
aad
push
or
stos
mov
pop
xchg
pop
dec
clc
mov
adc
nop
cld
insl
cmpsl
or
mov
in
adc
rcll
test
jno
aas
cmp
movsl
or
mov
test
or
or
mov
jno
pop
lock
mov
cmc
lret
inc
jnp
in
and
in
mov
movsb
mov
add
aad
dec
push
pop
out
or
fsubrl
cmp
movsb
imul
out
insb
pop
lcall
fimuls
jae
testl
jno
outsb
xor
cmp
push
incl
imul
mov
insb
out
jns
imul
rorl
xchg
fidivrl
mov
mov
mov
inc
cli
es
stos
mov
lret
shrb
repz
mov
sti
adc
mov
movsl
sub
out
stos
mov
mov
and
shrl
jo
mov
in
push
mov
and
jnp
add
incl
outsb
imul
fbld
jae
lret
or
jle
push
movsl
xlat
or
inc
dec
xchg
sub
mov
xor
sub
jo
fbld
dec
and
add
aad
xorb
cmc
add
fisubrs
mulb
dec
pop
iret
sub
ret
push
cmc
inc
les
jecxz
and
inc
adc
sub
ret
out
hlt
iret
push
cmp
fcompl
xchg
ror
jbe
pop
jb
jge
data16
push
push
jbe
ret
mov
stc
leave
fisubrl
aaa
sub
push
dec
loopne
loop
cmp
scas
push
icebp
sub
and
aad
and
sub
fbld
pop
dec
fldcw
cmp
gs
int
je
mov
icebp
mov
mov
aam
mov
and
mov
stc
fstps
push
xor
adc
movsl
fadd
sbb
ja
jno
jne
dec
and
in
or
shlb
ret
adc
rcll
add
insl
xchg
cltd
xchg
jbe
mov
loopne
icebp
and
enter
sarl
mov
dec
xchg
fdivrl
xor
cmp
sbb
sbb
or
lahf
jmp
stos
js
data16
fdiv
mov
inc
enter
scas
addb
loop
xor
test
mov
adc
popf
hlt
mov
imull
dec
loop
jae
pop
addr16
add
imul
imul
cmp
imul
cmp
into
nop
mov
enter
sbb
jecxz
stos
push
shll
call
int3
sbb
into
sar
add
outsl
add
mov
in
jb
sbb
pop
das
lret
int
xor
add
mov
inc
aam
xchg
dec
insl
mov
flds
push
push
aaa
mov
fistps
push
rclb
mov
mov
cmc
scas
push
xchg
lea
jmp
leave
xchg
dec
pop
es
divb
pusha
mov
bound
cltd
rolb
addl
adc
iret
stos
das
mov
cmpsb
dec
jg
push
test
push
jae
and
bound
add
or
mov
stos
sbb
fistl
or
cmpsl
imul
mov
idivl
das
inc
sub
pop
ljmp
arpl
push
xchg
sub
sub
outsb
insl
hlt
xchg
cmp
aaa
mov
cmp
je
mov
movsb
leave
scas
aam
repnz
fdivrp
and
testl
inc
cmp
aam
lods
add
jb
adc
jge,pn
adc
dec
fistpl
or
inc
loope
or
mov
lock
add
sbbb
outsb
pop
das
lcall
mov
loopne
dec
popa
push
inc
insb
mov
or
sub
shrb
mov
test
scas
xchg
fldenv
movsb
push
test
cmp
mov
add
cmp
loope
add
cmp
stos
rclb
pusha
jp
push
test
into
adc
mov
push
xor
sarl
lock
lods
rolb
push
fcmovne
mov
test
mov
jns
or
pop
int
xchg
test
sbb
filds
xchg
sbb
in
repz
fwait
lock
push
xor
lahf
mov
dec
jp
sub
iret
jl
fldln2
ja
xchg
add
jo
cmp
pushf
push
stos
mov
jp
xor
pop
mov
jge
lods
xchg
cs
cmpsl
fisubs
xchg
push
push
out
mov
pop
xchg
call
das
push
cli
or
clc
test
mov
daa
loope
adc
jle
test
popf
or
ja
ret
adc
jno
loop
pop
and
scas
mov
dec
jns
xchg
adc
dec
mov
mov
fsubs
adc
adc
jb
icebp
xchg
inc
mov
push
mov
in
gs
add
inc
xchg
cmp
dec
xchg
ret
sbb
xchg
sub
mov
fdivp
mov
or
cs
je
mov
push
testb
xchg
sbb
inc
mov
mov
sub
cs
aad
int3
add
dec
push
jae
xchg
xchg
repnz
ss
and
mull
int3
out
mov
icebp
mov
pop
dec
nop
add
jle
add
les
aam
adc
xchg
mov
push
push
jg
jl
inc
xchg
mov
ret
push
fs
cli
sbb
inc
sahf
jmp
add
inc
test
inc
scas
int3
in
inc
xor
shrl
rorb
subl
dec
add
mov
enter
dec
je
sbb
fstpl
cmpsl
jbe
sbb
mov
lock
movsb
or
leave
daa
scas
pop
or
dec
sar
test
div
daa
dec
cmp
and
in
push
das
jl
daa
test
fdivr
sbb
test
cmp
je
bound
sbb
out
inc
push
ret
mov
test
repz
push
sahf
adc
jne
sub
enter
sub
das
js
jo
xor
lcall
nop
int
fiaddl
xor
in
or
sbb
xorl
sub
jne
pop
cmp
push
aam
repnz
jmp
cmp
mov
adc
mov
mov
xchg
jbe
sub
push
jno
cmpsl
cmp
ds
arpl
shlb
lret
mov
cltd
inc
add
in
ja
dec
int
pop
and
fs
stos
jnp
cmpsl
js
xor
loopne
iret
into
repnz
int3
popa
inc
dec
pusha
lea
pop
ret
imul
cmp
mov
lret
lds
mov
ja
xor
addb
adc
pop
movsb
mov
scas
jecxz
dec
dec
jp
sar
jb
test
mov
mov
jp
add
push
ret
mov
or
pmuludq
jge
test
btr
push
in
cmp
sbb
or
mov
mov
outsb
fbstp
in
sbb
sahf
fnstenv
out
inc
pop
sbb
jge
dec
fidivl
sub
jbe
jecxz
mov
fldenv
clc
out
mov
lret
mov
pushf
lock
stc
inc
out
fucomip
lods
mov
mov
out
xchg
xor
xchg
pop
loope
es
cmp
inc
dec
in
push
inc
adc
inc
jno
adc
inc
inc
add
ljmp
push
jge
cs
ret
sbb
fisttpl
mov
add
das
push
push
leave
mov
pop
in
stos
mov
cmp
sub
iret
leave
dec
or
inc
cmc
out
pop
jb
out
lret
movsl
sbbb
adc
pushf
jg
add
jg
add
dec
push
push
mov
xchg
xchg
or
xchg
movl
pop
rcrb
das
xchg
xor
neg
or
aas
pop
cmp
gs
pop
bound
jg
popa
cmpb
xchg
jg
pop
lock
push
push
push
xor
inc
sbb
push
mov
add
shll
mulb
mov
push
mov
arpl
add
out
jb
sub
pushf
arpl
es
mull
push
popf
xor
subb
test
pop
gs
test
adc
out
cli
or
xchg
es
lock
mov
sbb
sbb
cmc
es
into
mov
std
adc
fisubrs
test
xor
sbb
scas
mov
mov
sub
mov
push
ffree
cmp
sub
add
jns
sub
xor
add
push
loop
adc
lock
jle
js
ffree
inc
and
jg
or
mov
gs
xchg
pop
loop
movsl
fcomp
pop
shrb
repnz
push
xor
popf
push
jl
rcl
pop
int
cli
adc
jge
lcall
cs
scas
mov
or
loop
or
bound
adcl
add
sahf
adc
dec
outsb
mov
shl
or
and
repz
xchg
mov
fcoms
add
mov
push
loopne
mov
rorb
mov
test
std
dec
adc
and
xchg
in
arpl
push
rcrb
pop
aas
jb
jne
cmp
adc
mov
and
icebp
inc
pop
arpl
stc
push
sbbl
or
add
xchg
mov
cmp
das
add
or
mov
loope
iret
jae
add
shrb
sbb
ror
jecxz
or
add
repz
loopne
inc
push
jl
das
and
cmp
sub
push
sar
and
jns
mov
mov
js
out
fwait
loope
flds
aam
jbe
rcrl
lock
jp
xchg
jno
mov
in
mul
shrb
lret
mulb
orb
rcrl
imul
cmc
ret
push
lret
sub
popf
cmc
mov
inc
lret
aas
leave
out
cld
scas
pop
xor
dec
add
adc
in
xchg
cmp
popa
mov
outsl
cmc
add
orl
pop
in
jmp
leave
ljmp
fistpl
jo
insb
or
popa
inc
mov
js
or
mov
jb
adc
scas
enter
xor
ror
rorb
xchg
xor
sub
or
mov
mov
ret
push
insb
adc
shrb
cltd
lods
ja
sub
adc
shll
aas
inc
cmc
pop
mov
icebp
xchg
or
push
xchg
out
rcrl
dec
push
ret
jle
lods
pop
insb
call
cmp
scas
or
add
lods
mov
mov
ss
movsb
mov
xor
jo
in
ja
shrl
loope
mov
insb
add
adc
dec
mov
sbb
frstor
mov
imul
jge
add
sub
jl
ss
pop
and
mov
cmpsl
repnz
sub
sub
out
xchg
test
push
in
test
adc
push
adc
push
dec
cmpl
dec
addr16
xchg
aam
pusha
faddl
sbbl
jb
pop
call
xor
mov
sbb
mov
and
loop
jg
shl
fld1
xchg
ja
dec
adc
std
or
mov
mov
cmp
iret
rcl
mov
nop
daa
ljmp
mov
pop
cli
filds
cmpsl
adcl
mov
and
mov
dec
and
aas
push
and
dec
mov
test
pop
lds
sub
out
pop
jbe
jle
xchg
daa
les
fwait
push
test
mov
addb
scas
shl
jge
ret
inc
loopne
ja
loopne
pushf
int
loop
fs
cmc
mov
jmp
mov
mov
inc
push
lcall
sbb
fldl
jne
add
or
push
xchg
cs
js
fldt
push
push
adc
mov
ret
fstps
pushf
mov
inc
push
inc
jecxz
push
stos
sbb
mov
mov
xor
jge
data16
loopne
or
pop
mov
push
lret
rcrb
add
divl
sub
fdivrs
push
dec
inc
sbb
push
mulb
push
xor
int3
outsl
jb
icebp
iret
xchg
jbe
cmc
adc
cltd
mov
cmp
push
repnz
or
ja
scas
mov
xor
mov
scas
mov
add
fwait
int3
test
mov
push
in
call
pop
pop
jge
mulb
outsb
les
pushf
jb
je
lcall
push
pop
xchg
movsl
cs
mov
pushf
or
mov
sub
sbb
ret
jno
mov
dec
je
xor
pop
aam
mov
test
push
xchg
clc
xchg
inc
sbb
mov
jle
sbb
pop
mov
cmp
cmp
mov
cld
sbb
pop
and
or
mov
rorb
aas
ja
or
push
pop
movsb
movsl
hlt
fs
mov
lret
xor
out
pop
lcall
lods
sub
mov
push
outsl
cmpsb
push
fs
xor
adc
outsl
lds
fs
jecxz
loope
dec
pop
and
inc
sub
test
ficomps
movsb
into
push
test
mov
imul
mov
fdivs
movsb
push
xchg
into
test
insb
bound
fucomip
push
int
imul
and
lds
mov
push
jmp
pushf
push
cmc
mov
aam
pop
pop
lods
pop
aad
lcall
xlat
mov
xchg
and
jne
jne
adcl
jb
add
orl
inc
repnz
adc
add
ds
aas
ja
push
pop
and
nop
out
fldenv
jl
sbb
lods
inc
sub
add
lret
test
sub
fldt
arpl
adcl
sub
das
scas
ss
jo
jbe
lock
pop
stos
cmp
jne
and
pop
add
xchg
push
aaa
fcomi
add
push
data16
pop
loope
jno
mov
cmp
adcb
sti
cwtl
sbb
aaa
addb
data16
ja
jl
flds
xor
test
sarl
xchg
into
xchg
adc
adc
xchg
movsb
mov
mov
jg
mov
fstps
int
rcrb
pop
and
push
outsb
sbb
mov
repz
dec
xchg
dec
nop
inc
jb
aam
dec
fcmovbe
ja
cmp
out
stc
clc
sub
scas
and
push
imul
out
and
cwtl
push
or
int3
push
fisubrs
cld
jnp
pusha
add
inc
mov
cmpsl
dec
dec
mov
fs
mov
mov
or
out
pop
int
outsb
imul
fisttps
jle
testb
fdivl
cmp
mov
sahf
jmp
std
and
mov
push
loop
inc
push
and
push
jle
mov
in
sub
mov
imul
or
sbb
xor
add
addr16
adc
es
mov
inc
mov
add
push
pop
sub
pop
or
mov
std
js
xchg
mov
test
mov
mov
pop
xchg
push
xor
mov
addl
cmp
inc
adc
xchg
mov
cmp
xor
lods
sar
mov
popa
in
adc
cmpb
add
and
fcomps
add
rcll
fidivrl
lahf
sahf
xor
nop
int
lods
jno
sub
jl
fs
xchg
pop
or
xor
rcll
in
cmc
jne
stos
mov
sbb
into
adc
popa
push
hlt
repnz
xchg
jecxz
mov
push
mov
xchg
xor
push
and
iret
mov
dec
daa
je
lods
cmp
daa
jnp
lret
das
nop
cmp
mov
test
nop
les
xchg
das
pop
fwait
mov
aaa
push
dec
lahf
pusha
sbbl
ret
push
in
xor
push
adc
dec
mov
ret
lods
jecxz
jl
gs
or
sti
enter
xchg
fidivs
sti
mov
sub
jp
mov
dec
jne
imul
push
fwait
scas
mov
cmp
add
repz
jmp
pop
arpl
addr16
shl
mov
idiv
dec
in
jno
mov
jp
mov
sbb
dec
adc
fnstcw
ret
loop
mov
leave
lods
pop
pop
aaa
mov
fisttpll
lods
sub
out
jle
dec
rcll
lods
xchg
mov
and
out
push
cmc
mov
shl
xchg
lret
sub
test
and
arpl
sbb
sbb
jle
xchg
test
sub
xor
adc
xor
call
pop
sbb
mov
addb
mov
lods
dec
dec
in
pop
xchg
pop
lea
add
inc
sbb
adc
andl
ret
push
movsb
mov
xchg
outsb
push
add
stos
jns
mov
mov
xchg
pop
pop
inc
dec
xor
icebp
xor
push
notl
cmp
lret
xchg
xor
xor
dec
mov
and
xchg
daa
nop
subl
xchg
cmp
fnstcw
mov
xlat
aad
insl
lret
adc
push
in
outsb
dec
call
jnp
pop
sub
push
int3
mov
loop
add
pusha
or
divl
jo
in
shlb
xlat
outsl
out
pop
pop
jb
dec
or
dec
xor
rcrl
jmp
les
fwait
loop
push
xchg
gs
pop
sub
cmpsl
add
out
mov
scas
mov
and
xor
loop
fldcw
sbb
loop
mov
pop
out
cmp
mov
mov
ror
push
ss
cmp
xchg
arpl
cli
cld
pop
pop
or
dec
out
enter
aas
pop
stos
out
mov
push
inc
xchg
mov
push
xchg
pop
lret
sub
fstps
lret
test
fisubl
jno
cmp
test
jecxz
sbb
pop
push
jns
inc
jo
faddl
adc
mov
and
ja
inc
inc
divb
scas
cmp
test
aas
daa
mov
inc
mov
inc
dec
clc
xor
call
ret
rolb
call
cmc
mov
inc
int3
sub
jg
stos
pop
inc
clc
xchg
sub
sbbl
lea
sub
clc
push
xchg
in
stos
push
adc
xchg
ret
mov
mov
mov
data16
call
out
xlat
push
inc
mov
xchg
dec
jo
xor
ja
xor
mov
adc
sahf
push
nop
enter
add
mov
movsl
jbe
dec
icebp
sbb
mov
jge
pop
cmpsb
ss
xchg
das
pop
out
call
and
int
aad
daa
jo
stos
in
shlb
in
sbb
and
fnsave
pop
or
stos
or
jno
rcr
dec
out
iret
mov
mov
sub
lea
subb
mov
aaa
int3
mov
dec
jo
jns
call
ljmp
mov
mov
xlat
sbb
inc
into
inc
jae
insl
add
roll
mov
in
inc
mov
lret
adc
pop
and
les
nop
outsl
jbe
jno
repnz
je
stos
shrb
imul
jne
mov
flds
iret
out
mov
and
clc
push
cli
cwtl
push
xchg
test
jle
and
data16
cmp
sti
and
lea
cmpl
mov
popa
pop
push
aam
pop
mov
push
iret
add
xorb
mov
jbe
mov
shr
pop
out
rolb
xor
xor
sub
xchg
push
aad
scas
mov
pop
jne
or
sbb
adc
in
push
dec
push
pop
stc
lock
inc
in
sbb
lea
mov
sub
and
fidivs
inc
push
cmpsl
repnz
lret
cmpsl
add
inc
out
sub
jns
sbb
mov
les
and
insb
add
xchg
or
call
cmp
inc
ret
cmp
and
push
test
inc
out
icebp
xchg
xchg
xchg
mov
iret
adc
cmp
mov
std
das
int3
or
mov
jge
arpl
cmpl
fmull
arpl
in
je
js
bound
jnp
addr16
bnd
mov
sbb
mov
or
mov
dec
sahf
scas
gs
add
xchg
mov
mov
pop
add
lret
cltd
pop
gs
outsl
add
push
xchg
or
hlt
jnp
insl
xchg
cmp
or
inc
fcmovu
rcr
xchg
leave
pop
pop
push
lahf
or
shrl
adc
jbe
pop
pop
lods
jns
out
jmp
mov
rorb
addr16
and
jmp
aam
or
jmp
pop
movsl
push
iret
shll
sub
cltd
sbb
xchg
and
cmp
pop
jbe
fsubr
pop
sbb
inc
ss
shll
bound
mov
push
subl
sti
jl
add
add
sub
jecxz
out
add
push
das
lock
adc
nop
fs
scas
pop
int3
dec
xchg
inc
filds
mov
xlat
mov
and
xchg
sbb
push
es
and
or
adc
mov
nop
jle
sub
dec
inc
pushf
lcall
adc
mov
pop
test
fwait
or
or
mov
shr
push
mov
push
pop
pop
add
pop
popf
cmp
adc
in
pop
and
insl
and
xchg
cld
cmp
jge
fiadds
pop
lcall
bound
imul
and
call
clc
jp
cmp
dec
pop
mov
lods
ret
dec
stos
add
mov
sarb
jmp
mov
in
fs
add
or
in
movsl
cmpsb
cmpsl
enter
sub
xchg
add
push
aam
or
cmp
inc
pop
int3
insb
mov
jns
adc
inc
ficomps
aas
or
rcll
push
xor
out
jl
fs
sahf
xchg
xchg
inc
gs
add
adc
aas
pusha
mov
xor
jg
addl
fistps
jbe
jo
add
test
outsb
fs
push
xor
mov
das
pushf
repnz
mov
jecxz
ss
mov
stos
inc
mov
xchg
mov
pop
sbbb
mov
dec
lods
test
imul
mov
fcoms
sbb
icebp
imul
dec
leave
pop
xor
orl
cs
push
les
pop
loope
addr16
dec
movsb
xor
int
sbb
lret
push
xor
jns
hlt
out
daa
dec
mov
inc
into
imul
xor
dec
fiadds
imul
mov
test
mov
sarb
and
or
mov
xor
fmul
or
scas
shll
test
push
xchg
andb
pop
sub
mov
leave
and
pop
cmpsl
push
addr16
imul
aaa
aam
xchg
lahf
das
pop
fstl
jge
xchg
inc
adc
into
insl
loope
out
dec
cltd
repnz
lods
mov
sbb
xor
insl
add
movsb
or
test
cmp
imul
push
inc
mov
loopne
mov
xor
cmp
int3
testl
lods
add
dec
jno
adc
dec
outsb
cld
mov
add
xor
sub
pop
inc
add
movsb
jnp
ljmp
push
push
test
test
es
shll
push
incl
and
fs
inc
mov
mov
cld
test
push
das
jne
test
fs
aam
cltd
cmp
cmp
push
scas
mov
push
dec
jo
or
jg
addr16
movsb
mov
xchg
scas
push
in
test
inc
ljmp
jne
icebp
cli
dec
pop
pop
jne
rorb
push
out
xor
lea
lret
jmp
ret
mov
dec
pop
loope
mov
fildll
ret
icebp
mov
pop
pop
push
stos
shll
hlt
pop
xchg
inc
into
gs
pop
sbb
jg
push
mov
insb
inc
xrelease
jl
fmuls
es
and
pop
and
xchg
mov
jo
out
lods
fisubrl
test
xor
mov
das
les
sub
into
hlt
push
sbb
jne
xchg
push
cmp
out
sub
sarl
xchg
lahf
out
loopne
mov
test
repz
outsb
movsb
inc
sub
add
loop
xchg
adc
rcrb
xor
fimull
aam
mov
add
sbb
adc
rcl
stos
mov
and
or
jbe
xlat
mov
or
popa
pusha
fcomps
cmp
rolb
jnp
sbbb
lock
lods
sub
or
dec
or
mov
xchg
scas
lods
mov
imul
imul
orb
enter
and
fnstcw
mov
jb
shll
nop
jecxz
xchg
pop
test
cli
in
repnz
shll
fsubl
or
pop
cld
push
mov
movsb
mov
rcll
lock
popa
push
data16
fstpl
sbb
xchg
adc
ds
xor
int3
xor
out
fisubrl
adc
add
je
and
shll
ret
pop
adc
pop
xchg
pushf
push
leave
mov
sbb
cld
jae
push
movsb
in
xchg
xor
inc
and
shlb
xchg
jmp
cli
fcomps
lret
lcall
inc
xor
adc
and
sub
pop
or
push
gs
ljmp
or
dec
sub
pusha
or
and
pop
jl
dec
xchg
movsb
mov
sbb
into
pusha
xor
or
xchg
pop
int3
nop
xor
xor
lahf
aas
call
and
lcall
pop
or
mov
jge
out
jp
mov
add
xor
repnz
pop
rorl
mov
add
daa
in
lret
jmp
ret
in
repz
fnstcw
mov
ret
cmp
sub
jecxz
pop
ljmp
or
mov
inc
mov
cmp
test
jle
outsb
jne
movsl
push
add
cmp
jae
jbe
dec
add
ss
push
pop
or
mov
push
out
das
xlat
movsl
adc
jge
sub
bound
pop
cmp
mov
out
sahf
mov
daa
imul
repz
push
aad
cmpsb
cld
pusha
mov
mov
dec
fisubrs
jl
pushf
in
sub
jg
and
icebp
loop
cmp
xchg
mov
leave
cmpsl
add
fcomps
idivl
out
sub
push
dec
cmp
pop
jne
mov
mov
loope
dec
js
adc
cwtl
movsb
fldcw
pop
jle
hlt
cld
cmp
sbb
mov
ljmp
int3
mov
xchg
add
mov
in
fmull
xor
xor
mov
mov
push
sub
mov
pop
lahf
and
cwtl
xchg
ja
in
jno
or
mov
add
jmp
jecxz
adcl
sti
jecxz
dec
int
stc
mov
adc
or
and
cmpsb
stc
ret
inc
nop
test
and
sbb
jae
dec
cmp
dec
js
jae
outsb
and
fcomps
ret
cmp
imul
mov
inc
loop
adc
lret
push
mov
pop
cmc
arpl
cmp
roll
sbbl
mov
es
push
jns
cmpsb
pop
cmp
iret
mov
push
and
inc
xchg
mov
adc
and
repnz
enter
sbb
pushf
lods
std
stos
shll
mov
push
lods
pop
push
arpl
mov
cmc
or
mov
fstps
adc
dec
mov
test
imul
jbe
inc
daa
mov
insb
lcall
mov
jne
test
push
enter
and
lret
sbb
lds
dec
push
lods
xchg
out
mov
sbb
push
push
clc
mov
jecxz
inc
mov
xor
outsl
lock
bound
sub
inc
jp
and
out
inc
jno
sub
mov
mov
inc
out
ror
imul
dec
popa
subl
test
sete
sub
daa
push
stos
mov
mov
arpl
lock
fwait
imul
dec
add
outsb
inc
test
pop
adc
les
push
sub
hlt
inc
sub
add
lcall
jne
lahf
adc
pop
cmp
pop
jecxz
shlb
iret
mov
stos
and
aam
clc
jmp
mov
lock
popa
int
stos
push
xlat
push
xchg
loop
push
adc
shl
repz
cld
ret
pushf
adc
popa
shlb
arpl
shr
mov
adc
mov
subl
adc
shrb
test
jge
xor
in
pop
int
dec
ret
mov
pop
inc
and
inc
lahf
or
xor
add
inc
pop
xor
sbb
les
mov
cmp
in
add
sub
idiv
or
xor
leave
mov
sbb
xlat
dec
js
sbb
push
and
in
cli
popf
aad
leave
cmp
insl
aam
mov
icebp
out
std
mov
movb
mov
bound
gs
pop
xchg
adc
mov
ds
iret
pop
out
clc
mov
pop
sbb
clc
loop,pt
mov
fadd
call
xor
xchg
outsb
iret
push
add
aad
mov
jno
push
cmp
imul
cmp
lea
inc
mov
rorl
sub
mov
ficoml
push
sub
lock
push
stos
rol
inc
mov
mov
adc
cld
lahf
ds
cmp
sub
sbbl
or
insl
fdivrl
addb
cltd
or
mov
repz
icebp
jl
fildl
add
orb
mov
or
push
data16
push
pop
ss
jae
clc
jae
ficoml
pop
pop
xchg
movsb
push
movsb
dec
xchg
bound
test
addr16
cmp
pop
testl
add
mov
xchg
mov
fwait
xor
pop
or
fisubs
push
inc
lahf
nop
pusha
cmp
adcl
pop
push
add
push
jns
inc
punpcklbw
fxch
jge
pop
adc
mov
adc
cmp
aad
imul
pop
mov
add
or
mov
mov
dec
cmp
popa
inc
adc
addb
ljmp
ret
mov
inc
lret
cltd
ficoms
pop
repnz
inc
cmpsl
ss
xchg
cmp
pushf
andb
cmc
jbe
xchg
push
nop
sbb
sbb
call
xchg
mov
or
imull
sub
pop
rcrl
push
adc
ja
cld
arpl
dec
jo
dec
xlat
das
shll
fsubr
cmp
sbb
aas
hlt
mov
jnp
lock
popl
repnz
loop
fldt
aas
dec
insl
daa
ja
pop
xor
pop
ds
cmpl
sbb
add
roll
out
mov
popa
in
and
inc
mov
adc
insl
cld
push
leave
add
in
push
pop
clc
cmc
imul
inc
rcrb
dec
int3
xchg
xor
movsl
enter
dec
mov
in
sub
cld
in
addr16
pop
in
scas
mov
psraw
pop
and
mov
outsb
dec
lret
sahf
mov
mov
xchg
ret
adc
mov
aas
jbe
dec
pop
sahf
mov
sub
out
jmp
scas
pushf
pop
adc
mov
add
cmp
xchg
cmpsb
mov
cld
addb
popa
ja
in
imul
push
mov
sahf
enter
inc
nop
stc
xor
or
loopne
and
cmp
dec
pop
cmp
das
js
sbb
mov
leave
mov
jge
pop
fists
int3
sarl
lds
adc
mov
or
sbb
cmp
or
inc
push
add
aas
jo
xchg
mov
sbb
movsl
pop
lock
cltd
imul
push
xchg
cmp
or
ja
loopne
sbb
xchg
sub
addr16
xchg
push
fmuls
cmc
jns
imul
mov
cltd
dec
fs
lcall
aad
pusha
pop
inc
cli
sub
and
jmp
and
std
insb
rolb
adc
cmp
dec
loop
inc
push
mov
adc
rcrb
mov
add
push
inc
out
dec
sub
ljmp
lret
aad
mov
fadds
or
push
and
cltd
mov
fdivrs
sbb
fdivrl
inc
push
mov
xchg
sub
stos
shr
sbb
fwait
je
mov
sbb
repnz
rcrl
xor
cmp
dec
arpl
loopne
call
lcall
pop
in
cli
ja
addr16
mov
jg
pop
aaa
repz
adc
mov
mov
shrb
adc
xor
jne
in
ret
lock
lds
add
adc
stos
das
jecxz
aas
sbb
and
push
mov
rorb
nop
wrmsr
inc
or
ss
and
fcompl
xchg
or
mov
scas
xor
and
mov
int3
shr
je
sahf
inc
rol
sub
dec
jne
in
inc
mov
stc
pop
fisubl
xor
mov
mov
mov
loopne
icebp
out
dec
jecxz
inc
fisubl
xchg
je
mov
movsl
and
das
fsubrl
movsl
xchg
pop
data16
scas
repz
xchg
sbb
int3
xchg
ljmp
testb
mov
cmp
cs
fs
cli
sti
stos
or
divb
add
jmp
popf
cmpsl
push
int
bound
pop
xchg
dec
scas
jae
jecxz
into
icebp
hlt
sti
sub
cs
push
inc
push
sbb
jecxz
mov
iret
iret
sti
push
inc
cmp
inc
xchg
ss
sub
shlb
shll
dec
push
popf
or
jecxz
mov
pusha
clc
and
pop
orb
test
or
jo
xor
xchg
out
iret
int
adc
lods
ss
ds
xchg
lds
push
xor
hlt
das
call
pushf
mov
inc
push
ljmp
mov
mov
mov
add
xchg
mov
repz
push
mov
fsts
out
in
bnd
xchg
xor
movsb
cmp
inc
xchg
shll
lods
imul
insl
pop
or
jmp
popa
push
or
inc
jno
xlat
jge
jp
repz
cmp
or
sub
mov
xlat
ret
das
fidivrl
dec
cmpsb
xor
aaa
hlt
out
xorl
mov
mov
lret
dec
repnz
add
push
aad
pop
into
int3
movsb
mov
dec
cmp
jne
decb
mov
dec
popf
je
mov
mov
push
sub
jmp
adc
and
push
adcb
imul
mov
mov
sub
insl
popa
xor
xlat
jp
jp
mov
sarl
sub
mov
add
out
clc
popf
rcr
mov
ljmp
pusha
dec
and
jnp
push
in
pusha
sub
pop
add
ja
xchg
stos
inc
mov
push
dec
inc
xor
sbb
out
stos
pop
mov
test
pop
inc
aas
jle
pop
push
jb
es
push
xor
mov
inc
into
sub
mov
aad
js
add
or
jl
cli
dec
xor
add
pop
dec
dec
sbb
das
in
add
mov
adc
ja
loopne
cmp
adc
add
jns
inc
cs
xlat
xchg
aad
sbb
jbe
lods
sub
repnz
ja
adc
test
push
mov
lcall
ja
test
test
xor
sub
push
sub
fistpll
xor
scas
pusha
push
cmc
pop
rcr
call
in
mov
lcall
ja
xchg
sbb
sbb
test
in
xor
mov
push
mov
xchg
add
pop
jnp
pop
insl
xor
jne
imul
mov
cli
lds
sub
adc
in
loope
pop
and
mov
push
adc
sti
out
pushf
lea
push
loope
pop
imul
hlt
adc
repnz
xor
scas
adc
dec
call
out
daa
inc
stos
xchg
jae
and
les
pusha
mov
adc
sub
outsl
shlb
and
jae
popa
out
xchg
mov
hlt
cs
jae
enter
rolb
inc
sbb
dec
inc
int3
add
ret
iret
and
mov
push
fs
adc
cmpsl
mov
cmp
and
adc
dec
paddusb
cmp
mov
mov
cmp
jecxz
inc
movsb
hlt
popl
pop
call
out
fwait
sub
aam
cli
push
mov
out
stos
xchg
push
xchg
sbb
jg
push
ja
push
pushf
imul
stos
shlb
or
add
out
push
roll
insb
flds
outsb
popf
ss
aaa
cmpsb
aad
mov
mov
cmp
cmp
js
xchg
mov
ljmp
mov
and
mov
mov
daa
pushf
ljmp
jbe
and
outsl
push
lds
lcall
mov
mov
andb
add
jb
jb
ljmp
mov
and
push
repnz
lods
fisubrl
sahf
inc
pop
int
jp
jne
aad
push
jae
xor
xor
loop
mull
mov
jnp
lret
iret
imul
js
rorb
mov
push
shlb
fcoms
movsb
loopne
sbb
cmpsl
gs
cmc
inc
push
scas
cmp
xor
outsb
dec
inc
pop
fstpl
pop
mov
push
rclb
aas
push
and
xchg
aaa
test
sbb
shlb
pop
dec
cld
or
mov
aaa
sahf
gs
adc
pop
sub
adc
popa
dec
mov
or
incl
and
imul
jge
enter
movsl
pop
xor
dec
push
add
in
xchg
loope
nop
cmpsb
das
or
adc
xchg
andb
cs
out
push
inc
lret
inc
sub
fucomi
loop
cmc
push
mov
addl
mov
sahf
js
data16
or
dec
lahf
out
negb
out
test
jno
xchg
adc
mov
negb
xor
dec
jl
aad
js
mov
inc
lret
sub
aas
push
inc
lock
fidivrl
stos
cs
daa
sbb
ret
pop
outsb
sbbl
lret
adc
fbld
push
pop
lea
pop
mov
cmpsl
gs
fadds
jne
push
xor
jb
dec
push
adc
jecxz
adc
fmul
fcmovu
nop
xor
cmc
addr16
ret
xchg
scas
roll
rcr
adc
xor
and
push
sbb
leave
jmp
or
call
dec
mov
pushf
repz
cmpsb
xor
add
mov
loope
repz
adc
add
mov
jns
aaa
pop
xchg
iret
inc
andl
stos
cs
adc
push
xchg
fsubrs
push
stos
xor
shll
pop
fnstcw
sbb
pop
jo
insb
int3
add
xchg
test
mov
out
sbb
or
clc
fs
mov
cmp
jns
push
icebp
add
mov
out
fistl
bound
and
sbb
call
or
bound
mov
cmc
lahf
and
jae
push
call
pop
add
in
stos
movl
mov
mov
inc
jge
dec
xchg
jg
imul
mov
stos
mov
stos
sub
inc
lods
jg
cmpsb
stos
push
fistpl
xchg
fcoms
into
out
fs
mov
dec
or
in
inc
or
aas
cmp
test
enter
adc
and
jae
jns
lret
repnz
loop
outsl
add
cmp
add
adc
dec
or
and
scas
mov
stos
cmpsl
ret
enter
int3
addr16
pusha
insl
xor
jno
xor
ds
add
cmp
xchg
das
loopne
sub
popa
jae
dec
fdivrl
or
mov
fiadds
add
icebp
fildl
mov
jge
xor
test
or
lea
mov
push
push
aas
in
sbb
push
call
divl
loopne
daa
lock
mov
jecxz
push
addb
lock
jns
in
fcomip
xlat
xchg
mov
rolb
add
outsl
cld
mov
sub
pushf
sub
int
incl
mov
repz
jne
shll
cmp
xchg
movsb
add
pop
outsb
inc
dec
nop
sarl
mov
and
and
push
dec
andl
mov
adc
cmpsl
push
push
shr
xchg
mov
icebp
das
popa
mov
mov
rcl
mov
and
rcr
sbb
repz
adc
pop
xchg
mov
xor
cmp
enter
push
repnz
jb
push
js
and
mov
ffreep
xchg
adc
out
dec
push
jo
movsb
lcall
inc
aam
sub
faddl
adc
xor
cmp
dec
fs
aad
aas
jb
cmp
addr16
inc
mov
dec
push
cld
adc
insb
mov
clc
mov
jae
inc
push
shr
adc
mov
in
xchg
adc
inc
dec
inc
sti
mov
mov
mov
loopne
xchg
testl
adc
adc
aam
into
mov
mov
les
push
in
xchg
pop
movsb
jp
xor
cmc
or
test
push
loop
adc
xchg
dec
pop
jo
imul
arpl
das
stos
or
cltd
rcl
into
cmp
fsubrs
push
cs
and
pop
push
push
jle
cmp
sbb
das
clc
inc
mov
movsl
xchg
repnz
imul
or
push
lret
outsl
mov
addr16
and
jmp
mov
adc
adc
fstps
call
xchg
bound
push
pop
insb
xor
cmp
sub
stc
inc
and
sbb
sar
pop
pop
push
or
imul
fcom
ficoml
or
sub
cmp
shll
add
pop
mov
test
je
outsl
test
push
fmulp
sbb
sub
pop
jl
mov
jae
aas
add
or
or
dec
xchg
lret
or
sti
clc
lods
push
int
cltd
aaa
rorb
out
sub
jne
dec
lret
or
std
lret
shl
sahf
push
add
insb
dec
sbb
int
jl
loop
repnz
in
sbb
mov
clc
mov
mov
lods
inc
sti
rolb
adc
test
into
int
xchg
xchg
xor
xchg
push
les
xor
test
stos
dec
popa
fldcw
lahf
mov
pusha
fdivl
push
es
mov
and
cmpsb
mov
jmp
xchg
or
sbb
lock
push
push
adc
xlat
jae
je
mov
adc
jne
sbb
cmpsb
fwait
popf
es
or
jp
adc
jb
mov
mov
jecxz
and
fsubrl
adcb
mov
add
cmpsl
pop
push
xlat
je
ud1
cltd
arpl
sub
rol
shlb
jl
in
push
xchg
xchg
inc
lret
xor
push
fcmovne
jns
aad
pop
push
cmc
jno
out
inc
jecxz
jge
inc
xchg
add
rdtsc
xchg
aad
inc
lsl
jmp
and
mov
sahf
xor
scas
dec
jne
cld
mov
push
sbb
fldenv
push
ja
aad
jg
lods
loope
fidivs
daa
lcall
jecxz
sbb
xor
and
lcall
movsl
push
scas
call
dec
lock
cli
adc
inc
pop
mov
stc
icebp
add
ret
sub
jbe
ss
push
or
in
fcmovnb
outsl
out
dec
cli
sub
hlt
std
popf
inc
lcall
adc
xor
or
pop
mov
jo
scas
es
mov
sub
in
cmp
dec
mov
dec
stos
jmp
mov
xchg
push
xchg
xchg
mov
pushl
stc
adc
adc
pop
pop
mov
jmp
mov
mov
ljmp
mov
or
aas
mov
add
daa
adc
pop
xor
aam
fnstenv
stc
aaa
dec
push
pop
cmp
mov
pop
mov
push
sbb
jns
outsb
test
fcmovne
xchg
xlat
int3
sti
aaa
out
arpl
and
jbe
sub
out
xor
push
ljmp
push
icebp
and
int3
mov
testb
dec
push
xor
movsb
ret
ret
push
push
addb
fwait
cwtl
adc
push
add
aas
pop
sbb
test
jecxz
mov
xchg
movsb
gs
ret
roll
int3
fists
das
dec
push
pop
and
pop
mov
inc
add
inc
subb
arpl
lahf
imull
jae
in
repnz
xor
sbb
shll
decb
xchg
mov
nop
int
addl
mov
test
sbb
aas
inc
dec
shlb
insl
ficompl
call
cmp
jp
out
xchg
shl
push
into
pop
ss
fstpt
fnsave
lds
gs
sub
add
sbb
mov
daa
std
mov
adcl
ja
dec
repz
sti
adc
pop
aaa
or
lahf
dec
mov
xchg
insb
loope
loopne
push
and
push
dec
lods
mov
aaa
shll
inc
out
xchg
shlb
shr
adc
push
cmpsb
shrb
jne
dec
xchg
ss
jecxz
mov
add
mov
mov
movsb
fistpll
jne
mov
hlt
pop
pusha
fnclex
cmova
es
xor
inc
push
ret
xlat
push
pop
push
jle
sahf
xchg
in
lcall
push
mov
aad
push
xchg
pop
clc
jno
bound
jnp
and
inc
rcrl
incb
and
or
add
push
xor
sbb
fdivrs
pop
push
pop
and
ret
sbb
sub
inc
adc
sti
inc
or
mov
push
in
jmp
push
repz
cmpsb
fldenv
gs
int
ret
dec
roll
and
icebp
inc
daa
cmpsl
push
fwait
loopne
add
test
push
push
push
sbb
lods
dec
sbb
cmp
lret
loop
test
rcll
movsb
movsl
sbb
add
push
imul
xorl
cmp
jb
push
je
xor
repz
xchg
stos
daa
add
xchg
or
into
lcall
test
hlt
sbb
xor
push
insb
or
js
cli
insl
shlb
xchg
shlb
loope
cltd
sub
lcall
int
xchg
jo
les
mov
clc
or
lret
push
lods
jbe
lcall
cmp
pop
adc
in
subb
inc
adc
xchg
adc
lea
xchg
jne
xlat
repz
lods
arpl
pop
cmpsb
adc
shrl
sbb
jle
into
xchg
inc
xchg
dec
daa
xor
and
jbe
adc
sub
pushf
sub
insb
rorl
jb
xor
and
call
jp
lret
jp
mov
cwtl
and
xchg
rclb
pop
or
pop
adc
add
bound
inc
cmpsl
mov
aad
push
lcall
aam
mov
pop
jge
dec
add
mov
int3
je
es
es
lret
hlt
or
mov
jb
push
xchg
lret
push
sub
lret
adc
dec
sbb
orl
xchg
ffreep
pop
fucom
and
loope
mov
outsb
iret
imul
lds
psrld
fcompl
pop
push
imul
jg
inc
leave
add
mov
filds
repz
es
stos
scas
dec
xchg
sub
daa
xchg
dec
notl
jno
xor
shrb
and
into
imul
inc
lds
xchg
push
mov
pop
dec
stc
out
sbb
xor
ret
cmpsb
ja
pop
and
aam
sub
pop
pop
int3
mov
push
scas
out
lea
or
adcb
xchg
leave
sarl
push
les
rcl
and
mov
loope
xor
out
pushf
adc
pop
out
shl
ret
push
xor
std
icebp
jl
mov
xor
andl
dec
mov
aad
clc
insb
push
iret
mov
sbb
ds
call
add
jle
xchg
daa
add
mov
lock
push
xchg
add
or
and
xchg
pop
aam
jg
jmp
outsb
pop
out
fwait
scas
xchg
sahf
adc
xlat
dec
mov
pop
mov
dec
dec
jne
xchg
sub
mov
cmc
sub
shll
inc
pop
ss
mul
sbbb
sbb
js
aam
or
pusha
mov
push
jb
loopne
ja
jmp
scas
js
loopne
iret
or
subl
add
pusha
pop
hlt
mov
add
jne
lahf
adc
dec
xor
hlt
cmc
pop
cmp
int3
mov
inc
fcmovb
clc
cli
inc
push
pop
fldt
mov
mov
add
notl
pop
ljmp
rorb
aad
inc
andb
jg
ja
xchg
stos
add
arpl
test
stos
dec
jp
nop
out
ss
rclb
and
jbe
push
xor
fstpt
xor
inc
add
xor
dec
adc
cmp
cmp
xor
fcmovne
sbb
mov
push
jg
dec
push
push
dec
adc
femms
rcll
add
incb
ja
mov
or
out
js
add
adc
sbb
xchg
add
aam
add
scas
jb
pushf
or
sub
sub
dec
outsl
add
test
sub
sub
shrl
stos
ret
mov
roll
mov
les
push
enter
int
outsl
loop
adc
add
icebp
in
rol
inc
dec
pop
mov
out
or
dec
stos
mov
lahf
push
popf
and
cmp
std
movsl
dec
xor
pop
js
mov
icebp
lea
ja
push
test
xchg
mov
lret
mov
outsb
mov
sbb
js
out
popf
xchg
pop
cmpsb
mov
sbb
scas
stc
pop
int
ret
inc
shrl
xchg
movsl
sar
mov
addb
push
cmc
lock
test
inc
lcall
mov
dec
jmp
inc
xor
inc
mov
imul
mov
dec
or
mov
enter
mov
dec
pop
imul
sbb
inc
cmpsl
mov
lahf
xor
mov
repz
mov
ljmp
xor
lea
push
and
cli
inc
cmpsl
cwtl
cmp
mov
lret
push
xchg
popa
enter
xchg
repnz
test
insl
push
test
roll
mov
cmp
mov
in
jns
xchg
sbb
push
jns
mov
add
jno
jp
cmp
jge
mov
lea
das
mov
pop
in
stos
pop
cmpsb
sahf
ret
icebp
arpl
cmpsb
das
pop
jbe
rcr
push
test
xlat
clc
xchg
cltd
add
mov
fsubrl
xlat
loopne
jmp
jle
ljmp
jmp
lret
adc
mov
leave
sbb
movups
call
inc
fistpl
outsl
and
dec
lods
enter
ja
nop
sub
into
mov
sub
ret
and
sub
push
add
cmp
add
inc
sub
add
push
cltd
inc
sub
xchg
hlt
dec
xor
test
push
lahf
cmp
adcb
mov
roll
aaa
hlt
pop
dec
push
push
jg
js
sbb
mov
add
movsl
mov
cmc
jb
das
stos
push
mov
xor
in
int3
xrelease
dec
push
jno
mov
mov
mov
test
int
gs
jmp
or
pop
inc
stc
cmp
ja
push
push
and
fldt
pop
sbb
dec
inc
push
std
outsl
out
mov
cmpl
addr16
sbb
inc
fs
idivb
fiadds
stos
in
mov
push
inc
add
outsb
sbbb
shr
lds
push
xlat
mov
test
rcrb
mov
jmp
push
sub
scas
iret
jge
or
mov
or
mov
sbb
or
mov
mov
enter
ljmp
push
popa
inc
aas
pushf
adc
add
das
in
jp
push
clc
and
popa
jo
xlat
iret
fmul
xchg
mov
jbe
gs
mov
jecxz
aad
jnp
lods
scas
or
and
push
decl
fdivrl
xor
out
out
aad
inc
outsl
les
lret
xlat
pop
mov
mov
adc
fsubs
xchg
cmpsl
adc
and
pop
xchg
mov
adc
mov
test
xor
or
lds
dec
mov
andb
scas
jno
clc
push
mov
fildll
stos
out
sti
notl
in
ljmp
adc
jecxz
das
cmp
nop
pop
or
jl
arpl
das
jb
lret
adc
fists
pop
stos
sub
nop
bound
fidivs
cs
mov
cli
pop
pop
movsb
insl
sub
and
cmp
inc
mov
imul
ljmp
dec
push
xor
push
pop
sub
mov
push
pusha
mov
stos
mov
sbb
jmp
mov
xchg
ja
mov
mov
into
mov
stc
out
mov
cmc
fists
sbb
aaa
add
xor
or
cmp
cmpl
or
sti
fs
js
mov
push
or
dec
push
push
bound
adc
js
out
push
mov
cmp
push
outsl
lcallw
mov
xor
cwtl
je
pop
inc
adc
add
out
cmc
gs
mov
jae
js
jbe
sub
adc
in
imul
lcall
adc
scas
adc
push
mov
sti
add
jo
lahf
and
push
mov
test
lds
cmp
in
leave
stos
and
test
or
icebp
inc
outsl
mov
sub
mov
and
rolb
push
xlat
dec
jl
cmc
jb
stc
popf
jmp
push
push
sbb
or
fdiv
inc
sub
mov
mov
push
mov
stos
mov
jb
dec
xor
or
lea
shll
jae
jne
subl
insl
mov
lock
repnz
mov
test
cs
xchg
adc
pop
lds
lret
jbe
test
or
sub
xor
xchg
push
fldl
adc
mov
das
lret
pop
push
fsubrs
ss
aas
xchg
iret
push
add
arpl
xchg
add
test
dec
xor
inc
dec
je
pop
dec
stc
rcrb
mov
push
jle
dec
mov
das
daa
pop
out
push
stc
sub
sub
adc
test
pop
fsubs
push
loopne
je
lock
dec
bound
jb
hlt
je
jecxz
bound
jae
push
add
push
ja
xor
jb
fbstp
xchg
pop
ret
pushf
and
xor
push
mov
sti
inc
dec
sbb
cltd
xchg
mov
push
and
aam
mov
mov
jb
adc
push
and
dec
repnz
stos
mov
cmp
jge
fs
sub
in
mov
in
movsl
cmpsl
sbb
sbb
jmp
and
jl
cmpsb
gs
sub
jbe
xchg
mov
es
loopne
paddsw
loop
fstpl
sbb
rcrb
and
mov
xor
adc
push
jle
rorb
addl
int
xchg
pop
fldl
jmp
add
or
loop
pushf
fistpl
notl
push
push
push
pushl
push
jge
or
mov
sbb
or
cli
cmpsl
dec
aam
lret
push
jns
insl
sub
xchg
mov
lea
sbb
push
es
imul
or
and
cmp
push
cli
insl
inc
pop
shl
imul
mov
insl
cmpsb
xchg
sbb
or
in
fisubl
dec
js
mov
pop
jb
cwtl
sub
inc
or
nop
pop
stos
xchg
push
push
xor
adc
pop
rcrb
mov
xor
pmulhuw
jge
xor
mov
push
adc
andb
push
mov
xchg
jbe
adc
out
mov
adc
mov
jb
je
mov
dec
jae
shl
int3
and
cwtl
adcl
nop
sub
jno
imul
xchg
cmp
jmp
in
sub
and
aaa
aam
xchg
movsb
cltd
push
out
ja
nop
scas
jae
sbb
lret
or
shll
cmpsl
dec
mov
stos
fcmovbe
mov
push
jle
mov
cmp
push
mov
not
cmp
shl
xchg
out
pop
and
dec
adc
mov
es
scas
rorl
js
mov
adc
add
ret
cs
lcall
jle
mov
sbb
jno
and
mov
add
inc
adc
outsl
jae
je
lahf
adc
loope
cmp
pushf
push
orb
fisubrl
repz
stos
lods
sbb
ret
cmc
pop
rol
xchg
mov
inc
aam
lret
pop
push
stos
pushf
gs
and
jo
push
mov
or
pop
jp
pop
mov
aaa
fisubs
mov
das
test
in
addr16
adcb
into
ret
fstl
and
xor
push
lahf
test
mov
pop
cltd
jno
sarl
xor
cmp
das
mov
fistl
arpl
adc
jp
mov
arpl
pusha
dec
mov
call
add
push
imul
xor
inc
push
mov
jo
or
and
push
xchg
repnz
dec
xchg
sub
aaa
pop
push
and
push
and
js
imul
sbb
push
jno
movsb
and
sub
mov
pop
jmp
inc
les
xchg
ret
push
xor
out
fldl
sahf
jno
and
je
mov
mov
xchg
addr16
cmp
arpl
aad
out
jecxz
repnz
push
sti
pop
mov
repz
fs
enter
cmp
jecxz
popa
pushf
mov
dec
pop
insl
pop
fs
loop
ret
or
xchg
shrl
jb
pop
jb
sahf
aas
mov
les
inc
jge
adcb
js
mulb
lcall
push
mov
pop
dec
or
fidivrl
orb
mov
lods
and
pand
adc
dec
roll
mov
push
mov
adc
adc
xor
fldl
test
clc
jge
push
sub
pop
sti
mov
daa
insl
mov
cmp
fsts
push
mov
jge
lahf
cld
xorl
pop
scas
enter
rcrb
xor
xchg
cmpsl
out
jle
popl
mov
iret
test
jne
ljmp
arpl
ret
pop
push
fldt
pop
push
outsl
dec
jb
cld
and
lea
fadd
mov
fucomp
out
adc
outsl
outsl
xchg
and
sub
add
xor
mov
mov
jns
jge
xchg
inc
ljmp
mov
sub
or
xlat
jle
pop
scas
loop
push
js
mov
adc
push
mov
xchg
inc
dec
sarb
pop
imul
insb
mov
xor
add
dec
xchg
mov
adc
fstps
sbb
dec
or
test
jmp
leave
xchg
sub
out
rolb
mov
cmp
mov
jmp
mov
dec
dec
sbb
stos
xchg
jl
arpl
pop
sbbl
lock
mov
jnp
rcr
cmc
xor
mov
or
nop
out
mov
rol
in
xor
rolb
jmp
xchg
jno
in
xchg
loopne
mov
lahf
dec
sub
insb
arpl
insb
dec
call
imul
pushf
aas
aaa
outsb
cltd
std
aas
jl
and
inc
inc
enter
cmp
sub
cltd
lock
or
cmp
test
popf
push
add
cmp
jl
jmp
mov
jle
shl
out
cmp
test
dec
or
lcall
cwtl
imull
mov
jno
mulb
daa
mov
jmp
adc
push
in
outsl
add
das
int3
in
inc
cmp
sbb
enter
ficoml
mov
and
pop
inc
adc
mov
fwait
or
adc
push
push
inc
sahf
test
push
rorb
sub
jo
push
xorb
xor
and
cmp
push
cmc
pusha
lods
insb
sbb
outsb
cmpsl
and
sti
mov
mov
mov
add
pop
sbb
xor
pushf
ret
push
inc
outsb
daa
repnz
jo
push
outsl
or
mov
loope
cwtl
adc
xchg
ret
add
sbb
push
leave
les
xchg
aaa
js
fistpl
xchg
xor
test
mov
push
pop
outsl
sbb
scas
mov
pop
mov
pop
dec
sbb
dec
mov
xor
movl
lret
scas
inc
stos
dec
inc
sbb
out
stos
add
es
fucomip
negb
repz
stc
pop
cmpsl
stc
insl
cmp
sbb
adc
je
mov
sbb
inc
mov
ja
out
jae
dec
lahf
movsb
pop
mov
and
push
mov
cmpsb
lret
inc
lods
loopne
dec
pop
fnstcw
inc
test
xchg
aad
add
and
jno
add
push
pop
shrl
dec
inc
das
jbe
jecxz
lret
xorl
inc
movsl
xchg
pop
out
test
mov
pusha
lret
cmp
stos
sbb
lods
flds
popa
in
push
adc
push
out
cs
test
push
sbb
ficoms
adc
call
dec
push
in
push
lret
ret
mov
int
lea
dec
popa
mov
sahf
mov
cmp
scas
sbb
addr16
leave
fiaddl
mov
sub
mov
inc
inc
cmp
mov
lds
addl
xchg
leave
sbb
sub
loope
ljmp
adc
fistpl
push
mov
add
out
lret
mov
gs
pusha
cmpsl
sbb
pop
sbb
pop
in
mov
lcall
mov
xchg
icebp
sub
xor
mov
sbb
push
insb
int
jo
fndisi(8087
testb
sub
jge
sub
aaa
insl
cltd
sbb
add
or
repz
es
jle
adc
xor
pop
dec
ja
jno
jnp
push
dec
mov
dec
popa
jmp
adc
push
sete
imul
lock
adc
rorb
xchg
test
das
cld
xchg
mov
mov
arpl
ljmp
mov
pop
pushf
stos
mov
mov
je
cmp
jno
movsb
sbb
xchg
mov
fwait
mov
push
int3
orl
mov
cmc
jo
adc
lds
daa
pop
mov
sub
sub
in
xchg
shll
mov
popa
sub
movsl
call
leave
fiadds
pop
bound
pop
dec
push
and
xor
mov
mov
inc
push
inc
ret
fistpl
inc
mov
das
xchg
xor
mov
loop
leave
rolb
jae
rcll
outsl
gs
xor
xchg
mov
jg
femms
sub
stos
subb
sbb
inc
pusha
xchg
aam
out
mov
movsl
icebp
scas
xor
mov
lret
bound
or
push
fsts
pop
dec
mov
jmp
sbbl
inc
lahf
sub
add
xchg
mov
jle
in
add
jne
in
in
ret
cmpsb
or
test
sub
push
and
popl
int
xchg
fsubrs
pop
pop
cmp
mov
sub
scas
fwait
push
xor
sbb
dec
js
push
cmpsl
cmp
mov
or
jmp
jae
aad
sbbl
imul
int
push
inc
mov
aaa
xchg
pop
push
movsb
fldt
js
sarl
idivl
divl
dec
sbbl
incl
mov
pop
out
out
arpl
xorb
xchg
dec
add
out
mov
xchg
pop
xchg
cmp
lock
lret
rolb
mov
pop
call
insb
loop
std
mov
inc
push
pop
ret
mov
ficoms
pop
dec
mov
jle
mov
lret
sub
das
mov
pop
aaa
popa
test
leave
in
mov
imul
call
int
push
dec
pop
fidivrs
outsb
mov
aam
cmp
inc
mov
fldenv
lds
adc
jp
popf
mov
sarb
mov
clc
jecxz
fs
rcrl
mov
mov
sti
jbe
mov
mov
aaa
fcoms
repnz
xor
ss
jge
in
repnz
mov
int3
and
sub
pop
lods
inc
lods
sub
cmp
stos
cmp
cli
enter
jge
lock
stc
fstpl
mov
dec
stc
jp
mov
dec
std
sbb
mov
pop
je
pop
mov
mov
xchg
adc
xchg
and
mov
jecxz
stos
adc
stos
jne
arpl
inc
jae
adc
inc
movsl
es
push
aad
add
out
jmp
xchg
pop
mov
fistl
cmp
lret
test
mov
andl
xchg
add
pop
imul
les
jae
sti
dec
adc
mov
mov
jl
mov
xor
mov
movsl
cmp
test
jns
xchg
aad
lock
lock
xchg
jb
cmc
cmpb
mov
inc
lods
jns
push
lret
shrl
pop
mov
hlt
lahf
add
inc
cld
jo
adc
mov
movsl
cmp
cltd
incl
fdivr
mov
mov
mov
inc
xor
add
mov
nop
dec
jmp
insb
and
test
clc
leave
add
cld
insb
jmp
and
inc
outsb
test
in
dec
dec
enter
mov
mov
in
mov
mov
fiadds
mov
jae
mov
inc
adcl
popf
mov
aas
add
and
add
lret
ret
dec
cmc
popf
pop
sbb
xchg
es
mov
pop
leave
xchg
sub
pop
push
xchg
dec
das
cwtl
inc
jle
push
mov
xor
dec
sti
cmpsb
xor
xchg
jg
mov
adc
inc
rcrb
daa
cmp
sub
adc
inc
call
xor
push
nop
mov
add
mov
stc
and
loopne
cld
je
dec
in
mov
inc
pop
cmp
pop
sub
fisubrs
mov
mov
inc
jg
mov
mov
sbb
cs
ss
outsl
cmp
pop
lock
jecxz
adc
jne
fadds
push
gs
sbb
loopne
sbb
subl
into
repnz
out
push
test
xor
test
mov
or
jnp
lret
in
shrl
and
xchg
xchg
or
push
dec
and
test
mov
mulb
data16
testb
sbbl
insb
inc
ret
push
add
les
outsl
xchg
sarb
icebp
das
int
mov
jae
outsb
outsb
test
iret
jbe
repnz
lea
dec
push
xchg
push
pop
in
stos
lcall
sub
push
je
shlb
addr16
mov
pop
shlb
mov
xor
adc
inc
add
jge
aad
push
inc
cmpl
xchg
xlat
adc
adc
orl
jg
call
test
jl
jle
pop
jbe
in
addl
inc
pop
out
sub
inc
ja
pop
mov
mov
mov
ss
dec
arpl
movsb
xchg
pop
pop
out
jge
jl
dec
add
pop
fadd
jns
add
in
lods
dec
xchg
xor
adc
out
or
repz
inc
push
sub
inc
fsubrl
push
iret
ljmp
jne
xchg
in
je
add
jns
movsb
out
inc
add
mov
mov
sahf
cmp
mov
hlt
scas
cmp
mov
sahf
xlat
xor
or
mov
or
jl
pop
cmp
movsb
adc
loope
movl
loop
and
je
popw
insb
lahf
mov
in
mov
add
add
or
movsb
iret
adc
xor
out
rcl
adc
mov
cmp
jnp
shll
bound
inc
and
jnp
and
pop
movsb
dec
out
or
mov
jg
push
push
mov
cmp
sbb
push
scas
test
cmp
loopne
ret
test
add
cmc
sub
addr16
icebp
popa
adc
and
fwait
mov
cli
jp
fistpl
test
rcrl
lcall
push
jl
mov
jae
stos
inc
mov
ss
adc
and
push
inc
mov
lods
push
hlt
or
adc
insl
ljmp
mov
je
ljmp
popa
scas
xor
aad
adc
dec
mov
pushf
and
jbe
xchg
idiv
jl
mov
scas
inc
inc
xor
dec
lock
xchg
or
inc
cmc
clc
mov
cmp
test
pop
sub
mov
sahf
frstor
cltd
lret
test
arpl
leave
outsb
dec
repz
push
cmp
jge
popa
jl
aaa
aaa
cltd
imul
loop
inc
inc
mov
sar
mov
and
cld
loop
inc
sub
mov
mov
push
loopne
xor
push
inc
jnp
fcomps
ss
lret
sub
cmc
pop
stos
leave
xlat
sub
mov
lret
jecxz
inc
adc
clc
scas
inc
test
mov
cs
cmpsl
stos
push
xor
test
jno
sub
mov
mov
call
mov
pop
mov
lds
mov
subl
sub
cmp
jns
popa
clc
mov
and
lods
hlt
fidivs
ret
repz
mov
adc
test
repnz
cmp
and
cmpsl
fiaddl
cmpsb
cld
jne
inc
or
mov
icebp
push
xor
gs
jge
adc
or
loop
rcr
xchg
out
ss
in
shrl
jl
and
add
adc
popa
xchg
stos
mov
outsl
pop
xchg
fwait
aas
inc
stos
or
ljmp
repnz
dec
push
loop
push
mov
jns
or
dec
mov
xchg
and
clc
jg
cmpb
mov
sub
push
push
mov
sbb
sbb
aad
adc
mov
aad
dec
out
jbe
cld
mov
cmpsl
aaa
cwtl
incb
movsl
call
pushf
adc
das
leave
mov
jns
xchg
mov
ret
into
shrl
inc
fisttps
lock
push
fld
xchg
dec
std
cmc
sbb
sub
dec
outsb
data16
adc
fstpt
ss
mov
lcall
mov
pop
sti
addr16
in
orl
scas
fdivrs
stos
movsb
aam
pop
je
push
mov
mov
adc
popa
add
in
inc
mov
inc
repnz
mov
sbb
sarl
hlt
xor
cld
into
mov
out
push
sub
adc
mov
push
fs
xor
in
push
xor
push
out
push
inc
imul
xor
or
and
idivl
in
adc
sub
xor
sbb
jbe
int
fwait
into
push
in
xor
jne
and
int3
mov
ud2
aam
cmpsb
or
push
and
xor
dec
push
lods
pusha
arpl
push
jg
in
jno
fstpl
adc
es
lret
xor
mov
ror
inc
sahf
dec
adc
add
lret
subl
xor
mov
inc
push
popf
mov
xor
jo
jae
adc
cmp
push
adc
cmp
inc
shlb
addr16
aam
scas
xor
ljmp
andb
mov
and
jmp
cmpb
dec
push
fists
iret
in
test
ss
or
push
mov
mov
inc
pop
aaa
fwait
std
test
jne
push
daa
inc
outsl
xchg
enter
jmp
add
ja
dec
jnp
mov
xor
xchg
xor
cmp
sti
rcrl
push
pop
push
jb
stos
push
mov
shlb
mov
stos
ss
mov
cmp
cs
in
xchg
pop
cmp
fmull
xor
in
xchg
jmp
jno
jb
lods
inc
addr16
cmp
inc
dec
lret
cmp
int
mov
add
mov
cmpsl
mov
cmp
cmp
imul
jo
test
or
push
mov
in
and
test
test
and
cmpsl
nop
lods
idivb
xchg
pop
inc
jle
push
or
push
loope
fwait
jno
mov
xchg
mov
or
call
sub
cli
mov
roll
and
in
pushl
or
lea
int3
cld
stos
jns
popa
xchg
cmpsb
pop
popf
push
push
bound
fdiv
in
insb
jge
jge
dec
fidivrs
sub
push
outsb
jbe
jo
scas
mov
xchg
and
icebp
pushf
in
sbb
mov
and
in
lods
jns
test
jne
mov
ds
rcll
loopne
jl
push
pop
iret
jmp
cmpsb
and
rclb
mov
push
sbb
xchg
xor
inc
adc
cmp
clc
mov
out
cmp
pop
jae
jne
xchg
inc
movsb
sti
xor
idivl
js
in
lahf
add
fwait
stc
test
les
dec
cmp
sub
pop
js
adc
inc
pop
js
imul
rorb
pop
inc
mulb
scas
xchg
fcompl
cmp
push
add
adc
pop
jl
roll
ds
adc
out
sahf
subb
cmp
inc
add
cmp
imul
mov
mov
inc
aad
loope
shlb
scas
rcll
mov
test
adc
lds
add
push
push
cwtl
push
lds
fistps
loop
fimuls
loop
and
lahf
jecxz
xlat
mov
mov
sub
xor
popa
mov
adc
mov
push
cmp
xchg
mov
lret
inc
idivb
pop
fdivs
loopne
mov
xor
addb
cld
adc
sub
mov
mov
mov
add
and
inc
repnz
repnz
daa
add
aas
int3
mov
fmuls
mov
or
sub
jbe
jb
daa
lds
imul
ss
mov
mov
das
mov
inc
xchg
sbb
sti
fbstp
mov
pushf
das
mov
jg
int
xlat
subl
orb
lods
adcb
fldt
xor
outsb
fbld
xor
jp
cmp
dec
add
ljmp
clc
call
adc
adc
call
cmc
loopne
push
cld
add
adc
sub
mov
repnz
fsubr
push
pushf
imul
mov
adc
mov
inc
imul
push
ret
mov
inc
xchg
aaa
mov
push
jecxz
loope
sbb
adc
lidtl
sar
cmp
lock
daa
adc
hlt
sahf
scas
cltd
jge
sub
outsb
ds
mov
jb
adc
test
inc
movsb
inc
mov
clc
sarb
xor
or
test
inc
lret
adc
out
addr16
hlt
orl
adc
and
xchg
xchg
mov
jno
add
cwtl
mov
cwtl
movsb
xor
fwait
shrb
cs
mov
fbstp
lahf
mov
sub
imul
xchg
adc
and
xchg
mov
jl
xor
push
loopne
jb
sub
jae
test
pop
lcall
jg
sbb
jp
fdivrl
jmp
out
cwtl
sub
imul
cs
pushf
mov
push
scas
adc
dec
mov
mov
cwtl
push
pop
add
cli
dec
popa
push
call
test
test
aaa
fldt
jp
adc
addr16
imul
out
mov
pop
adc
push
push
sub
cmp
in
xchg
push
mov
stos
inc
aam
iret
cmp
sbb
xor
insl
dec
add
adc
jecxz
cmpsl
mov
dec
xchg
ja
mov
jbe
fldl
dec
insb
sbb
rcl
subb
lahf
xchg
jbe
mov
mov
or
jmp
lahf
lret
enter
out
hlt
fstl
hlt
pop
cmp
jecxz
push
data16
or
stos
or
cmpsb
add
push
leave
test
and
aam
sahf
cmpsb
cmc
sub
jo
in
cmp
shlb
xor
push
test
test
xor
shrb
adcb
fwait
sbb
dec
fldenv
jns
jl
sbb
mov
cmp
push
jecxz
inc
push
and
lea
jo
jne
push
ds
nop
ja
out
notrack
lods
adc
cmp
mov
mov
xchg
xor
les
daa
inc
in
fwait
inc
inc
mov
ds
jb
cmc
cmp
mov
mov
rcrl
sbb
ljmp
pop
out
mov
add
push
es
pop
xor
xchg
xchg
xchg
adc
push
jno
mov
dec
mov
shrb
subl
out
bound
mov
test
orl
jp
bound
jnp
les
xorb
xchg
mov
jl
dec
jnp
rcr
push
nop
and
hlt
cmp
jmp
push
mov
add
sahf
out
jae
xchg
xchg
xchg
lret
inc
cmp
repz
decb
or
inc
lahf
adc
add
add
sti
xor
rclb
mov
fistl
aaa
bnd
stos
sub
mov
jno
sbb
mov
cmp
pop
jle
or
aam
fyl2xp1
xchg
test
stos
add
rdtsc
leave
fisttpll
aad
cwtl
pop
sub
sbb
std
adc
xchg
sbb
loopne
mov
sbb
push
and
mov
jecxz
pop
sti
fnstsw
inc
sub
mov
stos
mov
aad
out
mov
adc
sub
jecxz
ljmp
xchg
xchg
sahf
and
les
ja
lods
push
lcall
ja
xchg
nop
pop
fstpl
pop
out
icebp
and
adc
fwait
lock
jo
arpl
sub
xlat
scas
adc
ret
cmc
push
cmp
dec
imul
mov
mov
lea
push
je
xor
add
cmp
test
lock
lods
and
pop
lods
dec
out
or
or
rcll
xor
inc
lret
cmovo
movb
std
cmp
stc
dec
hlt
inc
cmp
mov
cltd
call
lcall
mov
cld
rol
dec
xchg
xor
dec
out
movb
xchg
push
subl
xchg
cmp
cwtl
jo
sbb
daa
push
mov
or
repnz
sarl
addb
xchg
push
mov
std
bt
out
sti
or
popf
mov
aas
push
adc
lds
xchg
adc
push
push
or
mov
fwait
andnps
sbb
ret
subl
xchg
jge
cmp
sub
fstps
push
std
inc
clc
aad
push
daa
inc
rcr
dec
mov
or
dec
push
inc
dec
xchg
and
jg
mov
filds
loopne
xor
cmp
fsub
mov
les
and
icebp
or
es
les
scas
pop
mov
mov
push
ret
insl
cmp
pop
jne
in
mov
push
pop
sub
xchg
sub
xor
dec
pop
clc
sti
data16
sbb
stos
enter
sarl
in
cmp
pop
jecxz
pop
xchg
mov
cmp
sbb
test
mov
cltd
xchg
xchg
in
mov
imul
mov
test
xchg
sbb
cmp
and
cmp
scas
leave
insb
add
cmp
push
mov
sarl
cwtl
sub
out
mov
jne
add
add
xchg
std
jg
rcrb
inc
in
mov
mov
mov
imul
jge
jle
fcmovbe
imul
scas
aam
cmp
stos
loope
dec
int3
fwait
adc
lea
xor
lahf
scas
cmp
jmp
jb
int
mov
mov
jne
inc
xchg
xchg
xchg
lds
cmp
insl
into
fisubl
std
ja
mov
sar
ret
insl
xlat
pop
jne
add
shll
stc
pop
dec
pop
adc
xchg
push
xor
lock
das
ret
int
xchg
xor
cmp
xor
mov
xor
or
fdivs
push
movsl
test
mov
iret
in
loopne
push
mov
repz
xchg
sbb
xor
jl
in
ss
inc
in
xchg
imul
sub
es
inc
data16
push
les
jecxz
cmpsb
das
jno
mov
jnp
jecxz
test
and
andl
sub
repnz
or
add
mov
mov
fistps
cmp
imulb
pop
orb
movsb
cmpl
push
jns
pop
xor
push
add
xchg
stos
mov
movsl
outsb
xor
stos
in
mov
roll
push
pop
mov
mov
jge
adc
lret
pop
lret
sub
ja
pop
cltd
insb
fcmovb
mov
outsl
in
push
fdivl
dec
xchg
negb
jmp
sar
dec
dec
cmp
mov
call
je
cmp
nop
push
inc
inc
lds
insl
inc
adc
add
mov
bndstx
arpl
jge
movb
pop
lcall
jle,pt
rcll
xchg
aas
mov
das
mov
jmp
out
nop
call
sti
or
icebp
pop
adc
push
cmpsl
jne
cmp
daa
adc
addl
fnstenv
jecxz
ss
sub
jle
cmp
pop
inc
out
or
inc
les
mov
sub
leave
pop
pop
test
push
sbb
mov
stos
mov
movl
scas
jecxz
andb
jmp
dec
or
movsl
out
repnz
mov
push
add
daa
jge
test
popl
xchg
cmp
cmp
add
int3
cmp
scas
movsl
mov
adc
xchg
cmp
xor
push
into
es
mov
mov
sub
loope
loope
pop
stos
xchg
push
dec
inc
cmp
sub
iret
int3
int
dec
sub
in
dec
shll
imull
xchg
pushf
pop
aam
mov
jae
scas
pusha
sub
or
dec
push
clc
pop
adc
arpl
bound
enter
test
xchg
xlat
xor
sbb
pop
pop
jae
outsl
movsb
lcall
jge
fwait
out
jmp
pop
cwtl
je
sahf
push
xor
dec
pop
push
js
lret
push
inc
inc
lret
cmpsl
mov
and
or
jecxz
dec
mov
out
push
shl
mov
into
fs
mov
add
cltd
loop
jno
fisubl
fnstcw
out
out
dec
xchg
stc
ljmp
outsb
push
and
adc
lods
sub
ja
cmp
es
test
ret
cmovnp
cmp
cmp
push
movsb
mov
dec
cltd
inc
movl
pop
push
decb
lret
out
mov
insb
push
xorl
mov
enter
jecxz
sarb
cmpsl
sbb
in
aas
test
or
jl
mov
xor
push
mov
roll
xlat
push
shlb
decb
stos
xchg
sbb
mov
adc
pop
and
adc
enter
pop
cmp
loopne
ja
lea
jp
dec
daa
pop
mov
frstor
popa
sbb
push
scas
aaa
leave
shll
add
test
fldl
mov
negl
mulb
xchg
or
pop
xlat
or
fistpll
mov
sbb
leave
or
add
int
mov
add
mov
add
push
pusha
inc
dec
loopne
scas
pop
jmp
data16
out
pop
xchg
dec
inc
dec
jecxz
int
lock
shlb
and
int
mov
adc
xchg
int
mov
das
mov
inc
icebp
movsl
orb
sarb
je
das
mov
test
mov
rcll
dec
stos
mov
jg
stos
daa
enter
das
movsl
ficompl
je
cld
push
cltd
xorl
sahf
inc
icebp
sbbb
jle
jp
adc
mov
out
sarl
inc
fdivrl
mov
loopne
adc
or
popf
ret
sbb
fs
and
push
test
adc
andl
jne
dec
xchg
sbb
repnz
test
movsl
mov
mov
popf
in
dec
xor
rcl
subb
repz
push
fcomps
nop
fiaddl
leave
lret
mov
sub
push
push
mov
mov
test
xorb
adc
int
inc
testb
repz
idivb
mov
mov
aaa
test
jno
insb
fcoms
push
push
cmc
pop
add
mov
out
cmp
xor
cmp
insl
jnp
jne
add
or
dec
push
mov
shr
aaa
fwait
cmp
add
xor
lret
ds
sti
jae
and
sahf
pop
mov
xchg
imulb
jg
insl
push
jno
into
incl
dec
ljmp
pop
pop
xchg
test
mov
add
xchg
push
xchg
mov
fisubrl
cs
jbe
mov
mov
mov
mov
sbb
adc
orb
push
imul
sbbl
in
mov
pushw
inc
out
or
pop
std
lods
cmc
mov
cmc
cmp
mov
pop
pusha
aad
movq
test
inc
in
add
ss
das
fcompl
jl
ret
mov
add
lock
repnz
jb
add
lret
insl
imul
aas
adc
fstpt
call
jb
andb
popf
pushf
jmp
mov
pop
pop
xchg
xor
es
aaa
lcall
mov
mov
js
out
cmp
cmp
jns
adc
pop
jg
addr16
je
test
mov
sbb
test
in
pusha
insb
xchg
sbb
mov
pop
iret
mov
hlt
cmp
lods
mov
dec
mov
push
testb
cli
pop
leave
jb
test
movsb
mov
sub
sbb
aam
lods
mov
lret
jmp
dec
xchg
hlt
jmp
xchg
daa
jae
icebp
sahf
fistps
loope,pt
aas
inc
xchg
dec
lds
xchg
stos
sbb
cmpsl
jae
repz
or
sbb
div
adc
push
dec
sub
enter
int
push
mov
cltd
mov
es
sub
pusha
lret
stc
mov
push
pop
pusha
pop
and
push
cmp
je
push
hlt
add
call
mov
adc
and
test
xchg
xchg
mov
jne
es
jo
jecxz
mov
xor
pop
and
inc
or
subb
jmp
xchg
mov
sbb
xor
mov
sub
mov
test
push
adc
and
bound
cmp
xchg
mov
shl
outsb
xor
lret
imul
pop
leave
clc
mov
stos
je
inc
mov
dec
cmp
shrl
aad
xlat
add
iret
jnp
xchg
lret
fidivs
in
pop
loop
clc
xor
push
adc
mov
es
sbbl
adc
test
rolb
mov
mov
inc
in
adc
pop
data16
xor
jp
fldcw
xchg
divl
sbb
mov
pushf
mov
xor
mov
lods
jle
fadds
adc
out
out
mul
push
jno
jmp
pop
jb
mov
and
jle
adc
stos
jmp
cmp
notb
xchg
ja
arpl
sti
inc
fsub
ds
push
inc
int
stos
cmp
iret
addl
push
mov
mov
lods
jno
loopne
jmp
loop
xchg
cmp
cmpsb
mov
loopne
mov
test
jle
in
ljmp
lds
aam
dec
or
lret
pop
lods
repz
jg
mov
insb
in
mov
inc
xchg
or
mov
inc
insb
jge
out
ss
push
and
push
data16
inc
data16
lcall
decl
jecxz
cmpsb
fsts
divb
daa
or
push
bound
mov
or
jle
xor
in
dec
mov
negb
xor
adc
and
lret
bound
cmp
fsubr
ja
icebp
pop
jno
cmc
push
das
in
mov
cmp
icebp
lods
aaa
addr16
or
pop
cmp
rolb
ljmp
loope
or
mov
test
pop
cwtl
icebp
fidivrs
push
test
loopne
add
add
cmp
sub
in
es
mov
lcall
pop
or
sub
inc
pop
lret
ret
lret
jp
cld
sub
adc
xchg
shl
inc
aad
mov
int3
dec
hlt
cmpsl
aad
inc
stc
jge
inc
lods
push
pop
and
and
into
notl
movaps
popa
add
adc
cmp
ss
sbb
int3
xor
cmp
lahf
js
not
arpl
mov
push
xchg
les
mov
dec
in
stos
mov
in
or
stos
mov
scas
ret
sub
xor
cmp
lcall
lcall
xchg
test
lret
jo
out
xor
add
leave
das
neg
mov
cmp
test
ss
pop
dec
cmp
cmpsl
sub
mov
sbb
std
pushf
lcall
repnz
orb
pop
mov
imull
mov
mov
mov
out
mov
cmpsb
jb
mov
shlb
mov
insl
or
jge
out
leave
mov
movl
cmp
dec
mov
daa
ficompl
scas
outsl
sub
lock
pop
push
lods
mov
inc
xlat
aas
ja
addb
insl
dec
pop
mov
mov
push
jp
jmp
mov
or
fs
mov
les
pop
inc
loope
ss
add
xchg
pop
mov
mov
xchg
add
and
int
mov
mov
push
dec
jge
lds
sub
mov
clc
sub
test
sbb
sti
inc
xchg
mov
sarl
cmpsl
out
arpl
cmc
jnp
fsubrs
cs
insl
pop
lock
push
daa
xchg
and
clc
mov
repz
xor
xchg
aad
es
mov
xabort
movsb
pop
or
jns
add
mov
jecxz
jnp
xchg
adc
insl
aad
divl
lods
lock
pop
adc
in
rcll
mov
mov
push
aad
ss
inc
mov
int3
lcall
repz
dec
roll
rclb
jecxz
xor
sahf
cmovb
push
sbb
adc
orb
push
push
aad
xorb
movsl
mov
mov
aad
je
nop
in
ljmp
faddl
sarl
scas
arpl
adc
in
lods
bound
aad
cmpb
lret
lea
arpl
mov
mov
inc
push
push
aaa
cmpsb
repnz
pop
xor
adcb
mov
or
mov
sbb
mov
and
ljmp
inc
pop
cli
pandn
imul
push
bound
hlt
in
xor
ja
int3
jae
jb
ror
daa
loope
mov
adc
jecxz
xchg
inc
push
stos
xchg
pop
mov
or
add
dec
stos
pusha
xchg
sub
adc
lods
sub
icebp
mov
sbb
jle
fwait
mov
cmpsb
mov
repnz
mov
hlt
scas
xor
mov
pop
loop
call
fiaddl
push
sbb
sbb
pop
in
or
sbb
aas
outsb
pop
cmp
push
addr16
out
add
push
into
mov
adc
pop
jl
rcrb
mov
jbe
add
sub
scas
fs
push
stc
xchg
mov
fidivrs
repz
adcl
addr16
repnz
mov
cmp
add
mov
or
mov
into
mov
into
popf
test
incl
imul
popa
mov
sub
stos
in
sbb
and
test
pop
rorl
sub
inc
cmp
stos
mov
push
pop
iret
push
sub
add
xchg
ljmp
cwtl
and
test
repnz
cwtl
and
out
repnz
fs
cmp
rol
clc
out
mov
repz
pop
pop
shlb
pop
mov
mov
es
xor
test
adcb
sbb
xor
push
mov
in
dec
js
iret
shll
xchg
mov
int
dec
test
jnp
insb
testl
pop
pop
xchg
jae
jmp
dec
call
pop
in
loope
pop
icebp
sub
jno
ljmp
fs
add
cmp
cli
jg
jl
mov
mov
outsl
lock
sub
iret
jp
ss
mov
push
dec
inc
xchg
pop
inc
push
push
jg
xchg
dec
pop
push
mov
addr16
cmp
mov
out
mov
sub
xchg
fucomp
xor
pop
filds
stos
jae
enter
notl
lds
fcoms
aam
jecxz
sub
movsb
cmp
jno
out
cld
loopne
cli
stos
adc
pop
xchg
sub
stc
add
mov
rcrl
mov
pop
cmp
dec
xchg
daa
ljmp
mov
pop
sti
adc
inc
xchg
dec
aad
popf
push
scas
cwtl
pop
popa
mov
mov
inc
jo
and
test
insb
pop
lods
or
into
sub
inc
in
inc
out
adc
pop
subl
mov
sarl
dec
enter
cmp
stos
or
fucom
in
jge
xlat
add
mov
jbe
mov
jl
in
xlat
cmc
sbb
add
out
mov
dec
add
pop
and
loop
cltd
aam
ror
fists
ret
xor
in
cwtl
ljmp
test
andb
dec
adc
subl
int
mov
pop
inc
in
pop
xorb
test
pop
mov
mov
sahf
sub
icebp
inc
insl
push
das
jns
out
mov
pop
lock
aas
sub
orl
xor
out
add
cltd
sub
jecxz
sub
testl
mov
and
stc
xchg
mov
jmp
sahf
jmp
jb
sub
test
mov
popa
pop
shll
sbb
cmc
cs
pop
xchg
sub
pop
call
bound
mov
add
cmpsb
adc
loop
or
cld
xchg
cmp
mov
push
fsubp
leave
jno
mov
jbe
in
push
xor
mov
fisttpl
fwait
mov
ds
clc
jo
xchg
pusha
jo
clc
sbb
insl
pop
fcoml
push
sbb
mov
push
pop
arpl
or
fwait
xor
xchg
shrl
cli
inc
stc
aaa
pop
orb
or
push
mov
xchg
xchg
dec
mov
mov
mov
mov
sahf
test
rcrb
dec
adc
mov
mov
dec
mov
mov
mov
mov
scas
fadd
sbb
push
enter
iret
mov
aad
mov
outsb
sbb
loop
mov
mov
jne
lahf
add
ret
scas
inc
jg
scas
or
cmp
sbb
fstpt
sbb
fldenv
mov
int
sar
in
into
and
mov
xorl
adc
add
lcall
xor
jns
jecxz
mov
roll
lret
and
add
out
fsubr
inc
mov
push
mov
mov
pop
push
icebp
mov
fldcw
lcall
sbb
push
lcall
test
scas
inc
mov
jo
mov
jp,pt
sbb
adc
xor
xor
dec
pop
sub
push
jo
push
bound
sbb
dec
leave
jmp
int3
mov
jae
mov
rep
das
mov
int3
jno
ret
aad
shrb
push
mov
out
or
loope
cs
push
jns,pn
or
mov
or
jno
push
xlat
outsb
es
shrl
push
cld
pop
ss
gs
cwtl
es
pop
mov
xlat
cmp
nop
gs
xchg
fwait
test
fldcw
je
iret
popf
jp
mov
and
xor
mov
pop
mov
mov
jae
dec
jp
sahf
mov
mov
cmp
pusha
cmpsl
fs
sub
es
fisttpll
mov
es
outsb
and
leave
das
test
paddd
movsl
jne
mov
in
inc
jmp
mov
mov
dec
xchg
sub
addr16
pop
jl
mov
ret
fsub
movsb
test
sbb
mov
cld
scas
inc
push
and
add
icebp
jbe
fwait
adc
adc
mov
pop
mov
push
lea
push
stos
jmp
sti
rcr
fwait
jmp
cmp
dec
xor
add
adc
lcall
daa
mov
mov
sbb
inc
inc
int
or
xor
adc
jae
jl
xchg
arpl
pop
mov
mov
pop
out
adc
mov
outsl
mov
mov
jnp
fsubr
sub
push
mov
lret
andb
sub
outsl
mov
dec
pop
fsts
cmp
es
fnstcw
and
cmpsl
inc
sbb
pop
xchg
icebp
push
xor
out
sbb
lods
inc
lret
loope
lcall
mov
mov
mov
jns
fdivr
test
jo
imul
jecxz
xor
enter
jmp
mov
out
xchg
sbb
and
gs
jb
icebp
dec
sbb
icebp
shrb
popl
loopne
sub
les
adc
addr16
icebp
aaa
pop
mov
es
into
stc
out
cmp
cwtl
arpl
je
mov
icebp
sub
mov
mov
sbb
outsb
cmc
and
pop
xchg
ret
cmp
adc
sbb
cvtps2pi
lret
push
out
and
add
sub
inc
sub
loop
rorb
jmp
ror
mov
scas
jl
test
mov
sub
mov
mov
adc
mov
cld
repz
ficomps
ss
add
popa
push
sub
jle
pop
jl
push
lcall
inc
mov
inc
cmpsl
pop
push
and
sub
xor
mov
mov
std
sub
jne
inc
sahf
or
adc
pop
sbb
xchg
icebp
scas
mov
and
lahf
cmpsb
loopne
sub
fisubs
mov
inc
popa
xchg
adc
je
cmpsl
scas
mov
arpl
or
bswap
in
fs
cwtl
xor
jns
push
jo
jmp
inc
dec
mov
shl
ljmp
xor
loopne
enter
adc
adcb
xlat
into
or
out
xor
sub
dec
fsts
out
fwait
mov
nop
pop
ret
sbb
or
loopne
jns
mov
movsl
jmp
lds
setne
lcall
aad
das
inc
int
je
mov
cwtl
pop
xchg
inc
insb
dec
shll
pop
ljmp
sub
mov
inc
pop
adc
lds
movsl
test
mov
repz
rcrb
leave
addr16
int3
or
jo
into
pop
in
xchg
lcall
cli
jae
ret
xchg
cmpsl
aaa
xchg
rcrb
or
std
faddl
push
push
pop
mov
sub
jmp
shrl
xchg
sti
sarl
pop
dec
mov
mov
std
add
jmp
pushf
pop
sbb
cmp
ja
or
mov
stos
gs
pop
popf
mov
cmp
xchg
jae
fwait
adc
inc
push
jl
ficoml
test
daa
jmp
out
jb
arpl
push
inc
sbb
fildl
bound
jae
push
fwait
dec
test
add
mov
pop
out
jb
scas
adc
int3
mov
out
jmp
mov
out
in
les
adc
or
jmp
es
enter
insl
jmp
lds
add
pop
adc
push
cmp
mov
dec
sub
jle
mov
adc
jmp
inc
push
add
mov
mov
loop
push
mov
fisttpl
or
dec
stos
sub
pop
xchg
pop
call
sbb
test
cli
cmpsl
shll
icebp
adc
js
imul
fistl
push
push
xchg
aas
mov
xlat
sbb
popa
dec
int3
inc
jle
and
add
and
mov
pushf
unpckhps
or
icebp
std
mov
repz
cmp
jne
push
jns
cmpl
dec
movsb
xchg
andl
and
xchg
sub
or
and
add
xor
dec
push
scas
sub
inc
mov
jp
cs
adc
das
pop
and
and
adc
push
cmp
fwait
adc
or
sub
jae
popa
fwait
push
daa
mov
mov
and
jnp
inc
sub
xor
aad
and
cmp
jecxz
dec
in
loop
inc
ret
loop
cmp
mov
jb
cmpsl
das
test
jno
jns
outsl
mov
rcr
push
mov
pop
xor
loop
cli
fistpl
dec
fcomps
pop
imul
adc
xchg
dec
fnstcw
push
mov
mov
int
push
das
lea
xor
inc
xchg
aaa
test
les
cmp
iret
mov
mulb
fstl
xchg
xor
inc
pop
pop
fucomip
jnp
fs
cmpsl
inc
ret
add
lea
outsb
and
sbb
incb
das
scas
setg
jns
add
pop
add
or
into
in
mov
and
movsl
dec
orl
mov
mov
mov
std
and
popf
cmp
cli
push
lock
out
xor
jns
mov
cmp
inc
push
mov
mov
test
bound
inc
imul
cmpsb
sub
jle
pop
or
cmp
fwait
sbb
dec
shlb
clc
outsl
mov
mov
pusha
arpl
xchg
inc
ds
fisubrl
mov
mov
xor
or
jnp
rolb
out
insl
dec
out
pop
adc
pop
test
mov
sbb
call
inc
std
mov
mov
jge
rorb
fnstcw
lret
shll
push
mov
enter
mov
shlb
xor
mov
xor
repnz
xor
ficompl
fwait
out
push
cmp
pop
xor
les
dec
or
outsb
mov
dec
pop
popf
jns
xchg
nop
push
cltd
pop
filds
add
mov
or
xchg
xor
fwait
cs
mov
xchg
cli
jnp
push
lods
aas
push
adc
popl
or
repnz
pop
dec
jmp
mov
xor
jl
rorb
jo
cli
jnp
mov
ret
push
inc
mov
test
mov
cmc
xchg
cmp
push
in
out
mov
test
mov
sbb
mov
mov
or
notl
jecxz
outsb
xor
jnp
ss
fs
inc
aas
sub
adc
stc
addr16
into
insl
pop
cmpsb
dec
mov
sbb
std
es
lret
iret
and
push
push
pushf
js
subl
fs
pushf
in
sbb
xorb
sbb
test
das
sbb
pop
and
adc
fucom
xorl
jg
mov
pusha
leave
loope
es
inc
jmp
and
popa
cwtl
push
mov
nop
cmc
or
mov
daa
test
mov
cltd
inc
leave
fcmovu
push
loopne
xor
arpl
mov
cmc
das
mov
mov
and
fnstsw
enter
out
bound
xor
nop
cmp
add
mov
push
cs
fdivr
xlat
cmc
in
sti
jb
add
clc
fidivrl
push
jo
mov
lods
xor
add
loopne
cld
ljmp
daa
out
scas
mov
fs
aaa
inc
cmpl
cli
mov
mov
das
mov
push
cmp
enter
out
lea
std
pop
scas
into
test
and
divl
arpl
sti
ds
lret
lock
arpl
adc
xor
mov
mov
mov
mov
xor
cs
pop
adc
movl
push
daa
mov
inc
ficoml
ja
jge
test
imul
mov
out
imul
pusha
xor
icebp
ret
sub
stos
mov
sbb
ja
sbb
test
and
cmp
jecxz
cli
in
jns
add
or
mov
jno
sbb
andb
pop
int3
les
and
les
ds
scas
outsb
xchg
mov
ret
mov
jno
std
lods
xchg
cmp
adc
mov
mov
and
outsl
test
sahf
or
lods
xchg
adc
outsl
cmc
ret
push
cwtl
into
pop
addr16
xlat
stos
aad
movb
fwait
inc
push
push
jb
fdivr
xchg
xor
mov
sub
mov
fiaddl
sbb
inc
mov
adc
or
dec
cmp
scas
xor
sbb
mov
loopne
cmp
out
or
ret
ret
sbb
push
dec
arpl
dec
rcl
enter
cmp
cmp
dec
rorl
inc
mov
mov
mov
sub
inc
lods
stc
xchg
lds
test
push
push
roll
fstps
out
add
jmp
inc
pop
mov
adc
xlat
jmp
int
imul
mov
add
lods
add
insl
add
sbb
in
adc
jo
inc
and
cld
inc
mov
mov
test
push
push
dec
or
mov
lea
movsb
repz
inc
andl
movsb
sub
ret
add
out
movsl
push
popa
xlat
pusha
pop
pop
lods
fistl
neg
leave
shll
mov
xor
cmp
idiv
dec
or
add
mov
push
and
add
clc
shrb
add
sbb
fimull
rclb
pop
out
mov
fbld
int3
movsb
mov
out
lods
fiaddl
mov
std
xor
repz
xchg
push
or
or
mov
jp
das
inc
daa
mov
adc
mov
xchg
sbb
out
xor
aas
cmp
loop
adc
stos
insb
addl
aas
stos
popa
out
dec
ficoml
pushf
in
cmp
and
xchg
xchg
push
test
aaa
mov
xchg
cmp
dec
jo
sbb
rcll
add
inc
call
lods
dec
repnz
outsb
fcmovne
fidivs
mov
iret
dec
inc
adc
jge
repz
mov
pop
sub
lds
flds
pop
insl
sbb
fdivrs
fwait
mov
inc
xlat
mov
cmp
cmpsl
jle
lea
cmp
lods
mov
adc
push
dec
and
add
mov
inc
and
adc
int3
adc
lret
fwait
outsb
or
add
shll
dec
loopne
loopne
push
xchg
mov
and
iret
popf
push
jecxz
add
sarl
and
sbb
popa
stc
pop
mov
fwait
mov
out
jns
adc
ds
push
add
xchg
add
pop
cltd
and
pop
xchg
inc
sahf
lcall
jbe
aas
cld
unpckhps
jmp
adc
divb
jb
push
pop
pop
leave
in
push
jo
mov
divl
fwait
jg
xchg
adc
scas
insl
jmp
cltd
pop
cmpl
sub
push
adc
ret
add
add
sbb
xor
insl
xchg
push
mov
stc
fistl
cmpsb
and
jg
mov
adc
or
lcall
outsb
dec
and
cmpl
sbb
fs
lock
mov
pop
and
jbe
rcl
into
mov
mov
movsb
inc
loop
ja
sbb
arpl
cmp
dec
sub
jae
mov
push
rcl
pop
rolb
push
into
pop
or
insl
mov
mov
lds
test
mov
cmc
xchg
mov
sbbb
daa
cs
movsb
jo
cmp
jp
fwait
push
cmp
push
inc
and
stos
jp
fsubl
dec
icebp
popf
sbbb
into
jle
mov
cmp
sub
ja
pop
dec
cmp
sbb
test
ja
sbbb
js
shr
fldl
xchg
or
notb
adc
jns
cwtl
cmp
scas
stos
dec
pop
jb
aaa
divb
push
xchg
add
xor
and
sub
dec
dec
push
in
insb
inc
div
push
popa
ljmp
or
mov
mov
cwtl
jns
sub
mov
jo
aas
loopne
xorl
and
stos
mov
adc
adc
adc
clc
out
arpl
mov
pop
sub
dec
stc
mov
xchg
aaa
outsl
aam
xchg
pop
loope
add
lret
mov
test
movsb
ds
pop
pop
es
pop
push
cmpsl
mov
xchg
test
mov
mov
add
lret
xor
jno
xchg
inc
leave
or
mov
aam
sbb
fstpt
fbld
xchg
call
fdiv
xchg
mov
sarb
icebp
inc
inc
lods
cmp
dec
jnp
ret
inc
and
inc
dec
mov
jge
gs
sub
dec
or
jb
mov
out
out
dec
mov
int
lods
out
scas
add
xor
mov
push
adc
sbb
dec
aad
add
ud2
jb
pop
lods
mov
enter
sti
cmp
sti
mov
mov
mov
xor
imul
inc
cmpsb
rol
aad
cmc
inc
orl
sti
es
and
out
filds
es
fiaddl
ljmp
mov
pushf
inc
xchg
cmp
sarl
sahf
pop
xchg
stc
fistl
imul
xchg
aad
pop
xchg
icebp
jb
outsl
in
cmpl
cmpsl
out
pop
imul
cwtl
push
mov
fisubl
ficomps
inc
push
cmc
jl
cmp
call
outsb
aaa
js
jecxz
jmp
jo
dec
add
imul
add
add
inc
out
cmp
enter
outsb
push
jno
repz
rorb
popf
cmp
mov
jne
lret
jnp
sbb
xchg
ds
xorl
xchg
mov
fmuls
inc
xor
lods
daa
jmp
jae
movsl
out
repnz
xor
fisubs
jnp
pop
sub
dec
sub
sti
stos
push
or
push
stos
stos
push
jnp
insl
aam
and
adc
addr16
mov
xchg
push
leave
int
aad
lock
and
cltd
outsl
out
sbb
movsl
pop
sbbb
adc
add
scas
push
dec
sbb
xor
enter
insl
fcomps
inc
add
mov
dec
popf
js
jecxz
adc
cmp
addb
sbb
mov
xchg
jg
test
jno
sbb
mov
jnp
shrl
push
xchg
push
xchg
xlat
dec
mov
bound
rorl
inc
fadd
xor
jl
sub
iret
leave
mov
pop
add
ret
adc
push
mov
or
push
dec
or
stc
mov
test
mov
lahf
shlb
ds
pusha
mov
ds
data16
out
jge
imul
push
mov
inc
fisubrl
scas
pusha
cmp
lcall
ja
mov
push
ds
insl
ja
cmc
jp
pop
lds
popa
icebp
mov
ljmp
xor
xchg
cmp
jnp
shrb
xchg
mov
pop
xchg
stos
cld
repz
sbb
into
int
lock
inc
cmp
or
xchg
orb
sub
jmp
pop
pushf
sbb
inc
addl
rcl
or
add
imul
add
xor
sub
fstl
mov
xchg
jmp
rcl
mov
jb
out
mov
add
sub
jmp
push
stos
shll
adc
mov
jp
xchg
adc
popa
dec
xchg
je
jb
adc
stos
mov
sarl
scas
mov
xor
cmp
xchg
ljmp
xor
mov
cmpsb
sub
push
mov
das
les
ret
dec
push
stc
ret
popa
add
jbe
push
mov
push
mov
sub
mov
repnz
mov
pushf
mov
jo
xor
adc
xchg
in
mov
loope
dec
lret
jecxz
inc
aad
sub
xchg
adc
cmp
loop
mov
and
cmp
push
jb
mov
add
xor
inc
sub
mov
mov
scas
frstor
bound
xor
dec
mov
aaa
fwait
mov
fstpt
movsb
xchg
enter
pop
push
in
sub
mov
jecxz
mov
popa
scas
adc
mov
inc
popf
cmp
es
pusha
movsb
lock
ret
fsin
imul
adc
dec
negl
push
push
push
and
dec
repz
sub
pop
xchg
dec
or
ljmp
test
sub
movsl
sub
lret
inc
pop
cmp
dec
je
push
setbe
or
pushf
ror
xlat
lret
push
cmp
xchg
fidivrs
lea
mov
push
daa
push
adc
sub
mov
pop
push
movsb
test
xor
xor
rorl
xorl
mov
push
pop
push
or
mov
mov
jo
mov
or
cmp
pop
mov
in
movsb
pop
add
mov
adc
and
add
sbb
ret
mov
or
popa
cmp
jb
int3
mov
popa
mov
pop
xchg
xchg
fs
mov
mov
imul
inc
nop
dec
jo
call
sbb
gs
adc
repnz
lock
mov
dec
out
roll
out
mov
test
mov
mov
pop
fiaddl
lods
flds
outsb
pusha
xchg
daa
pop
rcll
in
sbb
out
cmp
mov
addb
mov
sbb
in
push
pop
shlb
mov
fisubl
adc
mov
mov
push
lret
push
loope
xchg
in
cmpsl
and
std
dec
adc
in
stc
sbb
data16
ljmp
pop
mov
ret
xlat
stos
lock
xchg
test
loope
cmpsb
dec
xor
and
inc
sub
filds
dec
mov
leave
stos
aam
outsl
mov
adc
adc
outsl
popa
sbb
mov
out
inc
scas
in
das
test
xor
pop
mov
fwait
xor
cmpsb
jl
int
or
jmp
dec
inc
pop
sarb
mov
lcall
cs
sarl
cmpsl
sbb
pop
lahf
jbe
out
into
pop
std
push
dec
pop
dec
repz
sbb
cmp
mull
out
enter
push
pop
xor
lret
ret
cmp
mov
inc
ficoml
leave
popf
push
movsb
and
jo
jno
adc
mov
xchg
adc
cmp
sbb
aaa
jno
scas
push
mov
sub
out
cld
insb
sarb
pop
mov
in
or
xchg
pop
xor
lret
pop
ret
dec
and
pusha
xor
inc
rcrb
adc
mov
sahf
andl
jle
mov
dec
push
inc
jle
aam
cltd
insb
ret
adc
out
push
jnp
pop
testl
adc
pushl
jnp
mov
in
cmpsb
outsl
xchg
aad
out
lahf
shll
call
test
mov
pop
jl
or
repz
popf
lea
imul
out
scas
mov
fdivr
jle
pop
inc
dec
pop
sbb
or
xchg
dec
adc
or
ds
mov
mov
fnstsw
into
bound
add
cmp
enter
addr16
lea
call
cwtl
mov
and
orw
xor
fidivrs
and
loopne
lods
sbb
lret
or
xor
mov
jmp
cmpb
add
sbb
test
mov
pop
dec
add
or
pop
adc
test
loopne
xchg
dec
push
int3
mov
adc
dec
jp
mov
bound
negb
movsl
les
fwait
xchg
push
jmp
add
jmp
xchg
test
fnop
imul
push
arpl
ljmp
cmp
int
lea
daa
icebp
dec
mov
add
jecxz
inc
push
pop
jne
rcrb
cwtl
mov
jg
and
and
iret
or
adc
jecxz
inc
int
inc
xchg
ret
dec
nop
or
sbb
insb
mull
stos
add
mov
movsb
arpl
inc
ret
push
pop
sbb
out
pop
jmp
sub
stos
ror
mov
sbb
es
aas
jne
push
es
xor
jp
idiv
pop
mov
pop
out
je
das
add
cli
inc
arpl
push
sub
push
insb
ja
cmp
stos
mov
stos
mov
les
imul
pusha
mov
test
cmc
sub
std
mov
adc
sbb
cmc
cmp
mov
popf
maxps
mov
lods
cmp
mov
push
fimuls
sub
cmp
cmc
mov
xchg
fucom
xchg
mov
pusha
incb
adcb
mov
addr16
sar
pop
push
sti
fcoml
pop
lret
xchg
loop,pt
jb
insb
xchg
cmc
and
sub
outsb
sub
pop
pop
std
jnp
into
addl
dec
nop
mov
ljmp
ficompl
push
cld
cmp
subl
dec
pop
sub
idivb
or
out
jl
inc
inc
lods
push
add
mov
sub
lea
jno
in
or
cld
add
or
insl
notb
sbbl
xor
cmp
mov
stos
fisubrl
sbb
test
les
mov
jbe
out
sbb
jge
outsl
add
adc
lret
xor
lock
addr16
xchg
int
sbb
and
rcr
xchg
loopne
jl
lds
mov
loopne
js
popa
mov
shll
icebp
lods
xchg
pusha
xlat
or
mov
out
sub
or
push
setb
mov
cli
test
lfs
popa
sti
mov
xor
cmp
pop
in
dec
mov
les
in
outsb
lds
mov
mov
jle
addr16
push
fxch
aaa
aas
sbb
jp
inc
jae
das
mov
loopne
sub
cmp
xor
add
mov
xchg
lods
or
mov
ficoml
pop
out
int
std
push
ss
jmp
dec
or
dec
pop
mov
out
jbe
popf
pop
lock
ljmp
and
sbbl
cmp
cmp
adc
push
arpl
jge
add
mov
jmp
or
cmpsb
lds
jbe
pop
push
stos
sbb
lgs
jne
in
mov
mov
mov
mov
test
xor
adc
dec
arpl
cmpsl
shll
test
stc
mov
int3
dec
mov
out
dec
xchg
pop
jle
adc
lcall
mov
pusha
jecxz
jl
stc
js
aam
cmovp
mov
add
pop
jl
mov
ja
jecxz
xchg
out
push
ror
rolb
mov
pop
aam
popa
rcll
xchg
out
jg
out
jg
test
nop
mov
dec
or
cwtl
sub
lret
adc
movsl
mov
or
and
aam
ss
mov
pop
xor
pop
in
pop
jno
mov
sbb
sar
ljmp
leave
sub
mov
jge
and
pop
xchg
lret
cmp
inc
lcall
mov
lods
pop
fwait
dec
add
jg
lds
loopne
cmp
lods
ja
mov
xchg
mov
xchg
jecxz
je
dec
add
push
add
js
movq
push
pop
lret
out
mov
pop
jbe
sbb
sbb
xor
jne
pop
testb
jp
hlt
lahf
pop
adc
inc
mov
iret
jge
add
jae
das
jle
leave
stc
ss
dec
shl
jno
fmull
push
inc
xorb
or
jmp
out
or
data16
ret
add
jmp
jb
add
xchg
rcll
inc
stc
and
mov
out
cld
lods
push
out
shl
leave
cwtl
xchg
xchg
fidivs
and
and
fists
mov
dec
pop
lea
xchg
data16
cmc
mov
in
movsl
inc
ret
sbb
cmp
xchg
mov
inc
push
sahf
fstpl
dec
lcall
dec
lods
mov
out
int
mov
divb
jge
mov
adc
icebp
testb
iret
sub
cmp
lods
fistpl
pop
sbb
mov
push
pop
or
iret
inc
hlt
add
and
jnp
mov
inc
incb
lds
sub
popa
fucomp
xchg
test
xchg
scas
mov
adc
push
xor
test
std
jne
popa
pop
sbb
test
enter
push
xor
dec
imulb
jmp
jmp
rorl
push
add
mov
dec
gs
jns
in
in
cmp
arpl
sarl
mov
xchg
jle
add
pop
in
insl
dec
xor
into
addl
jmp
mov
dec
jae
insl
or
jns
scas
jo
jl
popa
sub
lret
adc
or
push
mov
push
add
in
xor
pushf
inc
hlt
adc
iret
incl
sbb
mov
shll
xor
mov
adc
int
pop
sti
subl
cmp
fisubrl
pop
jl
pop
or
fsubp
sub
popa
pusha
xlat
cmp
adc
mov
aaa
and
push
cmpl
or
dec
shrl
xchg
orl
dec
es
jb
sub
lret
push
mov
int3
xor
sbb
lock
mov
addb
test
xchg
push
and
mov
movsb
std
mov
inc
sar
subl
adc
adc
out
jg
sbb
xor
jns
lret
mov
mov
or
pop
leave
ret
shrl
les
int3
mull
and
push
pop
sub
loopne
jb
mov
gs
xchg
or
icebp
xchg
sub
es
cmp
imul
jbe
ds
push
je
pop
rorl
push
mov
ljmp
mov
jbe
shrb
dec
mov
xchg
loopne
insl
xchg
cmp
mov
cmp
pop
mov
movsl
stos
mov
pop
inc
sbb
push
sub
jns
mov
adc
cltd
cmpsl
fsts
and
cmpsb
sbb
nop
popa
dec
call
sub
and
mov
cmp
fdivrs
jae
pop
or
dec
in
sahf
sbb
inc
shll
xor
sbb
push
dec
pop
out
jmp
mov
push
cmp
mov
xchg
mov
gs
mov
dec
int3
fwait
xchg
dec
inc
push
leave
mov
ret
fldenv
dec
out
iret
ds
movsl
mov
data16
sbb
or
fdivl
gs
or
mov
in
jp
int3
rep
xor
sbb
pop
jno
jl
xchg
jg
sarl
inc
ret
jg
dec
push
mov
adc
cmovl
sbb
lret
jb
lods
inc
in
sub
outsb
cmc
test
add
lea
imul
or
cli
fists
sub
jge
adc
ret
shll
sub
subb
mov
in
mov
and
and
test
cld
cmp
inc
cmp
inc
fstl
push
into
sbb
cmovno
mov
test
adc
test
aas
std
cld
fimuls
pcmpgtw
adc
mov
repz
mov
popa
lock
enter
int
inc
mov
mov
sub
mov
mov
out
iret
cli
mov
adc
fs
shlb
sahf
int
leave
dec
icebp
jle
sti
dec
mov
cwtl
outsl
nop
fnstcw
dec
mov
dec
roll
lret
jmp
mov
dec
jnp
into
jmp
xor
and
push
pop
aaa
xchg
jge
push
lret
cmp
fildll
and
mov
xchg
lds
mov
pop
ja
push
mov
jne
sti
xchg
mov
nop
push
mov
mov
imul
inc
mov
js
and
mov
in
mov
arpl
scas
ljmp
cmp
cli
mov
cmpsb
jnp
pop
push
es
ljmp
rolb
push
pop
imul
adc
jmp
loopne
jle
dec
add
lcall
test
xchg
adc
in
das
aam
add
pop
out
mov
cmp
xchg
cmp
outsb
int3
mov
dec
adc
jae
pop
cld
jle
stc
lret
int3
xchg
pop
fwait
negb
adc
lock
filds
lds
xlat
xchg
push
pop
sti
cmpsb
ljmp
xchg
fstps
jg
jnp
mov
jne
sub
mov
fldt
mov
add
jecxz
inc
add
jp
mov
xchg
mov
out
and
pusha
lea
pop
aas
das
lock
insb
fwait
dec
or
inc
mov
mov
stos
sub
jmp
ss
xor
pop
mov
icebp
adc
int3
dec
sti
lcall
cmpsl
xchg
arpl
jg
sub
aad
stos
sbbb
fidivrl
arpl
jae
lret
outsl
mov
or
push
xchg
fidivs
pop
and
ret
push
xchg
popf
push
cs
subb
fwait
outsb
jg
repz
push
inc
inc
movsb
mov
outsb
cltd
jne
outsb
mov
cmpsl
movsb
dec
pop
sbb
loopne,pt
pop
call
imul
push
cmpsb
pop
imul
call
lods
sbbb
outsb
pusha
mov
rcrb
imul
or
push
aad
pushf
dec
jno
adc
pop
mov
inc
addr16
gs
add
mov
andb
gs
pop
inc
mov
pop
pop
lcall
xchg
or
popl
push
test
push
cmpl
adc
je
jl
push
scas
jecxz
ljmp
loope
jecxz
js
mov
les
jp
dec
stos
push
sahf
mov
addr16
mov
lods
inc
test
cmpsb
cmp
jnp
fdivs
xor
je
mov
jno
and
xchg
test
and
mov
mov
cmp
adc
rcrl
sbb
mov
outsl
enter
xor
lcall
push
in
shll
xchg
ljmp
sbb
out
stos
mov
add
inc
mov
jle
mov
lret
nop
dec
sub
jae
bound
lds
shrb
sahf
fdiv
xlat
inc
mov
or
jp
jge
aam
xchg
jnp
xchg
fisubl
bound
call
fsubrp
lret
in
xor
cltd
loopne
push
jle
enter
and
rorb
mov
bound
fstpl
mov
lahf
imul
push
pop
shrb
cmp
call
sub
loope
push
lahf
push
and
test
push
push
sarl
mov
mov
jo
rcrb
insl
scas
int3
ss
pop
in
mov
xor
cs
cs
into
inc
out
and
mov
cmp
js
imul
mov
and
fcomps
dec
mov
xchg
es
dec
or
bound
sbb
leave
out
movsl
cmp
push
xchg
mov
mov
stos
test
mov
movsl
mov
or
mov
fwait
mov
or
loopne
in
shll
notl
daa
or
lahf
movsl
repnz
dec
sar
xor
int
pop
add
and
cli
shlb
mov
inc
ss
incb
xor
ja
mov
loop
push
je
mov
sub
sub
dec
movsb
in
mov
lods
enter
addr16
ss
pushf
sub
jmp
je
in
adc
xor
sahf
xor
and
adc
sub
push
js
mov
out
adc
mov
fs
push
pop
ret
out
hlt
mov
and
adc
fidivrl
jo
push
mov
jmp
out
adc
ss
and
negb
mov
pop
in
cmp
jnp
mov
push
das
fldpi
ss
adc
inc
inc
xchg
mov
sti
push
push
idivb
shrl
sarl
xor
or
adc
cmp
ljmp
dec
mov
aam
pushf
sub
test
aad
jge
int
mov
or
insb
xchg
cmp
bound
int3
ja
xchg
pop
js
jns
lods
push
sbb
mov
sub
repz
clc
scas
stos
popf
push
xchg
call
sbb
mov
sub
mov
cmpsb
inc
stos
lret
jbe
or
fstps
fstl
mov
xchg
aad
fwait
loopne
imul
addl
jg
pop
mov
jno
dec
push
aad
lea
cmp
imul
cmpsb
sti
push
cli
cld
repz
push
repnz
cmp
xchg
adc
insb
lea
aad
mov
imul
pop
push
mov
jo
dec
fstp
add
cvtpi2ps
push
lret
and
push
sbb
cmp
ds
push
pop
sbb
pusha
push
push
sti
push
push
jnp
call
dec
popa
divb
pop
dec
inc
sbb
mov
js
in
faddl
out
mov
push
sub
ljmp
aas
or
push
pop
pop
cmpsl
push
xor
ss
mov
push
dec
lcall
xchg
ret
stos
and
lods
mov
stc
sub
mov
pop
ret
fiadds
clc
inc
add
push
int3
rol
int3
test
enter
cmp
lods
test
pop
jne
xchg
add
cs
notw
js
ds
das
pushf
cld
int
mov
push
and
cwtl
pop
or
xchg
rorb
out
or
jge
mulb
fnstcw
push
mov
push
cmc
push
push
xchg
mov
inc
dec
movsl
pop
lret
xor
aad
and
add
int
lock
cmp
xor
mov
jnp
pop
shlb
adc
mov
test
jle
xchg
dec
dec
push
lods
fadds
andl
fisttpl
mov
dec
pop
add
shrl
pop
call
mov
add
dec
pop
dec
mov
ss
insb
in
and
push
lods
dec
xchg
push
push
pop
push
jl
fiadds
jle
push
cltd
rolb
push
sbbb
enter
nop
xorl
mov
sbb
pop
jmp
jnp
arpl
into
jmp
or
insl
imul
jge
js
inc
in
fldenv
fistpll
adc
enter
jmp
xor
sub
clc
nop
mov
in
fadd
jle,pt
jg
movsw
sti
xor
adc
adc
imul
fwait
pushf
into
pop
mov
jo
or
test
inc
adc
out
xor
jae
repz
in
and
pusha
xor
sub
cli
inc
sbb
pop
dec
add
or
xor
push
aad
sbb
test
loop
ljmp
out
sbb
into
xor
enter
mov
call
mov
enter
insl
mov
xor
xchg
mov
addr16
inc
push
push
cmp
push
adc
push
jmp
adc
imul
lea
lods
cmp
mov
in
jo
mov
lods
jne
pop
cmp
ret
mov
and
xor
scas
xor
xor
mov
daa
xlat
das
daa
scas
jl
fimuls
leave
imul
outsb
push
pop
xor
jg
aam
ja
pop
jg
fmull
add
scas
jl
scas
aam
xchg
lret
pop
inc
fwait
mov
stc
dec
rol
cmp
ret
pop
adc
mov
pop
jecxz
jne
push
sti
add
push
test
jmp
sub
cmp
outsl
lcall
das
cmc
lea
mov
lcall
decb
ds
scas
add
fwait
adc
cmp
je
rcr
add
inc
subb
cmpb
inc
stc
xchg
in
sar
leave
sti
outsl
mov
test
mov
int3
fisubl
call
add
roll
xchg
insb
jb
mov
push
sbb
sub
add
ret
orl
les
scas
hlt
mov
push
test
fucompp
or
popa
int3
cmpsl
repnz
out
pop
clc
testl
xchg
mov
clc
pusha
mov
xchg
dec
xor
sahf
sbb
out
sbb
jmp
and
or
decb
mov
pop
in
xchg
push
mov
insb
push
frstor
sbb
idivb
jg
call
sub
xchg
fisubrs
and
xchg
fimull
mov
popa
std
and
push
sarb
aam
cwtl
fcomps
fdivs
jge
dec
mov
dec
iret
pop
sti
imul
stos
rcl
sarb
mov
mov
jmp
mov
sbb
mov
arpl
xchg
dec
pop
pop
stos
into
lds
enter
popa
mov
cmp
mov
mov
dec
xor
mov
lret
inc
clc
mov
insb
je
xlat
inc
lcall
gs
or
adc
andl
mov
fistpl
pop
pop
xchg
cmp
lock
mov
arpl
shll
push
pop
mov
mov
inc
and
cltd
mov
movq
test
add
add
pop
xchg
inc
hlt
aad
cltd
pop
testl
xchg
mov
andl
sahf
jb
test
loop
mov
cmp
and
mov
out
movsl
or
mov
and
push
clc
mov
mov
sbb
ja
pop
cmp
fbstp
dec
inc
aam
or
in
adc
mov
xchg
lods
stos
xchg
out
clc
inc
rep
mov
push
and
mov
jle
imul
jp
mov
rcl
jb
push
add
sub
mov
jo
dec
cmp
aaa
dec
xor
in
mov
mov
andb
mov
adc
cltd
xchg
fidivs
dec
and
test
testl
jp
ds
mov
int
jae
mov
xchg
add
xor
fstpl
iret
mov
push
mov
cmp
xor
xchg
adc
insb
push
add
push
inc
bound
cli
lret
test
rorl
push
cmp
clc
ret
clc
jno
jns
pop
cwtl
mov
jns
cli
pop
ret
inc
cmc
jl
sub
out
rcrb
sahf
push
rcrl
xchg
push
fisttpll
dec
popf
aas
dec
test
inc
or
mov
adc
decb
mov
mov
sub
and
mov
fdivs
fs
mov
arpl
sbb
sbbb
sub
fcmovbe
roll
add
lds
or
sub
ljmp
cltd
bound
sub
cmp
lcall
sub
stos
lahf
repz
sub
push
mov
lods
test
jge
push
jmp
mov
pop
cmp
xchg
or
jnp
mov
out
fcoml
movsl
jns
pop
nop
fwait
lock
rcrl
fnstcw
scas
push
pop
jns
sub
roll
test
dec
mov
xor
xchg
inc
or
mov
ja
mov
push
leave
xchg
xor
sbb
test
dec
pop
mov
xor
mov
pushf
cmp
lods
sub
insl
fcoml
xchg
cmp
hlt
pusha
lcall
xchg
pop
xchg
int
loopne
mov
ljmp
flds
jg
aaa
adc
das
movsl
pop
mov
mov
in
inc
aaa
fwait
and
lcall
ja
adcl
dec
sarl
inc
pusha
xchg
mov
pop
cmpsl
ljmp
cs
mov
bound
inc
icebp
push
nop
cmp
mov
cmp
push
xchg
xchg
xchg
imul
mov
shrl
sub
int3
and
xor
push
push
mov
xchg
mov
ret
push
fdivrs
dec
ret
dec
das
stos
dec
cmpl
popa
loop
add
loopne
mov
mov
stc
stc
push
xchg
adc
lods
push
xchg
push
ljmp
arpl
js
or
stos
xchg
rcr
pop
cltd
js
fs
mov
aam
jnp
push
sti
cmpsb
add
jae
shrb
lret
sbb
hlt
imul
fcoms
inc
mov
and
add
mov
mov
insl
pop
xor
xchg
aaa
insb
mov
sti
inc
sbb
pop
sub
push
fldenv
sti
arpl
loopne
xlat
mov
scas
xchg
fsubs
xlat
out
lret
movsl
mov
push
jecxz
ljmp
daa
dec
nop
cmp
mov
in
cmp
sbb
imul
imul
mov
shrl
jo
sarl
push
and
add
adc
ss
iret
cmpsb
les
psubb
jo
xchg
mov
jno
in
adc
inc
aam
rorb
pop
rolb
jo
out
cmpsb
mov
popa
insl
movsl
pushf
repz
pop
jne
mov
sbb
ds
pusha
jle
jecxz
and
into
movsb
jmp
fcomps
ja
xchg
mov
xchg
int
cmpsb
push
or
fsubrp
mov
mov
add
mov
cmp
fs
xchg
mov
dec
pop
movsl
leave
gs
mov
mov
stos
sete
aaa
cmc
cmp
je
add
repz
cmp
sub
test
rcll
cmp
scas
inc
add
xchg
cld
sbb
cmpsl
push
scas
mov
movsb
inc
sub
mov
push
mov
cmc
mov
xchg
pushf
stos
add
and
inc
fstps
push
in
lds
addl
or
outsl
sub
mov
mov
out
pop
mov
retw
aam
sub
fwait
mov
cli
aaa
xor
pop
and
out
add
jbe
sub
lret
lods
sub
jle
pop
sub
mov
mov
call
add
mov
add
push
shl
add
jl
sbb
leave
cs
push
lret
xchg
push
mov
aaa
cmp
ja
and
rcll
imul
inc
lock
inc
add
test
jo
xlat
and
push
call
negb
push
mov
cmp
xor
add
push
movsl
cli
sub
mov
stos
mov
je
xchg
pop
pushf
pushf
in
rcrl
sbbb
sbb
cmp
subb
out
shlb
jp
aas
inc
mov
jmp
adc
out
pop
sub
rcl
pushw
sub
push
pop
add
movsb
into
inc
jle
pop
inc
sti
jecxz
lods
rcrl
repz
test
js
cltd
and
loop
aas
or
lahf
adc
push
mov
or
hlt
or
add
mov
lock
inc
lcall
or
and
xchg
in
sahf
push
in
push
xorb
and
mov
mov
mov
xchg
dec
stc
aam
lcall
xor
jbe
test
dec
jecxz
cmp
outsb
jae
xchg
jo
js
add
xor
jg
push
add
xchg
int
into
jnp
adcl
sub
lret
push
sti
jne
fsub
addb
arpl
lret
xor
aad
inc
fcoml
sub
mov
cmp
pop
xchg
outsl
repnz
push
mov
dec
mov
sub
ficomps
scas
mov
fbld
popf
test
js
loop
xorl
dec
mov
xor
test
xor
psllw
pop
push
xchg
or
push
dec
lds
negb
imul
cltd
leave
add
jle
inc
pushf
hlt
std
and
subl
or
dec
xor
xchg
int
cwtl
xorb
push
dec
js
lahf
repz
dec
loope
mov
mov
lea
mov
fmuls
test
call
scas
fistl
movsl
cmp
fcompl
push
out
mov
push
inc
jl
inc
cltd
fisttps
jp
push
mov
mov
and
std
loop
sti
bound
sub
adc
rcrl
shlb
movsl
pushf
xchg
ss
outsb
inc
mov
dec
dec
das
js
sub
inc
dec
xor
mov
pusha
jmp
rcrb
insb
cs
cmpb
rcl
xchg
fidivl
mov
mov
pushf
ret
aad
sub
cmp
sbb
sbbb
pushl
adc
xchg
mov
xchg
enter
fwait
loope
test
xchg
movsl
stc
andb
pop
popa
push
iret
out
scas
call
mov
adc
pop
clc
cld
mov
daa
gs
mov
push
xor
xor
sbb
mov
add
mov
sub
repnz
lret
push
std
fdivp
or
xchg
aad
push
sarb
sub
cwtl
bound
jmp
inc
pop
stos
mov
nop
pop
int3
sub
push
out
mov
cmpsb
outsl
test
mov
inc
jae
fimuls
push
adc
sbb
in
push
fdivrs
xchg
jo
mov
popf
sti
sbb
pop
pop
mov
scas
or
imul
add
cltd
fsub
mov
xchg
clc
rcrb
mov
inc
pop
ljmp
repnz
lods
cmpsl
inc
xchg
push
sti
inc
in
inc
pop
addr16
lcall
dec
stos
daa
ret
dec
sub
mov
push
loope
lods
xchg
insl
push
push
push
sbb
dec
fildll
xor
mov
push
lods
jns
movsb
bnd
push
or
lcall
jns
sbb
push
jb
pop
cld
aaa
mov
aad
sbb
ja
pop
shll
inc
iret
jl
dec
lahf
and
aam
mov
cwtl
out
sti
sbb
outsl
mov
xchg
dec
xlat
push
adc
andb
xorl
and
mov
cwtl
data16
adc
jo
xchg
pop
loop
adc
push
and
add
lods
popa
nop
xor
sahf
xchg
pushf
addb
out
mov
jmp
xchg
insb
cmovne
mov
cmovnp
cmpsl
fs
xchg
sbb
outsb
xchg
or
stos
lcall
mov
pop
jg
lret
mov
xchg
aaa
mov
jge
out
cmp
lea
mov
sbb
fucomp
cmp
dec
dec
and
fldl
cmc
fmul
lret
popa
mov
pop
js
mov
xchg
aas
jge
in
cltd
xor
test
nop
test
ja
call
and
fiaddl
inc
sbb
mov
sub
pop
mov
out
out
imul
jo
sysret
push
mov
pop
lds
movb
cltd
shrl
push
icebp
inc
ljmp
mov
in
addl
fisttps
testl
xchg
sbb
gs
arpl
xor
imull
int3
into
sti
pusha
je
sahf
ljmp
push
leave
adc
push
incb
adc
xchg
adc
cmp
mov
dec
stc
leave
subl
mov
mov
subb
in
filds
or
vpminub
pop
push
out
inc
mov
sbb
push
fistl
fnsave
dec
push
ret
pop
ljmp
sbb
mov
xchg
lret
mov
sub
pop
push
stc
ss
push
test
inc
lock
ror
xor
lods
add
into
push
jecxz
ss
sti
push
push
add
mov
adc
mov
enter
cmp
mov
xchg
mov
add
je
hlt
out
movsb
cmp
dec
sub
jnp
xor
ljmp
pop
add
clc
mov
test
cmpsl
push
outsl
in
sub
bt
mov
cld
ret
add
pusha
xchg
pop
and
xor
mov
insl
mov
loopne
fistpll
and
rcll
jno
popa
loopne
push
dec
cld
adc
fsubr
mov
je
sub
mov
ds
popa
lret
addr16
mov
xchg
stos
es
cmp
jle
repnz
xchg
pop
stc
adc
pop
mov
xor
jnp
insb
jp
mov
loop
sub
cwtl
std
daa
and
ror
rcll
mov
xor
pop
mov
push
mov
ss
jle
jmp
push
in
or
jne
jl
cwtl
jae
lock
mov
mov
fisttpll
cltd
mov
pop
and
loop
add
add
popf
fwait
imul
outsl
aad
fs
jno
test
stos
cld
push
cs
pop
xlat
and
adc
mov
ja
pop
jle
or
outsl
sarb
test
insl
lret
loope
repnz
fdivrs
lahf
popa
mov
cld
ja
mov
jecxz
sbb
inc
mov
pusha
fidivrs
shlb
inc
jmp
sbb
jo
mov
xchg
adc
loop
or
pop
lock
sub
repnz
xchg
lea
mov
jl
imul
aaa
push
or
test
sbb
hlt
repnz
inc
cli
push
xlat
jle
or
cmp
and
pop
nop
sbb
andl
inc
leave
and
or
xchg
cmc
clc
push
sbb
fcmove
mov
or
out
xorb
in
pop
ljmp
cmp
imul
mov
or
xchg
filds
insl
pop
push
mov
adc
jbe
add
repnz
popf
cmp
addl
and
adc
cmp
outsl
cltd
das
pop
int
sbb
sub
cmpsb
call
ds
cs
std
in
ljmp
fcmovbe
cmpsl
pop
stc
stos
je
popl
outsb
push
loopne
fldl
push
cltd
mov
pop
sti
daa
int3
lods
subb
mov
cmp
and
int3
insl
clc
jmp
movsl
dec
lea
fimuls
mov
or
push
dec
mov
sbb
fdivs
inc
rep
inc
push
scas
mov
dec
dec
add
int
jmp
scas
fdivrs
add
mov
jmp
dec
shlb
repz
sub
or
mov
sbb
xor
sub
pusha
pop
and
lahf
andb
das
push
mov
rcrl
das
jl
fwait
in
loopne
jo
jmp
loope
jno
sbb
iret
xor
test
jbe
cmp
ss
adc
fcmovnu
pop
sbb
or
inc
icebp
imul
mov
jecxz
loopne
cli
push
jns
incb
mov
push
xorl
inc
and
jno
cmp
clc
in
jo
test
clc
cmp
out
jo
adc
mov
jmp
call
fmuls
scas
adc
lret
in
push
bound
arpl
or
xchg
add
lcall
pop
lret
sbb
loopne
fsubrl
pop
pop
jmp
loope
push
or
sub
insb
ja
rorl
add
xchg
data16
sub
ret
push
push
sub
xor
and
xchg
xor
mov
add
and
shl
aaa
es
cmpsb
clc
lods
and
pop
add
in
test
mov
scas
lea
les
jg
ret
sbb
stc
mov
mov
ret
mov
mov
jp
ret
ljmp
pop
out
imul
sub
push
mov
mov
nop
andl
enter
push
imul
test
adc
jb
roll
je
les
lock
jle
sbb
adc
jg
addb
sub
mov
test
cli
jl
push
jo
push
fcmovnbe
insb
in
push
jnp
jg
insb
mov
xor
scas
into
dec
and
frstor
push
sub
gs
das
cwtl
pop
mov
jne
xchg
cmpl
subb
inc
stos
fdivrl
dec
add
adc
push
pop
scas
test
sbb
inc
xchg
sti
push
xor
mov
leave
test
lcall
mov
sarb
xchg
fisubrs
add
add
cmpsl
sub
out
jb
ljmp
push
fbld
das
sbb
or
cli
adc
test
dec
add
dec
adc
sbb
ljmp
cmpb
mov
das
ret
mov
loop
stos
std
xor
xchg
dec
inc
mov
jecxz
out
xchg
jns
mov
mov
test
or
lods
popf
movsl
out
push
movsl
pop
cmp
sbb
int
js
add
sbb
mov
movsl
xor
js
ds
cmp
xlat
push
ss
arpl
add
out
scas
add
sbb
jo
inc
rclb
pop
and
xchg
pop
mov
mov
mov
pop
inc
sarb
cmp
in
xor
test
cmpsb
ss
pop
cltd
ja
add
mov
out
mov
add
push
insb
test
mov
imul
mov
test
xchg
pushf
mov
sbb
or
stos
push
cmp
pop
outsl
rorb
stos
jmp
sti
test
into
jg
loopne
inc
push
xchg
sarl
push
les
sbb
xchg
jo
cmc
js
xchg
jecxz
mov
or
shrl
cmpsl
test
and
nop
daa
jle
mov
data16
push
out
inc
inc
dec
mov
in
outsl
adc
into
adc
daa
inc
icebp
push
inc
and
stos
int3
out
adc
mov
dec
mov
insl
stos
pop
lcall
sbbl
cli
cli
adc
cmc
lahf
lcall
cmp
fwait
andb
mov
inc
and
adc
adc
mov
cs
mov
lock
or
cs
out
mov
aad
xchg
fdivrl
addl
push
cmp
leave
test
es
push
adc
cltd
mov
leave
fucomi
pop
les
add
test
xor
add
bound
add
jns
mov
rcrl
mov
cltd
imul
push
out
hlt
pop
mov
cmp
pop
jl
dec
pop
sub
and
add
mov
and
jne
aas
gs
push
aas
push
cltd
jno
dec
inc
out
pop
xchg
sub
sub
mov
inc
adc
int
dec
ljmp
mov
bound
fcoms
push
test
add
mov
sarl
iret
mov
fninit
fisubl
sbb
popl
cmc
ror
mov
sti
in
sub
mov
adc
iret
push
hlt
cs
mov
outsl
add
popf
mov
test
push
jb
sbb
movb
imul
cmp
fimuls
mov
add
pop
pop
fdivrl
dec
ss
dec
loope
push
push
push
sbb
rorb
aad
ja
dec
mov
cmp
jne
push
mov
mov
push
and
fcmovne
repz
inc
fsubl
fiadds
add
dec
mov
adc
push
shl
jg
mov
pop
test
push
enter
stc
and
cmp
jns
push
lds
shlb
inc
mov
sahf
pushf
push
xor
rorb
adc
inc
lods
mov
in
les
pop
data16
rol
ret
lcall
and
dec
ja
inc
ret
mov
and
sub
mov
cmp
xchg
fdivrl
jnp
lret
in
sub
and
mov
xor
rol
and
jo
imul
mov
ds
mov
out
stos
dec
cmp
push
sub
mov
stc
int3
adc
mov
fnstsw
in
stos
mov
jno
xor
pop
sub
mov
pop
dec
sti
inc
notb
loopne
push
pop
out
add
cmpsl
in
mov
pop
fsubr
pusha
xchg
popl
test
dec
les
sub
insl
pop
aam
lods
adc
jno
fdivr
mov
sbb
push
mov
add
or
mov
pop
mov
or
mov
sar
pop
sub
inc
dec
mov
cli
dec
pxor
sbb
or
shll
dec
pop
dec
fdivrs
ffree
mov
incb
mov
push
enter
fs
pop
nop
das
pop
inc
sub
mov
xor
and
rclb
cmpb
mov
add
and
push
rcr
pop
xor
test
xor
lcall
ja
jno
mov
scas
mov
pop
dec
cmp
jecxz
inc
mov
insb
mov
lock
xor
std
dec
enter
mov
xchg
dec
jecxz
cltd
inc
dec
movsl
mov
lcall
cs
add
push
mov
adc
xor
push
mov
shr
xor
test
xor
bound
enter
imul
sub
push
lds
pop
repz
xchg
fisubrs
fisubrs
pop
mov
fs
and
loopne
imul
movsb
movsl
xchg
jne
xor
test
push
roll
popf
pop
mov
out
shrl
pop
jnp
repnz
adcl
inc
jg
sbb
or
mov
pushf
mov
sahf
jns
jge
iret
ficompl
cmp
stc
dec
dec
loopne
cld
divl
lods
sbb
or
fldl2t
jns
xorb
pop
adc
jmp
test
std
push
cmp
push
jae
sbb
adc
icebp
sub
mov
mov
scas
and
nop
jb
les
mov
scas
pop
arpl
cwtl
jle
loope
test
out
scas
call
or
stc
pop
dec
xor
inc
push
call
mov
and
dec
das
jnp
repz
cmp
js
inc
xchg
sbb
and
add
aad
cmpsb
mov
inc
movsl
adc
sub
push
loope
jle
xor
xor
cmp
pop
dec
xor
mov
scas
mov
mov
bound
mov
int3
pop
mov
pop
xchg
add
sbbl
xchg
cmp
sahf
sub
lret
pop
outsl
cmp
xchg
shlb
mov
fcoms
xchg
sbb
in
mov
enter
add
and
push
and
sbb
ss
push
std
dec
scas
sub
mov
xor
mov
gs
lret
sbbl
jmp
jae
dec
jno
mov
shlb
xchg
jae
pop
and
filds
stc
and
test
pusha
fstp
jns
ret
or
rcrl
out
mov
sub
shlb
jne
lods
dec
gs
jmp
arpl
fistpl
xor
nop
and
xchg
sbb
shll
decb
xchg
cli
lahf
adc
nop
pop
sarl
cltd
add
addr16
jae
mov
mov
sbb
nop
sub
test
adc
jno
jne
sbb
ret
icebp
cmpsb
insl
mov
out
push
and
in
adc
repnz
adc
jns
pop
loop
cmc
inc
mov
movsl
rcl
lods
cmp
xchg
push
mov
iret
push
in
push
pusha
ret
aas
cmp
xabort
and
pop
mov
xchg
or
and
js
lret
daa
mov
xchg
mov
jmp
aas
cltd
adcl
add
mov
scas
sahf
nop
inc
dec
shrl
pop
lock
cmp
leave
out
dec
push
sbb
or
leave
mov
sub
mov
aad
repz
pop
jge
sti
cmp
dec
jmp
pushf
gs
insl
mov
pusha
adc
or
jle
inc
es
xchg
rcrb
pop
sub
std
loop
mov
pop
or
stc
in
dec
and
push
mov
scas
pop
sub
sbb
jp
inc
xchg
mov
inc
dec
inc
cmpsl
dec
hlt
pop
xchg
mov
std
and
ljmp
and
xchg
xor
mov
xchg
jp
mov
mov
mov
lds
popf
cmc
mov
std
ja
sbb
push
daa
fnstcw
loop
jecxz
xor
xchg
daa
ss
shll
mov
fcomip
bound
cld
add
mov
mov
cmp
rclb
or
sub
mov
push
clc
mov
fimull
adc
movsb
divb
sbb
cmp
je
pushf
sub
out
mov
pop
iret
xchg
add
add
cli
out
ljmp
dec
dec
dec
adc
add
arpl
stos
hlt
outsl
cld
fstp
mov
pop
sub
pop
out
push
add
imul
and
add
push
sub
jno
int3
jge
push
stos
repnz
adc
cmc
push
pop
mov
push
stc
inc
loop
pop
jb
push
jmp
test
dec
outsb
cmp
cs
outsl
loopne
pop
mov
pop
xor
je
into
and
loopne
sbb
popa
mov
jmp
scas
clc
sahf
xchg
fdivr
mov
loope
xor
and
xchg
push
adc
mov
mov
sbbb
int
push
testl
insb
inc
add
mull
mov
fdivrl
clc
and
mov
in
aaa
add
imul
insb
out
push
lods
fcmovbe
push
js
andl
push
add
sahf
mov
ret
outsl
inc
cwtl
fcmovu
movsl
dec
je
add
mov
adc
push
pop
sub
sub
shll
dec
icebp
cmc
and
mov
mov
clc
sahf
aaa
add
lahf
mov
inc
adc
repz
jecxz
mov
call
daa
jae
arpl
inc
dec
and
or
out
jge
test
daa
rcll
nop
dec
sti
push
push
or
loope
imul
cmc
pop
adc
mov
inc
and
dec
pop
aas
fs
sbb
push
cs
mov
cltd
push
mov
xchg
xrelease
sub
sub
cmp
inc
push
xchg
popa
jmp
pop
test
call
loopne
inc
test
xchg
add
xor
insb
add
push
pusha
test
mov
cmpsb
cmpsb
sub
testl
test
cmp
or
cmp
xchg
mov
or
jge
pop
aad
arpl
push
or
mov
xchg
aas
daa
dec
ret
sarb
in
push
cli
and
add
pop
sbb
pop
test
push
xor
cmp
imulb
loope
mov
push
test
mov
lret
xlat
movsb
lret
push
test
xchg
push
imul
push
inc
sub
mov
mov
in
cli
addr16
mov
dec
and
daa
fildl
repnz
fsubs
sahf
stos
aam
arpl
jo
mov
aaa
sub
sbb
pushf
inc
push
loope
cmp
xchg
mov
and
and
addb
or
daa
dec
bound
iret
and
push
call
mov
sti
xor
in
in
jb
stos
test
movsl
push
int3
in
ret
imul
orb
dec
jno
in
shrl
mov
mov
scas
rolb
mov
mov
orb
mov
xor
sbb
dec
and
pop
andl
movsl
clc
out
add
inc
das
je
xor
lock
imul
or
stos
dec
jge
push
test
xchg
cmpsl
mov
in
cmc
mov
adc
mov
leave
xor
int
xchg
pop
std
push
in
mov
sbb
push
sub
cld
rcll
mov
push
enter
stc
popf
cltd
and
mov
mov
inc
mov
sar
add
push
pop
ror
rcll
dec
jg
fnstsw
dec
bswap
inc
adc
or
adc
fwait
sbb
addr16
pop
jbe
xchg
cmc
push
jecxz
les
pop
adc
jecxz
cmp
aam
shrb
gs
cmpsl
cld
cmp
outsb
pushf
xchg
mov
inc
scas
push
adc
rclb
xor
mov
vpmaxub
dec
out
dec
inc
roll
sbb
inc
lods
mov
push
xchg
out
into
fs
cld
xchg
xlat
xchg
das
dec
mov
movsb
fcmove
rorb
fldl
mov
cwtl
fisubrl
enter
pop
movsb
shlb
cld
movsb
push
stos
xchg
and
inc
mov
xor
mov
sbb
les
ljmp
mov
cmc
fxch
mov
push
inc
or
outsl
cmp
sbb
jne
cmp
aad
testl
xchg
sbbb
in
out
cmpsb
fcmovbe
or
mov
sarb
paddw
mov
fdivrs
pushf
cmp
cmp
push
std
pop
jg
int3
jno
mov
jp
dec
jg
jp
jle
popf
adc
xchg
lret
call
pop
cmpsl
xchg
xor
sbb
ret
ljmp
leave
push
and
rdmsr
add
testl
dec
ret
mov
lcall
aam
inc
int3
jp
in
or
clc
fdivrl
out
jno
pusha
or
testb
dec
mov
mov
xchg
pop
push
mov
vmwrite
test
jns
sub
lret
daa
orl
sub
ret
lahf
sbb
jle
sub
fidivs
imul
pop
test
loop
jecxz
pmulhw
popl
cld
scas
clc
fs
out
push
lret
push
add
push
daa
int3
jne
mov
mov
sbb
pushf
xchg
aaa
mov
cmpsl
shrb
in
cmp
dec
pop
dec
push
outsl
lods
pop
jno
sbb
iret
ljmp
cli
les
scas
cld
imul
adc
in
mov
push
or
lcall
scas
or
jne
mov
pop
mov
jbe
sti
or
adc
push
insb
xor
pop
push
loop
lock
xor
add
test
repz
leave
and
pusha
sbb
stc
xor
shl
xor
fcmovb
sbb
aam
xor
cmc
inc
jno
and
in
fistl
js
mov
xchg
mov
fistl
adc
sub
jg
jge
and
repnz
adc
push
dec
add
imul
xchg
in
cmp
hlt
adc
add
or
je
dec
adc
add
mov
std
gs
and
sarb
and
sarb
or
adc
cltd
push
stc
out
pop
hlt
cmpb
push
ret
xor
pop
mov
pop
mov
add
les
stc
ljmp
inc
imul
pushf
jne
mov
mov
jp
out
and
lahf
ds
jns
lods
fsts
hlt
add
fwait
sub
mov
xchg
aaa
mov
in
pop
cmp
xchg
fdivrp
jmp
push
mov
std
sub
movsb
pusha
sar
push
xchg
out
test
repnz
fwait
push
aad
out
adc
shl
and
pusha
lahf
out
inc
push
ret
xchg
ss
loop
add
or
jl
jae
cmpsl
cld
or
mov
sub
dec
arpl
adcl
pusha
ds
in
add
pop
dec
fldenv
jae
ja
pop
or
repz
pushf
enter
sub
adc
gs
pop
mov
js
sub
aad
sarb
jge
adc
jge
sub
fisttps
mov
xchg
outsb
mov
enter
push
data16
dec
popl
jae
adc
fsub
lcall
test
outsb
hlt
adc
fcoms
test
xchg
ss
mov
mov
mov
fcoms
aam
and
fsts
test
sbb
lods
xor
adc
in
or
fiaddl
mov
outsl
mov
xor
mov
es
xchg
ret
lods
sbb
cmp
cmpb
add
cmpsb
bound
in
cmp
int
xchg
pop
inc
mov
cmpl
mov
sub
push
cwtl
cmp
or
pop
inc
dec
les
pop
ja
stc
xor
and
mov
jge
in
bound
sub
sub
mov
and
xchg
jmp
sar
and
lcall
sub
xor
or
or
rorb
jp
jg
mov
sub
inc
test
dec
sbb
add
sbb
aaa
inc
pop
nop
sbb
rorl
iret
movsl
push
push
push
mov
shl
out
push
insl
jmp
jbe
negb
jo
jmp
out
push
lret
cmp
inc
jg,pn
cmp
cmp
xorb
inc
sbb
fstps
xchg
inc
add
out
lds
sbb
sub
mov
arpl
es
pushf
pop
out
ffree
dec
and
mov
icebp
sub
cmp
test
cmp
jl
add
ljmp
cmpsb
cmp
scas
mov
jle
mov
negb
inc
xchg
inc
sbb
jp
push
mov
xchg
icebp
adc
mov
in
adc
movsb
fwait
je
jne
pop
stc
jg
aas
ret
arpl
insl
leave
mov
shlb
sbb
cld
sub
or
push
lods
push
testl
mov
jle
ljmp
push
xchg
scas
cmpsb
pop
and
or
adc
cmp
and
mov
in
ljmp
jbe
xchg
xchg
std
es
and
pushl
pushf
xchg
xor
icebp
arpl
inc
loope
jg
add
jbe
das
mov
jbe
jo
mov
leave
test
xor
sbb
mov
mov
pop
pop
ud2
sub
cwtl
cli
in
jmp
push
mov
mov
cmpsl
xlat
jne
clc
lret
mov
movsb
fcom
call
pusha
xor
test
pushf
jae
sub
daa
ljmp
sub
and
inc
lds
cli
mov
js
insl
cmpsl
add
and
scas
lahf
lret
add
das
xor
xchg
decb
jp
lds
xlat
nop
es
fdivrl
and
push
sbb
jnp
imul
push
mov
ds
or
rcrb
pop
or
pop
pop
jl,pn
inc
or
push
inc
push
call
fnstcw
ficomps
cmp
fcmovu
push
adc
xchg
jl
pand
cmc
mov
or
xchg
push
fidivl
dec
push
in
popa
in
pop
popa
decb
imul
repz
cltd
adc
jl
and
or
les
movsb
test
daa
loope
mov
push
mov
pop
pop
cmp
xchg
out
stc
hlt
cmp
pushf
mov
xor
fstpt
aad
cli
aas
cmp
ret
push
sbb
sbb
sub
mov
int
imull
push
mov
xchg
inc
popa
push
outsl
mov
dec
sbb
jg
es
jle
cld
adc
icebp
pop
outsl
cmp
insb
mov
jo
inc
add
dec
mov
sbb
mov
divb
jge
adc
mov
sahf
jb
popf
xchg
rolb
fsubl
dec
sub
push
stc
jno
mov
push
test
add
adc
insb
test
int
jp
testl
mov
pop
mov
call
mov
icebp
pop
ror
imul
and
outsb
inc
push
mov
inc
pop
testl
add
fmulp
jg
andl
fsubl
rorb
inc
popf
adc
mov
pusha
jp
fmull
add
and
adc
call
call
out
sub
gs
push
cs
lret
gs
movb
in
push
rcrl
push
adc
dec
or
mov
fwait
sbb
xor
push
xchg
bound
adc
fimull
in
insl
int3
jbe
cmp
xor
mov
sarb
pop
xlat
add
add
cmpsl
sbb
inc
mov
pop
lcallw
adc
fsubs
inc
fsubp
sbb
add
ret
jae
shll
iret
mov
and
bswap
xchg
inc
scas
out
fcom
dec
and
push
pop
mov
ds
sub
or
sbb
popa
repnz
dec
push
and
cld
inc
mov
mov
add
and
inc
cmp
stc
add
pusha
pop
bound
and
sub
jmp
add
rclb
jo
mov
mov
loopne
mov
xchg
push
jne
out
xor
orb
push
jge
inc
ss
inc
pop
pop
lcall
or
cltd
out
adc
test
in
mov
mov
clc
negb
xor
jp
scas
adc
in
cmp
sahf
inc
aas
dec
dec
fsts
jns
mov
ja
inc
je
mov
sub
std
inc
cmpsl
nop
jmp
xor
popf
es
xchg
cli
and
jne
inc
xlat
into
or
cli
fcomps
xor
data16
imul
jl
das
mov
clc
cltd
mov
cmp
cld
in
mov
mov
fsubl
fsub
jecxz
mov
mov
insb
or
ret
gs
mov
fwait
fwait
insb
rorb
and
xor
pop
inc
or
lret
add
dec
inc
push
mov
cmp
fsubrl
mov
jbe
sub
mov
cmp
rcll
cmp
mov
cmp
push
jns
dec
leave
inc
js
enter
cmp
sbbl
cmc
into
lock
stos
jo
mov
sub
leave
adc
cmp
sbb
push
jno
int3
mov
addl
subb
jp
jae
fucomip
jge
test
add
scas
push
jo
int3
push
mov
insl
xchg
leave
int
lods
sar
popa
lods
sti
stc
cmc
jae
adc
pop
xchg
cmp
push
jge
pop
adcb
in
clc
test
lds
cmc
or
aaa
push
sbb
mov
mov
pop
push
lock
mov
xchg
cmpb
call
ret
pop
lahf
les
ret
arpl
loopne
je
or
lock
loop
fmulp
nop
lcall
dec
inc
and
cmp
ljmp
out
xor
daa
inc
es
insl
mov
cmpsl
cmpsb
es
inc
nop
push
outsl
les
fldl
out
cmpsb
adc
arpl
push
jp
incl
call
pop
icebp
je
arpl
aam
into
push
aaa
repz
test
shrb
pop
cld
sbb
pop
jmp
xchg
xchg
pop
jge
mov
cld
sub
fdivs
mov
into
or
cmp
js
pop
jno
or
xor
xchg
pusha
or
fcomp
jg
out
inc
pop
sub
fs
xchg
fldcw
rcrl
in
cmp
loopne
xor
loope
jne
fs
push
data16
sub
push
adc
pop
shll
dec
lods
ret
nop
ja
push
mov
pop
inc
or
pop
lcall
mov
sti
in
jp
mov
popa
std
dec
movsl
dec
insb
loopne
test
push
js
loope
mov
negl
xlat
dec
int3
push
shlb
leave
or
test
xchg
clc
gs
fisttpll
xor
lods
mov
mov
adc
aas
xor
inc
mov
cs
shlb
push
in
mov
xor
cmp
and
adc
aam
sti
outsl
push
insl
js
push
pop
popf
xchg
pushf
adcb
dec
and
outsl
int
std
daa
xchg
mov
sbb
pop
dec
jae
aaa
pop
jo
lea
xor
jns
idivl
add
jmp
xor
out
xchg
adc
xchg
push
sub
dec
or
cmpsl
cld
shrl
inc
ja
mov
jo
mov
jae
stos
aam
or
inc
pop
out
mov
scas
or
mov
xor
clc
adc
dec
fisubl
pop
movsb
sub
pop
jb
in
les
pop
cmp
xorb
ss
mov
addb
dec
aaa
and
jae
mov
jae
jo
leave
cmp
jne
fcoml
pop
push
fdivs
ja
outsl
outsl
xlat
mov
push
cs
addr16
gs
mov
add
mov
filds
shll
cmpsb
mov
push
mov
or
mov
sbb
lcall
jno
mov
cmp
mov
jbe
orl
loop
xor
push
nop
and
fmuls
lods
cmp
xchg
lods
loopne
inc
mov
in
push
shrb
cmp
std
pop
rcl
pusha
cmp
cmp
or
inc
dec
test
add
mov
dec
mov
jo
push
and
aas
cs
imul
ljmp
add
xor
sbb
adc
leave
stc
pop
js
jmp
dec
insl
dec
sbb
popa
jge
jecxz
push
fsubrs
push
ret
sub
push
bound
dec
sbb
aad
adc
nop
int3
mov
das
or
jp
lods
inc
xchg
aam
push
add
leave
mov
xor
mov
les
sub
pop
mov
mov
test
and
shlb
sahf
nop
dec
aaa
mov
fwait
mov
pushf
orb
sbb
ja
and
push
into
outsl
and
lds
dec
cltd
push
addl
sar
bound
sbbb
push
jns
int3
and
add
loopne
dec
cmp
xor
popa
icebp
and
mov
adc
in
xor
fisubrs
rcrl
movsb
cltd
popf
add
dec
mov
sub
jmp
dec
aaa
scas
sbb
xor
jo
test
pop
pop
fcomi
aam
hlt
jle
add
cmp
rol
cli
loopne
fwait
mov
dec
inc
ljmp
push
aaa
push
mov
sub
data16
aaa
movb
mov
lret
mov
pop
jecxz
jmp
jg
stc
js
in
dec
xor
ljmp
std
mov
enter
movsb
loop
scas
inc
es
fcomps
arpl
in
or
or
in
std
call
mov
outsb
fiadds
mov
xchg
ret
popa
sbb
cmpsb
imul
jo
push
in
out
pusha
fisttps
jns
in
sahf
popl
pop
cmp
mov
pop
or
push
lods
add
scas
xchg
push
in
jno
stos
and
pop
lcall
xchg
xor
out
je
aas
outsl
mov
cmc
or
and
sub
jne
cwtl
jge
sub
push
xchg
loope
decb
mov
push
lahf
enter
add
ret
add
jne
mov
or
xchg
push
andb
push
sub
test
pop
mov
sub
jo
or
stos
or
icebp
int3
imul
add
clc
movsl
mov
push
shrl
fs
call
fistpll
icebp
cmp
je
mov
dec
push
xchg
or
negl
push
pop
and
xlat
sub
idivb
out
idiv
test
sbb
ljmp
in
sub
add
inc
push
testb
fwait
call
dec
cmp
or
push
xchg
call
aad
js
movsl
js
jae
push
aaa
out
nop
outsb
and
jnp
jmp
arpl
jno
repnz
adc
or
mov
xor
mov
inc
pop
and
add
xor
cmp
pop
clc
xor
nop
movsl
aad
jge
push
imul
test
or
stos
jae
nop
out
fisubrl
or
xor
mov
inc
pop
mov
mov
inc
fmull
mov
pop
insb
mov
hlt
scas
imul
push
mov
pop
lock
ja
mov
xor
pop
in
inc
cmp
mov
and
lods
inc
push
jle
mov
negl
testb
xlat
adc
arpl
fstpl
rolb
test
adcl
dec
sbb
pop
and
cmp
push
mov
insb
popa
push
and
add
adcb
aam
push
cmc
lcall
loopne
sbb
mov
in
inc
orl
dec
into
inc
xchg
insb
test
int3
dec
dec
out
adc
adc
dec
mov
dec
js,pt
daa
pushf
aam
pop
or
roll
pushf
pop
mov
and
hlt
mov
push
inc
cmpl
mov
or
test
mov
loop
mov
sbb
push
es
inc
outsb
subb
mov
inc
sub
jmp
ret
ja
inc
jge
vpshaq
rcrb
jmp
inc
xchg
jmp
push
jp
popa
lods
inc
push
pop
ja
fs
cmp
dec
jns
mov
icebp
loope
sahf
sbb
fs
xchg
and
jle
scas
lret
xor
iret
jp
dec
cmc
push
in
pop
mov
inc
orl
add
fsubr
cmp
sti
js
nop
ficoml
push
mov
push
and
sub
mov
out
int3
push
adc
sub
popa
cmp
sbb
test
push
mov
dec
ljmp
pop
fildll
push
add
aas
in
test
sub
sbbb
and
lret
sbb
add
mov
cmpsl
adc
mov
jecxz
repz
roll
adc
mov
js
sahf
lcall
lods
dec
icebp
call
adc
pop
cmpsb
mov
mov
je
inc
pop
lods
sub
fiadds
xor
push
sbb
or
jp
out
adc
pusha
mov
dec
sub
cmc
or
sbb
ja
fimuls
inc
lret
add
flds
pop
mov
mov
int3
mov
push
add
data16
pop
and
dec
pop
push
aad
push
pushl
jl
movsl
jg
pop
fisubl
mulb
imul
fwait
mov
sub
rorl
test
pop
outsb
or
jmp
mov
lcall
out
fdivs
inc
push
cmpsb
jno
std
and
ret
sub
insb
outsl
int3
fmull
add
sahf
lret
repz
push
lcall
pushf
xchg
push
mov
sti
imul
in
insl
or
clc
cltd
call
jo
mov
inc
ljmp
stos
sub
les
into
jne
mov
or
mov
mov
push
xor
jmp
and
mov
mov
mov
adc
add
mov
ret
imul
jle
repnz
sbb
aas
lcall
nop
out
push
loopne
lahf
outsl
movups
mov
ja
push
add
sbb
shrl
xchg
repnz
cmp
or
sub
sbb
pop
loop
push
pop
insl
pusha
roll
stos
mov
fstps
test
lods
test
jecxz
das
sbb
in
push
ds
bound
and
inc
add
lds
lret
fwait
push
sbbl
pop
in
adcb
and
div
mov
sbbb
mov
lahf
call
mov
movsl
ds
sbb
cwtl
jnp
or
stc
es
sbb
add
pushl
mov
fadd
pop
out
movsb
outsb
push
pop
push
jg
push
fsub
hlt
pop
xorb
xchg
fscale
popa
aas
xchg
mov
inc
pop
push
test
js
jge
repnz
xlat
fsubrl
in
iret
out
das
jp
fs
outsl
addb
insb
in
rorl
mov
in
add
mov
mov
jnp
push
mov
mov
mov
adc
pop
jle
mov
sub
loopne
in
test
mov
loop
test
in
jnp
xchg
pop
xor
xorb
fistl
js
jno
cmp
in
imul
xor
inc
ja
push
xchg
arpl
dec
mov
lret
rcl
xchg
lea
sub
out
mov
jp
test
arpl
hlt
int
imul
orb
inc
or
sub
or
push
sbb
or
stos
sub
lea
pop
imul
jne
inc
lea
ds
mov
ljmp
addl
mov
pop
scas
fistps
stos
add
flds
hlt
inc
push
xor
jnp
insb
fcoml
repnz
dec
pop
test
fstpl
xchg
dec
and
fidivrl
loope
mov
or
sub
hlt
dec
pop
adc
jmp
adc
xchg
addr16
add
test
shll
add
mov
in
aad
mov
push
in
pop
cltd
dec
das
inc
clc
nop
clc
fidivrs
xchg
lods
pop
dec
lret
lock
mov
pop
inc
jg
dec
cs
push
les
mul
mov
inc
jbe
push
push
fwait
movsb
jns
add
xchg
sbb
mov
mov
xor
repnz
arpl
cmp
pop
repnz
dec
aam
pop
xor
and
rol
nop
mov
imul
xor
je
js
sub
call
aad
and
insl
jns
jo
cwtl
ss
cltd
dec
in
int3
add
imul
addr16
lcall
add
pop
pop
cmp
repz
adc
pop
or
fildl
loope
pop
mov
or
adc
cs
das
sbb
dec
jne
insl
xchg
mov
movsl
jns
cli
sub
loop
push
ss
pop
cwtl
mov
or
ds
pop
repnz
and
movsbl
jae
pop
aas
and
xor
sahf
jecxz
aam
xor
mov
mov
add
jge
mov
mov
xchg
adc
xchg
mov
dec
pop
jno
loop,pt
call
mov
xchg
ror
loope
imul
cmpsb
or
sbb
mov
scas
pop
push
inc
push
pop
mov
or
int
cmp
fdivl
cltd
push
push
or
int3
or
cmpsl
in
jl
into
dec
xchg
mov
fimuls
mov
out
idivl
cmp
dec
aas
sub
or
pushf
into
or
xchg
or
sub
jb
jbe
or
mov
out
xor
dec
sahf
popf
cmpsl
inc
jg
pop
adc
ljmp
insl
push
sbb
addr16
pop
push
add
sbbl
pop
pop
jae
pop
push
mov
cld
test
test
leave
pop
sahf
rcll
add
test
lods
adc
fcompl
xchg
xor
push
sbb
shr
in
sbb
cwtl
imul
xchg
pop
push
mov
xlat
in
adc
sbb
dec
in
ret
sub
sub
adc
ljmp
pushl
das
mov
adc
pop
jg
jnp
addr16
xor
cmp
ds
bswap
retw
cs
mov
mov
out
stos
cmp
loop
adc
push
rolb
mov
out
int
mov
or
jecxz
pop
scas
inc
out
rcpps
cmp
and
movsl
imull
pop
add
stos
sub
mov
mov
sti
jae
inc
pushf
pop
ret
into
cwtl
pusha
sub
and
in
cmp
and
pushf
or
sbb
movb
add
jmp
fstpl
das
jecxz
push
pop
ss
dec
cmpsl
sbb
pop
adc
xchg
or
lcall
xchg
mov
add
add
ss
xchg
call
mov
das
pusha
dec
lods
push
mov
and
push
nop
enter
xor
push
inc
and
int
and
sub
cmpsb
lahf
ss
pop
lds
inc
ja
shlb
out
xchg
mov
ss
and
imul
xchg
mov
jp
xchg
repnz
cld
mov
test
out
loopne
sub
dec
scas
orb
insl
pushf
loope
imul
mov
or
xor
aaa
iret
cwtl
dec
sbb
fistl
xor
stc
mov
mov
cmc
sahf
inc
dec
je
ljmp
icebp
rorl
mov
aaa
cltd
dec
stc
cmp
jo
push
or
jnp
inc
mov
mov
dec
movsl
cltd
shr
sub
xor
lcall
dec
mov
cmpsb
mov
and
call
push
gs
push
xchg
xor
adc
push
ret
cmpsl
lahf
mov
jl
int3
addl
fwait
pop
movsl
popa
push
repz
xor
popl
loopne
jecxz
shll
add
or
adcb
je
andl
lret
cmp
leave
or
mov
es
dec
inc
fiaddl
movsl
mov
push
xlat
pop
leave
inc
jbe
add
jno
mov
inc
add
in
and
fsts
stos
mov
and
outsb
std
pop
mov
mov
adc
mov
mov
ret
sti
mov
jns
inc
and
add
or
mov
add
sub
movsl
and
and
jns
or
nop
int
gs
fcoml
aam
in
rcrl
xor
sbb
inc
push
fcmovb
inc
stos
mul
rcrb
or
push
mov
cmp
sbb
pop
push
fucom
in
lea
out
jbe
dec
xchg
add
out
lods
xchg
stos
mov
adc
in
pop
pop
sti
push
test
push
shll
pop
pop
mov
inc
fidivrl
mov
xchg
hlt
push
and
adc
pop
inc
add
pushf
cmp
xchg
lods
in
mov
rclb
sub
jp
dec
jae
mov
mov
xor
inc
adc
mov
aad
mov
aad
adc
outsl
je
or
xchg
mov
mov
push
arpl
push
xor
pop
or
aaa
xchg
mov
cmp
sti
mov
outsb
fsubs
mov
xchg
jne
cwtl
pop
xchg
jmp
das
sub
lret
es
xchg
std
push
pusha
iret
stos
inc
mov
fucomip
cmpsb
ficoms
pop
pop
movl
xor
or
push
and
adc
mov
cld
pop
ja
aam
or
and
jno
enter
jge
sbb
popa
mov
and
cli
xchg
xchg
and
and
adc
adcl
inc
ljmp
and
leave
sub
test
push
pop
sub
call
and
sub
xor
lcall
out
mov
repz
xchg
mov
lahf
stos
inc
mov
in
shlb
sbbb
xor
subb
mov
pop
fbld
sub
ret
dec
in
mov
cmp
xchg
pop
inc
dec
inc
inc
adc
cmc
in
inc
push
stc
popl
stos
int3
or
data16
jmp
in
or
or
pop
testb
hlt
jecxz
dec
shrb
sbb
testl
sbb
mov
jno
sub
jg
pop
leave
les
mov
pop
jg
jmp
sbb
mov
push
fdivrl
mov
sarl
fsubs
loop
imul
cs
jle
push
test
xchg
mov
or
cmpsb
mov
sahf
jb
sub
sub
cwtl
sbb
in
imul
mov
gs
or
and
cmp
xchg
jle
sub
movsb
xor
lahf
mov
stos
jo
jnp
mov
das
shlb
out
push
xor
cmp
stc
outsb
sbb
ret
divb
stos
addr16
push
arpl
lds
out
cmp
lret
jge
out
push
idivl
push
out
leave
mov
and
icebp
jge
ja
pop
xchg
aam
mov
mov
push
rorb
and
xchg
cmp
xor
test
icebp
aaa
stos
or
or
adc
jecxz
adc
fcmovnu
sbb
jg
mov
shlb
rcrl
cli
test
arpl
adc
stc
dec
dec
push
stc
popf
add
push
das
lahf
add
push
sbb
add
dec
and
xchg
cmp
nop
into
cmp
test
call
fcompl
and
ret
dec
loope
adc
push
dec
mov
int
mov
seto
and
jo
sarb
lahf
cmpsb
fucomp
jnp
ljmp
mov
aas
and
inc
lret
inc
rcll
fmul
mov
in
pop
jle
dec
jb
arpl
arpl
fidivrl
pop
hlt
ret
jge
lock
mov
lret
adc
fidivs
fs
or
mov
xor
pop
outsb
ss
push
add
fistpll
out
sbb
push
sub
xchg
cli
repnz
add
popa
adc
sub
nop
mov
sti
pop
xor
fistpl
cs
ss
out
faddl
cmpsl
filds
mov
repnz
fcoms
push
ljmp
mov
xor
xlat
fcoms
xor
sub
test
clc
adc
sbb
in
in
mov
fmuls
sub
lock
lret
inc
push
inc
aaa
out
pop
sbb
int
add
push
cmc
cmc
sub
and
ja
mov
adc
jp
imul
enter
mov
sbb
cmp
inc
or
inc
mov
xor
sbb
add
fcompl
cs
xorl
sub
pop
adc
xor
out
jmp
push
mov
mov
dec
and
sti
jae
add
imul
mov
lods
fists
and
xor
dec
cmpsb
lahf
int
test
les
pop
insb
cmpsl
inc
cmp
jge
cmpsb
inc
push
in
in
int
push
out
out
test
pusha
test
mov
call
mov
mov
or
ja
lods
jns
in
addr16
mov
fwait
mov
mov
faddl
cmp
dec
mov
std
inc
arpl
rcrl
and
enter
dec
mov
fistpl
push
and
outsl
out
inc
ss
sbb
jo
outsb
aaa
dec
in
sub
pusha
push
push
xchg
pop
xchg
enter
cmpsb
jno
shll
fcomip
fwait
push
loopne
mov
sti
mov
and
add
lret
mov
inc
imul
arpl
loope
fdivr
pop
in
adc
scas
xchg
push
movsl
dec
cmc
lods
dec
fsts
outsl
subl
roll
jae
push
mov
lds
mov
enter
lea
jbe
call
js
out
sub
mov
inc
mov
and
or
rcll
dec
add
int
xchg
and
loope
loop
pop
jae
fisttpl
mov
adc
dec
push
sarl
adc
cmp
in
or
stos
std
xor
add
ret
filds
sub
movsl
pop
in
sub
jmp
imul
mov
dec
and
xchg
add
in
sahf
mov
out
insb
mov
add
incl
cltd
mov
dec
pushf
jmp
xor
add
mov
mov
mov
xchg
insl
mov
cmp
js
arpl
fdivs
lock
loopne
ljmp
sti
sbb
js
add
imul
nop
jle
inc
scas
outsb
mov
dec
sarl
imull
imul
inc
push
sub
dec
fisubl
mov
nop
jne
movsl
daa
jle
adc
xchg
pushf
mov
xor
xchg
and
sbb
dec
scas
pusha
outsl
xchg
xchg
mov
daa
mov
clc
xor
js
lods
jbe
popf
pop
dec
mov
push
rorb
inc
pop
stc
scas
add
nop
stc
fwait
sub
push
or
jb
aaa
jnp
mov
mov
add
inc
and
xor
mull
jns
sti
add
test
or
call
jae
repnz
stos
mov
addr16
xor
std
pusha
stc
add
jg
dec
dec
ficoml
mov
xchg
fyl2xp1
and
mov
lea
arpl
test
ljmp
out
pop
iret
sub
shrb
mov
rclb
mov
mov
jge
test
jb
cmp
movsl
push
or
lret
pushw
popa
shlb
aas
add
aam
xor
mov
lcall
imul
leave
insb
mov
dec
stos
dec
movsl
push
push
test
xor
ljmp
or
xchg
mov
xchg
cld
das
sbb
cs
out
jnp
sti
es
cmp
shrl
sub
or
fwait
out
xchg
add
or
inc
and
xchg
les
jmp
roll
scas
jp
push
hlt
lcall
cmp
jl
inc
cmp
lods
push
xchg
mov
xchg
dec
ss
rcll
adc
ljmp
in
adc
fisttps
ret
adc
arpl
scas
imul
hlt
mov
or
push
jge
pop
fisubs
ds
movl
inc
jmp
pop
fdivr
pop
dec
popf
sahf
fnstsw
xor
adc
cmpsl
jecxz
sarb
xchg
aaa
xlat
xlat
mov
scas
lret
sarb
lahf
and
jb
inc
inc
and
pop
cmp
xor
mov
test
push
inc
pop
xchg
jne
mov
sub
pusha
sub
mov
or
pop
cmpsl
push
hlt
movsb
gs
xchg
outsb
lcall
lret
inc
orl
jl
test
lods
leave
sub
pop
std
gs
and
jmp
scas
cmpsl
adc
in
loop
xchg
dec
xchg
into
adc
dec
sbb
mov
push
out
out
inc
jne
push
shrb
or
lcall
insl
jae
pop
jne
lahf
out
sub
dec
stos
in
mov
mov
decb
xchg
fisttpll
inc
cmp
and
or
add
int3
pop
mov
push
mov
adc
mov
pop
pop
pop
jge
icebp
loopne
scas
subb
cmp
xor
rclb
push
lock
xorb
adcl
shrl
xlat
push
or
lods
mov
testl
je
rep
lret
jns
fistpll
or
sub
cld
fwait
vpsubusw
ret
mov
sub
insl
and
xchg
pop
jmp
mov
jnp
inc
and
push
fldcw
js
ficompl
push
xchg
jae
mov
mov
dec
push
fidivl
repz
dec
push
add
das
dec
jne
into
enter
loop
lods
jo
loopne
aam
sahf
or
inc
push
imul
pop
push
and
idivl
dec
mov
mov
inc
hlt
add
or
pop
repz
pushf
clc
adc
out
into
inc
ds
pop
scas
rolb
jle
negl
notl
test
inc
pushf
mov
fadds
scas
lods
icebp
mov
sti
push
add
and
xchg
rolb
mov
mov
pop
cmp
jle
mov
xchg
push
out
adc
add
add
lods
out
jbe
cli
pop
jge
jo
int3
and
or
das
cmp
xchg
sarb
mov
mov
inc
jecxz
and
mov
add
pop
decb
dec
stc
mov
mov
pushl
sbb
les
lcall
iret
and
sub
lods
test
xchg
es
jp
sub
jle
or
je
sub
cmp
cs
push
lea
add
mov
iret
push
inc
mov
sbb
test
and
fwait
mov
cli
xor
aas
sub
scas
jp
sub
sahf
inc
incl
mov
lcall
imul
lock
inc
xor
xchg
scas
push
imul
sub
push
mov
cmp
ja
fwait
dec
rorl
test
xchg
sbb
add
in
shrl
sub
in
xor
xchg
shll
movsl
mov
sarb
into
pusha
xchg
shr
lods
xchg
outsl
mov
xchg
loope
and
lret
mov
clc
lods
add
mov
mov
and
std
in
movsl
xchg
aas
sbb
inc
push
pop
xchg
xchg
pusha
vdivsd
pop
pop
ret
xor
add
in
mov
add
sahf
enter
cli
dec
int3
pop
fmuls
test
dec
xchg
mov
or
or
les
shrl
cld
inc
xorl
add
sub
and
push
les
xor
aaa
inc
loopne
cmp
cmc
sbb
or
lods
subb
fxch
dec
mov
cmpsl
add
mov
in
sahf
cli
xor
xchg
loop
mov
mov
aaa
or
fsubrp
or
arpl
mov
insb
mov
or
sti
and
leave
cmpsb
subw
loopne
imul
ja
rorb
rclb
jnp
inc
inc
ja
outsl
ds
sub
rorb
arpl
mov
adc
dec
ja
ss
jb
out
cmp
mov
out
push
pop
int3
rcl
cmpsb
arpl
mov
xor
lahf
add
pop
dec
fidivrs
push
pop
dec
cld
mov
ja
and
fnstenv
fidivrl
mov
sti
popf
and
add
enter
arpl
je
arpl
xchg
in
or
mov
cmpsl
out
inc
test
je
mov
punpcklwd
sarb
pop
cmp
loopne
push
fimuls
std
push
fdivrl
jnp
daa
inc
lret
sarb
mov
pop
and
adc
cmp
aam
stos
mov
push
cltd
jno
xchg
dec
cli
sbb
ljmp
jecxz
cli
or
adc
insb
inc
ror
xchg
jle
mov
mov
hlt
cmp
jle
das
mov
cmp
lret
push
mov
xor
lods
sub
cmp
sub
push
sarb
adc
nop
ret
lods
xor
inc
push
jle
lret
mov
push
int3
lods
mov
into
icebp
std
mov
jle
loop
movsl
mov
jnp
add
iret
repz
push
mov
fnstsw
mov
rorb
nop
push
cli
and
mov
xchg
cmp
pop
xchg
fwait
je
mov
adc
pushf
test
cmp
dec
lea
ss
subps
pop
adc
sarb
inc
and
or
jle
mov
mov
jno
push
and
int3
ja
test
mov
sbb
dec
sahf
mov
adc
jle
rclb
outsb
xchg
and
jnp
adc
mov
sub
lcall
pop
int
and
lods
nop
in
mov
sbb
negb
out
fisubs
mov
dec
xchg
movsl
or
nop
and
rcrb
pop
insl
in
lods
xchg
mov
movsb
lea
and
je
imul
into
les
out
cld
fisubs
movsl
sbb
mov
adc
ljmp
mov
adc
mov
jp
aad
pop
dec
dec
xor
push
mov
fdivrs
fnstcw
push
xlat
leave
mov
xchg
push
cwtl
lret
or
rclb
loopne
mov
shll
scas
or
cmp
mov
jb
pop
xchg
sbb
pop
adc
and
testl
js
sahf
dec
adc
cmp
xlat
adcb
lods
aaa
cld
sbb
mov
and
lret
mov
lcall
dec
or
lahf
xchg
mov
ss
adc
out
movsb
mov
add
mov
insl
push
rorb
popf
pop
sub
mov
sbb
xor
fisubrl
rclb
inc
sahf
push
mov
add
cmp
pop
jae
icebp
cmpsl
xor
xor
cmovno
imulb
lahf
and
add
mov
lcall
repnz
push
ror
jmp
add
cmpsl
push
arpl
cld
push
pop
jmp
es
decl
cmp
mov
into
mov
lods
js
inc
sti
dec
pushf
lods
mov
cmpsl
cmp
insl
pusha
pop
out
repnz
ret
shrl
inc
std
mov
clc
icebp
fs
jae
and
jbe
and
xchg
inc
scas
scas
gs
or
scas
arpl
dec
test
hlt
inc
imul
mov
dec
pop
xlat
fdiv
fcompl
pop
std
cmp
es
shl
cmpsb
fcomps
inc
sbb
sbb
mov
pop
pop
jecxz
sub
movsl
sub
jnp
xchg
aad
adc
cmp
ret
loope
add
add
aad
mov
fcoml
mov
xchg
paddd
imul
fdivrl
lcall
lcall
sbb
mov
ret
insl
jns
xor
fstps
jg
dec
arpl
lods
or
mov
sbb
test
jo
push
loopne
sub
push
sub
add
test
in
sarb
xchg
jne
lret
adc
mov
xor
xor
xchg
in
clc
mov
idiv
dec
and
or
shlb
xchg
daa
dec
jns
adc
push
push
and
ret
dec
pop
mov
int3
sahf
mov
push
aas
fxch
mov
call
insb
xor
cmc
pop
mov
testl
cmp
ljmp
stos
loope
push
mov
jge
out
aas
popa
loopew
test
sbb
les
and
dec
mov
inc
clc
je
cld
lcall
push
fsubrs
cmp
mov
and
test
and
mov
iret
or
cmp
add
cltd
shll
mov
push
cli
fdivrl
cld
xchg
jno
xor
push
ljmp
cwtl
fldl
int3
xor
dec
in
inc
inc
xchg
ror
or
subb
mov
xchg
mov
subl
test
mov
jae
sbb
pop
ret
xor
mov
sub
into
adc
xchg
imul
inc
xchg
int3
xchg
into
imul
sbb
popa
sbb
push
fwait
add
mov
ss
out
cltd
in
xchg
xor
pusha
cmp
rolb
lahf
sbb
mov
lcall
test
lret
call
leave
out
jae
in
pop
push
sbb
dec
icebp
movsb
popf
in
cld
out
fcmovnb
or
sub
jbe
pop
cmpsb
and
mov
scas
lods
enter
pop
mov
loopne
mov
xor
add
mov
add
push
xchg
add
movl
gs
lea
cmp
xchg
adc
adc
pop
dec
add
mov
enter
loope
insb
leave
imulb
fisttpll
fsubs
cmp
xchg
lea
out
cmp
cs
xchg
test
movsb
lods
sub
mov
mov
push
xchg
lock
inc
movsl
pop
or
leave
test
dec
adc
push
jns
ret
lcall
je
push
jle
je
sbb
adc
add
stos
mov
jecxz
clc
faddl
fdivr
jb
enter
mov
repnz
add
mov
pop
inc
das
shll
pop
hlt
arpl
pop
push
jmp
into
ret
and
and
push
sub
jne
pop
push
cmp
sti
std
jl
rcl
jb
loopne
or
mov
mov
pop
inc
push
xor
adc
lods
sub
test
lret
xchg
pop
jo
imul
popa
fwait
jge
das
pop
notl
stc
fsubrs
fisttpll
xlat
mov
add
dec
adc
xchg
mov
xchg
or
jg
es
push
push
daa
repz
mov
fidivs
lret
lahf
fidivs
add
mov
sbbb
dec
ljmp
add
aam
sub
inc
add
notb
sbb
cld
out
cmp
fs
push
in
aad
insb
adc
aaa
cli
test
scas
dec
cmpsl
outsb
or
cmp
lahf
outsb
push
scas
cmp
add
jo
addr16
cmp
add
rcr
sbb
pop
cmp
dec
jnp
add
dec
rorb
pop
xchg
mov
data16
push
dec
rcrb
pop
sub
or
mov
lcall
hlt
hlt
jg
sub
mov
xchg
fmull
pushf
jg
fwait
pop
mov
or
push
imul
mov
pop
cmpl
aam
adc
popf
xchg
pop
pop
and
mov
test
push
fldl
push
int3
sbb
push
push
test
xor
and
sbb
insl
ficomps
mov
xchg
je
mov
xlat
mov
stc
or
mov
jecxz
xchg
scas
sbb
aad
lret
jo
pop
enter
xchg
and
jmp
cmp
xchg
push
add
sbb
jns
enter
adc
leave
adc
mov
push
sbb
sbb
sbb
shll
or
clc
cmp
pop
mov
pop
cmp
mov
xchg
into
xor
xor
imul
rorl
lcall
push
and
mov
mov
das
jnp
aad
addb
shl
fsubs
xor
sbb
mov
je
lcall
adc
sahf
cmp
xchg
outsl
xlat
sarl
pop
movsl
inc
or
std
orb
push
es
jp
aad
mov
push
jg
mov
jg
cmc
cmpsl
popa
jnp
clc
std
movswl
and
gs
push
sub
insb
xchg
add
fsubrl
xchg
mov
icebp
out
ljmp
sub
ja
cmp
fisubs
pop
push
inc
pop
loopne
sbb
xor
notb
pusha
cmp
ret
jg
mov
push
test
cmp
ss
push
jb,pt
dec
mov
frstor
push
lcall
ja
into
stos
mov
dec
les
insl
or
inc
ja
xlat
aas
in
ja
pop
or
scas
add
test
rclb
sub
lahf
pop
ss
xchg
sbb
lcall
addb
aad
dec
jl
daa
sbb
arpl
inc
call
xor
push
and
test
pop
js
mov
push
xor
push
leave
push
push
xor
mov
xchg
lds
and
xchg
inc
pop
divb
test
sbb
sbb
shlb
lea
cwtl
pop
pusha
test
jns
pop
cmp
in
lret
add
es
mov
lock
and
inc
aas
pop
or
jg
cmp
popf
shl
scas
push
or
and
xlat
dec
scas
outsl
sahf
or
cwtl
stc
adcb
xor
imul
inc
out
sbb
mov
mov
notl
dec
pop
testb
pushf
or
jo
jne
stos
add
inc
sbb
lds
sbb
push
loopne
fiadds
inc
fmull
and
lahf
jbe
lods
push
ffree
fxtract
into
cmp
jp
lret
fisttpll
cltd
add
aam
inc
jnp
or
imull
test
addr16
add
pop
mov
cld
mov
xchg
dec
aad
jecxz
xor
cmp
arpl
enter
cmp
adc
mov
mov
dec
nop
ret
mov
jno
cmp
jle
aas
mov
and
mov
jns
add
out
xlat
in
or
jns
cmc
inc
mov
pop
xchg
nop
adc
sahf
insb
mov
mov
decb
xor
insb
clc
and
test
xchg
or
lock
test
cmp
and
sbb
in
fisttpl
xchg
syscall
call
lret
dec
mov
sbb
jb
ucomiss
push
xlat
mov
shrl
mov
out
je
pop
pop
xchg
mov
and
repz
out
mov
shrb
mov
ss
jno
outsl
mov
pop
sbb
mov
or
aam
jg
mov
pop
jbe
test
js
sub
nop
test
jmp
pop
lret
into
fmull
xchg
mov
pop
les
arpl
xor
movsl
std
das
rorl
dec
test
mov
cmp
aad
outsl
addb
sarl
sbb
pop
push
add
test
pusha
mov
sbb
push
pop
xchg
adc
stos
dec
or
scas
cmp
mov
add
dec
stc
negl
pop
or
test
out
ds
daa
out
pop
in
sbb
push
push
mov
pop
test
jge
mov
lret
jmp
or
sahf
pop
dec
cmp
lret
and
ljmp
pop
stos
cli
andl
dec
sti
push
test
icebp
loop
mov
xchg
or
xchg
push
mov
in
les
insb
add
out
push
ljmp
icebp
jp
cmpl
fnsave
add
mov
xchg
jmp
fs
mov
add
jae
inc
jo
aad
movsb
mov
jp
and
shr
lods
rorl
jns
int3
pop
dec
jo
push
clc
mov
push
mov
stos
mov
sarl
cs
mov
pusha
aad
subl
fstpl
cld
fimuls
push
xor
mov
stc
add
aam
gs
outsb
or
jp
pop
shl
in
mov
add
outsb
push
stos
roll
arpl
pop
or
cmpsb
test
nop
nop
mov
push
pop
inc
scas
repz
push
xchg
dec
jns
movsb
xchg
pop
fiadds
insb
insb
push
je
dec
cmp
shrb
je
cs
xchg
sbb
rorl
les
adc
add
out
test
rcrb
xlat
aad
jne
andl
xchg
add
cmp
in
jae
les
push
ret
pop
fimuls
xchg
sub
lock
js
movb
mov
mov
cmpl
inc
insl
adc
xchg
mov
pop
xchg
cmp
push
or
xlat
or
jl
cmpsl
xchg
insl
mov
push
xor
dec
and
cli
mov
fistl
jg
cmp
and
cli
je
or
fnstsw
cmp
sub
sub
or
fistpll
mov
mov
insb
sbb
insb
push
add
dec
out
nop
mov
jbe
inc
lods
rcr
pminsw
fcoms
cmc
push
mov
mov
pop
je
xor
sbb
xchg
push
fidivrs
popa
in
pop
das
push
shrl
push
dec
addr16
lea
sbb
stos
pop
mov
movsl
aaa
enter
pop
out
in
sub
clc
mov
sub
sub
jl
mov
clc
ljmp
cmpsb
sub
xorl
add
sub
pop
lret
xchg
dec
outsb
shrb
sbb
dec
push
push
outsb
xchg
mov
mov
inc
in
adcb
clc
imul
test
jbe
add
test
mov
cli
and
in
xor
rcrl
bound
mov
add
cld
fisubrl
mov
test
outsb
shll
ljmp
ret
cmpl
leave
jle
xor
or
inc
sbb
add
mov
movsb
xchg
in
adc
test
cmp
push
xor
cmp
push
inc
arpl
jge
fsubrs
fs
sub
mov
out
inc
push
pop
sarl
jp,pn
mov
outsl
adc
xchg
out
fstps
mov
int3
aad
pop
nop
pusha
pop
cmp
and
xchg
je
fcomps
cwtl
push
mov
es
cld
xlat
scas
adc
in
leave
pop
pop
adc
mov
les
lret
je
js
stos
push
sbb
cwtl
comiss
cmp
cwtl
dec
enter
add
mov
xor
dec
adc
sub
fstl
nop
sbb
xor
mov
out
movsb
cmp
sbb
cli
int3
push
fsubl
pop
test
inc
add
xchg
es
jg
push
cmp
iret
xor
mov
mov
mov
hlt
mov
rcl
sub
push
adc
icebp
adc
into
jecxz
stos
cmp
or
or
hlt
ret
enter
push
pop
mov
aaa
push
data16
mov
jno
xor
mov
add
fsubrl
sbb
lret
add
jle
and
xchg
mov
dec
jp
cs
lret
xor
xor
pop
adc
popf
lods
mov
arpl
into
testl
idiv
adc
lret
sub
push
xchg
imul
data16
in
inc
or
mov
mov
jge
aas
and
push
add
cs
cmp
int
mull
push
fmull
sbbb
out
aaa
shrb
iret
pop
xor
xor
pop
ret
mov
mov
xchg
xchg
mov
jmp
rolb
mov
shll
mov
in
mov
test
cmpsb
lods
inc
stc
add
pop
icebp
aam
dec
mov
ljmp
push
xor
jb
jp
mov
push
xchg
cli
jp
repz
les
outsl
lock
and
mov
iret
cmp
sbb
xchg
lcall
push
repnz
dec
call
jo
hlt
fs
inc
faddp
mov
mov
cwtl
pop
push
test
adc
cmp
sub
xchg
pop
xchg
add
cmp
and
repz
int3
leave
and
pop
push
cmp
jne
jo
pop
negl
xor
pop
pop
cld
or
xchg
arpl
daa
xchg
lods
mov
call
cmpsl
push
fucomp
sub
rcl
in
imul
cmpsl
mov
insl
dec
cmp
popf
inc
inc
lea
movsl
jae
js
jnp
jns
call
filds
xchg
loop
stos
xlat
mov
cmp
sahf
cld
pushf
fnstenv
cmpsb
sub
loopne
dec
dec
dec
push
loopne
push
push
insb
jp
inc
pop
and
jp
pop
lcall
adc
popf
loop
lock
inc
insb
inc
mov
or
dec
andb
jbe
inc
filds
fsub
cli
mov
cmpb
cs
loopne
cmp
pop
sarb
cs
shll
fldt
sub
or
daa
push
fsubl
pusha
adc
inc
leave
jg
int3
adc
jns
mov
loop
hlt
xchg
sti
mov
cmp
cmp
addl
aaa
pushf
ret
mov
cmc
mov
mul
sahf
push
addr16
mov
sarb
push
dec
pop
std
pop
cmp
arpl
sbb
adc
push
sub
idivb
outsl
jecxz
cmp
inc
and
jl
aas
mov
stos
inc
xchg
sbb
lcall
mov
add
xor
fsubl
xchg
jae
aad
ret
sarl
dec
rorb
pop
fdivs
lds
cmpsl
dec
mov
imul
mov
lock
jno
mov
data16
pop
iret
add
mov
fnsave
out
push
outsb
jnp
repz
cld
xchg
xchg
xchg
cwtl
sbb
sbb
es
mov
or
mov
jbe
into
mov
sub
insb
sahf
pop
in
daa
pop
push
mov
push
adc
mov
push
jmp
push
fwait
dec
dec
fwait
shl
fdivs
mov
or
sub
push
push
movsb
xchg
xor
lret
xchg
jno
push
decl
jns
dec
sub
inc
jo
sbb
loope
mov
fildll
outsb
sub
out
dec
andl
mov
xchg
and
or
mov
xchg
lcall
pop
mov
pop
push
mov
cmpsl
mov
dec
mov
stos
xchg
xchg
xchg
cmc
inc
lcall
pop
xor
pop
loope
lret
iret
jmp
jg
sti
pusha
insl
sub
fs
add
out
leave
add
andb
cli
dec
daa
jp
popf
loope
call
pop
stc
sub
addr16
mov
jnp
popf
js
imul
pop
cmpsb
or
push
ret
mov
inc
shrb
es
cmp
add
jmp
mov
adc
sub
enter
jno
mov
mov
jno
imul
xacquire
test
jecxz
mov
inc
movsl
std
xlat
shl
out
subb
push
mov
inc
or
out
fnstsw
dec
push
sbb
ds
mov
xchg
pop
push
xor
pusha
out
lea
push
cmc
pushf
repz
inc
cmp
fmulp
outsb
jno
fbstp
sub
sub
mov
test
pop
daa
xor
hlt
test
cmp
xchg
xchg
into
mov
outsb
lods
aam
mov
nop
pcmpeqw
sbb
fcomi
adc
mov
push
scas
xor
aaa
int3
adc
xchg
pushf
scas
xchg
enter
sub
dec
push
movsl
adc
cmp
sti
loopne
cmpsl
lods
movsl
adc
or
stc
push
mov
rorb
mov
cmp
pop
subb
mov
push
or
mov
push
scas
stos
ret
ljmp
loop
pop
cmp
ljmp
stos
and
jo
pop
lods
out
sub
mov
popf
push
js
arpl
jno
rcr
dec
mov
or
fiadds
add
aam
das
mov
sub
fabs
dec
and
pushf
psrlq
mov
js
mov
push
in
inc
js
arpl
jae
pop
imul
outsb
adc
lahf
add
adc
jecxz
test
mov
lock
xor
sub
mov
xlat
movsl
pop
cmp
out
test
outsb
and
mov
lcall
xchg
es
cmc
aam
shr
lods
add
pop
cmpsb
lock
jb
sub
or
std
push
jb
mov
popf
arpl
jo
icebp
sbb
popa
fcoml
add
pusha
push
mov
mov
int
xchg
imul
gs
popf
jp
dec
sub
mov
int3
push
pop
push
cld
outsb
cli
clc
xchg
out
xchg
mov
sbb
and
adc
cmp
pop
clc
imul
je
das
andb
inc
xor
addr16
mov
leave
aam
testb
roll
das
mov
pop
test
cmp
into
add
xchg
ret
pop
fidivl
push
ss
or
mov
out
lret
sub
adc
mov
or
jo
mov
pop
ljmp
mov
in
mov
cmp
testb
jp
fincstp
push
lds
scas
mov
inc
dec
rorl
dec
inc
pop
mov
sbb
stc
push
dec
or
popa
mov
jmp
jbe
daa
and
pop
hlt
or
xorb
adc
mov
jae
mov
fs
std
or
iret
lret
outsl
mov
in
inc
call
jne
mov
shll
outsl
int
jecxz
in
outsl
mov
or
in
mov
fidivrl
mov
dec
in
cmp
mov
ds
jecxz
jmp
or
mov
jne
ret
stos
jmp
jp
fmulp
fdivrs
pop
iret
push
jp
mov
mov
dec
idiv
inc
jecxz
sbb
jl
inc
enter
mov
lods
mov
add
pusha
repnz
sarl
sbb
lret
jbe
popf
stos
in
aaa
out
xchg
or
dec
pop
nop
add
adc
je
out
pop
idivl
add
xchg
pop
adc
cmp
inc
idivl
mov
inc
xlat
testl
push
push
daa
push
movsl
loope
push
mov
pop
xor
out
sbb
mov
mov
loopne
mov
ds
fisttpl
xor
fists
mov
cmpb
dec
imul
sub
xlat
jnp
aaa
and
sbb
push
rclb
xor
test
int
inc
imul
push
mov
test
cmpl
daa
das
fdivr
jnp
or
or
test
and
fucomi
inc
aaa
sahf
jns
sbb
loop
mov
jae
xchg
lock
je
mov
xchg
icebp
mov
push
sbb
jnp
loopne
fadd
jns
loope
push
xchg
adc
inc
addr16
push
aaa
imul
in
adc
add
mov
loopne
outsb
mov
cs
push
and
pusha
movsl
dec
nop
enter
mov
faddl
add
pop
mov
sub
test
lea
xchg
mov
push
jb
xor
nop
sbb
ja
sbb
xchg
mov
rorb
aad
std
jecxz
add
rorb
pop
xchg
ss
lcall
sarb
inc
rcrb
adc
cmp
or
fistps
dec
cmp
jmp
dec
out
stos
fs
mov
jmp
dec
xchg
js
add
loope
mov
jge
lods
int3
lret
movsb
call
shrb
mov
push
fwait
sub
inc
jno
sbb
mov
xchg
mov
and
inc
mov
xchg
fwait
dec
aam
test
add
out
sahf
xor
or
jg
arpl
sub
iret
inc
or
subb
ss
gs
adc
arpl
inc
inc
add
inc
or
outsb
mov
xchg
mov
xchg
xchg
mov
mov
push
xchg
lods
psrad
bound
cmpsl
das
jbe
and
or
scas
jb
test
xor
fnstenv
lods
pop
cmp
add
out
xor
ja
xchg
sub
fbstp
rorb
jp
add
test
pop
lods
mov
adc
mov
jmp
rorb
xchg
stos
mov
pop
jmp
mov
sbb
jmp
add
or
mov
arpl
push
add
repz
out
cmp
sub
fdivrp
into
call
cmp
fst
mov
or
rolb
pop
mov
sbbb
ret
xchg
or
popa
sub
mov
cmc
push
inc
js
mov
cwtl
jnp
pop
lahf
in
inc
mov
fstl
inc
mov
cmp
int
pop
in
inc
cmpsl
cmp
mov
cld
cmpsb
cltd
push
rolb
mov
xchg
ljmp
and
pop
xlat
cltd
xchg
popf
mov
subb
pusha
cmp
mov
pop
lock
xor
pop
add
pop
mov
mov
mov
mov
mov
mov
sbb
cmp
fcmovbe
stos
js
push
cld
jle
mov
mov
leave
push
arpl
pop
push
xchg
xor
dec
xchg
push
cmpb
mov
dec
lods
xchg
in
adc
cmpl
sub
sbb
xor
hlt
push
data16
fldz
dec
test
pop
jecxz
mov
mov
lret
sbb
ss
jecxz
loop
xor
sub
jp
or
sbbb
sbb
aas
pushf
lret
dec
hlt
jmp
push
aad
adc
sbbb
in
mov
fisubs
rorl
push
xchg
xchg
fwait
addr16
xor
xor
push
lret
mov
lahf
mov
and
adc
mov
pop
mov
push
jnp
sbb
jae
mov
cltd
or
sbb
xchg
mov
les
test
push
vmovaps
mov
ds
in
ljmp
add
or
jns
fwait
loopne
jb
insl
mov
inc
lret
inc
pusha
jns
pop
arpl
push
add
pop
xlat
ficoml
daa
test
jns
push
out
mov
ss
push
jg
xchg
sub
pop
add
data16
xor
xor
lods
icebp
insb
pop
xor
sub
push
ss
es
or
imul
movsb
inc
mov
js
dec
arpl
adc
or
pop
mov
clc
pop
arpl
sbb
adc
cmp
push
dec
xlat
ss
ss
xchg
scas
cmp
stc
xlat
mov
fistpll
xor
xor
mov
sbbl
sub
ljmp
ljmp
aad
dec
inc
cltd
iret
in
fs
test
popf
outsb
push
and
add
mov
xchg
dec
dec
or
push
insl
icebp
inc
and
cmp
outsb
push
add
inc
sub
jae
dec
sub
or
lods
outsb
into
xor
insl
nop
add
lret
movsb
or
je
mov
rorl
lds
pop
dec
xor
test
mov
sbb
enter
or
jb
mov
pop
cltd
loope
mov
test
mov
gs
nop
stos
push
pop
pop
xor
sub
rorl
repz
test
divb
mov
fcoml
lods
adc
out
loope
or
mov
mov
or
testl
jb
sbb
out
adc
xor
jge
cwtl
sarl
pop
mov
ret
or
orps
rorl
add
popf
adc
cld
pop
add
hlt
jl
mov
cmpsl
lret
mov
pop
mov
insl
add
loope
pop
jo
inc
lcall
pusha
loope
fnsave
lret
adc
sub
add
test
pop
stos
out
fucom
sbb
in
cmp
sub
int3
popf
adc
mov
jbe
and
test
or
shl
arpl
xor
hlt
test
ficoml
and
sti
ljmp
pop
data16
cmpb
rcrb
push
sbb
mov
cmp
mov
fistl
xchg
xlat
popf
cmp
enter
sahf
sub
nop
inc
jb
jg
pop
mov
sti
mov
adc
cmp
leave
xchg
jb
arpl
jmp
arpl
jl
aad
and
cmc
cmp
call
clc
push
pushf
or
hlt
jo
lea
hlt
push
in
xchg
clc
push
pop
pop
xchg
testb
sub
test
lcall
xor
or
mov
and
pop
inc
jp
xchg
ja
fs
movsl
mov
ret
jl
adc
test
test
adc
in
xor
sub
shlb
call
xchg
xor
push
out
adc
mov
aad
add
cmpsb
mov
xchg
xor
cld
in
pop
pop
lret
cmp
sub
outsl
loope
cli
pusha
in
xor
dec
sbbl
jne
sub
mov
push
imul
adc
scas
insl
sub
xchg
mov
loop
out
sbb
push
pop
cmp
test
mov
call
in
mov
mov
push
repnz
jo
pop
ja
in
in
inc
mov
rcr
lcall
mov
decb
out
addr16
fcomip
xor
mov
sub
pop
cmc
sarb
mov
pop
fistpll
in
inc
sbb
adc
xchg
push
dec
inc
lret
daa
xor
nop
lret
push
jg
adcl
add
push
inc
adc
or
loopne
dec
mov
pop
mov
cmp
add
mov
jno
std
lahf
mov
sub
add
andb
ljmp
and
movsl
int3
push
inc
popf
xor
stos
pop
shlb
jl
in
and
shlb
mov
ljmp
stos
scas
je
popa
push
mov
rclb
mov
mov
and
ret
cmp
adc
and
scas
int
pop
adc
cltd
leave
fs
jns
lock
sbb
out
mov
bts
push
xor
xchg
xor
sti
pushf
testl
ds
or
inc
pop
fldt
stos
roll
icebp
lahf
es
mov
mov
scas
push
pop
lahf
mov
scas
aaa
stc
mov
out
out
pop
cltd
iret
lret
popf
fstps
outsb
push
pop
into
jmp
xchg
addr16
ret
dec
mov
cmp
mov
jnp
mov
mov
xchg
stos
jb
adc
in
dec
push
xchg
jne
cs
mov
or
mov
je
sti
hlt
lret
sbb
out
push
jg
sbb
orl
shlb
cltd
jmp
aaa
add
push
mov
sbb
adc
clc
cld
in
pop
jnp
cli
dec
dec
insb
cli
or
repnz
dec
shll
push
gs
out
mov
hlt
pop
pop
and
push
xlat
push
dec
dec
fcmovnb
sti
pop
daa
loope
jmp
or
movsb
xchg
repnz
fwait
icebp
daa
push
xchg
fstpl
inc
sub
cmpsb
pop
js
push
xlat
push
mov
cmp
mov
repnz
pushf
fwait
clc
add
xchg
cld
std
into
nop
push
push
mov
in
icebp
into
pop
lahf
repz
pop
icebp
adc
loopne
shrl
push
dec
in
icebp
insl
movsb
lahf
inc
xor
aaa
push
and
loopew
rorl
loopne
inc
sbb
ret
push
push
cwtl
dec
xor
and
adc
xlat
cmp
ja
jmp
popf
dec
pop
mov
and
push
fdivrl
xchg
push
in
lods
mov
xchg
dec
lret
mov
out
outsb
or
push
push
fdiv
jecxz
or
cmp
pop
mov
mov
jbe
js
jb
push
xchg
hlt
mov
gs
out
daa
push
jns
mov
inc
repnz
dec
in
stos
cld
xchg
and
ja
stos
xchg
dec
pusha
es
push
xorl
leave
jae
push
addb
adc
aad
or
xchg
fwait
sub
inc
jl
insb
push
cmp
xchg
jnp
sahf
xor
add
jmp
ljmp
jnp
icebp
lock
int
sub
mov
sahf
dec
cld
clc
pop
jbe
outsl
jg
xchg
leave
xor
adc
cwtl
jg
aad
dec
scas
add
push
ljmp
outsl
inc
mov
mov
sbb
mov
popa
mov
or
jno
sbb
sub
ds
jecxz
enter
mov
push
fmuls
mov
and
push
or
xchg
cld
jl
mov
clc
inc
mov
inc
sbb
aam
outsb
jmp
and
pop
clc
push
pop
pop
mov
popf
stc
inc
inc
jne
jae
notb
add
fcmovnu
mov
call
add
xor
movsl
ret
push
pop
inc
xchg
aaa
enter
scas
add
subb
insl
inc
pushf
jbe
cmp
sub
add
inc
xor
dec
fdivs
dec
fnstcw
cmp
push
jns
push
or
inc
bound
icebp
sbb
push
rolb
xchg
xor
int
pop
call
mov
sub
inc
loope
aad
cmp
xchg
dec
cmc
sarb
es
fdivrl
lret
xor
xchg
incl
scas
fstpt
cmpl
lcall
cmp
aaa
fbstp
or
negb
dec
lods
dec
pusha
mov
ss
dec
mov
insl
nop
test
pop
xor
leave
fnstenv
sub
xchg
or
and
loopne
iret
mov
pop
imul
inc
pop
fwait
fwait
push
jge
scas
mov
sub
jecxz
mov
inc
jge
loopne
mov
and
adc
mov
pusha
mov
xchg
mov
les
and
or
mov
addr16
mov
cmp
pop
and
mov
mov
jns
push
cli
or
cmp
fisttps
sbb
pop
scas
sbb
popa
and
cld
aaa
popl
adc
pusha
xchg
cmp
cmp
mov
jns
loopne
fidivl
pushf
shr
and
rclb
fdivs
adc
add
out
popa
jno
std
or
lods
int3
mov
lea
scas
push
insl
pop
loopne
imul
mov
sub
testl
push
or
lcall
or
inc
mov
pop
js
cltd
lret
or
mov
push
into
or
fisubl
xchg
jbe
mov
sarb
add
xlat
mov
test
pop
jecxz
stos
mov
hlt
test
xchg
ljmp
mov
shr
pushf
insl
roll
mov
in
clc
inc
leave
mov
shlb
add
fsubrs
stc
push
mov
or
test
testb
cmc
lock
jne
insb
pop
xchg
test
call
push
jno
cwtl
xor
adc
jg
inc
jae
inc
or
xor
fstp
shr
mov
jp
cli
pusha
jge
pop
fstpl
shrl
pop
sbb
mov
scas
stos
or
push
icebp
inc
add
insb
cmp
xchg
dec
outsl
inc
jnp
dec
into
push
frstor
mov
mov
cltd
or
mov
dec
cld
lret
repnz
xor
pop
orb
mov
xor
xor
movsl
xor
cld
cmp
lea
jecxz
mov
add
rolb
mov
cmpb
ds
lods
fmul
ljmp
add
sbbb
cmc
sbb
shll
mov
sub
push
push
jo
and
ret
dec
jmp
pop
mov
cli
jp
shl
inc
jle
das
into
lret
push
and
leave
pop
xor
jp
fisubs
or
frstpm(287
sahf
enter
sub
imul
in
cmp
icebp
or
adc
in
sub
mov
int
arpl
and
push
cltd
test
cs
adc
call
in
mov
rcll
out
dec
mov
dec
mov
loopne
and
popf
inc
lcall
pop
iret
mov
jmp
cmp
stos
inc
outsl
data16
lds
lea
outsb
pop
int3
orl
push
sbbb
pusha
adc
xchg
mov
cmc
xchg
mov
pop
scas
xor
jo
xor
mov
and
fsubr
bound
cmp
loope
es
pop
dec
sbb
stos
push
vmovlps
ficoms
cwtl
or
loope
mov
xor
fcmovbe
shr
push
cmc
mov
pop
mov
mov
add
mov
pusha
dec
xchg
sahf
and
pop
in
jmp
dec
cli
push
mov
addr16
xor
inc
lds
mov
pop
lods
lea
ds
sahf
insb
push
push
es
cmc
icebp
scas
xchg
dec
mov
dec
sub
stos
lods
adc
pop
xchg
fdivrs
popa
jns
pop
ljmp
xor
cld
add
scas
test
dec
js
into
stos
mov
mov
mov
mov
lcall
das
push
rorl
test
xchg
test
jecxz
int
popf
xchg
cmp
jne
bound
jno
and
dec
xchg
xchg
lret
push
pop
or
xor
into
cmpsb
and
jno
xor
xor
mov
and
push
cmpl
out
fst
lock
outsl
add
fwait
cwtl
les
or
sub
inc
aaa
arpl
lock
push
or
mov
fcmovnb
sub
mov
mov
stos
dec
pop
push
pop
mov
lods
mov
repnz
jnp
xchg
in
cli
loope
aam
mov
jg
pop
inc
subb
das
lret
frstpm(287
add
aaa
push
roll
pop
or
hlt
fidivl
cli
add
jns
bound
push
loope
outsb
ret
adc
add
cmp
sarb
ja
pusha
popf
push
lods
aam
sbb
in
push
xchg
rorb
es
jnp
pop
push
sub
icebp
xchg
jne
xor
push
mov
lea
and
dec
enter
mov
mov
mov
aas
movsl
inc
jne
fsubrp
fwait
std
and
pop
pop
cmp
and
xchg
pop
mov
loopne
mov
rolb
mov
fcmovbe
pushf
mov
mov
fbstp
movsl
addl
mov
add
inc
dec
mov
mov
stos
pop
lea
mov
pop
mulb
sub
cli
daa
mov
sbb
dec
ja
xchg
int3
fisubrl
cmpsb
ret
rorl
data16
in
rorb
pop
jg
sbb
mov
cli
out
and
xor
push
lds
dec
add
lret
pushf
les
cmp
mov
nop
into
repz
or
add
out
pop
push
cmpsl
jno
divl
and
adc
jns
jae
fadds
inc
ret
js
shl
xchg
or
adc
jecxz
cmpsl
popa
cwtl
xchg
mov
push
dec
pop
adc
xor
movsl
cld
mov
sub
in
add
test
sahf
pop
ret
sub
aas
inc
shll
sbb
mov
out
ds
cmpb
adc
jg
mov
dec
mov
push
enter
jbe
pop
mov
xchg
pushf
xchg
push
xor
sbb
fstpt
xor
leave
loopne
daa
sbbl
add
fstl
push
js
fwait
inc
int3
mov
push
fwait
adc
test
fisttps
stc
fldenv
stc
pop
sbb
dec
sub
mov
mov
cs
cmp
or
popf
fdivrs
sub
pop
mov
shrb
mov
inc
push
outsl
stos
inc
inc
pop
sbb
jae
notb
cmp
adc
pop
pop
xor
cmp
loop
idiv
mov
push
mov
loopne
scas
xlat
dec
out
and
call
mov
mov
mov
aam
fisubrs
push
mov
pushf
subb
rol
pop
cmc
cmp
hlt
xor
ret
xor
mov
test
mov
pop
out
pop
mov
lock
sbb
mov
loope
inc
pop
sub
mov
jns
jno
or
add
rorl
xor
dec
popa
fwait
cmp
push
mov
push
addr16
jnp
bound
pop
mov
push
cmp
les
insb
push
fidivl
mov
push
adc
pop
repnz
mov
jl
rolb
mov
jg
add
jecxz
mov
shll
repz
push
dec
add
mov
jp
lock
repz
xor
add
loope
cmc
pop
andl
mov
xchg
lahf
or
push
pop
jg
lods
mov
je
outsb
ficomps
cmpsb
mov
mov
loopne
jmp
adc
ret
dec
xchg
fcmovu
xchg
lahf
scas
mov
lods
inc
nop
insb
mov
add
je
inc
lret
bound
cmp
dec
shr
loopne
decl
icebp
pop
adc
sti
call
push
fisubrl
dec
mov
mov
loopne
xor
and
sub
pop
sahf
pop
ss
mov
xchg
test
sbb
pop
test
xorb
fcoms
enter
add
mov
movsb
sub
mov
in
pop
enter
push
fldenv
jo
insl
pop
lcall
jecxz
call
dec
inc
roll
sbb
and
pusha
cmp
jb
cmc
sub
mov
bnd
aam
fdivs
jecxz
bound
sbb
arpl
xor
sub
das
imul
in
jo
ret
ds
pop
ret
dec
adc
int
fcompl
mov
shrl
pop
or
adc
aaa
outsl
jp
data16
mov
decb
cltd
dec
pop
sub
imulb
sub
add
ja
lea
cld
adc
sub
xor
adc
xchg
mov
shrl
mov
into
in
shrl
sarl
pushf
cwtl
lcall
pushf
or
repnz
sub
dec
cmp
addl
movsb
and
sbb
stos
pop
rcrl
adc
inc
pop
cmp
pusha
cs
and
adc
adc
or
push
clc
jnp
pop
popf
js
jmp
push
fimull
ljmp
sbb
mov
lret
aas
sub
punpckhdq
aas
jns
in
inc
xor
dec
lods
pop
jmp
imul
fstpl
mov
cmp
sub
mov
popf
lea
and
in
jmp
dec
imul
adc
aam
insl
ds
sbb
movsl
push
mov
push
fsin
jno
inc
icebp
mov
add
push
push
movsl
cltd
jae
jns
or
sub
pop
fistpl
les
xorb
std
aad
jno
shrl
mov
sbb
push
sbb
std
fcoms
test
nop
fdivs
clc
js
data16
mov
lods
mov
adc
mov
loop
je
sbb
cltd
fstpl
into
push
leave
cs
into
jg
push
data16
inc
or
sbb
dec
jbe
je
mov
push
icebp
rcrb
outsl
stc
movb
jnp
cwtl
fisubs
jne
sahf
shll
ljmp
lret
loopne
lea
push
mov
aas
ss
jmp
sahf
cmpsb
bound
addr16
in
ficompl
jb
cmove
mov
rorl
out
adc
mov
push
mov
or
divb
add
mov
inc
dec
adc
pop
mull
and
pop
inc
div
iret
add
daa
ss
std
mov
lods
jae
int
dec
iret
pop
pushf
fnsave
call
loop
cmc
inc
add
cmpsl
stc
cmpsl
test
jmp
leave
sti
add
in
je
inc
leave
inc
jmp
jle
cmpl
sti
test
push
adc
mov
mov
push
xchg
dec
pop
faddl
faddl
insl
jg
test
repz
lea
adc
mov
hlt
and
jns
popf
imul
fdivrp
fbstp
jecxz
leave
incb
mov
out
in
adc
and
iret
lods
fisttpl
or
jecxz
dec
int3
fwait
mov
xor
add
or
sbb
xor
inc
and
cmp
jnp
sub
xor
push
cmp
jns
push
fiadds
fsubs
addb
or
push
das
xor
ret
cmp
pop
pushf
adc
aad
mov
sahf
mov
test
sbb
pop
pop
sbb
test
fmuls
add
sbbb
mov
push
cmp
test
jmp
cmp
adc
mov
mov
jbe
push
xchg
negl
xor
jp
xchg
jns
sub
mov
pop
inc
jbe
popf
push
mov
push
jo
aad
push
xchg
movsb
xchg
daa
pop
pcmpeqw
sub
testl
cmp
mov
jo
inc
lea
test
sub
sbb
lret
adc
cmp
pushf
mov
adcl
and
jmp
cld
test
test
adc
sti
aas
mov
dec
xchg
scas
xor
cwtl
mov
jmp
stos
cld
jb
in
lods
sub
rclb
sub
xor
decl
and
out
and
je
mov
sub
repnz
arpl
pop
lea
push
mov
es
xchg
int
rsqrtps
cwtl
xchg
outsl
mov
jmp
jns
call
cmpsb
pop
jne
imul
jae
add
xchg
or
jp
mov
nop
repnz
fisubl
dec
sbb
inc
lock
add
addl
fld
push
mov
jno
or
cmp
test
sub
int
cmpsb
push
and
into
jmp
and
shrl
out
cmpsl
in
cmp
pop
add
cli
cs
je
pop
orl
sub
push
cmp
adc
dec
push
outsl
clc
les
lret
add
and
hlt
add
add
iret
repnz
xchg
adc
inc
pushl
mov
andl
mov
push
mov
lcall
imulb
jge
push
inc
add
mov
popf
cmp
out
cli
cli
out
xor
dec
cs
shll
sbb
add
push
sahf
cltd
jns
icebp
push
outsb
inc
je
in
ss
mov
dec
jo
push
jno
lcall
and
and
mov
cmc
cmpl
sbb
sbb
cwtl
sub
repz
js
roll
enter
sbb
lcall
lcall
cld
hlt
mov
jg
sbb
andl
push
arpl
add
dec
loopne
fdivl
ds
clc
mov
push
adc
jbe
mov
xchg
sub
leave
fs
les
cmp
cli
and
cmpsl
xor
gs
daa
xor
rclb
dec
pop
xchg
cs
mov
mov
add
cmp
sar
inc
mov
add
cmp
pop
mov
inc
loop
mov
out
clc
jg
and
popa
sub
lahf
mov
mov
fucomp
lcall
xchg
fisubrl
xlat
or
mov
repnz
sbb
inc
add
push
mov
pop
jae
gs
aad
cmp
cmp
push
mov
or
in
in
push
lcall
mov
sub
jo
cmp
mov
lahf
inc
mov
mov
cli
stc
arpl
js
xchg
push
iret
push
imul
dec
ret
inc
stos
cmp
test
outsl
test
adc
icebp
pop
xor
sbb
call
mov
pop
xchg
push
xchg
jmp
jl
mov
movsb
sarb
popa
push
pop
imulb
cmpb
aad
and
inc
dec
mov
mov
and
mov
xlat
cld
aaa
jnp
mov
repz
mov
xchg
inc
test
mov
in
pusha
aam
inc
imul
mov
rcll
movsb
mov
xchg
add
push
jb
aas
sbb
addr16
repnz
jne
adc
mov
push
bound
dec
aam
lahf
fdivr
call
out
lret
sbb
cmp
inc
mov
pop
movsl
stos
lret
loop
aaa
leave
mov
adc
popf
mov
in
adc
lods
int3
inc
jne
mov
nop
hlt
inc
xor
mov
outsl
shrb
fwait
mov
push
mov
repz
dec
es
jo
cmpsb
push
mov
sbb
imul
sbb
stc
nop
pop
int
jg
xchg
jge
cld
xor
mov
mov
aaa
andl
loope
in
push
test
jnp
lret
xor
mov
out
bound
loop
lcall
sbb
or
pusha
push
pop
mov
mov
mov
push
mov
inc
cmp
inc
jmp
rcrl
mov
loope
cmp
pop
cmpsl
sub
fimull
sub
mov
pop
cmp
jge
jecxz
les
movsb
xor
js
push
in
xchg
dec
jne
add
mov
movsl
pop
fimull
test
or
int
and
in
jo
outsl
es
out
jp
cmp
dec
inc
cmp
pop
cmc
push
cmp
faddp
jno
test
mov
call
mov
mov
inc
or
test
pop
dec
cltd
gs
cmpsb
shrl
mov
mov
sarb
sbb
enter
sub
push
or
pop
jbe
rclb
cmpsl
add
inc
jl
sbb
inc
adc
and
ljmp
cmc
loop
push
test
sbb
roll
addr16
adc
sub
das
pop
and
jb
rolb
inc
xor
hlt
and
xlat
cmp
fldt
add
xor
loope
stos
adc
mov
ret
loop
cwtl
fiadds
and
ds
mov
in
mov
outsb
loope
inc
jb
les
mov
xchg
jne
mov
push
into
lods
fistl
and
jge
fwait
lods
sub
sbb
adc
iret
fcomp
jmp
aad
jno
xor
je
or
jnp
pop
pop
cmp
fimuls
pusha
add
adc
fdivrl
hlt
out
in
hlt
dec
mov
sbb
sub
fbstp
cmp
cli
adc
jge
mov
xchg
data16
lret
cwtl
in
jb
mov
ss
out
clc
lret
stos
adc
arpl
jg
insl
sbb
inc
icebp
dec
jbe
pushf
pop
pop
icebp
movsl
je
sub
cmp
mov
dec
xchg
lock
pop
mov
ss
jnp
js
in
add
fisubrl
sub
push
mov
mov
add
or
push
push
mov
dec
fstps
inc
add
inc
xor
push
les
jo
mov
mov
jle
leave
cltd
cmp
jns
xor
mov
fsubl
add
xchg
push
shlb
cmp
xchg
decb
cmp
int
push
pop
aas
test
stos
adc
inc
daa
push
or
mov
out
mov
inc
xchg
push
add
push
arpl
push
lds
ja
or
dec
adc
cmpsb
push
lods
cli
aam
xchg
mov
dec
xchg
sbb
push
fwait
mov
cmpb
nop
and
push
std
sahf
jnp
addb
add
adc
and
jbe
loop
xor
mov
push
in
nop
shlb
push
cltd
out
insl
inc
lods
push
pop
pushf
dec
insb
rolb
push
idivl
clc
in
pop
stos
iret
in
xchg
jo
lock
mov
movsl
cmp
sbb
cmp
push
inc
cwtl
mov
aad
mov
dec
out
cmp
xchg
icebp
orl
sbb
cmpsl
bound
scas
fcom
xchg
jge
add
test
iret
add
jmp
cmp
and
popf
loopne
stc
jmp
lret
mov
xchg
es
out
in
fwait
daa
loopne
jne
shll
ds
movb
cltd
cmp
je
push
jmp
fsubr
or
adc
call
ffreep
in
js
jnp
sar
dec
adc
rolb
mov
into
popa
fwait
les
push
lea
inc
jmp
mov
push
xchg
inc
sbb
outsb
push
cmp
insb
loopne
ret
int3
mov
movsl
pushf
leave
jecxz
rcrb
aad
push
jg
fildl
ss
push
sub
push
fwait
adc
dec
ret
inc
sbb
or
aad
ljmp
add
cmpsb
jb
lods
fwait
add
sti
fucom
ds
push
int
in
adc
inc
cmp
cmp
jl
subl
lock
movsb
cs
icebp
cmp
mov
mov
dec
lods
addr16
xor
or
cmp
hlt
out
jp
fwait
xlat
pop
xor
enter
pop
and
shll
push
push
mov
jle
movsb
fcomp
sub
mov
ljmp
push
and
out
insb
mov
cmc
movsb
out
hlt
mov
sbb
je
push
jmp
lret
xchg
hlt
pop
jmp
cld
testb
mov
pop
jmp
xor
sub
lea
jmp
fidivrl
push
mov
pop
sub
in
jle
sub
sub
cmpsb
pop
dec
adc
adcb
stos
ss
fnstsw
add
add
mov
into
rcrb
jp
xchg
ret
add
in
xchg
in
fldcw
xor
hlt
in
jbe
jns
sbb
gs
hlt
push
in
stc
pusha
xchg
mov
dec
jl
push
sub
aaa
sub
and
std
fs
les
pop
hlt
xchg
js
aad
cmp
mov
pop
movsb
mov
ss
dec
lods
loopne
sub
mov
xor
push
dec
add
jg
rcll
mov
in
mov
xchg
push
cmpsl
pushf
orl
jl
adc
mov
inc
or
mov
jb
das
movb
sub
gs
pop
sbb
add
inc
addb
lds
lret
mov
mov
ret
sub
sti
pusha
insl
mov
inc
rcll
aad
aas
cmp
sub
cmp
and
rclb
mov
in
in
cmp
es
jecxz
popa
popa
mov
sbbl
das
ds
jns
std
popa
cmp
cmp
jg
mov
sub
imul
mov
in
insl
ss
les
jle
scas
mov
sarl
jb
mov
or
jecxz
arpl
je
dec
add
mov
in
and
and
out
ljmp
push
test
pop
test
arpl
sbb
inc
push
dec
test
fsubs
mov
push
out
in
and
jb
fnsave
pop
sbb
loopne
xor
and
hlt
jmp
out
notb
cmp
lcall
sbb
pop
sbb
and
jns
je
cmpsb
mov
pop
adc
adc
stos
inc
sub
mov
mov
repnz
pop
ficoml
push
repnz
repz
or
mov
push
pop
popl
in
nop
sbb
xacquire
ret
push
mov
xchg
dec
jle
repnz
inc
inc
xchg
jle
add
inc
test
xchg
in
imul
cmpsb
fs
cmp
icebp
jns
mov
mov
les
ljmp
xchg
push
dec
mov
in
mov
loop
out
fs
sbb
ret
ljmp
fstl
ljmp
enter
add
xchg
shl
lcall
mov
fwait
sarl
and
icebp
jmp
bound
incl
out
xchg
stc
lahf
push
xchg
ja
dec
pop
inc
jae
push
bound
dec
mov
mov
mov
ret
jne
js
push
pop
movl
sbb
lret
cmp
out
jge
inc
add
in
dec
push
inc
lods
popa
aad
pop
sbb
xchg
push
cwtl
movsl
clc
cwtl
jnp
mov
lods
iret
add
imul
inc
cmc
daa
fldt
xchg
mov
pop
imul
jbe
push
pushf
sahf
nop
inc
enter
out
fwait
stc
adc
or
outsb
mov
or
repnz
pop
push
outsb
cltd
sbb
add
dec
push
push
sbb
rcr
push
inc
jmp
sub
xor
jle
cmp
iret
add
lock
add
mov
mov
sbb
mov
in
cmc
push
stos
outsb
mov
inc
add
stc
add
push
push
loopne
pop
mov
push
mov
jecxz
gs
inc
and
aam
mov
xchg
decl
adc
xor
xor
subb
push
ret
dec
inc
aam
scas
jae
idivb
stos
jne
fldenv
insb
cmpb
mov
subb
xchg
sub
movsb
xchg
lock
push
out
inc
shrl
fists
push
sbb
inc
out
push
pop
in
add
ret
outsb
xchg
mov
adc
adc
idivb
mov
lea
jns
pshufw
mov
hlt
add
shlb
data16
mov
lret
mov
movsl
mov
pusha
sbb
push
cltd
jg
nop
sbb
mov
movsb
aaa
jge
scas
ja
pop
jb
adc
push
cmpsb
out
mov
mov
sub
push
or
test
dec
dec
dec
mov
test
mov
adc
push
jg
dec
sbb
cwtl
test
ja
or
and
das
push
in
or
aas
jae
sub
js
cmpsb
jbe
in
pop
cwtl
mov
cmp
push
jmp
cmp
and
fwait
test
mov
push
xchg
test
je
pop
dec
sbb
hlt
cli
jbe
mov
movb
push
jo
add
add
inc
add
sbb
sahf
sbb
sub
adc
jge
push
mov
orb
jne
pop
in
pop
andl
and
rorb
addr16
mov
push
mov
pusha
aam
scas
pushf
int3
out
fcmovu
jne
scas
inc
inc
dec
insb
pop
arpl
inc
push
pop
sbb
push
or
ds
pop
jl
aam
lret
cmc
mov
cmp
push
cwtl
cmpsb
jmp
movsl
les
jg
jnp
sub
lahf
cmp
pusha
lods
cld
mov
lret
cwtl
fsubl
mov
insl
or
enter
jge
int3
push
add
mov
mov
and
pop
xlat
push
push
nop
out
jns
orl
xor
mov
adc
enter
ss
outsb
pop
mull
and
xchg
dec
sub
sbb
and
es
sti
jns
sbb
es
xor
aas
or
push
mov
cmp
or
pop
adc
jl
add
fists
movsb
pushf
test
sbb
cmp
adc
and
adc
add
sbb
xor
pop
shrb
sbb
or
sti
cmp
int3
xor
popa
mov
clc
push
push
sub
cmp
scas
dec
push
sahf
adc
jle
mov
jnp
mov
cmpsb
jo
ss
sahf
jnp
sbbb
or
mov
adc
enter
adc
aaa
push
add
sti
jp
pop
clc
xacquire
dec
lretw
or
stos
rcr
fs
xor
cwtl
cmc
push
push
sub
fstl
mov
push
iret
and
shll
ja
cmp
add
xorb
cmp
outsb
ret
lods
hlt
mov
lahf
addr16
aaa
aad
mov
in
mov
fdiv
int
test
dec
test
inc
dec
out
dec
pop
mov
or
sbb
push
call
lock
adc
inc
movsb
jne
xchg
cld
mov
aaa
mov
out
mov
or
aaa
xor
jae
dec
lods
add
fstpt
or
leave
xor
movsb
push
mov
nop
jae
in
or
mov
les
jmp
mov
aaa
bound
xchg
cmp
fldl
or
add
test
loope
adc
pusha
xchg
in
jnp
mov
ljmp
xor
test
pushl
scas
mov
fbld
in
add
jns
cmpsl
mov
lods
adc
imul
xor
inc
jo
dec
jl
clc
mov
std
xor
movsl
add
mov
add
ja
fsub
dec
ds
bound
leave
pushf
or
mov
xor
and
lods
mov
cmpsb
mov
sbb
sbb
sub
lods
cmp
cmpsl
std
cmc
cmp
pop
mov
fidivrl
cmp
clc
add
or
jp
incl
lcall
jecxz
jp
jo
pop
cmp
cs
mov
mov
cmp
popa
les
fildll
inc
scas
shll
inc
jmp
pop
cld
sub
dec
mov
in
mov
shl
fidivrs
xchg
ljmp
leave
or
popf
shrl
cmc
jno
fsubl
test
cmp
test
push
das
aaa
sbbb
lret
mov
scas
inc
rdtsc
sub
add
rcll
mov
sub
loop
pushf
ja
jns
cld
xor
ja
xlat
popl
jg
jge
xchg
xchg
aam
push
cmp
aas
pop
sbb
mov
jecxz
jg
pop
sbb
test
mov
ror
fwait
scas
add
mov
xor
jno
cwtl
in
cmpb
aaa
cwtl
ret
out
xlat
scas
insb
lea
out
ljmp
out
icebp
jne
repz
sbb
rcrl
push
int3
xchg
cmp
rorb
push
add
xchg
cwtl
pusha
js
cmp
dec
fwait
or
cmp
mov
dec
xchg
call
aas
cmp
dec
mov
xchg
adc
lock
imul
sbb
mov
push
enter
adc
fsubl
pop
mov
std
xchg
cld
and
je
mov
lods
scas
mov
in
jp
loopne
insb
adc
push
push
xchg
pop
jo
pop
sub
mov
ret
pop
cmp
sbb
popl
call
pop
stos
and
push
xchg
dec
daa
mov
dec
dec
sahf
out
and
lock
and
shl
sbb
xchg
cli
xor
xor
subb
stos
ficoms
rclb
int3
in
xchg
out
jge
jnp
xor
stos
jl
push
push
push
movsl
mov
mov
pusha
cmpsb
sbb
shll
out
mov
pop
sub
mov
sbb
fdivr
and
or
hlt
add
lods
shrl
sti
sub
lods
lcall
pop
mov
jge
add
out
mov
sub
lret
js
out
and
pop
sub
jl
mov
scas
mov
jbe
cld
xor
aas
in
adc
mov
mov
or
data16
out
cld
cmp
aaa
cmpsl
enter
and
cli
jmp
icebp
mov
jo
or
test
or
outsl
fcomp
cmp
jbe
pop
or
jae
push
pop
adc
test
in
push
clc
arpl
push
imull
mov
push
in
mov
roll
xor
push
pop
mov
movsl
shrl
sub
aas
bound
out
test
pop
or
push
push
add
jns
cmp
rcll
sub
clc
mov
cmp
jns
jne
cmp
in
test
notb
and
xor
sub
sub
mov
push
xor
dec
jge
sub
dec
into
call
scas
gs
xor
leave
clc
fcmovbe
movsl
shlb
addr16
rcr
sbb
mov
mov
sbb
inc
cmp
xchg
nop
lahf
jne
movsb
fwait
push
in
inc
xlat
out
mov
mov
xor
aad
jp
gs
and
push
mov
scas
repz
mov
mov
push
jno
mov
inc
xchg
mov
mov
rcr
loopne
xlat
aaa
fstp
pop
adc
inc
and
cmpsb
insb
mov
aaa
insb
xchg
pop
lahf
enter
lahf
je
inc
jo
sub
mov
aaa
int
in
cmpsl
pop
or
pop
into
test
jl
jp
sbb
les
xchg
fnstenv
in
rorl
mov
loope
mov
movsb
xchg
dec
imul
mov
orb
mov
in
imul
adc
mov
aaa
fmuls
xor
inc
dec
xlat
jp
dec
insl
adc
bound
orb
sub
cmp
cmp
cmc
add
push
push
jns
out
mov
imull
adc
push
push
in
lret
jne
aaa
lea
jmp
rolb
sbbb
jmp
or
push
js
loopne
scas
xor
mov
loopne
pop
add
dec
sub
cmp
push
adcb
push
fs
push
rcl
je
mov
adc
int
push
pop
jnp
inc
fdivs
fs
dec
mov
imul
pop
call
dec
js
mov
inc
sub
xchg
cmp
rcrl
push
push
jmp
mov
insl
loopne
pop
cmp
and
push
sbb
roll
jp
xchg
daa
pusha
cmpsb
adc
into
or
cmp
jp
xor
inc
cltd
sbb
push
sbb
add
mov
push
adcl
rolb
call
inc
jnp
xlat
mov
xchg
jg
aad
repnz
xchg
sbb
push
sub
pop
mov
insb
cmp
insl
ficoms
and
inc
movl
push
repz
adc
cmp
jno
jbe
fildl
movsl
mov
out
pop
mov
sbb
addr16
jnp
jmp
mov
and
or
add
mov
dec
sbb
jbe
sahf
push
xor
lods
and
dec
dec
out
cld
imul
fdivrp
lods
mov
dec
repnz
xchg
xor
rol
fs
decb
xchg
push
xchg
bound
pop
cmp
sub
or
pushf
push
scas
sbb
cmp
push
js
mov
dec
rep
inc
cmc
push
test
jmp
xchg
mulb
mov
out
por
mov
cmp
aas
add
xchg
cld
lods
add
outsb
aam
push
mov
sbb
jle
pusha
add
jmp
mov
adc
adc
and
jmp
mov
dec
sahf
jns
adc
rcr
test
pop
adcl
dec
adc
push
aas
sub
xor
mov
ret
dec
pop
xchg
mov
cmp
jle
adc
subl
inc
sub
dec
lock
inc
cltd
test
fildll
sub
jle
xor
mov
xor
stos
fadds
fcompl
stos
cmp
pushf
lahf
xchg
aas
cwtl
inc
fwait
inc
out
in
mov
js
dec
std
fistpl
xchg
mov
mov
xchg
mov
or
jno
and
mov
lcall
push
sbb
push
cwtl
pushf
jb
divb
fnstenv
push
ds
shrb
fwait
push
sahf
and
xor
cmp
jns
hlt
add
inc
rcr
das
sub
sub
loope
lret
cmp
inc
aam
frstor
lret
inc
mov
adc
sub
jae
adc
fcoml
hlt
lds
xor
mov
ret
xor
mov
cmp
mov
or
mov
cmp
lock
loope
cltd
mov
nop
add
xchg
pop
inc
inc
fs
iret
arpl
lret
mov
jge
lods
nop
stos
pop
sbb
dec
mov
scas
shrl
ss
mov
pop
loopne
cmp
jecxz
push
cwtl
dec
adc
pop
sub
leave
out
fldcw
mov
mov
inc
aas
or
adc
sub
or
xchg
cmp
mov
jae
ss
pop
mov
and
jl
inc
fwait
cltd
and
cmp
cmp
dec
or
xor
aaa
mov
and
fimuls
sbb
sbb
mov
xor
jmp
dec
push
out
subb
mov
ret
xchg
hlt
scas
dec
js
pop
inc
xor
in
mov
adc
jb
push
xor
xor
stos
outsl
test
adc
repnz
notl
hlt
lock
lds
dec
add
dec
sub
cmp
movsb
mov
inc
sbb
xchg
adc
clc
gs
pop
out
andb
mov
jge
mov
mov
mov
enter
lock
cmp
std
add
jnp
mov
gs
stc
push
insl
lds
pop
in
and
fwait
imul
xchg
popf
pusha
stos
fmulp
mov
xchg
mov
test
nop
fstpt
repz
pop
jae
cmp
jbe
cmp
pop
mov
addr16
mov
lret
push
mov
sbb
stos
test
popa
ja
aad
lock
cmp
jl
gs
scas
movsb
in
pop
scas
cltd
and
mov
cltd
rcl
fadds
push
fstpl
cmpsb
int
adc
imul
ja
pusha
lcall
imul
mov
cmc
mov
xor
repz
cmp
in
inc
xchg
call
sbb
fldt
popa
mov
daa
out
pop
pushf
test
mov
jne
push
inc
inc
jecxz
push
cli
or
out
sbb
sub
stos
arpl
xorl
in
and
or
mov
add
ret
push
repnz
shrb
lcall
hlt
xlat
es
pop
aaa
sub
movsl
dec
ret
push
mov
pop
push
maxps
rcrb
hlt
dec
xor
popa
lret
stos
sbb
div
sbb
mov
push
fcmovnbe
mov
jp
sahf
xlat
adc
jae
shrl
sbb
imul
push
ljmp
insb
inc
movl
fstps
int
mov
jne
aad
xchg
or
lret
push
push
loope
pop
push
movsb
sub
loopne
pop
xchg
lods
mov
repnz
push
pop
xcrypt-ecb
cmpsl
dec
jp
inc
pusha
inc
jmp
mov
mov
and
mov
outsl
pop
sti
cwtl
cmp
shl
dec
mov
pop
mov
push
or
add
jle
xchg
jo
icebp
cmp
cwtl
cmp
pop
insb
or
loope
sub
cmp
scas
xchg
pusha
movsb
jbe
lcall
fwait
inc
dec
xchg
cmp
repnz
nop
jp
pop
push
push
adc
sbb
rcll
mov
fst
inc
sub
or
xlat
imulb
ljmp
cltd
mov
jnp
adc
and
out
das
data16
mov
jp
ss
mov
push
jle
and
push
xchg
icebp
imul
ret
xchg
cwtl
cmc
inc
fsubp
in
pop
in
push
xor
ret
mov
daa
mov
sub
lret
mov
into
movsl
push
loope
nop
sub
or
leave
inc
mov
cltd
cmc
push
cmp
jo
mov
mov
int
cmpl
xor
cmp
add
pop
gs
nop
mov
iret
mov
adc
imul
and
stos
mov
push
sbb
out
push
imul
and
mov
or
shrb
scas
loopne
pushf
imul
std
stos
push
mov
mov
iret
and
enter
sub
push
sub
into
push
adcb
fdiv
cs
push
cmp
mov
push
inc
test
dec
inc
imul
and
xchg
or
pop
cmpsb
fiadds
pushl
mov
repz
push
scas
daa
add
adc
test
outsb
jbe
movsb
pop
or
dec
test
fwait
mov
xchg
out
sahf
lcall
mov
loop
push
or
scas
cld
pop
cmp
cmpsl
pushf
adc
sbbl
fwait
int
inc
jge
lret
sahf
and
stc
sbb
push
xor
out
aam
cmc
loop
jge
push
mov
mov
push
mov
or
in
sbb
push
jecxz
sarl
or
mov
push
and
jmp
sub
es
push
movsl
xor
adcl
push
fs
push
mov
fcomps
push
test
adc
mov
divb
add
push
jle
and
test
out
or
cwtl
mov
out
mov
inc
notb
mov
sub
sbb
scas
mov
je
push
popf
inc
out
in
outsl
inc
cmpsb
imul
inc
pop
roll
xadd
jp
loopne
cmpsb
xchg
loopne
cmp
andl
into
jmp
call
pop
adc
mov
xor
dec
jno
cmp
fldt
jl
lcall
inc
xchg
fwait
out
popa
into
jl
mov
scas
lret
gs
fucomip
mov
imul
jge
test
cld
push
jne
mov
ds
add
lock
xchg
mov
popf
mov
sub
push
lods
and
sbb
jae
shlb
data16
lds
mov
push
xchg
lods
mov
sub
shll
dec
call
clc
lahf
and
movsl
sub
and
jle
jl
rclb
lods
ss
mov
rolb
pop
add
adc
out
je
and
out
add
cmc
jecxz
pop
into
xor
enter
mov
lret
xchg
lret
out
cmc
jns
adcb
loope
jnp
movsb
xchg
cmpb
add
js
push
or
mov
adc
rcrb
mov
in
imul
sub
mov
cwtl
lock
stos
fnsave
sub
out
clc
xorb
sub
add
out
sbb
mov
lods
test
push
lret
adc
adc
test
out
icebp
sub
dec
out
mov
push
mov
xor
mov
stos
fwait
push
sub
mov
mov
mov
cmp
pop
lcall
maskmovq
idivl
test
fdivrs
mov
mov
jg
mov
sub
loope
dec
mov
fbstp
imul
rcl
xchg
adc
ror
xor
xor
inc
push
repnz
cmp
sub
add
les
push
out
mov
nop
jl
lock
imul
pop
mov
jb
fnstenv
xlat
jl
cmpsl
jae
xchg
xor
xchg
lods
sub
out
in
cltd
jg
adc
pop
fcmovne
int3
or
icebp
inc
dec
mov
mov
mov
inc
or
or
cmc
outsb
inc
je
push
xchg
rcrl
pop
pop
pop
and
pop
shrl
or
add
shl
out
push
xor
fdivr
mov
pusha
add
test
cs
inc
cmp
je
pop
xchg
push
jl
mov
cmc
xchg
insl
stc
aam
adc
jg
icebp
nop
cmc
into
push
sub
sbb
jl
dec
inc
pusha
in
andb
dec
or
repz
cmpsl
fidivrl
bound
call
xchg
in
rcll
les
jg
pop
scas
add
cmp
orb
xor
mov
mov
sbb
pushf
dec
les
mov
lock
inc
cmpsb
insb
or
mov
lcall
push
mov
mull
push
hlt
fbstp
scas
lods
and
cs
mov
sub
out
mov
decb
xchg
pop
inc
std
fs
xchg
adc
sub
xor
cmp
mov
xor
repz
gs
pop
jae
push
sbb
and
repnz
add
add
and
mull
dec
imul
pushf
mov
jp
push
dec
jno
pop
xchg
pusha
mov
mov
sbb
pop
cmp
call
mov
push
push
scas
push
mov
mov
dec
lods
pop
js
jbe
mov
daa
add
xchg
adc
jbe
mov
push
test
sar
out
jge
iret
lret
and
lret
mov
adc
push
movsl
push
lcall
cli
pop
loope
lcall
out
test
jno
xchg
jle
push
add
jle
dec
adc
rol
enter
mov
adc
sub
pop
mov
dec
lea
pop
push
cmp
xchg
addr16
jmp
ja
hlt
sbb
mov
push
sbb
ds
call
icebp
insb
icebp
out
mov
fs
es
sbb
shlb
cltd
jl
inc
mov
fcmovbe
adc
das
mov
neg
das
jae
add
mov
push
dec
and
push
inc
jne
mov
inc
ret
out
jge
scas
sub
mov
les
inc
push
xor
sti
subl
je
std
inc
jp
test
or
in
or
push
pop
add
rol
test
xlat
dec
mov
dec
add
dec
jmp
lret
push
icebp
sbb
add
idiv
adc
repnz
pop
pop
jl
adc
sbb
mov
sbb
mov
sti
sub
cmp
mov
xchg
stos
push
scas
mov
sbb
jmp
push
rclb
xor
xor
mov
mov
mov
fsubrp
mov
jecxz
add
test
xor
sbb
add
out
daa
mov
push
xchg
jne
scas
cli
sub
or
outsb
sbb
adc
dec
mov
ret
cmp
pop
xchg
cltd
xchg
mov
adc
add
dec
in
mov
xchg
dec
aad
das
lods
out
test
popf
mov
in
lock
sbb
fsubrp
mov
add
fstl
int3
arpl
jnp
cmp
fwait
add
sqrtps
clc
pop
xchg
adcl
mov
cmpsl
add
loopne
ss
dec
pop
ljmp
lcall
mov
xlat
add
xchg
sbb
and
or
sub
cli
mov
cmpsl
inc
dec
lds
xor
and
or
mov
cmp
ret
dec
xchg
and
sti
pop
gs
nop
lods
test
push
ret
aad
dec
mov
mov
std
pop
enter
and
in
in
out
punpcklwd
sbb
jg
jnp
mov
mov
jl
mov
mov
imulb
imul
pop
insl
imul
ret
mov
cmp
aas
std
lds
jbe
mov
push
shll
push
sarb
sub
loope
inc
lret
lret
out
cmpsb
jmp
aad
pop
pop
dec
mov
lret
pushf
pusha
pop
add
pop
and
iret
out
xchg
paddw
mov
fmuls
out
xlat
and
jb
push
sbb
inc
cmc
sub
jge
data16
shll
hlt
fs
mov
stos
inc
addr16
push
daa
ss
loop
pushf
push
lods
inc
and
mov
or
insl
xchg
mov
fisttps
xor
mov
xchg
xchg
xlat
mov
jmp
fs
ds
mov
hlt
sub
scas
fbstp
cs
xchg
push
and
mov
pop
pop
into
or
inc
outsl
sbb
fnstenv
and
sbb
fcoms
call
inc
sub
addr16
push
push
sbb
mov
shr
loopne
imul
push
mov
mov
fs
repnz
mov
test
imul
gs
jl
enter
pop
int3
mov
ja
jmp
inc
cs
jge
mov
inc
push
mov
push
cmp
insl
hlt
sub
mov
mov
mov
cld
fnsave
xchg
xchg
sahf
mov
mov
xchg
mov
out
pop
mov
mov
pop
xchg
sub
arpl
adc
mov
mov
leave
sbb
fs
sarb
es
in
dec
jecxz
imul
fsubr
xchg
push
fisttpl
push
dec
in
adc
mov
mov
fsub
xchg
sti
jo
jg
rclb
dec
popa
int
je
ss
jecxz
push
dec
out
scas
xchg
flds
repnz
jp
int
sub
push
mov
pusha
add
wbinvd
mov
es
sarl
idiv
fucomip
mov
int3
in
jne
lcall
icebp
shl
fcomp
roll
pop
imul
fisttps
fcmovb
fisttpll
fwait
andl
xlat
pusha
jbe
repnz
sub
lods
pop
pushf
pop
icebp
bound
pop
jp
add
es
xlat
xchg
xor
mov
adc
xchg
add
pop
fdivrs
lods
sub
sarb
cmp
cmpsl
sti
pusha
inc
xorl
stc
popf
jnp
cli
fsubl
rorb
mov
pop
addb
stos
adc
test
mov
adc
push
mov
and
mov
jbe
ficoml
hlt
je
cld
nop
xchg
adc
push
ret
dec
rcrl
xchg
xchg
jmp
test
cmp
mov
dec
adc
push
sub
aad
xor
rcrl
dec
lea
fcmovnb
mov
ljmp
stos
sarl
arpl
mov
fldcw
shll
cld
adc
fstl
insl
enter
xchg
pop
test
push
sub
and
xor
jge
cmp
adc
mov
adc
das
fucomip
or
jne
push
stos
out
mov
popa
add
sbb
test
lahf
es
push
adc
sahf
add
cs
rcrb
pop
mov
pop
into
add
jmp
aam
and
xchg
lods
xor
repnz
add
scas
loope
dec
mov
test
adc
int
jp
sbb
push
xor
or
lds
and
arpl
lret
cs
pop
cs
xor
mov
outsl
jge
jno
shrl
xor
and
cld
int
pop
paddusw
sarl
lods
dec
lea
mov
out
jnp
pop
mov
ljmp
addb
add
xchg
xchg
jae
mov
push
stos
daa
xor
ffreep
jle
dec
pop
push
movsl
mov
lcall
mov
sub
mov
and
pop
push
ljmp
mov
mov
pop
dec
cmc
mov
pop
ja
loopne
push
cmpsb
mov
aad
fstpt
or
cmc
inc
xchg
outsl
imull
xchg
sub
lds
cmc
xlat
mov
mov
das
pop
sbb
push
clc
out
jl
xchg
or
les
pop
dec
in
and
das
aad
adc
js
adc
jnp
xor
aad
pop
cmp
cmp
push
mov
rcl
std
push
insl
push
stc
mov
cmp
cmp
xchg
cmpsb
xchg
aas
xchg
jge
jp
sahf
icebp
cmpsb
pop
sbb
xchg
push
cltd
movsb
or
mov
insb
pop
pusha
mov
and
ljmp
aad
push
xchg
adc
jbe
sub
sbb
cli
or
mov
dec
jne
test
dec
leave
lock
pop
or
movsb
pop
jnp
ljmp
sub
mov
rolb
xchg
pop
daa
std
fistps
test
add
jne
enter
add
pop
dec
mov
push
inc
add
jbe
and
out
shlb
test
lods
popf
mov
stos
call
jns
lea
subb
xchg
cmpsb
cmp
iret
pop
push
dec
ljmp
cld
xchg
out
dec
movsb
jecxz
int
shlb
adc
jne
mov
or
aad
jnp
inc
dec
sahf
shl
pop
jmp
xchg
movsb
enter
mov
mov
push
cmp
int3
cmpsl
adc
push
in
sarb
repnz
cmc
dec
fwait
push
xor
js
dec
cmp
movsl
inc
add
push
mov
dec
push
sbb
ljmp
les
fadds
jp
inc
shr
mov
sbb
xchg
dec
xchg
inc
mov
fstpt
rol
data16
movsl
mov
cmpsb
mov
mov
or
je
xchg
add
xchg
dec
lods
mov
jge
pop
std
push
outsl
in
jl
mov
cld
mov
inc
pop
or
leave
xchg
out
lock
add
adc
dec
mov
jmp
lcall
inc
inc
repz
pop
xchg
push
mov
bound
mov
sub
cs
ds
pop
mov
xor
ret
adc
call
rclb
mul
dec
popf
ficoms
cmp
push
sarb
in
xorb
xor
inc
roll
jecxz
xor
cmp
mov
add
daa
stc
jns
adc
xchg
fdivrl
and
cmpsb
xchg
sbb
dec
xor
or
lock
or
inc
xor
stc
ss
clc
fadds
mov
xor
cmp
divb
clc
aam
push
js
lcall
inc
fimull
pop
xor
fcomps
popa
xchg
xor
sub
xlat
popa
jae
mov
inc
into
mov
movsl
pop
cltd
or
mov
sbb
mov
jle
push
xor
mov
xor
les
xchg
ret
inc
push
sarl
adc
xchg
jecxz
adc
ret
cli
cmp
lcall
xor
jp
orl
out
sbb
jae
int3
daa
aad
cmp
mov
lods
test
stos
sbb
push
insb
rclb
inc
sbb
push
fsubrs
fnsave
dec
push
shl
ficoms
out
xor
inc
cmp
pushf
mov
mov
jne
push
and
shll
aaa
incl
inc
jnp
xchg
repz
in
aad
xlat
xchg
jb
mov
xor
pushf
sbb
sub
cmp
out
leave
xor
or
mov
sub
inc
ret
stos
ss
sbb
cmpsl
lods
gs
cmp
mov
adc
rcl
cli
xchg
negl
aaa
call
cmp
dec
jmp
cmp
pop
pop
push
aad
roll
cmp
mov
loop
pop
call
xor
dec
mov
fs
aad
sbb
adc
push
fstps
push
push
and
outsb
xchg
sahf
push
pop
adc
xchg
insl
cmp
xchg
test
int3
cmp
sbb
mov
outsl
jae
and
mov
call
jb
imul
and
cmp
xchg
lock
or
push
inc
out
mov
mov
imul
stos
aaa
stos
mov
fidivl
mov
xchg
hlt
out
xchg
lds
cmp
push
cmp
dec
shrb
pop
xor
mov
push
sub
repnz
imul
pop
jno
adc
inc
mov
lods
rcrl
sbb
ljmp
popa
inc
shrb
sub
notb
mov
xchg
xlat
dec
sbb
or
pop
out
stos
lods
inc
pop
out
das
sbb
adcl
mov
in
push
sbbl
lock
out
pusha
pusha
mov
cmp
xorl
test
mov
sub
push
test
push
pop
rorb
insb
dec
aaa
mov
mov
fisubs
inc
les
and
in
and
cmpsl
add
jbe
or
into
pop
stos
mov
xchg
and
cmpsl
movsb
jle
addr16
jb
cwtl
outsl
fisubrl
pop
sub
xchg
jl
ds
xor
cwtl
cltd
mov
cmp
cltd
adc
sbb
jecxz
fildll
sub
xchg
lock
fidivrs
insl
xor
loope
fcomi
push
push
add
cmp
das
jo
adc
outsl
mov
inc
xchg
cld
xor
pop
sti
push
movsb
mov
lret
jbe
cmp
adc
inc
cs
pop
mov
pop
jg
shr
je
add
xor
jp
xchg
pop
jmp
mov
add
iret
shll
sbb
cltd
lcall
mov
addr16
add
mov
ret
mov
out
lret
clc
popa
enter
data16
jae
sub
shrl
pop
adc
mov
mov
ljmp
jle
xor
rcll
outsl
mov
enter
xor
cld
insb
dec
idivl
int
jnp
sbb
andb
push
cld
xlat
sti
or
in
aam
sbb
dec
push
push
cld
xchg
incb
stc
lock
adc
gs
jns
test
xchg
sub
add
enter
xchg
jg
movsl
scas
stos
fdiv
and
cmc
mov
cmpb
rolb
fbstp
mov
mov
in
into
rorb
xor
cwtl
push
mov
sub
scas
cld
addr16
mov
daa
push
aad
dec
shrb
push
xor
xor
mov
dec
push
cmp
lahf
pop
fadds
mov
pop
or
xor
testl
das
enter
popf
push
dec
inc
dec
adc
fdivrp
jne
jmp
push
movsb
mov
mov
push
pop
rcll
imul
adc
sbbb
cmpl
push
fisubrl
data16
mov
int
and
imul
rol
add
xchg
cwtl
or
sub
test
xor
jns
mov
jns
jmp
cmpsl
lods
ficoml
imul
sub
pop
jp
in
fisttpl
sub
cmc
mov
dec
inc
push
mov
lahf
jmp
sbb
push
jns
pop
rorl
aaa
mov
lcall
mov
mov
push
jae
xlat
mov
inc
cli
les
jle
xor
pop
outsl
sahf
fsubr
mov
push
popa
pop
mov
mov
subl
mov
push
adc
outsb
pop
daa
nop
cmp
pop
mov
inc
pop
sbb
inc
mov
cli
loopne
inc
mov
push
orl
cs
push
sub
test
mov
xor
mov
add
mov
xchg
jo
push
fstl
pop
mov
cmpb
sub
jnp
dec
inc
sbb
fs
fldenv
stc
dec
push
insl
jns
cmpsb
mulb
jge
insl
andb
pop
arpl
or
jle
dec
mov
sub
popf
jne
mov
in
jae
mov
mov
addl
aaa
cmpsl
mov
pop
sbb
add
sbbl
sub
jbe
mov
mov
mov
adc
jmp
mov
lds
outsb
push
andb
fsts
ljmp
pop
adc
pop
and
dec
and
addb
cmp
les
pop
cmp
dec
mov
fistpl
pop
pop
push
xor
jl
arpl
ja
lods
adc
jo
dec
or
xor
cmp
je
xor
and
aad
hlt
sbb
test
ja
and
cmp
xor
push
loopne
jno
add
loope
ret
out
loope
dec
insb
xor
mov
sub
movsl
scas
push
cli
dec
sub
cmpb
or
ficoml
xchg
xchg
jmp
jno
cmp
pop
cwtl
outsb
arpl
das
mov
dec
mov
cmp
dec
sahf
lret
imul
arpl
ss
stos
pop
popfw
lret
mov
mov
cmp
push
es
icebp
stc
repz
insl
or
fs
inc
xor
cmp
aad
in
js
xor
jl
push
xchg
mov
xchg
cli
pop
je
fs
fnsave
enter
adc
js
or
jle
lods
lods
mov
push
stos
call
clc
mov
int3
loopne
popa
sbb
shr
cmp
addr16
xchg
lock
aaa
inc
aad
or
xchg
arpl
cmp
ret
frstor
mov
rcl
lret
lds
sti
sbb
jbe
add
insb
mov
scas
inc
push
jns
inc
inc
lret
fimuls
cs
mov
cwtl
xor
mov
jb
stos
lahf
lret
out
sbb
lds
push
fmulp
pop
cmp
aad
nop
and
push
adc
jno,pn
xor
jle
ror
jmp
movsb
dec
inc
sub
inc
xor
inc
mov
mov
pushf
icebp
jp,pt
cmp
cmpsb
call
ss
arpl
mov
mov
xchg
sub
loop
push
rdtsc
sub
fnstsw
mov
or
mov
push
adc
lret
mov
pop
mov
pop
je
xchg
lods
xchg
cmpsb
movsl
mov
push
stos
jecxz
cmp
clc
fstl
pop
popa
pop
push
leave
sti
fsubl
cmp
lret
cli
cmp
leave
dec
xchg
add
and
call
inc
pop
xchg
stos
dec
leave
test
roll
mov
mov
pop
or
add
out
mov
cmpsb
mov
gs
sbb
adcb
mov
jg
loope
dec
imul
adcl
xor
and
push
push
push
ds
or
fsubl
les
add
loop
fidivrs
inc
jg
jae
aaa
scas
or
xchg
scas
mov
add
sub
sbb
xor
shlb
push
push
mov
cmp
push
std
lret
or
jmp
or
sbb
mov
cmp
inc
test
int
pop
repnz
aad
push
mov
xchg
out
xchg
jnp
out
pushf
imul
pop
div
popf
cmpsb
push
mov
mov
bound
repz
pop
lods
rcr
xchg
outsb
mov
aad
push
push
insl
jg
scas
icebp
push
es
popf
sti
jnp
dec
mov
jg
iret
ret
or
inc
sbb
hlt
ficoml
jl
shrl
add
jne
in
leave
sahf
xchg
jne,pn
cmp
push
or
mov
push
jne
adc
xor
push
andl
and
xor
daa
subl
mov
notl
sub
leave
xor
aaa
add
insb
jb
or
ljmp
fimull
dec
mov
xchg
pop
ret
mov
dec
push
dec
aaa
iret
push
lahf
ljmp
push
scas
popf
scas
rcrb
sbb
jl
inc
or
mov
or
clc
scas
dec
roll
mov
scas
out
jg
jbe
pop
roll
fiadds
dec
xchg
adc
xor
inc
test
mov
dec
out
dec
fisubl
cli
add
enter
outsb
lods
idivl
test
cmpsb
adc
sti
xchg
outsl
lds
ret
jge,pn
cmp
setp
sbb
lcall
xchg
loop
or
push
sbb
outsb
adc
inc
inc
xchg
pop
pop
test
popl
cmc
cli
lods
xlat
addr16
shlb
movsb
and
cmp
adc
shlb
jl
sbb
jecxz
lods
mov
mov
cmp
subl
mov
loopne
add
je
in
test
jb
nop
les
add
addl
xlat
in
adc
test
inc
out
adcb
inc
add
leave
lods
das
cli
xor
mov
dec
jmp
loope
mov
imul
cltd
push
or
mov
clc
movntq
ret
adc
push
mov
movsb
jb
push
lahf
imul
jecxz
cmc
mov
cwtl
sahf
inc
push
xor
mov
inc
test
orl
icebp
jp
sbb
add
mov
cli
mov
aam
add
adc
in
dec
jl
sbb
popa
lcall
mov
pop
pop
mov
inc
sbbl
xchg
inc
es
sbb
xor
dec
out
jmp
xchg
rcrb
add
push
add
lods
lcall
arpl
dec
xor
pusha
jnp
rcrl
sbb
dec
jle
adc
negl
sub
push
xchg
nop
mov
mov
adc
mov
in
pop
push
mov
dec
mov
cld
hlt
sub
addr16
mov
xlat
mov
lock
ficoms
stc
adc
rol
subl
or
xor
dec
stc
test
or
pusha
and
xchg
add
in
dec
cmp
dec
xor
test
push
add
fiaddl
mov
push
lock
sbb
and
or
cld
sti
mov
lea
cld
es
mov
hlt
add
cld
daa
xor
dec
add
movsl
int
shlb
sahf
add
loopne
jae
or
into
add
jnp
inc
cmc
adc
jae
int3
push
loopne
std
cmp
mulb
sub
or
mov
bound
int
imul
mov
and
int3
mov
clc
adc
cli
jae
clc
lds
mov
mov
rol
movsb
sub
mov
cmp
cli
js
jb
adc
shrl
ss
pop
arpl
push
xchg
out
mov
inc
jecxz
imul
mov
mov
aam
sub
test
sbb
dec
mov
xlat
jle
shlb
ret
pop
push
ljmp
push
subl
into
dec
into
sub
jbe
xor
fcompl
es
imul
test
or
insl
ljmp
add
jmp
out
testl
sub
mov
shlb
mov
sub
and
aaa
pop
mov
jl
mov
adc
push
push
or
insl
les
stos
movsl
and
je
fs
lods
in
leave
adc
push
push
das
pusha
push
fists
mov
imulb
je
or
jae
sahf
cmp
rolb
jb
scas
inc
jecxz
cs
scas
sub
les
dec
and
pop
aam
inc
and
inc
xchg
lock
mov
outsl
test
lret
push
movsb
leave
jnp
adc
sub
addl
jne
cwtl
ja
fildl
sub
sti
inc
cmp
adc
push
insl
enter
and
mov
jae
in
dec
test
call
xor
ds
repnz
pop
xor
lret
mov
jne
mov
in
xchg
popf
or
in
dec
hlt
cmp
hlt
pop
cmp
push
mov
repnz
subl
aas
cld
add
andb
jne
inc
das
push
push
lcall
leave
fcomps
mov
lock
popa
or
test
shl
adc
xor
sbb
les
sahf
mov
insb
sbb
sahf
test
sub
jp
pop
dec
mov
xchg
and
mov
cli
sbb
sub
data16
mov
test
movsb
ljmp
je
mov
pusha
cmpsb
adc
loopne
sbb
cwtl
and
das
cmp
mov
mov
es
jmp
out
test
inc
jge
in
xchg
neg
jno
mul
cmp
cs
mov
xchg
jmp
out
xchg
adc
mov
inc
pop
aas
jnp
mov
jae
pop
sarl
mov
das
movsb
test
add
pop
and
mov
adc
movsb
jne
jle
int3
xchg
das
jb
shr
out
xchg
sub
adc
mov
adc
sbb
in
sahf
xchg
cmp
andb
ljmp
das
xor
lahf
adc
dec
push
stos
jnp
cmp
daa
fnsave
jl
mov
enter
jmp
out
sarb
pop
cld
mov
in
in
push
clc
add
call
aas
popf
add
mov
daa
mov
dec
out
mov
inc
loopne
jne
or
test
xchg
cmp
and
adcl
cltd
fimull
pop
cld
aam
push
mov
pop
shrl
test
hlt
mov
sbb
xlat
cmp
lahf
imul
sub
in
xorl
aad
mov
or
lret
mov
jno
jl
negb
sub
lcall
lcall
lahf
out
push
sub
push
jns
mov
scas
xchg
mov
push
lret
repnz
mov
pop
je
fs
inc
push
mov
or
in
mov
popa
lods
scas
fsts
mov
fisttpl
adc
push
dec
mov
dec
gs
dec
pushf
fadds
cld
mov
cmp
and
fs
inc
in
inc
pop
in
sbb
in
roll
jnp
jmp
and
sub
mov
fmull
test
xchg
sbb
lods
bound
pop
inc
fbld
loop
jb
add
mov
stc
insb
jmp
sub
cmpsl
test
cld
or
fdivs
push
scas
js
and
int
mov
mov
xchg
cmp
nop
dec
aad
cmpsl
test
fucomp
loopne
pop
dec
test
lahf
pop
mov
fcomps
mov
loop
adc
repz
or
fisubs
inc
stos
int
or
pop
add
sub
jne
and
out
adc
cmp
inc
mov
lods
loop
pop
and
adcb
mov
ljmp
sub
popa
mov
inc
push
cmc
imul
movzbl
cltd
out
popl
add
jecxz
xlat
pop
add
orl
adc
fcmovnu
ret
aaa
movsl
cli
push
adc
add
out
and
cwtl
and
adc
cmp
mov
dec
ja
ret
iret
sub
jmp
out
sub
insl
pop
ljmp
adc
iret
jnp
dec
mov
cmp
pop
jo
stos
inc
lahf
mov
notb
xor
popf
add
and
mov
dec
divl
jo
mov
mov
add
mov
repnz
cmp
ja
out
ret
enter
sub
mov
lods
mov
xlat
push
or
les
popl
mov
mov
pushl
mov
sub
shrb
lea
out
mov
mov
push
into
sbb
out
xchg
or
mov
movsb
stc
jnp
movsl
mov
cmp
into
jl
mov
add
leave
and
sbb
dec
lds
add
push
xchg
push
lcall
lods
psubd
mov
shlb
push
das
aaa
inc
pop
test
cs
in
inc
lret
cmp
stos
push
ret
sbb
adc
aaa
enter
hlt
je
and
clc
jns
loopne
pop
dec
movsb
adc
call
dec
sbb
mov
arpl
add
arpl
adc
or
bound
dec
push
adc
push
in
fwait
lods
xchg
add
sarl
loope
repnz
scas
decl
add
aad
adc
cmp
mov
outsl
sub
lret
push
icebp
mov
and
out
pop
popf
into
mov
add
fisubrl
adc
jmp
movsb
jg
mov
and
push
jb
clc
mov
pushf
enter
imul
ljmp
push
cmp
jmp
sbb
fwait
out
iret
xchg
dec
sarl
test
aad
dec
loop
lahf
mov
scas
add
push
gs
pop
fistps
cmpl
in
sbb
movl
mov
mov
addr16
iret
jle
sarl
scas
cmpb
sub
sbb
push
fnstsw
mov
in
jno
mov
inc
lahf
fs
mov
or
lret
pop
adc
xlat
mov
mov
shll
enter
and
in
inc
push
hlt
shl
addr16
out
insl
pop
and
sub
push
in
iret
adc
mov
adc
cwtl
lret
dec
cmp
adc
pop
cmpsl
adc
pushf
call
xlat
flds
adc
adc
mov
fs
cmpsl
sub
jo
push
jp
jge
add
enter
test
adc
or
ljmp
mov
lahf
or
pop
inc
cmp
dec
jmp
xlat
mov
xchg
and
xchg
subb
mov
ds
movsl
dec
pop
and
std
dec
fnstenv
aam
add
aad
fstpt
push
sbb
mov
sbb
dec
inc
les
pushf
sbb
sahf
push
add
jb
jle
mov
lret
sub
jecxz
or
push
arpl
lea
ljmp
mov
cmpsl
and
and
outsb
data16
xor
cmpsb
out
push
mov
sub
in
xor
mov
imul
lret
addr16
dec
js
mov
adc
divl
jnp
jmp
push
cmpsb
nop
mov
loopne
jnp
rcr
dec
movsl
xor
mov
adc
add
xchg
out
adc
test
dec
jg
imul
repnz
and
push
xchg
mov
cs
shlb
dec
xchg
mov
xchg
xlat
daa
jmp
cmp
push
mov
dec
dec
in
mov
xchg
roll
test
enter
mov
aam
mov
lcall
dec
xchg
mov
lods
rolb
dec
imul
stos
and
inc
stos
and
into
and
or
fwait
leave
imul
not
fadds
je
add
xchg
mov
sbb
add
test
filds
push
into
push
nop
sbb
jno
inc
ret
pusha
dec
loopne
repnz
inc
ret
les
sbb
repz
aam
cld
adc
mov
and
arpl
ret
mov
jle
jl
fldcw
inc
push
outsb
je
inc
ljmp
lds
mov
test
mov
stos
dec
fwait
test
sbb
mov
pop
adc
dec
pop
jmp
push
and
test
sbb
mov
pop
cmp
mov
movsb
xor
adc
fmull
sbb
push
inc
xlat
cmp
std
imul
fidivrl
and
test
addr16
test
les
andl
stos
outsb
dec
adc
fsts
daa
mov
add
popl
and
pushf
add
cmp
test
test
mov
jl
daa
dec
xchg
mov
arpl
inc
sub
aam
mov
inc
mov
adc
jmp
push
arpl
in
test
in
dec
dec
popf
cli
shlb
add
jmp
loop
das
dec
mov
add
dec
push
xchg
bound
cltd
frstor
test
aas
adc
fidivs
lret
push
mov
sub
imul
jp
sbb
iret
mov
mov
hlt
push
dec
pop
mov
jne
cs
push
scas
int3
and
and
push
inc
iret
dec
jle
mov
add
push
popf
xchg
dec
xor
pop
outsb
mov
add
cmp
adc
in
bswap
xchg
movsb
das
popf
inc
cmpsb
mov
add
ficoml
inc
xchg
aad
sub
jmp
push
in
outsl
pop
scas
repnz
pop
movsb
xchg
scas
push
sbb
and
pushf
test
aaa
sub
daa
loopne
insb
outsb
jl
hlt
xchg
repz
cmp
outsb
popa
les
mov
cmc
bound
std
shr
aaa
xchg
lcall
out
pop
js
lret
mov
mov
jae
xchg
imull
test
cwtl
or
jmp
sub
dec
push
verw
and
insb
ljmp
mov
icebp
xchg
xchg
mov
ja
lea
push
stc
pop
sbbl
sub
loope
es
mov
outsl
cltd
hlt
lods
push
and
std
rolb
push
jmp
test
stos
movsb
push
rcrb
dec
call
test
cmpsl
push
push
add
mov
cltd
test
in
pushf
cmc
lcall
fsubs
mov
jne
xchg
jge
roll
mov
mov
sbb
movsl
sub
mov
cmp
orl
or
xor
push
xor
sarb
rorb
pop
mov
imul
addr16
in
jle
imul
and
scas
mov
and
ret
movsl
adc
pop
dec
xor
movsl
imul
das
dec
push
xchg
fisubs
ds
push
adc
mov
jbe
stc
jno
cwtl
push
dec
push
insb
shrb
mov
cmp
loope
dec
sub
fsubs
push
adc
sahf
jno
mov
jle
lods
fwait
scas
fidivrs
cmp
les
mov
cmc
xchg
sbb
xlat
jle
icebp
insl
int3
mov
daa
adc
stos
pusha
push
aam
lods
push
sbb
inc
push
push
or
pushf
cmp
imul
cmovl
sub
push
repnz
cmp
out
outsb
push
scas
mov
mov
add
insb
inc
in
icebp
or
fdiv
push
inc
sbb
loop
fcmovnu
scas
andb
mov
push
or
out
sbbb
addr16
cmp
dec
adc
mov
cmp
ljmp
sti
sbb
loopne
insb
lcall
imul
adc
es
jmp
inc
mov
fstpt
hlt
ss
out
repz
roll
cmp
mov
sbb
push
dec
call
sbb
pop
adc
or
xchg
test
inc
out
enter
cmp
test
orl
mov
scas
sub
int
xor
xchg
je
dec
les
cmp
mov
mov
call
xchg
push
shlb
cmp
filds
imul
push
or
cmpsl
lret
pushf
aad
sbb
cmp
shll
sub
rolb
lock
lods
test
fsubl
fwait
mov
lods
dec
inc
lods
mov
or
jb
iret
je
in
lret
lahf
es
ja
shlb
std
mov
dec
adc
in
xor
jl
aas
sbb
lods
add
mov
std
jns
ret
loop
cltd
push
sub
arpl
repnz
sbb
data16
ljmp
mov
sub
fsts
inc
movsl
mov
test
cmp
dec
aad
cmp
sbb
pop
mov
aaa
mov
test
fistps
jnp
sbbb
pusha
nop
adc
push
sub
mov
mov
and
mov
cmp
ss
push
stc
into
fnstsw
loope
dec
lret
mov
xchg
addr16
nop
in
sbb
push
xor
cltd
push
mov
adc
jae
fildl
insl
cmp
adc
test
add
rorl
fistps
mov
punpcklbw
ret
cmpsb
sbb
adc
sti
repz
outsb
push
mov
inc
sbb
dec
mov
push
out
stc
out
cmp
into
pop
adc
dec
repnz
popf
in
mov
fucomip
jno
add
jp
add
mov
in
and
and
mov
jne
ret
inc
pop
push
jle
stos
stos
jae
pop
mov
das
inc
aam
testl
jp
dec
jb
mov
push
arpl
pop
jb
add
lods
add
je
ja
xor
mov
inc
push
sub
shl
fwait
and
das
lahf
xor
loope
xchg
sub
push
xor
mov
outsl
add
fldl
mov
mov
adc
cltd
inc
dec
push
test
and
shll
ret
and
sti
push
and
gs
nop
xor
push
into
and
cmpsl
inc
pushf
inc
push
mov
out
push
adc
sub
push
pop
jb
push
lods
lea
xor
jns
inc
add
sub
pop
fcmovbe
add
test
cmp
rclb
xor
mov
push
sub
push
xor
mov
lret
jmp
mov
in
lea
and
subb
lock
addl
dec
loop
push
popf
jmp
out
das
dec
mov
pop
ss
mov
insl
cmpsb
lods
lock
gs
push
xor
jmp
cltd
sub
inc
test
mov
adc
out
pop
rclb
add
subb
outsl
jecxz
test
andb
stos
xor
push
cwtl
mov
rcr
push
cld
dec
test
cld
jmp
cmp
jns
out
fcomps
xchg
fs
cmpl
int3
lea
and
mov
mov
sbb
or
adc
adc
repz
insb
fstpl
pop
xorl
in
cmc
loope
aas
sti
lods
xchg
mov
push
xchg
cmp
out
jl
into
out
pop
sbb
sbb
pop
inc
inc
xor
orl
std
mov
out
jg
mov
mov
lret
push
push
dec
or
adcl
ds
cltd
add
test
notl
testl
xchg
insb
dec
outsb
push
adc
mov
mov
shl
lret
lret
pushf
xchg
stos
add
stos
push
xchg
mov
sub
dec
add
sub
popf
repz
adc
xor
cld
adc
mov
mov
jle
xchg
sub
xchg
jle
dec
jmp
xchg
ljmp
dec
pop
adc
adc
sbb
cmpsl
pushf
adc
fists
repnz
test
mov
add
push
js
arpl
jae
out
pop
lcall
cmpsb
pop
pop
test
push
and
and
ljmp
mov
mov
cmc
rcr
pushf
shrl
loop
mov
stc
add
inc
into
and
cmp
xchg
mov
xchg
and
xlat
fidivrs
inc
sbb
and
roll
xchg
jl
in
push
insb
movsl
bound
std
das
outsb
push
int
add
mov
jb
mov
lea
inc
and
pop
xor
mov
cmp
outsb
imul
pop
into
stos
pusha
dec
push
jle
arpl
jb
inc
jmp
lret
cmpsl
or
mov
mov
inc
inc
ljmp
lret
fcoml
pushf
cld
inc
repz
jp
pop
push
jl
mov
out
xor
out
xchg
cmp
xor
inc
xor
call
les
xchg
shl
or
push
ficoms
adc
nop
xchg
sbb
cmp
mov
push
popa
and
or
xchg
fistl
xchg
mov
sarb
dec
outsb
aas
in
dec
pop
sub
test
ja
push
sub
adc
xchg
jle
sub
or
push
mov
jge
repz
jbe
out
xor
icebp
xchg
pop
mov
arpl
repz
outsb
fisubl
pushf
pusha
push
mov
mov
fstpt
mov
mov
es
addr16
fidivrs
and
sti
jae
fdivs
add
fsubl
movsb
adc
sub
call
ja
lret
inc
and
cmp
in
or
out
lock
fildl
faddl
mov
push
sub
in
insb
and
jo
clc
lcall
lods
sahf
sbb
jb
and
push
sub
lock
das
out
mov
xchg
add
or
pop
cmpsl
and
shlb
adc
mov
aaa
and
adcb
cltd
adc
mov
movsl
xchg
fisubs
sub
cmp
xchg
int
fsubrp
sar
stc
and
mov
pop
mov
mov
mov
nop
mov
xchg
adc
sub
lods
cld
or
push
inc
pop
call
sub
jne
sub
add
scas
mov
mov
test
ret
inc
xchg
call
movsl
pusha
in
mov
shrl
xchg
or
daa
daa
mov
scas
mov
fnstcw
cmp
xor
ds
mov
sbb
aam
mov
add
imul
mov
scas
lods
pop
ds
mov
add
pop
jg
lret
push
test
int
push
neg
in
lods
and
cli
repnz
cwtl
rcrb
cld
repz
fisubrl
lods
mov
jp
pop
or
je
pop
movsl
stos
and
mov
out
rcrb
test
pop
aas
pop
sub
fwait
dec
adc
imul
or
scas
pop
lock
cmp
sahf
je
popa
inc
push
mov
ja
pop
pop
ja
cmp
xchg
mov
daa
and
cmp
jl
movsl
es
sahf
sub
out
lret
cmpsb
and
xchg
add
dec
les
jb
mul
sub
iret
insl
inc
lahf
out
adc
nop
pop
outsb
rcrb
mov
adc
out
rcr
sbb
jg
add
in
shrb
pop
cltd
cli
sahf
les
rorb
lds
push
jne
mov
test
xor
jmp
push
push
es
jle
push
repz
shll
stos
ret
xor
or
pop
inc
sbb
mov
push
xor
sbb
imul
out
outsl
or
cwtl
sahf
inc
push
xchg
lock
mov
fs
test
sub
sbb
outsb
xor
dec
lret
and
in
dec
cli
push
sub
sqrtps
je
cmc
loope
cmpsb
test
add
add
fs
aad
inc
decl
or
jge
loop
xchg
dec
push
pop
iret
cmp
dec
fwait
lret
clc
inc
mov
enter
leave
mov
repz
call
xchg
call
std
les
adc
xor
cmp
insb
cli
popa
outsb
hlt
hlt
not
sahf
adc
cmpsl
ss
lea
sub
push
aaa
cmp
mov
shrl
jae
cmpsl
xor
mov
scas
repz
cmpsl
lret
fwait
js
fldcw
out
pop
loope
cltd
or
xchg
into
push
mov
push
mov
pop
stos
inc
xchg
insb
xchg
enter
mov
bnd
mov
cli
ret
sbb
jl
in
mov
movsl
ja
int
mov
mov
sub
xchg
jb
out
shrb
loopne
xchg
jle
outsb
movsb
push
jl
dec
dec
rcrb
inc
mov
ljmp
iret
outsb
insb
ret
out
sub
xchg
and
leave
push
dec
or
gs
mov
push
lea
out
dec
ss
cmpsb
popf
aad
push
stc
rcll
xchg
mov
daa
gs
cmp
cmc
push
mov
and
decl
mov
add
sub
sbb
and
sbb
sbb
stos
stc
xor
imull
mov
addl
and
lds
popa
lahf
push
mov
xchg
cwtl
data16
imul
nop
xor
icebp
xchg
lods
jecxz
ss
shl
adc
sbb
push
cmp
orb
jg
and
jg
xchg
mov
xor
stos
scas
dec
jge
rolb
pop
fildl
imull
push
add
mov
js
mov
pop
pop
push
mov
add
pop
dec
aam
pusha
pop
sar
jecxz
mov
outsb
sbb
dec
xchg
jg
movsl
scas
imul
jb
jno
and
or
xchg
enter
lcall
push
lods
out
mov
sub
ss
aad
add
cmp
xchg
aad
imul
popa
jmp
test
out
fdiv
lret
jmp
clc
push
insl
sarl
out
cmp
jno
and
scas
pop
mov
lret
xchg
xor
sbb
aad
sub
cmp
gs
cmp
test
lods
test
adcl
pop
or
mov
push
push
xor
jle
and
test
stc
or
mov
sbb
out
push
cmp
cmpsb
mov
add
jbe
jmp
cltd
mov
mov
mov
pop
insl
dec
jmp
jg
pop
mov
sbb
pop
ret
in
mov
jbe
jmp
cmc
mov
or
popl
cwtl
repz
das
sub
mov
cmpsl
gs
jb
fistps
cltd
push
xlat
fmul
sub
or
fs
jb
and
pushf
popa
xadd
cli
or
les
cmovnp
or
ja
hlt
bound
loope
lret
ss
es
notb
cwtl
xchg
adc
and
sbb
push
in
mov
movsb
fidivrl
inc
pop
fimuls
jmp
mov
push
nop
cmc
ja
ljmp
xchg
adc
call
mov
les
add
lds
mov
jne
lods
and
ficoml
mov
adc
jle
cmpsb
mov
nop
or
xor
imul
arpl
lcall
ljmp
jge
les
stos
ss
mov
andb
sub
inc
ret
sub
ret
loopne
mov
out
out
pop
mov
xor
int3
fnstsw
or
sub
xor
out
int
in
fadds
clc
dec
lret
inc
stos
enter
mov
pop
mov
inc
xchg
fidivl
sbb
inc
inc
and
xchg
test
sarb
iret
imul
jl
movsl
inc
sbb
inc
mov
clc
jae
into
jb
lock
jp
inc
insb
inc
outsl
jnp
inc
jge
mov
in
fldcw
cmovae
dec
inc
sbb
dec
mov
push
sbb
add
mov
cmp
add
jbe
and
cmp
inc
arpl
les
aam
hlt
inc
push
jb
movsl
mov
push
add
repz
lret
dec
sub
mov
xchg
pop
mov
adc
rclb
xchg
push
lret
mov
loop
pop
sarl
inc
inc
mov
dec
in
pop
js
mov
push
ret
pop
sbb
adc
xor
mov
xorl
xorb
lock
mov
inc
cmp
mov
shll
cmp
gs
adc
lcall
sbb
jb
mov
sub
addl
xchg
pusha
bound
es
in
dec
ljmp
xchg
out
mov
xchg
jbe
scas
xor
sub
ja
mov
xlat
std
insb
mov
jnp
fadds
out
mov
int
xchg
or
xorl
or
lret
jae
sbb
jmp
xchg
mov
push
clc
xchg
faddl
adc
cmpsb
mov
stc
scas
loop
or
mov
rorb
sbb
mov
push
fcompl
or
and
mov
roll
test
and
mov
lret
stc
xchg
xchg
lret
icebp
or
jecxz
xor
mov
xor
roll
cmp
scas
xor
or
lcall
and
and
push
fsubrp
mov
dec
scas
or
out
loope
sub
cmp
lahf
mov
movsl
xchg
push
add
jl
mov
mov
push
xchg
dec
jge
fcomip
addr16
push
popf
xchg
leave
xor
adc
and
xchg
push
mov
lcall
addr16
xchg
fldt
or
stc
xchg
pop
mov
mov
jne
out
sbbl
push
inc
ret
mov
add
daa
sbb
mov
cmpsl
imul
jg
pop
sbb
inc
movsl
scas
push
je
into
aam
mov
gs
add
mov
sbb
loopne
xchg
push
jge
pop
fldl
sbb
jns
add
test
mov
pop
int3
test
cmp
dec
push
mov
inc
dec
push
bound
shlb
cmp
loopne
add
and
pop
mov
add
mov
add
or
pop
mov
adc
test
stc
add
ja
lahf
aam
repnz
iret
stos
mov
mov
sti
pop
mov
jl
or
mov
insb
jae
mov
gs
mov
add
xchg
mov
lcall
scas
xlat
ss
push
push
enter
sub
in
nop
push
in
orl
insb
and
ljmp
xchg
or
pushf
loopne
jg
imul
test
jl
leave
scas
or
sbb
fisubl
outsl
sbb
js
sbb
adc
aaa
adc
scas
inc
test
mov
insl
dec
aas
sbbb
mov
xor
nop
lret
es
xor
add
jp
xor
dec
inc
dec
jb
sarb
pushf
inc
bound
in
ret
or
icebp
pushf
mov
and
inc
sahf
mov
es
sbb
pushf
cs
pop
fisubrs
mov
je
mov
rcrl
push
or
jne
idivb
mov
add
mov
mov
or
notl
inc
cmpsb
jecxz
test
aad
roll
loop
xchg
jae
inc
movsl
into
stos
xchg
shl
or
or
push
sti
dec
cmp
pop
sub
jbe
mov
ss
jge
dec
jmp
xchg
fnstsw
jo
xchg
lods
mov
lods
inc
lea
mov
sbb
outsb
jae
jg
inc
arpl
enter
cmp
xchg
ret
mov
repz
xchg
imul
fiadds
add
mov
mov
mov
lods
xchg
sub
dec
in
fwait
outsb
aad
add
cmp
out
sub
lods
sub
test
ffreep
mov
xlat
scas
jnp
jns
repz
jns
test
xlat
jl
orb
jb
test
mov
mov
shrb
mov
xor
push
push
repnz
ficompl
and
aas
jno
jno
insb
xlat
jge
mov
outsl
sbb
mov
fidivl
fs
into
in
and
push
ret
cmp
jne
in
add
insl
out
iret
xchg
in
jecxz
sbb
fldt
out
cmp
lahf
add
pop
fistps
pop
mov
fimuls
outsl
shlb
lcall
sub
cli
mov
das
ja
fidivl
jbe
mov
outsl
and
jb
adc
mov
out
pop
jmp
loopne
lret
movsl
or
xchg
mov
cmp
dec
nop
test
jg
inc
add
adc
and
sub
mov
repnz
imul
push
scas
repz
or
gs
hlt
sub
movsl
call
ret
popa
sbb
add
mov
cld
dec
jbe
pop
loope
mov
nop
ja
ret
jg
scas
jne
sti
xor
xor
lea
jnp
adc
aaa
outsl
mov
mov
data16
daa
jp
mov
mov
add
sub
ljmp
js
sbb
and
mov
int
ss
insl
fsubr
sub
cli
push
fnstcw
cmp
mov
cmp
in
push
jae
mov
bound
jb
mov
orl
lds
orb
ss
sbb
xchg
std
loop
sbb
stc
inc
cli
add
hlt
xchg
in
push
insl
inc
jl
lods
push
sbb
sub
inc
imul
cmc
inc
sub
xchg
xor
pop
jg
mov
lds
aas
or
dec
mov
in
cmp
cmp
or
dec
mov
sbb
mov
movsl
mov
add
push
add
into
mov
cmp
outsl
stac
clc
add
push
sbb
xchg
or
add
mov
test
fistpl
mov
fcmovnu
popf
shrl
hlt
dec
fisubrl
sub
xchg
insl
add
adc
outsb
push
stc
cmpl
jl
popa
mov
aam
mov
adc
orl
jg
mov
test
cltd
addr16
cmp
mov
js
cmp
mov
mov
clc
mov
inc
push
jb
mov
inc
nop
rclb
mov
fildl
cmp
maxps
pop
mov
xchg
mov
rorl
xchg
fs
push
rcr
push
ja
push
fldcw
or
xchg
adcl
popa
sbb
sbbl
in
add
ljmp
mov
jne
out
scas
jae
pop
in
scas
or
ja
pop
dec
test
shll
xchg
cmp
push
fadds
mov
mov
imul
neg
jle
push
xor
lahf
push
iret
dec
xorb
cli
test
push
dec
lds
xlat
inc
lea
rclb
xchg
mov
scas
push
push
mov
sbb
inc
leave
pop
dec
int
xor
xchg
dec
mov
ds
jp
imul
inc
movsb
addr16
mov
das
lahf
jmp
arpl
mov
or
dec
pop
arpl
shlb
xor
inc
adc
xor
dec
dec
je
fstpl
or
movsb
mov
popa
and
mov
pand
out
inc
lcall
aaa
repz
xchg
rclb
outsb
xchg
mov
mov
mov
push
xchg
cmp
pop
jae
iret
lods
cmp
sbb
repz
mov
test
adc
cwtl
xchg
and
xor
stos
stos
and
stc
mov
xchg
mov
and
fbld
cmovo
mov
aam
jns
lods
enter
dec
jno
idiv
aaa
cmpsl
call
scas
pop
imul
fstpt
push
aam
daa
push
cmp
cmp
xchg
push
xlat
ss
jb
adc
and
fstpt
xor
xor
xchg
jnp
sub
add
jmp
xchg
outsl
call
subb
mov
outsb
aas
push
inc
and
cltd
cld
movsl
lock
cmp
gs
add
mov
shlb
inc
mov
jle
das
push
jecxz
pushf
sub
les
aad
adc
in
test
mov
jae
repz
je
mov
mov
mov
gs
ja
or
loope
cmp
shr
jnp
in
adc
adc
jmp
sahf
sti
dec
and
sbb
pop
fstps
inc
rcl
test
xor
and
sti
je
fdivr
pop
and
and
dec
pop
xchg
cmp
aad
cwtl
pop
lods
push
repnz
lcall
push
mov
pop
cmpl
sar
mov
mov
mov
push
push
jae
or
jl
jnp
sbb
sti
adc
sub
cmp
cmpsb
pushf
jne
lods
rolb
or
ja
mov
pop
pop
jne
adc
imul
negb
subb
pop
fsub
movsb
push
sub
out
push
mov
cmpsb
mov
repz
movsb
popf
sbb
jle
dec
add
push
jb
shrb
dec
mov
cmp
mov
mov
lock
fnsave
or
jne
aam
pushf
cmpsl
mov
mov
jecxz
shll
cmp
mov
xor
in
jl
mov
js
test
inc
pop
xchg
push
aaa
out
inc
enter
arpl
scas
add
mov
negb
adc
js
sahf
inc
jl
stos
call
fidivl
mov
or
stc
mov
loop
lret
pop
call
mov
pop
sbb
rolb
mov
push
fbstp
xchg
cmp
jnp
scas
inc
pop
shrb
inc
arpl
rol
fs
sub
xchg
ret
cs
xor
cs
xor
loop
fmuls
mov
push
sarl
in
inc
push
or
mov
adc
add
mov
dec
sbbb
js
or
hlt
repz
mov
xchg
cmp
pop
out
into
ret
xor
xchg
popf
xor
lret
dec
jmp
iret
and
cmp
adc
dec
xchg
jecxz
clc
imul
mov
sbb
imul
and
adc
cmp
out
inc
push
mov
mov
mov
push
sub
ljmp
push
stos
fsubr
cmp
fs
cmpsb
ss
push
inc
push
sahf
mov
jo
ljmp
cli
mov
and
push
fwait
push
stos
sbb
sbb
out
jb
testb
sub
shll
cmpsb
sbb
pop
in
jnp
pop
ficomps
fmul
shlb
xor
movsb
test
and
push
in
mov
sub
jns
std
xchg
adc
sarb
scas
sti
ror
test
aaa
mov
xlat
insb
ljmp
rolb
push
jge
mov
pop
enter
jmp
add
sar
mov
rcrb
xor
mov
xchg
or
lods
cmp
mov
dec
fs
or
hlt
push
jecxz
loopne
test
adc
inc
sub
je
call
adcb
or
in
inc
dec
jp
call
sbb
icebp
inc
je
mov
xchg
mov
cmpsl
pop
adc
mov
cmp
gs
xchg
pop
dec
mov
adc
aad
je
inc
mov
imul
xchg
rcr
jp
mov
rclb
insl
pop
out
in
cmp
out
dec
mov
rcrb
adc
lret
cmp
sub
inc
add
and
fcoml
call
pushf
adc
and
sub
ss
sbb
andl
mov
stc
cmc
push
ret
and
lret
and
in
and
dec
mov
pop
shlb
scas
stos
mov
cli
cli
cmp
jo
sub
test
push
pop
adc
in
ljmp
add
ja
pusha
xor
or
shlb
pushf
mov
pop
lcall
jbe,pn
jns
loop
aam
mov
call
into
loopne
movsl
sub
addl
xor
cmp
lock
out
mov
fmulp
dec
movsb
in
sub
mov
mov
xchg
xchg
xor
pop
lcall
stos
push
stc
stos
lea
push
dec
leave
add
inc
mov
mov
idivl
negb
jmp
pop
arpl
imull
sbbl
adc
dec
loope
popf
cli
jo
daa
lret
jle
or
or
mov
mov
cmp
jns
mov
adc
test
test
cmp
popf
orb
addr16
fistpl
rclb
cmc
jle
inc
fiaddl
sbb
pop
call
shr
test
shll
pop
mov
or
add
xchg
xor
adc
out
push
jne
das
dec
mov
sub
arpl
push
or
add
jbe
repz
sbb
cmp
inc
insl
sbb
cmp
out
mov
lahf
cmp
pop
xchg
test
movsb
pop
jbe
push
dec
cmp
cld
ss
xlat
outsb
lret
aad
ds
repz
push
add
mov
cmpsb
daa
add
popa
fldl
fcmovnbe
push
inc
inc
bswap
daa
sqrtps
fimull
jne
iret
fdiv
mov
rolb
mov
loope
inc
push
inc
idivb
shrl
int
xchg
insl
xchg
add
dec
repz
xchg
popf
sub
gs
stc
xchg
aam
fstps
pop
fwait
hlt
call
imul
out
sub
push
mull
out
movsb
ja
push
sbb
jae
and
or
push
cltd
roll
out
push
in
sub
insl
data16
jecxz
pop
lock
push
cmc
lock
daa
push
loop
fcmovnbe
push
inc
imul
js
dec
xchg
xor
fdivs
ds
lahf
xchg
cmp
movsl
int3
shl
ss
icebp
das
cmp
xchg
mov
push
xchg
fdivrs
dec
adc
mov
lret
out
dec
fcompl
xor
or
jmp
test
jb
rol
test
mov
lcall
push
cmpsb
ret
jp
loopne
sbb
inc
pop
xchg
sub
dec
ss
enter
pusha
mov
xchg
cltd
pop
sarb
clc
je
cmp
jo
cs
out
push
xchg
pop
ja
xchg
cmp
fdivrl
icebp
inc
jl
shrl
and
sub
jns
popf
mov
shrb
mov
xchg
jg
stos
sar
testb
xchg
pop
inc
xchg
jle
fistpl
lock
mov
add
in
fstps
mov
lcall
rorb
loope
push
out
je
ds
test
cmp
xor
iret
negb
jge
jle
fsubr
mov
mov
cli
mov
mov
pop
xchg
icebp
ud2
xor
add
popf
xchg
push
lcall
std
jmp
jecxz
aas
mov
pop
movsb
xchg
sti
popa
jl
lea
adc
jg
cmpsb
mov
pop
ds
lods
daa
int
add
or
mulb
sub
rolb
das
shll
test
xor
mov
movsb
pop
jno
nop
pop
cmp
notb
sub
xchg
gs
push
sbb
sarb
sahf
lahf
test
cmp
push
push
adc
xchg
fmuls
adc
fadd
sbb
mov
imul
mov
in
data16
ret
stos
addl
add
mov
repnz
out
pop
hlt
xchg
in
jnp
loope
stos
mov
scas
repz
daa
or
ss
mov
lock
incl
sbb
sbb
stc
push
gs
sarl
movsl
movsb
xor
lret
test
pop
xor
movsl
dec
mov
hlt
stos
divb
dec
xlat
arpl
push
cs
dec
les
clc
xchg
add
cmp
aas
push
cmp
mov
data16
xchg
fldenv
arpl
push
test
jb
xchg
xchg
mov
call
arpl
aam
xor
sbb
pop
dec
dec
mov
pop
cmp
mov
sbb
sbb
jb
inc
fimull
or
bound
xor
inc
cltd
sub
push
enter
cmc
fwait
rorb
or
xchg
out
add
add
and
fpatan
mov
xchg
push
mov
out
lods
and
xchg
int3
fidivrl
push
or
and
lret
push
mov
imull
mov
mov
xchg
popf
or
mov
shr
std
mov
mov
fmull
xchg
add
andl
dec
dec
sub
mov
movsl
mov
std
xchg
add
xchg
aas
insl
shll
xchg
jb
sbb
fwait
pop
and
test
popa
std
call
aam
pop
jge
out
jmp
adc
repnz
sub
inc
das
mov
cmp
loope
mov
out
cmc
jae
outsb
or
adc
or
dec
inc
xchg
xor
les
xchg
pop
mov
and
cmc
sbb
mov
cmpsb
inc
icebp
dec
mov
pop
aad
inc
xchg
jp
pop
cmp
mov
outsl
nop
cltd
insl
iret
mov
mov
fisubrl
mov
adc
cmp
mov
arpl
pop
sbb
fcmovne
aad
out
mov
pop
jno
rdpmc
dec
and
sbb
jb
stos
and
xlat
jg
les
sub
rolb
inc
inc
push
cltd
dec
jo
jge
ret
xor
daa
je
and
mov
scas
sti
xor
push
pop
cmpsb
stos
imul
and
mov
ds
lahf
mov
inc
in
sti
pop
sbb
xchg
jle
lret
lcall
dec
cli
int3
bound
adc
fdivr
xlat
dec
imul
sti
aas
call
idivb
ljmp
and
or
or
and
in
lcall
daa
fsts
stc
addr16
mov
add
ja
rorl
mov
rcrb
xor
xor
adcl
pop
jge
jns
mov
imul
sbb
add
or
push
mov
imul
jecxz
and
lret
jecxz
stc
pop
mov
rcrl
ret
mov
jne
lcall
jecxz
mov
mov
jne
rdtsc
sbb
mov
cmp
das
in
sub
lret
mov
pop
enter
ljmp
lcall
ds
push
mov
xor
push
jp
mov
adc
ljmp
cmpl
mov
scas
pop
xchg
cmc
cmpsb
sti
repnz
push
or
int3
enter
xor
dec
and
cmp
test
cmpsb
fistpl
insb
js
cmpsb
clc
and
push
repz
jl
test
outsl
sub
push
out
xor
test
sub
addr16
pop
dec
push
mov
mov
insb
and
inc
into
push
xchg
rcrl
jns
add
js
and
xchg
addr16
adcl
loope
and
sbb
dec
sahf
dec
pop
sahf
pop
pop
out
repnz
movsl
sbb
mov
jl
pmulhw
test
add
lods
aas
inc
cld
mov
popa
int3
pop
mov
push
int3
arpl
push
jmp
cld
sbb
inc
sub
ret
sbb
sub
mov
sub
insb
lds
jb
mov
bound
adc
lret
lret
mov
adc
xchg
sti
xor
mov
cmp
outsl
insb
ja
adc
and
ljmp
xchg
push
xor
ja
repz
pop
push
jl
dec
cmp
das
daa
inc
push
adc
or
add
jg
adc
xchg
xchg
xchg
out
cmp
adc
mov
repnz
or
cmp
inc
adc
daa
lds
in
sub
outsl
iret
ja
fldl
inc
xchg
insl
outsl
xor
out
mov
xchg
imul
xorb
jae
pushf
add
push
inc
fcoms
mov
jle
popa
adc
mov
aas
cmp
xchg
or
repz
and
arpl
mov
xor
jne
ret
mov
xchg
lret
inc
jp
jno
pop
jnp
ja
es
je
test
lea
enter
inc
push
hlt
mov
jle
ja
decl
inc
frstor
scas
je
push
jne
fs
loop
xchg
ret
xchg
cmpsb
shll
pop
mov
xor
ret
add
cwtl
out
arpl
pusha
adc
dec
sarl
leave
stos
dec
or
imul
sub
push
dec
rcrl
pop
sub
testb
jnp
movb
cs
pop
add
and
push
jnp
sub
mov
call
xchg
stos
jmp
pop
xor
sub
mov
testb
jo
push
mov
jnp
xchg
jno
les
push
xchg
xchg
push
in
mov
push
inc
or
dec
mov
int
dec
mov
mov
inc
dec
jl
push
push
cmp
jbe
mov
dec
cs
icebp
mov
xchg
xchg
loopne
in
xor
cmp
ds
push
dec
cmp
xchg
pop
xchg
daa
jecxz
add
out
sti
imul
inc
xchg
xchg
push
add
clc
push
out
or
ljmp
mov
mov
sbb
sbb
arpl
dec
mov
pop
addl
mov
pop
inc
push
mov
push
jg
dec
jb
pop
das
lods
ja
test
call
cmc
pop
lock
roll
sub
xchg
rorb
mov
jns
cwtl
mov
push
pop
mov
adc
scas
cmpsl
sub
cmp
inc
add
sbb
sub
pop
sbb
xchg
es
mov
sti
mov
icebp
aaa
dec
pop
and
pushf
cmpsl
add
pop
fs
vmovhps
or
jge
outsb
shll
xchg
mov
mov
sub
stc
and
mov
popa
lock
dec
out
jo
pop
fistl
fwait
shl
xchg
fsubrl
add
mov
push
xchg
pop
or
add
cmp
nop
loope
push
jo
dec
mov
repz
push
or
mov
dec
and
loopne
inc
gs
js
cmp
dec
sub
mov
mov
cmp
pop
das
loope
push
xchg
mov
rorl
add
out
dec
jmp
adcl
das
ds
push
nopl
sbbb
dec
imul
outsb
lods
and
mov
push
fsubrs
imul
pop
dec
adc
push
inc
stc
sbb
jae
xchg
popf
cmpsl
adc
lcall
lret
pop
push
ljmp
adc
mov
pop
dec
out
xlat
repnz
adc
movb
mov
push
sahf
sbb
fsub
cmp
mov
adc
into
pop
cmp
fsubl
out
jle
sub
xchg
jo
je
loop
das
inc
sar
stos
pop
stos
idivb
int3
pcmpgtw
mov
xor
cmp
leave
jecxz
push
rcl
movsl
cli
loope
push
inc
rclb
fdivrs
jae
xor
lock
test
inc
or
push
jo
add
int
lods
sub
pop
pushf
fwait
ljmp
cmpsb
xchg
pop
and
push
push
int
jne
and
pop
hlt
call
mov
xchg
pop
lcall
pop
push
movl
fwait
movsb
cmp
xchg
or
fildll
mov
push
lea
xor
subb
das
add
sbbb
push
sbb
sub
jecxz
push
pop
cmpsl
lcall
sub
inc
push
xchg
and
jl
cmp
or
cld
outsl
rolb
mov
cmove
std
jg
mov
mov
pop
mov
jg
stos
sbb
mov
xchg
xor
sbb
push
push
jecxz
bndldx
test
inc
push
outsb
lahf
outsl
mov
inc
pusha
dec
cltd
adc
sub
push
aad
mov
xor
or
adc
shl
mov
mov
stc
xor
imul
mov
xor
sbb
scas
int3
xor
dec
fbstp
lods
sbb
das
push
outsl
ret
mov
sub
adc
into
mov
lret
sbb
add
adc
xchg
int
or
cmc
out
imul
jmp
insb
lods
adc
loop
daa
stos
notb
push
adc
bnd
xor
out
lock
jle
int3
and
cmp
inc
test
pop
or
push
imul
divb
adc
fisttpll
xchg
pop
nop
fwait
ljmp
ja,pn
loopne
out
jo
and
sub
daa
mov
and
fstp
push
push
push
ljmp
decb
pop
push
cs
add
insl
adc
pop
movb
mov
mov
out
loope
iret
mov
push
movsl
add
imul
push
sbb
xlat
sub
mov
clc
inc
outsl
mov
cmp
rcrl
mov
push
test
push
sub
mov
test
in
in
aam
adcb
sar
sbb
xor
cltd
out
jae
pop
cmpsl
fcmovb
jge
repz
outsl
xchg
pop
fbstp
stos
cmc
movsl
push
mov
xor
imul
and
mov
iret
mov
xor
pop
adc
jle
and
sub
ljmp
jle
les
mov
mov
fst
xchg
adc
aam
sub
jmp
aam
inc
sub
pop
mov
adc
jnp
lods
mov
outsb
sub
xor
mov
sub
fyl2x
and
cmc
xor
ficomps
dec
loopne
jnp
inc
sub
iret
sahf
jb
and
pop
cltd
fnstenv
mov
shl
or
fcmove
inc
mov
outsl
shrl
outsb
outsl
and
mov
mov
fsubs
das
mov
inc
or
pushf
dec
out
jg
je
jbe
lods
sti
pop
or
cwtl
shll
test
cltd
sar
pop
inc
xor
bound
dec
jge
sar
fs
fisubrs
jg
stos
inc
xchg
jo
cmp
mov
inc
jne
xchg
ljmp
jnp
mov
xchg
call
xchg
call
inc
jge
jbe
loope
and
cs
in
pusha
lret
mov
cmpb
repz
xchg
shlb
add
sbb
es
ss
ficoml
sbb
js
dec
clc
cwtl
sysexit
xor
pop
divl
push
or
outsl
dec
and
pop
jae
mov
ljmp
jne
int
adc
mov
inc
mov
jl
xor
sub
adc
mov
push
and
pop
outsl
dec
stos
clc
test
xchg
cmp
lahf
inc
sahf
stos
mov
in
mov
fs
stos
rep
lret
push
rcr
icebp
aad
fstpl
mov
pushf
or
push
cmp
push
xchg
mov
jecxz
aam
cmp
xchg
js
add
stos
pop
fstpl
pop
in
mov
pop
push
mov
or
mov
es
cmpsl
push
mov
repnz
push
mov
xor
jmp
stos
xchg
aad
std
push
das
xor
pop
mov
in
adc
out
inc
addr16
cli
mov
shrl
mov
cltd
mov
mov
mov
xchg
dec
and
xor
mov
fstpl
xchg
mov
movsb
int3
insb
mov
mov
jo
arpl
jg
leave
jle
aad
sbb
xchg
nop
mov
inc
arpl
scas
and
xchg
and
cmpsl
rol
cmpl
out
lahf
in
xor
xchg
or
ss
lea
or
cmpsb
mov
in
add
xlat
push
pop
les
je
insb
popf
out
pop
lods
jmp
cmp
dec
mov
enter
arpl
sahf
add
in
inc
or
jmp
mov
es
xchg
cltd
mov
lret
aaa
mov
mov
xchg
inc
xor
shlb
jl
adc
test
movsl
out
cmp
push
mov
sub
or
xchg
fidivrs
mov
xor
out
out
ret
lret
push
daa
cmovne
jecxz
sbb
cwtl
adc
sub
pop
add
in
mov
lcall
adc
inc
or
mov
insb
add
lahf
sub
notl
shl
aad
jbe
xchg
out
add
fldt
daa
hlt
pushw
inc
sub
xchg
stos
popa
or
sti
mov
dec
stos
mov
out
mov
aam
data16
xchg
mov
imul
push
or
out
jae
fcomps
push
dec
out
lret
and
adc
ljmp
pop
push
enter
jb
ljmp
adc
lahf
push
sti
daa
es
out
push
rcl
cmp
in
cmp
mov
out
imul
cli
and
scas
int3
sub
stos
call
sbb
sub
lds
push
scas
and
ja
jno
or
ficoms
scas
xchg
clc
stc
cltd
cs
outsl
mov
dec
and
loope
mov
insl
sub
xor
fwait
loopne
cltd
push
inc
push
in
inc
sbb
xchg
xchg
inc
mov
call
movsb
int
shl
cmpsb
pop
jmp
mov
aaa
mov
movsb
jno
lea
movsb
stos
adc
push
ss
push
jno
rcrb
cmpsb
and
add
pop
pop
pop
cmpsb
and
mov
push
imul
and
ja
dec
xor
movsb
scas
add
rclb
arpl
leave
sbb
div
inc
xchg
stos
xor
push
add
iret
push
enter
int
fnsave
das
or
std
rorl
sarl
and
rep
pusha
sub
shlb
xchg
out
stos
cmp
cli
and
sub
jo
push
push
add
ss
adc
lds
mov
lea
adc
imul
mov
xchg
push
mov
pop
push
sbb
ja
ja
sub
mov
and
imul
das
add
out
cmp
ljmp
mov
jne
mov
ret
loopne
mov
xor
lret
pop
mov
add
mov
xchg
subl
inc
cmp
nop
test
roll
fmuls
jne
aam
gs
lret
movsl
push
and
push
mov
mov
jecxz
ret
std
insl
jo
out
mov
xchg
jo
dec
faddl
push
fisttpll
pop
sbbl
cltd
xchg
in
aaa
mov
fistl
test
sbb
mov
cmp
aam
jo
fstpl
dec
pop
in
jmp
and
jecxz
stos
pop
inc
ret
pop
xchg
inc
push
jae
jmp
jns
jb
xlat
cmp
in
push
pop
test
lcall
imul
cmp
in
dec
mov
cmpsb
pushf
and
pop
fs
cmp
push
fs
xchg
sub
js
fcompp
sub
mov
sub
fcoml
test
pusha
shlb
xor
in
lcall
add
mov
mov
ljmp
push
mov
cmpsl
aam
scas
and
inc
imul
inc
mov
popa
dec
enter
push
ds
in
bound
add
push
pop
mov
cmc
movsl
mov
cmp
lds
in
leave
add
arpl
mov
sub
loope
push
xor
jno
ljmp
rolb
jmp
inc
add
filds
push
lea
push
or
or
cmc
mov
outsl
dec
aas
shll
lds
loope
push
dec
mov
lea
push
adc
and
sbb
clc
cmp
jno
pop
push
jl
fwait
mov
cltd
sbb
in
call
push
lret
add
jo,pt
mov
lahf
leave
fistpl
in
xor
xchg
dec
mov
sti
stos
int3
inc
inc
dec
sub
xor
cmpsb
xchg
iret
daa
cwtl
aam
test
jbe
mov
mov
adc
iret
cs
cmp
int3
in
xchg
or
add
fwait
enter
jb
call
sti
inc
push
or
ds
mov
xchg
and
jle
jae
mov
repz
sarb
fdivl
push
mov
fsts
xor
jmp
stos
mov
scas
addr16
jp
hlt
jg
mov
mov
nop
mov
xchg
ljmp
xor
out
and
icebp
dec
es
loop
lret
test
mov
iret
sbb
adc
xchg
mov
rcll
insb
jne
aaa
xor
jae
mov
aam
jae
pop
sbb
mov
add
lods
dec
cmp
adc
mov
add
xchg
mov
movsb
les
repz
loop
adc
sbb
inc
jecxz
pushf
mov
jbe
cltd
aam
movsl
repnz
mov
js
mov
jno
cmp
or
loopne
insb
out
insl
or
lahf
sarl
dec
roll
jo
push
lret
adc
aad
ljmp
ffreep
cmp
ficoms
in
test
pop
les
scas
adc
repz
xor
int3
pop
or
pop
sahf
or
sub
cmp
test
movq
cmpsl
inc
aad
test
mov
mov
mov
test
movsb
imull
push
lahf
mov
mov
mov
add
cmpsl
dec
ror
rcr
sbb
cmp
jge
bound
lahf
pop
shll
push
cmpsb
mov
rcrl
or
popl
sub
mov
pop
in
cmc
pop
sub
sbb
stos
test
mov
fs
push
mov
arpl
pop
cmp
outsl
iret
pop
push
sub
imul
cmp
enter
stos
cltd
testb
dec
mov
loop
lock
aam
push
lret
jae
and
sti
movl
jo
jb
add
inc
arpl
sbb
mov
jp
cmp
inc
mov
add
push
mov
mov
data16
in
mul
mov
insl
mov
test
mov
xor
adc
int
jb
lret
jne
push
push
not
mov
in
repz
rorb
inc
jae
pause
lret
loope
sbb
adc
jae
xor
movsb
outsl
test
test
sbb
push
xlat
xor
shlb
mov
fisttpll
test
push
push
sbb
mov
pushf
pushf
stos
jge
add
inc
stc
mov
cmp
aas
jle
pop
loopne
push
jne
adc
ja
int
add
ret
push
xchg
pop
inc
hlt
mov
sahf
addl
pop
cmovp
cli
sbbl
aaa
inc
cld
js
sub
dec
fs
mov
mov
sti
mov
pop
mov
movsb
pusha
out
push
call
xchg
lds
or
inc
icebp
sub
cs
jecxz
xlat
flds
dec
inc
xor
cli
mov
or
mov
adc
mov
cmp
imul
outsb
cmp
and
mov
incb
and
push
jp
outsl
xor
push
add
xchg
jge
jne
jp
out
xchg
fwait
sub
dec
xor
and
sbb
fdivs
sub
or
push
cmp
push
adc
sbb
inc
jp
inc
xor
cmp
mov
fcmovnb
popf
jge
jmp
xchg
inc
mov
insb
fs
rolb
mov
ret
in
je
pop
gs
adc
mov
stos
add
test
popf
xchg
shll
daa
roll
xchg
js
adc
shlb
sub
out
bound
mov
popf
mov
lock
fisubrl
iret
lret
lods
aas
adc
fnstenv
add
sahf
lock
rorl
or
cmp
mov
outsb
out
stos
repz
mov
add
and
xor
sub
out
sbb
jae
jecxz
movsb
popf
inc
or
sahf
jae
pop
push
cmp
mov
pushf
sub
insb
sub
addr16
inc
push
test
push
or
fbld
ds
ljmp
cwtl
loopne
cli
inc
rol
add
dec
lret
and
in
xor
mov
or
insb
nop
or
out
xor
fdivs
and
jae
movsb
mov
push
roll
fistpl
in
pop
xlat
mov
iret
fnsave
sub
sti
jae
ss
cld
movsb
sbb
std
fimuls
sub
inc
negb
mov
mov
cs
add
pop
mov
fsubp
jae
sub
cli
pop
dec
or
mov
or
call
pop
cmpsl
push
mov
dec
fs
bound
add
push
jbe
sub
mov
push
jp
andb
pushl
rolb
std
lea
cli
nop
scas
cmp
push
add
mov
in
add
mov
orl
sbb
lcall
push
or
or
jmp
rcrb
outsb
jp
sbb
sbb
jno
imul
xchg
xchg
in
mov
loope
cmp
cmp
movsb
repnz
pop
and
imul
inc
xor
ljmp
mov
dec
push
aad
xor
scas
sub
sti
pop
mov
test
popa
loope
push
lahf
cmpsl
mov
add
outsl
shll
imul
xchg
test
out
push
stos
outsb
clc
xor
adc
aam
sub
rolb
lods
sbb
sub
sub
out
push
mov
fsubrs
push
nop
in
xor
gs
dec
ja
xor
aaa
mov
add
push
out
push
inc
cmp
cmp
outsl
stos
fdivrs
and
inc
mov
mov
xchg
bound
inc
fs
dec
mov
cltd
inc
adc
ret
sarb
imul
mov
mov
jne
out
jmp
int3
jnp
fwait
in
mov
lea
or
movsb
imul
sbb
or
jns
lods
data16
aaa
xorl
lock
ja
jp
xchg
xor
mov
clc
pusha
jb
sbb
imul
les
mov
inc
adc
dec
cltd
outsl
mov
roll
popa
out
xorb
pop
out
cmpsb
mov
mov
xchg
aad
and
fwait
sbb
mov
shll
fs
push
lods
xor
adc
out
or
push
fiadds
popa
jae
xor
in
movsl
mov
cmp
and
jbe
mov
std
add
add
mov
jae
stc
dec
shlb
clc
cwtl
aaa
dec
jle
or
fdivrl
aad
xor
dec
add
fisubrs
in
xor
scas
adc
dec
pop
sbb
gs
pop
leave
sbbb
jno
mov
and
mov
xchg
xchg
fidivl
outsl
addr16
jo
add
stos
sub
lahf
hlt
sbb
gs
sti
cmc
daa
cmp
sar
dec
movsb
sbb
mov
and
cmp
shlb
cmpl
jmp
stc
mov
jg
fdivr
ss
push
adc
mov
pop
inc
sbb
jmp
cmpsb
rclb
inc
lret
pop
fldenv
fdiv
add
dec
xor
pop
add
div
movsl
cmpsl
popa
repnz
xchg
pop
and
fldcw
or
fwait
add
sbb
fistps
rorl
xchg
movsb
lds
fcmovu
es
and
fwait
cmp
push
mov
sub
xchg
push
mov
and
push
lcall
inc
inc
mov
in
adc
fs
shll
dec
xchg
mov
cltd
xchg
dec
loope
push
out
in
cmc
lea
pushf
loop
int
aam
enter
lods
push
mov
repz
stc
and
sbb
ret
pop
call
les
add
pop
scas
mov
insl
pop
je
lods
jmp
andb
mov
enter
push
mov
outsl
int3
outsb
leave
cs
adc
mov
mov
mov
lods
adc
push
pop
pop
sub
sti
bswap
or
mov
ds
inc
loop
mov
outsl
sub
lods
stc
sub
ljmp
clc
rcr
push
mov
mov
dec
jge
lock
out
stos
iret
jl
dec
cltd
cmp
imul
inc
xchg
test
enter
add
sub
mov
das
inc
test
add
jnp
mov
lea
jecxz
int3
push
scas
jecxz
jecxz
cmp
jle
stos
mov
add
adc
imul
push
xor
cmc
jo
dec
pop
cmp
popf
jmp
inc
sti
in
pop
jae
cltd
sbb
stos
cmp
and
adc
add
sub
sbb
add
popa
push
xor
jno
mov
insl
sub
xchg
in
jne
test
movsl
jbe
repz
negl
cmp
sub
jg
mov
iret
xor
or
insl
dec
inc
mov
scas
and
or
ljmp
out
mov
jo
jo
add
outsb
xchg
inc
xchg
pop
bound
xchg
dec
sbb
push
test
jge
add
jl
xchg
fwait
call
sub
push
int3
jecxz
sbb
rcl
xchg
add
push
in
push
lret
mov
push
mov
inc
jnp
jecxz
cmp
mov
pop
aas
cmpsb
pushf
out
push
push
cli
pop
incl
lcall
lea
mov
std
sub
rcrl
movsb
xor
fwait
jno
push
hlt
sub
lret
mov
and
mov
mov
fdivrs
out
cmp
pop
adc
cmp
cmp
dec
push
inc
sarl
aaa
mov
arpl
iret
fimull
divb
out
sti
outsb
mov
pop
cltd
fwait
stc
popl
bound
in
cmpb
imull
andl
nop
pop
dec
inc
adcl
adc
add
xchg
jl
insl
pop
xchg
fsts
cmp
inc
cltd
sahf
xchg
out
stos
shll
jno
mov
mov
in
in
dec
jne
push
fcomps
fstpl
cmc
or
ljmp
xchg
or
stos
xchg
mull
jne
xor
shll
rclb
or
cld
mov
inc
adc
add
addr16
push
pusha
cmp
pop
xlat
fists
xchg
negb
popl
inc
dec
std
cmp
push
dec
cmp
out
push
popl
pop
fcompp
test
push
test
cmp
out
push
push
add
int
daa
cmp
movsl
jb
or
sbb
or
push
or
push
aaa
lret
imull
pushf
das
xor
inc
cmp
fcoms
fdivr
jb
lock
inc
jle
movsb
push
ret
dec
pusha
lret
cmp
outsb
aam
xchg
les
push
ret
inc
andb
out
or
xor
ljmp
cmp
adc
xchg
add
das
repz
out
pop
lods
neg
mov
lcall
lds
sahf
sub
dec
ret
dec
xchg
jo
loopne
ffreep
mov
pop
popa
test
pop
cltd
test
test
xchg
hlt
aam
inc
and
repz
mov
mov
rcll
pop
loope
nop
push
dec
adc
sbbl
adc
pop
lock
push
adc
cmpb
popl
ret
cmpsb
mov
inc
pop
mov
sbb
imul
sahf
mov
testl
mov
jns
test
lcall
insb
push
and
ret
add
in
iret
icebp
cmp
push
xor
sar
pause
int
push
add
sub
and
cmp
dec
lret
stos
xor
add
sub
in
jg
pop
mov
sub
push
je
or
push
and
pop
jp
ror
mov
mov
fcmovu
popl
cli
adc
cmpsb
in
sbb
ds
movsl
mov
inc
imulb
pop
in
lahf
scas
lea
hlt
cwtl
insl
mov
mov
fcoml
fidivrs
jae
fsubl
mov
loope
dec
test
dec
test
dec
lods
add
add
jle
test
subl
cmp
test
in
in
xor
imul
fs
movsl
and
adc
cwtl
rol
or
test
ret
push
les
mov
dec
daa
mov
sbb
sub
sahf
pop
lods
push
sub
add
push
lcall
iret
js
rcrl
cmp
mov
dec
adc
ficoms
jb
push
sbb
jmp
and
add
aas
jnp
ja
lret
add
ja
addl
cmp
pop
mov
push
and
push
rcrl
mov
stos
mov
xchg
xchg
jns
int3
lds
adc
cmp
loopne
imul
ds
lds
jne
add
mov
push
sahf
popf
shlb
push
outsl
lods
int
leave
dec
inc
popa
jl
xor
or
cltd
mov
inc
das
push
dec
fdivrp
xchg
jge
jo
lea
dec
jne
push
xchg
aam
add
pusha
test
addr16
mov
insb
pop
mov
or
out
xor
jns
fnstcw
mov
adc
fidivrl
data16
jne
popf
fwait
addr16
sbb
and
out
ss
add
sbb
shrb
notb
adc
scas
pop
dec
push
js
testl
lock
or
lret
dec
sbb
sarb
cmc
pop
roll
test
nop
fiaddl
push
and
mov
xchg
fs
imul
stos
cmp
push
stos
xor
int
sub
cwtl
loopne
sahf
sub
pop
test
dec
jnp
gs
es
stc
lock
or
mov
dec
lahf
sbb
mov
enter
adc
lcall
in
or
test
shll
jmp
loop
pusha
lock
sbb
ljmp
dec
or
loopne
mov
adc
adc
idivb
or
lret
aad
loope
mov
test
xchg
cmpb
dec
les
iret
fwait
pop
and
add
mov
push
ljmp
pop
lea
dec
je
imul
fistpll
insl
jecxz
popf
test
enter
std
movsl
pusha
ret
pcmpeqb
cmc
push
pop
loopne
insb
inc
or
test
testl
out
out
cmpb
mov
jmp
and
dec
cli
test
insb
mov
ret
stos
outsl
xchg
pop
or
dec
mov
xchg
sbb
scas
enter
mov
cmpsl
gs
idiv
jge
fdiv
nop
cmp
mov
and
mov
test
adc
ljmp
cmp
add
cld
in
add
mov
call
sub
mov
mov
pop
push
cmp
repnz
in
or
lds
or
ficompl
push
das
fdivrs
jl
cmp
daa
imul
inc
or
fxch
push
repnz
jns
fs
arpl
pop
test
and
mov
dec
mov
das
repz
jecxz
stos
sbb
xchg
push
in
sahf
jns
dec
ret
lea
ds
push
aam
or
cmp
lock
cld
cmp
arpl
es
insl
lods
das
jmp
and
dec
bound
inc
mov
dec
adc
data16
stos
add
in
fsubl
mov
das
xchg
and
cld
sbb
test
addr16
sahf
add
add
xor
mull
jo
sahf
in
or
jg
test
out
testl
pushf
sub
cld
jmp
sub
cmp
arpl
and
jbe
mov
mov
push
dec
or
gs
jbe
jb
jo
rcr
cmp
pushf
fcmovbe
xchg
ret
xor
pop
nop
push
aas
imul
and
loopne
adc
fnsave
stc
test
sahf
daa
sarb
decb
orl
das
xor
fs
xlat
stos
iret
mov
cmpsb
cli
mov
inc
lods
inc
add
pop
pop
ljmp
enter
mov
pop
out
cwtl
je
aad
test
jo
fildl
jbe,pt
jnp
cmp
fcomi
add
and
jno,pn
mov
test
dec
out
scas
insl
or
pop
push
add
sahf
fisubs
sub
in
in
imul
in
shrl
pop
cwtl
mov
pusha
push
jne
shl
sbb
pop
xor
bnd
aad
adc
push
insb
cmp
or
xchg
jecxz
pop
pop
in
push
add
inc
lret
leave
xchg
lock
sbb
and
mov
pop
mov
xor
jp
dec
fisubs
and
and
dec
xchg
mov
jle
and
fwait
xlat
popa
sub
scas
int
or
cmpsl
fs
mov
das
lret
jns
cmp
cltd
inc
xchg
icebp
push
andl
sub
push
insl
fidivrs
jge
lea
fwait
and
lock
mov
repz
insl
ds
and
mov
insb
jne
or
xchg
inc
lcall
jo
lahf
or
cmp
inc
shrb
in
jae
add
cmp
jno
mul
jne
test
sarb
int
leave
je
into
add
ss
xor
stos
add
inc
lods
cmc
icebp
mov
cs
int3
subl
mov
jbe
sub
pop
loop
cmp
lcall
addb
jbe
mov
jno
call
movsb
fldt
mov
out
jmp
mov
out
imul
es
inc
push
add
movsl
sahf
out
pop
fisubs
ret
xor
pop
xor
out
shrb
ljmp
or
les
aam
pushl
shlb
sbb
jmp
jne
mov
sti
mov
mov
pop
test
imul
insl
mov
sub
fists
lret
push
jle
sub
cmc
cmpsl
or
add
mov
xchg
xor
fldt
push
mov
jo
ljmp
adcb
sahf
sub
jmp
add
cli
push
jae
hlt
pop
mov
or
push
imul
jle
aam
mov
mov
jne
ret
mov
pusha
mov
mov
xor
in
push
movsb
and
cmpb
mov
andb
fiadds
jb
sahf
lret
jb
movsl
jns
pushl
adc
lods
inc
ret
in
in
sarl
inc
gs
nop
dec
cmc
ss
imul
addr16
outsb
mov
sub
cmp
cli
jo
jge
aam
mov
sbb
mov
lds
mov
jmp
pop
push
sbb
add
cmp
dec
shrl
mov
or
add
outsl
sbb
les
sub
and
push
lods
xchg
add
cmp
mov
iret
jle
dec
bound
sub
shl
fbld
mov
aam
dec
and
into
les
sbb
popa
mov
inc
cmp
rcrl
inc
mov
fsubl
pop
mov
bound
mov
cmp
insl
jb
mov
push
pop
push
jb
or
add
pusha
in
sti
in
pop
fsub
sbb
sbb
jl
mov
js
lahf
adc
mov
xchg
sarb
fs
xchg
mov
xchg
adc
jge
xchg
cmpb
dec
stc
sbb
repnz
sbb
dec
nop
mov
and
insl
push
cmc
nop
adc
movsl
fistps
scas
or
mov
dec
mov
xor
xchg
aad
jp
xor
ss
xor
pusha
mov
mov
adc
fsub
arpl
fildll
cltd
add
add
lods
jnp
fwait
push
lret
jge
mov
fsubs
mov
mov
test
and
enter
ljmp
ds
xor
fcmovnb
stos
xchg
adc
les
xor
ds
mov
int
mov
push
lret
fsubl
in
xor
mov
and
pop
push
pushf
xor
lea
aam
cwtl
jge
add
hlt
fldt
jnp
sahf
push
lods
push
adc
stos
mov
mov
in
xor
xchg
movsb
and
test
in
fwait
mov
push
and
and
pusha
popf
test
lret
mov
orb
cmp
sbb
and
stc
pop
loope
fwait
sub
pop
sahf
shlb
dec
jle
inc
ret
cmp
pop
roll
and
out
loop
rcrl
sbb
popf
leave
aad
and
jo
fwait
or
loop
aas
mov
sub
or
mov
xorb
pop
sarl
loope
ret
clc
jmp
mov
pusha
dec
adc
mov
stos
inc
fucom
pop
xchg
mov
pop
mov
push
lret
adc
mov
mov
jg
aas
cmpsb
push
pop
loop
xlat
call
mov
fsubrs
pop
and
cli
fnstsw
scas
pop
mov
inc
insb
shrl
xor
loope
movsb
fdivrs
jg
scas
into
pop
sub
xchg
sbb
and
mov
loop
sub
sub
decl
jns
in
xor
ds
lcall
sbb
jp
mov
xchg
jl
loopne
fstpt
mov
aas
add
repnz
orb
jecxz
in
addr16
jne
or
xor
xchg
mull
icebp
bound
jmp
add
icebp
pop
cmp
ret
in
mov
mov
dec
loop
push
pop
or
gs
xor
push
into
push
cltd
cs
mov
mov
lahf
pop
sub
mov
or
pop
pop
cmc
stos
xlat
lods
lahf
mov
insl
jne
sub
push
ret
jecxz
int
or
sub
repz
sub
jae
xchg
sbb
jo
test
in
fistpl
inc
adc
jae
push
xor
lods
inc
fisttpll
icebp
data16
xor
rclb
movsb
sub
xchg
aaa
mulb
hlt
inc
jecxz
xchg
cmp
push
aaa
add
ret
mov
push
jecxz
ds
and
test
cmp
das
lds
mov
push
test
call
sbb
or
repnz
sar
jmp
icebp
push
mov
pmaddwd
sbb
or
pop
out
in
pop
jae
outsb
fadd
in
scas
jbe
or
mov
mov
test
push
inc
jp
lret
jo
icebp
aam
and
mov
jo
jns
cmp
mov
pop
push
add
in
arpl
add
and
fwait
inc
sbb
jbe
divb
test
fsub
ret
fdivrs
fsubl
jns
sub
negb
add
and
ds
add
or
addr16
mov
pop
hlt
jmp
dec
cld
fdivrs
neg
out
push
shrb
sbb
pop
xchg
fs
cmp
sbb
ljmp
adc
lods
pop
sti
fistps
cltd
mov
stos
xchg
mov
test
mov
das
lock
sbb
jbe
scas
inc
xor
insl
notl
andb
mov
bound
ss
pop
inc
xchg
pop
sti
mov
leave
jecxz
jno
out
add
dec
jbe
mov
xor
scas
enter
push
sahf
pop
into
cmp
lret
mov
ds
xor
js
lods
popf
add
je
inc
addl
repnz
cmpsb
jge
sarb
shrb
lock
xchg
or
cli
je
ds
fmull
mov
mov
call
inc
enter
insl
mov
jnp
mov
sub
shll
mov
mov
push
pop
jmp
fsub
test
hlt
sbb
cmp
inc
mov
aam
imull
or
dec
push
shl
inc
rorl
or
call
jno
inc
in
sbb
call
mov
jae
and
jno
leave
sbb
les
dec
outsl
xchg
jnp
mov
and
xor
mov
adc
cmc
mov
stc
fdivs
ss
out
jmp
jo
cmpsb
pop
arpl
mov
inc
mov
sub
sahf
mov
imul
jbe
decb
int
loop
cwtl
cmp
push
cs
push
cmpsb
or
loop
aam
in
mov
jge
pop
add
aaa
adc
in
fwait
dec
and
jno
hlt
loopne
sub
into
test
inc
popa
test
push
lea
bound
fdivs
or
push
divb
xchg
ds
mov
es
cwtl
xchg
std
push
adc
ds
mov
xchg
mov
loop
loop
lea
bound
repz
leave
push
dec
push
and
mov
jge,pn
mov
into
mov
scas
ds
imul
adc
ficoml
test
or
push
into
outsb
fcomip
aam
jg
jb
mov
adc
inc
push
daa
and
cmp
xchg
imul
or
fistl
into
lods
out
faddl
mov
in
pop
sbb
inc
js
pop
adc
jb
enter
cmp
sub
xchg
or
mov
jnp
fdivr
cs
sbb
sbb
ljmp
jg
stos
xor
fwait
mov
or
popf
inc
cmpsb
jp
nop
mov
insl
sub
pusha
inc
arpl
inc
js
inc
xchg
pusha
loop
jnp
out
mov
add
pop
mov
out
ret
dec
nop
shrl
xchg
ljmp
lds
cmp
movsb
dec
mov
jno
into
adc
cmp
test
in
fwait
and
loope
jno
mov
inc
out
push
xor
cmp
mov
movsb
cwtl
lods
stos
xchg
jl
sbb
sbb
adc
lret
movsb
sub
inc
popa
mov
stc
arpl
std
and
movsb
sti
rorl
xchg
sbb
mov
xor
xchg
ja
xchg
push
dec
add
repz
fists
pop
ret
inc
push
push
xorl
loop
lea
cmc
pop
cmc
jecxz
push
dec
mov
adc
imul
add
jbe
mov
mov
dec
enter
stc
mov
ja
inc
xlat
inc
dec
and
out
push
cmp
fsubrl
ret
xchg
jge
and
push
sub
stc
cli
into
in
fcomps
data16
jb
pop
jns
lret
push
or
std
fildl
aam
fsubr
jl
push
jmp
lds
xchg
xorb
lods
adc
rclb
xchg
xor
rcr
dec
iret
repnz
les
dec
out
lods
sub
adc
cltd
shl
push
aad
fdivrs
cltd
jb
push
jne
adc
data16
push
lcall
mov
notl
push
lock
pushf
outsb
xor
lds
adc
cmc
fwait
xchg
adc
mov
push
pop
cmp
dec
push
je
jg
sbb
mov
enter
dec
cmpsb
mov
adc
sub
arpl
adcl
pop
adc
jecxz
add
or
and
popf
loopne
xor
inc
mov
out
push
xchg
jge
aas
sbb
or
push
pop
mov
jecxz
ror
mov
stos
add
mov
add
mov
lods
in
inc
push
int
push
js
shrb
insl
dec
fdiv
cmc
push
or
sub
and
imul
sub
jne
xchg
mov
lret
cmpsl
cmc
pop
mov
mov
mov
dec
and
cmc
xchg
mov
dec
mov
push
mov
enter
les
aas
mov
insl
ds
repnz
xor
fadds
sub
dec
cmc
xor
xchg
in
aam
ss
xor
lcall
add
enter
arpl
es
pminub
fsts
imul
loopne
mov
nop
fildl
pop
jl
stc
aam
dec
mov
pushl
xorps
inc
push
push
shll
sub
dec
daa
sub
rorb
fsubl
mov
in
adc
aas
mov
sub
outsl
fldt
nop
cld
cmp
cli
icebp
loop
pop
std
xor
pop
inc
or
out
xchg
jb
repz
lcall
cltd
sub
pop
pusha
jg
cmp
pop
test
lods
xchg
loope
mov
adc
int
push
or
icebp
dec
adcl
aas
sub
lahf
leave
push
in
cli
pop
in
arpl
push
fidivl
inc
call
andl
and
xchg
xchg
insb
movsb
inc
out
ljmp
mov
mov
cmp
sub
lea
movsl
push
xor
mov
jle
in
sti
dec
sub
mov
pushf
pop
bound
adc
xchg
test
mov
adc
mov
sub
rclb
out
sti
inc
das
std
lds
fstp
call
imul
sbbl
adc
ss
lds
mov
add
add
sarb
lds
clc
call
stos
xor
fiaddl
push
and
fists
outsl
jns
sub
cmp
push
lret
mov
sbb
clc
pop
stos
femms
jmp
test
push
cmp
xor
clc
xchg
in
leave
xchg
test
add
popa
mov
push
ret
mov
das
xor
mov
inc
xchg
stc
mov
dec
xor
xchg
ror
adc
jae
sub
xchg
xchg
or
lcall
adc
addl
aas
fisttpll
mov
das
mov
xchg
or
mov
cmp
sub
and
cmp
sub
and
dec
push
out
shrb
mov
cmp
pop
push
xor
fistpll
sub
xor
cmp
push
jg
ljmp
neg
inc
in
lahf
and
fcmovbe
adc
mov
mov
inc
xor
ret
add
xchg
jmp
mov
stos
addr16
and
mov
gs
cmovs
cmp
clc
push
daa
cli
inc
ret
lods
mov
inc
mov
in
xchg
jb
push
outsb
xor
andb
dec
pop
ljmp
xor
enter
mov
fsubp
inc
cwtl
fldl
mov
or
lret
cli
icebp
and
adc
imul
adc
cli
int3
mov
jno
or
lret
mov
push
xchg
mov
adc
cwtl
or
pop
mov
push
pop
jmp
cmc
cmc
mov
shr
push
std
sbb
cmpsl
push
stos
mov
xchg
outsb
cmp
lods
dec
xor
pushf
inc
or
loop
sbb
sbb
jecxz
pop
mov
into
addr16
xchg
push
lcall
or
mov
inc
int
pop
fucom
sub
mov
rolb
xchg
imul
jbe
cmpsb
jno
fxam
adc
popa
cmpsb
in
mov
jge
adc
mov
int3
pop
push
xorl
scas
rorl
xchg
pop
leave
scas
inc
cmc
divb
sub
xorb
inc
mov
push
call
dec
imul
vcvtsi2sdl
mov
pop
sub
jmp
or
imul
clc
jo
imul
aam
add
pop
clc
push
and
jae
cmp
sti
ss
push
sbb
jecxz
arpl
dec
xchg
inc
xor
jge
jg
mov
inc
cmc
out
ds
popa
addl
mov
outsb
jg
xchg
adc
lahf
ret
outsb
sub
lock
mov
or
inc
sbb
adcl
stos
bound
mov
adc
test
lea
das
push
pop
jg
and
pushf
or
int
stos
adc
pushf
mov
mov
mov
xchg
push
sub
outsl
or
or
and
dec
divb
aad
fcompl
in
and
mov
add
movsb
dec
jg
or
out
sbb
lret
lret
xchg
inc
push
inc
jae
lcall
add
aam
ljmp
iret
push
jo
iret
ficompl
sub
dec
pop
faddl
xchg
jle
or
addr16
movsbl
ret
sub
xor
sub
pusha
mov
jge
nop
shlb
xlat
movsb
sub
int
test
dec
pusha
and
lcall
fdivrs
and
stos
scas
lcall
jae
cld
xlat
cli
jbe
jnp
dec
pop
jg
adc
aaa
daa
inc
xor
fs
into
scas
daa
mov
idivl
mov
dec
cmc
or
lahf
ret
xchg
cld
mov
into
pop
int3
rol
negl
testl
mov
in
stos
nop
dec
fisubrl
and
leave
lods
pop
repz
pop
daa
lret
lock
or
jecxz
cmc
mov
jp
push
aam
mov
test
and
inc
pushl
rorl
sbb
clc
addr16
sti
sbb
push
adc
sbb
fistps
outsb
or
scas
cwtl
cmp
push
fyl2xp1
icebp
dec
pop
mov
loope
adc
lret
test
arpl
xor
xor
sub
jg
mov
inc
adc
repnz
adc
or
or
ja
push
cltd
andl
outsb
jecxz
jmp
mov
daa
pusha
lock
popf
cld
xor
sbb
sbb
add
sub
cmp
jbe
sub
popa
pop
push
out
rclb
je
mov
outsl
xchg
pop
sub
jae
test
js
notl
jge
inc
int
jb
mov
inc
scas
cli
xlat
mov
into
ret
and
inc
mov
or
xchg
fcomps
mov
fbld
iret
jg
ja
stos
repnz
jae
idivl
mov
push
dec
out
mov
xchg
dec
pop
cmpsl
iret
ret
sub
lds
cli
push
sar
movsl
sub
popf
cmc
dec
lcall
jnp
pop
xor
sti
cmpsb
sbb
pop
sub
sub
mov
jbe
pusha
lock
out
cmp
cmpsl
inc
add
and
jl
sbb
mov
fbld
adc
xlat
dec
pop
mov
sbb
xchg
jne
mov
repz
rcl
jl
scas
pop
mov
insl
sbb
fidivrs
dec
stc
cs
xlat
loop
and
jne
jmp
insl
push
inc
cmp
out
sub
out
ljmp
xlat
loopne
lcall
int
daa
lret
out
mov
sub
push
pop
out
mov
aaa
xor
int
hlt
test
mov
fistpl
outsb
pushf
in
inc
inc
mov
ja
inc
ja
sarb
fidivrl
sub
pop
mov
cmp
jnp
dec
pusha
aas
in
mov
jnp
mov
leave
stos
aad
push
xlat
sbb
mov
call
mov
subb
dec
mov
lret
mov
push
movsl
sub
js
pop
lcall
das
sub
loopne
lods
ss
dec
xchg
ffreep
arpl
lret
jb
out
scas
xor
xchg
aam
pop
ljmp
mov
testb
scas
out
adc
jo
and
push
mov
adc
lods
add
fstl
xor
jo
mov
inc
pop
and
adc
roll
add
call
test
push
mov
cmp
shlb
mov
pusha
cmpsb
push
xchg
xor
data16
xchg
mov
rorl
dec
dec
and
rclb
mov
mov
sbb
ret
imul
das
mov
out
insl
mov
popf
inc
leave
xchg
pop
fdivrs
cld
outsl
iret
push
xor
lret
mov
cmpsb
in
sbb
mov
inc
aam
jae
jge
ja
lods
addl
jbe
sahf
or
je
adc
jb
sbb
sbb
out
cmp
mov
pusha
push
inc
xlat
outsl
enter
popf
dec
adc
arpl
mov
mov
sbb
andb
push
pop
or
dec
push
dec
dec
cmp
cmp
sub
xchg
das
adc
inc
ss
das
xchg
or
pop
or
mov
aad
pop
sub
mov
jp
and
loop
in
jmp
lea
sbb
daa
mov
lods
and
push
shlb
mov
out
mov
sbb
pop
jo
js
test
pop
or
sbb
pop
into
and
daa
adc
pop
xchg
mov
mov
jbe
and
inc
or
jp
mov
in
jno
mov
push
je
or
outsb
aaa
insl
loop
test
inc
adc
mov
mov
out
stos
inc
loope
jecxz
cmpsl
in
fisttps
cmpsb
test
pop
loopne
push
and
add
lock
pop
or
std
cmp
fmull
push
mov
in
test
lds
decb
xor
or
lcall
cmp
mov
lret
sbb
adc
cmp
mov
adc
xor
sub
jp
sub
test
dec
adc
outsb
aaa
pop
add
aad
inc
test
pop
push
cmp
mov
push
add
mov
movsl
mov
mov
cwtl
push
cmp
shl
adc
gs
lods
lahf
icebp
fabs
ss
ret
das
dec
mulb
cli
mov
mov
mov
stos
sti
push
xchg
adc
cli
push
call
bound
into
fbld
jb
cmp
pop
add
mov
sahf
push
aaa
rcl
xchg
imul
mov
push
lock
mov
cs
inc
push
pop
lahf
sbb
pop
lods
adc
adc
stos
out
dec
pop
mov
test
outsl
cld
and
out
sbb
mov
out
push
les
xor
cmp
cli
repnz
xor
pop
add
fisubrs
pusha
xor
sub
xor
imul
gs
popa
pop
push
xchg
cltd
rclb
adc
mov
adc
and
and
dec
cmpb
cmp
iret
fisttpl
xor
cli
xchg
in
mov
fldenv
push
and
xor
jl
cmp
stc
cmp
inc
xor
nop
stc
add
scas
cli
das
dec
inc
loopne
adc
mov
in
mov
ljmp
cld
lods
mov
adc
mov
jae
mov
pop
or
xlat
packssdw
sti
dec
out
dec
lods
cld
pop
aaa
sub
mov
clc
and
fs
mul
imul
xchg
incb
jnp
incb
scas
sub
jbe
je
push
sub
aas
xchg
pop
add
lret
scas
sub
or
out
nop
mov
push
jecxz
inc
popf
push
sbb
repz
push
ss
rolb
in
fnsave
push
or
pop
scas
sbb
inc
mov
or
call
loop
adc
jae
ret
inc
test
adc
and
adc
mov
xchg
aad
and
scas
ljmp
aad
inc
popl
jp
shl
iret
jg
addr16
sub
add
scas
loopne
pusha
loop,pt
sbb
repnz
mov
rcrl
cmpsb
ja
mov
fwait
test
add
out
test
pop
mov
outsb
inc
dec
inc
outsb
push
and
cli
cmp
daa
adc
cmp
lret
fmuls
icebp
daa
test
pop
mov
cmp
add
pop
sbb
lods
sub
mov
sbb
int3
das
ds
je
aad
sahf
in
cmc
in
add
outsl
push
mov
sbb
cmc
loop
pop
or
aaa
or
dec
das
outsb
jecxz
xor
or
js
mov
imul
pusha
dec
or
and
bound
mov
mov
cmp
scas
jp
and
sub
pop
mov
test
lods
xchg
mov
mov
and
cmc
push
mov
sahf
mov
xor
lods
xchg
rcrl
ja
cmp
xor
stc
cld
call
or
xor
sub
mov
jg
clc
inc
cs
push
stc
pop
mov
aas
mov
test
add
cmp
and
mov
sbb
test
xorb
push
push
cs
ficompl
dec
movsl
push
lret
insb
js
mov
pop
call
sti
fs
and
scas
and
rcll
pusha
mov
cmc
inc
rorb
hlt
adc
outsb
add
dec
and
push
xor
arpl
std
sbb
push
push
test
and
pop
cwtl
ret
aas
pushf
ret
repnz
popa
sti
fs
mov
mov
sbbl
rol
jle
hlt
repz
insb
pop
mov
jmp
or
dec
cmp
sub
adc
dec
enter
loopne
fcompp
pop
js
es
mov
pusha
insb
add
and
add
out
outsl
jo
mov
mov
test
dec
test
enter
jbe
jmp
popa
outsl
push
sahf
push
mov
test
jo
mov
jne
cmp
pop
insl
pop
outsb
xor
loope
jp
inc
pushf
ljmp
je
cmp
sub
mov
test
prefetch
or
mov
adc
sub
lods
sti
xchg
imul
aad
bound
stos
mov
or
xor
pop
sti
cmp
dec
or
jg
outsl
xor
adc
add
sahf
mov
rol
pop
es
call
arpl
in
mov
scas
loope
fwait
xor
scas
loop
pop
cmp
orb
xchg
or
mov
cli
mov
shll
jae
cli
in
cmp
mov
mov
add
jbe
lock
mov
outsl
mov
shlb
xor
ljmp
loop
mov
daa
fnsave
lahf
xchg
pop
fidivrs
arpl
xor
mov
mov
cltd
mov
fstpl
insb
mov
push
push
or
dec
movsl
dec
mov
fsubrs
inc
adc
pop
ds
mov
adc
andl
incl
mov
lds
jecxz
adc
jns
insl
hlt
call
repnz
cli
xchg
jno
in
nop
shll
fstps
mov
insl
and
pushf
es
inc
mov
or
fld
cmp
xchg
dec
div
and
rcll
lea
addb
jmp
jnp
pop
push
decb
pinsrw
sbb
mov
xchg
mov
push
xor
out
loope
notl
in
ss
xchg
adc
push
or
and
fidivs
dec
pop
out
adc
inc
cld
pop
inc
adc
xchg
xchg
jge
adc
jg
inc
sub
cmp
lcall
and
dec
pushf
add
repnz
ds
jne
adc
lahf
pop
mov
push
cltd
xchg
or
push
popa
pushf
aas
js
cmp
and
cld
clc
xchg
rolb
imul
outsb
popa
and
xor
dec
fnsave
mov
pop
xor
xor
sub
ficompl
lea
bound
in
shlb
mov
jge
test
mov
stc
addr16
pushf
je
dec
mov
push
pop
frstor
fcompl
arpl
stc
adc
shl
add
and
dec
cmp
jl
sub
in
xchg
jb
inc
sbb
cli
jecxz
jp
mov
cmpsl
xchg
pushf
jmp
test
repz
mov
addl
fistpl
div
fstps
stos
stos
or
push
xchg
shlb
sub
adc
enter
pop
rorl
sub
jnp
sbb
inc
cmp
jbe
call
mov
imul
xor
cmp
lds
jnp
leave
mov
mov
jo
int
pop
and
pop
xor
scas
fisubrs
sbb
add
fbstp
xchg
xor
mov
cwtl
mov
loopne
push
dec
lds
mov
sbb
mov
xor
ret
jp
mov
enter
fsubrp
insb
in
in
int3
dec
pop
enter
mov
call
push
test
xchg
sbb
jb
mov
movsb
fwait
or
xchg
xor
mov
icebp
mov
lahf
loopne
push
mov
lods
neg
scas
xchg
mov
inc
and
push
lahf
jo
fnsave
cmp
jmp
movsl
loopne
lds
cmpl
xchg
cmp
ja
leave
call
sub
mov
stc
and
divl
js
ljmp
les
test
nop
data16
mov
std
push
mov
lret
jnp
add
mov
mov
mov
loop
jbe
das
in
push
jbe
xorl
pusha
aad
lock
mov
das
cmpsl
jle
in
push
clc
mov
mov
sub
sbb
xor
sub
repnz
insb
push
ljmp
mov
fwait
mov
jae
rorb
mov
je
into
jo
pop
or
and
fs
lea
popa
push
mov
popa
ret
adc
push
xchg
push
daa
pop
dec
test
push
inc
mov
stos
mov
stos
mov
icebp
push
mov
and
xchg
inc
push
fadds
adc
pop
mov
lcall
fdivrl
add
es
xor
and
and
in
xchg
jle
mov
push
push
loop
jb
and
out
xchg
add
pop
mov
push
hlt
push
popf
push
insb
push
xor
insb
or
pop
ja
orl
inc
sbb
jecxz
add
mov
adc
pop
push
aad
mov
mov
sbbl
jb
and
enter
push
xor
ss
ficomps
aaa
xchg
jp
iret
std
mov
add
add
push
not
jne
enter
and
int3
dec
dec
mov
cmp
test
mov
ret
aaa
push
fdivs
xor
mov
push
mov
push
xor
xlat
mov
push
roll
enter
lock
lock
sub
ret
js
or
mov
jnp
mov
inc
out
gs
mov
cltd
mov
adc
inc
sub
jbe
jae
aas
rcll
adc
lret
xchg
ret
mov
nopl
push
das
lods
aaa
cld
add
pop
js
sti
arpl
bnd
aas
cmp
loopne
jno
pop
sbb
adc
xor
push
in
inc
xlat
out
xor
mov
push
cmp
dec
mov
sbb
int
lods
lcall
sub
sarl
jle
mov
in
test
das
dec
adc
push
js
mov
dec
push
sub
xchg
jae
push
sbbb
imul
dec
popf
adc
mov
cmp
push
mov
push
iret
jl
adc
adc
fistps
push
daa
loopne
xchg
mov
lret
scas
pop
and
inc
and
nop
ja
push
xor
sub
cld
fcomps
enter
sahf
push
lea
push
cltd
push
inc
jmp
adc
xor
fists
jge
ds
xor
mov
dec
pop
ljmp
lods
mov
lea
inc
movsb
push
sbb
aam
test
xchg
fdivr
and
cmpsb
sbb
das
sub
sbb
shll
movsb
pop
in
xor
mov
daa
xor
loope
inc
adcb
mov
xchg
push
aaa
push
mov
enter
cmpsb
or
scas
xchg
jl
add
gs
push
hlt
mov
sbb
push
dec
stos
or
jb
xor
cmc
ficompl
xor
push
cmp
cmp
loopne
jne
dec
and
sbb
adc
pusha
cmp
mov
cmc
pop
cmp
roll
jle
adc
jne
mov
iret
je
add
insb
xor
push
add
xlat
iret
push
push
scas
mov
imul
inc
lret
push
fwait
cltd
sub
dec
push
sbb
notb
fdivs
dec
sbb
stos
call
cli
pusha
add
mov
loopne
js
jae
lds
mov
mov
cmp
pop
sub
inc
fstpt
mov
sub
pop
lock
xchg
fnstcw
inc
jp
xor
stc
mov
aaa
dec
insb
test
and
mov
push
jp
mulb
adc
ja
sahf
lds
jp
adc
sbbl
sbbl
iret
jecxz
loope
out
pop
repnz
sub
dec
into
push
lahf
mov
sar
inc
mov
mov
mov
rcll
popa
cmpsb
adc
mov
fs
mov
jge
mov
jns
lock
aam
pushf
gs
cld
hlt
out
int3
fisubrl
adc
lret
pop
incl
insl
fsubrs
cmpsb
cltd
mov
rcrb
dec
lods
cwtl
cmp
loope
jecxz
inc
loope
stos
xor
xor
mov
sbb
cmp
cltd
mov
add
insb
mov
pop
inc
cld
mov
pop
fldt
push
ss
scas
jnp
add
jge
inc
bound
cmp
add
sbb
mov
inc
dec
pop
shr
shll
or
popa
sbb
sub
int3
pop
xor
jp
sub
mov
aad
cld
adc
stos
dec
cmpl
inc
arpl
dec
push
inc
pop
adc
pushf
addr16
dec
xor
xor
push
jae
pop
cmp
scas
sbb
push
fnstcw
lcall
fabs
fsubs
es
in
out
and
orb
fdivrs
std
call
add
jns
insb
loopne
pop
icebp
sub
ljmp
ss
adc
leave
pop
mov
cs
rolb
jmp
add
test
add
scas
mov
xchg
lret
or
arpl
mov
ss
lahf
cli
push
xchg
mov
js
or
int
cs
pop
sub
xor
or
mov
fcoms
dec
sub
jbe
scas
sbb
divb
adc
dec
cld
pop
fdivrs
mov
cmp
dec
out
cli
mov
mov
out
daa
mov
jnp
das
jge
dec
lret
outsl
pop
pusha
xchg
rcll
das
sbb
rorb
test
adc
inc
jbe
imul
lock
ljmp
or
in
int3
addl
or
ljmp
add
sub
enter
cmp
dec
sbb
sub
lea
jmp
aaa
cmc
cmp
test
pop
or
movsb
xorb
lahf
out
or
sbb
cli
push
shr
arpl
push
mov
loope
ljmp
fs
dec
fcoml
neg
add
inc
andb
in
out
imul
aaa
sti
dec
icebp
jno
lea
imul
repz
inc
xchg
vaddss
test
dec
lahf
mov
push
pop
rorb
or
mov
pop
push
cmpsl
pop
add
inc
enter
ret
sub
popa
and
jnp
loop
xchg
jns
push
jb
lcall
ret
inc
leave
push
sub
inc
scas
rorb
mov
mov
sub
rep
pop
mov
jmp
movsb
ss
jg
fidivl
out
repnz
mov
mov
jg
pop
add
push
movsl
cmpsb
clc
adc
sub
push
mov
adc
shrb
add
test
mov
std
popa
pop
mov
movsb
cmpsb
xchg
js
shll
in
out
adc
pop
ja
xchg
mov
and
arpl
add
jb
fstpt
push
out
fcmove
jnp
push
inc
xchg
cltd
and
push
lea
jl
orl
lret
outsb
daa
xlat
sub
and
lcall
out
cwtl
aas
lret
lahf
loopne
add
pop
inc
push
out
sti
insl
das
sub
nop
scas
mov
fcompl
add
insb
ret
push
adc
cli
add
push
sub
sbb
gs
jp
dec
push
lcall
ss
mov
or
mov
mov
clc
jne
fistps
pop
dec
mov
dec
push
inc
test
ja
pop
jns
push
inc
push
call
xchg
cmp
fiaddl
lahf
ret
in
push
xchg
mov
or
orb
jns
cmpsb
inc
jns
pop
sbb
inc
fsts
fwait
jle
mov
pop
and
fildl
or
push
jle
imull
xchg
mov
mov
into
jge
lret
mov
fstp
mov
pushw
adc
sahf
cmp
mov
aaa
addl
mov
hlt
les
or
dec
mov
andl
or
fwait
inc
push
std
or
mov
xchg
lock
cmc
xor
cmpsl
jmp
loopnew
push
loopne
fbld
push
push
cmpsb
fistl
cmp
xchg
repnz
lret
movsl
xchg
sub
push
sbb
xchg
pop
dec
movsb
aaa
pusha
adc
sbb
mov
enter
cs
adc
adc
mull
imul
adc
rolb
adc
dec
sub
popa
xchg
dec
test
jo
scas
and
imul
lea
fistps
dec
adc
pop
adc
fsubrl
outsb
add
out
leave
aaa
aam
outsb
loope
mov
pushf
js
mov
insb
icebp
xor
sbb
cmp
or
xlat
mov
xor
cs
neg
add
push
xor
nop
mov
sahf
fisttps
movlps
push
nop
or
sub
adc
cmpsb
cli
data16
testb
push
cltd
call
or
cmp
xchg
cld
xor
sbb
mov
push
shl
jns
mov
lret
lret
mov
mov
xchg
mov
imul
mov
pop
jecxz
stos
sub
jge
insb
loop
or
icebp
popf
sarb
imul
jne
add
mov
repnz
jne
sbb
popf
cmc
inc
adc
or
sub
xchg
idivl
inc
lock
dec
arpl
sub
push
cmpsl
cmp
push
adc
cmp
ret
subb
daa
sub
xchg
inc
into
xchg
out
imul
adcl
push
stos
daa
pop
jp
andb
out
ret
fcoms
adc
or
shrb
repz
mov
jno
fwait
pop
in
fisttps
mov
popa
mul
sub
iret
hlt
icebp
cmp
cmc
inc
push
ret
jne
xor
mov
and
mov
mov
comiss
jno
push
sti
inc
icebp
imul
pop
testl
inc
aam
popf
sbb
push
arpl
jp
ficoml
icebp
out
jl
lahf
jle
aad
pop
cli
cmp
cwtl
rclb
or
stc
xchg
lret
test
xor
or
pushf
inc
ret
jnp
lret
mov
ffreep
jg
jg
push
in
cltd
je
mov
dec
lahf
js
fisubrl
mov
sbb
rcrb
cmp
ss
mov
xchg
cmc
adc
addr16
enter
ja
cs
dec
mov
jmp
push
pusha
pop
inc
pop
and
adc
stos
pusha
hlt
sahf
ret
andb
adc
repz
sarb
or
sub
and
pop
das
cmp
xchg
and
cli
xor
into
mov
and
ret
xchg
cmpsl
jecxz
cmovnp
mov
rol
pop
decl
add
gs
out
cmp
daa
mov
fnstsw
imul
inc
push
iret
fadds
outsb
or
push
dec
ljmp
cmpsb
in
dec
adc
mov
stc
pop
sbb
test
es
in
mov
add
and
cli
mov
imul
sbb
sbb
scas
imul
mov
andb
push
push
cmpsb
insl
mov
xlat
test
mov
push
push
or
les
pusha
adc
rep
xor
stos
loop
adc
pop
adc
xchg
out
fbld
push
jo
addr16
aad
xchg
sub
das
inc
std
adc
rcr
jmp
mov
adc
enter
in
push
inc
jno
push
xor
ret
dec
gs
mov
movsb
fnstcw
hlt
sbb
inc
cltd
mov
mov
jmp
lea
xlat
push
fisttps
nop
cmc
rcrb
int
adc
dec
pop
lods
or
mov
cmp
call
shrb
stos
push
mov
mov
or
mov
repnz
out
jne
pop
outsb
jl
fmull
in
fcompl
add
test
cmp
lea
addl
or
cmp
or
mov
sbb
and
pushf
xor
addr16
push
mov
cmpsb
jb
addr16
cmc
inc
xchg
insb
fadd
sub
popf
lods
daa
test
mov
rol
mov
pop
mov
mov
mov
pop
mov
daa
mov
addr16
jno
sbb
fs
ljmp
nop
dec
pop
cmp
loop
inc
adc
rorb
insl
popa
mov
adc
sub
xchg
jae
ss
mov
std
movsb
insb
jb
fisubs
clc
fistps
faddl
pcmpeqb
enter
mov
jae
and
sti
pushf
fsubr
push
out
or
xchg
jne
and
sahf
mov
das
lcall
pop
lock
sub
push
addl
fnstenv
pop
sbb
push
das
insl
jg
rcr
mov
cld
mov
sub
adcl
adc
mov
outsl
imul
xor
js
ds
add
and
jmp
addl
mov
dec
or
fsub
notl
cmpsb
push
cli
inc
dec
lret
out
mov
in
pop
in
push
pop
daa
in
xchg
ret
shrb
insl
inc
clc
addl
and
xchg
or
lcall
lods
fwait
push
push
sub
addr16
loop
inc
mov
popf
in
dec
fs
dec
mov
popf
dec
cwtl
sub
insl
andb
sahf
sti
ss
and
cmpsb
test
popf
push
rep
adc
mov
bound
jo
mov
jmp
imulb
cmp
test
cmp
test
call
jb
test
mov
pusha
loop
faddl
or
sahf
shlb
cli
popf
insl
jne
ds
movsb
mov
add
jbe
std
nop
ret
sbb
fmulp
das
lods
mov
mov
dec
mov
lret
mov
lret
xorl
jne
hlt
aaa
dec
shll
sub
jo
mov
mov
lret
push
fdivl
test
push
xchg
aad
std
sbb
sub
imul
dec
push
push
dec
lea
ds
repnz
jns
push
jne
test
xchg
lock
int
test
and
cmp
sbb
mov
test
ret
pop
stos
hlt
roll
pusha
inc
or
call
inc
nop
popf
hlt
xchg
cld
xchg
out
out
aam
fidivrs
icebp
sbb
mov
test
dec
scas
cmp
out
je
mov
cmp
shl
sbb
push
xchg
out
popa
sbb
arpl
ss
int
inc
je
movsl
cmp
xchg
xor
nop
mov
lea
and
cmp
xchg
sub
ds
mov
aas
lock
mov
ds
ficoml
nop
out
sub
in
sarb
xchg
dec
sub
ljmp
adc
push
es
and
cld
add
in
test
xchg
xchg
add
mov
cmp
stc
in
xchg
fadd
xor
lds
lods
jb
xchg
jae
es
shrl
lret
stos
mov
sbb
xlat
xchg
jmp
mov
scas
out
cmpsb
or
test
cmpl
dec
push
xchg
cmp
into
lcall
pop
popf
adcb
ret
fnstsw
dec
xchg
pop
cmc
popf
push
push
and
pop
test
xor
lahf
add
cwtl
mov
jb
mov
testl
or
xlat
xchg
or
icebp
fwait
inc
lret
mov
cmp
nop
rcrb
pusha
push
xor
cmc
and
es
arpl
pop
pop
imul
std
mov
loopne
fsts
test
cmp
adc
pop
mov
pop
xor
int3
data16
pusha
jbe
int3
fnstenv
cwtl
popf
push
sub
enter
and
repnz
xor
jecxz
pop
cmpsb
sub
and
mov
jmp
mov
mov
or
popa
mov
mov
jg
out
aad
mov
aas
and
insl
sahf
and
lret
dec
imul
addr16
push
int3
add
pop
or
jp
sub
add
sub
or
jns,pn
jmp
xchg
stos
int
in
pop
inc
fnstsw
sbb
and
jae
pop
ret
psubsb
add
jns
push
jbe
in
mov
cmp
xchg
sahf
xchg
mov
push
xchg
push
mov
push
imul
lea
ja
ljmp
cmpsb
sbb
and
or
mov
mov
inc
imul
or
cmp
lahf
adc
stos
cmp
xchg
sti
push
inc
jnp
ja
lret
mov
and
mov
inc
xor
call
loop,pn
pop
xlat
lock
clc
mov
sbb
inc
cmpsl
pop
jnp
inc
cmpsw
pop
mov
jno
and
mov
push
bound
jmp
xor
pop
loopne
sti
idivl
add
xchg
pop
dec
mov
leave
push
jno
pushf
xchg
in
ret
lea
push
into
inc
lock
add
xchg
inc
mov
jle
jge
stc
pop
ss
ret
xor
bound
cli
dec
and
adc
mov
mul
je
cs
sub
push
push
sub
test
or
xor
aad
cwtl
mov
jno
pop
push
push
imul
int3
insl
xchg
js
adc
pop
mov
call
sub
in
mov
and
jg
aad
pop
daa
iret
rcrb
jecxz
shl
mov
outsb
push
loop
xor
lahf
jae
mov
add
jl
std
movups
xchg
aas
cltd
fs
repz
push
ret
xchg
cmp
pop
scas
rclb
mov
xor
repnz
orb
push
and
fmul
inc
sub
jge
sbb
loopne
mov
mov
shr
dec
cmpsb
xor
ds
cmc
je
filds
out
or
adc
cmp
imul
lods
in
sbb
sub
fisubrs
clc
outsl
or
nop
dec
dec
xchg
inc
popf
insl
gs
inc
frstor
stos
sub
mov
ret
pop
fnstcw
xchg
ds
jp
pop
sarl
mov
aad
out
lods
imul
clc
xchg
dec
aas
jecxz
mov
iret
push
test
loopne
push
fsubrs
mov
mov
and
je
pop
jle
pop
xchg
xchg
dec
iret
jmp
adc
dec
out
clc
mov
negb
sub
and
repnz
lods
stc
mov
pop
ret
rolb
call
movsb
das
orl
mov
sbb
pop
in
sbb
ss
daa
rep
mov
sub
addb
sub
xlat
into
in
add
pop
push
flds
xchg
imul
pop
imul
leave
mov
sub
pop
das
lahf
dec
dec
adc
xchg
mov
cmp
lahf
pop
mov
out
or
clc
sbb
clc
lret
mov
mov
ss
nop
pop
mov
mov
adc
shl
inc
ficompl
lea
aad
imulb
test
dec
sbb
mov
fwait
xor
sti
stc
xchg
inc
loope
cmpsl
push
mov
out
dec
lret
iret
lods
shlb
xchg
or
mov
lcall
clc
push
into
insb
mov
mov
loope
jbe,pt
leave
xchg
jnp
aam
test
push
aam
pop
clc
cmpsb
adc
mov
movsb
in
rcl
push
xor
inc
jo
jmp
jge
or
shll
icebp
lcall
lods
xlat
sub
sub
mov
cmp
icebp
out
add
scas
push
xchg
pop
clc
inc
push
xor
dec
imul
out
xchg
or
rol
mov
addr16
into
outsl
fstpl
cmp
xchg
cmpl
sub
aaa
add
push
iret
inc
dec
addr16
cwtl
mov
push
push
jmp
lret
and
push
mov
cmp
or
into
and
dec
cld
dec
add
and
lret
pop
lret
mov
push
dec
and
negb
pusha
bound
iret
xchg
out
mov
lock
faddl
not
pop
or
sbb
dec
ret
mov
loope
cwtl
ds
jns
daa
inc
scas
inc
cld
shll
arpl
insb
cmp
sbb
mov
xor
cli
dec
mov
scas
jnp
xchg
push
clc
mov
mov
mov
hlt
ret
fbstp
adc
ffree
push
xorl
movsb
repnz
xlat
sbb
fldcw
jae
andl
and
xchg
stc
shrl
sahf
push
jne
xor
add
ss
cmpl
lret
jecxz
push
xlat
sub
loopne
dec
out
imull
fnstcw
add
push
sub
mov
ja
cmp
nop
mov
das
fwait
mov
lock
or
inc
test
fucomi
inc
jle
loope
mov
sbbl
xlat
xor
mov
inc
filds
mov
mov
jae
add
sub
mov
out
out
mov
and
movsb
call
sahf
jg
pop
jbe
addr16
fisttpl
mov
or
dec
sub
inc
iret
imull
testb
shr
scas
xchg
add
xchg
adc
bswap
push
dec
add
out
pop
pop
mov
xchg
xchg
cmc
in
jge
xchg
fcomps
pop
cmp
mov
sahf
in
lcall
sub
fdivs
and
cmp
mov
xor
stos
mov
adc
inc
inc
xor
out
xor
pop
or
push
sbb
arpl
addr16
int3
push
xorb
andb
jo
mov
negb
xchg
inc
mov
les
test
pusha
insb
stos
and
sar
push
aam
dec
scas
mov
adc
pop
add
sub
mov
fidivrs
push
mov
mov
sub
outsb
mov
fildl
jg
repnz
sbb
sti
sbb
fstps
loopne
mov
ficompl
mov
fistpl
in
into
sahf
cmpsl
cltd
sbb
icebp
mov
cltd
push
pop
aam
push
cltd
lock
in
testl
sbb
bound
pop
adc
push
jg
mov
mov
or
adc
push
outsl
mov
jge
mov
jmp
and
xlat
loope
notb
xchg
test
popa
push
into
hlt
test
arpl
sub
jo
pusha
sti
jge
aas
and
cli
bound
mov
mov
roll
cmpl
loopne
add
and
xchg
fadds
mov
testb
out
lret
scas
sbb
insl
pop
mov
andl
enter
cmc
popl
sahf
pop
dec
inc
popf
mov
adc
jnp
mov
cs
add
inc
sub
ljmp
nop
mov
out
xchg
ret
popf
jl
inc
and
jbe
cmp
jg
lahf
std
fstpl
pushf
or
jbe
sub
imulb
dec
outsb
paddq
sbb
inc
xchg
es
in
cmp
lock
xor
mulb
add
inc
sub
leave
jne
dec
jae
jno,pt
ds
shll
rclb
mov
stos
cvtps2pi
fwait
mov
mov
enter
xchg
jno
fimull
jbe
ljmp
sbb
push
inc
jbe
push
sbb
test
in
jl
adc
mov
mov
popl
jnp
mov
jecxz
aad
lahf
cmp
xor
jo
mov
fdivrs
jp
inc
mov
or
jp
or
test
jg
inc
cmp
xor
cld
xor
xor
cmp
je
adcl
xor
sahf
jl
aam
fs
or
inc
push
dec
inc
popf
xor
mov
sbb
fs
imul
sbb
scas
cmpsb
push
cmpsl
fsubs
test
arpl
jp
push
and
aad
lods
lds
in
les
lcall
popa
fnstenv
pop
pop
dec
scas
mov
mov
jbe
fwait
arpl
mov
pushf
aaa
pop
ret
xor
sbb
inc
adc
or
inc
rorl
call
cld
xor
jmp
ljmp
jl
xchg
xchg
mov
enter
inc
push
add
popf
and
sbb
out
stos
in
inc
aad
ss
and
cli
xchg
dec
cmp
rolb
gs
int3
jge
or
sbb
inc
std
sbb
cmc
inc
push
mov
ljmp
pop
lock
in
mov
jae
addr16
xor
cmp
mov
xor
inc
sub
iret
fnstenv
movsb
mov
jo
ret
cmpsl
stos
rcll
movsl
mov
xor
dec
jmp
rcll
dec
js
and
rolb
test
jno
push
sbb
push
rclb
inc
xor
sub
je
adc
js
inc
sub
push
or
aaa
imul
dec
xorl
mov
add
xor
sbb
sub
mov
mov
movsb
rclb
inc
mov
dec
push
in
ss
push
push
sbb
xor
push
sub
adc
xlat
xor
cld
mov
push
pop
mov
inc
and
sub
mov
dec
xor
mov
jmp
dec
push
mov
shlb
xor
or
xor
sbb
inc
add
mov
ds
inc
xchg
shrl
lock
lock
bound
mov
mov
xchg
cld
das
aaa
dec
xchg
add
mov
insl
clc
add
movsl
lahf
xor
das
push
loop
adc
inc
out
stos
negb
jecxz
je
daa
pushf
jb
insl
or
inc
popf
xor
enter
mov
and
sub
cltd
cmpsl
mov
stos
filds
int
adc
jo
push
std
and
shlb
cmp
es
das
insb
jle
sub
stos
jle
in
addl
mov
es
iret
xor
mov
xchg
mov
int3
mov
or
push
icebp
mov
cmc
out
ljmp
fistps
repz
sbb
or
lahf
pop
mov
popf
sbb
or
movsl
dec
add
and
dec
jmp
movsb
mov
and
xlat
loop
jmp
ljmp
push
jg
mov
xchg
xchg
mov
fidivrs
pop
lcall
sarl
or
arpl
inc
mov
jns
sarb
inc
add
int3
xorb
cld
aas
mov
dec
in
fwait
jns
sbb
push
int
xchg
es
ret
sbb
sub
fdivr
dec
int3
cltd
xchg
and
aas
sbb
push
push
int3
scas
mov
sub
aas
outsb
mov
mov
adcb
mov
cmp
test
out
add
ret
dec
cld
mov
jmp
imul
daa
xor
sbb
push
outsb
out
insl
fs
mov
fldenv
mov
mov
sub
jl
mull
pop
shlb
fldlg2
fdivl
mov
stc
cmpsl
lods
jmp
push
mov
shrl
ds
mov
jmp
das
xor
mov
inc
imul
aam
testl
push
enter
inc
test
cmp
imul
ja
jecxz
push
daa
mov
sbb
xchg
stc
and
inc
pop
mov
outsb
addb
rcl
stc
insl
ja
int3
pop
push
xor
xchg
inc
pop
fwait
lock
stos
add
push
hlt
out
mov
in
or
dec
jecxz
xor
aam
xchg
mov
rcrb
subb
cmp
xor
cli
mov
push
add
shlb
cmc
pusha
sbb
cmpsl
inc
repz
cmp
loop
cmc
stc
inc
and
lahf
push
data16
test
icebp
xchg
jle
jno
sub
dec
clc
and
push
add
xchg
xchg
in
scas
mov
mov
dec
or
scas
in
xor
jb
sti
loopne
sti
cld
mov
rcl
lods
call
or
or
sbb
mov
stos
push
pop
int3
clc
iret
testl
pushf
roll
sub
lds
mov
leave
cmp
ret
movsb
mov
mov
movsb
ljmp
orb
fistpll
and
cmc
inc
enter
ljmp
and
mov
pop
fcoms
lcall
xor
cmp
inc
stc
inc
popa
dec
mov
pushf
jp
aad
fildll
push
mov
aas
or
push
lods
and
movsl
icebp
cmc
pop
jnp
xchg
xchg
cmp
aam
push
xchg
cmp
ret
scas
cmc
dec
xchg
jne
and
push
mov
cli
arpl
test
dec
iret
and
push
icebp
sub
cmp
xchg
sarl
repz
call
cmpsb
fistl
sbb
lods
mov
sarb
add
mov
xor
xchg
or
push
fcompl
xchg
loop
cwtl
xchg
jnp
or
sbb
test
sahf
mov
adc
sahf
pop
mov
xor
or
push
fldt
xor
pop
push
clc
mov
test
adc
pushf
mov
add
pop
test
inc
test
add
icebp
jns,pt
fldenv
lock
and
inc
xor
or
jle
and
into
cld
cmp
or
mov
out
ss
fldcw
pop
or
subb
fdivrs
and
jno
jle
mov
sbb
push
aam
sub
cmp
icebp
outsl
xchg
sub
fucom
sbb
dec
xchg
aam
dec
add
sbb
dec
rorb
sbbl
ret
or
push
adcb
pop
sbb
enter
sub
bound
jl
imul
mov
mov
sub
mov
mov
and
bound
outsl
or
dec
test
ljmp
pop
lret
add
add
xchg
mov
pop
add
fs
aaa
cmpsb
or
scas
lret
add
mov
pop
mov
in
push
push
loopne
xlat
push
sub
sarl
fcmovnb
mov
jg
sub
movsb
inc
enter
push
adc
leave
jp
pop
push
in
mov
mov
ds
and
jae
mov
or
push
and
hlt
mov
dec
fcoml
ds
imul
pusha
cwtl
leave
leave
hlt
and
push
mov
inc
mov
call
in
sbb
jl
js
and
jne
fidivl
ljmp
push
out
in
or
daa
lods
aaa
lret
adc
xor
mov
xor
ret
adc
cmp
xchg
dec
inc
sarl
lahf
data16
lock
sbb
fidivrl
jae
test
out
cmp
inc
jae
inc
xchg
or
or
xchg
cli
or
cli
or
movsb
movsb
aas
cwtl
push
ljmp
mov
and
push
sarb
repnz
daa
xor
fld
cmp
sub
test
and
and
xchg
icebp
push
mov
movsl
cmp
in
test
xor
or
sbb
mov
aas
gs
add
in
sbb
pop
fs
mov
cmp
lods
adc
dec
dec
fmull
nop
push
dec
push
mov
push
push
push
sbb
pop
pop
sub
popf
imul
xchg
aas
arpl
or
add
shll
shr
jp
out
in
mov
sub
jno
sub
popf
cmp
aad
add
and
push
jg
adcl
cmp
repnz
mov
jl
fdivrl
inc
xchg
add
loop
fwait
bnd
xchg
lret
mov
cmc
mov
negl
fstl
inc
add
jb
cmp
push
jge
int
out
sahf
pop
std
pop
rorl
xchg
sub
push
dec
xchg
and
inc
out
rorb
pop
stos
cli
std
add
mov
bound
loope
adc
xlat
xor
sbb
lds
fwait
lahf
mov
loop
push
xchg
inc
aad
scas
cmpsb
mov
mov
aam
pop
icebp
or
push
stos
not
inc
inc
sbb
inc
out
push
inc
or
fnsave
pop
cs
cmc
inc
or
ficoms
push
mov
in
cmp
in
push
addr16
stos
jl
in
add
scas
pop
pop
push
movl
sbb
out
mov
pop
addr16
or
adc
add
push
adc
notb
dec
js
aam
adc
aas
lret
ret
mov
and
and
aam
push
mov
adc
mov
sbb
jnp
xor
push
push
xchg
mov
jl
enter
scas
xchg
add
xchg
and
mov
and
xor
mov
xor
mov
lock
sub
and
adc
addr16
into
pusha
sub
or
pushf
lahf
lret
xchg
popa
jmp
inc
mov
repz
pop
shr
xor
and
mov
lock
cli
lret
int3
xor
xor
pop
push
es
ljmp
fbld
rep
jae
xchg
shrl
insb
and
dec
mov
leave
pop
daa
stc
jb
decb
xchg
loopne
movsb
fimull
in
in
imulb
add
cwtl
push
jmp
je
cmp
inc
cli
jmp
js
dec
shlb
jmp
into
push
xchg
mov
and
daa
stc
adc
pop
sbb
pop
dec
imul
mov
js
arpl
orb
mov
outsb
dec
popa
daa
js
test
jge
mov
insb
mov
or
inc
or
jae
dec
out
lock
loopne
ds
adc
and
sub
and
mov
pop
or
sub
out
add
daa
notb
sti
xchg
mov
mov
stos
push
xor
push
cmpsb
xchg
adc
pushf
pop
lret
fsubrl
mov
shrb
outsb
sahf
jmp
xchg
pop
push
push
xchg
add
xchg
jmp
mulb
cmp
adc
bound
out
inc
insb
adc
notb
outsl
push
mov
in
sub
outsl
pop
xor
insl
push
push
cmp
mov
clc
inc
mov
std
push
and
dec
add
xchg
add
cwtl
push
js
pushf
adc
fidivl
jmp
adc
cld
inc
mov
cli
jecxz
mov
jo
xchg
lret
decl
jecxz
fdivl
sub
sub
aad
mov
icebp
aaa
dec
ja
arpl
push
ss
mov
mov
jle
pop
shrl
aas
iret
jmpw
dec
and
outsl
pop
pop
or
int
aam
inc
xchg
xlat
cmpsb
push
fidivs
xchg
xor
adc
pop
jb
lds
add
jge
push
inc
add
into
movsl
cmp
iret
push
sub
clc
jp
pusha
xchg
aas
jns
adcb
and
or
das
leave
enter
jp
pop
imul
add
jo
inc
xchg
xchg
fldt
cli
pop
loope
adc
ljmp
mov
add
enter
xchg
neg
pop
inc
xor
lahf
xor
dec
push
je
mov
cmp
mov
adc
arpl
ret
cwtl
mov
jle
xlat
daa
xchg
jne
add
aam
sbb
xchg
dec
sbb
pop
cmp
jg
and
add
lcall
mov
sub
adc
mov
scas
mov
push
jmp
and
push
pop
ret
push
pop
ret
outsl
outsl
xchg
xchg
fnstsw
xchg
ud2
xchg
pop
nop
sbb
push
imul
and
fsubp
inc
jmp
rcr
pop
dec
sbb
mov
mov
cmp
mov
loope
daa
ds
mov
out
dec
mov
cli
imulb
adc
into
and
das
imul
mov
xchg
sbb
lock
mov
test
fidivrl
sbb
les
pop
stos
fs
cmpl
jecxz
sub
pop
mov
xchg
dec
arpl
inc
push
les
jecxz
and
in
hlt
add
fdivrp
stc
cmc
lcall
call
add
lock
inc
cmp
add
lock
fdivrl
mov
mov
mov
sbb
outsl
or
aas
cmp
ljmp
cmp
fldenv
pop
insl
scas
imul
dec
aas
pop
mov
xor
clc
test
adc
fidivrl
testl
xchg
dec
nop
imul
push
leave
jp
adc
sti
jle
in
cs
mov
aad
inc
fdivl
sahf
sbb
int3
in
pop
popa
shrl
addr16
les
push
or
cld
test
cmpsb
stc
pop
int3
xchg
cmp
dec
mov
jae
pop
mov
sbb
jae
mov
or
rcrb
xchg
push
lods
sbb
mov
fldt
cwtl
mov
imull
cmp
clc
imul
ret
out
leave
loop
cmpl
add
or
mov
adc
call
cmp
in
out
xchg
clc
hlt
adc
sbb
out
call
ljmp
ja
out
mov
sbbl
mov
fs
sbb
and
outsb
xor
aas
shrl
test
pop
sub
mov
aaa
stos
fnstenv
in
cmp
mov
idivb
subb
pop
or
in
bound
mov
sbb
imul
cmp
pop
cmp
jns
mov
push
cli
add
rorl
clc
jl
incb
cmp
push
mov
std
add
pop
stos
jo
ret
sbb
decb
insl
xchg
shr
mov
int3
or
dec
cli
rclb
push
int3
scas
in
adc
jecxz
xchg
js
fidivrs
cld
stc
sbb
pop
icebp
mov
mov
scas
fcom
add
jp
fcmovne
outsl
dec
ja
repz
pop
xor
push
lret
mov
das
mov
adc
addl
scas
adc
ror
mov
rcrl
xchg
bound
jg
bound
notl
pop
dec
xor
xor
stc
in
js
testl
adc
xchg
add
stos
mov
dec
inc
sbb
mov
xor
lret
dec
mov
test
inc
xchg
and
xchg
xor
adc
outsb
idivb
add
mov
lcall
std
jecxz
mov
xor
pop
adc
inc
out
les
aam
xchg
popa
push
add
in
mov
or
fdivrs
es
mov
popa
pop
xlat
clc
imulb
daa
roll
mov
mov
pusha
fldenv
lock
xor
xchg
popa
pop
and
outsl
and
pop
or
pop
dec
leave
push
add
jae
int
imul
sbb
imul
pop
pop
aaa
jecxz
jmp
jecxz
xchg
lcall
scas
stos
cmpsb
pop
fdiv
mov
stc
popf
fsubr
push
sub
aaa
xor
sbb
adc
add
fidivl
dec
scas
push
sti
mov
sub
jmp
mov
aam
rcrb
out
or
imul
mov
adc
je
push
xchg
loop
loop
adc
sub
daa
sti
pop
dec
jmp
push
jge
aad
bound
add
adc
mov
in
fnstsw
std
pop
mov
insl
out
lret
jae
xchg
dec
mov
sbb
test
inc
pop
xor
fwait
repz
add
loopne
dec
in
dec
adc
sub
imul
and
cltd
sbbb
mov
xchg
and
ljmp
pop
iret
add
in
nop
loopne
cltd
xchg
int3
pop
inc
data16
insl
arpl
mov
repnz
lcall
mov
stos
sbb
mov
jecxz
aam
and
dec
jb
and
pop
mov
cmpsl
dec
int3
and
shlb
out
pushf
xor
sub
jmp
push
push
mulb
daa
push
enter
aaa
xchg
pop
ror
fcompl
mov
inc
notb
in
dec
mov
in
js
aas
push
adc
push
push
pop
mov
call
stos
sub
pushl
aad
aad
fs
pop
shlb
or
xchg
jg
push
push
and
or
push
jecxz
sti
jle
mov
test
stos
inc
cmpsb
or
aaa
out
and
pop
and
dec
out
in
mov
jmp
lcall
mov
je
dec
adc
cmpsb
and
in
lret
dec
call
ljmp
insb
push
js
xchg
mov
cmp
loopne
sbb
sbb
jmp
cmpsb
fcompl
std
mov
repz
jg
xchg
out
mov
popa
cmpsb
adc
add
inc
data16
mov
aad
dec
mov
pop
ds
cltd
lret
mov
xchg
sbb
adc
add
pop
pusha
or
push
int
xorb
pop
jmp
lea
outsl
mov
add
add
movsb
fwait
inc
sub
ljmp
and
fstl
push
sub
pop
push
stos
cmp
xor
aas
imul
ja
nop
out
push
push
icebp
jb
sub
mov
push
cmpsb
mov
loope
or
stos
pusha
loopne
scas
ljmp
inc
pop
fisubrs
das
adc
jns
lret
dec
adc
out
jecxz
test
loope
push
mov
sub
cmc
cmp
sub
sbb
jae
push
mov
dec
pop
mov
mov
aad
inc
test
mov
adc
lret
std
cmp
pop
mov
leave
int3
jo
outsb
xchg
mov
test
fcmovbe
mov
stos
aam
jl
pop
cmp
daa
mov
imul
cmp
pop
sub
jl
ss
xor
in
insl
shll
mov
or
frstor
mov
and
out
mov
popa
xchg
lods
or
push
mov
test
jne
adc
pop
test
or
xchg
pop
insl
pop
pop
add
mov
dec
xchg
push
dec
fdivrs
aas
add
std
xor
popa
add
pop
addr16
push
mov
stos
movsb
sbb
cwtl
lret
cmp
mov
fmulp
xor
std
xor
sbb
pop
les
cs
xchg
nop
adcb
mov
iret
mov
sbb
adc
push
cmp
ficoms
push
inc
mov
sarb
outsb
or
scas
test
test
in
imul
loope
outsb
mov
idivb
lret
out
rcl
sub
int3
cmpl
cmp
jbe
icebp
jecxz
jmp
loope
fidivrl
push
jne
into
xchg
and
pop
mov
and
jno
pop
stc
sub
es
add
test
jo
push
lods
inc
mov
into
lcall
inc
fs
cmp
lahf
test
jne
inc
imul
mov
lods
sahf
jmp
ds
sub
xchg
add
xchg
mov
push
subb
ljmp
push
cmpsl
push
inc
mov
je
das
mov
sub
mov
or
cli
faddl
pop
mov
pop
push
in
pop
pop
jmp
push
sub
mov
inc
stos
add
ds
and
jo
int3
push
test
in
rcll
cmp
pusha
sti
shr
sahf
ret
pop
daa
jmp
inc
xchg
and
push
mov
andl
add
in
cmp
add
fisubrl
dec
nop
out
jns
pop
and
mov
outsb
xor
mov
arpl
int3
dec
pop
rcll
fs
fcompl
cmp
pop
add
xchg
mov
ret
push
in
mov
cwtl
inc
xchg
fimuls
jle
pop
fwait
daa
push
inc
add
push
push
hlt
cli
dec
mov
sub
xchg
movb
bound
push
push
test
in
nop
jmp
fsts
and
cmp
pop
jecxz
inc
jns
pop
pusha
sub
out
sbb
in
shl
in
pop
pop
clc
lahf
inc
bound
and
lea
push
jecxz
pop
fcomps
inc
push
adc
adc
pop
lcall
mov
das
sbb
loopne
cmpsb
popa
cmp
inc
sahf
jo
push
mov
pop
cltd
sbb
fldt
in
into
fcompl
std
sub
xchg
pop
cmp
test
rclb
mov
test
jle
ja
jbe
mov
fs
dec
xchg
and
pop
mov
push
cmp
push
jmp
es
mov
dec
pop
xor
out
pop
lret
xchg
sbb
shlb
cmp
fisttpl
ret
xor
inc
div
aaa
xor
mov
sub
out
push
fs
push
ja
mov
xchg
cli
jb
pushf
inc
inc
pop
mov
enter
ud1
cmpsb
mov
out
and
mov
test
popf
adc
inc
rcll
add
mov
das
inc
jo
sahf
lret
mov
jle
mov
mov
je
cs
xlat
and
inc
pop
aad
call
sbb
mov
rclb
jecxz
and
stos
je
test
ljmp
sub
aaa
cmp
lock
adc
rorl
add
or
repz
dec
push
sbb
mov
jle
push
xchg
roll
jl
or
mov
ss
addr16
aam
bound
ret
repz
add
dec
push
xor
fwait
inc
or
xadd
dec
mov
inc
mov
loopne
mov
jbe
dec
dec
xchg
mov
pop
mov
sahf
int
enter
stc
push
xor
jb
push
xchg
call
xor
jecxz
jne
test
rclb
adc
add
inc
lea
mov
lret
jnp
adc
pushf
pusha
sub
push
push
push
fildll
sub
imul
daa
xor
dec
test
dec
or
nop
pop
adc
xorl
dec
dec
cmp
xlat
push
push
in
cmc
sbb
sub
push
xchg
mov
iret
iret
adc
aas
bound
sub
pop
xchg
xlat
ljmp
imulb
pop
cmp
nop
loope
cltd
popf
mov
mov
out
cmp
push
cmc
test
push
out
dec
and
call
inc
inc
ret
daa
scas
mov
fdivs
test
pushf
pop
lds
loop
jb
ret
pushf
xchg
cmp
lcall
je
fwait
xchg
jle
aad
xor
sub
dec
add
out
jbe
jg
pop
imul
ljmp
sbb
sub
pop
sahf
inc
out
iret
out
outsb
mov
add
or
dec
sbb
dec
hlt
jo
test
sub
xor
and
imulb
xchg
add
subb
rclb
dec
in
mov
xlat
xchg
pop
dec
mov
push
bound
in
jecxz
je
xchg
sarb
jmp
mov
jge
shll
daa
mov
pop
mov
add
jg
pop
ficoms
mov
les
add
mov
test
pop
add
cltd
adc
mov
mov
fidivs
jb
or
sub
jg
les
movsl
push
and
repnz
je
mov
jns
mov
mov
inc
shlb
jbe
je
divl
jg
xor
aam
sub
or
stos
sbb
cmpsb
divl
and
adc
push
inc
xor
push
mov
mov
mov
cmp
popa
mov
mov
jb
xchg
jmp
testl
dec
insl
fisttpll
add
adcb
add
cmp
pop
aaa
xchg
lret
lea
test
cmpsb
jle
fcomps
dec
add
cmp
pop
jecxz
pusha
mov
xchg
sub
lods
pop
andb
jae
std
leave
outsl
jmp
inc
xchg
sub
std
out
cltd
mov
pop
lods
mov
stos
sbb
out
lea
dec
xor
add
aam
xchg
je
push
jg
cmp
xor
stos
movsl
filds
fldcw
mov
pop
adc
loop
xor
xor
cmpsl
xor
dec
jp
fidivl
popa
jmp
or
ds
movsl
out
js
and
push
xchg
ljmp
fnstenv
aad
sbb
sbb
jmp
shll
jmp
dec
repnz
cld
test
mov
cmp
ljmp
push
nop
add
stos
scas
arpl
subl
mov
in
push
ret
mov
mov
jne
mov
xor
rorb
xchg
cs
daa
dec
fmull
out
inc
sub
repnz
jo
pop
adc
pop
pushf
sbb
xor
fldl
or
aam
xor
aas
mov
jb
inc
mov
jns
and
sub
daa
imul
inc
dec
mov
test
int
test
nop
dec
fsts
push
dec
scas
pop
inc
out
loop
adc
push
and
pop
mov
negl
subb
mov
sbb
xchg
fldt
sub
xlat
and
pop
into
cmpsb
push
or
xorl
jp
test
loop
pop
sub
jle
or
xchg
shr
icebp
outsl
les
insl
lods
out
adc
in
clc
sahf
sub
mov
fwait
dec
jbe
fwait
cmp
mov
cmp
jne
ret
adc
outsl
mov
xor
adc
xor
mov
push
sarb
insb
sub
pop
cmpsl
pop
dec
mov
in
or
mov
fidivrs
aas
addr16
cmp
fcom
dec
inc
mov
fnstcw
sub
fsqrt
lret
std
movsl
call
cltd
and
or
mov
mov
xor
sub
inc
cmpsl
mov
aaa
sbb
ds
in
hlt
lds
stos
add
xchg
iret
mov
push
push
dec
jb
xchg
cmpsb
sub
sub
sub
mov
pop
jnp
cmpsl
sub
out
mov
dec
cmp
stos
pushf
in
mov
jge
jp
icebp
out
add
adc
cmp
cs
dec
int
xchg
pop
mov
xlat
sbb
stos
pop
in
jb
mov
xchg
into
dec
pop
aas
call
mov
fucomi
clc
lock
jl
pop
imul
sub
jae
out
jnp
in
ret
std
hlt
cmc
insl
stos
test
jmp
arpl
mov
repz
insb
xchg
fwait
and
dec
or
or
pop
stc
insb
xchg
movsl
decb
cld
hlt
push
and
stc
in
xor
cmp
int
sbb
out
cmpsl
repnz
sahf
outsl
pop
inc
push
jecxz
xchg
sub
inc
test
and
out
inc
sub
repz
aam
jae
test
scas
push
adc
in
fdivrl
fsubp
addr16
dec
mov
pop
es
test
add
divl
mov
fs
inc
jno
shll
aaa
cmp
ss
mov
xchg
push
movsb
fimuls
repz
hlt
lret
add
test
int3
inc
adc
add
and
subl
jno
mov
fs
xchg
cld
xchg
fcoml
and
cmpsb
add
fwait
dec
inc
insl
fwait
xor
inc
pop
pop
and
addr16
aam
out
int3
je
add
push
data16
mov
cmp
in
and
ret
push
les
mov
cmp
push
mov
mov
push
push
pop
outsb
or
insl
mov
jle
ficompl
leave
daa
xlat
jae
loop
dec
mov
aas
out
call
push
sbb
xchg
incb
stos
std
mov
and
testl
aas
loope
sti
js
fnop
cltd
out
repz
js
stos
popa
shrb
xor
dec
mov
int
xor
jecxz
orl
inc
xchg
xorb
stos
jp
sbb
jbe
sbb
es
out
arpl
xor
mov
aam
add
push
sbb
xchg
loopne
std
xchg
rcrl
dec
mov
sub
jae
pop
or
xor
inc
int
nop
lea
xchg
pop
jno
or
ja
loope
movsl
aam
push
jmp
mov
mov
shr
test
sbb
imulb
lret
sbb
bound
xchg
mov
fimull
lahf
add
gs
aad
adc
mov
inc
movsl
mov
mov
imul
je
or
and
xchg
out
divb
rcl
hlt
fiadds
pop
mov
mov
sub
adc
dec
fiadds
daa
test
xor
gs
lret
lods
add
call
jp
cmp
add
pop
mov
inc
jno
test
stos
pop
sub
arpl
daa
or
push
out
pop
inc
fimuls
cmp
sbb
and
js
xchg
int3
xchg
cmp
mov
jno
and
aaa
jge
enter
lahf
inc
sarl
ljmp
lcall
outsl
inc
int3
mov
mov
mov
cwtl
loopne
lods
sbb
cltd
jnp
and
repnz
jae
mov
out
sbb
cltd
xor
sub
pop
lret
push
pop
mov
xchg
mov
aam
pop
xor
out
scas
dec
aad
mov
dec
push
shlb
jae
fcmovnbe
add
mov
or
dec
test
xor
xchg
pop
ds
inc
lcall
add
js
mov
mov
call
dec
cmp
rorl
mov
inc
js
enter
push
aas
hlt
pshufw
cmp
jecxz
mov
stos
mov
adc
pop
fldt
sbb
das
cmc
push
pop
jno
jmp
sub
jns
out
popf
jae
fwait
popf
adc
jp
inc
in
rorb
add
lds
outsb
inc
pop
ljmp
mov
lods
mov
loope
stc
imul
jecxz
inc
sbb
pop
mov
dec
pop
xor
ja
lods
insl
mov
aas
jno
lret
lods
push
cld
cmp
push
jo
cmc
push
repnz
dec
test
movsb
xor
dec
icebp
xabort
stos
sub
rolb
rcrb
fildl
in
fadds
sbb
adc
loopne
loop
pop
loop
rclb
jmp
sahf
adc
xchg
mov
ja
arpl
sub
inc
test
mov
sub
or
jnp
push
and
cmc
add
lods
ss
dec
jecxz
mov
xchg
inc
xor
mov
cmp
xchg
push
jge
lock
jg
fstpl
mov
fmul
mov
push
dec
dec
andl
pop
xor
icebp
fbstp
mov
mov
mov
add
inc
scas
mov
sub
rclb
gs
adc
mov
mov
push
pop
push
jl
and
jno
std
or
scas
and
lcall
dec
std
sbb
jne
dec
movsl
add
push
sahf
push
cmp
and
push
or
shrl
xor
inc
cmc
mov
inc
test
pop
mov
fnstcw
mov
hlt
or
push
adc
xlat
push
je
insl
and
sbb
repz
xlat
xchg
and
scas
sbb
sbb
lds
popf
inc
mov
mov
aam
out
or
stc
xor
jp
cmpsb
jo
addl
rcr
adc
dec
add
pavgb
xor
mov
or
rcrl
pop
and
cli
popa
push
cmp
xor
imul
sbb
pop
and
lds
mov
enter
cmp
shll
cmp
inc
andb
and
add
adc
mov
stos
xchg
mov
dec
jp
test
mov
add
in
dec
pop
jl
outsb
adc
and
in
mov
out
pop
test
lock
mov
add
cwtd
out
jle
mov
cmc
setbe
mov
jbe
jbe
jno
sbb
leave
mov
pop
repz
repz
arpl
xchg
sti
shlb
inc
dec
cmpsb
cmp
sarl
scas
push
pushl
lret
repz
and
leave
xlat
cli
ss
in
cmp
movsl
repz
ljmp
js
rcll
mov
fistpll
pop
testb
add
loope
mov
stc
push
test
add
push
pop
lods
mov
lret
adc
test
fsubl
xchg
cmp
push
sbb
in
adc
and
adc
lea
loope
push
test
add
and
shlb
dec
shr
push
cmp
inc
arpl
mov
out
push
xchg
pushf
out
dec
xchg
push
pop
inc
mov
repz
mov
int3
fimuls
mov
jnp
fildl
mov
or
push
mov
fst
push
repz
js
cltd
mov
xchg
in
out
xor
mov
mov
add
ficoml
sub
mov
xchg
imul
test
jno
add
and
dec
xchg
sti
sbb
imul
pop
test
dec
jp
subb
icebp
notb
sbb
jmp
sbb
cmp
push
mov
lods
sti
out
add
mov
out
std
fisubs
ss
ljmp
and
xchg
cmp
mov
shlb
arpl
push
ret
push
sbb
loop
mov
push
in
mov
clc
call
stc
loop
mov
mov
in
ja
sub
adc
ja
mov
dec
pushf
push
jnp
or
shll
pop
sbb
loope
adc
cmp
mov
out
cmc
rcr
mov
dec
cmc
out
pop
cmpsb
mov
mov
popa
or
sbb
jnp
xchg
mov
out
insb
inc
and
cmp
sbb
subb
xrelease
and
leave
outsl
sub
adc
cmp
xlat
int
dec
or
into
movsb
xchg
lds
mov
in
mov
pop
aad
ret
and
add
xor
and
cmp
add
sbb
pop
sub
out
in
or
stc
pop
mov
scas
test
mov
repnz
std
inc
pop
inc
mov
imul
mov
into
adc
cmp
iret
jecxz
xchg
nop
add
xchg
and
fnstenv
aad
mov
sub
pop
dec
fsub
in
fwait
mov
popf
stos
mov
and
xchg
adc
xchg
out
inc
js
clc
xor
cmpsb
mov
xchg
je
in
mov
sub
sub
fidivrs
pop
loop
push
cli
inc
imul
int3
std
sbb
dec
inc
cmpsb
and
cmp
add
and
cli
lret
xor
adc
cmpsl
adc
xchg
adc
push
andb
push
pop
or
rcl
data16
xor
push
xchg
push
stc
or
popa
or
fdivs
jp
ljmp
hlt
jns
pushl
in
jo
pop
in
pushf
adc
pop
or
ja
push
mov
and
bound
in
aaa
lock
pop
mov
xor
dec
ja
and
xchg
or
push
xor
scas
cltd
jns
cld
int3
cli
rorb
fwait
cmp
out
mov
dec
jne
filds
cmp
bound
call
movsb
sbb
jb
mov
je
add
push
mov
fsubs
inc
out
mov
or
repz
ds
fildl
mov
mov
xchg
sahf
inc
inc
jo
push
push
sbb
and
sub
in
inc
push
jns
pop
cld
pop
mov
push
inc
loope
xchg
cmp
push
nop
or
int3
imul
fsubrs
sti
test
roll
add
jp
sub
clc
and
aad
xor
cmp
adc
push
movb
pop
testb
idivl
stc
xlat
push
pop
icebp
cmpb
cmp
movsb
jae
aas
ds
pop
adc
mov
les
xchg
nop
jns
mov
imul
ret
fstpl
shlb
and
mov
decl
xor
add
adc
push
xchg
sti
sub
mov
outsl
ja
daa
mov
scas
call
jbe
jg
test
cld
int
adc
ljmp
mov
lea
stc
lds
pop
gs
test
cmp
add
push
pop
adc
fsubl
leave
in
push
pop
mov
mov
pop
inc
mov
dec
inc
and
popa
mov
fst
in
sbb
jmp
mov
cltd
mov
jg
mov
shll
popf
orb
in
pop
inc
xchg
mov
push
xchg
loop
push
mov
add
dec
adc
outsl
push
stos
mov
mov
jae
push
pop
fxch
pop
and
in
cli
mov
mov
push
xlat
mov
push
jle
sub
mov
pop
dec
adcb
dec
inc
adc
ret
loopne
clc
out
mov
xor
and
xchg
xchg
jmp
sarl
mov
js
and
pop
xchg
call
xchg
pusha
jns
je
fmulp
sbb
jle
sbb
addr16
add
pop
lock
sub
cld
and
mov
push
jle
or
inc
push
mov
cmc
stos
jno
jg
jmp
addr16
cmp
mov
sbb
call
aad
rol
scas
nop
out
in
insl
mov
adc
cmp
movsb
loope
jg
in
repnz
es
nop
cmpsb
mov
repz
or
pop
pop
mov
add
pop
mov
int
lahf
jae
sbb
xchg
addr16
lea
scas
push
cmc
mov
add
cld
jo
sub
add
inc
sbb
insl
xor
pusha
lock
mov
adc
add
cs
cmp
les
mov
dec
push
fdivrs
cli
or
rcl
xchg
push
lea
outsl
and
stos
cmp
imul
inc
pop
cmpsb
pop
sbb
enter
mov
xor
adc
sub
or
mov
xor
pop
movsb
and
scas
mov
and
inc
mov
insb
ljmp
es
dec
into
mov
rcrl
sub
sti
popa
shll
mov
sub
test
mov
addr16
xchg
and
xchg
xchg
call
jmp
sub
js
outsb
in
add
fwait
ds
inc
cmpsl
or
jae
imul
pop
sub
rorb
int3
je
mov
mov
xor
jg
das
fstpt
in
scas
shrb
addr16
mov
mov
arpl
hlt
adc
xor
adc
inc
pop
loop
ficoml
jnp
orb
xchg
or
rcrb
in
ljmp
movsb
or
pushf
int3
scas
arpl
das
mov
inc
xchg
or
dec
pop
mov
lcall
rorl
stos
sub
inc
mov
xchg
sbb
mov
shll
stos
dec
int
mov
add
mov
out
test
dec
fnstsw
mov
cltd
xor
xchg
cmp
int3
xor
cmp
xchg
bound
lahf
push
xchg
dec
dec
jle
fistl
stos
push
orl
push
shlb
cmc
sub
cs
cmp
addr16
dec
test
lds
inc
adc
cmp
shr
sbb
outsl
jno
out
inc
xchg
jge
loope
push
icebp
repnz
jno
inc
mov
sbb
mov
popf
rol
ljmp
push
push
in
cmpsb
dec
jae
test
js
test
sub
push
dec
mov
sub
jbe
rcrb
xor
shlb
in
adc
mov
and
jmp
stos
mov
mov
add
imul
clc
cmp
xor
jo
int
out
xchg
and
aas
mov
push
jo
pop
adc
xorl
orb
imul
rolb
sbb
pop
mov
or
int3
imul
push
js
xlat
fwait
push
mov
mov
or
popa
or
outsb
or
and
into
sbb
sbb
adc
cld
sbb
sbb
lods
dec
pushf
cmp
mov
cmpb
decb
pop
sbb
pop
cli
bound
test
lcall
js
ds
pop
movsl
addr16
inc
push
fnstcw
mov
repz
lahf
sbb
outsb
jp
mov
int
lock
push
mov
loopne
mov
sub
adcb
je
push
inc
daa
test
fcomps
test
jns
test
lods
or
fcmovbe
pop
sahf
dec
or
into
std
xchg
pop
push
jg
xchg
push
mov
fistl
aas
jp
iret
lods
add
lds
push
push
int3
jns
xchg
arpl
adc
jmp
adc
inc
inc
jp
iret
pusha
inc
das
push
mov
out
lock
lea
daa
or
ret
mov
xor
pop
lret
outsb
push
decl
popa
movsb
push
lods
jl
push
aaa
ja
inc
cmpsb
std
dec
lret
pop
inc
sbb
je
cwtl
xchg
inc
push
jmp
xchg
mov
shl
mov
ja
ror
fwait
leave
fcoml
sub
into
cwtl
ret
sbb
sarb
jne
in
cmp
mov
dec
mov
loopne
cmp
ljmp
les
or
mov
lahf
push
xchg
out
repnz
push
xchg
pop
je
pop
sahf
pop
nop
insb
cmp
dec
mov
mov
xchg
test
xor
pushf
call
sti
mov
push
mov
rcrl
cwtl
popa
fdivl
dec
ret
ss
pop
xlat
or
jbe
dec
push
imul
add
jg
pop
push
jle
subb
cld
sub
dec
push
pop
pop
cld
pop
and
adc
mov
mov
sub
dec
mov
int3
stc
stc
lock
lods
addb
jnp
xchg
iret
orl
dec
or
sahf
adc
and
jp
sub
add
or
stc
mov
jle
jbe
incl
jp
das
mov
mov
push
incb
mov
sti
and
inc
nop
xchg
cmp
and
jl
jg
mov
dec
dec
mov
pushf
data16
or
mov
fidivrl
test
arpl
dec
and
ljmp
sahf
add
setae
push
add
inc
testl
enter
cmp
es
pop
ss
test
xor
cld
data16
jae
mov
fnstenv
adc
addr16
push
dec
sub
push
xor
int3
lret
xchg
pop
jno
xor
paddusb
or
in
ss
ljmp
adc
sub
icebp
popa
xor
loopne
mov
mov
cmp
xor
and
scas
insb
wrmsr
insl
xchg
les
dec
ror
es
mov
xlat
iret
inc
xor
cs
sub
sti
mov
nop
mov
mov
test
shrl
xchg
cmp
sbb
or
fs
add
call
xchg
cltd
jp
mov
insb
pop
dec
xor
pushf
fucomp
inc
sbb
dec
push
cmp
lock
or
shlb
aaa
push
call
pop
in
sbb
cmpsb
push
jmp
scas
sahf
popf
stos
pop
shr
out
insb
pop
ret
int3
or
jg
enter
scas
pusha
nop
enter
pop
cmp
repnz
enter
xor
ds
inc
xchg
clc
pop
mov
add
or
loop
add
adc
enter
pop
inc
out
sbb
pushf
ds
add
xlat
xlat
fstpl
mov
mov
das
lods
in
pop
mov
or
inc
sub
pop
push
arpl
and
rcrl
push
sub
mov
sub
mov
gs
stos
adc
cmpsb
fdivl
add
dec
xlat
sbb
sbb
pop
and
jecxz
ljmp
lret
pop
out
pop
pop
or
mov
jnp
adc
inc
aaa
inc
test
jle
jle
pop
ret
mov
lcall
inc
out
push
mov
nop
sbb
jmp
sbb
push
mov
cli
je
jb
jmp
sub
clc
test
lret
ret
mov
push
sub
mov
inc
cmp
ljmp
test
loopne
dec
push
into
pop
push
ss
mov
imul
adc
test
scas
xchg
cmp
dec
mov
xor
jnp
stc
cmp
in
test
nop
test
push
shl
clc
mov
stc
mov
or
addb
inc
outsb
push
pop
clc
out
mov
pop
ja
ja
shlb
lds
jnp
ret
add
sbb
pop
dec
in
mov
outsl
mov
rol
xor
and
dec
cli
rcrl
pop
cmpsl
and
sub
outsl
les
sahf
sbb
adc
or
mov
xor
daa
add
vpmacsdqh
ret
imul
idiv
popa
mov
mov
imul
and
sub
pop
xchg
add
es
and
lea
jmp
sub
ret
mov
pop
rorb
and
sub
clc
push
lods
xor
aas
jmp
loop
outsl
dec
cmp
mov
test
xlat
sbb
jge
xchg
lea
insl
and
add
mov
xadd
cwtl
jmp
dec
fldl2e
int3
outsb
movl
insb
xor
shl
cli
ljmp
stos
jecxz
jl
inc
scas
xchg
cmp
lret
addr16
pop
mov
mov
rcrl
repnz
sbb
pop
ja
adc
inc
mov
jmp
aad
stos
dec
add
stos
insb
jp
shll
pop
or
mov
mov
pop
call
mov
rolb
add
shrl
xor
fidivrs
bound
and
loop
mov
outsb
das
or
sahf
xchg
push
aaa
sub
pop
stos
lds
cmpsl
adc
or
sub
scas
pop
aas
dec
ret
sbb
lods
cld
inc
test
sbb
and
push
xchg
fcmovnbe
ljmp
cmpsl
addl
pusha
and
push
push
and
insb
fstps
xchg
xchg
scas
mov
cmp
sbb
adc
es
inc
pop
or
xor
cwtl
mov
or
insb
mov
jo
cli
xchg
push
pop
iret
mov
aam
pop
imul
jle
and
mov
pusha
xchg
cmc
scas
xor
lahf
xchg
aaa
mov
arpl
pop
mov
push
mov
mov
mov
mov
mov
jl
fwait
sahf
testl
jns
xchg
mov
pop
xchg
lret
add
push
mov
adcl
adc
popf
cmc
stos
cmc
cmp
pop
mov
dec
cmc
sub
mul
mov
xchg
lret
xor
jae
push
scas
jno
loopne
mov
mov
dec
or
sbb
pop
mov
adc
push
mov
lea
fucom
je
cwtl
rol
add
pop
adcl
sahf
or
sti
jno
add
aad
jge
and
ljmp
and
cmp
jp
mov
daa
cwtl
aaa
dec
mov
or
les
fbld
and
inc
daa
shrb
fs
xchg
dec
out
and
fwait
outsl
xchg
or
incb
loopne
orb
sub
dec
pop
push
and
lds
lcall
aas
pop
or
inc
cmp
hlt
or
xchg
lods
aam
xor
xchg
imul
xchg
mov
mov
mov
andb
les
xor
adc
and
lret
cmp
fistpll
xchg
push
test
sbb
cmpb
test
jo
in
xchg
add
movsl
out
js
ja
arpl
sub
movaps
pusha
push
jmp
pop
mov
nop
xchg
sti
ds
jle
jno
sbb
fcomip
cli
pop
mov
pop
in
cs
lea
jmp
jg
jmp
xor
xchg
cmc
es
mov
pusha
bound
mov
call
jle
rcl
sbb
cmp
push
lret
nop
sahf
mov
std
inc
push
push
jbe
dec
rorl
pushf
push
lret
cmp
es
test
adc
in
inc
mov
mov
pop
lret
arpl
rorl
lcall
stc
aam
decb
outsb
ljmp
mull
xchg
lods
addl
sarl
aas
push
inc
lock
mov
inc
popa
cltd
mov
sbb
loop
js
or
es
mov
pop
jne
xchg
mov
push
dec
add
xor
call
mov
xor
cwtl
lret
stos
js
fdivs
dec
add
cwtl
adc
pushf
inc
out
jo
std
dec
cmpsb
pop
cmp
nop
adc
push
mov
movsl
in
lea
adc
rolb
xchg
inc
sti
lea
pusha
mov
pop
ja
jp
fidivrl
sbb
in
or
pop
movl
xchg
jp
cmpsl
mov
mov
mov
imul
jp
add
pusha
or
mov
flds
nop
mov
dec
bound
mov
mov
jbe
shll
fstpt
addr16
xor
mov
jnp
mov
and
push
push
and
jmp
shl
lds
mov
addl
stc
andb
pop
mov
pusha
push
gs
mov
fstpt
lret
cmc
aad
or
sbb
jno
call
push
mov
cld
adc
adc
mov
in
and
sub
jne
cld
lahf
pop
add
or
jl
jne
mov
scas
cmp
je
movsb
sub
int
sbb
clc
bound
or
ret
add
and
stos
es
mov
dec
jnp
xor
cltd
hlt
dec
cld
push
sub
adc
jne
outsl
lods
repz
sbb
or
icebp
push
pop
mov
bound
cmp
call
popf
adc
loop
into
xchg
add
adcl
rcrl
xchg
lods
lods
add
out
fxch
xchg
mov
hlt
in
icebp
stos
test
and
aaa
repz
das
pop
icebp
pop
xor
ret
jecxz
cltd
repnz
test
fnstcw
nop
pop
in
sub
push
in
mov
xchg
repz
pop
mov
pop
lahf
mov
inc
rorb
mov
cmc
mov
out
cmpsl
jecxz
mov
mov
mov
and
cmpsb
addr16
mov
inc
xchg
jl
pop
inc
jno
sti
add
jl
xor
adc
imul
imul
pop
push
jbe
les
cwtl
xchg
std
pop
xchg
outsb
xor
and
scas
in
sub
inc
jmp
test
sbb
idivb
push
inc
xor
scas
mov
aas
push
sbb
fstps
sub
aam
fistpl
xor
push
ja
loop
gs
xchg
dec
lret
ss
and
or
loope
cli
and
es
jmp
stos
pop
mov
add
hlt
add
mov
out
xor
adc
imul
fs
mov
mov
stos
push
loop
dec
or
test
xchg
stc
mov
and
lds
pop
cmpsl
jbe
lret
fs
mov
add
psllq
jb
mov
repz
mov
pop
int
adc
dec
or
and
mov
in
lea
push
xor
cmc
push
jle
in
jmp
adc
fstpl
std
add
pop
cmpsb
int
push
mov
call
adc
call
adcl
in
hlt
std
pusha
push
sti
mov
xor
iret
movl
loope
loope
fcmovu
xchg
or
fwait
icebp
xor
jmp
adc
rcrb
rcl
mov
jns
lods
lock
sub
incl
sub
ds
xlat
push
das
movsb
jbe
push
inc
pop
movsb
mov
out
add
loopne
push
cs
je
jp
std
enter
shll
imulb
leave
push
add
orb
mov
cmpsb
cs
call
aaa
xchg
popf
push
fcomps
mov
pop
mov
in
push
lahf
jno
scas
out
loope
jne
in
test
shll
mov
sub
cmpsb
push
xchg
ret
adc
pop
cmp
pop
fadd
push
cmp
popf
push
push
cltd
add
push
mov
inc
cmp
sub
movsb
jae
adc
movsb
pop
pop
cmp
or
sbb
lock
jo
push
movntq
pop
pop
shrl
push
ja
aam
or
lcall
pop
sti
xchg
and
lods
xorb
shll
inc
sbb
xchg
stos
cmp
pop
xchg
test
jp
je
pop
in
int
jae
bound
mov
xchg
mov
out
xchg
ja
sub
mov
dec
add
or
jb
fwait
adc
gs
negb
xchg
xchg
or
jbe
xor
pop
sub
ret
adc
jnp
pushf
sbbb
mov
outsb
jo
test
shll
testl
int3
ja
sbb
pop
jmp
adc
into
inc
mov
mov
cli
and
add
xor
or
mov
and
push
jp
mov
dec
mov
aaa
mov
lds
mov
lock
pop
push
adc
loopne
sbb
imul
pop
stos
call
sbb
dec
les
sahf
iret
push
mov
in
es
jl
jbe
push
mov
push
push
fisubl
inc
mov
and
cmc
or
mov
smsw
testl
test
mov
repz
add
ss
lds
xchg
pop
cmp
mov
push
loop
mov
xchg
testl
arpl
pop
imul
rclb
mov
orb
xchg
fmull
pop
cmp
jl
lods
addl
xor
out
jp
xor
sbb
cli
push
mov
xor
pop
sbb
xorb
jl
fwait
cmp
pop
sbb
sbb
sub
and
add
push
xchg
test
repz
inc
shl
adc
mov
std
cmp
add
sub
push
fdivr
leave
leave
mov
jmp
cmp
js
lods
std
aas
aam
mov
cmp
fs
imul
xor
and
mov
jne
aas
push
jo
push
sbb
pop
roll
and
test
frstor
insl
movl
testb
mov
xchg
xchg
pop
dec
sub
sbb
or
clc
adc
fldcw
fs
hlt
test
out
lea
cmovg
mov
adc
jno
mov
jmp
arpl
notb
les
push
push
fcoml
xchg
mov
and
rcrl
aaa
adc
shlb
jmp
mov
out
push
xor
xor
call
scas
mov
and
xor
sbb
pop
mov
lods
mov
and
in
icebp
or
cli
sub
mov
push
repnz
push
pop
decl
cmp
inc
jo
loope
insb
rcl
mov
pop
leave
or
loopne
mov
cltd
test
adc
xchg
mov
adc
cmp
cmpl
loop
cmpsl
outsb
adc
cmc
arpl
push
cmp
add
xor
and
dec
js
xchg
test
movsl
push
ljmp
ret
push
popf
mov
sbb
outsl
add
add
insl
fcmovnb
fcomps
daa
js
in
dec
cmpsb
and
dec
jno
or
inc
and
xbegin
sub
jns
test
arpl
insl
mov
sbb
or
mov
aam
icebp
hlt
dec
aas
mov
lds
jge
mov
jmp
dec
notl
xchg
jne
and
insb
cmp
mov
xor
jle
ja
clc
xlat
pop
aaa
and
and
test
shll
mov
ljmp
jb
scas
out
ja
lds
imul
fs
lods
fcoml
mov
hlt
xchg
insl
lahf
test
in
fsubrp
je
xor
sbb
inc
hlt
cmp
and
mov
aaa
ret
dec
ja
out
ljmp
mov
xor
pop
arpl
jp
push
sub
pop
sbb
push
in
test
mov
dec
jmp
push
or
mov
xchg
arpl
shrb
aaa
fs
jecxz
les
dec
sbb
mov
jmp
xor
es
testl
inc
adc
add
cvtdq2ps
test
arpl
inc
add
dec
mov
inc
cmp
add
inc
push
test
cmpsl
std
lahf
sbb
inc
jo
xchg
dec
sub
aad
fs
repnz
loope
jns
sbb
dec
leave
add
jecxz
xchg
xor
imul
jmp
ds
adc
jb
sti
scas
mov
mov
jp
push
stos
mov
dec
mov
imul
push
clc
pusha
add
inc
icebp
addl
bound
ds
xchg
fwait
jb
xchg
add
xchg
pusha
cmp
pop
jo
mov
mov
out
mov
into
xchg
arpl
stos
enterw
insb
jg
mov
dec
loopne
sub
mov
test
bound
pop
jle
aad
mov
jmp
arpl
or
cld
mov
xor
aas
cs
mov
or
push
es
incb
or
lods
faddl
and
cmp
dec
rorl
imul
mov
xor
call
aad
dec
xor
rolb
lret
push
cmpsb
jl
mov
jmp
movsl
jne
jp
sahf
cmp
fcomps
mov
dec
stos
jp
xor
faddl
push
sub
inc
hlt
pavgb
ret
iret
push
or
lods
pusha
mov
fwait
dec
jp
push
stc
cmpsb
dec
in
shl
test
pusha
rcrb
mov
rcll
cmp
les
dec
out
mov
pop
movsb
pinsrw
sahf
imul
gs
xor
inc
nop
cmp
push
rcll
stos
popf
mov
cmc
mov
pop
pusha
lock
les
fiaddl
rol
mov
mov
in
sub
or
test
repz
das
cmp
sub
push
loopne
xchg
xlat
push
pop
or
or
pop
sub
or
sub
xchg
cmp
out
dec
loop
lds
aad
and
or
pop
cmpsl
repnz
cmc
lret
outsb
cs
cmp
cmp
and
pop
aas
out
adc
dec
sti
cli
jmp
fwait
xchg
pop
dec
sbb
or
in
xor
xor
push
jecxz
cmp
hlt
xor
or
hlt
enter
pusha
sbb
push
aaa
and
enter
hlt
loope
sti
shll
mov
fsubl
and
cmp
mov
push
mov
outsb
and
sbb
mov
arpl
ja
leave
imul
mov
pop
xchg
mov
cld
repz
pop
mov
in
lds
mov
lret
xor
mov
rcl
lret
mov
pushf
xor
xor
seto
or
fidivs
imul
cmpsb
out
mov
xlat
push
xor
pop
ficomps
xchg
jno
out
xchg
out
enter
ja
stos
std
jno
jmp
xor
cmp
adc
mov
movq
or
sbb
into
adc
mov
aam
mov
mov
repnz
mov
mov
jecxz
sub
pop
test
fucom
jnp
mov
daa
outsl
push
mul
pop
cmpsl
int3
out
xchg
rclw
mov
out
pop
adcb
popa
push
xchg
add
addb
negl
xchg
mov
mov
xchg
loopne
rorl
jecxz
jbe
sub
push
jle
xchg
gs
loopne
mov
jno
sarl
ljmp
pop
mov
in
inc
mov
jns
and
sbb
sbb
xlat
iret
cltd
in
mov
insb
jbe
mov
fsubs
je
cwtl
sbb
jnp
pop
push
mov
fmulp
insl
movsb
clc
sbbl
ret
ret
fldl
and
jge
jb
ret
pop
ret
add
jg
add
data16
xchg
and
xorb
dec
push
out
popf
outsb
cwtl
stos
lea
sti
fwait
adc
rol
or
mov
lahf
or
dec
enter
test
or
and
dec
mov
sub
mov
repz
shlb
adc
push
jno
dec
out
out
jnp
push
je
jg
mov
dec
cmp
or
adc
mov
insl
inc
cltd
arpl
pop
hlt
divb
mov
daa
jle
jg
inc
out
mov
adc
mov
push
sti
jno
xchg
shrl
sti
pop
bound
icebp
sbb
xchg
push
dec
and
ror
out
in
or
fsubs
add
jne
jmp
sbb
dec
sub
xchg
cmc
add
gs
fucomp
hlt
mov
mov
out
cmp
aad
into
jno
jle
das
inc
xchg
popa
cli
les
and
loop
ret
in
sub
sti
ret
and
lods
push
pop
push
scas
mov
rcrb
movsb
adc
inc
xchg
call
in
loope
imul
xchg
popl
popa
shll
cmp
insb
dec
addr16
mov
ljmp
addr16
ljmp
js
popf
lret
in
shlb
xchg
push
testl
fimuls
mov
push
fimull
pop
xchg
je
jp
mov
mov
and
sti
arpl
add
mov
std
sbb
sub
lock
mov
jnp
jbe
imul
mov
sub
jecxz
adc
sbb
xchg
jns
arpl
or
xchg
add
mov
sbb
dec
push
and
or
pop
jl
lcall
mov
push
jmp
jnp
mov
cmp
aam
out
xor
xor
fnstcw
jo
mov
jp
mov
test
add
lea
addr16
sbb
nop
std
imul
cmpsb
rol
xchg
jg
repz
loop
push
inc
mov
cld
ficoml
pusha
fnsave
add
je
hlt
xchg
jmp
mov
in
and
notl
adc
mov
or
cmp
sbb
adc
mov
dec
or
mov
sbb
in
mov
pop
mov
jmp
pushf
mov
mov
lcall
mov
and
xchg
scas
call
xor
outsl
jae
push
mov
xchg
cltd
iret
xchg
xchg
pusha
cwtl
jmp
cmp
imul
sbb
cmp
pop
lds
adc
jp
push
orl
push
mov
pusha
xor
dec
ret
ja
gs
in
and
lock
push
mov
jbe
arpl
push
insl
fmuls
cmp
es
insl
add
mov
test
jge
mov
lcall
mov
xor
mov
imul
pop
lahf
xor
in
rclb
push
jmp
mov
cmp
das
mov
icebp
int3
jl
rorb
arpl
lret
mov
cmpl
loop
jbe
data16
xorl
and
shr
in
ja
js
xchg
mov
xor
inc
and
testl
inc
or
movsb
pop
mov
into
jecxz
xchg
nop
pop
gs
inc
psrlq
pop
push
loop
sub
mov
xor
pop
push
or
lea
hlt
xor
cmp
ds
pop
mov
fdivrs
pushf
js
shr
aas
aam
js
pushf
lea
out
dec
mov
push
mov
adc
mov
je
lret
lock
xchg
flds
push
lods
mov
push
and
ss
pop
stos
or
stos
daa
divb
xlat
mov
jno
xor
call
cmp
test
mov
or
insb
adc
lea
icebp
in
xchg
mov
fildl
out
pop
stos
push
les
rclb
les
jmp
cmp
cmp
add
faddp
les
sbb
repz
mov
inc
les
sbb
dec
out
fsubs
push
adc
inc
and
popf
cmp
cmp
mov
lea
movsb
dec
sub
in
loop
sub
test
push
dec
xchg
cmp
enter
movsb
add
mov
fcmovnbe
dec
movnti
lcall
xlat
bound
ret
inc
das
push
adc
fildl
sbb
push
std
cmc
xor
xchg
ret
adc
or
mov
mov
lret
xchg
jle
pop
push
adc
sub
sub
sbb
sub
aam
loop
push
test
mov
daa
ficomps
jle
in
jns
cmpsb
cmpsb
xchg
cli
leave
push
sahf
mov
xchg
sbb
bound
mov
add
add
insb
aad
int
es
sbb
inc
or
xchg
les
imul
cmpsl
iret
dec
jae
sbb
dec
scas
mov
shrb
mov
jo
push
test
mov
lahf
iret
mov
inc
sbb
iret
jne
xor
cwtl
fsubrs
sbb
mov
sti
pop
lcall
idivb
orl
divl
pop
mulb
mov
push
mov
aaa
lods
lock
pop
mov
nop
rorb
fs
adc
dec
jl
dec
or
push
jp
ret
jns
sbbl
and
xor
push
adc
mov
xchg
sbb
cmp
inc
pop
adc
push
cwtl
les
iret
and
mov
out
jl
sar
sub
mov
aas
aam
pop
sbb
add
es
cltd
lock
gs
js
xor
test
xchg
ficompl
cltd
push
pop
iret
negb
adc
add
mov
in
test
fdivrl
adc
out
mov
dec
cmpsl
das
cmp
mov
add
insl
mov
push
mov
mov
jno
adc
jge
pop
push
aam
loop
cmp
das
mov
in
int3
push
sub
outsl
jbe
pop
mov
inc
and
xor
or
push
call
repnz
neg
xchg
mov
popf
outsl
add
jnp
jle,pt
xchg
xchg
test
pop
sbb
jo
mov
jae
mov
jl
pop
rcrb
pop
outsl
out
dec
rcl
jb
push
sbb
test
xchg
hlt
shrb
mov
sub
insl
push
clc
pusha
cwtl
pop
aas
dec
pop
sbb
pop
popa
jb
ds
xchg
sub
mov
shrl
inc
shll
and
test
ja
jl
popf
mov
sub
jo
sbb
movsb
xchg
xor
xlat
jge
enter
fldz
jb
jbe
int3
out
mov
outsb
push
pop
or
cld
pmulhuw
dec
pop
jmp
popa
mul
push
ja
ja
fsub
call
fwait
push
cld
jbe
jge
lods
stos
ljmp
test
lods
js
cwtl
scas
icebp
mov
aam
jbe
mov
out
shlb
push
leave
mov
pop
test
or
or
mov
jns,pn
inc
out
add
xor
shll
cmp
xchg
dec
ror
push
icebp
imul
dec
sub
or
add
adc
shl
mov
inc
arpl
in
int
fmul
jmp
jge
loopne
inc
mov
shl
sbb
mov
add
in
pop
pusha
popa
cwtl
push
jae
ss
js
movsb
aam
ficoml
movsb
xor
aas
pop
add
inc
pop
ljmp
pop
and
inc
and
xchg
addr16
lds
insl
xor
and
lret
jg
stc
cmp
aas
aam
stc
ret
stc
call
ja
cmp
dec
mov
fists
popf
inc
cld
push
pop
les
xchg
fidivrs
xlat
sbbb
xchg
sbb
lcall
roll
and
call
insl
or
push
inc
cmp
loope
mov
arpl
cs
stos
push
jb
popa
clc
and
shlb
xor
push
add
inc
lds
sub
mov
jg
out
xchg
push
push
mov
mov
fmul
enter
sti
jg
fs
ljmp
pop
std
into
clc
in
hlt
dec
aaa
xor
insb
test
daa
ret
popa
add
fs
pushf
outsb
adc
pushf
into
or
mov
enter
mov
popa
clc
inc
sbb
sbb
jmp
and
mov
sti
mov
movsl
dec
dec
aad
out
hlt
cld
sub
scas
insb
sub
shll
and
into
rorl
mov
jecxz
out
hlt
cmovg
inc
push
loope
jg
fmuls
jg
ret
loopne
jno
fdivl
mov
enter
mov
lds
xor
add
das
test
out
rcl
sbb
iret
int3
add
les
movl
cmpb
cli
insb
mov
outsl
pusha
rol
jbe
dec
xchg
popa
iret
push
jl
or
aad
cs
mov
mov
int3
mov
shlb
sbb
add
shrb
mov
adc
lea
push
pusha
nop
lret
jg
js
movsl
sbb
or
xor
dec
jg
lods
cmp
fs
cmpsl
ja
repnz
es
hlt
jb
test
cmp
shll
out
xor
aad
orl
loop
sbb
insl
pop
mov
or
mov
jb
out
cmp
pop
subb
pop
xchg
pop
xor
insb
or
adc
lea
cmp
mov
es
iret
pop
fs
inc
mov
mov
mov
cmp
xlat
test
sub
xchg
adc
stc
lock
inc
iret
jb
adc
mov
push
jge
xor
popa
cmpb
push
inc
imulb
pusha
xchg
pop
pop
sbb
sub
icebp
movsb
in
xchg
pop
in
loop
push
lods
dec
out
je
ds
mov
outsb
adc
cmp
cltd
ret
out
sub
cmpsb
and
sub
or
add
adc
ljmp
dec
cmp
loop
into
pop
push
fistps
add
dec
mov
mov
test
xor
imul
or
test
in
push
js
jle
stos
cli
inc
push
adc
in
or
adc
mov
push
lds
cmc
cmp
loop
negl
jge
imul
jl
inc
jno
in
in
in
xchg
outsb
mov
ret
xchg
mov
call
jg
jno
divb
stc
subb
jl
loop
jmp
aam
int
cli
mov
push
add
bound
push
mov
fisubrs
lahf
pop
adc
adc
jbe
cmp
mov
push
ss
mov
mov
popa
inc
imul
es
dec
sub
or
movl
sbb
and
jns
mov
int3
add
call
pop
jnp
scas
lock
and
bound
ljmp
psubsb
into
icebp
or
mov
or
pop
add
push
daa
cld
mov
push
je
dec
loope
push
mov
addr16
das
mov
xchg
out
je
xor
clc
mov
mov
loope
mov
fsubrp
stos
lds
push
nop
jns
scas
je
inc
insb
xchg
pusha
ljmp
aad
jg
cmp
xlat
lods
xor
daa
addl
popa
mov
pop
push
push
les
aaa
mov
hlt
push
fdecstp
das
imul
inc
test
xchg
pop
mov
pusha
xchg
pop
imul
fadd
add
call
xor
push
adc
das
mov
mov
mov
mov
add
ret
mov
jno
mov
aam
or
into
aad
cmpsl
repz
fistl
bound
movsl
popa
lahf
sarl
ss
add
inc
dec
shll
xor
int3
fistl
incl
pop
or
dec
cmp
pop
mov
filds
imul
xor
xor
sub
aas
das
cmp
push
dec
xchg
fxch
scas
roll
xchg
cwtl
ds
xchg
sahf
push
push
mov
xchg
xchg
scas
mov
cli
lods
aaa
mov
gs
inc
jmp
xchg
orb
xchg
test
fsubrl
out
pop
dec
pop
pop
sub
enter
mov
adc
jp
xchg
dec
push
jmp
adc
sbb
add
aaa
loop
dec
xor
mov
sbb
push
sub
push
adc
cmpsb
popa
mov
in
insl
loopne
mov
sub
add
movsl
push
dec
pop
lods
dec
and
fwait
or
ja
rorb
out
aaa
add
jp
inc
ret
dec
cmp
mov
xlat
inc
int3
or
jne
sbb
ss
int
pop
shrb
imul
and
lret
cld
shlb
cmp
outsl
clc
pop
gs
xor
mov
mov
scas
int3
jge
lds
or
fidivrl
xchg
pop
mov
outsb
mov
aas
ret
lcallw
push
jbe
xchg
les
inc
lahf
mov
or
or
in
jns
stos
scas
xor
lock
scas
popa
das
mov
dec
sti
lcall
test
push
jb
dec
enter
sbb
or
mov
push
dec
inc
out
test
mov
xchg
ds
movb
adc
inc
loope
fucomi
mov
jbe
inc
add
sbb
or
cmp
gs
mov
mov
sbb
repz
aaa
add
add
lret
xor
fsub
sbb
repz
and
jle
jecxz
mov
loop
xor
pusha
ficoml
push
andb
push
and
in
adc
lret
jae
test
int3
cs
nop
lods
stc
dec
cmpsb
lods
mov
stc
inc
pop
xor
outsb
fsub
in
and
inc
popa
xor
mov
inc
popf
ret
test
gs
xor
addl
xor
add
stc
aad
icebp
mov
xor
gs
xchg
mov
call
push
jle
int
fstpt
mov
sub
cmp
shr
and
fnstenv
imul
jo
pop
or
adc
jg
movsb
repnz
std
shl
or
adcb
sub
in
gs
xlat
scas
das
cwtl
sahf
call
outsb
mov
inc
jecxz
inc
mov
test
cmp
scas
dec
sub
or
data16
cs
leave
xchg
adc
movsb
dec
pop
ljmp
sti
push
test
mulb
sub
imul
inc
movsb
dec
cli
mov
and
aas
andb
xor
lret
jle
lods
inc
inc
fcomps
sub
cmc
push
lret
je,pn
pushf
dec
clc
pop
mov
rcl
aad
std
popa
cmc
aaa
outsb
enter
adc
xor
aas
insb
mov
mov
mov
pop
xchg
or
mov
lods
mov
jge
pop
xlat
scas
push
cmpsl
stos
cmp
mov
xchg
incl
ss
iret
repnz
into
push
insb
dec
fistpll
cmp
int
repnz
std
scas
xor
std
cmp
cwtl
adc
pop
rolb
jmp
xor
call
ljmp
call
je
lret
jmp
and
aaa
mov
pop
fiadds
mov
push
inc
or
sbb
xor
mov
addr16
lret
and
adcb
frstor
dec
adc
outsl
push
sbb
mov
jb
inc
repz
int3
mov
cmp
xor
cli
jp
mov
sub
movsb
stos
jecxz
jmp
lds
sub
int3
cmp
mov
pop
adc
inc
cmpsl
cmp
or
jo
inc
clc
mov
out
data16
sti
loop
add
movsb
in
xchg
push
or
call
ljmp
sub
push
pop
lock
bound
mov
xor
call
sbb
and
mov
cld
add
mov
dec
xor
es
je
cmp
jle
scas
mov
popa
es
and
fisubrl
subl
mov
enter
movsb
jle
xor
pop
sahf
sbb
call
and
sahf
aam
mov
bound
shll
jae
and
ljmp
mov
movsb
fcmovnbe
sub
imul
mov
je
dec
jmp
mov
lahf
fbstp
fsubl
subb
xchg
jp
adc
sbb
rcll
mov
in
repnz
mov
pop
subl
cmpsl
pop
shlb
xchg
fmull
stos
cld
and
aaa
or
fisttpl
imul
imul
lret
mov
ret
push
mov
filds
xlat
iret
in
adc
push
jle
mov
inc
movsl
xor
int3
and
cmp
xchg
jl
mov
arpl
das
mov
and
js
cmp
cmpsb
ficoml
jbe
cmp
dec
mov
xor
push
sbb
sub
ret
in
xchg
stos
aas
or
add
test
cmp
adc
xchg
scas
jp
adc
sbb
ljmp
mov
sarb
test
push
out
fcmovne
adc
fdivrl
xor
fcoml
nop
insl
jecxz
fiadds
add
fisubrl
or
adc
adc
fcmovbe
inc
lret
push
call
mov
sbb
mov
xor
insl
fsubs
ds
jae
dec
mov
and
pushf
int
minps
mov
xchg
adc
adc
outsb
inc
dec
test
rcrb
pop
sub
in
dec
cltd
dec
fwait
rcrl
mov
cmp
addl
repnz
pop
ljmp
sbb
movsl
add
sub
jecxz
mov
imul
stc
dec
leave
aaa
movsl
sbb
negl
pop
call
adc
mov
xchg
out
psubq
lods
fnstsw
inc
hlt
ljmp
stos
pop
leave
stc
sbb
and
fdivs
jno
loop
push
lahf
in
inc
add
pusha
xor
xchg
cmpsb
xchg
int3
lcall
sbb
lcall
mov
dec
push
movb
int
loope
stos
mov
in
loopne
into
jecxz
in
loopne
push
stc
jae
sub
hlt
inc
or
and
out
cmp
push
jnp
inc
int
js
push
repnz
adc
dec
roll
rcr
fldl
mov
test
imul
dec
aas
bound
dec
jl
xor
sub
mov
xchg
push
dec
or
cmpsl
mov
jecxz
ret
or
jno
inc
loopne
add
repnz
cmpsl
or
pop
lods
stc
jp
inc
xchg
les
mov
std
add
outsb
cmp
pop
lahf
push
dec
cs
sub
repnz
enter
and
lods
outsl
xor
mov
pop
cmpsl
cmpsb
enter
cmpsb
jge
mov
out
int
cmp
add
out
in
mov
in
dec
xchg
xchg
dec
aam
sub
push
divl
int
pushf
add
mov
and
int
pop
mov
out
jae
pop
ficoms
sub
cmp
mov
movsb
push
mov
std
int3
mov
jmp
leave
xchg
mov
pop
lock
dec
cmp
mov
outsl
inc
mov
imul
adc
and
test
dec
in
rcrl
lock
sti
pop
out
stos
jle
xchg
inc
dec
inc
push
xor
into
jb
adc
mov
inc
push
mov
stos
jae
in
loopne
xchg
xchg
sub
in
mov
test
mov
cwtl
aas
xor
out
add
sub
adcb
mov
add
repnz
ret
and
sub
mov
xchg
dec
add
adc
xlat
cmc
dec
push
rorb
or
add
int
in
cltd
pop
insb
push
inc
adc
cwtl
jo
sub
mov
add
dec
repnz
push
out
mov
mov
lds
push
loopne
add
sub
popf
cli
xor
dec
mov
dec
mov
sbb
pusha
jge
xchg
cltd
and
mov
lret
frstor
int3
pop
pushf
fnstenv
in
arpl
fisubs
rcrl
scas
or
inc
sbb
jp
fdivrs
xchg
inc
dec
popl
jmp
xchg
xor
jnp
test
mov
sbb
sbb
repz
in
sub
fcmovnbe
sub
fs
xchg
fists
aaa
dec
adc
andb
pop
mov
mov
aad
popf
or
cwtl
mov
cmpsb
lret
push
xchg
mov
cmp
out
mov
inc
std
dec
or
cmp
lds
lea
adc
in
dec
ss
push
cmp
pop
andl
fldl
pop
xor
and
gs
sub
imul
pop
mov
icebp
sub
aas
jne
push
into
dec
or
mov
dec
mov
int3
js
mov
stos
sub
sahf
fs
add
xchg
fidivl
fwait
inc
dec
fbld
loopne
cltd
cmpsb
arpl
lock
lods
add
lds
jl
scas
jecxz
cs
in
mov
cmpsb
neg
stos
mov
les
ja
mov
stos
cli
call
xlat
cmp
popa
cmp
ror
in
mov
push
int
jp
inc
test
xchg
not
fildll
popa
les
nop
cmp
xor
fidivl
sub
aam
jnp
ja
daa
lcall
cmp
pop
dec
movsl
pop
in
jge
bound
inc
push
imul
and
mov
push
xchg
out
in
leave
mov
adc
addr16
sub
mov
dec
add
sbb
fwait
push
scas
xor
dec
aas
lret
cmp
pop
shrb
cmp
into
pop
outsb
das
pop
sahf
je
push
repnz
or
jge
in
rcll
jl
fisttpl
adc
popf
jecxz
into
cmpsl
iret
push
or
je
ret
jg
in
hlt
int3
add
dec
shl
jb
loopne,pt
mov
and
repz
cli
jmp
mov
std
cmp
xlat
mov
and
jl
sti
call
int3
cmp
jp
fnstsw
icebp
xor
inc
jbe
fisttps
sub
cmpsl
push
inc
xchg
jle
test
std
mov
inc
testb
mov
mov
stos
or
loope
adc
enter
dec
fiadds
out
add
dec
cmp
mov
pop
cmp
add
mov
jl
hlt
insb
mov
insb
cmp
rcll
outsl
cwtl
xorl
pop
inc
inc
mov
lret
push
shlb
in
fcompl
xorb
out
dec
out
or
out
or
sub
jmp
loope
ficomps
pushf
scas
pop
push
scas
mov
dec
test
rorb
out
mov
int
das
cltd
sbbb
xchg
rcll
mov
and
mov
dec
jl
cmp
cld
popa
sbb
ds
mov
jae
scas
dec
loop
std
mov
icebp
incl
loopne
ljmp
mov
pop
dec
ret
pop
xchg
sbb
fsubp
sbb
xchg
fisttps
push
insl
out
xor
lret
mov
loop
leave
dec
or
mov
or
sbb
shll
cmpsb
pop
sub
xchg
sbb
push
fistpl
out
dec
add
fwait
loope
sbb
mov
jno
mov
lds
in
dec
jns
insl
loop
or
std
xchg
arpl
mov
ret
push
mov
loop
or
dec
lret
and
daa
add
arpl
mov
jge
inc
jnp
insl
mov
mov
cmpsb
fcomip
sar
cli
add
insb
xchg
arpl
in
mov
cmp
jne
xchg
dec
and
adc
inc
push
das
ret
sbb
ds
idivl
out
jnp
std
pop
add
iret
std
fcompl
mov
decb
imul
push
addr16
mov
in
pop
xlat
cld
mov
loopne
push
inc
mov
sub
push
aas
lods
cmpsb
and
mov
adc
das
ds
fs
push
rol
dec
cmp
mov
movsl
jmp
or
mov
popfw
lcall
ja
mov
rclb
mov
inc
cld
fistps
scas
dec
aaa
push
pop
ror
clc
fwait
inc
pop
pop
mov
lret
push
or
aaa
xchg
mov
xor
insb
scas
shlb
jnp
cmp
mov
pop
jnp
sahf
ljmp
sub
insb
push
inc
dec
fnsave
std
xchg
rcrl
aam
push
inc
pusha
int3
inc
cmpsl
movsl
lods
in
out
mov
stc
jbe
mov
xchg
das
and
into
dec
mov
dec
pop
ret
mov
or
add
xor
cmp
mov
dec
std
inc
adc
dec
outsl
stc
enter
movsl
pop
insl
cmp
mov
pop
out
test
or
sti
jl
stos
nop
xor
xchg
js
movsb
test
mov
ljmp
xchg
fcoml
dec
adc
stos
sub
and
roll
sbb
xchg
jecxz
fdiv
rcrl
inc
and
push
aad
outsb
cmpsl
mov
cmp
sbbl
xchg
jmp
cmp
es
inc
loopne
insl
ljmp
aaa
pop
adc
testb
pop
jle
add
mov
in
outsl
ret
jmp
and
fsts
das
cltd
adc
movsl
dec
jmp
inc
sbb
mov
xchg
ret
xlat
cmpsb
or
push
inc
cmpsl
cmp
jecxz
xchg
xchg
or
or
mov
fwait
sti
adc
dec
inc
popf
enter
cmp
pop
push
shll
lock
mov
ss
aas
ret
sbb
push
cmp
sbb
mov
clc
inc
in
lds
sbbl
pop
loop
hlt
ja
xor
ss
fcmovnbe
test
mov
das
add
in
fnstsw
cmp
pusha
sbb
sub
add
xchg
jl
das
gs
lock
orl
mov
int
inc
ret
mov
inc
mul
push
mov
out
xchg
dec
lret
orb
inc
andb
aas
int3
adcb
dec
movsl
les
es
inc
dec
cmp
sbb
xchg
push
xor
jb
dec
mov
sbb
in
xorl
icebp
lods
fiaddl
pop
jmp
movsl
xchg
imul
jo
insb
sbb
add
jge
test
fnstcw
and
decl
cmc
or
dec
inc
jmp
push
xchg
loop
daa
lahf
adc
inc
push
fdivl
js
push
enter
into
and
jmp
rcll
mov
outsb
push
je
push
jmp
lret
and
cld
pop
daa
out
cs
cld
subl
shlb
xor
das
ss
les
repnz
leave
pop
adc
daa
adc
push
stos
lretw
mov
inc
repz
pushf
outsb
jle
aaa
das
inc
mov
mov
out
inc
cmp
fistps
std
inc
sbb
adc
out
add
fistl
popa
es
mov
cli
popf
and
lods
or
cmp
adc
jecxz
add
icebp
arpl
jo
and
stc
mov
xor
lds
enter
hlt
jge
in
imul
arpl
push
movsl
pop
stos
jae
loope
out
jl
faddl
test
push
lcall
mov
out
dec
dec
xchg
ret
loop
dec
pushf
insb
mov
ret
or
rcl
or
or
mov
repnz
xchg
mov
sub
mov
scas
pop
incl
add
jns
dec
cmovnp
add
adc
pop
xchg
xchg
shll
mov
inc
push
clc
or
repz
xor
add
xor
xlat
sub
loop
dec
aas
fdivp
rol
popa
sub
notb
xorl
sbb
iret
push
scas
dec
cmp
ljmp
and
test
scas
fnstenv
imul
mov
ret
jge
stos
aam
sbb
sub
xchg
jnp
jae
pushf
stos
leave
mov
push
add
aam
outsb
mov
loopne
or
cmp
jbe
enter
pop
das
mov
mov
sub
jecxz
pop
hlt
mov
mov
or
xor
ret
dec
or
sbb
jmp
out
mov
adc
mov
pop
sbb
divb
scas
push
and
stos
clc
jge
sbb
mov
test
mov
in
xor
jo
loopne
push
pop
xchg
xchg
movsb
pop
mov
data16
cmp
push
lods
jge
mov
ds
xor
dec
cmp
subl
adc
xor
sub
test
pop
cltd
pop
je
sbb
push
adc
sub
sti
dec
xchg
enter
inc
sbb
pop
xchg
movsl
dec
arpl
loope
lahf
push
cmp
iret
xchg
push
sub
fldln2
cmpsl
pop
imul
push
add
dec
add
mov
stc
inc
push
notl
xor
pop
mov
push
es
outsb
and
push
xchg
fldcw
fldt
lret
mov
push
xor
out
pop
adc
mov
call
sub
fwait
andb
push
and
pop
add
inc
cmp
xchg
jne
pop
mov
mov
mov
outsb
movsb
mov
add
inc
hlt
jmp
sub
mov
faddl
mov
cmp
imul
pop
stos
sub
sub
pop
das
out
cmc
fs
cmc
andl
lock
jns
les
push
jmp
pop
loopne
sub
fdivs
in
hlt
or
sub
adc
jg
pop
outsl
cld
fnstcw
pop
mov
xchg
fisttpl
dec
inc
fcompl
vcvttsd2si
inc
or
add
or
cmp
mov
cmp
jl
stc
xchg
cwtl
sub
rclb
pop
push
adc
lret
ret
sbb
ret
mov
pop
mov
mov
cltd
xor
sub
mov
inc
adc
mov
and
cmpsb
dec
stos
pop
adcb
movsl
and
jbe
loop
insb
leave
push
ret
in
xchg
push
add
and
gs
out
pop
mov
pcmpeqb
fldenv
xchg
mov
adc
lds
xor
mov
es
and
sbb
push
imul
inc
jmp
ss
adc
cs
adc
inc
add
xor
aam
add
and
or
lods
push
in
in
test
jg
out
push
test
jne
ds
pop
int3
cmpsb
inc
inc
jo
push
sub
and
xchg
rcl
inc
jae
test
mov
mov
xchg
sub
je
or
sbb
daa
mov
sub
loopne
mov
adc
call
xchg
push
inc
gs
fildl
xchg
mov
push
stc
and
in
or
repz
xor
push
xor
pop
in
mov
mov
push
and
xor
mov
xchg
mov
add
dec
mov
pop
or
lcall
lods
lods
adc
jle
test
mov
push
xor
call
jmp
andb
or
mov
call
jb
cmpsb
aad
sub
movsb
rolb
loopne
adc
inc
sub
push
cmpsl
es
test
sbb
cltd
insl
dec
adc
fisubl
dec
rorb
adc
or
dec
add
xchg
daa
mov
mull
enter
mov
pop
jp
sbb
jno
xchg
sub
jge
mov
push
insl
dec
sbb
jns
cmp
mov
cld
or
mov
mov
add
dec
xchg
fwait
inc
add
cmp
pop
std
add
mov
mov
test
dec
aaa
xchg
dec
sub
fldl
ljmp
test
daa
pop
mov
shlb
pminub
in
test
xor
xor
jbe
mov
ss
xchg
cmp
idivb
xor
jbe
ja
adc
add
outsl
rcl
mov
fld
or
outsb
call
dec
sub
dec
shr
cmpsb
cltd
xlat
inc
shl
mov
fnsave
xchg
test
lods
ds
xor
test
push
jmp
xor
push
pop
lahf
push
call
outsb
adc
xlat
dec
icebp
push
pop
lods
dec
and
fdivl
movsb
jns
outsl
jl
mov
cwtl
test
test
inc
cs
es
mov
push
dec
cmp
mov
jmp
lahf
pop
mov
arpl
cli
and
and
xlat
insb
insb
sbb
lock
in
cmp
push
sbb
and
test
ret
sbb
mov
mov
insl
jle
adc
in
inc
add
inc
and
insb
lods
sti
mov
das
mov
sub
pusha
jns
stos
pop
xor
jo
ret
or
xorb
jno
mov
cwtl
ret
out
andb
inc
xchg
xchg
fsts
aas
and
mov
test
lods
outsl
and
mov
int3
repnz
iret
xor
popf
mov
pop
or
or
pusha
or
xchg
sub
pop
xor
mov
add
ljmp
add
cltd
sbb
fwait
push
popa
movsl
mov
mov
jbe
xchg
jle
jmp
add
cmpsb
inc
mov
inc
jno
scas
or
dec
xchg
xor
dec
cmp
adc
mov
mov
stos
scas
mov
pushl
jne
cld
sbbb
dec
xchg
fwait
iret
mov
inc
and
scas
jg
xchg
mov
shlb
scas
js
sub
cmp
and
ret
flds
xchg
andb
std
loope
testb
jno
add
call
aad
add
ds
adc
dec
mov
mov
mov
push
xor
push
inc
mov
mov
shlb
lret
out
test
rclb
rcl
cmpsb
fwait
add
addb
or
rorl
xchg
pop
nop
shrl
inc
jg
and
xchg
add
enter
or
daa
xchg
add
aas
out
xchg
aaa
inc
jmp
sub
xor
sbb
rcrb
popf
in
lret
sbb
adcl
in
es
pop
or
in
data16
pop
add
xchg
or
xor
push
mov
xor
mov
dec
iret
sbb
dec
cmp
mov
in
clc
add
cmc
test
mov
dec
loop
imul
mov
popf
sbb
call
jl
dec
mov
push
inc
subb
repnz
jl
ret
inc
in
rcrl
insb
dec
iret
test
out
and
mov
jbe
inc
nop
out
pop
jle
xor
fsub
push
push
mov
in
nop
pop
mov
jne
ret
pop
pusha
xchg
dec
pushf
xor
sub
pop
stc
sbb
iret
cmpsl
sbb
pushf
mov
cs
fisttps
xchg
cmpsb
call
cs
pop
xor
push
push
xchg
shl
arpl
cmp
jmp
filds
cmp
data16
push
out
cmc
or
out
cmc
arpl
xor
jnp
jbe
jbe
test
jo
push
adc
mov
push
mov
popa
bound
sub
push
or
test
mov
push
mov
cli
lods
or
mov
enter
nop
in
mov
xor
push
push
mov
jmp
loope
lods
add
int3
push
bound
sbb
mov
sub
adc
jno
imulb
faddl
jb
lahf
or
leave
lods
cmp
hlt
xlat
xor
in
sbb
sbb
pop
xchg
cmp
sbb
mov
les
in
mov
inc
xchg
jmp
mov
js
or
js
jmp
dec
das
adc
push
mov
jae
mov
jo
daa
jmp
stos
rorb
push
mov
inc
cmp
push
mov
cmp
js
push
inc
fisttps
ljmp
sub
xchg
xchg
xor
aaa
popl
inc
push
addl
pop
vmovdqa
or
sti
popf
call
dec
mov
xchg
int3
shl
add
aam
outsb
jle
lods
mov
mov
fwait
push
pop
adc
xor
stc
enter
sub
es
repz
int
pop
xchg
cltd
mov
mov
nop
jns
idivl
movsl
sbb
popl
jmp
pop
incb
std
das
dec
mov
daa
mov
int3
mov
pop
pushl
js
orl
xor
lea
insb
pop
push
hlt
jae
popf
mov
push
out
xor
aaa
xor
shl
ljmp
sbb
sbb
pop
jae
test
push
pusha
adc
inc
add
mov
sbb
js
sub
sub
sbb
clc
incl
insl
cmp
pop
mov
dec
cwtl
lds
sbb
mov
jg
adc
mov
pop
sbb
pop
add
leave
jmp
cltd
arpl
inc
popa
push
imul
fistps
dec
xor
lods
imul
pcmpgtd
xor
mov
test
cmp
pusha
lret
adc
mov
repnz
int
jmp
cmp
mov
pop
mov
pop
pop
pop
jmp
pop
pop
mov
je
inc
dec
cmp
jmp
and
add
shlb
iret
mov
lret
clc
cmc
in
push
push
cli
imul
fimuls
inc
out
cmp
icebp
jbe
jp
arpl
test
mov
stos
mov
js
xor
stos
mov
sbbb
aad
fsubr
lret
bound
sbb
mov
mov
jno
mov
jae
pop
rclb
pusha
ret
cmc
movsb
lret
and
addr16
xor
inc
mov
lcall
clc
stos
push
test
pop
hlt
add
int3
adc
push
fwait
sbb
test
and
add
or
mov
fdivrs
pop
xlat
sub
xorb
or
fistpl
xchg
ret
cltd
pop
xor
enter
mov
fsubl
xor
sub
aas
js
dec
imul
mov
inc
push
push
rorl
sbb
push
dec
pusha
mov
lret
pop
scas
bound
jnp
lret
sahf
sti
adc
xchg
js
pop
lcall
mov
pop
js
or
sbb
mov
outsb
inc
cli
cli
lahf
mov
ljmp
popf
rolb
flds
mov
divl
sbb
xlat
cld
pop
pop
push
mov
or
push
jbe
out
cmp
push
insl
mov
cmp
pop
imul
out
mov
xorb
mov
push
ficomps
sub
mov
ficompl
mov
and
xor
push
sbbb
xor
lret
js
dec
fwait
inc
or
jno
cmp
cli
fcmove
mov
pop
mov
cmpsb
sar
test
clc
xor
mov
out
jns
out
shlb
sub
and
iret
or
inc
xorl
adc
mov
sub
xlat
in
fstps
cmp
and
pop
popf
lret
lret
ds
push
fisubl
xor
jmp
in
test
in
les
sbb
cmp
inc
insb
mov
or
cltd
add
pop
add
pop
mull
les
out
mov
lods
mov
inc
les
fwait
inc
add
sbb
jmp
cli
xor
aad
push
xor
ja
mov
outsb
loope
pop
sbb
adc
push
nop
popa
lcall
or
pop
mov
sahf
sub
push
mov
cmp
jno
sub
fstpl
ja
inc
sub
pop
or
into
jle
pop
cld
pop
js
mov
ljmp
bound
pop
incb
test
ficoml
rcll
test
xchg
call
dec
xorl
dec
cmp
in
aad
popa
leave
and
add
inc
scas
jnp
stos
add
punpcklbw
in
xchg
jecxz
or
aad
xor
test
loop
aaa
mov
loop
lahf
and
push
pop
or
mov
addr16
and
stc
cmp
pop
lock
lods
or
daa
das
inc
add
or
jg
add
pop
pop
ror
imul
mov
cmp
sub
outsl
mulb
negb
mov
test
cmp
adc
xor
in
es
fucom
dec
mov
cmc
push
movsl
or
pop
add
pop
xlat
test
xchg
push
pop
mov
add
pusha
cmpsb
push
scas
cmpsb
daa
inc
xor
in
or
and
pop
add
push
aad
mov
push
cld
jns
xchg
loop
sahf
adc
dec
iret
mov
mov
jae
faddl
xchg
pushf
std
pushf
and
mov
sbb
stos
xchg
addr16
jbe
outsb
repz
push
mov
aaa
inc
mov
cmpsb
icebp
add
test
rcrb
adc
test
lret
jle
mov
jge
lods
and
lods
pop
or
dec
aad
fdivrl
inc
cwtl
and
rolb
lret
fisubs
cmpsb
cmp
jecxz
mov
mov
lret
push
fmuls
inc
imulb
rclb
clc
mov
pop
mov
add
adc
adc
sub
cmc
xor
push
adc
stos
mov
addb
fwait
sub
ret
fnstcw
ss
mov
aas
lock
int3
dec
dec
pusha
or
ficoml
fisubs
mov
cmpsb
xchg
xor
sub
addb
sarb
xchg
test
inc
cwtl
push
stos
add
inc
adc
clc
mull
dec
data16
jecxz
cwtl
ss
mov
pop
lock
or
outsb
iret
sub
and
add
and
jg
addr16
ds
sahf
and
xor
jmp
cmp
sbb
mov
and
inc
inc
add
stos
fdivl
lods
dec
jg
inc
les
ds
nop
jmp
lcall
adc
pop
insl
cwtl
cltd
js
dec
sbb
mov
pminsw
add
mov
cltd
les
jg
and
pushw
fisubs
push
adc
negb
inc
rcrb
pop
mov
push
nop
fldenv
sbb
mov
movsl
add
stc
mov
dec
add
add
dec
stos
jge
test
mov
xchg
mov
mov
pop
bound
adc
xchg
jbe
pop
insl
fsubp
jmp
adc
mov
jmp
movsl
das
dec
movsb
cmp
dec
lock
imul
push
and
pop
mov
add
mov
push
mov
enter
fldcw
fwait
add
filds
cmc
mov
popf
sbb
scas
pop
rorb
jb
mov
mov
pop
and
mov
pop
push
dec
pop
jg
cld
add
or
imul
stos
or
inc
mov
pushf
outsl
and
ja
lret
dec
dec
mov
pop
adc
cwtl
push
inc
mov
adc
repnz
add
shrl
std
popw
mov
xchg
gs
leave
cwtl
fisubrs
or
nop
inc
sub
and
add
hlt
dec
jmp
jmp
lret
mov
jo
pop
pop
or
repz
push
mov
inc
divl
mov
iret
sbb
nop
dec
pop
shlb
roll
adc
aad
test
repz
add
outsb
int
lret
sarb
pop
popa
cld
loop
das
lret
xchg
xlat
mov
push
rorb
sbb
mov
push
ds
xchg
mov
push
jbe
fimull
popa
jge
xchg
mov
jns
lret
bound
sbb
fxch
stos
mov
outsb
jg
scas
ror
adc
push
popf
stos
cmp
jl
or
in
xor
dec
mov
idivb
mov
shlb
sub
add
sub
loope
movsl
outsl
call
aaa
outsb
mov
repz
sahf
inc
pop
jns
shl
xchg
pop
cmp
jns
lods
dec
pop
imul
ljmp
aas
test
push
dec
inc
inc
mov
fstps
mov
inc
or
jbe
rcl
jmp
push
loop
sub
insl
add
xchg
or
xor
adc
or
test
sub
mov
mov
dec
xchg
jle
lcall
and
hlt
xchg
stc
in
call
out
add
mov
jge
dec
fsubp
push
mov
sub
push
and
mov
arpl
in
je
lcall
push
fdiv
inc
cmp
sub
lret
add
or
imul
stos
mov
leave
push
test
sub
gs
rclb
jecxz
cltd
leave
ret
scas
xchg
fldl
add
cmp
inc
cmp
jmp
xchg
add
pop
es
pushl
ds
cmp
inc
frstor
je
jmp
jno
mov
fisttps
lret
aas
iret
sbb
dec
testl
xlat
cmpsb
push
mov
cmp
xchg
pusha
call
outsl
into
push
stos
sub
loopne
roll
js
push
add
jge
jae
ffreep
mov
pop
fidivs
pop
mov
data16
mov
insb
mov
fsub
fidivrl
push
jg
pop
sbb
movsb
cld
prefetcht0
mov
xor
aam
cmp
ret
testl
cwtl
mov
in
add
and
mov
popf
test
or
das
pop
lcall
xor
mov
in
xchg
decl
add
push
jmp
loope
push
pop
mov
jg
pop
subb
cmp
mov
mov
fs
xchg
imul
ret
pop
movsl
shr
dec
cmp
iret
je
sub
imul
sub
jl
movsl
sub
jb
dec
lea
aas
out
dec
jo
xchg
adc
sbb
and
imul
call
inc
xchg
sub
loop
jp
fdivl
test
hlt
push
testl
imul
jne
xor
mov
ficoml
call
testl
sub
sbb
pop
movsl
or
lock
and
js
cmc
movsl
and
jle
fbld
cmp
out
cli
mov
sti
daa
stos
sahf
aaa
jg
sbb
inc
js
xchg
mov
nop
add
dec
ljmp
pusha
outsl
pop
scas
out
dec
mov
scas
dec
mov
pop
out
mov
sbb
jbe
sbb
jmp
cmp
popa
loope
cmpsb
and
dec
sub
repnz
push
xchg
push
cmpsl
aas
sbb
and
subl
out
stc
int
pop
cmpsl
dec
jg
xor
cltd
idivb
ret
mov
rcrl
ret
sti
xor
push
arpl
das
clc
aad
lods
mov
xor
push
scas
mov
leave
and
pop
inc
pushf
pop
aad
icebp
fisubs
sbb
adc
pop
stc
mov
add
sub
iret
or
test
adc
je
mov
cmc
mov
push
xlat
jge
cmp
mov
mov
or
int
jl
xchg
xchg
pop
and
stos
fisttpl
lds
dec
inc
out
rorb
mov
adc
movsb
gs
ret
rorl
pop
pushf
adc
sub
ja
or
sbb
dec
int
xchg
in
shlb
cs
cmpsb
fwait
cmp
inc
fnstsw
into
icebp
iret
sub
xchg
fsts
xorb
add
stos
leave
repnz
cmp
out
test
fwait
sub
roll
inc
xchg
xchg
cmp
adc
inc
pop
imul
mov
ror
clc
sub
dec
ret
mov
cmp
sub
adc
jns
jne
adc
daa
jo
mov
icebp
cwtl
jne
jg
scas
or
xorb
fwait
addr16
cmpsb
cmp
mov
pop
mov
ljmp
dec
ret
arpl
in
cmp
or
popf
jg
jp
adc
stos
outsb
fisubrl
xor
push
jbe
inc
or
or
gs
stos
mov
je
mov
sub
sbb
ret
xchg
call
and
outsb
add
xor
pop
push
loop
mov
sub
xlat
lods
push
inc
pop
mov
cli
popa
and
cs
mov
outsb
popf
lret
fnstsw
pop
push
mov
lahf
arpl
into
and
and
loopne
dec
lcall
cli
xor
pop
xchg
sbb
push
lret
jmp
nop
push
xchg
mov
leave
loop
dec
add
fidivs
test
aam
movsb
subl
fmulp
rclb
mov
fcoms
hlt
into
mov
inc
lods
idivl
sbb
xchg
push
jo
cmc
test
push
sbb
pop
insb
scas
rclb
mov
or
shl
jno
adc
jnp
les
fst
inc
xor
iret
and
je
cli
ds
test
cltd
jg
and
dec
pop
dec
pop
xchg
inc
lcall
mov
mov
jnp
clc
push
int
outsl
push
cmpsl
pusha
popa
xchg
mov
sub
mov
icebp
or
faddl
das
scas
out
jo
shr
popa
push
xchg
mov
adc
sub
xor
jb
call
jns
push
movsb
xchg
cmpw
in
cmpsl
sbb
and
dec
fbld
or
inc
lcall
or
mov
jo
in
ret
movsb
mov
lods
loop
sub
jecxz
mov
dec
lods
cmp
test
xor
pop
jbe
hlt
pop
mov
dec
sar
mov
push
push
lods
push
lods
mov
shll
dec
jb
adc
or
push
add
inc
push
sbbl
pop
mov
push
mov
xchg
imul
mov
testl
push
mov
ljmp
sbb
inc
fldcw
dec
into
subl
outsl
mov
loopne
sub
test
sbbl
icebp
loop
dec
or
cmp
cs
cwtl
mov
xor
lods
rcr
push
shll
adc
inc
inc
mov
xchg
stc
flds
push
scas
js
mov
mov
push
testl
sub
jge
inc
jge
xor
je
sub
pop
push
outsl
pop
daa
lods
cmpl
mov
movnti
pop
out
xor
jo
sub
inc
stc
pushf
mov
mov
sbb
jae
je
data16
pop
fistpl
fcom
imul
inc
add
ss
je
mov
ret
cmp
adc
push
dec
pusha
add
xchg
cmp
lods
lcall
xchg
add
fisubs
mov
sbb
mov
sbb
bound
add
fwait
out
addl
inc
cli
or
mov
scas
scas
ret
int3
sub
test
call
push
hlt
lods
cmp
scas
adc
xor
aaa
mov
xor
or
adc
jmp
mov
xchg
std
loop
lahf
aaa
test
sbb
adc
add
inc
jle
leave
push
add
sub
pop
inc
inc
mov
dec
jecxz
and
or
ja
lock
sbb
jo
xchg
repz
sub
shll
outsl
xchg
aaa
xchg
cmpsb
cmpsl
mov
aam
rorb
std
lods
int3
sub
stos
mov
fsubr
sti
imul
in
jno
pop
jno
std
clc
mov
pop
push
repnz
stos
leave
jb
mov
sub
jns
popa
movsb
xor
sbb
mov
jl
adc
jecxz
sbb
sbb
in
stos
test
scas
fsubr
sub
dec
inc
fidivl
cmpsb
mov
cs
push
pop
je
stos
jmp
cmp
dec
js
aad
jno
push
pusha
stos
xchg
sbb
lea
push
int
jl
mov
jno
xchg
scas
in
jg
push
cmp
imul
mov
or
es
shrl
mov
or
in
inc
add
scas
mov
dec
jmp
xchg
pop
or
mov
ret
clc
stos
cmpsl
xchg
or
repnz
cs
mov
scas
scas
jge
mov
sbb
fsub
cmp
imul
das
pop
fs
in
cmpsl
xor
test
xchg
cmp
lcall
je
mov
mov
mov
shll
cmpsl
sbb
xor
adc
add
data16
ja
pop
and
or
mov
adc
stos
sbb
clc
jmp
inc
dec
mov
das
push
dec
jns
in
call
jl
and
cli
pop
add
push
mov
sarb
push
mov
addl
and
push
dec
kxnorw
repz
inc
lret
jae
push
push
and
imul
cmp
push
fstl
sbb
std
dec
jecxz
push
inc
xchg
int
das
xor
or
mov
jp
pop
sahf
jp
stc
std
testl
and
js
rcrb
cmp
int3
fldcw
fcomp
push
shll
pushf
dec
sbb
jp
inc
and
packssdw
shlb
call
xchg
ljmp
es
shlb
xor
inc
jnp
aas
push
sarb
insl
inc
out
or
or
pop
aas
mov
xchg
repnz
out
movsl
jmp
mov
cwtl
xchg
addb
mov
mov
cwtl
hlt
or
mov
jae
mov
insl
pop
and
shrb
mov
add
mov
std
push
adc
js
or
sahf
sub
inc
das
xor
mov
jne
fsubrp
push
hlt
jo
lods
jbe
lret
out
adc
fisttps
nop
imul
rorl
inc
movsl
push
mov
xchg
sub
pop
pop
aad
scas
xlat
sbb
lcall
cmp
aaa
fimull
vmovsd
push
mov
pop
xchg
mov
cmpsl
dec
repnz
mov
imul
lock
iret
loop
sbb
xor
scas
sbb
cli
push
imul
sbb
dec
pop
test
aaa
in
jl
lods
dec
mov
dec
inc
mov
in
push
xchg
mov
lret
xor
xlat
test
xlat
repz
filds
inc
sbb
hlt
push
jbe
jbe
iret
push
dec
into
xor
pop
pop
inc
in
cmp
jb
lods
sub
pop
mov
mov
sti
dec
mov
jb
cmp
rorl
mov
add
xor
push
in
fidivs
jle
divps
jmp
mov
jo
jmp
inc
jp
hlt
sbb
or
mov
inc
outsb
insb
and
rcrl
test
sahf
jge
mov
add
push
ja
or
sbb
push
mov
test
jae
sbb
pushf
outsl
mov
mov
mov
imul
pop
lahf
or
xor
stos
hlt
push
jae
adc
cmp
mov
and
fnstsw
add
in
mov
js
add
mov
ficoms
insl
sbb
pop
xorb
pop
jmp
ja
lock
push
push
daa
decb
inc
push
nop
xor
pop
dec
xor
cmpsb
push
dec
clc
jno
mov
fwait
lods
mov
jno
icebp
cmpsb
lods
mov
shll
into
gs
xchg
jl
fnstenv
je
pop
out
xor
mov
andb
or
and
jae
lods
sbb
call
adc
inc
push
adc
lods
loopne
jmp
scas
xchg
pusha
mov
adc
lea
fstpt
mov
fistl
fwait
xchg
cmpsl
add
out
jns
pusha
jp
je
mov
ja
loope
lds
js
shll
xchg
pop
inc
fisubrs
push
pushf
mov
cmpsl
adc
add
repnz
int3
add
cld
pop
jae
cmp
fiaddl
add
sub
mov
inc
insb
sub
test
flds
in
into
xchg
icebp
pop
imul
push
and
std
mov
imul
insl
iret
pusha
push
dec
add
xor
inc
jge
fisubrl
jb
out
nop
sbb
pop
push
std
aam
pop
cmpsb
dec
sub
xchg
in
xor
std
jl
cmc
and
mov
repnz
sbb
sbb
sub
add
jp
lods
je
movaps
adc
imul
mov
cmpb
addr16
pop
insl
dec
test
sub
lret
scas
pop
pusha
sbb
cld
js
fnstsw
shll
in
push
pop
lahf
dec
cmp
fldcw
mov
push
lret
xor
dec
or
xor
out
mov
dec
rcl
in
add
je
leave
mov
in
xor
les
mov
and
ds
movsb
jo
popa
mov
fs
in
loope
clc
sbb
fwait
mov
mov
pusha
shll
jo
sub
lds
dec
adc
lahf
adcb
aam
push
and
je
loope
mov
lcall
das
outsl
xchg
std
sbb
and
ljmp
or
lock
pop
jg
call
jmp
add
hlt
test
sub
test
pop
fs
shl
sbb
repnz
in
cwtl
sbbb
lock
xchg
mov
call
pop
mov
sub
inc
dec
arpl
js
mov
sub
push
insl
ljmp
push
scas
cmpsl
cli
test
cmp
dec
push
inc
loop
jne
rcrb
cmp
icebp
dec
add
jnp
or
in
sub
leave
lods
xor
je
jb
or
xor
jnp
mov
cmpsl
cmpsl
push
push
jle
or
lock
mov
lock
pop
ret
mov
pop
in
and
cmp
mov
xchg
scas
xor
jno
sbb
dec
gs
cld
sar
inc
xchg
test
jecxz
loop
lea
popa
xor
pop
fs
js
mov
fisubs
or
xchg
scas
xchg
notb
stos
test
jecxz
idivb
jmp
lods
add
lock
loope
cmp
or
push
adc
pop
mov
sbbl
or
js
les
rcl
xchg
or
cmpsb
fsubr
jg
mov
movsl
sbb
iret
scas
mov
jno
shll
std
fistps
scas
jo
lret
pop
push
jmp
mov
out
je
mov
xor
inc
ds
adc
jl
mov
je
mov
adc
jle
pop
sbb
data16
sbb
pusha
ret
dec
pop
fbld
test
imul
cmp
pop
psubd
insl
push
sbb
outsb
dec
mov
imul
adc
fldenv
in
pop
cmp
push
movsb
inc
mov
inc
pop
and
push
stc
adc
push
dec
jbe
add
jge
mov
pop
loop
out
xchg
mov
scas
loopne
push
cmpsl
rcll
push
pop
mov
out
cmp
test
cmp
mov
inc
jmp
les
ss
xor
dec
mov
xor
movsl
ja
ret
cwtl
add
arpl
ds
cmp
add
jne
dec
sub
into
lock
mov
mov
pop
pop
scas
mov
push
loope
adcb
es
stos
divl
sahf
pop
mov
shll
mov
dec
dec
sbb
xor
int3
and
and
lret
inc
fdivs
cmp
fbstp
fwait
repz
jle
mov
stc
xchg
cmp
dec
repnz
stos
inc
sbb
and
adc
adc
fiadds
movd
rcl
outsl
leave
bnd
inc
je
dec
repz
cmpsb
out
inc
ret
xchg
xchg
add
roll
jno
fimuls
std
sahf
scas
sub
mov
pop
mov
aaa
xor
mov
mov
xchg
cltd
mov
push
fnstcw
cmpsl
aad
pop
pop
add
movsb
jge
adc
xchg
xchg
shlb
push
mov
bound
xchg
pushf
dec
loope
push
xchg
mov
jb
add
aam
imul
adc
xchg
cmp
xor
rcrl
out
xchg
test
ja
test
in
pop
sbb
fdivl
jo
fisubl
insb
inc
cmpl
mov
mov
pop
ja
mov
xchg
lock
cwtl
enter
push
dec
xor
jl
das
or
scas
adc
pop
stc
cmp
rcll
xchg
out
or
xchg
cmp
mov
dec
sub
mov
xchg
shrb
mov
test
cltd
ret
mov
lods
lea
imul
xlat
mov
xchg
gs
pusha
inc
jnp
xorb
mov
repnz
fsubl
add
push
xor
adc
out
xchg
pop
dec
pop
ss
daa
jp
loopne
scas
inc
ret
and
iret
aad
xor
sub
sar
addb
movsb
push
shrb
dec
xor
jge
fldt
add
cmc
aam
orl
add
scas
loop
sub
imul
test
mov
xor
jge
psubsb
jnp
dec
add
lahf
mov
xor
daa
mov
cld
dec
adc
push
xlat
jmp
lcall
add
jb
loopne
adc
mov
cmc
incb
adc
jp
out
repz
js
fistl
inc
inc
loop
nop
subl
jb
es
inc
sbb
loopne
mov
clc
cmp
push
pop
mov
jp
sbbl
jae
movsb
mov
add
add
xor
ss
jp
mov
lcall
stos
aad
jmp
or
outsb
js
fs
lea
ljmp
pop
xchg
mov
ljmp
xchg
mov
jb
mov
mov
in
inc
js
adc
fwait
lcall
adc
mov
jo
lock
pop
jmp
mov
sbb
xor
push
fiaddl
inc
push
call
das
nop
cld
jno
cmp
sbb
cmpsb
stos
lret
cmp
push
fs
pop
xorb
xor
or
fwait
and
cmp
sarb
lock
ret
mov
fadd
mov
sbb
pusha
jne
jnp
stc
push
mov
lahf
adc
cmpsl
xchg
mov
fwait
arpl
mov
in
jnp
cmp
es
sub
int3
popa
adc
dec
insl
cmp
sbbl
pop
push
jo
sub
inc
in
in
jp
arpl
jmp
scas
push
lods
dec
xchg
push
movsl
pop
xor
sub
idiv
pushl
cmpsl
fdivs
add
ja
adc
xchg
fstl
je
and
mov
dec
dec
lret
pop
sub
jnp
sbb
mov
push
xorb
test
inc
inc
jmp
js
dec
add
imul
jno
push
in
cltd
scas
xchg
pusha
pop
mov
dec
dec
dec
enter
adc
ss
sahf
mov
mov
mov
or
or
ds
mov
mov
mov
and
cs
pop
cmp
and
fcom
mov
add
and
jo
hlt
push
push
gs
inc
mov
and
adc
cld
repnz
aam
push
sbb
bound
arpl
inc
mov
outsb
cmp
pop
inc
mov
mov
ds
inc
and
cmp
or
sub
xchg
aam
cs
movsl
bound
pop
int
out
mov
xlat
cmp
js
icebp
ret
rol
inc
cmp
pusha
mov
and
adc
es
outsl
push
push
jae
daa
popa
enter
xor
push
dec
sbb
fstps
ret
mov
push
xchg
and
cmp
xor
cli
mov
in
lret
fstp
or
sti
push
cmp
push
das
mov
dec
mov
pop
jg
pop
orl
push
ret
test
in
jo
adc
push
mov
cmpsb
push
ja
or
stos
add
outsl
or
or
jle
or
mov
xor
push
mov
jbe
mov
loope
rcrb
add
cmpsb
pop
cmp
pop
in
jle
mov
rorb
dec
mov
push
scas
mov
mov
sarl
das
pusha
jmp
ja
push
add
jnp
adc
daa
movsb
pop
push
mov
gs
xchg
gs
jecxz
enter
iret
or
psubusw
mov
stos
jmp
or
mov
sbb
fcmovnu
xor
or
pusha
adc
push
je
call
dec
inc
mov
xor
dec
rol
dec
adc
sahf
fwait
adc
inc
dec
inc
cmp
pop
push
jb,pn
dec
push
imul
cmp
repz
sub
sbb
cmp
mov
insb
mov
jecxz
insb
lret
orb
inc
js
pusha
lret
xor
and
pop
mov
lods
popf
xchg
imul
pusha
popa
negb
scas
pop
mov
addr16
leave
nop
jle
inc
mov
jg
call
out
test
les
scas
icebp
and
add
cmp
mov
mov
xchg
push
adc
or
sub
mov
addb
std
jmp
aad
push
jmp
fs
insl
arpl
outsb
xchg
mov
lret
arpl
xchg
lahf
mov
xor
dec
popa
les
cld
sbb
scas
cli
aad
pop
cmpsb
imul
pop
rorb
nop
sub
mov
mov
mov
pop
mov
mov
lcall
loop
movsl
push
lahf
cli
js
pusha
push
sub
jp
xchg
in
bound
ja
jl
adc
test
dec
lock
sbb
ja
vdivps
and
cmc
xor
repz
adc
adc
rcr
and
lahf
lea
and
mov
pop
cmpsl
sahf
add
mov
dec
mov
insl
jecxz
aam
pop
pop
sub
movsl
jmp
pop
sub
dec
test
movsb
mov
push
mov
mov
mov
arpl
mov
and
jo
test
std
ret
pushf
and
cwtl
xchg
cld
jl
lock
jle
inc
insb
push
push
pop
fstpl
xchg
mov
test
rcr
adc
or
addl
imul
mov
adcl
or
push
arpl
test
inc
xchg
push
jbe
lcall
movsl
movsl
add
decl
bound
pop
mov
sub
daa
call
xor
mov
leave
push
lea
cwtl
mov
sub
popf
lret
in
out
push
xlat
pusha
xchg
rclb
fwait
lcall
lea
jecxz
mov
mov
xchg
andl
sbb
scas
mov
out
stc
cmc
push
stos
jecxz
or
jle
xchg
outsl
dec
lcall
jnp
loop
or
fwait
mov
fiadds
sub
mov
idiv
inc
jp
mov
ret
int
mov
stos
icebp
ds
addr16
push
data16
cwtl
in
fcoml
movsb
popa
cmpsb
dec
aas
dec
mov
popf
ror
call
hlt
mov
inc
leave
xchg
mov
cli
add
ret
lret
pop
insl
test
movsl
loope
adc
pop
cmp
dec
xchg
test
push
mov
std
cmp
xchg
aas
out
adc
lods
add
adc
test
mov
sbb
and
jo
lds
add
setle
mov
inc
add
js
inc
ja
mov
iret
addr16
fisttps
adc
push
gs
cwtl
cmp
andb
lret
in
mov
mov
mov
adc
sbb
xor
inc
imul
js
addr16
leave
repnz
and
lods
sbb
insb
adc
cld
and
sbb
insl
sub
bound
std
and
cmp
push
frstor
loope
test
mov
fnstcw
jno
xor
addr16
outsb
inc
aad
jnp
mov
dec
movsl
pop
mov
les
mov
mov
into
in
xchg
aas
push
dec
mov
popa
lods
call
adc
rclb
dec
mov
or
js
scas
mov
adc
jl
push
jl
popf
test
mov
fwait
jle
bound
out
xchg
inc
popa
int
outsl
rclb
push
inc
mov
dec
sbb
jg
lcall
stos
sub
in
mov
xchg
mov
adc
repnz
cltd
push
imul
mov
stos
jo
mov
pop
and
dec
test
mov
in
gs
insb
in
push
mov
mov
mov
sub
xlat
mov
lock
scas
sbb
sarl
loop
fisubrs
int3
mulps
subl
mov
out
js
xor
lahf
mov
cltd
repz
mov
lea
jle
leave
xchg
sub
cmp
inc
cmc
clc
jge
xchg
movsl
repz
fisttpl
addl
ficomps
sbb
cwtl
cs
cwtl
int
movsl
xor
xchg
mov
inc
xor
mov
xor
jb
add
shl
sti
mov
es
pop
cmp
xchg
sbb
cmp
jbe
fimull
sbb
loope
and
imul
mov
les
or
fcompl
xor
mov
icebp
cwtl
inc
mov
repnz
xor
inc
test
push
in
lds
sbb
mov
sub
mov
or
dec
sbb
push
lret
call
sbb
cmp
mov
mov
ret
std
jecxz
push
push
push
pop
ficompl
test
inc
cmp
jae
xorl
pop
mov
fcompl
aad
jecxz
or
or
pop
mov
pop
jo
mov
or
add
fistpll
push
or
mov
jae
jmp
mov
fldenv
call
jmp
xchg
xor
stos
repz
fldl
jecxz
xchg
shlb
pop
jb
sbb
jecxz
and
das
mov
dec
cmpsb
dec
xchg
or
ss
pop
sti
fwait
mov
rcl
idiv
mov
add
inc
push
ja
push
mov
outsb
inc
mov
mov
cmp
cmc
imul
adc
or
enter
popa
xor
inc
mov
stos
cmp
out
and
fs
jecxz
jg
in
outsl
in
cmpb
mov
popa
negb
jbe
fidivrl
shll
jb
jne
dec
fwait
add
add
sbb
jno
ja
in
jb
stc
loopne
fildll
mov
add
cmp
lcall
fdiv
jbe
mov
dec
push
ljmp
imul
mov
icebp
push
jno
xor
aaa
pop
lret
sti
jo
out
cmpsl
inc
addr16
int
scas
pop
cli
pop
mov
push
cld
rolb
xchg
pop
xchg
push
sti
jmp
mov
adc
lahf
push
push
pop
jge
cmpsb
or
notl
hlt
sbb
ja
adc
mov
adc
xchg
jns
xlat
std
add
jmp
pop
sub
mov
movsl
cld
movsb
test
hlt
or
xchg
fs
aad
popa
mov
push
dec
lret
aas
sub
mov
fsubrs
cld
cmp
xchg
and
cmp
popf
aaa
pop
mov
cmp
and
mov
mov
push
loope
pop
dec
lods
adc
iret
in
leave
pop
mov
push
popaw
and
call
cmpsb
leave
xchg
push
xor
adc
ljmp
loop
inc
sbb
xchg
jp
shll
sub
mov
movsb
aad
and
in
shll
cmpsb
pop
dec
xor
outsl
mov
ret
adc
icebp
mov
or
ljmp
je
in
scas
vpaddd
mov
pushf
in
scas
inc
push
test
jmp
pop
inc
pop
adc
pushf
adc
push
mov
sub
ret
xchg
or
fwait
sub
inc
add
push
xchg
into
hlt
out
les
int3
fisubl
lock
sub
nop
and
js
movsb
jb
add
outsl
push
mov
or
out
or
cmp
adc
jbe
cltd
sbb
mov
ss
mov
sub
in
inc
sub
stos
sub
ficoml
pop
repnz
icebp
and
jnp
ja
ret
fdivl
push
jo
bound
push
jle
fdivs
adc
test
les
divl
hlt
sbb
adc
and
dec
sub
xor
push
repnz
jns
inc
gs
sub
out
mov
pop
enter
dec
xchg
arpl
pop
mov
cmp
pop
add
fsub
jp
icebp
jge
dec
or
mov
jbe
mov
xchg
xor
push
in
andb
mov
in
stos
int
stc
lods
fbld
movsl
sbb
inc
lret
inc
sbb
arpl
mov
jle
outsb
jo
test
mov
sahf
shrl
in
add
sbb
addr16
push
pop
xchg
push
or
mov
inc
hlt
roll
mov
dec
or
cmp
mov
dec
mov
pop
fwait
lods
cmc
fbld
pop
xchg
js
pop
jmp
shrl
fdivl
mov
xchg
cwtl
pop
jnp
xchg
sbb
inc
mov
shlb
out
sahf
lock
rcrl
or
int3
rcr
sub
icebp
xlat
mov
mov
cli
dec
jb
push
icebp
enter
push
push
xlat
movhlps
scas
fisubrl
fcmovu
xchg
or
shr
sahf
shrl
shll
repz
xchg
xchg
fistl
dec
dec
lahf
fadds
daa
push
push
mov
stc
movsl
ja
fwait
outsl
in
mov
dec
idivl
xor
pusha
addr16
movsb
std
aad
cmp
std
out
push
sub
les
test
pop
fdivl
mov
mov
out
cli
mov
pop
xor
ret
fnstsw
mov
sbb
push
adc
addl
inc
pusha
xlat
xchg
out
ficompl
inc
enter
movb
lock
mov
mov
xor
out
lea
inc
ficoms
std
mov
bound
repnz
sub
imul
movsl
mov
adc
jae
sbb
pop
sub
xchg
imul
fcmovnbe
push
arpl
jmp
or
mov
arpl
ret
movsb
das
imul
cmova
xor
scas
ja
cmp
out
mov
xchg
pushf
scas
xor
arpl
into
mov
sub
imul
inc
cmp
lcall
lea
xchg
xor
mov
sbb
sbb
mov
push
adc
and
and
push
cs
inc
xlat
inc
sub
adc
out
jp
mov
icebp
and
cld
mov
mov
jmp
sub
in
add
lret
jge
adc
rcll
movsl
sbb
jecxz
fwait
cld
rcr
mov
dec
shll
mov
inc
sub
scas
mov
fadd
daa
inc
loop
fcoml
inc
jnp
push
imul
xchg
std
fidivs
jp
sub
cmp
inc
pop
popa
push
add
pop
adc
fnsave
jb
insl
jl
ret
mov
adc
dec
rcr
fidivl
les
and
push
mov
cmpsb
in
fsubr
mov
ret
rcr
in
call
fucomp
mov
mov
pop
xor
dec
ja
nop
pop
cmp
cmp
jae
out
cmp
stc
sbb
push
pushf
inc
sbb
call
mov
mov
in
and
mov
mov
in
xchg
add
mov
add
rorl
rol
scas
scas
mov
jno
mov
pop
hlt
mov
jecxz
xor
incl
push
cld
scas
mov
into
decb
mov
push
and
inc
and
imul
jbe
les
dec
pop
jns
pop
sub
mov
aaa
sub
aas
mov
fsts
jne
mov
cmpsb
int
test
or
dec
sub
mov
cli
repnz
scas
fisttpl
pusha
enter
fcmovnb
dec
push
mov
bound
sub
pop
xor
loop
add
mov
aad
or
jg
jecxz
mov
cmp
jo
sahf
jp
mov
sarl
and
add
or
daa
pop
or
rcl
popf
mov
in
sahf
mov
sahf
aaa
invd
adc
fwait
push
push
cmp
and
or
repnz
mov
nop
out
icebp
inc
hlt
dec
xor
fchs
cmpsl
xor
inc
repnz
add
stos
ja
sub
fsubs
fdivrs
pop
out
xorb
pop
mov
pop
pusha
xchg
mov
sahf
mov
in
lret
stos
mov
or
xor
psubsb
daa
pop
imul
sub
test
push
jae
mov
inc
cwtl
cmp
xchg
ds
pop
dec
xor
push
call
insb
pop
loop
js
ds
mov
xor
mov
sbb
int3
lahf
sbb
dec
fisttps
add
hlt
mov
hlt
cmp
mov
mov
in
add
js
out
push
adc
fs
xchg
cmp
add
scas
sbb
mov
loop
psubd
mov
dec
and
lods
cmc
jp
inc
dec
mov
jmp
leave
xchg
dec
stos
push
fisttps
into
push
ljmp
imul
lret
dec
mov
jb
cmp
fidivs
xchg
pop
pop
insl
dec
popf
dec
add
clc
xlat
out
sbb
test
out
mov
xchg
inc
into
imul
sbb
sbb
dec
fcompl
cmp
or
pop
das
pop
sbb
je
cmpl
addb
pop
jo
bound
pop
leave
lods
fcmovbe
in
jb
push
iret
push
jns
sahf
dec
pusha
push
es
in
icebp
xor
sbb
add
cmp
clc
mov
push
and
xchg
fsubl
fwait
xor
stos
fsubs
xlat
sbb
iret
sub
les
addr16
daa
lahf
jne
loop
ret
sarb
mov
sar
test
loop
sub
dec
mov
sbb
add
pop
dec
cltd
je
pop
cwtl
push
pusha
sub
data16
aas
xchg
fidivrs
shl
mov
sbb
cli
inc
ja
add
out
test
arpl
das
sub
fwait
xchg
iret
rcll
lcall
neg
pop
and
in
jle
frstor
shll
popf
test
pop
lock
mov
sarb
fimuls
add
scas
cld
pop
std
loope
inc
mov
add
mov
test
cmp
sub
ret
test
adc
mov
cmp
add
dec
test
adc
sub
sarl
mov
push
outsb
cmpb
imul
ret
addb
cmp
leave
popf
out
pusha
shrb
iret
sahf
int3
in
imul
shll
sbb
or
inc
pop
xor
test
inc
movsl
cmp
push
jp
pop
mov
xchg
jnp
push
adc
dec
jnp
mov
pop
mov
divl
mov
add
mov
xor
imul
movsb
adc
add
add
sbb
test
insb
cmp
sbb
xchg
aad
add
xchg
push
mov
dec
out
lds
cmpsl
mov
push
rorb
pop
cmp
int3
push
adc
cmc
inc
fs
adc
negb
jns
int
int
sbb
mov
dec
out
sbb
mov
push
xchg
push
cmp
jle
sbb
loopne
xchg
shll
mov
out
fcomp
mov
fldcw
push
inc
pop
out
mov
sbb
lret
adc
aam
dec
enter
rorl
mov
sub
cmpsb
aad
fs
xor
cmp
pop
mov
popf
pop
push
test
inc
in
mov
add
sbb
mov
cmpsb
mov
sub
inc
jnp
lret
inc
xchg
mov
push
cwtl
icebp
mov
dec
inc
push
ret
test
push
xor
jl
aas
dec
or
and
loopne
std
xchg
inc
pop
mov
cmc
pusha
rcr
jmp
in
inc
sbb
sub
popa
cmpsb
aaa
ss
or
jp
je
aas
iret
insb
cmp
aad
add
outsl
xchg
push
adc
xor
mov
mov
inc
rcrl
pushf
dec
pop
sub
test
testl
icebp
punpckldq
lret
pusha
lcall
push
xor
cmp
add
pop
mov
shll
add
lcall
pop
push
mov
das
pop
cmp
jge
pushf
xor
into
sub
push
jecxz
addr16
sbb
or
shr
div
in
or
stos
mov
push
pop
pop
clc
xor
add
pop
jp
add
jbe
lea
or
push
add
cmp
daa
adc
test
sub
inc
pop
push
sub
shll
les
sbb
sti
ljmp
push
push
inc
pop
xchg
cmp
cmp
add
or
test
sub
or
imul
fs
mov
pop
mov
mov
fs
cltd
movsb
mov
cld
insl
cmpsb
adc
mov
mov
mov
enter
test
cmc
test
xchg
jmp
movsl
insb
stc
dec
push
pop
cmpsb
push
sub
pop
mov
xor
lahf
add
push
sbb
mov
adc
nop
jg
mov
fnstsw
dec
loop
insl
cwtl
mov
dec
movsb
mov
mov
add
lea
jl,pn
mov
sub
cmc
jns
push
sub
push
cmpl
adc
pop
loope
pop
loope
roll
mov
arpl
in
sbb
sub
imul
stc
mov
and
inc
into
xchg
sbb
mov
add
ret
xor
dec
or
movsb
in
ret
jbe
or
addr16
shll
pop
pusha
add
jp
push
xchg
fs
insb
sub
dec
push
std
sub
dec
hlt
pop
xchg
and
pop
cmp
lds
sbb
aad
push
movsl
subb
repz
push
test
pop
outsb
leave
mov
jle
lcall
divl
or
mov
mov
xchg
lea
cmp
clc
mov
or
push
insb
or
in
inc
adc
sub
xor
ret
push
daa
fnstcw
subl
lods
xor
flds
test
dec
ds
cwtl
lret
dec
outsl
xlat
lahf
in
add
mov
sahf
out
divb
xchg
insl
dec
dec
mov
fnstcw
mov
jbe
push
daa
mov
mov
xor
mov
mov
xchg
xor
jae
insb
in
xor
bound
sbb
sub
lds
lret
dec
popf
xor
scas
dec
roll
stos
push
pop
pop
push
pop
adc
xchg
notb
shlb
add
lret
sub
repz
sub
rcrl
mov
sbb
js
sbb
dec
les
popf
popa
fldenv
or
loop
cmp
ds
fwait
and
sub
repz
jae
jbe
fs
sub
pop
cltd
mov
mov
mov
inc
or
fmuls
adc
inc
mov
idiv
aad
dec
out
roll
cmp
pop
pop
lods
jp
lcall
lret
lods
mov
mov
mov
test
cmp
adc
pop
push
mov
ljmp
nop
and
lret
mov
or
jbe
mov
and
mov
push
dec
sbb
inc
jnp
out
pop
movsl
mov
test
cmp
les
push
ds
dec
inc
out
call
mov
loope
jbe
cwtl
not
les
iret
inc
cmpsb
mov
and
or
in
das
cmp
inc
dec
outsl
out
rclb
inc
out
xchg
stc
dec
dec
test
cmp
adc
sub
scas
sub
int3
dec
push
scas
push
sbbb
pop
mov
dec
pop
out
sbb
xor
insb
bound
xchg
inc
mov
ficoml
push
adc
in
add
inc
div
adc
adc
idivb
inc
or
xor
xorb
mov
out
push
mov
notl
xor
push
stc
adc
ret
mov
outsb
ds
ss
mov
lods
fstps
lods
pop
and
aaa
aam
push
add
pop
leave
stos
xchg
out
lds
adc
mov
ja
mov
push
and
inc
cmpsb
sbb
dec
jl
add
adc
cmpsl
fcmovne
out
stos
cmc
rclb
push
imul
cs
out
repz
outsb
repz
popa
aad
stos
dec
movsl
cmpsb
jnp
ja
int3
pop
mov
xlat
cmpsb
mov
cwtl
jae
pop
pusha
cmp
adc
sbb
fcomip
jae
and
pop
pushf
sub
dec
loope
xchg
aas
jo
jge
ret
mov
xchg
dec
add
das
ljmp
push
mov
pop
fdivrl
pop
lahf
dec
out
fsts
call
scas
push
mov
lcall
cmpsb
cltd
and
sbb
je
pop
and
bound
repz
movsb
insl
mov
daa
test
rcl
movsb
jno
mov
inc
jnp
and
nop
xor
add
in
test
gs
into
mov
adc
jo
xor
sub
test
notl
test
mov
sub
cltd
lods
or
xor
xchg
addr16
or
push
or
and
imul
arpl
xchg
jle
mov
lods
inc
xchg
add
scas
mov
dec
sub
jnp
mov
out
adc
mov
jbe
inc
inc
add
imul
push
flds
push
notb
std
test
daa
push
cld
loope
xor
nop
xor
cmp
sbb
rcrb
pop
dec
fsubrs
push
out
fbld
ret
xchg
inc
xchg
inc
dec
mov
jb
fstl
lock
pop
sbb
adc
mov
xchg
cmpsl
xlat
popf
xchg
mov
jnp
sahf
popa
push
sbb
pop
insl
mov
push
rol
shl
icebp
pop
mov
enter
push
push
aam
aaa
movsb
aam
fcomi
enter
mov
cmc
pusha
jne
pop
add
mov
jl
sub
lcall
sbb
pop
nop
into
cltd
fiaddl
jbe
or
aaa
jns
imul
daa
mov
xchg
cwtl
loop
pop
fistl
xchg
lock
lahf
xchg
add
jl
aad
enter
dec
or
mov
fildl
enter
push
les
int3
insl
popa
in
mov
mov
clc
hlt
pop
js
mov
push
and
mov
ljmp
loope
insl
or
insl
mov
sbb
popa
jle
mov
xor
sbb
dec
and
ds
repnz
mov
inc
cld
enter
push
cltd
shlb
mov
loopne
cmp
sbb
cmpsb
test
jnp
and
cmp
jg
pop
inc
repz
sbb
mov
mov
jecxz
cmp
jnp
or
nop
fucomi
adc
ret
lods
movsl
mov
cmp
and
popa
pop
adc
shlb
mov
push
dec
mov
aaa
lods
imul
ret
dec
stc
pop
mov
cltd
negb
arpl
mov
cmc
jbe
into
in
fbstp
sbb
ja
pusha
mov
inc
scas
or
add
call
das
mov
mov
push
fstp
insb
mov
and
cmp
sbb
cmp
cmc
scas
cmp
jo
adc
push
and
in
add
dec
xchg
jecxz
test
pop
pop
ret
jne
andb
jns
mov
out
ret
pop
push
mov
sbb
mov
call
pusha
adc
mov
cwtl
ret
mov
dec
push
repnz
add
test
imul
pusha
mov
cld
dec
js
iret
je
mov
sbb
cltd
std
inc
push
fwait
lods
mov
push
lret
pop
cs
leave
or
out
les
cld
xor
cmp
and
mov
popf
push
jmp
inc
icebp
push
cwtl
mov
cmp
pusha
lret
dec
mov
and
dec
inc
sub
pop
out
jno
or
fidivrs
cmpl
mov
aam
out
xchg
mov
scas
mov
lahf
dec
or
and
add
adc
inc
cmp
xchg
loope
adc
mov
mull
xchg
das
cwtl
wrmsr
or
mov
cmp
sbb
xlat
daa
pop
fsts
js
pop
insb
test
adc
dec
in
jno
adc
nop
loope
pop
leave
mul
mov
test
in
outsb
jp
rolb
xchg
ds
mulb
scas
or
shrb
pusha
pop
shlb
add
mov
stos
fldl
movsl
aam
xor
jecxz
cvttps2pi
mov
pop
testb
jp,pt
mov
scas
mov
push
shlb
mov
pop
pusha
out
and
shlb
pop
mov
add
jb
out
shrb
popa
leave
push
push
mov
shl
xchg
inc
cld
xchg
cmp
mov
lea
int3
in
add
setbe
push
fcomi
daa
mov
out
add
sub
out
test
jle
mov
shrl
push
push
push
xchg
gs
enter
dec
leave
cmp
lods
aaa
dec
sbbb
pop
fbld
add
cmp
aaa
cld
imul
mov
push
jmp
push
mov
std
xchg
cli
mov
leave
mov
adc
and
push
push
pop
gs
stc
test
dec
cmp
mov
xchg
cmp
cmovb
cmp
imul
dec
cmp
mov
movsl
xchg
dec
sahf
daa
and
popl
mov
push
adc
popa
xchg
push
xchg
sbb
insb
mov
fwait
icebp
cmp
lret
mov
aaa
lods
ds
in
int3
dec
xchg
xor
int
int
inc
setb
xchg
add
xlat
icebp
lahf
push
sub
xor
sbbb
hlt
push
notl
push
and
leave
mov
adc
orb
push
andb
pop
inc
leave
mov
push
dec
ss
xchg
insb
clc
xchg
push
mov
cmp
arpl
inc
outsl
divb
adc
shrl
fdivrl
aas
scas
or
inc
and
adc
cmpsl
insl
addr16
in
out
mov
loope
mov
lods
fildl
outsb
test
push
mov
bound
dec
cmpsl
pusha
jno
daa
repnz
lock
in
data16
and
push
std
xor
lahf
ljmp
dec
fxch
xchg
add
jo
jne
out
inc
cmpsl
jecxz
add
pop
jl
scas
arpl
movsl
mov
add
and
int
jb
jg
mov
test
push
mov
add
cmp
icebp
inc
lret
test
mov
pop
push
cli
loop
xor
jno
mov
stc
mov
pop
cmp
rorb
sahf
or
inc
push
mov
cli
movsl
dec
mov
push
call
jg
pop
jnp
js
jle
xorb
out
push
dec
adc
enter
xchg
inc
out
cmp
cmp
std
pop
mov
push
mov
mov
adc
dec
mov
inc
jbe
pop
in
aas
fnstsw
sar
add
dec
adc
xlat
mov
stos
out
movsb
sbb
inc
mov
xor
mov
leave
fildll
jmp
lea
cmp
xor
or
scas
xor
inc
push
ja
lcall
mov
xchg
stos
xchg
or
lret
jl
fwait
sti
repz
ret
hlt
and
pop
imul
cli
adc
or
enter
jge
mov
jl
xchg
push
xchg
fildl
cmp
js
push
mov
test
and
lret
movsl
xlat
test
sbb
arpl
mov
jge
sti
xchg
push
mov
lret
sti
shl
cmpsl
popf
sarb
test
pop
lods
stos
clc
cli
pusha
sti
dec
jnp
or
push
repnz
jge
dec
test
inc
or
loope
pop
push
or
push
ds
jae
fcompl
cltd
xchg
xor
sahf
int3
jne
jne
pop
in
bound
dec
stos
xorb
cli
xorb
xor
test
out
lods
xchg
je
xchg
xorl
pushl
jmp
mov
std
cmp
daa
mov
jp
push
cmpsb
pushf
pop
gs
and
mov
xchg
clc
repnz
stos
lods
or
dec
push
mov
dec
sub
cltd
rcr
jp
and
mov
rcl
mov
clc
or
sti
or
fwait
inc
fldenv
nop
inc
mov
add
mov
pop
cmc
push
xchg
shrl
sbb
jno
cmp
inc
mov
mull
inc
int
dec
jg
jmp
enter
xchg
xor
in
ret
fwait
sbb
or
inc
movsb
jno
data16
mov
sub
jle
mov
fisttpll
mov
mov
inc
adc
adc
xchg
pop
xor
sbb
inc
popa
xchg
fisttpl
stos
shlb
rcrl
inc
inc
mov
inc
loope
aaa
add
xchg
mov
out
addb
push
push
inc
jbe
mov
or
outsl
sbb
add
pop
cmp
xor
sti
xchg
or
push
mov
or
out
rclb
adc
mov
add
or
xor
cmovge
call
mov
cmp
in
lret
lcall
or
sub
push
outsl
xor
mov
mov
mov
lcall
les
cmc
mov
in
mov
add
mov
add
int3
stc
lock
pop
movsb
xlat
sarl
aas
jecxz
movsl
mov
cmp
xlat
fwait
movl
subb
out
push
pop
gs
es
arpl
shrb
out
xchg
add
cwtl
xchg
cmp
iret
pop
aam
movb
or
adc
loope
xchg
fldenv
push
mov
jmp
inc
lret
push
lock
jge
sbb
dec
fs
adc
jp
clc
es
hlt
shrb
loop
dec
add
lods
and
inc
jns
inc
repnz
xchg
xchg
lods
and
out
or
mov
stos
hlt
xchg
stos
fidivl
xchg
adc
gs
and
push
add
into
mov
push
insl
xor
jmp
das
push
inc
and
stos
aaa
inc
or
sbb
cwtl
rol
leave
out
sub
push
insb
std
push
aaa
sbb
mov
aad
andl
in
or
dec
dec
or
fistpl
mov
mov
fstpt
daa
negb
adc
push
scas
cld
lods
outsb
call
loop
inc
xchg
mov
inc
or
lock
mov
push
pop
dec
cmp
lods
test
and
push
js
testl
add
push
in
popa
sahf
adc
adc
mov
add
js
cmp
and
rorb
addr16
xchg
pop
jb
sahf
and
push
jl
pop
cmp
dec
pop
pop
pop
xchg
push
sub
cmp
aaa
push
test
push
pusha
mov
mov
sub
ja
push
sbb
mov
push
mov
nop
mov
outsl
sub
out
mov
mov
outsl
mov
dec
push
dec
rcl
inc
mov
lret
ljmp
movsb
add
and
clc
aad
xor
in
inc
test
mov
cmp
or
int
xchg
mov
hlt
imul
cld
push
or
mov
add
jecxz
sbb
mov
jmp
cmp
outsl
sbb
stc
sbb
jg
jne
add
sbb
rorb
test
scas
cltd
shrl
mov
sub
jae
push
outsb
or
inc
int3
pop
jb
icebp
gs
adc
ret
add
popf
pusha
cmp
mov
icebp
push
pusha
adc
sti
movsl
lret
add
iret
lea
push
dec
add
icebp
mov
dec
add
in
call
push
jg
sbb
dec
and
xchg
mov
aad
adc
lcall
rcll
xchg
movsl
push
push
inc
cmp
pop
shlb
mov
sub
push
test
inc
inc
frstor
dec
repnz
scas
test
mov
push
inc
ds
loopne
lods
mov
arpl
push
insb
daa
movsb
lea
xor
mov
rcrb
ja
scas
add
mov
jb
lods
stc
jg
inc
pop
xchg
inc
rcll
ror
outsb
mov
rcr
imul
jae
mov
sub
je
push
jnp
addr16
dec
mov
add
cltd
pop
jmp
cmc
add
sub
mov
cmc
jmp
sbb
xchg
shr
add
xchg
cmp
mov
rorl
cmp
push
adcl
and
insl
shll
adc
adc
xor
imul
or
sbb
mov
inc
or
mov
aas
mov
daa
enter
inc
adc
or
xchg
call
cmpsb
add
cmp
neg
mov
jno
movsl
xchg
mov
cmc
sub
mov
out
cmpsb
pop
jp
add
add
in
cltd
mov
nop
cmc
jmp
roll
jne
shll
pushf
in
cli
and
call
push
andl
mov
inc
push
sbb
pop
jno
inc
ret
repnz
and
daa
pop
xchg
pop
push
fcmovnb
jmp
xchg
jnp
cmpsb
scas
dec
jns
cmp
adc
stos
repnz
dec
jns
and
sbb
fs
inc
pusha
mov
test
xchg
mov
jbe
inc
jge
fbstp
pop
fbld
pop
rorb
add
push
aad
jbe
sbb
adc
dec
add
test
imul
push
push
iret
xor
call
push
cs
lods
dec
inc
sbb
mov
test
or
inc
sbb
ljmp
cmpsl
mov
dec
xchg
imul
daa
and
ss
push
out
push
sub
push
dec
push
inc
mov
lret
iret
out
iret
mov
mov
mov
mov
out
cmp
nop
pop
jp
pop
jns
sub
cs
loop
push
fidivrl
jecxz
popf
insb
imul
push
mov
pop
shrb
pop
cltd
bound
into
mov
nop
mov
and
addr16
sbb
mov
jb
popf
sbb
enter
fs
push
xchg
scas
or
push
mov
test
ja
lcall
sbb
andl
xor
mov
or
mov
fcoms
mov
scas
lods
shlb
xchg
xchg
aam
jbe
pop
out
mov
sahf
pop
xchg
scas
dec
fisubl
sbb
mov
pop
pop
pop
push
je
xor
ja
scas
sahf
imull
mov
arpl
jmp
cld
xor
imul
mov
sbb
aad
lahf
pusha
js
jge
fstl
test
fistpl
scas
mov
aam
loop
je
push
mov
push
fnstcw
shl
mov
icebp
enter
imul
fidivrs
mov
sbb
aas
jp
sbb
or
ret
negb
mov
aad
cmc
mov
push
fcomps
fwait
test
mov
ror
es
pop
dec
inc
mov
sub
sub
push
push
int
jg
stos
lahf
gs
jnp
and
das
fnsave
push
rorl
push
sub
pop
jmp
mov
mov
and
or
mov
and
scas
xchg
sub
push
arpl
xor
xor
mov
popf
dec
inc
adcb
loop
sbb
pop
jb
pop
je
pop
test
bnd
addr16
pushf
push
js
loopne
imul
pop
outsl
iret
into
into
dec
imul
mov
sub
out
inc
xor
adc
dec
std
inc
pushf
xchg
mov
jo
outsb
lahf
pop
and
outsb
sbb
lea
sbb
mov
jb
inc
lret
pop
stos
and
push
adc
test
fwait
push
fbstp
adc
ljmp
inc
pop
roll
dec
add
insb
pop
movsb
mov
popa
mov
push
inc
sub
ficoml
cld
pop
orb
nop
arpl
cmpsl
cmp
xchg
aas
loop
mov
mov
mov
lock
in
dec
dec
lods
inc
inc
jae
mov
mov
add
pop
ret
or
arpl
xor
add
xchg
pop
xor
das
jne
dec
pop
je
and
ds
fcmovnb
cmp
jg
mov
fbstp
xor
dec
jno
pushf
push
adc
push
xlat
shlb
cmp
out
and
popf
jo
out
loope
mov
imul
inc
mov
fs
fldcw
add
xlat
scas
daa
cltd
cmpsl
lret
lret
fiadds
loope
pop
or
cmp
push
fwait
or
std
aaa
int3
ljmp
mov
sbb
mov
mov
add
sahf
push
and
cmp
or
ret
cltd
stos
pop
sarb
pop
push
ja
cmp
xchg
out
xor
xor
test
cmp
and
lea
sub
or
dec
inc
popa
fistl
or
lret
cmc
sub
mov
cwtl
in
rclb
xor
outsl
ret
jle
mov
loopne
sub
test
je
push
ficompl
inc
ja
insb
cmp
out
popa
inc
add
leave
jp
mov
daa
mov
push
jnp
dec
mov
in
outsl
stos
mov
cltd
add
imul
js
int
fbld
pop
pop
jnp
ss
sbb
or
mov
popa
lcall
fcmovbe
or
stos
lods
int
mov
pop
arpl
dec
xchg
cmp
pop
js
lret
push
sub
mov
mov
out
test
jp
aam
fs
push
stc
add
add
sbb
bound
adc
push
push
jae
dec
push
jl
mov
mov
push
jmp
jo
test
inc
in
add
sub
pop
aaa
pop
cmp
push
loop
and
lcall
jae
inc
into
aaa
loope
cmp
lods
sub
fidivs
pop
fstpt
dec
rclb
ret
mov
shlb
dec
jp
into
out
or
out
movhps
inc
pop
adc
enter
inc
sbb
stc
adc
shlb
test
or
loopne
ret
fistpl
mov
fcmovbe
push
mov
out
push
lcall
pop
fcmovnbe
xchg
inc
dec
test
xor
aad
push
rcrb
sub
add
or
out
pop
push
fcmovnu
int
sub
dec
jo
adc
cmpsb
and
cwtl
call
sbb
mov
xor
mov
jg
add
mov
jecxz
andl
iret
inc
mov
loope,pt
cmp
mov
pop
lret
fdiv
aaa
lds
int3
test
inc
test
or
add
cwtl
inc
inc
pop
testl
push
inc
sub
repz
test
mov
sarl
xor
jnp
popa
test
push
bound
add
lcall
cmpb
in
sbb
dec
inc
or
or
dec
dec
cmp
and
or
lea
movsb
adc
jae
mov
jmp
imul
cmp
test
fwait
pushf
jecxz
je
loope
push
fimull
mov
testb
into
cld
xor
fwait
and
movsb
pusha
jecxz
mov
jl
sbb
repz
sbb
push
loop
dec
cmpsl
loopne
pop
rolb
in
and
sub
aas
or
mov
and
test
pop
sbb
cmp
xchg
xchg
xor
ss
or
push
add
dec
sbb
mov
fildl
je
or
nop
in
out
movsb
rorl
add
mov
adc
sbbl
cmp
push
arpl
dec
scas
or
xor
faddp
xchg
or
sbb
pop
dec
ljmp
push
push
or
outsb
inc
ds
das
push
inc
jno
sbb
or
dec
mov
push
jg
ljmp
lods
insb
pop
push
dec
inc
jp
adc
xchg
jecxz
adc
inc
or
xor
add
and
cmp
scas
jge
jo
into
mov
insl
mov
and
mov
je
aad
xor
add
or
fidivrs
fsubrl
mov
sbb
mov
adcl
jl
dec
mov
mov
in
mov
xor
adc
in
mov
cmc
pushf
shll
subb
ret
pop
jb
sub
and
add
aad
addl
xor
xor
fildl
lahf
jl
dec
push
rcr
add
cld
mov
bound
out
fistl
xchg
dec
jno
orb
repz
int3
out
jle
jg
jbe
mov
pop
fnstcw
mov
mov
mov
sbb
pop
jmp
adc
bound
adc
mov
inc
or
test
insl
dec
mov
xchg
cmp
test
ret
pop
insl
inc
int3
lock
dec
sub
imul
dec
cli
add
dec
push
sub
and
fcoml
movb
js
pop
jne
stos
xchg
pushf
test
or
mov
cmp
sbb
push
mov
into
cmpsl
pushf
cmp
dec
mov
outsb
sbb
subl
ja
jl
inc
sub
das
lret
in
jmp
enter
xor
repnz
aaa
cwtl
lahf
int3
dec
jp
inc
mov
pop
imul
in
outsl
cmp
sub
pop
push
ret
lret
jne
dec
sub
jo
or
movsl
insl
dec
loopne
sub
pusha
stc
dec
aaa
shll
loope
test
fninit
insl
ficoms
or
jbe
leave
sbb
std
mov
dec
push
xor
inc
xchg
mov
jne
pop
cli
scas
cmc
xor
mov
lock
or
pop
inc
fnsave
adc
ret
fbld
sbb
mov
push
or
and
pop
in
cmpsb
or
add
scas
or
mov
cmpsb
stos
in
fiadds
or
loopne
std
out
xchg
shlb
and
add
push
in
push
cmp
mov
fs
fisubl
scas
inc
add
inc
fsubs
lret
call
inc
bound
push
mov
sub
daa
in
lock
sbb
or
shrl
cli
push
sub
das
pushf
mov
add
aas
pop
insl
loopne
xchg
xor
int
scas
ficoml
jne
data16
adc
sti
cmp
aad
nop
test
das
sub
ret
stos
fimuls
ffree
lcall
insb
jmp
xchg
cmpsb
mov
lret
scas
loop
inc
movsl
push
je
inc
dec
pushf
test
stos
sbb
jg
jmp
repnz
sbb
out
pop
jb
adc
inc
push
or
dec
fstl
enter
push
sub
xchg
out
mov
mov
xchg
fnstenv
add
scas
jle
mov
in
lock
cs
fcmovu
in
add
ret
lea
jno
clts
mov
scas
cmpsb
mov
aad
and
mov
sarl
movsb
jmp
cmp
push
push
adc
adc
gs
or
jmp
cs
adc
ret
sub
dec
mov
inc
lock
cwtl
fwait
inc
cmp
scas
das
push
adc
nop
int
jmp
pushf
cwtl
sub
icebp
sti
mov
adc
outsl
imul
pop
nop
or
adc
pop
decb
jecxz
jle
jb
push
sarl
cmp
and
sbb
cmp
clc
mov
loopne
lods
adc
sti
aaa
xor
sub
into
mov
mov
add
outsl
cld
insl
adc
push
inc
xchg
inc
push
outsl
pushf
shll
mov
push
nop
inc
sub
pop
xchg
lret
lea
sub
stos
xor
out
mov
loope
loop
ret
hlt
add
jmp
xor
insl
fistl
pop
jecxz
xor
lods
inc
cs
inc
mov
mov
adc
and
jbe
mov
push
in
xchg
sbb
xchg
xchg
test
inc
cmp
adc
nop
lock
mov
int3
sar
ret
cmc
in
add
xchg
cmp
aam
mov
adc
dec
ja
repnz
jb
fisttps
push
mov
aam
test
mov
jno
inc
pop
aad
add
movsb
pop
cmp
imul
je
push
rcll
rcrb
mov
scas
mov
loope
out
dec
dec
or
sub
add
push
or
addr16
sbbb
xor
loope
jne
std
insl
push
sbb
ret
pop
fcoms
cmp
fisubl
popf
subb
inc
shlb
and
cmp
rclb
inc
jg
and
nop
push
and
out
int3
xor
sbb
jnp
pop
adc
test
inc
shl
ret
mov
lret
add
fmull
sti
inc
insb
lret
aaa
icebp
mov
sarb
dec
xorl
rcl
or
arpl
lret
lods
mov
bound
dec
push
iret
sbb
adc
xchg
sbb
inc
add
adc
lcall
das
xchg
aaa
mov
mov
adc
push
fistpll
sbb
inc
mov
lret
shll
sub
and
leave
xchg
push
add
cmp
pushf
adc
xlat
lods
cmp
push
aas
fwait
sub
fstl
lret
es
popa
jbe
ljmp
enter
adc
stos
aaa
cmpsb
lcall
inc
adcb
sbb
push
xchg
and
pop
testl
pop
icebp
lods
imul
pop
push
mov
dec
shll
scas
push
mov
sbb
insl
cltd
jp
inc
or
fstpt
loopne
dec
dec
xor
loop
movsb
ja
mov
ja
int
sub
push
fisubrs
je
xchg
and
sub
gs
scas
and
hlt
in
rep
xchg
cmp
clc
arpl
push
jbe
dec
sub
xor
clc
leave
mov
xchg
es
mov
outsb
iret
sar
adc
cmpsl
mov
ljmp
push
xor
push
and
rol
cmpb
mov
jns
dec
lods
cld
push
cs
shrl
mov
mov
rclb
sbb
mov
test
pop
sub
stc
int3
dec
push
or
dec
es
inc
rcr
mov
js
jnp
fadds
add
inc
test
xchg
shrb
lods
xchg
or
xchg
xchg
insb
pop
stos
push
mov
loop
sbb
xchg
dec
inc
movsb
cmp
adc
les
add
xchg
xchg
inc
filds
push
popf
ss
mov
dec
pop
jle
fadds
pop
sbbb
daa
pop
push
mov
cmpsl
mov
xor
mov
xor
test
stos
inc
jnp
jmp
popa
push
push
xchg
lods
cmp
mov
das
inc
push
les
sbb
shl
loopne
pop
and
rorb
push
call
jle
fwait
cs
jns
in
test
cltd
xor
sbb
iret
nop
lea
mov
jl
jmp
lds
ljmp
lret
cmp
mov
mov
daa
nop
ds
mov
xor
stos
xchg
movsl
call
or
insb
sbb
shrl
inc
pop
sub
cmc
inc
sub
mov
inc
mov
and
push
jae
push
in
dec
call
jg
sub
dec
ss
pusha
mov
stc
sub
adc
test
enter
mov
jns
mov
cltd
or
aas
dec
add
cmp
xor
mov
push
fsubrl
aas
sub
jp
scas
mov
cmpsl
mov
mov
out
xor
std
cld
loopne
cmp
add
mov
xchg
mov
popl
movsl
fstpl
clc
hlt
pop
cmp
in
pop
xor
ja
add
rcll
bound
adc
ds
movl
dec
add
jp
in
mov
test
push
repnz
out
cli
ret
cmp
mov
in
scas
loop
inc
mov
or
in
popa
movsb
add
test
stos
je
or
inc
xchg
shlb
fnstcw
fiaddl
vrsqrtss
and
xchg
xor
mov
in
neg
in
jl
insb
pop
testl
sarb
sub
rcrl
test
xchg
aad
mov
bound
mov
inc
adc
out
fadd
dec
jmp
dec
dec
sub
and
and
int
inc
xchg
mov
jne
lret
jnp
cltd
sbb
js
dec
sub
popf
adc
fcmovnb
sub
popa
push
int3
aas
xchg
xchg
pop
push
mov
mul
lea
fisttpl
inc
out
loope
repz
icebp
or
xchg
test
inc
mov
cltd
pop
sbb
mov
call
aas
jle
stos
or
dec
jl
repnz
fcoml
popf
xchg
arpl
pushf
dec
sahf
pop
sbb
ds
push
fistl
add
or
pushf
cmp
dec
stc
in
cs
sti
jecxz
std
subl
pop
in
and
mov
push
aaa
sarl
imul
pop
sbb
add
filds
fmul
xor
pop
adc
mov
lods
or
dec
jne
cmc
and
xor
ror
call
popa
mov
test
mov
shlb
or
and
into
jnp
fstpt
cmp
cmpsl
in
js
sub
or
push
shr
xchg
in
fldt
ja
es
shl
adc
sub
jge
scas
inc
pop
mov
mov
sbb
out
sbb
icebp
xor
test
sti
xor
mov
xlat
cld
and
push
jle
jns
movsb
jae
call
scas
cli
inc
mov
daa
sbb
das
mov
jge
nop
jne
inc
js
int
lret
cmp
push
shr
cmp
adc
jo
mov
les
inc
push
push
cmp
ja
outsl
cmp
in
cld
scas
sbb
cli
or
mov
mov
push
dec
jecxz
jge
aas
lds
loope
sub
lock
adc
add
jne
movsb
xchg
mov
test
and
test
push
cmc
and
cmpsb
out
lods
jbe
or
or
fdivs
nop
mov
jl
sub
jae
pop
dec
gs
pop
push
jno
cmp
sbb
jno
and
loopne
paddd
mov
rcrl
fsubrp
mov
fs
scas
aam
jg
ficomps
in
cmpsb
mov
stos
cmp
pop
mov
int
or
pushf
cmp
cmpsl
std
vmwrite
scas
stos
nop
push
and
adc
outsl
and
arpl
cmp
lea
cmc
cmpsl
inc
xchg
aad
inc
push
mov
idivb
or
rclb
cwtl
ret
mov
mov
aaa
xchg
dec
lahf
leave
scas
push
jns
and
sub
pop
hlt
call
dec
rclb
sbb
imul
rorl
xor
cmp
push
outsl
or
shlb
and
cmp
jg
cmp
mov
pop
mov
adc
rcrb
cmpl
lods
adc
out
test
enter
mov
or
sbb
les
sti
jl
test
push
int3
hlt
outsl
inc
xor
inc
sub
outsl
jae
decb
and
lret
add
les
lcall
adc
in
out
sub
test
dec
cmpsl
cmp
dec
lock
cmp
mov
dec
push
loop
mov
pop
nop
push
lea
mov
ficompl
mov
jae
es
jecxz
push
mov
cmc
jnp
dec
sub
or
into
ds
data16
lcall
jns
fcoms
rorl
mov
ds
fidivrs
test
ud2
push
xchg
fidivl
cmp
js
jno
mov
pop
movl
test
jl
leave
add
xchg
frstor
lods
outsl
aad
mov
js
mov
rolb
mov
or
lods
outsb
je
mov
ret
adc
inc
mov
icebp
pop
mov
push
xchg
mov
mov
and
aaa
dec
mov
xchg
daa
mov
scas
sahf
xchg
popa
std
cmp
dec
sysenter
adc
mov
xor
out
fwait
inc
test
pop
jmp
icebp
inc
lea
insb
xor
mov
xchg
dec
sbb
test
push
lcall
es
mov
pop
movhps
xchg
dec
jbe
out
mov
cmpsl
test
mov
ss
jno
rclb
xchg
or
cltd
out
pop
or
enter
int3
and
fisubs
jo
push
aad
mov
adc
mov
or
cli
dec
data16
fimuls
leave
aaa
js
popa
clc
les
inc
dec
repz
pop
test
insb
adcb
push
in
dec
div
movsb
aad
xchg
push
mov
dec
loop
xchg
or
cmp
adc
scas
repz
sbb
pop
xchg
rorl
and
xchg
xchg
shlb
inc
jg
fs
dec
dec
push
add
dec
mov
addr16
mov
jno
stos
mov
arpl
cmp
into
outsb
pop
icebp
je
imul
adc
mov
aas
es
mov
insb
cmpsl
jge
mov
out
jnp
fisubrs
dec
fcmovu
fimull
push
push
and
ret
cli
cld
cmpsb
aam
or
add
out
scas
mov
fs
add
adc
fists
dec
addb
and
out
stos
test
mov
pop
cmp
js
repz
out
rcl
push
sbb
fstpt
fnstenv
push
add
push
sbb
inc
stos
dec
jns
daa
cltd
jecxz
mov
nop
sbb
aad
sti
fcoms
adc
xchg
push
and
mov
out
and
sahf
adc
imul
ds
adc
enter
cmpsb
add
adc
lods
out
stos
test
cmpsb
or
push
xchg
pop
or
xlat
jns
sar
sahf
imul
xchg
add
xor
and
aad
and
and
cmp
lcall
sahf
sbb
iret
push
mov
cld
mov
stc
jge
mov
sbbb
jne
inc
notl
in
cmpsb
inc
xor
mov
mov
cmp
divl
scas
clc
and
xchg
mov
rcr
setbe
adcb
in
pop
ljmp
jl
movsl
mov
cmp
push
add
and
dec
mov
mov
mov
loop
enter
jl
push
cmpsb
fwait
sbb
mov
add
cld
pop
stos
push
xchg
jl
pop
pop
data16
push
mov
pop
imul
std
and
xchg
mov
pop
and
pop
xor
les
addb
pop
scas
fwait
sbb
out
or
dec
lcall
xchg
pusha
mov
ljmp
gs
lods
or
cli
mov
rcrb
xchg
aaa
fnsave
enter
mov
xor
lock
ret
jbe
ficoml
adc
pop
std
daa
dec
aas
mov
xchg
shrl
xorb
pop
mov
dec
adc
rcr
push
and
and
lcall
fidivs
adc
les
push
andb
xorl
dec
aas
cmp
pop
shl
xchg
sbb
repz
call
fcmovne
aaa
fidivl
lds
inc
mov
pop
jbe
out
pop
cwtl
and
sub
xchg
cli
dec
add
cmp
pop
pop
mov
loopne
stos
arpl
mov
pusha
loope
jmp
push
sub
xchg
fsub
ds
int
das
jae
inc
in
or
inc
pop
fcompl
xor
and
push
dec
jns
ds
mov
adc
mov
inc
imul
push
cmp
fs
or
ret
adc
daa
adc
sbb
adc
mov
inc
mulps
add
icebp
or
push
test
adc
sub
xchg
lcall
ss
push
mov
jo
add
aad
insl
je
adc
mov
lds
add
mov
cmp
jnp
addr16
scas
cmp
cmp
test
push
stc
mov
xchg
jge
lcall
xchg
cmpb
inc
add
push
test
inc
sub
adc
aad
call
lcall
adc
out
movsl
add
subb
sbb
xor
xor
cmp
stc
jbe
push
add
xor
or
mov
mov
and
js
inc
push
fdivrl
jle
push
iret
sbb
or
mov
mov
push
mov
mov
dec
jecxz
ss
loop
movsb
inc
pop
out
cmpl
xchg
add
jns
sarl
pop
push
sbb
and
aam
mov
mov
and
xchg
and
ret
mov
or
test
jb
fisubrl
push
adc
mov
pop
ror
cmp
sub
jge
popf
pusha
int
cli
subb
sbbl
mov
in
das
out
fwait
jg
mov
lea
xor
test
inc
xchg
ljmp
jo
fnstenv
arpl
call
adc
jno
inc
jne
aam
out
loope
jecxz
xchg
jl
mov
xorb
xor
sbb
dec
ds
cmp
jns
mov
arpl
ficompl
pop
cmc
xchg
insb
and
fidivrs
push
test
in
hlt
sub
or
mov
or
mov
stos
cmp
scas
fyl2xp1
lea
sbb
sar
mov
clc
jmp
leave
jmp
nop
lock
mov
repz
or
mov
adc
out
mov
icebp
clc
fcompl
aaa
cltd
cmp
cmpsb
sarl
jle
xor
dec
sbb
xor
pop
loope
mov
sbbb
enter
cmc
push
xchg
aad
cmp
and
lahf
orl
addr16
pop
jl
xchg
dec
jno
pop
cmp
das
movsl
xchg
dec
adc
leave
and
shlb
pop
add
push
mov
sarb
adc
and
inc
dec
sahf
cs
ljmp
loop
sbb
xchg
call
in
jecxz
adc
insl
push
mov
sub
sub
into
mov
sub
xchg
sbb
inc
aad
cmc
lret
pushf
bnd
cmpsb
xor
sti
sbb
repz
movsl
push
imul
push
cmp
lcall
lahf
decb
scas
les
dec
jle
repz
ljmp
cmc
aad
push
shr
xor
bound
shlb
test
testb
notl
or
inc
test
test
stc
std
fstpl
mov
stc
xchg
add
pop
pop
fnsave
and
and
inc
rolb
outsb
sub
pop
jle
inc
mov
adc
lret
inc
dec
mov
pop
mov
adc
cld
pop
hlt
cmp
mov
jl
incb
les
xchg
adc
and
aam
xchg
dec
lock
rcll
mov
mov
or
mov
std
int
testl
xor
ret
inc
push
into
mov
inc
mov
lret
and
mov
aas
loop
cmp
iret
enter
push
dec
sahf
incb
or
adc
jecxz
mov
sbb
out
mov
sahf
pusha
ds
xchg
mov
bound
jne
cmp
enter
les
nop
fsubl
in
jae,pn
movsb
push
cli
inc
out
inc
jns
js
and
jle
loopne
imul
push
sbb
adc
imul
cmp
pop
lret
loop
daa
stos
ficoml
aaa
mull
scas
xchg
out
mov
mov
stos
insb
je
jne
sbb
pop
mov
fidivrl
outsb
and
stos
out
hlt
stos
pop
aas
pop
jle
push
add
mov
add
loopew
add
scas
ja
in
icebp
aaa
and
in
lods
pushf
rcrl
js
fs
lret
jecxz
in
xor
jo
mov
sub
ret
and
inc
xchg
and
sarl
xor
xchg
xor
jmp
mov
ja
inc
ja
adc
jae
inc
xchg
cmpsb
cmp
jbe
adcb
xchg
add
jle
fwait
xlat
xor
rol
test
daa
add
jno
into
adc
fcomps
ret
popf
arpl
or
and
dec
js
and
fbstp
shlb
fiaddl
xchg
imul
cmp
mov
test
xor
popf
add
out
or
jo
push
inc
mov
push
arpl
sbb
jno
imul
mov
and
divl
call
fadds
jge
pop
fsts
xchg
sbb
push
pop
cmp
mov
sub
dec
ja
sbb
lret
movlps
lret
adc
imul
xor
xchg
sbb
popa
scas
repnz
repz
xchg
ret
ficompl
popw
pop
xor
test
rcll
inc
loop
daa
jp
mov
fcompl
adc
data16
stos
sub
sahf
sahf
inc
mov
jno
jl
or
dec
aaa
rolb
mov
lea
and
leave
test
and
jle
pop
scas
cmp
mov
mov
xchg
inc
cmp
rcrl
jge
mov
jne
addr16
jp
mov
mov
imul
push
scas
sub
mov
push
sub
adc
repz
call
pop
mov
inc
or
fldcw
mov
mov
in
out
add
xchg
aas
popf
jbe
jmp
out
pushf
lret
clc
jbe
icebp
call
xor
pushf
scas
leave
sub
dec
stos
jge
push
mov
pop
ds
sti
or
fcoml
test
leave
dec
nop
lds
in
jno
push
pop
sbb
hlt
pop
and
ja
jne
icebp
jp
pusha
fisttps
call
jle
ret
outsb
dec
cmpsl
mov
jns
sub
ds
and
cltd
push
sbb
popf
xor
test
mov
jnp
lds
pusha
inc
mov
jmp
mov
repnz
fcompl
testl
pop
setno
pop
mov
mov
out
pop
xchg
push
mov
and
and
cmp
hlt
jle
inc
mov
decb
cmp
xor
cmp
andl
fiaddl
pop
les
xchg
pop
out
push
shll
mov
xchg
fadd
or
test
jge
fs
inc
popl
sub
aaa
dec
sbb
lds
loopne
xchg
jne
es
xchg
jl
out
xchg
outsb
imulb
lds
xchg
out
ja
out
and
mov
xor
aaa
xchg
mov
stc
mov
rclb
or
aam
test
and
push
cmpsb
je
aas
cmp
xor
ljmp
pop
xchg
mov
add
push
mov
out
fldt
in
mov
mov
push
cmp
xchg
hlt
stos
mul
mov
je
adcb
inc
or
push
mov
dec
cmp
not
lcall
xorb
jl
pop
fmulp
xchg
mov
je
mov
adc
push
mov
mov
add
push
mov
sub
mov
roll
mov
aas
add
pop
cmp
in
test
jg
ss
pop
add
std
lds
daa
sbb
js
das
jge
insl
or
and
enter
shrl
shrb
sti
or
cmp
add
push
in
iret
out
shl
pop
jp
sbb
popa
in
cmp
inc
or
repz
jle
pop
sti
xor
add
lea
cmp
mov
mov
iret
xchg
aad
stc
sbb
xor
movsb
cmc
pushf
ja
imul
mov
mov
mov
mov
in
pop
jnp
mov
pop
or
fidivs
jns
jecxz
push
sbb
pop
repz
pop
in
nop
rolb
mov
out
mov
loop
std
pop
jbe
push
add
push
dec
movsb
aam
sbb
adcl
data16
adc
dec
jg
cwtl
add
clc
insb
in
shrl
push
stc
pmaxsw
ret
call
lods
xlat
sbb
insb
lea
fimuls
iret
or
and
pushf
xlat
mov
lock
call
jg
inc
fs
ret
pop
cwtl
xchg
cmpsl
out
xor
decl
cmp
and
push
push
xchg
jge
pop
lods
or
sub
xchg
mov
cli
add
loopne
outsb
addr16
pusha
into
add
insl
les
bound
or
shld
lahf
push
adcl
testb
or
and
pop
xchg
arpl
and
xor
mov
aaa
iret
out
dec
cmp
pop
add
out
cmp
xlat
jne
addb
sbbl
inc
mov
pop
ds
ss
push
add
enter
sbb
in
add
adc
insb
shll
sbb
data16
das
push
mov
test
insl
xlat
inc
out
mov
je
and
in
add
arpl
jno
cmp
insl
es
incb
mov
push
cmp
cmp
inc
std
hlt
stos
imul
out
outsb
mov
das
arpl
cmp
lahf
jg
scas
jg
aad
ficoms
icebp
add
or
imul
jle
mov
repz
push
sbb
ret
into
adc
adc
or
arpl
xchg
xor
cwtl
imul
pop
push
nop
ljmp
sub
test
nop
and
pop
push
mov
dec
punpckhbw
inc
loopne
lcall
jae
mov
sub
movsb
inc
imul
sbb
pop
push
icebp
test
xor
popf
out
cltd
pop
push
jl
cmp
push
push
push
cwtl
movsl
push
inc
out
orb
out
cmp
sbb
cmc
test
pusha
sbb
dec
lret
or
cmpl
xchg
out
and
shrl
in
mov
jno
fwait
mov
insl
sub
jb
outsl
out
mov
aaa
push
jle
pusha
adc
and
loopne
repnz
ret
loop
hlt
cmp
in
hlt
and
add
jnp
mov
aad
frstor
loope
mov
outsb
push
movsl
daa
pop
scas
pusha
jnp
iret
hlt
lret
sbb
nop
fldenv
popf
cmp
xchg
repnz
cwtl
icebp
sbb
sahf
out
pop
sbb
and
mov
sbb
in
or
out
in
pop
insl
jns
icebp
sti
adc
ja
repz
outsb
sbb
inc
sti
pushf
jns
adc
movsl
pop
mov
imul
es
xor
jl
jne
mov
push
jl
add
push
pushf
mov
mov
xorl
mov
cmp
addr16
adc
push
mov
push
push
mov
mov
movsl
hlt
pop
pop
sub
jb
mov
or
inc
pushf
add
push
or
outsb
mov
int
loope
int3
loop
mov
insb
mov
mov
out
push
xor
cld
jmp
sub
mov
mov
mov
push
rorl
cmp
filds
rcl
adc
cmp
rclb
nop
fists
add
xor
push
sbb
ja
cld
add
add
call
pop
jnp
fbld
scas
lock
adc
add
test
popf
fs
mov
jge
out
inc
aaa
add
sarb
dec
mov
mov
cmp
cwtl
out
enter
sub
sbb
jnp
test
push
jo
jecxz
repnz
aam
lahf
mov
inc
fnop
lock
mov
sub
les
mov
sbb
or
and
ja
pop
jge
int3
popa
pop
ret
xor
dec
es
aaa
cld
jmp
adc
stos
cs
push
pop
mov
adc
cmp
data16
leave
jle
call
mov
iret
push
lret
cmpsl
mov
jle
out
and
dec
ret
add
stos
lahf
jmp
push
out
xor
cwtl
fadds
imul
xor
or
sahf
cld
sbb
inc
mov
xlat
cmpsl
roll
enter
or
lahf
scas
or
test
xchg
repnz
in
cmp
xor
test
int
mov
lret
sbb
pop
push
fs
scas
add
roll
sti
dec
in
cmp
mov
mov
jle
sbb
jo
sti
test
inc
jmp
out
mov
jne
jle
call
inc
inc
sbb
jg
xor
push
fcoml
je
je
cltd
push
mov
fisttps
mov
xorb
xchg
pop
mov
dec
ret
test
cmp
sbb
mov
out
and
je
cmpsb
jbe
pop
cmpsb
inc
mov
orb
cmp
jl
imul
imul
or
xlat
cmp
popa
mov
mov
xchg
pop
das
fwait
cmp
cwtl
dec
mov
sbb
mov
pop
jle
lret
subb
dec
xchg
fmull
dec
loopne
adc
xchg
je
iret
movsl
pusha
in
xchg
dec
dec
xlat
jns
pop
es
cs
cmp
or
fwait
aam
xchg
popf
pop
movsb
pushl
movsl
cmpsl
movsl
jle
xor
jp
sub
lods
outsb
js
xor
adc
shlb
rol
loopne
push
or
xor
adc
popf
out
pop
lds
std
cli
pop
jge
push
jle
push
enter
sub
push
pop
insb
hlt
dec
ret
and
jae
stos
mov
add
dec
push
push
dec
sub
inc
fistpll
mov
mov
mov
lods
pop
xlat
sub
cwtl
dec
imul
jo
inc
fildl
sub
xor
in
in
jae
mov
loope
pop
shrl
fsts
outsl
loope
cmp
jns
pop
adc
popa
repnz
int3
arpl
loop
dec
or
jle
rcl
xchg
xchg
lds
fisubrl
shr
out
mov
arpl
mov
mov
jg
into
mov
cs
cmp
and
negl
mov
jnp
stos
das
jb
and
dec
xchg
mov
pop
mov
das
imul
imul
or
sbb
clc
or
lds
cwtl
or
incb
ds
repz
fcomps
outsl
loope
ja
fs
adc
jbe
push
std
jg
xor
subl
out
mov
sti
push
in
xor
ret
sbb
adc
das
add
sub
hlt
pop
jnp
sbb
push
adc
adc
mov
insl
push
pop
andl
outsb
cmp
test
push
fildll
int
mov
xchg
mov
cmp
fwait
xchg
mov
pop
xlat
xchg
les
or
jg
into
loopne
sahf
sahf
call
jg
xchg
or
popf
mov
push
xorb
mov
sub
add
fstpt
xor
cmpsb
xor
mov
mov
js
shl
dec
ret
jns
adcb
and
xsha1
cmpsb
int3
or
into
in
xchg
ja
sub
sub
loopne
sub
imul
lods
mov
fcomip
addr16
dec
pushl
pop
out
push
dec
adc
lahf
ret
add
cmpsl
sahf
and
int
orb
xchg
out
idivb
sbbl
mov
sbb
sti
jle
test
out
dec
jmp
jb
dec
push
jno
pop
test
sbb
jl
fcomps
cmp
fldcw
out
mov
fistps
mov
data16
jbe
pop
aaa
jmp
test
daa
imul
add
cmp
ljmp
xorl
inc
shlb
addr16
dec
pop
dec
or
stos
mov
std
pop
lods
adc
push
xor
lods
jmp
test
pop
add
insb
xlat
mov
xor
cmp
lods
lds
sbb
push
jge
cwtl
jmp
add
int3
test
inc
je
xor
mov
mov
pop
mov
fs
jb
xorb
pop
cmp
mov
xchg
cwtl
lret
pop
cmc
adc
dec
push
xlat
mov
rolb
mov
xor
repnz
xchg
je
cs
push
out
dec
pusha
pop
and
jnp
int
dec
mov
aas
mov
icebp
data16
mov
scas
call
decl
rorb
or
int
sahf
ljmp
xchg
les
jl
and
rcl
pusha
push
arpl
add
jg
dec
ja
mov
in
lock
dec
cmp
adc
push
pop
cmp
dec
pop
sbb
sub
sbbb
pop
push
dec
mov
or
test
xchg
add
les
repnz
or
xchg
mov
cmp
cmp
mov
call
fisubs
xchg
scas
pop
inc
pop
push
icebp
mov
cli
test
mov
mov
popa
shll
pop
aas
push
or
mov
sbb
sbb
pop
aas
and
xchg
pop
pop
pop
jge
test
in
shlb
xchg
xchg
scas
jae
and
jae
jg
push
push
movsl
nop
stos
out
sbb
or
add
pop
outsb
or
mov
inc
push
mov
sbb
insl
pop
dec
sub
shrl
dec
shlb
testl
push
and
jl
rorl
shll
jecxz
pop
inc
loop
inc
inc
aam
ds
cmpb
shll
shlb
mov
pop
pop
inc
dec
pop
sbbb
outsb
pop
inc
pop
pop
inc
push
gs
mov
stos
test
mov
push
subl
mov
jb
xchg
sbb
int3
aam
test
cmp
dec
icebp
imul
cmp
inc
shrb
loop
hlt
mov
stos
mov
xchg
xchg
mov
aaa
lods
jmp
sti
push
xor
jecxz
adc
andl
jp
hlt
stos
push
cmpsb
mov
xchg
xchg
inc
bound
loop
and
aaa
mov
enter
xlat
sbb
mov
add
jg
leave
mov
pusha
rcrb
mov
lahf
jb
sbb
scas
mov
loopne
inc
push
test
aas
mov
or
hlt
and
and
adc
push
xchg
xchg
push
loope
inc
push
gs
ret
insl
das
xor
stos
pop
sbb
push
lcall
loopne
pop
mov
in
adc
negb
out
and
lcall
add
or
in
lcall
xor
popa
add
scas
inc
cmp
mulb
cmp
ss
jl
adc
in
pop
enter
out
push
jo
mov
jle
popa
pushf
mov
mov
mov
xchg
jo
insb
test
in
pop
and
pop
out
push
push
jecxz
inc
arpl
and
pushf
ret
fiadds
mov
jnp
in
enter
add
hlt
add
ds
ja
push
push
add
movsb
leave
mov
cmp
jbe
stos
insb
push
filds
leave
int
dec
fldcw
testb
add
pop
jo
test
mov
test
lods
mov
add
out
mov
aas
xchg
and
mov
xor
pop
ds
adc
aad
neg
pop
sarl
lds
xchg
push
jp
add
int3
sbb
fcom
push
xor
pop
popa
mov
out
xchg
pusha
daa
xchg
sub
xchg
int3
cli
xchg
mov
dec
and
xchg
es
rolb
inc
and
int
scas
push
cmp
mov
into
in
push
cli
xchg
mov
and
xlat
pop
mov
setbe
or
shll
fs
push
ss
hlt
pushl
cs
jne
es
jae
add
jae
xor
gs
inc
add
cmp
mov
jae
mov
cmp
test
cmpb
dec
push
sbb
int
mov
jno
sub
mov
jnp
loope
push
scas
add
dec
add
push
bound
dec
adc
arpl
push
ljmp
adcb
jbe
fcoms
and
aaa
popf
mov
adcb
cmpsb
mov
cs
mov
lahf
jne
mov
mov
jle
jnp
xor
imul
rcr
inc
call
scas
rolb
fisubl
fstpt
das
daa
subl
xchg
iret
adc
adc
bound
xor
adc
in
jecxz
lea
imul
in
mov
ljmp
popa
fdivs
out
or
push
xor
xor
imul
fstps
xchg
out
xchg
stos
mov
mov
movsb
mov
cmp
xchg
into
add
movsb
aaa
pop
js
pop
inc
mov
lret
pop
xchg
mov
aad
push
push
sbb
or
je
fwait
mov
aad
pop
dec
pop
inc
loopne
adc
sbb
mov
push
loope
aaa
mov
jo
cmp
scas
mov
push
and
sub
cwtl
fstl
sbb
xchg
mov
inc
test
sub
fidivl
cli
imul
add
jge
lret
pop
movsl
aad
pop
repnz
adcb
ret
fadds
pop
xor
add
jnp
pop
xchg
mov
jle
xchg
mov
sbb
push
movsb
inc
and
jl
mov
adc
push
adc
into
xchg
int3
fisttps
arpl
adc
cmp
repnz
add
cmpsl
loop
jg
jno
popf
clc
add
bound
jbe
adcb
rcrb
xchg
imull
jg
mov
insl
cmp
fnsave
negl
lods
cmc
je
arpl
jg
test
add
int3
nop
push
mov
xchg
adc
popf
in
inc
xor
push
stos
and
inc
movb
pop
scas
aaa
cwtl
mov
jne
mov
int3
dec
jns
sbb
into
mov
dec
dec
mov
int3
mov
adc
andl
stc
inc
add
sbb
nop
push
inc
push
lods
fcompl
xor
mov
mov
imul
jns
ficoms
push
aam
fdivl
pop
cmpsl
jmp
fs
lcall
jle
test
dec
mov
dec
pushw
dec
es
popa
xchg
pop
ret
test
dec
jecxz
sbb
inc
clc
or
mov
pushf
out
gs
pop
daa
jae
dec
xchg
sub
xchg
jecxz
dec
cmp
mov
clc
in
xor
fistpl
add
call
mov
in
jns
or
xchg
sbb
xchg
xchg
andb
pop
xchg
pop
pushl
pop
loope
xor
push
cmp
ja
mov
fldt
inc
loopne
cs
fidivrs
div
jbe
ja
fisubl
pop
lea
dec
rorb
inc
jmp
xchg
xchg
lock
fs
cld
and
add
fs
xchg
and
xor
adc
test
add
leave
push
testb
push
pop
mov
movsl
jl
mov
sbb
lock
pop
sub
add
movb
mov
jno
clc
insb
int3
sahf
movsb
jno
dec
das
loope
aaa
mov
xchg
push
sub
sbb
stos
push
lahf
dec
fs
push
es
jb
fcoml
mov
iret
or
jmp
mov
dec
mov
iret
mov
sti
jle
and
into
xor
adc
loopne
cmp
je
or
inc
xor
sub
mov
sbb
push
imulb
jmp
pop
fs
jl
scas
out
mov
ljmp
fdivrl
aam
cmpsb
mov
or
dec
push
dec
fstpt
adc
mov
repz
or
inc
jge
xor
bound
addb
dec
mov
aaa
adc
insb
sbb
in
lret
lahf
aas
shll
stc
int3
xlat
lcall
lock
xchg
xchg
leave
dec
push
jns
cld
lods
bound
xlat
outsb
cmp
mov
clc
pusha
push
pusha
loop
ret
aas
in
push
mov
mov
nop
packuswb
mov
fwait
daa
pop
jmp
xor
stc
mov
xor
xchg
or
pop
out
dec
jnp
and
dec
push
xor
mov
pushf
push
push
notrack
cld
push
fcmovne
sahf
fbstp
sarb
inc
jae
out
mov
sub
test
sbb
or
repz
or
push
imul
std
cmpsl
les
mov
pop
jo
rol
cld
imul
cld
and
mov
or
add
push
xlat
out
insb
pop
cmp
fdivrp
imul
mov
dec
mov
pop
xor
pop
nop
jmp
push
gs
mov
adc
mov
fmull
fisubl
or
push
out
popf
and
mov
sub
ffree
mov
jbe
imul
cmpsb
lcall
into
xchg
cmpsb
aad
sbb
repz
repnz
imul
enter
into
add
adc
push
or
sub
mov
sub
xor
popa
dec
sahf
popa
outsl
and
pushf
or
sub
xchg
out
test
and
inc
shlb
orb
scas
inc
cmp
stos
mov
sub
and
test
pop
lock
nop
cmp
lods
rcl
adc
stos
repnz
movsl
push
stos
dec
int
cmp
cmpsl
test
cmp
gs
push
test
fistps
adc
push
es
subb
sub
cmpsl
jge
and
push
pop
and
aam
sarl
inc
ljmp
insl
popa
xor
xor
jg
adc
and
rcrl
jmp
mov
loope
aaa
adc
jl
les
std
push
icebp
xor
int3
in
sbb
cli
movsb
outsb
sarl
cwtl
js
mov
push
inc
and
and
aam
mov
dec
mov
repz
lock
lcall
in
test
mov
mov
push
popa
inc
push
addl
mov
or
lcall
mov
xor
aaa
push
jecxz
cmp
daa
rcrb
pushf
int3
mov
dec
adc
fwait
or
xorl
adc
sbb
mov
aam
hlt
or
out
sti
sub
cltd
dec
popa
and
shlb
les
test
push
mov
fld
push
jae
daa
out
sbb
push
loope
cmp
imul
jmp
stos
pop
mov
movsl
mov
jp
stos
pop
jge
sub
cmpsb
cmp
inc
sub
fwait
out
pusha
add
aas
mov
jnp
mov
rcr
sti
shll
lcall
push
xchg
fwait
stos
mov
lret
mov
jns
mov
sbb
sub
gs
xchg
repz
cs
xor
push
xor
pop
push
mov
add
cmp
jecxz
mov
inc
idivl
mov
pushf
leave
sbb
into
leave
push
jecxz
or
adc
xor
mov
sbb
es
leave
shl
les
lret
xlat
shl
sbb
pop
negb
sub
add
pop
xor
inc
and
pop
and
cs
insb
mov
loope
sbb
pop
fcompl
sub
stos
cmc
sti
adc
cmpsb
test
test
xchg
sahf
dec
mov
test
das
in
adc
aas
jbe
inc
dec
pop
pop
mov
aaa
sbb
movsb
inc
pop
push
jo
daa
mov
push
mov
incl
sub
pusha
mov
mov
pop
lret
test
xor
jg
dec
imull
inc
pop
mov
and
mov
cmp
pop
into
and
cmp
sub
in
lea
mov
gs
bnd
push
jmp
and
pop
add
sbb
sbb
aaa
ds
pop
loope
jns
pop
leave
jne
pop
test
xchg
sbb
imul
pop
popl
sub
and
lcall
xor
andl
rcr
inc
or
jge
ss
pop
mov
bnd
fistl
leave
outsb
jne
cltd
mov
pop
ljmp
cmp
arpl
lret
cltd
pop
inc
aaa
lods
push
mov
adc
jmp
jne
ret
iret
mulb
int3
ds
push
fiadds
mov
xor
xchg
push
xchg
jnp
je
sbb
scas
outsl
in
inc
jle
test
dec
imul
inc
ret
rcll
cwtl
inc
or
fs
ret
mov
or
pop
cs
jo
mov
mov
popf
jns
and
jb
pop
lcall
and
imulb
mov
xchg
pop
ss
mov
fsubl
or
fwait
sbb
inc
mov
fs
pop
test
jae
mov
mov
xor
push
insl
pop
aaa
out
adc
cmp
dec
das
iret
push
jecxz
lcall
xor
pop
icebp
push
lods
lcall
cmp
sub
daa
push
popa
clc
dec
lock
add
add
jbe
mov
aad
or
cmp
arpl
notb
mov
leave
pop
sarb
les
xor
in
stos
cmp
sbb
loope
int
jne
or
stos
fnstcw
mov
push
rorb
xchg
xchg
pop
inc
or
mov
dec
lock
jl
sarb
out
int
jp
jnp
inc
sahf
addr16
sbb
icebp
mov
mov
cwtl
dec
sbb
in
rcrl
sub
sar
loope
negl
pop
gs
mov
pop
fidivrs
cmp
adc
fwait
and
cld
ret
mov
loope
in
xor
sti
mov
inc
cltd
or
mov
lods
dec
iret
or
test
icebp
pop
jbe
xor
jbe
lahf
dec
add
push
and
adc
rcll
jge
mov
aaa
pop
out
mov
and
xchg
jp
es
test
mov
cs
adc
sub
outsl
jno
jns
inc
sub
mov
adc
jge
mov
dec
shll
xchg
push
pop
test
sbb
das
mov
mov
sbb
jno
aas
subl
jmp
out
loopne
cmp
pop
out
inc
mov
sub
add
mov
cli
rcrl
lret
cld
mov
andb
dec
mov
mov
es
shlb
or
mov
test
int
insl
xchg
push
xchg
push
sub
shll
xchg
test
pop
xor
faddl
addr16
sti
push
lret
es
std
mov
push
jecxz
push
ds
jno
aas
xor
or
add
or
aad
fistpll
mov
pop
cmp
cmpl
mov
and
insb
lods
pop
fisubs
shlb
sbb
repnz
sahf
pushf
sbb
sub
out
out
out
mov
cltd
lock
out
outsl
ja
lods
rep
inc
outsb
rcr
scas
or
jb
or
sub
nop
aad
out
stc
mov
xchg
test
popa
mov
addb
mov
cmpsl
enter
cmp
mov
movsl
cmova
mov
test
data16
shlb
lea
es
fwait
inc
xor
xchg
leave
xchg
cmp
divl
cmpsl
dec
fdivr
cmp
pushf
push
mov
pop
xor
subb
addr16
pop
ds
sub
xchg
fistpl
rol
inc
xchg
out
sub
dec
and
cmp
test
or
inc
or
add
outsl
cmp
cltd
fwait
lea
push
mov
out
in
lods
repz
fists
lods
or
jmp
xor
clc
mov
xchg
repz
mov
jne
xor
xchg
movsb
jl
push
xchg
cmpsl
jl
cmc
fs
mov
add
push
pop
jnp
fnstcw
aas
test
sub
pop
insl
test
fnstcw
sub
fldenv
jae
jecxz
mov
push
fldcw
es
loopne
xchg
aam
xchg
movsl
adc
loop
cmp
mov
fldpi
mov
loop
adc
enter
lret
call
out
or
rorb
push
jno
out
daa
enter
cli
add
jmp
inc
in
add
xor
subl
sub
jb
or
cld
lock
sbbl
adc
pushf
cmpsl
repnz
mov
inc
lret
xor
mov
aad
fiadds
or
add
lods
inc
fcoms
mov
xchg
xchg
leave
test
clc
mov
xchg
sub
jnp
mov
xor
insb
test
xlat
fnstsw
sbb
jbe
pop
mov
iret
into
outsb
mov
mov
jecxz
sub
into
lahf
rol
sbb
icebp
sub
xor
loopne
pop
psubq
loope
aad
lods
xlat
addr16
test
into
dec
jecxz
dec
clc
xchg
bound
pop
adc
adc
out
push
mov
sub
xor
sbb
inc
mov
loop
push
fimuls
mov
cmp
jo
leave
inc
ljmp
mov
sub
in
jecxz
shrl
dec
dec
jle
outsl
inc
sbb
test
dec
sub
xchg
xor
mov
jle
xchg
jmp
int
jmp
repz
iret
cmp
jmp
mov
sbb
mov
add
xor
xor
sub
loopne
jg
out
inc
je
xlat
hlt
std
lea
jb
sbb
test
sti
dec
in
leave
mov
mov
popf
mov
leave
insb
enter
xchg
fiaddl
add
push
in
or
add
pop
adc
mov
sbb
clc
dec
mov
and
test
in
adc
or
pop
or
add
inc
fs
add
std
inc
shr
loope
ret
jae
jo
dec
sub
js
aad
or
and
inc
or
inc
add
je
cmp
add
sbbl
aas
push
add
jl
jae
mov
andl
addr16
xchg
arpl
pop
jg
fisttpll
push
das
ror
int
push
sbb
xchg
fwait
mov
aad
ficoml
insl
loope
xor
sbb
jnp
mov
push
loope
inc
xchg
xchg
jne
dec
mov
mov
imul
dec
outsb
adc
sar
jge
es
mov
out
movsl
xchg
xor
aaa
fsubr
scas
int
in
icebp
test
push
jbe
int3
addr16
lds
leave
dec
ds
and
jne
mov
xchg
jno
lds
or
nop
aam
hlt
mov
hlt
jge
fnstcw
pop
lret
cmp
mov
cmc
pushf
push
lods
fs
pop
out
cmpsl
outsb
mov
push
lret
scas
mov
lret
dec
movsl
lret
lods
test
push
mov
inc
xchg
js
or
mov
adc
out
mov
test
dec
nop
jno
xor
xchg
xor
xchg
dec
add
sbb
jnp
and
and
push
xchg
mov
lods
aas
popf
cmp
cld
insb
int3
jl
pop
xchg
inc
dec
lea
in
pop
das
sbb
loope
mov
js
loop
pop
dec
lea
jecxz
jb
clc
xor
fisubrs
and
cmpsl
mov
loope
mov
adc
adc
lea
bound
push
mov
push
rolb
push
mov
cmpsb
mov
stc
xor
test
mov
lods
fcoms
inc
add
fxch
rcrb
lock
mov
push
stos
jp
cld
jne
cmp
and
dec
call
inc
jne
outsb
push
outsl
in
test
cltd
movsl
pop
inc
fdivr
loopne
pop
mov
pop
dec
arpl
pop
pop
mov
jg
mov
mov
insl
data16
adc
lods
jno
jae
fsubrs
test
mov
dec
fdivr
in
js
andl
fcmove
outsl
dec
cmpsl
movsb
push
shll
mov
lcall
insl
lcall
movsb
jmp
add
jl
xchg
jecxz
insl
ds
cld
mov
ljmp
pushf
xchg
mov
cwtl
addr16
jecxz
mov
push
icebp
mov
cli
hlt
xchg
sub
xor
fistl
pop
lock
mov
dec
or
insb
outsl
test
lahf
addr16
pop
fnstcw
gs
sbb
dec
bound
into
fsubr
shlb
sti
jbe
xchg
aas
xchg
adc
scas
loope
mov
dec
pop
xchg
sub
push
xor
movsb
std
jno
dec
loopne,pt
ljmp
mov
popf
loop
scas
bound
push
jl
loopne
dec
aam
cmp
pop
aas
dec
lock
sar
or
mov
xchg
and
dec
push
jl
pop
in
sub
pop
ljmp
daa
daa
lret
sarb
lea
stc
test
or
add
inc
cltd
inc
iret
fcomp
ss
lahf
xor
cli
jne
loopne
add
sbb
mov
jae
fsubs
mov
arpl
iret
add
aam
sbb
mov
mov
or
mov
in
outsb
aaa
or
mov
dec
std
xchg
add
pop
fmull
lock
or
push
cmp
fstl
cmp
test
nop
or
imul
repz
mov
mov
imul
iret
aad
xor
outsl
rcrb
enter
pop
jp
add
or
int
dec
sbb
insl
fidivrl
add
sbb
popa
incl
adc
dec
adcb
test
xchg
pop
test
cli
xchg
mov
insl
ret
dec
icebp
fsub
push
in
dec
jl
jg
in
dec
push
jp
ja
hlt
ljmp
dec
or
into
aaa
mov
adc
or
out
lods
mov
add
lret
js
testl
mov
imul
and
jae
adc
jg
sub
jmp
cmp
mov
popa
hlt
mov
xorb
cmc
cmp
inc
into
pop
sub
in
mov
mov
pop
out
scas
aam
mov
test
repz
adc
ss
jbe
pop
pop
or
or
stc
clc
pop
out
call
in
aas
adc
adc
xchg
pushf
xlat
sub
mov
mov
pusha
popf
dec
pushf
xchg
fnsave
push
iret
mov
jae
arpl
adc
inc
xchg
sbbb
daa
lock
mov
fildl
sub
xchg
jle
ficoms
inc
mov
lock
aaa
jae
gs
pop
push
sbbl
pop
arpl
gs
mov
xor
loopne
sti
pop
fildl
mov
lret
xor
jo
popf
nop
cmpsb
inc
fstl
lahf
aas
or
sbb
dec
leave
jmp
xchg
out
jno
xor
loop
jmp
sahf
daa
mov
jo
fldenv
fcoml
dec
mov
roll
sbbl
or
mov
push
mov
push
adc
pand
mov
adc
push
out
scas
push
and
pop
jbe
xchg
xor
adc
jl
mov
push
or
xchg
sbb
push
or
adc
lret
sti
mov
add
or
fldt
pop
mov
roll
daa
or
mov
mov
push
inc
inc
test
adc
lods
cmp
gs
leave
gs
shrl
pop
in
movsb
jnp
dec
out
xchg
sbb
ds
xlat
mov
shrl
mov
inc
jmp
mov
icebp
inc
xor
dec
xor
int3
dec
adc
sbb
icebp
dec
lock
and
jg
jmp
inc
sub
cli
cmp
xor
xor
test
call
adc
andl
and
in
imul
lock
outsl
pop
jle
mov
xor
lcall
insb
lret
jno
inc
enter
adc
add
adc
mov
add
lret
pop
test
cli
loopne
cltd
mov
adc
minps
ja
inc
inc
jne
push
dec
jle
xchg
fdivl
scas
mov
pop
into
jo
mov
lret
sbb
aad
es
or
lcall
xor
xor
stc
xchg
int
push
pop
mov
ss
outsb
fstps
jmp
outsb
mov
sbb
mov
into
sbb
adc
pop
jge
jg
std
pop
and
jge
mov
dec
repnz
xchg
pop
arpl
or
push
loope
aas
adc
sbb
jbe
jne
and
test
mov
in
pop
or
repnz
or
xchg
xor
fidivrs
jnp,pt
aad
or
and
jmp
inc
std
imul
push
pop
xor
lods
cmp
adc
ss
pop
mov
push
mov
sbb
xchg
inc
or
xchg
mov
lds
lods
insl
xor
inc
xchg
dec
jle
fidivrs
lret
subl
mov
jo
add
movsb
outsb
sbb
popa
or
dec
mov
and
test
push
es
cmpsb
outsb
dec
push
daa
cli
jb
js
outsl
fs
xchg
lods
into
push
adc
push
lds
loopne
push
call
pop
mov
in
pop
int3
shlb
imul
clc
inc
mov
clc
inc
sbb
repnz
inc
pop
mov
inc
mov
sbb
leave
dec
test
stos
aam
clc
mov
add
icebp
ret
test
lret
mulb
jl
sti
xchg
imul
xchg
pop
jae
jb
fmull
out
loopne
aas
imul
sarb
and
and
sub
aad
jbe
enter
repnz
rorb
cmp
aas
mov
shlb
inc
in
sbb
and
adc
mov
lods
adc
mov
and
or
sbb
push
xor
adc
rol
fisttpll
faddl
push
jb
cmpsl
sbb
inc
loope
cmp
inc
cs
add
das
cmp
mov
call
lret
popa
cmp
jno
dec
dec
inc
push
in
gs
repz
scas
sub
sbb
dec
fdivrl
nop
mov
lahf
outsb
in
adc
or
fdiv
sub
lea
sub
jg
push
xchg
push
fiaddl
sbb
adc
xor
dec
out
in
pop
and
xchg
or
insb
sbb
inc
push
adc
sbb
jge
mov
push
cmpsb
add
mov
clc
add
daa
dec
fadds
mov
xor
adc
in
pop
push
xchg
fistl
mov
movsb
js
adc
mov
adc
aad
cli
sbb
xor
test
xor
imul
dec
in
adc
inc
push
sub
xchg
jge
push
jo
push
hlt
dec
lahf
out
inc
pop
lea
imul
jl
iret
mov
fs
push
fwait
insb
ret
mov
sbb
fcmove
push
mov
or
lock
daa
int3
sbb
push
or
je
andl
inc
inc
lcall
lods
mov
pop
cmc
ja
push
lods
push
cmp
xchg
push
cltd
je
scas
enter
dec
inc
push
aad
or
push
stos
insl
pop
and
ds
aad
push
sub
lods
test
push
aas
push
ss
aaa
imul
cli
test
xchg
cmp
nop
bound
stos
ret
fisubl
call
int3
mov
cmpl
push
je
or
cmc
push
jl
sar
cmpsb
pop
jmp
scas
push
and
insb
stos
mov
jecxz
aam
sbb
add
repz
shlb
ljmp
std
rolb
pop
jg
dec
push
pop
push
js
xchg
jno
xor
jno
mov
adc
stos
pop
adc
cmp
data16
pop
insb
add
cli
pop
add
xor
out
lock
leave
or
mov
jnp
xchg
dec
or
stos
rcr
xchg
add
add
mov
inc
cwtl
incl
pop
std
mov
mov
nop
push
xchg
add
adc
inc
rclb
loopne
inc
or
inc
stos
leave
rclb
imul
cli
xlat
xor
pusha
sahf
xchg
sub
pop
fwait
incl
jns
or
cld
jae
sub
xchg
pop
and
dec
mov
sti
mov
in
cld
ret
ret
sub
lcall
enterw
cmp
outsb
dec
stos
cmp
push
cld
and
mov
mov
xchg
or
push
push
adc
push
jne
scas
subb
int
add
jl
fcomip
add
incl
xor
mov
cmp
pop
and
xor
jns
sub
inc
jmp
inc
int
and
aad
test
andb
pop
mov
adc
adc
pushf
sti
les
push
xlat
addl
mov
push
pop
mov
sbb
ret
insb
pop
leave
aaa
ja
push
stos
into
and
jmp
sbb
or
cmp
dec
mov
in
cmp
mov
sub
xor
iret
imul
xlat
pushf
cmpsl
pop
cmp
and
mov
inc
xchg
mov
rolb
cmp
out
pop
sub
call
ret
popf
repnz
sub
adc
call
scas
mov
gs
adc
sub
in
idivb
sub
leave
xchg
mov
pop
iret
int
in
mov
jle
xor
je
shrb
in
outsl
dec
and
iret
mov
loope
test
jl
sbb
cmc
scas
adc
sbb
jb
lret
pushf
add
lock
lcall
int3
push
mov
sbb
call
inc
adc
lret
or
jnp
and
dec
mov
mov
fs
repnz
pop
dec
outsl
mov
mov
aad
push
sub
nop
or
pusha
nop
add
lds
nop
pusha
sbb
pop
push
pushf
inc
mov
xchg
repnz
add
inc
inc
add
cld
ja
jns
cmpsl
jp
mov
repnz
push
push
in
das
mov
pop
stc
stos
test
inc
insl
rcll
jnp
in
xchg
out
xchg
std
mov
fwait
xor
insb
rcl
jbe
push
das
xlat
dec
xchg
out
cmp
dec
adc
push
psrad
leave
repz
insl
fcomps
push
lods
and
adc
test
fs
mov
cmp
mov
sub
lahf
pop
lret
out
and
add
dec
xchg
shlb
mov
cld
pop
mov
fs
jno
dec
fistpl
xchg
dec
mov
pop
inc
jno
rorl
push
cmp
lock
dec
ret
or
sbb
aaa
mov
xchg
or
dec
cmp
mov
ljmp
sub
imul
inc
xchg
andl
loope
jo
stos
das
js
cmpsb
ljmp
pushw
loope
mov
mov
mov
jo
nop
mov
cs
jmp
push
or
inc
xorb
jge
sub
cwtl
icebp
dec
xchg
fidivs
bound
int
xor
loop
mov
std
iret
out
add
cli
jmp
push
or
int3
add
pusha
push
in
add
cmpsl
inc
or
jmp
ficoms
cmpsl
js
test
clc
aam
or
jbe
ja
stc
xchg
cli
add
loopne
push
cmp
test
jecxz
or
sub
in
mov
addr16
sub
fs
fucomip
sar
adc
daa
gs
int3
xchg
jnp
aaa
fs
or
mov
insb
out
jnp
cmc
dec
lea
movsb
lret
into
lret
fidivl
lcall
sub
mov
jb
shrb
test
adc
int
mov
push
pop
jmp
xlat
mov
and
sbb
fildl
push
stos
mov
pop
inc
mov
movsl
int
js
out
das
or
incl
pop
jg
scas
imul
loope
das
pop
shrl
push
mov
or
scas
push
pop
inc
inc
sub
sub
jno
inc
cmp
xor
out
pop
mov
jbe
inc
loopne
push
cltd
mov
sbb
push
loopne
push
mov
mov
xchg
hlt
or
add
je
ds
xchg
ret
or
inc
push
jbe
jo
pop
sbb
adc
dec
mov
xor
dec
out
in
cs
add
int3
push
or
out
fdivs
fadds
jmp
sub
icebp
mov
cli
shll
push
jg
test
pushf
test
fnsave
mov
sub
cmp
in
adc
loopne
mov
push
push
js
xor
shrb
adc
imul
insb
loope
cld
mov
mov
cli
ss
mov
xlat
fcom
iret
jge
add
fcmovu
cmp
in
pop
call
dec
dec
jle
les
out
cmpb
mov
repnz
and
push
jl
pop
sbb
out
fcoms
mov
add
in
arpl
dec
inc
lret
pop
pop
xlat
dec
ss
sub
cmp
fucom
push
add
mull
inc
inc
loop
and
cmpl
cmpsb
sti
mov
mov
ds
outsb
popa
mov
cltd
rclb
pop
push
xchg
out
cwtl
mov
scas
addl
ja
test
pop
cmpsb
lods
cmc
and
xchg
cmp
popf
outsl
push
cmpsl
push
call
push
fisubl
out
adc
lea
pushf
jno
shll
scas
js
lock
popa
push
sbb
rcr
loop
or
xor
cs
mov
sbb
in
bound
aaa
mov
push
xchg
or
mov
push
pop
out
fwait
sbb
push
insb
jb
cltd
jge
push
sbb
mov
cmp
test
mov
jg
fildl
sarb
test
test
jnp
pop
shll
and
dec
pop
push
xor
insb
jg
stos
push
ljmp
outsb
hlt
sbb
xor
test
std
lea
mov
xchg
mov
fldcw
stc
ret
pop
les
addb
push
roll
sti
sbb
add
stos
mov
nop
lret
fwait
loope
mov
jg
mov
inc
nop
lcall
cmpsb
inc
push
xor
cltd
mov
aad
adc
stc
jo
ds
jo
in
fstl
mov
add
mov
mov
add
or
jb
mov
mov
sar
inc
inc
push
mov
test
xchg
call
pop
lret
sub
xchg
mov
movsb
adc
mov
filds
data16
jge
das
sub
cwtl
dec
sbb
into
pop
pop
scas
inc
idivl
add
call
test
mov
push
in
jle
inc
add
test
add
lret
push
mov
push
fsubl
mov
data16
leave
mov
xlat
shll
push
fists
fsubrl
jbe
loopne
fwait
ror
add
shll
in
jbe
mov
pop
lahf
mov
cmp
mov
fcomps
pop
aad
ret
dec
mov
jae
fidivrs
mov
lds
sub
fnstcw
or
push
ss
aaa
popa
jmp
jne
gs
test
loope
daa
adc
mov
js
std
pop
sbb
icebp
and
mov
sub
pop
adc
xchg
imul
pop
xlat
pop
dec
and
inc
inc
js
inc
mov
cmp
pop
fistpl
cmp
or
xor
lods
mov
and
cmp
sub
outsl
pop
add
filds
out
mov
rorb
jge
push
popa
jns
sbbb
xor
xchg
add
push
sbb
lock
and
sahf
push
jle
fidivrs
fbld
jne
test
cmpb
adc
fadds
mov
mov
cmc
into
je
cmp
pop
push
mov
rclb
xchg
mov
scas
shrb
jle
push
jmp
fldt
xchg
push
pop
fstps
push
fcoml
repz
inc
shl
hlt
mov
fsubl
mov
inc
sub
sahf
dec
cmp
dec
mov
test
ja
sub
cltd
mov
in
inc
rcrl
div
adc
roll
dec
or
push
xlat
pop
mov
sbb
sbb
lods
mov
push
mov
cmp
cmpsl
jbe
mov
xchg
xchg
jle
and
jecxz
xchg
and
pop
push
subb
mov
push
add
mov
sbb
add
fs
mov
movsl
and
adc
ljmp
loop
clc
mov
mov
fucomi
pop
iret
loope
push
les
testb
ljmp
addl
ljmp
movb
mov
jge
mov
jb
pusha
push
xor
xchg
js
das
fcmovne
cltd
lcall
insl
mov
cmp
cmpsl
mov
xchg
mov
fidivs
add
dec
ds
int
aad
dec
and
sar
sub
stos
adc
cwtl
subl
in
pop
xchg
adcb
jmp
and
jne
outsb
jne
sahf
xchg
insb
adc
out
gs
xchg
repz
dec
test
mov
sub
das
push
sbb
gs
push
lret
jo
addr16
jmp
out
or
icebp
sbb
and
mov
stos
test
cmpsb
sbb
pop
loopne
pop
xchg
mov
lret
out
xchg
arpl
or
or
mov
or
clc
es
enter
push
int3
inc
add
adcb
aaa
scas
movsb
addr16
push
orl
cmp
sub
lret
stos
jmp
mov
stc
bound
test
negl
js
std
out
mov
sbb
fs
into
cwtl
cmp
mov
mov
lahf
dec
jecxz
sbb
push
fistps
cmpb
inc
pop
into
test
insl
mov
adc
adc
fnsave
xchg
bound
adc
or
and
shlb
bound
push
adc
mov
sub
scas
cld
xlat
push
mov
xor
mov
lahf
loopne
arpl
xlat
jns
sub
pop
sub
mov
mov
xor
ja
pop
cmc
dec
scas
cmc
dec
mov
add
jnp
or
fimull
mov
pop
sub
mov
mov
jge
pop
mov
fndisi(8087
lock
rcrb
inc
dec
mov
mov
add
pop
pushf
into
testb
fs
in
inc
mov
mov
push
sbb
sahf
pushf
lahf
push
bound
test
mov
stos
int3
push
jb
mov
out
inc
dec
mov
dec
lds
pop
jbe
inc
lods
daa
sub
hlt
daa
movsb
popaw
pop
lret
and
push
inc
lcall
movsl
push
les
dec
jp
xchg
sbb
iret
or
lods
push
push
and
push
daa
ret
in
and
lods
mov
dec
or
cmc
xor
mov
dec
outsl
jae
jae
add
lcall
fwait
mov
push
push
test
fistpll
xchg
jns
mov
call
mov
push
test
scas
push
add
loop
mov
lcall
push
push
push
shlb
iret
push
mov
stos
test
mov
addl
subb
stos
lret
outsl
push
or
push
ds
loopne
mov
jmp
pop
push
or
mov
inc
fildll
lods
rol
loope
das
iret
and
pop
and
sbb
and
imul
mov
inc
test
repnz
push
push
repz
jmp
leave
cs
call
subb
cmp
adc
lcall
or
scas
adc
sbb
roll
pusha
adc
adc
add
or
inc
inc
data16
gs
push
xchg
sub
scas
lret
adc
in
mov
fldl
cmp
jo
mov
insl
icebp
mov
and
mov
inc
push
mov
fisubl
in
and
loopne
test
mov
xchg
xchg
shll
into
jg
int
and
xor
lret
pop
inc
adc
test
into
cwtl
cmp
pusha
out
imul
pop
and
stos
popa
imul
mov
cmp
jns
push
xor
or
sub
and
hlt
test
sub
mov
int
leave
sub
xorb
dec
dec
xor
lret
push
inc
mov
jno
adcb
int
in
dec
fcmovb
lret
adc
jmp
inc
or
std
imul
mov
cmpsb
fcoms
xchg
sbb
or
je
popa
adc
fnstcw
aaa
outsb
ja
out
sub
pop
in
test
xor
imul
sub
daa
cmp
lret
nop
in
adc
gs
cmc
pop
mov
ss
data16
cmp
aas
cmpb
test
test
mov
pusha
loope
inc
add
add
pop
xor
div
and
push
test
cmpsl
and
mov
dec
into
nopl
xchg
int
push
sbb
push
int3
loope
push
cmp
filds
sarl
or
xor
in
sbb
push
sub
pusha
lea
cmpsl
add
addr16
jp
pushf
and
mov
mov
inc
enter
push
and
stos
inc
out
xchg
sbb
or
or
and
stc
ret
adc
fisttps
xor
mov
add
jnp
xor
jle
add
or
cmpsl
jns
repz
mov
fs
mov
fs
gs
xchg
insb
cmp
out
and
aam
mov
xor
push
mov
in
add
mov
jae
fdivs
xchg
test
jb
gs
rorl
sub
jne
cmpsb
mov
loop
gs
add
xchg
sbb
sbb
mov
dec
push
gs
dec
xchg
or
xor
loopne
nop
dec
ja
cmp
daa
mov
dec
lea
or
or
jecxz
or
mov
jnp
out
add
pop
adc
outsl
or
and
mov
ficoms
push
sbb
dec
or
jnp
xchg
push
stc
popa
out
fidivrl
sahf
je
enter
int
or
xor
mov
insl
in
push
out
insb
dec
icebp
or
or
xor
mov
lods
mov
sbb
js
rol
mov
loopne
idivl
pop
sti
push
fiaddl
adc
fdivl
jmp
inc
les
jge
insb
mov
mov
mov
fsubs
lahf
lods
inc
sbb
adc
les
push
xchg
push
mov
in
pop
out
sbbl
pushl
lcall
outsl
cmp
mov
mov
leave
test
arpl
sub
mov
je
push
and
mov
jle
sbb
pop
push
in
mov
in
test
add
sub
xchg
js
inc
lock
sahf
jo
test
inc
cs
subl
in
push
push
mov
mov
xchg
xor
popf
xchg
subb
jmp
sbb
xor
pusha
mov
test
cmpsb
mov
call
inc
stc
push
jb
lret
dec
test
pop
flds
sti
es
mov
and
dec
ja
jnp
mov
push
xchg
ret
cmp
cmp
cli
lcall
jmp
stos
add
pop
aaa
ret
daa
push
sti
push
fldcw
std
out
cmc
xor
or
add
jo
sub
pop
jg
adc
dec
pop
int
cmpsb
rorb
rol
imul
mov
xor
lret
test
test
shlb
xor
mov
xchg
xor
scas
adc
add
je
arpl
testl
xchg
scas
xchg
dec
cmp
dec
mov
in
push
jbe
mov
adc
orl
mov
insb
mov
cld
push
mov
jp
adc
test
imul
imul
roll
scas
push
or
outsl
outsl
jne
xchg
lret
popf
mov
enter
mov
cmc
xchg
mov
imul
and
out
mov
jno
add
jl
fldenv
rolb
cmp
jb
push
sub
xor
lock
sahf
into
cmp
sbb
or
int
insl
pop
push
scas
xchg
fstl
sar
add
add
inc
and
pop
jle
jnp
add
popa
cmc
test
add
xor
js
sbb
mov
js
cs
in
aas
into
test
incb
out
push
test
lahf
rcr
add
fists
fisttpl
pop
fcompl
sbb
jmp
cwtl
scas
adc
cltd
mov
jne
dec
mov
or
inc
inc
clc
jle
dec
mov
inc
sahf
ja
xor
stos
rorl
jp
pop
jns
mov
testb
dec
inc
pop
push
push
adc
pop
in
jno
push
lahf
fisubl
xchg
into
aam
stc
pusha
add
into
jle
push
int3
imull
jl
fistpll
lods
xchg
inc
orl
out
dec
or
dec
mov
push
sbb
je,pn
movsl
fwait
push
sbb
xchg
repz
pop
in
adc
dec
push
dec
je
mull
hlt
int3
and
pop
push
aaa
push
mov
leave
dec
cmp
pop
adc
cmc
std
out
and
loopne
lcall
dec
test
cmpsl
flds
jae
es
cmc
adc
mov
int
xlat
xor
scas
enter
daa
mov
loopne
jbe
cmpsb
leave
inc
and
lahf
xor
pop
adc
jnp
or
cld
lea
and
cwtl
mov
fimuls
jmp
xchg
cmp
mov
insl
je
mov
xchg
add
pop
jae
iret
out
mov
inc
loop
lods
push
cld
int
sbb
jbe
cmp
add
loopne
xchg
imul
add
ror
xchg
push
jge
gs
pop
cltd
mov
adc
sbb
inc
or
movl
sti
cmp
fmuls
and
mov
mov
inc
push
inc
xor
ja
adc
addr16
push
mov
jl
loop
dec
ja
xor
add
sbb
xlat
push
push
add
push
test
dec
shr
fstpl
push
insl
cmp
mov
xlat
push
xor
dec
add
xchg
je
shrl
mov
call
sbb
xchg
repz
test
dec
mov
sbb
sub
cwtl
movsl
sub
lock
xor
stc
inc
out
nop
fwait
fwait
dec
xor
push
pop
sub
into
ss
jg
pop
cmp
lea
shlb
gs
gs
es
test
mov
mov
rcrb
pop
mov
xor
add
pop
xor
add
bound
dec
cmpsb
dec
jno
arpl
sbb
or
test
mov
cs
inc
movsb
fisubrl
jl
mov
shll
sbb
pop
or
mov
mov
cli
scas
xchg
and
loopne
pop
mov
adc
mov
or
sbb
mov
lahf
sar
sub
std
nop
pop
lahf
mov
int3
cmp
ja
inc
mov
add
or
popa
jmp
or
js
lret
dec
cmp
and
orl
outsl
in
mov
imul
sti
xchg
scas
cmpsl
in
test
into
xchg
je
add
in
sub
add
repnz
es
es
cld
rorb
lea
add
roll
and
lods
push
pop
mov
xor
jb
repnz
cmp
and
popl
stos
dec
xchg
mov
lods
push
jecxz
lods
int3
push
inc
xchg
es
insb
mov
xor
sti
out
fisubs
jle
pop
lret
jae
fadd
je
push
lods
in
int3
add
cmp
mov
and
sub
stos
xabort
mov
hlt
lret
shll
in
lret
js
inc
add
cli
jecxz
fmul
bound
adc
enter
xor
jo
push
sub
mov
jno
fsubrl
ljmp
push
cmpsl
mov
cmp
jns
int
sbb
and
pop
mov
sbb
add
daa
sti
add
or
mov
push
out
nop
xor
push
loope
pop
jns
pop
jae
sbb
cmp
push
cmc
push
les
xchg
out
jl
shl
arpl
icebp
out
in
jno
mov
pushf
jae
or
testb
pop
xchg
rclb
fwait
xor
mov
add
not
lahf
stos
mov
mov
inc
ljmp
lret
test
dec
clc
adc
push
test
add
push
filds
mov
je
and
lock
in
test
jnp
push
mov
inc
daa
push
out
orl
jg
mov
icebp
shl
movsl
faddl
std
xchg
ss
daa
out
lock
cmpl
dec
pop
pop
dec
lret
push
push
fmull
es
gs
push
jmp
add
or
movsl
scas
jmp
xor
push
push
ret
xlat
test
or
inc
inc
push
dec
mov
add
ret
sahf
push
and
sbb
pop
call
test
out
xor
ret
fst
pop
popf
test
stos
sbbb
push
ret
je
push
or
inc
nop
nop
sahf
and
mov
test
mov
nop
jmp
sti
xchg
sub
mov
mov
loop
adc
or
out
arpl
dec
jae
xchg
and
int
fwait
dec
cltd
ss
icebp
jg
mov
xchg
or
adc
arpl
xlat
push
dec
sbb
fbstp
sarl
gs
or
mov
fcompl
jns
dec
negb
orb
out
jg
push
rcrb
xor
in
arpl
jl
lret
clc
lods
fsts
push
jg
ret
jae
mov
add
fadds
dec
cmc
adc
mov
ljmp
inc
or
jp
mov
adc
ret
pop
and
mov
in
cwtl
mov
dec
mov
bound
pushf
out
push
mov
aaa
adc
mov
mov
adc
insl
aad
outsb
jns
xchg
pop
ror
int3
fldt
add
xor
fisttpll
sub
das
cli
lea
xchg
les
insb
nop
jno
movsb
test
in
sub
and
push
fidivl
push
daa
fiadds
shll
mov
mov
mov
mov
test
addr16
or
and
sub
jns
fsubp
push
fs
pop
xchg
aam
shl
add
sahf
sub
repnz
jns
inc
xchg
stos
mov
int
jnp
std
xor
outsb
sub
cli
adc
movsb
fldt
push
lahf
in
push
inc
pusha
dec
sub
mov
nop
push
popa
in
iret
movsb
adc
mov
daa
xor
sbb
ja
arpl
mov
xchg
mov
test
sub
ficoml
add
clc
adc
cmp
faddl
orl
fimull
daa
ret
xchg
mov
mov
scas
xchg
sbb
mov
jle
or
lret
test
and
mov
pop
mov
sbb
sahf
add
and
pop
and
jne
loopne
in
cmp
mov
enter
out
add
in
add
or
mov
push
dec
xchg
cmpsb
inc
mov
gs
mov
enter
in
ljmp
mov
nop
out
cld
in
into
inc
mov
jno
pop
mov
jae
pop
xchg
lods
mov
mov
cli
push
or
test
or
sbb
add
sub
add
call
push
jne
nop
scas
mov
fsubrl
mov
outsl
cmp
bound
and
cmp
gs
mov
mov
rorb
pusha
repnz
mov
loopne
sub
int3
imul
xlat
pop
int
inc
mull
repz
cli
cs
adc
in
leave
insl
mov
arpl
or
notl
adc
jmp
sub
repnz
jl
es
sub
adc
adc
adc
pop
mov
mov
sar
pop
xchg
into
sahf
enter
mov
mov
sub
cmp
incl
cmp
popa
ret
xlat
xchg
popa
mov
scas
or
mov
adc
aas
adc
addb
bound
ret
rorb
mov
pop
dec
ret
or
inc
fwait
mov
mov
push
mov
jns
sbb
add
add
scas
add
xor
in
mov
loope
sub
mov
jecxz
or
jp
insb
dec
add
mov
shrl
fcmovu
inc
and
je
jns
repnz
bound
inc
rorl
iret
scas
sbb
aad
dec
pushl
lods
adc
cwtl
sub
mov
sbb
mov
icebp
and
dec
xchg
std
push
dec
in
insb
loopne
fisttps
ljmp
sbb
rcrb
mov
stos
mov
repz
jg
cwtl
negb
add
lahf
stc
or
ss
push
cmp
test
mov
out
pop
inc
rorb
mov
fiadds
push
in
std
mov
outsl
add
inc
add
into
jns
inc
jne
adc
push
insl
and
xor
test
aad
jp
pusha
fcomi
cmp
outsb
sahf
mov
or
ss
out
push
stc
ja
popf
icebp
push
lock
push
in
sub
int
iret
inc
in
js
loope
and
push
js
mov
ja
sub
out
and
jle
jg
fbstp
test
sub
repnz
or
or
repnz
in
pushf
rcrb
aas
mov
inc
dec
dec
lds
push
sub
xor
jecxz
das
push
pop
add
testb
lods
insl
cld
and
pop
jge
ret
xchg
push
scas
loope
out
int
mov
jle
stos
lods
dec
jae
andl
outsb
lea
icebp
xchg
clc
and
shl
cli
mov
xchg
jg
aas
dec
push
push
aam
test
push
jne
aam
loop
push
lods
test
aas
rorl
jo
push
mov
scas
dec
into
adc
aaa
ficoml
pop
mov
int
test
insb
into
out
mov
dec
xchg
dec
rcr
and
xor
or
mov
push
sub
sub
int3
push
sarl
movl
inc
dec
mov
fwait
jmp
cmpsl
add
push
ljmp
mov
xor
push
xchg
loop
and
outsl
aam
adc
aaa
div
jl
push
js
loop
loope
dec
jne
push
jae
sbb
daa
and
or
adc
fisubrs
leave
es
dec
push
mov
insb
push
out
push
mov
filds
xlat
iret
sub
sbb
mov
push
sti
movsl
jno
aaa
adc
pop
push
in
xor
cmp
xlat
shlb
push
out
cmc
add
bound
add
mov
addr16
lods
iret
lods
rclb
in
fnstcw
filds
ret
sbbb
or
popa
xor
add
lcall
aam
jo
testl
sub
cltd
pop
cli
inc
xchg
push
fidivrl
insl
stos
ljmp
dec
push
sbb
dec
xchg
outsl
fsubrl
push
cmpsl
outsb
andb
das
mov
jg
xor
shll
push
jle
cmp
and
sbb
js
inc
mov
scas
icebp
ret
xlat
repnz
sbb
fnsave
test
das
mov
test
sub
nop
cmp
cwtl
xlat
add
add
hlt
fnsave
pop
mov
mov
dec
ret
dec
inc
das
movsl
aas
push
and
int3
dec
test
add
push
je
inc
cmp
pop
dec
pop
jecxz
fsubl
pop
lahf
call
lahf
xchg
or
xchg
pop
cmp
pop
neg
shl
jae
fldt
jbe
push
in
enter
stc
jnp
js
mov
jne
test
dec
dec
or
or
mov
mov
test
and
xchg
dec
clc
add
pop
dec
lahf
or
int3
push
mov
movsb
cmpsb
out
xchg
ljmp
add
push
sbb
mov
sub
pop
mov
sub
inc
push
or
js
pop
mov
popa
mov
enter
cmc
into
aam
loopne
ffreep
mov
aas
movsb
mov
pop
fnstsw
mov
push
arpl
add
dec
push
mov
ss
lds
addr16
cmp
pop
jmp
sub
adc
mov
add
cli
fwait
pop
and
nop
sub
icebp
push
and
sub
insb
sbb
pop
cmpsl
push
dec
loopne
hlt
dec
xor
test
mov
rorb
je
imul
or
sarl
bound
cmp
cli
lret
loopne
je
lcall
mov
inc
cmp
dec
pop
nop
orl
jl
inc
xlat
test
lret
repnz
popf
loopne
jl
sbb
test
clc
pop
lret
in
lcall
sbb
enter
imul
jbe
jp
jnp
mov
xor
pop
mov
jb
mov
cmpsl
rcrb
mov
mov
xchg
cmp
mov
rcll
loopne
push
into
dec
aaa
stos
shll
xor
cli
out
fimuls
dec
ret
inc
inc
pop
jl
inc
sbb
fistl
enter
push
jmp
mov
inc
int
adc
pop
mov
sub
ret
adc
shrl
cmp
mov
dec
jle
fnstenv
movsb
ss
or
movsb
dec
mov
std
aaa
std
imul
jno
les
xchg
out
dec
mov
jb
inc
das
outsb
pushf
stc
push
sbb
mov
nop
icebp
fistps
xchg
in
arpl
rcr
xchg
ss
sahf
ds
pop
or
jge
xor
and
cs
inc
mov
push
cs
pop
jno
lcall
inc
mov
cmp
lret
in
fcmovnb
cmp
adc
jb
xor
ror
mov
imul
cmp
or
mov
push
mov
test
es
mov
fistps
ret
fdivl
dec
mov
xor
push
jecxz
jmp
jge
adc
jb
jns
lods
incl
xor
mov
fwait
jae
repnz
cmp
lret
div
movsl
fisttpl
rcrl
xor
push
inc
mov
push
inc
rol
inc
and
out
sti
mov
fiadds
cmp
ret
imul
xchg
xor
push
daa
push
popf
mov
fstl
scas
adc
out
add
and
out
adcb
cltd
cmp
sub
aam
dec
cmpsl
xchg
jmp
cmp
dec
gs
test
rorb
pop
sahf
mov
lahf
mov
js
push
cs
mov
mov
test
popa
iret
mov
jnp
inc
xor
xchg
popf
push
add
frstor
std
mov
jb
jle
sbb
xchg
cmp
add
or
xchg
lods
stc
xlat
lds
jne
pop
adc
pop
dec
push
in
inc
push
and
sub
cmp
fbld
or
jecxz
xchg
outsl
fs
test
loopne
or
insb
sti
lods
add
mov
pop
push
movsl
stc
mov
call
mov
mov
sub
xor
int3
imul
cs
inc
pop
pop
push
xchg
mov
out
dec
push
cwtl
sahf
mov
shrd
cwtl
dec
sub
orl
sbb
lcall
inc
fbstp
insl
neg
cmc
add
inc
loope
mov
inc
arpl
std
aas
pop
mov
cmp
imul
sbb
push
data16
popa
xor
lcall
add
jnp
sbb
xchg
or
rcl
add
jns
cmc
cld
gs
pop
pop
and
add
rolb
fs
xchg
ljmp
icebp
in
cmp
xchg
cli
lcall
lret
ficompl
mov
rcrl
lcall
repnz
sub
mov
pop
or
xchg
ljmp
sbb
push
loopne
pop
rorl
and
sti
push
and
inc
mov
mov
nop
sbb
rorl
push
cmp
sbb
xchg
fwait
lcall
pop
sbb
adc
sub
adc
push
ljmp
in
lcall
dec
or
repnz
sub
gs
sbb
cmp
cld
pop
ficompl
test
int
ja
imul
insb
rorw
shr
dec
xchg
mov
sti
cmp
jbe
mov
xchg
jne
test
mov
icebp
fs
ret
xchg
xchg
xor
repz
sub
insl
stos
pop
pop
jb
push
ljmp
call
loope
lods
mov
movsl
stos
popf
or
cwtl
adc
mov
cmp
cmp
loop
gs
sahf
in
inc
mov
mov
and
ficoms
lods
outsb
pop
loop,pt
cld
pop
lods
dec
lret
shlb
push
cwtl
pop
or
xor
sub
cmpsb
mov
xchg
lods
jns
out
jns
mov
xchg
push
xchg
add
mov
sbb
rcr
es
push
andl
mov
dec
stos
pop
sarb
pop
roll
stc
xor
dec
mov
sti
add
push
imul
mov
out
pop
mov
push
xor
daa
test
iret
xor
sub
popa
sub
cltd
adc
xchg
popa
mov
in
daa
js
mov
xor
push
adcl
mov
dec
xor
iret
sub
test
and
adc
inc
add
mov
xchg
mov
mov
cmp
inc
sub
loopne
add
fildl
stos
test
xor
repnz
movsl
dec
lods
pop
nop
retw
xchg
sti
imul
sbb
mov
adc
cmp
dec
jp
imull
pop
or
add
call
lds
jae
lds
dec
call
cmp
jno,pn
fimull
dec
dec
jecxz
stc
dec
jo,pn
sbb
sarl
mov
jae
jae
cmp
mov
rcrb
inc
mov
popf
iret
sub
inc
xor
aaa
movsb
in
out
sbb
jo
xor
test
inc
jno
clc
dec
pop
jp
mov
lock
pop
enter
pop
lock
repnz
pop
fstl
cmp
add
mov
inc
aam
jnp
cltd
movsb
in
jbe
cli
roll
or
lret
add
lock
mov
adc
fcomps
push
xchg
fwait
jle
test
loope
repz
jbe
scas
subl
and
xorl
loop
js
loopne
xchg
imul
xchg
mov
sti
fadds
xchg
ret
aas
cmp
insl
int
dec
sbb
scas
adc
add
jp
or
mov
cwtl
push
mov
mov
cmp
dec
cmp
sub
mov
lahf
and
notb
jmp
out
ret
push
mov
dec
and
repz
xchg
stos
jle
cmc
cmpb
stos
xchg
lds
xor
lock
mov
sti
sbb
mov
inc
or
fsubr
sbb
ss
aas
fistpl
test
imul
sahf
loope
mov
shlb
mov
movsl
test
loopne
clc
and
inc
adc
inc
aas
jnp
xchg
push
jae
mov
outsl
mov
outsb
inc
in
push
fists
sub
mov
and
cmp
iret
push
pusha
sahf
inc
pop
inc
add
in
push
loope
dec
loopne
pop
fdivl
imul
mov
shr
sti
pop
dec
je
xor
inc
cs
xlat
std
bound
and
sub
xor
mov
sbb
icebp
pop
test
sub
scas
xor
flds
fcmovne
mov
test
pop
adc
pushf
mov
push
sub
mov
pop
bound
cmp
dec
sub
xchg
mov
lret
arpl
xor
into
in
xchg
and
ficoms
leave
mov
xchg
inc
mov
sub
add
push
push
mov
pop
scas
dec
bound
xor
cld
sahf
push
jp,pn
mov
xchg
sub
mov
sbb
insl
testb
ficomps
mov
pop
xlat
add
popf
nop
adc
sbb
or
imul
push
mov
inc
pop
aas
mov
dec
push
xlat
movsl
or
clc
sub
jne
int3
adc
push
lods
mov
jne
and
imul
sbb
mov
or
test
es
add
icebp
jecxz
push
push
stos
cmpsb
jle
shlb
int
movsb
or
aas
dec
mov
fcmovnb
mov
aas
mov
fcoml
push
lcall
pminub
fwait
mov
xchg
mov
jp
xchg
cmp
mov
rcrl
push
dec
push
jl
mov
jae
std
rcrl
or
lcall
sti
insb
gs
cs
fsubr
pop
rorb
pop
leave
mov
sub
jp
stos
add
sbb
sbb
or
in
push
push
push
mov
cmp
mov
pushf
nop
and
ss
lret
jae
push
je
sahf
jle
jmp
mov
out
stc
addr16
xlat
lock
xchg
adc
lods
das
fs
fwait
shufps
aas
or
push
cmp
adc
adc
popa
repnz
mov
mov
dec
or
adc
scas
loope
adc
stos
pop
inc
cmp
sbb
dec
or
pop
jg
push
jmp
mov
cli
inc
outsl
icebp
ja
pusha
sub
jp
call
inc
mov
inc
ljmp
inc
xor
popa
aad
arpl
inc
lret
adc
mov
cmpsl
stos
cmp
in
cwtl
lods
or
leave
out
test
and
lret
push
sub
inc
je
loopne
lea
loope
xor
jno
enter
xor
xorl
sub
lods
vmovntdq
call
inc
cmp
shrl
out
lret
enter
pop
notb
xor
add
pop
lcall
mov
mov
and
out
adcb
cmp
subl
inc
sbb
dec
jl
lods
cmpsw
fld
lahf
adc
push
shll
add
in
inc
pop
mov
jmp
out
sub
adc
addr16
jmp
mov
int3
push
mov
dec
or
and
rcr
adc
scas
inc
pop
sub
fwait
cltd
test
or
sbb
pop
adc
fsubr
sbb
jbe
aad
out
xchg
mov
and
mov
lods
shl
pusha
jno
dec
jmp
iret
cmpsb
mov
or
insb
fdivrl
pop
mov
lret
jnp
jl
cmp
test
push
inc
imul
je
fcoml
inc
adc
out
pextrw
jbe
negb
ds
outsl
add
aam
rorb
add
adc
mov
push
insl
mov
mov
adc
shll
leave
in
mov
stos
fidivl
popa
in
popa
mov
mov
test
add
arpl
les
loope
jo
filds
cmp
cmp
cmp
sahf
in
stos
mov
push
dec
xchg
push
fadd
pop
fbstp
add
dec
test
push
xor
push
ja
adc
aaa
xchg
mov
mov
sbb
movlps
lret
pop
int3
daa
iret
add
bound
inc
push
pop
push
or
dec
push
shr
mov
aam
jmp
mov
leave
and
hlt
jmp
int3
dec
pop
iret
sub
jae
les
in
add
outsl
cs
mov
insw
rorb
xchg
sbbb
je
dec
sbb
mov
sahf
mov
jmp
arpl
bound
cs
ss
pop
aaa
mov
pop
jecxz
test
pop
daa
jge
stos
mov
jmp
popf
outsl
inc
test
inc
mov
push
mov
lcall
dec
xor
imull
mov
push
jg
int3
addr16
pop
adc
jbe
xchg
jno
shll
push
ret
lea
loopne
sub
shlb
mov
inc
das
test
insl
es
or
add
or
mov
jo
pop
mov
insb
push
loop
pop
jo
ljmp
or
mov
mov
test
inc
pop
sub
mov
cs
xchg
mov
mov
les
test
in
gs
loop
addr16
jecxz
cli
add
and
pop
lahf
loopne
pop
sti
movsl
icebp
insb
cmpb
push
lods
push
cmpsb
sarl
sbb
mov
and
mov
movsl
pushf
xlat
cmp
aaa
pop
pop
aam
fwait
pop
mov
push
dec
test
or
into
enter
inc
or
insl
sbb
xchg
sbb
bound
inc
lea
jecxz,pt
outsb
fimuls
into
inc
jg
or
scas
push
xchg
ret
xorb
mov
test
fidivl
sub
xchg
or
xchg
lods
insb
push
pushl
pop
adc
ljmp
inc
mov
or
sub
sbb
jo
mov
jl
ret
lcall
ljmp
adc
dec
inc
ss
loop
xchg
mov
in
push
loop
stos
ret
rorb
and
lret
stos
adc
mov
nop
pop
fld
mov
xchg
jno,pn
jmp
dec
into
rol
fmuls
push
cwtl
arpl
add
mov
xchg
xchg
add
out
inc
jb
dec
add
mov
push
fdivs
outsl
push
movsb
mov
mov
mov
mov
mov
mov
mov
icebp
lret
rol
std
mov
stos
add
rcrl
sbb
add
enter
xor
mov
cmpsl
lea
push
pop
loopne
pop
out
lret
out
xor
pop
cmovp
test
ret
movl
xor
cmp
mull
adc
neg
xor
fstps
shrb
aas
inc
and
or
nop
arpl
imul
cltd
xchg
adc
div
mulb
push
mov
jl
movsl
dec
push
leave
lret
in
adc
push
add
inc
loope
jmp
outsb
sbb
sub
dec
or
mov
add
lea
hlt
in
jo
cmc
xor
je
icebp
pop
repz
jno
hlt
sbb
jmp
adc
xchg
ljmp
ja
mov
mov
insb
sub
imul
sti
mov
mov
or
popf
push
inc
add
mov
dec
sbb
sub
push
jp
jnp
mov
imul
mov
pop
jg
mov
mov
seto
shrb
subl
repnz
pop
loop
dec
inc
mov
cmpsb
arpl
pop
and
inc
out
dec
and
add
and
loope
inc
jg
aas
xchg
pop
daa
xchg
and
push
jo
fisttpll
dec
xchg
lds
cs
shrb
cltd
mov
lds
fimuls
jo
std
sbb
jo
or
sub
xor
addr16
xchg
pushf
lock
pop
pop
fs
movsl
adc
adc
inc
lret
popa
xor
lret
lcall
sbb
addr16
movsb
shr
push
outsl
or
sbb
jno
push
mov
mov
sbb
and
jl
aam
jmp
sbb
js
push
or
sub
add
aam
jnp
xchg
adc
or
sub
andl
and
test
add
cmp
arpl
mov
sub
les
add
mov
faddl
int3
jl
icebp
jg
mov
cs
sub
fisttpll
ret
xchg
pop
out
cmpsb
std
iret
pop
and
push
jl
cltd
stc
mov
adc
insl
clc
sbb
nop
xchg
lods
xchg
pop
xor
mov
cmpb
data16
and
xor
or
out
dec
jle
inc
and
in
out
pop
pop
pop
sub
hlt
mov
mov
aam
jmp
xchg
sub
or
lret
or
subl
in
test
popf
lret
cmpsl
push
data16
popa
js
xchg
fcompp
jp
aaa
arpl
stos
lods
xlat
loop
mov
pop
insl
adc
or
and
cmpsb
in
cld
dec
adc
call
int3
xchg
push
popa
pop
cmp
xlat
fwait
sbb
sahf
filds
lods
pop
sbb
loop
repnz
mov
dec
testl
cmp
addr16
arpl
arpl
cli
mov
or
mov
jno
push
ja
cs
jle
fsubrp
outsb
sub
lahf
ja
xchg
shrl
lahf
jmp
mov
jl
call
popa
loope
pop
std
ret
pop
lods
cmp
into
mov
pop
loop
lahf
fadd
push
int3
lret
xor
and
lahf
xchg
inc
out
push
xchg
lods
xchg
lock
test
dec
push
pop
jp
sbb
out
clc
cmp
out
xlat
fisubrl
sbb
dec
leave
leave
hlt
fstl
cmp
cli
xorb
sub
fsubrs
out
inc
pop
sbb
jmp
leave
and
or
and
notl
push
push
out
jbe
xor
jmp
cwtl
mov
out
add
sub
test
out
cs
test
lret
dec
xchg
add
cmp
mov
shll
fwait
mov
and
mov
dec
loope
sub
jbe
cwtl
xchg
inc
fstl
pop
in
mov
and
call
clc
loope
andb
dec
leave
xor
ljmp
push
test
jo
jne
in
call
or
inc
mov
jecxz
push
and
sub
stc
je,pt
xor
movsb
adc
or
aaa
pop
in
lret
pop
push
pop
push
xchg
sbb
int3
in
jp
mov
pop
xchg
fstp
or
negb
push
stc
pop
sarb
adc
sarb
adc
mov
out
mov
sub
mov
push
push
test
insl
or
pop
mov
in
ljmpw
push
xchg
popa
pop
xchg
mov
jbe
adc
jb
push
popa
xor
cmp
les
adc
jle
xor
loopne
lcall
jns
xchg
inc
pop
hlt
dec
inc
xchg
xchg
into
and
fwait
inc
pop
mov
sti
test
arpl
or
mov
mov
mov
mov
mov
xor
mov
addr16
sbb
jae
xor
fnstsw
sub
cmpsl
les
cmp
mov
pop
lods
sti
inc
out
pop
cmp
gs
fstpt
and
mov
dec
mov
cld
mov
pusha
jo
test
rcll
cwtl
xchg
sbb
test
aad
xchg
out
out
fisttps
add
xor
sub
pop
and
cmp
mov
fcomps
aad
xorb
or
push
add
fcmovb
pop
test
xor
sub
xchg
mov
jl
dec
aas
aaa
popa
cs
mov
sbb
lret
iret
test
pop
lcall
push
sbb
pop
pop
outsl
jns
clc
xchg
fcomp
aaa
xor
in
fiadds
out
in
js
mov
enter
sub
inc
adc
fimuls
scas
pushf
ljmp
out
das
rclb
popa
fidivs
mov
or
scas
mov
xor
xchg
sahf
mov
mov
lods
jnp
filds
sbb
cmp
and
mov
test
in
jmp
outsl
insb
jnp
stc
cwtl
cmp
pop
mov
inc
push
mov
add
std
pushf
mov
push
popf
sub
out
test
pop
cmpsl
mov
mov
jecxz
cli
incb
enter
dec
xor
jecxz
daa
mov
mov
xchg
sar
jecxz
decl
fs
cmp
pop
xchg
pop
lret
rcr
sbb
lret
into
imull
push
roll
sub
fs
test
sub
xchg
xchg
bound
popa
call
inc
idivb
push
jne
mov
dec
mov
cmp
inc
cmpsl
repz
dec
ret
sbb
mov
mov
out
shl
into
dec
xor
out
and
inc
xlat
iret
imul
scas
scas
sub
ljmp
sub
jl
pushf
push
adc
ja
adcb
add
xor
pop
pop
add
pop
out
movsb
jmp
stos
out
cmp
sub
cmp
xchg
leave
dec
push
jge
push
rcr
cmpsb
fwait
sub
loop
fs
pop
jae
or
out
jbe
mov
imul
jns
pop
lds
xor
out
cmp
cmpsl
sub
push
test
inc
mov
hlt
loop
adc
fldenv
add
cld
pop
adc
and
lea
rcl
xchg
jns
mov
push
sbb
sbb
mov
sbbl
mov
scas
ljmp
xor
jle
lcall
lods
in
stc
out
inc
or
stos
je
pop
push
or
lea
mov
dec
mov
mov
mov
sarb
adc
enter
ja
push
add
negl
or
call
mov
shll
aaa
push
and
adc
std
out
xchg
nop
jmp
xorl
mov
popa
inc
inc
unpckhps
pop
aaa
mov
dec
adc
dec
leave
push
xchg
jg
jl
scas
xchg
pop
test
not
jmp
ljmp
dec
imul
lret
jge
idivl
icebp
dec
movsl
adc
jmp
sbb
jnp
push
jle
sbb
stc
scas
addr16
subl
addl
jmp
sbb
ja
adc
mov
leave
xchg
push
sub
nop
jg
xchg
ja
mov
mov
fisubrl
add
test
insl
movsl
mov
and
in
pop
cmpsb
rol
mov
ret
mov
test
pusha
repz
fstpl
clc
sqrtps
ja
test
mov
enter
adc
test
jne
inc
shll
add
fisubl
lcall
scas
sub
lods
notb
lock
mov
add
dec
jne
mov
xchg
and
and
jl
dec
dec
mov
dec
xlat
clc
insl
push
adc
mov
cwtl
adc
cmpsl
fwait
mov
clc
popa
fs
adcb
pandn
jae
or
jl
lcall
inc
cld
shll
cwtl
ja
popa
jg
lods
mov
into
js
subb
dec
push
add
aad
xchg
push
jge
cmc
fmull
mov
add
and
jbe
aam
popa
fcmovne
cmp
jbe,pn
out
rol
mov
mov
insb
jae
add
xchg
negl
or
mov
mov
dec
push
pop
xchg
nop
push
or
aam
arpl
jns
into
mov
and
call
xor
inc
test
mov
mov
sbb
lods
in
xchg
fnsave
jb
and
test
sahf
mov
push
es
jle
loopne
lock
jbe
mov
push
fiaddl
mov
inc
fnstcw
xor
clc
dec
lahf
push
stos
sub
mov
int3
or
sub
mov
lock
mov
jb
or
mov
push
fstpt
jbe
into
push
mov
imul
lods
fwait
jnp
scas
mov
xor
stos
and
dec
add
pop
cltd
sbb
and
dec
sub
mov
test
sub
mov
adc
rolb
xchg
out
sub
jge
mov
add
in
in
cmp
push
aaa
lcall
subb
sbb
dec
outsl
fs
inc
xchg
lods
mov
out
mov
inc
cmpsl
sub
mov
mov
mov
mov
jae
daa
andl
lock
sub
sub
cltd
outsl
mov
rcll
int
pop
push
inc
and
jmp
cs
jbe
push
addr16
or
mov
pop
dec
xchg
mov
fdivp
loop
and
mov
clc
mov
and
dec
xor
mov
je
ret
inc
push
in
sti
int
nop
cmpb
jle
lahf
bound
push
xchg
leave
out
cs
ds
lcall
adc
sub
rcll
inc
inc
cmp
lcall
push
rcrl
insb
cli
movl
lea
jno
sub
ret
inc
jmp
into
std
jno
sbb
insb
aaa
and
and
loope
test
mov
sub
loop
mov
rolb
dec
push
insl
xlat
mov
loope
xor
ja
xor
into
es
cli
jg
pop
or
dec
fwait
and
ljmp
and
in
ret
adc
hlt
lods
jg
jb
in
out
cmp
js
out
test
fsubl
iret
test
pusha
add
mov
outsb
out
or
cld
cmp
mov
jno
dec
stc
fwait
dec
cli
aas
mov
mov
ss
push
ss
mov
mov
pop
add
jae
sub
test
aam
sub
mov
insb
push
jmp
pushf
ret
push
dec
movsl
daa
push
popa
or
cmp
sbb
addr16
fdivl
ror
call
lds
and
shl
pop
sbb
inc
or
adc
rorl
add
dec
adc
xchg
mov
push
jne
inc
xchg
jb
ds
sti
shrl
adc
inc
lret
add
mov
out
in
inc
and
fdivs
dec
shlb
movsl
aam
mov
lahf
xchg
jno
adc
outsb
nop
xchg
jb
mov
test
iret
xlat
je
incl
xchg
nop
mov
das
ret
subl
add
ljmp
xor
sbb
mov
cmp
outsl
loope
add
push
mov
pushf
les
repz
xor
testb
adc
out
jmp
out
icebp
cmp
mov
rclb
dec
in
pop
ret
cs
mov
or
lock
push
push
pop
jbe
icebp
shl
lret
sub
test
pusha
faddp
mov
ja
pop
fmuls
pop
int3
divb
stc
cmp
mov
and
mov
add
lea
push
lret
dec
and
pop
and
mov
sahf
and
cmp
pop
sbb
aaa
or
or
sub
out
adcb
jae
pop
subl
in
js
ret
dec
pop
rorl
sbb
or
xchg
and
sub
cld
mov
and
push
aam
xor
clc
push
nop
mov
jo
sbb
sub
ret
insl
xchg
int
mov
sub
mov
inc
add
pop
mov
sub
adc
cmp
sbbb
cmp
sbb
mov
outsb
dec
lods
xchg
jne
mov
xor
jecxz
out
test
mov
dec
add
fisttps
jno
pop
pushf
cwtl
dec
mov
lahf
int
pop
push
pop
insl
jnp
ret
xor
scas
add
lods
leave
fistpll
or
add
hlt
adc
dec
sub
frstor
subl
fsubrs
pop
prefetcht0
subl
in
adc
adc
jnp
rcr
out
insb
mov
shll
mov
mov
and
cli
movsl
pop
xorl
das
ja
add
movsl
mov
xchg
daa
lret
fstpl
mov
out
inc
lea
bound
std
add
jp
arpl
pop
sub
pusha
pop
push
or
mov
pop
loope
jns
pop
nop
loop
dec
add
lods
test
cmp
cmp
inc
aaa
test
popf
xchg
ret
cltd
mov
out
add
pop
test
lods
inc
in
fldl
inc
pop
test
sti
cmpl
xchg
add
ret
xchg
ret
imul
shrl
xchg
xor
push
std
les
mov
push
dec
jl
sub
xchg
sub
daa
jno
sbb
push
cld
push
jge
aaa
push
xchg
js
les
cmp
jle
test
xor
or
dec
or
outsb
cli
ret
mov
xchg
adc
out
and
sbb
cli
scas
or
andl
aad
in
and
subb
test
pop
jno
pop
dec
popf
sub
xchg
push
adcl
out
adc
pusha
mov
fldl
mov
and
inc
lods
test
out
mov
jns
inc
pop
pop
test
lock
xlat
cmp
decl
sbb
fcomp
pop
subl
fildl
jne
sbb
sub
push
imul
lock
and
xor
enter
cmpsl
mov
lret
ror
add
mov
fsub
push
aaa
divb
inc
imul
aad
gs
jae
je
xlat
mov
push
dec
push
mov
cmpsb
mov
xlat
es
pop
nop
cmpl
jne
stos
and
mov
mov
loopne
test
std
inc
ror
push
and
mov
add
clc
movzwl
jmp
mov
and
xchg
mov
inc
xchg
push
inc
stos
movsl
sti
inc
sub
arpl
das
into
mov
icebp
adc
out
test
or
sbb
daa
mov
int
sub
shlb
ret
mov
sbb
shlb
mov
push
mov
aaa
mov
sub
push
sub
pop
cltd
cmp
jb
hlt
add
movl
dec
subb
mov
into
repz
push
push
push
cmp
cwtl
in
insl
shll
in
jns
mov
pusha
xchg
jle
call
dec
dec
call
adc
out
mov
adc
test
ljmp
insb
inc
pop
test
mov
push
and
jo
mov
pop
pop
push
inc
xchg
insb
cmpb
dec
mov
add
into
xor
add
jbe
jecxz
mov
mov
insl
cmc
add
push
and
movsl
xchg
out
xor
push
mov
imul
jno
lret
xor
sti
insb
xchg
mov
dec
add
inc
pop
pop
shl
lret
fidivrs
push
jl
je
fcoml
sarb
outsb
dec
push
aam
xchg
mov
sbb
and
lcall
xor
stos
mov
rclb
mov
mov
mov
les
data16
mov
lods
mov
inc
xchg
fdivp
mov
or
xor
push
aam
sub
jns
jbe
mov
sub
xchg
push
hlt
fwait
roll
sti
gs
out
lcall
mov
jbe
in
rcrb
lea
inc
das
mov
int3
stc
push
sbb
pop
and
dec
ds
test
sbb
fdivl
lods
cmp
mul
das
mov
and
sbb
es
cmc
jmp
push
adc
in
or
push
pop
dec
and
test
cmp
mov
jmp
daa
mov
push
xchg
inc
icebp
outsl
xchg
sahf
inc
jo
icebp
jb
ss
stos
push
add
pop
mov
and
out
inc
mov
inc
mov
jae
mov
cmp
jmp
stos
lods
jmp
or
push
push
js
mov
inc
jnp
pushf
stc
pop
push
lahf
xor
testl
jnp
les
stc
fistl
sub
mov
xlat
nop
push
jo
xchg
ret
jecxz
add
pop
inc
stos
bound
adc
rcll
shlb
in
dec
daa
lock
inc
bound
in
xor
jp
cwtl
ret
lock
in
sub
and
cmovno
and
add
mov
enter
outsl
mov
jne
inc
cli
xchg
addl
xlat
mov
lea
mov
cmp
gs
or
jp
pusha
push
inc
loope
loop
mov
sbb
xor
enter
pop
xchg
jecxz
scas
sub
cmp
sbb
inc
out
stos
sub
cmp
stos
push
jae
cmpsl
sahf
push
dec
mov
int3
xchg
in
aas
repz
scas
jb
xchg
leave
push
pop
dec
sub
cmp
loope
and
imul
xchg
cmpsl
and
fimull
notl
add
scas
cwtl
lods
das
push
jnp
sbb
cltd
jmp
mov
ffreep
adc
mov
add
ffree
fs
lea
test
xchg
mov
js
jbe
imul
enter
std
sub
shlb
push
test
mov
mov
icebp
mov
and
xchg
sbb
sahf
inc
stos
les
mov
rolb
jne
cmp
mov
nop
mov
popa
fsts
jg
adc
mov
inc
leave
out
out
test
sbb
jb
stos
push
xchg
inc
loop
pop
je
jne
cmpsl
stc
test
xor
xlat
lea
ror
notb
jns
test
or
js
das
fcomps
loope
es
rcrl
sbb
mov
dec
shlb
mov
mov
push
jnp
dec
mov
sbb
ret
das
xchg
lds
dec
mov
mov
jno
shll
lret
jg
pop
push
lods
cmpb
pop
in
jo
xchg
rclb
popf
cwtl
lds
inc
int3
or
inc
stos
adc
jle
fdivs
cmp
js
mov
xchg
dec
bound
les
pop
push
nop
jno
or
scas
mov
not
addps
test
and
pushf
iret
jbe
dec
movsb
mov
rcr
pop
lods
arpl
test
js
testb
push
mov
fcomps
push
xchg
jne
leave
fs
sbb
jmp
test
mov
popa
mov
mov
stos
push
stos
mov
int3
jno
mov
outsl
xlat
sarl
repz
add
leave
sti
push
sbb
pop
stos
cwtl
pop
or
inc
outsl
js
popl
jle
sub
xor
aam
aas
call
aam
pop
sahf
mov
adc
mov
jecxz
and
rol
add
dec
mov
adc
std
repz
pop
xchg
adc
inc
movsl
push
aas
repnz
addr16
push
loopne
and
movsb
mov
scas
pusha
insl
in
into
pop
inc
jecxz
pusha
dec
int
pop
in
pushl
inc
lret
or
push
dec
cltd
jecxz
dec
call
fcoms
std
shl
shrl
xor
out
push
lcall
faddl
sbbb
jmp
adc
pop
in
addr16
mov
jbe
popa
es
sub
add
mov
add
mov
and
adc
imul
test
out
test
or
sub
insl
pop
lret
sarl
cltd
xor
popa
pusha
or
into
mov
decl
sbb
push
jmp
dec
sub
sti
lea
jae
mov
bnd
negb
ret
push
mov
insb
cmp
scas
jge
add
popl
mov
and
cmp
stos
jno
lcall
push
test
cmp
lcall
int
shll
jbe
es
add
ucomiss
cmp
mov
push
cmp
pop
test
insl
in
pop
push
push
aad
mov
fldt
jne
push
xor
lret
sub
xchg
sbb
cmc
or
sub
jecxz
std
dec
pop
out
sti
faddp
enter
fsts
xor
mov
orb
xchg
sbb
jge
pop
repnz
xchg
push
dec
clc
dec
pop
dec
test
jns
jmp
cmp
sub
mov
or
jmp
rcrb
adc
lret
rorl
push
or
arpl
add
inc
mov
imul
jp
pop
mov
xchg
sbb
cmpsl
add
cltd
add
and
imul
in
outsb
add
and
mov
pop
jl
mov
inc
dec
jmp
jg
ja
and
sar
subl
jp
dec
into
push
pop
popf
bound
lods
imul
jne
aas
push
inc
or
and
mov
dec
iret
mov
aam
xchg
add
adc
fsubl
lcall
mov
lret
lahf
lret
loopne
cmp
test
and
fpatan
push
mov
lods
mov
add
leave
dec
mov
out
stos
aas
pop
mov
repz
inc
nop
mov
sbb
insl
mov
sbb
out
mov
out
ss
jno
and
add
xor
push
sbb
push
test
add
or
dec
and
clc
mov
mov
aam
inc
cmc
in
add
out
inc
fidivrs
sub
cmpsb
xchg
aaa
hlt
push
mulb
bound
adc
fiaddl
lret
out
xchg
push
jge
push
cmp
in
stos
fcomps
mov
mov
stos
fimuls
mov
sub
push
mov
adc
mov
es
stc
sub
sbb
mov
xchg
add
jg
xor
cmp
jns
mov
jmp
mov
arpl
push
inc
mov
or
paddusb
sti
scas
in
shl
add
pop
in
sbb
xchg
cmp
daa
mov
movsl
xor
clc
pop
mov
js
pop
pop
sub
out
sbb
jmp
pop
mov
inc
or
inc
loopne
dec
imul
adc
arpl
pop
imul
stc
or
or
movsb
mulb
and
jp
mov
pop
ss
jo
jp
adc
imul
jnp
mov
mov
jmp
addr16
in
sbb
cmp
sbb
mov
ds
inc
cmp
ret
and
mov
imul
pop
lcall
out
xorl
mov
out
add
cmp
pop
xor
push
xchg
pop
mov
insl
aam
test
push
mov
and
pcmpeqw
cmpsb
cmc
pop
sub
xorb
mov
mov
xor
in
pop
cmc
imull
push
int3
lret
xlat
loop
jb
js
lods
data16
xor
cmp
cli
lea
data16
decl
or
or
adc
fimuls
sub
mov
cs
jle
nop
jmp
out
aad
xor
mov
test
cmp
stc
mov
mov
stos
and
sbb
lods
xorl
push
jbe
js
shrb
jne
mov
mov
pushf
mov
lods
out
or
aad
mov
and
pop
lcall
xchg
pop
nop
arpl
mov
popf
js
jno
inc
pop
pop
mov
pop
xchg
jbe
arpl
je
jle
push
fbstp
rcrl
enter
jno
mov
mov
xor
in
pop
es
nop
mov
push
pop
inc
add
dec
loopne
push
shlb
xor
xchg
stc
pop
mov
and
adcl
lret
push
fcom
imul
xor
jp
pop
stc
insb
pop
dec
aam
outsb
cwtl
sub
mov
popf
adc
dec
add
dec
popf
mov
adc
hlt
movsl
data16
in
or
test
and
cs
xor
enter
in
movsl
popf
in
repz
mov
es
mov
call
pop
push
jecxz
push
pop
mov
push
xlat
movsl
push
sti
daa
fwait
in
or
inc
test
mov
icebp
out
aad
and
daa
repnz
and
dec
in
sub
or
ss
ret
popf
loop
insb
mov
stos
push
sbb
adc
mov
loope
add
push
mov
pop
xchg
lcall
fldenv
add
push
scas
das
add
out
gs
mov
imul
sub
imul
adc
imul
mov
inc
xchg
xchg
test
fbld
cmp
je
or
sbb
icebp
ljmp
cmp
inc
scas
pop
jmp
or
inc
cld
fbstp
movsl
mov
inc
sub
arpl
inc
or
shll
cmp
fwait
add
xlat
pop
jg
outsl
ds
in
movsb
mov
inc
in
jo
mov
scas
push
push
xchg
cwtl
or
ret
fcoml
pmulhuw
test
jp
clc
lahf
push
add
add
rclb
adc
cmp
mulb
push
mov
frstor
sbb
insl
test
cmpl
pop
or
idivb
fidivl
cmp
push
and
std
in
aas
mov
inc
dec
out
dec
pop
jbe
sub
mov
and
pop
out
aam
add
push
pop
push
or
les
sub
sub
in
ds
iret
rclb
out
clc
leave
mov
movswl
mov
lahf
cmc
ss
es
int
enter
jo
mov
xor
je
inc
mov
mov
or
ss
mov
push
in
lahf
mov
imul
movsb
mov
lock
fcomps
ret
lods
sahf
les
mov
lret
pop
call
insb
ljmp
rolb
cmp
cltd
int
adc
and
pop
mov
pop
pop
add
add
and
or
add
xor
add
dec
mov
in
loope
cmp
adc
jae
xchg
cmp
mov
fisttpll
scas
stc
jmp
into
test
stos
repz
cltd
dec
sub
push
mov
dec
xchg
pop
shlb
sub
xchg
scas
popfw
outsb
add
mov
jns
lods
jns
lods
cmp
dec
lret
rep
clc
sub
mov
mov
pop
shlb
xchg
inc
cld
or
js
or
ret
sbb
xlat
inc
sub
push
push
xlat
xchg
int3
mov
push
jnp
jno
inc
mov
mov
or
cs
adc
fisttpl
and
lea
lcall
pop
xlat
sbb
xchg
js
scas
push
cs
adc
lods
daa
jo
dec
jl
xor
hlt
pop
sbb
outsb
test
clc
cmp
stc
jecxz
adc
push
out
ret
mov
push
mov
inc
inc
jbe
sub
dec
sbb
int3
popa
aam
nopl
cmpsl
mov
ljmp
shr
cs
push
scas
out
mov
lds
adcb
inc
rclb
jbe
scas
daa
jl
lock
mov
and
sub
dec
testl
ja
mov
ret
stos
fcom
mov
jecxz
and
mov
fsubrl
lds
in
mov
jle
push
mov
inc
sbb
aad
sahf
pop
aad
jl
es
gs
addr16
pushf
nop
je
fiaddl
lahf
inc
leave
test
push
push
jbe
out
aas
pusha
das
push
outsl
pusha
sub
test
adc
sbb
sbb
add
dec
mov
jle
pop
imul
stc
mov
fmull
loop
leave
xor
lret
mov
jbe
pop
jle
dec
negb
lods
add
add
mov
rclb
out
les
dec
into
call
iret
mov
jle
sbb
inc
mov
mov
adc
add
shrl
mov
jg
cmp
sub
aas
adc
out
mov
sub
aad
popf
stos
shl
inc
jb
dec
insb
ss
stos
popf
dec
sub
orb
mov
andb
das
loope
xchg
sub
daa
lcall
mov
push
and
enter
pop
mov
xchg
rcrb
dec
mov
push
add
sub
or
enter
lahf
push
inc
loope
jmp
xor
and
jmp
mov
xor
ljmp
popa
pop
adc
cmp
incb
sub
inc
sbb
mov
xor
test
sub
inc
inc
mov
push
jmp
mov
arpl
test
cld
dec
ja
lock
movsl
sbb
lcall
sbb
dec
dec
xor
add
cmpl
gs
addb
mov
scas
enter
jecxz
movsl
push
adc
push
icebp
mov
dec
mov
scas
cld
push
in
push
shll
subl
dec
mov
pop
enter
into
in
push
push
jne
orl
popa
add
std
mov
out
mov
or
je
sbb
inc
leave
pop
dec
cmp
scas
or
or
lds
xor
jecxz
or
cmpl
jb
xchg
push
loopne
std
ret
dec
jnp
arpl
push
add
and
loop
mov
imul
fstpt
movsl
arpl
dec
dec
pop
clc
mov
cwtl
ret
sarl
xchg
push
or
data16
int
inc
and
cmpsl
jge
popa
js
loopne
xor
imul
push
sahf
mov
or
enter
sub
jne
outsb
xlat
push
and
xor
fs
or
dec
xchg
or
push
pop
rcll
pop
xlat
fiaddl
jecxz,pt
stos
mov
push
jg
out
jl
inc
xor
xor
mov
movsb
xchg
fsub
lds
test
xor
cmpsb
iret
sub
ret
xchg
xchg
scas
jle
dec
push
jl
or
nop
in
cld
movsb
adc
sarb
les
or
pop
ret
xchg
add
insl
test
mov
adc
repnz
mov
push
dec
or
mov
xor
sarl
fmuls
jae
xchg
scas
and
adcb
int3
movsb
mov
push
xor
js
pop
jmp
fisubrl
sbb
push
clc
lret
out
push
cmp
orb
jmp
aad
pop
mov
fiaddl
mov
pop
xorb
ret
fwait
push
sbb
xlat
pop
jbe
xchg
mov
jmp
dec
jge
lods
jp
mov
inc
sysret
into
les
xlat
arpl
repnz
pop
lahf
mov
or
aam
mov
dec
mov
push
adc
sub
imul
xor
out
sub
jmp
addb
xor
add
xorl
dec
fs
cltd
adc
adc
mov
jle
sahf
push
cmp
mov
fdivrs
js
dec
lret
andl
mov
cli
cmp
push
fimull
lods
cli
cli
call
enter
adc
mov
mov
lahf
jne
dec
push
or
sbb
jne
je
aad
pop
scas
lret
xor
add
xchg
push
pcmpgtw
xchg
add
cld
inc
xchg
clc
add
dec
pop
push
f2xm1
int3
das
adc
mov
xchg
pop
sub
jecxz
pushf
enter
xorl
adc
ud0
scas
sbb
ja
sbb
push
int3
push
pop
inc
adc
dec
mov
add
movsb
pop
gs
push
mov
stos
or
mov
jo
sar
insl
push
scas
mov
mov
fldl
mov
outsb
arpl
insl
xor
xor
enter
pop
dec
sahf
or
xor
xor
lcall
push
lcall
out
bswap
jp
ljmp
xchg
jb
test
in
adc
gs
int
xchg
and
push
dec
jecxz
mov
jge
inc
and
in
xchg
pop
adc
popa
push
fldenv
pop
xchg
jge
pop
mov
xchg
sub
dec
roll
in
mov
mov
or
lahf
popa
ljmp
adc
jg,pn
pop
call
cmp
daa
and
test
mov
in
les
jae
cltd
out
xchg
stos
mov
xchg
nop
loopne
negb
mov
imul
pop
in
add
or
xchg
cli
jno
mov
dec
fcmovnu
cwtl
imul
out
into
shrb
mov
jns
mov
sbb
sub
mov
or
jle
mov
loope
xchg
shlb
dec
sub
mov
lret
jne
xor
xor
daa
sub
add
testb
xchg
dec
ret
or
xlat
dec
cmpsb
xlat
popf
fstl
into
add
cs
je
pop
nop
into
ss
jmp
mov
aaa
aad
mov
out
fnstcw
ljmp
aad
aas
rol
fidivrs
push
test
pop
shrb
pop
sbb
or
sub
push
fstpl
jbe
aad
pop
jno
mov
mov
fldl
enter
lods
mov
das
mov
std
aam
add
push
mov
ss
xchg
fidivl
dec
out
int3
jge
cwtl
push
mov
int
jo
cmpsb
shl
roll
xchg
or
jecxz
subb
xor
dec
xor
xchg
xor
fst
iret
mov
cli
push
iret
cmp
dec
pop
jg
and
outsb
sbb
cmp
and
adc
inc
incl
popa
les
addr16
stos
in
cmp
js
jmp
loop
ljmp
pop
xchg
push
adc
mov
inc
mov
inc
cmpsb
push
jle
jb
test
fistps
sbb
jmp
pop
cmp
int
int
loop
les
xor
out
mov
jne
loopne
mov
in
rol
ficomps
xor
out
test
out
ljmp
jmp
mov
outsb
jle
sbb
iret
push
jnp
lret
and
mov
idiv
call
shrl
arpl
daa
inc
sbb
imul
repz
pusha
xchg
or
push
je
pop
jnp
arpl
pop
ficoms
daa
pop
cld
cmp
dec
add
mov
sub
pop
xchg
mov
mov
pop
mov
into
in
popa
out
fbld
sub
pushf
jnp
mov
inc
in
movb
bound
ss
xchg
fimull
mov
repz
inc
jmp
lea
movsl
jne
lret
popa
cmpsl
iret
into
dec
test
call
test
push
in
fdivrl
xchg
cmp
push
xchg
in
sub
push
test
nopl
bound
or
daa
jp
mov
fistl
pop
movb
mov
jo
mov
fiadds
js
int3
jl
add
mov
mov
xchg
xchg
lds
mov
xor
pop
push
pushf
imul
push
xchg
mov
ret
add
push
sarb
lret
push
add
sbb
sarb
test
scas
data16
movl
jl
inc
andb
sub
fsubl
lea
mov
push
dec
cmpsl
lcall
or
push
mov
push
stos
jae
in
movsl
sarl
push
int3
xchg
xchg
lock
pop
outsl
pop
mov
nop
cmpsl
inc
cmpsb
cmpsl
mov
sub
rcrb
in
fcmovnb
out
mov
addr16
sar
das
push
mov
jmp
xor
ss
orl
es
ja
scas
cmp
push
daa
inc
clc
dec
insl
test
inc
and
and
pop
lcall
jnp
lret
push
shl
ficoms
dec
mov
mov
jns
dec
and
dec
jns
das
adc
mov
mov
incl
sbb
in
mov
in
nop
and
fbstp
dec
adc
jl
lock
ds
jmp
mov
std
ret
cmpsl
adc
xor
ja
roll
lcall
adc
rclb
add
dec
adc
cmc
daa
inc
push
clc
pusha
xor
outsl
jp
inc
cmpsl
cmp
xchg
clc
jmp
test
imul
cmpsb
and
jp
gs
popf
lea
rcrl
adc
push
cmp
addr16
xor
sti
inc
cltd
es
iret
int
pop
mov
es
insb
sub
in
rcll
out
mov
mov
lods
mov
into
sub
pop
fwait
cmc
aaa
jecxz
movsb
mov
addb
mov
cltd
arpl
dec
xchg
sbb
stc
hlt
in
mov
movsb
dec
mov
jns
cmc
sar
pop
out
cld
sbb
fmull
adc
mov
popf
icebp
nop
xor
mov
mov
and
pop
inc
jae
jle
pop
in
out
mov
shlb
and
js
inc
xor
imul
dec
push
out
idiv
lods
and
loopne
or
stos
jl
cs
dec
sub
xchg
inc
cmc
jbe
xchg
lahf
dec
dec
ja
aam
pop
and
push
insl
dec
jg
lahf
or
push
and
lods
fsts
ss
mov
mov
xor
out
push
jb
jne
nop
adc
push
lret
mov
mov
and
loope
pop
rorb
addr16
fidivrl
push
push
icebp
pop
arpl
xchg
xor
nop
std
cmp
nop
mov
mov
mov
inc
sti
fwait
mov
jb
dec
push
mov
movsb
dec
mov
into
repz
xorl
xor
pushf
mov
mov
in
jnp
cmp
mov
push
ficoms
inc
stc
dec
xchg
inc
sbb
cltd
add
fstpt
and
cmpsl
decb
fstl
gs
repnz
or
add
mov
cmpl
xchg
arpl
ss
xlat
push
loopne
and
jge
inc
loopne
dec
pusha
call
repnz
cs
std
mov
inc
test
jp
add
stos
cmc
and
lret
or
mov
pop
xchg
sub
movsb
out
data16
sub
orb
pop
std
mov
cli
ret
jne
fs
add
push
sbb
test
std
inc
rcrl
pop
jno
sbb
arpl
mov
repz
jl
icebp
pop
scas
movsb
mov
inc
sub
addb
xchg
addr16
push
push
mov
hlt
push
sbb
and
inc
adc
lock
sub
fldt
add
adc
mov
in
pop
arpl
mov
movsl
mov
push
lds
xchg
daa
repnz
mov
cmp
scas
sbb
aas
jne
in
fs
stc
pop
sub
mov
popf
movsb
adc
ficoml
lods
lods
jno
ja
pop
add
jae
shrl
jg
shl
mov
adc
lods
and
lea
in
insb
xchg
popa
in
ljmp
mov
adc
in
pop
and
ror
cmp
insl
scas
fisubrl
scas
orb
in
sar
mov
ret
es
insb
out
scas
std
cmpsb
pop
mov
inc
movsb
lock
andl
je
inc
cli
ret
mov
xor
lods
xor
mov
push
outsl
sbb
xor
test
xchg
nop
test
sub
mov
lds
or
insl
fmulp
sbb
in
push
mov
pop
xor
lock
aas
insl
mov
jle
sub
jbe
fsubrl
dec
loop
pop
xchg
mov
jp
xchg
jae
pop
mov
sub
icebp
jp
jmp
xor
idiv
ljmp
dec
pop
xor
fyl2x
pop
mov
pop
or
mov
xor
sahf
popa
fwait
push
fs
out
in
sub
sbb
mov
rolb
mov
loop
movsl
fs
pop
fdivs
in
push
pop
sti
pop
fimull
pop
push
sbb
and
pop
cmp
and
andl
mov
xchg
mov
sbb
jne
lock
enter
sub
sbb
add
mov
adc
add
out
adc
imul
mov
repnz
pop
dec
into
mov
aam
or
outsl
xor
mov
lret
fsubrl
iret
sub
repnz
pop
jle
call
xchg
imul
inc
jge
mov
fnstenv
sarb
xor
inc
ficompl
mov
xorb
jae
xchg
mov
lcall
xor
xor
mov
jns
xchg
cld
rcll
fsubrs
sub
xchg
xchg
sarl
and
inc
cld
cmp
mov
lret
aad
addr16
xor
fistl
sarl
xchg
sbb
iret
arpl
aas
inc
adc
int3
add
or
orb
ss
xchg
test
and
or
mov
in
sbb
add
popa
lcall
jl
imul
clc
jl
push
dec
int
daa
in
in
enter
cmp
inc
mov
and
movsl
fs
cmc
mov
mov
pop
outsb
push
popf
mov
fldenv
mov
repnz
sbb
adc
mov
es
cltd
jns
mov
je
add
and
imul
or
pop
pop
cwtl
mov
pop
cmpsb
pop
mov
adc
cwtl
icebp
mov
push
and
push
pusha
add
dec
in
into
dec
sub
inc
sub
or
dec
push
int
scas
cmc
int3
dec
xor
out
stc
push
jecxz
lods
mov
in
xor
cmp
sti
xchg
insb
jecxz
repnz
jbe
or
inc
mov
mov
mov
sbb
mov
mov
icebp
sub
insb
cli
lods
push
mov
inc
icebp
inc
add
xor
movsb
inc
sarl
int3
cmp
sti
add
inc
xor
add
lret
xor
ds
cli
pop
xchg
mov
and
in
pop
pop
lea
movsl
out
lret
mov
dec
stos
mov
lea
in
jno
cmpb
lcall
cli
loopne
pop
pop
addb
gs
shrb
sub
addr16
not
mov
mov
mov
call
jo
movsl
out
cmp
orb
test
stos
lret
pop
and
ss
fisubrs
clc
lret
and
add
jnp
xor
pop
cmp
nop
scas
out
fisttpll
sub
xchg
cld
cmpsl
jnp
clc
aam
mov
fistpl
jno
call
add
outsl
xchg
stos
cvttps2pi
xchg
xor
icebp
sbb
idivb
and
int
dec
add
xchg
or
pop
sub
or
push
int
ss
addb
aas
in
xor
stos
jo
addr16
clc
test
in
dec
cmp
data16
lods
xchg
shll
sbb
push
xchg
sub
mov
sbb
dec
push
out
decb
xchg
mov
mov
dec
inc
scas
jae
in
pop
cmp
dec
jle
cld
iret
cmpsb
js
xor
push
mov
jge
sbb
js
std
ror
mov
push
xlat
mov
test
dec
pop
lret
adc
push
stc
ds
jecxz
rol
icebp
call
dec
bswap
aaa
xchg
inc
call
bound
push
fdivrl
loope
xchg
inc
pushf
xchg
inc
mov
arpl
mov
sbb
dec
or
jl
and
in
sbb
aad
mov
iret
pushf
cmp
shr
out
xor
sub
push
mov
int3
lret
add
jl
or
outsb
sbb
mov
push
sub
inc
bound
fwait
hlt
adc
lods
mov
and
jp
dec
dec
and
pop
fldcw
rcll
and
shrb
repnz
cld
pop
mov
push
int
enter
push
insl
shrl
xchg
xor
sbb
shll
add
stos
mov
lcall
cli
or
jo
int3
cld
jns
bound
mov
lock
rcl
shl
pop
xchg
or
push
pop
xchg
mov
das
daa
jne
out
loope
mov
lahf
adc
sti
in
fidivs
outsl
sub
scas
adc
int
inc
out
mov
inc
sub
sub
push
add
inc
lods
jbe
das
fs
xor
and
adc
mov
addr16
data16
repnz
call
inc
jg
les
inc
and
add
outsl
outsb
lcall
sub
xlat
add
imul
and
je
mov
xchg
scas
jne
sbb
mov
sti
pop
push
pop
iret
mov
add
dec
push
or
ret
lret
stos
mov
loop
and
in
fcomip
mov
push
xchg
mov
xchg
fidivs
fwait
andl
jae
xchg
sub
pop
mov
jg
push
lock
lcall
mov
nop
dec
push
pop
loopne
and
sti
aam
mov
mov
cmp
imul
out
clc
sbb
enter
mov
lods
lea
push
out
adc
testl
cld
sbb
daa
scas
xchg
test
js
sub
cmp
inc
xor
hlt
add
addr16
mov
lcall
scas
mov
stos
mov
notb
jno
sti
xor
sub
cli
dec
push
jbe
ss
mov
aad
lods
push
cmp
fisubrl
push
fs
adc
lcall
and
jle
adc
scas
sub
pop
adc
jmp
icebp
lret
xchg
invd
xor
ja
leave
dec
cmp
cmc
inc
xor
xlat
cmpsl
mov
cmpl
sar
push
adc
aad
ljmp
cltd
in
mov
cmp
mov
sub
cmp
pop
stos
cmp
pusha
lock
push
xlat
pop
fsub
dec
mov
mov
mov
stos
testb
lret
jge
mov
dec
js
lds
pop
pop
mov
ret
cmp
push
dec
aad
rcrl
sahf
push
aaa
dec
mov
addl
mov
shr
cld
pop
dec
cmc
cmp
or
add
adc
pop
or
dec
in
and
stos
mov
sbb
cmp
cmp
call
scas
xchg
push
cld
iret
aam
pop
fs
sub
pop
imull
pop
iret
jae
sbb
pusha
push
lret
gs
push
xor
xchg
add
mov
mov
pop
cld
pusha
ds
lea
iret
pop
test
mov
adc
pop
and
or
or
loopne
and
rorb
pop
push
dec
push
clc
test
mov
orb
cs
shlb
jbe
icebp
fwait
add
pusha
in
les
mov
inc
lods
pop
iret
jnp
and
cli
andb
in
sbb
jp
xchg
jbe
ret
fsubp
pop
xchg
sbbl
pop
adc
jo
movsb
or
loopne
xchg
rclb
xchg
mov
or
rol
mov
outsl
xchg
pop
jmp
xlat
inc
lods
popf
into
and
rcrl
sbb
out
and
sub
mov
pop
aas
movsl
inc
add
or
mov
outsl
pop
push
mov
inc
jno
fbld
cmp
inc
clc
fisttps
cwtl
cmp
xchg
ds
std
lret
dec
aad
movsb
add
outsl
pop
pushf
idiv
pop
dec
scas
sbb
sub
mov
jne
cmpl
xchg
cwtl
outsb
xorb
repnz
ss
mov
push
adc
cmp
sahf
test
fstpt
movsb
push
int
loope
movsl
testb
in
mov
rcrl
push
xchg
lock
xor
jle
movl
stos
icebp
pop
fidivrl
push
clc
inc
rcrb
aad
outsb
ret
lods
aas
rclb
cli
mov
mov
jle
popf
mulb
push
in
xlat
mov
in
divb
jg
and
jle
sbb
das
ds
fs
pop
sbb
xor
pop
push
cltd
idivb
sahf
push
jne
sub
push
cmp
test
add
pop
mov
int
pusha
sarb
loope
or
xor
pop
cld
sbb
cmp
icebp
push
stos
fwait
pop
sbb
mov
insl
mov
loopne
dec
push
push
and
xchg
sub
test
fisubrs
popf
sbb
test
stc
add
mov
sbb
fs
aam
mov
pop
cmp
dec
sub
ljmp
and
push
jmp
inc
mov
loop
mov
xchg
movsl
push
lea
enter
dec
pop
and
fadd
mov
clc
mov
lret
aaa
std
repz
push
push
aaa
mov
sar
cmp
aad
shll
and
flds
cld
lock
cli
or
mov
mov
mov
xor
int3
push
push
aas
in
cltd
jno
arpl
in
notb
mov
call
fdivrl
jno
lock
jle
jo
push
add
cli
mov
adc
mov
dec
sbb
push
pop
sbb
insb
hlt
sub
test
pop
add
mov
ret
pop
sub
jmp
dec
pop
popf
cmp
mov
mov
pop
dec
mov
leave
jmp
fdivrs
jl
pop
clc
xchg
sbb
clc
mov
cmpsl
out
jae
movsl
leave
sub
scas
inc
popa
pop
ljmp
call
inc
inc
repnz
xchg
push
pop
pop
push
lock
outsb
out
jp
mov
mov
and
pop
test
mov
cmp
test
repnz
sbb
fsubs
cmp
push
rcl
or
insb
mov
jbe
lcall
dec
lahf
outsl
dec
aas
jnp
insb
js
icebp
lret
jg
gs
mov
dec
out
dec
jo
int3
fcmovnbe
notl
scas
in
bound
xor
popf
scas
and
push
xor
out
add
and
popl
jne
add
push
shlb
shll
inc
push
stc
aam
test
mov
xlat
cli
test
or
in
fdivrp
mov
mov
data16
sahf
lods
dec
lock
movsl
xchg
and
mov
mov
and
pop
jno
cmpsl
and
dec
xlat
mov
mov
mov
sbb
push
sub
and
add
mov
popf
adc
push
mov
rcl
ret
sbb
and
mov
push
pop
jle
out
js
or
jl
sarl
ss
sti
or
jne
call
cmp
in
pop
and
push
pop
in
jmp
leave
fsubl
scas
mov
xchg
hlt
ds
js
mov
mov
push
mov
dec
mov
ret
aam
adc
sbb
les
dec
divps
add
adc
shl
scas
in
pop
in
push
mov
jp
pop
hlt
or
insb
hlt
inc
pop
xor
pusha
dec
cmp
mov
cltd
stc
push
adc
pop
ret
ffreep
out
leave
cmp
inc
sbbl
fnstcw
fcmovb
and
jno
mov
sti
ret
inc
popf
xchg
mov
test
mov
lods
push
cmpsl
dec
push
mov
mov
mov
fnstenv
and
loop
in
stos
push
jns
fsubrl
test
mov
ret
jnp
jns
pop
mov
mov
sbb
xlat
icebp
push
xchg
adc
push
inc
xor
addr16
pushf
rcrl
mov
mov
sbb
das
movsb
cmp
mov
test
sbb
shl
orl
fs
sub
cld
adc
xor
lods
or
push
iret
xor
in
add
cmpsb
and
outsl
dec
cmp
stc
repz
cmp
xor
std
push
jns
lahf
inc
rcl
pop
loope
hlt
jmp
ja
pop
in
mov
dec
out
inc
jne
movsb
pop
outsb
mov
inc
pop
ret
icebp
subl
popa
loopne
push
sbb
cli
aad
mov
mov
mov
popf
rol
divl
iret
test
cmpsl
jle
jge,pn
shrb
cmp
inc
bound
pop
dec
test
add
xchg
mov
pop
sbb
dec
mov
stc
outsb
in
out
cmp
sbb
popf
pop
and
sub
inc
jnp
mov
jp
loop
mov
rcrl
movsl
inc
hlt
jge
out
scas
pusha
xor
shl
lcall
xor
popa
bound
pop
mov
shrl
dec
mov
pushf
xchg
xor
gs
ret
decb
fadd
pop
shll
dec
data16
stc
dec
inc
incl
mov
mov
ss
insl
and
aaa
fdivr
sti
mov
mov
or
in
test
bswap
test
pop
fstpl
fstp
mov
dec
xchg
cmpsl
pop
xor
movsl
mov
jbe
insb
pop
sbb
pop
push
out
cld
xor
lret
test
fs
test
mov
mov
pop
outsl
push
js
fiaddl
xchg
loopne
or
mov
rcrl
push
sub
ja
adcl
test
xor
xchg
adc
in
adcl
xor
cmp
std
sub
pusha
push
cmpsb
shll
sbb
inc
orl
aaa
push
and
test
dec
push
or
pop
dec
mov
adc
lock
adc
sub
ljmp
rcll
test
imul
js
insb
cmp
mov
adc
pop
cmpsb
mov
int3
lea
jae
inc
and
out
loop
mov
sbb
sbb
push
cmpsl
adc
or
or
dec
and
test
push
push
mov
ret
call
push
mov
out
dec
cltd
mov
or
bound
and
stos
inc
push
push
out
shl
out
inc
jno
cmp
push
shlb
daa
sub
out
addb
icebp
sub
enter
push
fmull
push
cmp
lahf
movsb
mov
in
cld
pop
jnp
lret
lahf
mov
and
cmpsb
sahf
std
and
lock
aas
pop
sbb
daa
and
fimull
or
inc
inc
test
fidivl
and
push
je
scas
mov
jecxz
out
xor
mov
and
aaa
int
cmp
pop
xchg
out
movsb
mov
popa
int3
xchg
fmul
repz
popf
sub
adc
pop
in
adc
adc
mov
xchg
or
mov
jle
lcall
jge
mov
jne
push
dec
dec
jl
sub
lcall
adc
xchg
cmpsl
sub
or
shlb
cld
inc
mov
jb
xchg
andb
mov
xchg
inc
pop
shrl
cld
outsb
cmp
test
pop
pop
sub
and
sub
dec
inc
std
inc
cltd
and
std
sub
loop
mov
adc
inc
pop
sbb
in
xchg
mov
out
sbb
cs
xor
cltd
add
cmp
xlat
out
scas
adc
stos
adc
wrmsr
daa
jb
in
jo
cmpb
add
jp
aam
in
call
out
clc
cmp
jne
xor
push
scas
cltd
lahf
loop
mov
mov
mov
stc
loop
inc
dec
scas
push
push
xlat
mov
sarb
pop
cmp
incl
and
int3
mov
xor
and
sbb
iret
cmc
sti
add
mov
dec
sub
pusha
js
les
test
pop
push
call
shrb
xor
pop
mov
push
xor
fs
mov
fs
mov
dec
gs
inc
insl
sarl
fnstcw
aad
sub
adc
xchg
mov
lret
fnstsw
jno
sub
mov
out
in
xchg
cmp
in
enter
xchg
les
jb
jl
cmp
nop
nop
aad
mov
bound
fsubs
ja
ljmp
jl
xlat
stos
pop
out
mov
or
mov
in
subb
aaa
adc
cwtl
int
int
xor
fsts
cld
jecxz
mov
inc
push
and
add
adc
xor
scas
sub
int3
pop
std
out
scas
and
pusha
rcr
fcomps
icebp
cmc
xor
popa
mov
sbb
push
loope
push
iret
mov
mov
push
popa
sub
mov
sbb
cli
aad
pop
popa
add
cs
sub
xchg
jno
mov
and
and
movswl
dec
or
sbb
test
popf
jb
mulb
and
fnsave
mov
pop
adc
mov
sub
xor
icebp
sbb
cmpsl
xor
mov
add
and
scas
sub
rcrb
mov
xor
jmp
lret
jmp
icebp
dec
jg
xchg
lcall
lcall
in
movsb
push
and
sub
out
and
sub
dec
or
les
mov
mov
cmpsb
lods
dec
jns
xor
shlb
repnz
incl
mov
dec
mov
mov
fnstenv
mov
repz
pop
or
adc
jae
mov
jno
in
sub
fistps
js
cmp
push
push
sbb
in
mov
call
and
mov
lods
mov
inc
loopne
fisttps
addr16
aam
sub
fdivs
xchg
jle
rcr
lods
mov
push
leave
testl
es
jg
fcoms
cwtl
mov
cli
sbb
pushl
sbb
xchg
lret
xchg
ret
inc
loop
mov
cwtl
cs
mov
mov
stc
imul
ds
lds
imul
or
je,pt
adc
insb
call
test
dec
fisubrs
xchg
mov
adc
jb
popf
pop
push
sti
xchg
clc
imul
xchg
jmp
jmp
add
xor
mov
mov
ficomps
mulb
add
iret
std
lods
leave
sub
and
inc
out
ret
mov
mov
push
insl
lahf
jmp
sbbl
aaa
into
mov
pop
mov
scas
inc
push
or
adc
negb
cmp
pop
andb
sbb
scas
inc
cmpsl
icebp
jmp
inc
das
mov
stos
mov
fadd
divl
push
mov
lahf
cmp
int3
rcll
out
adc
cwtl
loop
cltd
jp
jo
adc
data16
stc
arpl
inc
rolb
lahf
sti
loopne
xor
sub
cmp
sbb
jge
fcompl
stos
insl
inc
push
scas
inc
rcl
ja
xchg
stos
stos
aaa
push
roll
les
cmpb
nop
sarl
xchg
cmp
aam
xlat
lock
adc
ficomps
faddl
sbb
and
gs
inc
insb
xor
cld
sbb
imul
and
es
in
cmp
dec
mov
xor
outsl
mov
mov
mov
rcrl
cmpsl
xor
pop
fwait
in
jnp
jnp
or
and
mov
adc
cltd
fadds
repnz
jbe
cs
outsb
call
inc
push
push
mov
push
add
test
mov
add
cmp
pop
mov
insl
inc
mov
cmp
xor
test
sub
inc
jle
xor
in
adc
fstps
pop
pop
shlb
test
xor
jp
push
movsb
std
xchg
push
inc
push
les
call
mov
xchg
or
sbb
cmp
ljmp
stos
lahf
mov
lahf
mov
mov
sbb
lea
sbb
push
lock
xchg
popa
das
jmp
dec
add
bound
push
pop
pop
mov
sbbl
mov
and
stos
mov
push
je
cwtl
outsb
addb
xlat
mov
divb
xchg
push
inc
mov
sub
cltd
notl
cld
sbb
cmp
push
push
leave
adc
mov
insb
pop
dec
inc
mov
add
clc
aas
je
dec
pop
insl
iret
std
je
in
jp,pt
and
stos
jbe
imul
mov
add
dec
pusha
lock
cmc
test
mov
pop
addr16
rcrb
mov
sbb
cmp
das
popf
addr16
loop
sbb
out
popa
mov
mov
in
add
xchg
fbld
shrb
adc
divb
xchg
cmpb
dec
pop
and
aad
adcl
inc
dec
adc
movl
ror
fcompl
mov
xchg
dec
clc
repnz
jb
add
es
iret
repnz
inc
jo
je
mov
in
cltd
inc
rolb
daa
push
sbb
imul
xchg
ljmp
xchg
push
in
sub
cld
fisubrl
mov
std
or
push
or
pop
or
jmp
loop
push
loope
fcomps
xchg
scas
out
dec
popf
aam
rol
pop
cmp
sbb
mov
cmp
or
lods
icebp
add
mov
push
xchg
test
mov
mov
dec
push
mov
sub
mov
jbe
adc
dec
xchg
inc
test
jge
jbe
inc
sti
mov
stos
xchg
xor
push
les
shll
add
in
das
mov
add
mov
push
int3
sbb
rcll
lret
mov
dec
iret
inc
addb
addr16
xchg
dec
out
insl
sub
fisttps
movsl
aas
enter
sub
ret
test
inc
scas
pop
push
sbb
aad
pop
jne
add
dec
jl
ljmp
scas
out
test
fdivrs
and
mov
dec
pop
scas
mov
test
repnz
cmp
sub
push
pop
jmp
jo
imull
and
std
popa
int3
mov
shr
imul
adc
jecxz
call
xchg
and
mov
dec
aad
into
filds
or
and
or
ja
and
test
cli
jg
lcall
mov
xor
jnp
in
insb
and
cmc
jmp
clc
cmp
int
out
aaa
xchg
push
pop
pop
cld
mov
js
lcall
mov
mov
jle
gs
int3
cmp
les
out
cld
repnz
xchg
loop
test
loopne
mov
pop
mov
loop
aad
ljmp
ja
cli
mov
xchg
js
add
xorb
inc
popa
pop
pop
int
and
sbb
andb
xchg
call
xchg
jecxz
jo
sub
sbb
cli
and
pop
xorb
sahf
scas
lods
jp
aad
fistl
jp
in
push
cmp
aas
push
das
clc
das
cmp
popa
lcall
ss
test
pushf
vmovups
ds
and
ss
push
pop
mov
hlt
cmp
jmp
xchg
pop
shl
mov
out
fisttpl
movsl
xor
dec
pusha
sbb
mov
mov
sarb
aaa
dec
adc
mov
inc
mov
outsb
loope
push
push
pop
push
out
dec
sub
xlat
icebp
sub
test
xor
add
sub
pushf
stc
dec
cmp
jecxz
push
xor
mov
aam
sbb
mov
popa
lods
sbb
arpl
sbbl
mov
addr16
add
xor
fldl2t
stos
pusha
mov
xor
out
and
imul
mov
xchg
mov
push
lcall
ret
addb
int3
insb
sbb
mov
jo
enter
pushf
out
fisubrl
fnstenv
pop
scas
es
movsl
xchg
xorl
cltd
mov
aaa
jle
inc
pop
xor
lcall
cmc
cltd
mov
sub
inc
push
xchg
loope
mov
xchg
scas
dec
mov
movsl
push
into
fdivrs
jle
and
popa
rcll
out
inc
add
fdiv
pushl
pop
aas
or
sub
mov
cmp
dec
xlat
pop
pop
cwtl
adc
jg
or
jmp
arpl
adc
inc
dec
and
pop
int3
mov
jge
int3
cwtl
xchg
in
cmp
aaa
inc
mov
add
dec
cmp
xlat
push
arpl
stos
push
push
cmp
or
popa
js
pop
in
push
xchg
aam
lcall
mov
mov
leave
or
shrb
or
pop
aas
lods
stos
sub
and
out
inc
lds
pop
xchg
xchg
cmp
sub
popf
out
cld
out
push
mov
scas
adc
movb
xor
xchg
into
sbb
cmp
xchg
ljmp
lods
cltd
add
jo
scas
add
push
out
mov
xchg
fmul
pop
mov
dec
dec
out
ds
xor
jo
rorb
xchg
push
xlat
int3
out
loope
push
add
test
bound
xlat
into
mov
and
jmp
cmp
pop
xorb
aaa
lds
xor
sbb
idivl
mov
stos
or
int
xchg
sarb
cld
fucompp
jp
negb
dec
mov
xchg
push
out
inc
fdivrs
pop
pop
hlt
ds
rolb
dec
mov
mov
lret
or
add
es
call
lods
nop
mov
lock
add
add
xchg
jmp
xchg
mov
test
lods
mov
repz
test
xlat
in
sub
dec
test
inc
jmp
data16
cmp
adcb
stos
call
sub
lahf
test
mov
mov
cmc
movsl
addl
std
iret
in
jne
push
inc
dec
sbb
cmp
mov
aaa
sahf
mov
fwait
push
mov
mov
out
nop
ja
outsb
int3
jge
lahf
insb
loop
das
sbb
jns
jnp
cmpb
xchg
std
popa
push
scas
cmp
in
pop
pop
sbb
outsb
fimuls
push
ss
jno
aam
mov
loop
lret
sbb
dec
or
mov
xor
cltd
dec
ljmp
pop
dec
xchg
mov
dec
fwait
xor
dec
bound
sbb
inc
add
jno
popf
enter
loop
or
fwait
mov
pop
and
xchg
and
xor
push
and
sbb
adc
dec
xor
stc
inc
mov
imul
cmc
adc
xor
xchg
dec
jecxz
cmp
mov
add
push
into
in
divl
sarb
inc
in
or
loop
test
jns
mov
mov
xor
addb
mov
and
scas
cmp
push
iret
mov
jae
clc
imull
jl
cmc
gs
and
movsl
pop
test
add
and
cmp
sti
sub
mov
pop
xchg
pop
xor
aas
mov
stos
pop
mov
hlt
xor
jge
pop
jle
cmp
lods
inc
adc
cmc
clc
lret
shrb
dec
mov
movl
bnd
or
icebp
lret
aam
jp
popf
lret
sbb
out
leave
push
les
jl
xchg
add
adcb
loopne
mov
dec
insb
and
inc
pop
mov
sarb
jl
and
mov
addl
lds
adc
enter
pop
xchg
bound
add
xchg
adc
sub
mov
rcrl
pop
movsb
push
ljmp
ds
mov
inc
push
jbe
dec
or
lret
and
cmc
outsl
push
mov
mov
shll
sbb
ret
jo
push
call
fbstp
cmova
insl
or
inc
jmp
imul
call
icebp
dec
aas
add
jmp
mov
mov
push
nop
popf
push
test
cmp
or
das
cmpsl
nop
fisubl
pop
shrl
push
gs
mov
bound
xchg
mov
addr16
popa
repnz
dec
pop
clc
mov
lods
sbb
pop
clc
mov
mov
mov
mov
mov
push
jmp
mov
mov
icebp
adc
push
pop
in
xchg
push
or
cmpsl
aas
std
mov
fstl
mov
and
es
pop
inc
xor
imul
xor
mov
std
cmp
and
adc
jp
sbb
outsl
cmp
pop
movsb
outsb
jne
sarl
out
mov
fstps
les
dec
adc
call
sub
in
mov
xchg
pop
mov
sub
insb
push
inc
sbb
mov
mov
sub
and
sahf
xlat
inc
insl
dec
lret
xlat
jbe
or
arpl
mov
test
popa
les
data16
dec
dec
inc
gs
mov
cwtl
andb
in
aad
sub
movsb
mov
jns
imul
adc
sbb
sub
lret
outsb
pop
add
mov
test
decb
mov
xchg
and
xlat
adc
dec
push
mov
sbb
xlat
xor
lods
in
mov
mov
jbe
and
push
pop
icebp
jecxz
adc
les
inc
push
pop
push
inc
cltd
xchg
jp
sbb
mov
or
pop
fdivrl
stos
jnp
lea
or
sub
shlb
outsb
push
cltd
imul
adc
push
or
and
dec
xchg
idivb
add
sbb
pop
dec
or
jmp
popa
push
xlat
push
push
lret
test
sbb
pop
xchg
fs
int3
loopne
xchg
repz
push
push
insb
push
inc
addb
xchg
sbb
add
lods
sbb
sbb
test
fmulp
or
aam
lds
mov
nop
pop
repz
push
fwait
test
data16
cmp
stos
aaa
lea
in
outsb
popf
cmp
fwait
cmpb
ror
test
fldcw
inc
add
outsb
pop
add
sub
cmpsb
jecxz
xor
and
sub
mov
rcl
push
mov
pop
mov
cmpsb
sbb
push
jp
in
add
lcall
in
test
push
outsb
movsb
push
ja
aas
lcall
shl
xor
fs
loopne
scas
in
cmp
pop
add
and
leave
jno
cmpsb
pop
fwait
lret
movsl
or
in
imul
scas
lcall
jp
xchg
add
in
into
and
lea
and
movsb
test
add
insl
setns
cltd
cmc
mov
std
mov
les
test
mov
jle
in
fwait
std
add
sti
jp
std
inc
pop
xchg
in
sbb
dec
subl
cmp
mov
inc
push
das
scas
decb
loop
jle
jmp
dec
lret
add
aad
movsb
pop
hlt
or
push
jne
dec
sub
cltd
movsl
inc
xor
ljmp
fsubrp
scas
lock
ret
sti
mov
stos
dec
in
sbb
xchg
mov
imul
jg
adc
sahf
mov
lods
aas
and
mov
and
cmp
pusha
loope
dec
inc
cmp
cltd
push
jl
adc
call
xchg
pusha
sbb
xchg
and
cmpb
mov
mov
lret
xchg
adc
mov
pushf
rolb
roll
popa
mov
sbb
stos
push
into
ja
out
sbb
cltd
pop
add
movsl
iret
int3
push
pop
stc
arpl
enter
jno
bound
ret
mov
outsb
sbb
mov
mov
pop
jp
or
push
in
mov
xchg
sub
out
std
dec
pop
jge
push
rorb
in
push
or
loopne
icebp
sbb
ret
es
jno
testl
outsb
mov
aad
cmp
pop
xchg
data16
pushf
push
mov
pop
test
mov
mov
sahf
jge
mov
sub
sub
out
and
dec
iret
pop
sub
sub
push
pop
mov
pop
cwtl
fimuls
lcall
sbb
mov
clc
loope
aas
cli
pop
mov
mov
cmp
fs
dec
lds
lods
pop
in
rcll
pusha
or
aad
xchg
divb
dec
lods
inc
fmull
jbe
testb
push
sub
shlb
inc
push
inc
xor
ja
cs
push
int
mov
cmp
divl
mov
es
adc
adcb
mov
adc
sbb
jno
imul
adc
mov
aam
cmpsb
loop
xorl
pop
scas
sub
gs
push
lret
shll
daa
aas
push
pop
aaa
aas
push
jg
fs
hlt
popa
mov
outsb
pop
sub
mov
aaa
cmpsl
add
or
lods
mov
call
jno
pop
movhps
jmp
mov
inc
add
out
rolb
fsubrs
imul
pop
sub
in
sbb
mov
sti
push
jne
lds
sbb
push
push
mov
out
inc
gs
mov
rorl
fildll
sbb
nop
mov
mov
sti
rclb
imul
pop
aam
sub
push
cmpsb
xor
in
jmp
rcrb
jne
sub
xchg
in
mov
add
pop
fisubrl
mov
loope
pop
insl
je
xchg
sub
mov
loope
jb
mov
pop
leave
hlt
mov
mov
mov
shl
xor
fwait
out
jae
ficoms
mov
andl
push
and
rcrl
fdivr
movsb
cld
cmp
lret
mov
pushf
cld
lods
cs
pop
push
imul
outsl
push
leave
imul
in
fwait
mov
cmp
push
inc
cmc
push
addr16
stc
shrl
pop
push
insl
mov
stos
orb
out
jecxz
lods
clc
cmp
idiv
mov
inc
dec
cmp
sbb
test
push
outsl
push
mov
or
ds
cmpl
in
stos
or
or
fdivrs
dec
pop
pop
or
addr16
bound
xchg
fcoml
aam
cmp
and
dec
adc
push
adc
lock
add
add
test
adc
les
popa
mov
mov
xchg
or
mov
or
xor
cld
push
or
xor
sub
fnop
adcb
push
jno
lahf
shl
lahf
inc
sbb
adc
nop
aas
daa
int3
shl
add
pop
inc
sub
sub
outsl
adc
cmp
mov
push
xchg
push
imul
ja
aad
and
jl
in
insb
mov
lds
out
jae
cmp
pop
test
fs
and
fs
out
movsb
mov
xchg
sub
sub
mov
rorb
pop
jnp
out
test
ret
mov
ficoms
mov
mov
and
mov
in
pop
push
sbb
dec
je
imul
mov
ss
test
or
jne
mov
pop
pusha
adc
loope
fnstsw
xchg
adc
dec
mov
pushf
inc
xor
cmp
pop
sbb
dec
cmp
hlt
std
nop
push
adcl
les
sub
clc
dec
mov
or
push
lahf
arpl
adc
push
pushf
fstpt
push
jmp
mov
lret
comiss
int3
dec
mov
mov
jno
loope
cmp
out
pusha
xor
pusha
test
inc
data16
shlb
lcall
add
add
lds
stc
loop
repz
cmp
push
and
add
sbb
loopne
adc
jmp
daa
arpl
rcll
inc
push
cmp
push
aas
mov
adc
outsb
push
addr16
push
adc
stos
pop
orb
push
dec
insl
pop
pop
sti
pushf
add
arpl
mov
sub
push
nop
adc
mov
jle
push
dec
mov
loopne
mov
fsts
rcl
cmp
js
jae
jmp
out
sub
mov
mov
sub
mov
mov
push
xor
sub
movsl
mov
xor
out
in
pop
js
jp
movsb
xor
sub
xchg
gs
cld
mov
lret
mov
inc
stos
cmp
lds
sub
and
inc
sbb
or
es
insl
ds
std
adc
sub
hlt
aad
repz
das
jl
sub
pop
adc
sub
fwait
stos
sbb
add
stc
adc
adc
pop
nop
test
lahf
jns
icebp
mov
jno
xchg
pop
inc
sbb
clc
pop
roll
sub
pop
lea
and
jle
push
jmp
mov
xchg
lret
xor
pop
movsb
jns
aas
ret
pusha
xor
lea
aad
std
stc
shl
cmp
scas
pop
psubq
push
and
out
adc
mov
icebp
xchg
int3
data16
aam
xchg
repnz
fidivrs
mov
cmp
sbb
push
sub
push
and
jne
jae
mov
dec
mov
dec
push
lret
push
sbb
icebp
call
inc
adc
mov
inc
in
stos
jno
mov
cmpb
inc
popa
lods
test
aas
jmp
mov
aas
sub
jb
pop
fdivp
cmp
pop
and
mov
mov
shl
lods
in
cld
push
fs
dec
in
mov
and
adc
adc
mov
scas
int
jns
into
scas
arpl
fcomp
popf
out
pop
mov
popf
fs
push
xchg
push
push
xchg
aaa
add
jb
mov
rclb
jno
adc
add
adc
push
lcall
out
out
arpl
addr16
rclb
xchg
loopew
stc
jl
xchg
shl
push
lock
adcb
cwtl
cs
xor
movsb
cld
jg
fnstenv
or
jp
mov
gs
or
adc
fucomip
aas
push
jns
ds
jo
pushf
cld
xchg
inc
lcall
outsb
fisttpll
js
aad
aad
mov
sub
mov
shl
jae
sbb
popf
popl
test
lahf
push
loop
mov
xor
sub
or
mov
repnz
test
out
std
popa
es
mov
sbb
je
int
push
mov
mov
repz
clc
xor
mov
js
dec
ret
out
cwtl
pop
cld
jg
test
enter
cld
push
mov
inc
data16
push
dec
movb
lcall
pop
ss
shl
mov
sbb
jne
ficomps
pop
test
outsl
lods
and
les
xchg
inc
mov
call
xchg
adc
std
sti
sbb
stc
dec
adc
fnsave
rorb
xchg
jg
cld
push
jl
into
sub
test
in
bound
xchg
jmp
pop
lcall
cmp
mov
xchg
inc
out
sub
daa
pusha
dec
jl
adcl
in
inc
imul
push
sahf
sbb
sahf
add
cli
jae
push
loopne
dec
leave
mov
ret
test
inc
addl
loop
int
sbb
push
shll
roll
or
cmp
dec
lods
cmpsl
cmc
push
daa
xchg
loope
repnz
test
push
in
loop
outsl
loopne
inc
cli
std
ret
sub
xor
adc
arpl
in
rolb
daa
pop
jl
xor
jg
outsb
sahf
push
inc
add
cmpsb
xchg
mov
jmp
adc
cmpb
mov
xchg
shl
adc
aad
arpl
or
inc
dec
aas
cmc
add
xor
les
pop
ljmp
hlt
inc
mov
jns
jne
hlt
sarl
inc
sub
lods
aad
les
inc
adc
adc
mov
imull
lds
test
sti
xchg
iret
pop
add
mov
gs
cmp
add
fs
push
fimuls
and
sub
mov
je
mov
stc
jecxz
divb
adc
pusha
mov
dec
dec
and
mov
sbbb
cmp
stos
pop
pop
imulb
sti
mov
cmp
jo
inc
push
cli
mov
xchg
jmp
mov
ffreep
enter
fs
scas
popa
cmp
loopne
enter
in
sub
or
gs
and
fbld
xchg
pop
push
jo
cmc
mov
push
mov
xor
mov
pop
adc
push
out
jns
mov
test
fdiv
jno
daa
mov
in
loop
aam
out
out
icebp
pop
repnz
mov
sti
jae
sub
adc
js
rorb
je
push
pop
mov
daa
jb
mov
lret
daa
sbb
insb
adc
scas
movsb
pop
dec
adc
jns
cmp
dec
sbb
xchg
xchg
mov
pop
xor
pushf
cmp
rcl
add
addl
test
adc
aad
dec
xor
xchg
xor
or
loopne
mov
jp
mov
xor
decb
inc
clc
loope
ss
fisubrl
lods
movsl
aam
mov
outsl
or
xchg
js
jbe
adcb
add
insb
cmp
aas
in
pop
imul
dec
test
mov
inc
jnp
inc
dec
inc
inc
jne
ret
pop
push
jp
fcoms
jbe
sub
mov
cwtl
pop
ja
jnp
dec
out
bnd
sub
push
xchg
dec
push
jo
cmpsb
je
dec
das
mov
pop
cmpsl
jecxz
shl
ja
lcall
inc
jmp
sub
inc
add
movsb
aam
push
push
lock
movb
repnz
mov
pop
jl
lret
movsb
stos
adc
mov
lods
cmp
dec
fsqrt
test
pop
pop
je
hlt
scas
mov
xor
dec
xchg
int
scas
xchg
mov
scas
push
inc
addr16
sbb
push
adc
andl
xor
mov
xchg
cmp
icebp
push
mov
cmpsl
sub
adc
push
sbb
adc
sbb
shl
sub
icebp
jae
push
pop
mov
cmp
add
push
mov
movsb
jmp
pop
ds
cwtl
pop
gs
jmp
jg
add
test
pop
push
pop
cld
mov
stos
mov
mov
out
jns
sahf
jmp
and
dec
in
popf
movsb
test
jmp
cli
add
pushf
outsl
je
mov
mov
into
ja
test
in
fcomps
enter
ja
lea
in
cmpsl
testl
out
xchg
clc
xchg
flds
mov
popa
pop
ja
bound
out
cmp
add
jmp
mov
sbbb
sbb
hlt
dec
fcomps
add
rclb
scas
aam
adc
mov
lock
pop
sbb
in
movl
cmp
test
xchg
roll
ficomps
sub
add
xchg
mov
xchg
inc
mov
mov
adc
outsl
jp
sbb
loope
pop
mov
sahf
dec
xor
mov
dec
fnstsw
cld
push
or
ss
xor
inc
pop
add
push
ljmp
daa
in
leave
jecxz
movsb
subl
mov
cmp
lods
mov
and
cmp
add
fiadds
xchg
aas
push
clc
push
faddl
inc
adc
cmp
jecxz
mov
out
xor
pop
ss
mov
call
sahf
or
mov
js
ljmp
loopne
out
jecxz
shlb
xchg
in
leave
sub
jne
push
stos
push
test
repz
mov
scas
pop
popf
es
jae
sub
add
mov
or
cmp
fadd
jg
ss
push
xor
xor
push
sbb
das
and
push
pop
out
mov
mov
adcb
sbb
add
cmp
inc
adc
jae
rorb
movsb
rcrl
imul
mov
fdivrp
imulb
mov
shrb
repnz
cmpsb
int
cli
loope
dec
mov
dec
imul
cmp
dec
gs
mov
pop
cmp
jne
sub
mov
clc
orb
stos
sbb
pop
mov
push
outsl
push
cmp
insb
inc
inc
and
cltd
dec
test
dec
sbb
push
mov
sbb
jae
mov
rolb
ss
icebp
inc
fistpll
inc
in
jge
pop
jo
pop
enter
sbb
mov
jae
daa
movsb
adc
es
cmp
xchg
xlat
or
int3
push
outsl
ret
jge
mov
in
inc
cmp
mov
dec
sub
pop
xor
lahf
xor
push
jns
mov
icebp
out
push
lahf
mov
es
ljmp
jo
loope
mov
jnp
pop
mov
std
inc
add
lahf
repnz
add
pop
insl
xor
pop
sahf
pop
out
in
xchg
in
roll
fs
or
mov
push
popa
dec
insb
jnp
cwtl
sbb
dec
mov
or
leave
mov
and
pop
sbb
jp
ljmp
add
push
imul
sbb
sbb
jno
ja
add
mov
outsb
or
xchg
loopne
jp
aad
dec
mov
mov
or
lds
in
das
cli
into
jge
mov
movl
mov
pop
leave
sbb
xor
popf
iret
mov
and
jns
mov
pop
adc
lds
repz
shlb
out
or
outsb
pop
out
fimull
out
test
out
inc
lock
dec
mov
jge
xchg
fcoms
stos
aam
cld
out
enter
adc
fs
push
push
push
lds
fimull
mov
cli
pop
fs
mov
or
das
scas
push
dec
aad
push
sub
popf
cli
add
xchg
xor
inc
cli
fdivrs
out
sbb
dec
mov
mov
mov
dec
push
push
xchg
cmp
inc
loop
and
push
nop
addr16
sahf
pop
inc
fbstp
mov
dec
jp
rcr
outsl
jmp
sbb
jno
sbb
xchg
fisubs
and
repz
lcall
mov
mov
inc
lcall
popa
push
out
andb
mov
add
sti
lcall
inc
aad
mov
mov
and
sahf
rcl
mov
inc
adc
sub
das
and
imul
pop
mov
xor
cs
jns
enterw
cli
frstor
cmp
je
aam
xor
add
mov
xor
pusha
mov
sahf
or
mov
ja
les
mov
fcomps
and
aas
sub
in
or
test
int
test
pop
mov
xchg
mov
loop
add
cmpsl
fwait
push
or
scas
inc
hlt
int3
es
cmp
pop
or
lcall
mov
lcall
imulb
mov
cmp
dec
add
lods
mov
xchg
icebp
mov
and
enter
lret
push
mov
repnz
pop
sbb
in
stos
pop
lock
cmc
lret
push
ja
ret
mov
das
inc
mov
dec
enter
or
dec
xor
idivl
fidivrl
pop
jns,pn
js
mov
popa
jg
xchg
stos
add
mov
icebp
das
push
call
sarb
jb
repnz
js
jge
xor
dec
mov
push
push
push
out
xlat
cmpsl
add
stos
out
and
imul
sbb
loopne
push
xchg
push
sub
loope
test
shr
popf
and
adc
jl
dec
cmpb
mov
data16
push
ret
xor
xchg
dec
xor
fildl
jl
aas
pop
repz
sti
rorb
fimuls
notb
idivb
test
jb
pop
sarl
xchg
mov
push
sbb
xor
lock
sbb
and
ss
push
dec
inc
push
outsb
xchg
out
out
cs
sbb
loopne
notb
or
in
orb
mov
test
in
push
clc
adc
sbb
out
notl
in
enter
inc
out
call
inc
les
push
push
push
xor
xchg
inc
jg
pusha
lds
fcompl
std
popf
mov
dec
rcll
or
sti
mov
aad
push
int3
test
enter
fwait
lea
and
leave
sbb
pop
sbbl
fisttpl
lods
mov
or
push
mov
hlt
push
hlt
pop
rorb
out
jb
in
jns
cmc
fldenv
outsb
notb
arpl
jo
ja
out
cmp
adc
cmc
xor
dec
cmp
mov
cmp
shrl
push
icebp
fdivrl
cltd
push
out
sub
lods
stos
test
push
mov
mov
mov
or
sbb
arpl
imul
aam
stos
mov
dec
mov
jecxz
int3
movsb
mov
jecxz
adc
xor
fidivrs
lock
insb
pop
repz
dec
sub
mov
insb
adcb
addr16
call
test
pop
xor
outsl
adc
push
mov
mov
ds
mov
inc
cld
shrb
rcl
mov
dec
push
enter
ret
xchg
stos
fwait
add
cmc
outsl
mov
pop
or
fdivrs
jmp
pop
mov
push
adc
mov
sbbb
add
sbb
sub
or
adc
icebp
popa
rorb
lods
jae
sbb
sbb
or
push
mov
xor
sub
mov
xchg
fisubl
jecxz
loope
push
and
and
mov
cwtl
jl
or
out
xor
and
cltd
mov
pop
test
jge
cmp
out
sbb
sbb
les
out
mov
ret
adc
or
mov
call
ffreep
outsb
xlat
ret
int
pop
xchg
pop
rcl
xor
fsts
pop
iret
push
mov
inc
das
mov
xor
push
clc
sbb
and
mov
mov
pop
mov
jae
xor
and
std
test
push
addr16
je
loop
sub
repnz
fnsaves
rolb
call
bound
sub
das
insl
loope
and
xchg
int3
mov
jecxz
out
in
js
xchg
insb
int
stos
pusha
mov
out
mov
lcall
inc
push
std
test
inc
out
pop
lds
push
addl
ds
mov
lock
repnz
out
bound
pusha
push
and
cltd
mov
mov
insb
xor
jmp
inc
and
xlat
xlat
lods
sbb
mov
push
sbb
push
cwtl
lahf
jle
stc
dec
or
in
push
cmp
ljmp
paddq
sbb
test
push
lahf
mov
mov
fistps
jg
mov
arpl
ret
cltd
sbb
sbb
pop
add
fucom
and
sub
out
dec
idivb
sub
pusha
aaa
sbb
push
rcll
dec
and
pushf
xchg
in
fisubrl
pop
lea
out
cmp
cltd
fnstsw
jae
enter
jle
jnp
cltd
test
lds
shll
xor
lret
dec
xor
cld
cltd
pop
add
fsubrs
adcl
fcoms
dec
vldmxcsr
push
mov
jno
mov
and
lret
sbb
ds
push
cmpl
stos
cmc
cltd
cmp
pop
nop
xlat
add
cmp
push
push
adc
lods
movsl
int
xor
out
mov
scas
jns
sub
addr16
dec
or
push
pop
sbb
inc
adc
pop
es
andl
jp
mov
sbb
jecxz
inc
inc
shll
inc
ret
cmc
mov
and
int
popf
inc
xchg
inc
aas
roll
adc
adc
inc
add
or
dec
cmp
sbb
faddp
or
pop
dec
bound
pushf
fisubrs
stos
ja
push
inc
cmp
xchg
ss
pop
stc
cwtl
mov
mov
mov
pop
and
cmc
fs
test
mov
lods
bound
loop
fs
pop
lods
add
sub
jl
popf
fisttpll
xchg
mov
andl
fcoms
adc
movsb
popa
dec
lea
mov
arpl
xchg
das
gs
addl
jo
mov
jp
or
dec
mov
cmp
fisttpll
jmp
es
push
popa
popf
inc
xorb
leave
inc
mov
fsubrs
xor
pop
lea
bound
add
mov
aaa
ret
or
cltd
addr16
loopne
les
jle
mov
into
add
in
mov
leave
sar
inc
mov
xor
in
fimull
sub
cli
ljmp
shlb
lea
loopne
out
inc
xchg
ficoms
in
pusha
inc
dec
xchg
mov
in
mov
mov
mov
in
ja
pop
dec
rol
xor
mov
xchg
clc
js
lahf
gs
int
jns
xchg
cli
pop
dec
and
push
mov
cmp
jb
dec
cmpl
ret
or
mov
jmp
scas
ljmp
pusha
push
jmp
dec
or
inc
movsl
jns
adc
jl
xchg
std
mov
ss
adc
into
insb
shlb
or
ja
mov
cmc
mov
mov
sub
ss
sbb
xchg
out
daa
dec
aaa
mov
fstps
jp
jo
test
mov
divps
sub
mov
sub
pop
loop
lcall
mov
mov
sar
insb
jb
lods
xchg
leave
fwait
push
fs
je
push
int3
push
mov
pop
xor
cmp
sub
pop
inc
mov
mov
filds
shrl
sarl
cmp
lcall
shr
mov
addr16
std
lret
fs
xchg
cmpsb
cs
or
pop
xor
shr
jbe
ret
arpl
std
in
adc
shlb
sbb
fildl
cwtl
mov
sub
out
shlb
adc
push
mov
jp
fsubrs
aaa
jne
fwait
mov
cmpsb
sbb
arpl
push
pop
gs
push
movsl
sarb
mov
ss
mov
insl
ja
dec
sti
rcrl
mov
adcl
pop
cwtl
jge
and
add
xchg
loop
enter
std
adc
loop
in
jge
lret
sbb
aaa
jae
aam
daa
repnz
push
push
push
inc
mov
or
mov
add
jno
outsb
cmc
loopne
inc
fwait
aad
xchg
lcall
jns
mov
xlat
ds
fidivrl
cmpsl
in
fwait
sbb
pop
addl
pop
or
adc
mov
es
mov
dec
push
xchg
lahf
adc
pop
imul
ss
xorb
std
sahf
dec
pop
mov
pop
push
sub
jb
rol
xchg
mov
xchg
dec
mov
push
push
pop
in
pushf
out
cli
push
mov
jns
mov
jno
stos
mov
mov
into
out
fstpt
aad
sarb
fs
pusha
ds
lock
mov
sub
jb
jb
ret
push
sub
lcall
jnp
mov
negl
push
repz
sahf
fwait
mov
add
std
in
in
mov
mov
mov
pop
js
jne
clc
pop
insl
fimuls
xchg
pop
xor
xor
lods
jae
sub
sbb
hlt
xor
adc
out
pop
adc
or
test
push
fwait
sbb
cwtl
in
stc
jb
push
sti
dec
data16
aas
sahf
mov
push
mov
lds
je
shlb
jl
push
outsl
jecxz
cli
test
inc
ja
add
pop
mov
pop
jmp
jno
inc
mov
pop
mov
cmp
fnsave
test
mull
mov
dec
outsb
sub
cmp
mov
into
daa
fmul
inc
mov
jb
xor
subl
sub
xor
loop
in
cli
jo
mov
repnz
mov
xor
xor
nop
testl
and
movsl
mov
lret
rorb
inc
mov
add
add
sbb
mov
arpl
dec
mov
jmp
in
mov
ror
inc
mov
roll
xchg
jns
dec
jmp
dec
jle
scas
sahf
pop
push
and
out
adc
sub
or
dec
testl
fmulp
imull
popf
adc
mov
inc
jge
adc
fs
testl
in
add
dec
sub
scas
jp
pop
and
aam
pop
cmp
push
mov
mov
push
popa
stos
scas
jle
and
pop
bound
cltd
test
imul
xor
push
stc
je
sbb
cmp
xor
cwtl
xor
cltd
pop
fucomi
mov
lcall
pop
sub
jnp
popf
icebp
popa
push
addr16
shll
sub
aam
push
jg
jne
or
or
xchg
lcall
jno
fwait
pop
pop
insb
stos
loope
test
test
inc
jnp
orb
adc
pop
xchg
enter
add
xchg
icebp
xor
xor
gs
add
ds
mov
scas
cld
add
mov
inc
pop
call
les
bnd
rcl
iret
lea
jo
push
fcompl
loope
pop
lahf
pop
mov
fcomip
jbe
lock
fwait
cs
lods
pusha
into
inc
imul
das
lds
push
inc
int
aaa
es
dec
lret
arpl
jl
dec
es
imul
mov
pushf
push
lock
push
ret
in
sub
xchg
ds
loopne
xchg
cli
xchg
cmp
pop
icebp
jge
dec
popa
sub
push
mov
scas
add
adc
icebp
clc
sti
cmp
imul
xchg
sub
push
iret
xlat
mov
leave
testl
dec
inc
dec
jb
pop
call
jbe
push
out
mov
and
sbb
pop
ljmp
push
sbb
popf
xchg
jp
stos
mov
out
dec
mov
jo
xor
mov
mov
pop
in
sub
mul
add
adc
and
call
inc
out
xor
mov
xchg
dec
and
out
xlat
mov
cmp
mull
imul
push
add
lcall
fildl
jecxz
out
iret
cmp
xchg
sbb
mov
cmp
jmp
imul
nop
inc
lods
xor
out
iret
gs
lahf
push
test
pop
jmp
and
jecxz
mov
and
adc
sbb
or
xchg
fadds
std
and
and
out
notb
fcmove
push
shufps
or
pop
mov
stos
or
sub
inc
std
popa
in
test
inc
mov
mov
cltd
js
mov
lahf
gs
adc
and
pop
test
jmp
dec
mov
pop
dec
push
shrl
pop
dec
push
hlt
mov
push
push
imul
fsubs
aad
ljmp
push
pop
jne
sbb
add
mov
and
pop
mov
push
mov
stos
jne
add
pop
fnop
push
out
ss
je
lds
dec
xchg
xor
xchg
leave
pop
or
js
xchg
fmuls
jle
repz
sub
int3
sbb
ficompl
cmpb
sub
inc
sbb
jl
leave
or
pop
mov
sbb
xchg
setge
aad
int3
jb
xchg
das
rorl
xchg
sbb
dec
popa
ss
fwait
insl
cs
jp
sbb
push
xchg
cmpsb
pop
or
shll
inc
jnp
inc
leave
pop
xor
loope
les
insb
mov
xchg
pop
lea
inc
sub
repnz
sbb
sarb
aas
sbb
jo
dec
mov
les
and
test
pop
inc
pop
cmp
sbb
lods
ss
xor
push
mov
inc
sbb
gs
pusha
jne
sbb
xchg
xchg
cli
rorb
mov
inc
jg
cmpsl
cmp
in
fisttpl
pop
mov
hlt
popf
cmpsl
inc
jbe
jp
mov
jecxz
std
popf
inc
cltd
in
outsb
mov
xchg
fldl
negb
inc
test
jmp
push
mov
cli
dec
repz
fscale
jbe
sub
mov
xor
cs
adc
aam
nop
xor
lret
cmp
in
aad
push
enter
add
cmpsl
sbb
xchg
inc
bound
xor
fmuls
shrl
pop
cld
leave
mov
xchg
mov
mov
adc
dec
jns
in
sub
hlt
mov
out
sub
push
xchg
dec
mov
sub
mov
dec
jbe
lret
push
push
or
push
push
popf
ss
cmp
inc
push
add
mov
push
mov
pop
push
pop
jns
and
cld
sub
mov
hlt
imul
or
outsl
cmp
mov
xchg
sub
mov
mov
cld
pop
add
faddl
mov
dec
adc
movsb
and
jbe
mov
repz
in
ja,pn
ret
sub
mov
lods
lds
aas
sub
gs
fadd
pop
int
mul
mov
std
leave
sarb
mov
dec
out
add
loopne
je
pop
xor
adc
adc
sub
push
sub
sbb
scas
mov
jmp
and
ret
aam
and
push
xchg
packsswb
sub
mov
aaa
mov
xchg
jecxz
add
repz
fsts
adc
loope
ja
movsl
push
loop
sbbb
cmp
dec
lds
aaa
es
aam
xchg
mov
flds
mov
stc
push
lahf
vcvtps2pd
pop
outsl
ss
fwait
mov
pop
test
push
sahf
enter
jbe
das
or
xchg
mov
je
pop
ret
rorb
std
xchg
int
test
mov
lea
adc
dec
jecxz
inc
shrl
mov
xor
pop
imul
jae
rolb
jg
test
mov
sub
aad
aam
mov
in
or
jnp
dec
or
sbb
rorl
cmp
loope
and
sub
addr16
pop
cld
out
int3
xchg
in
jnp
and
mov
inc
js
cli
roll
loopne
cmp
loopne
lret
sub
and
jle
sub
xchg
xor
mov
cltd
sahf
mov
popa
jns
pop
shld
cmp
sbb
push
rcl
iret
sub
andl
xchg
out
inc
ret
scas
test
into
mov
enter
jle
cltd
lret
or
mov
dec
jnp
clc
sub
adcl
cmp
push
std
arpl
sub
pop
cld
fldl
cmp
test
pop
mull
ret
rcrl
or
push
and
pop
push
push
in
pop
push
lahf
jg
push
inc
mov
push
fwait
and
ja
lahf
jbe
dec
aam
lods
je
mov
mov
or
and
mov
lret
sub
jmp
adc
call
nop
fimuls
cmovle
jbe
int3
push
jecxz
aam
sbb
cmp
and
outsl
std
test
xchg
lret
xor
mov
int3
adc
inc
xor
lds
cmp
mov
hlt
inc
cmp
add
fucom
mulb
add
lods
and
jle
jae
push
cmp
test
sbb
sub
lods
sarb
xchg
mov
addr16
mov
mov
inc
cmp
ja
mov
pusha
push
mov
mov
sub
jl
pop
inc
jns
inc
mov
mov
mov
mov
jmp
sbbb
sub
push
in
rcll
cmpsl
inc
pop
test
bound
int3
adc
cmp
stos
ja
in
xchg
clc
aas
pop
bound
lea
int
xchg
or
mov
and
cmp
mov
pop
and
sub
or
or
and
sbb
xor
int3
in
adc
cmp
push
push
jnp
xchg
imul
sbb
shrl
dec
mov
mov
orl
jne
adc
loope
and
call
add
cmp
mov
sarb
ss
les
mov
dec
xchg
test
add
jno
jnp
int3
mov
loopne
and
repz
repnz
not
jmp
adc
pop
nop
xchg
or
inc
push
pop
lds
in
lahf
and
inc
xchg
push
popa
xlat
lret
and
mov
push
hlt
jl
cmp
vprotq
pop
adc
push
fwait
hlt
xchg
xor
lods
inc
call
cmp
ja
imul
mov
fistpl
test
popf
rcll
aad
dec
ss
testb
xor
shrb
inc
pusha
jmp
icebp
sub
and
jb
fmuls
cld
aam
out
jecxz
fsubl
nop
rolb
jmp
adc
xchg
pop
xchg
dec
xchg
sub
sbb
jl
repz
push
sbb
mov
inc
pop
sbb
popa
push
push
sub
fs
pop
xor
jmp
xchg
inc
xchg
adc
or
adc
neg
xor
test
roll
xchg
inc
xchg
jp
sti
sbb
mov
movzwl
loopne
mov
shll
int3
orl
inc
dec
mov
stos
push
sti
fisubl
popf
xor
pop
jmp
sbb
and
pop
data16
xor
rcrl
inc
sbbl
pop
into
ja
popa
push
sbb
push
lret
leave
adc
and
sbb
je
jns
test
js
popf
mov
out
cmp
xor
jle
jle
fwait
popa
mov
stos
roll
stc
sar
outsl
dec
pop
mov
cld
sbb
xor
les
cmp
xor
lea
inc
repz
jb
nop
int
stos
cwtl
imul
xchg
ljmp
or
adc
int
mov
jns
push
cmpsl
stos
cmp
and
stc
mov
into
loop
aam
in
jmp
lahf
inc
or
loopne
fwait
cs
movsl
jnp
aaa
ss
inc
adc
shlb
jle
jne
adc
je
sub
push
mov
jno
or
repnz
dec
jb
out
xchg
add
sub
inc
mov
arpl
dec
add
sarb
fdiv
push
dec
pop
inc
xlat
add
aad
flds
popf
xor
inc
xor
out
mov
push
addr16
adc
int
push
or
cmp
ds
cld
fisubl
ljmp
test
sahf
xchg
mov
cmp
cmp
hlt
cmc
shrb
xor
mov
mov
mov
imul
mov
jp
pop
ficoms
inc
pop
sbb
mov
dec
xorb
ret
dec
mov
popa
dec
ds
and
enter
int3
pop
mov
dec
lock
push
cli
insb
shrl
lds
imul
daa
out
les
hlt
adc
inc
outsl
push
push
mov
xchg
fdiv
xorl
push
test
jbe
mov
in
pop
xchg
imul
mov
push
repz
mov
subb
cmp
pop
test
loopne
sbb
jle
subb
jb
popa
mov
into
mov
inc
repz
adc
jbe
mov
and
je
aas
imul
fcomp
lcall
out
sahf
pop
pushf
jae
stos
aam
xchg
sub
mov
shll
or
das
pop
xor
pop
jae
iret
push
pop
or
mov
fdivl
and
and
leave
jg
inc
iret
iret
push
loope
loope
mov
inc
out
mov
mov
xchg
cmp
lret
addr16
push
out
decb
adc
pop
sub
popf
add
lods
push
mov
xlat
test
iret
imul
sti
xchg
fiadds
jae
add
push
or
add
jns
adc
adc
jo
inc
push
adc
mov
mov
je
jns
mov
mov
inc
dec
shll
add
fnsave
js
pop
or
push
popf
clc
test
aad
call
int3
push
test
pop
arpl
sub
icebp
and
les
mov
jle
cwtl
test
sub
mov
aam
ds
fcoms
push
hlt
push
pop
xchg
mov
dec
inc
adc
adc
outsl
ljmp
vmulps
movsb
enter
mov
jo,pn
out
nop
sbb
mov
jg
push
imul
popf
sbb
mov
inc
mov
stos
and
or
pop
push
test
scas
mov
push
xor
in
je
and
jle
aaa
and
inc
hlt
xor
inc
cli
je
ja
push
sub
or
adc
in
loopne
pop
fcom
shr
inc
sbb
movsl
popf
int
mov
mov
push
xor
imul
mov
and
repz
inc
inc
icebp
jns
daa
mov
aam
and
sub
xor
xchg
inc
mov
xchg
iret
in
or
test
mov
divb
mov
sub
or
sti
sub
fst
inc
loop
into
pop
and
pushf
pop
cmp
xor
adc
push
subb
ret
lret
out
sti
push
mov
dec
jns
in
dec
jnp
push
sbb
push
fnstenv
stos
pop
sub
test
add
enter
sbb
or
sub
push
imul
jg
and
imul
lret
push
and
cmp
pop
mov
js
pop
cmp
cmpsb
fistl
cmpsb
lods
stos
mov
inc
popf
lods
in
lea
cmpb
lock
lock
cwtl
ja
push
pushf
cmpsl
inc
cmp
and
mov
sbb
aad
lds
mov
fistpl
test
jecxz
cli
in
lods
and
idivb
ja
add
inc
ds
divb
jnp
dec
xor
mov
ljmp
jp
jno
mov
in
and
stos
xchg
and
mov
jge
or
addr16
sbb
aas
pop
jae
fidivrs
sbb
push
loop
xchg
sbbb
add
pop
jno
and
mov
mov
loop
jg
or
xor
nop
clc
sbb
ret
fcomi
addr16
cltd
loopne
pushf
shrb
stos
jp
enter
mov
scas
mov
push
cmp
mov
cltd
into
inc
test
test
jle
clc
stos
lret
fcmovnu
iret
lahf
adc
iret
mov
shl
fldt
outsb
in
add
xor
call
bound
or
push
cmp
pushf
xchg
ret
orb
inc
das
cmc
call
enter
jae
rcr
ror
adc
pop
pop
xchg
inc
pop
cwtl
mov
jecxz
jo
fstl
sbb
mov
pop
movb
or
xchg
and
jmp
int3
xchg
sbb
push
shr
inc
cli
shrl
mov
mov
fimull
push
jmp
sub
cmp
pop
add
inc
imull
rolb
pop
pop
test
insb
sbb
outsl
or
popf
sub
mov
in
scas
rclb
scas
sahf
sub
js
cmp
or
sahf
stos
pusha
cmp
imul
nop
pop
cli
out
mov
int3
inc
loope
mov
jge
sub
movsl
mov
repz
cmc
aas
push
pushf
ret
lods
sahf
into
xlat
int
add
pop
or
ja
je
xlat
movsb
xor
mov
cmp
fcmovne
test
sub
ljmp
mov
dec
outsl
xchg
das
jl
add
lods
daa
push
jo
xor
cs
or
inc
mov
lods
cmpl
add
mov
out
call
movl
add
iret
mov
sahf
push
xor
ja
or
sbb
mov
adc
jno
xchg
push
imul
push
mov
push
sub
inc
mov
inc
jp
mov
mov
dec
or
lds
fdivrs
mov
pushf
out
adcl
push
mov
push
testb
mov
jmp
or
out
aad
jnp
jp
lahf
push
loope
fwait
je
or
mov
mov
pop
push
cmp
pop
std
out
sub
insl
xchg
ds
and
sub
imul
inc
mov
cltd
ret
jp
ss
int3
and
into
xchg
xchg
enter
shlb
pop
ret
les
xchg
mov
sub
add
push
ja
inc
std
push
out
cmp
jmp
paddq
sub
inc
and
jne
das
jae
mov
out
fidivrs
lret
push
das
shl
outsb
pop
loopne
lods
pop
cltd
pop
movsb
xor
push
lea
outsb
jno
add
mov
fcompl
popa
test
inc
xor
mov
and
mov
jl
fucom
rolb
shrl
lret
repz
adc
pop
push
test
stc
pop
shlb
lahf
jg
pop
mov
addr16
cmpsl
add
stos
adc
xchg
addr16
iret
negb
fimuls
repnz
pop
mov
dec
push
scas
filds
enter
lock
dec
ficomps
xor
js
hlt
jge
lcall
xchg
insb
adc
mov
mov
test
pop
jne
insl
hlt
inc
pop
roll
jp
add
add
inc
int
sub
into
and
cmp
mov
push
mov
and
push
cmp
push
push
loop
jmp
loop
outsl
movsl
and
loope
and
in
jae
ret
cmp
out
faddl
xchg
sbbl
jecxz
cmp
cmpsl
lea
sar
rolb
test
inc
cmp
inc
jp
and
inc
pop
mov
mov
adc
ret
sub
in
inc
rclb
adc
test
repz
push
mov
fdivs
int3
jnp
inc
lcall
pop
lret
jg
add
pop
dec
inc
aas
add
shrd
inc
xchg
iret
aas
jge
and
pop
and
cmp
pop
loope
inc
mov
je
and
inc
arpl
pop
dec
test
mov
xchg
sbb
sbb
test
in
xchg
add
cmp
sbb
ss
orl
mov
ds
inc
mov
dec
push
es
adc
ret
lret
loop
dec
dec
dec
sbb
lahf
mov
cli
jecxz
cmpsb
scas
inc
cwtl
cmp
bound
out
subl
lock
mov
xlat
sub
mov
pop
dec
cltd
mov
push
pop
mov
imul
ret
out
idivb
mov
add
arpl
pop
lahf
cltd
ja
add
fldlg2
insl
loope
cs
js
add
push
loope
mov
push
dec
sub
mov
daa
test
mov
in
mov
mov
jl
mov
adc
dec
mov
outsb
nop
repz
lock
push
addb
sub
xor
fisubl
bound
popf
sub
mov
mov
add
dec
add
inc
add
fldcw
aad
insl
sti
jmp
shll
sbb
dec
stos
xchg
pusha
add
pop
dec
pop
mov
xor
mov
cs
lahf
mov
mov
pop
repnz
dec
rorl
inc
jno
das
outsl
mov
test
sub
push
scas
movsl
cmpsl
insb
int
pusha
pop
xchg
lea
test
das
clc
addr16
aad
xor
cli
dec
gs
pusha
fsubl
pop
in
loop
dec
mov
xchg
shlb
cs
in
js
jno
mov
cs
mov
pop
in
shrb
dec
add
mov
lcall
stc
xchg
mov
jge
add
nop
dec
or
repz
lret
jno
mov
jge
and
inc
hlt
mov
popf
adc
mov
dec
scas
mov
outsb
lods
adc
pop
leave
push
pop
ja
dec
and
rorl
mov
lods
mov
shrb
cld
popa
lahf
xchg
insl
mov
adc
jbe
and
push
pop
and
xor
mov
iret
dec
jmp
mov
aad
rcrl
or
ds
mov
mov
mov
xor
fldl
insb
mov
xchg
mov
outsl
or
in
sbb
outsb
mov
fadds
pop
repz
jge
mov
adc
incb
sbbb
cmp
xorl
jp,pt
in
ret
inc
add
stos
in
stos
jne
movsl
scas
adc
clc
ss
cmp
dec
or
cmp
test
int
pop
stos
js
lods
xchg
sbb
jno
outsl
cmp
mov
adc
in
cmpsl
in
xlat
pop
cmp
sahf
push
shrb
cmp
imul
push
in
mov
daa
sub
in
xchg
mov
jnp
scas
adc
xor
mov
jge
fists
test
sbb
call
scas
sub
cltd
dec
mov
jbe
xchg
cmp
pop
orl
and
cli
jle
adc
repz
fcoms
dec
loope
jecxz
xor
lahf
lea
sbb
adc
push
popf
mov
sub
pop
in
inc
jle
inc
and
xchg
stos
push
push
or
sahf
mov
cmpsl
add
fidivrl
cltd
push
and
int3
jecxz
pminub
xorb
cwtl
stos
fmull
pop
iret
pusha
or
fistl
aaa
sbb
mov
and
es
ficompl
lods
mov
add
mov
or
pop
rorb
sahf
jne
ja
inc
iret
adc
mov
rorb
orb
mov
in
ja
add
pop
repz
sahf
pop
dec
add
pusha
push
add
scas
in
sbb
xor
dec
pushf
fistps
mov
adc
aad
repnz
fisubrl
pop
mov
mov
inc
inc
add
std
push
and
xchg
outsl
rorb
dec
sbbl
mov
lret
lret
mov
lea
sub
mov
cmp
jno
imul
jl
imul
push
mov
adcb
inc
sti
or
lds
mov
push
mov
xchg
push
mov
xor
bnd
sub
push
and
dec
aaa
dec
cli
xchg
sub
sub
popf
dec
pop
clc
popa
bound
and
movsl
enter
les
lods
sub
sahf
mov
cmp
xchg
fstps
cli
cmp
mov
inc
adc
push
push
jns
sub
pop
sbb
dec
popa
dec
out
rcll
xor
sub
inc
push
outsb
mov
sahf
enter
ljmp
dec
mov
aaa
jo
aam
xchg
cwtl
es
popf
lcall
testl
in
mov
cmp
jbe
pop
push
out
call
movsl
jg
xor
add
sub
jne
adc
test
dec
inc
mov
jbe
test
adc
inc
imul
andl
stos
xor
push
adc
xor
jg
sbbb
sbb
push
push
jno
mov
bound
jge
xchg
inc
ret
out
dec
in
add
or
dec
inc
data16
push
adc
clc
mov
ds
adc
jnp
jno
mov
ret
test
aam
xchg
push
sbb
adc
hlt
adc
push
nop
mov
push
push
and
pop
dec
jge
shl
es
adc
cmp
mov
cs
ljmp
mov
fisttps
stos
cmp
ret
les
jae
imul
inc
movsl
mov
jo
imul
xor
push
rorb
and
fs
pmullw
adc
je
cmp
enter
popf
dec
ret
mov
sub
nop
xchg
pop
push
decl
dec
repnz
pushf
adcl
and
mov
lock
inc
insl
cmc
mov
pop
adc
in
jb
icebp
imul
movsb
jle
jmp
scas
cld
out
sub
jbe
lret
gs
imul
aam
sbb
mov
cmp
xchg
or
rorl
movsl
cmp
sub
jo
dec
add
or
inc
mov
jno
adc
xor
bound
xorl
call
sbb
sbb
cmpsb
push
stos
xor
cld
pop
push
dec
dec
in
adc
lods
and
pop
ds
dec
pusha
push
and
imul
cmpsb
mov
test
lock
mov
in
jae
and
data16
pop
jo
xor
and
cwtl
and
push
sbb
cmp
xor
or
sbb
test
push
or
pop
xchg
roll
inc
into
outsb
push
fadds
jg
fstl
lods
add
jbe
out
xchg
fdivrs
fmull
cmpsb
mov
iret
dec
mov
xchg
incb
dec
decb
inc
sbb
mov
xchg
add
dec
sbb
add
jmp
jae
insl
inc
sbb
jge
out
imul
test
adc
jl
clc
icebp
add
push
xchg
lea
hlt
enter
scas
iret
sub
or
xchg
xchg
in
subb
pusha
in
call
in
dec
mov
mov
outsb
test
gs
punpcklbw
icebp
inc
scas
fstl
ja
fisttps
ja
cmp
shrl
fiadds
das
dec
mov
andl
push
mov
mov
push
jle
cs
les
cli
popa
xchg
div
xchg
jae
mov
and
aam
fs
repnz
xlat
aad
mov
add
icebp
sbb
mov
cmp
inc
jo
xorl
jle
inc
mov
ret
sahf
xor
test
mov
cmp
adc
xchg
shl
fs
popf
shl
cmp
outsb
ljmp
in
mov
adc
add
std
mov
in
movsl
or
or
xor
clc
out
stos
add
stc
shrb
imul
jg
ss
movsl
pop
or
jb
or
inc
push
mov
mov
xor
or
repnz
stc
call
mov
daa
test
ror
ljmp
dec
pop
repnz
xor
cld
adc
popa
outsb
or
jmp
add
repz
sub
iret
push
insl
jle
adc
or
pop
adc
cmpsb
out
mov
loop
stos
dec
inc
orb
push
sarb
mov
cmp
ss
cmovle
pushl
mov
xchg
ljmp
popl
leave
outsl
ror
lea
in
mov
mov
arpl
jno
nop
mov
sbb
aam
jge
imul
ds
cmp
and
repz
push
lret
clc
mov
push
dec
jg
cmpsb
mov
lock
dec
mov
rcr
or
xchg
dec
cmp
xchg
cmp
add
jge
jge
out
outsb
test
rorl
icebp
insl
mov
mov
sbb
mov
loop
jge
jb
notb
lahf
aas
jmp
cmp
cmpsl
push
mov
push
xor
lock
mov
xor
leave
inc
xchg
std
lock
leave
fdivrl
inc
or
std
dec
add
jne
xor
dec
pop
movsb
mov
insl
aas
mov
in
das
mov
and
push
dec
adc
stos
pop
fdivl
push
in
lods
or
fcompl
rclb
jecxz
icebp
xlat
fdivrs
sub
push
dec
movsb
mov
mov
int
decl
sarl
shlb
mov
loope
lcall
sbb
cmpl
jecxz
aam
rorb
mov
nop
fimull
imul
sub
loope
fcomp
jl
inc
insb
push
ret
mov
shll
add
pusha
mov
pop
mov
loop
or
cmpsl
or
mov
or
icebp
imul
fs
dec
test
jne
pop
mov
lock
inc
int3
pop
pop
adc
mov
lahf
scas
push
sbb
roll
xchg
xchg
lock
cmp
adc
into
push
xchg
popf
adc
stos
in
out
pop
sbb
cli
in
fnstsw
in
or
in
neg
push
test
loope
cmp
xchg
aad
push
pop
call
mov
test
call
hlt
adc
test
imul
in
insl
xorl
and
insb
arpl
das
scas
cld
push
imul
fiadds
into
inc
jge
sub
loopne
es
xor
push
int
sbb
and
insl
ljmp
repnz
add
jg
fadds
push
std
and
fcoms
push
sbb
adcb
out
jne
inc
add
xchg
push
xor
jmp
dec
fdiv
and
push
rorl
insb
clc
xchg
mov
xor
and
daa
mov
int
inc
bound
in
mov
fbstp
push
test
or
mov
in
jb
push
and
cmc
push
psrad
in
mov
cld
xchg
adc
push
jmp
std
jne
call
dec
paddw
cwtl
jp
mov
push
add
pop
popa
ret
mov
jae
sbbl
pusha
push
loopnew
pop
clc
cli
popl
push
pop
push
sub
popf
ds
call
xor
fs
das
ds
jns
daa
mov
push
cmp
insb
ret
test
adc
stc
pop
movsb
popf
bound
aam
loop
jbe
popf
enter
outsl
ss
in
fwait
xchg
clc
movsl
xor
pop
pusha
shr
jo
jp
mov
sahf
mov
mov
xor
movsl
xor
push
cmp
xor
pop
mov
push
scas
sbb
push
stc
in
pop
push
fsubr
lret
sbb
add
or
stos
jle
push
pop
pop
cmp
xchg
montmul
cmpsb
ret
adc
pop
jp
adc
scas
clc
jg
cmp
mov
mov
ret
push
xchg
pop
jo
ret
rcr
mov
les
dec
mov
dec
xlat
jnp
lods
and
jb
pop
jo
clc
mov
frstor
mov
scas
cld
pop
push
mov
xorl
in
test
std
jecxz
out
scas
stc
scas
mov
fildl
sbb
or
mov
leave
call
push
test
fcom
xchg
push
adc
push
push
fisubs
cmp
jg
pxor
mov
and
mov
clc
cld
mov
out
and
pop
mov
imul
gs
adc
sub
das
jg,pn
ds
test
lret
pop
ret
jne
push
pop
mov
aas
inc
imul
sub
sti
sub
mov
icebp
outsb
xchg
dec
push
std
inc
rcrl
sub
lds
inc
push
dec
fidivs
out
and
adc
scas
scas
mov
push
mov
sub
in
xor
pop
vmovaps
into
xchg
out
push
inc
xor
pop
sahf
in
xchg
dec
test
cltd
mov
outsb
push
pop
rorl
push
pop
sub
pusha
cmp
jae
fldl
jle
inc
scas
jp
pop
pusha
cmpsb
xchg
sbb
or
nop
cli
je
jl
adc
sbb
or
outsl
add
insb
in
movsb
lret
jb
in
push
and
inc
xchg
mov
out
mov
aas
arpl
loopne
int
xor
push
sti
data16
sub
mov
outsb
push
pop
out
mov
fs
xchg
push
cmc
xchg
stc
loopne
add
stos
cld
push
subb
inc
inc
and
jb
fbstp
mov
jmp
je
aam
xor
xlat
loopne
sti
aaa
xchg
pop
or
repz
sbb
inc
sbb
jno
je
xchg
sbb
mov
rcll
leave
and
test
outsb
pop
loopne
xor
mov
test
nop
adc
int3
xchg
push
ficoml
and
sahf
repz
inc
pop
scas
jecxz
pop
cmp
dec
and
cmp
imul
mov
int
xchg
es
arpl
out
mov
mov
jbe
xor
int
jmp
sbb
call
push
nop
jl
mov
sbbl
inc
mul
lret
jns
add
mov
cmp
mov
insb
jmp
xchg
push
or
enter
or
mov
push
mov
stos
stc
clc
outsl
aad
add
adc
sub
pop
stos
loopne
inc
dec
sti
and
sub
add
bound
lret
jbe
outsb
jae
dec
lods
xlat
mov
jp
mov
das
mov
cli
xor
push
jmp
in
out
addr16
push
jne
stos
fists
pop
aam
pop
int3
and
repz
lock
cld
inc
and
out
xchg
icebp
paddb
cs
rclb
push
pop
push
mov
xor
mov
scas
sub
dec
int
xor
hlt
mov
mov
repnz
push
sub
out
push
mov
add
mov
ljmp
pushf
sub
in
jo
cmpsb
aaa
filds
add
iretw
clc
sbb
xchg
cmp
or
mov
or
lahf
or
cld
cmp
inc
cmpsl
push
je
push
incb
push
inc
pop
jnp
push
cmp
jecxz
add
shlb
stos
pop
and
mov
inc
push
aad
into
mov
loopne
aas
jle
push
sbb
inc
mov
cld
sub
nop
mov
fs
out
xor
sub
and
loop
jl
jno
clc
mov
and
dec
adc
popf
xor
adc
adc
jns
mov
sub
pop
pop
xchg
cmp
rcll
dec
mov
mov
sbb
in
or
orb
mov
xchg
push
scas
fcoml
lret
inc
aas
fwait
repz
fisttps
int
mov
mov
lret
clc
adc
shrb
movsb
mov
sub
and
push
cmpb
mov
xor
cli
mov
cltd
fstpt
sub
loopne
movsl
aaa
movsl
and
dec
fisttpl
das
mov
pop
inc
call
imul
add
dec
cmp
shll
inc
cli
push
jne
adc
test
bound
inc
push
leave
dec
push
inc
jno
notb
lcall
xchg
jbe
push
dec
mov
dec
lea
je
push
xchg
sbb
loope
mov
rcll
or
mov
test
xchg
mov
xchg
out
xchg
xor
dec
lods
add
adc
pop
test
or
mov
or
xchg
or
jle
jmp
sbb
and
dec
stos
movsl
stc
push
dec
xor
pop
leave
mov
aas
push
scas
mov
cs
xchg
aad
cmc
push
ljmp
fmulp
cmpsl
jae
movl
lds
cwtl
inc
imul
fcomi
mov
push
ja
mov
jge
ret
mov
jne
xchg
es
mov
adc
das
pop
xchg
jle
and
lret
sahf
sub
mov
push
push
enter
shl
mov
insl
into
jbe
dec
stos
aam
pop
imul
jne
mov
add
pop
xchg
shlb
pop
xchg
pusha
pop
nop
mov
jbe
push
out
sub
cltd
pop
jge
in
mov
xlat
int3
popf
pop
mov
dec
and
cmpsb
mov
fiaddl
rcl
adc
adc
test
or
in
pop
mov
pop
mov
rcrb
pop
xor
test
cmpsb
and
fists
sub
mov
fnstenv
je
and
out
ret
inc
mov
mov
lds
mov
inc
lcall
and
shll
xchg
adc
insb
jg
outsl
insb
outsb
inc
fstl
and
cwtl
pop
cmp
fdiv
data16
inc
ljmp
cld
xor
jmp
jb
add
es
or
mov
sbb
cmp
in
mov
mov
movsl
ret
repnz
adc
gs
jp
push
cmpsb
outsl
jl
add
gs
ss
mov
sub
lock
or
imul
inc
cmp
xor
adc
jmp
and
mov
add
push
das
rclb
repz
imul
pop
add
or
pop
cs
xchg
int
inc
int3
in
andl
xlat
mov
enter
imul
icebp
jne
jb
ds
test
pushl
and
and
adc
xor
mov
ljmp
ret
pop
mov
std
xor
popf
ja
test
std
ljmp
inc
test
out
add
and
and
cmp
lret
fsubrs
shll
jo
ret
jo
outsl
aad
or
mov
scas
fbstp
ficompl
xchg
jns
push
inc
jle
negb
push
dec
lods
jbe
int3
shlb
jnp
lods
repz
icebp
xchg
ret
movsl
roll
daa
and
cmc
call
in
std
mov
cld
cmpsb
mov
jo
je
pop
mov
adcb
nop
sub
jns
stc
aas
mov
repz
pop
adc
sbb
jp,pn
aad
addb
xchg
out
fbstp
lods
dec
rcrb
icebp
sub
sub
mov
pop
cmp
inc
nop
mov
mov
or
and
test
bt
test
stos
call
sahf
cmp
aad
mov
pop
pop
dec
dec
and
push
pop
dec
daa
testl
xlat
cltd
arpl
scas
sub
push
xchg
test
jbe
pop
repnz
jne
fcomps
fcoml
push
cli
push
shll
ret
jle
dec
xor
out
ss
fisttps
xchg
pusha
cli
addb
fwait
inc
pop
mov
dec
int3
push
cld
xchg
lds
in
add
jbe
insl
and
orb
or
sti
dec
adc
outsb
and
imul
inc
lahf
pusha
arpl
call
in
jl
mov
mov
jbe
ret
or
xlat
xchg
sbb
dec
add
dec
ret
fwait
call
cmp
movsb
cvtdq2ps
jecxz
push
mov
imul
scas
push
roll
fwait
xchg
lahf
jmp
je
pop
mov
or
test
push
dec
testl
sbb
sbb
out
fwait
loope
les
and
nop
mov
mov
jnp
in
arpl
xchg
sbb
in
gs
rolb
sub
enter
dec
ret
dec
in
mov
jo
int3
inc
adc
push
inc
jne
dec
imul
xor
leave
insb
dec
jno
mov
add
or
cmp
xchg
or
in
adc
mov
scas
mov
inc
push
sub
fucom
scas
pop
sbb
ss
popf
popf
push
es
xor
outsb
lods
rcll
mov
negb
enter
pop
fwait
push
movsl
cltd
xchg
jl
push
je
cmp
arpl
scas
popf
inc
sub
jo
jb
sbb
cmpsl
xor
lds
push
xor
mov
fadds
mov
or
cmp
movsb
mov
xor
testl
and
mov
xchg
in
add
mov
lcall
shrb
flds
mov
scas
jnp
iret
repnz
dec
dec
jo
in
and
loopne
pop
test
and
xchg
test
imul
cmpsl
mov
loop
leave
cmp
hlt
pop
std
push
sbb
mov
push
cmp
xchg
dec
pop
add
fisubrl
sub
addr16
inc
clc
insl
ret
mov
popa
movsb
repz
stc
jb
mov
sbb
out
sub
jnp
insl
or
enter
leave
repnz
and
int
sbb
lods
dec
addr16
into
sbb
mov
dec
mov
adc
repnz
inc
pop
nop
adc
mov
inc
mov
lret
sbbb
cmp
ror
pusha
out
push
jno
adc
repz
mov
or
dec
inc
rcll
xor
fadds
insb
sti
mov
mov
loop
inc
sbb
jne
test
sub
leave
lret
and
std
subb
inc
jge
inc
dec
stos
push
push
rcll
out
push
sbb
inc
fisubs
mov
pop
xchg
jo
xchg
sbb
insb
ret
test
les
std
loope
xor
gs
adc
jecxz
xor
movsb
xlat
and
test
cwtl
lock
fcmovnbe
inc
int
and
mov
adc
jle
loopne
add
leave
xor
jnp
adc
mov
lods
test
push
xchg
test
xchg
pop
inc
repz
and
push
ljmp
sub
jns
sub
popf
out
cmp
push
xor
lcall
outsb
sub
into
clc
lock
inc
mov
cld
nop
dec
cltd
enter
inc
in
jmp
ret
mov
or
lds
ds
rcl
sub
ja
int3
cmpsb
or
xor
stos
mov
adc
aas
jno
sarl
and
test
mov
lods
xor
les
call
sbb
nop
sub
sbb
inc
and
push
inc
in
xchg
inc
push
xor
or
dec
hlt
pop
mov
mov
or
cmp
cmp
jmp
cmp
fwait
aad
xchg
ret
jg
jne
sbb
cwtl
popf
orb
push
hlt
mov
aaa
or
cli
test
cmp
out
inc
and
and
or
mov
mov
leave
adc
jg
fldcw
aad
cs
mov
inc
cwtl
or
test
in
sbb
and
sbb
or
cmpsb
shl
ficoml
jge
mov
scas
and
cmp
jp
fists
loop
mov
es
pop
pop
push
or
push
cmpsb
call
movsb
cmp
test
andl
inc
stos
aam
loopne
xor
in
lret
push
lods
into
add
pop
packsswb
xchg
inc
popf
popa
xor
cld
stos
iret
push
clc
add
dec
inc
jns
jmp
lods
mov
pop
and
insb
test
pushf
or
mov
bound
jno
or
ss
mov
or
js
jb
js
pop
jno
cmp
mov
mov
sub
inc
scas
int
sbb
bound
jmp
movsb
rep
addb
insl
jbe
ja
int
push
push
iret
pop
mov
test
test
rclb
mov
add
jo
inc
cmp
sahf
insl
lods
push
inc
repnz
mov
ja
xor
mov
loop
inc
mov
push
push
jnp
and
adc
mov
mov
jbe
in
lcall
add
pop
push
in
adc
iret
sbb
fiaddl
adc
mov
fadd
shrb
mov
cltd
xor
dec
fdivrl
out
jmp
cwtl
lds
push
rolb
imul
movsl
sbb
lahf
and
cmpsl
adcl
push
inc
fimuls
mov
push
cmp
push
xor
dec
jae
ljmp
mov
inc
mov
jbe
mov
inc
push
addb
gs
mov
inc
push
inc
ja
cmp
cmp
mov
lea
ret
sbb
push
jb
cltd
add
in
bound
mov
and
mulb
sub
loopne
into
cmp
xchg
xor
sbb
je
test
lods
fld1
cmpsb
out
dec
sub
jae
testb
faddp
pop
insl
arpl
imul
jo
rolb
sarl
mov
mov
cmp
scas
shll
fldenv
int
mov
daa
sbb
add
int3
ret
jbe
aam
stos
jp
pop
jno
outsl
xchg
jb
dec
add
out
data16
jecxz
maskmovq
divl
sbb
loop
push
xor
hlt
sahf
sub
loop,pn
dec
or
test
in
fucomip
je
mov
sub
mov
scas
pop
ret
cmp
jg
push
dec
xchg
push
jge
mov
cs
pop
out
movsl
xchg
mov
xchg
loop
repnz
pop
lcall
fwait
add
xchg
subb
push
mov
fnstsw
in
mov
adc
sbb
mov
push
push
sbb
test
or
adc
push
xor
stos
leave
jb
pop
stc
mov
lock
sub
aam
lods
add
xor
jo
lcall
push
add
jnp
add
out
out
or
enter
jl
xor
xor
popf
jne
xor
jmp
imul
sbb
nop
mov
jecxz
ds
mov
int
inc
xchg
rcrb
sbb
mov
std
push
sysenter
jb
loopne
sbb
push
dec
mov
imul
mov
push
xor
ret
cmp
es
cmovae
add
in
cwtl
and
imul
out
pop
pop
jne
jns
lods
lock
loopne
or
mov
jle
shl
mov
fdivrs
mov
repz
fsubrl
pusha
stc
pushf
cwtl
jecxz
test
push
mov
pop
jmp
popa
push
sbb
pop
or
mov
outsl
ret
cmp
add
mov
int3
in
rolb
inc
int
dec
rorl
fdivrs
or
and
aad
pop
test
rclb
test
pushf
mov
xor
xor
sub
test
test
test
dec
jmp
jne
imul
sysenter
pop
mov
push
mov
pop
scas
push
lret
icebp
popa
pop
les
mov
clc
mov
xor
push
mov
cli
cmp
push
lahf
xchg
test
xchg
cli
inc
mov
test
mov
push
out
pop
loope
and
sbb
sub
mov
jg
mov
mov
stos
ror
adcb
add
sarl
pop
lret
inc
push
push
stos
mov
sbb
mov
cmp
push
rclb
imul
bound
int
pop
sub
sbb
dec
push
out
jge
add
aad
insb
mov
mov
dec
lods
push
rcl
xchg
adc
lea
inc
sub
sub
lcall
testl
pop
jmp
jb
push
pop
xor
stos
push
int3
pop
pop
insl
push
rolb
jg
arpl
inc
fimuls
sub
ljmp
rcll
inc
inc
mov
jae
arpl
out
cmpsb
ljmp
push
inc
cld
loop
lcall
or
mov
jnp
fcmove
mov
movsb
js
addr16
mov
cmp
fdivl
fcom
xchg
mov
daa
cwtl
mov
sub
rep
or
and
lds
testb
popf
fiaddl
ljmp
pop
lods
xchg
sub
pop
adc
mov
scas
xchg
js
ficoml
in
ds
ficoml
mov
xchg
cltd
nop
test
mov
cld
adc
adc
ljmp
or
jnp
mov
mov
mov
bound
loop
pusha
push
push
loope
rcrl
xlat
or
dec
xor
rolb
loope
dec
and
call
arpl
incb
push
push
insl
movsl
sbb
jg
cmp
ljmp
scas
clc
xchg
jl
mov
sub
jmp
std
in
mov
mov
push
and
ss
ficoms
ret
cli
sbb
jae
ficompl
push
fisubl
jmp
arpl
sub
shll
xor
inc
jbe
cltd
pop
daa
rclb
data16
xor
or
cmp
adc
or
add
loopne
jge
je
out
xlat
daa
or
scas
mov
add
push
mov
test
push
cmp
inc
imul
sbb
std
push
push
in
enter
int
pop
mov
or
ja
xor
or
cmpsl
mov
pop
cld
mull
dec
imul
xchg
mov
loopne
and
and
mov
pop
push
pusha
or
and
mov
daa
xchg
dec
imul
sbb
pusha
test
pop
rolb
push
pop
ss
insb
or
sbb
je
add
and
sahf
gs
jns
jns
cmp
shr
jge
in
and
push
xlat
loopne
pop
cltd
test
pop
mov
adc
fbld
mov
adc
outsb
sti
sti
pushf
aad
insl
lcall
imulb
outsl
test
inc
adc
fisubl
mov
mov
bound
sub
cmpsl
mov
cmp
ficompl
and
cmpsl
dec
out
mov
add
xchg
outsb
mov
dec
jno
inc
enter
dec
ja
imul
and
movsl
push
shll
inc
call
pop
in
dec
sahf
mov
push
mov
pop
cld
adc
int
mov
cmpsl
lea
or
cwtl
add
fwait
out
stos
scas
insb
shlb
mov
cmpsb
das
push
stc
popf
push
sub
rcr
popf
push
cmp
pop
in
xor
mov
int3
mov
mov
aam
or
adc
push
dec
jno
in
add
dec
movsl
rolb
cli
mov
inc
sub
inc
pushf
inc
lcall
add
ds
inc
mov
mov
sub
std
xchg
pop
dec
mov
shrl
sub
mov
push
jno
mov
loope
aaa
xlat
jne
xor
popf
sub
daa
inc
mov
lock
sub
add
scas
sub
out
or
sbb
ljmp
pop
xor
push
and
sbb
pop
fucomi
cltd
and
mov
add
jb
adc
mov
push
mov
xchg
xchg
adc
aaa
shrl
ret
push
mov
fwait
scas
mov
iret
ds
lds
mov
inc
dec
insb
jnp
and
adc
adc
fcmovbe
ljmp
testb
incl
leave
mov
cmp
sub
mov
or
sti
sub
sub
pop
and
addr16
dec
repz
out
sub
ja
pop
aaa
xor
addb
sbb
cld
jle
cmpl
fwait
jl
sahf
sbb
imul
inc
sub
xchg
xor
jns
clc
fwait
mov
ret
push
loop
mov
xchg
mov
inc
in
pushf
inc
xchg
jmp
jo
push
inc
fcomip
mov
xchg
sbb
daa
gs
scas
out
lods
into
add
daa
data16
mov
xchg
movsl
pop
fidivs
hlt
mov
adc
cli
test
mov
sbb
or
pop
mov
mov
lods
sbb
xchg
imul
cs
lret
imul
insl
push
and
ss
inc
mov
sbb
in
mov
aad
mov
or
stos
xchg
xor
pop
cmp
push
rorb
xchg
aaa
cmc
hlt
mov
or
ror
inc
sbb
mov
scas
push
dec
jmp
or
mov
rcrb
sub
mov
pop
rclb
scas
int
add
xor
dec
and
incl
ja
adc
inc
scas
mov
pushf
inc
mov
jns
pop
cmp
pop
mov
repnz
sub
lret
dec
push
pusha
ss
add
xor
sbb
cmpb
rcll
or
jl
xchg
out
imul
imul
jae
push
filds
dec
adc
pushf
mov
sbb
jle
leave
sub
arpl
add
cwtl
sbb
pop
push
sub
mov
mov
inc
and
mov
test
xor
ds
mov
cmpsb
es
sub
shlb
mov
movsb
movsb
movsb
pop
sub
lret
sub
sbb
mov
or
idiv
ret
outsl
jmp
push
and
jle
es
inc
inc
ficomps
jns
xlat
inc
test
pop
test
dec
stos
fs
pop
jecxz
test
ds
mov
je
dec
mov
dec
cltd
inc
clc
roll
mov
mov
cltd
aam
out
rcl
add
cwtl
inc
cmpsl
pop
xor
out
jp
push
insl
xor
aaa
in
lods
popf
inc
mov
or
push
adc
sbb
psubb
stc
xchg
pop
jno
lret
push
jg
in
sub
aaa
mov
into
out
outsb
jbe
jbe
cmp
jge
aas
enter
mov
push
inc
ret
push
mov
scas
xchg
dec
stos
scas
popf
negb
sub
add
sub
mov
xor
das
xlat
outsb
cmp
lahf
mov
int3
js
pop
adc
arpl
fisubl
pop
pop
stos
subl
stc
push
pop
in
loop
dec
sub
mov
add
adc
sahf
pop
cmp
mov
out
lea
lret
jnp
push
outsb
sub
cwtl
fidivs
rcrl
or
cmpsb
enter
add
mov
cmc
cmp
inc
mov
rcll
lret
inc
and
jg
insl
out
cmp
mov
sub
jge
insb
lock
push
scas
adc
pop
inc
sti
lods
or
fidivrs
or
leave
int
cltd
lret
lret
mov
imul
test
scas
mov
jg
decl
push
mov
fst
push
aad
divb
subl
add
sarb
jp
stc
sbb
dec
enter
cmp
add
pop
mov
pushf
cmp
les
rol
and
sbb
jmp
jp
icebp
popf
fstl
ja
pop
sar
pushl
or
add
in
sbb
xor
in
sahf
jge
and
mov
notl
inc
and
cmc
xor
sub
jl
push
insb
mov
clc
pusha
nop
and
pop
enter
aas
insb
or
sub
bound
imul
test
add
outsb
dec
mov
les
lret
mov
in
cs
hlt
loopne
test
iret
inc
push
ficoms
mov
pop
cmp
orl
repz
inc
lods
push
subb
cmp
mov
repnz
or
jl
xchg
push
out
adc
es
fstpl
in
mov
outsl
lahf
pushf
push
pop
lods
pop
push
or
dec
int3
push
cwtl
xchg
add
scas
pop
movsb
push
jnp
dec
xchg
mov
stos
shl
pop
sarl
js
lret
lods
lock
mov
testl
jne
sub
dec
or
lea
popl
cwtl
xchg
inc
test
repz
push
sub
adc
sbb
ds
in
push
push
add
push
xor
and
mov
push
cmp
dec
sbb
stc
lea
pop
movsl
inc
sbb
outsl
shr
mov
mov
jbe
test
or
pushf
mov
mov
sahf
test
and
push
adc
adc
cmp
lods
pushf
mov
xor
lods
push
adc
and
mov
push
cmpsl
clc
mov
in
sbb
das
push
mov
xchg
js
xchg
test
mov
cwtl
ljmp
jmp
aaa
xchg
push
pop
sti
filds
sub
lret
mov
add
cmc
popa
imul
in
aaa
jge
cmp
loopne
aaa
mov
lock
sub
nop
and
int3
jg
fldl
outsb
xchg
push
cmc
iret
ret
sbb
sub
cmp
in
or
nop
lods
jmp
xchg
mov
andb
jg
xor
adc
pop
das
leave
xor
outsl
sbb
jle
dec
inc
pop
mov
or
cmp
adc
fcmovnb
negl
ljmp
subl
jl
inc
mov
mov
inc
dec
jmp
lods
jo
push
bound
out
leave
test
lret
jl
fidivrs
pushf
inc
dec
lcall
rol
test
in
setae
xchg
pop
lock
cmp
jno
insb
or
inc
test
jns
stos
add
fnstenv
mov
mov
insl
jmp
cld
adc
scas
mov
testl
add
lahf
cmp
lds
mov
pop
add
sti
pusha
jl
xorb
xchg
lock
push
ficomps
jae
or
and
mul
insb
rcr
movsl
mov
in
push
xchg
add
adc
inc
push
loop
test
sbb
sub
mov
mov
bound
mov
negl
data16
icebp
lds
jmp
pop
push
cmp
xor
mov
cmp
xchg
imul
mov
jl
jmp
hlt
xor
xorb
lods
add
aaa
fsubl
push
bound
das
pop
jmp
mov
popa
movsl
sbb
int3
test
dec
rorl
adc
add
sbb
dec
push
sbb
addr16
in
pop
cmp
and
adc
stc
notl
dec
arpl
ret
fimull
pop
movl
ficompl
jmp
pop
adc
addr16
xchg
jge
jmp
ficoms
mov
iret
sub
cltd
push
cmp
fisubrs
pop
or
mov
xchg
pop
lock
push
decl
pop
dec
and
mov
pop
in
sti
rorl
out
ljmp
enter
nop
out
loopne
and
sub
mov
not
sbb
icebp
and
fimull
or
cmp
mov
jmp
sub
mov
in
jle
les
and
pop
nop
js
stos
cmpsb
gs
mov
push
shll
add
cmc
icebp
dec
movsl
into
or
inc
imul
fdivp
push
xchg
ja
inc
mov
cmp
xor
shlb
mov
in
out
mov
xchg
inc
push
icebp
xchg
mov
or
rcrl
xchg
push
arpl
addb
mov
and
call
mov
ret
fldenv
or
loopne
mov
in
mov
ret
xor
fstpl
xor
shrb
ja
pop
lcall
ja
pop
cmpl
inc
xlat
dec
aam
push
shll
call
inc
cltd
adc
bound
jmp
shr
mov
jmp
scas
push
out
add
pop
loop
push
pop
movsb
leave
stos
xlat
dec
mov
pop
pop
pop
adc
das
mov
pop
mov
cmpsl
mov
subl
fidivs
rolb
repnz
xor
test
add
adc
mov
enter
imul
es
mov
jns
mov
mov
inc
xor
sbb
adc
sub
xor
mov
push
scas
fildll
mov
ja
push
cmc
int
cmp
sub
mov
aam
sahf
cltd
lock
mov
out
mull
xchg
enter
pop
cmp
das
les
popf
negb
test
outsb
movsl
mov
and
enter
xor
mov
or
insb
sbb
push
std
jmp
in
scas
mov
test
sysenter
xchg
cmpsb
cmp
ds
mov
sub
into
sti
sub
jbe
pop
jle
mov
cwtl
and
push
pop
mov
sub
dec
sub
add
fwait
mov
pop
cmp
in
adc
insl
xchg
das
int3
add
testb
cmc
mov
repz
fnstenv
xlat
sbb
mov
and
leave
mov
shl
jmp
sub
rol
mov
xchg
xchg
pop
push
xlat
cmp
pop
adc
or
scas
out
push
rcrb
shrb
je
jb
sti
pop
out
cmp
je
into
dec
shr
outsl
push
add
mov
and
negl
mov
dec
jbe
jg
and
mull
lock
call
mov
cmp
jo
jae
adc
das
pushf
jno
mov
sbb
cmc
cmpsb
lret
xor
lcall
sub
cwtl
jbe
adc
adc
mov
xor
lahf
adc
xchg
dec
std
dec
roll
out
negb
xor
sbb
mov
inc
fstps
and
cmpsl
js
cmp
movsb
cmpb
mov
jb
lret
stos
stc
imul
ficompl
mov
cmpsl
pop
mov
inc
push
adc
push
mov
sbb
add
fsts
pop
pop
out
and
and
ret
popa
andl
test
pop
mov
in
cmp
mov
je
jmp
pushf
jl
dec
aaa
lock
pusha
pop
fcmovne
sub
xchg
iret
pop
ficoml
inc
jno
sbb
dec
out
loopne
xor
and
jns
xchg
add
adcl
clc
jl
enter
jl
xchg
cmp
xorb
sub
dec
aad
test
stos
cmp
or
pop
push
fwait
pop
imull
sbb
sub
pusha
dec
loopne
ret
aaa
and
and
add
inc
aam
mov
adc
and
dec
dec
ds
mov
int3
sahf
sub
addr16
daa
mov
in
or
nop
insb
dec
std
xor
push
in
sbb
insb
jb
jl
sub
jmp
xchg
rcll
imul
dec
push
sbb
mov
cmp
mov
xor
sub
dec
inc
push
and
dec
ret
iret
mov
iret
test
flds
xchg
movsl
push
call
sub
popa
xchg
mov
push
and
or
sbb
inc
aaa
add
bound
xor
sbbl
out
sub
sub
xor
mov
push
mov
lcall
inc
frstor
mov
ss
adcl
fadd
lods
lret
xchg
mov
xchg
loope
hlt
int3
cmpsl
ja
jge
adc
sub
sbb
test
mov
sahf
and
xor
adc
or
movsl
jge
movsl
sub
inc
push
daa
or
stos
push
popa
out
mov
call
test
and
mov
adc
push
ja
mov
fstps
sub
lcall
jp
in
imul
daa
pop
pop
xor
cmp
sub
lds
std
or
mull
sbb
pop
ficoml
dec
add
cli
lret
pushf
mov
jbe
pop
pop
mov
out
add
sbb
in
sbb
jnp
xchg
cmp
push
xchg
dec
rol
mov
xlat
outsb
jae
cmp
cmp
mov
cmpsb
add
xchg
add
clc
cmp
addl
mov
add
pop
jecxz
xor
inc
mov
ds
aam
imul
les
dec
xorl
xchg
lock
jns
fbstp
xchg
mov
cmp
cmp
add
sub
and
insb
testb
test
clc
push
addl
adc
jbe
mov
imul
and
push
jecxz
ret
inc
je
lahf
ljmp
xchg
subb
add
jle
cld
addr16
movsl
test
ffreep
pop
add
push
mov
inc
xor
jecxz
iret
mov
rcr
pop
inc
cmpsl
lods
mov
xchg
cmp
enter
push
push
cmp
pop
insl
repnz
sbb
cmp
lcall
mulb
fcmovne
sub
in
cmpxchg
mov
cmpsb
cmp
jg
lock
test
jg
repnz
cmpsl
cmp
pop
xor
fdivr
cmp
cmpsb
xor
push
inc
jp
or
push
pop
scas
push
sbb
cmp
xchg
dec
pushf
cmc
data16
repnz
push
dec
ja
sub
scas
iret
jne
dec
ljmp
dec
lods
inc
jge
js
mov
popf
insb
fmuls
outsb
mov
inc
cmp
and
std
pop
pop
jns
jne
mov
sub
add
sahf
insb
sub
push
xchg
mov
dec
mov
cs
jns
shlb
sbb
mull
leave
fisubl
xor
push
sub
jge
test
scas
mov
fstpl
pop
push
and
incl
pop
or
mov
loopne
sar
fcomps
mov
daa
xchg
cld
adc
pop
pusha
cld
fdivrs
gs
filds
pop
adc
test
mov
lret
lods
mov
call
sbb
decl
stos
sbb
cmp
xor
outsb
mov
flds
insl
lret
cs
and
les
imul
dec
lock
enter
jae
stos
xchg
adc
or
adc
mulb
clc
outsb
out
mov
repz
and
lods
dec
data16
adc
ja
lds
cmp
and
lock
jle
fs
cwtl
jg
cmp
iret
in
enter
adc
push
push
mov
mov
sbb
sbb
ret
adc
xchg
xchg
arpl
push
lods
mov
pusha
xor
lea
xchg
pop
mov
cs
hlt
jo
pop
fadds
jo
fcom
ss
loope
fnstenv
in
int
bound
adc
scas
add
push
mov
lock
sbb
fldenv
outsb
clc
push
push
jno
imul
scas
in
or
mov
leave
push
or
pop
or
fwait
push
clc
lahf
pop
mov
icebp
push
movsl
icebp
lcall
mov
adc
and
push
mov
hlt
mov
imul
data16
push
decl
adc
lods
in
adc
mov
scas
test
fsubs
fstps
push
cmpsb
push
pop
mov
fildl
jmp
dec
jne
mov
mov
inc
adc
inc
cmp
dec
jae
push
pop
jbe
repnz
fisttpl
add
aam
xchg
dec
les
rcrb
dec
sub
hlt
js
dec
std
pop
or
stc
in
add
sub
jb
mov
lock
filds
movsb
jne
mov
movsl
jp
icebp
inc
idivl
xchg
jno
xor
fists
lock
data16
ret
mov
dec
jno
aaa
jmp
xor
inc
sub
adc
pop
fnstsw
daa
popa
inc
sub
mov
dec
lahf
sbb
stos
jnp
and
cli
repz
pop
push
call
in
lods
jbe
cs
scas
ret
cmpsb
out
lcall
push
and
xor
xor
sub
dec
jge
sub
jo
in
lds
loope
sub
inc
sub
xchg
sub
mov
lock
mov
popa
sub
xor
mov
fidivrl
jns
pop
mov
icebp
scas
cmpw
popa
scas
ljmp
push
lea
sbb
div
fwait
mov
lods
mov
imulb
mov
shlb
rcrb
xchg
dec
lods
sub
loop
jae
repz
inc
dec
nop
jp
data16
addr16
or
cmp
push
jle
fbld
add
arpl
addl
imul
bound
scas
inc
dec
repnz
imul
add
fstps
es
lcall
adc
jg
cli
and
scas
mov
in
sub
sbb
push
dec
mov
inc
out
fsubr
jle
sbb
testb
dec
orl
adc
fwait
out
sbbl
pop
mov
das
pop
roll
daa
sub
stos
sbb
mov
sub
mov
jl
mov
cli
mov
aad
dec
cmpb
out
fs
mov
js
sub
xor
inc
dec
ja
lods
mov
xchg
nop
sti
push
dec
int3
leave
sub
lret
insb
daa
cmp
std
jmp
xor
cmp
inc
pop
in
sbb
icebp
jge
ret
push
icebp
xlat
xchg
data16
test
push
lea
mov
push
insl
subl
out
mov
rcl
mov
popa
xchg
sbb
lods
rcrb
ret
pop
and
popa
add
outsb
out
les
mov
sti
out
jmp
pop
lods
inc
jp
sub
mov
mov
xor
add
jnp
mov
lcall
movsb
sti
popa
mov
add
insb
js
sub
sub
in
xchg
sub
mov
mov
into
movsl
notb
fisubl
xchg
xchg
xor
or
dec
push
sub
inc
icebp
xor
fld
adc
jge
hlt
adc
stc
nop
ja
sbb
nop
into
scas
mov
popa
rol
hlt
inc
stos
lret
adc
sbb
les
fstl
jbe
or
sahf
sub
xchg
push
fstps
repz
call
sbbb
repnz
jl
sbb
test
test
int
mov
xchg
dec
xor
jns
jae
sub
movsl
push
push
fstpt
gs
je
mov
and
sti
inc
lods
inc
mov
in
stc
aas
outsl
cwtl
shlb
push
cmpsl
mov
add
mov
xchg
sbb
out
dec
sbb
lcall
in
adc
shll
or
leave
movsb
idivl
pushf
or
sbb
rorl
xorl
stc
or
add
daa
stc
sbb
mov
cmp
dec
arpl
sti
stos
fistpl
jle
stos
flds
push
mov
pop
ret
fs
mov
imul
cmpsb
push
int3
mov
aad
add
js
jecxz
push
inc
lret
dec
jge
inc
ja
les
pop
sti
cmp
jne
jae
xchg
mov
cmpsb
adc
repnz
cmc
xor
jae
shlb
add
adc
in
test
jae
xchg
mov
or
out
sar
dec
and
stos
and
pop
mov
mov
sbb
or
or
lcall
loopne
arpl
popa
es
inc
repnz
xchg
add
or
mov
in
dec
or
push
negl
int
sahf
movsl
or
xchg
mov
scas
sbb
xlat
mov
adc
cltd
mov
loope
jp
movsl
sbb
repz
hlt
jmp
jns
into
imul
icebp
jbe
mov
fstps
call
ror
mov
mov
mov
test
mov
sbb
jmp
and
hlt
enter
jns
fdivrp
sbb
out
jge
out
pop
stos
push
xchg
out
mov
jbe
lods
cmp
cmp
outsb
push
lcall
mov
mov
jecxz
and
lcall
pusha
inc
shr
movsl
pop
cwtl
ja
aas
in
or
sbb
fwait
and
cmc
inc
out
sbb
lock
jp
cmp
or
jae
subl
inc
movsb
pop
out
lock
xor
dec
inc
mov
xchg
adc
push
push
loop
pushl
aas
mov
pusha
inc
ffree
adc
enter
inc
cmp
popf
popf
decb
test
push
jo
inc
xor
pushf
jno
movsl
cmpsl
xchg
mov
movsl
test
and
stos
popa
adc
out
mov
repnz
add
jp,pn
or
repnz
dec
xchg
xchg
rorb
les
add
adc
push
mov
or
ss
or
imul
scas
lods
imul
mull
jmp
popa
aas
xchg
int
pop
dec
sbb
or
mov
jne
sub
sbb
and
push
fwait
sarb
ret
shrb
xor
std
cmovge
pop
add
fnstsw
shl
mov
fnsave
outsb
or
mov
lock
or
sbb
and
das
aam
push
sub
mov
repz
mov
ljmp
and
push
cs
adc
and
xor
jp
scas
dec
cmp
mov
inc
sub
push
movsb
pop
shl
fs
loop
arpl
lods
dec
inc
push
xchg
add
sub
add
pop
xor
aas
push
jb
shlb
ljmp
call
loopne
sbb
adc
xchg
xchg
jne
imul
popf
lds
loopne
push
jmp
mov
in
fdivrs
add
mov
test
jg
push
pop
or
lock
push
sub
sbbl
inc
push
adc
jmp
andl
mov
testl
hlt
out
jg
iret
adc
cwtl
sahf
int
addb
lock
fsts
dec
or
mov
jle
lcall
fnstsw
gs
fildl
cs
mov
push
ss
jnp
shlb
iret
inc
push
movsb
jae
cmc
push
mov
pop
aas
jmp
mov
shr
mov
dec
xor
in
push
sub
cmc
cmp
inc
pop
push
arpl
mov
adc
fsub
imul
dec
adc
aad
test
add
pop
rcrl
repnz
mov
jmp
ret
std
pop
cld
roll
mov
sbb
cs
mov
js
xchg
mov
sbb
push
jbe
jno
dec
cmp
inc
stos
filds
cmp
lcall
or
dec
ja
ljmp
sbb
lds
or
jg
dec
cmp
in
orb
pop
dec
aaa
movsl
jg
mov
nop
test
adc
pop
or
pop
push
mov
sbb
or
dec
xchg
jbe
mov
ds
inc
stc
ss
adc
xchg
insl
push
xor
sbb
sahf
scas
adc
call
scas
sub
fbstp
leave
and
mov
dec
lock
sbb
xorb
push
lret
pop
imul
je
movsl
rclb
mov
push
sahf
or
in
cmpsl
mov
xchg
pop
mov
lret
adc
mov
dec
push
inc
push
cld
imul
xlat
or
fiadds
insb
inc
cmp
mov
dec
pop
push
stos
leave
lock
jge
inc
pop
xchg
mov
xchg
sbb
mulb
stos
dec
hlt
xchg
leave
rcrl
std
mov
mov
mov
push
decl
enter
cwtl
into
pop
mov
sub
sbb
out
gs
scas
loop
cmovge
lock
stc
cmp
push
std
mov
xchg
in
or
dec
push
sarl
push
icebp
sbb
stc
mov
mov
mov
sub
popf
xor
es
test
es
or
sti
mov
call
das
aam
in
dec
jp
mov
push
insb
fcompl
insb
dec
mov
lods
mov
call
das
test
inc
pusha
pop
or
sbb
mov
stc
sbb
sub
std
shll
and
adcl
sub
js
movsl
push
in
nop
cs
imul
mov
jae
pop
mov
and
pop
xchg
dec
pop
popa
jp
xorb
rcrb
mov
cmpsb
dec
mov
daa
jo
adc
push
and
cmp
adc
mov
mov
imul
inc
repnz
jp
cmp
xchg
std
or
mov
mov
cmpsl
mov
loop
xor
add
dec
lock
jle
movl
or
xchg
ljmp
adc
fnsave
fisttpl
popa
insl
mov
jne
jmp
xor
xor
sub
rol
mov
out
jle
nop
add
clc
cmp
call
sbbb
dec
call
data16
int
cmp
cld
sub
test
jecxz
adc
sbb
xchg
push
fcoms
cmp
jmp
push
sbb
jnp
ret
orb
mov
mov
mov
jecxz
hlt
cli
cmpsb
xchg
ss
in
fs
popf
lds
sbb
ja
icebp
mov
mov
jmp
and
into
out
mov
movsb
jecxz
sub
pop
push
xchg
loop
push
aaa
xchg
cmp
in
lret
dec
add
push
inc
dec
xor
inc
inc
lock
leave
arpl
inc
loope
cmpsb
xchg
icebp
cmp
loope
subb
lods
or
mov
cs
add
push
pop
push
mov
push
pop
inc
ss
fs
pop
sub
push
cmp
scas
pop
dec
loopw
mov
arpl
aam
xor
ja
dec
push
cmp
cmp
jg
xchg
lea
add
cwtl
or
push
in
sub
inc
and
ja
add
mov
insl
aaa
or
lock
iret
outsb
push
ret
pop
jge
pop
sahf
sub
adc
mov
mov
leave
mov
movsl
les
dec
jae
mov
insl
cmp
mov
mov
lds
int
stos
push
pop
push
iret
movsl
jecxz
mov
rclb
cmp
push
xchg
outsl
dec
inc
sub
test
push
neg
jp
int
xchg
shlb
call
int
fsubs
xor
test
aam
lods
jecxz
mov
add
ja
mov
push
divl
jp
in
mov
clc
aam
repz
testb
sahf
pop
xchg
jb
leave
xor
aaa
cmp
nop
sbb
inc
push
iret
mov
add
cwtl
xchg
fcomip
dec
mov
call
shlb
mov
imul
out
or
or
mov
sub
popa
fstps
jecxz
pop
aam
jae
test
lds
dec
jmp
fsts
jge
popf
inc
mov
push
dec
inc
jge
es
enter
pop
jns
or
dec
je
xor
mov
and
mov
mov
cld
mov
mov
movsb
mov
pop
stos
mov
pop
jno
inc
mov
outsb
call
inc
jnp
inc
add
dec
sub
cs
inc
adc
xor
das
lods
fisubrs
adc
push
hlt
sbb
mov
jmp
adc
push
jge
xchg
pop
jg
test
outsl
mov
pop
cli
sbb
fidivs
pushf
inc
pop
push
inc
sub
sub
cmp
incl
ljmp
out
xchg
mov
pop
test
fwait
shl
mov
frstor
sub
stc
pop
das
cs
repz
jle
out
lahf
xor
xor
insb
push
cmp
in
add
push
mov
adc
outsb
rcrb
xor
fidivrs
cmp
sub
and
outsl
lock
sar
lret
push
mov
cwtl
xorb
xor
jle
fldt
pushf
pushf
outsl
int
push
sub
push
add
mov
shll
adc
push
lds
adc
lods
mov
mov
rorb
pusha
push
cmp
jecxz
sub
push
mov
xchg
jae
xor
push
repnz
bound
mov
test
jmp
and
stos
mov
ret
in
add
dec
cwtl
out
pop
mov
dec
cmp
lcall
xor
lds
sub
or
sub
sbb
and
cmpsb
rorb
cmp
jne
or
fucom
rcrb
sbb
shl
ljmp
mov
frstor
cmc
adc
sbb
adcb
or
jo
es
clc
das
addr16
shr
or
ljmp
dec
mov
adc
dec
mov
cwtl
popa
and
or
fwait
or
addr16
inc
ljmp
pop
xchg
add
sbb
xchg
int
sbb
lret
rolb
cli
popf
imul
mov
jne
xchg
and
bound
jne
add
psrlq
jge
in
dec
dec
ja
xchg
sub
xorl
jno
ret
mov
adc
add
call
push
adc
add
popf
scas
mov
adc
insb
inc
xlat
cli
dec
pop
repz
dec
fsubr
int3
or
mov
les
mov
add
xchg
test
int3
mov
enter
movsb
push
mov
icebp
mov
or
lahf
mov
xchg
out
mov
shrb
mov
push
xor
shrb
cmp
test
sarb
mov
pop
outsl
mov
sbb
pop
jmp
daa
pop
sbb
or
xorb
xor
mov
xor
and
cmc
in
push
and
stc
jbe
jmp
dec
mov
stc
mov
scas
sbb
inc
pop
cmp
scas
sbb
lock
or
in
ljmp
add
adc
xor
fcmovnu
inc
xor
push
dec
fadds
xor
jecxz
adc
out
into
lret
sbb
add
pusha
sbb
jle
lds
push
fbstp
push
lea
das
inc
lods
pop
movsl
or
adc
in
loope
movsb
mov
rorl
out
cli
aam
ss
test
fadds
or
or
scas
lcall
cltd
push
stc
xor
popa
in
add
mov
jbe
jmp
insb
push
pop
outsb
cld
je
shll
out
bound
sbb
inc
incl
mov
mov
sbb
sbb
in
dec
lcall
xchg
jno
rol
into
mov
scas
lahf
add
stos
shrl
dec
fstp
adc
mov
into
insb
jnp
ljmp
sbb
sbb
mov
push
mov
lods
pop
mov
inc
ja
cli
gs
cmc
bound
cmpsl
test
mov
mov
in
in
stos
stos
jle
cmp
mov
jbe
vpsubb
push
adc
xchg
fs
arpl
pop
mov
pop
sti
movsl
sub
jno
movsl
xor
pop
or
stc
pop
out
out
call
jo
xchg
and
roll
loope
xchg
movsb
testb
testl
cmp
push
dec
sti
mov
push
xor
and
push
xchg
dec
sub
xchg
mov
scas
in
sub
push
lds
jo
inc
jmp
sub
imul
lcall
jnp
add
pinsrw
sub
mov
inc
rorl
jbe
fisubs
test
sbb
push
aad
insb
ljmp
icebp
lcall
adc
adc
push
notb
xchg
mov
jge
sbb
sahf
xor
jbe
adc
xor
sub
sub
xor
inc
dec
cmp
push
enter
jecxz
rolb
push
ljmp
fmuls
and
push
pusha
sub
push
xchg
sar
mov
mov
scas
das
cmp
mov
sub
pop
stc
imul
in
adc
das
lods
or
cmpb
arpl
adc
testb
sub
ss
bound
das
xchg
cmp
xchg
push
jae
cmc
cmp
out
push
subl
dec
popl
cli
xchg
cltd
fldenv
push
add
fcoml
adc
icebp
adc
out
sbb
lock
mov
push
arpl
js
icebp
mov
dec
xor
pusha
cmc
inc
pop
scas
push
pop
mov
in
iretw
pop
test
leave
aaa
into
push
out
addb
mov
inc
shrl
xlat
loope
daa
jae
jne
pop
lret
stos
sub
test
ret
aas
xorb
lahf
adc
in
rcr
aam
adc
jns
mov
test
add
mov
lds
xchg
mov
mov
xchg
cld
sbb
or
mov
repz
lods
add
jo
popa
cmc
lods
xlat
sub
dec
mov
sbb
movsl
lock
aam
push
jbe
jnp
in
rcrb
mov
dec
adc
mov
scas
shlb
addr16
mov
test
std
xchg
insl
pop
dec
sbb
jmp
sbbl
fs
fs
adc
jle
push
sub
js
pop
cmpl
addr16
insb
add
sti
dec
xor
inc
mov
or
jmp
dec
das
test
icebp
inc
sar
cwtl
cmp
inc
test
push
sub
roll
push
iret
out
add
sbb
add
mov
out
int3
in
lods
cld
inc
or
push
lret
inc
loope
outsb
dec
adc
sub
shlb
into
mov
sbb
sub
pop
mov
add
imul
aad
out
sbb
mov
add
ret
adc
ljmp
dec
ret
lcall
add
or
in
repz
jmp
sbb
mov
mov
cmp
outsb
adc
inc
inc
mov
pop
mov
push
sub
imul
mov
mov
mov
push
mov
nop
jl
mov
push
and
into
out
sbb
mov
fcompl
enter
inc
stc
imul
aam
cmp
insb
into
addr16
bound
jmp
jge
insb
fbld
cmpsl
mov
xchg
fdivrl
mov
xor
aaa
cld
aam
pop
outsb
pop
loop
cmp
xchg
xchg
mov
push
adc
stos
fcompl
les
sbb
add
push
xor
sbb
xlat
dec
cld
pop
or
dec
lcall
inc
jae
leave
and
inc
xchg
inc
test
pushf
fdivrl
pop
out
jecxz
push
out
je
scas
jae
pop
cmpsb
lea
mov
or
outsl
mov
lret
dec
aas
loopne
xlat
cmp
push
adc
xchg
cmpsl
in
scas
xchg
cld
ss
mov
mov
shr
fdivrl
aam
out
mov
or
push
movsb
nop
repz
or
rorl
test
sar
dec
testb
jp
mov
arpl
push
xor
test
dec
mov
mov
stc
cli
xor
adc
pop
subl
jne
mov
lret
rcrb
aam
int
aas
mov
pop
popf
vmovntps
in
jp
sbb
mov
dec
fmull
mov
push
xor
hlt
adc
leave
add
call
cltd
arpl
sub
popa
je
jo
call
dec
roll
loope
jne
xchg
outsb
xchg
ds
pop
add
inc
jp
xchg
fdivs
and
jle
jnp
arpl
mov
mov
enter
or
imul
mov
movsb
jge
scas
push
rolb
push
test
adc
in
mov
mov
insl
mov
in
push
shlb
lahf
imul
jecxz
xlat
jno
dec
and
add
add
xor
mov
enter
sub
stc
dec
lret
fcoms
lahf
push
lret
clc
push
into
mov
dec
stos
xchg
es
adc
jo
rcl
lea
repnz
enter
add
mov
sbb
mov
add
insb
fdivs
repz
cmp
xchg
hlt
ret
outsb
iret
or
adc
pop
mov
and
or
push
cmpsb
pop
icebp
pop
flds
in
lods
fisubs
mov
lock
sub
jne
push
and
insb
fstl
std
xchg
arpl
sbb
pop
fsubr
jb
add
adc
xchg
icebp
add
push
int
xor
dec
and
inc
adc
xor
xlat
rol
mov
das
push
sbb
aaa
fadds
sbb
jecxz
out
push
jnp
cs
push
loopne
pop
ss
in
lods
ds
bnd
imulb
sub
sbb
sub
cmpsl
mov
pop
daa
lcall
stos
stos
icebp
sub
aaa
mov
pop
ret
jne
sti
sbb
sub
jge
pop
cmp
jmp
or
jne
fdivrl
pop
add
mov
stc
in
fs
jnp
ret
sahf
fisttpl
in
in
add
sbb
adc
shrb
lods
js
inc
jl
xor
jle
test
outsb
xchg
idiv
pop
es
enter
xchg
bound
stos
shr
aam
pop
sbb
fwait
mov
or
pushf
add
pop
cwtl
jns
xor
inc
fcomps
push
xlat
dec
repz
in
inc
pop
sbb
sub
sub
imul
imul
inc
add
sub
mov
adc
popa
sbb
mov
lds
inc
adc
inc
testl
es
sub
sbb
daa
loopne,pt
fnstsw
jg
dec
loopne
insl
call
sti
std
xchg
outsb
fsubrs
imul
insl
movsl
enter
shrb
sahf
sti
out
xchg
and
shrb
mov
jge
stos
outsb
cmpb
adc
in
sbb
jbe
mov
push
loope
call
dec
pop
mov
jg
aam
int3
ss
mov
jb,pt
adc
addl
sub
or
sub
lock
mov
jne
push
lahf
mov
aaa
pop
add
fcoml
and
or
xor
push
sbb
lcall
sbbl
mov
out
stos
nop
lods
sub
push
mull
or
fstpl
jbe
xchg
lods
push
rorb
push
inc
sub
dec
pop
pop
jle
adc
adc
sbb
mov
outsl
sbb
dec
es
lret
xchg
negl
pop
popf
fsubrl
ljmp
lea
cmc
aam
sahf
sub
pop
xor
push
lret
sub
adc
insb
rclb
xor
inc
xor
rcrb
mov
out
mov
test
mov
mov
mov
jmp
js
cld
cmpsl
mov
jne
xchg
jbe
dec
repz
sbb
xchg
imul
shlb
cmp
add
cld
js
aad
mov
push
or
fldcw
cmpb
aaa
xor
inc
fidivrs
pop
and
movsl
arpl
mov
mov
sar
icebp
fnsave
lods
push
jnp
mov
fwait
nop
aam
add
aas
push
mov
daa
xchg
fcoms
push
pusha
push
aad
mov
push
and
mov
sbb
xchg
faddl
frstor
out
filds
cmc
pop
pop
daa
pop
add
mov
inc
out
into
adc
or
and
mov
push
fs
mov
nop
xchg
cmp
nop
sub
dec
je
ljmp
mov
and
jmp
cmp
dec
inc
cmp
mov
test
hlt
in
xchg
lret
pop
sub
sub
shll
xor
das
popf
stos
out
sahf
cli
in
nop
mov
loope
cs
add
std
cmp
xor
aaa
aas
lods
mov
mov
mov
or
and
lcall
addr16
cmp
fadds
loopne
xor
mov
mov
cmp
pop
pop
popf
push
ror
push
jl
fisttpll
dec
ret
lds
ret
mov
aam
out
ja
shll
rol
push
mov
lea
movsl
fisubs
jae
mov
hlt
in
push
fs
sti
dec
adcl
rolb
cmp
testl
sbb
inc
movsb
xor
les
aad
icebp
xchg
inc
ret
mov
out
movsb
ds
dec
fisttpll
test
gs
es
bound
push
dec
and
outsb
insl
pushf
mov
pop
test
or
adcl
add
or
jns
jb
xor
movsb
insl
cmp
js
mov
push
inc
movsb
std
xor
jnp
shrb
mov
call
lods
jge
gs
shlb
mov
xor
and
lcall
fcom
sbb
rolb
js
mov
inc
xchg
xchg
fs
lock
and
loopne
inc
dec
nop
pop
dec
sbb
imul
xor
bound
addb
pop
mov
fcmovne
mov
int
and
dec
imul
sti
fadd
lods
je
in
pushl
je
push
or
jecxz
iret
xlat
out
in
btc
pop
push
jnp
cmp
and
jge
aad
in
imull
mov
xor
inc
movsl
fnstsw
pushf
sti
rcrb
int
pop
cmp
mov
in
loope
test
add
and
movsb
fbld
mov
add
mov
fstl
or
testb
es
pop
loopne
xchg
cltd
inc
in
xchg
aad
in
incb
es
inc
mov
lods
in
add
or
enter
les
xor
xchg
dec
or
pop
pop
and
cmp
push
mov
das
icebp
cmc
outsb
sub
push
sbb
das
sti
mov
xor
sub
sbb
push
jb
adc
insb
push
mov
mov
fists
pop
xor
pop
loop,pn
pop
out
or
pop
inc
negb
cmp
cmp
push
vshufps
test
sub
xlat
mov
ljmp
push
push
and
or
mov
add
mov
cmp
mov
and
cmc
fdivrl
aaa
fs
test
lds
addr16
xchg
mov
pop
in
add
test
or
push
dec
shll
lret
sub
push
or
outsl
je
add
push
xchg
sub
int3
mov
in
sub
add
neg
test
jecxz
xchg
popa
mov
xor
fstps
mov
jb
jge
cli
mov
imul
inc
jl
or
adc
ljmp
mov
das
mov
lods
fs
cmp
imul
fs
xchg
cli
add
lahf
add
add
gs
lds
test
loop
leave
dec
sbb
lret
dec
cwtl
mov
cmc
pop
and
mov
insl
dec
ja
gs
xchg
lret
jns
dec
pop
pop
ljmp
lret
aam
mov
jg
jle
sti
cmp
dec
rcll
fisttps
mov
jbe
es
daa
sbb
pusha
mov
cld
mov
clc
dec
xlat
mov
mov
out
cmp
sbbb
push
xor
push
pop
sti
negl
cltd
dec
in
icebp
mov
pushf
pop
pop
push
sbbb
add
popl
in
inc
clc
dec
sbb
cmpsl
lods
arpl
inc
cwtl
jns
stc
test
aam
sahf
pop
mov
pop
xchg
es
or
int3
aam
dec
negl
mov
pushf
or
sbb
leave
sub
mov
add
sub
data16
or
mov
lcall
pop
fucomip
mov
push
mov
fs
inc
push
cmp
dec
cmpsl
xchg
mov
lods
inc
xor
push
xchg
imul
add
add
arpl
xchg
roll
push
lcall
rorb
sub
call
mov
jge
imul
mov
fadds
sbb
adc
inc
jbe,pt
xor
mov
lods
enter
sbb
xor
stos
subl
cmpsb
cmc
jl
js
orl
test
into
mov
cmp
je
incl
ror
filds
aad
xor
fwait
dec
push
rcrb
aad
test
cmp
push
sbbl
xchg
arpl
outsb
or
jl
movsb
xchg
int3
and
and
mov
adc
mov
inc
xor
xchg
pop
mov
insb
outsb
xchg
mov
jge
or
outsl
xor
jno
push
out
xchg
cmpsl
xchg
sbb
add
xchg
in
jo
jb
mov
aam
jbe
xchg
test
cli
xor
rcrl
xchg
sub
xchg
ljmp
enter
or
jnp
push
mov
push
jl
sbb
pop
inc
fs
cmp
cmp
lret
adc
xor
mov
push
jl
mov
or
int
pop
or
movsl
inc
es
mov
loope
hlt
sbb
out
cs
xchg
lods
sahf
out
pop
jo
pop
push
push
push
lods
ljmp
cli
scas
mov
jp
test
jle
test
xchg
pop
dec
mov
je
jae
scas
lock
into
xor
cli
imul
notl
mov
ret
inc
pop
lods
js
jge
pop
push
and
sbb
mov
fnstsw
and
aaa
adc
push
jns
hlt
lret
lock
mov
jbe
or
or
ss
mov
xlat
dec
push
jg
sub
clc
adc
xchg
add
push
pop
out
or
xor
cmc
ljmp
test
and
push
scas
adc
pop
je
aaa
insl
or
dec
adc
adc
out
add
mov
inc
mov
inc
call
stos
divl
and
sbb
not
mov
sbb
and
dec
push
dec
test
mov
testb
outsl
jns
aaa
sub
cmp
movsl
sbbb
fdivrl
rolb
ljmp
adcb
push
dec
push
pushf
inc
out
stos
shl
mov
cs
lods
jp
or
cli
insl
sub
pusha
lret
pop
ja
and
in
cmp
mov
inc
mov
or
sbb
cmpsl
push
dec
cmpsb
and
inc
loope
dec
gs
add
scas
stos
clc
test
scas
stos
popf
sahf
sbb
cmpsl
shrl
jle
adc
xchg
cmp
or
test
push
mov
pop
mov
orl
fucom
mov
or
sub
int
nop
loope
xor
pusha
aaa
adc
sub
dec
pop
mov
movsl
jns
push
jmp
bound
pop
jmp
fsts
sarb
xchg
and
sbb
loope
jmp
loopne
mov
lods
fwait
or
inc
sub
das
jg
add
add
test
int3
ja
sbb
loopne
loope
pop
xchg
add
rolb
rorb
arpl
inc
loope
out
leave
test
scas
ss
jecxz
mov
lret
add
movsl
es
xor
pop
push
shll
movsb
dec
pop
cmpsl
jp
mov
adcb
jmp
jne
xor
pushf
imul
and
pop
pushf
inc
adc
adc
jle
mov
lcall
cwtl
xchg
xlat
stc
mov
aas
es
xor
cmp
imul
addr16
inc
inc
inc
mov
sbb
loop
loope
ja
sub
cmp
or
ss
cmpsb
call
and
cmc
push
js
notl
mov
outsl
jno
rcrl
test
mov
pop
out
rclb
xchg
test
mov
xor
outsl
rcrl
test
or
frstors
imul
in
cli
cmp
test
jp
and
outsl
pushf
ret
cli
out
mov
pop
loop
sbbb
inc
sbb
into
in
or
push
popa
xchg
pop
and
int3
iret
neg
in
nop
mov
push
add
fmulp
xor
stos
insb
xchg
pop
mov
add
cmp
jne
repz
loope
jmp
mov
mov
in
ret
out
or
adc
xchg
mov
xchg
sbb
and
hlt
dec
stos
xor
push
sbb
pop
jae
sbbb
xor
lcall
jp
dec
pop
mov
outsl
mov
lods
cs
pop
cwtl
add
add
xchg
xor
mov
in
fs
adc
dec
seto
mov
fisttpl
fstsw
pop
adc
sbb
pop
mov
lods
ds
arpl
imull
test
testb
cs
pop
sub
pop
jecxz
lds
mov
imul
pop
into
faddl
dec
xor
jns
cld
sahf
push
mov
mov
or
outsb
hlt
adc
lds
adc
into
jg
mov
and
in
jbe
rcll
sbb
sub
mov
mov
cli
pop
sbb
jb
xor
pop
pop
mov
nop
dec
in
mov
cmpsb
adc
loopne
push
daa
nop
pop
or
dec
and
mov
jns
ljmp
mov
test
sub
mov
mov
push
je
adc
cmpsb
or
std
jmp
adc
adc
fisttpl
cli
aad
mov
push
jle
aam
mov
ja
cmp
insl
sub
sbb
fcmove
jnp
sti
sbb
std
lahf
mov
and
or
inc
sti
repnz
shrl
mov
into
adc
adc
cmc
cmpsl
xchg
mov
repz
test
test
pop
call
or
movsb
or
insb
clc
mov
or
cwtl
cmpsb
fnsave
mov
sub
cmp
je
lcall
xor
adc
push
cmc
push
je
and
lods
adc
sahf
xchg
ds
push
mov
data16
xchg
mov
ret
mul
icebp
fsubl
jge
gs
pop
mov
xchg
pop
push
add
arpl
mov
ds
sahf
test
push
icebp
aam
push
out
push
push
into
pushf
push
sbb
adc
xchg
aad
nop
outsl
fcmove
out
scas
jno
scas
xchg
xor
fistpl
mov
mov
sahf
lret
lock
xchg
pop
or
mov
jecxz
mov
add
and
enter
cmp
sub
xchg
push
push
xor
push
push
stc
cs
lahf
adc
lea
mov
leave
loop
jge
jle
andl
stos
aam
inc
pop
in
sbb
mov
xor
cmp
push
pop
mov
daa
cmpsb
mov
inc
sub
fistl
insl
push
push
jecxz
jecxz
add
dec
mull
inc
sbb
add
scas
or
movsl
sub
mov
sti
jg
ret
sub
adc
fstpl
fsub
sbb
or
adc
adc
movsl
xchg
xchg
sub
dec
mov
dec
std
cmp
cpuid
dec
inc
out
in
cmpsl
adcb
pop
pop
mov
incl
mov
lret
repnz
imull
add
or
pop
fdivs
imul
inc
mov
nop
imul
sub
mov
inc
cs
sub
xchg
lret
sarb
outsl
rclb
test
out
lret
mov
xchg
testb
decb
inc
lds
insl
test
sub
add
inc
adc
sub
sub
adc
vmovhpd
bound
popa
sbb
int3
roll
fnstcw
das
js
lds
pop
xchg
daa
dec
sub
lock
ss
out
das
loop
push
cmp
pusha
mov
repnz
popa
adc
fcoml
cli
shrl
xchg
and
adc
cmpsb
cmp
mov
jb
sbb
lahf
and
loopne
jp
aam
fildl
aaa
lcall
pop
jnp
mov
test
adc
in
fnstenv
cmp
jns
ret
test
pop
aad
push
mov
sub
jo
ret
inc
pusha
std
lods
jle
fmuls
repnz
mov
fildll
inc
outsl
push
cld
mov
jno
ror
push
outsl
xchg
jb
mov
sbb
pop
insl
push
stc
sbb
lahf
testb
mov
adc
sbb
mov
pop
add
sbb
or
add
pusha
cmp
push
mov
jmp
es
faddl
cmp
jecxz
loop
inc
fwait
jb
or
ss
xchg
loope
test
jmp
jnp
cmpsb
sub
leave
cli
add
adc
lret
in
nop
stos
inc
xor
in
cmp
outsb
push
adc
lea
dec
mov
or
daa
or
pop
jecxz
mov
push
sub
sub
out
lock
pop
mov
add
inc
shlb
push
or
jne
jbe
fisttps
aad
in
out
mov
xchg
inc
pop
xor
cli
ss
repz
sbb
lds
mov
out
ret
add
negl
sbb
cmp
adc
or
cld
cmpsb
inc
movsb
jb
xor
clc
cmovle
mov
ds
jne
fwait
mov
into
outsl
cmp
add
repz
xor
mov
out
sti
push
in
cmp
pusha
push
fisttps
insl
mov
adc
mov
pop
mov
test
fwait
inc
cld
lods
pop
das
push
cmc
dec
ret
stos
insl
cld
dec
nop
dec
ret
sub
jmp
ja
sub
repnz
lea
push
xchg
sbb
inc
xchg
inc
std
daa
leave
jge
fisubl
ror
push
cmp
jns
xor
mov
repnz
rclb
nop
xchg
pop
lcall
dec
dec
mov
imulb
xor
mov
inc
inc
fucomi
adc
cwtl
add
jle
cltd
mov
shll
out
jns
push
iret
inc
scas
ja
and
insb
fs
std
rol
add
jp
xchg
mov
test
cmp
icebp
iret
adc
out
movsb
and
add
push
pop
mov
mov
push
cld
push
jle
out
loopne
lea
lcall
pop
pop
pop
stos
pop
enter
fwait
fwait
xor
mov
pop
adc
xchg
cmp
shll
jge
xor
xor
xor
notb
shl
rolw
lret
jl
mov
dec
adc
pop
or
xor
push
lret
loope
pop
mov
pop
xchg
push
fninit
std
inc
xchg
movsl
sub
inc
or
test
and
pop
call
cmpsb
mov
adc
outsb
imul
push
mov
mov
lock
dec
lcall
popf
lods
data16
add
add
dec
lods
xor
lret
ror
ja
iret
pusha
loopne
inc
mov
inc
ficoml
inc
icebp
pop
sub
adc
jecxz
cmpl
mov
dec
fbstp
into
lods
xor
cmpxchg
adc
int
push
sub
test
xor
outsb
out
or
mov
imul
inc
sub
in
sbb
jecxz
ss
xorb
in
sub
xchg
mov
daa
push
xchg
add
and
movsl
mov
mov
mov
ret
mov
lods
arpl
ljmp
mov
into
sub
jne
sub
imulb
inc
push
fiaddl
add
aaa
mov
xor
mov
movsl
push
cmp
jno
je
push
mov
sub
mov
sti
mov
and
push
cmpsl
jle
iret
into
xor
jg
jno
stos
test
sbb
out
aaa
push
sub
inc
popf
mov
sbb
movsl
repnz
mov
push
sbb
sbb
icebp
mov
and
push
sub
orl
or
jno
out
shll
movsl
fmuls
cwtl
mov
sbb
and
test
nop
pop
cld
not
mov
mov
mov
push
mov
daa
scas
mov
or
mov
nop
dec
mov
push
sarb
push
cmpsl
add
xor
pop
xchg
mov
fbstp
jecxz
lret
sti
push
outsb
jl
jle
xchg
cmpsl
movsl
scas
inc
push
cmp
pop
stos
decb
shll
aaa
xchg
pslld
pushf
mov
push
xor
mov
dec
push
fidivrl
sub
shlb
data16
jle
icebp
adc
mov
jmp
push
jnp
push
and
push
imul
outsl
leave
gs
insb
sbb
movsb
fdivr
mov
icebp
inc
and
xchg
rclb
jno
scas
mov
cmp
mov
ss
roll
xchg
pop
mov
jge
fdivr
mov
and
cmp
daa
jb
adc
xchg
int3
hlt
add
adc
repnz
lods
lret
fcomps
add
xor
push
xchg
mov
inc
pusha
test
sbb
jno
dec
dec
arpl
es
std
dec
fprem
cmpb
in
mov
push
test
out
xor
or
sar
mov
inc
mov
sub
test
mov
pop
push
out
sub
add
cmp
in
iret
pop
testb
daa
pop
xchg
leave
mov
pop
dec
cmpsb
das
jo
push
sub
xor
in
push
push
stos
and
ja
mov
andb
mov
aas
pop
mov
loope
adc
mov
shl
daa
sbb
pop
or
cmpsl
or
push
jl
call
sub
cltd
roll
push
push
int3
in
stos
loope
mov
cli
mov
push
jae
cltd
lock
xor
adc
mov
ret
push
push
sub
stos
mov
mov
lods
mov
popa
loope
or
pop
arpl
fwait
xchg
shrl
cmp
or
dec
out
sub
add
jle
mov
out
push
test
push
repz
es
repz
ss
push
push
jg
jb
inc
inc
mov
scas
aas
mov
sbb
hlt
push
cmp
inc
imull
sub
and
sbb
inc
jno
test
pop
adc
add
cmpsb
mov
mov
jae
xchg
out
mov
jecxz
enter
jecxz
sahf
mov
push
sub
rcrl
mov
or
or
add
push
push
xor
aad
jns
loopne
pop
lods
pop
call
into
or
adc
inc
lods
in
xor
sahf
movsb
or
cld
sar
insl
xchg
add
aad
les
inc
jecxz
or
mov
pusha
inc
dec
or
adc
cmp
push
std
insb
jl
xor
fbld
xchg
ja
outsl
mov
cld
scas
sub
cwtl
inc
outsb
add
xchg
loopne
cmp
sarb
movb
imull
jnp
mov
dec
jb
adc
jmp
mov
jno
sbb
sbb
scas
mov
sub
lea
sbb
dec
sub
cs
xchg
int
xchg
scas
stos
push
add
ret
sbb
adc
es
gs
push
clc
js
fnstsw
bound
ss
pusha
xchg
es
test
xchg
int
inc
jle
xor
out
push
stc
pop
shrl
imul
mov
pop
movsl
loop
ret
cli
mov
inc
add
roll
pushw
fstps
into
test
inc
leave
into
loope
sbb
cmpsb
xlat
jne
ds
icebp
shl
mov
and
cmpsb
sbb
cmp
gs
xlat
test
push
insl
mov
sub
shrl
and
pushf
inc
popf
ss
jecxz
inc
jl
out
cmpl
ret
dec
mov
mov
mov
arpl
or
ret
mov
jg
pop
mov
gs
jmp
inc
pusha
add
jae
inc
nop
mov
and
imul
lcall
mov
test
lea
xchg
xchg
scas
test
lds
bnd
addr16
push
and
jo
cmpsb
cmp
jbe
das
mov
mov
aaa
jo
or
mov
adc
out
push
shll
push
daa
gs
cmp
cwtl
movsb
jg
adc
xchg
outsl
push
fldln2
int
push
fs
adcl
je
loopne
mov
les
mov
dec
out
stos
dec
pop
test
xchg
mov
ds
add
repz
dec
pop
out
cli
jne
xor
jmp
shl
test
adc
push
and
insl
push
sub
cli
bswap
inc
mov
pop
mov
and
aad
call
mov
fwait
out
mov
imul
nop
ss
jge
mov
icebp
movsb
shrl
aam
xor
jle
cmp
xor
hlt
cmp
rorb
aad
dec
es
cmp
rorl
mov
or
jmp
out
pop
inc
xor
sbb
sbb
movsb
mov
clc
jg
pop
movl
push
jp
lahf
ja
dec
testb
hlt
adc
lea
sub
sub
inc
mov
cmp
xor
jg
sub
in
mov
popf
adc
sbb
sub
jg
push
xchg
mov
mov
ret
cltd
sar
pop
lds
mov
inc
jb
js
dec
adc
dec
mov
int3
test
mov
sti
ss
pop
test
mov
icebp
repz
inc
jp
mov
xchg
fidivrl
lret
lret
aam
sub
jns
push
out
jb
in
inc
mov
shrb
imulb
or
xchg
lea
ja
lods
adc
pop
js
dec
pop
mov
or
rcrb
adc
mov
jge
sbb
loope
push
sbb
insl
fcmovnu
sub
jns
mov
aam
lea
pop
and
xor
test
aad
push
mov
xor
int
add
xchg
xchg
aam
mov
mov
sbb
in
or
int
mov
push
or
sbb
adc
fwait
ljmp
dec
test
ret
rcll
lock
shl
mov
in
into
jbe
xlat
imul
pop
data16
data16
or
cmc
cmp
xor
xchg
mov
pop
into
mov
xlat
scas
lea
je
mov
leave
push
je
sub
ss
imul
sbb
cmpsb
dec
lods
iret
loop
and
xor
inc
mov
lea
push
hlt
xor
mov
push
dec
cwtl
push
pop
xlat
sub
sbb
adcl
jne
push
shrb
imul
das
lods
pop
dec
cmp
inc
inc
orb
cmp
gs
pop
test
xchg
jns
mov
sub
jmp
pop
jno
in
jns
pop
jl
add
pop
test
sbb
xchg
jo
xchg
cmpsl
out
push
jns
dec
test
xor
movl
push
ret
fs
push
and
outsb
loop,pn
cmp
mov
or
sub
lahf
push
jg
pop
notb
mov
daa
xor
hlt
popa
cmp
xchg
push
push
cltd
cld
ficomps
shll
jb
pop
cld
cmp
cwtl
shll
cmpsl
mov
jno
scas
pushf
pop
add
loop
mov
xchg
fisttpll
add
sub
push
enter
jmp
push
cmpsl
inc
not
pusha
lods
jbe
fprem
cwtl
sbb
cmpsb
mov
test
loope
ficompl
mov
xchg
cmp
adc
out
test
xchg
add
adc
sarb
ja
jmp
lcall
jge
xchg
or
adc
cli
faddl
fnclex
rolb
cmc
icebp
repnz
jp
and
mov
loop
iret
push
or
js
sbb
shrb
test
fnstcw
int
inc
mov
stc
mov
push
adc
add
jb
add
fsubs
jns
or
es
insb
in
shl
fwait
rcl
xchg
xchg
mov
mov
mov
popf
imull
push
cwtl
pop
cltd
sbbb
stos
jg
out
mov
out
fldl2t
inc
jns
dec
push
repz
cli
add
dec
xchg
xchg
out
add
test
cmp
push
jbe
lret
movsb
cwtl
stos
xchg
or
inc
or
inc
xor
cmp
mov
jns
dec
pop
lock
lret
mov
pop
mov
arpl
outsb
repz
sahf
jg
xchg
mov
push
xchg
pop
flds
and
outsb
movsl
push
lds
add
jl
inc
or
stos
jg
and
cmc
loope
sahf
cmp
jmp
mov
xor
pusha
fstp
jl
cmp
inc
xor
mov
and
and
push
push
pop
insb
cmp
out
lret
pop
inc
clc
jbe
lea
or
insb
lret
and
adcl
or
sti
dec
aam
mov
inc
sbb
mov
xchg
xchg
lret
adc
cld
sub
std
jmp
push
adc
js
jb
ljmp
dec
cmp
sti
js
jne
pop
mov
outsb
test
cmc
and
mov
dec
cld
cld
cmpl
loop
sbb
inc
ljmp
mov
mov
xchg
aad
faddp
jecxz
mov
inc
jmp
cli
fiadds
es
sub
cmpsl
hlt
aam
cltd
dec
mov
mov
ds
xchg
fadd
cld
push
cmc
xchg
lahf
ret
aaa
adc
adc
mov
sahf
outsl
mov
jmp
rcrl
xor
ja
jbe
pop
mov
push
dec
sbb
stos
fwait
mov
sbb
inc
insl
shlb
cmp
stc
mov
dec
xor
lret
ret
neg
ret
aas
xor
mov
aaa
fs
mov
mov
rolb
jnp
mov
int3
call
int
pop
insb
cs
ret
mov
out
or
adc
sub
fwait
jnp
or
pop
jo
mov
es
data16
xchg
or
daa
mov
cmpsl
mov
scas
jne
jnp
shlb
pop
cwtl
push
les
pop
loop
dec
mov
das
stos
and
push
fwait
xor
cmp
stos
scas
xchg
aad
adcl
sub
pop
push
lret
pop
fcoml
add
lock
mov
rcrb
or
mov
xor
cmp
sub
mov
and
push
pop
adc
into
push
pop
mov
cli
xor
jae
sbb
shl
xchg
repnz
nop
pop
or
fistl
jecxz
push
lea
jns
aam
ret
mov
and
subb
test
mov
fisubl
push
fdivs
mov
mov
mov
or
ret
js
or
add
mov
sbb
loop
fcompl
mov
outsb
andb
jns
push
cmpsl
cs
xor
pop
popa
jbe
andb
pop
jae
mov
mov
fistpl
add
mov
out
in
and
mov
lock
sbbl
lret
cmp
mov
mov
fucomp
adc
xchg
clc
pop
mov
sub
mov
and
xchg
mov
cmpsl
pushf
pop
inc
inc
movsl
push
inc
adc
bound
mov
jns
frstor
shlb
aas
bound
mov
cmp
repz
or
and
pushf
add
dec
mov
mul
mov
or
xor
xor
ss
stos
frstor
loop
xor
sbb
push
xor
repnz
in
leave
pop
movsb
mov
out
lock
loop
leave
add
imul
xchg
hlt
xor
cmpsb
push
adc
test
sahf
ret
push
push
push
push
fisubrs
sbb
orl
pop
test
push
lret
movsb
xchg
movsb
sbb
stc
movsb
xor
adc
sahf
sub
sbb
pop
loope
into
cmp
lret
pop
nop
sbb
cmpl
jl
add
pusha
mov
std
hlt
ss
movb
and
icebp
aam
stos
pop
dec
lret
mov
jle
int
imul
andl
loopne
and
fcmovnbe
sub
xor
jge
xchg
mov
cld
mov
inc
pop
mov
fwait
push
pop
fnstcw
fnsave
les
orb
and
out
aad
pop
lods
push
add
sbb
inc
jb
out
test
neg
inc
fs
add
xchg
dec
xor
das
loopne
out
outsl
rcl
push
push
push
imulb
out
xor
adc
scas
fsub
xlat
jmp
jne
mov
repz
adc
add
nop
or
dec
push
loop
loope
bound
cmc
sub
notb
test
sub
fwait
lods
cmp
inc
adc
mov
dec
loopne
xchg
nop
loope
ja
cwtl
inc
sbb
fcmovu
xchg
pop
jle
ret
mov
mov
mov
xchg
xchg
pop
mov
cmpsl
in
pop
cld
addl
lret
sbb
mov
dec
jb
aas
fcomi
fwait
add
dec
negl
jb
mov
lret
xor
push
xchg
pop
xchg
push
out
and
lds
mov
jp
testb
sbb
or
sarb
adc
xchg
scas
push
jle
sti
mov
call
and
jnp
xor
push
jnp
into
sarl
dec
out
jge
ret
into
aaa
sub
xchg
mov
shlb
add
or
in
fs
cmc
xor
sub
sbb
cmp
mov
icebp
into
mov
pop
lcall
pusha
xor
pop
add
sub
into
test
jno
push
sub
cltd
cmp
addr16
sub
dec
inc
inc
jmp
mov
pop
aas
repz
in
fisttpll
inc
mov
inc
pop
and
aas
mov
pop
jae
out
mov
cmp
js
adc
pop
jl
int
orb
mov
je
mov
stc
movsl
dec
pop
jmp
inc
pusha
int
out
mov
shll
jne
mov
ret
ljmp
repnz
inc
sub
cmp
fmul
adc
cmp
mov
jge
xchg
loopne
fistpl
inc
sbb
mov
and
inc
loopne
jne
repz
xor
or
pop
sub
andb
shrb
movsb
iret
stos
test
std
inc
insl
pushf
cmp
in
dec
jle
sub
js
mov
adc
mov
jmp
jno
sbb
xor
cmpsb
mov
test
cltd
icebp
adc
jmp
fisttps
repnz
xor
mov
cmpsl
imul
mov
jmp
es
mov
inc
mov
xchg
jl
xlat
xor
aas
fstpt
mov
push
and
push
insl
pop
lds
mov
es
shlb
pop
mov
push
iret
pusha
or
mov
movb
into
lods
cld
or
cmpsl
inc
and
adcl
stos
enter
stos
nop
lret
out
jp
std
push
leave
xchg
xor
gs
dec
push
test
sbb
stos
lods
pop
xchg
cmpsl
stos
xchg
ds
cmp
sub
dec
fs
xorl
jp
lods
iret
subb
add
popa
mov
out
pop
fildll
push
sbb
outsl
inc
and
insl
cwtl
fidivs
out
adc
clc
leave
mov
and
dec
pop
enter
dec
xchg
aas
cmc
dec
popf
ss
xor
inc
mov
xor
loopne
sbb
fmull
xor
lahf
adc
jge
rclb
dec
cmp
push
aam
pop
push
adc
push
out
mov
stc
sub
jns
mov
mov
shrb
pop
lods
mov
mov
testb
mov
rorb
std
inc
push
inc
xchg
scas
sarl
adc
lea
ret
jmp
cmp
and
xchg
dec
stos
xchg
dec
pop
outsb
gs
test
sahf
adc
mov
mov
lds
sbb
and
lret
cmp
jle
inc
lock
adc
ret
cmp
imul
push
imul
or
adc
add
sti
pop
je
cmp
or
adc
mov
xor
jbe
stos
mov
enter
or
dec
fs
fcmovu
daa
sub
stos
adc
cmc
cmc
inc
xor
sbb
ljmp
out
call
jbe
sbb
xchg
and
mov
sarb
lds
mov
ficoms
fwait
push
xchg
add
xchg
stos
clc
popa
and
mov
jne
cmpsb
cmp
repnz
imul
pop
rorl
insl
pop
je
sub
lea
fsubr
dec
int3
adc
cmp
in
jl
add
sti
pop
mov
mov
dec
xor
sbb
push
clc
fwait
sbb
in
inc
cmp
xor
xchg
push
jne
shrb
xchg
jbe
fwait
ret
ja
jne
stos
pop
inc
cmpsb
fstp
roll
in
jle
cwtl
bound
mov
jbe
test
fbld
mov
sub
in
jmp
cwtl
sbb
dec
sbb
adc
xorb
cmp
das
mov
sbb
leave
scas
add
das
notb
dec
add
xchg
xor
add
pop
sbb
cmpsb
jne
sarb
jno
movsb
and
jg
into
xor
mov
sub
mov
and
jne
sub
xchg
in
cwtl
outsl
push
dec
mov
test
or
ja
dec
mov
cltd
jl
mov
sarb
fmuls
xor
andb
adc
inc
leave
subb
lods
or
in
sahf
lods
arpl
outsb
inc
dec
mov
mov
push
and
inc
fcomip
pop
mov
jne
inc
inc
in
cli
lahf
call
mov
sbb
push
jmp
scas
add
iret
repnz
int3
mov
lock
cli
pop
jle
cmp
jo
add
std
imul
xchg
stos
int3
or
sub
call
or
leave
sti
xlat
out
xchg
leave
mov
inc
sbb
cmp
inc
bound
int3
lds
ror
sbb
cmp
mov
xchg
adc
cwtl
test
jle
push
fmuls
or
andb
sbb
jno
xor
pop
sub
mov
adc
insb
out
xchg
push
sarb
pop
fistpl
stc
shl
push
cs
xor
daa
xlat
leave
jae
sarl
lds
test
add
test
xor
mov
bound
jae
cmp
test
mov
sub
inc
test
cmp
or
test
xchg
int3
rclb
xchg
jl
loope
subl
and
enter
scas
mov
sahf
daa
or
mov
ret
lods
cli
mov
adc
int
cli
mov
mov
xor
insl
out
fwait
jp
mov
stos
push
pop
mov
mov
push
xchg
js
jae
push
shr
imul
sbb
test
jl
push
pop
les
sti
mov
jp
loop
int
cmpxchg
lahf
mov
jecxz
or
das
lods
loope
test
mov
lret
push
pusha
dec
lahf
push
inc
fisubrl
sub
dec
or
inc
bound
mov
in
adc
jmp
add
jb
mov
imul
cmp
rcr
and
mov
sub
in
outsl
jmp
dec
icebp
inc
pop
pushf
dec
loope
add
mov
into
mov
dec
ja
push
push
sbb
out
xor
loopne
jo
jae
aaa
mov
fwait
sbb
call
js
les
add
lods
pop
in
fcmovnbe
in
dec
mov
push
mov
adc
xchg
jp
outsb
faddp
vcomisd
fnstenv
xchg
arpl
mov
cmp
add
push
pop
push
rorl
pushf
leave
mov
mov
push
sub
call
mov
sbb
in
pop
inc
or
xchg
mov
insb
subl
or
cs
jnp
lods
jge
je
xchg
inc
sbb
xchg
pop
xlat
scas
add
in
sahf
outsl
xchg
dec
or
xchg
fistpl
push
or
sub
and
in
cli
push
and
pop
pop
push
mov
sbbb
je
sbb
cmp
sti
jb
popa
mov
pop
fcmovnbe
adc
out
sbb
xor
loopne
mov
lds
xchg
rcrb
mov
xchg
mov
fmull
fdivl
push
xor
cli
lods
inc
pop
and
inc
cmp
std
rcll
inc
into
add
cmp
pop
pop
wbinvd
sbb
int3
test
nop
push
nop
push
lea
stos
in
sub
xchg
imul
mov
lret
sbb
scas
fs
es
daa
sarl
jbe
push
fisubrs
lcall
inc
into
std
push
lcall
sbb
dec
pusha
add
arpl
ret
adc
addr16
cmp
aam
xor
dec
ljmp
out
movsb
in
ds
in
sbb
xchg
cmc
int3
iret
xchg
mov
les
inc
add
js
push
leave
enter
popf
fs
add
jns
xchg
pusha
pop
movsb
adc
xor
xor
insb
sbb
int3
xchg
mov
loopne
jmp
push
jo
mov
mov
stc
jmp
push
and
jp
inc
jne
test
sti
pop
mov
xchg
mov
dec
mov
sub
sub
mov
mov
fsubrl
pop
rclb
cmpsb
movsb
or
sub
xorl
pop
jg
imull
sbb
and
sti
in
xlat
cmp
dec
jecxz
nop
addr16
fisttps
sbb
mov
int
out
and
lods
and
sub
mov
and
cmp
inc
es
inc
sbb
ja
jg
sbb
test
ret
mov
pop
int3
and
and
sysenter
pop
rorb
insb
adc
lock
ljmp
mov
xor
push
fldt
push
push
pusha
aad
pushf
lahf
stc
jo
cmp
mov
mov
add
loope
cmp
aas
push
daa
jns
pop
pushf
pop
cld
add
xor
add
cmp
bswap
xor
and
mov
sti
lods
mov
adc
mov
cli
int
dec
ret
and
mov
mov
cs
in
jno
mov
xor
arpl
pop
sub
lcall
loop
addl
imul
outsl
mov
add
jbe
push
cmp
xchg
popa
jg
shll
mov
xchg
cmc
xchg
push
sub
sti
mov
das
sbb
clc
mov
movsb
pop
xchg
inc
dec
sbbl
outsb
shll
jge
aad
ds
dec
cmp
test
icebp
xchg
cmp
xor
scas
pusha
push
jecxz,pt
mov
jae
xchg
ljmp
ret
aad
clc
xchg
dec
stos
inc
test
push
icebp
in
adc
push
xchg
pusha
jmp
gs
adcb
xor
push
pop
sub
push
mov
ss
dec
mov
lret
or
popa
push
jne
out
ljmp
and
jb
mov
jne
sbb
fisubrs
cld
mov
jmp
dec
jae
mov
add
popf
fldpi
push
xchg
push
cmp
idivb
loope
outsb
lods
clc
ja
xchg
fnstenv
std
je
mov
pop
mov
movsl
mov
mov
dec
mov
xchg
add
or
shll
int3
mov
xchg
push
sub
mov
mov
mov
stos
fbld
jns
jnp
jnp
or
push
ja
cmp
test
fistpl
xchg
and
dec
inc
cmp
dec
pushf
push
jnp
test
cs
icebp
mov
es
sub
cmpsb
mov
hlt
out
cmp
shr
push
add
nop
pop
mov
ds
shrl
std
push
movsb
imul
xor
adc
mov
subl
adc
stos
hlt
divb
incb
mov
shll
jnp
mov
pop
out
mull
push
test
add
xor
pop
das
lock
cwtl
inc
in
int
inc
mov
in
ss
jmp
cmp
xchg
mov
mov
lock
push
scas
mov
and
dec
push
jnp
xor
out
in
dec
fwait
ja
add
pop
fsubs
push
shll
jnp
mov
lret
lea
dec
mov
out
insb
movsl
and
or
mov
inc
xchg
adc
repnz
dec
call
and
or
dec
lods
pop
pop
inc
inc
enter
imul
push
sub
or
xor
dec
ret
ror
xchg
shlb
jge
push
subb
mov
shlb
mov
out
or
mov
mov
aas
mov
mov
xlat
jae
call
or
dec
pushf
add
adc
fwait
inc
loop
imul
sub
addr16
movsb
inc
jecxz
fiaddl
jle
clc
pop
cmp
mov
stc
fiadds
inc
js
daa
in
mov
iret
mov
mov
icebp
and
cltd
push
pop
sub
test
or
mov
jo
popf
or
lret
movsl
enter
testb
out
cmpsb
pop
out
mov
out
mov
pushf
test
rorl
outsl
or
mul
mov
push
inc
or
sbb
clc
xorl
push
ret
sbb
leave
push
sbb
inc
xorl
xorl
and
adc
test
ret
cmp
xchg
jbe
pop
inc
loope
jno
ss
dec
xor
jle
adc
push
mov
xchg
data16
mov
adc
dec
mov
push
mov
sarl
mov
mov
pop
push
lcall
inc
lcall
pop
outsb
fucomi
xlat
xchg
pop
add
out
push
mov
mov
gs
rolb
fcoml
test
cmp
jbe
imul
cmpsb
add
mov
mov
jnp
dec
ds
mov
rcrl
in
mov
shl
fs
jne
popa
mov
out
pushf
pop
add
push
in
in
add
fld
mov
dec
xchg
in
push
push
push
test
lahf
push
mov
sub
scas
xchg
jne
in
xchg
fdivs
jp
mov
sbb
cmp
incl
dec
jp
cmp
decb
rcll
nop
loopne
cs
adc
fsubl
and
push
sub
cmp
out
push
xchg
inc
and
push
mov
notl
testb
inc
rcrl
cmc
in
push
mov
jp
push
lahf
adc
xor
mov
and
pop
mov
sub
mov
jmp
adcl
js
rorb
addr16
int3
sti
icebp
xor
jp
arpl
sbb
mov
mov
sahf
icebp
pop
and
sub
popf
lods
jg
jmp
pop
imul
add
lahf
cmp
lcall
stc
cs
addl
mov
mov
repz
pushf
mov
push
into
inc
and
or
jle
pop
divb
mov
sub
mull
push
mov
jp
xor
fcompl
lret
and
stc
xchg
aaa
sti
das
cmp
sti
and
pop
jae
jno
hlt
lret
cmp
sub
aad
repz
or
jno
mov
mov
xchg
mov
adc
cmc
inc
cmpsl
leave
fbld
and
pop
push
mov
jg
push
fstpt
jb
sbb
inc
dec
sahf
inc
test
arpl
push
daa
imul
scas
push
aaa
add
das
mov
clc
inc
pop
xchg
cwtl
jmp
test
hlt
jg
fldt
shrb
roll
mov
inc
loopne
ret
and
fcoml
pop
outsb
push
arpl
cmpsb
pop
pop
jne
negl
cmp
sbb
or
mov
mov
jo
stos
clc
mov
jle
cli
and
and
ret
lea
jb
scas
repnz
jmp
sahf
sbb
xchg
mov
mov
and
movsb
mov
mov
pop
cwtl
shlb
dec
int3
sub
push
mov
push
ss
pop
sub
push
ds
dec
adc
data16
inc
dec
hlt
ljmp
imul
cmc
ds
rorb
inc
lcall
mov
sbb
inc
es
pop
mov
les
and
mov
sub
cli
mov
lcall
stc
test
out
xchg
hlt
mov
add
pop
inc
shll
cmpsb
push
loope
pop
or
imul
addr16
or
lret
std
pop
cli
lds
cltd
push
out
mulb
or
mov
aad
lcall
or
notl
pop
jnp
lods
sbb
pop
outsl
mov
arpl
mov
ljmp
out
jmp
addr16
xor
insb
in
cmp
fsubrl
ret
mov
cmp
inc
pop
or
ret
repz
sbb
xor
int
cmpsb
imul
pop
push
daa
daa
add
pop
pop
sahf
dec
cmpsw
lods
push
stc
or
sbb
imul
subl
shll
hlt
add
lret
cmp
push
jae
cltd
outsl
mov
aad
arpl
fdivrl
shrb
cmpsb
mov
lret
call
dec
mov
faddl
push
in
pusha
pop
jle
add
push
or
inc
mov
shlb
fstpl
outsb
repnz
popf
add
ss
je
in
shlb
shr
xlat
adc
sub
out
xchg
inc
cmpsl
ret
mov
mov
sub
test
mov
sbb
inc
push
test
xchg
mov
lods
jnp
nop
imul
imulb
pop
push
int
or
lret
arpl
push
and
test
lods
and
mov
popa
js
xor
arpl
ret
outsl
inc
sub
lcall
rol
mov
or
xchg
mov
jmp
pop
xor
out
pusha
mov
jne
out
cmp
jp
jp
daa
or
insl
out
testl
jmp
jno
cmpsb
inc
mov
jb
lods
mov
mov
pop
pop
sbb
pop
ds
shlb
pusha
ja
lcall
dec
jns
fwait
xchg
js
daa
sarl
inc
lock
mov
lods
fwait
jge
and
test
sahf
push
sti
mov
rcll
cltd
in
jne
xor
insl
sahf
inc
in
add
adc
and
jg
mov
cmp
push
pop
dec
sbb
and
cmp
les
int3
lea
ret
imul
jmp
hlt
lods
dec
and
mov
mov
lods
ljmp
dec
mov
aaa
fdivrl
push
ljmp
cltd
cmp
sub
sub
loopne
jge
mov
pop
add
in
repz
outsb
lods
add
mov
mov
inc
xor
ds
inc
scas
ret
inc
in
ja
lea
loope
loop
pop
push
dec
ret
xor
pop
xor
ret
out
loopne
or
and
nop
testl
arpl
popf
arpl
pop
pushf
test
sbb
sbb
rclb
ljmp
and
xor
ss
mov
divl
or
fisttpl
testb
repnz
pop
pop
js,pt
aaa
xchg
in
stos
pop
imul
repnz
mov
jmp
sbb
add
inc
stc
sbb
xlat
das
in
push
in
xor
adc
popl
fnstenv
fcomip
stos
es
jle
stos
or
push
and
xchg
or
rcrl
sub
loop
iret
dec
add
divl
int
jp
sbb
and
cmp
mov
addr16
push
add
imul
inc
inc
daa
mov
vunpckhpd
xchg
jecxz
fwait
push
jne
data16
data16
and
cmpsb
jae
push
pushf
lods
loopne
jns
sbb
mov
add
jno
imul
and
inc
les
jge
sbb
rclb
data16
sbb
jecxz
scas
inc
pop
xchg
adc
add
test
cmp
mov
cmp
xchg
jmp
dec
jge
mov
stos
je
dec
sarb
sbb
ljmp
cmpsl
push
dec
mov
jb
mov
xor
pop
sbb
lahf
stc
or
stos
pop
loopne
jb
sub
add
mov
mov
ret
daa
shrl
push
fs
repnz
inc
pop
sbb
sbb
dec
mov
iret
adc
sbb
sbb
mov
dec
clc
jnp
push
inc
cmp
adc
mov
fdivrs
andb
xchg
inc
and
mov
mov
xlat
addr16
mov
dec
inc
shl
ja
insb
or
mov
aad
mov
and
mov
loop
pop
cs
ret
iret
insb
jp
ret
sbb
adc
jae
out
pop
scas
scas
ds
out
cwtl
and
add
fwait
std
inc
add
repz
popf
loopne
adc
xor
rcrb
jae
pop
dec
inc
and
inc
jge
add
xchg
sbbl
dec
xchg
loope
out
push
int
push
and
jns
adc
sbb
scas
loopne
gs
ja
ret
inc
push
or
in
insl
sub
mov
adc
ljmp
dec
out
xchg
sub
fcomps
mov
jle
sbb
daa
sarl
dec
jae
sbb
lcall
cwtl
cld
imul
jne
pushf
ficomps
mov
and
aad
aad
mov
aad
loope
rcll
sbb
mov
dec
int
ret
mov
add
push
pop
out
pop
and
lret
daa
jo
fdivrl
push
stos
and
pop
sbb
pop
idivl
add
icebp
insl
repz
ljmp
xchg
or
jecxz
mov
push
nop
movsl
mov
mov
scas
repnz
sahf
in
das
arpl
xor
push
pop
add
orb
and
cmp
xchg
sub
ss
andl
inc
ja
mov
lods
pop
push
jecxz
loop
mov
mov
call
into
movsl
into
jl
mov
movsb
jl
xchg
scas
fnstenv
inc
stos
or
xchg
dec
cmc
mov
inc
pop
shr
xor
jne
inc
adc
jno
push
mov
rorl
incb
sbb
lret
hlt
sbbb
rol
je
dec
xchg
xlat
xchg
out
lret
inc
faddl
test
xor
cld
loopne
pop
enter
and
xchg
cmp
and
push
mov
aam
enter
add
mov
adc
jo
push
xor
test
adc
xlat
sti
std
inc
cmp
js
and
daa
push
mov
addl
insl
testl
into
aad
push
xchg
lds
stos
cmpsl
insb
dec
lock
mov
sbb
std
inc
fimuls
sub
add
jb
rcrb
push
das
aad
lahf
xchg
outsb
or
and
jle
pop
fwait
or
jl
sbb
fwait
mov
xlat
pushl
xor
ljmp
out
sub
sbb
push
aaa
fldcw
xchg
sbb
sbb
xchg
pop
imul
xor
pop
or
jmp
scas
aam
ret
sbb
or
call
cmp
push
push
insl
and
out
mov
adc
arpl
clc
in
sub
mov
flds
push
pop
iret
jae
jns
mov
jle
sub
pop
iret
sbb
sub
ss
mov
fdivr
es
adc
pop
mov
insb
lea
sub
jno
jo
adc
sub
iret
jbe
int3
outsb
sarb
mov
pop
sub
inc
mov
test
inc
sub
cli
dec
and
xchg
out
xor
and
sbb
cmp
shll
pop
mov
ret
jg
ljmp
das
lahf
mov
subl
mov
pop
subb
in
pop
loop
out
cwtl
xchg
popa
push
lret
adc
mov
jae
test
or
in
gs
xchg
imul
aad
lods
les
mov
cld
test
mov
shlb
gs
lea
cmp
sti
pop
hlt
xor
mov
repz
mov
stos
lahf
outsl
jne
adc
add
adc
xor
fucom
inc
dec
scas
ljmp
sub
cvtps2pd
sub
imul
das
loope
call
sub
sbb
stos
cmp
addl
pop
mov
lret
pop
and
and
jecxz
shrl
dec
sub
and
push
popa
fnstenv
mov
cld
sbb
lcall
rcrl
or
jl
push
mov
ja
test
leave
shrb
loopne
lods
cmp
fs
xchg
mov
pop
mov
mov
shrl
cmp
push
mov
fs
stos
or
cmp
sbb
jg
dec
xchg
mov
iret
xlat
push
shrb
hlt
mov
jp
ja
jl
inc
and
iret
scas
test
or
mov
inc
mov
mov
cs
push
adcl
or
ljmp
or
or
push
in
jnp
call
cmc
loopne
mov
sahf
shll
arpl
int
sbb
or
lods
fidivrs
iret
mov
sub
movsb
rcr
or
mov
cmpsl
popf
rcrb
cwtl
enter
ss
and
and
dec
in
dec
js
sub
rcll
cmpsl
loope
repz
pop
or
mov
out
out
inc
cmp
mov
lods
lods
jns
push
jp
pop
shl
scas
pushf
ljmp
sbb
pop
cmc
loopne
nop
orb
lock
ss
pop
lret
pop
cmpsb
outsb
dec
fwait
adc
cwtl
push
jg
inc
xchg
lds
push
ret
hlt
adc
fnsave
pmuludq
sub
fisttpl
pushl
fs
dec
pop
aaa
dec
xor
lods
es
push
inc
loopne
je
addb
jmp
mov
push
ret
aas
insl
pushf
in
addr16
jns
stos
mov
lret
shll
fisttpll
xchg
imul
pop
cld
cmp
in
jmp
jmp
out
adc
into
lahf
aaa
dec
cmp
ljmp
mov
mov
jb
sarb
mov
dec
bound
out
inc
lock
jno
shr
mov
ja
mov
lcall
ror
inc
fmulp
jo
jmp
arpl
dec
pop
daa
hlt
add
mov
pop
push
pop
gs
jecxz
imul
dec
or
fsubs
dec
adc
push
ret
test
js
cmp
add
xchg
cmc
push
push
xor
outsl
jnp
jbe
aaa
bound
repnz
cmpsb
jmp
pushf
fwait
cmp
rcr
adc
mov
in
and
adc
xchg
ds
mov
mov
push
xchg
push
lahf
and
es
mov
call
fildl
ror
cmp
jns
or
push
loopne
cld
arpl
gs
mov
daa
out
jle
mov
fidivl
jo
in
lods
ret
mov
cwtl
outsb
lret
mov
arpl
sbb
test
cltd
jp
jb
push
in
clc
into
add
lret
shll
pop
or
mov
sahf
mov
fcoms
iret
or
xor
testl
dec
movsb
test
xor
adc
out
out
xchg
xchg
out
mov
pop
and
rcr
jns
adc
push
dec
pushl
mov
sbb
mov
mov
rcrb
inc
jle
mov
fiadds
insl
insb
test
cld
or
xchg
out
and
sti
insl
cmp
jbe
mov
inc
mov
fidivs
mov
cwtl
adc
add
pop
gs
cmp
dec
cli
add
pusha
push
mov
jne
inc
dec
ljmp
adc
mov
gs
mov
int3
mov
jb
cmp
aad
lds
push
xor
imull
xchg
mov
inc
pushf
insl
jecxz
mov
push
idiv
mov
cwtl
adc
sub
pop
jge
jae
or
hlt
fnstenv
rcll
jg
mov
dec
jno
std
push
cmc
jle
aaa
mov
mov
les
arpl
inc
test
pop
add
or
jo
mov
inc
sub
cmp
and
pop
pop
js
adc
and
cmpsl
mov
or
dec
push
movsl
mov
mov
sub
fcomps
and
icebp
push
enter
in
cmp
add
hlt
sarb
or
stos
dec
mov
addr16
cmp
fs
addr16
jmp
test
movsl
mov
dec
rorb
jno
divl
loopne
fwait
pushf
test
xchg
xor
xchg
push
push
mov
clc
adc
add
xchg
add
xorl
fidivrl
xchg
sbb
in
in
imul
and
bound
jmp
or
cmp
adc
jecxz
pop
add
push
mov
ret
mov
and
xchg
lcall
jo
adcl
dec
inc
repnz
shlb
adc
add
pop
mov
and
cmc
and
mov
jmp
cmovg
into
adc
divb
xchg
push
andl
mov
sub
pop
addb
shl
insb
pop
xchg
gs
push
mov
cmp
mov
sbb
aaa
sahf
inc
add
pop
call
lahf
mov
add
cmp
ljmp
jo
inc
push
xchg
fucom
jo
adc
sbb
popa
sti
sub
nop
jo
test
adc
xor
dec
adc
mov
movb
mov
lods
shlb
aaa
xor
pop
stos
push
sub
add
std
and
mov
cmc
bnd
mov
jns
and
cs
sub
imul
sub
in
push
xchg
push
stc
or
pop
repnz
pop
cmpl
clc
dec
mov
pop
cmp
fnsave
outsl
jg
sahf
in
in
pusha
scas
lods
fdivr
leave
inc
adc
xchg
js
rorl
test
lret
gs
dec
mov
cli
cld
sbb
jmp
push
xor
das
or
mov
push
test
in
xchg
inc
div
xchg
pusha
je
jbe
inc
popf
jmp
push
mov
adc
pop
xlat
fwait
mov
sub
je
insl
mov
insb
sahf
jae
outsl
xor
jb
sub
in
es
ss
sub
faddp
inc
mov
mov
jo
xchg
je
sub
fcoml
popa
mov
or
pop
add
jecxz
jbe
fldt
and
hlt
jp
xchg
sti
mov
cmp
mov
cltd
push
jg
je
mov
pop
and
imul
push
ljmp
in
out
cmp
loopne
add
push
push
sti
lret
dec
cmpsb
xchg
add
jbe
lahf
or
int
cmp
dec
fnsave
and
xor
paddb
or
push
mov
lea
inc
fnsave
icebp
lea
jmp
xor
out
popf
shll
xlat
pop
or
out
data16
imul
in
subl
push
mov
push
sub
adc
lahf
flds
ljmp
stos
cld
sti
push
xor
repnz
lds
add
push
push
adc
lea
jmp
mov
push
test
imul
xor
xchg
push
inc
jno
add
outsb
out
pop
adc
push
out
or
stc
and
je
jl
or
cltd
or
pcmpgtw
pop
dec
jle
mov
mov
xor
mov
gs
inc
out
arpl
lods
inc
into
dec
dec
and
sub
leave
push
push
or
xlat
mov
rcr
fs
cs
ret
push
div
mov
and
adc
out
xor
fsubrs
pop
sti
hlt
test
and
push
mov
push
cmc
les
call
jnp
mov
ds
mov
lcall
mov
rolb
jbe
dec
jg
out
fxtract
scas
jmp
add
push
pop
js
xor
shlb
push
jbe
sub
jnp
cmpsb
popa
stos
push
add
xor
dec
add
in
pop
inc
pop
adcl
outsl
cli
mov
and
cli
ja
mov
stc
push
imull
scas
imul
scas
cmpsb
lcall
shrl
inc
arpl
shr
fcomp
jmp
ds
xor
aam
cmc
adc
pop
add
push
das
in
sbb
push
scas
movsl
lahf
bound
mov
iret
sti
in
sbb
stc
xchg
decl
pop
adc
cmp
cmp
or
xor
lea
popa
repz
lods
cmpl
lcall
imul
repz
les
mov
cmp
test
lods
les
sbb
sarl
ljmp
sbb
dec
sbb
jmp
jnp
insb
jge
sbb
mov
ss
inc
fbld
iret
insl
and
mov
pop
lods
and
in
mov
dec
or
jae
dec
iret
mov
mov
fisubl
loop
or
jl
vlddqu
rcl
rorb
xchg
test
mov
cmp
ja
lahf
or
ljmp
imul
fcmovnu
lret
rcll
imul
xchg
int
or
call
pusha
fidivl
cli
jae
sub
add
dec
std
pop
clc
hlt
xchg
sti
in
adc
mov
lods
pop
sub
repnz
and
or
cmp
or
movsb
pushf
mov
mov
mov
push
adcb
iret
in
enter
lea
in
clc
push
mov
push
movsl
test
sub
xchg
sbb
push
scas
add
pop
js
lret
sub
fcmovnu
out
gs
cli
aad
push
dec
insl
jecxz
push
cmc
hlt
mov
dec
jb
mov
scas
popf
and
cmp
jns
cmpsl
xlat
das
push
repnz
shll
jecxz
mov
fcoms
lods
adcb
jge
les
pushf
dec
pop
jno
out
push
sbb
inc
xchg
pop
jge
fadds
mov
xlat
sbb
lods
inc
fwait
jno
mov
mov
and
xchg
sbb
clc
stos
dec
cmp
sbb
std
testb
sti
sbb
aam
cmpsl
adc
and
call
call
cmp
int3
xor
fucomi
imul
rep
inc
mov
cmpsl
popf
xchg
in
dec
dec
mov
mov
fstpl
scas
sub
push
sti
in
push
mov
jbe
pushf
scas
mov
adc
inc
gs
mov
in
pop
mov
nop
cmp
cmp
fistl
and
pushf
pop
dec
cmpsl
cmp
cmpsl
mov
sbb
jle
pop
push
pop
sti
dec
xor
sub
call
push
push
gs
cwtl
out
sub
push
adc
movsl
add
rorb
aaa
jnp
std
and
js
stos
and
popf
in
push
inc
sub
mov
or
test
ret
adc
insb
leave
push
ret
sub
lods
pop
push
addr16
cwtl
adc
adc
adc
mov
popa
es
lahf
fs
in
fs
rclb
jne
dec
sbbb
mov
rcll
stc
mov
pop
ds
in
lret
mov
sti
orl
stc
mov
fwait
test
outsl
daa
inc
cmp
ret
add
mov
pusha
movsl
mov
add
jbe
cmp
repz
sub
lret
fld
xor
cmpb
daa
cmp
pop
lret
jl
add
and
xchg
js
mov
sti
sbb
mov
roll
or
jp
or
mov
into
jbe
scas
nop
dec
popf
mov
xchg
dec
pop
in
roll
sbbl
cld
sar
sbb
cld
xchg
aaa
mov
sbb
rorl
les
sub
adc
mov
cmp
pop
jl
add
test
cwtl
scas
out
into
or
xor
push
ret
iret
icebp
and
fistpl
dec
jne
fs
jecxz
mov
inc
or
jmp
fnstsw
add
pop
mov
dec
test
sbb
inc
xchg
loope
cs
fimuls
pop
popa
rorl
sub
aaa
fsubrs
out
cltd
imul
jl
push
xor
push
lret
add
jle
jo
test
test
xchg
pushf
out
leave
add
scas
jmp
xor
pop
cmp
ja
fcoms
fucomi
push
mov
in
fwait
nop
in
sbb
inc
inc
sub
imul
in
icebp
fildl
mov
outsb
loop
cmc
push
sub
mov
mov
mov
sbb
inc
cwtl
div
in
dec
and
sub
insl
enter
adcl
sbb
incb
les
je
jae
ja
dec
cld
sbb
jmp
enter
pfsub
lret
popf
or
imul
movsl
mov
scas
jecxz
adcb
xor
and
call
xor
dec
cwtl
sbb
mov
mov
sbbb
or
dec
sarb
scas
lods
fiadds
xchg
jnp
mov
mov
dec
rcrl
lods
test
lods
pop
cmp
or
lds
rcr
pusha
cmp
negb
mov
ss
add
or
lods
mov
les
jmp
xlat
mov
mov
aas
imul
or
push
or
mov
cmpsb
outsb
fcmovnb
sbb
pushf
adc
xchg
sbb
mov
cmp
nop
loopne
push
rolb
jne
jno
aaa
mov
shll
pop
pop
jl
ret
iret
xchg
and
test
lahf
add
pop
mov
lret
xchg
out
mov
dec
jg
lcall
rcrl
mulb
cmpsb
push
mov
fsubs
outsb
inc
andb
jle
push
lds
pop
out
jge
dec
fldl
xchg
pop
popa
pop
repz
mov
xor
sub
or
xchg
lds
or
mov
testb
or
scas
fcomi
xchg
mov
and
jmp
ret
lahf
in
push
mov
les
pop
mov
or
sbb
jmp
dec
xchg
xchg
sub
sub
jns
dec
sub
aam
sbbl
in
adc
jl
adc
jno
std
and
stos
outsl
out
loop
adc
and
movb
in
and
sub
xchg
or
mov
mov
daa
dec
out
pop
pusha
push
out
inc
das
cli
and
es
sub
jne
adc
xor
mov
add
ja
push
xchg
mov
shlb
jl
jl
sbb
pop
jno
in
popf
lahf
sahf
fwait
or
outsl
xchg
or
sbb
mov
or
rolb
std
xor
mov
xlat
ja
nop
mov
mov
std
sbb
inc
mov
lahf
icebp
int3
mov
push
add
sbb
adc
sub
sbb
data16
es
data16
in
mov
pop
sbb
les
hlt
daa
inc
or
and
es
sarb
std
sub
mov
call
in
sub
cmpsl
pop
xor
lahf
jno
loopne
xchg
cmc
repnz
mov
jae
mov
roll
std
push
add
dec
loopw
rorl
xchg
es
rcll
jl
xchg
fidivrl
cmpsl
cmp
lds
inc
dec
pop
xchg
jbe
shrl
fwait
xor
add
outsb
aad
cmpsb
or
popa
pushf
push
sub
data16
out
or
dec
and
and
sub
sub
sub
xchg
test
aaa
mov
call
push
mov
mov
cltd
jp
inc
loop
add
xlat
dec
lock
pandn
xchg
xchg
add
icebp
rol
sub
jp
mov
xchg
in
leave
or
mov
push
inc
jp
jnp
cmc
pop
fst
mov
cltd
and
mov
lahf
cmpsb
pop
fwait
rcrb
pop
push
or
sbb
dec
mov
inc
fdivrs
loope
sti
xor
rorl
add
or
xchg
lds
je
cld
or
dec
dec
and
fwait
out
xlat
sbb
mov
add
or
mov
sbb
mov
movsl
mov
adc
pop
and
sbb
lock
sbb
xchg
rolb
lahf
fists
stc
ret
in
jb
mov
mov
push
sbb
aaa
and
and
sub
fndisi(8087
jns
bound
in
pop
roll
in
adc
hlt
rcrb
dec
cwtl
jne
test
pop
push
sub
mov
cltd
dec
lret
adc
lahf
push
inc
rcrb
je
mov
inc
mov
sbbl
xor
inc
aad
adc
lds
gs
cmp
rclb
aam
add
sub
mov
lea
xchg
movsl
pop
cmp
mov
jg
add
mov
loop
cmp
pusha
enter
cltd
ftst
add
or
push
daa
incb
popw
test
xor
mov
or
js
dec
mov
ss
and
and
adc
pop
enter
ja
in
mov
cs
insl
mov
stos
imul
dec
in
loopne
jp
add
in
sbb
jle
int
fnsave
and
and
push
popf
dec
sbb
xor
push
lods
rorl
dec
lods
mov
cmp
insb
mov
sub
in
add
cmp
pushf
cmovs
call
mov
loope
lock
xchg
das
bound
sub
jle
bound
imul
push
xlat
data16
sub
inc
int3
xchg
cs
xor
arpl
jno
aaa
dec
xchg
lahf
and
or
pop
jl
cmc
fnsave
push
jno
arpl
stos
std
repnz
xor
mov
testl
pop
andl
or
cli
fisubl
fs
stos
sub
sub
mov
icebp
pop
or
repnz
push
adc
mov
rclb
jbe
sbb
sub
xor
int
and
fistps
sbb
nop
loop
jle
aam
out
mov
or
or
leave
das
sbb
mov
rolb
pop
jp
sti
and
in
cmp
ret
loopne
test
imul
enter
inc
aam
xchg
jb
xor
inc
outsb
adc
cs
xchg
sti
cmpb
aaa
cs
fs
add
pusha
inc
sbb
jb
rsqrtps
xor
movsl
and
mov
cwtl
aad
push
shrl
or
adc
xor
leave
pop
mov
in
dec
add
fists
orl
daa
xor
jle
inc
xor
xchg
fimuls
scas
mov
mov
mov
add
sub
pop
frstor
xor
out
xor
and
rep
cmp
jg
movsl
xchg
xor
jecxz
stos
fwait
call
aad
and
jne
push
mov
or
mov
cli
js
popa
lods
jecxz
cmp
outsl
xlat
mov
sub
dec
and
icebp
insl
and
ss
adc
push
into
sub
mov
or
inc
bound
adc
outsl
xor
out
pop
cmp
dec
and
mov
inc
dec
push
outsl
aas
mov
push
rcll
sbb
add
mov
jno
scas
inc
xchg
xor
cld
and
les
push
inc
je
movsl
and
fimuls
dec
and
aaa
scas
push
sbb
cmp
stos
or
and
jmp
inc
adc
inc
xchg
rorl
mov
mov
aas
mov
cmc
pop
sub
rcll
mov
test
scas
xchg
cmp
mov
mov
in
push
mov
pop
xchg
stos
movsb
pushf
push
fld
lods
xor
and
imul
pop
cmp
iret
xchg
nop
insb
add
push
movsl
in
sub
gs
and
jbe
xchg
xorl
or
fistps
lea
std
mov
mov
sub
outsl
jae
xor
or
jp
xchg
sub
sbb
inc
ss
dec
mov
enter
rclb
add
lods
rcl
xor
loopnew
popf
cmpsb
jo
add
cltd
cltd
sbb
lcall
repz
in
or
jns
inc
xchg
jge
leave
xor
pop
icebp
push
aas
jg
int
outsb
push
adc
add
mov
filds
push
xchg
in
in
xchg
les
outsb
adc
jle
pop
jb
pop
or
sbb
mov
test
push
add
jl
adc
pop
pop
cmpsl
call
out
loop
ljmp
in
jg
es
mov
cmp
out
int
nop
mov
lret
or
xor
sub
cmp
sub
aam
dec
in
int3
mov
pop
call
scas
dec
stos
popl
mov
lret
jae
dec
mov
shrl
movsb
repnz
mov
dec
out
xchg
loopne
imul
outsb
bound
fimull
test
xchg
xor
imul
shlb
call
idivl
aaa
lock
lods
jp
cmpl
push
sbb
data16
mov
add
das
xchg
aaa
or
cmpb
movsb
inc
hlt
and
ja
decl
sbb
scas
sub
fdivl
sbb
cld
push
cmc
pmaxub
push
jne
cmpsb
or
fnstsw
into
hlt
pop
or
sub
leave
cmpsb
int3
fdivl
jo
icebp
rclb
dec
scas
outsb
fmuls
ja
in
jnp
fs
add
mov
jmp
addr16
push
xor
ret
icebp
mov
push
push
js
jg
mov
lds
push
jg
call
cld
pop
jmp
sbb
cltd
or
ja
mov
sbb
ja
ret
rcrb
push
jae
and
popa
mov
mull
test
and
mov
je
clc
jae
xor
inc
out
push
paddusb
scas
bound
loop
xor
pop
out
test
cmp
sbb
rep
and
lea
cmp
aas
and
add
leave
push
loop
lea
mov
dec
dec
add
incb
xchg
xchg
push
out
adc
pop
loope
movsl
lcall
inc
iret
lret
or
jp
es
dec
mov
gs
dec
data16
lods
inc
push
push
add
push
dec
jg
push
push
or
or
scas
xor
pop
cld
pop
cmp
xchg
data16
popa
in
inc
adc
cli
fadds
movb
and
push
fldenv
mov
fnsave
and
adcl
push
push
mov
lss
loop
inc
in
punpckldq
jns
les
mov
mov
cmp
into
mov
sbbb
xor
ret
je
gs
aad
dec
jmp
rdtsc
lock
mov
test
clc
mov
imul
push
xchg
adc
and
cs
into
sub
push
popf
push
xor
inc
inc
insb
adc
jge
add
aad
es
xor
mov
std
fwait
lods
jl
pop
dec
cmpsb
jnp
xor
adc
sub
dec
lds
rcr
inc
xchg
ret
enter
mov
inc
imul
push
pop
xchg
pop
mov
jg
out
inc
xchg
push
pop
xor
cmp
arpl
shll
call
cs
push
and
push
xor
xor
pop
jge
ficoms
subl
push
mov
or
sub
sarl
dec
stc
push
push
pushf
jo
adc
mov
pop
loopne
and
adc
rcrb
inc
faddl
xchg
mov
cmpsl
punpcklwd
icebp
mov
xorl
std
mov
sbb
js
inc
push
testb
in
fidivrl
jb
filds
out
jno
ljmp
jb
cmovns
in
cld
add
subl
in
fiaddl
mov
pop
dec
xchg
sub
gs
mov
push
push
in
or
cmpl
enter
nop
add
or
xchg
popa
xchg
jno
pop
xlat
sahf
out
std
das
jbe
outsl
test
in
leave
sti
dec
push
xchg
jbe
jmp
mov
in
stc
mov
pop
in
gs
movsb
sbbb
mov
cmpsl
push
or
pop
movsb
push
repnz
sbb
jmp
ja
sbb
lret
mov
add
inc
aam
ret
ret
mov
jne
adc
jbe
adc
fwait
mov
sub
lods
sbb
inc
sub
pusha
xchg
daa
sub
pop
push
xor
sub
je
xchg
mov
cs
mov
mov
mov
mov
sbb
fnstenv
push
into
inc
sub
ljmp
in
cmp
pop
pop
or
jmp
jae
adc
mov
and
fcomps
loope
fwait
jge
sbb
repnz
in
bound
pop
addr16
inc
shr
push
mov
loop
xor
pop
into
imul
daa
clc
test
cmp
ret
arpl
fwait
cmpsl
cmp
mov
inc
pusha
lret
loope
fcoms
out
loop
pushf
pop
fwait
adc
ss
int
mov
pop
xor
lock
xor
lods
pop
add
insl
lahf
insb
dec
out
inc
xchg
rcl
sbb
jne
push
cmp
sti
xlat
jp
mov
orb
les
inc
jl
jg
std
pusha
fcoms
cmc
jo
divb
insl
pushf
jmp
mov
test
add
adc
arpl
andl
push
dec
lock
cvtdq2ps
ljmp
dec
jg
cs
or
rep
push
push
pop
fdivr
inc
jne
fwait
mov
fs
push
inc
stc
daa
push
xor
xor
push
addr16
jp
sub
iret
push
cwtl
fisubrl
mov
sarb
and
jae
stc
hlt
mov
lahf
movsb
std
test
and
sbb
inc
bound
es
jns
stc
sub
test
repnz
push
ret
fwait
sub
insb
ret
test
mov
sbb
je
dec
daa
add
add
fs
dec
mov
scas
mov
fld
jo
stos
stos
xchg
add
testl
fyl2xp1
mov
and
pop
fwait
jp
leave
mov
sahf
scas
sbb
loop
addr16
sbb
fs
dec
sahf
rorb
stc
test
cmp
or
mov
inc
jmp
and
or
arpl
push
mov
xchg
push
add
jmp
call
pop
mov
adc
std
xchg
mov
jecxz
ret
mov
leave
mov
bound
push
ficompl
or
pop
imul
nop
aas
xchg
sub
jbe
or
pop
push
dec
ljmp
sbb
call
pusha
rcr
into
cld
adc
jp
or
cmpsl
in
or
jl
add
dec
push
ret
ss
sub
lea
lret
ljmp
fldenv
add
movsb
rcrb
clc
fldcw
and
add
jmp
mov
fcoms
lock
fcomip
mov
xchg
pop
mov
jbe
jns
xor
iret
lods
hlt
divl
icebp
sbb
sub
ss
lahf
and
mov
into
mov
or
mov
inc
sbb
cmp
rclb
stos
add
dec
test
int3
enter
je
cmp
negb
sub
lods
pop
jmp
decl
sub
and
xor
push
mov
stc
roll
mov
or
iret
jl
pop
mov
mov
sti
dec
and
jns
out
daa
divb
mov
cltd
or
int
and
jmp
daa
aaa
sub
stos
dec
pop
arpl
push
xor
pop
pop
or
xor
dec
pop
jmp
lock
adc
cmc
jle
pop
icebp
dec
jg
in
das
xchg
cmp
pop
into
dec
inc
je
adc
aam
sti
loop
xchg
std
pop
cli
xchg
cld
cmc
xlat
popa
mov
in
or
leave
aas
xchg
sbb
lods
sub
dec
test
mov
fbld
loop
mov
push
inc
out
mov
mov
mov
xchg
push
cmp
cmp
shrb
jle
scas
pop
ljmp
jmp
sbb
mov
jp
and
test
add
das
es
fldenv
sub
leave
aaa
pop
lea
add
iret
bound
into
pop
scas
mov
jb
mov
lods
into
cmp
int3
dec
push
dec
ljmp
lods
push
insl
imul
pop
out
inc
mov
fcoml
cmp
and
or
inc
jnp
adc
gs
stos
adc
inc
mov
ds
mov
xorl
adc
cmpsl
xlat
mov
mov
xor
mov
and
xchg
mov
mov
or
or
ljmp
pop
cli
cmp
push
mov
adc
aad
mov
into
sbb
loope
jg
dec
mov
sub
in
jnp
iret
xor
push
xor
mov
sub
mov
mov
mov
mov
inc
outsl
popf
cltd
into
pop
sbb
rorl
pop
or
idiv
rorb
iret
sbb
sub
orb
mov
gs
dec
clc
fsubrl
shrb
es
out
sti
les
mov
test
test
pop
and
bound
push
pop
mov
jg
fnstsw
jp
jg
orps
xchg
lcall
jnp
stos
addr16
inc
loopne
mov
sub
xchg
cwtl
mov
pop
jns
add
xchg
push
outsl
mov
push
sahf
nop
jg
mov
mov
es
sub
ret
movsl
cltd
movsb
pushf
xor
jno
fisttpl
adc
int3
fidivrs
inc
sbb
cmp
push
or
dec
jb
in
mov
scas
movsl
dec
lahf
jne
lock
movsl
lret
mov
xor
mov
jmp
xchg
popf
enter
insb
outsl
out
sbb
xor
ss
adc
in
imul
jp
mov
jae
cwtl
adc
ljmp
movsb
fs
xlat
clc
jae
lock
popl
out
in
clc
fdivr
lods
cmp
ja
enter
add
adc
adc
pop
ss
fdivl
shlb
aas
and
gs
pop
mov
es
jge
push
dec
ret
push
push
jmp
out
in
inc
sarb
lds
sub
pushf
aad
mov
ret
mov
inc
or
cmp
js
dec
xor
push
or
push
dec
pop
sbb
outsl
mov
mov
jno
cmpb
add
fldl
jge
mov
sub
sub
nop
test
das
push
cmp
cmpsl
push
or
movsl
and
inc
mov
cmpsl
inc
jno
push
push
loope
add
cli
sub
lret
shll
pop
push
or
cwtl
pop
outsl
je
lea
inc
je
sbb
les
lcall
xlat
nop
jo
in
jno
cmp
push
pushf
pushf
out
lret
jmp
push
sbb
push
add
inc
aad
push
xor
das
cmc
sbb
mov
jecxz
cld
ljmp
mov
cmc
push
int3
int3
cmpsl
adc
aas
pop
adc
mov
es
cmp
bound
movsb
add
rdmsr
dec
jae
xchg
inc
andl
push
pop
inc
imul
mov
ljmp
pop
cmc
inc
aam
mov
pop
js
dec
jg
push
cwtl
mov
lods
addr16
pop
cwtl
mov
mov
cmp
daa
aad
aam
xor
jge
dec
jecxz
and
cmp
mov
mov
fmulp
pop
add
test
and
pcmpeqw
mull
xor
pop
icebp
jle
mov
xlat
call
sbb
pop
mov
fstpl
in
hlt
xor
ja
loopne
xchg
nop
sbb
mov
out
xor
mov
adc
out
nop
imul
mov
jg
test
cmc
mov
cmp
sub
imul
mov
addr16
pop
sbb
mov
mov
mov
push
sti
xchg
cmp
dec
cmc
out
mov
loopne
sahf
dec
testb
fistpll
inc
dec
mov
inc
mov
aad
aad
mov
pop
das
or
mov
cwtl
ljmp
jle
xchg
or
push
shl
inc
pop
mov
loopne
daa
sbb
lods
mov
push
stc
mov
enter
dec
and
pop
pop
lret
pop
xchg
push
pop
inc
or
rcl
push
or
scas
lods
stc
data16
aad
add
stos
or
xchg
out
gs
mov
shlb
add
out
in
xor
std
loop
inc
test
inc
dec
insb
push
sub
popa
sbb
jmp
xor
cmp
or
ss
mov
mov
sub
mov
sub
movl
jns
scas
int
mov
mov
mov
inc
mov
mov
jge
negl
test
sub
push
sbb
out
rcl
idivb
add
mov
mov
sub
shll
jge
lods
js
xchg
mov
je
and
mov
xor
add
loop
and
inc
iret
inc
pop
mov
mov
popl
gs
jbe
jg
ss
push
sarb
and
push
in
jo
std
xchg
push
aam
jo
push
cwtl
sti
imul
mov
and
or
clc
in
pusha
lea
lock
test
lret
xchg
repnz
je
frstor
xchg
popf
icebp
push
clc
jl
sahf
pusha
push
xchg
inc
enter
fidivrs
loope
push
push
fs
loopne
dec
xchg
cli
scas
fs
inc
test
xchg
sti
push
pop
pop
out
jns
fwait
cmpsb
sub
jmp
xchg
lds
lret
adc
lds
imul
sbbb
nop
ret
icebp
fidivl
hlt
adc
int3
daa
cmpsb
adc
xor
cmc
cmp
ret
dec
fwait
add
mov
push
mov
mov
stos
loope
addr16
nop
sbb
sub
mov
fwait
les
jge
les
pop
aaa
hlt
xchg
stos
or
sbb
mov
xlat
ja
xlat
pop
xor
cmpsl
icebp
movsb
jp
vcomiss
rclb
insl
loopne
icebp
sahf
inc
or
inc
pushf
mov
jns
fistps
sar
sbb
cmp
int
sub
push
xchg
hlt
jnp
add
outsl
mov
and
cmc
mov
lds
lret
cltd
pop
js
jecxz
inc
jne
xchg
mov
xchg
jns
dec
dec
sbb
xor
addr16
sbb
movsb
xchg
mov
out
cmp
mov
add
insl
push
fcoml
lahf
jl
push
xor
xor
or
stos
push
jns
fisttps
and
push
out
jl
lret
cmp
out
sub
mov
movsl
rorb
fucomi
iret
popl
adc
mov
int
jmp
out
xchg
inc
inc
dec
pop
icebp
jl
stc
movsb
pop
mov
adc
adc
push
js
push
or
jp
and
std
mov
sbb
jb
icebp
sub
in
sub
call
cmp
iret
daa
xor
jp
shlb
push
xor
imul
cmp
dec
jge
aad
dec
ss
mov
in
dec
inc
nop
jbe
pushf
addl
cmp
sub
out
fmul
cmc
xor
test
inc
sub
or
mov
lret
popa
adc
in
daa
sub
xchg
jbe
daa
les
adc
jle
pop
mov
aad
adc
sti
aad
test
lock
push
lahf
mov
repnz
pushf
mov
xchg
gs
dec
push
cmp
mov
and
gs
xor
fsubrl
mov
popf
outsb
sub
sbb
in
sbbb
adc
pop
jl
mov
add
cli
inc
mov
mov
xchg
in
lods
or
pop
dec
and
aas
rorl
jne
dec
mov
scas
mov
mov
daa
iret
mov
xchg
out
add
xor
fs
pop
filds
mov
inc
ret
jp
cli
add
in
inc
imul
mov
mov
adc
inc
jge
xchg
inc
aam
das
aas
add
lret
cmp
pop
fsubrl
cmpsl
jns
dec
mov
xor
push
lods
inc
lret
fs
xchg
jp
mov
jle
dec
fidivrl
or
test
lods
out
or
movsl
test
shll
mov
add
addr16
loope
lcall
add
cmp
stos
jge
mov
mov
or
mov
adc
repnz
xor
rclb
sub
jle
xor
push
addr16
aam
je
mov
xchg
add
jo
test
pop
mov
pop
jbe
push
fcomps
mulb
sbb
mov
out
in
sbbl
mov
adcl
jle
mov
pop
cli
jno
jl
cmp
cmp
push
inc
dec
cltd
jns
mov
adc
lods
cmp
out
pop
addr16
fcomi
adc
div
daa
push
loope
pusha
xchg
in
sbb
fcomps
inc
les
sub
addr16
jns
leave
sub
jle
fcomps
dec
sub
cmc
jl
leave
mov
in
addr16
sahf
gs
mov
mov
push
int3
mov
aad
sub
add
xchg
add
push
jo
add
leave
lahf
sbb
sbb
add
fisubrl
add
dec
sub
sbb
stos
mov
in
pusha
adc
inc
imul
fs
in
pop
mov
mov
mov
enter
clc
dec
mov
pop
lods
bound
or
leave
sti
pop
xchg
sbb
ficompl
add
iret
mov
loope
call
push
in
gs
sub
test
fcmovnu
xchg
jb
xchg
cmp
aad
inc
mov
or
jno
pop
movsb
ss
mov
add
fwait
or
sahf
daa
sbbb
xchg
bound
sub
or
test
adc
lcall
mov
adc
jb
pop
ss
xchg
adc
pop
pop
outsl
repz
and
shll
lcall
add
rcrl
out
xor
dec
test
jb,pn
pop
jae
test
jne
pop
sbb
pop
adc
and
mov
int3
int3
adc
cmc
les
sub
mov
pop
add
mov
xchg
pop
or
inc
sub
cwtl
pop
push
cwtl
nop
mov
aad
cli
out
mov
cwtl
push
in
lret
out
in
lods
out
cltd
sti
adc
lret
adc
pop
into
rclb
add
mov
sub
scas
push
xchg
inc
push
mov
int
push
icebp
mov
aad
pop
out
movsb
cmpsb
adcl
and
or
sbb
xor
push
sub
test
outsl
test
pushf
jno
imull
mov
lahf
lds
dec
mov
enter
aam
rorl
pop
rol
das
mov
inc
in
les
or
sbb
xor
rep
cli
lods
ficompl
iret
and
mov
mov
sbb
scas
add
sbb
int3
add
adc
stos
mov
pushf
js
fldl
dec
or
pop
pop
mov
jb
sbb
pmaxub
hlt
fdivs
add
or
add
xor
jbe
inc
add
inc
pop
rclb
push
xchg
int3
fsts
out
in
ljmp
add
rcr
jmp
push
lfs
push
div
push
xor
push
cwtl
pop
mov
lock
into
jo
dec
pop
cmp
lret
push
adc
loope
inc
lods
repz
xchg
cmc
or
or
jnp
jns
dec
in
push
sub
out
lahf
fwait
call
loope
cmp
lea
mov
sub
fmull
and
jmp
ss
iret
add
rcrb
adc
or
jge
and
nop
test
mov
and
jmp
jb
prefetch
imul
pop
mov
fsubr
and
push
xchg
orb
push
fisttpl
dec
mov
bound
jmp
bound
pop
aad
testl
sti
sbb
movsl
inc
jg
mov
cmp
test
push
push
adc
dec
inc
push
adc
sub
inc
add
mov
sub
sbb
fdivrl
pop
scas
mov
mov
rcrb
std
lock
mov
nop
lret
lret
xor
in
lock
or
js
mov
cltd
popa
outsb
mov
pushf
push
mov
and
aam
outsl
adc
lods
subb
sub
ljmp
out
cmovb
mov
mov
and
jb
out
dec
push
sub
mov
cs
cmp
rorb
xor
or
pop
loop
bound
out
call
dec
decl
in
pop
aad
and
add
scas
dec
aas
xor
roll
sbb
jle
icebp
adc
mov
pop
mov
mov
inc
jnp
movsb
add
jg
push
insl
std
lcall
mov
ficoms
push
outsb
ror
sub
push
cli
dec
mov
iret
scas
stos
xchg
repz
jns
call
rorl
pop
inc
sub
insb
andl
pop
mov
dec
shlb
and
rol
in
cmp
pop
jo
scas
lcall
xlat
pop
lock
inc
push
jae
sbb
pop
jne
in
stc
repz
hlt
inc
push
jle
jl
loopne
mov
cmp
push
insl
fwait
sbb
and
nop
das
jg
addl
hlt
mov
loope
cmp
std
inc
jbe
daa
and
or
or
xchg
xchg
mov
jl
push
add
pop
cli
mov
add
sbb
pop
cmpsb
lret
mov
ret
fwait
imul
shrb
rcll
push
dec
mov
and
sbbl
dec
lahf
testl
or
inc
or
dec
mov
lret
jge
jg
push
jae
mov
scas
push
sub
fisubs
lea
ss
cwtl
scas
sahf
push
inc
std
insl
dec
ret
dec
ret
push
xchg
ret
fisttpl
fsubl
cmp
sbb
inc
scas
insl
push
mov
pop
in
sahf
aam
push
test
int
mov
jecxz
jge
sub
shrb
sub
add
or
test
mov
rcr
xor
cmp
std
and
dec
ds
jg
pop
dec
in
insl
fcmovnu
xor
shll
and
ret
xlat
scas
xchg
push
icebp
in
popf
loop
push
xchg
inc
dec
jne
hlt
es
lods
sahf
sbb
pop
mov
clc
scas
add
nop
push
push
das
lock
popf
inc
imul
das
mov
push
lods
and
and
jae
lods
mov
pop
pop
sub
cmp
out
sahf
jno
mov
fildll
cmpsl
test
xchg
pushf
outsb
mov
xchg
or
push
aaa
shr
and
xor
dec
lods
inc
sub
testl
in
cmp
ja
loop
sbb
inc
insl
pop
imul
stos
stos
jle
xchg
and
xchg
mov
and
mov
int
adc
xchg
mov
pop
fistpll
bsr
jne
mov
push
or
fnstcw
fcmovnu
call
fs
loop
cli
adc
rcrb
sbb
loope
in
mov
mov
sbb
dec
mov
inc
out
inc
dec
pop
fs
int3
pop
push
aam
int
movsb
fmull
orb
iret
std
xchg
ret
jo
jle
mov
inc
sub
movsl
inc
imull
rcr
test
pop
loope
push
push
pop
js
movsl
aad
xchg
or
sbb
stos
test
pop
mov
dec
mov
jle
mov
fstpl
std
fwait
ljmp
jl
cmp
iret
repnz
jmp
pop
ret
popa
sti
test
push
pusha
xchg
mov
fmul
into
decb
mov
aad
pop
loop
sahf
mov
sbb
inc
popa
xchg
cs
ds
pop
inc
mov
sub
mov
dec
add
mov
inc
push
jns
pop
pushf
popa
aad
cmpsb
xor
pop
ffree
sbb
mov
mov
mov
enter
push
inc
dec
aaa
inc
xchg
mov
das
int3
loopne
jle
push
call
sbbl
lods
arpl
insl
xchg
mov
movsl
jnp
jo
popf
add
in
or
jle
popf
and
mov
xchg
dec
gs
inc
in
add
gs
inc
sbb
cmpsb
sub
ficompl
orl
pop
fwait
int
inc
mov
fisubrs
add
pop
icebp
xor
push
pop
lock
es
rcl
inc
cs
xchg
das
ljmp
cli
incb
inc
xor
xchg
mov
cmp
shrl
mov
lea
jg
repnz
jb
cmpsb
je
jmp
mov
push
stc
data16
mov
or
cmp
aad
shlb
mov
cltd
xlat
scas
lret
aas
outsb
test
fisttpl
push
test
xlat
fsubl
lock
pop
jnp
in
xchg
repnz
push
lds
mov
nop
es
jl
adc
jl
testl
inc
push
leave
mov
icebp
dec
imul
push
mov
adc
cmpsb
mov
popa
mov
imul
lds
sbb
imul
sub
sub
outsb
rcr
cmp
pop
or
sbb
and
jbe
adc
push
dec
mov
jno
adc
xor
xchg
mov
in
xor
call
int3
mov
rolb
loopne
jecxz
jns
pop
adc
cmp
lods
lcall
test
fdivrl
xchg
shl
and
dec
ret
or
xor
insb
cmc
nop
mov
inc
add
aaa
xchg
outsb
push
mov
cs
aaa
dec
pop
fwait
jp
push
mov
int
mov
push
aam
aam
mov
cmpsb
xor
in
mov
xor
imul
ss
cmpsl
pushf
adc
mov
pop
pop
add
inc
repnz
mov
jnp
lahf
mov
outsl
add
inc
push
mov
in
mov
dec
lods
mov
call
lock
daa
inc
mov
dec
mov
sti
mov
jle
adc
sub
out
push
add
faddl
shll
roll
push
test
dec
pop
loopne
or
imul
das
scas
stc
sub
leave
cld
mov
jl
test
hlt
out
xchg
jp
ret
pop
mov
adc
adc
pop
loopne
pop
daa
mov
adcl
xchg
cwtl
hlt
xor
popf
test
mov
inc
inc
xchg
inc
clc
xor
bound
xchg
mov
xchg
xchg
movsb
roll
inc
sbb
sbb
inc
fisttpll
inc
lret
cmp
mov
add
ficoms
sbb
aad
stos
clc
dec
push
rclb
pop
or
ss
ficoms
jb
dec
les
xchg
cld
mov
mov
das
jae
xchg
sub
cmp
mov
addr16
shrl
das
cmpsb
es
inc
imul
jb
bnd
lcall
jbe
add
pop
es
jne
aas
pusha
mov
and
movsb
push
adc
xchg
adc
adc
mov
lahf
mov
cwtl
test
jo
pop
push
loop
js
cwtl
xchg
mov
popf
scas
add
push
mov
mov
sbb
add
fisubrl
rorl
mov
pop
and
jnp
lods
js
lods
pop
sbb
mov
inc
stos
loope
xor
or
je
cltd
push
imul
jae
push
mov
lcall
imul
jp
imul
lret
inc
push
pop
xor
jle
dec
inc
lods
and
shr
mov
dec
hlt
push
mov
inc
add
les
arpl
lret
xchg
aaa
popf
jne
mov
les
nop
and
mov
out
jbe
gs
shlb
xor
aaa
jge
sbb
cmp
adc
sub
mov
mov
test
mov
sbb
outsl
mov
fwait
ja
push
std
int
xchg
imul
jecxz
aad
dec
les
test
jg
or
push
xlat
or
loop
rclb
test
outsb
add
xor
addr16
jmp
lods
or
pushf
jl
cmp
lds
add
mov
sbb
xchg
sbb
popa
arpl
stos
xor
pusha
xchg
cmpb
pop
inc
popf
ss
push
lahf
notl
sbb
mov
cwtl
mov
sub
je
pushf
repz
mov
push
jp
mov
leave
pop
mov
test
jmp
jecxz
mov
scas
mov
or
mov
push
dec
imulb
mov
loope
jno
cmpsb
movd
mov
jmp
sti
dec
pop
mov
or
cli
mov
mov
das
and
mov
sbb
jno
imul
stos
gs
shl
repnz
loope
lcall
inc
jno
popf
adc
mov
xchg
push
scas
pop
sbb
rorl
iret
fistpll
test
sbb
mov
inc
inc
mov
mov
sti
in
sti
ljmp
clc
sbb
adc
movsl
fsubs
dec
in
enter
dec
cmp
push
push
and
push
imul
lea
inc
fstpl
jns
ss
push
lock
das
test
je
xor
sub
inc
loope
and
mov
sub
pop
leave
nop
dec
mov
mov
in
cmp
xchg
mov
mov
mov
jno
mov
clc
sbb
sbb
xchg
cmp
cltd
push
out
sarl
or
jb
mov
xchg
in
jns
mov
jl
mov
aam
cmp
je
mull
push
pop
xchg
inc
jle
dec
ja
pop
sub
mov
add
dec
fdivrl
dec
xor
push
inc
xchg
sub
push
outsb
stc
xor
sbb
loope
mov
loopne
or
cltd
sbb
fdivr
xchg
jns
sbb
insl
notl
ret
fsubl
mov
mov
sbb
dec
scas
js
cmp
add
pop
pusha
ret
jb
push
jle
push
dec
mov
push
int3
dec
popf
movsb
xor
xor
das
sbb
xlat
pop
ret
push
loop
scas
jmp
lret
push
push
lret
cli
in
lods
and
mov
test
scas
lock
in
or
push
test
xchg
in
or
add
cmpsl
sbb
push
idivb
mov
rorl
pop
push
cmp
dec
lcall
push
pop
in
lret
xchg
addb
dec
int
icebp
xor
dec
rorb
jle
push
push
bnd
ret
sub
add
or
out
cmp
pop
shl
fdiv
mov
add
roll
cmpxchg
pop
push
xchg
inc
ss
pop
mov
not
jo
sub
cmp
lahf
leave
xchg
adc
aaa
movsb
imul
xchg
loopne
hlt
lahf
adc
addr16
jecxz
jne
inc
jl
aad
and
mov
pop
faddl
xchg
and
mov
cmpsl
add
push
adc
dec
mov
fiaddl
add
cwtl
sbbb
std
mov
repz
popa
jnp
mov
ja
dec
clc
lea
jbe
jg
ret
sub
mov
sub
xchg
adc
mov
pop
mov
mov
pop
loope
inc
inc
push
test
jl
adc
sub
rorb
cmp
mov
fwait
mov
daa
dec
stc
popa
pop
push
xor
push
std
test
sbb
rcl
lods
jbe
dec
cmpsb
mov
rcr
pop
mov
xchg
pop
adc
mov
addr16
sbb
jp
arpl
sub
data16
adc
je
imul
pop
and
and
and
push
jmp
dec
test
dec
mov
shr
push
mul
pop
pop
fs
cmp
pop
stc
stos
or
bound
cmp
lods
das
aam
sarl
add
lods
es
push
jnp
sahf
push
mov
ret
leave
sub
sbb
orb
push
push
pop
lahf
mov
fistpll
test
stc
repz
dec
pop
xor
outsb
or
cmp
cld
std
xchg
ss
bound
sbb
jmp
add
js,pt
jp
sbb
test
cmp
lret
in
enter
rolb
repz
out
pop
leave
sbb
ds
adc
jbe
loope
test
aaa
lds
and
lea
mov
mov
stos
das
xlat
sub
imull
ret
cmp
and
mov
ss
adc
xor
mov
rolb
push
mov
dec
pusha
pushf
push
cwtl
mov
pop
insl
fwait
iret
outsl
int
cmc
inc
xor
push
xchg
add
pop
das
cmp
packuswb
push
dec
or
and
mov
insl
fwait
adc
movlps
roll
aaa
leave
jmp
dec
pusha
sti
lds
loopne
leave
int
sbb
into
cltd
lahf
jae
push
mov
cmpsl
test
rcl
adc
repnz
ret
mov
cwtl
ret
pushf
mov
dec
push
cwtl
jecxz
push
mov
rsm
rcll
incb
mov
mov
mov
cli
mov
out
repnz
inc
jle
sub
aam
sbb
sti
mov
int3
or
sbb
xchg
cmp
shlb
test
outsb
add
push
lahf
dec
pop
sbb
and
ret
and
inc
ss
cmp
mov
repnz
sti
lret
mov
push
pop
dec
popa
and
mov
add
lret
cmpl
lret
shl
inc
out
pop
push
adc
or
adc
xor
mov
ss
xor
fisttpll
ja
or
les
or
sbb
enter
sbb
pushf
jne
mov
jo
rorb
mov
add
jo
rcll
cld
call
in
sub
int3
outsl
ljmp
or
shlb
mov
repnz
dec
clc
jge
mov
mov
sarb
cs
xchg
sahf
rorl
sar
bound
jbe
fwait
stos
subb
jecxz
jmp
push
mov
or
pushf
cmp
mov
dec
imull
rclb
mov
ja
push
mov
ljmp
out
scas
xchg
dec
or
pusha
xchg
inc
push
pop
dec
pop
out
pop
push
inc
stos
insb
gs
xchg
jno
pop
lcall
mov
mov
push
push
dec
imul
decl
xor
mov
sub
in
push
mov
mov
push
fnsave
imul
fsubrs
lods
xchg
std
movb
out
adc
add
mov
mov
cwtl
dec
jmp
lret
ret
push
inc
mov
adc
mov
or
lods
loopne
inc
xlat
push
xlat
shl
sub
jge
lea
dec
and
aad
sbb
lret
push
mov
xchg
fcomi
fwait
push
pop
push
ljmp
out
mov
xchg
and
mov
test
ds
pop
data16
pusha
test
insl
pop
lret
adc
push
xor
pop
lahf
mov
inc
inc
xchg
test
or
pop
sti
xorb
inc
icebp
enter
sbb
cwtl
sub
in
sub
mov
lret
and
popa
dec
test
mov
fwait
pushf
inc
mov
psubd
jmp
mov
enter
iret
push
rcll
divb
fcoml
cli
push
jecxz
loopne
cltd
adc
hlt
jne
mov
jae
xchg
inc
push
cmp
xor
mov
xor
pusha
sbb
in
nop
scas
fcmovb
jne
cld
pop
cmpl
sub
pop
subl
cmp
cli
xlat
cld
mov
or
mov
add
cwtl
cmp
insl
rcll
daa
adcl
mov
mov
push
pop
mov
aam
sbb
mov
adc
dec
repnz
cmpsb
std
sbb
cmovae
cmpsb
mov
xor
push
adc
sub
addr16
pop
fidivrs
xlat
cmp
scas
inc
hlt
ret
xor
push
cmp
jp
lds
xlat
sub
sub
sbb
sub
ja
and
inc
repnz
mov
shlb
inc
mov
jg
sbb
pushl
xchg
shlb
fsubr
cmp
mov
sbb
in
ljmp
bound
jmp
fiadds
ljmp
pusha
rorl
ss
jp
stos
push
adc
gs
pop
nop
or
mov
sarb
cs
sbb
inc
popw
add
or
mov
xlat
out
ss
push
lret
pop
mov
ret
sbb
adc
push
jo
or
lods
add
in
stos
imul
sub
xor
jo
out
push
cld
ja
mov
mov
mov
fnstcw
std
push
mov
in
mov
in
pusha
icebp
in
into
aas
and
mov
cmp
push
arpl
adc
mov
out
xchg
andl
popa
hlt
inc
pushf
test
push
daa
rcrb
lret
xchg
loope
imul
cmp
inc
out
jae
and
xlat
push
gs
rorb
nop
lcall
sub
fadd
repz
add
scas
sahf
repnz
mov
fwait
adc
subl
mov
xchg
out
lahf
add
loopne
or
cld
aas
xlat
sti
shr
repz
das
repz
pusha
mov
inc
mov
sbb
sbb
lock
cs
lcall
in
mov
movsb
xchg
mov
pop
add
pop
jp
xor
loop
lds
imul
ret
inc
out
mov
call
inc
xchg
mov
scas
fildl
adc
and
xchg
and
jb
shll
addr16
adc
ss
int3
loopne
pop
inc
leave
in
and
ljmp
test
fcmovbe
dec
mov
mov
sbb
mov
jge
jb
lods
or
inc
stc
pop
pop
mov
repnz
icebp
jae
fnsave
xchg
mov
sbb
add
dec
mov
sbb
mov
inc
test
imul
sti
adc
out
cmp
test
mov
xor
add
fsubrl
mov
jl
dec
scas
adcb
movb
inc
repnz
push
and
or
test
mov
les
loope
outsl
pop
insl
sar
addr16
stc
sub
add
add
adc
inc
sbb
cmp
rcr
adc
popl
cmp
mov
notl
jne
std
into
sahf
add
ds
popf
lahf
add
xorl
xchg
loop,pn
jno,pn
sbb
dec
movsb
pop
mov
adc
sahf
roll
push
pop
loopne
add
and
xor
movsb
test
repz
jbe
adc
cld
inc
sbb
cmp
xor
xor
in
test
mov
fimuls
clc
test
xchg
stos
rcl
sbb
xor
add
test
jo
pushf
jo
pop
ss
rcl
das
lea
insl
lcall
fnstcw
xchg
mov
fstl
roll
and
sahf
maskmovq
testl
lret
enter
adc
or
sbb
cs
enter
je
addr16
test
outsb
addr16
and
dec
mov
mov
sets
adc
or
jo
xchg
faddl
idivl
stos
pusha
fisttpll
sub
lret
sub
test
adc
lret
add
or
xchg
leave
orl
shrb
dec
add
sub
out
and
pop
and
jecxz
jno
push
cmpsl
test
xchg
mov
add
cmp
test
cmp
mov
dec
and
call
outsb
aas
popf
inc
orb
jmp
test
pop
xchg
adc
cmpsb
enter
lret
loopne
cld
xchg
push
mov
stos
std
xor
outsb
sbb
int3
push
xchg
loop
sti
sbb
mov
mulb
out
das
fisttps
ss
lds
inc
sbb
icebp
ret
push
nop
jno
scas
icebp
mov
fsubl
adc
and
dec
push
sbb
xor
jnp
sbb
dec
mov
jl
and
movsb
add
cltd
mov
imul
popf
test
fwait
ds
dec
inc
call
mov
out
bound
xchg
pop
shrl
push
les
addr16
mov
cmp
lds
add
pop
jb
bound
dec
mov
xchg
sbb
jg
xchg
pop
jno
stc
jg
add
andb
shr
cmp
insl
inc
xchg
cmp
fadd
mov
sub
int3
jl
xorb
mov
fcompl
sbb
jbe
lds
jp
in
popa
xor
xlat
aad
fs
sub
das
adc
jbe
jl
push
insl
add
int3
aam
push
fimuls
dec
lret
sub
fdivrs
adc
mov
out
xor
iret
cmc
and
pop
mov
and
inc
sub
in
popf
mov
out
add
aaa
sbb
dec
xor
jmp
cmp
lcall
cwtl
mov
and
stos
or
push
mov
fnstcw
hlt
enter
jl
cltd
mov
orb
adc
jmp
xor
mov
sbb
xlat
add
xlat
sbb
xlat
push
scas
push
fcomps
ret
cmp
stos
test
or
pusha
js
xchg
inc
incl
mov
loope
pop
mov
aaa
repnz
call
mov
xchg
call
call
lods
mov
ss
pop
pusha
movsb
fidivl
mov
mov
push
aad
outsl
xchg
jno
xor
stos
inc
dec
mov
inc
stos
push
imul
lret
bound
sbb
jmp
xor
and
ficompl
and
add
cmp
dec
sahf
lahf
lods
das
mov
jb
shlb
aad
cmpsl
cwtl
adc
xchg
xchg
and
adc
lock
int
adc
daa
add
dec
stc
or
mov
xor
push
movsl
inc
test
std
pop
dec
out
cli
or
into
mov
out
and
jnp
clc
aaa
movsbl
shl
xor
ja
inc
pop
call
js
repz
int3
rclb
jmp
adc
push
aaa
popf
test
cmpsl
mov
jge
mov
out
sbb
jno
insl
aad
dec
popf
nop
into
test
and
shlb
ljmp
loope
add
int
rorb
push
cmp
mov
cmp
rorb
fsubrs
test
push
mov
mov
js
mov
jg
sbb
rcll
cmc
jle
xchg
jno
or
push
xchg
pop
adc
icebp
jae
lock
and
dec
fcoml
cmp
imul
aas
mov
push
mov
adc
cwtl
divb
dec
sbbb
ja
dec
clc
adc
xor
cmp
or
sbb
pop
popa
xor
push
push
push
cmp
stos
cmp
add
or
push
bound
xchg
xchg
pop
push
das
fstl
test
ds
test
push
mov
mov
cmpsl
movq
ret
je
push
sub
out
pop
js
adc
shrl
arpl
cmp
sub
jmp
pop
leave
cmc
test
insl
stos
add
jle
out
pop
xchg
rcrl
add
data16
fstpl
xchg
fistps
cmpsl
lcall
sbb
test
inc
push
ljmp
jb
shlb
mov
std
xor
je
add
push
into
movsl
mov
mov
push
enter
sbb
inc
pushf
testl
mov
fsubr
dec
imul
mov
mov
jp
mov
xchg
imulb
popa
jnp
cmc
loop
outsb
inc
or
js
lods
add
pop
fscale
pushf
jnp
daa
outsl
inc
pop
fwait
mov
add
cmp
das
mov
aaa
loop
scas
inc
mov
sub
xor
lods
push
cld
inc
sahf
add
loopne
and
mov
int3
vpaddsw
insb
mov
mov
mov
dec
ret
jmp
jne
pushf
rcrl
sbb
adc
jnp
push
fisubrl
popa
add
pop
dec
test
pusha
mov
repnz
out
mov
cwtl
ret
std
test
cmp
lock
ret
mov
push
inc
inc
mov
roll
add
je
pop
push
sub
push
test
add
gs
pop
xor
inc
psrlq
cmp
mov
sub
aad
loop
sub
insb
mov
data16
mov
lods
xor
pushf
shrb
adc
popa
movsl
negb
lret
adc
jmp
or
fdivr
test
decl
mov
out
xor
fnstenv
sbb
mov
clc
xor
stc
cmp
fwait
mov
mov
rolb
jp
sub
cmpb
pusha
pop
lcall
rolb
rorl
hlt
imul
mov
mov
dec
and
push
cmp
sbb
pop
mov
cmpsl
or
movnti
inc
cmc
ljmp
jl
and
aad
xor
jo
pop
stos
push
or
dec
insl
shll
jge
adc
cs
cmp
xchg
iret
xchg
mov
inc
lock
sarb
adc
mov
cmp
addb
fisttpll
loopne
pop
insl
cwtl
pop
nop
mov
cld
aam
arpl
jbe
insl
lods
lea
push
shl
fsubr
movsl
fdivp
aam
ret
loope
cs
mov
pop
dec
inc
xor
cltd
xchg
mov
inc
mov
add
sub
loop
into
mov
mov
mov
outsl
pop
cli
jnp
leave
aad
icebp
adcl
out
and
cld
add
dec
call
mov
pusha
ja
es
inc
clc
iret
mov
je
insb
aad
pop
add
lret
jecxz
sarb
pusha
stos
and
pop
pop
stos
mov
jnp
push
xchg
std
cli
test
test
mov
jb
add
sbbb
xlat
lods
sub
or
cmp
sbb
scas
inc
scas
push
mov
mov
les
and
add
out
lret
imul
adc
push
mov
fistl
inc
imul
jmp
ja
hlt
pop
add
test
cltd
pop
jne
and
xchg
sbb
lea
jbe
sub
sbb
adc
dec
mov
pop
push
and
arpl
js
aad
arpl
mov
adc
addr16
pop
dec
push
or
js
mov
dec
mov
cmp
fcomip
mov
pop
lods
iret
pop
and
inc
repz
push
mov
mov
jno
push
iret
insl
pop
int3
inc
ds
mov
dec
sub
jp
mov
push
enter
dec
jnp
scas
es
xchg
call
jge
shlb
xchg
ja
scas
call
push
dec
out
mov
int3
jb
jle
mov
gs
push
cmp
movsl
fs
push
out
cmp
mov
hlt
xchg
outsb
push
push
insl
aas
adc
nop
xlat
cmp
cmp
and
push
mov
mov
jne
inc
pop
xchg
dec
lcall
and
test
xor
push
sbbb
mov
jno
data16
ss
mov
test
cmp
pop
pop
js
cmp
jo
push
adc
mov
stos
sub
pop
adc
push
push
mov
fldcw
cmpsl
outsl
jg
test
lahf
mov
pop
shlb
lea
pop
es
mov
jno
push
mov
clc
mov
jecxz
daa
mov
ja
mov
rcl
push
jbe
enter
push
fistl
insl
stos
cs
test
mov
adc
cmc
js
inc
or
jno
inc
xor
std
inc
popf
insb
lahf
pop
call
pop
cmp
rcrb
add
jae
or
push
lods
xchg
push
sbb
pop
or
cmp
andl
lret
imul
out
outsl
out
adc
xor
xlat
mov
enter
pusha
push
inc
dec
fsubs
push
sub
stc
in
mov
cmp
cmp
jle
and
aaa
std
xchg
xor
xchg
jne
cmc
aam
outsb
push
push
test
in
pop
hlt
mov
std
xchg
mov
imull
int3
cmp
out
sbb
dec
add
xchg
mov
adc
add
ffreep
or
mov
sub
in
xchg
mov
mov
test
pop
es
arpl
xchg
sbb
jle
jns
mov
mov
and
ljmp
xor
adc
pop
insl
inc
sbbb
push
jg
inc
test
inc
popf
fstps
mov
sbb
fld
test
mov
adc
pop
rcl
sbb
cmp
outsb
xor
pop
je
inc
out
mov
sbb
std
dec
insb
cmp
orb
ljmp
ss
jmp
and
push
sti
mov
jecxz
mov
mov
add
das
cmp
cmp
push
imul
xchg
lods
fsub
xor
xchg
iret
mov
or
jmp
cld
arpl
dec
cmp
in
pop
adc
push
loope
hlt
cmp
js
inc
xlat
shll
test
sti
cltd
out
enter
jno
fisubl
and
std
and
sub
jmp
lods
ret
aad
bnd
cmc
pop
std
push
jle
pop
sub
jmp
out
push
hlt
mov
ret
jmp
and
mov
xor
and
pusha
gs
mov
mov
push
adc
push
iret
adc
repz
pop
cmpsb
int3
dec
sbb
dec
outsb
adc
xlat
xchg
jns
cli
popf
out
scas
cmc
pop
cmp
iret
xchg
xlat
imul
ret
sbb
jae
xchg
xor
mov
mov
jo
movsb
xor
jmp
daa
jp
rcl
mov
lds
mov
ret
mov
mov
cmpl
or
xor
call
cltd
dec
push
cmpsl
stc
hlt
inc
pop
and
mov
fistpl
inc
jp
xor
scas
js
xorb
loope
fs
dec
jo
shlb
imul
inc
xchg
leave
js
pop
fs
sbb
mov
jbe
xor
scas
loopne
insl
and
je
cmp
enter
rolb
cld
test
push
ljmp
mov
push
aam
cs
shl
mov
or
mov
ret
scas
in
sarl
pop
mov
repz
cmpsb
pop
ja
jnp
scas
adc
fsubl
push
jmp
fs
cltd
aaa
inc
xchg
dec
pop
xchg
fiadds
mov
jg
pop
sub
movsl
and
mov
push
shrl
inc
sub
inc
ret
mov
add
fldt
push
cmp
add
int
push
fadds
fisttpl
push
aam
push
push
popw
es
stos
sbb
sarl
out
cltd
inc
jmp
sub
add
int
push
lcall
int
aas
inc
jmp
and
mov
les
insl
cmp
dec
inc
push
add
xor
sub
in
cmp
out
dec
hlt
andl
bnd
stc
adc
xchg
push
jge
mov
lcall
rolb
dec
out
daa
and
leave
in
imul
imulb
ret
sub
lahf
add
sub
mov
push
sub
xor
xor
insb
shrl
mov
bsf
mov
dec
mov
fsubr
sbb
add
shrb
insb
xchg
cmp
sbb
imul
xor
push
lods
cs
ficoms
lods
js
add
popa
xor
push
mov
arpl
int
inc
and
xor
mov
mov
ss
or
inc
push
pop
sti
rcrb
ss
out
mov
fidivs
or
mov
call
cmpsb
or
ret
out
je
rcll
mov
xchg
pop
aas
sahf
push
jno
xchg
leave
xor
pop
popf
lea
mov
out
add
mov
cmpb
jns
inc
xchg
jae
mov
xchg
add
outsl
cli
loopne
outsb
cmp
outsl
add
fdivrs
pop
repz
lcall
cwtl
mov
sub
mov
or
fists
negl
push
je
fs
clc
hlt
dec
mov
pop
sub
pop
sbb
lds
ret
xchg
mov
jmp
aaa
inc
out
sahf
dec
insb
scas
mov
inc
jne
push
adc
push
jge
hlt
fidivrs
test
pop
sbb
in
mov
xchg
loopne
mov
pop
lcall
inc
iret
stc
push
test
stos
xchg
jbe
sub
test
and
inc
jns
add
stos
call
scas
test
sub
test
in
cs
icebp
addr16
fdivrl
push
in
or
vpandn
call
clc
lock
inc
in
popaw
shlb
bound
loope
dec
mov
daa
fldenv
int3
je
mov
ret
xor
fldt
dec
jg
pop
dec
addr16
inc
sub
call
fcomp
dec
pmullw
js
jmp
adcl
outsb
and
cmpsb
adc
xchg
pop
outsb
sub
and
popa
sbb
pop
dec
push
xorb
fidivrs
pop
and
fidivs
xchg
jmp
insl
jmp
mov
int3
cmpsl
sub
fld
push
push
push
xchg
xorb
shr
adc
xchg
mov
mov
insl
ret
std
xor
out
or
push
adc
std
xchg
fmul
xlat
push
pop
jmp
inc
adc
cmp
imul
cmp
inc
stos
repz
xchg
leave
outsl
ja
xchg
mov
enter
xor
mov
xchg
inc
push
fimull
and
rcl
adc
out
mov
cmp
stos
adc
and
jmp
fdivrl
mov
or
pop
es
lods
faddl
dec
or
push
js
popa
or
mov
cwtl
dec
es
push
scas
ss
out
cltd
clc
pop
add
rcll
fisttpl
repz
or
sbbl
dec
movsl
jmp
sbb
mov
sbb
pusha
out
sbb
inc
xchg
and
or
push
cmp
push
call
mov
cmc
int3
mov
outsb
pop
out
mov
xchg
call
push
repz
or
outsl
mov
out
or
dec
pop
sar
sub
dec
nop
hlt
pop
arpl
test
addl
push
cmpsl
out
sbb
cmpsw
or
jp
adc
xchg
std
sbb
cmp
mov
in
sbb
jge
arpl
adc
mov
jne
inc
loopne
lods
out
sub
pop
inc
xchg
ss
notl
dec
dec
and
mov
xchg
outsl
push
mov
or
dec
push
lret
pop
pop
dec
pop
lea
addb
sub
adc
sahf
cmp
lahf
insl
cmpsb
sahf
lahf
rorb
dec
pop
pop
imul
into
fdivrs
or
das
in
mov
mov
fsts
test
sub
adc
cmpsl
jecxz
fwait
add
pop
jae
pusha
inc
stos
arpl
xor
pop
lds
mov
icebp
xchg
stc
std
aad
xor
jo
dec
xchg
push
xor
mov
arpl
push
lods
push
inc
shl
iret
push
or
out
rcll
andl
outsb
sbb
cwtl
pop
adc
or
adc
xlat
cmp
addr16
aaa
adc
mov
sti
mov
js
lret
cwtl
movntq
xrelease
sahf
jb,pn
mov
and
mov
jb
add
out
xlat
es
aaa
cmpsl
pop
outsb
ss
pop
sbb
ja
out
rcrl
inc
test
sbb
dec
dec
push
pop
pop
dec
jns
cld
add
or
pusha
xlat
fs
push
out
cwtl
lcall
pop
sbb
das
mov
mov
mov
popf
push
frstor
push
mov
or
inc
cmp
push
adc
insb
cld
icebp
popa
adc
mov
ja
adc
out
enter
sbb
push
xor
daa
mov
cld
ss
pop
in
pushf
push
pop
loope
or
adc
fildl
movsl
or
insl
pusha
sti
sub
cltd
sub
clc
scas
jmp
xchg
sbb
jecxz
add
loopne
push
sub
or
mov
push
imul
ret
mov
out
mov
sahf
adc
lds
fwait
in
dec
aad
dec
out
addr16
push
pusha
cltd
jne
aaa
lret
insl
pop
lods
int3
xchg
jns
loopne
add
pop
adc
movsl
and
or
icebp
cmp
aas
fsubrp
sub
pop
jno
adc
in
mov
outsl
rep
into
lret
inc
sub
call
test
ds
push
jb
sub
or
pop
stos
and
in
fcomip
lahf
adc
adc
mov
cwtl
pusha
cmp
mov
push
mulb
or
aas
mov
or
shrl
fistpl
aad
in
jp
add
aad
sub
push
inc
insb
aas
arpl
gs
add
mov
in
inc
push
add
in
cs
sub
mov
jno
mov
xor
out
inc
movsl
xchg
jg
iret
call
jg
imul
into
imul
inc
sbb
scas
adc
inc
arpl
scas
push
negl
lahf
lods
cli
adcb
shlb
ret
sbb
adc
adc
inc
incb
les
sbb
fsubrs
push
cli
xchg
dec
test
inc
movsl
push
add
movb
push
mov
mov
mov
call
scas
mov
jge
ficoms
fadds
cltd
sbb
fs
fdiv
mov
push
into
js
xlat
fidivs
addr16
out
inc
or
lock
pop
cmpsb
jno
fadd
test
push
xchg
ret
js
jg
repnz
out
sub
inc
or
inc
fwait
je
or
xor
scas
pop
dec
adc
int
cmc
js
jmp
and
loop
dec
jbe
cmp
jnp
je
arpl
inc
lret
fcmovbe
push
jns
or
std
popf
insl
add
ljmp
ljmp
addr16
iret
scas
stos
push
sub
fcmove
jmp
popa
xchg
fdivl
jae
dec
aam
add
jae
xchg
pop
or
sbb
xor
iret
jne
mov
push
push
lahf
imul
or
pop
lods
pop
inc
add
pop
push
icebp
mov
nop
cli
mov
das
imull
pop
and
in
mov
roll
test
call
loope
pop
xchg
add
movsl
cmp
jnp
and
test
data16
les
mov
sub
push
pop
and
lret
sub
jb
adc
imul
push
and
arpl
out
jb
outsl
dec
sub
test
push
scas
and
mov
push
xor
xor
xor
xchg
jbe
add
in
fbld
add
int3
mov
fstpt
sub
adc
mov
and
aas
push
ljmp
inc
jecxz
in
mov
add
outsb
cmp
out
jmp
jl
add
pop
in
and
add
test
movsl
add
insl
mov
jle
and
jmp
lea
inc
xchg
cwtl
mov
jp
out
sbb
shl
std
xchg
jmp
jmp
orb
jmp
in
pushl
cmp
test
scas
dec
stc
and
inc
add
nop
cmp
test
and
inc
lret
jo
cmp
repnz
mov
xor
cmp
pop
sbb
ds
and
aaa
stos
mov
sahf
gs
test
add
jp
pop
xchg
iret
fs
sbb
ljmp
pop
cmpb
xchg
xchg
test
stc
adc
jle
stos
or
ss
icebp
int
stos
add
cmc
sbb
jge
pusha
cmp
loope
shlb
push
loop
push
outsl
mov
mov
rorl
or
hlt
sub
fcom
aaa
popf
adc
call
inc
mov
addr16
sbb
lahf
adc
cmpsb
scas
fs
mov
or
cld
push
xchg
xor
cmp
xchg
scas
rclb
xor
cld
jb
adc
mov
mov
dec
call
outsl
loopne
ds
jge
xor
adc
jae
xchg
or
mov
in
pop
outsl
movsb
xchg
mov
push
movsb
dec
ret
pop
dec
test
popa
setl
mov
sub
das
mov
jnp
mov
icebp
xchg
mov
cmpsl
xor
lods
push
cmp
push
out
pop
stos
push
pop
and
imul
pusha
mov
ljmp
cmc
inc
je
or
cmpsl
fdivr
pop
inc
pop
mov
xchg
mov
or
add
pop
jne
cmp
cs
inc
push
es
adcb
mov
mov
and
lcall
push
test
mov
mov
mov
add
pop
js
cmp
xor
mov
in
sub
in
orb
cmpsb
fs
fcoms
add
fisubrl
popa
or
push
xchg
pop
ret
or
mov
fldl
cli
test
movsl
push
dec
pop
pop
aad
jns
mov
or
xchg
and
mov
scas
push
inc
test
or
mov
dec
or
enter
jecxz
xchg
mov
outsl
and
xchg
jns
mov
in
lret
aaa
push
popw
pop
jae
inc
hlt
pop
lods
push
bound
add
cmp
sbb
das
shr
aam
out
pop
push
std
xchg
in
push
sub
mov
clc
fidivs
fwait
in
repz
enter
test
xchg
cld
sti
add
push
mov
xchg
sbb
shrb
push
sub
les
popa
adc
loope
and
mov
call
xor
push
mov
sbb
adc
decb
inc
adc
and
aaa
cmp
sub
and
in
cmp
arpl
nop
pop
xor
xchg
xor
adc
sti
orb
jmp
xchg
mov
testl
sbb
cld
out
ficomps
movsb
fdivp
add
inc
sbb
dec
popa
rol
ja
sub
push
jmp
jb
mov
cmpsb
or
xchg
gs
sbb
lods
push
push
addr16
xor
outsb
clc
xor
dec
and
push
pop
xchg
inc
orl
sbb
or
xchg
scas
std
loope
lahf
push
xor
add
scas
cmc
mov
call
inc
clc
scas
rcl
in
fidivl
jno
sbb
int3
add
xor
add
pop
xchg
dec
pusha
dec
or
js
and
pop
xor
in
scas
int3
aas
mov
adc
inc
test
mov
out
stos
sbb
cmp
mov
cmp
addr16
dec
aad
jge
cmp
movsl
fwait
cmp
rcl
jge
fnsave
dec
dec
popa
xor
je
add
test
mov
sbb
xchg
imul
adc
rcr
xchg
pop
sub
ljmp
stc
js
fisubl
mov
cmp
mov
out
push
cmp
fucomi
jl
and
mov
adc
push
cmp
outsl
jbe
shll
push
ret
mov
xchg
pusha
jns
hlt
or
je
je
rclb
xor
cmp
mov
cld
cwtl
or
jmp
outsl
ja
push
mov
outsb
inc
jb
cmpsl
dec
and
movsl
ja
jg
flds
sub
aas
xor
pop
call
shr
mov
shr
hlt
add
je
cli
fidivrl
ja
ds
fnsave
shl
mov
ds
inc
js
jmp
cs
jge
adc
pop
adc
cmc
pop
add
nop
rcll
or
test
cmpsb
and
jno
outsl
sbb
fcomps
inc
sub
and
pop
es
gs
pop
jge
nop
mov
cmp
in
push
and
inc
sbb
iret
imul
data16
mov
xor
inc
cld
inc
mov
in
xlat
push
inc
push
fwait
add
jmp
movsl
lods
cld
into
pop
mov
jo
mov
rorl
neg
mov
arpl
test
out
loop
int3
sub
xor
inc
lret
cld
ret
push
loope
adc
mov
jae
mov
xchg
cmpb
dec
outsb
rcl
sub
xchg
add
jno
cmp
pop
lea
adc
adc
jae
movsl
fidivl
mov
sub
add
das
mov
sub
cli
mov
lahf
jp
out
inc
inc
mov
in
or
xor
inc
jnp
pop
frstor
jbe
or
jle
aam
loop
xor
ja
test
rcrb
in
ja
lcall
gs
sub
divb
nop
inc
aam
cmc
inc
loope
xchg
dec
jnp
stos
cwtl
pop
ret
lcall
xor
cmp
mov
or
cld
jge
js
pushf
cwtl
hlt
mov
xchg
add
rorl
cmp
into
fsubr
jmp
loopne
cmc
pusha
rcrl
push
jb
pop
and
inc
das
cs
scas
es
cli
dec
enter
outsb
dec
fwait
push
icebp
lret
push
jle
push
out
cmp
jmp
push
leave
test
call
std
mov
push
ss
jb
aaa
mov
in
fcomi
mov
cmp
sbb
enter
pusha
pop
scas
and
popa
mov
xor
fucomp
sbb
roll
push
jno
lds
jnp
pop
jl
and
repnz
bound
push
pop
jo
rcrl
push
les
jnp
cmp
scas
add
fdivl
mov
cltd
push
mov
mov
or
addr16
nop
inc
insl
mov
clc
std
addb
xor
fmuls
inc
cmpsl
lods
sarb
movb
call
fwait
out
sbb
mov
movl
cld
xor
pop
cmpsb
cwtl
jnp
pop
jmp
or
lods
mov
push
mov
icebp
inc
cli
adc
sbbl
aam
fst
outsl
push
add
jle
mov
cmc
push
jbe
and
dec
out
in
mov
outsl
rorb
fsubl
outsb
scas
sub
sbb
push
fdivs
mov
sarl
xchg
add
adc
in
sbb
insb
push
mov
push
sbb
pop
xchg
pop
es
mov
pushf
pop
das
jnp
inc
lods
and
ror
adc
aaa
xor
mov
cltd
dec
sub
push
jmp
loope
lret
xor
pop
inc
fsubrl
dec
push
test
inc
ficoms
fstps
mov
rcrl
ja
loope
mov
mov
movsb
push
test
ljmp
add
call
sar
in
into
jecxz
cmp
xchg
mov
stos
dec
cld
sahf
jne
fucomp
mov
xlat
xchg
fs
inc
sub
push
test
jb
xor
aas
adc
mov
daa
stc
xlat
jp
push
cld
imul
iret
out
sub
xchg
cmp
jecxz
lods
popf
add
mov
int3
sub
lret
dec
mov
outsb
je
out
pop
fs
mov
fbstp
xor
dec
push
mov
pop
lock
pop
loope
out
mov
ret
mov
jnp
stos
iret
inc
test
push
outsb
lods
xor
rorb
dec
cli
dec
xchg
orw
popf
pop
cld
mov
hlt
outsl
mov
pmaddwd
xor
dec
xlat
cmp
and
lods
or
repz
jno
loope
jne
push
fwait
push
mov
pop
js
jae
mov
nop
jae
adc
mov
jne
aad
mov
dec
sbb
fidivrl
fldl2t
lret
daa
pop
sub
rorl
and
rcll
sbb
je
mov
inc
mov
cmpsl
cmc
cwtl
ret
sub
shlb
hlt
sub
sahf
mov
jle
imul
sahf
mov
mov
fsubrl
movsb
jnp
rcl
push
mov
or
cmc
lret
aad
mov
mov
repnz
xchg
jns
int3
adc
dec
mov
or
mov
rorb
xchg
in
pop
xchg
call
cmp
add
mov
ret
jmp
dec
mov
add
mov
daa
push
adc
hlt
add
test
mov
jne
pop
or
inc
mov
sub
sahf
js
bound
aad
sbb
push
fs
ss
in
mov
in
shrb
and
xor
inc
ljmp
cli
ljmp
dec
push
pop
js
sbb
push
orl
out
jbe
or
ficompl
dec
xor
adc
mov
in
jb
sub
jne
arpl
mov
or
int3
stos
sbb
imul
int3
mov
xchg
pop
sub
xchg
loope
add
jecxz
mov
ss
mov
jmp
cmp
out
imul
xor
es
xor
pop
enter
jecxz
movsb
or
into
lahf
mov
dec
rol
cs
mov
ret
xchg
jae
int3
shlb
mov
fnstsw
lods
cmp
sub
cmp
mov
lret
add
cld
inc
adc
dec
mov
pop
adc
xchg
cltd
adc
and
mov
adc
jb
jge
leave
mov
ret
and
dec
std
jne
add
jl
jae
sbb
scas
roll
into
adc
lret
mov
mov
push
and
scas
push
xor
gs
repz
cwtl
bound
mov
das
iret
repnz
xchg
jmp
movsl
push
xchg
fs
enter
aas
or
int3
and
pop
adcb
adc
push
push
sbb
inc
subl
dec
in
addr16
and
fiadds
jo
mov
cld
or
outsl
sub
dec
xor
adc
xchg
cs
mov
shrl
or
cmp
outsl
cs
jl
mov
inc
nop
scas
iret
adcb
pop
xchg
out
lea
adc
xor
or
sbb
sbb
and
popa
mov
aad
dec
jecxz
outsb
loopne
cmp
lea
fs
cmpsb
add
repz
or
add
pop
jns
or
loopne
jg
pop
sub
sub
movsl
jnp
sbb
push
jne
push
pop
mov
leave
loope
dec
add
mov
xchg
adc
push
fisubs
pop
cmp
pop
cli
ror
inc
int3
xor
repz
or
rcl
or
rcrl
sbb
adc
fsubs
sub
scas
test
inc
insb
nop
bound
enter
cmp
and
push
mov
jae
in
lret
sbb
outsl
or
arpl
mov
jae
cld
cmp
insb
negb
xchg
mov
push
mov
and
gs
and
mov
andl
dec
in
out
adc
addl
inc
pop
inc
stos
jns
push
movsb
dec
rcrl
loope
push
fwait
pop
fisubrs
or
repz
fdivl
fisubrl
mov
aam
lret
xchg
adc
mov
jns
mov
mov
and
mov
adc
push
sub
xor
out
sbb
push
call
mov
test
inc
fimull
dec
dec
dec
jno
and
cli
sub
jmp
fldl
inc
sbb
fmuls
repnz
mov
cs
sub
inc
gs
mov
xchg
xchg
ret
or
and
add
sub
pop
jb
out
out
and
xor
loope
fiadds
dec
sub
jecxz
jns
in
jmp
adc
addr16
call
fistpl
xor
sub
enter
push
push
pop
mov
mov
push
mov
iret
add
adc
pop
or
lds
ss
bound
lahf
data16
dec
aad
mov
sub
stc
dec
dec
fucom
outsl
jb
mov
ror
dec
fwait
and
and
loopne,pt
mov
stc
bound
cmp
mov
xlat
mov
je
dec
enter
cld
iret
xlat
cltd
xor
pop
or
sbb
andl
push
je
in
pushf
lds
pop
je
cmpl
push
xor
and
and
mov
jo
xor
cmc
adc
pop
aas
enter
int3
jmp
sarb
mov
andb
fwait
pop
flds
sti
pop
out
es
sti
jns
xchg
jmp
gs
pop
cmp
xchg
les
pop
cmp
dec
jp
js
add
pop
movsb
leave
js
push
ds
in
pop
jns
icebp
filds
sub
jge
push
pusha
xchg
jne
and
es
es
mov
xchg
xchg
addr16
add
push
nop
xor
les
add
push
repnz
fwait
mov
push
scas
cs
mov
xor
add
cmp
push
pushl
lcall
jnp
xor
xor
hlt
dec
loop
and
lret
enter
xor
xchg
rclb
sbb
add
data16
imul
std
bound
movb
mov
je
notl
or
les
cli
cmp
inc
mov
xchg
cmp
mov
dec
sub
test
adc
add
add
inc
pop
in
push
inc
sti
hlt
or
loop
cmp
xchg
imul
test
xchg
jge
pop
ds
xchg
cmp
inc
and
cmp
es
aas
pushf
jmp
ss
cmp
dec
cmp
fstpt
mov
jmp
out
rolb
aaa
sub
ror
mov
test
adc
jg
push
clc
das
sbb
insl
dec
mov
jns
fistps
roll
sub
cmp
sbb
push
scas
mov
cmp
adc
dec
movsb
push
std
out
das
js
cmp
add
add
sbb
fsts
xchg
je
cmp
negb
cmovae
pop
adc
and
aaa
stos
mov
inc
xor
cmpl
cmpsb
jae
and
and
add
or
xor
cld
cmp
xchg
dec
pop
shrb
aas
dec
cmp
inc
out
sub
fcmovbe
mov
cmp
sub
imul
imul
mov
ret
in
xor
push
adcb
xchg
mov
fcmovu
mov
repnz
mov
sti
insb
sub
mov
adc
lods
jbe
pop
pop
xchg
arpl
imul
notb
or
jns
cmp
mov
imul
mov
dec
es
fildll
outsl
dec
les
mov
inc
mov
add
add
sbb
gs
decl
sub
fadds
sbb
popa
mov
test
mov
adc
cmpsl
test
sti
sub
lgs
test
sbb
les
fistl
test
test
push
dec
stc
pop
and
shlb
mov
repz
cmpsb
in
mov
subb
imul
lea
loop
cwtl
push
test
jb
je
pop
sbb
out
jae
cmp
mov
das
pop
icebp
es
clc
imul
lods
pusha
pop
pusha
rclb
pop
mov
mov
pop
inc
mov
outsb
and
mov
or
cmc
xor
fs
cmp
adc
sarb
imul
int
dec
rorb
in
pop
mov
out
cmovge
xchg
stc
scas
das
mov
cmp
and
lds
fisubs
xchg
mov
cmpl
imull
sub
mov
cwtl
clc
fisttpll
enter
repnz
call
and
icebp
lret
xchg
mov
ret
ljmp
fst
leave
call
test
ret
es
repz
mov
xchg
popf
jns
push
ds
out
sbbl
mov
xchg
mov
sub
push
pop
stos
stc
testb
mov
lcall
push
jae
dec
push
les
dec
idivl
jo
into
mov
imul
sbb
push
jmp
adc
test
clc
rcrb
scas
in
pop
ja
subb
cli
mov
shll
aam
pop
into
loopne
jne
sti
xchg
ret
jmp
mov
jae
xchg
add
mov
mov
mov
jmp
cs
lea
xor
pop
sbb
sbb
sahf
mov
mov
or
push
push
notl
lcall
loope
ja
ja
or
push
jbe
dec
inc
dec
push
or
lock
lret
sub
iret
fists
hlt
mov
data16
hlt
cmp
adc
add
es
scas
repnz
mov
vmwrite
dec
xor
jp
in
sbb
mov
test
lods
adc
or
and
mov
std
rcrb
pusha
mov
sbb
fcmove
sub
fs
mov
push
xor
xchg
adc
sub
movsl
push
xchg
add
insb
add
adc
push
test
xor
push
loope
cmp
sub
add
imul
inc
popf
mov
aaa
adc
ljmp
inc
pop
pop
call
xor
daa
scas
push
aad
and
clc
add
mov
outsb
pop
imul
cli
mov
sahf
mov
push
test
out
into
movsb
mov
enter
aam
push
lods
int
sbb
popf
int
dec
jg
cmc
jp
sbb
scas
xor
dec
jo
or
jne
fwait
test
arpl
jg
jecxz
sarb
in
out
mov
or
movsl
ds
xlat
or
outsb
ljmp
jmp
xchg
ja
jo
call
rclb
xchg
jae
push
stos
test
jecxz,pt
insb
clc
int
popa
out
or
jp
sbb
adc
pop
ja
sahf
or
cli
jnp
in
scas
lret
loopne
test
enter
dec
hlt
jnp
mov
pusha
jbe
lret
jb
je
add
cmp
mov
hlt
push
xchg
je
pop
fcmovnu
pushf
lds
mov
or
cld
loope
nop
add
std
push
pop
popf
xchg
pop
adc
lea
mov
mov
add
das
outsb
lds
jo
ror
iret
dec
jecxz
dec
fisttps
lcall
cmp
lret
imul
cmpsb
cs
dec
push
aam
push
push
rcl
lock
mov
ds
lock
add
push
gs
hlt
cmp
pop
popa
orl
lods
xorb
and
fbld
jns
les
nop
ret
mov
mov
mov
es
idivb
push
loope
cmpsb
dec
xlat
cmp
fs
fwait
adc
dec
or
sub
jo
cmp
xchg
movsb
lods
stos
or
stos
or
add
pushf
sbbb
mov
sti
dec
cltd
sub
mov
out
arpl
push
xchg
pop
aam
lcall
aas
jb
bound
lcall
lcall
dec
cwtl
lods
orb
push
push
fmul
sub
push
jg
testl
ljmp
stos
and
or
mov
mov
xor
dec
sub
lods
cs
pop
mov
cmpsl
sbb
inc
dec
imul
or
shlb
leave
cmpsl
xorl
into
cmp
adc
movsl
mov
daa
sbb
xchg
lods
and
mov
push
add
dec
xchg
pop
mov
and
cmovno
jge
cmp
or
pop
mov
pop
push
push
xor
sub
cmpsl
or
mov
lea
int3
aam
sub
push
lods
xchg
mov
jbe
adc
pop
lahf
push
int3
dec
scas
insl
jmp
imul
pop
jl
or
lret
pop
arpl
shlb
jae
push
mov
loopne
mov
or
push
push
mov
clc
fbld
adc
in
add
sti
mov
mov
cmp
out
cmp
cmp
mov
aaa
adc
jo
mulb
shrb
mov
movsl
sbb
ret
stos
aaa
imulb
xor
ret
or
popa
mov
cltd
leave
orb
lahf
xor
jp
std
mov
lret
cmp
xor
fldl2e
mov
and
rcrl
inc
outsl
les
mov
in
mov
mov
push
mov
loopne
cwtl
xchg
js
aad
adc
inc
sub
xchg
adc
cmp
imul
lret
cwtl
inc
xchg
xor
cmp
aam
rolb
nop
inc
fsubs
mov
les
xlat
and
les
jbe
sub
push
jle
mov
cli
hlt
fwait
lods
test
cmp
arpl
and
push
xor
fs
vmovq
mov
fcomps
or
inc
mov
xchg
jecxz
sub
inc
ficompl
pop
dec
adc
aad
leave
add
adc
mov
mov
loope
imul
fistpl
data16
push
scas
sbb
cld
xchg
pop
les
push
sub
pop
xchg
add
mov
loopne
mov
pop
popf
cmp
leave
cmp
addb
xorl
nop
leave
xor
cli
xchg
bound
adc
stc
ss
rol
xchg
dec
mov
fmuls
jecxz
sbb
jp
lds
xchg
scas
orb
pop
enter
sub
call
mov
push
enter
lds
das
andb
test
mov
cmpsl
sbb
out
push
adc
rcll
jp
inc
pushf
push
cli
lret
fwait
push
and
inc
sbb
add
inc
test
push
and
cmpsb
or
fs
mov
dec
aas
stos
and
xor
test
data16
stos
xchg
xchg
add
inc
or
mov
jno
push
or
xchg
outsb
push
lret
movsb
or
scas
lods
pop
pusha
xlat
shlb
out
das
sub
mov
hlt
cmp
adc
jbe
nop
xlat
imull
xor
test
mov
xlat
mov
sti
mov
cs
dec
xor
neg
sbb
pop
in
bound
insb
aas
int
mov
aaa
jnp,pt
mov
dec
notb
test
pop
loop
push
and
pop
mov
or
loopne
jle
fcompl
jne
movsb
imul
ret
je
xlat
mov
add
cmp
sbb
and
mov
ret
das
xor
add
jl
insb
jae
test
mov
cltd
and
daa
scas
lcall
sahf
test
test
rcl
mov
cld
ss
push
sub
test
out
aam
mov
shl
mov
sub
and
fxch
xchg
loopne
movsb
jle
add
scas
jbe
testl
mov
lret
jge
push
mov
and
in
hlt
lret
fdivrl
cs
lahf
fwait
lods
inc
sub
sbb
test
add
out
cmpb
cmp
inc
jp
insl
add
push
jnp
jns
xchg
cli
cmp
cwtl
sti
cld
ret
aad
adc
aas
mov
stos
fsubrs
imul
push
jb
ret
cmp
jmp
pop
fs
arpl
pop
sbbb
dec
mov
jo
fidivl
notb
push
lds
jmp
or
and
adc
adc
jb
pop
sub
popf
lea
xlat
jno
or
inc
mov
ja
or
mov
fs
push
sbb
filds
pop
ja
fsubl
jg
mov
cltd
or
inc
jge
imul
xchg
push
scas
bnd
sbb
test
addb
jae
inc
and
inc
je
jns
adc
andb
aaa
jmp
fisubrl
pusha
sub
mov
leave
mov
sub
out
js
js
add
out
pop
mov
and
jbe
and
rclb
pop
movsl
pop
flds
test
inc
adc
inc
push
out
popa
fdivs
in
ret
pop
sti
insb
movsb
xchg
mov
cltd
outsl
sub
pop
and
or
sti
outsl
fdivrl
mov
sbb
pop
dec
dec
xchg
and
push
xor
xchg
lds
mov
mov
call
add
enter
pop
jl
lahf
and
scas
std
jle
push
cld
push
lea
popa
adc
leave
loopne
das
xchg
push
pushf
lods
pop
je
mov
enter
inc
and
and
sbb
je
xchg
pop
loop
fwait
lret
xchg
mov
imul
xor
and
movsl
or
fwait
out
xchg
jo
inc
out
aad
cmp
cmp
loop
int
or
jp
mov
das
aas
mov
jae
xchg
sbb
jmp
fnstenv
jmp
push
shl
je
iret
mov
cwtl
adc
jnp
jae
or
dec
test
out
push
cwtl
mov
ret
push
stc
pop
stos
xchg
pushf
fdivrs
pop
mov
mov
shlb
cmc
fadd
add
loop
loopne
scas
sbbb
xchg
push
arpl
mov
push
sbb
mov
lret
cmpsl
test
xor
js
shr
test
cmp
int
or
mov
pop
clc
push
mov
sub
jbe
cmp
nop
cli
mov
jo
loope
int
and
and
int3
and
aad
push
add
movsb
je
rorl
pushf
ja
add
aas
js
fsubl
pop
mov
jne
repnz
inc
aaa
addr16
mov
add
inc
bound
addr16
nop
pop
popf
stos
nop
stc
loopne
dec
add
repz
cmp
mov
jae
adc
out
mov
pop
add
xchg
popa
rcll
pop
mov
mov
or
test
mov
xchg
repz
push
mov
pminub
pop
mov
insl
std
movb
jno
adc
push
test
jg
add
cltd
sub
das
mov
daa
fbstp
testb
jns
pop
test
adc
jae
das
out
popa
xor
mov
stc
lret
sbb
jecxz
adc
es
xlat
sub
mov
arpl
aaa
sbb
je
push
in
data16
cmpsl
imul
or
loope
rorl
scas
lcall
es
push
cltd
jbe
pop
ss
sbb
mov
ds
outsl
pop
add
sbb
and
push
lret
sub
repnz
sbb
mov
out
xchg
ljmp
cmp
mov
jmp
mov
mov
mov
shrl
outsb
mov
mov
jge
fimull
rclb
or
mov
pop
aas
add
mov
cli
cmp
pusha
pop
lahf
adc
mov
mov
ljmp
fldt
jno
aas
imull
insb
sbb
std
fldenv
mov
jmp
loopne
call
mov
out
xchg
sub
lods
xchg
add
inc
or
insb
lret
adc
mov
push
dec
jae
pusha
ret
bound
push
sbbb
add
add
push
test
cli
shlb
lods
aad
pop
push
ud1
hlt
out
push
les
and
fbstp
aad
bound
adc
pushf
push
mov
test
test
je
outsl
push
mov
adc
lods
lret
test
adc
cmpsb
inc
and
mov
mov
aaa
mov
into
ds
push
and
pop
insb
jnp
pop
adc
and
mov
in
fstpt
adc
sbb
push
nop
push
mov
dec
xor
lcall
mov
fnsave
xlat
lods
rep
jbe
mov
xchg
pusha
insb
cmp
repz
cmp
push
xlat
movsl
fs
pop
int
inc
inc
add
sub
cmp
mov
sbb
push
dec
rclb
stos
or
clc
test
pop
mov
bound
sarl
push
dec
lock
test
gs
xor
or
xchg
jge
ficoms
xor
cmp
dec
les
or
mov
xchg
or
xchg
sbb
inc
jo
lahf
aad
sbb
and
in
add
js
add
testb
lcall
xchg
leave
popa
mov
adc
stos
bound
mov
dec
aam
jns
lret
cmc
add
jo
sub
inc
jle
cmpb
mov
mov
add
xlat
stc
xchg
jns
push
dec
inc
leave
das
imul
xchg
dec
jb
and
xchg
repz
inc
les
pop
out
mov
pop
jno
inc
mov
and
adc
fwait
push
lahf
xor
pop
mov
rcl
pop
mov
aaa
inc
ss
jne
scas
mov
xchg
into
mov
in
sub
or
and
sbb
xor
jns
push
les
clc
push
xlat
cmp
push
mov
xor
xor
fldt
nop
ss
mov
sub
movsl
xor
pop
adc
sub
mov
push
rolb
mov
scas
mov
add
test
hlt
xor
jo
sbb
out
mov
lea
jb,pn
cwtl
inc
movb
adc
cmp
xchg
leave
add
stos
mov
lods
fwait
push
bound
xor
add
sub
mov
test
ljmp
mov
push
enter
fsts
fmulp
and
insl
aaa
and
mov
xchg
fs
mov
dec
adc
std
call
inc
stc
out
push
sahf
inc
addps
mov
adc
sbbb
adcl
lcall
es
cmp
sub
dec
dec
jne
or
in
scas
cmp
pop
ja
rcll
fs
bound
lcall
test
mov
mov
mov
add
inc
xchg
loop
cs
aam
xchg
xor
dec
sbb
inc
xor
js
push
pop
pop
add
fisttps
add
sub
sub
test
or
test
jns
fs
pop
icebp
inc
imul
xchg
lea
mov
mov
mov
sar
lret
fbstp
pop
jg
xor
int3
adc
pop
mov
jae
sub
jb
fs
sti
mov
scas
imul
mov
out
mov
dec
notl
scas
loopne
dec
imul
cmp
andb
push
out
stos
or
or
fnsave
sahf
adc
inc
test
jmp
daa
call
jl
xchg
out
mov
pop
roll
or
outsl
ljmp
sub
jl
lahf
mov
imul
cmc
mov
testl
sbb
mov
stos
cwtl
or
btsl
aaa
add
or
jae
icebp
push
iret
loope
into
aad
sub
sbb
pop
jns
mov
ret
pop
xchg
mov
push
scas
mov
mov
sbb
inc
out
inc
stc
fwait
shlb
out
stos
daa
or
mov
lahf
lea
outsl
out
icebp
andl
mov
inc
sub
mov
inc
lock
js
in
mov
xor
and
cwtl
hlt
out
test
add
sub
imul
push
cmpsl
sub
nop
add
push
cltd
fisubl
jg
dec
js
movsb
repz
mov
ret
mov
pop
jecxz
xchg
inc
add
call
sub
inc
adc
jns
mov
xor
out
sti
in
aad
psllq
aaa
iret
loope
cli
pop
mov
frstor
cmp
adc
or
stos
push
repz
xchg
cmpsb
ja
inc
loope
and
imul
jmp
jle
adc
call
lds
mov
xchg
cli
fisubl
inc
mov
mov
out
out
iret
mov
push
mov
xchg
xor
mov
add
mov
enter
add
cmp
dec
mov
js
outsl
push
pop
xchg
sbb
sbb
cmp
je
lcall
xor
sti
inc
pop
xchg
ds
xor
mov
xchg
rolb
imul
std
mov
push
add
dec
pop
lods
xorl
xor
adc
stos
movsb
dec
scas
inc
adc
addl
fucom
push
js
xor
ret
pop
jbe
arpl
jmp
int3
xchg
jecxz
out
pop
cld
cmpsl
bound
or
mov
sub
xchg
xchg
aas
cmp
filds
mov
push
mov
aaa
in
push
in
je
imul
insb
rcrl
inc
sahf
scas
sbb
inc
stc
fsubp
sbb
shrb
enter
stc
rcr
out
dec
xor
mov
insb
push
cmpb
in
imul
mov
add
mov
push
gs
and
cmp
cli
cmp
int3
lea
pop
mov
in
xor
pop
xor
push
xchg
jecxz
lods
pop
push
push
mov
or
fsubrs
into
jg
inc
aas
pop
sub
cmp
sar
mov
pop
mov
jecxz
out
lcall
mov
ficoml
jmp
sti
pusha
fiaddl
das
not
jge
sub
cld
mov
pop
aam
scas
sarb
push
cmp
in
fsts
test
inc
xchg
xchg
mov
fcompl
cmp
cli
enter
sahf
mov
xor
clc
cmp
data16
das
fs
pop
aas
xor
mov
pop
pop
cli
jae
imul
int
push
stos
dec
insb
push
add
gs
mov
xchg
pop
and
rorl
dec
lcall
add
jl
xchg
cmpsb
jge
ficomps
dec
xor
dec
mov
jbe
aad
pop
std
popf
mov
jmp
push
stos
push
adc
je
and
test
mulb
sarb
aas
add
adc
mov
idivl
lcall
or
mov
mov
jecxz
in
cwtl
bound
out
push
sahf
mov
pop
push
or
fcompl
inc
clc
dec
push
add
mov
sbb
rclb
and
sar
push
ret
jns
cmpb
stos
insb
sarb
mov
divb
sbb
dec
or
sbb
jnp
push
aas
fs
mov
dec
push
aam
xorl
in
push
jmp
cmc
mov
pop
f2xm1
cmp
mov
and
ret
div
and
jnp
pop
data16
lds
fildll
mov
jmp
daa
call
jo
mov
inc
dec
mov
popf
xchg
cmpsl
je
movsl
mov
les
jb
pop
into
jnp
repz
mov
cmc
sbb
mov
es
mulb
sbb
sbb
xchg
inc
out
std
mov
sub
aaa
lret
xor
lahf
or
push
insl
pop
outsb
movsb
mov
jp
sbb
sbb
sub
push
dec
in
ss
dec
addr16
pop
sbb
jne
xchg
sbb
pop
lret
mov
pop
mov
sti
and
mov
out
pop
mov
dec
test
push
jb
aaa
test
addr16
jne
fmull
movsl
daa
xchg
adc
inc
int3
in
dec
mov
fiadds
vpsubusb
loope
cmpsb
cmpsb
std
dec
jae
mov
dec
add
sbb
addr16
iret
mov
popa
insb
dec
adc
jge
cwtl
icebp
cmp
mov
or
std
stos
and
jo
imul
push
mov
pop
sub
arpl
mov
data16
and
cld
push
jmp
pop
pop
rol
stos
jne
and
mov
sub
js
insl
add
inc
aam
sbb
xor
sbb
cmp
in
jmp
lods
out
or
mov
cmpb
lds
in
mov
pop
jecxz
bound
or
lds
ljmp
jmp
mov
push
mov
in
sub
and
mov
jmp
or
fmuls
loop
sub
stc
sub
mov
and
icebp
fisubrs
mov
sti
push
xor
outsl
fdivrl
scas
push
sbb
out
in
push
pushf
and
and
push
sahf
dec
jp
fdivrl
jle
fsts
add
repz
lea
mov
mov
dec
punpckhwd
enter
test
sub
cs
push
inc
aad
xor
pop
add
scas
ret
pop
addl
sub
add
mov
cmc
bnd
mov
bound
add
jbe
mov
fisubs
mov
inc
cltd
loop
add
out
cmpsl
add
adc
jg
and
aaa
subl
cld
into
sbb
push
enter
add
arpl
sarb
cmp
or
sub
xchg
xchg
jbe
ret
inc
jbe
fwait
imul
sub
mov
or
in
fisubl
lods
mov
mov
sti
pop
jns
addr16
adc
arpl
ret
push
inc
in
gs
mov
jecxz
and
sbb
sti
in
and
push
pop
popf
cwtl
insl
popa
je
and
hlt
and
jbe
leave
sbbb
adc
inc
popa
gs
fucom
mov
or
jmp
pop
jbe
xor
mov
add
jmp
xchg
arpl
mov
out
dec
call
pop
idiv
dec
pop
test
lcall
xchg
pop
xor
push
push
lret
mov
xchg
mov
sub
in
push
rorl
inc
ret
rol
ss
mov
and
sbb
add
adc
jno
sub
inc
push
repz
push
hlt
jne
pop
inc
data16
popf
test
adc
push
stos
and
jno
lret
in
mov
mov
stc
das
push
inc
jnp
pop
adc
adc
push
pop
and
mov
lret
sub
shl
in
cmp
mov
xor
dec
add
sbb
xchg
push
push
mov
pushf
inc
pop
aam
ret
insl
mov
pusha
sub
mov
ss
inc
jae
cmp
in
cmp
out
ja
or
pop
dec
mov
std
ds
movsb
push
xchg
sub
jecxz
xor
dec
add
cli
xor
xchg
mov
add
cmc
cmc
xchg
mov
movsb
loopne
mov
sbb
push
ja
rcll
xor
push
arpl
dec
popf
mov
dec
sahf
jne
mov
lret
lock
xor
sbb
sub
out
xchg
fiaddl
xor
mov
outsb
js
popf
xor
push
adc
inc
ljmp
cmpsb
push
pop
and
nop
jnp
lds
mov
and
and
mov
jbe
bound
es
fidivrs
daa
iret
jne
test
insl
jb
and
lret
or
xchg
mov
cmpsl
int
rolb
cmp
lahf
jo
and
in
jmp
xor
sbb
cmpsb
dec
inc
xchg
xor
add
inc
mov
jmp
xor
or
xchg
add
add
sbb
push
pop
lods
xor
mov
cmp
into
xchg
repnz
xor
xor
fldl
mov
dec
mov
fsubrl
fstpl
repnz
mov
fstpl
gs
sahf
mov
test
jmp
pop
movsb
sbb
mov
mov
sbb
or
sbb
pop
lock
xor
sahf
sti
pusha
add
sbb
push
out
and
in
xchg
in
movsb
xor
shll
or
sahf
pop
loope
mov
mov
mov
or
pop
out
mov
int3
subl
inc
xlat
stos
mov
sub
in
negb
adc
push
ljmp
mov
jmp
xor
imul
icebp
mov
int3
dec
jmp
out
dec
push
frstor
dec
jl
ds
in
add
pop
test
aam
mov
fbld
sub
imul
out
outsl
insl
fisubrs
sub
jge
push
cmp
leave
push
clc
add
add
stos
mov
mov
call
dec
or
in
pop
loopne
mov
xchg
jo
in
arpl
in
jne
cli
pop
and
jae
icebp
xchg
pop
loop
pop
cli
scas
fst
dec
cmp
int
int
mov
shl
mov
push
das
dec
pop
mov
adc
ficoml
cli
add
lods
xchg
sti
mov
xor
inc
inc
out
pop
or
mov
jmp
popa
cmp
popa
wrmsr
sub
pop
les
push
fs
ret
lahf
nop
aas
sbb
jp
mov
movl
filds
ja
fwait
testl
pop
aaa
fwait
rol
popf
ret
mov
xlat
push
xor
insb
inc
add
push
adc
xor
idivl
add
bound
repnz
jecxz
scas
shll
dec
dec
cmpsl
push
push
aad
lret
adc
js
xchg
xchg
pop
push
pop
add
jns
out
test
sub
sti
xchg
or
mov
movsl
push
ficoms
shlb
xchg
stos
and
hlt
js
sbb
jmp
fisubs
sub
je
je
enter
data16
dec
xlat
sbb
incl
ret
adc
add
lret
lods
add
xchg
jb
pop
xor
mov
leave
mov
and
cmpl
xor
add
push
cmp
in
call
cmp
std
inc
inc
push
dec
daa
pop
gs
cmpsb
dec
repz
jno
add
sub
adc
lock
mov
pop
push
pop
mov
jg
incb
data16
pop
shlb
inc
sbb
das
fidivrl
jge
and
or
rclb
adc
daa
notb
mov
dec
into
dec
out
mov
es
mov
insl
push
dec
lret
push
inc
mov
or
orb
sub
jl
insb
and
stc
jecxz
in
stos
imul
push
out
cmp
out
push
cmp
xchg
out
jbe
leave
cmp
adcb
hlt
push
dec
ret
mov
out
dec
and
cmp
push
adc
stc
and
sub
loopne
ss
xlat
and
ret
mov
dec
out
fstpt
mov
icebp
shlb
cmp
cwtl
orl
add
mov
scas
outsb
cmp
fwait
das
ret
jno
fwait
and
push
repnz
dec
push
push
pop
scas
push
int
dec
idivb
jae
in
mov
repz
jmp
mov
mov
out
pusha
mov
cld
push
sbb
jbe
cltd
add
jno
dec
pop
movsl
loop
lcall
xor
hlt
xchg
jbe
push
sub
aaa
std
lock
dec
pop
test
hlt
rcr
js
mov
xchg
fptan
imulb
repz
ror
cmpb
dec
test
out
sbb
loope
addr16
std
lcall
pop
or
js
cmp
push
push
stos
hlt
aaa
mov
xchg
push
out
fdivrl
adc
mov
mov
adc
dec
and
xor
stc
pop
xlat
out
pop
push
ja
push
adc
jl
lcall
loop
mov
sub
dec
push
pop
incb
movsb
pop
outsb
pop
popf
andl
inc
cmp
xchg
cmpsl
mov
data16
cmp
les
push
pop
push
shl
add
lret
popa
mov
pop
jo
or
lock
mov
mov
aas
xor
fwait
and
in
push
mov
and
xchg
pushf
cmp
ss
rcrb
dec
pop
push
cwtl
sbbl
fidivs
aam
cmp
sub
jne
jl
dec
in
mov
add
pop
push
push
test
xchg
leave
mov
xchg
cld
add
add
ss
pop
push
das
fsts
push
mov
mov
mov
xchg
in
fnstcw
mov
or
imul
cld
cmp
cmpsb
sub
sbb
push
xchg
lret
stos
addl
mov
fs
cmp
mov
inc
das
fdivr
lds
sub
js
out
fidivl
mov
std
std
imul
and
test
lods
pushf
push
xor
lock
in
std
xlat
pop
push
add
xlat
stos
push
imul
mov
arpl
jl
add
into
xchg
or
mov
xchg
mov
adc
xchg
icebp
and
push
data16
mov
fdiv
addl
or
mov
fs
fsubs
aam
and
mov
xlat
gs
xchg
and
cltd
mov
add
xchg
in
sahf
adc
fcoml
inc
or
fcompl
hlt
aad
jmp
aam
out
cmp
and
mov
in
negb
movsb
xchg
inc
dec
out
cmp
daa
mov
and
test
scas
aaa
push
outsl
outsl
sti
leave
lds
push
jle
push
or
mov
and
lahf
mov
push
mov
out
in
movsl
dec
movsb
jl
xchg
lods
and
adc
sbb
cmp
cmpsl
enter
add
ret
jmp
aas
or
adc
outsw
ds
xchg
dec
insb
stos
sub
or
sbb
aam
fiaddl
adc
xchg
fcom
dec
mov
xchg
pop
jle
and
cmc
push
inc
pop
add
rol
andl
popa
mov
mov
lret
test
sti
ficoml
add
pop
stos
add
setle
movsl
cmp
stos
mov
pop
pop
imul
insl
stos
adc
push
cmp
cmp
push
pusha
jl
cmp
loope
popa
pop
clc
sbb
mov
inc
inc
inc
jl
int3
dec
sub
lret
pop
cli
aam
push
mov
cs
jge
mov
pop
dec
lea
pop
mov
das
inc
xchg
dec
ljmp
test
inc
aad
and
daa
movsb
std
mov
mov
out
sub
xchg
and
mov
mov
bound
mov
rorb
int3
mov
push
aas
loope
pop
imul
inc
add
stos
mov
cmpsl
mov
mov
pop
pop
cmp
int3
popf
shl
add
or
sub
out
xor
add
add
cmp
pop
mov
in
fdivrs
push
dec
mov
das
mov
inc
push
imul
jp
loope
aaa
pop
pop
stos
pop
ljmp
xor
sahf
sub
lahf
in
xor
mov
jmp
fsubl
mov
cmp
dec
add
sub
mov
pushf
xor
in
adc
shl
mov
lret
jbe
andb
fisubs
aad
out
pop
fstpt
fwait
test
sub
push
jne
xchg
mov
loope
mov
cli
lahf
xchg
imul
dec
mov
movsb
sub
dec
push
punpckhdq
int
popa
mov
cmp
sbb
call
into
mov
daa
dec
push
inc
es
dec
xchg
cmp
lcall
sub
cmp
xchg
cli
popa
in
mov
push
xchg
rcll
stc
push
pop
xor
push
fs
sbb
fidivs
flds
mov
cli
cmp
mov
adc
dec
out
inc
pop
in
push
out
imul
or
cltd
jl
ds
sbb
or
arpl
mov
in
and
mov
xchg
mov
jno
push
fists
xor
mov
sub
xchg
cwtl
and
lret
lea
scas
fwait
je
xchg
test
nop
fcoml
in
push
pushf
push
mov
lods
jge
outsb
inc
in
mov
dec
test
sub
imul
xorb
pop
pushf
sbb
je
push
ds
int
cmovl
pop
lret
mov
sub
sbb
pop
dec
fcomi
aam
push
fisubrs
and
shlb
out
fbld
imul
roll
insb
scas
cmpsl
mov
mov
jno
stos
outsl
cmp
fs
sub
sbb
dec
mov
mov
roll
data16
repz
xor
xchg
adc
repnz
nop
insl
mov
xor
adc
and
mov
xor
xchg
cmp
data16
push
dec
mov
dec
outsl
pop
subl
lret
mov
mov
loop
pop
xor
mov
or
jge
lock
mov
or
lea
lret
cmp
ret
add
push
xchg
and
enter
in
rcr
jb
fs
push
in
icebp
insb
mov
dec
ljmp
stos
sbb
cmpsl
std
stos
xor
leave
pop
sbb
lods
popa
out
and
push
subb
jg
aam
adc
shr
push
push
and
cmp
ljmp
mov
jp
movswl
mov
scas
dec
pop
fadd
leave
adc
sbb
idivl
and
cmpsb
movsb
stc
or
sub
out
nop
js
dec
inc
loope
scas
xchg
mov
sbb
cmovne
fwait
and
fcoml
shll
in
xchg
pop
pushf
jp
or
fstl
sub
notl
add
movsl
out
sub
sub
and
pop
jmp
add
iret
mov
outsl
xchg
pop
std
cmp
dec
loopne
pop
ret
ljmp
ret
loop
int3
mov
mov
bound
gs
ss
inc
adc
mov
subl
xor
bound
stos
xor
imul
mov
imul
fwait
inc
pop
xchg
test
sub
push
mov
movsl
jmp
pop
push
dec
lahf
pushf
loop
pop
sbb
fwait
jbe
std
call
out
out
arpl
push
cmpsl
in
ljmp
mov
adc
xor
adc
push
push
in
pop
push
ja
into
clc
movsl
pop
inc
ss
jl
cmp
stc
rcr
jae
or
lock
cmp
lods
lods
adc
lcall
sbb
inc
mov
push
cmp
inc
in
sub
and
sub
pusha
adc
shll
scas
push
mov
mov
pop
push
jl
leave
pop
lret
push
xor
dec
cmpsb
sahf
and
push
pop
lcall
add
jmp
sub
xor
sbb
mov
test
sbb
in
push
jns
test
add
mov
mov
mov
negb
pop
int
pop
jl
adc
mov
adc
push
dec
lea
jns
push
xor
shrl
cli
push
sbb
fs
aam
bound
add
je
adc
gs
imul
dec
outsb
dec
mulb
and
mov
sbb
or
hlt
mov
mov
lock
adc
push
mov
mov
adc
cwtl
cld
jle
es
dec
cli
ds
jmp
outsl
test
mov
lcall
aad
push
stos
ret
xchg
xchg
fmuls
stos
lahf
decb
jae
mov
enter
out
rcl
push
stc
ret
dec
cmpl
xchg
loope
jne
xchg
jmp
ja
sub
pextrw
add
enter
jmp
outsb
push
pushf
jmp
inc
mov
adc
mov
sbb
xchg
dec
and
add
push
push
xchg
rorl
dec
xchg
es
dec
js
fcomp
cltd
jg
adc
lods
call
or
cmp
out
jno
fwait
dec
jb
cltd
add
push
fwait
mov
xor
pop
in
shlb
lcall
testb
dec
loope
or
jl,pt
pop
js
or
jbe
adc
xchg
adc
dec
cltd
cli
xchg
push
pop
push
out
pop
addr16
cltd
xchg
inc
mov
adc
or
mov
insb
mov
test
popa
mov
lea
lds
das
push
imul
ds
repnz
sub
fildll
inc
add
stos
xor
cmp
outsb
fcmovnb
mov
mov
mov
push
ss
jne
xchg
pop
je
xchg
inc
xchg
adc
aas
enter
xchg
outsb
mov
gs
xchg
xchg
or
xor
loop
out
fsincos
add
mov
repz
cmp
sti
add
lds
mov
cmp
aad
inc
mov
mov
enter
and
fadds
fisubl
cmp
stos
cltd
and
fistps
movsl
test
push
cmp
popf
mov
loopne
jg
in
sbb
rcl
cmp
cld
jp
popf
popf
cwtl
daa
mov
imul
cmpsb
iret
cmpsb
loopne
shlb
std
test
call
inc
inc
add
mov
jecxz
dec
add
mov
mov
sub
add
ds
out
addr16
inc
imul
mov
mov
add
and
pop
cmp
inc
cmp
cmp
imul
push
arpl
sub
jg
int
cmpsb
shlb
stc
jl
in
cld
test
push
fstps
push
mov
insb
mov
pop
sub
xor
pop
test
cmp
add
pop
pop
dec
pusha
clc
adc
roll
cs
bound
xor
mov
cmp
test
cmp
add
pop
mov
mov
mov
sub
xor
lret
push
dec
movsl
cmp
scas
jp
addl
push
loope
mov
pop
push
int3
rclb
and
jge,pt
in
push
inc
int
loopne
mov
jns
add
pop
sahf
and
cltd
orb
push
sti
cmc
sbb
hlt
sub
xchg
inc
add
sbbl
mov
and
adc
js
mov
addr16
fmull
cmc
in
or
mov
bnd
fiadds
lods
cmc
jecxz
call
ds
xchg
dec
inc
je
rorl
in
repz
adc
cmp
es
mov
mov
mov
mov
cli
repnz
lret
shr
call
jmp
xchg
in
stc
outsb
xchg
pop
ja
imul
nop
adc
lahf
cld
mov
insb
pop
das
xor
shll
jne
pop
outsb
or
inc
sbb
sbb
stos
xchg
lahf
sbb
jmp
test
push
aaa
enter
imul
dec
sub
fimuls
aaa
adc
mov
or
fdivs
in
push
out
cmp
fcmovnb
in
nop
and
nop
jnp
insl
jmp
rcrl
sub
lds
loop
mov
testb
xchg
and
pop
outsl
xchg
pop
sahf
xor
arpl
testl
notl
arpl
aad
int3
xor
loopne
lcall
loop
and
push
adc
ret
aad
loopne
xchg
fsubrs
movsb
jg
jmp
out
addr16
sti
jne
mov
adc
cmp
in
xchg
shrb
xchg
ss
cli
jge
mov
pop
out
jo
cmpsl
out
stos
pop
push
or
pop
shlb
add
xor
mov
out
inc
cmpsl
sbb
dec
or
mov
mov
adc
jg
push
lds
xchg
ljmp
ds
icebp
lods
lds
pop
pop
xchg
ljmp
inc
ja
xchg
lret
dec
and
inc
push
dec
push
aas
xchg
jb
fs
jbe
xor
or
outsb
int
ret
cmc
jae
pop
insl
inc
fs
pop
popf
fsubrl
xchg
in
sub
clc
jns
pop
cltd
jg
cltd
iret
inc
sbb
hlt
in
mov
dec
pop
push
inc
scas
sub
mov
nop
pop
mov
xor
sub
into
sbb
sti
push
pop
fnstcw
pushl
add
in
shrl
pop
sbb
and
pop
xchg
mov
enter
repnz
mov
je
jmp
adc
jae
inc
lea
xchg
pop
je
mov
hlt
push
add
ret
xor
repz
movsb
mov
test
stos
push
pop
adc
mov
or
fwait
insb
in
cld
push
push
and
push
lret
add
sub
mov
dec
rolb
roll
lds
scas
dec
or
out
outsl
prefetch
fidivl
les
lods
push
loop
sub
out
popa
inc
imul
in
nop
or
int
and
lea
lea
xchg
mov
in
test
mov
jecxz
cmp
repnz
nop
outsb
xor
sbb
in
add
or
mov
fsubl
into
jbe
xchg
data16
add
xchg
aaa
xchg
or
inc
or
ljmp
pushf
int
inc
sub
mov
pop
inc
mov
jb
add
stos
mov
lret
popl
pop
mov
das
ficoms
xlat
mov
out
lods
popa
rorl
sbb
mov
std
lock
lods
clc
cmp
js
jno
push
sub
adc
adc
lods
shrb
fdivrs
adcl
stos
mov
push
add
pop
push
adc
xchg
fsubrl
push
add
mov
je
lea
jp
or
orb
jb
lret
dec
fnstenv
repz
lds
daa
jo
rcll
or
iret
fsubrs
jne
repnz
sbb
mov
xlat
cmp
mov
lods
inc
jmp
rclb
insl
mov
mov
mov
add
jge
mov
dec
mov
or
inc
dec
nop
cs
inc
jnp
xor
out
jmp
mov
daa
bound
std
cmc
mov
add
xchg
cmpsb
dec
jge
jb
mov
inc
dec
test
jge
push
ret
jae
loopw
imul
sar
jae
imul
mov
fdivrs
insb
xchg
xchg
push
call
push
scas
in
out
jge
in
and
sbbb
or
stos
ja
gs
pand
lcall
aas
scas
lock
aaa
xor
ret
loope
lock
add
pop
test
sub
pop
pop
in
xor
or
mov
imul
pop
xchg
pop
jns
int3
dec
xlat
or
mov
mov
lcall
dec
jne
adc
xchg
incb
mov
inc
jb
sbbb
leave
mov
sbb
into
push
sahf
push
bound
push
mov
aaa
cmovo
dec
push
test
leave
shll
shrb
cmp
or
lret
cltd
inc
gs
insl
push
xlat
mov
fisttpll
adc
lods
push
jb
insl
inc
cmp
xor
pushf
xchg
popa
or
adc
data16
mov
lret
push
imul
les
cmpb
sbb
sar
roll
or
rolb
pop
test
mov
sahf
dec
xchg
xor
iret
and
movsb
dec
and
jae
mov
mov
lahf
or
xor
ret
push
and
fisubrs
jbe
cmp
icebp
pop
adc
ja
int
adc
pop
and
sub
mov
push
sub
test
mov
sahf
adc
push
inc
push
test
test
shrb
es
pushf
jecxz
notb
cwtl
pop
bound
sub
cmp
ret
jge
jbe
into
sub
nop
icebp
adc
lds
sub
test
mov
pop
rorl
aaa
mov
push
leave
mov
rorl
cmp
mov
sbb
int
inc
nop
fldt
dec
jl
ljmp
mov
ficoml
push
mov
int
rcr
cmp
xchg
cli
outsb
sub
sbbb
pop
rorl
pop
inc
sbb
xor
pusha
lea
dec
pusha
lock
jns
repz
and
shl
sbbl
pop
xor
xchg
int3
add
imul
dec
adc
cmp
andl
cltd
push
frstor
neg
push
in
mov
pop
add
xchg
outsl
mov
clc
sbb
repz
sub
and
mov
dec
aad
jno
or
jae
and
add
xor
out
in
cmp
aad
sub
mov
jp
fsubrl
hlt
sub
std
lock
pop
pop
mulb
mov
fildl
pusha
dec
jecxz
jns
lea
sub
hlt
js
xchg
mov
sbb
push
mov
mov
cmp
out
out
sbb
push
out
xor
mov
fidivl
or
push
pusha
lahf
int
sub
adc
loope
cmp
out
in
inc
sbb
adc
mov
push
mov
out
mov
lods
and
xlat
xchg
repnz
jns
adc
cli
cmpsl
or
das
jo
mov
pop
jo
xor
addr16
in
jmp
xchg
pusha
push
or
mov
test
fistps
stos
fists
inc
stos
xlat
jno
add
xor
es
pop
inc
rclb
sahf
pop
scas
aaa
push
or
push
clc
sarl
jno
jb
dec
jbe
repnz
movsl
clc
stos
les
lods
mov
shlb
xor
jno
xchg
jge
mov
and
clc
pop
jmp
stos
rol
cmp
popa
push
lret
ljmp
push
jbe
mov
ds
sub
inc
repz
loop
inc
jae
jge
sbbb
in
jge
inc
and
insl
push
or
lcall
and
push
or
ljmp
test
push
add
pop
add
icebp
dec
push
and
xor
sbb
in
or
pushf
pop
ss
pop
xlat
mov
jbe
fdiv
jmp
out
test
out
les
mov
mov
dec
test
push
adc
or
in
decb
xlat
lods
xorl
mov
lods
movsb
or
cmp
test
pop
or
call
loope
or
xor
adc
sbb
shlb
loopne
pop
loope
add
bound
mov
rcll
dec
xchg
and
das
add
into
shll
adc
mov
test
stos
fld
mov
or
and
mov
mov
jmp
in
out
dec
fistpll
cmpl
cmp
les
fstl
rolb
mov
dec
test
fwait
stc
add
inc
inc
clc
inc
push
xor
mov
or
mov
negl
shll
or
inc
insl
sti
sbbl
dec
sti
in
push
les
div
jle
inc
and
stc
sub
repz
pop
pop
in
add
arpl
and
repz
imul
jecxz
xor
xor
cmp
pop
repnz
in
jns
repz
cmp
ja
jecxz
mov
fwait
add
or
dec
shrl
cmp
lds
sti
and
push
jl
test
xchg
insl
mov
pop
jns
mov
inc
ljmp
dec
and
jno
out
dec
adc
lock
sbb
lods
mov
ljmp
sti
faddp
icebp
sahf
cmp
outsl
and
das
mov
pop
add
dec
inc
sbb
test
mov
std
sbb
sbb
subl
faddp
mov
addr16
outsb
or
inc
jns
scas
mov
dec
push
stos
ja
mov
and
inc
lods
dec
stc
jne
jnp
dec
or
leave
cmpsb
leave
jno
push
pop
xor
fsubrl
mov
es
nop
fcoms
inc
int3
pop
dec
pop
cwtl
pop
push
mov
and
fidivl
aas
iret
clc
cmp
mov
jb
push
jnp
loopne
xor
scas
mov
push
fsubrl
push
push
xchg
sbb
lods
in
mov
jge
aas
out
fs
into
jae
bound
mov
fdivs
mov
jecxz
aaa
imul
xchg
add
add
stos
dec
sub
inc
pop
push
cld
mov
mov
adc
mov
test
jns
sbbl
les
pop
mov
insb
mov
inc
push
push
int
sarb
in
repnz
loopne
repnz
mov
insl
aam
add
xchg
lock
imul
stc
ds
and
lcall
jno
sbb
sbb
imulb
movl
lds
sub
loope
add
mov
xor
aad
shrl
push
mov
jmp
or
inc
popf
lahf
pop
bound
jns
cltd
mov
and
adc
xchg
push
xor
aam
mov
in
mov
or
data16
ret
test
stc
sbb
jnp
and
lods
and
lds
cs
mov
mov
xor
pop
sub
push
mov
dec
pop
and
and
add
insb
and
pop
mov
and
mov
push
lahf
bound
data16
and
pusha
in
inc
sahf
enter
ljmp
lock
pop
popf
pusha
jnp
mov
jp
jne
hlt
xchg
push
add
sub
push
push
enter
mov
pop
sub
adc
mov
mov
mov
aad
push
sarb
jo
pop
lret
adc
pop
push
hlt
add
mov
mov
sub
mov
dec
repz
nopl
mov
cmpsl
pop
repz
mov
repnz
add
into
add
sbb
adcl
add
xor
adcl
cmp
inc
mov
das
nop
mov
jle
xor
inc
cltd
fwait
nop
lods
xchg
ret
test
lret
push
test
ljmp
xchg
add
ljmp
adc
or
mov
xor
push
push
lret
in
jp
fists
adc
enter
lods
sbb
stos
xchg
imul
push
outsb
lods
adc
push
ficoml
std
xchg
int3
in
adc
out
daa
and
shl
xor
add
mov
lock
jns
xchg
jmp
repz
test
pop
dec
jg
in
insl
in
repz
in
mov
add
mov
shll
adc
addr16
and
push
add
jne
sbb
aaa
sahf
fsubrl
mov
sub
jg
and
rcrl
scas
loopne
test
sahf
sbb
lret
lret
jl
ficoml
dec
out
shlb
add
cmp
sbb
in
arpl
inc
inc
daa
jl
scas
mov
mov
and
inc
loopne
jge
xlat
pop
cwtl
jp
dec
xchg
pop
popa
stos
leave
dec
jmp
adc
sahf
adc
sub
push
in
cs
mov
fists
sub
mov
xor
sbb
mov
ljmp
pushaw
jp
in
test
imul
mov
or
cmp
cmp
lcall
sub
dec
and
lods
iret
or
clc
pop
leave
push
movsb
xor
movsl
xor
xchg
clc
pop
mov
in
int3
mov
xchg
aas
push
into
lods
insb
negb
ds
test
ljmp
dec
jmp
std
and
push
leave
stos
xor
adc
sbb
cmp
jnp
out
lcall
in
xchg
jp
mov
and
mov
pop
insl
dec
add
stos
cld
xchg
mov
xor
lods
push
mov
inc
push
gs
stc
or
mov
loopne
lods
rcll
jne
jo,pt
bound
inc
es
jmp
mov
cmpsb
daa
mov
cmpsl
dec
insb
mov
cmp
or
xlat
addb
iret
cwtl
aam
scas
leave
test
mov
imul
push
adc
pop
scas
call
mov
pop
lods
push
pop
cmp
pop
xor
aaa
pop
movsb
pop
dec
fwait
out
fistpll
add
xchg
cwtl
push
inc
mov
push
cwtl
xchg
bound
adc
mov
sub
sub
and
pop
inc
dec
in
add
cwtl
out
aam
and
mov
in
mov
sub
add
sahf
jecxz
mov
mov
enter
sub
cmpl
sbb
les
mov
adc
dec
dec
pop
mov
out
leave
pusha
xchg
ja
insb
mov
pushf
scas
xor
pushf
add
pop
pop
mov
mov
ja
js
push
push
out
cmp
sbb
mov
push
ja
in
call
cmpsb
clc
mov
xor
in
pusha
loop
xchg
xchg
mov
xchg
pop
loopne
push
test
inc
lods
xlat
sub
mov
scas
inc
dec
lret
mov
mov
dec
pushf
xlat
icebp
push
test
inc
add
ss
fs
testb
clc
cmp
adc
sub
cmpsb
pop
adc
or
leave
push
lock
adc
pop
stc
mov
push
fcmovnb
cltd
or
pop
jp
adc
dec
jo
pop
lret
in
sbb
jb
shr
jl
pop
loope
or
or
and
das
aas
sbbb
push
inc
cmpsb
test
stc
jg
or
jl
fstl
mov
outsb
sbb
push
lcall
xchg
cltd
cmp
loop
in
push
lods
push
cmp
insl
inc
dec
push
mov
jle
out
pop
lahf
dec
ljmp
iret
outsl
sub
fwait
lds
lea
cmpsl
les
push
sub
mov
inc
out
lret
mov
pushf
sbbb
dec
ja
mov
pop
pop
rcrl
mov
pop
and
mov
sub
add
call
int
sub
adc
dec
lock
sub
loope
pop
addl
fimuls
ss
sub
jb
repnz
in
push
mov
cltd
mov
cmp
lock
cld
xor
sarl
ljmp
call
cmp
fldpi
andb
rolb
adc
pop
and
xchg
ja
lret
jg
mov
call
ljmp
xor
out
pushf
lea
mov
call
mov
cltd
loope
add
orb
ss
pop
xchg
pushf
mov
cli
pop
cs
cmp
lods
frstor
and
into
xchg
lcall
loopne
jp
push
push
dec
outsl
push
sub
enter
xchg
ja
dec
xchg
xchg
pop
inc
push
negl
stos
inc
adc
xchg
mov
movsb
out
jns
nop
arpl
add
inc
sub
sbb
pop
in
data16
push
cmpl
addl
insl
sbb
lea
mov
xchg
cltd
adc
insb
dec
mov
and
xor
or
push
pop
dec
dec
pop
cmp
notb
mov
push
adc
or
push
xchg
in
push
es
mov
repnz
lcall
icebp
dec
jg
fsubrp
lret
dec
ret
dec
jmp
sub
shll
dec
add
pop
test
shlb
test
mov
movsl
mov
mov
je
pushf
in
ljmp
cmc
cltd
outsl
sub
hlt
sub
movsb
rorl
mov
cmp
rolb
cmp
jg
mov
insb
pop
rolb
ror
fisubs
xor
or
push
lea
mov
pop
sbb
lret
jge
cld
and
rcll
xchg
pusha
lods
rcll
sbb
addr16
mov
bound
jge
repz
loop
dec
sbb
pop
xchg
aas
sbb
lret
push
and
or
cwtl
pop
aas
mov
xor
adc
das
jecxz
or
shrb
add
or
dec
jge
shll
lds
pop
mov
and
fcoml
or
push
push
inc
fisttps
je
lods
push
stos
daa
out
pop
test
cmc
cmc
fs
mov
repz
adc
xchg
cmpsl
repz
clc
outsb
cmpsb
push
rcrl
lds
jno
xchg
arpl
imul
push
dec
nop
fisttpll
sub
xlat
nop
push
jae
cmp
out
sbb
ja
in
push
jp
sub
xchg
and
mov
mov
js
fimuls
xchg
fistpll
test
jge
arpl
icebp
cmc
adc
mov
insb
je
cmp
ljmp
movl
cmp
inc
pusha
adcb
lahf
mov
inc
rorb
push
add
out
cmpl
test
into
lret
lret
ja
sbb
ss
movsb
push
stos
jno
cmc
mov
add
shrl
rclb
and
aas
movsb
jo
shl
pop
enter
repz
je
sahf
sub
push
jo
inc
stc
int
mov
push
push
pop
in
xor
out
mov
leave
fadds
xor
fcompl
jp
int3
les
adc
aam
mov
fisttps
add
into
insl
cmp
lcall
test
fisubl
lods
test
clc
test
and
outsl
mov
xor
into
push
aaa
and
mul
sahf
sub
aaa
daa
test
xor
daa
sub
cmp
mov
push
inc
adc
jmp
lock
and
cltd
in
fcom
stos
in
mov
jecxz
or
push
sbb
cmp
scas
ret
enter
mov
ljmp
add
jle
lea
icebp
loope
nop
xchg
pop
test
pop
mov
lret
fstps
adc
cltd
jmp
arpl
cmc
cmp
int
dec
add
es
dec
loope
xchg
mov
inc
stc
stc
cmc
out
lret
cld
aam
fisttpll
mov
movq
pop
in
jbe
popa
xchg
inc
loopne
xchg
pop
inc
cmp
lahf
sbb
sbb
adc
adc
je
mov
add
lods
out
mov
adc
stos
movsb
lds
pop
sbb
orb
add
les
mov
test
cli
jge
xchg
add
push
leave
fstl
jne
add
dec
mov
iret
pop
or
fmul
int
add
pop
pop
mov
nop
dec
pop
mov
jns
fists
mov
cmp
dec
mov
dec
xchg
std
lods
adc
jne
mov
adc
lret
jns
test
sub
mov
xchg
and
xlat
outsl
xlat
add
xchg
sbb
adc
ss
out
adc
xchg
cs
outsl
xchg
lds
xor
ret
xchg
inc
ret
cli
outsb
pop
mov
cmp
jno
mov
insb
es
shll
scas
jae
mov
pop
shrd
fimull
add
and
add
lret
mov
dec
cs
inc
mov
cli
inc
xor
and
dec
inc
movsl
popa
stos
out
pop
faddp
dec
scas
pop
xor
pop
push
sbb
loopne
lcall
fbstp
mov
clc
jp
notb
fmuls
fnstenv
iret
and
test
mov
imul
pop
ja
pop
mov
add
cmp
mov
sbb
dec
daa
xchg
aad
icebp
adc
xchg
xor
xorb
pop
std
mov
xchg
in
mov
aad
scas
jne
ret
arpl
mov
or
mov
xor
cltd
scas
xor
mov
rolb
test
push
negb
js
loop
ret
lods
xor
dec
pushf
push
inc
dec
mov
ret
pop
stc
xor
popa
push
sub
adc
icebp
sub
mov
out
push
mov
add
jl
stc
cs
popa
aad
or
mov
ljmp
pusha
bnd
inc
pop
mov
les
subb
jecxz
cmpsb
xor
fstpt
aam
test
ja
ljmp
sbb
cmc
fwait
pop
cmp
loop
aas
add
cmpsb
icebp
js
jg
inc
outsb
into
xchg
inc
daa
push
mov
mov
les
out
pushl
je
jl
repnz
jg
push
cmp
adcl
sub
pushf
imul
xchg
mov
fiaddl
sbb
push
push
insl
push
mov
add
inc
pop
cli
mov
movb
and
stos
mov
add
addr16
dec
sub
xchg
mov
cmp
mov
es
gs
xchg
dec
adc
arpl
repnz
xchg
das
or
popa
xor
jge
adc
lahf
leave
out
out
jp
popa
out
push
les
dec
push
mov
clc
mov
add
fisubrs
push
sbb
jo
mov
add
loop
mov
lret
imul
ss
out
sahf
lods
inc
addr16
sub
outsl
and
inc
add
movsb
in
std
or
popf
mov
dec
xchg
aad
jae
sub
rorl
test
movsl
test
fcoms
cmp
push
arpl
addr16
xchg
lea
mov
lea
jmp
mov
and
jmp
jnp
and
push
mov
iret
jmp
cs
push
daa
lds
add
ficoml
xor
xor
repnz
adc
dec
sbb
and
sub
aam
enter
push
or
adc
add
mov
add
pop
dec
sahf
gs
lret
mov
lret
push
sbb
pop
xchg
xchg
dec
lods
jae
cmp
in
addb
lock
pusha
mov
dec
dec
adc
adc
inc
push
lds
mov
dec
fisttpl
xchg
mov
test
lret
jns
les
ja
nop
loope
and
mov
add
xchg
sub
int3
mov
jns
inc
or
lahf
inc
or
mull
adc
push
push
cmp
push
sub
idiv
iret
ret
mov
in
pop
jbe
mov
jns
outsb
js
fsts
rcll
mov
sbb
fwait
stos
je
mov
xchg
cmp
popa
jb
idiv
sbb
pop
inc
ss
dec
daa
stc
push
outsb
aam
js
sbb
repz
imul
fs
test
jp
decl
adc
or
jae
add
xchg
mov
mov
mov
inc
fimuls
xchg
subb
or
jo
lahf
movsb
fldt
jl
mov
or
shrb
pop
popf
sbb
add
pop
in
aad
inc
cld
or
test
inc
movsb
jnp
xor
jae
out
test
andb
xor
push
and
fincstp
cmc
movsl
outsb
stos
and
pusha
in
xor
inc
or
mov
imul
aad
orl
mov
iretw
shrb
push
inc
clc
push
mov
sbb
out
mov
test
dec
clc
adc
imul
push
in
pop
xchg
inc
hlt
call
jle
adc
sub
bsf
jns
addr16
sahf
aad
push
mov
sub
add
shrb
les
pushf
xor
xor
pop
pop
fimuls
xor
mov
cmpsb
mov
xchg
and
stos
push
icebp
inc
push
shll
jl
nop
push
aam
outsb
mov
jl
out
repz
mov
loopne
sbb
mov
sahf
xlat
sarl
mov
fcmove
clc
sarl
cwtl
pop
dec
je
cmc
jo
xor
adc
ds
aad
pop
adcb
mov
rcll
les
mov
and
lods
insb
and
fildll
dec
cmp
std
fisubs
sub
out
sub
cmp
lods
xchg
shr
push
rcrb
push
mov
mov
push
bound
daa
test
sub
daa
pop
adc
addr16
jg
xchg
fildl
sub
aaa
jb
mov
pop
pop
pop
sti
add
out
out
sbb
sub
or
sti
pop
mov
pusha
sub
leave
fwait
out
ret
out
bound
leave
mov
stos
fisubrl
int3
mov
inc
push
movsl
xor
popf
test
mov
fisubrl
nop
xchg
inc
addr16
mov
jmp
cld
cli
je
int
lods
lcall
add
mov
fdiv
stc
movsl
dec
int
aam
inc
dec
pushf
enter
push
aad
in
aam
testb
mov
cmpsb
and
pop
repnz
orl
pop
push
fs
sub
cld
sub
das
loope
sbb
jo
iret
shrl
adc
xchg
stc
jbe
into
or
mov
cmp
out
sti
inc
pop
sub
lods
repnz
fwait
xor
or
out
das
xchg
mov
hlt
call
jbe
push
sub
xor
sub
addr16
lock
inc
or
daa
dec
sbb
jae
mov
pop
mov
pop
ret
inc
mov
sub
cmpsb
mov
cs
cmpsl
inc
aad
iret
test
sahf
adc
nop
inc
inc
arpl
and
jbe
aas
jge
loop
xlat
mov
imul
jb
mov
bound
call
xchg
xor
push
xchg
andb
sbb
out
imul
or
push
jcxz
mov
and
push
lcall
inc
test
ret
xchg
faddl
rcl
push
fisubl
push
jb
testb
mov
pusha
call
pxor
daa
roll
lds
cmp
cmp
scas
psllw
loop
sti
mov
pop
out
pop
lds
jp
aad
pop
cltd
xor
sbb
and
cmp
sbb
mov
in
mov
lods
or
jle
popf
lock
xor
push
sub
add
sahf
pop
cltd
jmp
imul
imul
adc
mov
xlat
mov
xchg
into
mov
scas
cltd
test
mov
inc
ret
dec
mov
aaa
adc
dec
adc
popf
std
ja
push
cmpsl
test
loope
xchg
dec
xor
inc
or
out
lret
leave
xchg
and
cmc
mov
out
push
adc
sub
cli
pusha
mov
dec
pop
pop
add
add
mov
ret
mov
mov
test
shlb
push
sarb
xor
fs
insl
mov
mov
mov
cmp
mov
jge
orl
lods
imul
mov
rcr
mov
shrb
fcmovbe
mov
call
cmpsl
sahf
push
xchg
rcl
stos
inc
pop
mov
push
sub
nop
lea
mov
jmp
jmp
mov
cmpsl
ss
and
adc
cli
adc
xchg
add
nop
push
pop
mov
sub
push
push
mov
and
dec
sbb
outsb
push
mov
mov
fdivl
push
jecxz
mov
mov
add
adc
sbb
cmp
adc
xor
in
pushf
outsl
cmp
xchg
fwait
push
add
jbe
push
in
and
mov
mov
push
push
repz
cmpl
and
subb
push
loop
cltd
cmp
cmp
mov
ret
sbb
and
sbb
clc
push
xor
adc
out
cmpsl
sbb
or
or
jg
pop
push
loop
call
cmp
cwtl
call
push
popf
add
repz
repz
xor
xorl
repz
out
or
or
test
lods
cmpb
adc
js
out
push
push
xor
mov
mov
mov
dec
aam
adc
dec
inc
test
push
jno
inc
adc
sbb
rclb
push
shl
jbe
mov
jns
and
cwtl
dec
pushf
ret
and
add
mov
and
stc
out
lock
pop
loop
les
popa
test
inc
fnstenv
lods
mov
jmp
enter
lea
pxor
add
pop
arpl
mov
pop
xchg
jp
test
je
jbe
lret
mov
push
imul
pushf
xchg
push
xor
and
mov
add
mov
push
loope
mov
push
arpl
jl
out
xchg
push
rclb
sub
pop
xchg
and
jge
dec
adc
mov
lret
repnz
and
test
add
add
mov
std
xchg
insl
popa
xchg
xor
ss
mov
push
pop
subl
jne
xor
xor
push
fmul
jg
cli
pop
cmp
xchg
jbe
jge
insb
fists
fs
add
addl
jge
mov
je
inc
sub
jmp
adc
js
add
push
jmp
rolb
pop
stc
loop
sbb
pop
dec
cmp
inc
fiadds
cmp
cli
test
xor
lods
dec
ds
cmpl
negb
inc
mov
popf
das
or
rorl
sub
imul
sub
adc
push
test
push
mul
jg
jge
cmp
imul
imul
pop
fs
or
sub
hlt
sbb
mov
mov
mov
sub
popf
push
int3
sbb
test
movsb
fnstsw
scas
and
inc
rcrb
or
pushf
test
aaa
pop
mov
aad
movsl
jle
adcl
lds
sub
scas
lock
pop
outsl
jecxz
in
nop
ficomps
int
lcall
and
flds
lock
scas
bound
cwtl
push
jg
cmpb
and
sub
lcall
movsl
add
jnp
insl
ss
cmpsw
inc
push
mov
pop
or
pop
outsl
mov
lret
pop
mov
fidivrs
mov
ja
xor
push
out
clc
inc
sbb
lods
pop
sub
pop
cmp
in
fisubrs
into
xchg
jp
xchg
inc
pop
in
xchg
cwtl
clc
adc
xchg
mov
and
cmpsb
jle
dec
sub
and
inc
imul
dec
mov
pushf
mov
pop
dec
mov
add
mov
lcall
xor
xor
cmp
add
xchg
inc
mov
lock
outsl
and
dec
xor
pop
adc
or
lret
jns
add
popf
cmp
test
lods
mov
add
sub
mov
pushf
out
pop
mov
sub
outsb
or
mov
jp
or
ret
mov
cltd
push
inc
imul
cli
sub
ja
data16
pop
mov
or
dec
insb
pushf
push
mov
int
cld
inc
aam
jl
pusha
push
adc
notb
jmp
pop
out
or
jbe
insb
insb
mov
lret
adc
adcb
std
fwait
inc
fmull
movhps
xchg
sti
daa
sub
cmp
fsubrl
mov
addr16
sbbl
lcall
and
bound
cmp
dec
jg
and
and
call
adc
outsb
mov
in
outsb
fs
inc
jb
mov
pop
pop
rcl
in
mov
imul
dec
scas
dec
cld
jae
jb
fs
out
test
rorl
popf
lcall
and
fildl
popa
fldpi
fwait
and
int
test
fsubrs
inc
stc
or
fisubs
fwait
inc
out
push
les
mov
and
push
lock
aam
sub
test
cmc
jns
sbb
jmp
cmp
mov
lods
lods
fwait
mov
lea
fldt
add
sub
shrl
in
cltd
sbbb
scas
pusha
xor
or
pop
mov
cmp
pop
in
maskmovq
imull
xor
sbb
inc
mov
outsl
enter
or
xor
sbb
dec
movsb
cs
sbb
mov
cmp
pop
scas
repz
nop
push
and
push
mov
aas
xchg
mov
mov
inc
js
push
call
negl
mov
push
cmpsl
jge
jg
ret
lret
ljmp
jl
mov
inc
aam
imul
scas
je
pop
adc
loope
and
lahf
lret
jb
dec
cmp
xor
sar
sbb
sbb
div
push
sbb
push
sbb
or
movsl
sub
test
stos
lahf
cmp
test
outsb
pop
cmc
scas
movsb
push
cli
in
mov
or
pop
mov
adc
xchg
hlt
mov
stc
add
sub
dec
sub
insl
and
lods
addr16
fisubrs
mov
popf
std
jo
pop
aad
cmc
ret
mov
ret
xchg
fldl
or
test
imul
push
shrb
int3
cmc
loope
fs
pop
xchg
mov
sbb
jne
test
rorl
or
sbb
insl
mov
lds
stos
test
imul
je
enter
inc
or
or
popl
aam
loop
imul
adc
mov
or
xchg
xor
stc
mov
retw
jne
lods
xchg
pop
js
jl
lds
mov
stos
lret
movsl
mov
out
cmp
mov
add
scas
jae
enter
fsubs
lea
cmp
pop
push
push
cmp
out
or
andl
or
cli
mov
mov
mov
mov
inc
dec
xchg
out
rcl
out
mov
xlat
rorl
sub
xor
fsubs
int
aaa
das
sub
dec
mov
or
insl
into
repnz
mov
int
jge
frstor
pop
xchg
mov
movl
sbb
sti
sbb
fists
or
shlb
xchg
add
push
sub
nop
ljmp
les
cmpsb
mov
insl
mov
lods
cmp
aam
scas
xchg
and
scas
add
stos
jnp
xor
aaa
das
and
mov
cmp
and
inc
and
inc
ret
nop
enter
jb
lret
adc
test
cmp
xchg
fs
pushf
pop
scas
test
sarb
ja
xchg
and
cmp
lcall
mov
cli
sti
loope
sarb
mov
pop
arpl
out
in
mov
sbb
mov
shlb
js
div
pop
out
in
aam
cli
push
outsb
mov
mov
scas
inc
adc
arpl
adc
or
jno
or
repnz
sbb
and
mov
mov
lds
sub
jnp,pt
mov
add
mov
fwait
pop
ret
and
push
dec
sub
push
mov
js
lock
xor
cmc
jo
dec
dec
lahf
cld
adc
lods
lret
sub
imul
movsb
popf
leave
out
dec
fidivrs
xor
fadds
pop
xchg
jecxz
xlat
sub
fiaddl
xchg
mov
lahf
inc
scas
or
jae
mov
fistpll
add
sarl
dec
iret
pop
aad
jmp
add
push
sti
mov
sbb
inc
sub
call
jg
or
jnp
ret
repnz
dec
mov
call
cld
lock
popf
fsqrt
adc
int3
xor
lds
jbe
test
lcall
mov
xchg
cs
insl
adc
xchg
gs
shl
inc
cmp
dec
pop
mov
jb
mov
adc
lods
dec
je
pop
xchg
shll
clc
or
jmp
cwtl
fbld
out
cltd
push
sbbb
pop
subb
jns
pop
inc
jge
sub
scas
adc
mov
cld
push
push
stc
xchg
out
xchg
inc
add
xchg
std
daa
push
dec
sbb
adc
mov
mov
push
cmp
shrb
add
sub
sarl
jle
inc
or
roll
daa
scas
imul
cmp
and
or
jle
pop
lods
xchg
fmull
jo
sub
lret
pusha
sbb
sub
jecxz
test
cmpsb
nop
jae
in
mov
push
add
xchg
js
or
pop
add
xchg
push
cmp
pop
scas
mov
pop
add
repnz
std
sub
inc
ret
loopne
mov
out
cwtl
loope
dec
or
xor
scas
dec
fsubr
xlat
jb
outsl
xor
add
shll
adc
inc
stc
je
int3
xlat
pushf
shlb
popa
jmp
stos
roll
xchg
stos
fsubl
pop
pop
xchg
jae,pn
je
and
les
mov
inc
int3
repz
add
out
xor
sbb
lahf
adc
imulb
test
stos
cwtl
in
pop
cmp
jbe
pop
jbe
clc
adc
push
jae
loop
mov
mov
call
arpl
enter
aaa
movsl
jp
xchg
fisttps
mov
je
jl
sub
jo
mov
outsb
mov
push
inc
hlt
or
aam
mov
or
push
push
icebp
mov
add
cld
les
repnz
xor
fs
xor
and
mov
mov
movsb
pop
mov
jne
and
xor
inc
push
adc
in
mov
cld
dec
bound
mov
adc
xchg
push
sahf
lds
and
sbb
sub
mov
sub
das
imul
add
popa
test
xchg
inc
popa
push
lcall
sarb
xor
pmaddwd
inc
jecxz
in
add
mov
repz
sti
dec
ja
xbegin
les
inc
jcxz
mov
dec
and
xor
mov
jns
xchg
sarb
std
push
pop
stos
push
popa
out
test
sbb
push
cmp
ud2
pop
cmp
and
xlat
insl
adcb
int
xchg
mov
mov
out
mov
pop
adc
test
andl
push
mov
int
jb
leave
outsl
jne
divb
inc
inc
fisubl
arpl
shr
pop
sub
call
mov
das
jnp
daa
xor
mov
notl
jl
xor
xor
popa
mov
mov
jle
add
mov
movsb
sub
mov
ret
outsb
into
mov
cltd
outsl
aaa
inc
fadds
jb
or
into
mov
cltd
insl
mov
aas
cmpsl
js
jne
addl
jge
dec
mov
and
mov
inc
roll
lods
pusha
cli
inc
mov
fwait
push
sahf
sub
dec
lret
fcomps
and
push
ss
mov
dec
add
mov
mov
add
jp
pusha
mov
pusha
pop
cmp
repz
cmp
mov
imul
aas
cmc
dec
lcall
popf
push
int
push
sub
pop
jle
ret
cmp
mov
loop
aas
xchg
pushf
cltd
jne
shll
sub
inc
jnp
bswap
std
mov
test
jp
pop
jg
loopne
movsl
filds
push
cld
push
adcl
jae
leave
cltd
je
or
fstps
imul
in
in
loope
xchg
jb
mov
xor
mov
jns
aas
xchg
cltd
ds
push
jmp
int3
loope
lods
mov
mov
add
lock
paddq
cmp
push
and
add
jmp
sub
lock
adc
arpl
aas
xchg
push
fadds
push
sarb
adc
mov
lods
add
xchg
vdivss
push
pop
inc
addr16
inc
push
sbb
int3
outsb
and
pop
mov
xchg
add
or
jl
faddl
mov
mov
mov
inc
loope
les
test
inc
repz
repnz
cli
in
daa
dec
push
lret
test
jno
pop
scas
addl
inc
push
cwtl
std
dec
mov
cmp
stos
lret
out
xor
lods
clc
arpl
orb
add
mov
pop
loop
inc
dec
cs
cld
or
in
in
pop
jae
es
jp
or
cli
outsl
dec
jecxz
hlt
ljmp
inc
and
out
push
lds
pusha
push
jl
std
ret
sahf
out
loope
in
es
push
repnz
or
pushaw
pop
push
sub
add
lea
cmpsl
out
mov
out
mov
cmp
jmp
dec
mov
imul
arpl
pop
in
xchg
aas
test
fsubrs
daa
mov
cld
fwait
pusha
mov
dec
adc
push
gs
adc
and
push
mov
push
fisubrl
int
fcmovnbe
shrl
popf
xor
push
ljmp
rcrb
insb
inc
int
dec
imul
aad
insl
push
ss
cmp
sub
add
arpl
jns
mov
xchg
pop
mov
jl
xchg
std
mov
aad
fstp
cmc
push
sahf
cwtl
sahf
push
xchg
jnp
lcall
stos
xor
lret
fwait
scas
aad
push
vmaxss
adc
lahf
out
daa
inc
data16
repz
xor
fcmovnbe
stos
stc
push
aas
xor
add
inc
lcall
jns
sub
or
in
sub
push
mov
dec
in
jle
dec
pop
xor
sbb
cld
or
repz
daa
imul
loopne
jmp
cmp
mov
or
cld
sub
movsb
aas
fidivs
cwtl
add
lret
jp
popf
fwait
es
push
dec
jp
test
xlat
mov
or
and
cmp
xchg
sti
pop
adc
jmp
out
mov
adc
andl
retw
jno
cmpsb
or
mov
jmp
lcall
mov
xchg
lds
push
mov
jge
in
scas
jge
pop
stos
das
lret
pop
int3
out
fwait
scas
xchg
xchg
lods
dec
sbb
inc
and
or
sahf
addr16
ret
or
jecxz
xor
inc
out
adc
mov
push
jecxz
xchg
outsb
aam
ffreep
mov
insb
lea
adc
loop
pop
repnz
push
mov
fisubrs
cwtl
mov
pop
xorb
gs
ret
fbstp
out
jae
test
mov
enter
std
xchg
xor
xor
pop
inc
jb
sub
std
enter
cmpsl
and
sbb
or
lret
jb
and
sbbb
xor
loop
divl
xchg
xchg
xchg
clc
mov
mov
jl
lret
inc
scas
mov
sbb
xchg
xchg
fs
dec
out
aas
adc
into
push
shl
cmpsl
lock
je
out
dec
div
call
mov
mov
jo
ret
cmp
jbe
enter
push
sub
cmp
mov
leave
sbb
push
inc
pop
add
mov
mov
or
test
xchg
adc
cmp
ja
adc
cmpsl
or
and
push
stos
loopne
jg
push
pushf
scas
ds
fwait
push
push
rol
popa
dec
loop
dec
ljmp
pop
ss
dec
mov
ljmp
pusha
nop
and
in
or
out
add
test
xchg
xor
mov
bound
sub
fwait
xor
mov
cmp
xchg
mov
push
notb
mov
push
notb
pop
repz
push
div
fstpl
scas
je
sbb
pop
xor
inc
add
sbb
shrl
add
fs
pushf
or
cmp
jae
sub
aas
xchg
popf
arpl
or
mov
pusha
jmp
inc
leave
lret
sbb
outsb
and
out
int
cmpsl
adc
mov
shll
icebp
cmp
sub
adc
std
dec
js
xchg
sarl
icebp
push
andb
inc
add
mov
in
in
fiaddl
dec
aaa
sbb
enter
ret
mov
add
leave
inc
xchg
xor
aam
inc
and
jo
mov
jge
jmp
hlt
cltd
lahf
cmpsb
inc
xor
std
xchg
mov
mov
cmp
repnz
xchg
shrb
js
cli
jae
inc
push
cld
fwait
aad
mov
loope
xchg
push
mov
test
jns
inc
enter
mov
imul
and
lret
mov
add
push
xchg
xchg
dec
mov
cli
in
js
repz
sbb
mov
xchg
in
loop
sub
pushl
lods
add
lods
mov
ret
int
or
push
fistl
cmpsb
cwtl
cli
sti
aas
dec
inc
jns
stc
cltd
push
scas
mov
jnp
push
sbb
cli
jmp
iret
sub
mov
add
shrl
leave
cmpsb
into
test
fbld
sbb
xorl
sub
nop
sbb
xchg
cltd
xchg
dec
xchg
sbb
in
les
repz
andb
fldcw
inc
js
cmc
test
or
adc
stos
sti
inc
add
and
jle
inc
mov
out
inc
out
shlb
icebp
mov
rol
or
dec
sbb
dec
cmpsw
sahf
iret
in
pop
xor
pop
inc
add
push
icebp
movsl
push
sbb
ss
dec
xchg
dec
push
daa
push
mov
mov
clc
mov
lock
loop
add
mov
repz
push
sbb
lcall
xor
lcall
test
jg
les
push
fsubrl
cmp
push
push
or
cmp
sbbl
push
add
fmulp
in
xchg
pop
and
addr16
repz
lret
jns
out
xor
adc
mov
mov
and
adc
cmpsb
rcrl
in
aam
jbe
lret
add
int
test
jae
jo
push
mov
mov
mov
phaddd
pop
movsl
cmc
xor
ljmp
aaa
or
mov
nop
lea
inc
push
cmpsl
mov
addr16
mov
push
icebp
jmp
xchg
fimuls
jl
adc
gs
test
sub
outsb
or
sub
mov
idiv
je
ret
sbb
xchg
sub
and
cwtl
jns
imul
pop
cltd
or
lea
or
movsb
sub
dec
movsb
inc
mov
xor
inc
inc
jle
inc
mov
adc
or
push
mov
jg
xor
dec
loop
ficomps
inc
jns
cli
push
mov
jecxz
xchg
gs
push
jp
mov
les
sub
jge
lods
gs
xchg
test
scas
test
pop
jbe
cli
popa
lea
sub
adc
je
push
lahf
fnsave
jecxz
xchg
testl
xor
jbe
jb
pop
or
dec
shll
pushf
push
popa
leave
test
or
xor
sub
sub
adc
in
loop
or
loope
pop
add
sbb
push
and
jge
pop
adc
and
fstps
je
mov
xchg
aas
or
mov
inc
nop
ja
roll
stc
jmp
inc
into
and
cli
mov
dec
stos
addr16
dec
push
rorb
stc
add
lret
sub
in
push
popf
mov
pop
outsl
mov
stos
clc
sti
into
add
mov
shrb
push
loop
fiaddl
xchg
pushf
xchg
jl
lret
movsb
shlb
je
adc
adc
rcr
mov
mov
rcrl
mov
mov
sub
notl
ss
mov
jae
js
jae
jns
repz
mov
dec
ret
mov
mov
pop
shll
stos
xchg
iret
shll
out
jne
or
jp
inc
add
adc
lods
pusha
jp
inc
push
and
nop
imul
xchg
fs
pop
das
out
in
mov
jle
and
rclb
inc
sbb
inc
test
das
subl
or
cmp
or
pop
jae
jl
jno
jbe
inc
lds
jecxz
sub
and
dec
and
ds
es
outsl
pop
aad
scas
in
imul
push
repnz
mulb
mov
lea
cmpl
adc
sbb
jmp
es
or
mov
imul
mov
or
mov
mov
and
sti
mov
fbld
mov
repnz
adcb
cmpsl
shl
push
frstpm(287
cmp
jo
je
jp
cmp
cmc
inc
cwtl
pop
adc
mov
push
loop
lahf
in
data16
jl
sahf
loop
and
mov
fdivr
jl
fldl
outsb
cmp
test
dec
xor
add
push
inc
loop
fistps
push
imul
cmc
cmc
xchg
dec
lret
sub
jecxz
and
inc
and
pop
mov
xchg
jmp
mov
loop
movsl
movsl
gs
add
xchg
std
repz
or
adc
mov
out
stos
nop
ja
push
cwtl
mov
or
jle
xchg
idivb
movsl
sbb
or
mov
xchg
out
xchg
push
adc
jecxz
bound
notl
iret
testb
div
push
fistps
mov
sahf
jno
mov
lret
sub
enter
std
dec
dec
icebp
adc
push
lret
pushf
imul
xchg
pusha
sbb
lret
icebp
sub
das
sub
aam
ror
and
mov
xorl
shlb
shll
icebp
stc
stc
xor
out
mov
xor
mov
adc
shrb
xchg
pop
push
xchg
mov
mov
xchg
fdecstp
xor
pop
adc
jns
dec
mov
xor
movsl
sahf
fsubs
pop
push
and
mov
pusha
arpl
fsts
dec
pop
aam
mov
mov
fdivrp
push
stc
jp
stc
mov
adc
pop
rorl
repz
das
mov
jl
test
pop
scas
jae
insl
add
js
imul
dec
into
int
jmp
or
lock
adc
mov
lods
addr16
out
enter
cmp
sbb
repnz
dec
xlat
mov
imul
in
fucom
add
xchg
fwait
sub
call
xchg
out
cwtl
sbb
mov
mov
inc
jns
nop
pop
cmp
adc
loopne
dec
jbe
lahf
xor
lea
and
cmpsb
cmc
push
mov
adc
cmp
int3
sarl
shlb
and
push
cs
ss
dec
pushf
int
mov
jmp
cmpsb
js
push
popf
cmp
inc
popf
xchg
bound
or
sarl
call
aad
ret
mov
fisubl
push
pushf
rclb
mov
cmc
sbb
push
lea
mov
mov
popa
jl
pop
lret
dec
xchg
out
sub
pop
cmp
fildl
sbb
cmp
daa
push
pusha
mov
jl
mov
pop
movsl
inc
or
cltd
xor
jl
or
xor
mov
call
mov
mov
mov
mov
push
jle
scas
pop
cmpsl
orl
and
jae
xchg
js
test
inc
sbb
loope
jecxz
into
call
js
jnp
cmp
jo
xchg
inc
lods
xchg
imul
in
pop
iret
cmp
int
arpl
cmp
mov
add
ds
into
mov
adc
pop
inc
push
dec
xor
push
lea
les
and
pop
mov
pop
pop
into
add
sti
test
je
sub
mov
data16
push
pop
adc
mov
in
pop
scas
push
add
mov
adc
fisttpl
fscale
sub
push
dec
mov
adc
mov
xchg
or
add
add
jae
ljmp
lea
adc
imul
xchg
outsb
ja
sub
arpl
add
std
xchg
mov
shl
jns
cwtd
jmp
push
and
jno
pop
jge
add
fsts
push
cmp
xchg
pop
subl
into
jp
jle
inc
orb
mul
push
movsl
stos
pop
rol
push
ret
cld
mov
adc
test
pop
mov
aaa
loopne
leave
pushf
movsb
hlt
fsts
or
inc
lret
in
insb
sub
adc
mov
jmp
call
not
fs
movsl
xor
inc
lcall
push
sub
jge
inc
out
and
ret
cmp
sbb
xchg
sub
insb
push
lods
icebp
popf
lcall
or
and
sbb
stos
out
dec
nop
in
das
dec
das
sub
cmpsb
and
mov
xchg
int
dec
loopne
aam
call
dec
pop
dec
jb
out
xor
mov
frndint
and
sub
les
pop
bound
std
add
dec
push
cmp
repnz
dec
dec
sub
mov
out
inc
xchg
lret
sub
add
mov
test
sbb
inc
inc
xor
lret
lret
cmc
popf
xor
in
push
add
mov
adc
jb
add
in
aaa
add
sbb
js
ljmp
inc
fwait
sbb
adc
sub
mov
rcr
jae
je
pop
or
insb
xchg
adc
jns
push
fcmovne
and
iret
pop
iret
insl
xchg
cmp
imul
enter
sbb
and
ja
jecxz
push
sub
movsl
in
aaa
jno
xchg
push
pop
push
data16
das
imul
dec
paddusb
pop
push
xchg
cmovo
rcrl
sbb
jo
sub
lahf
pop
test
repnz
add
lock
addr16
out
xchg
cmp
sbb
xor
enter
cld
test
ror
cmpsb
pop
test
arpl
cmc
scas
jbe
aas
loop
stos
dec
inc
test
fwait
xchg
jl
nop
jae
out
inc
cmpsb
adc
pop
psrad
sub
push
insb
les
pop
das
mov
xchg
or
mov
inc
inc
int3
jae
mov
in
push
out
cmp
adc
xor
bsr
sub
out
fsubrp
xchg
fistpl
addr16
testb
loope
out
addb
inc
xor
pop
dec
jbe
sbb
ljmp
lret
divb
jnp
imul
mov
mov
movsl
dec
xchg
jne
mov
loop
pop
cmp
push
lret
insb
pusha
cmp
icebp
popf
shrl
ret
into
dec
sbb
imulb
test
ret
fidivl
and
cmp
jb
dec
popf
hlt
inc
fdivp
and
mov
push
mov
dec
push
adc
fistpll
push
iret
ja
or
mov
nop
push
or
dec
push
xor
fldt
js
jle
pop
mov
gs
in
adc
add
xchg
add
js
push
sbb
push
or
push
cmp
sbb
inc
pop
dec
push
fmulp
shlb
and
ljmp
push
leave
rorb
jge
cmp
popa
dec
idivb
fdivl
dec
cmp
shrb
aad
jmp
popa
sbb
ret
mov
es
push
jae
inc
cwtl
push
pop
rcll
or
negl
xor
test
cmp
push
add
aad
inc
stc
cs
arpl
mov
fsubrs
dec
ret
xor
pop
movsl
mov
sub
dec
in
out
mov
vminpd
push
popa
in
mov
aaa
add
shr
loop
pop
push
pop
jb
orb
shl
sarb
add
addr16
ljmp
fcoms
cmc
mov
jmp
out
jbe
shrl
fwait
dec
push
jns
nop
cmp
mov
or
mov
xchg
negb
lcall
aad
sti
mov
sub
lock
popf
mov
mov
pop
mov
sbb
es
or
in
stos
rcrl
popa
inc
or
das
pop
test
inc
imul
out
or
or
push
mul
rcrl
or
jne
scas
cltd
pop
inc
imul
jg
ja
lods
daa
stc
into
sub
lock
mov
sbb
adc
mov
dec
jns
dec
insb
in
jae
inc
test
iret
add
es
cld
adc
dec
and
xor
lods
cmpsb
shrb
mov
fwait
fwait
hlt
dec
mov
dec
subb
leave
jg
push
aam
cmp
ja
lds
adcl
nop
jnp
test
push
mov
xor
test
cltd
data16
xor
add
cmc
mov
xchg
sbb
xchg
xchg
pop
fdivr
xchg
fdivrs
loope
data16
push
sahf
lock
imul
cmp
subb
inc
clc
ret
pop
add
xchg
int
std
cmc
scas
in
repz
cmp
dec
cld
mov
or
xchg
arpl
pushf
xor
nop
mov
cmpsl
std
cltd
jns
inc
xchg
adc
repz
pop
adc
test
cmpsl
mov
add
inc
cmp
push
pusha
push
inc
pop
je
scas
mov
out
cmp
aas
test
and
ja
pop
lods
mov
jb
push
popf
data16
inc
scas
scas
mov
sub
orb
sub
or
mov
cltd
push
adc
pop
out
push
or
cmpl
fisttpll
mov
fdivp
pop
lret
jno
pop
scas
push
scas
movsl
sub
shlb
aad
or
mov
pop
enter
fs
sbb
in
jb
mov
jns
mov
fcompl
pop
shl
ja
xchg
nop
test
dec
incl
sub
out
fwait
cs
jg
int3
pushf
fstl
sbb
or
xchg
mov
cmp
call
push
in
cmp
fcomi
and
xor
inc
cwtl
dec
pop
sti
out
mov
push
cmp
cmp
stos
cwtl
in
mov
cmp
or
sub
mov
pop
sub
int3
sti
dec
xlat
mov
pop
stc
xor
cs
mov
mov
mov
xor
jo
testb
xchg
jns
jg
xchg
ljmp
out
cmp
or
xor
pop
or
aad
lahf
int
xor
ds
cmp
daa
loop
lods
push
rol
xchg
cmove
mov
mov
sbb
rcrl
push
jbe
ds
adcl
jne
je
rclb
in
xor
insl
jl
pop
sarl
push
mov
jp
movsl
add
imul
xor
and
mov
std
out
inc
lcall
fisubl
mov
pextrw
cmp
mov
ljmp
outsl
mov
mov
dec
outsb
mov
sub
xchg
out
loope
shl
sahf
lcall
out
arpl
cmp
and
movq
negb
imul
or
dec
jb
cld
inc
sbb
xor
xchg
dec
xchg
imul
shlb
cmp
and
and
clc
push
insl
xchg
popl
test
loopne
daa
rcll
mov
mov
pop
das
jns
sti
mov
es
in
imul
cmp
test
sbb
enter
dec
fistpl
xor
js
and
mov
cld
adc
cmp
push
stc
outsl
outsb
bound
in
xor
out
insb
and
adc
or
sbb
dec
loop
sub
sub
jge
push
loopne
jl
pop
jecxz
nop
mov
pusha
xchg
cmp
lcall
or
notl
or
jno
sub
jp
add
jnp
mov
push
push
lret
into
gs
adc
call
push
adc
jo
jmp
inc
mov
pushf
and
sub
aad
jne
mov
sbb
stc
inc
insl
stos
adc
mov
mov
cwtl
push
mov
jae
test
and
int
mov
pslld
lds
mov
out
jnp
sti
insb
push
out
or
stos
mov
mov
sub
shlb
pop
test
mov
les
pop
arpl
popa
out
inc
inc
jp
adc
adc
mov
inc
inc
pop
or
pop
add
pop
cli
outsl
out
xchg
mov
cmpsl
push
and
lods
mov
push
push
stos
repnz
sub
and
ret
scas
dec
pop
xlat
pop
out
xchg
or
rcr
jbe
add
inc
or
mov
repnz
sarb
push
or
out
pop
lds
mov
mov
ret
test
pusha
pop
inc
mov
xchg
out
adc
pushf
and
cli
int
push
dec
push
sbb
outsw
adc
inc
jo
or
es
pop
sbb
inc
data16
xchg
js
mov
add
inc
inc
das
mov
movsl
sub
jecxz
imul
mov
inc
cmp
jns
pop
dec
inc
insb
je
loop
daa
mov
sub
push
push
sarb
into
in
dec
push
cmp
push
fldt
in
and
mov
pop
inc
xchg
movsb
sbb
dec
mov
loop
mov
inc
jl
clc
jb
aas
loop
xchg
adc
inc
dec
mov
sbb
dec
push
stc
jb
pop
lahf
leave
jbe
divl
daa
fldcw
insl
jecxz
in
adc
insl
fwait
adcl
inc
test
pop
shll
add
pop
and
push
pop
cmp
stc
mov
aas
xchg
jle
stos
dec
xor
and
sbb
movb
aam
lods
sub
pop
fldcw
pop
test
cmp
inc
add
popf
packsswb
push
pop
lods
ss
xchg
push
mov
dec
sti
mov
xchg
rcll
fnstsw
jne
mov
push
mov
fstpl
shll
cmp
mov
cmpsl
je
in
and
cld
arpl
jno
or
dec
loopne
push
loopne
lds
test
pop
add
lret
or
mov
sub
movsb
jae
notl
clc
rcrb
fs
adc
inc
enter
push
imul
out
into
cmp
mov
stos
xchg
arpl
subb
int3
subl
cmp
pop
test
enter
mov
fstpl
loope
sub
mov
pushf
mov
pusha
push
cltd
call
mov
add
or
in
push
inc
xchg
mov
inc
pop
leave
fsubs
cmp
push
sbb
mov
mov
push
or
into
inc
les
enter
mov
arpl
icebp
test
inc
and
adc
inc
pushf
dec
movsl
cltd
rcrb
sub
rorl
mov
and
popa
ret
mov
and
add
sbb
pop
js
setno
cmpsl
xchg
mov
adc
mov
and
mov
ret
mov
add
aas
int3
hlt
aam
sbb
mov
push
mov
in
sub
jbe
into
xchg
sbb
pop
dec
jae
out
sbb
mov
xor
adc
mov
popa
adc
add
push
out
aas
mov
and
iret
mov
push
lret
sub
sbbb
cmpsl
jae
rorb
dec
cltd
mov
fs
in
cli
sbb
aam
mov
inc
fwait
push
std
call
ret
xlat
xor
jae
cmp
pop
cmp
sbb
sub
adc
bnd
repnz
and
mov
lcall
js
lret
dec
in
fdiv
push
dec
inc
out
or
aam
fucomi
push
push
pop
add
inc
dec
sbb
fisubl
or
mov
xchg
push
or
adc
es
repnz
xor
stos
loop
gs
mov
add
dec
lea
sub
mov
pop
mov
cli
xor
pushf
cmp
jecxz
mov
pop
inc
ret
addr16
cld
mov
push
shr
pop
shrb
lods
loopne
addr16
je
xchg
xchg
jae
incl
pop
rorb
aaa
cmc
pop
push
repz
addb
mov
pop
xor
xor
loopne
out
xor
sahf
flds
adc
sbb
and
loope
sbbb
jg
ret
test
scas
jb
mov
cs
aam
sub
test
adc
mov
lea
rcrl
mov
ficompl
cmc
mov
adc
test
rclb
mov
mov
lcall
sub
adc
test
jo
test
jp
push
jns
jo
inc
pop
push
loope
or
jns
cmp
mov
roll
lds
mov
test
inc
cmpb
mov
inc
sub
push
shll
movsl
jg
push
std
mov
sub
test
imul
pop
ja
add
popa
mov
lret
stc
xlat
es
imul
dec
pushl
loop
mov
sub
sub
xlat
xorb
push
arpl
cli
adc
nop
test
shl
lods
or
sahf
push
add
pop
dec
andb
es
add
repz
jnp
loopne
sbb
push
movsb
mov
push
cwtl
lods
dec
negl
inc
repz
stc
mov
jae
cmp
cmp
sbb
sub
push
push
mov
cs
shrb
sbb
adc
jo
and
pop
loope
xchg
mov
xchg
ret
mov
in
sti
aas
rcr
pop
mov
dec
jno
mov
dec
xor
in
out
ja
mov
stos
outsb
mov
mov
dec
push
ds
jmp
push
cs
insl
mov
jp
stos
ljmp
leave
mov
loopne
push
out
push
and
std
push
shlw
lods
push
cmp
lock
push
out
or
ja
inc
xor
in
ljmp
push
xor
xor
xchg
pop
lret
sbb
inc
cmp
mov
mov
push
mov
aaa
popf
in
inc
lods
js
popf
jle
mov
andl
and
xchg
ret
cld
nop
repz
inc
addl
dec
lods
mov
lret
inc
inc
ficoml
inc
fcmovbe
ljmp
rclb
mov
rol
fwait
sub
xor
mov
cld
xchg
inc
xlat
mov
data16
aam
mov
adc
or
mov
pop
add
xchg
rcrb
xor
in
mov
jnp
cwtl
push
mov
inc
dec
sub
xor
cmp
mov
fisttpl
jmp
and
popl
and
and
rol
repz
arpl
ss
cwtl
and
push
mov
add
mov
or
aam
inc
xor
push
repz
xor
pushf
xor
push
pop
cmp
mov
outsb
jae
stos
lock
aad
jle
pop
and
pop
test
cmpsl
int3
jb
jecxz
push
cmc
nop
insl
insl
mov
mov
mov
cmc
mov
sbb
fnstcw
out
movsb
arpl
xchg
mov
arpl
dec
in
sub
xchg
dec
out
mov
mov
nop
mov
data16
stos
sub
cli
xor
add
jbe
lods
add
out
popf
mov
lods
and
scas
cmp
nop
mov
test
rcrl
mov
jno
adc
scas
xlat
test
inc
orps
cmp
sbbb
xor
sub
pop
adc
mov
lcall
mov
les
push
cmp
xlat
jmp
repz
sbb
out
mov
bnd
ret
push
int
notb
inc
shrb
push
cli
mov
cmp
nop
add
jcxz
shlb
sbbl
insl
push
mov
aaa
out
inc
icebp
lods
push
xchg
sbb
movsl
lret
leave
int3
loope
stos
push
xor
jg
cmpl
mov
cli
aas
inc
mov
fsubrs
mov
or
pop
imul
js
in
mov
int3
push
adc
inc
add
repz
fnstcw
jns
cmp
cmp
mov
les
inc
add
fimull
mov
int3
lahf
fidivrs
push
jmp
mov
aad
cmp
push
incb
stos
js
cld
xor
mov
imul
and
icebp
adc
or
idivb
adc
pop
and
pop
aaa
pop
or
dec
filds
daa
sub
out
sub
cmp
int3
cs
mov
nop
aas
and
cmc
mov
iret
push
stos
mov
std
cld
sbb
rcrl
pop
lods
dec
insb
andl
ss
xor
jp
sub
push
repnz
push
cmp
cwtl
sti
loope
mov
lret
into
dec
adc
add
lret
pop
jg
loope
and
lret
xor
pop
gs
sarl
std
mov
lcall
aad
in
pop
aaa
stc
rclb
push
adcl
out
adc
aas
lock
jmp
dec
clc
and
mov
push
jmp
mov
cs
sub
imul
stos
inc
mov
nop
dec
cwtl
cs
jge
cmc
xor
jbe
jo
negb
frstor
push
repz
ljmp
inc
mov
adc
hlt
cmp
cld
dec
jle
nop
aam
arpl
mov
and
cmp
inc
mov
ljmp
dec
cmp
xor
mov
fsts
and
stos
loope
dec
cltd
movsb
negl
xlat
popf
test
inc
jno
std
or
xor
cmp
jle
cs
cwtl
rorl
cltd
pushf
rolb
mul
and
cmp
xchg
xor
in
dec
push
test
loopne
xchg
cltd
enter
xchg
scas
pushf
lret
push
test
inc
or
scas
inc
fldenv
lods
lahf
int3
fisttps
jl
xbegin
push
insb
or
and
cs
pop
popa
pop
and
fiadds
push
and
fs
iret
push
stos
stos
and
stos
push
and
cmp
xchg
out
mov
lret
jg
adc
scas
adc
or
xchg
aad
jne
dec
sbb
jmp
mov
ret
sbb
aam
in
sbb
cs
sti
fadds
xrelease
pop
adc
fstl
dec
les
adc
adc
xchg
jge
test
iret
mov
cmp
sti
jb
ss
xor
mov
pop
mov
rcr
enter
push
movsb
mov
fdivrl
nop
xor
pop
pop
jbe
sbb
sbb
sbb
and
adc
inc
dec
lret
jo
xlat
sub
pop
push
jl
pop
in
outsb
cmp
sub
rcr
sub
push
jno
outsl
xorb
sub
add
jl
cmp
adc
xor
xchg
cmp
sbb
mov
jle
cltd
add
ja
test
mov
sti
shlb
aas
cmp
fxch
movsl
std
aaa
push
imul
pop
pop
cmp
push
repnz
add
mov
pop
xchg
imul
jg
jbe
popa
mov
rcl
lods
push
test
sar
lret
js
aam
jo
pop
cltd
xlat
mov
movsl
adc
adc
jecxz
mov
in
sahf
enter
dec
push
dec
sub
xchg
in
jno
ret
cmc
rclb
dec
sahf
mov
push
sbb
xlat
xlat
adc
call
scas
or
mov
mov
stc
cmp
icebp
dec
scas
clc
or
das
xor
sbb
pop
xchg
cmp
inc
fstpt
mov
xor
iret
inc
hlt
mov
xor
lret
xor
and
mov
add
cmp
fsubl
ret
dec
shlb
adc
mov
xchg
mov
or
and
push
clc
mov
pop
push
hlt
pushf
dec
pop
sbb
fdiv
xor
in
sub
pop
outsb
in
into
cmp
fs
sbb
fimull
aam
enter
inc
push
out
test
xor
jns
sub
ljmp
shl
filds
xorb
jo
das
jge
test
xor
daa
mov
mov
pop
popf
mov
xlat
sub
mov
fs
mov
lock
pop
sbb
movsl
fwait
xlat
jne
lock
lods
in
ja
insb
jge
mov
decl
cmovae
pop
fmuls
in
mov
ja
mov
sub
fidivrs
mov
add
repz
fstpt
pop
ret
jns
leave
stc
push
mov
fisttpll
hlt
in
adc
fwait
icebp
fimuls
inc
sbb
inc
icebp
jae
js
lret
pushl
pop
cltd
xor
movl
inc
and
addb
mov
stos
mov
dec
mov
rolb
mov
add
xorl
fcmovu
scas
mov
jge
mov
mov
popf
leave
dec
cld
fadds
xchg
jae
push
int
dec
cmp
loop
push
mov
fmull
inc
inc
or
xor
mov
iret
xor
cmp
lods
push
pop
cltd
push
scas
bound
mov
push
xor
iret
jnp
xor
leave
fstpl
sbb
mov
aam
lahf
enter
jp
shlb
ret
cmp
sbb
mov
mov
outsl
mov
and
push
lret
lds
xchg
rolb
mov
outsl
lock
dec
add
or
lret
sahf
xchg
or
pop
icebp
sahf
ret
mov
and
push
mov
pop
or
dec
cmp
inc
es
lock
adc
and
dec
or
mov
sahf
insb
push
and
jecxz
out
in
mov
sti
mov
jg
in
shrb
mov
jae
jmp
cmp
dec
outsl
mov
jg
and
push
leave
in
mov
insb
rcl
hlt
mov
or
ret
fsubl
jne
dec
mov
lock
loop
jne
pop
lea
lods
sub
fwait
pop
mov
and
xor
lods
cmpsb
dec
jo
jge
ret
add
adc
inc
mov
xchg
mov
lock
adc
imull
mov
insb
shr
sbb
jbe
cltd
ds
mov
cs
sbb
xor
sbb
movb
rol
dec
and
mov
jp
lret
lds
mov
insb
mov
ret
and
jecxz
cmp
and
ret
and
ret
into
test
fmuls
movsb
dec
dec
das
push
cmpsb
jne
insb
outsl
loopne
and
scas
mov
and
adc
lock
xor
push
lods
pop
mov
add
out
xchg
pop
cli
dec
add
lahf
add
ss
sub
ret
xchg
jbe
aaa
pop
out
mov
jle
mov
jmp
adc
test
fstpl
lea
mov
push
outsb
or
xor
xchg
stos
scas
aad
add
lds
out
call
rorb
lret
sbb
in
arpl
push
lcall
into
in
push
mov
sahf
mov
sub
shrb
sub
es
jle
sbb
cltd
push
lcall
pop
mov
xchg
mov
xor
mov
divl
inc
nop
imul
rolb
and
lcall
pop
and
mov
xchg
mov
lret
andl
jp
push
fs
inc
mov
lods
ret
outsl
test
mov
fildl
xchg
lret
push
aaa
fstpt
inc
movsb
inc
lds
mov
or
stc
pop
mov
cmp
fstps
sbb
outsb
shlb
xor
cmc
mov
jmp
outsb
push
js
and
adc
or
scas
xchg
cmpsb
aas
cmp
pop
ds
into
jae
xor
repnz
push
cmp
adc
out
cmp
pop
outsb
inc
shll
test
ss
mov
push
aas
repz
sub
push
mov
dec
lds
inc
inc
arpl
daa
in
data16
push
mov
dec
inc
bound
cltd
add
cld
pop
mov
inc
ds
cmp
lods
mov
lret
out
outsl
leave
gs
hlt
repnz
lods
xor
pop
jmp
ss
hlt
inc
mov
loopne
psrlq
inc
xchg
movsl
ret
int
fimull
mov
mov
sbb
cmp
gs
inc
push
fadds
cmpsb
pusha
dec
jmp
test
test
or
dec
ficompl
add
aam
mov
pop
loopne
jb
dec
aas
add
sbb
mov
pop
lods
aad
cli
and
xlat
rdpmc
out
icebp
loope
lea
pop
add
imul
inc
and
xchg
in
les
sbb
and
das
xor
mov
outsl
jnp
xchg
outsb
stos
push
push
sbb
dec
lods
repnz
daa
mov
sub
scas
jge
jecxz
nop
cli
push
and
ja
cs
mov
jns
mov
add
call
fnstenv
movsb
xchg
mov
push
icebp
ds
pop
inc
mov
cmp
dec
xchg
dec
shrb
je
sahf
sbbl
int3
push
dec
stos
outsl
inc
lods
addps
pop
js
jnp
dec
add
cmp
call
add
mov
in
sub
cmpsb
jbe
cs
mov
mov
pop
push
mov
mov
jge
jbe
dec
mov
mov
ljmp
or
or
dec
mov
sti
pop
pop
jmp
es
xor
push
imul
fadds
shrl
fldpi
push
shll
shll
test
jmp
and
dec
and
adc
loop
pop
xor
imul
movsl
add
and
out
add
lods
push
jp
clc
mov
adc
stos
loop
push
ret
mov
aad
inc
cmp
adc
mov
mov
cmc
mov
pushl
sti
mov
lods
mov
pop
les
adc
jle
cltd
call
mov
mov
int
repz
inc
xchg
adc
ja
call
inc
mov
sbb
xor
test
fcoml
and
sbb
loope
push
mov
jl
pop
push
loope
and
sbb
cmp
jle
cmp
push
iret
outsb
in
add
add
xor
dec
daa
fld1
out
orb
in
orb
insl
out
call
or
dec
movsb
xor
icebp
ss
ja
inc
ljmp
rcll
push
push
in
sub
test
dec
or
and
dec
pop
mov
or
ljmp
push
pop
loop
lcall
mov
jmp
jne
mov
adc
jge
jp
inc
push
daa
sbb
out
test
xor
std
adc
push
xchg
daa
repnz
push
fwait
push
test
jle
popf
es
mov
sub
lret
call
shl
mov
mov
push
sbb
sahf
stos
popl
cmp
pop
sub
lea
mov
mov
int3
fnsave
inc
in
xor
mov
inc
or
sti
push
push
pop
scas
sbb
test
mov
jbe
pop
clc
xor
and
notl
inc
icebp
mov
inc
xor
cmp
das
test
loope
pop
adc
xorl
les
lahf
jp
push
fstps
jbe
jge
pop
in
dec
dec
mov
test
cwtl
in
in
or
repnz
xchg
mov
inc
pop
push
jae
xchg
flds
popa
adcl
sbb
pop
icebp
je
mov
bound
mov
jmp
sti
repz
ds
out
sbb
and
stos
inc
insb
or
out
cmc
mov
shl
call
scas
xchg
push
bound
pop
inc
pop
popa
lods
ret
adc
movsb
jno
jo
push
cld
or
sub
aad
nop
xchg
jl
shll
mov
cwtl
fistps
dec
mov
mov
adc
xchg
mov
xchg
rcl
lcall
or
lea
push
stos
xor
xor
cmp
jo
or
aaa
adc
push
out
aad
sbb
aas
bound
cmc
fidivrl
clc
stc
push
loopne
fcmovnbe
adc
out
dec
mull
imul
sahf
mov
int
inc
push
outsl
outsl
or
test
sub
add
shll
idivl
shll
add
shld
and
mulb
cmpsb
nop
sbb
shl
outsl
das
jnp
and
adc
das
fadd
pushw
jo
aad
xchg
mov
ljmp
insl
sbb
fisttps
repz
inc
mov
fiaddl
add
xor
clc
cwtl
imull
fwait
out
or
popa
cmc
es
call
and
mov
push
mov
jl
cmpsb
insl
mov
xor
inc
and
bnd
sbbl
test
push
mov
pop
cli
repz
pop
arpl
imul
jbe
cmp
ds
add
aas
sbbb
repnz
cli
mov
pop
movsl
loopne
hlt
push
das
mov
mov
iret
mov
pop
cmpb
aam
es
jne
jo
cmc
insl
cmp
rcrl
jno
fidivrl
xchg
sub
mov
call
cmc
mov
sti
rolb
xchg
cmp
fwait
lods
sbb
jne
inc
mov
and
add
sub
scas
aad
pop
xchg
mov
cmp
xlat
in
aam
fcomp
int3
pop
add
loopne
fdivp
mov
fnstsw
push
sub
xchg
andb
repz
jge
ja
ja
stc
data16
cmpsl
mov
fsubrs
pop
fs
js
ret
popa
mov
inc
int
movsb
insb
jmp
enter
cmpsl
loop
popa
adc
test
dec
in
dec
inc
inc
movsb
jmp
cmp
push
sub
mov
or
pslld
aad
arpl
and
pop
loop
ficoms
in
mov
push
and
aas
stc
rcrb
pop
shrl
dec
ss
stos
lock
fdivrp
cmp
pushf
pop
ljmp
movsb
push
push
inc
inc
scas
push
cli
sub
jae
cmp
ja
and
pop
jae
lds
push
mov
pushf
mov
leave
and
mov
cmpsl
push
in
and
mov
cmpb
push
repnz
into
lcall
xor
or
push
stc
test
pop
sbb
xchg
xlat
sub
mov
mov
movsb
inc
xchg
dec
lcall
call
jbe
nop
nop
pushf
filds
pop
daa
ja
push
inc
in
inc
sahf
andl
loope
add
mov
cmp
out
scas
aad
jno
mov
loopne
jb
stos
pop
dec
xor
jmp
stc
sub
sbb
call
push
pop
pop
mov
and
je
pop
or
mov
out
and
imul
jo
and
xor
push
cmp
cmp
push
mov
stos
mov
push
aam
xchg
xchg
adc
dec
rol
fsubs
les
cmp
pop
jecxz
mov
test
mov
dec
nop
jb
mov
lods
fistpll
stos
adc
push
out
mov
jnp
mov
and
cmpsl
leave
cld
mov
cld
dec
inc
aam
inc
xor
add
fisubrs
jg
mov
rolb
jp
push
fsubrs
add
inc
testl
pop
add
pop
ja
add
roll
jge
jns
xlat
fsubrs
rcl
mov
lock
push
je
push
pop
jmp
je
xor
pop
mov
jo
mov
int
jno
push
dec
ja
mov
xchg
jne
sbb
inc
js
std
and
xchg
test
mov
mov
shlb
dec
shll
lcall
popf
jge
xchg
pop
sbb
jo
inc
sub
sti
mov
stos
ja
lret
jo
add
loopne
mov
js
mov
aad
or
sahf
js
movsl
cld
cmp
xchg
mov
mov
stos
sub
out
gs
sbb
mov
or
jbe
xchg
loop
lods
out
lods
loop
pop
mov
je
in
xchg
imul
lods
je
inc
jno
add
sub
inc
clc
pop
inc
fs
adc
es
cmp
xchg
test
dec
push
notl
gs
test
pop
pop
lock
and
decl
mov
dec
das
pop
mov
mov
outsb
call
mov
call
or
jmp
pop
stos
push
mov
inc
fdivr
mov
mov
jne
jle
xor
jp
jae
mov
aam
arpl
sub
jo
push
dec
lahf
enter
jmp
dec
ret
les
cs
daa
and
fidivrs
jmp
aad
xchg
mov
ret
xchg
ss
xor
or
adc
in
jbe
repnz
pop
mov
xor
sub
in
jo
or
outsl
stc
pop
aam
clc
cs
add
in
push
pop
outsb
push
jb
mov
fcoms
xor
into
rcl
sub
loop
mov
inc
lds
sub
xchg
fisttpll
fistps
ret
lcall
int3
and
cmp
pop
mov
dec
loopne
sub
push
idivl
dec
pop
repz
mov
dec
and
pop
xor
push
nop
arpl
nop
inc
mov
ficoml
jae
push
sub
dec
sub
in
hlt
iret
mov
enter
loope
mov
es
pop
pushf
pop
push
out
push
mov
sub
adc
shll
jne
ret
shlb
add
mov
dec
ret
jp
push
pop
mov
xor
inc
and
out
jbe
xor
sbb
xchg
test
push
adc
test
or
std
fsts
lret
pop
lret
pop
dec
push
repz
sbb
out
or
push
bound
arpl
xchg
jbe
sbb
ljmp
xor
dec
iret
movsl
sub
push
push
movb
cli
mov
pop
and
or
scas
sbb
out
cli
jl
push
das
sbb
dec
fildl
ljmp
lock
lret
xchg
clc
ficoms
shl
xchg
lahf
mov
dec
mov
mov
jmp
push
subl
xor
add
fnsave
test
push
negb
pusha
add
push
push
xor
jmp
mov
jge
adc
rcrb
mov
inc
xlat
data16
popf
mov
and
scas
push
sub
arpl
addl
fsubl
or
sub
divl
pop
or
movsb
hlt
cmp
sub
out
leave
dec
push
rcrl
fidivrs
pop
stc
jl
out
inc
iret
and
mov
ss
cwtl
xor
roll
test
aaa
lahf
and
shl
push
in
mov
insl
pop
fwait
loope
adc
cmp
cmp
ljmp
ret
mov
mov
fsubl
arpl
sub
mov
and
inc
insb
adc
mov
mov
sbb
incb
sub
sub
xchg
mov
pusha
dec
xchg
out
mov
pushf
jnp
jmp
jae
sbb
fwait
enter
stos
lds
in
rclb
inc
adc
out
push
pop
adc
mov
shlb
mov
push
or
mov
cmp
scas
xor
fisttps
iret
insl
cmp
cs
or
popa
xchg
xchg
divb
jle
bound
xchg
dec
sub
xchg
adc
std
push
sub
push
ret
leave
mulb
sbb
mov
pop
in
jns
and
call
jle
sub
movsl
mov
movsl
rcrb
packsswb
sbb
jp
in
std
dec
sub
xor
sub
imul
clc
jge
rorb
fs
and
jecxz
ljmp
push
out
es
pop
mov
sub
xorb
stos
jmp
sbb
in
sub
js
loopne
push
or
push
pushf
insb
rorb
pop
cmc
adc
sub
mov
xchg
xchg
inc
js
bound
iret
idiv
mov
shrl
xchg
pop
shr
outsl
daa
mov
add
fsubr
dec
xor
out
jmp
and
ljmp
pop
hlt
es
sbb
push
lret
push
xchg
push
adc
xchg
pmaxub
push
mov
mov
cld
pop
imul
mov
jno
ret
cmc
xorb
fsubp
out
lcall
push
data16
pop
and
sarb
push
iret
pop
or
xchg
and
mov
out
jbe
mov
or
push
and
mov
push
int3
cmc
call
icebp
sub
jns
insb
and
rcl
stos
repnz
shlb
inc
add
cmp
push
pop
inc
ret
mov
mov
loopne
xchg
inc
addr16
nop
insb
sub
sub
pusha
add
or
fs
sub
int
daa
int
sti
mov
dec
idivl
lods
out
ret
dec
add
add
les
mov
arpl
lcall
movl
push
mov
add
stc
aam
jg
cmpsl
pusha
call
jp
popf
hlt
es
sbb
jnp
into
jle
cwtl
jnp
or
xlat
iret
pop
sub
in
arpl
sbb
std
mov
pop
jmp
xchg
mov
dec
sub
inc
iret
rcrb
dec
xor
or
jmp
jne
inc
in
or
imul
xor
repnz
adc
lret
sbb
cld
shrl
sbbb
sahf
icebp
dec
js
and
fcmovnb
adc
hlt
fnclex
ds
and
ret
push
or
add
rclb
repz
inc
mov
xor
ja
les
lcall
sub
stc
push
leave
xchg
adc
or
pop
dec
orb
fisubrs
push
jecxz
dec
jge
cmp
inc
push
into
sbb
mov
loope
call
inc
lret
xlat
shll
cmp
dec
lahf
or
lea
call
inc
and
or
pop
inc
mov
fs
jns
xor
fs
xchg
sahf
mov
bound
loopne
sbb
fsubr
fdivs
adc
or
adc
xchg
xor
cmpl
test
xor
xchg
push
or
push
std
sub
jl
mov
repz
xor
ret
xchg
movsl
xor
fcomp
std
lahf
mov
push
lea
rep
mull
mov
loop
or
fmul
fistps
mov
daa
sbb
call
push
sarl
in
insl
hlt
and
jnp
sub
icebp
inc
mov
or
rol
and
addr16
adc
pop
mov
jno
xchg
inc
pusha
xchg
cmp
arpl
ficomps
hlt
jno
ret
ficoms
pop
repz
push
lock
jo
inc
xchg
xorb
xor
sbb
je
and
pop
ret
inc
fstps
push
add
push
pop
pushl
push
add
dec
push
rol
ficoms
jmp
lods
fldenv
xchg
lods
mov
pop
in
sub
push
std
or
cs
cmpsb
test
and
loop
aad
dec
xchg
pop
shlb
push
push
adc
lret
mov
xchg
mov
pusha
jno
xor
add
aas
or
add
nop
add
pop
push
ja
fisttpl
mov
or
add
inc
mov
push
push
cs
sbb
fistpll
jb
sub
repz
out
sbb
into
in
dec
gs
fwait
mov
bound
repz
cmp
mov
mov
mov
push
cs
dec
cltd
or
or
dec
scas
cwtl
loope
xorl
fs
insb
inc
adc
stos
adc
mov
push
xor
mov
add
and
mov
aaa
into
repnz
lods
jmp
out
dec
int3
cltd
jmp
push
sub
outsl
jo
inc
stos
adc
hlt
add
out
and
mov
xchg
mov
enter
leave
addb
push
loopne
std
cs
rcrb
push
and
pop
aam
daa
xor
pop
xor
adc
push
dec
jle
dec
fstl
enter
hlt
jl
cmp
pusha
icebp
push
iret
adc
and
lods
pusha
cmp
sub
jno
je
pop
xchg
mov
pop
mov
push
sbb
jnp
in
jmp
ds
cmp
enter
cmp
pushl
mov
xor
outsb
sti
jns
lods
mov
inc
ffreep
xor
jl
mov
clc
addl
hlt
int3
movl
xchg
xor
rol
dec
out
sbb
sbb
sbb
mov
leave
add
mov
pop
pop
call
stos
mov
aam
jne
shr
push
negb
sub
movsl
clc
cmp
es
cmp
xchg
and
push
push
subl
xchg
cmpsl
inc
popa
and
ljmp
push
rclb
nop
dec
adc
cmp
stos
movsl
sbb
loop
addl
sbb
ficomps
cmp
adc
out
sbb
jmp
push
sub
and
inc
inc
into
pop
movsb
and
mov
fidivs
cmp
add
popa
cld
insb
addr16
inc
loope
sub
mov
dec
test
jge
jne
jl
hlt
add
out
or
xchg
and
pop
sbbl
jmp
mov
cmc
xchg
cmp
mov
xor
scas
inc
mov
sahf
xchg
test
call
mov
das
jb
ds
cmc
movsb
popf
mov
arpl
rcrl
xchg
cmp
js
out
inc
mov
xor
pop
sbb
mov
sahf
adc
push
sar
add
aad
rcrb
imul
in
xor
lock
mov
aad
mov
dec
call
cmc
mov
ret
ja
nop
jmp
sti
add
mov
pop
mov
sub
sub
sarb
nop
xchg
inc
sub
orb
add
sub
jo
and
xchg
push
nop
dec
loope
mov
dec
xor
notb
pop
cmp
lods
adc
stos
sbb
pop
pushf
xchg
test
push
or
int3
jae
jnp
test
mov
mov
loope
aad
loop
cli
pop
and
mov
faddp
inc
mov
mov
xchg
mov
out
fbstp
movsl
mov
cmp
jecxz
mov
insl
sahf
mov
xor
cmpsl
add
xor
dec
adc
dec
jmp
cltd
fcoms
jae
sub
mov
lock
icebp
in
sbbl
xchg
ss
and
test
cltd
add
movl
iret
cmc
inc
out
jnp
jno
add
dec
inc
popf
mov
aam
dec
mov
dec
dec
mov
xchg
popf
xchg
mov
aaa
jnp
in
add
mov
std
cmp
loope
adc
jae
mov
pop
bound
adc
and
negb
cmpsb
popf
mov
inc
imul
cmp
xchg
lcall
push
faddl
mov
dec
mov
sbb
or
adc
outsb
xchg
stos
dec
dec
mov
add
push
sbb
sub
leave
lods
gs
lods
sti
cmpl
fdiv
jg
adc
mov
mov
mov
or
je
push
sub
lods
insb
lods
xor
mov
add
fistpl
cltd
negb
mov
dec
sbbb
mov
std
sarl
mov
mov
cmc
popf
dec
sti
or
mov
xchg
dec
nop
sbbl
mov
gs
arpl
push
ret
fcmovnbe
inc
push
fcomp
std
out
pop
imul
and
imul
mov
cmp
jo
cmc
and
jne
lock
and
mov
insb
shll
daa
pop
cmpsl
aas
adc
push
adc
cmc
out
dec
icebp
mull
movsb
pushf
mov
scas
mov
in
inc
or
int
int
fld
mov
cmpsb
mov
stc
add
and
out
clc
cltd
das
adc
cmpsl
sahf
in
pushf
jae
mov
dec
add
arpl
test
pop
jbe
xor
dec
mov
nop
ficoml
jnp
xor
xchg
and
mov
mov
orb
incl
pusha
xchg
inc
add
pop
pusha
into
ret
orl
in
aam
jle
mov
std
fdivrl
dec
mov
call
jmp
dec
or
push
das
xor
pusha
movsb
xchg
cmp
ljmp
push
jb
pop
xor
hlt
out
or
dec
mov
loope
sbb
mov
sub
jno
mov
add
enter
test
and
mov
sti
mov
ror
sbb
or
mov
adc
push
xchg
add
and
mov
inc
dec
sti
mov
mov
aaa
pop
lcall
mov
xchg
clc
jb
xchg
jge
fmull
cwtl
cld
shr
outsl
and
leave
in
or
adc
insb
push
jbe
lock
stos
mov
push
sbb
cmpsb
xchg
xchg
movsl
js
repnz
or
mov
add
jle
arpl
sbbl
out
mov
in
adc
fcmovnbe
call
xor
push
popa
mov
cmp
ret
sbb
sub
ljmp
lds
adc
mov
testb
js
push
loop
pop
sbb
xchg
cmc
shrb
shrl
xchg
imul
test
push
ret
insl
add
or
scas
sub
xor
cwtl
mov
out
mov
mov
sbb
cmp
lds
pop
stos
jb
mov
pop
push
inc
xor
clc
add
sbb
inc
fidivl
movsl
pop
mov
jnp
cmp
fdivl
jbe
jbe
pop
loop
add
sub
xor
or
shrl
rolb
jae
pop
mov
fcompl
and
adc
cmp
mov
imul
mov
or
add
fidivrs
xchg
cmp
adc
pop
lock
lods
ret
inc
dec
scas
mov
ss
adcl
mov
test
je
inc
in
sub
add
push
mov
addr16
and
outsb
sub
pop
ret
cmp
in
mov
sbb
in
xor
jl
sbb
test
test
mov
andb
pop
flds
and
xchg
js
xor
lahf
out
mov
cwtl
sti
xchg
add
mov
cltd
sub
push
out
xchg
push
popa
pop
je
aas
cmc
pushf
cmpsl
leave
fcoms
flds
mov
rol
insb
ficoml
into
xchg
ret
mov
xchg
shlb
loop
in
scas
push
int
push
pop
jmp
stos
cld
mov
hlt
fimull
mov
movsl
push
push
bnd
filds
sbb
xor
out
std
ret
jbe
aad
leave
sbb
ss
and
faddl
call
and
aad
xchg
push
aam
les
cwtl
cwtl
adc
mov
or
xlat
test
cmp
xor
lods
fidivl
mov
into
add
inc
inc
jnp
shl
outsb
mov
aas
xchg
or
cmp
inc
daa
in
jmp
xchg
cmc
cmpsb
or
push
test
in
outsl
cmp
sub
mov
cmp
dec
repnz
sub
sbb
xlat
mov
inc
out
lahf
mov
arpl
jmp
xor
shrl
add
scas
loop
xchg
pop
mov
std
inc
or
mov
ret
mov
push
cmp
cltd
int3
jecxz
adc
mov
dec
mov
iret
dec
inc
inc
arpl
cld
jbe
xchg
sub
xchg
mov
cmp
enter
stos
sbb
and
mov
cmp
push
sahf
ss
inc
sub
add
ret
stos
pop
or
and
cmpsb
mov
popa
dec
lds
inc
mov
sbb
push
aas
fisubs
lret
adc
stc
fs
push
add
les
sub
adc
xchg
cmp
movsl
push
inc
push
or
nop
pop
stos
cmp
bound
sub
or
repz
mov
mov
ret
push
xor
mov
push
movsb
push
pop
call
push
sub
int
out
lea
mov
xor
adc
mov
add
std
pop
push
jo
jns
sahf
lahf
loope
enter
bound
xor
insl
insb
aas
sub
add
and
or
sti
xor
in
jno
jg
fcmovnb
aad
dec
mov
push
pop
out
inc
jg
aad
or
loope
lret
lds
sbb
frstor
pop
dec
push
push
jns
pop
addl
stos
xchg
push
das
cmp
pusha
out
adc
ret
movsl
add
xor
fldl
and
ret
sbb
lods
mov
loopne
js
dec
inc
inc
cmpsl
sub
dec
or
adc
fsubl
push
inc
test
aaa
arpl
sub
fisttpl
cmova
gs
dec
sbb
test
aas
stc
and
mov
shrb
cli
cmpb
xchg
outsl
pop
dec
mov
das
gs
jge
cmp
leave
mov
push
mov
xchg
push
mov
adc
mov
dec
jno
mov
loop
mov
ds
cli
add
mov
les
and
jbe
shl
push
jl
testl
jb
xor
fildll
cmp
or
ja
sub
lods
pop
cmp
fldcw
pop
push
push
clc
addb
mov
mov
pop
jmp
loopne
jno
popl
test
mov
daa
dec
xchg
push
xchg
fs
sbb
sbb
test
nop
cmp
xor
nop
xchg
std
cmp
loope
push
daa
arpl
and
and
and
daa
shrb
push
dec
mov
cmc
dec
aad
inc
xor
push
fidivs
jno
mov
test
pop
data16
nop
mov
and
imul
movsl
lds
cmp
std
xor
enter
mov
inc
and
cmp
xor
icebp
xor
cltd
repnz
mov
clc
cmp
shrb
aad
and
mov
enter
mov
loopne
jae
es
mov
push
js
push
inc
fsubrl
jnp
hlt
cltd
movsl
mov
jp
pop
and
push
jns
jns
xor
addr16
mov
in
xor
sub
sti
inc
push
inc
add
in
mov
dec
mov
int3
notl
pop
idivb
clc
arpl
dec
mov
test
nop
inc
xchg
mov
mov
subl
ljmp
or
pop
mov
push
adcl
sbb
pop
xchg
repnz
and
mov
cmp
ss
call
mov
jo
mov
out
xchg
adc
cld
loope
aam
cwtl
mov
in
inc
mov
fwait
loopne
and
mov
cltd
arpl
xchg
fisttpll
stc
push
mov
mov
shrl
sbb
outsl
mov
pop
testl
mov
adc
mov
cli
aam
add
sbb
cs
shrb
jb
out
jo
out
iret
mov
aas
pop
and
jmp
mov
push
xorl
xchg
clc
aaa
pop
pusha
lea
sarl
mov
adc
fisubrs
sub
and
push
sub
in
imul
cmp
jmp
mov
mov
loope
mov
dec
add
sub
imul
leave
bound
rorl
dec
adc
arpl
jbe
popf
jo
nop
ja
shlb
sbb
sarl
fs
neg
fisttpl
sbb
fmull
pop
jecxz
iret
into
dec
inc
lea
cld
out
lea
sub
sar
mov
push
dec
scas
decb
push
push
sbbb
lcall
or
inc
subl
cmp
jl
mov
push
add
js
inc
jle
fcmovnb
cltd
cmp
jle
stos
mov
inc
xchg
cmp
into
aas
xchg
fcmovnb
and
aas
sahf
cmp
mov
fs
pop
xor
pop
inc
or
dec
bound
bswap
dec
je
xor
cmp
loop
mov
pop
std
test
sbb
or
call
gs
cltd
je
sbb
cmp
mov
or
mov
xchg
std
jns
scas
rcl
movsl
sbb
cld
mul
push
cli
mov
xchg
les
bound
leave
aam
jae
xlat
daa
rolb
adc
and
mov
fwait
adc
and
gs
lahf
sub
outsl
push
out
arpl
mov
outsb
xor
clc
je
fidivrl
pop
pushf
xor
fs
jo
into
mov
rorl
stos
add
scas
lret
test
pop
xchg
lcall
dec
xor
push
adc
jl
arpl
push
mov
or
ljmp
jno
cmp
inc
addl
mov
jp
jp
sbb
jmp
pop
andb
xchg
rclb
int
mov
mov
test
add
sbb
pop
int3
or
and
popf
imull
mov
scas
in
in
imul
aad
les
cmc
pusha
icebp
in
mov
pop
ret
xorb
xchg
xor
std
cld
call
and
out
add
lahf
mov
jle
inc
pavgb
mov
sub
dec
insb
cmpsl
push
mov
add
xor
mov
vmovdqu
es
or
add
test
dec
jo
aad
fsubs
cmc
fs
arpl
insl
fisubl
jbe
mov
negl
jno
sbb
mov
popa
pop
jecxz
push
xchg
sti
mov
shlb
push
sti
in
scas
add
lcall
sub
mov
pop
sarb
add
stos
sub
inc
int
stc
xor
fwait
xchg
ss
out
lret
jecxz
mov
push
adc
and
push
push
sub
mov
mov
out
inc
shl
enter
aam
mov
mov
jge
jmp
mov
dec
leave
jp
leave
sub
mov
cmpsl
cmc
and
insl
popa
or
sbb
add
aad
mov
pop
ja
add
sar
push
push
dec
stc
ja
jnp
neg
xchg
cmp
pop
ficoml
mov
aad
daa
mov
mov
cltd
adc
in
sub
push
cmp
cmpsl
mov
out
dec
sti
and
adc
out
fadd
mov
in
jg
xor
push
jg
mull
ret
sub
hlt
pop
jmp
xor
pusha
and
cmpsl
sbb
xor
lret
stc
and
xchg
sub
lods
mov
jns
mov
cmp
decl
xchg
mov
and
cli
movntps
sbb
push
jbe
das
mov
mull
lret
and
inc
popf
addr16
add
pusha
ds
cmp
jno
mov
out
mov
jo
jne
push
ret
push
sub
mov
add
xor
gs
mov
adc
stc
jmp
nop
insb
out
pushf
in
scas
in
repz
jnp
ljmp
js
das
push
fucomp
and
jge
adc
push
shr
or
or
add
jb
sbb
sub
add
cmpsl
and
mov
iret
cltd
fcmovb
insl
cmp
adc
cmp
and
xor
adc
sbb
scas
lcall
clc
cmp
pop
aad
cltd
jo
and
jl
ss
clc
out
push
sti
pop
xchg
and
or
lret
jae
mov
jp
sbb
xchg
push
sbb
xchg
and
sbb
and
xor
sbb
inc
xchg
andb
push
sub
popa
cmp
cli
test
notl
push
addr16
pop
rorb
cs
enter
jp
mov
mov
jnp
js
bound
jl
jge
arpl
push
stos
loopne
inc
adc
cmpsb
jae
cld
xchg
sbb
pop
clc
pop
cmpsb
jg
cwtl
sbb
or
mov
pop
cs
jno
jecxz
mov
movsb
negl
and
js,pn
add
mov
sbb
popf
xor
adc
pop
clc
cmpsl
inc
loope
sahf
xor
mov
xchg
call
cmp
or
ljmp
sahf
sbb
and
cmovno
movsb
adc
cli
adc
and
inc
cmpsb
arpl
mov
cmp
movzbl
jae
cmpsb
cmpsb
ds
fcmovne
ds
je
cmp
dec
add
sub
cmpsb
popl
adc
cmp
xor
lea
outsl
and
mov
mov
out
pop
je
mov
shlb
and
int
push
shlb
imull
mov
cmp
and
or
pop
mov
push
movsl
ret
or
mov
shll
into
jnp
add
inc
push
fsubl
sub
cld
cmpsl
cmpsb
sbb
xchg
xchg
enter
push
xchg
mov
xchg
aam
or
aaa
xorl
or
in
adc
jmp
xor
bound
loope
je
and
vmovss
imul
cmp
xchg
sbb
jnp
insl
adc
inc
js
in
mov
pushf
mov
mov
add
jg
pop
sbb
add
pop
inc
or
je
scas
xchg
cmpsl
movsl
inc
xor
xor
cld
mov
mov
push
in
stc
or
ljmp
pushf
orl
mov
mov
cmp
test
pop
out
aaa
out
out
jle
mov
shl
loope
test
mov
pop
sub
in
mov
xorl
leave
adc
sti
adc
mov
lock
mov
mov
jmp
or
les
stos
xchg
xor
movsl
insb
jmp
fnstenv
ret
xchg
jns
repz
pop
dec
fs
into
and
loopne
jl
cld
and
popf
mov
push
insl
adc
add
es
pop
rcr
idivb
xor
lock
iret
adc
mov
std
frstor
push
ds
into
imul
cmp
or
mov
mov
std
dec
mov
int3
repnz
cwtl
sub
sbb
mov
xchg
into
inc
cli
repnz
pop
jp
or
xchg
mov
repz
int3
mov
jne
mov
dec
or
rcl
in
in
sub
mov
push
push
or
ljmp
inc
sub
jl
aas
add
add
shll
push
insl
shll
cmp
fimuls
pop
shr
repnz
out
and
lods
fldt
sbb
lea
jge
mov
mov
test
jecxz
add
inc
int3
ret
push
and
ljmp
jo
mov
cmp
add
lds
xchg
or
push
dec
inc
jbe
dec
imul
imul
dec
dec
mov
sub
loop
ficoml
dec
adc
testb
sub
dec
adc
sahf
adc
out
test
out
jecxz
cmp
cmp
mov
aam
mov
loop
insl
or
cltd
test
mov
faddp
or
add
adc
pushf
and
xchg
mov
int3
orl
or
pushf
addl
jle
shrl
imul
adc
aaa
scas
or
fwait
sbb
stos
aaa
mov
mov
ds
test
sbb
mov
mov
out
sbb
stos
test
dec
xorb
cmpsl
xor
gs
lock
sbb
icebp
fcoml
pop
shlb
cmp
aaa
iret
sbb
mov
pop
dec
jne
lods
call
and
sbb
pop
jge
lcall
iret
pop
mov
add
mov
push
add
scas
push
add
int3
imul
sbb
push
test
add
inc
aas
jl
imul
mov
jmp
sub
repz
pusha
cmpsl
out
jl
cmpsb
orl
roll
mov
or
outsb
xchg
push
jmp
stos
outsb
js
mov
ret
jecxz
rcl
in
fsts
pop
aad
enter
xor
xor
ja
sbb
lahf
cltd
mov
icebp
movsl
sbb
stos
mov
mov
or
pop
push
movsl
into
arpl
xlat
xor
push
dec
pushf
pop
ret
push
and
insb
into
pop
add
decb
pop
push
pusha
xlat
loopne
cmpl
lea
loope
mov
lds
or
pushf
mov
clc
jno
mov
xchg
repnz
clc
jno
pushf
outsl
mov
mov
mov
push
ss
lock
clc
or
cwtl
dec
pop
fcmovu
out
or
js
outsb
loop
popf
mov
aam
push
fsts
imull
pop
jnp
xorl
ja
jmp
pop
shlb
pop
ss
gs
sbb
sbb
into
iret
fdivrl
pop
push
cmpsl
ud0
dec
xlat
int
mov
outsb
mov
pop
pop
ljmp
out
arpl
push
or
rclb
jp
mov
lret
cmpsl
dec
bound
mov
ret
sub
jle
mov
sub
dec
fsubrl
and
jecxz
outsl
repz
xor
dec
jecxz
les
add
rcrl
pop
gs
aaa
push
add
jne
std
outsb
test
daa
xchg
ret
out
adc
adc
subb
mov
addr16
adc
pusha
or
repz
fildl
jno
aad
jle
int
add
xchg
pop
jne
cs
aad
popf
jl
push
push
into
push
in
dec
les
xorl
adc
fnsave
into
jo
push
imul
js
add
pop
loopne
pop
xchg
sub
and
popf
js
dec
inc
ljmp
cld
movsb
push
pop
and
add
lods
mov
and
test
add
cmpl
jmp
popa
sbb
sub
inc
loopne
mov
lret
mov
jp
std
inc
adc
outsl
cs
jg
lret
pusha
and
mov
imul
inc
jge
das
pusha
out
xor
cld
mov
in
dec
jmp
ljmp
out
mov
and
imul
je
jp
in
pop
fcomps
sub
pop
mov
fdivl
pop
or
push
popf
xchg
scas
xchg
aas
shll
aas
mov
push
loope
test
imul
inc
ja
sbb
imul
adc
es
jne
in
pop
imul
dec
cmc
cld
pop
int3
jo
jle
pop
add
test
inc
cmp
loope
loop
adc
in
mov
out
mov
mov
mov
aas
leave
setle
mov
ret
mov
sbb
int
idivl
xchg
sbb
fcomip
adc
xchg
sbb
sub
movsb
inc
push
pop
icebp
add
or
add
push
jp
aad
xor
or
xor
or
inc
out
or
adc
and
das
push
std
je
enter
push
xchg
sbb
stos
aaa
cld
sbb
aam
sbb
mov
adc
adc
pop
or
jle
icebp
adc
aam
pop
sti
xchg
fldenv
fdivrs
lods
aaa
mov
inc
add
cltd
cmc
lcall
cli
inc
jmp
in
arpl
mov
sub
mov
push
cmp
stos
arpl
xor
outsl
fistl
testl
mov
jge
mov
out
push
sbb
add
and
mov
mov
jl
pop
mov
sarb
ljmp
lods
add
js
xchg
jnp
xchg
pushf
pop
cmp
jae
sub
sub
pop
mov
jmp
jno
dec
push
pop
sub
fisubrl
jp
mov
push
mov
mov
ret
hlt
mov
subl
aaa
and
dec
out
hlt
mov
xchg
arpl
scas
dec
sub
dec
add
and
rcrl
sub
push
cmp
push
loop,pn
add
inc
xchg
dec
jmp
loop
push
gs
fs
ljmp
filds
mov
jnp
mov
stos
sarl
add
shll
sti
rorb
insb
adc
arpl
stos
lds
lret
insb
push
in
xor
mov
cltd
or
lea
insl
lret
sti
ficompl
lea
xchg
sub
fildll
lcall
cmp
xchg
and
jmp
int3
cmp
inc
jp
add
push
push
repz
ret
pop
jmp
loopne
push
movsb
or
addr16
mov
push
push
jno
push
test
and
pop
aaa
aas
xor
inc
xchg
and
sbb
lcall
shlb
arpl
mov
or
push
cmpsl
aad
sub
sub
test
lods
rep
adc
xor
loope
lea
sub
push
sahf
in
aas
outsl
add
and
into
clc
mov
mov
andb
or
bound
cmp
push
cmpsb
and
aad
or
or
sbb
lret
outsb
dec
rorb
addr16
ljmp
fldt
mov
cmp
and
inc
repnz
adc
and
mov
loop
jne
dec
lea
mov
cmovne
fs
mov
jg
cmp
jge
divl
mov
lock
jg
adc
scas
popa
lock
je
pop
test
jbe
test
push
xor
cmpsb
cmp
mov
enter
cltd
add
adc
xor
inc
stc
sahf
in
cli
jp
fwait
lods
jae
pop
add
les
popa
pushf
into
xchg
sub
xchg
adc
sub
ret
sbb
shr
pop
inc
aad
xchg
aad
add
sbb
or
je
add
inc
xchg
in
adcl
imul
rclb
inc
ret
pop
cs
loopne
sbb
test
movsl
or
jp
pop
dec
scas
add
inc
cmp
pusha
dec
out
sub
cmp
lods
dec
push
jne
loopne
pop
jae
sahf
jb
movsb
lods
push
sbb
enter
push
inc
divb
mov
insl
sbb
arpl
js
cld
adc
sub
stos
adc
imul
cmp
ret
roll
xor
daa
outsb
mov
jo
xor
or
stos
xor
fildl
or
outsl
sub
hlt
addr16
jne
inc
jmp
fcom
divl
test
dec
mov
movsl
mov
roll
setge
pop
sarb
test
testl
jmp
inc
add
scas
ficoms
es
sbb
fdivrs
lock
pop
mov
and
sti
sbb
clc
ret
fnstenv
call
pop
sub
icebp
or
and
mov
lret
and
push
dec
repz
jns
rcr
int3
push
cmp
gs
sub
dec
push
lods
dec
and
pop
jae
lds
clc
lea
mov
popf
popa
cmp
sub
mov
int3
xlat
shl
or
fdivrs
xchg
loopne
sbb
and
add
xchg
xchg
push
pop
hlt
push
hlt
test
pop
push
or
cmp
ljmp
outsb
mov
jp
push
push
mov
sub
aaa
test
xor
lret
insb
sbb
jl
sahf
push
cmpsl
push
add
mov
and
fsubrl
lods
xchg
sub
movsb
xchg
xchg
sbb
daa
jl
push
mov
outsb
ljmp
cmp
les
les
and
arpl
ficompl
test
push
sbb
pop
flds
inc
push
push
testl
add
push
sub
sub
add
jns
mov
mov
pop
jbe
insl
nop
popf
jb
pop
out
addr16
mov
dec
push
adc
push
mov
stos
fwait
xchg
aas
es
sub
je
push
pop
adc
xor
arpl
aam
jns
sbb
test
xchg
popf
inc
lods
fiaddl
addr16
jmp
mov
sahf
push
sbb
jl
inc
jle
loopne
jg
push
aam
add
push
into
push
jbe
xor
inc
sub
or
mov
xlat
push
ljmp
jnp
inc
cmp
leave
sbb
inc
cmp
into
xor
cmpsb
jae
in
jle
leave
inc
push
sbb
inc
imul
lret
pop
lret
sbb
jg
xchg
xchg
ret
gs
mov
cmp
sbb
xor
sub
push
add
mul
and
stc
ret
jmp
cmc
jo
sub
xchg
aaa
dec
add
pop
inc
int3
movl
xor
sbb
test
test
mov
mov
cmp
inc
incb
syscall
daa
push
repnz
testb
push
pop
fadds
outsb
mov
gs
inc
or
gs
pop
adc
pop
popf
rcrl
test
call
rcrb
xorl
xchg
test
out
jo
xchg
and
loope
loopne
into
movsb
daa
loope
pop
cmp
cltd
lods
out
lods
cmp
shrl
mov
je
pop
jl
mov
sarl
daa
mov
fs
popf
ret
mov
sti
sbb
and
cmpsl
xor
stos
sub
imul
jmp
out
cwtl
mov
add
cmp
sbbb
into
fwait
push
hlt
insl
and
andl
loop
dec
push
test
lds
test
cmpsb
leave
xor
insb
bound
fs
icebp
ret
jnp
repz
insl
jbe
mov
shrl
push
nop
dec
bound
insl
movsl
push
push
and
mov
sbbl
inc
push
push
xchg
int
and
imul
mov
ss
mov
xor
nop
adc
mov
test
stc
scas
push
test
dec
lods
movsl
inc
push
pushf
iret
adc
sbbl
sbb
shlb
inc
test
jbe
gs
mov
mov
lock
cs
lea
pop
fwait
pushl
and
and
sub
pushf
xor
mov
pushf
adc
aad
shlb
shrl
fimull
jo
mov
push
xor
xchg
fld
pushf
pop
cmp
xchg
enter
js
pop
mov
adc
into
ljmp
mov
popa
sbb
fistpl
inc
fistpl
jge
incb
fidivrl
mov
test
es
ret
addr16
dec
lret
aam
and
mov
stos
fisttpl
sbb
dec
lods
sub
push
stc
xchg
mov
mov
lret
xor
movsb
decl
sti
add
inc
rorb
or
lods
push
dec
insb
mov
out
dec
jbe
js
mov
push
fldl
push
jbe
int
and
mov
push
pop
fists
jo
sub
nop
mov
mov
pop
push
orb
push
movsb
lock
dec
das
enter
and
sti
aaa
popf
rclb
sub
js
repz
and
ret
add
and
or
in
pop
sub
ret
out
stc
or
sbb
lcall
sub
lea
jmp
adc
lret
and
shll
mov
push
mov
out
sbb
gs
in
cmp
lcall
adc
movsl
and
mov
fstps
je
popf
push
or
jne
inc
or
call
pop
out
mov
sub
loope
ret
out
lea
inc
cmp
and
mov
push
cmp
adc
jle
gs
push
pushf
fsubr
cmp
adc
fincstp
jb
test
sub
fiaddl
outsl
loopne
dec
dec
shrb
sbb
dec
mov
pop
pop
iret
lret
mov
pop
jo
mov
imull
mov
and
cmpsl
lods
xchg
stc
sub
pop
in
outsb
cmc
fistpl
aam
mov
stc
cmp
dec
inc
sbb
jo
into
sub
popa
cmp
and
inc
testl
lds
mov
ljmp
mov
mul
and
pop
and
js
mov
pop
dec
inc
jns
jmp
ss
int3
addr16
xor
add
push
mov
jmp
and
leave
sbb
jb
sub
cmp
mov
les
lods
fstps
nop
adc
in
xor
jg
xchg
lds
cmp
repnz
mov
mov
mov
in
cmp
cmp
dec
or
pusha
adc
in
mov
sub
test
shrb
sub
dec
rcrl
bound
scas
stc
dec
push
scas
cli
adc
js
rclb
hlt
pop
mov
lods
test
mov
mov
sub
adc
pop
aad
jbe
mov
mov
push
movsb
mov
mov
pop
push
daa
lahf
adc
out
xor
ljmp
pusha
fsubrs
lret
mov
adc
lock
jns
ficomps
cmpl
bswap
pushf
jae
add
sahf
mov
pop
dec
mov
notl
cmp
mov
jbe
jmp
outsl
rcrl
cld
adc
hlt
icebp
fimuls
adc
in
pop
push
fdivrl
jl
jae
cld
push
js
aaa
insl
dec
dec
add
pop
xlat
push
xchg
and
sub
dec
gs
xchg
test
sbb
fimull
pop
imul
push
sub
sbb
dec
sub
in
xchg
push
pop
adc
fidivrs
movsb
or
and
stos
hlt
sub
mov
pop
lds
jbe
add
imul
push
inc
push
cmp
clc
mov
pop
pop
sahf
pop
xor
call
inc
sbb
push
das
xchg
int
push
add
xor
cmp
cmc
dec
shrl
scas
loope
sbb
mov
lcall
or
sbb
cld
outsl
pushf
dec
loop
pop
jae
fnstenv
and
outsl
or
jg
and
and
sar
ljmp
std
out
test
dec
lock
cmp
cmpb
add
jb
adc
popa
and
cmp
push
lret
lret
jnp
and
jae
inc
test
insl
add
imull
int3
mov
mov
or
popa
and
xor
or
sahf
loope
sti
test
repnz
in
sarb
xchg
clc
js
adc
loope
add
add
js
cmpsl
outsl
xor
shrb
repz
sbb
fnsave
push
dec
xchg
lahf
in
mov
aas
sbb
sub
mov
xor
into
cmpsl
sarb
adc
ret
repnz
pop
push
or
lea
cld
adc
pop
in
sbb
les
and
lret
arpl
mov
pusha
out
inc
lahf
xor
jb
loopne
bswap
mov
and
stos
xor
inc
clc
imul
iret
jnp
imul
lods
rcl
sub
push
lcall
test
fs
or
sub
sub
fdivrs
lret
mov
das
pop
sub
mov
loopne
in
cld
jecxz
xchg
jle
jp
je
add
and
lahf
inc
rcl
adcb
sub
and
ds
insb
lahf
mov
repnz
cltd
lret
mov
jnp
pop
xchg
inc
add
aas
dec
xor
lods
outsl
mov
push
xlat
mov
inc
arpl
pusha
cmp
push
sub
dec
fwait
lock
jae
mov
cmpsl
fadds
lahf
jp
inc
sub
popa
cmp
pop
ss
es
pop
mov
adc
mov
mov
adc
jle
add
adc
mov
lcall
es
insb
addb
ret
sub
dec
loopne
adcb
push
push
push
and
cmp
divb
dec
mov
lcall
and
pop
adc
fcomip
ret
mov
sub
cmp
jo
adc
and
pop
pop
scas
gs
and
mov
jle
push
sbb
cmp
dec
lahf
xchg
test
mov
mov
sbb
xadd
xchg
sahf
xchg
int3
enter
pop
lahf
mov
ret
nop
clc
fsub
xorl
in
or
pop
movsb
andb
imul
aam
stc
bswap
sbb
mov
lock
mov
xor
adc
and
stos
cmp
jnp
push
hlt
fdivl
and
inc
lea
lds
in
testl
jl
stos
push
fnstsw
shl
aad
int3
push
std
and
inc
sbbl
pushf
test
test
cmp
mov
fisttps
outsb
mov
add
clc
out
add
xor
dec
lods
push
xor
jnp
lcall
xchg
cmp
fistps
cmp
cmp
sarl
mov
pcmpgtb
roll
fistl
push
cwtl
dec
mov
js
clc
pop
rcll
sbb
std
stos
es
fiadds
mov
jmp
insb
or
loopne
xorb
jns
xchg
jbe
cmpsb
fimuls
lahf
daa
fisttps
mov
xor
ret
xchg
inc
cltd
movsb
cmp
adc
imul
aam
leave
arpl
idivb
in
sbb
mov
xor
outsl
roll
rorl
int3
inc
and
sbb
mov
stc
mov
aas
sbb
bound
out
les
loop
mov
cmpsl
dec
xchg
rol
aam
leave
fidivl
nop
idiv
mov
ss
jmp
dec
sti
inc
jmp
movsl
leave
popa
jne
or
mov
push
pop
push
pusha
cld
enter
repz
xchg
lds
in
cwtl
dec
xor
mov
lock
pop
mov
mov
mov
ret
cld
roll
out
push
mov
ja
inc
push
sti
push
jg
ret
jae
fstpt
rdtsc
pop
in
add
mov
cmp
and
mov
sbb
push
fdivp
jecxz
sub
mov
sub
loope
sub
xchg
std
xrelease
pop
mov
dec
and
mov
mov
sahf
xchg
out
jle
and
leave
inc
xor
sub
xchg
mov
mov
cwtl
jmp
vcvtsd2si
dec
idivb
xor
push
gs
sahf
adc
push
addr16
inc
subb
nop
mov
cmc
test
jl
iret
xchg
in
popf
into
scas
mov
test
xor
dec
add
loop
add
push
fwait
outsl
es
sar
jmp
pop
or
sar
lods
push
mov
sub
add
dec
loope
push
or
es
inc
xchg
fidivrs
mov
jmp
in
cltd
es
sub
mov
mov
pop
push
stos
lock
push
gs
or
dec
jo
sub
cmpsl
sub
fbld
mov
stos
loop
mov
xor
mov
cmp
stc
mov
sbb
adc
incl
scas
dec
cmc
roll
data16
and
pop
and
dec
mov
rcrl
dec
out
push
je
push
fnstcw
fimuls
sahf
xchg
int
sub
cmp
ja
dec
sahf
mov
sub
sahf
std
jae
xchg
roll
fwait
movsl
push
or
and
pop
sarl
or
mov
addr16
aaa
and
shrb
mov
mov
lods
pop
sbb
sarl
push
cld
shr
inc
xchg
rcrb
sti
mov
arpl
mov
popf
addr16
sbb
popa
out
pushf
lahf
ficoms
push
xor
repnz
pop
aad
sub
movsb
or
pop
jmp
add
scas
jae
and
push
mov
push
lret
dec
mov
in
sbb
mov
adc
fsubrs
das
jae
testb
repnz
push
outsl
andb
lret
mov
jne
fiaddl
add
add
ds
xor
pop
pop
mov
inc
jno
jae
iret
orb
xor
cmpsl
cld
lret
xchg
repnz
movsl
xor
adc
mov
dec
outsl
subb
out
ljmp
adc
adc
xchg
in
stc
movsl
cmpsb
jecxz
out
scas
pop
mov
lds
cmp
in
xor
std
loop
rol
loopne
icebp
loope
xchg
mov
jecxz
jge
cmpsb
scas
or
pop
dec
mov
lret
in
mov
mov
mov
fmul
outsb
into
test
pushf
lahf
xchg
cwtl
rcl
out
jp
jae
and
cli
out
cmp
sub
adc
push
or
mov
jp
mov
sub
decl
insb
inc
lret
add
mov
jecxz
mov
ficompl
pop
push
js
movsl
js
jmp
dec
mov
lock
push
mov
sbb
jecxz
out
ja
cmc
leave
test
sahf
in
mov
mov
imul
adc
dec
sub
pop
rol
mov
cmp
mov
mov
lcall
pop
inc
cltd
or
or
frstor
and
insb
loop
mov
pop
add
sbb
mov
in
arpl
roll
jle
xchg
or
mov
ljmp
mov
repnz
popa
pop
ds
insl
fdivs
push
in
pop
insl
sub
sub
lods
fisttpl
cs
xlat
mov
data16
out
and
dec
inc
xor
cwtl
pop
mov
mov
xchg
mov
pushf
std
lods
bound
and
and
sub
adc
aad
cld
je
inc
mov
add
in
add
stos
movsl
xchg
lods
ss
xchg
push
cmpsb
lret
popf
inc
lock
inc
push
shrl
cs
dec
jo
addb
mov
aas
sbbl
push
ljmp
mov
pushf
stos
fwait
and
mov
jbe
pop
push
stos
pop
es
or
lock
movsb
ljmp
cltd
adc
fbld
popf
out
push
mov
in
cmp
mov
xor
pop
lock
jae
pop
leave
addb
rcr
dec
mov
push
addr16
inc
lret
sahf
jbe
sub
inc
xorb
mov
jo
int3
pop
roll
pop
repz
sarl
inc
sub
pop
in
ljmp
jecxz
add
xor
scas
js
fs
adc
sub
and
cmp
imul
mov
jae
cmpsb
cmp
ja
bound
int
cmp
push
dec
add
xchg
loope
fiaddl
or
xchg
mov
mov
outsl
and
movsl
inc
hlt
ljmp
pusha
inc
mov
dec
mov
mov
outsl
repz
and
das
jo
rcr
cmp
daa
iret
and
push
xor
push
and
inc
ljmp
jmp
out
lods
into
faddp
arpl
nop
cmpsl
mov
mov
dec
xchg
xor
mov
mov
movsl
out
xchg
out
mov
and
jnp
sub
cwtl
inc
cmpsb
jg
insl
xchg
jg
es
iret
push
and
inc
ret
pushl
mov
jmp
xchg
test
or
outsb
sbb
xor
pop
aaa
data16
push
hlt
dec
hlt
mov
pop
fbld
inc
lahf
jp
pop
sub
and
and
je
pop
or
bound
jle
and
mov
aam
fnsave
xor
pop
add
in
push
inc
mov
lcall
mov
jo
mov
mov
and
mov
roll
divl
cli
inc
imul
pop
iret
inc
cmp
sub
inc
pop
mov
mov
jl
stos
fdivr
stos
lock
scas
data16
das
push
xor
repz
fmuls
dec
inc
lret
aaa
psubb
sub
mov
dec
add
mov
insl
lods
dec
adc
lret
pop
and
jge
mov
shlb
xor
adc
out
and
inc
out
mov
push
in
lahf
ret
shrl
jmp
ss
add
dec
lds
dec
loopne
or
nop
push
out
fmull
sub
push
dec
lods
fnstsw
or
daa
leave
push
mov
jb
stos
rorl
cmp
ret
or
xor
imul
mov
xor
cwtl
stc
cmp
jnp
jmp
cwtl
insb
into
imul
sub
leave
in
dec
cwtl
pop
pushl
shl
lret
xor
je
sub
fiaddl
dec
pop
sahf
xchg
sbb
shr
inc
mov
sbb
pop
push
dec
sarl
sbb
js
jb
fcomps
fidivrl
test
mov
fistpll
or
cwtl
xchg
scas
xor
loope
pop
cmc
fnstcw
inc
in
ss
gs
mov
roll
xchg
mov
mov
lret
push
fadd
sub
icebp
jecxz
lock
lea
mov
test
pop
out
lcall
cmc
dec
add
cmc
adc
mov
lahf
push
dec
mov
loope
and
sub
lods
xor
cwtl
pop
les
lods
lcall
mov
sbb
mov
inc
icebp
jno
shll
jp
inc
sbb
jmp
push
jb
rep
inc
int
cmp
jns
jl
test
test
xchg
out
mov
xor
icebp
cld
imul
in
les
pop
xor
dec
jbe
push
arpl
cld
mov
lret
push
push
mov
sub
jge
cmc
sti
insb
addr16
aam
push
lods
rcll
dec
sub
add
sbb
cmpsb
push
push
rcr
adc
hlt
lea
sub
dec
pushf
outsb
xor
push
pop
lods
fs
push
adc
addb
mov
pop
enter
jbe
push
iret
fmulp
and
cmc
jmp
lea
out
cmp
and
pop
xchg
push
call
xchg
mov
scas
out
jg
ss
mov
sub
xor
ss
pop
inc
jo
pop
sub
adc
push
das
fiaddl
cli
daa
or
mov
jae
adc
shlb
pop
push
je
cld
mov
fmull
push
and
scas
xlat
mov
test
std
push
daa
pop
loop
mov
push
aam
cmp
js
mov
clc
test
out
xchg
push
std
les
dec
test
nop
cmp
cmp
mov
xor
xchg
fcmove
xor
movb
cld
jnp
xor
jb
icebp
cli
mov
cmp
mov
lea
xchg
and
sbb
cmpsb
data16
in
out
ljmp
mov
xchg
pop
and
lret
jge
push
push
cld
and
int
push
jg
in
push
and
xchg
imul
jns
add
loope
into
pop
loop
jg
mov
and
mov
cltd
movsb
cmp
inc
and
subb
jnp
pop
std
cmpsb
in
cli
ret
icebp
stos
cs
cmpsl
cmpsl
adc
mov
push
or
xchg
lcall
pop
lret
imul
sub
jmp
push
clc
loope
xor
jmp
xor
push
std
and
push
outsl
jp
ret
and
divb
je
in
mov
xor
mov
mov
inc
in
inc
and
sbbb
les
cld
stos
lock
mov
and
mov
pop
mov
out
jecxz
data16
sbb
in
cmp
jne
push
pop
leave
loop
mov
das
stos
adc
mov
jle
clc
daa
pop
jg
jb
and
xor
in
leave
xlat
fidivl
sub
cmp
or
subl
leave
jne
mov
add
pop
cmp
leave
pushf
dec
cmp
push
or
mov
xorl
push
cwtl
lea
ss
fsts
imul
jae
test
out
popa
jl
inc
dec
popa
and
fcomps
sbb
lods
outsl
leave
icebp
scas
es
in
push
xchg
push
dec
adc
sbbl
jnp
popf
pop
mov
inc
daa
call
ret
arpl
imul
sbb
xchg
sbb
dec
push
add
add
or
adc
insl
sti
ja
jno
fwait
imul
xor
std
ret
inc
popa
or
leave
out
pop
cmpsb
movsb
dec
inc
std
insb
cltd
adc
pop
out
cltd
xchg
popf
repz
fwait
call
mov
bound
xchg
push
xchg
ret
shlb
cld
incb
mov
addr16
stc
repz
pop
pusha
scas
aas
sbb
xor
xor
add
mov
in
mov
aaa
push
insb
jmp
lahf
dec
push
negl
in
mov
je
insb
xchg
cmp
mov
mov
shrl
das
scas
push
loope
xchg
mov
or
inc
ja
xchg
lret
adc
inc
lods
sti
sbb
mov
and
sbb
arpl
xor
fidivs
lods
adc
pop
xor
sub
dec
cwtl
xor
lret
popa
scas
mov
mov
and
sbb
sbb
pop
jge
inc
in
jne
fistps
out
sub
stos
dec
mov
adc
mov
adc
mov
jmp
sbb
sahf
arpl
add
sbb
dec
adc
pop
movntq
out
mov
pushf
dec
lods
push
loopne
iret
rcrl
flds
xor
lahf
fdivr
push
insb
popf
sub
call
ss
ret
addb
in
nop
lds
sbb
inc
and
push
mov
stc
xchg
push
in
xchg
mov
push
popa
mov
rorb
arpl
dec
cmc
les
cmp
subb
bound
mov
mov
sbb
fbld
xchg
xorl
cwtl
and
shll
mov
mov
aaa
mov
and
mov
pusha
cmp
sub
pop
pop
sub
or
repz
outsl
pop
mov
xchg
jb
aad
das
cld
cmp
stos
scas
movsb
shlb
adc
or
sbb
or
ja
inc
ljmp
push
sbb
mov
lret
mov
lods
imul
aas
or
xchg
mov
sub
pushf
outsl
popf
xchg
mov
in
mov
xor
in
jo
push
xlat
scas
sub
xor
ret
cli
fcompl
fldt
push
jo
add
jecxz
lods
xor
flds
movsb
and
jl
lret
pop
iret
mov
mov
push
dec
sahf
cwtl
scas
xchg
push
test
cli
push
in
cld
dec
lods
or
or
loop
jbe
xchg
jb
ror
xor
loopne
bound
int
jno
mov
pop
ljmp
sbb
add
stos
pushl
insb
and
pop
dec
xchg
jne
in
shrb
or
push
mov
or
jne
insb
shrb
popa
cwtl
and
jg
hlt
outsb
shll
out
fadds
mov
mov
xchg
xlat
adc
mov
or
call
sub
xor
inc
jge
mov
fiadds
cmpl
int3
add
mov
mov
int3
xchg
mov
sahf
das
mov
jl
inc
out
sbb
rcrb
pop
loopnew
data16
pop
xor
pop
mov
imul
or
fsubs
pop
lcall
cmc
leave
dec
xor
mov
cmc
adc
sub
lock
lret
pop
pushf
sub
sub
movb
add
std
cmp
sbb
pop
jnp
shrl
add
xchg
roll
repz
ret
cmpsb
mov
test
imul
mov
push
xor
jle
in
cmp
and
repz
sbb
xchg
ret
out
fldt
add
outsl
mov
rcl
rorb
insl
pushw
aam
sbb
add
incb
mov
and
into
add
ljmp
pop
sub
fwait
dec
ds
fsub
xor
popf
lret
sub
popa
rorl
add
ljmp
cs
enter
pop
add
sti
mov
or
push
inc
in
js
inc
xchg
inc
pusha
jecxz
cwtl
arpl
mov
test
test
movsl
outsb
daa
xchg
add
rorl
outsl
rcrb
dec
pop
hlt
inc
nop
or
mov
imul
fdivrl
cmp
mov
pop
test
in
pop
fisubrs
std
pop
push
cmc
testb
xchg
sahf
sysret
and
sbb
push
pop
movsb
or
imul
xchg
push
cs
jmp
push
cmp
dec
nop
js
sub
jbe
lea
cmpsb
ret
xchg
pop
xor
push
xchg
lods
into
mov
or
icebp
filds
or
test
mov
cmpsb
sarb
inc
loopne
jmp
jne
outsb
xor
in
daa
lret
inc
mov
int3
push
mov
cmp
out
pop
std
cmc
inc
push
sub
add
xor
cmpsl
mov
ret
mov
xor
sub
inc
or
les
xor
addl
and
pop
add
cs
js
rcll
lock
iret
mov
push
inc
ficomps
cld
cmp
test
test
leave
sub
xchg
and
dec
mov
pop
add
xchg
cmp
out
cmp
dec
arpl
aad
xlat
mov
lcall
repnz
push
out
mov
fmul
and
gs
xchg
pop
push
in
sbb
loope
jl
int3
int
add
in
or
and
and
ret
cmc
add
in
in
adc
leave
jns
mov
lock
aad
inc
mov
outsb
or
jmp
mov
push
push
lret
dec
cwtl
push
add
add
test
pop
add
ss
nop
movd
or
lret
xor
fcom
cltd
jne
xor
in
aas
push
mov
das
scas
icebp
gs
and
jne
out
push
xor
pop
mov
add
or
das
mov
push
sub
xchg
sbb
or
movsl
pop
push
fsubs
dec
les
cmc
pop
mov
lcall
xor
push
adc
mov
jp
mov
lahf
xchg
stc
pop
dec
xchg
das
adc
or
pusha
mov
je
int3
mov
or
add
mov
stc
mov
inc
and
daa
mov
daa
add
pop
jo
dec
pop
ss
pop
sbb
jns
call
je
sbb
stos
mov
xor
fwait
adc
hlt
es
push
ficompl
xchg
iret
loopne
add
or
ret
dec
add
mov
outsb
sub
lock
scas
sbbb
adc
adc
pop
and
mov
das
push
push
dec
adc
lret
ljmp
pop
fnsave
imul
hlt
mov
bound
sbb
dec
dec
xor
xchg
shlb
loope
in
push
fwait
mov
mov
scas
test
test
repnz
scas
dec
xchg
push
jo
icebp
push
push
pushw
mov
xchg
pop
clc
lahf
mov
jecxz
jb
adc
xor
roll
sbbl
sub
inc
cmovno
fs
stc
ret
sbb
arpl
aam
rcl
imulb
mov
inc
in
jge
movsl
jle
add
mov
mov
pop
mov
push
std
pop
mov
add
cmp
arpl
pushf
pop
gs
push
mov
mov
pop
addr16
rolb
insb
push
movsb
adc
in
test
inc
jne
dec
cmp
popa
and
xor
jbe
fwait
pop
sub
fmul
pop
jb
xchg
bound
mov
push
js
lcall
test
jb
sub
pop
mov
cmp
mov
sbb
dec
movsl
dec
subl
aad
shrb
lods
jne
cmp
imul
pop
push
daa
xchg
addr16
std
mov
cmp
lret
xchg
stos
fiaddl
dec
iret
add
es
dec
add
jno
cs
scas
add
ja
add
imul
fadds
arpl
clc
in
xchg
iret
cmpsb
add
inc
aas
lds
mov
pop
inc
mov
loop
adc
add
mov
jne
fnstenv
sbb
notb
inc
jl
xchg
cltd
cwtl
data16
jbe
repnz
aad
imul
mov
jmp
xor
addr16
mov
mov
jae
push
inc
sar
test
int
inc
adc
pop
int3
xor
cld
scas
out
cmp
mov
test
jle
pusha
xor
sub
fcompl
or
cld
jge
sub
mov
mov
icebp
fs
lahf
pop
call
xor
bound
out
cli
clc
xchg
decb
xor
in
sbb
test
add
adc
rcrl
scas
or
jmp
negl
addr16
sub
sub
inc
rolb
icebp
dec
je
mov
mov
cwtl
jnp
or
shr
aam
notb
je
push
and
nop
pop
pop
les
shll
bound
lock
mov
push
jl
or
mov
ficoml
hlt
testb
mov
lea
js
mov
jmp
dec
ficoms
ret
pop
adc
sbb
and
enter
nop
shll
jno
xchg
movsbl
out
sub
popa
cltd
daa
mov
mov
mov
mov
dec
xchg
xchg
pop
lahf
jmp
pop
enter
lret
mov
sbb
xchg
lock
fwait
push
bound
jno
enter
cs
lret
jecxz
mov
add
nop
add
das
pop
add
aas
and
jns
cmpsb
sub
push
ljmp
bts
add
sbb
adc
aaa
lea
and
jg
mov
ret
xlat
mov
pop
mov
mov
mov
pop
decl
inc
sub
stos
and
cmpsb
cmp
cmpsl
sbb
leave
ja
int
leave
adc
lods
jns
push
lret
adc
loop
sub
daa
adc
je
or
mov
test
push
loope
inc
pop
push
int
int
popa
test
mov
or
cmp
mov
ret
movl
mov
add
mov
cmp
mov
fiadds
cmp
mov
inc
sub
xchg
adc
sar
cmp
or
scas
ja
stc
popf
shrl
fs
xchg
sub
cld
loopne
mov
mov
dec
cmpsb
dec
test
ret
orl
push
push
dec
adc
push
push
sub
loop
movzwl
aas
int
push
movsb
or
seta
push
aad
jb
xchg
push
imul
faddp
or
mov
sbb
hlt
jge
mov
dec
gs
push
adc
cld
xlat
mov
xor
jp
sub
pop
test
inc
add
xor
pop
es
push
pop
lretw
cwtl
jle
dec
xlat
fwait
pop
cmp
fnstcw
mov
jp
mov
ss
push
mov
xchg
cmpsb
sbb
pop
and
imulb
or
jns
jbe
ljmp
aaa
adc
out
and
add
and
lret
push
test
jg
jne
fiaddl
push
adc
push
push
mov
jp
aaa
or
lods
mov
xchg
push
pop
je
sub
xchg
outsb
xor
sbb
lds
add
sbb
adc
lgs
xchg
andb
iret
and
and
inc
or
stc
and
cltd
dec
out
pop
in
mov
shll
cmp
xor
jae
sbb
xorl
iret
push
lods
jp
xchg
inc
mov
adc
shll
mov
mov
test
stc
test
pop
add
ja
or
subb
ljmp
imul
mov
shlb
sbb
shll
fsubp
xchg
jo
and
test
lret
jp
clc
das
movsl
pop
mul
loope
sbb
sbb
pop
mov
loopne
xorl
cltd
push
fimuls
push
aad
out
dec
sarl
stos
lock
push
cmp
and
scas
pop
mov
repnz
add
nop
push
pushf
mov
fidivrs
cmpl
lcall
xchg
xchg
in
incb
enter
enter
mov
inc
sub
cmc
lea
xchg
aam
stos
mov
imul
loopne
jle
lods
adc
ret
je
inc
jne
fs
dec
fistps
test
jnp
dec
and
push
ret
loope
jnp
cld
sahf
les
jae
ficomps
fisttpl
cmp
or
sub
mov
cmp
mov
cmp
aas
add
mov
je
sub
push
pop
add
and
jae
pop
movsb
lcall
jae
popa
cmpsl
and
jb
adc
int
xchg
mov
jne
jecxz
leave
pop
in
adc
sbb
add
mov
fsubp
gs
jmp
push
cli
ja
sub
addl
fbstp
sub
xor
add
pop
ja
sub
dec
adc
xor
add
jae
jge
xor
int
mov
sub
lock
in
xor
cwtl
mov
mov
cwtl
das
pusha
lods
mov
xchg
or
and
loop
pushf
out
push
lea
push
jg,pn
mov
add
xchg
fisttpl
imul
cltd
add
stos
les
mov
mov
xor
jp
jns
ret
xchg
sbb
mov
and
cmp
aad
clc
sbb
mov
arpl
out
sbb
cmp
jae
pop
mov
cmp
in
add
stos
movl
out
std
lret
xor
dec
mov
aas
in
test
fisttpl
call
mov
push
push
pop
inc
mov
mov
data16
sbb
sub
out
mov
adc
mov
lahf
and
loope
jmp
jl
adc
repnz
jae
mov
xor
jp
mov
cmp
pop
pop
insl
xor
jnp
gs
sbb
push
push
fisubl
bnd
xchg
test
mov
loopne
out
jp
fcoms
lahf
pusha
inc
mov
xchg
lods
lahf
ja
pop
repnz
inc
jae
aaa
addr16
mov
scas
sbb
test
mov
faddl
add
inc
sub
push
rol
sub
dec
fistps
jae
sbb
xchg
pop
or
jp
jb
icebp
mov
pop
ds
daa
push
popf
test
ret
out
lock
lahf
aam
les
pop
jb
cmc
adc
popa
xlat
adc
cs
cmp
or
cmp
pop
cli
inc
dec
imul
fcmove
arpl
xor
rolb
jp
dec
push
in
jmp
incb
add
orb
xor
jns
inc
push
inc
cmpsl
inc
xorl
mov
das
dec
pop
dec
scas
inc
clc
push
mov
andl
rcll
xor
push
ret
cmp
xor
adc
cmc
dec
cwtl
femms
or
lock
cmp
ss
sarl
sbbl
push
lahf
sub
inc
mov
cmp
sub
cs
aam
cmp
rorl
mov
lock
sarb
nop
jl
rcrb
stc
call
adc
scas
cmp
ds
cmp
movsl
adc
addr16
push
scas
mov
sbb
adcb
push
lds
mov
cmp
adc
in
sbb
cmp
add
pop
xor
das
xor
idiv
pop
add
xchg
mov
mov
ret
and
mov
sub
or
xchg
ds
lret
iret
pop
push
push
gs
mov
sbb
lods
mov
insl
andl
jp
sbb
repz
sub
pop
and
or
lds
dec
nop
sub
and
cmp
cmpsl
jmp
lods
or
ret
fistpll
dec
popf
xchg
aaa
sbb
inc
inc
cmpsb
leave
and
or
xchg
ret
mov
mov
repnz
mov
or
xor
or
into
mov
in
and
adc
pop
mov
cltd
adc
mov
div
into
ret
addr16
sub
jne
mov
push
test
pop
inc
in
out
sub
dec
stos
dec
ja
cmp
pop
leave
add
adcl
or
inc
pop
shrl
leave
repz
add
xchg
xchg
inc
cmp
loopne
fs
adc
push
jge
in
sbb
push
xlat
push
iret
inc
xchg
cltd
leave
mov
jne
arpl
icebp
xor
dec
xchg
add
les
ds
fnstcw
push
gs
inc
pop
icebp
mov
lea
imul
sbb
xlat
sahf
es
fidivl
fldenv
jl
push
ljmp
adc
ret
out
jo
push
jge
mov
cmpsl
mov
pusha
sti
pop
das
jae
jae
push
inc
pop
jmp
mov
xor
movsb
pop
cmp
je
cmp
ret
test
fistpll
leave
pop
pop
sub
xor
incl
lods
add
sub
dec
mov
jl
std
xchg
cmc
xchg
inc
adc
addl
sbb
test
call
test
pop
pusha
mov
imul
or
pop
pop
cmc
pop
mov
loop
xchg
leave
jmp
mov
add
cltd
adc
xchg
dec
loope
push
push
shr
mov
sub
mov
adc
cmpl
dec
inc
shrl
insb
idivl
lahf
jno
mov
push
jnp
ret
mov
sub
dec
stos
xor
std
fwait
pusha
mov
mov
xor
jno
int
cmpsl
pusha
fcmovnb
into
std
mov
stc
lret
dec
ja
cmp
sbb
xchg
shrb
jo
inc
or
pop
and
mov
or
in
mov
sti
xor
adcb
das
adc
xchg
mov
je
jno
mov
cmpsl
adc
push
sbb
stos
movsl
sub
fwait
cmp
push
or
sub
sbb
mov
sub
dec
sub
dec
mov
xor
mov
data16
scas
aam
les
inc
or
in
hlt
sbb
mov
add
sub
fldt
and
repz
dec
loope
jae
fmull
sub
mov
xchg
push
in
fucomi
push
adc
sbb
nop
dec
sbb
sbbb
push
lods
test
pop
sbb
scas
adc
push
dec
dec
repz
push
adc
xchg
dec
lcall
lcall
shll
dec
lret
sub
mov
jo
retw
or
std
xchg
mov
and
scas
sub
das
dec
sbb
sub
icebp
push
lahf
cld
xchg
adc
jb
jmp
or
fwait
popa
sub
mov
ret
xchg
aas
mov
and
ret
xor
cwtl
adc
xchg
nop
jbe
test
adc
cmpsb
xlat
std
roll
inc
pop
mov
jg
sti
mov
xlat
mov
mov
aaa
loope
cs
mov
mov
mov
push
mov
rorl
rorb
mov
enter
popa
dec
sbb
dec
pushf
sbb
mov
mov
pushf
sbb
mov
cmpsb
sub
jecxz
mov
scas
insl
cltd
push
mov
sub
into
mov
push
sub
push
sub
pushf
xchg
and
scas
jb
and
in
inc
cwtl
daa
push
xchg
inc
lock
arpl
adc
pusha
aam
and
inc
pop
dec
xchg
js
clc
push
push
std
lea
xchg
inc
sub
mov
aas
inc
mov
cwtl
ja
dec
push
fdivl
cmpsl
xor
mov
js
mov
and
in
sbb
loopne
lahf
or
lods
jnp
addl
inc
sbb
ficompl
cwtl
mov
dec
lods
dec
insl
gs
mov
test
jno
or
stos
mov
mov
aas
scas
out
pop
mov
pop
cmp
incl
mov
fadd
pop
sbb
jno
mov
mov
insl
imul
mov
in
mov
pop
jmp
dec
dec
cmc
test
lods
scas
popf
xchg
aaa
mov
cmc
xchg
pusha
adc
inc
ljmp
adc
je
fs
sub
cwtl
adc
mov
mov
adcb
imul
sub
jne
pop
lea
xchg
jns
xchg
add
inc
inc
cmp
addr16
pop
push
inc
xlat
push
jns
lods
rcr
inc
clc
pop
cmp
scas
dec
rcrl
jmp
and
repz
sub
ficoml
sbb
arpl
sbb
mov
sub
jl
stos
outsl
push
dec
jne
lock
jae
lret
int
das
insb
int
sbb
faddl
ljmp
sahf
fistpl
mov
dec
jb
aam
in
jnp
popa
add
dec
out
imul
jno
push
rorl
lock
xchg
xchg
dec
push
jo
push
out
inc
cmpsb
arpl
shlb
scas
lcall
movsb
int
inc
or
and
add
add
jbe
call
mov
mov
and
into
cmp
out
sub
ret
cmp
movl
adc
inc
ds
sbb
cmp
add
ret
cmp
adc
in
dec
add
movl
nop
inc
jl
sbb
push
shrl
shrl
dec
jecxz
push
jne
popa
sub
push
scas
xor
daa
pop
add
jo
daa
mov
lods
lds
cmc
inc
xchg
stos
rcrb
subl
cmp
and
fnstcw
cmp
adc
rol
in
jae
shll
lahf
arpl
iret
outsl
add
mov
or
jo
add
mov
jae
dec
jge
add
adc
jne
mov
int
and
js
fcomp
xor
lret
outsl
mov
je
pop
lret
enter
loope
mov
mov
nop
dec
xchg
test
stc
push
sahf
js
xchg
nop
mov
or
clc
ljmp
push
and
add
sbb
mov
pop
xlat
mov
mov
test
xchg
sbb
insl
ret
push
cmc
dec
push
jle
jg
sbb
gs
mov
scas
leave
xchg
push
cs
or
add
ja
pop
jnp
lret
cmpsb
inc
push
cld
ds
jbe
sub
flds
push
xchg
imul
or
push
into
mov
jecxz
lahf
icebp
jo
jae
and
pushf
add
jnp
in
and
mov
movsb
xlat
xchg
push
stc
mov
fyl2x
ret
mov
cmpsl
notl
xor
mov
imull
fdivr
lret
xchg
dec
dec
dec
add
adc
fs
cmp
add
jl
incb
ja
sub
std
loopne
and
sbb
inc
mov
xchg
jnp
fcmovne
cmpsb
gs
test
imul
das
sti
das
jae
test
push
in
push
gs
and
stc
mov
push
pop
cmc
jl
sahf
xchg
pop
jns
loop
aam
nop
inc
mov
rclb
sbb
test
sbb
and
sbb
popa
dec
aaa
nop
repnz
int3
mov
loope
mov
mov
movsb
cmp
loopne
imul
mov
xchg
int
out
xor
ja
iret
push
adcb
jmp
stos
xchg
adc
fdivl
jl
in
scas
pop
loope
lods
cli
scas
shlb
inc
stos
cmpsb
adc
int
xor
cmc
int
xlat
xor
pop
adc
jmp
sbb
sub
insb
shll
ret
inc
cmp
orb
mov
xor
dec
pop
ret
cmp
inc
aas
mov
das
jp
push
bound
mov
mov
xchg
ret
sbb
push
push
xchg
lea
push
sbb
push
loope
sbb
dec
ss
mov
jnp
push
sbb
and
lock
loopne
clc
cltd
shll
adc
mov
cmpsb
mov
sub
in
cltd
aam
mov
ja
mov
sub
inc
leave
fstpl
dec
call
test
cmp
xor
push
test
sub
lods
fsts
cmpsb
mov
fstpt
xor
loope
fldt
cmp
mov
add
jnp
mov
loop
repz
or
inc
add
ds
stos
movsl
scas
cld
cmp
pop
stos
js
inc
add
inc
jmp
inc
jne
das
push
scas
cwtl
iret
loop
jns
outsb
es
and
inc
cmovo
push
mov
and
sbb
mov
scas
lret
xlat
lret
mov
sub
xchg
mov
push
pop
aaa
xchg
ja
push
je
mov
fcmovnb
aaa
pop
jns
cmp
lcall
jbe
or
in
mov
or
lahf
xor
sbb
cld
pop
loope
aas
mov
mov
jmp
data16
andb
inc
inc
data16
loop
test
cmp
push
pop
and
int3
xchg
and
mov
pop
out
clc
jp
add
test
je
insb
pop
in
and
ret
mov
popa
int3
mull
inc
lret
fstpt
sub
add
lret
in
aaa
inc
cmpsb
dec
xchg
push
mov
push
scas
inc
icebp
add
or
jns
test
xor
pop
rorl
rolb
cmpsl
mov
mov
or
aaa
ret
and
inc
add
cmpsb
movsb
dec
loopne
and
ss
cmp
push
imul
jecxz
add
mov
test
out
aaa
stc
and
test
xchg
jbe
pop
dec
dec
xor
add
lret
mov
mov
fdivr
js
mov
add
mov
test
mov
mov
rol
sbb
cmp
and
push
mov
shl
add
mov
out
push
in
mov
mov
jmp
mov
inc
sbb
pop
ror
cmp
sbb
hlt
iret
jae
xchg
inc
mov
push
xor
sbb
adc
pop
int3
hlt
test
pop
dec
loope
push
out
inc
cmp
test
sub
jmp
in
inc
adc
lret
test
cmp
in
out
test
push
mull
dec
jecxz
xlat
sub
icebp
mov
pop
movsl
ror
mov
dec
mov
mov
or
inc
sub
pop
popf
arpl
aam
push
andl
and
cmp
jp
xchg
push
gs
lret
rorb
shrb
jl
sbb
xchg
push
push
xor
mov
xchg
mov
into
push
xchg
adc
shrb
popa
cwtl
adc
mov
je
mov
adc
ficoml
stos
ss
push
scas
sub
mov
mov
sbb
out
inc
push
fldt
stos
loop
pop
outsl
push
xchg
mov
pop
mov
push
inc
xor
cmp
jns
shlb
in
roll
shl
in
jmp
pop
cwtl
sub
jl
mull
sbb
imul
test
mov
testb
in
icebp
addl
pushl
imul
add
xlat
bound
push
outsl
mov
daa
push
insb
ficompl
pop
out
push
mov
or
movsb
arpl
xchg
repz
adc
dec
cmpsb
cli
lods
mov
push
mov
push
inc
and
in
sarl
mov
shlb
aaa
mov
adc
push
movsl
int3
lock
sub
dec
shlb
shlb
test
cmp
je
cld
mov
xor
test
fisubs
cmp
div
mov
add
cmp
stos
adc
cmpsl
inc
push
sahf
iret
inc
and
cwtl
pop
mov
rcrl
mov
out
cmp
add
movsb
cltd
or
imul
mov
sbb
jp
pop
dec
cmp
push
imul
hlt
int
test
cmp
xchg
cmpl
cltd
bound
adc
jl
inc
mov
and
and
fwait
adc
and
xchg
jmp
pop
mov
fidivs
xor
xor
xor
push
pop
bound
pop
mov
cld
outsl
pop
popa
xor
push
mov
mov
jbe
call
adc
and
and
test
mull
test
cmp
lods
pop
imul
cld
xchg
pop
sub
aaa
inc
inc
sbb
roll
sar
push
adc
pop
lods
lret
sub
xchg
add
push
fs
clc
dec
lock
jl
mov
scas
mov
and
roll
mov
ljmp
mov
mov
jbe
add
iret
lds
loope
cmp
sub
cmp
roll
xor
mov
std
pop
and
imull
fcompl
faddl
mov
push
ret
mov
jnp,pn
cmpsb
insb
or
adc
push
or
lods
imul
jns
cmp
jno
js
and
and
cwtl
xchg
mov
ljmp
dec
jg
call
aaa
popa
or
xchg
icebp
cltd
idivl
rorb
lea
repnz
bound
bound
cli
lods
adc
testb
push
xchg
lods
mov
mov
aas
inc
repnz
mov
mov
dec
insb
inc
in
add
lods
jge
push
dec
nop
sbb
xchg
jmp
pop
mov
push
and
retw
lret
sbb
xchg
loope
fdivp
sbb
rcll
outsl
int3
push
sub
mov
loop
int
pushf
jle
fists
cmpsb
pop
jp
pop
pop
add
fstl
lahf
hlt
xchg
ljmp
add
cmpsl
lahf
mov
scas
push
add
out
jg
ror
cmpsb
pop
jle
lock
cltd
push
aad
xchg
pop
sbb
xchg
xchg
jbe,pt
jb
ss
jle
and
hlt
cltd
bound
clc
adc
push
fnstcw
adc
clc
js
add
xor
or
sti
mov
jbe
fwait
adc
addr16
dec
aad
aas
xchg
scas
adc
leave
insl
jle
inc
popa
popf
fisttpl
dec
stos
pop
div
std
sbb
cltd
je
enter
imul
adc
push
mov
ret
insb
lds
in
xchg
push
pop
mov
hlt
repnz
push
add
scas
add
int3
sbb
jmp
pop
sub
subb
xor
jb
xchg
fwait
cltd
sahf
out
push
sahf
lods
pop
addl
xchg
es
fisttps
repnz
jg
cltd
inc
enter
daa
scas
aad
mov
sbb
icebp
and
mov
popf
add
pop
cltd
notb
movsl
pushf
call
mov
sbb
inc
lcall
testb
mov
idivl
cli
add
shr
loop
sti
test
mov
mov
inc
or
fisttpll
pop
cwtl
mov
mul
das
lcall
mov
cmp
out
inc
sub
dec
repnz
sbb
sub
jns
pop
int
pop
inc
je
hlt
jnp
das
push
imull
aam
repnz
outsb
clc
jp
or
jl
lret
sbb
sbb
jmp
scas
mov
out
add
jns
ds
xor
mov
xchg
push
xor
std
aaa
sbb
sub
jne
cmpsl
jo
pop
testl
cmp
repz
fbstp
sub
inc
push
cmp
inc
test
fists
sub
rolb
push
push
jns
and
ret
cmpb
dec
mov
xor
sub
pop
add
ficoms
xchg
insb
sub
movsl
push
push
mov
and
notl
mov
rcll
push
sub
test
sub
fiaddl
fidivs
mov
xlat
roll
arpl
or
outsl
adc
sbb
push
andb
jne
cmp
mov
scas
jno
mov
and
cli
jne
arpl
adc
adc
adc
pop
mov
jp
cmc
mov
fistps
movsl
inc
movsl
out
pop
mov
pop
pop
dec
mov
nop
adc
mov
jo
push
stos
sub
push
add
mov
shl
mov
add
adc
jge
es
xor
hlt
xchg
loopne
sub
test
or
jp
push
sbb
in
shrb
in
stc
mov
cli
int
out
lods
test
push
cld
lahf
loopne
imul
xchg
push
repnz
gs
jge
jmp
mov
dec
rcrl
in
fidivl
cmp
dec
push
mov
cwtl
xor
mov
sbb
orb
push
aaa
mov
push
sarl
and
pushf
pop
jle
inc
mov
and
subb
and
icebp
jno
sub
jmp
xchg
sbb
and
or
xchg
cld
outsl
and
xchg
fistpl
mov
add
sub
xlat
inc
pop
push
in
sub
fdivr
mov
mov
xor
popf
arpl
jnp
int3
adc
mov
push
xlat
cli
std
rcll
mov
cmp
in
jg
test
lods
fadd
scas
cmp
jne
repz
cld
or
sub
adc
xchg
push
out
inc
gs
push
movsb
xchg
or
test
jmp
pop
ds
ljmp
aad
dec
add
or
dec
nop
fnsave
mov
mov
jge
stos
sub
xlat
imul
fwait
movsb
int
cli
push
and
shrb
mov
inc
add
cmc
sub
add
cmpsb
sub
popa
call
mov
xor
shlb
test
mov
adc
push
dec
add
enter
data16
lahf
outsb
push
js
pushf
sbb
mov
fdivrs
mov
leave
lret
xor
xchg
cmp
imul
stos
stc
mov
nop
andl
pop
add
push
jg
xchg
or
pop
lds
gs
push
aam
es
gs
mov
sub
sti
xchg
push
xchg
stos
test
or
mov
rclb
out
xor
insb
addr16
and
call
pop
inc
pusha
cmp
mov
pop
xchg
xor
insl
add
lret
imul
xor
fimuls
icebp
cmp
repz
js
push
xchg
pop
test
mov
xchg
sbb
xor
mov
xchg
xchg
pop
mov
mull
sahf
cmp
sbb
stos
xchg
xchg
into
jge
popf
cwtl
add
aam
and
pop
xlat
sbb
sbb
xchg
outsl
ret
lds
dec
xor
adc
gs
sub
pop
mov
adc
or
mov
mov
jl
and
xchg
push
mov
pop
adc
leave
pop
insb
shll
pusha
inc
adc
popf
pushf
push
fisubs
jbe
gs
xchg
inc
in
adc
cmp
out
cmp
into
ljmp
sub
pusha
mov
mov
mov
push
add
mov
jnp
inc
lret
mov
or
jp
mov
pusha
sub
push
outsl
cwtl
pop
mov
jne
lcall
inc
insb
jae
jno
movsl
insb
cs
and
inc
aam
out
sti
sbbb
sub
dec
cmpsb
lcall
push
xor
or
jle
outsb
aad
mov
sbb
insl
xchg
sti
divb
and
mov
mov
inc
lcall
pushf
jne
sub
xlat
sub
jne
push
addb
clc
xchg
xchg
jmp
lret
scas
dec
int3
mov
xchg
aaa
dec
mov
jo
inc
in
adc
lods
testb
pop
mov
fsts
aaa
and
xor
and
sub
xor
aad
sbb
xor
repz
call
out
ja
lock
negl
test
rcll
enter
or
test
ret
mov
shrl
mov
pop
mov
pusha
dec
push
and
sub
call
jo
test
add
fld
sub
lret
gs
jp
cld
and
pop
hlt
and
push
ds
xrelease
or
cmp
and
pop
inc
dec
dec
sar
cmp
shll
inc
pop
xlat
mov
push
imul
mov
mov
pop
pop
fists
rolb
mov
mov
mov
movsb
xlat
xor
ss
cmp
xor
dec
inc
jb
test
popa
adc
xor
push
popa
imul
fstpt
std
dec
addr16
push
adc
jbe
clc
std
adc
in
push
dec
sahf
testb
pop
mov
add
call
mov
mov
push
lds
adc
xor
fiaddl
inc
sbb
mov
fucomip
push
lods
add
dec
sub
cmp
stos
test
jecxz
dec
stos
xchg
mov
enter
pop
pusha
sub
lret
mov
out
into
hlt
adc
jp
xchg
testb
cltd
fdivrs
fdivrs
adc
lea
shr
fstpl
and
fsts
nop
inc
outsl
popa
out
dec
sub
mov
cmp
mov
push
push
inc
sbb
mov
sahf
jb
xchg
imul
arpl
mov
push
xchg
dec
test
and
pop
ret
rcll
std
xchg
popl
cmp
clc
pop
lods
int3
jb
int3
or
pop
jmp
es
leave
sbb
jbe
pop
push
mov
mov
inc
movsb
rep
std
call
xchg
mov
inc
out
sub
shlb
aam
ja
dec
sub
out
sub
mov
mov
das
inc
jo
jp
push
mov
pop
std
clc
sub
xor
xchg
mov
adc
push
das
jg
in
into
idiv
or
inc
pop
xorl
js
xchg
jl
mov
jmp
push
sub
orl
mov
xchg
repz
xchg
sti
add
in
dec
pop
xchg
pop
leave
mov
xor
lahf
cmc
stc
mov
aaa
ret
popf
insb
cmp
out
ret
mov
mov
jb
mov
add
sti
or
mov
push
or
std
fldcw
out
add
ja
inc
xchg
popl
mov
dec
lahf
fnstcw
jns
inc
fisubrl
jg
xor
xchg
fistpll
jb
sbbb
insb
lahf
lret
inc
xchg
scas
add
xor
xchg
rcrl
fnstsw
imul
sti
outsl
in
pop
es
std
rcr
pop
hlt
mull
lds
or
xor
out
std
add
popa
call
pop
arpl
push
subb
inc
xchg
jbe
not
dec
sbb
sbb
mov
or
xor
test
push
fnsave
and
int3
mov
fiadds
mov
cmpsb
mov
rep
dec
sbb
mov
xchg
cmp
cld
or
pop
outsb
mov
mov
mov
test
xorb
mov
lahf
popa
cmpsb
aas
out
dec
jnp
mov
test
xor
lcall
out
and
cmp
cld
ds
in
daa
xchg
in
dec
pop
mov
pop
sub
lock
sub
lods
je
dec
adc
enter
fistpl
pop
add
jg
sub
outsl
and
mov
test
sub
jmp
out
inc
or
pop
sub
dec
ja
out
into
out
cli
push
cmp
push
shll
adc
or
mov
ja
dec
bnd
dec
pop
sub
cld
sub
push
mov
sar
fnstsw
in
mov
lret
lret
repz
sbb
aaa
pop
lret
xor
xor
add
lahf
outsb
rorb
lahf
fs
fwait
dec
aaa
sub
lea
call
mov
lcall
test
daa
jo
cmpb
and
mov
cmpsb
mov
or
icebp
add
int3
std
or
sub
out
incb
lods
fnsave
fildl
dec
stos
std
push
fistl
dec
jae
mov
arpl
cmp
push
xchg
jnp
and
add
ljmp
std
cmp
pushf
popf
lods
inc
stos
pop
or
aad
outsl
lret
and
mov
sub
in
cmpsb
loopne
push
mov
inc
std
jb
jbe
jbe
push
lds
gs
aaa
xchg
mov
cmp
ficomps
mov
mov
cmp
or
xor
test
xorb
cli
out
imul
and
cmp
bound
cmpsb
jno
cmp
add
push
popf
cli
mov
and
adc
scas
xorl
mov
in
jne
xchg
ret
jne
fistpl
jne
xchg
aam
roll
sub
dec
cmpb
fsubl
fnstenv
adc
cld
jmp
mov
add
add
dec
mov
mov
add
mov
jl
or
sbb
stc
and
mov
ss
ret
leave
or
or
popa
jmp
jecxz
xor
mov
inc
cli
xor
xor
pop
pusha
repnz
xor
stc
pop
dec
jmp
push
cmpsl
fstp
fsubr
fidivrl
test
shll
push
cmp
or
pop
outsl
inc
jno
ret
repnz
add
fwait
ret
jo
cld
dec
xor
jnp
dec
lcall
jecxz
aad
xor
repnz
sbb
ss
pop
sbb
dec
imul
cmp
or
add
hlt
cmp
push
dec
imul
scas
cmp
aas
repnz
adc
incl
bound
cmpsl
das
pop
fxch
dec
rcll
or
in
lret
dec
jns
sub
into
test
mov
mov
jg
jge
mov
gs
xor
push
popf
add
incb
imul
jno
rcl
ds
loopne
cmp
mov
clc
notb
xchg
jae
bnd
pop
rolb
mov
imul
repz
loop
pop
push
pop
xlat
shrb
mov
inc
cmp
sbb
xchg
bswap
mov
mov
movsl
adcl
dec
sbb
add
sbb
sub
stc
insl
sbb
mov
and
adc
jmp
mov
lcall
imul
sub
jp
cmpsl
ficoms
xor
cmp
sbb
je
jbe
jecxz
cwtl
nop
lock
jmp
pop
or
mov
das
mov
movsb
out
push
out
int3
push
or
lods
call
sbb
or
dec
push
roll
cld
pop
pop
and
cmp
pop
sahf
stos
fisttps
dec
and
mov
and
idivl
push
insl
sbb
into
xchg
jns
sub
addr16
inc
jne
xor
pop
pop
cltd
sbb
dec
adc
pop
mov
cmpsl
sbb
lods
adc
or
popa
inc
xor
mov
lods
movb
xor
or
cmp
clc
jmp
arpl
pop
push
cmp
sbb
push
popf
lahf
pusha
push
inc
fwait
jle
shl
hlt
leave
or
push
stos
push
or
icebp
js
enter
std
push
call
lcall
js
lret
or
cmpsb
pop
out
mov
adc
fsubrl
push
jge
xchg
dec
jge
inc
addb
adc
mov
cs
dec
outsl
test
daa
pop
jnp
and
inc
out
loop
es
enter
xor
in
cwtl
jg
xchg
push
xor
fwait
into
ds
pushf
stos
mov
loope
decb
lea
mov
ret
fdivr
aas
mov
xor
add
test
lahf
dec
adc
pusha
xor
jg,pt
popf
loopne
jne
mov
mov
in
push
or
fstl
adc
cld
mov
fldcw
mov
fldenv
cld
pushf
iret
sub
jne
mov
loope
jns
mov
add
xchg
mov
cmc
inc
pusha
dec
inc
ljmp
aaa
mov
out
push
sub
jo
xorl
aam
out
mov
pop
pop
mov
rorb
or
call
in
shr
mov
fidivl
pop
sti
mov
add
pop
xor
dec
cmc
adc
loopne
daa
call
das
push
jo
mov
out
xor
sbb
test
mov
stos
pop
cli
add
sbb
push
lods
mov
ds
cmp
stc
lds
shrl
jecxz
js
pusha
dec
mov
jmp
inc
leave
mov
mov
leave
insl
fwait
mov
mov
insb
pop
repnz
pop
sbb
inc
lcall
gs
les
jne
sbb
les
inc
mov
iret
or
mov
iret
jg
fnstsw
cmp
xlat
test
lret
jae
xorb
data16
lods
lock
ss
pmaxub
loop
push
jl
sbb
jge
je
push
inc
arpl
jecxz
cmpsl
rolb
mov
xchg
das
aad
mov
sub
rcll
mov
test
or
inc
pop
xchg
sub
jnp
in
sbb
fistl
ret
sbb
mov
mov
mov
adc
popf
repz
cmp
lods
lret
mov
leave
popa
jmp
sub
jle
push
cmpsb
cmp
repz
insl
in
sbb
or
nop
iret
cld
out
mov
push
push
push
scas
push
das
mov
iret
push
fldt
push
mov
mov
mov
lret
xchg
lods
and
leave
repz
fbstp
pusha
or
dec
adc
dec
pop
daa
cmpsb
push
dec
xchg
push
sbb
xchg
out
adc
adc
icebp
test
faddl
cltd
xor
daa
push
jecxz
push
fldenv
cmp
aad
cmpsb
mov
iret
lock
inc
cmp
mov
jbe
sub
dec
cmpsl
test
cltd
and
mov
fwait
ret
addl
or
adc
mov
jns
in
push
push
jecxz
dec
push
mov
cmpsb
and
xchg
xchg
mov
ljmp
xor
mov
in
fdivl
or
insb
nop
insb
mov
push
xor
push
push
popf
idivl
dec
mov
push
jnp
test
add
sub
mov
dec
dec
mov
mov
jp
std
jne
mov
in
dec
pop
fidivs
dec
aaa
cmp
cwtl
imul
fs
nop
int3
mov
and
push
popa
addr16
mov
adc
ja
int
and
jg
sub
xchg
in
fbld
into
push
sbb
mov
stos
jg
sub
sbb
cmp
inc
pusha
popl
dec
xor
mov
mov
loopne
lahf
lret
pop
orb
lret
mov
insl
adc
lea
inc
cmp
aam
inc
daa
out
stos
xchg
lods
sbb
loopne
mov
cmpsl
and
sbb
pusha
pop
pop
sbb
jae
and
dec
and
cmp
add
sbb
in
mov
sbb
pop
mov
push
fwait
push
sti
mov
push
mov
xchg
xchg
lds
add
out
pop
pop
dec
fisttps
sub
es
loop
and
fstpt
in
jecxz
call
xchg
ret
nop
fdivr
pop
int3
xchg
pop
call
fildll
lret
scas
lds
pushl
lea
popf
stos
xchg
lcall
pop
sub
xor
add
mov
dec
jno
sbb
xchg
ja
iret
pushf
in
jp
pop
cmp
stos
mov
push
call
shlb
mov
pushf
xchg
push
xor
fcompl
js
jo
jne
push
mov
inc
cmpb
adc
adc
inc
out
pop
cmp
ljmp
loope
scas
lock
sbb
push
pop
gs
sahf
mov
mull
mov
jno
fcmovu
aas
inc
xchg
sub
mul
nop
test
mov
mov
adc
ds
ds
push
shr
mov
xchg
mov
out
dec
push
sbb
and
arpl
icebp
testl
and
mov
in
into
hlt
jno
aam
adc
mov
out
gs
cli
aad
ja
push
jns
subl
or
xor
pop
add
enter
and
mov
std
dec
jge
scas
andl
inc
xchg
int3
pop
inc
and
sbbl
sub
arpl
and
jb
addr16
mov
fsubs
xor
out
push
mov
fcomps
lods
ja
bound
dec
mov
mov
ljmp
fs
leave
ja
and
outsb
movsb
clc
mov
xor
cmpsl
iret
scas
jle
xchg
sbb
push
mov
and
aam
aam
jne
sahf
jns
adc
or
outsl
sbb
negb
orl
push
pop
jmp
jp
inc
jns
push
push
rcrl
push
push
lods
jnp
xchg
and
mov
add
popl
fcompl
or
enter
daa
xchg
data16
mov
or
jns
mov
pop
cmp
pop
hlt
mov
insl
pop
dec
enter
es
push
and
aaa
rolb
scas
push
pop
inc
mov
fwait
das
pop
idiv
ror
xor
adc
push
test
andb
insb
nop
in
adc
test
inc
addr16
xlat
mov
ud1
fdivs
jbe
sar
pop
out
addr16
scas
popf
pusha
mov
mov
or
adc
adc
and
or
test
or
add
mov
aam
xchg
pop
xor
pusha
xor
insl
pop
imul
test
in
hlt
push
add
insb
fisubrs
sub
ja
jno
pop
mov
les
or
loop
jp
push
xlat
aam
adc
sub
mov
sbb
hlt
and
pushf
mov
insb
mov
push
push
add
mov
pop
push
mov
lret
cmp
pop
xchg
mov
sarb
pusha
push
lcall
cwtl
popf
pop
fistpll
test
test
daa
frstor
xchg
mov
xor
out
mov
out
sub
ret
iret
mov
subl
mov
or
sub
push
fs
ljmp
mov
es
mov
dec
and
repz
jne
pop
pop
push
sub
mov
sbb
xor
and
push
adc
stos
push
sbb
outsl
push
push
test
movsl
out
or
jecxz
jg
lea
push
lds
add
jb
dec
lret
or
inc
imulb
outsl
mov
sub
out
test
insb
nop
lods
bnd
addr16
jne
jns
dec
pop
jl
call
loope
sub
jge
ja
arpl
inc
ret
dec
mov
lds
lods
mov
dec
or
jae
add
xor
leave
cmp
aaa
pop
data16
dec
xchg
inc
cmp
mov
push
int3
mov
jnp
sbb
or
dec
mov
das
mov
jg
cmp
push
ja
lock
jno
fstpl
jl
mov
lods
mov
push
movsl
pop
mov
cmp
xlat
fwait
jne
jae
movsb
push
js
ret
mov
jmp
ror
lahf
imul
into
sbbb
push
jns
cmp
les
lahf
adc
in
push
jecxz
xor
jp
or
and
inc
push
or
pop
int
pop
aaa
mov
mov
out
sbb
push
mov
adc
fadds
pop
daa
notb
push
inc
mov
cmpsl
ret
out
test
add
sub
aas
shlb
push
lret
push
jb
pop
insl
loope
bound
mov
xor
mov
sbb
mov
push
std
mull
inc
push
ljmp
inc
mov
add
out
fdivrl
iret
iret
sahf
sub
add
arpl
andb
xchg
in
pop
imul
xchg
in
mov
mov
in
mov
sub
xor
insb
push
sbb
push
mov
int3
call
mov
inc
ret
fwait
mov
fmuls
das
js
jecxz
sub
pop
lock
push
imul
dec
push
mov
jae
imul
sbb
int3
popa
sbb
das
lahf
pop
loope
mov
dec
in
lret
xchg
inc
and
cmpsb
sti
cmc
jns
jb
mov
ret
mov
int3
lods
sahf
out
leave
loop
xchg
push
out
cmp
fistpll
movsb
je
stos
mov
cltd
iret
outsb
push
inc
jb
in
jns
insl
aad
or
orb
lcall
add
xor
loopne
mov
and
mov
pop
pop
push
mov
push
mov
mov
inc
push
pop
gs
adc
cltd
cmpsb
inc
lret
push
jge
incl
pop
lods
adc
adc
and
pop
and
cltd
and
pop
nop
mov
out
scas
mov
mov
add
adc
movsl
std
mov
mov
adc
rcll
sub
in
mov
sbb
adc
movsl
and
mov
add
lahf
xchg
pop
int
jbe
shll
sti
mov
push
dec
sbb
insb
daa
rclb
or
scas
inc
outsl
xchg
mov
mov
ss
sahf
mov
imul
roll
ljmp
movsl
jecxz
fnsave
cmpsb
add
xchg
and
mov
ret
fistl
int3
cmp
negb
xorb
test
push
cmc
into
pop
inc
rcll
test
mov
cmp
adc
jg
cwtl
push
enter
inc
mov
xchg
mov
mov
add
sbb
jo
daa
movsl
push
mov
bnd
mov
popa
mov
cmpsb
imul
mov
cmc
push
fsubs
fldcw
fldt
add
mov
enter
test
jmp
dec
ds
mov
les
inc
add
push
test
push
js
mov
or
movsl
aad
jo
fwait
add
mov
mov
sbb
sahf
mov
mov
and
sbb
insl
insb
mov
sub
push
add
and
test
pop
mov
xchg
into
or
ljmp
pushf
mov
or
mov
loope
push
lds
sbb
push
pop
out
xor
inc
ret
xchg
pusha
push
into
fdivrl
int
push
xor
mov
mov
stc
shrb
mov
xchg
popf
and
scas
push
pop
jae
shlb
jle
add
nop
aaa
lds
push
cwtl
inc
std
rorb
adc
sar
mov
dec
int
dec
xchg
add
into
loopne
clc
and
cltd
mov
fcompl
stos
out
sti
cmpsl
ds
pop
or
aad
push
pop
jb
mov
enter
cli
jns
pop
ljmp
imull
inc
inc
lcall
ret
jmp
out
icebp
xchg
ja
clc
pop
inc
jno
sbb
mov
adc
jp
test
sub
popa
bound
fwait
inc
cli
xor
mov
jmp
lea
push
push
push
mov
jo
leave
and
mov
jns
test
pusha
sub
pushf
shll
push
cwtl
xorb
dec
add
aaa
scas
andl
inc
mov
mov
dec
cli
iret
shrb
movsb
mov
xor
jnp
lcall
iret
pop
out
es
shl
push
sti
push
cmp
mov
inc
bound
mov
sbb
mov
sbb
mov
mov
inc
mov
pop
cmp
cltd
pop
test
aad
aas
cmp
pop
xor
out
testl
sub
popa
xor
mov
dec
dec
sub
mov
inc
in
mov
or
inc
adc
dec
jmp
dec
mov
enter
loopne
enter
push
inc
dec
jp
insb
xchg
cmp
mov
rcrb
icebp
outsl
sub
mov
sub
in
add
sbb
sbb
add
push
mov
incl
push
adc
inc
lea
scas
stos
ds
and
inc
jp
jmp
cli
addr16
dec
jno
mov
ds
repz
xchg
outsl
cmp
adc
or
pop
jg
mov
mov
mov
aad
xor
push
mov
and
jg
sbb
and
and
leave
sub
sub
addl
mov
scas
xor
dec
mov
or
mull
jge
jns
fs
shlb
incb
mov
or
jge
inc
push
jge
jecxz
sbb
pop
js
stos
bound
cmpsb
push
aam
add
mov
sbb
add
je
call
lods
mov
pop
out
daa
adc
lcall
je
cli
stos
cld
clc
mov
jecxz
in
rcl
sahf
pop
and
dec
insb
jb
outsl
jb
or
out
mov
lods
test
jp
aaa
sbb
sub
movsb
enter
mov
jns
cmc
mov
sahf
fwait
mov
mov
jns
adc
scas
lret
jle
add
dec
or
sub
leave
pop
adc
add
scas
out
ret
jnp
cwtl
lret
pop
dec
pusha
outsb
pop
sbb
faddl
iret
sub
or
pop
adc
loope
ret
mov
fsts
hlt
imul
push
sarl
and
ret
xchg
cmp
and
pop
test
je
pop
lret
push
lock
shrl
or
loope
fistps
pusha
pusha
push
jnp
addr16
loope
call
outsb
lret
jnp
je
jne
rclb
xor
lret
popf
sarl
dec
push
and
mov
insb
out
inc
xor
orl
mov
dec
sahf
pop
inc
mov
sub
or
scas
sub
fs
add
add
lcall
mov
pushf
mov
mov
mov
insb
fsqrt
outsl
jmp
out
fwait
push
jo
add
add
fnstenv
lock
pop
sbb
mov
mov
adc
mov
fisttpl
mov
int3
call
in
out
inc
repnz
push
adc
and
jno
loope
je
enter
mov
xchg
mov
mov
stos
pop
imul
sub
repnz
hlt
adc
sbb
fbld
mov
xchg
xchg
add
je
repnz
addr16
test
xorl
push
sub
dec
rol
xor
ja
js
mov
inc
mov
pop
test
arpl
inc
sahf
stc
xchg
add
subb
mov
jno
out
pusha
add
cld
mov
in
in
ret
data16
cmc
pop
aaa
clc
push
or
mov
cmp
fcoms
hlt
ja
and
les
jge
jbe
test
out
jo
insl
or
fsubl
pop
addr16
mov
shr
or
sbb
sbb
rorb
or
test
pop
addr16
mov
jge
iret
ficoms
xchg
ljmp
addb
pushf
push
mov
mov
push
fsts
sub
scas
bound
fimuls
adc
test
pop
push
xor
or
loopne
dec
insb
stc
push
xlat
xchg
popf
pop
or
jnp
fnstenv
jg
jo
inc
mov
fnstenv
fiadds
mov
add
jp,pt
push
or
cmp
scas
adc
push
out
arpl
clc
fadd
inc
sub
adc
fbstp
jmp
fs
cmp
xor
cmp
jge
test
xor
add
imul
ss
out
push
mov
in
pop
nop
cli
and
lock
mov
iret
adc
cltd
cmpsl
repz
inc
lods
jae
sub
cmpsl
mov
mov
add
adcb
cmp
cmpsl
out
xlat
mov
pop
xor
rcl
pop
je
gs
jno
sbb
xor
mov
or
dec
mov
pop
adc
movsb
ja
clc
idivb
push
hlt
xchg
lods
in
lret
and
push
cltd
sti
dec
dec
mov
mov
pop
xchg
test
jmp
subb
aaa
inc
xor
cwtl
adcb
fs
sbb
add
push
bound
mov
adc
cld
lds
inc
movsb
mov
xorb
xor
and
mov
aam
loopne
imul
mov
iret
jb
je
xlat
jo
mov
cltd
les
int3
data16
mov
dec
jg
push
cmp
sahf
add
mov
addr16
dec
ljmp
xchg
sbb
cmpsl
ds
mov
inc
or
pop
into
fcmovb
mov
les
notl
mov
dec
lock
add
jp
dec
call
sbb
cmpb
stos
and
mov
mov
and
mov
dec
mov
push
fidivl
aad
imul
stos
in
int
loope
cmpsl
jmp
in
push
adc
icebp
fistpl
orl
out
xchg
and
call
or
lods
lret
inc
ljmp
push
in
mov
andl
and
repnz
mov
aaa
dec
xor
sbb
mov
dec
push
sahf
cmp
or
push
cmp
rclb
mov
enter
add
jecxz
cwtl
data16
pop
sub
dec
and
cmp
push
dec
xchg
adc
sbb
ljmp
mov
cmpsb
test
ret
pop
mov
ja
and
pop
sub
cmp
outsw
into
and
cli
cmp
pop
pop
int
rcll
nop
mov
popf
push
pop
call
sbb
mov
add
into
and
repnz
inc
je
cmp
mov
roll
cmpsl
inc
xchg
push
fs
mov
jns
popa
imul
push
sub
stos
jp
mov
adc
das
faddl
add
out
in
xor
in
xchg
or
int
aad
xchg
jne
lcall
pusha
rorb
push
sub
popa
adc
in
sahf
int3
fstps
dec
rcl
arpl
sti
mov
jo
fistpl
ljmp
imul
addr16
adc
xchg
hlt
lahf
adc
push
xchg
mov
mov
js
pop
fcompl
mov
fcmovne
repnz
add
into
loope
mov
sbb
in
arpl
fsts
fmull
mov
xchg
and
sbb
loopne
cli
mov
mov
testb
loope
adc
loopne
sbb
pushf
cmp
cmp
aaa
sub
jmp
jb
mov
jg
sbb
cs
jg
xchg
dec
scas
jae
mov
push
bound
sbb
mov
imull
or
pop
mov
mov
mov
mov
push
fwait
bnd
pop
add
mov
jmp
aad
or
imul
shlb
push
mov
jg
or
nop
or
adc
mov
or
imul
bound
adc
xchg
push
lock
sti
sbb
jmp
jns
push
mov
sub
xchg
adc
cmp
mov
popa
mov
dec
cmpsb
jo
lret
and
mov
mov
lcall
rcll
mov
jns
pop
mov
inc
lahf
imul
es
pop
out
iret
jmp
lret
les
out
outsw
test
adc
cmc
adc
js
push
mov
loopne
sbb
fcmovne
push
idivb
cmp
js
cmp
inc
cltd
push
pop
decl
and
lret
jmp
int
dec
push
pushf
lds
data16
mov
mov
call
ret
mov
fists
mov
sbb
sbb
sub
lods
imul
mov
clts
mov
pop
push
cmpl
push
fistpl
mov
sbbl
and
stos
inc
mov
rorb
sti
das
cltd
std
inc
mov
cmp
adc
xchg
xchg
shrl
inc
pop
aas
loope
pop
inc
jle
lahf
bnd
xchg
imul
push
xchg
pop
or
push
push
adc
repz
scas
lods
xchg
inc
pop
jno
xor
fs
pusha
jmp
jno
faddp
sahf
and
jno
insl
es
movsl
xor
mov
sub
dec
dec
test
add
shrl
pop
je
lret
xchg
push
sub
ret
stos
mov
and
mov
out
push
jno
mov
js
mov
movsl
ss
xchg
mov
mov
or
dec
insb
stc
mov
stc
push
and
divb
insw
popa
fbstp
mov
add
adc
jbe
xchg
addl
movsl
xchg
in
adc
push
cmp
jns
push
jns
mov
mov
push
scas
push
arpl
push
mov
daa
xchg
xchg
push
das
aam
dec
mov
mov
movsl
in
in
pop
sbb
xor
sub
cmc
mov
enter
and
or
lahf
cmp
imul
mov
std
or
push
cmp
xchg
faddp
mov
sub
notb
jno
aaa
cmpsb
stc
loop
fwait
jg
pop
pop
adc
xor
jae
pop
cltd
stc
movsl
mov
jl
adc
fsubrl
and
mov
fbstp
je
das
mov
xor
mov
mov
les
test
mov
movsb
adc
cs
adc
push
add
xor
xchg
or
pusha
xchg
lret
mov
cmp
mov
jae
aam
inc
fiaddl
pop
aas
mov
adcb
stos
icebp
cmpsl
add
cltd
cli
sub
mov
mov
rcrl
ret
roll
aas
psrld
pop
push
push
mov
pop
mov
incb
and
pop
fsubs
addb
push
je
cmc
outsl
cmp
jl
enter
xchg
jmp
xchg
enter
push
and
push
insl
xchg
lock
mov
movsl
mov
mov
fwait
imul
leave
add
stos
loope
es
std
subb
or
fisubrs
ret
inc
pop
mov
mov
or
ffree
dec
icebp
or
cmp
fistps
mov
pop
gs
xchg
mov
push
add
inc
jne
out
mov
xchg
dec
movsl
fnsave
sahf
inc
shll
les
aas
mov
xchg
sarb
out
pop
loopne
gs
cmpsl
negb
push
xorl
add
std
fimuls
mov
pop
xor
jl
mov
add
push
dec
mov
dec
fs
sbb
mov
in
cmp
jg
dec
mov
sub
int
xchg
mov
or
je
jnp
mov
and
addb
mov
mov
push
clc
adc
arpl
xchg
icebp
pop
jnp
xor
data16
or
sub
imulb
push
movl
inc
out
xor
jae
int3
popl
mov
and
cltd
jle
dec
sub
inc
aaa
test
test
pop
pop
xchg
push
cmp
ljmp
lds
mov
adcb
xchg
mov
outsb
aad
dec
and
push
scas
ss
push
aas
mov
mull
sub
dec
adc
and
les
rclb
cmp
push
cld
leave
and
stc
lds
xor
xor
inc
scas
lds
mov
lcall
pop
ret
cmpsb
adc
xor
stos
inc
pop
cmp
sub
mov
fistpl
xor
aam
xor
pusha
inc
loope
adc
fidivs
not
jle
dec
jb
gs
mov
popf
mov
jg
mov
fcoms
int
lahf
pmulhw
pop
sub
adc
daa
xchg
popf
rcl
xchg
test
xchg
les
insb
mov
xchg
lea
test
ds
ja,pn
cltd
out
inc
ljmp
in
arpl
inc
movb
mov
data16
es
jo
inc
xchg
lret
stos
aaa
loope
xchg
aaa
cmp
test
xchg
push
inc
arpl
jmp
or
mov
iret
push
pop
scas
leave
loope
cmpsl
loope
sub
and
std
cmpsl
push
les
sahf
ja
mov
sub
shl
adc
test
aad
mov
push
mov
js
cltd
in
iret
push
fistpl
dec
xor
dec
in
inc
jae
mov
cmpsb
sub
mov
xlat
xlat
std
sub
jns
loop
mov
xchg
xor
cmp
fidivrl
sub
mov
or
mov
push
push
scas
pop
int
xorl
and
into
lret
add
pop
xor
out
sub
pusha
push
loopne
rcl
mov
add
jae
ds
lods
mov
jecxz
sbb
adc
pop
sbb
jno
adc
lahf
fists
jp
movsl
push
ss
sub
pop
mov
out
mov
sub
in
ror
sahf
idivl
mov
pop
xchg
sub
inc
inc
mov
mov
push
insb
jmp
dec
adc
sbb
out
sub
sub
rep
fstpt
aam
xor
sub
jo
out
jbe
or
pop
or
sbb
or
sub
ja
jae
mov
aad
and
lds
cmp
loopne
ss
hlt
lock
cmp
cmpsl
or
mov
std
jb
lea
mov
jl
add
xchg
and
push
aas
pop
xor
in
cmp
adc
inc
cltd
inc
pop
out
sbb
xchg
mov
adc
mov
fnstsw
ja
cs
cwtl
movsl
js
push
cmp
fldt
enter
je
jmp
push
dec
popf
jg
sbb
ret
mov
xor
lahf
sbb
enter
xchg
clc
dec
xor
pop
bnd
nop
nop
and
lret
outsb
pop
int3
jno
xchg
adcl
test
jecxz
mov
pop
fldt
and
in
mov
aaa
outsl
push
mov
das
or
inc
dec
jp
loopne
incb
cwtl
arpl
or
pop
jns
sub
fisubrl
lock
ret
cmp
cltd
das
popf
push
jg
aaa
mov
scas
mov
mov
repz
mov
rcl
pop
or
rcll
bnd
xor
push
or
dec
aaa
push
add
insl
scas
cltd
les
push
sahf
cmpsl
leave
es
insl
pop
sbb
ds
orb
pop
in
mov
fdivrs
cpuid
pop
add
imul
into
or
or
add
xchg
popf
adc
test
gs
out
in
or
mov
enter
cltd
cmpsl
mov
inc
mov
repz
adc
jnp
jb
pusha
mov
push
or
sub
inc
stos
cmp
in
adc
jmp
lret
out
jbe
push
cmp
fsubrl
fstpt
pop
or
iret
mov
test
cmp
sahf
out
jne
xchg
fidivl
mov
push
fnsave
mov
adc
push
or
call
mov
stc
mov
adc
clc
int
sub
sub
and
cltd
addr16
adc
lret
cmpsb
or
leave
test
and
lcall
jp
test
pop
popf
out
clc
cmp
fisubs
mov
icebp
outsl
push
jl
imull
inc
inc
mov
je
mov
sbb
jl
outsl
sub
add
dec
ret
jecxz
lea
cs
jbe
sbb
jne
jp
insb
jo
adc
clc
cmp
fs
leave
aad
pop
inc
stos
addr16
iret
dec
test
lock
shl
mov
jle
imul
popa
jg
es
icebp
inc
xor
rol
pop
outsl
push
mov
jmp
mov
jmp
cmp
jo
fldl
pop
stc
test
clc
push
fbstp
adc
fwait
ss
fisttps
sub
push
add
mov
mov
and
hlt
int
or
push
in
movsb
nop
rcll
inc
daa
mov
xor
inc
sbb
cmp
mov
dec
cmpl
nop
outsl
dec
add
mov
xor
cli
sub
popa
in
lahf
xor
jno
lea
imul
pop
loopne
popf
xor
fcmovb
sub
jae
cmpsb
cmp
push
mov
push
mov
mov
sub
rdpmc
sbb
cmp
mov
xchg
cmp
adc
xor
dec
cmp
mov
sub
decl
adc
push
nop
sbb
movsl
cmpsb
jbe
xchg
cmp
mov
mov
shrb
sub
mov
sarb
std
popf
pop
dec
cvttps2pi
pop
aas
dec
cmc
push
insb
xor
xor
adc
arpl
and
push
or
fs
stos
add
loope
mov
das
sbb
fs
dec
ja
mov
pop
fs
sahf
ljmp
sub
jae
std
ror
andb
and
das
cmc
dec
xor
or
jecxz
dec
mov
jp
mov
jne
test
jecxz
cmp
iret
test
mov
sub
sub
aas
inc
inc
popf
lods
std
ljmp
sarl
cmp
xchg
xor
iret
pop
dec
aas
xor
mov
inc
xchg
xlat
xchg
loop
or
lods
ret
aam
nop
cli
into
mov
xor
sbb
jl
mov
and
pop
dec
jo
jle
sbb
and
stos
lahf
mov
fs
mov
mov
mov
out
pmaxsw
jbe
jo
dec
jnp
fsincos
out
scas
sahf
dec
lods
imul
les
add
stos
pop
addl
daa
jge
imul
ret
aaa
pop
neg
popa
dec
jge
mov
popa
ret
add
shlb
sti
cli
fistpl
cmp
sbb
pop
pop
imul
sti
fistl
sub
mov
iret
adc
pop
incb
inc
and
push
add
jg
test
jb
cs
pop
ret
xor
out
xchg
nop
adc
fistl
clc
and
cmp
mov
in
fbld
pop
mov
dec
inc
or
imul
movsb
pop
sub
out
test
push
pop
inc
add
inc
mov
mov
mov
pop
pushw
jp
xor
xchg
adc
popf
cmc
jmp
imul
xchg
push
dec
pop
les
xlat
cmp
sbb
js
inc
mov
sub
and
cli
cs
dec
cmp
mov
push
andl
lret
stos
rcrb
loope
sbb
or
in
je
enter
add
fcompp
rorb
xlat
subb
ja
cld
fcomp
or
xor
xchg
xlat
pop
std
js
jle
mov
xchg
sahf
push
pop
add
mov
ss
in
xchg
push
mov
push
shl
sbb
lds
mov
sarb
xor
stc
pop
aaa
out
mov
cmpsl
mov
fistl
fstps
adc
push
cmpsb
mov
bound
lea
mov
fildll
mul
push
mov
orl
inc
push
ret
ss
movsb
scas
mov
jecxz
lahf
stos
fdivrl
orl
sbb
mov
lock
xchg
js
in
shrl
fs
daa
gs
inc
pop
popf
mov
aaa
pop
xchg
test
push
jno
out
xor
ret
mov
xchg
xchg
repnz
loop
xchg
dec
cmpsb
add
mov
mov
loop
add
xor
sub
jmp
dec
mov
clc
mov
mov
shll
adcl
xor
mov
aad
bound
jge
jg
sub
lcall
cmpsb
loop
aam
fs
or
push
int3
pop
fbld
lods
int3
clc
mov
movsl
jb
push
push
leave
xchg
dec
push
popf
push
arpl
xchg
test
aad
loope
stos
addr16
testb
fmuls
cs
mov
notl
mov
loopne
fiaddl
movsl
fisubrl
dec
mov
into
fs
das
ret
adc
adc
repz
xor
add
mov
mov
xor
mov
mov
roll
je,pt
or
sti
cmpsb
fbld
lret
mov
cmp
lahf
push
adc
lea
jp
test
jae
sub
repnz
nop
shrb
xlat
cltd
jmp
insl
add
xchg
jle
cwtl
mov
cmp
out
sbb
sbb
cmp
insb
xchg
xchg
adc
sbb
sbb
cwtl
mov
jns
loopne
xchg
push
clc
mov
movsb
cli
mov
inc
pop
xchg
and
push
and
stos
xor
xor
aam
out
or
push
inc
fs
jl
subl
mov
js
pop
sbb
jno
ss
lahf
jge
rcr
sbb
rcrb
add
jne
lahf
jp
mov
roll
jmp
es
fldt
xor
mov
mov
std
cmp
cmpb
imul
test
out
push
mov
adc
scas
inc
loopne
sub
int
cltd
inc
pop
pop
mov
push
popa
cmp
mov
dec
fidivrs
mov
rclb
in
jge
mov
adc
pop
nop
jns
push
movsl
insl
xlat
pushf
les
in
xchg
aad
adc
dec
adcb
lds
fmull
and
lret
ljmp
imul
imul
shll
test
arpl
mull
pop
aas
push
lock
stos
scas
xchg
inc
mov
popf
call
into
add
hlt
lods
dec
push
mov
push
pop
mov
inc
pop
xor
sbb
fs
pusha
add
add
or
popf
outsb
inc
sub
in
in
cmpsb
adc
aas
push
pop
pop
aad
fdivr
push
jnp
xchg
call
sahf
leave
arpl
subl
mov
add
or
add
mov
movsb
push
pop
mov
or
jg
pop
sub
mov
dec
adc
popa
xchg
and
inc
pusha
xchg
inc
push
cmc
iret
mov
test
mov
out
icebp
pop
imul
test
jne
pop
popf
aad
imul
jnp
loope
or
aaa
stc
fisttpl
add
mov
outsl
int
dec
inc
jbe
add
outsl
ret
mov
jnp
addr16
push
jns
fnstcw
sub
jg
add
xchg
addr16
sub
lds
test
mov
out
pop
add
daa
xchg
push
cmp
mov
loop
pop
data16
jne
les
arpl
mov
mov
cmp
sbb
push
push
xchg
mov
xor
repz
jne
pop
inc
inc
push
loopne
cli
sub
jb
dec
jl
es
ja
jl
jecxz
fs
and
popf
and
ss
aam
mov
aas
add
scas
jno
int3
xor
xor
or
push
xorb
mul
scas
mov
xchg
test
sbb
jle
pop
les
sbb
xchg
xor
fsubrs
xchg
mov
imul
icebp
aas
xchg
adc
cmc
or
sbb
mov
pop
aam
jmp
sub
in
sbb
jo
and
mov
stc
add
mov
ss
mov
pop
inc
inc
pop
add
repz
lret
add
lret
cs
mov
mov
shrb
sub
int
movl
pushf
fidivrs
jmp
xchg
sbb
lods
sub
push
push
push
fdiv
mov
incb
lock
lods
or
or
sti
repnz
pop
sub
xor
cmp
adc
mov
mov
add
addr16
dec
mov
xchg
addr16
gs
xchg
xchg
in
xchg
or
lods
iret
mov
push
push
lods
clc
adc
popf
cmp
jb
cld
ret
pop
sub
repz
outsl
mov
test
mov
mov
cltd
adc
dec
stos
xor
jmp
popa
bound
mov
mov
outsl
loopne
mov
pop
jge
cmc
cli
imul
jmp
loop
sbb
sbb
int3
mov
or
fwait
xchg
cwtl
mov
idivb
cmp
dec
cmp
dec
iret
cmp
mov
mov
shll
sbbl
scas
mov
out
adcb
jle
ljmp
ds
fldcw
mov
sub
or
pop
xor
and
addr16
shl
push
or
xor
sbb
push
xchg
test
cltd
mull
adc
dec
out
sbb
mov
or
inc
and
adc
iret
lret
jnp
or
or
test
rcll
or
pop
nop
or
call
pop
dec
and
add
mov
dec
adc
fldenv
icebp
imul
testl
nop
outsb
das
aad
add
and
shlb
imul
mov
adc
cmp
int
xor
mov
fldl
add
add
repz
dec
mov
out
les
ljmp
jle
inc
pop
in
xchg
stos
jle
pop
testb
fdivp
xchg
js
fcmovnu
insb
mov
iret
clc
cmp
dec
push
inc
je
pop
cmp
pushf
pop
rclb
test
scas
cmp
dec
stos
pop
jle
pusha
xor
fstps
push
mov
and
mov
cmpsl
add
iret
xchg
dec
cmp
mov
or
sub
sub
xchg
outsb
fidivs
dec
adc
in
dec
pop
mov
dec
push
adc
lcall
inc
subb
mov
jns
lcall
inc
fildl
adc
je
in
aad
jae
movsb
and
xchg
mov
push
sub
mov
call
repz
sti
fwait
out
arpl
xchg
fs
fcomip
les
loop
sahf
sti
and
push
xchg
push
in
mov
mov
cmp
jmp
lcall
inc
cwtl
xchg
aaa
push
rol
inc
popa
push
mov
xchg
xlat
adc
cmp
mov
mov
pushf
jg
sbb
imul
jmp
mov
aaa
add
in
xor
or
add
test
ficomps
dec
cmpsl
xor
sti
rcrb
xchg
jo
aas
xor
iret
push
and
add
or
inc
pop
std
and
pop
test
and
leave
add
sub
ret
push
mov
loopne
data16
push
push
fildll
dec
xchg
xorb
mov
dec
adc
movsl
add
add
xor
sbb
movsl
jbe
xchg
or
sbb
xchg
sti
daa
jecxz
xchg
loope
or
inc
push
dec
aaa
jne
dec
outsb
dec
dec
or
in
loop
jg
xchg
cmp
cmp
inc
mov
xchg
shrb
xchg
push
mov
push
jnp
cwtl
sbb
jp
cmpl
das
dec
icebp
mov
jo
ja
out
cltd
pop
jnp
pop
cmpl
rcrl
push
ret
int
cmp
adc
cmc
xchg
push
mov
xchg
xchg
aas
mov
mov
into
cs
jno
repz
iret
cmp
andb
xchg
sahf
sbb
stos
xor
cmp
mov
imul
setp
mov
push
int3
jge
sub
or
or
rcr
hlt
pop
insb
kaddw
sbb
dec
aad
push
inc
mov
setb
inc
repz
je
cmp
adc
btr
sub
mov
out
jns,pn
inc
cwtl
std
pop
in
mov
int3
lock
jae
stos
push
push
in
stos
add
sbb
mov
ljmp
scas
xchg
dec
sub
jl
mov
dec
mov
push
movsl
xchg
xchg
xor
fstl
imul
outsl
xchg
in
add
popf
loop
jg
jg
mov
sbb
insl
ljmp
divb
jecxz
dec
pop
mov
leave
aam
in
iret
inc
dec
cmp
mov
repnz
and
inc
mov
dec
imul
push
js
xor
and
pop
in
xor
push
outsl
test
pop
pop
loopne
scas
mov
cs
mov
xchg
scas
xchg
inc
mov
pushl
mov
push
xor
push
fistpl
and
stos
fdivp
dec
push
dec
out
push
js
push
adc
les
push
mov
int3
hlt
pop
push
jb
and
xor
cs
loop
mov
fildll
cld
dec
and
or
mov
inc
mov
pop
jne
inc
in
ror
jo
cmp
int3
pop
and
or
mov
movsb
sbb
adc
cmp
dec
xor
push
add
roll
dec
lea
ror
stos
push
ja
push
idivb
inc
push
divl
and
jge
push
jbe
scas
mov
lds
and
mov
push
pusha
icebp
pusha
or
jae
sub
sbb
sub
rcrb
lods
xor
pop
imul
pop
lret
jle
cmpsl
cmp
inc
insl
ret
lret
mov
repz
lret
out
xlat
icebp
push
fadd
call
aas
inc
and
mov
push
add
stos
enter
lds
sbb
push
cmp
xor
inc
aaa
aas
or
jne
jae
in
pop
fisttpll
sub
push
pop
add
subl
out
imul
call
iret
cmpsl
lea
lock
jecxz
mov
push
add
ss
pop
and
xchg
outsb
or
fcoms
mov
sub
push
ljmp
and
sbb
data16
sub
cwtl
mov
xchg
fwait
outsb
scas
ljmp
jmp
sbb
add
mov
adc
push
test
mov
test
mov
sbbb
mov
pop
pushf
iret
mov
cltd
fisttpl
xchg
sub
push
lret
les
xchg
and
xlat
mov
sub
jge
cld
sti
out
and
int
aad
insb
lret
mov
sbb
push
popf
insl
jmp
inc
jno
ret
mov
sub
xchg
push
popa
arpl
push
into
mov
insl
or
mov
mov
jb
insb
jne
fldl
adc
sbb
mov
lret
insl
xchg
xchg
push
push
xchg
jns
jne
xchg
daa
dec
add
sarl
es
pop
and
mov
adc
add
addl
int3
enter
lods
dec
dec
mov
cli
and
imul
lock
lret
xor
iret
pop
xor
scas
es
adc
push
pusha
xor
lods
ret
inc
add
mov
leave
lcall
pop
jo
je
jo
mov
mov
fmull
rclb
adc
xchg
push
rcrl
mov
pop
or
lcall
or
ret
rcrb
insl
ucomiss
inc
nop
das
rorb
into
loope
sti
out
adc
mov
test
mov
add
es
dec
cmp
jecxz
psllw
stos
push
in
pop
jns
and
es
mov
pop
jl
push
add
jnp
mov
enter
and
sub
pushf
lret
mov
mov
test
push
popf
dec
mov
mov
imul
mov
inc
repnz
adc
dec
push
push
push
pop
fnstsw
jo
ds
insl
lock
pushl
push
mov
das
scas
pop
jae
xchg
jo
mov
idivl
xor
jmp
mov
mov
adc
push
xchg
popa
lahf
dec
stos
clc
fs
divb
stc
jg
push
shlb
mov
insl
pop
pop
xchg
mov
mov
xor
inc
fildl
mov
push
movl
jnp
mov
jnp
xor
fwait
dec
cmp
repnz
jnp
cmc
push
push
cmpl
popf
in
fcmovu
adc
or
inc
push
movsl
insl
rep
cmp
inc
aad
hlt
ret
dec
jae
test
pop
mov
push
enter
fucomp
imul
fimuls
test
int
data16
add
xchg
jns
leave
or
mov
or
push
sub
cmp
mov
pop
sti
aas
hlt
mov
dec
mov
jg
fistpll
sbb
negl
inc
adc
scas
xchg
repnz
out
jle
sub
por
subl
mov
push
les
dec
lcallw
fidivl
push
cmp
push
iret
adc
add
subb
dec
add
and
sbb
push
and
mov
movsl
jp
insb
xor
cmp
pop
in
rorb
sti
scas
sbb
es
sbb
pusha
mov
pop
dec
adc
das
mov
daa
mov
in
push
outsb
add
sarb
mov
jno
pop
pop
lcall
sub
cmp
aaa
rcl
xchg
scas
xchg
pop
jns
xchg
lret
cmp
mov
insl
addr16
cmpsl
nop
jle
jp
int3
ret
pop
les
dec
jae
imul
and
mov
in
lods
push
or
stos
ja
lock
in
mov
adc
pop
gs
cmp
call
cmp
xor
lods
xchg
mov
mov
loopne
adc
dec
aaa
lret
pop
inc
bound
adc
outsb
pushl
fwait
push
out
mov
and
test
out
mov
sub
mov
xlat
push
jl
shrl
mov
mov
out
push
ja
dec
adc
mov
out
cmpsl
xchg
xchg
pop
fnclex
arpl
loopne
sub
mov
insl
out
jbe
test
sahf
int3
fists
sub
jp
add
push
test
dec
aas
inc
sahf
xor
data16
dec
stc
clc
pop
rcrl
imul
cld
xchg
lods
push
jb
mov
mov
push
aas
cwtl
dec
int
and
mov
gs
lds
test
fsubrp
sbb
mov
cwtl
push
int3
xchg
pop
xlat
inc
stos
mov
push
lds
dec
mov
sub
lods
pop
cmpsl
mov
dec
clc
push
int
push
add
movsl
jnp
pop
xchg
scas
xor
jmp
test
cltd
lock
or
stc
mov
pop
and
testb
pop
shll
xchg
xchg
mov
aam
iret
xchg
arpl
jnp
je,pn
ljmp
dec
or
jne
cmp
mov
push
add
out
push
mov
gs
push
dec
mov
mov
imul
and
rcl
and
mov
add
add
rorl
mov
push
in
lea
sar
inc
insb
sbb
dec
xor
pop
push
adc
inc
adc
out
inc
aam
std
out
bound
fisubs
or
mov
stc
das
out
das
push
lret
push
push
in
sbb
daa
std
sahf
fmul
cli
jecxz
sbb
cmp
sub
pop
sub
jo
cmpl
lahf
icebp
jne
pop
xchg
sub
pop
js
aas
movsb
adc
mov
enter
sub
cmpsb
push
ja
sbb
les
xchg
pop
inc
or
pop
call
adc
push
mov
cmpsb
jl
jg
fsubrp
outsb
lods
cli
lods
sub
loopne
es
sbb
aas
add
and
imul
leave
jmp
loope
lret
repz
nop
inc
fwait
loopne
sub
ret
mov
inc
adc
adc
cwtl
mov
adc
pop
cmpsl
inc
inc
mov
ss
and
rol
pusha
in
push
pop
sti
mov
loopne
xlat
lahf
cwtl
and
cli
push
inc
mov
or
xor
cmc
inc
pushl
jns
pop
jb
push
insb
test
testl
adc
mov
mov
rcrl
cs
and
inc
or
cmp
add
jl
lret
or
dec
and
jns
in
fwait
sti
jl
test
inc
mov
inc
xor
xchg
imul
inc
push
outsl
cmp
xchg
mov
test
sub
dec
std
sbb
push
sbb
enter
mov
mov
xchg
sbb
mov
pusha
sub
push
push
clc
and
and
mov
jge
mov
jns
mov
inc
das
orb
add
jle
jge
lahf
add
or
and
sbb
jae
push
subl
mov
insb
js
pop
mov
divb
movsl
js
mov
cmp
test
dec
cli
and
sarb
xchg
lcall
scas
push
gs
mov
pop
pop
cltd
lods
pop
cmc
mov
cmp
cltd
sahf
push
xor
xchg
sub
adc
cltd
adc
push
call
test
cmp
inc
out
lcall
ljmp
push
cmp
jle
jmp
inc
popa
test
cmpsl
jo
xchg
add
out
pop
or
arpl
test
and
sub
add
dec
inc
mov
inc
or
cmp
push
ds
fsubrs
sub
cld
lea
sbb
movsl
xor
sub
push
ljmp
lret
repnz
out
movsb
dec
mov
adc
aad
and
dec
xor
mov
movb
push
lret
in
nop
test
gs
xor
ljmp
or
cmp
add
sub
add
mov
inc
push
ret
push
mov
pop
add
mov
les
test
jnp
xlat
scas
cmp
ss
jg
push
rcr
mov
loopne
ds
inc
jbe
lods
pop
lcall
xor
stos
sbb
fnstsw
lock
jle
and
mov
pop
int3
mov
lock
ljmp
sub
into
jb
lahf
scas
cmp
adc
push
lods
imull
ds
mov
std
sbb
xor
in
jo
pop
sbbb
push
data16
cmp
and
jne
cmp
cmp
xchg
add
dec
pusha
or
loopne
je
and
xor
ss
add
subl
lea
cmp
scas
fsubrs
cmp
add
fwait
xor
je
jle
gs
daa
jg
push
es
jecxz
or
jl
mov
mov
and
sub
lret
jecxz
int3
fdivrl
fcompl
dec
dec
mov
or
sbbb
and
pusha
loop
jl
mov
sbb
dec
imul
xor
psrlq
cmpsl
cmp
jno
lock
cmp
cli
xlat
sub
mov
icebp
outsb
add
cmp
mov
xor
test
or
adc
stos
push
insl
cwtl
pop
xchg
xchg
inc
sub
adc
xlat
std
insl
jae
dec
xor
mov
dec
unpckhps
mov
pop
push
xchg
enter
dec
push
lret
out
dec
adc
inc
xchg
adc
jl
xor
push
xchg
cli
inc
adc
mov
and
shlb
imul
popf
sub
jne
rorb
loopne
enter
jae
sbb
stos
pop
add
idivl
addr16
sti
scas
pop
jo
sub
mov
xor
jb
and
aaa
loop
push
loop
mov
mov
and
shl
rolb
in
xor
stos
cli
repnz
icebp
push
push
lret
mov
frstor
out
xchg
pop
lcall
fwait
xor
mov
inc
loop
jae
test
xchg
xor
dec
cmp
mov
inc
sub
mov
loopne
ss
xor
push
sub
inc
or
jle
sbb
adc
stos
add
adc
out
or
hlt
mov
ret
call
mov
sub
mov
daa
xchg
mov
in
cmpl
mov
push
mov
push
pop
jmp
aad
sub
mov
inc
aaa
add
xchg
and
cwtl
popa
int
nop
fbstp
stos
jno
ja
jb
mov
dec
addl
movsb
ljmp
sbb
xor
and
mov
cmp
xchg
cs
sub
jae
cmp
and
pop
push
jmp
ficomps
cmpsl
and
jge
cs
sbb
test
ss
and
mov
movsl
jnp
sbb
cmp
and
nop
mov
push
jo
jo
mov
je
loopne
inc
lods
lock
push
xchg
mov
inc
and
out
sti
inc
mov
and
xchg
cltd
pop
add
out
lcall
and
data16
in
ror
push
pop
es
mov
fs
jns
cmp
aaa
mov
jge
jb
jmp
xor
xchg
push
mov
cmp
push
pop
cmpsl
mov
test
aas
cli
jg
add
nop
jmp
in
fs
shlb
rolb
cwtl
cmp
dec
cmp
sub
es
push
dec
push
sbb
xchg
mov
or
push
daa
popl
cmc
repz
inc
rorl
sbb
cmpsb
test
test
inc
popa
jmp
fst
and
mov
test
sbb
repz
push
movsl
mov
and
int3
xor
mov
aad
shll
and
cmp
adc
mov
cmp
rcl
add
pop
pushf
bound
jle
push
fs
int
shll
bound
sbb
cmp
arpl
pushf
push
xor
mov
aam
adc
pusha
pushf
adc
and
jnp
out
jae
inc
in
pop
mov
icebp
test
inc
xchg
fsub
cwtl
mov
into
popa
testl
jb
mov
add
cmp
jle
sub
or
sbb
mov
rcll
ja
es
movsb
aaa
dec
fsts
mov
adc
sahf
aad
icebp
or
add
and
xchg
push
popa
loop
sbb
repz
aad
adc
test
xchg
fbld
sbb
dec
lret
xchg
dec
cli
test
ja
push
jecxz
outsb
inc
mov
mov
nop
fcomp
out
je
out
rclb
and
test
pop
cmp
jp
pop
sbb
add
aas
mov
pop
sbb
das
mov
jecxz
push
pop
ja
xchg
std
lahf
in
add
lods
out
dec
and
add
xchg
sub
xor
and
fwait
shll
pushf
xor
push
inc
jl
mov
pop
sbb
cmc
adc
loope
jbe
xor
out
sub
mov
jo
cli
int
sbb
fistl
xbegin
inc
stc
add
xor
rol
ja
je
mov
lea
or
in
mov
hlt
rclb
pop
inc
jge
and
xor
push
mov
adc
test
add
gs
stos
sub
aas
mov
dec
repnz
cmpsb
adc
dec
fisubl
movsl
test
notb
imul
inc
xchg
popa
dec
xchg
push
push
jp
pop
sti
pop
cs
lods
jmp
jne
sbb
mov
xchg
lock
jne
jp
xor
jge
adc
outsl
jo
mov
jmp
dec
and
ret
jbe
test
aam
or
cmpxchg
push
inc
les
loope
ss
mov
into
mov
in
loopne
inc
in
cmp
sbb
scas
and
jle
ja
xchg
aad
push
add
or
add
mov
dec
mov
test
lods
cmp
mov
popa
aad
lret
cmp
cltd
xchg
inc
cmp
insb
sub
in
and
int
dec
fwait
add
popa
shll
pusha
xchg
inc
pop
fisttps
or
push
outsb
daa
pop
jmp
bound
outsb
rolb
mov
sbb
bound
loopne
addr16
sarl
jle
lret
pop
shr
cltd
mov
push
sub
push
scas
fs
inc
inc
mov
in
test
adc
add
lods
inc
jp
push
fcompl
xor
inc
lahf
test
xchg
movsb
dec
dec
adc
stos
pop
in
mov
inc
sbb
inc
mov
repz
hlt
wrmsr
add
mov
pop
lcall
sbb
mov
jne
jno
int3
push
insl
in
std
les
testb
imul
bnd
sahf
or
xchg
mov
xchg
or
xor
jo
sbb
test
push
repz
pop
or
addr16
div
mov
mov
scas
mov
insb
cmp
push
je
mov
clc
stos
arpl
daa
fldt
in
inc
addb
jbe
jae
inc
rolb
adc
add
xchg
push
dec
shlb
call
mov
rorb
mov
push
xchg
jbe
fsub
pushf
lahf
adc
lea
in
mov
inc
pop
add
and
fs
loopne
into
in
in
jo
test
sbb
lods
jle
sbb
sbb
jb
inc
sahf
inc
add
das
ss
sub
out
sub
testb
les
push
and
cmp
xor
in
adc
mov
sbb
lret
insl
and
shl
sbb
fnsave
sub
jbe
add
xchg
sbb
loopne
loope
frstor
lds
mov
mov
push
mov
mov
loope
adc
stc
scas
insb
dec
dec
lods
and
sbb
mov
icebp
negb
popa
scas
xor
pop
mov
cmp
insb
stc
sub
mov
pushf
push
push
xchg
mov
lods
and
inc
sbb
fwait
clc
fsubl
dec
xor
inc
sub
stos
cli
lret
jl
and
adcl
cld
cmp
push
jne
push
push
jg
fcmove
aas
lods
cmp
sbb
incb
sub
pop
fcmove
or
pop
cld
jo
ret
cmpb
inc
mov
shrl
loope
scas
xchg
adc
adc
mov
insb
and
cli
xorl
or
dec
pop
scas
adc
outsb
mov
stos
xchg
sub
mov
add
sarb
enter
inc
insl
sbb
imul
pop
jns
mulb
xor
adc
adcb
aam
dec
mov
jae
mov
dec
cmpsb
lods
das
jb
ss
enter
or
scas
sarl
dec
mov
dec
mov
test
xor
or
mov
mov
bound
fisttps
stos
pop
sub
xchg
pop
inc
pop
mov
pop
inc
jg
xchg
mov
std
mov
scas
iret
fistpll
bound
in
or
addr16
in
cmc
jge
out
or
clc
xchg
mov
cmp
push
stos
test
sub
jno
dec
mov
lret
rcr
shl
xchg
or
sbb
data16
fistl
adc
push
clc
mov
or
mov
or
jp
mov
cmp
aam
push
cmpsb
pop
in
and
inc
stc
nop
inc
mov
xchg
daa
mov
clc
test
jle
test
addr16
inc
xor
add
inc
or
add
scas
pop
stos
ss
and
adc
mov
popa
jne
jecxz
xor
xchg
push
jne
add
popf
movsb
pop
stc
push
es
je
mov
or
ss
xor
pop
mov
pop
dec
arpl
add
xchg
adc
ja
pop
mov
stc
orb
mov
jmp
inc
xchg
and
push
andb
imul
mov
cltd
mov
hlt
movsl
and
add
add
lret
pusha
jne
or
pop
sub
inc
add
pop
fadd
xor
in
stos
addl
pop
int
std
js
in
sbb
mov
pop
test
and
shll
jnp
stos
mov
jnp
stc
repnz
stos
mov
push
pop
imul
cmpsl
std
mov
out
mov
inc
jg
sub
lret
jno
push
inc
pop
push
push
push
inc
add
lds
and
movsl
inc
cld
dec
pop
test
pushf
inc
in
jbe
nop
lods
lea
stc
xchg
push
xor
xlat
add
sbb
pop
fnstenv
sbb
jb
or
not
in
pusha
rcr
push
or
ret
jns
lcall
cltd
xchg
adcl
cltd
icebp
pop
ret
mov
std
inc
call
sti
lds
push
icebp
dec
scas
lcall
xchg
addr16
fisttpl
push
arpl
inc
movsb
mov
fdivp
fcoml
enter
mov
mov
fisttps
cmp
aam
lcall
sub
xchg
inc
ret
mov
sub
push
mov
xor
xor
cmc
out
jo
inc
sahf
sbb
jb
aaa
lea
test
inc
jp
mov
fwait
jge
fiadds
insb
aaa
sbb
ficoml
mov
es
push
inc
pop
aaa
negl
fisttpl
push
shll
mov
sti
and
xchg
sbb
cmp
cmp
dec
popf
adc
movsb
ss
dec
mov
jmp
divb
or
sub
sub
jg
ror
cs
push
pushf
int3
mov
xor
fwait
mov
push
mov
xchg
lods
ror
cmpsb
mov
jae
jle
add
popf
pop
shll
and
jmp
fcom
push
out
push
push
movlps
int3
add
and
adc
movsl
cmp
push
scas
lods
call
xchg
in
jnp
jmp
clc
nop
sub
pushf
pop
fcmovb
jge
in
fistps
add
push
cs
sbb
arpl
fwait
inc
idivl
test
dec
add
mov
rolb
ret
lret
cmp
dec
and
dec
add
dec
sbb
mov
and
dec
pop
mov
xlat
das
mov
stc
les
imul
nop
xchg
jb
dec
negl
ret
sar
sbb
or
push
push
xchg
xor
daa
sbb
cmc
push
mov
cmpsb
push
imul
and
fiaddl
jle
sub
sbb
jno
shrb
dec
adc
cli
rorb
xor
pushw
das
push
mov
fistpll
mov
subb
mov
bound
cmc
lret
shrl
daa
scas
cmpb
fwait
cmp
xchg
add
clc
dec
adc
jg
lock
push
mov
mov
xor
mov
sbb
fimuls
gs
lock
addr16
stc
or
nop
and
lahf
dec
icebp
aad
scas
xchg
jo
sub
jo
imul
shll
add
mov
mov
dec
out
push
xor
add
sbbl
popl
jmp
shll
pop
call
mov
jbe
pop
push
loopne
bound
pop
loope
or
push
inc
ja
pop
sub
adc
mov
mov
aam
fdivl
aad
je
mov
loopne
in
push
inc
pop
dec
in
insb
cmp
nop
out
push
jle
dec
arpl
xlat
fisttpll
aas
mov
je
sbb
lahf
sub
daa
out
fistpl
mov
mov
cmp
fimull
movsl
mov
out
dec
jne
inc
popf
fs
inc
and
inc
mov
lds
roll
pop
mov
fistpl
js
movsb
xor
push
xchg
adc
inc
ret
mov
mov
call
fwait
or
outsb
push
xor
mov
add
mov
push
lcall
ret
cltd
bound
or
mov
dec
jecxz
repnz
jle
mov
sub
sbb
cmpsl
imul
lds
dec
arpl
setbe
rclb
js
dec
sub
pushf
sub
dec
mov
sbb
mov
int
ss
cli
mov
mov
or
repz
or
xor
cwtl
jge
pusha
push
imul
popa
adc
pushf
push
xchg
iret
and
sbb
inc
shrb
sbb
popf
out
jp
and
inc
das
xor
mov
xor
xorl
out
pop
icebp
int
jb
test
fistpll
test
push
mov
popf
adc
sub
jno
cmp
cmp
cmp
and
lock
add
xor
pop
aam
stc
std
fldt
inc
loop
inc
cmp
xchg
stos
outsb
or
adcb
push
inc
add
mov
into
mov
xchg
mov
xor
xor
fmul
adc
test
ret
aaa
jp
ret
in
and
int3
and
ret
inc
mov
idivb
movsb
gs
xor
pop
or
inc
xchg
push
stos
sahf
test
mov
popf
and
rol
pop
pop
and
xlat
cmp
test
repz
inc
dec
fwait
shrb
out
inc
orl
test
mov
cmp
xor
shll
repnz
xchg
push
mov
jbe
jle
out
adc
stos
xchg
loopne
mov
insb
lahf
jb
fwait
call
jmp
leave
rolb
test
mov
mov
repz
xchg
shll
push
push
arpl
xchg
cld
sub
mov
push
ret
je
rcrl
enter
cwtl
dec
sub
dec
cmp
push
sbb
sub
xchg
int3
xchg
pop
add
rclb
xor
cmc
and
xor
and
fcmovnbe
int
ss
enter
jecxz
push
in
dec
jbe
cmpsb
jne
mov
mov
daa
in
push
stos
or
insl
outsl
inc
outsl
push
add
scas
ss
inc
ror
sbb
jns
mov
pop
xchg
loope
push
in
cld
dec
sbb
cmp
andb
mov
push
mov
incl
les
cmp
jae
aad
push
les
in
repnz
rclb
fcmove
mov
bound
sub
jb
xchg
cmc
ret
adc
stos
adc
push
pop
sbb
pop
repnz
and
dec
pop
or
repz
add
jae
mov
sub
cld
jp
mov
sub
xor
push
lods
pop
test
mov
xchg
xor
adc
jnp
popw
outsb
adc
fs
aad
rcll
jns
pop
mov
out
cltd
in
out
cld
jnp
mov
cmpsb
and
in
cmc
pop
call
dec
jg
fcomps
sbb
pop
into
in
pop
pop
out
aaa
add
shll
loope
push
mov
gs
jp
and
mov
rcrl
or
or
jecxz
mov
movl
mov
push
mull
adc
sti
pushf
shl
jp
mov
or
scas
pop
or
in
jecxz
mov
inc
cmovp
xor
mov
add
out
loop
mov
aam
and
lahf
and
lock
dec
roll
shlb
inc
imul
cmp
mov
out
int
daa
lea
xor
pop
sbbl
outsb
or
mov
into
sahf
fsubs
jnp
std
push
pop
ljmp
imul
lock
inc
jle
lahf
adc
xlat
mov
pusha
adc
testb
and
fiaddl
mov
out
inc
mov
xchg
pop
mov
inc
arpl
mov
pop
aam
mov
and
shlb
ret
dec
imul
lods
mov
jae
pop
push
arpl
jb
jmp
dec
ret
in
mov
add
adc
xor
ja
subl
jmp
adc
stos
or
lock
mov
mov
sub
push
adc
inc
jae
push
adcl
aas
subl
gs
clc
inc
push
pop
fcoml
mov
sub
lods
mov
jle
scas
cmp
mov
sti
add
imul
insb
ja
xor
dec
sub
sti
call
mov
xchg
mov
sbb
mov
mov
jbe
icebp
sbb
lock
lock
rcrl
hlt
cld
fwait
mov
shl
imul
push
sbb
dec
xchg
mov
jecxz
mov
push
and
push
mov
enter
ret
pop
movsb
pop
std
xor
stos
pop
repz
in
roll
cmp
cmp
imul
lods
ljmp
cmp
repnz
cld
and
jecxz
and
push
loopne
mov
bound
xor
int3
wbinvd
or
xchg
sbb
adc
pop
sbb
push
adc
mov
pop
gs
ret
xchg
pop
add
mov
int
push
push
xor
movsb
pop
adc
sbb
fsubrp
and
mov
dec
sub
mov
cmp
sub
leave
add
jmp
jo
out
inc
popf
mov
inc
out
jnp
push
cmp
outsl
push
push
push
pop
pop
mov
cs
or
inc
mov
add
mov
mov
sbb
lret
sub
stos
pop
dec
xor
add
sub
fwait
jg
idivb
shr
push
repnz
loop
cmp
addr16
scas
es
xor
insb
hlt
jp
shlb
xchg
je
fmul
cmp
xchg
xor
orl
jl
sbb
mov
or
inc
arpl
sbb
sub
outsl
loopne
mov
rorb
dec
outsl
or
jge
pusha
stc
loope
and
stos
movsl
mov
xchg
das
cld
push
fwait
leave
adc
push
leave
cmpsl
cs
adc
mov
into
in
push
in
dec
out
sub
adc
sub
aaa
sub
and
je
inc
mov
pop
mov
ret
mov
lds
dec
arpl
sahf
inc
jge
jecxz
fcompl
mov
jmp
mov
sti
fmuls
in
inc
scas
mov
mov
jl
mov
loop
imul
fidivs
xlat
cwtl
push
adc
nop
push
dec
adc
test
mov
aaa
jp
repz
lds
hlt
mov
and
rcr
inc
jg
sub
mov
stos
or
sub
jge
push
pop
aas
subl
int3
lcall
outsb
stc
xor
cmpl
mov
pop
mov
es
dec
mov
xchg
pop
cmp
stos
aas
or
fcmovnu
jne
add
ljmp
sbb
inc
cmpsb
xor
jle
add
ret
loope
les
es
shlb
mov
inc
adc
and
jl
pusha
stos
mov
addb
jns
aam
sbb
and
repnz
rclb
cwtl
push
mov
mov
hlt
mov
bound
enter
mov
imul
cmp
call
push
bound
and
sti
clc
ucomiss
xchg
loope
and
inc
inc
pop
int3
xchg
add
js
pop
repz
fmuls
lret
lods
test
mov
and
inc
mov
test
pop
lods
xor
rcr
mov
dec
mov
insb
imul
ret
test
push
push
sub
dec
adc
aas
xor
ja
jecxz
xlat
sub
rorb
fldcw
mov
stc
jne
cmc
mov
movsb
sbb
hlt
jae
jge
mov
dec
std
fcmove
jecxz
negl
imul
gs
mov
rol
or
lahf
adc
ja
pop
insb
xchg
fnstcw
enter
inc
push
inc
pmaddwd
sbb
add
push
or
mov
jns
fdivrs
cli
cli
aad
mov
jl
pop
mov
xor
dec
sbb
or
xchg
cmp
inc
subb
inc
test
andb
mov
shll
inc
adc
and
dec
pop
dec
xchg
cmp
mov
pop
das
mov
iret
stc
cmp
xchg
sub
out
xchg
lret
fsts
pop
push
ljmp
rolb
pop
pusha
lahf
jb
adc
add
mov
out
sbb
mov
cli
push
adc
insb
rorl
dec
cmp
jmp
adc
jmp
jl
jb
mov
sub
jl
inc
rorl
add
orb
fsubs
or
pop
test
mov
mov
sbb
push
clc
sub
dec
pop
dec
adc
sub
clc
lock
dec
decb
xor
js
mov
inc
pop
test
add
xchg
outsl
repnz
fildll
in
mov
xchg
cmpl
jmp
mov
mov
xor
pop
adc
xlat
jo
repnz
push
xchg
ror
mov
fldl
push
push
jge
xchg
mov
jae
popf
movsb
xchg
lret
pop
repnz
rcrb
push
subb
cmpsb
inc
mov
imul
test
mov
jb
popf
sub
cmp
push
pop
push
pop
cmp
lret
sbb
jmp
dec
adc
mov
popf
inc
xchg
cmp
and
jg
out
sub
clc
xor
push
xor
jg
jp
in
mov
sbb
scas
jns
dec
add
mov
xchg
sub
pop
cmp
mov
dec
cmp
pop
jbe
lods
pop
sbb
xor
or
sub
adc
mov
push
or
xlat
pop
ja
jno
rcr
and
pop
xlat
aaa
mov
pop
and
movsl
xchg
push
clc
icebp
mov
adc
pop
or
outsb
push
repnz
ret
jns
in
cmp
sub
into
rcll
sub
push
pushf
cmpsl
mov
in
lret
test
ret
sub
push
daa
sub
out
mov
mov
cmp
and
fnstcw
popa
mov
movsl
cs
cwtl
dec
jecxz
mov
and
lret
in
js
fcoml
loop
filds
je
sti
cmp
notb
inc
inc
jbe
into
imul
mov
inc
sbb
mov
sahf
or
fistpll
xchg
pop
enter
jmp
iret
aas
mov
mov
repnz
add
add
mov
push
cmp
ds
lret
mov
lds
jbe
stos
roll
dec
jns
mov
mov
test
mov
pop
pusha
dec
in
adc
mov
cmp
icebp
adc
in
addr16
sbb
rcrl
dec
ljmp
lea
xchg
movsb
mov
dec
fbld
lcall
push
shll
fwait
xchg
int
popf
jmp
or
sbb
out
push
test
push
aas
repnz
fimull
pop
xchg
rolb
loope
sbb
add
inc
ficomps
leave
push
inc
cmpsl
sub
mov
mov
stos
push
jl
fstpl
mov
or
jne
or
mov
push
pusha
adc
stos
inc
push
jnp
add
xchg
icebp
lret
jecxz
pop
mov
enter
cld
cltd
push
lcall
xchg
push
push
std
sub
pop
clc
mov
sub
cmp
repz
ss
lds
fmuls
mov
push
call
xor
adc
dec
jno
jne
sub
add
fildll
push
push
or
ss
lods
cmpsl
xchg
mov
xchg
push
add
sbb
imul
mov
add
orl
xchg
sbb
inc
push
push
scas
fnstenv
aad
mov
inc
hlt
lods
pop
ja
sahf
jg
add
dec
aam
fnsave
ss
mov
dec
std
in
jp
jmp
jmp
cs
xor
mov
adc
adc
push
icebp
mov
das
mov
push
add
or
pushf
ror
out
or
push
fistpll
pop
pop
mov
lret
cmp
fs
mov
test
ds
and
mov
cmpsl
insb
scas
int3
fmuls
call
mov
sbb
cmp
fcoms
fs
std
push
push
jg
loop
xchg
sub
jg
push
push
fisttps
testb
lret
decl
cmp
xor
movsb
pop
lcall
xchg
nop
sti
cmc
repnz
outsb
dec
mov
lods
shlb
mov
sbb
cmp
sbb
dec
jecxz
test
pop
sbb
mov
aam
in
push
inc
fsubrs
inc
mov
or
push
popf
inc
pusha
fdivl
sahf
lds
int3
loop
movsl
push
or
data16
ja
sbb
mov
and
jge
andb
mov
jp
add
sar
adc
cs
jo
pop
js
adc
int
pop
pop
inc
xchg
mov
cli
mov
loop
sti
sbb
push
into
dec
les
inc
ja
repnz
jle
jne
ret
jne
cltd
adc
add
repnz
out
push
add
dec
inc
shl
dec
bound
xor
mov
or
daa
hlt
test
daa
push
mov
jbe
mov
cli
shlb
aam
jl
pop
jg
mov
push
les
add
in
out
mov
push
adc
lret
sub
call
sub
mov
in
mov
andb
std
dec
jl
ds
xor
jle
jmp
jae
imull
xchg
xchg
lods
stc
xchg
jle
jo
cmp
ss
mov
dec
push
inc
hlt
jns
jae
lock
mov
les
push
or
rcrb
mov
push
icebp
push
sbb
xlat
mov
test
pusha
movsb
inc
das
dec
xchg
call
or
mov
addr16
inc
dec
and
mov
out
setp
out
mov
or
ljmp
xchg
lret
cmp
test
orl
cmp
adc
pop
cmp
lret
shll
int3
and
cmp
cmp
sbb
add
lea
adc
test
push
adc
push
xchg
test
inc
pop
psrlq
xchg
or
dec
fs
jae
and
cld
ja
adc
pop
sbb
divb
xchg
sahf
and
in
pop
or
mov
ljmp
add
clc
je
and
and
sbb
jp
dec
cmova
mov
js
push
mov
sahf
pop
sbb
sbb
dec
mov
dec
stc
pop
mov
aad
mov
popa
sbb
outsb
je
push
in
and
clc
mov
cmpsl
lock
mov
ljmp
push
mov
and
int3
inc
test
sbb
push
mov
and
loop
in
xchg
sbb
mov
outsl
pusha
mov
xchg
mov
inc
test
mov
dec
xchg
fcmovu
pop
mov
je
pop
push
pop
gs
mov
mov
iret
in
dec
cmp
aad
jb
fmulp
mov
mov
lcall
mov
aad
sub
aad
dec
in
enter
or
lods
rolb
repnz
out
push
das
pop
jno
fs
leave
in
das
jns
pop
add
jp
movsb
or
iret
subb
mov
fadd
enter
insb
out
sahf
sbb
outsb
nop
or
jg
push
xor
in
push
adc
adc
xor
fs
pop
ja
pushf
and
mov
or
cld
dec
in
xor
fisubrl
fs
addb
bnd
test
popa
cmp
pop
cmpsl
lea
mov
mov
add
inc
popa
mov
cmc
out
mov
push
sbb
cwtl
or
sbb
xor
leave
js
out
hlt
mov
scas
sub
fmull
scas
xor
dec
sbb
fsubl
push
cmp
test
rclb
insb
pop
stos
and
outsb
stc
mov
push
mov
insb
dec
adc
stos
dec
jno
mov
int3
xchg
and
or
mov
mov
add
mov
nop
or
pop
dec
imul
lret
mov
in
js
sahf
rcrl
and
out
jb
jecxz
cmp
sub
xchg
jne
pop
shl
add
cmp
je
sbbl
lods
popf
inc
and
and
movsb
iret
sub
loopne
push
push
out
add
stos
sbb
out
adc
sub
push
testb
aam
pop
cmp
nop
xchg
int3
add
push
mov
xchg
xor
imul
outsl
or
jae
movl
aam
jns
push
std
sbb
mov
lock
mov
aaa
inc
test
sub
sub
in
in
pop
adc
jecxz
mov
sarl
sbbb
cmpsb
into
sub
sbb
lods
add
pop
dec
pop
in
pop
jnp
or
xor
pop
xor
pop
lock
dec
mov
dec
mov
ss
pusha
sarb
mov
outsl
cmp
jb
shlb
pop
imul
dec
add
lods
mov
loop
into
jae
ss
or
dec
loop
push
push
cmpsb
addr16
adc
pushf
mov
push
push
idivb
dec
push
insl
popa
mov
aaa
comiss
sbb
sti
js
pop
repz
fwait
adc
cmp
sahf
enter
pcmpgtw
test
jb
fisubl
cs
push
inc
out
adcb
push
nop
push
jl
jo
pop
insl
mov
psllq
ljmp
adc
sbb
ja
mov
aas
or
addb
es
sbb
test
cmp
negb
insb
cmp
stc
cmp
add
jbe
mov
int3
stos
sbb
mov
cmp
xor
xchg
cltd
es
or
ds
idivl
and
insb
sbb
xor
and
mov
push
push
xor
dec
stos
add
push
imulb
daa
pusha
hlt
and
cmc
movsl
inc
add
stos
sub
outsl
aam
pop
push
subl
push
out
sbb
ror
imull
mov
outsb
movsb
iret
push
aas
jmp
jae
aaa
mov
repz
jmp
pushf
addr16
xor
xchg
sub
cmp
icebp
or
cmp
movsl
data16
aas
outsb
sub
push
push
mov
in
pop
lahf
nop
pop
fnstsw
stos
jnp
ja
jecxz
out
push
jo
push
push
sbb
xor
jmp
adc
dec
push
xor
das
xchg
push
dec
and
pop
pop
jo
dec
mov
mov
adc
cli
fnsave
je
sub
xor
adc
xchg
add
dec
in
mov
mov
mov
sbb
sbb
push
int
adc
sbb
imul
mov
test
xchg
subl
mov
xor
jmp
lahf
inc
dec
int
aam
pop
popa
inc
cli
stos
mov
add
scas
in
icebp
flds
xchg
and
movsl
out
jl
fldcw
xor
inc
out
ror
popf
popf
cs
inc
jecxz
mov
or
mov
cs
mov
icebp
loopne
out
popa
xchg
jb
mov
jns
in
in
iret
insb
ja
std
mov
or
and
movsl
hlt
xchg
int
mov
test
or
popa
scas
inc
pop
add
push
add
pop
cmpsl
xor
sbb
mov
fmulp
mov
es
mov
faddp
jmp
mov
xor
std
loope
sbb
xchg
into
inc
jmp
or
jmp
and
std
ljmp
sbb
fiaddl
jge
sub
mov
mov
mov
sub
imul
into
push
push
int3
xchg
ds
xor
mov
in
cs
lcall
mov
xchg
and
and
sbb
dec
out
xchg
sub
sbb
jnp
or
aad
adc
inc
sbb
adc
outsb
pop
cmpsb
xor
push
popa
adcb
rorb
jae
xlat
inc
mov
and
mov
cs
pop
loope
outsb
loope
push
mov
adc
aad
dec
mov
mov
imul
xchg
stos
mov
icebp
push
sbb
es
inc
sub
xchg
inc
mov
inc
flds
xchg
adc
ficompl
in
sarb
cltd
mull
fwait
mov
jns
dec
adc
push
jne
adc
popf
daa
pushf
inc
and
sbb
jnp
arpl
mov
jg
xchg
jl
inc
cli
stos
inc
mov
std
es
idiv
jns
dec
or
mov
xchg
rcrb
std
fistpll
sub
test
jg
fsubl
pop
data16
mov
shll
std
mov
mov
or
xor
cmp
sbb
push
fsubs
test
dec
push
mov
movsl
add
mov
push
iret
fildll
mov
mov
cli
push
das
sbb
inc
imul
mov
cmpsb
or
scas
popa
jae
dec
jmp
xchg
xorb
sub
gs
fwait
fwait
dec
sti
add
clc
jns
jns
nop
push
or
sti
and
and
aam
je
mov
mov
scas
lods
aaa
xor
adc
jmp
int3
xchg
adc
push
inc
inc
cmp
mov
call
out
pop
mov
mov
fstpl
mov
xor
int3
int
lret
mov
pop
adc
add
popf
mov
cmp
stos
repnz
inc
pop
loop
cmp
mov
and
flds
xor
jg
daa
clc
enter
add
jmp
jnp
stos
stc
imul
jns
xchg
pop
jle
imul
pop
mov
notb
fcmovnb
adc
push
stos
out
bnd
jb
mov
test
repz
int
inc
xchg
dec
daa
enter
adc
cmp
sub
xchg
cmpsb
repz
sub
in
out
std
or
jno
mov
cmp
jle
shrb
and
cmpsl
cmp
jb
dec
xchg
out
mov
mov
out
push
xchg
jnp
pop
rcll
xchg
gs
mov
imulb
fmulp
push
jno
cld
push
shlb
sub
mov
or
sbb
or
frstor
out
test
data16
adc
pop
enter
inc
pop
mov
mul
pop
loop
push
add
call
decb
push
adc
movsb
jae
jp
movsl
cwtl
inc
mov
add
jecxz
shlb
popf
scas
xchg
test
shlb
in
ss
cmc
imul
popa
negb
outsb
nop
cmp
mov
addb
or
pop
dec
push
jmp
add
outsb
cs
pop
addr16
test
pop
cmp
sahf
mov
xchg
sarb
test
jg
ret
sbb
mov
add
push
sub
fadd
xchg
xchg
out
and
jae
pop
pop
sub
fwait
or
or
xchg
mov
stos
cmpsb
xor
inc
jns
adc
cld
addr16
lds
inc
pop
and
mov
sbb
push
cwtl
mov
fdecstp
roll
jmp
sahf
pushf
fs
inc
call
ss
cmp
sbb
mov
shll
stos
test
cmp
xor
jmp
ss
in
push
push
cwtl
lea
xor
pop
lods
pop
push
mov
fisubl
add
push
sub
out
ret
cli
inc
push
push
jnp
pop
iret
in
push
shll
lret
stos
cwtl
mov
push
mov
inc
jge
cltd
mov
inc
cmp
mov
pusha
add
sti
imull
inc
cmpsb
fincstp
xchg
xor
mov
dec
pop
or
sbb
pop
stos
outsl
sbb
add
mov
aad
push
lea
in
inc
pop
or
std
adc
out
clc
push
outsl
push
aaa
add
pop
jbe
push
mov
repnz
cli
or
push
mov
fnstsw
sbb
in
mov
mov
mov
sub
mov
dec
test
push
xchg
aam
pop
jge
sub
lods
jns
mov
lcall
sahf
subb
jge
shlb
mov
scas
orl
dec
pop
push
lods
int
inc
stos
hlt
and
aaa
out
mov
xchg
xorl
rcll
xor
mov
dec
xor
repnz
aas
xlat
clc
cmpsl
sub
push
sbb
out
dec
dec
fsub
jp
sbb
push
sar
std
inc
mov
scas
and
shl
cwtl
jg
sub
mov
and
lods
in
aaa
fmul
xchg
add
inc
das
sbb
or
hlt
cmpl
mov
mov
jmp
jns
js
xchg
fidivrs
mov
cmpsl
mov
pop
test
sub
xchg
or
aaa
cs
loop
outsb
dec
push
sub
and
inc
inc
mov
inc
pop
cwtl
lock
jecxz
pusha
mov
or
mov
fnstsw
addr16
lahf
cwtl
andb
out
and
mov
ja
aam
gs
in
fildll
xor
push
jb
sub
lods
ficompl
jnp
cmp
popa
andl
fdivrl
mov
imul
lret
jl
mov
add
mov
ret
roll
scas
das
jno
pop
xchg
push
adc
test
mov
sub
rcl
sahf
sarl
mov
sbb
ds
mov
mov
gs
shr
je
pop
dec
add
push
leave
das
repnz
xor
fdiv
inc
or
icebp
sub
add
add
scas
mov
pop
cmp
jmp
pop
std
rcr
int
rcll
push
loop
leave
mov
mov
inc
test
fcoms
jo
xchg
pop
ret
popf
scas
movsl
dec
and
push
ret
jg
jnp
cmp
mov
pop
sub
xor
add
push
push
mov
mov
into
cmp
pop
lret
dec
inc
push
or
adc
and
sub
jge
sbb
sub
rcl
call
fcom
into
pop
mov
aam
jbe
add
xchg
sbb
fmuls
loop
pop
xchg
jl
xor
sub
leave
clc
sub
test
cmpb
stos
repnz
cmpsl
ror
jns
jecxz
sbb
pop
cld
lods
popl
inc
mov
sbb
pop
adc
mov
loopne
xchg
sub
mov
lds
xor
mov
xor
xor
or
add
fiaddl
pop
cltd
pop
mov
pop
neg
arpl
cwtl
push
mov
adc
shrl
popa
rol
arpl
fxch
mov
stc
push
cmp
imul
in
inc
je
push
mov
fidivrl
repnz
dec
fs
xchg
pop
mov
dec
stos
aam
push
shll
in
fistpl
insl
dec
inc
js
mov
jae
loope
adc
or
push
ja
sub
pop
xchg
inc
mov
mov
dec
mov
mov
xchg
das
movb
mov
mov
sti
add
js
mov
xchg
mov
jle
push
xchg
inc
push
sbb
movsb
clc
xchg
mov
inc
push
mov
das
adc
out
in
add
ret
adc
cmp
out
call
add
dec
aas
and
sub
outsl
mov
xchg
mov
mov
stos
icebp
aad
fs
jae
or
fwait
aam
xchg
ret
jae
sub
push
mov
dec
push
lds
dec
adc
out
nop
and
jno
popf
jne
cmp
ret
pop
shll
lods
fwait
cmpsl
push
xchg
mov
pop
xor
or
fbld
shrb
testb
mov
lds
adc
lods
ja
movsb
add
and
jae
scas
dec
cmp
aaa
test
stc
pop
into
mov
outsl
ficompl
push
dec
sub
loop
pusha
sbb
push
mov
inc
aas
pop
mov
leave
fisttpl
push
gs
xor
ffree
int3
popf
popf
and
int3
mov
adc
dec
inc
sbb
mov
ret
nop
testb
outsl
in
hlt
gs
nop
jp
into
mov
jo,pt
fiadds
mov
std
jmp
enter
aad
pop
and
outsl
subb
dec
and
mov
xlat
subb
sub
and
lret
movsl
loop
outsl
dec
ja
xor
js
xor
ja
jae
xor
cwtl
sbb
les
test
cmp
push
push
popf
cmc
out
in
popf
dec
jl
push
sub
daa
xchg
mov
adc
fdivs
sbb
dec
dec
ucomiss
sub
xor
mov
pushf
dec
sahf
sarl
notb
push
ret
jmp
je
int
stos
int
inc
call
movsl
add
pushf
pop
arpl
rcrb
mov
in
pop
add
jl
loopne
cli
or
pop
pop
stos
andl
mov
scas
dec
xor
push
push
xchg
movsb
mov
cmp
leave
mov
insb
xchg
xchg
out
pop
inc
out
sbb
movb
rcll
je
mov
jns
enter
iret
inc
lret
adc
mov
inc
xchg
mov
in
ja
inc
cmp
mov
jecxz
inc
and
cs
dec
or
ret
jle
dec
dec
movsb
and
lahf
mov
andb
lock
arpl
int3
jno
loopne
add
cmc
gs
inc
sarb
test
push
pop
in
or
aas
cs
jae
cmp
cmp
jl
push
add
pop
adc
jb
rcl
add
les
xchg
ja
out
push
jg
shrl
pop
xor
mov
aam
mov
pushf
or
es
cmp
push
pop
cmp
add
fistps
shll
aas
push
fcom
in
pop
pop
and
push
jle
jbe
inc
sahf
cli
lods
mov
add
add
int
das
inc
cmpsb
sbb
sub
xor
cmpsb
test
nop
stc
xor
push
and
add
dec
xor
cmp
inc
ds
push
add
ljmp
enter
mov
sahf
stos
subl
mov
or
rcrb
or
movsl
or
out
jo
pop
hlt
jmp
mov
test
jle
cld
adc
add
mov
or
sub
add
dec
std
leave
addr16
jmp
jae
add
sbb
or
cmp
je
clc
mov
aaa
adc
jns
dec
rcrl
xlat
jae
cld
lds
outsl
fldenv
and
clc
mov
leave
lods
sbb
sub
pop
add
lret
xchg
lods
mov
sbb
leave
dec
cmp
mov
rorb
push
cwtl
loope
or
nop
rolb
add
push
lods
shr
and
sub
cmp
jecxz
pop
popf
sti
outsb
mov
add
aas
cld
imul
cmp
popf
insb
mov
arpl
ror
arpl
jno
out
jns
push
ljmp
ret
pop
int
fdivrl
jns
inc
or
inc
int3
xchg
das
push
jl
add
sbb
dec
sbb
pop
and
pop
jg
push
cmp
aad
cmp
sub
fsubr
or
aad
cmp
leave
mov
movsl
add
dec
or
icebp
sbb
lods
and
mov
mov
pop
repz
dec
or
mov
mov
push
xor
test
xlat
les
leave
mov
pop
push
dec
aam
out
inc
adc
lods
stos
inc
jae
dec
sub
and
sbb
bound
in
jmp
dec
dec
gs
fistpl
ret
xchg
int3
pop
adc
cmpsb
ffreep
sbb
mulb
jecxz
nop
sbb
aad
gs
push
mov
popa
mov
pop
repz
inc
push
stos
cmp
aaa
fldcw
jae
jno
xchg
cli
jne
in
push
pop
incb
cmp
out
xchg
add
dec
mov
jl
cmpsb
jecxz
dec
std
or
jnp
mov
dec
hlt
push
inc
dec
dec
subl
adc
lock
ret
adc
mov
fstps
popf
mov
xchg
mul
cmpl
cmpsb
inc
xchg
or
pop
dec
in
and
gs
jb
clc
insl
inc
aas
adc
sbb
lock
xor
mov
movsl
cld
mov
rolb
test
sti
pop
outsb
dec
and
jl,pn
shlb
sbb
subl
daa
pop
aam
bound
sub
enter
dec
pusha
pushf
imul
test
dec
neg
cwtl
jae
stos
pop
or
jb
inc
sub
mov
cltd
or
stc
lcall
add
lcall
jb
ficompl
loope
mov
jbe
pop
and
adc
sar
add
cmp
jnp
je
jb
jnp
in
mov
pop
lock
xor
xchg
push
fistps
popf
js
ret
xchg
cs
push
adc
int
xor
ret
jo
or
mov
cltd
js
aad
mov
ss
pop
pop
repz
pop
clc
mov
and
xchg
sahf
sbb
rep
out
pop
mov
stos
dec
data16
stos
shlb
stos
in
mov
pop
xor
insl
xchg
jg
sar
fimull
or
bound
jp
inc
or
popf
push
outsb
je
cmp
mov
mov
mov
fst
sbb
ljmp
aam
fmull
movsb
and
test
inc
pop
add
add
in
into
js
pop
es
fadd
push
mov
mov
clc
ds
add
imul
fcmove
dec
add
rcrl
mov
dec
sub
test
into
adc
push
jnp
jle
mov
mov
mov
sbb
inc
push
test
lock
arpl
mov
mov
ljmp
fsts
adc
jns
jae
mov
lods
fs
mov
mov
cmpsb
mov
movsb
repz
push
cltd
scas
and
loop
dec
fs
cmp
mov
xor
pop
inc
out
popf
fimuls
pop
rcll
dec
aas
das
mov
mov
jl
mov
ffree
xor
int
leave
stos
jg
and
std
lds
or
into
pop
gs
jae
scas
jbe
push
cs
fnstsw
and
cwtl
or
mov
lods
fcomps
add
fiaddl
jmp
movsb
mov
push
es
mov
ss
into
pop
push
cltd
xchg
add
insb
sub
cmp
cmp
leave
xchg
fnsave
push
lahf
out
fwait
sub
sub
push
movsb
out
lods
hlt
dec
mov
popl
gs
jnp
in
push
adc
push
cmp
movsb
xchg
leave
fstpt
repnz
push
sbb
dec
pop
fstp
addb
jmp
jnp
nop
insl
and
cmpl
icebp
jecxz
lret
sar
inc
test
mov
ret
stos
mov
clc
stos
sub
jb
push
jno
aam
leave
inc
test
lods
int
repnz
pushf
loope
jg
jnp
inc
iret
or
mov
testl
cwtl
xor
sbb
cmp
daa
ljmp
out
add
dec
nop
test
jle
test
stos
stos
outsb
cmpsb
push
enter
dec
ret
out
icebp
adc
lcall
popf
dec
sbb
or
jb
or
xchg
pusha
dec
fsubs
dec
dec
xor
push
pop
pop
ret
divl
into
movsb
jne
repz
sub
xchg
fs
enter
dec
decl
lret
movsb
jo
push
cmp
in
insb
dec
adc
add
xor
repz
loop
inc
stos
aad
cmp
mov
test
stc
shll
inc
sub
ljmp
jle
mov
or
scas
jno
mov
sti
or
push
orl
aaa
fdivl
push
and
clc
lret
sub
adc
push
movsb
push
lret
cs
xor
sbb
mov
mov
or
jne
jno,pt
add
mov
sti
sub
xchg
stc
cltd
arpl
xor
lahf
lea
xchg
cmc
jns
fwait
or
pop
mov
imul
xchg
out
faddp
xor
push
pop
or
cmpb
push
lret
xlat
xchg
sti
jg
mov
sub
fwait
mov
mov
or
shrl
jmp
xchg
rol
out
cmp
test
jmp
adc
dec
aad
test
add
mov
mov
adc
or
or
jnp
aam
sbb
jae
shlb
shll
repnz
mov
jbe
es
rorl
lods
hlt
ret
mov
stc
cs
adc
and
mov
les
sbb
rcll
mov
push
mov
iret
and
fildl
clc
in
and
cmpsl
push
push
and
add
imul
jae
test
rcll
add
mov
sbb
and
jge
inc
xchg
sub
xor
push
xchg
xchg
cmp
jne
xor
adc
cmp
scas
aas
mov
ss
push
push
dec
popf
testl
push
sub
push
lds
mov
loopne
das
fstpt
cmp
jmp
mov
pop
pop
inc
insb
or
jp
scas
in
sbb
or
xor
mov
xor
lahf
lock
leave
out
mov
sti
mov
mov
testb
mov
lcall
inc
push
jnp
repz
pop
jno
ret
adc
pop
loop
mov
je
sub
sub
pmullw
push
mov
sub
xlat
mov
loopne
mov
daa
int
jnp
inc
aaa
repnz
lock
mov
mov
out
jae
out
fsubr
clc
adc
cmpsb
xor
lods
mov
add
out
mov
xchg
push
mov
and
icebp
mov
xchg
repz
mov
sub
add
and
insl
inc
daa
sbb
stos
insb
hlt
mov
rcr
xor
cmp
mov
sub
cmpsb
fdivrs
repnz
mov
xchg
or
insb
xor
mov
into
sbb
mov
jnp
mov
mov
out
xchg
pop
lcall
loope
mov
cwtl
cmp
sub
push
jmp
mov
daa
ret
jbe
mov
cmc
mov
xlat
inc
arpl
add
int
ret
cmpsb
popf
stos
sub
push
dec
xchg
movsl
cmp
jo
cld
add
rolb
mov
or
add
mov
in
ljmp
dec
in
mov
cmpsb
les
sub
pop
mov
cmp
fists
push
add
add
xor
ja
icebp
add
push
adc
dec
loop
rorl
dec
dec
rcll
cmp
and
pop
xor
mov
push
insb
loope
test
insl
mov
insl
dec
push
aam
xor
lods
sub
push
xorb
clc
mov
jne
add
mov
adcb
jnp
push
fisttpll
js
into
mov
scas
out
cli
xchg
mov
shll
mov
dec
call
lret
mov
push
out
lahf
xchg
sbb
ret
fcomps
jle
test
icebp
sub
mov
mov
dec
mov
inc
xchg
popf
push
mov
fidivs
nop
mov
sbb
call
push
pop
xlat
dec
mov
daa
xor
adc
leave
jge
or
push
xor
sub
outsb
push
cmc
shrb
ret
fsubl
sub
int3
rolb
ret
or
mov
inc
and
xchg
int
in
sahf
pop
add
cwtl
xor
push
push
and
dec
arpl
les
jno
xor
insl
sahf
mov
mov
int3
andl
push
repz
pop
xor
and
test
pop
das
cmp
inc
add
inc
cs
repnz
push
arpl
cmp
loop
xchg
push
pusha
mov
mov
out
fbstp
push
sub
sub
rcrl
stos
cmp
pop
outsl
fwait
xchg
cmc
add
add
ljmp
and
mov
fsubs
ret
mov
inc
insl
or
cmp
imul
pop
jl
mov
lock
rcl
inc
fwait
idivb
sbb
cmp
cmc
fwait
mov
cmp
out
pusha
bound
xorl
arpl
sti
pop
push
adc
jle
mov
mov
hlt
inc
dec
push
lea
clc
cmc
mov
pop
out
flds
fstpt
pop
ss
repnz
jp
mov
add
adc
pusha
xchg
aaa
lret
dec
dec
sub
je
xor
fsubrl
insb
mov
mov
mov
aas
adc
and
aas
sbb
sti
les
fbstp
or
clc
add
leave
dec
lahf
int3
xor
das
lods
adc
insl
fcomps
inc
jl
jo
cmp
adc
or
pop
dec
leave
gs
inc
lcall
lcall
mov
cmp
test
aaa
push
int3
adc
sbb
mul
mov
jl
insb
cmp
xchg
pusha
arpl
push
fiaddl
mov
or
out
popa
sub
sbb
js
cmp
pusha
lret
push
mov
hlt
or
cmpsl
test
cs
ficomps
mov
push
fwait
gs
or
lea
jb
dec
xchg
test
nop
pop
mov
adc
sub
inc
or
in
mov
test
repnz
mov
leave
xchg
rcll
xchg
stc
rcrl
jl
jbe
push
data16
jge
imul
pop
sbb
mov
jno
xlat
mov
insl
dec
mov
repz
and
adc
leave
adc
call
sbb
int3
aad
jb
cmc
mull
sarl
aad
push
pop
pop
mov
repnz
addb
xchg
adc
add
inc
imul
jle
and
adc
add
and
inc
sub
jb
jge
adc
pop
into
imul
and
sbb
push
add
inc
ficompl
jb
int
mov
dec
data16
inc
jge
jl
cmp
shrb
flds
loopne
sti
jns
mov
es
ret
push
popa
push
adc
test
mov
cli
dec
aaa
shlb
scas
addr16
in
ss
data16
nop
je
aad
or
jae
inc
out
mov
dec
xchg
jl
push
and
push
insb
push
add
cmp
xlat
jo
dec
jo
leave
xor
cld
repnz
sbb
test
or
mov
jns
xchg
scas
adc
fildl
mov
push
ljmp
dec
mov
imul
imul
les
xor
les
out
fstl
js
imul
or
sbb
aas
and
sub
jns
movsl
in
add
out
add
xor
add
xor
cmpsb
add
mov
dec
fcompl
xlat
sbb
inc
add
mov
sbb
lahf
cmp
inc
sbbl
push
idivb
lcall
out
sub
sti
es
cmc
jno
ljmp
lods
scas
adc
outsb
cmp
pop
jecxz
test
inc
mov
xchg
mov
mov
jp
jge
inc
bound
loope
ljmp
les
imul
pop
push
lds
jge
fsubrs
arpl
adc
cmp
or
push
daa
hlt
adc
dec
adc
call
mov
xchg
and
xchg
push
shlb
stos
dec
icebp
sbb
outsb
inc
psrlq
cmp
or
insb
loopne
mov
pop
inc
das
xchg
mov
or
cmp
test
je
negb
mov
aas
lret
dec
aam
jecxz
pusha
out
sbb
inc
inc
pop
das
mov
dec
in
cli
xor
xchg
jns
out
mov
int
ret
xor
sbb
cs
inc
das
fsubr
lret
in
ja
lea
sub
dec
test
pop
jmp
jg
push
ret
and
mov
xchg
sbb
scas
lods
out
mov
in
cltd
mov
xor
inc
inc
jno
data16
ret
mov
mov
ret
xlat
or
sub
cmp
lret
cli
and
shlb
ret
jbe
sub
inc
js
sbb
loop
push
ret
push
lds
sub
andb
pop
adc
jno
jge
sti
pop
sbbb
and
in
cld
test
out
adc
ret
outsb
and
repz
or
push
add
incb
mov
inc
stos
icebp
xchg
outsl
in
push
test
jmp
xchg
cmp
mov
mov
out
add
arpl
incl
xchg
fisttpll
lods
mov
gs
pop
or
shll
loop
out
pop
bound
sbb
jns
dec
cltd
pop
shll
imul
sub
cmp
cmpsb
or
or
dec
adc
jbe
inc
inc
jmp
inc
cwtl
sub
sahf
lock
mov
pop
test
pop
out
mov
sbb
or
push
test
fidivrl
dec
mov
test
daa
repnz
add
rcll
push
inc
mov
pop
cmp
repnz
andl
xchg
je
repz
cmc
fildll
jmp
dec
xchg
mov
test
pushf
bound
mov
add
movsb
out
jbe
dec
int3
lahf
test
jl
pop
and
cmpl
xor
pop
lahf
addr16
push
pusha
std
dec
mov
hlt
les
mov
imul
mov
mov
push
inc
and
cmp
and
and
push
add
mov
int
xlat
mov
and
dec
pop
rcl
jo
inc
adc
insl
mov
outsb
stos
aad
mul
and
stos
add
or
mov
fildl
jne
out
pop
arpl
dec
sbb
push
imul
cmp
sub
fmull
inc
out
ds
shll
inc
sbb
outsl
in
popa
add
adc
or
dec
cmp
mov
xor
stc
pushf
push
pop
sub
mov
xchg
dec
js
mov
pop
pop
push
out
icebp
pop
sub
pop
sub
clc
stc
jecxz
xlat
andb
sti
push
mov
inc
addb
js
dec
test
out
or
cmpsb
xor
sbbb
mov
idivb
ss
out
mov
sub
mov
fs
aaa
bound
outsl
adc
mov
and
lcall
mov
push
scas
mov
loopne
cwtl
and
jbe
mov
pusha
mov
lahf
push
pushf
mov
jns
jl
int3
xor
inc
mov
pusha
lea
sahf
mov
lret
int
push
add
div
xlat
ss
jo
adc
insl
xor
sub
fnstenv
xor
xchg
lods
mov
aas
xchg
imul
mov
rclb
rcr
lret
jg
cmpsl
test
sbb
jno
mov
cmp
test
fidivrl
and
adc
dec
ja
xlat
inc
test
mov
mov
push
inc
stc
xor
das
cmp
mov
push
loope
mov
mov
test
dec
dec
and
rolb
daa
push
jmp
fs
sub
or
pop
gs
pop
lahf
ret
popf
push
aaa
iret
cmp
and
ss
je
daa
sub
lods
jge
hlt
dec
push
add
xchg
test
push
cmp
jo
test
mov
divb
pushf
aam
mov
movl
mov
pop
loop
cmc
cmc
mov
xchg
test
shrl
out
xor
cmpsb
fsubrl
pusha
addl
cmp
jbe
mov
aad
pop
xchg
mov
inc
jae
push
les
mov
mov
add
add
mov
adc
ret
mov
dec
outsl
dec
add
cmp
mov
xor
das
push
sub
cld
add
cli
pop
repz
add
xor
mov
lods
call
adc
pop
xor
shlb
add
jo
pop
push
scas
decl
fisubs
insl
outsb
sbb
pop
fsts
hlt
inc
shrl
sub
push
fidivrs
shrl
and
mov
or
mov
out
arpl
inc
repz
jmp
fmuls
addr16
dec
int3
and
xchg
adc
and
out
jl
popf
scas
mov
stc
xor
jae
adc
xor
push
sarl
out
loopne
and
and
imul
inc
mov
xchg
shr
aas
dec
pop
xchg
pop
jecxz
sahf
movsl
fidivl
inc
mov
sbb
dec
lds
data16
shll
push
sbb
in
pop
sub
push
std
aam
push
mov
mov
xor
lea
pop
loope
test
mov
div
push
fisttps
aam
adc
in
mov
pop
ja
cmc
add
inc
hlt
and
cmp
sub
cs
or
outsl
repnz
in
mov
inc
fpatan
ljmp
gs
orb
xchg
push
cmp
push
rorl
sbb
ja
adc
addr16
out
insl
les
dec
mov
mov
loope
loopne
xchg
xorb
inc
jmp
adc
lcall
dec
mov
in
arpl
pop
pop
shrb
lcall
xchg
mov
mov
mov
mov
xor
sub
sti
sbb
or
pop
push
into
or
sub
pop
add
xchg
mov
jb
in
or
mov
iret
add
dec
xor
xor
push
cmp
insb
lret
dec
inc
iret
lcall
in
adc
jb
add
and
or
jecxz
fdivrl
in
push
adc
js
test
test
les
cmpsb
sbb
push
or
mov
outsb
popf
or
adc
mov
mov
pop
cmpsl
outsb
xchg
sub
push
mov
jnp
add
insl
jbe
arpl
jb
mov
call
insl
test
mov
xchg
jne
or
jns
insl
hlt
ficoms
lahf
dec
scas
xchg
pop
xchg
and
mov
ret
pop
stc
nop
repz
ss
add
or
push
pop
mov
mov
mov
call
inc
and
fsubl
mov
push
in
test
add
push
xlat
jmp
adc
cmp
lret
sub
ss
mov
add
adc
pop
and
sub
dec
bound
lds
xchg
popf
push
sbb
cmc
xchg
movl
int
test
dec
iret
sub
pop
sbb
push
push
or
or
in
pop
ficoml
push
push
stc
inc
ss
jae
fldcw
clc
sarb
cmp
xchg
aam
fstl
add
lods
mov
mov
aam
sarl
adc
bound
sbb
dec
inc
jg
fdivrs
sub
adc
xchg
xchg
scas
mov
fildll
mov
mov
cld
imul
out
test
std
sub
std
add
loop
xchg
mov
sti
jns
test
movsb
pop
xchg
dec
mull
sbb
xchg
cwtl
mov
iret
xor
dec
fs
xchg
pushf
pop
ds
mov
jno
jno
icebp
push
mov
subb
push
and
hlt
mov
out
jg
jne
adc
ss
xor
or
aam
adc
mov
gs
icebp
jno
loope
ja
pop
push
pop
xchg
mov
lods
sbb
jmp
xchg
cmc
pop
sub
mov
lods
sbb
sub
sub
test
aaa
ficoms
dec
cmpsb
push
xchg
lea
call
lea
std
out
xchg
sub
insb
repnz
adc
mov
stos
fs
roll
add
jp
mov
jg
push
pop
dec
lret
lret
inc
ret
add
or
add
xor
in
mov
jmp
mov
rol
shl
cmp
jecxz
popa
hlt
loop
add
add
cmp
ja
imul
and
lea
fs
lret
inc
nop
mov
sbb
sbb
or
lock
xchg
xchg
add
stos
lock
add
and
sahf
cld
test
mov
enter
pop
cli
and
xor
jg
inc
test
inc
ljmp
push
mov
fldcw
stc
mov
outsl
mov
dec
lret
clc
and
in
loope
stos
adc
js
clc
loop
loopne
mov
pushf
cs
clc
mov
aas
xchg
jne
lahf
inc
ss
arpl
adc
test
lea
pop
jnp
scas
push
pop
lods
lcall
pop
push
sbb
inc
mov
adc
push
and
jno
dec
lock
scas
push
sbb
ljmp
std
aad
int3
jo
ret
insb
xchg
loope
stos
sub
sbb
clc
les
push
mov
adc
loopne
inc
cmp
inc
sub
add
sub
movsl
fistpll
push
ret
inc
fcomip
inc
cmp
fwait
sbbb
movsl
add
or
ror
sub
xchg
xor
push
mov
roll
xlat
pop
hlt
sub
out
xchg
add
mov
and
into
arpl
dec
lds
cmp
mov
hlt
out
mov
dec
out
jl
add
out
arpl
sbbl
call
jne
and
sbb
or
or
sub
dec
jnp
jo
icebp
push
pop
out
add
pusha
gs
xlat
dec
sbb
pop
dec
cmp
fcompl
ds
mov
or
daa
mov
push
xchg
std
pop
out
pop
add
or
lret
xchg
dec
adc
clc
mov
outsl
pusha
adc
xor
pop
addr16
push
mov
pop
js
xchg
daa
cmp
adc
dec
mov
fcomps
mov
and
dec
cmp
jo
fsubp
out
data16
sub
movsl
stos
or
divb
scas
fsubs
mov
ja
bound
xchg
inc
pop
jg
add
popf
adc
leave
addl
str
lds
or
mov
push
lahf
test
cwtl
fnsave
mov
cmpl
mov
test
psraw
aaa
mov
daa
jo
jb
mov
and
push
aam
pop
popf
pop
mov
push
shll
orl
inc
dec
jge
add
pop
fcmovu
inc
or
and
dec
sub
mov
test
mov
lret
loopne
ror
add
mov
fbld
and
repz
pop
push
or
addr16
ret
jmp
xor
out
jae
dec
xor
xlat
lods
and
fsubs
ss
int
jp
aad
mov
cmp
jp
movsl
xor
sbb
nop
adc
jb
lahf
push
push
push
aas
loopne
div
arpl
inc
mov
mov
add
mov
jbe
xor
bound
das
pop
inc
pslld
lds
cld
jbe
and
sbb
rcll
ds
loopne
jmp
jmp
insl
cs
ret
push
cli
mov
fstp
and
shl
cwtl
mov
out
into
jp
mov
mov
iret
add
or
jg
mov
push
mov
shrb
push
or
or
mov
dec
xchg
jno
mov
es
mov
pop
push
incb
add
push
and
jo
sbb
xor
leave
dec
pusha
pop
movsl
paddq
out
mov
mov
push
pop
lods
insb
mov
push
scas
xor
cmp
popa
push
inc
sbb
lea
pop
mov
les
bound
movsl
js
aas
imul
pop
clc
push
fnstcw
cmc
out
std
iret
pop
mov
insl
int
cltd
lods
ds
in
mov
inc
lock
lret
cltd
stos
adc
hlt
add
mov
xchg
cmc
and
xlat
push
sbb
inc
mov
mov
sahf
enter
inc
pop
insb
xchg
lahf
xchg
cmp
ds
xor
dec
fldcw
push
or
xchg
popa
mov
pusha
out
fldt
cmc
fnsave
mov
loope
mov
mov
cmp
pop
lods
loope
pusha
push
and
mov
jecxz
call
cmp
xchg
inc
cmpsb
test
jne
add
imul
push
or
dec
jge
insl
mov
enter
das
stc
gs
call
pop
stos
ror
xchg
imul
call
and
test
testb
pop
xchg
out
adc
adc
cwtl
bnd
cmp
jb
cltd
mov
mov
inc
lods
and
sbb
mov
cmp
shlb
xor
push
pop
push
mull
mov
sub
jnp
lret
out
push
js
ret
jb
aaa
lahf
aad
dec
fists
subl
mov
test
or
fwait
inc
add
push
mov
cmp
dec
lcall
mov
adc
or
ret
shrb
out
xor
xchg
int
xchg
jo
loopne
push
cmpsl
mov
repz
mov
bound
jns
and
dec
ficompl
pop
cmc
push
adc
pop
sbb
dec
adc
loope
xchg
mov
shl
bound
scas
xchg
mov
sub
cmpsl
push
push
in
adc
mov
sbb
out
clc
test
stos
mov
jnp
cmp
enter
outsb
mov
sahf
lods
insb
xchg
cld
add
dec
cmp
and
ljmp
mov
lds
rcr
inc
or
push
dec
inc
sti
fcom
lahf
push
inc
xchg
push
mov
and
ftst
jecxz
mov
pop
mov
lods
aam
imul
sub
jecxz
dec
inc
xchg
mov
fisubrl
cmc
jmp
xchg
jno
mov
cmpsl
xchg
jle
in
aas
lret
mov
mov
std
jg
mov
or
sub
int3
stos
or
movsl
add
loope
insl
insb
aad
xchg
das
fdivrl
xlat
das
loop
push
insb
out
pop
cmpsl
pop
ret
mov
dec
xlat
push
inc
aaa
jge
jne
outsb
sub
movsb
icebp
xlat
scas
jmp
cmc
sbb
inc
rcrb
pop
popf
mov
nop
in
iret
inc
mov
inc
rorl
out
jecxz
gs
mov
lahf
aam
sbb
in
mov
cmc
and
jle
xchg
push
adc
popf
das
inc
pop
data16
lret
cld
jge
xlat
cmc
mov
movsl
out
mov
cwtl
jle
je
lods
pop
mov
or
or
imul
adc
insb
cmp
jne
dec
dec
cmp
movsb
ss
jb
xchg
cmc
jne
mov
dec
int3
adc
ror
push
inc
push
addl
addr16
mov
mov
adc
outsl
cmp
mov
mov
xchg
push
imul
inc
dec
mov
xchg
inc
shl
jae
cmp
adc
aas
cmp
mov
mov
mov
mov
and
mov
and
es
mov
dec
aam
push
repnz
jle
lods
mov
loope
hlt
inc
push
jbe
in
mov
adc
add
cmp
movsl
into
into
movsw
adc
mov
sbb
fdivrs
cmp
xchg
outsb
shrb
push
mov
pop
inc
rcrl
mov
mov
sub
sub
sbb
in
notl
xor
xchg
xchg
mov
filds
mov
inc
jae
in
aad
popf
repz
addl
push
push
inc
insl
cld
out
lret
cmp
out
and
insb
sub
dec
lods
dec
or
mov
je
aad
add
loopne
in
int
mov
push
call
jle
test
push
ljmp
xor
pop
ficoms
push
mov
cmpsl
xchg
test
jmp
adc
inc
inc
adcl
imul
jp
out
push
sbb
mov
dec
in
pop
repz
mov
push
and
mov
fnsave
in
ss
lahf
inc
mov
leave
jo
popf
jo
mov
mov
addr16
loop
mov
je
mov
adc
in
popl
or
jle
push
jp
aaa
cmp
xor
out
mov
shrl
imul
jmp
cld
arpl
mov
fildl
jb
xor
in
fists
mov
pop
in
add
mov
push
jmp
shlb
push
ss
pop
and
data16
call
xor
add
popf
int
xchg
repnz
inc
push
inc
push
imul
stos
adc
sahf
lds
mov
adc
test
test
or
inc
test
test
push
dec
jp
adc
and
ficoml
lret
sahf
mov
xchg
imul
push
out
xor
mov
adc
pop
test
in
jp
push
mov
into
out
jp
int
jb
lea
int3
cli
mov
ret
push
scas
mov
xchg
or
and
sahf
data16
jae
xor
mov
cld
mov
ds
cmp
inc
imul
add
mov
outsl
mov
push
jg
gs
push
out
and
xchg
lret
imul
jnp
sar
cmpsl
jno
insb
pusha
mov
push
test
das
and
xchg
mov
xchg
xchg
sbb
out
aas
cmpsb
lahf
mov
push
or
push
arpl
mov
pop
pop
out
adc
xchg
mov
test
insb
hlt
test
sbbb
int3
call
lret
gs
sbb
xchg
pop
leave
xchg
roll
pop
rcll
test
inc
cli
mov
repz
insb
or
xchg
out
push
mov
aas
inc
mov
pop
inc
push
dec
push
rcrl
out
test
cltd
in
xchg
cmp
test
movsl
push
or
out
push
push
xchg
mov
push
jno
bound
jno
gs
out
cmpsl
adc
cli
lahf
and
cmp
mov
push
push
mov
lock
adc
out
mov
loope
dec
inc
or
sub
cwtl
cwtl
sub
xchg
mov
pop
iret
inc
mov
sbb
icebp
cmp
push
xchg
je
dec
mov
cmp
nop
sub
ljmp
mov
xor
leave
or
jbe
popa
syscall
and
dec
je
sub
imul
adc
pop
lcall
mov
add
insl
fisttpll
out
fs
mov
xchg
jo
jne
repz
mov
xor
js
insl
or
pop
pop
ja
cld
push
jge
pop
adc
push
xor
add
mov
inc
inc
popa
pop
push
fildll
xchg
jns
push
xchg
mov
cmc
mov
test
lcall
mov
jbe
movsl
popf
jecxz
pushf
cmpb
xor
and
movsb
jge
dec
cmp
pop
push
and
lods
inc
in
cwtl
out
dec
jnp
add
inc
push
inc
xchg
push
or
andl
jecxz
insb
jne
jnp
jp
inc
popa
loopne
jae
add
xor
xor
aaa
mov
push
jnp
mov
sbb
lret
std
push
cmpsl
sarb
je
add
push
js
sub
ds
insb
jno
mov
mov
sub
and
xlat
into
sbb
int3
adc
cmp
inc
and
in
pop
lret
sbb
jmp
insb
dec
xchg
xchg
jmp
adcl
loopne
sub
jns
sub
adc
sbb
loopne
repnz
adc
ret
mov
dec
mov
out
mov
cmc
movsl
or
roll
in
mov
mov
hlt
dec
mov
lcall
add
mov
add
mov
les
in
jg
jae
fsubrl
ljmp
push
or
in
ret
lret
insb
fwait
cli
hlt
ss
cltd
xor
out
jb
shll
mov
jae
frstor
lret
fldl
pop
daa
fwait
xor
imul
test
orl
dec
scas
scas
bound
mov
fwait
gs
mulb
arpl
mov
sbb
push
and
mov
push
mov
movsb
xor
out
enter
fsubp
outsb
shr
push
hlt
pushaw
xchg
fildll
jmp
inc
cld
cmp
test
jbe,pt
push
xor
xchg
mov
push
mov
xchg
lock
repnz
fidivrl
idiv
or
rolb
xchg
sub
in
push
pop
xor
xchg
inc
mov
jae
pop
jbe
ss
mov
stos
ret
mov
out
fsin
arpl
and
and
mov
adc
test
imul
stc
mov
and
cmp
cmc
aam
imul
shlb
lret
push
sbb
ret
mov
push
xchg
and
push
xchg
insl
pusha
add
add
divl
icebp
add
cmp
iret
sbb
inc
insl
pop
stos
sbb
jo
push
inc
sub
jbe
jp
jge
add
rolb
notb
jmp
dec
sahf
jnp
inc
push
xlat
sbb
loop
pop
and
shl
pop
or
mov
inc
push
ficoms
or
xor
movsl
inc
mov
push
ret
cmc
jg
lds
cmp
cmp
cltd
inc
cmpsb
or
mov
xchg
test
fs
and
in
mov
cmpsl
and
push
fbld
mov
sbb
daa
mov
mov
inc
jb
loope
scas
ret
add
pop
fisttpl
or
pusha
mov
loopne
or
test
in
pop
adc
mov
pop
sbb
push
repnz
add
pop
xor
outsl
mov
lahf
xor
mov
outsb
ds
pop
hlt
mov
fsubrl
push
dec
iret
sub
int3
call
mov
jl
pushf
or
ljmp
pop
enter
pop
ss
cld
cwtl
jmp
jmp
mov
xor
scas
xchg
and
clc
mov
sub
in
jo,pt
fs
cmc
cmp
jnp
aaa
jns
sbb
lret
sub
adc
or
lretw
push
and
xchg
repnz
cs
mov
sbb
add
in
rcl
dec
mov
mov
add
xor
cmp
xorb
mov
jno
sub
push
aad
mov
adcb
roll
lret
imul
fiaddl
pop
adc
sub
mov
mov
xor
push
jb
adc
inc
xor
xor
inc
fidivrl
xor
mov
in
xchg
mov
mov
bound
xchg
fidivl
or
cmp
test
cmp
sbb
xchg
pop
xchg
mov
call
sub
pop
cmp
add
je
repz
mov
xor
roll
xor
push
xchg
shl
and
pop
adc
mov
mov
iret
rolb
lods
xchg
xchg
inc
mov
cld
fwait
lods
and
stos
hlt
xchg
mov
add
mov
popf
xor
push
fsubl
push
pusha
iret
dec
push
out
or
xlat
loope
jmp
js
push
push
xchg
cmp
inc
sbb
fwait
rcrl
add
cltd
mov
xor
ret
and
popa
push
fs
out
cmp
sbb
pop
sbb
sar
fs
add
fs
ss
push
lea
mov
jne
lock
add
sub
call
fstpl
sbb
jno
lret
inc
call
roll
rolb
gs
mov
jl
insb
sti
testl
dec
and
xor
push
or
push
fwait
push
mov
xchg
inc
lahf
orb
lcall
jne
int3
cmp
xor
and
arpl
in
lret
inc
sub
inc
or
add
clc
sub
inc
xor
incb
popf
nop
pop
lahf
mov
daa
mov
jno
jle
sub
in
lret
mov
xor
rorb
jae
aad
xor
xchg
push
movsl
mov
pop
lret
push
inc
mov
clc
mov
sbb
pop
insl
loop
cmp
loopne
or
fists
sub
jae
mov
sbb
cmpsl
push
loopne
loope
lds
lret
mov
movsl
ret
cmp
xor
mov
adc
xorb
scas
int3
jge
mov
and
inc
mov
lods
cmpsl
cmpsl
ret
mov
sub
mov
sbb
fcmovne
out
xor
mov
js
adc
outsl
gs
bound
push
notb
dec
scas
fists
xchg
pushf
xor
lret
lret
adc
mov
popa
loopne
push
push
jp
or
out
sub
jmp
pause
sub
xchg
push
aaa
loopne
fiaddl
out
ljmp
nop
in
cmp
daa
scas
xchg
sti
clc
xchg
push
popf
nop
xchg
rol
lods
inc
xlat
fdivp
std
lock
cmpsl
and
lods
mov
push
mov
xor
mov
shrb
aas
and
scas
mov
rolb
aam
push
clc
leave
and
adcl
inc
sub
pushf
jne
cmp
jge
sbb
mov
loope
jno
dec
aad
movsb
pushw
add
bound
jmp
dec
es
mov
sub
push
push
out
loope
sbb
cli
xchg
fmull
xor
jge
and
dec
sbb
mov
sti
cwtl
cli
leave
call
or
popf
sbb
lcall
cmpsb
cs
inc
ret
enter
ret
xor
loope
ffreep
or
iret
or
lds
jbe
mov
fnsave
dec
daa
jge
xchg
out
sbb
call
and
cmp
imul
jno
xchg
mov
leave
xchg
push
xchg
mov
leave
pop
roll
std
in
push
dec
das
insb
test
mov
sbb
jecxz
or
call
adc
xchg
std
adc
adc
push
adc
sbb
sub
rcrb
push
pop
cli
repz
outsl
xchg
or
movsl
arpl
inc
arpl
cs
imull
pop
add
pop
hlt
adc
and
insb
adc
out
or
loop
push
jmp
outsl
mov
dec
add
pop
stos
or
arpl
addr16
mov
aaa
in
adcl
mov
call
in
push
sub
pop
movsl
add
stos
cmc
inc
pop
push
out
lods
les
sbb
scas
fisubrs
lock
dec
jmp
imul
test
or
fcomip
orl
stos
push
jmp
lods
mov
out
or
xchg
stc
xchg
and
lcall
mov
aad
mov
xchg
iret
lret
adc
jl
push
int
jne,pn
jle
jns
mov
dec
adc
xchg
mov
pop
jmp
dec
and
mov
test
jnp
xor
lcall
pop
mov
movsb
and
xchg
hlt
imulb
shlb
push
fdivl
push
lods
mov
and
scas
fnsave
in
xor
push
xor
dec
lahf
push
lret
push
lods
sbb
and
sub
mov
pop
cmp
ja
cmp
call
ret
mov
imul
std
mov
add
mov
lahf
mov
in
inc
or
enter
jbe
lods
xlat
jmp
fdiv
loop
inc
add
mov
cmp
ja
sbb
jecxz
push
push
jnp
in
jge
pop
xchg
cmc
sbb
adc
cmc
loop
mov
xchg
mov
js
jp
inc
cmp
iret
inc
movsb
cmpsb
jns
cmc
or
js
or
mov
rcrl
jmp
sbb
out
fsts
inc
mov
mov
dec
sti
leave
push
lock
insb
imul
mov
stos
dec
or
in
cs
ucomiss
cmp
pop
lahf
repnz
lods
lahf
adc
inc
pop
cmpl
fsub
xor
adc
stc
add
out
xor
mov
scas
mov
lcall
loop
ss
repz
or
sahf
add
xchg
dec
dec
icebp
fcmovb
mov
sbb
mov
dec
test
shrb
adc
sbb
jae
cld
jne
mov
mov
daa
loopne
sbb
lods
sub
movsb
jnp
jbe
les
in
jns
sahf
mov
mov
mov
stos
push
jg
push
je
popa
push
call
xor
incl
sbb
inc
xor
enter
jecxz
and
iret
jge
adc
and
xchg
adc
mov
test
insl
into
adc
lret
jno
add
cwtl
xor
pusha
dec
jo
out
and
js
sbb
cld
xor
sbb
jns
jecxz
mov
cmpb
sbb
js
jg
xor
mov
sub
inc
mov
xchg
mov
ret
fdivr
gs
leave
sbbb
loop
clc
shr
lods
jmp
jns
ret
imull
ret
shl
in
sbb
fs
mov
and
sbb
add
push
adc
movsb
repnz
sysenter
pop
nop
lds
sahf
movsb
imul
sti
adcb
aad
xor
jns
cmp
mov
lock
test
jge
cmpsl
mov
inc
dec
inc
das
xlat
pop
mov
mov
into
xor
push
stos
sahf
sub
je
cmp
and
mov
xor
lods
dec
testb
sub
scas
jb
ljmp
shlb
jae
adc
and
dec
dec
nop
popf
cmpsb
les
call
mov
dec
jl
sbb
mov
and
cwtl
add
pop
push
in
pop
inc
sub
sub
mov
and
pop
mov
rorb
mov
xor
dec
ss
dec
mov
add
jp
push
jno
mov
test
iret
push
and
mov
add
pop
dec
imulb
call
test
xor
sbb
lods
push
jnp
lock
pushf
jns
jmp
push
ja
dec
scas
outsb
add
xchg
jae
movsb
das
loop
stc
leave
mov
mov
push
or
push
lahf
mov
loop
cs
outsl
mov
xor
push
mov
sub
pop
mov
jg
pop
add
cmpsl
dec
mov
mov
sahf
out
xchg
sub
xchg
sub
dec
sub
sbb
popw
mov
mov
ja
out
fildl
andb
in
or
cmp
cmp
mov
fwait
nop
pop
es
setle
arpl
mov
gs
repnz
jae
and
mov
mov
jno
adc
sti
jg
inc
sub
pop
sar
xlat
into
mov
dec
add
push
xchg
popa
pop
rcrb
sub
jae
inc
imul
sub
push
das
sub
scas
jne
pop
repz
push
sub
std
mov
mov
stos
xchg
lea
jmp
push
je
mov
int
mov
or
cmpsl
rcrb
push
clc
ljmp
movsb
sbb
mov
xchg
adc
negl
mov
js
into
stc
out
test
lea
es
and
enter
push
mov
mov
adc
cmc
in
scas
ret
jmp
xor
testb
lret
dec
jle
imul
pusha
sbb
dec
comiss
stc
or
lret
lods
inc
mov
shrb
aam
mov
sub
outsb
pop
mov
rcrb
fucomi
int
xchg
or
mov
stos
cmp
sbb
hlt
ljmp
mov
mull
std
notl
js
int
cmp
popf
xorb
cltd
jbe
outsl
xchg
and
rorl
loop
dec
inc
call
cltd
fdivs
or
mov
cli
push
pop
dec
inc
fstps
adcl
push
mov
das
dec
pop
push
fwait
pusha
fcompl
jbe
cltd
push
add
adc
pop
fs
pop
xlat
addl
ret
dec
or
jle
sbb
in
hlt
int3
and
xlat
andb
inc
test
mov
inc
mov
jne
sarb
pop
xlat
xchg
fbstp
mov
mov
push
add
sti
lods
out
jo
pop
out
lds
xlat
test
sbb
repnz
jns
pop
pop
cli
test
dec
shr
sti
or
scas
sub
insb
mov
cmc
sbb
insl
mov
fistpll
out
inc
int3
mov
enter
and
ret
pushf
pop
or
repz
loop
je
xor
or
aad
sbb
sbbl
xchg
jbe
push
pop
aaa
mov
pavgb
into
xchg
jl
adc
sub
xor
or
xchg
nop
mov
sbb
fnstsw
mov
inc
int
fcoms
outsb
xchg
jg
test
fisubrs
push
aam
xlat
xchg
ret
xchg
jbe
sub
mov
pop
scas
in
mov
cmp
pop
icebp
cld
xchg
mov
es
and
out
test
inc
jno
ss
jno
repz
lods
stos
inc
pop
jns
and
cmc
icebp
cltd
pop
or
mov
pop
out
aam
jmp
cmp
enter
shlb
xor
push
out
add
jge
push
in
gs
and
jae
arpl
sarl
push
adc
mov
hlt
or
xchg
sbb
dec
outsl
loop
dec
pop
into
loope
xchg
inc
nop
or
jnp
xchg
push
out
sbb
addr16
icebp
xlat
or
mov
mov
sbb
sbb
mov
sub
cmp
fptan
pop
cmp
ds
movsl
push
jae
jl
push
mov
sbb
or
pop
jle
xlat
mov
imul
mov
lret
mov
sbb
pop
ficoms
jae
and
jge
outsb
rolb
cmp
shrb
stos
fdiv
or
pop
sbb
das
fmull
popf
push
or
jmp
std
jp
mov
ljmp
xchg
outsb
sub
sti
xor
shr
je
shrb
inc
inc
xlat
and
mov
push
and
dec
and
cld
push
loopne
loop
mov
inc
jle
fs
xchg
sub
popa
out
mov
pop
jne
jp
enter
enter
mov
push
lock
jge
mov
roll
xchg
cmp
je
and
push
loop
jbe
test
xchg
push
sub
jne
das
rcl
insb
outsl
in
inc
into
and
and
lods
dec
mov
dec
mov
lds
movsb
das
mov
mov
add
cmp
outsb
dec
rorl
movsl
mov
fisttpll
jle
arpl
xor
xor
push
inc
call
je
out
test
xchg
aam
adc
dec
test
push
icebp
and
pop
loop
mov
inc
pop
pusha
out
pop
add
movsl
loop
pushf
shr
dec
add
cmp
dec
push
je
adc
jne
shr
xor
js
push
pushf
test
scas
movsb
xchg
dec
mov
icebp
inc
lea
shll
cmp
dec
daa
gs
notb
dec
push
cmp
xchg
jle
inc
fists
mov
fcompp
push
daa
cmpb
rcll
adc
cmp
sub
push
dec
ljmp
add
hlt
cltd
cmpsl
xchg
notl
inc
adc
loope
rorb
lds
adc
add
jb
jb
stos
push
std
dec
xor
cmp
pop
imul
or
jno
pop
adc
add
pop
scas
in
fbstp
push
mov
xchg
mov
ret
lret
icebp
out
sbb
mov
pop
testl
pop
pop
scas
rorb
push
dec
movb
jle
xor
pop
popa
mov
repz
fnstcw
mov
or
cmc
out
or
mov
and
ljmp
xor
sub
push
mov
in
add
inc
push
jo
inc
das
inc
jns
mov
mov
cmpsl
icebp
jae
mov
fcompl
lahf
xchg
fdivr
call
or
sbb
mov
stc
push
inc
cmp
addb
pop
inc
mov
stos
aam
xor
push
add
andb
jp
imul
int
sahf
pop
fnstsw
mov
add
add
loop
xorb
pop
pushf
push
cmpsl
notb
xor
cwtl
clc
ds
dec
dec
ss
cli
lret
jmp
jnp
rcll
add
or
cmp
mov
pop
push
inc
test
pop
sub
stos
and
mov
xchg
insb
sbb
jo
jp
pushf
cmp
sbb
test
shll
or
fwait
loopne
stc
mov
sahf
and
dec
ret
xchg
stc
xchg
push
pop
hlt
outsb
and
add
dec
mov
push
mov
sub
inc
jle
lret
pop
outsb
test
jecxz
sub
inc
iret
cs
out
mov
pop
lods
lea
dec
inc
call
push
rcrl
mov
or
mov
imul
push
clc
mov
pop
dec
stos
movl
mov
lcall
movl
cmp
pop
ds
stos
lahf
cs
sahf
xchg
cmp
push
pop
stos
rorl
xor
adc
je
call
push
pusha
loope
fiaddl
mov
aad
add
scas
push
cld
shll
rcrl
cmp
mov
inc
xchg
add
rorl
sbb
and
test
ret
push
cmp
xor
cmp
icebp
icebp
add
iret
mov
mov
ljmp
cltd
sub
or
add
jbe
insl
mov
aaa
xchg
ss
add
xlat
sub
cld
gs
mov
fidivrs
shlb
adc
push
adc
xor
in
lahf
out
cmp
or
or
dec
mov
xchg
inc
lret
push
push
inc
fcmovnbe
mov
loopne
int3
xchg
jne
lahf
pop
icebp
sbb
xor
push
jae
cli
add
fst
ret
mov
lret
sub
mov
aas
int3
int3
adc
movb
outsb
and
mov
jecxz
xor
out
mov
stos
jecxz
movsl
mov
aam
cmpsl
cli
cmpsb
or
pop
dec
cmp
daa
xchg
adc
cmp
push
aam
lret
hlt
push
inc
push
test
es
dec
ljmp
cmp
imul
push
and
pop
sub
pop
scas
aaa
pop
mov
daa
ret
and
pop
xchg
dec
test
mov
repnz
lahf
sbb
rol
in
cs
xchg
enter
mov
or
sub
repnz
jns
hlt
orl
fiadds
popa
imul
or
sbb
call
insb
inc
ss
hlt
lea
into
mov
movsb
lds
xchg
test
inc
leave
xor
jnp
adc
out
dec
xchg
cmp
mov
in
sahf
jl
subl
sub
ljmp
insb
es
adc
xchg
mov
sbb
lods
out
cmpl
fbstp
lds
mov
dec
jb
js
jl
ljmp
or
repnz
ja
dec
gs
test
icebp
push
mov
mov
add
sub
cmpb
outsl
sbb
clc
cmp
cmpsl
or
cli
push
js
cmp
mov
clc
mov
fnstcw
adc
adc
leave
xlat
jge
inc
leave
scas
lods
inc
add
das
repz
inc
sub
mov
jns
mov
ja
fidivl
arpl
cwtl
outsl
sub
ja
cmp
mull
nop
imul
pcmpeqw
jnp
sti
fists
push
pop
out
stc
pop
imul
push
hlt
into
cmc
popf
mov
jl
sub
inc
fcmovnu
adc
or
inc
xchg
mov
mov
xchg
dec
ljmp
clc
sub
xchg
jmp
dec
icebp
adc
sub
mov
and
sbb
fstpl
xor
sahf
arpl
or
xor
jbe
inc
aaa
mov
mov
cmp
adcl
orps
loopne
inc
and
out
out
xchg
pop
cltd
xorl
sarb
das
icebp
adc
lea
in
aas
hlt
and
testb
std
cltd
adc
es
dec
jp
push
mov
aam
in
pop
ja
jl
xor
lret
sbbl
pop
pop
jo
adc
jb
jbe
pusha
jge
mov
xor
mov
jnp
clc
push
cmp
sti
movsl
mov
mov
jmp
cmp
xchg
jge
lret
pop
arpl
iret
shll
adc
insb
gs
xchg
sbb
and
test
and
daa
push
ds
test
xor
movsl
test
adc
imul
inc
ds
adc
inc
and
xchg
lret
jmp
pop
loop
pop
adc
jb
sub
cld
loop
push
imul
stc
jge
push
jg
sub
lods
jp
jns
sbb
fdivrs
fxam
mov
into
jo
repnz
inc
and
in
lds
fmulp
into
push
fadd
cmpl
jns
int
or
loope
shl
jmp
push
cs
mov
sbb
mov
fcom
push
dec
out
sub
bound
pop
pushf
cmp
out
call
push
inc
ljmp
push
movsl
inc
stc
mov
mov
or
push
loopne
and
jae
lret
add
push
rcrl
aam
mov
rol
jmp
movsb
pop
inc
mov
mov
enter
data16
xor
xchg
sub
dec
dec
xor
stos
idiv
xchg
or
push
cmpsl
aad
or
xchg
push
push
imul
lret
adc
adc
out
fs
cmp
xchg
arpl
and
jmp
adcl
pop
lods
lahf
push
push
test
fistps
mov
cmpsb
outsl
cmp
cmp
frstor
or
push
clc
xor
mov
addb
lock
imul
testl
mov
or
add
mov
flds
inc
cs
xchg
negl
sub
push
pop
lcall
jge
cld
jecxz
sub
out
ficoms
scas
inc
das
add
cmp
xlat
aad
xor
push
outsb
repz
sbb
sbb
push
and
xlat
rolb
sbb
jno
ret
add
stos
jle
movsb
aam
jo
sbb
enter
jns
cmp
inc
pop
cmpsl
lcall
xchg
out
mov
insl
xchg
mov
lahf
xchg
fs
sbb
jmp
mov
les
dec
leave
sub
icebp
out
call
jg
outsl
outsl
cli
inc
stc
movsl
loopne
xorb
mov
xor
mov
arpl
ljmp
ret
stc
fiaddl
std
mov
aad
scas
inc
cwtl
daa
pop
daa
in
or
and
repz
data16
fldl
cmpsb
into
adc
jmp
dec
lds
or
jle
inc
jae
mov
lock
mov
cmpsb
movsb
data16
ljmp
xchg
mov
and
mov
test
ret
outsl
and
mov
repnz
cmp
cmp
or
mov
mov
pusha
pushf
sbb
cwtl
dec
pusha
xor
xchg
cmp
mov
rcl
jmp
test
test
pop
arpl
sbb
mov
mov
test
in
jp
push
mov
push
mov
push
bound
inc
sub
adc
xchg
fcoms
adc
jle
mov
mov
fiadds
jbe
push
lahf
sahf
fiaddl
dec
stos
jg
enter
jl
mov
popf
adc
xor
mov
cmpsb
pop
mov
cmpsb
cli
jp,pn
test
outsl
jnp
pushf
mov
cltd
push
xchg
sub
imul
mov
aas
and
fcomp
fistpl
or
mov
mov
xor
mov
dec
andb
or
adc
lea
mov
and
xor
and
outsl
fmuls
popf
jnp
lahf
add
push
add
mov
mov
test
cmpsb
loop
adc
loopne
jle
inc
test
adc
stc
sti
jne
sub
mov
push
test
ficoml
and
insl
cld
or
pop
mov
mov
mov
add
xchg
mov
mov
xlat
gs
cmp
or
nop
cmp
movsb
lahf
movb
ds
xchg
push
pusha
mov
out
jle
mov
movl
mov
loop
popf
je
mov
repnz
shr
ret
das
call
jle
test
test
mov
inc
push
push
mov
xor
xchg
fsubrl
das
shlb
stos
push
add
push
xor
out
and
jo
inc
jnp
cld
shrl
loop
es
push
stos
lea
mov
add
sbb
lds
stc
and
dec
pop
addr16
mov
cld
push
pop
rol
sub
pop
pushf
mov
fiaddl
jnp
and
lods
sub
xchg
adc
stos
jl
sub
pop
jae
add
lea
dec
xchg
pop
imul
ret
and
lret
mov
sub
add
sbb
ja
cmp
mov
push
cld
push
cmpsb
dec
jmp
hlt
and
xor
test
lds
mov
mov
arpl
push
dec
jns
sti
loop
fstpl
js
hlt
test
nop
adc
pusha
xor
fs
inc
imul
ljmp
adc
stos
adc
js
mov
cmp
faddp
push
nop
xor
js
mov
sub
les
jg,pn
cmp
dec
lods
stos
lcall
mov
xchg
xchg
mov
std
icebp
or
xor
lcall
cwtl
outsb
pop
jae
test
fwait
inc
orl
fs
cmp
xor
xor
push
mov
or
mov
inc
repz
in
ss
dec
jno
or
pop
sbb
shrl
add
and
add
scas
cmp
pop
mul
cwtl
les
addr16
dec
push
cmp
dec
subb
cmp
push
aad
fstps
enter
data16
xor
adc
jb
mov
dec
hlt
mov
xor
push
mov
movsb
push
sbb
mov
lahf
push
mov
aad
lods
sbb
sub
pop
std
and
or
imul
out
movsl
idivl
into
and
jnp
cmp
pop
movsb
hlt
jg
mov
mov
mov
pop
popf
or
subl
jnp
pop
ss
out
jbe
sub
cltd
lea
nop
loope
cmc
popf
loope
jmp
xor
dec
or
sub
inc
insb
sbb
into
dec
mov
mov
sbb
xchg
mov
scas
fsubrs
scas
add
jb
push
xchg
ds
fs
outsb
loope
lret
cmpb
fwait
lret
pop
sub
pop
ds
in
bound
dec
icebp
lcall
xchg
pop
fstp
add
sar
xchg
dec
out
addl
es
sbb
je
push
pop
pop
inc
jmp
sub
cmc
rorb
pop
rcll
in
xor
test
pop
push
js
js
adcb
mov
sbb
lret
xor
jl
ror
mov
mov
sub
mov
fwait
xor
xchg
loopne
push
and
movsl
and
push
lds
ja
mov
xchg
cmp
daa
push
and
push
push
mov
shlb
arpl
add
inc
or
sub
insl
rol
jnp
pop
cli
mov
mov
and
push
cwtl
jnp
gs
pop
or
cli
xor
pop
inc
pop
mov
sbb
jno
xchg
mov
push
xor
add
and
dec
mov
mov
push
sarl
add
mov
outsl
insl
test
test
iret
sbb
mov
jbe
mov
push
and
mov
out
mov
jb
sub
mov
data16
mov
fs
sub
stos
jmp
loope
push
ja
xlat
out
adc
sbb
psllw
pushf
fistl
add
sub
sti
in
adc
stc
pop
mov
fucomip
leave
mov
xor
lcall
call
loope
fs
sbb
out
push
cmp
out
out
push
leave
fstpl
loopne
cmpl
cld
in
fidivrs
adc
cmp
imul
xchg
movsl
aaa
in
es
xchg
in
mov
loopne
int
push
push
test
mov
dec
scas
xchg
fwait
mov
scas
jo
or
mov
into
data16
ljmp
in
and
loopne
addr16
pop
insb
imul
in
cwtl
arpl
cmp
or
repz
push
fdivrp
addr16
lea
xchg
xorb
inc
lea
arpl
xchg
es
popa
jle
cmpsb
xor
aaa
jmp
xchg
mov
int3
mov
adc
movsl
inc
outsl
push
xchg
fmul
pop
arpl
or
sbb
adc
xchg
test
push
mov
inc
sub
mov
dec
pop
pusha
icebp
jmp
inc
testl
mov
inc
push
push
mov
pop
cli
push
pop
xchg
or
mov
sub
adc
or
pushf
popf
push
imull
lahf
pop
ret
int
xchg
int3
inc
stos
fwait
or
cmp
stos
cmp
mov
adc
rolb
mov
sub
fwait
push
popa
push
lcall
daa
rorb
imul
inc
call
popf
fnstenv
inc
cmpsb
and
dec
fwait
mov
add
xchg
lea
jge
cmp
sbb
mov
inc
insl
movsb
test
inc
cmp
testl
fidivrs
dec
cld
cmp
mov
inc
bound
or
add
jae
jnp
mov
pop
addb
outsl
jmp
jg
je
and
inc
inc
xor
sbb
mov
push
push
jmp
bound
jbe
adc
jmp
pop
adcb
jne
lods
inc
std
cmp
add
enter
xchg
fiaddl
cmp
call
or
jb
das
push
sbb
push
sarl
cltd
xor
mov
pop
mov
xor
arpl
push
pop
cmpsl
hlt
ret
mov
sbb
insb
mov
mov
add
xlat
pop
xor
or
and
cltd
pop
aad
and
movsl
mov
lret
xchg
lds
push
add
cmp
sbb
mov
adc
cwtl
adc
xlat
sbb
inc
pop
jecxz
or
jecxz
ret
bswap
xlat
test
scas
aam
bound
dec
pusha
dec
in
xlat
inc
test
popf
xor
nop
jnp
in
int
sbb
stos
pop
je
pop
inc
xor
or
call
mov
cmp
push
inc
lods
fs
mov
fisubl
sub
test
fs
leave
rorb
sbb
iret
out
and
daa
add
in
add
or
push
sbb
in
das
xchg
jns
bound
or
and
jge
jnp
push
xor
stos
adc
jg
sti
sahf
shlb
cmp
daa
pop
xchg
ljmp
lea
dec
adc
jmp
adc
nop
cmc
cs
or
popf
dec
aaa
insl
or
movsb
lock
insl
jb
mov
mov
jbe
leave
inc
insb
mov
outsb
mov
test
sbb
lret
popa
loopne
sarb
cld
and
out
jmp
out
dec
scas
fldcw
dec
adc
sub
lea
mov
mov
aaa
daa
scas
arpl
inc
sub
pusha
clc
rolb
aam
mov
ret
out
cmp
int
mov
push
out
pusha
jle
shlb
cld
sbb
jge
and
push
je
adc
mov
ja
pop
xchg
insl
aad
inc
inc
push
and
mov
mov
out
mov
or
loope
outsb
cmpsl
jecxz
subb
add
pushf
and
cmp
push
int
jge
pusha
cli
sub
mov
cmp
mov
inc
cmp
push
add
mov
jne
sbb
mov
popf
movsl
jg
mov
xchg
out
xor
adcb
push
add
xor
fsubr
cmc
jp
xchg
jns
inc
sub
movsl
call
jne
movsb
ftst
and
mov
ss
push
outsb
push
xor
dec
push
int
test
outsb
cs
and
cmpsb
aas
sub
pusha
insl
outsl
push
repnz
insb
xor
rcl
push
dec
loopne
mov
mov
andb
mov
mov
sbb
dec
jno
icebp
aam
xchg
incl
cmp
or
push
repz
repnz
jno
cltd
xchg
sbb
cmp
popw
in
push
imul
outsb
jbe
stc
sub
out
xlat
test
movsb
and
aas
add
fs
jle
ljmp
mov
adc
imul
sarl
fsubrl
test
jne
jmp
cmp
and
inc
adcb
or
push
sti
stc
adc
inc
es
sarl
clc
sbb
hlt
dec
xchg
cld
jge
and
dec
mov
inc
dec
add
sub
mov
movhps
sbb
mov
pop
js
and
aad
imul
push
idivl
adc
into
xchg
add
ja
clc
push
adc
shlb
or
cmpsl
inc
mov
cmc
mov
repz
movsl
sbb
mov
loopne
cmp
mov
cmpsb
icebp
or
jecxz
push
dec
and
div
scas
jne
mov
mov
std
pop
out
cmp
test
mov
add
icebp
fwait
push
loopne
mov
in
push
cmpsl
push
mov
hlt
movb
loopne
je
xor
popf
imul
jno
add
insl
out
xchg
lahf
dec
jle
inc
xchg
or
loop
inc
adc
loope
xor
out
push
into
push
bswap
out
jl
fwait
push
sub
adcl
jmp
ret
repnz
rcrb
adc
out
adc
loopne
and
sar
sbb
mov
imul
ljmp
bound
push
arpl
mov
addr16
and
repz
aas
fisubrs
mov
sahf
cmc
lret
fadds
aam
mov
scas
enter
pop
mov
jle
jecxz
xchg
pushf
test
popf
inc
fldcw
push
xchg
out
notl
adc
ret
mov
mov
or
cltd
stos
xor
lahf
add
in
jb
test
push
mov
fs
xchg
ret
or
fstl
pop
pop
cmp
mov
stos
xchg
adc
add
dec
push
cmpl
int3
fcomps
mov
sub
movsb
mov
idivb
movsl
movsb
or
cmpsb
pop
mov
push
call
fcomps
aam
pop
enter
jns
fildll
loop
sub
fistpll
or
adc
int3
sub
stos
sub
xor
ret
xor
dec
xlat
add
das
sub
mov
leave
push
pusha
rol
xchg
push
sub
testb
push
pop
push
fsubrl
xchg
fcmovne
push
push
jae
mov
sub
push
aas
jmp
fmul
push
pop
push
sub
pop
sub
pop
xchg
adc
loope,pt
enter
lock
mov
les
inc
cmpsb
inc
xor
outsl
repz
cmpsl
movsl
mov
jecxz
mov
mov
shlb
cmp
mov
and
inc
mov
adc
orb
shrl
fisttpl
adc
push
jo
rcll
mov
sarb
cmp
pop
ret
xchg
sbb
jle
cltd
mov
out
xchg
mov
push
xor
push
dec
adc
cltd
mov
sub
insl
add
insb
jl
xchg
int
jnp
mov
ror
and
in
bound
int3
cmc
cmp
add
cli
adcb
push
leave
mov
loop
shrb
in
clc
mov
adc
outsb
test
add
daa
sbb
cwtl
pushf
ljmp
aam
or
sub
xor
les
scas
push
push
mov
stos
inc
lods
rorl
inc
jl
or
iret
push
aas
iret
call
ljmp
lahf
int
bound
imul
aam
mov
and
cmp
loopne
mov
ds
sub
xchg
inc
pop
sarl
push
fwait
scas
daa
add
popa
addb
movsl
test
sub
in
and
push
push
and
mov
lods
dec
sub
mov
xchg
addb
push
jmp
and
call
xchg
in
lock
cmp
lea
cld
nop
push
stos
loope
rclb
dec
adc
int
ds
fidivrl
lcall
js
jg
outsb
filds
loopne
lea
popf
mov
cld
and
fstps
dec
cmpsl
cmp
shrb
lahf
jo
fsubl
lcall
iret
jl
cmp
inc
xchg
fwait
dec
ss
xchg
adc
iret
rol
mov
cwtl
mov
add
leave
add
in
pop
sub
cmpsl
pop
in
jl
inc
mov
cmp
cld
jecxz
sbb
leave
sbb
jne
repnz
and
mov
cmp
hlt
jb
bound
push
imul
xchg
xchg
ret
xchg
aaa
lods
mov
rcrl
mov
pop
jo
mov
dec
pop
fisubrl
and
cltd
mov
mov
cmp
push
movsl
jp
xor
fnstsw
mov
xchg
jecxz
xor
cli
jl
imul
test
and
xlat
outsl
iret
daa
in
nop
aas
pop
pop
or
ficompl
inc
fsubs
fiaddl
frstor
repz
lret
mov
ret
in
fsubrp
je
xchg
dec
mov
push
mov
add
shll
hlt
push
aas
lret
sub
aam
enter
and
jmp
shl
pop
fadds
xor
icebp
push
stc
pop
sahf
call
enter
mov
data16
xchg
fisttpl
mov
mov
jge
jle
pop
mov
subl
in
cmp
out
cmpsb
adc
fidivrs
push
push
mov
int
enter
lahf
dec
inc
popa
xor
rcrb
cmp
ss
mov
push
xor
test
das
ret
jg
shl
test
and
das
mov
in
jbe
test
xlat
or
fdivrl
inc
bound
jns
js
das
mov
cmp
push
loope
out
xchg
xchg
in
add
movsl
inc
cld
frstor
in
push
inc
lea
loopne
xor
movsb
js
fidivrs
cli
movsb
addb
push
cmp
cs
jno
xor
jne
sbb
mov
fwait
dec
mov
mov
jo
fs
xor
mov
sahf
dec
pop
ret
mov
sahf
mov
lock
inc
out
jb
adc
mov
cmpsl
ljmp
xor
test
vunpcklps
mov
add
push
cmp
mov
xchg
mov
adc
lcall
rclb
std
mov
jmp
inc
cmp
inc
in
jmp
testl
popa
inc
sub
sub
sub
cltd
mov
sub
mov
enter
and
sarl
dec
nop
mov
test
cmpb
mov
inc
jmp
lret
test
icebp
rcr
outsl
xchg
and
sbb
addr16
jnp
or
rcrl
push
les
push
push
testl
test
cmp
inc
lods
add
pop
gs
lret
test
push
xor
or
lcallw
in
loopne
xchg
sbb
jbe
divl
inc
mov
push
or
sub
push
lds
iret
cli
inc
dec
not
mov
jg
sahf
xor
pusha
push
es
jo
cmp
push
in
lcall
into
aad
or
xor
jge
xchg
or
incb
sbb
ss
out
sbb
pop
pop
or
sti
push
rorl
clc
and
jb
clc
or
ds
repnz
inc
mov
rcr
pop
mov
xchg
push
sbb
andb
mov
sub
pop
xchg
daa
cmpsb
inc
out
gs
ljmp
adcl
inc
int3
int3
dec
adcb
leave
mov
sbb
inc
mov
ss
iret
mov
sahf
and
sub
mov
push
test
jmp
or
and
divb
cmp
fld
mov
xchg
mov
ss
xchg
sub
daa
fmul
scas
into
mov
fidivl
int3
mov
cmpsl
mov
sub
dec
addl
adcl
sub
push
xchg
or
sahf
mov
xor
or
cmp
hlt
stc
sbb
sub
dec
cmp
pop
pop
pop
cmpsb
pop
or
std
int
lahf
stos
dec
mov
mov
xchg
jne
jmp
or
test
jle
or
cmp
sub
xchg
das
sub
insb
filds
sbb
mov
scas
jmp
test
icebp
test
in
subb
cs
or
call
mov
out
rolb
cltd
adc
movsl
sahf
and
and
mov
lods
sbb
icebp
test
push
cmc
ds
sahf
ret
mov
push
inc
inc
and
inc
jno
lods
or
repnz
push
loope
sbb
pop
add
cmp
cli
cli
rorl
mov
add
cmp
cmp
mov
xchg
jns
fsubl
and
add
mov
jae
cltd
hlt
out
inc
faddl
cmp
lahf
adcl
fdivrs
aas
subl
xchg
std
stos
sbb
addl
adc
or
cmp
jg
scas
into
cs
pop
xor
imull
sub
ret
aam
xor
lcall
mov
adc
jle
lcall
sub
insl
push
mov
add
jp
inc
std
ret
mov
outsl
out
push
and
out
pop
loope
out
fisttpl
mov
shll
repz
add
jle
ret
xchg
cli
scas
xchg
jecxz
scas
orb
jo
addr16
jp
or
shr
and
subb
cld
idivb
andl
push
push
dec
sar
adc
adc
xchg
cmp
inc
cmp
test
mov
pop
lcall
fimuls
test
fldenv
fstps
push
ret
es
adc
andl
aam
cmpsb
out
repz
rorl
mov
sahf
push
xor
sbb
mov
and
mov
mov
xor
repz
or
xchg
sbb
cltd
ficoms
insb
jnp
gs
sbb
jnp
ljmp
ds
in
lock
adc
cs
fnstcw
dec
and
rcrb
dec
jb
jle
and
ss
sub
sbb
mov
dec
sub
iret
mov
arpl
push
push
jle
repnz
inc
or
stc
movsl
in
lret
cmpsl
mov
push
mov
fildl
fs
into
fdivr
mov
mov
imul
cwtl
sbb
and
incl
adc
out
les
cmp
loopne
lcall
push
lock
inc
stos
push
or
pusha
add
fldenv
mov
cmp
push
ds
mov
and
jae
inc
pushf
enter
xchg
jns
gs
insb
mov
out
push
insb
adc
xchg
sbbl
punpcklbw
sahf
add
iret
loope
out
dec
loopne
or
jae
push
sbb
mov
out
push
repz
or
ds
cs
les
pop
movl
aam
jmp
push
pop
sbb
and
xorb
fstpl
or
inc
push
or
andb
insb
pop
pop
stos
pop
sbb
and
mov
jecxz
dec
repnz
sahf
out
icebp
daa
mov
mov
idivl
push
shrb
pop
inc
test
or
aad
jne
dec
and
arpl
aas
jnp
mov
push
jo
fs
fisubs
pop
push
xchg
xchg
cmp
pop
cld
mov
add
out
or
and
in
sub
bound
pusha
sarl
adc
in
ljmp
dec
sbb
pop
xor
or
dec
ffree
sub
incl
out
mov
dec
xchg
xchg
push
nop
inc
xchg
and
xor
pushf
out
adc
daa
pop
fiadds
enter
imulb
aaa
ss
mov
sub
sbb
sub
inc
mov
fildll
and
fildll
imul
push
mov
add
enter
in
sarb
or
out
jb
push
cmpsb
and
lods
push
mov
inc
mov
push
cmc
lods
sub
sub
jl
pop
pop
jmp
adc
xchg
loope
push
and
push
lock
sub
cmp
push
out
sbb
into
dec
lods
cmpsl
xchg
pop
dec
push
popa
shlb
cltd
dec
daa
sahf
push
sub
jge
inc
inc
in
sub
cmp
sbb
test
repnz
mov
jae
push
mov
insb
pushf
adc
sahf
stc
mov
int
or
into
dec
clc
dec
movsl
fnstcw
pop
add
lock
test
les
pop
lret
mov
push
lahf
jo
divl
push
and
loopne
add
repnz
rorl
sbb
push
addl
adc
inc
repz
pop
and
xor
adc
or
stos
pop
inc
adc
sbb
pop
pushf
enter
jge
int
pop
cmc
loope
sbb
jl
lret
out
jne
dec
adc
jp
jno
mov
daa
dec
mov
repz
and
dec
test
out
jb
adc
adc
sbb
inc
sbb
out
mov
inc
js
arpl
insb
out
fdivs
sbb
aas
adc
aad
out
imul
scas
sub
divl
ja
mov
mov
or
into
lods
loopne
rcrb
jns
test
cmpsb
dec
mov
sbb
sub
or
xchg
repnz
mov
daa
xchg
addr16
fistl
popf
push
mov
push
insl
rcl
addr16
iret
loop
mov
mov
add
lods
add
sti
mov
iret
outsl
or
into
xchg
jbe
lea
mov
or
xchg
pop
pop
jle
fsincos
shll
flds
jb
sti
sti
pop
cmp
xchg
sub
insb
ja
pop
xor
adc
bnd
mov
xchg
xor
xchg
inc
cmpsl
cmpb
inc
sbb
into
xchg
stos
fsubl
lahf
pop
sbb
jno
inc
in
push
pop
cmp
insb
into
cmovns
ficompl
cmp
adc
in
loope
sub
mov
inc
mov
repnz
mov
add
outsb
xor
xlat
insb
sbb
pop
and
imul
xchg
mov
mov
jle
push
je
fisubs
dec
push
xor
add
cld
test
push
push
or
add
xlat
stc
lahf
or
sahf
sbb
lret
sbb
sbb
lcall
cmp
jg
or
mov
ret
adc
rcll
mov
push
rcll
insl
mov
push
sbb
fcmovb
xchg
xlat
insl
in
aaa
mov
mov
push
outsl
pusha
lds
clc
jg
dec
push
lcall
mov
mov
and
lods
adc
cmp
cmp
cmpsl
add
faddl
rcll
push
movsb
mov
xchg
out
ret
jb
mov
insl
jg
test
out
bound
lcall
dec
cmp
ds
sub
add
fcmove
dec
scas
sar
scas
xchg
inc
xchg
or
insl
mov
int
mov
push
andl
icebp
mov
xchg
addr16
int
adc
stos
xor
fwait
and
ficompl
dec
ljmp
not
adc
add
push
add
inc
insb
and
andb
sbb
cltd
pushf
mov
lea
xchg
dec
ret
out
cmp
es
inc
pop
jns
movsl
dec
or
aad
cmpsb
jmp
inc
mov
mov
fwait
std
push
in
mov
xchg
xlat
data16
push
sbb
test
aaa
inc
fs
sub
inc
or
std
mov
cmp
lods
cli
sbb
cmp
and
outsl
push
lcall
mov
xchg
iret
and
mov
ljmp
inc
clc
add
rcrb
cmpsl
dec
push
cmc
out
arpl
ds
xor
inc
inc
out
loope
test
lret
aaa
ss
push
mov
jae
outsb
outsb
mov
mov
insb
push
sub
call
inc
jno
decl
xor
pop
or
sbb
je
mov
aam
xchg
and
mov
in
into
sbb
mov
cld
mov
mov
add
aaa
out
les
fistps
mov
lock
xor
jp
xor
daa
leave
dec
mov
adc
scas
xor
xor
pop
stos
fisttpll
cmp
mov
dec
out
lret
sub
push
inc
and
ss
ljmp
jne
jg
leave
ds
inc
xchg
mov
outsl
cmpsl
and
xchg
mov
enter
fistps
inc
cmp
mov
aad
inc
scas
inc
sbb
test
inc
icebp
xchg
sub
nop
pop
dec
movsb
dec
andl
jg
cmc
call
sbbb
pop
loopne
loopne
xlat
push
in
pop
xchg
mov
test
mov
adc
cmp
aam
and
push
mov
xchg
insb
enter
and
ja
jb
mov
test
cmpsl
js
mov
sbb
lahf
cmp
test
cmp
out
xchg
scas
mov
lret
mov
inc
fcmovne
mov
loope
call
push
mov
adc
loope
push
addb
int
sbb
jno
sub
push
aad
jp
ss
pushf
mov
pushf
inc
add
xchg
xchg
pusha
xlat
outsl
cmc
mov
mov
and
fcompl
cwtl
or
sub
xchg
cmpsl
mov
pop
mov
jno
mov
xor
cltd
shl
push
jae
mov
imul
jle
shll
cld
movsb
jmp
pop
je
fisttps
and
jbe
jmp
bound
cmp
les
jo
sbb
or
in
mov
shlb
add
add
mov
sbb
enter
jl
lods
mov
push
mov
mov
mov
inc
int
ss
jne
je
and
jne
popa
mov
inc
cld
push
div
and
push
leave
mov
or
mov
cwtl
xor
xor
inc
or
and
push
push
xchg
or
das
dec
add
mov
adc
mov
and
dec
pop
gs
psrlw
sub
hlt
jcxz
repnz
loop
in
push
xchg
pop
cmpb
jbe
inc
push
xor
sbb
jg
rcr
xor
in
sbb
aaa
das
nop
dec
repnz
add
daa
addr16
mov
cld
mov
lahf
je
shl
mov
out
inc
es
scas
add
int
push
shrl
in
lods
jmp
iret
movsl
cld
add
adc
dec
out
sbb
mov
xor
dec
mov
pop
pop
cmp
sbb
xchg
dec
fisttpll
repnz
inc
mov
sbb
cmp
inc
filds
out
mov
push
data16
cltd
cmp
pop
mov
outsb
sbb
data16
inc
jl
lds
sti
adcb
addb
aam
scas
mov
ror
scas
in
and
out
cli
inc
jo
or
mov
or
adc
lods
ss
std
add
mov
jmp
in
inc
test
aas
mov
lock
fldenv
mov
mov
ss
stos
cmp
int
xorl
mov
fwait
mov
mov
fmull
pop
sbb
in
push
and
add
scas
enter
push
adc
ret
fwait
stos
dec
adc
mov
mov
jl
enter
mov
push
in
inc
add
negb
cmp
ss
adc
mov
aam
dec
adc
mov
xor
subb
int
repnz
jo
movd
inc
sbb
or
or
jnp
mov
das
jl
sbb
jge
jmp
xchg
mov
idivl
outsl
outsl
flds
dec
adc
jle
stos
mov
cmp
mov
je
movsl
insb
mov
int3
xchg
pushf
cmp
bound
aad
fdivs
out
dec
pop
adc
sub
mov
out
dec
push
or
mov
push
shrb
mulb
out
cltd
xor
sub
ja
add
lods
and
xchg
adc
xchg
popa
lds
dec
push
mov
ret
push
int
cld
pop
push
mov
sub
cmp
fwait
pop
push
ss
sbb
sbb
lret
or
mov
lahf
popf
jle
mov
push
out
aas
or
lea
sbb
cld
into
xor
pop
xchg
insb
push
ds
pop
clc
sub
inc
int3
loopne
loope
gs
lret
lds
mov
mov
dec
mov
mov
inc
jmp
mov
popf
jb
ret
dec
fdiv
or
pusha
dec
addr16
movsb
aam
imul
fldt
pop
out
rol
push
cmp
jae
add
rorl
pusha
jle
mov
pusha
xchg
jb
or
dec
inc
jle
int3
sub
mov
in
test
mov
xchg
adc
mov
cmp
leave
out
ljmp
dec
lahf
cmp
icebp
cwtl
sbb
movsb
jl
repnz
mov
or
scas
sbb
call
sbb
mov
pop
dec
inc
adc
sbb
dec
adc
inc
sub
lret
ja
stc
movb
sti
jge
stos
cmp
sbb
inc
ret
sub
std
popf
bound
inc
inc
push
dec
stos
or
aad
inc
and
push
mov
jo
adc
xchg
nop
je
int
test
pop
das
loop
jecxz
push
push
mov
lcall
loope
jns
addl
test
or
loope
mov
aas
mov
cmpsb
cmc
cmp
adc
add
rorl
out
add
cmp
jg
pop
xor
jmp
mov
dec
and
or
push
inc
xchg
ret
stos
push
pop
sub
jb
dec
push
pop
aad
and
sub
cltd
push
mov
sub
mov
adc
test
loopne
adc
xchg
js
fidivl
jl
sbb
cmp
jne
pop
stos
into
jb
xlat
in
mov
out
pop
adc
je
mov
mov
mov
lret
lahf
mov
sbbb
cs
lcall
daa
sub
xor
ficomps
scas
add
and
sbb
and
mov
mov
loop
inc
es
inc
push
sub
in
pop
mov
xchg
jae
pop
push
imul
inc
push
jne
mov
outsl
fistps
aas
testb
xchg
jo
cmp
data16
mov
inc
movsl
push
daa
into
nop
mov
mov
mov
sbb
dec
loopne
in
insb
loop
mov
gs
fdivl
and
cmp
dec
je
cli
stos
std
mov
std
popf
adc
lods
push
push
icebp
dec
aaa
jmp
cmp
mov
idivb
sbb
mov
add
push
jmp
stos
xchg
xchg
clc
sarl
lods
mov
jle
jo
lds
lds
rcll
mov
inc
pop
popf
push
icebp
dec
ret
mov
scas
jge
inc
cld
xor
sahf
pop
sbb
ljmp
das
ds
push
cmpsl
sub
push
and
lds
movsb
test
iret
add
movsl
out
pop
in
add
cltd
daa
add
test
adc
out
in
imulb
bound
loope
pushl
icebp
dec
ljmp
subb
fildl
xor
dec
push
mov
and
je
lock
lret
mov
and
rorl
pop
pop
dec
inc
sub
ljmp
scas
add
push
inc
pop
mov
sbb
jo
fwait
mov
lods
xchg
push
lcall
cmp
int
int
mov
dec
or
dec
aad
jle
je
inc
loopne
fs
in
dec
imul
js
out
scas
jns
or
jne
mov
mov
movsl
jp
repnz
movsl
push
push
cli
xchg
xchg
xor
mov
jb
sub
clc
sub
sbb
inc
hlt
insl
jno
inc
pop
sarb
faddl
pusha
xor
das
dec
pop
shll
andb
mov
sub
mov
ret
out
cld
repz
lds
stc
dec
out
popf
in
lret
scas
mov
fdivrs
mov
mov
nop
xchg
or
lods
cmpsb
jp
push
adc
es
movsb
flds
ja
mov
push
mov
xor
loope
adc
xor
or
loope
mov
jns
add
jecxz
sbb
jnp
cld
add
mov
and
jge
xor
dec
clc
jo
insb
test
inc
lock
ljmp
js
pusha
cmp
adc
shlb
pop
cltd
xlat
mov
popf
cld
in
mulb
je
testl
out
inc
ss
test
mov
dec
jne
sahf
int
lds
and
mov
rolb
and
sub
xor
cmpl
xor
lret
pusha
loope
xchg
mov
sbb
add
mov
fmull
push
in
sti
inc
cmp
jle
add
fmuls
fdivrl
arpl
pop
lea
imul
xchg
cmc
shr
push
jbe
mov
out
jmp
mov
dec
mov
sbb
lahf
cmpsl
ret
out
fisttpll
test
mov
popf
jl
xor
cmp
rolb
jno
push
sub
lcall
sub
hlt
imul
dec
push
fnstcw
push
cli
jmp
sahf
icebp
test
mull
insl
inc
cli
pop
call
div
sbb
sahf
arpl
cs
leave
das
std
or
sbb
mov
sbb
push
jmp
cld
pop
mov
and
add
add
jmp
inc
jns
mov
cs
add
or
pop
arpl
mov
or
mov
ret
xor
xchg
ret
shll
loop
test
pop
inc
mov
pop
mul
xchg
lahf
into
push
xor
shrl
cli
xchg
shlb
cmp
sub
push
jge
jg
mov
sar
mov
ja
mov
loop
mov
push
jge
sub
push
inc
sbb
jmp
add
and
mov
cmp
sub
inc
xor
and
pop
ret
sub
dec
pop
sahf
ja
mov
sub
jo
into
lahf
push
movsl
incl
push
das
lahf
mov
push
push
mov
jne
xchg
hlt
inc
mov
cld
aaa
imul
ljmp
test
jnp
jb
rorl
jge
in
movsb
add
jns
mov
sbb
mov
cli
pop
gs
dec
lret
test
loopne
jae
mov
inc
clc
sbb
sahf
mov
cltd
bswap
fstps
test
inc
inc
or
mov
ror
push
mov
sbb
add
mov
call
fcomip
aad
test
ja
jg
xor
pop
aam
xchg
sti
sbb
shrl
xchg
mov
lahf
bound
cltd
or
inc
pop
mov
ds
and
imul
adc
out
test
rcll
dec
xchg
push
test
pop
loopne
jb
sbb
push
sbb
inc
leave
cltd
fildl
repnz
outsb
test
push
push
push
mov
rcrl
pop
dec
fildll
mov
and
mov
cmp
inc
pop
sbb
or
in
xor
xchg
fdivs
mov
fstpl
lods
pop
xor
xor
xor
hlt
and
xor
xchg
scas
jo
and
cli
movsb
clc
stos
mov
sub
xor
push
jmp
movsb
dec
inc
jmp
xchg
orb
push
pushf
inc
push
mov
add
lret
outsb
fwait
insl
mov
xchg
in
in
lock
add
jns
aad
xor
in
in
iret
int3
fistps
nop
xorb
add
js
movsl
subl
sti
sbb
aam
mull
out
jnp
sti
add
int
in
xchg
dec
or
shlb
jl
lods
push
data16
les
in
mov
jbe
in
popf
les
cs
out
stos
insb
or
nop
or
pop
mov
sbb
fisubrs
aas
mov
xchg
addr16
xchg
mov
or
cmp
dec
inc
and
ret
sbb
test
je
das
hlt
stos
lret
outsl
in
push
inc
or
dec
adc
mov
scas
mul
push
and
idivl
je
loopne
inc
adc
xor
jb
fsts
inc
pusha
test
sbb
and
sub
xlat
pop
out
popa
cmpsb
repnz
das
cwtl
mov
dec
mov
into
pop
cmpsb
mov
push
leave
rcll
cltd
pop
dec
xor
push
and
pop
push
inc
xor
repnz
mov
dec
jno
fimull
dec
pop
jnp
xchg
jae
popf
mov
scas
push
jae
testl
fcoml
xchg
mov
fstl
pop
lds
je
cmp
adc
sbb
outsl
jb
dec
and
outsb
mov
mov
ss
fucom
roll
pushf
jmp
das
jne
xlat
fxch
pop
pop
test
mov
icebp
sbb
stc
push
int
movups
or
add
mov
jne
into
mov
aas
popl
xlat
test
push
xchg
or
mov
scas
jno
repz
cmp
jnp
jb
mov
out
mov
sub
push
dec
idivl
or
loop
add
inc
xchg
jmp
and
stos
mov
add
mov
dec
inc
jbe
loop
je
pop
or
ja
cmp
stc
pop
das
mov
cmc
pop
test
inc
insb
shrb
fcos
inc
mov
enter
clc
int3
aam
adc
fs
addb
adc
mov
leave
pop
or
mov
cmc
xchg
and
push
jmp
adc
pop
or
sub
xlat
repnz
mov
push
jns
jae
lods
ds
jne
popf
icebp
cli
mov
enter
or
xchg
push
pop
and
lcall
mov
adc
push
or
clc
cmp
pop
cmp
int3
cmp
negb
vmovss
pop
es
shll
imul
jl
xchg
add
mov
addr16
inc
insb
jno
add
lcall
xor
insl
andb
and
add
sbb
shrb
xor
loope
push
repnz
mov
ficoms
stos
sbb
adc
movsb
es
mov
add
xchg
lret
xchg
xor
repnz
mov
in
dec
idivl
dec
mov
outsl
nop
iret
or
xor
cmp
add
rorb
idivb
sarl
jmp
and
pushf
xor
xchg
push
ss
push
cmp
cmc
sbbl
xchg
push
mov
scas
clc
pop
sbb
pop
ret
lret
sbb
xchg
adc
mov
cmpsl
or
call
add
lock
sbb
adc
data16
nop
and
sbb
xor
dec
mov
sub
inc
mov
adc
or
sbb
rcll
jbe
repnz
or
mov
popf
icebp
xchg
sbb
mov
cltd
ss
dec
xchg
mov
repnz
outsl
ds
lret
out
ds
daa
push
loope
xor
and
mov
and
fs
icebp
lret
pop
pop
cli
mov
and
cltd
mov
cmp
in
arpl
add
fwait
mov
and
add
nop
scas
int3
or
es
outsl
sbb
pop
mov
or
xor
xchg
dec
cmp
mov
gs
fidivs
pop
push
fcomip
cmc
push
mov
test
mov
ja
mull
push
fwait
in
cmp
mov
sarb
lret
xor
lret
sub
jmp
mov
cmp
ja
ret
lret
imul
ss
das
icebp
sti
xchg
pop
lock
adc
int
into
mov
inc
jnp
mov
aaa
out
xor
jno
pop
add
clc
arpl
lock
xchg
push
add
es
pop
add
pop
inc
jecxz
rcl
test
mov
push
sbb
scas
cli
and
push
xor
pusha
sub
mov
xchg
shll
pop
add
stos
loop
lahf
arpl
pop
sti
add
or
stos
insl
sbb
loope
add
test
mov
mov
push
rclb
aad
sbb
outsl
repz
push
insl
pop
gs
adc
bound
push
cltd
mov
inc
jno
loopne
cmp
cmp
je
hlt
push
pop
mov
adc
add
setl
leave
mov
jmp
scas
ljmp
fdivrs
inc
xchg
call
es
in
das
push
out
pop
pop
adc
xor
xor
movsb
popa
mov
out
xchg
push
aaa
cmpsl
loope
push
add
pop
cltd
or
jle
pop
jp
pop
mov
in
add
fs
jge
push
xlat
xchg
call
arpl
mov
inc
xor
push
fidivrs
das
mov
fcoml
sbb
jp
stos
rol
mov
xchg
into
mov
add
mov
loop
and
jecxz
andb
rcrl
cld
test
out
xchg
add
add
outsb
sub
push
lret
cmp
imul
icebp
xor
cmc
ss
cmp
mov
nop
add
mov
jecxz
fcomip
sti
mov
sub
out
fldt
jmp
dec
cmp
lds
cld
inc
pusha
movsb
mov
orl
fs
jnp
stc
sbb
loop
ret
and
and
aaa
xchg
mov
xor
in
aas
push
out
mov
pop
and
in
repz
jecxz
bound
push
mov
cli
stc
fwait
mov
cmc
mov
dec
rcrb
dec
stc
and
cs
lods
add
mov
lcall
and
jae
out
into
mov
jo
mov
lock
andb
dec
cwtl
inc
inc
int3
frstor
inc
sbb
xlat
xor
movb
xchg
gs
push
xchg
cmpsb
or
mov
adc
mov
cmp
je
popf
cld
fcmovnu
shlb
insl
jbe
pop
std
sar
fsubr
inc
cmp
pop
jae
lcall
in
test
andl
sbb
imul
and
popa
int
in
xchg
dec
mov
pop
xchg
push
mov
push
pop
loopne
jbe
scas
stos
mov
fnstsw
ss
cli
int3
stos
xor
stos
xchg
rorb
push
cmp
sti
adc
inc
lods
jg
fs
inc
pop
lcall
rol
sub
add
pop
je
sub
imul
dec
inc
call
inc
add
xor
sbb
es
add
xor
fdivrl
mov
push
or
push
popf
dec
fadds
and
push
clc
pushf
and
outsl
push
scas
enter
cmp
movsb
and
aaa
add
xor
xor
mov
mov
nop
mov
xor
jae
loopne
jl
cmp
rcl
pop
inc
push
or
xor
scas
pop
sbb
adc
fwait
in
xchg
mov
mov
loopne
movsl
xor
and
fstpl
cltd
xchg
stos
mov
aad
cltd
mov
repnz
pop
push
jl
add
add
sub
in
xor
push
movsb
add
sti
mov
imul
fadd
adc
mov
dec
mov
andl
or
out
fwait
push
faddp
xorb
xor
inc
dec
push
icebp
add
inc
in
insb
fldl
inc
sbb
lods
int3
sub
scas
outsb
or
mov
std
jmp
fisttps
pop
and
ficomps
ds
or
rcl
imul
out
adc
mov
sub
ds
aas
decl
notl
mov
or
pop
cld
cmp
xor
stos
cwtl
jbe
loope
scas
push
sbb
ljmp
mov
jp
or
daa
inc
sbb
out
rcll
imul
and
in
push
rclb
lods
pop
mov
sbb
dec
outsl
fcmovnu
cwtl
jecxz
imul
mov
ret
loopne
cmpsl
push
std
push
mov
push
fldenv
and
fstps
xlat
je
sbb
out
mov
cwtl
add
push
xor
pop
lock
mov
call
dec
mov
sbb
sbb
cld
adc
iret
adc
push
fdivs
add
push
xchg
mov
xchg
std
jge
xor
inc
fcom
and
scas
mov
inc
xor
cmp
jo
xor
push
repz
mov
sbb
cld
inc
fwait
jo
insb
loop
and
inc
pop
jg
add
push
test
into
mov
mov
mov
loope
jecxz
insl
mov
into
push
xchg
divl
insl
sbb
inc
dec
mov
sbb
xor
js
aad
xchg
mov
iret
xor
mov
push
xor
push
mov
arpl
jle
xor
aam
insl
nop
andl
out
sub
mov
stos
ljmp
push
add
imul
lods
pop
dec
in
and
das
ja
sbb
leave
scas
in
pop
sbb
cld
cwtl
imul
into
daa
xor
sti
jle
push
lock
or
lcall
and
divb
stos
adc
repz
cmp
int
xor
adcb
je
std
inc
pop
mov
mov
fnstsw
roll
loop
cwtl
or
sbb
or
sbb
sbb
adc
jge
iret
push
aam
and
pop
sub
loop
movsl
lcall
push
cltd
fldenv
dec
xchg
or
push
jo
test
scas
mov
mov
mov
or
mov
aas
fisubs
lahf
dec
dec
scas
xorb
lret
movsl
cmp
xchg
and
icebp
xor
dec
mov
test
pop
jne
jp
xchg
push
mov
int3
pop
pop
cwtl
jno
popa
mov
in
pushf
in
xchg
jmp
jecxz
pop
pushf
and
jbe
push
cmp
scas
and
add
inc
push
xchg
mov
xor
test
and
lret
lods
lcall
add
in
add
adc
push
jns
adc
jp
test
aas
ljmp
sahf
dec
adc
testl
sub
xchg
ja
push
push
ret
xchg
stos
add
leave
imul
movsb
or
dec
xchg
stos
lods
sahf
div
ss
nop
cs
test
push
jnp
and
into
loop
mov
dec
dec
mov
out
adc
in
fucomi
push
xchg
stos
aaa
sbb
mov
cmpsb
fxam
movsb
xchg
js
sbb
int
fsts
cltd
lcall
ja
pop
push
iret
test
inc
icebp
mov
pop
ret
xor
ljmp
insb
leave
adc
inc
in
inc
cmpsl
pop
pusha
aam
mov
out
pop
cltd
or
in
xor
in
mov
lret
mov
bound
sub
fildl
sbb
cmpsb
xchg
das
jmp
xchg
xchg
jg
data16
sbb
jmp
jge
dec
shl
cmp
dec
fcompl
out
andl
jecxz
rcrb
mov
sub
sub
mov
and
stos
cli
push
sub
pusha
stos
mov
scas
sahf
push
xor
mov
test
gs
cmc
xchg
or
mov
mov
mov
adc
push
or
pop
or
lods
sub
dec
shlb
jmp
or
mov
push
repnz
int3
jp
loope
out
or
add
xchg
in
or
xchg
outsb
sbb
sub
inc
pop
loopne
ja
repnz
cmp
fcmovu
cmpsl
test
outsl
sbb
add
aad
loope
adc
mov
dec
mov
mov
test
aaa
mov
popl
out
xchg
stos
fistps
mov
inc
xor
sbb
mov
and
cmc
repnz
cmp
jg
loopne
jno
inc
out
test
inc
add
lods
add
push
push
in
test
xchg
push
dec
mov
inc
xor
and
fistps
jb
jp
inc
data16
mov
sub
mov
in
arpl
subb
out
or
es
adc
lods
popf
mov
mov
test
xchg
adc
lahf
shrb
ret
pop
or
repz
adc
push
push
push
ret
fldt
cmc
daa
add
mov
xor
xlat
inc
shlb
xor
addl
sbb
jecxz
rep
mov
repnz
push
jbe
mov
cmpsb
call
pop
sbbl
lods
add
or
pop
sbbl
cmp
xor
lret
aaa
jo
lahf
push
aas
sbb
and
mov
loop
data16
dec
xchg
mov
js
dec
popa
dec
pushf
lds
es
jb
imul
mov
iret
fwait
lahf
bound
pop
int
push
pop
rclb
push
js
or
add
sbb
loopne
sbb
fistps
xor
aam
inc
pop
lret
cmp
movsb
hlt
les
cmc
sub
sarb
sub
jns
mov
cmc
xor
fistl
sbb
lcall
or
push
cs
cltd
xor
jl
cmp
add
pop
jne
xor
inc
cld
or
lahf
jnp
mov
aam
clc
ret
add
mov
test
imul
das
outsl
shr
repz
mov
pop
mov
imul
lods
mov
pushf
and
pop
lcall
adc
cmp
cli
test
xchg
inc
push
inc
out
test
je
bound
in
cmpl
adc
aam
jecxz
adc
mov
nop
decl
arpl
cs
fdivl
divl
dec
pop
int
jge
pop
push
add
push
cltd
xchg
mov
addr16
aad
sub
xor
shl
cmpl
repnz
int3
int
jg
enter
push
xchg
cmc
hlt
sbb
neg
mov
jmp
incl
xchg
add
cs
sarl
pop
imul
call
pop
push
push
icebp
jg
inc
imul
xor
lds
add
scas
imul
sub
mov
mov
mov
pop
insb
or
ret
jg
loop
lock
or
movsb
cmp
cmp
or
mov
push
outsl
popa
outsb
jne
sub
in
sbb
pop
mov
outsb
sbb
test
divl
push
nop
iret
cld
lahf
ja
fs
or
sbb
lret
add
mov
xchg
ret
and
pop
int3
and
pusha
shrb
xchg
xchg
mov
clc
insl
push
xor
mov
push
mov
sbb
or
outsl
outsl
cmp
lret
arpl
mov
adc
gs
or
in
pop
dec
dec
fsubp
rol
and
mov
sub
mov
mov
outsl
mov
and
jns
or
push
and
test
push
sbb
jmp
ss
or
loopne
jmp
hlt
dec
in
xor
push
sub
sbb
fimull
pop
call
lock
loope
jge
aaa
int3
outsl
sub
jnp
lock
ss
mov
pop
or
imul
imul
sub
push
scas
je
not
or
cmp
or
imull
lods
mov
ljmp
sub
sbb
dec
and
lock
jbe
int
data16
or
fs
shlb
add
sbb
fists
ds
ret
fcomp
shr
inc
cmp
mov
mov
pushl
inc
cvtpi2ps
movsl
inc
loop
jle
sub
icebp
cld
sub
or
aas
aad
mov
push
js
xor
inc
dec
sbb
aam
xchg
inc
dec
jge
and
and
aas
fs
mov
inc
lret
and
out
fldt
lahf
idivb
repz
jl
dec
dec
mov
inc
outsb
outsl
or
cmp
lcall
pushf
gs
pushf
xor
shlb
and
cmc
mov
mov
jg
sbb
scas
cmpsl
pop
cmp
or
inc
out
mov
lea
pusha
inc
lods
cwtl
mov
fidivrs
mov
negb
dec
cmpb
fildll
and
cmp
xchg
or
or
add
cmc
pop
js
pop
out
insl
stos
sbb
sti
outsl
dec
jmp
movsb
cmpsl
jne
mov
js
push
pushf
sbb
xor
js
jo
adc
sub
cmpsb
jne
dec
pop
shl
or
fldenv
push
ror
sub
pop
xchg
rcr
or
or
inc
lds
es
sub
sub
inc
sbb
popf
sub
sar
inc
cld
xchg
mov
popa
xchg
mov
fnstsw
adc
insb
in
jge
sbb
daa
fwait
inc
xchg
out
insb
and
push
ljmp
lret
test
mov
js
jmp
jbe
aas
and
mov
bound
and
out
add
loopne
pop
test
cmp
aaa
pop
sbb
push
jp
icebp
out
push
jg
sub
cmpsl
push
xchg
shll
sub
imul
xor
fiadds
ret
xor
jmp
xchg
mov
mov
add
ja
fmull
ds
lahf
pop
rclb
push
lcall
mov
ret
mov
and
and
decl
gs
or
fidivrs
fisttpl
push
xor
inc
les
loop
jl
fwait
push
pop
aas
inc
push
sub
dec
xorl
xor
daa
sbb
xchg
mov
adc
push
gs
clc
add
inc
or
mov
aas
ja
roll
rcrb
or
fldt
addr16
jmp
adc
aas
sbb
add
addb
mov
xchg
add
dec
jmp
ja
cmp
mov
pop
imul
dec
or
mov
fsubrp
enter
ljmp
test
fistpl
loop
aam
lods
mov
repz
push
mov
sahf
mov
aaa
inc
jl
lcall
out
cmp
mov
jae
xchg
loopne
les
mov
push
stc
ja
sub
pop
jae
std
scas
fisttpll
jno
jp
adc
in
or
aam
adc
sbb
inc
xor
xchg
pop
call
rcll
in
inc
fmull
adc
idiv
scas
jge
scas
sahf
xchg
pop
mov
ficompl
lcall
in
xor
mov
sbb
dec
rcr
cmc
push
fimull
lret
mov
fstps
imul
inc
pop
negb
sbb
sahf
in
into
ret
shll
inc
movsl
rclb
mov
xor
pop
clc
xchg
lods
push
mull
ljmp
pop
incl
out
mov
std
test
fsubrl
jb
test
stos
in
or
in
mov
push
lret
and
dec
jecxz
cwtl
popa
dec
nop
sub
add
sub
xchg
das
sti
xchg
xchg
pop
out
in
je
mov
xchg
xorb
les
sub
dec
ljmp
lret
loopne
xor
mov
jne
dec
pop
mov
lock
sbb
sub
inc
jae
out
out
cli
xchg
testb
sub
incl
pop
xor
push
out
sarb
stos
sahf
cmp
shrl
jno
lds
and
pop
push
out
pop
stos
mov
dec
movsl
pop
mov
xchg
rcll
mov
fsubr
hlt
xchg
pop
enter
movntq
out
cmp
adc
or
jne
xor
sub
ja
jbe
jo
jae
xor
inc
mov
daa
adc
or
out
add
lahf
mov
add
jno
stos
out
mov
loop
dec
xchg
sti
ljmp
mov
adc
fstp
pop
popl
adc
mov
bnd
pop
inc
mov
outsb
pop
imul
in
aam
mov
arpl
jns
fwait
adc
cmpsb
mov
aas
add
and
cli
outsl
fcmovnb
sahf
cltd
jle
inc
outsb
or
imul
gs
rclb
or
arpl
xlat
sahf
in
mov
inc
test
jp
sub
cmp
rcrl
fdivl
cltd
cmp
jmp
jle
lock
rorb
hlt
loop
jnp
into
mov
sbb
or
inc
lods
lds
push
dec
mov
movsb
aad
adc
inc
xor
xlat
xor
testl
mov
mov
scas
sub
sub
lret
pop
jno
pusha
in
cs
xor
loop
int
je
adc
pop
sahf
mov
mov
jne
inc
stc
pop
xchg
cmp
rorb
inc
add
xlat
xchg
push
mov
fstpt
push
dec
hlt
sahf
and
inc
mov
pusha
jns
or
sbb
sbb
sbb
fiaddl
pushf
fnstcw
sbb
iret
icebp
inc
test
mov
mov
gs
jae
cld
mov
fwait
push
and
mov
push
cwtl
inc
or
add
cs
add
hlt
xor
push
adc
outsb
movsb
mov
shlb
adc
or
mov
mov
gs
mov
cmp
lods
jge
pop
and
in
lods
xchg
popf
adc
sub
xchg
iret
js
jle
sub
cmovs
cli
ss
push
and
push
push
or
enter
int3
and
mov
mov
shl
mov
lcall
dec
test
mov
in
xor
lcall
aas
cmp
call
cmpsl
into
gs
orb
in
push
test
pop
xchg
fstl
std
gs
mov
pop
ljmp
test
mov
xor
fiaddl
push
jp
dec
mov
push
incb
add
inc
insb
mov
and
xchg
mov
and
adc
in
mov
lods
adc
dec
int
adc
lret
or
test
xorl
or
sub
ljmp
cmp
addr16
add
dec
or
dec
nop
or
mov
outsl
xchg
sti
push
jns
xchg
add
or
lds
insl
mov
pop
inc
push
mov
outsb
push
nop
jge
cmc
cmpsl
sbb
mov
jg
daa
imul
insl
cmpb
or
add
insl
jno
sar
sbb
mov
jp
sbb
mov
inc
pusha
scas
adc
stos
pop
xchg
xchg
xor
fs
jae
and
daa
push
aaa
mov
imul
in
push
pusha
lcall
shr
dec
fdivrs
jnp
aad
mov
jno
jge
jge
pusha
daa
push
aam
nop
div
dec
xchg
sub
imul
iret
mov
or
test
arpl
push
das
mov
ljmp
inc
push
jmp
push
jnp
shlb
lea
and
daa
les
cltd
pop
xchg
push
loopne
mov
cwtl
aas
jp
pushf
dec
and
mov
test
jnp
imul
popf
fbld
or
es
lods
cmp
push
adc
xor
mov
cmp
test
jnp
adc
xlat
xchg
imul
pop
loop
push
or
mov
fcoms
jae
cmp
imul
add
ret
xor
data16
repz
in
cs
into
sub
mov
mov
mov
jo
sbb
mov
pop
push
mov
test
lret
call
mov
addb
cmc
lahf
sahf
in
cmp
and
loopne
jecxz
push
mov
lock
mov
es
in
int3
add
test
xchg
adc
jmp
xor
cmpsb
xchg
adc
inc
pushf
inc
mov
cmp
fisttpll
aas
or
mov
xchg
pop
mov
mov
pop
shrb
xchg
fisubrl
jmp
int
fimuls
outsl
jle
daa
push
xor
enter
jg
in
dec
out
int3
outsb
and
js
test
jb
xchg
and
xor
dec
daa
dec
arpl
mov
cmp
or
mov
test
sub
sub
lock
sbb
das
mov
lds
imul
mov
loop
add
aad
jne
or
dec
push
jg
pop
sub
xchg
mov
adc
mov
test
or
iret
ret
jae
cli
push
or
xor
int
shll
sub
mov
or
xchg
fcom
rolb
cmpsb
sub
pop
xchg
push
shll
mov
ja
mov
mov
xchg
add
sub
mov
dec
cmp
sub
movsl
add
adc
mov
loope
sub
iret
fidivl
nop
js
sub
inc
lcall
jnp
frstor
adc
adc
daa
add
das
mov
sahf
xchg
adc
adc
cmp
bound
sub
popa
subb
not
out
cmp
aas
push
push
pop
xchg
pop
mov
popf
mov
adc
outsb
lds
cmp
in
pop
inc
stc
out
mov
push
enter
in
loopne
jo
nop
or
cmpsb
dec
outsb
leave
sbb
mov
lret
outsl
mov
outsl
insb
cmp
dec
lds
pop
sub
dec
adc
mov
lds
in
mov
xchg
fwait
mov
into
aaa
je
idiv
dec
mov
int
jbe
xor
mov
and
pop
inc
test
and
repnz
mov
and
jle
sahf
fadds
jle
dec
aad
and
popa
das
jg
repnz
cli
pushf
das
adc
lret
sbb
popl
test
push
sub
cmp
push
inc
xor
in
or
sbb
aaa
loope
lds
and
push
lahf
jge
fmul
mov
cmp
out
orb
jne
xchg
mov
mov
cltd
pop
mov
xor
pusha
xorl
lea
and
mov
dec
cmp
adc
add
ret
stos
push
mov
repnz
lret
inc
les
jmp
ja
scas
dec
call
ja
mov
cmp
mov
rcrb
xchg
aaa
mov
ficomps
stos
pop
mov
cmpsl
adc
clc
jmp
mov
dec
mov
xor
pop
fs
sub
add
mov
jecxz
jecxz
out
inc
jmp
notb
mov
scas
frstor
jecxz
sarb
sbb
mov
out
jnp
loop
jge
sbb
jne
popa
scas
sub
cli
fsts
arpl
sub
mov
clc
sub
push
mov
sbb
lods
and
mov
jbe
data16
dec
or
lret
jle
push
jae
cld
negl
scas
outsl
idivl
xchg
cwtl
stc
jns
popa
xchg
imul
shll
pop
cmp
mov
jge
iret
cmpsl
mov
push
shr
mull
pop
pop
push
sbb
sarb
cmp
repz
shll
lods
sub
adc
and
or
lods
mov
arpl
and
sbb
insb
imul
push
std
test
fldenv
roll
cmp
lahf
dec
push
sbb
lock
mov
lret
vpsubd
out
jbe
dec
inc
lcall
lret
pushf
sub
hlt
push
xchg
leave
sub
mov
xor
mov
std
mov
dec
stc
add
sahf
repz
clc
jo
ficoms
sub
sbb
repnz
add
xor
aam
inc
daa
mov
inc
inc
pop
mov
sti
fstl
sub
loope
add
outsl
push
mov
sbb
pusha
andb
inc
inc
test
xchg
mov
push
je
repz
push
inc
xor
pop
push
fwait
mov
scas
mov
pop
and
add
mov
or
jle
lock
cli
scas
sbb
xor
rclb
xchg
movsb
stc
cmpsb
push
out
sub
dec
cmpl
push
sbb
outsl
hlt
pop
rclb
cltd
mov
xchg
pmulhuw
bound
xor
aam
push
scas
mov
cwtl
xchg
cs
mov
movsl
cmp
pop
push
mov
fiadds
in
and
fstps
sub
xor
cmp
movsb
fildll
lret
in
sbb
lret
aas
add
or
mov
xchg
sti
mov
negl
xor
push
aas
xchg
inc
les
movsl
jno
pop
enter
add
pusha
xchg
dec
adc
shrb
ljmp
xchg
ret
mov
lahf
testb
push
pcmpgtd
out
jle
mov
push
insl
fnstsw
push
lret
jl
les
mov
imul
jg
scas
sub
pop
cmpsl
xor
xor
dec
mov
pop
pop
or
ficompl
repz
hlt
sbb
stos
scas
lods
cmp
sub
xchg
push
pop
sti
push
add
std
lea
sbb
ss
in
out
mov
mov
das
mov
stc
adc
pusha
mov
sbb
mov
pop
mov
push
sbb
jae
or
cmp
pushf
nop
shll
ds
cmp
dec
sarl
cltd
adc
xor
les
push
nop
push
mov
xchg
jp
ror
mov
mov
ror
adc
out
sub
pop
add
cmp
adc
inc
cwtl
push
fwait
dec
insb
fdivrs
jbe
mov
push
xor
stos
and
push
jnp
mov
jns
cmp
mov
les
mov
xchg
add
loope
leave
incb
jae
jecxz
or
insb
std
outsb
and
es
sub
adc
jo
cmp
push
mov
lea
mov
sbb
je
mov
sub
stc
mov
ret
and
popa
xor
push
mov
and
ss
fwait
mov
sbb
xchg
inc
pop
lds
enter
xchg
pop
mov
leave
mov
or
sbbb
jmp
fdivl
or
shr
ljmp
mov
cmpb
and
out
das
mov
les
pusha
pop
outsl
sub
xchg
push
fsts
dec
pop
jo
mov
cwtl
ss
push
dec
gs
xor
push
fsave
mov
pushf
pop
jbe
xchg
pop
inc
dec
lock
popf
cmpb
xor
shrb
out
sbb
popf
ja
stos
aad
movsb
mov
sub
mov
jg
fsubp
cli
cmp
dec
xchg
scas
dec
adc
fstl
adc
les
in
pop
or
test
jno
add
xor
in
xchg
jns
in
arpl
shll
mov
sbb
daa
pop
cs
add
mov
aaa
sbb
lea
pop
xchg
lods
xlat
lds
jle
imul
pushw
in
in
mov
ljmp
nop
jbe
ljmp
int3
sub
jge
sub
repz
mov
dec
fsubrp
mov
sub
cmp
sub
inc
movsl
adc
jg
inc
int3
jnp
pop
xor
cmp
adc
repz
lea
movswl
adc
imulb
adc
cmc
out
fdivrp
sti
jno
inc
xchg
jmp
add
xchg
and
adc
shll
mov
das
sub
mov
dec
stos
push
jmp
or
enter
cmp
cmp
aaa
daa
shrl
addb
push
ror
cmp
jecxz
sub
jle
pushf
pop
jl
mull
jmp
lock
sbb
shrl
cmp
rcll
jns
popa
push
push
inc
mov
or
orb
mov
or
sub
test
jne
xlat
loop
or
sbb
jp
ss
shrl
dec
dec
pop
ja
adc
roll
sti
sub
push
fbld
push
inc
sub
in
fistl
call
push
adc
jno
fs
sub
and
je
movsl
push
arpl
stos
mov
aam
jbe
or
pusha
inc
outsb
mov
hlt
dec
push
cwtl
call
hlt
ret
lret
xor
lock
call
mov
xchg
xlat
mov
jp
mov
xor
jne
mov
adc
mov
shlb
xchg
cmp
xor
sub
fiaddl
lret
aad
pop
pop
mov
sub
jmp
rcrl
shr
outsb
ja
mov
and
lret
gs
jbe
mov
or
lock
sbb
scas
lahf
inc
inc
enter
and
stos
nop
out
add
mov
sub
je
push
out
imul
pop
gs
bound
fldt
es
add
xchg
in
xor
inc
loope
and
fildl
fisttps
ret
jno
pushf
insb
dec
aaa
pop
and
push
mov
fisubrl
cld
mov
sub
jl
mov
xor
jb
fdivs
scas
sbb
addr16
inc
std
movsl
stos
inc
cmp
and
mov
xor
jae
mov
ja
int
or
mov
jo
pop
shrb
les
fwait
mov
jne
adc
sbbw
mov
jp
sub
test
fmull
dec
adc
mov
dec
cmp
cmp
jmp
inc
mov
mov
rolb
or
ds
push
mov
xchg
test
jg
and
push
xchg
nopl
cmp
jnp
imul
xor
inc
or
cltd
cs
xchg
dec
xlat
push
repnz
jge
fs
push
decb
or
fs
cwtl
in
dec
mov
pop
test
sub
pop
divl
mov
cmp
adc
int3
add
jns
fisubl
sub
fucom
push
je
jge
into
push
lock
pusha
or
addb
push
inc
outsb
adc
ret
cwtl
gs
jp
xor
inc
pop
add
pop
dec
cmp
lods
jmp
push
iret
mov
ljmp
push
jb
leave
scas
fldcw
mov
call
adc
icebp
clc
clc
sahf
arpl
movsb
push
in
sbb
jb
push
icebp
mov
aad
add
int3
xchg
mov
sbb
mov
add
jg
cli
sbb
cmp
mov
and
out
xchg
popa
data16
cwtl
push
push
movb
je
cmc
loopne
in
jne
xchg
mov
mov
in
xchg
mov
loopne
mov
mov
pop
pushf
mov
jge,pn
into
jp
or
enter
xchg
imul
mov
outsb
mov
das
psrlq
shll
ljmp
repnz
or
aas
shrb
stc
push
pop
and
lea
pusha
ja
ret
add
psrlw
dec
xchg
xor
lods
repnz
loope
jno
and
scas
xchg
fldt
repnz
hlt
xor
shll
mov
in
out
pop
clc
or
dec
cmpsb
push
push
cwtl
push
adc
scas
in
iret
loop
push
sbb
dec
mov
pop
inc
loopne
adcb
pop
pop
aas
shll
int
sub
cmp
scas
push
dec
xchg
inc
dec
imul
scas
jbe
mov
push
gs
pop
cmp
mov
xor
shrb
loop
fdivrs
push
fdivrs
jp
cltd
push
or
test
jmp
out
rcrb
adc
aas
out
mov
pop
and
sti
popf
insl
push
mov
mov
inc
jp
pop
jmp
jne
mov
fmul
sti
xchg
xchg
xchg
fs
aam
pop
or
pop
es
mov
jns
sub
orb
dec
ss
adc
jecxz,pt
popf
rolb
sbb
xor
int3
data16
movsb
pusha
push
lock
or
jg
push
orl
cltd
push
lahf
repnz
and
cli
js
mov
imul
adc
repnz
jb
fs
push
sub
test
sbb
mov
insb
sbb
int3
mov
push
push
outsl
aad
mov
scas
sar
xor
loop
imul
jne
xchg
sbb
outsb
lret
add
dec
push
lods
cmp
push
or
and
push
or
sti
and
xlat
sahf
pop
in
xchg
mov
cmp
cmp
rcrl
arpl
jle
adc
xor
push
push
int
dec
mov
outsl
mov
jge
cmpsb
mov
or
stc
cmp
dec
or
imul
inc
inc
or
scas
cmp
mov
xchg
mov
gs
mov
inc
stos
repz
inc
mov
or
cli
jo
and
cltd
sub
idivl
imul
sbb
cmp
imul
test
mov
sti
in
push
faddl
mov
push
insl
jecxz
rorb
add
inc
in
adc
lods
adc
lahf
dec
inc
jne
stc
mov
mov
scas
or
mov
lock
push
scas
mov
or
pop
imul
add
mov
daa
xor
mov
nop
les
xchg
dec
mov
rclb
lea
adc
das
inc
add
cmp
fmuls
scas
add
loop
stos
jl
push
aad
xor
jnp
stc
int3
cmp
push
daa
mov
xlat
jnp
push
and
dec
aas
pop
xor
jno
xor
xchg
aas
mov
or
xor
push
sub
jae
sub
out
ss
mov
adc
pop
clc
mov
jp
xchg
cli
mov
imul
lret
xor
xchg
jecxz
hlt
cmp
jae
sti
jbe
inc
test
mov
ss
sbb
dec
cmpl
push
push
cwtl
mov
push
sbb
sbb
repnz
mov
push
and
jmp
orl
cmpsl
lret
mov
pushf
sti
insl
loope
adcb
cli
imulb
insb
mov
gs
fcoms
push
jg
inc
pop
jmp
push
cs
inc
jp
inc
mov
imul
push
test
mov
in
xor
sub
cmp
mov
mov
stos
icebp
inc
cmp
dec
mov
daa
call
cli
mov
fs
scas
andb
push
cmp
sub
sbb
stos
test
cmp
inc
adc
fildl
insb
inc
in
movsb
pop
xor
mov
leave
pop
bound
jnp
add
push
add
lea
imul
xor
and
mov
hlt
sub
dec
push
std
wrmsr
or
loopne
ret
sub
cmp
movsb
dec
fisttpll
test
adc
inc
cmp
lds
int3
xchg
insl
cmp
loopne
jmp
push
inc
mov
fidivrs
mov
cltd
mov
aad
or
inc
jo
out
insb
jo
pop
push
je
imul
divl
popf
out
jb
loop
pop
fstp
add
or
sub
in
sbb
dec
dec
loopne
das
xor
pop
mul
sbb
testl
push
inc
test
pop
mov
mov
ljmp
shll
nop
repz
cwtl
sub
jnp
in
add
int3
jge
adc
xchg
xchg
dec
mov
jp
lret
enter
sub
add
aaa
lods
ss
or
xor
xorl
sub
lret
add
xchg
inc
pop
jle
jp
cmp
repnz
lahf
jge
je
adc
xchg
sub
ficoms
sbb
sarl
jnp
and
lcall
mov
mov
adc
mov
aas
movsb
jl
mov
scas
mulb
in
sbb
call
scas
sbb
int3
sub
cmp
add
cmpsb
rcll
jmp
sub
jmp
jmp
inc
in
ret
jmp
hlt
inc
jmp
push
jmp
adc
pop
je
div
lret
push
aaa
scas
out
mov
dec
test
lahf
xchg
sti
hlt
inc
adc
mov
jno
gs
pusha
outsb
sbb
rcrb
cmp
inc
xchg
nop
xor
lock
mov
cmp
jno
loope
scas
xchg
call
inc
imul
in
hlt
addr16
decb
insl
dec
xchg
iret
mov
fmull
loop
movsl
sbb
push
pop
call
pusha
inc
lcall
iret
aas
jge
pop
xor
js
cmp
stos
outsl
xor
jmp
push
jge
sahf
sbbl
cli
sbb
jnp
jmp
cmpsb
mov
inc
data16
call
jp
jbe
mov
xchg
ret
jae
jmp
and
std
lock
clc
or
arpl
mov
sub
dec
jl
inc
pop
cmpsb
ds
xchg
mov
mov
dec
dec
cmp
jbe
xchg
call
stos
mov
mov
mov
adc
rol
mov
pop
cmp
mov
or
mov
std
outsl
bound
jmp
shlb
sbb
imul
arpl
push
push
add
dec
mov
test
push
cmp
clc
sbb
push
repnz
and
sti
push
imul
das
adc
sahf
fnsave
lea
out
out
sbb
pop
lret
call
and
mov
test
mov
fsubs
push
sub
inc
fisttps
pop
dec
jg
test
add
mov
push
sahf
outsl
lock
stc
mov
jmp
ret
scas
xchg
scas
or
sbb
push
fs
adc
or
jae
or
fnstcw
call
das
mov
add
and
jnp
scas
cmpsb
push
pop
movsl
popf
push
mov
rcrb
out
das
lods
jg
out
push
mov
data16
nop
jae
add
or
je
cmpsb
fistps
fst
nop
xchg
enter
leave
pop
iret
push
out
dec
cltd
mov
movsb
int
pop
faddl
mov
add
out
lods
lods
jb
and
push
mov
pusha
lds
subb
sti
in
dec
loop
xchg
cmpsb
rolb
les
adc
loope
sub
nop
mov
xor
pop
js
aaa
and
lods
out
mov
popa
xchg
lock
sub
dec
aam
mov
push
fstps
out
add
movsl
scas
ret
xor
out
add
repz
mov
mov
adc
fwait
into
call
push
xchg
hlt
andl
stos
adc
push
andb
sub
pusha
xchg
movsl
out
aam
fimull
xchg
push
jle
data16
cli
sub
rolb
mov
aas
ss
cmc
xor
negb
lret
or
lret
mov
data16
push
mov
lahf
or
mov
mov
pop
mov
push
push
mov
test
lds
roll
leave
mov
mov
add
mov
pop
xor
or
stc
push
fcmovnu
popa
cltd
repz
inc
ds
xchg
or
jb
jg
std
mov
ds
pop
or
fwait
sbb
in
fxch
jne
dec
xor
pop
xchg
xor
mov
dec
sub
mov
imul
int
test
fwait
push
jp
inc
lcall
add
daa
enter
shl
dec
clc
jno
jno
loopne
push
js
out
mov
push
and
in
adc
mov
push
sbb
push
jmp
and
sub
hlt
enter
push
jo
sub
insb
push
fwait
jl
cmc
imul
js
push
cmp
push
xlat
outsl
std
add
into
and
loope
punpckhdq
int
icebp
sub
cmp
fstpt
inc
sbb
loopne
out
and
scas
stos
push
push
jmp
or
aaa
loope
mov
xchg
clc
xlat
and
outsl
lret
mov
xor
and
lret
xor
ret
dec
ret
mov
lods
jno
inc
es
lea
mov
or
cmp
cmp
push
pop
dec
cmpsl
sbb
mov
rcl
lahf
or
pop
xor
mulb
mov
adc
push
or
out
fs
mov
out
je
mov
ret
nop
cmc
jae
pop
fisubrs
imul
cmp
xchg
das
or
jne
mov
xor
in
das
rorl
mov
insb
sub
sbb
popl
mov
pusha
sti
outsb
jecxz
pop
cmp
test
leave
pop
inc
jge
pop
mov
inc
pusha
popf
xchg
mov
mov
cmpsl
and
lret
mov
xlat
imul
fidivl
add
outsb
or
incl
aaa
scas
cmpsb
xorb
sbb
mov
and
cmp
mov
popf
cmp
fadds
lods
or
push
and
outsl
adc
mov
xor
les
cmp
jbe
mov
mov
mov
pop
mov
ja
mov
das
mov
fbld
out
lret
data16
adcl
sbb
cmc
xor
add
cmp
xchg
adc
sub
pop
jmp
inc
dec
sbb
sti
movb
out
xor
lea
mov
jo
pop
ficoml
idivl
fstpl
and
lock
mov
fisubrl
jb
pop
xor
scas
mov
sbb
subb
pop
iret
call
gs
cli
cli
inc
dec
in
ret
sub
dec
dec
dec
stos
xchg
mov
icebp
jle
mov
jg
or
push
mov
push
popa
in
pop
scas
xchg
loopne
adc
mov
add
sub
pop
stc
jge
incl
addb
sbb
jecxz
jp
sub
int3
imul
push
adc
inc
pop
jle
inc
inc
adc
in
sub
pop
aam
fcomp
loop
idiv
cmp
stos
sub
clc
and
adc
mov
sub
rolb
clc
nop
in
add
lret
sub
gs
pop
cmpb
ret
out
jle
sub
mov
sarl
addr16
outsb
call
call
xor
ja
test
adc
lods
shlb
repz
ret
jns
dec
pop
push
enter
sbb
adc
push
scas
mov
inc
xor
xor
nop
scas
sub
jecxz
push
adc
cmp
or
je
and
xchg
push
jl
mov
subb
leave
add
xor
mov
andb
aam
in
cmp
in
repz
xchg
fstpt
ret
sub
pop
sahf
call
es
jecxz
popf
lock
inc
sbb
loope
mov
adc
loope
stos
gs
adc
inc
push
xchg
stos
ficoml
push
rol
cwtl
xor
shrb
xor
push
pop
xchg
lret
add
push
imul
test
aas
cld
jecxz
push
dec
loope
fwait
lahf
aam
mov
ss
mov
adcb
xor
sub
xor
cltd
lods
and
jae
out
mov
cmp
cmp
popf
push
and
ljmp
cmp
das
es
push
jae
and
pop
xchg
jp
pop
and
jns
test
stos
add
test
not
and
das
pop
daa
clc
jge
mov
lret
inc
fisubl
clc
dec
arpl
dec
pop
cli
mov
iret
fwait
jb
pop
sub
or
jno
cmpl
iret
mov
sub
mov
lock
leavew
mov
ret
pop
ror
dec
orb
jb
mov
cmp
jle
cs
lret
jno
fiaddl
ror
xchg
pop
xchg
adc
idivl
les
push
pop
ret
dec
and
inc
shl
jecxz
sub
addr16
or
lods
push
lret
mov
shrb
sub
pop
in
popf
cmp
mov
jge
in
add
pop
xchg
loope
push
cmp
mov
jnp
pop
push
lock
mull
jno
jbe
mov
sbb
jl
sbb
je
addb
xor
xor
inc
pop
in
push
adc
cld
lods
dec
push
mov
mov
cmp
pop
stc
in
mov
mov
inc
dec
adc
fildl
sbb
adc
rorb
dec
insb
fisubs
adc
lahf
sbb
cmpb
out
push
repz
and
adc
dec
sbb
mov
and
xchg
fstl
push
jge
cmp
dec
sti
jle
add
and
stos
cmp
test
jmp
jbe
inc
inc
adc
fidivrl
inc
xchg
push
sahf
push
shlb
mov
mov
add
and
mov
dec
pop
mov
jmp
and
xor
sbb
dec
or
iret
jo
mov
cltd
push
xchg
jmp
adcl
je
add
ds
xchg
shrb
xchg
imul
int
fnstenv
out
inc
jge
fs
mov
negl
pop
push
lods
aas
lea
insl
or
and
sbb
mov
xchg
cld
and
add
aas
mov
lods
cmp
dec
add
xor
pop
lea
add
or
ss
mov
aas
sbb
rcr
inc
and
adc
mov
or
add
push
inc
cli
lods
mov
mov
mov
js
bound
and
pop
out
inc
mov
std
je
cmp
cmp
push
lea
repnz
scas
pop
pop
cmp
fsubrs
clc
or
push
mov
ss
inc
aam
outsb
gs
sub
mov
jo
mov
mov
jle
xor
sbb
mov
das
stc
xchg
clc
imul
push
lods
cltd
arpl
in
xor
push
push
inc
out
das
mov
aam
vmovupd
cmp
add
je
outsl
mov
test
mov
xchg
inc
cld
sti
loop
push
jo
mov
and
push
ffree
fldt
push
call
sbb
nop
shl
sbb
cmp
and
add
mov
and
lcall
xorb
xorb
mov
or
js
icebp
fs
sahf
out
cli
fnstsw
push
xor
lods
sbb
xor
add
dec
jp
xchg
iret
rcrl
jle
lret
ret
sbb
out
mov
and
shrb
les
aas
cmp
xchg
out
imul
mov
sbb
sbb
xchg
inc
jge
loope
out
scas
lods
jne
jbe
imul
dec
xor
popa
mov
and
not
addr16
test
jmp
pop
aaa
jo
les
pop
add
cmp
pop
inc
cmp
loope
arpl
shrl
xchg
stos
cmc
movsl
add
imul
out
and
cmp
dec
scas
pop
mov
inc
ljmp
stos
push
cmp
or
jnp
add
jno
cltd
clc
sbb
in
lea
jmp
push
jo
pop
xchg
mov
cwtl
and
ficomps
mov
lret
mov
pop
cmp
out
dec
jecxz
cmp
rclb
insb
int
out
sub
jle
aam
sbb
lcall
pop
cwtl
mov
fdivl
mov
cmpb
push
add
xchg
cmp
xchg
push
xor
data16
daa
dec
push
sti
add
xlat
roll
loop
pop
in
fs
int3
mov
cmp
jb
xchg
cmp
out
aad
push
xor
adc
adc
imul
push
pop
fisttpl
push
jg
rcrl
je
inc
rcrl
daa
and
pop
rolb
push
sahf
mov
xor
lea
mov
lock
es
dec
mov
fwait
in
ror
gs
inc
and
push
and
jnp
sbb
aad
repz
dec
mov
out
xchg
out
outsb
in
mov
mov
mov
inc
aam
loopne
movsb
adc
push
mov
jns
movsb
sbb
cmc
enter
sbb
jb
imul
jge
jmp
push
movsl
dec
xchg
test
cmp
jmp
xlat
sti
ret
jnp
xor
adc
popa
bound
mov
lret
fsubrl
loop
mov
sub
or
hlt
addr16
clc
xchg
cltd
push
cmpsb
stc
fimuls
aam
out
lods
sbb
cmc
out
and
bound
hlt
pop
lds
dec
and
cmp
add
sbb
mov
cmp
outsb
add
and
pusha
jnp
dec
xchg
push
les
sbb
negb
repnz
jmp
orb
repz
mov
in
xor
lea
pop
mov
lds
jmp
stos
pusha
xchg
sar
mov
jno
imul
shll
dec
or
cmp
push
push
sub
setl
cmp
mov
fcmove
adc
pop
xchg
popf
mov
enter
test
mov
cmpl
bnd
movsl
cmp
xchg
call
outsl
mov
add
subb
vmwrite
mov
icebp
shll
movb
xchg
std
out
dec
or
cwtl
idivl
int3
rcrb
aam
fs
push
pop
aam
or
jbe
hlt
jbe
lret
xchg
iret
pop
lcall
nop
sub
popa
popf
push
sbb
mov
add
hlt
cmp
xchg
iret
adc
out
xchg
mov
je
pop
or
jns
add
sub
mov
add
or
movsl
xchg
mov
mov
repz
add
cmp
in
cmpsb
movsb
in
loop
cmp
jmp
xchg
test
sahf
add
hlt
dec
inc
jns
orb
outsl
sbb
cltd
fcmovnb
inc
sub
repz
mov
lahf
nop
les
inc
pusha
bound
or
jecxz
imul
aaa
pop
lea
fbld
std
addr16
lods
mov
rcrl
adc
loop
pop
in
sub
dec
adc
cmp
pop
fldt
rsm
sahf
fisttpl
dec
jno
push
enter
sahf
cmc
cli
mov
cmp
test
mov
xchg
xor
jmp
jle
cmp
xor
mov
adc
movsl
push
xchg
aam
clc
or
sbb
test
aad
lret
loop
sub
lock
pop
xor
sbb
imul
out
jo
scas
cmp
imul
lock
adc
movsb
mov
pop
jmp
in
je
mov
ss
cmpsb
bound
push
mov
mov
test
add
ret
sti
repz
or
mov
daa
jp
sbb
sbb
mov
sub
in
and
mov
fstps
rclb
int3
sub
movsb
subb
imul
jle
xchg
popa
mov
pop
inc
fsubl
daa
xor
sub
add
add
int3
data16
rcrl
sub
xor
sbb
sbb
lea
gs
ss
lret
stc
inc
adc
mov
aas
push
push
lea
popa
out
scas
or
stos
cmp
imul
test
das
and
fnstcw
cwtl
xchg
outsl
stos
loope
inc
add
orl
lret
cltd
sbb
icebp
nop
pop
daa
xchg
inc
imul
std
xchg
mov
xor
push
mov
mov
jecxz
add
sub
pop
pop
ss
sbb
inc
pop
mov
repz
ljmp
cmp
push
mov
pop
pop
loop
mov
outsl
mov
push
jnp
lret
sti
fiaddl
cwtl
jmp
jbe
push
addr16
inc
jl
loope
mov
lcall
adc
adc
fwait
xor
nop
arpl
pop
add
push
lret
push
fimull
xchg
xchg
adc
xchg
jae
xor
inc
adc
js
neg
mov
sbb
cmp
sub
cs
push
push
pop
push
push
and
push
jns
dec
test
dec
fs
mov
subl
dec
cmp
cmc
cmp
xchg
mov
cmpsb
push
or
leave
insl
pop
push
icebp
out
mov
call
mov
cs
inc
sub
xchg
stos
lret
std
push
repz
fnstsw
xor
leave
jmp
add
jecxz
sbb
push
aas
pop
or
es
jb
sbb
sbb
ret
leave
iret
or
imul
jl
movsl
inc
inc
fisubrs
cltd
sub
div
jmp
ljmp
push
sahf
add
inc
xchg
mov
dec
jns
sti
dec
repz
mov
out
lds
cmpsb
mov
and
jle
sti
mull
ret
js
test
frstor
sub
sarb
jb
mov
sbb
iret
pop
mov
rcll
inc
lret
and
or
dec
mov
mov
mov
mov
std
daa
mov
dec
fcomp
ds
add
push
lods
inc
icebp
push
or
push
cmpsb
sbb
or
adc
mov
cmp
xor
xchg
cmp
adc
rcr
or
dec
nop
xor
aad
aas
adc
cwtl
xchg
iret
loopne
aas
mov
sbb
mov
pop
fstpt
rorl
punpckhbw
dec
jnp
pop
push
mov
adc
shlb
pop
mov
test
fsub
test
jo
or
mov
inc
xor
and
ljmp
inc
add
push
cld
les
jo
cmp
mov
fimuls
scas
das
cld
xchg
xor
adc
cwtl
mov
mov
jl
leave
sub
fidivrs
nop
mov
sub
jb
pushf
or
push
xor
sbb
lret
ljmp
mov
add
pop
push
add
pop
fisubrs
and
popa
xchg
push
jle
or
pop
jecxz
adc
ret
int
add
aaa
mov
push
jge
cmc
xchg
fwait
jns
or
in
cmpsl
repnz
xchg
cwtl
pop
call
aad
mulb
hlt
jbe
push
dec
imul
mov
mov
cmpsb
pushl
arpl
pop
cld
fistpll
fwait
icebp
loop
cmp
inc
lea
inc
pop
mov
and
sub
aas
fldenv
rolb
jl
mov
lret
xchg
mov
icebp
imul
mov
movsb
push
repnz
out
xchg
mov
cmp
mov
aaa
cmpb
daa
sahf
xchg
sub
add
mov
shlb
dec
xchg
mov
lods
cmp
ret
icebp
lock
lret
movsl
fcoml
ja
add
adc
in
mov
shr
stos
hlt
ds
aam
cmp
add
bound
aam
pushf
addr16
jns
sub
inc
xor
fcoms
in
test
imul
xchg
add
jl
movsb
mov
and
sti
xchg
push
mov
hlt
bound
les
push
mov
xchg
daa
cwtl
pop
out
mov
pusha
pop
pop
in
sbb
inc
sub
adc
ds
pop
push
loopne
jnp
cmp
std
imul
rcl
int3
lahf
cli
mov
add
pop
jg
lods
add
jle
adc
xlat
sbb
push
lds
pop
jns
fsubrl
sbb
jecxz
fistps
cmp
arpl
adc
mov
xor
lretw
nop
push
jo
xchg
iret
push
loope
pop
jecxz
js
arpl
jmp
push
jge
sub
xchg
dec
adc
lahf
daa
push
push
sub
or
je
cld
mov
sbb
mov
call
and
rolb
imul
mov
dec
mov
fmul
sub
ja
inc
jmp
mov
adc
icebp
xor
and
cmpsl
push
push
jno
jle
xor
loope
cmp
mov
mov
pop
inc
sti
mov
sub
mov
xchg
dec
arpl
inc
xchg
push
mov
push
cmc
pop
push
loopne
jbe
stos
push
into
test
xchg
sahf
jo
fcmovnbe
rcrb
pop
sub
cmp
cmp
imul
mov
cmp
sahf
jnp
sub
push
jecxz
push
sub
dec
add
and
and
push
push
xchg
mov
ss
mov
call
and
add
xorl
pop
xor
movsl
ljmp
mov
icebp
mov
jmp
scas
xor
push
popf
lret
icebp
popf
stos
inc
popa
dec
add
sub
mov
test
pop
int
fucom
fiaddl
jbe
xchg
mov
outsl
stc
jmp
in
in
pop
fisubl
loopne
push
divl
or
mov
inc
in
sub
addb
pop
or
cmp
pop
sbb
inc
xlat
shlb
xchg
in
lods
movsl
out
subb
movsb
cs
mov
repz
imul
xor
and
stos
loop,pn
ds
call
pop
pop
inc
rcrb
and
sub
xor
mov
sahf
mov
mov
pop
aas
pop
xor
fs
inc
cmpsl
push
stc
add
mov
sbb
push
testb
fcomp
sbb
cmp
and
pop
jmp
scas
dec
out
repz
jg
xor
lret
or
xchg
mov
add
fwait
cs
lea
fildll
dec
xchg
ror
jl
add
dec
fnstenv
nop
pop
add
mov
test
lahf
and
add
fildll
inc
xorb
loope
mov
loopne
add
jp
or
jp
jecxz
pop
inc
loop
lcall
ret
fwait
xchg
pop
pop
sub
mov
pop
jle
mov
add
ss
jle
addb
outsl
inc
adc
lret
dec
aam
push
cltd
inc
pop
and
dec
xlat
pushf
lret
inc
pop
lock
in
or
sbb
pop
mov
push
out
xor
xor
jno
mov
fmulp
hlt
adc
shlb
clc
xor
test
sub
dec
mov
cmc
dec
insl
cmp
jb
int
leave
jl
stc
pop
jne
std
ret
inc
xor
or
stc
shrl
mov
pop
dec
movsb
and
jae
sbb
inc
sbb
loope
roll
ja
out
or
lods
adc
pop
insl
cmp
inc
movsb
and
loope
adc
enter
mov
inc
cs
sub
cmpsl
xor
fwait
xchg
sti
sbb
hlt
in
icebp
lcall
data16
gs
dec
out
inc
mov
stos
push
xor
das
mov
push
and
push
push
or
lcall
scas
jne
jae
jo
loop
jl
ja
push
insl
in
xlat
xchg
adc
testl
aam
lretw
mov
dec
outsl
sbb
jecxz
pop
div
lock
xchg
sahf
mov
jno
mov
les
out
test
ja
push
lret
pop
and
mov
pop
mov
xlat
pop
cwtl
or
mov
imul
mov
cmp
pop
xchg
xorl
out
addb
add
mov
dec
adc
xor
cld
dec
dec
sbb
dec
mov
and
jo
out
jg
push
mov
lret
es
insb
jbe
adc
pop
aaa
dec
js
rorl
pop
out
rolb
and
bound
push
pushf
roll
mov
sarb
xchg
push
pop
cmp
sbb
cli
shlb
ret
sbbb
push
imul
test
ret
lds
or
aas
scas
ds
cwtl
jb
push
stc
pop
sti
in
jmp
mov
ds
jb
je
in
shll
and
sbb
fwait
clc
loopne
addl
inc
cs
fadds
jp
into
mov
add
aam
enter
cmp
lds
jb
push
test
mov
fchs
jnp
cmp
sbb
xchg
les
add
and
cltd
mull
dec
xor
add
ljmp
mov
dec
push
sub
jne
andl
and
jne
loop
push
scas
push
roll
cmpsb
imul
sub
ja
xchg
mov
loope
popf
je
and
push
inc
mov
sar
frstor
adc
push
push
sbb
dec
push
xchg
loop
or
or
test
pop
and
clc
sub
mov
shlb
je
xlat
dec
lret
mov
insb
jo
mov
xchg
pop
dec
cli
dec
dec
cmp
int3
lea
sub
fimull
insb
push
add
and
xchg
loop
inc
inc
cli
sbb
mov
dec
mov
adc
fistl
xor
shlb
jnp
jmp
jl
pop
mulb
mov
aas
adc
movsb
inc
arpl
pop
and
cld
sub
push
xchg
cmp
stos
adc
add
andb
push
pop
aad
push
jecxz
movb
dec
inc
xchg
mov
cmp
mov
jae
jp
loope
in
jbe
cwtl
outsl
ljmp
icebp
push
into
xchg
sub
mov
push
ljmp
negl
mov
adc
andl
int3
xor
add
rep
jo
jp
pusha
mov
add
aad
popa
je
fstpt
lds
xchg
mov
push
jne
fmuls
lcall
iret
add
lods
jmp
iret
adc
cmpsb
mov
std
sbb
jno
jnp
popa
clc
cltd
push
sub
repnz
sbb
sti
xor
mov
cmpsb
sbbb
mov
int
fistl
out
sub
cmpsb
mov
mov
mov
imul
push
std
dec
cmp
clc
adc
dec
dec
sub
push
dec
in
mov
dec
fcoml
int
fwait
stos
inc
mov
repz
rolb
repnz
mov
pushf
inc
adc
rclb
cwtl
in
shll
fwait
push
add
cltd
popf
ficomps
mov
repz
leave
push
scas
and
pop
ret
xlat
mov
pop
fstl
clc
js
cwtl
fdivs
jp
into
mov
push
xchg
add
or
mov
mov
test
bound
loop
pushl
push
adc
adc
mov
imul
jb
mov
cwtl
stos
mov
xor
cmpsl
adc
dec
popa
mov
sbb
push
cmpsl
rep
arpl
js
rcrb
stos
add
test
call
fidivl
mulb
jl
popf
push
xorl
imul
pushf
ds
dec
repz
ja
js
pushf
sahf
fbld
adc
xchg
std
mov
xorl
popa
sbb
cltd
and
insb
fimuls
xchg
cwtl
rcrb
jecxz
js
push
sub
adc
jl
loop
jae
jg
leave
mov
jns
add
rorl
popf
sub
mov
test
ss
sub
movsl
xlat
xchg
dec
testb
loopne
shrl
and
in
rolb
je
fimull
xor
stos
out
imul
insb
cmp
pushf
xchg
jae
fistpll
pop
mov
adcb
inc
xlat
into
push
mov
inc
in
lahf
int
stc
bound
stos
jae
and
dec
add
popa
sbb
xor
mov
in
fdivr
cwtl
xor
mov
fldcw
mov
inc
xlat
scas
icebp
jge
add
fcomps
sbb
sub
mov
idivb
imull
mov
mov
rclb
pop
inc
lds
mov
lea
nop
xor
test
imul
rorb
dec
mov
xchg
sub
shll
cmp
loope
adc
jle
fwait
inc
icebp
sbb
push
jl
pop
dec
pop
inc
shrl
adc
sbb
push
hlt
fimuls
pushf
push
lahf
add
fwait
ja
insb
aad
inc
sti
dec
dec
adc
sbb
das
leave
repz
test
stc
lods
aam
cli
cs
popf
or
push
jmp
jns
lcall
andl
pop
inc
push
lock
xor
lods
flds
enter
lds
pop
loopne
xor
dec
int
inc
adcl
stos
add
and
adc
std
adc
and
or
inc
cmpsb
pop
std
aas
pop
lahf
push
pop
pop
mov
add
sbb
dec
mov
mov
mov
jle
jns
repnz
pop
and
loopne
and
xor
loope
mov
jge,pn
in
sarb
dec
mov
test
lret
cmp
addr16
adc
mov
leave
aas
sbb
dec
movsb
xchg
lahf
or
in
cmp
rorb
inc
mov
fists
jno
scas
pop
test
mov
mulb
pop
xor
xchg
push
mov
xchg
jae
loop
pop
outsl
test
loop
push
and
mov
pop
out
clc
xchg
lods
add
mov
push
rorl
adc
xchg
jge
add
mov
xchg
cltd
xlat
sub
out
sahf
mov
jg
jl
jb
and
and
inc
jne
and
push
jno
loop
jns
int3
xchg
xor
test
pop
inc
sub
xchg
mov
xor
loop
rorl
pop
lock
cli
test
pop
or
mov
xor
sbb
pop
jg
mov
aad
out
cwtl
mov
das
dec
push
mov
push
les
movsb
enter
roll
add
sarl
dec
push
hlt
or
hlt
jle
push
hlt
inc
cmp
dec
stos
push
jl
pop
in
mov
jmp
in
fcoms
out
adc
imul
cmp
adc
add
mov
mov
xchg
add
js
xchg
out
dec
fs
mov
sub
lahf
or
cli
in
xor
pop
or
dec
fwait
lods
sbb
or
in
js
fs
mov
shrb
arpl
movsl
or
add
xor
scas
add
push
cmp
adc
inc
xchg
aam
cmc
push
loop
les
pop
leave
mov
pop
sbb
les
aad
jo
cmp
and
ds
faddl
pop
cmp
adc
adc
imul
cmp
filds
addl
out
xchg
mov
add
enter
mov
add
lcall
ja
aam
lock
sub
mov
push
inc
mov
cmp
lods
mov
repnz
shrl
push
dec
pushf
ds
pushl
je
pop
jle
push
mov
ret
sub
repz
imul
xchg
popa
inc
and
or
mov
or
adc
movsbl
addr16
cwtl
sub
iret
dec
and
mov
adc
movsb
ds
out
div
or
cmp
sub
jae
jnp
dec
and
test
mov
adc
push
mov
adc
cmp
dec
mov
adc
fistpll
scas
and
sub
push
outsl
xor
push
sub
jnp
and
sub
or
push
jb
psraw
add
iret
hlt
dec
decl
sbb
mov
push
cmp
jle
int
cmp
test
scas
and
lahf
fs
push
loopne
and
push
je
loop
and
cmp
push
inc
daa
dec
jl
ja
adc
inc
mov
push
les
cmpsl
std
pop
in
sti
call
push
add
les
inc
cmpsl
pop
xor
shlb
mov
fwait
sbb
call
lock
push
jo
push
clc
mov
fdivrl
jb
imul
and
push
jl
cmp
jo
mov
inc
mov
sti
mov
push
jno
dec
mov
jns
xchg
mov
adc
neg
iret
sahf
xchg
pop
adc
xchg
test
jp
sti
sub
xchg
shll
rorb
repnz
push
arpl
jae
lret
cmpsl
test
xchg
or
mov
lcall
sbb
cli
call
jge
fstpt
sub
mov
lds
xchg
cmpsl
out
mov
sti
notb
jecxz
push
dec
fadds
xor
pop
int3
stos
xor
dec
loop
mov
js
dec
imul
jb
inc
les
mov
pop
xchg
cs
cmp
mov
in
cmp
test
inc
inc
mov
jp
push
dec
clc
addr16
imul
loopne
popf
or
sbbl
jle
and
add
insb
cwtl
inc
or
jmp
push
xchg
mov
push
scas
movsb
js
imul
jbe
cmp
imul
inc
jle
push
jae
dec
test
in
push
cmpsl
stos
cmpsl
in
xchg
inc
cmp
and
std
repz
cmp
arpl
pop
push
dec
movsl
clc
jno
out
mov
test
xchg
stos
and
aas
es
nop
sbb
sub
std
mov
aaa
lret
or
mov
mov
mov
shl
pop
mov
leave
inc
xchg
iret
out
push
in
inc
aas
enter
aad
jno
xchg
pop
jecxz
jp
leave
and
jnp
xor
dec
push
subb
fists
das
pop
scas
fisttps
pop
addr16
lahf
xchg
push
add
lahf
jbe
push
orb
in
dec
jnp
dec
xor
mov
cmp
jp
clc
arpl
xor
in
mov
shl
stc
push
lea
xor
mov
call
into
movsb
push
loopne
sbb
xchg
push
mov
pop
xchg
es
mov
in
push
fs
mov
iret
cmp
lods
push
lret
inc
inc
mov
imul
cmc
cmp
push
in
cmp
cmpsb
icebp
pop
ds
push
fdivl
mov
adc
push
xchg
lock
ret
jmp
stc
xor
xor
sarl
mov
out
imul
test
rclb
dec
int
inc
adc
into
popa
in
fisubl
jb
inc
frstor
ja
inc
insl
aas
das
repz
divb
add
add
je
push
push
jecxz
lea
stos
add
pop
push
popa
sub
mov
cmp
aaa
stc
mov
loopne
mov
adc
les
xor
dec
pop
and
leave
aas
popa
inc
aam
fcomip
int3
rorl
fnsave
jae
enter
pusha
mov
cmpsb
stos
mov
je
inc
ja
push
fucom
mov
repz
leave
jmp
jg
in
scas
mov
sbb
push
addb
test
or
repz
sahf
push
xor
movb
mov
cli
repnz
call
das
test
adc
mov
in
or
repnz
out
jno
in
xlat
sub
cmp
xchg
ss
and
fwait
lds
cmp
cmp
and
outsl
leave
cmp
adc
pop
pop
mov
fstl
push
fsubs
sub
inc
sahf
mov
sub
mov
scas
fisubrs
mov
aam
cli
sahf
lods
push
push
jmp
adc
pop
dec
mov
xchg
out
add
mov
pop
mov
lcall
lods
stc
dec
iret
lret
push
pop
ret
inc
or
mov
xchg
rcll
fcomps
dec
mov
mov
jg
in
outsl
outsb
ret
out
fisubs
push
pusha
mov
xchg
pushf
cmc
mov
gs
pop
mov
mov
add
repz
mov
scas
push
int3
ljmp
pop
add
lcall
scas
push
mov
or
mov
jns
or
jge
xchg
mov
mov
pop
or
or
and
arpl
lahf
xlat
inc
mov
mov
jl
sbb
aam
in
xchg
xchg
rcll
iret
dec
test
jmp
test
add
notw
nop
fdivl
lcall
sbb
mov
in
push
daa
xchg
cmc
mov
sbb
lds
stos
jge
enter
cwtl
push
negb
jle
fs
mov
fs
and
xchg
inc
push
xor
xchg
roll
inc
sub
add
stc
rcrl
ret
movsb
shll
inc
push
test
add
fucomi
imul
mov
or
xlat
lret
lock
xor
mov
xor
add
sub
mov
stos
xchg
xor
add
inc
jae
mov
or
jmp
int3
mov
cltd
sub
mov
js
xchg
nop
xor
cmpsl
cmp
nop
incl
adc
call
cmp
je
stos
sysexit
pusha
inc
cmpsb
pop
pop
add
addr16
dec
frstor
pop
jne
outsl
adc
lods
test
add
addr16
pop
cmp
lods
aad
add
mov
fdivl
xchg
and
sbb
icebp
push
mov
aam
enter
sub
push
push
pop
sub
jmp
sbbb
callw
lcall
shl
or
jecxz
add
ret
sub
xchg
test
xor
cmp
icebp
adc
daa
sub
pushf
push
jp
xchg
bt
push
inc
or
mov
push
nop
dec
cmp
sbb
lock
xchg
stos
loope
test
jae
pop
inc
pushf
cmpsl
xchg
push
cltd
popa
int3
jg
dec
or
stos
outsb
sbb
stc
hlt
sbb
dec
cltd
cmpsb
push
popf
call
jb
or
in
sarl
pop
mov
test
push
xor
mov
dec
test
mov
fstpt
dec
cvtps2pi
fiaddl
cltd
sub
mov
sbb
and
xor
inc
fsubl
pop
mov
mov
jmp
shlb
call
and
aam
or
jnp
sub
mov
xor
inc
cli
aas
shll
stos
xorl
jne
sbb
enter
sub
daa
push
mov
cmp
push
insb
dec
adcb
mov
xchg
add
sub
push
inc
in
mov
jle
or
call
hlt
aad
mov
xchg
lds
jecxz
mov
push
inc
and
ds
inc
rorb
inc
inc
mov
sbb
xchg
cmc
in
push
arpl
jecxz
jge
xor
mov
xchg
clc
in
shrb
dec
sub
xor
imul
outsl
test
pop
cmp
sub
push
mov
mov
jle
push
add
sahf
mov
stc
adc
insl
dec
sbb
cmpsb
pop
sub
dec
cli
and
movsb
imull
setbe
sub
pop
inc
and
mov
addr16
jbe
int
sti
in
and
cmp
shll
daa
add
xor
inc
cmpsb
enter
adc
inc
sbb
aaa
xchg
jle
cmpsb
std
das
mov
out
dec
fisttps
loope
leave
cmpsb
into
mov
leave
inc
divb
and
or
mov
sub
mov
sahf
jno
clc
dec
inc
and
xor
mov
mov
sub
test
in
scas
push
jecxz
push
jbe
ljmp
dec
insb
repnz
inc
lahf
mov
jmp
and
or
pop
mov
xor
and
and
mov
clc
cld
cmp
in
pop
fsubrl
daa
aad
scas
in
ja
jae
dec
push
ret
xor
adc
mov
jae
pop
mov
int3
std
sbb
loope
xor
add
aam
jns
popf
test
add
jnp
std
xchg
subb
dec
addb
pop
ret
sahf
sbb
out
call
sti
cwtl
cmp
sbb
aaa
sbb
sbb
mov
arpl
xchg
jbe
xor
aaa
test
dec
mov
adc
dec
jns
push
fcmovnb
loop
movsl
push
pop
in
push
inc
in
xchg
les
xor
mov
mov
enter
loope
sbb
pop
mov
mov
daa
sub
das
dec
bound
pop
jg
loopne
sbb
sahf
jmp
lds
cs
cwtl
call
test
mov
jl
ret
cmpl
cmp
mov
jns
sub
imulb
js
cmp
cmpb
adc
mov
and
movsb
lret
arpl
lcall
imul
mov
nop
inc
cld
xchg
leave
aas
push
stc
add
pop
outsl
or
push
pushl
sub
adc
mov
jle
filds
xor
pop
shrb
mov
add
pop
push
xchg
aaa
pop
and
int3
cwtl
sbb
mov
add
inc
orl
rcr
repnz
jg
outsl
int3
or
jl
fists
add
test
lahf
lret
fstl
das
or
jp
iret
dec
popa
dec
test
add
sbb
push
mov
xchg
ret
shlb
ret
and
mov
shl
out
mov
mov
and
mul
gs
int
iret
mov
push
sub
inc
push
or
lock
and
pushf
jg
popa
dec
xlat
nop
enter
dec
aas
xor
jnp
jns
xchg
push
mov
aam
stos
cmp
ret
fdivrl
sar
sti
pop
pop
mov
popf
aam
add
sbb
ret
push
int
cmp
sahf
in
xchg
mov
test
addr16
jge
ljmp
pop
or
pop
dec
push
popa
lea
cmpsb
mov
mov
jae
aaa
sbb
repnz
data16
push
add
push
daa
jne
mov
sub
and
call
call
sbb
xor
ss
fbld
jmp
mov
divl
adc
les
jno
jle
inc
pop
push
fdiv
inc
mov
enter
pushf
cltd
pop
inc
inc
pop
lods
pop
inc
mov
jmp
psrad
mov
addr16
lods
ret
sub
iret
add
xchg
repnz
mov
cwtl
and
mov
lds
inc
jge
scas
xchg
repnz
inc
jno
adc
jbe
sub
jp
outsl
mov
and
outsb
aaa
push
cmp
je
mov
pop
data16
orb
pop
xor
lds
arpl
pop
and
shlb
or
push
jo
add
in
xor
mov
push
jns
xchg
in
sub
nop
mov
ss
repnz
xor
dec
in
mov
insl
add
lds
aas
lods
inc
and
into
pop
mov
pop
jge
mov
jmp
lods
adc
icebp
adc
outsl
pop
xchg
int
dec
cmp
inc
pop
sbb
sub
dec
xchg
jnp
call
test
inc
hlt
jg
mov
mov
dec
mov
ds
stos
add
repz
xor
rcr
sbb
dec
imul
xchg
popf
pop
push
push
js
sti
ss
sub
movsb
xchg
enter
sbb
dec
loope
jae
push
xorl
pop
xchg
mov
bound
and
xchg
dec
xchg
dec
dec
dec
pop
stos
xrelease
inc
xor
add
jmp
popa
sub
xor
pop
fs
jge
movsl
push
test
ljmp
cmp
adc
pop
jecxz
pop
add
cld
sahf
add
push
outsb
jl
icebp
int
xor
mov
and
loopne
push
cmp
and
cmp
ja
out
dec
cmc
xor
in
push
fcmovu
xor
cmp
mov
fadd
sbb
jns
jge
or
jo
dec
jno
cs
mov
adc
int
fcmovnb
inc
lock
xchg
shr
in
ret
jns
xorb
out
stc
add
lds
xlat
insl
or
imul
imul
xchg
cmc
mov
enter
and
pop
leave
stos
sub
add
loop
and
notl
jl
inc
cmp
or
adc
les
pop
daa
jno
fwait
lcall
push
pop
das
insb
mov
jno
sbb
dec
jb
add
test
shufps
pop
fldt
jecxz
arpl
xor
addb
cld
pop
ljmp
icebp
push
imul
mov
fiaddl
pop
mov
mov
pusha
cmp
hlt
dec
popf
mov
pop
inc
fwait
pop
add
cs
test
xchg
inc
or
aaa
xor
mov
enter
call
outsl
prefetcht1
call
push
fld
xchg
dec
or
xchg
cmpsl
dec
sahf
adc
clc
inc
jbe
movsb
cmp
rol
sbb
pop
aaa
mov
out
adc
mov
xor
aas
jns
sub
jae
pushf
out
sbb
dec
adc
or
inc
push
inc
push
idiv
dec
aas
lret
jb
arpl
jle
lods
adc
push
icebp
add
mov
xor
xor
or
repnz
notl
mov
dec
stc
mov
gs
shr
std
push
mov
rol
f2xm1
in
push
jmp
rcll
outsb
mov
cld
push
lahf
cmp
ja
aam
xor
or
imul
push
adc
leave
add
xchg
and
ds
dec
add
mov
imul
pusha
add
fmuls
movsb
mov
mov
mov
pop
test
pop
pop
test
in
sahf
xchg
addr16
subb
sbb
or
mov
pop
sub
add
bnd
stos
shrb
lahf
popf
enter
or
xchg
pusha
imul
into
mov
stc
lea
repz
mov
or
popl
lahf
xchg
scas
shll
pop
pushf
enter
div
enter
sbb
in
scas
pop
jge
ret
outsl
movsl
inc
inc
rolb
and
popl
or
mov
dec
lahf
shrb
int3
repz
and
inc
push
out
lock
sub
cmpsl
push
sub
pop
insb
outsb
push
push
data16
lret
sbb
add
add
adc
out
in
icebp
cwtl
xor
cmp
scas
addr16
or
ja
lods
inc
out
orb
mov
lahf
icebp
xor
lcall
test
pushf
and
xchg
mov
sub
push
jecxz
cli
pop
nop
int3
push
push
sbb
lock
mov
jno
jb
imul
jl
inc
mov
int
xor
aad
es
testl
mov
test
scas
lret
and
decl
jl
dec
push
stc
jns
int
nop
fnstsw
sti
push
jno
add
cmp
repz
xchg
cld
jl
xchg
jl
notl
aas
sbb
test
rorb
push
push
imul
es
roll
adc
ret
push
cmp
sbb
dec
rcll
movsb
mov
push
adc
ljmp
gs
mov
loop
fneni(8087
dec
dec
les
inc
pop
inc
jb
nop
sarl
fdivrs
rcrb
movsb
pop
sti
nop
fs
jo
mov
out
int
mov
fstp
jo
pop
or
inc
jmp
sti
nop
xlat
std
pop
idivl
lahf
jge
adcb
dec
cmp
out
ss
push
pop
lods
mov
dec
stos
xlat
andl
jb
inc
jl
shlb
shlb
fcoms
jmp
dec
and
jns
orl
gs
jno
mov
decb
push
inc
pusha
xchg
pop
mov
or
fistpl
in
sbb
imul
adc
mov
daa
mov
out
loop
push
iret
in
push
mov
test
scas
xlat
sub
js
movl
xchg
fwait
outsb
jo
orb
test
mov
in
mov
and
push
mov
in
lods
and
pop
or
cmc
add
shr
and
push
mov
xchg
nop
inc
ficoml
sti
jl
cld
xchg
xchg
lret
xchg
loopne
imul
sub
je
clc
mov
outsl
dec
es
pop
and
pop
fsubs
bound
inc
pop
cwtl
pop
fwait
lds
mov
pop
push
sahf
arpl
jb
imul
icebp
in
jo
ficomps
add
cmp
lcall
push
test
cli
repz
jg
rorl
sbb
lahf
mov
lret
mov
out
xchg
mov
nop
pop
test
jae
push
test
out
mov
inc
push
adc
lea
std
addr16
pop
into
xchg
jge
cmp
loop
cmp
add
jmp
lds
sbbb
or
jbe
shll
ds
push
ja
add
xchg
int
dec
and
paddw
outsb
lcall
pushf
loope
cmp
cmp
and
xor
fistps
pop
add
pop
mov
cmpsl
xchg
mov
sub
mov
dec
jl
dec
push
sbb
mov
out
daa
xorl
ret
sbb
xchg
shrl
push
mov
xlat
cmova
cmp
clc
mov
jg
mov
push
outsl
fstpt
jnp
push
xlat
xor
shll
mov
mov
cltd
cmpsl
filds
hlt
add
out
bound
leave
or
push
imul
xor
stc
sub
popa
and
dec
in
ss
popa
inc
add
mov
in
mov
mov
loope
push
xor
je
xor
cmp
test
es
rcll
movsl
mov
or
pop
stc
fwait
mov
sbb
or
lods
or
lahf
insl
mov
xchg
inc
outsl
push
or
call
int
loope
cmp
inc
cld
lret
popa
out
xlat
and
bound
pop
scas
sub
sbb
insb
jp
adc
insl
xor
add
xor
imul
in
int3
and
pop
xchg
stos
fimull
lods
pop
iret
xchg
inc
mov
repnz
movsl
pop
mov
insb
add
pop
lods
test
xchg
shll
or
or
fnsave
xchg
cmp
inc
dec
lods
or
pusha
aas
scas
xchg
loop
add
sub
sahf
dec
cmp
xor
imul
repz
mov
insl
test
mov
daa
aas
sbb
aas
lea
lret
lcall
jg
jne
sub
iret
mov
div
mov
hlt
ret
push
pushf
outsl
mov
dec
adc
cwtl
mov
adcl
dec
cmp
inc
stos
inc
mov
mov
scas
das
mov
mov
push
cwtl
push
jnp
push
push
aas
jmp
adc
cwtl
mov
dec
outsb
push
push
out
and
jnp
fdivl
in
push
shll
pop
push
adc
pop
add
jle
jecxz
mov
push
mov
hlt
xchg
sub
mov
dec
cmp
sub
mov
out
sahf
test
icebp
cmp
cmp
push
dec
dec
and
in
into
xor
sbb
cmp
mov
fisttpl
jno
jp
repnz
add
mov
je
mov
push
mov
test
mov
jge
dec
dec
jne
fstps
rorb
xor
xchg
adc
pop
icebp
das
xlat
dec
cwtl
jae
mov
test
and
into
pop
push
sti
xchg
lock
divps
sub
or
imul
mov
mov
mov
loope
inc
and
repnz
lods
je
sarb
bound
lds
push
add
movsb
nop
mov
into
add
push
sub
loopne
rcll
add
mov
lock
sbb
and
pop
std
into
adc
xchg
xor
popl
push
or
les
es
lods
test
mov
push
mov
in
or
sti
jge
stos
xor
fstl
sub
mov
gs
or
mov
sti
fwait
cmp
jno
pop
pop
lods
jg
cltd
leave
test
movsb
stos
fsubrs
mov
aas
push
mov
icebp
or
in
aad
pop
add
in
push
or
or
jbe
adc
scas
mov
inc
jmp
lds
clc
dec
xor
pop
sbb
addr16
adc
jge
insl
lea
not
or
rcrl
imul
outsl
ja
dec
decl
jne
mov
into
cwtl
arpl
sahf
enter
sub
jmp
repz
movb
inc
addr16
lds
xchg
lods
xchg
xchg
sub
out
lahf
dec
cmovo
into
lahf
inc
hlt
in
mov
rdpmc
pop
into
inc
movsb
xor
xchg
mov
xchg
mov
and
es
cltd
xor
inc
add
cmp
mov
mov
push
pop
or
inc
lock
xlat
adc
xor
scas
jbe
add
sarb
div
jno
inc
js
negl
or
in
pop
pop
mov
push
aaa
sub
cwtl
divb
adc
scas
cmp
nop
fistl
dec
dec
xchg
mov
aad
cmpsl
ret
inc
out
dec
ljmp
jge
or
jg
scas
cmp
inc
or
orl
icebp
push
movsl
and
jmp
push
daa
jne
sti
or
dec
dec
clc
vmwrite
mov
mov
jle
aam
call
pop
data16
jge
subb
jge
enter
mov
in
aas
outsb
sub
xchg
or
mov
jnp,pt
mov
mov
mov
fisttpll
dec
fdivrs
pop
jmp
jmp
sbb
rcl
push
mov
push
mov
pushf
cmp
test
mov
cmpsl
sub
dec
inc
arpl
into
xor
sbb
mov
adc
test
xchg
cmp
shll
jae
inc
fsubs
and
xor
inc
and
mov
jae
push
jbe
mov
xchg
loop
and
push
std
pop
imul
inc
das
mov
scas
dec
shll
mov
cmp
pushf
inc
push
jne
sub
in
ret
and
sub
pop
popf
jmp
movsb
sub
pop
sub
dec
and
push
pop
out
jmp
push
out
add
cs
scas
mov
or
push
jb
cmpsb
or
enter
sub
lret
les
int
push
pop
aaa
sub
enter
dec
or
cs
shlb
in
hlt
ljmp
movsb
push
lods
mov
stos
outsb
sbb
mov
mul
dec
scas
stos
mov
xor
pslld
and
cmp
addr16
out
in
nop
jp
pop
popa
dec
gs
pop
pop
cmp
dec
or
adcb
std
ljmp
lret
mov
sbb
in
or
lahf
test
call
jmp
repnz
push
test
xchg
js
push
jo
mov
loopne
cmc
std
jbe
pop
jp
sub
dec
sub
push
pop
sbb
fildl
mov
insb
je
adc
loop
xchg
fistps
imul
shrl
inc
add
in
xor
jae
cmpsl
cwtd
mov
jge
repz
addr16
mov
or
adc
jns
lds
jle
loope
xor
cmp
jns
mov
xchg
cltd
add
xchg
adc
clc
and
pop
push
fs
hlt
out
sbb
xchg
pop
clc
pop
cmp
test
xchg
mov
cmp
dec
pop
jg
ret
decl
rcl
sub
adc
lea
jp
mulb
mov
adc
test
xor
push
xor
push
ljmp
call
mov
add
lock
cmp
inc
imul
xchg
pushf
imul
dec
sub
loop
popa
outsl
and
pusha
mov
fs
push
outsb
call
fiadds
sarl
sub
lret
push
mov
rcl
negl
test
hlt
mov
rorl
mov
sbb
out
je
mov
loope
mov
or
cmc
in
fisubrs
ja
inc
mov
rolb
mov
jno
ja
mov
pop
push
push
push
xor
fmull
inc
gs
push
dec
test
mov
mov
push
sub
mov
ds
xchg
fucomp
mov
in
mov
jecxz
pushl
out
push
jmp
shll
push
dec
sub
xor
and
dec
call
dec
out
int
hlt
dec
mov
xlat
sbb
jns
fcmovu
in
stos
mov
mov
jbe
lcall
or
xor
mov
aad
int3
and
popa
nop
jbe
loop
lret
aad
sub
out
lods
loope
jl
inc
addr16
sub
cltd
ret
dec
leave
fs
dec
adc
leave
cli
add
cmp
jecxz
ja
inc
int
or
in
test
push
std
ret
loope
nop
pop
std
mov
mov
sbb
stos
ljmp
sti
jp
mov
pop
dec
sahf
scas
es
mov
shrl
scas
fldenv
cmc
imul
mov
and
std
jg
mov
pushf
arpl
pop
mov
bound
sub
jne
aas
xlat
add
inc
xor
int3
sub
testb
mov
jns
mov
cmc
push
xor
repz
add
sub
ss
out
insb
out
cmpsl
test
movsb
test
push
inc
pop
ret
sbb
jo
add
stos
out
out
pop
inc
xor
das
shl
jmp
adc
sbb
pop
xchg
dec
cmp
jns
cmp
push
fdivp
pop
adc
add
or
mov
inc
stc
out
pushf
cmp
jns
cs
or
pop
scas
enter
cmovne
in
and
shll
push
cmpsb
dec
mov
or
popa
xor
mov
dec
es
stc
mov
aaa
mov
pop
xchg
nop
pop
je
cld
mov
loopne
pusha
stc
jge
mov
sub
xchg
lock
sub
cmp
js
outsl
cwtl
or
inc
cltd
lods
sub
cmc
loope
inc
push
mov
and
imul
mov
test
addb
push
dec
icebp
adc
subl
mov
mov
mov
ret
cmp
arpl
dec
rcrl
push
test
fcomps
dec
cmp
and
jo
insl
sti
or
inc
jno
clc
pop
pop
cmp
xchg
imul
inc
jne
popa
stc
cmp
jbe
adc
push
pop
xlat
adc
popf
sbb
shl
popf
mov
lods
fsub
dec
cs
jns
xchg
sbb
outsb
cmc
into
inc
mov
fidivl
adc
mov
mov
in
test
inc
cmp
push
repnz
mov
add
adc
and
je
mov
pop
sub
test
leave
mov
mov
push
jno
xor
mov
or
pop
mov
cltd
call
ss
lret
cmpsb
push
dec
xor
mov
xchg
aam
repz
daa
mov
mov
or
jmp
pop
add
cmp
sahf
test
stos
adc
test
jae
pop
into
dec
mov
dec
jmp
faddp
xchg
inc
iret
fistpll
scas
insl
aaa
push
cld
loop
cli
xorb
flds
mov
shll
test
push
adc
sub
in
xchg
add
cmp
outsb
rcrl
cmp
mov
push
pushf
add
mov
push
ret
xchg
out
sarb
sti
ja
xchg
cli
add
and
arpl
mov
pop
aas
pop
lahf
cmpsl
popf
or
push
inc
es
out
jne
clc
adc
pop
out
jbe
jae,pt
adc
stc
dec
jb
mov
jo
mov
repnz
jecxz
push
jbe
or
pop
jnp
sti
add
dec
jle
mov
cld
xchg
movsl
imulb
mov
out
pop
mov
cmp
jle
push
ret
add
fimuls
jns
rorl
fbstp
shll
sub
dec
fs
mov
aas
sub
cmp
les
xchg
rclb
shlb
idivb
addr16
ljmp
and
ja
dec
int
negl
xorb
mov
mov
pop
adcl
and
fcoml
lea
add
inc
jae
push
mov
fwait
lods
fisttps
jae
pop
pop
mov
lds
je
out
shrl
add
jae
pusha
test
or
fdivs
clc
xchg
ss
xchg
decb
cmp
adc
out
mov
or
icebp
rorb
mov
es
mov
fsubrs
call
in
or
cmp
pushf
jb
call
jns
pop
rclb
lcall
ss
cmp
imul
js
std
pop
fs
popa
out
push
mov
int3
incl
mov
mov
cmp
pop
cs
sahf
aas
inc
mov
push
push
cld
icebp
divl
les
lods
mov
jg
sbbl
negb
mov
mov
imul
mov
push
xchg
aam
fwait
or
pop
stc
mov
gs
xor
loope
push
inc
jne
popf
aaa
sbb
mov
pop
mov
mov
and
ja
mov
mov
aaa
inc
dec
cmc
inc
mov
cltd
repz
test
daa
jnp
sub
pop
jae
and
adc
xlat
cmpb
and
aad
insl
insl
cwtl
outsl
scas
xor
push
adc
repnz
loop
cmc
sub
pop
fsubp
arpl
pop
sub
push
es
data16
fcompl
mov
movsl
inc
ret
es
imul
jbe
out
mov
pop
cmp
push
sbb
arpl
mov
rcr
mov
mov
xchg
cltd
mov
test
mov
add
adc
test
rclb
negl
pop
jno
adc
mov
pushl
stos
xor
fbld
lret
push
ja
cmp
ffree
mov
stos
xor
out
cmp
call
movsl
add
ret
in
cmp
stos
add
fisubs
adc
jle
mov
xchg
cli
inc
shrl
adc
jecxz
mov
div
sub
repnz
xchg
sub
sbb
sub
mov
mov
mov
dec
int3
add
mov
xchg
scas
insl
nop
lahf
cmpsb
aad
pop
jo
jo
xlat
jecxz
mov
or
js
inc
push
mov
hlt
insl
cmp
push
mov
nop
pop
jne
rcrb
rcll
mov
arpl
push
loop
sbb
test
or
inc
sub
enter
int3
outsb
pop
fdivrs
and
cmc
push
imul
dec
cltd
cli
xor
add
adc
cmc
jbe
sub
dec
mov
cmc
mov
xor
cmc
inc
dec
stos
push
lds
mov
push
lods
out
cmp
hlt
dec
cmp
jns
and
fiadds
mov
mov
or
push
test
sbb
pushl
xchg
sbb
shll
fs
push
sbb
mov
push
lods
mov
sarb
xchg
adcl
cmc
cmp
adc
push
pushf
dec
in
adc
sub
xchg
dec
int
mov
cmpsl
stc
mov
pop
scas
lret
or
jecxz
lods
xchg
lret
outsl
das
cmp
dec
adc
mov
sbb
mov
jge
pop
cli
cld
leave
mov
int3
xorl
std
push
jge
outsl
push
mov
fs
rcll
cmc
outsb
xchg
fwait
pop
jmp
pushf
mov
je
sub
or
pop
xor
andb
push
das
test
mov
add
add
xchg
test
mulb
jne
adc
ret
push
dec
sti
add
push
xor
test
mov
ret
jae
mov
mov
xor
pop
imul
iret
aas
les
cmp
aad
pop
jecxz
mov
cltd
insb
cmp
cmp
xchg
push
fmuls
xor
push
gs
test
mov
jno
add
outsl
xor
lock
adc
in
ret
lods
leave
xchg
inc
out
jg
lds
jge
sbb
inc
jmp
sub
dec
cmpps
adc
out
dec
mov
dec
add
movsl
xchg
cmpl
add
mov
xor
std
sbb
jbe
jno
cmp
add
fldt
std
bound
sbb
inc
sbb
mov
or
sbb
arpl
sbb
test
pop
cltd
push
cmp
fwait
call
mov
dec
xchg
mov
mov
mov
xchg
and
push
rolb
sub
pop
push
mov
cli
mul
add
push
stc
cmpsb
shlb
and
mov
pushf
dec
add
pop
out
das
cmpsb
sbb
imul
adc
repz
mov
inc
add
cmp
movsl
jb
inc
mov
in
out
mov
mov
filds
out
js
into
gs
test
and
dec
into
pop
push
lea
inc
jb
cld
mov
xchg
imul
out
dec
out
xchg
in
rcll
call
movups
gs
push
inc
jle
fs
xor
xchg
xchg
aad
nop
jle
push
ss
aam
or
push
loopne
adc
loop
or
mov
dec
jno
pop
jo
add
pusha
inc
adc
jae
jmp
inc
fmull
out
fldl
jle
jno
dec
jb
outsb
adc
sub
ja
sbb
lret
aam
add
mov
lods
or
xchg
dec
in
fs
mov
imul
mov
gs
daa
or
xchg
adc
mov
and
in
jecxz
sbb
icebp
or
jmp
xor
xchg
call
inc
lret
ret
pop
movsl
dec
mov
xchg
popf
xlat
sbb
dec
xchg
sarl
cmp
dec
addr16
out
fbstp
fcomi
dec
or
sub
movaps
out
scas
aad
mov
call
cld
mov
push
fsubr
in
shl
sub
movsl
nop
stc
bound
cmpsb
add
testl
mov
sbb
and
roll
inc
jae
cwtl
lds
mov
mov
jecxz
pop
dec
push
cmc
ljmp
mov
jnp
addr16
pop
pushf
cmp
sbb
inc
cltd
fadds
andl
cmp
test
cld
in
clc
aam
cmp
pushf
daa
inc
adc
jb
adc
stos
test
iret
sbb
push
fwait
xchg
mov
loope
mov
cli
popf
push
scas
das
jns
sbb
add
popa
scas
iret
arpl
xchg
mov
push
push
inc
sbb
jo
bound
sub
xlat
ja
mov
cld
push
sub
push
mov
pop
stc
pop
sar
jne
in
cmp
dec
push
xlat
outsb
and
jge
xchg
cmp
lcall
std
cmp
in
xor
daa
xor
inc
dec
push
add
fwait
das
popf
jns
xchg
or
stos
pop
fldt
dec
stos
mov
inc
and
int
xchg
pop
push
in
push
rcl
jnp
rclb
loopne
mov
test
adc
jo
sbb
xchg
ficompl
insl
aam
fidivl
rorb
and
adc
adc
push
lods
imul
fdivrs
mov
ds
ljmp
push
sub
out
addr16
xchg
xor
cmp
int
rcl
popa
sbb
mov
pop
adc
mov
or
fucomip
jge
lret
adc
mov
xchg
popf
xchg
inc
dec
mov
inc
cmp
icebp
fists
xor
es
lea
adc
mull
shlb
mov
push
cli
insl
inc
into
mov
dec
inc
dec
rclb
mov
mov
mov
test
sbb
jge
mov
sub
sub
shll
jae
xchg
mov
fsubr
sbb
loopne
in
pop
or
and
mov
cmp
cmpsl
adc
dec
int
js
mov
mov
test
push
inc
ret
inc
in
pavgw
lock
loop
pusha
rolb
mov
xor
push
mov
insb
push
lods
pop
xchg
icebp
lcall
hlt
push
pop
std
mov
adc
sbb
jbe
or
stc
sbb
add
movsl
in
loop
and
sbb
inc
sub
pop
adc
mov
jmp
in
rcrl
in
lret
fsts
push
pop
push
and
jmp
add
les
dec
and
in
cli
shlb
jbe
jecxz
lock
jecxz
push
push
je
push
outsb
out
jo
stc
xlat
xor
jns
cs
pop
and
inc
ljmp
push
imul
aaa
jle
xor
adc
or
mov
xor
fildll
pop
mov
dec
adc
ljmp
xor
lcall
mov
xor
pop
hlt
pop
xor
sub
aad
xchg
push
call
cs
lods
pushf
or
test
aad
out
xchg
adc
mov
dec
cld
mov
stc
idivb
outsl
int
mov
pop
addr16
cwtl
lret
lds
nop
mov
pushf
xchg
imul
rorl
out
jecxz
xchg
jl
pop
in
lods
imul
cmp
pop
xor
ret
insb
dec
xchg
bound
aam
xchg
mov
cmpsb
fyl2xp1
leave
adc
lds
imul
cli
shrb
or
or
fdivs
jmp
jno
xor
mov
mov
mov
adc
mov
ret
pop
jecxz
sub
cmp
cmp
mov
addr16
pop
pop
ja
fs
loopne
xchg
push
out
in
push
jmp
dec
mov
or
xchg
mov
and
xchg
lcall
xor
mov
loope
iret
lods
sub
es
scas
cmp
shrl
xchg
xchg
sahf
push
repz
sbb
clc
xchg
xchg
repz
dec
jmp
push
dec
mov
loope
shrb
lea
pop
jno
xor
xor
loop
or
jb
sub
and
movsb
mov
xor
daa
andb
out
popl
push
ret
in
and
movsl
notl
dec
sti
sbb
add
lods
mov
fidivrs
rol
xor
pop
push
or
cmp
cmp
pop
int3
daa
dec
icebp
cmpsb
les
mov
and
test
lret
repnz
mov
movsl
testb
and
and
sbb
xor
shrl
mov
cmp
mov
decb
leave
inc
jne
sbb
mov
das
pop
pop
loop
mov
lahf
jl
scas
push
adc
mov
js
xlat
data16
popa
sbb
pop
ljmp
scas
xor
daa
or
arpl
pop
ret
jns
mov
jo
mov
pop
and
jecxz
push
dec
push
call
cld
mov
popf
xchg
jp
xor
inc
dec
shr
fnstenv
jmp
imul
fistpll
icebp
lock
mov
inc
cmp
call
inc
idivl
enter
push
pop
addr16
out
push
mov
mov
lock
sbbl
add
jecxz
inc
mov
jge
inc
hlt
sahf
cmp
aam
cmp
ss
shll
daa
outsl
aaa
xchg
ds
adc
cmpsb
push
bnd
push
xchg
xchg
int
arpl
sarl
mov
femms
push
push
mov
dec
mov
pop
ds
sub
cmp
add
sbb
cmp
jmp
fimull
in
insb
sbb
enter
and
push
and
and
insb
jns
inc
clc
outsl
fidivrl
inc
pop
pop
xchg
test
js
xchg
insb
jbe
cmp
outsl
pushf
stos
and
fs
pop
outsl
pop
mov
dec
lds
sub
jno
std
fisubl
and
mov
xchg
dec
add
cs
int
fimuls
xchg
insl
mov
adc
popf
or
repz
or
mov
outsb
stc
loope
and
test
sbb
mov
inc
adc
stos
fistpl
enter
adc
mov
jle
jg
inc
sub
notl
fistl
pop
pushf
mov
cmp
sub
inc
push
add
sub
jbe
nop
jae
stos
sub
add
lea
bound
cmp
sbb
xor
jns
cmp
rorl
cmc
inc
jno
pop
jl
inc
jecxz
xor
imul
mov
mov
pop
arpl
scas
or
adc
add
jbe
dec
int
movsl
ljmp
sub
and
pop
aad
xchg
popf
in
jae
cwtl
xchg
pop
in
popf
inc
sahf
jo
jns
inc
inc
sbb
xchg
into
popf
and
jbe
cld
mov
lret
test
xor
cmpsb
stos
into
rep
add
loope
and
jg
mov
fcom
mov
cld
xor
pop
sbb
ss
xor
out
pop
mov
leave
xchg
xor
mov
xor
fisttps
cmpsb
inc
jle
push
pushf
jl
mov
mov
mov
pop
enter
mov
cmp
sub
xor
dec
mov
dec
insl
loope
icebp
push
dec
fs
es
push
pusha
jbe
dec
sbb
or
mov
addr16
js
adc
inc
sbb
stos
mov
push
in
fcmovnbe
daa
mov
and
mov
cmp
in
mov
cmp
arpl
inc
stc
movsb
arpl
jmp
sbb
lock
and
cld
sbb
orl
fwait
xchg
push
mov
stc
inc
inc
sub
das
push
cmp
push
icebp
dec
ljmp
sbb
cmpsb
es
sahf
imul
outsb
push
dec
aaa
push
jnp
int3
out
int3
insl
pop
add
mov
adc
cmp
push
mov
push
dec
mov
cltd
xchg
cltd
xchg
mov
pop
jno
pop
fidivrl
out
push
outsb
cmpsb
les
pop
mov
rorl
aad
or
cmp
cmp
pop
aas
mov
fsubrl
ss
ja
test
mov
mov
push
mov
sub
fistl
cmp
xlat
sub
jl
pop
cmp
cmpsb
jbe
cmp
xchg
in
xchg
push
test
cltd
mov
sub
mov
push
add
push
push
pop
xchg
or
sbb
xchg
push
xchg
int
imul
jbe
mov
dec
mov
mov
push
test
fwait
xor
cmpsl
adc
test
pusha
push
mov
out
sahf
jl
call
mov
xchg
arpl
roll
int
int3
lock
aas
push
mov
push
add
add
dec
inc
add
xor
cltd
inc
adc
sbb
mov
cmpsl
outsb
or
mov
in
das
dec
test
rcrb
xchg
faddp
add
jle
daa
pop
jp
jle
push
mov
mov
inc
sub
sub
sub
xlat
add
orb
jns
jnp
int
je
sub
cmp
push
sub
mov
shrl
cmp
sbb
lcall
jbe
or
xor
iret
repnz
dec
stc
out
lret
add
sbb
fbld
or
xchg
scas
daa
aad
adc
push
mov
or
dec
jg
adc
sub
test
sub
popf
aaa
jmp
stos
jl
cli
ja
cmp
ret
push
pop
mov
fstpl
sub
sub
mov
mov
jg
pop
mov
jmp
aam
lds
inc
mov
lret
sub
jnp
lods
fstpl
mov
and
lods
js
mov
mov
cs
stos
push
cli
add
fistps
je
rcrl
cmp
xlat
sub
sahf
push
lahf
pop
clc
adc
mov
daa
in
mov
lods
test
out
aaa
sbb
xchg
es
mov
out
test
xchg
fs
and
test
xchg
fdiv
rcll
popa
in
mov
imul
push
fwait
inc
sbb
push
dec
loope
in
cmp
sarl
xchg
jae
jmp
pushf
fidivrl
cmp
leave
xor
outsl
fnop
jns
fs
outsl
adc
jae
imul
arpl
mov
mov
inc
xchg
and
addr16
stos
mov
repz
ret
das
ds
lods
dec
shlb
inc
mov
flds
push
mov
cmp
pop
push
mov
fcoml
in
and
movl
lds
cmp
test
pop
ja
sbb
mov
popf
adc
fs
sub
sub
aam
jo
push
cltd
jno
push
jne
jmp
jae
jne,pn
pop
in
cs
jbe
scas
test
lock
jne
sarb
das
fs
rcpps
cld
and
test
repnz
xchg
out
rolb
lock
dec
int
popf
loop
jmp
xchg
mov
inc
loop
pop
arpl
sub
add
cmp
dec
outsl
test
jl
add
movsl
insl
push
cmp
cld
stc
jb
ljmp
or
aad
hlt
js
mov
roll
cmp
jo
mov
rorl
inc
cmc
sub
das
dec
dec
test
adc
std
sbb
mull
mov
arpl
sbb
mov
jecxz
lret
pop
call
ja
jae
dec
push
xor
cs
and
scas
sub
push
add
inc
mov
mov
andl
mov
insb
bound
xor
or
xchg
push
or
jno
cmp
mov
xchg
mov
pop
fisttpl
push
test
lods
nop
mov
test
popa
jbe
or
dec
imul
into
aad
out
ret
lds
out
frndint
push
push
dec
dec
ror
jg
sub
or
and
or
jne
lahf
imul
xchg
mov
sbb
ss
cmc
push
stos
push
out
pop
popf
jae
sbb
cmp
jle,pn
add
fwait
jg
xchg
popf
mov
inc
or
outsl
adcl
mov
sahf
loop
xchg
or
idiv
dec
loop
mov
je
js
aaa
mov
test
int3
jl
test
lcall
into
push
xchg
ret
push
nop
and
push
and
ret
into
clc
sbb
js
push
adcb
lods
rclb
jbe
fisttpll
mov
inc
sub
lcall
add
aad
aas
adc
cmp
cmp
sub
aam
insl
and
push
mov
in
push
mov
lret
mov
push
cltd
fisttps
xor
pop
mov
sahf
mov
mov
and
mov
pop
stos
test
mov
jae
add
push
and
mov
cmp
push
push
inc
push
jmp
xchg
in
das
cli
imul
cli
mov
pushf
lss
ficomps
mov
xor
push
clc
call
scas
mov
xchg
int3
cli
mov
mov
and
jmp
jge
aad
mov
xchg
push
test
jb
int3
ds
pushf
insb
mov
popa
mov
jmp
or
into
lods
ja
movsl
mov
pop
imul
jp
sahf
repz
repnz
ss
insl
xchg
push
sbb
test
outsl
dec
dec
xor
xchg
xchg
cs
jae
cltd
loop
adc
sbb
imul
push
adc
add
es
jo
mov
ds
aad
dec
inc
ds
cmc
pop
adc
jns
shr
scas
mov
nop
aas
xchg
mov
stos
insl
push
xorps
xor
pop
out
fimuls
dec
in
or
in
orl
xchg
fisttpl
pop
push
xchg
ficoml
mov
jbe
jns
js
rcr
ja
lahf
test
aaa
std
ficompl
push
jo,pt
fsubs
pop
sbb
in
sbb
mov
mov
fsubrl
add
cmp
or
cld
xchg
daa
out
push
pop
pop
test
movsl
aaa
add
cmpsb
push
sbb
fmulp
enter
outsl
adc
fimull
xchg
adc
test
inc
or
xor
aam
jb
repnz
std
dec
or
push
aas
or
pop
add
mov
fwait
dec
and
adc
xchg
xor
lds
xchg
xlat
out
loope
pop
mov
push
xchg
jbe
cmp
je
mov
mov
or
push
ja
testb
aad
ret
ds
push
jle
cmp
jae
idivb
dec
hlt
cwtl
add
arpl
in
and
xor
jbe
inc
int
arpl
dec
pop
aam
mov
int3
icebp
lcall
cmp
imul
cmp
sbb
clc
fsubs
dec
cmp
in
dec
scas
lods
xchg
and
testl
fdivs
test
movsb
xor
ljmp
rcll
scas
test
jp
mov
cmpsl
dec
pop
sbb
loope
fcmovnbe
mov
std
aam
pop
add
mov
leave
xor
mov
int
dec
test
out
arpl
or
je
pop
rcrl
push
inc
fildll
pop
push
aad
imul
cld
jne
ret
sub
push
test
lret
xchg
cmp
mov
mov
enter
in
movsl
pop
mov
fiadds
shl
sbb
sbb
xor
in
test
pusha
nop
std
pop
repz
push
jno
repnz
and
neg
ljmp
sbb
cmp
jmp
xchg
xlat
or
cmc
mov
hlt
es
mov
and
iret
rorb
inc
jp
mov
sub
jge
cwtl
leave
icebp
mov
mov
inc
jo
inc
mov
pop
insl
jmp
pushf
leave
ja
shl
jecxz
inc
jo
jb
sbb
add
sub
aam
xchg
xchg
mov
jbe
lahf
adc
mov
dec
jecxz
gs
add
icebp
loopne
popa
dec
repnz
push
and
push
std
cmp
push
pushf
xor
lock
and
adc
test
mov
jo
sbb
outsb
sub
push
adc
ror
and
dec
pop
push
test
cmp
or
lcall
mov
loope
sub
jns
daa
clc
and
arpl
fs
stc
incl
call
pushf
stos
ficoms
add
mov
or
rcl
out
ljmp
dec
clc
jmp
hlt
ret
and
roll
and
lcall
std
jns
jbe
ret
int3
or
jge
push
cmp
pop
mov
lcall
add
clc
ret
xorb
jno
xchg
mov
pop
xchg
xchg
pop
pop
mov
sbb
sub
je
insb
mov
out
ljmp
imul
jb
push
ss
movsl
jmp
insl
mulb
jmp
mov
in
frstor
cmp
mov
sbb
mov
pop
lcall
xor
out
cmp
mov
adc
lds
lcall
cmpsb
popf
lahf
divb
es
lcall
fidivl
jmp
mov
movsb
mov
xchg
inc
mov
jbe
jb
push
adc
repz
iret
xlat
jno
stos
mov
push
pushf
into
pop
and
dec
pop
inc
icebp
or
scas
pop
lret
imul
mov
aam
xchg
inc
pop
cmpsb
mov
cmp
jne
lahf
xchg
pop
les
inc
mov
cmp
dec
jg
filds
out
call
or
std
rolb
push
loopne
fwait
mov
lds
push
jo
leave
rclb
mov
jge
sbb
dec
jne
std
dec
lock
popf
call
xor
pop
call
ja
push
movsb
lods
cmc
mov
mov
outsb
mov
jb
jmp
pusha
push
adc
popf
mov
push
insb
dec
fwait
add
and
pushf
sbb
or
mov
cmpsl
or
add
daa
fistpll
rol
push
pop
mov
cmpsb
cmp
std
int3
cli
in
std
lds
clc
enter
outsl
sub
aas
fcoms
xor
push
mov
repnz
jge
xor
cmp
mov
lahf
jp
sti
sbb
imul
stos
and
pop
push
fstpl
push
outsl
mov
mov
lods
jns
lret
xor
xor
aaa
ficomps
stos
push
jg
clc
pop
rcrb
popa
mov
shr
iret
cld
popf
or
jge
imul
cmpsb
bound
sub
test
jg
xor
icebp
jl
sub
pop
sub
data16
fstps
jnp
sbb
jbe
dec
hlt
arpl
xchg
aam
push
cmpsl
int3
mov
pop
fwait
or
bound
push
sahf
push
add
inc
adc
mov
jl
cmpsb
adc
xchg
jmp
or
ror
adc
xor
inc
push
mov
xor
ror
jno
pop
aad
rclb
gs
mov
and
push
daa
mov
lods
ret
fidivrl
fisubrl
xchg
lods
adc
addb
iret
in
fmulp
test
fadds
add
out
arpl
mov
mov
into
clc
push
int
pop
mov
jecxz
enter
pop
xchg
and
push
lock
jae
mov
push
iret
jmp
cmpsb
sub
dec
in
inc
or
sbb
pop
arpl
out
dec
xor
es
out
insl
scas
into
push
test
pop
in
sub
and
xchg
stc
test
or
push
push
orl
fidivrl
inc
dec
das
push
pop
movsb
lcall
sub
pop
sbb
mov
sarb
std
cwtl
mov
lds
jo
clc
add
stos
sub
fadds
inc
jo
js
jno
fnstsw
pop
jne
add
xchg
loopne
aaa
mov
sub
jmp
ljmp
and
or
or
and
fcompl
jnp
jb
jmp
fimuls
cli
std
jge
sbb
push
push
mov
lock
inc
push
cmpsl
dec
inc
pop
sub
out
in
sub
jb
outsl
xor
movlps
push
lret
test
aaa
cltd
dec
lock
pop
lret
pop
fsubrl
repnz
mov
or
and
sbb
sbb
into
ret
subb
xchg
nop
les
sub
je
mov
stos
xorb
push
push
stos
mov
jno
lods
shr
scas
mov
inc
in
std
mov
aam
sbbb
pusha
mov
or
xlat
adc
xchg
or
or
jne
lods
iret
je
leave
dec
jo
xchg
lret
in
push
push
push
mov
arpl
xchg
jb
pop
mov
fnstsw
iret
jb
lods
popa
imulb
dec
roll
imul
lret
or
cwtl
test
mov
lods
dec
pop
fildl
inc
aad
add
popa
icebp
ror
sub
in
in
test
in
stc
and
jns
gs
jb
data16
mov
jmp
icebp
inc
repnz
sbb
dec
mov
insb
lods
or
and
jmp
jbe
iret
sahf
pushf
mulb
ss
test
cs
dec
mov
scas
push
add
adc
or
frstor
stos
int
dec
push
sbbb
ds
jnp
cmp
and
ss
xor
dec
pop
pusha
loope
aam
xchg
scas
adc
jno
call
jle
decl
fildl
std
or
xchg
inc
xchg
xchg
icebp
int3
repz
mov
dec
and
lret
and
add
mov
inc
and
xor
shlb
int
rcr
xchg
repz
sbb
dec
leave
jo
add
fwait
fs
ret
shlb
mov
cmovb
in
cmp
mov
mov
in
add
adc
orb
out
rol
pusha
add
and
xor
test
rcrb
in
fisubl
call
jecxz
push
orb
push
movsl
ja
xchg
je
mov
or
dec
cmpsb
ja
je
mov
sarb
jmp
lock
stos
and
and
aad
mov
push
scas
push
jle
sbb
push
sub
gs
push
mov
fdivrs
mov
mov
cli
cmp
mov
inc
pop
daa
mov
push
jmp
xchg
cmp
mov
sbb
test
rorb
shll
mov
xor
leave
imul
imul
ss
sbb
dec
and
or
and
in
sbb
fnsave
sbb
pop
cmp
js
enter
loop
cmp
mov
mov
mov
shlb
xor
and
inc
cltd
mov
inc
xchg
addr16
cmp
rdmsr
mov
lods
sarl
pmaxub
daa
mov
jmp
xchg
cmp
sbb
inc
xchg
loop
pop
aad
xchg
adc
xchg
mov
mov
rcrl
push
xchg
outsb
repnz
or
pop
xor
inc
rclb
xor
fistpll
add
inc
stos
push
gs
dec
roll
sub
jne
ficompl
dec
fcmovnb
mov
arpl
arpl
add
repnz
popl
dec
mov
sbb
or
pop
jo
xchg
hlt
movsl
popf
fwait
mov
dec
das
ret
aam
jle
or
fnstenv
inc
add
ljmp
sub
dec
mov
xor
loop
mov
mov
out
adcb
int3
xchg
in
mov
mov
fiadds
cmpsl
in
out
rcl
inc
mov
jno
xchg
cmpsb
shll
in
cmp
test
or
jbe
lods
cs
shrl
push
scas
scas
mov
jle
sbb
cmc
inc
adc
jg
dec
pop
pop
clc
xchg
adc
xchg
push
out
pop
sub
test
scas
mov
out
sub
subl
push
jo
mov
sub
pop
sbb
cmpsl
and
lret
mov
mov
adcl
inc
aam
pop
aaa
imul
loop
sahf
out
test
leave
cmp
scas
push
xor
mov
sub
xor
add
je
insb
mov
xchg
jbe
mov
arpl
adc
cmp
sbb
imul
fimuls
mov
pop
rcr
and
xchg
clc
mov
push
ficomps
or
fucom
xchg
jne
cmp
push
iret
jg
mov
fs
aas
xchg
sbb
fistpl
add
in
xor
mov
inc
push
ret
jne
add
inc
and
cwtl
insb
cwtl
fcom
adc
push
pop
mov
pusha
pop
xchg
push
sub
mov
stos
jecxz
repnz
add
jl
cmp
lods
push
push
sbb
mov
cmp
cmp
xchg
adc
adc
and
aaa
pushfw
adc
push
lahf
test
pop
or
jb
loop
ficoml
imul
mov
nop
dec
test
into
sbb
imul
ss
fcoms
into
hlt
dec
lahf
cmpb
mov
loope
pusha
shll
fldenv
add
fcoms
mov
scas
cltd
cmp
cld
inc
lds
in
addr16
add
stc
push
fst
mov
aam
mov
dec
stc
push
jne,pt
aas
fs
xchg
out
faddl
popa
mov
dec
lret
and
cwtl
sbb
mov
sbb
std
cmpsl
ja
and
xchg
and
fsubp
adc
insb
lea
movsl
cmp
int
jbe
or
jbe
pop
dec
mov
push
into
outsb
or
push
xchg
adc
rorl
and
in
push
dec
aam
inc
in
repz
imul
mov
out
sub
or
mov
stos
lods
mov
shlb
mov
jo
xchg
aas
dec
dec
call
mov
and
aaa
imul
sti
adc
and
push
pop
sbb
inc
sub
cmp
les
fwait
pop
leave
dec
cmp
rorl
xchg
and
xchg
or
je
arpl
add
pop
mov
xor
add
xchg
je
aas
popf
jae
test
in
test
pop
mov
es
jp
mov
ficompl
jno
mov
cmp
out
mov
xlat
mov
and
fisttps
pop
sub
mov
or
outsl
or
enter
or
inc
pusha
movsb
jge
loope
add
clc
fstpt
jbe
pop
fldl
inc
sahf
mov
std
or
push
inc
jnp
aam
xchg
in
cltd
mov
push
push
pushf
pop
xor
enter
add
push
add
push
idiv
or
sbb
pop
jns
addr16
sub
sbb
sbb
or
xor
or
xor
ljmp
mov
xchg
sbbb
cmpsl
fisttpl
jg
xor
loope
pop
ror
xlat
pop
dec
addr16
mov
mov
and
or
mov
out
dec
pop
xchg
ds
xchg
aas
xor
push
mov
dec
xchg
mov
int3
lret
add
cmp
cmp
pop
shlb
std
sub
and
das
stc
xchg
and
enter
mov
adc
mov
and
xor
stos
cs
xchg
fdivl
pushf
mov
dec
and
mov
outsb
push
dec
mov
sub
out
in
inc
mov
push
push
sbb
cmp
les
les
xchg
lods
sti
mov
stos
lods
dec
ds
push
cmp
ja
pushf
push
arpl
xorb
pop
and
push
or
aam
sbb
adcb
jmp
mov
divb
outsb
add
ja
cmp
and
jp
dec
xor
sbb
scas
out
mov
cmpsb
movzwl
shr
fcoms
jp
adc
pop
xchg
idivb
jp
jg
sti
imul
cmpsl
mov
add
adcl
push
fwait
pop
cmp
xchg
push
mov
push
dec
rcrb
jne
mov
inc
adc
movaps
scas
jl
and
icebp
out
push
jg
add
add
outsl
in
aaa
mov
sub
ficoml
insb
sub
mov
push
mov
repz
fistl
loopne
ljmp
stos
les
loopne
dec
mov
hlt
inc
sub
push
repnz
push
adc
ds
mov
cmpsl
xchg
orps
out
push
dec
lods
cltd
jno
mov
stos
mov
fwait
dec
pop
and
jmp
movsl
into
pushl
or
xor
mov
jae
cltd
lock
xchg
test
in
test
out
mov
cld
sub
and
loop
jp
loop
jb
cmp
stos
in
clc
xchg
xchg
cli
pusha
adc
lret
mov
les
test
cmp
sub
push
pop
std
mov
mov
and
mov
pop
jno
jb
mov
std
enter
lcall
das
inc
and
add
or
decl
adc
xor
in
push
dec
outsl
inc
mov
ds
cmpsb
addl
dec
pop
push
push
setns
lcall
push
fldl
icebp
mov
fwait
nop
push
pop
insl
mov
stos
jl
in
jnp
pusha
sti
adc
pop
jno
out
in
sub
cmp
pop
dec
out
jle
rclb
fdivrs
sahf
push
int3
shlb
ja
imul
cmp
fldt
xchg
roll
sbb
jne
push
js
sbbl
gs
adc
je
in
push
sahf
push
stos
fdivl
loope
or
scas
aam
pop
cmc
pop
dec
loop
gs
mov
sbb
sub
sbb
cmp
dec
mov
push
mov
popf
je
popa
push
das
dec
pop
jl
cmp
loop
out
xchg
jne
sub
mov
popf
or
xchg
cld
scas
mov
ds
setns
jne
pusha
push
add
add
out
test
in
lds
cmpsl
push
push
popl
clc
dec
fstps
sbb
pop
mov
in
out
xor
ret
add
fistpl
mov
jns
mov
and
inc
outsb
cmp
dec
jo
cmp
std
in
test
or
push
sub
loope
sub
push
xchg
outsb
int3
movsl
or
adc
jb
pop
in
mov
loopne
dec
lret
inc
imul
aad
push
mov
gs
test
js
mov
jae
scas
push
das
jae
fimull
xchg
pushf
leave
sbb
mov
in
push
cmp
ljmp
xor
mov
ret
mov
clc
jle
out
push
fldt
xchg
and
push
mov
cmpl
sub
push
push
fdivl
mov
fwait
lret
push
lahf
sub
leave
sbbl
mov
cwtl
dec
dec
or
popf
ja
into
pusha
cmc
jae
cmc
sbb
cmc
mov
ret
imul
divl
outsl
lcall
loope
pop
scas
sub
loop
push
adc
sub
ret
and
inc
fwait
push
scas
fstl
mov
jne
fadds
jne
ds
mov
lcall
or
ljmp
push
mov
add
add
add
pop
xorl
fnsave
js
mov
push
xor
xchg
jl
jmp
cmp
pusha
jmp
jge
or
or
inc
xchg
xchg
push
sahf
dec
mov
mov
jmp
js
arpl
fisubrl
adc
adc
imul
fists
in
and
imul
aaa
push
sbb
mov
aaa
jbe
insl
or
and
pop
mov
ret
subb
push
out
aad
imul
data16
adc
sbb
mov
xchg
pop
push
pushf
mov
fs
lret
out
adc
bound
adc
lock
fimuls
mov
xor
sbb
sub
mov
rorb
cwtl
fists
and
pop
cmp
adc
xor
and
cmpsl
pop
push
inc
add
addr16
repnz
or
dec
stos
es
sub
jnp
inc
mov
cmp
shlb
push
ds
dec
ds
nop
cmpsb
ds
pop
outsl
mov
push
rolb
dec
push
bound
xchg
mov
aaa
mov
or
pop
and
sub
dec
sbbl
cli
xchg
movsb
push
test
push
popf
sub
out
ja
adc
push
cmp
das
dec
lahf
or
arpl
mov
mov
jnp
add
in
adcb
mov
in
mov
mov
adc
add
lret
cmc
mov
out
dec
add
sub
ret
pop
xor
repz
popa
pushf
aaa
sbb
jl
push
cmp
mov
fs
inc
adc
push
pushf
and
mov
cmp
mov
dec
xchg
adc
imul
ret
ret
xchg
mov
jp
mov
fnsave
mov
rclb
pop
or
mov
repz
out
out
sub
inc
and
nop
aas
ljmp
nop
jecxz
adc
cli
ficoms
or
or
inc
jl
loope
cld
stos
lods
insl
shll
sbb
cmpsl
ret
ficomps
jle
mov
xchg
push
popf
test
cwtl
fsts
clc
push
dec
cs
fists
jle
sub
add
push
xchg
shll
pushf
mov
xor
test
add
cmp
loop
leave
inc
stos
mov
fwait
pop
lock
mov
fiaddl
iret
icebp
sbb
loop
push
test
mov
jbe
mov
push
ret
or
jge
aad
es
xor
jg
loope,pt
insl
mov
mov
movsb
les
jl
xchg
mov
push
cltd
mov
sub
repnz
out
in
pop
xchg
xchg
lea
push
subl
test
mov
inc
aas
mov
sub
stc
push
mov
sbb
pop
scas
push
imul
sarb
cmpsl
iret
mov
bound
and
sbb
and
push
jns
enter
int3
orb
mov
movsl
push
ss
and
out
inc
repnz
in
pushf
sbb
or
cmp
notl
jbe
jns
and
clc
iret
je
hlt
loope
scas
mov
arpl
lcall
jp
iret
ja
scas
out
mov
xlat
pushf
hlt
stos
xchg
lret
mov
add
lods
mov
rcr
dec
push
das
dec
mul
in
cmp
mov
add
rcrl
mov
fidivrl
adc
out
test
dec
leave
test
cmp
stc
outsb
jmp
cld
sub
xchg
add
notl
pop
push
xor
inc
fsubrl
adc
push
cmc
mov
sub
cmpl
stos
ret
scas
call
adc
ret
movsb
mov
cmp
setp
in
push
push
imul
lea
test
sar
idivb
jns
add
pop
cmp
mov
push
fwait
rcrl
aad
inc
cmp
xor
cltd
popa
ret
testb
xchg
addr16
sbb
dec
mov
mov
or
lret
lcall
sbb
lcall
loope
mov
int
js
cmp
outsb
pop
sub
xchg
in
iret
loope
xchg
sbb
jno
inc
xor
sub
sarb
cs
mov
mov
push
jbe
std
mov
icebp
xorb
lods
push
repz
sti
inc
inc
imul
push
es
stos
cltd
inc
leave
mov
addb
cmc
out
mov
enter
stc
push
sbb
sbb
pop
aas
sub
sub
push
lock
and
sub
mov
push
lret
aaa
sbb
xlat
push
mov
push
scas
and
lahf
ljmp
mov
mov
ds
dec
test
in
mov
cmp
ljmp
inc
in
adc
shrb
dec
pushf
xor
filds
addr16
dec
sbb
add
push
cmp
mov
push
mov
ss
cli
scas
aas
push
aam
ja
ja
mov
add
arpl
fbstp
ja
mov
jnp
dec
sti
sub
push
ret
sbb
push
sub
jg
dec
jp
ljmp
and
inc
jp
gs
into
mov
or
aam
mov
push
jg
jge
mov
sbb
outsb
push
xchg
loopne
sbb
fisttpl
ljmp
dec
into
xchg
or
jno
inc
push
xchg
int3
mov
jb
and
add
mov
sub
push
popf
lods
xor
mov
mov
xchg
fmulp
movsl
or
inc
lret
sar
xor
push
paddb
sbbb
and
inc
cs
and
out
shl
pop
pop
clc
incl
out
lea
dec
mov
jmp
pop
xor
or
dec
popf
cmp
fmull
les
adc
fs
jmp
dec
mov
nop
inc
ds
fcompl
mov
adc
mov
inc
test
mov
pop
add
push
cmp
test
mov
inc
scas
xchg
jns
xor
inc
mov
ja
add
cmpsl
mov
inc
pusha
ret
inc
aaa
in
hlt
cmpsb
scas
clc
mov
inc
andb
xchg
pop
xor
cltd
enter
icebp
fsubs
lret
add
xchg
inc
bound
xchg
data16
pop
cmc
sahf
xchg
mov
or
pushf
add
push
fisubs
xchg
sub
sbb
and
inc
mov
movsl
pop
lea
movsb
mov
fldt
inc
jb
jle
push
or
xor
cld
lods
dec
ret
dec
xor
pusha
sbb
enter
mov
mov
into
orb
sbb
adc
repz
or
mov
lea
and
cmp
imul
add
call
pop
mov
aad
mov
aas
dec
insl
scas
xchg
mov
nop
repz
icebp
lcall
xchg
cmpsb
loope
clc
mov
lahf
ret
out
sub
sbb
sbb
dec
pop
lock
inc
mov
pop
cld
sti
cltd
jnp
mov
les
add
adc
cwtl
test
inc
jecxz
cmp
sub
cmp
leave
inc
aad
pop
jp
pusha
std
leave
sub
inc
ljmp
mov
bound
addr16
jbe
rclb
xor
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
es
sub
aad
mov
mov
in
loopne
add
dec
fcmovnbe
and
mov
inc
cmp
or
push
aad
xchg
outsb
ja
sti
cmpb
outsb
fidivs
mov
sahf
mov
test
jns
std
popa
jecxz
sar
mov
insl
jne
sarl
inc
and
outsl
xchg
sub
in
inc
cmp
sbb
xor
xor
mov
push
js,pn
jl
or
and
sahf
jle
mov
pop
pop
xchg
cmp
leave
arpl
lds
das
loope
jb
sbb
sti
inc
mov
fcoml
shrl
nop
sub
mov
pop
rolb
pusha
jne
mov
mov
or
jecxz
pop
adcl
insb
ret
je
test
jmp
fcmovnb
mov
sbb
cmp
mov
stc
in
gs
xchg
inc
inc
or
mov
xchg
lret
push
mov
sub
jge
arpl
mov
ficoml
push
pop
push
add
xlat
and
mov
push
leave
cmp
or
ja
fsub
ljmp
enter
out
sti
loope
out
cld
push
jmp
inc
or
inc
lret
inc
cli
sub
call
xor
je
scas
xor
or
repnz
mov
fisttpl
cmp
mov
jmp
out
xor
mov
pop
jne
mov
aad
xor
sub
loopne
dec
pushw
aad
int3
je
xchg
xor
adc
sbb
xor
xor
fcoms
es
fdivrs
cmp
shlb
nop
aaa
inc
std
xchg
in
jne
push
call
cmc
sub
push
outsb
insl
std
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
insl
add
insl
