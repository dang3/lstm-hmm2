push
mov
sub
movl
mov
xor
mov
div
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
sub
mov
mov
add
mov
mov
add
movzbl
mov
and
movzwl
and
movzbl
sub
mov
add
mov
jmp
mov
or
mov
mov
mov
mov
add
movzbl
mov
and
movzwl
and
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
movl
mov
add
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
mov
mov
jmp
mov
imul
mov
mov
or
mov
mov
or
mov
mov
xor
mov
mov
mov
pushl
pushl
pushl
call
add
cmp
je
mov
mov
and
mov
mov
mov
jmp
mov
mov
call
mov
pop
leave
ret
push
mov
sub
andl
push
push
push
push
push
call
cmp
jne
push
push
push
push
call
add
xor
jmp
push
call
leave
ret
insb
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
imul
or
push
cli
cmp
cmc
fs
aam
pop
arpl
xor
cmp
xchg
clc
xlat
jae
push
lock
jo
add
add
enter
test
mov
jmp
iret
jae
jae
adcb
xchg
test
mov
cmp
cwtl
int
xchg
mov
xchg
div
sub
addr16
push
cwtl
pop
mov
int
mulb
jno
pop
sub
test
mov
add
xchg
testb
push
push
pop
jno
arpl
xchg
in
gs
inc
lds
int
lds
aad
xor
repnz
adc
pop
test
xor
adc
out
jecxz
inc
inc
cmp
jo
addl
sub
mov
dec
out
xchg
cltd
out
mov
test
out
imul
aam
lret
fldl
or
or
sbb
cltd
adc
int3
enter
fprem
int
imul
pusha
sbb
out
adc
mov
outsl
popa
jl
pop
xor
add
adc
mov
push
test
adc
lods
hlt
in
dec
stos
push
xchg
insb
data16
out
pop
mov
mov
xor
xchg
fisttps
ss
jo
xchg
inc
enter
pop
pusha
lock
imul
pop
repz
mov
cmp
add
and
mov
adc
rcrl
ficoml
and
cmpsl
fdivs
pop
xor
mov
jno
repz
sub
mov
xchg
sti
lret
imul
and
jmp
cmp
fiaddl
pop
adc
mov
push
push
cmp
mov
cmp
out
or
jae
xor
inc
push
testb
and
sbb
loopne
mov
outsb
dec
push
dec
cwtl
pop
mov
jnp
f2xm1
out
in
xchg
ja
mov
mov
leave
or
jmp
or
xor
adc
clc
sbb
add
and
stos
adc
lods
or
fwait
xchg
nop
mov
das
pop
push
mov
sbb
mov
loopne
jo
sti
xorb
push
push
mov
jb
lock
cmp
insb
into
push
ljmp
mov
mov
test
fbld
push
push
jge
clc
cmp
mov
cmp
cmp
mov
push
add
dec
les
fisttps
xchg
or
cli
test
arpl
cmpb
push
adc
sbb
addr16
jnp
psllq
adc
push
fcoml
mov
fists
xlat
outsb
mov
push
scas
lret
dec
out
mov
cli
mov
mov
mov
call
push
adc
adc
mov
stc
xor
nop
stos
inc
jne
mov
jo
mov
jo
testb
insl
mov
es
imul
mov
mov
fyl2x
sbb
push
sbb
fs
and
sbb
not
cmp
mov
mov
mov
and
je
repnz
in
cmp
je
adc
mov
outsl
and
clc
lret
mov
push
lods
adc
jge
push
flds
outsl
fdivrs
cmc
cmp
dec
and
pop
jp
jg
mov
mov
testl
fwait
sub
lret
fisttps
and
jb
and
mov
out
and
pop
and
cmp
mov
jns
ret
mov
adcl
jge
or
or
mov
push
mov
mov
add
mov
rcr
mov
outsl
out
cmp
test
sub
lods
and
roll
adc
pop
call
in
mov
jmp
cmpsb
mov
push
xchg
sbb
adc
xchg
cld
test
js
mov
add
pop
inc
cmp
popf
and
cli
loopne
mov
adc
movb
in
mov
popa
inc
dec
ds
fdivrl
xor
data16
sub
pop
xchg
scas
and
cmpsb
and
rclb
jnp
ret
jb
sbb
cmp
loop
inc
pop
stos
nop
inc
imul
or
mov
aad
insb
test
cmpsl
ljmp
repz
xchg
fildll
mov
fdivrl
ss
or
push
fisttpl
into
and
arpl
jp
sbbb
imul
sbb
js,pn
sub
jg
pop
adc
clc
je
jle
jbe
adc
out
pop
jg
popf
pop
sub
pop
das
adc
push
mov
mov
loopne
les
into
mov
aam
or
ds
push
mov
sti
dec
enter
xor
mov
mov
hlt
add
sub
mov
movsl
imul
push
test
inc
insb
ffreep
mov
push
cs
mov
stc
and
lea
mov
in
mov
adc
fldl
mov
test
mov
push
gs
push
stos
adc
dec
mov
adcb
stc
sub
jge
movsl
dec
jns
inc
arpl
repnz
dec
push
mov
pop
jo
xor
clc
or
xchg
test
jne
stc
test
setnp
and
sub
shlb
jne
pop
xchg
sub
jg
jb
jae
sub
xor
jo
dec
xor
fstpt
test
pusha
mov
mov
sti
mov
aad
mov
arpl
dec
sub
icebp
adc
clc
push
mov
in
jmp
mov
xchg
xchg
loopne
inc
sub
push
in
insb
dec
fs
js
les
mov
push
cmp
mov
or
jge
push
aaa
in
push
cltd
nop
and
sbb
pop
mov
out
mov
out
stos
adc
xchg
inc
or
cmp
es
cmp
outsl
bound
pop
scas
sbb
jae
daa
adc
xor
inc
cld
push
cwtl
outsl
jno
jg
or
loopne
pop
in
cmpl
insb
fistps
push
push
cltd
jl
hlt
and
in
inc
add
push
and
pop
addr16
leave
sbb
out
push
dec
in
xor
gs
outsb
lret
aad
mov
jns
aaa
inc
movsl
shrb
sbb
test
mov
movq
add
add
cmc
mov
movsl
iret
lcall
jp
push
pmullw
jae
mov
sti
div
mov
push
dec
cli
hlt
mov
sub
sti
xchg
xlat
pop
jl
mov
xor
into
movsl
cmp
push
push
imul
pop
sar
jge
cmpl
mov
ja
dec
xchg
dec
fidivl
lea
add
xchg
push
ljmp
sbb
adc
jns
jae
inc
push
jo
sub
out
xor
loope
or
adc
je
or
cmc
or
arpl
ffree
fidivrl
inc
imul
cwtl
mov
push
enter
inc
dec
push
sbbl
outsl
mov
xor
out
out
pop
push
ret
cmp
push
inc
fsub
xchg
jne
mov
and
mov
xchg
mov
mov
dec
xor
ljmp
lea
push
stc
into
sub
outsb
adc
pop
out
inc
clc
jns
popa
bound
add
test
insb
ss
adc
jno
daa
xlat
jns
int
shlb
mov
out
es
fldl
and
mov
xchg
jecxz
mov
and
pop
insb
adc
addl
or
lea
test
jp
xchg
xchg
loope
mov
jecxz
imul
rcrl
jmp
jo
mov
xor
fsubrl
sbb
addb
negl
mov
data16
jmp
add
mov
push
adc
xor
xchg
inc
xchg
in
bound
lds
lahf
dec
mov
or
sti
and
call
mov
sub
inc
loope
mov
jne
or
mov
mov
mov
xchg
ficoms
mov
push
es
lods
scas
sbb
inc
and
dec
push
sub
adc
sub
adc
lods
testb
xchg
push
mov
mov
mov
fildl
int
int
pop
data16
dec
xchg
push
pusha
je
sub
push
and
mov
sarb
fstpl
cmp
add
cli
test
mov
pop
mov
pop
adc
jl
cltd
adc
push
cmp
pop
adc
mov
inc
cmp
icebp
ljmp
adc
cltd
scas
or
bnd
sbb
mov
cli
lods
jo
or
movsl
jl
int3
clc
mov
dec
sar
andb
insb
inc
push
bound
out
test
lcall
lea
lret
mov
fdivs
xlat
icebp
xlat
sbb
clc
push
dec
cld
add
and
or
cld
pop
call
or
cmp
pop
or
loope
scas
out
or
sub
out
and
cmpsl
pop
cltd
xchg
in
push
scas
mov
sub
fs
inc
fs
stos
pop
cltd
in
mov
les
or
jge
jge
popf
bound
aad
xor
mov
sub
sub
int
dec
inc
pop
pop
leave
inc
jb
enter
fstpl
loope
or
cmp
lret
push
jecxz
lret
adc
sub
outsl
aad
sbb
inc
sub
test
mov
aad
shr
mov
das
aam
stc
push
fcomi
rorl
adc
cmpsb
dec
roll
mov
xchg
mov
jnp
inc
and
mov
jmp
sub
adc
imul
pop
push
and
stc
hlt
sahf
mov
hlt
mov
inc
jbe
pop
add
call
andb
ss
iret
xchg
pop
lahf
dec
out
and
add
js
cmp
jbe
mov
fistl
and
or
xor
and
sbb
jmp
mov
dec
js
sbb
xchg
xchg
ret
fnstcw
sbb
repnz
ja
add
push
out
mov
xchg
sub
mov
pop
dec
mov
mov
jmp
cmp
adc
lods
jns
fwait
lds
test
jns
cmp
dec
mov
adc
or
add
mov
dec
ret
pushf
xchg
or
fimull
outsb
pop
repnz
imul
xor
and
mov
jp
lret
orl
cmpb
xchg
mov
jne
fnsave
jecxz
sub
and
imul
cmp
pop
retw
sub
and
test
mov
inc
jecxz
das
cmp
movb
movsb
sbb
xor
mov
into
xchg
push
fcoms
mov
cli
push
imul
clc
cli
mov
and
jo
push
mov
mov
mov
pusha
shlb
add
sbb
rolb
sub
jns
and
jae
xor
dec
outsb
out
xchg
incl
test
xchg
push
pop
inc
adc
push
add
dec
xor
or
bound
ret
mov
adc
imul
inc
mov
adc
scas
push
xor
sbb
inc
js
jo
mov
xchg
call
inc
mov
lock
scas
xor
iret
pop
dec
fwait
push
hlt
push
aas
lret
pop
and
shll
mov
daa
out
lods
lods
je
lods
cwtl
cmpsb
pop
rorb
pop
add
loop
iret
mov
cld
add
sub
je
outsb
popa
vmulps
push
mov
pop
jbe
jb
pop
mov
je
xor
mov
jb
mov
add
scas
jnp
out
in
pop
xor
iret
lea
cmp
sbb
ret
xlat
das
in
cmp
lea
sub
fmul
sub
loop
popf
mov
pop
jb
or
jnp
inc
and
or
push
add
scas
lock
push
loop
mov
mov
leave
inc
repnz
xchg
mov
fstpt
or
jbe
stos
js
movzbl
pop
jae,pn
and
xor
mov
cmp
mov
stos
xor
jmp
icebp
test
pop
dec
dec
sahf
bnd
mov
aad
imul
or
fucomip
in
pop
mov
mul
aaa
and
dec
cmc
dec
mov
imul
test
std
pushf
mov
pop
xor
cmp
popa
stos
push
inc
mov
aam
icebp
or
inc
ds
jbe
xchg
int
ret
addr16
cli
js
mov
cmpsb
push
cs
bnd
lcall
mov
jo
nop
fcomps
mov
push
es
push
imul
pop
add
shrl
pop
sbb
xor
jmp
push
cmp
sub
add
in
rorl
jge
pusha
fstpt
hlt
loopne
push
ja
push
sub
adc
lahf
xchg
js
inc
fucom
cmp
push
xchg
insb
sbb
jo
out
in
imul
mov
pop
into
test
ret
adc
mov
popf
fwait
jmp
cltd
enter
int3
data16
pop
jno
cmpsl
cltd
mov
push
mov
fcompl
scas
add
fcompl
push
mov
pop
sahf
es
popf
push
sub
dec
cmpsl
pop
ja
dec
pushf
dec
sub
es
jl
cmpsl
lret
sub
ljmp
or
jle
or
sub
inc
sub
mov
fs
push
push
inc
pop
das
mov
inc
dec
cmpsl
je
xlat
lock
imul
and
adc
loope
ss
fyl2x
mov
adc
ret
stc
push
test
or
mov
jns
jae
xchg
addb
mov
jecxz
add
nop
mull
js
adc
push
jmp
dec
ljmp
pop
jb
scas
fcom
mov
xor
or
out
cld
jl
adc
pop
sbb
scas
aas
push
vmovsd
cmc
fnsetpm(287
mov
lret
notb
in
dec
stc
add
sub
enter
jl
pushf
xor
sub
pop
ja
sbb
js
pusha
imul
xlat
xlat
mov
sbbl
lds
adc
adc
shr
nop
rolw
lea
push
sbb
mov
push
fsub
ljmp
mov
dec
sti
lods
stc
js
adc
aaa
pop
outsb
push
fcmovnbe
jl
push
stos
add
mov
jmp
xchg
sbb
mov
cmp
dec
push
dec
in
mov
movsl
popl
aaa
sbb
clc
add
stos
xor
sub
fiadds
stc
xchg
test
popa
js
push
fistl
je
idivl
out
jns
ficomps
push
jnp
adc
sub
lahf
scas
push
js
in
xchg
cmp
adc
popf
and
lea
cs
jge
fisubs
fdivrs
fdivrl
inc
cmpsl
inc
scas
js
ror
enter
outsl
xchg
mov
sub
or
mov
mov
emms
clc
add
popa
ja
loope
jo
mov
push
jecxz
hlt
clc
sub
jp,pt
lock
pop
movsl
inc
lock
cmp
fnstsw
jno
dec
jo
fidivs
aas
mov
adcb
icebp
and
pop
rcll
outsl
rorb
inc
pop
push
mov
mov
mov
dec
ss
cmc
push
adc
sti
push
in
sbb
loope
inc
sbb
aas
sahf
fcompl
lock
gs
incb
pop
dec
mov
jmp
sbb
lods
pusha
divb
aaa
arpl
jp
data16
scas
xor
adc
or
cmp
mov
inc
imul
add
lret
xchg
or
mov
xchg
test
pop
cmp
dec
jmp
outsl
cwtl
xchg
dec
aaa
cli
in
xchg
mov
xor
roll
cmc
punpcklbw
adc
shrl
aam
es
jnp
push
jl
jle
je
xchg
push
xlat
mov
notb
or
pop
or
xchg
pop
movsl
jne
aas
jge
into
rol
jb
test
mov
insb
adc
rorl
xor
gs
xchg
sub
int
dec
loopne
inc
cld
adc
add
xlat
cld
cli
gs
dec
push
call
lret
data16
inc
jo
into
sti
test
shll
rep
repnz
out
les
sub
cmp
sub
cwtl
fists
xor
aad
jl
pop
push
add
adc
lods
dec
adc
adc
js
adc
and
loop
mov
sub
adc
mov
inc
fiadds
jne
xchg
xchg
add
divb
and
fbstp
pop
fbld
push
cmp
nop
xor
inc
xchg
gs
inc
adc
lret
sti
jno
xorl
pop
cmp
ret
inc
shll
cmp
jg
cmp
in
cmpsb
xchg
mov
scas
or
pushf
fbstp
movsl
insl
jle
xlat
les
popf
sti
enter
jg
mov
bound
pop
xchg
shrl
sahf
push
dec
rcrb
xchg
add
les
cmpsb
xchg
cli
repz
loop
inc
push
mov
cltd
or
pop
lahf
mov
test
ficomps
and
test
repnz
test
aas
mov
inc
mov
xchg
sti
mulb
fldl
sub
fistpl
push
push
leave
out
sti
stc
cmp
add
roll
inc
ficoml
loope
jne
into
adc
frstor
incl
xor
or
flds
mov
or
jecxz
ss
mov
movsb
enter
push
cmp
sarl
jge
out
push
xchg
out
push
mov
cmpsb
outsl
stos
pop
mov
xchg
in
dec
sbbl
xchg
insb
ljmp
jnp
pop
test
or
stc
insb
pop
icebp
and
ret
cmp
xchg
arpl
mull
inc
dec
inc
pop
call
leave
xor
ds
mov
jns
fisttpl
inc
mov
mov
js
call
lock
and
addr16
inc
cmp
push
stc
push
mov
xchg
inc
xor
fcmovu
imul
fs
sub
and
jp
mov
popa
subl
sub
jg
or
mov
popf
rorb
xchg
shr
lods
lods
outsl
ja
adc
test
and
jb
popf
mov
jmp
xchg
in
sbb
fistpl
jae
add
clc
shlb
sub
add
lret
lcall
jbe
jns
sub
sbb
cmp
cld
push
add
mov
loop
push
in
xchg
movsb
jns
loopne
mov
sub
adc
dec
outsl
hlt
cmp
sarl
je
xchg
push
xor
lods
add
es
inc
push
xor
mov
and
push
push
pusha
in
dec
int3
adc
out
add
push
dec
aad
fstps
add
add
dec
js
ret
dec
push
mov
ss
mov
cmpb
subb
jnp
push
cs
pop
inc
and
out
xchg
lods
loop
push
ret
push
add
mov
push
fildll
inc
or
cmp
testl
jmp
mov
pop
inc
push
or
mov
movsl
mov
sbb
push
iret
add
or
fstp
push
xchg
dec
xor
inc
xchg
adc
add
xchg
repz
xlat
fs
sbb
mov
and
mov
pop
jae
test
add
out
xor
mov
push
sbb
sub
or
jns
iret
dec
das
sbbl
and
cmp
sahf
mov
es
lods
cmp
cmpsl
mov
test
cmp
dec
push
lea
sbb
xchg
mov
stos
popa
and
dec
xchg
ret
push
pushf
outsl
xor
adc
loope
js
cs
dec
out
push
or
jp
add
call
jne
jecxz
fcmove
lahf
xchg
scas
pop
and
cmp
fldcw
call
pushf
jmp
bound
push
sub
out
lret
or
insb
cmp
or
std
sub
in
mov
decl
adc
out
test
fdivl
loopne
test
fistl
imul
push
lea
xchg
lret
jecxz
aaa
ja
int3
popf
push
cmp
jg
xchg
movsl
shlb
xchg
xchg
adc
ret
test
jnp
inc
sbb
lret
jg
jl
sar
aas
data16
stos
cltd
rorb
jmp
pop
jae
pop
lret
negb
mov
stos
xlat
ds
shll
and
addr16
push
mov
mov
rolb
addr16
lods
cltd
mov
cmp
sahf
lods
imul
cmp
sbbl
and
gs
std
jbe
in
addr16
inc
out
jp
stc
xchg
test
mov
in
cmpsb
jecxz
popa
dec
xor
mov
mov
mov
test
xchg
xor
mov
dec
pop
mov
scas
es
dec
adc
ljmp
push
mov
aaa
subb
mov
cld
nop
pop
mov
ja
mov
mov
and
aas
mov
push
call
ljmp
mov
mov
jge
and
insb
out
out
lea
pop
mov
and
imul
sbb
sub
xor
stc
xor
add
pop
add
cs
clc
pop
shll
push
jl
inc
sbb
push
and
pop
mov
inc
mov
xchg
lods
cld
xchg
inc
dec
xlat
sahf
jbe
push
cmp
repnz
pop
jmpw
imull
inc
and
enter
scas
ret
pop
cmpsb
stos
lock
je
fdecstp
mov
stos
rcrb
add
inc
xchg
in
pop
add
aaa
or
jge
jo
sbb
mov
cmp
and
bound
fisttpll
loope
in
addr16
rolb
inc
aad
pop
adc
jae
cltd
jbe
out
adc
xor
add
sarb
jge
add
adcb
push
loopne
pop
sti
pop
lock
adc
xor
xlat
mov
bound
dec
jl
dec
rcrb
xor
sub
add
or
imul
mov
insb
jp
pop
jg
adc
repnz
gs
and
dec
js
mov
dec
sbbl
in
ss
loope
push
shlb
mov
orb
inc
aam
ss
imul
xchg
jg
icebp
jmp
out
jnp
add
fldcw
or
popa
out
sub
adc
mov
ja
aaa
and
arpl
ja
gs
bound
mov
fildll
push
adc
rcr
daa
cmc
add
je
xor
jl
fisubs
cmp
das
mov
aas
jg
sub
js
add
inc
add
stc
inc
out
jns
pop
add
sub
imul
dec
jmp
in
mov
js
or
xor
add
xor
scas
push
std
dec
into
shlb
rorl
mov
pop
cmp
jae
fcoml
in
mov
bnd
std
ja
dec
sti
add
mov
mov
cli
test
xor
aas
adc
stc
cmp
daa
fists
pop
lods
clc
cmp
in
shl
cmp
clc
movsb
xchg
sbb
mull
or
sarb
pop
lea
bound
pop
into
add
daa
lods
inc
push
stos
movsb
adc
gs
push
jbe
leave
cmp
or
mov
ds
sbb
ss
mov
mov
fdivrp
stos
xor
jge
lret
cmp
das
pop
mov
jp
insb
push
das
leave
pop
jo
std
loope
push
jp
xchg
punpckhbw
xor
inc
cmp
js
es
add
jae
popf
sub
jnp
cmpsb
out
lods
jmp
scas
nop
add
jno
add
movsb
xchg
xor
xor
pop
and
fnstenv
adc
insb
pop
fbld
jp
or
repz
mov
adc
fs
sub
scas
iret
or
jmp
pop
xchg
mov
add
jp
pop
jp
sbb
fwait
js
jp
inc
dec
pusha
add
cmp
xchg
ds
jp
fsts
inc
mov
push
aaa
sub
movsl
scas
bound
cmp
mov
xchg
mov
lret
into
pop
sbb
bound
lds
repnz
out
sbb
dec
mov
mov
mov
jmp
pushf
fcmovne
das
jle
int
dec
mov
loopne
repz
nop
movsb
clc
ret
enter
arpl
outsl
and
sbb
lock
mov
mov
ret
and
rolb
adc
cwtl
int3
jl
sarl
cmp
xchg
lahf
dec
das
cmc
mov
push
outsb
jae
in
dec
call
enter
push
std
jecxz
int
mov
or
sbb
addr16
jne
push
mov
jae
jns
xor
data16
adc
adc
fsubrl
iret
xchg
dec
in
mov
std
cmpsl
sarb
sahf
das
mov
imul
pop
aam
imul
lods
dec
int3
int3
add
lea
cmp
mov
jno
jecxz
stos
mov
cwtl
pop
mov
loop
mov
sub
cltd
movsl
pushf
push
jmp
arpl
lret
rcpps
lods
lret
unpckhps
scas
mov
cmp
push
les
shlb
push
je
hlt
xor
push
push
fwait
enter
das
push
lds
adc
dec
insb
lret
sbb
cwtl
fsubrs
mov
in
cmc
mov
pushf
sbb
dec
sbb
movsl
cmp
mov
dec
insb
sbb
pusha
popf
std
add
push
std
rol
std
pop
fidivrl
jge
rcrb
fimull
scas
sub
mov
iret
movsb
push
cltd
jge
iret
or
mov
xor
ds
stos
push
mov
xor
mov
dec
cmp
push
mov
mov
ret
jge
cmp
mov
pop
dec
push
sub
sbb
test
sub
fsubrl
mov
and
sub
ror
mov
outsb
repz
mov
out
pushf
cmp
sbb
and
jb
stos
adc
jnp
xor
daa
adc
sub
xor
lret
inc
out
repnz
shl
test
rcrl
jns
xlat
push
xchg
jg
add
push
jb
cmp
mov
inc
sub
repz
pop
sbb
jl
cmc
sub
pop
add
lret
repz
int
sbb
sbb
out
repnz
sbb
add
insb
push
inc
fimuls
lods
adc
mov
fcoms
jne
dec
lahf
add
pushf
icebp
cmp
lcall
stos
mov
loop
mov
in
mov
xor
push
stos
test
aad
cmp
pop
arpl
and
lret
notl
dec
push
or
push
out
sub
enter
xlat
cmp
sub
inc
sub
and
jmp
pop
in
into
pop
or
ds
adc
or
jl
xchg
adc
int3
mov
bound
lahf
mov
xchg
push
push
jae
out
outsl
popf
cmp
mov
push
bound
adc
push
sbb
shr
xchg
roll
xchg
dec
lods
mov
or
cmpsb
push
notb
je
jp
jmp
out
dec
insl
movsl
sbb
add
lods
pop
imul
cmpsb
es
push
stos
sahf
jae
stos
call
out
xchg
lods
inc
ljmp
jne
mov
bswap
dec
or
mov
mov
shrl
adc
outsl
in
aas
out
stos
out
and
mov
dec
ja
into
mov
lret
pop
arpl
push
out
mov
lahf
lret
aaa
jbe
xchg
xorl
enter
out
cmp
sub
xlat
movsl
cmp
push
imul
aam
mov
xor
fnsave
call
pop
jg
and
loopne
mov
stos
js
into
pop
and
fs
into
cltd
mov
mov
leave
pop
inc
push
and
out
outsl
pop
out
lea
mov
aaa
adc
push
adc
nop
xor
stc
or
imul
pop
das
cmp
pmulhuw
add
sbb
in
xchg
popa
mov
rorb
pop
cli
cld
test
nop
cmpsb
sub
push
add
cmpsb
adc
ss
pop
loop
rorb
les
test
inc
pop
cmp
test
mov
jecxz
mov
popa
add
inc
mov
jb
clc
mov
xor
pop
aam
pop
or
jns
test
out
imul
fstpt
inc
into
repnz
imul
pop
ds
jg
push
or
push
call
cmp
daa
dec
xchg
decl
out
lret
adc
inc
sbb
inc
cmp
mov
xchg
inc
mov
pop
mov
adc
imul
and
in
mov
xor
xor
pop
lea
aas
adc
ja
in
push
sub
clc
in
xchg
sbb
cmp
lds
in
mov
lahf
clc
test
adc
mov
inc
dec
dec
enter
out
xlat
data16
dec
sub
es
aas
or
mov
mov
push
pop
insl
pushw
mov
js
scas
mov
cmp
icebp
rcl
xor
mov
jecxz
xor
mov
js
lds
scas
pop
aas
jno
movsl
mov
mov
cmpsb
es
adc
inc
popf
mov
leave
lods
cmp
sahf
add
stc
jnp
roll
movsb
dec
xchg
fldcw
lcall
int3
jl
jns
nop
dec
cmp
jge
data16
push
sub
les
xchg
mov
jecxz
jmp
int3
jne
es
sahf
mov
xchg
cs
push
in
mov
in
and
test
stc
mov
jge
stc
cmp
lds
sub
xor
or
data16
push
hlt
gs
outsl
push
call
loop
dec
mov
ss
xchg
lods
iret
inc
test
jge
xor
xchg
test
cmp
or
out
add
rclb
test
xchg
xchg
jg
popw
addr16
scas
pop
adc
loopnew
fistl
sub
mov
fnsave
inc
scas
xchg
lret
scas
mov
sbb
ret
ja
cwtl
js
sbb
xchg
inc
and
jbe
test
xchg
adc
cs
outsb
cmc
pop
lea
push
or
fldcw
mov
mov
mov
nop
and
inc
rorl
xor
sub
or
sub
dec
pushf
hlt
addr16
jle
imul
sub
jno
insb
adc
push
stc
loope
mov
mov
test
xchg
repz
popf
cld
int3
pop
pop
or
cltd
jge
or
mov
mov
sub
sti
jle
xchg
fsubs
test
xchg
adc
dec
mov
outsl
xor
enter
ret
mov
mov
sub
out
sbb
out
aaa
sub
lret
fdivr
fldl
xor
out
mov
xor
in
sbb
or
lret
pushl
add
clc
xor
inc
mov
ja
dec
mov
push
adc
cli
xor
mov
mov
adc
sub
lea
cltd
push
or
fsubrl
bound
sub
push
xchg
add
jp
sbb
in
mov
lods
xchg
mov
dec
mov
add
scas
mov
sahf
fists
aas
fimuls
jnp
mov
das
xor
sti
lock
cmp
sub
mov
std
push
push
sub
and
pusha
or
and
sbb
sub
ret
mov
add
xchg
and
cli
or
sbb
add
not
outsl
call
mov
sti
sub
xchg
and
adc
inc
pop
and
pop
inc
jg
xor
cltd
pop
push
ret
push
test
mov
mov
lds
dec
and
fcmovb
fbstp
sbb
pop
das
adc
ljmp
rorl
and
inc
fstpt
jb
pop
mov
dec
mov
pop
add
pop
cwtl
cmpsb
pop
test
fsubl
fwait
test
mov
mov
and
mov
cltd
mov
adc
test
lret
fcoml
mov
push
mov
imul
sbb
fildll
sub
sbb
push
sub
repnz
push
add
and
fs
jns
mov
mov
dec
push
sbb
stos
push
orb
adc
sbb
stos
cmpb
mov
jne
lds
dec
and
aas
arpl
sti
jns
jb
xchg
shl
inc
cmp
loopne
testl
sub
rorb
push
ds
or
fisttps
jb
or
and
jmp
mov
xchg
adc
roll
fistpl
aad
or
bound
outsb
sub
das
bound
out
xor
enter
mov
ljmp
out
roll
data16
adc
cmp
or
pop
lcall
jge
int3
into
and
mov
pop
mov
adc
mov
xor
push
pusha
aam
imul
arpl
mov
xchg
lret
pusha
sbb
mov
pop
mov
and
ficompl
dec
pusha
jae
arpl
adc
jo
jecxz
fmul
in
mov
int
cmp
jno
mov
mov
push
ja
ret
add
scas
inc
and
cmp
fstl
pusha
je
out
jle
inc
cmp
cwtl
cmp
cld
ja
mov
add
icebp
mov
xchg
cld
std
mov
mov
and
movsb
int3
and
iret
int3
xor
stos
jae
stos
dec
mov
jp
dec
mov
jbe
mov
enter
sahf
xchg
add
xor
subb
dec
jae
dec
std
push
sbb
popa
scas
aas
jb
shl
xor
pop
fidivrl
mov
ficomps
add
bnd
xchg
mov
sbb
jge
pop
xor
xor
mov
les
pop
popf
inc
ret
in
test
sbb
push
cld
jecxz
js
xchg
add
loop
or
lahf
lcall
test
push
jle
sbb
sti
jg
xor
and
inc
sub
inc
call
pop
mov
movsl
inc
je
jmp
test
into
fistl
mov
jmp
mov
fsubp
negb
push
dec
lret
insb
xorl
loopne
adc
dec
inc
dec
mov
mov
and
xor
popa
sbb
daa
xchg
mov
andl
je
ficoml
out
pop
pop
sub
imulb
test
dec
dec
aad
mov
dec
pop
lock
push
es
dec
fxsave
outsb
jl
mov
enter
cmc
enter
aad
fs
dec
adc
push
jae
movsl
xchg
push
iret
aaa
cmp
mov
ja
out
push
dec
dec
sub
mov
inc
or
shlb
cmpsb
rolb
mov
adc
aaa
inc
adc
inc
adc
sbb
xchg
dec
cs
adc
shrl
pusha
pop
das
cmp
push
xor
bound
imul
push
stc
pop
pop
mov
xor
pop
pop
icebp
hlt
xchg
cs
in
and
push
cmc
loopne
cmp
jae
movsl
pop
pop
cmp
fs
push
lret
inc
add
xchg
xor
in
xchg
mov
aaa
xchg
and
ficoml
sbb
shr
and
adc
fs
fildl
loope
lahf
out
icebp
cmc
rclb
ficomps
addr16
add
es
scas
jge
repz
sub
insl
and
clc
mov
push
insb
xor
aad
jmp
lret
or
mov
pop
loop
mov
add
loop
aaa
push
adc
xor
outsl
and
dec
push
dec
or
cwtl
adc
loope
push
adc
and
push
outsl
lds
inc
dec
lds
inc
xchg
jb
push
loope
pop
pop
pop
pop
lahf
scas
cmp
and
and
inc
inc
xor
xlat
ja
push
or
popa
jns
addb
in
rclb
push
gs
shl
jae
xor
mov
mov
and
popf
push
iret
lods
xor
xor
and
xchg
cmp
out
pop
fs
push
fwait
push
jp
inc
imul
je
sbb
sub
xchg
ret
mov
xor
idivb
mov
mov
mov
xchg
dec
ss
in
pop
and
dec
push
cld
mov
sti
or
add
xchg
jno
sub
jne
adc
dec
rorb
es
loope
sbb
mov
mov
and
push
lret
lahf
scas
sbb
mov
or
imul
jmp
out
xor
dec
and
daa
fildl
fdivrs
rol
ss
xor
jno
push
je
fsubs
imul
lret
push
and
in
and
inc
add
mov
das
sub
sbb
xchg
or
sahf
pop
cvtps2pi
sti
out
add
adcb
fbld
adc
andb
cmpsb
mov
adc
and
or
int
inc
cwtl
jo
jmp
ss
and
xchg
es
scas
cmc
das
loope
fnstenv
jge
adc
xor
fstps
pop
rcl
adc
cmp
cmc
fsubl
dec
jnp
jecxz
sub
or
add
stos
loopne
add
cmp
dec
push
fisubs
pop
into
bound
iret
push
repnz
stos
in
les
add
call
js
ljmp
popf
sbb
mov
sbb
jge
mov
push
lret
lcall
push
mov
mov
mov
insl
fdivl
insb
mov
xchg
xor
out
test
fmull
cmp
xchg
lret
test
scas
mov
aad
jle
lcall
les
xchg
movsb
adc
loop
mov
jl
out
ret
xchg
mov
dec
add
mov
mov
dec
cs
lods
outsb
mov
hlt
xor
xor
leave
add
inc
cmp
mov
cs
jnp
sbb
mov
outsl
in
ret
int
lods
ljmp
jnp
pushl
sbb
aaa
jae
mov
xor
mov
mov
ficompl
xchg
ljmp
mov
add
insl
js
xchg
inc
lods
mov
jb
outsb
mov
ror
jb
xchg
les
xchg
pop
mov
movsb
sub
test
push
or
jmp
cmp
and
or
sahf
xor
in
sbb
push
jg
jae
sub
mov
ret
push
sub
cwtl
adc
mov
ret
cmpsl
pop
xor
les
mov
push
imul
div
cli
adc
dec
cltd
cld
in
leave
int3
leave
inc
lea
inc
cmp
test
sbb
inc
push
popf
test
mov
ss
jle
pop
xchg
mov
add
movb
dec
int
addb
lret
cmp
cmp
mov
xchg
pop
cld
jns
push
fldl
xchg
ds
sar
xor
add
adc
arpl
repz
xorl
push
es
out
cmpsb
xchg
add
add
andb
shlb
rcrl
mov
jnp
in
icebp
scas
pop
sub
lahf
dec
mov
sbb
jne
movntps
mov
rclb
cmp
jmp
sub
adc
jb
jge
cwtl
int
das
movsl
movnti
xchg
xor
hlt
xor
push
sti
sub
inc
cmpsl
pusha
mov
or
pushf
or
jne
pop
pop
pop
xor
rcrl
arpl
or
xorb
subb
sbb
ficomps
dec
mov
mov
fmuls
stc
shlb
sub
arpl
xor
sbb
add
sar
or
shll
adc
dec
mov
stc
adcl
sub
push
jo
cltd
lret
sub
push
dec
imul
lods
pushf
sbb
mov
gs
mov
and
xchg
mov
sti
lds
add
pop
popa
xchg
jecxz
xor
sbb
js
lret
pop
lcall
popf
movsb
dec
pop
lods
xchg
enter
lods
push
dec
cmp
push
les
rorb
loope
xchg
repnz
adc
repnz
int3
xor
in
jmp
add
adcb
pop
xor
in
or
scas
out
push
sbb
addb
icebp
pusha
andb
test
pop
fcompl
mov
loope
push
jge
mov
push
jmp
rcr
mov
aaa
popf
xchg
mov
or
xor
jge
jg
jb
xchg
push
mov
sti
testl
aam
sub
jns
jne
sub
mov
pop
xor
lods
shlb
iret
repnz
mov
fcoms
or
ljmp
test
adc
mov
mov
sbb
sub
popfw
lds
jp
xor
add
xchg
sub
test
fisubrl
xchg
jb
add
movsl
xchg
and
decl
in
cli
loope
push
cld
mov
and
mov
divl
xchg
sbbl
jecxz
ret
out
adc
xor
movsl
imul
and
xor
pop
repz
jbe
mov
leave
movhps
inc
sub
pushf
inc
stc
xchg
movsb
push
jae
orb
sub
xchg
mov
jg
mov
pop
cltd
das
xchg
cmp
insl
inc
cmpsb
add
xchg
xchg
rorl
cmpsb
mov
mov
les
mov
mov
ret
adc
aaa
in
loopne
sub
movsb
mov
cmp
pop
mov
or
or
add
out
xlat
or
mov
sbb
hlt
ret
dec
or
xchg
jl
movb
sahf
adc
pushf
push
leave
jecxz
and
xchg
push
and
je
divl
not
addr16
ljmp
jne
jle
jge
pop
in
cwtl
ja
ret
mov
xchg
and
es
push
rolb
pop
adc
inc
push
rep
cmp
add
xchg
enter
scas
push
sub
mov
xor
mov
ds
shl
mov
enter
test
dec
dec
sbb
push
inc
test
sub
inc
dec
jnp
mov
dec
ljmp
out
aaa
outsl
fidivrs
mov
inc
sub
js
add
push
dec
pop
fildl
stc
cmp
fisubs
mov
int
loope
mov
pop
mov
loope
push
fwait
loop
bound
into
xchg
es
adc
pop
cmp
popf
adcl
adc
mov
xlat
or
rclb
insb
fwait
sbb
lret
or
out
pusha
std
jno
xor
mov
mov
inc
pop
and
icebp
lret
in
into
movsl
shll
push
lret
pop
xor
pop
cltd
cmpb
loopne
inc
ss
aas
test
pop
fadd
xchg
mov
mov
or
jge
mov
ret
test
mov
ja
xchg
in
int3
pop
stos
dec
sbb
stos
mov
loop
pop
inc
icebp
jecxz
in
cli
and
jbe
and
adc
lret
mov
and
mov
cmp
sub
push
lods
jae
outsl
icebp
and
or
cmpsl
in
loopne
sahf
and
xor
idiv
xchg
lods
mov
and
lods
ret
push
fildll
and
das
sbb
mov
or
in
lret
scas
test
test
pop
insb
pop
mov
decb
ret
mov
jl
xorb
pop
mov
jno
lcall
cli
adc
push
push
loop
jge
rcr
ffreep
lods
pusha
int3
cmp
dec
or
decb
push
pop
fs
fnsave
and
mov
or
cmp
or
jb
subb
movsb
stos
dec
mov
xchg
loopne
out
fcmovne
add
scas
pop
adc
xor
sub
daa
sahf
jne
pop
and
call
lret
push
int3
push
hlt
mov
test
sub
loop
xchg
xchg
loop
stos
fists
sahf
cmp
hlt
and
stos
lds
sahf
jmp
lcall
or
lods
les
xchg
jmp
addr16
in
stos
jecxz
dec
sub
repnz
xchg
dec
popa
and
inc
jns
mov
loope
inc
push
cltd
icebp
jbe
mov
sbb
add
lock
sar
push
pop
outsl
cmpl
fisubs
mov
out
ljmp
scas
and
pop
out
add
sub
xchg
cmp
test
add
paddb
mov
mull
sarb
inc
mov
scas
xor
lea
push
lahf
pusha
fcoms
sahf
jo
mov
aas
pop
mov
mov
inc
sbb
into
dec
push
insl
mov
fwait
test
ficoml
jo
daa
int3
pop
lods
lcall
pushf
push
cmp
mov
mov
gs
adc
sahf
lret
repz
adc
inc
movsl
dec
pop
rolb
lods
je
les
or
jne
or
or
or
hlt
jp
inc
jg
pop
int
jns
add
or
mov
clc
es
push
mov
or
into
xchg
ret
lahf
or
jg
fsubrl
shl
pushf
aad
xchg
mov
inc
out
mov
insl
out
mov
loop
xchg
pop
sbb
popa
call
sbb
enter
inc
shrb
sbb
jae
xor
in
cmp
mov
sbb
push
mov
dec
jmp
in
dec
inc
dec
xchg
std
lahf
mov
xchg
or
sbb
movsb
sub
ss
sahf
xor
dec
mulb
out
dec
dec
mov
mov
lock
fisttpll
movsl
or
hlt
aaa
enter
push
rcrl
aad
xchg
xlat
mov
in
push
dec
xchg
cltd
push
andl
jne
and
cmp
jg
jmp
int3
cmc
fsubp
inc
scas
mov
dec
call
mov
fadd
les
sbb
jns
pop
inc
in
shlb
sarl
push
jecxz
adc
out
ja
pushf
loopne
xor
or
bnd
mov
cmp
out
mov
cltd
dec
xchg
movsb
sbb
mov
aaa
cwtl
add
xor
and
lahf
dec
bound
popa
cmovs
call
idivb
pop
inc
dec
or
ss
sbbl
mov
fstl
add
jne
in
test
pushl
and
sbbl
cmp
cli
ss
add
pushf
cmp
inc
incb
xor
test
in
outsb
sti
iret
repnz
arpl
movsb
pop
insb
xchg
push
test
outsb
and
jnp
pop
mov
arpl
ficoms
dec
aas
mov
test
push
popa
cmp
into
xor
push
aad
mov
sti
repnz
arpl
jae
call
daa
xor
sub
out
pop
ret
cmp
mov
stos
insl
out
add
sbb
lret
pop
addl
cmp
xchg
inc
xor
pop
lahf
mov
fsubs
mov
in
add
jmp
ljmp
out
js
rcl
lret
int3
outsl
adc
xor
mov
mov
mov
test
dec
sarl
mov
mov
add
ljmp
rcl
es
loope
sahf
es
arpl
adc
aam
mov
cltd
das
push
and
sbb
andb
push
add
dec
mov
cwtl
sahf
test
inc
pop
fisttpll
cmp
pop
mov
pop
scas
sbb
jno
inc
idivb
pop
testl
pop
sarb
test
repz
inc
sub
inc
cmp
bound
add
fisttps
sbb
inc
es
sub
pop
or
in
jp
xor
dec
clc
jno
repz
mov
sbb
and
insb
stos
push
or
push
xchg
mov
jge
sbb
ror
cmp
and
sbb
sub
nopl
dec
roll
push
fnsave
loopne
daa
mov
jno
aam
outsl
stos
adc
hlt
jbe
adc
sub
ljmp
sbb
lea
mov
push
lods
lret
pop
adc
ffreep
inc
enter
jno
das
jge
cmpsl
daa
pop
push
and
pop
fwait
repnz
or
ljmp
adc
cmp
jp
les
xchg
mov
jge
pop
xchg
inc
dec
jmp
stos
mov
inc
jbe
push
sbb
fcompl
and
inc
mov
inc
add
scas
je
shr
pop
mov
int3
dec
cmpsl
mulb
push
lea
inc
mov
pop
push
dec
popa
push
jecxz
sub
adc
mov
int3
and
sub
negb
lods
in
mov
mull
push
mov
sub
sarl
lods
iret
and
mov
decl
mov
sahf
xchg
or
scas
pushf
push
mov
shr
outsb
decl
ret
movsb
in
cmp
jae
rclb
sbb
pop
add
rolb
insb
mov
and
xchg
lods
mov
jecxz
dec
incb
fisubs
pop
mov
dec
insl
jbe
bnd
lcall
sub
loope
stc
das
adc
scas
push
fimuls
mov
rcrb
jle
inc
or
mov
cmpsb
jp
xchg
cmp
ret
xlat
and
push
out
xchg
jns
adc
cmpsb
ret
stc
movb
adc
out
sbb
rcl
data16
aam
shl
jo
sub
sbb
xor
lods
mov
or
add
or
imul
dec
lret
pop
mov
scas
js
lods
xchg
adc
push
mov
lcall
in
bound
out
xor
xchg
mov
jecxz
cmp
in
adc
loope
repnz
fprem1
daa
insl
bound
out
imul
imul
jmp
push
into
inc
mov
mov
mov
mov
dec
lods
arpl
jno
mov
in
cwtl
lea
adc
icebp
es
pop
out
xchg
add
xchg
test
xor
ret
stc
jo
cli
outsb
repz
mov
clc
dec
cmp
xchg
inc
mov
pop
adc
cmpl
inc
in
cmp
jge
sub
fistl
lea
imul
jns
je
cmp
pushf
les
or
pop
inc
pop
insb
pop
in
inc
mov
outsb
push
push
sub
push
cltd
mov
sti
pop
mov
adc
cld
ja
jl
adc
dec
and
pop
cwtl
addr16
je
sbb
mov
jno
dec
shll
pop
outsb
dec
insb
push
xor
out
les
lret
enter
pop
cmpsb
add
loop
mov
sub
dec
pop
outsb
pop
notl
sbb
stos
adc
xorl
xor
fwait
out
or
xor
test
mov
movsb
aas
jl
enter
mov
jl
xchg
cmp
arpl
and
pop
mov
rolb
fldcw
aam
xor
dec
mov
movsb
lea
testl
sub
out
popa
sbb
mov
push
ret
jne
fs
dec
addl
sub
mov
lods
leave
mov
xchg
test
push
or
outsb
gs
cmp
push
jne
arpl
add
repz
add
in
sub
jmp
xchg
test
adc
arpl
std
mov
pop
lahf
jbe
jecxz
sarl
in
mov
pop
negb
sahf
or
insb
push
fld
in
add
mov
rorb
or
je
mov
mov
and
lods
push
mul
mov
pusha
popa
adc
pop
leave
imul
pop
jbe
outsl
loopne
push
loopne
daa
and
nop
shlb
pop
pop
je
das
mov
shrb
es
cmp
and
xor
shl
push
pop
in
stc
dec
test
sbb
jbe
fs
outsb
sbb
jo
pop
xor
lcall
mov
mov
add
xor
push
filds
sub
inc
xor
xchg
add
and
daa
push
mov
push
xchg
cld
cwtl
pop
mov
shll
and
cli
push
xchg
push
sbb
lods
or
hlt
xor
jbe
daa
pushf
insl
push
adc
lcall
mov
popf
bound
mov
rol
xor
xor
or
test
cld
mov
or
push
jp
add
insb
test
pop
bound
push
add
add
loop
je
add
mov
popf
adc
das
mov
sub
ds
cmp
addr16
js
test
or
push
xchg
fildll
pop
aas
sbb
cmovbe
jo
add
fimull
add
movsb
aas
mov
ret
test
and
or
scas
cmpsl
mov
les
cmpsb
sbbl
testl
xchg
dec
dec
fistl
jb
cltd
xor
sarb
sti
das
in
pushl
repz
lret
jge
mov
pop
cmp
orl
loopne
movntq
out
cmpb
cmp
test
adc
sbbb
or
mov
mov
xchg
hlt
xorb
pop
xchg
pop
aam
rolb
sbb
ljmp
aaa
inc
sbb
sub
add
or
xchg
or
jp
cmp
sub
sub
fisubs
jbe
ret
jbe
nop
inc
int
into
testb
pusha
rolb
out
fwait
mov
cld
inc
je
icebp
sbb
inc
mov
loope
add
mov
cmc
sub
outsb
xchg
jcxz
dec
sbb
pop
sub
push
dec
add
neg
sbbb
mov
out
sub
aad
lret
push
pop
sarl
adc
mov
dec
cwtl
fxch
mov
pop
and
aad
jg
add
mov
pusha
stc
dec
and
jp
xchg
sub
mov
dec
dec
and
cmpb
loop
fstps
inc
mov
aas
xor
cmpb
jge
push
pushf
stos
fwait
mov
jl
mov
xchg
xor
rorl
cmp
push
xor
call
idivb
inc
mov
in
sbb
outsb
test
sbb
cld
mov
data16
enter
xchg
and
cld
mov
jnp
mov
shld
sbb
imul
xchg
xlat
test
stos
ret
insl
out
cltd
repz
aad
inc
ret
pop
in
std
sbb
fnstenv
fisubs
paddq
push
sbbb
test
in
sti
adc
arpl
or
pop
gs
loop
subl
fisttps
outsl
dec
mov
mov
jnp
nop
lods
mov
or
int3
xchg
out
sbb
mov
adc
shll
hlt
lret
ficomps
or
add
and
push
xor
loop
lea
aas
in
mov
dec
push
test
push
mov
jno
or
es
add
popa
pop
jo
cmp
inc
mov
call
loopne
sbb
adc
cmp
pop
int
push
lock
fs
mov
ret
mov
mov
push
mov
movsb
xchg
enter
inc
pop
pop
mov
sub
les
add
roll
ds
add
popa
pop
es
icebp
pusha
stos
stc
fistpl
sub
sbb
sub
jbe
jp
out
stos
xchg
aas
push
jl
jb
cmp
orb
push
pop
push
xor
push
or
ss
cmp
dec
stos
shl
loop
inc
inc
pop
mov
out
mov
aad
and
ret
cmc
pop
enter
jnp
cmc
roll
xchg
mov
icebp
lret
xchg
mov
jae
or
push
push
adc
push
pop
das
xor
es
or
cli
or
cmp
sbbb
mov
rclb
jb
aaa
lret
adcb
enter
sahf
popa
data16
testb
daa
cli
ja
jns
jp
idiv
mov
add
mov
mov
push
int
xchg
das
in
loope
divl
sbb
es
cwtl
lea
adc
xor
cmpsb
hlt
leave
inc
mov
sub
sahf
pop
xor
adcl
push
cmp
rcll
mov
in
mov
ss
or
add
xor
adc
hlt
cmc
imul
inc
inc
add
inc
xchg
mov
xchg
sbb
insb
mov
shll
repnz
xor
ljmp
and
mov
lods
adc
mov
jno
mov
sub
sub
fwait
data16
shl
mov
mov
sbb
je
repnz
lret
and
sub
cld
xor
and
cmp
adc
push
jmp
sub
dec
dec
push
test
in
icebp
in
inc
test
sahf
dec
mov
or
xchg
add
sub
sarb
insl
dec
pop
push
data16
ja
test
shll
pop
pop
notl
iret
das
mov
cmc
scas
push
and
pop
xchg
js
jne
loopne
or
sub
imul
movsl
fldenv
adc
mov
dec
imulb
xor
sbb
mov
mov
dec
xor
sar
stos
inc
jecxz
dec
mov
ljmp
leave
jns
rclb
adc
xchg
loop
xorl
lcall
scas
mov
dec
loop
inc
repnz
cld
and
sbb
je
test
dec
leave
ja
and
and
jnp
stos
sub
or
sbb
inc
sbb
movsb
sub
fcmovnbe
push
adc
arpl
push
jmp
and
jmp
popf
addl
jmp
pop
inc
xorb
dec
fldlg2
dec
ret
adc
adc
mov
test
push
arpl
sarl
das
jge
jnp
stos
es
adc
test
xlat
les
push
sbb
mov
stos
adc
and
mov
mov
pop
sbb
imul
nop
push
pop
xor
cmpl
scas
stos
cli
lret
std
pop
xor
adc
sbb
cwtl
cmp
mov
mov
xchg
mov
out
lret
jb
lret
aam
jbe
pop
lock
jne
xor
int
sbb
shll
stos
arpl
push
xlat
enter
mov
movsl
mov
sbb
pop
jne
cmp
jne
push
out
jge
add
sbb
xor
sbb
mov
aad
lock
stos
out
lods
add
mov
or
dec
negl
shl
add
xchg
pop
clc
sub
mov
into
insl
ljmp
and
movsl
repz
fmul
orl
jo
xchg
add
imul
shll
loope
push
hlt
enter
filds
lcall
pushf
sbbb
mov
xchg
cmp
lcall
or
sbb
or
sbb
sbb
in
jno
shlb
adc
adc
arpl
adc
or
xchg
add
out
xor
scas
or
add
lret
scas
das
sub
dec
mov
jns
jne
mov
inc
sub
jae
lods
jbe
push
loopne
mov
call
cld
jns
xor
add
pop
movl
adc
insl
mov
xor
push
lahf
rcrb
xchg
jle
mov
out
fistpll
out
sti
and
insl
mov
jle
fwait
adcl
lods
das
cld
insl
dec
fisttpl
mov
adc
js
repz
iret
ret
mov
les
jno
push
jp
mov
sub
jmp
jp
xor
mov
add
push
idivl
arpl
push
int
cmpsl
mov
daa
cmp
inc
das
inc
mov
call
lods
ret
pop
jge
cli
adc
mov
out
ficomps
mov
jae
adc
fnstsw
xchg
jle
pushf
insb
inc
loopne
mov
fistpl
dec
xchg
test
ja
cmp
dec
mov
repnz
ret
mulb
fadds
cltd
jg
adc
je
push
fidivs
fstpl
cmp
out
cs
addr16
add
test
or
sbb
movsl
xor
add
fdivrl
xchg
fld
cmp
lcall
push
loope
add
lds
divb
popf
lret
dec
xor
lods
sti
xor
mov
cmpsb
out
cwtl
or
gs
enter
mov
lret
clc
mov
xchg
cmpsl
out
sub
out
je
sti
rorb
mov
xchg
sbb
ret
es
lret
rclb
cld
xchg
dec
push
mov
insb
in
xor
test
loope
aad
pop
ja
adc
push
sbb
repnz
testl
pop
xor
mov
add
sub
cmpl
loop
repz
js
pop
jecxz
pop
dec
cmpsb
xor
cmpsl
enter
jge
lahf
xor
cmp
sti
out
pop
dec
pop
mov
add
push
add
daa
mov
stos
push
pushf
pop
sub
jb
not
or
jnp
out
fcmovbe
pop
inc
inc
icebp
push
sbb
arpl
aas
jae
dec
lahf
pop
es
sbb
push
inc
fdivr
addr16
aaa
sbb
sbb
add
js
dec
in
pop
fs
sbb
ss
and
add
cmp
push
dec
int3
notl
das
jecxz
and
sbb
mov
bound
lods
lods
cmp
loopne
ss
or
xchg
cwtl
jb
pop
inc
sub
cltd
jo
into
lret
ficompl
dec
mov
cmp
das
rcl
popl
mov
out
mov
push
pop
or
insb
jl
cmpl
aad
in
sti
inc
jns
or
sub
xchg
and
mov
cmpsl
mov
pop
push
test
loope,pt
and
cld
push
jbe
and
dec
sbb
bound
scas
sbb
das
mov
add
mov
jecxz
inc
pop
dec
and
mov
sub
cmp
fcomps
cmp
and
sub
fwait
cmp
sub
push
pop
or
xlat
add
cmp
test
sti
popf
push
or
sbb
mov
cmovae
aam
bound
fdivr
pop
inc
adc
xor
inc
testb
jno
jae
mov
push
and
add
dec
mov
stos
rcl
test
mov
push
lret
mov
or
arpl
dec
sbb
inc
push
cmp
stos
mov
lock
add
and
sbb
pop
mov
enter
aas
shrl
sbb
loopne
nop
cmp
repnz
dec
pop
out
or
rcrb
add
in
cwtl
adcl
or
and
cmp
add
xor
add
cmpsb
test
dec
jne
call
lahf
pusha
push
inc
mov
ljmp
jno
dec
add
push
enter
clc
fnstcw
adc
add
sub
add
addb
mov
push
add
sub
inc
stos
adc
enter
inc
fxch
adc
aas
les
mov
cmp
stos
loopne
inc
shll
pop
push
stos
aad
push
xchg
or
push
sahf
sub
or
inc
xor
xor
mov
cs
xlat
sahf
inc
pop
repnz
aas
add
imul
xchg
jnp
cmc
icebp
lret
mov
sahf
imull
xor
xchg
cmp
or
adcl
sbb
lods
lods
and
add
mov
nop
ror
stos
mov
sbb
mov
in
out
int
pop
popa
adc
out
repz
jle
idiv
adcb
sub
cmpsl
pop
cld
sub
mov
in
into
insl
pop
ret
bound
cmp
lods
xor
lods
jb
xchg
xor
dec
add
loopne
test
cmp
clc
adc
sub
xchg
fwait
cmpsb
icebp
push
mov
xchg
add
xchg
test
sub
test
gs
stos
addr16
adc
xchg
cmp
mov
ret
mov
shlb
cmpb
test
enter
cmpsl
clc
lods
mov
fwait
sbb
dec
mov
push
mov
shll
adc
adc
decb
jp
inc
sti
pop
adc
lcall
mov
xchg
fisubs
frndint
cmp
jne
fldenv
sub
mov
add
cmc
and
popa
insb
sub
xchg
shlb
lock
int
movsl
xchg
mov
sub
in
std
stos
cld
ret
sub
xchg
rcrb
ljmp
int3
mov
cmp
jge
lret
aad
xchg
mov
inc
cmc
xor
aas
movsb
pop
mov
mov
or
sbb
mov
sbb
jp
push
xchg
inc
aaa
es
mov
js
pop
mov
ret
loop
out
pop
jbe
fwait
je
push
popa
pop
mov
jp
sysret
mov
xor
jbe
daa
dec
cmp
js
inc
ljmp
mov
xchg
std
push
ret
cmp
movsb
mov
inc
repnz
sbb
xchg
movsl
push
and
mov
into
jo
add
ss
rorb
sbb
das
cmpsl
fs
sub
jbe
in
xchg
dec
cmp
bound
or
enter
pusha
daa
lret
mov
test
div
fninit
xor
or
push
jle
cmp
pop
out
xchg
ljmp
add
mov
jns
orl
fdivrs
aaa
push
ret
cmp
jmp
mov
movsb
cmp
out
dec
stos
xchg
shrl
das
or
aaa
stc
push
adc
hlt
inc
pop
mov
inc
lcall
push
xor
popa
jno
aas
mov
mov
shlb
cmp
ss
xchg
and
xor
push
push
mov
mov
mov
dec
sbb
dec
iret
inc
inc
inc
arpl
xor
pop
add
iret
hlt
fdivrs
mov
mov
out
sti
sub
or
ljmp
fisttpl
pop
sbb
adc
xor
shll
mov
daa
sbb
test
sbb
or
cmpsb
subb
or
cltd
aam
jmp
fs
clc
pop
push
or
dec
pop
xchg
les
mov
aad
inc
rol
inc
mov
test
rcll
sbb
xchg
dec
mov
popf
lea
insl
lea
adc
je
pop
cld
xchg
scas
sub
mov
jle
cli
movsl
rcll
and
mov
ret
loopne
fcomi
in
or
xor
repz
cli
sub
testb
mov
fwait
lds
pop
rolb
dec
aam
inc
or
fs
cltd
fsubp
les
push
xor
xchg
and
mov
call
adc
push
inc
aaa
repz
sub
jb
add
icebp
mov
imul
into
dec
mov
jg
cmp
imull
inc
dec
test
and
ss
clc
mov
dec
push
testl
popa
add
shll
pop
icebp
jg
adc
lds
and
inc
dec
and
mov
jae
in
lock
pop
fs
movsl
and
mov
cli
mov
adc
add
popa
bound
mov
xchg
cvtps2pi
inc
jmp
jge
sbbb
loop
std
test
adc
xor
sti
sub
mov
js
pop
pop
lds
and
push
sbb
out
mov
test
dec
cmp
xchg
div
cmpsl
movsb
sbb
pop
dec
out
clc
dec
cltd
and
jmp
sahf
in
jge
cwtl
push
add
sub
daa
cmp
sbb
lods
mov
xchg
ficoms
test
add
je
fld
or
pop
jnp
adc
fnstsw
mov
adcb
inc
and
xchg
int3
fs
mul
add
push
push
bound
xchg
fdivrl
cmp
pop
stos
jbe
mov
ret
int3
push
sti
jge
xchg
leave
jns
aas
add
insb
and
pop
jg
lret
and
add
push
das
or
push
outsb
stos
dec
mov
adc
dec
adc
dec
or
js
das
fdivl
out
imul
cmp
outsl
jmp
jno
hlt
push
mov
xlat
into
iret
popf
cld
push
out
fcoml
push
movsl
arpl
jp
mov
mov
pop
adc
cmp
sub
inc
sub
negl
andl
and
cmp
mov
cmp
dec
pop
dec
inc
loop
ret
divb
mov
pop
repnz
inc
inc
fsqrt
mov
ds
push
sbb
fnstsw
or
inc
test
cmpsl
or
in
mov
inc
sbb
adc
mov
aas
dec
mov
dec
repz
dec
daa
rcll
or
icebp
push
jp
shrb
shlb
popa
scas
pop
ljmp
mov
sbb
outsl
mov
repz
repnz
outsb
jb
jns
mov
sahf
add
xchg
inc
mov
xor
inc
mov
sub
cs
inc
lcall
xchg
mov
sbb
andl
jl
mov
inc
push
ljmp
jbe
insb
lret
xchg
popf
xor
lcall
pop
sbb
nop
ret
test
ljmp
and
xchg
mov
in
add
aad
scas
pop
jmp
mov
cmpsl
push
fcmovnu
adc
push
push
pop
mov
push
fisttpl
inc
fistpll
push
test
lretw
sub
jecxz
pop
mov
popa
cmp
sahf
inc
cmp
jecxz
and
push
out
imul
add
into
out
sub
jbe
test
jmp
jp
in
enter
shr
xchg
push
push
and
les
jmp
jg
fwait
divb
cld
stos
jle
ret
dec
mov
adc
mov
orl
xor
xchg
mov
inc
fs
cmp
jl
cwtl
inc
lods
and
in
add
sarb
je
cmpl
sub
cmp
iret
mov
icebp
out
shl
scas
dec
pop
or
cli
stc
inc
iret
jns
mov
test
lods
sub
or
xlat
dec
fidivrl
fisubs
xchg
scas
aas
pop
sti
sti
repnz
cmpsl
jae
mov
rolb
and
sbb
mov
test
and
je
jbe
push
cmp
cltd
adc
dec
xor
mov
aaa
xchg
mov
pop
adc
mov
jle
dec
jae
push
ret
repz
nop
out
in
xchg
xchg
andb
jp
jmp
mov
add
pop
push
dec
les
ss
dec
pushf
or
dec
test
jmp
inc
push
and
ds
jnp
jmp
test
imul
jg
push
inc
xchg
and
xor
push
movsb
rolb
mov
cs
ret
pop
shr
in
pop
rcll
push
ret
add
repz
mov
pop
fldcw
xchg
std
mov
push
ds
incl
pop
jg
enter
mov
sti
cmp
push
push
test
sub
lret
dec
fs
and
sbb
ja
daa
mov
dec
jge
push
shlb
mov
jb
dec
jo
xchg
ret
scas
xchg
or
and
mov
sti
cmp
jno
cmp
sahf
push
ret
cmp
sbb
or
jae
adc
or
add
xor
sbb
jae
minps
cmp
sbbl
ret
in
aad
sbbl
add
pop
and
into
in
push
add
loopne
outsb
sbb
ds
jbe
sbb
jne
pushf
jp
or
or
jns
lea
push
stos
mov
aaa
out
jmp
or
ss
es
in
cmp
xchg
insl
pushl
divl
test
xchg
outsl
mov
and
sbb
sbb
xchg
pop
pop
sbb
lahf
data16
es
xor
mov
dec
sbb
xchg
dec
lahf
inc
shrb
sti
ljmp
mov
xor
pop
aad
rcrb
lods
les
add
imul
sub
add
lahf
ret
mov
scas
insb
rorl
out
jge
in
lods
loope
pop
mov
je
push
lock
das
sbb
sub
pop
mov
sti
xor
rolb
cmp
jbe
mov
push
pop
imul
adcb
add
fiaddl
xchg
out
repz
shll
ljmp
push
jnp
jle
pusha
xchg
mov
push
adc
lock
pop
rcr
sbb
int3
xchg
sub
mov
nop
icebp
ja
popa
jbe
push
jp
xor
shrl
mov
jge
test
xchg
pusha
mov
fsubl
jno
ret
das
je
xor
ljmp
repnz
leave
std
rcll
aas
and
cli
test
jmp
add
jg
cltd
add
xchg
mov
lret
mov
pop
mov
cmp
pop
lea
lea
rclb
xlat
pop
mov
mov
xlat
cmp
inc
jl
mov
inc
pop
loop
pusha
xchg
jo
out
pop
xor
arpl
mov
xchg
xchg
lock
sbb
cmp
xchg
and
ret
adc
push
cmc
mov
xchg
daa
cs
lea
bound
andb
lds
or
leave
das
or
nop
push
inc
pop
sub
divb
negl
push
lods
or
xchg
pop
push
aam
ja
imul
pop
xor
jnp
jno
push
adc
mov
mov
lahf
jmp
dec
inc
push
mov
in
mov
dec
shll
das
xor
dec
std
push
aam
jnp
adc
outsb
mov
jle
adcl
and
mov
xor
jle
aas
mov
cmp
and
sub
mov
xchg
hlt
es
mov
cmp
sti
mov
aad
sbb
sub
pop
imul
lods
pop
xchg
insl
lock
jl
xchg
bsr
or
jbe
ljmp
orb
add
cmp
in
sbb
fdivl
xchg
inc
lock
fidivl
sub
test
mov
pop
push
into
xor
add
mov
xchg
or
test
cmpsl
push
jge
push
adc
inc
outsb
push
xchg
lods
adc
cmp
dec
jns
pop
mov
mov
ljmp
inc
mov
pushf
dec
testb
repz
and
inc
jg
mov
scas
jle
sti
es
sub
repnz
dec
cltd
fucomip
dec
or
lret
repz
pop
push
lods
add
xchg
mov
shl
add
ret
aam
xchg
repz
mov
out
pop
movsl
adc
pop
adc
les
mov
mov
out
aaa
lds
fcomip
push
out
xor
int
lea
ss
pushf
scas
dec
ret
or
mov
lock
jns
adc
aad
mov
jne
adc
jo
ljmp
scas
lcall
xchg
pop
repnz
inc
ss
cmp
cmp
les
xchg
stc
mov
inc
repnz
jno
lahf
xchg
pop
das
xchg
subl
mov
es
rcrl
adc
push
int
xchg
fxtract
into
mov
xor
cmp
inc
jno
popa
fcoms
inc
in
jge
orb
cmp
ds
in
jmp
loopne
insb
adcb
mov
jge
test
jo
adc
xchg
into
xchg
nop
ret
sbb
imull
aas
pusha
insl
sbb
out
mov
sbb
mov
aaa
ret
and
testb
and
scas
test
loop
sbb
sar
push
jb
add
jl
inc
cwtl
ficompl
push
cmpsb
scas
test
add
add
dec
lcall
lods
ja
inc
loope
mov
lcall
adc
fsubr
lret
fildl
xchg
int3
icebp
dec
mov
fisubl
cmp
addr16
sahf
mov
adc
imul
or
ljmp
mov
sbb
lds
mov
imul
push
repnz
pop
js
inc
xor
cmp
stos
xchg
cmp
fcomps
mov
imul
pop
sub
movsb
pop
add
fs
and
loop
das
dec
pop
sub
dec
inc
icebp
fmuls
ljmp
cmp
leave
aad
sti
cmp
or
aad
fbstp
lret
adc
adc
ret
and
sbb
lahf
pushf
lea
in
fnstcw
mov
pop
sbb
or
cmp
add
sbb
pop
cmp
lret
call
and
loop
dec
loope
adcl
in
roll
popa
test
pop
xor
or
mov
std
sbb
daa
push
or
aas
inc
test
out
lcall
fldt
xorl
lret
push
xorl
jmp
pop
cltd
jae
test
ficoms
inc
lock
mov
test
push
push
or
scas
scas
ds
jle
push
add
inc
int
sub
xor
neg
lock
push
call
pusha
xchg
shl
outsb
mov
xchg
xchg
in
lretw
xchg
iret
lods
pusha
mov
sahf
test
test
mov
push
mov
pop
leave
mov
mov
daa
cmp
mov
addb
icebp
popf
fdivs
ss
icebp
dec
xchg
adc
loopne
cld
out
lahf
sbb
add
movsb
xchg
and
push
dec
and
sub
clc
and
xchg
lret
lcall
arpl
or
shrb
pop
push
push
stos
mov
popf
out
insl
mov
ret
push
fldenv
add
sub
xchg
call
cli
cmp
in
rcrb
jp
xchg
mov
xor
cmpsb
cltd
mov
cmp
enter
ds
shl
push
xor
popf
or
insl
mov
dec
xchg
lods
repz
addr16
jle
decl
xchg
imul
fstps
test
orb
pusha
jmp
or
mov
ficompl
data16
push
cld
xchg
rcrl
xlat
jb
nop
xchg
or
mov
repnz
pusha
adc
jbe
stc
inc
mov
mov
xor
or
rorb
or
xchg
out
xor
pop
dec
cltd
mov
jnp
cmp
icebp
cld
lods
mov
jne
or
loopne
out
cmp
stc
sub
mov
sbbl
ret
imul
cmp
lods
mov
pusha
subl
pop
or
icebp
out
loopne
push
inc
push
sub
pop
in
push
imul
jb
xor
jne
out
in
pop
je
stc
mov
mov
pop
in
pop
xor
jecxz
push
mov
sub
shl
mov
inc
push
adc
mov
fimull
xchg
das
decl
fstl
nop
test
add
test
jnp
mov
aas
mov
mov
jb
xchg
sbb
mov
adc
dec
fildll
push
dec
cmpsb
mov
stos
add
xchg
dec
in
mov
cmpb
stc
sbb
add
push
aam
sub
aad
outsl
mov
rorl
dec
mov
or
aaa
inc
push
insb
push
cld
ret
jmp
std
mov
or
lods
outsl
jno
lods
mov
ja
xor
mov
push
mov
out
fdivl
inc
mov
fstps
jns
sbb
cmp
push
repnz
add
scas
or
shlb
outsb
loop
mov
pop
mov
dec
scas
stos
int
addr16
shlb
loop
and
pop
push
push
stos
dec
sti
test
into
popf
mov
fadds
aam
push
es
bound
cmp
dec
pop
xor
jecxz
xchg
add
sbb
push
leave
mov
bound
and
lret
cli
jmp
ja
cmp
mov
or
pop
jb
push
xchg
je
xchg
mov
in
pop
ror
push
gs
imul
pop
mov
jge
sbb
adc
push
and
sbb
cmc
jo
and
out
leave
out
in
mov
mov
daa
and
jmp
lods
lods
pop
lds
mov
aad
int
lds
xor
xor
push
push
push
or
dec
inc
fidivrl
fwait
das
sti
mov
mov
jmp
call
in
repz
cmp
sbb
ss
and
mov
inc
in
sbb
out
add
and
jp
mov
sbb
or
or
pop
pop
mov
pop
mov
xchg
mov
fwait
cltd
adcb
push
or
lret
cld
xor
out
xchg
fcmovu
fdivrl
pop
out
popf
das
popf
popl
adc
xchg
into
gs
mov
mov
or
jns
sbb
cmp
or
fs
in
or
cld
dec
cmc
pop
paddb
insl
stc
shrb
cvtdq2ps
sbb
inc
lea
cmpsl
adc
icebp
fwait
call
xor
xor
inc
in
lretw
pop
rorl
dec
icebp
xchg
cld
mov
dec
pop
or
mov
jno
sbb
pop
sub
ret
inc
sub
in
sbb
inc
mov
dec
jg
ja
push
jno
rorb
pop
mov
push
sahf
mov
dec
lock
test
mov
lods
add
testl
jo
into
sbb
push
ljmp
and
xchg
test
inc
cs
stos
in
aam
lock
es
dec
imul
stc
push
test
ret
mov
out
mov
jmp
push
ja
mov
call
loop
aam
or
ds
testl
jns
jmp
test
loop
stos
sbb
pop
out
nop
sti
or
pop
incl
add
out
out
add
es
lods
je
jl
add
imul
add
insb
ja
lods
pop
mov
loopne,pt
pusha
cwtl
jb
data16
outsb
and
dec
add
aad
push
test
cld
mov
xlat
jnp
mov
cwtl
and
testb
cmp
mov
sbb
inc
mov
xor
adc
xor
nop
in
enter
jns
clc
pop
mov
inc
mov
xor
push
dec
cwtl
ljmp
rorb
pop
jmp
lds
xor
lods
lcall
cmp
mov
mov
stc
iret
or
stos
sbb
in
ret
sub
lahf
icebp
xchg
or
lock
xchg
add
loopne
adc
jno
les
out
sub
pop
add
int
add
stc
dec
dec
es
out
frstor
mov
sarl
pop
stos
mov
xor
jns
nop
or
jns
into
inc
dec
mov
pop
sbb
ret
push
cmpl
sti
jne
or
push
inc
push
jp
shrb
mov
jb
adc
mov
sub
icebp
iret
aas
mov
and
xor
mov
lcall
fstl
mov
in
and
mov
xor
mov
lods
mov
sti
dec
pop
dec
insb
push
or
add
icebp
insb
cmpsl
imul
push
pop
les
xchg
mov
mov
fidivrs
inc
xchg
mov
mov
iret
adc
pop
mov
pop
pop
int
and
mov
addr16
mov
jl
fistps
push
sbb
mov
mov
shlb
sbb
inc
aas
lds
out
call
sub
cmpb
push
inc
stos
xchg
add
cli
pop
stos
test
lret
mov
mov
mov
sahf
aas
xor
dec
lock
shlb
fcomps
xchg
mov
or
test
pop
mov
jle
pusha
divl
int3
sbb
lods
or
mov
jge
mov
sahf
addb
gs
nop
cs
stos
lret
cmp
leave
pushf
adc
iret
ret
call
ja
and
dec
test
and
adc
test
and
sbb
rcll
xor
imul
fcoml
inc
sbb
addb
or
pushl
lret
jp
ret
test
cmp
jmp
xor
adc
ja
push
addr16
andb
mov
cmpb
pusha
sub
mov
sti
sub
in
ret
dec
push
popf
dec
cmp
and
pop
sub
imulb
xlat
fmulp
fcom
and
leave
push
bound
test
ds
mov
sbb
jae
jecxz
faddl
es
gs
lahf
add
daa
jl
jno
sbb
mov
hlt
into
add
mov
mov
or
sahf
mov
mov
xor
adc
call
xchg
inc
jecxz,pn
pop
xor
leave
mov
js
sbb
jae
addr16
jno
add
inc
push
or
or
xchg
inc
or
cmpsl
adc
xchg
pop
mov
inc
xchg
outsl
xchg
pusha
add
xchg
lea
jnp
pop
aam
pop
incl
lock
imul
push
pushf
shrb
cmp
test
mov
sbb
bound
pop
cmpsl
inc
adc
dec
cmp
mov
mov
imul
dec
jae
adc
lock
daa
push
jo
std
add
mov
icebp
sbb
out
inc
jmp
xor
cli
mov
sbb
pop
ds
aam
cld
inc
mov
arpl
les
mov
mov
dec
sbb
add
push
add
pusha
in
xchg
icebp
popf
and
jp
aas
arpl
pop
popa
repnz
mov
icebp
pop
decb
jg
data16
and
imul
cmp
push
std
je
inc
mov
add
test
nop
xor
jns
ss
rorb
fistpll
inc
xchg
out
cmp
cmc
fdivrl
jne
stc
push
dec
repnz
scas
xor
push
repnz
das
push
push
pop
xchg
push
mov
and
dec
fists
cld
push
pop
sub
movl
push
arpl
push
shrb
dec
fimuls
setne
shll
mov
push
cltd
addr16
lock
cmc
orb
lret
fsts
daa
mov
cmp
lods
test
popf
pop
out
pushf
lea
inc
movsl
adc
inc
outsb
ja
scas
outsl
stc
ret
dec
lea
or
mov
dec
fbstp
mov
cmp
and
lods
shl
pop
mov
xorb
outsl
cmp
xor
dec
leave
in
push
les
scas
push
jmp
cmp
push
stc
add
jge
mov
cmp
mov
sahf
bndstx
hlt
xchg
loope
dec
mov
or
adc
or
mov
mov
popa
lahf
xlat
cmp
in
jno
xchg
pop
pop
mov
mov
and
pushf
add
sub
aaa
mov
test
bound
push
inc
sbb
fisubl
mov
fwait
lret
cld
lret
adc
ja
and
cli
and
xor
mov
add
testl
mov
fadd
stos
add
xchg
mov
shlb
mov
inc
pop
mov
add
sub
and
imul
pop
jo
mov
sbb
push
jno
shll
es
sahf
cltd
scas
ret
sbb
scas
aad
subb
push
mov
sbbl
popa
ljmp
sub
fldt
sbb
add
fildl
ret
xchg
xchg
mov
xor
jbe
inc
xchg
out
pop
adc
sbb
imul
jns
rorl
outsb
and
push
es
cwtl
cmp
xchg
outsb
mov
aaa
frstor
jae
mov
ffreep
xlat
cmp
fwait
rolb
or
std
sub
lods
decb
jp
andl
mov
popa
cmp
mov
pushf
dec
jne
sbbl
in
xor
cmp
pop
sti
push
pop
out
cmp
lret
mov
ret
loop
mov
negl
rcrl
xchg
xchg
lret
test
lock
sti
fstpt
pop
xchg
or
sbb
add
jnp
pop
or
pop
cmpsb
and
lahf
mov
imul
insb
aas
xlat
xor
add
add
hlt
clc
pop
or
movl
out
dec
pop
lea
test
jmp
pop
push
shll
push
repnz
int
mov
add
mov
mov
in
insl
popa
in
iret
mov
dec
insb
fcmovnb
inc
mov
xor
push
test
rorl
mov
mov
popf
in
push
cld
addl
in
neg
push
push
dec
aaa
xor
mov
das
push
imul
arpl
mov
mov
and
sbb
sahf
les
push
enter
cld
cwtl
das
out
imul
or
inc
into
sub
inc
and
jle
fstpt
in
add
addr16
int3
filds
dec
adc
sub
sub
bound
add
jae
inc
ret
xchg
int
mov
out
jl
add
inc
int
test
int3
dec
idivb
ret
sbb
mov
aad
in
xchg
jne
xlat
jbe
dec
mov
movaps
sub
lea
ljmp
test
adcb
daa
add
pop
xor
sub
stc
pop
jl
pop
jmp
dec
dec
test
aas
stos
xor
out
cmp
lods
pusha
jle
add
xor
push
loop
push
adc
inc
jno
xchg
out
jns
inc
inc
mov
mov
and
push
lret
push
pop
jp
jge
call
pop
dec
sub
and
push
fstpl
sbb
scas
adc
je
loopne
add
or
sbb
in
xchg
rcrb
dec
xor
scas
inc
and
gs
sub
push
cs
adc
data16
cwtl
xlat
cwtl
fisttps
jnp
sbb
mov
aas
std
push
jne
jp
cmp
incb
mov
test
jnp
call
pop
mov
insl
imul
inc
jle
add
push
add
lcall
out
sar
sbb
jp
xchg
mov
sub
cmpl
sub
inc
cli
outsb
shll
sub
jmp
xchg
inc
jb
enter
cmc
or
mov
repnz
pusha
jbe
sub
mov
into
mov
pop
rorb
mov
sbb
mov
pop
inc
mov
and
mov
es
iret
cmpsb
lcall
movl
jge
ds
andb
out
mov
pop
and
jecxz
jo
sbb
push
in
xchg
cmp
cmc
cmp
stos
into
and
inc
incl
jns
imul
mov
bound
dec
ret
add
sbb
xor
fsubp
jno
jmp
adc
cmp
dec
pop
push
adc
add
push
mov
mov
movsl
lods
das
lcall
push
xchg
fs
pop
mov
movsl
pop
adc
fwait
lret
out
ss
and
sbb
push
mov
or
mov
cmp
pop
pop
xlat
rorb
js
mov
pop
loopne
xor
xor
jg
sub
mov
sbb
pop
xchg
call
pop
mov
sbbl
imul
in
orl
les
sbb
pop
lahf
lcall
mov
pop
pop
jae
inc
aas
mov
lods
shll
xor
sub
dec
pop
mov
dec
jno
js
arpl
cltd
jecxz
push
flds
mull
scas
xchg
je
ficoms
ficoms
xor
jne
jno
dec
and
icebp
lods
xor
mov
push
aaa
sahf
xor
pop
fstpt
rolb
fdivrl
ljmp
jbe
jo
pop
cmpsb
insl
gs
dec
push
lock
mov
int
lds
push
jo
in
mov
ficomps
repnz
dec
add
inc
dec
mov
xchg
aas
jo
push
add
or
lods
arpl
sti
call
mov
sbb
cmp
xor
mov
jne
inc
cmpsb
xor
rorb
enter
lock
jle
aad
addr16
jae
push
or
lret
pop
pop
mov
out
push
pop
cwtl
call
in
mov
inc
add
xor
sahf
xchg
mov
mov
fstpl
lret
cli
pmullw
in
jl
je
imul
push
insl
hlt
jg
lods
imul
lea
ja
xchg
shr
jns
or
push
repnz
imul
inc
mov
xor
xor
xorl
dec
out
test
and
sub
scas
sbb
sub
enter
in
in
bswap
in
push
cwtl
les
mov
insl
jp
pop
subl
test
jae
jnp
and
dec
push
ss
mov
imul
jo
cmp
test
pop
cmp
jbe
aaa
shll
pop
jns
add
lret
sbb
xchg
jo
mov
pop
shlb
pop
je
sbb
imul
lret
shl
push
dec
mov
sbb
das
mov
fs
pop
or
in
or
push
in
jno
aad
shll
mov
push
lds
or
divb
pop
cmp
lock
push
jle
ds
xor
movl
rcll
cmpsb
imul
jo
loope
je
lret
dec
mov
push
nop
push
and
outsb
std
push
mov
sbb
loope
inc
mov
std
nop
mov
mov
loopne
add
cmp
cmp
push
or
dec
ljmp
and
mov
pop
gs
dec
inc
les
add
jns
inc
cltd
je
and
mov
mov
cltd
sbb
sub
mov
stc
shrl
lea
fcmovb
inc
clc
adc
repnz
lret
mov
stos
repnz
xor
push
mov
inc
lahf
bound
fmuls
int3
sub
pop
nop
cmpsl
test
aad
xchg
add
mov
push
cli
test
rcll
inc
xchg
in
adc
xor
jmp
or
sub
rorl
in
cmp
pusha
push
lret
add
int3
add
or
or
out
test
call
fistps
outsb
cwtl
cmpsb
pop
ret
lock
pop
cmp
aaa
out
push
popf
notl
inc
in
xor
int
inc
aad
mov
add
in
jnp
gs
adc
pushf
imul
xchg
sub
aam
mov
scas
mov
inc
push
outsl
xacquire
frstor
pushl
pop
mov
mov
mov
movsl
insl
sbb
sarb
jne
out
push
and
sbb
inc
mov
stc
cltd
jae
sub
rorl
testb
popa
and
adc
pop
jge
jne
fsub
lcall
or
pop
mov
pop
ret
std
in
mov
hlt
sahf
cwtl
jp
or
add
cmp
lret
sbb
push
mov
out
mov
mov
icebp
jo
jecxz
sbb
icebp
mov
aaa
aaa
aaa
or
insl
mov
jecxz
lods
cs
mov
int3
fs
xor
push
lods
jl
ljmp
movsb
push
sbb
adc
pop
lods
inc
cmc
mov
mov
pusha
jp
inc
xchg
mov
fwait
es
mov
or
push
mov
bound
rorb
ret
add
fstpl
push
in
sahf
jg
mov
push
mov
adcb
testl
arpl
add
loope
xchg
out
outsb
in
jp
push
ljmp
pop
lods
jmp
mov
negl
xchg
imull
sub
mov
push
in
cmp
dec
dec
shrb
mov
inc
js
cld
stos
lret
dec
sbb
icebp
mov
lret
or
jl
fucomip
fiadds
xor
ret
dec
add
mov
or
int3
inc
test
out
rcr
xchg
and
hlt
leave
das
jl
mov
stc
outsl
cld
mov
xor
push
mov
or
in
and
lods
gs
test
pop
test
insl
call
cmp
xchg
popf
push
lret
fidivs
fcoml
ljmp
sub
shll
aaa
dec
mov
push
movsb
push
sbb
jo
xchg
repnz
popf
test
adc
add
iret
dec
xor
mov
jge
fbld
fsubr
push
push
addr16
repnz
fdivrl
add
outsl
es
adc
negb
xchg
jmp
or
mov
test
ljmp
push
adc
pop
enter
add
adc
mov
adcb
mov
xchg
adc
dec
jnp
testl
jo
popw
sub
add
out
jb,pt
fcomip
outsb
mov
push
mov
ss
js
sub
sbb
popa
jae
outsb
mov
adc
daa
or
adc
repz
std
test
sub
xchg
pop
mov
adc
adc
outsl
mov
popf
jae
gs
icebp
or
jmp
mov
xor
add
add
sti
std
ss
stos
mov
ret
out
pop
sub
add
push
fwait
sbb
mov
test
out
adc
push
in
xor
xor
jo
stc
pop
icebp
mov
pop
sub
cmpsb
inc
xor
in
inc
cmp
and
test
dec
jg
mov
mov
mov
cmp
notb
jo,pn
mov
inc
aaa
leave
mov
cli
cmp
nop
xchg
ret
inc
jmp
das
jmp
roll
fcompl
into
leave
push
inc
loopne
ss
xor
cmp
or
insb
arpl
lret
add
mov
inc
push
jae
and
sub
mov
push
hlt
out
insb
loop
adc
cmp
mov
and
xchg
hlt
repnz
lock
jl
ss
push
je
adc
push
cld
clc
mov
adc
fmuls
sbbb
jne
adc
inc
and
jb
mov
fstpl
faddl
pcmpeqw
push
add
jae
mov
mov
jge
ds
xchg
jp
fstp
add
cwtl
inc
int3
jb
or
imul
fwait
inc
mov
and
outsb
mov
jns
sbb
adc
pop
and
xchg
mov
nop
movsl
mov
fs
fbld
scas
and
inc
gs
stos
pusha
sbb
add
gs
cwtl
mov
fcmovnb
out
in
cmp
jle
cmpsl
or
stos
push
rcr
stc
test
std
rcll
mov
lock
testl
icebp
cmp
ss
out
xchg
fdivrs
mov
outsb
push
int
jb
cli
or
fsub
loop
out
push
std
inc
xor
add
les
mov
pop
mov
stos
outsb
repz
popa
iret
pop
lea
and
push
dec
jmp
cmp
jmp
lock
dec
xchg
hlt
jmp
mov
mov
lahf
cwtl
dec
ja
inc
test
pop
or
cmpsl
ljmp
mov
sbb
fnstenv
ds
sbb
xlat
pop
mov
outsl
lods
xchg
cli
mov
lret
mov
inc
push
inc
inc
cmp
push
pop
or
iret
mov
mov
cmp
mov
ds
xor
sbb
mov
and
mov
mov
xchg
out
rclb
cmp
scas
xor
pushf
cmp
adc
fadds
mov
pop
xchg
mov
mov
repz
mov
pop
pop
notb
sbb
mov
hlt
stc
inc
imulb
push
lds
cmpsl
in
add
mov
dec
adc
adc
xlat
sbb
xor
pushf
sub
sbb
push
data16
xchg
mov
stos
aad
icebp
je
stos
inc
dec
mov
push
std
mov
invd
lods
stc
fidivl
mov
cli
mov
cmp
pop
je
mov
outsb
or
jae
inc
sbb
adc
xchg
adc
idivl
mov
aad
aas
rcll
inc
cmp
popf
test
xor
pop
push
lret
xchg
arpl
es
test
mov
inc
movsl
leave
fcom
popa
adc
movsl
sub
push
clc
les
adc
int
fndisi(8087
bsf
cmp
lahf
insl
repz
jb
jg
call
in
add
lcall
and
adc
adc
jne
jmp
icebp
ljmp
popf
popa
ljmp
add
xchg
xchg
dec
imul
inc
imul
out
insl
push
sbb
push
cli
adc
ds
pop
xchg
test
jmp
cwtl
or
das
xlat
inc
aad
fiadds
nopl
and
adc
shrb
cmp
in
fiaddl
shlb
frstor
fistpll
inc
mov
andl
std
leave
mov
andl
pextrw
cmpsb
jl
xchg
aam
das
push
popa
lods
int
icebp
movsl
outsb
fldt
jle
adc
xlat
jle
adcl
and
pop
mov
jbe
nop
fldt
sub
in
fsub
call
or
repnz
sub
in
cltd
pushf
out
push
jae
test
sub
inc
push
mov
lea
lea
add
sbb
js
out
xchg
pusha
sbb
es
adc
pusha
es
cmpsl
push
mov
loope
bnd
or
cs
add
lret
ret
and
and
jle
in
xor
lea
sbbl
mov
adc
clc
sub
adc
mov
dec
out
or
insb
adc
repnz
test
int
dec
movsb
cmp
mov
pop
popf
mov
and
nop
cmp
leave
je
mov
add
not
data16
mov
in
or
add
sahf
sahf
mov
xor
dec
cwtl
mov
mov
int3
xor
jo
jle
xorb
xchg
lret
imul
dec
add
and
adc
xor
jp
mov
stos
xchg
leave
mov
std
and
xchg
mov
xor
incb
shrb
fnsave
ljmp
stos
jl
adc
mov
test
cltd
cltd
dec
adc
insl
jno
sarb
pop
mov
out
scas
mov
out
mov
sbb
loope
lcall
adc
cmp
sub
sub
mov
add
ljmp
push
pop
dec
xchg
dec
add
mov
xor
jbe
lods
pop
int
mov
sub
in
das
xchg
outsl
add
cli
jb
cmp
adc
xlat
sub
divb
inc
dec
pop
rcr
arpl
stos
stc
mov
scas
ljmp
sub
shll
xlat
or
lea
test
jo
mov
jbe
shrl
push
leave
pop
mov
enter
mov
xor
sub
ss
sbb
pop
cmp
jecxz
jge
or
inc
fwait
push
loope
mov
scas
loopne
daa
push
rolb
pop
in
jle
dec
negb
test
sahf
popf
mov
pop
repz
rolb
decl
fsub
mov
test
out
aad
scas
jmp
clc
clc
mov
lret
subl
stc
jnp
dec
cmp
fwait
stos
pop
rol
xchg
adc
cld
test
fdivrl
adc
ror
scas
cld
fisttpll
push
prefetcht2
out
push
icebp
xchg
push
mov
jno
xor
push
les
insb
xor
xor
xchg
sub
adc
or
scas
sub
push
rorb
sub
push
mov
je
in
pop
jmp
pushf
push
into
mov
pusha
xchg
daa
ret
and
negb
sub
push
xor
lahf
ljmp
xor
test
mov
xor
sub
pushf
std
and
imulb
rorl
push
sub
add
pop
fists
mov
dec
lahf
subb
cli
mov
js
xchg
sub
and
mov
add
aad
xchg
frstor
out
fwait
push
enter
pop
pop
sbb
in
out
jno
lahf
cmp
dec
sbb
mov
imul
dec
xor
aas
arpl
div
lods
rcll
cmp
xor
mov
xor
std
orb
shrl
xchg
push
mov
rcll
lods
dec
insb
pop
test
add
xchg
mov
push
lahf
jae
pop
xlat
testl
test
mov
dec
mov
xor
aam
jno
test
imul
mov
insb
shrb
mov
outsb
sub
mov
cli
adc
mov
adc
dec
data16
jl
into
sbb
je
cli
ljmp
lods
jge
std
push
mov
out
mov
cmc
and
pushf
andl
push
inc
lahf
and
and
cmp
pop
cmp
add
pusha
mov
inc
aam
clc
mov
int3
or
xchg
scas
jb
mov
dec
bound
inc
inc
stos
inc
cmp
repz
dec
pop
repz
cli
pusha
adc
jb
fstpt
or
cld
or
imul
fs
stos
sub
lea
ret
adc
jnp
loopne
aaa
inc
mov
jae,pt
shrl
loope
jl
inc
xchg
loopne
lds
int
and
jns
inc
fmul
mov
fwait
ja
sub
jae
ficoml
sub
xchg
sbb
mov
fwait
push
insb
adc
rcll
push
out
xlat
pop
lods
test
int3
mov
je
loopne
fsubrs
ret
clc
call
or
inc
lret
jbe
ror
add
sbb
insb
mov
mov
nop
cs
fsubrl
mov
mov
cmpsl
or
shl
inc
shll
jbe
cmpsb
clc
pop
jb
adc
lahf
sbb
call
xchg
shrb
ds
data16
xchg
sub
imul
notl
push
stos
mov
lcall
sub
adc
xor
pop
push
sub
aas
mov
enter
shlb
jmp
jb
jbe
fsubr
enter
and
mov
dec
ror
xchg
arpl
sub
jbe
mov
icebp
out
pop
ret
mov
and
orb
jmp
mulb
hlt
mov
fstl
in
adc
inc
push
int
inc
cs
xchg
push
push
popa
loope
jae
lahf
mov
or
rolb
std
das
push
push
mov
xor
jo
push
cli
sbb
lods
push
js
imul
insb
inc
lahf
jmp
fisttpll
rcr
and
push
imul
sub
pushf
cli
push
std
cmp
insb
out
adc
jp
ds
mov
pop
sub
int3
ljmp
mov
push
ror
decl
in
sub
adc
and
movsb
rorb
dec
dec
jl
xchg
cs
insb
test
testb
ret
stos
or
ret
loop
adc
xor
ds
outsl
das
xchg
adcb
and
pop
mov
mov
add
iret
pushw
fisttpll
jg
movsl
mov
xor
inc
addr16
fistps
fsub
mov
scas
lods
adc
fwait
jge
lret
add
adc
push
dec
lret
adc
sub
icebp
fstl
xor
rcl
add
enter
xor
push
pop
mov
and
fwait
in
jmp
adc
push
mov
mov
in
add
inc
sub
push
mov
xchg
dec
or
fcmovbe
inc
scas
cmp
cmp
add
cmpsb
jo
lahf
std
push
dec
push
push
push
or
push
jbe
fadds
lret
add
push
or
cmp
cltd
cwtl
mov
sub
cs
es
mov
les
jg
inc
xchg
and
int3
popf
scas
and
sahf
or
lcall
iret
arpl
shl
sbb
pusha
test
adc
pop
pop
fs
les
lods
inc
ja
mov
sub
repz
jno
test
enter
xlat
test
jbe
loop
pusha
cmpsb
sub
in
daa
xchg
call
jo
ja
imul
sar
stc
mov
xchg
inc
jns
or
ret
add
adc
add
daa
xchg
test
add
and
imul
or
ja
push
test
xor
pop
fdivrl
aaa
in
shlb
addr16
cs
int3
mov
insl
mov
pop
sti
mov
and
push
sub
push
mov
stos
cwtl
cmp
push
insb
sbb
enter
sub
cmp
lahf
popf
jge
lock
push
in
ja
jnp
pop
movsb
ret
mov
push
push
adc
movsl
xchg
xchg
lods
jns
xor
js
add
mov
idiv
and
push
and
xchg
fdivr
rcrb
sub
cmp
add
or
test
stos
sbb
ret
call
pop
lahf
loopne
mov
addr16
push
test
mov
and
test
adc
push
mov
inc
mov
push
or
cs
insb
fimuls
jbe
ss
or
cltd
or
pushl
or
pop
imul
fnop
aam
xchg
jb
sbb
mov
jl
mov
jge
fs
push
dec
cmovo
pop
sbb
subl
lcall
sub
dec
pusha
pop
pushl
loop
jne
stos
pop
cmc
push
ss
sbb
and
add
mov
pop
add
arpl
stc
and
mov
lds
dec
jmp
sub
in
mov
push
jmp
mov
cmp
sub
ss
ja
adcl
xlat
idivl
les
je
test
mov
jae
pop
push
insl
lea
mov
xor
mov
adc
fbstp
int3
clc
shl
mov
into
pop
aad
inc
adc
out
out
ss
inc
in
js
and
in
lahf
jno
test
cmpsb
pop
xchg
add
scas
mov
arpl
push
or
push
xchg
xor
gs
cmpsb
ja
imul
xor
fimuls
mov
add
loope
xor
jmp
push
pop
bnd
pop
adc
mov
inc
mov
cld
push
cld
loopne
push
cmp
test
mov
xchg
dec
mov
shrb
fisubl
into
popa
aas
jmp
mov
jbe
icebp
fimull
mov
xor
sub
cmp
cwtl
ss
and
pop
scas
ljmp
jne
and
sbbb
inc
dec
pop
mov
sub
sahf
add
mov
adc
or
pop
xchg
pop
xor
dec
shlb
lcall
jle
sub
sub
xor
sbb
pop
adc
sarb
loop
hlt
xchg
sbb
jo
popf
loopne
pop
xor
and
mov
out
movsl
shr
pop
js
out
xchg
int3
inc
out
pop
sbb
sti
loopne
adc
out
xor
push
popf
dec
jge
rcl
jg
aad
jle
or
pop
jle
jmp
xlat
mov
ret
xchg
sahf
int3
ret
je
mov
mov
mov
cmp
add
jbe
cld
cld
add
insl
mov
aas
lret
cld
mov
loope
rcr
inc
cmp
adc
or
shlb
sahf
mov
in
inc
xor
in
pop
daa
insb
jns
cmp
pop
iret
cmp
pop
test
xor
push
adc
push
sahf
lret
addr16
movsb
mov
ret
sub
leave
lea
adc
lock
stos
adc
cmp
and
sub
aas
push
mov
xor
add
pop
dec
sti
int3
stos
loope
xor
lcall
sbb
enter
or
xor
dec
mov
inc
jne
popf
xchg
sub
add
negb
orb
fistpl
jg
popf
ret
dec
dec
pop
or
and
cmpsb
adc
push
call
pop
adcb
loopne
dec
int3
cli
pop
aam
sub
jmp
mov
leave
add
out
mov
in
xor
mov
push
dec
pop
push
lea
cmpsl
xchg
sub
aas
ljmp
adc
pop
or
mov
inc
jecxz
sbb
pushf
xor
out
inc
add
xchg
call
fsts
arpl
jbe
sbb
dec
jb
test
enter
add
nop
add
adc
dec
dec
mov
xchg
mov
rclb
mov
jge
mov
mov
rcrl
ret
inc
loope
leave
adc
in
lods
xor
in
or
fsubrl
jnp
inc
mov
mov
lret
loopne
insb
or
dec
stos
enter
mov
js
mov
scas
mov
pop
dec
lretw
pop
leave
dec
xorl
push
jno
sub
es
jp
mov
repz
sbb
push
lock
fsubr
lahf
shrl
mov
dec
lahf
dec
rorb
adc
dec
pop
push
mov
add
rolb
orb
cli
mov
mov
les
sbb
das
xchg
sub
sti
leave
dec
and
or
xor
adc
les
lds
das
push
dec
in
ja
sahf
in
or
lods
pop
and
sar
sbb
cmpsl
popa
add
jecxz
adc
jnp
jb
mov
gs
xchg
inc
push
mov
das
sub
adc
mov
jb
dec
std
pop
xor
mov
jb
fsubrl
jg
fwait
mov
repz
mov
cmc
jle
xchg
mov
jb
sub
pop
ret
xorl
jbe
mov
dec
arpl
xlat
sbb
add
mov
lds
xchg
push
in
mov
adc
xor
in
sbb
cli
decl
aad
testl
pop
mov
shr
push
cmpsb
mov
lret
icebp
dec
pop
xchg
iret
cmp
sbb
jbe
adc
outsb
sub
mov
mov
sahf
mov
orl
call
push
fcmovnb
into
sub
sub
fisubl
sub
fldenv
xchg
arpl
enter
pop
add
in
xchg
cmp
addb
int3
pop
ds
push
xor
sarl
out
pushf
mov
xorl
aam
sbb
fsts
adc
xor
outsl
aad
push
xchg
add
jno
cmp
mov
fstps
cmc
dec
gs
push
dec
aas
ljmp
or
dec
adc
lahf
dec
jo
mov
or
dec
cltd
push
push
adc
xchg
arpl
imul
adc
imul
bound
sub
jg
imul
xor
out
ficompl
dec
or
pop
lods
mull
sbb
pandn
inc
pop
jns
mov
cmpsl
inc
mov
or
cld
mov
push
push
imul
shlb
inc
sub
sarl
and
or
pop
inc
call
jmp
mov
popf
mov
inc
push
out
lods
hlt
leave
les
xor
pop
dec
mov
inc
cmpsb
cmpsl
inc
jne
mov
push
orb
hlt
mov
call
cmp
jb
mov
push
in
xor
scas
dec
dec
sarl
or
xor
pop
mov
aaa
insl
sub
lods
pop
or
out
jecxz
fs
sub
adc
cmp
test
lret
push
dec
mov
mov
iret
jo
movsl
ds
or
push
sahf
rclb
fistps
pmulhw
rcrl
xor
push
jecxz
inc
xchg
mov
cld
subb
in
jb
mov
push
pop
jle
jno
mov
adc
sahf
xlat
jecxz
ret
int
add
aam
cwtl
movsl
jb
cli
and
adc
xchg
cmp
adcl
mov
outsb
mov
xchg
shl
cmp
cld
push
or
in
pop
push
mov
jecxz
pop
or
jmp
xchg
sub
xlat
add
stos
pushf
test
xchg
mov
adc
mov
int
cwtl
out
cmp
mov
and
sub
mov
mov
adc
lahf
pop
sub
dec
icebp
int
ret
nop
stc
repnz
bound
push
mov
inc
dec
mov
sub
mov
inc
sub
imul
into
fcompl
shll
adc
dec
sub
fistpl
mov
add
shr
push
lahf
mov
xor
and
lock
imul
mov
es
mov
and
mov
sbb
aad
pop
sbb
pop
mov
sub
scas
jo
jo
gs
inc
xchg
mov
into
push
xor
mov
mov
cs
aaa
adc
sub
mov
clc
push
xor
sub
roll
inc
cmc
jb
out
inc
add
add
or
pop
aas
ret
inc
call
pop
dec
and
aaa
shlb
pusha
push
sahf
add
or
daa
mov
popf
mov
stc
jno
js
jb
sbb
lahf
dec
loope
ljmp
mov
in
mov
jno
add
xchg
lahf
lret
jb
aam
dec
mov
mov
sub
aam
fs
sar
mov
push
std
pop
scas
sbb
mov
in
mov
aad
mov
ljmp
jae
adc
jne
and
orl
pop
dec
adc
adc
push
les
adc
mov
icebp
mov
push
test
add
into
dec
scas
paddd
cwtl
pop
fdivrl
imul
test
int
shll
jb
cmpsl
je
test
test
aaa
push
or
inc
mov
imul
out
aas
iret
dec
cmp
mov
and
test
add
test
mov
sahf
mov
inc
pop
jo
call
cs
pop
lods
outsl
xchg
mov
ja
test
shrb
dec
insl
jge
imul
push
inc
jge
pop
mov
xchg
and
add
ja
clc
cmc
fsts
mov
nop
cmpsb
in
fs
lods
jne
mov
pop
xchg
xchg
add
mov
lahf
cld
fstpl
lcall
aas
push
sub
cmp
pop
in
vmovq
fwait
cmpsl
cmpsl
sbb
mov
mov
and
adc
add
sub
movsl
aam
lods
jle
dec
sbb
leave
adc
ret
loope
test
pushf
nop
repz
push
icebp
inc
test
faddl
mov
mov
jbe
call
jg
loopne
imul
ret
xorb
outsl
cmp
and
and
adc
sbb
dec
sbb
imul
movsl
inc
sub
jmp
aad
sbb
cmp
pop
test
jns
sub
mov
jle
lock
push
rol
cmp
mov
ljmp
scas
test
pop
lods
sub
in
ss
bound
sub
pop
leave
push
dec
ja
pop
sbbl
mov
jbe
push
stc
pop
push
xor
cmp
push
outsb
sbb
out
pop
mov
repnz
mov
dec
mov
ja
dec
loop
mov
std
xchg
mov
jb
imul
mov
push
sub
dec
iret
movsb
jecxz
mov
gs
sbb
cmp
or
jnp
sub
lds
adc
shr
mov
adc
fldenv
lods
or
pop
mov
jo
pushf
cmp
jns
sbb
push
sub
mov
jno
cs
inc
jns
xchg
hlt
out
cmp
dec
adc
mov
xchg
aaa
jp
sarb
mov
adc
and
ljmp
outsb
pop
jbe
xor
dec
add
jb
inc
jo
cmpsl
push
xor
pop
push
cmp
adc
ret
jb
or
xchg
cld
and
sarb
and
pop
lea
xchg
les
sbb
push
mov
cli
fwait
test
pop
pusha
outsl
cs
dec
mov
pop
imul
je
push
movsb
fisubl
xchg
out
pop
iret
add
lret
cs
loope
arpl
xchg
xchg
clc
pop
pop
sarl
and
sub
cwtl
leave
scas
cmpsl
ss
push
cmp
rclb
outsl
clc
mov
ret
adc
inc
les
decl
pop
add
lahf
stos
lret
adc
jae
inc
outsb
aaa
pop
adc
loope
stos
xor
or
aaa
fs
in
test
movsl
inc
ret
dec
fs
dec
shll
test
rcl
sahf
xor
or
mov
xchg
jge
std
pop
cmpsl
dec
adc
sub
out
push
mov
dec
pop
into
ficompl
or
push
mov
dec
iret
mov
xchg
cmp
loopne
out
push
das
bound
jmp
mov
add
out
fdivr
jo
adc
out
test
testl
mov
xchg
dec
adc
ds
orb
pop
adcb
xchg
adc
repnz
cmovs
fbld
loop
cmpsl
es
mov
adc
rorl
cmp
sub
mov
iret
aas
xchg
xor
lcall
sbb
mov
out
aam
push
aas
ljmp
adc
xchg
in
push
test
xchg
sub
stc
inc
jne
or
pop
stos
sub
icebp
sub
movsb
bound
inc
mov
ljmp
lret
mov
mov
xchg
cmp
in
dec
xlat
cmc
cmpsl
test
and
jno
sub
mov
in
rclb
jge
arpl
pop
daa
aaa
dec
cmp
cmp
cwtl
jp
mov
out
push
adc
ljmp
bound
and
movsl
mov
add
inc
push
xchg
das
jmp
in
mov
and
xchg
stc
dec
loope
divl
adc
mov
scas
loop
or
cmc
and
int
push
cmpsb
leave
sbb
out
out
mov
popa
jge
inc
inc
pop
mov
pextrw
data16
outsb
bound
mov
or
jl
dec
fnstsw
fldl
or
push
inc
ret
add
inc
jns
and
push
mov
sbbb
or
mov
jns
cld
fidivl
mov
push
mov
xchg
jnp
xor
pop
shrl
je
jnp
cli
scas
fs
xchg
dec
movsb
xor
std
lea
mov
pop
jno
jmp
cmp
iret
pushf
pop
mov
shll
mov
in
push
xchg
push
sbb
fldcw
fwait
pop
aad
es
ds
cmp
and
jp
sbb
mov
sbb
mov
shlb
mov
xor
fs
xlat
cmp
pop
cltd
jl
xchg
aam
testl
mov
sbb
decl
mov
call
insl
lock
ljmp
push
xchg
clc
xor
mov
inc
stc
test
mov
mov
mov
iret
leave
imul
pop
inc
sarb
rcr
adc
cmp
in
and
xchg
sbb
cmc
mov
imul
jbe
jmp
into
pop
iret
aad
cltd
inc
push
pop
out
push
xor
adc
pop
adc
inc
pop
rol
dec
or
and
xor
fdivrp
mov
add
mov
pop
sbb
mov
push
aas
fistl
movsl
fisubs
iret
sahf
loope
and
jecxz
pop
dec
mulb
xlat
sbb
dec
jns
sarl
das
ret
cmp
cmp
sub
lahf
sub
imul
mov
jne
outsb
inc
xlat
inc
je
cmp
vandps
out
enter
or
cmpsb
inc
push
dec
gs
xor
push
pop
cmp
lret
and
dec
nop
int
dec
mov
movsl
iret
shl
jo
dec
aas
dec
mov
mov
ficomps
push
adc
jge
sahf
ss
xor
stos
sbb
dec
movsl
push
jg
arpl
dec
mov
push
nop
movsl
adc
mov
outsb
pop
movsl
fcmovu
inc
ds
push
sub
push
add
std
mov
push
and
lea
add
and
aas
sbb
dec
inc
testl
sbb
xchg
mov
mov
gs
sbb
mov
rorl
lcall
cld
sbb
push
gs
cmpsb
cmpsl
dec
js
loopne
or
sbb
sub
or
xchg
in
mov
fs
sti
mov
sbb
testl
inc
mov
sbb
out
cmc
and
fnstsw
lock
add
movsl
dec
lock
sub
pop
xor
fs
test
or
in
push
shl
mov
out
mov
ja
adc
push
mov
add
insb
and
call
sub
cwtl
in
inc
push
data16
adc
mov
js
xchg
add
cmp
push
addr16
stos
int3
ljmp
pop
js
pushf
sub
cmp
inc
and
dec
cmc
sub
ret
xor
pop
adc
mov
sub
dec
mov
add
dec
inc
add
in
dec
lods
cltd
dec
add
int3
mov
int
pop
dec
mov
xchg
mov
aad
push
mov
cld
arpl
xchg
ds
jl
dec
lcall
xlat
bound
out
mov
out
adc
jge
nop
mov
pop
out
hlt
xchg
imul
pushl
mov
fsubs
popa
xor
cmp
fs
cwtl
xchg
pop
repz
pop
mov
add
jmp
jae
pushf
push
inc
ja
cmp
loope
or
xorb
cltd
jae
and
int3
sub
xor
xor
mov
xchg
xor
les
adc
ja
shlb
xchg
popf
push
jne
push
add
addr16
push
sbb
jo
ss
ljmp
xchg
push
xchg
fistpl
or
mov
call
arpl
mov
fistps
loope
pop
adc
jno
jle
decb
xchg
inc
fimuls
insl
pop
gs
push
xor
sbb
cli
iret
jbe
pop
lret
cs
hlt
pop
jno
ja
pushf
icebp
push
mov
pop
je
cld
daa
push
xlat
loop
mov
jbe
lods
movsl
mov
ret
pop
icebp
dec
mov
jl
add
mov
jge
loope
pop
mov
iret
push
lock
sbb
ror
push
je
sub
out
popf
dec
xor
push
pop
loop
inc
adc
xchg
lret
inc
out
pop
push
pop
add
movsl
fistpll
in
inc
sub
cmp
or
je
jnp
push
pop
es
inc
insb
ret
cld
add
cmp
xchg
cmp
xchg
ljmp
xchg
repnz
loop
jmp
frstor
aaa
adc
or
sbbl
fwait
aam
scas
dec
jbe
xchg
jge
imul
fisttpll
insl
not
shlb
jo
ja
dec
jp
lret
adc
pop
jle
mov
mov
and
add
aad
outsb
sahf
push
cmp
xchg
loope
cli
inc
fwait
inc
insb
jno
adcb
in
call
dec
xchg
cmp
and
test
and
cmpsl
push
xchg
pop
mov
mov
jb
shrb
aad
or
fbld
loop
push
push
or
push
jns
jecxz
or
cmp
sbb
sub
or
clc
cmc
inc
lods
pop
sarl
adc
inc
aaa
inc
adc
stc
add
ljmp
hlt
gs
lcall
lods
push
cld
sub
xchg
in
test
add
inc
ja
xor
jae
mov
pop
dec
jecxz
mov
and
sub
sub
aad
fisubrl
in
mov
test
movsl
cmp
dec
inc
sub
out
dec
add
jge
stos
or
mov
xor
mov
ret
fdiv
fldenv
inc
cmp
pop
push
ds
xchg
jb
fnstsw
ret
and
dec
gs
and
aad
divb
fidivl
lods
mov
loope
fs
pusha
xchg
add
and
mov
outsl
inc
mov
cmp
fs
inc
loop
jne
outsl
repnz
lcall
adc
mov
dec
fimuls
inc
dec
mov
hlt
jne
scas
repnz
push
xor
fadds
dec
cs
push
fisttpl
lcall
ljmp
mov
call
arpl
sub
pop
hlt
xor
mov
rcrl
inc
adc
stc
mov
arpl
mov
jp
add
mov
add
mov
mov
and
outsb
push
notb
add
inc
dec
test
sahf
xchg
and
push
das
mov
in
mov
add
fwait
jno
lods
mov
stc
dec
in
add
adc
sub
mov
xor
sbb
push
rcrb
jb
loopne
stos
add
in
cmp
cltd
hlt
jge
fcmovne
arpl
movl
xchg
in
lahf
cmp
in
popa
or
push
stos
inc
mov
push
arpl
adc
push
xchg
fsubr
rsqrtps
aas
frstor
jge
and
jo
fcomp
xor
ret
pop
and
test
clc
push
sbb
int
sub
sub
int
sub
shrb
aam
addr16
mov
dec
scas
add
testb
pop
mov
jge
sub
inc
out
add
je
inc
ret
cmc
fwait
sub
repz
imul
lock
mov
leave
jge
sub
dec
nop
ja
arpl
mov
inc
insl
adc
in
aaa
mov
xchg
fcomp
adcb
push
pop
push
or
popa
push
mov
loope
mov
insb
sub
es
and
and
push
aad
push
adc
push
lds
xchg
sbb
subps
pop
lods
test
adcl
and
jo
gs
and
mov
das
inc
xchg
andb
push
in
lods
and
mov
inc
cmovbe
loop
or
je
add
lods
out
jmp
das
mov
xchg
ljmp
mov
js
or
sahf
cmp
loop
lret
fimull
cltd
mov
mov
popf
mov
movsb
lods
adc
dec
mov
nop
mov
mov
sti
stos
and
or
gs
mov
std
or
push
jg
fsubrp
gs
test
pop
mov
repnz
sbb
ja
xchg
push
mov
dec
add
push
mov
fwait
pop
das
cmp
int
dec
pushf
sbb
sub
in
push
popa
imul
push
sbb
pusha
pop
aaa
mov
xchg
adc
repnz
inc
mov
sub
es
test
and
xor
mov
int3
jmp
bsf
insb
adc
test
or
stos
jp
xor
dec
sbb
mov
push
cmpsl
dec
adc
ljmp
inc
lret
jmp
decl
xor
cmc
sti
sbb
and
mov
mov
add
int
jbe
sub
mov
push
subb
divb
in
movsl
ds
and
cmp
xor
sbb
and
xor
addr16
sub
in
scas
popf
pop
je
in
push
and
int3
popa
ret
sahf
mov
mov
lods
mov
jbe
pop
dec
lock
mov
lods
repz
pop
dec
inc
rorb
repnz
add
add
push
pop
push
pop
ds
mov
sar
adc
lret
mov
mov
mov
dec
mov
inc
imul
inc
pusha
mov
inc
ret
add
cmpsl
pop
daa
faddl
adcb
psrad
push
xorl
pop
push
jae
mov
ljmpw
xor
ja
je
mov
jmp
cmc
mov
or
in
push
cwtl
orb
aas
cwtl
mov
push
in
call
enter
mov
add
aaa
nop
or
push
or
aas
into
sub
movsb
or
mov
lret
insb
les
push
xchg
sub
int3
scas
xchg
push
xor
aas
and
pop
pop
or
inc
fs
mov
add
push
adc
xor
movsb
mov
add
xlat
roll
xor
mov
inc
stc
pop
push
ljmp
add
and
dec
and
push
stc
dec
mov
cmp
scas
addl
mov
rcrb
std
data16
popa
sbb
lahf
test
std
call
mov
jp
fwait
loope
aas
es
inc
jl
xor
jg
imul
push
das
mov
and
pop
call
outsl
popa
xchg
dec
xacquire
loop
cmpb
adc
data16
hlt
and
inc
and
fs
cmp
lods
jo
sarl
nop
aas
add
lods
test
jmp
out
jp
cmp
cltd
inc
test
sti
cltd
cmp
and
cmp
xchg
popa
bound
ret
gs
out
pop
test
nop
movsl
pop
adc
mov
aaa
mov
adcl
test
ret
pop
cmpsl
lods
ljmp
add
nop
pop
jnp
into
xchg
sbb
es
loope
fstps
mov
or
mov
adc
jecxz
mov
jns
imul
push
sbb
in
imul
je
add
cld
jo
mov
add
idivl
lock
inc
inc
sahf
add
rcl
sub
jmp
cld
push
pop
cwtl
jl
mov
push
xchg
les
jle
mov
mov
jle
mov
outsl
adc
notb
adc
cmp
lds
cs
stos
jae
lods
jae
test
or
mov
in
mov
mov
push
pop
mov
ss
mov
mov
in
push
xor
jne
cltd
leave
and
shlb
cmp
vandpd
outsl
push
adc
movsl
shrb
push
out
or
test
cmpsl
ret
jo
mov
inc
out
call
mov
test
adc
inc
jnp
dec
and
popf
andl
imul
pop
mov
dec
insl
fs
xor
xchg
or
shrb
xchg
pop
xor
repnz
sub
fnsave
dec
adc
loop
push
push
loope
push
mov
pop
out
adc
out
inc
mov
push
loope
rolb
fcomi
test
loop
xor
inc
stos
rcrb
js
test
lods
push
cmp
mov
inc
jo
xor
out
add
lea
pusha
in
adc
pop
mov
xchg
mov
stc
outsl
fimuls
jne
ja
scas
cmp
arpl
mov
aaa
insl
call
jl
sub
gs
inc
sbb
xor
mov
test
jne
insb
sbb
in
hlt
or
out
xchg
mov
lods
out
push
stc
loopne
adc
and
pop
cmp
scas
imul
out
js
repnz
pop
push
imul
ljmp
les
jns
stos
sbb
jns
movntps
idivb
cmc
adc
mov
out
shlb
insl
and
or
shll
jnp
test
out
testb
push
xor
push
imul
dec
jnp
rclb
fwait
add
aad
int3
fptan
iret
jno
leave
cmp
adc
mov
test
push
push
insb
sbb
mov
add
cmp
dec
and
arpl
mov
mov
loope
mov
push
inc
fists
out
in
push
scas
push
cmp
rcr
pusha
add
insl
inc
xor
in
stos
lret
outsl
add
inc
test
arpl
clc
outsl
test
loop
shrb
dec
insl
adc
pop
inc
cwtl
jnp
cmp
cmp
sub
lret
push
std
sbb
pop
clc
inc
mov
xchg
mov
jno
or
flds
fimull
dec
pop
lock
cld
mov
xchg
repz
dec
lret
sub
movsb
mov
gs
and
lds
xchg
fisttpl
aas
lret
add
mov
inc
xchg
imul
orb
mov
add
repnz
test
push
and
and
push
and
outsb
cld
repnz
movsl
mov
out
dec
movsb
roll
int3
pusha
sahf
stos
xorl
aaa
test
or
cmp
cmpsb
fs
inc
inc
cvtpi2ps
dec
mov
xor
adc
add
aam
sub
pop
dec
ja
adc
and
roll
mov
enter
jg
mov
aas
pminsw
pop
mov
jne
fildll
mov
push
dec
or
cmpb
sub
push
push
ret
shll
repnz
fcomps
das
add
int3
adc
xlat
jnp
push
xchg
push
pop
push
ror
std
mov
jmp
jae
inc
mov
mov
mov
addr16
cmpsl
mov
sub
and
loopne
fstpl
ss
mov
mov
inc
or
pop
push
pop
add
dec
add
and
push
add
call
add
lods
cmp
shr
je
movsl
data16
aas
icebp
outsl
push
ds
pop
dec
dec
out
test
sahf
xchg
imul
xchg
data16
or
mov
ja
lock
mov
sub
aas
lods
xlat
push
push
mov
andb
inc
ss
std
pushf
enter
and
fcoms
pop
cmp
std
scas
adc
ret
push
mov
les
lds
int3
pop
int
dec
into
cld
mov
xchg
push
mov
xchg
cmp
scas
fucomip
ret
xor
jge
mov
sub
jns
pop
lock
test
mov
aad
mov
mov
jo
adc
lcall
icebp
pop
int
dec
aas
pop
outsl
push
leave
pop
push
push
add
call
xor
sti
repnz
sub
sbbl
sub
lahf
int
mov
test
cltd
pop
push
pusha
push
ds
call
xchg
rcrb
scas
shl
jmp
push
mov
adc
popa
xchg
maxps
cmp
lahf
jne
movb
pusha
cmp
sarl
dec
xor
cmp
imull
sbbl
cmp
inc
inc
test
sub
xlat
into
cmpsb
inc
or
jne
add
cmpb
add
les
hlt
inc
fmull
lea
divl
cmpsb
bound
push
xlat
loope
sbb
fidivrs
mov
adc
arpl
push
and
push
bound
fisttpl
addr16
mov
dec
sbb
in
xor
mov
xor
test
int
add
mov
imul
jo
das
outsb
outsb
mov
adc
cmpsl
leave
add
pusha
mov
dec
into
and
sub
jmp
cld
cli
jmp
jbe
movsl
jo
dec
jns
jns
or
cltd
xchg
adc
mov
xor
inc
push
mov
popf
stos
push
ja
push
pop
mov
decl
sub
into
std
sub
jns
stc
mov
mov
addl
or
pop
clc
leave
pop
cld
iret
and
dec
xchg
in
pop
cmp
mov
push
cmp
mov
lcall
insl
mov
and
fadds
pusha
into
lds
scas
mov
lods
icebp
cs
jg
mov
adc
sbb
xchg
or
push
data16
pop
xchg
addr16
push
pop
cmpsb
xchg
into
xor
dec
xor
sbb
mov
pop
dec
jge
outsl
lret
int3
cmp
mov
push
or
jno
jno
pop
fidivs
cmc
push
or
push
pop
fiadds
jp
xchg
push
pop
sub
insb
push
mov
out
sbb
imul
lods
cmp
fmull
mov
push
fwait
loopne
mov
andl
hlt
sub
xchg
cltd
add
icebp
dec
pop
dec
subb
popf
xor
push
inc
mov
lret
test
lods
sub
repnz
cmpl
jl
lods
mov
testl
rcrb
mov
xlat
mov
fisubs
pop
mov
imul
adc
nop
cltd
mov
jb
push
rol
pop
sub
push
dec
fs
fwait
sub
push
inc
out
pop
mov
ja
mov
leave
outsb
fldcw
das
bound
sub
stc
push
pop
sbbb
mov
xor
xchg
aam
ret
arpl
xchg
xor
pop
ficoms
fists
loope
scas
lahf
js
xor
out
adcb
mov
xor
sbbb
gs
outsb
cwtl
pop
mov
and
lea
lcall
roll
or
jp
cmp
cmpsb
pop
jne
jecxz
push
inc
inc
jb
cld
adc
mov
mov
bnd
insl
out
movsl
and
test
stos
fcompl
xlat
and
clc
mov
mov
mov
sbb
xor
fiadds
sbb
jecxz
les
inc
push
add
js
movsl
imul
cmp
out
xchg
cmp
movsb
xchg
cmc
outsl
adc
pop
scas
mov
jae
loopne
adc
nop
add
in
jmp
jno
and
sahf
iret
lcall
loopne
into
loopne
cmpsb
stos
jnp
jb
push
ja
add
dec
jecxz
mov
bound
and
in
ja
in
ds
jecxz
adc
mov
es
lock
cmp
inc
outsl
in
pop
ret
or
sbb
mov
mov
pop
push
fstps
sub
lcall
movsb
clc
jns
push
jno
fildl
mov
xchg
xchg
mov
repz
rcr
cmp
les
jmp
adc
sbb
or
mov
sbb
mov
pop
enter
add
pop
loope
push
jno
xor
stc
jge
repnz
insl
add
and
and
popa
enter
and
lds
mov
xor
inc
test
dec
mov
xchg
ret
sarl
mov
pop
add
push
xor
cmp
in
lock
xchg
out
inc
ds
xorb
xchg
cmp
adcl
and
pushf
jb
movsl
repnz
test
gs
and
repz
and
adc
push
lods
mov
lock
mov
das
pop
or
addr16
mov
leave
cli
into
jnp
dec
fucom
pop
sub
lret
clc
adc
in
adc
cmp
mov
inc
hlt
les
fdivr
das
shrl
imul
xlat
leave
push
or
cmp
popa
cmp
fildll
pop
pushf
popf
movsb
add
imul
cmp
arpl
push
ficompl
push
pop
cmpb
xchg
hlt
nop
inc
pop
or
mov
fwait
xor
ss
test
shlb
mov
sbb
mov
add
sarb
mov
lcall
outsl
les
cmp
sub
cltd
in
push
aam
imul
sub
lea
xchg
pop
mov
sbb
cmp
enter
add
mov
push
sahf
mov
ja
sbb
ror
add
jle
xorb
popf
push
cmc
es
jecxz
les
rorl
pcmpeqd
sub
scas
sar
rcrb
insl
enter
xor
loop
sbb
mov
daa
cli
in
push
fstp
icebp
xchg
nop
mov
ja
mov
loope
jno
jo
adcb
mov
scas
movsb
int
stc
sub
fmull
mov
jnp
js
imul
sub
rcr
and
push
cld
mov
out
mov
and
push
push
movsb
mov
int
dec
fwait
mov
sbb
jl
addl
out
push
cwtl
leave
adc
movsl
add
xor
sub
and
xor
add
rorl
add
ffreep
dec
es
dec
jmp
mov
xor
adc
aad
jbe
dec
or
stc
insl
add
or
in
imul
arpl
enter
push
jne
xchg
cli
int3
sbb
movsl
stos
ret
push
or
movl
inc
push
mov
mov
lret
pop
cmpl
and
pop
inc
cmp
sub
add
sbb
lret
mov
scas
jl
cltd
in
into
pop
les
ss
xorl
out
ds
fidivrs
jae
push
add
push
std
sbb
ljmp
mov
loopne
mov
jmp
jp
xor
mov
je
lods
pop
cmpsl
pop
jp
mov
jecxz
sti
int3
xor
movsb
mov
mov
in
jmp
mov
adc
jno
data16
mov
mov
jge
sbb
push
movsl
daa
ja
popf
mov
dec
shrb
mov
fst
addl
push
mov
jmp
sub
push
sbb
push
es
pop
stc
mov
adc
and
icebp
ja
test
jmp
and
fdivrs
fs
jbe
mov
adc
mov
xchg
ja
inc
out
dec
add
leave
lods
pop
test
mov
mov
and
xchg
mov
bound
mov
rclb
pop
xchg
shrb
insb
call
lret
fsubrs
sub
shl
xchg
mov
pushf
mov
pop
push
push
mov
ror
aad
outsl
jg
loopne
and
xor
push
fmul
sti
je
test
mov
stc
mov
rolb
test
jge
push
sub
and
cmpsb
cmpsl
aam
outsb
dec
lods
lret
sbb
xchg
scas
push
out
idivl
loopne
adc
push
add
stc
push
push
aaa
sub
pop
adc
idivb
test
popl
cmpsl
xchg
jmp
lock
cmp
and
test
mov
and
fcmove
in
in
ret
dec
sub
imul
mov
xor
daa
and
mov
testl
fisubl
in
test
test
gs
jg
fistl
fisubrl
sahf
xor
mov
add
es
stc
cmc
mov
adc
fsubrs
lock
iret
pop
or
frstor
ret
inc
inc
wrmsr
fwait
sbb
ljmp
sahf
adc
icebp
sub
sbb
cmp
and
xchg
ficoms
mov
sahf
stc
mov
fstps
jmp
xor
enter
lcall
out
inc
das
or
add
dec
outsb
aas
xor
fiaddl
fstps
mov
shll
mov
pop
scas
push
lods
sahf
int3
out
stc
cltd
sub
ja
jg
div
lcall
aam
das
sbb
gs
loop
enter
repz
lahf
or
ret
call
fnstsw
xchg
push
pop
lock
cmpb
sub
xchg
pop
cli
push
outsl
mov
sbb
jbe
mov
clc
neg
lods
inc
pop
push
pusha
adc
jbe
xchg
adc
sub
aam
jge
aas
push
std
inc
xor
imul
jnp
cmp
and
inc
inc
jns
push
add
ss
stc
inc
cli
dec
bound
fimuls
out
adc
pusha
mov
lret
cmp
lods
int3
xchg
aaa
dec
adc
leave
test
cmp
mov
syscall
adc
gs
in
sub
cmp
push
inc
movsl
mov
inc
popf
mov
dec
xor
cmpsb
dec
imull
and
mov
jns
sbb
daa
test
jae
movsb
es
pop
jno
jle
add
out
dec
sbb
xchg
addr16
insl
out
scas
movsb
inc
das
mov
mov
insb
int
mov
push
pushf
xchg
arpl
and
notl
add
insb
enter
mov
loope
shl
push
rep
xorl
mov
xlat
dec
cltd
test
je
sub
cwtl
scas
ficomps
inc
rcrb
ljmp
mov
dec
and
xor
mov
xor
dec
cwtl
push
fs
jae
pop
mov
ret
or
pop
xor
repnz
out
push
lret
sbb
xor
dec
fdivl
xchg
mov
cmp
jae
in
inc
in
shll
and
cmc
cli
push
add
lcall
hlt
cwtl
mov
mov
mov
or
lahf
pop
aaa
addb
std
cltd
inc
lcall
inc
mov
push
scas
push
push
aas
or
ja
in
cmp
test
adc
xor
pop
pop
inc
addr16
mov
loope
sub
ds
push
add
mov
je
xor
pop
test
stos
sub
addr16
push
push
push
in
addl
dec
sahf
add
enter
clc
das
dec
push
inc
mov
shlb
adcl
lock
sub
or
movsl
push
sbb
arpl
mov
jns
xor
mov
popaw
sbb
push
add
imul
push
iret
sub
out
and
xchg
add
cmp
inc
pushf
pop
out
sti
sub
adc
lds
xor
sub
mov
inc
sbb
xchg
mov
pop
and
jg
clc
imul
dec
jecxz
mov
loope
cwtl
std
adc
test
aam
decl
subb
or
fcmovu
loop
or
lret
mov
lods
xor
test
or
test
jb
cwtl
dec
inc
fiadds
aam
and
mov
test
int3
add
je
int3
inc
test
dec
inc
out
enter
sub
fisubrl
test
out
cs
or
pop
cltd
imul
daa
pop
jne
jns
stc
daa
test
add
mov
adc
jb
cmp
or
sub
movb
dec
arpl
movsl
aad
and
pop
out
and
cmpsl
lods
jno
outsb
cmp
pop
xchg
mov
enter
into
test
add
cltd
sbb
cli
loop
ret
lds
push
js
rcll
jo
push
mov
jmp
fisttpl
ja
mov
int3
aam
mov
push
xchg
cmpsl
sbb
mov
rorl
xor
lret
push
cmp
aas
in
push
test
inc
gs
add
ds
out
push
fcoml
cwtl
cmpsb
dec
ja
mov
jae
mov
pop
mov
push
mov
into
in
xchg
pop
and
shll
out
dec
push
into
and
cmp
outsl
ret
xor
push
sbb
sub
xlat
aad
fmuls
push
mov
fisttpll
push
push
lcall
jnp
jbe
sbbb
mov
mov
sub
test
lea
lods
repz
test
arpl
mov
adc
fiaddl
push
lcall
testl
cmp
and
dec
pusha
lods
hlt
inc
loop
sbb
mov
aam
jg
sbb
gs
and
lahf
pop
inc
and
pusha
lret
mov
add
mov
shrb
xchg
jae
adc
ja
sub
mov
and
pusha
mov
orb
mov
and
aaa
or
sub
in
cmp
ljmp
jae
dec
jns
andl
sti
pop
repz
sti
adc
mov
push
pop
mov
mov
nop
mov
cmp
sahf
add
push
fdivrs
push
fwait
and
pop
sbb
cld
ret
push
js
pop
lods
add
out
scas
and
icebp
daa
les
xor
sar
mov
enter
fistpl
into
mov
mov
xchg
in
test
mov
dec
mov
xchg
mov
sbb
inc
fwait
jne
gs
add
outsb
xlat
dec
int
sbb
sub
or
cmp
pop
not
xchg
push
pusha
loop
jge
push
pop
out
mov
mov
icebp
es
outsl
sahf
call
sahf
push
push
outsb
xor
or
push
dec
xchg
sahf
mov
imul
mov
loop
and
int
xchg
addr16
xchg
push
cmp
lcall
rcl
cmp
mov
nop
sub
mov
mov
cmp
hlt
adc
mov
mov
sarb
xchg
xor
jmp
pop
pop
into
jl
cmpsb
ljmp
push
jns
sub
sub
mov
jo
std
dec
cltd
loope
popa
sub
std
in
test
das
leave
mov
adc
pop
mov
test
int
mov
add
enter
jp
leave
pop
movsb
xchg
call
pop
ficompl
int3
insb
sbb
or
cmpsl
jnp
add
or
mov
push
inc
or
mov
leave
orb
fisubs
andb
lds
mov
xchg
outsl
xor
jnp
dec
xchg
jmp
pusha
dec
in
adc
jl
dec
sub
jb
outsl
cltd
xchg
andl
ret
test
push
push
outsl
sub
stos
xor
cs
xchg
scas
sbb
jmp
mov
inc
out
stos
adc
cmp
jb
add
call
std
pop
mov
fs
or
adc
inc
call
inc
sbb
add
clc
int3
mov
mov
test
psllq
lods
and
jne
adc
pop
mov
and
mov
xchg
daa
jmp
push
lds
fistl
shll
out
adc
pop
fisubrs
roll
dec
mov
mov
nop
xorl
aas
cmpsb
pop
pop
xchg
add
imul
and
or
imul
jmp
cmp
mov
pop
jne
push
jle
push
cmpsb
call
dec
or
xchg
test
sti
bound
inc
aam
cwtl
pushf
push
add
jge
das
or
imul
jp
or
negb
sub
inc
jne
cmp
sbb
cli
std
mov
out
roll
ds
dec
sbb
and
adc
stos
push
cmp
xchg
adc
mov
push
jae
or
xchg
lret
call
outsb
and
insl
scas
mov
orl
xor
test
xchg
je
ljmp
xchg
xor
add
fimull
repz
or
cmp
xor
scas
es
popf
sti
lods
pop
mov
xor
add
xchg
js
roll
jecxz
add
daa
xor
mov
inc
loope
in
das
inc
shrl
jmp
xchg
imul
rorb
jbe
je
lods
mov
dec
push
lret
lcall
mov
mov
subl
cmp
pop
cmp
push
dec
fbstp
cmp
insl
push
or
pushf
popa
jnp
jle
mov
push
pop
mov
jle
sub
cmp
arpl
dec
lcall
or
cmc
jo
std
mov
shll
test
test
je
scas
lods
ret
daa
in
mov
sbbb
fbstp
xor
inc
mov
stc
jnp
mov
std
mov
out
inc
push
inc
insl
dec
push
push
push
in
dec
ret
int3
xchg
divl
dec
mov
adc
jle
clc
outsb
or
jo
xor
push
cs
xchg
int3
test
and
mov
sbb
jae
add
xchg
adc
pushf
aad
xchg
daa
jle
outsb
xchg
pop
pusha
fnsave
cltd
in
es
pop
mov
xor
stc
sbb
fs
and
push
in
ss
cmpsl
jmp
stos
clc
mov
das
adc
and
xor
shlb
in
scas
lods
jb
andl
mov
ficoms
jnp
xor
adc
cmp
int3
test
ja
and
les
mov
popw
adc
adc
leave
xor
jne
jnp
cmpsb
dec
sbb
daa
fdivs
cmp
dec
add
cmc
ficoms
in
lret
mov
lods
mov
mov
add
mov
mov
dec
sub
adc
pop
lcall
push
dec
dec
imul
test
xchg
imul
fdivs
push
nop
fmuls
mov
or
dec
xor
add
push
xchg
or
and
insl
popa
push
int3
ss
sub
mov
lahf
or
and
dec
into
addb
push
dec
mov
sub
call
push
and
jo
pusha
aaa
adc
int
movsl
dec
xchg
dec
push
outsb
loope
das
mov
and
jp
mov
repnz
adc
adc
repnz
outsb
cmp
aas
adc
addr16
adc
inc
fs
ds
adc
and
ljmp
mov
roll
jmp
inc
jo
xchg
test
add
testb
lcall
mov
adc
push
xchg
and
adc
cld
pop
jno
lret
sbb
fcmovnbe
cmp
enter
push
idivb
out
cmpsb
mov
lret
gs
cmpsb
sbb
mov
shrb
dec
lcall
and
nop
inc
push
sub
add
sub
push
insl
es
out
loope
or
dec
sbb
mov
xorb
mov
cmp
mov
movsb
movsb
pop
icebp
stc
iret
aaa
lods
dec
leave
shl
xchg
cwtl
mov
jae
sub
push
imul
inc
call
and
cmc
gs
jmp
call
sub
sbb
mov
sub
mov
mov
cmp
ret
push
out
test
mov
add
mov
jno
and
insb
lock
inc
das
arpl
push
divb
pop
mov
mov
push
je
scas
daa
mov
ficoml
jecxz
jbe
and
dec
dec
mov
mov
xor
pop
push
out
push
outsl
xchg
jno
push
lret
adc
sbb
sbb
ljmp
out
push
call
test
adc
sti
inc
stos
mov
scas
addr16
sbb
out
sbb
mov
shr
cli
sub
lcall
out
push
mov
lret
mov
xchg
and
enter
ret
or
movsb
push
in
jge
in
xchg
pop
mov
imul
sub
or
ret
bound
je
dec
rorb
mov
ficompl
mov
lock
rcl
lods
sbb
test
sbb
xor
push
mov
push
mov
test
out
mov
pop
and
lahf
arpl
mov
jecxz
xlat
enter
ss
push
add
loop
mov
sub
cmp
xchg
test
btr
add
dec
adc
xor
insl
adc
loop
out
inc
es
inc
test
sarl
test
into
les
pop
mov
mov
pop
ja
and
pop
xchg
cmp
push
stos
repnz
in
mov
push
adc
rorl
add
sti
lret
jne
test
sbb
lahf
fildl
int
or
pusha
jbe
and
xchg
dec
in
adc
enter
mov
cli
outsb
cwtl
mov
fsts
and
and
pop
leave
mov
push
or
push
and
mov
clc
add
cmp
or
dec
mov
cmp
out
add
stc
mov
add
add
add
aad
jb
loopne
lds
jo
inc
mov
jmp
lea
inc
mov
ss
add
adc
pop
fdivrs
aad
and
push
fstpl
stc
dec
jbe
js
pop
xchg
cmp
mov
and
pop
aad
mov
xchg
cmp
dec
push
xor
mov
scas
sbb
xor
in
call
mov
pop
mov
sarb
sub
dec
cmc
dec
xchg
stos
and
pop
fldenv
adc
popf
rcr
cmpxchg
and
mov
js
popf
out
and
jg
dec
or
xor
fnsave
mov
mov
mov
sub
pop
loopne
mov
push
cmp
pop
rclb
sbb
aaa
sub
cmpsb
dec
popf
popa
leave
orl
dec
dec
push
sub
imulb
dec
push
push
sbb
push
ja
fstpt
mov
ds
xor
jg
or
int3
stc
or
das
arpl
adc
mov
sbb
aas
mov
xor
and
lock
jg
cmpsl
out
mov
dec
mov
stos
rolw
mov
cltd
inc
das
dec
mov
cmc
cld
sbb
arpl
in
push
push
mov
push
adc
in
xor
dec
fisttpl
fisubs
push
sbb
cmpsl
cmp
sbb
push
xchg
dec
xchg
aas
sbbb
mov
icebp
ret
lea
add
arpl
jg
sbb
mov
movsl
add
daa
xchg
ja
repz
fildl
lods
cltd
pop
xchg
rol
mov
sub
jle
cmp
xchg
add
sbbb
in
stos
add
lret
enter
sbb
lods
push
and
loop
mov
iret
or
adc
xchg
xchg
sub
cmpsl
and
mov
iret
je
pop
and
enter
cs
shll
ljmp
das
xorl
mov
daa
in
xor
xor
add
aam
mov
xchg
cmp
mov
lock
or
mov
inc
stc
movsb
xorb
clc
cmc
or
enter
daa
push
xchg
pop
adc
xor
add
sub
dec
sub
cmp
movsl
pop
in
add
mov
and
fildl
inc
xor
mov
xor
sbb
ss
or
divb
xor
jmp
lods
push
sbb
fsubl
push
pop
mov
mov
call
insl
fisubrs
xor
dec
mull
ss
repz
loope
sub
in
cmp
pop
adc
dec
push
mov
stos
mov
cmpsl
cmp
jno
out
mov
sbb
fcomip
pop
dec
lcall
scas
and
getsec
cmpsl
mov
mov
mov
dec
fdiv
add
xchg
mov
addl
fcmovne
push
jl
xor
fistps
leave
mov
mov
dec
mov
sbb
cmpsb
and
add
mov
mov
jl
mov
iret
jbe
dec
inc
and
shll
daa
shrl
pop
addr16
push
iret
or
or
or
fwait
xchg
push
cltd
testb
adc
and
test
int3
jo
inc
frndint
push
lds
sub
jae
hlt
mov
mov
int
mov
call
mov
mov
pop
inc
mov
or
jns
shrb
push
or
scas
loope
sbb
adc
jge
push
cmp
push
test
lods
lds
sub
pop
aam
nop
hlt
and
pop
pop
add
inc
outsb
pop
inc
or
cmp
sub
mov
loope
ret
nop
addl
loop
nop
mov
dec
pop
fsubrl
enter
hlt
mov
jl
mov
enter
ror
cld
pop
movsb
xor
cltd
sbb
pop
add
js
xlat
inc
ds
push
mov
mov
fwait
or
jmp
lods
aaa
push
adc
bnd
aam
cld
cld
hlt
shll
sar
fstpt
andb
cli
ret
xchg
insl
ja
add
test
ret
pop
stos
movsb
jg
sbb
xchg
loope
cmp
xchg
insb
and
xlat
mov
sub
ljmp
mov
inc
out
ds
aaa
xor
sub
cli
daa
call
or
mulb
xor
xor
or
in
mov
sub
and
fbstp
into
cmp
les
cmp
fs
icebp
pop
notl
popa
sbb
push
xchg
jno
loope
imul
lods
mov
loope
push
jg
in
sub
pop
dec
mov
and
sub
and
jge
ret
xchg
mov
shll
lret
aas
sbb
orl
dec
arpl
call
fsubl
inc
cmc
xchg
and
xchg
inc
jns
repz
mov
sub
jmp
test
and
gs
int3
inc
pop
add
insb
iret
jp
xchg
testl
mov
enter
repnz
or
hlt
lret
add
fnsave
pop
jo
pusha
mov
mov
jb
fsubs
jmp
filds
cmc
pushf
and
lret
jecxz
push
mov
sub
inc
sbb
fnstcw
cmp
pop
in
mov
push
hlt
insl
jb
push
repz
pusha
jle
inc
mov
incb
shrl
adc
or
dec
xchg
push
das
push
stos
shlb
in
test
lret
adc
push
in
js
or
test
shrl
jb
outsb
arpl
rcl
cmp
les
mov
push
in
mov
and
pop
mov
ljmp
fisubrl
jnp
mov
push
shrb
pop
push
inc
add
outsb
fisttpll
xchg
xlat
add
fmul
loope
or
dec
mov
cltd
adc
jno
push
ret
cmpsl
or
xor
adc
jo
mov
xchg
shlb
and
in
or
test
repnz
lret
adc
iret
pop
lahf
pop
ja
ja
xchg
sub
std
sbb
out
scas
lahf
outsb
cmpsl
popf
mov
add
sbb
movsl
call
idivb
jb
xchg
push
mov
loopne
insl
lods
outsl
mov
cmp
dec
cmp
lock
or
sub
mov
mov
out
addl
and
push
lods
loope
arpl
mov
jne
or
mov
mov
pop
xchg
jmp
inc
cmp
inc
jg
mov
pop
push
pop
clc
adc
add
pop
push
lahf
es
into
stos
das
arpl
ss
lret
roll
or
jo
or
cli
jnp
xlat
adc
scas
sarb
sub
push
fwait
push
popa
xor
mov
decl
jns
clc
imul
int
pop
push
lret
aas
xchg
mov
inc
and
pop
cmpsb
sub
pop
adc
dec
ss
sbb
fadds
xchg
pop
cs
push
ret
sub
and
rorb
and
fcomps
pop
xchg
pop
testw
rclb
and
sbb
or
mov
mov
retw
sarl
cltd
xlat
push
xchg
inc
adc
or
stos
inc
push
sub
inc
or
sub
idivl
popf
jno
loopne
repz
sarb
je
xchg
xor
scas
push
fisubrs
adc
sub
inc
std
dec
push
test
mov
dec
push
cld
scas
enter
aad
pop
dec
sar
test
pop
icebp
cmpsb
stos
dec
fwait
orb
dec
xchg
test
xor
clc
sbb
inc
mov
pop
jge
or
push
jo
jb
jns
push
rcl
cmp
xchg
outsl
mov
inc
stc
mov
pop
inc
and
lcall
bound
out
test
loope
cltd
mov
mov
addb
outsl
mov
shrb
mov
leave
es
mov
daa
xchg
aas
loop
or
jmp
fstpt
cmc
popa
mov
or
cwtl
xor
rcrl
add
stc
movsl
movsb
mov
lahf
outsb
lods
jbe
ds
xor
lods
mov
jnp
pop
push
xorb
pop
or
adc
xor
sub
pop
cmp
sti
test
mov
int3
sub
cmp
pop
frstor
jg
repnz
ljmpw
push
xor
pop
add
sub
sahf
cmp
push
push
and
adc
dec
cmp
xchg
out
stc
mov
lea
jp
arpl
and
fxch
je
les
jns
lds
xor
push
jae
inc
movsl
mov
mov
xor
sbbb
push
popa
das
cmp
xchg
mov
fs
rcrl
and
addb
pop
jmp
dec
jno
push
inc
jecxz
xchg
test
add
push
mov
cmp
sub
mov
loopne
add
scas
and
mov
les
adc
pop
pushf
lods
lahf
inc
and
movsl
add
jmp
sbb
sub
sbb
mov
jge
out
in
push
and
aad
xchg
xor
cmp
imul
jmp
clc
dec
sub
outsb
lret
add
lea
mov
xlat
nop
decl
adc
or
pusha
add
in
adc
loopne
inc
cmpsl
bound
repnz
loop
adc
sub
inc
or
cmpl
dec
or
adc
xchg
mov
xchg
jo
or
stos
bound
sbb
cld
mov
rcr
cmpb
insl
inc
push
rorl
pushl
push
outsl
dec
cmp
inc
jl
aam
movsl
add
and
mov
sub
scas
repnz
mov
pop
pop
push
into
sub
jp
int
jecxz
xchg
aas
test
jp
jecxz
xchg
subb
push
mov
xorl
cmp
add
push
xchg
dec
mov
mov
sub
repnz
xchg
adc
addr16
sbb
cltd
lods
or
or
add
mov
mov
mov
ja
xchg
int3
inc
jnp
gs
push
cmp
mov
fidivl
dec
add
out
mov
popf
ljmp
pop
loopne
mov
xor
aas
sub
mov
pop
xchg
mov
or
push
mov
and
pop
jge
sub
add
jb
scas
addr16
repz
pop
push
jo
jl
jns
mov
sbb
test
xchg
lea
bound
aam
jl
pop
outsl
ficomps
bound
and
mov
xchg
jnp
adc
push
imul
aas
cmc
bound
in
insb
xor
je
hlt
or
push
or
and
loopne
xor
test
outsl
jno
aad
or
jb
push
bound
xchg
or
ss
in
aad
mov
push
fmull
push
pop
inc
frstor
mov
test
not
and
jno
stos
xchg
xchg
sub
outsb
nop
and
push
sub
in
pop
icebp
inc
add
pop
bnd
mov
lock
dec
inc
cli
sub
dec
sub
mov
fstps
cmpsl
imul
pop
fidivrs
data16
movsb
inc
pop
dec
lret
pop
xchg
mov
test
push
cmp
mov
and
fld
cmp
mov
inc
insb
popa
lret
sub
test
add
xchg
insb
scas
mov
into
inc
insl
adc
ret
jl
push
mov
fdivrl
push
cmp
adc
aam
lock
pop
cmp
aaa
push
andb
push
fwait
add
xorb
dec
out
add
mov
imul
pop
insl
jg
push
sbb
es
pop
inc
je
fnstcw
cmp
dec
lahf
or
cmp
xchg
dec
sub
add
mov
jne
xlat
pop
mov
xor
imul
mov
xchg
es
or
outsb
sub
xor
fcoml
fistps
dec
xorb
test
lret
jmp
fadds
and
mov
loopne
imul
jg
cmp
and
out
or
fiadds
inc
push
xlat
cli
pop
insl
clc
pop
aaa
movsl
popa
cmp
push
bound
sub
enter
cwtl
loope
ror
push
cmp
mov
fmull
gs
sbb
gs
imul
push
jo
jg,pn
mov
outsb
xor
out
cmpsb
aam
rcr
call
xor
movsb
mov
popa
push
loop
jne
cmp
xor
jge
loopne
and
popf
inc
std
adc
arpl
and
jmp
scas
sub
or
leave
xor
add
sbbl
icebp
mov
sar
push
mov
xchg
imul
aam
adc
mov
mov
jp
fcmovnb
and
xor
push
jge
dec
and
pop
cmp
sbb
sti
sarb
cli
jge
xchg
inc
add
mov
pop
dec
js
push
mov
jmp
cmpsb
adc
mov
mov
lds
xor
mov
aam
and
lret
ret
cmpsl
shll
inc
push
inc
jo
lds
mov
push
cmp
hlt
ret
and
adc
filds
mov
in
sbb
xlat
rcl
into
pop
mov
mov
mov
int
cmp
mov
pop
iret
and
scas
mov
cmpb
or
das
or
cmpl
outsl
addr16
aad
sbb
or
sahf
inc
jecxz
or
xchg
fcomps
js
add
inc
sub
popf
adc
daa
sub
mov
sbb
xor
mov
loop
icebp
inc
dec
cmp
mov
fs
pop
add
dec
out
push
sub
inc
sbb
cmp
test
push
test
jmp
aad
subl
sub
push
pushl
outsl
movl
or
sub
mov
sbb
fs
adc
xchg
aad
fcmovnu
mov
data16
ds
mov
sub
stos
push
cmc
fisttpll
and
dec
or
and
xchg
scas
mov
scas
jbe
test
push
das
mov
aad
add
les
popf
lds
in
mov
leave
lahf
add
mov
je
cmp
push
testl
pop
mov
sub
stc
enter
fwait
lret
test
pop
jmp
cmp
mov
pop
push
and
sub
movsb
dec
sub
fwait
mov
movsb
cmpl
aas
lahf
push
push
in
pop
in
in
lret
hlt
rcr
jne
sbb
or
fdivl
stc
push
xchg
or
sti
stc
aad
adc
es
shrb
push
xor
cmc
ljmp
popa
arpl
lea
xchg
pop
add
sbb
or
and
pop
add
stc
mov
xor
jle
stos
adc
repz
imul
or
adc
subl
push
jmp
cs
mov
data16
lcall
inc
mov
cmp
mov
into
or
push
ja
mov
push
in
cs
lahf
ret
mov
fidivl
repz
pop
mov
push
mov
ret
cld
enter
hlt
jg
pop
fisubrl
push
jge
sbb
pop
add
mov
jp
fs
int3
lods
xor
in
test
into
movsl
iret
jg
and
xchg
outsl
daa
push
scas
or
pop
in
mov
aas
mov
push
dec
inc
in
rorb
js
fidivs
lea
jne
add
mov
pop
sub
or
fwait
jecxz
mov
cmp
cli
sbb
mov
and
dec
xor
loopne
cmp
and
aad
and
sub
hlt
sbb
pop
push
mov
sbb
ret
iret
imul
sbb
mov
insl
insl
adc
movsl
dec
lods
mov
lods
pop
fnstsw
and
testb
cmp
jo
mov
das
in
dec
add
push
loop
xor
cmp
mov
ds
les
mov
adc
icebp
cli
scas
mulb
adc
jb
lahf
ret
xor
xchg
mov
daa
movsb
push
sbb
stos
sub
jge
enter
inc
ret
clc
cmpsb
mov
xor
lds
and
out
add
in
or
mov
adc
or
test
ror
out
push
adc
pop
rcrb
pushf
mov
xchg
push
test
dec
je
je
jecxz
pop
outsb
adc
mull
cmp
sub
daa
scas
dec
jl
mov
aam
loope
push
and
xchg
hlt
sbb
cwtl
movsl
xchg
std
ds
stos
dec
in
sub
cmp
inc
dec
sub
outsb
mov
and
les
out
jae
popa
and
js
xlat
sub
js
jb
mov
inc
out
out
xchg
out
mov
pop
inc
fsubrs
mov
into
pop
push
rcrb
push
xchg
cli
jnp
cltd
push
lock
jnp
inc
hlt
jle
stos
out
mov
in
jecxz
mov
dec
push
or
inc
mov
sbb
inc
int3
in
jle
jb
movsl
mov
scas
cmp
jecxz
insb
sbb
mov
repnz
and
cmp
mov
lds
xchg
aad
and
std
lret
cltd
loope
es
sub
imul
sbb
sub
pushl
cmp
mov
xchg
pop
jno
in
mov
pop
rorb
sub
dec
scas
mov
jb
into
enter
xchg
cmp
out
and
addb
mov
mov
adc
add
test
pop
mov
sbbb
sub
out
pop
pop
jo
pushf
xchg
fbld
lds
fbstp
pop
jno
dec
fs
dec
push
ror
outsb
out
mov
xorl
mov
mov
stos
movsb
xor
or
or
and
dec
movsl
pushf
subb
fildll
cs
dec
test
jmp
inc
xchg
fs
mov
pop
mov
inc
in
ret
xchg
scas
out
repnz
pop
adc
daa
je
mov
das
adc
lcall
jg
push
inc
xchg
inc
push
rorl
insb
adc
js
shl
std
nop
jae
xchg
fcomps
aaa
push
stos
push
mov
aas
push
inc
sub
test
shlb
popf
inc
pop
pusha
scas
xor
pop
cmpsl
jecxz
out
and
xchg
sbb
lahf
mov
stc
lea
cwtl
add
pusha
les
rorl
ljmp
add
out
movsb
test
jb
dec
stos
sbb
std
adc
xchg
and
mov
fcom
int3
adc
adc
arpl
lcall
lahf
pop
push
push
adcl
cmpsl
xlat
sub
push
dec
test
aad
inc
push
jg
inc
jge
adc
mov
sub
mov
inc
ret
pop
repnz
sub
push
add
ret
pusha
ss
xor
cld
adc
add
in
leave
jp
rolb
je
mov
sbb
push
rolb
sbb
and
rcrl
xchg
push
in
out
in
insb
and
fistpll
mov
dec
jne
push
dec
test
mov
call
fsts
inc
rcrb
adc
shll
sub
incl
and
add
lds
dec
lcall
fsubp
pop
push
sub
mov
pop
xlat
cmp
adc
jl
data16
or
leave
or
enter
cmp
jo
outsl
and
mov
popa
dec
sti
stos
cs
das
pop
mov
jb,pn
mov
pop
or
ret
dec
mov
jecxz
and
mov
adc
mov
and
add
into
ds
pop
jmp
mov
xor
idivl
push
jp
test
cld
stos
rcll
mov
add
sbb
mov
ror
add
xchg
adc
aaa
pop
jge
adc
cmpsl
jo
test
bound
clc
xchg
adc
mov
adc
mov
rorl
sbbl
push
sub
fisttps
adc
call
aaa
mov
lahf
push
xchg
scas
pushf
out
sub
inc
push
f2xm1
shrb
mov
outsb
mov
inc
pop
jo
int3
pop
mov
adc
or
mov
add
pop
inc
out
pop
lret
jns
sbb
mov
sbb
fnstenv
aam
sti
iret
xlat
js
in
sbb
push
sbb
cld
aaa
push
jne
jmp
sub
lea
das
xchg
loopne
test
adc
sbb
dec
gs
ret
nop
or
lds
fs
mov
sub
sbb
push
or
fwait
jb
int
xor
repz
insb
es
into
push
mov
mov
jb
or
jle
icebp
cmpb
es
inc
xchg
outsl
mov
jne
push
mov
cmpsb
test
jle
pusha
xor
or
cmp
and
sarb
mov
xlat
dec
pop
sub
inc
mov
jle
std
popa
xchg
mov
sbb
sub
inc
shll
pop
cmc
ret
sub
popl
inc
or
cmc
cld
out
pop
cmpsb
popf
loop
cmpsb
pop
insl
addr16
sahf
and
add
in
mov
icebp
sbb
iret
xchg
into
cmp
inc
or
sub
mov
ds
cmc
add
sub
loopne
push
mov
mov
popa
fstps
xchg
outsb
hlt
sbb
ret
xor
jge
sbb
xor
pop
idivl
xor
rclb
into
pop
mov
xlat
lds
dec
sub
clc
dec
jg
mov
fldcw
xchg
mov
js
add
rcll
push
stos
sbb
jg
fiaddl
mov
ljmp
mov
dec
push
sbb
into
cmpsb
sub
mov
mov
mov
xchg
adc
aaa
sbb
imul
pop
dec
add
xor
mov
dec
push
jb
insb
int
hlt
sub
mov
jbe
fisttps
cli
js
pop
mov
stos
inc
adc
adc
decl
mov
push
push
in
bound
push
add
add
push
add
adcl
and
ds
pop
pusha
fists
mov
mov
mov
mov
pushl
inc
pop
aaa
jne
loopne
cmp
ljmp
pop
mov
ljmp
xor
add
fcmovnb
lods
push
fchs
das
add
or
popa
xchg
cltd
cltd
jecxz
icebp
and
pop
icebp
pop
aam
pop
xor
jo
rolb
or
clc
pop
daa
cwtl
mov
mov
andb
xchg
icebp
call
out
pop
push
stos
enter
add
in
mov
push
lods
into
cmc
xor
mov
adc
fsubrp
stc
cmp
lock
or
fld
mov
out
hlt
push
js
out
lcall
jmp
mov
inc
fisubs
adc
sbb
mov
inc
test
sub
cwtl
cmc
fs
imul
mov
orb
adc
ret
sahf
jb
out
cwtl
dec
jae
outsl
js
mov
stc
push
nop
inc
ljmp
add
sub
dec
sbb
test
xchg
mov
jmp
dec
push
data16
test
push
adc
xlat
push
and
sarb
add
adc
pop
in
mov
cwtl
bound
adc
in
cmp
out
push
movsl
fstpl
popf
dec
popl
jmp
cmp
mov
rcll
inc
ret
pop
lods
push
inc
std
pop
pop
ds
hlt
xor
push
testl
xor
xorb
and
shr
shll
mov
fs
add
stos
cmp
or
add
aas
dec
int
add
push
out
xchg
jnp
dec
cmp
pop
nop
nop
jae
lock
sti
add
xchg
movsl
popf
in
adc
faddl
pop
cld
das
leave
adc
shll
iret
push
out
mov
icebp
stos
mov
push
adc
jge
push
mov
sub
push
xlat
pop
mov
popa
push
andb
out
inc
jecxz
lods
lret
mov
xchg
dec
mov
cmp
leave
gs
xchg
in
cld
out
dec
and
outsb
std
pop
idivl
inc
cmp
ror
out
cs
jmp
gs
aad
test
and
pop
popf
push
lcall
call
aaa
or
fs
xor
mov
ret
ss
inc
popa
ds
mov
mov
dec
jbe
xor
arpl
das
or
dec
test
out
xor
push
mov
imul
sti
cwtl
jno
test
in
stos
hlt
mov
and
mov
mov
mov
enter
jae
insl
adc
test
movsb
sbb
test
sbb
pushf
mov
xchg
fcomi
add
xor
xchg
jo
or
mov
repz
xor
push
cwtl
pop
sbb
mov
mov
adc
xor
pop
cld
loopne
shrl
sub
jp
inc
jnp
jmp
test
std
jnp
sahf
roll
ja
insb
das
cmp
notb
into
cwtl
xchg
mov
pop
out
cs
mov
adc
ja
pop
cmpsb
lds
sbb
pop
adc
mov
mov
cmc
mov
xchg
nop
icebp
cmp
mov
xorl
or
lahf
test
mov
or
push
loope
mov
cmp
or
popa
inc
js
and
pushf
pop
out
sbb
popf
sub
es
test
jg
or
lds
jbe
ds
stc
and
mov
cmpsb
or
insl
daa
push
jp
aam
mov
clc
cmpsb
hlt
inc
in
cmp
test
or
mov
xchg
and
cs
je
mov
jae
fstl
xchg
dec
dec
cmp
sbb
sarb
dec
bound
rorb
pop
sahf
movsb
test
lret
mov
adc
mov
dec
out
jmp
in
add
push
out
mov
insl
mov
pop
push
in
mov
mov
xor
jecxz
gs
data16
jge
notb
inc
insl
add
in
xchg
fildll
sarl
or
inc
cmp
test
out
std
add
mov
lods
sub
cmp
inc
xchg
ljmp
cmp
stc
mov
stc
fsubrs
xor
ljmp
adc
dec
xor
outsb
xchg
imul
cwtl
jnp
cltd
call
in
push
mov
js
stos
pusha
xor
ss
or
mov
movsb
icebp
insb
jp
lret
push
fbstp
push
jle
test
fbld
jnp
in
push
or
cmp
sbb
orl
lret
inc
mov
testb
shrl
scas
ret
jno
shr
lods
mov
cltd
stos
jno
cmpsb
sti
inc
push
std
mov
mov
pushf
lods
mov
gs
push
fwait
or
jp
int
out
mov
mov
adc
gs
ds
jae
rcl
mov
xchg
stos
xchg
or
ljmp
cs
xchg
jle
inc
pop
mov
leave
xor
add
push
test
sarl
int
add
xchg
out
mov
aam
std
adc
dec
pop
cmp
cmp
shll
cmp
cli
jge
xchg
in
or
and
outsl
pop
cmpsb
add
inc
sar
cwtl
mov
inc
push
mov
add
shr
dec
xchg
or
inc
jo
lahf
je
insb
fmuls
leave
cmp
clc
push
sub
fbstp
dec
pop
xchg
jmp
sbb
cmp
xchg
xchg
xlat
mov
xchg
mov
dec
mov
cmp
pop
shll
cmc
and
jl
inc
sbb
call
pop
add
clc
xlat
pop
and
stc
loope
cmp
cmp
fnsave
pop
imul
punpckhwd
jl
adc
scas
cmp
inc
mov
das
push
je
in
in
insb
jg
inc
push
fimull
mov
xchg
pushf
add
addl
mov
pop
adc
sbb
mov
icebp
push
sub
outsl
pusha
push
xor
add
orb
scas
jbe
mov
and
mov
xor
jle
mov
leave
into
aam
push
scas
aas
push
push
add
js
mov
loopne
test
xchg
dec
and
mov
cmp
fdivrl
lcall
cli
sub
adc
loop
lock
sub
or
rclb
mov
push
mov
ja
push
sub
adc
lahf
lret
jmp
mov
fdivrs
adc
mov
add
inc
scas
jle
add
inc
testl
nop
mov
and
rcrb
fstps
mov
addr16
aas
xor
cs
sub
pusha
inc
ret
lods
inc
das
xchg
daa
mov
inc
sbb
lea
fs
push
mov
pop
inc
pop
hlt
sahf
int3
mov
fsubrs
and
add
cmc
push
fwait
ds
rcrl
in
or
not
sbb
inc
sbb
into
shll
inc
jne
repnz
and
cmp
dec
or
push
mov
shll
dec
push
or
cmp
imul
push
sub
cmp
xor
mov
xchg
adc
pop
jp
xor
bound
dec
xchg
sbb
jbe
dec
out
cmp
mov
sub
fdivrs
pop
loop
add
movsl
enter
ret
pmullw
pop
fiadds
mov
and
sbb
pushf
push
inc
daa
enter
aas
jmp
push
lods
push
mov
or
xchg
xor
adc
push
fidivs
loopne
pop
inc
sbb
in
cmp
iret
xor
fimuls
rcr
add
ret
mov
and
scas
sub
orb
push
mov
pusha
and
dec
mov
ret
in
or
add
xchg
xchg
add
xchg
or
mov
stos
and
jns
ljmp
pusha
pop
outsl
xor
cmpsl
pusha
push
mov
jle
jl
mov
in
pushf
inc
sar
aas
mov
mov
jb
orb
imul
sbb
insb
fstps
popf
push
orb
icebp
into
jns
sarl
mov
cmpsl
adc
fldt
repz
pop
xorb
and
sbb
cmpsb
sarb
sbb
cmp
mov
enter
pop
repz
out
cmp
int3
idivl
xor
push
jb
ljmp
dec
xchg
cmpsb
cld
fsubrl
pop
xor
outsb
dec
aam
popa
push
jmp
mov
fisttpll
aam
jno
push
and
lahf
sahf
xor
pop
sbbl
pop
mov
xor
add
jecxz
sbb
cmp
dec
cmpsl
lds
shlb
sub
mov
push
js
push
mov
or
sahf
imul
mov
imul
je
stos
sub
fisubrs
sub
pusha
repnz
mov
cmp
xor
xchg
sarl
fbstp
lea
pop
pop
push
movsl
std
xor
push
jae
jno
divb
js
mov
or
push
xor
shlb
pop
leave
mov
stc
jb
or
mov
cmp
jbe
jne
je
sbb
mov
cmpsb
xchg
lret
mov
xor
rcrl
mov
push
shlb
jl
movsb
jo
das
xchg
out
pop
int
loop
movsl
cmp
xchg
test
out
outsl
mov
pop
cld
pop
xchg
je
push
pop
fisubrs
pop
andb
mov
out
add
dec
lret
adc
mov
lret
or
mov
aaa
out
xor
push
jb
xor
sub
mov
or
mov
push
jns
mov
dec
push
sbb
test
sub
test
repnz
shll
dec
idivb
rorb
in
push
or
test
test
and
sub
jg
add
repz
daa
push
movsb
adc
out
inc
jae
sbb
inc
out
imul
nop
fs
pusha
jmp
lahf
lods
dec
daa
mov
sub
sbb
or
jb
jmp
push
xchg
mov
jb
pop
subb
in
adc
mov
mov
sbb
mov
daa
in
test
lock
insb
rol
mov
mov
cmp
sahf
add
dec
xchg
sbb
call
sbb
and
xor
mov
std
pop
pop
inc
shll
xlat
dec
fs
outsl
cmpsl
add
fisubrs
out
cmpsb
cli
repz
cmp
sbb
mov
shlb
and
out
add
sub
pop
lods
loopne
std
cmp
mov
cmp
cmp
pop
inc
push
aad
gs
je
rcl
fmull
sbb
flds
call
mov
add
pop
out
xlat
lds
fdivs
xor
in
jae
xor
dec
aas
dec
xor
loop
in
sti
push
jge
sbbl
sbb
pop
aad
test
adc
push
bound
sbb
mov
inc
repz
mov
jbe
cmc
fwait
in
clc
jecxz
addr16
sahf
push
push
add
popa
out
adc
pop
in
xor
arpl
shll
sbb
mov
cmpsb
out
jb
in
pop
xchg
mov
movl
sbb
leave
xchg
into
mov
push
pop
bound
push
orb
mov
jno
bound
shll
addb
call
xchg
xchg
dec
inc
cmp
and
mov
inc
mov
mov
xchg
cmc
jmp
jne
pop
cmp
mov
scas
pop
mov
in
mov
aad
xchg
clc
xor
movsb
push
push
or
jge
aam
mov
xor
cltd
arpl
xchg
lret
lret
fistpl
mov
xor
push
and
xchg
and
addr16
pushf
fnstcw
shll
cltd
jl
cmc
std
xlat
cmpsl
ds
data16
add
std
test
jmp
inc
sub
test
cmc
add
lret
fdivrl
rclb
rol
dec
leave
or
xchg
fnstsw
push
adc
pop
rclb
aaa
andl
pop
pop
dec
and
stos
pop
inc
dec
jecxz
lods
mov
xchg
aad
rorb
xlat
cs
aas
out
add
mov
or
adcl
cmp
dec
je
repnz
loopne
xor
aam
stos
std
push
lods
cmpsl
or
inc
int
imul
lods
mov
add
cmpsl
cmp
jns
push
dec
sbb
stos
add
and
xorl
std
pop
push
push
iret
push
orl
das
pop
adc
inc
jl
ljmp
fcomip
movsl
adc
hlt
gs
sbb
ret
cltd
mov
std
dec
arpl
fistps
jno
jae
jl
mov
fildl
sub
in
lret
iret
inc
mov
hlt
out
xchg
out
mov
add
orl
iret
pop
filds
fldl
pop
pushf
push
fdivp
inc
jmp
cwtl
mov
lret
mov
jl
cltd
repz
jmp
lds
pop
fwait
sub
pushf
xchg
test
mov
pushf
xchg
test
pushf
in
mov
jl
aas
push
enter
cltd
pop
cmp
cmp
and
fwait
push
xor
ljmp
sub
insb
iret
frstor
xchg
mov
test
mov
js
dec
xchg
addl
ss
ljmp
jmp
mov
dec
xor
or
inc
stos
lock
mov
lds
xchg
test
fs
fcmovbe
xchg
cli
inc
adc
jl
cmpsb
popa
sub
movsb
jnp
pop
adc
push
dec
sub
jg
leave
add
xor
call
addr16
rep
mov
nop
enter
and
cmpsl
stos
cmp
loop,pn
rdtsc
dec
mov
clc
sub
daa
push
jno
scas
arpl
xchg
lret
inc
add
daa
ds
stc
sbb
aam
pop
inc
or
mov
aad
sbb
daa
xchg
mov
mov
push
mov
sbb
xchg
ret
scas
add
and
mov
push
into
aaa
repnz
cmp
scas
push
jmp
and
push
adc
lods
bound
add
js
pop
pop
in
xor
outsb
pusha
pop
incb
mov
sbb
roll
pop
dec
mov
repz
rorb
add
dec
dec
clc
push
inc
jne
push
rcl
shrb
sti
andb
iret
mov
mov
xchg
inc
insl
popa
push
lret
test
imul
and
and
mov
jae
sbb
sbb
push
test
mov
aad
push
scas
cmpb
ljmp
sarb
fsub
gs
cld
jp
insb
repnz
lds
int3
ret
inc
sbb
data16
stos
mov
or
adc
movsl
and
in
mov
dec
in
cmpsb
pop
das
daa
inc
cs
mov
or
call
push
fsubrs
leave
adcb
notl
in
mov
push
cmp
repz
shrb
in
jnp
pushf
ss
pop
arpl
xor
sbb
adcl
jb
jl
iret
mov
or
sbb
lret
mov
push
push
mov
cmp
mov
lods
imul
andb
sub
xor
lods
jb
ret
cli
out
mov
fadd
add
sbb
sbb
xor
movsb
stos
cmc
cmp
mov
imul
inc
mov
daa
mov
add
ds
shll
xchg
or
into
cmc
rcrb
loope
jmp
fwait
lcall
inc
les
sub
push
and
das
scas
rcl
aas
push
jnp
mov
dec
xchg
inc
out
out
pop
outsl
mov
daa
xrelease
jo
inc
out
je
test
sbb
sub
or
push
or
xor
adc
in
mov
xor
add
add
pop
dec
lock
insb
movsb
cwtl
rcrb
xchg
addb
mov
jnp
in
mov
js
jmp
xor
cltd
ljmp
test
xchg
or
insl
cmp
loope
push
sub
cmp
mov
stc
sbb
test
xor
loopne
movsb
repz
test
rcrl
stos
sbb
xchg
add
das
ss
push
fs
cmc
insl
sub
dec
or
jg
jmp
inc
pop
mov
icebp
mov
jns
fisttps
icebp
xchg
lahf
fstpt
push
mov
shlb
fldenv
and
je
add
and
mov
dec
fmuls
xlat
dec
test
jb
mov
divb
sbb
jnp
add
fwait
push
jg
or
pop
and
sahf
divl
jecxz
jp
cltd
mov
daa
out
add
or
test
pmaxsw
jle
cmpb
movsl
icebp
orl
inc
jecxz
adc
cmp
arpl
add
xchg
pop
popl
mov
push
clc
jp
mov
xchg
jnp
mov
incl
adc
cmp
push
mov
push
and
aaa
aas
aas
jmp
call
pushf
fistps
pop
inc
pushf
fldl
aam
xor
dec
add
or
daa
sbb
std
loopne
test
inc
jp
xlat
mov
fsts
sbb
push
sbb
out
fistl
xlat
jns
mov
icebp
cmp
add
inc
orb
push
dec
pop
xchg
xor
aaa
mov
nop
fnstcw
xchg
int3
repz
dec
or
dec
mov
and
jg
cld
inc
jp
xor
and
jne
xlat
in
xchg
mov
outsb
popa
add
adc
ss
int3
out
dec
add
je
icebp
push
and
movsb
movsb
fwait
ljmp
popf
adc
mov
lret
sbbl
stos
jnp
adc
jg
fnsave
cmc
fnstsw
xchg
mov
ret
jo
hlt
push
inc
xor
clc
sub
fdivrl
xchg
pop
in
das
sbb
popa
lret
incl
xor
adc
scas
or
jnp
or
add
push
and
bound
frstor
outsb
push
lret
jecxz
clc
call
dec
cmovnp
jmp
jne
out
and
fwait
ds
push
js
inc
jnp
adc
xorb
xchg
idivl
mov
ficomps
mov
ret
aas
pop
adc
push
lcall
aam
jl
xor
xor
ljmp
movsl
loope
sbb
xchg
subl
in
push
fistpll
scas
xor
lret
dec
pop
sub
jg
jo
push
mov
insl
pop
loopne
cmp
popa
sub
rcrb
clc
mov
fwait
test
mov
lds
and
cmpsl
testl
xor
adc
and
out
leave
arpl
fsubl
sub
xchg
inc
push
stos
addl
inc
jle,pn
addr16
sbb
mov
inc
inc
mov
push
sbb
lock
dec
test
mov
subb
xor
dec
xchg
inc
aam
inc
fwait
pop
pop
xchg
addb
sbb
imul
cmp
inc
mov
adc
fsubr
push
lods
ret
cli
movsl
in
bnd
insb
jns
andb
fwait
int
leave
sti
inc
mov
pop
mov
or
mov
test
jle
movsl
jbe
inc
lret
mov
shlb
imul
hlt
imul
adc
rcrb
jns
mov
cltd
fsubrl
sub
jecxz
incl
sub
shl
inc
push
mov
xchg
inc
in
inc
das
sbb
nop
jnp
outsb
sbb
repnz
hlt
mov
lcall
xor
pop
sahf
mov
mov
push
mov
cmpsb
je
sbbl
and
test
and
add
std
lret
jp
push
sub
int3
add
clc
sti
mov
jns
fs
in
std
sub
inc
cmp
dec
xchg
add
lods
movsb
out
sbb
shlb
dec
mov
mov
dec
pushf
lret
imul
sbb
sub
pop
lock
fisttpl
icebp
sbb
mov
add
outsb
out
dec
mov
sub
push
xor
iret
xchg
fcomip
pop
push
xchg
in
jecxz
imul
clc
or
outsb
rcl
inc
out
mov
cmpsb
mov
hlt
jge
inc
or
jg
repz
dec
lods
cwtl
and
push
sti
push
mov
testl
pop
xor
out
insb
lods
sbb
and
imul
pop
xchg
jmp
mov
or
adc
addb
outsl
outsl
inc
aam
adcl
push
or
xlat
mov
mov
nop
pop
in
or
inc
stos
pop
cwtl
or
mov
jle
out
push
rclb
pop
mov
and
cmp
nop
adc
inc
stos
out
jae
adc
out
nop
pop
xor
ret
hlt
lret
ret
xor
repz
imul
dec
pushf
adc
sbb
xchg
aam
or
icebp
inc
pop
xor
dec
fsubrl
inc
in
inc
push
mov
sbb
mov
mov
sti
dec
std
in
mov
and
in
fwait
lret
cmp
pop
cmpsl
nop
cmp
mov
ss
adc
pop
ret
xchg
imul
in
addr16
xor
movsl
mov
mov
imul
dec
and
adc
jge
add
aam
loop
and
jb
cmp
leave
pop
inc
rorb
mov
xchg
mov
cmp
jns
add
dec
cmp
es
cltd
inc
jbe
inc
and
push
xchg
fs
imul
imul
jnp
add
sub
mov
add
adc
cmp
cmpsl
cmp
xchg
lcall
cmc
es
pop
xchg
sub
stc
clc
cmpsb
fnstsw
aad
outsl
rcl
shll
loope
gs
rorl
lcall
pushl
nop
sub
ror
in
dec
lret
mov
outsb
es
mov
xor
inc
sub
dec
adc
mov
call
stos
lahf
inc
int
jne
lea
jno
aaa
cwtl
sbb
imul
xor
pop
mov
outsl
xchg
lods
dec
push
dec
rcr
jae
insl
ljmp
mov
mov
or
iret
adc
fisttpl
iret
push
push
jl
leave
lret
push
test
mov
jmp
popf
fs
cmp
int3
push
mov
test
aas
sub
jno
pop
in
pop
outsb
jecxz
shl
daa
inc
inc
add
dec
jle
cmpsb
testl
notl
je
mulb
jl
and
arpl
pusha
push
xorb
cmpsl
icebp
js
aam
movl
dec
aad
and
ds
cmp
sub
or
ss
adc
and
stc
cld
pop
imul
std
jg
xchg
bound
add
out
ret
fcmovne
jmp
inc
dec
lahf
push
out
mov
repz
dec
adc
mov
lods
pop
test
js
xchg
mov
cld
repz
aaa
cmp
sub
loopne
and
lahf
dec
fcomps
ret
cs
or
adc
cmp
mov
imul
cmp
stos
inc
hlt
jae
xor
xchg
pop
xor
sbb
icebp
rcrb
mov
loope
fildl
push
mov
repz
sub
je
cld
and
push
push
loopne
jnp
cwtl
aam
fdivrp
lds
pop
cltd
jp
pop
outsl
ffree
mov
imul
scas
lods
in
xchg
and
jns
popf
or
dec
jg
insl
lock
popf
sub
or
mov
das
repz
sbb
cmpl
adc
sbb
sub
movsb
into
jle
ss
idiv
pop
test
add
jns
fwait
mov
iret
sbb
jle
cmp
mov
leave
movsl
test
mulb
cmp
pushf
adc
mov
int3
sub
int3
xchg
jp
lahf
stos
js
icebp
out
in
jmp
mov
mov
mov
or
imul
into
or
mov
jbe
les
mov
addr16
scas
lods
lock
mov
jbe
and
fsubl
and
aam
std
lcall
adc
cmp
and
adc
and
dec
dec
fldenv
sub
lret
lea
mov
xorb
mov
and
scas
pop
mov
cmpsl
icebp
inc
adc
mov
arpl
inc
add
jecxz
outsl
jle
test
xchg
gs
pop
in
scas
jae
add
cwtl
loop
negl
imul
mov
clc
fwait
cmc
jae
rcrl
stc
pop
ljmp
fldl
test
mov
adc
mull
xchg
lea
pushw
ds
sbb
mov
dec
shrb
data16
cmpsl
frstors
dec
je
and
call
movb
cmp
mov
aaa
repnz
mov
pusha
pop
movsb
sbb
cmp
sti
mov
mov
popf
cmp
push
movb
mov
les
push
mov
mov
push
lret
outsb
scas
ret
add
adc
outsb
imul
mov
mov
fs
sbb
jne
cmpl
dec
call
leave
sbb
fsub
andl
je
lds
cmp
loop
sub
jp
inc
addr16
pop
push
inc
mov
fstps
insb
add
or
mov
fs
sub
pop
repnz
into
push
iret
inc
pop
and
dec
mov
int
hlt
jbe
daa
out
mov
lods
lea
shl
hlt
cs
xor
pop
in
std
leave
fcoml
xor
or
inc
add
jp
xor
or
call
je
sbb
repnz
inc
movsb
pop
pop
testl
lret
or
mov
lods
or
push
xchg
add
cmp
repz
arpl
mov
in
and
nop
ja
push
xor
xor
cli
scas
mov
enter
sub
mov
dec
add
aad
sub
mov
mov
jne
pop
cmpsb
das
sbb
jecxz
rorb
cwtl
out
test
jle
add
inc
cwtl
out
mov
mov
sbb
movsl
pop
push
mov
in
push
sbb
cmpsb
cmpsl
xchg
ljmp
adc
add
fcomps
nop
stc
mov
negl
imul
rcrl
adc
flds
fwait
lret
xorl
ja
rorl
daa
in
pop
scas
mov
mov
in
js
add
cmp
push
stos
xchg
inc
mov
and
cmpsb
or
dec
scas
movsl
call
inc
lcall
push
sti
sahf
cmp
imul
stc
lret
dec
loope
inc
adc
pop
pop
out
clc
sbb
cmpl
sub
scas
sbb
pop
or
pop
orb
stc
push
lock
test
lret
arpl
stos
iret
push
sbb
mov
lds
mov
push
adc
repnz
cmpsl
cmp
dec
mov
out
or
repz
outsb
out
mov
sbb
push
incl
xor
lret
adc
aam
mov
mov
clc
or
mov
and
adc
dec
push
in
jne
push
sub
outsb
fnstsw
push
cmp
lret
pop
loop
mov
push
inc
or
or
lahf
pop
mov
mov
insl
inc
test
jbe
mov
and
inc
push
mov
xchg
addr16
outsb
push
hlt
mov
jle
cmc
notl
mov
in
mov
insb
xor
rclb
lods
inc
adc
jl
lea
arpl
std
insb
cmp
shr
cmp
ljmp
ds
mov
xchg
xchg
jns
cwtl
xchg
lahf
imul
mov
scas
sub
dec
cmp
test
sub
push
movsl
sub
push
xchg
mov
into
fstl
pop
test
mov
das
mov
mov
popf
clc
out
mov
inc
cltd
enter
pop
jge
push
jo
ret
out
test
sahf
loope
mov
call
outsl
xor
mov
or
mov
rclb
mov
pop
adc
mov
adc
cmc
xchg
lods
jnp,pt
jg
add
sbb
mov
fdiv
adc
pushf
inc
fnsave
insb
stc
adc
xchg
mov
fbstp
lcall
fcoml
add
xchg
mov
sbb
add
call
cmp
sub
subb
jo
cs
add
fstpl
inc
andl
push
and
scas
and
lock
hlt
stos
xor
inc
add
xor
xchg
andb
lea
cmp
push
inc
nop
push
push
fiadds
ds
outsl
repz
shll
scas
cmc
mov
add
repnz
aad
dec
cmp
pushl
outsb
pop
xchg
pop
pushf
aaa
filds
outsb
insb
jl
xchg
aad
add
in
mov
jmp
mov
sbb
inc
and
ret
pop
out
loopne
mov
add
pushf
mov
sub
mov
das
repnz
stc
push
mov
add
or
test
and
mov
repz
jmp
cltd
lret
cwtl
or
jg
mov
push
jmp
repz
fcoms
outsl
cmp
fistl
sub
std
loope
dec
outsb
gs
fmuls
pop
aas
mov
insb
nop
fwait
out
cmp
pop
mov
ss
inc
push
mov
push
out
add
jge
sbb
loop
mov
enter
or
test
outsl
pop
mov
imul
ret
or
mov
adc
or
lds
ljmp
xor
inc
inc
adcb
jno
sti
mov
cwtl
sub
xchg
mov
pop
ljmp
mov
dec
lret
aas
out
fadds
sbb
jns
das
out
cmc
lock
idivl
mov
movsb
sarl
pusha
mov
push
movntps
cmp
sub
add
stc
addb
push
pop
jecxz
pop
out
ds
sbb
movsb
xchg
xchg
fs
andl
outsb
xchg
sbb
xchg
adc
push
push
rorb
or
inc
sbb
dec
add
xor
rcll
outsl
lock
mov
vmovd
xchg
loop
push
xor
pop
stos
xlat
mov
jp
mov
mov
xchg
mov
inc
in
daa
popa
clc
or
inc
icebp
xchg
sub
xor
mov
into
mov
js
cmp
clc
mov
fistpl
iret
mov
cld
rclb
xor
test
test
inc
pushf
addb
xchg
mov
rcll
test
mov
sub
jne
push
jns
push
outsb
subl
repnz
stos
adc
and
cmp
rorl
mov
lods
scas
mov
xchg
les
into
rcrb
scas
xchg
aam
ficoml
insl
and
dec
pushf
mov
int3
or
insb
mov
xchg
lods
cmp
xchg
nopl
xchg
adc
ss
test
dec
mov
hlt
mov
icebp
cmpsb
xlat
adc
pusha
push
mov
xor
push
testb
xor
add
mov
test
dec
lcall
test
inc
or
je
xorl
arpl
fsubs
popf
mov
inc
xor
out
scas
insb
and
leave
inc
arpl
jecxz
inc
in
mov
dec
jo
sbbb
jo
faddl
and
loope
aaa
and
and
arpl
adc
testl
mov
ret
les
aad
fidivl
lcall
jnp
mov
aas
adc
dec
dec
jnp
mov
sub
iret
and
pop
fcmovne
mov
outsb
out
add
pop
out
inc
sub
mov
popf
mov
and
mov
aad
sbb
lock
enter
add
and
pop
xor
mov
dec
pop
stos
aaa
pop
mov
mov
mov
inc
or
cmp
push
xchg
mov
sub
pop
popf
lcall
push
xchg
in
push
movsl
push
sbb
sahf
mov
sub
push
sub
mov
lcall
rclb
push
aas
fadd
aam
jl
push
pop
jl
imul
test
orb
mov
push
mov
mov
pusha
std
test
pop
shll
idivl
or
ret
daa
aad
movsb
out
inc
sbb
aad
and
jmp
ljmp
jno
popa
dec
out
xor
cmp
fxch
or
jo
add
bound
stos
sub
jmp
inc
add
pop
loope
aam
pop
ss
imul
daa
loope
adc
cmp
aad
in
xor
loopne
add
inc
fcmovnu
fidivrs
pushf
sbb
sub
sub
adc
mov
sarl
sbb
lcall
inc
xchg
mov
xchg
and
fisubrs
pop
mov
mov
dec
mov
adc
outsb
dec
and
ret
std
sub
fnsave
xchg
es
adc
shll
add
push
dec
pop
mov
mov
mov
sarb
jle
mov
and
adc
in
cld
and
mov
inc
push
ret
inc
lcall
push
inc
inc
xor
adcb
sbb
mov
sub
js
fldt
cmp
stc
dec
sbb
add
dec
and
sbb
xor
fstl
sti
lods
aas
cwtl
lds
loopne
push
out
clc
inc
push
lods
inc
outsb
sub
add
mov
mov
xchg
dec
jns
or
and
les
ljmp
das
jbe
jne
andl
fsubrs
aad
test
sbb
repnz
fstps
mov
xchg
cmp
adc
cmp
inc
inc
lods
je
daa
cmp
ja
lock
outsl
fsubrs
and
jl
sbb
pop
sbb
pop
sti
and
pop
iret
pushf
fidivs
mov
arpl
jo
test
mov
xchg
mov
repz
dec
xor
movsl
push
inc
sbb
sbb
pop
add
jae
add
pop
arpl
sbb
mov
icebp
iret
cld
xor
inc
jecxz
fdivp
cmp
pop
popa
inc
rcr
sbbl
sub
pop
mov
nopl
in
out
hlt
lcall
loope
push
add
test
pop
inc
and
mov
sub
loop
pop
cmp
fisubrs
sbb
mov
das
int3
in
pop
push
mov
adc
arpl
sbb
jnp
jle
inc
sub
cmp
push
jge
or
fmuls
rcr
mov
lea
mov
test
xlat
fdivrl
xor
and
mov
arpl
xor
rol
in
cmp
lods
jecxz
push
sqrtps
xchg
xor
aad
jne
and
add
ror
mov
and
pop
dec
mov
dec
stos
adc
movsb
popa
or
jb
add
fmull
xchg
fisttps
inc
xchg
push
lods
cmp
push
in
cmpsb
andl
or
out
jne
pop
mov
inc
lock
cmp
cwtl
add
pop
data16
jmp
test
stos
push
pop
sbb
jecxz
jno,pn
hlt
test
fdivr
mov
push
aaa
and
mov
push
outsb
lea
stc
cltd
adc
jl
push
sub
es
lahf
mov
mov
xor
push
test
popf
jg
add
mov
pusha
mov
mov
lret
push
cmp
sarb
cwtl
add
dec
cmp
js
loopne
test
inc
pop
push
dec
pop
adc
cld
loop
fsts
testl
mov
cs
xchg
fs
inc
in
ret
loope
nop
jge
fstpt
jmp
inc
jle
shr
mov
sbb
xorb
cmpsb
js
hlt
pop
andb
cli
int3
loopne
dec
cmc
fistpl
adcl
jge
ja
cmp
sbb
popf
aas
lcall
cmp
shlb
jle
sbb
repnz
jbe
mov
test
pop
push
sarb
cli
xchg
mov
cltd
inc
cmp
repnz
test
and
stos
mov
in
mov
mov
xlat
sub
fldt
add
call
sub
push
shlb
ds
sbb
and
mov
sub
inc
jge
inc
out
std
and
lock
push
inc
pop
dec
sarl
ja
daa
mov
movsl
inc
sbb
push
push
ss
add
xchg
mov
faddl
push
xchg
sti
stc
aad
fcmovb
push
add
mov
push
clc
loop
or
cld
fbld
js
repz
lods
push
xchg
cmpsl
mov
adc
pop
jmp
stc
push
push
mov
lret
lods
pop
lods
push
xchg
lods
mov
pop
mov
loopne
or
jo
cmp
insl
adc
cwtl
lret
stc
sbb
pop
sub
ret
xor
adc
pusha
pop
adc
jo
dec
sub
sahf
mov
add
xor
fsub
inc
dec
pop
and
xchg
inc
mov
es
adc
add
adc
push
lahf
mov
das
xor
sbb
je
out
mov
pop
les
fistpl
jl
add
inc
pop
jae
add
test
jecxz
aas
bound
in
push
add
mov
repz
enter
cmp
cmpsl
into
idiv
fisttpll
stos
movb
adc
cltd
shll
shrl
pop
and
xchg
pminsw
jge
ret
xchg
addr16
xorl
dec
jnp
adc
hlt
push
ret
sub
push
and
add
mov
std
stos
fcompl
ret
xor
js
mov
call
push
xor
xchg
pop
fxch
nop
in
inc
mov
jl
pop
les
and
push
rolb
clc
pop
pop
jae
pop
test
mov
xchg
or
xlat
iret
pop
popf
scas
xor
aad
ljmp
mov
cmp
aaa
or
dec
inc
push
cmpsl
sub
jmp
pop
icebp
repz
jns
push
xchg
js
sub
dec
xor
les
sbb
push
jb
int
movsl
test
pushf
into
test
mul
addr16
imull
or
pop
pop
mov
adc
sbb
iret
add
adc
sbb
mov
fnstcw
xchg
xchg
mov
cmp
scas
add
add
inc
fucomip
jge
into
and
rcll
in
outsl
xorl
mov
ret
dec
jb
push
repnz
adc
inc
enter
std
inc
fwait
push
fidivs
sar
adcl
jo
mov
and
fdivrp
sbb
sub
push
aad
test
lds
cmpl
jae
mov
ret
add
sbb
add
pop
sub
mov
test
cmp
push
popf
jg,pn
pop
inc
xor
addr16
out
fcomi
pop
xor
incb
fbld
es
push
dec
push
inc
dec
pop
add
ss
jns
mov
xor
and
fcoml
loopne
fisubrl
jmp
lcall
and
andb
imul
mov
hlt
jne
jno
cmp
andl
psllq
sti
push
jne
inc
push
cwtl
aaa
aas
push
and
push
jo
rol
pop
mov
inc
add
or
fwait
cli
xchg
pushf
mov
add
xor
dec
cli
les
adcb
adc
push
stos
sahf
sbb
inc
inc
push
jb
in
dec
int3
or
cmp
fwait
sub
mov
leave
push
cltd
xchg
add
shll
cmp
icebp
fsubs
fidivl
and
cwtl
popf
or
push
mov
push
mov
lahf
xchg
inc
sub
int
pop
out
sub
int
jp
repz
fstpl
jno
aad
jmp
pushl
mov
bnd
ficompl
js
xchg
xchg
sbb
xchg
fistpll
sbb
movsl
mov
jmp
add
mov
popa
lock
aam
xchg
mov
xlat
stos
into
out
mov
inc
mov
lahf
adc
and
mov
adcb
jmp
pop
jae
push
inc
push
jle
call
inc
ss
xor
push
pop
mov
push
xchg
daa
jmp
les
stc
test
xor
sub
int
pop
jne
mov
fdivs
fbstp
aas
icebp
repz
stos
lret
add
xor
and
loope
inc
sub
sub
jmp
mov
addl
out
xor
mov
mov
fsubrl
outsb
fwait
xchg
cmc
fistl
dec
repz
sbb
imul
jecxz
in
sub
mov
loopne
imull
lcall
mov
cmp
lcall
aad
fwait
add
movsl
divb
adc
mov
pop
scas
shll
adc
cli
out
inc
push
loope
sbb
sbb
push
xor
sbb
and
xchg
jae
scas
mov
add
xchg
adc
test
mov
and
out
jns
pop
imul
sbb
fwait
movsb
mov
xor
outsl
into
loopne
jb
add
sbb
jmp
lea
and
mov
jl
push
adc
rep
xor
push
into
sub
jae
cltd
jo
loopne
dec
fisttps
ficoml
rcrb
lods
dec
lods
xchg
cmp
fldl
movsb
xlat
push
addr16
sahf
cmc
inc
out
sbb
sti
and
push
pushf
ret
adc
fldl
hlt
mov
and
rorb
adc
mov
mov
pusha
sarb
and
cwtl
outsl
push
push
dec
rcrl
sub
rorb
xchg
ret
sbb
lea
cltd
pop
jo
lcall
ljmp
sbb
xlat
pop
mov
add
sub
adc
movsb
lock
mov
faddl
jmp
or
hlt
insb
xor
scas
mov
cmpl
inc
or
jne
dec
xchg
fbld
rcrb
cmpsb
bound
mov
icebp
cli
jp
cmovbe
mov
inc
xchg
pop
push
imul
mov
xchg
cmp
int3
or
bound
popa
jne
xchg
adc
pop
mov
dec
lds
in
jns
les
push
shr
shll
jb
pusha
jle
andb
aas
fldt
into
out
outsl
dec
je
mov
ret
aad
dec
addr16
mov
push
test
es
sti
shrl
bound
mov
in
jb
pop
test
nop
shll
push
xor
dec
push
in
int3
and
jns
nop
mov
int
xorb
or
mov
pop
xor
xchg
ds
fldenv
pop
popa
mov
loop
fnstsw
cmc
jmp
stc
push
or
nop
into
insb
push
xchg
pop
mov
mov
and
sub
in
jb
push
pop
adc
lcall
xor
loop
pusha
sbb
imul
fistpll
sbb
jns
sbb
sub
push
jne
and
sbb
or
flds
or
lods
ret
or
sahf
jecxz
lahf
xchg
jle
sbbl
das
rol
add
and
inc
cmpsl
xchg
push
cmp
inc
test
movsb
aam
xlat
inc
xchg
call
cld
sub
test
insl
mov
pop
mov
fnstsw
cmc
sub
xorb
add
adc
mov
dec
cltd
mov
divl
leave
ret
dec
mov
data16
mov
sub
jecxz
dec
stc
xchg
mov
cmp
shr
repnz
rcr
lods
push
je
pop
and
xchg
jb
pop
ja
aas
jecxz
inc
ror
or
inc
sub
test
adcl
bound
add
sub
mov
mov
movsb
popf
push
cmp
outsl
sar
sub
ljmp
in
in
clc
mov
xlat
test
sub
mov
push
inc
cld
stos
mov
inc
ja
dec
subb
pusha
xor
js
movb
fisubs
repz
mov
sti
shll
jmp
mov
jae
jb
jbe
loope
adc
add
push
pop
mov
pop
repnz
daa
pushf
mov
dec
xchg
cmpb
shrl
in
lahf
pop
push
aas
cmp
rol
push
add
jnp
jns
cli
mov
inc
nop
add
jo
fwait
xchg
push
add
jg
sbb
fwait
mov
push
add
mov
sub
push
test
nop
jp
mov
jo
adc
cmc
out
shrb
pop
jne
jp
bound
jae
jbe
mov
sbb
int
or
and
jae
or
cmpsl
mov
clc
ja
xchg
push
jb
pusha
daa
ficoms
xchg
rorl
and
or
xor
xor
icebp
jle
mov
jge
insl
sarb
insb
sti
mov
jb
mov
mov
pop
jp
jge
adc
popf
nop
adcl
add
clc
and
nop
inc
mov
sub
jb
movsl
lcall
pop
cmp
inc
ja
in
movsl
mov
xchg
shl
sub
sti
sub
push
movsb
and
xor
pop
xchg
or
jo
mov
fsts
jl
cmp
jbe
cld
add
push
jmp
dec
movsb
jns
fcmovnb
addr16
push
or
fildll
jnp
mov
lcall
add
xor
int3
sbb
ja
rcrl
sbb
ret
xchg
cmp
pop
mov
mov
mov
insb
cmpl
inc
cld
xor
push
std
pop
lock
jo
movsb
push
pop
xor
dec
outsb
sti
cmp
inc
ds
test
mov
lea
jl
inc
sub
sbb
xchg
nop
or
lds
xchg
mov
out
push
cld
push
mov
inc
sub
mov
mov
mov
sub
jecxz
xchg
fimull
and
jnp
shr
pop
iret
scas
sahf
or
fs
data16
and
cmp
jg
push
fists
adc
add
out
insl
outsb
incb
mov
xchg
ficoms
dec
fisubrl
ret
dec
jle
mov
fcos
ret
aad
out
or
adc
cwtl
xchg
bound
push
jmp
int
stc
inc
test
and
aaa
fcmovne
in
stos
test
cmp
lods
and
adc
pop
and
out
std
enter
inc
xchg
pop
jge
or
xchg
mov
imul
ja
mov
xorl
fs
mov
testb
daa
sbb
mov
push
xchg
scas
jle
roll
inc
push
inc
mov
lret
pop
fs
mov
xor
pop
mov
cld
and
sub
scas
test
inc
hlt
lods
and
out
popa
es
inc
out
lock
cmpsb
pop
or
dec
imul
mov
add
jnp
and
cs
xchg
mov
cmp
sbb
push
xchg
jno
xor
inc
dec
hlt
dec
jmp
loopne
xchg
out
out
xor
fisubl
call
xor
pop
shlb
lods
loop
and
sbb
mov
cltd
inc
mov
fnstenv
out
or
cmp
xchg
test
arpl
add
popf
enter
sub
lret
outsb
add
cmp
movsl
stos
fs
sbb
ja
or
in
sub
int3
dec
mov
xor
cmp
fadd
mov
inc
leave
mov
ds
ds
push
add
mov
and
loopne
pop
lods
subb
lea
sarl
mov
xchg
inc
dec
mov
cltd
je
push
jg
imul
push
mov
inc
and
mov
in
adc
adcb
inc
loopne
cmpsb
xor
out
dec
vmovups
js
add
cmp
lcall
rolb
cmp
ss
cwtl
mov
dec
test
aas
mov
mov
aaa
xchg
lret
sub
jne
xor
jmp
repnz
cltd
xchg
lret
imul
fdivs
sbb
cmp
jne
pop
sbb
loopne
and
outsb
lds
pop
aam
inc
push
ret
xor
xchg
lods
adc
into
xorb
inc
mov
fcmovne
mov
fidivl
sub
lret
dec
sti
in
aas
out
inc
addr16
rcll
xor
pop
inc
mov
jmp
mov
push
pushf
lahf
jno
xor
push
mov
cmp
divb
jbe
lds
sub
mov
mov
pop
sti
adc
jns
sbbb
pop
xchg
rorb
mov
pop
cmp
xchg
into
mov
or
imulb
inc
das
aas
fstps
shlb
sahf
inc
mov
mov
sub
sbb
lea
mov
fisubl
jb
sbb
jno
pop
mov
pusha
sbb
pop
push
fbld
inc
je
push
mov
adc
jmp
push
leave
hlt
cli
shrl
int
stos
fistl
call
dec
bound
js
ss
dec
jmp
push
xrelease
out
ja
xor
push
je
cmp
fadds
jne
stos
scas
popf
scas
rclb
out
xchg
mov
bound
adc
inc
pop
and
mov
in
xchg
pop
test
xchg
dec
jbe
jne
mov
xor
and
pop
cmp
mov
mov
sbb
mov
sti
ret
imul
sub
iret
push
mov
push
imul
shlb
mov
jecxz
cmpsb
jne
hlt
inc
iret
cli
jne
ret
mov
popf
and
pushf
stos
int3
mov
std
cld
mov
mov
das
pop
cmpb
inc
add
cmp
push
sbb
mov
push
push
push
sub
mov
jl
test
pop
andl
mov
ja
test
into
inc
out
movsl
loopne
xchg
dec
mov
inc
stc
lea
inc
xorb
cld
js
jp
and
sarb
repz
mov
fildl
cmp
push
add
cmp
les
push
sti
and
outsb
test
rcr
xchg
pushl
das
cmp
push
addl
mov
xor
jnp
and
clc
push
ror
fiaddl
ja
jecxz
adc
mov
popa
sahf
dec
pop
xchg
dec
enter
out
jp
mov
imul
mov
add
stos
sub
xor
and
mov
inc
les
pop
fildll
mov
cli
daa
xor
data16
pop
fwait
jb
inc
mov
sti
fwait
ds
fistl
dec
sarl
adc
jbe
mov
in
add
adc
inc
jl
mov
popf
fsub
pop
out
push
mov
add
cmc
adc
push
jp
mov
aaa
and
add
outsb
and
jmp
ret
sub
inc
and
mov
pushf
scas
lock
scas
cmc
xchg
pop
jge
nop
jne
cmpsb
or
sub
mov
sub
bound
sbb
pop
out
leave
push
sahf
add
and
sub
lret
jmp
jg
ret
inc
lret
add
push
add
mov
sub
aas
inc
and
insl
in
mov
pop
inc
mov
stos
fs
orl
lock
icebp
jecxz
xor
test
sub
test
out
push
addr16
sbb
push
inc
lods
xchg
push
aaa
iret
rorb
ja
sub
hlt
cmp
fsubs
mov
mov
iret
sbb
mov
movsl
imul
sub
lods
cmp
popa
sub
xor
push
repnz
enter
movsl
popa
jbe
leave
shll
lods
jnp
sbb
xchg
sbb
lods
cli
cmpsb
mov
add
lret
or
daa
mov
sbb
ljmp
dec
notb
filds
pop
mov
sub
ret
mov
or
rcrb
pop
push
push
xchg
loope
loopne
push
cmp
xchg
out
movsl
pop
movsl
dec
jg
es
xlat
add
roll
xor
mov
and
xchg
jg
pop
call
cmc
ds
mov
and
test
mov
mov
mov
sbb
in
stc
xchg
outsb
movsb
xor
add
adc
lods
add
test
sti
mov
dec
shr
cltd
push
das
rcrl
push
das
fcoml
cld
addl
jmp
adc
sbb
scas
and
dec
and
rol
xor
cmp
dec
jle
je
xor
jo
andb
add
das
adc
mov
neg
aad
mov
fidivrl
push
mov
cmp
into
jns
xchg
dec
loopne
call
pushf
lods
test
jl
or
imul
int3
push
push
add
and
call
repnz
jbe
sbb
movl
push
dec
cmpsb
pop
mov
sub
outsl
les
sbbb
cmp
insl
cmp
insl
jne
xchg
lock
js
insb
pop
not
xor
pop
inc
testl
xlat
jne
mov
les
lds
cmp
fisttps
dec
push
and
cmpb
imul
or
inc
or
aas
inc
mov
clc
xor
jbe
hlt
cltd
push
pop
ljmp
inc
inc
neg
mov
or
sbb
stos
std
xor
in
pushf
mov
jb
into
add
push
fldt
ret
rolb
fucomp
das
inc
ret
notl
fldt
sub
lea
jb
pop
pop
filds
mov
lock
or
mov
cmpsb
pop
dec
mov
ficoml
idiv
js
loope
cld
sbb
inc
push
add
xor
sub
and
cmpsb
cmpsl
and
dec
icebp
nop
sub
push
jmp
mov
mov
pop
mov
in
test
xor
ljmp
add
and
cmp
lret
orb
js
sub
add
ljmpw
lcall
int3
loope
aam
dec
xor
mov
cli
shl
jae
movsl
or
dec
das
mov
push
push
lds
sbb
faddl
sahf
js
in
cmpsl
test
pop
out
pop
ss
jno
dec
or
enter
dec
pusha
xchg
add
adc
subl
in
xchg
or
jo
or
xchg
jl
insl
jo
inc
pop
ds
mov
fildll
or
scas
adc
sbb
cmc
mov
push
cmp
int
fcoms
cmp
cmp
xchg
xchg
xor
in
repz
outsl
inc
roll
pop
mov
fsubl
inc
mov
mov
out
and
cli
cltd
or
lods
insl
ds
les
fbstp
or
and
mov
xor
jge
mov
gs
or
bound
pop
fsubl
sti
xlat
inc
mov
xchg
clc
dec
stc
icebp
inc
mov
mov
ror
in
and
pop
dec
dec
sbb
adc
test
cmp
mul
dec
pop
mov
clc
ljmp
leave
movl
test
pop
jmp
cmpb
inc
jns
xchg
mov
leave
xchg
mov
out
rcrb
test
pop
pop
and
outsl
das
movsb
ret
push
adc
sub
jb
int
daa
movsb
add
cld
inc
xorl
pop
bound
and
movsl
mov
int3
test
into
dec
push
gs
inc
cltd
inc
cwtl
jge
pop
gs
maxps
aad
rcll
pop
pop
push
pop
inc
jmp
call
mov
insl
and
aaa
lcall
pusha
lcall
inc
jno
test
xchg
inc
repz
cmpsb
scas
out
mov
aaa
mov
sub
subl
xchg
icebp
xor
push
int3
lods
test
imul
scas
add
ljmp
bound
push
jp
mov
fs
xor
cwtl
mov
dec
xchg
roll
dec
in
and
lea
dec
icebp
dec
push
lea
leave
add
ja
or
aad
mov
or
sub
nop
test
push
mov
dec
out
inc
sub
aam
cmp
pop
or
into
lds
insl
dec
push
inc
push
decb
mov
adc
mov
inc
jmp
rol
add
shrl
push
inc
ret
repnz
pop
std
rcll
adc
addr16
add
xchg
je,pn
mov
dec
jne
jl
scas
sub
inc
insl
sarl
mov
xlat
push
mov
ret
nop
fldcw
mov
popf
jb
bound
lods
xor
enter
mov
sbb
push
sbb
xchg
sub
repz
shll
xor
jbe
aam
mov
push
mov
pop
lret
mov
sbb
sar
mov
cltd
pop
into
test
lea
loope
clc
mov
out
inc
adc
push
rolb
dec
jbe
mov
pop
push
into
push
cmp
cli
pop
stos
cmp
addr16
mov
js
mov
ret
ds
mov
adc
xchg
stos
mov
mov
add
addr16
dec
js
dec
rorb
in
lret
xor
xor
jns
dec
or
inc
xor
fxtract
lahf
jecxz
inc
ds
push
repnz
sbb
shlb
movb
shrb
dec
shrl
xchg
les
cmpsl
jl
jp
shrl
sbbb
xlat
lret
and
fadd
pop
mov
mov
jbe
leave
dec
inc
sbb
xor
push
fsubr
mov
mov
loope
xchg
loopne
testb
test
xchg
pop
cs
daa
aas
add
mov
xor
mov
aaa
ss
mov
pusha
enter
mov
cmpsb
shlb
and
or
mov
xchg
pop
shl
test
inc
movsl
cltd
ret
dec
gs
add
pop
or
add
or
mov
ret
pop
push
scas
mov
pop
and
or
xchg
cmp
sbb
sbb
add
jge
push
mov
xchg
mov
cld
jns
fs
pop
lds
fisttps
fistps
jecxz
push
or
push
lcall
sarl
je
adc
icebp
aaa
xorl
adc
and
and
lods
sbb
cmc
hlt
xor
and
popw
es
mov
mov
sbb
push
mov
adc
jb
push
repz
cmc
jmp
jne
add
cld
mov
ror
sbb
xor
cmp
ds
sarb
icebp
pop
ja
into
jne
loopne
loope
clc
inc
dec
inc
shrl
or
cmp
fadds
xchg
pop
cmpsl
outsb
push
xchg
rcr
push
adc
testl
sbb
movsb
imul
and
pop
and
xor
into
incb
and
out
fwait
xlat
test
test
cmovs
shl
and
icebp
insb
adc
dec
into
leave
popa
movsl
inc
xor
sbb
leave
or
mov
xor
jmp
mov
adc
testb
sti
push
fucom
and
fisubrl
repz
adc
notb
cmp
dec
cmp
push
es
iret
cwtl
sbb
xchg
stos
or
cld
xchg
insb
leave
adcb
rclb
mov
xor
in
mov
and
fmuls
mov
fcmovu
sti
aad
sbb
insb
pop
sbb
pop
jnp
fwait
mov
insl
scas
and
daa
lcall
push
lock
xor
movsb
mov
mov
mov
aad
leave
pushf
decb
jo
and
sti
pop
sub
ret
mov
xchg
add
mov
popa
sbb
shlb
cltd
add
js
inc
out
xor
aas
dec
jbe
jne
mov
mov
push
rclb
idiv
add
push
sbb
incl
cmp
lods
dec
sub
adc
js
fbld
fs
add
jb
test
mov
inc
les
cmp
mov
jecxz
mov
aam
ljmp
xchg
aas
mov
loopne
push
add
mov
leave
sub
fldl
lock
xchg
mov
mov
push
mov
cld
movsl
loop
mov
pushf
sti
fwait
adc
xchg
xor
lock
int3
mov
pop
add
mov
loopne
ret
jne
cs
aaa
add
ret
daa
xor
sbb
add
dec
sub
imul
or
popa
mov
cmp
loopne
xchg
int3
mov
jne
sbb
punpckhdq
scas
outsl
pop
icebp
out
cs
or
push
in
lret
fadd
decl
scas
pop
movsb
popa
push
or
jae
sbb
cs
orl
jecxz
or
and
dec
dec
and
push
fldt
sub
mov
pop
push
adc
inc
jecxz
push
imul
inc
jl
clc
add
jg
scas
mov
and
mov
lods
rcll
in
pop
xor
and
bound
dec
jne
mov
mov
mov
xor
lock
mov
sbb
in
mov
cltd
imulb
sub
daa
sub
jne
pop
and
pop
xor
daa
mov
lea
ljmp
mov
into
loop
pop
xchg
mov
sbb
push
xchg
incl
jle
sbb
es
mov
jge
mov
iret
outsl
loop
fisubrs
inc
imul
stc
xor
jae
sti
xchg
test
xor
popa
pushf
pop
inc
cmp
movl
cli
cmp
daa
popa
pusha
imul
aad
stos
stos
dec
pop
or
sbb
pop
repz
mov
out
lods
iret
cmpsl
add
mov
ds
jle
pop
mov
stc
inc
out
push
data16
mov
lea
testb
shrb
out
and
fwait
mov
jecxz
cmp
test
loope
jbe
data16
outsl
adc
or
mov
into
test
pop
or
lret
or
inc
mov
ljmp
mov
insl
test
repz
fs
shlb
push
lahf
xchg
enter
fbld
iret
mov
mov
xchg
adc
lock
mov
push
sahf
mov
sbbb
pminub
fsubr
push
and
arpl
fisubl
lret
rorb
lock
cltd
outsl
push
mov
dec
lcall
mov
cmpxchg8b
mov
mov
ss
fnclex
fsubrs
orb
repz
fwait
adc
aam
push
scas
daa
dec
xchg
adc
push
outsb
shll
dec
or
push
pushf
jg
in
sbb
pop
mov
inc
clc
sub
mov
cmpsl
addb
lods
scas
loop
mov
sahf
in
add
inc
add
mov
xchg
movsl
xchg
lock
push
mov
and
pusha
scas
xchg
mov
mov
rcr
leave
sub
mov
push
out
rcr
imul
aad
in
lahf
jae
je
rorl
pop
lret
add
stos
lds
lods
lock
add
out
sbb
jnp
inc
or
cli
pop
adc
fwait
jns
outsb
aas
jmp
ja
pusha
sbb
and
stos
ja
pop
jns
cmp
stos
mov
cmp
xor
sbb
mov
inc
jl
jmp
mov
and
aad
int3
fiaddl
sbb
adc
add
lods
push
inc
rolb
arpl
jne
addr16
push
das
dec
add
dec
popf
xor
sbb
jb
aad
test
jne
daa
data16
add
sbb
jae
lret
inc
int
sbb
sbb
pusha
pop
pop
cmc
mov
inc
insl
dec
cmp
mov
fld
adc
add
mov
xchg
in
sti
fs
gs
aas
mov
fs
pop
lods
dec
or
iret
mov
pop
movsl
sbb
pop
addr16
jb
xchg
mov
daa
pop
adc
xchg
sbb
add
dec
fldcw
pusha
sbb
std
push
int
and
mov
inc
shrl
mov
outsb
push
xor
jecxz
stc
ss
sbb
mov
scas
sbb
jg
scas
cmp
out
lret
jmp
cmp
push
fisttps
push
mov
sbb
cmc
das
cmp
lret
mov
ss
add
mov
loop
push
mov
gs
push
dec
mov
mov
fsts
test
popf
iret
pop
xchg
stos
in
pop
fwait
jl
nop
lahf
or
paddw
mov
test
lret
cmp
sub
fstpl
jle
fistps
mov
mov
or
les
in
inc
add
push
fwait
inc
rorl
rolb
mov
inc
ja
cmc
or
add
lea
insb
ds
mov
jg
mov
cmp
or
lret
cmc
pmaxub
arpl
dec
push
pusha
sub
cmp
mov
scas
xchg
xchg
xchg
add
test
push
push
aaa
add
cmp
aaa
outsb
pop
inc
mov
sub
xchg
cmp
mov
mov
ret
nop
pop
cmp
fadds
cmpsb
and
mov
gs
aam
adc
sbbb
inc
push
push
push
pop
pop
popa
clc
aaa
in
jmp
outsl
ljmp
dec
loop
jmp
mov
xor
movsl
out
shlb
cmp
jbe
lds
stc
shll
ja
mov
push
mov
pop
sub
xor
outsl
std
mov
int3
lret
sbb
dec
test
jg
call
cs
jmp
arpl
andb
mov
or
add
icebp
xor
fdivr
xor
add
scas
sbb
xacquire
adc
dec
bound
push
in
xor
add
sub
insb
out
js
sub
sub
adc
popf
xor
add
xchg
call
pop
fwait
add
sbb
mov
enter
rcrb
cmc
iret
add
mov
add
sbb
add
and
xor
xchg
ljmp
xchg
fiadds
jg
add
sbb
pop
in
stos
lcall
xchg
mov
push
or
adc
hlt
in
mov
test
mov
addr16
xchg
push
cld
loope
frstor
add
pop
sbb
add
push
js
adc
sti
fnstenv
insb
ss
ffreep
xchg
mov
and
mov
cmp
clc
bound
enter
clc
jp
inc
test
shl
fs
cwtl
pushf
or
fcmovnbe
push
cltd
mov
pop
jnp
out
popa
lret
mov
mov
mov
sub
mov
and
pop
and
mov
cli
adc
adc
lcall
push
push
aaa
mov
push
pop
dec
popa
movsl
out
int
mov
dec
lods
sbb
out
cld
push
out
cmpsb
mov
jae
sbbb
sbb
cwtl
rcrb
push
and
push
stos
push
mov
xor
cltd
cmc
push
daa
adc
sti
ret
fnsave
push
pop
dec
sub
add
inc
arpl
jecxz
fucompp
scas
sub
fildl
inc
cmpb
jo
iret
sub
loop
in
push
mov
cmpsb
inc
inc
dec
std
pushf
mov
dec
jae
std
pop
push
mov
stos
push
test
jns
add
mov
pop
test
lock
cmc
in
pop
mov
mov
aas
xchg
xor
mov
mov
movsl
dec
add
lods
ljmp
mov
mull
clc
insb
int
shrb
adc
stos
cmc
sbb
lods
mov
jo
add
addl
scas
pop
mov
or
sbb
cmp
push
or
aam
mov
inc
adc
nop
pop
js
cli
pushf
repz
in
bound
mov
lods
push
mov
inc
inc
lret
ds
push
mov
inc
cmp
iret
cltd
add
mov
lds
out
popa
add
xchg
enter
push
pop
mov
push
sbb
pop
repz
jl
jno
adc
xchg
inc
cli
xchg
xor
sub
or
push
gs
pop
jae
test
add
and
push
imul
cltd
sti
aaa
leave
adcb
mov
imul
add
orl
inc
cltd
stc
adc
divb
sub
int
push
pop
std
mov
push
jne
cli
cwtl
ljmp
outsl
les
mov
xchg
sub
mov
shr
shll
and
ss
cmp
or
add
cmp
lods
mov
ss
clc
dec
sub
cmp
xchg
int
mov
sub
or
xchg
jae
movsb
pop
ret
fbstp
int
aas
leave
pusha
mov
pusha
push
es
ret
cmp
pop
shrb
xchg
jb
shll
sahf
add
cltd
ljmp
add
int
or
getsec
lock
insb
jl
js
sti
dec
rcll
cmc
mov
mov
sub
arpl
out
daa
add
popa
mov
cmp
sbb
repz
xor
add
cmp
add
mov
iret
addb
push
lods
rcrl
xor
dec
mov
sub
and
ret
xor
or
fisubs
inc
adc
xor
test
insl
cmpsb
and
pop
call
mov
sti
cmp
sbb
push
test
insb
xchg
fstl
js
lahf
aaa
sub
jne
adcb
push
add
inc
xchg
aam
or
leave
aaa
mov
aad
fcoml
dec
and
sarb
inc
inc
into
jmp
or
and
cmp
call
aaa
je
and
push
stc
ljmp
xor
rcl
mov
int3
sub
sbb
rcll
out
js
mov
inc
rclb
jmp
aad
in
pop
stos
or
mov
cmc
add
mov
push
les
shrb
or
pop
cmp
leave
inc
cwtl
cltd
mov
outsb
mov
fs
add
or
inc
push
push
cmpsl
stos
cmp
out
mov
roll
jnp
outsb
repnz
idiv
xorb
fsub
jl
mov
dec
and
push
adc
cmpsl
xchg
and
outsb
and
into
mov
mov
adc
sti
add
sbb
fistl
jo
mov
inc
or
push
pop
mov
rorb
adc
div
leave
cmp
and
mov
jg
fwait
bound
mov
fidivs
leave
inc
dec
xlat
in
push
lcall
ljmp
jge
mov
mov
xchg
dec
pop
in
fidivs
mov
fisubs
mov
out
push
and
sub
in
stos
mov
in
sub
mov
push
or
cmp
jge
cmp
push
and
scas
or
test
xchg
cmp
and
shlb
std
xchg
outsl
icebp
rorl
int
pop
les
sbb
jbe
inc
mov
xchg
xlat
rorb
aas
mov
pop
lds
sub
and
add
rcrb
std
int
test
dec
enter
sub
push
pop
test
sbb
and
pop
push
jb
das
push
sahf
in
int
jg
sbb
mov
es
xchg
scas
dec
std
out
stc
test
mov
hlt
clc
mov
mov
mulb
fsubrs
mov
idivl
dec
cmp
lahf
push
sbbb
inc
cmpl
mov
adc
add
cli
aad
loop
bound
xlat
lret
add
xchg
adc
sti
xchg
cwtl
ljmp
push
repnz
mov
cmp
es
inc
mov
jmp
ds
dec
lds
cmpsb
jb
xorl
dec
add
flds
dec
pop
pop
push
mov
clc
hlt
sbb
lods
lcall
rcrl
sbb
cmp
and
mov
fists
adc
push
inc
loopne
dec
ds
or
mov
lds
adc
fdivp
leave
xchg
xor
mov
mov
es
in
inc
rorb
aas
idiv
andb
push
call
lods
add
out
rolb
dec
pusha
adc
cmpsl
add
push
shr
or
ss
fwait
sbb
mov
dec
aas
mov
xor
fwait
fs
inc
pop
or
xor
xor
xchg
scas
outsb
pop
mov
sarl
mov
push
mov
test
mov
jecxz
ljmp
push
outsl
negb
shufps
xchg
sarl
repz
int3
adc
mov
fs
jno
imul
int3
out
inc
andl
xchg
or
sbb
rorl
outsb
mov
sub
out
pusha
imul
mov
push
fisubrl
cwtl
jne
aad
mov
xchg
push
cwtl
jno
sub
xor
int3
loope
into
mov
imul
mov
mov
xchg
mov
out
inc
jmp
ss
or
jmp
fwait
rcrb
test
or
and
push
push
cwtl
out
mov
dec
add
mov
jmp
aas
sbb
sub
lods
push
xchg
sahf
jns
jl
into
adc
or
inc
pushf
or
movsb
popa
and
icebp
ss
pusha
stos
and
mov
mov
pop
mov
ja
inc
daa
or
bnd
inc
sbbb
xor
ret
hlt
sub
popa
jle
push
sub
bound
bound
and
aas
jle
sub
push
mov
aaa
jnp
xchg
dec
and
sbb
sub
sbb
pop
dec
jg
add
ds
insl
fwait
out
dec
lret
cmp
jp
addr16
mov
fcompl
sbb
push
inc
or
in
cmp
sub
xchg
stos
out
loope
addr16
sub
rcrb
sbb
pop
jb
cmp
test
add
ret
in
cmc
int3
cmp
jg
les
movsl
sbb
icebp
or
fwait
shrl
adc
mov
ret
mov
nop
cmp
es
pop
outsb
xchg
leave
or
adc
add
outsl
sar
shrb
rolb
pop
fldcw
inc
sbb
cli
stc
pop
sbb
xor
mov
out
je
jne
ret
test
mov
je
push
fdivl
aad
out
mov
xor
gs
or
push
cmp
and
roll
fcomp
dec
jp
xor
mov
mov
loopne
lods
mov
jle
or
or
lea
xchg
imul
or
repnz
stos
mov
out
mov
stos
cmpsl
xchg
mov
push
aas
int3
stos
sahf
movsb
jge
fcompl
sub
lods
popf
scas
mov
ja
stos
out
pop
xchg
and
add
lock
iret
imul
mov
out
cli
push
sbb
push
js
roll
adc
dec
push
mov
ja
jbe
mov
pop
push
mov
arpl
cli
cwtl
cmp
int
push
inc
push
shrl
inc
ss
clc
inc
shlb
test
adc
sahf
fdivrs
scas
ret
jo
xchg
cmp
and
mov
pop
rcrb
inc
rcrl
lret
mov
mov
mov
push
aam
rcll
inc
xor
adc
out
push
fsubl
subb
in
jecxz
shll
fildll
out
xchg
outsb
rolb
fists
sbb
add
cwtl
mov
pop
cltd
xchg
and
call
dec
add
or
mov
inc
mov
test
jl
jno
stos
xor
sbb
add
pop
enter
movsl
mov
aad
repnz
push
mov
or
adc
cmpsl
and
int
jb
sbb
repnz
push
jne
push
maxps
dec
cmp
sub
pop
sub
cmp
lea
xor
ljmp
call
pop
sub
adc
adc
mov
cmp
rclb
movsb
cmp
lods
xor
push
cwtl
insb
pop
cltd
cmp
js
int3
jae
adc
fdivl
jecxz
std
lret
sub
fstps
popf
fwait
cltd
pop
jnp
inc
cs
and
ds
cmpsb
sbb
dec
mov
mov
xor
scas
adc
and
outsl
popa
fidivs
push
or
cmpsb
xchg
addr16
dec
data16
clc
xchg
and
push
cmp
ficoml
xchg
outsl
mull
pusha
and
push
and
movsb
push
imull
gs
sub
inc
cmp
mov
scas
add
fcmovnb
and
ljmp
dec
ss
les
dec
xor
imul
jnp
lret
int3
nop
inc
rol
sbb
dec
insb
add
aaa
mov
sbb
jne
aam
fcomps
jg
or
cmp
outsl
pusha
sbb
mov
ficompl
cmpsl
ds
lock
xor
cld
cmp
add
aaa
pop
xchg
xchg
sti
mov
cld
test
inc
mov
mov
push
leave
inc
inc
push
mov
icebp
xchg
add
mov
lret
mov
adc
scas
cmpsl
andb
outsl
sti
cld
add
xchg
dec
and
mov
ret
push
xrstors
mov
mov
and
add
in
aaa
pop
cmp
push
cmp
fdivl
mov
dec
or
aad
adc
xor
sbb
out
mov
popf
lods
iret
fiaddl
push
clc
add
jb
cmpsl
adc
test
xor
loope
pop
cmp
cld
test
mov
or
pop
mov
scas
test
shll
bound
leave
and
xor
or
cld
call
je
mov
aam
pop
jne
inc
das
insl
pop
lods
mov
leave
xor
xor
push
ljmp
xchg
adc
rcll
jmp
mov
movsb
outsl
mov
cltd
shl
adc
rcr
xchg
imul
stos
cltd
push
sbb
arpl
cmpsb
out
or
dec
leave
popa
test
pop
push
enter
mov
sbb
addr16
js
mov
add
rorb
mov
hlt
pop
daa
push
das
cmp
push
cmpsl
lret
sahf
sbb
les
aas
jecxz
cmp
mov
mov
lret
dec
add
adc
sub
and
sub
out
lock
cs
rcrl
lods
dec
shl
es
dec
mov
imul
orl
mov
fisubl
shl
and
aam
dec
test
push
cltd
aas
sub
lock
pop
adc
mov
cmp
pop
test
mov
cs
in
mov
dec
shr
lcall
icebp
add
sti
sbb
add
dec
mov
sub
mov
insb
in
sub
mov
dec
xlat
mov
cmp
pop
je
call
aad
add
daa
ret
es
les
or
xor
cmp
mov
ds
lahf
adc
test
lahf
jb
mov
loope
mov
mov
push
lret
test
imul
pop
fdivs
pop
cltd
adc
pop
stc
pusha
lahf
in
shll
lods
xlat
push
je
jle
cwtl
cmp
scas
jns
pop
or
enter
lock
rcl
adcl
sbb
xlat
adc
mov
or
mov
adc
pusha
mov
jl
faddl
cmp
inc
jo
lds
mov
andl
inc
jbe
out
iret
clc
mov
push
aaa
sub
insb
fwait
or
dec
pop
and
xchg
stos
add
cwtl
sbb
mov
add
popf
cmp
pop
cmpl
inc
push
stos
adc
loopne
jmp
mov
outsb
jl
pusha
mull
jno
rcll
aaa
cmpsb
mov
inc
xchg
addr16
xchg
and
add
cli
jg
mov
cltd
add
ret
fnstsw
jae
mov
insl
pmovmskb
or
pushf
pushf
jbe
clc
icebp
push
rclb
push
mov
bnd
pop
or
jl
or
loopne
test
jecxz
stos
test
pop
sbb
in
movsb
cmpsl
push
divl
mov
mov
mov
xchg
stc
and
scas
mov
test
shlb
xor
and
xchg
xchg
or
sub
shll
or
aas
filds
outsb
add
sbb
mov
lcall
lahf
out
mov
mov
cmp
xchg
pop
ret
cmpsb
js
test
mov
xor
xor
cwtl
rcrl
popa
jmp
sub
pop
pop
mov
xchg
pop
mov
jne
add
lods
ja
out
sbb
arpl
loop
mov
inc
ret
sbb
push
dec
inc
pop
mov
movsl
cmp
sbb
loop
mov
inc
in
or
dec
pop
dec
das
int
outsl
mov
out
adc
enter
sarb
mov
aam
xor
pop
movsl
fwait
insb
inc
push
movsl
mov
xlat
enter
fwait
int
negb
pushf
lods
divb
jle
outsb
dec
or
aas
roll
dec
ja
inc
mov
pop
movsb
or
pop
sbb
fwait
add
mov
lds
std
xchg
fdivrp
push
sub
invd
add
daa
cmp
sub
mov
hlt
xchg
repz
movsl
outsl
xor
addl
push
push
pop
mov
add
inc
xor
mov
mov
mov
mov
mov
xor
cs
pop
aam
push
andb
xchg
ja
push
enter
ja
mov
inc
popa
adc
mov
sahf
mov
arpl
sub
inc
adc
ja
pop
cmp
dec
in
adc
mov
jno
or
clc
fnstenv
sbb
mov
xchg
das
lcall
xor
mov
jmp
insl
xchg
mov
dec
and
sub
js
add
pop
push
or
cwtl
mov
mov
and
ret
or
out
jb
jno
lret
lods
dec
stc
loope
and
jbe
cs
dec
inc
bound
in
cld
xor
in
ficomps
push
dec
lods
inc
fwait
clc
cltd
out
test
sbb
in
xchg
jno
fdivl
cmc
or
jl
push
jb
fsubrs
mov
fs
inc
xchg
dec
sti
shll
mov
adc
adc
jbe
xor
xor
mov
pop
mov
cwtl
pop
int
dec
in
test
mov
xchg
lods
notb
mov
call
mov
dec
dec
add
cmp
sub
push
jge
daa
repz
gs
jae
cmpsl
stos
aaa
shlb
lock
mov
decb
aas
dec
test
mov
xchg
sbb
bound
fidivrl
xchg
jecxz
nop
sahf
jbe
out
imul
or
out
loopne
inc
fdivs
imul
push
mov
inc
xchg
adc
add
shlb
mov
pop
lret
inc
mov
outsl
push
mov
or
inc
mov
pop
mov
sub
ud2
popf
stos
and
fmuls
lock
out
cmp
dec
loope
aad
lret
mov
ds
mov
lods
push
notl
fldl
addr16
insl
cli
inc
inc
out
mov
jge
jmp
push
mov
adc
pop
mov
mov
cmp
das
popa
jae
mov
pop
push
or
mov
mov
roll
in
cltd
dec
in
rol
lods
or
and
pop
fsubrs
cmp
mov
sti
addr16
adc
icebp
push
ja
rcrl
stos
and
aas
dec
push
dec
cli
out
aad
jb
test
and
ds
jo
push
add
sub
fildll
xchg
out
adc
lds
fsubs
mov
rorb
arpl
es
jle
inc
mov
jg
xchg
push
jo
pop
dec
je
add
aam
sbb
push
dec
cmp
imull
sbbl
aaa
pop
mov
jnp
int
out
push
bound
sub
pop
jge
adc
jg
xchg
pop
add
lea
mov
push
outsl
cwtl
nop
bound
push
push
ret
mov
in
jne
and
pop
sub
mov
aad
jo
mov
mull
xor
cmp
cmpsl
rcrl
sbb
mov
fsts
ret
outsl
jb
sahf
add
insl
or
ret
inc
movsl
in
inc
dec
pop
adc
testl
mov
or
pop
cli
in
gs
scas
sbb
outsl
pop
jno
pop
mov
popa
loopne
mov
adc
adc
pop
jg
mov
xor
roll
sub
sahf
cli
add
lods
and
inc
in
dec
lods
mov
jmp
xor
in
mov
mov
mull
in
lahf
addr16
icebp
rcll
dec
push
fidivrl
and
adc
push
mov
and
js
jbe
clc
dec
inc
xchg
outsl
push
adcb
int3
es
out
stos
xor
roll
addl
or
fucomip
or
ret
js
cmpsl
or
ljmp
adc
add
jmp
pushf
push
dec
shrl
and
sub
test
and
adc
mov
sub
mov
in
pusha
pop
mov
sbb
cli
into
icebp
sbb
dec
dec
aaa
xchg
lods
test
and
xor
out
push
test
jb
leave
push
idivb
out
mov
aas
xor
adc
es
mov
ds
std
mov
inc
aad
js
sbb
enter
aas
repnz
ret
push
cmpsl
mov
lds
shll
jns
insl
push
mov
arpl
add
popf
dec
mov
dec
test
mov
ret
test
mov
cmp
push
test
enter
mov
and
aad
sub
xor
xor
aam
and
bound
js
insb
test
rcll
push
mov
pop
mov
adc
inc
stos
int
pop
add
dec
pop
mov
cmp
xchg
xor
mov
mov
xchg
cmpsl
push
int
bound
pop
and
dec
dec
adc
les
ret
mov
jne
mov
add
addr16
inc
fucomip
push
xlat
add
or
or
test
mov
scas
jne
cs
call
inc
mov
xor
mov
fcomps
lret
push
xor
xchg
mov
fisttps
pop
lds
sbb
pop
xor
pop
xor
cwtl
or
jo
clc
jno
push
frstor
pop
sub
push
xchg
stos
outsl
mov
lods
cmp
loopne
inc
mov
mov
shll
popa
out
iret
xchg
adc
rcrl
cmp
add
mov
inc
out
mov
add
sub
enter
rcrl
inc
jns
ljmp
add
xchg
std
dec
sub
xlat
cmc
iret
movsb
sbb
xchg
sahf
inc
ljmp
mov
jno
adc
sti
dec
mov
repnz
dec
loop
xor
sbbl
into
inc
leave
cltd
and
out
adc
icebp
cmp
mov
mov
cld
push
in
cmc
stc
xchg
loopne
daa
pushf
inc
mov
aam
mov
data16
out
mov
mov
fdivp
js
inc
mov
inc
pop
lcall
dec
mov
call
adc
dec
xchg
stos
inc
pop
test
push
and
mov
sub
loopne
ja
pop
mov
add
shll
and
adc
xchg
test
sarl
call
fistpl
test
cld
ja
arpl
ret
mov
shrb
leave
and
mov
ss
adcb
jne
test
mov
jno
pop
mov
adc
fidivrl
pop
xor
lret
cltd
dec
shll
xchg
int3
jle
inc
sbb
add
xor
lahf
push
dec
sbb
dec
in
inc
cmp
std
loop
sbb
mov
adcb
push
push
push
ror
push
mov
and
lret
mov
cld
jae
lcall
xor
fildll
jnp
xor
or
loop
adc
push
daa
fldt
stos
rcll
lds
inc
rorl
rolb
xchg
clc
and
jg
out
cmp
movsl
and
jge
addr16
push
sub
xlat
outsb
sub
jge
leave
xchg
insb
hlt
fldt
inc
cmpsl
mov
push
pop
add
ficoms
add
pop
or
jb
dec
or
ja
xor
xor
jp
mov
jbe
xor
add
rorb
pop
lret
ret
mov
adcb
outsl
adc
filds
int3
ss
add
sub
andb
sbb
sbb
sbb
dec
hlt
roll
xor
inc
push
std
pop
mov
adc
mov
adc
add
in
mov
pop
cmpsl
inc
jg
xlat
push
push
shl
or
cmc
arpl
xor
stc
fs
rcrb
iret
sbb
mull
jmp
push
push
stos
xor
shrb
mov
je
and
push
and
xor
cli
dec
jle
sti
lea
ss
xchg
imul
lods
cs
adc
out
push
mov
or
lds
shrb
lods
jns
jo
sti
jle
pop
pop
mov
push
repz
scas
bound
lahf
in
loop
je
les
cs
or
rcr
inc
push
sub
push
stos
pusha
sbb
std
je
mov
xchg
dec
xchg
call
mov
cwtl
insb
dec
ja
fisubs
xor
inc
pop
adc
jno
adc
pop
and
ja
jno
fcmovnbe
mov
mov
xor
fcoms
inc
in
xor
add
aaa
sub
sbb
pop
repz
inc
cltd
push
sub
pop
fwait
enter
hlt
pop
stc
movsl
xor
cmc
pop
push
adc
cmpb
mov
sbb
inc
mov
addr16
cli
mov
xor
icebp
std
ja
cmp
xor
fbstp
mov
xchg
repnz
mov
out
imul
mov
push
in
push
mov
adc
test
dec
push
jne
jns
scas
ds
addr16
pop
iret
or
mov
int
sub
push
shl
and
js
pop
sbb
cmc
rclb
test
or
cmp
movsb
sub
cltd
testb
mov
sbb
inc
sbbl
out
add
out
loopne
push
out
push
dec
pop
lds
or
ljmp
push
mov
arpl
aam
push
in
loope
add
or
into
out
in
jp
adc
sub
or
jne
fidivrs
mov
sahf
and
xchg
mov
mov
data16
push
xchg
in
pop
push
adc
sbb
dec
cmpsb
push
mov
je
xor
add
dec
mov
add
jp
iret
mov
ljmp
out
xor
sub
frstor
lea
fsubs
cmp
inc
stc
add
jp
adc
jns
shl
jle
cld
pop
cmpsb
aas
cli
clc
xchg
es
in
dec
mov
divb
enter
adc
sub
mov
aam
repz
jmp
cli
lds
and
stos
inc
xor
mov
adc
ss
je
mov
pop
stc
pop
mov
aaa
cmpsl
push
repz
clc
sbb
jno
push
dec
mov
xor
call
cmp
movsl
dec
jbe
pushf
lods
or
xlat
or
out
jbe
pop
repnz
mov
pop
jbe
inc
lret
adc
xor
pop
sub
jmp
or
and
inc
mov
pop
into
dec
xchg
std
adc
ja
test
pop
add
mov
sbb
aad
lret
cmp
xchg
scas
iret
or
out
pop
inc
jno
xchg
mov
aam
adc
sarb
xor
daa
test
into
pop
xor
lret
icebp
dec
or
pop
cmpl
fsubl
das
loopne
inc
ss
push
xchg
movsl
or
cmp
cltd
or
in
pop
push
dec
pop
inc
cmpsl
addb
leave
incb
fwait
sub
minps
lret
sub
stos
xor
cmp
pop
out
out
inc
push
adc
aaa
rolb
cmp
and
jns
jb
push
push
aaa
pop
mov
fcmove
js
xorb
inc
jne
mov
stc
arpl
add
imul
leave
dec
inc
xchg
mov
adc
sarl
pop
xchg
push
stos
rclb
mov
or
dec
in
das
mov
jns
out
xchg
or
pop
imul
fwait
std
nop
shrl
dec
mov
loope
aas
mov
outsl
out
push
fstpl
imul
cmp
jle
js
ss
and
movsl
add
jge
popf
jge
jl
push
push
push
sub
insb
pushf
cltd
jne
push
pop
mov
xor
jmp
add
movl
push
das
ficoml
je
nop
aas
pusha
dec
inc
or
push
xchg
mov
je
push
xor
addr16
in
shrl
push
in
int3
xor
shr
jp
out
lods
sbb
lods
aaa
add
data16
outsl
repnz
out
sub
lret
and
adc
pop
cmpsb
xchg
fcmovnbe
call
jmp
sbb
movsl
xchg
push
imul
outsl
lcall
jge
cmp
cmp
add
aam
adc
mov
xchg
inc
sbb
movsl
loopne
xchg
mov
pop
push
mov
xchg
in
mov
sub
xchg
out
test
test
lret
test
xchg
mov
popf
dec
mov
cld
fdivs
icebp
aad
fucomp
push
rorb
dec
pop
into
or
mov
mov
out
jae
nop
mov
cmp
ds
sbb
mov
xchg
out
pop
cmp
cmp
movsb
cmp
pop
in
movl
push
xchg
sbb
shl
cs
mov
mov
aaa
hlt
and
std
ds
insb
jp
in
xlat
sub
cmp
pusha
insl
test
xor
fldcw
ljmp
rclb
inc
push
fldcw
mov
iret
out
or
mov
aaa
in
lods
fsubl
inc
xor
xchg
and
or
fiadds
pop
push
clc
in
cmpb
mov
pushf
push
inc
fcmovne
and
push
into
adc
cmp
jp
jae
jne
push
lret
mov
hlt
push
mov
mov
mov
cmpsb
inc
imul
das
xorl
or
sbb
push
jg
jo
dec
jl
andl
mov
dec
cmp
outsl
mov
inc
lahf
insl
dec
sub
fs
lret
push
lock
xor
inc
dec
xchg
push
movsb
fsubs
pop
scas
cmp
aam
jo
mov
movsl
push
sbb
or
ja
jp
std
movups
dec
lock
arpl
xchg
outsl
sbb
jne
in
mov
xor
les
mov
ret
repnz
das
sbb
mov
addb
or
test
movsl
fwait
aaa
push
mov
and
stos
mov
fs
leave
cld
cmp
les
vmovaps
jmp
mov
pop
repnz
aas
pop
fadd
roll
outsb
mov
push
push
fs
mov
ljmp
fisubrl
adc
fisttpl
lea
ss
xchg
xchg
adc
js
xor
mov
cmp
inc
mov
int3
mov
mov
mov
or
les
push
inc
pushf
pushf
lds
xor
fstl
daa
dec
inc
lods
dec
jns
mov
fidivrl
pop
adc
push
loopne
mov
adc
test
hlt
jno
daa
shll
mov
mov
cs
ds
or
adc
adc
inc
sbb
in
leave
add
lret
push
jle
test
rorb
push
fisubrs
adc
cmpl
xchg
or
out
in
dec
aad
pushf
fbstp
pusha
ret
push
cmp
dec
and
sti
enter
mov
fsub
movb
push
push
xchg
push
sbb
mov
mov
jbe
add
push
js
pop
cmpsl
into
call
mov
sarl
mov
dec
add
mov
mov
shlb
pop
ds
dec
fisttpl
mov
cli
sub
jg
rcl
adc
cmc
test
loopne
sbb
popa
xorl
insb
inc
ja
insb
xchg
shr
xchg
pop
lret
push
push
pop
add
out
dec
xor
cmpsb
mov
ss
stos
mov
stos
cwtl
daa
adc
int3
repz
and
fiaddl
push
out
es
std
not
xchg
cltd
out
adc
inc
mov
push
sbb
mov
adc
and
fs
data16
pop
lahf
xchg
jbe
jp
inc
pushf
mov
mov
sub
dec
lea
insb
movsl
pop
popf
mov
add
insl
scas
out
or
fstps
add
data16
adc
ljmp
test
and
nop
push
jbe
add
aam
and
lret
in
out
inc
into
fnstenv
mov
adc
xor
mov
repnz
inc
fadds
mov
addr16
add
stos
pop
movsb
test
scas
gs
fsubl
xchg
mov
ror
mov
loopne
out
loop
push
gs
repz
mov
icebp
xchg
lock
jnp
or
jno
lahf
mov
and
mov
fcoms
pop
mov
mov
sub
add
dec
pop
inc
mov
push
in
or
adcl
jno
test
or
inc
add
sub
rcrb
jmp
sub
sbb
divb
xor
lods
cmp
lds
popf
pop
pop
sub
and
popa
or
test
sbb
and
or
outsb
sarl
mov
jbe
mov
iret
pop
mov
arpl
mov
test
dec
outsb
lock
jg
out
int
sbb
jo
outsb
mov
add
mov
or
cmp
cld
mov
iret
push
pusha
jne
aas
sbb
ret
ss
fcomps
popf
insl
mov
sub
mov
sbb
sub
rcr
push
out
push
addr16
mov
mov
jge
ret
rorl
mov
arpl
push
les
sbb
movsl
repnz
adc
ret
ficompl
movsl
arpl
dec
int
arpl
sub
imul
pcmpeqb
mov
imul
and
or
leave
pop
jae
adc
push
fisttpll
rcr
test
les
fcomps
test
mov
int3
push
push
mov
rorl
add
push
popa
or
xor
out
mov
pop
leave
sbb
add
test
or
jmp
sub
mov
das
inc
jno
out
add
pop
sub
in
jle
aam
pusha
inc
insl
inc
or
mov
arpl
jne
pop
fldt
push
lret
pop
mov
in
cli
jg
push
and
jnp
sbb
aaa
imul
lds
xchg
jmp
jmp
push
sbb
jae
enter
push
and
jno
push
arpl
mov
mov
xor
add
jmp
cmp
in
fstpt
jns
and
mov
push
cmpsl
adc
and
sbb
sub
mov
dec
fmuls
sbb
js
pop
dec
mov
aad
pop
js
sbb
scas
cld
mov
dec
adc
cld
jge
repnz
adc
js
imul
add
outsb
icebp
cmp
xchg
fldl
in
imul
mov
int
insl
js
sti
push
lods
in
mov
push
repnz
dec
mov
and
cs
dec
or
out
jns
dec
imul
inc
cmp
sub
inc
push
js
lods
les
outsl
loope
xchg
push
test
xor
sbb
fld
sbb
xor
push
je
fs
xchg
mov
push
mov
add
movsl
movsl
mov
int
movsb
into
xor
addl
decb
inc
mov
add
xlat
mov
andb
add
mov
gs
or
jge
insl
add
sahf
in
movlps
leave
jo
mov
mov
xlat
or
call
jb
adc
fstpt
lock
loop
hlt
mov
add
test
js
int3
int3
mov
imul
sub
adc
std
repz
repz
pop
add
loope
xorb
cmp
add
push
mov
sbb
incb
bound
jno
and
mov
adc
push
dec
sti
jns
add
repz
mov
mov
push
sub
jl
xchg
mov
nop
aam
sti
sahf
lahf
decl
mov
add
inc
jge
mov
cwtl
lret
adc
xorb
scas
sub
mov
fisubs
ljmp
lahf
ret
jle
call
lods
das
pop
add
dec
and
or
lret
hlt
pop
shrl
cli
xor
push
pop
sub
pop
call
pop
ljmp
out
cmc
lret
pushf
rolb
sub
iret
sbb
pop
cmp
sbb
rcr
jbe
mov
cmp
jns
mov
insl
xchg
adc
add
push
pop
ret
out
aam
lods
jecxz
cmc
movsl
push
cmp
inc
pusha
mov
jbe
inc
lea
xor
dec
jo
add
sti
jp
add
inc
test
push
cmp
inc
cmpsl
xchg
inc
test
inc
or
mov
dec
or
out
inc
data16
sub
clc
movsb
dec
push
je
sahf
jns
pop
pop
outsb
sti
orb
jns
fdivs
mov
cmp
xchg
sub
push
rcl
add
movsb
aaa
dec
out
xor
and
push
push
jl
leave
push
mov
mov
cmp
in
xor
xchg
scas
and
jge
xchg
lods
es
push
jae
jmp
jne
rcrb
mov
push
pusha
xchg
pextrw
stos
subl
mov
pop
or
mov
lret
std
push
std
add
or
into
mov
cmp
pusha
xlat
and
adc
mov
xchg
mov
dec
imul
imul
outsl
ljmp
mov
xorb
jg
mov
je
das
push
jg
jge
pop
jbe
dec
mov
ja
cmpsl
testb
jp
out
shr
xor
mov
xchg
push
pushf
xor
mov
out
mov
xchg
mov
lods
or
cli
jbe
aad
fistl
rol
pop
jge
push
pop
sub
cltd
shlb
insl
sbb
xor
mov
push
gs
sbb
push
int3
dec
insl
mov
aas
aaa
xor
int
xchg
out
mov
or
outsl
stos
mov
aaa
out
mov
loop
mov
sub
ret
nop
jmp
xchg
ret
clc
test
xchg
mov
ja
out
mov
leave
or
loope
ret
mov
repnz
cli
jnp
roll
aaa
fbld
inc
popf
add
and
sub
mov
bound
enter
dec
hlt
mov
push
and
ret
mov
subl
jge
inc
push
test
mov
test
cli
stc
sub
mov
dec
sub
shrb
lods
mov
stos
std
cmpsl
sbb
push
loopne
ljmp
mov
test
and
rcrl
in
xlat
pop
jnp
sub
clc
xchg
cmpsb
lret
mov
fdivrs
in
or
push
shlb
fldt
pop
repz
dec
xchg
popf
mov
xlat
inc
mov
or
fists
mov
notb
jnp
jb
pop
xchg
sub
jge
ret
sub
movsb
jp
pop
mov
push
popf
xor
lods
cld
xor
ja
ds
jl
stos
jae
and
lea
sti
stos
mov
std
xor
hlt
sbb
stos
insl
dec
mov
movsb
fcoml
and
add
push
xlat
sti
pop
xchg
sbb
add
aam
xlat
imul
mov
mov
repz
xor
adc
add
add
pop
fdivrs
scas
pop
sbb
adc
add
cmp
inc
cmpsb
jmp
jnp
mov
imul
das
addr16
repnz
and
sbb
pop
test
xchg
loope
movsb
fxch
push
pop
jp
pop
mov
push
ljmp
shll
jo
lret
test
sbb
mov
adc
push
icebp
sub
shll
ret
xor
sbb
pop
fstpt
filds
fsts
mov
std
adc
sti
das
dec
cwtl
sbb
mov
and
mov
iret
pop
xor
arpl
cmp
mov
addl
sahf
outsl
stc
sbb
dec
sar
mov
ljmp
xor
stos
push
xchg
inc
fcomip
push
rclb
in
dec
aas
loopne
push
ds
or
fiadds
fsubrl
mov
das
push
xor
popa
ret
lock
mov
andl
lahf
outsl
lods
test
cmpsl
ljmp
popf
push
sti
jb
push
daa
addr16
ficomps
outsl
fldt
imul
dec
popa
pop
adc
mov
push
jl
inc
xlat
ret
push
xor
outsb
lods
add
incb
outsb
bound
jnp
push
ljmp
lods
int3
loope
mov
mov
test
sub
push
sbb
movsb
sbbl
fsubrl
mov
lds
xchg
push
push
mov
and
xchg
mov
push
ds
add
cmpsl
inc
nop
xchg
sub
mov
push
bound
mov
mov
rorl
rolb
out
std
js
xlat
movsl
shrb
in
or
or
cwtl
push
cmp
adc
or
or
mov
jge
inc
jg
fcmovnu
push
jno
lahf
xorl
imull
rclb
repnz
mov
add
adc
mov
xchg
add
jbe
imul
cmp
popf
jae
or
lret
mov
mov
jg
xchg
cld
aaa
fsub
mov
add
cmp
or
dec
rcr
or
stos
and
inc
add
pop
push
ret
mov
or
repz
fucomip
inc
xor
inc
cwtl
xor
adc
ljmp
xor
testb
aaa
aas
adc
mov
pop
mov
push
ret
mov
jnp
ret
test
xchg
test
in
arpl
arpl
inc
or
fwait
pop
adc
dec
jbe
shll
inc
xchg
mov
push
imul
daa
les
inc
ss
cmpb
sub
cmp
jno
cltd
jne
push
aam
pop
and
ljmp
mov
jbe
jmp
popf
xor
out
mov
arpl
mov
scas
sub
pop
shrl
in
mov
xor
jle
mov
test
enter
lea
mov
clc
sbb
xor
jne
std
push
shrl
popa
addb
push
inc
dec
inc
add
movsb
push
xorl
test
cmp
bound
dec
cld
imull
cmp
inc
jge
xor
push
xlat
insb
mov
dec
daa
jp
add
ja
stos
or
xorb
roll
mov
or
mov
or
mov
les
test
fisttpll
sub
jae
and
and
in
les
loope
jb
test
add
lods
dec
int
hlt
out
hlt
out
jnp
xlat
lods
xchg
ret
xchg
popa
mov
mov
jecxz
push
jb
notl
jne
into
fildl
or
cwtl
repnz
mov
lea
push
cmp
inc
jne
pop
mov
subb
aad
and
and
mov
pop
pop
or
fistpl
adc
inc
iret
in
std
pop
adc
lods
mov
jmp
mov
pop
mov
test
rcll
sbb
pop
clc
test
rcll
sub
jecxz
sub
fsubp
or
movsb
mov
mov
pop
filds
fildl
sub
xchg
add
aas
lcall
outsb
filds
mov
insl
xchg
in
loope
daa
jge
pop
sarl
sub
mov
sar
fisubrl
or
xchg
stc
inc
xor
sub
and
int3
testl
fcmove
ror
mov
or
xchg
push
pop
xlat
push
cmp
or
or
sub
imul
sti
xchg
cmc
les
mull
test
dec
pop
xchg
rorb
mov
rclb
fidivrl
mov
xchg
cs
cmc
jnp
lret
mov
mov
fmuls
lcall
repz
fs
sti
xor
jb
add
push
clc
pop
lods
into
cld
sti
xchg
aam
ret
popa
call
mov
ret
push
push
or
mov
xlat
stos
sbb
push
sub
jns
ss
sbb
test
push
mov
in
stos
lret
jg
jmp
push
fstpt
addr16
scas
add
outsb
jno
mov
sbbl
inc
cmp
mov
jns
push
or
out
dec
dec
or
lret
mov
popf
mov
fstpt
in
outsw
negb
test
inc
pop
test
dec
inc
mov
movsb
xchg
inc
cld
mov
jmp
sbb
in
sti
dec
mov
sub
imul
outsb
shl
in
push
test
rcll
test
push
xchg
push
add
or
mov
xchg
fdivrl
imul
ja
les
pusha
xchg
or
xchg
sbb
clc
pop
xchg
enterw
jp
cmpsl
sahf
xlat
lock
cmp
cmc
loope
fistpll
push
scas
std
mov
lret
xor
mov
push
jmp
push
mov
test
pop
mov
rcl
loopne
sbb
pop
popa
call
and
cmp
fs
xor
out
leave
sbb
mov
sbb
xchg
cmp
mov
sub
mov
out
iret
mov
ret
cmp
xchg
dec
stos
cmpsl
jnp
sbb
jne
push
and
push
mov
fiaddl
std
mov
lock
in
icebp
dec
mov
push
rcl
and
mov
add
loopne
ds
pusha
stc
lds
mov
fstps
stc
cmp
test
jb
cs
test
cltd
adc
mov
out
push
xchg
loope
cmp
repnz
fnstenv
fs
dec
mov
call
pop
rcrb
mov
and
mov
shrb
loop
push
icebp
sbb
and
cmp
in
cmpsb
fwait
xor
jle
dec
push
mov
adc
icebp
lcall
inc
inc
fidivl
dec
xlat
cmp
fwait
and
jnp
xor
jmp
repz
into
cli
icebp
sbbb
mov
data16
xor
pop
call
into
cli
daa
cmp
xchg
add
xor
add
add
sub
inc
nop
jp,pn
mov
inc
xlat
add
std
call
popa
cltd
scas
pop
rclb
scas
mov
aam
ret
cmp
fwait
cmp
cmp
push
push
mov
xchg
or
and
add
test
dec
xor
adc
leave
in
hlt
movsb
mov
jecxz
sub
push
test
adc
sti
adc
push
shrl
imul
sbb
jne
or
xchg
dec
popf
mov
dec
push
in
xlat
test
jbe
rorb
push
xchg
outsl
cmp
leave
pop
fdivs
mov
insb
gs
fildl
into
mov
xor
mov
xchg
adc
mov
call
hlt
dec
pop
jae
test
es
arpl
jg
add
inc
jle
lds
stc
fbld
lods
add
mov
dec
fstpt
sub
mov
aas
xchg
scas
and
popf
and
dec
rcrl
push
xchg
subb
orb
or
loopne
push
incb
stos
sub
inc
mov
inc
push
push
movsb
pop
jmp
jae
insl
std
push
clc
cmc
sar
je
pop
sub
xor
mov
shrb
pop
xchg
ss
or
sbb
stc
mov
cmp
ret
repnz
icebp
dec
dec
cmp
sub
out
ror
jnp
pop
sbb
mov
pop
inc
int3
sbb
sarb
push
fbstp
push
mov
ret
and
out
sub
sub
insl
push
mov
mov
cmpsb
cli
out
cmc
or
sahf
ja
dec
mov
mov
push
jg
arpl
sbb
mov
cmp
jo
push
adc
loop
inc
adcb
lahf
adc
fmul
pop
cmp
dec
leave
lahf
shlb
xor
or
mov
push
jno
int
mov
leave
pop
lahf
mov
daa
rolb
lahf
inc
orb
lds
in
push
sub
jae
sbbl
test
mov
or
out
lods
mov
cmpsl
lret
sbb
inc
out
or
sbb
or
mov
push
xchg
insl
aaa
dec
pushf
lcall
mov
sarl
xor
and
mov
das
mov
xchg
or
sbb
hlt
sahf
xchg
daa
fsubrs
fsubp
cltd
or
mulb
and
int
xor
lea
outsl
sub
jl
daa
mov
and
sti
pop
inc
adc
inc
jo
sbb
mov
lock
jle
or
aaa
fistl
hlt
cmp
sub
jmp
inc
xorl
or
jae
int
aaa
adc
fadd
inc
jecxz
ds
cltd
andb
mov
fs
in
outsb
sbb
cmp
push
aad
add
daa
jmp
sahf
push
lcall
dec
cs
dec
cmp
testb
mov
cli
popf
cmp
arpl
popa
loopne
or
jl
cmp
mov
adc
adcb
mov
test
ljmp
add
mov
aas
pop
xor
scas
aaa
push
add
push
call
mov
insl
inc
test
test
jae
and
std
dec
push
dec
aaa
aam
push
jg
nop
mov
push
mov
enter
test
out
loop
xor
daa
inc
mov
cmp
and
in
mov
test
mov
jno
addr16
rcrb
mov
cld
aam
inc
jge
xor
mov
stos
xor
shll
push
dec
fcmovu
adc
mov
xchg
fstpt
inc
fnsave
sbb
jmp
mov
and
xchg
adc
in
pop
scas
jg
sub
mov
or
data16
pop
js
test
test
or
ljmp
test
sahf
cld
mov
push
fists
mov
cltd
pop
add
fdivrp
repnz
or
jmp
pop
mov
jl
adc
fwait
data16
cmpb
jg
sbb
imul
ds
push
aad
pusha
sbb
jl
pop
adc
aaa
mov
xchg
add
xchg
inc
pop
cmp
lea
push
cld
xor
int3
loopne
add
ja
and
fimull
in
scas
sub
sub
cmpsb
fisubrl
frndint
stos
jle
rclb
jb
sbb
cltd
adc
sub
push
enter
mov
fbld
pop
lcall
mov
push
aad
adc
sub
push
or
repnz
sub
loope
cs
mov
pop
lea
and
ficoml
mov
mov
push
adc
push
pushl
int
outsl
rep
nop
jg
and
dec
jmp
ss
mov
aad
adc
iret
sbb
cmpsb
sti
dec
data16
stos
and
rcrl
movsl
mov
sbb
mov
fsts
pushf
dec
stos
clc
dec
inc
adc
jecxz
lock
xchg
dec
mov
add
aas
xlat
cmp
cmp
and
rcl
ss
daa
adc
and
je
mov
fwait
pushf
sarl
mov
add
notl
loop
cmc
mov
lret
and
dec
sub
mov
cmp
pop
testb
iret
xchg
int3
loope
sbb
jl
hlt
sbbl
mov
or
sbb
dec
negb
test
movsl
cmp
test
dec
daa
shlb
test
stos
ds
scas
cmp
or
pop
into
int
cmp
push
mov
das
xchg
int
push
xor
pop
jns
sbb
into
and
std
sub
lds
es
in
jne
popa
add
mov
xchg
mov
shr
mov
lcall
std
lret
cmpsb
jo
add
lods
xor
rcrl
jg
adcb
jbe
arpl
or
mov
neg
add
addl
push
ds
jge
popf
xchg
pusha
stos
mov
scas
aad
jnp
ror
bound
clc
pop
jmp
fimull
out
aad
xor
or
or
dec
jle
clc
mov
sbb
dec
aaa
pop
rcrb
sub
add
lods
cmpsb
pop
lahf
ffree
mov
scas
int
xlat
mov
in
cmp
xor
sbb
insl
dec
imul
mov
insb
sarl
aad
test
fstpt
sbbl
in
add
sbb
cmpb
fs
cld
push
cmp
inc
cmpsb
and
lds
mov
in
sbbl
jg
add
icebp
mov
xchg
pop
adc
push
pop
jb
mov
test
mov
aad
outsl
adc
add
sub
call
shl
adc
pop
loopne
fcompl
mov
mov
or
sbb
fwait
adc
mov
loopne
or
jp
stos
cmpsb
lret
push
in
inc
imul
out
inc
in
jp
ret
cmp
enter
mov
ds
in
sub
dec
xchg
sbb
sub
out
pop
cltd
sbb
push
cltd
lret
adc
inc
mov
pusha
popa
pop
sub
out
sbb
mov
xchg
sbb
das
mov
in
fbld
sub
add
xor
add
and
dec
imul
jge
mov
adc
mov
mov
jg
das
push
sub
mov
and
mov
hlt
bound
sahf
aam
jae
lret
and
icebp
jnp
add
int3
ss
push
push
ret
arpl
jb
int
fisttpll
jae
or
cld
bound
adc
gs
jmp
adc
in
sti
jp
call
push
ret
and
add
sub
sbb
adc
imul
adc
cmp
mov
call
fucomip
fucomip
mov
mov
dec
or
arpl
call
in
int
dec
mov
icebp
jg
mov
cmpsl
mov
fisttps
cmp
dec
ret
add
adc
cmpsl
inc
jae
push
rolb
ss
or
ja
roll
repz
sahf
adc
xchg
mov
dec
inc
out
std
push
add
push
sahf
stos
mov
push
push
call
sti
xchg
mov
movsl
scas
loope
mov
movsl
cmovge
dec
push
scas
sbb
roll
jge
addr16
add
mov
push
ret
fdivrp
dec
inc
mov
xor
data16
jp
jecxz
imul
cwtl
cld
dec
mov
xchg
adc
into
sub
enter
and
jecxz
dec
cmpsb
inc
dec
lods
mov
int3
das
push
enter
sbb
and
les
pop
jecxz
sub
dec
jbe
jne
repz
mov
pusha
orb
inc
xchg
popa
ds
leave
sahf
fucomi
sub
jl
jne
sbb
adc
mov
mov
dec
jg
mov
and
mov
cmp
pop
or
adc
lahf
enter
adc
insl
lock
inc
inc
and
mov
adc
test
xchg
inc
je
mov
sub
js
push
and
mov
pop
mov
sbb
xor
adc
pop
fstp
iret
adc
mov
ljmp
out
dec
xor
lcall
cmp
mov
push
adcb
stc
ljmp
push
xor
sbbl
xchg
scas
adc
mov
leave
mov
push
cmp
push
cs
fcoml
mov
aad
jl
adc
mov
xchg
push
push
cmpsb
loope
xor
xchg
xor
dec
inc
mov
mov
sub
mov
push
and
pushf
cmpl
lret
jo
jo
idiv
cmp
push
stos
fisubrs
xor
sbb
lods
mov
cmpsb
and
enter
dec
push
jge
xchg
in
ja
insb
cmp
or
movsl
mov
stc
push
nop
jge
mov
adc
dec
jae
jg
icebp
outsb
jno
je
loope
pop
popf
lods
arpl
lds
stos
jecxz
dec
push
xor
rcr
pop
pop
out
lahf
inc
cld
fcmovb
jo
les
dec
jno
movsb
sarb
push
jl
lret
sti
adc
in
clc
cli
hlt
ja
mov
in
ror
jecxz
inc
sub
hlt
jle
mov
or
xchg
jle
in
cli
popa
aas
jb
iret
or
aad
xorl
sub
sub
mov
mov
mov
mov
xchg
mov
mov
or
enter
or
sub
mov
mov
aad
jle
ret
or
fwait
adc
int3
push
das
cwtl
hlt
push
aam
jae
xchg
cld
sahf
push
ss
loop
data16
sbb
int3
and
out
mov
jge
shrl
mov
lcall
imul
dec
outsb
cmp
xor
cwtl
fwait
mov
rclb
add
adc
xchg
mov
push
sbbl
outsb
jnp
ror
aaa
fwait
dec
iret
and
dec
lret
hlt
pop
xlat
loopne
mov
push
jp
lahf
or
mov
mov
pop
xor
outsb
push
iret
mov
add
div
jne
imul
stc
mov
xchg
inc
add
ss
and
sub
andl
cld
jecxz
cmp
mov
pop
pop
and
sahf
div
popa
xchg
sub
outsb
and
aad
std
mov
mov
dec
jp
bndldx
xchg
ret
add
xchg
push
fisubl
push
shll
ja
stos
mov
sahf
sbb
jg
jp
jns
mov
xchg
sub
push
sub
into
mov
pop
stos
repz
pop
add
dec
lret
adc
rcrl
into
lods
mov
lahf
pop
aaa
mov
xchg
jle
push
push
adcl
sub
pop
dec
and
jge
xor
repz
sbb
subl
cmpsl
cltd
inc
cmp
xchg
pop
push
dec
sbb
mov
andl
icebp
sbb
sub
mov
adc
insb
jo
imul
dec
insl
int
jne
movsb
insb
and
or
mov
xlat
xor
cmpsb
aas
fs
mov
gs
cmp
pop
dec
movsb
xchg
and
movsb
stc
loopne
clc
cmp
int3
enter
xchg
cmpsl
rol
pop
fmulp
sbbb
int3
movsb
mov
pop
lock
or
aam
repz
shrl
aas
les
in
and
bound
loopne
daa
xor
cs
cmp
add
sub
add
add
mov
aaa
mov
fldt
mov
lahf
and
adc
xor
push
sub
enter
data16
sbb
jne
add
jmp
mov
sub
add
cmpb
or
inc
add
mov
mov
into
mov
adc
cli
aad
jmp
jecxz
out
fmul
lret
loop
mov
add
popa
sub
movsl
sub
fildll
shlb
stos
scas
pop
add
mov
imul
dec
jo
jecxz
xchg
pop
cmpsb
out
sbb
dec
scas
jmp
bnd
and
add
ljmp
dec
mov
dec
gs
push
fdivs
jae
leave
call
xor
cmpsb
push
inc
or
cmc
dec
push
paddsb
sub
fsubrl
xor
enter
sbb
das
cmp
loope
mull
es
or
mov
mov
stos
std
repz
xlat
les
push
add
and
add
ret
xlat
jge
dec
push
lret
bound
sahf
adc
mov
or
arpl
lea
fldenv
pop
adc
dec
or
popf
mov
insb
data16
jb
mov
or
and
cli
inc
cmp
insb
cmpl
popf
inc
lahf
sbb
hlt
mov
lods
lods
lds
cmpl
mov
popf
jb
int
adc
sahf
sbb
add
bound
jno
mov
cld
mov
dec
and
mov
into
jecxz
mov
jg
sbb
js
or
adc
rcrl
dec
paddq
xchg
jno
cmpsl
jge
loope
inc
sub
lahf
mov
mov
and
xor
je
ret
mov
in
fcoms
xor
dec
cmp
push
fimull
mov
push
cmp
fstpl
mov
es
lea
jbe
orl
mov
stc
dec
in
mov
cmp
das
cmp
mov
and
aad
and
out
cld
frstor
in
int
jmp
xor
rcrb
subl
and
test
xchg
stos
ds
sbb
push
xor
gs
out
mov
stos
mov
int
pushf
sti
cmp
dec
push
std
fucomip
jae
lods
and
and
cli
in
pop
sub
test
mov
or
adc
xchg
dec
std
add
push
and
pop
mov
mov
push
pop
data16
lock
out
mov
inc
fcomip
dec
dec
lds
or
push
pusha
jl
inc
imul
jae
push
sarb
pop
and
sbb
lcall
incl
aad
and
xlat
or
mov
fldt
dec
icebp
jnp
and
testl
pop
adc
popa
dec
mov
clc
cwtl
push
out
repnz
inc
inc
test
mov
jo
dec
or
mov
sub
inc
adc
sub
pop
xlat
jmp
test
shlb
lret
dec
mov
nop
fisubl
out
popf
daa
cltd
pushf
repz
xorl
aas
add
cmp
or
mov
sbb
outsb
adc
pusha
xlat
mov
lret
insl
icebp
movsl
sub
sbb
pop
adc
enter
cmp
mov
adc
mov
jmp
pop
or
or
fildl
hlt
mov
xchg
mov
cmc
jbe
lods
pop
fidivrs
stos
sbbl
cltd
adc
xor
sub
push
inc
fcomps
sbb
jp
in
fisubrl
sub
cmp
xor
mov
rolb
aam
mov
movsl
xlat
adc
jbe
fs
jnp
clc
jmp
mov
xchg
fildl
push
inc
mov
adc
lret
xchg
add
jecxz
gs
mov
xchg
enter
iret
mov
cmp
or
inc
orb
cmp
flds
adc
iret
or
aad
stos
ror
and
jl
push
leave
pop
sahf
pop
mov
out
xchg
push
outsb
adc
jbe
or
xchg
in
lahf
sbb
sbb
mov
mov
iret
cli
xor
or
push
pusha
lods
cmpsl
jge
jno
or
flds
push
and
lods
xor
inc
mov
shrb
or
jns
pusha
hlt
sbb
add
or
lods
xchg
cmpsb
add
sbb
lahf
mov
into
or
or
inc
mov
daa
loope
dec
and
mov
test
addr16
or
or
testl
ja
and
arpl
mov
jge
mov
and
xchg
sbb
cltd
dec
mov
inc
movsl
lret
int3
and
or
outsl
or
rcrb
call
sbb
imul
or
das
lods
insl
pop
jp
or
xchg
add
push
push
scas
fisubrs
pop
hlt
pop
cmpsb
push
xlat
add
pop
adc
jo
push
sub
aam
mov
xor
lret
minps
in
dec
clc
fbstp
pusha
jnp
jne
clc
call
adc
add
cli
push
and
sbb
inc
cmp
xor
pop
test
cmpsb
hlt
idiv
push
lock
ja
loope
mov
repnz
xchg
jecxz
mov
jmp
cmp
adcb
pusha
repz
cmp
nop
in
sahf
jp
call
sbb
push
imulb
mov
nop
in
ja
mov
jge
cmp
fnstsw
and
adc
push
imul
aad
and
inc
in
fwait
mov
inc
pop
test
push
shll
mov
mov
ss
xor
lods
and
call
jnp
cltd
inc
cltd
mov
ljmp
addr16
jecxz
sbb
daa
sbb
sub
js
movsb
inc
daa
mov
and
aas
push
fstpt
rolb
mov
xor
scas
dec
aam
out
mov
pop
insl
mov
mov
sub
pop
add
enter
incb
mov
dec
pushf
ja
insl
stos
mov
stos
dec
repz
xchg
push
int3
xchg
inc
mov
ds
add
jp
cld
mov
or
lods
mov
xor
cmp
fcmovnbe
push
push
cmp
inc
mov
fcompl
mov
cmp
inc
mov
or
mov
jns
inc
imul
fnstcw
jmp
sbb
stc
adc
jo
jae
movsb
mov
in
adc
push
cmp
leave
push
jmp
push
in
iret
jp
xor
pop
pop
loopne,pn
dec
add
cwtl
sbb
and
adc
repnz
aam
lea
mov
jns
xor
addr16
insl
and
or
dec
and
push
ss
mov
std
xchg
ror
lods
mov
lods
idivb
add
cwtl
adcb
gs
jnp
xor
idivl
and
push
jg
sub
jmp
clc
leave
enter
out
jle
cmc
imul
xchg
out
pop
insb
push
dec
jns
or
mov
jg
push
fistps
mov
or
xlat
pop
decl
push
cmpsl
jno
call
dec
pusha
sbb
adc
jp
adc
add
lret
jecxz
mov
adc
repz
lock
dec
xor
xor
in
and
sahf
inc
pop
xchg
ret
cli
outsl
leave
cs
push
push
das
dec
andb
and
pop
or
sahf
add
pop
sub
dec
fcompl
mov
cli
jae
xchg
push
shlb
push
mov
addr16
pop
cmpsl
inc
sbbb
jge
mov
inc
pop
or
mov
and
add
out
jle
push
mov
stos
fnstenv
in
int3
fucomi
xlat
adc
dec
push
lock
dec
mov
jp
mov
mov
cmpsl
test
aam
pop
jns
leave
fidivl
stc
or
lods
push
mov
and
mov
lcall
js
imul
scas
in
add
repz
insb
dec
mov
mov
dec
adc
push
clc
inc
pop
int
mov
popf
inc
xchg
sbb
push
fs
sub
push
fnstcw
imul
jae
out
inc
clc
add
test
shl
repz
sysexit
or
es
aad
mov
repz
sub
push
jg
inc
loopne
int
cmp
push
lods
jge
mov
and
cs
pop
mov
int
cmp
push
decl
lcall
mov
inc
xchg
call
mov
es
push
test
sbb
jl
int
mov
outsb
jo
ficompl
push
pop
cmp
push
and
je
in
jle
dec
popf
inc
jne
mov
push
cmp
iret
popa
bound
jae
dec
fsubs
lods
mov
mov
jecxz
xor
xchg
jno,pt
fdivrl
add
cmp
sub
andl
mov
mov
adc
test
mov
add
insb
mov
jg
in
sub
inc
stos
sub
shll
push
ret
int3
fldt
jno
shll
xor
lock
out
push
jmp
in
pop
test
mov
sahf
push
test
push
inc
jb
rcr
cmpsb
fidivrs
sbb
sub
push
sbb
mov
xlat
ret
or
in
pop
and
xchg
pop
mov
ret
cltd
ret
in
cwtl
addr16
pop
mov
call
loope
pushf
stc
ja
fidivrs
loop
jle
cmc
jp
mov
mov
loopne
jno
adc
xor
aam
cwtl
push
lahf
mov
outsb
int
pop
nop/reserved
clc
dec
push
mov
mov
mov
jne
xchg
rcrb
js
out
dec
je
imul
out
pop
addl
and
popw
fistps
sbb
scas
mov
outsl
fwait
inc
dec
in
mov
lea
and
lret
dec
mov
cmp
push
cmc
adc
icebp
jns
push
xchg
xchg
push
xor
stos
rcll
pop
les
xchg
inc
and
push
aad
imul
mov
call
xchg
out
inc
icebp
lock
add
fs
out
in
xchg
fbld
add
or
js
pavgw
mov
dec
mov
pop
sub
ljmp
dec
and
and
popf
cld
dec
aaa
jle
mov
xor
in
rorb
mov
xchg
pop
or
in
mov
rorb
add
jp
rcl
xchg
cwtl
mov
pusha
push
adc
pop
push
cwtl
out
dec
xchg
lret
or
cmp
cmp
jmp
jno
push
lret
jo
orl
popf
mov
cld
push
div
mov
les
mov
push
imul
jns
xchg
test
loop
xchg
inc
in
out
mov
fsubl
jmp
imul
jg
pushl
sahf
bound
add
les
sub
add
jae
pushf
inc
mov
sbb
inc
rcrl
xor
jno
loope
jo
add
daa
mov
xor
incl
notb
dec
outsl
loopne
xchg
mov
cmpsl
call
or
subl
inc
xrelease
pop
fwait
push
mov
jae
pushf
js
std
adc
stos
fnsave
cld
or
out
push
mov
je
sub
outsb
loop
int3
jno
mov
ja
cmp
and
pop
push
pop
push
sub
mov
mov
fbld
xor
push
jb
lock
ret
sbbb
mov
and
adc
iret
jecxz
loop
and
pop
out
sbb
and
ja
scas
shl
xchg
inc
jns
inc
add
iret
adc
jb
sti
les
movsb
ret
aad
sub
vpcmpgtw
xchg
pop
fs
rcll
mov
movsl
enter
xor
sub
inc
jecxz
outsl
push
icebp
xlat
inc
test
add
cmp
test
push
xor
and
add
loop
pop
fcmovnbe
dec
pop
mov
out
movsl
dec
mov
fsubp
mov
cmpsl
dec
stos
std
cs
push
mov
jle
loop
or
hlt
push
je
sbb
test
stos
cmp
out
adcb
and
adc
into
xchg
and
mov
push
insb
bswap
std
in
fsubr
repz
push
lcall
ret
int3
adc
loopnew
inc
jp
push
rclb
iret
sub
js
lods
inc
stos
sbb
rcrl
lock
xor
out
add
sbb
jae
push
mov
jl
movsl
dec
das
in
adc
pop
bound
pop
jle
adc
imul
push
xor
roll
mov
inc
sbb
jno
push
arpl
icebp
mov
or
lods
fwait
test
pop
and
pop
push
mov
cli
addl
pop
and
xor
inc
cmpsb
adc
push
mov
imul
je
scas
sbb
and
popf
fs
lret
inc
pop
sahf
xchg
sbb
out
ret
scas
dec
dec
add
mov
pop
rorb
xorl
adc
jb
adc
das
nop
cmp
inc
mov
incl
je
mov
lods
aas
scas
mov
adc
jnp
das
roll
xchg
sub
movsb
dec
cmpsb
cwtl
mov
jl
cwtl
push
pop
mull
pop
insb
lock
add
rcr
faddl
popa
lods
std
fxch
mov
sti
lea
mov
lcall
test
sbb
aad
neg
adc
verr
add
sbbl
shll
jno
lds
imul
mov
xchg
es
inc
or
hlt
dec
sub
push
popf
sahf
sbb
and
mov
jo,pn
hlt
out
push
sub
in
mov
fsubrl
inc
addr16
lahf
shlb
jg
mov
add
lea
addl
shl
jge
test
outsb
sub
cmp
cli
testb
rolb
pop
sbb
adc
jae
sbb
mov
gs
lret
mov
bound
fxch
xchg
add
in
fbstp
sub
xchg
push
mov
push
cmp
push
jp
sub
and
ret
cmp
add
in
add
lret
xchg
mov
fisubrl
mov
and
movsl
mov
subb
mov
cmp
sarb
inc
xor
cmp
mov
bound
sbb
fbld
mov
dec
pusha
icebp
push
sub
loopne
jno
xchg
dec
ljmp
add
daa
jbe
addr16
out
mov
stc
movsb
sti
xchg
cli
mov
pop
and
loopne
add
xor
mov
les
sbb
fisttpl
add
rol
sbb
sti
push
and
lds
xor
ror
and
subl
int
xor
lret
xchg
add
ret
jne
push
dec
dec
out
out
aad
mov
dec
mov
lcall
lret
or
mov
push
pop
sbb
les
xchg
mov
push
dec
xchg
push
and
push
sti
pusha
push
mov
mov
cmp
inc
xchg
adc
cltd
mov
movsb
add
pop
outsb
pop
icebp
jge
sub
sbb
in
insb
push
popf
jne
cmc
cmp
mov
inc
fwait
mov
push
cmp
mov
push
not
cmp
and
sahf
ds
push
push
or
pop
add
stos
mov
mov
fimuls
adc
push
push
jmp
mov
inc
xor
mov
sbb
mov
xlat
sub
pop
jmp
lret
mov
enter
adc
cmp
decl
and
and
xchg
mov
or
mov
lret
pop
jle
xor
push
mov
cld
std
in
jl
xchg
push
inc
xchg
xor
rolb
mov
pop
scas
xchg
mov
fistpl
sbb
add
shrb
or
pop
push
daa
cmp
js
xchg
int
mov
lcall
das
push
sbb
cmpsb
sbb
ret
push
xor
ljmp
dec
xchg
insb
cltd
xchg
xchg
out
lock
cmpsb
adc
mov
mov
repnz
adc
add
leave
cmpsl
fdivrs
mov
pop
je
cmp
mov
icebp
sub
sub
aaa
bound
or
mov
cmp
hlt
test
insl
ja
nop
mov
lea
pushf
and
pop
cltd
mov
into
fnstenv
outsl
outsl
cvtps2pi
fs
je
mov
mov
add
roll
call
enter
gs
dec
mov
sub
xchg
jno
pop
mov
jl
ja
test
mov
ja
adc
test
jmp
mov
int
loop
stos
mov
out
leave
pop
push
and
mov
shl
xchg
repz
loopne
popa
subl
mov
out
mov
test
subb
loop
imul
mov
testl
or
or
pop
out
cmp
add
sbb
fcompl
xchg
daa
addr16
into
test
dec
dec
jle
jmp
mov
rcrb
icebp
mov
cmp
push
xchg
sbb
cltd
adc
cmp
fcmovu
shll
jg
or
mov
cmp
les
test
repnz
mov
jmp
xchg
add
insl
jmp
out
fwait
lret
in
dec
add
popa
pop
sahf
xor
sbb
fcmovb
addr16
adc
clc
ret
jne
adc
push
add
jns
mov
test
lock
cmp
and
into
scas
js
aas
xchg
add
in
daa
div
nop
push
mov
sbb
and
push
jo
es
mov
xchg
aam
dec
dec
add
in
jbe
imul
pop
andb
insl
mov
sub
into
pop
xchg
mov
shll
and
xor
cmp
jmp
call
inc
mov
add
or
out
add
test
push
push
pushf
mov
stos
adc
test
and
xor
dec
popl
int
lock
xchg
dec
or
stc
mov
jmp
add
movsb
ja
cmp
mov
lea
sar
ljmp
cli
int3
jns
sbb
loopne
jns,pt
aad
sub
lret
jbe
xor
fwait
jecxz
xchg
inc
repz
xchg
rorb
mov
insb
jecxz
pop
dec
pop
lret
cld
popf
iret
mov
out
push
and
mov
int
js
sbb
inc
and
and
outsb
sbb
daa
lds
cs
mov
fcompl
cmp
mov
sub
lock
sbb
out
or
mov
push
inc
dec
xor
fildll
xor
addr16
int3
pop
mov
xor
dec
push
rcll
mov
push
mov
xor
jns
notl
cmpsl
mov
pop
xchg
rcll
out
sbb
addr16
les
ror
fstpt
insb
aaa
and
sarl
outsl
outsl
xchg
or
jecxz
mul
push
push
pop
xor
clc
jne
fs
sub
mov
inc
test
dec
jnp
out
inc
aam
sar
enter
mov
mov
cmp
jge
jns
ljmp
mov
adc
xchg
decl
rcll
int
push
cli
pop
call
mov
push
ss
fnstsw
test
cmp
lods
out
sbb
imul
or
pushf
ljmp
orl
cmp
xchg
xchg
leave
fidivrl
cmc
inc
jno
mov
xchg
popa
mov
stc
jns
cmc
sahf
stos
call
icebp
fnstenv
adc
jns
jp
shll
test
dec
int3
jp
cmp
add
xchg
mov
pop
shrb
andb
lret
xor
fdivrl
sbb
mov
arpl
dec
and
push
outsb
jno
dec
adc
decl
add
rolb
leave
popf
test
xchg
pop
hlt
stc
sbb
cmpsb
dec
sbb
iret
mov
mov
mov
mov
adc
lret
mov
sti
pop
outsl
gs
rclb
sbb
sbb
pop
xchg
sahf
rcl
inc
leave
scas
jne
cwtl
in
sub
lret
in
leave
out
shrl
xchg
push
cmpsl
outsb
mov
popf
stc
pop
cmp
jl
pop
push
xor
mov
adc
outsw
js
fnstcw
aad
aas
ret
rolb
push
mov
hlt
push
mov
ret
fisttpll
shll
stos
loopne
add
scas
mov
sub
test
mov
or
xor
xchg
pop
mov
xor
jno
lret
inc
cmc
arpl
dec
push
sbbl
adc
mov
das
xor
int3
movsl
xor
push
cmp
movsl
into
fnstcw
jle
outsl
leave
fsubl
fwait
dec
int
sub
test
bnd
xor
mov
jle
sub
sbb
sbb
outsl
sahf
push
and
in
mov
into
sbb
rcr
xchg
xchg
fisubl
sbbb
and
sbb
movsb
mov
sahf
cltd
repnz
mov
inc
dec
sub
push
pusha
xchg
scas
js
hlt
testb
mov
mov
xor
pop
ret
mov
daa
pop
sahf
outsl
sub
ret
add
xor
test
into
xchg
inc
xchg
jge
pop
mov
aad
jne
cmp
ss
mov
push
ret
lahf
mov
rclb
mov
repz
leave
jecxz
fisttpll
je
popa
incl
jecxz
mov
xor
jle
testl
mov
and
aam
adc
loope
in
pop
out
shll
call
test
sbb
movsb
int
ja
scas
xchg
das
xor
out
jnp
mov
cmp
mov
cmp
testb
cmc
dec
cmp
and
hlt
pop
cld
sub
hlt
dec
mov
arpl
pop
fwait
inc
js,pn
jno
call
cmp
cmpsl
div
gs
pop
or
mov
xchg
mov
and
std
cmp
adc
or
popf
shl
inc
loope
fldcw
les
lret
in
xchg
in
xchg
push
xor
insl
sbb
or
add
call
inc
into
cs
mov
ja
sahf
mov
mov
jne
mov
cmp
std
jle
ja
repz
mov
and
cwtl
jns
sub
enter
sub
shr
xor
or
sahf
mov
push
sub
jb
xchg
lock
dec
add
mov
bnd
mov
sub
adc
leave
dec
add
out
xor
addb
leave
xchg
nop
mov
fisttpll
or
jp
lcall
in
push
or
pop
dec
mov
push
ds
ror
leave
scas
lods
idivl
test
xchg
movsl
jbe
and
aas
imul
add
divb
pushf
or
mov
jmp
inc
idivl
mull
sub
sub
dec
adc
cmpsb
nop
int3
push
ret
add
in
mov
out
mov
push
mov
repz
leave
ja
add
addr16
inc
and
sarb
ret
orb
mov
aas
subl
ja
sbbb
jno
js
xor
mov
mov
inc
rolb
mov
jne
or
and
mov
pop
stc
inc
cmp
rcrl
and
jae
jl
dec
movsb
mov
xchg
and
aam
and
lret
sub
cmp
xor
fildll
or
xchg
mov
lahf
pop
xchg
dec
movsb
notb
push
addr16
pop
dec
mov
mov
shlb
push
outsb
imul
pushf
lcall
andb
xor
stos
stos
fiaddl
and
lcall
mov
bound
aad
sub
sub
xchg
cwtl
mov
mov
orl
in
jne
test
mov
mov
mov
call
inc
mov
and
pop
adc
cltd
ror
fsubrl
mov
das
fcoms
push
pop
xchg
dec
bnd
xor
lds
mov
and
or
std
dec
ret
ret
test
notl
aad
adc
mov
scas
xchg
cld
je
out
push
leave
adc
cmp
loop
adcb
fwait
dec
sar
lea
mov
push
push
mov
shlb
sbb
and
mov
out
add
mov
lret
or
jbe
aaa
inc
enter
mov
dec
mov
sub
and
mov
int3
adc
cwtl
into
aas
lea
or
ficomps
mov
or
je
jp
shrb
mov
push
and
jo
dec
sbb
mov
in
into
xor
xchg
lods
mov
out
jb
cmp
mov
push
inc
es
adc
sbb
push
lds
jle
mov
cltd
ljmp
fnstcw
jne
outsl
call
inc
push
gs
in
add
hlt
push
inc
or
gs
in
jmp
mov
test
jb
jmp
xorl
jae
gs
dec
fdivrp
imul
mov
add
int3
add
addr16
aam
dec
dec
repnz
rcrb
fimull
ffree
mov
rcrb
xlat
mov
fldln2
enter
xor
es
xor
cli
pop
popf
je
aam
mov
sarb
fwait
inc
stos
test
leave
sub
mov
arpl
fidivs
dec
xchg
ja
mov
out
dec
stos
sbb
bound
pop
fcomip
imul
pop
jl
push
dec
imul
imul
hlt
adc
jge
inc
and
cmp
iret
xchg
push
pop
int3
sbb
adc
dec
cmp
dec
jmp
cmp
jo
pop
inc
popa
fidivs
xchg
add
and
popa
mov
jae
push
adc
jns
xlat
add
sub
push
hlt
stos
and
pusha
lahf
mov
add
pop
jmp
shlb
push
mov
mov
pop
rolb
mov
adc
ret
rorb
lods
int3
int
lret
cmp
xchg
inc
sbbb
leave
aas
fisttpl
ret
ret
rolb
mov
ds
xchg
incb
sub
push
or
jnp
adc
mov
pop
ljmp
out
pop
xor
cmp
call
mov
test
clc
jnp
cmp
fisubrs
sub
sub
cmp
xor
cmp
cmp
pop
inc
push
icebp
jns
cmp
mov
xlat
jno
inc
mov
jle
data16
gs
jle
ret
enter
sub
mov
dec
inc
xor
xchg
sub
mov
mov
adc
mov
icebp
sahf
dec
jo,pt
add
loopne
pop
rorl
mov
dec
sub
fstl
sub
push
dec
or
iret
sti
inc
fldcw
into
cmp
add
les
in
inc
enter
sub
ds
fidivrl
and
lcall
adc
leave
popa
fcmovu
xor
jle
mov
cli
in
jnp
and
test
push
pop
pop
cs
test
jl
int
cmpsb
inc
push
and
daa
rcrl
cmpsb
scas
dec
add
je
or
cwtl
addr16
sub
rorl
es
add
stos
mov
add
outsl
mov
xchg
mov
stos
sub
xchg
and
mov
stos
xchg
xor
inc
mov
test
test
adc
sbb
mov
or
out
and
fs
mov
xchg
push
unpckhps
mov
ljmp
and
push
mov
ret
sbb
ja
add
mov
cltd
mov
mov
int
jge
loop
cmp
dec
push
mov
or
scas
mov
arpl
adc
push
ljmp
sahf
cmp
mov
mov
into
hlt
dec
xor
cli
push
je
rolb
std
ret
test
ret
sbb
scas
cmp
xchg
push
les
fs
aad
adc
jno
test
daa
movsl
sbbb
xor
ret
jg
sbb
sub
imul
les
out
out
dec
add
sub
mov
mov
mov
lds
repz
shr
pop
call
push
sbb
inc
sbb
stc
mov
mov
and
cmpsl
fdivl
mov
jmp
pop
push
mov
cmp
shrb
and
in
push
push
movl
aad
repnz
pop
int
mov
adc
and
in
bound
mov
inc
loopne
mov
mov
lret
pop
cltd
xchg
pop
pop
nop
sbb
leave
inc
mov
jmp
les
mov
add
xor
cmp
mov
aas
ja
idivb
add
jmp
les
ja
xchg
mov
ret
mov
pop
inc
jg
rcrb
adcb
jne
pushl
repnz
lret
scas
ss
insb
imul
fadds
mov
addr16
mov
lcall
fwait
and
gs
pusha
sti
aam
push
mov
mov
jle
lods
leave
imul
mov
daa
clc
xchg
pusha
xor
movsb
add
test
test
stos
or
orl
lret
push
sbb
and
pop
cmpsb
mov
ljmp
pop
jns
sbb
xor
xchg
mov
push
fldcw
xchg
xchg
hlt
ja
pop
dec
push
aas
fstpt
pusha
in
pop
leave
daa
xor
mov
add
cld
mov
ja
cltd
clc
mov
add
aad
jge
outsb
fsubs
sub
shll
data16
lock
lcall
data16
repz
jle
inc
push
xor
mov
inc
loopne
pop
in
add
add
aam
int3
in
push
sbb
push
cld
sbb
inc
adc
imul
lret
lahf
xchg
add
fstps
hlt
mov
mov
aad
push
lret
mov
clc
jo
test
sub
jg
addl
mov
jecxz
scas
pushf
pop
push
sub
mov
aaa
fisttpll
js
sub
and
inc
or
add
cmc
nop
js
aaa
cmp
scas
out
outsb
in
mov
ds
inc
popf
mov
cs
scas
xor
in
or
jbe
sbb
repnz
pop
push
sbb
mov
push
sub
and
into
dec
pop
in
movsb
ja,pn
mov
and
cmpsb
ret
adc
push
push
repnz
les
add
rclb
gs
pop
cltd
sahf
cmp
xchg
jno
in
mov
cmpsl
enter
cltd
push
mov
xchg
pop
and
or
sbb
out
push
je
andb
mov
dec
in
or
imul
mov
push
fsts
sbb
test
shll
inc
mov
insb
mov
call
ret
pusha
out
bnd
pop
in
jmp
xchg
sub
sti
pop
cmp
mov
sub
popf
jae
pop
cld
cmp
pop
lods
in
sub
leave
pushl
int3
out
lahf
mov
aaa
inc
and
aas
scas
sbb
xchg
jge
xchg
enter
arpl
pop
repz
dec
mov
jns
cmp
popa
xchg
adc
imul
mov
or
pop
mov
mov
sbb
cmpsb
xchg
sahf
or
push
inc
nop
xor
xchg
stos
pop
xchg
imul
sub
sub
dec
int3
mov
mov
inc
inc
dec
cmp
xorl
dec
xor
mov
pop
cli
push
inc
nop
icebp
jmp
push
insl
and
pop
adc
xchg
inc
enter
lock
in
xor
rclb
test
loopne
in
mov
adc
pop
shlb
mov
popa
inc
iret
fistps
ss
into
fst
and
xor
sub
pop
movsb
cmp
jne
sub
gs
push
je
movsb
lods
insb
je
dec
clc
xchg
repnz
fists
mov
in
pop
cmpsl
adc
addr16
in
rorl
clc
das
data16
ffreep
jecxz
mov
cltd
inc
mov
jl
out
push
js
sbb
test
out
xor
lods
dec
xlat
adc
adc
movsl
pop
adc
cmp
xchg
push
ja
cmpb
lret
jne
add
cmp
fbstp
sti
sbb
fwait
inc
aam
pop
xchg
in
mov
mov
nop
out
call
mov
mov
repnz
pop
in
in
pop
adc
shll
fidivl
pop
push
pop
shlb
test
push
cmp
test
pop
iret
dec
jae
sbb
add
mov
pop
fs
or
sub
nop
pop
sbb
push
push
dec
mov
mov
fwait
test
je
or
rcll
and
push
push
cmp
insb
mov
add
jecxz
cmp
out
inc
dec
mov
stos
fs
mov
cmpsb
jbe
xchg
jmp
rcll
data16
lods
xor
add
mov
cmpsl
fnstcw
cmpb
repnz
leave
lock
mov
xchg
lret
sbb
lods
and
bound
and
xor
lahf
movsl
sbbb
xor
add
cmp
pop
scas
jmp
dec
pop
mov
lcall
add
inc
lods
je
cmp
loope
inc
sbb
mov
sbb
add
sar
repz
hlt
fsubs
add
popf
pop
fists
fwait
sub
inc
mov
adc
sbb
addr16
mov
mov
cs
fstpt
cmpl
das
mov
std
push
mov
mov
fs
fistpll
lret
dec
lcall
cmc
xchg
data16
leave
xchg
pop
xchg
nop
shl
xlat
fiaddl
jmp
outsb
cmp
pop
popl
or
add
ret
sub
mov
pop
pop
cmpsb
add
pusha
push
mov
lods
sti
lds
iret
rcl
xchg
or
jnp
pop
inc
push
cmc
sarl
dec
cld
xor
jp
pushf
int
ljmp
and
movsb
jae
dec
out
add
mov
add
dec
ljmp
sbb
cmc
jb
out
jmp
jnp
and
mov
pop
and
sbb
ja
jle
or
jo
movsl
lock
xchg
xchg
scas
xor
stos
arpl
jne
push
xlat
jl
mov
cmp
aad
dec
xor
fdivs
imul
push
movsb
jg
or
cmpsl
pop
push
jo
outsb
lods
cmp
fsubl
sbbb
movsl
mov
aam
lahf
repnz
push
bound
sub
aad
ds
js
nop
mull
adc
sbb
add
js
add
jo
fs
dec
and
fs
push
fstl
loope
imul
int3
pop
fistpll
push
adcb
outsl
dec
rcl
and
shrl
cvtdq2ps
adc
lods
leave
outsb
les
or
dec
push
call
mov
fxch
adc
fst
ficomps
cmp
repz
sbb
mov
lret
jae
ret
add
mov
jp
je
mov
cli
adc
imul
mov
and
aam
mov
xor
and
add
fsubrl
add
mov
jecxz
jae
jno
les
es
xor
insl
sub
push
stc
pop
adc
jg
cs
scas
adcb
fmul
pop
testl
jo
xchg
std
push
out
xchg
push
xor
sub
das
pop
andb
pop
and
or
out
inc
xchg
repz
mov
mov
cmp
repz
shl
mov
cmp
gs
or
jge
jge
movsl
xor
stc
es
test
push
out
push
sub
leave
frstor
add
popf
cmp
imulb
mov
adc
mov
pop
adc
adc
add
std
enter
fdivrs
clc
mov
sbb
out
lahf
jmp
lcall
add
adc
insb
test
decb
lret
add
leave
sub
std
divl
mov
jecxz
movsl
adc
in
mov
inc
push
jecxz
or
sub
fsubrl
cmp
mov
xchg
and
sub
les
xchg
mov
mov
es
in
pop
int
and
inc
pusha
mov
aaa
cmp
mov
inc
or
xor
loop
or
divb
xor
call
pop
test
push
out
cmp
ss
add
lret
jne
adc
lods
sub
movsl
pop
add
jnp
iret
fistpl
aad
cli
jo
cwtl
clc
cmp
ljmp
add
pusha
jnp
cmp
mov
sbb
push
push
and
into
mov
mov
lds
xchg
dec
cwtl
fisubrs
inc
sub
out
push
adc
inc
lea
incb
mov
frstor
loope
pop
dec
jb
lcall
lea
xor
jb
aad
cmp
inc
out
or
sahf
mov
lret
jle
and
dec
sbb
adc
je
and
add
ret
xchg
int
ficoms
cmp
lods
lret
scas
jae
fwait
rorl
or
xlat
or
mov
insl
sub
nop
dec
mov
popf
pop
jl
lcall
mov
inc
cmpsb
push
mov
sub
push
mov
mov
lcall
push
xchg
push
arpl
jne
pushf
scas
out
and
xor
push
ds
add
push
cld
dec
out
aad
mov
add
inc
jo
xor
inc
add
stos
lods
xchg
call
in
inc
clc
mov
stos
aam
sub
jo
dec
insb
sub
stos
mov
lret
fdivrl
ret
push
dec
pop
jecxz
fcos
dec
mov
testl
or
ljmp
daa
sbb
sbb
cmp
mov
jle
aaa
aad
sbb
popa
movsb
mov
jbe
push
outsb
pop
jp
mov
mov
je
je
inc
mov
movb
cmp
jecxz
and
lods
stos
aas
lret
ljmp
frstor
shl
cmp
cmpl
pop
jl
addr16
jb
or
mov
stos
out
movsl
cli
push
in
stos
in
mov
in
cmp
fstps
jecxz
and
xor
mov
sbb
xor
adc
cmp
dec
mov
lahf
jns
aaa
push
ret
ljmp
lahf
xchg
test
add
jne
xchg
outsb
ja
popf
mov
push
lret
jb
imul
cmc
fstpl
icebp
jno
jg
cmp
pop
int3
inc
or
xchg
mov
mov
sub
idivb
mov
push
imul
mov
xchg
dec
jbe
adc
sub
lret
jl
rorl
ficoml
jno
inc
mov
mov
lods
inc
mulb
sub
jbe
jb
out
xchg
dec
pop
repz
ret
xchg
jp
jbe
stos
push
sbb
push
sbb
cmp
rorl
outsb
into
nop
popf
scas
push
mov
data16
xor
dec
lret
vmread
dec
imul
movsl
ret
xor
nop
arpl
fsts
xor
ds
add
into
mov
insb
cmp
xchg
test
into
in
jp
mov
dec
cmp
pop
lods
fdivl
cmp
adc
mov
push
sub
mov
clc
cmp
sub
and
ret
or
ror
push
pop
ds
xor
popa
test
push
and
fisttpll
outsb
dec
xor
xor
lcall
or
lods
cmp
inc
jge
hlt
or
and
xor
and
nop
lcall
jb
lds
or
dec
sarb
xchg
add
cltd
test
pop
leave
or
loopne
add
addb
vmovntps
inc
pop
sub
out
push
dec
fdiv
and
aas
addl
lds
mov
clc
fistpl
jmp
mov
nop
les
xchg
stos
in
cli
xchg
mov
jo
pop
loope
mov
popf
mov
mov
pop
lock
pop
leave
adc
xor
adcb
jae
or
xchg
mov
push
pop
cmp
mov
or
loopne
cltd
icebp
xchg
ds
and
rolb
cmpsb
adc
stc
pop
and
les
inc
scas
pop
call
insb
pop
mov
pop
out
xor
dec
mov
sbb
dec
lahf
movsb
filds
jmp
fldt
lock
push
int3
sub
mov
and
fistpl
fstpt
lods
arpl
dec
stos
aas
or
leave
sbb
mov
and
xor
mov
xor
and
test
mov
insl
jo
sbb
add
cmc
push
mov
cmpsl
bound
test
sbbb
cld
pop
push
and
in
add
jb
inc
ret
mov
andb
mov
pop
dec
int3
lods
inc
lahf
mov
push
add
add
sbb
es
sbbb
outsb
and
stos
out
inc
cmc
inc
loope
mov
add
div
dec
mov
ljmp
push
adc
mov
dec
jns
pop
imul
xchg
push
cmp
or
lds
pop
lret
mov
cmp
imul
pop
xchg
sub
xchg
mov
jns
lret
das
adc
out
adc
cmc
cmc
negl
or
xlat
push
mov
push
in
sbb
std
dec
cli
xchg
insl
movsb
push
lea
faddl
or
stc
sub
mov
repz
push
push
mov
xchg
mov
jmp
xlat
and
idiv
pusha
push
lods
and
mov
mov
jo
fstl
insb
stos
jle
sbb
cmp
mov
add
lea
test
inc
inc
cs
push
cwtl
bound
fmulp
pop
add
into
ret
andb
enter
sahf
adc
adc
xor
and
shll
std
negl
mov
das
lcall
xor
and
adc
out
roll
leave
shll
roll
push
pop
out
lock
inc
scas
or
testb
int
push
imulb
out
inc
test
sbb
xor
mov
mov
sub
and
jne
pop
or
mov
and
arpl
inc
xchg
and
test
stc
xchg
clc
push
adc
ficomps
ret
jecxz
and
sbb
loopne
hlt
ret
dec
pop
cltd
neg
push
aaa
jnp
dec
sti
clc
aaa
clc
sub
and
addr16
inc
pop
sbb
adcb
inc
ss
stc
mov
cld
sahf
ss
jmp
gs
leave
pushf
in
mov
out
inc
cmp
pushf
shll
cmp
adc
divb
mov
sti
mov
subl
shr
adc
pushf
dec
or
aad
jb
and
pop
mov
fwait
mov
call
push
aam
cmpl
cmp
xchg
test
sti
lock
pushf
sub
nop
pop
cmpsl
insl
xchg
push
and
movsb
or
stc
jl
lcall
clc
sub
in
xchg
or
cmp
outsl
mov
lahf
test
adc
icebp
cld
cmp
nop
xorl
mov
or
add
nop
or
push
push
pop
test
pop
inc
pop
adcl
idiv
adcl
xor
js
mov
cld
push
jecxz
xchg
cs
lock
mov
dec
clc
xor
call
or
aaa
jb
and
arpl
lret
dec
sbb
nop
xchg
clc
hlt
dec
dec
sub
sbb
adcb
adc
addl
in
pop
aas
ljmp
jns
in
pop
incl
aaa
leave
int
fnstsw
or
xor
inc
add
ficomps
pop
xor
lret
imul
push
repnz
dec
mov
pop
xchg
and
pusha
not
cmp
xor
cld
insl
mov
add
or
mov
test
or
in
mov
push
xchg
fildl
or
lods
sub
jbe
fdivrs
mov
mov
pop
cmpsb
mov
cmc
inc
jge
mov
mov
sbb
sbb
std
push
fcomps
adcb
lret
push
sub
sbb
mov
cld
xlat
pushf
mov
aad
mov
mov
ja
mov
adc
imul
into
aam
mov
jecxz
fidivs
mov
inc
or
push
sub
dec
or
push
nop
mov
imul
xchg
pop
imul
negl
rcrl
mov
cmp
inc
pusha
mov
jle
sub
in
adc
push
jb
pop
loope
jmp
divb
jp
repz
jbe
aas
pop
nop
xor
inc
mov
xchg
call
xchg
mov
dec
call
push
pop
cli
fisubrl
iret
mov
cmp
push
push
jae
cmpsl
push
lret
popa
and
cmp
clc
mov
sbb
sbb
sbb
inc
sti
aam
cltd
les
mov
jo
push
lret
inc
pop
ret
xor
pop
sti
out
jns
sbb
mov
xchg
dec
loope
sbbl
dec
subl
push
shr
sbb
xorl
das
adc
sbb
push
dec
and
mov
jnp
mov
xor
incl
xchg
sbb
lods
lahf
xchg
push
inc
and
add
scas
and
lds
test
adc
arpl
out
jle
and
mov
xlat
and
mov
test
lods
adc
fsubl
hlt
cmpsb
in
dec
cmpsb
test
inc
test
xchg
lret
and
ja
aam
push
push
xor
jl
ds
push
inc
cs
stc
test
int
aam
inc
push
cmpsb
dec
shlb
std
cmpxchg
jmp
jmp
adc
jmp
fyl2xp1
pop
xor
sahf
sub
test
ljmp
movsb
loope
lret
push
jnp
call
bound
fmul
mov
or
cli
cmp
and
imul
push
aas
push
loop
dec
out
xor
test
xchg
add
loope
push
sbbb
xchg
int3
aam
xchg
hlt
js
push
push
loop
push
jle
xchg
test
push
imulb
imul
fiadds
ds
call
aam
cmp
cld
mov
mov
aaa
in
in
xchg
rcrb
push
or
add
xor
pop
out
in
dec
adc
pop
imul
xor
and
mov
fwait
mov
sub
mov
lds
aas
adc
nop
enter
dec
xchg
jl
inc
outsb
enter
or
scas
cmpsl
or
sbb
mov
and
pop
scas
ja
xor
mov
cmp
in
leave
arpl
or
sbb
ret
pop
inc
aam
xchg
sub
lds
xor
ds
mov
ret
test
shl
or
inc
das
mov
clc
jb
and
jecxz
bound
popa
hlt
leave
sbb
fxch
push
jle
jbe
hlt
jbe
push
ss
inc
dec
mov
fstl
xor
pop
dec
mov
cltd
add
and
daa
addr16
testl
mov
pop
push
push
test
sub
inc
pop
and
push
add
ror
pop
inc
je
xchg
adc
and
movsl
mov
aam
out
and
mov
xchg
xor
mov
mov
xchg
in
stc
jb
pop
fwait
push
pusha
jg
scas
mov
shrl
movsb
fisubl
cs
mov
fiaddl
mov
or
push
mov
mov
cmc
mov
lret
pop
test
xchg
jl
or
je
je
mov
lret
sub
xor
xchg
hlt
fmull
leave
popa
icebp
test
cmp
int
xchg
xor
andb
in
mov
adc
and
sub
mov
cltd
and
mov
subb
dec
jb
icebp
daa
and
or
add
xchg
jmp
add
int
add
inc
sbb
mov
insl
mov
adc
xchg
adc
and
jge
sub
les
dec
dec
adc
arpl
push
mov
into
ret
fidivl
pop
dec
test
cwtl
fnstenv
in
scas
into
xchg
add
test
sbb
jge
out
jns
inc
arpl
loopne
push
pop
inc
cmp
das
or
rolb
adc
cmp
sub
xor
das
fmuls
cwtl
pop
adc
xchg
pop
add
push
push
mov
jmp
sbb
inc
popa
shrl
mov
mov
outsl
pop
sub
sub
xchg
or
lcall
jnp
inc
popf
jge
cmp
adc
cmp
data16
or
imul
pusha
into
and
cmp
shll
imull
mov
mov
in
jo
xor
pop
cmc
xchg
push
pop
imul
popf
leave
cli
cltd
add
push
pop
push
xlat
sbb
inc
dec
xchg
add
aaa
aas
pop
fists
dec
push
xor
xor
jno
xlat
jno
out
cmp
dec
dec
in
and
lods
aam
in
xchg
aam
stos
rol
inc
sahf
enter
es
stos
lds
xor
mov
aam
push
ljmp
mov
pop
cmpsb
stos
jo
imul
out
sti
shrl
sbb
ret
mov
sahf
xchg
mov
xlat
mov
dec
or
orb
out
test
pop
inc
in
and
or
lahf
js
sub
sbb
mov
mov
aas
ljmp
daa
inc
adc
or
verr
repz
mov
sahf
jmp
cmp
loope
outsb
jl
xchg
push
xchg
fs
mull
pop
sub
fcoms
dec
jmp
add
fdivr
in
arpl
sub
pop
shlb
shlb
out
shlb
test
sbb
cld
jno
call
fadd
push
shlb
xchg
repz
pop
call
jge
dec
xlat
shlb
aam
mov
adc
pop
rol
push
in
cmpsl
mov
pop
das
loop
loope
stc
sarb
test
test
add
sub
push
push
xchg
addb
add
push
inc
jo
jl
pop
mov
dec
insl
adc
jg
mov
out
nopl
fwait
es
cmp
mov
add
pop
lret
call
adc
inc
mov
pop
pushf
inc
push
dec
cmp
jecxz
insb
jno
cmp
loopne
pop
dec
fisubrs
cs
popa
mov
mov
shlb
movsl
mov
pop
mov
cmpsb
lcall
inc
mov
aam
aas
inc
cmc
cld
mov
xor
push
push
mov
scas
sahf
inc
pop
sbb
cmp
adcl
shlb
add
inc
lahf
int
pusha
popf
mov
xchg
jp
fwait
xor
dec
test
adc
cmp
adcb
add
jno
push
js
arpl
xor
sarb
jge
push
icebp
pusha
fiadds
jne
and
pop
pop
movsb
push
int
rolb
or
inc
adc
bound
xchg
add
sbb
push
cmp
loopne
ret
stos
mov
cmp
mov
or
pop
dec
in
mov
jbe
jmp
test
pop
dec
clc
or
mov
enter
je
jl
pop
dec
mov
out
adc
and
not
mov
leave
add
into
cwtl
mov
add
bound
jns
mov
jb
jbe
test
or
mov
aad
cmp
cld
in
and
scas
or
ss
pop
loopne
push
push
adc
add
adc
inc
add
stos
iret
std
inc
movsl
ss
lock
pop
mov
or
mov
inc
jp
pop
cli
mov
jmp
loop
js
rol
std
repz
out
jae
sub
cmp
push
in
mov
mov
lret
xchg
adc
pop
or
outsl
inc
cmp
push
dec
mov
mov
xor
and
fs
gs
cmp
push
aas
into
fcom
adc
lock
pop
mov
pop
insl
popa
arpl
enter
rolb
and
bound
insb
stos
mov
ret
xchg
xlat
pushf
mov
popf
pop
cwtl
mov
add
fsub
pop
ss
lret
mov
loope
leave
test
cmpb
sarb
stc
out
repz
mov
pusha
inc
sbb
and
sub
repnz
out
cmc
in
pop
aaa
out
sarl
hlt
nop
jp
push
popa
push
inc
jno
dec
mov
dec
xchg
dec
xchg
mov
fistpll
mov
test
pop
in
out
jge
mov
mov
dec
sbb
mov
into
mov
jae
inc
push
cmp
jae
dec
lea
sub
mov
mov
stc
fstpt
rclb
jg
aad
mov
jmp
aam
and
movsb
in
pushf
lcall
mov
jae
ret
stos
in
cltd
int
pop
out
lahf
movl
xchg
je
out
xor
and
out
ret
jl
or
jno
cmpb
repz
inc
xchg
xchg
push
in
scas
dec
push
call
lret
outsl
aad
or
sub
sub
fisubrl
sti
mov
xor
addb
ss
lret
and
cmp
push
sar
in
mov
inc
cltd
cmc
cwtl
xor
sub
sbb
lea
jg
lea
or
leave
or
lods
jne
and
pop
mov
jnp
dec
xor
sub
int3
push
or
add
sub
je
repnz
fadds
mov
fldenv
stc
scas
pop
mov
insl
inc
in
daa
ja
rclb
cld
inc
jno
cmp
or
in
insl
xor
and
cltd
dec
repnz
out
jmp
push
add
iret
push
cmp
stos
fcom
in
inc
pop
sbb
je
imull
cltd
add
sbb
dec
xchg
aad
fnstsw
int
pop
cwtl
and
jl
int3
push
inc
or
mov
aad
add
insl
jo
xor
movsb
stos
sbb
cli
fs
sbb
lds
je
mov
test
gs
add
rol
lea
lcall
das
adc
pop
cmp
repz
xchg
test
jp
mov
and
incl
jl
cmpsb
push
mov
push
popa
shr
popa
mov
arpl
int
xchg
lahf
sbb
pop
lcall
xor
loope
cmp
pop
pop
or
jbe
xchg
dec
mov
mov
xor
jnp
adc
cli
inc
xor
adc
cmp
pop
imul
mov
ret
or
hlt
sub
xor
inc
cmpsl
jmp
scas
push
scas
mov
and
or
inc
loopne
mov
cmp
mov
push
inc
fistpll
ljmp
nop
dec
pop
xor
cmc
jo
mov
fistpll
mov
adc
mov
call
xchg
jle
jno
rcl
push
inc
xchg
cmc
pop
jg
lahf
lods
jmp
inc
mov
push
lahf
out
sub
shrl
sar
adc
sbb
dec
rcll
mov
out
pop
adc
adc
pop
pop
scas
rorb
lcall
xchg
int
adc
pop
xchg
imul
je
pop
ljmp
repnz
cmp
mov
out
jo
mov
pop
xchg
fnstenv
fildll
stc
mov
adc
ret
jg
jae
iret
inc
icebp
jae
imul
cld
mov
sbb
cmpsb
fs
cmc
gs
fwait
and
mov
or
popa
mov
jno
sbb
or
add
int3
aas
addr16
mov
repnz
mov
aaa
lahf
xchg
icebp
mov
jnp
shlb
cld
insl
cmc
ja
arpl
mov
add
mov
fyl2x
rcrb
imul
sti
daa
push
sahf
ja
jp
out
int3
lcall
repnz
stos
imul
cld
mov
mov
cmpl
or
aas
daa
jb
push
inc
mov
inc
loopne
inc
sub
das
sub
jp
stos
add
add
loopne
add
push
ror
sbb
push
cld
es
mov
adc
mov
add
jg
cmp
jo
add
adc
cmp
xor
adc
pushf
xorb
inc
xchg
cwtl
add
mov
popf
out
daa
leave
pop
std
or
add
mov
mulb
pop
lods
scas
lea
xchg
mov
fcomi
xchg
lahf
xor
xor
mov
jns
sbb
sbb
cmp
xchg
pop
mov
inc
lea
inc
inc
imul
mov
out
outsl
scas
aaa
xchg
or
ret
in
inc
ljmp
or
dec
xchg
xchg
jge
out
dec
inc
fdivrs
shl
xchg
imul
inc
std
lods
add
mov
mov
xchg
pop
rolb
xchg
xor
jge
inc
sti
mov
mov
testl
mov
les
adc
lcallw
push
xor
fmull
jecxz
xchg
int3
aas
ret
bound
lock
mov
adc
or
jmp
movsl
fldcw
cmp
or
add
cltd
jae
pop
jne
test
sbb
dec
dec
add
push
or
mov
notb
iret
js
ja,pn
xchg
mov
push
jne
movl
movsl
dec
xor
mov
cmp
fs
and
inc
dec
sbb
fbstp
xchg
or
cmp
sbb
jbe
cmpsl
cli
popf
jb
movsb
add
inc
enter
xchg
lret
mov
cwtl
lahf
mov
and
pop
movsb
int3
scas
lea
push
push
adc
mov
push
push
fsubs
push
and
push
sbb
inc
add
mov
cwtl
sbb
sub
outsl
jmp
and
ffree
pop
add
call
sbb
xor
sub
xchg
imul
inc
les
in
mov
or
push
repz
adc
fldcw
lret
fimull
mov
push
lret
jg
add
popa
jmp
add
cmpsl
add
dec
idivb
mov
hlt
repz
add
imul
mov
jl
dec
ret
scas
inc
mov
rorb
sahf
adc
xchg
ret
xor
push
xchg
rcr
test
sbb
stc
arpl
or
xlat
jmp
add
test
add
and
xchg
mov
push
movsl
movsb
mov
mov
dec
ficomps
mov
jo
xchg
mov
xchg
jmp
loope
adc
xlat
cli
sub
loop
loop
dec
popa
pop
pop
xchg
cmp
lret
sbb
dec
loop
cltd
popf
inc
push
xchg
inc
enter
incl
mov
fwait
xor
adc
jle
cld
icebp
nop
cmp
flds
rcr
repnz
call
fsubs
add
std
push
arpl
xor
xchg
xor
cmp
mov
ja
aam
sub
and
and
push
out
push
dec
add
mov
mov
scas
fisttps
jge
gs
xor
test
std
or
inc
ja
in
mov
jnp
xchg
hlt
sub
jmp
inc
ja
xor
cwtl
fisttps
pushf
and
repnz
mov
in
je
stos
enter
jae
js
fnstcw
les
xchg
mov
outsl
xchg
mov
dec
add
adc
and
add
repz
aas
jno
push
cwtl
into
enter
test
and
ret
sub
cs
gs
fidivrs
movsb
mov
stos
jns
jmp
daa
cmc
pop
mov
jge
popf
loop
sbb
sbb
add
out
push
aas
fwait
or
jno
mov
pop
jno
loop
push
push
push
mov
loope
and
inc
and
insb
mov
daa
ss
fiadds
inc
shll
xchg
cmp
int3
sbb
jecxz
pop
test
aaa
push
sbb
mov
inc
daa
lds
stos
ja
dec
xor
mov
jne
xchg
gs
js
xchg
lret
xchg
insl
repnz
pop
adc
movsb
aam
cmpsl
jbe
xchg
mov
dec
aad
cmpsb
loope
enter
inc
stc
and
sbb
std
cmp
and
xadd
neg
lret
adc
dec
dec
pop
mov
push
imul
mov
inc
fdivs
jecxz
mov
mull
xor
popa
dec
jp
cltd
aam
jle
push
push
xchg
pop
std
std
push
into
push
or
addr16
push
and
pop
dec
xor
mov
popf
push
push
negl
and
aad
mov
stc
sbb
fisttps
pop
and
inc
push
xchg
fdivp
rolb
push
or
sbb
repz
cmp
lret
mov
popf
cmp
orb
int3
jae
inc
cli
imul
dec
mov
sub
sub
mov
cmc
fiaddl
mov
imul
mov
int3
aad
das
daa
ds
leave
std
nop
adc
mov
and
out
gs
scas
jge
pop
sub
jne
mov
inc
mov
test
cmp
and
mov
jmp
mov
imul
adc
and
dec
insb
mov
mov
pop
xor
jns
sti
xlat
lahf
int3
aad
dec
je
loopne
stos
xor
cld
dec
ficoms
cmp
cld
sahf
out
mov
pop
pop
lcall
push
xchg
adc
add
push
mov
aad
fs
cmp
gs
test
sbb
int
movsb
mov
sub
xchg
lock
shrl
std
rcrb
mov
push
cmp
stos
jo
aad
fwait
outsl
fwait
jnp
sbb
cmp
adc
iret
sbb
lea
add
push
test
xor
push
sahf
lods
push
adc
addr16
mov
lods
test
sbb
push
push
pop
scas
ja
imul
out
addl
xchg
daa
add
ret
jl
xchg
sub
out
enter
dec
xor
pop
fwait
pop
cmp
lods
push
movsl
out
icebp
int3
mov
mov
jno
aas
sahf
movsl
xchg
add
fiadds
mov
inc
cmp
std
call
int
addr16
test
leave
push
in
ja
xchg
je
or
push
jmp
jg
inc
psraw
push
add
xor
mov
push
mov
mov
pop
push
add
lcall
lea
sub
roll
stos
movsb
adc
push
aas
arpl
sub
aas
mov
or
aam
mov
icebp
cld
pop
sbb
add
mov
leave
scas
hlt
or
clc
mov
pop
pushl
jnp
loop
jmp
mov
cli
ror
enter
pop
cmp
cmp
sbb
xchg
cltd
inc
fidivrs
mov
enter
sbb
sbb
rclb
xor
mov
adc
push
push
and
mov
inc
pusha
xlat
or
mov
clc
sub
fstl
xchg
ret
adc
neg
adc
and
xchg
pop
js
jge
lds
int
ljmp
and
adc
loop
mov
mov
test
clc
inc
rolb
cmpsb
mov
int3
and
shrb
xchg
jecxz
sbbb
or
loopne
pop
sub
mov
ret
pop
cmc
pop
into
add
fists
mov
insb
jmp
pavgw
aas
stc
sti
pop
push
fstps
inc
push
out
test
add
adc
dec
test
pop
xor
mov
rcl
in
leave
insb
cs
out
hlt
push
cmpsl
rcr
cmpsb
adc
sti
push
xor
cmpb
mov
pop
adcl
inc
mov
lret
jns
xor
call
or
aas
xchg
es
sbb
sbb
outsl
ljmp
mov
pop
inc
pop
xlat
dec
scas
std
repz
les
mov
pop
into
dec
cmp
loop
fldcw
xchg
lcall
fisttps
stos
xlat
cmp
orb
sub
mov
jge
subl
lods
pop
add
mov
je
ds
add
jp
ret
sub
xor
adc
jle
mov
lret
mov
inc
pop
mov
ret
sbb
shrb
jmp
cmp
fisttps
jl
add
test
pop
ljmp
mov
int
movsb
mov
mov
ja
and
ret
test
aad
arpl
lahf
fsubp
aam
test
int3
jb
xchg
mov
mov
lock
orb
xchg
pop
pop
decb
ret
jp
jo
and
jnp
sbb
dec
arpl
fdiv
lret
xchg
cmp
ret
jg
aad
mov
mov
adc
mov
inc
addl
mov
and
out
addr16
mov
mov
iret
repz
fs
lods
les
pop
rcl
lods
outsb
insl
lret
xchg
pop
outsb
clc
ret
roll
or
push
mov
ljmp
pop
lcall
jno
mov
mov
icebp
xor
adc
out
cs
scas
jl
cmpsl
cmpsl
pop
sbbl
adc
scas
das
push
inc
pushf
stc
divl
jmp
adc
repnz
ret
outsb
xor
mov
ficoml
sub
xchg
inc
mov
divl
xor
pop
rcrl
mov
add
movsb
add
out
pop
jbe
div
aad
popf
dec
imul
addb
test
jne
sti
fcom
movb
adc
test
or
imul
lods
ret
ror
shlb
jmp
les
cltd
into
push
repnz
push
mov
mov
addb
and
imulb
inc
push
mov
jb
sub
syscall
sub
lods
loope
push
out
mov
cmp
jne
mov
inc
testb
fdivrs
dec
xchg
imul
sub
jmp
sub
lret
xorb
adc
fsubl
lods
xchg
or
push
adc
xchg
lahf
mov
sub
and
mov
repnz
sbb
push
pop
mov
rcr
test
addl
sbb
xchg
or
push
jb
pop
jae
sub
push
mov
adc
cli
movsl
jge
sti
xchg
and
push
pop
gs
popa
add
mov
fiadds
or
sbb
cli
push
adc
or
mov
rcll
xor
cmp
es
roll
lcall
push
arpl
insl
aam
scas
shl
sub
pushf
and
je
lea
icebp
outsb
fistpll
mov
sub
add
dec
dec
jns
pop
push
movl
aaa
icebp
push
insl
mov
icebp
xchg
push
sub
jne
orl
cmp
cmp
lea
jb
adc
push
sub
cltd
nop
cwtl
imul
xchg
incb
and
sbb
sub
push
lods
das
push
or
sar
cltd
das
arpl
inc
sti
pop
jnp
cmp
pushf
jno
pop
enter
in
into
and
in
stos
pushf
jo
shrl
fimull
clc
lret
in
push
inc
and
sbb
repnz
push
pop
mov
clc
add
in
mov
movsl
shll
mov
out
pop
movsb
shlb
loop
mov
popf
cmp
ret
inc
insb
outsb
mov
ja
push
ret
adc
mov
aam
popf
clc
mov
or
test
cmp
mov
xor
loope
jo
inc
pop
cld
push
adcb
add
cmp
rcll
nopl
pop
xchg
add
fiadds
insl
stc
in
cmp
out
xchg
lds
je
dec
je
sub
lret
sub
add
rorb
mov
call
mov
cld
out
cli
push
test
sahf
sbb
imul
test
dec
cmp
jo
adc
add
mov
les
add
in
sbb
outsl
xor
jno
adc
repz
ds
jge
xchg
ficomps
ds
xchg
add
cmp
push
dec
dec
idivb
mov
jno
insl
mov
insb
dec
das
xchg
mov
push
sub
sub
addr16
or
call
addr16
into
jl
pop
dec
jnp
pop
movsb
popf
push
cmp
mov
pop
ja
add
mov
enter
aam
in
cld
mov
jmp
pop
add
sub
gs
jne
iret
in
sbbl
dec
aaa
inc
outsb
leave
das
frstor
and
pop
pop
xchg
mov
inc
or
mov
dec
xchg
data16
pop
sub
shll
mov
aas
add
mov
dec
into
adc
rorb
and
jne
daa
dec
jae
lret
pop
sub
dec
inc
fcmovnb
lret
shll
add
mull
cmpsb
inc
dec
out
notb
xchg
dec
mov
inc
sbb
popf
sub
mov
add
addr16
mov
sub
cltd
mov
dec
push
or
and
stos
enter
sar
imul
inc
dec
push
pop
cli
ss
mov
mov
ss
ja
insb
mov
repz
jne
adc
push
or
in
lret
push
adc
daa
mov
push
sub
fisubrs
pop
iret
fwait
mov
nop
imul
fwait
lret
add
stos
mov
fistpll
push
imulb
dec
adcb
jne
mov
insl
stos
lret
mov
sub
scas
push
mov
mov
jo
push
mov
and
push
mov
push
cmpl
sbb
and
daa
lahf
push
or
movsb
mov
cwtl
jne
mov
int
xor
and
int3
push
popf
mov
subb
and
jle
imul
pop
scas
or
mov
mov
insl
xchg
inc
sub
clc
jns
jp
repnz
pop
xchg
les
adc
sbb
jge
into
repnz
push
inc
arpl
fcmovnu
dec
icebp
jns
test
mov
mov
inc
dec
addb
clc
mov
or
enter
push
in
inc
nop
or
sbb
int3
inc
les
fimull
inc
pop
sarb
hlt
in
or
stos
bnd
rorb
xor
fnstcw
jp
insb
dec
push
fs
jl
sub
dec
shlb
or
lock
lods
out
ror
sahf
lock
stos
cld
aam
mov
xor
or
add
das
jbe
mov
pusha
jg
add
sbb
hlt
pusha
jo
lods
mov
pop
mov
std
lcall
ss
pop
mov
mov
adc
lods
dec
icebp
int3
dec
push
push
nopl
fldenv
dec
adc
icebp
js
in
inc
orl
pop
idivb
sub
xchg
mov
inc
xchg
data16
adc
xchg
int
pushf
push
aas
sbbl
sbb
dec
jae
xor
daa
mov
aad
pop
inc
adc
clc
jne
mov
scas
and
int
rcl
xchg
hlt
jne
jmp
and
gs
jl
jbe
push
stc
cmpsl
xchg
lods
fwait
and
jns
inc
stos
aad
icebp
pushf
ja
lret
das
addr16
stos
pop
pop
pop
inc
std
add
mov
inc
mov
scas
sbbb
jl
push
sub
jnp
sbb
test
jmp
aas
mov
add
or
out
mov
push
les
jne
lea
jmp
sahf
or
cmp
sahf
fdivl
aad
rcr
cltd
sub
jecxz
xchg
in
out
loope
jnp
adc
or
adc
mov
out
movsl
outsb
outsl
cmp
fiaddl
stos
movsl
sub
pop
jmp
mov
jno
sahf
jl
pop
fwait
jg
imul
mov
shrl
add
repz
inc
mov
addr16
jecxz
jp
ds
push
pusha
and
mov
mov
xchg
neg
jle
enter
xchg
cmc
cmp
popf
imul
das
fwait
jnp
mov
pop
hlt
push
jnp
mov
xchg
inc
dec
sbb
roll
push
lret
pop
mov
push
lods
mov
ja
mov
scas
mov
les
dec
mov
pop
cmpsl
or
enter
in
mov
cwtl
jl
iret
xchg
xor
ss
adc
inc
push
dec
mov
jecxz
lds
dec
shrb
mov
or
mov
xchg
enter
andb
pop
sbbl
daa
pop
pop
add
push
fyl2x
ljmp
mov
or
sbb
out
xor
add
sub
bound
cmc
mull
imul
pop
inc
orl
and
int3
hlt
aaa
cmc
push
cmp
lods
sub
mov
or
cmp
add
incl
jmp
mov
or
mov
and
sbb
xchg
jl
add
js
orl
jecxz
lods
pop
loope
cmp
das
popf
jns
jne
fldt
mov
int3
mov
in
mov
mov
adc
popf
mov
rcrb
xchg
addr16
cltd
cmp
lret
mov
sub
negb
mov
test
mov
frstor
lock
enter
and
stc
push
scas
and
aam
jge
mov
aam
push
jecxz
sbb
cs
sahf
and
data16
inc
out
bound
pop
fidivrs
xor
out
movsl
adc
ficompl
lock
popf
inc
dec
int
imul
adc
test
loopne
call
fadd
and
test
inc
sub
test
mov
or
push
loop
xchg
dec
mov
jp
dec
push
and
or
add
fs
sbb
clc
rorl
cs
jnp
lea
outsl
dec
add
out
loop
jg
jno
bound
inc
xchg
push
es
data16
dec
pop
pop
leave
out
mov
fstl
divl
icebp
adc
icebp
xchg
enter
adc
pushf
pop
out
fwait
inc
xlat
ret
mov
push
out
push
add
or
out
sti
stos
bound
test
add
leave
sbb
loope
hlt
or
imul
add
pop
mov
lret
fsubrs
shlb
in
ret
test
repz
push
ss
dec
test
mov
fcompl
add
bound
loop
hlt
sub
inc
mov
movsl
fdivs
cmpsb
cld
movsl
cmp
out
push
enter
push
in
sub
ret
jge
subl
pusha
mov
lods
sarb
xchg
sub
aas
fistl
cmpsb
push
sub
mov
or
mov
sarl
push
fnstsw
sbb
jno
cmpsb
fdivs
lock
mov
xor
inc
into
scas
cmovge
xchg
mulb
and
xchg
enter
jl
jg
jg
push
sbb
int
cwtl
stos
fildll
adc
lcall
sbb
sub
mov
dec
xchg
daa
mov
mov
out
jle
pushf
fildll
daa
mov
xlat
mov
stc
xchg
xorb
sti
ds
cltd
loop
or
pop
fidivs
sub
adc
push
xor
and
mov
pop
es
outsl
out
mulb
movsl
jg
pop
movsb
xor
jmp
icebp
hlt
scas
mov
lret
add
jmp
jge
or
lahf
cltd
adc
add
mov
sub
das
sbb
test
fstl
scas
jb
mov
pop
mov
or
fisubs
out
repz
aaa
out
adc
pusha
xlat
in
pop
repnz
leave
xchg
ljmp
adc
ljmp
mov
insb
sub
xchg
cmp
imul
add
jb
sub
decb
loop
addr16
adc
and
stos
add
pop
ja
fnstcw
cmp
pop
test
jnp
dec
je
fsubrl
cs
push
testb
aad
cld
fbstp
jno
push
sub
jo,pn
fstpt
clc
mov
mov
in
inc
sarb
lock
mov
fldt
scas
orl
in
push
mov
clc
push
adc
sub
aam
insb
dec
scas
pop
mov
mov
jp
fst
xor
test
sbbb
xor
dec
jg
push
jmp
enter
jg
xchg
repnz
dec
mov
lods
and
pop
test
xor
cmpsb
arpl
ja
pop
mov
jae
enter
mov
mov
lret
sbb
dec
and
cmp
fs
sub
xchg
dec
repz
pop
mov
int3
aad
shrl
pop
cmp
pop
and
xlat
sbbb
push
arpl
dec
mov
gs
jb
outsl
pusha
mov
push
dec
mov
sti
popa
ficoml
outsb
jb
pop
cmp
or
cmpsb
sbb
lahf
dec
cwtl
cld
test
movsb
es
jne
push
sub
icebp
adc
in
pusha
test
dec
and
xor
fsub
enter
addr16
out
into
insb
adc
insb
ror
pop
popf
pop
movsl
and
sbb
subb
pusha
add
ret
repz
mov
test
mov
call
jbe
imul
ljmp
and
cmpsb
popa
inc
cmp
subb
mov
shl
mov
cs
rcll
cmpsb
or
out
dec
add
mov
fmul
imul
jmp
xchg
scas
or
sbb
cmp
push
pop
in
xor
and
fs
xor
pop
ljmp
mov
stos
or
add
push
or
es
jae
dec
push
fstpt
orb
js
and
lahf
in
add
lahf
psrlw
lahf
mov
add
pop
lea
cli
cmp
jg
lret
dec
mov
xchg
fs
out
loope
pop
cmpsb
xchg
cmpsl
cmc
adc
aaa
sub
xor
xchg
out
lock
inc
jo
cli
add
ljmp
aas
imul
fmul
jne
sti
mov
inc
and
into
push
jbe
shll
mov
loopne
push
dec
dec
gs
lock
mov
or
ret
pop
mov
jbe
inc
add
lods
and
mov
aam
in
outsl
mov
jmp
subl
ja
test
xchg
enter
out
lcall
cmp
add
je
sarl
into
out
icebp
arpl
add
lds
add
fs
lret
outsl
insl
jmp
leave
and
dec
negl
das
lret
shll
add
and
mov
movsb
aad
mov
in
inc
jns
and
jbe
lods
repz
mov
push
inc
sbbb
cmpsl
aad
imul
xchg
push
sub
pop
jle
scas
in
lods
mov
jb
add
insl
xor
lahf
ss
mov
call
ds
andl
je
fcoml
imul
jle
sub
ret
cwtl
inc
dec
sbb
pop
stos
push
fcoms
repz
push
enter
mov
and
rorb
mov
mov
mov
sbb
or
mov
out
lret
add
mov
sbbl
lods
add
ror
hlt
jp
sbb
in
jmp
mov
push
int3
out
nop
cltd
and
inc
cmp
addr16
dec
test
jno
and
repz
sti
clc
jbe
pushf
insl
bndldx
push
sbb
xor
pop
sbb
pop
cmp
push
clc
pop
mov
inc
pop
mov
jp
mov
movsl
enter
mov
add
adc
lock
sbb
xchg
jmp
xlat
lds
mov
jl
jbe
ja
add
mov
pop
xchg
xor
adc
mov
sbb
sub
cltd
fcompl
scas
mov
xor
dec
test
insb
pop
jae
xor
jne
mov
jb
popf
xor
shll
imul
push
dec
fdivrl
jecxz
je
push
das
jecxz
nop
cmpsb
imul
lret
outsl
mov
in
sub
imul
out
fdivl
lahf
loopne
popa
jp
ja
pop
mov
inc
or
fwait
cmp
shrb
pushf
pushf
inc
pop
xchg
cmc
outsl
shll
jno
adc
and
cwtl
fs
sbb
xchg
pop
aam
adc
sbb
orb
lret
cld
sahf
add
dec
test
scas
loope
test
loop
xchg
push
dec
fsts
popf
pop
pxor
fistpl
jae
mov
fcoms
push
inc
fcmovbe
lret
xchg
ret
mov
test
mov
sub
movsb
pushf
jecxz
testl
lahf
push
lahf
rcr
and
popf
lea
or
sbb
loop
adc
enter
cmp
fimuls
fcmovnb
in
mov
pushf
in
push
inc
cmpsb
scas
adc
in
and
lret
fadds
dec
push
xor
imul
orb
ret
pop
ret
insb
in
or
ret
mov
movsb
repz
xchg
test
outsl
xchg
or
mov
or
mov
push
mov
dec
mov
pusha
lock
or
pushf
cmc
nop
inc
mov
push
cmpsb
in
pushl
fldt
jbe
cltd
enter
in
fs
adc
adc
lods
and
push
xchg
pop
lods
push
push
pop
je
mov
xor
cmpsb
sbb
sbb
pop
call
rorl
pop
xchg
icebp
cli
sbb
les
push
dec
mov
and
sbb
es
sub
fldt
dec
xor
add
push
ljmp
dec
sub
test
pop
inc
push
inc
addb
loopne
push
jne
leave
cli
out
nop
pop
pop
jno
pop
sbb
int3
pushf
movsb
and
inc
inc
in
mov
xor
push
push
fwait
sti
shrl
andl
mov
outsb
push
jl
lods
push
ja
jno
arpl
test
push
lods
stos
pop
xchg
pop
adc
pop
pushf
cmp
jae
mov
mov
fwait
sub
mov
rorb
xchg
mov
shll
adc
into
fistps
mov
les
ja
rcr
fldt
lds
dec
xor
xor
xchg
dec
test
sahf
pop
ljmpw
repz
sbb
mov
and
sti
out
sti
gs
pop
jne
mov
ret
lret
pop
cmp
xor
cs
add
lock
fistpl
movsl
dec
gs
cmpsb
or
mov
cmp
jbe
imul
pop
mov
mov
nop
push
and
insb
mov
sbb
gs
shll
push
mov
mov
jl
push
pop
loopne
dec
mov
push
jmp
ret
pop
insl
mov
jge
xchg
xlat
shlb
mov
mov
sub
test
fstp
shlb
jne
jo
aad
add
outsl
xor
enter
dec
cmpsb
into
negl
xor
cmp
and
mov
in
xchg
testl
loopne
aas
push
sbb
mov
cmc
testl
dec
push
sbb
lock
cltd
push
pop
shr
jae
test
mov
shrb
jo
mov
ss
dec
les
std
or
cwtl
jmp
aad
enter
add
jo
into
cmc
inc
pop
test
xchg
std
js
jmp
lock
int3
jns
in
or
push
or
jb
xor
int3
fcom
loope
ret
mov
imul
stos
push
xor
in
repnz
push
inc
aas
aad
repz
call
das
aas
add
jle
cmpps
sub
test
mov
jmp
inc
sub
pop
loop
test
adc
jge
jmp
call
adc
fiaddl
sub
rcr
xor
xchg
jno
sub
repz
push
dec
pop
inc
and
movsl
and
int
push
addr16
lret
stos
movsl
ja
pushf
adcl
fnstcw
test
dec
xor
xor
repz
lret
cmp
aaa
mov
push
add
ficoml
push
test
test
leave
xchg
call
adcl
fnstcw
dec
or
insl
jno
out
pop
cmp
jnp
mov
arpl
jle
cmp
push
adc
pop
scas
push
nop
pop
fs
cs
out
cs
xchg
xor
jnp
scas
sbb
dec
mov
pop
dec
mov
stos
mov
je
std
mov
push
mov
into
cltd
leave
mov
lret
inc
imul
mov
push
inc
push
adc
add
inc
out
pop
pop
outsb
pop
bnd
xchg
sub
xor
inc
dec
mov
shll
test
sarl
xchg
das
ret
scas
fldl
pop
and
sub
xchg
and
mov
bound
sub
inc
nop
xchg
cmp
std
js
push
push
cmp
mov
sub
mull
imulb
scas
pop
xor
loopne
add
pop
scas
pop
fstpt
inc
jo
adc
mov
adc
jns
or
or
stc
sahf
mov
sbb
push
sbb
jno
adc
sub
inc
pop
or
jne,pt
aas
andb
push
inc
lea
int
notb
inc
add
add
sub
filds
add
xchg
mov
aad
cmc
push
es
push
adc
mov
and
pop
dec
test
mov
test
fldenv
mov
push
xchg
ret
in
mov
push
mull
sbb
test
inc
push
rclb
jp
fnstenv
pop
popf
out
adc
ret
mov
dec
jg
int
popf
loopne
jns
outsb
jne
je
sete
push
in
js
cld
scas
inc
pusha
aad
inc
inc
inc
insl
mov
xorl
outsl
nop
push
cmpsl
inc
mov
add
andb
daa
lret
adc
jle
pop
sarb
or
in
pop
mov
in
xchg
fsubl
flds
mov
sbb
jo
sbb
inc
xchg
iret
test
push
arpl
into
mov
pop
outsl
mov
mov
or
enter
cmp
jae
iret
repz
pop
in
and
push
cmp
lret
je
ss
sarb
jge
ret
xchg
lock
popa
or
inc
mov
das
sbb
jp
add
adc
je
adc
cli
ja
aaa
test
and
mov
or
scas
pusha
push
addr16
and
test
xchg
add
insb
mov
sbb
mov
mov
roll
push
xor
pop
add
xchg
push
call
aaa
js
inc
test
insl
add
mov
pop
es
shl
pop
lods
icebp
fcompl
jnp
xor
insb
in
ret
fdivs
adc
std
add
jle
push
cld
test
adc
in
loopne
cmp
add
into
add
push
lahf
or
mov
xchg
lock
fcom
pop
mov
xchg
xchg
cld
lahf
jp
mov
cwtl
jo
sbb
fildl
xor
pop
int
add
push
dec
shrb
fldcw
jmp
jle
cs
mov
shrl
adc
scas
sub
fmull
in
orb
jnp
jae
sbb
lcall
add
jp
mov
mov
scas
or
sub
lods
jb
in
sahf
cwtl
or
addr16
and
pop
jae
xchg
insb
pop
and
pop
popa
in
push
xor
sub
ret
enter
add
add
mov
cmpsl
cmp
aas
ret
xor
cld
incl
inc
jmp
dec
pop
es
test
jl
mov
outsb
mov
adc
mov
mov
pop
popa
pop
lods
in
sbb
xor
loope
mov
rol
adc
dec
pop
rorb
pusha
sbb
adc
xchg
adc
jns
mov
lods
mov
sarb
jle
jp
fsubs
call
test
inc
cmpsl
or
les
add
sbb
push
movsb
and
push
icebp
imul
xchg
sub
xchg
cwtl
ret
sub
dec
mov
nop
and
sbb
mov
in
cmp
lea
jae
push
sbb
dec
inc
imul
xor
jb
push
nop
insb
pop
or
push
jns
or
cmp
push
sub
lock
dec
cmc
cs
and
mov
aad
xor
bound
or
iret
jmp
mov
xor
add
jl
outsb
dec
lds
dec
dec
outsl
lods
cmp
test
not
sbb
or
pop
mov
rcll
mov
movsb
int3
xlat
out
mov
push
into
std
mov
lret
jmp
mov
cmp
jecxz
pop
jb
ja
arpl
pushf
mov
push
out
fisubrs
lcall
rolb
adc
faddl
adc
repz
jmp
pop
cld
lods
rcrb
test
stos
loopne
and
cs
or
hlt
loopne
adc
pop
jo
loopne
or
lcall
iret
popf
fsubs
scas
sub
xchg
push
xor
pop
lahf
enter
jnp
push
scas
arpl
sub
arpl
dec
xor
out
cmp
xchg
ja
mov
es
fsts
inc
sub
inc
adc
push
adc
out
mov
push
sub
insb
add
lds
fstpt
in
add
sub
into
xchg
push
into
pop
pop
shrb
pushf
or
or
int
mov
shrl
in
push
nop
sub
in
jp
into
iret
sarb
in
add
xchg
out
push
push
and
test
inc
jle
in
in
jns
mov
jnp
or
inc
imulb
jb
inc
xor
addl
cmpsl
jmp
mov
xor
outsl
ret
inc
sub
leave
pop
iret
lods
xor
push
popf
xchg
jne
mov
shrl
xor
enter
mov
push
mov
dec
fs
pop
lods
xor
xorb
pop
mov
push
inc
imul
hlt
pop
inc
xchg
out
add
push
ud2
hlt
arpl
mov
xchg
mov
popa
mov
ja
and
cmc
imul
imul
jns
aam
divl
and
jmp
xchg
adc
enter
imul
or
clc
jo
push
lcall
ret
or
or
pushf
mov
iret
or
pop
les
insb
mov
popf
xor
push
inc
inc
loopne
jp
push
inc
mov
stos
push
dec
jnp
jns
sub
sarl
or
mov
sbb
ficomps
push
xor
inc
jmp
or
sub
bound
pop
inc
inc
test
fs
daa
rcr
xchg
ficoml
push
fstpt
or
xor
jmp
data16
dec
dec
inc
inc
jb
pop
std
sub
sbb
and
in
imul
mov
xor
or
repz
or
fcoms
fldt
cmp
push
push
popa
negl
into
sub
pusha
inc
je
sub
add
pop
cs
pop
orl
pop
inc
mov
popf
mov
clc
outsb
imul
xchg
xchg
bound
lods
mov
adc
subl
add
in
or
cmp
movb
scas
or
pushf
test
lea
mov
test
or
xor
dec
mov
in
cmp
pop
aad
daa
popf
add
or
inc
mov
sub
or
add
mov
sbb
mov
cmp
cmp
jnp
xchg
push
pop
fisubrs
in
pop
in
stos
push
xor
test
pop
cld
and
push
test
sbb
add
jae
xchg
mov
fs
jo
jle
enter
cmp
stc
push
cmp
dec
div
dec
mov
daa
xchg
xchg
mov
jno
dec
sbb
mov
xor
adc
dec
mov
dec
cmpl
and
sbb
pop
push
xor
inc
jno
rcr
out
mov
dec
xchg
sub
mov
push
popa
push
flds
loopne
cmp
lock
pop
gs
adc
lds
dec
xchg
mov
rclb
in
subl
ss
cmp
ds
xor
out
popf
inc
jno
add
flds
pop
mov
lahf
mov
daa
dec
mov
cmp
or
shrl
leave
or
fstps
popa
sbb
je
pop
sub
adc
add
inc
push
dec
mov
and
xor
jl,pt
and
rcrl
push
enter
inc
add
dec
add
push
cmp
pop
xchg
sub
cmp
orb
cmp
ret
xchg
test
adc
in
lods
jecxz
adc
dec
scas
icebp
push
cmp
addl
jl
jl
dec
fs
mov
rorl
rorb
nop
scas
pusha
mov
jmp
call
fdivp
nop
js
mov
pop
rcrl
cmp
add
cmp
or
pushf
mov
dec
iret
cmp
test
bound
lret
sub
mov
push
call
nop
inc
sub
loopne
sti
je
mov
in
xchg
rcll
sbb
test
stc
pop
lods
stc
fidivrs
ja
sbb
call
fisubrs
lods
pushf
rclb
dec
addr16
movsl
in
mov
iret
in
sbb
out
or
arpl
mov
movsl
int3
lcall
test
xor
shrb
pop
in
leave
in
and
fistps
out
push
add
push
rorb
mov
ret
inc
sti
pop
rcrb
shlb
insl
mov
call
shrl
cltd
sbb
push
mov
dec
out
and
inc
inc
jg
jb
sub
mov
adc
sbb
andl
cmc
jl
and
insl
fimull
and
cmp
neg
mov
cmp
cld
xor
in
test
in
pop
adc
in
push
add
push
inc
push
mov
and
xor
out
push
stos
arpl
xchg
stos
dec
xlat
mov
mov
std
sarl
xchg
push
insb
out
push
fwait
push
daa
pop
out
andb
pop
lock
shlb
or
in
push
sbb
sub
loopne
pop
lods
adc
xchg
pop
push
iret
or
dec
arpl
add
mov
pop
lcall
jae
cmp
dec
jmp
xor
mov
in
push
cmpsb
shlb
shlb
mov
fs
mov
sbb
and
add
sar
dec
sub
inc
xor
mov
and
jge
mov
cmp
movsb
hlt
stos
sbb
or
cmpxchg
mov
xor
sbb
je
ficompl
or
stos
dec
fyl2xp1
pop
mov
stos
sub
push
les
xchg
ss
pop
pushf
mulb
pusha
stc
cmpsl
pop
ret
add
push
mov
repz
xor
jae
bound
test
mov
jecxz
push
push
fstpl
outsl
andl
pop
mov
shrb
mov
xor
scas
pop
adc
ret
xchg
dec
xchg
mov
cld
mov
xchg
xchg
or
or
jg
aas
fwait
lahf
cmp
sub
push
ljmp
mov
cmp
repz
cli
js
pop
nop
push
lret
adc
xchg
dec
stos
sbb
jne
dec
sub
in
sub
pop
fildll
mov
inc
mov
orb
cmc
stos
and
dec
ljmp
pop
test
iret
cmp
mov
inc
mov
mov
cmc
test
popl
jbe
push
pop
mov
movsb
add
in
jno
jmp
jp
mov
in
fsts
sub
ja
movsb
fnstenv
or
dec
inc
jmp
mov
rclb
inc
cmpsb
sub
push
add
out
sbb
lods
mov
dec
adcb
icebp
pop
mov
xchg
movsb
cmp
loope
push
subl
mov
push
cmp
fistpl
or
inc
pop
dec
add
xor
xor
fisubrl
pop
mov
cmp
pop
cmp
and
jae
or
ja
inc
sub
mov
xchg
pop
or
pop
lcall
sbb
inc
mov
mov
or
fistl
mov
js
out
clc
test
xor
jns
mov
shr
sbb
call
test
loope
push
or
sbb
icebp
dec
inc
cmc
jl,pn
decb
and
sub
jmp
lods
mov
sub
nop
cmp
stos
outsl
add
ljmp
and
or
ss
mov
mov
pop
push
dec
adc
cmp
jae
xchg
cmp
ja
xchg
lahf
into
pop
xchg
mov
pop
adc
sti
inc
xor
ret
in
gs
sbb
lods
out
mov
out
add
in
fistpll
mov
ja
lock
gs
ror
mov
lds
jno,pt
scas
jmp
inc
out
pop
or
sub
and
xor
push
loopne
pushf
scas
bswap
jnp
les
punpckhwd
fisubs
iret
dec
int
cli
mov
outsl
arpl
bnd
dec
and
pop
in
xchg
aas
xchg
sbb
ds
and
in
push
dec
or
cld
mov
or
xor
inc
push
dec
and
das
push
pop
mov
out
pop
ss
or
fs
push
adc
xchg
jl
push
pusha
sbb
xchg
mov
and
scas
call
and
popf
stos
jecxz
mov
mov
fs
or
add
or
jmp
adc
lcall
shrl
sarl
jle
test
sub
push
xor
fnstcw
clc
js
or
std
sti
imulb
imul
jp
jmp
mov
jbe
test
pusha
cmp
rolb
dec
mov
mov
test
ja,pn
fsubl
and
cld
and
pop
gs
and
lea
addr16
rclb
inc
jae
rorb
mov
leave
mov
mov
push
mov
mov
push
sbb
adc
test
jg
xor
lds
push
aaa
mov
inc
lret
mov
daa
push
push
and
and
test
push
popf
push
nop
push
inc
add
cmp
or
fs
cltd
mov
icebp
dec
xor
pop
mov
push
imul
test
xchg
outsl
pop
inc
push
jns
jmp
mov
mov
sbb
adc
push
aad
js
xchg
pop
pop
add
jno
sbb
pop
sarl
mov
pop
outsb
jae
push
ffreep
push
dec
getsec
cmp
sbb
cmp
scas
sbb
mov
sub
sbb
imul
ret
jl
jo
xlat
outsb
out
and
sahf
loopne
cmp
loope
test
into
mov
and
xchg
cmp
aad
pop
mov
xchg
test
jecxz
push
xchg
loopne
notb
push
mov
push
mov
add
fst
push
cmp
mov
mov
pop
inc
push
gs
mov
sbb
inc
imul
loope
lds
cmpl
dec
popf
fs
outsb
or
out
sbb
xor
shll
das
bnd
lret
cmc
cld
mov
pop
push
sbb
flds
or
xchg
popa
push
xchg
push
pop
test
adc
bnd
push
jmp
push
push
lret
rcrb
lret
cmpsl
jo
movsb
add
add
movsb
xchg
jno
dec
cmpsb
sub
out
add
pop
mov
sub
sti
xor
dec
jmp
popa
sub
in
mov
daa
cld
imul
and
mov
out
mov
and
leave
mov
mov
out
arpl
push
jl
outsb
addr16
fwait
push
and
ret
ret
jno
or
mov
and
lods
pop
shlb
ret
mov
pop
inc
outsl
mov
cmpsl
sbb
js
test
rolb
mov
cwtl
arpl
push
mov
nop
in
movsl
fcoms
adc
out
imul
test
out
fdivrl
sbb
inc
mov
pop
cmpsb
inc
or
xchg
push
mov
fstpl
push
pop
pushf
inc
mov
iret
fimuls
jae
and
je
pushf
ret
push
mov
iret
inc
sbb
repz
push
xor
movsb
popa
sbb
cmp
jmp
outsb
dec
leave
pop
push
outsl
out
lret
sbb
filds
and
mov
mov
outsl
pop
xchg
mov
jl
xorl
cmp
mov
pop
dec
adc
stos
lcall
std
xchg
arpl
test
add
inc
cltd
xor
inc
into
in
outsl
or
lock
dec
call
push
jb
dec
and
fsubr
lret
js
mov
push
mov
and
jg
ret
dec
dec
dec
dec
cli
addr16
test
aaa
jmp
jmp
pop
scas
aam
pusha
cmp
subb
je
sub
mov
nop
sbb
inc
pop
icebp
addr16
xchg
jl
mov
sahf
sbb
jno
lock
add
gs
shrb
bnd
ds
arpl
xchg
std
sbb
inc
inc
mov
sbb
ret
sub
getsec
xor
mov
lret
push
ds
jmp
mov
fwait
jg
xchg
or
sbb
sbb
sbb
or
cmp
daa
xchg
adc
fwait
jne
fwait
fwait
sub
clc
hlt
mov
mov
imul
aam
ret
sbb
shrl
arpl
fistpl
out
imull
das
rcrl
scas
and
lahf
sbb
xchg
leave
push
cmp
mov
hlt
jns
dec
xor
jo
iret
xor
push
add
inc
lret
push
xchg
and
lcall
xlat
in
mov
push
inc
sbb
cmp
loopne
mov
mov
cmpsb
adc
pop
mov
sarl
imul
add
pop
sub
push
dec
cmp
scas
scas
dec
sarl
lret
push
jbe
jg
add
sbb
cmc
lcall
xchg
cmp
movsb
ffreep
rcr
lea
fsubrs
mov
mov
and
mov
sub
cmp
dec
filds
in
or
sbb
inc
movsl
sub
repnz
scas
xchg
sahf
jmp
mov
mov
dec
mov
scas
mov
inc
div
xchg
popa
negb
and
test
sub
stc
fnstenv
inc
sbb
aam
insl
add
cmpsl
lahf
imul
jnp
or
xor
sbb
in
pop
fsts
mov
jl
jae
cmp
jo
lret
outsl
call
xchg
xchg
test
lock
jae
gs
sbb
inc
xchg
adc
inc
enter
out
fidivrl
popa
dec
cli
xchg
xlat
mov
mov
mov
lahf
inc
xor
xor
xor
push
lret
lcall
inc
sti
xchg
std
mov
mov
pop
and
pop
movsl
gs
dec
das
push
lret
xchg
dec
ds
add
insb
aas
fwait
nop
negb
daa
ja
add
add
mov
push
rcrl
adc
out
xor
cmp
xor
cmpsl
xchg
cmc
lds
xlat
sbb
cmc
popa
mov
mov
mov
mov
dec
insl
lds
sti
lock
jno
jp
add
xchg
sahf
push
fcompl
xor
ret
mov
push
mov
jo
dec
fstps
xor
repnz
loope
sub
inc
lock
cwtl
nop
xor
adc
mov
adc
xchg
mov
pop
add
mov
inc
inc
mov
fcmovb
fcoms
push
or
pop
cmp
pop
das
test
call
jae
add
jp
xor
mov
sarb
js
xchg
lea
or
xor
outsl
inc
mov
pop
jmp
sub
out
dec
sahf
sub
mov
push
push
xchg
lahf
and
cmpsb
or
push
push
or
cli
xor
lret
jnp
fsub
pop
adcl
cltd
jmp
mov
ljmp
xlat
mov
pop
out
jg
mov
xor
test
and
mov
bound
jmp
jmp
cwtl
inc
imulb
mov
dec
daa
sbb
outsl
and
rcll
aaa
add
dec
fsubl
jmp
test
std
lahf
bnd
notb
loop
mov
iret
scas
or
ja
jbe
or
dec
and
and
mov
icebp
xchg
cmp
or
xor
leave
mov
xchg
js
out
mov
popl
imul
mov
popf
test
dec
xchg
fucomip
jno
repnz
js
je
sbb
push
ret
mov
mov
dec
fidivl
sbbl
and
push
aad
jle
mov
and
push
add
popa
mov
daa
ljmp
cmpb
adc
mov
push
jo
sub
lret
mov
sub
hlt
addr16
call
stos
dec
push
sub
lds
movsb
dec
dec
mov
inc
bound
pop
push
xor
jp
fldcw
dec
or
sbb
mov
test
xchg
pop
dec
lods
daa
add
jl
repnz
xor
das
aam
nop
pop
pop
mov
aam
les
out
and
pop
cmp
stc
cs
fsubr
lcall
and
and
ficoms
dec
scas
jmp
jo
imul
sub
sub
mov
mov
out
cmp
imul
mov
mov
xor
fildl
lock
fsubl
orps
pop
sahf
mov
jmp
popf
fs
or
jecxz
and
andl
inc
into
jle
in
iret
mov
cmp
scas
adc
jecxz
jae
pop
sbb
movsl
daa
int
xor
mov
mov
int3
clc
xchg
xchg
fcomps
and
push
sbb
call
inc
pop
fistpl
mov
hlt
xor
inc
rcrb
subb
in
mov
leave
popa
add
add
fisubl
lret
cmp
lcall
xchg
out
xor
or
clc
test
in
jp
sbb
push
cmp
and
mov
lock
fidivs
sub
mov
jno
lcall
dec
mov
insb
fisubs
push
rcrl
jne
sti
in
inc
xchg
sub
subb
gs
cmp
sbb
lret
stc
push
daa
fisubs
bound
jbe
xchg
jb
mov
cwtl
mov
mov
mov
dec
popa
sbb
outsb
mov
int3
testl
daa
sti
clc
mov
mov
in
or
add
xchg
lahf
sbb
sbb
push
push
sub
push
rol
push
pop
shr
adc
imulb
in
sub
jne
cmp
push
ror
mov
nop
ljmp
test
pop
mov
subl
cltd
ret
bound
adc
rcrl
mov
push
stc
insb
aas
jne
push
sbb
aad
and
jb
hlt
addr16
pop
repz
inc
ficompl
ficoms
sbbl
es
inc
stos
test
xchg
dec
and
inc
lcall
and
pushf
xchg
daa
push
push
mov
lea
insl
into
add
aaa
shrl
adc
shll
mov
notb
sub
mov
add
es
pop
dec
fwait
pop
loopne
xor
push
mov
iret
mov
xchg
push
out
inc
and
adc
jns
xor
jge
inc
popl
outsb
rorb
adc
int
inc
pop
inc
and
jecxz
jns
aas
inc
sub
push
scas
outsb
lret
xor
mov
xor
adc
xchg
pop
aad
sbb
nop
inc
mov
inc
movsb
lret
sahf
push
push
mov
outsb
push
sarb
add
cwtl
sub
adc
cs
fdiv
xor
mov
stos
sahf
inc
add
in
gs
cmp
fisttpl
stos
add
scas
shlb
pop
mov
adc
mov
fwait
js
push
push
int3
jl
loopne
dec
aas
xor
xchg
in
xor
cmp
pop
test
pop
mov
fwait
sub
ret
push
pop
pop
cmp
not
add
std
filds
shrb
push
push
and
jnp
ljmp
rcll
or
lsl
cmp
jnp
jp
hlt
pop
sbb
cmc
lret
pop
outsb
and
sub
lods
push
int3
lcall
lcall
inc
lret
xchg
enter
sub
adc
pusha
cmp
fnstenv
pop
mov
shrb
push
test
jns
mov
xor
push
mov
mov
scas
mov
cmpsb
into
adc
mov
jnp
xor
xchg
mov
xchg
mov
xchg
inc
dec
cmpsl
xchg
rcll
or
pop
push
jg
push
jno
push
fs
pop
sub
xor
mov
sub
sbb
icebp
xchg
cmp
pusha
dec
shrb
loopne
popa
sbb
imul
std
shl
push
add
icebp
ss
push
xchg
in
mov
daa
dec
cli
rcl
inc
pop
jmp
and
out
addr16
fldenv
je
rolb
outsb
in
dec
mov
xor
lret
sub
mov
aam
pop
icebp
add
scas
push
in
push
or
dec
out
xchg
aam
mov
jb
dec
sub
add
xchg
lahf
cmp
pop
mov
mov
lret
gs
in
mov
fwait
stos
rcrb
mov
lcall
pop
les
paddw
mov
and
add
or
pop
imul
in
or
push
mov
bnd
stc
loope
jg
les
lcall
mov
loop
nop
and
sub
icebp
and
cmp
push
js
xchg
gs
or
sbb
xor
mov
cmpsb
scas
out
pop
pop
mov
inc
pop
pop
xchg
scas
stos
jge
clts
das
sub
pushf
stos
aaa
push
xchg
push
std
cmp
arpl
fcoml
push
jg
xor
xchg
stos
ret
mov
pop
dec
mov
mull
popa
cpuid
scas
ss
int
mov
pop
or
sbb
jmp
int3
pop
pop
ret
mov
jb
mov
or
clc
push
pop
pop
mov
cmpsl
dec
sbb
aam
inc
out
fistps
mov
fcmovu
mov
mov
jae
js
iret
dec
fs
jno
lock
stos
daa
pop
sbb
daa
or
loope
mov
lds
pop
aaa
aad
sub
jo
fiaddl
adc
out
icebp
dec
cmc
es
sub
adc
outsb
aas
adc
jmp
test
jb
mov
gs
jge
jge
xchg
mov
das
and
negb
jg
dec
rol
mov
or
mov
mov
sub
inc
mov
test
add
and
lret
adc
nop
mov
push
lret
lcall
pop
std
inc
cli
sbb
or
jns
mov
jmp
xchg
jecxz
jae
push
pop
adc
lcall
gs
andb
out
jae
mov
xabort
or
pop
jg
cmp
rcrb
in
mov
dec
jb
jb
add
or
cltd
stos
pushf
push
jae
xchg
ret
push
mov
xor
mov
dec
add
test
filds
inc
mov
mov
int3
data16
cltd
idivl
out
dec
mov
cmc
mov
xchg
pop
dec
sbb
cmp
cmp
rcrb
sub
js
add
lods
dec
or
mov
push
jb
push
xchg
mov
sub
xchg
push
dec
je
loop
pop
sub
mov
lods
ret
xchg
stos
and
int3
cmc
sbb
sub
aaa
add
add
les
js
dec
or
xor
and
jecxz
repz
pop
or
sbb
test
daa
test
jns
mov
out
inc
lahf
dec
mov
fidivs
mov
aaa
mov
in
cwtl
lahf
shl
or
mov
adc
and
mov
pop
add
test
inc
je
jp
fcoms
xchg
dec
or
add
out
push
mov
and
cltd
adc
loope
test
push
cld
mov
add
push
imulb
sbb
pusha
mov
cwtl
inc
lret
ret
sahf
push
lcall
out
push
stc
jo
outsb
pop
loope
dec
repz
sub
push
inc
sbb
shrl
or
mov
adc
test
inc
jne
sbb
adc
xchg
adc
movsl
loopne
dec
jnp
xchg
mov
lock
pusha
flds
xchg
aas
cmp
cmp
in
sub
add
inc
cltd
jb
or
enter
pusha
pop
sbb
bound
sbb
popa
test
fsubrs
clc
sti
adc
les
test
add
je
ret
js
pop
sub
and
jbe
xchg
mov
sbb
or
scas
cs
push
xor
fistps
mov
adc
mov
sbb
mov
xchg
adc
mov
leave
sub
sub
mov
incl
repnz
jp
test
add
call
adc
cwtl
cmp
mov
mov
loopne
jbe
xchg
mov
push
iret
fcmovnu
leave
xor
jbe
mov
push
dec
mov
das
jno
pushf
das
adc
int3
pop
xchg
mov
fwait
push
mov
mov
aas
jbe
inc
adc
mov
mov
outsb
adc
xchg
idivb
jmp
mov
ds
jecxz
or
scas
sbb
adc
jge
jmp
repnz
stos
push
lret
hlt
iret
into
daa
and
repnz
jno
into
mull
cmp
data16
jno
fst
lcall
mov
stos
push
xchg
pusha
push
jg
and
jmp
dec
fsts
mov
into
in
jge
fistl
mov
cmp
adc
mov
hlt
fsubs
das
jge
add
not
cmp
inc
ds
test
add
xlat
pand
cmpb
in
or
sub
xor
sbb
xor
insl
cltd
fsubrl
sub
adc
xchg
int
push
test
ss
mov
rol
push
rcll
cmp
sub
mov
fs
mov
push
add
fwait
das
jo
leave
cs
lock
pop
sub
pop
xor
ret
pusha
faddl
add
pop
ret
jnp
xchg
mov
or
xchg
jmp
lahf
inc
sub
dec
int3
xchg
adc
sub
fsave
sbbb
cmp
clc
mov
insb
neg
stos
xchg
mov
ret
jo
adc
sub
lret
and
iret
nop
lds
sbb
pushf
mov
push
add
lret
cmp
lods
xchg
rol
lret
andl
movsl
push
jmp
enter
lcall
adc
jge
pop
cmpsl
push
lds
pop
hlt
or
push
add
sarb
loop
and
imul
mov
fldt
shrl
gs
mov
pop
cmpsb
into
sarl
sub
add
adc
and
loope
mov
out
push
ficoms
cmpsb
adcl
or
dec
xor
and
push
sbb
mov
jg
ds
ds
dec
out
inc
dec
xchg
out
mov
xchg
imul
dec
push
in
repz
xor
cmpsb
sub
les
fisubrl
mov
sub
int
aad
inc
xor
fs
cwtl
push
mov
rcl
sar
cmpsl
sub
mov
pop
jns
xchg
imul
aas
sub
jae
mov
pusha
inc
add
jb
dec
xor
popa
cmp
pop
mov
or
mov
es
add
das
xor
xchg
cltd
sub
or
cmp
push
arpl
and
sub
push
sbb
bound
push
pushf
push
mov
jecxz
jg
cli
rorb
xchg
pushf
lahf
jne
push
cmpsb
adc
popf
inc
scas
xchg
sti
xchg
fwait
scas
out
int
jmp
push
xlat
dec
xor
dec
xchg
mov
or
inc
sub
cmc
mov
out
jl
rolb
std
xor
ljmp
mov
xchg
push
xchg
scas
push
mov
cmpsl
in
cmc
inc
call
push
push
lods
ds
ja
ss
cmp
inc
jo
or
dec
push
stos
add
out
shrl
dec
addr16
das
iret
pop
cwtl
rcrb
lds
in
out
pop
push
das
mov
sbbl
aas
nop
mov
dec
push
push
mov
movsb
push
sbb
xor
dec
imul
xor
and
and
xchg
xor
enter
dec
iret
fdivrl
lcall
pop
mov
cwtl
divl
mov
leave
add
inc
add
enter
sti
mov
jp
pop
jb
pop
pop
into
push
orl
pop
and
adc
dec
int3
test
shlb
push
xchg
scas
je
jmp
jg
stos
ret
shl
mov
imul
mov
cmp
mov
dec
mov
sub
cmp
arpl
mov
and
push
movsl
jbe
cld
test
xchg
push
mov
inc
scas
sbb
mov
or
adc
test
jne
inc
int3
add
lret
or
fsub
popf
cs
lahf
push
rep
shlb
jnp
shlb
inc
shlw
sbb
and
aaa
add
loopne
sbb
xchg
ret
or
incl
sbb
insl
fisttpll
or
xor
jne
inc
inc
imul
lcall
inc
adc
or
mov
push
lahf
push
js
nop
lcall
imul
test
ds
inc
cli
mov
xor
rol
mov
adc
xchg
leave
inc
in
and
in
imull
dec
lea
out
adc
movsl
cmp
jns
or
and
arpl
in
cltd
mov
and
notl
scas
loope
into
shll
mov
and
xchg
pop
dec
push
flds
cmpsl
push
and
add
pop
add
add
movsl
loop
inc
popa
pop
dec
clc
mov
pusha
mov
pushf
pop
fidivrl
xchg
xor
mov
dec
xor
mov
and
out
xchg
adc
xchg
stc
dec
push
shrb
xchg
shl
js
or
cmp
cmp
insl
lret
loop
in
icebp
ljmp
jl
call
xchg
cli
cld
cld
cwtl
fcompl
mov
push
rcl
jb
shl
jne
pushl
and
inc
mov
test
and
sbb
pop
int3
mov
mov
js
sub
cmc
mov
xor
inc
rcrb
ds
mov
add
inc
adc
ja
cmpsb
shrl
gs
daa
cmpb
popa
push
jnp
rclb
ja
inc
push
pop
data16
out
shrb
sub
sbb
jns
int
cld
inc
xchg
push
xchg
in
les
dec
and
xchg
add
mov
popf
add
loope
rcrb
roll
push
inc
roll
xchg
jmp
xchg
push
adc
sahf
pop
fs
jecxz
hlt
sub
mov
pop
push
repnz
or
out
nop
inc
cmc
and
xor
cltd
std
fs
hlt
mov
mov
lods
arpl
gs
stos
pop
stc
les
rorl
lods
aad
sbb
jg
cmpb
xchg
insb
lret
pushf
shll
inc
ret
test
ss
hlt
and
js
push
cmp
sbb
adc
jecxz
mov
lea
movsb
loop
xor
cmp
fisttpl
mov
arpl
xchg
arpl
mov
rolb
js,pn
enter
daa
fwait
std
cmpsl
xchg
ljmp
jae
mov
in
xchg
cmp
stos
fidivl
idivb
int3
xchg
arpl
fisttpll
and
inc
popa
mov
xchg
fucomip
jg
xor
mov
jecxz
fcos
sbb
pop
out
sbb
ljmp
inc
xchg
push
xchg
mov
shl
jo
jecxz
sbb
rorb
clc
ret
clc
jne
movsl
fistl
xor
jecxz
xchg
aam
loope
push
addl
out
imul
pushf
adc
lock
mov
movb
pop
xchg
xor
insb
xchg
inc
call
ret
xchg
jecxz
js
cmc
pop
mov
negb
dec
mov
xchg
test
scas
jns
sbb
adc
insb
ds
cmp
mov
les
xchg
stos
mov
pusha
mov
popa
xchg
or
xor
xor
mov
icebp
movsl
pop
push
shll
xchg
cmp
xor
inc
jp
ss
insl
fwait
mov
sub
mov
add
push
nop
mov
xchg
subl
inc
xchg
mov
dec
lahf
xchg
mov
jae
repz
out
pop
mov
fsubrl
push
and
lods
cli
into
out
adc
xchg
scas
sahf
jbe
in
jo
adc
movsb
aam
cli
push
lock
lcall
leave
and
add
lods
fwait
cmp
push
inc
ds
fs
cmp
xchg
hlt
fisttps
mov
jl
pop
mov
add
outsl
cmp
stos
cwtl
repnz
jbe
stos
call
bound
sbb
dec
xor
push
and
pop
mul
and
and
incb
mov
lods
pop
and
js
js
and
lock
aas
dec
sub
mov
out
frstor
je
dec
repz
xor
lea
in
jo
add
sub
and
lods
in
imul
pop
adc
dec
cmpb
popl
mov
pop
pop
in
dec
jge
dec
lock
mov
xchg
adc
xor
sbb
jmp
push
inc
mov
or
push
adc
aad
jnp
cmc
ss
mov
fistps
xlat
mov
mov
sti
pushl
test
in
jl
mov
push
pop
fisttpll
fiaddl
mov
cmc
subl
mov
pushf
cli
dec
mov
push
pop
lahf
mov
repz
adc
pusha
inc
out
daa
add
sub
cmpsb
movsl
pop
lock
pop
int
call
rcrl
push
push
pop
xchg
xchg
cmp
or
mov
xchg
sbb
cmpsb
scas
pop
xor
fstps
fdivrs
movsb
add
jle
addb
xor
iret
rol
push
out
out
out
mov
push
aaa
sti
js
inc
adc
push
dec
and
sub
inc
jnp
pop
cltd
mov
mov
sbb
scas
rolb
test
ret
push
push
repz
out
jo
daa
cli
ja
xchg
jl
movaps
jle
sahf
sbb
xor
sub
cmp
jo
add
popf
or
xchg
push
dec
add
dec
mov
insl
out
push
orb
and
fnstenv
ret
xor
or
push
mov
adc
aas
adc
movsb
add
movsb
dec
notb
mov
out
hlt
jne
push
push
fidivrs
rorb
in
daa
cmp
test
or
pop
aad
das
mov
mov
inc
xchg
lret
sbb
insb
jae
shlb
or
fld
push
loop
movl
scas
xchg
rcrl
xlat
mov
inc
push
outsl
out
jb
add
ret
xchg
mov
sub
cmpsl
mov
in
repnz
das
neg
xchg
and
inc
jg
mov
xor
xchg
xchg
repnz
fadds
sub
push
jae
scas
xlat
loope
fimull
dec
popa
stc
xchg
xchg
mov
jge
mov
or
sbb
inc
gs
es
sbb
dec
xchg
cmp
inc
fdivrp
dec
jb
xchg
ficompl
or
adc
cmp
int3
sub
in
adc
add
or
and
les
add
jge
xor
out
add
add
pop
sbb
pop
lods
sti
outsl
fs
lods
push
jbe
das
pop
out
jb
shrl
jp
mov
nop
inc
mov
nop
jge
int3
dec
arpl
mov
dec
inc
cmp
ret
add
das
test
das
incb
je
stc
mov
test
jmp
jle
pop
lea
adc
in
out
outsb
mov
decb
js
adc
inc
ljmp
test
imul
pop
aam
fwait
andb
dec
adc
mov
sti
ss
mov
and
add
cwtl
mov
dec
iret
jl
aad
adc
pop
push
gs
cmp
cmp
pop
mov
pop
adc
or
cmp
das
cli
xchg
mov
scas
cmc
jp
sahf
cmp
mov
inc
push
and
cmc
push
sarb
mov
fistl
add
inc
movsb
cmp
call
or
jg
push
repnz
mov
dec
ljmp
pop
loope
pop
jb
stc
push
mov
out
cwtl
aam
hlt
jbe
jne
mov
arpl
es
stos
dec
test
lods
xor
test
sub
nop
fs
cld
push
cli
fcompl
push
xchg
inc
data16
xor
out
cmp
xchg
dec
cmp
pop
mov
cmp
out
bnd
stos
ds
ljmp
push
pop
mov
xlat
push
and
sti
jp
shr
fmull
pop
xor
hlt
or
lds
stos
sbb
cmp
or
jg
push
prefetch
and
out
pop
mov
andb
xor
mov
push
xor
adc
mov
mov
xor
pop
push
insb
ss
jg
pop
mov
xor
pop
hlt
popa
in
hlt
in
pop
cmc
add
adc
inc
pop
pop
jnp
rolb
repz
add
es
and
pop
push
imul
mov
jo
test
insl
enter
push
inc
jle
loopne
dec
aaa
xor
add
ljmp
xchg
mov
jg
push
mov
sub
ja
add
shrb
xor
dec
xchg
xchg
test
repz
scas
movsb
daa
cmc
or
loop
fld
xchg
add
push
mov
inc
data16
lods
cmp
fmull
and
pusha
cmpsl
mov
loopne
add
jge
add
cwtl
pop
jp,pt
pop
pushf
push
clc
or
aas
ret
lods
inc
insl
mov
adc
inc
mov
insb
scas
xchg
dec
push
jae
or
dec
mov
adc
lcall
push
mov
mov
sub
add
daa
sbb
pusha
pop
out
or
dec
movsb
mov
dec
or
jns
in
mov
mov
inc
dec
inc
movsl
adc
test
inc
jg
and
insl
dec
test
fwait
insb
test
cmc
xchg
xchg
cld
insl
adc
fbstp
jns
push
cmp
or
xorb
or
inc
xchg
ja
movsl
mov
xor
lds
lods
xchg
mov
mov
scas
add
pop
fwait
sbb
cmc
sbb
jecxz
les
insl
mov
test
repnz
cmpsl
push
xor
repz
leave
add
dec
pusha
bound
out
push
push
dec
pop
popf
xchg
cmp
and
push
xchg
aas
hlt
cs
add
stos
nop
jecxz
mov
jp
iret
jns
aad
pop
movsl
rcll
mov
lock
cmp
push
sbb
sub
jg,pt
add
stos
inc
jns
test
test
cmp
in
sub
sbb
jge
loope
aas
pop
aad
mov
xchg
lret
push
and
mov
mov
xchg
pusha
arpl
and
and
data16
pop
addb
inc
fldcw
notl
or
sarb
in
sbb
mov
mov
rclb
stc
mov
xchg
dec
subb
xor
xchg
imul
stos
mov
in
add
out
int3
lea
sbb
xor
loopne
imul
popf
insl
lods
lods
xchg
pop
add
xor
cmp
leave
dec
imul
andb
rcll
push
or
cmpsb
mov
in
and
scas
lods
sbb
xor
lock
ljmp
jle
insl
pop
xchg
jle
push
frstor
inc
cmpsl
sub
mov
cmp
jns
mov
and
xchg
mov
xchg
cmp
cmpsb
pop
pusha
faddl
jmp
sub
xor
iret
in
lods
add
lea
pop
test
xor
jb
mov
dec
ret
mov
pop
mov
rorl
cmc
lret
shlb
and
add
movsb
mov
add
xchg
mov
call
addr16
xchg
fstpl
push
std
test
stos
into
pop
xor
cmp
and
or
pop
pop
jle
mov
sahf
div
mov
cli
pusha
imul
mov
adc
mov
flds
xchg
sbb
push
jp
sbb
test
adc
repnz
pop
loopne
pushf
inc
pop
jmp
in
flds
pop
pop
lock
lds
mov
scas
mov
pop
inc
xor
add
mov
or
into
push
notl
pop
cld
rclb
cmpsl
lret
or
in
popa
dec
cmp
pop
adcl
xor
aad
pop
or
sbb
pop
iret
iret
fimuls
jbe
adc
push
push
test
sbb
inc
mov
adc
xchg
jmp
cmpsb
lret
or
mov
repnz
push
lds
adcl
scas
addb
out
stos
aad
cmp
std
mov
in
jg
xor
aaa
mov
in
test
adc
shll
popa
jecxz
xchg
mov
dec
int3
movsl
sbb
mov
ja
sbb
xor
mov
mov
push
sbb
in
mov
jb
push
mov
pop
cmp
shll
insl
das
xchg
lret
rorb
jo
movsl
push
xchg
test
xchg
and
loop
xor
sub
jbe
xchg
dec
sub
sbb
test
ret
sti
push
jecxz
shll
and
sti
sbb
sub
pop
mov
scas
call
xchg
ljmp
or
and
cs
rcpps
push
fwait
xchg
lret
pop
std
fistps
and
add
sbb
pop
mov
jb
inc
jge
sub
mov
sub
sub
dec
inc
cmpsb
sub
xchg
mov
jp
fstpt
and
pop
mov
testl
int3
push
mov
xchg
push
adcb
sbb
mov
loope
repz
pop
sub
inc
in
clc
push
stos
daa
ds
stc
je
mov
add
jns
mov
pop
shrl
or
adc
sbb
data16
sub
data16
sub
pop
sub
xchg
in
pop
scas
into
dec
loopne
fwait
outsl
mov
call
jo
dec
jae
fwait
mov
lahf
bound
mov
fwait
stos
int
sbb
test
xchg
outsb
stc
mov
lcall
mov
mov
stc
jl
lods
stc
aaa
mov
call
test
pop
sub
ret
mov
sbb
cmpsl
jno
dec
lahf
jne
leave
fdivrs
xor
ja
jmp
cmp
fstl
ja
sbb
jmp
push
pop
xor
call
outsb
mov
cltd
stos
jne
xor
mov
jp
in
stos
xchg
push
orl
mov
cwtl
jle
jp
add
mov
out
pop
in
jno
decl
repnz
dec
hlt
push
fdivs
mov
ret
lcall
popa
add
out
sub
sbb
popa
and
push
imul
jne
les
lds
or
cmp
fmul
inc
popf
shlb
adc
sti
jecxz
or
sub
hlt
dec
adc
js
cwtl
in
xchg
add
mov
push
idivl
fidivs
sarb
and
xlat
je
xchg
sub
mov
mov
dec
xlat
sahf
ljmp
sahf
loope
js
or
mov
or
out
adc
xlat
xor
push
cmp
lock
add
loopne
jo
jmp
mov
xchg
fidivs
cmpl
in
add
mov
loop
dec
in
xchg
mov
out
lret
cmp
mov
rclb
or
insl
fcmovb
push
push
repz
and
xchg
pop
xchg
cmc
rcll
pop
inc
cmp
sbb
push
int3
jge
outsl
adc
sbb
push
in
les
sti
sbb
xchg
test
pop
scas
cld
xor
insb
out
pop
push
mov
leave
cmp
push
pop
cmp
in
movsl
or
cmp
popf
xchg
pop
cmpsl
xchg
pop
xchg
and
sarl
je
test
push
jge
jg
cmp
or
pop
xchg
cmp
sub
das
xchg
sbb
sbb
jbe
mov
enter
in
mov
jp
jl
or
mov
xchg
jbe
imul
cmp
mov
ja
fists
mov
in
and
sub
push
add
mov
and
mov
std
and
jmp
lcall
adc
stc
jmp
mov
mov
cmp
ja
rcrl
idivl
push
pushw
iret
adcb
and
mov
cli
iret
jae,pt
adc
or
test
jge
add
push
jmp
int3
xor
inc
outsl
call
xchg
xchg
pushf
xchg
or
loopne
jb
rdmsr
xor
sub
jae
add
sahf
ret
or
bound
or
add
jb
sub
mov
inc
inc
mov
js
mov
lock
or
cmp
das
cmpsl
int3
cmp
leave
jno
outsb
jg
scas
pop
and
test
xor
cwtl
jne
aas
cmp
addr16
mov
xchg
pop
std
pop
mov
jmp
shl
in
push
xchg
pmaxub
inc
or
sbb
mov
ret
xchg
fdivrl
dec
aas
cli
loop
pop
loope
ljmp
dec
and
push
and
xor
lods
xchg
fst
stos
pop
sub
call
and
mov
push
cmp
jecxz
mov
xor
outsl
push
fsubl
mov
popa
inc
mov
mov
ret
fcomps
lods
fcoml
div
or
in
mov
lret
and
mov
cwtl
std
adc
ljmp
xchg
scas
mov
xor
cmp
jmp
cltd
push
lods
adc
or
roll
lahf
test
movsl
and
jbe
sbb
inc
enter
inc
stc
aam
clc
in
jp
jo
jmp
in
mov
xor
bound
cmp
lret
and
mov
repnz
and
outsl
or
sarb
add
sbbl
adc
push
cmpl
xorl
andl
into
mov
jmp
hlt
jbe
ret
cmp
test
idivl
cmp
mov
mov
or
push
pop
lods
mov
js
ljmp
push
ja
sbb
mov
popa
lret
aas
add
out
add
mov
push
into
cmp
cmpsb
loop
loopne
loopne
and
xchg
ljmp
dec
out
nop
adc
lahf
sub
les
je
stc
push
int
shr
push
jp
cmpsl
mov
jg
sbb
cmp
nop
adc
adc
adc
lahf
sarl
jp
cmp
xor
cmp
lods
aaa
leave
imul
sbb
dec
mov
adc
mov
test
les
je
xchg
jnp
incl
push
inc
push
inc
mov
sub
add
jne
xor
mov
dec
in
cli
addr16
push
or
cmp
xchg
orl
mov
mov
pop
fmull
rclb
imul
xor
loopne
fstpt
and
mov
insb
stos
mov
adc
setb
scas
aad
loope
add
mov
clc
cmp
xchg
mov
inc
outsb
pop
subl
xchg
out
stc
mov
or
mov
xor
movsl
stos
mov
sahf
add
loopne
repnz
scas
xor
outsb
cmp
popa
jne
es
pop
je
fldt
icebp
fisttps
jae
out
repnz
cwtl
imul
jnp
cmp
inc
or
icebp
out
push
sbb
mov
call
iret
xlat
add
push
mov
mov
sub
shl
add
insl
and
into
inc
mov
jo
cld
outsb
push
lahf
add
dec
pop
mov
sbb
cs
add
jo
jb
cwtl
or
jge
adc
sub
adc
pop
dec
cmp
ret
lods
sbb
movsl
cmp
nop
das
unpcklps
jl
dec
js
int3
or
sub
sbb
xorb
push
xor
dec
xchg
lods
and
jle
push
lods
add
jp
push
or
and
xchg
push
enter
push
pop
hlt
push
push
dec
mov
lret
push
and
mov
sbb
inc
ficoms
inc
out
mov
out
js
fs
fcoml
ret
jg
fsubrl
fsub
xchg
inc
mov
xor
xor
movsl
or
je
xor
pusha
or
lret
ret
imul
push
dec
insb
jno
and
jmp
movsb
xchg
ret
pop
add
cltd
mov
cmp
jg
pop
push
xor
lock
daa
cmp
aad
sbb
cmpsb
dec
pop
into
and
jle
sbb
xor
mov
jae
mov
cmp
int
mov
aas
scas
mov
jmp
stc
out
out
pop
sbb
jno
sub
imul
arpl
lea
cmp
push
imul
pop
mov
lahf
les
dec
xchg
enter
jmp
mov
repnz
pop
xchg
inc
and
sub
mov
add
jnp
aaa
rorl
mov
add
jl
repnz
push
or
fs
hlt
jnp
cmp
mov
cmpsl
jmp
xchg
xchg
sti
andb
or
aam
test
fs
daa
jl
fmull
stos
les
pop
mov
fwait
jno
and
pusha
lock
movsl
xchg
pop
sbb
push
pop
pop
cmp
pop
lcall
mov
imul
mov
mov
push
ror
in
xchg
lcall
outsl
aad
fsubs
adc
stc
ret
lods
pop
shlw
negl
and
jae
lret
mov
cltd
in
cmc
and
rclb
adc
pushf
or
push
push
pop
sbb
add
dec
mov
out
cmpsb
xchg
cs
mov
pop
adc
pop
sbb
xchg
push
repz
push
fstpt
add
aas
cmpsl
addl
jge
or
imul
cmp
pop
lods
rol
andl
movsb
xorl
push
dec
sahf
cmp
stos
mov
in
xchg
cmc
xchg
cmc
add
and
scas
jmp
cmp
test
cmp
ds
or
pop
fistpll
add
and
pop
jb
movsl
cwtl
repz
mov
gs
sarl
sbb
and
push
dec
adc
les
push
add
sub
push
mov
imul
testb
fnop
push
lods
hlt
ficoml
test
cmp
push
pushf
into
repnz
inc
dec
xchg
jb
mov
inc
and
lods
push
jne
mov
mov
adc
jmp
sub
stos
mov
in
xchg
pop
add
lds
inc
popf
cli
fimuls
or
and
out
jl
out
or
testb
bound
and
icebp
cmp
popa
inc
xor
xor
ljmp
movsb
fstpl
jmp
pop
decb
mov
shl
lea
aaa
loop
and
in
repz
xchg
cmp
stc
aas
imul
icebp
loopne
mov
or
pop
push
xchg
sub
out
push
ljmp
and
enter
orb
and
xchg
test
push
add
scas
sbb
or
inc
lret
add
cmp
test
xchg
xchg
les
or
bound
in
jne
lahf
jle
daa
ss
sub
jg
adc
add
pusha
in
and
mov
ja
les
fidivl
xorb
mov
push
iret
in
out
dec
mov
jo
js
inc
inc
stos
inc
xchg
ljmp
repnz
sahf
or
inc
jecxz
out
mov
shr
loopne
mov
imul
cli
loope
rol
test
cltd
stc
mov
xchg
sbb
mov
adc
xor
shrb
sub
repz
inc
shll
pop
jo
mov
cli
mov
push
lds
mov
xor
push
orl
daa
cmp
bound
sub
jmp
and
js
addr16
fsubl
push
fiaddl
inc
jmp
pop
mov
adc
pop
inc
loopne
imul
fcos
fldcw
sub
or
movsl
testl
subb
mov
imul
out
gs
mov
faddl
ret
or
jge
xor
pushl
subl
popa
xor
in
mov
lret
jbe
sbb
jnp
jno
pop
mov
push
mov
popl
es
std
mov
das
adc
cmp
lea
xlat
adcl
mov
testl
mov
repnz
repz
mov
flds
fs
push
fnstsw
fnstcw
sbb
fsubrp
xchg
xor
pop
test
mov
loopne
jbe
je
pop
push
pop
sub
popa
sbb
popf
test
xlat
mov
mov
mov
pop
lret
pushf
outsb
sahf
mov
jbe
repnz
sub
sub
enter
cmp
idivl
adc
push
lock
repz
mov
cmp
test
sbb
ret
cmp
xchg
cmp
mov
push
lds
jb,pt
into
clc
and
int3
push
lods
and
cmpsl
mov
mov
pop
push
or
lcall
adc
std
cmpsl
jecxz
dec
loopne
pop
mov
test
rclb
shl
mov
add
xchg
pop
or
ds
fs
xchg
and
imul
hlt
sbb
mov
adc
sbb
imul
ss
mov
ss
xlat
xchg
xchg
push
mov
push
call
out
clc
clc
dec
cmpb
xchg
jp
ficompl
jnp
mov
lret
xchg
in
daa
add
and
mov
sahf
adc
mov
iret
push
adc
and
pop
movsb
callw
sub
in
mov
fsts
adc
push
bound
and
mov
sub
inc
sbb
shll
jae
loop
mov
bound
mov
cmpl
dec
orb
inc
pop
imul
jno
xlat
mov
sub
xchg
ljmp
fistl
and
into
mov
mov
jmp
in
rcrl
outsb
inc
xlat
xchg
rorl
pop
je
adc
adc
sti
cmpsb
cmp
sub
fimuls
xor
push
inc
leave
mov
xchg
mov
dec
fcmovb
sub
mov
insb
adc
push
cld
lcall
popw
scas
leave
or
or
dec
add
jne
js
aam
inc
add
addr16
xchg
lcall
jno
jecxz
sub
fwait
outsb
lea
mov
ss
and
mov
dec
mov
jo
dec
jl
inc
mov
lds
or
mov
test
call
repz
icebp
int3
das
lcall
jmp
stc
mov
loop
jb
addl
es
jg
mov
adc
cmp
mov
std
jle
scas
pop
pop
cmp
nop
in
jnp
std
mov
xchg
add
jne
jl
inc
inc
add
xor
mov
xchg
inc
into
add
jg
mov
and
test
loopne
cs
cmc
add
inc
hlt
mov
sub
leave
lea
mov
inc
ja
mov
mov
test
mov
xor
clc
into
xchg
push
or
lock
movsb
fwait
dec
mov
cmp
sub
mov
dec
fisttpl
cld
andb
pop
je
dec
and
repz
or
sub
jp
rorl
mov
pusha
inc
movsb
lds
leave
stos
lret
rcrb
outsl
or
add
xchg
roll
mov
loop
outsl
jl
lret
push
push
pop
pop
inc
pop
mov
ds
rol
mov
xchg
imul
add
adc
jp
out
movsb
into
insb
ret
popf
mov
cld
dec
mov
movsl
pop
cmc
mov
scas
inc
pop
addr16
repnz
sbb
mov
ss
dec
ret
inc
cli
into
cli
mov
pushf
lods
adc
fistpl
cld
in
mov
std
lcall
movsl
push
jge
rol
repz
push
out
mov
out
in
cmpsl
into
pop
inc
push
aad
mov
or
lods
mov
dec
mov
push
lods
and
dec
out
bound
arpl
pop
enter
mov
sbb
jge
push
inc
add
loopne
fxch
icebp
mov
stos
mov
sub
rorb
test
or
cmc
mov
push
push
outsl
mov
lea
cmp
push
iret
leave
push
jle
dec
rcrb
sub
aad
xchg
lret
fdivrs
or
lock
sarb
mov
sub
fmulp
sbb
mov
sahf
mov
scas
rorb
outsl
inc
psubsw
js
mov
xchg
inc
jge
into
ret
in
pusha
push
test
mov
sbb
aad
imul
dec
add
ja
orb
movsb
fs
mov
fbstp
mov
mov
dec
adc
inc
insb
stos
rorl
leave
push
ficoml
aaa
inc
mov
push
mov
ret
jns
ljmp
inc
mov
add
pop
add
push
add
or
not
dec
adc
data16
jp
push
and
inc
push
xchg
scas
or
jg
push
dec
aad
pop
ja
insl
pop
jmp
fucomi
jle
and
or
mov
sbb
cmp
or
fs
mov
cltd
add
cmp
sub
xchg
fsubr
clc
mov
add
cmp
jle
dec
std
shll
and
sub
into
sarl
out
cwtl
leave
pop
pop
pop
xor
outsb
push
lds
add
push
cmp
push
sub
cmp
repz
bound
pop
sarb
ss
xchg
lahf
in
xor
jns
js
mov
popf
lea
sbb
test
pusha
push
or
and
andl
inc
repnz
lcall
sbb
jb
jae
adc
mov
pop
sarb
push
xchg
adc
xchg
or
xor
push
ja
ds
rep
mov
jno
shl
test
push
sbb
xchg
cmp
cmp
movsb
jl
mov
jp
fsin
push
pusha
arpl
icebp
inc
adc
mov
mov
test
cmp
inc
xor
inc
pop
dec
xchg
fsts
pop
cmc
loop
paddd
jecxz
add
sbb
push
pop
sbb
cmovp
dec
ljmp
mov
mov
test
mov
mov
mov
push
mov
mov
std
mov
ja
loopne
cmpsl
fistpll
dec
lret
push
into
cltd
cltd
push
push
dec
mov
xchg
fadd
dec
jno
out
add
lret
movsb
sbb
enter
xchg
je
jg
insl
in
fists
inc
jbe
fdiv
cmp
scas
jmp
cmpl
dec
loope
test
pop
mov
pop
pop
bswap
les
jge
mov
into
outsb
mov
sbb
insb
inc
lahf
lret
orl
or
call
aam
and
into
dec
push
cmp
cmp
sbb
inc
outsb
inc
loop
adc
sub
cmpsl
gs
mov
dec
sub
cmp
cmp
pop
xor
icebp
lret
mov
cmp
inc
nop
mov
js
arpl
fwait
in
in
imul
inc
jbe
aas
sahf
mov
into
push
test
adc
mov
test
punpcklwd
fwait
mov
mov
xchg
mov
sub
test
pop
insl
mov
adc
xchg
lods
mov
push
cmp
add
lret
pop
dec
cmp
lock
stos
jmp
adc
jb
enter
dec
imul
push
inc
jnp
and
xor
pusha
ret
lods
add
test
out
shrb
pushf
mov
cmp
xorb
xchg
xchg
iret
ja
jg
test
cmp
ljmp
cmp
adc
rorb
inc
lcall
daa
data16
sbb
adc
xor
imul
mov
push
stos
aam
sub
jge
aad
sub
test
je
mov
cld
dec
fadds
fs
sub
aas
adc
fildll
xor
push
and
loope
xor
in
jp
inc
or
mov
addr16
pop
push
stos
out
cmp
pop
jo
push
shll
lea
stos
pop
sbbl
popa
test
dec
adc
ljmp
jnp
push
imul
rcrb
lahf
ds
lea
cmp
push
lock
jmp
adc
or
pushf
mov
je
mov
jno
adc
rcrb
push
shrb
pop
fildl
pushf
add
fwait
xchg
idiv
xchg
mov
test
jge
fucomi
push
hlt
rclb
lods
mov
push
push
jb
push
pop
idivl
loop
mov
int3
fsubl
jno
aam
sub
jnp
and
add
rcrb
cmp
scas
mov
adc
adcb
push
xchg
mov
lea
andb
hlt
pop
push
daa
xchg
pop
nop
xlat
push
in
mov
pop
sub
mov
pop
mov
jns
cmp
mov
add
daa
mov
jp,pn
sub
push
inc
mov
jbe
xor
xchg
sbb
test
lods
mov
out
xchg
popf
sub
ja
or
nop
std
xchg
push
dec
aam
sbb
dec
insb
loop
cvtpi2ps
iret
mov
xor
cmpsl
mov
mov
incl
lret
inc
dec
shrb
ljmp
inc
mov
sar
add
sub
in
or
cmpl
add
mov
mov
mov
call
pop
adc
stos
adc
mov
sahf
cmp
inc
or
ret
inc
pop
or
ds
add
adcl
fdivrs
or
bound
lods
dec
in
xor
mov
sub
pop
andl
js
jl
repnz
lcall
inc
insb
leave
adc
mov
shrl
out
mov
jle
push
je
pop
inc
adc
push
lret
dec
xor
mov
out
iret
daa
lods
clc
dec
sub
xchg
test
mov
cmp
pop
popf
xchg
out
into
gs
mov
sbb
lahf
inc
inc
or
loopne
push
push
loopne
shll
in
xor
jle
adc
cs
fstpl
aad
mov
push
sarl
mov
lea
add
call
out
stos
jp
inc
sub
xchg
cld
adc
xor
daa
mov
in
arpl
mov
cmp
jmp
andb
xor
sub
into
pushf
insb
ljmp
int3
notb
sbb
dec
dec
jb
lcall
mov
popa
jo
jge
mov
pop
call
rcr
mov
popa
sbb
cwtl
fstl
hlt
pop
cmpsl
pop
pop
mov
insl
fsubrp
mov
mov
dec
or
ljmp
push
xor
insb
lea
daa
das
sub
mov
push
mov
rcrb
test
popa
xchg
aam
jnp
inc
sbb
cmp
call
stos
enter
pop
mov
cwtl
mov
xor
nop
in
or
int3
lret
test
jmp
push
pop
sbb
xor
stc
adc
sbb
push
sbb
xor
mov
lcall
lret
rolb
add
int3
xor
jp
xchg
mov
pop
jo
sbb
pop
xchg
sub
leave
mov
and
push
ss
ficomps
jnp
andb
add
jp
shr
int
xchg
jecxz
dec
rol
mov
movsl
sub
jg
push
jl
iret
cmc
bound
jo
out
repz
aaa
pop
add
cmp
arpl
lahf
cltd
daa
ljmp
fdivs
xchg
mov
int
out
ret
mov
adc
xlat
in
cmp
sbbl
jae
xchg
dec
xor
mov
jns
mov
sbb
mov
dec
test
aam
and
leave
add
push
jp
psllw
xor
adc
push
jmp
ja
fisttpll
cmc
inc
insb
xchg
je,pt
mov
out
push
shll
mov
sub
les
mov
jbe
adc
mov
xchg
and
repnz
stos
pop
xchg
inc
sti
jp
xor
xchg
cs
adc
lcall
pop
mov
jb
aam
cmpsl
loopne
mov
push
aaa
out
clc
arpl
xchg
push
mov
into
std
lock
mov
sti
andb
repnz
inc
out
xor
loop
mov
pop
js
nop
clc
fs
mov
dec
loope
jne
cmp
mov
in
pop
jge
xchg
dec
dec
outsl
fisubrs
adc
fcoms
out
sub
push
jb
mov
mov
cmp
das
cmpsb
jp
mov
mov
mov
xor
in
ficomps
cs
pop
pop
sbb
push
data16
mov
int
add
mov
mov
or
xor
dec
adc
jp
cmc
or
pushf
sbb
push
pop
mov
lock
push
jb
xchg
call
imulb
sub
pop
shlb
andl
lret
shlb
cmpsb
mov
xor
inc
clc
cltd
test
and
dec
outsb
lock
dec
push
clc
mov
xchg
cmp
lret
call
lods
aad
ja
clc
push
and
adc
xor
addr16
mov
inc
sbb
addb
rorl
add
in
xchg
sub
mov
pop
dec
in
pop
addl
cmp
push
stos
gs
dec
push
orb
jnp
dec
mov
mov
push
xor
xor
cmp
jbe
jns
adc
out
ljmp
lret
inc
cmp
pusha
jle
mov
int3
mov
sti
movsl
cld
les
pusha
cmpsl
sti
shrl
dec
jbe
lret
aam
add
mov
imul
scas
popa
or
xchg
lods
cmp
xor
jecxz
mov
out
das
lds
or
dec
sub
and
stos
mov
ljmp
aaa
lock
pop
jns
push
sub
xchg
xor
cs
dec
rcr
dec
and
mov
push
pop
xor
mov
xchg
inc
stos
idivl
push
in
mov
and
iret
inc
int3
lods
es
dec
cs
sti
dec
test
mov
out
xor
add
in
dec
movsl
fwait
gs
popa
fistpl
movsl
dec
hlt
in
jns
xor
xor
xchg
ficompl
mov
jl
and
xchg
mov
aam
inc
sbb
bndldx
gs
xchg
ret
mov
push
push
insb
movsl
stos
inc
pop
pop
pushf
push
cmp
sbb
add
dec
popa
call
imul
cmpsl
shr
or
ja
push
jns
and
sbb
mov
int
xor
sub
sbb
xor
add
mov
ljmp
add
jmp
cmp
jo
xchg
cmpsl
dec
and
sarb
outsb
icebp
in
add
or
inc
sub
mov
fdiv
inc
sbb
or
mov
jecxz
jnp
fsts
sub
icebp
dec
or
aaa
sbb
mov
mov
sbb
in
sbb
into
test
push
outsb
imul
xor
jae
and
subb
loope
sbb
xor
les
std
leave
xor
orps
test
stos
sub
in
mov
test
adc
lods
mov
or
scas
adc
adc
add
sub
arpl
and
in
stos
mov
adc
xchg
xchg
cmp
fwait
xchg
andl
sub
stos
mov
add
enter
les
cwtl
shll
insb
outsl
mov
jmp
clc
mov
mov
cmpsl
adc
negl
lcall
test
lods
add
int
lock
insl
inc
add
hlt
inc
adc
jg
or
jo
mov
into
arpl
push
sbb
leave
sbb
arpl
mov
dec
fs
iret
mov
or
loope
aam
fwait
aas
fiadds
shrb
push
xchg
pop
jmp
adcl
mov
test
pop
in
ljmp
mov
pop
jne
sbb
sbb
in
jns
test
addl
push
leave
maskmovq
imull
push
loopne
outsl
add
push
mov
out
jp
lret
mov
iret
jge
xchg
xor
pop
stos
ret
lods
sub
fsubrl
stc
dec
call
or
jmp
lahf
ljmp
int3
sahf
sbbb
push
lods
cld
pop
mov
es
xchg
pop
es
nop
push
jmp
insl
ret
mov
fdivs
imul
mov
data16
aam
sbb
movsl
test
fstpt
das
cld
aad
cmpsl
adc
push
sbb
mov
fwait
iret
test
rcrl
adc
and
inc
xor
push
sub
enter
aas
cmp
lret
add
aad
inc
rcrb
out
push
xchg
cmpl
push
add
xchg
cmc
lcall
jb
iret
into
clc
xor
testl
dec
js
add
outsl
inc
es
ss
jmp
adc
into
mov
iret
xchg
cmp
xor
dec
aad
les
dec
sbb
sub
lahf
es
xchg
clc
push
jnp
js
dec
jg
cmp
xchg
imul
fcomp
sub
dec
ja
cli
mov
test
bound
push
inc
idivl
loopne
std
ss
fidivl
mov
jb
movsb
or
lret
add
movsb
enter
cld
dec
popa
push
subl
insb
add
addr16
out
add
and
sub
lock
test
jae
inc
xchg
jmp
roll
iret
in
mov
xchg
orl
mov
inc
imul
ss
xchg
loope
mov
cld
sbb
lods
sbb
xchg
cmp
mov
push
mov
xor
mov
sbb
pop
mov
lcall
add
stos
dec
add
xchg
pop
push
lods
lret
fnstcw
pop
sbb
mov
scas
push
jnp
jbe
cltd
mov
out
sahf
jnp
outsl
out
xlat
xor
lods
gs
andb
push
aad
jno
fcoms
cmpsb
sub
test
pop
sbb
and
dec
test
ja
pushf
in
push
cmp
adc
lods
lahf
pushf
xchg
or
add
add
stos
mov
dec
aad
mov
xchg
xchg
cmpsb
cmp
jp
dec
rclb
ljmp
adc
loop
dec
push
out
jns
out
cmpsl
push
ljmp
mov
dec
int3
xor
mov
mov
cs
or
push
popl
or
sbbb
xor
adc
shll
xchg
enter
and
lock
xlat
rcr
pop
sub
mov
int3
jnp
jae
mov
add
push
mov
loope
cmp
popa
in
mov
ljmp
insl
subb
out
sarl
imul
mov
pop
out
pop
sub
stos
pop
mov
div
pop
cltd
loopne
sbb
mov
and
lds
loope
movsl
inc
lds
cmp
insb
xchg
dec
push
cli
push
icebp
xchg
enter
testb
jo
pusha
xchg
decb
add
int3
mov
jae
add
arpl
imul
out
pop
insb
pop
or
cmpsb
scas
lds
sub
outsl
and
and
loopne
xchg
stos
and
inc
jg
pop
in
ljmp
fwait
es
xchg
and
cmp
test
lahf
dec
xor
adc
mov
in
add
clc
imul
lahf
cltd
aas
push
inc
into
pop
clc
or
cmc
xchg
out
or
loope
mov
dec
and
nop
dec
sub
lret
rorl
fnsave
jp
sub
mov
rorb
xor
sbb
bound
mov
push
ljmp
ja
repnz
mov
inc
loop,pn
lods
jae
movsl
cld
add
movsl
adc
sub
loope
push
sub
push
add
stc
dec
mov
cmp
push
cmp
into
jg
movsl
and
stos
jl
testb
xchg
jg
inc
jnp
or
xor
hlt
dec
jg
outsl
xor
nop
sbb
in
push
popa
cmc
jecxz
xchg
xor
mov
repz
push
in
jmp
ljmp
push
xor
jbe
cli
sub
cmpsl
push
les
gs
roll
mov
sbb
inc
inc
mov
xchg
sub
fwait
pmulhuw
mov
inc
mov
pop
sub
xor
jno
mov
scas
aam
aas
jecxz
fisubl
jb
data16
and
es
and
cmpsb
jnp
stc
popa
je
inc
loop
mov
mov
stc
mov
dec
pop
scas
sahf
loopne
push
sub
dec
imull
insb
sarb
mov
cld
pusha
nop
lods
icebp
inc
addr16
adc
mov
pop
movsl
dec
jmp
lds
imul
dec
jle
cltd
pop
dec
sbb
dec
test
sti
xchg
sub
sbb
test
sub
lock
xorl
lcall
addb
dec
xor
add
adc
mov
fsubrs
and
stc
mov
mov
fstp
enter
pop
jp
cmpsl
dec
push
aaa
jp
add
mov
mov
mov
sub
aas
inc
mov
rcrb
mov
loope
mov
repz
jg
scas
mov
in
mov
aaa
xchg
inc
cmp
sti
fwait
out
mov
xor
push
add
out
sbb
cmp
stos
sbb
push
ret
cmp
notb
ja
add
hlt
jns
mov
dec
push
imul
pop
or
cltd
add
ds
pop
popf
xchg
mov
mov
mov
sub
or
adc
push
inc
cmovnp
addl
jne
cmp
fimuls
popf
sbb
xor
repz
xor
popa
jecxz
lock
adc
out
daa
pop
popf
dec
or
jb
repz
jns
pop
mov
push
and
jmp
test
push
mov
lea
stos
jb
mov
pop
push
roll
cmp
mov
and
pop
jb
add
stos
cmp
xchg
scas
mov
xor
lock
pusha
mov
xor
les
outsb
loop
movsb
sbb
div
addl
les
sbb
into
call
int
pushf
cmpsl
dec
popa
pop
pop
sub
rcr
fisubs
insl
lea
inc
sub
and
inc
mov
test
int3
sarb
daa
pushf
and
cmp
orl
mov
mov
inc
push
lods
shll
cld
outsb
in
lret
push
jg
add
mov
mov
test
es
es
cmp
enter
cmp
xor
adc
lods
int3
mov
ljmp
test
aas
inc
movsb
cmc
rsqrtps
cwtl
xor
bound
pop
scas
lds
and
shll
xor
nop
mov
mov
out
aad
test
pop
and
jmp
movsb
or
add
mov
cwtl
jo
or
aad
lock
movsb
gs
pusha
lahf
addb
movsb
filds
loopne
cmp
push
mov
ja
into
sub
lock
xor
sub
dec
or
push
dec
fs
add
sbb
gs
xor
xlat
mov
ss
add
fbstp
dec
ljmp
sub
lock
jl
jge
test
xor
out
mov
xchg
or
out
aad
push
dec
addr16
lods
nop
jae
dec
pop
pop
dec
mov
pop
jno
sbb
inc
jb
xchg
movl
sbb
adc
or
mov
push
or
imul
pusha
or
sbb
inc
cmp
inc
imul
test
xor
mov
jle
mov
fnstcw
push
aas
mov
add
sahf
xchg
imul
pop
jo
mov
adc
cmp
movsb
enter
sub
xchg
xchg
popa
int3
out
push
scas
sti
xchg
push
xor
iret
fistps
cmc
fs
fs
inc
rorb
push
int
add
dec
pop
pop
jmp
xchg
cmp
cli
stc
jle
xor
xchg
dec
dec
repz
sub
mov
dec
cmp
orl
les
roll
or
fbld
push
mov
mov
jbe
jmp
push
dec
stc
insb
adc
mov
repnz
test
clc
mov
in
add
xchg
into
popf
and
out
jbe
jae
jp
dec
pop
in
stos
outsl
xlat
xor
push
rcrb
or
movsb
lea
jo
cli
mov
push
xchg
int3
scas
lds
push
pop
fwait
xchg
fimull
mov
or
dec
or
cmpsl
sub
leave
pop
inc
sub
sub
lods
scas
add
push
popf
rol
add
call
sub
adc
push
xor
push
jae
inc
add
mov
xor
sbb
outsb
sub
jg
or
mov
ja
bound
push
push
xor
movb
cli
xor
mov
dec
shrl
loopne
sahf
fcomps
mov
mov
dec
xor
outsb
xchg
insl
xchg
cli
call
sar
xor
dec
push
mov
es
mov
into
fldl
mov
mov
or
call
movsb
push
das
and
stos
mov
push
cmp
or
inc
fstpl
fsubrs
and
js
test
insb
mov
out
push
push
in
add
mov
and
fwait
repz
andb
mov
sub
push
aaa
mov
enter
bound
cmpsb
ficoms
call
lret
cmp
push
sbb
ds
cmp
test
roll
aad
repnz
inc
not
or
xor
cmc
push
push
sbb
mov
jecxz,pn
pop
lret
das
decb
ret
rolb
dec
aad
jne
xor
in
shr
mov
jns
ljmp
sub
in
fwait
rol
xchg
dec
mov
push
dec
pop
and
test
add
test
add
pushf
fstl
or
sarl
xchg
push
mov
xlat
or
mov
sub
cmp
xchg
push
adc
mov
inc
movsb
testl
fisttpl
pop
nop
sub
mov
xchg
out
fldl
push
stos
mov
fdivs
loope
mov
mov
push
pop
push
loop
mov
repz
mov
iret
inc
mov
mov
sarl
fldt
jb
icebp
pusha
jl
xchg
shlb
sbb
pop
sahf
or
inc
mov
es
lock
dec
mov
or
pop
in
cld
mov
jae
cmp
ds
ja
jmp
add
ja
shl
push
xchg
xchg
out
cli
ficoml
das
cs
dec
cmpsb
inc
or
pop
adc
adc
dec
popa
mov
stc
inc
dec
inc
push
add
imul
pusha
mov
sub
mov
mov
inc
roll
ss
mov
ret
push
cmp
ret
mov
aaa
adc
mov
mov
and
sti
xchg
mov
cltd
mov
stc
cli
cmpsl
push
js
mov
movsl
and
repz
arpl
cmp
cmp
insb
pop
mov
xor
xchg
or
xchg
insl
out
xlat
popa
int
and
add
mov
stos
push
jo
lret
sub
scas
sahf
and
xor
aam
andb
icebp
in
mov
sub
xchg
jge
mov
add
jb
hlt
sbb
cwtl
test
mov
lcall
lret
stos
push
push
lret
push
shl
int3
inc
push
les
pop
inc
pop
lahf
push
stos
jns
push
cmpsl
or
addr16
mov
cwtl
shrb
test
inc
nop
mov
data16
dec
sub
xchg
divl
test
xchg
aas
cmpsb
movsb
pop
or
sub
and
mov
and
pop
add
imul
inc
not
inc
add
xchg
in
cwtl
mov
inc
jae
ss
mov
dec
sbb
inc
mov
daa
xor
mov
into
sar
and
cmp
cmp
inc
dec
adc
shrb
call
inc
sbb
outsl
inc
and
jbe
and
jne
mov
push
inc
mov
jae
fistpll
out
mov
inc
cltd
mov
sbb
stos
shr
push
or
jl
or
lret
inc
movsb
xchg
pop
adc
cmp
inc
or
push
cltd
cwtl
shr
popf
pxor
icebp
insb
or
jp
mov
movsb
jo
repnz
cmp
push
int3
adc
bound
xchg
or
jae
shr
jo
lret
in
inc
lea
pop
stos
sbb
pop
je
push
xor
dec
jno
inc
cli
movb
sbb
fwait
sub
sub
xor
push
int
lea
mov
and
adc
test
jl
pop
mov
andb
xchg
fcmovbe
mov
jp
dec
fdivrl
std
lock
mov
roll
clc
and
xor
fadds
sbb
ljmp
es
sub
addr16
sbbb
pop
fstp
mov
fmuls
sti
add
pushf
adc
ret
iret
sbb
cmp
mov
mov
xor
dec
or
mov
in
dec
mov
enter
std
cmp
inc
mov
mov
int3
stos
jbe
cltd
in
jb
xchg
stos
sub
sbb
add
push
imul
stc
cmc
mulb
xor
and
jmp
and
ret
pop
xchg
push
mov
cwtl
mov
fimull
lods
popf
sub
mov
pop
adc
notrack
jb
add
pop
or
les
jns
adc
movsl
sbb
xor
sbb
iret
push
xchg
xchg
movsl
loopne
lahf
jb
hlt
decb
lock
mov
mov
sbb
arpl
mov
outsl
insb
nop
add
kmovw
cmpsb
fdivrl
sbb
lret
sub
mov
push
pop
stos
mov
cwtl
sbb
scas
adc
jae
std
fisubrs
push
mov
mov
test
mov
shrl
push
adc
jb
pushf
cltd
sbbl
pushf
xchg
jns
sbb
and
les
lods
sbb
shrl
mov
repz
inc
aaa
repnz
sub
push
mov
cmp
xchg
sub
xchg
inc
xabort
lock
pusha
jmp
mov
sub
xchg
sbb
int3
stos
loop
add
jg
add
jg
sbb
jmp
push
fldenv
fwait
pop
outsb
and
movsb
add
cmp
mov
int
cmc
lods
lret
add
stos
addr16
inc
scas
push
in
cs
mov
or
push
jnp
pop
xor
pop
add
out
lock
mov
movsl
scas
aad
xchg
push
add
in
and
add
push
outsl
xchg
popf
push
clc
mov
jb
cmp
cmp
mov
dec
mov
inc
pop
lret
stos
push
das
dec
mov
cmp
mov
and
xchg
xchg
push
gs
fdivr
mov
or
pop
sbb
arpl
mov
mov
jp
in
cmp
add
outsl
mov
fucomip
dec
movsl
push
rolb
mov
lahf
addr16
scas
and
or
or
mov
cmp
sbb
inc
sahf
push
loope
jle
enter
cs
fidivs
test
out
push
jnp
mov
pusha
push
cs
sub
lods
in
mov
lds
and
xlat
pop
sub
popf
dec
push
insl
xchg
cwtl
mov
lahf
push
test
stos
enter
push
pop
mov
cmp
in
rcr
leave
scas
or
jo
xchg
sbb
in
lret
je
stos
sbb
nop
pop
scas
test
cs
adc
je
and
scas
into
push
pop
mov
insl
fs
or
int3
jns
push
in
xchg
add
sub
mov
mov
pushf
out
aaa
mov
imul
fsqrt
loop
cmp
jecxz
arpl
mov
and
fistpll
jb
sti
mov
mov
shlb
xchg
scas
sub
push
xlat
icebp
xlat
int3
xchg
add
pop
rorl
xor
loop
jle
jnp
fists
aaa
cmp
jne
iret
movsl
push
xchg
pop
dec
in
adc
jb
stc
sbb
sbb
in
xor
cli
sti
dec
add
inc
nop
cmp
mov
and
xlat
adc
dec
cmc
jb
js
addr16
xor
jmp
or
test
imulb
ljmp
sbb
sub
outsl
movsl
lock
pop
ds
jg
clc
cli
jns
push
or
mov
popf
fcomps
sbb
add
loopne
stos
rcll
dec
ljmp
in
aad
ret
push
pop
adc
jns
adc
mov
fwait
lcall
sbb
xor
in
fs
push
mov
jno
cmpsb
adc
xor
xor
hlt
xchg
jge
testb
out
mov
add
adc
loop
cmp
xchg
push
mov
jmp
mov
mov
mov
add
stc
pusha
cli
jne
es
inc
push
xor
dec
add
ret
stc
mov
loop
cmp
pop
out
push
fsts
dec
push
lret
jns
jne
lds
mov
call
mov
sub
repnz
push
cwtl
aaa
out
pop
ret
sub
push
fcos
push
xchg
jae
adcl
daa
shl
adc
mov
test
lods
dec
mov
frstor
dec
pop
ficoms
push
lock
aam
mov
add
je
dec
ucomiss
and
sub
mov
adc
cmpsb
pop
push
pop
push
jge
xor
cld
mov
or
into
cmp
fidivl
pop
xor
fildl
cltd
adc
pop
daa
inc
push
dec
cmc
loopne
and
and
sbb
sub
mov
pop
fistps
xchg
incl
jno
test
xchg
movsb
adc
imul
mov
ficoml
repnz
dec
sub
ss
dec
ljmp
pop
inc
dec
pop
insb
cs
pushf
adc
sub
dec
rcr
sbb
mov
or
push
mov
addr16
dec
movsb
sub
sbb
fstpl
movsb
sbb
sub
sbb
pop
and
iret
sub
xlat
cmp
icebp
js
loopne
jl
pop
ss
repz
scas
push
je
mov
dec
lret
mov
cmp
xor
cld
outsl
aam
fisubs
shrb
mov
fimuls
leave
mov
push
scas
jns
xchg
jne
incl
jg
test
leave
ds
cld
dec
mov
hlt
pop
lret
dec
lock
loope
out
repz
push
adc
xor
repz
shlb
cs
shrl
ja
jp
jp
loop
stc
inc
or
add
scas
adc
addr16
adc
jmp
inc
cltd
in
jae
pop
mov
sbb
mov
mov
jl
cmovg
mov
jns
adc
push
in
repnz
jl
aaa
add
dec
fadds
jge
cmp
sub
hlt
pusha
jmp
insl
or
inc
loope
mov
rclb
adc
das
fs
sub
sub
mov
outsl
add
sbb
push
mov
sub
xchg
stos
movsb
xor
dec
mov
inc
clc
add
in
sbbb
repz
int
iret
jbe
inc
ret
sub
add
cmp
movsl
mov
bswap
mov
loop
fstl
xlat
or
or
jle
outsl
mov
subb
in
sbb
outsl
mov
push
shrb
es
gs
xchg
clc
or
mov
adc
inc
iret
jno
dec
aad
adc
jg
rorl
es
stos
mov
jnp
cmp
add
cmpsl
mov
shl
add
pop
jmp
outsb
sti
xor
stos
push
cmp
lret
pop
push
sarb
lds
jo
cmc
or
inc
jl
dec
push
push
popa
adc
sbb
and
dec
add
aam
lret
xchg
xor
dec
xchg
das
in
inc
dec
or
add
leave
xor
push
lock
sbb
push
mulb
cmp
push
mov
xlat
pop
pop
xchg
mov
mov
popa
int
xchg
mov
daa
pushf
adc
loop
xchg
test
mov
or
fnstsw
fsubrs
popa
mov
daa
mov
lods
aas
pop
cli
icebp
in
push
fnstcw
xchg
movsb
push
xor
mov
repz
daa
dec
sub
add
pushf
xchg
dec
or
mov
adc
jb
push
jno
or
imul
xor
lods
dec
out
addr16
mov
fildll
dec
es
mov
jns
hlt
pop
imul
mov
cmp
jb
jae
sbb
pop
cmc
pop
mov
cli
loopne
cmp
push
rcl
mov
lods
imull
xchg
jecxz
call
adc
loope
icebp
stos
inc
mov
xchg
mov
xlat
aad
je
lds
cmpsb
arpl
gs
idivb
mov
or
pop
ja
mov
rcl
lock
dec
push
jns
clc
sbb
loop
jg
jbe
ret
and
inc
movsb
in
out
push
lcall
pop
push
mov
mov
sub
lock
and
cltd
js
fstpt
mov
test
int
out
lock
xor
xchg
jle
xor
fisttps
sarl
and
mov
xor
test
xchg
cmp
xor
movsl
jne
inc
dec
aaa
or
call
mov
aas
xchg
daa
movb
mov
inc
leave
push
cmc
sub
outsl
pop
xchg
sub
push
dec
adc
pop
incl
sub
cld
and
jp
movsl
xchg
sbbb
pop
rorl
sbb
dec
out
loopne
enter
dec
pop
lds
jno
loop
addr16
mov
dec
jge
xor
xchg
push
jns
dec
fldl
push
scas
popf
test
subl
imul
push
push
stos
aad
mov
add
push
mov
xchg
add
in
adc
sarb
mov
js
sbb
xchg
sahf
and
aam
mov
mov
ret
push
push
xlat
in
lea
pop
lods
xor
push
xchg
cwtl
out
pusha
jae
or
fs
mov
shlb
xorb
ljmp
jae
out
sub
or
jo
pop
adc
jge
jne
mov
cltd
sbb
faddp
add
push
inc
into
pop
pusha
and
shll
mov
lahf
test
out
add
sub
pusha
rorb
pushf
clc
popf
mov
test
insb
xchg
repnz
int3
into
xchg
adc
cmpl
lea
aam
mov
mov
and
adc
mov
imul
or
push
cwtl
mov
fcoms
mov
sahf
shl
out
push
inc
inc
or
pop
xor
dec
pop
arpl
xchg
dec
call
scas
test
imul
add
cli
or
roll
push
jbe
leave
out
bnd
xchg
jg
jns
or
clc
cmpsl
into
mov
mov
dec
sbb
sub
inc
adc
pop
mov
orl
cld
mov
outsl
inc
pop
mov
arpl
jns
test
sbb
subb
sub
adc
pmullw
xor
xor
mov
insl
imul
arpl
outsb
imulb
in
icebp
out
fcmovnu
jb
fstps
add
lahf
cmp
popa
lahf
pop
lea
or
adc
xor
xchg
scas
and
add
fdivp
and
mov
xchg
xor
jnp
fstpt
jmp
cmc
sbb
xor
add
jg
cmpl
leave
adc
imul
xchg
sub
insl
xchg
push
test
shll
sbb
popa
cmp
pop
leave
idivl
sbb
push
inc
ds
fs
lcall
mov
xor
jno
pop
jge
xchg
adc
lea
aaa
or
in
ret
mov
gs
jae
rolb
js
leave
push
mov
outsb
sbb
and
push
jae
push
aas
pop
dec
mov
pushf
xchg
call
jno
add
adc
or
jmp
mov
adc
adc
jae
in
or
xor
pop
in
shlb
inc
out
in
mov
mov
arpl
lret
pushf
pop
icebp
das
inc
fisubrs
fisubs
insb
test
lahf
imul
dec
lods
jg
mov
inc
fstpt
xchg
sub
scas
clts
pop
sub
dec
dec
jno
xor
xchg
push
mov
inc
and
inc
pop
mov
mov
adc
jg
or
out
int
lods
jp
sbb
in
inc
fisubrs
pop
jb
repnz
jecxz
xchg
inc
test
in
cmp
popa
dec
shll
jl
bound
sub
dec
cmpsb
dec
rorb
lahf
dec
pop
jp
adc
mov
push
cmp
movsb
xor
repnz
jle
rol
mov
xor
repz
sarb
movsl
cmp
add
rolb
inc
mov
in
cmc
out
jb
push
sub
daa
pop
cmp
sub
pop
dec
or
aam
lods
mov
jle
out
sub
or
fdivrl
js
xchg
sbb
adc
addl
out
scas
sub
and
add
stos
pusha
gs
inc
mov
pop
loopne
mov
jne
mov
xor
sarl
mov
sbb
cmp
insl
loop
mov
ror
mov
mov
mov
jbe
inc
inc
cmp
mov
ds
adc
mov
mov
fstl
xor
xor
cmpsl
in
mulb
negl
add
in
es
pop
pop
inc
inc
xor
hlt
jg
inc
cmpsb
push
sub
inc
lret
xchg
loopne
lahf
jmp
and
sub
cmp
xor
movl
xchg
mov
rcl
ljmp
jb
popf
je
out
dec
inc
js
or
lret
xchg
sbb
movb
cmpsl
pop
imul
and
shrb
inc
mov
sbb
add
inc
orl
xchg
or
cmp
inc
lock
dec
or
adc
fisubl
xor
cmpsb
mov
cltd
jb
xchg
lds
inc
add
fistpl
jbe
mov
cmp
ljmp
ja
cmp
push
push
mov
test
jne
add
adc
cmp
mov
shufps
outsl
cld
adc
mov
into
iret
lods
xor
jne
push
dec
je
sbb
icebp
lret
mov
ret
mov
mov
popf
mov
mov
push
pop
iret
inc
jno
xor
inc
stc
or
mov
sbb
inc
sub
jle
js
push
lods
mov
mov
and
inc
sbb
push
loopne
mov
inc
and
jmp
cmp
xchg
mov
lcall
shlb
xchg
pop
clc
adc
movsl
inc
and
ret
pop
mov
enter
std
cmpb
xchg
mov
scas
arpl
js
mov
sbb
repnz
push
sbb
popa
les
in
movsl
fnstcw
rcr
inc
or
arpl
inc
push
pavgw
pop
setae
mov
mov
jmp
mov
xor
mov
test
sub
inc
int3
mov
fisttps
jecxz
push
push
cs
loopne
sub
shr
pop
lock
sahf
sbb
stos
mov
xchg
push
scas
aaa
es
xchg
push
out
sbb
xchg
xchg
adc
sub
loop
outsb
sbb
dec
push
fwait
aas
adc
mov
std
movsl
pop
sub
fcmovbe
cli
loopne
mov
xchg
sub
orb
and
add
cmp
xor
scas
js
and
cwtl
adc
inc
inc
add
adc
mov
iret
sahf
pop
mov
add
popf
dec
sbb
cld
jns
dec
mov
addr16
inc
or
xchg
or
dec
xor
int
movsl
xchg
or
xor
scas
adc
push
cld
lods
xor
fwait
push
sub
adc
adc
int
sbb
add
jle
or
mov
inc
rcrb
ret
xor
jbe
std
pop
test
dec
sub
pcmpgtw
cmc
loopne
ds
jno
mov
push
mov
test
mov
ss
inc
or
mov
in
aas
push
sub
add
and
add
push
fsubl
push
nop
sub
jne
mov
js
or
idivb
xchg
sbb
mov
fcoms
unpcklps
and
jge
jp
cmp
cmp
fwait
sahf
cmpsb
xchg
cmp
cwtl
stos
mov
sub
into
scas
mov
dec
add
and
lcall
add
add
scas
scas
inc
dec
dec
cmp
cwtl
mov
push
jne
add
mov
dec
and
subl
xor
cli
mov
lods
stc
mov
arpl
test
in
cltd
pop
and
cmp
test
jne
inc
out
out
jae
mov
mov
sbb
les
scas
jno
out
jae
pop
pop
les
jbe
pop
sbb
mov
jno
dec
mov
pop
ja
ds
bound
clc
xchg
sbb
dec
aam
or
xor
pop
jecxz
stc
ljmp
test
mov
add
aam
arpl
jb
dec
pop
leave
aad
xchg
inc
dec
shrl
fiadds
xchg
sbb
arpl
dec
ss
sbb
sub
jl
insl
pop
xchg
cmp
scas
or
sti
lock
mov
add
sahf
adc
fdiv
lret
push
pop
leave
cmp
lahf
and
imul
lret
xor
lret
fs
add
xlat
cmp
das
cmp
inc
pushf
dec
push
adc
pop
xor
jb
sbb
test
mov
test
out
jmp
in
out
pop
sbb
and
leave
pop
and
sti
xchg
dec
hlt
cmc
out
dec
sbb
mov
out
out
gs
xchg
adc
scas
iret
dec
or
ljmp
dec
cli
ret
bound
pop
fistpl
xchg
xor
shll
cmp
mov
dec
mov
xor
push
and
lock
mov
pop
xor
jns
adc
out
or
mov
sbb
mov
ficoml
or
lret
in
push
lcall
or
pop
cmp
insb
ja
add
adc
in
xor
or
dec
cmp
push
popa
cld
lret
push
mov
test
push
int
iret
sbb
aam
inc
lret
jmp
push
xchg
repz
and
dec
clc
stos
rcll
mov
mov
pop
mov
out
fisttpl
icebp
inc
dec
dec
sbb
mov
add
jns
inc
cmp
mov
arpl
into
pop
adc
dec
dec
mov
mov
cwtl
lods
int
push
test
mov
adc
fs
mov
loopne
mov
out
into
test
mov
push
sbb
pop
xor
or
cltd
ljmp
sbb
sbb
stc
repz
sbb
aad
cwtl
and
add
js
leave
scas
filds
mov
mov
int3
fldl
ficomps
in
mov
mov
dec
test
test
repz
stc
popl
movsl
nop
mov
fucomip
fdiv
cmp
jb
pop
clc
test
mov
das
andb
into
mov
inc
jb
pop
sbbb
stc
dec
sub
clc
das
ss
sub
cmc
push
inc
aas
pop
sbb
push
clc
pop
jae
cmpsb
mov
adc
mov
jne
imull
test
out
pop
int3
cmpsb
in
cmp
mov
push
and
cwtl
pop
ds
push
fwait
out
pusha
in
jmp
and
fsubs
push
andps
int3
andl
adcb
das
sub
data16
fldl
mov
aas
in
dec
cmp
sbb
mov
adc
xor
xor
add
adc
les
testb
int3
cld
mov
call
or
pop
les
xor
push
mov
ds
mov
mov
loopne
mov
loopne
xchg
push
adc
in
aas
outsb
mov
cmp
hlt
out
inc
sbb
test
ficoms
adc
pop
mov
pop
jge
cmp
hlt
sub
fisubrs
dec
subl
dec
or
dec
adc
mov
fcompl
push
add
mov
jge
fisubrs
sti
out
mov
roll
stos
aas
jecxz
and
lods
iret
stc
or
jge
cmpsb
sbb
aas
pop
into
pop
or
add
and
jg
inc
pop
enter
add
jb
sbb
xor
push
push
mov
ficomps
add
push
negb
in
mov
mov
adc
sub
data16
xorl
add
mov
fimuls
mov
dec
jno
roll
push
pop
xchg
lahf
sub
pusha
pop
xchg
xchg
test
inc
push
cmp
push
scas
pop
cmp
and
jae
in
mov
aas
sbb
mov
jno
scas
sub
cltd
cmp
lock
sbb
ss
in
and
jl
sbb
mov
cmp
sahf
fldt
and
inc
jmp
or
xlat
pop
jmp
dec
insl
push
shrb
inc
pop
addr16
repz
popa
xchg
jp
xor
mov
mov
mov
inc
loop
lcall
adc
movsb
pop
adc
dec
mov
cld
mov
add
mov
addr16
add
call
or
pop
cmpsb
in
jmp
test
mov
out
cmp
fs
fdivp
jmp
lcall
xor
push
xchg
jecxz
jo
pop
push
movsl
aas
xchg
lret
and
repnz
std
cmp
fidivrs
dec
or
dec
inc
das
arpl
jl
sbb
es
inc
cld
jecxz
cmovb
mov
sbb
push
jne
push
push
test
nop
push
mov
sub
mov
loopne
inc
movsb
and
cmp
in
dec
push
mov
push
jp
xchg
and
push
inc
inc
cmp
mov
dec
rcr
insl
frstor
adc
mov
test
scas
and
adc
scas
aaa
sbb
in
dec
mov
es
fld
push
aas
sub
jle
lds
or
cmpsb
cld
data16
or
cmp
lods
xchg
test
sbb
lods
pop
aas
and
test
stos
pop
sub
xchg
clc
les
sbb
xchg
daa
ss
xchg
dec
dec
repnz
loop
add
cmpb
cs
adc
push
and
ds
push
jcxz
jl
sbb
inc
je
lock
enter
xchg
xor
out
mov
adc
test
sub
dec
xor
jl
push
cmp
fisubrs
sub
loop
xchg
inc
imul
int3
cs
xchg
pop
jbe
fsubr
cmp
mov
fprem
insl
xor
dec
lea
dec
inc
mov
mov
jg
add
ds
loop
xchg
add
fwait
mov
je
stos
mov
inc
in
bound
mov
jecxz
or
cmpsl
decl
stc
stos
pop
xchg
lahf
push
sub
nop
stc
dec
mov
stc
push
jo
jb
ja
repnz
xchg
sbb
add
xor
pop
sub
xor
push
call
xchg
add
jns
shll
add
or
push
mov
cmovns
and
aad
mov
in
dec
out
pop
and
add
out
repz
fistpll
cs
and
xchg
adc
lcall
adc
jl
pop
sahf
sbb
jge
ror
jne
cmp
sub
les
sub
addl
xor
pushf
fiadds
inc
sbb
mov
test
das
and
call
insb
mov
jecxz
sub
btr
or
sbb
xor
sub
pop
jo
mov
xlat
inc
mov
enter
xchg
add
mov
inc
fistl
jbe
loop
push
lds
insl
xlat
sub
outsb
xor
inc
xchg
ja
rcll
lret
mov
or
mov
dec
pop
pop
int
mov
xchg
mov
sbb
out
dec
cmp
das
ret
xor
mov
add
imull
mov
sub
inc
adc
add
in
adc
aaa
stos
stos
sahf
xchg
jb
jb
mov
mov
jg
stos
dec
sub
xor
test
cwtl
pop
jg
xor
aas
xchg
xchg
sub
xchg
adc
sysret
jl
testb
push
or
adc
in
aad
push
inc
fildll
mov
sbb
jle
int
je
dec
xchg
or
lret
shrl
sub
scas
dec
mov
sbb
ret
incl
dec
test
or
xchg
jns,pt
and
xor
lods
pop
shrb
mov
pop
pushf
test
daa
iret
rorb
cmp
sub
repnz
das
bound
xor
xchg
jecxz
in
arpl
add
in
pop
stos
add
or
push
mov
sbb
in
inc
repz
push
xchg
xor
movsl
andb
les
pushf
inc
push
jne
loopne
mov
rorb
popf
inc
mov
add
cmp
mulb
add
cwtl
pop
or
sub
lea
std
adc
adc
mov
popa
dec
jg
stc
cmpb
mov
stc
and
outsl
movsl
cmpb
movsb
loopne
fisubrl
ret
jg
out
arpl
repnz
les
mov
and
out
mov
fidivl
aad
dec
movsb
mov
inc
xor
cmpsl
pop
js
or
test
dec
in
add
cli
add
mov
push
inc
mov
out
lcall
dec
push
leave
xchg
rolb
dec
dec
gs
inc
pop
cmpsl
push
jg
clc
lahf
ja
popf
popa
repz
pop
arpl
mov
cs
jno
pop
movsl
mov
or
es
icebp
jge
fisubrl
xchg
ja
add
std
stos
call
jae
orb
or
mov
mov
xor
data16
pushf
pop
lds
add
mov
movsb
nop
inc
jle
or
lret
test
jecxz
cmpsb
cs
dec
xor
xor
loope
stc
jmp
imul
sub
cmp
adc
stos
mov
pop
push
push
cs
cmpsl
push
insb
pop
sub
in
shrl
sub
test
nop
ljmp
xchg
cmp
or
sbbb
adc
or
scas
jns
mulb
lea
cld
imul
outsl
mull
and
xchg
ds
fwait
leave
mov
adc
sub
mov
mov
xchg
leave
movsl
adc
and
inc
lahf
mov
mov
mov
cld
dec
pop
sbb
dec
loopne
add
into
cmp
and
decb
xchg
addb
enter
decl
sub
ss
out
add
add
xor
push
es
in
fbld
jg
data16
call
out
inc
jbe
inc
xchg
push
popf
sbb
cwtl
xor
mov
je
jae
push
stos
imul
andl
push
es
test
dec
lock
and
daa
mov
sub
icebp
push
xchg
mov
jno
mov
icebp
sub
cmp
les
dec
subb
add
loope
sbb
mov
icebp
aad
mov
rcll
inc
push
mov
shlb
adc
mov
loop
imul
cmp
aaa
iret
jl
and
xchg
clc
stc
cmp
ds
sbb
or
cmp
stc
jnp
popf
jle
xchg
pop
cmp
popf
mov
lahf
cld
cmp
int
repnz
addl
imul
dec
clc
repz
cli
cmp
adc
and
add
in
and
push
lods
fwait
adc
or
scas
inc
ficoms
test
cmp
mov
pop
add
cmp
pop
addl
push
ret
fldl
testb
loope
and
mov
mov
test
add
xchg
inc
loope
es
cli
inc
adc
cli
dec
pop
stos
xlat
push
lret
outsb
mov
mov
dec
lea
notl
mov
loopne
jecxz
sub
jbe
test
add
or
aad
push
int3
sahf
xchg
pusha
mov
adc
out
inc
sub
add
cmp
dec
xor
pop
push
insl
mov
push
cmp
mov
jmp
jno
inc
jo
sub
mov
or
jg
fdivrs
push
jo
fistpll
shlb
in
xchg
fstp
cmpsl
jns
lods
cmp
jmp
scas
add
dec
out
push
cmpsb
popa
mov
add
lods
sub
and
xchg
addr16
aaa
enter
add
out
ret
sbb
aad
pop
cmp
jmp
pop
jmp
adc
pop
jns
or
imulb
cmp
vcvtdq2ps
adc
int
insb
cmp
mov
arpl
lea
ljmp
cmpsb
and
mov
dec
xlat
cld
jno
jo
in
je
push
push
mov
xchg
sbb
pop
ss
lods
ds
cmp
outsl
jmp
out
mov
jnp
mov
inc
xor
add
push
repz
push
mov
jne
mov
iret
pop
sub
iret
xor
scas
xor
mov
iret
cmc
shlb
fadds
data16
mov
cmp
test
mov
aad
jne
sub
cwtl
cmpsl
clc
scas
daa
mov
lret
mov
mov
popf
add
pop
mov
sub
cmpsl
lcall
xchg
pop
into
mov
lcall
sub
lods
xchg
iret
mov
ljmp
scas
jl
and
pop
xor
fldenv
mov
add
mov
jne
cmpsb
adc
jae
jb
sbb
leave
in
push
and
popa
jae
mov
inc
nop
lahf
testl
sub
pop
xchg
lea
call
outsl
or
ud1
xchg
and
mov
cmpsb
stc
xor
xchg
inc
rorl
pop
mov
sub
ja
in
jg
fsubrl
into
push
pop
in
sub
loopne
lret
jbe
push
jno
sti
pop
mov
jae
inc
enter
das
in
insb
add
xor
push
fdivrs
inc
jmp
mov
dec
cld
loop
loopne
inc
xor
mov
loop
mov
pushf
and
icebp
lods
fadd
mov
mov
and
cld
incb
xor
loope
and
gs
addr16
push
cmc
jno
sbb
andb
popf
js,pt
add
pop
test
pop
lea
js
xchg
jge
mov
idivl
fisttpl
sub
scas
rcrb
repnz
aam
jae
or
xor
cmpsb
adc
pop
add
imul
mov
movsl
mov
outsb
jne
and
out
dec
enter
test
repnz
sub
scas
adc
stos
popa
mov
fs
cld
es
je
mov
addl
shl
pop
or
testb
mov
sub
ja
xor
cld
pop
adc
mov
sub
pop
loop
push
rol
jmp
je
push
push
adc
lahf
rorl
fwait
mov
inc
cmp
cmpsl
fadds
mov
fcmovnbe
sbbb
loop
jp
aaa
mov
push
sub
outsl
test
and
push
fcomp
push
dec
loop
repnz
lea
add
pop
xchg
in
cs
inc
fbstp
fisttps
mov
dec
repz
movsl
push
mov
icebp
or
lods
fsubl
outsb
xor
scas
out
out
mov
mov
loop
jge
push
xchg
xor
pop
aaa
shl
jge
inc
xchg
leave
jne
jp
imul
and
xlat
fidivrs
add
adc
and
xchg
scas
adc
jb
or
push
jmp
sbb
dec
shrl
add
adc
push
mov
js
pushf
rorb
lahf
int
xchg
std
xchg
xchg
mov
mov
pushf
dec
sub
sub
test
or
mov
scas
xchg
outsl
jbe
adc
jne
ljmp
xor
push
movsl
mov
in
scas
and
je
je
inc
mov
lea
cwtl
test
test
bound
jae
les
sub
xor
xchg
testb
add
leave
ss
mov
fstps
sub
fistps
sub
cmp
mov
or
lret
jb
popf
or
inc
push
aad
orb
insb
mov
add
cmpsb
mov
jp
shlb
mov
int
sub
or
pop
cwtl
loope
sahf
dec
add
les
adc
pop
icebp
mov
xchg
lcall
hlt
iret
and
fldt
bound
add
lret
xchg
shll
mov
cmp
mov
xchg
dec
repnz
jae
xchg
mov
loop
push
lret
lcall
sub
or
xchg
xlat
in
and
or
rcrb
jl
outsl
sub
inc
int3
imul
movsl
jl,pn
ret
lret
dec
push
add
call
popf
leave
dec
sub
or
inc
lea
mov
jl
mov
mov
mov
push
test
xor
push
add
adc
repz
addr16
or
fidivs
test
jns
mov
dec
repnz
push
lock
inc
mov
test
pushf
aas
xchg
and
ss
push
enter
imul
cmp
sbb
push
sub
xchg
inc
jge
pop
popa
xchg
cltd
xchg
imul
cmp
mov
ja
imul
pusha
mov
xchg
ja,pn
push
cmp
push
mov
mov
hlt
call
in
insl
std
add
shlb
pop
mov
mov
imul
dec
adc
or
push
mov
sub
pop
in
jl
mov
dec
and
enter
pop
arpl
outsb
xchg
sarl
xor
and
xchg
cmp
rorb
mull
std
ret
jg
dec
sarl
int3
mov
es
mov
stos
stos
mov
inc
jno
sub
ljmp
cmp
adc
pop
xor
dec
mov
shll
loop
sub
sub
fistpl
sbbl
jge
xchg
cltd
pop
nop
lret
aad
fmull
inc
loopne
sub
aas
xor
js
sti
enter
mov
fiadds
nop
add
jno
ja
mov
jl
push
mov
add
pop
int
mov
mov
hlt
ds
xorb
insl
ljmp
xchg
jne
mov
adc
jns
xor
repz
push
mov
inc
pop
pop
das
orb
dec
data16
adc
and
cmp
jmp
xor
fcmovnbe
pop
incb
sarb
je
xor
popa
icebp
add
add
stos
xchg
xor
adc
mov
and
sbb
std
jp
stos
mov
sarl
inc
outsb
cmp
sbb
rolb
cmp
jnp
xlat
stc
inc
adc
enter
repz
popa
add
mov
in
aaa
les
jo
pop
jp
add
lock
inc
cmp
ss
mov
jbe
mov
jbe
xor
std
call
mov
les
aaa
mov
fstps
call
enter
mov
mov
xchg
mov
xor
aam
inc
cmp
inc
mov
hlt
jecxz
add
mov
fidivs
popa
hlt
rcll
rcll
and
adcb
mov
mov
jge
mov
stc
popa
xorl
jl
jns
out
xchg
push
mov
push
cs
pop
pop
lret
dec
sbbb
pop
fdivr
xor
insl
push
xor
cwtl
cwtl
sbb
iret
stos
push
jg
call
imul
int3
lock
sbb
test
and
dec
adc
xchg
dec
pop
and
loopw
xchg
xor
daa
mov
mov
repz
pop
push
xchg
in
pop
stc
pop
insb
repz
mov
stos
dec
mov
pop
loope
or
sbb
mov
fwait
sub
add
pop
jnp
sub
repnz
stc
mov
dec
cmp
inc
xor
xor
ret
stc
cmp
ljmp
sub
test
cmpsl
int3
in
xchg
mov
xchg
aas
push
test
dec
clc
push
mov
pop
sbb
clts
pushf
xor
sub
mov
dec
pusha
subb
outsl
adc
sub
outsb
and
mov
adc
pop
cltd
mov
inc
daa
mov
movsl
dec
outsb
nop
sub
pushf
cmpsl
or
nop
pop
aas
roll
jb
ficompl
lahf
out
pusha
clc
flds
das
lret
jecxz
push
mov
fcomps
or
cltd
cmc
cmp
sub
outsb
sub
cwtl
pop
push
xchg
xchg
and
cmp
loop
in
sub
sub
outsb
jae
mov
mov
jb
pop
fs
push
cmpsl
inc
cmp
cmc
pop
and
addl
lcall
mov
into
xor
lea
sarl
mov
bound
xor
inc
dec
inc
jnp
cmp
popf
sub
test
sub
fcomip
stos
repz
and
dec
outsl
cmp
pop
popf
cmpsb
adc
adc
sbb
out
pop
inc
jmp
sbb
test
sbb
adc
mov
out
xchg
mov
sub
xchg
in
popl
lcall
sbb
inc
add
outsb
adc
and
and
jp
mov
test
fwait
push
jp
fisttpll
ficoml
mov
lcall
xorb
cmp
inc
pop
xchg
cmp
sarl
lock
lret
test
sbb
jnp
mov
mov
das
aam
or
mov
daa
icebp
pushf
jns
lock
jge
mov
dec
lea
push
jl
push
mov
pop
test
pop
dec
lcall
cwtl
testb
add
cmp
adc
scas
imul
aam
je
bnd
out
js
stc
dec
xchg
sbb
add
push
xlat
in
adc
jne
cwtl
xor
ds
adc
repz
xchg
popf
mov
sbb
out
adc
or
mov
push
aas
ja
inc
jnp
std
lods
pop
pop
jne
lock
mov
xchg
dec
popa
mov
insb
test
pushf
push
sbb
hlt
daa
rcr
sub
jle
push
aas
or
jne
aad
nop
jns
inc
xor
jne
mov
xor
cs
pop
push
addb
imul
pop
push
lret
mov
aad
jg
ljmp
sub
inc
push
lods
shr
scas
inc
dec
cmc
and
call
cmpsl
ljmp
push
mov
daa
lods
iret
cmc
mov
cld
cli
testl
push
cs
scas
in
and
aas
inc
sbb
ds
ficomps
push
push
push
js
xor
loope
push
dec
int3
mov
call
jg
sub
push
mov
fildll
xor
push
mov
cmp
int3
and
loop
mov
jno
and
jae
mov
and
push
xor
add
in
jmp
lcall
cmp
inc
and
xchg
adc
mov
call
mov
mov
fisubs
jbe
jno
sub
pop
push
mov
out
mov
mov
rcrl
in
scas
mov
adc
adc
push
sbb
popa
div
sti
cmp
jnp
ret
test
and
lret
mov
aam
fwait
cs
icebp
push
int
stos
out
mov
cmp
dec
aas
and
mov
xor
or
shll
xor
jae
iret
cmp
inc
sub
pop
imulb
cwtl
cmp
jns
xor
jb
movsb
xor
dec
push
inc
in
std
lock
enter
add
in
ljmp
cmp
xlat
nop
jmp
out
inc
cli
sbb
mov
dec
loope
xor
jecxz
insl
pop
int3
stc
mov
lds
inc
fs
inc
repnz
sub
cltd
mov
mov
sahf
pop
in
jg
mov
int3
mov
out
push
add
pop
pop
test
scas
outsb
pop
push
adc
xchg
sub
adc
rcr
mov
aas
xchg
loopne
ret
fwait
pop
cmc
xchg
test
lahf
push
push
int3
pop
aaa
sbb
in
mov
je
adc
enter
ret
pop
pop
or
sbb
xchg
ljmp
sbb
lock
fdiv
ja
sbb
push
in
sub
in
movsl
pop
mov
mov
fdivrl
xchg
shll
xor
or
es
add
outsb
push
adc
pop
pop
sub
mov
loopne
inc
into
repnz
sub
dec
jbe
dec
movsl
jge
jge
mov
scas
or
or
mov
sub
mov
and
sbb
es
adc
sbbl
xchg
pop
jne
popa
push
push
les
dec
popf
mov
loop
test
mov
xor
jnp
ss
cmp
mov
pop
loope
daa
pusha
clc
aam
repnz
movsb
cld
dec
inc
jbe
mov
mov
in
sbb
adc
sbbb
mull
ds
inc
inc
lcall
dec
cmp
adc
sbb
aas
hlt
sub
cwtl
jno
or
cmp
out
push
lock
aam
cs
sbb
xor
aam
add
pop
flds
sbb
mov
and
aaa
rolb
sub
adc
fistl
push
notb
push
movsl
lret
mov
jmp
mov
scas
adc
cmp
jae
jmp
adc
jmp
pop
jmp
das
loop
ret
xor
sahf
imul
data16
sti
cs
stos
or
icebp
sbb
sti
insl
jae
test
cmp
cmp
pcmpgtd
lods
cs
imul
test
rol
pop
cmp
add
fcoml
jnp
ljmp
test
push
jl
incl
add
and
mov
add
insb
jmp
insl
inc
movsb
out
jp
sbb
daa
popf
aas
imul
jae
out
inc
push
test
mov
jne
cmp
xchg
mov
jne
int
or
cmp
cmp
jp
test
inc
add
mov
into
pop
in
out
xchg
and
in
stc
push
gs
arpl
sti
mov
mov
in
sarb
add
push
jns
addr16
jns
add
adc
dec
lods
xchg
jle
call
repz
cmpsl
dec
xor
fmull
out
pop
sbb
mov
in
je
jecxz
outsl
ret
jbe
xchg
sahf
popf
mov
sub
ret
xchg
pop
fwait
or
add
lret
push
push
inc
sub
into
leave
mov
sub
dec
lret
lret
jb
adc
push
test
dec
aam
test
push
add
pop
xchg
test
je
cmp
test
or
mov
xor
xor
leave
inc
mov
lea
je
mov
push
xchg
daa
pusha
ret
repz
push
xor
cmpsb
mov
call
and
in
nop
dec
lods
popa
pop
add
pop
roll
popf
dec
dec
mov
cmc
fiadds
xchg
enter
add
mov
and
jb
xchg
movsl
mov
pop
mov
mov
lcall
cmp
adc
aas
jb
jp
xchg
or
sbb
out
mov
outsb
shll
aas
jne
in
xchg
push
xchg
xlat
lahf
add
iret
stc
xor
loope
cmp
sub
mov
sbb
mov
jmp
mov
jle
je
jmp
dec
mov
ja
pop
xor
push
data16
push
or
pop
mov
and
sar
lea
movsb
mov
jle
iret
dec
xchg
add
scas
push
sub
push
xor
ja
sub
out
dec
sub
jae
pushf
rcrl
xchg
fcomps
insb
ret
iret
gs
adc
cmpsl
stc
fcom
pop
shll
lret
cmp
stos
into
add
imul
testl
sbb
fst
cld
imul
xchg
imul
fisubrl
inc
data16
sbb
loop
mov
sbb
sbb
mov
popf
scas
hlt
and
out
cmp
stc
adc
dec
pop
nop
xchg
mov
cmc
fbld
mov
push
in
loopne
mov
call
mov
mov
and
inc
imul
cmp
dec
pop
xchg
adcl
pop
pop
aad
xchg
jmp
adc
in
xor
inc
push
mov
cmp
xor
cwtl
das
je
enter
pop
in
rcll
daa
sub
push
adc
roll
sbb
inc
nop
fildl
xorb
mov
lcall
fsubrl
fcmovne
jbe
pop
bound
pusha
mov
lods
js
mov
movsb
lea
cmp
sbb
dec
leave
in
std
jmp
loopne
subl
je
push
cmp
pushf
and
lock
ret
div
int
xchg
cmp
ds
dec
mov
adc
cmp
push
inc
daa
test
ljmp
xchg
iret
repz
int
xchg
rcll
xchg
pop
les
pop
mov
xchg
jl
scas
outsl
mov
bound
gs
pop
mov
sbb
sub
stos
mov
in
push
out
mov
pusha
cmp
push
je
sbb
bound
dec
xchg
aaa
mov
pop
lret
scas
int
or
push
movsb
add
push
cmp
je
and
and
daa
sub
push
dec
js
jecxz
xor
fstps
jno
shll
testl
ficoml
push
xchg
js
push
jmp
pop
pop
mov
cmp
lahf
imul
pop
push
inc
cmp
ja
aas
mov
and
add
cmpsl
jno
arpl
lret
and
scas
xchg
jns
inc
and
inc
jle
roll
jp
inc
insl
loopne
in
cmc
mov
inc
shll
add
cmpsl
stos
push
push
int
cmp
or
scas
cs
mov
inc
mov
inc
popf
add
or
mov
stos
mov
cmc
in
popa
aas
fmul
test
adc
stos
or
test
sbb
in
in
in
inc
cmc
mov
dec
dec
cli
cmpsl
inc
xchg
ret
and
xchg
ud2
sbb
cmc
pop
in
sbb
pop
repz
and
out
cwtl
cmp
dec
jl
and
call
data16
xchg
add
inc
mov
xorb
xor
aad
xlat
push
xor
pop
insb
cmpsb
frstor
cmc
and
push
ja
testb
lcall
lods
sub
mov
push
mov
enter
xchg
lret
lea
xchg
fwait
sahf
test
pop
ror
aam
mov
inc
enter
mov
jne
or
mov
sbb
mull
push
es
adc
in
pop
sub
lock
sub
inc
xchg
sub
insl
loop
rcll
data16
addb
add
jo
sbb
roll
xor
dec
in
adc
aaa
rcll
ficoms
mov
adcl
push
jne,pt
dec
cli
sbb
cmpsl
das
pop
pop
popa
sbb
pushf
cmpsb
and
out
dec
push
mov
cmc
xor
sti
enter
push
sbb
ficoms
cwtl
pop
or
rcrb
sbb
movsl
mov
cmpsl
inc
xor
mov
stos
jb
mov
push
rolb
lcall
mov
fs
loop
mov
and
push
je
fwait
add
hlt
loopne
mov
fs
sub
mov
add
insl
add
cmp
ret
imul
add
xchg
test
add
and
in
adc
mov
aas
mov
jg
push
pusha
cmp
pop
out
movsl
es
cmpsl
mov
add
ja
pop
mov
subl
daa
insl
or
push
inc
cld
add
adc
sbb
out
test
sbb
lods
or
in
sbb
mov
lock
aas
cmp
fs
jle
jns
inc
dec
xchg
push
push
aaa
xor
shll
dec
int3
stos
mov
sub
mov
add
mov
hlt
and
push
xor
int
stc
in
mov
jne
mov
push
cmpsl
mov
dec
clc
outsl
lods
jp
push
pop
pushf
pusha
dec
and
movsb
popf
push
inc
loopne
push
cmp
cs
lock
fnsave
pop
pop
cmpsl
inc
into
mov
xor
jle
shll
fstps
pop
cmpsl
pop
add
or
xchg
sbb
adc
mov
into
aad
jp
pop
jle
xlat
cltd
mov
cmp
lds
pushl
mov
int
mov
call
cltd
notb
cld
fstp
mov
or
sbb
rcr
js
ret
pop
mov
into
xchg
scas
push
movb
das
imul
lea
test
push
jmp
pusha
fsts
sbb
fildll
xor
mov
pop
mov
sbb
inc
repnz
dec
jne
push
sub
jg
aam
and
mov
test
jge
je
and
fstpl
pop
pop
xor
and
shlb
inc
xchg
cmc
shll
lds
jo
enter
insl
hlt
test
sbb
dec
jo
aas
mov
fmuls
lods
jbe
fcoms
movsb
ljmp
inc
push
dec
fistpll
xchg
xor
hlt
popa
mov
inc
adc
mov
mov
mov
notb
mov
pop
sub
pop
clc
cmp
xchg
pushf
inc
loopne
imul
roll
inc
push
dec
mov
nop
push
das
pop
lds
pop
popa
pop
fdivrs
add
cmp
call
pushf
outsl
cmp
bnd
push
aaa
sahf
push
pop
sub
mov
out
pop
cmp
ljmp
dec
adc
enter
mov
nop
pop
jno
mov
popa
fnsave
add
push
stc
cmpsb
dec
jno
push
mov
pop
jo
push
inc
into
adc
sbb
enter
jecxz
jge
les
adc
jno
cmpsb
addl
xchg
lret
adc
leave
or
das
push
rcrl
sbb
mov
xor
mov
lcall
cmpb
mov
push
pop
fidivs
push
cmp
test
push
xchg
shrw
push
insl
cmp
inc
cmc
cmpsl
stos
pushf
mov
jb
jo
or
cmp
mov
xor
mov
inc
jle
xchg
pop
sbb
jle
sti
or
subl
adc
adc
pop
ja
cmp
push
and
ror
add
bound
push
and
sbb
pop
outsb
nopl
push
les
cmpb
and
adc
enter
outsb
lcall
les
repz
mov
lds
jle
fcoml
std
push
sub
std
or
nop
cli
aaa
fisttpl
fmul
mov
scas
jne
mov
mov
push
sub
jl
into
cmpsb
icebp
std
push
mov
add
ret
xchg
sahf
fcomps
sub
xchg
ja
mov
mov
test
lret
or
mov
outsb
cltd
fstps
inc
fnsave
aad
xchg
in
inc
push
jnp
test
pop
ret
and
enter
flds
daa
push
dec
insb
subb
adc
jno
shll
mov
add
and
sub
sub
and
pop
jp
push
cli
mov
scas
scas
fiaddl
ret
pop
ficompl
and
mov
and
test
sbb
xor
lds
xor
repnz
jb
fdivrl
mov
popf
pop
adc
mov
insl
push
sbb
fs
add
popf
in
test
adc
jg
inc
les
pop
pop
mov
xlat
cmpsl
enter
or
mov
pop
ret
add
movsb
idivb
push
cmp
ljmp
loopne
dec
inc
enter
in
mov
pusha
shrb
push
cmp
xor
lock
fwait
sub
sbb
add
add
dec
stc
mov
add
cwtl
je
and
xchg
into
cltd
fdivl
adc
sbb
sub
add
test
adc
iret
mull
dec
aad
mul
stos
inc
cwtl
jbe
ret
mov
xor
mov
movsb
push
nop
push
cmpsb
jle
pop
in
and
mov
ja
test
fistpll
scas
lods
lods
rolb
jo
xchg
jo
add
xor
sahf
test
lcall
mov
and
mov
mov
ds
sti
dec
pop
dec
push
cli
xor
cli
jne
fistpl
mov
dec
cs
mov
cwtl
cs
and
pushf
das
jg
icebp
mov
dec
xchg
xchg
xor
ucomiss
adc
inc
and
add
inc
cmc
sarl
and
fs
pushf
sub
jmp
lret
and
dec
jge
jo
adc
xchg
sbb
pop
ja
mov
bound
sarl
push
add
cmp
pop
cmp
xchg
scas
jle
clc
xchg
hlt
inc
adc
dec
movsl
jo
call
bound
sbb
enter
pop
mov
loope
pop
dec
ja
test
ja
mov
push
sbb
sub
pop
out
imul
ret
xchg
mov
or
js
test
inc
dec
xchg
push
pop
xor
mov
mov
lcall
cmp
adc
mov
icebp
jg
ret
push
hlt
mov
icebp
pop
pop
jmp
xor
inc
adc
jecxz
nop
insb
push
jno,pn
sub
aad
decb
mov
scas
mov
fistpl
arpl
fdivr
sub
out
xchg
jnp
jg
mov
or
iret
mov
out
cmp
jle
or
aad
lds
add
fidivrs
adc
in
inc
std
xorb
xchg
dec
or
jg
lret
in
pop
cwtl
cli
adc
inc
outsl
xchg
jnp
out
cmpsb
mov
jecxz
lock
jl
cmpsl
inc
lea
sarb
push
add
push
movsl
movsl
mov
push
dec
sbbl
fs
xchg
adc
mov
test
push
das
push
repz
xchg
lds
call
push
xchg
adc
pusha
cmc
repz
mov
xchg
insl
mov
push
xchg
mov
lcall
inc
or
mov
mov
mov
imul
adc
cs
fistps
and
jp
cmp
push
mov
sbb
mov
push
xchg
ja
push
adc
test
fyl2xp1
sbb
sarb
jb
test
xchg
or
shl
lods
stos
jecxz
sbb
pop
push
or
sub
sbb
xchg
imul
rcr
jecxz
jmp
push
test
xchg
push
push
out
mov
repz
push
mov
into
inc
fisubrl
push
mov
sub
dec
mov
pop
inc
cmpb
pusha
pop
shlb
pop
mov
rolb
adc
subb
mov
test
cli
movsb
push
cltd
jb
loope
sub
imul
cs
sub
or
addr16
mov
in
inc
int3
cmp
roll
push
loope
mov
aaa
imul
repnz
outsl
push
dec
out
andl
inc
rcrb
mov
dec
data16
incb
sahf
call
scas
pop
test
rol
inc
inc
popa
mov
xchg
arpl
les
fcoms
mov
cmpsb
push
lods
and
les
imul
xchg
mov
push
cwtl
int3
sub
stc
jmp
and
mov
in
push
push
dec
adc
sbb
mov
mov
insb
xchg
jnp
cwtl
iret
inc
out
cmp
loope
rolb
push
daa
shlb
nop
jp
inc
mov
push
jb
mov
add
push
adc
addr16
test
addr16
push
aam
rclb
add
inc
test
outsl
xor
pop
xor
iret
sub
xchg
cmp
hlt
out
into
dec
cmp
test
enter
inc
and
mov
push
adc
push
into
or
sbb
cmp
dec
push
cltd
dec
or
push
out
ds
rorl
xchg
dec
xor
stc
repnz
mov
stc
test
fwait
inc
jnp
dec
lahf
les
add
repz
add
aaa
cmp
lods
cmp
insl
fstl
call
fcmovu
addr16
ljmp
test
lock
and
mov
pop
mov
cmp
add
jbe
cs
out
jno
add
pop
push
mov
xor
das
inc
faddp
adc
movb
push
jns
gs
jo
test
and
pusha
test
inc
rcll
jl
or
sub
mov
xchg
dec
dec
inc
insl
jecxz
popf
mov
shr
test
ja
inc
sub
stos
daa
out
xlat
jp
jno
push
outsl
mov
jae
jno
push
xchg
mov
ja
test
lcall
inc
inc
out
or
aam
push
push
cmc
hlt
or
leave
and
fmul
mov
sub
dec
adcb
pushl
add
fs
jecxz
lret
popa
mov
push
roll
adc
std
test
push
or
and
sub
stos
ret
pop
ds
mov
dec
lds
das
jo
and
xorb
cmp
stc
push
dec
inc
in
sub
push
jb
bnd
ss
mov
sarb
push
xchg
mov
into
cld
stos
dec
cmp
jg
adc
outsb
divb
mov
inc
cmp
into
test
loope
in
outsb
fmulp
and
int3
cmp
jns
pop
in
imull
dec
xchg
stc
lods
inc
add
sub
adcl
push
mov
gs
push
aad
mov
loopne
stos
push
inc
in
jmp
sti
mov
or
je
or
and
mov
push
push
ljmp
dec
sub
popa
push
scas
inc
add
cltd
xor
aas
cmp
dec
iret
mov
mov
fwait
rolb
sub
jle
mov
jp
sbb
pop
mov
insl
ljmp
lds
inc
lds
aam
cmp
faddl
inc
stos
lock
or
lods
cmp
lock
sti
fwait
cmp
imul
ret
mov
scas
xor
stc
mov
dec
inc
fnstcw
movsl
lock
popa
and
dec
or
icebp
cmp
cmp
mov
cld
mov
loopne
mov
outsl
cmpsl
or
mov
out
mov
jo
sbb
cwtl
cmp
in
aad
add
shll
je
pop
popa
dec
test
lea
dec
out
cld
xor
add
rcll
pcmpeqb
sub
aad
cmpb
or
xlat
xorl
jb
lock
adc
xor
lds
fst
arpl
jl
das
les
and
cmp
add
mov
mov
push
pushf
push
les
aam
ret
sbb
mov
inc
orb
out
and
lods
jno
sbb
mov
mov
hlt
int3
mov
iret
jbe
push
sbb
lods
mov
pop
adc
aam
rcl
dec
xchg
rcrb
adc
add
cltd
mov
test
ja
push
mov
mov
mov
js
lahf
insb
stos
hlt
or
adc
loopne
sub
lea
jmp
pop
mov
movsl
cltd
xchg
pop
jmp
pop
xor
rcll
dec
pop
lods
pop
in
bound
jnp
out
xchg
mov
out
iret
cmp
sbb
cmp
pop
and
test
mov
idivb
push
xor
jecxz
jo
pop
stc
pop
cmp
push
scas
mov
mov
aaa
mov
jl
mov
lds
idiv
inc
xchg
mov
out
sbb
sbb
jno
mov
push
adc
cmp
or
mov
les
sbb
jmp
sub
scas
pop
xor
loope
cli
adc
in
sub
jp
add
xor
inc
repnz
aas
outsb
shll
mov
pop
sbb
mov
jecxz
xchg
pop
outsb
push
ret
cltd
and
adc
js
divl
push
or
mov
ss
out
addr16
sar
cmp
int
nop
int3
dec
ss
popl
call
push
shl
loope
cltd
out
or
clc
xchg
inc
movsl
ret
mov
cmp
adc
in
push
inc
cmp
pop
or
xchg
sbb
out
fisttpll
es
mov
filds
aaa
push
in
xor
clc
test
mov
leave
mov
inc
insl
btc
pop
jo
dec
add
js
pop
leave
dec
pop
mov
arpl
lret
push
inc
or
mov
outsb
cli
pop
cmpsl
cmp
loop
adc
aad
cmp
outsb
into
daa
mov
repz
sbb
or
jo
cmpsl
repnz
aam
lret
testb
movsb
push
sub
mov
je
cli
jae
pushf
test
out
jmp
xchg
pop
dec
arpl
jg
rcrl
dec
add
xchg
aad
test
in
repnz
mov
cmc
pop
dec
inc
or
inc
aas
pop
ret
lcall
data16
push
xchg
sub
push
fs
jg
repz
sbb
daa
pusha
nop
roll
js
test
dec
iret
pop
outsl
push
shlb
xor
mov
scas
test
test
in
jno
call
mov
xchg
pushf
sub
cmp
in
jno
inc
xchg
mov
jl
nop
ds
lock
fcompl
negb
sub
mov
sahf
incb
mov
cmp
int3
rolb
ret
mov
loop
mov
ja,pn
shr
sub
push
cwtl
xor
loopne
scas
xchg
xor
aad
dec
dec
dec
fiaddl
mov
jl
mov
pop
scas
fsubrl
sti
cmp
sti
das
mov
and
rcll
ja
sbb
and
outsl
jno
sub
add
inc
lcall
and
jo
mov
jae
movsb
cmp
add
push
test
push
push
jge
rolb
adc
adc
dec
jge
jno
add
out
mov
test
cmp
cmp
stc
sbb
addr16
mov
shlb
push
sub
jg
les
sysexit
adc
pushf
jge
mov
or
pop
pop
mov
push
push
mov
sub
push
aam
jnp
js
cmp
xchg
ljmp
push
outsb
stos
out
lret
gs
sbb
cld
xchg
rcll
jg
out
jp
imul
cmp
jne
xor
test
outsl
cs
sub
or
popf
lock
lahf
gs
xor
lds
test
sub
sbb
pop
loopne
andb
lahf
repz
outsl
out
mov
pop
lret
sbb
add
jo
lahf
push
cmpsb
dec
xchg
mov
hlt
in
cwtl
jns
lea
xor
adc
pop
mov
orb
cwtl
xchg
pop
cmpsb
sbbl
std
insb
cltd
inc
dec
out
outsb
xor
mov
and
xlat
pop
xor
mov
jo
sub
dec
mov
mov
jo
imul
pop
adc
mov
in
jns
sbbl
mov
xchg
cmpsl
inc
addl
mov
jg
mov
ds
out
pushf
and
xlat
mov
aas
cltd
loope
mov
ds
push
mov
mov
out
call
fs
add
mov
lods
push
pop
and
push
sbb
sub
mov
fsubl
sub
mov
movsl
repnz
pop
leave
xchg
loope
ret
out
outsb
cmpsl
pop
or
dec
test
jecxz
push
and
jbe
xlat
clc
repz
outsb
into
out
je
mov
clc
jp
pushf
insb
data16
das
cmpsl
push
mov
cmp
jg
push
fdivp
jp
xor
cs
jnp
imul
ss
cs
mov
xchg
sbb
fidivs
shl
ljmp
jbe
outsb
nop
aas
push
cmp
push
aam
jnp
movsl
sbb
jp
inc
scas
insb
push
jl
test
or
jnp
aaa
push
lds
jae
cmp
repnz
daa
or
mov
lds
scas
cmp
outsb
add
mov
mov
jmp
jbe
mov
jne
ja
ja
sub
cmp
mov
xchg
fnsave
add
out
pushf
ljmp
add
mov
pop
cmpsl
fadd
cltd
mov
adc
jg
aas
sbb
lahf
dec
and
jecxz
stos
rcrl
ljmp
or
test
cwtl
aad
add
or
insb
nop
xor
into
mov
cmp
cltd
sbb
in
xlat
es
fcomps
stos
inc
inc
insb
mov
mov
leave
icebp
sahf
or
orb
add
dec
pop
add
imul
lcall
or
aaa
jecxz
push
pushl
adc
and
cmpsb
mov
sbbl
push
xchg
pop
cs
pop
sti
les
mov
sub
subb
arpl
mov
call
ja
or
jnp
pop
imul
in
xor
imulb
mov
js
dec
inc
lahf
mov
jnp
bndldx
sbb
sub
xchg
add
lds
push
mov
icebp
cmpl
jge
inc
adc
or
test
cmp
mov
gs
adc
and
loope
in
adc
sbb
push
lods
jecxz
mov
push
js
test
xor
addb
inc
pop
out
inc
lret
add
and
sub
test
mov
fcoms
das
mov
push
lahf
sub
jns
movsb
jecxz
lds
rcr
nop
pusha
mov
test
je
dec
pop
inc
mov
mov
dec
cmp
sub
add
push
fmull
push
jmp
add
lcall
enter
out
add
fistl
fldcw
adcb
xchg
push
and
aad
and
push
iret
adc
jmp
push
adc
or
and
into
sarb
and
sbb
dec
mov
insb
xchg
cmp
mov
enter
jge
out
aaa
iret
or
pop
push
jnp
enter
pop
lcall
and
lret
cmp
addb
push
call
push
shrl
cmp
das
add
add
xchg
lds
in
addb
in
mov
xchg
ret
xlat
lods
or
lods
xchg
sahf
add
push
mov
insb
jmp
or
adcb
xlat
mov
mov
push
divl
gs
hlt
and
hlt
mov
mov
push
mov
pop
repz
hlt
xchg
sbb
push
pop
mov
xchg
push
lret
jno
cmc
cmp
jl
jno
xor
jg
xchg
sahf
lret
xchg
daa
jmp
insl
out
imul
cmp
inc
jbe
jmp
push
mov
or
push
out
insl
jp
and
stc
sub
decl
cmc
leave
jl
fiadds
punpcklwd
popf
jns
adc
add
pop
dec
ret
fmul
ret
mov
xchg
fstl
fistpll
jle
leave
out
rorb
xchg
packssdw
testl
lcall
pushf
loop
adc
xorl
add
cmp
xchg
loop
xchg
cli
ret
and
pop
lods
inc
imul
push
adcb
push
fcomps
scas
jle
cmpsb
push
rcrl
jno
xchg
and
adc
jg
loope
repnz
or
sub
or
mull
mov
stc
inc
sbb
adc
insl
movsb
enter
and
aaa
mov
pop
sub
popa
and
jnp
out
jbe
shlb
mov
js
adc
outsb
jp
inc
add
sbb
loope
test
or
jp
cmp
jne
lods
mov
mov
insb
dec
ds
ss
daa
dec
repz
pop
jle
adc
xchg
sbb
psllq
xor
and
outsl
xchg
arpl
xor
mov
cmp
popf
jbe
inc
add
lret
push
adc
das
and
push
lcall
sub
rcl
jmp
cmpsl
mov
arpl
sti
mov
in
jns
and
adc
sbb
push
sti
fidivl
xchg
fwait
mov
ret
cld
in
movsb
cmp
in
fwait
stos
mov
scas
or
in
sub
ja
lea
shrb
lea
xor
ja
scas
or
sahf
pop
shrl
out
rclb
fwait
in
data16
fwait
cmp
cmp
les
and
cs
cmp
sbb
inc
inc
adc
fdivrs
xchg
repz
subb
inc
jbe
aam
and
cmpsb
int
xlat
add
cmp
jne
lods
or
das
push
filds
rclb
pusha
and
adc
ret
push
mov
shlb
rcr
repz
arpl
jns
scas
je
pop
xor
ret
iret
push
es
arpl
daa
jg
sub
xchg
or
lret
mov
and
nop
xor
out
mov
inc
mov
in
add
popl
dec
sbb
xchg
xchg
leave
jp
xrelease
fsubs
and
es
or
outsb
jmp
or
xor
test
pop
repz
mov
addl
jnp
sbb
push
jg
scas
sub
push
stc
cmp
mov
icebp
cmp
test
xchg
sbb
lret
daa
xchg
inc
mov
js
movsl
mov
mov
enter
sbb
jo
jno
mov
xchg
mov
mov
das
test
mov
cld
es
fisubrs
out
push
clc
dec
sub
mov
es
stos
add
in
xchg
scas
jo
mov
xor
shrb
pop
sbb
subb
pop
test
mov
lcall
pop
inc
lahf
jp
add
jge
or
push
mov
add
xchg
outsb
mov
aas
inc
push
mov
test
insl
or
out
les
cmp
int
pusha
sub
pop
lcall
mov
sub
popf
adc
and
mov
daa
adc
enter
jge
inc
mov
incl
cltd
fadd
mov
xchg
sub
sub
lahf
inc
ficompl
or
movsl
adc
fwait
insl
mov
xor
pop
mov
adc
outsb
adc
or
jg
xlat
xchg
inc
sbb
sub
lea
inc
and
mov
cmc
sbbb
cmp
sbb
enter
out
push
xorb
imul
push
fwait
cmp
mov
iret
jb
idiv
fcomip
ret
pop
loop
add
add
push
jecxz
dec
xchg
sbb
push
imul
incl
and
push
shl
push
inc
push
les
sub
scas
ret
fidivrl
insl
dec
lahf
pop
push
lcall
lock
lcall
adc
pop
or
xor
out
movsb
cmp
xor
testl
push
pop
loop
push
add
int3
loop
fnstsw
cmp
daa
pop
rolb
roll
subl
or
or
jl
cmp
push
and
inc
jns
inc
loope
mov
aad
pusha
cmpsb
push
mov
aas
ds
sbb
xchg
jns
xor
out
daa
jl
jne
dec
repz
sub
jns
stos
sti
movsl
arpl
jbe
inc
push
out
mov
mov
ja
pop
mov
mov
aad
in
js
or
push
xlat
push
clc
lahf
clc
mov
sbb
xchg
cli
adc
jl
mov
jmp
js
xor
mov
and
sti
push
jp
loope
jb
xor
pop
and
add
sbb
movsl
sub
jle
push
adc
sub
les
and
push
stos
not
jno
sub
shl
mov
jmp
mov
mov
add
add
std
int3
repz
ret
jl
js
push
pop
lret
pop
ds
mov
scas
add
sub
repnz
fstpl
pop
in
jo
negb
scas
mov
insb
mov
jns
inc
cmp
insb
and
ret
mov
movsl
jecxz
je
cmp
push
int3
inc
add
sub
and
in
jg
inc
dec
imul
jns,pt
push
pop
cmp
cmp
mov
sahf
mov
pop
jp
push
cmpsb
jno
into
mov
movsl
fs
cmpsb
mov
cmp
jl
jle
xchg
xchg
xor
rorl
cmp
add
inc
push
mov
cmp
dec
adc
mov
mov
push
mov
inc
incl
mov
sub
push
mov
jbe
xchg
push
mov
fsubr
mov
in
and
cld
or
pop
inc
out
sub
sbb
pop
adc
sti
sub
and
push
sbbb
push
xor
pop
sub
cltd
pop
add
mov
xchg
sub
pop
aaa
cs
inc
add
xor
pop
in
cs
roll
or
fwait
lret
stos
pop
leave
pushf
jge
and
xchg
mov
mov
dec
bound
xchg
mov
test
mov
adc
rclb
mov
jge
jmp
mov
xorl
insl
incl
lret
add
cltd
lea
shr
scas
xlat
and
cwtl
or
sbb
aas
fs
xor
cmp
out
fwait
clc
dec
add
cmc
repnz
testl
sbb
sbb
shlb
sbb
jno
jmp
cmc
jmp
in
nop
and
jb
mov
mov
es
popa
add
mov
addr16
test
cmpsb
cli
daa
sahf
fnstcw
xchg
cmp
xchg
popa
sub
or
pop
ss
das
loopne
mov
dec
pop
aad
dec
jmp
lret
fwait
jae
push
mov
jns
xorl
hlt
gs
adc
lock
pop
add
mov
jbe
mov
inc
fsubrs
out
mov
jne
fidivrs
jge
jns
fwait
dec
imul
pushf
or
dec
jle
ret
aas
pop
clc
notb
adc
pop
dec
daa
adc
mov
mov
enter
fwait
mov
xor
pushw
lods
and
push
scas
rcrl
into
cmpsb
pop
jns
nop
clc
push
adc
jnp
pop
inc
add
adc
pop
dec
cmp
jae
fisttpl
mov
push
in
cmp
mov
xor
push
popa
sub
fwait
fwait
or
sarb
sbbl
inc
xor
add
xor
fidivrl
xchg
nop
mov
push
jmp
sti
or
dec
mov
pop
stos
cmpsb
pop
test
push
inc
sub
mov
ds
fisubs
dec
pop
and
or
shll
lods
xor
scas
mov
xor
cmp
push
push
iret
and
rclb
mov
xor
push
add
xlat
lret
inc
sbb
push
dec
cmc
mov
inc
jp
jmp
xchg
inc
out
sub
sub
cmp
mov
cmp
xor
jno
dec
insl
rcpps
cli
movsl
jne
insb
xor
mov
add
mov
popa
insl
jecxz
cmc
scas
dec
inc
jne
iret
xchg
sub
test
pop
pop
pusha
call
pushf
push
arpl
mov
imul
sarl
je
shlb
scas
jbe
add
mov
add
add
test
adc
insl
idivl
sahf
xchg
and
test
aaa
cmp
inc
and
ljmp
mov
out
mov
cmp
mov
sarl
sbb
add
jb
sahf
test
mov
sub
ja
push
push
call
scas
andb
mov
jbe
xorps
jns
mov
lret
and
pop
dec
push
into
sbb
roll
jnp
xlat
gs
xor
pop
in
out
push
jb
pop
cmc
or
test
pop
dec
xor
loop
adc
ret
mul
leave
xor
test
jbe,pn
xchg
or
pop
mov
cmp
cmp
mov
add
outsl
ficoml
aas
jge
out
ret
adc
mov
test
sti
inc
aas
mov
lea
arpl
push
subb
sar
aad
add
cli
bound
adc
xor
gs
aad
outsb
xlat
fcmovb
cli
clc
jp
movsl
pop
xchg
inc
mov
cli
mov
xchg
or
insb
les
xchg
sahf
mov
add
outsb
testl
xor
mov
test
jo
into
push
xor
dec
scas
push
mov
dec
in
xlat
pop
imul
cmp
ret
shrl
jae
fsub
add
jmp
ljmp
mov
popa
mul
dec
nop
dec
xor
xchg
shlb
out
pop
leave
and
mov
insl
mov
mov
stos
xchg
fiaddl
in
cmp
mov
repz
mov
jae
test
or
dec
or
pop
cmpleps
clc
pushf
aam
ja
push
adc
mov
in
jnp
jl
adc
arpl
jmp
out
out
jge
xchg
out
dec
and
and
cs
pop
lods
testl
push
inc
mov
aaa
cmp
nop
mov
xchg
xchg
gs
push
insl
sbb
arpl
mov
cmpsb
adc
and
add
inc
ja
aad
and
jae
jbe
sub
stos
xchg
adc
out
call
mov
sub
lods
pop
and
jge
int3
xchg
sub
cmp
in
xchg
sub
and
jp
mov
imulb
jle
push
dec
jmp
dec
jp
loopne
mov
outsb
out
faddp
orb
mov
aam
xchg
pop
aaa
xchg
pop
adc
cli
sub
jo
push
jnp
dec
js
adc
and
or
lahf
pushf
inc
pop
outsb
leave
into
sbb
add
mov
jp
xchg
push
stc
push
iret
ja
push
je
lods
mov
shlb
sarb
clc
sbb
jp,pt
add
das
imulb
lods
xchg
or
dec
add
xor
mov
inc
jb
dec
cld
sbb
orb
xchg
mov
dec
in
outsl
fst
jle
dec
fistpll
push
cmc
lea
scas
fnstsw
push
and
mov
fstps
out
in
dec
popf
int3
mov
mov
repz
pop
fadd
and
and
sti
aas
ljmp
dec
add
outsb
arpl
nop
add
ficomps
mov
insb
aaa
xchg
cmpb
sbb
dec
xorb
int
mov
popf
sub
inc
scas
push
aaa
add
in
dec
mov
push
add
int
repz
out
adc
lret
or
xchg
add
ret
push
das
enter
mull
xlat
sti
test
or
lret
push
test
pop
sub
pop
xor
data16
out
or
cmp
es
fisttpll
cmc
sbbl
add
push
add
jge
adc
test
xchg
or
pop
and
sub
mov
push
lret
scas
out
dec
loope
mov
add
sub
insb
mov
cmc
push
enter
lret
arpl
fdivrs
arpl
inc
lods
ret
xchg
adc
lods
cmpsl
pop
cwtl
cmp
lods
punpcklwd
pushf
mov
mov
and
dec
movsl
insl
sub
ja
jns
pop
push
into
mov
sarl
and
sub
push
bound
dec
lea
dec
xchg
xor
push
push
push
push
adc
pop
and
bound
inc
popf
mov
negb
fwait
nop
cmp
jp
xchg
mov
cmc
jbe
push
outsb
je
mov
xchg
mov
iret
sbb
mov
sbb
push
ja
icebp
hlt
adc
in
mov
sub
jge
mov
aas
sub
and
and
iret
aad
loop
xchg
test
pop
mov
jo
out
xchg
xchg
sti
cli
popf
pop
test
insb
pop
push
jnp
sbb
and
ljmp
bound
lahf
dec
mov
xchg
or
fisubl
rclb
enter
or
sti
fucomp
int3
cs
pop
or
cmp
lcall
jp
mov
pop
xor
inc
jo
xchg
movsb
pop
subl
xchg
clc
xor
movsb
sub
xor
jb
out
mov
cmp
sub
test
inc
in
jg
xor
roll
dec
mov
les
cs
xlat
fsts
scas
dec
lcall
subb
inc
and
insl
shlb
ficompl
sti
push
mov
clc
and
and
rol
dec
sub
movsl
jge
imul
push
or
sub
xchg
mov
and
jbe
xchg
add
push
fcmovne
mov
add
dec
fdivl
lcall
xchg
movsl
out
lock
sbb
cmc
int3
xor
movsl
mov
into
sbb
adc
and
es
mov
or
add
lcall
push
sbb
xchg
cli
jno
add
sete
icebp
test
or
inc
movsb
arpl
mov
sarl
fiaddl
pop
xchg
mov
adc
sub
call
ja
or
xchg
mov
mov
hlt
scas
add
push
test
outsb
mov
mov
or
into
push
test
add
push
add
jecxz
push
inc
in
icebp
pop
popf
xor
cld
in
lret
xchg
adc
subb
cmp
dec
rcl
cmp
fdivr
pop
movsl
jbe
out
mov
cmp
and
test
and
jge
pop
mov
inc
sub
or
lcall
dec
addr16
icebp
mov
sub
clc
cmp
inc
mov
sub
fwait
add
imul
adc
xchg
cmp
push
jl
shll
dec
arpl
xchg
push
mov
call
mov
bound
jnp,pn
push
xchg
xor
jbe
cmc
repz
arpl
mov
mov
mov
jbe
cmp
push
push
ss
jno
shll
jae
jecxz
das
jmp
cmp
jns
pop
jns
adc
push
jae
mov
xchg
negb
popf
adc
pop
push
dec
and
adc
xlat
dec
pop
insl
cmp
pop
fdivrl
add
jae
bound
jb
out
enter
mov
cmp
ret
negl
mov
outsl
mov
into
rclb
push
shr
loopne
das
lds
push
notl
lds
mov
mov
pop
or
jo
pop
mov
ljmp
sbb
cltd
imul
mov
add
xchg
and
shll
xchg
daa
scas
sub
shrb
adc
mov
stos
lea
inc
mov
jno
mov
ret
sahf
fisubrl
scas
lcall
mov
ss
movsb
sbb
inc
test
out
int
mov
cmp
pop
mov
idivb
lods
iret
cmp
out
rclb
mov
sti
inc
sbb
pop
push
mov
jmp
insl
stos
cmp
lret
or
jb
in
jg
xor
outsl
aad
push
sub
jo
arpl
and
shl
mov
fdivl
inc
pop
pop
cmp
add
dec
inc
xor
xor
adc
dec
push
lds
cs
jmp
dec
test
sub
mov
jbe
push
mov
push
inc
std
fwait
shll
and
mov
jecxz
mov
pop
xor
scas
mov
scas
pop
fwait
in
dec
mov
rolb
sub
xchg
jp
jbe
pop
iret
or
xor
mov
leave
xchg
mov
pop
pop
movsl
out
fsubr
test
mov
clc
dec
pushf
xor
das
enter
push
pushf
icebp
out
loopne
pop
inc
sbbl
rorb
sbb
or
cmp
imul
xorl
xchg
pop
pusha
jmp
adc
jnp
adc
outsl
add
mov
mov
das
ds
iret
mov
mov
xor
les
dec
dec
push
sbb
pop
setg
loope
insb
and
ds
scas
call
push
push
push
inc
jecxz
sub
jbe
fisttpll
clc
cwtl
sbb
add
xchg
ret
jne
jge
data16
xor
jl
adcl
adc
xchg
cwtl
cltd
jp
jno
xor
add
dec
cld
sub
xorl
lds
test
aad
lea
add
lock
lcall
or
or
pusha
test
shll
bound
out
pop
js
cmpsb
adc
outsb
jno
fwait
lods
mov
xor
testb
jne
aaa
and
jl
pop
outsb
fsub
test
lock
jg
sub
ret
cltd
and
in
push
fidivl
mov
cmpsl
in
add
xchg
xchg
data16
into
push
mov
in
pusha
xchg
hlt
repnz
mov
push
mov
mov
leave
add
icebp
jmp
push
mov
mov
adc
ds
or
and
loope
incl
cmpsl
adc
sbbb
ret
and
or
mov
xchg
sbb
in
cs
repnz
fbstp
fildll
mov
bound
out
add
psubsb
pop
dec
sti
adc
js
rcl
or
aad
popf
cltd
sti
mov
xchg
frstor
insl
out
dec
jnp
inc
xchg
les
nop
xchg
jmp
adc
shlb
gs
popa
les
cmp
in
mov
mov
pop
decl
pop
push
cltd
push
mov
femms
cwtl
dec
mov
cli
mov
cli
inc
dec
cmp
push
cmc
out
pushf
sbb
mov
das
and
test
outsl
pop
lret
out
xlat
jae
add
sarb
jl
fdivrl
inc
out
popf
lcall
scas
cld
outsb
imul
test
xor
jbe
adc
sbb
in
popf
mov
fcoms
fildll
push
push
jmp
dec
scas
into
and
bound
rcll
pop
arpl
adc
sbb
mov
xchg
cmp
insl
or
fcomps
mov
enter
mov
cwtl
shl
pop
lock
xor
rcl
inc
mov
je
or
ds
daa
inc
bound
stc
add
add
insb
in
aam
sbb
fists
push
xor
lahf
mov
cld
xorl
andl
mov
push
addl
xchg
sbb
or
mov
aad
shrl
pop
scas
mull
mov
movsl
push
ja
ss
hlt
sbb
mov
and
sub
clc
cli
jno
out
shll
pop
cmp
push
jl
jg
inc
rorb
cmc
loope
sub
arpl
in
mov
mov
or
sti
inc
jle
int3
dec
idivb
xlat
push
xorb
sub
scas
ds
sbb
out
test
pop
cmp
pop
js
add
jp
pusha
fwait
dec
adc
xchg
cmp
ss
adc
and
icebp
leave
add
sub
sbb
lods
pop
inc
cmp
stos
jle
test
int
cmc
mov
push
iret
aad
test
jns
das
dec
mov
mov
adc
pop
mov
sbb
mov
sbb
push
dec
in
out
inc
movsb
mov
ficompl
mov
pop
jo
xchg
neg
dec
inc
daa
jl
push
shll
xchg
std
mov
dec
fisttpll
sub
fistl
jge
cmc
in
repz
sbb
mov
pop
and
cld
add
mov
mov
sub
mov
add
imul
cmp
fisubs
mov
mov
dec
inc
inc
dec
gs
xor
call
fcoms
shr
sahf
stos
aam
xchg
sbb
stc
jge
jo
aam
fiadds
nop
outsl
inc
cld
push
and
jns
iret
sti
lcall
fnstsw
push
or
aad
pop
int3
test
ljmp
dec
stc
in
dec
cwtl
xor
cmpsl
xor
popa
push
mov
test
xor
sbb
cs
scas
push
in
sub
fdivs
cwtl
fistl
inc
data16
inc
xchg
cmpsl
mov
xlat
cmc
lock
xchg
into
dec
add
sti
aam
and
or
and
and
pop
inc
movsb
mov
inc
lret
push
mov
xchg
int
sub
lods
inc
leave
jge
imul
cld
out
int3
imul
inc
push
or
fildl
inc
add
or
fcoml
movsl
and
lahf
rcl
jns
push
int
leave
aam
or
pushf
scas
mov
aad
je,pt
jbe
aaa
pop
push
cmp
or
xor
loope
out
inc
push
imul
lock
data16
xor
call
xchg
or
jge
in
cli
sbb
xor
xchg
cmp
sbb
mov
loopne
ljmp
icebp
cmpsl
or
sbb
mov
insb
xchg
in
push
and
or
pop
cmp
fidivs
fsubrl
out
or
cld
push
jnp
sub
repz
xchg
mov
mov
pop
loop
dec
xchg
inc
jecxz
mov
imul
pop
sub
lret
dec
jb
xor
arpl
fstpl
sub
pop
mov
stc
push
cmp
pop
adc
je,pt
sub
xchg
mov
enter
cltd
adc
cmp
xchg
push
or
cmp
enter
je
dec
adc
pop
lcall
xor
in
out
imul
xchg
ljmp
or
push
push
sbb
enter
lea
pushf
aas
faddp
outsl
ds
js
sub
jbe
pop
dec
lods
insb
arpl
add
arpl
xor
push
push
sbb
add
mov
xchg
jo
adc
out
jo
cmpsb
das
jle
xor
cmp
fwait
add
hlt
fsubs
jmp
sti
sbb
or
lea
inc
inc
cmpl
dec
stos
push
xor
ljmp
or
and
mov
movsb
or
dec
push
jnp
int3
scas
hlt
fs
adc
sbb
stos
jb
sahf
mov
and
jecxz
mov
repnz
test
cmc
fstpl
ret
cmp
les
popf
test
sub
sarl
dec
insb
and
je
les
outsl
mov
rclb
icebp
jae
mov
sahf
mov
popf
addr16
test
inc
pop
push
mov
fmull
repnz
push
rolb
fcoml
or
push
adc
inc
sbb
cmp
mov
push
ljmp
addr16
add
lret
mov
cltd
decb
out
xlat
adc
test
test
xchg
lods
pop
fldt
inc
mov
and
int
test
in
lods
in
push
stos
pushf
ret
js
mov
inc
aaa
mov
nop
mov
jae
inc
add
cmc
cmpsl
jae
lcall
shr
repnz
inc
add
movsb
ret
jb
shrl
sub
jp
dec
movb
jge
pop
or
setno
pop
pop
test
or
cmp
movb
stos
xor
adc
push
notb
dec
outsb
lcall
outsl
cmpsl
pop
mov
scas
inc
ret
mov
cli
pusha
pop
xchg
sub
inc
mov
sub
mov
test
int
int3
mov
adc
adc
repz
jne
mov
int
sub
mov
gs
mov
pop
jns
fiadds
pop
popa
in
pushf
push
adcb
and
mov
into
rorb
and
xor
sub
getsec
cmp
cmp
add
sbb
cmp
sub
cwtl
cli
add
shll
inc
xor
fbstp
xchg
adc
sub
lcall
cmpsb
dec
shlb
ss
mov
xchg
gs
enter
dec
ss
rolb
call
lea
mov
call
xor
stc
xchg
dec
pop
dec
int3
inc
rorb
dec
nop
pusha
shll
sub
ret
sarb
mov
dec
mov
jecxz
push
jg
mov
jne
aaa
mov
mov
mov
push
arpl
or
pop
push
int3
scas
lea
shrl
iret
push
mov
in
xchg
ds
lock
rcrb
stos
mov
mov
ret
outsl
push
sbb
xchg
xor
data16
jl
jecxz
xor
inc
mov
lea
mov
xchg
and
bound
xlat
push
nop
out
jb
movsb
add
jb
xlat
adc
push
lahf
ficomps
cltd
pop
icebp
mov
lret
dec
out
push
cltd
mov
test
mov
inc
or
dec
ret
pop
rorb
cmp
xchg
xor
jmp
out
mov
push
gs
jo
mov
jecxz
or
ret
mov
insb
add
imul
mov
fmuls
adc
addr16
cmp
ja
add
repnz
jecxz
dec
dec
mov
aad
push
loopne
cwtl
pushf
pop
mov
dec
mov
mov
add
add
bound
adc
fdivs
inc
fadds
pop
xchg
mov
movl
mov
and
xor
and
xchg
jle
mov
cmpsb
pusha
jbe
xchg
xchg
cmpb
mov
push
inc
aas
adc
aas
mov
ljmp
fldcw
add
in
fiadds
call
rcrb
dec
lcall
lret
mov
sub
aam
fadd
sbb
sbb
lods
test
adc
lahf
add
clc
lods
rol
js
fs
cmp
lods
ret
mov
cli
dec
xchg
ss
out
jge
sub
shl
jbe
cwtl
in
mov
mov
sbb
jae
sub
inc
mov
iret
sub
mov
or
jle
mov
mov
mov
jno
imulb
rol
das
arpl
icebp
dec
sarb
scas
mov
cld
cld
mov
addr16
repz
ret
movsl
pop
sbb
cmpsb
add
and
push
imul
loopne
shlb
fiaddl
dec
stos
mov
cltd
repz
cmc
mov
shlb
sar
push
inc
es
pusha
sahf
cmpsl
loopne
sub
mov
mov
push
loope
pop
cmc
js
adc
nop
test
mov
xchg
stc
stos
pop
mov
fidivs
mov
enter
pop
xlat
mov
inc
punpcklwd
bound
mov
fstpl
in
rclb
outsl
das
arpl
push
hlt
cwtl
or
int
pop
pushf
loopne
ficoms
mov
add
pop
gs
in
aam
aad
cmp
aam
pop
pop
filds
push
stc
ficoms
mov
lcall
and
mov
ret
insl
call
repz
jb
lods
xorl
sub
out
stos
cmp
mov
stos
inc
ficoms
out
clc
scas
outsl
rcl
dec
fidivs
mov
jg
pop
pop
xchg
loop
test
fisttpl
xor
inc
jg
in
sub
int
xchg
out
iret
xchg
pop
stc
out
popa
iret
negb
or
mov
mov
mov
test
and
inc
mov
cmp
jnp
movsl
add
je
sbb
and
jno
into
sub
mov
lods
mov
or
pop
mov
or
lods
adc
lock
icebp
loope
in
js
add
pop
sub
int3
out
and
pop
xchg
clc
out
or
scas
shrb
gs
insl
jmp
adc
mov
pop
add
out
test
movsl
mov
mov
cmp
push
cmpsl
decl
pop
mov
push
jnp
shrl
test
sahf
sub
jmp
pop
cmovge
loop
push
xor
mov
cmp
addl
or
lea
mov
cmp
movb
xchg
dec
xor
inc
mov
arpl
sub
inc
subb
xchg
test
sarb
pop
mov
push
repz
xlat
inc
sub
inc
lahf
push
std
ss
ficomps
movsb
push
ljmp
scas
mov
fcmove
cmpsb
push
outsb
xor
in
mov
repz
or
or
add
mov
notl
movsl
adc
cmp
cs
mov
mov
add
jge
push
cmp
scas
jle
add
mov
popf
cmp
jg
lds
add
aaa
add
mov
lcall
inc
jge
sti
mov
add
pop
fmul
add
test
add
jnp
repz
jae
jp
jnp
std
out
aaa
flds
add
xor
int
mov
mov
jecxz
adc
mov
xor
fisttpl
mov
inc
inc
adc
mov
repz
jnp
arpl
mov
cltd
push
sti
fs
aad
jno
nop
add
or
pop
mov
sub
or
ljmp
jl
jne
stos
add
sub
inc
adcl
subb
fcompl
pop
dec
mov
clc
aad
mov
iret
stc
in
sbb
fildl
movsb
inc
dec
shll
dec
mov
xor
jle
lahf
pop
jecxz
test
fistps
adc
inc
scas
mov
loope
into
jmp
insl
popa
mov
gs
xchg
fbld
mov
mov
int
cmp
jnp
inc
dec
test
scas
aam
cs
sbb
mov
push
mov
daa
gs
es
mov
std
stc
fs
inc
sub
hlt
in
aas
adc
mov
xchg
push
loop
and
decb
or
repnz
int3
xchg
or
lock
mov
pop
mov
add
push
lock
ret
jge
jo
js
lahf
sub
or
arpl
xchg
fcmovu
xchg
dec
dec
or
adc
mov
dec
cs
mov
lret
xchg
mov
aas
cs
dec
inc
lret
lods
mov
into
std
imul
in
arpl
fcmovnbe
subl
fwait
rcrl
filds
mov
cmp
add
push
in
sbb
jg
pushf
adc
daa
push
adc
loop
push
int
psrlw
stos
jnp
pushf
or
pusha
in
adc
and
pop
lcall
jle
insl
cwtl
xchg
imul
lcall
std
fdivrl
addr16
enter
loopne
inc
jbe
or
pop
fimull
push
xor
popa
jl
xor
xchg
dec
sbbb
cli
dec
dec
push
xor
lods
clc
mov
and
sub
inc
in
or
jmp
int
xchg
clc
gs
aaa
int
inc
stc
rcll
dec
inc
test
out
cmpsl
pop
notb
loopne
push
cmp
or
pmulhw
or
les
add
pop
movsl
incb
push
fdivs
mov
idivb
imul
ret
mov
mov
mov
pop
sbb
cmp
subl
imul
push
cmp
fsub
es
and
mov
fldcw
icebp
addr16
insb
pcmpgtb
cmp
dec
dec
std
les
cmc
push
pop
std
test
cmp
mov
aas
jl
cmp
inc
mov
dec
iret
cmp
fimuls
xor
or
icebp
mov
xchg
dec
insb
imul
or
sbb
loopne
pop
sub
out
pop
and
jmp
jb
push
jbe
add
pop
or
addr16
pop
sub
xchg
mov
mov
jge
push
addr16
clc
das
sbb
push
jae
rcll
cmpsl
outsl
cmp
add
and
fsts
into
shlb
sbbl
aam
add
shl
sbb
outsb
xchg
pop
add
pop
or
loopne
cmp
jp
inc
and
lret
cmp
or
fucom
xchg
insl
push
test
fiadds
ljmp
test
cli
xchg
cld
jg
fmul
into
lds
adc
ficoms
jns
aaa
insl
fcomip
and
outsl
sub
shll
imul
xchg
repnz
je
xchg
stos
push
sbb
rcl
call
cmp
xchg
pop
hlt
pushf
je
sbb
mov
std
pop
add
adc
movsl
movsb
dec
sbb
xchg
dec
pop
scas
insb
call
add
xchg
cmp
dec
xchg
inc
js
inc
or
jns
sbb
iret
lock
sbb
or
rorb
adc
test
and
les
movsb
sti
mov
xchg
dec
mov
add
mov
clc
imul
jl
aas
scas
arpl
mov
insb
sub
xchg
sahf
push
cmp
sub
outsl
test
repnz
roll
xchg
cmp
xchg
cs
jmp
pop
inc
dec
rolb
mov
test
sub
data16
stc
fprem
negl
mov
out
ds
mov
cltd
mov
push
pop
outsl
cs
in
sub
jb
mov
push
sbb
pop
adc
mov
mov
sbb
pushl
outsl
aam
sti
divb
and
daa
mov
adc
cmp
mov
add
push
cwtl
not
jecxz
push
stos
xchg
mov
clc
insb
pop
jnp
and
addr16
sub
mov
test
aam
shll
or
fnstsw
daa
pop
mov
adc
dec
or
sub
pop
das
lea
mov
addr16
in
fldt
call
jb
sarl
and
or
adcb
jl
int3
loope
push
je
xchg
push
mov
or
dec
add
or
ljmp
jge
repz
add
rol
push
jg
ljmp
jb
in
xchg
pop
jp
dec
outsb
xchg
xor
push
jmp
pop
cli
shll
jle
pop
mov
popa
push
jb
add
das
inc
pop
popf
iret
rcrb
jg
mov
or
mov
aaa
lods
add
xchg
cmc
sbb
cmp
push
inc
or
mov
push
in
xor
xchg
pop
mov
iret
ljmp
mov
push
xor
or
icebp
jle
rol
jmp
cld
mov
mov
or
add
sbb
sbb
push
pop
mov
push
shl
sbb
dec
jbe
insb
arpl
lret
loopne
dec
or
sbb
int3
pop
dec
pop
mov
xor
shl
jge
scas
insb
inc
fs
inc
bound
dec
mov
push
mov
scas
fcomp
mov
xchg
dec
jne
add
jge
pop
cmp
popa
fistl
mov
xchg
nop
push
jle
out
fstl
inc
test
jb
sbb
or
dec
cld
gs
dec
xor
stc
fnstcw
mov
push
cld
clc
adc
adc
rcll
lret
xor
iret
aad
mov
into
fsub
lahf
jecxz
movsl
push
dec
sahf
add
fiaddl
sub
mov
jp
xchg
insl
aas
or
scas
xlat
enter
dec
imulb
push
and
movsb
cmpsl
and
fildl
pop
hlt
scas
cmc
pop
mov
scas
scas
sbb
sti
in
in
add
arpl
mov
mov
mov
aam
inc
popa
push
fucomi
mov
xor
dec
mov
or
add
movsl
sbb
mov
ret
bndldx
es
add
and
fistpll
push
into
icebp
sbb
in
push
lret
jae
subl
stos
das
xlat
addr16
xchg
les
aam
enter
mov
sarb
mov
mov
sbb
lcall
push
lods
in
mov
testb
dec
sbbb
sbb
ret
jne
xchg
mov
dec
mov
stos
add
add
hlt
aam
adc
inc
xor
fldenv
pusha
lret
push
mov
les
push
jge
mov
sub
ret
out
xchg
or
mov
in
int
sbb
ret
ret
mov
gs
dec
stc
imul
mov
popa
push
out
nop
fsubrl
and
add
mov
jle
push
ret
andb
push
mov
mov
jae
test
push
lcall
out
ss
bound
cmpsb
xchg
int
orl
adc
pop
or
arpl
jge
pop
call
lock
and
sub
and
outsl
repz
dec
adc
jmp
imul
mov
pop
jae
mov
inc
fisttpl
push
scas
int
mov
es
and
repnz
xlat
xchg
clc
xchg
lea
dec
push
fs
fsts
pop
xchg
add
sub
orb
sub
xchg
xchg
sbb
pop
add
xchg
adc
repz
and
adc
dec
ja
test
mov
cmp
xchg
xor
push
nop
mov
lock
insl
stos
mov
imulb
pusha
fs
jno
inc
in
fs
mov
sbb
das
mov
sbb
push
decb
inc
ds
popa
cmp
aad
mov
pusha
ss
lret
jnp
stos
cwtl
add
dec
inc
jo
mov
sub
push
sub
add
mov
gs
and
mov
mov
mulb
gs
dec
adc
inc
xchg
ret
mov
cmpsl
in
fs
out
pop
xchg
mov
and
cwtl
bound
and
or
rorb
cmpb
mov
faddl
popa
or
add
mov
enter
pop
dec
outsb
sbb
or
in
xchg
add
add
js
jge
cmp
xchg
mov
cmp
cltd
pop
call
test
popf
jle
mov
rol
out
movsb
sbb
xor
adc
ss
test
adc
mov
cmp
mov
mov
popa
mov
cli
scas
movsl
jg
fstl
cmp
scas
pop
sub
inc
mov
push
addl
and
add
inc
push
and
mov
inc
scas
xchg
cmp
xchg
mov
psubsb
xchg
xchg
aaa
das
rcrl
sbb
cmp
pushf
jle
fildll
call
sbb
mov
mov
js
je
push
out
subl
scas
rorl
mov
rcrb
lcall
push
fwait
loop
subl
jb
mov
push
push
lds
inc
icebp
jecxz
into
js
rorl
incb
or
mov
cltd
cltd
stos
out
ds
xor
mov
out
mov
movsl
and
adc
mov
gs
mov
or
xor
push
jne
pushf
clc
xor
mov
mov
xor
mov
push
ret
js
mov
or
inc
mov
add
push
dec
lea
jbe
daa
jb
sbb
arpl
in
in
mov
xor
or
mov
sarl
std
mov
dec
jmp
loop
inc
aad
adc
pop
jecxz
cwtl
dec
pop
push
adc
sbb
ljmp
push
adc
xor
mov
fdivs
imul
jle,pn
xchg
push
jae
mov
dec
outsb
push
push
dec
sti
shl
push
lea
or
fistps
daa
cmp
mov
inc
dec
pop
into
or
ficompl
setg
pushf
jg
sarb
and
pop
bound
mov
inc
jp
es
incl
mov
push
les
sub
sub
ljmp
enter
xchg
dec
mov
cmp
fiaddl
xlat
stos
jge
in
int
mov
sbb
jns
ljmp
adcl
testb
nop
or
mov
sbb
mov
pop
or
mov
les
mov
add
or
dec
mov
insl
or
scas
sub
aaa
test
sub
push
xor
push
dec
test
inc
mov
andb
and
test
sahf
cmp
sti
cmpsb
cmp
js
jle
jns
cld
into
add
int
stos
fwait
cli
push
arpl
cwtl
rolb
shr
sarl
mov
scas
adc
outsb
and
jns
into
jmp
scas
mov
dec
mov
mov
aad
mov
repnz
sarb
pop
and
int
push
inc
pop
pop
jns
mov
cmp
je
repz
mov
aaa
jg
shl
ljmp
cmpsl
fdivs
dec
hlt
movsl
scas
aam
sub
ss
and
pop
stos
or
add
and
jl
mov
movsl
mov
sub
jmp
mov
inc
sbb
dec
jne
push
jne
scas
decb
fiaddl
outsb
lcall
cmp
xor
out
push
int
mov
xchg
pushl
fadd
cmp
test
mov
cli
inc
cmc
aam
gs
inc
sti
mov
cmpsl
push
jnp
rcrb
out
hlt
inc
push
cmp
and
push
inc
xchg
or
repz
scas
jg
fadds
sub
sbb
pusha
add
shr
cmc
and
and
dec
push
pop
cltd
test
mov
sar
xchg
inc
xlat
sub
mov
mov
vpcmpgtw
push
stos
mov
jecxz
shl
mov
fists
inc
bound
mov
loop
lcall
sarb
mov
and
arpl
filds
movsl
insb
ljmp
call
add
mov
cmc
pop
je
fdivrl
enter
push
mov
cwtl
cmp
shll
mov
mov
sarl
mov
mov
jns
jnp
xor
fcompl
je
fcomps
and
and
aas
xchg
rol
mov
js
mov
xchg
or
shlb
inc
xchg
scas
sbb
cmpsb
andl
daa
ret
push
mov
fnsave
sub
fcoml
xchg
mov
dec
inc
cltd
testl
push
imul
pop
ror
jl
ret
out
add
out
loop
push
leave
sahf
les
adcb
add
ss
sub
xchg
insb
add
in
arpl
mov
push
movsb
subb
aaa
stos
mov
sbb
pop
adcl
jns
into
and
call
fwait
push
inc
loopne
pushf
jmp
xor
test
dec
out
or
mov
out
xchg
popf
adc
xchg
icebp
das
xor
xor
in
mov
and
mov
adc
pop
jp
ss
rcrb
dec
or
sbb
xorb
cmp
cmp
add
adc
aam
sti
je
imul
lcall
or
sub
mov
xchg
and
sahf
mov
sahf
mov
jb
out
mov
stos
and
ds
jns
xchg
push
enter
bound
mov
lcall
aas
pextrw
jle
in
cld
cltd
test
mov
loope
adc
dec
jne
out
outsl
int3
nop
insb
test
xchg
sbb
and
repz
mov
adc
aad
call
cwtl
sbb
jne
sbb
or
popf
rcrl
iret
in
movsb
xor
test
cmp
cmp
jge
scas
test
mov
mov
push
fldln2
jp
sub
inc
mov
jb
stc
pop
bound
jmp
push
sbb
cltd
mov
cmp
ds
xor
mov
push
sbb
cmc
xorl
xor
pop
sbb
dec
test
lret
je
leave
cmp
stc
dec
mov
popf
inc
cmp
lods
cld
or
repz
jp
push
rol
sbb
out
iret
or
jbe
mov
test
faddl
mov
int3
adc
rol
xchg
icebp
dec
push
dec
mov
pushf
imul
adc
add
mov
stos
jnp
push
dec
shlb
xchg
lods
push
push
cld
rcrl
fistl
sbb
dec
jae
pop
pop
mov
mov
imul
insb
out
pop
pop
repz
sbb
adc
mov
add
and
cmpsb
adc
rcrb
inc
cmp
outsb
ret
hlt
xchg
mov
and
ret
in
inc
rcr
dec
sub
cs
cmp
pusha
pop
in
int
push
in
mov
repz
std
insb
or
lret
cmpxchg
addr16
popa
push
fs
lods
pop
push
cltd
iret
and
jo
incb
shrb
in
roll
iret
add
add
jmp
cli
sbb
sbb
xor
add
adc
sbb
add
iret
pop
mov
xchg
stos
and
jb
mov
jne
xor
orb
popf
inc
daa
xchg
jo
int3
push
test
dec
sub
add
xor
pushl
pop
cmp
xor
shll
lea
fcompl
shll
push
sub
adc
mov
and
lds
mov
test
mov
add
sub
popf
push
fimull
mov
add
es
pop
loop
ljmp
faddp
add
jg
out
outsl
test
cmpsb
mov
push
push
xchg
out
sti
cltd
adc
lods
clc
add
scas
dec
add
sub
xchg
pop
lcall
add
sub
stos
mov
dec
mov
inc
lds
mov
sbb
nop
dec
adc
push
das
nop
cmp
or
in
loopne
incb
xchg
inc
xor
repnz
jge
pop
push
push
test
loope
jecxz
xchg
hlt
out
bound
xor
aas
mov
loopne
fwait
lret
push
push
shlb
add
push
inc
int
xchg
cmp
or
sbb
aam
dec
mov
jle
mov
outsl
movsb
in
push
inc
mov
dec
sub
int
lds
fs
mov
aas
cld
mov
adc
mov
cmpsw
imul
out
stc
mov
pop
test
xchg
lods
xchg
iret
push
xchg
test
pop
cmpsb
ret
mov
cwtl
leave
xor
in
ficoml
je
sub
add
push
add
mov
lds
dec
imul
mov
inc
xor
or
jg
cmpb
mov
mov
clc
call
mov
enter
imul
leave
inc
push
dec
push
int
xchg
call
or
jnp
and
fildl
push
sbb
cmpsb
lods
pop
push
and
stc
shlb
push
test
add
lds
jp
je
aaa
inc
bound
and
lret
xor
jge
dec
int
cmpsb
stos
dec
jo
or
stos
add
pop
pop
pop
jo
sbb
add
int3
sub
stos
aam
out
push
call
das
fs
pop
pop
pop
cmp
xchg
movsb
lret
add
negb
jae
mov
xor
and
test
mov
out
adc
mov
xchg
lea
inc
arpl
test
sbb
dec
mov
mov
adc
subl
pop
dec
pop
mov
xchg
sbb
jno
inc
push
out
enter
in
daa
jne
fildll
adc
popw
sbb
inc
fstps
shll
shlb
test
sub
mov
repz
add
inc
push
sti
fldl
inc
sub
pop
add
negl
insb
mov
mov
jecxz
popa
xor
lods
pop
jns
aas
sbb
pop
mov
mov
mov
xor
mov
mov
in
jne
sti
pop
and
xor
inc
mov
xor
mov
data16
dec
xchg
jo
cmp
mov
xchg
and
sub
cmp
sti
sarb
sub
call
xchg
lods
ret
into
mov
xchg
sbb
cld
lds
xchg
cld
xchg
inc
fiadds
jae
pushf
add
or
cwtl
stos
test
fisttpll
repz
pop
jecxz
mov
cltd
xchg
cwtl
sub
mov
das
jnp
sub
pop
cmp
pop
xchg
xor
cmp
adc
mov
cmp
and
jmp
inc
nop
push
cmpsl
bound
fcomip
in
enter
in
bound
sub
add
lods
xor
and
inc
jmp
mov
fs
jge
push
fwait
dec
pop
xchg
pop
xchg
mov
mov
xchg
push
inc
mov
mov
call
sysexit
es
mov
scas
rcl
push
fsubrs
lcall
mov
dec
xchg
jp
mov
ret
mov
mov
adc
sub
mull
push
and
adc
push
xchg
adc
std
in
add
add
out
test
and
cmp
lret
push
in
and
mov
mov
and
mov
pop
jmp
add
xchg
lret
lods
push
movsl
hlt
lahf
add
cmp
push
adc
loopne
lds
mov
es
repz
and
aas
lds
jp
sub
sbb
pop
int
scas
add
xor
aas
outsb
add
cmc
jl
repnz
jb
out
shrb
mov
je
and
jge
pop
mov
lock
pop
and
pop
jne
ret
pop
das
mov
es
fwait
cmp
mov
and
mov
in
aad
mov
inc
mov
mov
sti
pop
lret
inc
ljmp
lea
dec
cmp
in
imul
cmp
jp
cs
testb
jae
pop
push
sbb
lahf
mov
inc
mov
pop
push
ret
jae
sbb
dec
inc
push
add
mov
inc
ljmp
dec
je
xlat
notl
jne
push
pop
adc
cmp
call
pop
orl
jno
and
test
fs
and
cs
pop
or
imul
push
pop
gs
inc
sbb
push
pop
arpl
lahf
iret
out
pop
sbb
enter
scas
sbb
add
pop
pop
subb
loop
inc
ds
and
xor
mov
push
movsl
pop
sarb
mov
add
sti
out
adc
adc
push
mov
xchg
lea
dec
cmpsb
pop
sub
orb
lret
fs
sahf
out
outsb
pop
cli
pop
mov
ret
pop
push
and
daa
test
pop
std
xor
jp
and
fwait
icebp
xchg
andb
inc
adc
jne
xor
fsubp
lret
xchg
ljmp
in
sbb
xchg
and
sub
subl
rcrb
jo
cmpsb
and
fbld
loopne
loopne
out
cmp
leave
js
sarl
out
xchg
jecxz
icebp
movl
mov
imul
mov
sbb
loope
or
and
adc
pop
cmpl
mov
in
jmp
xchg
jno
adc
xor
sub
pop
push
insl
jg
test
cmp
jnp
aaa
mov
pushf
fidivrs
test
ljmp
or
push
jge
mov
aad
mov
or
imul
lret
dec
mov
push
stos
xor
addr16
lcall
push
xchg
inc
mov
or
mov
in
ds
fs
lret
rorb
add
cmp
jno
sub
ss
push
jb
cmc
fwait
push
aaa
enter
outsb
or
ds
or
repnz
pusha
jge
cwtl
aas
mov
jne
xor
movsl
push
inc
xchg
sub
ret
into
jns
jle
xchg
xor
or
rcr
jns
inc
stos
ljmp
or
ret
or
xchg
dec
pusha
pushf
negl
or
cmp
outsb
mov
mov
stos
cmpsl
sbb
addr16
sti
sub
lds
pushf
cmpsb
out
sbb
jae
and
stos
xchg
xor
in
mov
mov
repnz
xor
mov
call
cmc
or
call
scas
gs
pop
das
mov
mov
push
sbb
lods
xchg
inc
mov
je
jnp
ja
lcall
adc
jmp
movsb
stos
and
mov
adc
jl
push
stos
test
inc
pop
mov
in
test
push
jp
stos
xchg
cltd
mov
sti
and
cmp
data16
add
add
dec
cli
adc
inc
mov
push
clc
and
jmp
test
dec
lahf
enter
test
js
sbb
inc
xchg
mov
adc
sbb
pusha
mov
cmp
jno
in
or
daa
dec
repnz
mov
loope
mov
sbb
mov
cld
dec
dec
ficoms
stc
push
jle
sub
xchg
add
mov
xchg
fs
and
enter
mov
mov
pop
and
jb
jmp
mov
insl
jns
jmp
or
dec
push
xchg
xchg
notb
lds
inc
outsb
cmp
addr16
jge
out
mov
jmp
test
call
adc
xor
hlt
enter
xchg
cmp
push
or
cld
std
inc
pop
add
push
movsl
popf
movsl
pop
das
aad
jp
cmc
testl
lock
sbb
push
jno
rorb
inc
jb
or
sub
testb
add
ja
sahf
push
int
or
sub
pop
fbld
bound
out
int3
lret
mov
fcomps
jns
pop
push
or
sub
jmp
and
jns
rcrb
or
jb
add
shl
sbb
xchg
sbb
mov
imul
test
jmp
add
add
or
loopne
sub
push
into
mov
mov
push
xchg
mov
sub
lcall
dec
xor
or
ss
sub
and
enter
pushf
and
js
lahf
sahf
push
mov
push
mov
adc
rcll
pushf
adc
sbbl
fcoml
pop
test
push
popa
push
rcrb
testb
xchg
sub
arpl
mov
cwtl
mov
test
clc
icebp
jnp
xor
inc
mov
orb
add
stos
faddl
data16
add
xchg
pop
js
cltd
das
xlat
jmp
rcrb
jmp
xchg
xlat
push
and
sbb
nop
mov
leave
pushf
mov
repz
pop
leave
mov
call
pop
and
jecxz
ret
or
push
movsb
rolb
enter
jb
sbb
xchg
pop
push
push
rcrl
sub
pop
adc
mov
fdivrs
jbe
jle
mov
inc
adc
jno
and
mov
xchg
jo
or
lret
pop
rorl
push
cltd
adc
in
out
lea
aas
jno
popf
mov
addr16
push
aam
pop
jo
out
ss
lods
mov
mov
xchg
xchg
in
aad
cmp
in
lcall
pop
mov
rol
jle
add
cmp
imul
or
or
fprem
mov
cmpsl
xchg
xor
ret
aaa
fnstsw
out
enter
leave
jmp
popa
mov
out
lea
inc
pop
jmp
fadd
push
xor
fisttpll
pop
cmp
mov
test
dec
pop
pop
movsb
fmul
xor
ret
pop
cmp
fsub
and
jae
sbb
test
fs
imul
scas
sbb
or
cmp
fs
adc
rcll
mov
sbb
sbb
add
imul
movsl
jge
jg
daa
mov
fildl
mov
stos
divl
inc
adc
jo
pop
push
or
shll
daa
shlb
mov
push
cmpb
mov
xor
test
mov
cmp
sbb
out
ljmp
lods
xchg
bound
push
sub
into
int3
mov
adc
dec
addr16
jno
pop
popa
in
adc
adc
int3
call
and
push
fs
add
arpl
xchg
fwait
pop
insl
aam
sbb
mov
test
fstpl
fsubl
jmp
jg
aad
pushf
xchg
push
sub
xlat
cmp
insb
push
cmpsb
pop
cld
sub
mov
pop
mov
ret
pop
inc
push
sbb
xchg
stos
lds
mov
orl
push
pop
outsl
arpl
cmp
loopne
cmp
pushf
aam
or
push
lret
lea
addr16
mov
jg
cmp
sub
sbb
aad
insl
sbb
shrb
filds
lock
inc
xlat
incl
xlat
mov
outsl
jg
cld
mov
negb
test
leave
stc
mull
fsubrs
xchg
push
inc
sub
fstps
xor
data16
js
das
out
dec
mov
lret
rolb
push
popa
xlat
notl
cmpsb
fcomi
cmp
dec
pop
mov
pop
into
mov
scas
bound
xchg
lret
sub
inc
inc
and
lock
clc
mov
ja
jg
adc
cmp
add
adc
dec
cmp
sub
gs
jle
mov
fcmovb
sub
imul
je
aas
addr16
sbb
pushf
outsl
adc
pop
ja
jns
jno
sbb
leave
addr16
pop
stos
repz
les
les
mov
mov
out
inc
clc
fcomip
lods
jne
or
push
rolb
ret
cmc
or
inc
sbb
push
mov
xchg
sub
int
sbb
jne
and
and
arpl
jne
cmpsb
dec
pop
jnp
out
int3
pop
adc
xchg
jno
je
xor
test
lcall
fistl
and
lret
push
jp
inc
fdivrl
push
push
mov
loop
adcb
scas
lret
daa
inc
jbe
clc
xor
pop
lods
or
mov
jns
mov
sbb
sbb
inc
cld
push
ds
adc
arpl
hlt
pop
jecxz
inc
jae
sbb
adc
lret
adc
hlt
outsb
int3
cmpsl
push
aaa
mov
rol
lahf
jb
flds
and
out
mov
movsl
pop
sbb
and
repz
movsb
jle
jge
stc
in
mov
je
jae
jo
test
cli
test
push
ja
dec
mov
es
mov
in
sbb
jmp
or
addb
jmp
movsb
add
dec
add
xchg
cmp
push
adc
add
mov
in
lds
mov
mov
xchg
dec
pop
mov
sub
hlt
mov
sbb
in
jns
xchg
sbb
sub
sub
popf
lahf
incb
lcall
cltd
or
andb
test
mov
inc
filds
iret
push
test
gs
subl
iret
mov
pop
popf
dec
mov
out
icebp
and
arpl
adc
in
or
pop
fsubs
int
test
fdivl
sbb
out
insb
xor
ds
dec
jmp
cs
movsb
sbb
jne
adc
out
and
push
add
pop
cli
push
outsl
xor
fwait
clc
cs
add
test
fwait
in
pop
mov
aad
jg
fucomp
ret
roll
lcall
push
push
cmp
pop
rclb
and
lret
aas
push
cwtl
ss
push
ret
cmp
enter
jbe
cmp
cmpsl
inc
idiv
mov
and
imul
adc
jb
xchg
loope
das
daa
insl
jo
add
repz
sub
aaa
iret
in
sbb
or
sub
jl
adc
aad
cmp
mov
std
xor
shll
xor
call
movsb
adc
inc
adc
loope
outsb
adc
jle
inc
adc
cwtl
cmp
into
push
test
arpl
aam
jecxz
pop
sbb
jae
ja
ljmp
fs
dec
mov
xchg
in
punpcklwd
pop
or
ficompl
cmpsl
jns
loop
adc
pushf
insl
test
mov
or
push
mov
into
mov
adc
xor
loopne
mov
mov
arpl
sub
js
in
aaa
insb
push
pop
mov
adc
add
test
int
xchg
in
jne
push
out
xchg
int
out
adc
or
mov
adc
inc
dec
pop
nop
xchg
pushw
xor
aaa
jle
cli
adc
push
jno
dec
imul
cmp
iret
pop
jns
setbe
sbb
dec
cld
push
xor
xchg
inc
pop
sub
insl
xor
addl
push
or
cmp
mov
iret
sub
rorl
test
out
rcrl
or
mov
lock
iret
mov
jg
sub
pop
mov
adc
repnz
mov
adc
xor
frstor
xor
inc
mov
cmp
sbb
dec
aad
push
inc
or
xchg
sbb
push
sbb
ret
roll
pop
movsb
notb
je
cmpsl
add
or
test
out
inc
es
orb
pop
fsub
adcb
cwtl
and
jnp
sbb
les
jmp
mov
mov
mov
mov
dec
sub
sbbl
adc
popl
jle
out
lods
xchg
pop
mov
push
lret
mov
sub
cmp
dec
cmc
outsb
dec
ficompl
adc
test
jl
adcb
jo
daa
test
loopne
dec
subb
dec
in
dec
in
xor
sbb
push
mov
pusha
loop
adc
add
in
fistl
push
rcr
or
inc
and
int
pop
imul
in
inc
je
jecxz
xor
addr16
push
fs
jo
cmp
sbb
sub
dec
jge
lcall
fldenv
stos
aaa
sti
jae
loopne
nop
icebp
outsb
mov
adc
jne
adc
inc
test
dec
int3
sbb
scas
loop
bound
in
mulb
fwait
out
rcrb
popa
jns
add
sub
aam
testl
bound
fwait
es
lret
out
cli
mov
pop
push
adc
push
mov
iret
rcrl
ja
loop
sub
mov
repz
aad
xchg
pop
dec
ror
fwait
mov
andl
jae
inc
test
mov
cmp
ficomps
ror
jp
lea
lcall
pop
shlb
aam
mov
lret
pop
fildl
mov
push
hlt
mov
xchg
cmp
adc
sarb
or
xchg
scas
adc
shll
outsl
jbe
push
xchg
or
sub
fadds
fwait
dec
out
cmp
dec
sub
test
jns
outsl
mov
dec
adcb
out
sub
xchg
or
mov
xchg
push
addr16
out
fdivrs
ja
sub
call
add
ret
cmp
ds
add
aam
and
mov
mov
adc
fsubl
mov
lcall
push
add
adc
adc
ds
push
sbbl
push
orb
dec
adc
hlt
popf
bound
lahf
xchg
or
sub
test
aad
shl
dec
jle
sub
add
clc
test
out
fwait
incl
movsl
sbb
lahf
mov
fstpt
sub
cmp
in
repz
les
push
pop
or
adc
and
outsl
mov
jge
movsb
pandn
add
sub
sub
mov
or
adc
xchg
inc
call
inc
adc
jp
fcmovnb
jae
test
fimull
notb
add
mov
imul
ss
and
or
mov
pop
lcall
xchg
xchg
xchg
xor
xchg
mov
dec
jl
lcall
mov
or
mov
jnp
es
int3
lock
shrb
inc
jo
pusha
pop
mov
ja
pop
cmp
ret
das
dec
fcomps
fnstsw
cs
outsl
js
and
test
or
int3
imul
xor
pusha
jp
lret
orb
fs
dec
adc
ret
rcrb
add
movsb
add
or
mov
pop
stos
mov
push
repnz
xchg
jmp
xchg
and
add
movsl
jno
and
shlb
aaa
lds
movsl
cmpsl
je
add
sub
push
mov
inc
push
add
push
js
int3
js
sub
jmp
jecxz
repnz
adc
or
daa
bnd
out
add
inc
into
call
mov
fdivrp
sub
call
mov
pop
jl
xchg
popf
cmp
stos
sbb
mov
mov
pop
test
jo
push
jl
dec
pop
push
sub
pushf
adc
push
xor
jo
pop
xor
addr16
dec
jmp
or
mov
aam
ljmp
push
sub
bswap
cmpsl
jnp
sbb
push
dec
xor
push
fcoms
dec
in
aas
in
lea
push
mov
popl
lea
rorb
xor
push
insl
ja
sbb
push
mov
xor
int
divl
dec
test
push
adc
shlb
fwait
out
jnp
repz
pop
outsl
outsl
scas
jge
sbb
div
sar
push
and
fdivrs
cmp
inc
dec
sahf
enter
dec
mov
mov
jmp
sbb
fwait
xor
mov
dec
sub
mov
xlat
enter
fisubl
iret
insl
popf
add
and
lds
testb
fidivrs
fwait
xor
inc
shrl
mov
sub
sbb
adc
lea
ds
or
arpl
adc
call
rcrb
sub
fdivrs
orl
rcrb
int3
hlt
sbbl
in
pop
dec
sbb
addb
push
inc
jg
jcxz
mov
lret
mov
sub
fs
fists
xor
mov
js
insb
mov
mov
add
mov
movl
mov
outsl
dec
arpl
xchg
add
out
call
ja
xchg
rorl
cld
sub
pop
orb
lods
add
cmp
sbb
enter
sbb
imull
notl
mov
xchg
aas
add
sti
cmpb
nop
mov
pop
push
lock
add
mov
or
add
pushf
mov
sub
xchg
push
int3
jnp
pop
dec
cmp
xchg
enter
or
orw
dec
push
cli
out
arpl
and
cltd
mov
jae
adc
dec
stos
xchg
loopne
sub
jb,pt
inc
mov
pop
dec
insb
fisttps
test
test
mov
aaa
dec
sub
rsm
jmp
insb
sbb
jne
jo
cmp
cmp
movsl
stos
mov
push
aad
dec
loopne
dec
push
xchg
in
push
fimuls
cmpsl
sbb
fildll
das
mov
inc
jne
pusha
lea
adc
adc
push
clc
orb
inc
and
test
sub
jnp
popf
mov
add
rorl
xor
scas
cmpsb
inc
mov
mov
loopne
mov
fadd
adcb
repz
nop
sbbb
push
cmp
fdivr
lret
scas
push
imul
sbb
push
call
clc
cld
add
ljmp
sub
gs
movsb
inc
inc
fwait
jg
push
add
jmp
test
insb
mov
test
inc
jb
xchg
jl
pop
pop
mov
mov
insl
icebp
and
dec
pushf
insb
insl
inc
insb
sarb
xor
push
and
sahf
test
mov
mov
pop
aam
lds
cs
fists
cmp
out
or
pop
push
pop
cmp
imul
mov
in
js
mov
rolb
imul
mov
ret
sub
inc
test
cmp
ret
pop
adc
pop
movsb
cmp
push
rcrb
das
sbb
add
ja
mov
mov
adc
push
xlat
mov
adcl
mov
xorl
out
push
mov
clc
cmp
divl
mov
pop
lock
lret
push
pop
add
adc
insb
decl
xchg
mov
jmp
push
mov
psraw
xor
inc
jae
sub
cmpb
fists
insb
pop
fmul
mov
add
add
mulb
push
into
dec
xlat
inc
nop
add
arpl
add
test
inc
jae
les
lret
adc
gs
loope
fsubs
mov
gs
inc
test
mov
in
lret
mov
mov
das
mov
or
sub
dec
lods
stos
sub
fistpl
push
add
shrl
dec
mov
push
pop
aad
jo
jae
fsubrp
in
test
add
lds
gs
fmulp
call
lcall
jecxz
ja
jno
sahf
sarb
mov
fcmovbe
test
cltd
test
insb
pop
sub
lods
push
lret
loop
nop
out
addb
dec
cmp
cmp
mov
pusha
xchg
js
or
xor
sub
xchg
pop
cmpsb
ja
aas
les
mov
cs
jecxz
shrb
lods
aad
imul
lahf
or
out
add
cmpsl
testl
cmpsb
int3
xor
sub
lahf
sub
cld
shlb
test
xor
dec
fwait
jne
mov
xchg
in
rcll
mov
push
into
add
scas
cwtl
scas
andb
popf
fisttpl
clc
dec
rcrl
mov
repz
loopne
shr
push
mov
sar
test
nop
cmp
cld
pop
push
jbe
mov
fst
pop
xchg
mov
inc
fsubrp
mov
mov
fstl
pop
adc
pop
das
aaa
jge
loop
rcpps
push
jecxz
xor
xchg
jo
ficomps
mov
test
dec
sbb
cmpl
mov
lcall
xor
push
stc
scas
hlt
lret
scas
and
push
xchg
jnp
daa
add
push
icebp
in
aas
pushf
add
push
jne
insb
daa
push
xor
sahf
mov
pop
push
mov
push
mov
inc
add
xchg
adc
sbb
sbb
ret
stc
roll
lret
leave
aam
pop
sub
jb
mov
inc
fsts
test
out
cs
mov
int3
cmp
into
cmp
inc
mov
xchg
mov
stc
jle
mov
adc
xor
mov
and
mov
push
push
ds
sarb
mov
and
andl
pop
gs
inc
pop
add
aaa
imul
mov
jb
pop
call
mov
imul
scas
imulb
loope
pop
in
aad
lea
insb
inc
xlat
ret
pop
pop
je
adcb
inc
iret
hlt
outsl
pop
ret
aaa
test
arpl
hlt
enter
inc
stos
in
mov
es
xchg
aam
mov
mov
xchg
vpaddsw
movl
ss
cmp
shr
ljmp
fwait
push
and
dec
push
imul
mov
inc
dec
add
pop
imul
adc
lret
mov
lods
out
aaa
cmp
je
or
fildl
loope
sub
xor
pop
mov
mov
and
rcr
flds
js
mov
aas
imul
pop
test
mov
cld
pop
leave
xchg
sub
lahf
jnp
or
pop
daa
je
cltd
gs
pop
push
dec
lret
mov
imul
lret
mov
push
hlt
and
rolb
mov
mov
xor
sarl
pop
std
sub
mov
adc
and
push
xor
jnp
mov
or
add
push
lret
cmpb
pop
jl
inc
mov
leave
loopne
enter
insb
icebp
jl
push
xor
mov
or
cltd
lock
shl
or
shll
orb
loope
adc
push
dec
pop
or
and
sti
mov
insl
sbb
sarl
inc
popa
movsl
adc
xchg
inc
mov
outsb
adc
pop
cmp
push
dec
add
inc
add
and
adcl
dec
inc
ljmp
push
shr
jl
push
xchg
stc
jp
repnz
in
jne
sahf
sti
xor
cmp
cmpsl
hlt
out
ja
adc
imul
fucomi
test
pop
stos
scas
mov
ja
cmp
inc
icebp
movsb
pop
sbb
rclb
lret
or
mov
sbb
arpl
js
push
jle
pop
bound
jb
ja
out
add
cmp
jmp
lahf
insb
into
je
mov
add
enter
jmp
mov
cli
mov
xor
cld
jns
add
mov
mov
xchg
mov
dec
gs
out
add
ficoml
clc
lcall
fcmove
adc
push
into
ja
int
add
into
ffree
pop
xor
inc
dec
xchg
sbb
jge
in
and
mov
sub
xor
das
mov
daa
loop
gs
mov
push
mov
ret
jae
addr16
sub
mov
jge
je
xchg
rcl
bnd
inc
dec
push
decb
shrb
lock
adc
fdivrs
sbb
sbb
mov
in
js
adcb
addr16
fdivrl
push
add
push
fucomi
daa
sub
lock
gs
inc
mov
mov
inc
aaa
subb
icebp
addr16
pop
dec
sti
cltd
fcmovb
jecxz
lock
fistpl
test
pop
or
adc
les
push
adc
jg
in
sbb
jmp
movl
fldl2t
push
jg
imul
dec
jb
cmp
jg
pop
push
add
jmp
js
in
mov
cmp
or
adc
idivl
out
mov
push
cmp
pop
pop
mov
dec
shll
lods
or
imul
lea
scas
daa
fstps
mov
and
fdiv
jecxz
mov
hlt
or
push
inc
stc
pop
mov
lret
xchg
dec
mov
aaa
xchg
fcomi
rcrl
xchg
mov
xchg
shll
mov
pop
mov
add
divb
ds
bound
test
xorl
inc
bound
xlat
jecxz
and
mov
nop
inc
ss
fistl
mov
rclb
shl
add
jae
repz
or
mov
mov
aas
push
mov
mov
jle
cltd
sub
popf
out
insl
or
test
out
push
xor
in
fsubl
pop
cmp
js
lret
jo
int
mov
mov
out
call
aad
shrb
jae
sbb
repnz
xor
ret
repz
add
cmpsb
sub
adc
jge
xchg
loop
out
loopne
or
cmpsl
stc
stc
sti
stos
mov
stos
loope
jo
ljmp
and
aam
push
mov
pop
push
mov
in
jns
jecxz
jno
stos
mov
inc
xor
or
cltd
push
mov
je
mov
sub
mov
mov
js
sahf
aaa
push
lock
adc
arpl
inc
stos
cli
adc
xchg
sbb
inc
dec
fcmovnbe
arpl
push
pop
xchg
cmp
cs
arpl
sbb
or
add
xor
cli
sbb
lret
dec
sub
popa
cmp
icebp
and
jle
sub
movsb
xchg
add
inc
add
push
cmp
ficomps
lds
dec
pop
push
jg
cmc
std
jl
jns
xor
dec
xor
jb
addb
cmpsl
stos
jmp
sub
ret
sbb
mov
arpl
xchg
test
push
pop
push
test
nop
cmp
and
jecxz
mov
mov
lods
in
aam
mov
pusha
gs
insb
inc
or
out
movsb
cmp
inc
pmullw
and
orl
add
dec
aam
stos
mov
push
inc
dec
inc
shll
add
dec
adc
out
mov
movb
popf
rcll
push
ficomps
pop
inc
mov
rorl
sbb
insl
and
into
push
jb
xchg
mov
andl
icebp
nop
into
negb
fbld
xchg
jnp
rcrl
dec
shlb
ret
pusha
imul
and
andl
stc
shll
jo
rolb
lods
mov
pusha
icebp
jno
ret
adcb
mov
cmp
sub
lret
loopne
cmp
fisubs
sbb
or
push
lds
xor
mov
mov
cld
adc
jns
rolb
shlb
fldcw
push
mov
cmp
imul
fimull
arpl
add
in
xchg
inc
push
ret
pop
pop
xchg
and
xor
pop
xlat
int3
add
pop
fsubrl
add
jl
ret
jmp
in
ds
push
cmp
enter
mov
frstor
dec
or
loop
in
aad
aaa
dec
rol
mov
xor
sub
js
les
movsb
push
xor
cmc
add
jle
add
xlat
cs
es
add
sub
mov
mov
jg
inc
mov
or
mov
jmp
mov
test
mov
push
aaa
adc
mov
and
aas
ljmp
and
cs
movsb
jb
sub
cmp
adc
lea
fcomp
adc
js
sub
mov
mov
mov
adc
in
and
jb
sub
fmulp
imul
xchg
imul
lcall
jbe
stos
outsl
rorl
inc
sbb
push
mov
ret
push
test
mov
and
dec
frstpm(287
xor
xor
icebp
out
dec
push
mov
popa
mov
test
out
fisttpl
addl
lds
xchg
or
test
out
or
out
mov
pop
js
cmp
mov
dec
es
jbe
jge
es
imul
sbb
adc
insb
or
shrl
mov
out
xchg
int
jns
in
pusha
adc
nop
incl
jnp
int3
mov
int
arpl
inc
dec
negb
lret
fidivs
int
mov
dec
out
outsb
add
cmp
data16
dec
mov
mov
sbb
and
mov
mov
mov
mov
test
into
add
adc
or
xchg
jo
xchg
ret
dec
fstl
adc
push
cltd
test
ds
imull
call
gs
xlat
in
fdivl
jp
xlat
pop
add
int3
inc
add
jno
or
mov
arpl
xor
cmpsb
enter
add
clc
loopne
es
cwtl
or
adcl
push
push
and
mov
mov
xor
xor
xorl
jge
testb
cs
bound
cmp
mulb
shrl
inc
iret
stc
xchg
in
adc
mov
push
test
push
xchg
adc
loopne
sbb
imul
or
popa
push
test
fildll
or
out
arpl
push
inc
aas
sti
fs
push
cmp
or
add
cs
popa
stos
ds
mov
pusha
add
inc
xlat
test
mov
shl
sbb
dec
dec
mov
movsb
inc
sbb
stc
add
and
mov
mov
jg
xchg
push
and
dec
lods
dec
push
mov
stos
out
xchg
add
mov
enter
lods
fs
insl
in
sub
cmp
cmp
cwtl
adc
lea
ljmp
inc
into
flds
push
ljmp
push
lea
dec
adc
and
push
lods
test
test
jle
xchg
pop
insb
leave
inc
xchg
xor
and
dec
xchg
and
jecxz
rolb
enter
scas
movsb
loopne
add
das
jno
dec
sub
push
inc
dec
mov
lea
out
or
add
sbb
mov
mov
and
dec
mov
xchg
decl
jg
scas
jno
aad
dec
xchg
mov
iret
and
xor
test
add
lcall
lea
xor
jg
xor
inc
mov
push
mov
lods
and
lret
jne
scas
gs
aaa
sbb
adc
imul
out
pop
or
lret
pushw
mov
add
gs
sbb
clc
pop
mov
mov
out
pop
fidivl
push
stc
cmp
cmp
add
sti
aad
lcall
rcl
stc
add
arpl
out
mov
pop
int
das
lds
mov
push
pop
jnp
jno
mov
mov
loop
inc
pop
jecxz
ret
mov
mov
mov
adc
stc
pop
xchg
dec
leave
push
jg
or
mov
gs
lahf
dec
punpckhbw
dec
pop
or
xchg
dec
rcll
xchg
cmp
call
sub
add
icebp
sub
pop
xchg
pop
stos
mov
out
xor
adc
mov
out
sahf
xor
sub
inc
loopne
int3
cmp
sub
and
mov
int3
sub
repnz
lods
stos
or
mov
enter
sbb
in
hlt
jb
bound
aaa
outsb
js,pt
jo
cmp
mov
mov
mov
push
fildll
inc
shrl
movsl
ja
sbb
inc
sbbl
mov
cmp
push
xor
pop
insb
mov
xchg
xchg
imul
je
daa
and
cwtl
lods
jecxz
fs
mov
scas
fiadds
daa
push
arpl
aaa
cmp
jns
pop
or
sub
cmp
test
shl
in
jne
gs
ror
loop
ja
adc
roll
adc
or
subb
outsl
stc
lret
or
push
lock
cmp
sub
aas
aaa
andl
jno
and
sub
popf
and
movhps
les
jb
xor
cmpsl
call
inc
xor
bound
idiv
push
xor
or
fdiv
movsl
cmp
lock
cmpsb
mov
cmp
pop
scas
in
std
sub
add
shll
shlb
aaa
and
dec
fcomip
push
inc
jl
lret
repz
in
jne
xor
inc
xchg
sbb
xor
xlat
fadds
fimull
pop
pushl
add
outsl
push
mov
mov
sbb
pop
scas
dec
aas
pop
test
inc
nop
popa
jbe
jns
xor
repz
shlb
fldenv
cmp
sbb
cmp
dec
or
call
repnz
fsts
jmp
aas
neg
out
das
sbbl
mov
out
js
add
cltd
jbe
jnp
int3
ret
int3
rorb
inc
sbb
aas
clc
lods
dec
lds
or
cmp
adc
cld
addr16
xchg
inc
cmp
fildll
in
cli
xchg
test
mov
out
sub
test
bound
fistl
stos
mul
adc
cld
fmul
lds
jae
xor
and
or
movsb
jnp
mov
jl
inc
xlat
mov
fsubl
mov
xor
cmp
sbb
xor
test
add
mull
setge
or
add
mov
mov
fwait
sbb
inc
inc
mov
cltd
jmp
mov
adc
out
dec
popf
imul
inc
data16
and
push
pop
push
test
or
adc
cmp
dec
ret
jns
pop
jl
dec
pop
sbb
test
mov
mov
sahf
in
mov
arpl
xchg
nop
mov
cld
fadds
fs
jb
pop
mov
mov
push
inc
ret
mov
addr16
dec
adc
int3
bound
sbb
add
pusha
out
or
rorl
mov
or
cmp
loopne
jb
fadds
lret
inc
push
stos
and
pop
or
push
outsl
jge
sbb
or
ret
or
dec
rcrl
sub
xor
lock
mov
mov
fwait
dec
sub
and
sub
sub
mov
xchg
and
jmp
push
xchg
adc
add
push
outsl
into
add
jb
sub
jno
ds
xchg
xor
cmpsb
incb
add
aad
pop
shrl
lock
ljmp
sti
jp
lret
jo
add
xor
mulb
dec
sahf
cld
sub
rclb
pop
int3
or
inc
pop
popf
rolb
push
rorl
add
dec
mov
mov
xlat
pop
subb
das
mov
xchg
or
cmpsb
call
mov
jg
bound
sub
jl
adc
int
jno
pop
push
mul
fs
psllq
jp
pop
adc
cmp
inc
jle
movb
and
xchg
pop
adc
in
add
mov
lahf
and
jb
jge
test
add
xchg
jl
repnz
out
test
out
push
and
mov
pop
in
pop
cwtl
push
movsb
pop
mov
ret
push
pop
inc
lds
and
dec
adc
pop
mov
sub
shl
dec
sbb
pop
lds
xor
inc
jp
xor
in
lret
dec
inc
cli
out
sti
push
mov
cld
gs
adcl
mov
mov
pushf
and
std
xchg
push
add
aas
out
cwtl
mov
std
xor
popf
sub
or
sbb
adc
imul
fiadds
push
or
aad
sbb
mov
in
or
stos
scas
and
push
add
pop
xchg
ss
adc
cmp
add
cmpsb
ret
ja
call
mov
dec
xor
fs
adc
dec
ds
stos
loopne
xlat
xchg
arpl
adc
enter
scas
nop
push
scas
push
mov
adc
jb
popf
cli
adc
in
dec
fnstcw
xchg
dec
dec
mov
or
sub
push
sbb
bound
pop
fsubrl
adc
push
add
jecxz
mov
ds
dec
call
mov
mov
cmpsb
sub
js
pop
mov
shl
loope
mov
hlt
jo
inc
ret
add
in
out
sub
adc
repz
imul
cmp
daa
movsl
pop
mov
nop
lcall
stc
xchg
adc
mov
in
push
test
lret
popf
test
jg
loopne
mov
clc
stos
jp
mov
pop
repnz
repnz
or
test
shrb
arpl
ljmp
ss
int3
xor
shlb
cltd
jns
xor
fcmovbe
movsl
mov
decl
out
into
adc
add
push
xlat
adc
and
dec
std
inc
or
je
loop
sub
inc
int3
cs
push
cld
and
sub
inc
sbb
xchg
fmuls
push
lcall
mov
mov
pop
out
mov
fucomip
mov
add
jns
pop
loopne
icebp
fwait
jp
out
cmp
add
scas
call
add
enter
and
mov
sbb
fistpll
jg
aas
dec
nop
lea
ret
shrl
inc
mov
mov
inc
cmpsb
repz
clc
fisttps
push
das
pusha
adc
popf
sbb
shrl
push
nop
pop
mov
repz
outsb
pop
push
cmp
cld
scas
incb
je
adc
dec
jl
adcl
jmp
js
imul
loopne
or
pop
fs
inc
cmp
repz
je
mov
jmp
sbb
sbb
xchg
lcall
inc
pop
sbbl
adc
mov
inc
daa
iret
idiv
hlt
cmpsl
lea
push
insl
stos
adc
sbb
out
das
in
jnp
mov
xorl
xchg
cli
das
push
mov
pop
and
push
out
fdivs
mov
loope
xor
add
adc
daa
js
inc
sub
mov
cmc
fisubrs
pop
mov
ljmp
pop
insb
scas
lods
xor
or
aam
xchg
pop
lock
or
test
or
push
loope
ja
dec
jge
addr16
sbb
and
es
pop
lods
jne
lcall
cmp
lret
jns
das
call
std
xchg
movsb
out
rcr
mov
mov
nop
jb
cmp
stos
xchg
orb
mov
test
cmpsl
push
mov
subb
insl
jns
sarb
testl
xor
lret
mov
pop
xchg
rorl
imul
jnp
cltd
repz
imul
cwtl
inc
pop
lahf
xchg
test
mov
movsb
scas
rcrl
sub
pushf
imul
push
and
imulb
push
sahf
inc
jns
pushf
aas
les
rsqrtps
add
ret
jne
not
rcrb
cmp
dec
rcrb
inc
mov
adc
pop
cmpsl
int
xchg
mov
pop
shrl
paddb
mov
cmp
xor
das
pop
hlt
aam
or
pop
push
push
jl
adc
inc
fs
adc
adc
xchg
pmulhuw
stc
dec
ja
inc
mov
xchg
nop
fdivr
add
rol
add
dec
lret
in
cmp
mov
dec
and
add
loope
orb
and
xchg
scas
pop
push
pop
mov
adc
in
adc
outsb
or
andl
sbb
clc
add
sbbb
lods
jo
out
test
sbb
sbb
pop
inc
sbb
mov
xchg
stc
cli
sbb
xchg
add
pop
jle
sar
aam
cwtl
call
adc
xlat
xor
push
fstpl
into
out
popa
aad
ret
lds
add
movsb
outsb
lcall
pop
mov
mov
fs
pop
vmptrld
dec
mov
xchg
rcr
push
sti
lahf
jno
ds
cmp
vpcmpgtb
sbb
sub
xor
and
int3
mov
jp
icebp
in
adc
mov
fiadds
pop
jo
lret
mov
loop
lret
popa
cli
sbb
loopne
lea
and
pop
movsb
xchg
xchg
dec
cmp
icebp
inc
push
sbbl
cmpsl
mov
in
jns
bound
jge
fstpt
mov
lret
in
in
xor
add
dec
fiadds
push
ja
cmpsb
sub
and
push
ds
dec
add
ficompl
mull
jo
jmp
xchg
fwait
push
xor
jmp
sub
nop
cli
mov
pop
sahf
inc
xchg
jle
lds
aaa
pop
add
xlat
dec
xchg
jbe
lcall
clc
lret
jbe
jo
xor
cwtl
out
shlb
mov
mov
dec
mov
push
nop
adc
pop
scas
push
cmpsb
or
shl
into
inc
cmc
jbe
dec
outsl
lret
int3
xchg
and
mov
jns
add
dec
outsl
pop
and
pop
lods
add
clc
dec
push
mov
jge
xchg
push
sub
dec
xor
or
jg
out
pop
or
arpl
and
xor
loope
movsl
test
adc
add
clc
dec
xor
roll
inc
xchg
jmp
ds
add
push
insl
push
inc
stos
mov
sub
mov
push
iret
xchg
cmp
push
pushf
push
lods
dec
mov
jne
imul
push
fildl
add
insb
cmp
call
aad
ja
add
push
mov
sarb
xchg
jecxz
or
mov
sbb
pop
decb
fucomp
push
in
xchg
xor
insb
add
subb
push
jnp
cmp
inc
imul
sub
push
lcall
aaa
lret
dec
and
lods
mov
fwait
test
push
jecxz
loope
inc
das
mov
cltd
and
call
inc
shl
jp
mov
popa
mov
mul
lods
sbb
adc
or
add
add
pop
and
sub
or
adc
aad
mov
xchg
ret
sub
hlt
fsubrs
mov
insl
sahf
sbb
sub
add
out
movsbl
ja
out
jge
mov
jbe
cmp
fwait
icebp
scas
and
sbb
in
lods
jmp
aad
stos
addl
in
orb
mov
cwtl
ja
push
enter
pushf
push
push
aas
mov
mov
jns
sbb
mov
cmpsl
xor
lods
fdivl
flds
aaa
xadd
test
fstpt
jo
push
push
add
inc
and
pop
and
xor
fsubrp
fsubs
or
push
push
out
scas
pop
jbe
arpl
push
inc
xlat
std
ret
in
cwtl
dec
in
aam
hlt
push
mov
dec
and
inc
jno
into
inc
mov
jg
mov
fsubrl
mov
rol
mov
rcl
js
aad
cmp
inc
mov
imul
and
lods
mov
push
cmp
mov
inc
sub
push
rol
inc
addr16
dec
mov
addr16
lods
enter
mov
rorb
add
xor
aam
dec
cmpsb
imul
movsl
or
nop
fwait
pop
jp
repnz
cmp
sub
insb
std
sbb
imul
adc
icebp
jg
stos
or
enter
fiaddl
or
push
mov
lods
push
jmp
data16
push
mov
xchg
lods
cli
out
mov
cmc
adc
push
pusha
rep
call
inc
adc
xor
rclb
les
sbb
fildll
jbe
arpl
pop
hlt
clc
add
and
shlb
das
outsb
ljmp
push
xchg
leave
lds
push
jp
lcall
adc
mov
inc
or
adc
sub
sub
fbld
or
lcall
std
testl
popa
cmove
stos
dec
sti
adc
mov
or
sbb
mov
inc
pop
cmp
pop
pop
jbe
push
xor
adc
add
int3
mov
aam
push
cs
lds
pushf
cmp
inc
not
lret
or
or
sbb
add
sub
shll
mov
je
xor
adc
aam
push
mov
pop
cli
stc
movsl
xor
inc
ljmp
cmp
cltd
ficompl
popa
sti
outsb
mov
out
ds
pop
out
inc
add
jns
mov
call
mov
adc
dec
xchg
pop
popa
sbb
mov
test
dec
std
data16
mov
dec
mov
xchg
xor
sbb
push
outsl
push
jns
xchg
andl
sub
stos
mov
aam
jb
es
jae
out
clc
aas
or
xchg
sbb
imul
cmp
push
or
test
lds
mov
pop
mov
mov
sbbl
xchg
cs
scas
and
cmc
inc
jae
mov
mov
insb
out
jns
cs
insb
pop
push
adc
in
push
out
stos
test
xor
jns
pop
scas
popf
clc
cmp
popa
adc
call
rorb
jp
jns
rorb
out
and
jbe
sbb
and
inc
call
xchg
xchg
xlat
mov
cmp
add
xchg
inc
pop
dec
xchg
pop
movsb
addr16
inc
xchg
xchg
out
jmp
mov
fcoms
les
aas
nop
aaa
hlt
push
xchg
jmp
test
loopne
push
int3
sub
fucomp
test
in
or
mov
fnsave
sbb
sub
pop
movsl
call
movsl
jge
jnp
scas
inc
xlat
inc
mov
cs
mov
lods
add
jne
bnd
testl
mov
push
sarb
into
mov
in
arpl
out
push
jnp
imul
sbb
faddp
shrl
xchg
imull
inc
fs
int
add
mov
and
repnz
pop
in
lock
mov
lcall
pop
adc
jns
rcll
movsb
sub
mov
mov
mov
icebp
es
jns
icebp
cmp
xchg
push
push
cmpsb
leave
imul
daa
mov
notl
ja
jp
fnop
push
test
xchg
outsb
jae
add
adc
mov
cwtl
sbb
mov
gs
jle
idivb
mov
andb
jns
jne
lea
pop
or
ficomps
add
fsubs
in
lods
jb
and
cmp
add
mov
or
aaa
and
push
cmp
and
mov
cmc
fiadds
data16
mov
and
popl
popf
sub
sub
pop
mov
sbb
repnz
bound
inc
and
hlt
add
shl
in
or
xchg
mov
inc
popa
mov
fnsave
sbb
inc
loop
mov
in
xlat
loop
dec
pop
mov
cld
addb
jecxz
adc
pop
push
inc
stos
and
inc
dec
fidivrs
cltd
mov
pusha
scas
mov
push
sbb
je
add
pushf
aaa
cmp
into
cmpsb
sub
out
ja
add
sbb
sti
std
frstor
insb
lods
xchg
sub
dec
pop
outsl
fnstcw
shrb
shlb
push
lods
xor
imul
mov
sbb
daa
add
in
adc
pusha
xlat
sti
lahf
mov
hlt
les
adc
jge
mov
mov
lock
cmc
rcl
mov
pop
inc
stos
dec
push
ljmp
adc
inc
ss
or
or
pop
inc
xlat
cmp
dec
je
ret
into
adcl
fisubl
loope
jo
inc
ja
mov
test
push
insl
jp
or
pop
pop
rcr
cmp
mov
bound
lret
scas
push
cmc
pop
call
push
sub
mov
jae
or
pop
js
pop
sub
popf
and
push
mov
adc
cld
pop
hlt
out
loop
icebp
xor
jo
mov
bnd
imul
fwait
insl
sbb
bound
cmp
aad
mov
movsl
cltd
sub
add
lods
popf
call
mov
int
mov
cli
and
lcall
lods
mov
cmpsl
sub
fcoms
sbb
inc
and
and
sbb
mov
pop
mov
lods
ljmp
mov
xchg
sub
pusha
movsb
xorb
out
fisttpl
mov
sub
xlat
daa
repz
or
add
sub
into
adc
out
stos
stos
out
jae
push
pop
or
add
cld
btr
orb
sbb
pop
inc
adc
mov
and
call
mov
jl
fwait
mov
xchg
loop
nop
pushl
aaa
cld
mov
aas
add
or
mov
movb
push
not
dec
pop
fsubrs
ds
add
dec
cld
mov
jmp
add
jle
outsb
pushf
stos
cmp
repz
int
sbb
jne
sub
pop
mov
cmp
sbb
jp
ds
loope
sbb
scas
out
hlt
mov
adc
jne
push
jb
dec
popf
pop
daa
mov
xchg
mov
inc
xor
movsl
and
pop
cs
push
xchg
push
add
mov
lds
inc
cmp
addb
mov
push
xor
subl
mov
adc
repnz
int
pop
fcmovnu
add
xor
pop
loope
cli
in
aaa
lea
xor
push
aaa
jle
add
xchg
jmp
popa
add
inc
mov
lock
ljmp
dec
addl
nop
popf
mov
pushf
mov
movl
roll
nop
ret
adc
addr16
xchg
stos
cmp
push
test
mov
xor
add
shrb
pop
loop
mov
inc
cmp
movsl
stos
mov
and
add
push
imul
call
ds
ret
adc
cmpsb
push
icebp
mov
daa
sti
cmp
push
es
shrb
gs
mov
push
scas
jo
adc
or
cld
imul
mov
lea
or
add
loopne
push
dec
mov
sarb
daa
into
add
stos
sbb
sbb
fsubs
jns
test
cmp
add
and
cmp
clc
in
loope
and
scas
mov
lret
pop
orl
jg
dec
fmuls
pushf
fdivrl
dec
xor
jo
sub
cmp
ret
xchg
in
pop
sub
cld
push
lea
and
push
cmp
sahf
subb
adc
push
fs
sbb
jge
popf
add
imul
xchg
jne
jecxz
repnz
pop
into
cmp
stc
iret
mov
jb
or
pop
pop
xorl
xchg
push
repz
xchg
jo
ss
imul
pushw
scas
inc
js
dec
mov
mov
in
push
loope
icebp
cmp
aad
push
or
pop
sbb
stos
aad
pop
int
push
inc
and
cltd
stc
iret
data16
lcall
add
ja
imul
lods
fst
repnz
pop
cs
ret
pop
stos
push
shrb
in
stos
inc
fwait
pop
aad
ljmp
fsubrp
imul
pop
or
popa
jns
add
inc
nop
lret
or
mov
pop
ja
push
std
jnp
fsts
xor
mov
inc
enter
scas
loop
dec
push
xchg
popf
cmpsl
xor
repz
dec
push
xor
push
push
adc
add
xchg
ljmp
popf
std
les
arpl
push
mov
inc
jne
scas
loop
sbb
mov
mov
cmpsb
iret
insb
sub
sbb
fs
jb
sbb
ja
jmp
sub
push
iret
icebp
aaa
int3
clc
enter
lret
aam
scas
inc
or
mov
push
mov
mov
push
inc
sbb
fsubrl
scas
in
stos
inc
sbb
sbb
adc
test
sahf
mov
ds
loop
and
idivb
aam
ljmp
loopne
jns
fsubl
iret
addr16
dec
sbb
pop
fidivs
add
xchg
mov
out
enterw
imul
aad
and
cmpb
jbe
sti
mov
shrl
cltd
call
xor
xchg
test
mov
scas
and
repnz
int3
adc
push
mov
xor
call
xchg
xchg
arpl
movsb
jg
pushf
cmp
loope
fwait
rcrb
cld
popf
mov
push
xor
cmp
mov
jmp
insb
pushf
mov
pusha
mov
push
out
cmpsl
and
or
dec
into
jnp
loopne
inc
aad
fsubrl
sbb
orl
xchg
pop
nop
mov
inc
pop
fdivrl
fdivrs
or
lret
sub
push
outsl
mov
add
push
clc
fst
pushf
jnp
out
lea
mov
sbb
ss
iret
push
shrb
call
mov
test
out
cmp
mov
lock
data16
xor
mov
aas
adc
bound
xchg
lcall
dec
inc
aaa
scas
jg
xchg
cltd
stos
outsl
daa
lcall
push
inc
inc
xor
sbb
inc
ljmp
sarl
mov
dec
mov
adc
les
int3
pushf
xlat
rorl
dec
inc
aam
mov
or
fxch
add
ss
adc
fildll
inc
sbb
aad
and
mov
and
mov
movsl
cmp
mov
fldcw
push
mov
repnz
pop
pop
dec
add
rcl
les
pop
or
cmpsb
jp,pt
std
xchg
movsb
push
sbb
add
push
mov
push
xchg
pop
cmc
inc
inc
mov
test
push
out
jp
std
lret
adc
out
mov
mov
leave
adc
addl
psrlw
push
jmp
push
lret
sub
stos
sar
out
call
sbb
dec
sbb
mov
cwtl
jnp
addr16
out
adc
sub
popa
add
fcoms
ret
jge
xchg
ja
mov
push
cmp
jge
addb
xchg
pop
cmp
shll
test
jbe
xchg
or
fidivs
dec
mov
inc
repz
iret
cmp
cmp
sub
jge
pop
push
and
push
add
cld
dec
arpl
ds
pushl
inc
xchg
pop
inc
fbld
push
dec
sahf
push
stos
mov
mov
dec
pmaddwd
jmp
sbb
or
andl
ds
jbe
cmc
mov
outsl
mov
adc
int3
pop
pop
push
xor
jae
nop
cli
mov
imul
mov
jns
repnz
cmp
jbe
inc
inc
mov
fisttpll
sahf
push
mov
test
rolb
faddp
mov
les
es
aam
jmp
add
or
jl
jp
cwtl
cmp
cltd
push
sbb
call
xchg
jns
or
sub
ja
cmp
arpl
out
shl
mov
mov
sub
aaa
rcll
into
push
aas
enter
mov
xchg
xchg
mov
in
cmp
mov
or
or
test
bound
imul
push
cmp
negb
mov
mov
mov
fwait
pop
add
imul
inc
push
inc
aas
push
loope
jmp
ljmp
mov
fisubl
shlb
cmc
xor
xchg
dec
inc
xor
mov
test
pusha
cmp
cmc
jecxz
js
lea
mov
int
cld
mov
fmuls
arpl
jne
pusha
ds
daa
insl
mov
out
cwtl
add
sbb
push
sbb
imul
cmpsb
xor
or
out
dec
xorl
xor
repnz
pop
fidivrs
mov
int3
cmpl
cld
pop
mov
int3
pushf
sub
adc
sahf
int
inc
mov
mov
push
mov
call
std
gs
push
push
nop
inc
pop
rcrl
mov
cmp
nop
push
or
mov
shll
out
pop
xchg
mov
push
outsb
pop
xchg
xchg
fists
mov
lret
aaa
test
in
inc
mov
pushf
mov
repnz
movsb
into
or
loope
jmp
ljmp
sub
out
idivb
inc
or
stc
and
scas
xchg
add
sub
pop
lahf
push
add
lods
ficompl
aaa
arpl
scas
pop
aas
inc
xor
sub
xor
addps
rorl
mov
movl
outsl
outsb
outsb
mov
les
push
and
rolb
cs
inc
addr16
out
mov
push
sti
and
push
sub
add
xchg
enter
call
or
sbb
mov
loopne
inc
jmp
adc
dec
sub
jp
mov
enter
inc
dec
frstor
popf
mov
xor
adc
and
ret
lock
mov
in
or
xor
addb
push
into
into
jb
jge
and
add
sbb
shrb
pushf
xchg
jns
cmp
sbb
jecxz
gs
popa
ljmp
scas
push
xor
add
inc
mov
sbb
adc
pop
call
gs
in
movsb
scas
xor
sub
xlat
fdivrl
xchg
pop
negl
sub
sub
repz
in
xor
mov
xchg
mov
pop
cmp
repz
and
jle
test
cld
aad
scas
dec
ficoml
adc
push
pop
jne
push
jecxz
stos
mov
mov
cmc
jne
lahf
sub
add
inc
or
scas
aad
rorl
subb
subl
fs
mov
jns
ret
xor
movsb
cmpsb
pop
sub
lds
xchg
insb
pushf
in
clc
outsl
push
pushf
jae
lcall
bound
jb
adc
sahf
repnz
ret
cmp
adc
xor
js
out
inc
jae
xor
in
cmp
in
out
in
in
push
mov
dec
push
push
dec
sbbl
mov
lods
out
loope
adc
aas
int
in
add
mov
add
out
pop
adc
scas
adc
jo
dec
inc
or
int
mov
mov
mov
adc
mov
and
test
xorb
mov
dec
pop
pop
dec
push
xchg
cs
int3
jl
int3
cmp
sbb
mov
outsb
pop
pop
shll
imul
fidivl
sbb
aas
xor
push
movsl
push
mov
dec
push
adc
inc
sbb
out
mov
in
ror
lea
xor
aam
push
mov
lret
sub
fnstcw
cld
ljmp
push
xchg
sub
outsb
hlt
in
inc
imulb
sub
fnstenv
xchg
push
popf
ja
or
jb
movsb
je
sub
scas
mov
insl
sahf
repz
jp
jns
cmp
cld
lds
cli
mov
jmp
not
inc
push
jecxz
push
add
scas
push
add
xchg
movsb
mov
daa
jle
imul
xchg
jo
pop
incb
out
daa
xor
push
rcr
dec
movsb
pop
and
aas
jmp
inc
pop
and
popa
or
sub
orl
adc
shll
mov
xor
mov
addr16
repnz
inc
paddsb
pop
loope
xlat
push
aad
adc
rorb
test
stos
dec
dec
xlat
aam
push
jnp
sysenter
mov
add
or
jae
xchg
aam
inc
dec
scas
out
into
sti
mov
pop
lea
test
bound
mov
mov
fildl
repnz
arpl
dec
sbb
cmp
or
cmp
hlt
pop
inc
dec
mov
mov
scas
movsb
mov
cs
arpl
xchg
jo
inc
sbb
popf
xchg
xorl
or
in
imulb
pop
xchg
push
lcall
and
adc
rorl
sbb
pop
mov
pop
mov
sub
mov
fs
mov
rorb
call
inc
das
mov
ljmp
cltd
push
push
mov
imul
push
or
stos
fsts
es
mov
lds
sti
in
or
shrl
mov
xor
push
inc
jnp
ja
enter
jbe
mul
xchg
inc
sahf
dec
xchg
adc
ljmp
lods
bound
lret
pop
dec
jge
pop
movsl
and
shll
push
dec
pop
loopne
inc
mov
jbe
lea
lods
outsb
stos
push
xchg
pop
insb
mov
dec
lahf
mov
push
xchg
pop
dec
add
inc
arpl
out
ljmp
scas
jns
mov
sbb
add
lods
cmp
jmp
loop
jae
adc
cmpsw
sbb
ljmp
ja
icebp
out
pop
mov
adc
push
lods
stos
es
jnp
add
lods
js
push
hlt
dec
inc
or
sub
sub
insl
call
mov
cmp
movups
orl
loop
push
in
add
clc
loopne
mov
push
loop
bswap
push
xlat
cmp
mov
pop
stc
push
adc
xchg
cmp
ds
addb
jmp
out
xor
jl
test
aam
fwait
cmpsl
dec
sti
jl
in
lods
cmp
ret
pop
jns
push
popf
mov
nop
push
test
sbb
stos
dec
dec
test
clc
mov
jnp
xchg
es
bound
or
mov
fdivrl
sbb
mov
bound
mov
pop
iret
xchg
ds
mov
mov
inc
xchg
cmp
lcall
sti
scas
movsl
jl
lock
xchg
mov
pop
xchg
jle
sbb
xor
aaa
xchg
xor
mov
sub
cmp
sti
sub
jns
notb
out
cltd
pop
in
aaa
mov
add
mov
mov
cmp
jecxz
sub
hlt
and
movsb
and
pop
jecxz
mov
movsb
dec
cli
sbb
push
insb
cmpsb
dec
shll
fnsave
jp
mov
inc
xchg
aas
mov
cld
mov
jecxz
out
ret
add
sahf
xor
adc
lret
pop
sbb
sub
xchg
jge
pop
cld
ja
negb
es
dec
dec
add
dec
and
cmp
lahf
jb
add
sbb
test
cmp
add
mov
fsubp
inc
inc
jne
lea
cmc
ficoml
adc
enter
repz
xor
push
push
xchg
leave
in
push
ret
adc
add
ds
adc
ja
fs
add
gs
aas
mov
sbb
jnp
mov
sbb
add
jo
lret
push
fiadds
xor
fsub
out
jge
pop
arpl
lret
mov
xor
dec
mov
imul
clc
dec
mov
add
push
mov
shlb
push
mov
and
fsubs
xchg
stos
cmp
in
js
lret
mov
lret
sbb
das
sarl
enter
xor
sahf
cltd
movb
fcmove
push
cmp
push
ret
sahf
mov
test
rclb
pop
add
push
jle
adc
jae
or
mov
ljmp
pop
arpl
and
gs
idivb
adcl
loope
adc
push
flds
pop
mov
aas
pop
dec
inc
fildl
fs
das
mov
jb
repz
adc
dec
add
dec
cmp
fadd
inc
or
cld
and
cmp
jno
xchg
aas
xchg
repz
mov
pop
inc
push
jg
fimull
mov
repz
ljmp
js
push
movsb
arpl
fdivl
mov
sarl
imul
pop
test
mov
push
aas
iret
outsl
mov
test
mov
cmp
stos
pop
jge
ds
lret
shrb
neg
flds
push
mov
xor
fwait
xor
jmp
inc
cmc
or
mov
test
mov
xorl
out
lea
mov
jecxz
stos
adc
shlb
stos
rorb
ret
fdivs
inc
xchg
push
sbb
xchg
fsubrl
lods
cmpsl
insb
in
sub
or
cld
xchg
fnsave
leave
and
push
aas
in
std
shlb
pop
push
lahf
jp
push
adc
aas
add
call
repz
lea
xorb
lret
ja
imul
mov
pop
add
addr16
scas
test
jae
add
movsl
je
mov
add
imul
fwait
inc
push
dec
mov
add
mov
jbe
xchg
jns,pt
xchg
inc
sti
mov
popf
clc
pusha
out
dec
mov
aad
xchg
sbb
or
movsb
adc
xlat
xchg
sbb
add
jge
mov
cmp
repnz
cwtl
xchg
das
jg
insb
shrl
mov
call
sbb
mov
lret
test
adc
repnz
pop
cld
jl
test
hlt
adc
lds
shl
jmp
orb
push
movsl
int3
and
loop
addr16
sub
push
mov
fsts
xchg
or
jmp
mov
es
dec
enter
mov
pop
adc
or
imul
jmp
test
xchg
mov
aad
subl
xor
cltd
adc
push
test
nop
js
jg
and
add
imul
daa
or
iret
jne
out
cmp
push
in
mov
pop
push
and
repz
popa
pop
mov
ljmp
xor
sti
nop
sbb
subb
in
push
jmp
mov
ds
loop
or
xchg
les
pop
fs
cmpb
pop
mov
pop
rclb
pop
test
xor
mov
xchg
divl
test
pop
int
mov
gs
push
push
mov
and
mov
mov
gs
ret
xchg
fdivl
sbb
ja
inc
add
dec
push
sbb
add
rol
pushf
pop
xor
push
rcr
ss
test
jmp
stc
ja
inc
pop
and
hlt
ljmp
mov
sub
int3
mov
adc
push
push
sar
cmpsl
scas
push
xchg
mov
jae
jge
arpl
popf
and
loopne
imul
scas
into
cld
mov
lret
mov
scas
cpuid
addr16
jg
rcr
or
pop
push
test
inc
fnsave
std
and
jmp
sti
daa
mov
sub
mov
mov
andl
add
mov
xchg
jnp
mov
push
push
stc
adc
mov
hlt
mov
inc
imul
pop
xor
add
and
shll
sub
imul
push
stc
jns
dec
movsl
xorb
dec
cltd
adc
and
jl
jge
test
cs
bound
shl
aam
outsl
jecxz
push
cmp
cld
les
fists
mov
addb
fmuls
shr
push
in
mov
fldt
cli
loope
lret
aam
push
aam
add
push
imul
add
jb
test
stos
fdivl
jb
xor
or
mov
aaa
out
lods
mov
mov
xchg
add
loop
mov
sbb
pushf
mov
ja
push
xor
shlb
mov
xor
dec
fimull
sub
mov
lea
dec
stos
cmp
xor
mov
mov
scas
mov
xchg
cmp
or
aam
jmp
cltd
rclb
push
js
call
dec
xor
das
loope
mov
scas
xor
or
inc
movsl
cmp
scas
inc
xchg
cmp
push
roll
jns
aaa
jmp
fisubrs
mov
fs
sbb
insl
xchg
push
lcall
or
nop
pusha
fstl
mov
out
add
pop
sub
fiadds
clc
jg
roll
mov
lock
cld
stos
test
clc
loop
mov
mov
dec
mov
bnd
shll
mov
xor
pop
jo
popa
jnp
cmp
mov
scas
clc
add
jg
das
cmp
leave
lret
pop
mov
out
mov
dec
mov
or
lds
cld
fildll
in
pop
in
sub
lock
or
es
cmp
push
outsl
mov
in
out
cmc
test
mov
jno
jge
add
ljmp
popf
jg
pop
into
mov
loope
jb
pop
lahf
rep
jae
xchg
push
pushf
hlt
dec
test
mov
mov
iret
lret
mov
and
xchg
stos
out
pop
add
pop
inc
cmp
sbb
scas
test
add
pushw
add
mov
dec
mov
push
and
stos
das
ljmp
ja
insb
lods
bound
jg
pop
repz
cmp
shrl
mov
hlt
leave
cmpsl
arpl
rcl
out
cld
enter
mov
dec
stc
stc
mov
xchg
cmp
leave
mov
pop
push
dec
in
xchg
dec
mov
shrb
das
add
pop
shl
xchg
aad
dec
or
adc
mov
mov
arpl
xor
xchg
push
psubsw
loope
jb
jle
add
add
daa
mov
mov
cld
addr16
cwtl
sbb
sub
fnstenv
clc
push
push
xchg
and
out
push
xor
cmp
lcall
jo
call
sbb
pusha
test
jge
test
nop
xchg
xchg
pushf
cwtl
sbb
js
mov
inc
inc
jmp
inc
out
mov
sbb
jno
out
or
pushf
adc
fldt
stos
mov
scas
leave
mov
and
adc
inc
lock
sbb
push
xor
mov
sbb
testb
lret
or
inc
scas
sub
pusha
jp
call
aas
jne
xor
incb
negb
xor
mov
arpl
rorb
lods
or
sti
addr16
push
cmp
cmp
loope
cmp
cmp
pop
xchg
inc
sub
pop
test
lods
jmp
xchg
outsl
add
sub
stos
jmp
xchg
pop
ss
push
xchg
loopne
mov
in
add
mov
mov
ljmp
pop
ret
invd
xor
xor
pop
cmpsl
jb
mov
pop
cld
mov
ret
dec
insb
fdivs
fwait
jno
xchg
jp
mov
jb
jbe
push
cmp
ljmp
xor
fsub
xchg
mov
sbb
mov
jne
lret
and
repz
dec
add
leave
jp
ja
loop
arpl
imul
leave
ud0
adc
mov
mov
dec
xor
sahf
sub
iret
push
adc
adc
cmp
jns
clc
jmp
sub
dec
mov
pop
stos
fstl
xchg
mov
jmp
push
sbb
test
push
inc
sub
in
or
add
into
int3
call
addr16
inc
inc
push
dec
or
push
pop
adc
es
dec
inc
ret
lcall
stos
std
or
orl
jnp
lds
into
mov
push
stc
sbb
test
shll
jmp
push
mov
out
addr16
push
fisubrl
scas
mov
xchg
dec
call
sbb
or
jae
lds
push
insl
ljmp
sbb
cmpsl
fdivrl
or
mov
add
lds
das
dec
add
xor
push
test
pop
lock
add
ret
js
push
xor
push
xor
cmp
or
int3
aas
data16
in
jns
loope,pn
pop
lods
mov
push
call
jmp
or
into
sbb
inc
imul
call
fmull
aas
pusha
cli
mov
std
sub
push
out
jo
dec
adc
addr16
int3
inc
inc
lock
js
sbb
aaa
push
stc
testb
enter
dec
lahf
lcall
sbb
ficoms
inc
sbb
xchg
sub
vaddss
in
subb
inc
sbb
sbb
int
xchg
xor
cmp
add
stos
stos
pop
cltd
inc
push
outsl
jg
aam
hlt
push
cltd
and
jb
push
sub
jno
and
in
call
ja
cmp
cmp
push
add
mov
hlt
inc
ss
jg
pop
fistl
das
push
cmp
sbbb
dec
cli
bound
mov
pop
outsb
lds
outsb
stos
into
outsb
movsb
lret
jb
cmp
jns
test
mov
jge
jo
xlat
dec
push
add
adc
les
outsl
adc
inc
or
shrb
cli
shrb
fidivl
stos
dec
and
adc
rep
pop
test
xor
inc
cmp
mov
push
add
pusha
mov
gs
cmp
in
mov
or
dec
xor
adc
mov
lcall
pusha
ds
pop
aaa
xor
insb
xchg
mov
jns
jmp
into
adc
xchg
fildll
cmp
lds
cmp
sbb
xchg
pop
cmc
sbb
sbb
and
imul
daa
dec
or
or
push
xorl
dec
sub
inc
test
leave
mov
inc
scas
je
andb
inc
sub
jne
adc
stos
mov
xchg
push
xor
bnd
lods
repz
addl
mov
mov
jmp
clc
fcom
cwtl
inc
outsl
in
cmp
iret
inc
dec
pop
popf
outsl
scas
jb
divl
xchg
jmp
mulb
cwtl
shr
sub
test
leave
xor
loope
add
test
push
sub
and
mov
sbb
push
add
mov
data16
jae
mov
add
ror
mov
sti
or
notl
mov
lods
andb
adc
inc
pop
mov
cmpsl
jmp
jbe
cwtl
push
adc
inc
inc
dec
inc
pop
jmp
pop
pop
jno
test
fsubp
xor
jle
inc
mov
movsb
daa
mov
xchg
push
add
lods
lds
and
sub
adc
xor
xchg
cld
rcrl
arpl
push
push
dec
stos
sbb
das
dec
jecxz
jmp
jmp
sub
dec
test
icebp
daa
xchg
jnp
ficoml
inc
popa
iret
lret
in
jge
pop
mov
lret
push
subb
push
popa
pop
movsb
mov
fs
out
rolb
mov
icebp
push
xchg
mov
mov
aaa
in
sub
adc
add
lods
aas
insb
loop
mov
or
lea
cmovo
dec
or
cmp
inc
in
xchg
dec
mov
mov
pushf
out
pop
dec
adc
push
sbb
cli
mov
mov
push
mov
xor
stos
mov
mov
jmp
or
ja
scas
scas
mov
pop
daa
insl
sub
cs
sbb
orb
or
iret
into
push
subb
cmp
jo
mov
movsb
fidivrs
mov
adc
int
dec
dec
enter
stc
pop
pop
mov
jg
fnstsw
mov
sub
jp
cmp
sbb
in
xsha256
cmpsb
shll
out
add
lahf
aad
pop
mov
clc
add
lods
mov
jp
cmp
dec
dec
ret
and
mov
mov
cmp
xor
dec
int
stos
out
dec
aas
icebp
xchg
out
pop
pop
mov
std
movsb
mov
and
sbb
dec
dec
mov
fistl
jb
or
inc
mov
das
aas
ret
int
inc
xchg
push
mov
in
daa
sbb
push
mov
and
dec
push
mov
mov
push
popa
xchg
popf
mov
sti
inc
sbb
mov
dec
adc
sub
rcrl
nop
lods
lahf
fdivrl
jecxz
testb
jnp
insl
xchg
xor
fwait
and
mov
into
push
cmp
add
push
push
into
inc
lea
xor
sub
pop
jecxz
dec
jnp
cmp
out
xor
inc
push
or
iret
mov
xor
mov
inc
testb
mov
cmp
and
mov
xor
iret
sub
cmp
std
inc
mov
jge
push
in
gs
stos
test
enter
mov
aam
jno
inc
testl
add
push
add
cld
arpl
xor
mov
stos
adc
icebp
adc
xor
or
scas
out
cs
daa
stos
dec
movsl
and
sahf
in
fwait
push
into
aad
pop
mov
adc
jae
adc
daa
cmp
inc
sub
sub
fisttps
inc
ja
icebp
pop
cwtl
mov
and
add
lahf
dec
or
push
arpl
cmp
inc
or
mov
push
gs
or
lcall
ja
push
inc
xor
cmp
mov
imul
test
shl
dec
inc
out
fisubrl
adc
inc
xchg
mov
add
shll
adc
imul
rcrl
xchg
or
cmp
sbb
pusha
sub
out
inc
xlat
mov
jnp
sbbl
out
dec
sub
test
rol
cmp
aad
andl
xor
call
lret
mov
pusha
and
fwait
xchg
hlt
jmp
cs
xor
fldl
sub
out
mov
jns
ds
ljmp
popf
shrl
daa
adc
addr16
push
dec
add
std
mov
jb
lods
lds
dec
jl
sub
jnp
mov
add
addl
mov
hlt
pop
mov
lret
dec
loopne
imul
outsb
insl
cmp
sbb
sub
jno
clc
jbe
sub
fstpl
cmp
push
mov
int
lods
rclb
pop
pop
icebp
and
and
jmp
outsb
aam
mov
xchg
movsl
or
dec
lret
jo
jp
pop
xchg
xor
pop
cmp
testl
imul
xchg
or
loopne
lock
rol
xor
sbb
inc
xchg
xchg
sarb
mov
xchg
push
sti
add
xorl
inc
pushf
movsb
stos
fldcw
sub
mov
scas
inc
cmp
pop
push
mov
cld
out
add
sbb
je
das
inc
js
add
outsb
mov
mov
leave
mov
adc
addl
jl
push
cmp
cltd
es
push
adcl
bound
mov
lods
jo
cld
cmp
and
into
jno
dec
insl
in
inc
mov
cmp
fsubl
push
test
adc
iret
inc
notb
in
icebp
fwait
js
mov
jb
ljmp
jno
jnp
popf
xlat
mov
push
adc
jo
or
pop
cmp
pop
inc
jmp
mov
pop
in
jmp
add
jbe
mov
out
jae
testb
scas
out
dec
or
lds
xor
mov
or
js
and
aaa
inc
mov
jl
loop
mov
fdivrs
add
add
mov
xor
and
mov
jmp
hlt
inc
inc
inc
dec
mov
leave
clc
mov
mov
adc
sub
scas
sti
xchg
jnp
in
mov
rorb
cwtl
push
push
dec
test
fsubrl
mov
iret
mov
xorl
mov
pop
cmc
int3
out
xchg
jnp
mov
std
testl
dec
clc
sti
lea
sbb
sti
dec
out
imul
mov
jnp
jnp
push
test
jnp
popa
insb
push
js
push
push
shlb
mov
and
add
or
mov
out
ret
mov
fldenv
pop
movsb
push
lahf
cli
lds
je
test
push
aaa
fcoms
sbb
adc
xchg
pop
js
jge
push
repnz
sbb
pop
pop
or
fwait
push
ror
scas
call
lds
push
sbb
dec
seta
sbb
cwtl
jp
jns
divl
icebp
cmp
or
ret
fsubr
mov
rorl
cmpsb
faddl
std
cs
mov
mov
ret
jg
lret
test
dec
pop
or
aad
leave
jmp
repnz
jno
jmp
imul
and
inc
xrelease
push
lock
in
xor
aas
inc
sub
adc
inc
in
add
in
mov
and
mov
xchg
and
pusha
xchg
sti
xchg
jge
pushl
mov
es
mov
cmpsb
mov
inc
ljmp
push
xchg
out
push
mov
mov
and
lret
or
arpl
aam
call
xchg
ficoml
movsb
lds
repz
and
das
pop
push
hlt
sub
ret
and
ret
jno
ficomps
push
and
pop
shll
xchg
inc
mov
ret
dec
sub
cld
ficompl
fidivl
lea
stos
add
fists
mov
push
sbbb
js
mov
test
inc
pop
cs
loopne
pop
adc
adc
mov
out
push
stos
xchg
mov
out
or
dec
xchg
ucomiss
mov
jl,pn
loopne
out
es
and
mov
mov
dec
iret
test
insb
popf
stos
jle
in
adc
mulb
mov
fcmovu
sbb
iret
stc
cmp
push
mov
cmc
nop
je
cs
iret
test
loopne
sbb
inc
push
in
loopne
sahf
jne
hlt
addr16
dec
xchg
or
inc
into
xchg
mov
mov
fadd
js
repnz
mov
fdivrs
mov
into
xor
adc
add
inc
pop
xor
lcall
mov
repz
push
pop
cmp
nop
sub
out
mov
mov
xchg
mov
shlb
fwait
mov
aas
push
mov
in
push
xchg
rorb
ss
push
lods
inc
cmpsl
sbb
jge
test
addr16
in
shrb
and
enter
fwait
push
addb
xchg
cmpl
jl
xor
or
adc
sbb
idivb
bound
aas
or
jg
pop
repnz
and
dec
adc
mov
xor
cmp
cmp
lcall
scas
push
aam
jns
jp
out
arpl
dec
mov
push
leave
pusha
mov
push
lcall
xchg
jae
das
femms
pop
mov
fiaddl
lods
push
cmc
lret
mov
lods
jl,pt
mov
daa
mov
into
or
lock
dec
jo
xor
dec
shr
xlat
and
addr16
sbb
xlat
mov
or
cli
inc
jge
lret
adc
push
adc
mov
fwait
push
cmpl
jno
adc
dec
dec
push
rorl
pop
fs
int
and
jge
movsl
and
stc
repz
push
xor
jle
gs
inc
or
xchg
ds
insb
fs
int3
push
push
fiaddl
pop
sti
insl
xchg
jge
xor
and
dec
mov
pop
lock
mov
jmp
mov
pop
jge
sti
jecxz
ljmp
popf
xor
cwtl
push
sub
enter
push
cmp
aas
outsl
insb
jb
inc
jbe
xor
mov
and
mov
movsl
xor
andl
inc
pop
jg
stos
pop
stc
das
nop
adc
xchg
add
int
mov
jae
shr
cmp
xchg
int
mov
das
pop
test
gs
mov
cmc
loop
enter
imul
inc
mov
jno
lahf
aam
push
xchg
loope
rolb
js
into
movsl
dec
xor
enter
loope
lock
pop
mov
cmpsl
push
cs
inc
sub
dec
push
or
and
sbb
adc
movb
rclb
dec
jg
test
xchg
or
pop
in
sbb
adc
outsl
mov
sbb
jl
es
adc
xorb
mov
cli
into
sbb
hlt
dec
je
cmp
pop
xor
xor
je
jnp
xor
lds
add
jo
lret
adc
mov
popf
adc
or
scas
or
leave
dec
sbb
sbb
lock
insl
push
sbb
int
js
gs
sbb
data16
pop
mov
enter
int3
pusha
bound
fstpl
jmp
lret
mov
xchg
mov
push
in
cbtw
testb
jle
pop
movsb
and
pop
enter
pop
in
dec
fisubl
jle
adc
sbb
pop
cwtl
xchg
popf
mov
stos
ret
jne
xchg
and
or
data16
decb
xchg
fnsave
and
loop
inc
mov
add
test
jae
int3
push
cmpsb
push
xchg
xor
shll
cmp
xor
sub
pop
es
repz
aas
or
ja
pop
mov
ljmpw
dec
and
adc
sbb
pop
loope
jns
mov
shrb
push
push
das
in
or
popa
icebp
and
add
call
lds
mov
cmp
adc
into
mov
lret
and
stos
enter
xchg
xchg
ret
pop
mov
pop
out
add
mov
call
mov
mov
divb
cmp
sub
mov
mov
mov
xor
inc
clc
loopne
or
shll
xchg
jp
mov
push
leave
les
negb
fmuls
jg
mov
imul
inc
jl
jbe
cmp
ficoms
mov
ficoml
mov
mov
stc
test
push
mov
jb
jno
sub
stos
cmp
adc
rcr
jb
and
push
jb
lahf
mov
cmp
push
xchg
out
mov
sub
outsl
imul
dec
sbb
push
jle
das
push
xchg
xchg
ret
sahf
pop
push
and
mov
sbbl
xchg
fidivrl
xchg
movsl
sub
push
and
mov
mov
daa
fs
cwtl
push
push
ds
mov
jle
xor
cmpsb
push
test
ret
stos
lods
mov
dec
push
mov
pop
mov
sub
scas
xor
lcall
mov
dec
adc
jbe
je
in
pop
std
sbb
into
sbbl
dec
or
test
mov
sub
sub
xchg
mov
in
mov
in
pop
repz
sbb
lods
mov
xor
ret
xor
mov
inc
ja
sub
insl
test
test
ret
outsl
dec
sbb
adc
sbb
and
jle
dec
or
add
inc
insl
pushf
out
push
hlt
cwtl
xor
mov
psraw
push
dec
sbb
push
out
fwait
cmpsl
loop
outsb
sub
subb
testl
lea
pusha
mov
int3
xchg
popf
jle
test
mov
or
out
or
pop
jmp
jg
pop
fmulp
shll
sbb
inc
mov
or
add
dec
insb
pushf
jecxz
fistpl
inc
add
pop
jl
mov
stos
loopne
lret
cmp
or
or
stos
inc
dec
mov
movd
test
jb
pusha
cmp
push
adcl
fdivrp
out
sbb
mov
rorl
cmp
jle
xor
mov
shl
or
es
andl
add
andl
xchg
sbb
and
out
pop
xchg
push
das
scas
cs
dec
mov
pop
fwait
adc
jp
cmp
mov
out
pop
mov
imul
dec
sbb
jb
xlat
push
push
les
xchg
daa
cwtl
jecxz
pop
scas
mov
mov
cmpsl
fs
neg
push
and
add
leave
or
in
jne
lea
push
sub
mov
mov
inc
popa
adc
js
mov
add
js
daa
inc
leave
jo
in
mov
scas
int
adc
sbb
leave
xor
iret
sti
mov
outsb
or
cmc
rorl
or
loop
sub
cltd
mov
cmp
or
das
mov
ret
mov
popa
pop
aam
sahf
sub
dec
lret
and
cmp
push
lahf
sbb
pop
xchg
push
daa
arpl
sub
cwtl
mov
lahf
pop
sub
test
arpl
and
jae
mov
js
std
dec
xchg
clc
mov
test
fwait
mov
inc
pop
ja
xchg
mov
ja
mov
dec
pop
xor
popa
or
sbb
loopne
xor
cmpsl
and
sarl
daa
hlt
mov
push
bswap
xchg
mov
xor
sub
frstor
adc
call
mov
jmp
sarl
cltd
ja
sub
inc
add
cmp
adc
ds
aad
int3
ret
shlb
pop
sbbb
jl
dec
sub
lds
and
push
outsl
lods
jbe
xor
js
and
xchg
mov
inc
outsb
rclb
cmp
incb
aad
ss
addl
jp
and
gs
out
or
xchg
lret
stos
loope
adc
mov
dec
rcrl
out
mov
fisttpll
cmp
push
xchg
lret
sar
sti
cwtl
movsb
sbb
test
es
xchg
stos
sub
les
jp
mov
dec
push
lock
push
mov
movsl
int3
push
in
popf
jp
call
vaesimc
aam
insl
xchg
jl
fsubrl
pop
push
insb
in
mov
je
mov
sbb
sub
push
mov
pop
jae
aad
mov
push
std
mov
pop
xchg
das
xchg
test
jns
mov
inc
xorl
mov
sbb
cmp
das
xor
jmp
inc
jno
scas
jle
xor
out
out
aas
sbb
or
and
or
sub
xlat
fimuls
push
pop
in
xor
or
xor
call
and
mov
push
test
cmc
inc
std
fucomi
cmp
jne
inc
cmpb
mov
xchg
outsb
sbb
xchg
mov
pop
add
in
filds
cmp
sub
fcoms
mov
push
and
sbb
std
rorb
sarb
add
outsb
mov
divb
jmp
jae
sub
mov
mov
xchg
insb
cli
cmp
lret
loop
in
inc
xor
shlb
or
popf
stos
xor
int3
test
mov
fstpt
cwtl
pop
imul
mov
sub
mov
mov
jmp
and
adc
icebp
push
lock
stos
pop
lret
pop
insb
leave
mov
add
adc
dec
call
int
mov
arpl
inc
mov
iret
sbbl
xchg
repz
sub
xchg
add
ja
add
jbe
xchg
mov
fucomip
xchg
dec
jno
and
mov
adc
pushw
and
call
cwtl
mov
movsb
sub
loop
cmp
dec
or
jno
stos
outsl
cmpsl
pop
out
add
sbb
daa
mov
outsl
insb
jmp
enter
fmuls
inc
jns
jp
cmp
stos
and
sbb
sbb
pop
dec
repz
jnp
adc
daa
mulb
gs
or
or
adc
insb
aas
mov
inc
jg
mov
mov
jecxz
or
iret
pop
les
in
jmp
fwait
push
add
icebp
inc
cmp
popa
push
pushf
out
aaa
fsubrl
lcall
dec
xor
jl
jnp
xchg
incb
cwtl
adc
adc
repz
xor
jge
dec
mov
cs
adc
inc
push
inc
or
jns
in
mov
and
mov
rcr
lret
fdiv
rclb
mov
xchg
divb
rorl
addr16
aaa
shlb
xor
test
js
movsb
lods
lods
in
out
les
xlat
pushl
cmp
fwait
inc
in
cmp
in
or
mov
pop
sahf
js
and
xchg
in
adc
push
adc
ret
xor
jns
int
dec
sbb
mov
cld
pop
scas
in
cltd
mov
inc
shll
in
cs
or
dec
mov
mov
pop
push
scas
add
movsb
cmpsb
in
push
loopne
syscall
sub
or
into
adc
push
les
pop
inc
in
test
sub
cmc
lods
push
xlat
in
gs
push
dec
push
mov
loop
inc
stos
cli
outsl
rclb
hlt
sbb
ss
adcb
jne
enter
xchg
inc
out
dec
dec
xchg
test
xor
sarb
xor
xorb
jo
out
sub
xchg
cmpb
jo
lods
out
sarb
dec
push
arpl
push
pop
or
cli
test
adc
mov
dec
loop
paddsw
inc
popa
cmc
mov
xor
test
mov
and
and
stos
out
mov
pushf
pop
or
jge
fisttps
xchg
fldl
sub
pop
mov
je
jns
inc
add
popf
mov
mov
jge,pn
int
or
and
cmp
lods
add
sub
aas
dec
in
inc
push
fisubrs
jbe
sbb
fstps
pop
inc
lahf
dec
jo
mov
push
out
loop
sub
int3
add
cli
dec
mov
xchg
fsts
xchg
adc
cmpsb
ret
pop
mov
or
shrb
jae
stos
xchg
cli
outsl
push
cmc
dec
sub
insb
jbe
inc
or
fcompl
repz
mov
mov
fdivs
fsubrs
push
ret
xor
loop
adcl
mov
mov
sbb
notb
xor
xchg
xchg
cmp
push
sub
push
adc
fidivrs
jmp
or
nop
mov
or
jl
push
mov
push
mov
addl
orl
and
nop
in
inc
lods
jmp
jbe
sahf
sub
insb
int3
add
icebp
stc
sahf
ret
scas
mov
dec
dec
dec
and
push
movsb
push
mov
cli
and
push
jle
fistpl
fs
pop
mov
jne
dec
mov
jecxz
xchg
out
or
pop
sbb
imul
cmp
xor
outsb
mov
add
sbb
fiaddl
sbb
dec
je
mov
xchg
jbe
jmp
imul
nop
inc
cltd
sarb
pop
push
jno
jge
or
push
sbb
std
pop
adc
pop
adc
xchg
test
adc
mov
and
xchg
mov
sub
xor
pop
and
movsb
leave
hlt
insb
xor
aas
leave
mov
adc
xchg
inc
test
add
aas
shrl
pop
ss
mov
les
inc
jmp
sbb
xchg
mov
mov
sbb
pop
test
hlt
xchg
mov
xlat
push
pop
xchg
lcall
rorl
add
adc
cmp
add
pop
andb
adc
inc
inc
shlb
scas
loope
jl
cli
jno
leave
xchg
leave
adcl
pop
fldl
xor
addr16
into
cli
dec
xchg
inc
into
xlat
stos
das
cmp
lret
sbb
xor
insl
std
jo
mov
mov
xchg
rcll
push
cwtl
push
inc
sub
cmp
shrb
cld
cltd
jbe
clc
nop
fldenv
fildl
cmp
js
imul
stc
mov
mov
adc
mov
push
insl
mov
sbb
ds
dec
mov
hlt
or
inc
nop
stos
into
insl
pop
mov
jl
xlat
lock
rorl
jae
js
xor
xchg
jnp
xchg
inc
add
hlt
jbe
sub
cli
icebp
out
lods
push
pop
fidivrs
bound
imul
mov
dec
dec
sahf
out
stos
fmuls
cmc
cmp
arpl
outsb
popf
int
lret
xchg
repnz
leave
pushf
mov
sarl
mov
cmpsl
cmpsl
into
adc
push
mov
divb
dec
mov
data16
mov
cld
mov
fnstenv
aad
dec
adc
ret
aaa
xchg
sahf
lods
sub
es
loope
jb
push
scas
jge
xor
or
mov
add
mov
cld
jo
push
xchg
je
stos
or
clc
mov
pop
push
imul
int
fwait
and
out
loopne
dec
and
and
les
or
push
test
pop
and
testl
sub
pushf
jno
mov
pushf
hlt
and
and
jle
xor
aam
inc
xlat
xchg
or
fdivrs
xchg
inc
les
jmp
scas
faddp
inc
dec
clc
into
sarb
xchg
cmp
push
insl
sbb
push
dec
xor
sbb
push
mov
in
hlt
out
das
sub
cmp
aaa
cmpsl
movsl
or
inc
add
mov
or
js
mov
pop
mov
mov
jmp
mov
xlat
sub
mov
jno
jecxz
xlat
imulb
cmc
jno
sbb
push
sbb
mov
lret
hlt
adc
adc
fcoml
ret
pop
mov
push
cmpsl
xor
imull
mov
aaa
cmp
xchg
andl
sar
pop
ljmp
fdivrl
inc
push
mov
cmpsl
call
add
lcall
add
fisubrl
out
and
push
xor
push
outsl
aas
pop
ret
cmp
jmp
adc
outsb
scas
jg
jne
lds
jno
ss
frstor
pop
sbb
ds
mov
and
sbb
dec
and
push
pop
dec
pop
inc
mov
jo
shrl
jae
mov
xlat
or
je
jecxz
pop
sbb
or
out
sti
and
lcall
fistpll
mov
push
mov
es
popa
cmpsl
test
mov
lret
ds
jo
push
inc
jns
repnz
dec
jbe
stos
mov
mov
mov
sarb
jmp
mov
insl
out
dec
int3
adc
sti
adc
or
ja
int
xor
btr
mov
mov
mov
loop
fmuls
pop
mov
cmp
pop
jo
arpl
inc
fidivl
xlat
imul
sarl
inc
inc
mov
adc
push
dec
add
test
mov
dec
shll
rcr
jecxz
mov
insb
xchg
jecxz
mull
imul
movsl
xor
jmp
int3
dec
xor
jbe
addr16
ret
aaa
call
or
outsb
xlat
add
or
lret
push
nop
jno
and
jg
adc
fisubs
jns
pop
loope
shlb
pop
out
cmp
push
cs
out
jno
adc
icebp
xchg
jl
addr16
imul
pop
mov
mov
adc
add
out
fcoml
call
shll
dec
inc
dec
sbb
or
mov
faddl
jno
xor
pop
nop
cwtl
inc
rolb
outsb
imul
sub
or
dec
inc
xchg
ds
push
cmc
lods
mov
mov
pop
cmp
inc
cli
int
mov
movsb
aam
dec
add
dec
call
cmc
mov
mov
sub
in
mov
fs
xor
scas
inc
stc
and
mov
pminub
and
loopne
mov
add
hlt
push
test
pop
sub
mov
in
lret
stos
jo
leave
mov
dec
lret
or
cmp
push
pop
ljmp
lea
jno
mov
mov
mov
push
je
inc
inc
fisttpll
lcall
pop
std
int3
mov
negb
cmp
cmovp
pop
pop
imulb
push
push
icebp
enter
mov
push
sub
inc
cs
dec
cmp
mov
xor
test
or
jmp
add
jbe
mov
loopne
ja
sahf
xchg
xchg
mov
ret
cmp
mov
movsl
push
xor
cmp
add
mov
push
xchg
test
fdivr
outsb
in
cmpsl
loopne
in
and
inc
mov
push
xchg
cmp
nop
outsb
mul
dec
cli
clc
mov
adc
cmp
adc
pop
dec
loope
and
sub
cli
gs
jl
jmp
inc
dec
adc
push
out
stos
cs
xchg
mov
dec
pop
outsb
negl
sub
pop
lea
or
xor
clc
adc
lret
dec
sub
sbb
imul
jg
push
lock
pop
push
add
xor
dec
inc
pop
movsb
out
pusha
movsb
notl
jbe
dec
xchg
add
mov
pop
mov
xorb
fwait
inc
sbb
pop
fcmovnu
shr
push
mov
xchg
call
xor
fidivs
daa
int
cmpsb
fdivl
xchg
cmpsb
daa
push
push
or
int
loop
cwtl
in
add
add
lods
sar
insb
sbb
dec
ds
int3
or
pop
fcmovu
imul
in
fnop
incb
fidivrl
int3
cwtl
call
popf
sbb
jbe
ds
pop
and
fucomp
test
adc
popa
popf
xchg
pop
outsl
outsb
pop
or
jbe
mov
pop
imulb
arpl
mov
push
xchg
lea
pop
pop
rol
inc
sbb
mov
mov
popa
lods
jbe
or
inc
sbb
push
pop
and
fwait
loopne
in
adc
std
movsl
cmp
lret
add
add
jle
notb
mov
sub
push
inc
jmp
mov
mov
sub
xchg
icebp
cld
mov
xor
and
adc
jmp
jb
lret
and
loop
call
dec
mov
stc
lock
mov
fnsave
addr16
es
or
hlt
call
xor
inc
loop
imul
shrl
lcall
stos
or
std
aaa
xor
cmp
and
sub
into
or
ljmp
dec
sbb
lods
cwtl
add
mov
movsb
mov
sbb
fisubrs
ret
cltd
jne
sub
loopne
orl
adc
dec
ljmp
test
and
sbb
or
dec
add
lcall
or
push
aam
sti
dec
xorb
cmp
mov
rcr
sub
xorb
test
mov
lcall
inc
push
enter
inc
push
mov
add
inc
in
loopne
pusha
pop
sbb
add
pop
mov
out
hlt
loope
popf
mov
mov
and
or
dec
jmp
pop
test
mov
add
popf
xor
cmp
adc
not
out
mov
push
je
pop
push
push
test
sub
and
out
cltd
cli
and
das
jne
inc
xor
cli
mov
inc
call
pusha
addr16
outsl
push
es
getsec
popl
jae
sar
arpl
dec
sbb
bound
mov
repnz
ja
cltd
insb
rcrl
and
xchg
sbb
mov
cmp
sbb
sti
dec
xchg
leave
inc
cmp
cmp
and
push
mov
jbe
xchg
aaa
fildll
out
pop
in
xchg
cltd
pusha
sahf
adc
shrb
js
shrl
adc
mov
gs
in
push
popl
adc
roll
sub
add
rcrb
jne
mov
insl
add
jmp
jne
das
push
sbb
ret
out
xchg
inc
dec
loopne
add
inc
adc
shrb
ret
ljmp
addr16
test
fs
ja
or
imul
lcall
and
gs
inc
push
jecxz
mov
mov
mov
and
cli
dec
mov
sub
and
in
mov
test
mov
push
gs
inc
xchg
insl
clc
cmp
mov
sbb
addl
out
xchg
mov
in
dec
jmp
hlt
fnstsw
lret
lcall
popf
out
fnstcw
pop
cmc
shlb
jge
jp
mov
aas
cmp
or
and
imul
movsb
mov
lea
mov
sbb
dec
es
xlat
push
popa
aas
xchg
pop
test
stos
lret
hlt
mov
mov
cmpsb
adcb
pop
addl
mov
int
mov
jmp
xchg
lret
loopne
inc
ret
dec
sbb
jns
mov
pop
pop
fmul
dec
add
xchg
les
dec
pusha
mov
iret
adc
cltd
out
add
sti
repz
outsl
lods
cs
hlt
fisubs
push
test
cmpsb
inc
aad
dec
push
pop
inc
pop
js
mov
out
scas
push
add
les
push
idivl
mov
andb
mov
mov
xchg
adc
iret
subb
cmp
xor
popf
add
sbbb
lea
adc
out
or
lods
aaa
rcr
jne
data16
jecxz
call
lea
int3
insb
ss
jmp
int3
xchg
leave
push
push
ret
sbb
rclb
je
std
repnz
lock
xlat
and
lock
and
shrl
clc
aaa
lods
out
in
and
xchg
movsl
in
xchg
mov
dec
fwait
sbb
outsb
cmp
push
mov
jne,pn
iret
mov
mov
jb
in
or
dec
testb
mov
mov
rcrl
or
mov
mov
test
push
pop
outsb
mov
push
and
repnz
imul
sahf
sbb
dec
cmpsb
fstps
hlt
lret
in
xlat
mov
nop
pop
lea
es
ljmp
adc
repnz
imul
in
mov
adc
pop
mov
add
addl
cmc
mov
mov
and
cmp
bound
jle
sbb
mov
sti
sbb
fs
out
leave
pop
cli
lods
test
fistpl
inc
jno
pop
mov
jg
mov
repnz
test
daa
fidivs
cmp
rcll
mov
push
lock
mov
xchg
in
or
adc
push
sub
add
fisttps
pop
pop
test
out
xchg
cwtl
xchg
and
roll
std
scas
push
enter
xchg
aaa
std
aas
stos
mov
inc
jmp
cmp
pop
mov
repz
and
scas
push
repz
lahf
or
nop
add
xorb
mov
gs
xchg
cs
mov
jecxz
cmp
lahf
sub
mov
fadds
inc
push
dec
rcrb
in
pop
adc
addr16
rorl
shr
aaa
pushl
enter
mov
jnp
out
pop
sbb
pop
adc
xor
push
movsb
xchg
pop
add
aad
leave
repnz
sbb
cmp
adc
inc
push
adc
inc
adc
or
mov
dec
lock
cmc
loopne
cmpb
push
dec
mov
sbb
add
mov
imul
outsb
cmpl
out
aas
loop
xchg
sbb
std
je
pop
sahf
aad
add
mov
aas
rclb
mov
pushf
xchg
lea
cmp
cwtl
into
in
loope
xor
roll
xchg
xor
mov
je
mov
and
idivl
aam
aas
dec
int
xchg
loope
and
ret
mov
inc
ja
fisubl
adc
lods
movsl
push
out
pop
scas
lds
fidivrl
lea
sub
ljmp
jmp
and
out
cmpsb
mov
cmp
sbb
or
cmp
je
test
push
jl
shrb
add
inc
xchg
mov
mov
stos
fdivrp
das
jecxz
jl
xchg
test
inc
leave
mov
sub
jb
adc
cmp
mov
lods
push
fisubrs
push
int3
xchg
jg
jnp
xlat
jb
mov
rcll
sbb
ret
mov
stos
mov
push
cs
rorl
or
in
add
jecxz
popf
dec
inc
mov
dec
sbb
loop
fadds
mov
sti
scas
pop
jp
xor
gs
sbb
xor
adc
cmp
in
int3
mov
lahf
jecxz
int
out
pop
mov
fimull
jg
scas
mov
mov
test
pop
xchg
das
aad
into
cwtl
pop
sbb
in
push
out
shlb
xor
add
mov
pop
movsl
add
cmp
test
sti
popa
xor
xchg
mov
icebp
stos
in
sti
movsb
adc
and
xor
pop
add
dec
pop
fdiv
cltd
inc
or
into
jnp
sbb
pop
jecxz
lock
pop
pop
imull
lcall
xor
movsb
push
fildll
cmp
ret
shl
cmp
xor
loopne
xchg
xor
dec
cmc
test
pop
sbb
mov
add
push
lret
cmp
dec
insl
mov
lea
sub
or
sbb
and
cmc
fsubrs
jl
sarb
fs
sbb
cmp
or
mov
push
adc
scas
xchg
movsb
inc
pop
mov
nop
push
fs
add
xor
decl
adc
out
xchg
sbb
movsb
repnz
cmc
or
push
sti
adcb
mov
ficoms
inc
mov
ja
dec
xor
outsl
jp
xchg
arpl
jmp
test
fildll
mov
addr16
dec
call
dec
out
mov
cltd
cmpsl
and
add
push
push
cmp
scas
aas
or
lods
mov
cld
mov
sti
mov
jbe
lds
js
mov
shr
push
cmc
int
push
idivb
dec
mov
orl
je
mov
sub
ret
xor
sti
sub
int3
out
or
push
adc
mov
enter
repz
popa
hlt
mov
cmp
sbb
shrb
mov
inc
out
jmp
or
scas
rcrb
add
arpl
pop
and
imul
les
mov
nop
push
xchg
repz
xor
jne
fcomps
lock
mov
cli
fsts
xchg
mov
pusha
sti
pop
jbe
xchg
loopne
test
movsb
in
pop
in
stos
scas
cmc
mov
push
cmp
dec
sbb
movsl
adc
inc
sbb
xchg
cmp
inc
aad
hlt
fxch
into
pop
arpl
adc
outsb
mov
popf
push
sub
lea
sahf
lds
nop
xchg
dec
cs
mov
hlt
add
pop
dec
push
jecxz
mov
and
sub
test
je
aad
sub
daa
pop
icebp
xor
xor
mov
int
ljmp
and
add
dec
nop
push
outsb
mov
cs
pop
push
aam
dec
jmp
jle
lods
imul
mov
add
insb
dec
fnsave
arpl
push
mov
sbbb
addr16
sti
sbb
cmp
ret
push
pop
ficoml
leave
in
movl
mov
cmp
mov
pusha
jne
push
mov
fs
movlps
adc
pop
mov
xor
outsb
pop
adc
xchg
mov
xchg
xor
flds
push
push
mov
daa
inc
test
push
pop
and
adc
jge
pop
jno
pop
cmp
add
adc
test
sbbl
dec
fninit
xchg
push
cmp
push
movsl
nop
cmp
cltd
dec
pop
aam
xlat
hlt
cli
sbb
jne
inc
cmp
cli
pop
js
jmp
add
mov
cmp
data16
pop
or
std
out
nop
xor
outsl
push
jle
dec
sub
xor
scas
andl
sarb
addr16
pop
or
adc
cwtl
inc
jl
jg
mov
inc
popf
movb
into
jne
movsb
movsl
std
dec
in
int
xchg
jo
js
dec
test
movl
enter
in
test
mov
movsb
adcl
add
xchg
mov
stos
adc
js
cmc
cli
xchg
ds
mov
test
mov
loop
scas
dec
mov
shrb
mov
xchg
rcrl
cltd
and
adc
lret
test
fistl
sti
mov
sub
test
nop
std
sub
mov
mov
sbb
pusha
dec
sbb
mov
or
xchg
add
lods
push
rcll
adc
scas
push
pop
sahf
dec
sbb
add
or
ss
inc
scas
mull
gs
push
cltd
dec
div
inc
movsb
xor
push
std
adc
dec
lods
out
sub
andl
fildll
jbe
les
mov
insl
pushf
std
xchg
dec
dec
lods
aam
mov
cmpsl
sbb
hlt
es
sub
push
jo
add
testl
pop
rcrb
loopne
shlb
mov
or
xchg
aad
mov
adc
push
adc
adc
mov
into
sub
sbb
add
and
fstl
cmp
xchg
cmp
xchg
int3
mov
clc
cmpsb
leave
test
inc
xor
push
sti
divb
sbb
xchg
adc
pop
addl
sub
sbb
adc
leave
lahf
out
leave
push
sbb
cmp
jg
repz
popa
repnz
inc
add
clc
movsb
and
inc
dec
add
popf
ljmp
mov
pop
sub
push
ret
jne
mov
cs
xor
sub
xor
movsb
pusha
mov
pop
cmpsl
in
lret
in
sub
add
mov
outsl
cmpsl
nop
pop
push
jmp
arpl
adc
pop
or
popa
in
fimuls
jnp
das
mov
lods
sub
adc
pop
in
add
out
sub
add
xchg
or
pop
fnsave
jl
cli
pop
fwait
leave
xlat
aad
xor
fisubrl
adc
dec
fcomps
cltd
sbb
mov
inc
std
and
push
pop
xchg
xchg
inc
aad
dec
xchg
or
or
shll
les
cltd
jnp
in
enter
movsl
or
inc
jbe
mov
nop
stos
push
xor
test
mov
push
push
cli
jle
negb
sbb
roll
mov
mov
sti
mov
or
out
mov
lcall
fbstp
and
lods
sbb
test
fwait
mov
addr16
and
push
dec
data16
test
inc
aaa
inc
dec
andl
call
fidivs
push
cmpsb
mov
mov
lock
sub
ljmp
repnz
test
fwait
inc
in
or
sbb
add
xchg
dec
lcall
lods
pop
addr16
adc
cs
push
std
lods
shll
jnp,pn
fwait
jle
pop
js
xchg
mov
xchg
out
imul
lret
or
cwtl
fisubs
lcall
dec
add
sbb
outsb
xchg
dec
sbb
fwait
lahf
sahf
mov
mov
dec
andb
lret
arpl
js
bound
test
cwtl
sub
in
add
add
push
out
mov
pop
inc
push
xor
add
sti
enter
das
loop
loop
movsl
push
aas
mov
cmp
push
iret
and
or
cld
inc
test
push
lock
rcrl
or
push
xlat
push
les
int3
out
shll
shll
jg
inc
sub
fisubrs
aad
fxch
imul
idivb
scas
lods
sub
lcall
stos
lcall
push
loop
js
add
push
mov
clc
loope
fsubr
push
push
mov
mov
fstpt
dec
es
xor
mov
xor
decl
push
sub
mov
jno,pn
sbb
cmp
mov
dec
test
or
sar
int3
sbbl
xchg
pop
push
stos
pop
jbe
stos
xchg
inc
mov
fists
xchg
les
arpl
outsb
jmp
adc
pop
jae
loopne
or
dec
xchg
imul
mov
testb
pop
outsb
fcmovb
sub
lcall
jmp
fstl
jnp
and
pop
jg
add
add
push
mov
jg
xor
mov
je
push
push
inc
lret
loope
pushf
push
popf
mov
ret
lock
aaa
jle
popf
add
inc
pop
in
lods
insb
enter
xor
stc
iret
pop
push
and
pop
or
sub
jnp
dec
or
and
mov
shrb
icebp
lea
push
mov
les
jge
aaa
scas
jge
sub
jge
fisttps
sub
mov
cmp
jno
imull
cli
sti
aad
jmp
sub
adc
inc
mov
test
hlt
das
mov
insb
jbe
mov
push
shr
arpl
pop
push
orl
jp
shrl
imul
divl
xor
in
cmp
insb
push
clc
push
add
mov
adc
pop
fldcw
int
mov
ret
dec
adc
test
enter
add
push
in
and
inc
adc
mov
mov
test
jne
mov
hlt
in
aas
add
jbe
add
in
add
andl
sbb
mov
aam
gs
push
insb
jmp
xchg
stos
shrb
fisttpl
jnp
mov
adc
push
lcall
or
dec
push
mov
xchg
shll
inc
sbb
or
ljmp
sub
test
cld
jg
sahf
inc
popf
add
cmp
jnp
jbe
pushf
sub
add
xlat
arpl
push
push
icebp
add
ja
dec
stos
xchg
loopne
ret
mov
jle
adc
lods
add
xor
push
std
sbb
sbb
enter
xchg
es
hlt
daa
adc
out
dec
mov
cmp
mov
dec
fdivs
xor
push
pop
rorb
sahf
fdivl
fincstp
repnz
xor
cmp
add
in
sub
roll
xor
xor
or
lret
adc
dec
add
add
mov
push
ficomps
mov
cmp
mov
add
push
fbstp
lds
xchg
out
popf
dec
incb
outsb
stos
sbbb
pop
sub
sbb
movsl
notb
xor
loopne
add
lods
mov
cmp
xor
icebp
add
test
stc
and
pop
inc
xchg
movsb
insl
xchg
jmp
fsubp
out
xchg
sub
call
and
jbe
and
lods
or
sbb
xchg
sub
test
inc
test
jl
cmpsl
pushf
aas
shrb
or
inc
adc
xchg
mov
pop
in
or
jne
divl
out
lret
inc
adc
mov
loope
adc
xor
arpl
adc
pop
lea
mov
mov
or
shll
mov
sub
jecxz
mov
sub
jbe
dec
pop
outsb
mov
ret
dec
cwtl
mov
movsl
addr16
cmpsl
pop
pop
lea
sahf
std
add
loopne
js
jne
adc
cmp
andl
mov
sbb
cltd
adc
push
jle
adc
mov
out
mov
out
dec
mov
pop
mov
fcoml
out
adc
les
cmp
add
iret
pop
mov
loope
dec
daa
jge
xchg
jg
jb,pt
pop
or
mov
imul
cmp
leave
add
ss
push
decl
scas
jecxz
adc
sbb
inc
out
or
addr16
dec
leave
dec
pusha
lret
sub
lret
or
cld
ljmp
mov
sbb
fsubr
sub
lds
outsb
mov
outsl
loope
mov
or
sub
dec
insb
xorb
and
cmp
or
mov
test
sub
pusha
mov
loop
dec
jne
je
cmp
rol
aam
dec
fbld
pop
out
lahf
adc
out
aam
xlat
imul
daa
rcll
js
rorb
dec
nop
xor
or
jbe
jbe
pop
outsl
mov
mov
in
enter
inc
mov
inc
inc
mov
ret
ud0
sti
stos
mov
out
cmp
out
add
outsl
pop
xchg
loopne
jl
jnp
icebp
cld
mov
jno
nop
sarb
ret
std
mov
push
rcrl
cmp
rcrl
xchg
add
addr16
clc
fcomps
loop
leave
mov
in
mov
and
cli
shll
sbb
inc
cmpsl
enter
int
jbe
rcrl
push
out
enter
mov
cmp
cli
sbb
shl
adc
mov
or
mov
sbbb
insb
inc
mov
jecxz
sti
push
fisttpll
jno
loop
ret
lock
shrb
popa
loope
add
cmp
mov
fistps
mov
cmp
push
mov
aad
cmp
stos
jmp
and
adc
loop
cwtl
cmpsl
inc
clc
dec
jbe
mov
lods
shrl
jbe
lret
pop
loopne
push
testl
stc
rclb
aam
mov
cltd
pusha
pop
jbe
xor
mov
inc
pop
mov
push
cmp
mov
xor
fsubp
cmp
in
and
fidivrs
add
loop
dec
into
cmp
sarb
mov
popf
sbb
addl
inc
add
mov
pop
out
push
out
sub
mov
mov
xor
loop
push
inc
cmpsb
mov
sub
dec
test
or
or
leave
repnz
sbb
sub
enter
and
push
das
xor
dec
jle
in
mov
sarl
sbb
das
in
and
xlat
add
mov
iret
mov
sbb
repz
mov
ljmp
das
and
and
lds
fsubs
pushf
out
mov
gs
jp
sub
fwait
mov
fimull
movsl
mov
in
int
mov
cwtl
mov
lea
lahf
lcall
xchg
imul
sub
push
add
mov
sbb
adc
and
sub
adc
add
fists
icebp
enter
pop
cmpb
adc
xor
mov
out
pop
xor
mov
mov
jnp
in
ljmp
lods
push
adc
cld
imul
lahf
repz
mov
pop
dec
cmp
popa
mov
dec
or
push
iret
dec
pop
je
pop
cmp
mov
lods
jl
cmc
loope
xchg
lods
mov
aad
mov
mov
movsl
mov
lret
leave
aad
sub
mov
pop
insb
sub
pusha
cmp
fwait
ret
xor
not
add
lods
out
mov
cwtl
push
adc
and
mov
sub
test
and
jmp
pop
pushl
jp
test
adc
ret
mulps
mov
jg
sarl
loopne
ja
adc
xchg
cwtl
sbb
ds
insb
enter
sbbb
jmp
pushf
iret
and
sub
sarl
aas
mov
sti
xchg
xchg
mov
xor
sbb
popf
les
dec
pop
cli
stos
jmp
sahf
cmpsl
mov
add
push
sbb
into
cli
rcrb
movsb
stos
xchg
fwait
and
mov
addr16
sahf
insb
fs
mov
or
or
dec
inc
ds
xchg
sbb
jns
int
push
insl
gs
mov
dec
shlb
mov
arpl
call
out
cmc
inc
bound
mov
orl
dec
xor
dec
cmpsb
xchg
lret
in
mov
fdivrp
in
mov
repnz
jge
or
or
push
mov
and
add
mov
jo
shrb
sub
cmc
jae
add
jns
or
je
xlat
cmp
outsb
pop
cmp
subb
lcall
lea
addl
es
mov
scas
pop
add
jns
enter
fwait
sub
cmc
lahf
shrb
daa
or
mov
xchg
in
cld
xchg
ficomps
popa
pop
pusha
mov
jmp
sub
mov
sbb
dec
pop
cmpb
daa
push
and
lret
adc
int3
jnp
mov
mov
pop
jg
push
xchg
cmp
mov
or
insl
adc
sbb
fcmovu
and
mov
adc
mov
jle
rcrb
sub
clc
or
aam
mov
jle
ret
lcall
or
dec
call
test
sbb
sbb
std
pop
xor
into
and
pop
pop
imul
ret
and
sbb
cli
arpl
mov
mov
in
sahf
pushf
outsb
mov
into
cmc
cmp
mov
xor
aas
roll
pop
mov
inc
repnz
mov
mov
jns
addr16
pop
mov
imul
fiaddl
adc
repnz
mov
add
inc
cmp
xorb
loope
loope
sbb
sub
cmc
loope
sbb
cmc
lret
lods
mov
mov
sti
es
adc
stos
ret
movsb
jl
jmp
mov
imul
pop
gs
xchg
adc
lcall
dec
dec
es
dec
into
inc
pop
mov
cmp
pop
pop
lock
daa
xchg
aam
ds
call
inc
jb
mov
stos
mov
lcall
idivl
cmp
add
cmpsb
ret
test
insl
movsb
xor
fwait
cmp
pop
mov
xchg
pop
mov
mov
mov
sbb
push
popf
inc
std
pop
mov
call
pop
fisubrl
lea
jmp
dec
sar
dec
push
inc
stc
rclb
fs
cmc
sub
dec
and
inc
lock
test
test
add
mov
in
pop
popf
push
addr16
add
adc
dec
mov
repnz
loop
jg
jae
and
mov
popf
divb
call
and
dec
std
mov
and
inc
jbe
std
stos
push
mov
mov
inc
das
stos
jno
pop
popa
addr16
pop
jno
frstor
mov
jo
mov
ljmp
jg
mov
inc
je
cmc
arpl
add
pushf
adc
popa
jl
fiadds
mov
repnz
into
scas
and
mov
cmp
pop
pusha
lret
pop
mov
inc
jo
test
call
mov
xor
daa
out
mov
mov
push
add
nop
andb
rclb
out
jp
outsb
rcr
dec
inc
dec
popl
std
orl
pop
mov
and
les
insl
xor
in
test
mov
mov
and
mov
jle
iretw
dec
mov
stos
imul
add
fisubl
es
mov
sub
mov
movl
add
xchg
xchg
mov
leave
insl
pusha
xchg
xor
mov
insl
fs
fisttpll
add
cwtl
hlt
mov
sub
pop
outsb
mov
sbb
mov
pop
or
mov
xchg
push
or
pop
mov
add
fdivrl
cmp
outsb
jmp
lret
jle
push
inc
mov
gs
mov
test
mov
ds
adc
inc
or
adc
dec
mov
decl
push
pop
xor
cld
or
push
or
stc
test
call
out
lea
sub
xor
mov
mov
cltd
ljmp
cmp
xlat
mov
cmpsl
add
test
sbb
repnz
das
jnp
sahf
dec
lret
adc
inc
add
push
and
sbb
lahf
adc
aad
mov
or
push
push
rcrl
repz
jmp
xor
push
and
sar
add
and
cmpsl
js
test
adc
ret
dec
nop
add
inc
std
lods
sub
popa
jge
xor
outsb
sarl
push
int
cmp
in
sti
jg
mov
sti
mov
jmp
pusha
sub
mov
dec
mov
stos
mov
pushf
xor
nop
cmpl
out
jne
or
fdivs
hlt
sub
ss
cmp
and
and
xchg
sarb
filds
add
out
in
jnp
sbb
adc
fldl
pusha
enter
mov
mov
shl
lock
cmp
pop
mov
fcmove
jae
mov
push
bnd
and
adc
fcompl
stos
sub
cli
loopne
mov
mov
addl
in
sbb
xor
mov
xchg
repnz
xor
and
std
cmp
dec
into
sbb
gs
rcrb
push
scas
cltd
sbb
repnz
jmp
inc
or
repnz
lods
inc
pop
pop
fcompl
icebp
addb
les
fwait
enter
sbb
enter
inc
mov
mov
push
inc
adc
mov
loop
fsub
test
pushf
pushf
dec
imul
mov
insl
hlt
and
sar
pop
insb
sbb
aaa
adc
push
add
mov
fsts
xchg
xchg
cmpsl
loope
fidivrs
in
bound
add
lcall
out
adc
lcall
scas
test
mov
mov
sbb
jecxz
and
addl
push
inc
in
jo
mov
pop
aam
stc
lcall
push
mov
sub
repz
xchg
repz
or
ret
push
adc
in
jne
cmpsl
stos
mov
daa
popa
jns
push
cs
and
xchg
mov
sub
add
fcmovbe
push
ret
pop
cmpsl
inc
imul
jp
out
adc
shrl
sbb
lock
mov
and
mov
lea
adc
loopne
cmpsb
das
pusha
repnz
iret
loope,pt
push
or
or
mov
jmp
cmc
or
decb
mov
and
lods
dec
mov
adc
pop
in
sbb
mov
and
xchg
aas
addl
cmp
or
push
and
jecxz
ds
inc
push
mov
shlb
push
xor
push
xor
dec
outsl
mov
mov
jp
loopne
jmp
into
add
sbb
divl
into
mov
sub
adc
leave
call
nop
push
shll
jge
inc
sti
cli
inc
stc
push
std
scas
idiv
imul
jne
pop
xor
push
sub
sarl
push
test
xchg
or
test
scas
cmpsl
push
xor
mov
iret
in
pop
jp
test
pop
out
ret
scas
out
push
popa
out
std
lcall
bound
sbb
adc
and
pop
dec
aad
push
or
cmp
dec
les
push
pop
sbb
adc
subl
sub
ret
inc
jns
loope
pop
std
fidivl
and
and
sub
ret
add
sub
insb
pushf
cmp
ja
cmp
test
jmp
test
sub
mov
push
in
inc
fldenv
or
and
pop
clc
out
mov
call
cs
clc
dec
dec
jg
or
sub
jl
xor
push
in
adc
in
add
loope
int
es
and
in
lcall
adc
jge
fcompl
jl
mov
aam
push
add
lret
fs
lock
into
lret
mov
sbb
sbb
cvtps2pi
jnp
sub
test
sub
mov
xchg
cmpl
mov
sbb
rcll
pop
mov
imul
pop
fsubs
icebp
lea
xlat
pop
jo
and
cmp
mov
pop
addl
add
cmp
cmpsl
dec
mov
xchg
push
jnp
mov
jo
mov
cmp
iret
outsl
jmp
mov
cmp
dec
pop
push
jp
mov
push
sub
daa
sub
cld
inc
loop
mov
add
sbbb
mov
push
ja
jae
push
emms
mov
add
xor
je
mov
cmpsl
outsb
loop
mov
lods
jbe
fs
jmp
cmp
movsl
add
testb
or
push
cwtl
shlb
jae
mov
sbb
adc
dec
cwtl
lock
rolb
add
mov
lret
cmp
cmp
daa
fnstsw
mov
iret
pcmpeqw
sti
out
outsl
sbb
in
sbb
loope
jmp
mov
imul
jno
jae
cmp
sub
jns
aaa
loop
clc
lret
fiaddl
adc
popa
iret
insb
xchg
push
xor
xor
jo
xchg
push
push
inc
jbe
ss
sti
cs
dec
lret
jecxz
dec
addr16
xchg
xchg
mov
ljmp
pop
mov
xchg
inc
popa
lahf
jnp
loop
mov
xchg
into
dec
cli
int3
in
fsubl
popf
push
jg
clc
stos
and
loopne
les
movsb
aaa
clc
mov
lods
enter
mov
lahf
and
sbb
or
mov
push
push
test
mov
dec
sbb
and
fs
enter
push
cmp
jbe
les
lcall
clc
lea
pusha
jnp
and
fs
fwait
out
cmc
sbb
loop
sbb
dec
pop
inc
fwait
pusha
add
push
add
sbb
scas
ljmp
mov
in
jecxz
dec
cmp
or
xchg
push
out
sub
and
jg
sub
fdiv
or
xchg
push
mov
out
sub
scas
xor
sub
ljmp
xchg
pop
orl
iret
mov
test
mov
fdivrs
lret
xlat
jmp
mov
mov
je
subb
xor
jb
or
inc
sbb
pop
clc
nop
inc
inc
dec
testl
icebp
movb
sbb
cld
ja
jmp
push
pop
loop
dec
gs
sub
leave
push
jl
add
sbb
jno
loopne
push
aaa
daa
jbe
xchg
stos
popf
cmp
fs
jo
push
xor
xchg
jecxz
pop
sahf
pushl
cmpsb
lods
fdivs
and
mov
aad
jge
sub
outsl
outsb
adc
std
pop
aad
mov
mov
dec
cmpsb
out
jmp
push
inc
sub
jmp
imul
loope
punpcklwd
cmp
jg
std
lods
jg
mov
add
sbb
push
lcall
sbb
xchg
sub
jmp
cmp
cli
fdivs
or
call
cmp
mov
aad
pop
gs
xchg
jp
inc
mov
icebp
pop
lcall
mov
add
pop
in
psubb
cs
ds
popw
aaa
pop
fstpt
js
scas
sub
popa
add
fdivp
insb
mov
bsf
movsl
icebp
repnz
cmpsb
and
movsb
inc
pop
adc
mov
xor
repz
sbb
outsb
push
mov
repz
cld
repnz
sbb
shl
cmp
sub
mov
pop
inc
daa
stc
xor
mov
addr16
es
pop
mov
push
shlb
imul
push
in
push
push
repz
pop
js
push
xor
or
lods
xlat
popf
pop
repz
mov
imull
pop
adc
pop
cmp
cwtl
repz
adc
and
sti
adc
cmp
dec
call
loop
cwtl
pcmpgtw
test
and
sub
lret
mov
adc
jp
xchg
andl
mov
in
or
dec
and
xlat
xor
out
xor
rcl
dec
movsb
jo
mov
outsb
cmpsb
bound
cwtl
fisubrs
cmpsb
push
lret
dec
cmpsb
inc
call
fcmovnbe
jae
outsl
movsb
lret
test
jle
arpl
pop
lea
inc
sbb
cmpsl
not
loop
inc
inc
lods
pop
add
xchg
out
inc
cwtl
idivl
in
imul
lret
aaa
mov
insb
loopne
fdivrl
push
or
and
ret
movsl
jl
in
sub
mov
cmp
adc
addr16
lret
jmp
lret
fidivs
jge
add
and
and
jecxz
imul
stc
fcmove
enter
nop
xor
enter
inc
fldt
push
out
addb
push
mov
pop
jnp
xchg
adc
fcmovnbe
mov
push
aaa
add
lret
sub
inc
sub
sub
fistpll
mov
pop
stos
jbe
scas
adc
sub
add
push
mov
sbb
setb
cmpsl
fnstenv
push
and
sub
sub
movsl
test
mov
mov
orb
xor
test
dec
sub
lock
ret
inc
imul
xchg
mov
in
sub
or
in
add
inc
test
xchg
mov
es
and
ds
mov
dec
movsb
in
bound
jns
sahf
sbb
mov
ret
mov
movsb
rol
frstor
sub
lret
mulb
dec
aas
or
cmc
or
shll
jnp
in
push
pop
aas
add
scas
jle
not
ja
add
btr
inc
add
cli
mov
add
popf
aaa
stc
test
sbb
in
sub
jo
mov
sbb
jmp
xor
sub
mov
dec
ja
sarl
ds
int
xor
jbe
xor
and
loope
loopne
xchg
movsb
out
popf
push
or
push
mov
adcb
mov
aas
xchg
mov
bound
vmread
sub
cmp
inc
mov
or
stc
push
fidivrs
push
ljmp
jg
add
inc
or
testb
stos
fcmovne
cmp
push
inc
and
jne
lods
popf
mov
adc
pop
and
in
pop
adc
mov
dec
ret
je
lahf
add
inc
test
fistpll
dec
lahf
xchg
fstpt
sbb
fsubs
xor
xchg
pop
std
sbb
popa
into
outsb
call
mov
adc
ja
cmp
mov
mulb
in
int
xor
mov
in
pop
pop
xor
dec
ret
cmp
lcall
cs
and
imul
stc
pop
sahf
movsb
sub
adc
add
and
push
mov
add
fcmovu
pop
arpl
and
add
add
mov
push
cmp
fldenv
mov
das
stos
daa
xlat
cmp
dec
cs
pop
stos
mov
arpl
jge
js,pt
mov
jp
out
rcl
xchg
aad
movsb
xchg
and
scas
and
aad
aad
or
push
inc
outsb
call
jb
lods
cld
dec
xchg
stc
cli
lds
jnp
rorl
xor
insb
cmpsb
test
fstps
into
out
push
stos
rcrl
fs
dec
cld
push
arpl
lahf
sub
lret
push
xorb
xchg
orb
add
or
aaa
add
add
push
out
push
stos
lret
mov
inc
stos
inc
sarl
xor
or
lods
add
sub
out
addr16
cmpsl
cmpsl
ds
sarl
or
fistl
jb
into
mov
cmp
and
in
jge
call
inc
std
cmpsl
pop
push
scas
sub
sub
and
add
or
push
into
xchg
mov
mov
test
adc
sub
xlat
aas
sub
cmpsb
cmpsl
daa
movsb
inc
stos
dec
std
sbb
mov
shll
or
inc
out
lock
mov
push
js
push
movsl
mov
xchg
inc
lcall
mov
dec
out
rcll
int3
sbb
push
loop
je
pop
xor
dec
nop
add
inc
shlb
dec
or
dec
call
inc
vcmpss
bound
dec
cwtl
loop
push
inc
int
xchg
pop
inc
addl
bound
decl
adc
iret
sub
mov
cmpsl
scas
jmp
and
sbb
inc
cs
mov
mov
adc
cltd
clc
inc
dec
sub
push
pushf
sbb
js
inc
sbb
push
xchg
mov
push
imulb
inc
cmp
xorl
out
dec
fs
insl
xchg
sub
lret
xchg
jle
xor
daa
insl
pop
xor
ja
mov
inc
aam
adc
rclb
mov
decb
out
sbb
stc
cwtl
frstor
add
ja
fimuls
testb
jnp
xor
ds
xor
mov
mov
fstps
jo
ljmp
stos
or
push
cmp
push
mov
icebp
mov
loopne
stos
js
inc
repz
rolb
and
es
sub
loopne
out
sub
dec
jg
mov
sub
push
adc
inc
inc
push
xchg
popf
mov
pop
mov
adc
aaa
out
mov
mov
or
push
movsl
dec
and
xor
lock
call
call
loopne
stos
popa
add
push
fcoms
or
sub
lods
and
test
imul
iret
popf
jne
arpl
inc
mov
cmp
mov
pop
jg
add
cmp
pop
dec
pop
jnp
pop
ret
mov
pop
and
rcr
xor
adc
call
or
movsb
adc
ds
out
rol
insl
mov
mov
mov
jmp
fnstenv
add
push
aas
pop
mov
xchg
shr
scas
sbb
bnd
jb
movsb
das
push
pop
mov
pop
into
mov
out
in
and
roll
xchg
push
pop
mov
sub
shlb
orb
jg
shlb
sub
adc
sbbl
push
cmp
test
add
mov
sbb
hlt
sub
aas
or
lods
ss
flds
div
outsl
mov
inc
or
inc
mov
inc
or
pop
pop
insb
lcall
aad
into
mov
pop
sbb
rcrb
inc
jmp
jle
or
movsb
test
and
sahf
and
idivl
out
mov
pop
xchg
cmpl
insb
jb
pusha
out
jmp
cmpsb
dec
xchg
mov
xchg
mov
lret
sahf
sub
cmpsb
and
sahf
push
pop
pushf
or
and
data16
cld
add
xorb
div
or
sbb
idiv
mov
and
ss
fildll
lahf
ds
push
xor
pop
sbbb
aaa
lods
int3
std
inc
stc
jp
xchg
movsl
outsb
sub
adc
mov
out
fnstcw
lret
jae
shlb
mov
repz
dec
add
adc
mov
sub
in
dec
jge
push
test
add
aaa
punpckhdq
adc
xchg
or
mov
jmp
inc
test
or
xor
push
add
pop
mov
lret
push
adc
rcrl
pop
stos
xchg
inc
lret
pop
adc
std
push
cli
sbbl
mov
pop
xor
outsb
mov
xor
popf
out
jae
dec
rclb
repnz
popa
mov
sbb
push
loop
pop
es
xor
test
sbb
clc
pop
insb
mov
add
mov
jp
mov
xchg
imul
and
mov
push
andb
das
and
pop
shlb
mov
pop
add
lods
arpl
jp
adc
clc
sbb
inc
xlat
cmp
jge
push
ljmp
in
fimuls
in
lock
cmp
cmp
into
ds
outsl
and
je
imul
incb
pop
dec
ds
mov
cmp
cltd
push
xchg
add
rcrl
jbe
out
hlt
pop
pop
pop
adc
imul
repz
je
push
popa
lret
adc
and
cmp
xor
lock
mov
outsb
loopne
in
movsl
outsb
out
cmp
scas
push
mov
iret
xor
push
in
dec
adc
add
jle
iret
mov
add
dec
cmp
inc
jl
adc
push
imull
adc
xchg
lods
ja
xlat
pop
movsb
lret
cmp
mov
push
stos
lds
fstpl
jecxz
add
stos
xchg
xor
je
pop
pop
lcall
and
push
cmp
daa
jo
jae
in
fisubl
shll
sahf
clc
popf
add
ds
adc
jnp
inc
push
out
and
push
rcl
add
lahf
test
adc
js
outsb
pusha
ds
outsb
mov
pop
cwtl
mov
dec
mov
add
icebp
mov
aaa
mov
or
xor
cmp
ficoml
pop
sbb
push
push
movsb
adc
xchg
push
add
in
jge
xchg
adc
mov
outsb
push
and
jnp
hlt
scas
push
arpl
jecxz
dec
movsl
dec
sahf
dec
sub
ds
mov
sbb
lcall
addr16
std
xchg
pop
mov
or
xchg
orb
sti
dec
dec
xchg
pop
push
dec
xchg
dec
cmc
sbb
fdiv
mov
aam
inc
pushf
and
pop
push
jp
nop
mov
mov
pop
jo
jnp
mov
mov
cmpsb
cmc
in
pop
cwtl
add
imul
out
jp
or
fstp
test
xchg
mov
movsb
in
pop
xor
add
xchg
and
ficomps
or
bound
cmp
notb
repz
mov
sub
mov
and
sbb
jo
add
repnz
mov
out
pusha
imul
xor
in
xor
fwait
es
int
daa
je
call
test
and
daa
ja
outsl
push
mov
adc
cs
ljmp
outsb
cmc
or
mov
pop
cs
xor
loop
fadds
mov
pop
mov
std
mov
cmpsb
sbb
into
andl
cmp
cmpsb
inc
out
dec
xor
pop
add
scas
xor
fdivrl
cmpsb
mov
insl
loope
dec
jmp
inc
aam
inc
in
ljmp
cmp
out
dec
or
mov
xchg
es
mov
sub
inc
test
movsb
xor
mov
std
mov
mov
imul
dec
fstpt
and
popa
ja
xor
and
or
jae
outsb
push
stc
jle
hlt
ds
outsl
sub
and
daa
dec
pop
call
sbb
push
sbb
and
adc
ljmp
or
and
hlt
jno
clc
out
bound
std
and
popl
mov
and
push
pop
notb
arpl
int
int3
jmp
xchg
out
xchg
dec
enter
addb
xor
out
xchg
add
mov
stos
adc
enter
add
in
hlt
xor
xor
mov
mov
push
inc
mov
fdivrs
ds
lock
inc
push
push
scas
cld
pushf
aam
test
add
or
stc
adc
inc
lcall
xchg
mov
rcrl
aas
rcrl
sarb
xor
stc
cmp
daa
dec
imul
test
je
and
fmul
mov
xchg
fsts
aaa
inc
cmp
adc
dec
pusha
dec
test
adc
popf
mov
lahf
testb
in
push
mov
in
pop
idivb
ret
fidivl
ret
aad
jno
addr16
mov
push
call
ret
adc
es
int3
cmpsl
adc
into
aas
mov
lds
xor
clc
push
adc
sbbb
sbb
mov
fiaddl
dec
pop
stos
mov
scas
ret
jmp
in
test
int
xchg
pop
mov
push
das
pop
repz
dec
fs
cmp
bound
shl
repnz
and
xor
cmp
fistpl
icebp
je
mov
pop
movsb
pop
into
stos
push
and
cs
fbld
ds
aaa
dec
cwtl
inc
jg
stc
cmpsb
aad
sub
push
pop
scas
loope
mov
out
inc
sbb
cltd
push
les
out
imul
icebp
fmulp
cmp
imul
inc
xor
xchg
and
xchg
sbb
inc
cmp
sbb
cmp
xchg
std
pop
or
pop
adc
ljmp
repnz
jae
leave
jns
xchg
mov
mov
add
pop
repz
sahf
out
addr16
in
sub
push
lock
in
mov
shrl
pop
lods
or
stc
loope
scas
int3
aam
aam
or
push
inc
inc
push
mov
and
inc
adc
outsl
sbb
adc
pushf
mov
ds
xor
outsl
mov
andb
sbb
sbb
stos
sub
jb
sub
imul
push
inc
and
in
js
shll
scas
or
pushf
and
xchg
cmp
int3
cmp
xchg
std
and
mov
pusha
dec
aas
insb
loope
dec
lods
dec
add
inc
push
inc
mulb
movsl
jae
cli
mov
sub
scas
cmpsb
jge
cli
jmp
mov
inc
insl
pop
movsb
bound
sahf
jl
xor
mov
fdivl
sbb
flds
xlat
lods
call
call
push
scas
dec
mov
pop
fistps
cmpsl
ret
sbb
dec
imul
ds
inc
cmp
cltd
or
xchg
xchg
std
daa
aas
pop
mov
fidivrs
ss
notl
sti
fnstsw
sbb
sub
mov
jmp
daa
test
push
xchg
rorb
in
mov
sbb
int3
or
jno
adc
jecxz
rorb
cmc
sub
adc
fsubrs
mov
das
adc
sbb
or
pop
add
and
pop
push
stos
jecxz
xlat
mov
inc
add
cld
imul
xchg
push
ss
cmp
inc
mov
or
or
incb
sbb
mov
test
mov
push
cwtl
mov
pop
adc
mov
jmp
mov
insb
subb
push
imul
stos
test
int
xchg
cwtl
faddl
dec
jne
mov
out
jl
jmp
call
call
subb
scas
popa
popf
movsl
xchg
xor
jns
xchg
pop
cmp
dec
aas
pop
mov
dec
rcl
leave
imul
cmp
nop
les
fwait
push
je
jne
xor
sub
pop
inc
aad
adc
cld
fimuls
sub
imull
lcall
in
and
mov
decl
rorl
sahf
jne
and
adc
mov
add
sub
and
jle
test
pop
dec
int
cld
lods
dec
pop
push
xchg
shl
cs
mov
xchg
xchg
lock
add
push
pop
je
cli
shll
imul
imul
push
cld
test
mov
or
iret
push
scas
clc
jnp
leave
mov
jno
mov
es
fistpll
les
inc
test
mov
in
xchg
push
cmp
in
dec
mov
mov
or
shr
sub
pusha
or
aas
mov
mov
push
sub
sbb
sub
mov
arpl
hlt
out
cmp
jecxz
lds
or
leave
mov
enter
mov
push
sub
inc
dec
mov
xor
add
test
mov
xor
sub
inc
ret
std
mov
icebp
mov
das
lret
xlat
xor
and
repnz
shlb
mov
loop
icebp
add
out
jmp
or
lret
jne
jmp
scas
in
ja
jl
adc
lret
xlat
and
clc
sbb
jmp
movsb
mov
daa
popf
rorb
mov
lods
lahf
pop
xchg
stc
add
cmpl
ret
or
test
dec
mov
dec
les
xchg
xchg
push
arpl
stos
mov
les
push
into
pushl
or
or
fdivrp
stos
jl
cmc
sahf
addl
pop
fnstenv
add
inc
cli
inc
push
xlat
movsb
jge
adc
loopne
lods
pushf
inc
adc
dec
xorb
inc
jl
xchg
fs
xor
mov
adc
push
arpl
jg
popf
or
in
mov
mov
dec
out
push
or
push
push
fisttpl
adc
push
cltd
stos
jmp
pop
mov
cli
into
cmp
adc
repnz
jge
out
fwait
sbb
xchg
lock
cmp
lret
dec
xor
mov
bound
xlat
push
outsb
popw
out
ficoms
loopne
dec
mov
rclb
mov
xchg
cs
pop
inc
cld
aad
ret
push
push
adc
mov
adc
fisttpl
leave
pop
out
jbe
loopne
fcmovne
mov
outsl
dec
inc
cmpsb
popa
jmp
out
adc
insb
test
in
pop
test
in
jmp
lret
mov
repz
xchg
dec
jle
jne
sbb
mov
ljmp
inc
scas
int3
pop
mov
and
cmc
mov
pop
jecxz
pop
js
xchg
push
pusha
sub
fbstp
mov
addr16
int
stc
ja
cmc
and
xor
xchg
dec
lock
mov
and
xchg
adc
bound
fs
idivl
gs
mov
enter
fwait
bound
pop
pushf
outsb
lahf
nop
inc
xchg
out
inc
push
lea
dec
mov
mov
adc
cmp
push
inc
fcompl
push
sahf
pop
ret
repnz
andb
pop
sarb
jp
jmp
ja
cltd
movsl
or
nop
add
aaa
hlt
lods
loopne
dec
xchg
add
mov
mov
pusha
jl
sbb
out
sbb
mov
loope
add
xchg
jbe
cmp
outsb
imul
fsubs
add
shrl
inc
out
jnp
sub
cmpsb
mov
pop
fbstp
push
imul
iret
adcb
xor
sub
popa
mov
aaa
mov
mov
adcw
jbe
inc
outsl
not
cld
inc
mov
adc
jo
mov
or
xor
sub
add
ja
inc
mov
or
in
test
mov
mov
inc
inc
fwait
inc
inc
fwait
jno
mov
adc
jmp
push
mov
ret
dec
out
jae
roll
aad
test
hlt
xor
js
dec
andb
inc
adc
cmp
jl
cmpsb
data16
js
mov
jno
insb
or
xlat
jnp
pop
push
cmp
les
call
add
lock
repnz
jge
dec
mov
jp
dec
inc
stc
add
inc
mov
mov
adc
cmp
xchg
mov
xchg
leave
testb
push
enter
or
dec
or
inc
mov
dec
fstl
push
loope
cld
pop
shll
out
add
sub
xchg
push
xor
xchg
adc
xor
dec
pop
and
push
adc
into
rcr
push
leave
jne
cli
xchg
sub
xor
into
or
inc
rcll
negl
cmp
jbe
adcb
mov
jae
repz
adc
out
sti
mov
ja
mov
das
bound
ss
mov
pop
shll
arpl
psllw
rolb
jb
mov
cltd
inc
ljmp
adcb
stos
sti
rcrl
into
into
je
inc
ret
push
pop
mov
rcrb
insb
testb
push
mov
pop
ja
push
sahf
ljmp
mov
or
pop
mov
sbb
js
arpl
shrl
pop
imul
xor
add
insb
mov
dec
mov
add
es
sti
loope
cmp
in
pop
jne
stos
add
dec
push
fdivrl
adc
push
dec
incb
in
mov
sub
outsb
mov
icebp
scas
mov
ret
jl
je
pop
movsl
push
cltd
mov
in
jmp
repz
sub
hlt
mov
add
mov
push
and
lods
jns,pn
jle
pusha
push
dec
arpl
mov
mov
gs
and
mov
iret
jnp
xchg
hlt
dec
js
in
nop
pop
ret
xchg
pop
or
inc
std
xor
fidivl
icebp
je
mov
movsb
xchg
xor
adc
and
dec
std
and
js
jns
push
dec
subl
iret
push
sbb
jo
cmp
cmp
aas
insb
pop
nop
or
mov
imul
test
lret
add
mov
dec
sub
in
aad
mov
xor
or
rcl
ret
cwtl
push
sbb
call
jo
repnz
jge
popa
pop
jne
push
lds
and
sbb
push
clc
dec
aad
cmp
push
xchg
out
cmp
pop
jo
outsl
adc
sub
push
xchg
add
loop
fldenv
jo
xchg
xchg
andl
rorl
inc
ss
iret
xor
xchg
aaa
in
pop
imul
inc
scas
es
ss
out
lret
mov
sub
fstpl
adc
sbb
inc
cmc
mov
int
mov
xor
int3
mov
scas
or
sub
lea
loop
and
dec
mov
frstor
push
xlat
test
mov
add
notl
movsl
stos
inc
jecxz
or
test
into
mov
shrb
cmp
xor
pop
push
pushf
mov
and
xlat
and
mov
dec
adc
aas
mov
push
mov
and
mov
call
fiaddl
and
jle
and
lret
sub
inc
fnstenv
xchg
ljmp
push
repz
inc
sub
xor
int3
xchg
inc
outsl
test
sbb
mov
jg
outsb
popa
fcmovu
xchg
int3
loope
leave
sarb
xchg
ret
test
loop
pop
jnp
xchg
repnz
out
cmpsl
les
ret
nop
inc
sub
push
popf
sbb
aam
orl
jne
sahf
mov
cmp
and
in
out
mov
popa
push
aam
xchg
mov
dec
adc
mov
jno
cmp
pop
sub
cmp
jb
jno
mov
cmc
mov
dec
add
adc
jmp
xchg
push
int
imul
jo
xor
jae
fwait
cmp
ds
testl
mov
rclb
scas
push
mov
xlat
inc
inc
inc
cltd
pop
pop
dec
push
imul
pop
mov
rcrb
pop
mov
sub
adc
pop
mov
sbb
push
iret
loopne
mov
inc
add
mov
xor
dec
dec
movsl
mov
mov
cwtl
mov
and
mov
lea
call
cli
lret
adc
test
jecxz
sub
mov
fucom
pop
push
sbb
jae
lret
bnd
push
jns
xor
jmp
add
inc
adc
dec
int3
jae
jmp
adc
idivb
jo
sub
inc
jge
repz
imul
mov
inc
call
das
lahf
xor
pop
sarl
andb
data16
or
mov
mov
push
jno
dec
aam
inc
rorl
sbb
fwait
cltd
pusha
and
xchg
ss
lret
stc
mov
mov
sub
mov
fisttpl
xor
push
jmp
es
setg
cmp
dec
test
orb
mov
sub
xchg
lods
inc
jp
imull
je
std
or
push
xchg
and
adc
in
push
repz
dec
ds
fdivrs
dec
xchg
test
add
adc
jnp
daa
push
lcall
jnp
push
adc
fimull
and
lods
out
xor
jns
daa
loope
xor
cmpsb
or
jns
jp
dec
adc
xlat
xchg
jmp
push
mov
test
sub
sub
push
xchg
xchg
jne
pop
push
jae
xchg
rcll
or
or
lahf
mov
dec
pop
jle
sbb
fstps
gs
jo
sbbl
inc
mov
or
inc
jae
dec
fidivrl
jle
shl
lock
pop
push
xlat
lea
in
cld
scas
adc
pop
pop
add
mov
inc
mov
add
cs
jns
jne
outsl
fwait
mov
pop
add
add
lods
shlb
mov
or
mov
lret
fisubrl
add
cmpsl
pop
hlt
ss
sbb
lock
inc
push
xchg
repnz
mov
outsb
cmpsb
outsb
pushf
les
inc
sbb
fildll
rcrb
push
mov
insl
enter
jae
mov
pop
dec
sbb
jg
in
mov
insb
dec
adc
pop
mov
adc
xor
and
push
adc
add
push
call
jecxz
mov
mov
mov
cld
das
mov
jnp
enter
out
mov
add
sbb
jno
mov
add
push
xlat
aad
push
test
in
rorb
repnz
mov
repnz
ljmp
cmp
inc
and
cltd
test
out
add
aas
jae
hlt
cltd
jb
nop
fcoml
xchg
and
push
inc
rcrb
mov
lods
cmpsb
sub
popa
inc
inc
mov
inc
inc
imul
out
arpl
inc
mov
aam
adcb
into
sub
mov
out
fmulp
js
inc
sbb
ret
adc
loop
out
jmp
add
addr16
and
mov
test
outsb
cmp
fwait
jp
enter
fwait
jbe
pop
shlb
addl
imul
test
or
clc
pop
gs
mov
insb
mov
out
cmpsl
std
sahf
cmp
ds
ret
jle
adc
test
repz
ficoml
xor
aas
repz
fisubrl
and
mov
pop
xor
test
test
cmp
sbbl
inc
adc
mov
mov
jae
mov
push
fs
sub
stos
sbb
outsl
rcl
sbb
cmpsl
fiadds
negl
fs
std
movsb
sbb
das
les
or
sahf
mov
sahf
out
or
cmp
inc
inc
dec
jns
dec
fadd
loope
xor
inc
mov
cwtl
loopne
push
imul
sti
stos
mov
das
testb
jmp
mov
pop
addr16
adc
inc
inc
pop
mov
dec
stc
push
cmp
jl
bound
in
fisubs
lods
aam
fdivrp
sti
mov
push
adc
jno
pop
stc
mov
sub
inc
mov
ret
inc
jg
imulb
mov
sbb
and
mov
int
rolb
jge
das
gs
mov
std
push
push
dec
loopne
inc
inc
push
jns
ror
outsb
push
mov
dec
lea
int
mov
lcall
and
pop
mov
cmpsb
cmp
xchg
sbb
gs
mov
mov
loope
or
test
sub
cmpsb
mov
mov
cmpsl
inc
sbb
jae
pop
cmpb
scas
add
aas
push
aaa
insb
rcr
xlat
pop
scas
dec
rcrl
out
push
push
pop
stc
ja
outsb
xchg
fdivs
in
inc
notl
fbld
rolb
dec
push
outsb
rclb
stc
in
inc
pusha
mov
and
jmp
pop
jb
sahf
add
std
jae
clc
mov
cmp
adc
mov
mov
pop
xchg
mov
jo
add
pusha
lret
test
rclb
and
dec
cmpsl
sub
adc
jle
push
outsl
xchg
inc
in
in
dec
xor
cli
int3
ds
aad
sbb
xchg
xor
cmp
add
adc
push
outsl
jb
sbb
push
sbb
cmp
add
and
dec
lcall
inc
enter
pop
mov
pop
add
mov
xchg
std
pop
in
int3
xchg
or
je
add
sbb
lock
jl,pn
mov
in
icebp
jne
xchg
ds
stos
scas
fcmove
pop
fimuls
and
in
inc
imul
lock
mov
hlt
pushf
xor
lret
movsb
bound
and
test
cs
cmp
push
sub
shrl
push
aas
inc
dec
sti
pop
daa
jecxz
mov
mov
jg
fs
repnz
jp
and
pop
adc
or
loope
jnp
fmull
sbbl
cmc
jge
iret
test
sbb
sub
jecxz
cmp
pop
sub
jb
sub
in
ljmp
sbb
lods
jle
mov
inc
dec
arpl
jle
xchg
cs
rcr
stos
xchg
jge
das
shll
es
dec
dec
fcmovbe
out
jb
rclb
mov
fbstp
cs
mov
push
xor
lahf
xor
mov
arpl
mov
aaa
fidivrl
jne
das
lods
mov
xor
mov
push
pop
out
mov
movsb
lods
ret
lock
mov
outsl
mov
insl
jns
rorl
mov
mov
or
inc
adc
popa
push
fcmove
sub
or
push
decl
andl
sbb
jle
or
mov
mov
sub
sub
dec
ss
lret
sub
mov
push
mov
popa
in
fwait
je
ret
mov
xor
cmovo
add
cmp
add
mov
push
adc
icebp
testb
add
ror
out
sub
fwait
loope
inc
xlat
xchg
out
mov
xchg
stos
idivl
in
adc
fsubp
clc
mov
or
fidivrs
dec
scas
xor
cmp
mov
rorb
sbb
roll
and
arpl
stc
jns
scas
xchg
cmp
sbb
nop
push
dec
or
subb
jg
pop
push
and
or
aaa
ret
and
push
push
aam
rorl
icebp
sbb
mov
mov
add
popa
or
insl
pushl
push
inc
mov
and
xchg
inc
cltd
pop
ss
je
lds
ja
pop
xchg
mov
popa
xchg
push
mov
rclb
loopne
or
sub
int3
fimuls
es
cli
std
mov
repnz
les
sbb
xchg
inc
fiadds
fsubl
sub
loopne
push
sub
popa
out
out
mov
xchg
fldz
push
movsl
xor
rolb
mov
xor
adc
fldcw
int3
jge
push
xchg
lret
roll
jge
xor
dec
add
push
jmp
cmp
xchg
mov
loope
fidivrs
mov
mov
xchg
enter
loop
add
xlat
push
jle
sbb
ret
into
dec
jnp
dec
push
sub
push
and
mov
jo
cmpsl
add
sub
sub
sbb
imul
rclb
add
repnz
pop
push
lods
sbb
inc
lret
shll
mov
adc
pop
mov
pop
pushl
add
pop
rcl
mov
fsubs
push
mov
ss
inc
push
cld
or
in
add
xchg
mov
xor
xchg
stc
daa
icebp
mov
in
jmp
out
ret
decl
or
push
rcrl
sti
popa
arpl
test
lret
cmpsl
outsb
sub
dec
mov
sub
clc
add
or
or
mov
cmc
sub
popf
xchg
xchg
in
adcl
movsb
cmpsb
xchg
rorl
aas
jle
cmc
pop
push
lcall
jo
shll
sbb
iret
pop
in
js,pn
dec
ja
mov
lret
loopne
xlat
outsl
repz
cmpsl
insl
sahf
rorb
cmp
mov
sbb
movsl
xchg
repz
pop
aaa
int
mov
fnsave
bound
stos
movsb
push
mov
pop
iret
push
pop
and
cmp
leave
fwait
xchg
sub
cmp
or
xchg
call
popf
inc
popf
dec
jae
out
sahf
lds
je
popf
xchg
xchg
add
aad
shl
int
pop
arpl
xor
dec
or
lods
or
push
sbb
cmc
pusha
push
or
lret
push
and
call
mov
iret
or
and
fsubs
std
in
xchg
rcrb
jmp
loope
insl
xchg
inc
mov
idivl
dec
mov
mov
cmp
mov
jle
sbb
aaa
inc
push
jmp
clc
pop
mov
ficoml
popf
daa
ja
mov
mov
pop
mov
aad
call
scas
add
push
fstpl
inc
sbb
sbb
lahf
repz
arpl
sbb
movb
mov
push
fstl
push
ja
dec
mov
sbb
mov
es
je
push
dec
mov
andl
das
inc
or
addl
push
stos
aaa
and
push
mov
jecxz
nop
stc
sub
aad
adcb
xchg
roll
lea
lock
sub
and
mov
sub
mov
or
jne
cwtl
icebp
xor
nop
sbb
movsb
cmc
or
ljmp
aas
ds
xchg
or
roll
sbb
cmp
mov
cltd
orb
pop
js
and
dec
sbb
clc
adc
jbe
fstl
cmp
lea
cmpl
push
loopne
mov
cmp
jmp
xchg
xchg
pop
out
ss
mov
lea
fistl
orb
inc
loop
fisubl
jmp
pop
xlat
pop
popf
jbe
out
movsb
mov
lcall
inc
fsts
or
adc
push
pop
in
jne
mov
push
xor
push
dec
dec
mov
fwait
xlat
pop
pushf
jecxz
lea
mov
rcr
xchg
jg
xlat
push
xlat
fstps
adc
lret
arpl
and
and
jae
add
xor
icebp
dec
push
add
pusha
jge
out
dec
cmp
mov
clc
lcall
dec
cmpsl
or
cmpsl
std
mov
addl
rcr
mov
in
pop
out
arpl
les
in
test
inc
shr
mov
adc
ret
enter
out
sbb
and
mov
out
or
xor
mov
lcall
loop
ds
xor
rcrl
les
jmp
mov
gs
cmpsl
cltd
aas
xor
push
cmp
add
mov
mov
cmp
pusha
add
fnstcw
pop
aam
cmp
out
jg
in
push
fisubrl
arpl
xchg
dec
mov
jbe
test
arpl
pop
out
jnp
ljmp
jmp
in
cmp
pop
push
sub
add
xchg
pop
inc
fcom
push
aaa
cmpsl
ds
inc
cmp
xchg
fnstsw
negl
and
push
aad
push
sti
jmp
adc
nop
pop
inc
out
sahf
add
cmpsb
mov
pusha
adc
dec
filds
lahf
xchg
pop
repz
push
out
jo
and
rol
fsubrl
push
push
mov
negb
pop
mov
push
lods
mov
mov
sub
pusha
lock
lods
sbb
sbb
test
flds
rcl
adc
jns
cmp
stos
dec
mov
clc
outsl
or
ds
mov
lcall
into
pop
aas
xchg
xlat
iret
xor
inc
jl
cwtl
icebp
inc
aas
andl
jecxz
or
push
adc
test
sub
and
push
lods
add
sbb
repz
mov
nop
sahf
mov
aam
inc
jmp
out
daa
and
pop
mov
mov
ret
xor
push
pop
fdivr
sbb
test
cmp
aas
pop
jbe
xchg
xchg
pushf
xor
cmp
add
std
push
add
adc
out
adc
cmp
push
scas
add
aas
adc
jl
fisubl
imul
jmp
rcr
sti
jmp
in
lods
hlt
and
scas
jae
popf
sahf
pop
fs
cld
adc
ss
add
inc
or
fs
inc
icebp
or
inc
data16
lea
cmc
mov
daa
decb
or
add
pop
mov
movsl
dec
cmp
add
jmp
mov
out
pop
leave
push
shlb
movsb
mov
sub
sub
push
rorb
pop
pop
js
imul
and
sub
xchg
jns
cld
mov
imul
mov
outsb
rcr
adc
imul
sarb
arpl
cmpsl
std
mov
jno
out
int3
and
into
int3
sub
loop
jae
jo
mov
jo
enter
cmpsb
mov
arpl
inc
in
push
jmp
push
jne
lock
cmc
lock
sbb
aad
shlb
sbb
aaa
out
fisubs
iret
or
mov
xchg
into
mov
lcall
lret
popa
pushf
scas
scas
adcb
sbb
cwtl
sarl
hlt
lcall
dec
mov
mov
and
add
movsb
xchg
test
lea
mov
cli
inc
or
cmp
pushf
adc
iret
pop
dec
daa
or
xlat
add
scas
sub
in
bound
fcompl
jb
fsts
insl
sahf
add
jns
test
sbb
adc
lret
jge
or
xchg
jno
mov
fbstp
idivb
shrb
dec
sbb
push
cmc
in
out
cmp
adc
fwait
pop
stc
das
inc
aas
sar
aam
test
bound
jge
fbstp
jle
sbb
cmp
mov
movsl
and
out
popf
push
jmp
jb
pop
cli
iret
sbb
mov
out
call
fbstp
sub
loope
and
cltd
data16
aaa
push
xor
cmc
jo
push
inc
das
dec
out
out
scas
mov
mov
divb
push
xlat
fwait
cli
rolb
or
cmpsl
insb
dec
dec
bound
imul
pop
sbb
scas
add
dec
in
xchg
jbe
movsl
inc
addb
loopne
jo
cltd
jno
pop
jae
inc
and
std
push
pop
mov
push
push
adc
xor
rcll
adc
sbb
adc
out
orb
or
adc
stos
lea
cwtl
mov
pop
popf
test
pop
in
ret
pop
or
ss
and
lock
and
inc
enter
push
mov
xorb
test
aam
xchg
vpunpcklqdq
das
adc
fdivrs
cmp
push
add
sbb
addr16
rolb
pop
add
cmpsb
addr16
mov
test
and
cmp
sahf
mov
adc
addl
decl
out
jne
xchg
mov
sub
xchg
loope
addr16
lods
fs
push
dec
and
dec
insb
movsl
adc
cltd
jl
pop
inc
jmp
mov
add
dec
icebp
cmp
and
jnp
add
inc
sbb
push
aas
pop
or
sbb
mov
popf
cwtl
sbbb
addr16
xchg
dec
add
adc
cmp
aas
sti
jmp
imul
test
cltd
xchg
xor
cmp
jnp
shlb
pop
mov
mov
lret
enter
inc
iret
cmp
jge
xchg
js
stc
push
lea
mov
enter
cli
mov
jns
mov
lcall
jns
pop
xor
pop
lret
sbbb
sub
mov
scas
sub
fiadds
jb
loopne
dec
cs
xor
stos
and
gs
dec
lahf
hlt
es
lock
movsb
and
pop
pop
loope
xchg
sub
iret
ror
cmp
jg
cmp
mov
mov
pusha
call
outsb
mov
in
and
push
fdivrl
lods
scas
cmp
in
dec
jl
fadd
jne
imull
xchg
iret
sbb
mov
aam
in
stos
jecxz
sub
sarl
jbe
inc
push
push
pop
clc
iret
mov
ds
mov
and
inc
lds
call
mov
leave
mov
pop
std
sub
in
cli
ret
mov
mov
fmull
mov
addr16
mov
and
into
lock
mov
fucomi
pusha
inc
xor
jmp
int
pop
aam
and
lods
push
or
shll
xorb
and
mov
mov
fildll
les
cmp
inc
loopne
push
or
popa
and
jmp
popf
enter
das
xchg
sbb
xlat
imul
cmp
mov
andl
cwtl
mov
xor
daa
orl
stc
xchg
sub
jb
in
adc
push
and
jo
adc
push
lock
hlt
cmp
sbb
aaa
sbb
std
shll
ret
imul
xchg
adc
push
hlt
popl
lret
sub
aaa
bound
popa
add
fisttpll
bound
add
jae
or
pop
cmp
jp
stos
sub
fidivs
fwait
in
mov
mov
das
test
out
mov
dec
fbstp
loope
insb
and
testl
xchg
sbb
cmpsb
in
test
adc
xor
ja
shrl
ljmp
mov
ror
inc
cmp
stc
lea
xlat
xchg
cld
pop
fs
out
dec
outsb
sub
icebp
pop
je
inc
jne
test
fwait
les
sbb
movsl
mov
notb
sbb
cltd
mov
nop
dec
cwtl
push
movsl
add
push
ljmp
or
jb
jg
jns
sub
stc
test
push
in
mov
cmp
lds
daa
je
bound
sub
aaa
repz
jge
out
popf
insl
jae
cmp
sbb
div
test
je
scas
out
orb
movsl
addb
cmpsl
int3
outsl
jbe
cwtl
mov
jmp
jle
adc
mov
inc
fs
sarl
and
jge
push
dec
add
out
adc
adcb
and
in
jbe
in
out
test
cmpsb
push
adc
stos
idivb
adc
scas
xchg
add
dec
shr
adc
sbb
fisubrl
roll
stos
mov
mov
xchg
iret
shll
aam
adc
test
je
mov
in
xchg
cmpsl
push
inc
popf
mov
stos
fildll
cli
dec
xchg
cmp
imul
outsl
fsub
adc
jnp
xchg
or
push
adc
push
mov
or
test
cmp
sar
sub
gs
lret
sbb
or
mov
in
aaa
mov
fcom
dec
jmp
cmpsb
int3
pop
add
mov
je
outsl
pop
popa
and
bound
cltd
jb
inc
push
fldt
mov
data16
lahf
add
mov
test
xchg
pop
popa
outsl
sbb
cmp
rol
idivl
fsubl
fimull
jle
push
pop
cli
aas
out
dec
jb
adc
aas
dec
decl
and
sub
sub
aas
xchg
lods
dec
dec
data16
bound
mov
test
paddsw
jmp
scas
pushf
jecxz
out
jp
ljmp
daa
sar
lret
push
dec
push
loopne
xor
jmp
and
ret
adc
push
dec
jg
in
adc
aad
mov
pop
pop
mov
les
test
mov
das
mov
aad
sub
stos
in
mov
xchg
subb
sbb
pusha
ret
ficoms
push
dec
push
mov
dec
cmp
sub
mov
rorl
mov
lds
push
popf
movsb
in
fs
shrl
fs
add
cmpsb
push
fimull
xchg
ljmp
jg
ficompl
movsb
in
outsl
cld
adc
jno
xor
push
sbb
sahf
fcom
rol
inc
fidivs
popa
data16
lgs
jg
mov
mov
cmp
xchg
or
mov
jnp
sbb
icebp
xchg
es
cltd
mov
push
ljmp
int
xchg
inc
inc
shrb
mov
jno
jmp
cmpsb
fwait
jge
leave
jns
cmc
jbe
add
inc
aam
icebp
inc
mov
adc
mov
imul
jecxz
and
inc
jbe
add
repz
cmp
je
mov
cmp
or
icebp
es
fdiv
add
icebp
jle
mov
dec
jle
insl
loop
leave
dec
pop
cs
sub
test
jle
sbb
test
xchg
and
stos
pop
idivb
mov
repnz
inc
pop
mov
imul
popa
push
test
cld
fdivs
lock
mov
cltd
push
or
xor
mov
in
cmp
lea
ja
jge
loopne
popf
sbb
add
popa
xor
or
jecxz
divl
adc
dec
mov
add
aas
push
sbb
dec
pop
fldl
cmp
xchg
lods
xlat
fildl
xchg
ret
lret
mulb
mov
xor
dec
pop
mov
mov
les
leave
lods
stc
adc
sbb
add
outsl
nop
in
mov
sub
dec
les
push
sbb
mov
cmc
push
fisttps
pop
fisubrl
push
sub
aas
shll
and
jle
insb
or
mov
lds
iret
lahf
data16
stc
push
xor
dec
push
fistpl
or
mov
pushl
jmp
xor
dec
push
jns
xchg
xchg
icebp
mov
inc
fldt
sbb
scas
sub
in
aas
popa
or
push
daa
dec
jns
divl
stos
test
lods
dec
xor
sahf
subl
sti
sbb
aam
xor
ror
and
repz
jne
iret
mov
jne
stos
rclb
mov
movsl
jb
mov
mov
and
or
push
sub
and
clc
mov
cwtl
pusha
in
sar
lret
and
or
sub
addl
mov
movsb
outsl
adc
movsb
add
lds
hlt
add
aam
in
sti
cmpsb
popa
aas
iret
or
sub
mov
inc
and
xchg
dec
adc
sub
pop
xchg
push
or
dec
or
sbb
shrb
push
pop
jno
or
sbb
scas
pop
aam
mov
jae
mov
lea
sbb
mov
ja
int
movsl
gs
jle
mov
cmp
pop
fdivl
mov
shl
push
pop
pop
orb
or
fwait
sbb
and
loopne
or
dec
push
xor
sti
pop
adc
adc
lcall
in
dec
int3
cmp
jl
dec
shll
lcall
sub
mov
mov
mov
sarl
icebp
sbb
and
add
jo
fcoms
out
adcl
add
adc
mov
sub
fisttpl
fcoms
aad
push
and
cmp
ret
cmc
and
jb
add
inc
xchg
aam
insb
xchg
repz
jo
bound
rclb
add
pusha
shl
xor
push
xor
jmp
push
rcll
jp
push
mov
mov
fdivr
jbe
push
add
imul
cwtl
pop
jbe
and
dec
stos
xchg
imul
sbb
xor
inc
mov
xor
stos
in
stos
xchg
cmp
shr
add
mov
push
hlt
pop
add
push
pop
jg
xorl
inc
lea
repz
loope
in
aas
xchg
cmpb
and
jge
loope
push
add
xor
jl
dec
and
test
mov
sub
rolb
ljmp
out
push
sbb
jecxz
cwtl
out
les
jg
lods
int
sub
xor
test
in
lcall
sub
pop
push
pop
test
nop
add
inc
mov
stc
cmc
jecxz
fwait
cmp
mov
cmp
mov
xchg
nop
shll
push
testl
xchg
leave
xchg
std
lock
xchg
int3
and
jo
test
mov
imulb
mov
sub
mov
sub
cltd
and
fs
mov
inc
xlat
addb
xchg
stos
loopne
push
in
cli
repnz
int
andl
lcall
je
icebp
pop
add
int3
push
cmp
mov
mov
in
mov
stc
xor
mov
fwait
pop
xor
and
cltd
cmp
cmp
stos
pop
movsb
inc
xchg
ret
and
dec
int
mov
jne
test
imul
mov
mov
rcr
sub
fcompl
sbb
push
aas
ss
add
mov
dec
and
es
in
push
repz
fdivs
test
xor
aad
ret
jnp
sub
int
cmp
adc
lock
jge
xchg
icebp
fwait
push
out
daa
fistl
or
cmpsl
pop
lock
decl
pop
push
aas
les
ss
xchg
pop
je
call
imul
xchg
inc
inc
std
add
lret
adc
push
inc
adc
xor
je
push
push
out
test
xchg
jno
lea
stos
int3
test
push
incl
and
sub
and
leave
adc
adc
or
dec
cmp
shlb
cltd
jge
xor
mov
push
movsl
lds
mov
popa
enter
mov
xchg
push
int
repnz
jo
popf
or
ljmp
je
xor
rorl
push
or
test
inc
addr16
jns
icebp
and
xor
sbb
jne
shlb
in
ljmp
clc
xor
mov
push
in
xor
int
or
loopne
adc
and
push
mov
mov
xlat
in
and
lods
sub
mov
jne
add
mov
dec
rcrl
in
cmc
in
jnp
incb
into
daa
sub
ljmp
andl
daa
jbe
lahf
push
xor
outsb
inc
mov
lret
sbb
push
addl
repnz
cmpsl
repz
jge
jo
lods
add
xchg
mov
lods
inc
pop
das
xor
gs
mov
jae
jmp
jb
in
mov
mov
pop
xchg
xchg
pushf
cwtl
push
cmp
ljmp
clc
dec
fs
fs
rcll
movsb
xchg
fildll
adc
ljmp
call
mov
mov
sahf
add
mov
dec
inc
movsl
mov
inc
xor
jnp
inc
test
push
cmpsl
movd
or
sbb
pop
stos
pop
jmp
push
sbb
push
insl
ret
pusha
aaa
xor
in
cmc
pop
inc
dec
movsl
mov
cmp
leave
popa
jg
data16
ret
jle
xor
sbb
xor
lds
lret
mov
cmp
sbb
cmc
int3
outsl
imul
pop
mov
sub
cmpsb
inc
movsb
ljmp
xchg
xor
fs
dec
mov
jge
divb
mov
movsb
out
mov
dec
mov
repz
dec
push
out
nop
dec
push
jno
jb
pop
inc
mov
inc
pop
lods
lret
add
jle
rclb
mov
ret
imul
scas
aas
int3
dec
sub
cltd
mov
xchg
push
int3
cltd
pop
or
stos
repnz
sub
ret
cmpsl
ds
cmp
shlb
sub
push
fcomps
add
aaa
nop
out
cmc
dec
into
add
pop
test
dec
dec
mov
arpl
mov
pushf
int3
fistpll
adc
or
pop
xchg
fnstenv
inc
and
int
fists
xchg
add
xlat
mov
push
dec
cmp
repnz
testb
push
xor
imul
xchg
jo
push
xchg
cli
mov
dec
push
and
pop
les
mov
push
scas
mov
mov
sub
ret
adc
out
inc
lea
xor
push
insb
sub
in
mov
daa
negl
lahf
adcl
in
push
jbe
xchg
aad
andl
stc
leave
mov
add
sbb
repz
xchg
xchg
pop
dec
push
mov
jne
int
ja
or
loope
jo
fidivs
scas
cmp
jae
adc
mov
mov
filds
jno
jle
js
arpl
xor
ljmp
cld
jg
loope
pusha
mov
addr16
xor
jne
mov
jg
jno
cmpsb
outsl
or
fcmovnb
sbb
mov
imul
jmp
outsb
test
scas
xchg
loop
aaa
or
jns
lods
sub
mov
stc
lret
pop
jecxz
repnz
cmp
popa
outsl
push
jge
rcll
shlb
pop
aam
test
sbb
dec
pusha
and
mov
dec
and
aad
movsb
addl
dec
xchg
movntps
push
xor
push
sbb
xchg
mov
test
fsubs
sbb
jbe
insl
mov
lret
pop
adc
cld
xor
mov
push
cmp
lret
mov
outsb
add
in
push
iret
fisttps
cmpsb
out
sub
push
and
add
scas
scas
jl
shlb
dec
dec
inc
dec
bound
test
fcomps
iret
adc
lods
lock
je
jbe
enter
imul
inc
mov
test
mov
dec
lret
les
js
and
int3
int3
push
mov
jae
imul
pop
adc
jge
mov
mov
or
loop
push
arpl
mov
sub
jb
sub
mov
rorl
inc
ret
add
cmp
in
cltd
leave
inc
out
stos
or
or
cli
sbb
or
adcb
ljmp
jb
jmp
dec
popa
jecxz
loop
popa
test
pop
mov
push
inc
ja
push
and
push
loope
cmp
dec
rol
pop
aaa
xchg
imul
je
and
sub
and
sbb
loope
bound
insl
cmp
test
sub
imul
leave
adc
push
push
lods
adc
test
js
mov
hlt
inc
aad
dec
cmpsb
push
pop
mov
lock
pop
pop
or
pushl
jbe
adc
arpl
xchg
fwait
dec
mov
fisttpl
scas
sbb
mov
adcl
gs
in
cmp
xor
or
dec
leave
pop
push
faddl
dec
sbb
nop
testl
lds
or
inc
stc
dec
rcr
jl
xchg
push
aad
lods
sbb
and
out
arpl
pop
xchg
fdivrs
jge
aam
call
xchg
push
or
xchg
ljmp
sbb
leave
cltd
fld1
mov
xlat
push
mov
fiadds
inc
pop
push
bound
xchg
lods
xchg
add
sub
mov
push
imul
push
push
xor
push
lock
dec
outsl
mov
enter
scas
adc
mov
fidivrl
addr16
sub
or
lods
cmpsl
sahf
fwait
rolb
mov
push
mov
mov
insb
and
jmp
mov
pop
jnp
sbb
test
sub
fsubrs
lds
call
subb
push
out
jecxz
lret
lret
addr16
mov
addr16
hlt
cmpsl
mov
jae
pop
push
jg
pop
loope
xchg
mov
shld
out
xor
fdivrl
mov
cld
and
lods
popa
adc
test
xor
add
adc
cli
pop
ljmp
xchg
push
mov
bound
int
lret
inc
xchg
pop
pop
insb
jne
data16
inc
mov
lret
notl
mov
add
ret
jno
mov
mov
sbb
fmuls
xor
insb
or
out
lcall
pop
popf
ret
jb
decb
outsb
xor
lea
aaa
inc
aaa
loope
mov
inc
fcmovnbe
mov
out
xchg
cmpl
xchg
insb
stos
int3
das
xchg
je
mov
mov
fcoml
push
inc
or
push
aaa
dec
call
xlat
ljmp
add
inc
dec
sbb
dec
sub
push
mov
fstps
jecxz
dec
stos
jae
sub
sbb
xor
mov
jg
scas
xor
sbb
cltd
pop
cmp
push
mov
icebp
push
mov
or
xchg
or
testb
mov
nop
push
inc
or
incb
xchg
sbb
and
cmp
xchg
sub
jo
xchg
xchg
shrb
sbb
adc
cli
mov
mov
mov
notb
or
insb
push
aaa
xchg
outsl
aad
adc
mov
push
lcall
std
fld
and
mov
and
cmpsl
cmp
adc
addr16
lcall
test
mov
popa
stos
jne
insb
xchg
sahf
sbb
mov
ret
jl
mov
aam
inc
fcoms
cmp
stos
adc
adc
dec
jae
jge
sub
aaa
sub
rorb
aam
pop
test
lds
xchg
jb
stos
xchg
inc
ss
jb
cmovb
jp
outsb
mov
mov
sub
lcall
cmp
mov
sub
out
adc
popa
inc
add
pop
ds
dec
adc
add
xchg
dec
xchg
je
push
ret
sbb
push
je
push
pushf
jp
sbb
cmc
push
xor
lds
sbb
and
add
cmp
mov
mov
in
add
out
mov
lcall
cvtpi2ps
push
mov
cld
xchg
aas
xchg
cmp
add
jg
shll
fiaddl
fsub
mov
aas
stos
fisttpl
mov
mov
and
xor
xorb
mov
pop
jl
cli
xchg
out
loope
cmpsb
outsb
loop
sbb
jmp
lret
popa
sbb
xchg
pushf
push
xchg
shlb
notb
xor
mov
xor
mov
mov
mov
pushf
in
add
or
add
cmp
mov
sbb
and
add
xchg
loope
bound
dec
mov
push
imul
sub
aas
pop
scas
orb
cli
loope
mov
pop
push
mov
mov
addb
in
mov
jo
xor
lock
popa
jg
mov
push
jmp
sub
popl
xor
mov
pop
add
into
mov
pop
sbb
and
insl
fs
jge
imul
xor
adc
inc
jne
mov
std
jno
insl
push
jecxz
mov
add
stos
xchg
cmp
mov
ja
jmp
push
enter
cmp
lods
sahf
xchg
lahf
push
dec
out
pop
loop
adc
mov
push
lea
xchg
push
aad
add
loope
mov
pop
cmp
dec
xor
imul
stc
mov
lahf
data16
push
shrl
mov
ds
sbb
sti
adc
out
jnp
imul
pop
enter
sarb
mov
aad
fisubrs
daa
call
repnz
cmp
std
adc
xor
scas
pop
lds
cwtl
movsb
shll
jecxz
mov
pop
mov
cli
leave
inc
icebp
lahf
test
clc
mov
stc
out
jp
repnz
mov
ja
or
mov
and
push
movsb
inc
mov
mov
xchg
push
imul
pop
jmp
pop
out
xchg
or
fstl
stc
pop
js
icebp
int
xchg
pop
add
sahf
inc
mov
lods
psubsw
stos
dec
xor
sub
mov
lret
inc
lcall
setnp
and
lds
inc
xchg
loop
mov
jne
das
orb
mov
ds
stc
sahf
mov
dec
inc
inc
mov
mov
inc
jl
mov
incb
addr16
push
outsb
xchg
and
out
and
jns
movsb
inc
cld
dec
pop
fs
xchg
push
fdiv
out
inc
popa
mov
cmp
and
xchg
pop
or
movsl
ficomps
mov
jae
or
lret
ss
lahf
xor
popa
push
lcall
jo
or
mov
xchg
add
in
xlat
cmpsb
lret
cmc
shr
and
fists
push
loop
inc
or
jmp
dec
inc
add
loope
pusha
in
mov
dec
loope
test
movsb
sub
mov
sub
fiadds
js
pop
mov
and
xchg
fs
push
imul
test
fists
pop
out
adc
mov
loope
add
inc
out
loope
xchg
inc
inc
xchg
out
sbbl
mov
enter
push
sbbb
add
xor
lds
xchg
cmp
and
stos
mov
cmp
mov
aas
adc
adc
dec
push
out
add
or
fstl
mov
pop
shll
out
cmp
xchg
mov
fsubrs
in
jg
shll
pop
js
movsb
inc
mov
mov
and
dec
inc
inc
cmp
jmp
mov
std
rcll
sub
cmpb
lret
xchg
aam
repz
add
outsl
sbb
sbb
cmpl
or
into
decb
or
scas
jg
or
dec
cmpsb
stc
es
andnps
mov
inc
xchg
mov
mov
mov
addr16
hlt
push
cld
cld
call
in
fwait
inc
ja
mov
das
data16
sub
lock
lahf
pop
aad
cmp
divl
shlb
lods
scas
imul
sbb
push
pusha
test
ss
xor
lock
mov
pushf
xor
leave
scas
pop
sbb
out
mov
cld
cmp
fdiv
sahf
lock
mov
js
stos
jns
or
adc
mov
sub
aaa
pusha
mov
xor
mov
roll
push
std
repz
and
gs
push
js
mov
ja
and
or
xchg
pushf
test
xor
push
and
sbb
call
leave
add
fstps
int3
into
pop
pop
andl
mov
divl
icebp
xchg
arpl
sub
sub
sub
fnstsw
mov
int
gs
movsl
jne
cwtl
jnp
ja
imul
push
sahf
shrl
loop
mov
add
xchg
sbb
add
push
xor
sahf
push
add
es
loop
xlat
or
or
ficomps
daa
add
xchg
sti
enter
mov
and
aad
aam
test
mov
mov
repnz
outsl
loopne
mov
nop
adc
mov
push
fistps
sub
lahf
fsubl
fisubl
cmp
leave
xchg
push
or
repz
sbb
pop
jbe
dec
pushf
add
mov
xor
push
test
pop
sbb
inc
cwtl
inc
xor
fs
cmc
pop
lcall
jno
int
dec
pop
mov
popa
imul
addr16
sti
push
les
mov
loop
popf
pusha
inc
rorl
test
orb
sbb
cld
fstpt
jg
ret
fcmovb
out
push
daa
and
or
repz
notb
int3
and
or
sub
fs
aaa
repz
inc
gs
repnz
fstpt
and
mov
inc
filds
enter
mov
xor
cmp
xchg
mov
sbb
cmp
inc
push
sbb
jmp
mov
sbb
mov
in
xchg
push
ds
fldenv
adc
lret
jp
dec
fimull
jecxz
out
fsubs
xchg
icebp
pop
rol
xor
hlt
xlat
lea
lcall
mov
mov
testl
inc
sub
imul
inc
mov
pop
mov
sbb
xchg
sar
inc
dec
pop
pop
in
pop
imul
dec
xchg
and
mov
cmp
inc
into
icebp
add
loopne
scas
add
rcl
mov
pop
xchg
test
cli
out
mov
cmc
movsl
enter
loopne
ds
and
leave
pop
jmp
in
sti
cmp
dec
pop
or
cmp
int3
ror
lret
rol
sti
sub
mov
cwtl
inc
xor
ss
adc
leave
lcall
dec
pop
popa
xor
adc
inc
adc
ret
lock
cld
sbb
stos
jbe
iret
ret
jb
push
sar
mov
or
add
ss
in
imul
dec
mov
mov
scas
push
fistpl
mov
out
push
in
scas
out
and
aam
cmp
mov
fwait
pop
sbb
negb
cs
cmp
sbb
lds
es
sbb
fstp
stos
out
std
jns
adc
mov
das
lret
pop
mov
ljmp
jp
scas
pop
loopne
mov
add
cmp
jp
pop
xchg
cmc
or
cli
aad
xchg
pop
add
data16
or
insb
imul
shlb
and
sti
xchg
jp
push
push
cli
jmp
lahf
into
cld
jmp
pushf
sub
mov
jl
and
mov
xchg
insb
mov
sub
aas
add
xor
dec
je
dec
xor
icebp
pop
push
sub
pop
loop
mov
popa
loop
mov
addb
fildl
adc
sbb
lcall
repnz
repnz
or
jns
int
fdivr
aam
call
fcompl
cmp
inc
lahf
into
push
pushf
aas
pop
rcr
jne
int
or
bound
or
xchg
lds
lahf
add
movsl
addr16
mov
rolb
sub
jp
xchg
pop
fs
cmp
sub
outsb
mov
cltd
mov
imul
lret
stos
aaa
int
sarb
adc
mov
push
test
loope
jae
sub
out
or
clc
loope
cs
mov
cmp
stos
dec
dec
sbb
sahf
movsl
jp
nop
inc
sbb
inc
add
jp
xchg
and
fxtract
pop
insb
jecxz
sub
jnp
mov
imul
fcoms
shll
mov
addb
mov
adc
es
divb
jne
lcall
shrl
out
icebp
cmp
xchg
lret
notb
scas
testb
loopne
ss
and
repnz
daa
arpl
jle
aas
sbbb
push
ja
dec
inc
inc
aas
lods
fs
mov
push
shlb
cltd
inc
shlb
scas
call
adc
push
ss
cs
jns
sub
movsl
jmp
pop
add
inc
pushf
add
sbb
push
xchg
or
mov
cwtl
cmp
xor
lods
mov
dec
rclb
lods
jmp
ds
rcr
sub
fisttpl
out
mov
lods
add
orb
scas
mov
dec
push
cmp
pmaxub
pop
pop
xchg
in
ljmp
lock
mov
dec
adc
mov
push
rorl
mov
push
jb
jecxz
ret
and
xchg
mov
aaa
mov
lcall
insl
out
lods
lret
xor
push
pop
inc
push
xchg
aas
aam
jg
int3
cmp
jo
ficompl
pop
cmpsl
cmpl
pop
scas
cltd
testl
xchg
pop
cltd
cmp
jle
aas
fnsave
xchg
mov
xchg
aaa
enter
in
pop
lcall
lods
shlb
fistpl
aam
adc
cwtl
mov
dec
test
push
mov
call
cmp
inc
inc
inc
stos
dec
and
es
fisttpl
mov
mov
push
mov
lahf
sbb
or
addr16
sarl
cmp
pop
xchg
push
rcr
popa
lock
xchg
outsb
inc
test
xor
inc
mov
scas
mov
sbb
mov
test
mov
push
fs
lods
cwtl
sbb
fildll
in
adc
pop
mov
inc
pop
inc
push
pop
jl
xlat
outsb
aaa
jns
jp
scas
shlb
or
nop
fs
push
inc
add
and
jne
lret
mov
jo
std
jp
push
xor
mov
mov
push
stos
test
jb
mov
push
aad
out
xor
sub
mov
loope
or
lahf
xor
incb
cmp
test
push
sti
push
loop
xchg
aaa
sub
jbe
mov
mov
shll
cmp
rclb
ds
push
jno
mov
loope
sahf
notb
inc
inc
push
and
mov
fs
popa
sarl
xor
cltd
dec
jne
and
das
fidivl
in
mov
ret
pop
xor
test
add
mov
jne
pop
cmpsl
loopne
fidivs
je
test
out
lds
push
and
pop
cltd
push
mov
js
dec
shll
or
dec
mov
xchg
inc
add
rorb
pushf
aam
cvtdq2ps
je
mov
mov
loopne
mov
xor
and
adc
sbb
popf
lock
in
adc
shr
push
push
in
push
add
jnp
mov
std
xlat
in
xchg
cmpsl
and
or
or
ljmp
xchg
or
xor
inc
aas
iret
mov
jp
in
or
loope
int
cmpsb
and
dec
icebp
subl
rclb
ljmp
aas
xor
xchg
push
mov
dec
jmp
mov
shll
mov
cmp
sarl
xor
movsl
lods
imull
jbe
or
mov
loop
or
test
sub
mov
aad
xor
xor
jns
cwtl
fstpl
adc
mov
push
sbb
in
enter
cmc
sbb
mov
xchg
push
sub
sbb
jo
in
test
or
or
lds
xchg
mov
pushf
xchg
div
cmpl
adc
xchg
popa
fst
dec
in
adc
xchg
daa
lret
sub
mov
int3
mov
jo
dec
jmp
lahf
sahf
in
mov
adc
dec
sbb
inc
jne
rcll
push
ret
push
lret
or
shlb
mov
outsl
out
popf
and
push
push
outsl
int3
cltd
ds
cmp
shrl
xchg
jo
mov
cli
call
xor
jae
out
lods
push
andb
dec
jg
pushl
sbb
mov
aad
sti
popf
cli
rol
popa
mov
lea
jb
pop
lea
inc
sbb
pop
out
pop
test
or
push
sub
jle
dec
fwait
mov
in
xchg
out
mov
mov
clc
push
dec
inc
cmp
mov
sti
jae
daa
ret
dec
orl
cmp
ret
insb
insl
xchg
dec
loope
cmpsb
xchg
cmp
in
add
gs
mov
mov
mov
xchg
clc
xor
push
cltd
and
inc
push
mov
dec
or
aaa
inc
popf
mov
cmpsw
push
adc
sub
shlb
pop
sub
push
xchg
test
fcmovne
imul
jp
xor
sub
divl
inc
je
adc
or
xchg
add
push
xchg
inc
push
test
jmp
adcl
imul
imul
movsb
in
incb
dec
push
mov
mov
push
int3
leave
lods
and
push
lret
xor
and
dec
or
stos
dec
into
add
lcall
inc
xlat
imul
in
pop
push
notl
jnp
cld
and
sub
jmp
cmpsl
scas
pop
dec
out
hlt
enter
popf
or
imul
sbb
adc
popa
bound
pop
std
test
test
mov
pop
rorl
mov
mov
movsl
xchg
push
mov
and
fidivs
cmp
jnp
stos
push
inc
lea
cmpsb
enter
int
mov
ds
mov
sbb
test
mov
dec
inc
push
in
mov
xchg
xlat
scas
movsl
add
rcl
fildll
hlt
into
inc
repnz
pop
jl
xor
xchg
pop
xor
jp
inc
arpl
pusha
add
mov
mov
repnz
lahf
test
or
fimuls
and
ljmp
mov
or
inc
sub
ds
pop
test
out
xchg
and
cmp
scas
xor
or
shlb
popa
sbb
mov
sub
pop
or
or
push
xchg
add
inc
lods
mov
jl
shl
je
sarl
cltd
repnz
cmpsb
xchg
sub
shrb
stos
mov
mov
popa
shlb
inc
and
mov
call
or
jmp
test
dec
subb
imul
xchg
adc
test
mov
stc
mov
mov
ja
adc
pop
fwait
and
cwtl
iret
or
mov
dec
sub
jl
jmp
push
ss
in
sub
sti
and
popf
jp
xor
jecxz
sbb
aad
sub
push
mov
daa
mov
inc
lea
or
sbb
xlat
jae
mov
das
call
mov
sbb
mov
and
fsts
add
pop
jl
out
jle
roll
xchg
and
and
and
inc
xchg
pop
jo
inc
lret
adc
mov
xor
sti
incl
inc
xchg
sbb
js
mov
xorb
fstp
push
inc
fyl2xp1
mov
add
ret
sbb
fisubl
insb
daa
pop
dec
mov
gs
pop
jae
mov
jno
aam
in
cmp
movsb
mov
push
pushf
xchg
ret
or
push
cwtl
xchg
xor
fdivl
jge
jmp
pop
imul
ja,pn
adcb
mov
mov
dec
cmp
add
pop
in
mov
pop
out
mov
aaa
pop
fcmove
jbe
loopne
sbb
sti
jecxz
xor
ret
mov
dec
mov
in
inc
ljmp
adc
lea
fwait
pop
or
jmp
adc
fstp
or
cltd
mov
sub
push
filds
test
push
es
xor
and
and
push
pop
sub
call
add
adc
out
xor
fildl
lods
push
inc
hlt
mov
test
cmpsl
or
lods
dec
cmp
jb
sahf
cld
fdivl
add
mov
and
xor
sub
jmp
mov
out
jg
aas
dec
enter
shll
ret
cs
add
inc
xor
insl
or
sbb
fbstp
rorb
add
jno
imul
outsb
cmp
and
stos
xorb
mov
xor
fs
stos
mov
leave
std
js
insl
enter
push
fsubs
mov
sub
popa
loopne
subb
les
pop
pop
imul
addr16
scas
gs
xor
xchg
inc
cmp
jle
jne
cmp
pushf
pusha
adc
sbb
ja
outsl
leave
sub
cmp
or
mov
and
fstps
push
push
arpl
test
push
mov
adc
mov
lds
or
jmp
adc
icebp
in
fcmovbe
iret
pushl
mov
ja
loope
dec
jns
jnp
inc
stos
inc
xchg
mov
stos
negb
adc
lods
mov
popa
ficoml
mov
mov
ljmp
cmp
outsl
mov
sub
adc
cmpl
iret
int
pop
cmp
pop
leave
xchg
arpl
test
push
mov
enter
pop
mov
lods
lret
mov
mov
jo
aaa
push
xor
movsb
sti
add
insb
add
rorb
and
enter
jmp
push
mov
das
mov
mov
pop
cmp
xchg
push
sahf
ljmp
sub
ljmp
out
mov
xor
dec
loope
lret
xchg
xor
push
bnd
pop
sarb
inc
stos
push
mov
mov
bound
mov
ret
pop
pop
sti
test
ja
xor
sub
sbb
mov
push
sbb
scas
push
lods
sbb
push
pusha
push
movsb
test
sub
mov
xchg
or
imul
call
jne
loope
push
loop
xchg
movsb
adc
push
jb
cmp
xchg
xor
xchg
outsl
xchg
lahf
lcall
sub
mov
or
and
rolb
push
les
adc
sbb
pop
push
cmpsb
insb
dec
pop
lcall
out
das
mov
outsb
cmp
lea
pop
pop
popa
sub
adc
pushf
mov
sbb
cld
mov
mov
inc
arpl
sti
notb
xor
xor
aaa
jb
iret
and
push
or
push
xchg
dec
outsb
scas
cmp
enter
mov
adc
jecxz
shrb
jb
repz
es
inc
add
test
test
xor
fsubl
dec
pop
pushf
and
jl
mov
jno
mov
inc
cs
lahf
test
jl
pop
sarl
ja
call
jo
cltd
dec
xchg
icebp
insl
cmp
pop
sub
dec
jne
pop
lds
into
scas
sti
xor
and
or
ret
adc
fisttpl
pop
ss
icebp
cmp
les
mov
cltd
and
adc
leave
xor
in
xor
aaa
pushf
int3
push
lods
int
sub
ret
sbb
xor
insb
loop
adc
pop
lcall
inc
in
out
subb
pop
jne
push
daa
pop
call
mov
insb
mov
ds
cltd
add
mov
lret
pop
dec
sbb
mov
sahf
lock
fdivrl
into
pop
das
out
lret
xchg
lods
pop
stc
push
imull
loopne
out
mov
mov
incl
jae
sbb
sub
add
and
pop
call
lock
lahf
std
ss
mov
pop
inc
lds
stos
stos
repnz
inc
mov
push
push
adc
jne
iret
cs
inc
mov
push
jp
sbb
ja
clc
and
push
popf
loop
imul
push
mov
add
negl
cmp
clc
pop
std
xchg
xor
std
fs
cmpsb
cmpsl
mov
adcl
mov
mov
inc
iret
mov
pop
adc
out
or
inc
sub
insl
push
test
subb
cwtl
pop
icebp
popa
aas
push
outsb
or
push
add
cmp
repnz
push
xchg
and
sub
shl
adc
push
push
in
std
imul
clc
xor
pop
sbb
ds
inc
mov
mov
push
xchg
sbb
push
cld
nop
sub
xor
adc
and
add
jg
inc
mov
sbb
push
rcll
in
mov
inc
jp
jne
mov
int
or
repnz
pop
ret
imul
push
sub
inc
cmpsb
js
shlb
mov
cmp
cmp
fidivrs
in
dec
and
adc
jle
inc
cmp
mov
repz
dec
stos
sub
pop
add
aaa
or
xchg
push
data16
movsb
enter
insb
cmp
sbb
es
push
or
fcmovbe
sub
jae
aaa
inc
sti
dec
mov
imul
insl
shlb
xor
sbb
aas
iret
jae
xchg
lret
cmp
ret
dec
inc
cmp
pop
mov
icebp
xchg
push
cmpsl
out
sub
test
xchg
and
mov
scas
js
jmp
cmp
stc
shrl
outsl
or
gs
sub
jmp
out
gs
sub
mov
lods
xchg
dec
movsl
ds
sub
aaa
mov
roll
sbb
push
sarl
ds
in
dec
sbb
sarl
push
xchg
mov
lds
mov
add
scas
sub
mov
in
jp
js
sbb
loopne
sub
sub
sti
jae
mov
add
add
pop
call
jns
lret
nop
mov
mov
jge
xor
in
inc
xor
test
jp
std
sub
xchg
xchg
rol
fsubs
jl
int
arpl
dec
lds
push
and
arpl
push
out
cld
inc
sti
insb
test
mov
loopne
js
and
ljmp
add
or
mov
xchg
xchg
sub
cs
xchg
movsl
push
repz
movsb
pop
mov
sbb
shll
cmp
call
nop
xchg
test
ljmp
scas
mov
sbbb
orl
mov
xlat
outsl
fistl
add
sbb
call
insl
lds
xor
sti
dec
hlt
fnstcw
xchg
mov
imul
pop
aam
jne
mov
loope
mov
inc
enter
mov
cli
int3
out
mov
lods
dec
pop
add
ja
xchg
inc
fmull
mov
jl
mov
push
addl
movsb
jo
cmc
scas
test
push
pop
into
jge
push
mov
jg
pop
jb
icebp
test
mov
inc
bound
es
dec
push
out
and
mov
cld
xchg
add
and
shrd
jb
or
fdivrs
mov
into
popl
in
lcall
xor
into
cmp
cmpsl
sub
add
push
sbb
icebp
and
jbe
jl
sub
push
mov
lods
cmp
shl
dec
mov
pop
pop
shrl
clc
rcr
mov
out
subl
mov
orb
stos
sbb
pop
push
push
lahf
xor
out
and
cs
aas
fldt
pop
arpl
pop
inc
jb
jmp
into
into
push
xor
insl
adc
in
arpl
jle
sti
mov
add
xor
fnstsw
push
shl
push
xor
sub
sbb
xor
cmp
adc
push
fdivs
pop
fs
insb
mov
inc
xlat
lea
cltd
jg
shll
fbstp
push
scas
std
jbe
push
cli
fistpll
leave
mov
mov
sbb
xchg
xchg
enter
adc
push
in
mov
or
and
sbb
lea
cwtl
xor
xchg
mov
loopne
in
xchg
loop
mov
cs
pop
in
lcall
pop
cmp
add
bound
mulb
mov
shlb
mov
adc
enter
jns
das
dec
movsb
xchg
xor
adc
jle
mov
jge
jmp
popf
mov
call
mov
scas
add
pushf
aas
mov
imul
test
dec
pop
fiaddl
pop
cmp
test
adc
jnp
in
ljmp
dec
xchg
pushf
data16
jo
push
pop
xorb
sbb
jp
add
add
popf
and
gs
push
pushf
sti
clc
fistps
cwtl
jns
enter
mov
or
arpl
leave
loopne
negb
xadd
imul
xor
int
cli
pop
stos
negb
iret
in
sbb
or
mov
ss
push
push
add
mov
mov
scas
repz
xchg
imul
mov
or
clc
jne
ror
pop
das
jge
add
jp
push
popa
test
cld
push
and
stos
mov
push
insl
xchg
repnz
xchg
in
cmpb
add
loope
add
test
outsl
add
insl
push
out
adc
jle
lods
inc
lret
repz
sahf
std
int
inc
xchg
and
and
add
vpavgw
xlat
xor
clc
dec
test
mov
add
mov
in
sub
ja
pop
and
xchg
gs
pop
mov
mov
outsl
jb
int
imul
divl
andl
ret
mov
out
add
adc
mov
xchg
jmp
or
sub
cmp
xor
test
test
call
inc
fiadds
lods
fistl
pushf
sub
stos
fsubr
cltd
or
inc
adc
mov
push
ret
pop
push
dec
adc
push
lret
lret
add
jae
adc
pop
mov
jae
inc
popa
push
fadds
xor
fstpl
lahf
test
and
dec
push
shl
mov
or
lcall
mov
mov
in
daa
jmp
push
mov
arpl
dec
ret
jbe
lock
js
xchg
insl
pop
push
cltd
mov
arpl
lcall
flds
dec
pop
push
mov
xchg
dec
pop
scas
sbb
jle
les
inc
xor
pop
adc
push
push
ds
cmp
xlat
adc
cld
mov
scas
movsb
xchg
cs
cld
or
imul
xor
xchg
sbb
call
fstpl
inc
outsl
jecxz
insb
adc
xchg
sar
pop
sbb
mov
push
pop
push
repz
sbb
and
cmc
push
mov
stos
shl
sbb
jbe
out
repnz
jmp
pop
sbb
les
push
ds
cmp
push
ret
ret
leave
cmpsb
sbb
lock
js
mov
sbb
enter
test
push
xchg
arpl
ficomps
dec
adcb
xor
ljmp
es
lret
xchg
loop
cs
xchg
lds
mov
ret
push
sub
sub
or
aam
jge
addl
mov
fsubl
sbb
test
cmp
mov
cmp
fcompl
rcll
lds
lock
shl
lahf
add
inc
xor
push
push
rcrl
ds
cmpsl
dec
movsl
xchg
aad
cmpsl
dec
leave
mov
or
ss
repnz
mov
repnz
inc
fimull
or
lcall
shlb
push
xchg
add
jns
fildll
pushf
test
ret
sub
pop
and
leave
xchg
fmuls
aas
and
in
int
fistl
loop
mov
xor
into
sub
lahf
adcb
push
and
add
inc
loopne
sub
lods
mov
pop
test
sbb
movl
ds
test
lea
and
sub
fstl
cmpb
xchg
xchg
dec
stos
js
xorl
push
leave
dec
sbb
adc
cwtl
cmp
lahf
negb
jo
out
test
addl
lods
or
xchg
or
fcoml
out
jg
das
push
in
ret
dec
mov
gs
jmp
mov
shlb
mov
test
pop
loope
push
mul
mov
test
lret
in
sbb
les
call
sub
fildl
push
imul
jbe
xchg
pusha
scas
xor
xor
lcall
fst
xor
mov
loopne
scas
cmp
xlat
addr16
dec
pop
fsubp
rcr
inc
pop
fistl
xor
repz
sbb
ss
mov
movsb
jns
test
gs
in
pop
or
lods
clc
nop
int
pop
dec
std
mov
into
iret
adc
push
sub
test
mov
sub
mov
repz
jno
xor
cmp
dec
lcall
mov
aam
xchg
mov
into
xlat
insl
and
cmp
mov
xor
out
mov
cmc
into
jns
testb
jno
pop
sti
enter
sbb
mov
shl
push
inc
lret
mov
mov
fstpt
outsl
shr
imul
jmp
lret
addr16
scas
out
in
fldl
subl
add
xor
add
xchg
xchg
imul
pop
xchg
sarl
xor
inc
repnz
cwtl
jmp
out
sahf
pop
rcrb
fidivl
dec
or
sub
mov
push
int
mov
ds
sbb
pop
push
fmulp
outsl
inc
cmp
stos
add
fcmovb
xor
inc
xchg
mov
cmp
mov
dec
add
push
or
ljmp
idivb
testl
jmp
dec
inc
movsl
out
sub
rclb
dec
dec
aad
jno
dec
mov
jne
sahf
jne
and
dec
data16
and
fldcw
xchg
mov
mov
mov
xor
sbb
cmp
or
sarb
mov
push
fwait
lahf
mov
sub
loop
rcrl
rolb
sbb
push
xor
jmp
adc
fistl
mov
shrb
les
dec
pusha
jno
popa
pop
hlt
adc
into
into
fadds
cmp
test
pushf
xchg
jbe
add
mulb
and
es
dec
insb
stc
push
test
das
xor
push
andl
mov
ss
inc
adc
lret
jno
je
icebp
jo
push
mov
call
inc
or
jle
and
std
fisttpl
adc
and
inc
in
inc
dec
iret
arpl
loop
jecxz
ficomps
out
sbb
add
xor
adc
test
or
jmp
movl
fisttpll
push
sbb
cli
mov
inc
xchg
adc
cmp
sub
or
inc
in
inc
leave
xchg
repnz
addr16
test
jae
test
push
jge
or
movsb
ja
or
dec
fidivs
and
int3
adc
mov
dec
pop
leave
insb
int3
aam
jmp
inc
sub
lods
and
xchg
xor
cmp
xor
scas
jge
pop
xor
rorl
mov
testl
adc
movsl
insl
or
pop
xor
inc
xlat
dec
push
add
cli
nop
xor
dec
cmpsl
mov
out
inc
cmp
fs
das
daa
ret
cmp
mov
daa
mov
imul
ffreep
xchg
in
add
sub
pop
dec
rorb
mov
int
xchg
xchg
mov
pop
repnz
enter
rcll
pop
adc
jb
scas
adcl
sti
mov
dec
clc
ret
ret
int
stos
mov
jle
cmp
jne
test
adc
mov
dec
cli
fisubrl
xlat
add
inc
test
jl
xor
mov
gs
inc
inc
repz
aaa
loope
and
hlt
ret
fmull
outsb
sbb
mov
dec
lahf
mov
and
inc
jns
lock
mov
push
fsubr
xchg
sbb
xor
into
push
shlb
les
in
add
js
int
out
cmp
pop
push
xchg
cmpsb
jge
sbb
cmp
or
sbb
pop
mov
mull
icebp
ljmp
and
xor
int
loope
cwtl
mov
mov
imul
adc
ss
js
pusha
jne
fidivs
dec
or
ljmp
into
inc
push
mov
shl
inc
xorb
mov
dec
adc
negl
mov
lcall
push
test
xor
sub
pop
fnstenv
lahf
dec
xor
test
test
pop
or
test
xchg
xchg
sbb
xor
lea
cmpsb
mov
fisubs
adc
int3
rdtsc
sahf
rclb
xchg
lock
or
fldcw
nop
or
or
popf
shrl
sub
adc
int3
mov
mov
and
adc
nop
mov
cmp
mov
into
sbb
jg
jmp
dec
cmc
rcl
faddp
pop
push
ss
outsb
aam
pop
fadd
mov
mov
jns
bound
push
xchg
sbb
inc
jmp
scas
adc
add
dec
cmpsb
add
data16
jmp
test
cltd
jle
aas
mov
and
jbe
imul
add
lock
das
loop
ffree
ss
outsl
mov
mov
push
inc
imul
in
stc
orl
loop
ret
sbb
in
or
push
inc
es
stc
mov
andl
mov
addr16
lock
sbb
shlb
fnstenv
add
mov
jg
je
jg
push
pop
adc
mov
cld
shr
dec
arpl
js
sbb
movsl
in
mov
xor
pop
and
cld
adc
sbb
mov
sub
inc
js
xchg
mov
out
loop
sub
ret
or
nop
add
push
cld
cltd
sub
pop
sbb
mov
adc
sbb
in
jnp
mov
lods
jmp
cmp
sarl
xchg
rolb
mov
cmp
push
push
xchg
jnp
and
pop
sahf
ret
mov
outsl
dec
popa
push
jg
xlat
cmpb
sub
fucom
les
jae
jp
and
shll
xchg
roll
pop
or
xchg
std
pop
mov
push
lahf
push
dec
or
pushl
pop
dec
js
mov
jne
ret
adc
xchg
and
cmpsb
dec
andl
cmp
jp
pop
stos
shrb
fsts
sbb
sub
hlt
test
sarb
fldenv
enter
sbb
mov
gs
cwtl
cwtl
cmp
inc
jmp
xor
xchg
or
push
inc
stc
dec
push
mov
pop
cli
andl
inc
sahf
test
stos
ja
mov
aas
xchg
mov
xchg
mov
inc
jae
idivb
mov
rcr
cmp
rol
push
out
data16
jne
ror
add
rolb
jne
sahf
arpl
jmp
jae
ret
mov
cmp
jle
test
mov
xchg
dec
nop
inc
cmp
mov
adcb
pop
sub
addr16
mov
iret
scas
test
mov
xchg
fbstp
mov
outsb
push
ret
mov
mov
les
sub
xchg
push
ljmp
arpl
xchg
cmp
es
je
or
pop
fistl
out
add
mov
push
in
orl
ds
adc
mov
jg
jg
cmpsl
imul
movsb
mov
aad
push
jo
fidivrs
pop
xor
shll
xchg
shlb
pop
imul
out
push
call
aas
jbe
sbb
in
sub
aad
out
cwtl
shrb
cmp
adc
cltd
inc
int
jo
xor
rol
inc
outsb
pushf
cmp
mov
inc
jge
pop
push
sahf
jecxz
cmp
or
push
insl
and
aas
xchg
xchg
pop
lods
jns
mov
mov
pop
or
nop
mov
adc
out
or
adcl
outsl
cmp
insl
or
push
cmp
pop
call
jbe
outsl
push
fdivs
aad
xchg
dec
lods
addr16
lds
pushf
in
mov
movsb
xchg
and
and
jecxz
insb
adc
hlt
push
outsb
out
xchg
mov
jp
lahf
and
sbb
mov
mov
mov
add
and
dec
jmp
ret
xchg
mov
push
stc
test
stos
or
and
arpl
arpl
inc
push
jmp
sub
testl
pop
lahf
andl
aam
outsb
cmpsb
sbb
in
xchg
dec
jae
ljmp
out
pop
pushf
stos
imul
cltd
popf
repz
adc
jge
jae
loop
imul
rcl
mov
pmullw
pop
inc
int
adc
pop
push
and
sti
xchg
leave
out
or
push
out
mov
adc
jge
mov
xor
and
testb
inc
fldenv
aad
ljmp
xchg
or
pop
dec
aas
mov
xor
popl
mov
imul
mov
pcmpgtd
pop
aas
out
enter
mov
adc
mov
idiv
in
movsb
push
int
lahf
xor
scas
test
ljmp
cmp
dec
fsubl
sub
jo
cmp
daa
cmpsl
shl
xchg
lea
data16
test
jne
dec
mov
inc
outsb
xchg
push
xchg
sti
xor
push
popf
inc
call
push
push
shlb
mov
test
push
call
sub
stos
dec
lret
repz
or
or
push
cli
rol
out
fsubr
pushf
jecxz
xor
repz
jnp
js
sbb
int
sub
adc
xchg
inc
ds
cwtl
dec
mov
push
cltd
mov
ja
cwtl
push
and
mov
adc
sahf
es
xchg
push
popa
push
ljmp
cmp
mov
adc
fildll
pop
pop
sub
repz
enter
mov
lea
fcmovnb
push
and
shlb
fucomi
pushf
bswap
pushf
sbb
add
mov
aaa
aas
push
jl
dec
ss
movsl
incb
js
scas
and
daa
popf
sbb
cmp
leave
mov
inc
push
out
stos
lock
dec
lahf
xchg
push
mov
aaa
mov
call
mov
inc
push
push
jp
mov
icebp
movzwl
mov
repnz
xor
dec
inc
bswap
push
mov
or
mov
sbbl
sbb
loope
add
cs
cltd
or
lret
dec
daa
sbb
gs
imull
pop
cwtl
stos
pop
cmpsb
jecxz
jbe
loopne
icebp
dec
jmp
loopne
jne
mov
jb
icebp
adc
clc
pop
or
inc
lret
mov
sub
shrl
icebp
stc
dec
mov
inc
xchg
push
adc
jmp
outsl
xchg
xor
jnp
loopne
sbb
std
sahf
mov
frstor
xchg
lret
aaa
xchg
ja
jo
push
pop
xchg
xchg
jae
mov
out
pop
and
jno
sbb
je
mov
mov
mov
cli
pop
adc
and
rolb
pop
push
test
mov
xchg
inc
push
insb
mov
adc
loope
scas
es
cmp
daa
arpl
dec
scas
arpl
xor
add
cmp
pop
ljmp
jbe
and
inc
jne
add
sti
data16
add
xchg
fcmovnb
fstps
cmpsl
movsb
loop
mov
add
rclb
cmp
popa
popf
fwait
cmpsb
pop
adc
mov
and
or
push
scas
adc
and
pushf
pop
scas
mov
and
push
mov
andb
nop
jnp
dec
push
pop
fcom
int3
add
jo
idivb
sbb
xor
mov
int3
in
or
in
mov
and
add
call
and
mov
jle
push
xchg
sub
insb
and
pop
lahf
sar
sti
fnstenv
aad
std
push
dec
mov
arpl
xor
and
pushl
add
leave
add
loop
dec
ljmp
mov
je
insb
pop
mov
and
pop
arpl
add
test
dec
cs
js
cmp
lret
js
mov
mov
sbb
mov
sub
and
mov
bound
mov
xchg
jl
mov
lods
mov
cld
repz
dec
call
dec
mov
psubusw
fcomp
dec
pop
decl
aas
inc
mov
inc
cmc
sbb
cli
inc
stc
mov
leave
in
adc
inc
push
mov
dec
jle
std
mov
test
pop
popf
shll
mov
push
mov
xchg
insl
xchg
cmc
and
outsb
mov
or
cmpsl
shll
cmc
shl
inc
scas
pop
inc
js
cmp
jnp
ss
and
and
cltd
mov
sbb
repnz
fidivl
sub
ret
scas
fiadds
jp
insb
mov
cmp
or
and
or
and
popa
xchg
sbb
xor
lahf
or
movsl
pop
sbb
loope
cld
mov
inc
cltd
or
push
ret
xchg
push
arpl
jecxz
xor
lock
outsl
hlt
lods
or
orb
sbb
xor
mov
stc
cmp
push
es
cmp
in
daa
push
loopne
inc
cmp
les
sahf
dec
inc
jg
imul
xor
faddl
pop
and
and
adc
push
jmp
les
push
sbb
call
xchg
mov
das
sbb
sbb
movsl
mov
test
mov
pop
mov
adc
lcall
ja
or
loope
xor
add
stos
vpextrw
lds
lods
aad
sub
mov
stc
insl
popf
cmpsb
lcall
rcll
jae
push
in
scas
mov
or
bound
out
out
mov
idivl
xchg
das
jge
pop
ljmp
test
add
pop
push
gs
xor
jmp
in
in
mov
scas
insb
jbe
inc
pop
mov
push
stos
adc
out
cs
jp
fmull
imul
inc
xor
insl
cmovge
inc
into
repz
sahf
cmc
cli
aad
aas
push
popa
sahf
nop
or
mov
push
sub
and
roll
jle
push
xor
or
es
sbb
mov
jmp
in
mov
addl
pop
setb
lods
jle
cltd
add
cli
jno
ja
imul
jecxz
mov
loopne
iret
je
mov
popf
mov
ds
jbe
mov
leave
gs
cltd
mov
inc
cmp
adc
mov
xor
out
imul
mulps
mov
in
mov
pop
or
orb
aad
rcr
test
jae
scas
mov
and
movsb
das
pop
and
jp
lods
dec
push
xchg
js
dec
outsb
adc
xor
stc
and
pextrw
push
mov
jb
loop
xor
pop
ret
ljmp
mov
sbb
call
and
leave
jbe
xor
es
ds
popa
mov
insl
aas
lret
mov
aas
pushf
mov
xlat
mov
xchg
mov
les
pusha
mov
popa
adc
imul
sbb
aas
je
ljmp
loope
mov
int
cmp
iret
lea
push
scas
adc
pop
adc
jbe
loop
jae
pop
ret
shrl
inc
fisubl
into
cmc
push
jl
mov
repnz
mov
in
repnz
cmp
xchg
and
adc
jle
outsb
shr
inc
cs
mov
and
decl
daa
jl
sbb
push
dec
mov
pushw
xchg
jb
cmp
push
adcl
adc
cwtl
lods
and
xchg
or
or
pushl
pop
xor
insl
int
cld
into
push
iret
jo
xchg
pop
sti
cli
aaa
lcall
mov
sub
ljmp
xor
out
dec
outsb
or
cmp
ljmp
mov
xor
mov
push
inc
fsubl
leave
fadd
jle
mov
xor
shll
pop
or
add
jo
mov
cli
push
cs
std
jno
sbb
enter
add
lods
imul
dec
fwait
sar
test
sub
imul
push
test
jno
insl
sarl
pusha
lock
adc
adc
icebp
mov
pop
int
js
inc
stos
jmp
inc
adc
adc
ljmp
daa
clc
push
xchg
daa
repz
mov
jmp
push
aad
ljmp
in
scas
std
popf
loope
enter
dec
dec
add
mov
fs
pushf
push
fdivp
jo
mov
fldenv
mov
inc
mov
and
sub
mov
stos
jecxz
dec
mov
mov
jl
push
in
cmp
ds
arpl
sbbl
in
sti
test
jmp
mov
dec
push
insl
cmp
mov
mov
jbe
sub
inc
cmp
add
jp
cmpsl
xchg
xchg
arpl
rcll
sbb
mov
outsb
movsb
jo
pusha
jns
add
push
dec
outsb
testb
xor
mov
jns
cmpsb
andl
fucom
pop
inc
sahf
mov
inc
fldenv
rcrb
and
push
xor
ss
pop
aaa
lods
sub
das
jae
mov
push
lahf
fucomi
xchg
add
mov
sbb
jbe
loopne
lret
push
xor
aaa
cmpsl
xchg
xor
xchg
pushf
sbb
mov
lea
dec
mov
and
lds
mov
and
cmp
outsl
inc
jnp
mov
push
xchg
pusha
mov
in
cmpsl
mov
stc
aas
sbb
movsb
repnz
mov
imul
xchg
and
sbb
fucomip
repnz
and
add
mov
fstpl
xchg
sub
xchg
adc
jp
fs
xor
outsb
fsubrl
mov
add
into
sbbb
icebp
jbe
nop
lahf
fistpl
xor
imul
inc
hlt
hlt
push
and
int
and
addr16
mov
and
adc
jb
sub
sbb
pop
fidivl
imul
fwait
jb
cmp
inc
dec
aad
pop
pusha
push
arpl
test
push
sbb
pop
cmp
out
jmp
add
xor
outsb
mov
mov
enter
push
cmp
cmp
adc
sti
mov
call
dec
fs
movsl
add
movsl
es
ffreep
fcoms
popf
clc
xor
in
rorb
cli
jle
jg
adc
movsb
mov
jbe
test
jecxz
xorl
jecxz
lock
push
lahf
jp
cli
adc
sbb
or
andb
out
rorb
imul
xchg
mov
out
fwait
cmp
or
enter
add
or
adcb
fimuls
jns
mov
mov
push
sahf
inc
test
inc
xor
test
mov
pushl
jmp
push
clc
jns
popa
mov
fnsave
cmpps
lods
popl
xchg
insl
pop
xor
out
sub
stos
mov
pop
lret
movsb
pop
rcrl
cmp
es
cli
test
xchg
sbb
or
idivl
ja
iret
mov
jl
push
sub
xchg
jb
repnz
inc
sub
stos
add
push
jge
sti
cmc
push
arpl
inc
cmp
mov
cmp
push
xor
mov
in
dec
mov
inc
loope
mov
repnz
rcrl
cs
pop
dec
sti
mov
sbb
add
add
subb
dec
inc
scas
jo
or
mov
xchg
sbb
sub
dec
sbb
or
mov
xchg
sahf
add
sbb
xchg
xchg
das
stc
or
push
es
pusha
jmp
jbe
xchg
inc
and
mov
stos
mov
repz
jmp
aas
and
adc
shlb
fists
xor
jae
jbe
push
dec
daa
pop
adc
push
cmpsb
push
inc
or
xor
inc
push
adc
xchg
pop
scas
jge
dec
pop
daa
call
fbld
mov
sbb
add
xchg
mov
addb
and
icebp
imul
test
mov
sbb
and
in
adc
pop
xchg
xchg
mov
xchg
push
cmp
fsubl
jmp
std
push
pop
aam
or
repnz
jne
push
pop
pop
xchg
mov
test
lods
pop
pusha
jg
inc
subl
shrb
sub
fcomip
or
cmp
jbe
scas
push
int
sbb
sub
jae
xor
rcll
adc
jbe
jae
mov
dec
jle
cmp
xor
cmp
test
rclb
sub
or
pop
xchg
loopne
gs
fdivr
loopne
xchg
filds
movsb
xchg
in
pushf
mov
add
jmp
aaa
mov
mov
orb
mov
inc
cmc
add
and
jo
lahf
adc
into
mov
mov
scas
adc
arpl
pop
leave
scas
or
rcl
cmp
jmp
aaa
mov
and
mov
cwtl
gs
cltd
and
arpl
mov
scas
cltd
jns
jo
and
adcb
pop
aad
fsubrs
fwait
push
call
pop
popa
lcall
adc
enter
ret
or
cmpb
xor
fmull
arpl
adc
into
jecxz
sub
adc
dec
sbb
aaa
inc
sbb
jns
rolb
sub
xlat
jae
xor
test
imul
stos
dec
add
push
pusha
push
pop
jo
pusha
fldcw
ds
cmpsl
and
jg
push
mov
push
pop
nop
adc
lret
fsubrs
in
xor
mov
add
fiadds
mov
cmpsb
xchg
ss
sub
dec
decl
xchg
arpl
cmc
frstor
xchg
clc
gs
cmpsl
xor
push
sub
dec
mov
mov
jo
sub
xchg
aam
lret
and
add
pop
enter
aam
or
or
js
cmp
les
aam
mov
push
ffreep
dec
mov
push
and
dec
xor
xchg
movsb
xor
leave
faddp
ud0
push
xor
ja
sbb
mov
sahf
fs
xchg
jmp
mov
iret
inc
scas
in
and
adc
call
std
pusha
sub
rclb
add
aad
jecxz
ja
cltd
pop
aam
jl
lock
mov
fidivs
dec
pop
pop
clc
lcall
inc
pop
pop
push
cs
mov
adc
adc
out
or
aas
cwtl
fwait
mov
jo
sbb
or
imul
hlt
divl
xchg
insb
rcrb
dec
repz
enter
and
xor
fldcw
adc
add
cmpl
sbb
out
jnp
out
inc
mov
cltd
sbb
test
mov
in
out
add
sub
pop
pop
ja
scas
mov
inc
sbb
adc
mov
jl
inc
ja
push
or
testl
mov
inc
in
inc
cmpsl
les
daa
testb
ljmp
xor
cwtl
or
jbe
adc
inc
mov
imulb
ljmp
pop
xchg
aaa
ss
mov
xlat
rclb
push
adc
loop
mov
pop
loope
xchg
sbb
jge
mov
ret
push
cmpsl
pop
test
or
mov
out
pop
aas
push
ret
jge
shll
fidivrs
adc
movsb
sbb
jbe
mov
jns
int
xor
dec
or
imul
pop
mov
call
mov
movsl
notl
or
mov
or
xor
fisttps
mov
xor
cmp
adc
aaa
mov
push
jecxz
fidivrs
adc
lds
rolb
stos
outsl
test
xchg
cld
push
loope
sub
push
loope
mov
test
add
or
lods
faddl
sbb
aas
mov
bound
rol
enter
lcall
push
loopne
call
test
sbb
jnp
pop
lcall
mov
stos
cmp
stos
mov
pop
daa
sbb
insb
and
jmp
xchg
fsubs
or
add
repz
sbb
jge
dec
push
xchg
or
sub
mov
fidivrl
aas
jne
jg
insl
push
imul
adc
dec
enter
popf
jo
aad
push
xchg
into
stc
dec
pop
sub
std
jle
mov
inc
add
pop
loope
rcl
ret
add
cmpsl
loop
lods
mov
sbb
ds
jg
mov
and
push
adc
ret
leave
sbb
inc
jg
inc
jp
pop
add
loop
or
mov
mov
outsl
hlt
and
sub
ja
dec
dec
push
mov
mov
lret
add
outsb
jnp
cld
push
sub
ss
dec
insb
push
jne
cld
sbb
idivb
sbb
imulb
jae
adc
daa
sub
add
out
dec
and
std
aam
cmp
cmp
movsl
clc
out
sbb
shll
scas
cmc
mov
movsl
int3
jge
int
lea
lds
fisttps
push
mov
add
add
mov
sub
cmpsb
cs
testb
mov
add
ret
test
pop
outsl
sub
ja
fimull
cmpsl
out
push
jle
pop
push
movsb
xor
outsl
fdivrs
sub
test
or
cmp
jmp
lds
mov
mov
sub
jne
sub
insl
aas
inc
shlb
mov
add
ret
mov
sub
inc
rol
jmp
xchg
fmuls
stc
dec
add
and
test
cmp
mov
and
jp
les
add
mov
leave
pop
fs
jmp
adc
sbb
and
xchg
cmp
js
fldcw
xlat
cmp
scas
push
ret
lcall
pop
jo
imul
insb
cmc
sbb
jb
outsl
mov
iret
lret
ljmp
mov
jo
mov
lret
adc
mov
pushf
jns
cmp
mov
cli
push
inc
xchg
out
inc
cmp
mov
iret
sti
adc
idivb
fstpt
arpl
fdivs
in
jno
clc
pop
adc
dec
ffree
cmpsl
add
popa
test
jmp
insb
inc
outsb
int
insb
aas
fwait
xchg
mov
ja
mov
dec
pop
xchg
sbb
sbb
mov
icebp
sub
and
leave
inc
mov
push
shll
or
adc
mov
jbe
xchg
fcoms
sub
adc
imul
fnclex
fists
pusha
int3
lahf
jle
dec
stc
outsb
inc
sub
cmp
hlt
sbb
sbb
push
imul
sub
nop
xor
sbb
jno
add
add
stos
add
xchg
test
push
and
cmp
push
addl
inc
jl
stos
inc
decb
lret
and
add
cwtl
outsl
mov
outsb
mov
jne
fdivr
js
fwait
cmp
lret
ds
mov
gs
ret
adc
xor
les
sti
aas
in
out
fbstp
outsl
jae
sti
or
dec
stos
call
sbb
mov
mov
out
hlt
mov
push
jnp
add
adc
scas
mov
mov
jmp
jb
xchg
and
rol
scas
mov
hlt
iret
inc
pop
sbb
xchg
int
js
sub
dec
daa
mov
add
je
cmp
mov
mov
out
and
inc
stos
cmpsb
scas
adc
jmp
icebp
dec
int
mov
mov
add
fsubr
mov
lret
popa
pop
jp
or
je
and
mov
jle
ret
outsl
loop
or
cltd
mov
xor
lds
inc
cltd
sbb
mov
mov
jo
lds
or
pop
fsubs
xlat
sahf
push
popf
inc
insb
cmp
jo
inc
pop
mov
shrb
incl
mov
outsb
cmp
and
inc
or
lods
clc
push
orl
test
int3
and
fsubs
mov
inc
inc
cmc
icebp
and
add
cltd
xorb
push
push
adc
or
mov
xchg
addr16
sub
outsl
stos
xor
insb
fwait
push
outsb
pop
cld
iret
call
scas
xor
inc
pusha
add
cmp
aas
daa
adc
mov
enter
pop
pop
sbb
cmp
xchg
sarl
push
fldcw
xchg
adc
push
sbb
aam
push
divl
in
and
into
into
push
inc
ret
lcall
fbld
call
movsb
bound
dec
into
sub
add
addr16
movsl
lea
leave
ret
mov
into
add
cmc
lods
int
cmp
sbb
or
inc
inc
insb
aad
push
mov
push
push
jo
sbb
xor
jno
mov
xchg
in
pushf
orb
xlat
mov
push
hlt
jge
lret
mov
out
adc
repnz
addr16
xor
jecxz
xor
int
ret
imul
push
mov
movsb
imul
pop
mov
bnd
into
int3
xor
cltd
adc
fistps
daa
push
cli
dec
jg
les
bound
jecxz
arpl
and
out
sti
imulb
push
xchg
out
lret
sbb
mov
orb
and
hlt
cwtl
push
sub
xor
mov
cmpsl
xchg
test
jne
lret
cld
ljmp
xchg
and
hlt
jbe
jge
lea
push
push
add
nop
push
enter
sub
or
mov
int3
addb
lea
cmc
cltd
and
inc
add
es
bound
pop
cmp
mov
subps
scas
pop
jg
jno
or
lretw
mov
mov
loope
and
sbb
aas
shrl
mov
pop
loopne
dec
mov
and
ja
divps
mov
test
cmpsl
inc
scas
or
mov
inc
mov
mov
jbe
cli
mov
loop
push
sbb
mov
dec
rcr
mov
ds
cwtl
and
loop,pn
inc
loope
or
insl
adc
in
popf
or
repz
mov
loope
mov
mov
out
dec
mov
pop
jo
in
or
push
and
ret
jns
mov
loop
pop
js
mov
push
push
xchg
enter
leave
add
sbb
addr16
xchg
xchg
dec
hlt
add
cmp
dec
xchg
cmp
push
bound
mov
lahf
ljmp
sub
inc
gs
adc
repz
fs
cmp
lods
jb
push
pop
xchg
int3
mov
mov
xlat
fmul
jne
pop
lret
shlb
push
mov
mov
ljmp
pop
fcomps
out
inc
loopne
mov
int
mov
inc
aaa
and
in
arpl
inc
xor
gs
mov
inc
xchg
adc
fs
shlb
push
adc
sbb
jecxz
pushf
pop
test
pop
xor
sub
movsl
mov
cmp
fisubrl
loop
enter
jl
outsb
sub
je
and
and
mov
out
movsl
cltd
jnp
fcompl
sysenter
add
and
loopne
hlt
imul
mov
stos
jge
xchg
and
inc
xchg
mov
call
jo
pmuludq
out
jno
or
xlat
test
rcrl
xor
mov
jmp
int3
shll
loopne
jmp
xchg
mov
jmp
mov
jbe
aas
scas
jl
xor
fcmovne
sahf
adc
ljmp
mov
sbb
and
repnz
push
aas
mov
out
mov
pushf
mov
aad
stos
jge
mov
and
fwait
add
lods
lock
inc
mov
push
inc
aad
mov
push
sahf
xchg
aas
cmpb
adc
push
pop
mov
js
inc
lcall
mov
add
jbe
dec
dec
int3
push
pop
scas
icebp
sub
mov
cmp
cmp
shrb
push
bound
addb
or
pusha
dec
push
add
sbb
pop
and
cmp
loopne
push
mov
mov
xor
xchg
je
or
icebp
inc
mov
and
dec
fimuls
ja
push
mov
popa
or
and
imul
inc
cld
stos
jecxz
rcl
pop
outsb
dec
inc
ret
jle
or
or
fdivrl
stc
out
popf
jle
xor
cmpsl
es
and
jg
fimuls
fimuls
xor
or
fdivrs
inc
push
call
sbb
adcl
fwait
mov
in
push
test
inc
lods
and
or
sti
call
mov
inc
xor
cmpsb
dec
fcomp
dec
lea
ds
repnz
mov
cmp
xchg
test
dec
mov
push
subb
icebp
jecxz
or
jp
test
cwtl
mov
fs
mov
mov
in
cmp
sub
dec
imul
sub
mov
push
pop
les
mov
cmp
jmp
scas
xorb
mov
cmpsb
pop
mov
mov
es
xor
cmp
pop
lds
addr16
push
xchg
loope
lcall
jne
test
mov
or
jae
pusha
sub
hlt
jb
xor
cmp
and
dec
stos
jne
push
pop
repz
push
jl
mov
idiv
mov
repz
fimuls
pop
cltd
pop
dec
stos
and
inc
movsl
jne
add
lahf
in
shrb
xlat
sub
add
shlb
and
testl
xor
sbb
pushf
cltd
mov
out
pop
adcb
scas
xor
mov
stos
int
xchg
inc
lock
pushf
sub
sbb
dec
sbb
pop
in
lahf
into
divb
and
mov
not
push
mov
jo
dec
pushf
adc
sub
pop
cs
mov
enter
adc
adc
dec
pop
movsb
aaa
loopne
mov
mov
into
test
pop
pop
test
lock
pop
mov
movsl
shll
sub
sahf
call
lcall
xchg
push
stc
cmp
loopne
push
xchg
xlat
scas
xlat
mov
test
mov
inc
and
cmp
add
aaa
add
adc
test
enter
mov
into
cwtl
jae
ljmp
adc
pop
loop
mov
pop
subb
dec
xor
scas
mov
test
xor
jle
or
add
jb
and
adc
lret
mov
subl
out
and
mov
popf
popf
add
fwait
mov
out
sub
fs
rcrb
and
jge
into
or
cmpsl
jl
dec
popf
mov
pop
stos
dec
cmpsl
cmp
and
rcll
adc
outsl
sub
shlb
push
and
fldcw
sti
push
clc
fcoms
adc
dec
ds
jae
in
adc
clc
les
lea
mov
push
movsb
call
mov
dec
push
push
push
and
mov
cmp
push
sub
and
popf
sbb
stos
lahf
and
cmp
push
sub
jae
pop
test
movsl
push
xchg
mov
inc
insl
cmc
and
mov
mov
out
mov
or
mov
pop
pop
movsb
mov
xor
jmp
icebp
ficoms
pop
arpl
pop
dec
mov
jae
add
ret
lods
bound
add
decb
repz
cmp
mov
pop
push
sub
lahf
fbstp
mov
mov
fsubrl
arpl
fidivrl
cmp
cmp
lahf
fwait
mov
xlat
enter
test
cmp
repz
jne
int3
dec
lahf
mov
inc
pop
sbb
cltd
movsb
sub
imul
xor
cmc
ljmp
and
jnp
pop
sub
inc
mov
mov
and
cmp
sub
test
stos
xor
outsl
add
dec
sbb
sbb
ret
dec
adc
test
popf
iret
pop
inc
fprem
pop
cmp
mov
adc
adc
outsl
fsubrs
inc
sbb
jmp
sbb
dec
ss
cmp
sub
xor
ret
or
mov
frstor
pushf
aad
sbb
pop
or
push
mov
aas
jns
jae
imul
cmp
cmc
outsl
adc
es
add
push
icebp
xor
stos
lods
fcomp
cmp
cmp
push
inc
sahf
adc
jg
xchg
dec
repz
xor
push
mov
fldcw
fimuls
pop
outsl
lret
outsb
mov
add
add
aam
xor
xchg
adc
es
xlat
int
mov
cmpsb
adc
pushf
push
arpl
sbb
leave
cmovbe
mov
int3
das
addr16
sbb
or
mov
mov
or
cltd
dec
mov
je
inc
sbb
lea
jmp
and
into
int
test
mov
mov
xor
fsts
mov
mov
jle
ss
push
lahf
popf
sub
je
mov
aas
pop
in
mov
xchg
fs
jg
mul
dec
mov
das
mov
and
and
mov
lods
cmp
add
loope
sub
outsb
pop
fs
mov
dec
sbb
add
pop
sarl
dec
imul
loope
hlt
dec
dec
inc
in
adc
push
jl
ss
add
or
pushf
pop
push
cmp
or
in
fsubs
ret
pop
fistl
push
add
mov
xor
stos
mov
add
push
into
mov
or
inc
ret
int
pop
faddl
inc
mov
jo
dec
orl
or
pop
xor
stc
dec
jno
movsl
mov
test
push
cmp
or
outsl
jae
mul
cmp
adc
cmp
fwait
bound
aad
pushf
add
and
jecxz
das
or
mov
cmpsb
jne
pusha
scas
inc
cmp
pop
leave
out
add
pushf
sub
add
test
shlb
fbld
sub
mov
imul
inc
xorl
dec
pop
sbb
sarl
ja
out
movsl
sub
pusha
jb
test
mov
fsubrl
outsb
xchg
mov
out
incb
dec
in
xor
push
cmp
jo
das
lret
mov
rcrb
inc
fdivs
aad
mov
add
mov
push
dec
hlt
aam
inc
jmp
ficoml
scas
inc
sub
lahf
sbb
divl
jmp
std
in
sahf
addl
rorl
push
rorl
data16
add
jge
xor
inc
adc
arpl
mov
test
push
sbbb
nop
stos
out
jb
shll
js
fs
dec
pusha
push
add
or
rorl
pop
insb
outsb
sub
pop
clc
out
scas
sub
insl
fists
add
pushaw
cli
adc
cs
je
in
cmp
and
mov
jnp
jmp
xlat
push
xchg
stos
out
pop
adc
push
xchg
fildll
jb
jbe
jecxz
mov
mov
cmp
mov
mov
ds
cltd
inc
push
ret
push
stc
mov
int3
inc
inc
or
rcll
xchg
push
aad
sahf
loope
push
cwtl
in
mov
mov
jle
jns
jne
pop
push
mov
gs
inc
xchg
dec
xchg
adc
or
push
jmp
dec
fildll
out
cmpsb
dec
sbb
cli
and
adc
mov
fldl
xchg
push
add
cs
cmp
sahf
jge
or
push
push
mov
es
pop
subb
in
sub
ljmp
xchg
adc
xchg
hlt
mov
pop
test
cli
icebp
or
push
and
xchg
aam
dec
loope
lahf
mov
mov
xchg
lcall
xor
lods
push
das
testl
dec
and
scas
jb
fstpt
cmpsb
lret
mov
push
push
lret
hlt
mov
lods
push
pcmpgtd
repnz
rolb
push
popa
or
pop
stc
in
pop
cwtl
cmc
test
ss
lds
sbb
sub
sbb
es
inc
out
or
mov
ret
xchg
xchg
xchg
lret
std
call
xor
aas
mov
sub
test
xchg
and
ror
les
mov
rclb
test
add
cmpsl
ret
jl
int3
shrb
or
mov
inc
out
or
test
fimull
lret
pusha
movsb
inc
dec
es
or
lret
out
jle
jns
jbe
jge
jmp
cmp
or
jl
push
hlt
ds
push
dec
xchg
in
xor
sbb
aad
mov
inc
mov
test
dec
faddp
mov
fmull
mov
das
rcll
mov
inc
lds
xor
push
test
mov
push
fiaddl
add
jae
mov
push
inc
unpcklps
insl
jb
sarb
push
rcr
cmpsl
or
xlat
mov
dec
test
xchg
and
adc
je
xchg
lret
lods
lds
cltd
mov
mov
outsl
aas
rorl
adc
or
inc
inc
clc
add
jge
xor
ja
or
cmpsl
imul
mov
pusha
xchg
inc
xor
lret
fildll
les
push
mov
push
sub
gs
fiaddl
jnp
stos
jb
fdiv
loop
adc
mov
pop
enter
push
adc
bound
daa
xchg
lret
mov
or
lahf
pop
aaa
stos
fiaddl
add
mov
adc
dec
mov
pushf
test
test
sbb
stc
lods
cmpsl
sbb
add
ja
jecxz
adc
mov
xor
icebp
ja
or
or
push
pop
xchg
js
pop
add
mov
jge
or
movsl
or
out
addr16
add
std
jle
loopne,pt
into
and
adc
lods
mov
or
cmp
inc
cld
or
dec
into
mov
nop
test
es
mov
add
cmp
push
in
cld
mov
arpl
ret
cmp
pop
test
mov
inc
xchg
jb
cmp
sub
sti
dec
sahf
fbld
sbb
push
lret
loopne
push
and
pop
mov
inc
mov
and
mov
lahf
cmp
insb
mov
pop
lea
js
subb
cmp
in
pushf
cs
jmp
jne
add
fisubs
lahf
inc
popf
out
pushf
pop
jns
mov
sub
inc
jb
xor
pop
cmp
xchg
xor
js
sub
mov
arpl
pop
sar
cmp
movsb
call
leave
leave
std
jno
and
xchg
shrb
fdivr
lcall
shll
lea
push
jge
mov
daa
xor
cmp
jae
xchg
mov
popa
jmp
mov
mov
out
lret
popa
cmp
mov
stc
push
or
mov
aam
jg
push
adc
mov
rclb
ret
sbb
test
add
mov
jg
rol
mov
fildll
jno
pop
mov
xchg
movsl
mov
popa
imul
fistps
arpl
jne
inc
fldt
jp
insl
mov
dec
lcall
popf
rep
mov
int
xchg
and
mov
add
cli
adc
iret
cmpsb
add
daa
jp
add
cli
call
enter
sub
test
inc
dec
call
cs
jmp
sub
ss
add
push
mov
in
sub
enter
or
adc
push
je
add
jmp
xchg
sub
and
out
jle
in
leave
ja
lea
push
sbbl
jno
mov
xchg
les
sub
lods
clc
cmp
cs
inc
fwait
lea
push
loop
aam
cwtl
xor
inc
push
idiv
scas
jo
ret
sub
jmp
inc
stc
mov
movsb
cmpsl
sbb
rol
or
ret
imul
ret
jbe
ret
call
cwtl
lods
orl
cmc
cmpsb
stc
sbb
and
movsl
into
ret
mov
js
loope
push
mov
push
in
add
outsb
icebp
sbb
cmp
leave
pop
mov
and
dec
out
pop
inc
jbe
mov
icebp
test
loop
jge
sbb
sub
xchg
add
push
mov
pop
test
dec
sbb
test
lods
cmp
mov
cltd
sbb
je
inc
loope
pop
adc
inc
imul
xchg
aad
hlt
adc
add
add
cmp
jne
sub
vpavgb
xchg
ret
jle
roll
dec
sub
sbbb
jle
sbb
je
lods
xchg
scas
and
outsl
dec
adc
or
fcmovnb
movsb
xchg
test
int3
mov
popl
test
sub
sbb
adc
pop
shrb
mov
or
mov
lea
xchg
jbe
or
stos
roll
cmp
and
addr16
adc
pusha
pop
mov
sti
sbb
jmp
cs
jmp
mov
insb
jecxz
dec
xlat
mov
xchg
mov
insl
or
inc
cwtl
xor
hlt
daa
sbb
cli
testl
rol
add
rorb
enter
cld
fdivr
es
pop
popf
cmp
lahf
les
fnsave
xor
sub
add
les
and
mov
test
mov
rolb
movsb
sti
mov
hlt
push
jae
popa
push
stc
xchg
and
xor
in
add
push
jp
cs
xor
mov
popa
mov
add
adc
out
repnz
jp
popf
mov
cwtl
mov
pop
aaa
push
or
pop
xor
dec
jecxz
das
sbb
push
les
jne
pop
jecxz
and
sub
add
jmp
cmp
js
mov
xor
push
xchg
push
mov
shrl
clc
addr16
xchg
fwait
cmp
cmp
fs
push
ljmp
out
popa
push
insb
shrl
pop
enter
lret
add
hlt
mov
rcll
cs
das
call
hlt
inc
mov
lcall
mov
int3
stos
adc
push
inc
push
ficomps
ja
in
or
or
sar
test
or
fidivs
jae
mov
out
adc
jecxz
push
fs
daa
mov
mov
les
mov
xchg
xorl
rorb
sbb
lcall
into
or
cmp
jbe
fwait
push
sbb
mulb
add
rdpmc
arpl
fimuls
xchg
mov
fidivrs
fs
mov
je
xchg
ljmp
mulb
sbb
aam
cmp
data16
lods
mov
sahf
test
sub
adc
test
dec
xchg
jl
mov
jmp
flds
mov
into
aaa
push
jecxz
sbb
pop
mov
repnz
hlt
cs
nop
je
pop
test
andl
loopne
cmp
nop
movsb
xchg
jno
imul
xor
call
cmp
popf
jge
or
xchg
mov
pop
popa
mov
mov
jmp
pusha
andl
xchg
pop
ljmp
sub
fcoml
ss
loop
or
lret
arpl
lret
mov
loope
jb
inc
imul
cmpsl
fsubl
xor
sub
cmp
xchg
sti
dec
mov
clc
sbb
mov
cmp
xchg
push
mov
adc
xor
push
mov
iret
sbb
fcmovb
repz
fists
aam
cmp
mov
je
movsl
mov
cmp
scas
sub
cli
mov
push
add
outsl
jbe
inc
push
xchg
test
ret
pop
jl
fisttps
dec
mov
jbe
mov
sbb
dec
rclb
in
and
xchg
push
aaa
jmp
jmp
mov
fdivrs
cmp
dec
sahf
stos
movsb
jne
je
inc
iret
jl
or
sbb
sub
and
sti
ss
add
cli
mov
pop
jg
jo
push
ss
and
and
xor
fistps
jns
hlt
es
andl
rcrb
mov
or
mov
dec
xor
aaa
cmp
adc
mov
addr16
pop
out
rolb
out
mov
jno
cmc
movb
sbb
jo
pop
fstpt
daa
ja
mov
popa
ljmp
add
leave
xchg
je
adcb
mov
inc
cmp
je
jno
fstl
addr16
cmp
xchg
stc
cs
xlat
pop
repz
insl
xchg
repnz
insl
dec
push
aad
lods
cmpsb
lcall
movsl
lret
dec
mov
popf
loope
and
inc
pop
ds
mov
dec
jns
jnp
call
paddd
mov
xchg
xchg
movsl
xor
in
mov
in
add
adc
shll
lret
inc
mov
mov
fsubrp
pop
mov
fsubs
das
cmpsl
push
jne
mov
and
inc
xchg
inc
mov
rorl
pop
push
shrl
sbbl
xchg
pop
dec
sub
hlt
cmc
movsl
pop
das
out
and
lret
sub
jp
sbb
add
cmp
lods
cmp
adc
pop
xor
pop
mov
iret
xchg
jae
popa
testb
sbb
or
fistl
pop
mov
or
out
add
neg
jecxz
pushf
xchg
push
pop
test
sub
fmulp
rorl
mov
sbb
push
or
outsl
push
xchg
scas
sub
mov
sbb
pop
inc
pop
jle
sahf
pop
aam
inc
js
jae
cmp
test
out
dec
pop
imul
int3
repnz
push
mov
push
or
stos
arpl
pushf
outsb
jge
jbe
pop
rcl
add
fs
int3
or
push
aas
call
push
ljmp
mov
mov
dec
adc
cmc
cmpsl
push
out
jg
xchg
sub
movsb
pop
sbb
cltd
jp
xor
sub
rclb
fisubrl
sub
inc
xor
mov
mov
test
cld
or
shl
jae
cmp
xor
xchg
add
adc
or
lcall
xor
cld
test
xor
imul
in
cld
pop
cmp
rorb
push
lea
lcall
movsl
pop
cmp
nop
shll
cs
mov
pop
into
jbe
jne
lret
jne
xor
mov
mov
enter
xchg
loop
lcall
xchg
cmpsb
xor
mov
cmpsb
jmp
scas
stc
loop
push
outsb
sbbb
in
mov
cmp
mov
stc
dec
sbb
mov
mov
xlat
mov
insl
adc
test
dec
jmp
inc
mov
xchg
adc
jmp
xor
in
mov
jo
add
xor
mulb
and
in
mov
xor
clc
test
mov
jno
out
repz
inc
mov
in
pop
scas
testl
bnd
insb
inc
fisubs
cmp
xchg
cmp
mov
and
enter
xchg
mov
out
xor
inc
shlb
out
dec
jbe
hlt
test
sub
cltd
cmpsb
adc
out
pop
pop
int
xor
dec
enter
in
cmp
or
adc
mov
cli
pop
outsb
sbb
adc
aaa
lods
lcall
das
and
dec
pop
ljmp
dec
int3
cmpsl
xchg
adc
inc
mov
lods
adcb
adc
cmp
sahf
cwtl
rorb
in
pop
je
mov
loopne
cmpsl
sti
dec
and
outsb
push
mov
stos
adc
adc
rcll
dec
dec
dec
mov
enter
stos
xchg
adc
jge
xchg
movsb
jecxz
mov
rol
test
in
insb
loop
dec
mov
popa
dec
mov
pop
aas
ds
inc
xchg
push
repnz
pop
mov
ja
push
addr16
lahf
cltd
std
cmp
push
dec
or
test
icebp
outsb
fwait
nop
add
clc
scas
out
or
pop
adc
push
loop
fistps
shrl
push
sti
lea
add
loopne
insl
bound
cs
sbb
sbb
leave
cmp
das
cmp
rol
cli
xchg
sahf
mull
inc
add
addr16
arpl
cld
std
mov
xchg
lds
mov
inc
xor
adc
pop
sub
out
cs
dec
sub
ret
add
or
mov
rorb
aam
add
aad
aam
pop
faddl
mull
in
xor
sbb
inc
ja
rorl
sbb
sahf
lds
push
out
add
imul
inc
push
mov
sub
push
std
xchg
ds
xchg
dec
sahf
pop
jne
movsb
scas
fst
sub
idivl
outsl
xor
fldenv
cld
push
cmp
or
movsl
mov
adc
data16
xchg
adc
inc
dec
xor
idivl
xchg
pop
testl
pop
aas
dec
xchg
pmulhw
xlat
popf
std
and
jle
mov
add
cmp
mov
dec
adc
movlps
dec
fs
adc
push
out
and
fwait
cli
mov
mov
mov
cmp
loop
jno
sub
adc
jle
fs
fs
dec
repz
jnp
arpl
mov
cmpsb
mov
int3
icebp
pushf
xor
sub
dec
mov
addb
lods
cld
das
jnp
push
xor
dec
push
daa
mov
stc
in
and
int
ficompl
xchg
scas
mov
aad
jmp
in
mov
mov
xor
in
dec
aad
pop
mov
inc
fld1
fs
cmp
sbb
cmp
cltd
mov
push
in
push
or
mov
xor
imul
xor
xchg
jae
hlt
xchg
dec
lds
xchg
stc
mov
gs
push
and
pop
js
js
int3
in
enter
jnp
jecxz
xchg
cwtl
adc
push
outsb
push
adc
ss
loopne
jns,pn
lea
bound
daa
xchg
loopne
sahf
fwait
pop
jecxz
mov
mov
imul
dec
int3
push
ljmp
jb
in
ja
arpl
insl
mov
jo
mov
xchg
adc
jl
test
lret
mov
shlb
jno
test
std
sbb
ljmp
jne
add
adc
lcall
divl
lods
out
test
cmp
addr16
sbb
testl
cmp
cmp
lret
adc
xchg
dec
mov
movsl
sbb
add
lods
test
das
pop
in
insb
in
xchg
push
out
insb
pop
aas
repz
fwait
shl
mov
das
jae
mov
aas
sub
push
ljmp
imul
jnp
xor
sub
mov
nop
cvtps2pi
adcl
mov
add
inc
addr16
sbb
jp
in
aad
andb
sahf
cmp
jae
push
pop
std
daa
add
jno
adc
jno
sbb
cltd
xchg
loopne
and
or
mov
and
jmp
shrb
stos
ret
call
into
mov
out
lcall
fidivrs
mov
sbb
add
mov
clc
popa
outsl
sbb
sub
ljmp
push
int
mov
in
and
int3
xchg
jp
xchg
into
mov
lea
hlt
push
inc
add
lcall
aam
sbb
and
gs
xchg
lock
pop
mov
ljmp
out
stc
in
pop
mov
xor
lea
dec
cmpb
xlat
and
leave
stos
push
sbbb
and
cld
jp
pop
push
addb
push
lock
mov
cs
push
mov
rcrl
pop
dec
jg
ljmp
dec
fbld
loop
mov
adc
jge
pop
jnp
decl
sub
push
xorb
or
test
loop
lcall
icebp
inc
inc
xor
and
adc
jae
fadds
scas
cltd
pop
pop
xor
xor
arpl
test
loopne
stc
ret
stos
push
ljmp
fmull
sbbl
and
and
hlt
cmpl
add
mov
popf
scas
sub
jle
es
push
mov
and
dec
stos
iret
mov
mov
push
mov
mov
scas
loope
lods
cmp
add
and
and
xor
xchg
xchg
jg
mov
push
push
and
mov
pop
fcmovnu
arpl
dec
aas
push
fisubs
loopne
sti
sbbb
cmp
mov
test
or
mov
cmp
xlat
xchg
ljmp
test
mov
test
imul
int3
mov
enter
fisttpll
mov
mov
imul
jns
leave
cmp
pop
jne
js
insb
push
fistps
loopnew
push
fcmovne
xchg
ja
loopne
sbb
or
cmpsw
repz
loopne
xchg
shlb
and
mov
pop
mov
test
xor
xor
mov
popf
out
cmp
cmp
xchg
cmp
cmp
jno
mov
add
mov
sub
mov
mov
and
mov
pop
push
lcall
xchg
add
adc
mul
dec
test
les
fmull
cmpsl
sahf
dec
std
call
out
and
lods
sub
inc
xchg
popf
in
mov
aad
mov
cld
mov
cli
jmp
stc
lahf
jl
xchg
sbb
xchg
mov
cmp
cli
scas
mov
jecxz
adc
dec
test
pop
cmp
sbb
pop
ljmp
movsb
xor
mov
pop
adc
lcall
outsl
cmc
fildl
stc
sbb
aad
xorl
push
fsubs
xchg
mov
shl
mov
mov
hlt
sbb
push
in
dec
pop
mov
inc
aas
push
cmp
lea
adc
movsl
sub
dec
leave
inc
inc
fnstenv
out
xor
cld
add
call
mov
cmp
jg
push
and
adcl
lret
cli
jbe
adc
loop
push
call
pop
inc
mov
or
cmp
mov
and
std
add
sub
push
insl
mov
scas
adc
xor
loope
push
imul
mov
wbinvd
jge
cmp
mov
stos
out
xchg
das
mov
jo
test
sbb
pop
add
inc
cli
sbb
mov
fisttpll
and
aam
mov
jl
insb
les
fimull
push
mov
or
ljmp
pop
and
dec
jnp
xor
xchg
sub
je
imul
dec
test
clc
push
pop
sub
mov
xchg
popa
out
idivb
fsubs
int
js
mov
rcrl
and
aam
aam
xchg
repz
mov
aaa
iret
popa
not
fnstenv
rcll
cmp
and
bound
lods
push
jg
fs
daa
adc
orb
jo
loope
insb
sbb
in
pusha
mov
popf
sub
inc
icebp
xor
std
jmp
cmp
cld
sub
mov
lcall
jne
mov
add
rcll
sub
adc
or
ljmp
outsb
jle
add
add
pop
cli
jg
cmc
inc
bound
pushl
dec
lea
xchg
aad
clc
repnz
loop
push
add
mov
dec
mov
xor
outsb
mov
pusha
sub
in
mov
into
sbb
aaa
jae
iret
add
cmp
sahf
popa
loop
and
movsl
pop
dec
sub
and
mov
cmp
xchg
sbb
into
pop
inc
mov
push
add
cltd
clc
cmp
dec
jge
mov
xchg
call
hlt
cld
mov
mov
mov
mov
mov
je
je
fbld
inc
jo
dec
ds
stos
test
or
jecxz
or
sbb
ret
cmp
xorl
scas
sbb
int3
sub
push
dec
es
mov
xor
sbb
xchg
or
mov
stos
and
loop
push
xor
jo
rcrb
jb
aad
dec
fists
pop
xor
outsb
imul
stos
xlat
lods
out
sbb
cmp
push
rorb
loope
test
sbb
sahf
add
jp
mov
push
sub
adc
pushf
push
mov
inc
mov
dec
cmc
test
cs
orb
stos
jo
clc
call
scas
adc
out
ljmp
scas
out
mov
cmp
repnz
pop
popa
repnz
dec
fldl
popa
int3
xchg
aaa
fs
cmc
test
pop
mov
test
sar
mov
in
jge
adc
dec
popf
sub
in
or
cmp
and
aad
push
cld
dec
scas
fcoms
lods
fwait
loopne
loope
jno
sahf
xor
pop
fimuls
add
icebp
mov
popl
or
and
mov
mov
xlat
sbb
mov
dec
dec
jecxz
inc
xor
mov
mov
inc
rorb
push
sti
xlat
dec
sub
and
jbe
and
mov
enter
out
mov
or
mov
por
mov
push
xchg
cmp
jecxz
or
pop
and
dec
cmc
and
je
jle
addr16
movsb
lock
sbb
fdivl
pop
xchg
pop
icebp
adc
xchg
inc
and
jae
addr16
or
and
xchg
dec
ret
mov
pop
xor
mov
aaa
push
xchg
iret
cmpsl
test
in
mov
push
js
xor
sbb
mov
mov
sbb
pusha
incb
xchg
mov
push
ret
fisubs
in
xchg
push
mov
pop
in
cpuid
gs
daa
adc
mov
scas
adc
inc
mov
mov
push
xchg
push
xor
hlt
cmpsb
sbb
es
rcrl
jp
popf
adc
inc
inc
imul
pop
xor
add
mov
mov
je
mov
sub
ds
scas
mov
xor
repz
cld
aad
gs
push
adc
rorl
mov
push
pop
ret
xor
lret
push
cmp
xchg
hlt
sbb
movsb
adc
and
push
shll
rorb
xchg
cld
daa
je
test
pop
mov
lcall
adc
mov
sub
loopne
int
test
lock
mov
imul
mov
ret
ret
xchg
in
jno
cmp
mov
sbb
rorl
add
test
movsl
mov
test
xchg
les
and
mov
or
dec
loopne
out
repz
mov
cld
sbb
and
mov
inc
pusha
push
ds
in
stc
ret
scas
lock
mov
data16
out
in
lahf
scas
fistpll
sbb
sti
cmp
sbb
mov
sbb
mov
and
out
shlb
outsl
rcll
ljmp
inc
fsubl
pop
cmp
jle
dec
out
cli
mov
or
sar
or
in
push
cmp
imul
inc
jge
sub
jo
jbe
repz
lods
mov
dec
outsl
out
cmp
add
push
pop
jbe
arpl
mov
mov
test
fcmovne
pop
add
pop
add
aam
gs
inc
in
push
fdivrs
pop
jae
cmc
push
imul
mov
aas
jbe
sub
test
jl
xchg
rolb
sbb
xor
mov
addb
in
and
mov
add
stc
into
jp
add
in
mov
adc
and
sbb
cmp
sbb
popf
push
loope
mov
jmp
adc
xchg
ret
or
jns
fiadds
int
mov
jne
out
xor
pop
mov
mov
es
mov
repnz
lods
add
lahf
std
sub
mov
add
sti
clc
xchg
add
pop
nop
sbb
jmp
mov
sbb
in
sbb
mov
mov
push
adc
scas
mov
mov
mov
cli
popf
sbb
shrb
pop
in
insb
addl
cmpsl
add
dec
jp
add
dec
sbb
mov
lcall
inc
sbb
movsl
mov
in
push
clc
in
mov
or
cwtl
and
sbb
jmp
clc
pushf
loope
ss
out
cmpsl
pop
add
jne
or
push
and
push
push
and
notb
dec
lods
sbb
add
ss
inc
repz
sub
push
sub
jmp
push
mov
jno
jg
syscall
inc
or
push
mov
into
lcall
insl
mov
dec
add
inc
imul
pop
les
ss
popf
push
andl
xchg
dec
push
ja
lret
cmp
sub
xor
dec
and
xor
mov
mov
imul
ljmp
add
ffree
cli
or
adc
mov
js
jmp
fwait
mulb
push
stc
in
test
pop
testb
cmp
fwait
sahf
dec
jg
inc
out
fs
int
scas
mov
xor
xchg
and
mov
mov
or
nop
mov
out
jg
insb
or
add
stos
mov
xor
mov
js
push
insb
jl
lods
sbb
mov
clc
lret
loope
mov
ret
xor
jmp
mov
test
insl
push
scas
xlat
call
or
jmp
push
movsb
adc
test
adc
roll
cmp
stc
xorl
sub
xlat
add
push
ja
out
test
push
scas
xchg
inc
sub
sti
ja
xchg
cltd
test
pop
cli
inc
in
xor
push
clc
or
stos
fnstsw
test
daa
inc
xor
sbb
inc
cmp
ficoml
or
push
push
leave
jl
lahf
clc
mov
mov
shll
mov
enter
mov
mov
or
dec
sar
lock
cmpsl
ja
test
add
pop
rol
inc
mov
stos
addl
xchg
sub
bound
inc
fdivrs
xchg
jno
jle
push
in
out
jnp
nop
int
push
cmp
popa
jmp
das
sub
push
push
add
out
push
mov
out
lret
ret
mov
mov
xchg
pop
idivl
fwait
xchg
xchg
xchg
sbb
jns
cld
test
cli
xchg
sub
pop
sarl
xchg
sbb
push
arpl
je
or
jno
fisttps
cmc
insl
call
aad
imul
xor
aas
movsl
cld
mov
mov
sarb
xchg
insl
adc
std
lcall
sbb
in
jbe
aas
test
sbb
fnsave
aad
and
and
out
fdiv
cmpsb
sbb
std
fistpl
ljmp
sbb
pop
insb
repz
ret
pop
jns
fs
and
jg
out
test
leave
sbb
mov
pop
lds
sbb
lock
rclb
cmp
cmp
cli
jno
test
pop
xchg
jns
idiv
dec
xor
popa
pop
out
imul
test
addr16
mov
pop
cmc
mov
jne
cmpsb
push
es
xchg
lods
sub
les
in
inc
in
out
stc
push
lahf
xchg
ja
mov
push
cmpsb
mov
mov
enter
lahf
mov
negb
out
out
mov
or
jmp
sbb
jle
dec
pusha
fistpll
fs
xor
hlt
ror
push
mov
cld
or
push
jle
loop
and
jne
lock
mov
mul
dec
aas
sub
dec
mov
mov
stos
inc
popf
inc
pop
call
lahf
fsubrs
mov
inc
aad
pop
inc
outsl
mov
and
xchg
ucomiss
cmp
or
mov
cmp
jge
or
xchg
fdivrs
test
pop
and
movsl
and
popa
cmp
pop
loopne
xor
test
and
ret
iret
in
repz
loop
pop
cmp
cmpsl
push
mov
rorb
push
adc
aaa
mov
add
lds
add
mov
xlat
jo
das
push
pop
dec
ds
push
icebp
dec
dec
jns
fadd
movsl
adc
outsl
sahf
pop
and
sub
xor
shrl
push
push
shrd
cmp
add
and
inc
outsb
xchg
xor
sub
sub
mov
push
test
mov
mov
xchg
sbb
stos
iret
enter
add
mov
fdivl
inc
mov
or
pop
pop
in
mov
lcall
adc
lock
notl
pop
outsl
clc
ja
and
enter
rcrl
jge
hlt
or
jbe
cmpsl
lret
jns
lcall
in
nop
out
stos
mov
sarb
inc
jne
ret
mulb
aad
pop
xor
ja
xchg
adc
mov
xor
pop
xchg
push
mov
orl
inc
mov
xchg
aaa
mov
mov
fsubrs
scas
jne
cmpsb
sahf
mov
mov
xchg
adc
push
pusha
sbb
icebp
les
inc
fwait
imul
aaa
bound
xchg
orb
xchg
loope
sidtl
pushf
cs
mov
andb
sub
or
lock
incb
jg
imul
out
rcrl
aam
adc
xchg
fstpl
rorl
ret
sbb
mov
xchg
ss
dec
pop
inc
mov
mov
stos
push
das
cmp
push
out
sub
jne
aad
jmp
or
add
cmp
jnp
lret
std
outsl
fstl
add
jae
pop
xor
or
pop
push
mov
cmp
dec
jp
stos
add
or
mov
push
cmc
pushf
push
loopne
mov
sub
sub
push
ljmp
inc
inc
xchg
imul
out
push
ss
mov
lcall
sub
lods
cmp
addl
pop
dec
jns
jbe
xor
add
rcll
loope
inc
rol
add
pop
mov
jae
pop
cmp
pusha
pop
cmp
cltd
dec
test
mov
dec
pusha
adc
cmp
enter
mov
xchg
cmp
adc
out
xchg
hlt
orl
mov
or
dec
lds
mov
lret
fstpt
xorl
add
jb
mov
sti
lock
ja
faddl
lods
push
jne
in
jb
sbb
cli
dec
mov
jae
xor
movsl
push
scas
sbb
outsl
sbb
mov
sub
cmp
pop
push
mov
sub
mov
mov
sbb
jbe
in
cmp
push
pusha
and
pop
lea
xor
dec
mov
or
and
and
jle
cmp
pop
mov
or
in
stos
hlt
gs
mov
fnsave
sbb
aad
jnp
push
mov
xchg
out
cwtl
mov
jo
xor
sbbb
add
push
push
orl
stos
rcr
bnd
lock
dec
sarb
xor
repz
xchg
mov
and
movsb
shr
andb
mov
ret
xchg
pop
repz
sbb
sbb
sahf
push
mov
ss
pusha
divl
sub
push
mov
push
std
ss
scas
push
test
inc
push
pusha
mov
fbld
mov
sbb
and
add
and
sub
push
fisubl
lret
je
popfw
test
scas
push
test
jb
xor
daa
ret
sub
push
push
xor
bound
adc
mov
cmc
enter
rcrb
add
xchg
lret
mov
pop
arpl
ret
jnp
addr16
fidivrs
mov
or
fsub
je
loopne
add
pop
push
mov
mov
mov
mov
sub
mov
insl
and
cmc
outsl
out
pop
xchg
je
hlt
mov
cs
mov
xor
and
or
imul
add
xchg
push
push
mov
push
dec
cld
mov
ljmp
leave
and
pop
scas
xchg
jmp
mov
clc
in
int3
mov
popl
pop
lods
mov
add
cs
pop
fwait
pusha
sbb
cmp
push
cmp
test
mov
lret
mov
jae
pop
decb
mov
xchg
shl
mov
in
jmp
jle
mov
stc
das
cwtl
mov
inc
movsb
lret
enter
je
jae
add
push
inc
ss
cmp
jb
sbb
cld
loope
std
test
mov
pop
jg
daa
pop
mov
push
and
lret
push
mov
xchg
addr16
xor
rcr
and
cmc
push
inc
int
mov
xor
jae
in
lahf
scas
out
adc
daa
test
xor
cmp
pop
jg
sbb
xor
into
lret
gs
rcrb
out
pop
push
test
xchg
mull
test
and
add
mov
mov
sub
pop
sbb
xchg
pop
mov
xlat
pop
icebp
cmpsl
jb
push
push
pop
xor
sti
mov
movsb
lods
mov
jbe
cmc
mov
or
call
inc
nop
sahf
in
repz
dec
in
or
dec
test
cwtl
mov
mov
fnstcw
out
lahf
addl
jle
jecxz,pn
xchg
in
push
xor
and
mov
fidivrs
adc
mov
js
mov
fwait
cld
or
inc
dec
cmc
out
std
stos
push
repnz
std
dec
jnp
mov
sbb
push
xchg
in
sub
jne
insb
mov
lods
mov
cmpl
popa
stc
mov
call
pop
dec
scas
xor
dec
add
shrl
call
push
lods
jp
ds
sub
les
xchg
inc
and
mov
stc
pop
cmp
lds
loope
int3
into
ret
xchg
movsb
xchg
push
push
mov
dec
imul
pop
dec
mov
xchg
insb
push
xor
arpl
adc
or
or
adcl
pop
in
cmp
pop
int
and
pop
pop
xchg
and
ret
add
fiadds
lret
pop
sti
jecxz
mov
pop
pusha
data16
orb
cmpsl
sub
cmp
mov
add
and
gs
push
out
ljmp
bound
xor
out
ljmp
xor
int3
aaa
cmp
aaa
aaa
dec
ds
ror
pusha
mov
xor
loope
jle
lods
call
mov
cmpsb
mov
mov
add
addr16
cs
xchg
xchg
popf
fdivrl
inc
in
pusha
inc
jo
mov
mov
adc
mov
mov
in
outsb
sbb
jo
mov
stos
scas
inc
xor
jnp
mov
adc
incl
sub
push
cld
inc
ret
popa
fs
pop
mov
xor
add
add
je
mov
pop
jl
mov
lods
cmp
lret
xor
mov
shl
test
jno
aaa
mov
or
mov
mov
mov
imul
jne
mov
add
push
xchg
push
jno
mov
mov
push
fcoms
ss
inc
aaa
push
loopne
mov
in
arpl
fcmovb
imul
mov
movsb
pop
out
sti
clc
ret
mov
push
mov
sub
xchg
pop
mov
mov
in
cwtl
pop
std
movsb
mov
jb
gs
add
mov
das
hlt
rcrb
ljmp
iret
loopne
mov
xchg
add
rclb
sbb
and
sti
lcall
xor
xor
sarb
adc
test
pop
cmp
clc
or
jle
dec
ret
insb
fistps
popf
inc
jge
mov
mov
movsb
xchg
add
out
jecxz
mov
dec
ds
loopne
inc
sahf
rorb
es
jne
pop
mov
insb
or
packuswb
push
pop
pusha
and
mov
jp
mov
adc
into
or
dec
stos
out
loope
xchg
subl
cmp
lret
bound
xchg
dec
lock
call
dec
cltd
jno
in
xchg
ja
add
lock
orb
mov
pop
popf
and
fmuls
test
lods
sbb
int
arpl
xlat
or
xchg
sub
lret
subl
or
jno
add
in
jmp
lret
push
add
loopne
movsl
add
or
or
pop
cltd
adc
popf
testb
ja
lret
jne
fs
pop
mov
cmp
inc
cmp
adc
and
mov
add
hlt
sahf
outsb
lret
xchg
push
push
xchg
arpl
dec
push
and
cld
jmp
mov
das
inc
fcmovnb
enter
pop
and
mov
or
or
and
sub
cmpsb
xchg
pop
cwtl
and
mov
mov
xor
insl
xor
adc
mov
push
scas
or
repz
fwait
jg
add
add
mov
xor
cmpl
sbb
xor
ds
push
mov
add
fdivrs
scas
arpl
mov
sbb
orb
in
and
stos
add
sbb
out
insb
cmp
out
cmpsl
pop
lret
loopne
in
pop
rcr
pop
movsl
lds
sub
sbb
int
rorl
xchg
stos
adc
pop
lea
or
mov
mov
lahf
loopne
mov
adc
call
lcall
cs
jno
mov
rolb
add
addr16
nop
push
push
mov
jo
in
xchg
jl
test
call
cmp
in
lods
scas
in
in
push
icebp
sbb
int3
out
jnp
imul
xchg
vmovhlps
sbb
int3
jg
repz
push
cld
ja
lret
mov
jns
mov
inc
lock
mov
jle
mov
into
mov
push
loop
push
adc
scas
out
pop
pop
sahf
aaa
sub
xchg
jecxz
rcr
repz
lods
cmp
test
cmp
inc
dec
pusha
lret
xor
inc
mov
nop
es
call
cltd
sub
roll
adc
or
cmp
push
lret
mov
xor
cmpsb
pop
cld
add
sbb
stc
xor
xor
leave
into
roll
cmp
lret
mov
dec
gs
test
pop
mov
inc
loope
aam
scas
imul
adc
test
mov
cmc
hlt
dec
cmpsb
pop
repz
loop
test
test
das
adc
cli
in
mov
mov
and
push
call
pop
or
push
lods
sti
sub
aad
or
dec
push
int
sti
dec
lods
mov
ja
xchg
rclb
ret
out
jno
arpl
loope
jb
cmpsb
sti
test
fadd
insl
cld
pop
add
jns
jae
or
xor
xor
outsb
stc
arpl
les
jmp
mov
gs
loope
pop
daa
rol
push
inc
jno
inc
xor
nop
aad
mov
push
call
pop
cmpsb
pop
nop
popa
sub
push
push
or
cmpsb
xor
or
sbb
cmpb
lods
out
jmp
fnstsw
push
jmp
mov
out
stc
push
shll
pop
cwtl
push
mov
insl
enter
mov
xchg
cmp
daa
xor
ja
xchg
loop
hlt
ret
stos
jg
in
push
mov
mov
in
shll
jno
cmp
mov
push
dec
jb
sbb
and
decl
and
out
mov
add
sbb
or
inc
clc
cmp
mov
jae
jecxz
sbb
sarl
in
cs
bound
fnstcw
jnp
int3
or
bound
adc
imul
sub
push
stos
sub
inc
ror
ficoms
or
xchg
out
add
inc
mov
adc
push
icebp
cmp
push
pop
lret
js
pop
loop
popf
out
pop
jae
inc
mov
sbb
loope
clc
hlt
fldt
jge
stos
das
je
sbb
inc
add
mov
pop
jb
mov
jne
push
stc
xor
popa
inc
jle
jae
gs
rolb
mov
push
push
jne
fwait
stos
aas
repnz
rorl
or
jp
sti
das
push
int3
mov
loopne
cmp
cltd
inc
cmp
cmp
push
push
cli
lahf
xchg
inc
in
or
cli
imul
in
cmc
sub
int
or
mov
pusha
scas
out
adc
ja
mov
adc
rol
jmp
shl
loop
lret
iret
jns
mov
aas
adcb
in
mov
sub
push
movsb
mov
mov
syscall
lds
int3
lods
mov
push
add
mov
jmp
call
dec
shll
out
pop
cmp
inc
mov
or
leave
cmp
mov
pop
dec
or
call
xor
cld
inc
cmp
jmp
pop
sarl
sbb
js
jb
scas
cmpsb
mov
push
jge
sbbb
cltd
cmp
fildl
div
adc
lahf
pop
popf
outsb
push
mov
mov
sub
fistl
pop
ljmp
jno
xchg
cwtl
pop
xlat
mov
popa
jl
or
lods
ret
adc
leave
sub
xlat
and
add
nop
add
pusha
cmp
mov
clc
mov
icebp
test
popa
outsb
insl
pop
fisubs
dec
aas
sahf
jge
sbb
and
xor
sahf
xchg
in
or
mov
mov
and
or
mov
sub
leave
scas
mov
xchg
fcoml
jmp
xchg
cmp
pop
mov
jne
mov
rorl
fcom
es
call
loope
xor
stos
movsb
cmp
sarl
sbb
jno
fnstcw
iret
push
mov
adc
sbb
fidivrs
mov
mov
adc
pop
cs
sti
cs
mov
jp
mov
mov
lahf
cmpsb
add
loope
jb
ficompl
out
xchg
sub
jae
xlat
iret
mov
push
jae
push
add
hlt
adc
adc
inc
mov
and
xchg
push
fcoms
popa
pop
adc
loopne
xchg
sbbb
xchg
outsl
pop
iret
repz
sahf
jg
shl
mov
or
jge
mov
xchg
pop
inc
pop
pop
pop
loop
mov
inc
jg
sarl
dec
add
mov
adc
ret
jl
jp
movsb
and
lock
sti
pop
test
ret
mov
push
clc
cli
xchg
mov
pusha
enter
adc
rcl
loop
pushf
movsl
mov
and
stos
lret
jge
sub
fnstsw
pop
int3
jl
pushf
dec
movsl
xchg
int3
in
sbb
outsb
addr16
or
cltd
jno
fmuls
outsb
fadds
arpl
cmp
xlat
loopne
xlat
clc
mov
push
fldt
pop
pop
movsl
cltd
dec
lahf
out
aas
call
fildl
cltd
je
daa
loop
sub
notl
repnz
test
jle
inc
xor
mov
ret
inc
stc
xor
sti
sub
mov
dec
repz
pop
jp
adc
scas
xor
popa
mov
lods
sahf
mov
lcall
arpl
test
sub
js
fwait
leave
lods
pop
and
inc
mov
fstl
les
mov
jle
mov
cmp
test
adc
cmp
lret
mov
push
ja
jl
cwtl
testl
in
pop
int
sub
hlt
fidivl
mov
mov
sub
mov
or
add
push
dec
outsl
lock
icebp
xor
pop
insl
pop
lret
mov
push
pop
xchg
adc
call
jnp
and
lcall
shr
bound
adc
inc
mov
mov
scas
mov
leave
in
xor
cmpsl
daa
into
pusha
repnz
xchg
jo
int3
and
mov
pop
xor
test
mov
out
mov
cmp
cs
mov
jb
jns
repnz
push
fsubs
dec
loope
add
sbbb
inc
push
jl
mov
ret
fmuls
sbb
sbb
ljmp
add
in
sub
sbb
lahf
int3
or
mov
aaa
add
test
mov
mov
cmp
mov
xor
and
les
mov
fsubs
clc
or
dec
loope
push
cmp
arpl
outsl
pop
push
fcmovnbe
cmp
lea
popa
insl
std
loopne
jmp
add
fiadds
repz
mov
inc
imul
decl
leave
mov
in
and
aas
adc
jo
fiadds
neg
pop
sub
sbbb
mov
ljmp
xchg
negb
or
inc
lahf
clc
inc
or
push
adc
xchg
sub
pushf
mov
sbb
cli
dec
repz
jbe
xor
lds
cmp
cmp
outsb
loope
insl
outsl
movsl
insl
xchg
imull
or
insl
pop
fdivrl
out
mov
mov
or
scas
and
mov
lods
ss
lods
pop
xor
leave
mov
sub
fs
sub
imul
jno
mov
test
dec
or
xor
cmpsl
xchg
jns
sbb
notb
in
addb
ror
ret
add
cmc
mov
add
or
jo
xor
xor
mull
add
xor
orb
dec
leave
out
imul
and
cmpsb
mov
mov
xor
es
jle
mov
pop
mov
xor
mov
outsl
push
xor
adc
cwtl
inc
pop
inc
pop
shld
in
lcall
ljmp
jno
jp
mov
scas
xchg
sub
xchg
mov
movsb
out
scas
lahf
adc
fnstenv
jg
jne
pop
in
adc
popa
jg
gs
jbe
icebp
add
and
pop
daa
imul
add
sbb
sub
iret
cli
pop
mov
cmp
xchg
mov
out
int
int
stos
cmp
jb
movl
inc
cmp
adc
sbb
or
out
push
out
pop
sub
fcomp
mov
jle
icebp
or
in
inc
cltd
in
push
jne
mov
sub
in
test
xchg
pop
add
out
shufps
dec
mov
cmp
or
sbb
add
sbb
out
cs
jl
lods
adc
fadds
notl
push
jns
jbe
cmpsb
push
gs
fildll
loop
icebp
mov
sbb
sbb
and
subb
sbb
push
out
neg
mov
jns
outsl
ja
and
daa
out
int
xor
loop
aaa
pop
divb
cltd
sub
scas
ret
jb
jo
or
lahf
stos
sbb
mov
mov
popa
cmp
xchg
dec
cmp
jge
out
bound
add
or
mov
insl
xchg
out
les
push
fs
out
mov
jg
pop
sub
iret
or
or
mov
faddl
mov
in
gs
and
dec
inc
add
call
inc
xlat
mov
jb
or
aad
sbb
nop
sbb
jle
sub
das
xor
push
aas
aad
pop
ja
cmp
add
xlat
fstpt
mov
xor
push
ds
fdivrs
cmp
jnp
sbb
push
pminub
subl
dec
call
imul
sub
mov
sub
fs
lret
jmp
fsubrs
xlat
jne
fidivs
mov
loop
ja
mov
sbbl
sub
dec
cmp
sar
imulb
push
es
sub
dec
sbb
popfw
adc
sub
lret
xchg
sarl
mov
inc
insl
sub
loop
orl
ljmp
iret
es
sub
and
lcall
or
adc
popa
push
or
out
lods
imul
jmp
in
cltd
sub
xorb
pop
divb
scas
mov
dec
scas
jg
jp
add
sbb
stc
sbb
popa
cmp
cltd
mov
out
mov
cmc
or
loope
cmp
inc
add
lea
add
or
xchg
inc
adc
add
sub
jp
fdivs
jg
sub
add
cmp
cs
dec
xchg
xchg
pop
out
loope
ret
pusha
mov
cmpsl
fsub
push
mov
xor
clc
xor
jle
js
popf
lret
pop
xor
repz
decl
and
xchg
popf
cmp
test
pop
inc
jl
test
leave
xor
test
test
xor
sbb
lods
jno
adc
fidivl
imul
data16
test
and
adc
dec
add
cmp
in
out
xchg
mov
loope
sbb
cmp
stos
mov
mov
xchg
enter
or
push
add
outsl
mov
stos
dec
cmp
cmp
dec
lret
pop
ss
int3
sbb
imul
cmc
sbb
aam
stos
loopne
aaa
in
adc
loop
and
in
addb
sahf
lods
xchg
and
mov
daa
and
lret
cwtl
or
les
lahf
mov
lds
push
out
stc
js
mov
or
ja
sbb
fidivrl
push
xor
cmc
mov
or
ret
jns
sub
into
cli
fs
pop
dec
fnclex
rorb
push
loopne
mov
scas
in
sahf
xor
into
xor
cwtl
mov
jl
sbb
pusha
mov
xchg
int3
popa
aam
rcrb
stc
xor
inc
std
mov
dec
inc
sub
sbb
and
enter
sahf
fidivl
push
jmp
mov
icebp
dec
incb
xchg
push
lea
out
pop
mov
xor
fxch
mov
in
cmp
rolb
jle
xchg
or
mov
dec
dec
push
stos
push
js
pop
cmp
insb
xchg
xchg
pop
loopne
mov
fmull
push
cwtl
sarl
lahf
out
js
mov
loopne
sbb
jo
xchg
test
aas
push
jno
pop
xor
dec
mull
in
stos
or
ror
mov
adc
and
loop
int
pop
jle
stc
add
mov
pop
je
movsb
gs
pop
dec
fimull
imul
xor
daa
mov
int
xchg
xor
fildl
sub
cmp
andl
arpl
jno
push
jnp
add
pop
or
das
xchg
jbe
or
lods
inc
es
fwait
inc
cmp
dec
hlt
xchg
mov
je
or
lcall
push
popa
xor
adc
fcomps
push
mov
cmp
dec
sbb
add
pop
pop
mov
adc
add
rorl
addb
and
jle
mov
outsb
mov
notb
cmc
mov
or
mov
mov
aas
cli
or
inc
sarb
xchg
mov
test
dec
xor
and
mov
call
pop
aaa
mov
rclb
out
repz
xor
lods
add
or
into
int
cli
jne
mov
adc
imul
sbb
sahf
dec
dec
shl
jge
enter
mov
shll
mov
xor
cli
and
or
adc
out
mov
cmp
nop
fld
int3
dec
bound
sbb
push
push
jg
pand
xchg
jns
cmp
out
mov
cli
inc
push
repz
sbb
lods
push
dec
adc
mov
mov
cmp
mov
and
lret
repz
sahf
rcll
lret
lret
ret
icebp
stos
test
fucomi
mov
lds
test
fstpt
imul
mov
jb
adc
xchg
orl
mov
das
xchg
mov
lret
fstpl
xchg
mov
movb
dec
lds
pop
sti
inc
test
cs
and
int
clc
movups
xor
jno
in
ficompl
and
adc
xchg
dec
sub
mov
je
out
aaa
mov
movsb
imul
test
or
inc
sbb
or
mov
xorb
adc
rolb
mov
mov
es
adc
jl
push
push
in
and
adcl
sub
movsb
pop
mov
fistpll
or
lea
arpl
cmp
mov
jns
add
fildl
adc
inc
lret
or
cmp
xchg
roll
push
cld
push
or
lahf
hlt
aas
ja
adc
inc
mov
mov
sti
sub
loope
stc
bswap
jmp
lea
out
fdivl
test
insl
jns
out
jno
push
inc
orb
rcrl
pop
inc
imul
cli
sbb
jmp
stos
insb
jbe
xchg
and
js
inc
sub
mov
mov
cli
pop
loope
test
ja
cmp
jg
sub
sbb
jg
shlb
repnz
add
rorb
cli
jo
scas
lret
or
mov
jnp
mov
or
rolb
dec
dec
sbb
daa
inc
push
pop
push
sahf
push
and
mov
aas
jmp
sbb
jg
fbstp
mov
outsb
xchg
sbb
rclb
push
or
push
dec
daa
popa
fisubl
popf
lcall
sbbb
jne
jbe
sarb
sbb
cltd
sub
adc
pop
popa
and
jge
xchg
dec
add
pop
or
and
push
push
or
push
and
push
stos
in
pop
sbb
pop
and
mov
sbb
int
jno,pn
mov
xchg
mov
cmc
mov
sbb
mov
loop
xchg
cmp
shrb
and
dec
xchg
lods
lahf
push
orl
lds
push
ffreep
psubsw
int
dec
pop
jbe
mov
jecxz
lea
jbe
adc
ret
xchg
fnsave
pop
outsl
dec
aam
in
movsb
xchg
les
and
xor
out
int
call
xchg
sub
sarl
mov
mov
inc
jp
inc
mov
inc
adc
xor
or
popf
mov
idivb
mov
data16
mov
xor
dec
mov
testl
xor
int3
icebp
sub
xchg
aam
repz
add
loop
inc
out
push
jmp
cmp
leave
out
mov
mov
int
dec
jge
out
out
movzbl
pop
fwait
movsb
add
out
adc
mov
sbb
push
and
push
shr
add
ljmp
sub
cmp
and
dec
push
roll
mov
aam
mov
xor
adc
notl
cmp
pop
pop
cmp
sub
push
movsb
data16
fwait
lds
arpl
mov
iret
imul
xor
in
jne
shrb
pop
jno
gs
pop
inc
jae
jbe
mul
mov
in
decb
cli
jns
xor
jbe
inc
mov
sbb
cmpsl
or
dec
data16
pop
hlt
and
xchg
orl
push
dec
int3
mov
cmc
aaa
leave
push
sbb
sahf
stc
push
pop
add
stos
cmp
xor
pushl
push
cmp
stc
nop
xor
outsl
mov
or
mov
xor
outsb
sbbb
adc
iret
mov
pop
loop,pn
or
xchg
push
stc
lret
mov
nop
push
and
das
stc
dec
cli
inc
dec
data16
mov
mov
test
notb
xchg
dec
or
sar
adc
sub
sbb
cmp
out
out
aad
das
xlat
scas
sub
aaa
sbb
fwait
push
loope
lret
test
pop
xor
add
test
lds
iret
sahf
jns
sub
add
or
test
push
dec
and
pop
dec
mov
test
daa
xor
jle
add
std
fidivrs
mov
std
out
shlb
movsl
daa
mov
inc
cltd
dec
push
stc
xor
addb
pop
in
and
mov
push
fucomip
mov
outsb
jae
cmp
jne
mov
cmp
loopne
out
jp
lret
mov
adc
mov
imul
cmpsb
and
fidivrs
mov
cwtl
scas
sub
cmp
clc
out
pop
mov
pop
adc
aaa
pusha
scas
repz
push
mulb
rclb
xor
jbe
cmp
pop
out
xorl
inc
stos
std
mov
cmp
hlt
mov
jb
leave
loopne
loope
mov
inc
je
cmp
mov
loop
out
jne
add
sub
outsl
stos
mov
pop
inc
or
roll
cmp
push
repz
lcall
outsl
outsl
std
jbe
out
sbbl
out
addb
rcl
inc
or
aaa
mov
cmc
cmpsb
std
or
cmc
add
aas
and
xlat
mov
lods
clc
sub
inc
push
mov
jle
dec
xchg
sub
faddl
cs
je
out
xor
sbb
es
dec
sub
cmp
rclb
test
test
cmpsb
outsb
hlt
add
sar
cwtl
cli
adc
and
in
stc
nop
popf
cmp
cli
adc
ljmp
and
ja
mov
dec
stc
movsl
testb
mov
or
inc
scas
lret
lret
dec
dec
push
cmp
imul
inc
daa
jg
fwait
sub
repz
je
cli
sbb
sbb
lock
jae
jns
enter
std
lret
outsl
push
lret
rcll
icebp
test
cmc
or
cli
mov
xchg
xor
jno
fcompl
sbb
fldcw
test
push
dec
dec
mov
push
add
orl
pop
jne
jno
mov
pop
ret
scas
iret
add
int
xchg
sbb
daa
sub
xchg
cmp
push
flds
and
mov
test
jns
jno
xchg
in
pop
and
jb
mov
push
addr16
pushf
fsubrl
mov
jl
lds
inc
cli
lods
data16
sub
jecxz
test
mov
mov
add
and
mov
ret
dec
cmpb
into
lods
pop
push
jg
xchg
aad
out
sub
testl
movsl
les
jno
cld
mov
lock
arpl
scas
sti
bound
mov
ret
add
xchg
pop
mov
mov
sbb
or
push
pop
cli
push
dec
adc
xchg
mov
insl
fdecstp
sbb
xchg
scas
pusha
push
aaa
add
push
out
jp
jne
add
push
cmpl
pop
and
loope
bound
std
jnp
lcall
test
sbb
pop
mov
in
mov
xor
mov
push
cmp
pop
lods
pop
dec
out
add
popa
mov
mov
adcb
ret
mov
jbe
add
cmp
lcall
xlat
int
ss
data16
sub
movsb
mov
pop
adcb
jecxz
dec
fwait
int
push
fs
mov
lahf
mov
add
pop
inc
jg,pn
jl
mov
fstl
ss
and
mov
insb
mov
popa
int
aaa
lea
pop
mov
lods
loop
sbb
sub
pop
rclb
add
dec
sbb
stos
clc
sub
or
jge
push
push
mov
inc
cwtl
jns
and
scas
sahf
dec
call
insb
cmp
dec
cwtl
movsb
and
mov
lcall
ret
jge
xor
mov
ljmp
sbb
out
movsl
lcall
mov
mov
outsb
dec
xchg
pop
cmp
push
pop
push
adcl
mov
jns
and
in
sarl
mov
popl
dec
lock
inc
clc
jecxz
cld
push
popf
fmulp
cmpsb
and
jecxz
push
jmp
or
pop
and
rclb
and
sti
adc
vandps
dec
lock
jmp
jb
jo
dec
imul
cli
mov
fsubl
int
nop
push
cmp
sub
cld
mov
out
das
shlb
pop
lret
dec
cmp
push
pushf
stos
movsb
pop
adc
sbb
decb
jp
dec
mov
pop
jb
sub
sub
cmp
lret
pop
nop
scas
int
or
fildl
push
les
in
and
fldcw
adc
sbbl
inc
sbb
jp
xchg
add
les
mov
inc
mov
gs
mov
cld
push
sbb
mov
sbb
repnz
sub
test
mov
dec
pop
mov
fstps
lea
ljmp
test
orb
js
js
xchg
adc
xor
mov
addr16
pop
enter
push
mov
xor
leave
sarb
jecxz
mov
jb
inc
roll
jecxz
or
mov
lods
mov
pop
mov
js
cmp
add
xor
popa
std
sub
mov
and
cmc
jno
or
mov
adc
cs
push
mov
mov
cmp
fwait
dec
je
dec
jae
mov
enter
bound
lret
inc
cmc
push
js
pop
push
jle
scas
test
test
jns
mov
sahf
addr16
jecxz
repz
test
push
dec
sti
lret
inc
xor
dec
test
sbb
pop
xor
pop
test
cmp
adc
out
pop
in
rorl
jge
test
mov
xlat
add
pop
pop
or
add
emms
mov
inc
mov
mov
add
in
cmpb
rcll
sti
imul
ds
enter
xchg
sarl
lds
ss
adc
dec
into
loope
push
sub
into
mov
rclb
xchg
jo
xchg
insl
adc
adc
adc
pop
mov
push
dec
scas
repnz
pop
mov
std
cmp
push
out
jg
ret
repz
stos
mov
rolb
push
jns
jno
push
cmp
add
aad
jns
lock
insl
and
inc
and
or
cmpsb
mov
push
loope
fbstp
push
push
test
fists
clc
mov
popa
aas
aas
popf
mov
sub
ret
ss
cmp
pusha
and
inc
rcll
shlb
test
adc
stos
aas
sub
nop
iret
push
insl
mov
dec
jae
fyl2xp1
test
in
sub
cmp
or
dec
imull
sub
inc
cmp
insl
cmp
lret
aaa
rol
mov
outsl
ret
ss
cmp
aas
xchg
dec
push
pop
mov
push
jmp
cmp
lds
adc
int
jae
inc
ficompl
and
adc
mov
cmpsb
sbb
jg
add
add
lock
xor
stos
add
ss
add
into
mov
mov
mov
call
nop
and
mov
xorb
dec
ja
inc
adc
mov
aaa
push
jp
cmp
jb
popf
test
fistps
testb
mov
mov
adc
xor
push
leave
addb
loope
sti
push
negl
aad
lahf
inc
mov
scas
loop
mov
inc
and
jo
mov
cmp
fs
jnp
pop
inc
test
pop
push
mov
or
sub
test
loopne
icebp
mov
lahf
or
fisttpll
aam
fisubs
out
inc
inc
test
and
in
mov
mov
daa
mov
jge
jecxz
mov
mov
test
dec
imul
fdivs
lcall
icebp
xchg
decb
pop
mov
mov
and
xchg
mov
pop
mov
mov
stos
loop
outsb
out
rcrl
add
or
pop
inc
ficoms
add
negl
dec
pushf
jb
inc
push
cmp
mov
push
sub
rep
xor
sub
push
test
cmp
cmp
add
aaa
nop
jnp
jb
mov
jecxz
mov
and
xchg
arpl
mov
sbb
shll
or
pop
fwait
jg
cs
repz
add
sbb
mov
mov
xor
sbb
adc
push
call
cwtl
push
push
mov
dec
xchg
inc
fisubs
xchg
inc
adc
lods
pop
cmpsb
test
dec
mov
jmp
mov
push
addr16
push
mov
imul
cmp
cltd
lock
sbb
leave
ficoml
imul
push
lret
lcall
cmp
and
push
in
push
add
scas
out
push
jmp
into
hlt
mov
mov
jne
fnsave
xor
js
xchg
iret
hlt
fbstp
jnp
mov
pop
and
mov
push
jns
mov
aaa
adc
aaa
add
adc
inc
adc
sbb
fiaddl
es
dec
mov
mov
fisubs
xor
mov
fs
adc
inc
loope
iret
out
or
jmp
xchg
cli
xchg
pusha
pop
shl
sub
xchg
dec
lock
bound
mov
cmp
mov
pop
jl
ret
scas
pushf
lods
push
jp
ljmp
cmp
ds
pop
xor
ja
and
out
add
subl
icebp
push
xchg
xchg
stos
add
hlt
mov
imul
sbb
push
mov
shl
orl
mov
test
push
clc
xchg
jl
dec
or
xchg
es
or
pusha
decl
jo
out
cltd
shlb
je
sahf
pop
xor
inc
xchg
pop
xor
test
lcall
std
mov
mov
icebp
aaa
clc
or
dec
sub
loope
insb
sti
xor
cwtl
or
into
mov
fcoml
in
push
push
mov
mov
cltd
and
lret
in
mov
dec
and
cmpsb
mov
int
mov
mov
or
out
mov
std
into
lods
shll
jge
inc
dec
fstps
xor
insb
mov
lods
insl
ja
and
and
lret
popf
fwait
fwait
daa
push
lcall
or
or
sub
push
dec
cmpsl
outsb
subl
inc
inc
xor
xor
push
push
aas
xor
mov
movsl
test
jl
jne
dec
mov
lahf
into
add
cmp
fisttpll
inc
fs
lods
cmp
mov
sar
inc
out
mov
sahf
pop
cmpl
jge
and
adc
jb
into
pop
cs
test
sub
sub
mov
push
mov
sub
lock
aas
jecxz
pusha
shrl
sbb
out
clc
sub
mov
mov
sub
mov
ja
add
jge
adc
in
mov
pop
push
iret
jae
xor
jns
test
in
adc
dec
sarl
inc
and
xorl
xchg
dec
test
out
push
shrb
test
xor
jne
sbb
xchg
lods
ja
aam
add
movsl
int3
shld
fisubrs
sub
dec
add
pop
es
sub
ret
stos
push
inc
and
popa
pop
add
cmovp
mov
cmc
xor
push
inc
pushf
lds
adc
lahf
scas
dec
add
in
enter
sbb
fistps
mov
popa
jge
pop
sarl
adc
cli
mov
cmp
adc
into
cs
jns
cmp
sbb
dec
mov
outsl
int3
outsb
xchg
push
pop
pop
adc
cmpsl
pop
sahf
cmp
cbtw
jle
loopne
pop
ror
out
sbbl
mov
inc
cmp
cmp
inc
push
and
scas
cmpsl
jno,pn
push
or
mov
adc
sub
movsbl
push
lds
dec
cmp
movsb
mov
ss
dec
cltd
das
adc
into
popl
push
cld
inc
insb
jo
in
dec
nop
test
pop
out
or
jno
pop
fildl
invd
lods
ret
jbe
inc
pop
mov
push
clc
in
dec
stos
pop
push
add
outsl
jns
or
inc
call
or
in
fiaddl
fsave
hlt
es
cmp
iret
jle
and
cmp
and
xchg
sbb
int
cmp
xor
push
clc
sbb
push
out
outsb
xchg
movsb
add
ret
fdivrp
cltd
fnstcw
push
push
cmp
jnp
mov
pop
mov
and
cmpsl
out
in
add
prefetch
or
jge
push
neg
push
push
movsl
rcll
shlb
cmovne
jno
xchg
lods
js
xchg
and
jbe
int3
sti
out
push
rcr
repnz
xlat
in
and
cwtl
xor
dec
into
mov
decb
xchg
imul
aaa
aad
mov
dec
cmpsl
dec
in
std
lret
in
in
cld
jne
xchg
sahf
out
jmp
test
dec
mov
cmp
mov
sbb
lahf
mov
pop
call
pop
xchg
add
lcall
in
cwtl
repz
sub
jle
frstor
insb
jne
jne
mov
cmpb
adc
shll
xorb
or
fucomip
leave
adc
sub
jmp
adc
pop
jecxz
add
xchg
adc
push
dec
ja
jns
sbb
xor
ds
pop
sub
mov
roll
xorb
fisttps
loop
mov
inc
fidivrl
jecxz
pop
xor
cmp
daa
arpl
repz
dec
cmpsb
iret
mov
xorl
xchg
pinsrw
in
dec
adc
cmp
add
mov
stos
scas
cmp
sub
js
or
lods
mov
jno
xchg
sbb
decl
cmp
out
js
add
sti
add
ficomps
pop
xchg
add
push
mov
lods
shrl
mov
mov
cltd
xor
xor
jne
fwait
shll
mov
sahf
ss
jnp
jbe
aaa
jecxz
mov
and
push
jbe
mov
sti
in
mov
inc
add
and
es
jp
push
sahf
cmp
xchg
sbb
aad
adc
jo
movsb
push
mov
mov
shlb
cwtl
mov
orb
jno
push
sahf
mov
inc
push
fldl
insl
cwtl
rol
dec
mov
xor
sbb
sub
or
ja
leave
shrb
xchg
mov
xchg
push
fnstsw
mov
jg
inc
call
fcmovb
addr16
loope
jle
and
lret
fimuls
mov
pop
mov
adc
xchg
out
bound
pop
inc
pop
adc
sub
add
jmp
pop
and
pusha
nop
push
repnz
jno
push
or
add
or
mov
jge
insb
out
adc
jns
sarl
insb
mov
loopne
dec
and
inc
ret
mov
dec
push
cmp
dec
test
mov
andb
pop
in
sub
jns
push
mov
fstpl
xor
into
test
into
ficomps
std
adc
cltd
pop
or
xor
dec
lahf
dec
jne,pn
and
ret
pop
add
std
sbb
clc
inc
lea
adc
push
nop
jmp
sahf
in
pushf
adc
push
xchg
jbe
jne
xlat
mov
pop
adc
cmp
lahf
int
sbb
dec
xlat
ds
sub
psrlw
xchg
out
xchg
ret
or
outsb
adc
adc
negb
into
pop
inc
mov
ljmp
and
mov
xchg
cmp
xor
std
imul
push
jae
sbb
call
xor
fbld
idivl
dec
mov
dec
mov
mov
adc
inc
mov
xchg
or
fsubl
mov
cmp
sahf
popa
mov
inc
lods
js
inc
pop
scas
test
cmp
push
push
pop
js
or
cld
lret
rclb
push
xchg
daa
shlb
jae
rolb
ljmp
arpl
pusha
lea
sub
add
je
xlat
icebp
xor
divl
push
into
cmpsl
std
cmpsl
lea
stc
sub
mov
jb
repnz
cmp
sbb
xor
insl
push
mov
imul
push
sbb
aas
imul
xor
lea
es
mov
cwtl
or
dec
cmp
repz
add
dec
repz
jmp
stos
bound
test
pop
xchg
inc
fs
mov
cmpb
les
mov
and
shll
push
push
outsb
lods
aam
dec
dec
pusha
rorl
sahf
inc
faddl
pop
jecxz
jle
jg
fs
cmpl
pop
repz
ss
aas
push
dec
and
aas
mov
pop
cld
adc
pop
mov
pop
xor
ss
pop
mov
fdivl
jecxz
lea
add
es
jp
cmpsl
outsl
test
jns
lods
out
sar
mov
dec
cld
dec
addr16
add
push
mov
rcrb
and
dec
les
or
movsl
mov
mov
cmpb
neg
sub
xchg
fidivrs
jne
ficoms
jecxz
inc
push
jge
pop
das
inc
in
mov
das
std
aas
mov
in
sarb
push
inc
out
stos
mov
les
or
outsl
xchg
lds
mov
fildll
adc
cmpb
lret
jp
jge
jne
cli
pop
je
dec
js
and
jns
and
pop
inc
jb
sti
gs
xchg
sbb
mov
xor
adcl
cmp
daa
mov
std
and
push
lods
jne
scas
fisttpl
and
ret
inc
inc
xor
sti
push
repnz
fisubl
cmpb
jmp
inc
mov
push
insl
out
lods
je
imul
push
out
sahf
pop
pop
inc
mov
push
je
sbb
in
cmp
push
loopne
add
repnz
push
adc
ljmp
lock
leave
pop
addl
dec
pop
adc
mov
sarb
sbb
and
rcrl
inc
jge
mov
lret
aas
shl
and
fnop
mov
pusha
push
les
pop
cmp
xchg
je
daa
push
iret
jp
js
cld
std
fs
loopne
or
xchg
xor
subps
stos
cs
int
add
jl
pop
pop
rclb
push
fwait
outsl
loop
jecxz
movsb
test
add
pop
cmpb
and
pushf
or
and
push
pop
push
lods
jnp
add
lods
dec
sub
bound
into
mov
dec
pop
or
jmp
xchg
pop
jmp
add
aad
or
lcall
and
es
xor
arpl
inc
cmc
cmovle
xchg
push
jno
sub
xchg
push
inc
jne
out
sbb
jae
ss
aam
lahf
push
dec
mov
cmpl
loop
repz
sub
mov
nop
xchg
cmpsb
mov
dec
push
hlt
mov
cwtl
add
ja
push
flds
xchg
cmp
adc
xchg
loope
call
je
xor
mov
fildll
adc
cmc
dec
lea
jl
data16
lahf
fcomps
hlt
add
xchg
push
mov
inc
jle
jbe
in
mov
push
aaa
pusha
push
inc
mov
iret
sbb
xor
adc
add
shlb
push
rclb
jl
add
pop
push
xor
xchg
scas
enter
pop
cmp
jo
cmp
in
cmp
inc
js
pop
test
mov
ret
mov
xchg
adc
das
xchg
add
mov
ja
and
int3
jmp
mov
mov
xlat
and
and
mov
sbb
jo
push
add
pop
enter
pop
sub
imul
rol
jb
popf
sub
mov
enter
lret
add
cmp
inc
dec
aas
fldenv
rep
xor
jbe
jb
popf
dec
cmpsl
test
popf
inc
adc
inc
ljmp
aam
aad
scas
dec
imul
movsl
pop
adc
jecxz
imul
pop
sahf
sbb
sahf
sbb
jecxz
sub
sub
push
jecxz
testb
ljmp
pop
push
jecxz
dec
cmpsl
xor
jge
ss
xchg
inc
ds
cltd
pop
es
in
insb
mov
lea
in
push
das
add
imul
inc
xor
xchg
outsb
push
fdivs
mov
mov
push
sahf
das
ss
and
in
sbb
mov
adc
mov
sub
repnz
mov
cmpsb
addr16
cmp
ss
inc
cmp
aad
lock
mov
add
test
dec
ror
jbe
mov
and
xlat
ss
frstor
jle
sub
mov
xchg
loopne
add
sbb
or
xchg
test
es
out
pop
sub
lods
out
push
and
xchg
push
mov
in
jle
cmp
xor
jbe
les
push
xor
adc
push
xor
xor
mov
inc
jns
imull
mov
xchg
mov
push
push
jno
nop
imull
dec
xchg
insb
ljmp
mov
mov
fistpll
xchg
fwait
inc
out
lods
arpl
in
clc
push
cmp
cmp
insl
or
nop
xor
outsb
and
inc
ffree
mov
loope
cmp
mov
push
and
cmp
mov
sub
dec
dec
aas
test
cmp
scas
filds
ret
sub
cmp
xor
jae
push
vmaxps
sub
jle
aaa
sbb
pop
mov
adc
and
xchg
aaa
dec
mov
jb
test
jae
and
mov
das
movsl
dec
dec
bnd
fisttpl
daa
fsts
push
imul
dec
jge
lods
jne
or
andb
xchg
ds
jno
inc
mov
dec
daa
lcall
ss
mov
mov
push
out
shll
loop
bound
jl
es
inc
fadd
shl
sbb
mov
dec
bt
jmp
cmp
movsb
mov
bound
push
adc
add
mov
add
mov
jmp
popf
sbb
sbb
pop
lds
mov
andb
push
pop
in
pop
mov
test
push
push
push
xor
lret
and
outsl
or
xor
dec
add
xbegin
cmpsl
lahf
xchg
fwait
jae
clc
adc
iret
fisubs
cmp
mov
popf
xchg
xchg
cli
sub
sub
push
push
aad
aad
add
outsb
in
push
push
fisubrs
in
adc
mov
push
fnstenv
jp
in
push
in
nop
push
lods
lahf
adc
neg
inc
xchg
out
adc
sarb
push
sub
push
and
test
and
mov
dec
sub
lret
ret
add
in
sbb
test
adcl
sbb
cmp
xor
add
mov
iret
sbb
loopne
xor
mov
repz
mov
mov
xchg
or
push
sub
in
and
xchg
les
dec
ss
jecxz
xchg
cmp
jne
mov
std
orl
add
add
adc
fcoms
mov
sub
mov
lods
sbb
fs
popf
cs
call
out
lret
jl
dec
dec
enter
add
mov
mov
inc
add
pop
mov
mov
xor
sar
inc
xchg
leave
mov
mov
out
jb
stos
lret
adc
jl
add
push
xchg
cs
clc
lds
cli
mov
loopne
push
stc
mov
test
jnp
push
sbb
push
fmull
mov
leave
pop
adc
xchg
ret
insl
popf
push
idivl
mov
dec
sbb
addr16
cmp
sbbl
sbb
or
lea
cmpsl
push
push
push
add
aaa
arpl
add
lret
and
frstor
inc
int3
das
or
jl
ja
hlt
add
loopne
imulb
xchg
stos
popa
pusha
rolb
repnz
shrb
push
sub
insl
push
bound
imul
loop
repnz
fs
insb
add
pop
mov
rolb
stc
les
inc
and
sarb
inc
push
rcrb
in
push
fildl
imul
xor
cs
fdiv
subb
xor
add
data16
mov
fsubrl
mov
rclb
xchg
loope
and
ror
xchg
dec
adc
incl
adc
popf
je
dec
daa
inc
mov
or
call
mov
dec
les
mov
sub
lcall
nop
nop
cld
or
std
lret
xchg
xchg
sahf
or
arpl
pop
cwtl
enter
std
cmp
jbe
pushf
mov
or
gs
add
bnd
cld
jp
mov
mov
insb
add
adc
add
or
jle
jno
and
xor
push
into
sub
or
aam
scas
gs
xchg
int
bound
popa
and
xor
test
mov
scas
sbb
mov
aaa
out
dec
xor
cs
or
test
push
lahf
push
mov
mov
fsts
cmc
xchg
ds
mov
lret
inc
jl
adc
lea
xchg
nop
mov
push
test
sub
idivb
and
xchg
movsl
js
mov
es
xchg
cmc
mov
jp
aas
xchg
adc
xchg
inc
jmp
lahf
adc
mov
repz
mov
mov
pop
mov
pop
call
test
mov
call
inc
mov
xchg
adc
in
out
loopne
sbb
push
movsb
pop
or
scas
and
mov
shll
aaa
xchg
int
or
js
inc
pop
jno
hlt
mov
or
push
sub
cmpsb
mov
adc
mov
mov
cli
sbb
inc
in
in
imul
adc
sub
hlt
inc
xchg
push
sahf
mov
mov
mov
ja
out
add
add
dec
es
int3
xchg
and
outsl
clc
lds
add
orb
sbb
hlt
or
mov
dec
cmp
in
pop
not
dec
das
rol
add
xchg
mov
jb
gs
mov
insl
pop
cs
mov
cmp
jb
aam
cli
inc
imul
mov
daa
stos
cmpsb
out
dec
std
cmpsl
xchg
adc
int3
push
mov
test
aad
and
mov
ret
or
mov
lcall
lcall
mov
test
xchg
pop
test
loope
sbbb
ficomps
lahf
repz
gs
pop
mov
push
xor
hlt
jbe
dec
dec
or
lret
push
test
cltd
jg
lret
out
push
inc
jb
insb
out
data16
in
xchg
dec
fdivrl
push
xlat
in
ja
cwtl
jnp
inc
sar
mov
add
inc
rorl
xchg
dec
mov
xor
lock
lcall
inc
fcomps
cmp
inc
loop
outsl
lea
sbb
xchg
mov
xor
xadd
mov
mov
xchg
shll
add
or
les
add
in
call
or
lret
mov
inc
jns
hlt
inc
pop
cmc
xchg
jecxz
dec
repnz
jo
int
std
sub
push
xchg
pusha
adc
vmwrite
or
or
sub
jmp
js
popf
dec
mov
push
mov
jb
fisttpl
out
test
test
mov
and
sbb
fst
add
cmp
cmp
lcall
mov
lea
jmp
jne
dec
rcrb
testl
xor
je
es
stos
dec
pop
std
or
adc
enter
mov
js
push
mov
sub
jnp
push
xchg
lret
lods
lods
es
xor
call
xor
mov
ljmp
repnz
fs
push
mov
add
jb
xchg
xor
mov
dec
outsb
sti
pop
or
fwait
push
hlt
xor
cli
inc
scas
outsb
xor
insl
out
icebp
cmpsl
shrb
mov
jg
lcall
push
cltd
jns
mov
push
jns
or
jo
or
fcoml
mov
xor
stc
in
js
daa
cmc
aaa
mov
adc
mov
popf
pop
push
popl
int3
sub
jnp
jl
mov
loop
lds
add
or
sbb
arpl
sub
mov
inc
mov
push
movsb
aas
jle
sub
ucomiss
jno
aam
xchg
and
mov
lods
and
mov
lcall
or
jl
clc
xchg
xlat
jmp
test
shll
jb
cld
pusha
sub
into
dec
lods
xlat
sub
push
fsubr
pusha
lods
jae
aaa
mov
loopne
mov
clc
pop
add
add
adc
add
cmp
subb
cwtl
xchg
sbb
aad
add
push
test
daa
dec
sub
add
aaa
mov
stos
fadd
dec
shlb
xchg
dec
mov
mov
sub
xchg
add
stos
mov
outsl
ja
inc
jle
aam
mov
inc
or
cwtl
mov
daa
pop
jle
mov
aas
test
ds
inc
in
cmp
or
je
rep
movsl
out
pop
test
pop
sub
sub
dec
jbe
pop
lcall
aaa
pop
xchg
pushf
add
clc
cmp
inc
adc
int3
dec
out
jbe
ss
and
jl
jo
pop
mov
sub
repz
pop
jnp
pop
call
sbb
clc
dec
insl
insl
enter
sub
hlt
lods
pop
es
cltd
js
call
ret
pop
jle
ret
out
inc
test
outsl
or
pusha
push
mov
aad
sbb
arpl
je
and
lds
push
pop
and
lret
sub
sahf
xor
push
cmpsl
cmpb
cmpsb
sub
aam
adc
scas
add
or
fisttps
fwait
mov
in
xor
mov
inc
mov
js
leave
inc
daa
and
nop
xor
or
and
push
inc
jno
inc
test
lods
push
push
xchg
mov
stos
pop
div
repnz
mov
dec
cs
andl
push
mov
nop
xor
pop
pop
and
pop
sti
push
fiadds
mov
jb
xchg
dec
cs
test
or
xor
mov
dec
bound
sub
loope
fstps
sbb
ret
icebp
mov
sub
mov
stos
or
xchg
fsubs
inc
sahf
dec
mov
dec
fs
fsts
mov
out
xchg
pop
repz
lods
ror
lcall
mov
cmc
sub
and
sbb
fwait
inc
pop
daa
adc
aam
jne
pop
repz
mov
mov
sbb
lods
cmpsb
jmp
sti
hlt
or
inc
mov
xchg
in
mov
add
and
xor
adc
insb
sub
mov
and
roll
push
pop
js
dec
sbb
repz
loop
push
mov
or
xchg
hlt
fistpll
icebp
mov
aam
addr16
push
ret
shl
sub
push
xor
outsl
cmp
sub
cmp
pop
cmp
mov
imul
cmc
xchg
fsubrs
loopne
dec
rcll
or
cmp
ja
pop
lds
pop
rolb
fimuls
sub
push
jmp
xor
and
mov
jle
pusha
imul
lods
xchg
mov
xor
push
or
pop
sbb
xchg
mov
push
insl
pop
sarb
push
lret
add
xchg
cmp
jb
sub
xchg
fldt
pusha
test
add
ret
push
or
orl
push
sub
push
sbb
mov
aas
sbb
roll
cmp
insl
test
stc
popa
fwait
mov
dec
sub
sub
jbe
pop
lcall
js
mov
fprem1
dec
xor
cld
sub
xor
rcr
cli
xor
fmuls
add
or
mov
push
jo
xchg
cltd
stc
loope
jmp
dec
mov
cld
xor
daa
sub
scas
je
dec
icebp
hlt
fidivl
mov
test
jb
add
cs
push
jmp
shr
sub
pop
push
out
xor
and
dec
dec
fsub
cmp
dec
xchg
dec
add
adcl
or
fstpl
sub
icebp
xor
movsl
sbb
push
orb
cmp
xor
pop
or
imul
mov
push
repz
pop
mov
repnz
push
fdivrl
cld
fisubs
iret
pop
adc
adc
and
cltd
ss
add
mov
mov
mov
jecxz
inc
mov
xchg
adc
pop
and
cwtl
in
mov
mov
push
xlat
sbb
fidivrl
mov
les
inc
sub
aam
xchg
or
in
push
mov
fmull
push
stc
mov
stc
mov
cmp
mov
sub
xchg
mov
inc
lret
sub
insb
popa
sahf
gs
jmp
xchg
outsb
loop
and
adc
bound
lds
lret
mov
cs
pusha
jns
mov
addb
addr16
mov
fnstenv
mov
jno
sub
adcb
outsb
inc
mov
inc
pop
dec
inc
lret
repz
out
sbb
cmp
gs
les
mov
add
sbb
rcr
fsubrp
imul
adc
jnp
aas
lods
xor
fistpll
dec
aam
in
into
push
push
loopne
fstl
das
sahf
out
ss
lods
dec
add
or
push
xchg
fwait
add
pop
mov
inc
sub
jmp
out
aad
mov
dec
mov
sbb
lret
push
push
jmp
xlat
pop
cmp
jno
add
fs
testl
neg
sub
out
dec
out
push
stc
pop
pop
aad
aam
ret
or
jne
and
pop
push
stos
ret
arpl
push
rcll
popa
pushf
iret
mov
sub
jo
aaa
scas
pop
test
push
dec
pop
xchg
push
or
fcmovnu
sarb
fs
jb
or
fstl
inc
jno
adcl
xchg
jnp
adc
stos
lds
and
leave
jl
mov
aam
xorb
mov
pop
inc
push
aad
xchg
sbb
test
add
xor
xchg
icebp
inc
mov
ds
sahf
mov
fwait
or
sbb
sub
mov
in
cmp
insl
pushf
mov
push
xor
in
pushl
jno
ret
mov
into
mov
ja
pop
jbe
mov
xor
adc
aam
popa
xor
jl
pop
rcrl
cmp
dec
int
sbb
sub
push
mov
xchg
pop
pop
ljmp
cli
test
or
movsb
cmp
nop
pop
and
fs
pop
cli
lahf
and
lret
ljmp
into
popf
lret
cmpb
pusha
inc
dec
sbb
cmpl
popa
mov
xor
xchg
mov
sahf
imul
jnp
push
js
sub
imul
repnz
inc
pop
push
ret
movb
cmp
inc
fs
pop
ja
inc
xchg
jp
sub
out
dec
sub
push
mov
push
sub
dec
cli
cmpsl
cmp
bound
fistl
out
test
lods
cwtl
adc
or
and
adc
in
movsb
xor
inc
or
inc
int
pop
cmpsb
mov
dec
sub
aad
stos
push
mov
shrb
add
gs
xchg
sti
dec
arpl
inc
and
js
jmp
push
sub
add
mov
popf
icebp
sbbl
adc
sbb
adc
ffree
out
sarl
add
jae
hlt
mov
adcl
pop
stos
arpl
jmp
int3
dec
jb
inc
sub
adc
mov
cmp
fs
fists
jecxz
test
mov
outsb
das
xchg
lret
lds
enter
mov
pop
sbb
inc
xchg
loopne
and
aam
hlt
xchg
cmp
jl
rclb
cmp
in
cmp
mov
not
sbb
or
mov
add
int3
movsb
cld
and
and
xchg
push
pop
popa
xor
dec
push
out
les
in
pop
std
out
xchg
lods
jae
icebp
mov
jbe
rol
shrl
inc
scas
sub
mov
mov
add
test
ja
cmpsl
sbb
mov
dec
in
mov
xor
aaa
cld
mov
scas
mov
dec
ss
mov
in
pop
fs
rol
int3
mov
push
lods
dec
sub
jne
mov
or
xchg
pop
jmp
and
ss
and
mov
fisubrl
sub
adcb
fbld
icebp
ret
pop
clc
xchg
setne
cmp
loope
rol
les
fwait
pop
adc
pushf
or
fs
sbb
or
mov
adc
push
shlb
pop
enter
cld
push
test
test
sahf
cmp
iret
outsl
stos
inc
stos
inc
jp
add
dec
push
mov
jne
push
mov
orb
rol
insl
jl
cmpsb
sbb
or
fimull
out
in
or
xor
loope
ss
loope
mov
mov
jmp
enter
out
in
in
adc
push
mov
inc
repz
loopne
aaa
push
cli
pop
mov
pop
pop
mov
inc
xchg
shl
loope
jbe
lret
lods
xor
push
add
addb
hlt
inc
mov
movsb
stc
push
cmpsl
or
cmp
in
pop
adc
lcall
andl
inc
pop
addr16
cmp
jp,pt
jbe
cmp
or
rol
or
inc
mov
repz
fbld
repnz
adc
loopnew
push
loope
cmpsl
fidivrs
clc
mov
imul
jo
pop
nopl
push
ja
xlat
stc
adc
jb
lret
pop
das
add
mov
stc
pop
aad
cli
test
aam
xor
add
mov
testl
jl
ret
jns
pop
popf
pop
aam
in
pop
fdivs
pop
mov
xorb
inc
stos
inc
lcall
shlb
cmc
mov
shlb
divl
movsb
aam
push
mov
pop
mov
orl
pop
cs
in
xchg
in
xor
push
push
ss
rcl
sbb
push
fiaddl
or
cld
insw
call
xor
scas
sysenter
mov
jae
inc
ss
cmp
imul
ret
es
mov
pop
sbb
sub
movsb
mov
sbb
jle
pusha
mov
pop
xchg
ljmp
fcoml
adc
cs
xor
ds
out
iret
mov
mov
cltd
in
pcmpgtb
jns
dec
add
and
nop
loopne
push
mov
dec
insb
pop
mov
jp
dec
jbe
scas
jbe
add
jno
fisubrl
pop
jecxz
jle
out
cwtl
push
filds
rorb
dec
cs
dec
setae
mov
cmp
imul
cwtl
jns
and
lods
mov
out
cwtl
push
in
inc
mov
scas
mov
mov
sbbl
movsl
mov
sub
repz
adc
mov
sti
add
and
aad
cmp
sarl
enter
add
push
lret
movsl
lods
fstps
pop
cmp
std
nop
out
fbstp
adc
clc
in
icebp
inc
daa
scas
xchg
push
adc
repz
xor
popf
aaa
jne
fnstcw
hlt
dec
push
mov
adc
test
fldt
jg
jne
fcoml
pusha
jnp
inc
add
mov
daa
cwtl
mov
cld
dec
fidivrl
subb
add
xchg
aam
mov
lahf
add
hlt
dec
and
bound
dec
inc
push
mov
ja
push
icebp
jmp
addl
ja
mov
scas
cltd
pop
add
push
lret
xor
loop
iret
ja
dec
jae
mov
mov
push
sti
bound
das
out
sti
fstpt
insl
lock
cli
jle
sbb
cs
int
add
rclb
rcrb
imul
sub
lcall
testl
movsl
or
sbb
xchg
mov
pop
mov
xchg
mov
ret
and
js
add
mov
xor
lock
xchg
faddl
es
adc
scas
mov
push
nop
adc
fisubrl
js
aam
test
test
dec
fcompp
jns
xchg
repz
dec
push
hlt
out
not
pop
push
mov
test
inc
movsl
xor
es
dec
jle
sti
mov
jne
fmull
lock
xor
daa
in
or
mov
adc
inc
pusha
mov
pop
push
push
shl
bound
push
aas
or
shl
jbe
xor
mov
ret
push
div
jmp
push
sbb
sbb
call
test
imulb
and
xchg
cmp
xorb
adcb
cmp
jge
subl
popa
sub
lcall
test
pop
aaa
cmp
adc
push
pop
pop
jp
shll
push
or
sbb
cmp
es
enter
sub
mov
mov
inc
dec
jo
pushf
cmpsl
adc
fs
fnsave
mov
inc
arpl
add
or
rcl
mov
mov
sbb
sub
enter
pop
cltd
loopne
lcall
sub
jno
test
mov
ljmp
jmp
frstor
lock
cmp
rorb
hlt
hlt
cmc
dec
jmp
roll
aaa
and
push
xchg
outsl
sub
aad
mov
add
fs
add
xchg
and
pop
jae
rclb
jle
mov
pop
jmp
nop
std
cmp
cmp
aam
sbb
pop
dec
sub
loope
or
ret
xor
das
es
sbb
inc
sar
adcb
daa
mov
inc
vfmsubadd231ps
lret
insl
add
pop
sub
push
dec
mov
sub
mov
jbe
sbb
js
push
sub
bound
aas
add
mov
jg
push
adc
add
xor
xor
imul
or
pushf
mov
adc
gs
pop
sbb
lods
fucomi
dec
fs
mov
sbb
test
fldl
xchg
cmpsb
pop
movsb
jecxz
push
test
and
ja
xor
dec
xlat
repnz
jge
cmp
jle
sti
mov
cltd
pop
push
dec
lret
shll
outsb
shlb
and
rep
je
or
xchg
out
mov
jmp
lret
and
test
dec
adcl
mov
dec
lahf
xor
aas
out
decb
cmp
inc
cmp
add
mov
ret
cmpsb
jge
jmp
jno
test
jnp
and
mov
movsl
ret
mov
sahf
pop
das
mov
outsb
shll
ret
and
cmp
pop
addr16
aad
jmp
and
test
cs
dec
lcall
jb
das
or
add
pop
das
cmp
fldcw
test
lock
sbb
out
out
inc
mov
mov
fwait
out
aam
ret
mov
iret
fists
sbb
mov
pop
push
mov
clc
fistpl
adc
jnp
mov
out
xchg
aam
pusha
adc
lods
into
das
aaa
xorl
mov
decl
insb
pop
subb
xor
or
pop
mov
jns
sbb
lods
in
loop
adc
fs
adc
dec
fwait
leave
scas
xor
dec
xchg
stos
cmc
cmp
in
cmp
adc
test
push
mov
imul
and
sub
lcall
imul
xor
xor
fwait
daa
and
mov
lcall
ret
icebp
sbb
out
fistps
daa
jl
dec
in
adc
and
js
into
jne
movb
fcmovnb
movsb
scas
xchg
or
fcmovnbe
push
push
shlb
clc
imul
pop
mov
jle
pop
mov
dec
scas
jne
iret
adc
imul
sub
imul
testb
xor
xchg
pop
mulb
push
push
jmp
mov
cmpsl
inc
adcl
es
cmp
movl
sbb
and
mov
xor
test
inc
movsb
insl
sub
ss
in
push
in
je
addr16
mov
push
push
dec
fldenv
enter
fs
pop
mov
outsl
sbb
xlat
pushf
cli
dec
cld
xor
imul
iret
imul
jnp
or
add
or
aam
ret
add
and
fbld
inc
push
mov
or
inc
mull
gs
lcall
adc
jmp
mov
dec
or
out
inc
pop
repnz
mov
aad
pushf
pop
xchg
adc
frstor
rcll
jnp
push
mov
cs
push
push
inc
adc
or
or
repz
test
ja
dec
lock
inc
std
jo
call
or
xchg
fiadds
stos
lret
add
cmp
xchg
xchg
loop
push
sbb
out
fmuls
fcoml
inc
iret
adc
inc
mov
cmp
in
addr16
out
xchg
std
xchg
and
adc
pop
push
cmp
sahf
cmp
rorl
xchg
js
and
inc
pop
fldz
fildll
jns
and
addr16
addl
fs
ja
fs
lock
cli
push
mov
inc
sub
jb
mov
fistpl
insb
push
xchg
insb
pop
pop
pop
cli
pop
std
int3
pop
cmc
cli
xor
and
mov
js
into
push
push
lds
pop
pushf
cs
test
xor
das
aas
aam
aaa
and
arpl
outsb
or
imul
les
jno
std
out
jmp
jmp
test
jne
outsb
cmp
jae
sarb
sbb
int
mov
xor
flds
roll
adc
dec
push
sbb
push
jbe
popf
mov
iret
pop
inc
and
sbb
pop
int3
xchg
lds
inc
sbb
jecxz
cmc
shlb
rcll
cmp
outsb
mov
sbb
sti
pushw
adc
aad
sub
xchg
mov
mov
xchg
lds
jg
scas
orl
fiaddl
and
rclb
sub
ja
push
mov
iret
mov
lcall
popf
das
jo
push
xchg
movsb
hlt
test
das
adc
xor
lahf
cwtl
inc
jg
mov
push
lods
shll
cs
sub
or
push
jp
cmc
scas
jno
pop
movsl
jg
fldcw
lds
jp
push
mov
xchg
push
sub
out
jmp
lret
xor
int
or
jb
inc
push
cmp
lds
xor
lret
and
add
cwtl
repnz
or
scas
jl
mov
push
and
add
mov
loop
rcrb
push
sbb
fisttpll
gs
mov
push
mov
out
sahf
in
sbb
or
cmp
xchg
outsb
outsl
fldenv
out
movsl
repnz
pusha
or
xchg
and
cmp
push
jl
add
iret
nop
xchg
push
jecxz
xchg
mov
fs
push
mov
cmp
int3
push
inc
lea
push
inc
sbb
ret
push
cmp
sbb
nop
test
data16
cmc
data16
insl
push
xchg
nop
orb
enter
fnsetpm(287
mov
ss
ret
or
push
shr
mov
xor
into
mov
stos
xchg
ljmp
sub
call
and
pushf
leave
js
jle
mov
push
xchg
test
scas
loop
ljmp
loop
xor
inc
in
push
jbe
jecxz
iret
cmp
xchg
pop
ret
dec
fcmovne
adc
sub
add
cmp
jns
push
xchg
std
mov
sub
fwait
xchg
push
push
mov
cwtl
pop
sub
jae
shlb
stc
fldl
cltd
jo
and
push
aaa
xchg
push
add
cmp
mov
pop
mov
aas
pop
mov
push
mov
jb
enter
add
pop
lcall
push
jg
scas
icebp
into
pop
ret
ret
jno
jmp
fucomi
add
xchg
pop
push
ret
fsubrp
mov
in
insb
repnz
aas
lret
test
inc
push
aas
dec
jbe
push
and
inc
test
jg
xchg
add
popf
loop
js
push
pop
dec
push
add
pusha
popa
pop
dec
inc
mov
stos
fisttpll
xchg
ss
cmp
gs
inc
cs
xchg
sbbb
jb
mov
insl
hlt
jae
clc
addl
jns
mov
in
ret
iret
sarb
into
sbb
std
sti
test
cmp
mov
add
flds
fwait
add
imul
add
lock
push
mov
ret
shlb
jmp
loope
lahf
add
xor
pop
jmp
push
lret
adc
sub
push
lcall
loop
sub
jp
xchg
sub
or
fildl
xchg
lahf
call
jl
loop
xor
inc
mov
loopne
push
gs
xchg
fdivs
push
insb
stos
adc
roll
pop
push
test
push
js
jmp
jns
xorl
in
out
jecxz
mov
pop
icebp
lds
addb
pop
fwait
mov
add
subl
mov
out
mov
cltd
add
pop
sbb
xor
mov
add
js
test
and
or
clc
into
jge
adc
clc
mov
sti
out
stos
jne
jg
and
aas
bound
std
inc
lcall
outsl
lret
lea
mov
jbe
inc
test
add
mov
ja
inc
mov
sbb
sub
xchg
adc
push
mov
jg
xor
inc
ljmp
cmpsl
xchg
ret
dec
cli
and
inc
mov
fsubrs
mov
stc
cmp
cwtl
xor
hlt
and
out
xchg
pop
out
sti
loop
add
pop
adc
or
fsubrl
xchg
inc
int
push
or
adc
xchg
imul
xchg
push
insb
ljmp
mov
inc
roll
and
inc
mov
shlb
dec
mov
pushf
hlt
inc
outsl
pop
adc
jge
std
scas
push
or
sub
lahf
xchg
inc
push
mov
mov
pop
adc
pop
arpl
mov
call
sti
jne
pop
sbb
adc
popf
fsubl
fs
dec
add
push
and
pop
push
and
xor
movsb
loope
lods
fnsave
test
js
mulb
adc
pop
jle
mov
add
xchg
lret
repz
call
inc
inc
cmpsb
mov
int
or
lret
imul
pop
stc
mov
andb
jb
sbbb
dec
xor
inc
xchg
mov
test
jae
sbb
aad
inc
inc
fstpl
push
push
add
sub
repz
insl
jp
lret
lds
int3
mov
xchg
sbb
les
icebp
out
movsl
mov
push
pop
jmp
lret
push
pop
das
loop
jmp
inc
clc
xchg
xlat
arpl
mov
cmpsl
push
fnsave
or
dec
mov
cmp
or
push
pop
arpl
add
ljmp
sbb
cmp
sbb
fdivrp
cmc
pop
mov
fimuls
dec
out
ficoms
mov
ret
aam
push
cmpb
insb
jl
cli
movsb
adc
xchg
push
movsl
mov
mov
in
adc
insb
fwait
das
das
out
cmp
or
jns
or
jno
gs
lods
popa
fisttpl
pop
lods
jecxz
mov
cmp
push
shrb
pusha
add
and
lock
add
xchg
xlat
fdiv
movsl
sub
mov
xchg
fiadds
ficoml
negb
dec
mov
fwait
cmp
stos
sbbl
mov
xorb
arpl
and
pusha
xchg
cmpsl
aam
sbb
insl
adc
lahf
lret
mov
xor
out
mov
pop
adc
and
pushf
jmp
and
ja
in
sahf
sahf
test
or
cmp
sub
insb
sub
out
test
mov
jp
or
xchg
xchg
enter
and
call
out
jo
mov
fs
pop
inc
aas
out
xor
lcall
rorb
outsb
stos
or
add
jmp
hlt
adc
clc
testl
pop
arpl
cmpb
jmp
mov
repz
or
cmc
imul
jbe
mov
or
cmpsl
loope
and
jns
loop
das
or
movsl
xor
mov
adc
jbe
jp
xchg
in
mov
ret
addb
add
mov
xchg
aas
iret
ret
shl
pop
inc
fwait
cmp
dec
sub
cwtl
sub
jl
in
repz
rep
arpl
dec
fdivr
and
addr16
pushf
lds
scas
rcll
mov
pop
dec
jns
sub
pop
push
or
cld
nop
jae
cmp
fs
add
stc
or
cmp
pop
ret
cli
daa
add
bound
jecxz
add
enter
rcrl
test
jbe
push
fdivp
push
dec
loop
in
adc
xor
pcmpgtd
ret
insl
idivl
ds
fs
xchg
pop
incb
outsl
mov
out
pop
pop
ret
rorb
adc
dec
lock
jno
icebp
aas
push
push
out
pop
test
jae
xchg
les
xchg
cmp
fsts
lds
ljmp
mov
sbb
cmp
sbb
inc
sub
push
jg
das
pop
fstl
into
xchg
dec
iret
adc
inc
xchg
test
xchg
icebp
sub
jno
jmpw
repnz
xor
cmpsl
scas
mov
sarb
jnp
xor
test
adc
loope
arpl
mov
stos
mov
ja
ret
adc
test
icebp
mov
xlat
int3
and
sub
cmp
adc
lods
push
dec
push
arpl
je
sahf
and
push
or
cmpsb
inc
xchg
out
push
sbb
clc
pop
mov
sbb
mov
push
sub
fwait
mov
xor
rorb
xor
sub
int
ds
jle
xchg
inc
imul
fistpll
sub
movsb
push
push
mov
adc
inc
bound
mov
adc
inc
inc
sub
xchg
test
jl
dec
cld
pushf
sub
out
nop
xchg
shlb
cmp
sub
inc
add
shlb
imul
subl
jg
testl
push
cs
mov
scas
mov
dec
adc
add
add
les
cmp
es
je
jmp
cmp
vcvtsi2ssl
std
jmp
push
ja
loope
movsb
les
jb
popf
aas
xor
dec
mov
pop
sbb
ret
lods
sub
mov
dec
insb
pop
xchg
lea
cli
adc
dec
arpl
jecxz
or
add
jbe
cmp
repz
popf
stc
xchg
das
lret
push
fiaddl
inc
inc
inc
sahf
ss
movsl
fbstp
into
mov
pop
lahf
into
subb
xor
pop
leave
push
jecxz
jnp
jge
cmp
loopne
mov
dec
or
pop
add
xor
jb
pop
fldenv
xor
push
mov
dec
jne
xchg
cmpsb
icebp
or
lods
jnp
fisubrl
push
js
je
sbb
sbb
arpl
jno
out
add
mov
sub
sbb
sti
aaa
xor
inc
aam
test
xor
sub
repz
push
add
das
pop
mov
or
fisubrs
fwait
mov
sarl
clc
icebp
ficompl
daa
lea
insl
jl
neg
push
xchg
add
test
adc
jp
loop
pusha
mov
mov
inc
ret
pop
push
inc
pop
cmp
rcl
in
arpl
in
cmp
jns
xchg
insb
push
shl
scas
movsl
pop
stc
fnstsw
sub
inc
sbb
sub
pop
je
and
mov
ljmp
adc
jb
mov
and
mov
sub
mov
mov
xchg
xchg
push
aad
mov
sbbb
mov
repz
call
sub
pop
fcomps
test
mov
mov
clc
adc
inc
dec
lahf
adc
add
movsl
into
xchg
scas
adc
pop
mov
repz
fs
ja
aad
mov
out
insb
addl
push
dec
adcb
int3
inc
mov
mov
pusha
cs
movsb
lds
mov
jecxz
xor
mov
push
mov
iret
jae
xchg
out
jg
daa
lock
xchg
xor
and
sbb
je
insb
lret
mov
sub
jmp
sbb
and
and
cmp
fsub
ret
adc
mov
mov
bound
das
les
dec
adc
nop
cli
mov
orb
push
cmp
or
pop
pop
dec
push
bswap
scas
movsl
shrb
lret
or
aam
pop
push
je
inc
cmp
xor
outsb
lock
test
jmp
push
stos
loopne
rcll
mov
cmp
mov
cmc
jp
fwait
pop
daa
fildl
out
cmp
dec
stc
clc
mov
cmp
and
pop
sti
lcall
cmc
cli
loopne
insl
and
lret
pop
fiaddl
push
aam
fistl
enter
sarl
add
adc
insb
int3
psrlq
add
mov
loop
push
fcomps
pop
cmp
pop
lret
and
sbb
pop
movsb
pop
js
inc
imul
loopne
int
mov
cmpb
mov
lea
or
fdivp
mov
cmpsl
and
ret
xor
push
xchg
stos
dec
into
dec
cmp
add
repz
jmp
mov
scas
inc
daa
push
mov
fdivr
test
rcll
sbb
push
xchg
jmp
mov
adc
mov
or
fs
or
sub
lahf
xchg
ret
test
out
jae
adc
inc
fs
iret
dec
xchg
iret
xchg
jno
cmpsb
sbb
aad
xchg
push
imull
pop
lret
rcr
sub
aad
loop
mov
mov
or
shll
mov
xchg
pop
ret
cmp
jge
in
inc
or
mov
dec
scas
adc
test
xchg
gs
jecxz
inc
les
push
mov
enter
out
decb
les
xor
add
add
push
jb
aas
xchg
popl
cmpsl
in
idiv
daa
mov
mov
sbb
stos
mov
mov
nop
popf
adc
xor
xor
jno
stos
in
pop
cli
mov
enter
insl
subb
jg
xchg
push
lret
jl
mov
stos
in
dec
and
mov
enter
clc
jns
out
sti
sbb
cmp
test
mov
fisttps
fidivl
lods
pop
cli
push
sub
cmp
lahf
sub
shlb
mov
cltd
cmp
cwtl
std
lret
cmp
rolb
or
dec
fs
mov
repz
outsl
in
cmpsl
adc
xchg
inc
mov
xchg
lock
pop
adc
pop
fbld
jo
repnz
mov
jmp
push
rorb
in
gs
and
add
push
xchg
cmp
mov
ja
or
jb
push
mov
inc
add
dec
stos
lods
int3
push
out
mov
add
mov
daa
or
out
inc
scas
sbb
dec
pop
ficompl
mov
mov
and
or
iret
mov
adc
pop
insl
inc
fsubr
add
sbb
add
ds
pand
out
inc
dec
jne
movsl
dec
aas
jns
pop
sbb
inc
push
and
dec
pusha
sahf
insb
movsl
inc
push
fwait
notl
in
pushf
mov
add
and
adc
std
and
add
cmp
shll
cwtl
test
es
mov
xor
adc
shll
push
and
sbb
push
mov
sbb
in
daa
mov
add
dec
jnp
shrb
jo
jb
dec
inc
mov
jecxz
jno
movsl
cmp
leave
sub
or
sub
push
jmp
jno
push
popa
rolb
cmc
fs
add
andl
cmc
adc
icebp
jmp
jno
xchg
sti
pushf
mov
lea
sbb
icebp
jns
sub
std
ficoml
icebp
test
sbbb
pop
add
lcall
xor
xor
or
inc
in
lock
jbe
adc
ret
clc
rclb
test
cli
xchg
insl
xchg
push
inc
sbb
dec
jae
rcrl
sub
sti
add
jne
stos
and
pop
push
mov
jo
jl
cld
pop
and
jge
cwtl
push
jnp
mov
lret
test
iret
jns
mov
loop
iret
jno
adc
std
in
shll
test
js
lock
inc
or
mov
int3
cmc
stos
jnp
rcll
jne
xchg
fs
cmpsl
arpl
sar
cwtd
movsb
inc
add
inc
in
out
dec
stc
and
push
cmp
jp
pop
enter
cmp
shll
lcall
je
or
cmp
insb
fs
mov
mov
repz
call
mov
pop
data16
rclb
lret
std
xchg
xchg
xchg
lock
arpl
decl
inc
fistpll
jb
std
cmp
icebp
loopne
daa
adc
jecxz
ljmp
xor
mov
outsb
inc
xchg
mov
int3
cli
sti
push
aaa
outsl
and
icebp
mov
lea
stos
decl
lret
into
hlt
mov
aaa
and
add
lret
dec
pop
filds
lcall
jbe
notb
dec
test
es
pop
lds
jns
jge
popf
sbb
dec
enter
and
mov
sti
mov
cwtl
imul
push
push
repnz
xor
mov
push
cmc
rol
in
mov
cld
jbe
jne
sbb
push
cmp
push
or
or
jmp
scas
push
mov
cmpb
out
cmc
sub
push
add
jbe
sbbb
divl
repz
xchg
jle
xchg
cwtl
outsl
sahf
dec
mov
jnp
cmp
pop
mov
daa
js
or
testb
lods
mov
pop
lods
jns
inc
mov
jno
fildl
out
je
cld
aas
cli
xor
out
out
popf
dec
lds
das
das
sti
and
daa
aas
in
cld
mov
jmp
ret
cmpsb
xor
xor
pop
ja
test
ret
pop
js
mov
sbb
mov
bound
adc
adc
pop
pop
mov
xchg
std
stos
xchg
fcmovnu
popl
add
mov
mov
add
dec
rcrl
dec
psrlw
into
cmp
pop
sub
jae
inc
cs
sti
mov
shl
lahf
insl
push
lea
push
push
fwait
xchg
pushf
xchg
cmp
push
popf
dec
push
mov
pusha
xor
repz
sub
mov
push
call
mov
imul
jge
push
dec
call
fldt
out
xchg
mov
pop
icebp
outsb
insl
pop
xchg
subl
out
ja
and
faddp
sub
and
push
push
push
ds
aas
sbb
rorl
cs
mov
xchg
xor
or
js
leave
cltd
das
pop
dec
pop
ret
cmpsl
pop
cmp
out
mov
repnz
mov
or
xchg
frstor
mov
push
mov
pop
cli
mov
mov
imul
mov
rcrl
and
cmpsb
fs
stos
mov
cmp
sbb
sahf
inc
fsub
pop
jp
mov
loop
insl
iret
cmovnp
mov
cmp
or
sahf
dec
or
or
jo
daa
or
pop
push
aaa
data16
mov
fiadds
or
cmp
inc
add
xchg
fstpl
or
sub
orb
out
cwtl
in
xor
push
ds
add
push
mov
dec
das
cmpsb
mov
xchg
push
push
out
inc
adcb
jge
dec
ja
std
push
lret
inc
fsub
outsb
lock
and
push
pop
xchg
outsl
ja
add
xchg
xchg
pop
pop
popf
fidivs
dec
pop
mov
push
pop
stos
add
inc
fs
imul
dec
sbb
int3
jmp
lods
lods
sar
test
loop
or
xchg
lods
mov
cld
pop
sbb
sub
inc
test
and
push
or
mov
insb
push
das
js
cmp
sub
aas
sub
test
fcoms
xchg
xor
outsb
inc
mov
or
add
and
xlat
xchg
cmpsl
push
mov
into
pop
xchg
xchg
add
rorl
push
sbb
je
xor
dec
adc
stc
sbb
bound
dec
je
or
dec
lock
push
jo
pop
jg
inc
rsm
rcrl
stos
ja
or
cld
pop
mov
out
mov
xchg
in
fnstsw
push
jle
inc
cmpsl
sbb
in
cmc
cmp
lods
addr16
hlt
scas
cmp
nop
repz
dec
es
push
jl
mov
jecxz
mov
lret
jae
mov
xchg
pop
and
cmp
decl
cwtl
inc
addl
add
jge
xlat
add
pop
sbb
ficoms
mov
jnp
mov
ret
out
mov
jecxz
pop
sub
loop
lahf
aas
lods
rcrb
into
mov
sahf
xchg
inc
popaw
vpacksswb
mov
pop
aam
mov
and
and
inc
punpcklbw
ljmp
in
mov
mov
test
sbb
sbb
mov
jmp
out
out
stos
mov
popf
hlt
mov
in
test
push
mov
scas
and
jecxz
out
xorl
lods
pop
test
bound
cmp
push
xchg
inc
push
dec
cmp
clc
mov
adc
lds
cmpsl
sti
sbb
aaa
call
pop
pop
mov
push
inc
add
and
fnstenv
mov
mov
jle
add
mov
xor
push
int
sub
mov
adc
mov
ficoms
jbe
sbb
std
lahf
dec
jl
addl
popf
in
imul
aaa
mov
jle
or
mov
loope
jae
sub
scas
mov
pop
daa
testb
add
lea
insb
aas
cli
stc
inc
jb
jnp
icebp
mov
je
je
mov
push
data16
imul
xor
shrl
ret
call
mov
cmp
xchg
test
pop
ret
push
push
xchg
adc
movzwl
mov
lret
pop
cmp
mov
pop
aaa
lods
adc
or
rclb
insl
pop
pop
add
pop
sbb
leave
add
sbb
shll
adc
fadds
push
stos
inc
mov
pushf
test
mov
mov
adc
sti
punpckhwd
push
adc
add
xchg
jp
shll
xor
xor
nop
leave
pop
sahf
xor
loopne
fildl
je
and
test
ret
mov
adc
add
jns
gs
adc
dec
xchg
jg
cmp
or
les
lret
adc
push
add
cli
pop
lods
cmpsl
dec
aad
les
repnz
xor
in
xor
shlb
mov
push
nop
sub
sahf
adc
xor
or
stc
push
mov
cmp
cmp
nop
lcallw
pop
gs
push
sbbl
into
addr16
sub
leave
addr16
mull
inc
push
gs
push
aaa
mov
mov
stos
mov
cmp
test
fs
andb
pop
jo
push
or
cmp
jle
pop
or
pushf
loopne
addr16
int3
imul
aas
xor
cmc
sub
xor
ss
push
cmp
cld
lret
subb
mov
sub
in
dec
push
push
mov
pop
idivl
pop
xchg
cmp
and
or
jnp
push
shlb
cli
sbb
xchg
cwtl
hlt
repnz
fs
addl
das
mov
inc
mov
aaa
or
ss
ds
test
loopne
insb
insb
inc
xchg
and
sub
jle
ret
jo
mov
mov
iret
rcl
mov
lods
out
and
ss
shlb
fdiv
inc
jae
sbbl
cmp
inc
sahf
lock
lea
sbb
push
pop
jge
push
cltd
jns
push
jno
daa
mov
inc
enter
jae
icebp
andb
jne
push
test
das
inc
lret
jo
sub
jbe
or
movsb
pop
and
push
cmp
icebp
cmc
mov
popf
fs
mov
fisttpl
cmpsl
adc
stos
jne
imul
cmp
sub
ja
sbb
xchg
js
ljmp
int3
test
outsb
mov
mov
mov
add
sub
xchg
mov
xor
push
sbb
icebp
xchg
repnz
push
sbb
lcall
sbb
ss
and
and
add
mov
jp
int
rcrb
mov
cmpl
test
fimuls
inc
test
fdivs
jl
mov
sbb
mov
adc
xchg
fistl
mov
jnp
cs
push
daa
jno
add
jge
aad
sub
ljmp
and
aam
push
and
dec
xlat
xor
sub
and
fld
in
hlt
or
sbb
enter
sub
jge
and
stos
aam
sarl
jns
mov
mov
movsl
test
mov
mov
mov
stc
mov
mov
dec
loopne
fsub
or
or
inc
aas
push
rcrl
in
jg
pop
mov
dec
xchg
mov
fnstsw
push
sub
xchg
push
cmpsb
int3
and
xchg
pop
push
cmp
push
andl
stc
sub
or
enter
sbb
xchg
and
push
adc
decl
xchg
int
xor
imul
popf
dec
inc
jns
es
cwtl
js
dec
inc
ss
mov
mov
dec
sbb
mov
aas
jnp
dec
insl
jb
push
popa
sub
test
loopne
mov
add
push
loop
xor
stos
push
pop
mov
inc
imul
cwtl
je
lret
and
cmp
mov
jns
mov
jg
xchg
sub
mov
arpl
xchg
sub
mov
mov
xor
sub
mov
push
pop
pop
ss
stos
lret
xchg
sahf
mov
lret
or
call
rol
or
lcall
hlt
ret
test
hlt
lret
inc
pop
je
add
idivb
imul
jnp
movsb
out
mov
aam
rorb
sbb
push
loopne
cmp
push
dec
out
mov
mov
jg
mov
fisubrl
inc
lods
inc
xchg
orb
loope
shrl
push
repnz
cmp
out
imul
jmp
xor
jbe,pt
mov
enter
jecxz
sahf
sub
cs
mov
repnz
aam
pop
cmp
lahf
nop
jno
mov
push
xchg
xchg
ret
faddl
enter
mov
add
outsb
inc
repnz
movsb
sahf
ljmp
fistl
jno
cmp
in
mov
ds
cmp
cmpsl
lcall
imul
loopne
xchg
jb
aaa
sub
pop
iret
pop
xlat
int
notl
jle
mov
mov
in
add
not
gs
inc
push
cs
daa
add
test
lock
pop
fdivrs
and
adc
fldl
xor
pushf
sbb
mov
out
push
sbb
or
in
rorl
mov
fcmovbe
cmpsl
shlb
imul
add
js
mov
push
out
cmp
or
test
pop
cmpl
xor
loopne
xor
out
nop
jecxz
jo
mov
and
mov
and
mov
sbb
notb
or
mov
dec
mov
bound
jl
jno
fprem
mov
jne
push
mov
movsl
pop
push
pop
rclb
sbb
call
repz
lea
js
ja
fstpt
add
mov
xorl
and
inc
xchg
sbb
or
mov
or
xor
push
dec
sub
movl
nop
sub
dec
xchg
aam
lcall
xchg
push
pop
std
mov
cmp
fwait
popa
mov
cs
cmpsb
xchg
push
sub
clc
pop
jnp
data16
imul
notb
iret
sbb
inc
mov
xchg
and
jbe
mov
push
mov
jnp
pop
sub
iret
in
gs
aam
aas
sbb
cmp
sub
pop
sahf
jle
adc
insl
inc
aam
mov
jne
mov
loop
jge
iret
add
mov
popf
sub
imul
ds
inc
inc
and
lahf
inc
mov
inc
mov
jbe
jns
lahf
pushl
push
outsl
push
pop
add
lahf
push
mov
shlb
bound
mov
inc
sub
inc
push
iret
loope
fisubs
or
lret
scas
jae
push
mov
dec
jecxz
ja
mov
pop
fisttps
jne
jecxz
adc
xlat
or
faddl
pop
cmp
mov
xlat
cli
lcall
xor
lea
xor
int
cmp
inc
and
cmpsb
cmp
loope
cmp
jmp
test
pop
cmp
push
loop
dec
xor
mov
fs
mov
sub
aad
lds
mov
adc
mov
dec
test
in
flds
mov
lods
mov
push
jo
sub
cmp
pushf
aam
jno
mov
xchg
cmp
xor
stos
pushf
xchg
dec
inc
test
or
aam
jbe
mov
lret
cmp
jmp
adc
push
imul
cmpsb
add
jp
out
inc
movd
jecxz
cmp
daa
sbb
sub
cmp
add
and
icebp
add
push
mov
repz
pop
lret
xchg
mov
dec
pop
into
jmp
jle
jg
push
cmp
cmp
xchg
out
sti
push
cmp
sahf
out
call
stos
adc
rcll
test
andb
fdivl
mov
fcomps
test
push
cmc
jp
movsl
cwtl
jle
pop
notb
cmp
insl
push
jg
inc
jmp
xor
mov
fistpl
push
nop
jg
in
dec
mov
adc
fistpl
inc
ret
xor
cmp
mov
or
out
xor
cmpsb
sub
imul
ljmp
sbb
push
shll
out
mov
fdivs
push
outsl
bound
cmpsl
xchg
out
xchg
popa
sbb
mov
dec
jnp
jno
cltd
mov
mov
jo
cwtl
pop
sbbl
dec
xlat
mov
inc
stc
data16
mov
pop
mov
fidivrl
mov
mov
xor
cs
jmp
pop
dec
icebp
sbb
xorb
mov
dec
mov
int3
addb
pop
imul
std
xor
les
cwtl
inc
cmp
dec
pop
fsts
add
shlb
shll
out
sub
cmp
in
pop
push
jmp
fisubl
daa
mov
add
cmp
jno
loop
dec
jmp
add
jg
popw
hlt
or
stos
lods
pop
or
pop
and
adc
adc
subl
subl
mov
adc
movsb
cltd
rorb
cmc
or
mov
mov
or
in
aas
cmc
sub
push
xor
sbb
dec
pop
pop
push
sbb
ror
in
sahf
sbb
adc
adcb
xchg
adc
jg
into
jnp
jecxz
jb
jae
adc
mov
or
push
aad
out
mov
mov
insl
in
pop
imul
imul
dec
stc
adc
and
mov
sbb
out
adc
push
xchg
in
fwait
mov
mov
push
imull
fists
sub
mov
arpl
mov
xor
js
dec
dec
enter
xchg
inc
xchg
or
shrb
jecxz
add
and
pop
pusha
fs
pop
ss
stos
sub
mov
outsl
dec
js
mov
adc
dec
pop
xchg
test
arpl
adcl
idiv
push
lret
test
push
addr16
cmpsb
xchg
ret
in
fisttps
mov
adc
cmpb
shlb
lret
mov
push
add
pop
rcr
xchg
sbb
imul
int
mov
push
cltd
ja
fisubrl
mov
cli
aam
into
mov
outsl
push
leave
movsl
jno
flds
xchg
call
or
push
add
mov
cltd
leave
cwtl
add
push
out
shlb
hlt
pop
test
cmp
dec
lcall
push
flds
mov
xchg
adcl
cmpsb
femms
pop
pop
nop
mov
xchg
hlt
fmuls
imul
xor
mov
fldcw
insb
mov
outsb
xor
fisttpl
push
shlb
adc
cmc
fcmovne
jmp
fwait
lock
xrelease
je
loope
cwtl
and
xor
mov
out
mov
icebp
cmp
loope
lahf
push
sbb
add
xor
and
jecxz
repz
push
jp
dec
les
mov
imul
imul
es
cmp
jge
xor
lcall
ss
mov
jnp
dec
mov
jnp
add
clc
xor
or
imul
xor
popf
adc
inc
add
call
sub
inc
jb
and
jne
xlat
sub
stos
or
pop
cmp
stos
xchg
add
pop
xor
jmp
in
adc
imul
xchg
lret
add
clc
insl
sarl
test
adcb
js
cld
sub
inc
das
push
divl
adc
push
adc
out
ljmp
push
sub
std
addr16
jmp
cld
js
and
lahf
cmc
movsb
shr
inc
or
out
mov
sarb
add
incl
inc
push
fnstcw
fistpll
sbb
adc
mov
sbb
cmp
mov
inc
ret
dec
test
setbe
inc
add
cwtl
pop
push
cs
add
mov
mov
pop
jle
outsl
mov
lock
inc
and
repz
push
push
fidivrs
inc
dec
bound
mov
or
out
and
adc
dec
dec
test
jno
push
rorl
lds
fstl
insb
popa
lods
data16
inc
stos
dec
rorb
or
gs
pop
ja
and
and
shlb
lret
dec
insl
cmpsb
mov
mov
inc
sahf
aam
cmp
nop
push
lods
ret
adc
dec
call
push
inc
imul
jmp
mov
movsb
or
movsl
mov
xchg
sub
inc
fcmove
jo
lds
mov
sbb
aaa
into
dec
aad
dec
push
ss
adc
adc
call
dec
push
andl
push
loopne
ja
push
add
test
fwait
movsb
and
pusha
std
add
mov
arpl
imul
lahf
sbb
mov
and
mov
pop
rolb
mov
clc
push
push
fcompl
adcl
jecxz
or
cmp
repz
and
mov
arpl
add
jecxz
mov
loop
jae
cmp
adc
rcrl
lock
fstpl
mov
add
xchg
jl
insl
pop
in
shl
js
xor
into
jno
loope
dec
test
pusha
push
and
xchg
aas
cwtl
xlat
lds
xchg
mov
cs
push
loope
xchg
add
cmpsl
jp
push
xor
in
jae
loopne
hlt
dec
nop
cmp
dec
in
adc
pop
xor
and
pop
out
orl
fistl
cmc
les
mov
scas
push
pusha
pop
jae
or
cld
pop
sti
pop
inc
arpl
and
lods
push
add
out
or
mov
mov
subl
sbb
mov
gs
cmp
clc
aad
or
jg
pop
push
aas
pusha
imul
pop
outsl
cs
pop
mov
ret
lcall
add
jg
and
lret
and
arpl
sahf
pop
test
hlt
ss
sub
dec
and
inc
add
cli
or
cwtl
jns
das
pop
push
sti
ljmp
shl
push
jl
hlt
jo
outsl
jbe
jp
sbb
les
icebp
jnp
xchg
insl
inc
xorb
xchg
sbb
sub
fidivs
push
and
bound
mov
imulb
pusha
sarb
in
mov
mov
xor
clc
xchg
sbb
arpl
pop
jno
loopne
xor
mov
xorb
inc
imul
pop
dec
pop
inc
jne
negb
lods
mov
add
xlat
outsl
jno
clc
fcmovbe
adc
cltd
xchg
movsl
push
adc
push
push
xor
test
jle
lahf
mov
or
mov
and
jnp
sti
fs
in
pop
and
test
xor
cli
outsb
sbb
jle
out
insb
add
into
repnz
pop
and
xchg
sub
fwait
lea
lahf
pop
cmpsl
pop
fnstenv
mov
fistpl
leave
push
pop
lods
inc
mov
xor
mov
aad
dec
cwtl
mov
adc
xchg
cwtl
jp
outsb
mov
mov
mov
mov
sbb
dec
pop
ds
pop
popa
sub
push
mov
shrl
mov
push
mov
test
and
lds
pop
dec
fisubrl
xor
movsb
cmp
vmread
notl
pop
addr16
cmp
aad
clc
jne
xor
jge
mov
daa
imul
sbb
dec
xor
push
imul
mov
test
lock
xor
mov
lods
mov
jb
lea
fidivs
aas
jg
mov
mov
imul
mov
popa
cltd
hlt
outsl
pop
in
ror
jno
mov
mov
out
iret
inc
push
jbe
pushf
enter
arpl
sbb
cltd
pop
and
bound
cmpsl
inc
fdivl
aas
push
sti
aad
jae
mov
dec
out
aaa
mov
aaa
mov
addl
mov
inc
stc
cmc
lcall
sti
repnz
shlb
repnz
push
push
and
or
push
mov
mov
cmpsb
inc
jl
addl
popf
cmp
push
nop
inc
dec
and
scas
xor
pop
fists
xor
dec
mov
mov
into
jb
movsl
mov
sub
and
jb
jge
push
push
mov
aam
sbb
cmpsb
push
pop
pop
mov
jo
lret
movsl
ljmp
cld
leave
ret
gs
outsl
dec
loop
clc
inc
fcompl
jl
push
movsb
push
dec
and
xchg
sbbb
nop
push
mov
dec
mov
sub
dec
and
and
lahf
add
jp
push
jmp
mov
mov
jge
mov
sub
mov
mov
test
pop
and
push
mov
mov
scas
bound
out
add
push
lock
jmp
ds
dec
out
and
inc
das
push
add
push
out
add
or
mov
aaa
lds
lahf
dec
jmp
aam
cmp
out
jnp
and
in
cmpb
add
shll
pop
arpl
jbe
sbb
pop
int
mov
dec
xorl
mov
insl
adc
pop
cmpsl
sub
sbb
add
clc
mov
bound
cmp
or
repz
in
into
and
xchg
xor
mov
or
in
test
test
shr
fs
pop
clc
adc
sub
mov
ret
and
pushf
push
xchg
loop
rolb
test
aaa
cli
popf
dec
adc
test
pop
pop
addb
hlt
xchg
jb
dec
ret
cs
arpl
adc
data16
xchg
imul
push
jge
jecxz
dec
xchg
out
test
in
fcmovu
pop
rclb
call
xor
imul
cmp
dec
xchg
xor
cltd
mov
jnp
scas
imul
imul
sub
dec
lock
pop
mov
inc
test
adc
fisubrs
cwtl
aaa
bound
pmaddwd
push
sub
fnstsw
adc
jno
pop
out
out
cmc
fcoml
shll
das
enter
cmp
lea
scas
mov
sub
cmc
outsb
andl
cmp
add
pop
dec
das
adc
mov
jb
push
mov
shl
subl
pop
push
insl
lahf
pop
cmc
mov
std
jp
xlat
loope
push
push
test
ret
lea
pop
adc
jge
inc
loopne
push
or
fld
fildll
lds
shll
jle
jae
dec
scas
mov
xor
add
dec
icebp
out
cmp
in
mov
cld
sbb
mov
adc
add
lock
aam
aad
push
addl
fdivrs
aam
mov
mov
mov
sahf
mov
cmp
dec
stos
test
ss
div
ja
or
fisttps
cmc
add
leave
jg
insb
sub
stos
ret
aas
xchg
adc
repz
lret
or
sahf
pop
test
mov
add
jge
pushf
jbe
dec
leave
fsubs
les
adc
adc
jp
out
rclb
cmp
xor
and
shrb
push
add
mov
add
sbb
xchg
sub
or
jl
mov
or
adc
adc
movsl
push
out
stos
xchg
sbb
xor
je
stos
lcall
or
or
xor
jbe
outsb
lods
xchg
out
scas
cltd
pop
jp
pop
addl
xchg
fldt
lret
dec
or
pop
int
push
clc
adc
lret
je
sub
jg
xchg
push
sub
dec
in
and
test
hlt
lods
inc
outsl
and
sub
mov
xchg
cmp
dec
add
cmp
es
test
in
xchg
jecxz
mov
adc
adc
cmp
in
pop
pop
test
ds
imul
pop
lds
push
sarl
mov
pop
cmpsb
cmc
in
insl
mov
push
lods
pop
mov
xor
int
test
js
stos
xor
incb
jae
cli
xchg
push
out
les
lock
jg
das
sti
cltd
xor
xchg
enter
ret
stos
and
mov
sbb
insb
adc
xor
cltd
and
clc
add
data16
cmpsb
inc
sbb
ljmp
scas
clc
pop
and
push
push
gs
push
outsl
push
adc
sbb
mov
jae
cmp
insl
xchg
push
sub
leave
xchg
lret
mov
xor
ret
sbb
pop
jne
inc
ja
inc
jge
outsl
aad
enter
inc
cmp
les
scas
adc
cmp
mov
and
hlt
loop
inc
std
and
lods
sbbl
cmp
lahf
add
pop
bound
xchg
dec
jle
or
cmpsl
push
cli
push
pop
stc
insl
sbb
int3
adc
sbb
es
dec
xlat
loop
pop
or
jge
and
fsincos
xor
lds
jbe
fiaddl
pop
cmp
sub
mov
je
jnp
gs
and
push
mov
adc
mov
xchg
std
and
loope
or
outsl
imul
xlat
push
cmp
or
call
cltd
gs
adc
loopne
imul
mov
cli
xchg
test
neg
aas
out
and
out
push
js
adc
bound
jbe
inc
sbb
sahf
jno
out
gs
outsl
fnsave
pop
aad
fwait
xchg
xchg
mov
pop
sub
lea
dec
and
dec
jp
xor
cmc
jb
test
es
xlat
jne
loope
pop
out
icebp
ret
mov
xchg
add
sub
int
dec
adc
arpl
push
aas
jecxz
fildl
int
rcr
xor
cmp
repz
iret
scas
and
mov
push
xchg
push
shll
sarl
adc
and
addr16
das
mov
inc
or
push
mov
aaa
xor
jb
sbb
call
daa
jmp
sbb
mov
decb
jb
les
or
cmp
add
ret
inc
xor
dec
mov
outsl
out
rcr
in
adc
daa
sub
shlb
jg
out
clc
mov
push
xchg
mov
mov
pop
lahf
jl
xchg
push
stos
je
cmp
shlb
cmp
es
aas
sub
push
dec
cmp
shrl
jns
hlt
pop
ret
loope
jb
lods
pop
out
cwtl
cmp
add
inc
jmp
adc
jo
cmpsb
imul
cli
cmp
push
or
scas
nop
add
cld
pop
mov
icebp
add
dec
jecxz
cmp
xchg
sti
xor
mov
cmp
mov
cmp
fstl
popa
push
les
notb
cmc
aad
cmpsl
cmpb
pop
mov
pop
push
ret
xor
test
inc
dec
ljmp
jae
fisttpl
popf
xchg
inc
or
mov
fsubrl
xchg
loope
in
xchg
js
popf
xchg
push
jb
outsl
xchg
push
jae
mov
in
fldt
out
push
or
or
fistl
jns
jge
daa
mov
sbb
inc
js
out
sbb
adc
ss
xor
cmp
in
push
and
xchg
popa
enter
or
or
dec
arpl
gs
mov
pushf
stos
cli
dec
pusha
cltd
xor
adc
mov
ret
sub
roll
push
mov
mov
leave
xchg
pop
rorb
rorl
push
adc
fcom
pop
aam
or
mov
sahf
fs
jns
inc
mov
and
fnstsw
lods
mov
xor
imul
push
dec
xchg
lcall
sbb
pop
in
sbb
push
aad
pop
xchg
adc
sub
jnp
rorb
mov
dec
or
add
pop
mov
push
mov
xor
xchg
sbb
fdivrs
ja
mov
inc
int3
pop
fwait
mov
mov
xor
outsb
popa
lds
pop
adc
sub
and
lea
daa
add
inc
call
mov
shl
std
mov
jg
cmp
mov
sbb
popa
test
jb
inc
push
sti
mov
cmp
or
sub
jnp
popa
sub
sub
fnstsw
push
scas
mov
clc
in
sti
pop
add
outsl
insb
mov
pop
leave
jmp
and
pop
sbb
xchg
or
data16
insb
lods
pop
jge
or
sub
sarl
mov
ss
sub
xorb
sub
loope
pop
adc
jp
add
rcll
sbb
mov
sbb
out
cli
popa
push
add
int3
notl
jno
lahf
sub
fwait
js
pop
into
jns
lahf
cwtl
imul
std
icebp
in
adc
lret
xor
jnp
dec
pop
cmp
je
push
inc
mov
xchg
or
je
inc
lods
mov
sub
mov
enter
ljmp
shrb
jl
xchg
mov
loopne
scas
inc
fdecstp
or
pop
add
inc
xchg
aas
fsubrs
sbbb
inc
aaa
fs
fldt
movsl
leave
or
bound
add
add
icebp
dec
fcoml
inc
jecxz
sbb
sub
gs
dec
arpl
jecxz
or
xor
fcompl
imul
push
repnz
inc
cmpsl
test
andb
and
test
sub
aas
adc
mov
popa
andl
cmp
out
sub
pop
jno
mov
in
bound
lock
aad
dec
jmp
mov
add
dec
icebp
mov
inc
add
sub
popa
dec
xor
inc
stos
sub
es
cmp
add
add
rcrl
push
movsl
fucomi
mov
and
pop
out
xchg
or
jnp
mov
mov
lods
add
adc
test
push
mov
call
arpl
mov
scas
lock
out
sbb
imul
xchg
inc
cmc
xor
add
test
aaa
mov
mov
inc
inc
subl
cmp
insl
dec
in
pop
or
inc
cltd
pop
fldt
mov
in
sub
in
ljmp
sub
cli
or
sub
cltd
jmp
xor
push
rorl
decb
jmp
rcl
roll
xchg
rcl
push
inc
mov
shrb
fs
loope
cld
and
jmp
cmp
dec
loop
inc
lock
xchg
mov
lcall
out
push
pop
call
xchg
push
mov
xor
jge
xchg
mov
stos
imul
pushf
mov
adc
sbb
dec
sbb
cmc
mov
push
popa
test
xor
subl
in
inc
aaa
pop
stos
lret
ds
and
les
push
xchg
lcall
lock
sub
xchg
movsb
cli
pop
addr16
icebp
pusha
xor
xchg
mov
int3
push
dec
cltd
mov
xchg
or
dec
xor
xchg
push
jo
jnp
aas
out
fbstp
fs
pop
cmp
jbe
xchg
outsb
jae
mov
lret
outsl
and
pop
or
lea
int
or
mov
cmpl
out
jae
sti
cmp
clc
notb
gs
xchg
sbbb
pop
cmp
scas
fidivs
push
leave
movl
hlt
movsl
mov
pop
in
mov
pop
imul
push
mov
aas
shlb
and
in
sbb
pusha
das
inc
pop
loop
leave
add
xchg
cmp
leave
xor
ja
inc
pop
mov
mov
cmp
stc
push
cwtl
push
inc
pop
inc
nop
lret
adc
jae
jae
in
movsl
cmp
jp
in
aaa
imul
addl
mov
jnp
std
jo
sub
push
and
scas
ret
nop
add
xchg
out
loop
fistpl
sbb
lahf
or
mov
test
jmp
std
es
xchg
clc
aam
stos
cwtl
daa
fwait
daa
daa
mov
inc
aam
fistpll
mov
push
arpl
jno
daa
add
cld
fs
cld
dec
lcall
std
and
pop
shl
adc
mov
dec
adc
jecxz
aaa
addr16
or
adc
lods
push
aaa
cmc
mov
sbb
inc
push
lahf
outsb
sub
std
data16
cmc
cltd
xchg
sbb
jmp
in
sbb
js
xchg
sub
mov
push
test
push
adc
or
or
push
aam
pop
fstpt
mov
and
adc
and
mov
sahf
imul
std
add
and
or
mov
shlb
mov
gs
insl
adc
popa
pop
sahf
lcall
subb
movsb
sub
mov
or
fstpt
xor
sub
repz
test
out
mov
pop
cli
sub
scas
mov
jge
sbb
clc
jne
mov
xorb
dec
push
jae
lret
push
xchg
or
xchg
mov
into
sub
test
cld
inc
lea
jl
pushf
sub
ja
rorb
roll
adc
jns
lret
lcall
mov
fwait
cmpl
add
mov
scas
cmp
movsl
loopne
cs
iret
sbb
daa
sbbl
cmp
pushf
and
ret
mov
ficoml
daa
inc
dec
loop
mov
xlat
std
clc
push
ja
lods
xchg
shll
fcomps
ljmp
xor
addb
jecxz
inc
sub
or
sub
nop
xchg
aas
sbbl
stc
xchg
icebp
lahf
aam
fwait
cmpsl
out
mov
sub
mov
aaa
test
inc
sbb
pop
xchg
mov
xchg
js
lods
fnstenv
sbb
and
xor
push
mov
loopne
mov
jb
popa
mov
mov
sub
roll
inc
dec
ret
jge
int3
repz
mov
and
xchg
add
repnz
lods
cld
insl
sub
std
in
xor
cwtl
mov
push
loopne
loop
dec
cmp
pop
mov
pop
pushf
add
in
sahf
and
jle
jae
dec
or
scas
dec
xor
addl
pop
mov
popa
sub
pop
gs
mov
loopne
sub
add
int
insb
into
inc
in
mov
mov
into
xlat
mov
xchg
loopne
das
pusha
pusha
int3
sub
cmp
pop
js
sbb
test
cs
dec
dec
dec
clc
or
jg
push
and
mov
mov
jae
jmp
test
std
and
ljmp
bound
cmp
add
push
test
sub
pusha
arpl
xor
xor
xchg
or
adc
adc
fcmovne
aam
pop
jo
mov
aad
gs
mov
mov
pop
sub
scas
in
pop
data16
fwait
pop
lods
sbb
sub
cld
jle
fs
sub
daa
add
ss
xor
loope
hlt
jg
imul
iret
xchg
cmp
xor
xorb
jle
ljmp
out
push
push
inc
mov
inc
test
adc
pop
jle
sti
insb
or
inc
mov
insl
popa
pop
cmpl
jae
popa
mov
sahf
push
stc
inc
mov
dec
addl
mov
adc
cmpsb
mov
lock
loop
inc
loope
xchg
popf
mov
sbb
shll
add
and
sub
scas
add
push
sbb
or
jno
jno
inc
sub
lret
xchg
dec
stos
jge
mov
les
adc
int3
jb
dec
cmp
dec
insl
push
rclb
mov
jl,pt
pop
dec
ss
dec
andb
out
fldcw
out
xchg
fwait
test
push
je
dec
in
push
mov
inc
mov
mov
gs
stos
inc
mov
push
pop
jp
aaa
mov
out
stos
mov
adc
inc
data16
cmp
push
mov
inc
sub
loop
xor
mov
xchg
sbb
js
ljmp
mov
xor
mov
and
or
and
lods
xchg
fst
push
xchg
out
xchg
and
pop
pushw
adc
add
dec
in
mov
shl
xchg
out
mov
push
cmc
add
rcll
ret
rorl
out
jl
cmpsb
push
pop
mov
arpl
adc
outsb
mov
idivl
sub
xchg
push
fcomip
pop
fnstenv
sub
lahf
push
add
outsl
sti
jb
cmp
es
fcmove
test
lock
jp
cmpsb
test
data16
clc
popa
jmp
jno
data16
push
adc
cmpb
rcll
jne
out
adc
xor
pop
test
roll
fucom
loop
and
cmp
ja
jecxz
loopne
nop
and
push
cmp
mov
inc
mov
fsubrl
cmp
rolb
xor
jle
mov
ljmp
lret
cmp
sub
shr
stc
pusha
outsb
in
cmc
lods
mov
pop
lock
fildl
bound
dec
repz
pop
clc
int3
inc
mov
je
add
in
xor
add
mov
and
jbe
out
test
pop
test
rcll
jbe
mov
addr16
jp
and
inc
add
lds
mov
mov
dec
mov
ljmp
sub
push
xchg
push
test
dec
pushf
dec
or
adc
xor
jl
repz
inc
aaa
lcall
pop
loop
dec
inc
lods
adc
push
das
ret
inc
push
enter
popf
add
xor
jg
jmp
mov
mov
jp
sbb
xchg
addb
mov
hlt
xor
xchg
dec
fimull
insl
int3
and
pop
pop
popa
rcl
push
fs
mov
stc
pop
add
pop
pop
sbb
pop
jne
sub
add
cld
push
jne
loop
mov
jae
aam
mov
stos
jno
mov
repnz
mov
pop
pop
fmul
or
dec
pop
jb
pushf
frstors
popa
leave
out
sub
insb
xchg
xor
cmpsl
in
add
loop
hlt
pop
push
xor
dec
sub
jp
repz
mov
xchg
stos
pop
cmp
jmp
and
xor
xor
or
ljmp
mov
inc
es
cmp
call
loope
sub
and
testb
scas
shll
jmp
sahf
in
sbb
lret
add
lret
enter
push
insl
test
mov
mov
or
pop
mov
mov
loopne
jno
aaa
or
imul
jp
mov
xor
in
daa
inc
lds
mov
mov
dec
in
mov
outsb
in
aam
dec
out
stc
cltd
fcmovnb
lods
mov
jmp
sbb
insl
pop
cmc
test
sti
loope
test
das
lahf
cmp
gs
orl
and
pop
cs
push
push
cmp
sub
and
das
popa
mov
repz
icebp
addb
fistl
loope
nop
cmovae
add
in
mov
orb
out
aad
mov
lods
xchg
push
fwait
into
rorb
lea
mov
stc
mov
pop
xlat
sub
lret
cmpsl
repnz
pop
sahf
pushw
sahf
clc
leave
lds
shll
or
cmp
inc
xlat
cmp
xchg
push
xor
lret
inc
filds
or
in
pop
daa
stc
dec
xchg
sbb
adc
mov
sti
ja
mov
sbb
inc
pop
lds
adc
dec
mov
sbb
xorl
inc
stos
into
scas
add
pop
mov
xchg
xor
lret
lret
mov
mov
flds
loop
movsl
lods
popa
lea
pop
nop
mov
xchg
sbbb
push
lds
mov
or
in
xor
in
int3
add
fdiv
cli
adc
ljmp
enter
and
call
mov
movl
imul
add
sahf
dec
testb
inc
mov
dec
or
adc
mov
cmp
xchg
push
mov
idivb
sbbl
daa
mov
pop
cmpsb
lret
pop
lret
repnz
dec
pop
pushf
inc
lret
lods
inc
pop
xor
cli
rcr
sti
inc
ss
dec
outsl
push
pop
xlat
lods
jns
fbld
mov
xchg
loopne
dec
faddl
push
stos
aam
add
aad
cli
jns
imul
stos
scas
mov
mov
dec
imul
xlat
and
scas
pop
scas
movsb
adc
or
pop
adc
mov
xlat
out
pusha
jmp
adc
test
or
stc
scas
xor
push
sbb
fwait
sub
adc
pop
jns
clc
xchg
mov
mov
xchg
js
or
addb
cltd
neg
xchg
dec
je
xchg
rcl
mov
stos
lea
jge
sti
mov
pop
and
push
test
jno
adc
xlat
inc
lds
test
push
inc
fs
adc
aad
mov
mov
bound
test
pop
or
icebp
iret
loop
sub
mov
mov
xchg
dec
pop
stos
xor
js
inc
mov
xor
js
insb
out
leave
jge
sub
dec
cmpsb
scas
in
arpl
pop
xchg
jg
mov
sub
push
cs
pop
aaa
stc
xor
mov
or
jg
cwtl
in
loope
jmp
imul
enter
out
fwait
stc
sti
in
mov
gs
clc
pushl
push
lods
adc
sbb
xor
sti
stc
aaa
xchg
add
jb
cmp
inc
into
lds
std
xchg
outsl
cltd
add
and
cli
jecxz
movsl
adc
sub
test
insl
iret
xchg
sti
mov
pusha
fisubs
mov
fwait
cwtl
sub
rclb
and
or
lahf
repz
lods
dec
cld
dec
shll
inc
lahf
dec
mov
dec
pop
cmpsb
test
les
and
adc
aaa
mov
rol
push
movsb
gs
outsb
pusha
inc
clc
mov
pop
test
or
add
sub
xlat
xor
or
mov
out
fmull
xor
add
and
adc
test
sti
inc
xchg
arpl
mov
xor
sub
pop
mov
push
add
das
push
aam
pop
out
sarb
pop
nop
scas
pusha
lock
xor
decl
ret
out
inc
pop
pop
mov
mov
aam
mov
clc
rcrb
mov
in
push
cs
into
loope
iret
mov
test
les
jne
xchg
cmc
inc
sub
hlt
push
lret
aam
pop
jb
and
mov
test
push
loope
mov
ljmp
adc
fwait
bound
jge
je
jp
imul
mov
jg
int
js
mov
add
jecxz
sbb
arpl
jmp
add
cmp
jae
pop
jnp
adc
and
repnz
mov
jge
xor
inc
ret
mov
and
push
cld
cwtl
idivl
iret
cmp
sub
hlt
and
push
adc
fwait
cmc
jl
add
jno
cmp
dec
sarb
fmuls
testl
into
pop
movsb
pop
xchg
jns
sbb
imul
sahf
sbb
cli
mov
sub
sahf
sub
clc
or
pop
xchg
push
andb
xchg
iret
aam
mov
inc
cmp
mov
inc
xchg
jmp
adc
test
sub
jg
jns
ret
push
pop
lock
cmp
mov
test
loop
ss
popa
jb
mov
aaa
sar
sbbl
sbb
ret
in
loopne
lock
imul
popf
loope
aas
pushf
ficoml
mov
repz
test
cltd
xchg
mov
fs
inc
scas
movsl
test
imul
ret
jne
jae
dec
fst
testb
sbb
dec
mov
insl
jle
push
mov
or
and
sbbb
adc
cld
in
std
mov
lahf
cmp
ss
das
add
inc
xorl
xchg
sub
loopne
dec
orl
sbb
pop
scas
out
add
jmp
sbb
dec
mov
dec
mov
rorl
adc
lods
lock
push
sahf
test
aam
jecxz
lcall
add
out
movsb
das
mov
or
xchg
std
mov
adc
icebp
dec
pop
lds
fcoml
xchg
arpl
int3
fldenv
rcrb
xchg
lds
push
push
aas
adcl
pop
test
sbb
xor
dec
clc
mov
test
dec
mov
divb
mov
ja
shl
in
stc
or
adc
sbb
cli
insl
faddl
pusha
lcall
aaa
push
inc
rolb
stos
nop
out
jb
imul
lock
cli
out
jg
lahf
lcall
lods
pop
and
push
mov
movb
push
sbb
dec
lret
out
mov
repz
push
loopne
mov
inc
pop
out
ss
ljmp
test
cmp
test
xor
scas
xchg
sarl
and
stos
and
inc
test
dec
insb
push
mov
out
sbb
mov
inc
jne
push
mov
or
les
mov
cmpsb
loope
fwait
in
jmp
xor
xchg
dec
mov
stos
xor
cmc
cmp
pop
dec
push
loopne
and
sub
lea
sub
xor
inc
add
popf
mov
fsubrs
push
adc
mov
jae
iret
call
lods
stos
mov
pop
cwtl
ds
dec
leave
push
cmp
jp
scas
push
xchg
insl
mov
or
rolb
or
mov
arpl
cmp
mov
sysexit
mov
cmpsl
fstp
or
mov
push
pop
les
in
lods
js
push
dec
mov
fstpt
and
adc
pop
sub
out
cli
ds
mov
hlt
inc
fbstp
popa
and
rcrb
lahf
pop
sbb
push
js
mov
aas
mov
xchg
mov
or
pop
jno
gs
xchg
push
xchg
lahf
shll
sar
out
movsb
add
lcallw
add
sbb
aaa
sub
inc
and
add
mov
notl
xchg
add
xlat
arpl
mov
lahf
push
add
cli
ficoml
cli
imul
adc
filds
pop
scas
pop
ret
cmp
push
jp
int
insl
pop
jns
xor
pop
mov
filds
stc
sub
icebp
xor
xor
mov
jmp
fs
clc
ds
sub
outsl
f2xm1
dec
sbb
imul
jp
xchg
pop
cld
add
push
cltd
icebp
jb
shlb
inc
insb
rorl
jmp
ret
adcb
dec
mov
pop
in
sub
push
orl
pop
test
xchg
imul
inc
xor
cs
lods
mov
enter
pop
loope
movl
xor
or
jmp
inc
stos
mov
ss
mov
fs
pop
fildl
xchg
outsl
sub
sbb
in
inc
mov
clc
and
xchg
inc
lods
imul
push
call
push
data16
sbb
fucom
push
sub
pop
test
orb
jae
sbb
xchg
or
insb
mov
mov
shlb
push
pop
cltd
mov
clc
jae
and
lods
les
test
or
xor
sbb
cmpsb
or
nop
mov
sub
insl
icebp
push
sub
aas
fstps
insb
cmp
out
cmp
sub
jg
mov
cld
movsl
xor
ljmp
mov
arpl
mov
mov
or
xor
mov
cmp
jle
pop
add
push
xchg
push
dec
ja
jmp
cmc
loopne
clc
xchg
sbb
nop
pop
push
dec
clc
daa
pop
cmpsl
push
sbb
push
push
insl
nop
jb
cmpsl
clc
jbe
not
movsl
ljmp
jne
aas
orb
repz
jne
repz
out
jne
repnz
int
xchg
mov
mov
jg
test
jg
jmp
dec
mov
or
in
jno
mov
mov
sbb
sub
push
rcrl
dec
insb
pusha
sti
lock
stc
int3
lahf
aad
cwtd
loope
cmpsb
lods
ds
mov
gs
pop
jecxz
out
loope
popf
scas
and
push
cmp
or
je
dec
rcr
rorb
or
incb
leave
call
stos
cltd
lret
adc
push
aaa
ds
sub
xor
adc
in
gs
cmp
loope
cld
scas
push
aas
jecxz
ret
sbb
mov
int
and
xor
jne
xchg
sahf
out
xor
mov
nop
mov
sahf
loop
xor
sub
xchg
mov
push
mov
movsb
loop
lds
mov
mov
test
std
pop
loopne
mov
lret
jnp
lock
mov
cld
mov
aam
in
iret
mov
sub
hlt
dec
jg
cmp
sub
lcall
cmp
or
and
icebp
repz
add
jno
xchg
inc
cmc
mov
stos
sub
push
pusha
xchg
jge
add
shrb
jecxz
jl
mov
jbe
mov
jne
filds
lret
mulb
lods
mov
mov
sub
sub
xchg
loopne
mov
fwait
xchg
jecxz
fildll
jp
cmp
pop
int3
movsl
push
cmp
xchg
pop
mov
pusha
ljmp
cmpl
sahf
sbb
inc
add
cwtl
sbb
add
pop
sbb
js
jno
movsb
cmc
add
mov
add
je
insl
mov
jno
scas
add
imul
xor
aam
adc
add
push
sbb
add
jp
adcb
fiaddl
out
push
ljmp
fisubl
sbb
mov
sub
aad
enter
mov
or
orb
movsb
sbb
xchg
and
pop
lahf
test
xor
insb
ja
fucom
adc
push
pop
add
out
xor
mov
push
pushf
jne
pop
scas
loop
add
sub
jbe
arpl
outsl
lcall
jb
fucomi
mov
mov
bound
lahf
mov
xor
inc
sub
mov
and
insb
push
pop
pop
sahf
jno
enter
lods
movsb
add
addb
rol
movsb
sub
shll
cltd
adc
insb
or
scas
jmp
sbb
sbb
out
insl
and
or
loop
arpl
mov
and
mov
pop
mov
ds
std
push
push
xchg
and
inc
clc
orb
dec
je
sub
pop
daa
bound
cmp
add
mov
aas
loopne
out
aad
in
cmp
sbb
testb
es
repz
in
iret
xor
mov
xchg
jg
rcl
bound
pop
mov
push
ja
xchg
scas
jo
mov
in
aad
or
imul
dec
xor
sub
ja
push
les
jle
lcall
fdiv
cmpsl
cmp
orb
test
mov
dec
jo
outsb
push
sub
clc
iret
jecxz
leave
jmp
pop
pop
mov
sbb
popa
imul
add
pop
cmp
pushf
cwtl
or
pop
jne
repz
cltd
fldt
pop
test
xchg
inc
inc
rclb
shll
or
jb
jnp
pop
sub
mov
inc
lods
ret
push
or
jl
sti
lahf
adc
insb
loopne
ss
jno
mov
push
cmp
xor
sub
xor
rclb
aaa
mov
and
pop
imul
add
jbe
sbb
mov
inc
inc
or
pop
outsb
test
push
push
jle
hlt
sbb
test
jb
or
mov
insb
mov
cmc
add
mov
cltd
test
clc
xor
pop
jp
stos
fstpt
out
cmpsb
push
add
roll
jns
pop
outsb
sub
sub
test
test
adc
adc
in
insb
push
pop
and
lock
leave
notb
sub
mov
push
push
and
xor
sub
mov
call
cmc
ret
mov
pushf
fmull
scas
out
fidivrs
sbb
mov
ret
and
aaa
jecxz
xchg
xchg
inc
dec
jge
xor
sbb
dec
inc
mov
movsb
fildl
jo
inc
pop
popa
pop
xor
ficoms
lcall
jno
inc
in
push
lea
ja
sbb
data16
mov
mov
mov
push
in
clc
mov
pop
xchg
fcomps
adc
roll
sub
pop
push
mov
repz
mov
cli
cmpps
mov
pop
jne
or
out
and
fdivp
ror
inc
cwtl
lds
imul
shl
mov
pop
aas
mov
xchg
xor
cmp
idivb
sbb
jge
cmpsb
xchg
xchg
js
jecxz
mov
jo
ja
push
imul
mov
jge
jecxz
and
movsb
daa
jmp
shll
sub
mov
rolb
add
icebp
loope
pop
out
fstl
pop
pop
jmp
mov
fwait
jl
lcall
xor
adc
adcl
adc
jae
pop
xor
pop
movsb
popa
fidivrl
bnd
cwtl
push
xchg
xchg
and
inc
mov
xchg
xchg
mov
mov
loop
test
insb
out
jbe
nop
lahf
dec
inc
xchg
mov
xchg
pop
adc
push
adc
mov
cmp
inc
sub
pop
mov
in
xchg
lock
cmc
hlt
aas
stos
xchg
in
adc
pop
or
xchg
inc
hlt
jnp
out
aam
arpl
jae
sub
mov
xorl
dec
cmpsl
jnp
inc
into
push
inc
stc
cmp
jo
add
pushf
fldt
mov
mov
or
adc
in
mov
lahf
xchg
and
and
sub
lret
nop
xchg
cs
push
pop
rclb
mov
adc
fcmovbe
inc
dec
inc
in
fcomip
sbb
xlat
fbld
dec
mov
daa
inc
mov
jo
add
and
jo
mov
pop
sub
ret
sbb
adc
xor
rcrl
nop
insb
fldt
push
adc
cltd
sarb
ror
and
fmull
sub
adc
sub
addl
sub
addr16
lret
xchg
mov
fcompl
outsl
or
lock
sub
xor
push
push
cli
jbe
or
jae
ret
xor
adc
fcoms
xor
sub
aaa
fisubs
sti
mov
push
cmp
push
popf
add
lret
enter
shrl
repz
xor
outsb
aaa
orb
in
inc
dec
and
mov
cwtl
jae
mov
cmp
cmp
leave
fidivrl
inc
push
cli
push
pop
pop
lea
test
stos
or
sbb
add
shl
adc
sub
mov
xchg
jne
and
sti
or
shr
or
icebp
ljmp
cmc
rcl
fldcw
push
and
test
sbb
lods
jb
inc
or
push
cld
adc
les
imulb
sub
ret
fcompl
and
icebp
pushf
jmp
sti
les
aam
xor
jl
and
inc
adc
push
lahf
xchg
std
scas
dec
sub
cmp
xchg
add
addb
data16
mov
outsl
or
jo
test
jb
push
scas
cmp
lds
bound
xchg
xchg
and
aaa
add
in
mov
push
popa
stc
or
rol
sti
dec
call
sbbl
jle
adc
add
pop
sahf
dec
cli
icebp
in
xor
repz
mov
inc
loopne
xorb
repnz
icebp
and
jg
lahf
xor
movsl
movsl
dec
pop
sub
inc
inc
scas
inc
push
cmpsb
cmp
or
mov
and
xchg
dec
dec
mov
push
cmp
lea
or
loop
add
inc
mov
and
mov
xlat
fcmovbe
in
and
fildl
mov
and
sub
mov
mov
or
into
aam
xchg
repnz
into
mov
sti
test
loope
out
clc
mov
aas
lds
insl
mov
fcompl
mov
addr16
rep
pop
jecxz
inc
scas
lock
scas
cld
int
std
out
xor
nop
mov
xchg
xchg
roll
daa
cli
and
cmp
jnp
cmp
repnz
out
sbb
adc
cmp
and
adc
sti
dec
xlat
repz
adc
adc
mov
out
jns
sti
arpl
mov
ljmpw
jno
les
pop
sub
push
es
add
mov
jns,pn
in
loopne
dec
out
pop
incl
lods
xchg
jo
cmp
xchg
xor
shrb
sbb
popf
bound
cmpsl
test
cmpsb
sub
icebp
je
or
inc
aam
pop
sub
ja
dec
xchg
repz
daa
movsl
nop
mov
arpl
or
mov
jmp
nop
mov
xor
mov
cmpsl
and
xchg
imul
add
push
pushf
pop
jl
mov
add
ja
xchg
arpl
fwait
xor
xchg
push
cmp
add
mov
cmpsb
mov
clc
sbb
je
andl
lret
dec
jg
shlb
jecxz
add
movsb
cmpsb
sbb
pop
or
ret
xchg
ds
xchg
add
mov
pop
push
sbb
adc
sbb
and
aam
call
repz
sarb
fwait
sahf
adc
test
movsl
mov
cs
and
sub
inc
out
lea
in
imul
loop
push
dec
aaa
inc
and
lea
and
int3
movsl
pop
daa
cmc
mov
divl
xchg
push
icebp
mov
push
testb
arpl
jo
or
cmp
cmpsl
fisubrl
xor
popa
push
enter
test
mov
dec
mov
mov
add
arpl
fbstp
stos
sbb
fists
jg
hlt
xchg
xchg
js
iret
xchg
adcl
lds
loop
out
roll
xchg
cmp
loopne
add
test
call
sbb
add
pop
adc
dec
cmp
jno
push
test
iret
int3
cmp
xor
xchg
mov
xchg
push
sti
pop
pusha
mov
ret
dec
leave
je
inc
lock
jne,pn
dec
gs
sbb
xlat
sbb
jbe
aam
fs
jmp
cmp
aad
cwtl
fsincos
jnp
and
xor
lods
cmp
scas
lret
add
sbb
xor
cmp
xchg
jl
add
mov
mov
sub
jle
xor
insl
push
mov
sbb
es
movsb
xor
icebp
fstpt
std
mov
loopne
aam
xchg
dec
fdivs
repz
popw
pop
cmp
test
stos
mov
add
sub
test
outsl
hlt
pop
mov
movsb
lock
lods
lods
add
inc
roll
adc
fwait
dec
mov
imul
outsb
sub
popl
imul
xchg
out
add
daa
dec
dec
hlt
mov
adc
sub
xor
aad
mov
rclb
xchg
adc
push
pushl
add
adc
mov
mov
rcrl
addr16
jbe
icebp
push
rolb
xlat
push
xlat
mov
pop
cmc
or
push
or
pop
and
scas
insl
mov
push
popf
push
xlat
fnsave
std
lds
fdivl
mov
fsub
mov
mov
pop
add
cmpsb
xchg
inc
sbb
xor
jne
bound
into
pop
fcmovnu
cmpsl
jle
xchg
inc
shrl
sahf
shrl
xchg
pusha
test
out
xorl
mov
lods
xor
mov
mov
pop
fisttpl
loop
add
cmp
pop
jge
or
or
sbb
adc
mov
mov
push
mov
repnz
mov
cltd
jae
cmpsl
or
sbb
adc
test
lret
sub
aad
or
ss
or
stos
xlat
hlt
cli
xor
lock
jg
jns
pop
dec
xor
sbb
xorb
and
xchg
mov
test
add
in
adcb
in
mov
movsb
movsb
xchg
mov
xor
jnp
mov
mov
fnsave
in
imul
xlat
or
dec
cwtl
dec
dec
mov
mov
add
jmp
ret
or
test
call
pop
adc
stos
out
mov
mov
movsl
imul
into
xor
fdivl
xchg
loopne
ret
stos
enter
pop
clc
ss
sbb
inc
out
cld
add
scas
jge
xor
loop
insl
xor
fucomi
out
jecxz
adc
inc
fildl
xchg
mov
cld
dec
xchg
mov
jg
popa
add
cmp
push
int
test
insl
mov
mov
jmp
push
je
cmpl
xor
addr16
ret
lods
mov
and
jge
and
jb
icebp
enterw
mov
xor
call
pop
sbb
inc
ret
push
call
arpl
cmp
fisubrl
push
js
xor
jl
pop
lods
fcmove
ljmp
jns
sub
xchg
push
xor
cs
sbb
adc
mov
mov
rolb
lret
movb
or
cltd
mov
mov
call
lock
push
outsb
fildll
xchg
int3
dec
mov
loope
fildll
xor
jne
pushl
fwait
mov
pop
sbb
dec
cwtl
xor
mov
sub
js
insl
int3
hlt
sbb
sbb
push
cmpsb
ret
sub
jecxz
fadd
imulb
cli
or
es
jge
xchg
andb
out
cwtl
or
lock
xlat
push
idiv
pop
jno
sub
mov
mov
xor
xchg
je
cltd
mov
aaa
mov
dec
sub
outsb
lods
cmp
adc
jne
repnz
stc
insb
push
xor
into
lcall
lret
cs
inc
mov
jbe
xchg
loopne
movsb
adc
jle
insl
leave
pop
scas
xor
pop
es
push
in
or
cmp
add
add
mov
lds
push
dec
pop
call
xchg
or
sub
outsl
xor
and
imul
in
cltd
pop
clc
pop
in
lcall
popa
push
andb
jne
xchg
std
lret
or
adcl
mov
jg
shl
gs
movsl
xor
ss
es
addr16
sub
inc
testb
rclb
enter
pop
movsl
cmp
sti
and
adc
testb
je
sub
xor
jle
test
add
movsb
or
repnz
imul
mov
int3
lret
addr16
cmp
mov
sub
test
sub
orb
xor
mov
stos
push
add
aam
pop
jno
jecxz
pop
in
mov
enter
mov
into
sahf
icebp
fidivl
mov
sub
jle
clc
sbb
popa
pushf
packuswb
add
xchg
mov
cmp
mov
ss
mov
mov
push
lahf
push
je
mov
lock
mov
pop
sub
mov
xor
out
add
in
jecxz
testl
mov
cwtl
xchg
mov
lods
push
mov
push
add
leave
push
cwtl
mov
adc
sbb
dec
push
jne
outsb
cwtl
out
hlt
xchg
out
stos
cmp
and
out
sbbb
jge
cld
adc
push
push
xor
imul
xor
pop
push
int3
jae
add
adc
out
pop
xchg
mov
push
cmp
dec
lcall
fwait
add
das
pop
push
out
mov
dec
jno
sub
push
or
out
mov
shll
sti
outsb
pop
test
cmp
xor
mov
into
jmp
cwtl
and
jo
cs
add
mov
sarb
push
test
scas
inc
jns
mov
pop
roll
and
arpl
cltd
add
push
pusha
sbbl
push
daa
ret
les
mov
cmp
lcall
sbb
or
inc
roll
out
out
jge
ret
sub
pop
xchg
pop
cld
mov
daa
mov
xchg
fs
imul
inc
dec
pop
or
stos
aaa
xchg
cmpsb
xchg
repnz
std
add
call
addr16
shlb
cmc
stos
cwtl
das
sbb
cltd
outsl
inc
movsb
xorb
adc
ret
xchg
cli
data16
rcrl
in
sub
sub
stc
call
sbb
inc
loopne
mov
cmp
jne
cmp
mov
in
popf
call
jmp
insl
mov
fisubs
pop
and
in
mov
mov
fnstsw
insl
xor
sbb
cmp
adc
adc
xor
mov
out
dec
mov
rcrb
inc
cld
jmp
loope
xchg
ret
or
ret
pop
mov
pop
push
xor
movsb
scas
punpckhbw
mov
fwait
or
add
sahf
push
insl
addr16
sbb
pop
push
or
and
mov
mov
jbe
sbb
xlat
inc
xchg
push
fsubl
flds
out
xchg
std
movsb
jo
lds
ret
cmc
inc
inc
cltd
mov
cmpsl
mov
sub
mov
in
call
inc
jo
jb
ds
mov
xor
add
jl
pop
xchg
cmp
and
and
rcl
push
jno
push
movsb
mov
les
pop
pop
insl
movsl
pop
jae
subl
scas
fisttps
popf
adc
fsubr
jae
sbb
inc
xchg
js
mov
aam
xor
test
cmpl
push
inc
xchg
popa
ret
insb
rcl
pop
sti
pop
mov
jp
push
mov
push
sub
std
cmp
repz
and
in
adc
ret
dec
rolb
or
xor
cmp
xchg
and
das
stos
adc
xor
xchg
mov
cmpsb
enter
imul
into
addr16
iret
jg
mov
int
test
xchg
xlat
inc
cmc
ja
jge
movl
lahf
sub
xchg
les
aas
stos
cmp
push
out
push
daa
mulb
roll
sub
lahf
sub
mov
add
mov
cmp
insb
fists
popf
ljmp
xchg
mov
adc
adc
push
adc
cmpsl
push
test
sbb
addl
mov
std
mov
push
push
test
pop
call
mov
out
xchg
js
es
mov
cmp
lods
hlt
aad
dec
popa
inc
inc
daa
jae
jbe
sub
lret
mov
push
mov
in
test
aam
mov
fistps
jb
aam
imul
xchg
cmp
repz
mov
pop
mov
or
xor
sbb
icebp
cmp
inc
xor
push
add
adc
lea
sbb
ljmp
mov
mov
lods
clc
or
add
hlt
jns
clc
push
dec
roll
xor
test
or
adc
fldenv
mov
fcomps
xor
js
ljmp
mov
pop
es
dec
add
loop
cli
data16
cs
xchg
mov
dec
bound
mov
mov
inc
test
aaa
in
out
pop
lcall
repnz
and
int
sahf
mov
pushf
mov
push
cld
icebp
cwtl
call
pop
lcall
lock
test
cld
or
cmp
pop
hlt
pusha
add
in
mov
inc
dec
mov
imul
leave
mov
pusha
scas
dec
lods
jmp
add
ljmp
fildll
psrlq
or
repnz
ja
jl
ljmp
dec
mov
or
mov
pop
cmpsb
pop
pop
test
loopne
or
push
push
arpl
addl
adc
mov
bnd
xlat
mov
dec
dec
ret
dec
pushf
or
pop
cld
sbb
aaa
shrb
cmpsl
sub
pop
mov
fwait
in
sbb
mov
add
leave
inc
push
push
jle
mov
push
dec
cld
fimull
mov
jbe
jns
xchg
sub
xor
rcr
xor
lret
jl
push
dec
repz
jnp
sbb
pusha
xor
jle
sub
repz
xchg
adc
repnz
out
inc
rolb
insb
jo
subl
cmp
inc
cmpw
je
xor
mov
loope
push
jl
test
js
int3
fdiv
andl
fwait
mov
test
jecxz
or
sbb
pushf
in
jnp
clc
daa
mov
push
xor
shl
fistpll
pusha
dec
aam
fdivl
xor
pop
push
inc
add
jle
sbb
add
popf
jle
pop
imul
push
pop
scas
les
hlt
dec
hlt
jb
mov
push
outsb
mov
das
add
push
je
sub
jbe
adc
pop
xadd
inc
movsb
mov
std
aas
cmp
call
dec
or
scas
sub
dec
hlt
mov
ret
cmp
push
repz
mov
gs
pop
jmp
sub
lods
xchg
fdiv
mov
sbb
fcoml
int
cmp
sub
scas
and
mov
dec
and
jg
fcompl
sbb
repz
pop
sbb
sbb
xor
mov
in
push
mov
push
cmp
and
cs
addr16
pushf
jo
test
imul
pop
xchg
jmp
out
pusha
dec
cmp
cmpsb
aas
jecxz
ds
les
divl
fistps
mov
dec
popf
aam
es
xchg
js
mov
and
lret
fcmovnbe
pop
outsl
lds
jge
ljmp
sbb
roll
daa
sbb
add
mov
add
scas
notb
jge
movsl
or
repnz
mov
dec
inc
mov
push
dec
jge
lea
xor
or
hlt
mov
rcrl
ret
insb
push
fwait
aaa
insl
mov
sbb
das
cmp
jbe
enter
xor
fldenv
aas
mov
adc
fcoml
imul
and
je
cmc
sub
add
incl
ret
push
push
adc
test
cmpsl
jae
fdivs
push
adc
shrl
mov
sbb
push
mov
mov
dec
or
cmp
cmc
imul
and
pop
imul
xchg
push
xlat
loope
sti
orl
pop
sub
ss
fwait
mov
dec
push
cmc
push
insb
je
or
jbe
inc
repz
fldln2
xor
sti
mov
or
sahf
test
inc
arpl
inc
nop
in
ret
adc
jecxz
xlat
xor
inc
xchg
jp
sbb
or
adcl
mov
inc
inc
outsb
shlb
pop
rcrb
jl
mov
dec
pop
bound
popf
pop
fsubl
fnsave
hlt
xor
mov
mov
sti
aad
push
cs
mov
cmpsb
sub
leave
fiaddl
mov
loop
or
push
and
mov
lock
mov
and
add
push
and
push
and
mov
ds
movl
cmp
sub
xchg
mov
adc
push
inc
in
lods
sbbb
and
jbe
ss
xchg
xchg
sti
lock
inc
movsb
les
mov
int3
nop
inc
mov
mov
sbb
pop
pop
aad
aas
call
xor
xchg
fadds
adc
dec
loop
xchg
or
inc
and
mov
aas
fistpll
stos
jns
adc
out
leave
ds
sbb
jo
shlb
mov
adc
jo
loop
test
cmc
cmp
inc
in
je
sbb
pop
xchg
xlat
jecxz
xchg
sub
cmp
mov
pop
jmp
lock
orb
mov
add
mov
loop
dec
mov
mov
xor
call
or
mov
mov
inc
in
call
lock
add
pslld
repnz
testl
arpl
lea
and
pop
push
shl
pop
in
orb
jle
ss
cld
in
add
inc
inc
pop
daa
mov
iret
push
movsb
jl
jns
loope
stc
inc
mov
nop
fstl
pushf
cmp
std
and
xchg
ja
movsl
daa
xchg
div
arpl
pop
jecxz
inc
arpl
loope
int
mov
push
xchg
cmp
sub
sub
leave
or
es
in
jmp
cmc
xor
repnz
inc
loope
shlb
cmc
xchg
xchg
repnz
idivl
shlb
lahf
add
mov
cmc
add
mov
xchg
xor
clc
inc
jmp
add
addb
mov
push
arpl
in
inc
sahf
and
push
sbb
dec
cmp
mov
aaa
imul
mov
test
mov
mov
cmpl
test
repnz
pusha
filds
pop
jge
test
pop
cwtl
jb
pop
inc
ja
inc
sbb
cmc
cltd
into
push
mov
jne
sub
repnz
xor
or
fdivr
cld
lods
in
add
mov
stc
loop
out
pop
ficomps
shr
cmp
push
jae
addr16
cmpsl
test
sahf
push
push
aad
and
jmp
repnz
je
mov
or
adc
out
pop
mov
push
sbb
or
xor
pop
test
jge
clc
sub
cltd
cld
repz
stos
jl
lahf
sar
ja
cmp
fisubl
shll
decl
stos
ficoml
scas
movsl
xor
clc
sahf
pop
int
or
aad
cld
cmovnp
rorb
mov
ss
daa
mov
jbe
jne
xchg
jmp
jecxz
out
inc
lds
scas
add
push
pop
fxch
cmp
cmpsl
iret
aas
cmpsl
shlb
sbb
push
xchg
cmpsb
roll
repz
ja
leave
jmp
add
inc
xlat
es
push
inc
jne
popf
ljmp
jg
rclb
sbb
push
and
cmp
nop
add
xchg
mov
ret
lcall
lret
ficoms
leave
pop
dec
jne
sub
cmpsb
aam
icebp
repnz
loop
test
mov
decb
lret
push
ljmp
mov
sub
add
fs
push
clc
fldt
mov
jo
enter
and
jmp
and
mov
mov
gs
mov
xchg
sbb
and
push
inc
ds
mov
std
dec
test
test
jle
xor
fwait
jae
sbb
sbb
inc
mov
mov
ret
sbb
in
cwtl
aas
sbb
mov
test
push
cmp
imul
test
jmp
sbbl
push
and
and
outsl
cld
push
mov
insl
cmpsl
cmp
sahf
sub
stos
sarl
clc
sub
cmp
std
les
jl
sub
push
push
mov
je
cltd
xor
rclb
leave
mov
jge
fsubrs
aaa
loop
lcall
cmp
lahf
mov
inc
xchg
enter
fmull
aam
addb
mov
pop
rcl
popl
outsl
jb
dec
aaa
xor
mov
int
loope
sbb
notb
jae
in
dec
cli
addl
dec
ss
cmp
xchg
stc
mov
mov
lds
jno
fidivs
xchg
jae
addr16
dec
sub
xor
and
jbe
mov
xor
adc
mov
lret
icebp
push
psubw
jbe
nop
dec
in
aas
pop
add
js
add
enter
inc
mov
les
cmpsb
mov
push
push
ret
out
pop
mov
xchg
pop
loopne
jg
sti
push
daa
test
add
mov
jnp
fs
cli
pop
int3
loop
out
lret
cld
adc
fistps
ficoml
lcall
xchg
out
aam
inc
jp
xchg
mov
jg
pop
push
test
leave
sub
jg
mov
ret
xchg
pop
jge
das
push
cmpsb
in
lahf
mov
or
inc
in
cmc
xor
cmp
pop
xchg
lods
out
adc
es
stos
nop
aaa
test
pop
addb
sbb
xor
mov
sub
mov
fwait
add
push
loop
dec
or
filds
cmp
sbb
push
and
or
dec
mov
jecxz
ud0
add
mov
test
call
lds
and
loopne
cs
dec
ret
xor
xor
mov
cmc
flds
insb
and
add
sahf
aaa
in
iret
sub
das
shlb
lret
rclb
cwtl
jmp
icebp
cmp
xor
rolb
aad
and
jmp
cli
add
movsl
daa
clc
push
hlt
jmp
std
iret
and
cmp
int
jl
sub
iret
jg
mov
inc
orl
jge
mov
mov
pop
and
dec
aas
xchg
lret
mov
xchg
stos
mov
and
mov
insl
stos
aaa
lods
cmp
mov
int3
iret
or
and
in
xchg
adc
cmp
imul
dec
and
xor
xor
jge
test
push
sub
ljmp
movsb
sti
sbb
loopne
es
or
ret
and
ljmp
inc
jle
in
cmp
stc
xchg
nop
dec
adc
popa
mov
pop
xorl
in
xchg
sarl
push
filds
shlb
xchg
mov
daa
ret
sub
in
push
mov
cld
xor
xchg
inc
and
cld
sub
out
inc
es
pop
int3
clc
ljmp
xchg
and
sub
jp
mov
pop
push
fnsave
addr16
es
xor
aad
xor
pop
mov
xchg
pop
or
jbe
add
mov
mov
out
xchg
pop
pusha
cmp
pop
fdivr
icebp
adc
add
testl
fisubrs
mov
stos
loop
cmc
js
sahf
insl
cli
sahf
inc
and
lahf
out
mov
mov
ret
rclb
adc
jle
jns
add
mov
orb
loop
int3
add
push
sbb
sbb
leave
cmpsb
cmpsl
iret
add
js
add
insl
stos
or
mov
test
sbb
adc
cld
mov
push
jp
mov
xchg
ja
out
adc
inc
add
pop
js
adc
rcr
out
sub
xlat
jmp
mov
add
push
xchg
cmpsl
and
aas
cmp
addb
fbstp
sbb
aaa
jecxz
popa
push
mov
jecxz
inc
mov
add
add
rcrb
mov
mov
xchg
outsb
popl
lea
outsl
jp
rcl
or
xchg
pop
bnd
push
repz
push
push
adc
into
sbb
gs
and
xchg
lret
pop
jecxz
scas
and
xchg
cmpsl
out
mov
xchg
fcmovu
xor
cmpsl
aad
pop
lahf
adc
xor
imul
and
addr16
pop
insl
rclb
ret
xor
xchg
es
mov
jmp
sub
mov
scas
push
mov
mov
cwtl
mov
nop
dec
in
xchg
dec
xchg
in
sub
add
sti
sub
jo
loope
inc
enter
mov
out
es
in
mov
inc
aaa
add
dec
xchg
cmp
insb
cli
cmp
cmp
scas
mov
hlt
fiaddl
icebp
pop
xor
inc
or
sbb
and
adc
xor
cs
dec
inc
mov
sub
push
aam
mov
mov
jns
insb
push
add
adc
loopne
in
push
in
sahf
and
add
jg
in
js
ficoml
aaa
cli
test
push
sarb
lret
mov
jae
subb
jl
test
mov
shlb
pushf
mov
mov
daa
pop
xchg
pop
sub
daa
push
sub
add
dec
and
lods
and
mov
lods
or
inc
test
mov
lods
loope
mov
stos
xor
pop
or
add
pusha
mov
xor
cmp
dec
xor
inc
arpl
mov
push
in
aam
push
daa
add
add
pop
rorb
pop
dec
fsubl
lods
mov
insb
jge
out
shl
cwtl
mov
dec
pop
in
pushf
loop
or
lods
pop
testl
fistpll
ret
add
rcll
mov
add
sub
pop
pop
xor
mov
xlat
cmp
lods
stc
lret
push
xchg
mov
arpl
inc
movsb
dec
andb
lds
lahf
mov
and
cmp
jecxz
mov
push
adc
sub
js
sub
lea
mov
xchg
out
sarl
fs
mov
mov
mov
fisttpll
out
out
jp
or
and
pop
movsl
rolb
cmc
mov
push
pop
out
sbb
mov
rcrb
int
dec
sti
cltd
push
xchg
cltd
inc
xor
mov
mov
je
movsl
lahf
mov
jp
rcl
jmp
jo
jbe
sub
fstps
push
pop
pop
adc
daa
movsb
imul
dec
mov
sub
mov
inc
in
inc
int
inc
mov
push
pusha
aad
jmp
addr16
fucom
xor
sub
or
fwait
out
jmp
lds
adc
pop
fcoms
mov
fmull
gs
jno
lods
gs
stos
jp
xchg
lds
aas
jnp
out
adc
es
js
dec
popf
xor
sub
sti
xlat
outsl
rorl
inc
xchg
sbb
std
add
sbb
add
test
fs
pusha
hlt
fsubrs
out
sbb
inc
cli
mov
and
sti
jp
push
sbbb
mov
pop
mov
jns
mov
lds
clc
push
and
sub
test
adc
push
sahf
pusha
addr16
push
push
sub
mov
ret
mov
inc
pop
cwtl
cs
push
xorb
xor
sbb
dec
adc
js
mulb
cmovne
lds
test
loope
cs
add
and
cmp
ror
xchg
loop
lahf
mov
enter
cmp
and
xchg
lds
ljmp
pop
sbb
cltd
das
pop
cs
clc
xchg
adc
popa
mov
lret
mov
sub
hlt
inc
mov
mov
ja
fwait
negl
and
dec
aad
pop
dec
imul
loopne
adc
adc
enter
xor
inc
imul
jnp
rorb
test
sbb
in
rorl
loopne
or
jno
mov
insl
inc
insl
mov
std
int
in
daa
adc
mov
pop
out
addr16
scas
loope
pop
decl
mov
mov
push
xchg
ja
in
xchg
adc
or
jns
sub
clc
xchg
shr
mov
mov
les
mov
push
lock
adc
notl
or
pop
inc
push
mov
leave
mov
les
xchg
xor
shrw
or
es
out
mov
push
pop
xor
jnp
rol
aas
xchg
push
cmp
xor
jno
mov
or
ja
push
lods
call
lahf
pushf
clc
mov
jmp
sbb
xchg
loopne
dec
mov
xor
je
xchg
outsb
inc
xchg
dec
mulb
xor
rol
mov
push
push
sbb
mov
enter
out
popa
mov
inc
or
fidivrs
mov
xor
stos
jae
stos
jg
xchg
clc
mov
pop
outsb
stos
in
pop
mov
inc
fldt
xchg
jge
out
in
xchg
sbb
mov
jno
lea
inc
xchg
pusha
out
jns
loop
mov
sahf
aad
ljmp
add
sti
sbb
stos
in
inc
enter
xor
clc
mov
or
lret
scas
in
loop
cmp
push
test
pusha
out
fbld
rorb
xchg
or
fisttps
xchg
fisttpll
mov
in
jl
fwait
jl
ss
xchg
aas
repnz
fs
and
jecxz
imul
sbbl
sub
ret
pop
and
aas
pcmpeqw
and
mov
sbb
pop
loope
push
mov
add
cwtl
imul
add
sub
or
nop
and
xlat
clc
push
pop
sti
arpl
movsb
xchg
xchg
mov
shrb
add
imul
cltd
cli
xchg
jbe
popf
push
cli
shrl
decl
loop
shlb
cmp
outsl
dec
add
fcoml
das
pop
cltd
popa
and
xchg
mov
and
cmp
mov
lret
mov
add
mov
lret
rorb
les
repz
push
lods
xchg
jp
lcall
pop
and
cmp
sbb
xchg
mov
or
push
mov
cmpsb
or
mov
sar
push
push
repz
mov
aas
sub
adcb
iret
mov
mov
aaa
addr16
lods
inc
cmp
mov
sub
data16
nop
lret
jb
movsb
insb
xor
jl
mov
inc
dec
and
mov
cmpsb
outsb
lock
loop
jmp
cmpsb
clc
sub
mov
int3
mov
push
jne
mov
gs
into
cmp
jno
cmp
inc
lea
sbb
xchg
clc
outsl
or
adc
inc
dec
push
repnz
pop
ja
sub
flds
add
mov
inc
addb
push
iret
xchg
adc
iret
shrl
mov
push
sub
cmpsb
and
and
cmp
test
xchg
adc
mul
fsave
pop
cmp
stc
xor
sbb
cmp
icebp
add
fwait
in
rcrl
and
xchg
inc
daa
push
out
lods
add
adc
shll
mov
pop
imul
adc
test
or
mov
inc
insl
push
pop
ss
lock
sbbl
and
cmc
out
mov
repnz
hlt
test
push
mov
fmul
daa
mov
mov
mov
mov
stc
add
out
mov
pop
into
shl
or
test
ror
push
dec
imul
xor
and
pushf
push
xor
lods
push
aad
jmp
js
movsl
mov
xchg
push
adc
push
test
cmp
push
sbb
scas
test
inc
test
push
adc
jp
or
mov
or
sbb
jnp
xlat
or
jmp
iret
adc
enter
repnz
int
xchg
mov
jmp
test
push
push
mov
shll
lock
or
pushf
mov
mov
cmp
imul
fldt
xchg
mov
pusha
rol
push
sub
sbb
clc
test
mov
aad
fwait
jno
in
sub
shlb
jno
aaa
pop
push
movhps
xor
xchg
insb
jg
in
sub
les
insl
push
and
rcll
inc
jo
rcrl
out
lea
stc
mov
fldcw
fs
in
hlt
mov
call
or
and
into
mov
jae
adc
push
push
push
and
cltd
sub
adc
pop
dec
jle
xchg
inc
add
imul
or
insb
cmpsb
popf
and
add
aas
out
and
add
dec
mov
outsb
pop
ss
clc
movsb
fs
aam
popf
stc
xchg
jmp
into
push
inc
in
inc
inc
mov
jecxz
fisubs
inc
arpl
sbb
xor
cmp
ljmp
mov
popf
jb
jne
pop
dec
mov
cmpsb
sub
mov
add
mov
out
xsha1
cmpsb
dec
push
push
cld
enter
jo
scas
adc
nop
sub
nop
and
jo
cmpsl
adc
sbb
jb
leave
ds
lods
sub
mov
jb
cmp
rorl
cmp
pushf
outsl
jno
in
mov
test
icebp
xor
pop
and
lahf
iret
sub
push
cmp
sarl
mov
shrl
repz
mov
stos
testb
adc
cmpsl
fildl
or
into
fisubl
mov
popa
or
pop
cmp
popa
divb
in
scas
jns
stc
mov
leave
repz
mul
and
inc
int3
roll
clc
inc
jno
add
in
mov
cmp
push
daa
pop
and
xchg
cmp
push
imul
jne
inc
rcll
xchg
out
dec
sbb
pop
mov
ja
add
mov
pop
adc
mov
push
je
cmp
icebp
dec
sarb
sbb
pop
sbb
pop
scas
lea
lcall
push
ret
or
jne
mov
xlat
push
mov
or
sub
cmp
fstpt
jp
adc
bound
and
andl
pop
xor
push
test
movsb
mov
sub
sarb
adc
xlat
jne
mov
cmpsl
jl
outsl
inc
pushf
scas
mov
sub
imulb
lret
jg
inc
adc
shll
loop
aaa
mov
clc
into
icebp
daa
cld
sub
stc
mov
in
cmp
inc
jecxz
notb
sub
fidivl
pop
insb
lock
mov
mov
dec
and
inc
dec
push
arpl
shlb
imul
jne
push
int
or
adc
stos
jmp
lods
push
fsubrs
or
aaa
enter
push
inc
jmp
xchg
into
add
enter
jb
cmp
out
xor
shlb
or
das
pop
aad
aaa
or
sbb
inc
lcall
xlat
cltd
pop
mov
or
aas
insl
sbb
pop
sbb
mull
jp
push
aad
push
lods
push
outsl
call
lock
jge
mov
cltd
mov
out
pop
loopne
push
cmp
sub
xor
mov
aas
and
sub
mov
mov
jle
pushf
sub
aad
add
enter
dec
and
mov
add
lea
jae
push
rol
xor
adc
js
outsb
stc
roll
lea
jg
mov
mov
enter
in
loopne
loopne
xor
enter
loop
mov
jb
sahf
push
test
movsb
sarb
or
out
dec
je
pop
add
into
or
js
adc
xlat
sub
stos
jb
xor
inc
jo
mov
mov
js
add
daa
iret
pop
push
xchg
test
push
xorl
or
pop
in
jb
jge
pop
pop
adc
and
jg
imul
mov
aaa
sahf
or
insb
jge
fstl
push
mov
rcrl
or
loop
xorb
inc
fldt
xor
xor
jnp
xor
icebp
sub
add
or
fldcw
pushf
out
bound
xor
cmp
inc
imul
insl
fwait
loopne
jg
insb
mov
stos
xlat
inc
cwtl
bound
je
dec
add
inc
arpl
xchg
mov
and
lahf
decb
fidivl
js
push
fnstenv
mov
push
jmp
xlat
push
pop
sub
imul
cmp
xor
push
adc
repnz
es
mov
bound
pop
lea
push
dec
mov
sub
push
adc
lods
push
fdivrp
out
sbb
xchg
popa
movsl
cvtps2pi
adc
dec
sbb
out
jo
movsb
lods
jge
in
pop
sbb
mov
mov
push
cs
fmull
aam
jg
jmp
cli
sarb
out
shrb
enter
pop
stos
inc
mov
fidivs
or
jne
ficoml
push
pop
ficompl
adc
inc
in
call
mov
sbb
addb
ds
fcom
roll
sbb
mov
dec
jge
or
mov
fsubr
or
aaa
shll
loop
adc
enter
mov
adc
movsl
and
mov
dec
dec
out
fimull
faddl
xor
fiadds
mov
xchg
jg
adc
js
int
sub
push
mov
in
loop
aad
pop
xlat
xchg
mov
xchg
decl
xor
mov
sbb
push
and
cli
in
push
mov
lods
in
in
testb
add
mov
mov
loopne
inc
push
adc
lods
lahf
cmp
and
insb
arpl
push
out
xchg
scas
cmc
popf
add
outsl
mov
outsb
loopne
cwtl
mov
sub
inc
jno
movl
jl
inc
xchg
popf
scas
into
cmp
or
mov
sbb
aam
sbb
pop
inc
add
adc
loop
scas
bound
or
cmpl
pop
sbb
mov
or
cwtl
fucomi
lods
mov
and
mov
pop
ss
std
int3
stos
movsl
inc
aad
sbb
fisubs
push
test
xchg
mov
cwtl
imul
dec
aam
mov
sbb
mov
fmuls
adc
inc
out
les
xor
jnp
jno
push
shlb
add
push
in
or
mov
push
aaa
dec
std
sysenter
push
scas
xchg
sahf
lcall
and
scas
add
mov
inc
xchg
call
stos
fdivr
mov
pushf
mov
xor
add
into
or
loop
push
xor
pop
les
mov
sub
adc
mov
jge
rcl
push
xchg
ja
xchg
jge
mov
add
add
loope
pop
cmp
cli
mov
aas
loop
pop
adc
out
add
xchg
fxch
mov
stos
leave
movsb
adc
faddl
mov
int3
lahf
imul
mov
push
push
les
cmp
mov
mov
dec
nop
xchg
cltd
lahf
aam
pop
mov
movsl
fmuls
mov
inc
pop
cwtl
add
aad
mov
popf
mov
pop
int
inc
xchg
hlt
mov
lret
out
mov
arpl
movsb
cmc
jmp
out
xchg
nop
mov
lret
add
pop
movb
js
sbb
sbb
fsts
pop
in
clc
in
push
push
bound
jnp
xor
jle
pop
cmpsb
andl
sub
dec
sub
fisubrs
test
int3
jp
movsl
add
adc
lcall
mov
ja
dec
sbb
insl
and
mov
xlat
add
pop
push
scas
dec
sti
pop
mov
sub
mov
dec
test
dec
and
pusha
test
pop
lock
call
fdivs
in
jno
shll
mov
imul
sub
adc
lret
cmp
mov
push
adc
and
push
lods
loop
repnz
cld
xchg
jecxz
dec
push
mov
popa
ljmp
xchg
sahf
pop
cli
shlb
inc
arpl
mov
or
mov
lock
clc
adc
pop
ss
jbe
and
movsb
cltd
inc
or
into
bound
in
mov
ljmp
cmpsb
or
pop
incl
adc
mov
ror
mov
sahf
dec
mov
dec
into
and
dec
dec
push
jl
cmpsl
pop
les
or
jecxz
mov
xchg
push
inc
std
sbb
xchg
fcompp
add
jp
mov
aaa
adc
adc
push
dec
leave
inc
dec
shlb
inc
negb
pop
add
adc
mov
dec
stc
sub
test
rcrb
xchg
mov
cmp
aas
hlt
sub
and
cmc
xchg
push
shrl
test
mov
lea
jl
jmp
mov
push
mulb
dec
inc
push
xchg
adc
mov
stos
sub
in
stos
inc
jnp
pop
xor
inc
pop
leave
adc
out
popf
push
stc
lcall
cmp
gs
push
test
inc
mov
loop
orb
imul
add
int
mov
dec
jl
iret
jge
fisttpll
xchg
mov
aad
lods
sahf
enter
std
fimuls
mov
jp
cmpsl
movsl
add
xchg
push
cmc
xor
xor
inc
or
stc
push
mov
sbb
sub
xlat
sub
dec
ds
jmp
push
ds
cmpsb
xor
mov
sub
jge
sbb
mov
xor
mov
fs
xor
iret
pop
mov
cmp
lea
nop
adc
test
add
lret
fs
lods
cmp
test
std
imul
jge
jno
xchg
cltd
pop
dec
insl
inc
push
xor
jp
lods
stc
test
and
jl
arpl
add
rolb
jno
and
mov
sub
xor
nop
pop
xor
fisttpll
shrl
and
movsb
and
iret
stos
call
xorl
lds
fwait
jle
pushl
es
or
and
nop
loopne
fistpll
push
hlt
cmp
ljmp
xlat
or
out
pop
mov
js
pop
or
repz
cwtl
push
sbb
imul
movsl
jp
push
sub
outsb
sub
xchg
inc
cmc
fcomps
and
sbb
jmp
pop
lock
mov
dec
push
fsubl
repnz
imul
movsb
arpl
mov
jae
cmp
pop
adc
lods
addr16
insl
in
out
negl
shll
pop
es
jmp
jecxz
jg
mov
sbb
clc
jl
mov
push
dec
adc
jp
and
stos
in
clc
pop
mov
lds
gs
imul
aad
pop
lcall
test
in
jae
pop
or
xor
mov
lods
adc
jns
lret
sbb
dec
pop
inc
push
sti
test
fisubs
jg
sbb
cmpsb
dec
pop
cwtl
out
cmp
xor
push
push
cmpl
ficomps
popf
cmp
mov
mov
or
mov
mov
mov
mov
arpl
pop
sub
inc
dec
mov
adc
adc
shll
pop
popf
mov
jne
xchg
test
pop
mov
dec
dec
pushf
ljmp
mov
ret
idiv
aad
lods
push
mov
lods
stc
sub
xchg
loop
jae
xchg
adc
ss
sub
and
sahf
stos
jecxz
cmp
lods
and
out
sbb
mov
lds
in
test
movsb
dec
inc
adc
mov
nop
mov
out
ja
push
xor
dec
ret
push
aad
hlt
jl
cwtl
outsb
cmp
xchg
nop
add
inc
dec
cmp
sbb
mov
int3
xchg
fisubrl
xchg
inc
fwait
sub
dec
ret
cmpsl
ret
pop
add
pop
pop
sub
jns
and
out
pushf
call
inc
jp
mov
mov
insb
cwtl
scas
mov
dec
mov
frstor
scas
mov
daa
mov
push
sub
push
imul
out
xchg
pop
popf
sbb
cmc
mov
push
call
pop
repz
pop
out
lcall
dec
ss
sub
outsb
push
pop
pop
lret
adc
and
add
stos
push
jle
add
cmp
insl
add
mov
add
xor
ljmp
jle
xchg
xor
into
or
cmpsl
addb
orb
icebp
adc
mov
das
pop
xchg
xchg
add
aad
xor
fdivs
inc
mov
cltd
sbb
pop
jmp
jp
mov
shll
sbb
pop
std
and
cs
lock
ja
adc
repz
nop
and
push
les
ficoms
subb
mov
shlb
hlt
push
icebp
int
out
lods
lods
push
xchg
xor
and
xlat
and
insb
xchg
mov
jmp
xchg
push
jae
push
mov
cmp
loop
mov
xor
aaa
inc
cmp
stos
mov
xchg
pop
lea
lea
xor
insb
push
dec
jg
mov
jmp
sbb
addr16
pop
sub
push
xchg
movsl
mov
xchg
ret
fwait
sbb
hlt
and
lcall
mov
aad
mov
mov
jp
sbb
push
jne
sbb
jle
ret
jns
push
xchg
jne
lret
xchg
lds
fdivr
adc
adc
jg
inc
cld
fprem1
lea
adc
mov
das
jne
mov
xchg
mov
push
test
sahf
stos
mov
rolb
pushf
sbb
mov
xchg
xchg
pop
xchg
aaa
test
pop
jp
shll
repnz
scas
dec
fimuls
cmc
xor
cmpsl
lahf
mov
jno
shlb
fs
xor
ljmp
inc
mov
jnp
mov
data16
xchg
adc
mov
sub
icebp
insb
xchg
popa
cmp
xor
mov
scas
sub
cld
pop
aaa
sti
xor
or
xor
ret
jecxz
sbb
push
rorl
sahf
sbb
pop
es
imul
movsb
leave
xchg
jno
insb
cld
insl
rorl
jo
test
and
mov
adc
pusha
ljmp
in
mov
inc
lods
inc
scas
lds
xor
mov
or
cmc
and
and
mov
add
fisttps
out
push
insl
sbb
aad
add
mov
sub
lea
shl
nop
mov
mov
and
scas
mov
mov
insb
mov
xchg
ret
xor
pop
jecxz
out
shrb
cmp
mov
xor
scas
aas
jecxz,pn
dec
pop
pop
dec
lods
movsl
adc
adc
mov
pop
sub
outsb
movsb
sub
testl
pop
mov
inc
pop
mov
mov
adc
mov
sub
lret
adc
movlps
fisubs
shrl
popa
or
inc
popa
fsubrs
nop
xchg
or
ret
subb
loop
mov
jmp
fbstp
xor
loopne
and
lds
push
mov
mov
pop
mov
ret
testb
out
in
leave
add
bound
pushf
ss
and
lods
mov
jecxz
push
mov
aas
cs
mull
adc
and
xor
jmp
mov
pop
cmc
adc
aad
lods
shl
cmp
aad
adc
cmp
repz
leave
mov
in
xchg
movsl
mov
stos
jo
pop
fisubl
or
mov
lods
mov
add
inc
and
adc
in
mov
je
std
dec
inc
inc
or
xor
loopne
add
leave
sbb
fimuls
or
cltd
scas
pop
jae
or
mov
notb
add
cmc
dec
and
cmpsb
cli
cltd
or
mov
sbb
negb
loope
mov
aad
shlb
in
jbe
out
xchg
fistl
filds
mov
xchg
lea
in
xchg
decl
jle
repnz
cmc
fwait
xor
mov
inc
jo
inc
mov
imul
pop
jp
jg
cmc
dec
das
jo
fstpt
sub
insb
sbb
out
clc
std
out
ret
sub
cld
push
jecxz
loop
jb
out
scas
jmp
arpl
xchg
lock
push
sbb
bnd
insl
pop
test
aam
shl
dec
in
outsb
or
jns
inc
sbb
sti
pushf
and
stc
xchg
or
mov
jp
pop
pushf
or
inc
daa
lea
sub
xchg
icebp
adc
aad
inc
adc
dec
fs
push
out
sbb
jmp
sti
lcall
fisubrs
push
aad
pop
and
or
not
xchg
lret
stos
mov
cmp
jbe
test
xor
sarl
popf
xor
jge
sub
mov
divl
aam
lea
xchg
bound
ljmp
popf
or
je
ja
mov
jns
sub
and
inc
lret
out
daa
sbb
les
jmp
das
fdivl
mov
sbb
pop
sbb
sarl
loope
cltd
dec
push
mov
ret
push
mov
sub
pop
rol
pop
sub
gs
cltd
fwait
push
mov
dec
fldt
jge
fst
nop
mov
negl
mov
add
gs
push
aas
nop
or
rcr
popf
pop
mov
lock
or
xchg
jno
mov
cwtl
or
cmpsb
add
pop
sti
mov
jns
cltd
or
xchg
push
adc
sti
sub
pop
mov
inc
ljmp
or
test
xchg
scas
and
outsl
fisttpl
sbbl
jns
jno
push
xor
cmp
inc
and
cmp
cmp
sbbl
loope
lds
push
push
fcomps
cmpsb
lcall
xchg
testl
or
dec
push
cmc
dec
jb
fcmovne
out
mov
out
cld
loopne
ficomps
ss
or
test
call
add
xor
or
lcall
push
decl
ss
popf
push
push
sahf
xor
jnp
jae
sti
aas
xor
adc
imul
orl
jl
lea
call
push
pop
sub
stc
mov
test
and
mov
mov
ret
mov
xchg
pop
xor
cmp
jb
xchg
loop
rcll
push
sub
scas
cmp
push
movsb
jp
shl
and
sbb
ds
sub
std
clc
cmc
fisttps
popf
and
jns
xor
push
or
in
movsl
push
inc
in
push
mov
pusha
sub
mov
add
loopne
sub
jne
cmp
or
pop
lcall
add
jle
add
jge
adc
sbb
loope
or
mov
and
cltd
dec
outsl
jo
btr
push
xchg
ror
movsb
mov
jecxz
or
pusha
sbb
mov
lcall
jge
add
in
fdiv
clc
mov
incb
sub
sub
xlat
repz
notb
pushf
jp
xchg
std
fmuls
jmp
or
cmp
lret
jg
mov
adc
xchg
xor
sbb
data16
jg
std
pushf
pop
imul
dec
inc
call
clc
stc
sbb
mov
mov
das
loopne
xor
scas
faddl
repz
sub
loopne
icebp
sbb
add
push
jns
cld
test
ss
scas
jnp
dec
inc
movsl
push
je
jne,pt
jae
adc
sub
popa
je
jmp
mov
xchg
fwait
jbe
pop
movsb
fidivrs
aaa
jge
inc
stos
cmp
insl
mov
add
repz
cmp
incb
pop
scas
cmp
adc
scas
adc
stos
out
rcll
cmp
loopne
or
aam
dec
lock
dec
cli
out
fbld
add
mov
incb
mov
decb
xchg
sub
pop
shrd
movsl
sbb
sub
pop
cmp
call
xor
aas
mov
dec
loope
jmp
mov
sbb
xor
ljmp
pushl
adc
mov
xchg
jecxz
mov
arpl
push
pop
mov
pop
popf
xchg
cmp
movsl
in
call
fcomi
mov
popa
sub
push
jg
pop
cmc
jno
xor
jge
out
add
dec
xchg
jmp
in
push
test
movsb
xchg
cmp
fwait
sbb
fadds
insb
and
xchg
ljmp
enter
dec
fcomp
int3
subl
int3
hlt
or
hlt
push
fdecstp
mov
adc
mov
decl
jb
jle
movsl
out
inc
mov
scas
pop
lods
pop
subl
pop
adc
stos
imul
pop
mov
pushl
movsb
test
inc
sub
arpl
or
xor
cmp
mov
cmp
lock
into
xor
orb
ds
lret
test
push
daa
js
xchg
xchg
inc
or
xchg
clc
sub
pushf
add
lret
test
fsts
test
addb
sahf
in
stc
or
sarl
pushf
mov
sub
mov
jne
lret
jmp
mov
sbb
js
cld
shl
call
jge
mov
in
leave
test
mov
in
ficompl
loope
call
mov
add
sub
jo
or
jmp
fs
dec
xor
je
repz
add
fiaddl
fcoms
pop
add
pop
cltd
cmpsb
dec
and
test
imul
cmp
sbb
fdivs
push
push
sbb
inc
or
jno
inc
insl
cmp
pop
push
mov
or
pop
sub
push
movb
xchg
in
pop
dec
or
mov
or
jns
cltd
pop
xor
ds
mov
add
repnz
dec
cmp
loop
xor
ret
sbb
pop
adc
sbbl
divl
in
dec
loop
movb
add
icebp
cmp
mov
add
ficompl
bound
sbb
sub
jno
adc
push
xlat
repz
aas
mov
sbb
lcall
fidivs
xor
xor
xchg
add
pushf
insb
fistpll
cltd
jg
fadd
negb
inc
push
jbe
sub
cli
mov
rolb
ljmp
mov
hlt
cmp
jne
mov
or
cmp
mov
cmpsb
and
xchg
lret
data16
fdivp
ficomps
inc
jmp
call
mov
shlb
adc
test
loop
or
jb
add
loopne
or
scas
cs
fbstp
push
pushf
sbb
xchg
mov
xor
jle
fcmovnbe
jmp
mov
ja
imul
cmpsb
cltd
movsb
lret
or
sbb
sbbl
dec
fsubrp
js
xchg
sub
jmp
mov
or
mov
pop
mov
mov
inc
xchg
sti
outsl
popf
aam
inc
cmp
mov
xchg
clc
xchg
or
into
std
or
xor
leave
pop
clc
aaa
push
sub
in
dec
xor
sar
mov
push
pushf
jae
sti
adc
scas
and
push
addr16
ljmp
pushf
inc
dec
add
push
mov
cwtl
movsl
add
out
push
lods
dec
in
rol
rorl
dec
mov
jae
push
out
repnz
decb
adc
mov
mov
mov
mov
or
mov
imul
je
xor
stc
jmp
mov
int3
mov
testb
add
cltd
test
rorl
xor
mov
repnz
mov
mov
or
mov
mov
cmpl
or
mov
and
adc
ds
adc
lret
out
loop
inc
jns
repz
imul
shrb
add
or
mov
popa
push
nop
cmp
jb
jl
mov
dec
mov
aad
pop
xor
ret
popa
repz
cmp
inc
out
xchg
faddl
jae
push
mov
mov
lret
gs
pushf
loopne
or
mov
dec
sbb
movsb
iret
aad
lcall
lods
les
cmp
pop
sbb
ja
imul
pop
out
out
stos
add
xor
add
imul
cmovge
enter
repnz
and
ficoms
int3
and
dec
int
ror
push
jbe
mov
cmp
call
jg
and
push
cmpsl
pop
push
insb
sub
inc
testb
in
jle
loopne
sub
sub
or
fadds
das
pop
add
mov
sub
pop
adc
inc
dec
jns
mov
inc
pop
sbb
fcoms
add
sub
stc
sbb
add
pop
and
add
imul
xor
mov
inc
push
shlb
insb
jns
cmpsb
clc
jg
cmp
mov
inc
pop
sbb
movsb
and
cmp
out
ljmp
aaa
adc
ljmp
aaa
pop
push
dec
ljmp
jecxz
repnz
mov
aad
mov
cmp
mov
shr
add
and
jbe
xorb
mov
ja
and
cwtl
add
and
inc
inc
xchg
shll
ret
jnp
jp
sbb
adc
cs
or
out
loop
inc
mov
rcll
insb
jbe
mov
cld
ret
dec
sahf
jecxz
aas
mov
daa
cmp
movsl
or
mov
dec
jle
jecxz
mov
sbb
repnz
das
int
cmp
add
add
jne
mov
mov
inc
mov
scas
cmp
lcall
pop
clc
push
lret
xchg
lret
fwait
jbe
fdivrs
imul
fstpl
jecxz
xchg
int
aas
aad
pop
sbb
mov
enter
sti
cmp
and
adc
mov
adc
pop
arpl
stc
jne
mov
sbb
pop
aas
xor
loope
mov
add
movsb
hlt
out
cmp
mov
dec
pop
mov
in
dec
dec
pushf
xor
push
pop
mov
mov
cld
outsb
andb
test
popa
mov
ret
test
repz
loop
sbb
das
lods
xor
xchg
jl
aas
dec
jecxz
stc
sbb
inc
or
pop
push
loopne
or
test
outsl
push
ficompl
dec
push
outsl
pop
xor
cmp
mov
jo
scas
jbe
add
cmp
inc
or
xor
push
stos
push
mov
movsb
cmp
movsb
adc
data16
fistpll
or
pop
adc
pop
pop
mov
push
loopne
les
adcl
js
std
aam
xchg
hlt
out
jns
push
inc
mov
jg
data16
pushf
test
loop
xor
mov
inc
and
mov
lret
xor
dec
movsb
adc
icebp
mov
push
das
xchg
aas
aaa
cmp
fcmovu
mov
mov
push
rcr
xor
insb
sub
ds
fimull
inc
insl
addb
mov
in
xchg
int
mov
jno
inc
sub
pop
loope
pop
clc
sbbl
mov
mov
ljmp
dec
cmp
mov
shr
aam
ret
ret
aam
lret
push
push
arpl
repnz
mov
nop
movsl
int
pop
fdivrs
xchg
inc
cltd
pop
in
push
aaa
inc
jecxz
test
xchg
and
mov
xor
repz
sub
inc
mov
cli
or
push
jne
std
and
shrl
xchg
shll
pop
xchg
jg
shrb
pop
and
and
lds
xor
clc
xchg
xor
loopne
insb
jecxz
push
jp
mov
sbbl
lods
bound
fldenv
cmpsl
xchg
sub
xchg
outsb
xor
jle
les
cmp
shl
add
repnz
je
std
dec
jmp
and
add
cmpsb
out
add
daa
in
mov
push
scas
loopne
add
mov
sub
insb
or
jmp
add
out
enter
shrb
aam
pop
ret
xchg
mov
push
jg
sub
dec
cmpsl
mov
push
fs
inc
mov
shlb
pop
push
lcall
inc
out
std
mov
pop
icebp
and
cmp
xchg
movsl
xor
leave
push
cmp
sub
add
fdivl
stc
in
xchg
movsl
aad
out
lea
mov
aaa
jecxz
inc
add
jp
xor
mov
mov
push
inc
mulb
dec
repz
xchg
jbe
imul
movswl
dec
xchg
sbb
pop
shll
jno
ljmp
jmp
and
jae
inc
iret
push
dec
mov
jbe
test
mov
and
enter
ja
pop
ja
popa
andb
sbb
jno
xor
inc
add
mov
add
lods
xlat
adc
jb
jg
jge
pop
imulb
adc
iret
inc
mov
dec
sbb
xchg
movsl
test
inc
mov
inc
xchg
ret
mov
arpl
inc
je
inc
and
leave
xor
push
fiadds
sub
fdivrl
dec
scas
fstl
jmp
fisttpl
mov
sub
xor
loop
adc
pop
mov
shl
sbbb
xlat
loope
les
lcall
lcall
rol
jmp
mov
jno
mov
rcll
fdivrs
cmp
jmp
add
shrb
std
mov
pop
sbb
out
jnp
xchg
sbb
sbb
push
cmp
int3
mov
adc
pop
mov
fs
mov
imul
rcl
and
and
movsb
push
sbb
adc
add
and
lods
xchg
stc
out
xor
cmp
xor
in
sbb
in
cmc
mov
mov
sbb
xor
in
loopne
daa
mov
or
lock
mov
std
imul
ficoml
inc
jno
roll
xor
fsubl
hlt
pop
dec
push
lea
pavgb
push
mov
enter
adc
imul
mov
idivb
cmp
push
adc
jne
iret
stc
lret
ret
push
call
jge
mov
mov
mov
jmp
adcb
sbb
pop
movsl
call
sub
test
mov
sarb
cmpl
adc
or
test
mov
cs
int
pop
enter
aad
jae
sbb
jo
pop
fcomip
ds
adc
mul
pusha
inc
lcall
mov
cld
and
xor
cli
subb
loopne
or
push
jnp
pusha
push
aas
inc
mov
mov
aas
xchg
jne
imul
sbb
pop
loope
sub
jb
outsb
push
xchg
daa
sbb
mov
pop
lcall
and
popa
pusha
mov
mov
cltd
repnz
pop
scas
cmp
adc
or
sub
test
test
imul
mov
cs
inc
fcompl
or
outsb
xor
cmp
cmpsb
push
ds
aas
pop
sub
sbb
lds
scas
push
enter
in
xchg
xchg
jmp
or
out
mov
out
imul
or
xor
xor
icebp
jmp
cmova
pop
and
sti
hlt
dec
sbbl
aad
lea
shlb
pop
cmp
xor
inc
pushf
or
fs
push
rcll
dec
rclb
adc
sub
or
xchg
daa
sti
dec
outsl
scas
mov
scas
insl
add
xchg
ja
cmp
scas
cli
and
xchg
dec
stos
and
mov
pusha
fmul
jp
sub
and
push
adc
mov
icebp
xor
add
push
jo
sub
lods
scas
mov
add
inc
mov
jo
insl
in
push
push
shrb
push
push
into
imul
pop
cmc
pusha
and
mov
orl
or
daa
add
and
shrl
lock
mov
loopne
adc
cld
iret
jns
addl
xor
dec
orb
test
stc
xor
in
ret
aam
insb
jae
inc
xor
sub
pop
add
push
test
shrb
add
xor
sbb
sub
inc
sub
sub
jle
mov
cmp
mov
sahf
pop
rolb
loop
loopne
sub
or
adc
in
stos
lds
inc
or
jne
mov
fs
adc
out
testl
mov
push
js
mov
xchg
adc
daa
sub
dec
dec
adcb
addr16
push
popa
movsb
dec
mov
xchg
loope
rep
sub
mov
pop
or
jno
xchg
sub
icebp
xchg
and
test
loope
cli
xor
inc
adc
push
dec
jae,pn
mov
sbb
aaa
inc
lcall
inc
mov
ja
divl
sbb
or
gs
andb
lds
mov
in
xchg
jl
rorb
push
jns
push
shl
loope
test
xchg
adc
pop
sahf
bound
mov
xchg
clc
imul
insb
lcall
sahf
add
js
shr
enter
fwait
insl
jne
add
leave
push
es
ret
push
jnp
dec
in
das
bound
adc
stc
pop
mov
cmp
adc
mov
push
mov
mov
mov
adcb
lods
mov
popa
test
movsb
in
les
inc
ficoms
call
hlt
mov
adc
rorb
cld
mov
adc
js
icebp
mov
and
pop
fstpt
jb
xchg
mov
addr16
insl
ret
pop
icebp
mov
dec
jge
xor
or
fbld
popf
push
in
test
imul
aaa
or
xchg
cmovg
xchg
movsb
pusha
xor
in
sti
negl
outsb
imul
js
movsb
xor
lods
test
nop
mov
std
loope
mov
cli
js
stos
mov
mov
cs
pop
jmp
ror
push
fs
jl
push
lock
notb
out
fnstsw
jp
mov
or
and
xor
in
imul
pop
pushf
lahf
cmp
add
push
xchg
inc
adc
push
les
jnp
adc
sbb
sarb
bound
loop
lea
insl
mov
mov
das
popa
jle
push
scas
jns
jp
jns
fcompl
scas
and
mov
xor
mov
ljmp
xor
fwait
cmpsl
cmp
jmp
inc
xchg
push
lahf
jns
mov
or
xlat
mov
movsb
mov
fbstp
xor
mov
fnstsw
mov
jp
mov
or
sbb
test
and
xor
out
mov
test
cmpsb
jno
sbb
mov
cmp
pop
cmp
mov
mov
push
jns
pop
popf
jno
fdivrs
cli
or
pop
mov
loope
mov
dec
std
adc
shl
aad
mov
push
pushf
add
popa
jge
dec
aas
and
sarl
mov
loope
pop
inc
push
imul
shlb
mov
decb
xchg
scas
dec
popa
adc
xchg
xor
cmp
arpl
pop
mov
pop
ret
loopne
mov
addr16
push
mov
xchg
inc
jns
inc
mov
lret
xchg
cmpsb
call
xchg
pop
add
mov
xchg
roll
call
mov
sub
bound
xor
stos
test
or
dec
insl
aam
je
cmp
pop
sub
xchg
cmpl
mov
cmp
jmp
sbb
pop
xor
test
push
enter
in
or
clc
lds
inc
mov
pop
adc
leave
je
jns
idivb
dec
inc
aad
adc
lret
mov
jo
and
je
pcmpeqw
mov
cli
sub
test
sbb
es
pop
inc
xor
adc
inc
jle
push
pop
xchg
sub
inc
xchg
pushf
fdivs
xchg
incb
stos
adc
xlat
and
int3
push
mov
inc
popa
push
and
jno
pop
lahf
push
jmp
pop
in
cwtl
pop
jg
gs
aam
xor
jbe
mov
mov
sbb
rorb
aas
aad
aad
sub
popl
cmpsb
mov
dec
js
mov
cmp
cmpsb
std
push
inc
mov
pop
out
imull
pop
jl
sbb
and
lds
and
jmp
pop
add
push
dec
notl
into
pop
cmc
push
loope
rep
mov
dec
xchg
enter
or
add
or
sti
inc
arpl
jmp
and
les
ficompl
push
push
or
bound
push
rclb
out
das
mov
fsubrs
dec
pusha
jns
ss
xchg
cli
mov
mov
mov
mov
enter
in
out
mov
xchg
adc
add
push
fmull
les
push
ss
dec
sbb
cli
and
and
loopne
adc
movl
shll
fists
xor
lods
jne
js
int3
adc
mov
pushl
mov
outsb
addr16
add
jp
aam
aam
aaa
icebp
incl
xchg
rcll
js
mov
lock
xchg
fs
xchg
cmp
fldenv
xchg
and
add
xchg
fwait
insl
cli
push
mov
jecxz
inc
scas
orl
jb
dec
mov
push
int3
loope
sub
xlat
xchg
sahf
jg
test
push
fisubrl
xchg
nop
sbb
push
cmp
mov
or
sbbl
jl
pop
push
jp
insl
decb
lods
leave
sbb
sub
or
or
mov
pop
mov
jle
dec
xor
xor
out
movsl
push
and
adc
scas
mov
push
add
push
dec
or
out
icebp
mov
mov
cmp
dec
js
sub
mov
test
pop
fs
insl
xchg
lret
sahf
inc
push
cmp
aad
pushf
icebp
or
lahf
add
enter
push
stos
jmp
or
pop
fucomip
inc
js
or
xchg
cmpsb
rcl
xor
addr16
je
pushf
push
mov
call
mov
lcall
pop
mov
or
jbe
mov
clc
inc
stc
mov
push
fsubl
add
pop
sub
daa
jle
and
dec
or
pop
js
sbb
sub
data16
into
dec
jl
jl
sbb
add
xchg
into
xchg
mov
lcall
push
adcl
js
xlat
mov
mov
fadds
pusha
jle
fdivl
pop
fwait
adc
xchg
fisubrl
sub
sub
mov
sbb
ret
decb
dec
shlb
aad
ret
insl
xor
pop
push
not
xchg
outsl
push
dec
mov
push
bsr
cmp
outsl
pop
call
push
xchg
outsb
cmp
rcr
movsb
jne
jp
out
dec
popf
xlat
pop
push
mov
mov
push
fmull
xchg
clc
iret
or
mov
xrelease
cmpsl
cs
cli
fcoml
lcall
inc
cltd
mov
insb
xchg
inc
insl
dec
or
inc
jg
repz
ret
mull
aaa
dec
xchg
inc
lahf
xchg
and
add
hlt
das
fstpl
jmp
push
jno
jmp
loopne
jge
mov
dec
sti
push
and
dec
mov
cmp
outsl
aad
sahf
dec
xchg
push
subb
test
cld
inc
xor
test
icebp
cmp
ljmp
shll
adc
insl
inc
cmpsl
in
xor
sbb
push
and
adc
xor
push
dec
sub
std
add
cld
into
fwait
mov
stos
jbe
mov
loop
icebp
mov
sbb
mov
jbe
dec
add
in
es
lea
mov
push
sbb
sub
rcl
sbb
clc
cmpsb
add
pop
inc
test
sub
movsl
xchg
lock
push
test
sbb
and
fcomps
fisttps
imul
sbb
pop
jle
sahf
lret
mov
imul
sti
xchg
sub
scas
adc
push
jecxz
out
dec
out
rorl
icebp
cmp
push
and
sbb
sub
sbb
add
and
inc
jo
xchg
push
pop
jp
and
push
divl
adc
mov
pop
mov
mov
cmp
nop
cld
out
jecxz
push
ds
arpl
add
or
and
lods
mov
mov
scas
imul
fisubrl
out
or
mov
popf
shll
inc
cmpsl
out
cmp
sti
jg
fs
addr16
and
jge
orl
lcall
inc
add
adc
dec
jmp
loop
pop
sbb
pop
aas
int
insl
pushf
push
cmc
data16
rcrl
std
cmp
into
pop
shlb
leave
xor
sub
aaa
dec
jno
cmp
shrl
das
leave
ret
clc
jle
add
pop
repz
stc
pop
movsb
and
xchg
test
jle
xor
and
mov
outsl
leave
xor
sub
decl
mov
push
pop
out
adc
adc
pop
xlat
ss
ret
fldcw
pop
jnp
push
push
add
std
mov
iret
ret
subl
cmp
pop
xchg
scas
pop
xchg
mov
inc
jbe
mov
lret
mov
enter
jmp
cmp
cmp
out
xchg
lret
sbb
outsl
popa
insl
push
mov
xor
das
aas
add
loope
xor
mov
xchg
push
mov
jns
jle
repnz
jno
aaa
jg
cmp
mov
subb
inc
testl
movsb
dec
mov
jbe
mov
aas
scas
pushf
mov
jne
adc
cli
xchg
bound
rcl
dec
jnp
mov
mov
mov
jo
and
je
popf
or
jge
and
sub
jl
jp
js
mov
cmp
mov
jle
jmp
cmp
or
mov
pop
jp
je
rcrb
jne
loop
fbld
enter
adc
xchg
invd
push
adc
add
jne
lret
sahf
in
sbb
inc
push
pop
test
push
test
loope
popl
jmp
add
mov
xchg
dec
jmp
lods
inc
add
movsb
push
cmp
int3
and
mov
mov
sub
es
ret
mov
movsl
xchg
jp
xchg
mov
popl
mov
pop
xchg
mov
push
out
and
and
inc
imul
or
push
bound
cmp
mov
aad
push
adc
ds
jbe
stos
call
jb
push
icebp
add
push
mov
jne
dec
iret
cmc
das
popa
mov
movsl
addr16
mov
cmp
and
cmpsb
mov
rolb
in
pushf
notb
push
leave
push
pusha
jecxz
imul
adc
fdivrs
adc
mov
lahf
bound
xchg
das
stos
adc
add
sub
cmc
pop
shrb
xchg
testb
nop
cmc
std
imul
sub
push
xor
lds
sub
dec
mov
les
rcl
fcomip
pop
pop
mov
mul
nop
sub
hlt
shlb
cmpsl
jbe
pop
repnz
jg
shrb
push
and
sub
pop
mov
cmp
adc
xchg
mov
adc
shl
test
movsl
and
push
aam
push
mov
dec
cmp
and
mov
rorl
shll
mov
loopne
fucomp
xchg
adc
sub
mov
mov
out
cmp
movl
sub
scas
imul
pop
dec
cmp
in
dec
push
pop
sbb
outsl
mov
adc
and
das
arpl
or
push
or
xor
jne
int
xor
test
je
sub
push
ljmp
inc
int
inc
dec
mov
jg
je
insl
aaa
jg
out
shlb
mov
adc
arpl
adc
dec
pop
movsl
stos
dec
dec
in
cs
scas
mov
cltd
mov
call
xchg
outsb
aam
dec
in
btr
lock
xor
repz
pop
push
jbe
jno
out
les
lods
sub
in
rcrl
repnz
pop
ljmp
scas
jp
test
outsl
adc
loope
sub
cmpsb
add
push
sbb
es
xchg
sbb
fstl
cld
nop
cwtl
cmpsb
leave
cltd
xor
push
mov
test
insl
sbb
int3
lock
mov
fwait
jbe
call
sbb
ret
int3
pop
dec
scas
test
push
ficoml
or
sub
daa
enter
test
scas
push
push
je
mov
dec
lfs
clc
gs
mov
je
adc
cltd
outsl
push
xor
loopne
ret
or
mov
nop
jb
fidivrs
push
cmpsl
frstor
adc
iret
jb
xor
movsb
nop
push
decb
les
aaa
fmuls
jae
rolb
xor
and
mov
add
cmp
mov
jmp
jb
lock
inc
nop
lods
mov
push
push
clc
repnz
test
ss
push
push
les
fiaddl
add
jecxz
push
xor
scas
dec
mov
xor
mov
clc
mov
sbb
pusha
sub
lea
mov
xor
xor
mov
mov
jns
xchg
mov
jae
loop
pop
dec
push
cmp
pop
daa
xor
jle
and
mov
subl
and
cld
aam
cld
mov
dec
in
test
mov
cli
lahf
jbe
out
sarw
mov
sarb
or
push
fsubr
xchg
mov
test
mov
insb
dec
push
call
add
aas
or
orl
jle
shll
cmp
call
lods
or
xchg
xchg
call
add
sahf
outsb
xchg
sub
push
push
test
add
lret
push
sbb
mov
mov
iret
pop
inc
rclb
lret
jg
add
jns
lcall
and
ljmp
pop
and
fdiv
div
int
int
cmpl
cmpsb
adc
into
movsl
test
cmp
arpl
call
ret
cmp
insb
lock
jge
ja
ja
xchg
sub
fdiv
xor
popf
dec
loop
cmp
mov
dec
lahf
repnz
lods
adc
xor
iret
pop
sub
clc
fistps
int
jmp
lods
push
jecxz
mov
add
xchg
imul
adc
pusha
cli
xchg
ss
nop
pop
rcrb
aam
and
ljmp
cld
scas
mov
ja
or
push
lret
add
push
pop
mov
jle
testb
push
scas
popf
je
movsl
add
pushl
les
js
gs
xchg
fildll
pop
out
fwait
daa
and
add
sub
pop
cwtl
xor
sbb
mov
addr16
insb
gs
and
adc
cmp
mov
sahf
cwtl
add
fisubl
test
inc
ret
pop
out
int3
adc
jg
add
std
jg
gs
mov
xor
mov
mov
stc
push
movsb
and
xor
shlb
pop
xor
xchg
movb
cmp
bound
orl
adc
mov
jmp
clc
xchg
xor
cmp
jno
xchg
mov
ficomps
add
jp
mov
mov
aam
fs
adc
out
test
cmp
adc
jp
out
roll
push
mov
jne
jno
xchg
pop
jge
or
push
push
subb
xor
in
stos
mov
popa
sbb
inc
jnp
call
cltd
dec
push
cmp
popa
sub
pop
sbb
orb
cmp
cs
mov
pop
push
aas
xor
mov
mov
test
dec
imul
cmpsb
fcomps
das
sbbl
jmp
dec
mov
fs
lret
inc
shll
lock
fcoml
jmp
mov
loopne
addl
test
sub
dec
push
mov
nop
fildl
dec
rclb
lea
inc
and
jmp
insl
xor
push
imul
adc
in
lods
xchg
mov
sbb
iret
ds
popf
sub
xor
lret
sub
shrb
addr16
jae
adc
stc
inc
jae
loop
les
jl
icebp
pop
idivl
imul
mov
adc
clc
xchg
xchg
inc
cmpsl
and
inc
xor
mov
push
xor
inc
mov
sub
pop
sbbl
test
adc
pop
jmp
test
gs
dec
into
xor
jno
je
out
xor
in
loopne
fimuls
xor
aad
jns
sub
xlat
sbb
adc
loop
mov
cmp
xor
push
std
lcall
xchg
pop
sbbl
push
mov
icebp
stos
in
sub
dec
imul
in
cmp
push
jl
negl
test
xchg
out
arpl
jbe
repnz
add
jecxz
pop
jecxz
sub
ret
fisttpl
andl
bound
jmp
xchg
adc
mov
adc
in
mov
leave
sub
inc
fisttpll
mov
add
mov
ss
inc
fbld
sbb
mov
push
lds
orb
mov
sub
jae
fs
loopne
jae
pop
arpl
dec
lds
mov
jno
stos
sti
push
adc
ret
rorl
fwait
dec
xchg
outsl
int
fwait
ljmp
mov
sahf
movsb
bound
inc
and
sub
push
pop
jle
xchg
or
jmp
mov
sbb
stos
shrl
mov
in
or
setp
mov
testl
ret
cli
or
mov
mov
xor
out
mov
fadd
popa
dec
jecxz
adc
fstl
mov
cli
cmpsb
nop
lock
sar
popa
sbb
jg
nop
and
dec
ret
mov
mov
movups
push
lods
inc
mov
push
inc
pop
pop
sub
popf
cld
sar
dec
mov
adc
add
stos
pop
cmpsl
xchg
lcall
add
pop
push
outsb
out
insl
push
push
sub
sbb
jp
call
aaa
xlat
and
jb
mov
pop
xor
arpl
cmp
pop
and
insb
sbb
pop
pop
mov
cmp
lds
mov
imul
push
jae
stos
incl
aam
jp
pop
ss
add
sub
std
adc
lods
jb
adc
addr16
sub
dec
das
sub
jmp
loopne
rclb
adc
aad
je
ja
es
push
cmp
pop
cmp
or
repnz
lock
popf
inc
addr16
mov
push
repnz
xor
xor
fstp
mov
bound
lea
pusha
sbb
dec
adc
mov
jmp
jecxz
das
lahf
sub
fistpl
scas
or
cli
gs
pushl
sbb
dec
std
cmp
mov
fnstcw
jg
iret
adcb
ss
orl
pop
pusha
mov
sarb
push
shll
cli
call
push
cmp
adc
dec
pop
leave
or
fbstp
loopne
sbbl
pop
push
shrd
scas
push
xchg
pop
or
mov
sub
loop
sbb
dec
movsb
mov
dec
sbb
sbb
push
push
adc
leave
das
cmp
push
or
xor
sbb
subb
push
or
mov
rcrl
ja
push
stc
movsl
or
pop
xor
add
jne
mov
xchg
js,pn
cmpsl
rclb
cmpsl
jb
popf
pushf
mov
jnp
loopne
lods
mov
cmp
xor
mov
lret
jae
cwtl
outsb
cmp
cmp
push
inc
arpl
stc
inc
dec
xchg
fwait
je
sub
fs
push
cmp
xor
shrl
int3
mov
mov
lods
xor
nop
iret
xor
rcrb
cmp
push
mov
add
jg
roll
lret
jmp
rclb
xor
sub
dec
int
ljmp
jecxz
and
jecxz
xor
bound
insl
and
clc
popa
xchg
sahf
xor
sar
lods
jae
sbb
cwtl
ds
aam
and
dec
pop
sbb
int3
mov
jns
and
mov
fidivrl
divb
sbb
outsl
out
push
loop
add
call
jmp
jecxz
xchg
pusha
jne
cmp
sbb
push
cmpsb
dec
inc
inc
dec
cwtl
jno
pop
push
pop
mov
dec
mov
int
in
into
into
repnz
repz
add
sub
adc
push
imul
pusha
xchg
dec
pushw
jle
imul
mov
mov
mov
push
jmp
dec
js
push
ds
xchg
sbb
scas
add
cli
or
sub
iret
cvtps2pd
add
fst
jno
sbb
fistl
fwait
inc
stos
xchg
mov
xor
pop
and
in
roll
mov
or
sub
addr16
jo
adc
mov
mov
fcmovne
sub
mov
mov
test
xchg
clc
mov
aam
std
sbb
mov
and
inc
mov
add
jb
push
cmpsl
cltd
jle
mov
xchg
xchg
dec
push
mov
cmp
call
push
add
adc
dec
in
fsub
mov
mov
xor
xchg
mov
mov
push
jl
or
aas
mov
add
cs
cmp
dec
mov
cld
cmp
sbb
xchg
sbb
inc
and
adc
push
add
xor
cs
push
cmp
xchg
outsl
movsl
push
jg
pop
pushf
loop
iret
lcall
mov
push
or
leave
jno
and
mov
sub
pop
xchg
xchg
cli
icebp
sbb
insl
ret
xchg
shlb
insl
outsb
cli
jle
loope
lods
pop
push
xchg
repnz
and
outsl
add
fsubrs
test
rcr
and
or
je
enter
adc
es
daa
pop
jp
jno
clc
sub
add
shlb
push
arpl
ret
in
inc
cmc
dec
adc
mov
mov
ljmp
lret
outsb
inc
popf
add
pusha
mov
fwait
push
cmpsb
add
pop
outsb
cwtl
bound
ja
cmpsl
pop
mov
pop
cld
lods
xor
out
lods
imul
push
adc
adc
movsl
scas
mov
jge
xchg
jno
out
fcoml
mov
mov
adc
xchg
mov
xor
sub
push
dec
push
inc
stc
call
dec
arpl
addr16
add
data16
xchg
jg
cmpsl
sub
outsb
xor
sbb
rcrl
mov
adc
test
pop
shrl
pushf
shlb
cwtl
fstps
add
test
or
pop
ret
movsb
rol
fnstsw
in
out
mov
inc
cs
xchg
jl
js
outsb
scas
sub
out
fiaddl
xchg
sub
sub
outsl
push
sub
and
lods
fdiv
add
jl
xor
mov
jg
jecxz
adc
imul
cmp
or
inc
stos
mov
inc
pop
imul
rol
xchg
jle
pusha
lea
xor
add
cli
mov
mov
cmp
js
sarb
jl
pop
addr16
xlat
ret
pop
fisttpl
mov
inc
scas
popa
or
jns
imul
pushf
xor
and
xor
lock
sub
mov
jbe
mov
mov
sub
lret
out
int
dec
bound
cmp
daa
mov
mov
jmp
xchg
test
adc
mov
stos
pop
mov
rcl
outsb
jecxz
es
xchg
cld
test
xor
add
out
mov
cmpsl
sbb
mov
pop
dec
dec
filds
push
push
xor
push
sbb
mov
packssdw
push
inc
scas
rcr
iret
push
fldenv
push
push
xor
cmp
out
push
push
xor
comiss
movsb
jge
loop
adc
je
jmp
aad
sub
dec
aas
push
stos
inc
jo
jmp
cmp
or
hlt
addr16
mov
inc
test
inc
jo
mov
dec
mov
sbb
xor
lret
push
inc
inc
ret
mov
xchg
mov
jmp
dec
sar
bound
or
jae
rcrl
pop
lcall
pop
add
or
add
jle
out
popa
outsl
push
xor
mov
cli
and
decl
scas
and
add
push
cs
mull
daa
xchg
and
and
sbb
lods
dec
fwait
pushf
mov
adc
sbb
dec
pop
pop
xchg
repnz
test
sub
add
pop
lcall
mov
imul
cmp
or
mull
fnstcw
push
dec
arpl
xor
test
add
data16
out
ret
lods
in
adc
addb
js
mov
jo
xchg
xchg
hlt
loop
int3
out
push
loope
pop
out
gs
aas
ret
das
aas
aas
sub
mov
push
aaa
mov
mov
fbstp
sub
mov
movsb
shlb
sub
xchg
push
xchg
shll
sub
sbb
mov
jae
ljmp
pop
cmpsb
cs
mov
ret
sbb
jge
leave
pop
fistpl
push
mov
pop
inc
mov
pushf
mov
cmp
xchg
add
cmpsl
in
pop
pop
mull
add
mov
sarb
call
sbb
pop
xchg
iret
lret
dec
sbb
add
dec
push
bound
adc
lods
push
sub
popa
pop
fidivl
sub
inc
aaa
ret
in
push
ret
fwait
pop
cmp
out
xchg
cld
mov
xchg
cltd
dec
in
arpl
add
fdivs
mov
xchg
aad
mov
or
shlb
scas
sbb
mov
out
sub
mov
sbb
sub
mov
gs
cmpsl
test
sub
mov
cs
xchg
push
insb
xor
fsubrl
cmp
lock
xor
mov
push
push
fnsave
xchg
cltd
nop
cmpsl
pop
or
sahf
mov
aaa
jg
shl
jbe
out
sbb
sbb
and
clc
dec
dec
or
lahf
in
sub
xorl
add
jae
fwait
xchg
aad
xor
push
cmp
insb
jbe
cmpb
sbb
sti
sbb
popa
lds
fsubrs
cld
clc
xlat
pop
stos
bound
fs
fwait
andb
add
mov
inc
jge
test
add
int3
xchg
add
les
orl
push
fiadds
outsl
lods
pushf
xor
pop
xchg
lock
int
in
out
mov
daa
cli
cmp
push
shr
mov
sub
in
out
add
cs
add
outsl
push
mov
in
pop
clc
rorl
push
rdpmc
xor
and
decb
dec
dec
sbb
mov
cmp
adc
enter
testl
insb
sub
inc
push
ss
jne
jno
inc
sbb
dec
mov
loop
jg
and
push
popf
jg
idivb
hlt
xor
inc
unpckhps
lahf
cmpb
into
aaa
push
push
push
jae
xchg
xchg
in
insl
push
dec
lret
adc
cmp
fistl
cmc
pushf
xchg
outsb
in
jnp
aad
daa
adc
mov
pusha
arpl
mov
movb
mov
repz
ja
lahf
mov
dec
rcll
clc
loopne
push
add
sub
jmp
cmpsb
dec
dec
scas
stc
loope
test
lret
cmp
fimull
aad
jb
cmp
out
pushf
out
push
in
into
scas
out
inc
xor
sbb
imul
jmp
ror
das
sub
insb
aam
inc
adc
pusha
cmp
dec
clc
jg
push
stc
fisubs
cli
push
dec
bound
jl
pop
or
call
push
pop
xchg
sbb
jg
and
jge
mov
nop
in
rorb
or
and
fwait
in
xchg
dec
fmulp
test
mov
leave
cld
inc
jns
push
scas
inc
push
cmpsb
das
mov
insl
push
or
data16
test
xchg
cmp
mov
push
pusha
int
or
sub
mov
jecxz
jne
sarl
push
in
imul
aad
jne
shll
xor
and
inc
scas
lcall
bnd
sbb
inc
cmp
jl
cmp
into
or
sbb
inc
mov
insb
push
and
shl
add
test
in
dec
dec
mov
dec
xchg
cmp
icebp
ds
cmpsl
xor
inc
dec
push
jge
mov
leave
inc
xor
pop
call
inc
bound
sbb
popl
add
and
in
sbb
push
out
add
xchg
sub
add
vpaddusw
int
aaa
pop
pop
mov
mov
inc
popf
mov
lret
pop
jne
sub
aam
mov
push
sub
in
mov
xor
jae
mov
cmp
adc
adc
test
mov
out
inc
lret
inc
mov
mov
ds
fwait
std
in
aas
inc
adc
xor
stos
enter
movsb
adc
pop
push
mov
xchg
mov
adc
inc
dec
shufps
pusha
pop
shlb
ret
pop
push
jg
mov
push
pusha
loopne
inc
jp
xchg
out
test
sbb
mov
outsb
scas
rcll
imul
add
dec
mov
jl
arpl
mov
xchg
arpl
jns
stos
rorl
popf
sbbb
gs
mov
mov
mov
rcr
dec
xchg
call
testl
jle
aad
and
enter
mov
orl
mov
lock
addb
jp
rcrb
ds
pop
xor
inc
or
fcompl
jno
out
push
xor
dec
pop
fsubs
xor
in
fcmove
and
mov
add
inc
push
out
mov
mov
ficomps
aaa
and
fisttpll
mov
imul
dec
testl
mov
xor
lea
cmp
sub
les
jne
imul
mov
cmp
push
and
fisubrs
jb
lock
hlt
into
dec
adc
and
pop
jne
or
and
add
push
mov
movsl
in
out
add
mov
mov
xlat
testb
cmp
adc
xor
outsb
sbb
rolb
movsl
loop
in
mov
mov
inc
test
rclb
in
decb
mov
adcb
xchg
es
arpl
inc
add
mov
test
cmp
sbb
xchg
push
or
aas
into
and
push
xorb
lret
or
cmp
in
shll
hlt
mov
pop
int3
orb
fcoms
mov
inc
sbb
sub
inc
dec
insb
stc
fstps
aas
pop
ss
inc
inc
pushf
aas
icebp
call
les
add
pop
out
loop
icebp
pop
inc
into
cld
out
in
stc
daa
js
cmp
sub
mov
in
leave
jnp
in
in
dec
lret
cmpsl
out
jb
daa
lcall
in
cltd
addr16
imul
out
xchg
in
add
ror
std
cltd
les
inc
dec
xor
stos
ss
or
adc
and
mov
sbb
cmp
into
sub
push
test
sti
cmp
mov
test
dec
adc
and
stc
outsb
out
mov
jbe
pop
xor
jp
pop
js
cmpsl
mov
dec
mov
mov
loopne
and
adc
add
cld
cmpsb
pop
mov
pop
inc
mov
aaa
mov
jnp
mov
and
pusha
mov
adc
dec
pop
jl
xor
sbb
dec
mov
xchg
add
fxam
in
js
push
repz
or
dec
pop
in
mov
cmp
mov
daa
addr16
xor
inc
mov
or
jmp
imul
addr16
data16
rclb
jge
mov
fdivr
mov
lods
push
cmp
xor
jb
cmp
inc
out
jge
call
and
push
jns
sub
xor
addl
add
in
dec
jnp
cmpsb
lds
fsub
sti
sbb
rorb
pop
mov
aam
sub
ja
jnp
add
sahf
inc
or
sar
iret
mov
adc
out
out
nop
addr16
xor
out
test
xchg
sbb
outsb
andl
cwtl
out
mov
cli
inc
sbb
loope
pop
int
push
sahf
xchg
arpl
sub
test
jbe
cmp
dec
cmpsl
mov
or
int
stos
dec
adc
sub
in
divb
into
cwtl
stos
jecxz
pop
les
pop
faddp
idiv
vsubsd
cmp
scas
mov
test
leave
pop
lds
fsubp
lods
and
xor
jne
pop
xor
mov
incl
shll
cld
pushf
adc
aad
jae
xor
add
jo
jnp
outsb
cmc
push
cli
mov
push
in
ja
sbb
or
ljmp
aad
popa
fists
xchg
mov
cli
lldt
xor
rolb
cltd
les
ror
aam
cmp
sbb
adc
mov
sub
jge
cld
jp
add
push
stos
movb
lret
mov
jmp
out
and
xchg
push
jne
push
bound
dec
pop
mov
add
shll
ja
andl
push
aad
dec
inc
lahf
cmp
jnp
imul
sub
je
pop
mov
cmp
adc
in
arpl
dec
int3
mov
mov
out
adc
out
pop
inc
jno
fldenv
test
or
mov
pop
popa
movsl
iret
push
das
in
xchg
cmp
lret
xor
test
inc
and
mov
imul
ret
inc
pop
enter
mov
es
pop
sbb
js
xor
fimull
addb
xchg
sbb
or
adc
mov
addr16
rep
xor
and
shrl
subl
adc
ds
fists
cmc
or
ret
popa
mov
push
mov
mov
cs
sbb
inc
xchg
bswap
out
jns
inc
in
mov
xchg
ret
inc
les
lock
xor
sub
jle
ss
jp
test
cmp
daa
dec
orb
sub
sub
pop
dec
lods
mov
jl
inc
jo
pop
out
dec
loope
push
xor
jno
dec
sub
movsb
cltd
fidivl
cs
xor
or
test
or
add
jp
lods
jns
fwait
mov
push
dec
addr16
repnz
mov
je
loop
scas
lock
addl
rclb
clc
pop
fsubs
in
xlat
xchg
xchg
jl
jecxz
inc
inc
or
and
enter
lret
or
xor
adc
dec
in
stos
icebp
lods
dec
cmp
aam
push
stos
cld
call
data16
negb
les
in
mov
adc
add
jae
push
dec
mov
fs
repnz
xor
mov
dec
pusha
mov
push
push
lcall
cmp
add
push
adc
inc
les
inc
inc
cmp
or
pop
aaa
inc
lods
mov
mov
push
xchg
xchg
cltd
movsb
ret
dec
aam
pop
jno
in
inc
mov
shrl
mov
aam
mov
jmp
xor
cltd
in
push
inc
xchg
jo
in
inc
stos
test
bound
mov
aas
or
mull
lea
jo
mov
shll
mov
cmp
mov
cmpxchg
xchg
or
push
int3
addr16
mov
pop
sub
imul
ds
adc
sub
sahf
les
lret
push
fs
andl
mov
fwait
push
sarb
xchg
mov
push
outsb
lret
loope
les
dec
out
xorl
dec
iret
mov
push
or
rclb
jo
dec
idivl
outsl
imul
paddd
fldenv
and
cmp
aaa
scas
dec
sbb
les
loope,pn
sbb
sarl
push
mov
out
cmp
sub
dec
in
jns
out
lds
fldcw
mov
mov
out
add
mov
dec
loope
mov
sub
mov
and
ljmp
imul
xor
fidivrs
push
lret
cmc
movsl
or
icebp
jmp
and
lods
cmp
sub
mov
sbb
jno
pop
enter
and
je
rcr
call
aaa
xchg
or
lcall
push
pushl
cmp
cmp
xchg
sarl
outsl
jecxz
dec
scas
nop
loope
push
loope
daa
clc
insb
push
mov
dec
mov
push
scas
sub
sbb
sbb
dec
xlat
leave
adc
ja
add
dec
fnstsw
in
jno
gs
and
xor
mov
imul
aad
cmp
jb
test
push
jg
xchg
sbb
pop
sbb
jg
hlt
pop
adc
xor
xchg
push
cld
sub
xchg
push
and
add
add
stos
lahf
cmp
call
pop
sbb
ja
pop
push
cmpsl
mov
push
adc
jecxz
loop
jmp
mov
pop
dec
sub
dec
dec
xor
adc
insl
gs
rorb
inc
loop
sbb
loop
inc
push
mov
int
xchg
jle
scas
jl
sbb
push
nop
mov
cmp
jae
and
jae
ljmp
dec
push
rep
lahf
mov
addb
movsl
dec
in
popl
cmp
je
fbld
ret
and
xor
fstpl
and
pop
cmp
lock
xor
lods
popa
pushf
dec
ja
push
xchg
into
pop
xchg
sub
mov
pop
xchg
push
scas
mov
jmp
fs
sub
mov
sbb
add
in
xor
push
add
inc
and
ret
xlat
add
xchg
jno
mov
mov
fdivs
pop
xchg
adc
mov
loop
sbb
insb
sub
js
mov
sahf
xchg
js
xchg
jae
xchg
xorl
push
inc
cmp
lcall
jb
test
add
lock
push
lret
mov
aas
nop
mov
es
in
aam
lods
jge
xlat
clc
dec
cmp
push
jmp
inc
mov
out
jmp
outsb
push
je
in
and
rorl
ret
mov
xor
insb
jo
adc
outsl
xor
jmp
xor
in
xchg
cwtl
popa
insl
push
sub
outsb
repz
fwait
repnz
bnd
and
mov
rolb
aaa
cmc
addr16
fwait
ret
and
js
xor
sub
out
xchg
cmpsb
mov
gs
mov
testb
pop
punpcklwd
test
pop
adc
pop
and
dec
push
out
jmp
enter
push
or
arpl
push
push
into
xchg
fwait
mov
jne
popf
je
mov
jb
jecxz
fs
xchg
pop
push
and
ja
dec
and
out
mov
les
push
stc
ror
fadds
mov
inc
dec
mov
repnz
je
inc
cmpsb
cmp
mov
aad
jecxz
jb
push
sbb
push
in
das
lock
mov
in
xor
pop
outsb
ffree
dec
push
stc
das
pop
or
sbb
sbb
sub
add
shll
lahf
pusha
int
jne
jnp
jne
xchg
mov
jg
jge
data16
xchg
fsubl
test
mov
add
sub
shrl
popa
pop
dec
push
es
and
push
mov
std
in
xchg
sar
ljmp
insb
mov
jo
jno
cltd
insl
inc
sub
aam
or
shr
movsb
std
data16
xchg
iret
faddp
jl
popf
out
sbb
mov
cmp
int
cs
xor
cli
mov
xchg
cmp
inc
sbb
push
sub
xor
les
pop
mov
andl
not
aas
dec
mov
and
clc
push
xchg
add
rcrb
fildl
and
lods
sbbl
lahf
jbe
mov
adc
ja
icebp
mov
test
pushf
in
icebp
addr16
test
or
inc
inc
jnp
cmpsl
roll
inc
popf
adc
cmp
dec
mov
in
mov
out
aas
mov
dec
fwait
push
xor
inc
loope
pop
jl
push
adc
adc
pop
push
clc
je
xor
mov
xlat
add
adc
inc
or
jne
cvtps2pi
fsubl
pop
adc
or
adc
sub
and
insb
push
mov
jmp
shlb
sbb
daa
inc
jne
fadds
inc
push
sti
nop
mov
test
pop
out
dec
or
or
push
dec
negb
sarb
popf
push
pop
rclb
nop
mov
add
in
neg
mov
pop
imul
pop
lcall
sub
xchg
mov
pop
inc
xor
mov
pop
inc
scas
das
adc
loop,pn
movsb
fdivl
lcall
push
mov
jg
sbb
les
vpaddsb
xor
fisubs
rclb
sahf
incb
sbb
test
lea
lods
push
into
sbb
fwait
mov
fisubs
iret
xor
fstpl
and
stc
pop
cmpb
jg
and
nop
mov
push
adc
fidivrl
arpl
or
mov
lods
dec
dec
push
mov
cld
inc
nop
aas
clc
pop
mov
das
mov
fs
and
loope
pusha
stos
cmp
inc
dec
divb
out
pop
adc
cmpsb
stos
outsb
xchg
mov
pop
cmp
stos
adc
mov
dec
dec
ljmp
sti
in
popf
mov
in
pop
dec
and
and
and
movsl
mov
daa
stos
addr16
add
inc
and
divl
notl
mov
cmp
pusha
adc
adc
xor
push
jnp
cmpsl
loop
mov
paddq
mov
aad
aas
adc
jl
cmc
pop
aad
loop
retw
lea
mov
and
jecxz
gs
cld
xchg
std
sub
mov
push
cmpsb
add
dec
aas
push
insb
and
or
arpl
test
mov
sub
mov
cmp
push
fldt
mov
jmp
dec
mov
mov
mov
das
es
xor
mov
adc
test
push
jp
pusha
int
shl
and
xchg
sub
pusha
add
adc
jnp
sbb
push
adcb
ror
ljmp
pop
fs
xchg
je,pn
jecxz
in
mov
mov
inc
dec
xchg
mov
aad
mull
outsb
sbb
push
fistl
popa
adc
mov
fcompl
movsl
rcrl
test
push
fiadds
in
loop
pop
aas
sub
xchg
in
clc
cld
mov
insb
or
push
cmpsb
inc
aam
lret
fs
aaa
repnz
and
sbb
shll
pushf
cmp
aam
push
adc
pop
hlt
add
xchg
fmul
xor
mov
sahf
mov
xlat
dec
daa
adc
cmpsb
xor
data16
sbb
shl
pushf
ret
testl
fcompl
mov
inc
movsb
cmp
in
xchg
mov
addr16
into
cltd
mov
pop
mov
lock
jns
icebp
cmp
mov
sub
aaa
add
mov
pop
adc
sub
clc
mov
stos
fiadds
popf
add
or
stos
pop
lcall
loopne
ret
cmpsl
jle
push
mov
fldenv
xor
js
and
fwait
inc
add
arpl
movsl
mov
xchg
xchg
repz
mov
pusha
lret
ret
jp
insl
and
movsb
out
pusha
movsl
pop
inc
and
xor
test
or
mov
popf
sbb
lds
ja
fistpl
push
mov
addl
sub
ja
shrl
sti
pop
dec
dec
mov
pop
jecxz
sbb
mov
pop
insl
mov
jns
pop
lds
out
pop
fidivrl
pop
jns
scas
addr16
sbb
mov
lret
xchg
les
push
jno
jb
or
aad
std
insb
mov
jno
and
out
rol
xchg
imul
pop
xchg
les
sbb
push
pusha
roll
movsb
dec
inc
lock
popl
add
dec
or
push
cmp
sar
jb
stos
cwtl
dec
sbb
idivl
aad
dec
popa
xchg
push
pop
roll
dec
clc
push
push
xchg
xor
or
push
mov
mov
mov
scas
mov
and
dec
fmuls
out
pushf
fucomi
iret
ret
ficoms
addb
pavgb
dec
insb
rcr
push
cmp
test
in
out
inc
aam
fs
test
test
mov
sbb
cmp
clc
xor
and
push
popf
dec
inc
xchg
sti
ret
dec
mov
mov
fwait
mov
ret
out
push
sbb
mov
js
sub
das
ror
inc
repnz
cld
sub
adc
sti
arpl
xchg
mov
sbb
insl
dec
dec
cmpl
xchg
int3
fisttpll
push
cmp
cwtl
push
inc
lods
in
push
jo
pop
out
pusha
sub
push
addr16
les
jo
pop
pop
sbb
jnp
cmp
or
imul
dec
dec
imul
pop
adc
rcrb
stos
push
inc
pop
cmp
dec
stc
inc
adc
dec
jg
les
ds
mov
or
in
clc
inc
jp
and
pop
into
xchg
adc
xchg
jno
das
lods
mov
cmp
jp
sub
ss
push
jl
dec
or
fnstcw
xor
mov
testl
pushf
jecxz
sub
dec
call
or
nop
in
repz
mov
and
enter
adc
and
out
push
cmc
xchg
mov
cld
mov
or
xchg
push
mov
xchg
add
or
cltd
or
xchg
mov
xor
dec
sub
int
add
rclb
insb
insl
cmp
scas
dec
iret
out
in
fsubl
cwtl
pop
rcl
sbb
xor
xlat
sti
sbb
sbb
sub
mov
push
sub
rcrl
jl
push
repnz
orb
cmp
sbb
inc
pop
imul
inc
inc
movsb
lds
hlt
adc
aad
sub
and
insb
and
nop
mov
inc
mov
rcll
divl
out
loopne
pop
shr
sub
or
stc
xchg
xor
es
inc
mov
push
dec
flds
mov
rcll
enter
inc
cmp
lods
es
push
jae
std
push
dec
pop
stc
sbb
icebp
stos
cs
and
les
mov
scas
cmpb
mov
popa
mov
insl
insl
xchg
outsb
mov
and
dec
sub
sub
or
gs
jno
adc
pusha
or
out
mov
adc
aas
add
xchg
sbb
add
sti
pop
into
out
xor
mov
hlt
sbb
adc
andl
icebp
popl
dec
ret
mov
mov
out
scas
sub
mov
fcmovnu
push
mov
dec
cmp
cltd
and
in
and
aas
fwait
mov
push
gs
or
mov
sub
or
xor
pusha
add
and
jg
pop
scas
push
outsl
push
ljmp
adc
cmp
xchg
and
fnstenv
and
dec
sarb
and
aam
repz
sub
xor
pop
lods
cmc
adc
outsl
mov
xchg
cmp
push
pushf
dec
xor
pushf
mov
in
cltd
mov
dec
sub
xor
xchg
loope
adc
pop
out
inc
fdivl
xchg
pop
je
ds
xlat
aad
sbb
inc
js
mov
sbb
mov
insl
cmp
mov
push
pop
shlb
sahf
cmpsl
dec
mov
push
xchg
or
mov
lret
or
mov
xchg
fwait
decl
nop
roll
jo
call
fmull
icebp
xor
shrb
pop
cmp
mov
lock
sar
rolb
mov
test
sbb
mov
xchg
jecxz
cmpb
gs
add
mov
vpcomw
test
mov
aaa
pop
mov
in
ja
dec
mov
mov
test
js
insl
inc
loopne
adc
pushf
pop
sub
movsb
inc
cmpsl
int
lret
and
xchg
sbbb
pop
sub
loopne
mov
fildl
fdivrl
aad
insb
popf
push
jne
sub
outsl
dec
into
add
mov
fucomp
lret
sbb
fidivrs
mov
sbb
enter
cmp
pop
or
dec
push
ret
orb
dec
sarl
in
pop
add
pop
xor
js
add
inc
pop
jns
pop
fsubs
addb
popf
jp
andl
enter
jo
or
and
xchg
jmp
sbb
lret
add
sub
pop
push
sbb
outsl
mov
push
sbb
xchg
jp
jo
dec
dec
sub
orb
gs
xor
and
add
stos
pop
ret
sub
dec
inc
pop
leave
inc
push
mov
or
cmp
int
insl
jmp
xchg
sub
cmpsb
mov
stc
fcom
push
int3
mov
or
inc
jmp
gs
loope
dec
sub
fbld
jg
pushf
loop
lea
xchg
cmpsl
or
shll
jno
loop
insl
movsb
push
inc
pop
xor
inc
insl
pop
xchg
ficompl
shrb
into
or
ja
std
xchg
xchg
add
ja
scas
lods
mov
dec
pop
or
out
push
sub
clc
mov
repnz
jo
sahf
or
jle
ljmp
inc
pusha
mov
xorb
and
fimull
mov
js
mov
sbb
test
pushf
sub
lds
pop
in
pop
js
mov
jp
fisubs
leave
pop
rcl
sub
sub
mov
lahf
jne
cs
pop
fldl
lret
std
adc
jmp
add
idivl
inc
imul
jmp
push
das
lret
sub
out
mov
mov
dec
push
test
mov
add
or
sbb
loopne
fstps
lret
and
int3
hlt
fwait
and
or
xor
or
add
adc
sub
cmp
loope
sub
stos
pop
cmpb
in
stos
sub
xchg
push
lret
pushf
addb
jnp
js
popf
pop
adc
imul
rcrb
pusha
cmp
out
movsb
loopne
out
or
stos
hlt
std
arpl
pop
adc
iret
sub
jmp
mov
orl
scas
movsl
mov
jns
ljmp
icebp
xor
add
and
sub
js
and
xchg
fs
sbb
jne
xchg
adc
ljmp
das
pop
repnz
xlat
ja
mov
popa
mov
push
and
and
dec
xchg
push
les
clc
lds
cltd
cld
das
loop
jo
mov
push
mov
sub
lds
and
stc
ret
xchg
inc
adc
fists
cmc
outsb
push
int
push
xor
lret
xchg
lea
push
pop
push
push
jg
shl
push
xor
inc
mov
mov
icebp
xor
push
mov
les
cmp
inc
movsb
sub
or
inc
inc
shrb
out
push
xor
xor
pop
sbb
ss
xorl
cmpsb
jg
cmpsl
pop
xchg
insb
repz
push
push
arpl
loop
arpl
xor
scas
pushf
loop
pop
loopne
push
repnz
stos
jns
and
pop
add
sahf
pop
xor
sahf
clc
mov
in
out
push
jecxz
sub
aam
clc
xchg
pop
mov
mov
mulb
stos
fnstenv
scas
mov
call
sahf
into
scas
mov
fdivrp
or
outsb
jp
negl
jg
repnz
and
cmc
pushf
sti
and
inc
pushf
push
pop
fs
pushf
adc
std
mov
sbb
jge
mov
or
pop
jmp
out
iret
ljmp
pop
popa
test
mov
pop
fidivrs
inc
or
adc
mov
xchg
bound
ret
sub
fiadds
dec
or
xor
dec
push
push
test
nop
or
sbb
fidivs
shrl
imul
repz
xor
lds
push
xchg
sbb
loop
daa
jb
cwtl
jno
mov
cmp
push
jnp
dec
orb
cmpsl
test
pushf
loop
fcompl
and
rol
xor
jecxz
mov
add
push
cmp
xor
outsb
imul
sbb
mov
jge
lcall
in
sbb
jne
xchg
sub
jne
or
sub
inc
nop
xchg
lcall
pop
inc
stos
pushf
ss
mov
rol
mov
cmc
pop
and
lea
pop
outsl
adc
dec
sub
sti
cmc
inc
aas
fdivr
movsb
sbb
mov
cmp
shl
shrb
insb
mov
int
mov
ja
sbb
aaa
lods
xor
shlb
lea
inc
hlt
cmpsb
jle
cmpsl
icebp
es
dec
ss
inc
lds
add
push
and
adc
push
cs
int
imul
loopne
mov
push
popa
out
in
mov
insl
fsubp
xchg
xor
push
or
mov
stos
or
sbb
rolb
adc
cmp
lods
mov
push
in
jecxz
pop
mov
jns
sbb
jae
gs
enter
xchg
mov
adc
pop
pop
fildl
fs
xchg
pop
nop
and
and
cmpsl
add
pushf
sub
jp
add
in
push
jge
mov
std
loop
repnz
cmpsb
jp
dec
out
adc
sub
test
loopne
xchg
push
cs
mov
aam
cmpsb
mov
repnz
call
sub
mov
push
mov
inc
pop
jg
ja
std
cld
pop
ret
mov
into
push
lock
sbb
stos
or
cli
popa
idiv
adc
cmp
xchg
stos
adc
jmp
out
rcrl
std
dec
clc
lret
adc
sbb
mov
aaa
push
ror
ss
in
adc
in
test
dec
push
jg
movsb
push
mov
adc
sar
loop
ret
in
pop
cmp
push
leave
aas
enter
ss
add
insb
dec
cmp
sub
cld
cmpsl
sub
imull
mov
test
add
jg
out
ret
cmp
repnz
xor
aas
pusha
or
mov
xor
xchg
mov
add
pop
dec
inc
out
bound
fstpl
pop
pop
into
leave
jo
xor
mov
pop
mov
xlat
into
aad
test
xor
loopne
pop
loopne
push
jno
lret
cmp
cld
test
push
inc
and
incb
pop
int
in
aam
jbe
mov
or
gs
nop
sub
lock
xor
adc
sarb
lret
das
inc
cmp
iret
push
enter
dec
mov
mov
sub
cmp
jp
push
and
out
lock
push
mov
sbb
cwtl
inc
jp
push
or
cmp
fnstsw
mov
or
lahf
pushl
pop
fbstp
xchg
cmpsb
hlt
mov
popf
add
mov
inc
outsl
pop
dec
outsl
pop
or
aad
jbe
aam
hlt
and
adc
pop
add
fcoms
push
add
cmp
add
aaa
stc
les
lcall
loop
mov
icebp
inc
inc
add
mov
mov
xchg
adc
sub
or
mov
adc
add
cmp
jno
jae
add
adc
rcll
sti
sbb
xchg
fildl
push
xor
mov
pop
cmp
or
dec
shld
adc
mov
shr
jbe
mov
out
mov
mov
push
add
add
or
add
cmp
and
mov
sub
jmp
cld
rclb
push
jo
loopne
add
cmp
insb
cmp
in
pop
call
mov
fcoms
adc
lods
imul
cmp
and
int
fsubrs
mov
cmp
dec
push
out
xchg
pop
leave
jb
or
pop
add
mov
stos
xchg
jns
pop
jmp
decb
shrb
es
pop
mov
inc
xchg
cmp
xor
sub
lcall
push
incl
rcrl
xchg
incl
mov
pop
jecxz
jmp
mov
mov
push
inc
icebp
cmpsb
sbb
incb
fdivl
movsl
jle
xor
lea
mov
adc
ret
adc
adc
in
jge
mov
mov
sbb
subb
int
fcomps
fimuls
div
adc
jg
mov
adc
add
jl
inc
hlt
out
mov
inc
and
push
jno
xor
insb
jae
into
fadds
and
mov
inc
loopne
push
mov
sbb
inc
mov
dec
inc
es
jmp
add
xor
push
data16
sbb
jae
push
sub
aas
jge
ss
mov
push
cltd
cmp
xchg
add
test
and
jnp
inc
jge
addr16
mov
push
js
mov
movsb
out
hlt
pop
xchg
mov
dec
xor
in
stc
and
popf
dec
pop
pop
out
in
mov
mov
gs
js
cmp
popf
pop
popa
pop
add
mov
push
sbb
sbb
push
outsb
xchg
add
xchg
sub
pop
adc
push
iret
pop
out
test
stos
aas
mov
fiadds
iret
daa
pushf
dec
sub
inc
sbb
push
fsubr
aaa
jmp
pop
adc
shlb
sti
pushf
xor
test
ds
mov
add
xchg
push
mov
jp
fisubs
lcall
push
fidivrl
cmpsl
mov
sbb
outsl
fs
xlat
out
das
addr16
lods
inc
test
cmp
add
adc
aam
fldlg2
cmp
add
addr16
sub
shlb
mov
lahf
pop
mov
or
int3
add
fcoms
mov
cmp
adc
adc
scas
xor
je
sub
mov
pop
cmp
jl
pop
repz
dec
int
enter
dec
xor
mov
repz
xor
push
push
or
and
lds
outsb
mov
rcrl
popf
mov
fidivrl
repnz
pop
sub
push
out
lret
test
mov
outsl
sbb
out
lods
cmp
mov
inc
dec
add
mov
popf
in
sbb
sub
popa
and
xchg
push
push
loop
popa
inc
pop
jb
dec
test
movsl
dec
ret
int
imul
ljmp
test
or
sbb
out
dec
add
gs
sbb
out
cmpsl
pop
add
jnp
mov
jp
xchg
outsl
aas
xchg
mov
sbb
jg
into
jmp
dec
push
mov
ja
sub
ret
les
jp
xor
pop
lcall
mov
xchg
mov
mov
mov
fwait
adc
mov
push
outsl
mov
fcoml
idivl
sbbb
mov
jmp
or
lods
lods
js
aam
xchg
cmp
loope
xchg
into
inc
sbb
add
testl
aad
int3
jmp
inc
inc
add
cmpsl
mov
pushf
leave
xchg
movsb
cmp
imul
in
xor
daa
inc
dec
fdivrl
adc
fisubrs
pop
loop
push
gs
lea
les
ljmp
xchg
mov
jecxz
xor
fistl
mov
addr16
pop
cmp
push
data16
xchg
rcrl
add
fdivs
lods
adc
mov
sub
sub
addr16
fldenv
push
xor
jg
or
daa
aaa
ret
aad
inc
dec
pop
je
out
fldl
push
cli
stos
sub
xchg
jne
stc
jecxz
mov
mov
lock
push
insl
lss
repnz
loope
mulb
mov
sbb
addr16
adc
inc
repnz
push
jg
cli
xor
ret
push
inc
push
lods
push
jae
xchg
cld
loop
cmp
mov
adc
pop
pop
mov
and
sbb
push
test
ds
dec
cs
mov
ljmp
mov
mov
inc
test
aam
cld
dec
sbb
mov
sarb
outsl
sub
mov
fs
mov
aas
xlat
mov
push
push
jp
rcr
sbb
add
test
stos
scas
mov
xor
pop
test
adc
pop
or
popf
adc
mov
stos
sti
mov
sbb
mov
test
inc
mov
pop
inc
and
cmp
dec
xchg
cs
test
cmpsl
sti
mov
sbb
imul
sub
and
pop
shlb
fs
jno
sub
std
clc
lods
jecxz
xor
adc
nop
mov
dec
adc
dec
imul
push
lea
or
shll
push
sub
fcoml
je
pop
xchg
test
xor
shll
mov
cltd
and
mov
daa
xor
lret
cmpsl
and
inc
nop
mov
icebp
sub
int3
adc
shl
loope
adc
fsubr
dec
mov
lcall
adc
xor
push
fwait
pushf
jno
aas
lock
ljmp
mov
mov
pop
cmpsl
scas
jne
jge
or
push
push
sub
data16
test
xlat
out
dec
push
lea
cmp
outsb
dec
dec
push
xlat
in
outsl
or
sti
jb
pop
loope
imul
push
test
aaa
push
das
push
test
sbb
in
ja
das
addr16
push
xchg
cmp
jne
das
aaa
adc
cmp
dec
mov
sub
jl
mov
xchg
rol
gs
mov
cwtl
outsb
sub
pop
shr
mov
mull
repz
ficomps
test
fs
push
adc
cld
dec
clc
jl
mov
mov
jmp
mov
icebp
incb
push
xor
xlat
inc
or
cld
cmp
inc
fildl
jmp
push
roll
lods
rorl
orl
mov
fidivrl
int
scas
jno
jl
adc
test
jle
add
add
fwait
jecxz
icebp
loop
pop
mov
lret
pop
cld
jl
mov
fimull
lret
xor
stos
ficompl
arpl
out
movsl
int
data16
cli
jecxz
mov
push
mov
daa
mov
adcl
scas
add
jmp
into
mov
ljmp
aam
cmpsb
arpl
inc
mov
and
mov
cmpsl
mov
pop
adc
test
addr16
popf
push
sti
cmp
fwait
push
pop
add
dec
insl
rcll
push
movl
jecxz
xchg
jge
enter
mov
inc
and
lcall
fiaddl
outsl
mov
imul
adc
mov
add
cmp
xor
sub
nop
jb
std
mov
fcoml
jmp
mov
shrb
pop
pop
shrl
mov
add
dec
cmp
outsl
sbb
push
or
xchg
daa
movsb
in
jg
mov
out
jmp
lcall
in
add
in
lret
pop
xchg
sbb
out
inc
mov
dec
in
loope
inc
mov
out
out
shll
mov
sub
dec
shll
dec
xchg
insb
mov
fcmovne
and
adc
inc
xor
mov
sbb
rcll
sbb
add
lods
sub
pop
adc
mov
add
mov
cmp
es
fisubrs
hlt
xchg
jge
mov
jae
pop
add
mov
nop
pusha
mov
sbb
cli
pminub
inc
iret
pop
dec
add
mov
and
jecxz
mov
lds
mov
push
data16
mov
js
mov
js
cmp
dec
mov
ret
test
ja
fdivrs
pop
or
scas
pushf
jne,pn
xchg
in
lahf
add
std
or
dec
fldcw
mov
jbe
icebp
int
fnstenv
cmp
and
sbb
mov
mov
push
jo
sub
xor
stc
xchg
dec
shl
call
mov
xchg
push
rorl
pop
test
in
jl
mov
aad
mov
xlat
ss
sti
jecxz
lahf
push
xchg
dec
jns
add
pop
pop
sbb
in
neg
sbb
stos
xchg
rcl
ljmp
cli
xchg
or
call
inc
cld
jl,pt
fmuls
hlt
negb
jmp
or
push
cmp
dec
xchg
adc
je
jns
ret
cs
and
mov
adc
add
adcb
cwtl
iret
push
sub
test
ja
mov
xchg
aam
repnz
addr16
cmp
lcall
add
clc
adc
push
push
lock
push
test
cli
in
cmc
jno
pop
inc
mov
xchg
xchg
stc
sbb
xor
adc
andb
xor
aas
jge
mov
int3
push
or
ret
pop
dec
pushf
test
push
int
ret
test
add
dec
cmpsl
sub
mov
xchg
stc
adc
test
cmp
sbb
adc
nop
jae
pop
lcall
lock
mov
fildll
in
leave
lods
clc
movsb
xor
xchg
push
pop
aad
push
mov
jb
jg
mov
cmp
jecxz
inc
lods
fmuls
lahf
orl
icebp
enter
stos
cmp
mov
mov
mov
lds
testb
xor
imul
cmp
xor
inc
mov
pusha
xor
inc
loop
push
stc
xchg
jmp
test
cwtl
data16
in
jnp
add
test
out
mov
push
cmp
int3
and
js
pusha
ss
adc
sbb
inc
fbstp
imul
in
in
pushl
cmp
and
sahf
sbb
xchg
aam
inc
sti
flds
sti
cmpb
add
xchg
into
jbe
nop
fiadds
rcrb
adc
adcl
pop
out
es
mov
out
inc
push
std
or
push
enter
dec
negl
imul
inc
xor
dec
test
dec
cs
mov
inc
hlt
mov
push
dec
cs
xor
pop
lock
xchg
imul
dec
cs
fs
icebp
adc
rcl
add
scas
adc
shlb
and
int3
dec
mov
js
and
push
aam
and
in
pop
scas
xor
int3
je
enter
dec
fstl
shlb
sub
mov
cmpsb
insb
xchg
push
repnz
aas
xchg
add
imul
lock
lret
and
mov
jo
mov
mov
rcr
xor
xchg
push
aam
aad
movsb
pop
aam
sub
push
dec
cmp
add
sbb
mov
add
ficoms
mov
frndint
pushl
xor
mov
mov
sub
xor
push
push
or
xchg
sub
xchg
push
ds
je
inc
cmp
mov
xlat
pop
stc
int
dec
sub
jno
loopne
lods
cmp
pop
int3
ljmp
inc
jae
sub
mov
inc
inc
adc
and
pushf
loope
ds
mov
mov
add
fs
imul
inc
sbb
pop
adc
mov
sarl
lock
mov
imul
cmp
fdivr
cmp
cmp
stos
jbe
cmp
or
int3
mov
mov
outsb
ja
jno
pop
lods
xchg
lods
ficompl
ljmp
ret
and
imulb
or
mulb
scas
loope
sub
cltd
adc
mov
inc
pop
adc
lret
adc
loop
rol
push
repz
orb
or
cs
adc
pop
rcr
pop
out
push
fstps
ficompl
cmpsb
inc
jne
inc
cmp
dec
adc
movsl
gs
jb
outsb
xor
inc
mov
cld
leave
neg
or
stos
adc
out
inc
lods
test
push
fs
dec
mov
fs
sbbl
imul
mov
clc
shrl
mov
cmp
cld
mov
lea
pop
out
cld
int
and
cmp
call
loopne
pop
jecxz
dec
pushf
jae
movsb
push
adc
dec
adc
or
andb
cld
push
mov
mov
cmc
lret
mov
sub
fidivrl
jl
sbb
add
in
pop
rcl
mov
inc
pusha
mov
jg
fwait
or
enter
sbb
inc
jl
shlb
sbbb
mov
mov
dec
add
xor
repz
push
out
movsb
xor
dec
cld
add
adc
pop
fldt
mov
inc
fcmovbe
mov
and
imul
js
cmpsb
sub
jle
jno
aad
xchg
les
fs
fists
sbbb
and
xchg
xchg
popa
jecxz
push
jmp
in
or
lds
loopne
into
js
mov
int3
jg
subps
aam
xor
xchg
fnstenv
pop
aad
subps
cmp
out
stos
fwait
lret
add
in
lcall
push
lret
es
jge
sbb
rclb
out
shlb
insl
loop
pushf
and
cmp
mov
push
xor
and
push
in
punpcklwd
sbb
lahf
sbb
dec
jnp
je
ja
nop
repnz
jmp
sub
jns
ds
push
shrl
imul
adc
cmpsl
in
mov
icebp
mov
sti
push
mov
or
aaa
addr16
jo
fcomps
push
fdivl
in
push
adc
adc
mov
jmp
mov
dec
and
stos
dec
movsl
mov
pop
add
mov
leave
in
subb
mov
sbbb
sub
xor
inc
sub
push
daa
pop
inc
enter
add
aam
mov
mov
lock
pop
lret
mulb
inc
enter
cltd
sub
ret
push
lret
cltd
jne
dec
idivl
push
jmp
lret
xchg
mov
fstps
in
xchg
mov
mov
push
out
jg
ss
push
cmp
xor
adc
ror
push
push
and
shrl
clc
pop
rorl
jle,pn
cmp
push
ja
xchg
enter
movsb
push
cmpsl
mov
sbbl
ret
sub
fidivrs
fdivs
adc
and
imul
mov
sbb
sub
arpl
mov
or
mov
xchg
xorb
fsubrl
ja
jmp
aam
test
sti
xchg
mov
fmulp
adc
call
mov
test
mov
add
mov
or
arpl
push
popf
push
jo
test
mov
aas
int
sub
push
mov
jnp
sbb
xlat
mov
mov
dec
xchg
js
jae,pn
xchg
push
sbb
mov
mov
loopne
push
and
sub
mov
shrl
mov
cld
movsl
xchg
ret
dec
imul
in
jbe
mov
sbb
or
jmp
xchg
sbb
pop
popf
int
addb
mov
dec
mov
orl
pop
lret
test
dec
adc
inc
imul
push
push
jns
loopne
enter
stos
cli
push
dec
js
pop
cwtl
dec
push
movsl
scas
stos
cli
rol
andb
popa
imul
jb
xchg
sub
push
xchg
jp
add
lods
daa
push
mov
jle
sub
stos
jno
sbb
inc
pop
sbb
pushw
sbb
aaa
inc
stc
mov
jb
rcll
mov
inc
ss
push
stos
xchg
add
jp
mov
pop
xor
push
cmp
push
jae
scas
and
inc
mov
adc
and
sti
repnz
btr
xor
dec
mov
and
mov
stos
jmp
or
adcb
test
clc
or
xchg
cmp
and
movsl
nop
sbbb
aaa
shll
xlat
xor
push
mov
lods
inc
jb
push
and
jae
jnp
fldenv
js
loop
enter
jb
lret
pusha
sbb
sbb
std
test
mov
fldenv
and
xchg
mov
loop
fnsave
push
sti
xchg
cmp
fimull
addl
mov
sbb
pop
push
sbb
out
xchg
dec
jecxz
sbb
lret
lret
std
fisubl
lea
fcmovne
fisubrl
mov
cmp
xchg
xchg
enter
out
insb
fbld
mov
clc
sub
fidivs
sbb
outsl
mov
ja
mov
int
mov
pop
add
sub
pop
push
jle
aad
and
mov
out
xchg
js
pop
xchg
and
stos
xchg
mov
xchg
dec
fldcw
pop
xor
les
xchg
test
xor
scas
hlt
push
cmp
shrb
mov
cmpsb
enter
ljmp
cmp
or
in
ljmp
cltd
jle
jp
scas
xchg
add
add
mov
sbb
pop
jg
sbb
mov
dec
xchg
sub
inc
int
inc
cs
mov
stos
sahf
sahf
aam
xchg
sub
je
movsl
hlt
inc
aaa
adc
std
mov
mov
mov
mov
mov
mov
push
mov
pop
mov
xor
dec
rolb
push
cmp
lcall
jmp
inc
out
mov
les
int
sub
inc
and
adc
imul
mov
and
es
out
dec
cltd
jg
pushf
pop
xor
cmp
mov
fdivrp
js
in
sub
out
int
add
fs
sahf
gs
inc
cmp
pop
testl
push
add
jp
xchg
fdivr
dec
jl
jns
mov
xor
push
sbb
out
bound
nop
sbb
sarb
pop
gs
sbb
push
insl
or
test
cmp
inc
jbe
lea
push
adc
push
cld
insb
mov
and
jnp
cmpsb
or
or
jecxz
add
xchg
cmp
or
es
out
mov
xor
loope
mov
xlat
add
add
fidivs
push
or
clc
add
push
int
push
dec
xchg
shl
add
icebp
mov
inc
fwait
les
mov
add
or
pop
cmp
js
sar
mov
out
dec
inc
add
mov
repz
dec
add
mov
and
je
loopne
xchg
popa
mov
or
ljmp
in
sub
jg
push
addr16
in
sbb
jne
lret
mov
mov
int
fildll
mov
addb
cmpsb
into
adc
fnstenv
ja
mov
mov
pop
sbb
mov
movsb
dec
pop
xchg
sbb
out
sbb
push
mov
sub
mov
ja
shrb
cmpsb
and
pop
pop
sbb
lds
incb
rcl
aad
mov
pop
xchg
fmull
fmul
imul
lods
cld
jno
mov
dec
mov
jae
add
out
cmp
mov
add
fucomp
mov
outsl
mov
inc
jecxz
aas
enter
add
cmp
cmpsl
xor
dec
xor
aad
jo
inc
fistps
lods
aam
pusha
mov
lods
mov
jg
das
cwtl
scas
push
cmp
aad
or
fistpl
adc
gs
sub
mov
ljmp
incl
lcall
test
xor
and
inc
bound
lret
out
lret
xchg
dec
mov
call
add
xor
jecxz
lahf
mov
repnz
pop
fidivs
xchg
ja
sarb
leave
cmp
loopne
and
jp
adc
mov
int3
and
push
adc
into
and
adc
and
in
mov
ljmp
xchg
inc
push
insl
bound
dec
cmp
jmp
sbb
push
or
loop
nop
insl
mov
divl
ja
rorl
mov
add
sbb
and
push
fistps
mov
and
in
shl
xor
lahf
pushf
imulb
mov
ja
push
cmp
in
ljmp
and
push
popf
or
stos
clc
lret
mov
adc
mov
ljmp
push
cmpsl
or
fdivr
es
incb
mov
cmp
mov
bound
mov
pop
testl
daa
xor
int
jns
inc
stc
gs
sub
fidivrl
mov
sbb
andl
mov
jecxz
popa
pop
pop
int3
mov
repz
jecxz
dec
ss
and
sbb
or
pop
les
jo
subb
lret
cmpsb
int3
dec
lahf
int3
mov
inc
and
jns
ret
out
mov
dec
pop
movsb
int
mov
inc
pushf
es
or
ret
jae
rcll
mov
int3
jne
xor
pop
shll
fs
or
in
mov
rclb
xchg
xor
les
ss
adc
and
cmp
int3
rsm
sub
scas
das
push
jecxz
xchg
popf
fwait
divb
push
insb
lret
jae
cmp
loope
dec
push
int
int
das
and
out
shrl
hlt
lahf
mov
add
xor
test
and
sub
or
fsts
popf
jno
push
xor
enter
rep
or
lret
mov
pop
aad
fs
or
sbb
shlb
ret
mov
mov
push
sti
push
xor
pop
sbb
or
mov
stos
ljmp
ret
inc
shll
arpl
pop
mov
inc
popf
or
test
xchg
pop
push
mov
scas
pop
inc
les
adc
flds
jb
or
sub
mov
inc
pop
andl
fnstenv
push
push
sub
ds
pop
sbb
or
imul
xchg
loopne
dec
jmp
insb
das
cmpl
pop
push
and
icebp
int3
test
xor
and
inc
test
adc
or
mov
inc
ficoms
inc
add
sbb
dec
movsb
inc
push
je
pop
dec
mov
fs
test
out
call
cmc
data16
in
sub
jno
push
cmp
inc
cmp
or
cmp
push
cs
sbb
inc
repz
jge
and
sbb
jne
push
cld
dec
pop
mov
sub
fsts
in
stos
int3
sbb
stc
add
ss
nop
xchg
fwait
in
aas
aas
mov
aas
or
jecxz
fidivrl
lock
pop
fstps
push
test
rcl
roll
fsts
cmc
cltd
xchg
adc
ljmp
popf
mov
test
sbb
jno
adc
cmp
pop
cmpsb
test
repz
imul
add
xor
pop
push
cltd
in
push
mov
pop
lret
fstl
cmp
ret
js
pop
sbb
adc
roll
imul
jge
sbb
mov
int3
cmp
mov
jl
sbb
test
dec
cmc
idivb
sahf
xchg
push
mov
cmp
or
aaa
jecxz
xchg
addr16
cld
movsl
mov
daa
leave
cltd
bound
sub
call
leave
mov
mov
inc
jecxz
cmp
sbb
mov
pop
movsb
adc
fstps
cmp
dec
lock
cmp
xchg
test
jnp
das
daa
mov
lds
imul
pusha
stc
loop
adc
imul
int
jno
in
cli
rcrb
or
and
mov
push
lret
add
enter
ljmp
sub
mov
movb
cmp
adc
ja
sti
ret
jg
mov
je
je
push
into
adc
jne
cmp
andl
pop
jb
mov
dec
shrl
in
arpl
push
in
cld
add
inc
dec
jl
cmp
cmp
mov
lea
cs
mov
fdivs
scas
push
mov
adc
pop
sarl
push
jl
into
pop
out
pop
xor
in
test
sub
and
mov
jbe
pop
and
dec
inc
jne
cmc
cltd
and
fstpt
pop
push
sub
jae
inc
fstpl
jecxz
popa
fdivrl
es
or
add
adc
cmp
insl
mov
cmp
push
outsl
pop
push
mov
jp
dec
jne
pop
xor
iret
mov
xchg
fucomi
jmp
pusha
lock
in
jl
mov
xlat
adc
into
insb
std
pop
das
das
sbb
sbb
rclb
in
das
and
dec
and
xor
shrl
in
push
jb
adc
jo
dec
mov
fucomip
lods
rorb
andb
imul
mov
mov
mov
cmpsl
leave
cmpsl
shlb
shll
jg
sbb
orl
add
dec
jb
in
jbe
jno
fcomi
mov
add
xchg
adc
loope
movsb
jge
sbb
in
lods
aam
mov
cwtl
pushf
rorl
es
mov
std
jg
in
inc
aaa
mov
int
scas
xlat
or
ret
andb
out
adc
fcomi
cmp
xor
cltd
or
mov
push
adc
call
push
mov
sbb
jl
dec
cltd
xlat
dec
mov
pop
jecxz
sub
ss
rcrl
jl
sahf
out
adc
ljmp
jne
xchg
inc
adc
fucom
push
pop
jecxz
aas
cmc
adc
xor
and
mov
mov
aaa
mov
ret
inc
xor
mov
sub
or
jnp
fsubl
mov
aas
cltd
aaa
and
cld
fisubrl
sbbl
int
sbb
push
je
rorl
push
fcompl
push
rclb
fldln2
sti
add
lret
movzbl
push
xor
clc
mov
arpl
inc
jae
loop
push
and
sub
pop
fdivrs
lods
fbstp
mov
std
adc
test
sbb
cld
inc
adc
mov
xorb
pop
cld
push
clc
es
push
ja
stc
imul
icebp
mov
xor
adc
dec
mov
jmp
lahf
cltd
xchg
les
lret
int
push
push
and
lahf
jecxz
cmpsl
sub
arpl
int3
inc
in
or
out
mov
outsl
fimull
xor
lcall
int3
mov
fildll
or
jecxz
pop
add
daa
jp
jl
adc
jecxz
jno
pop
or
jl
cwtl
sahf
fwait
in
pop
sub
test
call
or
lea
dec
push
dec
mov
xor
inc
xchg
cmp
pop
sete
mov
leave
cmp
fucomi
dec
imul
out
jp
cmp
pushf
repnz
and
mov
cli
push
or
mov
rcr
xor
adc
add
fldt
pop
xchg
lcall
idivl
test
xchg
mov
dec
and
rcrl
icebp
movsl
movsb
repnz
call
mov
jecxz
iret
adc
add
pop
pop
leave
leave
orb
rcll
sub
xchg
dec
out
sbb
dec
pushf
dec
into
divl
aaa
jae
push
call
gs
cli
repnz
and
mov
popf
cltd
ret
je
pop
sahf
dec
sahf
pusha
xchg
jnp
bound
xchg
cltd
popf
das
pop
jp
adc
cmpsl
lret
sub
jle
xchg
pushf
adc
fbstp
sub
js
data16
leave
dec
fdivrl
int3
sbb
jae
hlt
mov
adc
and
xor
sub
inc
lret
fnstsw
mov
mov
scas
xchg
test
enter
ljmp
and
pop
mov
addl
aad
add
sbb
mov
jle
fidivl
add
mov
jmp
in
add
repnz
leave
test
or
sub
hlt
int
js
gs
pop
sub
mov
in
scas
jnp
push
out
lret
filds
mov
popa
lcall
leave
push
sbb
xchg
subb
data16
dec
jp
cmpsb
ja
hlt
fadd
mov
nop
or
and
pop
popf
enter
outsl
adc
js
xchg
sub
pushf
fimull
cmp
cmp
mov
add
cmp
in
pop
cmc
shr
jg
aad
sbb
leave
dec
outsb
jne
imul
ja
push
mov
setbe
inc
aam
testb
inc
mov
test
in
mov
cmp
jmp
xor
cmpsb
push
pop
mov
fldenv
pop
adc
popw
repnz
test
xchg
das
mov
test
jmp
or
inc
loope
cmp
fidivl
in
popf
or
add
or
sbb
cwtl
adcb
repz
inc
mov
movsb
cmp
mov
push
xor
xlat
lahf
pop
pop
es
movsl
insb
xchg
jge
mov
xor
push
imull
inc
mov
push
lock
repz
test
jns
in
pop
sti
mov
adcb
popf
cmp
fwait
jg
dec
cmp
xor
ficomps
xchg
sbb
stos
sahf
mov
adc
hlt
mov
test
push
jo
sti
leave
cli
aam
pop
repz
push
repnz
int3
inc
arpl
pop
xor
jnp
mov
and
add
xlat
xchg
jno
int
pop
das
fistpl
add
rcr
jne
mov
xchg
push
mov
test
add
mov
insb
cld
shll
jbe
mov
or
in
data16
addb
pop
arpl
fisttps
mov
ljmp
outsb
push
cmp
xor
mov
sub
fdivl
jmp
xchg
lock
mov
aaa
test
mov
and
clc
dec
add
test
int3
js
add
jge
inc
lods
idivb
xchg
jp
mov
hlt
dec
mov
and
out
push
dec
mov
xchg
xor
or
lods
sub
and
jl
dec
lea
daa
cwtl
in
cwtl
hlt
adc
sub
dec
inc
cmc
bound
stos
adc
xchg
dec
mov
movsb
clc
idiv
mov
xor
int3
pop
andb
ficoml
mov
adc
cmp
lods
inc
enter
out
mov
ja
pop
repz
repnz
aas
push
rep
mov
xor
das
pop
je
sbb
and
push
and
and
je
xor
jo
mov
repnz
jb
jge
pop
movsb
or
out
pop
ret
push
and
test
jbe
sub
clc
mov
sbb
sub
pop
add
inc
xchg
popa
rorl
std
iret
dec
push
aad
loope
cmp
mov
sub
sbb
fs
push
cmp
jne
sub
aam
ljmp
int3
outsl
scas
leave
or
les
imul
mov
add
movsl
js
jnp
sbb
mov
cmp
in
movb
dec
mov
mov
icebp
pop
pop
mov
xor
bnd
mov
in
mov
jne
dec
out
mov
mov
je
sbb
div
stc
inc
pop
js
cmp
into
dec
iret
jmp
or
fcomp
xchg
jecxz
mov
aad
imul
cmp
xchg
adc
gs
scas
in
mov
leave
lds
and
push
shll
adc
or
add
lods
mov
fildll
sbb
jbe
sti
out
bt
mov
out
sbb
xchg
fdivl
mov
pmulhuw
imul
push
add
pop
into
cmpsb
inc
push
dec
add
lret
addr16
popa
test
push
inc
loopne
push
or
fs
cmp
ret
push
shll
leave
jnp
and
outsl
shll
jecxz
pop
jne
fistps
int
or
push
shlb
add
dec
push
icebp
pop
out
lea
jecxz
pop
stos
xchg
xchg
add
es
cltd
push
mov
popf
xchg
mov
cltd
mull
sub
lahf
int
nop
lahf
icebp
push
shll
add
jb
jp
out
clc
test
adc
xor
pop
lods
loope
add
movsl
mov
mov
and
aad
push
inc
negb
fwait
pop
push
scas
mov
mov
les
aas
pop
jo
push
or
push
arpl
jle
cmpb
push
jge
add
and
push
or
dec
or
loop
scas
insb
js
leave
add
std
shlb
stos
mov
push
stos
mov
mov
jnp
sbb
es
xor
bound
repnz
inc
xor
dec
mov
and
pop
push
push
cli
loopne
pop
adc
mov
inc
in
jg
push
imulb
adcb
pop
dec
out
aad
push
daa
addps
or
rorl
rorl
sbb
sti
fimuls
push
mov
lock
sti
cmp
insl
add
daa
xlat
jecxz
inc
xchg
pop
inc
rol
mov
and
int3
aad
cmp
ret
inc
sub
call
jle
int
hlt
and
je
push
in
fadds
jne
pushf
je
lcall
mov
dec
jge
cmp
inc
inc
inc
dec
pop
insl
mov
lods
into
test
loopne
std
lds
sbb
inc
call
push
jl
nop
lret
mov
sub
xchg
int
and
xchg
dec
fstps
add
sub
mov
movsb
ficoms
ja
testl
mov
lahf
int3
lret
aas
inc
add
ss
jns
aam
mov
cs
rep
fadd
pop
xor
inc
pop
icebp
jecxz
xor
out
and
pop
cwtl
insl
scas
lret
icebp
xor
loopne
outsl
insl
sbb
mov
popf
xorl
jne
lods
imul
jecxz
fadd
movsb
ficoml
xchg
dec
in
outsl
push
cmp
and
xlat
adc
int
cmp
or
idivl
adc
sbb
test
lods
lock
and
imul
scas
shlb
outsl
and
aaa
sub
addl
mov
mov
pop
aaa
lods
sbb
cmp
repz
pop
in
inc
xchg
cmpsb
insb
inc
sbb
fimull
or
ja
jb
pop
adc
mov
add
sub
insl
aam
cld
rol
ljmp
dec
mov
adcb
and
test
pop
lock
add
xor
and
js
popf
in
adc
jl
and
loop
xor
mov
repz
inc
mov
pop
stos
movsl
sub
xchg
addr16
jge
push
ja
dec
adcl
je
dec
inc
cld
sti
and
cltd
lahf
inc
fcoml
or
lcall
into
ret
dec
or
lret
xlat
cli
repnz
sub
mov
xor
xor
lahf
sarl
mov
jmp
testl
clc
xor
jg
xor
adc
mov
fcmovnbe
lahf
je
cmp
cltd
xor
jecxz,pn
xchg
ja
nop
cli
xchg
sbb
loopne
lcall
jmp
cwtl
and
mov
out
xchg
sub
out
sti
and
pop
cmp
test
and
mov
movsl
stos
or
pop
test
add
fnstenv
push
ljmp
xchg
loop
arpl
dec
in
xlat
lcall
test
xchg
shll
rcrl
std
sbb
pop
int3
jnp
rorb
xchg
mov
jnp
cmpsb
adc
sub
jmp
or
mov
fmuls
jbe
cmpb
setno
popf
xchg
es
mov
mov
or
xchg
pop
push
add
mov
and
push
add
xor
mov
imul
dec
movsl
sbb
push
mov
pop
loop
mov
and
and
mov
gs
and
push
push
jge
sub
sbb
mov
fsubp
lea
push
sub
in
lods
jle
push
cvtpi2ps
mov
sbb
pop
inc
inc
inc
imul
in
or
punpckhdq
and
pop
lahf
xchg
and
cmp
mov
test
push
fwait
aaa
test
iret
aas
push
adc
negb
in
pop
push
mov
pop
mov
push
adc
and
pop
cld
out
inc
xchg
mov
out
in
scas
outsl
imul
jl
scas
xchg
and
adc
movsl
pop
add
mov
aaa
jp
inc
loope
fdivs
inc
incl
inc
imul
push
xor
imul
filds
xor
cwtl
sahf
sbb
movsl
mov
xor
in
out
xchg
out
adc
out
movsb
push
repz
or
jge
pop
aad
and
dec
adc
or
jns
push
push
shrl
aas
add
in
mov
lret
mov
mov
cmp
jp
inc
testb
bound
daa
sub
inc
sbb
inc
sub
shll
pop
inc
imul
lock
cli
push
rcll
fs
lods
fildll
cmc
xorl
sbb
sbb
mov
push
popa
sbb
hlt
mov
repz
lds
cld
enter
les
nop
mov
out
cmc
out
mov
jg
mov
pop
or
xchg
outsb
sbb
pusha
sub
push
leave
call
fwait
clc
aad
inc
clc
lahf
sbb
push
pushf
cmp
insl
ja
jno
mov
stos
add
xor
xor
or
inc
inc
mov
sub
xchg
sub
cmp
movsb
lds
mov
test
dec
or
push
rcll
push
jg
add
xor
out
imul
cwtl
ret
clc
push
adc
out
or
and
dec
lret
ljmp
ret
rorb
and
mov
pop
mov
cld
pop
shrl
cmp
mov
pop
xor
test
shrl
jl
mov
inc
pop
mov
lds
inc
dec
xlat
dec
push
negb
adc
repz
sub
cmpb
into
pop
mov
pushf
push
clc
scas
shll
inc
mov
mov
and
cltd
out
mov
mov
repnz
cmc
mov
dec
xchg
test
adc
fidivrl
pop
repz
fwait
mov
push
mov
loope,pt
add
icebp
sbbb
dec
cmpsb
adc
push
mov
rcr
mov
push
scas
lahf
ret
mov
sbb
mov
mov
cld
lods
push
mov
mov
sahf
imul
sar
sub
pop
sbbb
xor
into
sbb
loope
std
jl
mov
adc
pop
out
mov
dec
fimull
fldl
push
jns
pop
add
xchg
inc
aad
jb
jmp
fucomp
loop
add
in
xchg
jno
mov
aaa
mov
sub
fisttps
mov
popa
leave
sbb
call
scas
or
out
subb
stos
lahf
jmp
testl
cmp
mov
adc
addr16
pop
xchg
push
in
adcb
out
daa
bnd
xchg
movsb
ret
add
mov
inc
sbb
pop
jae
lods
fcoml
inc
test
mov
dec
push
loop
ljmp
stc
sub
pop
sub
das
ret
mov
pop
stos
ret
sbbl
mov
xchg
movsb
repz
or
movsb
push
aas
mov
adc
test
ret
or
fwait
rcrl
sbb
test
scas
mov
xor
movsl
fwait
movb
sbb
push
fidivrs
xchg
subl
mov
arpl
xlat
fildl
es
addr16
lea
sub
sub
ds
push
xchg
pop
pop
inc
adc
aaa
dec
adc
inc
mov
or
cmpsb
int
dec
sub
push
xchg
jno
xchg
scas
jge
mov
or
iret
subl
inc
push
in
xor
adc
aaa
xchg
jmp
push
jb
out
popa
lds
sub
xor
add
mov
mov
sahf
sub
cmp
xor
pop
test
sub
and
es
xchg
lock
push
nop
jns
insl
loopne
fadds
outsl
mov
idivl
icebp
hlt
sbb
sbb
andl
push
sub
lods
xor
shrl
repz
xor
cmp
clc
aad
adc
es
lret
or
mov
shrl
mov
mov
cmp
in
add
or
shlb
cmp
pop
xchg
mov
jno
pop
adc
aam
incb
push
mov
mov
dec
xchg
scas
ss
xchg
scas
sti
push
fidivrl
pop
pushf
dec
test
cmpl
jae
push
xor
ss
insl
dec
xor
cli
and
xchg
mov
jnp
xchg
hlt
cs
sub
sti
inc
ret
out
in
dec
mov
push
push
mov
pop
cmp
aad
test
in
insb
orl
pop
dec
test
pop
add
sub
aaa
fisubs
pushf
mov
mov
dec
imul
cmp
mov
add
movsl
cmp
insl
sti
ja
jp
pusha
adc
sub
inc
outsb
std
mov
mov
xor
cmpsl
js
xchg
les
adcl
cs
inc
dec
dec
pop
adc
xor
xchg
movsb
and
lret
daa
push
call
push
es
popf
movsb
jno
pop
loopne
push
push
mov
std
xchg
out
or
lods
popf
add
add
scas
add
imul
test
mov
xchg
sti
dec
xchg
add
push
aaa
clc
clc
pusha
and
cmp
mov
and
and
pushf
cmp
int
loop
jmp
inc
loope
ret
testl
jnp
add
fdivr
dec
sbbb
in
subl
pop
fisttps
add
lds
pusha
inc
mov
fxch
add
addr16
daa
and
add
push
rclb
scas
gs
outsl
nop
inc
arpl
jnp
dec
push
je
and
lock
scas
cmp
fcomip
insb
and
iret
rcr
ficompl
fsubrl
sub
cltd
push
mov
adc
jmp
arpl
mov
push
fsubrl
test
inc
xchg
lea
clc
push
pop
test
mov
div
das
jne
cmpsl
xchg
and
adc
pop
stos
cmpsl
xchg
aam
push
daa
fbld
jno
les
lds
mov
and
aas
push
stc
xor
jmp
shlb
inc
hlt
in
loope
js
lret
lahf
mov
jns
xor
iret
pop
sub
dec
jne
sbb
movsl
dec
out
push
push
adc
fisubl
insl
and
std
aam
stc
je
sub
mov
mov
dec
fnstcw
push
test
lods
jae
repz
rolb
ss
insb
mov
mov
fwait
popf
cmpsl
enter
addr16
pop
lcall
fcmovnb
inc
mov
fwait
lods
into
imul
into
pop
ss
push
push
mov
gs
cs
fcmovne
mov
dec
mov
dec
aad
imul
mov
nop
cltd
lods
push
cli
adc
mov
je
cld
out
test
stc
adc
inc
mov
stos
add
nop
gs
fmul
lods
out
cmpsb
xchg
jg
es
jecxz
jns
jge
je
jg
and
movsl
call
jns
sub
ja
movsb
mov
inc
lock
pop
mov
sub
push
repz
xor
out
adc
mov
stos
cmpsb
js
std
adcl
fucomi
test
xorl
jle
lods
push
dec
fmul
xchg
and
or
stos
adc
or
es
jle
xor
mov
je
jle
cltd
mov
xchg
lock
sbb
push
dec
fcoml
in
lea
ret
movsb
add
xchg
mov
dec
repnz
rcr
adc
xchg
mov
shl
scas
outsb
sbbl
aaa
push
test
shlb
bnd
into
inc
jne
dec
sub
icebp
ret
fmuls
rclb
flds
movb
cld
rcl
add
jae
cwtl
shll
in
outsl
adc
repz
xor
mov
shll
cmc
or
cwtl
dec
call
add
int
mov
cmp
pop
mov
push
and
push
push
aam
movsb
inc
push
jo
cwtl
mov
sub
fwait
clc
dec
inc
dec
dec
iret
xchg
jne
insb
pop
js
jbe
dec
cmpsb
xchg
mov
loope
mov
mov
sub
les
fstpt
movsl
repnz
inc
dec
push
mov
inc
jnp
inc
mov
repnz
in
loop
adcl
sbb
dec
icebp
adcb
aad
push
jl
and
cwtl
cmp
push
lcall
cmp
sub
aaa
inc
mov
adc
das
lods
fsubrs
jge
addr16
loopne
push
cmc
xchg
fs
pop
jp
adc
push
lock
les
stos
pusha
shlb
or
cli
lods
into
xor
push
jne
fsubrl
shll
sarl
xlat
push
mov
inc
lock
jno
xchg
ror
pop
push
scas
lock
push
fnstenv
xor
inc
mov
mov
xor
xchg
inc
inc
jl
adc
fadd
fistps
pop
in
popa
dec
pop
call
mov
inc
int
cmp
push
rol
xchg
pop
cltd
push
sub
jmp
lret
sbb
xor
mov
and
inc
xor
nop
std
inc
les
push
push
movsb
aad
pushf
lahf
xchg
stc
or
and
in
repnz
inc
xor
mov
xchg
dec
negl
dec
lcall
insl
ret
and
out
shrb
fcompl
sbbb
cmc
stc
sub
rcl
add
cmp
push
dec
sub
mov
mov
je
pop
push
cmp
call
cltd
int3
push
popa
push
xor
pushf
pop
xchg
shlb
hlt
lods
xchg
fimuls
inc
rorl
into
sbb
mov
xor
test
pop
dec
jo
sbb
js
aas
push
pop
repnz
scas
sbb
lret
mov
or
inc
loope
insl
or
mov
cmp
mov
jo
add
movsb
repz
dec
fwait
repz
lock
jmp
sti
push
push
jne
mov
popf
add
add
and
inc
and
sub
adc
aam
jecxz
lret
icebp
and
out
aas
mov
addr16
push
lcall
xchg
lret
cmpsb
stc
jno
fnstenv
in
in
int
test
fildl
mov
or
xchg
and
iret
fsub
push
outsb
xor
push
pop
pop
lods
mov
pusha
iret
pop
adc
lods
ret
adc
pop
push
aaa
test
pusha
mov
add
sub
stos
dec
xor
add
lcall
mov
test
ljmp
test
imul
and
bnd
ds
scas
push
test
scas
aaa
aaa
and
push
dec
faddl
adc
sahf
ret
jp
roll
xchg
fsubl
outsb
jo
sbb
fcmovbe
mov
scas
fiadds
aad
lret
insl
dec
sahf
adc
imul
out
mov
cmove
xor
pop
adc
push
or
jns
cmp
xchg
push
sbb
push
jge
in
mov
sbb
push
popf
cli
es
in
mov
pop
xchg
cmp
sub
push
inc
lfs
jno
push
fldcw
add
daa
push
std
addr16
cmp
add
adc
push
push
and
cld
shl
inc
ja
jnp
xchg
adc
jb
cmp
mov
sub
push
jmp
loope
insb
and
aaa
add
in
fsubrl
push
filds
cld
mov
push
pushf
or
aam
sbb
cmp
ljmp
cmp
scas
sbb
sub
jo
lret
daa
jbe
gs
add
sbb
int
cli
lods
jg
jae
les
dec
sub
orl
sbb
sarb
lcall
pop
cmp
push
mov
pop
push
sub
mov
sarb
mov
push
ret
xlat
mov
push
cwtl
in
aaa
lods
ljmp
shrl
xchg
lret
test
test
aaa
push
mov
pop
adc
pop
imul
or
shlb
jmp
xor
in
adc
or
xchg
add
xchg
ljmp
ja
nop
call
mov
int
jg
leave
cs
ficoml
daa
sbb
jns
jp
mov
push
xchg
mov
cmc
dec
cmc
mov
gs
nop
popa
sbb
cmc
and
sbb
orb
add
inc
subl
push
or
js
sub
or
fwait
stos
lock
cld
lret
gs
cwtl
xchg
mov
xchg
movsb
push
jo
mov
and
or
adc
rdmsr
xor
xchg
or
inc
push
xor
sub
clc
ds
aaa
ret
xchg
lock
jae
pop
add
iret
jb
inc
inc
inc
ljmp
push
rcl
sbb
push
lret
leave
lcall
mov
mov
cwtl
mov
inc
lret
cmp
inc
in
jp
imul
hlt
pop
sar
testb
cmc
adc
jae
xor
sub
pop
cmpsb
out
jge
je
ret
dec
jo
adc
imul
cmp
aas
arpl
jno
jmp
loope
mov
inc
shlb
add
jle
or
stos
sub
and
outsb
jmp
aad
repz
xor
mov
jmp
sbb
sti
dec
pop
adc
jge
loop
mov
daa
decl
mov
pop
mov
dec
adc
mov
push
inc
sub
cmpsb
mov
aad
jecxz
xchg
in
jmp
sub
es
stc
filds
arpl
in
addr16
ljmp
inc
ljmp
and
out
fldt
adc
dec
inc
cmp
hlt
ss
mov
cmp
pushf
pop
mov
sub
fsubrp
loop
insb
and
arpl
inc
mov
les
insl
stos
mov
cs
pop
mov
push
push
sub
or
mov
jl
aam
push
dec
jg
dec
cmpb
arpl
dec
addl
loop
test
push
sub
aaa
fs
pop
dec
test
or
sub
pop
mov
repz
adc
inc
movb
pushl
or
aaa
sti
jb
cmp
add
out
fisubs
pop
or
mov
cmpsl
xchg
xor
rorb
sub
adc
cld
mov
das
shll
subl
cmp
stos
nop
jg
cmpsb
arpl
adc
jno
lods
pop
lret
aas
rcll
dec
pushf
popa
add
xlat
mov
mov
and
cmp
xor
sub
push
cmp
add
cltd
or
or
adc
push
rcr
test
add
cmpl
fs
xchg
stos
cmc
xor
push
nop
mov
ss
test
fdecstp
mov
jb
test
test
icebp
fbstp
jle
sub
cld
std
mov
pop
xchg
dec
xor
jns
pop
jo
pop
adc
ds
and
lret
and
fs
jle
cmpsb
sbb
in
push
imul
and
jmp
xorl
or
lods
adc
add
pop
cmp
mov
int
out
sbb
push
mov
es
pushf
mov
push
mov
inc
rolb
lret
and
dec
sbb
jge
repnz
push
stos
cwtl
sbb
in
flds
xchg
xchg
push
cmc
shll
imul
push
orl
xchg
in
mov
addr16
cmpsl
xor
adc
jge
and
and
fnsave
dec
ret
dec
mov
adc
imul
lock
sub
jp
inc
add
iret
cmp
fdivs
pop
xor
dec
mov
sahf
fwait
out
stos
ljmp
xchg
or
test
mov
fisttps
out
xchg
int
mov
xchg
or
mov
lods
push
lods
cmp
mov
rolb
test
sub
pop
push
iret
cmp
sub
add
hlt
scas
cmp
push
out
jnp
jae
dec
inc
mov
js
stos
pop
mov
dec
movsl
push
mov
add
rcll
ja
loopne
call
dec
push
subb
ljmp
jb
fnstsw
outsb
push
or
fdivl
movb
pop
shrl
mov
add
inc
sbb
pop
inc
push
shr
sub
insb
jne
cmp
dec
sbb
mov
icebp
or
push
pop
jno
push
and
lcall
das
loope
fdivl
xor
mov
mov
js
lret
or
cmc
mov
rcr
inc
push
lret
mov
push
push
inc
push
adc
jne
jnp
rorl
mov
cmp
xchg
imul
loop
frstor
call
pop
xchg
xor
fs
nop
sub
mov
xchg
mov
jmp
lahf
insb
iret
add
popf
dec
or
lods
mov
gs
movsb
add
dec
imul
add
stc
pop
mov
fcompl
add
shll
rclb
ss
dec
lds
stos
jmp
jmp
push
lcall
and
dec
ja
sti
nop
fs
jl
pop
lock
mov
and
fiaddl
xor
out
mov
push
out
xchg
push
ja
mov
into
xor
mov
in
mov
or
divps
and
cmp
outsb
inc
mov
xor
test
addl
pushl
shl
int3
mov
leave
sbb
mov
mov
cmc
mov
sbb
je
pop
pop
and
fs
lret
shrb
sub
popf
or
cmpsb
mov
add
inc
pop
imul
sub
sbb
lock
fldl
out
jp
add
out
jae
add
cmp
mov
test
jns
mov
jo
xor
push
pop
dec
push
mov
rcrb
popa
or
push
sub
loop
movsl
vminss
lahf
es
fprem
add
xchg
ficoml
pop
cmpl
subb
add
dec
mov
xor
daa
imul
jo
fxch
push
push
jno
rcrb
mov
movl
pop
inc
add
mov
fdivr
xor
jge
cwtl
push
fidivs
shr
out
cld
push
inc
test
outsb
push
popa
leave
leave
enter
lods
lods
xchg
cmp
fmull
loop
push
faddl
clc
and
in
aaa
jbe
cmp
es
sbb
mov
stos
mov
push
xchg
sub
pop
mov
xorb
lock
xlat
lods
movsb
popf
cmpsl
ds
into
mov
shr
adc
dec
andb
xchg
lea
outsl
mov
in
iret
push
adc
shlb
mov
pop
test
dec
mov
pop
enter
ret
mov
sbb
mov
int3
dec
lcall
and
ficoms
out
cwtl
mov
xchg
mov
repnz
xor
pusha
call
in
and
mov
aam
int3
pop
sub
mov
cmp
insb
repnz
insb
shlb
mov
adc
jno
test
inc
jae
or
jle
inc
fsubs
and
movsl
sub
cltd
and
sbb
adc
adc
insl
ja
inc
ljmp
cmp
out
aaa
mov
or
mov
int
test
int3
inc
cmp
popl
xor
inc
xor
xor
es
jl
cltd
cmp
add
addr16
and
in
sub
in
mov
lods
popa
std
pop
hlt
test
movsb
fimull
push
out
dec
mov
testl
in
fsub
arpl
cmpsb
push
iret
dec
jge
xor
sbb
sub
fcmovnbe
sub
lods
int
mov
popa
mov
in
shr
mov
xchg
scas
adc
lahf
xor
xorl
mov
inc
cmpl
and
dec
mov
fstp
mov
jle
fiadds
push
test
mov
fwait
out
shll
daa
jmp
rclb
sbb
sbb
xchg
in
add
sub
mull
rorb
inc
pop
stos
mov
nop
cmp
jecxz
sub
imulb
pop
popa
push
lods
mov
sbb
push
push
fsubr
jp
movsb
ret
lcall
daa
inc
push
inc
push
fcmovnb
dec
out
inc
std
imul
add
jg
ret
pop
fdivp
mov
fdivr
divl
insb
sub
push
jecxz
add
push
mov
xchg
add
test
pushl
icebp
shlb
add
pusha
jp
jno
stc
lret
je
mov
lret
incb
sbb
sub
bound
xchg
fs
adc
in
mov
push
dec
push
sub
lcall
faddp
aad
push
sbb
jle
pop
or
add
cli
jle
push
inc
add
xor
sub
inc
mov
xchg
repz
cmc
aas
inc
cmp
bound
pop
mov
cmpsl
dec
pushf
jns
xorl
shll
mov
inc
push
jno
fstpt
add
jmp
cmpb
lahf
xor
mov
add
das
sbb
inc
les
dec
push
cmp
add
and
cmp
jmp
add
add
ljmp
fwait
nop
add
push
js
mov
xor
mov
je
mov
add
in
into
ret
sub
imul
sbb
orl
loopne
mov
icebp
sub
add
pop
adc
aad
les
inc
lea
movsb
xchg
xchg
movswl
jle
mov
outsl
jo
gs
xchg
orb
mov
cmp
insb
ltr
and
clc
dec
mov
mov
test
loopne
ficompl
or
push
scas
fsubrs
pushf
cmpsb
roll
sub
pop
rclb
fdivrs
adc
movsl
call
jbe
xchg
jmp
or
icebp
xchg
sti
jno
and
jecxz
push
or
adc
sbb
or
cmp
pop
sub
sbb
test
mov
mov
sub
enter
out
mov
xchg
xor
and
sub
lcall
mov
mov
mov
mull
fucom
push
mov
pop
jno
imul
push
inc
adc
push
mov
cli
and
test
fists
mov
sbbl
mov
cmp
push
xor
mov
out
pop
xchg
push
cmc
jp
pop
pop
movsl
push
and
jle
add
ret
xlat
lcall
push
fwait
mov
xor
dec
lret
mov
adc
push
stos
push
xchg
sbb
or
sahf
rcl
xor
insl
jns
scas
push
and
mov
dec
push
xor
es
adc
rorl
push
dec
mov
mov
ss
push
or
jno
imul
jmp
out
out
xchg
jno
fsubrp
cmp
ljmp
int3
inc
fwait
or
mov
push
out
jbe
sbb
in
shl
add
mov
add
les
daa
inc
add
dec
repz
lock
pop
stos
mov
mov
dec
pop
lret
sahf
xchg
cwtl
adc
imul
jl
jno
or
dec
je
mov
push
add
fstpl
shlb
int3
repz
or
aaa
movsb
push
cmpl
adcl
es
sbb
and
pop
bound
jno,pn
push
sbb
fs
and
push
pop
dec
add
xchg
mov
mov
jmp
mov
aad
fsubrs
or
mov
jg
jno
addr16
jns
mov
clc
sbb
fs
dec
sbb
lock
push
mov
rolb
mov
shll
xchg
ficompl
aaa
cmp
mov
xor
or
cltd
insl
cmpsb
cmp
pop
jmp
ss
pop
cmp
mov
stos
mov
outsb
xor
jmp
test
push
sub
jns
lds
mov
fwait
in
testb
test
lahf
jg
xchg
test
int3
jl
idiv
push
xchg
cmp
push
mov
xor
iret
addr16
insl
xor
xor
adc
fs
mov
xor
lods
pop
inc
rcrl
incl
mov
data16
dec
and
sarb
scas
leave
call
push
push
xchg
cld
mov
adc
insb
ja
fwait
sub
inc
int3
xchg
lret
in
lods
add
lret
insb
and
or
std
clc
les
scas
sub
popf
les
pop
pop
sub
pop
cmc
push
lret
pop
adc
add
push
add
imul
cmp
xchg
iret
cltd
not
adc
push
outsl
lods
shl
inc
sub
push
mov
jge
xor
and
xchg
mov
inc
cs
cmc
pop
mov
cmp
int3
movb
cmc
loope
adc
sahf
cltd
pusha
adc
js
lcall
cs
lock
jp
andl
ja
push
faddp
add
sbbb
rolb
inc
xor
sub
adc
and
push
mov
xchg
pop
jecxz
push
js
mov
mov
xor
mov
rcll
fisubs
dec
pop
sub
cmp
into
in
shl
mov
test
dec
mov
les
adc
mov
and
add
imul
sbb
lret
fcomps
jo
daa
dec
aam
xor
xor
lods
sahf
aad
mov
mov
js
mov
test
test
pop
ror
mov
inc
pushf
jp
in
inc
loope
add
xchg
add
mov
les
sub
insl
mov
sbb
lock
mov
stos
xchg
add
in
mov
sahf
mov
shll
in
dec
pop
xor
xchg
out
and
cmp
inc
xchg
cmp
lahf
cmp
add
jns
rorl
adc
push
xor
mov
push
mov
jno
xlat
add
lret
pusha
and
mov
icebp
cmp
jmp
push
sti
lcall
xchg
pop
cmc
divl
push
cmp
push
cmpsl
cmp
inc
testb
sbb
scas
mov
fcoml
sub
fldl
xor
mov
je
dec
xchg
push
sbb
testl
popa
mov
js
test
jp
pop
sbb
xchg
push
sub
adc
icebp
inc
loopne
and
xor
jae
aaa
aas
add
fnstenv
ljmp
outsl
jecxz
mov
xchg
fidivrl
sub
pop
cmp
xor
ds
xor
push
inc
mov
insb
gs
aam
call
mov
stc
test
adc
add
pushf
jl
push
xor
jo
xchg
or
rcl
int
sub
mov
xchg
push
or
adc
sub
dec
adc
adc
or
mov
jecxz
in
ds
pop
stc
add
mov
mov
sub
cmpsb
insl
push
iret
out
add
push
es
xlat
jo
rcrl
jge
stc
jns
cltd
mov
repnz
cmp
fwait
jp
xor
add
xchg
xchg
mov
or
add
mov
pop
lret
push
mov
pop
mov
imull
sbb
stc
femms
orb
repz
jno
xchg
fs
sbb
popf
jg
enter
mov
ret
in
mov
dec
mov
mov
mov
pushf
and
mov
pop
cld
xor
inc
inc
sbb
cmp
das
sbb
scas
inc
jg
aas
xlat
sub
cmp
test
sbb
loop
xchg
add
sbb
addl
pusha
push
mov
popa
mov
mov
in
jl
arpl
mov
int
sub
ret
orl
aam
and
orl
aam
fwait
mov
or
jae
mov
ds
cwtl
xchg
jl
fcomps
jg
sub
out
testb
pop
mov
xchg
movl
xchg
mov
je
mov
enter
cmp
int3
pop
jl
mov
sbb
pop
arpl
and
jle
outsl
daa
add
scas
or
mov
std
push
pop
test
pushf
and
pushf
popf
cmp
mov
in
stc
push
xlat
fadds
xor
out
add
xchg
inc
movsb
xchg
lods
test
mov
mov
push
je
sbb
jg
and
and
add
pushf
push
inc
xchg
add
pop
fcomps
fucom
jge
xor
stos
lcall
jle
je
rclb
pop
dec
pop
int3
faddl
out
lods
cli
cmp
sbb
out
lods
and
dec
inc
pop
or
pand
mov
adc
gs
arpl
push
shrb
popf
mov
pop
inc
popf
and
dec
ret
add
dec
loope
loop
mov
lret
das
outsb
dec
stos
rcrl
and
inc
cli
adc
mov
cmp
stc
sub
cli
pop
jge
fs
movsl
adc
sbb
jno
outsl
lret
pop
lret
pop
scas
in
pop
stc
out
fs
stos
repnz
inc
aas
sub
push
lcall
push
shlb
inc
stc
pop
dec
icebp
decl
mov
push
inc
cmc
sti
mov
les
repz
adc
icebp
stc
daa
sahf
mov
jnp
sbb
lods
lods
xchg
outsl
adc
imul
jge
mov
xchg
fs
add
lods
iret
mov
dec
cmp
jle,pn
mov
ja
addb
shrb
mov
adc
or
pop
dec
cld
es
xchg
mov
push
je
adc
fsubl
xchg
out
xor
mov
imul
cmp
jecxz
mov
mov
or
sbb
lret
mov
outsb
inc
popa
mov
sbb
cmc
movsb
push
fiaddl
dec
sbb
bound
xor
pop
flds
or
sbb
or
inc
in
jmp
pop
mov
sbb
pop
sbb
mov
test
lods
push
xchg
imul
xchg
dec
sbb
xor
push
ret
arpl
jg
sub
xor
in
mov
hlt
xchg
jl
test
imul
mov
sbb
sub
pop
mov
lods
inc
sbb
push
sub
mov
and
cmp
jge
rolb
add
mov
addr16
insl
push
mov
adc
lahf
cmpsb
out
jnp
xadd
inc
adc
leave
fdivl
push
add
sub
test
adc
mov
lods
or
out
rcr
mov
push
mov
jmp
xchg
sbb
inc
lahf
sbb
dec
nop
arpl
mov
mov
xchg
dec
cmpsb
inc
jbe
and
adc
sub
shrb
mov
sti
aas
sbb
outsb
leave
iret
shr
lret
pop
pushf
adc
icebp
fcmove
mov
xor
jns
jmp
insb
push
fistps
xor
clc
mov
sub
pop
xchg
dec
cmpsb
xchg
inc
inc
add
sbb
cld
inc
push
jae
int
enter
mov
lds
jg
inc
push
in
enter
les
fs
jle
jge
jo
movsl
cmp
sub
leave
outsl
sub
xchg
es
movsl
add
pop
jnp
inc
sti
mov
cli
test
shll
in
dec
scas
jl
fnsave
clc
adc
xchg
xchg
mov
lahf
push
sarb
outsl
fisttpl
jo
mov
lret
or
sbb
leave
stos
cs
dec
mov
cmp
aam
adc
dec
lea
int3
jbe
cmpsl
push
aad
xchg
mov
fsubp
and
popa
in
ds
mov
add
pop
sti
sbb
mov
dec
rcr
jge
inc
in
je
sub
mov
fstpt
dec
inc
shrb
xor
adc
jle
push
push
ror
arpl
xchg
mov
fdivrl
nop
sub
or
insb
xchg
ffreep
int3
out
ret
arpl
call
subb
lahf
pop
cmc
imul
pandn
insl
xchg
sbb
stos
lret
cmpsl
leave
xchg
xchg
mov
pop
add
arpl
inc
xchg
aas
or
dec
mov
cmc
mov
sti
cmp
ja
jae
int
sbb
movsb
adc
sbb
out
flds
sahf
cs
bound
xchg
lock
and
stc
cld
test
jo
in
enter
lock
scas
pop
js
roll
jge
jg
sbb
ja
je
shr
rclb
stos
mov
leave
bound
dec
cmpsl
fwait
mov
popl
lahf
sub
pop
mov
mov
sbbl
rolb
and
or
in
ffree
lret
aas
imul
cwtl
or
push
xchg
add
div
inc
add
push
mov
pop
iret
inc
shlb
xchg
push
lods
pop
out
pop
cmc
sahf
in
scas
ss
divl
je
push
xchg
pop
dec
adc
andl
adc
adc
jnp
test
insb
xor
sbb
and
cmp
movsb
jno
sub
xor
das
adc
out
jg
push
and
inc
ss
push
insb
call
mov
mov
jb
push
lods
fists
out
lock
or
cs
fnstcw
stc
cmpl
es
mov
xor
or
bound
sbb
dec
inc
jge
out
pop
imul
shlb
inc
pop
rolb
xchg
pop
subl
mov
xchg
cld
xor
sbb
mov
jbe
push
jo
push
inc
mov
mov
rolb
inc
pop
jl
int
and
mov
out
imul
in
shll
xor
int3
jnp
adc
and
mov
or
jbe
dec
arpl
mov
pop
imul
inc
adc
fistl
cmp
hlt
or
pop
mov
jge
inc
imul
mov
sbbb
mov
inc
dec
popf
sbb
mov
ja
inc
fadd
aad
ret
add
repnz
in
pushf
mov
and
jecxz
test
cmpsb
and
or
es
roll
jg
add
adc
js
push
pop
ja
adc
cmp
sub
insw
lock
js
pop
popf
cmpsb
or
xchg
push
mov
in
mov
cld
stos
push
pop
jge
fmuls
scas
inc
aad
pop
mov
mov
inc
popf
mov
adc
gs
pop
push
dec
adc
pop
mov
notb
aas
mov
and
mov
push
cs
ret
and
mov
and
clc
inc
outsb
pop
and
repz
mov
dec
jne
scas
mov
inc
dec
sbb
in
jnp
push
fidivrs
add
xchg
dec
leave
rcr
mov
inc
dec
mov
in
into
adc
outsl
lret
test
insb
scas
jle
or
enter
inc
lahf
xor
shlb
cs
cmp
repnz
fidivrl
insl
dec
enter
aad
adc
adc
xchg
sub
jne
loope
or
into
popf
lods
jge
add
dec
je
mov
movsl
add
pusha
rcrb
dec
and
xchg
in
or
push
pusha
push
daa
cld
das
dec
pop
push
xor
outsb
or
popa
rcr
call
sbb
les
repz
dec
push
out
push
ds
imul
mov
aas
aas
lods
jnp
jns
insb
cli
cmp
push
mov
pop
mov
jo
sbb
push
or
xchg
push
jae
sbb
inc
ja
popa
js
xlat
aam
stc
popf
lds
xchg
cwtl
dec
or
icebp
inc
sbb
in
xchg
and
mov
pop
andb
js
jno
pop
or
pop
sbb
fs
insb
call
push
popa
dec
pop
popf
arpl
divl
or
rclb
mov
mov
cmpsb
xchg
jmp
mov
mov
mov
inc
icebp
es
push
bound
cmp
fstpl
push
xchg
incl
dec
mov
xchg
cmpsl
jnp
push
bound
into
mov
aas
lret
in
orb
movsl
insl
push
gs
inc
cmc
jp
lea
inc
in
rclb
jb
icebp
jno
loope
nop
test
push
fildl
inc
xchg
ret
shll
xlat
or
push
dec
in
js
jp
test
jne
push
pop
arpl
inc
xchg
xor
inc
fcoml
jns
outsb
nop
iret
in
popf
cmovg
loop
sub
es
and
lret
das
shrb
loopne
pop
add
adc
lret
test
idivl
xor
fwait
jp
test
mov
fisttpll
mov
cmp
movsl
pop
aad
inc
adc
pop
sti
mov
ss
mov
cmp
xor
pop
pop
dec
push
adcl
nop
mov
int
pop
ror
out
sub
lahf
pop
arpl
or
sub
push
xchg
arpl
xchg
add
mov
pop
faddl
push
scas
mul
aad
mov
push
in
jle
or
inc
comiss
jae
loopne
std
aas
test
test
aam
mov
jg
es
pusha
jne
mov
push
outsb
enter
and
dec
pusha
lret
adc
jno
cmp
push
dec
and
sahf
jg
mov
sub
pop
inc
imul
les
das
jns
and
sub
adc
inc
sbb
lock
dec
push
int
and
adc
into
cli
scas
bound
dec
gs
sub
mov
fnsave
pop
aad
cmc
inc
push
pop
xor
pop
and
arpl
adc
iret
std
in
lret
repnz
jno
dec
daa
jns
inc
aad
idiv
push
rorb
js
popa
sbb
dec
pop
dec
inc
xorb
mov
adc
stos
sarl
insl
xchg
jnp
mov
sahf
pop
push
addr16
stos
cltd
xchg
add
imul
jecxz
xchg
push
and
jbe
lds
dec
xchg
pusha
popa
add
shlb
bound
in
cltd
rorb
mov
sub
clc
mov
mov
lcall
mov
fmul
sub
push
aas
sub
mov
dec
dec
aaa
xor
clc
push
movsb
gs
out
loope
xchg
jne
mov
out
lods
mov
loopne
fsubrs
lea
rorl
dec
inc
dec
mov
mov
xor
stos
xlat
lds
mov
js
mov
sbb
ret
fcmovu
xor
cmpsl
fstpt
ror
out
lea
and
mov
idiv
ljmp
pop
lods
ljmp
rcrb
mov
fidivs
jmp
mov
mov
iret
loop
pop
jbe
xchg
daa
push
mov
lods
push
cmp
out
fsubrp
shl
outsb
adc
out
push
aam
adc
iret
lcall
les
arpl
xchg
int
fwait
in
les
test
int3
sbb
push
imul
repz
dec
fcmovnb
mov
test
sbb
or
js
fistl
push
add
stos
call
dec
loop
xchg
pop
cli
icebp
add
dec
xchg
pop
pop
jl
movsl
add
mov
xor
add
cmp
jecxz
je
mov
and
stos
jo
ja
mov
loope
mov
lret
cwtl
inc
js
mov
js
or
out
add
xchg
into
push
pop
and
jp
xor
mov
clc
jbe
je
je
sub
push
and
call
push
and
sub
adc
loopne
test
mov
lret
and
pop
adc
or
mov
cmc
push
adc
push
cli
sub
fcomps
mov
ror
mov
push
sbbb
jns
push
xchg
stc
or
loopne
les
out
es
or
bnd
push
jb
mov
icebp
jo
mov
out
in
cli
xchg
sbb
cld
mov
in
pop
lret
adcb
mov
dec
roll
mov
mov
mov
jecxz
xor
dec
test
loope
loope
cmpsl
jecxz
scas
dec
gs
int3
fldlg2
fmulp
xchg
in
out
cmp
mov
xchg
aad
lods
or
clc
in
popa
mov
cwtl
js
popa
dec
fldenv
je
ljmp
push
sbb
mov
outsl
push
jo
pop
cmpsb
call
push
or
int
push
pop
push
mov
les
pop
lret
test
negl
push
cwtl
inc
int3
loopne
mov
loopne
lds
jns
adc
cmpsb
add
mov
pop
aad
xor
mov
mov
pushf
lods
mov
sbb
inc
and
and
repnz
jno
push
ss
pop
mov
mov
mov
cmp
cmpsb
adc
lret
mov
les
adc
push
sub
pop
mov
and
test
jmp
mov
mov
push
add
out
or
and
cmp
and
or
enter
pop
bound
orb
inc
and
daa
sbbl
test
lods
and
sbb
sbb
pop
lea
enter
inc
mov
imul
adc
push
loopne
les
pop
pop
das
pop
ss
cmp
jae
dec
repnz
adc
push
fs
or
aam
js
neg
sbb
jae
iret
sti
daa
mov
int
xchg
and
and
test
inc
jecxz
mov
lahf
adc
loope
push
dec
les
cli
in
dec
rorb
and
xchg
stos
or
mov
imul
push
bound
pop
add
cmpsl
push
jmp
mov
cmpsl
or
mov
lahf
jb
pop
hlt
aaa
ja
push
fwait
es
inc
cmpsb
mov
mov
lds
add
pop
push
cmpsl
icebp
xlat
jge
popf
push
adc
aam
pop
xchg
pop
xchg
iret
cmp
jns
repnz
std
aam
rcll
push
xchg
scas
jmp
hlt
stos
js
jmp
scas
outsl
out
mov
outsb
in
push
ss
jp
jbe
mov
fwait
jae
cmp
push
ljmp
mov
mov
push
flds
jge
jecxz
dec
push
ss
push
leave
movsb
jae
insl
xor
sbb
jge
sub
xchg
loopne
mov
sbbl
xchg
mov
adc
jmp
pop
popf
int
out
ja
incl
popa
int3
into
or
inc
iret
iret
loope
xchg
or
cs
jns
nop
pop
push
call
fmull
lret
push
or
mov
adc
imul
dec
dec
test
sub
mov
fiaddl
or
into
inc
sar
faddl
jp
jmp
lahf
movsl
cmp
gs
data16
jb
aaa
xchg
jo
test
movsl
mov
lods
jle
ret
sbb
pop
stc
aaa
in
mov
mov
stc
push
jne
and
pop
inc
xor
adc
outsl
push
pop
aad
xchg
and
or
stos
xchg
call
stc
fmul
cld
in
out
add
imul
enter
nop
sub
xor
cs
ja
or
inc
push
or
and
and
push
loope
fisttps
pop
dec
sub
sub
rclb
push
xor
or
pushf
sub
pop
sub
inc
lcall
stos
rcrl
out
mov
cmc
aam
or
cmpsl
insb
inc
lock
push
mov
mov
jge
jle
insl
xlat
sbb
cmp
mov
lahf
mov
mov
andb
shl
sahf
rorl
scas
sbb
or
jae
fucomp
cmp
aam
push
scas
ds
xor
andl
cmpsl
scas
jnp
aas
frstor
insb
out
push
insl
jnp
lods
mov
sbb
jo
je
inc
cltd
rorb
adc
mov
sbb
lahf
jns
fs
jmp
mov
push
mov
sbbl
jecxz,pt
lods
test
dec
cwtl
mov
ficompl
mov
pop
out
aam
lds
mov
sub
int
lret
xor
lahf
xchg
pop
inc
push
inc
repnz
lods
xor
dec
push
jmp
mov
mov
shrl
sub
pop
inc
lcall
enter
daa
cmpsl
push
xchg
cmp
jmp
fistps
xchg
xlat
sub
and
movsb
cmp
push
outsl
out
inc
adc
nop
xchg
mov
cmc
stos
daa
rcrb
mov
pusha
jmp
aaa
sbb
jmp
test
repnz
xchg
out
fcomps
imul
jg
xchg
pop
mov
int3
add
add
jo
dec
cmp
fistl
rclb
shlb
or
aad
mov
iret
xchg
dec
mov
hlt
icebp
sahf
jecxz
scas
lods
cmpsb
and
push
pushf
mov
push
push
inc
or
faddl
in
mov
jne
hlt
aad
xor
push
mov
mov
lds
inc
inc
mov
sbb
dec
in
xchg
cmp
sbb
sbb
mov
cwtl
out
rcr
cmp
repz
sub
dec
pusha
pop
lcall
mov
ja
test
in
inc
mull
fabs
and
loopne
fidivrl
addb
lock
mov
xchg
fldcw
mov
lds
pop
xor
dec
jo
mov
jecxz
lods
mov
cmp
loop
clc
cmpsl
stos
sahf
cmp
dec
adc
fisubrl
mov
ds
movsb
or
hlt
call
mov
popf
jge
pushf
sbb
mov
pop
ss
add
add
or
adc
and
scas
sub
sub
xchg
int
sub
orl
push
cmc
loop
push
adc
jnp
jo
xchg
daa
aam
popf
sbb
test
push
cmp
sub
ja
push
xchg
je
push
sub
subw
sub
cmp
and
push
pop
push
popf
push
mov
or
repnz
fisttpl
test
push
xchg
call
std
ja
push
test
add
lcall
ja
cmp
scas
jae
std
and
jno
aad
out
dec
cli
lods
fwait
sbb
flds
mov
test
outsb
mov
cmp
and
dec
add
xor
sub
xchg
sub
mov
and
mov
fldl
push
stos
pop
push
dec
mov
sti
in
out
leave
push
adc
jbe
add
sbb
jo
data16
ja
lret
movsb
and
and
stos
fstpt
dec
xchg
mov
add
jp
mov
lods
fcmovnu
or
int
jle
jecxz
mov
sarb
rcll
aad
iret
out
cltd
push
test
inc
fs
fdivr
mov
fildll
xor
rcrb
rcll
mov
jns
cwtl
xchg
js
lcall
addr16
push
push
ds
dec
popf
jno
outsl
roll
fbstp
mov
ror
roll
add
sbbb
and
sub
rol
sub
mov
test
mov
test
inc
jge
mov
mov
inc
mov
adc
lock
pop
pusha
loopne
jb
inc
out
insb
jg
sbb
sbb
mov
in
outsb
inc
in
bound
dec
loopne
adc
fwait
loopne
jne
imul
jge
or
lods
adcb
hlt
sti
sar
add
lret
jl
and
rorb
cmp
nop
inc
xorb
pop
fsubs
jmp
push
cli
cmp
sbb
stc
adc
in
mov
les
xchg
subb
sahf
call
cmp
mov
inc
out
push
push
push
lds
lods
mov
addr16
mov
push
inc
test
fstps
in
imul
outsb
xlat
xor
shlb
cmpsb
jecxz
adc
into
and
mov
dec
adcb
mov
and
and
add
cmp
inc
mov
add
and
cli
and
add
sti
jo
cmp
mov
jmp
mov
and
daa
cld
xchg
jmp
push
push
xlat
movsb
cltd
test
fcoms
pop
xor
and
pop
cmp
dec
adc
add
jns
inc
into
test
test
cmp
sti
jnp
ja
or
jne
xchg
test
nop
movsl
orl
xchg
int3
outsb
pushf
inc
daa
lods
xchg
roll
lds
mov
pop
lcall
cmc
and
and
js
sub
mov
pop
loop
push
jns
adc
fcompl
in
mov
push
or
hlt
int
mov
daa
xchg
repz
nop
fwait
xlat
mov
int3
movsb
xor
mov
pop
mov
mov
mov
mov
or
cltd
push
ret
push
pop
insb
cmpl
pop
mov
ljmp
cld
sub
push
filds
ds
sbb
cmc
loop
mov
je
mov
ficompl
push
inc
mov
cld
mov
jle
sbb
jl
sub
sub
rcl
pop
mov
sub
adc
out
stos
aad
test
cwtl
ljmp
dec
mov
and
loope
xor
enter
int3
mov
pop
sbb
fcomip
add
fisttpll
jnp
pop
roll
into
pop
sbb
push
xchg
dec
mov
insl
xor
cmpsl
and
aad
test
xchg
lret
sbb
out
sbb
push
mov
mov
stc
push
mov
inc
rolb
xor
outsb
lret
add
jns
mov
mov
stc
sub
outsl
pop
fwait
in
mov
sub
insl
push
mov
or
xchg
addr16
pop
dec
pushf
add
adc
sub
mov
dec
scas
lea
lahf
push
sbb
and
jne
pop
mov
or
out
sub
rorl
out
rcrb
jne
sti
pop
stos
pop
mov
fnstenv
and
je
addl
repnz
pop
xlat
ror
js
out
mov
add
loopne
rcll
inc
xor
gs
out
cwtl
jne
lret
sahf
cmpsl
imul
pop
leave
jnp
dec
cltd
ret
call
jno
xor
jne
scas
out
fnsave
inc
fistps
mov
jecxz
loope
loope
je
fcomi
mov
mov
rclb
push
sbb
vpsrlq
imul
flds
push
addb
outsb
fisttps
jne
pop
test
insl
or
repz
imul
sbb
ret
sub
xlat
inc
frstor
push
mov
std
aas
sbb
jne
mov
inc
xchg
ja
ss
push
ret
jg
test
pop
lock
and
clc
sub
xor
rol
jae
adc
out
xchg
cmp
std
add
fs
mov
adc
and
jae
mov
push
out
mov
push
lea
out
adc
dec
mov
push
xlat
pop
dec
icebp
outsb
imul
dec
sbb
lcall
addr16
push
shl
fstpt
mov
add
xchg
lret
sbb
fdivr
or
pop
sbb
push
adcb
lods
xor
ffree
ds
int
sub
add
scas
out
das
cmova
or
sub
mov
ljmp
mov
repnz
xchg
mov
or
fdivrs
jge
fistl
xor
add
outsb
mov
shll
fcomps
pop
lea
fisubl
mov
adcl
pusha
clc
xor
adc
xor
sar
aad
push
pop
push
adcl
clc
aas
ret
and
mov
pop
leave
xor
xor
xchg
sub
jno
arpl
arpl
jns
lods
test
jl
mov
mov
out
lcall
adc
les
pop
push
mov
in
clc
xor
arpl
imull
jecxz
in
lcall
jnp
add
notb
xchg
and
imul
ret
faddp
push
mov
or
xchg
xchg
lods
sub
sbb
cmpsb
sub
add
mov
and
into
sbb
push
adc
jmp
push
ret
cmp
sub
push
inc
pop
cs
cmp
testb
mov
cltd
dec
or
cmp
subl
xchg
add
sbb
pop
mov
fisubl
aaa
inc
std
add
repnz
jl
daa
ljmp
adc
sbb
mov
jecxz
lcall
aad
loop
inc
push
push
mov
fdivrl
push
addb
das
push
fstpl
push
push
in
in
cmc
push
cmp
jge
xchg
push
jl
loopne
jns
test
ficomps
sbb
std
mov
std
out
and
inc
jne
mov
std
insb
push
lret
dec
dec
lea
cmp
xchg
cltd
stc
push
jg
pop
cmp
push
sbb
cld
iret
mov
lock
push
insb
xor
pop
stos
leave
ds
lcall
jns
and
bound
insl
inc
fs
jg
fisttpl
cmp
fsubrs
jecxz
push
cli
sarl
sarb
out
test
daa
rorb
mov
arpl
or
pop
insb
push
xor
sub
jne
cmp
popf
dec
mov
scas
mov
push
cmc
ret
add
sti
in
sbb
stos
addr16
and
clc
push
cmc
stos
cmp
sbb
sub
xchg
push
add
mov
loope
aad
add
jne
or
cmp
ret
aaa
push
cltd
pop
dec
mov
fistl
vpacksswb
sbb
lret
xchg
repz
out
ss
arpl
pop
push
push
xorb
pop
push
shl
mov
or
imul
push
adc
cli
lds
jp
gs
popa
les
fisubs
xor
ret
inc
xor
lret
dec
sub
ss
xor
int
insb
cmp
pushf
std
sub
int3
or
loop
popf
leave
mov
sysexit
sti
fwait
sbb
xor
stc
add
pop
leave
in
jbe
sbb
mov
cmp
cmp
sahf
outsb
mov
xchg
xchg
push
iret
add
pop
stos
lods
xchg
icebp
mov
ss
and
or
jnp
shl
dec
sub
jb
xchg
sub
into
cmpsl
adc
cld
pop
mov
pop
and
insb
in
test
push
inc
push
pop
adc
mov
subl
add
xor
mov
arpl
aam
fdivrs
dec
xchg
dec
pop
mov
or
inc
pop
sub
subl
sbb
cmp
cmp
addb
loop
sbb
cwtl
adc
scas
addl
and
test
out
das
xchg
dec
jo
repz
scas
lock
hlt
mov
or
cmpb
mov
jae
loop
in
andb
std
sbb
push
test
rorb
lods
pop
fldcw
fistpl
push
daa
xor
rclb
fldl
mov
and
adc
outsb
mov
xchg
jge
sbb
push
xchg
adc
les
adc
mov
xchg
repnz
lret
fwait
aaa
cmc
fsubrl
or
mov
dec
fs
xchg
in
jnp
push
andb
shlb
mov
pop
and
dec
pop
test
mov
jp
inc
popa
test
push
stos
cmp
aaa
xor
clc
mov
rcl
movsb
rol
xor
mov
out
inc
and
and
mov
sub
add
push
loope
ss
push
push
mov
mov
cltd
push
sbb
shrb
bound
cmpsl
mov
xchg
fisttpl
shl
daa
insl
xor
xor
aam
pusha
add
int
daa
cli
jl
and
mov
pop
hlt
jl
mov
jo
cld
or
adc
inc
ret
jnp
cmc
adc
push
pop
mov
test
movsl
push
lock
jmp
add
mov
or
les
push
out
sbb
and
fwait
stos
mov
lcall
dec
dec
cmp
pop
fldl
jp
adc
pop
jl
mov
sahf
insl
jne
jge
dec
mov
test
adc
call
push
arpl
lock
les
jge
ja
jo
idivl
jae
arpl
xlat
scas
in
adc
mov
cmpsl
push
test
xchg
sub
push
lods
jo
push
sub
or
push
jecxz
ss
lahf
and
stos
inc
and
ja
xor
loopne
xor
es
sahf
xchg
push
rorb
cmp
ss
into
arpl
sahf
mov
push
test
stos
fwait
sub
sbb
and
stc
pop
cmpsb
arpl
and
negb
add
adc
dec
repnz
push
mov
arpl
int
fisttpl
into
jne
or
pop
addr16
pop
imul
cmp
test
ss
mov
dec
sti
sub
mov
xchg
negl
lods
shll
subl
cld
jp
popa
sub
fiaddl
aad
fs
jl
outsb
cmp
test
nop
mov
ds
aas
jp
adc
inc
inc
outsl
mov
sub
ret
sbb
aad
loopne
and
bound
push
mov
imul
or
sbb
and
xor
mov
cli
xchg
shl
pop
std
sbbb
sti
jecxz
adc
add
aaa
insl
mov
jle
lret
mov
cmp
and
jmp
arpl
dec
add
ds
mov
faddl
shlb
hlt
pop
cmp
ja
push
inc
lea
dec
addr16
mov
dec
pusha
xchg
pushw
mov
jbe
jge
dec
div
xchg
push
out
loope
cmc
xor
adc
ficompl
and
jb
in
mov
cmp
and
fisubrs
inc
inc
imul
cmp
fidivl
loop
into
xor
adc
add
pop
or
pusha
xor
ja
test
mov
insl
xchg
movsl
std
dec
mov
xchg
sbb
xchg
inc
lods
add
mov
int
sahf
pop
int3
lcall
les
cmp
push
mov
mov
pop
xor
push
mov
divb
and
mov
mov
add
xchg
mov
loop
dec
pop
xor
addr16
push
mov
mov
adc
push
in
jg
or
jmp
out
mov
jb
iret
and
pop
sbb
popf
xchg
jg,pt
mov
into
dec
add
inc
jmp
sbb
mov
test
int3
cmp
inc
cmp
mull
cmp
push
xchg
xchg
adc
jbe
iret
orl
jbe
sbb
jl
out
xchg
int
push
cmp
mov
and
fwait
push
mov
bound
push
xor
lret
int3
push
dec
cs
out
jecxz
or
xchg
sub
fs
outsl
and
add
stos
or
mov
xchg
add
lods
jge
lret
or
inc
sub
bnd
inc
test
or
xorb
ljmp
out
add
loopne
cmp
es
sbb
in
mov
sbb
inc
in
xchg
pop
dec
mov
and
out
fnstsw
pop
dec
sahf
into
jne
push
ss
sbb
or
push
inc
aad
mul
and
inc
dec
outsl
mov
pop
test
scas
rol
imul
push
arpl
mov
addb
cwtl
movsb
andb
add
fadds
dec
pop
or
arpl
fdivr
sbbl
cs
add
or
nop
and
nop
das
push
lahf
ret
push
pusha
movsb
push
mov
cmpsl
dec
and
in
pop
shlb
and
out
out
xchg
shrl
mov
lret
pop
mov
xrelease
push
jmp
fldt
int
out
shr
jo
loopne
mov
pop
mov
shl
gs
lock
jg
and
js
and
xchg
adc
leave
push
test
lea
jge
cmpsb
jmp
lahf
mov
stos
loop
jl
mov
push
pop
jbe
xor
xlat
pop
mov
sbb
repz
inc
cmp
xor
sub
jnp
data16
xchg
adc
push
jo
pop
jno
xlat
hlt
xchg
out
pop
add
inc
icebp
popf
pop
cmp
test
aad
clc
cmp
jne
aas
mov
aam
xchg
sub
sbb
sub
jp
xlat
cld
cmpsl
movsb
cmp
lahf
sbb
repz
jg
sbb
cmp
hlt
inc
pop
mov
inc
test
jg
outsl
call
lea
cltd
pop
icebp
jl
aad
shl
js
and
popf
cltd
mov
sbb
dec
mov
mov
or
push
mov
inc
cs
loop
xor
pop
ret
jmp
mov
movl
sahf
movsb
or
dec
mov
lahf
in
test
inc
jg
loope
cli
mov
jl
dec
ficompl
jp
xchg
in
cmpsb
jmp
dec
jns
jns
out
jnp
mov
mov
aam
mov
arpl
pusha
xchg
mov
xchg
lcall
daa
lcall
rol
mov
fwait
in
xor
lahf
xor
nop
iret
ja
ffree
jmp
and
adc
jne
xlat
in
fists
add
mov
inc
ljmp
xchg
hlt
mov
mov
lret
mov
xchg
add
stos
lods
clc
addl
sbb
xor
pushf
inc
cmp
jp
enter
and
into
xchg
mov
jmp
or
and
std
leave
aaa
and
insb
lds
popf
call
push
outsb
sahf
mov
xchg
jge
test
leave
add
mov
sbb
rcrb
sbb
fwait
xchg
aad
ret
popa
pop
add
adc
dec
shll
imul
adc
subl
iret
cmp
mov
add
and
notb
inc
jb
xor
xor
test
mov
std
and
jl
xchg
pop
cmp
inc
dec
cmp
mov
aam
and
inc
add
cmc
insl
mov
fstps
cmpsb
movsb
xchg
divl
and
shr
sub
pop
clc
jae
pop
iret
aam
dec
mov
insb
mov
and
xchg
lcall
jno
xor
pop
or
mov
xchg
inc
es
jne
repz
mov
rcrb
fisubl
push
xor
repz
mov
push
shlb
add
adc
outsb
jo
and
xor
lea
bound
mov
test
xchg
push
pop
loopne
dec
in
lahf
mov
rol
call
jmp
dec
mov
mov
dec
int3
xchg
mov
cmp
movsb
push
cmp
inc
js
fwait
int
repnz
clc
inc
aad
cmpl
cld
imul
mov
pop
adc
movsb
ret
nop
push
cmp
sbb
mov
cwtl
jbe
pop
mov
sbb
bound
and
clc
or
cmpsb
pusha
int3
inc
push
fisttps
sarb
lret
jg
fwait
add
adc
fildl
jno
bound
and
cmp
push
pushf
mov
aas
fs
cmp
sub
and
hlt
mov
aas
jl
or
dec
cmp
outsb
xchg
sti
jb
arpl
stos
mov
jmp
ss
jns
lret
sub
pop
fidivl
rcr
aaa
ja
mov
mov
xchg
lods
repnz
test
negl
sar
cmpsb
push
negl
dec
lock
adc
add
pop
xlat
dec
outsl
xchg
fisubl
imul
fcomip
movsb
and
xchg
test
les
cltd
or
mov
ret
int3
mov
fisubl
dec
sbb
out
daa
adc
jmp
push
jbe
cmp
or
roll
pop
lock
cmp
lds
scas
movsl
or
mov
adc
je
mov
mov
jnp
aam
rolb
inc
xchg
dec
pusha
test
and
mov
dec
dec
scas
cli
mov
imul
jnp
test
lahf
fwait
push
push
add
fcompl
pop
pusha
dec
jno
pop
xlat
fimull
sub
jb
fcmovb
mov
mov
jg
stos
pop
jae
cmp
call
cmc
inc
cli
inc
test
pop
sub
in
fwait
push
lahf
loopne
sub
dec
add
push
pop
sub
xchg
icebp
stc
jae
and
mov
out
xchg
out
cmp
fdivr
or
leave
ja
scas
cmpsb
add
mov
cli
movsb
push
stos
stc
pop
sub
les
xor
pop
inc
test
push
inc
test
jl
sti
jge
loope
stc
outsl
lods
dec
inc
scas
cmp
movsl
or
cltd
mov
and
inc
testb
inc
iret
jmp
xchg
adc
and
pop
hlt
ja
mov
add
std
push
or
pop
ficompl
adc
nop
mov
repnz
stos
sahf
inc
jmp
jns
test
mov
xchg
and
xor
lret
mov
lea
or
jbe
orl
into
pop
inc
lcall
xchg
std
imul
testl
mov
adc
mov
dec
xor
sub
andb
nop
hlt
mov
ljmp
fldcw
lea
imul
push
push
out
xorl
sbb
js
dec
repnz
shll
mov
ss
xchg
sti
rorl
insb
fisubrl
scas
jne
mov
inc
fimuls
stos
xchg
add
and
mov
orl
pop
fnstenv
loope
jp
adc
out
push
cmp
mov
lds
or
mov
xchg
fwait
mov
or
orb
lock
mov
inc
fcomps
cmp
fcmovnbe
ret
lds
sbb
and
scas
xchg
clc
shlb
stc
les
xchg
out
mov
xlat
push
fdivp
cld
mov
mov
ret
inc
mov
dec
pushf
mov
or
jle
test
sahf
mov
sbb
push
xchg
movsl
and
adcl
pop
mov
push
mov
mov
push
addb
test
idivl
stos
jno
xor
xchg
or
popf
ss
orb
imul
jo
ja
scas
add
xchg
and
mov
mov
sbb
inc
cld
jecxz
cli
mov
adc
xor
push
stos
dec
fiadds
xor
jo
xor
xchg
adc
mov
jmp
dec
mov
imul
push
insl
ds
pushf
sub
dec
cmp
or
lret
add
je
jmp
adc
out
dec
cs
sub
lods
xlat
mov
lock
lret
xchg
add
xor
xchg
push
scas
inc
inc
push
cmp
sub
pop
mov
sub
in
and
push
or
shlb
hlt
jl
testb
add
push
rol
les
inc
mov
hlt
xchg
imul
adc
sub
movsb
pop
push
loopne
sub
popa
mov
or
lock
gs
add
imul
pop
into
mov
mov
xor
xchg
xor
and
jb
lock
jg
test
xor
dec
xor
mov
mov
push
lock
mov
mov
sub
adc
fildl
ja
movsb
rclb
mov
into
cmp
mov
div
sub
jge
or
sub
cld
into
add
pop
in
sti
stos
push
xorl
sbb
test
shlb
and
pop
mov
stos
jg
call
ret
aad
inc
pop
dec
mov
test
imul
pop
lock
push
xchg
inc
sbb
mov
push
clc
pop
aas
test
lods
add
out
shr
jns
jo
mov
jge
test
je,pn
xchg
lahf
lcall
jl
cmpsl
js
ljmp
dec
mov
or
pop
ja
fucomi
add
das
lcall
add
jmp
sbb
mov
aad
jl
ret
cmp
fcoml
insb
jae
xchg
and
ljmp
repz
bound
addr16
pushl
movsb
xchg
inc
or
test
push
inc
scas
jge
icebp
adc
add
dec
xor
cli
test
iret
scas
aam
addl
scas
xor
addl
adc
ret
out
pop
repz
pop
imul
push
ja
and
in
rcrb
call
xchg
lret
ret
mov
pusha
fdiv
push
test
cli
orb
mov
mov
stos
les
xor
mov
cmp
jmp
xchg
lcall
mov
mov
jnp
dec
cmp
popa
icebp
lea
xor
insl
repnz
pushf
lret
repnz
ret
pmaxub
pop
les
scas
xchg
xchg
iret
idiv
ret
dec
and
imul
rcrb
dec
insl
add
mov
repz
or
inc
pusha
addr16
or
push
aad
in
sub
pandn
hlt
addr16
stos
add
adc
push
and
xchg
sub
xor
inc
lods
jmp
mov
mov
inc
lods
stos
jnp
mov
filds
mov
mov
pop
insl
xchg
fdivl
cmove
sti
stos
scas
jns
imul
pop
testb
dec
mov
leave
loope
ret
fisubrl
or
inc
ds
loope
add
cmp
push
into
mov
lahf
dec
stos
in
repnz
cltd
dec
mov
mov
iret
imul
imul
fimuls
rolb
addr16
call
test
cltd
mov
movsb
xchg
mov
dec
cmpsl
mov
mov
add
hlt
out
dec
xor
roll
adc
addr16
mov
sbb
pop
loope
scas
fadds
out
mov
into
gs
mov
aam
flds
pop
scas
cmp
mov
cmp
cmp
mov
lods
xchg
xchg
add
sbb
bound
mov
lock
fnstsw
pop
fsubr
gs
jno
inc
out
mov
jmp
insl
jae
enter
cwtl
push
ds
sbb
in
dec
pop
inc
out
pop
jp
je
lcall
push
push
fimuls
shlb
outsb
dec
fmull
mov
mov
push
mov
xor
push
and
pop
stos
cli
orl
xor
aam
xchg
mov
imul
lock
or
popf
lret
jns
dec
sub
sub
cwtl
jne
mov
dec
mov
sbb
cmpsl
aad
mov
and
adc
pavgw
dec
and
mov
sarb
and
std
sub
cmp
ja
lock
ss
fstps
dec
outsl
xchg
mov
daa
cmp
jle
jle
andb
and
mov
fwait
sub
jno
repnz
pop
stc
xchg
add
loop
cld
pop
adc
cli
lods
mov
push
hlt
jmp
lret
js
mov
scas
in
test
ret
sub
cmp
lahf
xor
inc
push
and
fbstp
xchg
inc
lods
imul
out
mov
inc
in
mul
arpl
movsb
adc
inc
je
fbstp
loopne
xor
roll
pop
out
fldl
cmp
shlb
jnp
pop
adc
mov
test
jmp
dec
sub
dec
cltd
push
out
imul
pop
div
loop
xchg
cli
mov
xchg
push
lahf
and
sbbb
cwtl
sti
mov
lahf
sbb
jecxz
sub
lock
aaa
cmp
push
push
and
popa
repnz
or
scas
jns
insb
xlat
jb
or
jp
mov
imul
sub
pop
pop
mov
int
popa
jle
adc
adc
xor
pop
sahf
jge
shrl
mov
add
das
prefetch
popf
pushf
ret
inc
lods
pop
lods
enter
ret
push
sbb
push
jg
nop
out
mov
push
cmpsb
je
xor
sbb
sbb
pusha
aam
push
pop
fstpt
sbbl
dec
dec
fs
loopne
mov
lock
pop
mov
xor
and
mov
loop
inc
or
imul
das
pop
jnp
pop
xchg
xchg
xchg
mov
mov
call
cltd
jno
stos
and
in
stc
aas
add
sub
sbb
mov
pop
xchg
jmp
sbbl
decl
lahf
jbe
out
rcr
pop
adcb
mov
inc
or
mov
and
je
push
dec
xchg
sbb
fstps
and
mov
mov
mov
imul
inc
inc
or
inc
xchg
ja
dec
jg
mov
lea
sbb
in
xchg
pop
popf
or
ss
xchg
push
add
sub
movhps
imul
imul
lods
jnp
fwait
mov
rol
fcoms
pop
push
jecxz
pop
shlb
lock
iret
not
xor
cmp
mov
mov
mov
dec
clc
in
sub
rcll
lret
adc
ss
push
pusha
inc
jg
sbb
mov
lods
data16
adc
lds
cmp
stos
sub
cld
or
jbe
not
xchg
hlt
mov
or
dec
mov
pop
or
add
or
mov
mov
loop
cmpsb
pop
jecxz
packuswb
int3
adc
fs
sbb
stos
or
popa
aas
shll
pop
mov
rcr
out
je
gs
fstpl
subl
mov
xchg
inc
mov
inc
xchg
mov
dec
sbb
sub
mov
loopne
jecxz
in
in
insl
lock
into
orl
xchg
ja
mov
jge
sub
nop
mov
push
xchg
lcall
sub
and
jle
and
adc
pop
lods
loopne
out
stos
mov
mov
mov
mov
lcall
sub
shl
jp
push
mov
repnz
loopne
inc
jno
fidivrl
out
adc
xchg
aas
outsl
outsb
mov
push
stc
int
and
mov
leave
sti
pop
mov
imul
push
sub
mov
popa
mov
sbb
ds
adc
in
sbb
or
push
jp
inc
aam
jle
sub
lret
mov
xchg
mov
and
xchg
in
or
inc
lret
lods
and
daa
adc
or
rcrb
mov
mov
clc
push
mov
scas
pop
push
mov
adc
push
xorb
cli
movntps
mov
mov
lods
fistpll
inc
push
adc
mov
xor
xor
sub
les
iret
jno
popa
add
xchg
shll
inc
ss
xor
cmpsb
mov
mov
jns
es
sub
out
lock
xlat
jbe
inc
pop
lcall
mov
aas
dec
outsb
inc
out
outsl
mov
dec
test
pop
cmpsl
dec
push
fldl
cmp
mov
mov
sbb
fldenv
jg
inc
out
nop
loope
sti
loopne
jae
scas
push
into
jo
cmc
push
add
jle
xor
mov
inc
imul
aad
popf
mov
outsl
fsubrl
xchg
jg
add
fsub
or
xor
jnp
pop
lcall
sub
out
mov
aaa
sbb
dec
int3
dec
mov
sbb
push
adc
orb
test
in
mov
xlat
pushf
aas
out
rorl
lods
scas
pop
add
aam
leave
in
sub
push
adc
inc
loopne
adc
je
clc
idivl
out
rolb
enter
push
dec
cltd
incb
xor
mov
pop
push
aaa
subl
lret
xlat
mov
mov
out
inc
mov
dec
pop
psrlw
aad
mov
cmp
jns
or
loopne
and
dec
outsb
subb
inc
fisubl
and
xchg
mov
sub
mov
sub
dec
dec
inc
es
ret
stc
mov
insl
shll
or
stos
mov
js
es
rorl
sti
ret
in
mov
sub
lret
aas
std
add
add
adc
in
pop
dec
sub
and
inc
mov
push
mov
in
lret
xchg
cmp
push
jne
push
push
add
jmp
ljmp
add
sbb
or
ja
stc
scas
aam
loop
enter
add
add
sbb
sbb
insl
xchg
sub
loop
popa
mov
mull
pop
inc
mov
aaa
popl
jge
pop
or
lret
rcrb
stos
xor
sub
or
sub
lcall
out
xchg
inc
aaa
stc
cmp
lea
push
ret
ret
pop
add
add
bound
in
pushf
jbe
loop,pn
movsb
inc
add
popa
paddusb
repz
addb
out
sub
inc
lahf
stos
leave
and
lods
xor
xchg
add
aaa
sahf
push
pushf
jmp
mov
pop
jnp
pushf
sub
imul
sub
and
xor
mov
push
in
jecxz
repz
mov
and
shlb
imul
lret
mov
add
mov
jne
stos
push
mov
mov
push
push
xchg
inc
out
mov
mov
into
fidivs
push
flds
push
int
and
add
sbb
movsl
push
add
cmp
fisubs
lds
inc
xchg
xor
pop
jo
sub
test
mov
out
mov
dec
add
xchg
cli
cmp
xchg
std
test
xor
and
out
sub
pusha
call
cmp
and
push
test
sahf
xchg
lret
add
pop
inc
jne
sti
std
push
ret
sbb
push
pusha
mov
mov
add
insb
bound
sbb
and
pop
jo
adcb
and
mov
add
dec
leave
lahf
cmpl
xchg
icebp
push
cmpsl
cmpsb
inc
and
lds
cld
cmp
dec
test
jns
and
push
or
push
scas
fwait
mov
fdiv
inc
add
mov
jbe
popf
iret
das
aad
add
dec
bound
jp
paddb
xchg
dec
pushf
call
push
loop
sbb
das
xor
jb
xor
xlat
aas
xchg
xchg
daa
cmp
xor
jno
sub
xor
push
mov
rorb
sbb
push
xor
dec
insl
xchg
and
insb
lea
fcmovnbe
int
cs
gs
lods
test
push
lret
shrb
inc
and
sbb
aam
ja
sarl
dec
xor
inc
push
out
iret
stos
xor
adc
mov
ljmp
pop
pusha
xchg
dec
popa
push
push
inc
adc
fisttps
or
xchg
lds
mov
repz
xchg
push
out
add
mov
add
add
in
je
outsb
dec
xchg
inc
pop
cmp
gs
xor
jl
repz
xchg
ret
add
rcll
cmp
movsb
dec
xchg
cmp
dec
int
or
dec
push
sarl
mov
into
dec
test
pop
fnstsw
dec
push
ljmp
or
scas
pop
pop
repz
dec
or
mov
or
gs
les
iret
shrb
fdivrs
jl
xchg
sbb
mov
lcall
fs
jno
pushl
ret
push
ja
mov
in
scas
addl
xchg
movsb
jmp
sete
sub
jo
lea
popf
jbe
jo
sub
mov
imulb
adc
popf
cltd
jle
dec
into
or
and
pop
gs
lods
scas
mov
adc
rolb
jnp
xor
mov
dec
or
movsl
stos
scas
arpl
and
adc
pushf
and
leave
jge
test
ja
pop
jp
and
aas
sub
sub
xor
pop
mov
and
es
push
sub
inc
cltd
inc
xchg
mov
hlt
dec
jne
out
lods
icebp
xor
xorl
ds
jmp
mov
scas
mov
lahf
inc
cmp
inc
dec
adc
lcall
movsl
sbb
and
pop
add
mov
push
cs
add
cltd
xchg
jns
mov
int
dec
dec
jge
dec
mov
out
pop
jns
insb
inc
rcrl
repz
inc
mov
fisubrl
cmpsb
out
aas
mov
sub
cwtl
popf
ficoml
add
test
enter
test
adc
es
clc
xchg
sub
push
xchg
sbb
movsb
sub
pop
mov
fxch
xchg
lret
add
sbb
hlt
rcrl
movsl
add
int
stc
jne
cmp
lret
incl
xor
inc
sbb
sub
add
push
pop
or
inc
xlat
loopne
out
push
test
add
jnp
inc
jno
in
enter
pop
jo
loope
in
fldl
add
popf
cmc
shr
ljmp
and
sub
mov
fistps
inc
repz
rclb
cli
iret
mov
jbe
ljmp
outsb
subb
mov
add
sub
ret
lock
fst
subb
out
imul
jmp
aam
push
cli
idivb
xlat
pop
cs
xorl
pop
adc
rcll
incl
adc
inc
cli
xlat
in
scas
sub
aaa
xchg
cmc
cmp
adc
shlb
jne
jb
sub
cmp
lods
lds
lods
inc
out
jmp
xchg
push
cld
test
shrl
pop
ficompl
nop
xchg
fsubs
loop
or
roll
cmp
int
add
int
out
aaa
shl
vcmpss
jae
test
add
ret
cmc
inc
lahf
imul
into
mov
push
pop
icebp
fdiv
imul
int
inc
mov
dec
cmp
xchg
mov
aad
loope
movsb
in
cld
and
jno
movsb
jp
push
jae
leave
lods
push
pop
cltd
jo
jae
xchg
mov
xor
inc
jno
mov
loope
aam
dec
out
inc
cli
mov
mov
and
sbb
fwait
add
imul
inc
icebp
jno
lcall
ret
cld
dec
inc
bound
stos
iret
pop
adc
mov
adc
les
ljmp
and
pop
sarb
pop
fidivl
icebp
and
fcmove
or
xchg
mov
or
or
and
jmp
lret
jo
and
test
addr16
lahf
jge
fwait
mov
push
ss
add
xor
pop
iret
aam
dec
adc
jmp
jne
scas
dec
xor
push
in
nop
add
mov
push
mov
inc
dec
add
xchg
or
sbb
mov
xlat
clc
inc
add
lds
lahf
lods
shr
jne
add
adc
ds
pop
push
sub
adc
das
imul
sub
nop
loop
push
sbb
cmp
jo
pop
sbb
or
sub
and
adc
mov
inc
sub
adc
lods
mov
xor
mov
pop
jns
scas
xor
mov
add
dec
sahf
and
or
test
cli
cmp
lret
sbb
xchg
mov
into
daa
es
and
pushf
ficoml
add
test
mov
mov
mov
dec
nop
inc
push
cmp
mov
pop
jp
mov
aaa
dec
sbb
and
push
dec
dec
sub
inc
mov
jg
scas
pop
cli
scas
movb
add
cmpsb
mov
mov
sti
cli
andb
adc
addr16
stc
ljmp
clc
xchg
outsb
cwtl
and
fdivrs
mov
sbb
jno
sub
xor
arpl
imul
in
xorb
dec
and
push
sub
cltd
jbe
shll
push
addr16
inc
jne
in
int3
pusha
xchg
adc
movsb
inc
push
add
xor
or
test
arpl
inc
xchg
or
adc
in
imul
cwtl
sti
popf
jl
test
lds
fwait
aam
lock
int
pusha
mov
int3
cli
stc
dec
mov
nop
leave
mov
imul
mov
std
out
or
test
in
sahf
outsb
xor
jno
cld
pop
imul
xor
mov
sbb
dec
test
add
push
stos
outsb
and
push
in
jnp
mov
std
loop
pop
inc
pop
and
mov
sbb
js
mov
movsl
adc
and
imul
aas
inc
jle
pop
stc
mov
and
mov
fidivl
js
insb
jp
and
jnp
sahf
mov
sbb
and
lcall
aad
stc
scas
insl
gs
aam
adc
test
dec
nop
push
test
dec
dec
sub
stos
push
sbb
outsb
sbb
pop
or
das
cmp
imul
aas
sub
js
test
xlat
and
aad
iret
lret
add
out
sub
hlt
hlt
push
adc
es
cmpsb
inc
add
cltd
popf
pop
cmp
jl
pop
sbb
mov
xchg
xlat
cld
or
rcll
or
mov
cld
dec
add
pop
mov
jmp
les
outsb
jo
jp
in
movsl
js
mov
out
les
js
js
mov
lds
or
repz
jecxz
add
pop
jno
inc
inc
cmc
xchg
enter
mov
push
scas
int3
cmp
pop
sbb
sbb
inc
jo
adc
push
mov
shlb
sub
mov
insb
dec
adc
sub
dec
sub
cmp
inc
mov
cs
iret
out
in
loopne
mov
test
xchg
sub
jecxz
stos
cmpsl
mulb
insl
xchg
push
pop
loopne
pop
jle
daa
cmp
mov
xchg
mov
out
jb
rol
aam
das
mov
xor
mov
ja
and
xor
xchg
push
cmc
push
repnz
imul
mov
out
sbb
jae
cmp
gs
stc
jo
pop
lret
mov
pop
ss
adc
outsl
inc
fwait
aaa
push
add
mov
xor
fwait
and
pop
leave
je
and
or
testl
sarb
pop
mov
andb
xor
out
inc
or
sbb
mov
mov
loope
mov
mov
mov
fdivrl
lahf
xchg
lods
cmp
cmpsl
sbb
push
hlt
shll
fstpl
ja
scas
das
lret
fstl
fimull
je
scas
dec
lods
xchg
adc
dec
or
cmc
push
add
jp
jo
xchg
cmp
out
dec
jecxz
shll
sub
lahf
mov
sub
loopne
movsl
inc
pop
fwait
xor
xor
or
push
or
sti
imulb
dec
pop
div
lret
pop
jl
cmc
lods
add
fisttps
ss
push
das
mov
dec
jo
sub
in
xor
inc
xchg
add
fs
lret
cli
bound
into
push
jbe
xchg
sbb
incb
sbb
in
and
lcall
sub
subb
jmp
repz
pop
inc
add
dec
xor
jno
mov
inc
sub
pop
icebp
jnp
mov
cli
shrb
push
jp
cs
xor
ffree
push
xchg
sub
loop
jle
or
inc
sbb
inc
cmpsb
mov
push
out
sub
daa
mov
jo
sub
and
jne
xchg
mov
xchg
xor
dec
adc
cwtl
testb
add
mov
ljmp
lock
xchg
dec
shll
vmread
ret
fdiv
cltd
dec
adc
mov
dec
push
push
mov
daa
inc
and
mov
out
xchg
fmuls
jbe
jo
popa
les
fsubl
addr16
cmc
xchg
and
aad
push
pop
xchg
xor
test
mov
pop
push
cmp
mov
xor
adc
dec
cli
jp
das
xchg
or
fcoms
aam
mov
mov
sbb
push
imul
push
jge
aam
mov
xchg
push
or
push
cmp
xor
mov
insb
adc
icebp
lock
cmp
push
cli
pusha
mov
aad
loop
adc
or
push
sub
mov
shrl
sti
outsb
jno
aam
and
push
pop
in
jp
sbb
xchg
sub
adc
dec
cli
popa
and
jne
rcr
add
dec
xchg
add
adc
pop
out
pop
add
xchg
adc
je
mov
mov
add
pop
cltd
xchg
icebp
cbtw
jl
negb
mov
mov
shrl
add
rorl
mov
ret
mov
jmp
pop
repnz
out
lods
sub
xchg
sbb
jb
stos
sub
stos
xchg
pop
addb
fstl
xchg
xchg
out
xor
out
jns
popa
std
idivb
mov
sbb
pextrw
andl
inc
push
enter
xchg
mov
sub
sbb
pop
sub
push
lret
jle
std
inc
inc
dec
mov
jbe
xchg
dec
pop
sub
mov
aas
out
pop
loope
popa
and
mov
push
add
scas
pop
fidivs
mov
dec
push
mov
in
jns
dec
cmc
ret
negl
fcmovnbe
sbb
pop
adc
scas
out
and
dec
jne
pop
es
mov
shlb
jp
call
push
dec
int
std
mov
roll
mov
adc
les
lcall
dec
sub
into
pop
ljmp
pop
iret
mov
cld
sub
jl
out
mov
sbb
imul
rcrl
and
lret
and
mov
jno
shll
mov
pushf
insb
sub
adc
cld
stos
shl
leave
rcll
jnp
pop
or
mov
jno
mulb
push
mov
inc
in
test
pop
pop
cmc
adc
inc
add
jno
arpl
cmp
outsb
and
out
adc
fisubs
int
mov
jmp
xlat
mov
negl
sub
mov
xor
cmp
jb
and
jg
pop
lds
ret
cs
jae
test
sbb
jbe
stos
cltd
dec
sub
xchg
lods
lcall
mov
sbb
aas
adc
ret
inc
ljmp
mov
std
push
xor
mov
inc
test
bound
bound
imul
test
or
cltd
inc
sbb
mov
dec
adc
sub
nop
in
in
call
mov
cltd
add
fcomps
jno
inc
sbb
jl
adc
out
and
std
cmpsb
or
imul
iretw
adc
sahf
push
xorl
jp
aam
xchg
jge
pop
push
movsb
mov
push
xchg
sbb
mov
adc
dec
insw
in
xlat
cmp
pop
adc
cmp
jmp
push
xchg
cmpsb
mov
fstpt
jnp
mov
shll
das
data16
ret
and
xor
add
sbb
ds
jo
leave
call
ret
addr16
movsb
testl
out
and
mov
pop
mov
rolb
or
and
adc
mov
stc
mov
mov
iret
or
dec
lods
xor
loopne
add
fcoms
xchg
adc
dec
adc
out
cmpsl
cmp
test
sub
mov
xchg
lock
fdivl
add
adc
xchg
js
mov
cmp
lret
mov
mov
in
into
dec
mov
mov
jo
js
rolb
lock
out
out
movsb
and
inc
push
adc
lcall
pop
fdivr
pop
ficomps
jl
sbb
fwait
push
pop
hlt
sbb
xor
xor
mov
imul
adc
push
inc
js
int3
daa
call
mov
icebp
leave
psrlq
xchg
adc
pop
lods
inc
add
mov
push
add
xor
add
cmc
jno
aaa
or
mov
fcoms
aas
fcomp
xor
or
push
push
insb
mov
mov
cmp
xor
orl
orb
or
push
add
imul
adc
pop
adc
pop
mov
ret
sub
add
and
test
imul
cmp
sbb
das
iret
aad
shll
mov
dec
movb
mov
scas
cmp
inc
jmp
or
imull
sahf
xchg
add
enter
sbbb
inc
negb
push
addr16
xchg
and
aas
test
pop
clc
xor
lahf
nop
inc
stos
xchg
shrl
jbe
and
pushl
mov
ja
add
bound
shll
mov
leave
divb
sub
jb
cmp
stos
push
adc
in
inc
add
push
mov
cwtl
mov
imul
clc
pushf
std
or
iret
push
add
mov
aaa
add
mov
mov
mov
push
add
fildl
push
push
sbb
jp
aam
daa
pushf
jo
mov
jb
dec
cmp
pop
cmp
pushl
sbb
jp
cmp
inc
push
add
jnp
mov
into
adc
jmp
loope
pusha
xchg
bound
cwtl
add
and
and
inc
pusha
add
cmc
push
sub
shl
add
pushf
xchg
mov
movsl
andb
fnstcw
data16
mov
jae
sarb
add
fs
push
sub
xor
loope
sbb
dec
in
or
aad
dec
xor
xchg
push
jecxz
sbb
pop
shrl
aad
sub
push
push
push
or
pop
mov
add
popa
mov
adc
push
lahf
icebp
push
out
cmc
sarl
int
push
jbe
inc
jl
mov
and
sbb
inc
addb
pop
dec
aam
jne
adc
lods
or
xor
stos
orl
leave
and
mov
push
cmp
add
dec
fwait
sub
daa
leave
add
add
pop
scas
int3
add
shlb
mov
add
push
pop
xlat
fcoms
add
cmp
loop
int
inc
enter
mov
push
push
lods
sub
cli
pop
mov
jae
loope
and
or
xor
mov
in
xchg
jmp
pop
mov
adc
test
aad
stos
pop
sub
in
cltd
clc
jno
cmp
es
jnp
push
mov
lods
insl
daa
fldl
cmpsb
mov
sub
cmp
fisubrs
arpl
adc
and
sbb
push
in
inc
xorb
ss
push
xor
sub
inc
inc
mov
pop
mov
cmp
adc
and
mov
pop
incb
out
mov
jp
push
addb
adc
sbb
jmp
fwait
sub
js
inc
lea
gs
xor
pop
sti
fidivrs
loop
mov
and
not
mulb
mov
stos
cli
mov
or
lock
pop
mov
cmpsl
arpl
xchg
ljmp
lret
test
mov
jb
jnp
xor
mov
jp
data16
insb
jne
cmp
inc
out
in
sub
loopne
out
dec
jae
shrb
daa
sti
lock
test
fwait
or
cli
ret
push
pop
xor
jno
xchg
aam
rclb
dec
add
inc
je
push
mov
test
les
leave
cmp
pop
sahf
push
stc
mov
pop
xor
test
adc
sub
call
push
pop
mov
mov
outsl
inc
inc
stc
cmp
mov
cltd
pop
mov
stc
out
dec
jo
xchg
mov
cltd
push
adc
shl
push
sub
and
push
aas
insb
movsb
int3
fisubrl
mov
push
fwait
inc
test
les
dec
xchg
fcompl
cmpsl
add
sar
in
outsb
fwait
in
pusha
in
cld
jnp
mov
mov
push
and
test
aaa
sbb
ja
fiadds
cs
out
and
adc
xchg
repnz
adc
mov
or
jae
sbb
pop
dec
test
cmpsb
xchg
ret
in
test
mov
pop
cmpsb
test
or
mov
push
clc
pushf
and
js
into
mov
adc
aad
cltd
jno
mov
imul
cwtl
addr16
cwtl
testb
testb
cmp
rcrb
xchg
sub
and
mov
inc
sbb
stos
rcr
mov
cmpsb
fwait
sub
aam
repnz
outsl
icebp
in
out
lods
adc
mov
xabort
mov
gs
add
int
mov
xor
push
movsb
xchg
fs
fsubs
pop
int3
mov
cmp
daa
repz
andb
aad
inc
mov
rcll
jne
push
movsb
sub
sbb
lods
repnz
mov
jae
and
lods
arpl
bound
popa
mov
jbe
test
jecxz
xor
pop
test
xor
inc
movsl
das
subl
and
icebp
or
stos
xchg
and
data16
push
pop
cmp
cmp
or
dec
imul
stos
mov
xor
push
adc
pop
mov
push
mov
cld
inc
jnp
adc
xchg
cwtl
fldenv
loop
and
inc
lods
rcrl
inc
dec
add
jge
jecxz
testl
and
fstp
lods
jns
pusha
xchg
xor
or
mov
insb
push
cmc
jmp
je
call
cwtl
cs
outsl
cmpsb
divb
sbb
lret
cwtl
jb
xor
sarb
jg
cli
jbe
fildll
mov
and
and
out
add
or
mov
mov
arpl
int3
nop
adc
fstps
in
adc
je
push
ja
xchg
push
cmp
in
dec
or
lret
dec
mov
adc
push
loopne
sahf
mov
gs
lods
test
xchg
adc
cmpl
lahf
icebp
jno
mov
call
fistpll
cs
xchg
shr
subb
hlt
das
mov
imul
addb
icebp
out
pushl
out
sbb
rcr
int3
out
insb
push
sahf
inc
call
cwtl
into
mov
into
inc
pop
cmpb
mov
pop
sbb
mov
mov
lcall
mov
inc
imul
repz
cmp
mov
rcrb
jcxz
cmc
lods
mov
push
sbb
sub
jne
push
stc
aaa
push
in
or
pusha
popf
mov
mov
shlb
jb
push
arpl
push
insb
mov
xchg
push
pop
dec
sbb
and
clc
das
out
jne
call
mov
aas
out
jle
ffreep
mov
mov
mov
xor
mov
xchg
stos
data16
outsb
inc
fstpt
adc
mov
xor
insl
jo
mov
sub
dec
cwtl
stos
and
mov
pop
rol
in
dec
jb
pop
mov
or
push
loope
pop
stos
nop
mov
std
outsl
xchg
test
jmp
mov
mov
adcl
call
mov
xchg
xorl
xchg
mov
in
hlt
aad
andb
fiadds
pop
cli
fsubrs
into
jo
jno
fmull
lret
out
cmc
cmp
jmp
in
mov
push
lret
push
mov
cwtl
inc
add
xor
sbb
adc
rcl
int3
mov
scas
inc
hlt
xor
fstl
jge
cmp
ret
push
lret
sub
movsb
incl
or
cmp
ror
scas
pop
mov
push
jnp
cmp
jb
xchg
ds
jb
push
lahf
iret
iret
xchg
jno
insb
push
and
es
sbb
iret
jo
sub
fsub
enter
popf
mov
ret
pop
xor
mov
fwait
in
xor
outsb
mov
xchg
js
jle
ja
cmp
mov
out
rcrl
pop
mov
aam
daa
lahf
gs
loopne
mov
cmp
mov
or
aad
aas
fld
pop
and
rcr
cmpsl
jne
dec
xchg
dec
popa
and
shrl
fcomi
negb
addb
xchg
ffreep
movsl
and
sbb
dec
fistpl
jo
es
jbe
mov
frstor
push
scas
in
subl
inc
shll
mov
push
rorb
loop
outsl
sbbb
sbb
cwtl
xor
cmpsl
dec
mov
push
stos
sub
pop
sub
jnp
clc
cmc
cmc
mov
std
adc
insl
jbe
push
in
out
xchg
rcl
aaa
leave
mov
sub
dec
xor
jns
pop
fists
mov
or
mov
shlb
mov
pusha
in
test
movsl
stos
into
pcmpeqd
inc
adc
outsb
scas
xchg
insb
cmp
jnp
enter
jns
fnstcw
ja
pop
fcmovu
sub
or
in
or
cwtl
or
and
out
loop
stc
mov
add
dec
sub
cmpsb
sub
sbb
mov
notl
out
inc
or
lret
dec
leave
les
inc
pushf
lcall
inc
jg
add
icebp
daa
and
xor
cmpsl
cmpsb
xchg
into
insb
rcr
int3
test
jg
gs
push
dec
xchg
xor
inc
fnstsw
imul
int
jl
test
js
in
jmp
xor
icebp
into
shl
das
lahf
cs
push
idiv
stc
mov
push
mov
jp
int3
cmp
xchg
add
and
ud2
adc
test
mov
xchg
out
dec
xchg
daa
scas
push
push
inc
out
repnz
stc
dec
jbe
mov
hlt
movsl
xchg
xchg
sbb
stc
fildl
jecxz
mov
inc
push
and
inc
call
push
push
xchg
pushf
mov
adc
and
mov
lds
adc
call
test
movsl
lods
gs
mov
mov
dec
out
add
call
sbb
xchg
jo,pt
pop
ljmp
pop
outsl
xchg
int
sbb
or
sti
add
mov
mov
les
sub
js
cmp
and
addb
mov
ja
and
jl
outsl
int
inc
or
adc
inc
jno
pushf
sub
cltd
sub
mov
add
jmp
mov
cs
sub
repnz
into
lock
in
cld
jbe
addr16
xor
shrl
sbb
enter
rolb
xor
ret
sbb
push
and
jge
sahf
add
shll
push
es
cmp
and
sbb
mov
add
xchg
fidivrs
fcomp
cmp
aad
test
std
cli
gs
cmpsl
add
dec
dec
push
icebp
aas
in
or
lods
sar
test
jnp
xor
mov
popa
ja
mov
pop
sbb
in
push
pop
insb
lods
inc
into
jb
cld
in
cmpsl
jns
mov
call
es
pop
in
and
mov
testb
into
cltd
stos
add
or
fbld
dec
xor
sarb
insl
cmp
cltd
loop
add
mov
lret
push
mov
aad
call
shll
xor
imul
icebp
test
lods
stos
pop
fistl
jb
enter
stos
or
jmp
cmp
movsl
push
pop
movsb
pop
lods
mov
inc
dec
in
and
jp
rcrl
pushl
aad
adc
ja
fs
pop
pusha
jnp
ror
cmpsl
cmpsb
call
jno
nop
dec
in
stc
and
stos
outsl
pop
or
stc
inc
nop
popf
nop
cmp
cmp
into
pop
cmpb
mov
mov
push
out
adc
or
std
ljmp
pop
pop
mov
orl
xorl
loop
pop
in
jg
ret
leave
cmp
adc
mov
cmp
mov
pop
test
mov
xor
mov
cmp
dec
fistpll
icebp
nop
and
adc
jb
leave
arpl
cmc
inc
shrb
or
xchg
lret
mov
adc
add
jne
rolb
into
mov
add
push
in
and
orb
mov
mov
arpl
insl
sti
mov
pop
addb
aam
jl
std
push
fadd
mov
cmp
out
les
dec
fs
mov
xchg
stc
sbb
xchg
xor
cwtl
leave
addr16
sahf
int3
fnsave
cmp
shlb
mov
mov
cltd
mov
and
dec
repnz
hlt
lcall
inc
push
in
dec
inc
cmpb
sbbb
cmp
scas
repz
pop
xchg
fisttpll
or
jno
int3
mov
cmovnp
pop
les
mov
repnz
cmpsb
dec
div
inc
jg
dec
push
out
int3
std
mov
sub
xchg
into
xchg
cmp
dec
inc
push
mov
pushf
mov
lcall
faddl
out
jb
test
jge
mov
jp
inc
nop
lcall
lods
jge
ret
scas
mov
mov
mov
and
mov
leave
mov
repnz
mov
inc
add
inc
xchg
into
fiaddl
inc
lods
fucom
out
and
mov
mov
jb
mov
fwait
push
ja
mov
sub
js
xchg
popa
sub
adc
jp
sahf
push
sub
dec
out
ja
aas
inc
push
pop
out
sahf
mov
xchg
xor
fisubrl
adc
loope
pop
push
lods
pop
adc
icebp
jp
pop
daa
add
outsb
xor
xchg
jecxz
cld
daa
mov
sbb
push
mov
enter
outsb
and
mov
fnstcw
movsl
clc
in
sbb
mov
xchg
mov
or
mov
decl
mov
lahf
fstl
sahf
sub
push
pop
pop
push
leave
cmp
loope
adc
xchg
popf
add
mov
and
outsb
cli
mov
int
push
xorl
fistpll
jo
loopne
aas
xor
push
outsb
dec
ficompl
mov
ja
lods
and
jp
adc
or
rcrb
jno
push
rorl
jg
or
push
push
movsb
sub
mov
bound
or
mov
xchg
insb
and
dec
pushf
mov
lahf
lock
mov
in
sarb
pop
lcall
or
xlat
or
cmp
mov
mov
arpl
xchg
dec
aas
lds
xchg
lret
lahf
dec
stc
lahf
mov
sahf
add
cwtl
cli
bound
add
gs
aaa
mov
sbb
mov
movsb
imul
lcall
mov
cli
add
cli
test
or
or
lock
dec
mov
push
dec
mov
stos
inc
jg
iret
test
xor
inc
dec
jg
xor
ds
inc
cmp
push
jnp
or
sbbb
ss
push
fists
sahf
sbb
sbb
mov
out
xor
inc
cmp
jne
push
cmp
mov
mov
into
adc
jp
jns
adc
pop
cmc
xor
push
inc
mov
mov
dec
pop
pop
cmpsb
int
jnp
aaa
mov
hlt
and
out
dec
or
das
xchg
xchg
adc
dec
aas
sti
mov
xor
pop
xor
outsb
adc
and
xor
jmp
adc
push
out
lds
jbe
xchg
cmpsl
mov
jge
fcoms
xor
fbld
add
ljmp
icebp
jl
and
dec
add
ljmp
outsb
sub
std
push
mov
lret
adc
js
adc
mov
xor
rclb
mov
push
insl
lahf
cltd
mull
stos
pop
outsb
jp
dec
in
sbb
mov
mov
push
adc
popf
xor
gs
xlat
movsb
fisubl
sub
popa
and
xor
ficoms
fucom
dec
jb
loopne
inc
stc
and
xchg
mov
repz
out
and
fdivl
aas
pop
cwtl
sahf
out
pop
mov
mov
pop
shrl
repnz
aam
xchg
data16
inc
negb
mov
mov
gs
push
js
clc
in
push
xlat
adc
fdiv
daa
adc
xor
sub
pusha
loope
mov
data16
mov
lcall
push
lcall
dec
cmpsl
outsl
das
ret
sub
jmp
aaa
push
mov
sub
jnp
aas
ljmp
xlat
xor
jp
fimull
adc
mov
insl
dec
lret
dec
or
sahf
push
push
rcpps
cli
sbb
imul
push
push
pop
pop
jnp
or
ficoms
jmp
jge
incl
in
ss
push
in
sub
xchg
into
or
sub
push
mov
xchg
arpl
daa
scas
sub
dec
mov
adc
mov
push
cmp
gs
fsubr
in
enter
lock
pop
push
xchg
sbb
lahf
movsl
arpl
mov
repnz
jns
mov
jb
ja
mov
popf
sub
pop
or
pop
push
xchg
jno
sahf
ja
cmp
daa
inc
and
mov
fcoms
jns
sub
pop
push
repnz
nop
jno
daa
push
or
pop
xor
cltd
aas
orl
xor
jns
ljmp
in
mov
inc
push
popf
sbb
fiaddl
xor
xchg
xchg
pushf
lods
mov
xchg
js
xchg
dec
sbb
repz
push
cld
lret
cmp
dec
pop
pop
imul
scas
in
sub
ret
lret
mov
inc
add
xor
inc
ror
scas
or
jno
stc
and
xlat
movsb
adc
roll
rcll
pusha
xor
mov
aas
dec
mov
shll
dec
jp
fwait
data16
push
push
and
ss
div
shll
xor
pop
mov
insb
das
xchg
fsubl
fsubl
ret
aaa
ret
loopne
add
fdivrp
imul
mov
jp
out
outsl
inc
sub
mov
int3
inc
xchg
and
lcall
stos
fs
dec
shlb
push
xlat
jmp
or
mov
cmpsl
and
imul
ss
cld
int
sahf
pop
fistl
xor
xchg
aaa
mov
mov
mov
mov
sbb
bound
stc
dec
cmpb
out
dec
sub
iret
dec
popa
rcrl
or
into
bound
movsb
fcoml
iret
mov
in
adcl
popa
aas
scas
inc
in
dec
inc
aam
mov
repnz
out
mov
imul
pop
dec
inc
sbb
jno
sub
xchg
dec
add
mov
call
je
rcrl
lods
pop
or
push
inc
jae
mov
pop
xchg
stos
mov
cwtl
mov
scas
add
ficoml
mov
ss
adc
outsb
inc
mov
jecxz
mov
dec
cmpsl
jbe
jecxz
pop
sbb
sub
shll
pop
outsb
aam
jp
movsl
jo
hlt
sahf
loope
mov
fidivrl
dec
sbb
add
mov
adc
ds
lcall
xor
mov
sbb
mov
fstpt
stos
and
mov
dec
insl
or
js
sub
test
out
xor
xchg
cmpsl
xchg
outsl
ss
mov
xor
lea
push
xor
add
push
jg
maxps
sbb
call
lods
aad
sub
add
mov
mov
jbe
jno
inc
dec
ljmp
fildl
and
andb
sub
int
aas
adc
aas
gs
and
inc
add
insb
sbb
cli
popa
loop
xor
int3
leave
or
rorl
or
shr
cmp
xlat
shrl
dec
arpl
mov
mov
sbb
notb
sbb
loopne
fwait
push
fldenv
or
push
in
cmpsl
leave
ja
movsl
sarl
pop
in
hlt
or
push
or
adc
aas
std
xchg
adcl
fcmovnu
fsubl
jecxz
cs
repnz
cmpsw
push
imul
and
mov
xor
xor
movsb
scas
bound
popa
in
mov
adc
push
mov
xchg
xor
stos
cli
mov
jnp
in
hlt
and
fdivr
repnz
fistpll
ret
and
rclb
and
push
add
xchg
pop
or
not
push
test
repz
lds
adc
divps
sbbl
mov
mov
bound
orl
jmp
or
repz
rdtsc
rep
das
add
mov
mov
push
ret
nop
insb
loopne,pn
push
insl
call
movsb
mov
leave
push
add
out
xor
test
sub
xlat
ret
rcll
addr16
xchg
loop
sbb
sbb
cmp
call
cmpsb
mov
je
nop
iret
adc
add
out
mov
mov
cmp
stc
cmp
dec
and
out
push
mov
xchg
cmpsl
sub
in
fsubl
dec
faddl
outsl
add
dec
in
xor
sbb
les
inc
or
xor
aad
adc
mov
mov
dec
pusha
in
mov
pusha
adc
pop
xchg
out
mov
insl
out
xor
mov
in
nop
rorl
ret
out
and
jle
mov
cmp
sub
in
subb
sub
xchg
mov
out
std
sti
mov
cmp
in
mov
push
aaa
outsl
rorb
sbb
in
orb
rclb
gs
jmp
cmc
mov
jp
sbb
psubsb
pop
ss
jbe
aas
push
fidivrs
push
xor
push
xchg
in
push
sbb
or
int3
push
stos
lds
leave
shlb
out
push
in
pop
sub
mov
das
mov
data16
in
sbb
xor
lret
mov
aad
mov
ficoms
clc
sti
aas
push
jge
add
jo
outsb
push
loopne
push
adc
sub
stos
jmp
out
dec
ftst
xchg
mov
mov
jae
daa
jmp
cli
push
sub
pusha
sub
cmc
add
sbb
sub
hlt
sub
pop
ret
aas
and
or
inc
or
fwait
xor
ret
sbb
andb
adcl
push
cmp
xor
sbb
in
imul
leave
int3
xor
pop
lock
and
popa
mov
cmc
mov
je
test
jo
decb
pop
outsb
dec
add
lock
and
loopne
ror
in
inc
push
sbb
xchg
jle
scas
sti
outsl
nop
or
loope
arpl
mov
dec
mov
xchg
adc
mov
push
fcmove
aaa
call
insl
test
sahf
lahf
aaa
inc
filds
pop
call
sahf
pop
xor
ret
jnp
mov
push
pop
cs
adc
scas
outsl
int
mov
frstor
scas
cs
sub
sub
adc
call
in
pop
add
sub
mov
scas
add
cmpsb
jo
pop
xlat
pusha
lods
rcrl
mov
imull
push
stc
mov
int3
and
dec
movsb
fistpll
xchg
pusha
movsl
dec
push
jle
xor
xchg
adc
ret
cmpsl
sub
xchg
hlt
inc
push
or
pop
inc
insl
addr16
pushf
mov
xor
add
add
dec
xchg
das
in
pop
andl
add
mov
ficoms
ljmp
pop
sbb
stos
ds
lds
or
push
cli
adc
setbe
scas
xchg
shll
pop
or
jns
xchg
negb
call
rorb
xchg
fcoml
popf
and
mov
lret
dec
popf
and
or
shlb
xor
into
adc
xchg
cmp
mov
xor
icebp
and
push
push
push
fdivrl
pop
adc
mov
test
into
repz
cmp
pop
in
xor
dec
mov
sbb
data16
push
push
movsl
push
fnstenv
and
sbb
jecxz
cmp
dec
in
and
shl
dec
std
repz
rorb
in
mov
cli
adc
sarl
int3
fcomip
repz
xor
out
jle
dec
hlt
mov
sub
add
mov
mov
fisttpl
loopne
ret
pop
mov
and
cmc
lock
sub
mov
or
inc
insl
data16
cmp
es
mov
and
jno
fsubp
call
pop
push
sti
rorl
ret
fists
cmp
jmp
negb
arpl
test
push
mov
or
mov
hlt
js
xchg
mov
mov
mov
loope
lods
and
fstpl
jno
ret
pop
cmpsb
out
and
mov
xchg
mov
xchg
sub
pop
scas
and
jnp
mov
and
ret
push
out
popa
xor
inc
fdivrl
sub
popa
sbb
scas
and
mov
push
imul
push
rol
lds
hlt
iret
in
add
inc
xor
pop
jne
popf
inc
ret
inc
inc
daa
ret
adc
add
out
subl
leave
mov
add
sbb
fnsave
push
or
and
int3
add
push
xchg
lods
add
out
sarl
fwait
sbb
adc
sub
nop
xor
mov
add
and
push
repnz
push
enter
les
das
testb
aaa
cmp
mov
and
xlat
mov
fs
inc
push
jl
je
daa
sub
fistpll
out
or
push
insb
mov
mov
xchg
mov
cmc
inc
scas
jno
cltd
jg
das
mov
pop
adc
adc
jbe
in
inc
cs
aad
icebp
xor
cmc
js
adc
pop
pop
test
mov
test
ds
or
sbb
jnp
mov
sub
rcll
sub
mov
rcr
pop
dec
mov
sbb
push
fdivrs
dec
mov
mov
sub
pop
and
sub
dec
adc
pop
cld
cmp
mov
dec
aam
stc
test
adc
imul
jo
cmp
outsb
push
mov
mov
add
je
loopne
rorb
icebp
test
mov
mov
or
inc
sbb
jne
cmp
inc
push
call
mov
or
fdivrs
je
adcb
test
xchg
mov
mov
mov
mov
sub
movsl
pop
std
mov
out
xor
daa
mov
mov
mov
sti
cmpb
lret
lret
or
jnp
out
push
out
mov
cli
je
fcoms
mov
out
mov
outsl
test
inc
inc
push
push
pop
or
int3
dec
in
cmp
xor
int3
loop
cmpsb
imul
mov
sti
sbb
cltd
nop
mov
pusha
mov
pop
int3
cmp
aad
pop
arpl
pop
mov
scas
push
sahf
xchg
push
xor
dec
pop
xchg
stos
cli
mov
fbstp
inc
sub
jecxz
jae
pop
sbb
fsub
sbb
xor
push
push
test
adc
repz
pop
cmp
pop
in
cmp
and
mov
test
dec
adc
adc
mov
xor
adc
mov
mov
pop
push
inc
into
loopne
pop
mov
les
adc
adc
das
sbb
mov
cmp
mov
lods
jns
jl
mov
sub
hlt
inc
adc
or
xchg
pusha
mov
mov
ret
jbe
jns
out
mov
das
out
sbb
inc
sub
mov
and
push
push
jb
loope
xor
sbb
xor
jnp
imul
mov
or
sub
lcall
mov
mov
ljmp
lahf
cmpsl
xor
mov
incl
jle
cmp
jns
outsb
mov
dec
mov
pop
cmp
mov
fwait
pop
out
std
pop
popf
sete
push
cs
hlt
jmp
sbb
sbb
cli
mov
es
in
jo
xor
add
daa
rclb
icebp
pushf
je
insb
hlt
out
sub
shr
mov
fmuls
inc
sbb
dec
popa
and
cmp
mov
aas
pusha
call
push
push
and
in
leave
out
adc
jp
mov
inc
out
add
cmp
or
pop
jmp
sti
jno
xchg
push
xchg
sub
jne
inc
cmp
dec
ja
add
pop
adc
jbe
or
pushf
movsb
mov
jbe
and
mov
scas
jmp
fadd
cmp
or
push
jnp
rclb
loop
lahf
adc
cmpsb
dec
lock
xor
out
cli
pop
and
mov
cmp
daa
push
cld
pop
adc
es
pop
fidivrl
fldl
mov
js
out
filds
fidivl
adc
mov
inc
ss
imul
fsubrs
popa
and
daa
int3
imul
loopne
loope
and
push
enter
sbb
pop
inc
orl
cmp
hlt
data16
in
sahf
jmp
push
add
inc
dec
xchg
xor
std
ds
ss
xor
xchg
dec
loop
fldt
adc
and
mov
dec
movsb
leave
loopne
push
sbb
pop
ficoml
jno
cmp
andl
fisubrs
in
mov
sbb
push
sub
mov
inc
push
popf
xor
sti
out
fstpl
addr16
arpl
iret
fnstsw
push
aam
lcall
push
arpl
lods
push
cli
daa
inc
push
add
mov
jbe
cmp
int
sub
andb
dec
les
jo
aad
sahf
ret
dec
stc
push
or
dec
inc
sbb
sti
loope
mov
mov
mov
lods
xor
adc
lds
cmpsb
cmpsb
push
cltd
stos
push
aad
and
xchg
dec
cmpsl
sbb
or
rorl
out
jo
push
xchg
pop
outsb
sbb
pop
push
jne
cmc
mov
mov
mov
ficompl
xchg
xor
icebp
push
inc
sub
mov
test
aad
in
or
mov
pushf
mov
mov
jg
fcoml
xchg
sub
push
mov
add
push
adc
scas
jmp
ljmp
out
js
xlat
dec
inc
push
iret
jae
test
push
out
xor
jl
insb
add
mov
mov
fwait
mov
and
insl
push
dec
jmp
push
outsb
jg
inc
je
jg
sub
sbb
scas
shll
mov
sbb
call
xorl
jp
push
aaa
stos
stc
lods
imul
push
cli
lods
scas
fldt
stc
js
jmp
mov
sbb
std
scas
fcmove
cmp
fdivrp
jmp
je
test
test
bound
es
mov
mov
add
sub
lcall
and
gs
xchg
fucom
xor
int
test
push
push
cmp
xor
in
in
or
dec
pop
dec
cmpsb
sbb
push
sahf
lret
popa
jmp
mov
dec
inc
jmp
inc
outsb
dec
ja
inc
or
shl
jmp
xchg
inc
mov
pushf
sub
cltd
mov
scas
out
notl
jb
cld
scas
push
adc
orb
fadd
add
decb
pop
psubw
out
mov
dec
pop
jbe
loop
jbe
popa
arpl
ja
mov
fisubs
adc
xor
mov
jmp
in
adcl
out
pop
dec
or
imul
inc
mov
push
mov
or
inc
addr16
sub
imul
fbstp
jle
add
add
sub
pop
xchg
test
xchg
ss
gs
bswap
inc
inc
fnstenv
add
sub
rcll
lods
aas
imul
pop
fsubrl
popf
fwait
dec
cmpsl
push
push
lahf
push
cmp
and
push
pusha
mov
push
orl
cltd
sub
cmpsb
jbe
mov
mov
mov
lret
mov
or
std
cmp
das
in
xor
mov
addr16
in
push
gs
popa
mov
and
incb
lahf
inc
and
xchg
arpl
cmp
dec
imul
std
addps
cmpsb
sub
adc
in
int
dec
push
push
jl
test
and
es
jno
test
scas
mov
lcall
pop
inc
shl
fsubrl
pop
mov
push
add
pop
jecxz,pt
mov
mov
ja
lods
xor
pop
mov
ja
test
jae
cmp
push
sbb
arpl
pop
mov
cli
pop
into
xchg
pop
inc
lea
and
negb
negl
jae
cmpsb
cs
add
inc
test
in
push
aad
add
fwait
mov
sub
push
pop
mov
lods
movl
loop
call
cmp
ljmp
lahf
xor
inc
cmp
fimull
cwtl
pcmpgtw
push
mov
insb
cltd
mov
pop
or
jae
lahf
lods
or
ja
movsl
mov
test
sub
pop
cmp
nop
mov
ja
jae
fadds
cmpsb
in
sbb
mov
dec
mov
mov
test
sub
pop
or
sbb
push
mov
out
enter
sub
fnstenv
push
xor
sbbb
add
inc
lahf
mov
shrb
notl
les
inc
or
scas
idivb
push
mov
call
data16
xor
push
jne
inc
fists
xor
mov
push
mov
and
sbb
adc
mov
adc
shl
pop
and
int3
testl
and
testl
mov
ja
and
mov
push
mov
push
stos
repnz
inc
mov
sbb
add
xor
pop
int
cmp
nop
xchg
pop
mov
imul
aam
add
je
aas
cmpsl
adc
sbb
dec
jb
das
mov
cmp
ss
dec
and
and
cmpsb
das
mov
loopne
fwait
ljmp
or
sbb
imul
lods
or
mov
xor
sub
cli
test
mov
push
mov
push
mov
xor
mov
inc
mov
int3
call
outsb
insl
negb
jecxz
mov
in
arpl
pop
mov
xchg
popa
repz
clc
inc
push
int3
nop
dec
inc
xor
sbbl
sbb
mov
mov
or
nop
sub
adc
fdivrl
je
fildl
add
mov
ljmp
psubq
aaa
jmp
or
cmc
sbb
movsl
adc
out
popf
mov
jbe
insb
ja
insb
adc
nop
jb
cld
mov
movsb
or
inc
addr16
and
incb
hlt
xor
loope
push
dec
es
fstp
orb
xor
outsb
test
addl
fs
dec
leave
xorl
shlb
loopne
fildl
xor
sub
push
fsubl
repz
out
cmp
add
xchg
andl
adc
arpl
inc
imul
xor
sarb
push
ret
pop
out
mov
mov
dec
call
xchg
and
xor
mov
dec
sbb
or
mov
add
cld
pop
bound
adc
mov
sub
std
fdivrl
mov
mov
mov
fdivrl
mov
xchg
or
xchg
push
or
test
shlb
jo,pt
jle
add
in
xor
mov
or
lahf
scas
es
lods
push
xor
data16
loope
inc
or
ret
dec
add
test
push
xchg
in
sub
sub
adc
fisubl
inc
in
sbb
mov
sub
pop
repz
ss
xor
jno
test
pushaw
or
in
in
push
aas
stos
sahf
je
or
mov
xor
into
cli
test
xchg
fldl
sti
gs
aaa
mov
mov
insl
out
je
aad
pop
leave
push
scas
pop
nop
in
outsb
repz
aam
cli
popa
cmp
mov
mov
xor
push
cmp
mov
cmp
cmp
and
mov
mov
clc
cmp
jg
jns
ss
jl
in
addb
push
daa
mov
movl
dec
dec
push
or
fistps
test
xchg
inc
dec
jnp
sbb
and
inc
push
lds
aaa
lds
jl
fldt
ljmp
cmp
addb
dec
and
insl
mov
sub
mov
cmpsl
and
cwtl
push
and
insl
pop
add
mov
add
lret
aad
nop
enter
call
cmp
or
cmpsb
rorb
add
les
dec
dec
fidivs
and
les
cmp
or
mov
mov
adc
cld
xor
jg
rorl
or
inc
fiaddl
inc
pop
push
sub
dec
push
mov
out
sub
jnp
enter
idivl
ss
es
je
mov
outsl
std
inc
icebp
xchg
rcrb
out
popa
mov
iret
bound
inc
xchg
arpl
mov
int3
mov
data16
jnp
out
pop
outsb
lock
ja
or
popa
inc
fistl
xchg
jbe
sbb
jo
int3
lock
test
mov
fadd
pusha
cs
lahf
gs
xchg
or
push
add
pushf
ror
and
pop
add
pop
popf
push
and
and
xchg
mov
ficompl
xor
xchg
sub
adc
jnp
aas
iret
dec
rcll
adc
jne
push
mov
jle
sbb
push
int3
add
popf
xor
cli
es
push
aaa
push
loopne
fbstp
jns
xor
xchg
xchg
xor
sahf
test
inc
add
fdivs
pmuludq
popa
pop
push
mov
cmpb
ljmp
in
xlat
pop
pop
mov
add
mov
lret
ret
std
das
adc
fs
ret
fwait
push
xor
aaa
repz
adc
cmpb
sbb
in
test
lret
inc
adc
jl
notb
inc
xchg
pmulhuw
sbb
pop
sub
push
xorl
das
mov
in
das
scas
int
adc
movsl
ljmp
push
repnz
or
dec
mov
adc
adc
or
jmp
nop
test
mov
push
and
mov
mov
pop
in
scas
inc
js
sub
pushf
mov
ret
ret
lahf
add
repnz
cli
rorl
jmp
ss
xchg
pop
pusha
aaa
hlt
gs
or
data16
loopne
adc
dec
jecxz
ljmp
mov
cltd
insl
xor
addr16
adc
cwtl
in
lock
int
data16
popa
call
aam
add
call
imul
mov
pop
mov
jb
jo
in
ja
subl
testl
call
mov
jmp
xor
sub
das
rorb
outsb
test
jp
inc
mov
ffree
cmp
decb
xor
ds
lahf
shrl
dec
outsl
enter
inc
fwait
push
jmp
shll
lds
mov
push
repnz
add
jg
xor
pop
popa
roll
out
imul
sahf
lret
loopne
pop
sbbl
add
mov
mov
push
pop
subb
pusha
addb
pop
add
inc
fmuls
inc
or
outsl
ficompl
int
bound
xchg
insl
and
dec
dec
inc
xchg
mov
insb
aam
jne
dec
sub
jb
popa
xor
sahf
dec
test
mov
arpl
call
movsl
push
jecxz
out
jb
sub
lahf
or
movsl
xchg
cs
ret
cmp
rcll
xchg
fisubl
inc
repz
lock
xor
jmp
movsb
ja
push
fldenv
pusha
daa
or
cmc
lcall
lret
pushf
pop
repz
decl
fisubs
std
push
rclb
lds
repz
or
push
jb
add
pop
sub
test
xor
jmp
lcall
mov
movsb
sbb
out
xchg
insb
cwtl
sbb
ja
xchg
cmp
pop
push
dec
push
sub
imul
insb
adc
call
in
bnd
and
jle
dec
shrl
sti
cmp
add
fistpll
lret
fs
cs
jns
or
sbb
sub
push
aam
jecxz
ret
cmpb
mov
lahf
pop
adc
out
shrb
push
and
add
ljmp
fwait
push
int
call
cmpsl
mov
inc
mov
xor
mov
ja
std
mov
mov
scas
ficompl
inc
xchg
and
js
xlat
out
cmp
xor
nop
jge
or
pop
pushl
gs
and
loopne
xor
push
sub
insb
lcall
enter
cmpsl
mov
lock
enter
and
and
sub
inc
sbb
or
repnz
mov
rol
sub
int3
adc
xchg
data16
rcr
sub
xor
mov
fwait
push
mov
fildll
fmuls
shr
adc
gs
rcrb
and
pop
inc
insl
cmc
shll
mov
jno
sub
mov
int
lea
shrl
je
ljmp
repnz
mov
cmc
mov
enter
pop
mov
addr16
sbb
and
daa
push
mov
add
cmpsb
pop
push
mov
nop
adc
push
outsb
push
jnp
dec
xchg
sbb
les
jg
mov
aaa
lret
adc
push
testl
push
negb
aaa
and
cwtl
sub
push
mov
insl
shr
jns
push
shll
rorb
daa
ds
jmp
std
and
loope
stos
out
push
and
shlb
int
fadd
inc
subl
inc
scas
pop
aas
loopne
out
cmp
stc
and
cmp
sub
sbb
testl
sub
in
fwait
xor
jae
cmpsl
loopne
xchg
test
pop
out
stos
movsl
int3
cltd
push
mov
clc
xor
and
lods
mov
cltd
adc
leave
and
xchg
inc
les
push
mov
sbb
lock
call
pop
mov
dec
lods
bound
mov
data16
cmp
cmp
sbb
mov
and
jecxz
fs
xor
out
in
adc
add
insb
je
stos
mov
fadd
add
mov
xchg
scas
out
fnsave
mov
inc
push
imul
push
push
push
jl
cmp
xchg
lahf
jmp
dec
and
jno
pop
sub
pushl
dec
fistpll
mov
call
mov
jne
ret
xor
dec
mov
xchg
jecxz
mov
das
sbb
not
jg
aad
test
into
push
xor
cwtl
sub
out
push
dec
lea
xor
popa
cmp
xor
ja
mov
mov
out
mov
stos
cmp
dec
outsl
into
les
in
lcall
jge
mov
sub
mov
cli
pop
dec
rcl
and
std
xor
push
mov
clc
add
in
leave
into
imul
call
adc
cmp
xchg
jge
test
pop
pop
lods
inc
popl
xor
mov
ljmp
iret
push
dec
cld
or
dec
pop
and
xchg
gs
fistpll
inc
std
mov
std
je
test
lock
xchg
and
sub
daa
mov
add
inc
cmpsb
pop
jb
adc
lods
mov
cmpsl
in
push
xchg
pop
call
in
jle
pop
push
loopne
dec
fucomi
sbb
in
mov
rcrl
jecxz
dec
iret
lahf
mov
lds
dec
popa
scas
aas
repz
pop
xlat
dec
mov
mov
add
cwtl
adc
jae
test
fistpl
pop
lret
inc
add
mov
test
xor
add
pop
dec
push
cmpsb
push
nop
lret
stc
mov
push
fcmovnu
iret
shr
outsb
jecxz
orb
or
mov
mov
add
push
mov
xchg
adc
roll
xchg
popa
jno
add
repz
push
repnz
sbbl
sar
mov
pop
push
adc
mov
dec
subb
lret
fbld
sub
jbe
cmpsl
bsr
pop
jmp
jne
ss
inc
addr16
sub
sbb
ret
xor
mov
aaa
setg
aaa
daa
cltd
in
add
lcall
std
xchg
mov
mov
cli
jl
mov
mov
dec
xchg
aam
fsubl
popa
mov
add
mov
pusha
lahf
imul
movsl
loopne
test
dec
or
shrb
stc
mov
fs
push
enter
ljmp
lea
or
mov
in
outsb
jecxz
in
das
fldcw
movsl
sbb
loop
mov
fldenv
jo
inc
dec
sbb
call
xor
adc
insb
stos
gs
push
popa
inc
mov
sub
mov
mov
inc
adc
pushf
adc
pop
sbb
fdivl
cmpsb
scas
mov
sahf
xchg
xchg
sub
adc
enter
bswap
pop
cmp
outsb
and
xchg
dec
imul
pop
scas
push
sub
sarb
int
es
lret
mov
loopne
sub
leave
stos
rclb
dec
repz
mov
jbe
lret
xor
inc
out
ljmp
dec
cmpsl
scas
aad
jnp
sub
and
fucomp
orb
in
movsl
test
maxps
jp
dec
outsb
sub
mov
sbb
arpl
pop
mov
dec
push
dec
mov
or
int3
outsb
jle
in
lods
add
mov
and
mov
lret
frstor
nop
cmpsb
jl
add
xchg
xor
push
mov
mov
xor
ds
and
js
dec
dec
stos
test
mov
cmp
sbb
enter
sub
and
dec
je
cmp
xor
cmp
pop
inc
lcall
pop
ljmp
cmp
imul
push
sub
call
out
leave
arpl
jbe
push
mov
call
or
scas
mov
in
cltd
aas
add
add
mov
shll
mov
ret
dec
mov
std
mov
xor
lahf
arpl
jb
cmpsl
cmpsl
xchg
adc
add
dec
dec
rcll
imul
jne
call
lods
out
insl
jmp
xchg
aas
fldt
jge
cmp
loopne
fcmove
mov
ds
mov
jge
test
xor
cli
sbb
jmp
jbe
mulps
push
mov
sbb
orb
repnz
xchg
aas
in
xor
outsb
sti
pop
popf
out
mov
mov
inc
adc
pop
dec
sarl
nop
in
adc
xchg
xchg
dec
testl
xor
xor
jae
int3
js
lock
push
pop
and
mov
stc
shl
hlt
shlb
push
pop
mov
adc
pop
push
xor
xchg
mov
insb
loop
ljmp
xchg
sub
mov
add
mov
xchg
inc
in
inc
cmp
addl
jmp
out
lahf
mov
stc
imul
pop
iret
and
sub
leave
pop
push
dec
aas
mov
test
in
jmp
xchg
aaa
stos
jno
out
mov
cmpsb
in
cli
faddl
push
aam
and
inc
sti
ds
inc
add
sbb
pop
cld
adc
sub
pop
les
push
daa
and
xor
dec
negl
xchg
mov
hlt
or
sub
sub
xchg
sarl
int
push
daa
bound
or
into
mov
sub
js
inc
test
mov
arpl
stos
shlb
insl
in
dec
fadds
cmp
mov
sbb
jmp
hlt
push
insl
xchg
fwait
int3
mov
jbe
test
and
mov
push
adc
mov
fs
pushf
jb
push
out
jge
adc
jno
and
cmpl
pop
xor
loope
flds
jp
in
lock
jae
xchg
scas
inc
and
mov
dec
ljmp
dec
xchg
and
or
and
sbb
je
ret
mov
rolb
lret
ret
jo
and
popa
xor
test
jg
pop
in
or
outsl
je
popf
clc
test
cmpsb
push
fmull
or
and
out
xor
enter
cld
fmuls
rorl
cmp
or
or
repnz
icebp
pusha
adc
std
into
nop
pop
mov
hlt
mov
pop
sarb
jne
fnsetpm(287
jo
inc
stos
xor
arpl
repnz
xor
xor
lods
fmulp
cmpsb
aas
mov
pop
mov
pushf
test
inc
xor
aad
shl
insb
sub
or
or
jmp
shlb
sbb
rcrb
loope
inc
lods
mov
inc
dec
push
push
stos
cmc
inc
lds
mov
loopne
imul
mov
mov
add
sbb
int
incl
push
fildll
add
subb
or
mov
mov
sub
mov
pop
lods
xchg
mov
ljmp
xchg
ret
popa
in
in
xchg
add
in
push
jo
or
lahf
push
mov
lea
lods
mov
mov
test
scas
cmpl
dec
xchg
pop
ja
loop
test
jo
xchg
cmc
push
cwtl
ret
jnp
das
add
vpsrlw
pop
stos
rcr
lods
lods
pop
xchg
into
mov
cli
adcb
pop
les
es
rorb
and
sbb
mov
lea
lds
aas
lcall
scas
scas
mov
ficomps
loopne
push
rcrb
mov
push
aas
popa
mov
ds
mov
sbb
or
aam
sub
loop
dec
add
or
mov
lods
push
lahf
push
mov
jge
mov
xor
mov
rclb
adc
jo
add
in
cld
loopne
loop
mov
testl
aad
andl
xchg
gs
inc
insl
jle
fnstenv
pop
sbb
add
cmp
clc
mov
mov
gs
sbb
aas
jge
dec
aad
faddl
inc
ret
rcrl
mov
sti
mov
nop
ss
imulb
or
sbb
and
rcr
push
shlb
out
in
inc
pop
and
outsl
andb
cmp
dec
push
add
ljmp
lock
mov
test
daa
in
cmp
inc
cltd
pop
movsbl
mov
out
icebp
pushf
mov
xchg
mov
lods
inc
repnz
adc
and
pushf
cs
xor
or
push
mov
mov
jle
inc
xlat
mov
fidivrl
out
bound
jmp
xchg
mov
inc
and
pop
jl
lret
fmull
das
lock
sarl
mov
mov
mov
adc
and
call
mov
ljmp
ss
sub
loop
push
ret
shll
pop
mov
push
fisubrl
add
je
or
int3
add
fmuls
fiaddl
inc
cli
jecxz
lds
icebp
insl
cli
inc
jnp
mov
mov
push
xor
add
add
and
mov
lahf
jbe
pusha
adc
xchg
add
xchg
pop
jae
mov
in
inc
push
adc
and
stos
pop
sbb
pop
or
data16
aas
mov
add
pop
cmpsb
and
add
push
and
mov
scas
loope
pop
sbb
xchg
xchg
out
scas
push
push
mov
push
or
and
mov
mov
pop
fstpt
fisttpl
cmpsb
das
movsb
jno
cli
dec
lock
loopne
ret
adc
fcmovnu
aad
mov
jmp
pusha
outsl
loope
pop
mov
dec
adc
cmc
add
inc
out
add
fnsave
hlt
in
movsl
add
out
lods
into
arpl
mov
fstpt
rcr
pop
pop
pop
inc
sub
or
and
cmpsb
stos
cmp
popa
xchg
fcoms
fsubrs
jbe
add
scas
sub
popl
mov
mov
loopne
outsb
jecxz
or
inc
sahf
scas
mov
mov
cmc
call
dec
pushf
sbbb
xchg
adcl
mov
mov
iret
in
push
shll
daa
out
pusha
mov
xor
add
add
ss
mov
jg
jl
leave
add
and
leave
add
lods
pop
cmp
in
mov
inc
xchg
ds
popf
scas
fcmovu
push
das
es
je
push
aaa
add
sti
mov
test
iret
sbb
xor
jle
pop
movzwl
data16
shlb
mov
sbb
mulw
jp
mov
aas
icebp
lahf
adc
cmc
cs
push
jbe
stos
sahf
das
jnp
outsb
jnp
jno
outsl
mov
xor
ss
cs
dec
dec
cmpsl
ja
cld
lcall
pop
das
mov
dec
das
popa
adc
mov
cmp
insb
jo
push
das
xor
shrl
mov
sub
xchg
popa
pusha
int
add
lods
fistpl
adc
repz
lahf
inc
inc
cltd
push
mov
jp
es
leave
xchg
add
push
nop
js
jp
rorl
testb
pop
xor
mov
jge
xor
daa
and
mov
pop
or
lock
std
aam
inc
dec
scas
xchg
mov
stc
adc
push
jns
mov
mov
lret
inc
sti
fstpt
dec
push
loopne
sub
jecxz
adc
mov
in
outsl
mov
jmp
leave
shl
int3
sbb
int3
mov
xor
sbb
sub
lret
js
repz
out
pop
data16
mov
fldcw
out
adc
ja
andl
push
push
rorb
pushf
or
jnp
jl
ficoml
movsl
push
outsl
xor
xchg
xchg
pop
push
mov
int3
add
cwtl
iret
add
dec
push
or
data16
pop
xchg
mov
add
mov
xchg
es
jmp
pop
push
xchg
mov
sub
jg
xor
gs
in
mov
xlat
gs
cmp
lret
fstp
shrb
mov
sub
push
iret
inc
sbb
popf
mov
ficoms
push
xchg
hlt
fcomps
scas
inc
pop
sbb
mov
xor
mov
and
test
fwait
adc
jno
ja
popa
jns
shll
pop
movsb
in
rcr
mov
pop
das
pop
fsubs
jp
mov
xlat
cwtl
push
adcb
lahf
pushl
pusha
xchg
dec
int
orb
es
fidivl
add
popl
fsubrs
xor
xor
out
push
aad
in
xchg
stc
add
call
pop
or
mov
xchg
insl
mov
sbb
into
lock
add
mov
lcall
push
shll
jp
jecxz
insb
adc
sbbb
jecxz
leave
dec
pop
inc
xor
stos
push
das
inc
jg
outsl
sbb
mov
mov
fisubs
pushf
out
push
adc
xor
sbb
shl
nop
sbb
dec
jecxz
pop
adc
jne
scas
and
call
jbe
jbe
cmp
dec
mov
xor
insl
add
ds
lds
jb
fmulp
jae
or
call
or
popf
fldlg2
test
push
push
mov
repnz
mov
lods
inc
xor
jne
mov
sub
push
les
mov
mov
add
inc
xor
test
lret
loop
and
orb
imul
pop
or
nop
and
jge
ss
adc
sub
ss
push
orl
mov
loope
in
orb
std
push
mov
jge
dec
negb
sub
dec
inc
or
in
and
xchg
leave
or
xchg
repz
lahf
jl
jnp
cmp
loopne
int
lret
repz
adc
test
cmp
mov
addr16
pop
sub
add
jp
jl
cltd
cs
cmp
clc
and
push
scas
adc
xor
mov
sbb
es
push
out
jne
mov
cmc
or
das
cmp
outsl
xchg
adc
xorb
sbb
lea
rol
add
dec
fs
and
and
ret
sub
inc
push
incb
leave
imul
sbb
sub
xor
cli
fldl
data16
mov
cmpsl
dec
push
dec
xor
das
and
loope
int3
andb
shrl
xchg
xor
sbb
mov
in
cmp
inc
fwait
stc
mov
mov
test
insb
mov
test
in
jnp
ja
adc
xchg
outsl
xor
pop
push
or
xchg
jnp
sarl
push
aas
rorl
fcmovne
xchg
xor
cli
push
jmp
adc
stos
inc
xor
in
push
inc
adc
arpl
dec
cs
xchg
push
scas
xchg
aad
sbb
pop
cmp
fmuls
mov
cmpsb
inc
popf
icebp
or
push
insb
shr
pop
gs
cmp
hlt
sbbl
xchg
clc
mov
loopne
loop
sub
xchg
cs
mov
bound
push
sub
arpl
je
sarb
fisttps
es
mov
fcomp
jns
adc
cmp
test
inc
mov
leave
push
xchg
mov
orb
add
call
or
pop
movups
xchg
jmp
mov
dec
cltd
test
rolb
sahf
push
mov
push
mov
aas
push
subl
insl
in
mov
dec
jno
dec
cmpsl
dec
daa
sbb
shl
aad
push
lock
push
jecxz
adc
push
xorl
aad
jb
inc
and
inc
mov
rcrl
enter
sbb
and
add
mov
lds
and
das
xor
dec
dec
push
cmpsb
xchg
sub
jne
xchg
sbb
loopne
nop
lock
jmp
xchg
fidivrl
mov
add
mov
pop
or
in
lds
sti
repz
cmp
nop
out
or
push
loop
mov
loopne
push
mov
ss
pop
dec
ficoml
jmp
shrb
movsl
mov
fs
fmull
int3
sarl
add
mov
fcompl
mov
xchg
mov
mov
pop
push
sbb
jb
mov
xor
inc
lret
cmp
dec
dec
cmp
in
insl
adc
cmp
cmc
xchg
in
sub
sahf
xlat
push
cmpb
push
movsl
jmp
push
loop
mov
xlat
ret
fwait
lods
imul
fistpl
cmp
cmp
cmp
sti
mov
outsb
sbb
pop
push
sub
test
jl
mov
xor
mov
ljmp
cmpl
out
jne
stos
and
and
outsl
mov
cmpsl
cld
cmp
pop
sbb
loop
adc
dec
mov
bound
jne
fs
or
fs
adc
cmp
imul
and
call
jp
aas
mov
loop
add
add
outsl
fstl
fildll
sbb
sub
enter
cmpsb
out
mov
jns
out
pop
dec
aas
scas
xor
or
ds
stc
icebp
pop
enter
inc
dec
out
xchg
adc
push
jns
fcomi
test
cli
sbb
lea
xorl
or
mov
push
bound
and
xor
and
push
lret
add
jmp
pop
inc
outsb
arpl
cli
mov
jp
jnp
sbb
dec
adc
ds
rorb
jae
lea
jae
pusha
sbb
mov
lret
lea
xchg
mov
stos
adc
add
sahf
adc
mov
dec
push
sub
into
jns
repz
mov
push
inc
xchg
push
nop
rcll
jg
jae
sbb
or
mov
jns
ja
out
fldl2t
xchg
xchg
enter
dec
xor
xor
mov
in
int3
test
add
scas
add
mov
mov
pop
or
inc
call
pop
xlat
inc
shl
sub
dec
fimull
sub
inc
sahf
adc
addr16
mov
pop
or
xchg
adc
neg
mov
cmp
pop
jle
dec
sbb
sbb
sbb
pop
aaa
sarb
int
es
and
jle
xor
pop
and
in
repz
jle
cmpl
lds
add
pop
sbb
sub
mov
jae
push
jns
pop
mov
movsl
mov
xor
jmp
stc
mov
push
mov
loopne
sbb
cmpb
mov
subl
das
xlat
or
rolb
cmp
sbb
push
idivb
out
push
fucomi
loop
cmp
cmp
js
cmpsl
mov
fiadds
push
orl
testl
int3
or
push
fisubl
push
pop
lods
and
sub
aas
lds
mov
ja
adc
fdivs
fstps
roll
outsb
dec
adc
fmull
stos
mov
mov
ljmp
leave
xor
sub
addr16
fidivl
mov
jecxz
add
mov
insl
pop
jmp
fcoms
mov
inc
push
daa
add
mov
out
in
ljmp
fs
inc
aaa
imul
sub
in
xchg
in
xchg
sub
test
xchg
int
loopnew,pn
mov
cmpsl
inc
test
fnstcw
out
adc
in
test
lock
ja
rol
scas
insb
sbb
jmp
imulb
jl
push
fildll
aas
out
inc
or
stos
mov
les
in
adc
and
testb
aam
pop
jns
sbb
les
ss
outsl
add
and
xchg
fdivp
xor
bound
push
lds
fwait
jecxz
jg
xchg
jle
or
std
xor
sub
mov
aaa
inc
pop
loop
shrl
sub
aad
je
idivl
fcoms
leave
adc
cld
dec
cli
cmp
lods
ret
push
frstor
inc
add
mov
es
popf
daa
adc
cmp
es
cmc
xlat
cmpsl
mov
xchg
std
sub
ja
in
mov
jmp
aaa
in
arpl
adc
or
sbb
repnz
dec
popf
add
mov
push
and
xchg
and
cmp
sub
cmp
repnz
mov
std
mov
rcl
jno
xchg
lods
and
xor
jbe
jns
mov
xchg
inc
jbe
jmp
jmp
iret
jns
dec
jb
aaa
xchg
or
and
inc
push
xor
iret
por
or
nop
outsb
push
jae
and
repnz
out
das
jae
xlat
add
test
inc
sbb
push
leave
out
and
adc
or
insb
sbb
xchg
push
jge
cmpsb
cmp
outsb
adc
mov
fistl
sub
out
or
arpl
aas
fisttps
or
insb
cmp
push
mov
enter
pusha
push
test
hlt
pop
loop
arpl
mov
jnp
outsb
push
bound
mov
arpl
jecxz
dec
icebp
inc
roll
leave
xchg
pop
lcall
xchg
jnp
mov
jnp
pop
mov
mov
adc
pushf
xchg
jnp
in
fiaddl
hlt
adc
xlat
rclb
push
mov
fistl
fildl
mov
cmc
subl
dec
mov
in
adc
push
in
movsl
int3
push
mov
fnstenv
sub
cwtl
bound
mov
push
div
pop
jge
and
inc
add
into
xlat
push
mov
in
cmp
imul
cmp
push
js
and
ror
sbb
push
rclb
xor
adc
xchg
inc
mov
or
sbb
repz
jecxz
inc
out
and
out
out
jbe
add
jmp
je
push
jge
scas
fs
push
mov
mov
mov
sub
les
add
pop
aam
and
and
fidivl
dec
leave
xchg
stos
jne
and
je
mov
enter
movsl
xor
push
int
jecxz
pop
stc
mov
out
dec
inc
mov
addr16
pop
in
push
out
lds
adc
rclb
jecxz
xor
aad
inc
bound
or
adc
je
decl
movl
sbb
lret
fldt
aad
adc
mov
ljmp
in
fiadds
add
in
mov
xchg
scas
rcrl
fs
es
les
sub
pop
inc
cmp
pcmpeqw
jg
test
pop
arpl
push
iret
fisubrs
pop
sub
stc
icebp
enter
repz
or
dec
add
inc
jmp
jge
push
andl
mov
ficoms
dec
sub
iret
sub
or
add
and
ret
mov
pusha
sbb
mov
or
lret
pop
mov
aam
rolb
jae
ds
inc
xchg
scas
mov
data16
push
int3
cwtl
pop
xchg
cmc
mov
fst
in
shrb
jge
jge
push
fcoms
int
mov
aas
mov
adc
jmp
cltd
rolb
rclb
addr16
mov
or
movb
lret
sbbb
jmp
push
xor
inc
loopne
fiaddl
or
stos
lret
dec
stc
and
les
push
xor
sti
cwtl
xchg
clc
sbb
dec
xor
test
test
inc
or
lock
pop
mov
inc
sbb
mov
inc
xchg
mov
xor
jb
xchg
and
lea
adc
pop
movsb
fsubs
sbb
es
data16
inc
nop
jno
int3
clc
ja
cmp
fwait
movsb
repz
gs
mov
divb
in
les
out
test
inc
and
mov
shl
pop
dec
sub
push
sbb
and
loop,pn
ret
add
push
sub
push
fdivrs
popf
outsl
cmp
jp
xchg
cmp
mov
sahf
inc
lret
cld
lret
xchg
jecxz
xchg
push
in
mov
add
pop
out
hlt
push
cmp
sbb
mov
movsl
push
or
cs
scas
aad
subl
aam
jbe
push
pop
mov
push
xchg
xchg
sbb
cmpsb
xor
out
jle
xlat
cmp
mov
negb
pop
lret
in
push
ss
imul
sbb
stos
aaa
add
rol
cmpsl
add
cmpsl
clc
add
xor
sub
mull
mulb
cmpsl
push
daa
xchg
lret
pop
test
lahf
hlt
nop
clc
in
mov
fistps
outsl
inc
sub
in
rcl
mov
sbb
stc
lret
xor
js
popf
xor
add
imul
xchg
xchg
hlt
adc
lds
jmp
mov
add
adc
mov
pop
movsb
psubsb
mov
rclb
mov
int
in
shll
inc
inc
and
pop
add
stc
inc
popf
lahf
xchg
or
js
adc
xchg
popa
icebp
mov
into
pop
test
fidivl
mov
xor
cmovge
out
out
and
pushw
scas
inc
push
lock
dec
mov
push
inc
mov
ss
push
push
pop
dec
jae
push
mov
je
movsl
add
and
or
push
rorb
ss
lds
test
popf
pop
je
outsb
repz
hlt
mov
loope
mov
dec
dec
dec
mov
mov
enter
sbb
jmp
shrb
imul
mov
xor
xchg
cmp
shrb
xor
cbtw
inc
sub
mov
int
f2xm1
into
in
test
sub
shlb
dec
cli
outsl
outsb
sub
xchg
and
mov
lock
punpckhdq
xor
add
add
pop
int
pop
es
mov
pop
movsl
xchg
dec
subl
dec
and
or
and
cmp
xor
xchg
add
sub
das
movsl
stos
sarl
shl
ss
ret
inc
mov
or
xchg
and
jns
cmp
scas
shrl
push
sbb
cmpsb
fwait
jge
shrl
and
inc
xor
outsb
outsb
andb
push
mov
les
je
mov
outsb
pop
stc
leave
mov
pop
and
sbb
jae
fwait
shll
leave
add
testb
and
or
add
xchg
mov
adcl
fimull
pop
js
fimuls
dec
jmp
les
push
outsb
xchg
test
cmp
out
clc
fbld
int3
jmp
int3
adc
jl
xor
hlt
popf
push
pop
xchg
shll
cmc
insb
shr
xchg
dec
shll
xor
sub
in
xor
stc
cltd
jnp
sub
cmp
rolb
inc
shl
aas
or
cmpsb
mov
push
pop
mov
jmp
mov
sbb
mov
add
or
repnz
ljmp
rcrl
cmp
inc
add
add
imul
add
and
cli
dec
repnz
or
mov
out
in
notl
daa
insb
mov
mov
dec
dec
sub
imul
xor
fwait
sub
xor
dec
jae
inc
mov
lahf
scas
mov
outsb
jns
inc
aaa
in
je
xor
or
sub
aas
out
mov
cmpsb
jp
gs
xchg
sti
pop
and
repnz
adc
ret
mov
inc
pop
jl
out
repnz
popf
sub
mov
mov
jnp
rcl
inc
xchg
mov
add
push
xor
mov
fisttpll
frstor
and
sahf
aas
loopne
mov
ret
in
mov
cmpsb
lea
mov
add
ret
addr16
mov
sub
adc
mov
and
sbb
adc
aas
cmp
ret
in
fnstenv
mov
in
and
ja
cmpsb
jecxz
cli
imul
sbb
pop
bound
dec
sbb
dec
mov
pop
or
sbb
fidivrs
push
or
lret
pop
mov
inc
xlat
rcrb
sbb
push
stos
cmp
inc
enter
aas
jge
or
adc
cld
inc
adc
xchg
and
jge
dec
aas
push
enter
mov
in
fadd
or
cmp
add
jle
sbb
cmpsl
repnz
jbe
adc
xchg
pop
add
imul
data16
or
pop
cmpsb
jmp
out
xchg
xchg
adc
repz
jp
jl
pop
cmpsl
dec
jns
or
pop
nop
jbe
mov
pop
cld
inc
cli
rclb
lds
push
and
sbbb
in
sub
sub
sub
mov
add
dec
push
lea
ja
cwtl
mov
sarl
insb
pop
in
push
xchg
mov
out
mov
out
aad
pop
ss
or
cmpsb
or
mov
push
mov
out
pop
mov
lret
cmp
and
cmp
fldln2
fnstenv
dec
cmp
xchg
mov
gs
jp
mov
test
mov
xor
cmpsb
shll
hlt
inc
outsl
cwtl
mov
lods
adc
arpl
xchg
test
inc
mov
in
jge
mov
push
mov
and
popa
ss
fisttpl
push
mov
mov
and
ja
in
inc
cld
inc
jmp
jnp
nop
jns
sbb
notb
testl
out
lret
aam
and
das
sbb
xchg
mov
fiadds
pop
jbe
jbe
loopne
lahf
je
xchg
xchg
add
fmulp
or
jp
push
jo
mov
pop
repz
push
scas
add
outsl
test
cmp
repnz
hlt
stc
sub
into
stos
popa
in
imul
jb
jb
adc
sarb
and
jmp
pop
pop
sbb
fldt
pop
sbb
adc
dec
arpl
clc
inc
nop
mov
enter
jle
mov
jl
add
and
lods
icebp
add
test
bound
fists
jnp
mov
xchg
dec
mov
addb
pop
fs
js
jae
ljmp
int
sti
mov
push
divl
std
mov
pop
in
pop
mov
icebp
test
sar
sti
stos
js
sub
cmp
movsl
and
shl
dec
sbb
popf
sbbl
int
add
fs
dec
les
jb
and
ja
lods
jmp
sbb
jnp
rol
xchg
sahf
sbb
idiv
mov
sbb
sub
in
xchg
mov
frstor
push
iret
push
xor
adc
ret
jnp
mov
adc
insl
das
mov
cld
push
fwait
mov
inc
nop
inc
inc
ljmp
out
ret
popa
fisubs
ficompl
adc
or
jne
es
cli
test
stos
jne
lock
mov
xor
pextrw
sub
shr
outsl
fptan
sbb
adc
push
mov
sahf
pop
xor
sub
addr16
loopne
hlt
mov
aad
cmp
lods
xorl
mov
movsb
xor
divl
jmp
loopne
inc
nop
stos
push
and
or
repnz
stos
pop
xor
jge
insb
adc
or
jbe
fwait
mov
stc
hlt
xor
stos
int
sub
loop
sbb
jmp
ss
insl
push
adc
adc
xchg
shr
inc
pop
js
push
or
ja
out
mov
mov
das
out
mov
lods
inc
stc
add
xor
cli
cmp
pushf
mov
push
js
repz
sahf
inc
leave
xchg
xchg
adc
adc
outsb
ljmp
cwtl
inc
addr16
jp
inc
fimuls
notl
repz
add
sarl
xor
add
dec
xchg
fadds
jl
fidivl
jno
mov
mov
lea
xchg
mov
mov
mov
inc
cmp
fadds
in
jno
xor
stos
test
sub
pusha
test
pop
mov
jae
daa
or
jno
pushf
add
imul
adc
sti
mov
pop
les
or
sub
pop
pop
jecxz
hlt
jle
pop
mov
mov
int
insb
mov
lret
mov
mov
dec
inc
and
pavgb
add
xor
sub
adc
shrb
pushf
leave
xchg
and
inc
and
in
mov
popa
mov
push
insb
adc
sbb
xorl
mov
aad
lahf
sub
mov
dec
scas
mov
push
add
xchg
lods
shl
sbb
aaa
xor
jb
xchg
inc
dec
add
mov
bound
jne
outsb
dec
push
adc
test
add
adc
mov
adc
jmp
inc
mov
mov
in
push
push
aad
jb
xchg
into
xor
push
js
xchg
ja
out
mov
cmc
pop
xchg
es
push
adc
testb
adc
pop
cmc
adc
dec
lret
daa
sarl
dec
jl
inc
add
ret
cmp
jb
jne
mov
std
iret
sub
jmp
inc
sub
jnp
ret
pop
jno
and
or
inc
cmpsb
push
ja
mov
inc
inc
stc
incl
xchg
cmc
cmp
adc
rolb
ficomps
jnp
pop
ljmp
add
outsl
jp
out
jge
push
adc
scas
or
cmp
cmc
leave
pop
loope
jmp
mov
imul
into
mov
sub
imul
xchg
pop
mov
inc
inc
mov
cs
xlat
xchg
push
mov
pop
out
jae
jmp
aaa
test
xchg
lahf
in
push
leave
cmp
ja
outsl
pop
fsub
movsb
in
mov
mov
std
adc
adc
leave
xchg
in
popa
adc
outsl
gs
lods
std
out
jb
sahf
adc
mov
insb
cmc
mov
pop
jp
push
mov
out
push
lret
inc
pusha
xor
mov
mov
push
push
int
push
pop
pandn
dec
jno
inc
xchg
mov
js
bound
fs
jb
pop
fwait
in
lea
xchg
sahf
jns
sub
sbb
pop
shrb
mov
mov
pop
dec
xchg
test
cwtl
jmp
and
adc
jb
sub
dec
or
outsl
cmp
push
test
pushf
fidivrl
ds
adc
nop
jmp
repnz
fisttps
into
pop
sti
inc
jmp
out
pop
jo
or
sbb
push
cmp
into
rcrl
mov
xor
jl
sbb
or
xor
adc
mov
jno
mov
daa
ret
push
arpl
ret
cmp
sbb
jo
jmp
fsubrl
dec
inc
out
nopl
jge
xchg
daa
jg
inc
mov
mov
xor
in
arpl
sbb
xchg
dec
jno
xchg
popa
mov
push
push
fidivs
cmp
into
xlat
add
mov
repz
mov
push
xchg
pop
adc
int
pop
xchg
rcrb
xor
jno
decb
icebp
ss
popf
loop
push
in
inc
shll
in
inc
aam
stc
sub
sub
leave
lret
jbe
pop
ret
daa
push
notb
iret
xchg
cli
icebp
pop
jecxz
pop
dec
inc
jbe
push
xchg
adcl
loopne
jbe
jb
movq
roll
stc
or
xlat
in
aaa
xchg
xor
inc
movsl
add
ljmp
mov
movsb
pop
xchg
std
adc
ror
lcall
data16
pop
testl
outsb
or
ror
fxch
jnp
or
leave
idivb
stc
lcall
jo
pusha
pop
fsubs
in
add
outsb
scas
add
insl
fildll
mov
lahf
mov
rcrl
or
in
enter
ds
mov
in
and
cltd
dec
pop
pop
je
jo
jl
popa
xor
jno
scas
hlt
xlat
shr
and
js
cmp
or
je
dec
shl
pop
ret
xor
xchg
sub
loope
loopne
pop
xor
xor
les
in
insb
into
imul
cmp
inc
aaa
push
lret
dec
ljmp
inc
xchg
adc
jo
dec
ret
aam
push
pop
mov
into
sbb
sub
movsb
mov
stc
or
sbb
leave
lret
nop
in
in
sbb
outsb
pop
sbb
sahf
cmp
dec
ret
pop
addr16
les
out
sarl
jns
lahf
mov
jp
leave
adcb
xchg
push
jne
dec
adc
clc
mov
xor
addr16
idivb
and
adc
in
mov
add
lods
aas
xorb
in
ljmp
insb
insl
mov
jnp
in
pop
or
jl
in
push
sarl
and
mov
push
jl
and
jbe
sbb
in
jl
add
addr16
in
push
push
js
rclb
dec
mov
lahf
daa
sbb
scas
push
addr16
push
push
push
sbb
jne
jg
sub
mov
imul
pop
int
insb
repz
out
inc
add
insb
pop
mov
hlt
mov
adc
or
popf
mov
iret
rorl
xor
loope
sbb
adc
or
testl
jp
dec
dec
inc
data16
out
inc
aas
inc
popf
cld
mov
nop
stos
fisubrl
repz
sub
sti
aas
pusha
stos
mov
leave
jbe
pop
xchg
cld
ja
sti
mov
test
xchg
incl
loop
daa
mov
pop
loop
aaa
in
xchg
mov
adc
mov
adc
pop
mov
push
stc
into
mov
xchg
stc
into
mov
inc
scas
dec
mov
int
xor
orl
xchg
add
popf
mov
cmp
mov
xlat
lcall
xor
xchg
ja
ss
repz
sub
dec
dec
xchg
or
rcrl
cmpsb
fidivrl
sub
push
divl
mov
push
repnz
push
data16
cmp
icebp
pop
fisubrl
pop
lret
ds
lods
inc
dec
dec
mov
cmp
cmp
mov
iret
rcrb
push
mov
or
std
scas
sub
addl
mov
mov
adc
mov
cmpl
or
or
stc
jno
lods
outsl
leave
xchg
das
jb
pop
push
mov
rolb
popa
adc
ja
imul
ror
fs
sbb
dec
outsl
clc
or
sbb
into
jg
add
popa
xchg
movsb
gs
adc
insb
arpl
in
push
xor
in
mov
fwait
and
ds
push
mov
adc
daa
sub
outsb
cmp
iret
xchg
sarl
leave
sub
push
inc
jle
je
mov
lret
cmp
dec
dec
nop
mov
addr16
xchg
vmovmskps
je
mov
rol
pop
icebp
fsub
push
out
popf
or
mov
pop
ss
dec
jae
and
mov
push
ret
cltd
stos
mov
jge
adc
je
and
push
addl
add
js
push
mov
stc
sub
lret
mov
push
jno
sbb
shll
and
adc
or
cs
and
cmpsb
mov
inc
sbb
adc
inc
xchg
mov
in
stos
test
sahf
mov
jns
lret
les
sbb
mov
fimull
inc
pop
movsb
xor
std
cltd
sahf
jg
mov
inc
aas
sti
mov
dec
lods
jo
gs
ret
push
sbb
roll
addr16
fdiv
sub
inc
lcall
cmp
lahf
shr
in
dec
stc
dec
pop
push
mov
xchg
jnp
das
and
cli
adcb
cltd
xor
adc
adc
popl
xchg
cmp
ljmp
push
mov
popf
sub
loop
sbb
clc
test
push
mov
pop
adc
adc
jmp
dec
xchg
shl
add
inc
cmpsb
shll
and
call
mov
int
adc
inc
outsb
faddp
ja
imul
lret
je
inc
push
pop
cmpsb
psadbw
adc
lea
cmpsb
adc
sbb
inc
adc
jecxz
inc
pop
insb
push
mov
inc
shr
adc
add
mov
and
repz
inc
repnz
or
loop
inc
sub
ret
andb
cmp
test
xchg
dec
adc
cmc
psrlw
sbb
gs
cltd
or
xchg
and
jbe
jbe
sahf
mov
dec
sbb
jnp
sub
adc
cmpsb
push
xchg
fstl
inc
leave
cmp
lahf
pcmpeqb
mov
clc
jbe
cmp
mov
fmuls
aas
push
sbb
idivb
pop
jae
mov
mov
out
int
fidivrs
mov
cmp
pushfw
adc
vmovhps
mov
sahf
and
mov
lret
std
jne
inc
rcrb
cwtl
mov
dec
sub
fbld
adc
and
inc
mov
or
push
xchg
repnz
mov
sti
pop
hlt
push
bound
call
andl
pop
andl
add
xchg
lcall
jg
jg
xor
mov
mov
data16
mov
add
insl
pop
push
fldt
outsl
out
arpl
ficoml
jmp
jne
xchg
adc
popf
lret
mov
es
fisubrs
stos
dec
jmp
cmp
dec
sub
testl
ss
fiadds
cmpsb
daa
lcall
cmp
lret
push
sahf
mov
or
data16
mov
inc
int
add
sbb
push
fwait
adc
sti
cmp
rol
inc
xchg
xor
pop
xor
ds
out
lea
sbb
adc
xchg
sub
loopne
mov
out
cli
rcll
adc
ja
sbb
xor
mov
imul
pop
imul
mov
decb
sbb
lret
scas
xor
inc
or
xor
and
out
mov
jle
push
mov
leave
sub
pop
dec
mov
shrl
lods
int3
lds
hlt
in
repz
int3
insl
jge
rorb
dec
cmpl
je
mov
scas
out
mov
sub
add
push
loope
testb
in
das
mov
imul
outsb
es
xor
and
test
insl
xchg
sbb
iret
pop
mov
push
sahf
mov
sbb
xor
lahf
scas
inc
cwtl
dec
sub
adc
sub
xor
outsl
addr16
hlt
or
lcall
fadd
dec
sub
test
pop
loope
ds
or
cmp
aam
push
rorb
and
add
mov
daa
inc
repnz
dec
jmp
ja
lock
insl
xbegin
xrelease
jb
scas
mov
outsl
or
arpl
sbb
cmp
lods
cwtl
sub
lcall
sbb
or
movsl
xor
lock
je
jg
dec
push
jo
pop
clc
sbb
je
scas
and
mov
add
mov
or
adc
push
mov
or
nop
inc
add
cmp
fwait
lds
sti
push
enter
mov
repz
notl
rcr
adc
and
insl
or
fistpl
jae
arpl
aam
jge
cmp
bound
aas
cld
ret
or
xor
lea
jmp
mov
inc
or
jmp
xchg
popa
es
leave
sub
xor
scas
jge
pop
xor
mov
xor
xchg
mov
or
xchg
jmp
inc
sub
iret
sbb
push
mov
xchg
fsub
rcrl
test
roll
push
scas
aam
push
fcmovb
push
rcr
rep
push
cmpsl
pushf
lods
test
push
gs
xchg
and
push
mov
loope
mov
loopne
cmp
or
shr
std
mov
dec
gs
adc
cmpsb
scas
sahf
xor
jmp
pop
dec
aas
mov
push
mov
fisubrs
mov
cmp
cmp
jg
mov
xor
cmp
pusha
idivb
pop
lret
ja
fnstenv
fcoms
inc
dec
lret
call
mov
dec
lea
and
int3
add
jle
jl
dec
loop
mov
ds
mov
dec
or
dec
cmp
shll
into
ret
pop
push
lret
call
sub
push
mov
test
xchg
aas
pop
jne
dec
push
cmp
insl
or
push
lcall
cmpsl
in
sbb
or
mov
ljmp
nop
push
xchg
jae
jno
and
sub
ret
adc
call
push
sbb
int
sub
cmp
add
je
das
sbb
stc
jmp
mov
cmp
sub
mov
imulb
aam
aas
dec
push
or
cmp
push
into
pushf
cli
and
imul
inc
mov
pop
mov
bound
sub
xchg
aaa
xor
or
aas
daa
adc
push
popa
sub
out
dec
inc
mov
enter
je
dec
sbb
fldenv
dec
mov
out
cltd
lahf
int3
jno
push
jno
aam
outsl
fcmove
sub
ss
xor
and
popf
mov
shr
lcall
lock
bound
mov
or
cmp
pop
jmp
imul
pop
sbb
rcrl
icebp
jle
push
pop
je
lock
movups
mov
mov
adc
cmp
insb
movzwl
icebp
pop
jno
cmp
addr16
lahf
cmpsb
filds
fucom
pop
dec
push
pop
inc
push
sub
xor
insl
test
int3
insl
mov
or
xor
jmp
cmp
mov
mov
adc
dec
mov
das
push
adc
xorl
pop
sbb
iret
std
mov
xchg
add
enter
and
aaa
cmp
jae
xchg
or
pushf
add
sbbb
cs
push
xchg
gs
stos
iret
adc
jge
ret
and
mov
jecxz
sub
jge
mov
push
out
jno
add
out
cmp
sahf
cmpsl
daa
clc
fucomi
addr16
mov
jecxz
dec
repz
lods
lds
je
fcomp
hlt
ret
pop
or
adc
dec
arpl
insl
xlat
dec
mov
push
imul
ljmp
mov
mov
hlt
in
sub
imul
rcrb
lock
pushl
sub
pushf
cmp
jle
call
xor
loop
adc
ds
aad
mov
fstps
out
ljmp
mov
sub
andl
nop
inc
sti
push
xchg
loope
decl
insb
inc
fisttps
and
and
sub
lcall
sub
enter
es
outsb
mov
inc
arpl
into
or
fimuls
add
das
mov
push
sbb
cwtl
and
mov
or
mov
repz
jg
jge
xor
inc
inc
movsb
mov
loop
imul
inc
mov
xchg
xor
jg
mov
sbb
sahf
call
ss
and
fcmovnb
xchg
popa
test
or
mov
js
movsb
cli
int
adc
loopne
stc
fstpl
divl
adc
insb
jbe
lods
add
pop
loopne
or
pop
fldpi
dec
hlt
sti
dec
icebp
or
mov
lret
xchg
arpl
inc
xor
scas
gs
jno
outsb
mov
cmpsl
xchg
fstps
mov
jmp
in
cli
adc
adc
jp
adc
add
dec
adc
sub
sbb
xchg
xor
or
mov
pop
pop
pop
xchg
cmp
ret
sahf
inc
sbb
cld
sub
push
sub
mov
inc
add
ja
aas
xchg
jmp
popf
sub
jmp
sbb
dec
mov
cmc
cmp
xchg
in
add
hlt
cmp
repnz
mov
outsb
into
leave
inc
inc
mov
sahf
sub
stos
lods
xor
add
inc
inc
dec
stc
fldcw
sbb
je
cmp
lcall
adc
dec
ds
xchg
or
ds
popa
bound
xchg
jnp
ds
mov
aad
sarl
loopne
js
insl
sub
sti
cltd
pop
outsl
popf
lods
cmc
in
add
jmp
push
mov
test
mov
mov
dec
inc
repz
cli
clc
icebp
aas
mov
pop
hlt
push
jb
movsb
jnp
mov
es
dec
sub
pop
cmpsl
cwtl
mov
insl
daa
filds
jge
mov
aaa
icebp
mov
leave
push
jo
cmp
mov
aad
xchg
dec
push
inc
faddl
inc
out
jg
jg
add
andb
test
dec
adc
pop
movsl
sbb
cmp
add
dec
gs
add
fs
repz
jmp
mov
pop
xchg
push
mov
jo
fildll
jbe
dec
les
dec
int3
hlt
sub
aam
out
ja
incl
mov
dec
mov
ljmp
push
sub
call
mov
and
mov
js
xlat
pop
cmpl
fistpl
lock
in
ret
das
sbb
push
push
or
mov
fstps
stos
loop
imul
jl
sarl
or
imul
mov
sbb
lret
xchg
xchg
dec
shl
jmp
pop
push
clc
iret
mov
les
mov
fcomps
scas
push
das
fucom
int3
jp
add
mov
push
mov
add
or
jne
jle
stc
sub
outsl
cmp
push
mov
xor
lods
shrl
push
jno
test
movsb
push
and
add
mov
lret
incb
arpl
lods
jnp
dec
pop
sub
adc
pop
hlt
jno
inc
aad
iret
cwtl
stos
xchg
pop
rolb
pop
inc
pusha
jne
xchg
icebp
movsb
cmpsb
pop
into
fs
iret
mov
hlt
or
jae
mov
mov
sub
hlt
ja
lods
pop
ja
sub
sub
pop
mov
jg
mov
dec
sbb
or
popf
dec
cli
adc
cmpsb
enter
add
and
aad
aaa
pmullw
fldt
mov
icebp
mov
scas
in
push
inc
inc
sbb
pop
mov
sahf
push
das
mov
hlt
les
aad
cli
jle
scas
sarl
pop
mov
ja
pop
jp
pop
inc
jae
push
clc
nop
in
lods
pop
adc
sub
xor
pusha
adc
pop
rclb
in
jae
or
push
movsb
lret
adc
mov
xchg
push
int3
rcrl
ret
mull
ret
jmp
xchg
xchg
aad
cs
pop
insl
inc
ja
dec
popf
inc
cmp
lea
repnz
dec
push
sarl
fwait
cmp
xchg
movsl
call
inc
sbb
test
adc
fcom
mov
dec
ljmp
adc
ret
imul
in
mov
mov
push
sbb
inc
inc
xchg
inc
or
pop
shl
outsl
bound
sbb
mov
insl
pop
sbb
add
sbb
mov
inc
cli
std
sub
and
pushf
jmp
push
ficoml
jae
shll
ds
sub
mov
mov
sub
pop
mov
and
clc
dec
adc
mov
push
ja
cmp
cmp
xchg
in
cmpsb
es
lahf
mov
mov
outsb
iret
jo
fnsave
jge
dec
or
add
sbb
rcrl
popf
mov
mov
test
pop
mul
clc
dec
mov
movl
adc
xchg
in
xlat
jecxz
xchg
movsb
sahf
cmpb
push
jge
mov
out
inc
push
jg
std
mov
pop
fcmove
fwait
test
push
push
pushf
pop
mov
jne
das
adc
aaa
dec
mov
push
sbbl
cmc
sarb
out
cmp
or
xchg
add
xchg
sbb
dec
adc
jo
fildl
mov
in
mov
jge
popf
jne
mov
xor
outsb
sub
xor
cmp
aam
pop
dec
aad
data16
packuswb
cmp
call
adc
cmp
cmpsl
add
int
ss
mov
or
insb
push
loop
push
bound
or
sti
decb
and
repz
enter
das
mov
ret
fildll
aam
xchg
pop
sub
jge
cmpsb
xor
pop
sbb
out
ficoms
lods
xor
ret
inc
pop
mov
loopne
push
fcmovnu
bound
dec
clc
lods
aam
jnp
sub
ret
fistps
insl
mov
call
movsl
xchg
inc
ja
iret
shrb
pop
mulb
loopne
rcrb
jecxz
add
pop
xchg
xor
or
int
mov
ret
test
cld
lahf
rolb
pop
sub
imul
or
out
ficoml
add
clc
jne
or
pop
cmc
dec
inc
imul
xor
out
movsl
mov
push
mov
shr
sbb
push
jge
push
outsb
xchg
in
adc
loop
ficoml
inc
add
leave
sbb
mov
sub
testb
filds
ja
sahf
mov
lret
loop
pushf
mov
adc
add
fnstsw
cmpsb
testb
divl
xchg
dec
cmc
inc
dec
jp
icebp
xchg
inc
push
adc
jp
add
in
add
sarb
sub
js
xor
xor
cwtl
or
dec
ret
ss
arpl
imul
xor
add
popf
cmp
repz
xchg
imulb
repz
xorl
fstps
stos
adc
or
xor
push
mov
bound
cmp
das
sub
sbb
sti
sbb
dec
xchg
imul
outsb
mov
dec
imul
fwait
icebp
inc
stos
bound
mov
push
popf
pop
push
xlat
xchg
pop
mov
push
jp
ljmp
cmp
xchg
cli
ds
fwait
aaa
lret
daa
add
es
mov
cmp
pop
xchg
and
lahf
daa
inc
jg
test
adc
shrl
push
cmp
xchg
cmp
shrl
gs
pop
pop
dec
pop
mov
aas
loop
pop
decb
hlt
xor
mov
and
xor
xchg
repz
pop
sbb
fwait
xchg
xor
add
push
xor
cmp
repz
sbb
sbb
and
push
xchg
push
or
cmp
test
xlat
push
cltd
pop
decl
xchg
ja
mov
jg
sub
imul
xchg
pop
push
xor
popa
fs
into
dec
add
sbb
add
push
sahf
inc
ret
push
sbb
mov
add
dec
in
in
pop
cmc
arpl
mov
mov
sub
roll
and
inc
xor
add
pop
je
sti
jns
mov
jecxz
pop
dec
pop
insl
jge
sub
xor
icebp
cmp
pop
xchg
push
std
dec
insb
fiadds
cmp
cmpsl
out
cmpl
shlb
xor
push
ret
push
fistl
cltd
cmc
fists
cmc
ret
add
and
adcl
sbb
loopnew
adc
add
cmpb
push
lock
mov
xchg
sbb
pushf
mov
mov
mov
arpl
mov
sbb
dec
test
xor
hlt
ret
xor
sbb
fcom
sbb
pushl
xchg
in
jecxz
lea
in
mov
shrl
int3
push
or
xchg
std
out
pop
xchg
ljmp
cltd
popa
xor
pop
mov
pop
mov
adc
dec
or
clc
pop
sub
inc
popa
sbb
test
inc
shr
test
movsl
adc
mov
nop
pushf
enter
mov
fdivrl
mov
add
pop
adc
nop
icebp
sahf
in
loopne
stos
add
adc
lcall
daa
pop
push
test
or
cmp
in
fcomp
cmc
pop
dec
add
sbb
adc
push
mov
cmc
test
insl
xchg
icebp
mov
insb
decl
xor
push
or
xchg
cmp
stos
lea
fnop
insl
lods
push
push
pop
and
outsl
add
stc
pop
push
dec
adc
outsb
cmp
call
ss
divl
push
mov
fimuls
and
jae
pop
das
icebp
or
test
xchg
jg
sub
mov
adc
push
sbb
mov
dec
daa
push
bound
mov
inc
add
loop
incb
rcr
mov
mov
inc
int3
ds
adc
mov
push
es
stos
aam
enter
jge
outsl
mov
sbb
mov
arpl
cmp
mov
lods
stc
adc
fs
mov
jne
adc
sub
and
test
mov
out
mov
iret
arpl
les
rorl
and
xchg
or
insl
decl
shll
xor
scas
xor
fnstcw
lods
dec
sbb
int
shlb
lret
ficoms
mov
insl
in
mov
mov
inc
mov
pop
cmc
in
push
mov
cld
cmpb
inc
scas
mov
mov
icebp
aam
shl
aas
jb
dec
fbld
flds
inc
fwait
or
xchg
dec
pop
stc
or
inc
mov
sti
imul
in
push
rcrb
mov
push
add
inc
sbb
xchg
psllq
jmp
push
jl
and
sahf
jbe
fsubrp
movsl
dec
sbb
cli
mov
cmp
je
xor
pop
inc
xor
adc
or
mov
xchg
rorb
leave
push
js
test
pop
mov
popa
or
and
mov
popa
pop
fistl
dec
jb
rorb
pop
lret
adc
out
push
cwtl
test
mov
add
pop
ss
xchg
out
aad
xchg
stos
mov
pop
adc
jg
outsb
popa
xchg
mov
iret
movsl
add
sbb
mov
mov
arpl
mov
insb
mov
xchg
jae
cld
and
jno
or
pusha
sub
ret
mov
imul
popf
sbb
jo
sub
outsb
rcrl
push
dec
int3
xchg
and
mov
aam
xor
jb
add
fwait
je
adc
jg
adc
incl
inc
dec
cs
hlt
pop
aam
rolb
sbb
subb
mov
out
mov
bound
adc
mov
mov
aam
hlt
push
add
inc
cmp
mov
push
ljmp
fwait
add
scas
inc
jo
mov
bound
adc
and
aaa
push
sbb
pop
mov
jecxz
push
ret
adc
sti
jp
mov
lock
int
jae
lock
lret
and
inc
adc
test
pop
mov
adc
xchg
flds
pop
jae
iret
std
add
or
sbb
jecxz
imul
ss
ja
adc
sub
or
pop
xor
out
fisubrs
dec
sbb
mov
aad
mov
xchg
popa
cwtd
adc
push
icebp
adc
pusha
clc
jns
cmp
ss
sbb
cmp
fdivs
jno
scas
iret
and
mov
das
jnp
mov
test
push
adc
mov
mov
aas
jns
adc
dec
rol
adc
inc
dec
mov
rorb
sbb
sub
add
sbb
jo
push
pop
rcrb
add
divb
pop
iret
frstor
sti
scas
test
jbe
fisubrs
das
dec
in
xchg
and
jnp
jl
sbb
out
movsl
lock
mov
lcall
push
jns
xchg
push
cmpsl
popa
dec
daa
mov
adc
push
or
add
jbe
insb
insb
adc
call
and
js
sub
mov
insl
pop
or
loop
out
arpl
pop
fs
cli
or
xor
xor
dec
inc
cmpsb
mov
push
sbb
adc
test
fisubrs
cmp
out
cli
push
repnz
leave
lock
rcrl
insb
addr16
test
lahf
arpl
xor
cmpsl
cmc
sub
mov
mov
jmp
pop
test
das
cld
jnp
daa
inc
inc
bound
out
jmp
test
cli
inc
sbbb
or
scas
movsb
test
aam
in
or
sub
outsb
psubd
mov
and
inc
dec
mov
push
pop
repz
cmp
inc
int
bound
out
adc
and
fs
mov
jp
pop
and
cmpsl
shrl
xchg
hlt
orb
jmp
mov
add
xor
hlt
cli
cwtl
and
xor
popa
jbe
inc
int
sarb
aaa
shrb
sbb
mov
mov
mov
fadd
xchg
adc
mov
push
mov
aaa
sbb
mov
je
and
adc
inc
sbb
hlt
jg
imul
mov
loopne
add
add
xchg
sub
jbe
test
icebp
mov
xor
mov
jo
daa
add
imul
push
inc
shll
sub
sub
jno
into
mov
mov
int
push
lret
cmp
sbb
mov
pop
pop
sbb
subl
loope
xor
pop
sbb
push
adc
mov
aam
sti
rcll
lret
popa
cmc
cmc
mov
dec
mov
dec
sbb
mov
dec
mov
cmp
jno
sub
adc
pop
xchg
ss
inc
movsl
jge
std
xor
stc
mov
adc
test
pop
mov
xlat
call
outsl
and
loop
inc
lret
aam
or
xchg
cmpsl
and
popa
mov
ret
outsl
inc
repz
mov
icebp
imul
stos
pop
push
gs
iret
xor
int
add
or
scas
jae
cmpsb
loop
sub
cmp
jl
popa
add
mov
jg
jb
loop
fs
adc
inc
stos
in
xchg
mov
inc
mov
sahf
inc
lahf
scas
jne
std
and
lahf
xor
iret
scas
repz
or
cmpsl
lret
or
pop
fiaddl
lcall
fistpll
shlb
sbb
ds
imul
flds
push
das
push
iret
jmp
stc
pushf
or
lret
xor
pop
lret
pop
loop
push
inc
aam
fsubr
adc
int3
add
pop
scas
cmp
dec
adc
cmpsl
faddl
mov
xor
fstps
sbb
inc
outsl
and
push
mov
pop
xchg
add
lea
mov
mov
sbb
cmpsl
inc
rcll
int3
mov
jge
xorl
popf
push
mov
jae
xchg
xchg
mov
add
sbb
test
jp
data16
jnp
sub
insl
ret
mov
aaa
dec
repnz
cmc
shll
pop
mov
pop
mov
std
js
xor
cmp
cmp
xchg
dec
adc
fdivl
sbb
pop
and
sbbl
xchg
dec
movsb
nop
jo
js
mov
xchg
fcompl
xor
ds
stc
lret
mov
add
inc
xor
in
add
inc
sub
iret
and
mov
cmpsb
jge
cmp
xchg
adc
fdivrl
cld
cmp
mov
movsb
scas
jno
int3
lcall
cmp
adc
rcr
sbbb
lods
sub
scas
push
sub
xor
repnz
dec
aad
mov
or
push
lret
mov
add
lock
cmp
cmpsb
xlat
fucomip
inc
push
mov
xchg
jecxz
inc
fists
les
xor
and
pop
je
sub
pop
mov
jo
test
leave
push
pop
cli
jp
mov
int
push
stc
imul
or
xor
outsb
out
add
push
push
inc
mov
loopne
jge
out
cmpsb
scas
call
fcmovne
push
cs
xor
addr16
stc
inc
mov
push
addb
daa
push
jg
fisubrs
add
cmp
iret
cltd
sub
or
repz
xchg
add
aaa
lcall
cmc
loope
test
and
adc
test
ss
add
jl
mov
mov
or
xor
shll
outsl
or
cmp
jp
mov
negl
add
jo
adc
xchg
xor
leave
shlb
jle
adc
mov
ret
loop
popa
call
mov
sbb
mov
fdivrl
int
add
rcrl
xchg
sbb
mov
addl
shlb
mov
cld
call
xorl
in
inc
sbb
sbb
cmp
inc
jmp
jno
mov
fbstp
xchg
jno
fistpl
adc
sub
push
cli
jecxz
stos
adc
hlt
ret
inc
mov
scas
cmp
jno
sub
dec
or
shrl
je
mov
aaa
inc
mov
push
sbb
dec
xor
push
mov
add
ljmp
loop
cli
jg
pop
outsb
pop
mov
dec
push
dec
mov
loopne
push
adc
into
mov
and
cltd
ds
fdivrs
and
sbb
push
push
add
sahf
sbb
cmpsl
dec
xchg
test
mov
nop
popf
pushw
jno
xlat
mov
cmp
inc
addr16
enter
cmp
add
lock
cwtl
test
sahf
mov
push
rorl
aam
pop
push
pusha
adc
lret
bound
mov
mov
adc
ret
nop
fidivrs
aam
mov
jl
push
mov
imul
mov
sar
in
fxch
mov
out
ret
or
pusha
mov
out
jge
mov
in
clc
cmp
sbb
push
push
popa
push
mov
push
subb
sub
test
sub
add
rcrl
xor
enter
std
fwait
dec
fcmove
inc
push
cmp
testb
xchg
fs
inc
leave
loopne
mov
add
ljmp
mov
jl
pushf
mov
lea
jg
or
sbb
in
and
std
imul
cmp
insb
mov
jp
fsubrl
andb
jl
mov
or
dec
push
pop
mov
out
testb
js
fwait
addr16
movb
enter
in
in
mov
push
sti
test
inc
adc
mov
arpl
lret
adc
push
or
arpl
addr16
pushf
lahf
shll
pusha
push
inc
aas
dec
mov
inc
cmpsb
ja
pop
insb
mov
inc
xchg
shlb
dec
sub
insl
mov
pop
arpl
cltd
test
cwtl
loopne
pushf
mov
sbb
jb
cmpsl
aad
and
inc
dec
lcall
adc
pop
mov
pop
cmp
in
in
inc
mov
mov
andl
loope
scas
mov
xor
daa
lock
shrb
and
mov
stc
xor
jge
mov
div
addb
inc
sbb
mov
enter
and
inc
in
fdivr
add
insb
cli
xchg
bound
jbe
xor
shl
add
jbe
movsl
ljmp
pop
push
std
xchg
movsb
test
mov
inc
or
sub
push
sub
sub
push
sarl
loope
dec
ret
dec
push
mov
mov
cmp
aas
std
pop
in
shlb
dec
inc
div
cwtl
ss
rolb
jge
fwait
test
inc
out
fs
inc
push
push
lea
repnz
pop
fimuls
mov
cli
mov
lods
pop
cmp
lods
pusha
push
dec
into
mov
sub
jb
inc
daa
jl
repz
pop
adc
mulb
lahf
nop
je
lods
inc
push
ja
xor
adc
dec
adc
pop
std
cld
mov
jp
ss
cmpsb
std
movsb
popf
aaa
sub
cmp
fnclex
icebp
lds
fiadds
fdivs
fs
into
movl
mov
jp
jmp
mov
jecxz
cwtl
adc
push
fwait
aad
mov
mov
lcall
sbb
ja
fidivrs
jg
fsubr
or
adc
addr16
adc
push
dec
push
fsubl
repnz
into
in
pop
fadd
xor
jle
int
les
popa
pop
mov
sbb
fcmovb
fstps
pop
sbb
mov
jne
lret
or
fwait
xor
int3
sbb
cltd
pop
fbld
cltd
xchg
cmc
nop
mov
sub
lahf
out
dec
shl
sub
adc
aaa
nop
sub
gs
clc
fsubrl
or
int
lods
cli
inc
shll
mov
andb
mov
nop
sbb
inc
adcb
add
xcrypt-cbc
cmpsl
xchg
loope
inc
and
mov
pop
sub
sub
mov
add
jnp
sbb
ss
fistps
out
out
hlt
bound
mov
pushl
push
pop
push
and
jge
aad
push
xor
mov
sbb
out
dec
dec
mov
xchg
xor
push
loopne
add
scas
data16
sahf
sbb
shl
push
imul
ds
mov
fldt
jbe
outsb
imul
jns
int
pusha
fmuls
loop
rorb
es
int
lret
adc
hlt
or
inc
or
xchg
cwtl
jmp
xor
and
cmp
xchg
int3
sub
in
jo
inc
dec
xchg
mov
es
pop
or
inc
jne
add
mov
loopne
les
cld
addb
subb
xchg
or
mov
daa
loopne
fildll
std
aad
jmp
inc
cmp
popa
lock
push
add
sbb
push
jg
les
testl
jecxz
clc
sub
pop
popf
bound
dec
push
sbb
sub
jnp
popf
pop
cmp
lods
sbbl
fcoms
repnz
mov
or
rcll
imul
loop
hlt
pop
mov
cmp
test
insb
popl
cmpl
lret
xchg
pop
sub
loope
shrb
xchg
cltd
sbb
or
add
mov
xor
clc
mov
push
or
lcall
jne
push
xchg
fcmovb
push
insb
push
cld
adc
sarb
inc
ljmp
popl
push
aam
cmp
movsl
lret
xchg
cmp
jnp
fwait
scas
push
or
xor
jns
inc
jle
push
notl
jg
or
ret
mov
je
enter
cli
or
dec
and
dec
cmp
mov
mov
aam
es
jmp
push
push
cmp
lcall
sti
jecxz
sbb
js
cmpb
inc
divb
pop
inc
mov
jl
jns
push
jbe
pop
cwtl
lahf
mov
sub
lsl
cmp
loop
insb
mov
mov
imul
cmp
lret
dec
je
arpl
mov
pop
sbb
mov
adc
mov
fstpl
or
sti
clc
inc
pop
hlt
push
lock
and
add
mov
or
push
int
xchg
dec
xor
shlb
stos
inc
dec
imul
arpl
lea
xchg
std
mov
sti
lret
pop
xor
push
xor
inc
stos
ret
mov
fstpt
xor
and
inc
ret
pop
jo
insb
and
sub
mov
hlt
sarb
call
adc
mov
cmp
hlt
enter
mov
lret
inc
or
inc
add
push
sahf
lcall
pop
mov
jmp
or
xchg
xor
inc
loopne
xchg
fcompl
fwait
scas
cwtl
int3
pop
fs
in
jns
push
push
mov
push
dec
xchg
dec
push
push
xchg
xchg
or
enter
fwait
push
orb
orb
mov
sub
incl
jmp
lret
aam
ret
mov
and
pop
idivb
mov
pop
push
stos
int
fs
inc
call
jne
sbb
fsubrp
adc
test
lahf
add
jnp
jecxz
into
cli
xchg
jne
fdiv
cmc
cmp
and
mov
lods
test
fmulp
out
push
bound
and
mov
and
and
and
mov
mov
mov
mov
push
iret
mov
shlb
call
push
mov
pop
xor
fs
mov
fucomi
in
cs
mov
lahf
out
jno
pop
add
push
sti
dec
mov
pop
mov
push
cmp
hlt
loopne
iret
repnz
fisubrl
dec
xor
fistps
xlat
jbe
syscall
les
push
sbb
stos
push
xchg
test
or
adc
push
shrb
pop
push
stc
out
push
repnz
and
mov
jnp
cmp
pop
pusha
xor
xchg
xchg
leave
sub
pop
add
jl
orl
outsb
insl
sti
adc
int
hlt
add
mov
add
aam
adc
fwait
in
fimuls
sarb
jecxz
mov
push
push
bound
push
mov
pushf
adc
push
pop
inc
fidivrl
jne
rcrb
movsl
and
fs
lods
cwtl
addr16
and
add
cmc
or
faddl
fiaddl
xchg
xchg
push
mov
je
sub
test
xchg
push
inc
sti
xchg
test
insl
xchg
jmp
adc
movsl
shr
in
sub
das
insl
add
lahf
push
jecxz
lret
test
roll
xor
mov
lock
adc
mov
ss
pop
int
gs
ret
into
mov
push
or
decl
cmpsb
mov
adc
pop
mov
rorl
and
and
ss
xor
call
outsb
pop
repz
imul
push
daa
and
xchg
add
mov
adc
and
pop
adc
insl
sub
gs
push
into
inc
outsb
mov
sbb
mov
cld
insb
dec
push
sbb
xor
stos
lock
stc
xor
push
fyl2x
out
insl
jne
addr16
or
js
aas
adc
fcompl
xchg
push
in
imul
dec
or
and
mov
shr
imul
sahf
inc
sbb
test
inc
and
mov
push
adc
cmpsl
movsl
mov
cmp
imul
out
stc
push
xchg
sub
loopne
sub
push
and
shl
mov
repz
or
pushf
mov
lock
lcall
pop
int3
mov
jge
imul
cmp
rcrb
out
inc
jg
inc
pusha
mov
sub
or
movsl
adc
int3
dec
aaa
jo
rolb
icebp
sub
xor
mov
movsb
dec
sub
orb
je
out
loope
sbb
sub
push
subb
cmp
push
xor
and
mov
mov
movsb
add
add
add
sbb
inc
stc
mov
jne
dec
out
lea
and
mov
fadds
adc
sbb
sub
cmpl
test
shrb
inc
xchg
xor
lahf
jle
ds
sahf
adc
mov
and
testl
lret
lret
and
cmp
outsb
repz
jle
push
notb
ss
inc
gs
push
inc
inc
bound
jp
cltd
jb
push
adc
jo
icebp
xchg
lock
aas
sbb
jl
mov
daa
cmp
lock
xor
adc
cli
bound
cmp
sub
sahf
and
mov
pop
jge
cmc
mov
sbb
jnp
fimull
mov
outsb
jle
and
stos
and
adc
int3
sub
fdivr
mov
out
lcall
push
mov
sbbl
sub
stos
or
fsubr
xchg
push
and
cmc
jp
mov
cmpsl
pop
mov
mov
sbb
xchg
aad
add
shlb
scas
jb
mov
pushf
ret
rcr
pusha
mov
popf
or
sub
mov
mov
pop
js
add
pop
cmc
jmp
gs
pop
lock
jge
outsb
inc
mov
jno
scas
or
push
aad
xchg
push
sub
sti
dec
jge
sti
loopne
sub
jo
inc
adc
repz
cli
loope
sbb
scas
xor
out
cmc
pop
cltd
or
or
inc
data16
shrb
js
sub
mov
add
mov
in
out
test
dec
jp
leave
mov
cmc
mov
add
call
rclb
push
imul
cwtl
hlt
icebp
lds
mov
popf
into
mov
mov
lret
rorb
xchg
mov
jnp
adc
sahf
mov
fnstenv
cmp
and
inc
xlat
xchg
cmpsl
pusha
and
jp
push
jp
push
adc
into
or
pop
adc
inc
push
clc
aas
xor
dec
sub
insl
iret
pop
sub
psubusb
xor
ret
mov
imul
rolb
lret
cwtl
scas
movb
call
fidivrs
out
cmpsb
fs
mov
sahf
mov
xchg
push
mov
les
sbb
inc
es
push
stc
lret
ret
mov
xchg
jmp
add
xchg
lahf
dec
jnp
mov
stc
adc
or
fwait
not
mov
out
rol
cmpsl
into
xchg
cmp
jae
mov
cmp
jne
sarb
or
jno
fstpt
sbb
aas
push
jg
outsl
sbb
push
cmpb
xor
inc
cmpsl
xor
stos
xchg
test
cmp
fbld
xor
rcll
inc
add
rorb
mov
scas
mov
popa
pop
xchg
push
call
dec
sub
ljmp
pop
xchg
icebp
test
push
pop
inc
xchg
cli
lret
adcl
pop
out
xor
pop
sub
sub
jle
loope
push
dec
push
cmp
shl
fbld
rorb
cltd
jp
scas
jmp
pop
mov
and
push
lods
dec
jg
in
in
mov
in
xor
and
cmpsl
icebp
das
lcall
inc
mov
rcrb
adc
xchg
pop
cmp
mov
push
in
out
adc
push
sbb
filds
std
add
or
lret
push
rcr
push
dec
insb
movl
mov
jle
pop
nop
cltd
idivb
iret
rorl
fwait
ljmp
mov
add
mov
cmp
xchg
adc
fldl
addr16
scas
cltd
mov
xor
int3
push
mov
bound
jbe
pushf
jge
inc
in
mov
add
int3
pop
icebp
in
or
xchg
inc
inc
int
cmp
in
lods
fnstenv
cli
jno
jns
pusha
addl
stos
roll
xchg
call
out
mov
and
push
adcl
dec
mov
shll
cmp
cld
pusha
notb
sub
shrb
leave
lea
fnstenv
hlt
or
pop
sbb
xchg
sti
sbb
sub
dec
inc
add
dec
xlat
popa
daa
sub
fmull
insl
mov
adc
push
sub
sbb
movsl
dec
testl
sub
lea
enter
addb
xor
mov
outsl
test
dec
out
outsl
out
add
fistl
cmp
insb
xchg
sbb
shlb
push
test
mov
inc
mov
mov
sbb
adcl
mov
cmp
sbb
dec
push
pop
mov
mov
into
jmp
mov
cs
outsb
fld
sbb
dec
push
pop
jmp
mov
adc
out
or
or
fldenv
jo
les
dec
push
cmpl
sbb
mov
sbb
adc
loop
fildl
sbb
ss
iret
jg
jp
xchg
push
pop
in
mov
aaa
inc
xchg
das
pusha
dec
fidivrs
stos
daa
cmpsb
mov
sub
add
les
scas
or
and
dec
cmp
mov
fs
cwtl
jmp
fdivrs
lods
fstp
fucomp
test
leave
lds
lea
mov
adc
push
dec
mov
push
stos
cmpsl
jae
jns
cmp
loope
call
lret
inc
rclb
loope
cltd
js
jno
lahf
xchg
xchg
mov
cmpl
lock
fistpl
push
lods
cltd
or
fdivrs
jnp
add
mov
fmul
mov
insl
std
pop
fldl
push
xchg
je
xor
loopne
aam
adc
imull
cmpsb
jge
pop
in
push
xor
pop
mov
daa
imul
frstor
dec
imul
or
or
fsubrl
mov
fstpt
int3
testb
push
leave
mov
stos
jecxz
icebp
or
loop
fsubl
pop
pop
and
test
in
rorb
bound
and
out
out
sub
xor
cwtl
fwait
push
mov
cmc
arpl
sub
and
mov
mov
xchg
lds
js
mov
jne
mov
ja
mov
fdiv
push
rcrb
hlt
test
inc
addr16
popa
xor
pop
fiaddl
adc
xchg
std
mov
lock
xor
cmp
lret
adc
bound
adc
jbe,pt
cmp
xchg
jle
popa
lcall
pusha
mov
sub
inc
ds
movsl
add
dec
aad
std
mov
shrb
mov
cmp
jl
fstpt
add
or
xchg
jp
and
xor
push
mov
mov
xor
hlt
in
repnz
or
stc
int3
xchg
stos
call
and
lcall
pop
incl
add
and
insl
pop
test
stc
cmp
pop
incl
push
mov
notl
and
in
orl
sub
add
mov
pop
push
stos
mov
fwait
fwait
mov
dec
les
lock
jge
push
push
xchg
cmp
xorb
xor
aad
mov
das
adc
sti
sbb
xor
lods
pop
outsb
mov
ljmp
cmp
ljmp
pop
fistpll
sahf
insb
cmp
fdivrl
pop
push
push
stos
test
je
stc
icebp
xchg
sub
xor
cltd
add
aas
add
insb
jbe
xchg
mov
jp
movsb
and
jb
in
fwait
adc
das
rcll
in
dec
iret
in
insl
inc
addl
mov
xorb
hlt
je
sub
ja
sbb
int3
push
mov
fsubs
inc
push
xor
int
lcall
dec
aad
pop
jl
push
sbb
repnz
sub
aam
out
mov
in
clc
clc
fnstcw
dec
fwait
cs
movsl
pop
push
pop
mov
fsubs
pop
shlb
lret
les
in
out
loopne
pop
mov
xor
fldl2e
mov
mov
es
mov
fsubrl
es
int
out
push
sub
dec
sbb
adc
loopne
xor
lret
fdivrp
addb
lds
rcl
cmpsb
jl
div
test
sub
push
notb
dec
cmpsl
jo
das
jp
negl
scas
push
and
dec
data16
mov
fdivl
in
and
xlat
and
scas
sbb
fwait
scas
mov
filds
mov
movsb
scas
dec
repz
scas
sub
inc
mov
cmpsb
es
add
pusha
int
out
push
mov
ret
rcrb
sbb
pop
bound
push
enter
add
sbb
outsb
mov
mov
mov
repz
or
sbb
test
leave
rol
adc
lret
or
sahf
xchg
inc
or
and
cmc
mov
xchg
mov
inc
rol
sbbb
jno
mov
jecxz
push
shl
lret
and
aam
call
mov
add
xchg
push
sub
lock
pop
popa
repz
pop
xchg
mov
out
out
push
popa
dec
push
lret
gs
pop
call
cmc
push
mov
adcl
call
cmp
mov
sbb
dec
out
mov
push
mov
push
bound
add
imul
js
jo
pusha
sub
push
mov
xchg
dec
cmc
and
stos
pop
inc
pop
icebp
xchg
aad
dec
in
fstpt
inc
test
gs
xor
je
js
mov
stc
or
cs
cmp
mov
or
adc
sbb
inc
jne
shrb
xor
iret
pop
xchg
enter
cmp
xor
push
in
frstor
dec
jne
dec
cs
or
push
ds
scas
lods
cmpsb
mov
adc
add
notl
cmpsb
or
pop
shll
sub
lret
xor
into
dec
iret
jno
ret
enter
notl
jmp
out
cli
jno
mov
pop
xchg
mov
mov
lods
pop
repnz
shr
test
out
pop
push
add
or
dec
push
dec
mov
fwait
push
mov
in
bound
lods
ret
incb
xchg
divl
cwtl
fs
bound
daa
adc
test
int
xor
rcrb
dec
fsubl
sub
mov
into
lcall
lea
test
enter
pop
lea
clc
adc
adc
push
xor
jmp
aam
or
mov
testl
add
sbb
test
cmpsl
mov
mov
push
nop
popf
jns
shl
mov
pop
fisubrl
sub
inc
cmc
out
in
subb
test
jle
jge
inc
adc
dec
jb
mov
mov
aas
bound
icebp
int3
xchg
jo
cmp
andb
fdivrl
mov
mov
dec
or
cmpsl
sub
inc
test
test
mov
cmp
rcrb
scas
notl
das
aas
push
insl
mov
jae
and
push
or
cmp
xchg
cmp
dec
test
iret
imul
sub
rolb
jp
inc
mov
out
inc
stos
push
mov
dec
aaa
jnp
push
xchg
push
movsl
or
lea
xchg
stos
data16
aad
dec
xor
lret
mov
inc
in
adc
push
or
cli
ret
and
divl
cmpb
jns
in
dec
xchg
pushf
mov
pop
in
mull
inc
popa
fstpl
lret
rcr
or
sub
nop
and
add
pop
fidivrl
cmp
lcall
sbb
jb
mov
lret
test
mov
movsb
mov
outsl
and
cmp
sbb
mov
mov
or
shlb
outsb
xchg
adc
jg
push
lds
and
pop
dec
mov
push
lahf
sti
aad
mov
mov
mov
test
xor
xchg
sub
mov
movsb
test
jmp
rcr
xchg
lahf
jae
and
mov
sbb
mov
jno
lds
outsl
sub
and
movsb
enter
out
pop
jg
sub
lods
jno
in
jb
js
into
rol
push
fs
xor
inc
jmp
out
out
cmp
out
push
xor
ret
xor
stos
ja
mov
or
cmc
fdivs
xor
into
cmpsl
or
pop
jb
repnz
cwtl
rolb
jp
inc
mov
xchg
arpl
std
scas
insb
arpl
xor
xor
pop
hlt
push
int
clc
mov
in
cwtl
xchg
cmp
call
daa
imul
push
sub
adc
pop
das
mov
leave
test
sbb
leave
add
dec
sub
mov
pop
sub
hlt
mov
std
inc
roll
lret
xor
or
les
arpl
push
push
sbb
cltd
ror
jo
out
dec
xorl
aas
push
pop
stc
cmp
sbb
hlt
or
hlt
rcll
and
scas
les
test
or
adc
fistl
push
lds
lahf
addr16
fisttps
pop
or
rorl
decl
rcrb
cmpsb
sbb
shlb
jmp
or
lods
test
fs
insl
pop
into
fcoms
xor
inc
inc
fnstcw
xor
adc
ret
pop
sub
mov
jae
pop
shlb
jmp
divb
scas
mov
jne
aam
repz
fwait
rorl
out
shlb
fldt
aad
and
and
add
push
push
mov
adc
sbbl
sub
xchg
xor
es
jmp
cmp
mov
add
mov
addr16
mov
mov
fcmovne
cwtl
mov
ds
sub
cmp
dec
sub
jae
jnp
cmp
std
daa
xor
and
xchg
cwtl
add
cmp
cmpsb
sub
mov
jnp
repnz
mov
sbb
test
cmp
imul
fcoms
xchg
loopne
adc
sahf
cmp
cltd
mulb
pushf
sub
fisubl
mov
mov
repnz
aam
cli
dec
adc
jmp
stos
fcmove
fmul
addl
pushf
in
sub
ret
inc
and
or
pop
jnp
sub
or
mov
cmp
icebp
stos
ss
jb
jecxz
pop
sti
mov
outsb
pushf
mov
push
popa
adc
call
aam
lahf
xor
inc
add
xor
push
push
aas
inc
pop
sub
stos
je
add
out
mov
xchg
or
mov
cmpsb
add
xor
scas
fcom
inc
cmp
shll
pop
insb
je
mov
xchg
xchg
fldl
xchg
or
fsubrs
test
sahf
push
fs
xchg
aam
adc
daa
mov
cltd
out
mov
mov
js
mov
sbb
mov
mov
in
dec
pop
pusha
test
out
movsl
dec
jge
cmp
push
mov
pop
add
push
aad
jmp
mov
dec
test
les
dec
ret
loope
fs
pushf
adc
movsb
arpl
pop
aas
in
out
dec
ss
imul
sti
mov
ret
add
repz
mov
loop
jecxz
mov
ds
sbb
and
cmp
add
xchg
popa
cltd
scas
cmc
or
hlt
or
sub
loop
jnp
push
add
dec
push
jge
cmp
lods
mov
or
cltd
scas
dec
jg
int3
repz
mov
sbb
xlat
push
je
mov
roll
hlt
lahf
pop
popf
sbb
loopne
sahf
xchg
push
rcrb
add
jle
jne
out
mull
cmp
std
enter
xchg
jbe
pop
pushf
sbb
xchg
jmp
adc
pop
test
xchg
out
stos
std
dec
das
out
and
lret
inc
and
je
iret
jge
inc
call
xchg
loope
or
cmpsl
add
pushf
into
popf
jb
sub
lcall
and
sbb
cmp
cmp
fwait
jno
sbb
lahf
mov
out
xchg
dec
jle
pop
adc
bound
fmuls
or
enter
add
mov
sbb
add
push
lods
sbb
cmp
shrb
jne
ret
add
mov
stos
rclb
loope
mov
and
cli
je
mov
mov
mov
jno
and
repz
insl
movsb
in
stos
cld
aam
out
cmp
xchg
dec
pop
inc
mov
ja
jmp
imul
jecxz
divl
repz
leave
rcrl
mov
pop
mov
jp
roll
push
push
loope
and
call
push
jnp
cmpsb
or
pop
movsl
jb
mov
das
lods
sahf
test
pop
lahf
add
out
pop
push
cs
idivb
sub
cmp
iret
push
negl
inc
or
imul
shrb
dec
mov
insl
pop
or
adc
lahf
lods
mov
sub
les
ss
xlat
dec
inc
fucomp
mov
mov
mov
or
cmpsb
sub
loopne
inc
push
jl
mov
push
out
adc
push
lods
in
into
mov
lods
push
push
outsl
sbb
xor
inc
mov
imul
or
in
in
hlt
adc
inc
cmp
ret
jne
mov
rol
mov
mov
fwait
mov
jo
ror
xchg
lret
hlt
fildll
loopne
imul
cltd
xor
jbe
or
adc
push
mov
push
notl
mov
hlt
xor
hlt
int
and
xorb
xlat
adc
mov
mov
or
js
pop
lea
mov
xchg
popa
push
cld
roll
push
aas
dec
sbb
or
push
inc
clc
xchg
cmpsb
push
mov
movsl
nop
adcb
pop
xchg
push
cmp
dec
ficomps
mov
xor
jecxz
out
mov
xchg
dec
movsb
inc
sahf
jno
shlb
mov
dec
and
xor
xlat
lds
andl
loope
fucom
fildl
daa
das
lods
inc
and
jg
scas
cmp
push
pop
dec
sub
scas
xchg
cmp
leave
xchg
mov
aam
add
adc
mov
sarb
pop
jle
and
outsb
push
mov
dec
setle
pop
pusha
xchg
int
pop
inc
adc
imul
nop
adc
cmp
lock
into
add
je
sbb
scas
jl
sbb
and
fidivrs
add
mov
cmpsl
lea
je
dec
addr16
cmc
cmpsl
stc
jl
or
lret
lock
movsb
jae
xlat
xchg
testl
fisubs
lods
fimull
add
shll
jecxz
inc
insl
mov
cli
sbb
sti
rorb
jl
cmp
pusha
lret
pop
xchg
pop
cmpl
xor
cmpb
imul
andb
dec
test
outsl
cld
cmp
gs
int3
or
inc
mov
int
stos
mov
scas
sbb
divss
icebp
stc
mull
inc
mov
adc
push
rorb
push
push
ficompl
and
mov
stc
cmpsb
jmp
mov
inc
mov
sbb
or
ret
add
xchg
jno
cld
add
int3
aaa
cmp
movsb
inc
cmp
adc
bound
loop
push
pop
xchg
nop
scas
and
xor
je
xchg
cmp
outsb
repz
adc
cmp
xchg
popf
dec
fwait
outsl
push
lret
fwait
jecxz
xchg
xor
movsb
pop
lretw
or
mov
or
mov
les
clc
add
jmp
pop
add
inc
push
lahf
or
cli
fstpl
inc
sub
jmp
lods
dec
out
dec
ds
jl
or
mov
stc
jae
decb
cmp
mov
lret
popa
nop
add
xchg
ljmp
xor
add
inc
outsb
cwtl
sarb
push
pop
mov
xchg
lock
jecxz
adc
xor
adc
cli
adc
dec
pop
jae
mov
mov
fimull
ret
fwait
xorb
data16
es
add
jo
sbb
jo
xor
push
pushf
leave
and
adc
scas
mov
mov
jmp
in
ds
mov
je
andb
pop
addr16
test
in
cs
push
jg
inc
hlt
loop
inc
test
mov
sbb
daa
scas
test
mov
imul
ds
lahf
rcl
mov
push
mov
xchg
popf
sti
neg
add
popf
pop
adc
or
add
add
add
pop
insl
mov
loopne
imul
leave
dec
inc
pop
hlt
sub
cmpsl
test
xchg
xor
pusha
sbb
sub
int3
cmp
xchg
add
inc
add
shll
mov
add
push
icebp
ljmp
movsb
push
hlt
cmpsb
push
mov
rorl
jb
inc
or
cmp
pop
scas
scas
xor
idiv
test
ja
aas
cli
pushf
add
cltd
mov
pop
mov
push
loopne
add
fmuls
outsb
and
cs
inc
fwait
icebp
xchg
cmp
mov
push
sub
out
jns
loope
sbb
xor
mov
jae
stc
mov
repnz
mov
sbb
insb
mov
xor
dec
lcall
mov
adc
lret
popf
xchg
out
mov
ret
loope
adc
call
in
arpl
les
mov
sub
or
push
pop
stc
pop
mov
jecxz
jno
xchg
push
mov
add
push
cmovl
pusha
mov
inc
pop
push
loop
xor
jge
mov
cli
mov
imul
xor
xchg
loopne
ja
and
lock
jg
push
xchg
outsb
or
xor
and
jle
lcall
out
mov
push
imul
fisubrs
mov
push
xchg
dec
mov
ret
xchg
pop
or
aad
sti
mov
sbb
add
sbb
mov
ret
ds
sbb
xchg
lret
insl
pop
push
inc
pusha
int3
pop
int
jae
xchg
test
sub
mov
fbld
xchg
sub
divb
inc
add
aas
dec
and
inc
ret
mov
sbb
popa
sub
sbb
lods
cs
std
insb
decb
xor
movsl
mov
es
mov
subb
or
mov
call
mov
cld
popa
sahf
dec
push
push
cld
nop
jp
dec
mov
mov
mov
mov
jg
pop
das
adc
sub
je
shl
fsqrt
divl
add
bound
aaa
mov
add
lods
pop
xchg
lock
mov
icebp
inc
pop
sahf
push
jle
insl
dec
mov
adc
xchg
sub
js
repz
jo
push
jl
push
xlat
shlb
push
push
and
mov
inc
out
in
pushf
pop
fmull
les
add
adc
pop
shrl
pop
mov
sub
int3
or
adc
adc
daa
mov
mov
imul
stos
popf
dec
repz
roll
cwtl
pop
jp
pop
jecxz
test
fstps
rcrl
test
popf
fsubr
dec
fcoml
cld
pop
cli
call
mov
in
xor
mov
mov
pop
mov
pop
aad
mov
mov
aam
cmp
mov
mov
popw
sbb
out
hlt
test
or
inc
loop
inc
cli
dec
loopne
jb
test
aas
js
clc
adc
jmp
lods
sub
inc
cmp
jmp
loopne
and
or
aam
sbb
pop
or
xor
mov
daa
xor
cmpsl
sub
cmpsl
xor
adc
shlb
sbb
mov
icebp
mov
xchg
out
stc
pop
fxch
ret
cmp
xchg
mov
in
mov
psraw
fildll
and
lret
loop
repz
in
push
jecxz
adc
jge
add
popa
popf
push
mov
js
fdivrs
mov
dec
jnp
lods
pop
jg
popf
popa
sub
jno
loope
scas
mov
mov
pop
test
mov
dec
push
lret
push
inc
rcll
jne
xor
pop
mov
std
sbb
insl
xor
es
push
adc
in
jge
xchg
in
cmpsb
and
leave
sbb
mov
xchg
aaa
dec
dec
sub
lcall
sub
or
jne
dec
lahf
push
les
movb
sti
adc
and
or
pop
inc
mov
js
push
push
stc
mov
sbb
arpl
das
adc
xchg
addr16
sarb
or
loop
cbtw
xchg
addl
int3
fmuls
out
or
loop
or
dec
test
sbb
jbe
in
pop
mov
rcrb
fimuls
dec
jecxz
fucomip
pop
dec
jp
jnp
mov
adc
pushl
pop
lock
rcrb
cmc
fxch
leave
mov
lret
nop
push
mov
push
pushf
jo
xchg
or
in
sbb
lds
mov
sub
jecxz
call
and
imul
jecxz
into
cmp
ljmp
lea
iret
in
ret
gs
bound
arpl
mov
enter
aad
rolb
lret
adc
xchg
int3
es
xor
fildll
push
popl
push
fidivs
xor
jns
repz
cmp
cmc
leave
mov
mov
dec
cltd
mov
adc
ljmp
mov
jo
jg
inc
mov
dec
xor
xchg
ljmp
leave
lea
dec
pop
mov
mull
xor
and
out
dec
and
mov
xor
inc
adc
and
jne
cld
fwait
push
or
cmp
mov
xchg
mov
sti
mov
cmpsb
xor
rcrb
fs
inc
push
pop
mov
shl
outsl
shll
int3
into
decb
mov
ss
popa
jecxz
roll
jns
call
xor
imul
shlb
mov
jbe
push
fistps
setb
ljmp
stc
pop
and
or
mov
cwtl
dec
outsb
xchg
adc
aam
fdivrp
shll
sti
and
add
xchg
xor
lret
dec
in
movsl
testb
cmp
mov
push
add
mov
dec
stos
jle
jns
cmp
dec
inc
lret
adc
or
mov
or
out
stos
testb
jo
test
mov
jnp
push
inc
aas
sbbb
sbbl
ficoml
sbb
push
jno
add
shlb
dec
sbb
jns
or
rolb
enter
dec
sbb
or
in
in
xlat
mov
mov
shlb
mov
adc
call
and
adc
mov
fsubrl
testl
loopne
add
pop
xsave
dec
daa
mov
mov
mov
mov
cmp
mov
sub
int
xchg
mov
lret
lahf
shlb
repz
mov
leave
pop
cmp
cli
push
lahf
loop
test
outsb
push
das
mov
push
pop
fadds
mov
std
sbb
fcmovb
xor
scas
int
cli
ret
sti
jno
lcall
adc
pop
test
insb
int
xchg
xor
cmp
repz
das
bound
es
jb
push
fcomps
sahf
mov
mov
mov
scas
mov
lock
or
fsubrl
idivl
inc
fmuls
aam
and
mov
mov
or
adc
decb
mov
inc
fadds
xchg
mov
es
inc
ja
jl
das
aaa
inc
jns
pop
jns
mov
or
push
and
mov
int
addb
push
and
mov
or
pop
imul
pop
mov
jno
and
in
xchg
push
xor
and
lods
nop
mov
jmp
xchg
push
ja
jno
and
hlt
add
aam
ret
sub
add
adc
cmc
sub
xchg
push
cwtl
cmp
jb
adc
test
cmpsl
xor
loop
xor
xchg
jb
dec
loope
or
scas
jnp
pop
jp
test
jne
ret
inc
aam
loope
and
test
or
jecxz
xchg
mov
in
in
es
ja
mov
scas
sub
shrb
xchg
mov
shrb
scas
mov
in
and
mov
nop
or
out
mov
jmp
mov
push
inc
mov
adc
sub
jmp
mov
loop
mov
ja
mov
or
int
gs
test
add
push
pop
pop
mov
sbb
jnp
mov
fnstcw
mov
ret
pushf
push
push
ret
lahf
sbb
xchg
decb
mov
fucomip
add
pop
sbb
ret
scas
shr
mov
sub
lods
sbb
mov
or
mov
xor
xchg
scas
gs
mov
cwtl
pop
adc
outsb
pop
and
inc
xor
mov
or
ret
cmp
sbb
stos
inc
aam
xor
imul
fs
and
adc
fmull
test
xchg
push
pop
nop
cmp
mov
inc
push
pop
subl
jge
mov
popa
arpl
xlat
add
icebp
mov
jmp
out
or
mov
sbb
sbb
xchg
sbb
mov
sub
push
sbb
inc
mov
cmp
xorb
bound
add
cs
inc
cmp
ja
fists
sti
andb
leave
lock
je
ja
sub
ret
aaa
fnstcw
dec
jbe
fdiv
mov
jae
push
mov
or
xchg
jnp
inc
int
push
adc
pop
lods
jb
xchg
dec
outsb
aas
out
sbb
sti
ja
pop
gs
mov
mov
jno
les
nop
test
xchg
ss
fs
js
mov
add
fsubrl
mov
sarl
mov
stos
in
jmp
jnp
jae
popf
or
jb
push
lods
cmp
jno
in
sub
fldl
loope
in
push
cmp
dec
cli
int3
sub
cmp
mov
jle
fistpl
sub
and
lret
mov
je
in
iret
mov
sbb
ja
mov
mov
in
andl
mov
lret
mov
out
sub
dec
mov
shrb
ror
xchg
sbb
mov
out
dec
fdivrp
ret
sbb
cmpsb
dec
xor
sbb
pop
cwtl
or
fstpt
xchg
cmpl
sub
dec
das
aam
jmp
jle
jae
out
clc
mov
xchg
movsl
sub
inc
rcrl
dec
adc
dec
ja
lahf
lret
pushf
ljmp
cmp
lea
ja
dec
and
sahf
fmuls
adc
arpl
cmp
sub
sahf
fldt
mov
jle,pt
test
mov
inc
cmpl
fcmovnbe
out
xchg
cmp
mov
data16
jecxz
out
cmp
push
xchg
or
sub
sbb
sbb
pop
and
fdivl
hlt
mov
inc
shr
dec
pop
xor
sbb
sti
push
iret
movsl
or
jg
mov
xchg
imul
cwtl
popa
aas
pop
shr
mov
test
jns
das
inc
mov
lods
add
fadd
aas
mov
rclb
sti
inc
in
xor
sbb
cltd
push
out
aad
cmp
push
out
sub
jbe
pushfw
jge
clc
xchg
push
sbb
dec
rclb
pop
adc
inc
call
and
into
push
lret
mov
les
stos
dec
int
leave
mov
pop
fwait
arpl
das
sub
or
jns
lret
pusha
jg
pop
lcall
xchg
enter
stc
jns
or
mov
mov
in
scas
test
pop
pop
adc
int3
cmp
test
add
loopne
outsb
js
xchg
push
movsl
dec
mov
xchg
scas
pop
fnsave
sahf
aam
or
jnp
test
mov
dec
adc
sub
fxch
loope
daa
test
popf
sbb
push
jns
fs
lahf
sarb
pop
cmp
movsl
pop
frstor
add
cmp
sub
xor
in
sub
push
rcrb
loope
imul
xor
popa
sahf
js
xchg
adc
pop
mov
mov
jae
loope
mov
jbe
jbe
insb
jbe
cmp
mov
add
adc
cmp
mov
into
das
call
hlt
scas
pop
mov
or
push
adc
push
push
in
cmp
mov
xor
mov
cmp
jge
push
mov
ficoml
inc
xchg
xor
pusha
shll
xchg
ss
jbe
xchg
push
into
pop
insb
jae
jmp
push
jne
fcmovnu
push
rcr
xchg
hlt
scas
jbe
fcmovne
xor
stos
jge
adc
int3
cmp
aas
add
lods
popa
test
popf
ds
xchg
pop
adc
dec
addl
imul
mov
jns
mov
int
dec
jmp
xchg
shl
mov
jp
fisubrl
mov
sub
sub
fbstp
iret
sbb
loop
rorl
sarb
ret
out
jnp
mov
ret
test
addr16
aas
fildll
cwtl
mov
in
fildll
lds
adc
mov
mov
enter
addb
sahf
js
xchg
adc
cmp
pop
outsl
lahf
leave
sbb
rolb
out
sbb
push
add
lock
data16
xchg
cli
push
test
mov
adc
jl
mov
xor
cmp
sbb
mov
mov
cmp
push
nop
int3
stos
in
lret
fimull
push
cmp
mov
jmp
jp
mov
lret
test
das
jb
or
pop
cmc
xlat
mov
or
roll
xchg
ja
mov
and
mov
push
bound
call
cmp
or
or
sub
sub
inc
popf
fists
icebp
sbb
aad
pop
xor
add
lds
cmp
add
es
loopne
or
xchg
inc
imul
fidivs
jo
mov
jl
inc
out
ja
leave
sahf
aad
inc
cmpsb
aaa
mov
jge
push
xchg
les
mov
mov
shll
hlt
out
test
je
sub
leave
fcomip
rcrl
stos
es
adc
repz
lret
jae
adc
push
scas
xor
jnp
dec
into
scas
test
lret
out
insl
dec
adc
sbb
js
xchg
mov
loopne
mov
xchg
jb
and
xchg
jge
mov
pop
scas
mov
add
call
mov
mov
and
cmpsl
push
arpl
jb
or
imul
and
mov
lods
cmp
out
sbbl
mov
sbb
jle
imul
add
daa
cmp
adc
adc
stc
mov
mov
negl
mov
mov
mov
push
dec
mov
sahf
std
test
cmpsb
cld
pusha
rorl
xor
xor
or
stos
cmc
push
je
outsl
mov
repz
cmc
daa
mov
lods
in
roll
sub
sub
inc
and
loop
test
cmpsb
xor
cmpsl
add
xor
dec
xor
xchg
mov
fs
mov
shrb
lret
sub
loop
neg
xchg
jno
cmp
addr16
je
pop
fwait
jle
mov
ret
adc
scas
sbb
dec
xchg
jg
cltd
rcrl
add
jnp
cmpsl
inc
add
fwait
and
cmpb
push
mov
push
outsl
stos
push
xchg
cmp
and
ficomps
mov
aaa
or
adc
call
repz
in
fdivp
std
push
sbb
sub
icebp
pop
fbstp
scas
pop
roll
push
dec
dec
sbb
lods
hlt
inc
into
jp
aad
mov
out
jge
cli
jnp
into
call
inc
mov
or
xchg
push
sub
jne
and
rcrb
add
jecxz
cli
arpl
jge
adc
jns
dec
test
pop
loop
pop
popa
or
orb
mov
pop
add
mov
cmpsb
frstor
lret
xchg
subb
sub
push
pushf
repnz
xchg
push
mov
out
lds
outsb
out
call
push
mov
mov
push
pop
mov
jge
adc
in
aad
ret
add
push
cld
mov
stos
lcall
cltd
cmp
mov
sahf
fsts
orb
movsb
mov
adc
aaa
mov
jnp
out
push
or
pop
xchg
fisubrl
pop
jae
adc
fistps
test
push
push
lret
sbb
or
cmp
xchg
push
pushf
inc
xchg
ja
pop
xchg
push
mov
popf
mov
pop
pop
dec
test
mov
rcll
push
out
mov
movsl
rcll
add
add
xorb
ret
cmp
fnstsw
loope
and
es
fwait
xlat
xor
sub
ja
and
in
or
stc
xchg
add
test
stos
push
imul
inc
das
enter
js
xchg
xchg
and
mov
or
mov
cmpsb
pop
sarl
mov
leave
or
or
add
cmp
pusha
gs
inc
sbb
add
test
mov
push
and
pop
cmp
jns
ret
dec
mov
mov
pop
xor
mov
mov
xorl
xor
stc
sahf
lretw
inc
jnp
mov
sbb
mov
add
sub
mov
test
inc
mov
nop
popf
lret
sub
xlat
mov
out
ljmp
jno
inc
mov
dec
inc
jns
sub
adc
mov
icebp
stos
test
push
rclb
rcll
idivb
daa
outsb
cmp
jmp
xor
sar
aaa
cli
sbb
pop
loopne
fadd
inc
and
xor
cvtdq2ps
insb
lods
xor
pop
mov
in
lds
jbe
hlt
xchg
xor
sub
push
lret
push
inc
push
gs
jl
or
push
push
leave
cmp
cmp
imul
mov
std
push
in
cli
push
or
jp
lea
jbe
cmc
repnz
pop
push
cmp
aad
cltd
dec
sbbb
jge
add
mov
hlt
int3
pop
lcall
in
push
adc
aad
pop
bound
dec
sti
ja
pusha
and
sbb
std
cmp
cmp
addr16
imul
ret
sub
sbb
xchg
aaa
dec
inc
xchg
jecxz
mov
enter
cmp
dec
add
cltd
ds
inc
jae
push
mov
movsl
arpl
int3
adc
lods
mov
add
mov
pop
int3
and
in
out
push
aad
sbb
addr16
outsl
mov
add
out
insl
sub
jnp
sbb
mov
jmp
jl
pop
ret
fcmovne
lea
xlat
out
xor
inc
mov
pop
push
mov
jo
or
movsl
mov
cwtl
imul
mov
sahf
outsb
outsl
push
cmpsb
dec
jmp
ret
lock
js
stos
sbb
push
into
push
xchg
xor
dec
mov
add
adc
pop
push
mov
xchg
pusha
idivl
pop
push
push
jp
loopne
dec
sbb
sub
cmp
addb
push
nop
add
stc
insl
dec
mov
mov
dec
jbe
dec
sbb
rolb
or
incl
das
sarb
scas
or
enter
mov
jmp
or
int3
pop
js
bound
inc
int3
xchg
test
cmp
fsubrl
cmpsl
jae
aas
jne
pop
out
sahf
mov
push
pusha
enter
mov
cwtl
popf
out
and
mov
call
jne
add
and
mov
cmp
cmpsb
pop
insl
dec
pop
js
add
pusha
loopne
in
repz
add
and
or
cmp
or
and
jecxz
cmc
add
out
push
icebp
cs
mov
mov
mov
imul
jmp
popa
or
cmpsb
dec
repnz
test
es
iret
sbb
adc
xlat
lea
stos
lcall
daa
dec
xchg
sbb
cmp
lcall
pop
mov
nop
dec
xor
std
cmp
inc
cwtl
or
push
add
and
ss
ss
lret
mov
sahf
sub
xchg
inc
dec
mov
gs
xlat
cmp
sbb
sub
sub
sub
jmp
adc
and
push
add
cld
push
rcr
daa
pop
cmp
sub
xchg
pop
pushf
jbe
stos
mov
lcall
cld
or
insl
xlat
movsb
lret
xchg
js
adc
clc
imul
dec
imul
sarb
sbb
inc
arpl
pop
adc
movsb
bound
cmp
add
sbb
mov
scas
out
mov
mov
dec
sbb
int
das
in
xor
mov
xchg
repnz
jp
jo
push
inc
in
jno
sahf
add
jno
es
lock
mov
mov
sub
je
mov
shr
bound
movsl
andb
pushf
test
sub
pusha
add
adcb
shlb
fsub
aam
cmp
adc
cmc
out
sbb
mov
sub
mov
test
xor
mov
outsb
push
xchg
xchg
outsb
adc
aam
xchg
mov
push
subl
dec
cmp
dec
or
cmp
xorl
gs
clc
sbb
imul
jb
cli
test
mov
ljmp
pop
mov
mov
push
sti
lcall
shll
pop
and
and
cmp
xor
cmpsb
lock
scas
lcall
daa
cmc
lret
jne
daa
fwait
xchg
adc
dec
gs
ja
xor
ja
mov
out
aam
fisubrl
les
sub
and
and
mov
push
jnp
into
loope
mov
cmc
mov
xchg
adc
mov
stc
ss
js
int3
faddl
cmp
push
add
out
pop
jne
sbb
and
adc
pushf
pop
rcrb
outsl
pop
or
cmpsb
pop
push
cltd
enter
and
pop
repz
mov
js
jg
xor
mov
outsb
sarl
adc
dec
sti
int
movsl
adc
pop
xor
push
xlat
pop
hlt
pop
dec
xchg
movb
incl
iret
and
or
mov
mov
add
hlt
mov
xchg
jg
movsl
add
movsl
sbb
push
inc
jbe
cmpsl
jo
bound
jmp
sub
or
mov
jno
jb
rorl
push
imul
repnz
out
mov
lods
orl
outsb
push
mov
jae
mov
pop
mov
mov
popl
mov
outsl
sbb
andb
pop
mov
loop
std
sub
adc
xchg
scas
outsb
inc
xchg
sub
daa
inc
and
fcoml
add
rorl
push
pushf
ficompl
jg
sub
into
jge
bound
mov
daa
mov
pusha
or
cmpsl
aam
aas
out
fnstsw
sbb
out
push
pop
push
push
out
sbb
mov
outsb
bound
push
rcrb
loopne
cmp
mov
dec
fwait
inc
inc
lret
jecxz
xor
sbb
jmp
cmpsl
mov
loope
and
pop
dec
gs
sub
jnp
dec
pop
xchg
xchg
incl
scas
test
push
jns
jne
subl
dec
cli
nop
push
pop
mov
adc
pop
ds
cmp
stos
mov
aas
or
incl
js
repz
sub
adc
fidivs
pop
pop
nop
cmp
mov
adc
mov
pop
nop
add
mov
subl
or
mov
bound
sub
shll
bound
mov
clc
outsl
inc
sbb
aad
fstl
lds
lahf
enter
mov
in
dec
cmp
mov
cwtl
in
imul
pushf
test
pop
pushf
push
add
and
jp
popl
mov
mov
sbb
fcoml
fildl
xchg
aas
jp
or
xor
xchg
dec
and
cmp
inc
xor
jno
inc
popf
push
pop
adc
pop
jb
out
mov
bswap
sub
roll
in
in
pop
xchg
push
fwait
test
orb
fs
push
push
add
mov
iret
xor
cmp
or
push
adc
lock
repz
and
stc
dec
cmp
dec
sbb
mov
stc
ret
jmp
fwait
pop
push
test
mov
into
push
cmpsb
aaa
push
or
xor
movd
stc
test
cli
sbb
sub
jne
enter
xchg
movb
xchg
push
movsl
pop
dec
cli
push
fidivrl
push
sub
call
mov
push
loopne
sbb
jo
std
lahf
push
out
gs
push
ret
jmp
int
add
stc
lods
fnsave
push
int
cmpb
popa
mov
ss
decl
mov
sahf
test
mov
adc
mov
in
xor
aas
sbb
sbb
mov
enter
mov
cmp
sub
shrb
fimuls
orb
out
sbb
xor
popf
cwtl
stc
in
cmp
jo
fidivs
or
or
jae
subl
test
sbb
cwtl
ja
mov
mov
int3
in
xchg
popf
xchg
cmc
mov
push
out
nop
add
pop
sub
mov
imul
das
sbb
adc
je
daa
mov
mov
fsubrs
scas
push
pop
push
jbe
andl
enter
ret
cs
sbb
mov
es
insb
cltd
enter
push
and
and
bound
and
lret
push
rclb
mov
sbb
cwtl
dec
xlat
mov
imul
jle
adc
cmp
inc
pop
inc
jne
iret
cwtl
sub
sub
scas
adc
pop
jbe
add
add
fidivrs
inc
es
and
push
jne
lods
mov
push
adc
test
jno
leave
enter
imul
in
outsb
xlat
add
pop
mov
lret
imul
imul
mov
inc
jbe
outsl
adc
sbb
in
push
jmp
mov
lahf
stos
jp
aad
stos
pop
or
pop
stos
push
out
xor
xor
jae
in
adc
lret
std
mov
mov
clc
pop
and
xor
mov
pusha
jl
adc
fistpl
arpl
dec
dec
stos
and
fstp
rolb
cmpsl
sub
dec
aaa
and
xchg
inc
push
aad
lods
xor
stos
cli
movsl
jg
shll
mov
mov
pusha
ror
in
cltd
push
push
add
loop
in
ds
negb
inc
sbb
lock
push
cmc
and
outsb
jno
fwait
enter
ja
ret
movsl
sub
scas
push
jbe
jg
dec
insb
nop
or
ja
dec
gs
sbb
jle
push
cmp
or
pop
cmp
add
fwait
add
push
dec
movsb
push
ror
and
out
push
std
ljmp
hlt
mov
aam
out
pop
hlt
xchg
and
pop
mov
sti
andb
cmp
adc
cmpb
mov
push
fsubr
dec
je
test
call
shll
inc
add
dec
sub
es
lcall
dec
lea
xor
dec
jge
jmp
scas
ja
mov
aas
add
add
cmp
pop
pop
inc
fsts
cmpsb
nop
mov
cwtl
pop
shrl
inc
inc
mov
repnz
sub
test
or
int3
mov
cmp
fsub
push
cmpsl
cmp
mov
je
sub
cmc
rdpmc
push
rclb
out
arpl
or
in
data16
test
gs
adc
sub
or
sub
imul
mov
dec
xor
mov
pop
adcb
add
mov
jge
dec
adc
push
setl
movsb
push
push
or
orl
mov
sbb
inc
in
imul
je
fs
ret
fldenv
mov
add
rolb
test
add
mov
fidivrl
jle
adc
jl
jae
lds
rclb
loop
je
int3
dec
or
add
sbb
jnp
gs
mov
lahf
stc
sbb
hlt
mov
sub
xor
push
in
cltd
shll
mov
xor
repnz
mov
leave
cmpsl
dec
push
out
sbb
dec
mov
dec
push
mov
sub
inc
push
mov
mov
sbb
pushf
xchg
inc
fidivl
movsb
lods
data16
bound
adc
sbb
stc
xor
test
cmp
inc
sub
jbe
mov
inc
or
lods
icebp
lcall
cltd
lods
cmp
cmp
lods
jno,pt
cmp
test
lcall
daa
stos
or
inc
xor
adc
add
cltd
pop
push
icebp
sbb
inc
jecxz
test
daa
popl
insb
add
jp
mov
mov
jl
mov
cvttps2pi
xchg
xor
or
add
faddp
mov
adc
mov
add
cs
in
adc
int3
add
es
pop
or
jmp
push
mov
es
loop
das
adc
and
sbb
cmp
add
fdivl
inc
cmp
pop
fistpl
sbb
rcl
shrl
shrb
loop
jp
and
mov
aaa
out
and
or
insl
mul
loop
inc
imul
xchg
push
pop
xchg
add
std
ret
sahf
lea
jg
and
or
out
adc
add
lea
cmc
fs
and
ret
dec
dec
je
sub
cltd
pop
daa
inc
jp
xchg
sub
jo
sub
rclb
pop
inc
mov
ja
ffree
outsl
xor
push
sbb
jns
xor
out
cmc
cltd
sub
push
add
sbb
push
pop
dec
subl
xor
push
cmp
js
inc
and
cmp
aas
ljmp
in
cld
xor
and
mov
adc
nop
int3
inc
mov
out
pusha
cli
adc
ror
add
cmp
cmpsl
pushf
jnp
adc
lahf
ret
or
js
pop
pop
sub
mov
pushf
pop
aas
xor
call
leave
fiadds
rcll
push
lds
mov
jle
xor
das
and
xor
sub
lods
xchg
xor
xchg
dec
je
mov
push
and
pop
stos
dec
mov
sub
pop
pop
iret
cmp
ficomps
cmp
sub
test
push
lret
leave
mov
add
and
sub
movsl
sbb
xchg
xchg
icebp
rorb
jmp
or
iret
cld
das
jns
push
add
and
push
ret
aam
pop
sbb
cwtl
mov
inc
mov
inc
out
in
lods
or
sahf
dec
arpl
adc
filds
data16
lods
out
in
jno
cmp
and
jbe
pop
fs
aaa
pushf
mov
mov
inc
sub
add
mov
adc
ljmp
je
mov
xchg
or
xchg
scas
shrb
cmpsl
data16
cmc
ss
push
jle
jnp
sub
xor
scas
hlt
lock
data16
gs
arpl
adc
add
out
icebp
loop
push
addr16
cmp
out
mov
test
insl
pusha
lods
insl
das
mov
xchg
stos
ljmp
mov
ljmp
cmp
fdiv
test
pop
lahf
mov
jbe
jg
pop
fs
mov
sub
addl
jle
ljmp
sbb
sub
or
mull
pusha
xor
mov
sub
in
int3
sbb
and
push
fisttpl
jecxz
aas
cmp
sbb
testl
and
pop
push
xchg
arpl
gs
pop
and
jnp
or
fcoms
xor
out
lock
sbb
lods
mov
js
pop
hlt
mov
mov
insb
and
aas
adc
jae
add
shll
mov
mov
lret
imul
pop
repz
pop
jge
bswap
repz
outsl
aaa
addr16
fs
fisubs
jg
js
xor
sbb
push
adc
cmp
lock
mov
bound
int
in
push
jnp
insb
or
jmp
pop
rcl
pop
int3
adc
add
das
ljmp
cs
mov
pop
nop
xchg
pop
pop
adc
xchg
jbe
cmp
fildll
in
in
lea
jnp
pop
outsb
xchg
inc
pushf
cmp
pop
sub
scas
lods
fs
adc
jecxz
fdivr
push
loop
push
adc
pop
dec
sbb
pop
push
sahf
ljmp
mov
dec
xchg
push
ss
cwtl
push
loope
pop
ljmp
and
inc
mov
lret
fnstenv
bound
repnz
lds
lret
xchg
lods
sub
nop
loopne
sub
sbb
push
outsb
aad
mov
daa
cmp
xchg
fistps
in
mov
or
jo
jne
imul
cli
push
cmp
pop
mov
das
jb
cmp
imul
stos
outsb
lods
popf
dec
xchg
mov
sub
vpcmpgtd
je
pushf
sub
lods
sbb
sub
nop
pushf
das
scas
sub
add
inc
es
and
shlb
lea
icebp
and
dec
push
cwtl
call
ljmp
push
dec
daa
fistps
out
inc
cmp
pop
add
mov
mov
jb
shl
xchg
mov
push
adc
jge
sbb
and
xor
ror
std
sahf
je
iret
push
outsb
into
stos
sti
inc
mov
cmp
stos
pop
rcrb
movsb
sbb
xchg
jg
outsl
and
lcall
popa
call
stos
data16
inc
imul
les
je
loop
lds
faddp
inc
push
inc
adc
mov
mov
gs
lods
pop
loop
mov
inc
pop
xchg
xor
fcoml
cmp
fnsave
push
jge
lcall
and
mov
enter
jae
add
cmpsb
movsl
add
mov
fwait
mov
pop
mov
ja
pop
add
xchg
sbbb
mov
out
mov
fistps
push
sub
out
or
aas
inc
pop
into
imul
repz
push
aam
icebp
push
mov
int3
mov
cwtl
or
pop
cmc
pop
repz
pop
push
jo
mov
jae
dec
hlt
or
xchg
jnp
ret
xor
enter
jmp
dec
jnp
inc
cmp
es
sub
adc
rep
pop
dec
roll
in
inc
push
jnp
stc
jg
lcall
test
mov
fs
imul
ljmp
pop
sub
mov
mov
push
sbb
aad
mov
mov
int
jl
xchg
icebp
icebp
lea
jmp
sbb
xchg
lcall
inc
or
add
sbb
mov
jg
push
adc
pop
jle
mov
and
idivl
femms
mov
cmp
cmc
xor
int3
stos
adc
movsl
xchg
sub
xor
lds
dec
call
data16
outsb
jecxz
xchg
cmp
lods
les
mov
fisubrl
lret
push
shrb
sub
sbb
cmpsb
pop
mov
mov
xchg
mov
mov
mov
add
jo
test
dec
das
dec
cmc
fucom
lret
int3
test
aas
mov
mov
xchg
in
inc
test
add
xlat
pop
pop
xlat
push
jo
jle
add
lock
pop
insb
mov
repnz
les
imul
pop
imul
sti
dec
jae,pt
sti
aaa
sub
cmp
cmpsb
aas
mov
shrb
leave
sbb
xor
inc
dec
xchg
cmp
popa
in
loopne
fsubrs
insb
daa
push
mov
jmp
enter
ss
sbb
mov
jnp
add
xor
push
subl
test
mov
mov
jns
rcrb
xchg
dec
aas
sub
adcl
mov
lret
cmp
push
dec
lahf
adc
ss
cmp
bound
mov
lock
loope
add
arpl
and
add
aaa
test
imul
adc
mov
sub
vmwrite
fisttpll
pop
ja
or
xchg
mov
shll
add
inc
test
pop
insb
pop
sahf
outsb
jmp
sbb
xchg
inc
sbb
inc
sbb
out
fwait
dec
imul
je
add
aam
lret
in
add
insl
dec
cmp
dec
pop
dec
cmp
xor
stc
sbb
inc
adc
stos
inc
push
cmpsb
movsl
cmpsb
div
lcall
aaa
or
aam
ss
fwait
push
sub
pusha
movsl
arpl
sbb
or
aad
bound
movsl
and
cs
mov
sbb
jno
test
mov
push
inc
nop
adc
pop
mov
call
fisubs
into
loopne
ljmp
push
ret
sbb
inc
mov
icebp
out
sbb
sbb
inc
gs
outsb
or
mov
dec
jle
mov
jae
pop
jno
or
adc
lret
jge
and
dec
mov
pusha
xor
sub
jmp
or
mov
loope
jb
dec
sbb
repnz
ror
jmp
xchg
mov
sbbl
sti
mov
test
leave
notb
jb
das
cwtl
and
mov
push
fbstp
sar
int3
imul
es
inc
xor
popf
out
push
xchg
push
mov
push
xchg
push
mov
ss
xor
push
fnstenv
scas
jnp
lea
mov
lods
mov
push
arpl
jb
xor
and
inc
dec
cmp
hlt
xchg
mov
gs
dec
mov
pusha
in
xchg
out
call
cld
inc
addr16
push
rsqrtps
daa
cltd
adc
jno
jecxz
or
in
jnp
negb
cmp
test
in
jnp
xor
ljmp
fdiv
xor
and
push
mov
rorb
dec
int3
pop
or
stos
pop
lock
jae
mov
xchg
sbb
fstpt
arpl
adc
push
push
stos
arpl
sbb
rolb
push
test
mov
push
xorl
mov
sbb
test
mov
or
pop
aad
shr
call
pop
fidivrl
shlb
outsl
pop
add
mov
adc
clc
sub
lock
rolb
int
loope
mov
add
repnz
mov
adc
pop
scas
xchg
mov
jmp
sub
sub
push
shrl
and
mov
addr16
cmp
sahf
or
popa
data16
leave
push
push
push
jbe
es
jp
fistl
and
rclb
add
jg
cmp
loop
xor
lret
jns
sub
xchg
xchg
movsl
push
cmp
sub
test
pop
arpl
pop
call
cld
or
mov
inc
dec
jp
sbb
sbb
xchg
pop
mov
in
push
pop
int
cmpsl
fldenv
bnd
cs
mov
mov
jnp
sbb
fwait
gs
mov
fidivl
in
push
push
imul
pop
inc
cli
iret
mov
jg
rorl
xchg
mov
dec
xchg
xchg
stos
scas
imul
lea
dec
outsb
mov
imul
iret
imul
outsb
fsubrl
dec
repz
stos
addr16
mov
xchg
mov
add
jne
iret
sbb
fnstcw
lods
pusha
rcr
fcompl
fldt
fcompl
jp
test
dec
push
sbb
aas
mov
jno
sbb
pushf
mov
push
imulb
inc
inc
out
cld
mov
pop
jnp
mov
adc
aaa
adc
or
or
ds
daa
xor
adc
cmp
fnstenv
je
push
jno
scas
lret
pop
popa
daa
call
test
jnp
loop
or
push
mov
test
in
push
pop
popl
mov
jp
mov
push
pop
arpl
ja
xor
rclb
int
in
add
sub
pop
sub
dec
mov
stos
addl
fbld
xchg
xchg
sub
aaa
push
sub
sub
std
mov
stc
fisubrl
fcmovnu
iret
jge
lds
out
add
mov
lea
add
mov
jp
jns
lcall
lods
jle
mov
lea
notl
imul
lret
fsubl
inc
cld
mov
mov
cmp
mov
push
or
dec
adc
arpl
insb
fidivl
mov
sub
pcmpgtd
andl
mov
jmp
dec
shlb
stc
popf
mov
cmpb
lock
push
push
pop
cmp
mulb
ret
inc
push
pop
mov
and
and
cld
xor
sub
push
or
pop
sub
rol
push
lods
dec
lods
insl
repnz
dec
inc
dec
pop
add
shll
or
cmpsl
das
imul
leave
adc
sbb
fwait
insl
cmp
sub
ret
mov
push
add
xchg
cmp
movl
push
jbe
jge
mov
aad
mov
cmp
mov
jle
mov
cli
out
popf
mov
xor
jle
jb
sub
sbb
lret
and
add
inc
and
ljmp
sub
loop
iret
in
stos
push
loope
in
loop
jnp
mov
cmp
les
or
lock
mov
rorb
push
fs
insb
adc
inc
shrb
test
xor
mov
mov
mov
or
push
or
nop
in
ret
aad
dec
mov
xchg
jb
jnp
xchg
enter
mov
cmp
cmp
xchg
xor
pop
aaa
xchg
aam
test
shlb
faddl
mov
mov
push
mov
xor
pop
jmp
iret
test
jle
mov
es
shll
rcrl
repnz
adc
in
insb
lret
in
pop
popf
add
bound
cmc
dec
push
test
dec
je
test
outsl
call
popl
repz
and
andl
mov
test
sub
mov
sti
xchg
xchg
jge
sarl
hlt
inc
xchg
xorb
loop
inc
mov
dec
pop
jno
lods
dec
dec
push
aad
repz
mov
mov
hlt
inc
inc
cmp
fildl
jecxz
in
popa
jne
mov
scas
iret
push
mov
cmc
cwtl
cli
jp
lret
inc
or
ficoms
leave
mov
nop
frstor
scas
cwtl
insl
pop
xchg
repnz
mov
imul
data16
lods
sbb
pop
xchg
decl
ja
xor
mov
les
mov
pop
loop
stos
popf
lods
imul
stos
xchg
mov
ret
sbb
jmp
fwait
jno
mov
ds
xchg
sbb
bound
les
push
in
and
daa
xchg
nop
les
sbb
icebp
cmp
pop
dec
mov
jle
jo
jnp
jns
jp
xchg
lods
mov
ljmp
inc
push
test
mov
lret
lret
push
add
dec
mov
mov
adc
cmp
repz
jo
js
popa
sbb
jae
and
scas
shrb
imul
and
push
xchg
mov
out
push
or
cmpsl
shlw
xor
hlt
pop
int
repnz
adc
rolb
xchg
push
cld
mov
xor
push
out
sub
push
int3
lret
push
stos
out
das
ss
mov
sahf
dec
insl
mov
mov
shlb
loop
jle
ja
xor
add
in
jg
push
jl
push
mov
rorb
mov
sar
into
sub
mov
lock
mov
aaa
mov
shlb
sub
sbb
fisubs
adcb
call
sbbl
adc
xor
sbb
sar
mov
fcomps
sarl
ja
movsb
mov
mov
movsb
cmp
ret
add
sbb
lcall
push
test
jg
mov
fs
lods
push
jl
jp
movsl
cmpsb
in
inc
jnp
repnz
lahf
test
fstl
or
repz
jge
adc
or
addr16
stos
mov
xor
mov
aas
rolb
ja
jmp
sti
mov
xchg
pop
cmpb
cmp
lret
leave
sbb
dec
ja
jl
sub
pop
xchg
clc
push
mov
cmp
stos
lcall
lea
xchg
adcb
mov
inc
push
mov
add
xchg
cmp
loop
aaa
int
adc
push
clc
test
dec
out
cmpsb
aas
sahf
inc
fucom
outsl
xchg
mov
sbb
adc
cmp
xchg
mov
mov
in
packssdw
jl
lods
ljmp
and
jl
lret
ljmp
shll
mov
xor
loope
pop
sub
add
sbb
pop
movsb
dec
shlb
pop
sub
pop
cwtl
mov
mov
cltd
jle
adc
int3
enter
test
aaa
sbb
add
loop
pop
pushf
mov
sub
jae
add
jnp
stc
and
cmp
mov
fwait
sub
sub
push
jg
sbb
mov
mov
xlat
sbb
adc
cltd
pusha
jp
subl
cli
repz
cmp
push
xchg
sub
jne
inc
es
pusha
fcomip
call
rorb
inc
mov
sub
push
add
fisttpl
xor
xchg
imul
cmpsl
mov
hlt
sub
ss
lahf
add
inc
lds
loop
xor
jecxz
call
into
loopne
ret
mov
sub
mov
dec
fdivr
jne
pop
push
lods
jnp
div
cld
mov
daa
insl
ja
popf
jmp
out
imul
out
mov
xchg
iret
cmpsb
sbb
jne
or
clc
adc
mov
inc
pop
push
into
or
cmp
cmpsl
mov
out
pop
rcl
jle
not
cmc
and
fsubrp
test
xor
add
les
pop
pop
je
negl
mov
pop
push
in
jle
mov
in
or
shrb
pushf
in
and
ret
xchg
pushf
push
rclb
mov
addr16
sbb
pop
out
dec
mov
frstor
pop
lods
push
xor
push
notl
sbb
sub
mov
mov
pop
push
fwait
pushf
dec
sbb
add
scas
mov
imul
fildll
xchg
xchg
in
shll
jbe
cwtl
sub
test
push
pop
iret
insl
push
fdivr
sub
pop
mov
cmpsl
mov
lea
sbb
mov
xor
flds
cmp
stc
dec
fiadds
in
sbb
xlat
cmp
cmc
sbb
pop
xchg
out
mov
imul
imul
push
xchg
push
jbe
lret
loop
mov
mov
imul
push
mov
pop
enter
lahf
mov
pop
aad
call
add
mov
scas
sbb
scas
jp
jl
cmp
loop
push
xor
mov
movsb
outsb
mov
sub
sub
nop
test
sbb
and
adcb
fldcw
in
ja
adc
dec
icebp
xor
jecxz
cmp
aas
sbb
sub
es
decb
ret
ss
xlat
cld
add
jp
cmp
int
dec
or
inc
stos
sarl
sti
push
lds
out
in
push
push
inc
test
andb
xchg
and
cmpsb
dec
ret
sub
ret
jnp
lds
mov
inc
xor
int3
push
and
dec
xchg
hlt
push
push
outsb
loope
mul
push
fcomps
jg
jl
push
sub
data16
sub
or
dec
fiadds
inc
sub
in
imul
mov
hlt
cmp
pusha
mov
mov
push
pusha
imul
jmp
pop
loopne
xchg
jnp
dec
jb
cs
jmp
mov
pop
ds
xchg
or
iret
shlb
cmpsl
lods
shll
jae
mov
add
pop
cltd
jp
movsl
stos
jge
sub
inc
mov
add
mov
pop
scas
in
pop
lcall
faddl
out
or
lar
sub
cmp
add
add
gs
ds
je
or
xor
in
popf
cmpsl
xor
mov
das
popf
push
adc
gs
cltd
lahf
movsb
and
cmp
sbb
sub
jg
insb
lds
xchg
data16
int
push
subl
adc
shr
mov
mov
push
es
xor
inc
notl
adc
mov
jl
orb
rcll
dec
repnz
inc
or
dec
cltd
daa
fisttpl
adc
test
mov
scas
mov
jne
subl
cmpsl
loope
aas
or
fs
jmp
insb
repz
aas
sub
xchg
lea
into
movsb
cmc
mov
mov
adc
push
fists
rcl
pop
gs
mov
xchg
ja
and
ja
mov
add
sahf
lock
sub
mov
scas
cltd
aas
push
loope
lds
lahf
fwait
pop
insb
dec
lods
test
cli
push
xchg
mov
fidivs
xchg
cmp
imull
cmp
shll
pushf
ljmp
into
push
add
inc
xchg
adc
shlb
cmc
sbb
loope
dec
xchg
push
das
jnp
lahf
cmpsl
les
cmp
in
out
stc
pushf
clc
movsb
mov
xchg
cmp
inc
adc
je
mov
notl
mov
jmp
add
cltd
lret
pop
mov
scas
out
jecxz
mov
lods
out
mov
jg
push
stos
les
rcrb
pop
dec
movsb
shr
insl
pop
std
adc
je
rol
arpl
jl
mov
shll
push
hlt
data16
jle
leave
mov
xchg
mov
jecxz
lds
je
out
fnsave
push
push
loope
mov
mov
lahf
jbe
lods
mov
cmpsb
jmp
pop
dec
cmp
rorl
jg
mov
aam
insl
adc
jne
movsb
sarb
movsb
mov
dec
fisubs
xchg
jecxz
push
ljmp
and
and
mov
xchg
aad
pop
sahf
mov
mov
adc
loop
sub
clc
sub
sbb
int3
mov
mov
push
dec
push
pop
push
xor
mov
xorb
lock
mov
add
push
pop
scas
int
inc
sub
xchg
stos
or
lcall
mov
lcall
cwtl
addb
xchg
inc
inc
cld
mov
xchg
adc
dec
popa
or
or
movsl
and
jmp
pop
aam
add
mov
xchg
adc
push
or
xor
cmp
and
out
and
cmpl
xchg
dec
mov
cmp
in
jns
fsubrp
aaa
sbb
jl
cmp
ds
inc
iret
adc
cwtl
in
les
vmovaps
jl
sahf
dec
xor
aad
cwtl
in
mov
enterw
les
pop
mov
mov
fcomip
rorb
clc
adc
iret
mov
adc
push
mov
sbb
popf
inc
xchg
stos
out
shrl
jg
ss
inc
sbb
jb
std
sahf
add
push
lret
mov
bound
jge
or
sub
dec
movsb
cmpsl
jns
lds
jp
es
into
dec
fdiv
addr16
mov
push
jg
dec
cmp
push
and
addl
mov
movsb
stos
stc
mov
pop
fidivs
das
cmp
sbb
lea
mov
pusha
gs
cmc
or
adc
inc
mov
nop
mov
loop
ret
cltd
xor
mov
mov
inc
xchg
cmpsl
dec
lret
xchg
push
insl
jne
repnz
xchg
cmp
ja
mov
rolb
dec
fsub
hlt
sub
jmp
jno
cs
mov
les
mov
fs
call
cmp
cltd
jno
loope
fstl
fstpl
fldl
test
and
ret
cmp
iret
imul
mov
fwait
inc
and
pop
adc
and
adc
ret
scas
sbb
addl
lock
sub
xchg
dec
and
xchg
sub
cmp
popa
outsb
pop
jmp
sbb
xchg
adc
push
and
sbb
cld
aaa
fwait
xchg
test
enter
pop
insb
fisubl
sub
xchg
sub
sbb
jb
in
add
push
stos
sahf
jne
out
pop
inc
cld
jg
push
inc
cmp
fcomp
fwait
cmp
xchg
xchg
rclb
js
jp
jp
mov
pop
dec
fistpl
pop
sub
out
sbb
fnstenv
mov
push
push
sbb
xor
mov
dec
or
mov
std
add
js
int3
pop
xor
adcl
mov
mov
pop
sub
pop
and
stc
insl
mov
push
stos
leave
mov
push
push
mov
cmpsb
mov
mov
xchg
popf
dec
movsb
mov
insb
xor
push
pop
loop
mov
jle
push
pop
xchg
mov
in
and
mov
push
fisttps
fst
jo
xor
adc
cmp
or
ret
xchg
dec
xchg
mov
sub
jo
out
xchg
gs
add
ret
mov
jo
lret
out
pop
xchg
es
or
pushf
mov
pop
outsl
sbb
add
and
aaa
adc
test
jbe
cmp
test
aad
sti
imulb
cmp
or
add
jne
mov
enter
pusha
xchg
adc
pop
fdivrl
lahf
imul
psubb
mov
aad
cmp
inc
mov
ffree
jecxz
mov
fstps
adc
imul
roll
aas
shlb
add
ljmp
mov
add
call
pop
lock
pushf
pop
in
out
dec
outsl
ficoml
sbb
adc
jmp
outsl
popa
jns
sub
lret
cs
adcb
xchg
mov
push
std
movsb
adc
or
adc
add
mov
push
dec
imul
inc
cmp
lds
das
lahf
inc
testb
fnop
in
inc
loopne
lds
xchg
ljmp
insb
mov
jo
and
jecxz
shl
xchg
cltd
or
jp
and
xchg
mov
mov
outsb
imul
adc
cmp
jp
mov
sbb
stos
pop
push
lock
loopne
pop
mov
jnp
inc
cltd
je
dec
push
shlb
lds
pop
mov
pushf
loopne
xor
jne
jne
pop
inc
lds
stos
js
jp
pop
or
inc
jg
xchg
cmp
mov
xchg
push
mov
enter
xchg
xor
pop
mov
mov
xlat
ror
shl
addr16
adc
in
shll
jo
push
jp
cltd
push
aad
arpl
lcall
or
mov
adcl
test
mov
ss
xor
cs
or
das
hlt
dec
cwtl
int
in
push
movsl
ret
pusha
sub
fwait
inc
push
nop
or
cmp
pushf
push
mov
into
pusha
xor
mov
sti
scas
push
int
ficompl
push
out
inc
pop
add
adc
cmp
lea
fsubrl
pop
mov
outsb
cmp
mov
fisubrs
jae
pushl
push
aas
pop
pop
push
adc
cwtl
dec
and
mov
xor
xchg
inc
inc
lock
inc
sbb
repnz
scas
dec
shlb
movsl
int3
dec
sub
cs
adc
adc
pop
mov
jb
clc
xchg
sbb
into
lea
das
inc
adc
jge
pop
xchg
lret
insb
inc
icebp
lcall
adc
lods
data16
sub
es
add
mov
push
lret
shlb
hlt
or
into
rcrl
vsubpd
jae
ret
push
xchg
and
orb
nop
sub
in
dec
jg
xchg
in
xchg
fucomp
jmp
pop
sbb
enter
or
inc
in
scas
adc
test
mov
sub
or
fisubl
xchg
shl
or
call
gs
iret
pushf
pop
aam
lahf
aas
clc
cwtl
sub
gs
aaa
std
pop
out
dec
in
test
add
xchg
ficompl
sub
jmp
xor
imul
or
popf
inc
leave
push
nop
popa
imul
or
inc
mov
ret
inc
sbb
outsb
daa
and
cmp
out
std
push
dec
xor
lds
sub
rcrl
push
rol
cli
cwtl
pop
clts
pop
or
pop
jne
xor
pop
add
hlt
cmp
or
mov
clc
and
ffree
adc
imul
iret
sbb
mov
fidivs
push
clc
pop
jg
imul
jmp
adc
mov
test
idiv
pop
adc
jns
insb
call
pop
push
adc
loope
fcompl
xchg
in
out
sbb
push
xor
hlt
shll
adc
add
fbstp
fisttpll
mov
sahf
test
notb
stos
push
mov
cmpsb
mov
pusha
rcrl
sbb
dec
and
xchg
fs
inc
mov
mov
dec
aad
sbbl
outsb
fstpl
cmp
sahf
fs
jp
jne
mov
pop
xchg
add
cli
add
cmpsl
mov
sbb
subb
in
cmp
dec
div
ftst
cmpsb
fidivrl
mov
fwait
popa
and
ss
mov
mov
outsl
dec
pusha
stos
mov
scas
adc
push
push
call
lahf
xchg
repnz
and
sub
push
lods
pop
cmpsb
stos
add
pop
mov
xchg
aad
push
xor
and
push
xchg
or
xor
movsl
test
repnz
bound
push
subb
loop
dec
mov
stos
mov
hlt
negl
adc
ljmp
out
mov
sub
lret
xor
pop
inc
std
pandn
cmpb
fmuls
add
mov
push
icebp
push
mov
mov
adc
mov
das
push
adc
mov
ficomps
cmp
shll
insl
in
inc
cs
rcr
test
lds
out
test
xchg
outsb
cli
aam
cmp
pop
lock
out
pop
jmp
mov
sub
in
mov
andl
stos
pushl
pop
push
mov
cmp
push
sub
sahf
push
cmp
pop
add
add
adc
lcall
icebp
insl
sub
dec
addr16
push
dec
loop
ret
sbb
shr
jp
jns
stos
sbbl
xor
ljmp
mov
dec
mov
jl
adc
decl
pop
sub
mov
clc
jle
shll
lock
icebp
sbb
or
add
iret
inc
nopl
or
adc
hlt
movsl
loopne
xor
mov
sti
mov
call
mov
xchg
xchg
rcrl
xchg
in
repnz
jle
pop
loopne
inc
jl
insb
cmp
pop
out
cmp
cmp
inc
jno
pop
lock
mov
out
repz
xor
push
mov
mov
sub
push
mov
adc
fadd
pop
js
mov
mov
fwait
ljmp
adc
and
fsubrl
ret
jecxz
mov
or
mov
jae
xor
inc
aam
inc
cmovb
daa
cmpsl
ret
dec
push
stos
arpl
mov
xchg
sub
add
jp
rcrb
sbb
idivb
test
sub
mov
adc
xchg
arpl
ret
push
xchg
cmp
push
xor
out
dec
adc
mov
xchg
movsb
ret
dec
push
std
pop
stc
pop
or
addr16
sub
arpl
xchg
xchg
idivl
outsb
jne
adc
xchg
pop
jns
mov
into
push
das
mov
or
adc
popf
ret
xor
push
scas
push
hlt
xchg
pop
out
mov
enter
xchg
xchg
mov
outsl
mov
jnp
adc
inc
sub
test
aaa
fdivrs
nop
or
or
or
add
pop
sub
in
or
sbb
and
mov
adc
xor
out
sbb
in
adc
int
and
insb
add
push
repnz
sub
roll
xchg
mov
adc
lea
cld
sub
adc
mov
mov
dec
shll
cli
cmp
ret
mov
push
and
stos
inc
xchg
icebp
repz
rep
mov
iret
sbb
jl
jle
aam
rcr
push
dec
jae
sub
add
dec
sbb
jb
es
cmp
mov
xchg
insl
dec
stos
shr
pusha
cmp
movb
int
rolb
aam
dec
xchg
mov
xchg
xchg
insl
mov
cmp
addb
sbb
sbbl
cltd
popf
sti
pop
inc
fadd
xchg
pop
jno
addr16
jg
push
mov
jl
mov
mov
ret
and
mov
fists
sbb
aam
sbb
inc
ljmp
mov
ret
clc
jo
push
iret
mov
mov
inc
xor
int
fldl
mov
out
cmp
jb
xor
fisubs
push
sbb
mov
fcomps
mul
fldl2t
jne
jne
dec
pusha
ss
dec
xchg
mov
push
xor
push
cs
addb
repz
xor
mov
mov
push
adc
mov
rcrl
iret
dec
dec
mov
inc
dec
in
jbe
mov
add
mov
jmp
aad
out
inc
and
aas
cmp
xor
pop
aad
lahf
mov
out
jnp
dec
xlat
xor
sbb
rcr
dec
shrb
sarl
ljmp
mov
into
cmp
stos
push
cli
xchg
ret
ljmp
das
jl
xchg
pusha
adc
sarl
push
sbb
pop
or
bound
loopne
xchg
xchg
inc
nop
ja
mov
fidivl
ficompl
insl
add
in
call
pop
xchg
cs
jb
mov
xchg
stos
aad
lock
stos
xchg
shl
fwait
popa
and
inc
sbbl
pop
rcrl
mov
mov
jb
jbe
movsb
loopne
mov
cwtl
lahf
jbe
pop
xor
mov
inc
andl
push
test
inc
pop
fistl
push
cltd
adc
int3
adc
scas
movsl
xchg
negb
sbb
adc
xor
pop
mov
insl
or
fcmovbe
cmp
inc
push
sub
test
cmp
inc
jo
xor
mov
lea
test
add
push
fs
addl
scas
in
aam
shlb
loopne
data16
loop
mulb
icebp
pop
popf
lahf
pop
push
mov
sub
cmp
xchg
leave
cmp
rolb
xchg
mov
xchg
loopne
daa
xor
pop
test
sbb
mul
lcall
adc
sub
inc
pop
pop
add
aaa
sahf
cwtl
jne
cli
xchg
cld
inc
repz
xchg
fcom
pop
jbe
jne
or
lcall
into
adc
fcmovb
cmc
mov
movsb
sub
cmpsl
pop
and
dec
mov
sahf
mov
xchg
jge
mov
adc
mov
loopne
inc
jb
int
movsb
mov
mov
or
inc
mov
lock
jno
jg
int3
cld
in
ds
or
inc
enter
jae
ret
mov
or
mov
das
lret
push
cmp
sbbb
adc
xor
ja
cmp
pop
ret
push
mov
pushf
leave
mov
push
cld
sub
orl
mov
push
cwtl
xchg
jge
and
mov
icebp
arpl
mov
push
test
scas
inc
das
xchg
xchg
mov
movsl
xchg
push
std
xor
sahf
test
icebp
cmp
mov
push
or
lock
shlb
push
nop
scas
cli
pop
fsubrs
or
push
sbb
inc
adc
stos
sub
sarl
mov
rclb
jo
sti
and
add
pop
out
mov
lcall
ret
insb
into
test
push
adc
scas
add
int3
dec
mov
push
inc
jg
and
sahf
sbb
je
ljmp
or
mov
xchg
je
imul
mov
ja
mov
in
cmc
sbb
add
in
sahf
fsubrs
xchg
movsb
add
pushf
mov
sub
insl
fisttpl
cmp
pop
sbb
data16
ss
push
out
cmc
nop
test
xor
mov
scas
adc
pushf
jl
jbe
mov
popf
nop
pop
mov
push
xchg
mov
mov
sbb
pop
test
repz
fcomps
mov
cmp
bsf
jne
push
arpl
stos
and
pop
lds
cmp
cltd
lock
adc
lock
dec
push
xlat
add
jns
mov
mov
xor
cld
pop
into
dec
xor
movsb
in
dec
or
rolb
movsl
cltd
clc
xchg
sub
sub
pop
dec
push
mov
insb
mov
scas
int
pop
adc
add
orb
pop
neg
cmp
cmpsb
jmp
mov
sti
jbe
ja
or
push
mov
mov
stos
push
xchg
daa
jle
out
jp
add
fsubs
pop
iret
push
xor
mov
mov
push
mov
push
mov
in
rcrb
nop
cmp
data16
and
lea
enter
lods
pushf
mov
insb
popf
fisttps
fmuls
es
mov
iret
xor
scas
pusha
ret
mov
int
scas
rol
out
pop
inc
mov
xchg
and
cmp
cmpsb
jno
push
push
popf
cwtl
mov
jbe
pop
lds
push
or
in
cmc
out
xor
movsb
fcomp
dec
scas
mov
sbb
xchg
mov
mov
and
dec
scas
lcall
mov
cld
xchg
mov
loope
in
ror
sbb
insb
sbb
cmp
in
jne
loope
in
test
mov
push
fs
mov
or
mov
loopne
xchg
jle
dec
xchg
xchg
dec
adc
test
aad
lret
pop
lahf
xor
mov
je
sbb
dec
popf
je
mov
mov
push
aas
or
pop
imul
in
fidivl
add
mov
cmp
aam
das
icebp
mov
es
jo
xchg
jmp
lcall
mov
movsl
adc
fimuls
dec
popa
cmp
dec
push
xor
or
cmp
mov
loopne
pusha
fcmovnu
out
xor
add
pushf
std
lret
or
or
and
test
xor
cmp
mov
repz
insb
mov
adc
xor
data16
add
jo
or
call
cmpsl
ret
repz
clc
inc
mov
movb
ljmp
out
inc
push
dec
xor
mov
lds
pushf
xchg
push
test
mov
lcall
dec
cmpsb
fsubs
movsb
cmp
dec
ljmp
mov
cwtl
out
into
repz
and
loopne
insl
aas
jmp
outsb
call
sbb
imul
pop
scas
dec
jno
pop
jno
fucomi
push
and
repnz
mov
sub
or
out
sub
jne
sub
stos
dec
cwtl
adc
push
subb
test
das
sbb
dec
sbb
int3
push
push
jne
out
mov
jns
dec
adc
or
add
ljmp
test
and
bts
cmp
adc
xor
addr16
lods
mov
loope
lea
insl
adc
mov
jo
data16
loope
sbb
jecxz
cmp
enter
pop
xor
insl
sbb
in
mov
loop
movsb
mov
add
int3
jne
lret
testl
bound
jb
cmp
jge
jns
xchg
pop
adc
and
lock
adc
xor
out
add
aad
xor
test
xor
adc
mov
idiv
lods
int
lods
sub
jbe
les
pop
xchg
out
jnp
sti
stos
fs
sbb
iret
jp
outsb
add
std
hlt
fidivl
mov
push
inc
aad
movl
lds
push
ljmp
xchg
push
push
xor
inc
ljmp
test
inc
jl
or
movsl
loopne
fistl
cmc
stos
dec
out
pop
add
test
data16
add
pusha
mov
cwtl
and
aaa
addr16
sahf
ss
hlt
xchg
leave
lea
fadd
xor
out
into
mov
flds
loopne
mov
les
aad
push
shrb
imul
pushf
jle
push
xor
push
ficoml
inc
nop
icebp
sti
je
decl
pop
enter
sub
xchg
cmpb
idivl
sti
lods
cmp
jecxz
lret
pop
shll
xchg
in
lcall
fstps
dec
xchg
mov
lcall
jo
mov
aas
ss
mov
test
in
sub
mov
insl
enter
loop
outsb
aad
lret
sbb
inc
push
out
push
jge
nop
adc
je
sti
adc
dec
mov
pop
fninit
lahf
fistpl
into
cli
cmp
pop
push
sub
dec
pop
lahf
lret
cwtl
pop
lret
sub
push
xor
pop
out
inc
aad
or
clc
iret
jg
jno
cli
sahf
mov
pop
shll
addr16
jecxz
arpl
cmp
push
push
dec
imulb
or
out
push
fs
ficomps
mov
ja
pop
sbb
pop
inc
mov
pop
xor
jle
cs
xchg
cs
rcll
pop
jno
lea
outsl
mov
mov
loopne
cs
aaa
cmp
and
fbstp
dec
mov
pusha
hlt
or
lret
pop
xchg
daa
xchg
add
inc
bound
push
lea
decl
jns
rolb
imul
ja
ret
ljmp
xchg
hlt
cmc
jae
push
insl
lcall
jo
xchg
fdivrl
movsl
xor
or
add
decb
inc
xlat
prefetch
int
jmp
subb
out
fcmovnbe
std
push
push
repnz
mov
jne
inc
mov
aaa
cwtl
aam
cmc
or
adc
fwait
or
mov
mov
mov
icebp
dec
sub
xchg
dec
adc
sar
xor
incb
clc
dec
push
shlw
mov
or
push
stc
test
xchg
adc
mov
inc
xor
into
rorl
cmp
jae
xchg
sbb
clc
stc
push
lods
call
in
cmp
xor
repnz
and
sbb
mov
and
fbstp
fwait
mov
inc
fwait
scas
mov
mov
dec
mov
aad
add
shll
fildll
aas
das
inc
cltd
sbb
hlt
lods
mov
add
in
or
or
sub
lds
sub
mov
js
das
push
fwait
shlb
or
jmp
sub
shrl
inc
ss
lcall
int3
or
test
jecxz
ja
and
lods
out
out
inc
jge
out
mov
cmc
lea
lret
lock
mov
clc
adc
mov
sti
icebp
cmp
cmp
and
scas
lret
push
cltd
stos
roll
push
or
or
sar
test
daa
mov
movsb
sbbb
jne
dec
cmpsb
hlt
push
fwait
sub
movsl
cmp
jns
mov
pop
xchg
inc
cs
in
repz
and
sub
into
ret
push
mov
cmp
ret
xlat
shlb
push
push
xor
daa
add
adc
das
inc
add
mov
adc
pop
pop
rorb
push
mov
jae
push
sub
jp
insl
push
push
or
and
movsb
popa
aaa
dec
fdivl
push
pop
jo
sbb
jmp
cmp
bound
aaa
sbb
inc
fisubl
mov
hlt
outsl
into
popl
std
pxor
icebp
aas
lret
push
jle
ljmp
jbe
xor
cmp
mov
cmp
movsb
pop
cmp
push
inc
movaps
xchg
imul
lret
lret
pop
mov
fmull
mov
dec
aas
cmp
push
loope
out
in
pop
fmuls
pop
add
hlt
rol
lods
popf
xchg
sbb
dec
cltd
les
stos
lods
addr16
mov
jg
dec
cmpsb
xlat
jb
adc
jp
pop
xchg
mov
sbb
add
sbb
jb
mov
cmp
fiaddl
and
fildl
and
push
shrl
and
jns
dec
imul
or
dec
jge
adc
push
xchg
mov
mov
scas
or
sbb
xor
jl
aaa
xchg
cmovae
je
xchg
or
loope
lods
mov
pop
jp
push
dec
xchg
aam
mov
clc
sub
jle
ret
mov
xchg
lock
mov
fistpl
test
mov
or
pushf
std
adc
bound
ds
test
nop
stos
lods
or
adc
int3
in
dec
lds
cmp
dec
sub
repnz
or
and
xor
mov
adc
jp
aaa
scas
stc
stos
and
xchg
xchg
aaa
pop
arpl
mov
mov
and
xor
loope
pop
out
mov
push
fisttpl
pusha
xchg
xor
clc
mov
cmp
mov
add
sbb
sub
pop
aaa
mov
in
pop
cli
add
cltd
xchg
sub
loop
mov
mov
jns
and
idiv
mov
call
div
sub
daa
ret
repz
jns
aaa
mov
mov
inc
pop
fdivrs
cmp
pop
aaa
mov
ror
add
push
movsl
cmpsb
dec
and
in
push
fwait
lock
or
popf
scas
aaa
std
adc
push
jne
push
fbld
jb
je
jno
rcll
cmp
sbb
fdivs
dec
jbe
inc
mov
call
xchg
lret
jne
xchg
out
jb
push
cmp
push
jo
lods
jae
jge
shll
gs
outsb
popf
stos
dec
xchg
in
sub
cwtl
cmp
out
xchg
fwait
xchg
std
xchg
popa
sbb
movsl
rcll
cld
mov
jne
outsb
mov
std
repnz
add
and
dec
stos
mov
insl
push
sub
or
pushf
das
cmp
or
mov
icebp
test
adc
mov
mov
in
mov
sahf
mov
fsubs
xorl
in
xor
cmpsl
xchg
push
inc
neg
fisubl
out
xchg
aaa
pop
dec
mov
sbb
fbld
inc
shlb
mov
nop
scas
add
fwait
sub
inc
movaps
jo
stc
aad
push
mov
jle
add
cltd
or
mov
mov
fchs
sbb
xor
xor
xor
and
inc
imul
ret
inc
int
xchg
lea
add
cmp
dec
fs
daa
arpl
push
addl
leave
push
ret
sub
aaa
das
xor
jmp
out
fdivrs
lock
mov
lds
cmp
push
lods
loop
sbb
xor
add
adc
sbb
fisubs
push
fs
icebp
or
arpl
cwtl
mov
mov
and
gs
movsl
iret
pusha
aad
xorb
fiadds
lcall
mov
lds
ret
xor
int
inc
push
sub
xor
add
adc
cmpsl
lret
push
push
orb
fsubp
out
lahf
int3
mov
dec
dec
cmc
daa
sbb
arpl
xchg
jg
sbb
xor
mov
test
out
xor
sbb
adc
lock
sub
cmpsl
add
or
sti
push
fsubs
adc
jl
cmp
pop
stc
push
jae
xchg
push
shll
subl
cs
mov
pop
pop
or
leave
rol
mov
incb
xchg
jae
sub
shll
in
loopne
jnp
or
out
fcomps
dec
insl
push
fnstsw
loop
fwait
mov
imul
cmp
pop
mov
fidivl
data16
pop
xlat
xor
add
subl
ss
add
cmpsb
fnstenv
outsb
mov
movsb
ret
cmp
push
mov
mov
sti
and
mov
pushf
js
in
sbb
mov
xchg
sbb
rcrl
push
xlat
repnz
rorl
sahf
and
iret
dec
repz
dec
leave
lock
sbb
into
sub
xor
divb
imul
mov
clc
bts
xlat
dec
test
jns
fwait
pop
sbb
cwtl
dec
in
xor
sub
sub
mov
and
sbb
mov
ss
lods
jne
jne
int
jecxz
stos
add
jl
in
push
data16
or
aad
xchg
cmp
mov
lret
movsb
in
addl
add
mov
add
cld
xchg
jmp
scas
xchg
jo
jg
arpl
xchg
fcompl
or
inc
jg
sub
or
or
xchg
push
mov
andl
movsb
mov
add
jp
ja
mov
lds
mov
das
add
test
movsl
push
push
jp
and
pop
mov
mov
cld
scas
lret
inc
fwait
cmc
out
testl
arpl
ret
mov
cs
dec
jno
outsb
inc
shll
jb
loope
out
push
pushf
ret
lret
sbb
mov
gs
sahf
fs
out
xor
jae
jbe
test
into
dec
int
loope
push
push
incl
out
nop
push
add
outsl
lea
je
and
pop
push
imul
mov
aad
pop
pop
mov
mov
mov
push
mov
sbb
out
stos
into
insl
fwait
cld
and
stos
cmp
jne
sbbb
mov
push
jp
test
sub
and
sbb
insb
jae
fwait
or
outsl
dec
insl
inc
or
out
pop
cmpsl
in
orl
jae
sarb
inc
cmp
jecxz
les
push
or
aaa
pop
xor
mov
in
in
std
pusha
sti
cmpsb
fwait
cmp
xor
dec
mov
out
sbb
pop
xor
push
mov
in
insb
sbb
jmp
insl
test
jne
sub
pop
insb
xchg
aas
push
test
bound
jo
imul
inc
das
inc
mov
xor
and
decb
add
movsl
jmpw
sbb
ds
or
xor
cmp
pop
cli
cs
rcll
faddl
pop
clc
mov
ss
addr16
jp
aas
cmp
rol
mov
test
aad
lea
stos
or
shll
mov
iret
movsl
mov
shl
pop
clc
mov
xchg
sub
push
xor
mov
out
fcompl
sbb
cmp
js
jg
sti
repnz
out
mov
dec
repnz
pop
outsb
push
movsl
mov
dec
cmpsl
mov
xchg
mov
push
adc
and
imul
mov
mov
jo
xchg
xorb
or
js
push
push
testl
cs
push
mov
add
fs
add
jo
dec
pop
enter
dec
std
lods
popf
mov
in
inc
jo
popa
ret
loopne
inc
ja
test
and
mov
dec
pop
outsb
imul
dec
leave
add
pop
cmp
mov
seto
repz
lods
pushf
out
inc
push
adc
pop
adc
ffree
xor
jle
sbb
div
in
xlat
mov
shlb
roll
push
mov
jmp
jno
inc
and
cltd
sub
lret
push
adc
cmp
xchg
push
scas
pop
sbb
dec
test
inc
jmp
notl
jg
fs
push
fldcw
paddb
rclb
je
out
jg
jecxz
or
sbb
fmull
cmpl
xchg
repnz
inc
jg
inc
or
shll
aam
mov
xchg
loope
fmuls
mov
pusha
and
jbe
mov
lahf
gs
xor
jl
push
test
les
pop
xchg
es
pop
bound
int3
pushf
hlt
cltd
add
dec
into
lea
pop
xor
sub
int3
call
jb
lret
adc
inc
cmp
push
testb
rcrl
orb
add
out
push
mov
iret
pusha
xor
negb
and
enter
divl
fldenv
sub
daa
stc
test
cltd
xor
pop
or
lahf
scas
sub
pop
outsl
dec
jp
lods
dec
pop
cmpsl
sub
scas
push
dec
xor
and
cmp
mov
mov
mov
mov
movsbl
out
aas
and
push
dec
je
dec
fs
in
les
mov
loop
cltd
aam
roll
in
jae
cmp
stos
xor
rol
mov
xchg
jecxz
mov
loop
xlat
xchg
popf
mov
nop
lods
sti
xlat
je
xor
out
lock
fistps
jmp
dec
sar
inc
lret
cmp
cmpsl
or
adc
cmp
mov
dec
add
sbb
test
mov
adc
imul
xchg
dec
mov
sub
repz
add
outsl
mov
cld
ljmp
testl
rcll
sti
movsl
jns
mov
cltd
inc
jl
push
mov
popa
jp
pusha
fadd
pushf
add
jbe
imul
or
inc
push
push
divb
aam
clc
pop
pop
std
aad
cli
das
sbb
ffreep
cmp
cli
popa
cmpsb
dec
push
scas
mul
add
mov
das
sub
insl
cs
scas
aaa
sti
cli
daa
push
frstor
fmuls
lret
into
js
sub
bound
hlt
cmp
or
hlt
cmp
jnp
nop
or
or
lret
dec
scas
xchg
mov
or
mov
xor
out
jnp
loop
cmpsl
cmpsb
xor
pop
add
or
movl
mov
lock
lret
aaa
movb
jae
repnz
call
mov
mov
sbb
push
mov
pop
pop
ret
rorl
jne
mov
fs
lods
aad
jb
xchg
icebp
add
cmpsb
xchg
pop
xchg
mov
testl
jge
sub
add
jno
cmpsb
sbb
out
ret
jmp
out
inc
xchg
sbb
mov
cwtl
mov
rcrb
lcall
mov
fs
and
dec
mov
nop
add
mov
repnz
or
pop
loopne
jle
loopne
adc
dec
jmp
cmpsl
cltd
mov
iret
pop
insl
and
dec
ret
in
int
mov
jne
arpl
or
outsl
dec
mov
hlt
lret
dec
cmpsl
or
xor
sub
lcall
fisttps
sti
push
jmp
jge
or
adc
sub
and
lcall
mov
gs
jmp
loopne
movb
jns
addr16
inc
fs
lret
sbb
sahf
xor
sbb
pushf
pushf
in
adc
outsb
pop
add
or
ds
jle
pop
shrd
adc
mov
sahf
add
dec
rclb
ficoml
or
mull
push
inc
inc
sti
inc
jno
aaa
inc
cmp
pop
jp
adc
ss
pop
inc
push
loop
xchg
mov
or
pop
lods
shrb
cmpsl
dec
dec
loope
or
test
dec
pop
xchg
adc
mov
movsb
mov
sbb
movsl
insb
xor
ret
inc
hlt
inc
in
xchg
add
lock
jp
movsl
dec
leave
sub
stos
sbb
sbb
jmp
mov
adc
jmp
das
xchg
adc
mov
push
mov
arpl
nop
and
dec
push
xorl
mov
out
dec
imul
dec
push
fisubs
addl
xchg
push
leave
sub
push
xchg
jmp
cmp
jp
jmp
addb
mov
xchg
mov
lcall
mov
push
and
repnz
xchg
dec
or
sahf
fnsave
mov
pop
aam
adc
imul
pop
mov
cmp
mov
out
mov
xor
or
push
xchg
imul
or
add
je
mov
pop
xor
leave
xchg
add
call
pop
test
test
leave
sub
jge
xor
cmp
push
cwtl
pop
adc
sbb
loop
lods
jecxz
mov
ljmp
jl
gs
jp
mov
jle
fimuls
mov
xorb
std
adc
ja
sub
jecxz
shl
cmpsl
iret
jle
icebp
movsl
lret
push
adc
adc
inc
and
lods
imul
div
cmp
addr16
push
pop
fwait
les
push
or
in
cmp
shl
xorl
lock
outsw
pop
and
jle
fs
jp
ret
cwtl
dec
mov
shlb
out
jno
mov
push
sbb
js
call
lcall
cmp
cwtl
aam
cwtl
push
inc
imul
cmp
and
cltd
mov
jb
roll
insl
int
les
fwait
daa
pop
in
jecxz
shll
aad
popa
or
jbe
test
mov
adc
mov
cltd
mov
arpl
mul
push
pop
mov
es
fwait
dec
mov
je
inc
in
popf
dec
mov
mov
out
scas
jecxz
cmp
notl
insl
push
negb
jne
lahf
pop
cmp
xchg
ffreep
jno
pop
dec
ja
xor
std
fsubr
out
mov
imul
icebp
xchg
jecxz
pop
adc
add
sub
xor
mov
add
mov
mov
pop
mov
mov
pop
sub
pushf
adc
aad
test
sub
push
jl
mov
loope
dec
fcmovnbe
fdivs
fsubs
and
movsb
add
push
lcall
aaa
in
lock
jp
cmp
test
js
sbb
in
dec
fwait
decb
adc
push
adcl
jo
jne
mov
movb
mov
aas
and
ds
testl
fstl
js
cmp
sbb
sbb
inc
js
and
fmul
sub
test
mov
leave
popa
je
add
dec
adc
and
bound
ds
push
movsl
mov
jle
repnz
cmc
add
xchg
inc
cmpsl
sbb
xor
orb
cltd
daa
fs
cwtl
ret
sbb
xchg
and
jge
sbb
aam
and
movsl
shll
test
repnz
hlt
aad
push
jg
push
popf
pop
mov
bound
cmpsl
jp
stos
mov
mov
mov
cmp
and
xchg
mov
cmc
mov
jg
or
iret
sub
cmp
mov
xchg
xor
xorl
jae
lock
xor
loopne
add
ficoms
fcomps
addr16
insl
call
cmpsb
aad
or
mov
int
test
adc
dec
les
mov
inc
mov
cmp
xor
faddp
push
mov
xchg
jae
data16
xchg
dec
jo
aam
pop
xchg
adc
jl
jnp
pop
xchg
stos
mov
mov
sbb
adc
ret
cmp
dec
adc
xchg
rorl
fstpl
pusha
rcll
xchg
in
mov
pop
adc
or
adc
out
sbb
rclb
arpl
out
xor
add
sub
shll
xor
xchg
jne
das
test
call
adc
scas
imul
or
test
jle
pop
push
nop
fmul
push
mov
popa
adc
test
dec
leave
adc
stos
jbe
int
neg
push
aam
lods
pop
dec
pop
cld
idivb
pop
mov
rclb
ficoms
cmp
xor
leave
je
into
testb
jg
mov
xchg
jle
push
mov
cmp
cmp
xor
jb
test
inc
icebp
out
shlb
cltd
shlb
xor
and
inc
mov
jecxz
or
jl
movsb
jb
in
push
sbbl
popa
pop
mov
add
outsb
out
cmp
std
inc
cltd
adc
jno
stos
jo
mov
sub
or
sub
daa
ret
mov
lret
imul
mov
rcll
fisttps
pop
loopne
scas
jge
sbbl
mov
test
jecxz
jno
arpl
stos
adc
xor
data16
mov
lods
mov
rcll
je
adc
mov
cmpsb
pop
out
loope
ret
mov
rolb
outsb
dec
or
gs
xorb
inc
adcb
adc
mov
orb
cltd
jge
inc
subb
popf
pushf
pop
aaa
je
inc
iret
jbe
sbbl
andl
icebp
stc
std
pop
or
cmp
insb
xor
mov
cmp
sub
xchg
pop
out
xchg
sar
or
lahf
out
daa
fldl
fcoml
mov
test
incb
in
ss
jno
scas
xchg
outsl
sub
leave
je
xor
rorl
pop
flds
adc
in
pop
lods
or
fwait
push
jne
xor
push
call
push
cmp
sahf
adc
cmp
lds
movsb
jne
push
rorl
dec
and
cli
pop
insb
pop
push
or
push
aas
icebp
sahf
cwtl
xchg
call
enter
clc
test
mov
mov
sub
cmpl
cmp
loope
sub
ja
jmp
and
lahf
loop
scas
in
ds
sti
mov
push
or
sti
jmp
sbb
adcb
movsb
aas
dec
enter
mov
gs
sub
or
pop
daa
movsl
jl
adc
push
stos
mov
and
inc
lods
push
pop
pop
and
lret
aaa
inc
leave
or
ljmp
push
in
mov
sbb
fcoml
inc
fcomps
xchg
shll
rcrb
xor
in
cmp
sbb
pusha
loop
cmp
xchg
insl
stc
mov
dec
dec
lahf
insl
add
and
in
mov
dec
ret
cmp
mov
and
or
pop
mov
test
mov
cli
xor
arpl
repz
fdivr
dec
cmp
pop
rorb
jbe
add
inc
loopne
jns
addr16
ret
sbb
rolb
xor
push
mov
stos
mov
and
daa
inc
inc
loope
idivb
test
pop
pusha
push
xchg
mov
incl
aam
push
scas
xchg
mov
lock
fcoml
fistl
sub
int3
push
inc
int
pop
jle
shrl
fiaddl
ret
inc
adc
push
add
add
dec
lods
jmp
cmpsl
out
mov
call
adc
lret
cmc
xor
dec
add
mov
gs
pop
cmp
and
add
xchg
push
push
push
sbb
jo
insl
orl
pop
repnz
cmp
lret
mov
pop
dec
xor
enter
or
sub
aaa
popf
mov
pop
subl
add
xchg
loope
lahf
push
push
push
and
xor
jb
mov
cmpsb
pop
clc
mov
inc
mov
arpl
sub
mov
or
cmp
out
cmp
lcall
and
mov
jecxz
push
sahf
fdivrp
cli
divl
cmp
xorb
mov
imul
std
inc
outsb
jne
xor
int
popf
xlat
or
lret
int
outsl
and
jae
and
push
pop
adc
in
jmp
pop
mov
cmp
icebp
cwtl
adc
sub
mov
jb
data16
jmp
fnstsw
hlt
fnsave
jno
xchg
int
aaa
pop
add
pop
ret
push
sbb
nop
xor
cmp
mov
mov
pop
xchg
jbe
jmp
or
test
adc
pop
loopne
mov
jnp
hlt
into
jbe
dec
les
cli
lcall
push
neg
push
out
dec
sbb
mov
push
aad
icebp
jg,pn
movsl
push
cmpsb
nop
dec
fcoms
bound
pop
jbe
stos
clc
adc
nop
mov
sub
divb
pop
sub
cld
lcall
aam
dec
add
sbb
pop
xor
lock
cmp
xchg
pop
dec
cmp
stos
popf
cmpsl
and
adc
jbe
shl
mov
hlt
xor
int
es
mov
das
es
mov
scas
je
xor
inc
stc
cmp
in
jge
jnp
mov
xchg
add
dec
notl
xor
xor
adc
jp
jl
loop
cmp
inc
jnp
out
scas
inc
pop
push
or
aas
sbbl
push
sbb
aad
lods
sbb
loop
sbb
cmc
nop
sbb
rcrb
clc
hlt
ret
mov
sbb
xchg
sub
imul
jge
repz
sbb
or
nop
out
cmp
mov
fsubrs
or
sbb
mov
hlt
lret
mov
jge
or
std
mov
jmp
pushf
cmp
cwtl
iret
ret
fdivrl
lahf
jmp
mov
test
pusha
push
sbb
call
push
or
xchg
jl
pop
lret
or
clc
inc
rcl
test
es
filds
scas
xor
xchg
sub
insb
mov
mov
add
ret
sarb
ja
loop
xor
outsb
push
pusha
imul
inc
rcrb
call
gs
mov
in
push
iret
and
push
jecxz
sbb
sahf
cmp
jmp
sub
int
push
mov
xlat
pop
aad
xchg
js
push
mov
int3
jl
sub
sbb
adc
out
ss
in
out
pop
mov
stc
jns
push
aam
adc
sahf
cmp
pop
mov
and
inc
hlt
adc
dec
xchg
xchg
lret
test
into
xor
pop
call
sub
dec
xchg
in
mov
mov
call
je
inc
push
and
add
mov
xchg
fstpt
pop
filds
jle
xchg
and
push
mov
add
cwtl
jnp
xchg
cmp
mov
sub
pop
and
aam
jmp
and
mov
xchg
mov
xchg
popf
xlat
in
or
testb
mov
sub
lods
or
call
cs
mov
cmc
ret
sub
mov
icebp
inc
add
mov
fs
push
xchg
sub
mov
loope
cmp
cld
aas
pop
adc
xchg
xor
push
aaa
shrb
fiaddl
aam
pop
fcos
push
push
jg
shl
mov
lds
xor
stc
push
repnz
xlat
jb
and
subb
shll
insl
sbb
mov
mov
pop
push
mov
add
sti
xchg
testb
aaa
lods
mov
add
mov
fstl
xchg
hlt
mov
popa
je
lock
and
lods
cmp
cld
sub
sbb
movsl
mov
in
jae
or
loope
mov
jecxz
pop
or
out
mov
inc
mov
xor
add
sub
imul
jae
clc
push
sub
dec
jns
push
xor
inc
scas
xchg
cmp
fisubrs
repnz
sub
push
setge
addr16
xchg
dec
adc
add
out
aaa
fs
dec
xorl
pusha
pop
fisttps
fld1
sub
fwait
cmpsl
shlb
xchg
mov
fwait
lods
inc
call
cmpsl
fsts
cmp
inc
pop
int3
inc
and
push
cmp
xchg
das
push
rcll
and
lcall
loopne
jnp
sub
push
inc
scas
mov
sub
movb
cmp
scas
testl
dec
adc
sub
dec
in
xorl
pop
sub
mov
repnz
xchg
xchg
lock
jne
xchg
fwait
rcl
sub
inc
xchg
pop
lds
lahf
inc
out
in
cmp
sub
adc
pop
sahf
cmpsl
in
jmp
cmpsl
add
mov
popl
jno
shll
push
es
xorb
mov
or
jg
sbb
dec
xor
adc
shlb
push
in
dec
js
inc
xlat
pop
nop
aad
xchg
pop
test
fbstp
enter
jbe
mov
cmc
jne
imul
and
or
testl
aaa
or
lret
push
sahf
cld
xor
jbe
movsl
dec
cmp
aaa
mov
cwtl
and
shl
xorl
pop
mov
mov
shll
clc
cmc
sbb
test
popa
frstor
fdivrs
mov
xchg
popa
mov
or
or
popa
add
cwtl
xchg
dec
inc
mov
adc
adc
mov
cmp
add
call
add
inc
pop
dec
jae
test
dec
pop
xor
and
push
jmp
mov
dec
add
dec
fwait
in
cmp
inc
jmp
or
mov
add
cmp
je
mov
mov
cld
or
rorb
sar
push
cld
or
pop
movsl
push
shr
mov
inc
rdmsr
mov
xchg
mov
bound
mov
adc
dec
jmp
flds
ret
add
xlat
fwait
mov
jne
inc
ja
cmc
or
inc
jg
in
les
ljmp
cld
mov
ss
aaa
push
mov
mov
adc
scas
shr
cmp
stos
mov
adc
ljmp
es
lea
mov
or
arpl
std
add
add
xor
fimuls
jmp
in
pop
mov
sbb
mov
roll
xchg
icebp
arpl
popa
xor
lret
lcall
gs
mov
xor
imul
gs
cs
push
lea
lods
aam
data16
xlat
or
pop
xchg
daa
loopne
and
mov
popf
or
inc
pop
lea
or
pop
cmp
sub
sbb
jp
fdivrl
mov
pop
xchg
cmp
sti
daa
and
shrl
dec
inc
sbb
addr16
xlat
xchg
lods
dec
cs
sub
push
aad
add
test
mov
inc
jmp
cltd
mov
mov
std
je
inc
xlat
push
dec
leave
inc
cmp
jle
xchg
mov
imul
pusha
int3
or
push
je
loope
mov
push
add
push
add
push
mov
ss
enter
addr16
adc
lret
xor
lds
pop
inc
out
mov
jbe
push
arpl
test
or
xorb
sub
stos
sbb
xchg
repnz
popf
bound
pushf
ret
dec
cmp
cmp
or
jno
jl
ds
xchg
pop
pop
in
call
in
int3
xchg
lea
mov
shrb
jl
and
data16
dec
cmp
in
mov
inc
into
pop
out
mov
notl
test
mov
mov
ret
ss
lahf
cmpsl
pusha
mov
pop
jp
pop
fwait
into
add
dec
adc
jl
xor
lea
mov
lret
cld
movsl
aad
mov
add
mov
int
sbb
pop
leave
xor
test
mov
add
scas
pop
sub
add
mov
andl
mov
push
add
iret
or
imul
mov
aaa
addl
and
or
push
lea
jno
sbb
sub
push
mov
jecxz
xor
aaa
dec
jbe
adc
jns
fisubl
dec
add
add
ret
inc
cmc
xor
rcll
testl
push
adc
or
orps
fstpt
ss
aaa
loop
dec
fldln2
mov
or
cmp
xor
sbb
orl
or
in
adcb
cs
repnz
jbe
stos
sub
dec
mov
adc
fisubrl
fidivrs
stc
add
outsb
cld
dec
test
xor
fsubrs
mov
rcrb
rcrb
sbb
loope
adc
test
cwtl
dec
lock
jnp
push
sbb
and
jle
je
mov
add
fcmovu
xchg
xchg
push
in
and
mov
sub
std
pop
test
in
jle
imul
mov
push
enter
sar
stos
daa
fldl
fistps
ja
orb
pop
repz
mov
mov
jecxz
icebp
lea
insb
lahf
adcl
cmp
pop
cmp
xchg
sbb
adc
mov
lahf
ret
xorl
jne
push
or
test
icebp
idivb
cmp
push
mov
in
inc
jp
and
or
popa
ret
loope
mov
mov
sub
add
push
iret
leave
mov
mov
mov
or
and
pop
mov
cmp
add
daa
or
or
call
add
xchg
cmp
lods
jno
jne
sarb
inc
mov
push
mov
jmp
je
mov
dec
lret
es
aad
int
out
and
mov
sbb
lea
jle
adc
fists
jg
push
xlat
arpl
scas
icebp
sub
xchg
andb
adcb
push
ret
push
sub
jo
xchg
and
dec
loopne
iret
mov
jne
rcr
or
push
jno
push
out
movsl
xchg
push
mov
mov
inc
adc
lods
pop
scas
sbb
repz
clc
lcall
lret
add
lds
pop
fdivs
ljmp
mov
push
aaa
sub
psadbw
add
clc
adc
daa
add
xor
push
mov
test
xor
and
mov
aas
mov
dec
jl
icebp
dec
sarb
call
hlt
out
cmp
or
add
adc
out
mov
enter
cwtl
nop
das
dec
inc
js
dec
js
push
add
stos
out
or
add
and
mov
push
cmpsb
jae
xor
push
xlat
aad
and
pop
push
fstpt
push
push
xor
jb
nop
jns
aas
or
gs
in
in
movsl
and
imul
sti
lock
inc
in
scas
add
hlt
push
dec
ret
dec
ss
adc
repnz
lcall
push
int
and
ljmp
dec
sbb
jns
mov
and
lahf
idiv
xchg
mov
cmp
mov
add
cmp
repz
pop
lahf
dec
data16
test
or
xchg
and
jbe
add
mov
imul
ljmp
aam
jno
sbb
mov
pop
inc
lcall
xchg
xchg
arpl
mov
negb
stc
or
pop
mov
sti
pop
inc
lret
cwtl
divw
pop
mov
xchg
jne
imul
jecxz
cmc
icebp
cmp
movsl
add
out
inc
enter
test
rcll
jecxz
popa
fmul
pop
or
mov
mov
in
pop
cmp
pop
dec
sti
orb
push
push
cwtl
loop
negl
outsl
cmp
ljmp
pusha
sub
xchg
sbb
xchg
xor
cmpsb
fldt
imul
xchg
jb
loopne
sbb
adc
aad
cmp
cmp
mov
jnp
xchg
xchg
adc
and
rep
jns
sub
outsb
pop
lea
xchg
popf
xchg
add
push
cmp
jmp
loop
iret
sub
jno
je
dec
or
notb
in
inc
jbe
movsl
imul
jp
add
or
cwtl
cmp
push
in
push
lret
imul
std
popa
mov
test
inc
and
mov
add
push
ret
sub
mov
mov
pop
adc
mov
push
testl
orb
iret
in
xchg
sub
daa
imul
incl
xor
and
orl
or
je
roll
pop
cld
mov
cmp
mov
test
iret
xchg
int3
or
aaa
pop
pop
scas
outsl
sub
xchg
movsb
filds
xlat
mov
mov
scas
sbb
adc
nop
les
rcr
shll
jb
adc
and
lods
push
ljmp
shrb
aam
ret
test
mov
inc
add
push
out
cltd
icebp
test
xor
arpl
dec
mov
mov
imul
test
adc
sbbb
fcoms
adc
aas
pop
fdivs
stc
adc
insl
movsl
add
bnd
push
je
jmp
inc
ds
xor
fstps
push
jg
fiaddl
xchg
movsb
stc
cmp
jge
or
data16
push
aad
fnsave
fwait
cmc
inc
mov
repnz
dec
adc
or
lret
pop
pop
dec
mov
roll
mov
sbbl
jae
in
and
loop
add
lods
out
jg
cmovs
adc
lock
xchg
bound
lds
lret
pop
xchg
add
in
xchg
and
ljmp
add
cmp
push
adc
jno
sub
jae
loopne
scas
repnz
push
out
repz
shrl
pop
arpl
lods
sti
nop
popl
adc
mov
rol
sbb
gs
mov
cmp
dec
xor
subb
mov
ss
or
shll
repnz
leave
movsb
pop
inc
inc
into
and
jg
aad
pop
adc
ss
roll
push
dec
rcl
mov
scas
inc
push
hlt
hlt
push
ret
mov
iret
sti
jno
aas
ds
nopl
inc
lcall
sub
dec
lcall
jp
or
adc
inc
sub
dec
pusha
inc
in
bound
inc
mov
and
cmpsb
test
fs
sbb
lock
adc
adc
int
ljmp
cmp
jg
les
push
dec
jbe
cmp
sub
test
lods
mov
jo
or
sbb
xchg
or
jbe
sub
adc
outsl
out
sub
cmp
or
jns
mov
push
in
outsl
data16
cltd
mov
stc
clc
mov
or
and
push
cmp
or
inc
fisttpl
stos
pop
pop
in
cwtl
cmp
mov
jl
inc
mov
std
cld
fs
push
or
jl
push
jecxz
data16
ret
inc
cs
push
inc
lea
or
cmp
movsl
inc
mov
and
inc
cmp
aam
pop
cld
pop
insl
cmpsb
inc
mov
cli
lret
cwtl
jae
pop
pop
mov
mov
cltd
movsl
repnz
pop
and
jecxz
sbb
xchg
cmp
cmp
cs
sti
mov
dec
lods
cmp
fwait
repnz
bndstx
cmpsb
out
push
jnp
aaa
and
les
mov
lea
xor
or
push
xchg
add
loopne
fwait
adc
cmpsb
xlat
xchg
dec
insl
js
mov
cmpsb
push
notb
orl
adc
jae
mov
je
movb
dec
add
mov
cs
cmp
sbb
cwtl
push
lods
repnz
lahf
or
jnp
lds
jmp
mov
push
jnp
fisttps
fwait
fwait
xchg
std
cmc
push
jne
rcr
adc
mov
mov
and
sub
xor
rcl
sbbl
jecxz
cmp
dec
jl
cmp
cmp
sbb
add
stos
js
test
scas
dec
mov
sbb
inc
cmp
sub
cs
and
or
xchg
pop
add
mov
sub
pop
and
adc
stc
jecxz
xchg
mov
cmc
mov
hlt
in
mov
mov
xchg
or
push
xchg
mov
lock
xchg
xchg
neg
or
pop
jle
scas
xor
test
jnp
lock
scas
inc
pop
jge
mov
pusha
dec
cmp
inc
push
in
popf
fadds
pop
ss
inc
mov
push
out
jne
lret
leave
inc
std
inc
pop
popa
hlt
mov
mov
add
jle
push
fmuls
xchg
ret
jno
aam
adc
and
std
mov
jg
mov
push
popf
pop
mov
jne
stc
cmpsl
adc
ret
xchg
lock
movsl
xchg
inc
jecxz
mov
push
mov
setg
add
xlat
cmpsb
cmpsb
lret
test
mov
push
stc
test
ficoms
cmp
ljmp
mov
adc
dec
adc
and
aad
xchg
add
outsb
fucomip
in
in
adc
stc
fdivs
sbb
and
stc
pop
loope
ret
popa
lods
movsl
jge
aaa
or
pop
push
add
aas
jle
push
cmpsl
xor
fcmovnb
sti
add
or
int3
cmp
lods
xchg
mov
mov
pop
les
sub
push
cmp
sbb
inc
pop
repz
jg
ficomps
jb
mov
in
dec
sub
cmp
mov
pusha
cld
outsb
outsb
lds
xchg
test
sbbb
adc
mov
dec
ret
imulb
inc
pop
fmull
test
sbb
mov
insl
add
sbb
pop
mov
daa
xlat
inc
cmc
int
dec
sub
mov
and
stc
xor
mov
inc
sahf
in
sahf
and
mov
lock
clc
sarl
mov
pop
shl
mov
pop
dec
insl
xor
popf
cmp
adc
and
lahf
fisttps
inc
dec
add
jnp
add
mov
inc
and
mov
rcrb
ret
fildl
and
dec
xchg
xchg
addr16
pusha
pop
sbb
ja
jle
mov
mov
insl
jo
jle
std
jo
add
xor
outsb
push
cmc
test
dec
jbe
pop
clc
gs
movl
push
xor
cmp
add
arpl
test
jl
mov
sti
popl
sbb
jae
out
pop
jb
stos
mov
add
rol
adc
pop
mov
out
dec
sbb
cmp
dec
clc
int
mov
xor
add
adc
fwait
add
addr16
ret
push
ds
xor
inc
xor
jne
je
jae
sbb
insb
pop
leave
and
scas
pop
popl
or
int
xor
cltd
jo
or
xor
bound
mov
adc
jg
lods
jb
xor
lods
or
dec
inc
jl
in
xchg
shlb
or
mov
test
mov
movsb
arpl
fdivrs
sbb
shr
cmc
aad
outsb
push
mov
insb
push
in
mov
mov
jns
xchg
lcall
cmp
rcll
lret
daa
cmp
mov
rorl
push
sarl
lods
rcll
lret
test
addr16
imul
inc
xor
mov
iret
mov
bound
mov
imul
sti
stos
fbld
dec
and
je
push
jmp
fmuls
nop
mov
scas
movsb
inc
jmp
popf
mov
shl
adc
pop
jge
push
mulb
cmp
inc
lahf
stos
jp
aam
out
packssdw
js
pop
push
pop
inc
inc
dec
xchg
jle
jp
lds
pop
sub
aas
cwtl
add
cmc
aaa
cs
nop
pop
in
pop
xor
pop
add
dec
pop
repz
in
jmp
fists
rcr
cmp
push
dec
pop
fwait
std
inc
jbe
inc
lds
pop
test
cmp
int
and
icebp
stc
fnstcw
stos
mov
scas
inc
jge
add
data16
in
fists
dec
nop
jb
sbb
sub
pop
subb
insl
aam
adc
ljmp
dec
inc
sbb
push
adc
and
sub
mov
cmp
sbb
js
jge
or
dec
mov
aaa
jo
mov
out
movsb
sub
mov
fcomps
sti
leave
ljmp
sar
sahf
cmpsb
cmp
sub
fmuls
dec
shll
int
scas
push
mov
fdivl
mov
mov
add
lods
dec
xor
or
test
mulb
and
mov
mov
pop
pop
testb
mov
in
pop
mov
sbb
ret
test
mov
mov
lods
shlb
pop
lret
out
or
mov
sbbl
in
js
js
push
test
mov
push
xor
in
dec
mov
mov
imul
inc
pop
push
jbe
jne
push
inc
mov
addr16
notl
inc
adc
pop
bound
cmp
jle
ja
xchg
adc
dec
arpl
shl
fs
lret
push
iret
iret
out
sub
fldcw
or
sub
xor
fldenv
mov
fistpl
bound
push
popa
jp
stos
nop
cmpsl
fcomps
clc
in
rcll
lods
mov
dec
addr16
aad
icebp
sub
jg
jg
hlt
mov
negl
lods
adc
pop
sub
inc
push
cs
push
shl
movsb
push
bound
jne
mov
xorb
jne
xor
cwtl
andl
sub
lcall
or
adcb
repz
sahf
lods
xor
mov
adc
mov
or
push
imul
jp
stos
xchg
aad
xchg
mov
sub
sub
mov
jns
and
lods
push
pop
add
sbb
aaa
push
outsb
scas
shlb
add
push
xor
push
or
es
shll
adc
pop
add
iret
filds
cmp
pusha
repz
cmc
dec
aam
mov
mov
lods
jge
scas
or
inc
dec
mov
push
mov
adc
mov
or
add
adc
jne
xor
addr16
fcoml
xchg
pop
incl
add
ljmp
scas
cwtl
jno
push
push
lret
mov
ds
add
dec
sub
je
xorb
add
dec
mov
pop
pushf
adc
lock
in
fsubrs
add
divb
mov
adc
push
jne
and
aas
call
sbb
mov
out
pushf
sahf
mov
cmpl
fistps
sbb
jg
inc
mov
inc
or
inc
cmp
das
aas
xor
mov
cmpb
ja
shll
mov
fwait
jecxz
add
push
scas
les
pushf
mov
bound
fmull
xlat
icebp
mov
push
push
add
mov
stos
enter
lret
pop
stos
lret
sbb
mov
inc
mov
xchg
pop
cmp
fwait
scas
out
es
cltd
out
cmp
xor
jecxz
inc
sti
cmp
cmp
pop
in
sub
jae
dec
insl
mov
fsubr
sub
punpckhwd
nop
inc
mov
jge
jp
das
cltd
jmp
stos
push
pop
xlat
repz
es
mov
adc
and
mov
sbb
jmp
mov
cltd
leave
and
icebp
orl
mov
inc
decb
aad
imul
cmp
add
sub
jp
mov
mov
xchg
pop
mov
jle
cmpl
mov
sbb
mov
popf
and
jmp
mov
clc
scas
mov
inc
cmp
mov
mov
ret
mov
inc
push
out
xor
inc
in
and
lcall
call
lahf
gs
xchg
jns
loop
sbb
es
xlat
aaa
or
xchg
stos
push
adc
movsb
sub
aad
adc
dec
cmp
int3
inc
stos
in
fldt
push
cmp
incl
or
dec
cld
mov
shl
push
and
mov
cwtl
sti
cmpsl
xlat
aam
add
sbb
xchg
ja
mov
daa
nop
lahf
leave
ficomps
sbb
enter
rorl
ds
outsl
pop
dec
cmpsl
sbb
fidivrl
dec
test
jg
mov
movq
mov
enter
js
jnp
arpl
xchg
and
in
or
xlat
fsubp
or
or
xchg
lret
mov
sbb
shll
jne
dec
push
inc
inc
xchg
jbe
outsb
inc
into
rcrl
enter
movb
in
fstpl
ficoml
stc
xorb
xor
mov
xchg
setae
and
inc
push
repz
inc
inc
mov
pusha
ss
ss
sti
in
mov
in
repnz
notb
mov
dec
mov
data16
jne
cmp
repz
ja
or
leave
mov
ret
push
dec
negl
jmp
hlt
sti
adc
cmp
jmp
out
jge
pop
dec
inc
sti
ja
push
mov
shlb
sbb
insb
rolb
out
lcall
fdivs
adc
notb
jle
in
sbb
les
mov
mov
push
insl
out
repnz
push
popf
or
ljmp
push
je
movl
push
jl
fwait
push
insl
mov
mov
aas
and
mov
addl
in
fisubrs
or
push
icebp
inc
arpl
xchg
jns
fdivrs
sub
test
jge
testb
dec
mov
jl
scas
or
inc
inc
test
or
and
xor
ret
cmc
and
out
scas
fldcw
push
xlat
ja
imul
xchg
xchg
jl
adcl
sahf
inc
xor
in
insl
jo
dec
push
cmp
pop
mov
dec
cmp
mov
add
cli
movsl
inc
add
fisubl
adc
or
inc
unpckhps
mov
fs
push
clc
and
orl
fisubs
mov
push
adc
leave
loopne
adc
mov
iret
maskmovq
idivl
icebp
add
and
cmp
jae
jl
and
ret
jmp
pop
cmpsl
iret
mov
movsb
loope
rcrl
sti
dec
pop
jle
ret
in
js
dec
pop
gs
and
cmp
jns
loope
jmp
fsubp
fwait
jno
outsl
cmp
lgs
lods
dec
mov
jle
movsl
leave
call
adc
jnp
sub
outsl
ja
xchg
sub
xbegin
mov
push
cltd
sbb
addr16
movsb
ljmp
xchg
pop
dec
mov
mov
push
int
cmp
or
int3
push
mov
mov
arpl
xchg
xor
jmp
call
ss
push
test
mov
ret
sub
pop
lds
xchg
dec
inc
jecxz
loopne
sub
ds
mov
cmpsb
test
add
add
ret
sarl
and
jns
scas
inc
cmpsb
subl
adc
mov
mov
pop
jo
inc
mov
and
push
jae
xor
test
std
pop
imul
dec
mov
mov
mov
mov
sub
add
sarl
cld
imul
pop
popa
mov
outsl
add
pop
pop
fstpl
sbb
nop
pop
mov
add
pop
shl
mov
fincstp
scas
jns
je
sahf
loopne
ja
xor
loop
sub
inc
mov
add
mov
cmpsl
pop
and
int
push
sbb
ss
or
repnz
jle
sub
push
jp
dec
jle
into
stos
mov
mov
push
xchg
jns
sbb
push
push
aas
stos
adc
xchg
cmp
jge
subb
jno
into
sbb
push
sti
out
mov
mov
shrb
das
icebp
sbb
iret
sbb
sbb
xor
stos
adc
and
push
or
sub
and
iret
ret
mov
push
xchg
pop
xchg
mov
mov
dec
mov
in
in
fwait
movsb
ja
std
sbb
pop
cmp
cmc
popa
repz
xchg
jne
je
mov
out
sub
insb
iret
test
cmpb
popf
aas
scas
pop
lahf
jmp
add
in
and
je
or
and
and
adc
jge
ficoml
xchg
jns
add
ds
dec
sbbl
adc
and
or
bound
sub
xor
fmull
ret
mov
or
or
xor
pop
adc
mov
pop
mov
and
in
popf
loopne
dec
mov
sahf
add
mov
jnp
and
inc
xchg
push
test
mov
add
xor
inc
out
adc
lret
push
aas
arpl
xor
push
pop
arpl
fnsave
dec
test
pushf
sti
mov
or
xor
rcrb
dec
fxch
lods
xchg
cmpsb
xor
xchg
fcompl
lret
cmp
mov
sbb
aad
dec
add
scas
rorl
out
das
xor
cli
mov
mov
mov
xlat
daa
test
and
xchg
or
dec
adc
ret
inc
sub
xor
mov
je
aam
testl
adc
mov
cmc
rolb
pop
add
dec
push
fdivrs
and
jg
ds
aaa
sbb
in
xor
fs
into
cmp
enter
call
cli
sub
dec
iret
outsb
cmp
stc
shlb
andl
dec
pop
and
push
call
push
icebp
jmp
push
pop
sub
je
jnp
test
jne
lds
mov
push
out
cmp
pop
hlt
mov
das
test
add
shl
clc
jecxz
xor
in
and
je
inc
add
inc
shl
jle
mov
adc
out
xor
inc
bound
jne
mov
popf
cmc
rcrl
adc
mov
inc
dec
sahf
and
fidivl
push
push
int
pop
cli
addb
daa
ret
int
mov
adc
popf
push
xor
mov
xchg
sub
jg
ss
sti
test
outsl
pusha
mov
and
adc
hlt
lds
int
cmp
xor
xor
out
or
sub
jge
xor
add
rorb
pop
imul
sahf
data16
and
lret
or
jp
cmp
sub
movups
jge
pop
out
cmp
jle
idivl
inc
in
sarb
jns
mov
addr16
arpl
xor
test
mov
aad
outsl
imul
sub
sub
jl
lret
aam
out
mov
adc
inc
or
mov
adc
in
xlat
sub
les
in
cld
cwtl
xor
xor
jae
dec
int3
sarb
fisubl
push
cwtl
popa
fldcw
push
mov
fisttps
push
mov
mov
adc
loope
fiadds
push
movsb
in
icebp
jge
and
jle
inc
in
and
sbb
mov
push
mov
std
shl
add
sub
push
mov
mov
jnp
out
addr16
jle
sub
outsl
mov
ficoml
cltd
mov
sub
sbb
mov
or
stc
lods
push
mov
xchg
dec
das
hlt
cmp
sbbb
add
push
push
fsubl
dec
hlt
cld
pop
in
loopne
mov
jl
xchg
inc
cmpsb
iret
pmaxub
sbbl
mov
xchg
hlt
jb
les
jp
test
dec
ljmp
test
inc
sahf
iret
xor
aam
es
nop
sub
in
cmpsl
jle
or
add
sbb
jnp
in
movsb
jg
xor
pop
add
jp
push
fimull
in
imul
pop
gs
popf
notb
je
in
incl
cmp
mov
pextrw
out
imull
rorb
fcomps
fmull
mov
mov
jg
add
in
mov
adc
jo
aaa
add
fs
clc
ret
divb
and
and
rcl
cwtl
push
pop
mov
imul
and
add
addr16
push
jmp
mov
sbb
data16
adc
jne
outsl
dec
sbb
fwait
sub
adc
sub
iret
shlb
fisubrs
push
fucomi
popa
jp
out
stc
inc
inc
xor
push
push
das
xor
call
sub
hlt
pop
call
or
xchg
gs
ret
rclb
out
jge
xor
jbe
iret
cmp
data16
push
sbb
lods
mov
lea
pop
lcall
aam
test
lret
push
fstl
xchg
xor
popa
inc
das
notb
pushf
cmp
dec
and
sbb
and
fmuls
xchg
aaa
outsl
fsubrs
jge
aaa
pop
in
lcall
push
mov
sbb
pop
cld
pop
dec
xor
dec
je
mov
lods
fiadds
xchg
jno
inc
addr16
test
xchg
mov
pop
in
jo
stc
mov
push
jo
cmp
xchg
es
jno
mov
pop
mov
push
xchg
int3
push
xchg
push
sub
sub
out
xor
fcoms
push
mov
xor
adc
into
xchg
aas
loopne
sub
pushf
cmp
std
add
mov
imul
testb
rep
cli
mov
mov
mov
iret
daa
fsubl
sub
jns
pushf
movsl
sbb
ret
subb
js
sub
xor
lods
xchg
mov
inc
sub
add
sub
dec
dec
push
inc
xchg
jg
mov
out
mov
ss
push
outsb
dec
cmpsb
dec
mov
mov
hlt
aas
ds
ret
push
cmp
jmp
scas
shrl
rcr
mov
push
movsl
push
sbb
xchg
roll
cmpsb
imul
loope
fidivrl
fwait
pushf
push
xchg
pushf
iret
pop
or
add
lock
xchg
lret
xor
xor
and
push
popa
stos
pusha
mov
pop
popf
mov
stc
xor
movsb
cwtl
jo
cmpl
iret
or
sbb
mov
aaa
or
inc
imul
test
dec
loopne
scas
mov
fstl
xchg
pop
add
push
stos
das
orl
or
xor
leave
lret
fisttps
add
dec
adc
mov
sbb
pmaddwd
push
ret
movd
pop
push
aad
nop
sahf
and
roll
imul
test
scas
jge
fiaddl
inc
ret
push
out
push
mov
pop
xchg
pop
sbb
xchg
ljmp
clc
or
inc
cmp
cs
out
jmp
out
push
stc
jmp
jo
mov
pop
cmp
mov
sbb
test
movsl
rol
mov
fistpll
pop
js
pop
fcmovbe
cmp
xchg
sti
imul
sbb
inc
lods
dec
scas
push
je
push
rorl
jbe
icebp
push
jmp
push
out
bound
je
roll
dec
incb
pop
repnz
shrl
sbbb
mov
lcall
shl
push
push
mov
push
mov
dec
sbb
xlat
pop
cmpsl
dec
ret
pop
int
pop
sbb
push
jg
push
push
loop
push
test
lds
mov
ret
sti
xchg
out
and
mov
fcomps
push
imul
xchg
xorl
adc
test
pop
ret
add
inc
or
ja
cmp
sbb
or
mov
sub
or
out
sbb
jl
pop
mov
insb
push
adc
fcoml
xor
xor
add
lods
cmpsl
fcoms
aaa
push
ss
or
add
xor
push
cmp
jb
inc
xor
add
scas
stos
out
sbb
cmp
dec
shl
pop
push
adc
lock
sub
xchg
jp
daa
testl
enter
addr16
sub
or
adc
lods
mov
adc
lahf
pop
jmp
push
mov
push
cmpsl
fwait
andl
enter
out
inc
cmp
push
outsl
and
cwtl
cmp
out
mov
sbb
fidivrs
inc
dec
jle
push
and
pop
aas
jl
leave
test
xchg
pop
jo
arpl
inc
notl
sbb
or
sbb
xchg
push
push
pusha
xchg
lcall
inc
add
jecxz
lea
clc
xchg
ss
cmpsb
mov
ja
push
mov
subl
adc
inc
ret
adc
shll
xchg
dec
mov
iret
dec
sbb
cmc
push
push
lret
test
mov
adc
push
cmc
ds
in
orb
leave
int
push
sahf
aam
push
lods
stos
xor
or
aam
daa
xlat
icebp
sbb
cmp
jae
lret
dec
adc
inc
popf
pop
pop
mov
shll
xor
mov
ffree
sbb
mov
stos
pop
adc
ficoms
ret
mov
out
fwait
fwait
jnp
xchg
aam
cltd
mov
mov
mov
and
adc
adc
rclb
icebp
test
cmpsb
sbb
or
in
xchg
rcll
inc
mov
lds
jo
push
sub
mov
jbe
jmp
in
mov
aam
mov
jno
dec
lods
jmp
mov
inc
sub
xor
fdivl
out
cmc
jb
sub
mov
test
lret
sbb
cmp
and
lds
cwtl
repnz
sub
mov
rorl
call
and
pop
aad
and
loopne
pop
sub
into
scas
shrb
ja
divl
mov
adc
es
sbb
inc
je
outsb
das
pop
es
mov
push
lret
lods
rolb
js
lahf
adc
fstpl
inc
sub
jbe
xor
mov
xchg
ret
xor
adc
scas
outsb
or
sbbb
mov
cmp
lret
fucom
inc
adcb
push
std
and
or
in
xchg
push
in
sbb
int
aad
sbb
xor
sbb
ljmp
fstpl
dec
mov
pop
leave
jg
out
fsub
or
fwait
data16
int
les
movsl
pop
adc
mov
or
cmp
mov
sarl
xchg
inc
fdivs
in
push
jo
jo
add
rcrb
mov
mov
push
cltd
lds
sub
inc
movsl
xchg
rol
xchg
rolb
push
cmc
testb
dec
filds
insb
push
xchg
sarb
add
sbb
push
dec
xor
mov
xchg
fildll
orb
xlat
sarb
or
popf
gs
aaa
dec
shll
loop
jnp
mov
test
sub
cwtl
jl
and
push
or
mov
add
cmp
jp
sarb
push
inc
fnsave
ds
es
mov
movb
jle
inc
mov
int
sub
fnstenv
lds
xchg
cmp
loope
sbb
fs
inc
jo
lahf
pop
call
test
mov
cmpsl
or
mov
add
fs
shlb
mov
mov
fbstp
dec
pushl
pop
aas
pop
adc
aaa
std
add
pusha
sbb
sub
std
scas
xor
fsubrs
xchg
je
clc
push
fnsave
push
push
sub
int
arpl
insl
mov
cmp
push
scas
jecxz
mov
icebp
mov
adc
lahf
std
and
fwait
pop
jne
dec
sub
lahf
push
insb
jmp
cmpsb
aam
test
out
xchg
jnp
sbb
and
out
loope
adc
pop
sti
fldt
outsb
jno
psraw
jp
cmpsb
notb
pop
adc
jo
xchg
jo
decb
mov
aad
sbb
ljmp
jb
out
jae
sub
rclb
pop
out
xor
and
test
roll
stc
int3
aad
mov
xchg
popa
test
add
loopne
hlt
pop
pop
pop
xchg
inc
fiaddl
cmp
adc
pop
popf
stos
inc
jge
cmc
nop
mov
pushf
sbb
loopne
push
adc
addr16
out
dec
sbb
add
cs
insb
jnp
nop
pop
add
andb
jmp
andb
sbb
jbe
inc
and
iret
fdivl
xor
push
sbb
or
xchg
adc
popf
mov
jmp
inc
sahf
sub
cmp
stos
pop
in
jnp
scas
sub
jns
xchg
mov
pop
fcomp
lock
cs
ficomps
repnz
push
loope
xlat
fisttps
sub
jae
xchg
pop
xchg
mov
arpl
dec
aaa
sahf
ja
cmp
lret
pop
or
cmp
aas
pop
cmpsl
xchg
or
hlt
add
ljmp
cmpsl
cmp
or
xor
pushf
adc
cltd
sub
stos
hlt
outsb
add
js
jp
je
repz
icebp
push
mov
sub
in
imul
mov
push
std
inc
mov
xchg
lahf
insl
add
cli
icebp
inc
pop
iret
cmp
jecxz
xor
sbbb
inc
mov
ficompl
inc
jno
jo
and
dec
mov
inc
mov
mov
mov
popl
jmp
jbe
sub
mov
loop
adc
ljmp
mov
dec
les
arpl
cmpsl
iret
xchg
push
mov
or
dec
mov
lahf
and
xchg
je
adc
mov
cwtl
or
in
in
adc
cmpsl
mov
je
push
ret
outsl
testb
inc
pusha
pop
push
mov
cmp
jp
xchg
pop
jp
cld
into
fwait
adc
addl
cwtl
jge
rorb
mov
pusha
or
subb
cltd
xor
dec
daa
shll
scas
mov
divl
nop
sahf
jmp
inc
icebp
mov
pushf
xchg
jne
outsl
icebp
stos
jl
jge
test
push
add
pop
fcmovb
mov
pop
pop
push
test
xor
lea
int3
cltd
cwtl
cmpb
nop
and
and
sbb
mov
pop
gs
jge
jo
pop
inc
dec
adc
xchg
bound
jmp
xor
cmp
cwtl
mov
lods
lret
cli
jge
negw
nop
orl
scas
xchg
jns
jbe
jecxz
adc
inc
mov
mov
pushf
lret
fwait
xchg
insb
add
ss
inc
inc
cwtl
cmp
xor
cltd
or
mov
mov
jno
mull
adc
es
sbb
push
and
int3
rcrb
cmp
imul
call
pop
popa
push
cltd
stc
lock
inc
pop
mov
sbb
mov
jb
mov
jbe
or
mov
mov
adc
lock
xchg
negl
frstor
int3
cmp
push
mov
or
cmp
mov
js
or
sbb
ljmp
stos
mov
jb
inc
cwtl
jecxz
pop
mov
cmp
mov
into
lret
scas
lock
addr16
adc
dec
bound
xor
notl
sbb
fisubrl
mov
popf
dec
mov
loopne
inc
jge
roll
mov
or
vmovd
or
pop
je
out
mov
dec
push
mov
fisubl
lods
mov
int
inc
push
mov
sub
lcall
loopne
mov
movsb
int3
ret
cmpsb
negb
xchg
mov
jg
test
and
mull
add
pop
mov
pop
std
inc
iret
scas
push
lock
pop
adc
rcrb
and
sub
sti
mov
popf
dec
mov
mov
addl
dec
imul
add
outsl
xor
push
cli
outsb
andb
fidivrl
popf
mov
jns
call
xlat
xor
scas
ds
add
cmpb
xchg
cltd
pusha
roll
lret
dec
xchg
loope
or
inc
out
mov
xchg
jnp
mov
data16
mov
add
jge
dec
sti
call
mov
iret
mov
pusha
enter
mov
enter
mov
sbb
incl
mov
dec
cmp
mov
arpl
pop
and
testl
sbb
out
sbb
aaa
xchg
dec
inc
and
pushf
fbstp
pop
cmp
mov
add
cmp
xchg
or
lret
lret
daa
js
or
dec
pusha
sbb
jbe
push
dec
add
xchg
fisubrl
lds
pushf
mov
and
icebp
mov
shrl
test
mov
jae
loopne
bound
stos
add
dec
mov
xchg
mov
lcall
es
sub
jne
popf
and
mov
cmp
sbb
loopne
std
insb
pusha
xor
and
xor
lock
mov
adc
mov
out
add
fwait
in
shlb
aaa
sbb
in
arpl
push
mov
cmp
cltd
cltd
dec
mov
fistl
xchg
lret
pop
dec
xlat
dec
js
sbb
dec
lcall
clc
or
out
inc
mov
lret
subb
xor
movsb
orb
cli
test
inc
pushf
call
dec
push
hlt
ds
loope
lcall
add
push
push
mov
mov
popa
loop
dec
das
sbb
daa
pushf
sbb
xchg
push
mov
scas
outsl
add
pop
cmp
mov
enter
imul
sub
cmp
dec
xor
fistl
mov
xor
insl
cmc
cld
test
in
xchg
ret
sub
mov
gs
cmp
insb
into
cmp
in
into
ret
lcall
xchg
dec
xor
adc
sub
mov
into
adc
ljmp
adc
in
inc
in
cmc
movsb
cmp
pop
jne
xchg
iret
scas
adc
xchg
mov
test
mov
loopne
adc
and
in
or
test
fisubs
fwait
jp
cmp
mov
mov
aas
push
cmpsl
xchg
pop
push
stc
adc
enter
fisttps
dec
mov
mov
scas
and
aam
shl
xchg
jle
pop
pop
clc
mov
dec
xchg
xor
xor
add
and
mov
xor
mov
xor
pop
dec
fisttps
mov
jnp
pop
div
fdivr
jb
outsb
xchg
pop
mov
inc
mov
daa
and
fwait
dec
and
lock
xor
inc
add
cli
mov
fxam
int
pop
mov
sbb
movsl
adc
leave
dec
cmp
repnz
clc
stos
push
pushf
fdivrl
out
push
aad
cmp
jns
in
pop
call
and
mov
jae
ds
sub
js
in
repnz
mov
mov
add
pop
fdivrs
fsubrs
xchg
dec
mov
mov
sbb
pop
mov
lods
bound
jbe
out
arpl
outsb
mov
roll
adc
cltd
mov
or
mov
inc
cmpsb
xchg
lcall
ss
dec
push
and
push
inc
cwtl
rclb
pusha
xchg
lahf
fidivs
xchg
sbb
adc
push
inc
sbb
push
lcall
adc
inc
aam
ds
xchg
subl
call
dec
inc
pop
or
cmpsl
ljmp
loope
mov
movsb
adc
inc
inc
stc
push
sti
lret
jne
inc
inc
jne
testb
cmp
jle
jo
jne
scas
adc
cmp
aas
inc
sub
mov
pop
sbb
cmpsl
ds
test
jo
cmp
movsb
lcall
mov
fstpt
test
pop
arpl
loop
sub
xchg
adc
push
cmp
fwait
lods
rorl
lods
imul
adc
int
adc
mov
aad
lock
jmp
or
loop
sbb
sbb
jg
and
fimuls
testb
mov
cmp
xor
cmp
adc
std
adc
loope
sbb
ljmp
movsb
jp
mov
mov
fildl
les
mov
cmp
mov
jbe
inc
pop
mov
jb
jnp
movsl
lret
mov
fcmovne
add
shlb
das
sub
subb
dec
xchg
lret
incb
sti
cmp
jg
sbb
addr16
inc
mov
repnz
jnp
dec
fcompl
mov
out
dec
shr
or
sbb
pcmpeqw
xchg
xor
cmp
adc
add
aam
or
or
mov
aaa
outsb
pushf
or
push
add
loopne
fisttpll
cltd
pop
mov
jmp
and
repz
fcmovnu
sub
frstor
dec
dec
inc
psubq
xchg
mov
mov
sti
or
mov
cmp
cli
nop
push
incb
in
xor
adc
jle
xor
mov
or
nop
stos
ret
inc
inc
stc
cmp
and
sbb
fnstsw
cmp
adc
ss
in
xchg
pop
lea
and
movsb
mov
push
inc
push
lea
cmp
jb
out
repz
inc
divl
shll
idivl
std
cmp
mov
emms
rclb
or
scas
jmp
sbb
in
sub
dec
xchg
lcall
loopne
pop
or
and
loope
xchg
mov
rol
push
outsl
and
pop
movsb
mov
nop
and
pop
push
jns
adc
lds
call
sti
add
mov
xchg
adc
jne
mov
leave
aaa
dec
sarb
sbb
bnd
stos
lods
inc
cli
xchg
fs
jb
pop
push
pop
das
inc
pop
ja
pop
rcl
ljmp
mov
imul
add
and
insl
mov
call
test
dec
xchg
jno
mov
inc
inc
popf
icebp
es
leave
dec
inc
dec
dec
add
jl
push
mov
jg
jp
pop
sbb
sahf
rorb
dec
and
or
and
sub
and
repnz
cmp
fimull
imul
in
inc
inc
daa
in
rcrl
bound
mov
adc
shrb
aas
xchg
jp
dec
aaa
aad
int3
jae
cmp
or
inc
stc
add
mov
cltd
mov
pop
addb
adc
mulb
scas
xor
into
sbb
in
ror
mov
dec
loop
push
fstpl
jg
in
xlat
cmp
enter
cmp
jle
jge
cli
push
out
xchg
loop
jbe
outsb
sbb
movsl
lahf
or
inc
cmp
cmpb
inc
test
pop
cmp
sub
mov
pop
cmp
adcb
cmp
or
adc
inc
js
aas
push
xchg
xchg
mov
push
ds
loopne
sti
and
pop
mov
lahf
xchg
pop
cmc
mov
sub
adc
mov
vpunpcklwd
adc
push
imulb
jmp
aaa
push
mov
ficoml
repz
mov
mov
clc
xchg
adc
mov
sbb
pop
and
mov
fisubrs
orl
or
mov
popa
ss
mov
repz
sbb
lret
xchg
and
adc
arpl
ljmp
push
ja
sub
sub
adc
sub
shll
test
int
pop
jo
push
mov
push
mov
scas
or
aad
push
pop
xchg
fldt
mov
andb
adc
gs
fwait
psrlw
mov
fldenv
cld
test
jecxz
pushf
xor
push
je
sub
mov
cmp
sti
stos
movsb
jp
sbb
xorl
inc
inc
es
stc
or
pop
adc
mov
push
cmpl
dec
stos
fldl2e
imul
adc
pop
rcl
mov
push
jbe
jmp
push
popa
cmovge
lods
push
xchg
mov
leave
in
add
shlb
mov
push
rcrl
cld
out
dec
inc
pop
add
popf
pop
push
sub
mov
fs
mov
idivb
cmpsl
sub
pop
stc
or
mov
int
les
lods
xor
imul
push
out
enter
add
xor
mov
fidivrl
rorb
lahf
push
xchg
mov
mov
insb
leave
mov
sub
ficoml
mov
xchg
sarl
push
pushf
imul
pop
stos
mov
sbb
adc
stos
and
test
aad
pop
cmpsb
push
hlt
xor
cwtl
sub
call
push
dec
mov
add
sbb
outsb
sub
lcall
xchg
inc
push
mov
lods
mov
cld
ret
adc
mov
mov
push
repz
cmpsb
mov
pop
push
xchg
sub
adc
xor
add
push
int3
fdivp
push
pushaw
inc
lahf
pop
push
and
shl
cmp
stos
inc
jmp
scas
mov
cmp
or
mov
jo
popf
and
aam
adc
add
pop
mov
sub
es
mov
daa
loope
and
push
sti
sbb
xchg
dec
and
sub
push
push
dec
lods
or
xchg
dec
testb
jecxz
xor
scas
pushl
cli
mov
imul
push
jecxz
mov
aas
xchg
jmp
xlat
cmp
push
add
xor
mov
dec
rol
mov
insb
dec
in
stos
and
sub
dec
mov
mov
jmp
push
mov
sub
dec
xor
push
nop
mov
inc
xchg
fprem1
test
inc
data16
add
xor
subb
mov
and
xor
xchg
test
das
add
int3
xchg
jl
clc
out
sbb
mov
sbb
dec
sbb
imul
adcw
shl
movsl
xor
pop
and
addr16
push
lods
adc
scas
dec
push
leave
jl
jbe
fidivs
or
stc
adc
insl
movsw
mov
and
int3
mov
jnp
dec
in
fs
scas
and
neg
int3
sub
mov
scas
iret
jecxz
jmp
mov
iret
xor
imulb
xchg
add
clc
jae
gs
fldl
fldt
xor
aas
data16
dec
movsb
mov
adc
int3
inc
repnz
adc
sbb
dec
mov
bound
mov
jnp
jge
adc
jo
out
pop
gs
insb
mov
or
xor
pop
add
pop
lock
mov
inc
jecxz
fisttps
adc
fwait
push
test
xor
pop
and
push
add
push
jl
in
dec
mov
jecxz
fucomi
mov
inc
adc
jae
jecxz
jne
dec
pop
sbb
rcr
jne
int
ret
mov
ljmp
cmp
fld
mov
inc
sahf
sbb
mov
jge
xchg
xchg
fisubrl
jae
jge
nop
mov
call
shrl
cmp
divb
int
push
cmp
adc
mov
test
sbb
xlat
inc
or
or
adc
push
push
jnp
xor
push
pop
les
in
inc
daa
xchg
push
shrl
iret
sti
scas
sbb
adc
lcall
sbb
loopne
sub
sub
mov
lcall
add
inc
je
adc
sbb
subl
ss
adcb
lcall
mov
or
and
dec
pop
jne
jmp
es
shlb
ja
inc
mov
insl
mov
scas
in
xor
clc
out
hlt
pop
mov
scas
jns
fsub
add
in
xchg
push
xchg
dec
push
sbb
push
fstpt
dec
sbb
xorl
ret
fimuls
pop
adc
jmp
decl
push
aas
hlt
es
in
xchg
cmpsl
fadds
rcll
movb
data16
sbb
or
cmpsb
push
xchg
sbb
cs
ja
ljmp
mov
cs
addr16
roll
into
scas
jb
mov
inc
andb
aas
ret
lret
sbb
and
inc
xchg
add
test
sahf
xor
add
and
rcr
scas
cltd
or
pop
adc
insb
sbb
push
sbb
rcrl
xor
popf
rolb
idivl
push
pushf
pop
aas
loop
inc
ficomps
pushl
sbb
sub
scas
sbb
fmul
fisubrs
pop
jo
and
dec
addr16
mov
popf
jecxz
mov
lahf
fimuls
fistpl
xchg
je
loope
push
push
jo
sub
ret
jno
fsts
pop
movsb
and
inc
push
cmp
inc
push
movsb
xlat
add
push
xchg
pop
mov
lds
mov
hlt
mov
inc
fnstcw
dec
nop
add
jp
push
test
jge
and
xorb
test
mov
testl
lret
push
mov
cmp
sarb
cmc
or
repz
roll
cltd
jg
mov
lret
dec
mov
les
push
cmp
lods
arpl
fsubs
test
daa
in
and
sti
scas
outsl
rclb
mov
cltd
sbb
ficompl
rcr
int
xor
pop
outsl
or
push
or
inc
sahf
pop
mov
or
nop
subb
xchg
or
sbb
fcompl
arpl
sbb
mov
fistl
sarl
push
push
mov
outsl
andb
xor
gs
fidivs
sbb
jmp
and
stos
mov
jb
push
jnp
xor
and
sub
inc
fucomp
and
shrb
sub
ljmp
mov
cmp
mov
lcall
je
dec
rcrl
rclb
fldt
test
sub
mov
mov
sbb
cmp
add
into
xor
nop
cli
pop
sub
fnstsw
sub
xor
sbb
xor
jge
shll
mov
push
adc
and
mov
pop
scas
cmp
sub
add
repnz
in
xchg
mov
in
out
xchg
xor
jmp
sbb
shll
mov
hlt
fisubs
or
lahf
insl
pop
mov
mov
test
loopne
xor
xor
sahf
cmp
cmpsl
xor
inc
orb
mov
jns
cld
adc
adc
repnz
lods
cs
pop
mov
push
push
and
test
xchg
int
fists
rclb
cs
hlt
mov
arpl
pop
xchg
mov
push
movsb
ja
mov
sbb
dec
out
cmpsl
imul
jle
inc
cs
push
out
mov
or
rorb
inc
sub
lock
dec
jge
out
scas
inc
dec
add
pop
in
pop
rclb
sub
add
xor
jmp
pop
cmp
fs
push
jecxz
jle
mov
inc
lret
outsl
push
or
icebp
or
filds
mov
jae
aam
insl
cmc
and
aam
shlb
xchg
sbb
scas
push
xor
mov
cmp
daa
out
test
pop
incl
outsb
shl
outsb
imul
div
jns
pop
push
jns
mov
push
daa
ret
add
push
add
movsb
shlb
lds
mov
lds
stos
inc
mov
pop
inc
sub
mov
adc
mov
jbe
jno
sub
addr16
hlt
sbb
pop
iret
cmpsl
in
in
push
sub
fisubrs
loope
sbb
dec
aam
mov
in
aad
sub
in
adc
lret
ret
sahf
jl
cltd
sbb
xchg
inc
lods
movsb
repz
adc
inc
push
push
in
cwtl
dec
xchg
leave
imul
aad
pop
fcmovu
inc
mov
push
mov
daa
loope
jae
or
cltd
sub
mov
push
lret
mov
add
push
scas
lret
mov
loope
pop
push
mov
xor
test
std
in
mov
jl
cmp
add
cmp
lahf
mov
xchg
and
or
dec
xor
aaa
lock
pop
dec
push
dec
mov
xor
inc
pop
stos
cwtl
add
sub
fistl
popa
ret
and
xchg
out
je
pusha
mov
jecxz
pusha
mov
rorl
pop
mov
push
ljmp
pop
lret
test
pop
cmp
xlat
pop
mov
sbb
daa
mov
mov
mov
push
xchg
or
outsl
test
jb
test
sahf
push
fidivl
or
jecxz
push
es
mov
lcall
adc
stos
ret
sbb
adc
nop
aam
xor
mov
in
into
push
xchg
mov
insb
and
orb
ffree
and
mov
xchg
xchg
stc
mov
daa
mov
mov
aam
cwtl
arpl
lret
pop
gs
cld
mov
xchg
jecxz
jg
pushf
and
out
mov
int
or
xlat
and
stc
or
icebp
cli
in
sahf
ljmp
jbe
jb
fisubs
fmul
and
test
jmp
fisubrs
jl
xchg
aaa
or
rcrl
jmp
out
pop
movsl
mov
in
stos
nop
inc
jnp
mov
cmp
data16
ret
shlb
adc
std
in
push
add
pop
in
adc
or
jns
push
lcall
iret
divb
and
rcl
insl
movsb
out
lret
xchg
pop
xchg
xchg
lret
stos
daa
testl
jmp
xchg
jae
mov
insl
pusha
mov
pop
stos
xchg
pop
aas
cmc
out
iret
push
imul
or
cltd
jl
imul
sub
mov
push
dec
leave
es
pop
cmp
add
loopne
push
je
sub
je
shrb
les
sarb
mov
outsl
ret
popa
xlat
out
aas
in
mov
sahf
dec
nop
dec
mov
add
arpl
test
pop
xchg
push
adc
mov
push
test
movsl
sarb
sti
xor
lods
xor
sbbb
mov
push
pusha
mov
sahf
sahf
orb
out
push
cmp
pop
sub
pop
pop
mov
mov
push
rorb
push
stos
mov
jp
sbb
push
add
fnstsw
push
dec
sbb
xlat
test
adc
iret
rclb
mov
push
pop
pop
and
fadds
mov
jne
test
cltd
push
pop
ja,pt
mov
jne
jnp
jmp
xchg
xor
nop
lods
repnz
nop
add
jbe
aad
jbe
lcall
add
rcll
adc
cmc
insl
addr16
mov
or
dec
divb
stos
fdivrs
outsb
in
outsb
add
xchg
jge
or
sti
ja
xchg
cmpsl
add
in
pop
ror
aam
mov
imul
cmpsb
lods
pop
pusha
pop
add
ss
mov
rolb
mov
dec
sbb
adc
mov
jne
push
aas
das
mov
dec
cmp
push
lahf
outsl
movsl
pop
es
mov
sub
shlb
jp
mov
jns
mov
pop
je
and
push
adc
add
xchg
test
fwait
icebp
push
into
mov
sbb
out
stos
cmp
jmp
pop
adc
lea
jns
or
mov
sub
mov
and
mov
pop
and
jge
loope
push
outsb
push
fdivl
sbb
ss
jp
mov
jmp
mov
mov
dec
pop
mov
xchg
mov
test
push
shlb
mov
int
jo
imul
xor
adc
sbb
jl
lret
xor
sub
ret
and
pop
pop
sbb
idiv
jo
xchg
pushf
test
sub
call
movsb
pop
out
orb
movsl
les
cli
mov
lds
lret
mov
sahf
mov
in
enter
mov
lret
scas
cmpsl
pop
cmp
mov
outsl
aas
xor
popa
fidivs
frndint
idivb
adc
xchg
or
push
addl
jp
mov
ljmp
jae
push
scas
sbb
mov
lahf
in
shrb
jmp
into
and
roll
push
ss
mov
dec
cmp
pop
add
test
dec
adc
in
stc
push
movsl
push
xchg
dec
fnstenv
and
xorl
loop
mov
lea
xchg
xchg
mov
popa
push
push
jno
push
jno
sbb
ret
push
pop
outsl
jge
mov
insl
mov
addl
data16
aad
push
cmp
jnp
dec
cmp
xchg
shlb
xchg
adc
add
inc
fs
dec
sub
sti
xchg
test
mov
xchg
adcl
pop
call
test
nop
sar
cld
das
cmpsl
ja
nop
movsl
push
int
push
pop
mov
mov
dec
sub
ret
fcompl
pop
and
fiaddl
es
jge
filds
pusha
or
lods
push
inc
sub
test
into
jno
clc
shrb
xor
or
inc
das
aas
jo
or
mov
jl
pop
mov
pop
or
and
sbb
jl
popf
mov
mov
xlat
add
add
mov
mov
sub
std
rorb
jge
stos
cmp
sbb
in
test
scas
inc
push
pushf
mov
xchg
shlb
lret
fcomi
roll
in
mov
out
xchg
mov
inc
inc
inc
fwait
xor
adc
and
movsb
jnp
jecxz
xchg
push
fistps
jecxz
add
cld
into
jl
in
xchg
icebp
push
mov
movsb
adc
mov
les
popa
je
daa
and
outsl
mov
fsubrs
shrb
fwait
jno
push
jl
inc
or
fcom
nop
out
aam
test
xlat
add
hlt
popa
enter
outsl
mov
es
cmp
jo
add
xchg
xchg
pop
xlat
gs
sub
jge
daa
mov
nop
adc
jg
xor
mov
sbb
xor
xchg
mov
sub
mov
mov
xchg
jle
movsb
stos
or
dec
dec
push
sti
cwtl
call
ja
inc
stc
jne,pt
xor
or
xchg
xchg
and
frstor
and
mov
jecxz
fisttps
push
cmp
dec
or
inc
fbstp
push
les
shrb
sti
mov
adc
jg
sti
jp
ja
pop
mov
dec
xchg
mov
out
imul
add
push
je
xor
mov
push
ja
sub
push
jmp
cmc
and
mov
pop
lea
loope
or
faddl
aad
and
jle
xorb
outsl
je
mov
pop
push
mov
adc
adc
jae
lcall
cmp
aad
mov
out
jno
fdivs
mov
in
arpl
fdiv
push
add
outsb
fwait
adc
push
popf
ret
sub
sbb
cmp
daa
jle
push
mov
dec
int3
push
cwtl
out
push
mov
mov
pop
addr16
mov
cmp
mov
andl
mov
stos
gs
jmp
mov
mov
repz
out
sti
std
rcrl
xchg
push
or
push
or
loopne
pop
sub
xorl
push
sub
push
sub
ljmp
movb
lcall
jp
dec
cli
inc
mov
pop
jge
and
or
inc
cmpsb
cmpsb
test
aas
cwtl
lods
xorb
add
add
or
jns
add
shrb
lret
mov
mov
out
pop
mov
pop
push
ror
cmpsl
inc
in
sub
les
jmp
add
mov
daa
mov
mov
mov
insl
inc
outsb
out
js
subb
push
inc
push
xor
xor
xor
pop
ret
mov
arpl
rclb
jnp
enter
cli
inc
out
adc
addl
andl
in
pop
mov
loop
addr16
daa
push
scas
fdivs
cs
lds
pop
ficoms
pusha
call
mov
in
sahf
int
enter
xchg
mov
pop
and
mov
in
mov
pop
hlt
mov
dec
xchg
leave
call
pop
aas
dec
xchg
cmp
adc
jo
fs
lret
inc
push
out
jae
sbb
mov
mov
jge
push
dec
pop
and
mov
rol
ret
cmc
push
sbb
adc
mov
iret
or
lods
dec
push
daa
out
push
add
mov
dec
arpl
or
xchg
or
shll
cmp
jae
cmp
xchg
addb
inc
popa
jno
rorl
push
cmpsb
iret
lcall
jns
ret
andb
pop
mov
or
jo
jp
jge
or
lret
fs
test
xchg
std
lods
stc
in
ljmp
in
cmp
jo
aas
js
pop
loope
rorb
test
xor
xchg
lds
lock
out
push
push
cmp
mov
sbb
rcrl
push
lret
cli
jbe
orl
and
push
mov
jmp
loope
xor
cmpsl
mov
or
adc
xchg
in
dec
fstp
xchg
push
mov
daa
mov
jb
aas
ljmp
xlat
mov
mov
pop
sub
xor
test
imul
loop
push
pop
test
xchg
shll
push
xchg
sub
sub
dec
and
cmp
enter
and
and
jno
or
inc
scas
sbb
jbe
test
jnp
push
dec
pushf
pop
or
jbe
push
add
sbb
aad
jl
sbb
jmp
ret
lahf
es
or
pop
dec
adc
rcrl
sub
or
pop
lea
fs
xchg
sub
stos
mov
enter
and
mov
sub
scas
mov
mov
outsb
jae
rcl
add
js
jp
lods
sub
add
insl
iret
out
stos
and
lock
adc
and
insl
pop
pop
lret
lock
outsl
adc
mov
in
stos
test
mov
mov
push
flds
rorb
push
test
push
movsb
inc
rcrb
popf
and
xchg
pop
repnz
addb
rorl
shrl
mov
pop
adc
aad
mov
pop
jae
pop
mov
fistps
mov
pusha
ja
std
jne
jecxz
in
shl
or
pop
lds
xor
pop
mov
or
pmaddwd
push
cmp
les
out
push
sub
jl
out
sub
inc
pop
ljmp
jmp
xor
fistpll
lahf
in
add
call
das
sbb
cmpsb
inc
es
xchg
push
jb
push
pop
leave
loopne
push
inc
cmp
add
push
cmp
test
jg
outsl
mov
lock
sbb
in
xor
jo
mov
cmp
pushf
movsl
sbb
pushf
push
mov
and
dec
in
xchg
mov
pop
push
hlt
je
or
mov
cmp
stos
clc
and
push
dec
fidivrl
cs
mov
int3
cld
cmp
into
sbb
pop
dec
test
int
sahf
xor
addr16
mov
ret
movsl
aaa
sbb
fdivs
dec
xchg
pop
loop
xlat
or
inc
aas
jno
mov
jo
or
xchg
inc
pop
adc
push
addr16
fbstp
pop
ljmp
bswap
xchg
out
add
pushf
outsl
lds
dec
loopne
xchg
enter
push
and
cmp
mov
movsb
add
gs
rorl
leave
adc
adc
inc
gs
add
jb
jo
mov
mov
xor
inc
push
cmp
pop
iret
adc
insl
and
sbb
push
out
jp
jle
pop
mov
jge
xchg
adc
insl
sbb
mov
mov
outsl
xor
push
pop
pop
es
pop
loop
ljmp
add
cpuid
repz
sbb
push
push
fnstcw
dec
dec
push
in
pop
jp
xchg
mov
fidivs
cmpsl
addr16
ljmp
sti
mov
adc
movsl
cmp
mov
cs
or
clc
jbe
mov
int3
subl
jb
cmp
stc
or
sub
cmpsl
add
mov
pushw
pop
add
mov
push
stc
mov
jle
add
push
jg
addr16
sarb
movsb
mov
mov
hlt
push
xor
push
inc
inc
adc
xchg
mov
mov
rcrb
popw
push
cmp
mov
and
cmp
in
inc
pop
push
pop
sbb
sbb
mov
and
jmp
mov
fwait
stos
mov
stos
lea
sar
mov
aaa
push
pop
imull
jb
sub
icebp
sbb
sub
call
dec
mov
imul
xchg
push
or
add
cmp
mov
mov
cli
or
push
shr
pop
sbb
data16
jecxz
jne
sbb
cs
orb
add
movsb
mov
movsb
or
mov
xchg
flds
sahf
xchg
in
pop
insl
xchg
dec
imulb
xor
fdivrl
aam
hlt
lret
sbb
mov
push
out
xchg
push
cmp
sar
mov
cmp
sub
cli
add
add
add
push
nop
bound
and
lods
fidivrs
sti
add
mov
arpl
adc
jae
jg
in
dec
inc
into
out
mov
mov
cld
sar
inc
inc
add
mov
cmpsl
or
and
xchg
imul
xor
adc
shrb
dec
xchg
gs
call
popa
jne
xorl
aam
pop
push
mov
inc
inc
mov
and
xchg
dec
mov
mov
inc
das
add
jmp
imul
or
lock
sbb
lock
adcb
mov
and
cld
pop
mull
mov
sub
mov
std
jecxz
enter
in
loop
es
xor
test
jmp
and
repz
lret
insb
sti
adc
cld
and
mov
jbe
xor
sub
mov
jle
out
ja
into
adc
push
out
push
add
adc
push
sub
mov
push
push
jo
and
popa
mov
or
dec
test
xchg
pusha
mov
in
dec
rolb
jno
nop
das
out
jecxz
xchg
mov
add
xor
mov
sub
sub
scas
inc
data16
bound
lods
sti
sarl
mov
fs
pop
scas
mov
push
or
mov
cmc
mov
ljmp
xor
and
int3
push
lock
arpl
mov
cmp
fwait
push
push
mov
je
cwtl
repz
or
push
mov
add
pop
icebp
int
loop
mov
fists
adc
aaa
push
mov
fsubs
xor
idivl
mov
cmp
add
callw
js
movsb
sbb
shr
xorb
dec
cmp
stc
add
push
subl
xor
fstpt
daa
loopne
dec
repnz
push
fs
sub
in
jp
pushl
and
inc
lods
je
scas
jp
cmp
roll
sbb
push
ret
or
sbb
and
fidivrl
sbb
ss
sbb
stc
stos
sbb
adc
lock
loope
pop
clc
add
loopne
ret
sbbl
or
movsb
xchg
jns
jg
adc
outsb
dec
scas
jp
cld
icebp
rcr
push
or
ljmp
loop
push
add
jnp
cmpsb
lock
lcall
sub
dec
in
fidivs
and
filds
jbe
and
fistpl
imul
and
es
stc
insl
or
push
repz
mov
cmc
popf
call
loop
mov
mov
add
pop
sti
jecxz
pop
orb
xchg
jecxz
icebp
clc
pop
xor
or
shlb
shll
in
das
popf
in
cld
xchg
sar
xchg
xchg
into
pop
ficoms
sub
xchg
jne
lods
stos
sub
mov
push
push
cmp
push
xchg
inc
or
sbb
ja
fcompl
test
aaa
mov
and
pop
test
cmp
xlat
mov
jmp
push
sahf
mov
inc
push
mov
jae
mov
cmpsl
aas
pop
ds
insb
out
rclb
xchg
dec
mov
mov
shl
jp
aad
adc
fdiv
push
aam
or
dec
jne
fdivrs
add
sbb
js
dec
pop
and
fadd
frstor
pop
bound
pop
lock
scas
jae
xor
jbe
add
mov
push
std
jae
dec
xchg
rcll
aad
xchg
sbb
jne
dec
test
cwtl
cmp
adc
arpl
cwtl
sbb
stos
incb
xchg
aad
cmp
or
dec
fstps
and
jmp
mov
pop
lock
dec
jns
subl
pop
arpl
imul
add
test
jecxz
data16
xchg
sbb
test
jmp
dec
jmp
mov
add
repz
add
fstpl
xchg
movsl
inc
loope
flds
pop
mov
and
mov
cmp
in
mov
bound
sahf
jl
pop
dec
add
mul
fs
push
addl
sbb
add
mov
or
sub
lods
mov
jge
pop
leave
add
enter
jecxz
bound
adc
or
adcl
mov
test
mov
push
pop
fimull
sub
lret
pop
mov
xor
mov
mov
jae
leave
and
jne
inc
push
jns
or
xor
push
and
negl
xor
sbbl
xor
movsl
int
js
cmp
jmp
pop
fcoml
sti
sub
or
aaa
fcoms
push
add
dec
dec
imul
popa
inc
cmp
aaa
xorb
subb
ud0
jp
mov
xchg
pop
hlt
ret
jne
stc
ja
push
add
pop
push
std
sarb
imul
call
aaa
xchg
or
xor
sbb
mov
cli
cs
sub
and
in
dec
int3
lds
iret
or
leave
stc
and
add
icebp
cli
divb
push
cmc
mov
roll
push
adc
push
ret
sub
mov
stc
cs
bound
fwait
nop
loopne
jmp
ja
jo
mov
and
inc
inc
iret
push
fwait
mov
xchg
jge
lock
or
mov
push
imull
jge
xchg
scas
mov
out
mov
push
mov
pop
in
inc
nop
es
inc
or
in
je
jge
aas
movsb
je
add
cmpsl
in
test
pop
dec
mov
test
hlt
ljmp
jns
or
and
int3
adc
ds
test
es
mov
mov
sti
das
sbb
push
dec
sub
int3
pop
add
cwtl
jno
cltd
jmp
mov
inc
mov
xchg
lock
mov
flds
add
aaa
inc
insl
mov
pop
out
lahf
jmp
or
test
jno
push
int
add
dec
and
mov
xor
lahf
fnstsw
sub
xor
dec
gs
jbe
add
mov
aas
data16
repnz
xor
fisubl
cli
inc
out
mov
jl
outsb
es
xor
into
xchg
cld
and
fs
xor
jp
pop
jns
xchg
jge
cwtl
ljmp
daa
pop
and
arpl
sub
pop
shll
push
cmpsl
mov
sub
cmp
ret
add
cld
lahf
or
dec
xlat
loop
subb
jae
leave
xor
scas
ss
pop
insl
mov
je
push
scas
in
mov
pusha
cmp
push
inc
lea
out
xchg
xchg
xorl
inc
imul
fs
stos
mov
dec
cmp
cltd
adc
call
pop
cmp
gs
xchg
jl
inc
and
pusha
adc
jns
jle
sub
sahf
lods
arpl
or
shrb
fwait
insb
in
out
or
jnp
jp
mul
inc
insl
in
shr
popf
dec
inc
shll
jns
rcll
cld
add
enter
out
xchg
dec
cli
js
adc
jecxz
aam
add
sti
in
add
jno
addb
push
mov
and
iret
addr16
repnz
add
cld
jo
jnp
enter
ds
dec
jl
add
xchg
add
and
adc
repz
cwtl
jno
icebp
clc
mov
fmuls
mov
imul
leave
jbe
or
add
shll
jno
sub
pusha
dec
dec
sub
addr16
jecxz
ja
adc
dec
push
jb
data16
cmp
mov
fbld
popa
xchg
xor
push
fists
mov
je
push
icebp
xchg
stc
popf
adc
jge
popa
call
scas
imul
lahf
stos
add
ret
jecxz
fdivs
cmp
push
leave
jo
add
jne
js
insb
int3
mov
add
lods
das
mov
ja
push
dec
xor
sar
fxch
push
xchg
cmp
imul
loop
outsb
dec
xchg
or
lods
sbb
sub
out
add
aam
mov
mov
dec
sarl
mov
add
ss
rclb
cwtl
push
loopne
fidivrl
addr16
or
mov
add
lea
add
dec
popa
jnp
sbb
lcall
jne
pop
lret
subb
mov
mov
cmp
ja
mov
xchg
dec
cmp
jae
fsin
jns
mov
and
mov
xorl
dec
cmp
add
jae
mov
cli
shlb
or
les
pop
outsl
lods
lods
adc
ljmp
or
jge
mov
jno
cmp
cmc
ss
sbb
mov
xlat
or
dec
cltd
mov
daa
into
int3
insb
adc
gs
popa
cmc
adc
fbld
mov
jg
sbb
das
inc
push
dec
out
jno
stc
sbb
into
sub
sub
xor
dec
xlat
xorb
out
ja
pop
es
push
sbb
pop
mov
xchg
xchg
push
arpl
in
andb
adc
push
push
xchg
mov
inc
mov
mov
dec
cmp
push
ficomps
xchg
in
push
add
enter
pop
out
push
fwait
cltd
sbb
xor
jp
int
orb
repz
cmpsl
js
push
pop
push
sbbl
imul
xchg
out
push
test
inc
adc
sbb
icebp
add
inc
push
mov
aaa
inc
xor
sub
std
xchg
arpl
cmc
cli
xchg
add
xchg
cmpsb
cltd
jge
adc
enter
jne
sbb
rcll
lds
mov
in
pop
leave
adc
imul
xchg
bound
mov
sbb
sub
cmp
ret
jecxz
pop
sbbl
xchg
les
or
jg
or
fnsave
cld
inc
fdivs
or
into
cs
cs
stos
push
aad
push
sbb
jnp
lods
fstpt
inc
scas
mov
je
enter
push
repz
fwait
sarb
cmp
daa
mov
sub
leave
ret
neg
xor
call
ljmp
sub
adc
add
orl
push
int3
xor
shlb
push
hlt
pop
xor
inc
mov
dec
ljmp
es
sub
push
jmp
push
idiv
lcall
push
lahf
mov
dec
xorb
cli
adc
test
aad
je
dec
add
dec
push
in
int
aam
insb
dec
sub
loope
pop
cmp
and
imul
in
mov
into
add
mov
jne
mov
outsl
imul
cmpb
pop
dec
push
sbb
push
popf
xchg
mov
fs
cmp
fs
mov
jl
ret
rorl
pop
xchg
in
fldenv
or
and
mov
mov
xor
xor
push
mov
ds
sub
stos
or
int
scas
sub
push
enter
sbb
push
in
push
aas
pop
push
je
push
sbb
icebp
test
iret
inc
loope
test
jae
cmpsb
mov
jl
frstor
std
jnp
lock
mov
rorb
leave
sbb
pop
mov
mov
sub
ficoms
je
das
stos
fnstenv
add
sbb
xor
icebp
fisubs
call
jae
inc
mov
lret
jl
jne
movsb
shr
ja
ficomps
test
lods
add
ds
rcr
orl
aam
sbbb
or
je
xlat
push
jge
and
mov
into
or
inc
test
mov
jecxz
sub
xchg
cmc
inc
dec
inc
mov
cmpb
mov
jo
add
movsl
pop
outsb
cmpsb
das
or
gs
and
and
mov
and
je
cmp
cmp
cltd
mov
xchg
jns
int3
push
outsl
jp
adc
cs
nop
cli
jmp
or
scas
outsb
stc
xorl
je
jo
and
sbb
sub
idivl
xor
icebp
xchg
out
xchg
jne
pop
pop
fistpll
clc
fadds
lahf
and
xchg
out
pop
aaa
lcall
out
aaa
fcmovnbe
lea
int
mov
in
movsl
mov
jle
loopne
cltd
mov
aad
push
or
sub
dec
arpl
sbb
sbb
shlb
sbb
cmp
jmp
sub
push
in
xchg
loopne
pop
mov
dec
jae
add
cmp
iret
mov
lock
xor
rorl
scas
loopne
addr16
add
sbb
jl
lret
sahf
mov
aad
adc
lock
out
outsb
iret
push
xchg
in
and
rcll
aam
push
jno
push
rclb
das
mov
mov
into
pop
ljmp
inc
cmp
fldt
imul
int3
insb
daa
sbb
popa
mov
push
mov
sbb
cmp
xchg
xchg
inc
pop
jns
mov
sti
sbb
xchg
movsb
xchg
push
andb
xor
mov
sub
fldl
jmp
or
outsl
mov
out
jnp
mov
stos
mov
in
xor
mov
dec
iret
ret
jo
in
sub
ret
adc
xlat
or
cmpsb
fnsave
pushf
mov
cld
mov
enter
jge
push
pop
insl
or
ss
xor
sti
xchg
data16
lret
jg
je
fsts
mov
dec
ret
in
xor
pop
mov
shlb
xchg
std
dec
jne
dec
or
mov
sbb
push
and
pop
stc
cmpsb
xchg
sbb
mov
lods
jnp
movsl
mov
sbbl
push
lret
sbb
sub
into
in
subl
xchg
mov
scas
mov
xchg
xor
fidivrl
mov
xor
xor
lcall
lcall
popa
loop
negl
sbb
mov
jge
xchg
cmpsl
cmp
mov
mov
jge
xchg
pop
divl
dec
stc
hlt
aad
enter
sbb
fwait
das
inc
or
xchg
subl
xchg
aas
inc
mov
stos
idiv
clc
cs
mov
shlb
mov
outsl
push
bound
dec
pop
adc
cmp
hlt
dec
bound
adc
shr
fs
in
fistps
daa
sub
cltd
push
mov
lds
inc
sbb
mov
shrb
dec
xchg
lods
mov
mov
jns
int3
enter
icebp
pop
mov
aam
mov
lods
in
xor
std
push
xchg
jne
movsl
test
dec
pop
cmp
mov
inc
and
mov
and
cmp
test
xchg
fstpl
nop
cld
cmp
mov
stos
ja
mov
mov
pusha
inc
push
or
shll
out
mov
dec
movsb
call
andl
movsl
and
data16
outsl
fwait
adc
xchg
loope
sub
mov
xchg
adc
repz
pop
sbb
out
lods
lea
jns
sbb
addl
fists
or
icebp
mov
pop
ds
sbb
scas
imul
cmp
and
sahf
mov
jo
ljmp
test
shrl
stos
cwtl
push
add
out
btc
xor
jbe
inc
popa
mov
push
xchg
dec
loopne
push
sti
pusha
fisttpl
insb
test
outsb
mov
dec
or
mov
out
lret
scas
xor
pop
enter
and
fidivs
or
inc
clc
aas
inc
mov
lret
mov
jb
push
or
test
mov
insl
push
dec
orl
jle
push
or
ds
and
bound
push
aam
pop
sahf
adc
cwtl
ds
sbb
pop
imul
inc
vmwrite
jl
aad
cld
mov
add
pop
stos
mov
dec
ret
repz
lcall
sbb
movsl
int
fsubrl
lods
shrl
dec
mov
inc
adc
sbb
iret
je
sub
hlt
jns
lds
cmp
sbb
jg
cmp
je
pusha
jp
test
dec
insb
and
xchg
jno
aas
pop
aaa
les
adc
xlat
add
in
out
xchg
sbb
shrl
fxch
xor
xchg
insl
sbb
add
xor
adc
imul
push
cmp
mov
in
lcall
fnstcw
cmpsl
mov
lahf
notb
mov
xlat
movsb
cmp
insb
addb
and
dec
arpl
mov
fcmovbe
popf
cmc
push
out
cmp
xor
pop
neg
sbb
pop
scas
inc
sub
std
xchg
and
mov
adc
sahf
jge
inc
pop
sub
filds
addr16
rorl
xchg
aaa
insb
iret
test
mov
pop
pop
mov
lods
sub
push
push
fldt
mov
jmp
sub
or
jae
scas
add
jns
dec
leave
sub
cmp
addb
fidivl
mov
stc
push
inc
call
inc
xchg
call
sbb
popf
leave
lods
cmc
mov
push
add
pop
fwait
xchg
cwtl
sarl
lea
movsl
cli
cmpsb
subb
pop
scas
xor
mov
decl
mov
xchg
sahf
pop
out
add
cmp
sbb
push
and
inc
xchg
inc
sbb
ret
addr16
mov
js
in
inc
add
push
roll
jg
addr16
mov
dec
or
lods
pusha
xor
andb
jmp
movsl
or
cmp
outsl
push
fstp
fwait
iret
pop
sub
or
nop
decb
insl
push
push
push
gs
pop
jg
add
scas
fmuls
xor
mov
pop
push
in
mov
movsl
sbb
shrl
in
pop
and
pushl
in
jnp
movsb
pop
cli
fwait
jns
je
fldl
mov
in
rcrb
adc
arpl
or
mov
dec
jnp
int3
mov
xchg
into
pop
clc
jns
or
gs
enter
cmp
aas
scas
rolb
lahf
xor
xchg
jge
lret
mov
dec
cmp
repz
sbb
int
fldcw
mov
stos
mov
gs
cmp
imul
and
jp
push
popa
ljmp
push
popf
test
mov
out
and
aam
jmp
aad
repz
cmp
sub
rorb
adc
mov
adc
xchg
fdivs
xchg
fbstp
fldt
rolb
out
mov
and
inc
xor
test
sti
or
inc
mov
mov
xor
pop
mov
movsb
pop
out
repz
pop
cmc
arpl
int3
stc
int3
out
cwtl
out
scas
in
stos
push
sbb
lahf
mov
mov
subl
lcall
aam
dec
jno
inc
fmull
jne
or
jl
daa
js
in
sbb
adc
xchg
inc
scas
or
pop
stc
sbb
adc
xor
inc
sti
invlpg
std
sahf
sbb
shrb
imull
xchg
cmp
loope
ret
dec
inc
and
xor
push
xor
xor
push
adc
inc
test
xchg
jb
repnz
int
addr16
ret
cmp
ljmp
icebp
mov
push
cmc
in
xchg
shlb
outsb
and
sub
mov
jmp
in
mov
and
adc
ret
jecxz
cmp
movsl
int
or
aam
jecxz
jb
jmp
mov
mov
adc
js
gs
ret
mov
mov
sbb
in
icebp
xor
test
icebp
iret
popf
pop
cmpsb
icebp
lcall
mov
into
pusha
jmp
loope
cld
xor
pop
add
mov
jg
in
out
sub
movsb
cmpxchg
pop
mov
cmp
jo
sahf
fldenv
jae
pcmpgtw
rorl
mov
sti
xchg
popf
hlt
test
popf
mov
dec
fists
icebp
popa
pop
pop
pop
push
sar
call
je
out
sub
int
mov
cmp
movl
xchg
test
movsl
cmp
repz
cld
jge
add
sbb
adc
add
clc
inc
lods
sbb
pop
shl
rolb
adc
dec
and
nop
sub
jo
push
mov
rolb
scas
movsb
xchg
movl
and
cmp
push
movb
fsubrp
mov
push
fstpt
jl
xchg
fsubrs
add
ljmp
pop
lods
loop
mov
outsb
mov
cmpsb
xor
xchg
aad
mov
pusha
mov
cmp
out
in
jns
mov
insb
push
inc
add
ss
decb
fldl
fisttpll
add
adc
movsl
mov
jne
adc
iret
dec
and
movsb
jg
fs
mov
stos
mov
fldt
inc
sbb
lods
sbb
out
sbb
stos
roll
sbb
scas
mov
imul
pop
loope
dec
shll
mov
mov
xorb
and
test
xchg
push
cltd
and
out
sbb
in
sbb
andb
mov
xchg
mov
or
pop
scas
cmp
pop
pop
and
push
mov
push
test
pop
loopne
sub
test
loop
testl
aam
movb
push
pop
adc
dec
pop
popf
adc
movsb
lcall
inc
ljmp
outsl
pop
fidivrl
dec
sbb
mov
ret
or
arpl
fsts
int3
xlat
cltd
in
mov
add
test
arpl
inc
out
dec
ss
and
fstpt
divb
daa
mov
call
mov
out
cmp
lods
sub
dec
cli
sti
xor
dec
int3
pop
inc
nop
mov
dec
dec
out
mov
js
inc
mov
push
sbb
imul
inc
xor
push
out
fbld
mov
mov
fs
push
mov
es
xchg
add
and
push
inc
addr16
iret
adc
packsswb
pop
std
lcall
aam
pusha
test
sbb
repz
sbb
das
sti
add
ljmp
dec
pop
shlb
fmul
pop
repnz
lods
pusha
pop
or
mov
push
xor
mov
arpl
in
out
cltd
cmp
int3
addr16
jle
pushf
mov
pop
lret
fwait
and
fs
inc
es
add
cmpl
cli
sbb
sbb
jecxz
sub
pop
push
ret
and
pop
pop
stos
bound
ds
mov
out
std
add
mov
inc
mov
les
push
mov
inc
mov
sarl
mov
pop
adc
mov
mov
fwait
lods
pop
push
stos
loope
push
inc
mov
jl
loopne
mov
xchg
lahf
mov
sub
xchg
add
pop
mov
aad
pop
cmp
dec
adc
dec
jno
cmp
loopne
sbb
cmpsl
push
adc
dec
push
mov
sub
outsb
in
jg
push
dec
mov
mov
rorb
je
xlat
cld
xchg
shrb
sbb
ret
cmp
int3
repnz
loope
jno
or
inc
cs
mov
pop
pop
mov
mov
pop
push
repnz
cmp
sub
mov
stos
inc
mov
cmc
pop
lea
test
mov
out
cmpsb
aaa
fwait
jae
mov
rcrl
xchg
scas
lods
mov
mov
xor
ficoms
shrb
add
pop
in
hlt
cmpsl
pop
lret
sbb
mov
pop
push
mov
sbb
pop
xor
fs
dec
xchg
and
clc
dec
inc
sub
popf
icebp
ficomps
adc
push
inc
dec
sbb
ss
jp
sub
movsl
inc
inc
cmpsb
pop
xchg
inc
or
fsubrs
cmpsb
and
mov
or
pop
cmp
es
pop
stos
sub
rclb
add
and
mov
fcmovu
scas
and
pop
sub
stc
fstps
push
xchg
outsb
push
sub
nop
inc
xor
int3
scas
mov
stos
push
popa
mov
int3
pop
push
mov
dec
rorl
sti
int
dec
test
cltd
mov
jecxz
xchg
sub
mov
stc
and
out
mov
inc
adc
enter
pop
sub
pop
dec
adc
sbb
hlt
lahf
xchg
dec
inc
jge
pop
mov
sub
or
and
out
sub
adc
shlb
mov
cli
add
mov
cli
into
cmpsb
cmp
mov
push
shr
movsl
into
ret
scas
addl
arpl
pop
mov
movl
sub
mov
fisttpll
sub
pop
mov
mov
mov
xchg
mov
sub
icebp
inc
insl
loop
jno
sbb
divb
mov
and
leave
jle
jns
bound
xchg
movsl
shr
push
inc
sbb
pop
adc
jns
jmp
rcr
mov
into
push
stos
or
or
lods
in
xchg
repz
jg
sub
enter
pop
subb
adc
test
cmpsb
addr16
cmp
scas
hlt
lcall
dec
or
fstpt
ret
mov
out
js
xor
cli
test
arpl
fs
mov
out
in
pushf
mov
int3
imul
lods
or
inc
mov
xchg
icebp
pop
jae
mov
push
lods
in
push
divl
stos
leave
sbb
outsb
dec
sbb
call
mov
mov
cmpsb
xchg
shrb
clc
xchg
repz
lahf
cmpb
andl
in
std
cld
xchg
mov
dec
inc
bound
data16
xor
cmp
es
adc
in
fstpl
jae
jbe
mov
popl
mov
sub
int3
mov
les
ja
sub
cwtl
xchg
adc
cmpsl
into
out
imul
cmpb
cmp
cwtl
xor
xor
mov
movsb
inc
push
fildll
sbb
call
or
push
push
xchg
mov
mov
dec
dec
mov
sub
jno
repz
dec
out
push
ret
idiv
test
pop
insl
lahf
mov
cli
aad
or
jnp
fwait
jge
or
adc
cmp
aam
push
mov
fimuls
pop
shlb
outsl
iret
fmulp
popa
cmpsl
mov
xor
aam
out
nop
pop
fidivrl
jecxz
jmp
mov
adc
mov
fstpl
andb
fistpl
xor
test
stos
fmuls
or
add
loope
aam
dec
sti
push
cmpsb
mov
movsb
sbb
jb
daa
cmp
inc
xor
push
das
test
sub
leave
dec
aad
xchg
mov
inc
jb
lcall
lret
cmp
shlb
sbb
fdivr
dec
cltd
cmp
fisubs
mov
add
mov
fs
xchg
outsl
jle
cmp
xchg
xchg
enter
je
push
cmp
sbb
inc
push
xchg
ss
cmpsl
sub
inc
ss
mov
jmp
arpl
daa
mov
je
jb
cs
icebp
push
hlt
sbb
mov
cs
fwait
outsl
pop
scas
cli
xor
addl
and
or
daa
mov
push
scas
mov
ror
fcoms
cmpsl
push
push
imull
dec
add
shr
lods
test
xchg
lea
mov
dec
js
orb
ret
jge
test
mov
mov
sarl
sbb
popa
add
inc
and
inc
sbb
pushf
std
jl
jmp
mov
pop
push
push
test
icebp
mov
add
jo
pushf
push
and
test
into
lods
xchg
mov
fistpl
sbb
cld
cmp
sub
or
jmp
rcr
int3
push
inc
cwtl
out
cmp
jns
and
jmp
mov
and
lods
push
cmp
bound
xchg
adc
rorb
movsb
pop
dec
dec
das
sbb
jecxz
loop
pop
out
fs
shll
and
mov
in
mov
inc
mov
in
add
js
pushf
in
push
mov
aam
ffree
das
imul
shr
xlat
mov
mov
xlat
or
push
js
mov
dec
mov
sbb
add
lret
dec
xor
in
add
hlt
push
popa
cli
pusha
sbb
cmp
sbb
ss
push
push
insb
ss
mov
sbb
test
add
jb
and
and
push
shrl
cmpb
popf
pop
sub
test
cmp
pop
scas
std
jg
xor
push
ja
mov
pop
sub
dec
loop
test
loop
mov
ret
les
fwait
mov
pusha
sub
and
repz
push
out
jecxz
mov
xlat
and
pop
mov
imul
push
scas
repz
dec
and
push
inc
icebp
call
cwtl
push
rcrb
jb
hlt
enter
out
cli
loop
jmp
insb
sbb
pop
cmpsb
pop
mov
fldcw
push
stos
push
dec
inc
cmpsb
inc
leave
scas
jnp
push
loope
fisubs
dec
push
outsl
pop
cmp
dec
mov
test
mov
int3
xlat
cmp
in
jo
jle
or
loope
fdivr
pop
divb
loop
cs
inc
mov
fiadds
sub
cmpl
mov
test
mov
mov
jne
nop
mov
ljmp
pop
and
push
jne
sub
je
aad
inc
call
or
imul
mov
pusha
movsb
jnp
dec
test
pop
sub
loopne
mov
out
jle
xor
jno
insb
cs
xchg
mov
lret
icebp
push
scas
push
pop
mov
imul
repnz
jle
arpl
xchg
sbb
push
or
pop
cwtl
push
mov
filds
lahf
cmp
jecxz
sbb
std
popf
push
and
ja
repnz
dec
loope
mov
lcall
test
test
mov
hlt
xchg
aad
sub
hlt
push
out
test
adc
xchg
in
sbb
xchg
push
xchg
jnp
pusha
xchg
inc
sti
mov
leave
aad
cltd
or
lds
mov
aaa
xchg
in
adc
add
scas
cmp
lret
stos
mov
adc
xchg
mov
je
and
inc
in
jne
sahf
in
mov
pop
adc
mov
mov
pop
aas
scas
mov
jbe
popa
fdivrl
jl
and
imul
pop
imul
lret
gs
pop
pop
fwait
or
xchg
out
test
push
pop
mov
push
xrelease
shlb
ljmp
mov
dec
lods
xor
aad
loopne
cmp
jle
mov
xor
je
fldenv
cmp
xchg
out
fistl
pop
loope
jg
repnz
bound
nop
insl
ficompl
push
cs
or
push
dec
pushf
mov
movsb
fbstp
cmc
leave
clc
test
xchg
mov
xchg
aam
pop
loop
inc
rcr
push
mov
sub
mov
push
mov
inc
sbb
lock
or
push
pop
cwtl
nop
lahf
lods
xorl
cmp
pop
lret
ss
repnz
lahf
adc
jmp
add
push
cli
call
out
dec
push
inc
in
pop
sbb
cmp
pop
imul
adc
or
inc
adc
mov
dec
and
cmp
and
mov
daa
scas
mov
movsb
adc
in
sbb
shll
mov
mov
and
jecxz
clc
dec
mov
sub
mov
cmpsb
pop
pop
push
inc
mov
inc
sarb
cmp
mov
inc
js
jmp
bound
lcall
stos
adc
push
push
and
fdivs
shlb
adc
xor
pop
jae
rcr
pop
incl
push
mulb
icebp
jmp
enter
sbb
call
loope
sub
fs
ds
xchg
pop
push
ret
xor
popf
nop
push
testb
cli
clc
ficoml
shlb
popa
aam
adc
jge
and
adc
pop
jb
cmp
sbb
sbb
fimuls
xor
and
arpl
int3
add
sbb
and
cmp
dec
adc
cmp
mov
clc
inc
xor
or
lret
mov
in
pop
mov
fmuls
dec
jmp
xor
aam
xor
rcl
getsec
decb
incb
adc
mov
outsl
pop
jecxz
stc
pop
aam
jp
ja
adc
mov
leave
sub
fisubrs
xchg
and
stc
cltd
or
outsb
sti
inc
sbb
mov
js
movsb
sbb
lods
or
mov
fwait
push
or
outsb
lds
sbb
push
push
jl
xchg
test
or
out
cmp
js
jbe
push
ds
and
mov
push
sub
addr16
shrl
cmp
popf
jne
shrb
js
call
andb
or
dec
adc
xor
cmc
addl
mov
push
into
fldl
nop
pushf
xor
sbb
sub
shl
adc
inc
cmpb
inc
mov
jmp
pop
jnp
push
pop
fucom
in
stos
out
inc
mov
imulb
popa
inc
fs
jno
xor
push
mov
jle
cmp
push
jp
mov
xor
addr16
and
faddl
das
dec
add
subl
jp
jmp
add
fldenv
sub
nop
mov
insb
and
inc
adc
inc
add
xchg
sbb
movsl
jecxz
dec
mov
and
fadds
pop
or
mov
xchg
dec
pushf
push
incb
mov
jg
push
repz
mov
mov
in
je
or
or
cmp
mov
fsubr
addr16
add
pusha
push
js
mov
mov
das
in
lods
sar
push
adc
add
test
and
pop
cmpsl
icebp
rolb
mov
mov
mov
imul
daa
aam
pop
sbb
xchg
repnz
es
test
mov
jge
mov
sub
adc
jg
repnz
ljmp
mov
int3
xchg
fs
mov
push
cmp
inc
jb
test
sbb
aam
mov
pushf
in
repz
add
aad
mov
lods
adc
mov
rcrb
mov
push
cmp
xor
add
and
mov
das
sti
jg
add
dec
dec
in
or
sbb
sub
push
into
adc
pop
or
inc
int
and
push
adc
and
mov
ret
repz
mov
notb
repz
je
xchg
fwait
jno
loope
mov
pop
dec
add
jo
mov
or
mov
cwtl
daa
cmpb
push
hlt
lods
fmuls
fwait
jmp
dec
jns
push
jmp
or
sub
dec
aas
leave
sub
sbb
movsb
sbb
jl
cmp
mov
les
add
mov
and
sub
mov
cltd
repnz
dec
icebp
clc
subb
lcall
inc
push
add
inc
sub
call
aad
es
add
pusha
cmc
sbb
addb
test
ljmp
out
dec
bound
sbb
inc
aaa
pop
cmp
or
sbbb
xchg
out
jae
std
or
inc
addl
mov
xchg
and
inc
fcmovnu
mov
mov
icebp
pop
imul
ja
mov
mov
roll
insl
stc
dec
mov
int3
xor
shl
aam
cmpsl
push
sbb
test
or
pop
fisttps
lods
sub
pop
push
pop
test
daa
lcall
test
aad
xchg
mov
dec
es
pop
sbb
fiadds
cmp
out
into
pop
js
jle
push
mov
add
mov
push
mov
shll
popa
pop
ror
int
data16
addl
call
mov
jmp
jle
dec
fildl
dec
jp
rcrl
lret
cwtl
mov
mov
sbb
cwtl
je
lods
sub
out
das
repz
push
test
leave
dec
inc
xlat
div
sub
xchg
inc
push
jb
mov
addl
mov
mov
andl
push
nop
out
incb
push
add
jbe
sub
and
dec
outsb
sarl
cmp
stos
scas
cld
mov
cmpsl
jl
imul
insl
push
xchg
iret
out
loop
nop
outsl
arpl
xor
jg
sub
fdivrs
inc
sbb
insb
nopl
sbb
inc
nop
push
lods
es
mov
jnp,pn
sbb
jno
adc
or
rdrand
jmp
fisttpl
imul
push
inc
sub
cwtl
jl
xchg
xchg
pop
xchg
xchg
adc
pop
adc
pusha
adc
test
mov
dec
fwait
xchg
dec
xor
xlat
fwait
pop
jl
mov
jno
xchg
inc
or
daa
int
hlt
add
mov
rcll
mov
insb
sbb
stc
sbb
loop
les
sbb
mov
mov
pop
je
add
pop
adc
mov
mov
in
js
and
sar
dec
mov
or
lcall
pop
cli
fiadds
jecxz
lea
inc
jl
ficoms
int3
push
adc
xchg
mov
inc
pop
pop
std
push
or
inc
mov
je
ret
sub
xorb
sub
inc
mov
or
cmp
shlb
andl
push
stos
sbb
nop
aad
cmpsl
sahf
orl
adc
inc
sub
jmp
pop
jb
in
lods
pop
push
out
push
jl
and
fsubp
adc
test
xor
jecxz
mov
pop
cltd
or
mov
out
adc
mov
cmp
cmpsl
mov
repnz
test
into
add
icebp
sub
lods
lahf
or
pop
pusha
stc
cmp
mov
fs
mov
jge
mov
add
or
fcomp
xchg
ja
scas
sbb
or
aaa
sub
jmp
xchg
cmp
int
add
jbe
leave
jl
jle
sub
add
mov
inc
rcrb
insl
aas
repz
push
into
mov
inc
push
sarl
rolb
mov
repz
push
inc
fadds
mov
cltd
divb
cmp
jg
lock
add
adc
mov
jle
in
stos
mov
adc
rorl
nop
mov
lods
out
inc
push
jmp
loop
test
jne
mov
push
lret
das
das
inc
xchg
push
dec
jl
push
dec
dec
aaa
ret
mov
add
loopne
or
push
adcl
push
mov
cmpsb
out
das
add
test
cmpsl
pop
push
outsl
divb
mov
insb
orl
dec
sti
inc
sbbb
push
pcmpeqd
mov
mov
test
test
int
add
push
daa
xchg
cld
sub
imul
imul
jmp
mov
lods
push
inc
je
cmc
lods
outsl
nop
jne
add
jmp
popf
mulb
cwtl
call
add
xor
dec
fsin
lods
les
inc
into
sti
insl
or
rcrl
xor
lret
pop
insb
mov
cmp
mov
orb
mov
leave
loopne
or
sbb
mov
movsb
nop
clc
xchg
lods
inc
adc
push
dec
test
mov
imul
add
lods
sahf
nop
fisttpl
and
or
sub
fs
pop
aam
push
push
dec
icebp
xor
or
mov
das
jno
add
cli
mov
sbb
mov
cli
jno
call
fisubrl
movsl
xchg
push
divb
xchg
std
adc
and
and
loop
cmpsl
jb
sub
out
add
int3
push
in
mov
push
add
les
ss
add
hlt
and
cld
mov
xor
xchg
data16
add
imul
mov
stos
arpl
mov
out
inc
idivb
mov
adc
xor
ficompl
adc
je
sbb
inc
in
or
or
push
sub
sub
insb
lods
lcall
scas
pop
push
mov
jl
mov
inc
js
jg
and
fsubr
add
imul
sub
adc
out
dec
xchg
aaa
xlat
dec
leave
push
daa
mov
pop
cmp
mov
and
outsl
les
cmp
jnp
pop
push
sti
pop
adc
negl
fistl
xlat
cwtl
ret
push
jne
and
inc
inc
jecxz
xor
hlt
lret
mov
inc
rorl
pop
int
push
shrl
and
popa
jbe
lcall
xor
cmpsl
insl
pushf
push
push
mov
jle
jl
mov
pop
jnp
dec
out
test
aad
pop
mov
sbb
sbb
cmp
pop
aaa
push
movsl
enter
xchg
pushf
out
stc
mov
ret
add
cwtl
sbb
cmp
lods
inc
aaa
jge
hlt
add
sbb
aas
fs
mov
fistl
push
jns
inc
mov
cmp
push
cmp
stc
jbe
jnp
cmc
inc
aam
sbb
pop
xchg
adc
aas
aad
mov
out
push
lret
mov
push
out
bswap
movsl
in
mov
jecxz
aaa
sbb
cmpsl
out
inc
in
push
mov
mov
jmp
std
push
jl
cmp
jecxz
push
inc
cmp
pop
aad
out
aad
push
pop
jo
int3
in
push
pop
cld
sbb
aam
lahf
xchg
xchg
pop
add
pushf
add
jno
jmp
inc
pand
inc
or
push
ret
scas
js
jne
stc
dec
add
cmc
mov
add
inc
adc
rcll
fnstcw
fsubrl
lret
out
jl
mov
add
push
mov
bound
and
lahf
in
scas
test
inc
int3
fsub
data16
stc
decb
fcmovnbe
cmpsl
pop
test
stos
ljmp
in
loop
insl
loope
decl
int3
xchg
popf
sub
xor
test
sbb
les
jb
mov
sahf
sbb
xor
int3
int3
lahf
or
stos
push
jno
movsb
shlb
mov
ltr
cli
cmp
pop
ss
cli
adc
mov
push
shl
icebp
adc
test
and
inc
add
fdivrs
pop
insb
inc
daa
or
pop
mov
cmp
stos
cli
mov
mov
std
and
and
adc
sbb
pop
cltd
out
jl
xor
sbb
test
pop
fsubp
out
inc
sahf
lods
xchg
add
cli
cli
push
cltd
mov
mov
repnz
mov
jle
xor
push
dec
xor
shlb
enter
icebp
sub
dec
mov
test
mov
cmp
loope
mov
aad
lods
xchg
pusha
inc
jo
mov
popa
sarb
leave
aam
call
push
mov
and
add
cltd
pop
out
je
inc
aaa
pop
enter
dec
mov
inc
mov
mov
push
into
lcall
sbb
mov
inc
repnz
add
int
xor
icebp
jo
xchg
dec
pop
ja
insl
sbb
cmp
or
loopne
lods
das
mov
insb
mov
adc
scas
pop
jle
imull
lret
sbb
insl
movsl
or
inc
fsub
jp
inc
call
and
rcrl
cmpsl
pusha
and
insl
je
or
xchg
movl
in
sbb
push
push
je
push
clc
jbe
popa
jnp
insl
xlat
int
test
dec
jne
repz
pop
sbb
in
imul
xchg
xor
dec
xlat
sbbb
sub
jb
insb
adc
fiadds
scas
sarb
insl
clc
xor
sub
xchg
push
lcall
jmp
sbb
push
int
fs
and
add
repnz
jae
inc
cs
push
fidivl
int
mov
xchg
cmp
dec
js
cmpsb
jge
outsb
int3
imul
jno
and
lds
mov
clc
movsl
cmpsb
pop
bound
popf
cltd
mov
test
mov
push
repz
cmp
sahf
and
ds
adc
pop
icebp
mov
push
cs
push
jl
filds
in
cmp
and
fadd
jp
cmpsl
xor
sti
xor
cwtl
adc
sub
out
dec
adc
ljmp
das
jecxz
sub
jp
mov
cmp
jge
xchg
mov
push
nop
push
dec
xlat
nop
sub
mov
or
stc
call
push
mov
test
insb
inc
xor
jmp
out
test
lods
jge
sub
xchg
imul
mov
sub
jnp
dec
or
testb
or
cli
pop
jmp
or
mov
mov
test
pop
add
add
xchg
xchg
sahf
mov
or
js
xor
adc
hlt
in
inc
and
aaa
ljmp
pop
or
and
je
push
std
inc
and
lods
ret
gs
mov
loopne
cs
cmpsl
js
adc
lds
addr16
call
adc
loop
cwtl
jg
sbb
xchg
ss
jecxz
pop
je
add
outsb
mov
jp
sub
sbb
inc
sarb
fldl
mov
mov
out
addl
popa
and
loope
jmp
stos
mov
or
int
mov
push
rorb
test
int
pop
js
pop
xchg
outsb
shll
fisubs
jecxz
repnz
jp,pn
xor
mov
scas
movsb
out
mov
lcall
push
lret
divl
mov
mov
pop
les
push
add
xchg
ds
loop
cmp
iret
cmp
jg
sbb
or
pushf
scas
adc
ret
fistpll
clc
adc
mov
int
movlps
jno
mov
arpl
pop
aam
push
mov
xchg
test
popa
push
cmpsb
dec
rcll
adc
cmp
rorl
dec
ljmp
push
mov
aaa
arpl
sub
jecxz
push
icebp
cltd
les
adc
dec
inc
outsl
dec
sti
lcall
cmp
hlt
or
insb
sbb
pop
sub
out
aam
mov
in
sar
adc
fstl
pushl
gs
pop
xchg
insl
mov
flds
jb
testb
stos
lahf
adc
xchg
test
aas
mov
sahf
jmp
pop
or
push
adc
stc
pop
jl
addr16
push
adc
leave
jge,pt
daa
lock
inc
jp
add
fadds
jmp
xchg
sti
call
push
insb
add
xchg
stos
sub
adc
popf
xor
enter
and
push
int3
add
jne
and
xchg
icebp
inc
pop
iret
out
rcrb
je
push
and
lret
icebp
insb
popa
push
loope
fmuls
and
mov
or
inc
adc
inc
popa
div
std
mov
cld
inc
jg
les
das
pop
stos
leave
or
icebp
testb
aam
stos
lcall
cmp
fcmove
pop
cmp
mov
and
loope
enter
ljmp
mov
xchg
xchg
outsl
mov
inc
mov
into
test
sahf
sbb
xor
cmp
movsl
outsl
or
mov
loop
scas
sbbb
add
in
push
add
mov
mov
stc
and
jno
ret
in
setne
sbb
mov
lcall
out
and
and
pusha
jo
stc
adc
es
fs
cli
fucomp
lahf
scas
xlat
adc
add
arpl
std
notb
nop
add
pop
sub
inc
push
lahf
dec
jmp
inc
push
fdivrs
addb
mov
std
sbb
xor
and
pop
pop
inc
sub
mov
repz
mov
jg
test
int
fucomi
ficoml
add
shrl
imul
jmp
dec
mov
jecxz
add
adc
inc
scas
push
in
lahf
cwtl
in
xor
xchg
xchg
jge
sub
mov
fs
stos
fidivrs
xchg
ficoml
jb
jbe
sti
cmc
cmc
sti
cmc
push
xchg
jg
in
sub
mov
les
nop
ret
fldl
das
or
fs
push
fidivrl
dec
mov
mov
sbb
xchg
stc
mov
lods
sub
fadd
pop
dec
or
cmp
ja
mov
jb
inc
cmpb
adc
arpl
sub
or
push
pop
leave
call
fs
xchg
jne
fs
pop
mov
cltd
xor
fwait
cmpb
mov
scas
or
jbe
inc
push
lods
aam
xchg
jno
cmp
push
ss
sbb
adc
bound
inc
pusha
inc
mov
sub
aad
in
popf
or
jg
jbe
sub
popa
cmp
mov
xorb
cmp
shrl
sub
popa
sahf
sub
add
jmp
lret
inc
lea
cmpsb
jl
subl
pop
mov
dec
cmp
xchg
xlat
in
je
jae
cmp
jb
adc
cmp
mov
scas
jl
ret
pop
data16
out
jmp
add
xlat
mov
testb
pop
cli
add
xchg
fstpt
cmp
fdivs
movsl
sub
in
or
sbb
adc
or
cmpsl
push
sbb
test
out
stc
push
dec
sub
push
adc
xor
mov
dec
pop
jne
lds
jle
xor
adc
push
pop
pushf
out
ficoml
push
xchg
jnp
mov
inc
pop
gs
mov
lea
mov
fsubr
jg
add
pop
shrl
loope
jl
cmp
lahf
insb
lret
cmc
adc
and
push
std
inc
mov
mov
and
jno
subl
and
mov
dec
inc
mov
sub
mov
sbb
enter
and
call
push
cmpsb
jmp
xchg
test
inc
mov
pop
insl
mov
mov
jb
push
cmp
pop
data16
nop
popa
mov
push
pop
xchg
testb
jbe
xchg
in
iret
cs
mov
pop
insl
mov
cmc
cmp
add
jecxz
les
lods
pop
hlt
call
movsl
dec
loop
and
add
inc
out
hlt
ret
adc
aas
cmp
sbbl
mov
inc
call
fdivl
dec
mov
sub
adc
jb
ret
sbb
ss
jb
add
mov
jo
fmul
or
sub
push
jne
push
cltd
jl
pop
jnp
filds
pop
cld
insb
xor
jg
pop
je
das
and
add
into
sarl
xchg
fimull
lods
loope
fidivrl
pop
jg
cmpsb
int
jmp
jno
xor
fs
mov
repz
jnp
push
ret
mov
xor
repz
mov
cmp
inc
clc
xchg
les
adcl
shr
outsb
mov
pop
sbb
imul
addr16
adc
dec
std
std
imul
clc
add
clc
xor
sbbl
mov
pop
push
push
xchg
mov
cli
ljmp
imul
faddl
push
fsubp
jmp
cli
pop
add
xchg
xchg
sub
test
mov
xor
cli
test
push
cmp
xchg
sub
or
push
push
dec
mov
fcoms
les
mov
dec
ss
xor
mov
daa
cmp
sarb
jns
sub
imulb
sbb
push
into
pop
push
sbb
outsl
jb
pop
push
mov
push
ja
cltd
push
push
add
dec
pop
and
nop
ljmp
sti
loope
inc
mov
mov
cmp
cmp
mov
inc
jecxz
sahf
adc
push
cmp
ja
imul
adc
ljmp
jg
scas
dec
adc
add
testb
adc
push
popf
pop
sub
call
and
xchg
mov
mov
flds
mov
mov
xchg
aas
insb
xchg
movsb
push
out
sbbl
and
pop
cmpsb
xchg
mov
cltd
addr16
cmp
jl
ljmp
add
popa
push
dec
or
inc
push
jg,pn
test
jbe
js,pt
xor
jns
pop
fistpll
add
dec
and
negb
aas
lds
xor
test
ljmp
mov
and
dec
push
push
and
add
pop
movsl
movsl
in
and
push
inc
pushf
adc
js
push
iret
dec
sbb
mov
or
loope
aas
jno
shlb
mov
jle
mov
popa
sub
lcall
mov
xchg
add
or
rcl
rcr
sbb
test
xor
inc
test
mov
dec
push
fistpll
out
add
hlt
mov
jmp
lods
outsl
mov
scas
insl
dec
cwtl
das
add
push
and
aad
cmp
mov
insb
lea
mov
jmp
outsl
push
arpl
imul
les
xchg
inc
out
cmp
push
mov
sub
sbb
les
outsl
aaa
dec
or
xchg
mov
inc
push
xor
add
jge
mov
enter
outsb
ret
stc
je
cmpsl
aad
popa
jmp
add
nop
divb
xchg
int
xchg
cmp
mov
leave
xchg
je
xchg
lds
or
mov
xor
clc
outsb
push
cs
add
and
repnz
sarl
push
xor
or
lea
dec
or
and
xchg
mov
popf
pop
mov
adc
or
cld
lgs
cld
add
sub
mov
xchg
or
push
add
fdiv
mov
sbb
jp
push
jle
pop
in
push
scas
adc
in
in
outsb
fstl
mov
mov
pop
pop
or
ja
repnz
mov
stc
xchg
hlt
and
fcomip
nop
fwait
mov
or
xchg
shlb
add
outsb
dec
xorl
lcall
inc
add
lret
mov
jle
sqrtps
stc
adc
mov
and
jno
pop
dec
inc
or
scas
out
gs
lret
dec
or
ja
or
out
out
pushf
mov
mov
jle
cmp
cmp
push
cli
cmp
in
aas
cltd
and
jle
test
test
mov
ret
xchg
adc
testl
adc
or
arpl
sub
or
mov
dec
mov
cs
cmc
ss
push
nop
out
mov
rcll
push
cmp
divb
add
ljmp
pushf
inc
les
rep
inc
cmp
jo
mov
jne
addr16
nop
and
adc
xlat
mov
mov
and
idiv
push
lds
fidivrl
sbb
in
mov
jno
aad
out
loop
add
int
inc
lock
aaa
sub
xchg
ds
adc
mov
sti
and
stos
aad
jle
pop
cmp
popa
daa
fmul
data16
inc
inc
inc
popl
out
test
dec
mov
inc
or
call
aas
pop
add
mov
adc
aam
xchg
push
sti
test
cltd
in
leave
icebp
aad
or
fmuls
lock
outsb
xchg
popa
jne
loopne
int3
gs
mov
fadd
mov
add
daa
ret
push
cmp
mov
push
jp
mov
cmpsl
xorl
jle
adc
add
mov
aam
xlat
cmpsl
adc
sub
jb
aas
sbb
pop
fnstsw
sbb
add
clc
mov
mov
cmpsl
pop
inc
mov
fsin
mov
hlt
sub
imul
icebp
jns
nop
fs
cmp
add
jge
xchg
pushf
jecxz
and
or
inc
lods
roll
jecxz
pop
stc
mov
pop
xchg
jae
ja
imul
adc
fildl
or
imul
inc
add
repnz
lods
clc
jnp
push
sbb
pop
adc
mov
mov
xor
add
test
jne
in
in
adc
pop
mov
inc
mov
imul
sub
inc
int
cmp
sahf
fdivrs
sbb
mov
push
inc
iret
jo
out
mov
mov
push
push
mov
inc
xor
insb
lret
push
xor
sub
mov
pushf
mov
cmp
sub
xchg
imul
push
cmpsl
popf
jg
sub
scas
adc
mov
mov
mov
push
add
ss
outsb
das
jmp
jb
inc
or
mov
clc
add
add
gs
pop
imul
mov
fistpll
addr16
adc
xchg
add
jo
dec
in
mov
or
movsb
data16
push
pop
lahf
test
cmpsb
dec
in
inc
in
pop
mov
sbb
iret
aaa
hlt
mov
pop
inc
nop
cmp
and
add
mov
add
mov
add
imul
ljmp
fs
and
cli
std
int
or
push
dec
jnp
add
mov
push
fsubs
lock
sbb
and
daa
in
push
icebp
push
pop
inc
in
hlt
sbb
mov
insb
lcall
or
cmpsl
pop
ja
mov
int
lcall
pop
or
pusha
cmp
xchg
dec
mov
shrb
mov
cmc
inc
jle
mov
fsubs
mov
adc
lcall
testl
and
pop
add
shl
add
mov
fdivs
in
push
jbe
adc
and
ret
test
cmc
xor
imul
push
or
adc
lahf
jg
imul
into
lods
cli
sub
push
jge
add
jmp
and
data16
out
push
out
js
pusha
out
dec
sarl
or
fwait
xor
daa
mov
int
cmp
cmp
stos
mov
xchg
ret
pop
xchg
pop
adc
outsl
sbb
dec
pop
mov
pop
rolb
sbb
shlb
push
jbe
cmc
jbe
push
push
neg
sub
push
out
rcrl
jno
mov
test
jecxz
xor
sbb
inc
fs
jle
scas
lret
dec
pop
rcrl
pusha
fsubl
mov
int3
add
cmp
adc
fnstsw
lds
test
xchg
es
mov
cmp
inc
iret
adc
add
cmp
or
into
loope
add
mov
test
sbb
pop
popf
inc
fidivl
out
movsl
mov
xor
in
xchg
mov
xor
and
jp
adc
out
push
loope
sbb
rcrb
leave
clc
pushw
push
xchg
call
dec
lds
and
xchg
xchg
int3
mov
adc
out
gs
cli
add
inc
xor
stos
xchg
inc
cmp
jmp
stc
hlt
faddl
pop
push
pusha
mov
in
mov
pop
ret
cmp
out
movsb
or
mov
test
leave
in
cmp
pop
push
push
xchg
int
clc
jge
nop
test
andl
pop
out
cmpsl
cmpsb
push
jg
inc
repnz
out
pop
test
test
stos
xor
push
and
aaa
imull
xor
jne
scas
jle
mov
icebp
imul
mov
repz
aad
dec
adc
gs
or
inc
pop
push
fmulp
pusha
add
test
and
std
dec
mov
aas
repnz
std
xchg
push
push
push
mov
mov
xchg
pop
ret
gs
fbld
test
push
loop
pop
or
inc
clc
cwtl
or
ja
movsl
je
je
rcrb
rolb
fmulp
pop
fsubr
pop
lahf
dec
mov
scas
jge
pop
inc
sbb
jbe
ret
cmpsl
xor
sub
lret
in
sub
push
and
pop
add
dec
cli
dec
sub
or
and
mull
pop
test
imul
adc
pop
mov
push
mov
sahf
sbb
inc
sub
into
aaa
cld
out
add
push
mov
sbb
iret
nop
imul
ljmp
inc
inc
push
stos
stos
out
mov
out
mov
jp
pop
sahf
inc
add
or
pop
sbb
and
inc
outsb
dec
sahf
or
sbb
nop
mov
aad
dec
cmpsl
shlb
insb
xor
scas
pop
lahf
add
mov
sbb
pushf
lret
mov
jge
inc
or
sub
arpl
jns
pushf
xchg
push
arpl
mov
dec
stos
fistps
out
hlt
cltd
jb
or
adc
ss
or
sub
mov
dec
push
mov
scas
ss
dec
pop
jne
or
jne
sahf
mov
fiaddl
dec
rorb
push
mov
xchg
or
mov
aas
lods
js
mov
jmp
mov
jle
mov
enter
mov
push
xor
mov
js
sub
fiadds
sbbl
xor
inc
pop
or
arpl
jne
inc
dec
data16
aam
hlt
pop
arpl
ljmp
lcall
gs
fsubrs
fstps
testl
cmp
push
dec
scas
dec
andl
ljmp
das
in
fnsave
ds
rep
jmp
inc
lret
inc
cs
rclb
mov
adc
out
out
xchg
push
jae
hlt
or
jp
xchg
push
or
sbb
add
pusha
fnstsw
xchg
jg
sub
add
mov
fsubrl
push
xchg
add
sub
pop
or
nop
mov
push
pop
sbbb
arpl
ja
pop
mov
sarl
daa
xor
outsl
out
xchg
std
sbb
lods
adc
out
mov
mov
cmp
leave
inc
or
daa
mov
scas
out
in
mov
nop
mov
mov
push
nop
loop
cli
mov
fisubl
popf
xchg
in
lods
push
jo
mov
xor
cmc
and
in
cmp
inc
mov
dec
jb
fsubl
dec
aad
inc
sub
mov
cmpsl
push
pop
std
fistpl
fnstenv
mov
test
adc
outsb
cmpsl
call
clc
mov
in
divl
lret
mov
out
xor
add
ret
addl
and
leave
cmc
addb
lock
sarb
jb
iret
mov
dec
fiaddl
in
mov
xchg
inc
jnp
ljmp
pusha
mov
jne
mov
push
jae
in
mov
fcoms
xchg
ljmp
data16
repnz
push
xchg
or
pop
aad
xchg
xchg
inc
scas
xchg
icebp
dec
ja
fisubrl
adc
xchg
fdiv
sbb
inc
push
cmovne
enter
mov
mov
push
mov
xchg
cmp
mov
les
test
fidivrl
lcall
fwait
bound
mov
jbe
loope
mov
push
test
mov
or
push
shl
test
sarl
fdivr
in
mov
pop
sbb
adc
in
outsl
mov
cmp
xor
lahf
rcr
cmpsb
push
fldt
sahf
fidivrs
or
pop
cli
xor
xlat
xor
lds
addl
dec
adc
notl
idiv
sbb
and
cmp
push
mov
je
cmp
orb
push
mov
push
mov
sbbb
xacquire
dec
lcall
int
xlat
je
xor
mov
jg
notb
jb
pushf
jnp
mov
add
lea
jo
jno
pop
sub
add
lahf
mov
jg
inc
add
mov
adc
sbb
mov
and
in
push
aaa
in
dec
xchg
sub
mov
out
mov
adc
xchg
sub
sbb
mov
iret
add
sarb
enter
mov
out
hlt
cwtl
push
dec
rorl
jl
stos
pop
incb
out
inc
mov
rcll
mov
add
dec
xabort
adcl
dec
sahf
into
es
clc
jl
loope
ss
sbb
push
cmc
mov
xchg
pop
gs
and
int3
jecxz
xchg
xor
push
mov
push
sub
dec
repz
jmp
fisubrs
jecxz
xchg
hlt
push
mov
xor
or
xchg
repnz
push
fwait
addl
xchg
add
inc
mov
sub
mov
inc
test
cld
mov
add
lahf
lret
sbbb
aad
shr
mov
jnp
dec
push
scas
addr16
mov
popa
mov
inc
popf
sarb
aam
sbb
xlat
cmp
addr16
mov
xor
jg
cmp
in
pushf
sub
test
das
push
cmp
or
push
mov
jmp
lea
cmpsl
xchg
sub
pop
mov
adc
sub
dec
cli
mov
fimuls
mov
ficompl
int
fstps
mov
std
xchg
movsb
add
xchg
lcall
mov
push
stos
push
sti
enter
test
inc
mov
jnp
inc
or
cmp
lock
add
cmp
aas
cltd
push
adc
xchg
inc
and
push
sarb
aam
stc
mulb
push
mov
fcmovne
dec
sbb
xchg
rorb
xor
cld
mov
or
add
ror
pop
mov
divl
dec
subb
iret
xchg
mov
pushf
gs
mov
push
add
stos
addr16
dec
ficompl
adc
sub
gs
pop
ja
xchg
sub
sub
jne
mov
ret
shrl
fsts
dec
pop
pop
js
mov
add
add
add
std
and
add
adc
and
add
and
or
into
in
and
rcrl
fnstenv
cmp
insb
ds
add
xlat
sti
adc
and
cmp
inc
sbb
sub
repz
cmp
cltd
test
pop
pop
mov
or
mov
aas
fdivrl
push
imul
mull
mov
pop
mov
cmp
in
push
sub
mov
cmp
jl
xor
dec
roll
pop
cmpl
cltd
sbb
jmp
mov
xorb
pop
lret
sub
jmp
cmp
insl
cltd
xor
icebp
mov
jmp
xchg
jge
out
xor
sub
pop
mov
inc
push
int
adc
inc
jno
fldenv
xor
push
cmp
repz
xchg
dec
pop
inc
push
into
mov
outsl
mov
std
xchg
mov
mov
mov
mov
insl
add
dec
roll
or
cmp
data16
sub
je
push
jmp
cwtl
movsb
dec
xor
hlt
mov
add
mov
and
in
cmp
orl
arpl
dec
adc
mov
mov
push
pop
jbe
and
mov
int
sub
sbb
daa
fldl
int
cmp
aam
or
mov
andl
mov
int
data16
xor
jo
cmpsb
mov
out
pop
andb
aas
ds
daa
dec
add
pop
pop
popa
arpl
je
fs
je
push
fnstenv
leave
mov
and
in
sub
jno
insb
cltd
mov
mov
mov
mov
jg
lcall
adc
xor
inc
shrb
out
mov
pop
int3
sbb
iret
aad
sub
adc
sbb
and
das
in
lea
pop
or
mov
dec
mov
push
cli
sbb
adc
popa
pop
dec
jecxz
and
repz
das
in
or
adc
ss
xor
mov
out
jle
cli
cs
in
fildll
fcompl
mov
inc
pop
mov
shll
xor
fcomps
mov
inc
pusha
hlt
sbb
adc
and
fcmove
insb
xor
hlt
fidivrs
lahf
cbtw
sub
repnz
inc
dec
jecxz
sbb
int3
cltd
xor
lds
rcll
shrl
and
xchg
cmp
movsb
sub
loope
jl
pop
iret
lcall
xchg
mov
jbe
adc
sub
frstor
js
inc
shlb
push
adc
in
das
mov
mov
dec
mov
jbe
adc
sub
icebp
int3
sbb
xor
in
xchg
pop
jne
int3
hlt
vandnps
inc
lea
mov
xor
mov
adc
mov
insb
cltd
xor
int3
cwtl
leave
insb
adc
outsb
dec
loope
pop
and
mov
bound
lock
pop
dec
out
cwtl
cltd
test
adc
sub
jmp
lret
subb
pop
inc
in
adc
and
popf
cmpsb
out
data16
stos
sbb
mov
shld
sarl
fcompl
inc
cmpl
mov
inc
nop
pop
push
xor
pop
xor
mov
or
mov
jmp
pusha
push
icebp
sbb
test
cmp
fs
mov
int
sub
aas
xchg
sbb
pop
gs
mov
mov
in
fisubrs
icebp
cmp
sbb
xor
dec
fs
xor
test
gs
mov
cmp
xchg
add
sub
sub
pushf
cltd
aaa
cmpsb
int
mov
xor
jb
adc
popa
pop
jp
mov
insb
sahf
xchg
stc
sbb
test
cmp
push
out
mov
jmp
cltd
jge
and
pop
sub
out
int3
adc
pop
outsb
pop
adc
cltd
out
or
inc
icebp
adc
filds
nop
jnp
and
inc
ret
cltd
daa
loope
xor
add
out
and
pop
fs
inc
pop
enter
dec
in
or
stc
xchg
add
cmp
test
push
adc
sub
sub
in
sbb
iret
cmovp
rorb
adc
jle,pn
mov
movsl
xchg
push
imul
lds
subb
adc
inc
in
scas
dec
fiadds
fstl
sub
and
jae
out
adc
int
mov
test
lods
mov
mov
cmp
les
int3
lcall
adc
shll
insb
mov
out
imul
inc
insl
popa
insb
inc
ffree
xchg
lcall
sarl
aas
rcrb
mov
dec
je
les
dec
adc
popa
push
pop
in
mov
cmpsb
das
pop
jns
push
out
jp
ret
xchg
movl
cltd
xor
jnp
pop
adc
fs
in
enter
mov
data16
movsl
pop
out
enter
lret
scas
add
jg
jg
movsb
aaa
dec
int
dec
imul
lret
mov
xor
jle
imul
jmp
pop
mov
jno
jge
mov
scas
out
mov
test
mov
subb
push
adc
push
xor
test
lds
xor
sbb
push
mov
ret
movb
jb
pop
test
in
and
mov
and
jecxz
mov
pop
fldenv
lds
or
mov
mov
xor
inc
out
push
icebp
adc
fcompl
jp
pop
adc
cmp
jecxz
pop
xchg
cs
mov
inc
push
mov
push
jno
sbb
fildll
mov
nop
cmpsb
pop
repz
addr16
into
daa
pop
dec
in
add
cmp
cmp
data16
sub
pop
cmp
mov
add
int
inc
sbb
movsl
rsqrtps
cwtl
inc
xchg
lea
xchg
adc
aam
lcall
pop
xor
imulb
push
scas
or
push
cmp
inc
fwait
sub
ret
mov
mov
xor
leave
lahf
mov
cmp
jl
enter
add
insb
fs
push
popa
adc
inc
jg
lods
adc
daa
dec
dec
jns
adc
xor
dec
ja
push
or
fs
out
dec
pusha
cmpsb
sahf
sub
int
cltd
movsl
es
cmp
inc
jge
add
cwtl
mov
cmp
subl
inc
cmovle
or
in
movsl
xor
xchg
push
sub
adc
cmp
push
dec
pop
ss
lret
adc
xor
faddp
push
notl
outsb
stos
out
push
filds
sbb
int3
lcall
das
imul
xchg
and
hlt
push
pop
data16
pop
insb
fidivl
lss
rclb
inc
mov
mov
data16
jp
xor
mov
mov
lcall
pop
pop
fnstcw
mov
push
and
int
sbb
inc
out
test
add
pop
fistpll
mov
xor
fisttpll
gs
add
movsl
adc
cmp
lcall
mov
or
int3
cmp
pop
push
jge
xor
in
cltd
push
shll
xor
mov
ja
lods
scas
sub
loope
fs
adc
sub
arpl
pop
insb
sbb
imul
sbb
int3
lcall
shrb
je
jno
jmp
shrb
or
popa
inc
fistpll
push
das
mov
lret
inc
icebp
mov
fs
movsb
ficoms
sbb
scas
and
inc
pop
inc
andb
mov
mov
nop
nop
adc
jge
xchg
jae
ljmp
pop
xchg
and
test
cli
cmpsb
scas
aad
aaa
sti
cmpb
jg
lret
push
jge
mov
cli
scas
out
mov
scas
mov
cmpsb
mov
lret
xacquire
dec
pop
sub
inc
out
mov
popf
mov
les
cmpsb
out
bound
ss
sub
jmp
das
dec
pop
jne
jp
cli
xor
test
je
das
mov
fyl2x
push
lret
fdivrl
xor
in
out
cmp
outsl
cltd
std
jg
aam
and
shl
add
fwait
cmp
cmp
insb
pop
shll
in
pop
inc
hlt
punpcklwd
mov
iret
sbb
int3
lcall
adc
iret
add
in
push
shll
push
jnp
cmc
mov
xor
gs
inc
int
pusha
jecxz
xchg
jl
insl
imul
fwait
dec
cld
in
xor
pop
repz
ds
rclb
fidivrs
mov
cltd
data16
and
in
lahf
mov
push
push
mov
lcall
addr16
stc
mov
loop
aad
mov
sub
iret
xor
jno
aam
pop
jmp
jl
push
pop
mov
aad
fdivs
mov
in
int3
lcall
cmp
jle
es
rorb
sub
imul
mov
enter
xor
add
pop
popf
stos
push
jmp
out
sub
mov
not
sbb
int3
push
test
rorb
push
or
scas
inc
addr16
out
imulb
xor
lcall
insb
pop
shll
out
cmp
je
scas
loopne
ja
dec
insl
or
jecxz
jmp
mov
xchg
pop
in
push
shl
js
jp
outsb
xchg
push
aas
loope
mov
sbb
pop
shrl
push
mov
cmp
fsts
cs
cmp
cmc
dec
das
inc
jmp
xlat
push
cmc
cmp
fsubl
and
in
adc
fldcw
jge
out
sub
in
into
nop
shlb
adc
iret
push
xchg
jmp
cwtl
shll
insb
and
cmp
data16
movsb
repnz
mov
insl
inc
lods
push
add
sub
data16
inc
sbb
pop
ret
icebp
data16
or
adc
pop
cmp
insl
push
scas
push
inc
movaps
rclb
xchg
inc
and
jb
fdiv
fwait
and
cmp
or
fidivrl
lcall
mov
mov
adc
clc
fmuls
mov
dec
jno
insl
into
jl
int3
in
ss
rorb
mov
or
lock
adc
out
shlb
dec
push
or
int3
or
xor
xor
add
loope
clc
fwait
or
mov
xor
aam
pop
int3
enter
cmp
out
mov
jb
popa
dec
sub
arpl
or
xchg
sub
mov
and
xor
push
stc
movsb
cwtl
sub
sub
sub
sbb
rcll
in
popf
push
pop
jbe
and
or
nop
sbb
data16
xchg
ljmp
pop
inc
and
sarl
aas
fsts
mov
adcb
lcall
rolb
cmp
xor
into
in
and
jle
loope
cltd
ret
ss
cld
popa
inc
int
or
push
nop
xor
mov
int
push
mov
sub
ss
pusha
pop
popa
int
fdiv
push
bnd
cltd
xor
xchg
mov
jmp
xor
js
pop
out
mov
mov
repz
jae
repnz
lea
xor
int3
pushf
popa
jge
out
xchg
cmpsb
rcl
repnz
add
or
push
mov
dec
inc
adc
lods
sub
lret
lret
mov
aaa
ss
xor
in
movsb
inc
pop
add
cmc
movb
push
movsb
hlt
dec
jmp
and
scas
push
sub
ret
sbb
mov
xor
int
aam
scas
test
sbb
dec
jns
movsb
xor
jg
loop
mov
dec
xor
and
nop
in
out
jl
pop
ret
jle
popf
push
push
lret
cmp
pop
adc
mov
push
dec
push
dec
mov
daa
pop
scas
insb
push
pop
or
push
and
imul
lret
mov
fs
push
xorl
lods
xlat
out
push
ja
fwait
stc
daa
add
pop
out
ret
push
std
stc
adc
pop
push
push
addr16
jo
sbb
pop
negb
sbb
sub
nop
add
mov
pop
aad
or
or
mov
sub
adc
jb
aam
iret
movsl
lock
loopne
cwtl
xor
std
dec
or
push
and
push
cwtl
push
and
clc
xchg
inc
adc
dec
loop
mov
mov
lcall
push
mov
mov
icebp
stc
sbb
rcll
xchg
mov
outsb
and
fdiv
mov
fistps
fwait
push
pop
repnz
aad
je
cld
dec
jge
rolb
adc
popf
cltd
dec
pop
cltd
pop
jecxz
xchg
insl
mov
enter
lock
or
push
test
popf
inc
test
test
gs
xchg
hlt
out
cmc
cld
cmp
insl
xor
aas
sub
push
and
in
lahf
push
xor
mov
daa
cmp
arpl
lret
pusha
rclb
addb
mov
lods
and
adc
mov
mov
mov
pop
cmp
sub
subb
mov
pop
jnp
stos
loope
pop
xchg
cmpsl
dec
test
addr16
jg
push
sub
iret
add
inc
sbb
jno
jp
fistpll
xor
xchg
cmp
lea
out
mov
adc
xor
cmp
pop
mul
mov
xchg
ret
dec
ror
pop
stos
or
jnp
insl
add
jl
inc
add
dec
mov
push
sub
es
or
test
cltd
inc
jb
lret
call
shrb
mov
in
icebp
mov
call
imul
popf
xchg
dec
lods
or
and
jno
aam
aad
mov
enter
xchg
jb
stos
or
xchg
mov
loop
or
dec
movsl
pop
cmp
ret
popa
dec
xor
inc
jp
insl
clc
mov
jbe
insb
push
addb
cmp
push
mov
fimull
dec
mov
xchg
add
and
mov
divl
popf
scas
fidivrl
and
ss
leave
xor
mov
jno
pushf
fimull
jbe
mov
push
sbb
mov
add
iret
jecxz
pop
iret
xchg
stc
xlat
mov
pop
popf
out
lret
inc
cmp
sub
jecxz
gs
push
adc
cmp
cmpsb
or
ja
call
pop
imul
push
push
ja
push
sbbl
adc
arpl
mov
xchg
add
pop
xchg
sub
je
cmp
mov
mov
fnstsw
mov
mov
popf
cmp
add
test
dec
lret
or
dec
xor
mov
arpl
popf
popa
sbb
loope
jl
mov
dec
mov
int
mov
inc
sti
loop
mov
out
mov
pop
pop
sub
push
js
frstor
sbb
popf
insb
stos
fnstcw
and
and
scas
add
addr16
out
push
mov
imul
aad
test
sub
xchg
in
xchg
dec
jl
stos
lods
mov
lock
mov
jp
imul
cmp
loope
adc
rorl
jmp
fdiv
popf
mov
xor
xor
cwtl
adc
or
fldenv
dec
or
push
sti
fisttpll
outsb
cmp
cmc
inc
sub
push
or
mov
mov
mov
mov
mov
pop
mov
pop
sub
shlb
clc
jae
test
or
jg
lcall
pop
shl
insl
sub
outsb
sbb
iret
test
insb
cld
mov
imul
aad
fwait
insl
cmpsb
dec
add
add
xchg
test
mov
shrb
out
xor
nop
subl
mov
ja
or
cmpsl
fbld
out
pop
es
outsl
inc
ret
push
xchg
and
mov
clc
mov
nop
jnp
pop
add
sbb
push
jle
push
repnz
fwait
shr
rcrb
jne
mov
dec
mov
lods
or
imul
or
pushf
outsl
out
fs
test
xchg
adc
inc
mov
add
push
pop
adc
cmp
dec
test
jne
inc
lahf
lock
add
lret
mov
inc
addr16
loop
out
out
fildl
bound
mov
insb
mov
dec
pop
mov
xor
stos
sub
js
mulb
or
jge
add
hlt
dec
or
inc
mov
test
inc
push
and
push
jae
cld
aaa
sti
and
outsl
or
push
cmp
sbb
movsl
fistps
mov
sub
in
xchg
stos
cmp
aad
std
push
aaa
xchg
inc
hlt
mov
jge
lods
mov
aam
pop
sbb
mov
mov
call
adc
pop
jnp
fdiv
sub
pop
test
mov
fidivs
cmp
pop
mov
jp
outsb
pusha
xor
push
pop
jns
sbb
nop
mov
aas
addr16
jmp
mov
adc
cs
jle
clc
fistl
or
or
mov
fwait
out
mov
pop
jo
adc
xor
movsl
aas
inc
and
jp
pop
adc
pop
das
cmp
add
mov
stos
jne
test
movsl
and
fnstsw
and
scas
xor
xchg
pop
ret
sub
adc
test
je
sbb
jns
lret
insl
add
pop
cmpsb
shrl
lods
adc
mov
xchg
popf
enter
fwait
or
jle
lret
addr16
leave
es
into
mov
jbe
xchg
jmp
or
cmpsb
jmp
ja
aam
std
or
repz
repz
test
xor
push
jl
mov
mov
stos
ja
dec
movsb
adc
push
adc
mov
bound
sub
mov
push
mov
cmp
cmp
mov
out
jnp
loope
aaa
enter
popa
stos
scas
popa
fcomip
pop
lcall
pop
test
add
jae
xchg
jo
dec
or
cmpsl
roll
ror
mov
cli
pushf
mov
inc
loope
adcl
pop
imul
jne
out
add
pop
cmp
sti
xor
push
pusha
movsb
pop
call
bound
add
sbb
jmp
cld
push
add
mov
pushl
add
sbb
push
sbb
int
and
cwtl
clc
test
shrb
outsl
mov
int3
xchg
xor
inc
mov
jbe
les
cmpsb
out
inc
xchg
stc
in
gs
pop
dec
xchg
mov
leave
sbbl
pop
mov
lea
pop
test
out
cmpsl
push
lahf
out
push
xor
sbb
xor
ss
std
pop
ljmp
sbb
mov
stos
push
xchg
repnz
and
or
cmp
adc
loopne
aas
pop
cmc
mov
test
gs
jb
cmpsb
pop
push
sub
mov
mov
or
mov
rorl
insl
pop
test
in
rorl
jb
cmpsl
cmp
add
mov
push
jae
xchg
push
imul
mov
lds
call
sbb
scas
sbb
pop
sub
pop
sub
sti
xchg
inc
negb
add
cltd
xor
insl
pushf
dec
cli
shlb
push
adc
or
in
int3
stos
pop
inc
insb
mov
or
ljmp
or
jmp
add
jp
mov
mov
sbb
leave
push
add
outsl
icebp
cmp
fsubrs
lds
pop
xchg
ffree
sbb
or
arpl
inc
sti
rclb
pop
sahf
jno
in
mov
bound
mov
jns
or
data16
and
xor
adc
lret
push
out
push
cmp
add
ret
dec
mov
js
lea
lods
stos
jnp
dec
out
cmp
jl
lods
sahf
xor
fidivrs
dec
in
dec
jns
xchg
add
or
out
add
stos
mov
arpl
cmp
loopne
sub
xlat
jle
into
mov
aam
inc
sub
xchg
cmp
xchg
les
sahf
in
mov
out
cmp
out
daa
dec
adc
stc
sub
sbb
lock
mov
subb
cs
jbe
and
pushf
shlb
push
fmull
and
shll
dec
pop
loop
add
sub
push
call
in
and
or
push
xchg
pop
xor
push
lea
cmp
sahf
push
cltd
inc
and
cltd
jae
adc
mov
int
push
pop
push
out
adc
dec
repnz
mov
stos
sub
fistpl
inc
icebp
outsl
cmp
pop
scas
ljmp
loope
gs
mov
js
lret
cmc
stos
lods
out
push
lds
fiadds
inc
mov
xchg
and
mov
pop
xor
call
push
mov
mov
mov
add
cmc
push
sbb
aam
add
fiadds
jne
sbb
mov
mov
loop
loope
adc
or
cld
mov
movsl
in
aam
repz
adc
dec
out
jne
ret
lods
das
pop
rclb
repz
rcrl
fsts
stc
cwtl
or
pushf
xchg
std
pop
xchg
mov
sbb
fxch
mov
mov
icebp
push
into
cmp
sbbb
jp
cmp
loop
xchg
lods
xchg
jmp
jmp
js
inc
lret
loopne
xchg
scas
scas
in
xchg
cmpsl
hlt
icebp
sbb
lret
dec
leave
xor
inc
jmp
stos
scas
leave
push
les
clc
add
pop
stc
call
adc
mov
ljmp
push
mov
stos
dec
in
leave
cmp
movsl
je
dec
fnstenv
rcl
js
dec
push
test
fwait
sbb
sub
outsl
cmpsl
jne
imul
iret
mov
fstl
xor
sbb
mov
lcall
sbb
push
leave
dec
pop
push
cs
mov
ret
popa
push
fnstenv
cmc
stc
sar
pushf
or
sub
mov
and
mov
pop
adc
popa
xor
fadd
lret
in
les
bnd
int
lods
or
adc
xlat
rcrl
dec
mov
xorb
cmp
lds
fnstcw
das
jmp
aaa
lret
out
rcl
ret
push
arpl
loop
adc
adc
mov
and
sbb
mov
stos
aad
shr
sbb
and
dec
jmp
jo
loope
pushf
fbstp
xchg
andl
mov
push
std
xchg
mov
sti
inc
ret
mov
addr16
xor
and
lret
fistpl
push
add
jmp
insb
imul
hlt
mov
inc
pop
xchg
cltd
cltd
roll
and
xchg
loop
sbbl
gs
xchg
lea
pop
pushf
clc
movsl
dec
cmpsl
cmp
das
sub
lock
bound
xchg
lea
ret
stc
push
xchg
lcall
or
inc
cmp
mov
mov
movsb
in
in
or
inc
mov
clc
pop
repnz
mov
mov
gs
cmpsb
add
inc
mov
jne
test
fucomip
pop
and
outsb
outsl
sub
dec
and
testb
mov
lods
mov
xchg
ffree
das
les
push
aas
in
and
lret
imul
and
xlat
and
sar
jne
pushf
divl
lcall
xor
stc
cld
adc
cmpsl
adc
and
rcrl
jbe
mov
inc
out
pop
jb
adc
cmp
loopne
pop
sub
loopne
ja
push
and
cld
mov
cmp
push
lods
hlt
pop
jns
xchg
adc
xchg
or
or
loopne
test
int3
xor
rorl
sbb
mov
mov
mov
loopne
adc
ficompl
jle
enter
pop
mov
insb
cmp
cli
cmpsb
lods
xor
sub
cmpsl
pop
cmp
stc
sub
xor
xorb
insb
mov
xlat
jmp
jg
ficompl
inc
and
imul
ljmp
cld
mov
rcr
sbbb
loop
adc
repnz
xchg
notl
clc
inc
ja
adc
movsl
lahf
outsb
das
jae
jbe
jae
pop
mov
es
ret
push
mov
mov
jb
scas
movsb
jns
mov
stos
out
mov
imul
sub
push
or
xchg
cmc
jb
jecxz
and
cmp
jae
ljmp
push
stos
mov
fadds
pop
adcl
jge
outsb
loopne
cld
aaa
aad
imul
mov
and
dec
lea
outsl
idiv
cltd
fwait
pushf
xor
push
fistl
mov
jge
dec
mov
jmp
ret
inc
jo
ljmp
add
add
ret
pop
push
mov
cmp
lcall
sbb
ss
cmc
lock
xor
out
iret
loopne
add
jl
fisubrs
aas
xchg
and
fldl
movsl
call
add
mov
push
cltd
sub
lahf
lock
into
pushf
mov
adc
out
loope
lea
fs
fmuls
rcr
xchg
and
dec
dec
call
stc
mov
xchg
popa
mov
lret
xchg
int3
lock
ds
lret
sub
sub
sbb
sahf
mov
js
xor
jl
js
mov
sar
mov
pop
ja
ret
repnz
mov
mov
and
in
inc
enter
mov
cmp
cmpsb
pop
cmc
dec
stos
fimuls
imul
cwtl
loop
fisubrl
mov
shrl
out
fldt
gs
and
rorb
jo
inc
push
mov
rorb
lahf
inc
or
xor
push
xchg
jl
sti
add
sub
fcom
sub
sub
movsb
cli
sahf
push
cmp
adc
clc
pop
sub
sahf
popf
aam
mov
mov
lret
xchg
in
daa
cld
inc
ret
push
pushf
dec
int
mov
pushf
pop
fcoms
add
dec
add
gs
mov
add
xorl
in
xchg
shll
loopne
jae
loope
sbb
cmp
inc
hlt
sub
je
push
xor
jo
rcll
in
xchg
xchg
sub
pop
sub
test
fmull
fstpt
data16
push
scas
push
cltd
or
fwait
cli
mov
scas
lahf
lock
cmc
sbb
add
imulb
adc
arpl
fcmove
aam
mov
or
jge
jae
dec
push
push
jmp
sub
or
add
cli
test
xchg
icebp
mov
pop
fildll
rcll
xchg
out
mov
enter
lods
mov
pushf
dec
mov
add
les
push
push
fs
test
ret
test
inc
cmpsl
add
mov
scas
shll
add
inc
add
sbb
out
int
fucom
or
or
outsb
ja
pusha
jge
mov
out
data16
nop
loop
sub
xchg
sub
xor
movsl
popa
pop
js
sub
jmp
sub
mov
dec
aad
jno
jb
out
jb
fnstenv
jge
sub
mov
xlat
jl
pop
inc
cmp
in
or
gs
in
xchg
dec
dec
ljmp
bound
test
pop
iret
push
sbb
sbb
push
jns
subl
hlt
mov
test
dec
jl
jns
test
add
shll
into
pop
mov
fcmovne
pop
xor
xchg
push
popa
jp
fwait
stos
js
hlt
ljmp
push
add
xchg
pop
mov
dec
cld
lods
cli
cmp
cld
mov
xor
int3
es
xor
dec
inc
sbb
push
and
xlat
xchg
jge
insb
sbb
imul
loopne
ss
pop
les
test
pop
xchg
cld
out
popf
add
xchg
cmp
icebp
or
sub
out
mov
jl
adc
push
fisubl
in
sbb
pop
mov
clc
fcoms
and
lcall
neg
inc
xchg
adc
xor
mov
sub
stos
cmc
push
repnz
mov
dec
outsb
int3
gs
mov
inc
dec
adc
sub
mov
mov
mov
arpl
jmp
mov
ja
push
test
sub
shrl
dec
pop
sub
nop
push
cld
mov
mov
adc
fwait
push
and
into
js
inc
cmp
iret
nop
rclb
outsb
push
xchg
inc
test
mov
mov
ja
divb
mov
xchg
in
push
dec
jo
lods
imul
iret
ljmp
adc
add
jae
rcrb
test
das
or
pusha
out
loop
inc
dec
loope
sbb
ret
scas
out
leave
xchg
stos
lcall
orl
clc
rcr
mov
shrl
or
inc
testl
push
lahf
das
jne
insb
jo
fmuls
sahf
into
jp
jno
iret
imul
pusha
push
mov
cs
dec
test
push
int3
push
and
out
xchg
scas
mov
and
test
js
and
pop
rolb
mov
pusha
loope
movsl
nop
or
cmp
imul
in
in
mov
adc
cmp
pop
fdivs
sbb
jecxz
loope
into
aam
ffree
add
jl
sub
cli
lock
mov
pop
adc
xlat
cmc
repnz
or
mov
adc
push
fs
mov
call
outsl
sahf
sti
xchg
mov
sub
jae
int
jg
arpl
add
and
insl
imul
fldcw
xor
lods
lods
inc
repz
mov
iret
addr16
xor
cs
fdivs
into
popa
lahf
push
add
addr16
and
ss
mov
mov
jl
repnz
sbb
fwait
sub
push
hlt
mov
hlt
inc
or
xchg
mov
sub
aas
cs
fwait
popf
sbb
adc
cli
inc
loope
int
stos
and
mov
mov
sbb
mov
loopne
dec
pop
inc
lods
add
push
fdivr
idivl
flds
loop
scas
inc
lds
pop
in
mov
in
sub
sbb
fstpt
pusha
repnz
aas
fstps
sarl
jmp
fidivl
gs
add
stos
jae
fldcw
push
sub
scas
xor
jle
inc
fdivrl
lds
orl
into
dec
or
or
add
lods
and
loop,pn
xor
das
inc
sub
adc
jo
lret
imul
mov
sti
sti
and
xchg
xchg
jle
cmpsl
fwait
xorb
iret
mov
imull
push
int3
fsubs
andb
mov
imul
push
mov
mov
fnsave
inc
pop
jbe
in
aad
mov
push
loop
inc
js
je
push
lret
sahf
cmp
adc
cmp
push
or
inc
xor
sbb
push
lea
mov
mov
pushf
fwait
es
mov
dec
adc
rolb
inc
dec
movsb
mov
hlt
push
push
mov
ja
inc
gs
and
xor
mov
jb
loope
and
lret
es
out
fimuls
stc
mov
inc
push
mov
pop
push
ret
clc
mov
mov
mov
fwait
ja
inc
sbb
rorl
mov
daa
aad
xchg
das
ret
pusha
pop
fucomi
jnp
lret
cltd
cld
ficompl
push
int3
fists
andb
add
mov
insl
fbld
and
mov
xchg
jp
shll
ficoml
pop
frstpm(287
sub
es
jbe
cmp
xor
cmpsl
insl
pop
mov
inc
fistpll
jp
insb
int3
sbb
je
arpl
xor
jbe
xor
movsl
lods
fwait
cwtl
cmc
daa
enter
out
xchg
sub
and
sbb
int
and
aad
je
lods
les
or
test
stc
popa
outsb
repz
mov
xchg
mov
nop
jp
cmpsl
pop
mov
pusha
mov
roll
add
or
mov
xor
and
push
lea
jae
lds
sub
sbb
sbb
mov
popa
jno
or
pop
imul
mov
sub
pusha
adc
mov
arpl
dec
inc
xchg
jge
and
or
scas
icebp
jae
add
sub
test
ret
aam
mov
cmpb
push
test
mov
or
xlat
aad
mov
lahf
lods
mov
enter
fnstcw
dec
cmp
popf
cli
loopne
xlat
push
jnp
mov
aaa
lret
or
mov
mov
pop
add
mov
int
mov
xor
xchg
ja
popf
and
add
xor
sbb
mov
aaa
xchg
xor
sbb
lret
mov
in
add
adc
xchg
mov
cmp
sub
gs
outsl
mov
sub
xor
popf
leave
mov
pop
shl
scas
fcompl
fucomp
mov
cmc
and
push
dec
call
ja
out
ljmp
xlat
jmp
push
xchg
mov
icebp
repnz
or
sbb
sbb
ret
cmp
cmp
cmp
cmp
test
loope
loopne
pusha
dec
pop
sbb
stos
pop
repnz
push
mov
data16
or
or
xchg
sbb
andb
dec
adc
jbe
lret
xchg
test
xor
lahf
scas
jnp
xor
mov
andb
sbb
jo
mov
stos
into
mov
lods
cli
xchg
lds
clc
push
cmp
dec
aas
sub
sub
cmp
cmpsl
inc
push
hlt
in
rorb
aaa
xor
out
or
out
repnz
or
popl
jge
mov
add
pop
add
xor
test
push
lahf
or
inc
mov
cmpsl
xchg
hlt
fwait
mov
cmpl
and
mov
jnp
cmp
cwtl
shr
mov
sbb
lea
js
addr16
lahf
es
gs
std
and
gs
jns
and
cmc
or
add
cmc
mov
jb
imul
push
lock
cmp
add
inc
mov
pop
dec
cmp
push
and
movsb
add
push
ret
or
mov
cwtl
bound
lock
int
loopne
sbb
sbb
pop
add
mov
iret
insl
mov
pop
inc
cs
jb
mov
fs
out
lahf
cmp
das
arpl
push
repnz
inc
xchg
fcoml
pop
pop
icebp
outsb
cmc
enter
and
add
jmp
mov
nop
or
xchg
aaa
xchg
fnsave
fwait
jg
iret
cmp
or
xor
and
mov
dec
movzbl
or
xor
jmp
lds
inc
fwait
sub
ret
ja
adc
mov
push
sahf
out
xchg
shlb
lods
xlat
and
test
mov
push
outsb
in
pop
and
inc
jbe
in
lret
out
xchg
mov
push
clc
mov
cmp
mov
mov
mov
dec
xchg
mov
xlat
cld
dec
ja
arpl
shld
int
mov
scas
xor
pop
xrelease
scas
data16
and
xchg
xchg
fsubr
lds
mov
rcrb
in
roll
xchg
jmp
cld
mov
and
pop
cmp
sub
mov
sarb
bswap
lock
push
cs
mov
sub
cmpsl
mov
icebp
push
fsubrp
imul
xchg
aas
ss
outsb
jne
xchg
hlt
push
mov
xlat
outsb
rcr
push
vpsubsb
push
test
pop
outsb
adc
mov
mov
mov
mov
or
cmp
sbb
das
popf
or
mov
std
jecxz
add
mov
adc
lods
adc
jo
cmp
fwait
test
mov
xchg
dec
daa
pop
dec
mov
fisubrl
pusha
jl
pop
push
mov
movsb
sbb
lret
add
mov
gs
xchg
push
mul
mov
fisubs
xor
xchg
lea
rorb
in
and
inc
xchg
add
sub
adc
sub
xor
das
in
push
inc
push
test
jo
and
popf
sub
push
jnp
sbb
mov
pusha
sbb
xchg
cmp
push
rcll
leave
bnd
aad
fidivs
mov
aad
mov
ja
addr16
cmp
add
push
cmp
test
pop
out
lcall
and
add
dec
xchg
mov
decl
pop
dec
jae
pop
mov
lds
and
hlt
aam
xchg
add
xor
mov
popf
ljmp
cli
arpl
jg
mov
mov
js
or
pop
inc
je
cmp
or
jle
cmpsl
inc
and
mov
imul
mov
fcom
stos
mov
jg
cmp
xor
lods
sbb
jae
das
pop
pusha
sbb
dec
ss
sub
cmpsl
cltd
or
adc
dec
xchg
sub
divb
and
leave
popa
xor
mov
imul
repz
xlat
enter
and
mov
and
std
xchg
push
lea
iret
in
adc
sbb
mov
sbb
pop
xor
xchg
xchg
mov
movsb
ret
cli
loope
cmpsl
jle
icebp
call
add
dec
cmp
mov
mov
adc
push
call
jecxz
stc
push
pop
push
pop
sahf
adc
mov
pop
dec
ds
cli
pop
fcmovb
sbbl
xor
out
jl
int3
jno
dec
cmp
push
add
jge
repnz
sbb
int3
mov
clc
cs
subl
lods
nop
push
xchg
mov
insb
ret
mov
sbb
mov
jae
imul
xchg
xor
cmp
and
push
mov
out
xlat
call
stos
add
pushl
arpl
or
lock
xchg
cmpl
js
xchg
lock
cmpb
push
sbb
sti
int
mov
xchg
push
call
xchg
pusha
stos
jnp
pushf
and
inc
lret
call
ss
jmp
xchg
mov
repnz
mov
adc
dec
jecxz
mov
adc
xlat
cmp
sub
shrb
in
dec
lock
push
pop
addb
and
inc
mov
push
adc
xchg
iret
mov
fxch
dec
pop
push
cmp
mov
repz
aaa
jecxz
or
ja
out
outsl
cld
repnz
mov
fld
add
sub
pop
outsl
ror
pop
jmp
jbe
push
ljmp
and
lock
lcall
xchg
and
push
pusha
imul
jg
push
loop
xchg
mov
out
repnz
orb
ja
dec
stc
popf
adc
les
and
lods
out
pop
push
inc
mov
or
test
dec
insl
in
add
iret
rcr
add
cmp
mov
subb
xlat
xchg
adc
fwait
push
std
lods
jg
je
out
push
mov
mov
dec
daa
nop
arpl
decb
je
fidivs
cmp
rcll
scas
mov
sub
cli
xor
mov
outsl
sahf
sub
int3
rol
loop
mov
push
mov
negl
aaa
sbb
jle
mov
inc
iret
pop
stos
and
shrl
xor
mov
jle
lcall
push
shlb
in
push
mov
pop
shrl
fxch
hlt
xlat
std
cmpb
jns
cmpsb
les
mov
push
mov
lcall
outsb
subb
cli
lcall
push
sbb
pop
add
and
loope
dec
pop
adc
xchg
add
int3
jno
lret
lock
dec
dec
rcrl
out
lds
repz
mov
ficompl
fcomps
push
mov
xchg
repnz
out
addr16
sub
sti
cmpsb
sbbb
xor
pop
ss
mov
adc
cwtl
xchg
cmp
or
xor
xor
sbb
shl
lea
arpl
ret
or
lds
int3
lds
cld
and
outsb
mov
inc
adc
adc
mov
aas
test
inc
push
and
mov
mov
dec
cmp
fnstenv
adc
xchg
repnz
loope
movl
rcll
jmp
jne
rolb
inc
lock
rorb
popa
mov
inc
mov
push
sub
xor
xchg
cmp
lret
push
or
or
daa
mov
call
mov
inc
inc
jno
xor
mov
rclb
scas
arpl
mov
jg
loope
fnsave
mov
xor
lock
fsubl
adc
mov
testl
push
xchg
insb
ds
push
xlat
mov
cmp
lds
nop
adc
adc
pop
or
mov
ficompl
fistl
addr16
inc
ret
jne
test
inc
call
cmpsl
jge
ret
pusha
add
out
lds
mov
data16
outsl
sti
mov
sti
movsb
xchg
aas
pushf
iret
dec
stos
leave
sub
sub
gs
lods
cld
clc
sub
test
mov
xchg
test
cmp
lret
lret
pop
and
mov
xchg
cli
pop
pop
loope
sarb
out
in
push
imul
mov
out
sub
lock
rcrl
and
popa
out
mov
test
in
movsl
mov
stos
inc
sbb
cmp
int3
mov
push
mov
lret
push
fstps
dec
pop
adc
pop
jnp
sbb
add
pop
stc
neg
fidivrs
aad
sub
les
cltd
dec
lods
xchg
xor
mov
icebp
xor
pop
jb
out
aam
fcoml
mov
push
idiv
cltd
test
cmp
jl
adc
push
jo
loop
push
sub
ss
add
mov
mov
das
cli
lds
test
add
fwait
pop
adc
aad
push
shrb
int
lds
lea
mov
push
popa
cmp
dec
or
inc
xchg
mov
inc
dec
int3
dec
int
cmpb
push
std
xchg
xchg
xlat
shlb
sbb
jp
xor
sbb
sti
je
imul
sub
add
mov
mov
mov
std
mov
and
push
mov
mov
jmp
xchg
jbe
neg
add
mov
jle
push
cld
jo
sub
cmp
xchg
lds
and
xchg
or
jae
outsb
mov
mov
xchg
stc
gs
mov
xchg
sahf
and
and
xor
pop
inc
lock
mov
iret
and
xchg
outsl
xor
jl
push
mov
jbe
cs
call
roll
and
sbb
aad
aam
sbb
ret
dec
and
or
mov
sub
incb
cmc
dec
jmp
pushf
orb
xor
mov
jb
push
mov
pop
mov
adc
in
dec
xor
dec
push
subl
ret
fcmovnu
and
mov
lods
cli
dec
punpckhbw
in
ret
jb
idiv
xchg
inc
addr16
xor
xchg
stos
sub
das
ljmp
fs
dec
jae
lock
or
or
push
mov
xchg
push
cli
mov
sbb
fs
int
clc
push
shl
loope
in
cmp
pop
nop
ret
div
ljmp
icebp
in
push
mov
jae
stos
loop
or
popf
adc
pop
sbb
xor
push
pop
cmp
mov
cwtl
les
sub
lcall
lea
or
jne
xchg
mov
jle
push
push
inc
cltd
clc
pop
jg
cli
jp
cltd
imul
movsl
jmp
push
shlb
imul
inc
ror
leave
xchg
in
mov
or
shlb
sub
and
cmp
loopne
dec
add
sub
jmp
insb
idivl
and
ret
lods
dec
scas
dec
mov
cmp
sbb
test
xor
repz
mov
cli
into
push
mov
imul
and
xchg
sub
adc
jecxz
dec
xchg
popa
mov
jmp
xchg
adc
xchg
jle
addb
lea
adc
mov
pop
addr16
pusha
or
mov
and
iret
jle
cld
cmc
sub
or
repz
jnp
insl
lcall
fidivs
call
cwtl
jne
xor
or
nop
and
sub
mov
mov
notl
inc
pop
push
dec
sar
jns
call
sub
les
push
xor
je
lock
idiv
frstor
aaa
sbb
xor
loope
jno
dec
and
mov
cmc
dec
xor
stos
ljmp
pop
xchg
pop
mov
fcoml
push
sub
icebp
ds
xchg
ret
pop
es
xlat
pop
call
adc
mov
movb
jns
outsb
scas
in
adc
out
in
lods
ret
jecxz
test
mov
mov
dec
jns
xchg
out
in
rcl
in
rorb
into
test
mov
loop
push
sbb
mov
mov
aas
push
sti
lock
std
fstpt
cmpsb
lret
cld
pop
lods
popf
add
mov
gs
mov
pop
and
mov
pop
push
ljmp
cmp
mov
rcr
push
fcompl
push
std
sub
and
arpl
push
rcrl
jmp
shlb
addr16
jge
fs
and
pop
lret
psubd
sti
aam
leave
fwait
aaa
in
outsl
test
int3
iret
cltd
and
dec
lcall
test
enter
sbbb
or
jae
dec
fsubrs
nop
pusha
and
mov
add
or
dec
pop
test
mov
popf
addr16
les
sub
sub
push
inc
lret
out
jns
push
cmp
mov
cmp
fidivl
mov
push
movsl
aaa
dec
notl
aad
sub
mov
sti
pop
out
cmc
pop
push
dec
jg
movsb
sub
div
jge
cmpsl
call
push
mov
fs
jae
fcoml
daa
pop
pop
scas
pop
or
mov
dec
push
push
popa
sti
daa
cmp
cld
je
fcoml
xchg
mov
lock
aam
push
inc
lea
dec
imul
imul
addb
push
xor
push
repnz
ja
test
jg
fwait
cmpsl
imul
pusha
pop
movsb
xor
addr16
pushf
out
adc
or
sbb
jecxz
lcall
gs
add
xlat
pop
push
ret
fadds
and
aas
add
test
or
shrl
mov
sar
subl
aaa
cli
adc
ds
mov
sbb
dec
daa
orb
jle
aad
les
imul
movsb
ss
dec
filds
dec
xor
test
hlt
jb
cmc
gs
xchg
sahf
xchg
addr16
xchg
mov
in
mov
cmc
xchg
lcall
xchg
add
adc
loope
add
xchg
cmpsl
outsl
add
pushf
mov
mov
xor
stos
stos
sbb
inc
push
fiaddl
xlat
cmpsl
ljmp
ljmp
add
ss
inc
out
fidivrl
inc
decl
imul
cli
out
lods
sbb
dec
fnstsw
push
and
xchg
mov
js
imul
ds
mov
inc
int3
js
testb
mov
lahf
ret
scas
xor
test
lret
and
movsl
mov
adc
bound
fstl
aam
mov
adc
and
mov
mul
ret
push
or
mov
mov
das
scas
inc
call
dec
insl
sbb
add
mov
outsb
push
cmp
dec
mov
ret
cmp
mov
ljmp
xchg
cmp
mov
pop
icebp
insb
outsl
loop
cli
jge
mov
loope
or
mov
in
jbe
sbb
or
mov
dec
push
mov
int3
lods
aaa
popa
jbe
pop
leave
lea
mov
movb
sub
mov
xchg
xor
test
add
and
lret
aad
cmp
inc
lock
dec
loope
je
or
test
repnz
sti
cmc
outsb
repnz
mov
adc
and
adc
and
jp
push
into
movsl
mov
leave
pop
aam
mov
jb
push
sbb
out
es
insb
rorb
insb
insl
fcompl
fisubrs
outsb
out
in
mov
adc
int3
xor
inc
pop
outsb
inc
mov
and
pop
jbe
jbe
push
mov
fucomp
push
test
repnz
xchg
cmp
xor
adc
stos
lock
imul
xchg
dec
adc
mov
mov
not
cmp
aam
out
lcall
popf
xorb
adc
mov
aad
mov
nop
mov
mov
das
lds
cmpsb
les
fnsave
cmp
arpl
int3
jo
pop
in
mov
sti
mov
xor
repz
jne
mov
and
out
mov
cs
mov
imul
test
dec
cld
arpl
xlat
mov
jp
cmp
ret
pop
data16
je
dec
inc
clc
or
out
sarb
hlt
push
pop
cltd
fs
pop
adc
xchg
or
inc
adc
test
jo
lea
movsl
arpl
mov
repz
repnz
loope
out
jl
adc
pop
jbe
test
mov
dec
dec
adc
js
je
pop
popf
or
icebp
pop
mov
int
ret
repz
gs
mov
dec
mulb
mov
xlat
fdivs
lea
lret
fnstenv
mov
into
cmc
and
std
jbe
cli
jb
dec
js
sub
jb
adc
gs
push
add
dec
jb
xchg
xor
mov
loop
filds
push
push
lea
add
cmp
jo
mov
and
add
add
imul
sub
push
roll
jg
addl
inc
inc
sar
lret
push
sbb
sbb
add
xchg
and
xchg
sub
mov
sbb
inc
arpl
sbb
jp
cmpsl
lret
cmp
sub
push
sub
dec
jb
dec
icebp
clc
in
ljmp
mov
call
mov
adcb
mov
mov
xchg
jns
add
into
push
add
jnp
mov
dec
insl
or
mov
sub
dec
cmp
addr16
xor
mov
std
ja
push
mov
sub
push
push
out
xchg
mov
hlt
and
inc
lcall
push
in
je
cwtl
and
lret
imul
scas
push
pop
js
stos
cmp
into
lcall
push
cmpsb
sbb
add
mov
sub
and
inc
add
cltd
inc
mov
mov
jle
inc
cld
popf
jns
cmp
out
cltd
roll
rcl
push
divb
xchg
dec
mov
popa
cmpsl
xchg
mov
xchg
inc
test
fisubl
push
xchg
icebp
sahf
out
lods
jns
xchg
dec
aam
jg
out
dec
and
or
sbb
insl
or
or
push
out
inc
pop
testl
insb
sti
xchg
xor
aad
mov
add
and
call
out
xchg
cmp
out
outsb
mov
lods
arpl
dec
repnz
push
mov
out
ss
cmp
sub
sbb
aad
unpcklps
push
out
leave
test
xchg
inc
insl
dec
add
mov
and
or
cmpl
in
push
cmpsl
insb
pop
pop
sbb
dec
jbe
cmp
inc
not
cmp
outsb
loope
cmpsl
pushf
mov
jne
and
inc
or
sub
neg
inc
and
inc
arpl
mov
or
js
cmp
call
add
ja
sub
sub
sti
andb
xor
fwait
cmp
clc
inc
es
ficomps
mov
cmp
pmulhuw
repnz
jnp
std
in
mov
xor
iret
test
mulb
or
jnp
loop
push
mov
and
sbb
jle
addr16
mov
push
leave
cmpsl
xchg
pop
ds
sbb
in
inc
mov
cmp
es
dec
pop
mov
dec
push
int3
cs
adc
and
icebp
mov
adc
inc
xchg
dec
jns
loopne
test
jb
mov
fistpl
jno
call
test
stc
fildll
xor
cli
pop
aaa
jno
or
movsl
dec
inc
inc
gs
std
push
lret
mov
adc
lcall
sbbl
popf
mov
sahf
cmp
ja
stos
fildll
cs
out
pop
ficompl
cld
shll
rcrl
dec
lea
or
jl
push
cs
daa
sub
xor
jl
cltd
xor
mov
cmpsb
mov
shr
mov
sbb
fnsave
idivl
or
pop
inc
cs
in
stos
sub
test
jmp
sbb
jle
dec
jmp
xor
push
jbe
aaa
jl,pt
outsl
jl
add
iret
mov
enter
sub
enter
jmp
fsubrs
xchg
sub
movsb
out
xor
in
out
or
jnp
cld
mov
or
outsb
outsl
adc
mov
mov
add
aaa
cmpsl
cs
adc
xor
and
ss
push
fstl
and
pop
das
and
jns
mov
aam
xchg
iret
imul
jecxz
push
jne
sub
adc
outsl
cwtl
addr16
and
xlat
push
je
mov
mov
mov
loopne
xchg
aaa
jecxz
int
lret
jo
fmuls
orb
xor
dec
xchg
imul
xchg
cmpb
js
jmp
aas
sahf
ja
aas
jnp
or
xchg
sub
in
aaa
subl
mov
dec
cli
les
aam
lds
popa
xchg
repz
or
lahf
adc
mov
pop
sub
les
and
inc
pop
mov
pop
sbb
cmp
clc
ja
fiaddl
or
lea
daa
inc
loopne
cmpsl
jecxz
xchg
pop
push
sub
dec
leave
jp,pn
repnz
inc
repz
and
add
add
mov
arpl
push
pop
mov
fiadds
mov
ss
inc
cmp
xchg
imul
lcall
fsubrs
cmp
icebp
pop
pusha
cmp
push
mov
ss
sahf
scas
repz
or
mov
pop
mov
clc
shrl
add
xchg
jmp
xchg
jl
ss
lock
jbe
loopne
sti
notb
mov
lret
xchg
sbb
filds
xchg
stc
test
ret
jge
push
and
inc
popf
sarl
pop
outsl
ds
add
xor
mov
push
mov
xor
in
aaa
jb
mov
xchg
dec
sub
scas
jb
mov
sub
mov
ss
imul
mov
dec
scas
fadds
aad
out
repz
or
pop
test
adc
jno
stc
adc
in
sbbl
cmp
inc
add
mov
xor
inc
dec
mov
lahf
pop
inc
test
lea
pop
jmp
leave
xor
pop
das
sbb
cmp
add
outsb
call
mov
mov
cmpb
arpl
cmp
or
aam
mov
inc
scas
data16
lret
cmpsb
jne
adc
test
testb
lock
fnstsw
sub
rorb
adc
dec
fwait
mov
sub
stc
mov
add
cmc
xchg
xor
stc
bound
xchg
or
imul
popf
xchg
cmp
lcall
pusha
imul
or
sub
scas
inc
jbe
out
ljmp
fs
and
std
mov
cmpsb
aaa
and
lea
in
adc
mov
mov
pop
fsts
call
cmc
ja
cs
in
loope
or
mov
cmp
mov
popf
jg
hlt
jecxz
std
std
dec
lods
sarb
out
popa
test
ss
fwait
jnp
or
mov
loope
loopne
cmpsb
in
mov
cmp
mov
bound
js
sub
xor
inc
mov
xchg
push
nop
dec
icebp
leave
ds
mov
add
xchg
or
js
scas
cmpsb
push
sti
int3
xchg
mov
shlb
mov
mov
stos
inc
jle
ficomps
stos
movb
test
mov
fdivrs
leave
mov
lds
adc
xor
insl
sub
and
jbe
push
cmp
xchg
jb
jne
leave
jnp
jmp
sub
and
lahf
imul
fwait
and
inc
mov
fnstenv
int3
pop
sub
add
push
pop
fwait
lock
out
mov
jmp
cs
not
out
es
adc
outsl
pop
xchg
mov
ljmp
inc
xor
xchg
push
pop
xor
fldcw
fs
xchg
dec
ja
ss
adc
lahf
adc
push
add
popa
adc
xchg
cwtl
adc
lret
jb
pop
push
lock
dec
add
mov
mov
imul
mov
fstpt
xchg
rclb
and
das
packsswb
lods
xor
jnp
test
and
adc
sub
mov
roll
mov
mov
out
nop
sbb
inc
push
into
adc
jmp
sub
scas
cmp
gs
push
mov
mov
xlat
shl
push
add
sbbl
ljmp
stos
mov
sub
aam
lcall
imul
sub
cwtl
xor
js
mov
fisubl
pop
mov
pop
out
ficompl
pop
push
into
jmp
adcl
sub
iret
inc
pop
mov
int3
ja
cmp
iret
push
lahf
sbb
ret
inc
xor
xor
ret
ljmp
std
mov
sarb
mov
jmp
xor
in
cmp
inc
dec
jg
ret
icebp
push
push
cltd
lcall
addr16
and
lock
pop
aas
aad
inc
dec
jmp
mov
and
sub
ret
adc
mov
bound
sbb
mov
mov
ljmp
outsl
mov
int3
push
mov
push
inc
stc
mov
bound
movsl
mov
xor
xchg
stos
outsb
sub
add
sbb
mov
dec
movsl
rol
add
inc
adc
or
cmc
fsub
push
mov
ret
inc
cwtl
movsb
pop
movl
cmp
cli
loope
inc
xlat
add
outsb
popa
sbb
jno
test
out
mov
je
sarb
pushf
inc
enter
dec
loopne
int
iret
out
jmp
rorb
adc
adc
push
shlb
mov
pop
or
in
mov
std
ficomps
test
mov
adc
cmpsl
out
movsl
inc
fadds
pop
inc
sbb
and
mov
jo
ljmp
imul
popf
push
add
stos
aam
jae
push
sub
leave
sbb
fnstsw
cli
inc
pop
sub
inc
test
and
aam
int
pop
mov
dec
sub
fs
clc
xchg
cmp
or
fcoml
jmp
jo
ss
jl
shlb
sbbb
sub
sbb
in
les
mov
mov
scas
push
jbe
lea
imul
push
sbb
pop
and
cmp
push
dec
test
dec
mov
sti
dec
out
fwait
xchg
iret
mov
rcll
push
fwait
lcall
and
mov
push
mov
icebp
pop
pop
iret
push
sub
ss
add
pusha
push
inc
lahf
std
sbb
vmovapd
sub
daa
incb
fidivs
sub
in
roll
out
cmp
ret
aad
jmp
sub
jmp
lods
sbbl
lcall
lret
xor
les
lock
scas
mov
popa
ljmp
inc
sbb
sub
mov
inc
sub
cld
mov
scas
jo
sbb
xchg
dec
js
addr16
pop
popf
dec
adc
jecxz
scas
push
jbe
xor
jb
jecxz
push
mov
pop
or
and
int3
or
cmp
adc
mov
pop
rclb
lods
sub
fiaddl
mov
jne
pop
push
test
cld
pushf
rorb
jmp
or
adc
cmc
fisubs
push
arpl
dec
xchg
in
gs
xchg
pop
js
push
js
pop
mov
xor
aaa
inc
mov
out
cmp
push
adc
loop
pop
stc
mov
insl
stc
iret
push
mov
iret
jle
insb
stos
in
cmp
inc
shl
test
mull
test
dec
aaa
inc
mov
fmulp
fiaddl
mov
xchg
sbbb
or
fmuls
stos
divb
cmp
in
mov
dec
push
cld
notb
mov
mov
nop
lahf
int
sub
cltd
repnz
dec
outsb
xlat
jo
jmp
test
jl
push
dec
xchg
stos
jmp
mov
fmuls
pop
dec
or
repnz
jl
in
mov
jmp
or
lea
scas
adc
jne
sbb
movsb
mov
ds
nop
dec
or
or
fsts
push
or
faddl
outsb
ss
jmp
and
dec
fmuls
rdpmc
sbb
lods
imul
dec
dec
inc
out
mov
call
cmp
in
mov
data16
sbb
pop
popl
sub
imul
push
dec
mov
jg
iret
leave
xor
dec
aad
fwait
popa
mov
popa
adc
pop
sub
lahf
xchg
dec
gs
jnp
test
aas
push
sub
xor
outsb
ds
sti
test
lahf
jbe
rorl
xchg
add
lock
jl
fwait
lds
push
sbb
add
lods
push
add
call
inc
loop
and
sbb
pushf
sar
mov
in
loop
sbb
mov
ss
clc
popf
in
idivl
fs
pop
fisttpl
test
sbb
popa
mov
mov
jmp
mov
lret
fidivrs
mov
lahf
cmp
lods
in
insb
lea
pop
aas
mov
leave
call
fnstenv
xor
jb
test
leave
insb
mov
jb
sbb
ds
adc
jg
push
rcl
mov
jne
out
and
shrb
jp
jns
mov
nop
mov
int
addr16
test
or
jo
sbb
sub
cmpsb
in
sub
aad
inc
shl
sub
sti
ljmp
les
pop
cld
dec
inc
adc
mov
jo
mov
cmpsl
out
pop
jbe
dec
fnstenv
mov
inc
xchg
loope
orl
ficomps
push
test
or
shl
push
aaa
sub
and
cltd
sbb
in
sub
gs
mov
push
insl
mov
mov
jge
pop
cmp
nop
cmp
cltd
jl
enter
mov
sahf
das
xchg
sub
sbb
ds
daa
push
mov
sub
in
mov
xchg
loopne
jae
adc
rcrl
shlb
pop
leave
les
in
popf
push
inc
xor
movb
pop
sub
clc
or
in
adc
mov
and
inc
xchg
xchg
and
push
xor
push
lods
cmp
hlt
jnp
test
out
xchg
cwtl
pop
lods
push
push
lret
sub
movsl
sub
gs
aam
pop
sbb
mov
sub
jne
dec
cltd
xchg
adc
aas
xchg
std
pop
imul
push
dec
insl
ljmp
ret
ret
lds
clc
push
pushf
push
add
add
jno
pop
add
aaa
mov
sub
sub
mov
pop
cmp
sub
push
aas
jae
movlps
stc
and
inc
dec
jl
pop
lea
adc
jb
mov
inc
shlb
jmp
int3
xchg
xor
shlb
mov
les
loopne
arpl
jmp
test
insl
lock
arpl
mov
addr16
jge
or
add
mov
adc
popl
shl
std
add
loop
lahf
sbb
mulb
mov
jbe
push
mov
or
adc
enter
xor
aam
or
xchg
push
mov
jbe
dec
dec
dec
stos
out
roll
pop
ljmp
adc
fmul
cmp
rcll
pop
fmull
icebp
repz
or
insb
ljmp
jl
xchg
sbb
fsubl
test
mov
push
xchg
ss
and
sbb
cli
xchg
or
jecxz
jbe
scas
rolb
xchg
andl
in
movsb
arpl
pop
mov
jge
test
sbb
std
lock
lret
fwait
adc
mov
mov
fdivl
pop
and
ja
cmpl
jae
int3
arpl
push
mov
popl
sub
jnp
std
and
sub
jg
xor
jg
xchg
xchg
jae
jbe
mov
nop
out
sbb
jb
aam
movsb
aam
xorb
mov
rorb
dec
aaa
or
test
test
fmull
inc
jge
inc
mov
mov
sbb
push
push
inc
dec
jp
lea
push
in
mov
sarb
pop
pushf
xchg
fiaddl
xchg
test
mov
int
imul
jbe
pop
inc
sub
sub
shrb
outsl
and
pop
popf
sti
and
xor
sbb
loopne
push
pusha
fs
in
push
push
out
push
push
ret
xchg
mov
and
mov
jb
sbbl
das
icebp
sub
aad
mov
mov
je
sub
xor
fnstenv
pop
sahf
aas
shrb
into
movsb
orl
fwait
mov
add
push
sub
mov
mov
mov
sub
cmp
push
fdivs
inc
sar
iret
aam
mov
test
push
xchg
daa
cmp
dec
sub
pop
pop
ficompl
push
adcb
out
pop
dec
sbb
call
xor
sarl
and
jle
movsl
ja
xchg
inc
test
paddw
jnp
fimuls
jae
es
outsl
sub
push
popf
lret
aaa
mov
and
mov
and
push
leave
js
sub
fists
xchg
imul
arpl
add
lret
xor
inc
or
pop
mov
addr16
in
or
jle
and
push
imul
mov
dec
das
int3
mov
xchg
adc
xor
mov
fldt
push
jp
adc
ret
mov
hlt
pop
inc
out
sub
jmp
ret
lock
lea
imul
mov
stc
cs
je
nop
xchg
rcr
adc
sbb
sbb
pop
pop
mov
jg
mov
and
xor
add
mov
sub
dec
pop
mov
push
push
movsb
mov
call
testl
pop
mov
out
mov
dec
call
sub
ja
sbbl
jbe
les
push
push
jg
push
mov
data16
jo
pop
jle
jno
ret
and
das
movsb
sub
xchg
arpl
arpl
in
or
out
jae
orb
jmp
daa
cmp
fdivl
mov
mov
inc
jb
daa
bound
and
push
notl
loop
mov
daa
and
sbbb
pop
shll
jl
sub
jmp
cmp
in
mov
push
rcrb
jo
pushf
sub
mov
mov
mov
pop
lcall
repnz
dec
in
ret
test
mov
bound
or
loope
dec
jmp
mov
ffreep
mov
out
sub
stc
push
mov
sti
mov
mov
adcl
pop
pop
or
movsl
xor
lret
and
mov
dec
cmp
insl
clc
imul
movsl
dec
icebp
adc
mov
stos
sbb
add
icebp
cwtl
cld
addb
std
mov
popa
mov
mov
fcomip
mov
stc
jnp
xor
jnp
outsb
adc
pushf
pop
stc
xor
adc
clc
mulw
std
test
sub
stos
and
mov
lret
ret
pop
lds
lods
lcall
loopne
fsts
rolb
cli
or
sbb
jge
jge
mov
std
mov
outsl
insb
jge
scas
cli
lahf
inc
pusha
or
cs
mov
or
xchg
jg
movsl
push
loop
jno
rolb
fsub
leave
fnsave
adc
es
xor
and
sub
imul
cmp
dec
xor
add
cmp
shrb
fsub
adc
cmp
mov
pop
test
mov
sub
es
inc
xchg
mov
orl
mov
mov
mov
ljmp
dec
sub
pop
cmpb
mov
mov
popf
loop
imul
cli
pop
jmp
dec
cmp
xlat
bound
das
add
or
jns
xchg
dec
adc
jne
in
mov
stc
or
mov
and
ja
sti
lahf
daa
arpl
cmp
mov
pop
jp
repnz
adcl
or
jle
adc
loopne
stc
in
pop
cltd
cmpsb
es
add
ljmp
jnp
rorl
pop
mov
xchg
mov
pop
bound
xchg
stc
daa
mov
outsl
aas
push
adcl
hlt
cltd
loop
mov
aad
mov
iret
imul
push
pop
mov
xor
iret
adc
shll
fnstenv
int3
dec
mov
sbb
pushf
jbe
jbe
cmp
adc
int3
jnp
jae
clc
cmp
cmp
sub
aas
ror
aam
sbb
or
pop
cwtl
cltd
ss
mov
je
mov
pop
insb
dec
rolb
popf
push
jbe
dec
mov
js
arpl
repnz
cmpsb
cli
mov
pop
and
int
adcl
daa
iret
andb
ljmp
xchg
mov
add
aaa
pop
mov
jb
or
xchg
stos
test
adc
jns
lret
xchg
out
or
out
enter
add
in
iret
test
loopne
mov
xchg
mov
roll
aad
sti
icebp
nop
sahf
fisubrl
testb
mov
out
movsb
xor
xor
jne
call
xlat
jne
out
jnp
insb
testb
hlt
fldt
jns
insl
call
outsb
push
cmpsb
mov
xor
js
fadd
add
loopne
add
repnz
jmp
and
flds
popa
bound
cmp
lods
loop
insb
mov
je
lods
add
pop
loop
push
fdivl
xchg
sub
add
push
mov
adc
inc
lcall
dec
rcrl
imul
test
add
ficoml
add
dec
jge
cmp
je
mov
out
or
mov
sub
dec
mov
lcall
xchg
test
xchg
int
mov
dec
dec
inc
fwait
sbb
xor
sbb
xor
aas
mov
pop
mov
aas
pushf
loop
sbb
test
popf
pushf
in
mov
imul
pop
mov
shlb
jmp
add
pop
jg
mov
inc
lret
cmp
js
jbe
push
and
pop
jno
mov
adc
or
pop
push
in
std
ja
iret
call
xchg
pop
xchg
fstpl
call
hlt
inc
call
shl
mov
push
roll
shrb
arpl
pop
mov
inc
mov
in
popa
ds
int
pop
test
mov
adc
adc
dec
xor
lcall
push
pop
enter
popf
shl
sbb
addl
scas
popf
adc
inc
setle
xchg
mov
add
sbb
repnz
loope
add
jp
and
aaa
fidivrl
xor
bound
sbb
push
bound
js
mov
sahf
mov
or
loop
or
movsb
shll
push
dec
mov
mov
cmpsl
lea
ss
push
scas
cmpsb
inc
subb
out
cmp
pop
es
je
pusha
loop
outsb
xchg
mov
int3
pushf
dec
popa
out
aaa
js
mov
push
jmp
fnstenv
es
ret
jp
or
sbb
data16
dec
cmp
lods
shl
stos
cmpsl
out
fldenv
xchg
das
mov
and
xor
adc
jmp
and
ds
mov
cmpsl
insl
testl
fs
dec
xchg
inc
lods
idivl
dec
cmc
or
mov
cmpsb
mov
sbb
nop
push
mov
adc
fimuls
in
aas
mov
stos
out
mov
pop
mov
mov
lret
cld
push
sbb
pop
aaa
stos
dec
movsb
or
call
loopne
push
test
ds
xchg
leave
dec
mov
xchg
test
push
fisubrs
movsl
subb
mov
lods
pop
cld
or
dec
int
mov
mov
popf
scas
adc
jbe
shr
in
lret
and
jmp
inc
sub
cmp
not
mov
ljmp
int
add
shl
mov
fs
shrb
xchg
ret
mov
adc
sub
sub
cmp
add
pop
daa
cmp
mov
pop
lret
xor
add
ds
or
or
inc
aad
jl
dec
nop
pop
pop
dec
jnp
sbb
mov
insb
loop
and
stos
dec
sbbl
dec
fildl
xor
push
jge
cmp
leave
cmp
outsl
loop
sarl
jp
xchg
xor
xchg
jnp
nop
cmp
cmpsb
loop
mov
test
push
fstl
in
add
outsl
repz
fs
outsl
cmpsb
push
and
adc
enter
test
in
out
lea
cmp
mov
jnp
shr
insb
add
mov
ret
je
movsl
inc
outsb
and
ljmp
inc
aas
mov
cld
cli
ret
mov
lret
mov
cmp
jmp
mov
lods
in
xor
test
fidivrl
push
pop
xchg
sti
jbe
inc
insl
or
cmp
outsl
ffree
out
push
sti
icebp
fs
mov
mov
mov
jno
jg
or
int
daa
stc
sbb
out
cmpsl
rclb
inc
aam
ret
sub
je
mov
ds
add
outsb
xchg
into
mov
leave
cld
hlt
or
fimuls
pusha
int3
cld
inc
inc
das
mov
popf
sbb
fistpl
ret
add
jmp
decb
pop
sub
sub
xchg
imul
stos
mov
mov
fs
ret
or
mov
in
insl
lcall
mov
sub
gs
push
ja
jae
inc
adc
add
inc
xchg
ss
test
adc
aaa
lret
popa
inc
mov
xchg
pop
jns
out
ret
and
and
sub
cld
enter
ja
add
ljmp
fmuls
mov
push
lcall
cmp
push
jnp
cmp
pop
jp
leave
inc
pop
cmp
and
js
mov
xor
movsb
mov
clc
popf
pop
add
outsl
cmp
xchg
cmp
pusha
test
add
adc
mov
clc
out
clc
adcl
adc
movsl
insl
fstpt
mov
lds
jecxz
dec
add
scas
sbb
jnp
cltd
pop
inc
push
inc
arpl
in
mov
adc
add
stos
sarl
orl
xchg
push
out
jns
cmp
push
push
test
int3
add
andb
mov
or
shrb
mov
and
adcb
jbe
mov
inc
jb
pop
insb
and
shl
addr16
ficompl
add
or
push
cmpsb
ss
ss
pop
mov
leave
ja
jge
xor
popf
mov
sub
lods
sarl
jo
inc
cltd
in
push
mov
sub
fadds
stos
adc
push
test
into
pop
jnp
lret
add
push
lea
fsubrp
mov
loop
clc
mov
popf
clc
mov
or
dec
or
xchg
xor
mov
lds
bound
xor
mov
xor
addb
mov
sub
icebp
lcall
daa
sti
jge
or
cmc
movsb
mov
inc
insl
mov
and
in
mov
pop
gs
sbb
inc
les
cmpsb
lods
sbbb
lods
stc
xchg
push
fucompp
pop
xor
jmp
lods
xchg
ds
into
adc
sub
push
imull
push
mov
pop
sarl
stos
dec
fsubs
lret
out
xchg
and
sbb
scas
pop
or
cmc
jnp
into
push
push
push
cmp
divb
dec
dec
cmp
mov
dec
dec
hlt
shr
push
xor
lods
xchg
mov
mov
cmc
or
daa
adc
mov
imul
out
das
push
jne
loope
out
or
in
cs
negb
daa
fsubs
iret
ret
push
or
test
mov
ljmp
xchg
int
cld
jbe
dec
mulb
hlt
xchg
jle
imul
shl
xchg
xor
jg
jp
cmp
xchg
mov
push
scas
out
inc
lods
sbb
cmp
daa
sarb
xor
mov
add
sub
cmpsb
aas
stos
loopne
repnz
mov
xchg
nop
dec
inc
push
jmp
xor
and
mov
lcall
mov
lods
mov
hlt
imull
xchg
jmp
cwtl
mov
lds
add
loopne
dec
aam
in
mov
inc
daa
mov
inc
cwtl
cwtl
pop
sub
lods
loope
push
mov
pop
call
jne
push
loopne
pop
pop
mov
repz
inc
cmp
dec
xchg
insl
stos
incb
push
cmp
mov
mov
adc
outsl
jo
mov
imul
pop
cmpsl
pop
je
sbb
in
mov
push
mov
cld
fwait
mov
fwait
sbb
repz
push
das
xor
or
pop
mov
xor
jp
aas
cmc
outsl
and
iret
mov
std
nop
push
scas
fwait
mov
xor
cli
or
or
sub
or
xlat
cli
jp
mov
mov
sbb
inc
es
jl
or
mov
sahf
sbbl
addl
cli
cmp
hlt
pop
cltd
jb
mov
movsb
aas
cmp
inc
pop
leave
into
ss
sarb
mov
sbb
push
mov
not
mov
or
xor
lahf
sahf
scas
xchg
dec
in
scas
xor
mov
push
daa
pop
aam
hlt
pop
mov
shl
in
lea
ja
iret
adc
cmc
rep
aas
pop
iret
mov
pop
pshufw
push
je
imul
lahf
add
or
scas
test
jl
repnz
jecxz
jmp
inc
xlat
mov
sub
and
cwtl
jge
mov
xchg
int3
or
iretw
mov
lcall
xchg
into
jge
push
call
inc
test
inc
lret
scas
icebp
outsl
icebp
cmp
aas
in
shl
sub
test
mov
andb
sbb
fsubs
jne
sbb
dec
xor
sahf
popl
clc
jb
pop
jbe
cwtl
aad
std
mov
in
sub
inc
push
and
jecxz
sub
cmc
daa
adc
adc
mov
fwait
cld
lret
or
rcrb
pop
xor
jmp
push
add
pushf
out
repz
push
mov
dec
mov
mov
xchg
xchg
mov
lcall
addb
in
xchg
scas
mov
mov
loopne
xor
sbb
int3
dec
js
call
ljmp
xchg
push
insb
xor
inc
lcall
cs
push
cltd
out
cmpsb
int3
pop
cmp
xlat
xchg
xchg
jg
and
adc
clc
cmp
push
inc
or
jo
xor
lock
scas
in
fstps
mov
push
add
hlt
xor
xchg
add
add
mov
xor
mov
jnp
hlt
out
outsb
rolb
adc
push
fstpt
push
lahf
xor
fmull
sub
xor
lods
rcrb
xchg
jmp
lcall
pop
jl
int3
ss
xor
push
nop
push
jnp
push
ret
jnp
push
rorl
jnp
or
or
inc
leave
mov
mov
gs
lods
arpl
pop
std
xor
and
dec
push
test
xlat
pop
test
sbb
cmp
ljmp
cmp
inc
mov
adc
cmp
cmp
hlt
ss
sub
mov
inc
das
jbe
inc
push
aas
sub
push
aas
aaa
xor
ret
mov
pop
push
addr16
sub
mov
mov
inc
cmp
xchg
mov
cmpsl
into
lcall
stc
pop
enter
fwait
mov
mov
sbb
movsl
aam
rcll
incb
hlt
lds
xor
test
stc
mov
add
lods
add
jle
icebp
sbb
aam
jge
push
cmp
inc
jne
inc
xchg
into
or
or
aaa
adc
sub
rorb
xchg
out
add
inc
arpl
in
es
add
in
addr16
imul
stos
push
iret
mov
lds
sbb
iret
outsb
inc
or
dec
dec
jne
adc
movsb
push
mov
sub
or
mov
loop
stc
data16
cmc
repz
iret
in
push
push
pop
ljmp
mov
cwtl
mov
jnp
or
inc
add
iret
aam
jge
icebp
cmpsl
adc
call
and
js
cwtl
lret
int3
shrl
rcll
cmp
cmp
orb
call
decl
testl
lret
lahf
mov
push
lods
push
push
pop
and
aad
dec
flds
add
clc
out
insl
jns
addr16
adc
dec
sbb
push
negl
fs
pop
repz
mov
cmpsb
dec
mov
xor
and
sub
and
out
fcmovnu
cltd
popa
sti
mov
or
rcpps
xor
imulb
out
mov
xchg
mov
cmpsl
or
pop
cmp
adc
repz
cmp
push
das
scas
adc
jae
test
push
ret
sbb
mov
pushf
stc
pop
stos
scas
loopne
and
notl
iret
int3
sbb
xor
ja
jbe
mov
mov
adcb
rorl
jo
lahf
cmp
jl
mov
jp
jge
scas
cmp
mov
mov
je
jbe
aad
dec
mov
dec
jne
rolb
push
hlt
push
mov
mov
stos
or
mov
int3
test
pop
lock
lods
inc
mov
rcr
arpl
les
arpl
out
adc
xchg
sahf
dec
adc
push
mov
pop
in
add
jmp
sbb
outsb
int3
pusha
aam
mov
mov
xor
push
push
or
out
insl
jecxz
push
xchg
repz
push
or
sahf
adc
sbb
leave
outsb
and
cmc
adc
sarl
out
sbb
xor
movsb
sub
fwait
pop
sbb
sahf
inc
idivl
js
test
xchg
pop
repnz
xchg
xlat
push
mov
es
dec
add
ret
bound
mov
cmc
mov
shr
sbb
or
arpl
sub
test
push
pop
hlt
lret
fs
or
shrl
add
and
inc
lret
sti
sbbl
sbb
adc
in
adc
sti
mov
lock
cmpsb
jns
mov
push
mov
xchg
sub
dec
loop
jecxz
xchg
xchg
xchg
addr16
ret
or
mov
xchg
mov
mov
adc
fdivrl
ds
out
sbb
je
int
xchg
pop
mov
inc
mov
or
and
out
jmp
and
js
xor
les
cltd
outsl
ja
insb
lea
mov
sub
mov
stos
cmpsl
mov
add
jp
ds
fmul
sub
pop
fistpl
xchg
icebp
repz
shll
shrb
or
insl
arpl
xor
xchg
xor
sbb
sahf
mov
mov
scas
mov
add
or
lods
int3
ss
pop
std
fimuls
lret
add
imulb
jno
sbb
cmpsl
adc
mov
pop
jecxz
fs
sub
dec
push
mov
ret
das
enter
sbb
push
inc
mov
pushl
lods
out
jbe
std
mov
push
or
clc
in
js
jns
sbb
pop
lods
cmp
mov
xchg
rcll
icebp
rcrl
dec
push
js
or
and
add
out
lahf
outsl
adc
jecxz
stc
ds
inc
pop
cmp
sbb
push
pop
sub
xchg
add
cmovp
sarl
aad
insb
outsb
lea
jae
jns
stos
shl
cld
cltd
cmc
movsb
imul
mov
movsb
push
mov
pop
adc
lock
cmp
or
sbb
cld
xor
lds
inc
mov
iret
int
inc
out
adc
ret
mov
pop
xchg
mov
jg
outsl
add
inc
dec
es
and
xchg
inc
out
push
or
mov
cmpsl
popa
cmp
xchg
cld
dec
adc
mov
cwtl
sbb
sub
mov
and
pop
aad
mov
mov
iret
pop
pop
aad
dec
push
aam
dec
xor
lahf
and
xchg
cmpsl
icebp
faddl
fidivrs
jo
das
aam
nop
or
xchg
sub
dec
adc
icebp
stc
fdivs
pop
jno
int3
hlt
int
stos
sbb
lahf
ds
and
adc
dec
dec
push
xlat
pop
bound
and
cmp
pushf
lods
lret
jno
dec
in
xchg
jmp
sub
dec
xor
mov
or
jne
lret
sbb
aaa
ss
dec
push
mov
dec
jae
add
rcll
pop
fsts
mov
lret
pusha
mov
mov
jecxz
and
repnz
or
nop
jp
and
jnp
dec
fwait
test
push
add
fimuls
and
das
iret
pusha
fnstenv
push
pushf
push
rcll
xchg
out
jecxz
rorb
xchg
imul
lea
repz
lcall
arpl
mov
sbb
xor
js
xor
jo
jge
pushf
inc
mov
nop
lds
inc
shrb
loop
ja
test
mov
and
aaa
jno
or
inc
fdivs
fldl
scas
xor
icebp
out
mov
cmc
mov
or
push
daa
cmpsl
sub
fiadds
dec
scas
inc
push
or
adc
and
and
sti
ljmp
jge
lahf
js
or
push
sar
sub
cmp
jl
cmp
rcl
mov
push
ret
xchg
cmp
adcl
xchg
add
xor
jl
scas
js
inc
sub
fisubrl
mov
sbb
and
int
jnp
sbb
add
or
gs
and
test
fnstenv
imul
sbb
out
push
sbb
pusha
test
lods
rclb
inc
add
cmpsl
mov
psubd
mov
out
andb
std
into
inc
ja
dec
add
mov
das
decl
jl
pop
or
sub
dec
cld
das
call
movsb
stc
enter
mov
adc
shll
add
jns
xor
sbb
outsb
xchg
mov
loop
fstpt
adc
in
mov
sbb
mov
pop
and
or
dec
adc
rcrb
push
xchg
lods
dec
iret
js
movsl
jne
jne
data16
lods
dec
jnp
aad
push
mov
cmp
out
pushf
push
test
xor
xlat
sub
gs
nop
or
adc
pop
xorl
sub
or
dec
fs
out
mov
mov
test
sub
inc
in
cmp
inc
sbb
rclb
dec
ljmp
cmc
in
dec
xchg
mov
cmpsb
nop
inc
dec
insl
fwait
xor
and
sarl
and
cwtl
dec
pop
dec
ljmp
pop
mov
inc
repnz
mov
rclb
mov
sbb
cmp
mov
stos
add
cmc
jae
dec
pusha
add
fiadds
xchg
mov
add
repz
clc
insb
mov
cmc
inc
mov
daa
or
imul
pop
pop
mov
sbb
jno
into
xchg
dec
pop
adc
pusha
cmpsl
jae
mov
mov
lds
push
fisubs
movsl
out
stc
mov
and
cmpsb
std
jnp
hlt
fstl
inc
cmp
jmp
jb
scas
mov
and
je
cmpsb
sbb
or
lahf
sub
rcll
jp
repnz
pusha
stc
das
out
pop
push
outsb
jmp
in
rclb
pop
add
mov
aam
pop
das
jge
push
cltd
inc
stc
adc
sti
or
xchg
cmp
cs
cmpsl
cmp
js
dec
aam
dec
out
lahf
adc
dec
mov
dec
adc
es
rcrl
js
nop
imul
or
add
cli
add
hlt
and
mov
xlat
pop
push
or
push
sbb
push
sbb
jno
dec
cs
std
ja
xchg
data16
mov
sbb
cmpb
ljmp
jae
adc
ret
vshufps
dec
test
lahf
faddl
enter
insl
lcall
js
add
push
ret
push
push
out
out
adc
test
pop
sub
mov
jb
push
lock
pop
lahf
jns
imul
in
jp
adc
push
mov
push
and
addb
decl
sbb
lods
adc
pop
rcl
and
push
and
cmpsl
jb
mov
icebp
cmpsb
inc
sbb
in
sub
inc
aaa
xchg
cmp
cs
sbb
cmp
int
ret
scas
bound
insb
je
pop
loopne
fisubrl
lock
push
mov
aas
jne
js
ja
ror
pop
les
sahf
mov
or
ja
jno
mov
iret
ja
fcomip
pop
loope
std
icebp
insl
adc
mov
addr16
lods
dec
mov
dec
xchg
adc
shll
pushl
lret
leave
jae
sub
out
pop
mov
pop
cmp
mov
inc
shll
adc
sub
and
pop
xchg
sbb
sbb
jbe
sub
icebp
sbb
jecxz
mov
cmp
push
aam
pop
cmp
sti
pop
xor
lahf
jns
inc
adc
cs
adc
cmp
xchg
pop
mov
xchg
jns
gs
push
dec
mov
xchg
adc
mov
imulb
iret
add
jnp
out
pop
mov
cmpsb
jmp
jmp
loopne
inc
push
cs
jmp
mov
lahf
ss
cmp
inc
sub
idivl
lods
and
mov
nop
mov
mov
cmp
push
inc
shll
sbb
lock
dec
xchg
dec
mull
inc
sti
mov
data16
mov
jp
pop
cmp
push
and
dec
int3
or
aaa
or
pop
insl
aam
mov
cld
mov
loopne
pop
std
mov
jg
jmp
xchg
dec
sbb
sub
jmp
lea
sbb
sub
mov
cmp
xlat
inc
jo
sti
add
or
aaa
mov
je
cld
femms
enter
cmp
movsl
ret
dec
scas
xchg
dec
xor
popa
dec
cwtl
push
repz
push
out
sub
stos
jge
testl
pop
ljmp
imul
out
pop
sbb
jle
mov
lahf
or
cmp
shll
xchg
sub
cwtl
mov
out
dec
call
ljmp
jae
sub
jno
inc
mov
loope
jmp
sbb
hlt
dec
inc
jp
repz
notl
ficomps
mov
jge
in
lcall
lods
scas
mov
xor
rolb
scas
scas
mov
pop
xrelease
inc
mov
cltd
xor
xor
in
mov
lret
sti
js
hlt
outsl
mov
mov
push
sbb
loope
in
repz
cs
scas
in
lcall
gs
incl
scas
lds
sbb
push
xchg
pop
add
test
xchg
int3
lods
sbb
pop
dec
inc
in
add
out
mov
loopne
jge
cld
cwtl
mov
shrd
insl
sbb
fcmovb
mov
mov
mov
sub
adc
or
leave
dec
test
lahf
or
xchg
mov
addr16
ds
fadd
pop
inc
cmp
scas
push
rorb
fsubl
add
rcl
fwait
inc
icebp
inc
les
fldcw
sub
xchg
insb
add
dec
cmp
dec
aam
les
cmp
ret
add
mov
push
lcall
jmp
pop
arpl
in
jle
xchg
insb
sahf
inc
decl
inc
or
sub
jo
xchg
ja
xchg
adc
xchg
out
jo
mov
jnp
pop
xlat
xor
sahf
gs
mov
xchg
ror
lcall
lock
or
adc
and
scas
mov
bnd
leave
clc
xchg
and
movsl
cltd
jbe
outsl
repnz
fwait
xor
xchg
mov
fdivrl
insl
ret
lock
mov
lret
jp
popa
cld
repnz
cld
cmc
out
mov
inc
add
sub
insb
fstpl
sub
jb
jns
mov
cmc
push
dec
ja
jns
push
in
aas
fiadds
or
jecxz
cltd
fnstsw
xchg
and
sub
clc
clc
mov
hlt
lret
clc
adc
sbb
in
mov
movsl
pushf
arpl
and
dec
fs
push
insb
mov
or
jp
adc
xchg
cmp
inc
add
mov
sahf
cmpsb
fnstsw
ficoml
cmpsl
sbb
popa
fmull
popf
jg
subb
mov
inc
js
cli
std
nop
pushf
sbb
xchg
mov
fsub
lahf
repz
pop
lds
sbb
shrl
insl
scas
adc
lds
adc
ficompl
pop
filds
mov
lds
xchg
adc
sbb
ljmp
mov
mov
imul
mov
push
or
and
aam
xor
fdivs
cltd
add
and
mov
pop
mov
or
sub
mov
mov
push
rclb
adc
jno
xchg
cmp
pushf
pop
mov
fcompl
or
sub
xchg
push
jge
mov
fistpll
jno
dec
popa
cwtl
repz
hlt
scas
jmp
and
shld
sub
jecxz
pop
les
pop
lret
repz
insl
jle
es
out
fsubrl
lret
pushl
insb
iret
push
mov
in
cmp
negb
cld
icebp
lahf
in
mov
scas
push
test
jns
and
sub
pop
push
push
dec
sbb
imul
xor
pop
out
ss
in
clc
leave
cmp
fwait
lret
jg
pop
jnp
jmp
js
mov
push
test
dec
mov
das
jecxz
jecxz
lods
mov
xchg
cmovae
sahf
loope
fcompl
mov
and
pop
and
pandn
cmp
inc
jecxz
in
in
leave
ss
push
movsl
add
stos
or
inc
xor
iret
push
adc
or
in
add
jecxz
sahf
adc
mov
outsl
inc
sbb
hlt
addr16
sbb
sbb
lods
test
jmp
mov
nop
sub
push
jmp
mov
mov
pop
inc
adc
push
bound
je
mov
aad
int3
out
dec
pushf
ss
ret
pop
xchg
lret
pop
outsl
or
aad
push
pop
popa
push
test
sarb
fildll
sbb
cmp
stc
mov
int
mov
mov
fdivs
jnp
mov
jl
dec
mov
mov
sub
inc
jbe
movsb
mov
dec
in
and
push
icebp
pop
fstl
jge
xchg
ret
insb
sub
mov
cmp
lock
and
and
jbe
cmpsl
xchg
add
dec
pop
sbbl
mov
push
add
or
pop
aas
aad
sbb
aas
daa
pusha
insb
or
fstpt
testl
int3
int
mov
divb
xchg
ds
xchg
lret
insl
sbb
and
dec
in
loope
jg
cli
cwtl
mov
nop
xchg
addr16
shl
pop
sti
pop
xchg
push
and
loope
sti
push
cmp
rol
dec
jae
xchg
stc
push
mov
mov
sahf
out
pop
fistps
jae
xchg
pop
mov
xorb
xchg
and
out
test
xchg
ficompl
add
lock
inc
push
sbb
add
mov
pop
mov
int3
sub
xor
and
add
addr16
fsts
sti
ficoml
mov
inc
stc
sbb
loopne
dec
jp
jmp
stos
adc
sbb
nop
push
inc
fisttpl
or
aad
mov
ror
fdivrp
push
lods
mov
xchg
inc
xchg
xchg
mov
popf
pop
mov
in
jnp
pop
in
jno
add
insb
in
xor
mov
mov
mov
xchg
leave
fwait
xchg
cmpsb
mov
jl
out
cmp
pop
and
lret
dec
scas
sbb
addl
inc
push
in
xor
lods
mov
or
stos
pop
in
jge
hlt
testl
addl
jns
sub
ja
pop
inc
add
insb
cmp
ret
fisubl
mov
ret
mov
lds
cld
aam
not
into
pop
jl
stos
nop
mov
mov
push
and
mov
repnz
jmp
aaa
lds
fldenv
mov
xchg
sbb
jbe
mov
loop,pn
sahf
fisttpll
ljmp
add
adc
ljmp
pop
int
icebp
add
cmovno
shrl
das
push
xlat
inc
xor
idivl
inc
jge
and
hlt
fsubrs
sub
popa
int
cmp
repz
out
roll
xchg
out
jo
cmp
mov
add
xor
out
mov
lahf
mov
or
and
imul
jmp
mov
xor
lock
cwtl
int3
movsl
mov
mov
enter
pushf
inc
jl
arpl
push
xchg
or
outsb
cld
dec
aas
ret
insb
fcomps
call
cmp
enter
add
cmp
dec
dec
rclb
push
mov
fistl
sub
inc
mov
jno
aam
lret
inc
add
gs
push
testb
xor
mov
rcll
sub
repz
lods
sub
fsubrl
repnz
mov
mov
ret
cmpsb
cwtl
fld
loope
add
in
and
lahf
xor
adc
xchg
sbb
mov
xchg
inc
mov
push
fisttpl
sub
movsb
out
mov
data16
mov
jle
xor
fdivl
scas
adc
mov
add
xchg
pop
xor
inc
repz
jecxz
iret
clc
enter
add
adc
shll
adc
mov
sti
test
fisubs
push
sub
jmp
les
mov
fwait
mov
fldcw
repnz
movsb
addr16
jns
push
out
inc
fadd
push
fisubl
iret
dec
mov
clc
aaa
loop
pop
scas
out
mov
cwtl
xor
bound
fimuls
fcompl
sub
shlb
cmc
scas
mov
xchg
or
jecxz
cmp
loopne
pop
out
cld
jo
stos
xor
adc
push
fisubl
sbb
jge
push
push
fsubrl
call
adc
sbb
xchg
adc
int
iret
stos
and
push
popf
pop
xor
xchg
jmp
hlt
nop
and
imul
out
or
les
jmp
jno
cmp
inc
cmp
jo
stos
inc
inc
xchg
jmp
jmp
push
push
adc
repnz
inc
mov
aad
push
movsb
sub
mov
ret
aaa
and
add
cmp
pop
repz
test
sbb
inc
jmp
mov
pop
mov
and
jnp
adc
mov
sbb
mov
mov
jge
sbb
pop
loope
dec
hlt
jne
jle
and
clc
xor
jecxz
xchg
mov
mov
xchg
add
inc
mov
push
outsl
cmp
mov
sub
mov
inc
mov
int3
and
hlt
mov
ljmp
inc
add
pop
in
ljmp
push
pop
xchg
mov
xor
xchg
pop
mov
inc
fimuls
roll
push
add
xor
popf
test
cmp
incl
ja
fnstcw
and
pop
hlt
popw
fucom
inc
cmpsl
addl
jecxz
fwait
or
rcll
mov
mov
mov
sbb
adc
jns
and
rcll
xchg
mov
or
scas
repz
add
xorb
pop
int3
psllw
mov
decb
and
jle
push
push
jg
sahf
jo
sub
jnp
mov
fdivrp
fnsave
mov
mov
adc
lahf
mov
fs
repnz
movsb
sub
mov
ja
js
push
jle
mov
lcall
daa
dec
inc
fidivs
xor
jle
push
pop
movsb
mov
push
jne
xor
aam
jbe
cmpb
loope
out
sub
ret
ds
bound
pop
or
cmp
imul
inc
std
mov
shlb
or
jl
sti
fs
popf
lret
cmp
inc
mov
pop
xorb
enter
outsb
jbe
mov
movsb
cwtl
xchg
dec
int3
inc
into
dec
xchg
jo
jbe
jg
lcall
xlat
daa
push
test
xor
mov
pop
js
addb
xor
push
mov
sbb
xor
fs
scas
int3
xchg
add
jb
int3
cmpsb
std
lcall
in
push
inc
pusha
mov
or
dec
jmp
or
call
inc
adc
out
xor
hlt
es
adc
lahf
pop
jns
addr16
add
push
jnp
jl
stos
push
das
mov
pop
push
pop
push
cs
outsl
popf
sub
out
loope
sbb
xchg
mov
xchg
mov
inc
jns
sarl
mov
aam
rcrb
sub
mov
sub
iret
icebp
ret
pop
fimuls
outsl
cmpsb
js
mov
pop
xchg
xor
xchg
popl
je
repz
test
fstp
pushf
mov
and
std
dec
mov
mov
push
sub
in
jmp
cmc
in
js
insb
pushl
repnz
mov
jecxz
push
out
xchg
mov
sub
scas
push
pop
call
mov
into
in
cli
cmpsb
jg
mov
insl
icebp
wbinvd
xchg
or
cmp
cmp
sbb
repnz
inc
push
insb
sbb
push
es
inc
xchg
mov
orb
out
andb
mov
out
aas
sarl
sub
or
mov
loopne
pop
xchg
jo
push
add
mov
sbb
dec
pushf
mov
pop
cmpsl
lret
mov
iret
lcall
clc
inc
cwtl
loop
addr16
mov
lcall
movsl
adc
aad
in
jns
sub
and
or
aad
pop
dec
mov
cmpsl
int
pop
aas
test
or
mov
cli
xlat
mov
cmp
push
jnp
fisttpl
imul
cs
mov
and
setp
fsubrl
mov
ljmp
xchg
inc
sbb
das
dec
fsub
js
lock
lock
cli
jb
les
inc
and
pop
mov
push
add
pushf
dec
mov
jbe
sub
leave
mov
stc
rolb
adc
add
pop
jmp
ds
mov
es
addl
arpl
mov
flds
dec
mov
out
add
repz
sub
into
adc
inc
xlat
rcll
push
mov
lcall
and
mov
shlb
cmp
pusha
popl
leave
out
nop
repnz
ret
mov
cmp
pop
xor
mov
mov
xor
xchg
das
scas
mov
sbb
dec
xchg
jp
mov
pusha
fsub
mov
aaa
cmc
daa
inc
adc
mov
xchg
in
lea
shl
pop
sbb
int3
cwtl
movsl
ficompl
xlat
pop
ljmp
lcall
ja
adcl
int
push
or
mov
movzwl
andl
iret
arpl
mov
fisubs
sub
test
add
pop
outsl
notb
mov
xchg
push
jo
or
orl
fcomps
sahf
ja
sbb
sub
movsl
leave
outsb
xchg
mov
sub
xorb
loopne
lods
push
loopne
insb
rorl
cltd
push
xchg
les
divl
push
mov
adc
push
gs
aaa
leave
xorb
cltd
ret
jnp
adc
call
dec
loope
cmp
leave
xor
dec
mov
jle
and
jecxz
xchg
iret
pop
int3
shll
es
jo
loope
fadd
sbb
cli
mov
inc
xchg
dec
dec
dec
xchg
es
aaa
lock
push
lea
ficoml
mov
sbb
and
enter
nop
arpl
or
xchg
inc
xchg
push
xor
in
jbe
dec
sbb
aam
and
cmc
inc
lret
fldenv
scas
hlt
loop
fdivrp
xchg
inc
int3
mov
ret
int3
fcom
test
inc
xchg
mov
out
adc
sub
out
ret
push
out
mov
jne
dec
lahf
idivb
add
fcom
rcrb
xorb
push
dec
inc
aad
je
mov
out
mov
push
pop
lock
dec
nop
pop
dec
popf
and
xlat
icebp
dec
in
jge
loop
out
mov
call
jle
push
adc
movsl
jmp
dec
stc
push
sub
dec
mov
fdivrs
fsts
inc
push
out
push
int
inc
adc
shll
movsb
imul
lods
movsb
popa
pop
mov
and
inc
xchg
mov
jns
js
inc
lock
test
xor
rcl
jno
dec
popf
jecxz
sub
cli
pop
or
test
jmp
or
scas
mov
cmp
test
icebp
cmp
js
jecxz
pop
jae
sbb
xchg
imul
cmpsb
gs
pop
jmp
push
mov
fdivrs
pop
insl
adc
rcrb
dec
shll
adc
popa
das
scas
rcrl
sbb
and
aad
xchg
sahf
push
pop
push
data16
sbb
repz
incb
aas
cmc
aaa
push
out
push
sub
in
lahf
insl
ds
xor
fxch
aad
push
jecxz
stc
push
rcrb
jmp
ljmp
or
fs
es
repnz
sub
sbb
cmpl
sti
fdivl
sub
pop
imull
das
notl
scas
addr16
pop
in
jae
je
sahf
dec
data16
mov
pop
dec
daa
push
int3
xor
lcall
cmp
push
int3
mov
mov
pop
movsl
test
daa
mov
adcl
inc
ja
sbb
lret
cmp
push
cltd
call
pop
push
xchg
ficompl
push
mov
imul
ffreep
mov
mov
push
xchg
dec
jg
sbb
add
inc
jb
cs
push
repnz
add
stos
xchg
push
inc
fs
cmp
inc
in
lock
cltd
mov
jp
arpl
dec
aam
ret
xor
jo
repnz
dec
test
scas
loop
pop
mov
fistps
subl
mov
xor
or
push
mov
enter
sbb
sbb
or
aad
aam
repz
ss
fisttpl
xor
sub
andl
lret
mov
repz
mov
cmp
pop
mov
xchg
subl
mov
sbb
pop
out
inc
out
popa
sahf
dec
int3
push
addb
insb
jge
stc
testb
rcrb
xchg
sub
aam
test
int3
dec
adc
add
mov
shlb
xor
jp
xchg
shlb
std
xlat
faddl
cmp
nop
cltd
addr16
iret
test
jo
xlat
jno
out
repz
test
add
or
dec
and
cmp
addb
sbb
or
or
mov
xor
lcall
cmp
cmpsb
fldl
mov
mov
lcall
sti
xchg
sub
push
orl
loop
cld
mov
popf
popa
das
repz
jge
inc
std
leave
push
jmp
or
inc
mov
xchg
and
inc
call
push
fidivs
or
mov
inc
xchg
popf
mov
adc
dec
add
faddp
pop
pop
push
cld
jl
stc
dec
jno
xchg
sub
pusha
aad
sub
push
cltd
or
fwait
data16
lea
push
xchg
sti
cmp
push
add
jp
sahf
sbb
lahf
sbb
lock
mov
aam
add
sub
jl
dec
jecxz
push
rol
cld
mov
fnsave
jnp
aam
cwtl
xor
dec
pop
fsin
or
loop
ret
fisubl
lods
mov
mov
stc
in
cmpsl
inc
dec
cmc
jbe
outsb
cmp
push
movsb
pop
inc
out
fmull
push
data16
ret
or
fldenv
cli
test
in
add
lcall
sbb
hlt
xchg
imulb
outsl
mov
sahf
push
xchg
xor
mov
sbb
aad
cwtl
push
cmp
sbb
jno
jo
mov
les
pop
inc
push
cmp
pop
nop
sub
les
scas
rolb
mov
adc
xor
sub
shlb
bound
push
outsl
pop
stos
gs
repnz
sub
repz
xor
stos
into
xchg
sahf
jne
inc
inc
pop
jge
cmpsb
outsb
mov
mov
dec
push
fnstcw
push
mov
daa
cmp
xor
fwait
inc
out
push
xchg
int
add
mov
jmp
inc
add
cmp
sti
pop
andl
push
mov
dec
xchg
test
cmpsl
je
cmp
mov
xchg
mov
or
cmp
ds
xor
lcall
ja
cld
lds
inc
jmp
stos
mov
xor
incb
testl
or
sub
add
xchg
sarb
inc
and
popf
mov
movsb
push
rcl
sti
inc
std
mov
test
add
stos
aam
mov
cwtl
lds
insb
shr
sub
pop
jae
add
ljmp
mov
inc
std
add
nop
ja
adc
sbb
ret
in
jl
das
jae
mov
std
scas
and
mov
dec
mov
push
cmpb
push
mov
aaa
sub
sub
inc
ljmp
cmp
cli
xchg
lret
xchg
lahf
push
cmp
mov
jo
push
jl
stos
jle
adc
dec
pop
unpcklps
push
loopne
xchg
scas
daa
les
cmpsl
xor
xlat
in
in
inc
inc
mov
jmp
sar
or
xor
cmpsl
insb
mov
xchg
lret
daa
decl
into
pop
and
adcb
daa
jge
adc
mov
cwtl
addr16
cmpsb
ret
testb
punpckhwd
or
pop
pop
push
fldl2e
xchg
jmp
jb
rorb
mov
cmp
insb
pop
ss
aad
push
test
mov
pop
sub
push
xor
dec
inc
enter
mov
fs
idiv
sahf
stos
sub
test
mov
mov
into
mov
dec
loope
fwait
sbb
sti
aas
adc
lcall
push
push
arpl
mov
and
imul
ret
mov
sub
outsb
movsb
mov
push
out
and
adc
fdivr
fidivrl
sbb
lcall
test
stos
xchg
sbb
jbe
jno
xchg
pop
sub
les
mov
rcrl
repz
test
and
cmpsb
ss
push
ror
lcall
test
xchg
mov
inc
push
pop
sub
cmpl
fs
jb
dec
lods
push
leave
vmovmskps
pop
dec
cmpsl
test
inc
sbb
lods
rep
push
push
cmp
mov
cmp
mov
movsb
jae
mov
cvtps2pi
xlat
ret
adc
xchg
xor
mov
in
mov
sub
jle
aad
out
inc
pop
fdivrp
data16
sub
dec
mov
xchg
sub
cmp
mov
or
xchg
imul
test
lret
cli
imul
fst
les
pop
ret
push
jnp
xchg
mov
rcrb
js
xor
cmpsb
jno
or
ds
lods
lods
mov
sbb
pop
shr
inc
pop
jns
cmp
pop
inc
dec
adc
cld
jle
out
enter
std
sbbb
mov
loop
mov
idivl
sbb
out
and
das
jmp
in
xorl
dec
fimuls
adc
outsl
xchg
test
pop
cmovae
sbb
aas
cmp
sbb
push
fwait
push
and
lahf
addr16
pop
add
sbb
nop
xor
inc
and
mov
ja
jmp
test
aas
xor
gs
jbe
xchg
cld
aaa
inc
push
jmp
or
jecxz
stc
adc
popa
iret
das
je
ret
mov
mov
mov
sub
sub
mov
sbb
fbld
push
in
jns
xor
pop
cmpsb
dec
mov
inc
xchg
out
fs
fwait
mov
es
xor
addr16
les
lods
cmp
add
mov
arpl
nop
mov
test
push
shlb
xchg
dec
test
shll
dec
aas
mov
cli
xlat
in
loopne
test
push
jno
gs
and
adc
out
and
es
inc
lcall
adc
cmp
mov
xchg
cmp
lcall
mov
es
pop
push
mul
sbb
xchg
xchg
iret
and
push
std
mov
rolb
xor
cltd
int3
int3
xchg
pop
push
sbb
add
and
mov
in
cmp
inc
xor
jp
out
mov
rclb
mov
or
pop
mov
jno
xchg
push
push
xchg
mull
rol
mov
addr16
iret
arpl
pop
mov
sbb
xchg
push
insl
rorl
and
inc
arpl
scas
adc
fistpl
cmpsl
int
lods
mov
jno
inc
cltd
push
adc
jne
ret
push
jns
insb
insb
xor
fwait
out
ret
jmp
sub
xlat
sub
cld
cmpsb
and
iret
loop
rorb
imul
fwait
cs
mov
out
arpl
mov
mov
ds
cmp
out
xchg
xor
jp
inc
int
push
inc
mov
fincstp
xor
mov
xchg
jnp
jae
mov
subl
sahf
xchg
sti
xchg
in
pop
cwtl
scas
insb
pop
imul
jne
fmuls
gs
gs
cmp
xlat
sub
ret
lret
data16
mov
push
jae
push
das
aam
or
mov
mov
push
int3
in
sub
fwait
sbb
and
push
xchg
pop
in
shrl
jge
outsb
sbb
mov
in
cwtl
sbb
leave
inc
xor
push
push
and
mov
mov
movsb
add
nop
stc
sbb
ret
sahf
or
addr16
mov
cmp
cmpsl
lahf
pushf
insb
rcrl
add
and
adc
loopne
mov
ret
jo
jmp
enter
sbb
add
imul
sub
pop
inc
or
push
cmpsl
cli
gs
lock
out
push
push
ret
mov
jne
ret
mov
frstor
aam
push
mull
fdivp
push
adc
fistps
sub
testb
outsl
dec
add
or
outsl
testb
cld
jg
mov
rolb
inc
pop
out
negl
mov
stos
mov
dec
fstps
xchg
roll
minps
add
ret
repnz
jno
test
rcrb
bound
pop
inc
pop
daa
test
dec
adc
mov
mov
gs
sbb
orb
or
xchg
mov
xlat
and
mov
add
mov
xor
enter
imul
aad
hlt
adc
push
push
pop
cmpsb
mov
in
add
stos
shrb
mov
sbb
rolb
sub
mov
pop
popf
or
js
push
inc
bound
scas
stc
jne
xchg
aam
and
xlat
push
mov
sbbl
or
pop
insb
jo
add
testb
mov
xor
pop
ja
jecxz
jbe
push
dec
xchg
mov
pusha
andl
cli
orl
shll
jge
dec
out
in
repnz
adc
movsb
test
mov
sub
movsb
xor
jp
jg
mov
xchg
mov
rcll
or
fs
shlb
in
xor
rcll
ljmp
lret
lret
shr
lea
push
pop
ret
pop
xchg
mull
lcall
fucom
pop
xchg
sub
cmpl
xlat
jb
std
jl
iret
dec
and
cltd
mov
xchg
sbb
jp
push
pop
cmp
emms
xchg
adc
push
dec
pop
xchg
je
mov
inc
jge
sbb
sarb
inc
push
pop
leave
sbb
fisttps
scas
lods
sbb
push
imul
add
pusha
sub
and
jge
jns
lds
push
lds
rcrl
lcall
cmp
sar
dec
jg
in
stos
xor
shrl
fnstenv
push
test
adc
adc
jb
repnz
pop
lds
les
push
loopne
sti
cmp
daa
jbe
leave
imul
sub
dec
arpl
mov
outsl
lea
bound
fwait
rcrl
in
dec
push
pop
push
jg
nop
lods
lods
stos
rclb
inc
sub
dec
cmp
jmp
mov
sbb
aam
sub
jl
lods
js
fstpt
jns
xchg
sahf
lcall
jle
test
lret
cmp
pop
mov
or
mov
sahf
sbb
xchg
or
mov
or
mov
mov
mov
cmp
and
mov
orl
and
fs
dec
stc
adc
pusha
je
xchg
jle
jp
jmp
into
outsb
movsb
cmp
movsb
fmull
std
loop
out
lds
movsb
xchg
inc
inc
lock
fldenv
pusha
jno
les
lret
xchg
loop
xchg
ljmp
mov
lock
adc
sub
js
mov
push
push
dec
mov
out
cmp
add
xchg
movsl
fists
mov
daa
inc
push
ret
rcl
pop
jle
or
push
sbb
rcl
lods
imulb
cmpsb
dec
push
outsl
pop
enter
lock
test
dec
mov
mov
mov
aaa
pop
inc
cmpsb
pop
test
loopw
jb
mov
jbe
and
lods
sub
jns
mov
das
int3
dec
cmp
cmc
or
lret
arpl
in
lea
add
push
cwtl
and
cmp
jle
and
loopne
adc
xor
xor
dec
sahf
cli
stos
fxtract
or
ret
adc
adc
xor
mov
adc
sub
shll
hlt
and
nop
add
outsl
popf
js
cltd
add
add
mov
mov
sar
in
pop
and
ffree
sub
fwait
add
inc
jbe
andb
fldl
in
movsl
xchg
cmp
pop
mov
sub
or
cmp
inc
fnstsw
mov
fstp
je
stc
mov
movsl
inc
mov
pop
aad
mov
or
and
jp
lcall
bound
arpl
out
orb
les
dec
rol
xchg
adc
fldl
sub
addr16
mov
into
add
into
cmc
pop
jle
cs
jae
popf
decl
cltd
xor
arpl
sti
sbb
or
pop
and
ss
fstpl
mov
push
adc
js
cmpb
mov
inc
push
repz
pslld
sub
das
dec
sahf
adc
inc
sbb
or
jmp
cmp
fldt
js
adc
out
lahf
scas
lea
sub
mov
adc
outsb
cmp
sub
mov
xchg
inc
cmp
dec
outsl
je,pn
inc
lret
jb
pop
add
xor
xor
jmp
ja
and
cmp
xchg
xor
nop
iret
data16
push
insb
ds
adc
jne
stos
inc
hlt
inc
cmp
nop
outsl
mov
ss
int3
pcmpeqb
push
cmp
sbb
push
rcll
in
fadds
stos
iret
push
inc
scas
push
sbb
arpl
aas
mov
aad
mov
mov
pop
iret
clc
ret
push
loope
push
add
outsb
mov
sahf
cld
or
cmp
lods
mov
adc
mov
mov
clc
jnp
pop
adc
gs
js
gs
mov
adc
sbb
jg
int3
mov
jbe
outsb
ds
sub
push
mov
adc
insb
mov
insb
dec
jl
push
call
fcoms
leave
ljmp
mov
lret
lock
int
insl
jb
clc
out
pop
push
es
mov
repz
test
mov
and
dec
adc
stc
into
dec
repnz
shll
or
pusha
fsub
xlat
jbe
mov
outsb
mov
pop
adc
add
mov
dec
movsl
leave
mov
mov
loopne
icebp
xchg
movb
push
xchg
cmpsl
aas
daa
into
mov
jae
push
repz
pop
lret
cltd
sarb
cld
mov
mov
jb
push
stos
imul
jle
dec
mov
shlb
add
in
cs
and
ret
test
inc
jbe
adcb
xor
and
inc
lds
fildll
adc
ljmp
pop
out
insb
imul
fldenv
fisubs
je
aad
dec
mov
cmpsl
mov
pop
ficoml
ret
stos
xor
repnz
inc
mov
jge
neg
shll
or
push
stos
in
sarb
mov
movsl
andb
out
push
push
push
out
xchg
aad
push
push
jb
sbb
pop
pop
cmp
jecxz
sbb
cmp
addr16
inc
jp
movb
xor
add
dec
ficoml
xor
jno
in
cwtl
push
ljmp
stos
or
jne
and
push
or
sub
outsb
pop
aaa
popa
jb
shl
in
mov
test
fistps
add
xor
mov
clc
in
mov
cltd
inc
lds
lret
int3
out
mov
pop
mov
jne
out
addr16
add
icebp
test
mov
dec
pop
adc
ret
lds
shlb
mov
cmp
pusha
shll
sbb
in
out
in
sub
mov
mov
sub
test
negl
jecxz
idivl
es
sub
mov
cmp
push
push
sahf
add
scas
leave
int3
loopne
cltd
lods
add
xchg
adc
rcrl
aaa
sbb
shl
lock
mul
or
stc
lret
insb
add
aas
push
fisttpl
and
or
dec
std
push
fldenv
call
jp
sbb
insl
leave
jb
add
dec
mov
divb
push
mov
pushf
mov
cmp
aas
shll
adc
out
cmp
movsl
and
push
testl
xchg
dec
xor
fs
push
add
dec
stos
movsb
pop
cmp
ret
rorl
pop
mov
inc
jo
sub
cmp
stos
ret
mov
aaa
scas
cli
push
iret
mov
adc
xchg
adc
cmpsb
pop
cmpsb
dec
cs
std
sub
loop
aaa
leave
dec
push
adc
mov
pop
out
nop
ret
sbb
enter
push
adcl
pop
loop
pop
adc
push
jbe
push
adc
dec
rcrb
enter
in
mov
lcall
test
adc
cmp
mov
push
pop
jecxz
daa
shll
inc
jp
scas
arpl
add
arpl
or
xchg
pushf
les
add
shlb
jmp
out
xchg
pop
add
daa
pop
ret
pop
dec
pop
jmp
add
aam
jns
mov
hlt
xor
hlt
lods
fxch
outsb
inc
lods
and
pop
sub
out
mov
and
inc
fistpll
xor
cwtl
mov
mov
jle
mov
xor
sbb
mov
inc
fchs
pusha
ljmp
or
pop
xchg
sbb
nop
pop
ja
lds
xchg
fnstcw
cld
push
xor
add
adc
loop
fbld
insb
pop
adc
or
jne
jnp
xchg
pushf
mov
jbe
insb
dec
aad
repz
test
lods
cmp
inc
dec
popa
icebp
and
negb
add
fcoms
jnp
xorb
pop
mov
gs
daa
jbe
scas
pop
jbe
arpl
pop
sbb
cltd
xchg
xchg
lcall
jb
mulb
xchg
or
mov
mov
lods
std
pop
mov
sahf
dec
mov
mov
mov
push
ficomps
int
push
and
pop
loop
xlat
aaa
aas
pusha
int3
push
enter
mov
xor
xchg
ret
aas
lcall
mov
xlat
fwait
fs
xchg
or
imul
sbb
movsl
push
andl
mov
adc
cmpsb
adc
push
mov
cmp
int3
stc
ja
mov
ret
and
test
inc
mov
cmp
lea
pop
xchg
push
xor
lcall
jno
and
sub
ror
or
lret
int
jg
inc
inc
jne
mov
repz
add
push
dec
aas
ja
gs
dec
in
xchg
pop
cmpsl
sbb
cmp
dec
sub
add
repz
mov
sbbl
and
das
sbb
push
daa
sbb
mov
shll
lcall
outsl
push
out
rcrb
mov
xor
mov
leave
leave
mov
pusha
sub
add
cmp
jo
clc
push
push
aam
push
pusha
fisubl
sarb
out
in
movsb
data16
sbb
into
jbe
cmpsb
sbb
dec
push
mov
fisubl
dec
adc
mov
mov
lea
cmp
gs
test
xor
mov
imul
outsb
mov
ljmp
push
pop
cmp
jb
call
xor
or
shlb
mov
arpl
jb
dec
leave
mov
add
adc
inc
jmp
filds
push
cmp
pop
fcompl
jl
hlt
sub
cmpsb
push
xchg
pop
jae
mov
ret
fdivs
xchg
fdivrl
lcall
and
cwtl
push
xor
mov
fists
xor
insb
mov
jne
xchg
stc
mov
lret
xor
xor
test
pushf
xchg
iret
fldenv
fnstsw
jmp
pushf
in
sub
sub
in
hlt
jo
sahf
fstpl
inc
bnd
rcrb
shrb
adc
inc
mov
sbb
lds
xor
mov
dec
imul
add
mov
jge
pop
lret
out
std
or
jmp
stos
push
in
fidivrs
in
fidivs
jnp
out
int
jmp
xchg
sub
scas
call
xchg
adc
or
lcall
jmp
std
clc
jle
jae
mov
sub
sbb
dec
rolb
ljmp
fwait
jno
lds
test
pop
jae
and
stos
mov
xchg
movsl
push
outsl
jle
das
sub
scas
ret
scas
or
mov
cmpsl
and
cmp
lcall
inc
data16
or
jmp
lds
push
inc
push
lods
mov
imul
add
inc
ret
cmc
fstl
stos
in
adc
xchg
movsb
pop
push
imul
es
jae
push
fwait
mov
sub
sub
and
bound
and
inc
fldt
mov
sub
addr16
push
mulb
xchg
pop
fwait
insb
inc
loop
xor
mov
push
mov
mov
jle
aam
xchg
pusha
aaa
flds
xchg
or
stc
jbe
mov
in
fwait
add
into
adcl
mov
and
push
mov
loope
and
arpl
pusha
ret
sub
repnz
mov
imul
push
cld
or
pop
data16
xor
fildll
xor
xchg
popa
push
xchg
cmp
lret
fistl
je
mov
lock
imul
mov
mov
insl
repnz
shrb
cmp
sub
iret
scas
lods
add
mov
push
push
cmp
insl
mov
fnstsw
fwait
cmp
sbb
cmp
xor
dec
add
or
mov
aas
push
roll
mov
cmp
and
mov
adc
pop
aas
out
cmpsl
mov
dec
or
test
inc
or
add
push
mov
xchg
scas
ret
lock
shlb
ds
ss
jecxz
and
out
aaa
icebp
mov
js
scas
out
mov
mov
mov
jns
add
push
sarl
sub
pop
testb
push
xchg
cmp
test
negl
add
add
ror
fdivrs
orl
mov
jns
int
inc
xchg
xor
sbb
pop
pop
stos
sub
stos
adc
pop
add
sbb
jne
scas
and
enter
xchg
dec
cmp
cmpsl
fnsave
ja
cmp
lret
popf
push
bsr
out
insb
aas
fstpt
fisttpll
shl
and
test
addr16
pop
mov
insb
sbb
fwait
dec
fstpt
in
ret
sahf
or
jbe
ss
pop
add
cli
insl
dec
mov
cmp
out
add
outsl
call
mov
xchg
sub
mov
push
adc
popa
dec
std
lods
inc
and
sbb
inc
out
add
push
cmp
pop
ror
andb
jge
aad
insl
push
xchg
out
loopne
jp
clc
jmp
in
jb
mov
movsl
jns
xor
and
xor
insb
push
sub
lock
out
call
add
jge
int3
inc
bound
in
arpl
lods
fsubs
cs
inc
aaa
shrb
shll
ror
stos
addr16
inc
mov
pop
pop
and
sahf
push
xchg
into
es
mov
loop
and
and
pop
jnp
aad
lods
imul
lahf
xor
xor
dec
pop
and
sbb
cmp
pop
icebp
and
pop
jno
leave
xor
inc
add
cmp
ficompl
sbb
sub
data16
clc
jmp
lock
mov
mov
mov
cmp
insl
cmp
or
cmp
lret
idivl
push
imul
movsb
int3
mov
call
cwtl
dec
jnp
pop
icebp
mov
divl
insb
fidivrs
xor
mov
jns
xchg
pop
xchg
cmp
push
add
mov
sti
frstor
in
fs
loopne
ret
lds
fwait
mov
push
negb
inc
add
adc
pop
lds
xchg
aad
andl
dec
sub
xlat
pop
xor
jp
nop
imul
idivl
in
fbld
cmp
adc
aad
and
sub
ret
fnstenv
hlt
das
jnp
mov
gs
mov
push
inc
push
cwtl
fs
push
icebp
dec
jg
sbb
inc
or
cmp
cmp
jle
pushf
cld
xor
ja
loopne
dec
fldpi
jg
cmp
push
mov
or
jle
add
mov
nop
sub
mov
cmp
pop
xor
stc
mov
xchg
sub
lds
iret
xor
out
aad
das
pop
push
out
sbb
aas
inc
ljmp
repnz
sbb
lret
lods
imul
pop
gs
mov
pop
loopne
xchg
ret
mov
ss
mov
lahf
jno
jecxz
mov
mov
and
push
andb
cld
pop
push
ss
mov
mov
dec
mov
pop
pop
add
dec
sti
pop
nop
fisubrl
je
mov
fwait
xchg
leave
push
mov
inc
dec
out
pop
pushf
ret
mov
stos
pop
cmpb
pop
insl
ljmp
popf
xchg
jns
roll
push
dec
fdivl
and
jno
orb
scas
adc
jb
mov
and
push
stos
xor
push
jge
cld
cmp
or
jne
adc
push
sub
pop
fnstsw
jbe
leave
push
imul
imul
mov
jg
dec
in
sbb
mov
mov
xor
popa
in
cwtl
mov
clc
cli
dec
sub
pop
test
iret
push
push
and
push
dec
pop
mov
test
rcrl
push
jl
pop
adc
cmp
js
das
scas
or
loopne
sahf
xchg
imul
repnz
cld
or
enter
mov
dec
test
xor
leave
sbbb
jns
bswap
mull
inc
in
pusha
lock
jl
jmp
jo
std
shlb
test
adc
lock
add
sahf
mov
xchg
fs
inc
shll
dec
out
mov
loop
les
xor
popa
sbb
xchg
mov
add
adc
mov
or
sub
popf
mov
xor
mov
mov
inc
mov
pop
add
shlb
addl
xor
cwtl
repnz
pop
rcr
repz
js
iret
lock
js
pop
sti
lock
dec
nop
sub
mov
aas
test
mov
in
mov
insb
pop
and
ffreep
mov
sbb
mov
and
dec
cmp
icebp
fnsave
xor
or
in
ror
lods
int
mov
mov
push
push
mov
insb
dec
pop
cltd
aas
pop
mov
sti
xor
mov
dec
daa
pop
jecxz
mov
ss
jo
jae
push
js
mov
dec
xor
mov
je
dec
filds
jge
xchg
popl
in
daa
outsb
sub
sahf
sbb
pop
les
fists
push
or
jb
mov
jle
adc
jmp
inc
sbb
call
adc
ljmp
mov
frndint
cmp
dec
mov
movsb
scas
pop
add
dec
pusha
mov
loope
mov
dec
jp
filds
scas
mov
dec
push
in
ds
ja
inc
mov
or
std
xchg
imul
jp
jb
mov
jno
mov
dec
out
les
nop
mov
mov
jno
dec
mov
mov
push
cmp
bswap
dec
insl
and
mov
jae
push
outsl
mov
jmp
popa
cmc
add
pop
ss
sbb
outsl
testb
lcall
retw
je
shr
or
fadds
fistpl
lds
mull
lahf
mov
in
repz
and
loopne
push
cld
ljmp
jbe
pop
cmp
notb
out
xchg
imul
jle
dec
cmpl
fs
stos
aas
sarl
xchg
sub
ljmp
inc
dec
nop
cmp
adc
outsl
bound
iret
jge
xor
out
mov
aam
repz
inc
jecxz
jns
add
push
mov
mov
and
daa
or
int3
pushf
sbb
inc
and
fnstenv
mov
xor
aas
inc
iret
push
popf
jns
adc
cmpb
sbb
inc
cmc
and
xlat
insb
inc
test
pop
adc
push
lahf
imul
mov
pop
mov
xor
dec
push
in
std
out
fwait
pop
adc
das
jecxz
outsb
mov
pushf
push
cmp
rclb
outsl
ss
sub
inc
ljmp
aad
add
mov
ret
aas
and
fildl
stos
jae
dec
inc
xor
clc
int
xchg
fdivs
dec
lret
or
imul
mov
test
pop
xor
or
inc
outsl
and
out
xchg
push
add
cmp
adc
in
sub
sbb
pusha
cmp
sbb
rclb
repnz
outsb
mov
imul
xlat
mov
xor
xchg
jp
cmc
scas
jmp
adc
stc
loope
or
js
jp
cli
jmp
les
icebp
imul
daa
adc
jecxz
mov
sub
imul
push
repz
repz
or
popf
pop
and
sti
popf
xchg
repz
push
shll
mov
cmpsb
mov
lea
test
jns
dec
loopne
lea
incb
cld
inc
and
pop
aaa
in
in
dec
jl
movsb
push
push
aam
cs
cli
xor
and
cmp
out
int
adc
out
push
nop
lea
ss
out
insl
mov
mov
or
fstpt
fs
mov
push
lods
mov
sbb
nop
and
xor
lret
cmpsb
negl
pop
or
adc
push
mov
cmpsl
mov
mov
or
fstpt
and
scas
repnz
push
mov
pushl
shll
lea
sbb
push
or
mov
sbb
addr16
loope
js
push
jg
lds
loop
nop
movsb
lahf
ret
movsl
shl
jecxz
mov
bound
pop
jl
imul
xor
faddl
jae
push
ljmp
mov
dec
pop
test
xchg
movsb
loopne
inc
dec
jns
mov
leave
mov
sbb
rorl
push
xchg
pop
or
mov
stc
faddp
sbb
mov
fisttps
mov
fs
sub
cmc
push
pop
push
adc
out
mov
lcall
fldt
inc
dec
andl
lahf
mov
add
sahf
cmpsl
pop
pop
mov
arpl
jp
movsb
and
push
stos
sbb
mov
addr16
pop
mov
or
mul
fsubr
xchg
fwait
sbbl
inc
lea
lahf
mov
out
cmp
push
jnp
loop
rolb
push
jge
add
xor
mov
sub
pop
pusha
jno
pushf
shll
in
call
stos
cltd
xchg
fstl
sub
data16
sbb
bound
mov
cwtl
into
adc
shl
aad
std
pop
dec
scas
in
nop
mov
dec
insl
stos
xor
xor
xchg
add
pop
mov
push
dec
inc
mov
mov
mov
xor
mov
cmp
lods
jp
outsb
dec
in
loop
roll
xor
adc
and
pop
pop
xor
cmp
test
xchg
jns
fs
xor
or
jl
sbb
scas
add
pop
ud0
lock
add
jae
scas
repnz
verw
mov
dec
push
mov
loop
aad
push
imulb
movsl
pop
int3
jmp
gs
cmpsb
sub
ljmp
push
cmp
inc
cmc
inc
dec
mov
stc
add
cmc
push
add
std
xor
bound
inc
push
enter
imul
and
lret
xchg
adc
add
aas
js
call
ja
xor
testb
repnz
addb
dec
loopne
cmpsb
push
rcr
xlat
xor
lret
ss
dec
lahf
add
inc
jp
rolb
pop
dec
lock
push
test
inc
and
dec
mov
pop
gs
cmp
mov
inc
or
in
jp
ja
std
repnz
les
xor
ja
in
mov
andl
add
outsb
mov
mov
pop
es
and
fnstsw
pusha
jp
test
ljmp
test
ljmp
jmp
adc
sbb
and
xchg
push
in
and
lcall
mov
and
jle
cmp
data16
stos
xchg
jg
inc
jg
les
movsb
dec
jp
fidivrs
outsl
push
jl
mov
sbb
adc
pop
lahf
cmpsb
out
and
pop
cmp
movsl
nop
or
call
out
data16
and
cmpsl
negb
inc
into
xchg
jg
push
pop
xor
icebp
ret
push
or
jp
jbe
adc
xchg
and
cmc
rcl
addb
fsubs
sbb
sbb
jb
adc
mov
inc
addr16
movsb
xchg
xor
pop
add
test
add
push
ljmp
xchg
mov
mov
push
clc
aad
or
jb
lret
and
shl
jg
test
push
jle
pop
jbe
inc
cmp
test
or
inc
inc
mov
push
data16
arpl
mov
roll
leave
in
xor
iret
mov
lret
xchg
xchg
or
jle
mov
cmp
jge
arpl
pop
mov
dec
cmp
lods
test
jp
pushf
and
sub
int
push
hlt
stos
ja
push
lcall
pop
sahf
repnz
cmpsl
pop
in
sbb
add
sub
mov
fsubr
dec
cmp
leave
jb
movsb
adc
jbe
and
mov
xor
sbbl
rcr
push
les
xchg
inc
shlb
mov
popa
inc
dec
jae
loopne
insl
xor
push
inc
icebp
mov
add
pop
fstps
pop
in
xchg
aaa
xchg
and
test
push
push
mov
add
lock
sub
pop
and
or
inc
jae
out
mov
or
inc
fldl
in
jo
mov
insl
xor
lret
or
cmp
cs
mov
inc
sub
push
ds
jb
or
inc
mov
test
sbb
cld
jb
test
mov
xorb
test
scas
mov
loop
jle
mov
dec
into
sub
add
pop
std
inc
jbe
fwait
jns
xor
sbb
ds
in
dec
ss
sbb
call
mov
mov
xchg
mov
xorb
xor
fwait
negb
xchg
sub
cli
jnp
in
push
xor
mov
lods
pop
lret
leave
movsl
dec
imulb
pop
add
push
inc
fisubrl
loopne
mov
xchg
ds
repz
and
aad
cmpsl
cmp
cmpsb
cmpsl
pop
cli
inc
cli
pop
jae
aas
pop
enter
test
dec
aaa
out
mov
movl
repnz
push
sbb
mov
and
fildl
in
sub
cmp
push
popa
jnp
into
mov
addr16
cwtl
popa
jp
loopne
xor
arpl
insb
push
mov
insb
xor
xor
inc
jns
cmpsl
mov
out
es
fldenv
mov
jne
or
in
or
push
adc
pop
push
add
ja
stos
dec
mov
pop
push
pop
mov
xchg
push
sbb
es
xchg
sub
mov
mov
sub
jno
daa
sbb
out
sbb
test
lods
xchg
ret
fdivl
lds
push
int3
scas
sarb
daa
outsb
inc
xchg
pop
nop
imul
cmp
call
mov
test
shll
xchg
imul
fsubs
jp
dec
test
mov
pop
mov
ljmp
fs
sbb
cmpsb
inc
inc
xor
cmpsl
outsl
dec
iret
aad
pop
inc
popf
scas
aas
jno
sub
pop
dec
jmp
dec
jo
or
mov
sub
lret
pop
data16
mov
rclb
out
pusha
shlb
push
lds
xchg
jecxz
dec
mov
push
rcll
lods
fsts
add
mov
jns
add
lcall
push
mov
sbb
xor
lret
adc
push
ljmp
cmpsl
in
dec
stos
out
cmpsl
test
enter
stos
sbb
or
pushf
inc
xchg
outsl
push
xchg
test
addr16
xchg
mov
or
mov
inc
cmpsl
adc
xchg
cmpsl
sbb
negl
icebp
mov
pop
bound
sub
ljmp
pop
hlt
jge
insl
jns
sbb
out
insb
xchg
outsb
push
adc
sbb
or
iret
mov
cmc
cmc
rclb
movsb
out
mov
and
dec
ds
jp
xor
xor
fidivl
jae
cmp
lcall
sbb
in
add
jne
testb
mov
dec
xorb
addl
es
mov
lock
dec
rol
push
lods
into
inc
mov
lea
pusha
dec
and
or
shl
mov
cmpsb
out
push
fiaddl
mov
jle
in
les
push
stos
xchg
rorl
test
pusha
cmp
rorb
inc
repz
pop
popf
aam
push
add
loop
xchg
out
out
mov
sarl
xchg
push
xor
scas
data16
or
ds
fdiv
sub
popf
pop
cmc
lret
repnz
int
imulb
repz
push
les
imul
out
cmp
fwait
pop
jns
out
sbb
pop
in
pop
mov
jo
xlat
std
mov
fcoml
or
ja
and
scas
pop
daa
dec
sub
into
movsl
jecxz
or
mov
mov
sub
xchg
mov
inc
mov
stos
lods
and
fwait
popa
mov
push
lods
and
pop
out
inc
fwait
jge
andl
pop
pop
daa
nop
les
ja
loop
aaa
insl
pushf
callw
fildll
mov
cmpsb
and
test
inc
push
jecxz
cli
adc
icebp
mov
mov
add
test
sti
pop
xchg
imul
int3
mov
ret
into
mov
inc
popa
mov
xor
shrl
push
stos
shll
mov
cmp
enter
mov
cld
stc
mov
mov
mov
pop
loope
adcl
testl
shlb
int
mov
inc
jb
xchg
push
daa
testb
lds
push
ja
adc
andl
iret
mov
test
aaa
mov
add
mov
cli
or
test
sbb
xor
xor
mov
stos
ds
test
test
movsb
in
test
jno
sub
lcall
dec
jmp
popf
repz
rcrb
xlat
push
sub
das
cmp
scas
mov
test
push
jne
into
dec
cs
cmp
roll
add
fsin
sahf
out
imul
mov
aas
lock
mov
orb
sub
inc
inc
pushf
sub
out
xor
pop
pop
xor
or
fwait
jmp
inc
xor
xchg
ja
pop
xchg
inc
sbb
or
jmp
xchg
or
fistps
sarb
ja
fisubrs
test
inc
adc
inc
mov
ficoml
push
push
in
and
fisubs
dec
imul
std
mov
sub
push
push
push
stc
cmp
add
nop
sahf
inc
or
sti
xchg
jo
je
push
pop
outsl
xchg
repnz
int3
jmp
mov
out
xchg
pushl
push
xor
aas
ljmp
addr16
mov
dec
push
mov
xorb
cmpb
cwtl
int
out
xchg
and
or
lcall
sbb
jp
icebp
mov
xor
lahf
and
test
xor
jmp
repz
aad
rcll
pop
push
push
mov
divl
pop
mov
mov
pop
into
jp
lds
push
push
scas
test
cmp
daa
xor
add
lret
movsb
sti
test
rorb
sbb
jns
cmp
mov
adc
lahf
daa
fnstenv
xor
sbb
xchg
add
fistpl
in
mov
jmp
lods
sbb
imul
or
test
inc
out
pop
or
mov
xchg
sbb
fimull
jbe
push
stos
cmp
mov
jge
loopne
pop
es
lret
jecxz
test
icebp
movsl
add
cmpsl
sub
popa
cmpsb
pavgb
outsl
push
adc
or
scas
call
in
jmp
aad
xor
mov
mov
adc
subl
sbb
add
add
shlb
xchg
jns
pop
sti
sarl
call
inc
pop
sub
mov
js
xchg
add
push
cwtl
mov
lea
jle
testb
pop
addl
hlt
aas
and
jecxz
mov
xchg
pop
out
fwait
sbb
ds
or
loope
lods
pop
dec
push
inc
shrb
pop
jl
jecxz
push
leave
repnz
inc
xchg
dec
insb
add
mov
pop
idivl
mov
mov
add
test
cltd
adc
sub
arpl
sub
lcall
js
shlb
enter
pop
andl
push
and
mov
je
pop
test
stos
int
movsb
inc
mov
cmp
rcrb
cmpsl
adc
icebp
cli
mov
adc
test
arpl
insb
add
ss
push
or
in
jmp
or
cmp
push
add
nop
mov
popf
ret
mov
pop
call
rol
mov
in
mov
dec
jge,pt
inc
mov
out
or
outsl
xchg
loope
push
cmc
int
call
mov
leave
mov
add
push
in
pop
psubusw
loop
std
jno
outsl
pusha
mov
push
jnp
sub
push
stos
cmp
cmp
pop
push
bnd
mov
ret
das
addr16
or
push
push
nop
rcr
pop
addr16
push
mov
mov
mov
in
cwtl
push
jo
cs
ss
mov
loope
inc
or
xchg
ds
packsswb
scas
or
pop
jb
sahf
jl
test
xchg
jmp
icebp
xchg
jmp
mov
add
xorl
test
pop
mov
mov
sub
mov
test
add
cmp
xchg
sbb
push
pop
das
lcall
retw
adc
icebp
mov
enter
outsb
push
pop
icebp
xor
xchg
scas
ljmp
mov
sub
mov
pop
aam
dec
shll
jns
shrb
fistpll
xchg
add
out
xlat
inc
jo
in
subb
add
inc
out
pop
and
icebp
aaa
sub
jno
ljmp
jge
jnp
adc
pop
jo
push
jae
xchg
sub
mov
jp
xlat
testl
mov
lods
movsb
sbb
cltd
es
aas
ret
mov
xchg
mov
push
push
notb
and
and
outsl
aas
loope
rol
into
xchg
mov
sbb
push
ret
dec
daa
ds
ljmp
and
mov
das
int
and
adc
hlt
scas
mov
add
scas
sub
pop
xlat
mov
inc
push
inc
jbe
jae
add
std
pop
mov
mov
lock
inc
pop
or
sub
inc
sub
or
cmp
repz
jnp
cltd
cli
mov
sbb
add
or
xchg
push
push
sbb
xor
pushf
shrl
ret
xchg
mov
arpl
add
std
int
dec
cmp
out
dec
rcll
xlat
sbb
int3
mov
cli
rcll
xorb
repz
popa
cmp
mov
cs
mov
sbb
pop
in
sbbb
or
lock
and
nop
test
in
loop
mov
pushf
pop
pop
nop
jno
or
pop
popa
push
mov
jo
orb
sbb
xchg
lea
sti
mov
dec
xor
and
push
inc
sbb
in
stos
or
cmp
sub
iret
popa
inc
pushf
cs
jecxz
inc
iret
mov
out
stos
cmpsl
jmp
jmp
add
cmpsl
mov
fstpl
fiadds
dec
xor
daa
xor
cmp
cmpsl
jle
lcall
ucomiss
inc
or
clc
cld
mov
icebp
mov
xor
sub
lret
jnp
jle
mov
adc
ljmp
ljmp
call
shr
das
mov
sbb
test
lds
insb
pop
fcom
xor
frndint
pop
mov
sub
or
and
cli
sbb
stc
scas
xchg
ret
adc
fiadds
test
xchg
wrmsr
outsl
mov
jne
aaa
lret
xchg
mov
icebp
stos
into
xchg
aas
jge
ret
dec
mov
fdivl
sbb
dec
xchg
xchg
mov
js
popa
inc
or
pop
or
adc
mov
dec
aam
mov
mov
data16
xchg
cli
xchg
int
int3
or
sar
sub
leave
adc
leave
adc
call
and
mov
mov
loopne
frstor
inc
mov
or
mov
add
data16
dec
mov
fcomip
and
mov
jl,pn
dec
xor
out
lods
pop
push
outsl
mov
insl
mov
sbbl
rol
aad
and
push
js
push
gs
mov
repz
test
frstor
mov
das
ds
mov
pop
sub
xor
adc
pop
dec
fisttpll
jge
in
fldl
clc
stos
sbb
sbb
push
faddp
out
shll
repz
dec
stc
std
sub
push
and
xor
mov
xchg
lock
mov
es
and
inc
push
fstl
int
je
out
cmp
mul
ret
mov
mov
divl
add
adc
ds
cli
nop
sarl
and
or
pop
mov
mov
popf
nop
cld
dec
cmp
mov
loope
inc
es
jp
mov
std
notl
out
sub
pop
xlat
out
sahf
fcomp
sbb
sub
jno
dec
xchg
aad
mov
hlt
mov
inc
les
icebp
add
cmp
lock
in
data16
xchg
cmp
sub
sbb
and
pop
mov
mov
dec
xor
nop
fcoml
push
repnz
iret
inc
inc
test
pop
aad
push
out
inc
movswl
jne
pusha
or
push
xchg
mov
lds
aad
push
xlat
icebp
and
ret
mov
sub
dec
lods
cmp
fildll
ret
ret
pop
repnz
rcll
fwait
cmp
pop
pop
mov
inc
inc
sbb
mov
rclb
add
mov
aad
fucomi
jecxz
mov
inc
mov
xchg
xor
cmpsb
jno
sub
sbb
xchg
cltd
outsl
cmp
sbb
aas
lods
in
jp
dec
jns
pop
lea
out
or
addr16
adc
mov
add
fldl
sbb
pop
iret
push
mov
fiaddl
mov
adc
rorl
cld
pop
mov
pop
push
lds
cmp
rcl
add
fidivrs
mov
mov
int
jb
push
or
cmp
and
popl
sub
push
sub
xor
dec
fmuls
xchg
push
adcb
lods
or
negb
les
adc
cmp
dec
sbb
rcrl
fmul
adc
lods
imull
loopne
pop
mov
and
cmp
int3
mov
cld
jmp
pop
jecxz
out
push
outsb
pop
or
mov
repz
mov
jp
cs
sub
mov
out
sarb
or
sar
push
dec
dec
cmpsb
mov
dec
mov
in
dec
mov
sti
xchg
test
mov
mov
sub
xchg
push
into
int
lods
jp
iret
sbb
xchg
ja
jne
add
call
cltd
cmp
testl
mov
popf
roll
pop
mov
xchg
push
jo
push
into
in
mov
and
loop
push
inc
mov
dec
and
xchg
pusha
or
jg
pop
add
cwtl
adc
addl
je
and
push
mov
and
sbb
jg
add
test
mov
push
add
xor
cld
idivl
dec
lock
ficomps
jl
dec
adc
jno
sti
and
xor
sbb
ss
sub
fists
mov
or
pop
push
xor
out
insl
dec
cmp
pop
jle
rclb
stc
jnp
inc
sbb
out
pop
sbb
arpl
outsl
push
xchg
push
fidivs
fists
shlb
or
loopne
test
lock
mov
mov
imul
push
push
je
sbb
cmpl
je
aam
sahf
dec
mov
mov
push
imulb
cwtl
incb
lret
adcl
xor
rep
shlb
outsb
fbstp
stos
xor
adc
mov
sub
gs
push
cmp
adc
mov
push
or
aas
sbb
push
arpl
frndint
dec
jg
rolb
adc
arpl
arpl
shl
mov
push
inc
and
aad
mov
and
push
imul
adc
push
rcl
mov
cmp
test
dec
mov
push
outsl
fildll
test
jmp
test
or
jecxz
jnp
jno
add
jg
inc
push
movsl
mov
das
dec
push
aam
lds
insl
into
dec
div
push
jnp
dec
cs
adc
mov
xchg
je
pop
repz
repnz
cmpsl
dec
pop
shll
mov
into
fisttps
mov
sub
push
rorl
jp
mov
lock
push
mov
mov
cmc
pop
mov
push
xchg
xchg
ja
loop
cmpsb
mov
mull
fs
sbb
lds
daa
gs
adc
pop
push
stc
hlt
aam
and
push
imul
sbb
fbstp
call
lock
mov
movsl
sub
fadds
gs
xor
sti
dec
push
xor
sub
and
loope
pop
out
jle
or
in
dec
mov
mov
test
pop
repnz
out
inc
pop
jne
inc
push
pop
popa
pop
in
xor
rcrb
insb
fildl
mov
outsl
mov
inc
add
or
fimuls
push
mov
dec
mov
jg
sarb
addr16
ja
mov
and
jle
pop
ds
inc
pop
xchg
enter
nop
faddl
sbb
pop
lret
and
pop
lcall
in
lods
inc
inc
push
add
push
xchg
and
sar
adc
and
push
sub
mov
inc
arpl
test
sbb
je
loopne
loop
jns
out
jmp
mov
daa
lea
aad
repz
mov
sahf
mov
lahf
and
in
inc
mov
lcall
jno
mov
push
pop
sbb
xchg
jns,pn
mov
xorb
dec
push
xchg
or
int3
incb
out
in
push
pop
inc
mov
insl
and
pop
or
lods
inc
out
mov
dec
lods
in
cmp
test
fcoms
lods
inc
pushf
les
lods
add
push
mov
mov
aas
dec
sub
sbb
pop
mov
or
imul
pop
add
xchg
movsl
dec
out
scas
ficoml
pushf
daa
xchg
in
scas
in
jo
push
pop
bound
xor
and
pop
call
dec
mov
fbld
push
mov
sbb
mov
push
mov
sti
rdmsr
sbb
sbb
ja
xchg
mov
mov
hlt
lret
aaa
or
mov
daa
pop
mov
popf
push
loop
fistpl
xor
jp
inc
pop
sbb
lret
ss
xor
inc
pop
sbb
cmp
dec
movsl
ss
das
sahf
cmp
inc
cmpsb
repz
ljmp
jmp
xor
loope
mov
ss
add
testl
mov
pand
jne
dec
mov
ror
push
sbb
js
mov
dec
xor
mov
inc
xchg
idivl
imul
stos
mov
lret
xchg
movsl
cli
xlat
lock
test
divb
test
add
add
lret
push
and
in
push
jp
mov
in
in
sbb
jns
cmpsb
pop
sbb
aas
hlt
loopne
js
rclb
add
es
xlat
rcr
push
pop
rolb
stos
push
testb
jb
sub
mov
adc
xchg
test
outsb
dec
clc
xor
outsb
in
add
adc
movsl
das
pop
fisttpll
xchg
mov
mov
lods
out
push
mov
push
aad
inc
pop
xchg
roll
imul
jne
adc
push
roll
xchg
mov
adc
adc
outsl
stos
mov
cmp
ficomps
fiaddl
icebp
push
scas
fadd
xchg
dec
push
ljmp
aad
lret
push
stos
xchg
fucomi
mov
imul
ret
cmc
push
shlb
jmp
mov
inc
stos
lahf
ja
cld
leave
inc
adc
std
push
in
leave
jle
les
mov
out
jne
xchg
les
dec
push
inc
pop
add
mov
out
fidivs
aam
leave
pop
jnp
cmp
add
enter
or
pop
dec
mov
sub
push
inc
fnsave
mov
fmuls
push
sbb
std
adc
dec
dec
sbb
jge
je
mov
outsl
imul
pusha
movsb
arpl
repnz
inc
pop
push
adc
jb
lret
mov
pop
in
shrl
dec
imul
mov
cmp
inc
cmp
sub
cltd
aad
lods
test
add
sub
int3
ret
jg
loop
stos
outsb
add
mov
out
push
movsl
or
mov
adc
test
add
cwtl
mov
test
sbb
pop
mov
ljmp
test
sbb
ds
addr16
cmp
movsb
xor
shrl
mov
add
roll
dec
je
cmpsl
xchg
jbe
addr16
or
sub
hlt
mov
or
popf
lcall
in
lea
xor
pusha
pop
sub
fdivrs
sbb
arpl
sbbb
aam
es
sub
cmp
lahf
fs
sar
outsb
adc
cltd
dec
inc
jnp
roll
cmc
loopne
sbb
out
or
sbb
add
idivb
jns
out
mov
mov
push
pop
sbb
xlat
pop
and
out
jg
loopne
jle
rclb
or
or
inc
addr16
xchg
push
loopne
cld
insb
pop
loopne
push
out
push
pusha
xlat
fcmovnbe
fs
mov
fbstp
xor
aaa
loop
push
adc
ja
dec
addr16
adc
xorl
pop
add
mov
jbe
push
cmpsb
flds
inc
or
pop
pop
jns,pt
xor
das
lock
mov
.byte
mov
dec
jmp
cmp
loopne
add
add
add
add
loope
cmp
push
mov
sbb
and
push
addr16
pop
sbb
add
rcll
out
out
mov
int3
fwait
insb
add
push
out
stos
mov
inc
sarb
insb
push
leave
mov
sbb
jp
aam
pop
je
adc
pusha
xchg
sarb
mov
repz
adc
imul
sub
dec
push
xor
adc
shll
adc
cmp
sti
jb
and
lcall
aaa
cmp
call
sub
fcmovne
out
mov
imul
lods
stos
inc
push
xchg
pusha
inc
stc
aaa
sahf
imul
icebp
push
adc
dec
sbb
push
jne
mov
cli
sbb
and
stc
cmpsb
adc
lds
push
push
adcb
sahf
push
loop
sub
mov
sbb
xor
mov
pushf
jne
rcl
mov
adc
insb
je
mov
pop
shl
out
mov
and
fsubrs
sar
cmp
jle
movsb
out
mov
cmp
mov
repz
hlt
sub
push
inc
cmpsb
cmp
xor
fcmovnbe
pop
lock
mov
mov
adc
xchg
sub
mov
test
test
js
dec
pop
test
inc
dec
movsb
leave
call
jb
dec
lcall
adc
or
or
mov
movb
mov
pop
xchg
pushf
adc
xor
leave
pop
cmp
in
and
xchg
sbb
cld
sbb
outsl
inc
sub
sbb
and
xchg
fildl
mov
adcl
mov
dec
js
aaa
fisubs
icebp
sbb
jnp
and
pop
lods
inc
adcb
ret
jbe
inc
or
leave
outsl
jnp
mov
push
movl
cmp
sbb
lods
xor
pop
nop
xchg
fildl
xchg
pcmpgtw
adc
loop
addr16
and
lret
sub
mov
inc
decl
mov
sub
jge
adc
test
out
mov
dec
push
js
sub
fwait
mov
adc
mov
cmp
pop
insb
add
fidivrs
mov
clc
jnp
gs
push
in
js
sbb
aam
xor
mov
adc
in
mov
pusha
cmp
pop
xor
fs
mov
mov
jmp
inc
mov
xor
ret
nop
lahf
sub
movsl
rolb
dec
mov
mov
cwtl
push
cwtl
aaa
int3
sub
xchg
xorl
xor
loope
scas
xor
cmpsl
sub
lret
mov
push
and
es
jl
test
add
jns
and
fdivl
push
mov
jl
fldl
xor
arpl
jmp
in
add
jno
dec
fwait
ret
push
mov
jne
movsl
lcall
xor
xchg
jmp
hlt
xchg
push
pop
je
addb
out
fiadds
out
adc
mov
ret
les
jp
push
inc
jns
fs
xchg
loop
jae,pt
dec
repnz
addr16
call
clc
xor
lods
cwtl
sbb
adc
or
push
add
stc
roll
cmp
repnz
icebp
mov
cmp
add
cmp
aad
xor
rcr
andl
xchg
push
mov
rcll
insb
push
daa
inc
jno
push
aaa
xchg
xor
jno
loope
mov
mov
ja
pop
sub
mov
xor
int
jp
out
data16
and
movsl
hlt
push
inc
pop
sti
xchg
adc
dec
icebp
add
int
bnd
push
xor
sub
and
dec
push
mov
pop
fildll
fdiv
push
das
xchg
xchg
mov
add
movsb
lret
lock
or
mov
in
int3
imul
sbb
fbstp
jge
sbb
lahf
test
testb
popf
gs
or
stos
adc
rcll
xor
cmp
jge
xor
addl
outsb
jo
popa
lds
jp
or
xchg
test
loop
aam
imul
xor
dec
pop
sbb
push
shll
in
mov
sbb
test
addr16
fldl
scas
std
loop
sbb
icebp
scas
sbbb
xorb
aad
int3
inc
fwait
daa
rcl
jg
push
cli
test
ljmp
shrb
inc
xchg
pushf
adcb
mov
jo
jae
sbb
jmp
ja
add
inc
incb
fstl
fnstcw
lods
mov
test
push
ljmp
adc
addl
adc
lods
rorl
adc
loope
or
int
jmp
xchg
add
jmp
mov
or
into
das
jle
shlb
xchg
jns
cmp
inc
sbb
cli
js
mov
fildl
mov
xabort
repz
dec
jne
push
sbb
enter
test
fdivrp
sahf
lock
adc
adcb
xchg
dec
mov
jae
jbe
mov
push
cmp
pop
clc
rcrl
xchg
add
seto
jg
sbb
push
or
xor
and
inc
daa
push
adc
fsubrl
mov
and
inc
add
fsts
sbb
mov
jae
jns
mov
sbbb
adc
imul
lea
cld
dec
xchg
adc
rolb
fnstenv
pop
call
dec
mov
xchg
negl
pop
ficoml
repnz
or
je
loopne
or
mov
loop
or
mov
and
sub
jb
repnz
test
push
xor
xchg
push
call
add
aas
fmuls
les
xchg
pop
and
les
jmp
andl
lahf
sub
jge
lock
insl
pop
mov
int
bound
movsb
pop
test
call
jo
sbb
in
cwtl
jecxz
pop
push
insl
rclb
sbb
and
test
filds
test
adc
mov
popf
test
adc
cwtl
lea
add
test
mov
sbb
mov
test
lret
adc
sub
push
lahf
mov
lods
mov
std
jae
mov
cmc
movsl
into
pop
xorl
pop
negb
xchg
dec
push
adc
xor
outsb
cmp
in
cmp
jmp
dec
jne
loopne
icebp
mov
test
and
lea
adc
dec
mov
out
imul
fisttpl
cld
jne
push
cmp
sti
mov
jle
cmpl
stc
push
addl
pop
mov
pop
fcoml
dec
xchg
dec
jl
dec
js
pop
ret
cmpsl
ja
dec
insb
out
jmp
add
cli
inc
xor
in
mov
push
and
sbb
adc
and
pop
sbb
dec
sbb
aam
popf
jle
mov
push
xchg
aaa
xor
mov
lahf
and
pop
nop
cmp
test
fwait
push
pop
into
sbb
or
push
jmp
in
fbld
jnp
and
cwtl
loopne
add
lea
inc
xorb
lahf
jnp
es
dec
testl
xor
shl
fsubr
cmpsl
or
std
fsubr
ret
rorl
adc
fistps
notl
aad
jo
std
jle
pop
aas
pop
xchg
sti
dec
stos
jno
and
js
and
push
les
sbb
ds
insb
vpmaxsw
icebp
scas
call
pop
xor
icebp
xchg
movsb
sub
int3
lock
and
mov
sbb
mov
outsb
dec
out
jg
pop
rcr
mov
std
mov
or
insb
les
notl
pop
or
je
push
enter
dec
jp
repnz
inc
mov
sub
stc
sbb
jp
jle
push
and
dec
add
push
hlt
addl
icebp
rcl
dec
add
movsl
adc
jae
cwtl
jle
aaa
cltd
mov
inc
mov
mov
or
add
mov
je
in
out
add
mov
xor
pop
stc
pop
or
subl
xor
popf
mov
mov
in
call
stc
add
jp
loope
xchg
pop
loop
imul
jg
xor
movsb
pusha
push
sub
fnstsw
add
out
stos
sub
repnz
add
xchg
xor
lret
int3
inc
pop
out
push
ljmp
out
add
shll
cmp
lock
adc
stos
sub
cwtl
lahf
je
push
mov
cmp
icebp
and
sub
add
xchg
jl
sbb
jo
cmc
in
dec
fisubrl
adc
testb
movsb
jecxz
aad
repnz
add
test
adc
fsubr
dec
xchg
dec
out
testl
fsubs
or
shl
aas
int
sbb
jp
pusha
dec
mov
cmp
test
inc
push
pop
jecxz
int
out
mov
mov
fs
push
repz
sahf
jg
add
inc
test
push
adc
pop
aaa
or
in
clc
dec
lcall
pushf
clc
ds
aam
xchg
gs
cmpl
cmp
dec
or
in
sbb
sub
mov
leave
sub
addl
or
mov
or
mov
aas
inc
loopne
jle
fldenv
in
and
jmp
popw
cld
or
insb
xor
xor
xor
sub
push
mov
cmp
or
jae
hlt
or
adc
test
inc
fcmovu
and
lods
aaa
loopne
fsubrs
lret
xchg
ret
jg
mov
mov
mov
jo
loop
sbb
mov
daa
clc
inc
xchg
inc
es
add
push
mov
cli
fwait
movsb
push
jl
out
aas
test
pusha
js
xchg
xchg
pop
iret
inc
jae
push
xchg
or
mov
xchg
mov
aas
mov
call
popa
das
mov
lock
mov
xlat
fildll
into
repnz
add
scas
loop
pop
xlat
lret
xlat
mov
xor
test
repnz
inc
push
movb
jp
xor
insl
ret
sbb
jae
lods
xor
notl
rcrl
pop
insl
sarb
ret
inc
mov
dec
sbb
inc
xor
cmp
dec
cmpsb
cltd
jbe,pt
mov
je
loopne
mov
pop
arpl
scas
add
popf
dec
jns
jno
outsb
mov
les
fdiv
xlat
push
add
xchg
repnz
scas
jecxz
ja
fistl
xchg
cmp
mov
adc
fs
aad
sub
stos
mulb
fmull
inc
aam
lahf
dec
and
insl
mov
sbb
daa
pushf
test
mov
int
stos
clc
pslld
dec
pop
push
std
xor
push
and
push
jl
push
add
repz
insb
pop
sub
jns
mov
fildll
mov
xchg
and
loopne
ret
into
dec
push
jns
scas
mov
mov
stc
cmp
cmp
dec
xorl
dec
or
cmp
sub
push
dec
mov
mov
inc
and
test
cld
lcall
in
jmp
push
jl
fldl
xchg
dec
add
call
jp
jmp
ds
les
push
push
push
lods
cmp
loope
push
or
mov
inc
and
rorl
cld
aam
sub
adc
mov
push
xor
fimull
rorl
mov
xchg
lock
test
push
dec
cs
push
shrb
jnp
dec
imul
jg
dec
push
imul
fdiv
cmpsb
xor
cwtl
adcl
mov
bound
sub
or
scas
lret
repz
in
inc
test
push
lea
mov
jbe
xchg
rolb
mov
adc
fistpl
fadd
scas
jae
xchg
and
inc
subb
or
lods
mov
lret
push
xchg
adc
aas
pop
ds
je
sbb
les
jae
jns
and
adc
push
ss
mov
jne
inc
aaa
sub
ljmp
mov
jl
sti
mov
push
sbb
cld
cld
mov
cmp
push
sub
sub
adc
push
loopne
adc
or
lods
fisttpl
imul
and
mov
pop
sbb
pop
imul
ret
sti
adcb
cmp
arpl
cmp
icebp
out
in
add
stos
push
je
jb
loopne
adc
mov
push
push
ret
aam
mov
cmp
fisttpll
adc
pop
push
dec
sbb
xchg
push
pop
sar
inc
xlat
testb
push
mov
mov
mov
outsl
sarb
xchg
scas
sbb
cmpb
cmc
cmp
or
lods
jo
push
call
mov
cmp
jb
inc
lea
fimuls
fwait
add
fmuls
repnz
xchg
lock
or
jns
cmc
stos
pop
or
jb
or
mov
inc
lret
cwtl
cmp
add
stos
inc
dec
rorl
adc
aaa
stos
int3
jns
imul
imul
mov
pop
es
adcb
cmp
sub
or
push
sti
stos
sub
push
adc
in
cmp
repnz
into
lds
mov
add
mov
mov
add
pop
dec
je
jg
xor
jmp
push
jae
add
fcomi
add
push
in
pop
icebp
cmc
mov
int
out
leave
or
sbb
jns
xchg
inc
nop
ljmp
sahf
mov
inc
mov
bound
cld
sub
mov
or
pop
pop
incb
inc
push
pop
mov
push
and
or
das
scas
das
adc
rcrb
sub
xor
add
push
lds
fistpl
cli
push
mov
push
cli
jmp
xchg
xchg
std
cmp
or
gs
div
xchg
fucom
cmp
mov
lock
repnz
cld
or
in
jl
mov
fisubrs
adc
cld
pop
pop
idivb
cmpsb
or
aad
dec
mov
dec
pop
lea
ja
jno
cmpb
jns
mov
les
testl
sti
movsl
cmp
cli
loopne
lret
inc
and
or
mov
and
dec
fiaddl
xor
mov
xchg
out
push
dec
es
repz
das
repz
cmp
xchg
cs
xchg
dec
cltd
xchg
sbb
shr
pop
adc
int
popf
hlt
dec
jns
cmp
das
mov
cmp
scas
jl
hlt
lock
mov
call
inc
dec
jnp
icebp
nop
test
inc
xchg
xchg
cmp
subl
mov
nop
flds
sub
jmp
jae
jle
push
in
fimull
push
fidivl
fdivl
fimuls
push
push
lret
fsts
mov
fwait
mov
push
mov
jg
js
stos
xchg
clc
enter
add
xchg
jp
or
sub
jne
cmp
pop
bound
lods
iret
pop
xchg
sub
dec
push
mov
loope
sub
aam
mov
popf
out
xchg
xchg
aad
mov
lret
mov
lret
cmpsb
movsb
mov
jecxz
ja
popa
enter
adc
dec
sub
and
sub
in
adc
cmpb
push
rclb
inc
push
jb
sbb
imul
add
daa
jno
xchg
sbb
or
jno
sub
ss
push
pop
push
jmp
mov
push
jmp
push
mov
call
lea
inc
nop
leave
lods
lds
or
push
in
add
inc
sbb
cmp
jnp
and
in
movb
sbb
sub
and
orb
sbb
movsb
and
loopne
pop
dec
cmpsl
mov
lds
mov
ret
rorb
push
test
fidivrs
mov
cmpsb
loope
dec
je
outsl
outsl
inc
cmp
mov
sbb
lcall
or
sub
sti
outsl
rorb
je
stc
and
mov
sarb
sbbl
xchg
test
xor
pop
insl
inc
sar
out
xchg
cld
cmp
movsl
sbb
test
cmp
xor
mov
mov
shlb
jo
imul
adc
and
mov
movsl
xor
adc
mov
mov
icebp
fwait
push
and
das
fwait
pop
pop
in
ret
mov
in
data16
xchg
nop
pop
adc
lcall
pop
xchg
fsubs
adc
jl
fwait
lret
mov
je
sti
je
test
xor
cltd
and
aam
and
or
and
mov
add
cltd
cmp
lahf
pop
stos
jecxz
jo
jmp
add
nop
mov
std
in
and
push
sub
fwait
push
loope
sbb
push
xorb
add
pop
mov
dec
inc
scas
aaa
adc
mov
cmp
clc
xchg
adc
loope
clc
mov
into
cmp
mov
enter
sti
sbb
push
divb
mov
xor
loope
add
roll
jle
mov
adcb
imul
test
jge
pop
aad
inc
jb
mov
inc
lret
sub
jns
mov
mov
in
dec
push
cmp
clc
leave
fs
push
sets
jo
lahf
sbb
mov
mov
jae
scas
push
sub
je
mov
stos
repnz
pusha
ret
bound
mov
push
clc
inc
xlat
je
fs
sysret
lret
jne
lods
xor
xchg
test
shll
into
adc
add
push
popa
fbstp
sbb
loopne
cli
sbb
sub
gs
dec
or
mov
mov
dec
add
pushl
mov
cmp
sahf
cmp
xchg
mov
xchg
addr16
int
adc
mov
add
pushf
in
push
xchg
imul
push
adc
das
bound
mov
clc
inc
mov
pop
and
loop
movsl
cmp
push
pop
lods
or
dec
add
loop
pop
and
adc
lds
fistpl
inc
mov
jae
mov
mov
popf
nop
enter
mov
dec
xchg
ret
mov
cmp
xor
mov
xor
add
mov
test
movsb
mov
pusha
inc
imul
pop
jo
xor
cmp
push
xlat
aam
fisttpl
jmp
mov
movsb
mov
sbb
or
inc
inc
hlt
hlt
in
imul
jmp
cs
andl
jmp
call
add
mov
inc
jno
movsb
fists
nop
notl
imul
test
or
dec
or
jns
mov
fnsetpm(287
in
insl
xchg
mov
in
mov
ret
jp
into
or
addr16
enter
fs
les
scas
scas
inc
and
sbb
lahf
fcoml
clc
and
xchg
mov
push
push
xor
out
pop
mov
xchg
sbb
movsl
jno
push
aam
ljmp
icebp
stos
cmp
into
jp
xchg
inc
les
andb
les
sbb
out
stos
iret
repnz
aad
cmp
popl
fcompl
mov
nop
push
push
adc
push
sbb
xor
xchg
mov
popa
xorl
sub
repnz
add
repz
aam
out
xor
dec
xchg
mov
mov
lds
dec
adc
cmp
sbb
stc
ret
add
mov
fs
aad
xlat
mov
std
cs
or
xchg
out
or
adc
ret
xchg
sbb
hlt
push
add
lret
adcb
mov
mov
xchg
cmpsb
push
bnd
clc
sub
adc
jae
scas
add
xchg
loop
fwait
cmc
jnp
inc
ljmp
dec
dec
push
les
loope
add
sbb
xchg
adc
fdivrl
cmpsl
pushf
mov
xchg
out
nop
mov
jnp
add
pop
and
int
xsave
fs
jp
insl
mov
pop
and
pop
fucom
jg
adc
aam
aaa
mov
mov
cmpsl
lds
dec
jg
xchg
pop
in
pop
dec
xor
mov
add
out
lret
lret
add
xor
mov
sub
and
xor
and
jbe
xchg
push
mov
sbb
aad
mov
sbb
fiadds
mov
sub
lret
mov
aaa
jmp
xlat
fisubl
xchg
add
aas
movsl
adc
mov
dec
stc
inc
xor
test
xor
push
push
shrb
mov
inc
lret
in
cmc
neg
mov
out
out
or
and
jb
outsl
ja
mov
cli
xchg
xor
mov
sub
adc
xchg
pop
push
push
jecxz
ret
xchg
repz
jge
lret
mov
xchg
cmp
loopne
popf
pop
lods
fidivl
or
inc
xchg
in
cmp
pushf
mov
test
jecxz
stos
xor
std
add
jl
pop
inc
arpl
dec
mov
addr16
xlat
idivb
mov
ja
cli
push
sbb
sbb
and
or
stc
jo
loop
movl
in
cmc
insb
testl
push
dec
dec
sbb
fidivl
pop
push
adc
lret
sub
lods
mov
sbb
and
pusha
cmp
push
pop
sbb
popa
mulb
sub
stos
ljmp
int3
int
rcr
insl
inc
cli
ret
negb
dec
xor
jl
xchg
ja
stos
clc
adc
loopne
sahf
lahf
fistl
push
sbb
imulb
rolb
test
xor
jge
dec
xor
and
cltd
cmp
fistpll
adcl
jp
movsl
adc
cmp
xchg
sub
push
bt
test
fcomps
lods
out
jp
add
xor
mov
outsb
and
clc
mov
nop
push
adc
mov
mov
movsl
mov
adc
mov
mov
fnstenv
push
cmp
cmp
xchg
clc
aad
out
test
mov
add
cmc
inc
inc
jb
popf
lret
clc
fcompl
inc
inc
fucomi
adc
mov
ficoms
mov
dec
stos
and
sub
mov
fcomps
out
xor
clc
cmpsl
daa
sub
testb
xlat
lea
and
add
in
push
xor
movsl
or
lahf
fnstsw
mov
mov
ljmp
xchg
outsl
and
sbb
addr16
xchg
cmp
lret
aas
cmp
xchg
cmc
xchg
into
cmc
inc
xchg
push
cmp
dec
jno
mov
jnp
jmp
addr16
stc
mov
or
iret
jp
xchg
mov
sub
pop
leave
std
loop
mov
inc
scas
jmp
outsb
add
cli
ja
mov
lock
xor
fildll
ret
dec
das
mov
or
aas
or
fbld
push
fnsave
jbe
cs
iret
mov
dec
outsb
jo
mov
outsl
mov
xor
mov
xorl
in
pushf
dec
in
push
cmc
das
mov
ds
ljmp
add
xchg
popa
popa
xchg
in
popl
or
sbb
and
ljmp
fisubrs
outsb
inc
xor
jnp
jno
call
cmp
add
aam
inc
inc
pushl
jp
cmp
int3
and
pop
xchg
in
movsb
or
negb
mov
imul
fucomip
and
inc
adc
cmp
shll
xor
xor
adc
xchg
cwtl
ja
xor
cmp
test
pop
test
and
mov
cmp
mov
or
popa
sti
xor
mov
push
cmp
add
mov
fadd
inc
adc
xchg
and
gs
andl
test
push
das
in
dec
cmp
imulb
out
pop
fdivrl
or
xchg
sbb
mov
sbb
sbb
sub
sahf
add
push
je
notb
jge
cmp
scas
ljmp
xor
popf
dec
idiv
in
test
sti
mov
pop
fwait
pop
icebp
mov
sti
daa
xlat
pop
inc
and
and
cmp
add
dec
int
xor
xor
out
lret
scas
outsl
aam
je
mov
ja
sub
fisttpl
outsb
sub
pop
add
aaa
or
mov
decl
add
in
and
das
loopne
cmp
add
mov
xchg
fs
mov
pushf
outsb
in
jmp
mov
ds
bound
es
gs
pushf
sub
mov
cltd
movsb
mov
and
dec
fildl
jbe
test
test
stc
jbe
lret
and
cmovge
cwtl
and
push
fisubrl
lds
sbb
jb
mov
dec
ret
rcll
pop
push
push
inc
cmpl
stos
pop
and
mov
pop
and
jns
jp
inc
push
ja
cmp
pop
add
por
aas
loopne
in
ret
dec
add
jb
and
pop
fs
mov
xchg
mov
add
ror
jbe
es
push
sbb
push
push
ja
pop
mov
mov
sti
mov
xor
ss
cmp
xchg
jmp
fisttpl
sub
jo
test
les
ss
xor
punpckldq
insl
insb
arpl
mov
lret
hlt
pusha
imul
cmp
movsb
ret
pop
outsw
xchg
bnd
cmpb
push
mov
pop
add
pop
push
add
sub
out
push
fs
imul
dec
lods
roll
pop
xor
cld
sarl
pusha
hlt
sbb
mov
mov
jns
xor
stc
jb
or
jecxz
xor
mov
inc
in
sbb
adc
insb
mov
mov
mov
jno
pop
jp
push
fnstenv
movsl
xor
fs
fbld
jmp
sahf
xor
mov
cltd
ds
pop
xor
mov
pop
jo
aam
lret
mov
push
jl
mov
out
out
lahf
adc
outsb
cmp
inc
hlt
mov
jle
or
stos
inc
mov
or
cmp
pop
shll
stos
rcl
daa
cmp
or
mov
or
cwtl
xor
iret
mov
aam
out
ljmp
aad
and
call
adc
int3
mov
ret
sbb
mov
les
mov
inc
adc
pop
loope
cli
in
push
or
jg
jp
mov
xchg
and
fisubl
pop
cmp
call
adc
push
repnz
push
inc
push
daa
sbb
sti
jb
mov
xchg
popa
cmp
xor
repnz
in
movsb
in
popa
push
sbb
out
andb
cmp
cmp
loop
cmc
popf
jns
xlat
mov
xor
out
outsb
clc
fwait
mov
inc
jbe
and
out
sbb
fs
mov
data16
and
pop
aam
add
jo
jle
in
data16
lahf
xor
lds
push
cmp
jl
add
jno
inc
dec
sub
ja
inc
adc
push
movsl
cmc
iret
or
dec
jb
int
mov
out
loope
hlt
test
iret
mov
imul
pop
insb
add
lods
mov
and
jbe
data16
mov
or
arpl
xchg
sbb
xchg
cmc
pop
jecxz
orb
or
inc
loop
add
fisubrl
pop
in
cmpsl
imul
icebp
mov
xor
int3
testb
ja
add
std
ret
mov
out
adc
push
add
push
fwait
call
popf
aas
cmp
out
sbb
pop
ret
or
fsubs
test
es
push
or
inc
inc
push
cmp
sbb
cmp
mov
and
and
cs
leave
sub
dec
jbe
leave
imul
inc
inc
rorl
cmpsb
je
mov
outsb
xchg
cmp
mov
adc
test
in
push
lea
data16
call
jle
out
ss
cmpsl
add
mov
out
insb
rclb
out
sahf
mov
inc
push
sbb
subl
subb
sahf
xor
mov
dec
pop
and
xchg
and
insb
dec
js
mov
fidivrs
fsubrl
push
rol
repz
sub
mov
push
popa
lcall
lock
mov
icebp
out
mov
lahf
dec
out
aad
nop
jmp
fsubrs
mov
or
dec
mov
inc
movsb
int3
xor
jp
repnz
insl
sahf
fwait
pop
mov
lds
in
pop
jp
inc
mov
add
loopne
ja
mov
std
inc
jae
or
sub
dec
shlb
pop
sub
popf
cli
sub
scas
cmp
ret
es
xor
fistl
inc
ja
pop
xor
aad
mov
sbb
mov
push
sub
insb
xchg
popa
roll
mov
inc
scas
outsl
jp
cmp
xchg
add
inc
jbe
adc
fldt
push
xor
leave
jo
test
mov
xchg
icebp
icebp
jecxz
fildl
or
lock
dec
out
out
scas
pop
add
push
sbb
or
cmp
or
out
add
stos
out
xor
sbb
rclb
fbstp
in
mov
int3
std
push
repz
in
lret
fstpl
aas
xor
data16
or
cmpsl
movsl
push
ret
dec
mov
sub
loopne
mov
jl
cmpsb
pop
vsubps
push
add
in
mov
cmp
gs
loopne
ds
push
es
mov
repnz
and
adc
mov
aaa
push
mov
aam
adc
gs
scas
mov
push
rorl
mov
mov
or
out
jae
fimuls
inc
rcrl
das
xchg
dec
pop
lahf
insl
jo
pop
idivb
gs
loop
xchg
cmp
cmp
jg
movb
sub
pop
repnz
adc
cs
fprem1
push
test
hlt
insb
push
inc
fsts
add
pop
pop
pop
and
fscale
xchg
imul
lcall
stc
aam
pop
mov
gs
adc
push
aad
daa
out
outsl
xchg
scas
add
hlt
stos
mov
pop
sbb
mov
mov
jmp
mov
ds
pop
pop
add
push
inc
jg
outsl
insl
and
mov
fimuls
jmp
outsb
bound
push
mov
and
call
lret
sti
sub
bound
jl
loop
sbbl
insb
adc
cmpsb
mov
sub
push
inc
mov
fisttpl
testb
pop
push
pop
dec
arpl
mov
loope
pop
cld
imul
test
push
stc
stos
pop
adc
push
xor
int3
or
lret
ja
aam
loope
dec
sarb
cmp
sbbb
mov
adc
fwait
cld
cli
pop
into
test
gs
or
mov
aam
in
push
and
cmp
test
pop
cltd
sub
stos
imul
sbb
mov
sub
adc
mov
mov
iret
mov
push
std
sub
pop
or
cmp
push
lret
outsb
hlt
add
loop
lcall
xchg
xchg
push
adc
dec
cmp
sub
cld
lods
mov
mov
pop
mov
sbb
dec
ljmp
fcmovu
popa
jecxz
cmp
and
rcrl
pop
clc
decb
add
ret
jnp
aam
push
ret
aam
or
ljmp
iret
in
push
sub
mov
mov
das
or
inc
add
icebp
cmp
xchg
add
dec
push
mov
xor
test
push
shrb
sub
adc
sahf
das
je
push
cld
push
addr16
jl
mov
xor
test
popf
insl
pop
scas
leave
add
aad
lret
cmc
notl
sahf
ds
add
jg
dec
mov
cs
call
cmc
inc
aad
shr
lea
repz
or
in
sub
push
fdivrs
jns
and
mov
pop
aam
hlt
or
push
sub
fwait
mov
scas
fldt
lods
xlat
inc
xchg
ljmp
xor
cld
push
mov
fs
jnp
cmc
cwtl
mov
xchg
dec
pushf
push
insl
enter
push
and
scas
ds
testb
mov
xchg
sbb
cmp
xchg
ja
cmpsl
in
xchg
xlat
push
daa
dec
mov
rcr
add
xchg
sub
dec
cmpsl
inc
shlb
mov
repnz
rcl
dec
cmp
cmp
add
shlb
aaa
aad
das
dec
ss
iret
das
or
add
pusha
enter
jecxz
lds
mov
push
mov
outsl
cmpsl
add
jmp
lock
pop
jle
add
data16
fs
adcb
scas
and
in
sti
lahf
in
cltd
inc
lret
jns
mov
adc
jmp
adc
sahf
pop
add
inc
inc
popa
xchg
inc
lret
add
add
ds
imul
push
insl
in
cltd
sbb
lea
sbb
cmp
lcall
inc
xchg
sbb
mov
push
fsubrs
or
mov
push
out
jmp
add
dec
cmc
dec
lcall
push
jmp
lds
pop
sbb
rcrl
mov
xor
push
mov
push
jnp
daa
jno
sbb
addr16
stos
aad
mov
int
sub
adc
inc
mov
xor
jecxz
sub
pusha
and
fxch
xchg
aam
decb
fmull
or
xchg
mov
insb
pop
rcll
in
int
mov
add
pop
jg
cmc
and
dec
jnp
mov
cmp
xchg
lods
mov
arpl
and
cs
ja
ja
mov
dec
and
xchg
adc
nop
cld
out
dec
outsb
cmpsl
insb
insl
pop
push
jmp
sub
sbb
subl
lods
mov
fucom
cwtl
sbb
aas
test
push
popf
iret
mov
inc
push
inc
mov
mov
adc
xor
jmp
and
mov
mov
mov
xor
int
pop
dec
pop
sub
mov
add
push
pusha
jge
arpl
and
mov
xchg
out
bound
pop
sbbl
call
mov
jmp
add
shlb
add
dec
dec
das
cmpsb
jge
pop
inc
out
mov
push
or
push
pop
xchg
int
xlat
mov
mov
and
mov
push
cmc
xchg
cld
or
mov
sbb
or
negl
inc
hlt
and
add
jmp
cmp
mov
adc
dec
dec
ffreep
jl
push
pop
inc
sub
test
hlt
nop
push
xor
cmpsb
and
das
pushf
pop
in
pop
lcall
cwtl
pop
aam
fwait
xor
lods
mov
jp
daa
outsb
dec
fs
cmc
push
inc
mov
mov
aas
aas
mov
shrl
sbb
pop
push
out
pop
xor
enterw
ret
scas
lahf
out
adc
adc
inc
add
inc
pop
ja
mov
pop
jo
outsb
push
pop
out
icebp
ffree
pop
loopne
jmp
insl
and
adc
mov
cmp
pusha
jle
cs
cmp
xchg
adc
dec
movsb
sahf
or
push
mov
loopne
push
popa
jl
jb
loop
imul
iret
pop
shrl
sub
popf
lea
xchg
dec
and
mov
outsl
mov
cmp
idivb
mov
inc
inc
jnp
pop
jb
mov
add
addl
lods
insb
push
test
fmuls
lods
shl
sub
cmp
fcoms
push
lods
mov
cmpsw
and
out
jge
in
lcall
insb
push
or
scas
xlat
and
inc
xchg
mov
push
mov
inc
cltd
cmp
push
or
and
fadd
push
in
mov
std
mov
jo
in
push
lods
ljmp
sub
pop
sbb
rol
rcll
sub
nop
cwtl
sub
and
inc
push
in
sbb
mov
sub
push
lock
push
mov
fnsave
cmp
add
cld
xchg
adc
mov
mov
in
icebp
xchg
mov
aaa
dec
pop
sub
jl
cmp
jp
and
hlt
outsl
das
push
lods
xor
xchg
ja
mov
scas
cmp
cmp
lea
flds
cli
sbb
repnz
js
xchg
add
aaa
mov
dec
push
inc
repz
and
cmp
jecxz
stos
lret
imul
out
mov
jl
ja
into
inc
scas
lods
rorb
pop
shrl
mov
inc
inc
mov
sbb
or
fwait
xor
cmp
mov
mov
xchg
xlat
in
xchg
adc
fsts
cld
stc
repnz
fdivrs
jmp
jns
test
jp
inc
das
xor
addb
mov
call
aad
or
or
rcll
mov
and
mov
int3
xchg
out
inc
mov
cli
mov
cltd
adc
or
repz
lods
jno
addl
or
nop
mov
jg
dec
insl
inc
adc
mov
dec
xchg
xchg
xor
sub
scas
pop
mov
xchg
mov
xchg
mov
mov
iret
cltd
in
aaa
divb
lods
ss
test
adc
add
popa
in
clc
mov
mov
jmp
lret
sub
ja
insb
test
add
push
inc
inc
inc
push
pop
out
xchg
mov
mov
ja
xchg
pop
xor
outsl
test
jle
mov
out
adc
sub
xchg
lods
mov
and
mov
sub
push
sbb
ljmp
mov
xor
test
shll
inc
std
xor
insb
repnz
fucom
and
les
inc
lock
addl
stc
pushl
rcrb
in
and
shr
lret
fcompl
cltd
xorl
mov
jns
lret
stc
and
enter
xor
mov
shl
cwtl
cld
xor
xor
or
xchg
pop
and
sub
jle
cmp
cli
dec
jg
filds
sbb
pop
cmp
lock
push
jb
fistpll
sahf
cmp
in
xor
imul
mov
xchg
push
mov
lea
push
cwtl
push
adc
rol
sub
mov
and
and
test
lods
xchg
fisttpll
mov
push
mov
ds
cmc
dec
cli
imul
dec
fnstsw
repnz
xor
repnz
xchg
inc
inc
mov
ret
fnstcw
cs
sub
xor
rcrb
push
pop
test
inc
rcr
push
lret
mov
and
test
xchg
cmpsb
movsl
cmp
and
push
aaa
popa
test
repz
insl
imul
das
setns
ret
and
imul
pop
imul
aas
mov
aas
jge
cmpsl
or
mov
in
sbb
loopne
imul
test
mov
adc
and
dec
decb
fcoml
sub
mov
stc
inc
les
cmp
mov
pop
ljmp
outsl
sbb
adc
sbb
push
pop
mov
andb
add
dec
sub
dec
push
ret
imul
jnp
insl
shlb
int
into
ret
adc
aas
pop
jb
sbb
jno
adc
push
outsl
insb
fistps
push
push
fdivrl
sub
lea
andb
jp
mov
xor
cmpb
dec
push
addb
mov
cli
aad
loop
lahf
inc
dec
pop
push
sub
mov
sbb
fcompl
iret
cmpsb
movsl
push
lret
pop
imul
addb
js
or
push
adc
insl
adc
sti
out
jbe
push
mov
out
sbb
mov
jb
mov
movsb
lcall
mov
repz
jp
in
push
ret
and
jp
fcomps
fucomip
sbb
and
fists
je
add
fmuls
push
scas
bswap
pop
mov
repnz
lods
icebp
mov
push
fwait
out
imul
pop
loopne
mov
btr
dec
add
stc
sbb
out
mov
fdivr
cmp
adc
pop
bound
cmpsb
and
mov
movsl
mov
push
mov
mov
push
mov
mov
pusha
mov
push
or
out
hlt
cmp
sub
rolb
inc
or
mov
adc
xchg
pusha
inc
jecxz
push
inc
add
movsb
push
gs
iret
pop
mov
cmpsl
mov
aas
lods
mov
stos
sub
aas
sbb
sub
popf
add
pop
mov
inc
cltd
inc
movb
push
xchg
jo
out
jbe
or
mov
xchg
mov
pop
or
cmp
jmp
insl
rolb
pusha
cs
paddsw
mov
push
fsubrl
in
sbb
clc
mov
lock
cmpb
in
sbb
cmp
pop
push
shrl
push
sahf
test
stos
or
sub
sub
cltd
scas
cmp
fxch
xorb
push
mov
xchg
mov
js
es
jns
cs
outsb
cmp
jg
pop
fs
shlb
jg
or
arpl
push
mov
push
mov
imul
roll
lcall
dec
js
out
sbb
push
cli
lcall
sub
mov
mov
cmc
sbb
mov
push
std
mov
inc
subb
push
nop
fdivrl
cmp
sti
xchg
sub
jmp
fstps
or
rolb
aaa
xchg
xor
sbb
es
pop
xchg
xchg
jne
push
clc
jle
call
out
scas
sbb
and
mov
dec
ljmp
daa
rclb
lea
jnp
fiaddl
popa
aaa
int
scas
push
stos
push
lods
cmp
cmp
aas
fst
out
xchg
xchg
outsl
push
inc
xlat
jo
shl
pop
ret
mov
mov
and
dec
cld
fcmovnu
sarl
pop
adc
mov
in
mov
adc
insl
ja
mov
rcll
insl
dec
mov
inc
jp
xchg
cld
add
subb
mov
pop
mov
mov
inc
shrb
es
xchg
xor
rcl
mov
loope
cmp
shrb
lret
mov
sahf
mov
pop
mov
mov
mov
into
cmp
dec
mov
sbb
jae
jg
movl
ss
stos
in
xor
scas
arpl
hlt
cwtl
fisttpl
repz
push
jbe
scas
dec
or
mov
push
addb
or
fmuls
pushf
cmp
iret
inc
and
add
cmove
icebp
stos
sbb
push
into
imul
pop
or
jns
adc
sub
mov
xor
aaa
and
ds
jg
cli
add
adc
arpl
xchg
pop
adc
cs
in
cli
mov
mov
mov
dec
ficomps
stos
aaa
xchg
inc
pop
test
cli
clc
adc
fcoml
push
int
add
xchg
scas
out
dec
mul
mov
lods
mov
psubusw
or
mov
sbb
jbe
fcmovbe
adc
jo
jne
js
scas
dec
cmp
ja
pop
fsubrs
push
loop
push
inc
loop
dec
push
xchg
inc
movsl
dec
jl
and
sti
cmc
rcrl
subb
lock
and
pop
lea
or
pop
mov
cmp
adc
xchg
je
repnz
out
and
loop
in
fsubs
je
pop
rol
adc
push
rcrb
dec
repz
mov
shlb
add
mov
insl
cmc
fstpt
test
ret
test
popa
fwait
pop
jg
lahf
imul
daa
and
or
test
push
shrb
mov
adc
dec
cmc
inc
xchg
xor
lods
mov
frstor
std
sbb
pop
and
out
mov
inc
pop
jo
in
enter
dec
mov
inc
ja
int3
cmp
subl
xor
cmp
mov
fldcw
ljmp
out
imul
clc
pop
popl
jae
pop
xchg
call
mov
xor
pop
pop
scas
inc
in
xchg
dec
bound
mov
pop
in
loope
gs
cmpsb
jne
sbb
mov
popl
push
push
and
or
mov
push
push
out
bound
pop
mov
cmc
and
aad
mov
scas
loopne
pusha
jecxz
call
jb
std
cmp
cmpsb
ret
movsb
mov
cmp
and
mov
and
xor
pmulhuw
ss
test
enter
movsl
stc
pusha
inc
push
inc
xchg
jg
das
shlb
jg
out
sbb
or
sub
adc
cmp
lods
jbe
push
sub
jle
faddl
in
cwtl
adc
fisttpll
adc
test
push
int
sbb
andb
fdivrs
push
and
inc
jge
dec
inc
jns
dec
add
push
and
iret
scas
lods
orl
adc
cmp
sub
pop
mov
arpl
jl
dec
dec
xchg
rol
cmp
mov
dec
inc
push
xor
and
push
lahf
jmp
mov
arpl
pusha
inc
inc
mov
addl
movsb
or
pop
cmpsb
sub
jae
xor
jmp
jb
rcrl
mov
fcomp
pop
cli
insb
fisubrs
and
cli
cmp
adc
loop
addr16
popa
pop
cltd
cmp
mov
addb
cmp
or
test
cld
popa
push
rol
fildll
sbb
push
mov
push
lods
or
sti
lahf
jle
out
jns
sarl
push
popa
jecxz
inc
clc
fcomp
mov
hlt
sbb
fwait
cmp
ja
xchg
push
popa
imul
pop
jecxz
jns
sarl
inc
pop
or
je
xor
and
out
js
int
push
cwtl
fisubs
bound
sti
decl
dec
dec
or
lret
mov
add
jae
or
mov
sahf
inc
test
lods
sbb
rcll
mov
in
pop
mov
sub
jnp
cwtl
nop
push
popf
lock
jecxz
sbb
ja
or
sbb
daa
fsubrp
ret
out
je
hlt
lret
jmp
sub
xor
movsb
mul
stos
sbb
jbe
mov
rcrb
pop
fnop
gs
or
push
adc
lock
cltd
lcall
or
ds
xchg
and
roll
and
pop
jmp
and
shrl
cs
movsl
xor
and
add
ja
add
andb
mov
aas
decb
xchg
aam
adc
cmp
sub
fbld
pop
jb
inc
mov
xlat
scas
push
jg
roll
in
jnp
xor
or
nop
adc
idivb
push
out
mov
in
loop
push
movaps
call
cld
in
adc
lock
in
add
add
sbb
vandps
xor
mov
xor
icebp
cmp
add
sbb
sub
jnp
lahf
sbb
mov
push
push
jmp
roll
je
into
subl
addr16
into
cld
jg
sbb
or
xchg
out
sarl
cmpsb
leave
adcb
xor
mov
es
mov
inc
inc
cld
lea
fs
test
cmp
les
and
js
test
jmp
mov
rcll
repnz
lds
jnp
fwait
cld
xor
and
mov
fxch
inc
lock
dec
mov
cmpsl
mov
hlt
or
popf
pusha
shlb
repnz
jo
insl
push
or
inc
stos
sbb
push
jae
je
imul
mov
sbb
ds
popa
fs
repz
movsl
sbb
inc
xchg
cmpsl
jno
data16
fwait
icebp
stc
mov
in
sub
stos
cmp
xchg
ret
aam
cmp
divl
push
xor
inc
and
adc
push
mov
jno
push
dec
xchg
pop
loopne
ret
inc
outsl
andl
mov
sbb
jle
xchg
int
pop
mov
and
pop
daa
imul
sub
xchg
push
repz
xchg
mov
shlb
dec
popa
insb
and
loop
xlat
mov
int
lods
dec
int
pop
cmp
shrb
in
xor
inc
cmp
pop
adc
pop
test
divb
enter
fists
mov
and
sbb
add
fcomps
or
push
pop
pop
mov
jbe
mov
sti
adc
pop
fdivrp
loope
vpcomud
inc
mov
and
jno
cwtl
adc
out
mov
insl
cmovs
jmp
cmp
lods
fs
mov
mov
jg
mov
sbb
icebp
mov
mov
pop
stos
push
cmc
and
mov
jne
in
jae
push
inc
xor
push
pushf
or
cld
xlat
cmpsl
repnz
loopne
mov
ss
cmp
test
and
push
int3
in
loop
or
fdivrl
fwait
xchg
clc
fdivrl
into
xor
cwtl
scas
jno
iret
loope
cwtl
jmp
mov
add
push
xor
iret
es
xchg
loop
cld
movsb
and
repz
jno
jp
mov
xorl
mov
pop
pop
cltd
cmp
push
and
je
add
shr
rolb
mov
out
pop
repnz
lock
dec
cltd
jno
pusha
adc
iret
xor
cmp
movsl
enter
nop
leave
test
addr16
xchg
cmc
mov
daa
mov
es
fldcw
push
je
insl
scas
cmp
xchg
fwait
mov
mov
xor
push
testb
add
sbb
push
out
je
out
cmc
ffree
adc
out
test
adc
dec
xchg
test
aam
inc
aaa
inc
push
lcall
lods
std
bound
sbb
pusha
arpl
sahf
cwtl
fwait
jb
sahf
fisubs
cmpsb
ficoml
aas
adc
les
jns
push
test
cmp
icebp
pop
insl
enter
push
call
outsb
dec
mov
in
lea
imul
xchg
xor
rorb
sbb
adc
sbb
dec
sub
xor
inc
sti
out
insl
inc
cmp
pop
or
inc
push
mov
xchg
inc
push
jmp
loopne
ljmp
inc
stos
pop
bound
lcall
cmpsl
cli
pop
iret
test
icebp
push
das
add
nop
sahf
outsb
and
cmpl
adc
sarl
sahf
idivl
repnz
push
test
adc
xor
bound
pop
sub
in
jmp
or
call
jo
cmpsl
das
adc
inc
and
mov
popa
mov
gs
data16
pop
dec
sub
andl
in
mov
in
mov
xchg
lock
adc
adcb
or
cmp
test
mov
adc
into
pop
rorl
jnp
stos
inc
dec
push
out
pop
and
fsubl
loop
mov
ret
int
lahf
inc
push
movsb
cmp
pop
add
mov
pop
and
imul
mov
sub
int3
shlb
push
es
jecxz
adc
arpl
sbb
popf
adc
repnz
push
push
pop
push
or
movsl
mov
aaa
xor
out
mov
xchg
jb
mov
addb
mov
iret
rclb
outsl
in
insl
cmp
cmp
mov
mov
mov
scas
ss
inc
xor
sub
pop
test
fisubs
aas
mov
or
cmp
sbb
pop
xchg
mov
js
cltd
icebp
and
push
aas
aad
int
cmpl
lret
sub
loop
or
mov
aad
cmpsl
fldl
in
pop
dec
jmp
in
cmp
ret
aam
jecxz
fcomi
ret
cli
mov
cld
pop
out
pop
sbb
out
lret
adc
jnp
or
ficoml
fadd
mov
and
test
cltd
pop
lret
adc
jge
add
bswap
push
pushf
xchg
popf
repnz
popf
lock
sub
push
xor
or
jb
stos
jne
test
jge
insl
sbb
aaa
icebp
dec
mov
es
lods
sub
popa
mov
out
push
mov
jo
in
adc
rcl
mov
push
push
sbb
pop
xor
mov
lds
cmc
pop
mov
aad
sub
add
cmp
mov
bound
push
loopne
inc
scas
inc
test
gs
and
mov
jg
cmpsl
test
gs
or
mov
in
mov
dec
nop
dec
mov
mov
add
ja
ljmp
push
fucomi
outsl
xor
inc
xor
dec
testl
jbe
mov
cmpsl
pop
int3
sbbl
and
mov
daa
loop
inc
mov
sub
pop
test
jnp
push
lock
inc
xor
push
aad
test
add
scas
sbb
inc
lcall
mov
ja
xor
gs
xchg
jo
sbb
sar
inc
loop
arpl
cmpsl
aaa
or
push
stos
xchg
pop
test
and
movsl
fwait
inc
jbe
out
insb
aaa
ret
jnp
out
xchg
pop
mov
daa
or
push
daa
or
add
mov
xor
rcll
xor
or
imul
xor
lcall
cmp
dec
insb
mov
in
cmp
jne
je
inc
push
mov
sbb
jb
cmpsb
std
cmp
sbb
cmpl
and
sbb
adcl
repnz
xchg
test
xor
lds
mov
sub
xchg
popa
mov
cs
cmc
cs
lcall
mov
jae
inc
cmp
xchg
stos
cmpl
out
fistl
cwtl
add
mov
inc
adcl
dec
or
xor
inc
push
xor
pushf
push
aam
lret
jp
movsb
xor
jb
or
cmc
mov
movsb
xor
xor
in
pop
push
mov
mov
adcb
push
xor
mov
test
sbb
xorb
lret
fists
add
dec
out
das
sbb
mov
movsl
sbbl
sub
ds
loop
mov
gs
clc
fldenv
shll
test
and
xchg
jno
push
mov
push
testb
arpl
push
sub
jmp
add
xchg
cld
add
shll
fldl
rcrl
inc
nop
dec
and
outsb
insl
ja
shl
cmp
vphaddwq
sarb
mov
mov
mov
sbb
cmpsb
aad
add
lods
sti
cmc
cmpsl
jecxz
or
pop
mov
js
cmp
jp
fldt
shrl
in
xchg
push
dec
cmc
push
xchg
mov
scas
shlb
jecxz
iret
cmp
hlt
ds
aad
jge
mov
adc
mov
shll
mov
int3
pusha
sbb
cmp
stos
fldl
inc
out
nop
lret
add
hlt
cmp
mov
sarl
repz
xor
fdivrs
clc
out
repnz
ret
add
xchg
or
int
out
mov
xchg
cmpsb
sub
rcrb
out
pop
clc
inc
es
sti
imul
jl
adc
sahf
in
xor
xor
push
xchg
loopne
repz
push
out
in
gs
mov
inc
jno
inc
inc
popa
xchg
jbe
push
adcb
pop
inc
pop
jae
fnsetpm(287
mov
xor
adcb
and
xchg
insl
and
lret
xor
cmp
jle
sub
insl
repz
pushf
mov
dec
pop
push
mov
sub
lret
pushf
xchg
and
or
xor
cld
xchg
pop
push
and
sub
stos
pop
fwait
sub
lcall
mov
icebp
in
jge
pop
cmp
call
xor
loop
out
inc
push
push
pop
mov
push
xchg
and
mov
or
into
call
mov
pop
xor
aad
xchg
mov
rcrb
lcall
scas
in
dec
ja
lock
adc
hlt
pop
mov
jmp
andb
jp
mov
nop
sub
rolb
xchg
aam
lods
ljmp
ret
into
in
sbb
mov
push
inc
testl
aaa
dec
mov
outsb
aas
pop
arpl
or
bound
rorl
ds
inc
adc
sbb
jo
lods
pusha
enter
pop
jb
push
js
mov
aam
jno
pop
cmp
mov
gs
cltd
mov
loopne
dec
jb
pop
repnz
jnp
in
sti
pop
out
call
sbb
pop
gs
loopne
out
mov
out
inc
jg
jmp
inc
mov
xor
mov
cltd
push
das
dec
push
pop
inc
or
xchg
push
add
ljmp
in
xchg
lret
xchg
aaa
lds
add
dec
xchg
aas
adc
sub
lds
insb
out
and
sbb
std
cld
sbb
jmp
je
jecxz
xchg
add
cmp
loope
add
push
push
mov
inc
sub
and
add
stos
jle
cmp
xor
adc
fidivrs
sub
mov
shrl
pop
aas
add
bswap
mov
ds
mov
loopne
popa
cld
xor
ss
add
inc
xlat
cmp
jbe
jo
sub
scas
pushf
adc
fwait
ljmp
sahf
mov
int
lahf
mov
icebp
xchg
faddl
leave
lea
and
add
lods
repnz
cli
loop
and
out
mov
testl
jne
call
and
out
sarb
mov
mov
push
outsl
jl
push
imull
int3
hlt
daa
cltd
test
repz
popa
mov
pop
mov
int
mov
sub
in
imul
pop
cmc
sbb
cli
insb
gs
hlt
mov
ds
xor
push
mov
jnp
xor
mov
sub
sub
pop
mov
dec
shll
lcall
inc
call
dec
mov
cmc
out
and
int3
mov
fs
orl
aam
mov
inc
gs
cmp
mov
xchg
leave
sarb
xor
push
push
mov
cwtl
jno
mov
adc
fsubl
outsl
inc
add
mov
syscall
outsl
leave
ja
sub
mov
and
mov
pop
stos
movsb
out
xlat
mov
cmpsb
inc
push
daa
mov
sbb
mov
add
adcb
outsl
lds
loopne
mov
add
repz
pushf
orb
int3
shr
add
jo
inc
es
in
pushf
dec
fs
in
test
jp
add
out
imulb
pusha
mov
sbb
inc
push
stos
add
push
push
sub
pinsrw
adcb
pop
mov
cmpsl
sub
fnsave
out
pop
test
add
or
xchg
xchg
pusha
and
loopne
ss
mov
or
arpl
test
nop
pop
inc
inc
iret
aaa
lods
and
fimull
bound
cwtl
dec
jecxz
sti
pop
std
fimull
mov
adc
inc
dec
inc
push
test
adc
mov
popf
jp
xchg
ret
xchg
xor
es
adc
repnz
ret
xchg
sub
xor
push
sbb
scas
mov
push
sarl
and
adc
subb
push
pusha
mov
mov
xchg
push
les
out
sbb
ror
mov
xchg
mov
jmp
aaa
dec
les
sbb
inc
pop
and
add
cmp
outsl
push
mov
xchg
pop
mov
pop
stos
jb
insl
add
xchg
mov
mov
mov
cmp
ret
inc
dec
push
cltd
lds
lret
xchg
addb
popa
shlb
inc
add
ret
out
je
sbb
mov
int
decb
daa
fstps
nop
or
xchg
mov
push
lea
xchg
nop
push
sub
pusha
adc
mov
inc
mov
adc
or
or
adcb
pop
pop
leave
int
sub
xor
sbb
jne
adc
adc
mov
lea
jge
pop
scas
adc
cmp
mov
dec
loopne
pop
xchg
dec
xchg
mov
or
rcrb
test
push
clc
fcmovnbe
popa
out
or
push
push
xchg
push
icebp
rclb
aad
fcomi
mov
mov
adc
lret
xor
arpl
xchg
in
or
lcall
mov
mov
mov
lods
inc
fnstcw
lret
cmp
mull
enter
sub
add
loopne
fisttps
pop
mov
rcrb
xchg
pop
xchg
test
cmp
cld
es
out
inc
dec
jbe
mov
fs
push
push
leave
pop
scas
pop
sbb
mov
imul
lea
mov
cmc
inc
loopne
movsb
push
xchg
out
stos
dec
jmp
and
jo
xlat
and
vpsubw
mov
out
sahf
add
sbb
xchg
into
adc
sbb
test
xchg
inc
cmp
sti
sub
dec
pop
aam
and
push
mov
dec
call
pop
add
xor
movsl
les
loope
shlb
cmp
xchg
popa
cs
xchg
lea
fwait
imul
shll
jnp
js
lret
cli
popl
ja
shlb
push
add
sub
movsb
decb
sub
or
cld
addr16
pop
sbb
xor
push
inc
and
jae
scas
mov
xchg
cmpb
nop
lods
mov
push
cmp
jns
xor
sbbb
out
push
call
sahf
pop
xor
dec
xor
jle
iret
idivb
iret
ret
and
lcall
stc
jbe
insl
lahf
mov
mov
int3
cli
dec
addr16
fisubs
ljmp
mov
aad
and
shrb
daa
cs
add
in
enter
xchg
sahf
add
mov
mov
xchg
cmpsb
scas
imul
cwtl
mov
sub
xchg
lock
adc
push
inc
or
stc
push
icebp
push
adc
xlat
orb
movsl
loop
cld
push
push
xor
mov
cld
aaa
push
jb
dec
cmc
cmp
sbb
movsb
dec
pop
xor
cmp
pop
pop
test
fstps
adc
lahf
nop
imul
pop
jmp
mov
orb
jbe
fstpl
rcrb
mov
mov
xchg
mov
mov
fwait
dec
mov
aas
or
mov
xorl
lods
xchg
sub
adc
outsl
dec
jo
mov
jl
and
xchg
cmp
jb
orl
mov
dec
xchg
sbb
mov
xor
cmp
cmp
out
std
imulb
repnz
dec
xchg
xchg
jmp
xchg
pop
push
mov
jae
jmp
test
inc
jmp
out
mov
inc
leave
test
leave
push
je
adc
aas
cld
scas
sbb
iret
loope
mov
shrd
mov
mov
inc
roll
inc
pop
and
add
scas
mov
adc
pop
les
cli
mov
idivl
dec
or
inc
ljmp
lret
mov
jno
mov
ja
call
into
xor
push
jp
push
or
pop
xchg
loope
into
sub
popf
cmp
mov
mov
mov
aaa
cmp
out
xchg
inc
and
sbb
xchg
mov
push
push
into
inc
andb
inc
pusha
ds
outsl
xchg
dec
dec
dec
cmpsl
fdivrp
imul
test
pop
dec
sub
jl
arpl
cld
jmp
hlt
into
push
push
out
out
lods
pushf
adc
and
in
jmp
stc
andb
dec
movsl
push
dec
jnp
jbe
xlat
xchg
jg
xor
sbb
mov
in
cmc
rcl
and
js
call
or
rcrl
jge
pop
xor
aas
cmc
rep
push
addr16
test
xor
mov
adc
test
or
test
fsubr
outsb
orb
mov
fildl
clc
jnp
lods
cld
leave
pop
or
out
fwait
mov
pop
cmp
add
add
push
scas
stc
cmp
xchg
dec
rcrl
ja
and
mov
dec
int
and
sti
adc
adc
xchg
lds
movb
cmp
hlt
lds
mov
pop
jge
sbb
ret
fisubl
and
jo
sub
add
push
loopne
sarl
mov
or
aad
arpl
sbb
pop
fsubrl
jmp
add
and
xchg
nop
mov
add
push
cmc
inc
inc
lods
or
in
cwtl
out
mull
jno
adcl
mov
or
outsl
sub
dec
js
insl
cmp
test
sbb
leave
pushf
push
das
jecxz
add
mov
cmp
mov
push
pushf
clc
sti
xlat
mov
test
pop
addr16
fstl
dec
sbb
add
adc
lods
jmp
in
outsb
mov
mov
dec
daa
or
aam
fabs
cmp
cmpsl
pop
dec
adc
dec
jbe
popl
mov
mov
xchg
jae
or
jcxz
test
push
jge
adc
mov
mov
adc
pop
push
mov
xchg
loope
movsl
rclb
loopne
push
decb
into
popa
xchg
jne
test
pop
js
loop
mov
dec
push
in
mov
cmp
movsb
mov
sti
imul
or
mov
out
out
adc
dec
xor
ret
imull
jno
or
mov
frstor
sbbl
testl
mov
mov
aam
and
mov
cmp
add
or
cmpsb
addl
leave
xchg
add
fnstsw
loopne
pop
or
mov
bound
push
hlt
fisubrs
hlt
inc
subb
inc
inc
rclb
hlt
icebp
into
jp
lds
sub
xchg
lods
movsl
cli
lods
orb
pop
and
imul
push
sub
xlat
aas
das
mov
cmp
jae
push
and
lock
psubd
xor
pushf
popa
inc
rcrl
clc
fcomip
or
xor
mov
xor
adcb
and
popf
cmpsb
xchg
and
sti
sub
lods
jne
adc
xchg
rcll
mov
rorb
jae
dec
gs
imul
add
mov
jnp
lcall
mov
mov
cs
pop
mov
sbb
jbe
mov
jnp
xchg
push
lock
sbb
rolb
mov
lods
sub
rolb
shl
pop
jbe
xchg
je
sub
push
push
leave
mov
js
shll
sub
mov
and
mov
and
and
out
mov
ss
jns
mov
mov
push
sub
jns
cwtl
movsb
jge
ds
jmp
or
mov
out
das
sbb
or
in
stos
fcompl
xor
daa
or
mov
fsubl
xchg
or
dec
mov
add
enter
mov
cli
xchg
dec
xor
es
mov
sbb
cli
pop
jae
lock
mov
mov
mov
fnstenv
ffreep
jae
sub
imul
mov
sti
or
nop
sbb
je
lock
mov
js
aam
mov
adc
addr16
add
sub
pop
inc
xor
mov
push
mov
cmp
sub
cld
sti
cld
enter
cmp
lret
mov
sbb
xor
mov
mov
add
xchg
inc
push
mov
sub
and
fistpll
cmp
loope
jbe
call
or
insb
test
mov
sub
mov
es
sub
xor
inc
xor
mov
mov
dec
cltd
imul
pop
xor
mov
xor
std
and
and
add
leave
jnp
ret
or
lcall
negl
insb
mov
mov
pop
sub
inc
mov
leave
mov
and
mov
fcmovu
out
pusha
jmp
sub
dec
imul
mov
mov
es
or
or
add
in
jl
js
gs
xchg
sbb
push
test
mov
pop
iret
dec
cld
ds
rorl
std
jae
icebp
inc
or
clc
push
xchg
adc
sti
testl
lret
inc
push
push
stc
xchg
push
into
cmp
mov
scas
inc
pushf
xchg
adc
and
xchg
mov
cmc
or
and
mov
mov
jne
rorb
inc
loop
lret
dec
sbb
push
cli
jecxz
or
aam
mov
out
cmpl
mov
mov
mov
ja
outsb
cmc
aas
xchg
xlat
adc
nop
pop
add
neg
call
iret
iret
frstor
lods
mov
daa
mov
or
das
sahf
pop
pop
fcoml
shlb
xacquire
inc
ss
lds
dec
mov
xor
sub
add
cmpsb
es
fwait
mov
aas
int
dec
ret
shll
mov
cmp
ficomps
iret
jle
and
aam
roll
pop
test
mov
or
lods
ja
inc
dec
xorl
mov
sbb
mov
daa
ljmp
arpl
mov
mov
mov
out
sub
aam
popf
idivb
sub
mov
loop
sbb
or
loope
cmp
test
xchg
stos
or
test
xor
mov
jge
mov
dec
push
or
insb
iret
and
int3
ss
xchg
cmpsl
int3
ja
inc
hlt
sbb
cmp
aam
jae
mov
inc
inc
xor
sbb
adcb
jge
in
or
push
pop
and
es
xor
pop
hlt
andl
fadds
hlt
outsl
jae
jmp
mov
adc
scas
repnz
fstpt
inc
inc
movsb
ss
sbb
xchg
push
sti
push
rcrb
and
xor
pop
lret
into
imul
imul
dec
fxch
cmp
cmp
shl
cmp
negl
push
push
xchg
inc
mov
imul
test
adc
xlat
dec
xchg
push
mov
mov
jb
call
out
aam
movsl
ret
repz
loopne
ret
sub
sbb
lock
sbb
add
mov
and
lret
repnz
out
pushl
xchg
jns
inc
pop
sbb
or
dec
stos
inc
adc
stos
int3
dec
jecxz
mov
or
pop
cmp
mov
adc
addr16
fisttpl
pop
xchg
fstpl
fdivrs
add
das
outsb
jae
jns
neg
jle
pop
cltd
je
jecxz
sbb
fisubrs
outsl
jmp
fwait
test
or
cmc
jl
or
enter
ljmp
ret
dec
arpl
jb
and
test
pop
xor
rclb
push
loopne
pop
orb
jge
ror
jmp
mov
out
xlat
dec
insl
or
sbb
movsb
push
popa
lcall
and
dec
push
vpand
sub
pop
icebp
stos
testb
jge
lret
fistpll
into
loop
je
cmp
test
add
xor
sub
mov
push
xorb
fs
push
stc
add
and
testb
and
arpl
mov
gs
imul
xor
test
in
jo
je
xchg
push
lcall
lods
fsubr
xchg
aas
push
pop
mov
js
add
lock
mov
test
xchg
shl
fsts
push
movsl
xchg
repz
rol
cld
adc
add
test
insl
inc
sub
push
faddl
fildll
pop
xor
pop
xor
lahf
pop
cmpsb
aas
and
arpl
push
mov
jb
add
lods
inc
aaa
xor
faddl
adc
stc
lcall
mov
cs
adc
ficoml
pop
dec
jnp
xchg
add
sub
inc
popf
fdivrs
mov
adc
inc
test
sbb
fnstcw
sub
andl
lret
shll
add
xor
fs
jo
mov
test
and
fidivl
sbb
fidivl
adc
popf
xchg
and
add
jae
sub
inc
data16
out
test
push
js
mov
ret
insl
xor
push
and
pop
iret
jb
lea
and
or
push
jge
inc
pop
cmpsl
test
xchg
cwtl
test
mov
inc
mov
repz
add
sub
stc
ficomps
mov
cmpb
dec
into
not
mov
or
sbb
inc
inc
ss
jb
and
pop
dec
adc
aaa
jbe
cmp
sbb
repnz
pop
loope
dec
aas
sti
popf
and
or
aaa
sub
andb
lcall
mov
sti
jg
xor
inc
repz
inc
sub
inc
fimull
outsl
cmp
mov
lcall
dec
push
mov
andb
push
or
or
dec
push
cmp
stos
xchg
fs
xchg
andb
jb
and
cs
sub
xor
shll
cmpsb
pusha
adc
insl
stos
mov
ja
js
pop
add
int
adc
inc
xor
mov
dec
mov
movsl
mov
inc
out
rcrl
xchg
std
notl
call
imulb
mov
movsb
xor
gs
xchg
icebp
cmp
adc
xchg
sbb
pop
lock
iret
aam
addb
jno
dec
cmpsl
mov
lret
jl
fwait
aas
jno
jp
or
sub
clc
out
mov
imul
xor
movsl
pop
dec
dec
das
outsl
test
pop
xlat
mov
mov
in
ds
ret
mov
dec
or
fimull
loope
adc
mov
scas
faddl
jmp
sbb
lock
push
push
stos
movsl
imul
int3
push
mov
fwait
dec
push
add
mov
lock
or
sti
dec
stc
rcrb
std
hlt
aaa
pop
jmp
test
add
nop
mov
pop
cwtl
adc
add
into
je
cmpsl
notb
nop
outsl
mov
cmp
arpl
leave
push
fsub
sarl
inc
mov
or
jae
arpl
adc
add
movsb
push
mov
aaa
push
icebp
cmpsb
mov
xor
lods
sarl
data16
movsb
jecxz
cmc
xchg
pop
jno
adc
sub
pop
inc
push
add
rcl
int3
out
inc
push
ja
shl
pop
jbe
out
sub
cmp
outsl
hlt
pop
inc
fs
cmpsb
mov
movsl
or
mov
stos
enter
mov
fidivl
add
or
repz
ret
cwtl
xor
lret
icebp
divl
jmp
lods
leave
icebp
and
jno
xchg
and
addl
rcr
imul
pop
add
aas
cs
add
pop
lods
sahf
pusha
rcll
mov
push
xchg
addr16
frstor
pop
sbb
lret
jo
adc
rcr
daa
fimuls
icebp
aas
adc
cmp
mov
addr16
cmc
lret
sahf
shr
inc
push
jle
das
push
push
and
packsswb
push
xor
cld
jecxz
scas
inc
push
stc
mov
lods
adc
test
xor
ret
mov
jle
cwtl
hlt
jmp
and
mov
in
cmp
fimuls
and
adc
stc
sub
lds
inc
scas
clc
cmpsl
in
adc
fnstcw
std
add
inc
ljmp
inc
or
mov
popf
push
push
dec
aas
out
lahf
repz
outsl
jge
cmp
fildl
fimuls
outsb
fwait
cmp
into
pop
inc
mov
setle
adc
fwait
lods
gs
inc
adc
cmp
and
jmp
popa
push
pop
pushf
dec
fsts
jp
loop
out
sarl
int3
mov
xor
or
dec
jg
enter
push
lret
mov
sbbb
outsl
js
inc
mov
jl
lcall
jae
xor
sbb
dec
aas
pop
adc
jne
lcall
push
pop
xchg
sub
stos
das
dec
lret
daa
pop
pop
adc
or
add
inc
andb
add
pop
xchg
mov
or
loopne
in
mov
movsb
daa
sahf
xchg
cmp
mov
mov
xchg
add
sbb
pop
add
adc
lea
adc
mov
jmp
repz
sbb
xlat
das
push
test
adc
mov
dec
fsubr
ficomps
push
insl
or
pop
sbb
in
test
lea
out
adc
mov
pop
and
sahf
mov
test
scas
sbb
aad
sbb
rep
jecxz
inc
movsb
loopne
fisttpl
insb
add
pop
adc
fists
ret
inc
test
add
fwait
mov
jle
push
mov
inc
test
push
jecxz
jp
add
mov
xchg
repnz
mov
bound
xchg
test
xor
int
cltd
push
cltd
sub
xchg
xchg
dec
rorb
or
jb
jno
rcr
gs
sub
ret
sub
mov
dec
cmc
les
xchg
idivb
pop
mov
fldt
xchg
cmp
jle
out
xchg
clc
lea
cmpsb
pop
pushl
icebp
push
ret
adc
imul
mov
psubsb
mov
mov
loopne
jmp
mov
ficoms
outsb
xchg
xor
add
xor
inc
push
shll
es
dec
aas
mov
fwait
aas
imul
call
pop
mov
mov
pop
jno
es
insb
repz
or
movsl
jb
in
lods
ds
pop
imul
inc
adc
lock
loop
xor
xor
scas
fs
or
xor
call
test
popa
fmull
call
xchg
mov
jg
sub
xchg
cmp
ret
inc
in
loopne
lret
dec
sbb
and
adc
fldl
xor
jo
scas
ds
into
ds
jg
mov
cmc
mov
push
repz
ljmp
sti
pop
mov
ss
ret
inc
inc
mov
repz
in
push
repnz
xchg
repnz
push
sti
xor
in
xchg
lcall
sbb
dec
inc
jg
movsl
push
inc
inc
push
mov
cmc
sbb
jge
cmp
cltd
mov
test
outsl
pop
mov
flds
aad
and
icebp
mov
fnstenv
lea
fwait
imul
iret
add
xchg
arpl
push
xor
mulb
mov
pusha
pop
cmp
movl
mov
rclb
lods
mov
jle
xor
push
stc
cmpb
cs
loop
mov
jl
sub
xchg
jnp
lods
call
push
or
insl
inc
aaa
add
add
movsl
adc
in
jb
mov
jns
divl
fisubs
fsub
jo
xor
sub
mov
imul
pop
fiaddl
mov
pop
mov
pop
popa
dec
in
adc
jl
xor
popa
sbb
pop
lea
rcrl
incl
xchg
aam
adc
pop
mov
clc
cli
pop
stos
cmpsb
and
mov
push
cmpb
loopne
add
outsl
jl
xchg
in
cmp
lock
mov
negb
loope
dec
leave
jo
in
mov
cmc
into
mov
mov
xchg
push
inc
pop
adc
aaa
or
xor
pop
shl
mov
cld
das
inc
fs
cmc
out
lret
aas
or
xchg
sub
arpl
in
and
cs
pop
mov
outsl
jns
jecxz
ret
mov
or
aaa
je
jo
and
out
push
js
insl
jmp
sub
into
fisubs
or
pop
mov
and
xor
mov
cmc
mov
adc
jge
aaa
ljmp
or
or
leave
mov
testb
je
out
jg
cli
mov
daa
xor
sar
jnp
adc
cmp
jae
shlb
jmp
xor
jge
adc
stc
mov
jp
sub
pop
pop
ret
leave
dec
ror
cmp
push
inc
iret
xor
sbb
pop
xor
lcall
cltd
imul
outsb
roll
mov
repnz
inc
push
cmp
pop
ja
inc
in
int
int
out
pop
cmp
jle
inc
dec
mov
dec
sahf
jmp
xchg
adc
pop
aaa
pop
pop
sahf
push
push
adcl
into
xor
add
mov
nop
pushf
das
and
lcall
add
cmc
dec
loopne
dec
dec
add
shr
lock
repnz
cmp
xchg
sbb
test
sub
fnsave
enter
mov
xchg
dec
or
dec
jl
std
ds
and
aam
add
fbld
fiadds
fucomp
add
dec
mov
aas
xor
jb
cld
xchg
int3
lret
cmp
fldcw
mov
or
push
inc
sub
mov
sub
mov
sbb
pop
stos
jns
adcb
cmp
adcl
adc
stc
push
inc
loop
loopne
xor
pushf
adc
push
inc
sbb
or
pop
sahf
stos
imul
pop
in
push
daa
xor
jmp
mov
jnp
sub
xor
mov
adc
dec
pop
rolb
out
pop
xor
xchg
jno
push
cltd
and
aad
subl
sbb
fwait
outsb
imul
ret
imulb
dec
movsb
jp
adc
popa
lods
push
movsb
xchg
xorl
xchg
lods
stos
daa
je
leave
xor
clc
add
shlb
sbb
mov
scas
out
cmpsb
fcoml
and
lahf
into
scas
fdivr
add
fwait
adc
outsb
insl
bound
test
bound
es
dec
push
add
sbb
mov
jmp
or
fwait
iret
sbb
mov
cmpsl
ljmp
sahf
jno
rcrb
leave
and
xor
das
sti
lcall
ja
mov
lea
fnstsw
jmp
nop
je
mov
xor
das
dec
aad
push
in
cmova
and
sbb
adc
aam
mov
js
aad
gs
arpl
aaa
push
sahf
mov
sub
xchg
shlb
mov
fistpll
scas
fisttpl
test
gs
cmp
mov
js
push
mov
jnp
xchg
cmp
mov
xchg
pop
fisubrs
add
mov
lock
js
loope
movsl
xor
cmp
or
cmpsb
stc
and
and
or
dec
mov
mov
les
rdmsr
jne,pt
and
pop
jle
jb
jg
sbb
xchg
dec
iret
lret
pop
cmp
in
add
fistpll
movl
adc
or
sub
shlb
mov
addr16
dec
jmp
movsbl
in
inc
push
orb
lcall
fldl
scas
dec
push
out
jp
cltd
jle
and
inc
xchg
test
push
dec
mov
imul
sbb
xlat
jg
push
sti
insb
sub
aam
fs
pushf
loopne
divb
mov
add
rcrl
movsb
aam
cwtl
rorl
dec
dec
repnz
mov
or
mov
push
gs
dec
mov
movsl
push
test
outsb
orb
add
pop
pop
je
pop
add
push
xchg
outsb
stos
mov
mov
mov
xor
scas
inc
sbb
leave
push
test
xchg
int3
in
lcall
inc
xchg
cmp
subl
jno
jmp
pop
or
mov
mov
xlat
or
scas
jae
mov
sbb
filds
pushf
pop
ljmp
test
dec
or
test
xchg
clc
sbb
lcall
fadd
fnstsw
add
addr16
inc
fnsave
aad
mov
cs
lea
and
cmp
cmpb
aam
sub
test
out
fidivrl
inc
out
outsl
aas
push
hlt
fs
repnz
fbstp
push
jmp
mov
cmp
adc
push
push
mov
jne
pop
imul
call
adc
call
push
sti
jbe
mov
push
test
call
inc
in
add
cmc
in
cmpsb
test
fcoms
call
fcmovu
mov
out
inc
jae
pop
sbb
mov
jae
stos
notb
aas
sbb
inc
inc
or
jg
addr16
addb
aas
cwtl
rclb
ja
cmp
dec
jg
sbb
loopne
enter
xchg
jb
imulb
cmp
loopne
cmp
orb
sub
xchg
jp
sub
pop
in
or
movsb
fs
push
xchg
xchg
mov
fmulp
ja
xchg
lock
mov
mov
arpl
scas
inc
pop
lret
sub
xchg
ja
iret
sbb
cmp
and
sub
out
test
iret
cmp
pusha
and
pop
ret
pop
sbb
adc
push
mov
dec
ret
cmp
push
jnp
xor
inc
cmp
idivb
jge
cmp
rclb
sub
lahf
jecxz
mov
push
in
lods
cmpsb
mov
mov
jno
xchg
jecxz
clc
jl
xchg
mov
pop
rclb
test
push
cmpsb
iret
ljmp
jns
dec
icebp
insl
jg
add
cmpsb
cmp
xchg
lea
mov
push
sub
mov
pmuludq
jns
stos
inc
out
outsb
xchg
outsl
mov
call
std
repz
nop
sbb
movsl
jo
xchg
mov
mov
loop
pop
sub
mov
jle
fmuls
sbb
stos
testb
and
cltd
cmp
sbb
rorl
xor
or
icebp
cmp
popf
inc
dec
sti
jno
andl
or
add
loop
lea
fadds
lret
nop
mov
jnp
bound
in
push
inc
push
or
and
dec
jnp
inc
sbb
fucomp
mov
push
lods
sti
fcompl
inc
in
mov
inc
mov
push
outsb
repz
orb
andb
xor
fsubp
inc
test
pop
popl
lcall
xchg
jp
jle
sub
push
rol
mov
movsb
aaa
in
push
ret
xchg
aaa
jg
or
jnp
and
jmp
mov
or
jmp
rorb
pop
cmpsb
test
ds
or
leave
movsl
call
cmc
push
adc
adc
push
pop
ljmp
xor
sbb
inc
dec
adc
pushf
dec
sbb
dec
push
loopne
shll
fbld
outsb
call
fsubp
sbb
in
fwait
mov
and
xchg
cmc
dec
inc
mov
fs
mov
mov
jle
out
shr
cmp
mov
in
test
xchg
pop
fistps
call
out
bound
pop
rorb
xor
jbe
mov
lea
mov
or
and
push
cmp
push
push
sahf
fisubrs
in
add
stos
nop
loope
xor
into
and
push
inc
aas
call
data16
popf
bound
jb
xchg
nop
inc
pop
sub
mov
pop
sbb
jg
xchg
dec
cmp
pop
sahf
fidivs
lock
and
ljmp
cmp
push
jl
shlb
popf
fidivrs
popf
js
xorb
lahf
push
in
shl
dec
and
lret
shrl
js
daa
cmp
jo
jo
lds
fs
clc
fsubl
mov
mov
xlat
loope
aaa
pop
add
mov
mov
lds
mov
int3
or
repz
aas
or
in
or
enter
xchg
out
es
mov
dec
xchg
pop
cmp
jecxz
cmpsl
insb
pop
jl
pop
lods
pop
xchg
cmc
jae
test
add
mov
scas
lahf
adc
add
push
sub
jns
or
push
shr
loope
dec
pop
mov
mov
sub
and
inc
cmpsl
dec
jo
popl
inc
mov
xor
sahf
push
cwtl
and
loop
mov
lods
xchg
int
ds
insb
dec
ret
mov
inc
mov
ret
push
insl
mov
pop
sub
jne
in
and
xchg
inc
sbb
ret
pop
dec
adc
shll
int3
das
mov
imul
pop
cmp
addb
gs
jg
jp
sbb
jmp
pop
jo
push
dec
push
dec
push
push
dec
pop
mov
into
pop
hlt
js
arpl
add
out
fucomip
das
rol
xchg
mov
cmpsb
gs
cltd
pop
add
push
aas
idivb
adcl
jg
cmp
insb
jle
cltd
push
lcall
shrl
fsubr
mov
push
push
insl
and
lock
push
mov
cmp
push
jne
pop
cmp
fwait
loopne
movsl
jecxz
sub
scas
mov
mov
xchg
jecxz
into
sbb
repz
mov
dec
lcall
xor
into
and
mov
xorb
dec
sbb
pop
mov
aad
int
mov
popf
push
test
call
add
fdivs
fsubs
cltd
jl
jecxz
jmp
jle
jg
mov
addl
add
mov
add
test
sar
add
mov
fimull
xchg
xor
test
shrl
out
cmp
push
outsl
fimuls
rcrl
dec
add
iret
push
loope
jp
das
addl
and
pushf
leave
ljmp
cmp
mov
mov
iret
dec
add
add
adc
xlat
push
xchg
cmp
test
jno
out
dec
cli
jl
mov
test
mov
arpl
xor
pop
ss
rolb
cld
pushf
pop
fidivs
ljmp
lea
dec
movb
and
shlb
adc
pop
mov
mov
vcvtsi2ssl
push
pushf
testb
es
outsb
mov
push
dec
loopne
lea
bound
or
adc
mov
sbbb
int
sub
lea
ja
pushf
push
ret
and
add
daa
sbb
inc
fs
push
cmpsl
or
jne
mov
movsl
lcall
push
mov
lock
push
lret
or
dec
adc
dec
ja
add
jecxz
lret
push
lock
jg
mov
in
push
test
mov
push
cmp
mov
in
push
and
repnz
insl
lea
sbb
mov
mov
fistps
sti
mov
cmp
xor
stc
pusha
in
sub
cs
sbbb
jecxz
pop
adc
sub
add
test
mov
jo
jno
jne
shrb
arpl
cmp
mov
xchg
xor
add
int
outsb
in
add
push
mov
adc
out
fcom
scas
inc
mov
sub
sar
mov
sbb
mov
inc
std
loop
pop
cmp
movsl
hlt
pop
fsub
cmp
rolb
dec
mov
popf
scas
add
pop
sahf
pop
popf
mov
push
ljmp
xchg
mov
or
iret
sub
jl
out
push
or
add
scas
pusha
xchg
jecxz
gs
push
fistpll
sub
or
fs
les
dec
mov
sub
mov
ja
lret
jno
testl
std
js
add
add
outsl
outsb
dec
lret
stos
add
test
xlat
into
iret
xchg
jg
mov
mov
dec
addr16
int
inc
ret
inc
in
or
mov
jo
mov
imul
scas
repz
shrb
lods
mov
es
mov
adc
push
mov
pop
fcmove
std
lcall
xchg
adc
sub
mov
repz
repnz
dec
das
cltd
or
pop
push
cmp
push
stos
jmp
lods
cli
or
pop
sub
pop
scas
loop
jbe
mov
push
mov
push
stc
jb
xlat
cld
mov
dec
lods
and
jbe
push
jmp
lret
mov
xor
imul
xor
rcll
mov
mov
sar
xchg
add
push
mov
adc
jge
add
mov
int
rep
push
outsb
cmpsl
arpl
jne
test
inc
mov
test
lret
popf
lea
lret
mov
fstpt
xor
mov
jle
lret
ret
hlt
ret
fcmove
mov
gs
stos
sbb
jecxz
jb
xor
sbbb
lcall
cld
lret
js
in
adc
dec
orl
leave
hlt
inc
ret
les
out
mov
inc
jb
enter
loop
dec
fdivrl
pop
sub
adc
mov
xor
push
add
mov
lahf
sbb
push
aas
bound
pop
xchg
test
in
ss
test
xchg
cmp
in
mov
mov
adc
mov
mov
jmp
push
pop
ret
jle
mov
in
insl
leave
push
mov
jbe
mov
xchg
add
or
mov
shl
xor
mov
mull
push
xchg
mov
insb
rorl
mov
mov
sub
mov
cmc
mov
push
loope,pn
cmp
pusha
mov
add
je
icebp
mov
pusha
outsb
cmpsb
mov
and
xchg
mov
shl
jno
mov
ja
fiadds
sub
jnp
sbb
pop
mov
roll
adc
pop
mov
add
std
xlat
test
imul
push
cmp
shlb
push
int
gs
outsl
xor
iret
sbb
push
jle
adc
imul
clc
mov
lods
adc
nop
xchg
mov
cmc
loopne
fnstcw
sub
test
mov
adc
fisttps
or
push
notb
lods
xchg
cmp
mov
popf
lods
cmp
andb
fwait
jg
jp
inc
dec
cmp
mov
daa
mov
lcall
in
out
dec
add
test
sub
out
xchg
out
and
iret
repz
mov
mov
test
mov
xlat
in
push
lret
and
sbbb
mov
lds
loop
inc
fstpt
in
sbb
jp
int
dec
adc
pop
dec
ror
fadd
bswap
inc
pushf
sub
mov
subb
dec
lods
psubsb
aaa
fadds
xchg
imul
cwtl
inc
fnstsw
jecxz
and
xchg
cmpsl
and
stc
rorb
dec
inc
mov
mov
xchg
or
sbb
adc
add
inc
aam
and
mov
leave
in
lods
mov
lahf
add
pop
rcrb
int3
cmp
mov
push
in
out
lods
cmp
dec
bswap
mov
cltd
out
inc
in
dec
push
sub
dec
test
fmull
sub
les
insl
movsl
test
inc
mov
inc
sbb
sbb
inc
sub
cltd
in
sti
pop
pop
and
dec
orl
xchg
repz
xchg
aad
fwait
outsl
incl
push
mov
fisttpll
xlat
negb
leave
insb
test
push
sbb
xchg
clc
fdivl
loop
outsb
push
out
fstpt
or
ja
loopne
add
dec
mov
sub
mov
pushf
fildll
out
push
mov
and
push
testb
ret
jns
jnp
pop
repz
dec
out
jae
out
sub
test
mov
orb
push
xchg
mov
dec
mov
mov
pushf
add
imul
repz
shll
mov
ror
imul
xchg
bound
popa
add
pusha
popf
pop
lea
mov
js
push
mov
and
mov
jle
adc
lods
aaa
insb
lahf
sbb
mov
xchg
loope
xlat
bound
sub
lcall
ds
xchg
aad
fildl
test
jge
xchg
cmp
scas
jne
xchg
loope
push
inc
imul
jo
and
sbb
inc
mov
pop
ret
xchg
adc
in
adc
adc
or
shlb
dec
dec
cwtl
pop
pop
dec
or
sbb
and
mov
bound
gs
sahf
xchg
nop
loop
aas
dec
orl
push
icebp
cmp
test
adc
data16
loopne
add
jno
xchg
mov
clc
add
xchg
sbb
cmpsb
mov
push
mov
add
pop
dec
mov
sbbl
adc
out
and
mov
out
or
imul
sub
sub
sbb
daa
stc
lret
xchg
mov
add
sbb
fstl
lods
mov
mov
popa
sbb
stos
jne
or
mov
outsb
int
push
lcall
loope
fst
inc
addr16
aad
test
inc
jb
sti
mov
mov
aad
mov
xor
xchg
dec
adc
pushf
cmpsl
sub
fcom
mov
or
dec
fildll
stos
or
test
xchg
xchg
gs
in
test
push
sbb
mov
pop
aas
jae
jbe
into
lret
mov
or
pop
popa
into
xchg
insb
movsb
ja
adc
mov
mov
lods
xchg
sub
cmp
push
cmpsb
stos
mov
bound
shll
dec
inc
loop
insl
jno
xlat
dec
pop
add
jns
cmp
andl
sarb
xor
or
jmp
enter
add
je
xchg
sub
xchg
mov
mov
xchg
mov
cwtl
scas
mov
pop
lcall
xchg
or
xor
scas
pop
xchg
lods
cwtl
pop
repz
in
sbb
dec
jmp
ja
pop
push
mov
sahf
negb
js
adc
lock
adc
inc
repz
out
rolb
and
in
mov
sti
ljmp
outsb
jno
fldt
dec
or
jl
mov
mulb
jbe
mov
sahf
sti
pop
xchg
cltd
loopne
push
sub
sub
pop
shll
aaa
iret
fldl
movsl
cmp
popa
xor
pop
cmp
mov
lods
push
or
and
sub
mov
testl
in
xor
lock
stos
fidivs
mov
pop
or
xchg
cmpsl
mov
dec
cmc
negl
int
rcl
pop
push
jb
push
lahf
scas
push
and
push
sbb
and
aaa
aas
xor
and
pop
imull
call
add
sbb
xchg
sub
out
clc
cwtl
xchg
mov
iret
mov
ljmp
jl
inc
mov
out
adc
pop
repz
dec
cmc
adc
sbb
jl
rcll
jge
adc
popa
pop
mov
sub
sbb
mov
leave
pop
test
mov
push
imul
cwtl
add
lret
push
sbb
mov
add
js
out
cmpsb
imul
shrl
inc
nop
arpl
mov
and
mov
mov
int
mov
mov
xor
sub
sbb
pop
hlt
sti
jp
sub
es
pop
sbb
test
fisubrl
and
ja
push
ret
jns
or
or
xchg
and
add
xchg
decl
jge
mov
add
iret
pusha
mov
subl
and
inc
addr16
popa
adc
test
addb
gs
xchg
mov
mov
repz
cld
ljmp
daa
mov
shl
jg
lods
das
adc
mov
test
mov
ficompl
rcl
ss
sbb
mov
cmp
mov
sahf
ja
add
jl
jg
cmp
add
xchg
cmc
xor
inc
adc
mov
aaa
sarb
cmp
lret
jmp
add
inc
pushf
out
movsb
cld
sub
rorb
mov
mov
andl
test
push
inc
scas
cmp
dec
mov
int3
add
cmp
pusha
mov
push
cmpsb
pop
xor
dec
fldcw
cmp
mov
mov
push
and
xchg
adc
bound
out
stc
adc
imul
or
hlt
xor
add
cmp
lods
ja
push
sti
out
cmp
div
adc
cmpsb
pop
fcoms
js
mov
test
cltd
push
andb
or
mov
push
mov
cmp
mov
sarl
add
leave
mov
inc
add
xchg
adc
stc
mov
sbbl
pop
jl
mov
lcall
mov
sub
xorb
fwait
xor
fnsave
cwtl
fsin
inc
add
sub
inc
adc
insb
lcall
pop
and
push
mov
sub
mov
mov
xor
pop
sbb
pop
rcl
sub
mov
shl
subl
cmp
jg
push
adc
cld
out
mov
ret
loop
cld
test
mov
dec
push
mov
mov
pushf
in
cli
xchg
ficomps
enter
xchg
jae
out
jne
out
dec
outsl
mov
leave
rclb
add
sub
ror
mov
lret
sub
mov
pop
stos
imul
mov
jae
dec
mov
loope
lea
or
lahf
cli
mov
dec
or
push
rclb
outsl
dec
lea
aam
repz
xor
pop
and
sbb
into
fimuls
push
jb
xor
mov
mov
add
dec
jecxz
xor
pop
pushf
sbb
push
int3
adc
and
jnp
fistps
scas
iret
in
movsb
icebp
fs
jp
orl
call
rol
push
cmp
xchg
js
sbbl
mov
jnp
aam
aad
outsb
cmc
pop
mov
and
push
lretw
jne
jg
lds
icebp
xchg
pusha
dec
out
lret
cmp
fldcw
lods
iret
xlat
xchg
cwtl
fsubl
je
andb
xorl
pushf
lret
push
fucom
cs
push
mov
rolb
push
jnp
out
xchg
mov
es
mov
sar
xor
lret
jo
repz
loope
inc
fcomip
inc
fld1
ret
dec
xlat
xor
das
adc
inc
dec
addr16
cmp
sbb
add
inc
pop
push
scas
lods
mov
jno
mov
adc
jns
or
adc
sbb
imul
sarb
hlt
lods
push
stos
adc
xchg
test
jno
negl
int3
js
mov
sbb
jle
lret
stos
and
mov
xchg
or
fwait
jp
jno
push
lods
mov
jp
inc
cmp
bound
das
movsb
daa
ficoms
ja
arpl
data16
mov
in
in
test
dec
in
cmp
stos
clc
pop
mov
gs
cmpl
das
in
ficompl
fwait
ret
xor
aam
test
jne
test
inc
loope
mov
leave
call
inc
pop
shr
dec
iret
sbb
xlat
add
test
adc
mov
bound
inc
and
push
and
enter
fstps
push
loop
sub
out
in
das
xchg
mov
push
jne
inc
cmp
push
jge
aaa
bound
and
cmc
sbb
icebp
inc
cwtl
inc
out
sub
movsb
popf
enter
fwait
pushf
sub
cmp
push
dec
cmp
stos
xchg
out
out
jb
movsb
or
cmp
mov
fdivl
fisubs
cmpsl
repz
mov
sub
mov
adc
cld
adc
dec
xchg
ja
scas
fsubl
dec
out
popa
std
lock
fidivrl
xchg
sahf
testb
adc
shll
xchg
cmp
cwtl
out
aam
insb
adc
push
adc
jo
adc
adc
push
xor
fidivl
shrb
cltd
out
mov
push
out
cmpsl
add
xchg
nop
das
imul
fstps
addr16
lods
xor
negl
jp
ret
jle
test
scas
fistpl
inc
mul
das
add
outsb
rcrl
and
mov
test
dec
sbb
cmpsb
adc
ss
les
rorl
inc
in
dec
cmc
or
cmp
dec
sbb
out
jnp
jbe
or
jne
lods
int
cmp
fidivs
pop
mov
cmp
int
pop
sbb
roll
push
mov
test
pop
fcomps
jne
mov
mov
dec
dec
ret
lds
xor
dec
or
pop
jo
lods
xor
repnz
test
or
mov
mov
pop
pop
jae
cmc
sti
add
je
dec
dec
and
inc
mov
pusha
jp
lret
adc
cltd
dec
ror
roll
daa
lock
lods
cld
add
inc
test
cmp
push
add
pop
int
ljmp
mov
dec
xorl
lods
mov
test
test
gs
and
jp
sahf
cmpsl
mov
mov
sbb
push
mov
mov
jmp
in
cmpsl
xor
mov
and
cmp
aas
xor
cmpsb
stos
clc
pop
loop
mov
xlat
cmp
mov
fsubrs
fmuls
and
pop
daa
and
dec
lret
sbb
mov
push
stos
sub
les
xlat
xchg
and
adc
jnp
inc
mov
sbb
jbe
sbb
lds
sub
mov
fimull
data16
sbb
sbb
sar
test
loope
dec
je
loop
push
xchg
stos
mov
addr16
data16
sbb
iret
ret
dec
outsl
cmp
cld
and
lret
and
jmp
push
bound
or
add
movsl
cmp
adcl
jle
cwtl
leave
pusha
aaa
jg
nop
cmp
lea
pop
adc
pop
push
push
pop
sbb
sub
jg
pushf
jge
enter
fisttps
cli
mov
aaa
test
mov
sub
in
addr16
iret
pushf
int
mov
sub
adc
xchg
pop
dec
sbb
mov
mov
lret
push
push
or
mov
enter
pop
nop
jge
mov
pop
lret
sub
mov
rorb
push
loop
imull
out
mov
lret
inc
inc
cwtl
enter
and
dec
icebp
xor
leave
sub
sbb
js
or
out
lds
add
pop
aad
je
faddl
gs
and
rolb
jle
push
decb
ret
leave
hlt
test
addb
std
dec
adc
pop
mul
sbb
adc
pop
adc
sbb
loope
push
pop
xor
sbb
push
ljmp
xor
daa
test
rorb
cs
push
repz
adc
jecxz
pop
jp
inc
das
push
jmp
jl
push
jne
dec
imul
es
pop
cmp
xchg
scas
sub
push
adc
mov
mov
rclb
or
icebp
push
or
clc
add
inc
mov
xchg
in
cltd
jae
loope
mov
mov
add
and
sub
or
adc
in
sub
dec
lods
js
mov
mull
pop
add
je
call
clc
in
push
jne
mov
or
test
cmc
add
and
cli
mov
es
aad
imul
jns
clc
clc
jl
pop
push
popa
pop
cmpb
or
sbbl
push
mov
enter
test
sarb
clc
stos
pop
jnp
rcrl
cmp
xor
insl
lods
addr16
xchg
cmp
popf
adc
cmc
xchg
enter
push
outsl
shr
fnsave
pushf
pop
add
push
push
inc
dec
mov
lret
dec
jge
jg
loopne
push
mov
lds
xor
or
push
xor
out
nop
or
push
jo
or
fsubrs
fwait
inc
out
repz
sarb
adc
inc
mov
fldl
flds
mov
inc
xor
xchg
iret
sbb
mull
pop
movsb
xchg
sarb
cmp
mov
mov
repnz
shl
ret
movsb
test
movntps
sti
dec
mov
pop
cmp
dec
mov
push
ja
mov
mov
sbb
sbbl
mov
loop
push
pop
cmc
in
mov
or
cli
adcb
mov
in
cmp
and
mov
sbb
xchg
hlt
ljmp
mov
adc
imul
dec
lods
pop
pop
add
cmpsl
dec
and
icebp
lcall
pop
sbb
pop
pushf
imul
xor
or
je
pop
sbb
notl
add
pop
fiaddl
js
xor
mov
movsb
inc
fwait
lret
popa
cmp
add
push
std
lcall
adc
xor
mov
mov
add
aas
mov
mov
cli
push
incl
and
xchg
mov
sbb
out
sbb
es
push
aam
stos
inc
adc
lock
stos
add
add
frstor
adc
fadds
add
or
push
adc
push
and
sahf
xlat
push
and
aaa
xor
jp
mov
sub
movb
lds
gs
dec
sbb
pusha
add
sub
dec
insb
test
jbe
push
mov
jle
or
pop
fdivrl
xchg
fmulp
cld
and
pop
mov
popa
lock
mov
loop
jb
mov
fwait
or
mov
cmp
lods
push
testb
or
inc
aas
lods
int
or
adc
cmp
gs
adc
insb
sbb
add
mov
sbb
jne
lods
pop
mov
pop
cmpsl
mov
sbb
clc
outsl
cmp
sub
sub
jnp
lods
ljmp
sbb
iret
fsubl
lods
inc
push
sbb
xchg
fdiv
sub
aam
sub
sbb
js
fs
adc
jge
mov
jecxz
pop
cli
or
mov
mov
hlt
inc
xchg
ss
stos
ja
jg
test
inc
lret
add
lcall
repnz
shlb
push
inc
dec
xchg
sub
mov
add
mov
add
xor
xchg
mov
pop
aas
mov
push
sahf
shrb
jge
cmc
xchg
push
inc
dec
scas
mov
push
retw
popf
mov
js
fs
push
insb
sub
push
xchg
mov
sahf
adc
push
popf
repnz
rcr
mov
add
aam
cs
cmp
pshufw
mov
mov
dec
xlat
xor
ds
test
sub
sub
mov
fidivrs
mov
sub
mov
inc
movsl
xchg
dec
xchg
mov
add
push
jp
stos
cmp
shlb
xor
inc
jnp
mov
xchg
adc
rcr
pop
mov
outsb
shrb
stos
arpl
std
in
aaa
dec
xor
inc
mov
jmp
and
outsl
frstor
pop
repz
lret
in
xchg
pop
and
sub
mov
stc
jmp
stc
dec
aaa
data16
mov
jbe
mov
mov
movsl
aas
dec
jmp
dec
or
mov
pop
clc
xor
adc
jnp
sbb
dec
jne
stos
arpl
sub
pop
pushf
sub
mov
movsl
aas
stos
xor
mov
jecxz
mov
or
stos
pop
sahf
sahf
or
pop
dec
mov
test
sti
and
mov
aas
int
pop
popa
jle
dec
inc
pop
movsl
push
xlat
into
push
fwait
jns
sti
cmp
sub
cmpsb
push
push
inc
sub
or
sahf
or
push
xor
push
popf
jb
adc
sub
jne
enter
xchg
hlt
jns
adc
push
loopne
mov
mov
cli
addr16
fimuls
sbb
lret
push
adc
xor
aaa
dec
stos
push
cmp
sbb
or
fdivs
lahf
fldenv
fimuls
repnz
idivb
aad
aas
mov
sbb
test
adc
je
push
imul
jle
add
aam
push
cli
lock
mov
cmp
pop
xor
sub
test
cld
out
test
pop
dec
jnp
mov
mov
out
mov
aas
daa
popf
or
les
lods
xor
push
ss
popf
pop
dec
jae
mov
pusha
imul
sbb
inc
inc
rcl
sbb
inc
enter
cmp
add
es
movsb
psubb
fldt
cmp
es
push
cmp
sub
in
mov
mov
pop
je
fldt
fdivrs
pop
lds
scas
push
xchg
dec
data16
inc
or
push
inc
pop
fsts
adc
dec
xchg
rclb
adc
mov
div
loopne
mov
dec
popf
cmp
mov
jno
mov
sub
arpl
orb
gs
pop
jge
push
insb
ljmp
mov
ret
stos
cmpsb
jbe
xchg
inc
insb
daa
xor
xchg
iret
jmp
jp
addr16
inc
and
sub
popa
jg
fisttpll
addr16
dec
cmp
dec
shlb
dec
aaa
shll
add
popf
fisubs
or
andb
or
sub
andb
sbb
adc
hlt
test
xor
mov
jp
and
std
push
ficomps
stos
test
in
mov
sub
in
xchg
cs
pop
ud0
lods
test
mov
mov
mov
out
dec
push
roll
cmp
jge
dec
mov
push
ror
jmp
cmp
adc
pop
rclb
pop
mov
inc
add
data16
loop
stc
or
dec
std
sub
out
cli
inc
mov
push
xchg
push
es
cmc
inc
jecxz
mov
iret
mov
loope
or
insl
cmc
and
add
sbb
jbe
roll
sub
insb
mov
lock
lea
int3
out
stos
into
add
mov
add
mov
stos
rorl
mov
xchg
fstpt
sub
xchg
out
adc
and
cmp
icebp
mov
inc
fldenv
js
stc
jmp
add
pop
add
cs
call
or
aam
mov
test
pusha
rcrl
push
popf
ret
jmp
cmpsl
dec
dec
inc
negb
pusha
addr16
xchg
adc
jmp
sbb
or
insb
addr16
and
das
push
jbe
fs
xchg
icebp
sbb
je
cmp
jl
jno
stc
push
iret
enter
jg
jb
movl
xchg
imul
sbb
mov
jle
js
mov
xor
xor
xorb
rorl
popa
mov
ja
stos
pop
pop
push
mov
popa
mov
adc
rolb
fcomi
inc
sub
out
movl
iret
xor
loope
push
xorb
and
and
sbb
sub
sub
clc
xchg
adc
pop
insl
jle
xor
in
mov
add
inc
stc
mov
jno
pop
and
mov
and
out
cwtl
or
movsb
jp
mov
fistpl
xchg
lds
pop
orb
mov
sbb
outsb
fildl
dec
push
stos
out
clc
add
enter
fidivs
mov
into
outsb
lock
fs
ss
jnp
and
xor
sahf
jg
mov
imul
jno
testb
push
or
je
add
sub
mov
jnp
ds
mov
aad
iret
pushf
mov
aad
add
or
adcl
in
dec
adc
sarb
push
mov
push
les
inc
jnp
sub
pop
xchg
mov
scas
das
jp
and
or
or
fnsave
lret
cmc
fdivr
scas
rol
sar
xor
jmp
push
roll
pop
pop
mov
push
in
cmp
mov
xchg
or
mov
shrl
adc
call
sub
inc
hlt
pop
xor
es
cmpl
adc
test
mov
lahf
xchg
adc
jge
add
pop
sub
arpl
mov
pop
mov
pop
mov
inc
jge
sub
mov
fstpl
push
aad
add
push
lret
sbb
divl
in
stos
inc
aam
imul
cli
movsl
jecxz
pop
dec
or
sub
je
test
arpl
sub
hlt
or
loope
push
jne
xor
pushf
xchg
ret
insl
xchg
fisubrs
pushf
sarl
fucomp
jl
andb
mov
mov
test
inc
int3
add
cmp
jp
dec
pop
divl
mov
test
lds
inc
mov
mov
sarb
mov
jbe
jl
in
lock
test
jnp
mov
sbb
das
sub
lock
add
insb
insl
dec
shll
adc
or
sbb
mov
shrb
mov
mov
fstpl
xchg
push
xor
sbb
in
mov
das
xor
add
insl
ss
fcmovbe
lret
pusha
pop
dec
push
das
xor
imul
inc
mov
cmpsb
mov
sbb
enter
jbe
out
adc
xchg
test
ds
inc
mov
or
sbb
cmpsb
lds
sahf
sbb
add
mov
fs
imul
inc
outsl
jecxz
sahf
xor
mov
scas
mov
mov
mov
push
sub
and
fwait
imulb
sub
and
ror
rclb
dec
icebp
lahf
insb
fisttpll
xor
sbb
pop
inc
mov
xlat
repz
mov
cld
inc
pop
pop
dec
daa
das
adc
mov
mov
call
fwait
iret
fdivrs
test
dec
sub
movsl
mov
mov
jp
jle
mov
push
pop
mov
arpl
in
fwait
mov
iret
orl
lods
add
jno
jl
lret
and
cmpb
mov
ss
jecxz
and
stos
outsl
sbb
ds
lahf
pushf
adc
mov
in
das
scas
xlat
jmp
loopne
lods
leave
add
mov
add
mov
push
fs
and
movsb
add
lods
cmp
and
mov
inc
xor
pop
idivb
xor
inc
xchg
insb
mov
insb
and
lret
cltd
add
outsb
jecxz
xchg
jp
repz
sub
or
sbb
in
lret
call
inc
fcmovnbe
je
mov
add
ret
or
mov
leave
popf
loop
popw
mov
mov
push
sub
xchg
call
xchg
bound
push
cmpsl
sub
pop
imul
mov
jo
in
push
push
aas
mov
sbb
insl
test
cmp
daa
repnz
mov
not
into
cld
cmp
shll
pop
rorb
fcomp
mov
int
popf
dec
std
jnp
shrl
sbb
add
scas
xchg
or
aas
pop
pop
sahf
pop
cli
fwait
jmp
xchg
push
cli
in
pop
add
lock
insl
repnz
pop
and
xor
push
shrb
jmp
adc
mov
inc
cli
nop
lcall
mov
sub
sbb
jns
ss
sbb
jl
shrb
mov
lret
cmpsb
push
add
lea
adc
xor
mov
jg
fxch
inc
add
popa
inc
js
scas
push
icebp
ret
popa
sub
dec
lds
fistpll
insl
push
sbb
adc
mov
mov
sarl
push
in
mov
inc
dec
sub
sub
add
test
dec
dec
out
ret
mov
add
adc
xor
or
push
adc
mov
lods
stos
adc
fcmove
and
jle
stos
inc
addb
loope
repnz
xor
lds
xchg
or
data16
or
dec
cmp
mov
sub
ljmp
sub
dec
sahf
mov
or
insl
inc
inc
jb
mov
fwait
sbb
es
aam
adc
sub
arpl
inc
push
stos
pop
and
out
in
dec
out
inc
rcll
jl
or
outsb
or
aas
sbb
dec
mov
and
xor
das
cli
repnz
es
mov
sbb
cmp
xchg
in
and
out
stos
es
push
push
mov
outsl
fcoml
pop
movsb
add
jmp
sahf
sub
stc
jno
mov
pop
out
inc
cmpsb
and
ret
mov
adc
aam
push
fcompl
fwait
inc
insl
bound
in
bound
imul
clc
mov
sbb
scas
inc
sub
scas
adc
movlps
sub
pop
xchg
sbb
jl
xchg
ffreep
in
arpl
je
sbb
cwtl
into
shl
mov
and
call
mov
push
in
adc
adc
jl
sub
pop
jg
outsl
aam
sbb
jg
js
push
mov
sub
adc
jp
xor
mov
and
xchg
add
push
pusha
sbb
push
repz
cmpsb
sub
adc
ljmp
cmc
mov
cmp
xor
adc
add
xchg
push
xor
push
pop
mov
loopne
xchg
stos
idivl
dec
add
call
xor
cltd
scas
ja
jno
push
ljmp
enter
pop
es
jp
aad
pop
jbe
push
dec
xchg
int3
sub
inc
pop
les
imul
cmc
movsb
mov
jb
pop
loopne
mov
and
xor
sarl
in
aad
es
dec
pusha
loope
jg
push
bound
adc
cmp
inc
and
std
pushf
sti
imul
mov
mov
aaa
push
mov
jae
push
sbb
out
insb
pop
icebp
sbb
mov
mov
in
ljmp
mov
ficomps
sub
or
cld
es
sbb
lret
cmp
sbb
push
cmp
fsubrs
lock
jnp
xchg
sbb
movsb
bound
jb
fmull
repnz
divb
add
aas
lcall
add
mov
icebp
mov
loopne
cmc
inc
jp
in
pop
xlat
movsb
out
cwtl
sub
push
ljmp
in
lds
add
orb
and
mov
inc
cmp
scas
in
mov
dec
inc
das
inc
sbb
add
jg
arpl
sub
add
lahf
add
bound
rclb
xchg
adc
aam
rcll
pop
and
push
shrb
sub
stc
repz
push
pop
push
out
rcr
xchg
mov
hlt
add
inc
or
add
inc
sub
js
mov
lds
xchg
jns
loopne
jmp
mov
outsb
js
into
addb
lock
mov
fmull
fisubs
ss
insb
push
aas
pop
fcmove
enter
lds
pop
xchg
shlb
roll
mov
fidivrl
addr16
loopne
jno
incl
dec
cmp
in
xchg
push
xchg
add
add
push
mov
pop
pusha
mov
dec
xchg
adcb
mov
pop
mov
mov
mov
je
movsl
lock
xchg
orb
subb
enter
pop
popa
incl
jb
ljmp
add
xchg
testl
mov
sbb
sbb
jbe
lock
push
dec
call
sbb
xor
jns
out
jne
mov
pop
std
es
mov
pop
mov
jge
mov
lcall
es
in
test
dec
mov
inc
and
icebp
in
lds
out
jmp
sub
xlat
add
or
iret
jo
mov
dec
mov
sub
sbb
pop
jecxz
and
xchg
les
aaa
mov
lock
popf
or
push
xchg
mov
das
and
jge
out
dec
cltd
dec
lret
push
cmp
sti
add
sbb
test
cmpsl
lcall
sub
fwait
ror
aad
adc
sbb
dec
aad
ficomps
ds
sbb
lahf
or
inc
dec
stos
sbb
xchg
movsb
xor
int3
cmp
cmp
adc
pushl
sbb
mov
jb
les
aaa
addl
jge
mov
mov
lds
or
dec
mov
and
ret
cmp
xor
mov
inc
in
repz
push
xor
mov
sbb
adc
out
cmp
scas
and
ds
out
inc
sub
aas
xchg
adc
ljmp
fs
notb
xor
je
push
test
sti
fldl
cmp
jns
test
push
sub
add
push
insl
stos
subl
and
popa
jl
sub
adc
push
cltd
inc
add
js
sub
ret
mov
xor
lods
sbb
sbb
mov
sbb
divl
outsl
adcb
and
div
ds
add
push
ds
pop
iret
test
pop
sub
cmpsb
gs
mov
mov
popf
sarl
xchg
daa
cmp
insb
mov
jnp
aaa
negl
cmpsb
fidivrs
ss
push
add
pop
lods
std
push
fwait
fs
mov
ficoml
nop
scas
cmpsl
jge
rorb
pusha
sahf
call
jno
adc
aaa
cmp
lods
pop
sarl
test
adc
jmp
add
add
or
mov
xabort
and
pop
popf
add
mov
outsl
mov
into
movsl
ficomps
or
or
out
pop
sub
fists
mov
or
inc
cmp
pop
jp
xor
cmpsb
test
mov
xchg
neg
xchg
sti
or
add
or
into
xor
pop
test
ljmp
std
adc
es
mov
mov
outsb
push
dec
lea
repz
xchg
pxor
repz
mov
fldcw
mov
mov
scas
mov
stc
shll
adc
jo
or
out
ds
rcl
pop
es
jg
sahf
push
sub
pop
pop
jnp
mov
hlt
xchg
addb
sti
daa
adc
pop
sbb
xchg
ret
out
xlat
xchg
cmpsb
xchg
jmp
mov
cmpl
sbb
push
pop
in
addl
in
pop
mov
popa
fadds
cmp
cmp
jae
cltd
xchg
sbb
fisubl
jecxz
ljmp
xchg
cmp
jbe
pusha
push
into
mov
loope
cwtl
bound
icebp
imul
fldenv
jae
loopne
cld
js
fcmovne
fsubl
addl
je
jge
sbbb
stc
nop
loop
mov
out
sti
pusha
cmpsb
cmp
out
lahf
sub
sbbl
mov
jmp
dec
or
clc
adc
mov
inc
int
push
or
jecxz
push
call
cld
cmp
call
repnz
icebp
mov
add
scas
outsl
dec
pushf
and
lret
inc
mov
rorl
js
push
fiaddl
sbb
mov
mov
mov
cmc
pop
xchg
iret
or
out
mov
xor
mov
ljmp
push
mov
icebp
scas
xchg
pushf
call
cmc
fcoms
or
xor
and
incl
mov
fcomp
rorl
iret
or
fists
push
mov
push
stc
insl
cltd
mov
sub
mov
mov
mov
jl
nop
fmulp
xor
idivb
aaa
push
cltd
mull
dec
dec
std
push
dec
adc
jg
mov
cmpsl
cmp
jno
xor
scas
lret
jl
sbb
dec
enter
push
data16
lods
dec
push
mov
je
mov
jno
mov
gs
mov
es
in
repz
mov
aam
adc
push
rorb
rolb
sbb
lcall
iret
mov
mov
jle
fimuls
inc
imul
cmp
aas
fisttpl
stos
mov
adc
mov
dec
nop
pop
add
imul
movb
sub
pop
and
lahf
jb
add
mov
cmp
shr
ljmp
pop
pop
pop
pop
cs
fmull
xor
sub
add
xchg
push
ja
pop
xchg
push
pushf
test
out
cmp
outsb
cmp
mov
adc
mov
lods
jecxz
lds
sahf
lcall
mov
or
xchg
xor
push
in
jmp
cmc
jae
mov
into
push
mov
cmp
jecxz
xchg
loopne
jne
shlb
dec
lds
pushf
imul
sbb
mov
sbbl
sti
inc
add
or
xor
ret
adc
test
push
jno
test
xchg
push
inc
test
test
scas
dec
test
shll
es
roll
add
jae
into
test
jb
adc
incl
dec
pop
mov
addr16
pop
pushf
aam
push
out
cwtl
adc
call
insl
sarb
shll
or
outsl
push
out
jmp
sbb
pop
aad
in
pop
int
mov
notb
mov
std
jmp
mov
ljmp
mov
jecxz
mov
rcrl
fnsave
lds
pop
fisubrs
cmp
xchg
mov
sbb
daa
mov
adc
or
push
or
in
or
lret
addr16
fildl
cmp
in
mov
adc
dec
enter
or
cmp
fdivs
jmp
icebp
jge
popf
cmp
popf
cs
and
pop
aas
cmp
lods
add
mov
inc
jno
cmp
sbb
jo
adc
jge
das
lds
mov
loop
push
dec
dec
adc
inc
pop
test
repnz
out
mov
dec
jmp
sub
mov
stos
dec
test
mov
push
dec
or
mov
les
fstpt
xchg
mov
xorl
pop
cmp
mov
adc
shll
std
stc
pop
and
inc
dec
jle
leave
mov
cs
add
je
iret
push
stos
aas
add
xchg
imul
mov
jge
xchg
add
mov
outsb
hlt
dec
imul
push
mov
aad
imul
dec
imul
movsl
addl
jge
scas
orl
pop
lods
roll
les
imul
out
xor
and
inc
dec
or
loop
outsb
repz
out
sahf
pop
decb
or
mov
or
xlat
lea
push
out
int
mov
lret
inc
dec
mov
in
jae
and
jg
movb
rcrb
ret
push
stos
pusha
call
out
xchg
jl
adc
nop
iret
mov
jno
loop
jge
sub
xchg
movsl
mov
xchg
or
dec
mov
pushf
cld
scas
pop
imul
icebp
fiadds
and
mov
xchg
movsl
inc
push
xor
inc
push
jmp
sub
dec
xor
in
lods
adc
loop
jne
in
ret
scas
shlb
loop
xchg
int
lods
inc
mov
fiadds
std
cmpsl
insb
add
push
jno
stc
das
punpcklbw
sub
roll
ret
je
int3
jnp
jg
rorb
add
pop
clc
int
pushl
aas
in
xchg
fadds
imul
adc
push
out
and
jp
test
aaa
pop
sbb
out
addr16
push
mov
add
jns,pn
icebp
jg
sti
dec
loopne
lret
jl
mov
outsl
pop
and
ds
push
sbb
es
daa
sahf
adc
inc
hlt
es
sub
inc
fs
jg
dec
jae
in
rcl
mov
pop
movsb
mov
mov
push
and
ds
jg
inc
incl
fs
cmp
scas
loop
je
icebp
frstor
jae
cli
sbb
mov
fisubrl
int3
test
jno
jbe
int3
mov
aam
imul
add
cld
adc
lret
or
dec
in
mov
and
mov
jge
scas
lods
popf
adc
test
adc
movsl
lret
scas
inc
add
adc
dec
jbe
fimuls
pop
ret
jl
or
sbb
mov
jecxz
add
repz
sbb
xchg
xchg
add
pop
sub
xchg
fidivrs
jnp
xor
pushw
scas
xor
cld
ss
push
sub
pushf
data16
out
mov
movsb
loope
xor
sub
or
std
dec
hlt
pop
cmc
sbb
dec
lcall
dec
jl
jno
pop
pop
jns
push
cmp
mov
jb
add
push
push
jge
cmp
jo
loop
jae
dec
pop
and
fwait
mov
test
data16
lods
std
xor
cwtl
jmp
inc
jg
push
enter
mov
dec
outsb
cmpsb
and
sub
call
stos
aam
xchg
pop
dec
and
btc
hlt
cmp
cmp
mov
icebp
push
or
lahf
sbb
imull
ret
jecxz
push
int3
pop
cmc
aaa
pushf
in
push
inc
sbb
dec
xchg
inc
or
in
jle
fmuls
sub
lret
mov
push
mov
movsl
dec
jno
dec
adc
mov
je
inc
cmc
jecxz
mov
mov
inc
sub
arpl
femms
inc
adc
sbb
aas
jns
pop
sbb
xchg
or
cmpsl
imul
mov
push
cmp
inc
nop
xlat
scas
cmc
in
dec
ds
mov
cmc
or
outsb
daa
sarl
cmp
hlt
jle
outsb
lea
adc
pushw
lret
cs
xchg
cld
cmp
nop
mov
pop
loop
test
push
imul
outsl
js
gs
lods
xlat
inc
mov
adc
stos
enter
adc
cmp
sbb
repz
push
lea
adc
inc
arpl
sub
mov
inc
jne
adc
fdivrs
lock
and
leave
xchg
dec
mov
add
dec
or
js
push
scas
cmp
xchg
fdivl
fs
scas
sbb
out
shlb
add
je
dec
cmp
adc
outsb
sub
jo
ds
mov
insb
mov
das
into
bound
mov
jl
incl
dec
es
jle
sub
or
cmp
ret
flds
lods
lret
mov
ja
cmpl
dec
roll
push
arpl
stos
sub
maskmovq
mull
jns
loope
push
ds
addr16
or
push
ja
xchg
js
xchg
xchg
cltd
inc
push
dec
sub
jl
jl
loopne
jecxz
jmp
adc
jl
push
mov
pop
push
stc
mov
dec
rol
pop
cs
xchg
pop
loopne
push
mov
andl
in
inc
int
push
mov
lret
mov
dec
pop
jmp
div
push
sbb
insb
or
js
mov
push
jmp
popf
sub
xchg
fs
push
out
jp
pop
outsl
stos
and
fsts
or
or
dec
xchg
ja
jbe
cs
cmp
xchg
pusha
pop
dec
dec
sbb
jae
js
mov
mov
mov
dec
dec
pop
jb
jne
es
and
icebp
call
insl
mov
enter
jg
mov
push
jp
mov
xchg
call
popa
jnp
jno
repz
movsl
adc
inc
mov
lods
mov
cmp
adc
pop
or
lea
in
mov
xchg
shll
loop
bound
xor
lahf
cmpsl
or
addr16
dec
dec
jo
stos
push
mov
xlat
cmp
test
add
xor
nop
fsubs
inc
pop
mov
add
mov
cltd
aad
imul
cmc
adc
mov
fsubl
inc
cwtl
or
int3
or
sbb
inc
lea
sub
sbb
jmp
or
push
out
loope
lret
jns
xchg
pop
test
mov
pop
enter
out
test
insl
pop
dec
cmp
movsl
test
sarl
jl
lock
imull
sub
mov
xorb
xchg
adc
mov
adc
pop
or
or
adc
rcrl
and
clc
sub
sbb
sti
xor
mov
jbe
fisttpll
xor
lahf
mov
es
jl
sub
jp
dec
out
add
dec
jns
les
mov
test
pop
aam
inc
jecxz
stos
int
push
fsubs
mov
pmaddwd
jno
jb
cmc
add
aaa
pop
cmp
or
or
dec
repnz
test
cs
rcr
pop
jp
pushf
sub
xor
add
das
xor
in
std
rcrb
cmpsl
addb
pop
mov
mov
push
out
pop
jne
adcb
lea
mov
aad
imul
flds
xor
loopne
or
cmc
popf
dec
xor
dec
jns
cmp
in
xchg
movsl
pop
mov
icebp
pop
stos
jg
cltd
mov
mov
cmpsb
lcall
push
jge
xchg
sbb
dec
dec
lods
mov
shlb
test
ljmp
in
dec
seta
fnstsw
push
test
std
cmp
lcall
pop
or
add
fiaddl
aad
xchg
mov
jmp
xor
xor
xlat
sahf
xor
push
jp
repnz
decl
push
scas
inc
jno
aas
fdivrl
pop
decl
fucomp
popa
mov
cmp
punpcklbw
adc
lahf
mov
aad
cmp
nop
sbb
outsl
and
hlt
add
outsb
cmp
xchg
cmp
std
sbb
sub
es
lods
pop
xchg
xchg
or
and
jmp
dec
add
ffreep
push
xor
jo
push
test
shlb
and
sahf
pop
bswap
sahf
add
pop
frstor
mov
ss
add
repnz
push
xchg
inc
aaa
pop
cmp
adc
sbb
xlat
in
inc
cmpl
nop
test
cs
or
test
fildll
cmpsb
xchg
xor
fsub
push
out
ljmp
aad
sub
cmp
and
sbb
out
pop
and
aas
add
ret
sarl
stos
data16
cltd
pop
outsl
inc
inc
mov
mov
loop
rorb
push
jg
fwait
shrb
sub
popl
push
mov
scas
ret
push
shl
cmp
xchg
sahf
sbb
cli
add
sbb
pop
aad
bound
jl
or
mov
xchg
ficoms
pushf
lcall
rcr
ds
ret
and
rol
cwtl
arpl
pop
insl
in
arpl
sahf
das
sbb
push
add
pushf
clc
scas
mov
daa
fadd
xchg
add
push
cmp
jns
mov
or
pop
or
pusha
ret
sub
in
pop
inc
push
ret
jp
in
adc
adc
xorl
jge
push
inc
pop
scas
adc
cmpsl
ja
imul
data16
or
loop
cmp
cli
xlat
dec
ja
or
aam
xor
nop
jge
push
lahf
in
inc
out
lock
fst
xchg
pop
outsb
fcomps
ja
fdivr
int3
ret
add
inc
call
lahf
ljmp
movsb
push
jge
inc
xor
dec
dec
add
in
adc
in
push
les
and
lds
popf
push
mov
inc
fsubs
inc
mov
or
dec
test
xchg
xor
mov
lret
and
push
add
mov
loope
adcb
into
dec
cmp
cs
adc
fstl
std
mov
and
cmpsl
icebp
pusha
outsb
xchg
or
mov
inc
push
pop
and
sub
pushf
mov
jge
xchg
lret
prefetch
lods
test
pop
mov
ss
arpl
je
xor
jns
cmp
lcall
sbb
scas
arpl
dec
sub
cmp
cmp
sbb
test
vpsrlw
pushf
xchg
mov
xchg
popf
push
add
test
cmp
mov
outsb
in
mov
rcll
insl
mov
pop
outsb
inc
jmp
sti
pop
stc
and
arpl
in
sbb
bound
popa
rcl
nop
imul
movsb
sbb
xchg
lds
fnsave
mov
push
mov
nop
adc
inc
adc
pop
cmc
mov
data16
daa
mov
inc
fucompp
cmpsl
repz
fmuls
clc
je
adc
movsb
mov
jns
jle
repz
jmp
pop
add
jbe
lds
mov
sub
mov
test
adc
jno
hlt
cmpsb
jnp
xor
jns
sbb
into
lods
xchg
dec
int
mov
mov
aaa
or
dec
dec
loope,pt
pop
fwait
cmc
xchg
sub
rcrb
pop
pop
outsl
jge
fcoml
xor
out
mov
or
shlb
jmp
mov
lods
adc
addb
dec
mov
mov
jo
and
cs
mov
aas
repnz
push
jmp
clc
pop
rclb
lods
dec
call
jbe
xor
out
dec
int3
lock
sbb
xchg
push
jecxz
mov
fstl
xchg
push
pop
lcall
dec
idivb
out
fisttpl
movsb
push
jbe
lds
jne
or
dec
dec
gs
dec
or
scas
int3
dec
movsl
fstps
mov
cmpl
lret
inc
pop
call
mov
imul
cmpsb
mov
jns
str
ja
out
jno
aad
shrb
insb
repz
push
shll
adc
sbb
test
mov
sbb
pop
sub
mov
jns
outsl
es
mov
test
inc
stos
sub
pop
in
jg
ss
push
sahf
repz
insb
lcall
into
sbb
cmp
cltd
dec
xchg
push
or
loope
fidivs
dec
adc
ja
cmc
mov
fs
fisubs
rcrb
jmp
mov
mov
push
inc
xchg
popa
fdivl
mov
sarb
sub
out
sub
sub
cltd
clc
fcomps
lret
pop
out
push
cli
and
bound
cwtl
inc
inc
in
pop
lock
rorl
fimull
sub
or
add
mov
cmp
or
and
in
push
fsubrl
dec
or
push
in
or
js
add
ds
mov
andl
fxch
jmp
inc
push
dec
imul
sar
pop
decl
push
in
test
fwait
sarl
inc
lret
dec
in
aad
roll
dec
sti
in
mov
mov
mov
inc
in
mov
inc
xchg
jno
js
jbe
adc
cmp
pcmpeqd
mov
mov
jp
insl
lds
mov
xchg
ror
scas
lods
movsbl
mov
push
in
mov
inc
shl
mov
xchg
cmovl
or
movsl
fbstp
popf
loopne
stos
cs
fistpll
popf
jle
or
call
movsl
lahf
std
mov
mov
repnz
inc
pop
or
sahf
lret
pop
ret
xor
loope
inc
mov
push
mov
sbb
testl
das
hlt
cmc
mov
pusha
popa
adc
out
jne
xor
inc
xlat
lahf
pop
jl
mov
fldt
ds
arpl
test
dec
jbe
enter
jnp
stc
mov
mov
fnsave
loopne
insb
and
ljmp
mov
pop
xchg
cmp
push
ficompl
cs
lret
cld
and
stos
stc
inc
adc
mov
jmp
imul
outsb
repz
xlat
mov
rorl
jo
dec
push
xor
push
add
pop
pop
xor
or
loopne
es
add
dec
sbb
shl
leave
divl
mov
pop
je
push
pop
and
std
or
arpl
jle
insl
lea
sbb
mov
aaa
push
mov
pop
or
outsl
call
mov
inc
jbe
scas
sti
movsb
adc
lea
mov
xor
xchg
jae
je
sbb
inc
and
outsb
lcall
cmp
pop
sub
divl
jno
les
cs
lods
pop
fsts
jle
fsubl
dec
in
mov
pop
mov
pop
in
jg
loop
mov
sti
mov
xlat
loop
pop
pop
jbe
js
gs
and
shl
mov
push
and
lcall
xchg
test
or
lcall
neg
dec
sub
lret
cmp
push
mov
jb
pop
or
inc
xchg
addr16
xchg
mov
sub
ljmp
mov
push
es
pushf
push
jns
test
imul
mov
or
push
call
pop
sub
les
xchg
lods
fmull
cmp
push
xchg
ss
xchg
jne
shlb
lds
bound
cmpsb
jb
sub
ret
insl
mov
in
jb
or
sbbl
bound
and
and
and
aas
inc
and
lods
sub
popa
cli
pop
fsub
xchg
inc
mov
push
mov
xlat
xchg
dec
xor
cmpsb
repz
imul
icebp
adc
inc
cmpsb
fisubrs
mov
or
pop
nop
ljmp
outsb
ret
test
idivb
push
pushf
fidivs
cmp
inc
and
cmp
push
sub
add
outsb
stos
test
sub
add
decl
dec
out
ljmp
jne
push
xor
mov
fwait
xor
adc
push
pop
and
or
push
out
mov
pop
mov
mov
scas
push
mov
fcoms
addb
and
dec
dec
dec
adc
xchg
jae
or
push
mov
push
scas
arpl
cs
sub
xchg
outsl
incb
push
sbb
out
or
jae
int3
pop
xchg
xor
sbb
cwtl
mov
mov
psrlw
push
inc
ret
jo
outsl
stos
aad
in
ror
mov
in
mov
jne
rolb
mov
cmp
loopne
push
andb
and
fiaddl
jno
adcl
out
outsb
shll
xor
div
movsb
leave
push
jmp
sbb
sti
rcll
jp
out
lods
and
push
jb
imul
call
clc
lret
or
enter
pop
mov
js
pop
shrl
call
lds
sbb
mov
fnsave
popf
rorl
pop
fimuls
jno
jmp
lock
and
leave
sbb
mov
fldt
jne
and
mov
jmp
inc
movl
fstps
inc
sbb
jbe
loopne
sbb
mov
xlat
hlt
push
or
leave
das
fisubs
or
dec
popa
scas
ss
lds
xchg
cmp
jecxz
mov
pop
xchg
leave
and
lock
leave
push
xchg
add
punpckhwd
int3
movb
mov
lock
icebp
jge
aaa
mov
rcl
fcomps
popf
std
cmp
aas
mov
inc
cmp
push
cmp
push
push
inc
test
add
dec
fidivrl
xchg
jb
mov
stc
ss
notb
push
mov
and
adc
mov
push
ds
fstpl
jne
jecxz
ret
and
outsl
fstl
jnp
or
gs
xlat
push
dec
cmp
adc
or
mov
pmuludq
cmp
inc
lret
stc
loopne
ret
sub
cld
clc
fimuls
dec
xor
mov
push
sub
xchg
add
push
xchg
xchg
pushf
int
cld
push
sub
xor
leave
jbe
add
ljmp
dec
repnz
push
mov
adc
mov
or
dec
outsl
adc
mov
sub
outsl
dec
or
sub
addr16
push
pusha
pop
or
ret
je
in
mov
insl
adc
add
je
add
insl
dec
sahf
es
test
pop
loope
cld
popf
cmp
lret
fistpll
outsl
xor
push
sbb
xchg
repnz
cmpsb
adc
mov
jo
cmp
mov
mov
cmp
mov
movsl
sbb
inc
mov
mov
cld
add
mov
movsl
sbb
dec
mov
jl
inc
jae
out
jne
pop
sub
push
adc
inc
lahf
fisttpll
subl
int3
and
jno
adc
bound
popf
rorb
out
inc
jne
adc
fisttps
mov
arpl
fldl
adc
ret
sub
cltd
in
jmp
xrelease
out
insl
cmp
ret
xchg
into
push
add
jo
addr16
inc
and
dec
aas
enter
jb
into
add
and
sbb
leave
aam
inc
loopne
das
out
loope
es
mov
je
mov
dec
inc
cli
xor
xchg
fisubl
cmp
rorb
cld
pop
push
dec
and
outsb
cs
or
pop
mov
dec
popa
hlt
jno
or
and
pop
push
xchg
mov
ds
mov
lret
test
sub
cmp
mov
xchg
in
xchg
mov
cmpsb
sarl
stos
pop
or
movsl
out
data16
pop
sbb
lds
shl
imul
hlt
sbb
fcomps
dec
and
aad
pop
jl
dec
fidivl
inc
ss
pop
clc
push
mov
loopne
and
sahf
imul
adc
jbe
push
xchg
jl
xor
adc
push
jae
inc
mov
cmp
inc
les
jg
iret
push
or
out
loope
mov
or
cmp
ljmp
xor
inc
lret
xchg
pop
dec
inc
jmp
lods
fdivp
mov
stos
fwait
inc
in
cmpl
xchg
xchg
subl
inc
push
cmpsl
adc
cld
and
jp
shlb
dec
xchg
packssdw
pop
fucomi
test
