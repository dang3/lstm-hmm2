sbb
add
mov
pushf
mov
add
sbb
mov
jmp
out
fisubl
js
imull
mov
xor
outsb
pop
dec
fmull
mov
mov
je
test
fstpl
ds
bound
jp
or
jp
sar
sbb
loopne
push
xchg
push
into
in
mov
je
dec
pusha
inc
mov
jecxz
sub
dec
pop
add
daa
leave
neg
jge
xlat
jg
pop
leave
notl
adc
pop
pop
negl
addr16
cs
insl
add
imul
iret
push
jle
into
dec
push
push
popa
mov
ret
loope
mov
scas
pop
and
loopne
mov
jbe
cli
sub
decl
aaa
jle
jmp
sbb
int3
insb
jns
out
call
sbb
cmp
out
ja
daa
add
aam
stos
pop
inc
loope
mov
mov
addr16
and
lods
iret
loopne
and
mov
cli
adc
add
cltd
std
mov
jae
fcomi
jecxz
and
mov
mull
bound
out
ljmp
mov
and
pop
cmpsb
jno
lock
push
xor
dec
cli
cld
sbb
aas
movsl
js
mov
les
xor
jge
pop
xchg
jmp
pop
xchg
lahf
xchg
xchg
loopw
lcall
sahf
sub
mov
int
repz
pop
mov
divb
icebp
xor
sub
and
lret
cwtl
fwait
push
xchg
sarb
testl
dec
push
fimuls
int3
adc
out
sub
sbb
jns
mov
xor
lock
push
mov
pop
push
pop
sbb
jecxz
cmp
shll
sub
xchg
and
into
fstpl
imul
mov
mov
and
lahf
mov
and
pop
pop
stc
ljmp
out
leave
mov
and
mov
inc
scas
sbb
sub
xor
pop
test
mov
and
fnstenv
mov
xchg
lcall
xor
ficomps
sub
xchg
and
push
faddl
pop
es
push
fbstp
xchg
inc
push
testb
mov
xor
icebp
mov
jno
sub
aad
add
fisubs
pop
add
sub
loope
sahf
cmpsl
and
mov
mov
jne
sub
cld
push
fiaddl
aas
lods
fwait
lret
jg
jecxz
jo
sub
lds
enter
add
outsl
push
lds
cs
into
adc
jb
outsl
lcall
mov
sub
mov
leave
add
les
mov
dec
jo
mov
leave
testb
or
sbb
mov
xor
loope
push
ret
out
cli
xor
popa
lds
xchg
mov
popf
sbb
out
cld
dec
repz
mov
pop
repz
pop
mov
dec
jno
testb
lret
jne
cmp
sahf
cmp
dec
cmp
xlat
dec
inc
inc
push
sbb
xor
push
js
add
xor
mov
pusha
iret
rcrb
dec
inc
and
mov
or
loop
ja
push
mov
call
push
cltd
dec
test
push
leave
imulb
mov
xchg
sub
sub
sbb
sti
bound
mov
addr16
lods
adc
mov
std
or
add
cs
cmc
push
xor
mov
mov
xor
and
imul
cmc
pop
mov
push
inc
add
mov
sbb
popa
nop
inc
rcrb
jmp
inc
cmpsb
dec
es
cmp
es
repnz
stos
sub
icebp
fidivrs
ret
pop
ds
loope
sbb
sti
mov
cmp
loope
or
xlat
push
dec
clc
ds
add
mov
mov
jbe
mov
cmp
insl
inc
cli
pop
aad
iret
dec
bound
in
jmp
pop
fcmovb
sbb
jecxz
push
pop
sub
inc
out
inc
cmp
fucomi
rolb
repnz
inc
in
incb
aas
enter
repz
cmpsl
adc
cld
fndisi(8087
orl
pop
jl
into
cli
mov
ret
jb
out
inc
clc
pop
in
mov
cmc
scas
neg
fdivs
subb
call
cwtl
dec
jae
adc
xor
mov
pop
sub
pop
push
jo
mov
pop
push
mov
mov
aaa
insb
sbb
push
ss
test
addr16
or
in
or
fmuls
mov
mov
mov
ja
addb
clc
inc
in
jl
push
push
iret
scas
shrb
xchg
imul
in
sub
das
pop
mov
incb
sti
jg
ffree
loope
std
xor
mov
inc
inc
adc
adc
push
adc
pop
add
scas
out
incl
lret
into
outsl
mov
pop
push
std
not
fcompl
ljmp
mov
cmp
mov
std
mov
jmp
fnstenv
loope
cmpsb
sbbl
push
xchg
lds
fiaddl
add
pusha
dec
jns
test
int
cmp
sti
xchg
cwtl
lret
imul
cmpsl
scas
mov
mov
dec
sbb
mov
xlat
or
fisttpl
dec
pop
scas
in
sbb
call
fs
mov
xor
shrl
fs
ret
add
cltd
hlt
cmp
fdivr
and
mov
fsubrp
push
inc
lcall
jns
pop
sbb
shl
mov
pushf
sub
jno
inc
fnstenv
xlat
jle
inc
sbb
jbe
cmpl
in
call
push
mov
incb
jne
ja
push
xchg
fwait
imul
cmpsl
mov
xchg
sub
inc
push
es
repnz
sti
loop
es
fnstsw
add
xchg
cmpsl
inc
and
sbb
lea
jb
jo
add
outsl
add
xchg
scas
sbbl
in
mov
xchg
je
cmp
inc
fcomi
push
sub
rcrb
in
mov
and
imul
les
and
call
jecxz
xchg
sub
loop
ret
xchg
jb
ret
xchg
adc
mov
outsb
sbb
or
loope
jmp
mov
je
cs
sub
std
jnp
adc
push
cmp
add
cmp
daa
xchg
aaa
mov
xchg
sahf
das
aam
lret
jnp
stos
mov
js
loopne
popf
sbb
pop
std
movsb
loopne
xchg
jecxz
push
addb
mov
mov
lods
or
aam
lds
push
mov
andb
ret
dec
xor
add
add
cmp
jecxz
sbb
sbb
add
cltd
sbb
xor
dec
ret
inc
lcall
adc
sahf
push
sbb
jmp
add
loope
icebp
pop
pop
cmp
mov
es
jecxz
adcb
test
mov
cltd
mov
xchg
das
ja
aad
in
gs
push
jns
add
daa
push
lea
xor
mov
or
mov
cld
inc
imul
fs
pop
ds
bound
add
and
pushf
aaa
lcall
stos
sarl
call
daa
push
sub
mov
mov
fistl
rorb
jbe
adc
cmc
scas
imul
push
ret
fsub
into
cmp
mov
jne
imul
pop
mov
xchg
cwtl
adc
inc
push
add
pop
add
mov
rclb
adc
jge
dec
stos
pushf
push
scas
sub
xchg
imulb
les
xor
js
cmp
int3
xchg
push
sbb
ds
adc
loopne
fwait
xor
push
ds
std
mov
insb
push
pop
insl
cmc
mov
insb
ret
xor
int3
incb
lcall
cwtl
ljmp
jg
inc
add
push
scas
mov
dec
mov
xchg
mov
out
fisubs
xchg
rcrl
push
sbb
les
int3
mov
iret
jle
mov
pusha
es
jecxz
push
shll
dec
std
cld
jno
mov
xor
sbb
jno
into
fsubr
lock
fldenv
jnp
cltd
nop
mov
aas
add
out
and
dec
adc
in
int
adc
enter
mov
loopne
jl
loop
fidivrs
iret
rcr
or
repz
sbb
adc
pop
pop
or
scas
and
cmp
jg
pop
jo
add
arpl
cmp
ret
das
jae
sbb
fwait
in
in
push
les
fcomps
jl
aam
insb
cltd
push
pushf
adc
or
add
xchg
aam
in
pop
jns
or
icebp
and
icebp
lret
push
cwtl
fstpt
adc
insb
lock
outsl
aas
push
jecxz
ljmp
xor
push
pop
lahf
sub
scas
insl
cmp
ja
mov
shl
or
sti
inc
jb
ja
pop
cmpsb
and
and
aas
imul
repz
push
in
xor
and
push
xor
ljmp
scas
sub
inc
das
fisttps
push
and
int
and
leave
adc
cmp
popa
rcll
xor
pusha
add
mov
add
aad
addr16
in
mov
pusha
inc
push
push
daa
rcrl
pusha
jg
xor
cmp
sub
adc
xor
pop
pop
test
in
inc
xor
ret
lds
loop
out
jnp
jne
sbb
pop
and
push
pop
xchg
in
imul
mov
sub
and
subb
mov
inc
inc
inc
roll
pop
adc
add
lock
or
sahf
push
push
add
cmp
jmp
out
sbb
jnp
jno
jno
xor
push
adc
ljmp
cmpl
in
jne
pop
scas
push
xchg
cli
xchg
cli
in
in
insl
stos
mov
call
jo
int
mov
ffree
outsb
lock
jne
adc
bound
mov
hlt
and
loop
addr16
pop
je
or
push
dec
cmpsb
and
dec
cmpsb
cld
insl
and
inc
ret
in
cs
mov
and
movb
repnz
stos
lret
out
or
jnp
sarb
and
addb
push
fs
jae
divl
push
test
push
sub
xchg
shrb
adcb
mov
push
dec
sbb
lahf
inc
int
adc
push
jge
pop
mov
push
rol
adc
add
fldcw
addb
mov
es
cmp
pop
popf
mov
mov
mov
xor
mov
test
daa
and
dec
dec
stos
add
shlb
adcl
aaa
fistpl
push
mov
push
inc
dec
jmp
outsb
mov
mov
push
das
lret
xlat
repnz
pop
cmp
cli
fstpt
fistpl
cmpsb
jno
sub
push
jne
test
pop
mov
mov
dec
lock
xor
mov
fcmovne
scas
xchg
and
jecxz
dec
das
stc
push
xchg
push
ljmp
lds
jl
jns
or
add
jle
ljmp
sbb
xor
mov
jnp
icebp
ficoml
sbb
adc
cltd
fnsave
pop
mov
loopne
inc
test
inc
mov
fisttpll
jge
jg
pop
test
or
mov
jmp
and
pop
pop
jmp
push
cs
jno
sub
fnstcw
dec
jecxz
scas
nop
sub
sahf
or
and
jle
adc
mov
repz
lea
lret
test
xor
leave
test
popf
into
leave
les
testl
pop
and
dec
and
mov
loope
xor
pop
pop
cmc
jb
insl
push
pop
lahf
in
sub
pusha
inc
enter
jmp
mov
pop
fs
adc
mov
sub
and
je
sub
fistpl
sbbb
adc
imul
jb
mov
shrb
adc
aad
test
pop
xchg
arpl
mov
pop
jnp
stos
pop
mov
xor
or
mov
dec
test
outsb
repz
or
jle
pop
sub
lea
jo
add
rcrl
cmp
lea
shrl
jecxz
jne
or
jb
scas
xor
cmpsl
jecxz
mov
rcr
add
push
jecxz
pop
pop
scas
jns
sub
mov
mov
and
adc
insb
add
js
jmp
adc
or
sbb
sbb
sbb
cmp
add
les
aaa
cmp
shrb
lods
sub
cltd
fs
repz
ret
mov
pop
lea
or
dec
scas
jno
and
lea
fsubr
cmp
int
adc
sub
mov
arpl
add
jbe
loope
adc
adc
fsubl
cmpsl
fisubs
mov
sbb
adc
xchg
nop
sbb
jle
push
xor
and
leave
div
sbb
stc
and
cwtl
push
andb
sbb
into
je
stc
loop
add
cmp
and
cmp
out
nop
popa
iret
cld
popa
addb
jo
mov
push
rcll
jge
in
push
not
shll
leave
xchg
push
and
push
cmp
adc
stc
push
leave
dec
jno
mov
jo
jbe
fsubrl
xor
fdivrs
sti
inc
bnd
pop
dec
clc
xor
dec
inc
fstpt
rorl
sbb
sti
or
je
adc
cmpl
xchg
cltd
cmp
mov
or
mov
fisttpll
jbe
jae
or
notl
cld
mov
cmp
repnz
xorb
mov
pop
adc
pop
inc
sub
push
ficoms
fwait
cmp
pop
mov
push
pop
enter
sti
sbb
sbb
add
sub
push
shl
inc
cs
jnp
or
mov
inc
mov
push
arpl
jp
out
fstpt
cmp
ret
xchg
lods
adc
shrb
in
pop
sub
xor
jno
out
push
jnp
aaa
stc
xor
push
xchg
mov
or
fldt
or
je
ret
jl
int
ljmp
aad
mov
mov
and
leave
orb
inc
movsb
addl
stos
pop
push
fistps
std
jnp
in
aad
repnz
mov
sbb
jns
outsl
and
loope
adc
pop
ds
mov
clc
mov
mov
adc
push
xchg
gs
outsb
mov
sbb
mov
or
gs
mov
dec
scas
xchg
push
aaa
pusha
xor
jbe
sub
jbe
jae
incl
xor
call
mov
jb
mov
out
and
pusha
loopne
out
es
sbbb
lahf
daa
push
imul
std
testl
call
pop
imul
jp
push
mov
repz
and
es
in
dec
movsb
leave
mov
inc
and
sub
and
push
rorb
loopne
push
jecxz
jbe
pop
int
std
inc
mov
stos
dec
adcb
sahf
push
push
jecxz
testb
stos
jb
inc
lock
jno
in
imul
pop
push
loope
jg
jnp
aas
jns
jmp
outsl
adc
push
mov
dec
movsl
xor
add
or
dec
mov
filds
mov
jno
stc
and
jns
aas
jle
sub
shlb
lret
popf
jnp
in
push
push
into
or
dec
imulb
jnp
jbe
sbb
adc
imul
addr16
imul
mov
adc
aas
mov
mov
push
pushf
ljmp
mov
fmull
cwtl
leave
repz
xchg
sub
fistpll
cli
pop
xchg
ss
jo
icebp
in
inc
sbb
lcall
push
aas
fstpl
mov
inc
sub
dec
cmpsl
scas
lret
data16
arpl
jmp
lahf
xchg
pop
lds
sub
into
xchg
int
mov
repz
adc
dec
add
sarb
out
out
push
jecxz
sub
jae
pop
cld
daa
leave
xor
int3
adc
jmp
out
out
movl
mov
fucomp
push
sbb
xor
and
sbb
cmp
mov
xor
mov
in
inc
xchg
pop
dec
stos
mov
aad
sbb
aad
or
dec
add
sbb
in
mov
js
sub
xlat
fiadds
das
popf
inc
daa
loop
adc
sbb
sbb
mov
sbb
sub
mov
pop
out
pop
lcall
mov
add
dec
cmpsl
sub
jae
pop
or
cli
rclb
jno
mov
ss
mov
push
and
mov
jne
mov
xchg
mov
mov
mov
outsl
ljmp
jl
les
test
lods
das
jb
pop
popa
push
insb
jo
test
imul
push
mov
adc
jg
xor
inc
mov
jmp
pop
or
jg
adc
out
into
stc
out
pop
xlat
pop
dec
and
cmp
loop
jecxz
lea
pop
pop
push
popf
cli
mov
scas
mov
adc
xchg
bound
stos
pop
pop
sub
into
or
sbb
fstps
pop
addr16
jp
addr16
daa
ss
add
rcr
mov
stos
daa
iret
outsl
xchg
in
idivb
mov
stc
jbe
scas
xlat
out
cmp
and
mov
bound
ficomps
aad
xor
adc
leave
repz
sbb
add
adc
cwtl
fdivl
xchg
cmc
or
xchg
dec
add
roll
mov
addr16
test
stos
sbb
mov
cmp
push
mov
push
in
mull
adc
call
sbb
xor
push
push
movsl
mov
dec
cli
popa
cmpsb
adc
jle
adc
ret
loop
and
xor
outsb
inc
mov
popf
pop
add
sbbb
sbb
inc
daa
mov
xchg
inc
enter
and
jo
or
divl
sti
orb
das
ficoms
clc
shll
dec
mov
jle
push
inc
xchg
dec
jecxz
jnp
jbe
mov
enter
sbb
adc
jno
push
pop
jmp
dec
dec
add
pop
xor
mov
ja
test
sub
div
mov
lods
ret
jno
lods
or
fistpll
insl
out
adc
inc
mov
jge
adc
and
lret
mov
jbe
rcrl
and
cld
paddb
pop
dec
pop
cmp
ret
gs
cld
jmp
xchg
dec
arpl
add
imull
rclb
mov
xchg
jecxz
pop
pop
pushf
lock
add
or
pop
ds
out
push
pop
inc
imul
lods
jae
cmp
in
add
sbb
jo
fsub
xlat
movsl
ficoml
mov
sbb
pusha
test
cmova
mov
add
dec
and
xor
test
cmp
popa
inc
jmp
cmp
aad
test
jp
movsl
xor
pop
lock
icebp
xor
arpl
mov
push
mov
cmc
and
pushf
add
imul
push
ljmp
mov
ss
sub
ja,pn
imulb
ret
jge
ja
mov
shlb
cltd
gs
cltd
mov
add
jbe
sub
aad
mov
lahf
bound
pop
jmp
stos
sbb
cmpsl
outsb
pop
jns
lock
mov
pop
loopne
lea
or
push
mov
sarl
xchg
inc
inc
clc
ljmp
dec
push
in
repnz
rclb
leave
and
adc
imul
push
mov
xchg
jmp
jp
mov
das
adc
loopne
xchg
xchg
add
aaa
and
insl
adc
rcrb
add
xlat
cmpsl
xchg
dec
lds
cs
movsb
dec
loope
jo
ja
pop
mov
aam
sub
dec
mov
add
pop
in
adc
push
jae
sub
mov
scas
in
jle
add
and
jl
lods
cwtl
rol
sbb
hlt
cmp
adc
xlat
das
loop
mov
push
mov
push
inc
mov
and
clc
adc
das
adc
mov
xor
ss
fimull
push
sti
mov
mov
fcomip
mov
imul
fildl
scas
in
fwait
and
insl
imul
mov
aad
cmpsb
inc
jb
push
sbb
into
movsl
iret
leave
fisttps
test
loop
or
mov
adcb
lret
test
aaa
mov
das
fidivs
dec
popl
icebp
out
inc
xchg
in
out
rorb
movsl
stos
or
rolb
jns
movsb
or
jbe
jl
enter
outsb
push
pop
rclb
das
popf
jae
es
mov
insb
adc
push
mov
or
mov
rcrb
cmc
push
ljmp
sysenter
mov
sub
mov
xor
adc
jns
cs
xchg
add
enter
push
cmp
mov
xor
mov
and
dec
fs
xor
adc
stos
out
cmp
jl
dec
mov
sub
mov
lea
dec
push
push
fildll
decl
aad
orb
hlt
test
lcall
cmp
cltd
inc
jl
push
pop
imul
repnz
lret
lret
in
ja
mov
rorb
mov
in
pushf
pop
fdivp
sub
cs
je
mov
test
outsb
mov
enter
out
insb
mov
cmpsb
sbb
ss
pop
mov
imul
test
or
cld
cmp
and
aas
aas
push
lret
add
lock
pop
push
cmpl
into
or
mov
inc
aaa
push
jecxz
ret
xchg
dec
inc
js
xchg
sbb
or
xchg
dec
sub
xor
int
das
or
cmpsb
and
push
loop
xchg
movnti
out
dec
fucomp
ds
cld
popf
sbb
icebp
jle
and
leave
cmp
fiaddl
daa
std
ret
add
cmp
and
push
cmp
ret
inc
ja
lret
stc
lea
and
jmp
in
aas
outsl
dec
cmc
loop
popf
or
push
cld
mov
push
fdivp
hlt
adc
push
inc
lcall
mov
push
sti
pop
mov
jno
push
mov
test
lods
add
call
push
push
mov
and
pop
daa
mov
dec
lock
lahf
xlat
xchg
ret
ret
popa
ja
add
push
jbe
mov
cmpsl
mov
dec
pop
mov
xor
pop
xor
jle
mov
sub
call
fists
jecxz
xchg
stos
fisttpl
add
cmc
mov
in
call
shl
cmp
lcall
xchg
gs
pop
inc
add
lds
je
push
mov
idivb
fisubl
adc
mov
cmp
fwait
jmp
out
lahf
push
push
inc
sbb
cmp
ffreep
sbbb
pop
in
movsb
lret
popa
mov
dec
mov
fucomp
inc
lock
ss
adc
subl
jnp
push
fcmovnbe
dec
cmc
out
or
adc
lret
mov
pop
enter
das
adc
gs
jp
shlb
mov
shl
sar
mov
cmp
lea
add
aaa
push
daa
or
mov
test
mov
xchg
sahf
mov
push
push
add
sbb
addr16
or
je
inc
lcall
gs
jae
push
or
in
mov
iret
pop
inc
adc
test
testb
pop
into
push
and
push
and
ljmp
mov
aaa
addb
mov
pop
shrl
xchg
ljmp
xchg
jecxz
popf
icebp
or
jne
std
and
jnp
sbb
test
ficoml
xchg
jle
leave
jnp
out
in
icebp
rcl
pop
popa
mov
push
mov
pop
scas
or
dec
inc
xchg
push
jl
cmp
cs
mov
adc
cltd
ror
xlat
pop
fldcw
das
pusha
stos
inc
stos
cmp
xor
mov
rcll
mov
lock
pop
xor
jo
imull
adc
addb
inc
push
out
pop
out
cmpsb
dec
out
pop
cwtl
icebp
cltd
fldcw
xchg
push
dec
mov
lea
loop
daa
jle
xchg
jmp
dec
out
pop
sub
scas
and
test
xchg
pop
cld
jmp
inc
lock
popa
out
xor
mov
jae
mov
xchg
push
shlb
mov
in
iret
sbb
fstl
inc
sbb
fisubrl
ror
inc
inc
pop
xchg
cli
jno
stc
or
ljmp
mov
jns
adc
shll
aad
mov
cmp
mov
lcall
inc
rclb
push
or
mov
clc
cmpsl
jne
sahf
into
lock
jns
adc
frstor
sahf
jne
outsl
adc
jge
inc
fcmovbe
xchg
in
loope
aad
push
scas
or
xchg
test
mov
std
dec
int
and
lret
sub
imul
pop
mov
in
std
jne
add
push
xchg
scas
add
and
popf
test
pop
ljmp
loope
xchg
push
pop
ljmp
xchg
inc
pop
jne
or
imul
cmpsb
dec
shll
gs
sbb
test
lret
lock
inc
popa
clc
shlb
xchg
outsl
lea
daa
cmpsb
mov
ja
mov
xchg
roll
mov
dec
mov
test
lods
je
mov
sbb
pop
mov
std
fstpl
adc
imul
mov
in
es
mov
and
xor
cld
mov
in
sarb
jbe
sub
mov
xor
or
rcll
dec
cmp
imul
aam
jecxz
cmp
jmp
sarb
jge
dec
addr16
test
sti
sbb
sbb
insl
add
xchg
jne
mov
aaa
sub
das
sub
mov
rcl
xchg
in
int3
and
daa
cmpsl
sub
fisttpll
mov
sub
fidivrs
sub
adc
movsl
idivb
push
pop
out
ds
insb
outsb
iret
xchg
fwait
leave
in
cmp
xchg
popa
movsl
in
jl
jne
mov
mov
pop
into
scas
repz
popa
call
sarl
daa
xchg
mov
cmp
sbb
xchg
jbe,pn
push
dec
or
ret
xchg
adc
loopne
test
test
int3
jnp
xchg
sbb
jg
push
adc
es
mov
push
xchg
mov
addr16
push
clc
test
jp
push
gs
lock
mov
add
pop
inc
aaa
mov
dec
leave
loope
sub
dec
xchg
repz
and
aas
enter
jbe
cmp
cmpsb
xchg
pop
xlat
sti
scas
sahf
cmp
icebp
stos
je
stos
and
sbb
dec
mov
push
imul
cli
fmuls
cmp
insl
sub
cmp
xchg
cmc
addr16
xchg
cmp
mov
lcall
sub
pop
push
or
into
popf
jbe
int3
lret
es
lods
lcall
ficoml
xchg
xor
lret
rcll
mov
clc
mov
pop
ja
cmp
jmp
pop
cs
loop
mov
xor
data16
mov
test
ljmp
dec
cld
push
dec
jp
imul
inc
dec
mov
sub
pusha
jo
mov
inc
or
or
lods
push
add
cld
or
ret
xchg
sub
inc
mov
pushf
xor
movsl
int
fnstenv
mov
fwait
dec
mov
jecxz
lret
dec
fwait
or
leave
pop
cmp
push
mov
int
sub
sbb
ret
sub
movsb
sbb
ret
mov
push
repz
pop
rcll
ss
fcompl
inc
clc
jp
push
lahf
jp
cltd
xor
add
outsb
mov
imulb
mov
movsb
sub
movsb
push
fimuls
add
xor
aas
xchg
into
mov
mov
xor
add
jmp
add
sbb
popa
in
sub
sbb
sub
xchg
ret
fmuls
fs
cmp
pushf
dec
push
or
mov
aaa
fsts
xchg
loopne
sbb
mov
bound
cmpl
pusha
cmp
adc
mov
cmp
aad
inc
dec
inc
out
mov
xchg
mov
cmp
inc
pushl
xchg
std
mov
inc
sub
jne
sub
inc
add
mov
nop
jnp
test
cmp
pop
sbb
xchg
xor
cmpsb
ror
and
dec
sub
jmp
push
cwtl
mov
xchg
jno
sbb
je
mov
mov
stos
stc
mov
cmpl
sub
nop
test
xchg
adc
mov
dec
imul
add
fsubrs
pop
mov
xchg
lea
fildl
sbb
mov
xchg
adc
cmpsb
add
cmpsb
push
insb
arpl
inc
push
sub
mov
fadds
int
in
test
fistl
inc
sbb
sbb
ja
xor
mov
jae
add
fcmovnb
cmp
and
sbb
jmp
aad
hlt
sub
movsb
or
repnz
test
push
inc
xor
mov
pusha
or
int3
inc
aas
ret
inc
mov
clc
hlt
repz
sbb
sbb
xchg
and
inc
sbb
pop
adc
and
repnz
data16
dec
push
lods
notb
data16
and
add
xchg
call
in
loop
dec
lahf
xchg
fs
xchg
mov
mov
ret
mov
ret
pop
shl
mov
outsl
mov
jb
ret
inc
push
push
or
int3
lcall
push
insb
mov
popl
and
mov
es
dec
mov
pop
mov
aam
icebp
jmp
add
mov
bound
lcall
sub
loop
jae
sti
mov
lock
into
add
pop
adc
mov
mov
inc
dec
aam
insb
jae
xor
xor
iret
cltd
stos
pop
adc
jg
and
cmpl
dec
and
or
popf
out
aad
and
sub
aas
push
sbb
je
pop
fcoml
inc
mov
leave
push
js
jnp
jl
ja
adc
xor
pop
enter
inc
sbb
lret
mov
aaa
jb
pop
aas
mov
repnz
dec
lods
cmp
iret
rcrb
fcmovnbe
or
lds
in
mov
fcmovb
xchg
jp
dec
mov
push
cmp
pop
pop
daa
adc
sub
dec
sbb
fcomp
bnd
sbb
stc
shrb
loope
lods
jecxz
sahf
push
or
and
iret
stc
xchg
test
and
loope
fdivl
or
jg
jle
movsl
mov
sti
pop
addr16
cmp
iret
inc
and
outsb
xchg
mov
xor
inc
xor
outsb
sub
cld
mov
imul
aaa
ret
and
cwtl
clc
mov
inc
jmp
xchg
adc
add
jb
add
scas
leave
js
call
out
push
push
movsl
repnz
fucomp
xchg
popa
in
mov
out
sti
cmp
jno
or
mov
es
daa
outsl
jo
inc
push
stc
dec
das
jge
shl
and
imul
inc
cmp
clc
dec
pop
hlt
ss
jl
push
fistpll
in
pop
lret
adc
mov
addl
jo
ds
jg
call
aad
call
adc
sub
pop
dec
repnz
adc
ss
jl
cmpsl
xchg
std
int3
xchg
dec
cli
scas
inc
mov
add
fstpt
sbb
stos
fwait
out
or
mov
cmc
adc
dec
repz
jge
outsl
mov
mov
out
jecxz
xor
sub
or
sbbl
and
fisttpll
sub
or
jnp
decb
xlat
or
mov
divb
jae,pt
orb
xchg
xchg
fmul
hlt
lods
cli
scas
test
inc
clc
adc
push
adc
sbb
add
popa
icebp
out
ljmp
sub
in
int
dec
and
lcall
ret
sub
push
xor
fistpll
nop
pushf
icebp
es
nop
iret
insl
daa
sub
mov
je
lret
pop
jo
fwait
sbb
mov
jae
cmp
lea
and
mov
mov
lahf
jl
insl
cltd
add
ss
add
js
decl
jne
rol
cmp
sub
mov
cmp
dec
int3
test
push
cli
mov
lret
sbb
pop
sub
aas
dec
mov
js
jl
mov
adc
fldcw
jne
xorl
push
sar
xchg
xor
pop
dec
movsb
add
call
pop
cmp
cmpsb
jp
push
sub
dec
push
mov
cld
jp
and
push
adc
cmp
ljmp
xor
loope
or
xor
cmp
daa
fchs
call
lret
inc
scas
mov
data16
pop
scas
clc
scas
fcomps
mov
hlt
xor
sub
fdivrs
aad
push
jl
rorb
inc
push
data16
pushf
sub
int3
shrl
xchg
test
cwtl
pop
jmp
loope
sub
out
mov
sub
in
int
jmp
inc
adc
in
jns
test
xor
inc
cltd
mov
mov
and
inc
inc
xchg
adc
repnz
pop
lock
push
inc
std
mov
fldl
jo
mov
cmp
lahf
adc
mov
xchg
cmc
fnstcw
inc
xor
mov
pop
icebp
dec
mov
aam
inc
mov
shl
xor
jae
cs
mov
or
sbb
sti
push
cli
sbb
loopne
cmp
add
mull
pop
and
pop
sub
cmp
fwait
mov
fs
xorl
int
les
mov
les
pop
and
sarb
adc
add
sbb
aam
pop
mov
into
mov
nop
xor
jns
imul
push
cmovae
stc
cmpsl
mov
push
push
xchg
sub
sub
xchg
testb
movsl
mov
nop
je
daa
sbb
movsl
repz
xlat
adc
je
jg
inc
pop
xor
pop
and
sub
shlb
pop
mov
aam
push
or
and
in
sti
adc
loope
test
lahf
cli
lods
loope
push
loopne
iret
aad
js
inc
mov
xchg
adcb
push
bnd
loop
daa
ljmp
jge
adc
mov
nop
out
in
jecxz
loopne
mov
push
imul
xor
lahf
mov
add
add
sbb
test
jp
lahf
or
jmp
addl
mov
loop
cmp
dec
clc
sub
clc
jmpw
outsl
xchg
cltd
xor
out
leave
ret
rclb
inc
int
cmp
mov
push
pop
pop
mov
movsb
ljmp
cmp
pusha
sbb
mov
push
mov
daa
and
lahf
pushf
es
ret
inc
pop
cmp
ljmp
rclb
inc
in
jbe
xchg
out
lea
xchg
jl
jb
daa
mov
push
rcrb
lahf
xor
fnsave
dec
pushf
inc
mov
adc
dec
pop
je
adc
test
sbb
sbb
das
adc
inc
ljmp
dec
out
pop
adc
ds
in
and
pop
and
std
jl
mov
popf
pushf
push
ficoml
inc
hlt
inc
bound
aad
push
xchg
sbb
mov
daa
hlt
dec
jno
cmc
xchg
neg
inc
dec
divl
dec
ljmp
xor
cmpsl
imul
or
inc
sbb
pop
inc
xlat
mov
sub
rcll
sub
jge
outsb
lret
fwait
mov
sbb
fldt
mov
dec
adc
and
inc
fldt
adc
add
lods
push
cld
out
push
mov
jae
sub
push
cmp
out
cmp
aad
dec
adc
cmp
or
ret
and
cmp
into
push
out
jne
push
mov
push
and
sbb
mov
dec
js
stos
loop
bound
dec
xchg
movsl
sbbl
lods
call
and
dec
pop
dec
push
inc
in
popa
pop
out
inc
sbb
adc
cmp
shl
pusha
cmp
and
push
int
sbb
iret
xchg
data16
mov
loop
and
jns
sbb
inc
xor
push
cmp
or
sbb
rcrl
xchg
loope
rcrl
sbb
repnz
and
xor
mov
jnp
es
adc
cwtl
out
repz
movsb
outsl
mov
pop
mov
and
shr
cld
sub
push
cmpsl
inc
or
pop
daa
pop
jns
cmp
dec
addb
out
sub
xor
es
pushf
dec
aaa
mov
push
outsl
adc
dec
and
jae
and
adc
adc
movsl
xchg
sub
dec
mov
add
mov
stc
int
xchg
jecxz
dec
sti
ret
jbe
in
pop
rolb
sbbb
push
xchg
jno
les
out
xchg
dec
sbb
dec
test
leave
addl
fnstenv
dec
mov
add
add
push
mov
mov
adcb
push
mov
jae
pop
sbb
push
mov
xchg
mov
xchg
mov
mov
sub
pop
fdivs
jp
mov
mov
mov
and
leave
mov
jb
jmp
or
push
adc
dec
bnd
inc
leave
pop
loopne
and
jns
and
or
test
pop
out
push
pop
jl
ss
lea
mov
cmpsb
mov
lds
sbb
mov
push
push
xor
mov
shr
lods
xchg
xor
jb
popa
xchg
out
xor
arpl
movsl
lock
sub
jmp
dec
and
and
mov
stos
mov
dec
jo
aad
mov
cmp
inc
xchg
mov
mov
icebp
shlb
out
iret
jg
cmp
dec
sbb
push
in
adc
jge
adc
std
imul
adc
add
jo
push
pop
jbe
sti
mov
hlt
sbb
div
pop
mov
pop
cmp
ret
inc
sbb
scas
aam
mov
push
test
repnz
fldt
aaa
lahf
sarb
enter
loop
addr16
and
icebp
sub
mov
shll
in
xlat
cli
push
cmp
dec
jl
stos
mov
adc
lock
fisttpl
insb
out
mov
or
jns
cli
add
xchg
jno
fwait
sub
push
jne
push
mov
shll
ret
in
addb
mov
test
clc
rcrl
mov
daa
test
test
push
outsl
ja
mov
negb
mov
or
add
xchg
scas
daa
mov
cmp
popf
pop
inc
pop
sbb
aaa
inc
push
iret
pop
sar
sub
sbb
icebp
jge
out
add
xchg
dec
push
inc
lock
inc
ret
sahf
xor
inc
pop
das
xor
scas
pop
in
mov
cmp
sbb
pusha
enter
mov
mov
test
stc
cmc
lds
xchg
enter
out
sub
dec
push
test
xor
insl
mov
cmp
jnp
cmp
imul
stos
adc
add
push
add
orb
popf
lods
jg
int3
cmp
std
fdivrl
adc
push
mov
popa
xchg
popf
popf
sub
inc
scas
scas
negl
xchg
les
iret
lods
mov
mov
xor
push
test
filds
inc
push
mov
clc
xchg
add
cwtl
xor
cli
inc
rolb
dec
pop
pop
pop
sub
pop
and
push
and
push
popf
pop
mov
andb
xorb
cwtl
or
jecxz
idivb
loop
lahf
push
loope
cltd
xor
xlat
jg
jmp
dec
cli
int
in
ljmp
add
push
scas
mov
int
int3
movsl
mov
cmpsb
inc
dec
push
sbb
lahf
leave
std
out
dec
icebp
mov
ljmp
xor
mov
mov
xchg
nop
insl
sbbb
or
outsl
dec
dec
adc
mov
pop
test
sub
xor
stos
rcrb
push
mov
mov
sbb
aaa
leave
mov
shrl
or
in
dec
xor
addr16
sub
stos
dec
dec
call
leave
push
jl
and
jno
imul
popa
add
inc
mov
lds
fwait
add
stos
cmp
inc
dec
mov
dec
jb
rcl
adc
es
fs
xchg
xchg
stos
mov
adc
fimuls
imul
and
lcall
aas
cli
cmp
ret
dec
or
les
sub
adc
sub
aas
mov
push
add
popf
mull
cld
test
cld
sti
add
imul
cmp
jge
jb
cld
cltd
je
fisubl
push
aaa
add
pop
mov
ret
and
std
imul
jb
mov
cmpsb
addb
mov
and
xchg
adc
xchg
call
adc
mov
imul
lret
into
scas
test
jno
mov
sbb
mov
dec
mov
scas
sarl
xor
addl
adc
adc
or
sub
lods
xchg
mov
adc
sub
dec
cmpsl
fsubrs
das
pop
xchg
dec
aad
xlat
stos
mov
out
fwait
jae
jbe
mov
or
lock
out
add
js
js
push
xor
sub
ret
and
stos
dec
scas
adc
popa
addr16
dec
scas
shr
in
inc
push
ret
push
idivb
ds
jbe
sub
inc
shr
xchg
out
inc
pminsw
xchg
sbb
pop
push
and
or
pop
sub
jmp
mov
mov
lcall
arpl
xlat
or
ret
xor
adc
push
pop
out
add
bound
std
xchg
pop
push
mov
mov
mov
push
mov
rcll
pop
sbb
xchg
in
cmp
aas
pusha
out
dec
adc
pushf
xchg
xor
and
pop
pop
stos
mov
push
xchg
enter
cmp
push
cwtl
fnstcw
jno
outsl
jbe
lock
vprotq
adc
pop
cmp
lcall
ljmp
in
cli
push
mov
fbld
jo
aaa
stos
cmp
test
popa
pop
jge
mov
jns
out
sarl
notl
es
cmp
cmp
push
dec
pop
rcl
divb
cmp
add
loop
sbb
mov
mov
notb
xchg
mov
test
xor
call
jmp
pop
das
cli
insb
aas
sbb
faddl
xchg
sub
fidivl
popa
shrb
add
insl
inc
cmp
shlb
push
lock
ljmp
repnz
pop
jne
ljmp
push
gs
cmp
cmpsb
sahf
sub
hlt
rcr
out
stos
mov
mov
adc
ja
lea
mov
test
xor
rol
leave
or
and
pop
inc
xlat
cwtl
fwait
ds
data16
addr16
roll
xchg
pop
add
and
xchg
fldcw
lret
out
or
mov
and
aas
insb
in
fmulp
das
sbbl
mov
adc
scas
adc
or
inc
loopne
mov
and
dec
mov
or
repnz
mov
movsb
xor
inc
imul
push
ja
pop
out
fsubp
and
fstps
jle
push
jecxz
push
adc
pusha
or
xor
add
lahf
mov
ja
test
adc
daa
outsb
das
iret
iret
mov
cmpsb
and
adc
mov
ljmp
jg
add
or
rcrl
call
lret
push
sbb
pop
rclb
negb
mov
repz
iret
cld
dec
inc
xchg
jne
fcoml
and
add
iret
fwait
stos
dec
sarl
movsl
movswl
lcall
cmp
jnp
sub
fwait
subl
fbld
pop
cmc
orb
lret
mov
cli
icebp
push
push
stos
pop
ja
fnsave
xor
dec
in
int
ss
lret
mov
push
jecxz
bound
jle
outsb
or
pop
fisttpl
jo
sbb
cmpsb
inc
mov
cmp
mov
negl
and
or
xchg
in
ret
hlt
lret
inc
cmp
add
pop
or
jnp
ss
add
mov
jb
pop
mov
mov
cmp
test
xchg
cwtl
push
ja
jb
pop
dec
sub
sbb
xchg
push
mov
fwait
sub
cltd
ret
pop
push
push
pop
jbe
and
dec
jg
fidivrl
mov
sbb
lea
mov
inc
push
pop
push
and
rcrb
icebp
sub
outsl
popa
sbb
fsubrs
inc
push
mov
test
mov
pop
lcall
sbb
inc
and
fucom
add
dec
lea
mov
xchg
shlb
sbbl
and
addb
xor
pusha
pop
or
outsb
icebp
dec
xor
push
push
xchg
or
imul
sbb
pop
in
xor
pusha
adc
mov
jbe
push
adc
adc
inc
jg
mov
fsub
inc
loope
daa
lds
xchg
cmp
pop
xchg
shl
or
ljmp
mov
sub
aad
push
pop
hlt
cmp
or
daa
xorb
inc
mov
addr16
jns
lcall
cmp
adc
fildl
rolb
add
xchg
cli
jg
movsb
sub
std
xor
fildl
outsl
and
cmp
es
sub
pop
inc
mov
jge
ffreep
mov
aas
mov
int
pusha
xlat
adc
pop
or
cmp
orl
sbb
inc
push
xor
fisubrl
mov
cmpsb
mov
pop
or
movsb
push
sbb
imul
cmp
push
pusha
enter
inc
pusha
ds
ljmp
in
sub
jno
shl
push
adc
add
pop
pop
mov
ja
mov
pop
mov
pop
movsl
loopne
mov
rol
lcall
leave
mov
sbb
add
adc
mov
or
aas
jmp
and
inc
dec
aas
or
mov
mov
icebp
cmp
push
jmp
mov
and
and
nop
or
or
popa
mov
adc
sbb
inc
gs
rcll
sub
ljmp
int3
xchg
bound
inc
in
sub
push
xchg
xlat
push
test
sub
xlat
loope
jmp
inc
movsl
xor
ficompl
xchg
lods
shlb
leave
mov
or
rcrl
mov
imul
pop
push
jp
sbb
test
lods
and
sbb
lods
sub
inc
fiaddl
or
in
add
jle
lahf
int3
adcb
and
dec
std
std
jl
push
les
ja
movsb
mov
push
popf
jbe
scas
push
sbb
mov
push
jp
push
in
inc
int
jnp
pop
push
mov
inc
sub
cmp
pop
cmp
mov
sub
cwtl
or
cmpsl
andl
mov
mov
test
or
aam
loope
shrb
lods
dec
mov
jg
adc
je
pop
call
adcl
insb
push
push
rclb
xlat
cmp
stos
cwtl
ss
ss
test
outsb
test
mov
push
std
cld
mov
cmc
xor
hlt
mov
dec
mov
or
in
in
ss
mov
xor
mov
insl
mov
sahf
sub
daa
int3
inc
cld
fnsave
push
test
loope
dec
dec
data16
and
arpl
outsb
dec
fidivl
adc
popf
mov
adc
lret
inc
daa
loopne
or
or
push
and
jns
ret
xchg
mov
dec
fmul
and
cmp
push
xchg
sub
cltd
or
lea
lods
lret
or
lcall
stos
jo
cmp
inc
addl
pop
mov
nop
aad
fdivl
stos
xchg
adc
rclb
fld
sbb
push
dec
xor
clc
cltd
inc
mov
mov
sub
jnp
int
add
imull
lret
inc
sub
int
mov
scas
popf
jge
mov
rorb
xchg
and
and
hlt
dec
mov
or
adc
enter
mov
fldl
aas
std
lock
jno
je
ds
cli
add
push
or
test
daa
add
cli
mov
pop
dec
iret
cmc
sbb
stos
mov
mov
loope
pop
fisttpl
jb
popf
andl
mov
outsb
lods
inc
push
cmp
mov
leave
cli
test
scas
cmpl
and
push
xlat
cld
loop
inc
stc
cmp
mov
inc
stos
loopne
test
pop
call
fimull
in
in
add
cltd
sub
sbb
int3
in
sbb
adc
repnz
jae
outsb
inc
and
aas
mov
push
std
jb
xor
mov
sub
mov
into
xlat
lea
mov
adc
adc
fiaddl
adc
xlat
jg
sahf
shufps
loopne
add
loope
jp
jae
adc
push
insb
fsts
xor
enter
scas
jne
dec
sub
cli
pop
jl
dec
jle
popa
inc
adc
pop
jecxz
int
and
sti
out
movsb
cmp
roll
xchg
mov
cmpsl
push
push
rcl
pusha
daa
out
pushf
ret
iret
pusha
icebp
mov
dec
push
mov
ret
mov
push
fildl
sub
ret
add
cmp
xchg
ret
mov
lea
xchg
pop
and
or
data16
lock
push
inc
movsl
lret
dec
jo
mov
mov
add
pop
loop
repz
inc
adc
imul
or
outsl
adc
or
mov
push
sbb
dec
or
mov
adc
push
test
and
pop
xor
adc
cmova
xor
or
adc
outsb
jmp
jmp
add
cmpsb
push
repz
cmp
inc
pop
popa
pop
cli
inc
pushf
sub
xchg
stos
lea
push
push
mov
out
clc
pop
insb
push
dec
adc
mov
mov
pop
jg
and
jle
add
shll
add
leave
sub
sbbb
adc
xor
aas
adc
shrl
sub
inc
clc
dec
jle
arpl
cmpsb
cld
push
inc
gs
adc
adc
ja
cmp
and
lcall
add
sbb
stos
adc
cmp
mov
adc
mull
push
scas
sub
icebp
pop
jae
mov
push
fstpt
mov
loope
cld
sub
xor
pop
or
adc
jle
cmp
icebp
cmp
pop
pop
outsl
jmp
loopne
jnp
mov
pop
sub
cmp
mov
dec
push
shl
and
mov
xchg
scas
call
add
sbb
xor
add
in
cltd
or
sbb
sbb
pop
cmp
xor
cmp
in
xor
notl
dec
icebp
cmp
fs
and
stos
shll
adc
movsb
and
jp
imul
xor
jbe
jg
inc
addr16
mov
pop
inc
jle
pop
cld
ljmp
rcrb
dec
sbb
test
arpl
outsb
push
jp
push
mov
scas
insl
ret
mov
pop
xlat
lock
sub
test
push
xchg
sub
and
movsl
daa
movsb
neg
orb
fdiv
jp
loope
js
dec
pusha
ljmp
shl
aas
jecxz
lahf
sbb
fisubrl
clc
mov
loope
call
mov
lods
lcall
inc
mov
xor
out
push
dec
lea
jne
push
and
pushf
mull
add
mov
pop
dec
dec
iret
scas
clc
fistl
sub
nop
inc
enter
bound
pop
sbb
cmpsb
xor
sub
shrl
jmp
test
sbb
push
stos
mov
sub
fs
iret
loop
mov
fisubrs
movsb
sti
or
jo
cli
mov
jl
mov
nop
clc
je
xchg
push
adc
jb
pop
mov
test
or
push
leave
gs
icebp
fidivrs
xchg
xchg
adc
addr16
mov
add
test
test
pop
pop
lcall
and
test
aam
mov
cmp
aad
mov
lahf
pop
xor
jle
cmp
mov
push
xchg
xchg
scas
outsl
test
jno
and
jmp
fwait
and
js
incl
test
jne
add
cs
test
xchg
jle
in
xor
roll
popa
cmpsl
decl
xchg
out
or
sub
sbb
sbb
sub
xchg
sbb
add
inc
xor
adc
lret
test
aad
and
dec
and
jnp
add
leave
fcomps
lock
imulb
push
and
aas
pop
add
lods
aad
shlb
xor
sarl
push
and
hlt
jecxz
mov
cmp
dec
push
dec
add
jae
fwait
int3
clc
testb
xchg
or
mov
adc
cmp
dec
mov
sahf
lods
and
pop
aas
fnstcw
sub
je
shr
sub
jg
out
inc
push
insb
xchg
xchg
lock
and
inc
into
movsb
data16
stos
testl
inc
mov
add
cmp
lret
sbb
xorl
mov
pop
xrelease
adc
cwtl
mov
cmpl
mov
fbld
les
movsl
and
stos
push
addb
ficompl
inc
mov
fcomps
mov
lret
aaa
cli
ret
shrl
repnz
and
faddl
bound
mov
ja
sub
imul
sub
mov
repnz
xor
mov
in
inc
test
ljmp
iret
sub
mul
popf
movsb
adc
outsl
lea
jb
jbe
sbbb
mov
mov
fidivs
movsl
mov
jo
mov
dec
jo
pop
push
mov
add
xchg
out
arpl
int3
mov
jp
pop
mov
movl
pop
pop
bswap
repnz
shrl
stc
or
jmp
loopne
bound
int
cmp
rorb
or
jbe
js
push
sbbb
insl
mov
adc
inc
mov
jb
or
pushf
sbb
sub
je
incb
leave
pop
data16
adc
sti
cmp
mov
push
shl
iret
dec
into
xchg
dec
mov
add
test
pop
jno
int
mov
aam
adc
dec
inc
out
insl
inc
rorb
aad
or
dec
inc
jbe
inc
pusha
jbe
lods
rclb
mov
js
pusha
cltd
pop
pop
dec
xor
nop
and
mul
xor
jb
cmp
cmp
hlt
out
push
jmp
jbe
lock
mov
mov
add
mov
cmpl
and
sti
sub
push
sub
cmpsb
aaa
and
bound
mov
xor
inc
daa
sub
outsb
pop
mov
cltd
mov
sarb
push
cltd
outsl
mov
arpl
sbb
mov
cmpb
and
sahf
and
adc
roll
rolb
push
in
data16
dec
dec
adc
xchg
sbb
cs
mov
cmp
lret
vandps
inc
sbb
test
nop
scas
jecxz
cld
mov
xchg
xor
cs
push
into
jno
outsl
dec
imul
rcrb
insl
mov
fs
push
fists
mov
pop
mov
popf
ret
hlt
inc
mov
sti
xchg
or
push
data16
fistps
stos
dec
outsb
add
mov
cmp
mov
test
imul
sbb
movsl
push
xchg
cwtl
mov
movzwl
pop
loop
lea
test
mov
or
int3
rcrl
add
cmp
mov
ret
inc
aam
xor
mov
fldenv
jb
add
adc
shlb
xor
cld
das
cmp
mov
outsl
pop
mov
sbb
imul
push
int
scas
adc
xor
mov
mov
aam
push
add
rolb
mov
imul
xor
ljmp
inc
pop
or
mov
dec
int
jbe
cmp
jbe
scas
stc
xchg
push
out
stos
cmpsl
mov
int3
or
xchg
shl
mov
loop
rcrb
sub
rclb
int3
pop
dec
lret
jns
or
test
dec
ret
mov
lods
and
push
jge
iret
mov
jmp
jg
andl
and
sbb
inc
mov
cmp
and
push
movsl
xchg
ret
andl
pop
popf
xchg
cmpsl
out
sub
imul
mov
add
mov
pop
in
jle
xor
xchg
fsubrl
dec
gs
lock
daa
mov
adc
dec
jge,pt
pusha
jge
mov
sbb
in
cmp
shrl
es
aaa
sti
fdivr
outsl
xlat
test
fiaddl
xchg
or
dec
cwtl
or
push
xor
leave
and
pop
mov
sub
in
fwait
xchg
fistpl
and
and
push
xor
xchg
cmp
mov
sub
mov
lock
pop
icebp
cmp
or
jmp
lods
out
into
enter
push
mov
movsb
mov
sbb
and
push
ds
xor
or
cltd
jne
rorb
popf
imul
pusha
in
icebp
mov
jo
adc
or
stc
push
sub
aas
fisubl
or
out
xchg
sub
dec
jne
addr16
mov
cmpsl
test
lods
popf
lahf
lods
idivb
xchg
pop
loop
lds
cmpsl
jb
push
mov
mov
push
xorb
sar
imul
mov
daa
sbbl
icebp
leave
adcl
in
arpl
mov
xchg
movsb
cmp
dec
leave
jne
mov
scas
pusha
out
stos
sub
in
xor
out
aad
fnstenv
lahf
jl
int
insb
jne
adc
scas
ds
insb
inc
adc
xlat
enter
jle
das
push
test
sbb
inc
stc
hlt
sbb
push
daa
inc
or
and
add
lods
andb
scas
test
and
xchg
push
xchg
sbb
jecxz
fcmovnbe
xchg
loopne
subb
mov
ds
nop/reserved
inc
mov
pop
mov
call
cs
addl
pushf
enter
mov
and
jae
in
add
sub
jnp
xor
fwait
lret
cli
repz
cmp
push
icebp
jmp
mov
cwtl
push
mov
in
fmull
cli
popf
cmp
cltd
or
dec
inc
xor
lahf
push
xlat
mov
push
mov
aam
icebp
and
push
inc
push
in
fsubrp
or
rcr
stc
push
lock
push
sarl
add
cmp
rclb
outsb
dec
leave
sti
addr16
and
call
push
dec
xor
icebp
lret
addr16
fsubrs
outsl
xchg
add
sub
setle
push
sarl
xchg
pushf
pop
mov
mov
or
jbe
aam
test
in
mov
repz
sbb
stc
xor
push
push
dec
push
pop
ja
pop
or
int
aaa
ret
int3
test
pusha
mov
repz
jge
cmp
test
mov
or
lea
mov
jnp
sbb
mov
mov
mov
adcl
or
cli
mov
fstpl
sti
sarb
dec
test
sti
mov
mov
cmp
addr16
imull
and
pop
jmp
inc
test
push
pop
hlt
pop
scas
add
sar
aam
fwait
icebp
mov
inc
mov
mov
xchg
test
out
cltd
mov
mov
fcompl
jl
loopne
sub
nop
push
cmp
data16
mov
jne
out
stos
sbb
lahf
dec
xchg
cmp
insl
cmp
pushf
adc
jb
adc
add
fnstcw
sahf
xor
and
jb
mov
lret
pop
mov
out
dec
out
mov
loope
jle
ds
xchg
xchg
push
dec
repz
scas
jb
mov
cmp
daa
fcmovbe
cmc
and
sub
jge
mov
inc
std
lcall
aaa
or
mov
testb
mov
mov
sub
push
das
in
sub
adcb
pop
and
mov
aad
mov
mov
mov
out
sub
xor
mov
xchg
mov
mulb
cmp
into
aas
fisttpl
jl
mov
mov
jmp
mov
mov
cmp
add
xor
xor
or
mov
negl
sub
outsb
sbb
bound
pop
es
in
and
sbb
mov
cmp
stc
mov
mov
xor
or
clc
lret
outsb
in
icebp
les
xor
push
cld
jns
outsb
push
lret
inc
lcall
jnp
mov
js
jl
jmp
or
int
xchg
stos
inc
mov
je
and
addr16
lods
loope
adc
add
mov
insl
nop
sahf
iret
and
sar
icebp
dec
xchg
shll
test
orl
mov
xorb
pushf
xorl
mov
add
pop
das
addl
movsb
adc
rol
cmp
lcall
out
xor
aad
cli
xlat
fdivrs
jg
test
and
aas
and
scas
mov
sar
or
cmp
xor
outsl
pop
pop
mov
cmp
xchg
into
pop
sbb
mov
fsubrl
fstl
mov
rclb
cmc
pop
and
out
out
out
add
add
or
mov
mov
sbb
push
stos
inc
jns
and
dec
add
outsl
mov
fists
or
pusha
mov
jno
iret
sbb
xorb
adc
mov
lods
or
daa
sub
movsb
mov
in
daa
in
inc
sbb
scas
aad
sub
scas
sbb
ds
das
add
sbb
mov
sti
and
cmp
add
repz
int3
inc
sti
sub
sub
arpl
cmp
pop
add
or
or
fstl
scas
sbb
or
fistpl
inc
cmp
jnp
arpl
sub
in
gs
sbb
js
jb
cmpsb
dec
jl
clc
mov
js
push
stc
lock
cmp
xor
outsb
mov
push
ljmp
mov
icebp
jmp
test
jge
cs
roll
outsl
insb
push
pop
in
ss
movsl
fldl
pop
jl
jnp
faddl
dec
ret
test
stos
mov
push
sbb
out
mov
int
test
xor
paddq
or
mov
fmull
aaa
push
or
sbb
imul
mov
or
cmp
lock
adc
fbstp
pop
data16
insb
xor
dec
mov
movsb
je
les
cmp
flds
repz
adc
push
mov
mov
insl
imul
or
mov
in
bound
repz
sarb
inc
je
lods
movb
test
dec
jg
adc
mov
in
fdivrs
rclb
sbb
jmp
cmp
jle
cwtl
xchg
punpckhbw
out
cmpsb
xchg
inc
sub
rcr
repnz
in
es
jo
repz
rcrl
adc
nop
push
add
out
jnp
cmp
and
aas
movsb
cmpsb
fisubrl
jmp
push
pop
les
aas
je
xchg
pop
mov
mov
mov
sbb
negl
cmpsl
sbb
add
cmp
fwait
or
push
or
mov
rolb
arpl
movsb
pop
adc
cmp
movl
fninit
jl
jmp
adc
sub
ucomiss
push
cli
add
cs
movsl
jno
inc
pop
scas
or
add
in
jne
stc
pop
xor
movsb
xchg
je
adc
mov
frstor
daa
les
pop
jns
pushf
adc
fwait
je
push
mov
sahf
clc
xchg
xor
loop
lcall
call
test
pop
data16
mov
in
push
data16
mov
cld
mov
cmp
jno
ret
or
lea
nop
pop
add
inc
cmp
push
jb
push
xchg
cli
insb
scas
sbb
inc
test
mov
push
cmp
add
and
lea
fildl
jae
push
adc
xchg
mov
push
pop
mov
cmpsb
das
mov
xor
push
add
sbb
cmp
or
sub
sbb
int3
pop
xor
in
inc
iret
stos
push
ret
bound
xor
mov
insl
mov
negw
mov
lahf
jb
cmpsb
test
jmp
push
aam
in
in
cli
mov
je
js
stc
pop
mov
dec
cltd
popa
jne
lods
sub
movsb
js
dec
or
jmp
sub
jl
loop
mov
jmp
mov
in
out
decb
cld
jmp
add
int3
sbb
std
xchg
test
out
test
push
fwait
mov
popf
out
and
addr16
adc
mov
lock
mov
pushf
rcr
jge
jae
addr16
mov
and
aad
xor
add
je
pop
lods
xchg
in
sbb
push
cmp
cltd
faddl
adc
mov
aad
pop
loopne
inc
repz
in
inc
dec
mov
mov
pusha
and
xchg
sub
bound
clc
push
push
pop
lea
jmp
mov
push
out
adc
loop
cmp
mov
outsl
inc
rcrb
shlb
mov
pop
lea
inc
ja
out
adc
mov
cld
pop
sti
cmp
xchg
movsb
out
orl
je
inc
and
iret
test
call
out
in
insb
push
cmpsl
outsb
lahf
dec
mov
nop
in
jae
mov
sbb
push
mov
and
adc
adcb
and
dec
outsb
sbb
push
je
pusha
aas
pop
xlat
push
jne
or
inc
xor
pop
xor
rorl
cmp
pop
pop
mov
xchg
repnz
loopne
mov
mov
lcall
and
daa
pop
lea
fildll
adc
sub
pop
idivl
scas
repz
jl
in
pop
and
loop
clc
xchg
inc
shlb
in
in
lret
ret
pop
test
mov
sub
gs
cmpsl
sbb
inc
ss
jmp
test
ljmp
xchg
outsb
imul
cs
faddl
adc
pop
push
and
scas
mov
call
inc
shl
lods
imul
aad
xchg
adc
pop
andb
pop
add
pop
xchg
dec
imul
gs
inc
int
iret
xor
mov
sbb
outsb
jl
xchg
faddl
sbbl
aaa
loopne
xor
pop
cmp
mov
imul
adc
pop
sbb
inc
or
push
int
daa
pusha
and
adc
inc
push
popf
inc
std
mov
stc
ds
decl
out
jb
fcomip
ja
jp
lret
into
imul
dec
or
add
test
fcomps
jp
xchg
icebp
mov
pop
push
out
lea
or
dec
test
or
addr16
repnz
shrb
inc
leave
outsl
xlat
mov
imul
fyl2x
test
fidivrs
pop
fwait
sbb
push
aam
or
test
sbb
jge
cmp
fistps
mov
ret
dec
xchg
das
scas
mov
adc
aas
adc
test
movsb
sbb
dec
lods
clc
or
mov
adc
call
pushf
cmp
mov
sbb
popf
cmp
dec
imul
popa
add
decl
shrl
inc
fisubrs
xor
fisttpl
inc
push
decl
mov
mov
dec
test
add
lods
cli
mov
push
mov
pop
xchg
pop
mov
xchg
jecxz
movsb
xorb
pop
push
popa
arpl
repnz
inc
insl
insb
jle
adc
mov
inc
inc
clc
pop
movsl
mov
je
mov
jo
nop
mov
and
idivb
cmp
inc
xlat
lea
movsl
ficompl
xor
adc
or
mov
cmp
mov
outsl
enter
js
mov
lcall
dec
mov
jecxz
add
gs
add
in
lcall
inc
push
pop
outsb
inc
jmp
leave
repz
in
or
ret
pop
xor
popf
shrb
out
mov
cmp
test
rcrl
dec
hlt
jne
icebp
sahf
add
aaa
stc
adc
mov
and
popf
dec
jns
int3
jbe
inc
mov
clc
cmp
jae
call
rcrb
xchg
sar
ljmp
outsb
xor
test
push
int3
cld
bound
dec
xchg
cli
nop
imul
add
mov
popf
jp
dec
es
sarl
or
in
enter
loop
adc
out
sub
mov
xchg
mov
inc
adc
out
pop
adc
mov
test
int
cs
inc
in
jo
test
sub
mov
test
test
stos
jg
adc
test
cltd
xor
pop
cltd
add
mov
mov
pusha
cmp
divb
pop
mov
dec
add
pop
bound
push
xor
mov
and
cmp
sub
adc
sub
insl
test
fildl
sbbb
jnp
loope
lret
daa
push
and
shrb
shll
jmp
insb
sti
mov
or
mov
ljmp
dec
cmc
dec
gs
cmp
lret
imul
fisttpl
cs
aas
pop
push
cmc
mov
std
xchg
out
sub
mov
lret
and
jcxz
jle
mov
mov
or
xor
fwait
push
adc
push
les
push
mov
sbb
pop
lcall
movb
adcb
pop
add
shlb
inc
fisubl
push
loop
sub
inc
lret
add
jecxz
sbb
call
push
ret
mov
lahf
fists
test
out
lods
repnz
shrl
cmpsb
xor
jbe
sub
jo
jno
repz
xchg
div
add
xlat
sub
stos
or
loop
inc
std
jecxz
lret
mov
fimull
and
push
leave
push
fucomp
fdivrl
jl
lahf
das
roll
mov
fdivs
scas
xchg
pop
mov
imul
test
jbe
test
cs
jbe
push
imul
imul
test
jecxz
lock
repz
into
repz
into
sarl
push
fisttpl
mov
xlat
test
lods
lock
cltd
cli
pop
jb
xchg
mov
dec
jns
es
insb
fcomps
test
xchg
loope
pop
into
jmp
inc
mov
repnz
js
adc
adc
xor
push
push
lcall
xchg
pushf
mov
addr16
cmp
rcrb
addl
sbb
pop
iret
or
mov
cmp
pop
mov
sbb
andl
loope
push
hlt
xchg
iret
jne
xor
test
jle
pop
pop
xchg
jb
sbb
mov
js
or
mov
cwtl
pop
mov
mov
ret
ljmp
jbe
inc
dec
sub
xlat
mov
addr16
xor
ret
mov
mov
sbbl
mov
test
add
lods
cmpsb
into
cs
push
lods
aaa
mov
repz
mov
ret
add
add
call
int3
fdivs
cmc
ret
clc
adc
cmp
xchg
xchg
fistl
jb
repnz
xchg
in
loope
pop
daa
call
cmp
in
stos
imul
fdiv
xchg
sbb
rclb
pop
lock
xor
pusha
test
int
loope
test
mov
push
pop
push
push
insl
xor
mov
test
pop
es
out
fistpll
mov
sbb
addb
dec
mov
xor
fsub
lahf
ja
popf
or
cmp
sub
shl
xchg
repnz
or
add
gs
popa
sbb
inc
hlt
fisubrs
cmp
shlb
clc
test
sub
jmp
cmp
pop
mov
test
aaa
aam
loope
fbld
jns
jge
mov
jg
mov
pop
dec
in
lock
addr16
test
shr
loop
mov
adc
fisubrl
xor
call
fs
nop
xor
shrb
lcall
pop
mov
fxch
inc
hlt
cmp
adc
into
push
mov
pop
mov
push
sbb
push
into
xchg
xchg
test
test
push
mov
mov
or
xorl
leave
and
cmc
jnp
cmp
jns
stos
dec
push
push
pop
mov
add
lret
stos
subb
push
mov
cmp
push
lret
pop
sub
movsl
out
outsb
inc
in
data16
push
pusha
jno
inc
lods
scas
xlat
ficoml
sti
jmp
test
les
inc
push
sub
mov
rcr
lock
or
movsl
sahf
fistl
mov
jne
jnp
xor
lea
or
lret
stos
lds
or
mov
andb
pop
lds
cmpsb
in
xchg
mov
xor
in
out
test
fcomi
jne
xor
roll
inc
adc
or
mov
mov
jnp
aam
lret
into
aaa
in
push
mov
cwtl
or
pop
js
dec
lods
dec
mov
loope
cmpsb
push
aaa
rcll
repnz
cmp
cli
and
in
addr16
mov
fidivl
mov
subl
mov
aas
dec
push
stc
call
adc
mov
push
xor
in
mov
or
jmp
adc
mov
ljmp
sub
pushf
sbb
imul
test
and
adc
inc
mov
sub
mov
xor
mov
xor
add
xor
sub
scas
cmpsb
dec
jae
in
adc
and
outsb
mov
pop
adc
das
dec
fcomps
push
sahf
cmpsb
fdivrl
or
jae
push
jecxz
jg
daa
push
mov
andb
jne
jne
cmp
sbb
sbb
sbbb
leave
repnz
test
pop
lret
or
push
pusha
push
cmp
pop
cltd
lret
aam
and
pop
hlt
pop
and
fmull
cmp
mov
int3
adc
sub
sub
icebp
inc
enter
pop
stc
out
mov
push
mov
fsubs
jmp
cld
and
shr
mov
cltd
xchg
test
cmp
incb
xchg
gs
outsb
testl
push
pop
sarl
hlt
mov
in
lret
rcr
pop
sbb
mov
fs
inc
aaa
gs
add
sar
ret
fsubl
loopne
arpl
mov
xor
push
inc
pop
leave
leave
lahf
int
imul
jne
xchg
cmpsb
cmp
jns
dec
lret
pop
cmp
lds
xor
stos
int
mov
std
sub
push
add
mov
sbb
pop
jne
mov
lods
enter
ss
cmp
mov
mov
adc
out
sbb
push
xor
mov
cltd
je
push
xor
jb
js
inc
int3
inc
jno
mov
jae
movsb
mov
mov
add
sbb
jns
adc
orb
cltd
aas
jbe
jae
sti
pop
and
inc
sbb
push
sbb
hlt
and
xorl
cmp
outsl
insl
mov
fmull
cld
fwait
or
imul
lret
inc
jae
fwait
or
inc
in
repnz
cmp
pop
or
bound
pop
jp
addl
sarl
cwtl
add
mov
add
out
mov
js
xchg
mov
mov
rorb
mov
push
mov
mov
fimuls
lods
push
dec
loopne
jecxz
sub
or
rcrb
rolb
push
repz
bound
cmp
mov
es
imul
push
inc
daa
jecxz
jl
daa
jno
mov
push
test
ds
push
movsb
mov
int
adc
test
pop
mov
mov
fnstenv
repnz
mov
in
jne
jge
shlb
inc
ss
add
rcr
push
aas
jnp
cwtl
pop
gs
and
cmpb
mov
ds
add
iret
inc
loope
jb
jg
xlat
push
rclb
addr16
repnz
fidivrs
push
lds
cmp
jae
test
ret
xchg
lock
inc
mov
or
cmc
cmp
dec
sub
or
and
gs
mov
dec
call
cmpl
mov
fisttpl
inc
sahf
scas
and
xorb
call
adc
movsb
jbe
in
out
xchg
pop
in
imul
je
dec
fists
pusha
add
xor
pop
div
cwtl
and
pop
cmp
dec
lcall
popa
jmp
mov
test
add
xchg
and
cmpsl
enter
pop
mov
nop
xchg
push
sbb
scas
fwait
pop
rclb
pop
push
adc
enter
jp
sub
stc
dec
jmp
sbb
ret
and
test
add
aam
inc
insb
out
fneni(8087
add
mov
dec
pop
jle
sbb
mov
movsb
inc
pop
adc
sbb
sahf
leave
scas
mov
fcmovbe
roll
lret
push
jbe
mov
dec
pushf
inc
add
imull
data16
inc
movsw
cmp
inc
add
mov
push
out
ret
push
jmp
jge
and
xchg
push
push
sbb
and
push
scas
xchg
sbb
nop
sbb
ds
es
sub
movsl
cli
dec
out
je
sbb
cli
fildl
push
and
mov
pop
push
imul
iret
sahf
cli
jmp
mov
push
mov
shrl
xchg
test
iret
and
or
push
inc
outsb
or
shlb
negl
jp
mov
lock
jbe
dec
fdivrs
lods
adc
mov
and
push
pop
adc
into
and
inc
xor
add
js
adc
mov
test
loopne
cmp
dec
jp
scas
lahf
ljmp
xor
int
in
lret
and
fs
mov
leave
mov
sbb
xor
push
lods
aaa
xor
or
imul
ja
shr
sbb
push
rcl
arpl
in
lods
lock
test
mov
rclb
sarl
mov
pop
sarl
loop
adcl
movsl
xchg
mov
test
jle
dec
mov
mov
jl
mov
test
mov
shlb
cltd
xor
ja
push
sub
dec
ret
pop
lock
test
and
mov
sbb
std
ljmp
mov
test
adc
cmpb
lea
add
xor
jl
outsb
imul
mov
fwait
push
bound
je
adc
ja
push
xchg
orl
hlt
xchg
and
or
push
outsb
cmp
cwtl
inc
sbb
adc
roll
xchg
arpl
push
stos
mov
xchg
sub
sub
mov
xchg
push
xor
xor
pop
or
and
cmp
xchg
cmp
sbb
push
add
inc
mov
inc
jmp
scas
lock
push
pop
ja
and
loopne
bound
cs
pop
xorb
mov
mov
sahf
or
mov
pop
js
shrb
xor
inc
sahf
aas
jne
add
pop
mov
and
jb
and
mov
push
popf
ljmp
jns
xchg
cwtl
lret
subl
insl
and
cmp
out
loope
call
pop
add
ljmp
jl
push
mov
mov
int3
add
inc
or
pop
dec
jge
cmc
ret
stc
clc
inc
xchg
jle
icebp
shrl
mov
mov
mov
cmp
outsb
ret
xchg
sahf
cmpsl
clc
inc
std
cmc
adcb
jecxz
mov
mov
gs
into
mov
mov
mov
fwait
mov
nop
loop
rep
mov
xchg
cmp
incl
mov
scas
inc
dec
dec
dec
pop
iret
scas
push
add
popa
or
push
cld
jnp
pusha
or
xor
jae
je
jl
sarb
hlt
in
and
arpl
stos
xor
dec
sub
test
pop
adc
inc
mov
push
push
pop
sbb
and
cmpsl
mov
sbb
and
fucom
xor
popa
data16
jmp
out
ret
dec
sub
and
loope
and
add
into
pop
dec
js
dec
lret
fnstcw
fscale
sbb
xchg
aaa
mov
push
aas
lods
mov
lods
mov
movsb
mov
xchg
mov
or
sbb
mov
loope
gs
bnd
in
into
lods
fwait
or
mov
push
or
movsb
cmp
ja
push
jmp
cmc
pop
mov
cmp
dec
adc
add
out
xor
loope
std
adc
push
add
mov
cmp
sbb
adc
pop
out
aad
std
repz
negl
clc
mov
jl
rol
xchg
dec
xchg
push
cli
shrb
cmpl
cltd
inc
gs
imul
addr16
lods
int
mov
cwtl
ds
aam
sbb
call
cmpsl
mov
push
inc
cli
stos
js
dec
stc
dec
repnz
jns
sbb
xor
idivl
jge
aad
je
inc
ljmp
push
loop
enter
into
push
fisttps
or
aad
xor
jp
jg
in
adc
jge
lahf
xchg
data16
pop
rcrl
fsub
std
lods
mov
jns
out
repz
into
popa
mov
adc
or
icebp
adc
dec
xchg
fsubrl
test
in
xchg
cmp
cmpsb
or
dec
mov
call
xor
dec
mov
popf
inc
out
and
hlt
add
popa
test
jbe
clc
pop
push
imul
int
sbb
push
jmp
mov
push
sbb
pop
jb
cmp
push
cmpl
sbb
movsb
mov
push
pop
pop
sub
xchg
in
outsl
mov
inc
jae
insb
cmp
stos
popf
add
push
cmp
int3
pop
xor
daa
and
test
ret
add
add
mov
mov
xchg
mov
sarb
inc
adc
lahf
mov
push
pop
outsw
out
loope
adc
pop
bnd
jae
popa
xchg
or
pop
xor
xor
out
outsb
cmc
mov
jne
insl
xchg
out
movsb
les
or
das
ja
cmp
or
xchg
ret
aas
outsb
jbe
lock
cmp
inc
mov
push
popa
ds
inc
mov
push
in
rep
sti
imul
xchg
popf
leave
test
pop
dec
in
sti
insb
fsts
and
divb
dec
out
bound
pop
mov
sahf
push
inc
jmp
fstpt
sub
mov
adc
arpl
jle
mov
fistps
out
cwtl
shl
fdivrl
repnz
daa
sahf
xchg
ss
insb
sub
lret
outsl
xchg
lcall
or
adc
call
adc
cmpb
and
xlat
xor
push
and
insb
hlt
or
xchg
test
int
aam
icebp
dec
mov
sbb
fcoml
xor
mov
jb
iret
lods
sub
andb
dec
push
call
push
mov
sub
mov
sub
xchg
lahf
sub
mov
out
push
dec
xchg
enter
add
sti
jp
les
mov
cwtl
add
adc
sbb
xchg
test
js
inc
pop
push
cltd
xchg
and
push
pop
dec
jno
sbbb
and
push
adc
xor
leave
and
popf
stos
int3
or
mov
shlb
and
mov
pop
aam
pop
test
cmp
cli
mov
jle
sub
shrb
jecxz
in
sub
lret
into
pop
xchg
mov
sbb
clc
les
or
dec
or
ss
dec
mov
xchg
cmpsl
jno
outsb
or
ljmp
fldenv
and
pop
mov
jnp
lcall
cwtl
cmpsb
aaa
bound
or
movsl
shlb
sub
sti
repnz
aas
test
fs
gs
icebp
bound
enter
jns
out
dec
shlb
and
in
xchg
js
fs
sbb
aaa
sbb
push
mov
cmp
mov
fcmovne
jbe
int3
popf
xchg
xchg
add
or
add
pushf
sub
adc
sbb
ret
jle
enter
imul
inc
stos
mov
ja
dec
add
dec
dec
mov
imul
in
aad
mov
out
lcall
lods
scas
test
addr16
mov
push
dec
popa
mov
fsubrl
dec
and
xchg
mov
and
xlat
fs
pushf
or
xchg
mov
push
jp
pop
addl
fcom
cli
arpl
mov
xchg
insl
fistl
dec
and
mov
ds
adcl
out
xchg
cmp
lahf
pushf
push
cmp
cmp
adc
out
mov
arpl
pop
leave
xchg
mov
stos
js
test
addl
jge
jne
pusha
test
mov
xchg
xchg
and
push
popf
iret
leave
jmp
xor
sbb
daa
shlb
add
stos
add
dec
inc
mov
or
std
mov
xchg
mov
loop
arpl
arpl
mov
push
in
std
add
mov
lcall
or
cmp
push
add
nop
pop
adc
jge
push
cmp
popa
and
fnsave
sbb
dec
in
and
fidivl
mov
adc
rcrl
adc
push
bound
jmp
shll
xor
fdivrs
dec
sarb
ret
add
out
xchg
hlt
dec
loopne
cli
push
dec
jecxz
mov
push
mov
sub
or
ret
out
or
adc
adc
xchg
insl
aas
loope
inc
mov
jle
arpl
xor
mov
daa
pusha
xor
jb
pop
lods
out
mov
xor
xor
jnp
push
xchg
pop
ja
push
lret
loop
test
orl
jmp
mov
xchg
test
adcl
call
cmpsb
scas
mov
cwtl
ficoms
sbb
xchg
pop
xchg
pop
mov
adc
rcrl
cli
adc
leave
and
adc
adc
or
add
dec
and
addl
lcall
arpl
test
test
fisttpll
mov
adc
sbb
cmp
lret
pop
in
pop
stc
je
dec
mov
add
ret
push
call
cs
imul
push
jnp
popa
aas
addl
pop
mov
ret
daa
cmc
in
jecxz
mov
xor
lock
jmp
sahf
mov
xchg
cltd
popa
out
arpl
scas
lea
mov
or
movsb
cmp
cmp
mov
sub
outsl
lret
stc
insb
nop
mov
pop
mov
stos
dec
repz
jmp
test
inc
jo
dec
enter
and
cli
repz
out
pushf
std
fimull
mov
clc
or
je
pop
jg
ret
scas
sub
inc
pop
lods
loopne
js
or
sub
adc
mov
dec
cwtl
stos
popf
mov
pop
xor
int
mov
cmp
jae
mov
fwait
jb
jge
outsb
mov
add
or
inc
scas
inc
rcll
jno
mov
cmpl
gs
lret
dec
shlb
gs
push
pusha
mov
test
leave
pop
test
xchg
or
subb
iret
ret
mov
push
pop
enter
or
push
subb
or
jne
loop
push
jnp
lret
test
das
je
cli
scas
lds
ficomps
cld
cmpsl
stc
jno
popa
iret
imul
fiadds
ret
xor
out
add
xor
sub
arpl
jne
xorb
out
in
addr16
sub
xchg
jl
stos
test
pop
jne
outsl
mov
push
mov
jecxz
js
add
aaa
les
push
arpl
sub
inc
fistl
xchg
enter
into
sbb
dec
je
fcmovnu
nop
adc
xchg
loope
popf
test
iret
ljmp
and
loopne
and
mov
popa
cmp
mov
pop
cmc
push
jmp
mov
jl
or
add
dec
fidivs
adc
push
dec
xor
xchg
mov
jecxz
ljmp
cs
into
sub
aam
push
aas
add
push
inc
adc
dec
inc
imul
jae
adc
fsts
shll
dec
mov
mov
adc
dec
sahf
aaa
mov
fimull
loope
add
or
jbe
mov
sub
fstpl
sub
xor
push
cmpsb
pop
pop
dec
movl
push
cmp
pushf
loop
loopne
mov
out
xor
mov
rorl
mov
jne
jne
insb
test
push
pop
xchg
leave
es
cld
jecxz
in
cmp
out
int3
cmp
pop
mov
mov
sbb
push
cmp
jl
shlb
js
into
aad
insb
sbb
and
out
xchg
mov
pop
mov
fbstp
dec
popa
in
shll
inc
jg
dec
xchg
fsubrl
lods
aad
add
insl
repz
sub
hlt
pop
stos
jge
lock
cmpsl
push
fs
mov
dec
sub
outsb
fistpll
sbbl
xchg
pop
mov
enter
ljmp
imul
or
pop
cmpsb
hlt
xchg
inc
jecxz
jno
loop
fnstsw
dec
clc
jbe
add
and
pop
popa
subb
pop
add
mov
dec
nop
mov
cwtl
cmc
enter
and
mov
out
add
push
fucomp
ds
sarl
sbb
hlt
cltd
xor
adc
and
fisttpl
adc
jnp
xchg
xor
fs
aad
jne
gs
or
xor
add
fld
dec
bound
lods
jno
or
cmpsb
daa
xchg
sub
and
pop
es
pop
mov
bound
add
or
fdivs
cltd
shl
out
mov
cmpsl
push
sub
int3
xor
test
push
ljmp
xchg
pusha
mov
int
das
sbb
mov
and
mov
incl
fbstp
mov
jmp
stos
and
iret
inc
fisttpll
add
mov
adc
add
repnz
inc
ja
pop
iret
rcl
cli
mov
pop
fucomp
sbb
xchg
outsl
ja
ljmp
aas
hlt
hlt
js
cltd
and
push
ds
mov
pop
push
inc
mov
xchg
xor
fdivr
push
dec
cld
icebp
fistl
std
icebp
xchg
xlat
dec
pop
and
dec
je
mov
push
aas
inc
xor
cli
in
push
add
dec
cmp
stos
daa
mov
imul
inc
adc
dec
cmpb
cmp
fwait
pop
push
xchg
ret
stos
push
or
lret
sahf
leave
xchg
out
adc
stos
mov
cmp
push
push
loop
inc
lods
jle
fistl
aas
pop
fimuls
out
xlat
hlt
lret
and
push
outsb
stos
dec
popa
iret
push
insb
push
fldenv
xchg
imul
push
pop
and
jge
sti
cmp
dec
fisttps
add
outsb
movsl
shlb
cld
sub
int
mov
sub
jnp
les
cmp
push
or
adc
cmc
sarb
jne
push
sbbl
call
xchg
aad
adc
clc
test
sbb
aas
dec
call
dec
lcall
inc
pop
mov
scas
push
and
add
repnz
mov
lret
lock
in
ss
adc
rorb
xchg
mov
insl
mov
dec
or
out
push
xchg
cmp
or
mov
push
jbe
je
xor
in
lret
jae
loope
mov
or
jne
sub
lret
mov
lret
jge
mov
lds
in
scas
nop
fldt
pop
add
mov
add
inc
jno
lahf
cmp
inc
fstps
loopne
mov
or
sub
mov
xchg
or
fstl
cmpsb
in
cs
cmpsb
add
push
cmp
cmp
addr16
inc
mov
fsubrs
jle
cli
rcll
add
insb
dec
xor
adc
pusha
cmc
mov
xchg
out
int
pop
idivl
in
sbb
inc
enter
je
push
lea
sahf
testb
rorl
add
mov
cmp
sub
clc
pop
jmp
push
pop
mov
inc
insl
leave
daa
or
push
push
insl
adc
cltd
pushf
call
fimull
sbb
cmp
lods
loopne
adc
or
push
or
js
cmc
ljmp
pop
movsb
cmpsl
sub
dec
mov
jp
gs
rol
cli
lods
mov
push
mov
push
mov
adc
sbb
repnz
mov
sbb
mov
xor
or
popf
pop
dec
adc
popa
es
test
adc
mov
andb
test
rcr
orl
xchg
xchg
ja
jbe
push
xchg
jg
fldcw
cmp
sub
jns
lcall
pop
div
adc
shll
call
jl
mov
mov
ss
mov
jmp
mov
ss
das
divl
fdivrs
dec
and
popa
jno
dec
adc
xchg
loop
je
sbb
fimull
jmp
stos
and
xchg
and
and
std
jg
std
cmp
xchg
push
divb
add
mov
xorb
xchg
daa
neg
scas
mov
lock
inc
xchg
aam
aad
repnz
xor
push
mov
push
mov
pop
xchg
jb
movb
loope
sti
fnstenv
push
scas
jns
xchg
pop
xchg
sub
fucomip
jo
pop
flds
sbb
mov
dec
cmpsl
lods
out
jbe
shll
je
sub
inc
aam
jbe
and
sub
icebp
add
movsl
fsubrs
push
push
mov
aas
mov
mov
int3
gs
add
aas
xor
lds
and
test
cmp
ret
push
dec
lret
inc
cmpsb
inc
lock
sub
add
lahf
lods
fadd
fwait
dec
lret
ret
out
pmaxsw
fldl
rorl
pop
mov
xlat
paddb
nop
lret
mov
jg
mov
mov
jns
jae
push
shlb
ds
mov
and
xor
inc
adc
xor
mov
addr16
pop
inc
add
and
xorl
inc
adc
mov
in
aam
gs
sub
cwtl
sbb
rcr
inc
add
sbb
or
leave
bound
cmc
sub
in
jg
testl
cwtl
inc
jmp
popf
mov
loopne
lcall
cmp
sbb
jge
sbb
mov
xor
stos
mov
jl
mov
or
lahf
mov
fnstsw
loope
xor
jl
pop
dec
addr16
sbb
adc
cmpsl
mov
add
push
sub
lds
movsb
insl
repz
out
dec
bound
xchg
cmp
arpl
daa
add
fmull
cmp
je
mov
lahf
and
sbbb
cmp
test
pop
jae
add
lods
lcall
dec
mov
mov
push
iret
in
ljmp
leave
popf
xor
push
sbb
js
lret
in
cmp
or
mov
inc
xor
pop
adc
in
cltd
pop
cwtl
aad
daa
insl
sti
pop
xor
inc
pop
mov
inc
or
cmp
aam
add
das
pop
in
into
mov
aad
loop
mov
adc
inc
clc
int3
out
sub
aad
jl
and
icebp
mov
jo
or
sub
lret
ret
push
repnz
or
daa
jl
orb
xor
add
in
sub
loopne
sbb
sub
add
jae
mov
xchg
sub
jg
testb
test
orl
mov
cld
xchg
jp
cmpsl
fcmove
ficoml
push
mov
aaa
ja
stc
repnz
jmp
or
clc
or
push
cltd
imul
mov
dec
inc
cli
mov
inc
leave
pop
test
mov
addr16
mov
dec
aam
imul
popf
and
mov
add
out
push
dec
ss
out
lods
fdivrl
sbb
mov
je
cmp
sti
or
add
cs
sub
dec
lahf
ds
pop
mov
dec
enter
imul
stos
fistpll
xor
and
mov
and
fisubl
pop
push
push
rorl
notl
stos
icebp
sub
adc
inc
inc
leave
mov
andl
xor
in
add
loop
lahf
out
jns
xchg
dec
lcall
pop
cmpsb
cmp
xorb
sbb
ret
dec
rcrb
test
cwtl
mov
cltd
popf
ud0
pop
cli
notl
add
push
sarb
sbb
xlat
shll
loopne
push
add
xchg
repz
push
push
rsqrtps
out
inc
in
mov
jg
push
jns
call
sbb
dec
je
add
loop
xchg
dec
xor
sbb
inc
pushf
fld
or
lds
out
outsb
pop
sbb
xchg
les
out
scas
cmpsb
push
mov
lock
stos
out
daa
sbb
jnp
or
or
push
ljmp
rcrb
xorl
dec
mov
sahf
sbb
sbb
adc
ret
jp
dec
sub
mov
addr16
repz
or
inc
or
in
mov
or
dec
cmp
test
push
sbb
lods
shrl
shll
rcrb
add
xlat
sarl
shrl
aaa
sbb
scas
mov
pop
dec
sbb
cld
pop
clc
cli
test
int3
bound
xor
sbb
add
loopne
xchg
in
dec
daa
insb
inc
les
inc
aas
cmp
and
or
sbb
xchg
or
imul
cmp
cmpsl
ds
loop
pop
icebp
add
test
lock
fcoms
out
sub
and
mov
je
adc
mov
fists
loopne
les
ds
bound
mov
push
inc
sbb
js
lret
icebp
inc
and
loope
xor
mov
pop
and
mov
add
mov
sub
aaa
lock
add
pop
xchg
cmp
jne
aad
xchg
lret
pop
mov
xchg
mov
jne
rcll
xchg
push
jmp
sbb
adc
cmc
xor
lods
and
rolb
xor
sti
adc
outsl
sbb
movsb
sbb
pusha
test
sub
sub
push
push
ljmp
scas
and
push
sbbl
xor
test
push
push
mov
imul
and
mov
clc
arpl
cwtl
out
icebp
mov
sub
loop
jle
rol
subl
gs
sarl
xchg
in
xor
xlat
cs
orl
mov
clc
add
mov
push
lds
adc
stos
fdivrl
mov
rclb
sbb
out
mov
das
and
cld
testl
push
lret
push
les
jp
xchg
push
insb
dec
loopne
mov
popa
pop
shrb
repnz
cmp
aaa
loopne
ret
push
push
mov
ds
outsb
iret
lds
pop
dec
xchg
xchg
repnz
fs
lods
mov
fadds
xchg
sub
mov
push
and
mov
cmp
rcll
or
dec
lods
rorl
and
test
or
mov
jmp
iret
cmp
or
adc
cmp
arpl
popa
sbb
jl
cwtl
aaa
sbb
inc
repnz
dec
je
sti
out
sub
push
push
outsl
imull
dec
clc
push
add
sbb
sub
cmp
or
dec
mov
jg
mov
ljmp
sub
outsl
test
cmp
sub
scas
mov
jb
dec
xchg
push
push
aas
sbb
dec
loope
inc
jl
lock
ja
push
lcall
cmp
lods
xor
adc
aas
dec
rolb
int
xorl
enter
repz
push
adc
jnp
xor
fyl2x
insb
adc
ds
sbb
fs
and
add
cmc
fsubs
cmp
mov
ljmp
pusha
or
fsubrs
or
pop
pop
shld
out
inc
popf
icebp
fldt
imul
scas
push
dec
call
push
push
cmp
in
out
mov
lret
dec
xor
pop
sti
xchg
cmp
in
or
jl
in
jbe
mov
rcr
aad
or
mov
cmpsl
fsubl
js
push
push
mov
and
ror
mov
aaa
and
daa
adc
dec
dec
loopne
adc
mov
cmp
sub
cmc
lcall
in
subb
rorb
sub
ds
fisttps
inc
pushl
insl
cmpsl
rcll
bound
leave
nop
jecxz
repz
push
jbe
inc
subb
push
pop
push
mov
fnsave
mov
mov
xchg
lock
xchg
dec
xchg
sub
adc
movsb
outsb
pusha
addr16
jmp
add
jge
arpl
mov
jp
mov
mov
imull
negl
out
pop
into
scas
add
xchg
cmp
shlb
iret
jne
add
gs
rcrb
sbb
data16
ja
das
scas
fstps
mov
clc
mov
cs
and
mov
and
mov
sbb
mov
inc
std
sbb
lock
fcmovnu
test
arpl
pop
and
push
push
mov
pop
out
mov
leave
hlt
negl
shrl
sti
test
testb
xor
js
fildll
sub
and
dec
mov
xor
xor
push
mov
vpandn
test
jp
data16
mov
and
sub
cmpsl
mov
sbb
pop
int
rolb
or
push
fadds
dec
fnstcw
rcrb
into
and
push
repnz
andl
mov
fidivrs
insl
xchg
popf
stc
sbb
imull
mov
mov
popa
and
push
and
xchg
add
lahf
pop
test
das
scas
aaa
in
sbb
aam
add
jae
jb
sub
icebp
lcall
jg
sarb
xchg
insb
test
sbb
jge
daa
add
mov
stos
sti
addb
aas
loope
add
std
int3
push
lahf
lds
jmp
movsb
lcall
es
push
fs
inc
xchg
outsb
data16
je
imull
cmc
xor
testl
xchg
leave
shr
xlat
hlt
test
ret
clc
test
mov
inc
in
shll
rcrl
mov
adc
xchg
data16
icebp
add
dec
mov
fsubl
adc
dec
push
aad
lahf
notb
in
mov
sahf
dec
inc
shrl
add
add
inc
mov
cld
scas
inc
xchg
flds
jl
xchg
or
dec
ljmp
sahf
loope
xor
adc
xor
test
pop
mov
test
pop
cmp
push
push
sti
dec
mov
mov
or
sbb
mov
hlt
lcall
adc
push
xor
pop
inc
in
cmpsl
call
fisttpl
xchg
popa
adcb
fs
nop
test
test
mov
pop
sbb
not
sub
movsb
push
and
js
push
into
xchg
loope
lcall
shr
push
or
in
jg
jnp
and
fdivs
enter
mov
pop
dec
mov
mov
mov
stc
testb
sub
sbb
xchg
out
out
jae
pop
mov
fnstsw
outsb
test
ljmp
outsb
or
pop
mov
jg
mov
rorl
jno
xchg
test
nop
lds
push
mov
test
or
aas
out
test
outsl
jl
bnd
js
add
fucomip
push
adc
test
jecxz
add
pop
inc
dec
sbb
fisttps
push
aaa
lcall
loope
cs
enter
dec
lret
popf
xchg
call
jecxz
repnz
jmp
addr16
test
mov
imulb
mov
inc
pop
adc
in
mov
es
daa
movsb
divl
daa
shl
dec
arpl
in
fsubp
or
mov
ret
and
stos
iret
clc
popa
pushf
and
and
pop
bound
push
jno
mov
jno
enter
or
inc
sbb
loopne
xor
icebp
cld
les
push
hlt
scas
rdmsr
xor
mov
jecxz
jge
inc
pushl
jb
add
out
xlat
jo
das
and
call
mov
inc
std
jnp
fdivrs
jo
push
bound
push
jno
push
jge
or
xor
inc
mov
test
lds
lret
jmp
jge
add
cmp
out
int3
or
dec
xchg
imul
jnp
pop
fisubs
cmp
cli
xchg
test
xchg
xor
cld
xor
mov
insl
push
clc
mov
add
xlat
mov
mov
cli
sub
out
test
mov
mov
shll
dec
popa
outsl
loope
shlb
mov
movsb
out
scas
ljmp
mov
js
loop
sbb
test
add
js
cli
pop
mov
fnsave
nop
pop
push
and
push
jne
test
lret
adcb
and
out
mov
mov
outsb
popa
inc
cltd
in
test
test
add
or
enter
icebp
xor
jmp
inc
scas
pusha
fnsave
call
dec
ja
in
ret
leave
dec
and
xchg
fstps
das
repz
imul
xlat
in
jmp
jmp
add
jl
sahf
hlt
mov
mov
bound
out
push
cmp
repnz
out
dec
dec
sub
loopne
fbstp
out
lock
mov
lret
sbb
sub
test
jnp
rol
add
mov
push
xlat
cs
inc
push
dec
shlb
in
pop
nop
leave
sub
cmp
lcall
fstpt
adc
sbb
inc
arpl
test
inc
cli
mov
ret
stos
jmp
lock
sub
xchg
and
lods
lret
por
icebp
nop
lahf
sbb
xchg
roll
in
xchg
insl
and
fnstsw
ja
jg
or
ss
shrl
sti
les
dec
jp
cmpsb
incl
xchg
cmpb
js
ret
add
xor
subb
fsubrs
stos
aam
test
nop
les
out
ljmp
mov
pop
in
pop
adc
inc
lea
addr16
cmc
jle
faddl
xchg
mov
xor
lret
xchg
ljmp
shl
xchg
mov
adc
movsl
aad
mov
push
dec
testb
loop
inc
mov
push
insb
stos
pop
pop
insb
loopne
mov
mov
and
les
push
mov
mov
je
scas
insl
cmp
sub
jecxz
xchg
mov
mov
data16
xchg
cmp
in
pop
sub
invd
or
adc
dec
out
les
push
test
mov
popa
pushf
out
inc
ja
add
js
iret
mov
add
gs
shrl
addb
push
xchg
xor
daa
mov
mov
sbb
fidivrs
adc
sbb
scas
hlt
lods
je
mov
jb
mov
out
enter
adc
pusha
mov
and
fstpl
push
or
pop
push
add
lock
cmp
sbb
imul
ret
sti
xor
adcl
mov
lcall
and
pop
scas
push
jl
lea
cltd
push
mov
fcomp
popa
cmpsb
cmp
sbb
imul
stos
hlt
stc
popf
fcoml
xor
out
xchg
adc
pop
dec
push
das
dec
aas
cmp
dec
cwtl
inc
cld
push
test
dec
xor
dec
sub
push
or
jl
sahf
adc
mov
in
ljmp
mov
dec
push
cmpsb
xchg
stos
dec
xor
rcl
call
sahf
daa
cmp
insl
xor
insl
sbbb
cmpsl
mov
stos
push
sbb
xchg
or
jno
add
mov
and
xchg
aam
mov
mov
cld
outsb
jg
jo
or
xchg
lret
xorl
call
test
sbb
out
jmp
fmull
leave
icebp
cld
adc
jecxz
pop
cmc
jle
inc
mov
jno
fnstcw
mov
sub
rorb
rol
loop
movsl
cmpsb
add
sub
pushf
out
xchg
jecxz
jp
jp
mov
sub
fstpt
adc
call
in
lret
je
and
in
insb
repz
fs
lea
xchg
and
cli
lret
rolb
push
xchg
daa
fsubrs
rcrb
mov
popf
bound
sub
inc
std
pop
pop
movsb
and
cwtl
push
cmp
mov
pop
xlat
ficompl
cmpsb
addl
push
pop
les
fmuls
add
insb
cmpl
pop
cmp
nop
popa
add
js
jns
inc
push
push
mov
dec
mov
pop
ds
imul
cmc
das
dec
inc
mov
movsl
sbb
jecxz
pusha
push
fistpl
pop
aaa
push
or
xchg
add
mov
push
mov
push
mov
push
xchg
les
sub
rorl
add
xchg
mov
xor
mov
test
ja
xchg
fnsave
pop
adc
enter
mov
das
jmp
movsl
cmpsl
push
cmpsb
lret
out
cld
insb
xor
hlt
xchg
cmpsl
mov
sbb
dec
stos
out
adc
adc
pop
jbe
int3
xchg
dec
push
jnp
jo
inc
mov
fsts
fdiv
enter
call
and
in
leave
jno
mov
fsubrl
xchg
adc
insl
mov
cli
pop
push
test
repnz
stos
adc
pop
add
sbb
and
mov
mov
pop
pop
adc
fsubl
out
jmp
int3
daa
inc
sub
cmp
xchg
xchg
mov
sahf
stc
pop
add
fwait
adc
xabort
mov
jecxz
pop
sub
or
add
nop
xor
outsl
xor
imul
push
loop
cmp
rcrl
and
pop
push
data16
rorb
sbb
int
pop
sub
leave
imul
xchg
and
adc
movsb
addr16
gs
pop
sbb
xchg
dec
popf
hlt
add
mov
mov
imul
mov
jo
push
mov
popf
jno
arpl
dec
or
pop
lods
jp
dec
scas
subb
fcmovnu
xchg
subl
and
call
cs
iret
lcall
insb
imul
lcall
push
lock
stos
xor
sub
xchg
lds
pop
stos
mov
mov
push
dec
and
fisttpll
movsb
sub
int3
cltd
out
cmp
aad
mov
jmp
jnp
push
xchg
push
ficoms
insb
and
fisubl
adc
loopne
imul
xor
add
adc
adc
or
xchg
xchg
ds
xchg
push
in
test
ljmp
and
jb
fadd
mov
or
mov
dec
adc
test
xor
dec
jb
ret
jnp
sbb
pop
je
popf
subl
outsl
test
cmp
inc
sbb
jg
scas
sub
dec
push
cwtl
cs
xor
dec
dec
inc
mov
inc
lock
mov
imul
inc
mov
dec
xor
cwtl
arpl
push
popf
inc
mov
add
push
arpl
divl
addr16
mov
push
mul
adc
push
hlt
es
loope
ret
and
test
cmp
add
jl
mov
jbe
mov
loop
mov
sbb
out
cmp
cmp
add
fsts
stos
rcrb
dec
jno
cmpsb
jbe
xchg
jo
xor
fisubl
jne
xchg
movsl
or
mov
dec
nop
xchg
push
stos
mov
jg
in
icebp
xchg
sub
test
aad
mov
mov
xchg
xorb
inc
sbb
push
movsl
xchg
adc
daa
je
push
jp
stc
sub
ds
inc
inc
test
or
nopl
leave
je
lahf
neg
push
pop
mov
pop
fmuls
bound
sbb
sub
cmp
mov
xor
xor
outsb
outsl
jb
jb
adc
fldl
inc
aad
push
inc
arpl
mov
cmp
lret
negb
or
aas
push
add
ficomps
scas
mov
or
jo
jmp
insb
mov
test
cmpsb
out
test
das
inc
ficompl
loop
pop
jo
jne
xor
pop
adc
xchg
pop
cmpsb
sbb
cltd
jge
mov
fnstenv
hlt
mov
xor
rolb
jbe
xor
cltd
cwtl
sbb
sub
inc
push
out
fidivl
in
jns
gs
shrl
addr16
xchg
mov
cmpsl
fcompl
jae
rcll
xchg
xchg
and
mov
cmp
push
jl
add
cmp
mov
psllq
sarb
jae
int3
and
adc
mov
mov
stos
es
lds
cmp
repz
mov
lahf
push
out
insb
call
outsl
test
test
add
daa
loope
sbb
xor
mov
in
arpl
mov
dec
push
dec
dec
popa
xchg
adc
or
test
cmovg
push
xor
jle
shlb
aas
mov
inc
xor
es
xchg
dec
mov
adc
mov
adc
mov
push
pusha
fcmovnb
or
mov
das
mov
dec
lea
in
jae
jl
mov
clc
pop
imul
cmp
mov
jae
dec
in
icebp
imul
jnp
push
lds
or
idiv
or
pop
hlt
stos
fwait
xchg
test
fldt
pushf
decl
xchg
addr16
shlb
xchg
xlat
xchg
mov
stc
adc
shll
ja
cli
dec
jae
and
popf
adc
mov
adc
dec
push
add
mov
leave
lods
mov
lret
cmp
rcr
xchg
gs
adc
add
sub
dec
shl
xchg
push
sub
scas
cmc
lret
test
mov
sub
jp
rolb
add
mov
fwait
xor
cmp
xchg
adc
mov
mov
cmc
popf
lahf
out
add
cwtl
loope
stc
xor
pop
shll
push
add
inc
outsb
dec
pop
push
int3
add
test
inc
lods
dec
fmuls
popa
mov
aaa
dec
lahf
cli
sbb
insb
xchg
movsl
lds
sub
push
rorl
xchg
mov
lahf
js
xchg
push
jg
ret
mov
test
aaa
outsl
jmp
out
xchg
mov
cmp
push
fwait
push
mov
push
das
push
xchg
dec
ret
sbb
int
movsl
lahf
xchg
out
mov
pop
bnd
adc
sub
add
mov
and
xchg
dec
cmp
rcll
clc
lret
movsl
sub
hlt
aas
mov
xchg
decl
jmp
lods
fcmovnu
sub
subl
jmp
mov
xchg
leave
or
orb
push
push
mov
fcom
js
mov
in
mov
mov
sbbl
jnp
jmp
mov
sub
mov
aas
iret
int3
push
mov
inc
out
sbb
nop
inc
das
cmp
push
les
jg
xchg
add
test
loope
jle
push
jb
dec
dec
push
jp
dec
xor
test
mov
jecxz
std
loope
push
sbb
into
sbb
mov
fisttpll
or
lret
xchg
mov
mov
jo
cmp
cli
pop
push
rcr
inc
in
cmpsl
sbb
lret
enter
test
fmul
cmp
cs
or
xorb
lret
sub
add
pop
mov
cmc
xlat
flds
stos
sub
sarl
outsl
adc
pop
xchg
je
call
pop
sub
mov
lret
aaa
push
or
xlat
nop
cmpsb
in
out
scas
inc
dec
push
jg
push
or
mov
gs
insb
jg
pop
ja
jns
add
arpl
repnz
sub
xchg
and
bound
sbb
cmpsb
xor
xorl
pushl
jbe
sbb
aad
aam
adc
into
jg
das
sbb
inc
cmp
xor
aad
add
sahf
xor
mov
sub
popf
xchg
imul
cmp
ljmp
aam
ss
sti
ss
rcrb
pushf
shll
mov
out
xor
push
push
cmpsb
sbb
shl
push
pop
jl
or
or
inc
jbe
ss
push
gs
adc
inc
movsl
dec
cwtl
lret
mov
sub
cmp
add
ljmp
int
inc
jo
arpl
enter
dec
aam
sti
adc
sub
je
add
adc
lahf
repnz
mov
add
outsb
or
arpl
ret
xor
add
aad
xchg
mov
pushf
push
int
adc
sar
xchg
rcrb
dec
mov
lahf
mov
fnstsw
mov
push
lods
dec
gs
mov
jg
inc
pop
loope
xchg
daa
cmpsb
adc
sub
cli
insb
sarl
xchg
pop
mov
push
stos
adc
div
int3
fcom
sub
add
loop
cltd
scas
pop
sahf
cmp
or
mov
mov
push
dec
clc
inc
insb
add
nop
inc
lret
xor
outsb
test
mov
pop
rclb
xchg
or
sahf
cli
flds
sub
jmp
adc
gs
cltd
jg
scas
clc
mov
insl
sub
push
js
sbb
pop
add
enter
or
adc
adc
jno
push
pop
fidivs
cwtl
clc
mov
flds
xchg
lret
mov
dec
mul
es
or
ss
jge
ds
lret
daa
movsl
mov
mov
ficomps
pop
lea
loope
fisubs
add
mov
stos
fnstcw
pop
aas
jmp
jno
addr16
hlt
fcmovbe
dec
dec
jo
mov
imul
mov
in
xlat
xchg
pop
dec
mov
dec
into
xchg
xchg
inc
lea
ret
pop
sbb
aam
xor
and
xor
aas
pop
out
pushf
mov
adc
jmp
xor
pop
fisubrs
fistpl
fsts
push
into
pop
cmp
sbb
cld
pop
movsl
and
mov
inc
mov
iret
jnp
pusha
sub
cld
mov
mov
dec
mov
gs
inc
test
and
dec
test
lcall
movsb
cltd
ljmp
outsl
adc
push
mov
aas
sti
jl
cmp
sbb
pop
or
pop
nop
ja
fucomi
add
fcoms
arpl
out
cmp
and
mov
ret
cmp
data16
inc
sarl
call
insb
mov
inc
dec
or
ss
repz
mov
jbe
dec
mov
xor
imul
out
outsb
fldl
inc
and
add
ljmp
or
cmc
pushf
dec
fimull
and
xchg
xor
movsb
xor
dec
clc
das
stos
mov
dec
push
jne
sub
flds
popa
adc
out
push
cmp
popf
xor
das
notl
lds
cmp
clc
xchg
outsl
out
xchg
push
in
xchg
jg
xor
jbe
and
and
or
pop
lret
mov
aaa
jg
inc
stos
int3
jnp
fsubrs
aaa
mov
movsl
mov
pop
stc
orl
or
stc
xor
add
mov
notb
sbb
xchg
out
or
fnsave
dec
out
push
popa
cmpsb
pop
cli
lds
into
pop
lret
mov
pop
mov
jae
les
xchg
inc
cmpl
sar
mov
jno
insl
and
loope
daa
fsubrl
sub
dec
stos
xchg
push
mov
add
pop
scas
imul
xchg
jmp
xchg
cmp
stos
fiaddl
mov
dec
rorb
insl
push
cmp
insb
mov
mov
rcl
iret
sub
dec
aam
outsb
jb
jecxz
sbb
dec
mov
sarl
mov
mov
dec
xchg
jo
xchg
loope
sbb
inc
or
loope
inc
sub
les
mov
stc
into
mov
andl
adc
sub
dec
push
ret
mul
nop
icebp
sub
xchg
add
sub
jmp
loope
cmpsl
and
pop
ret
mov
inc
xchg
cmc
cwtl
sbb
movsl
lret
sub
pop
test
cmp
stos
aas
or
test
mov
adc
test
std
in
push
clc
adc
dec
xlat
ja
icebp
adc
push
sub
or
das
or
imul
out
or
jno
gs
dec
adc
mov
movsb
push
cwtl
imul
insl
rorb
nop
andl
ret
and
add
dec
mov
sub
jg
int
insb
and
mov
dec
dec
jns
movsl
cmp
stos
sbb
cld
dec
pop
jmp
add
lods
testb
inc
addb
xchg
xchg
scas
repz
gs
xchg
mov
scas
add
mov
add
push
ret
ss
mov
mov
adc
dec
jmp
xor
push
fldenv
pop
add
mov
cld
push
repnz
push
packuswb
dec
je
cli
pop
xor
add
das
add
push
in
outsb
add
and
xchg
mov
xor
inc
movsl
sub
and
daa
dec
rol
add
sub
mov
daa
jp
pop
mov
ss
hlt
mov
adc
int3
lcall
push
or
mov
in
in
jmp
jnp
cmpsb
shl
xchg
mov
dec
lods
jecxz
mulb
test
cmp
inc
push
dec
decl
into
jnp
sbb
popa
push
xchg
shr
in
mov
and
test
js
into
dec
push
fisubs
jmp
std
lea
data16
enter
xchg
lods
popa
dec
cmp
rcll
xor
dec
cmp
test
fstpt
in
ret
cmc
xor
shl
enter
pop
mov
popf
jmp
cmpsb
fisubrl
or
xor
add
jmp
stos
push
sbb
or
mov
fiaddl
and
mov
ret
and
mov
mov
jle
mov
and
icebp
fs
ret
test
or
jne
gs
mov
xor
xchg
pop
mov
mov
mov
subb
inc
mov
enter
lahf
addl
sti
repnz
add
jb
dec
or
shl
jbe
loopne
pop
je
mov
mov
nop
mov
pop
sahf
je
xor
mov
in
inc
mov
inc
pushf
mov
lock
imul
cmp
stos
add
dec
adc
ljmp
int
cmp
fwait
sub
cmc
cmp
mov
adc
ljmp
insb
mov
add
adc
ror
movsb
add
xchg
insb
aaa
fs
jge
add
movsl
cmp
scas
jne
sbb
iret
pop
subb
mov
mov
rcll
or
pop
cmpsl
push
jae
fbld
mov
mov
aaa
daa
mov
pop
cltd
imul
test
adc
testl
xor
notl
xor
imul
std
sbb
and
lods
xor
cmpsl
in
xchg
shrl
push
xor
jo
xchg
shrb
mov
xchg
sub
mov
push
jno
fwait
daa
cli
dec
sahf
dec
and
cmp
leave
jbe
mov
fwait
jl
popa
std
xchg
pusha
adc
pop
cmp
xchg
add
sbb
ret
imul
xor
aas
ljmp
dec
loopne
mov
movsb
into
push
ret
test
lcall
lds
cmp
cmpsb
or
fldenv
bound
sub
popf
jae
ds
jno
lock
mov
add
cmp
xchg
loop
inc
leave
push
push
fisubrs
push
xor
loopne
mov
popa
mov
into
sahf
in
imul
mov
icebp
rol
cltd
jmp
sarl
jo
mov
daa
aas
inc
outsb
ficompl
cmp
insl
imul
jb
scas
dec
addb
adc
pop
out
loopne
xchg
ret
push
push
into
movsb
adc
cmp
push
mov
xchg
scas
xor
fcmovu
arpl
inc
mov
in
daa
mov
aad
dec
sti
or
xchg
cmc
mov
mov
xor
xchg
popf
xchg
sbb
hlt
nop
mov
nop
jnp
fdivp
inc
mov
and
mov
shr
in
repnz
add
out
sbb
mov
pop
movsl
sub
dec
dec
scas
inc
popa
mov
dec
inc
mov
ret
nop
out
dec
cmp
stc
daa
xlat
inc
or
xor
xchg
stos
jge
ljmp
pop
mov
adc
movsl
sbb
xor
xchg
xor
inc
int
adc
mov
test
repnz
pop
incb
add
mov
fldcw
xor
jo
clc
and
jmp
pop
inc
jnp
xor
mov
test
xor
cmc
stc
aas
pushf
cwtl
add
add
and
add
dec
inc
jmp
pop
lret
popf
push
imul
inc
subb
add
mov
pop
cmp
mov
test
inc
or
xchg
jae
mov
repz
arpl
jl
stos
jge
fwait
pusha
and
test
inc
push
inc
mov
fwait
jne
test
add
idiv
adc
push
cmp
fimuls
lahf
sbb
into
addl
addr16
xlat
sbb
pop
push
jg
cmp
sti
xor
fsub
pop
inc
inc
jae
or
or
int3
aam
rorl
cmpsl
sub
fbld
and
fmul
dec
rolb
repnz
pop
jae
xchg
xchg
cmp
fcompl
mov
dec
into
add
jnp
xor
jae
xor
mov
push
push
movsb
in
shll
dec
inc
test
cmp
mov
ljmp
xchg
xor
mov
or
ret
mov
dec
sub
mov
dec
in
jge
and
mov
mov
xchg
jp
icebp
subb
mov
jle
jb
je
cmpsl
jae
mov
jne
pop
sbb
push
in
into
std
ja
andl
xchg
inc
push
jb
pushl
xchg
out
cld
aad
and
or
dec
call
jge
lret
lahf
cmp
xor
or
xchg
aad
xor
in
loopne
imul
mov
int
or
push
loop
pop
mov
xor
in
mov
add
adc
or
pop
imul
inc
pop
jmp
mov
in
ret
mov
and
cmpsb
test
test
inc
add
addr16
or
ljmp
in
in
fld
movsl
and
out
sub
lods
pushf
popf
leave
loopne
xchg
mov
push
pop
vpunpcklqdq
sub
in
and
mov
sbb
ret
pop
jb
mov
fldcw
ret
mov
lahf
mov
pop
push
lret
mov
jae
mov
cmpsl
icebp
xlat
xchg
jo
test
insl
pop
int3
mov
adc
aad
imulb
dec
mov
sub
xor
push
or
push
daa
ljmp
fisubrl
jno
mov
aam
mov
mov
in
outsl
mov
sarb
pop
xor
sub
faddl
push
cmpsb
adc
adc
push
adc
loopne
cmpsl
adc
andb
jp
imul
dec
out
scas
adc
lahf
jg
insl
hlt
inc
push
frstor
out
and
pusha
or
sub
xchg
mov
pop
or
cmp
pusha
mov
insb
cmp
mov
inc
insb
inc
push
xchg
leave
lock
cmp
movsb
xor
sbb
adc
stc
adc
clc
and
adcb
adc
inc
lods
movsb
stos
mov
cmp
push
repz
sti
jno
loope
adc
sahf
repz
shrb
loop
and
mov
xchg
jns
pushf
xchg
and
push
adc
mov
mov
aam
shlb
push
shlb
iret
add
fidivs
loopne
cltd
rol
dec
push
cwtl
ljmp
pushf
mov
inc
sbb
cltd
dec
sbb
jmp
sbb
or
cmp
mov
in
inc
and
movsb
cmp
inc
add
sbb
mov
mov
sub
cmpsb
jg
push
cmpsb
xor
lock
int
pop
mov
scas
clc
and
or
sbb
adc
pop
cmp
stos
rcll
leave
out
dec
push
cli
mov
sbb
ret
mov
add
inc
mov
fwait
sbb
jl
mov
add
cmp
in
lds
dec
inc
mov
mov
fdivr
dec
jnp
stc
movsb
cmpsl
mov
shll
lock
orl
gs
push
sub
inc
inc
loopne
inc
int3
xlat
fmuls
push
jl
mov
roll
ja
addr16
pop
in
pop
and
jle
xchg
mov
fmul
xchg
cld
data16
lock
adc
and
push
fimull
stos
pop
sbb
and
imul
xor
or
cwtl
andl
lea
and
icebp
ficoms
pop
dec
mov
outsl
enter
cld
cltd
outsb
mov
or
push
jg
pop
push
cmp
fistl
loopne
clc
cmp
dec
loop
mov
out
lret
fs
ror
pop
in
mov
icebp
or
dec
push
jl
push
pop
aad
enter
push
insl
adcl
xor
cmp
into
aam
push
pop
xchg
popa
cmc
fistpll
xchg
les
pop
mov
clc
adc
add
xor
xchg
and
and
dec
jbe
shlb
mov
clc
iret
xor
icebp
pop
jb
mov
jne
mull
in
pop
xchg
pop
sahf
cmp
subb
push
mov
test
jnp
cmp
cwtl
sub
jae
jg
test
shll
std
cmpsb
fldt
cmpsb
clc
cmp
addb
cld
outsl
in
push
loop
add
aaa
mov
stos
cmc
sbb
pop
jl
and
icebp
push
pop
stos
lods
xor
add
dec
mov
jo
das
loope
popf
push
cltd
jae
pusha
xchg
dec
inc
jecxz
icebp
out
sbb
cli
xor
dec
mov
shlb
fwait
dec
or
in
mov
jne
ja
lock
mov
data16
mov
inc
add
xchg
mov
aaa
cli
sbb
push
loop
cwtl
sbb
pop
xchg
lock
pusha
push
mov
outsl
jb
add
fldcw
stc
mov
sub
mov
push
fdivs
sub
negb
mov
add
scas
arpl
or
mov
mov
add
push
mov
cli
popa
ss
std
sub
and
std
dec
movsl
mov
out
xchg
cmp
add
rcll
add
aas
mov
sarl
sbb
bound
insb
mov
jnp
jne
cmovns
fld
inc
seta
inc
lea
xchg
testl
push
push
andl
movsb
adc
ss
in
std
cmpsb
ds
clc
xor
and
jmp
xor
in
lidtl
and
int3
cwtl
pushf
xor
sub
imul
into
int3
shlb
xchg
mov
addr16
nop
xlat
popf
cli
mov
jp
out
movsl
mov
mov
pop
dec
aaa
mov
clc
pop
sbb
adc
in
mov
hlt
sub
xchg
mov
xchg
push
dec
jg
mov
inc
int
test
mull
das
xor
dec
fwait
push
adc
push
scas
and
xor
daa
int
pushf
push
shlb
fnsave
test
jp
sbb
push
cmc
bnd
lds
std
inc
mov
in
mov
cmc
xchg
adc
scas
in
push
and
sbb
mov
cmp
inc
call
mov
dec
data16
and
insb
mov
aaa
les
insb
jp
inc
inc
add
or
add
ret
push
cmp
pop
add
cmc
inc
stos
jno
jmp
push
aam
adc
nop
cmpl
mov
jle
add
orl
clc
cmp
sbb
in
aas
mov
lds
out
dec
xchg
jbe
jne
pusha
iret
popa
pop
popa
inc
pop
push
cmp
adc
stc
xor
xchg
dec
out
fisttps
adc
push
test
gs
call
and
add
subl
imul
fwait
cmp
inc
outsl
movsb
loopne
cmp
notb
jns
sbb
push
imul
les
xor
mov
inc
fbld
les
mov
lret
aaa
jl
ja
cmp
fstps
jecxz
or
js
and
xor
imul
repz
sbb
inc
ret
movsb
je
xlat
ds
popf
sbb
data16
mov
ret
adc
pop
mov
movsl
xlat
pop
add
dec
xor
aad
enter
adc
andl
push
inc
cltd
call
mov
sbb
push
xchg
lock
sbbl
add
mov
nop
xor
ret
sbb
mov
xor
pop
loop
bound
xorb
dec
or
insl
xchg
jns
ret
imul
rcrl
mov
sbb
sub
cmp
in
and
mov
out
sub
mov
push
xchg
pop
mulb
xor
mov
out
xchg
cmp
xchg
jo
mov
je
sub
cld
sub
mov
test
sbb
mov
pushf
fsubrs
pushf
pusha
das
test
pop
mov
mov
dec
xor
aaa
test
js
out
ja
add
pusha
jmp
sbb
dec
mov
xor
adc
or
mov
stc
jl
dec
ljmp
shll
or
push
jb
fs
lahf
mov
pop
cmp
mov
push
fs
mov
sub
jl
es
mov
cmp
dec
fstp
mov
movsb
cmp
loop
imul
sbb
cmpsl
mov
add
push
and
push
dec
and
mov
inc
insb
mov
and
icebp
rcr
jl
leave
xchg
inc
xchg
ja
js
adc
add
xchg
fnstcw
into
push
cld
movsb
pushf
outsb
mov
jno
mov
xor
adc
add
mov
xchg
dec
xor
cmc
or
or
xor
and
dec
sbb
mov
mov
out
add
sub
nop
mov
mov
fisubrs
dec
push
pop
in
repz
out
cmc
cs
fimuls
inc
cmpsl
xchg
pusha
mov
jne
or
or
inc
cmp
push
nop
mov
xor
iret
mov
jmp
and
add
fcom
push
popw
push
test
add
arpl
mov
xchg
xlat
adc
push
mov
data16
insb
mov
push
lds
mov
mov
int3
pop
jl
jle
dec
push
fwait
inc
sub
sub
lahf
sarb
ds
shr
out
sub
pop
shlb
fnstsw
mov
into
jp
data16
xchg
adc
add
inc
pop
mov
sub
popa
push
sub
pop
or
cli
inc
test
jl
add
mov
jnp
mov
jno
mov
add
outsb
iret
cmpb
stc
fwait
push
cli
xor
mov
es
scas
in
mov
call
lahf
repnz
sahf
int
out
push
inc
xchg
jo
lahf
out
das
jns
stos
jae
outsl
xchg
arpl
mov
ret
adc
push
iret
lea
mov
sub
add
cmp
insl
cmp
or
xchg
lock
daa
imul
dec
push
jne
or
mov
and
cmp
sti
adc
xor
pop
cmp
lods
inc
mov
sbb
mov
jg
aas
lods
cmpsl
scas
sub
dec
in
pop
fiaddl
xor
lock
xor
and
loopne
je
lea
fiadds
ljmp
pop
call
mov
dec
ret
repz
aas
or
sbb
or
aaa
dec
mov
xor
fmul
mov
and
adc
inc
sub
add
inc
dec
int3
sub
xchg
test
vpperm
cmp
lock
xor
fidivrs
ss
popf
pop
dec
sub
sarl
lret
and
jbe
subb
sub
sub
outsb
rorb
ss
rclb
add
pop
and
arpl
inc
and
jb
int
push
push
add
rcrb
subl
gs
add
lret
xchg
mov
push
mov
push
add
imul
lea
and
pop
pop
adc
xor
jo
push
fldcw
pop
mov
mov
hlt
sahf
js
sub
lret
cmp
jno
adc
xorl
les
jb
arpl
cmc
adc
mov
mov
push
mov
notl
push
mov
test
popf
fabs
cmp
sub
xchg
cmpsl
pushf
lock
test
pop
mov
mov
sbb
dec
sti
test
loop
lcall
lock
arpl
orl
dec
mov
repz
jmp
aam
repnz
fcmovbe
jnp
cmovns
lea
pop
mov
sub
xchg
cmp
and
sbb
or
sub
pop
ja
in
jle
insb
imul
or
push
loopne
lcallw
jge,pn
or
cmpsl
or
pop
sbb
or
mov
ds
add
jmp
orl
je
sbbl
sti
and
adc
stos
jp
jno
mov
sbb
or
iret
cmp
add
in
sbb
hlt
xchg
popf
idivb
inc
out
mov
xchg
iret
mov
fbld
cmc
jmp
xorl
push
stos
xlat
imulb
jns
cltd
inc
dec
cs
mov
sbb
es
test
push
insl
in
pop
lret
loopne
dec
xor
and
mov
adc
sub
add
add
mov
cmp
iret
sbb
in
sahf
subl
shll
movb
and
fistl
stos
pop
adc
and
data16
lahf
es
xor
pop
mov
in
xchg
dec
inc
jno
outsl
adc
mov
adc
ret
enter
in
sub
add
loopne
mov
sub
mov
mov
loopne
ds
lock
xchg
and
xchg
arpl
stos
push
mov
dec
test
push
inc
pop
and
push
mov
lods
adc
mov
popf
sub
pusha
clc
ret
rsqrtps
mov
and
mov
mov
push
mov
xchg
fbld
pop
push
or
in
faddp
pusha
loope
adc
mov
aam
leave
sub
aaa
cltd
inc
lcall
mov
inc
jp
lods
push
mov
push
test
lcall
xor
dec
mov
push
nop
popa
or
pop
cmp
mov
out
and
cmpsb
repnz
add
inc
dec
or
push
inc
ja
loopne
fs
fimuls
inc
mov
ss
cmpsb
jnp
adc
adc
lds
lcall
push
lock
arpl
roll
inc
movsl
cmp
enter
add
loope
mov
aaa
sub
mov
jl
sub
bnd
xchg
out
fisubs
sbb
mov
xor
jg
mov
dec
int3
cld
lods
sbb
lock
add
mov
shl
mov
sbb
mov
adc
fldpi
repz
sub
adc
sbb
iret
push
mov
ss
mov
dec
pop
outsl
mov
xchg
in
stc
mov
cli
mov
clc
roll
in
pop
sahf
jge
in
push
loopne,pt
push
lret
mov
lock
and
daa
roll
lcall
das
adc
out
or
mov
ret
sub
xor
dec
ja
jnp
sbb
pop
xchg
cmpsl
es
and
push
test
jecxz
out
mov
lret
inc
movsb
das
inc
cmp
mov
lods
cs
mov
decb
push
pop
in
mov
push
sub
sub
cmp
mov
movsb
scas
enter
push
pop
xor
add
dec
cmp
jb
push
xlat
mov
push
in
push
xor
pop
mov
mov
push
mov
jo
mov
cli
test
cmp
bound
aas
cmp
mov
inc
sub
imul
mov
test
std
in
cs
loopne
jmp
cmp
ja
ret
mov
imul
mov
inc
mov
and
or
repnz
sbb
xchg
call
push
cmp
into
movsb
sbb
int
mov
fdivp
xchg
and
mov
xchg
push
outsb
inc
iret
in
int
in
cli
and
mov
mov
arpl
adc
pop
cmpsb
dec
mov
inc
mov
jno
pushf
push
mov
insl
add
ja
cli
mov
inc
xchg
and
pavgw
pop
xchg
add
lods
jne
into
or
loop
in
add
inc
inc
aas
lods
sub
outsb
sub
popl
sub
mov
adcb
pop
jle
inc
fucom
jmp
in
push
clc
xor
insl
mov
dec
imul
add
shlb
push
int
pop
fisubrs
cmc
mov
outsl
and
out
mov
std
add
sbbb
add
add
cmp
lods
test
push
cltd
fnstsw
cmp
and
push
enter
pop
sub
sarl
cmp
xchg
adc
or
pop
inc
pop
pop
and
fstp
cmpsl
js,pn
inc
loopne
push
sbb
fwait
jns
mov
and
loopne
dec
int
adc
leave
jno
pop
pusha
lods
xor
pop
jo
enter
xor
ss
mov
or
mov
sub
enter
adc
dec
add
lods
loopne
dec
pop
ljmp
and
addr16
cmc
mov
dec
sahf
mov
leave
aam
scas
sbb
outsb
mov
push
ret
lds
popa
popf
xor
jns
lods
jne
movsl
jp
sbb
or
imul
mov
inc
lret
xchg
nop
lods
fs
popa
movsb
lods
sarl
mov
mov
mov
cmpl
movsb
lock
adc
lcall
orb
std
dec
lret
mov
test
hlt
fisubs
mov
mov
push
xor
les
inc
ds
dec
mov
mov
xchg
jecxz
cmp
fists
jne
or
push
lret
dec
dec
and
fs
sbb
mov
mov
cld
mov
rorl
adc
sahf
dec
fdivs
fisubl
shll
fisttpl
add
sub
xchg
mov
frstpm(287
mov
je
test
mov
loopne
enter
mov
dec
and
leave
jo
idivb
icebp
push
mov
xor
and
fdivrs
je
ret
shl
shrb
or
cmp
fwait
je
sub
daa
faddp
xor
fnstenv
pop
cmp
int3
pop
stos
pusha
cmp
cld
jae
xor
xchg
pop
mov
mov
or
lock
sub
jl
aam
adc
push
cltd
adc
dec
jno
ds
mov
adc
int
pop
jmp
push
cmpl
rcll
mov
insb
xor
mov
mov
test
jb
nop
lahf
cmp
pop
repnz
addr16
mov
dec
jp
data16
jecxz
jno
jne
divb
packssdw
cltd
lcall
push
and
stc
repz
int
cmc
or
jmp
pop
cmp
stc
or
imul
dec
adc
ss
push
lcall
lea
jp
sub
movsl
out
inc
and
jns
popa
fdivrl
adc
jnp
ss
xlat
fwait
enter
daa
pop
daa
xor
lea
adc
filds
movsb
loop
mov
cmp
dec
and
std
dec
pop
sbb
xchg
and
mov
iret
mov
int3
outsl
dec
jns
mov
in
movsb
cmc
or
addr16
jo
pop
mov
push
out
mov
fldt
popa
push
push
call
mov
sub
stos
and
fstpt
out
fwait
arpl
jnp
test
inc
push
jbe
in
add
lock
shll
les
or
xor
sbb
test
icebp
mov
lods
push
push
dec
sub
mov
lcall
xchg
dec
and
aad
sbb
in
pop
pop
xor
dec
or
sarb
push
add
mov
xor
mov
orl
jmp
dec
or
sbb
sbb
pop
pop
inc
lret
mov
dec
mov
mov
lds
scas
mov
mov
mov
xor
clc
sarb
and
xchg
mov
sahf
push
shll
adc
shlb
jns
ljmp
outsb
cmp
xchg
add
add
adc
scas
cs
sar
mov
ret
inc
or
push
loop
add
ss
dec
jmp
cmp
mov
es
mov
xlat
mov
push
in
cli
out
or
mov
aad
shrb
push
in
cs
pusha
push
fildll
jecxz
xchg
mov
ss
push
test
out
add
dec
jmp
sbb
jnp
stos
or
iret
pop
sarb
repnz
cli
pop
jge
jne
loope,pn
sbb
or
daa
test
rclb
push
aam
push
sub
or
pop
sbb
and
inc
mov
lahf
pop
cs
out
mov
inc
insb
repnz
jns
pop
xor
mov
inc
push
mov
jb,pt
jmp
scas
inc
js
and
sbbb
mov
aam
lcall
mov
xor
lods
xorb
jg
roll
loopne
pusha
inc
pusha
xor
fistpl
iret
pop
loope
sti
adcb
out
lods
mov
je
and
jo
sub
jbe
loop
sbb
loope
in
cmp
mov
loope
adc
push
loop
lret
inc
inc
popa
adc
lds
aad
ss
mov
lock
fucomip
mov
xor
notb
dec
sarb
jae
dec
loopne
fadds
lret
str
lods
xchg
scas
andl
xchg
clc
les
mov
sahf
xchg
sbb
popf
cmp
or
mov
sbb
sub
ja
push
and
call
fisttpl
push
dec
addr16
scas
xchg
loope
cltd
or
add
rcrl
push
mov
ss
gs
or
loope
adc
pop
outsb
cwtl
ret
xchg
int3
pop
in
mov
push
movsl
dec
pusha
mov
call
test
pop
mov
hlt
es
bound
jo
push
aam
pop
stos
std
fwait
outsb
adc
mov
out
pop
pop
fstpl
rcll
xchg
cs
fstpl
add
add
mov
mov
cli
xor
cmp
xchg
sbb
cmp
divb
popf
outsl
inc
mov
cwtl
fdivs
mov
mov
insl
sbb
je
mov
ret
sub
lock
std
add
mov
sub
aas
xor
pop
xchg
daa
ret
popl
sarl
dec
or
int3
insl
lods
in
insl
push
add
adc
sbb
mov
cmp
aas
dec
mov
xor
jne
cmc
lds
lahf
es
and
loope
jle
sti
aad
jnp
in
sub
pushf
xchg
xchg
fcompl
xchg
and
adc
iret
push
cltd
addr16
pop
push
push
sbb
outsl
push
shrb
pop
and
cld
push
mov
lods
aam
pop
shll
cmp
cmp
add
in
cs
mov
test
adcl
sti
fstpl
xchg
cmp
daa
xchg
dec
adcb
mov
jl
inc
mov
imul
lahf
fnstsw
jo
mov
rcll
popa
sbb
ss
out
rorb
rorl
push
daa
mov
adc
fldt
ror
std
pop
andb
mov
inc
inc
fistl
xor
ret
jge
dec
scas
shl
aaa
sub
inc
out
outsb
fwait
sbb
bound
and
pop
imul
les
clc
adc
loope
ja
jbe
dec
daa
enter
ficompl
add
lock
fldcw
mov
js
mov
pop
aam
lret
jbe
pushf
mov
inc
or
sub
xchg
mov
jecxz
insb
movsb
or
mov
jmp
popa
cmc
int3
add
cmpsb
cmp
mov
je
rorb
mov
nop
or
cmp
js
mov
loop
pop
mov
sarl
cmp
mov
std
lods
jle
stos
sbb
je
addr16
into
notl
xchg
setns
int
jbe
sub
pop
mov
cmp
dec
cmpb
dec
rorb
add
push
pop
cwtl
lret
dec
push
mov
gs
mov
jo
adc
add
stos
addr16
in
pop
pop
add
ret
and
jl
test
push
sub
in
in
repz
cmp
imul
xor
mov
cs
inc
jnp
cmp
out
cmp
adc
mov
xchg
popa
ja
cmpb
or
add
xchg
lcall
push
ror
aas
and
inc
sbb
push
test
insb
fistps
popa
sbb
lahf
sub
aaa
gs
cmp
mov
subl
sahf
cmpsl
js
ror
or
sub
jle
sahf
pushf
pop
test
test
daa
fcoml
cmp
outsl
je
dec
in
shll
fs
rorb
inc
cmp
sub
js
xchg
enter
fcoms
push
mov
repnz
pop
mov
xor
jo
xchg
inc
push
rol
cmp
aam
or
popa
std
and
cmp
or
lods
push
shll
inc
cld
adc
ret
mov
jns
cmp
mov
inc
sub
push
rol
aad
movsb
addb
cmp
fsubl
jb
mov
sbb
cwtl
scas
arpl
mov
leave
enter
inc
inc
inc
inc
dec
jp
movsb
daa
push
aas
inc
rcl
jno
pop
data16
cmc
xor
mov
stc
xor
inc
adc
push
cli
dec
fidivs
or
pop
mov
fs
cmp
outsb
xchg
insb
les
adc
adc
or
hlt
sbb
mov
sbb
or
jno
cmp
ljmp
mov
sbb
fstps
xor
in
dec
lret
jae
cli
fsts
jecxz
add
mov
or
mov
mov
stos
int3
shl
mov
push
jno
mov
mov
mov
mov
mov
xchg
insl
in
ss
mov
loop
test
imul
je
cmc
in
inc
push
dec
stc
fistpl
jnp
stos
in
jb
lcall
sub
xchg
lcall
roll
jg
popf
test
pop
push
sbb
hlt
les
lds
xchg
bound
pop
int
mov
scas
notl
xchg
test
cli
insl
dec
int3
or
inc
jp
jo
cmp
dec
xor
ljmp
or
push
mov
jo
sbb
lcall
sbb
cli
popl
divb
fwait
pop
cmp
mov
adc
add
jne
jo
insb
and
popa
mov
cwtl
and
lret
out
rolb
pop
cmp
int3
and
xchg
sbb
push
jle
cmp
sub
outsl
insb
and
pop
mov
jb
ljmp
idivb
pop
gs
adc
cmp
int3
mov
jmp
push
dec
mov
push
push
stos
sbb
sbb
rcr
and
call
lea
mov
mov
sub
sarb
setbe
test
out
dec
adc
jns
push
jl
mov
xor
jbe
fcomip
or
adc
jae
movsl
divl
and
cmp
xor
sub
fisubrl
ret
inc
xchg
adc
call
cmpsb
popa
mov
daa
ret
mov
push
leave
stc
adc
dec
jne
repnz
add
scas
push
shll
test
cmp
xor
or
adc
jo
daa
cmp
insb
popl
push
xor
popf
mov
push
fadds
mov
in
jp
loope
cmpsl
lret
data16
ss
mov
xor
jns
daa
pop
xor
insl
add
pop
sahf
arpl
dec
cmp
mov
call
cmp
lret
push
or
in
mov
dec
jecxz
aam
cmpsb
dec
add
fwait
jnp
iret
push
mov
add
dec
bound
xchg
test
fstpt
fildll
shl
jge
mov
push
mov
movsl
mov
push
sub
xchg
mov
dec
fmull
ss
pop
stos
lcall
sub
mov
cmpsl
mov
xchg
out
cmp
add
pop
sub
sub
mov
icebp
mov
into
loopne
mov
mov
imulb
push
sub
arpl
cwtl
jns
adc
movsb
inc
jl
testl
fwait
lea
in
mov
sub
mov
jl
es
negb
cwtl
flds
fsubrs
bound
movsl
ds
or
js
jmp
push
popf
or
and
addr16
or
dec
push
ds
inc
aad
xor
mov
cld
sub
adc
or
pop
pop
out
xchg
shrb
mov
out
mov
cmp
in
inc
ret
add
pop
jmp
in
and
xchg
jb
inc
push
mov
les
lea
es
fs
dec
flds
std
lea
adc
gs
or
mov
sbb
leave
mov
popf
mov
xor
push
cmp
les
insl
dec
push
into
add
mov
xchg
popf
ficompl
lds
cli
lds
iret
mov
test
std
sbb
inc
cmpsb
push
shrb
cmp
xorb
push
cmp
lock
pop
mov
xor
push
cli
mov
inc
push
into
fwait
xchg
jo
adc
imul
mov
cmp
add
das
rep
nop
fstpl
mov
adc
inc
cmp
cmp
ljmp
addr16
jg
pushf
mov
loop
inc
xor
jns
jne
add
mov
dec
xchg
stos
in
es
mov
fisttps
addl
popa
mov
fildl
inc
add
xor
repnz
movsl
and
aad
mov
pushf
and
loope
and
je
pop
and
dec
xchg
and
sub
and
push
mov
mov
sub
fmuls
sub
cmpsb
in
mov
cli
mov
jle
into
fucomi
pop
pop
fiadds
stc
into
rol
jns
add
clc
pushf
mov
jmp
leave
nop
in
add
les
ljmp
xor
ljmp
jecxz
lret
mov
push
push
xor
mov
jns
test
jle
mov
aam
cmp
pop
mov
inc
loope
adc
addr16
and
fadds
out
push
mov
inc
pop
fldl
dec
push
repnz
sub
or
cli
xchg
pop
int
lods
mov
jp
in
xchg
push
rcll
jecxz
fwait
dec
or
stc
cmc
enter
scas
xchg
loope
setge
aad
cmovno
test
test
fimull
in
fld
cmp
fidivrs
mov
xor
pmaxsw
pop
or
stc
sub
push
hlt
int3
gs
xchg
cmpsl
vpmuldq
popa
scas
idivl
mov
fs
add
push
test
pop
push
pop
flds
pusha
xchg
and
adc
sbb
fdivl
lahf
push
push
push
lea
testb
lods
cwtl
jnp
nop
dec
add
inc
iret
cmp
xor
dec
cmp
inc
je
out
sahf
cmp
cmc
in
daa
enter
mov
adc
repz
and
dec
cs
mov
and
out
dec
js
in
iret
mov
stos
pusha
jecxz
out
cmp
insb
insb
sub
push
sub
orl
test
pusha
pop
xor
dec
mov
push
and
and
ljmp
inc
fisttps
ds
xor
mov
insb
mov
jne
jge
and
shl
bound
push
pop
and
and
pop
je
sbb
add
iret
insb
ss
clc
sub
jp
jg
dec
jo
subl
mov
jb
mov
or
in
cltd
pop
popf
mov
push
roll
jb,pn
cmp
push
push
orb
sbbb
mov
out
clc
sub
sbb
negb
loopne
jg
xor
ret
cmp
push
mov
sub
scas
fcompl
mov
add
shlb
lods
pop
addr16
rcr
aad
jb
cmpsb
scas
push
insl
popa
stos
sub
lods
test
daa
sub
cli
loope
shll
out
mov
xchg
test
mov
pop
sub
dec
pushf
fs
insb
loope
repz
push
mov
sbb
jne
nop
mov
test
inc
std
add
ret
arpl
dec
es
or
pop
call
inc
addb
les
lret
into
jo
xor
push
out
fs
xor
scas
outsl
insb
jbe
sbb
push
lcall
mov
ds
out
fwait
out
loope
sbb
sub
pop
push
push
subb
mov
dec
cli
in
into
xchg
adc
jecxz
ss
pusha
pop
jns
nop
mov
mov
mov
shrb
lods
clc
jnp
in
cmp
inc
scas
enter
push
insl
xchg
ret
in
mov
xchg
adc
in
pop
sbb
and
add
xchg
push
adc
dec
mov
pop
mulb
cmp
std
xor
push
cmp
xor
dec
fisttps
fcomi
ret
jnp
jge
jo
sbbl
adc
out
jo
mov
in
aaa
mov
push
xchg
xchg
and
jb
sahf
repnz
mov
mov
inc
mov
mov
scas
cmp
shlb
xor
mov
mov
sub
test
aam
int
bound
sub
inc
in
int
add
inc
dec
xchg
insl
lret
xchg
jbe
lahf
scas
loop
cmp
or
stos
je
mov
mov
ljmp
lahf
pop
pop
mov
push
aas
push
jmp
subl
scas
or
and
xor
adc
cmpsb
arpl
ss
hlt
lret
adc
mov
pop
aam
fimuls
lock
jae
and
imul
push
test
stos
xchg
lods
xor
pop
adc
clc
testb
xor
enterw
mov
mov
arpl
and
pushf
gs
adcb
scas
cmpsl
mov
push
popa
adc
int3
ds
pop
repnz
stc
mov
xchg
and
testl
notl
and
pop
xchg
es
pop
lods
mov
into
mov
scas
outsl
mov
sub
add
xchg
rorl
push
jge
mov
shrb
lret
mov
jnp
das
daa
add
aaa
push
or
sbb
ss
out
cltd
jg
xchg
jg
xchg
js
addr16
popa
stos
insl
cltd
int
cmp
push
out
outsb
inc
mul
xchg
mov
sarb
xor
mov
push
lds
jecxz
lret
ficomps
mov
int
push
dec
movsb
cli
and
or
jae
js
sarl
shlb
or
sti
outsl
dec
fistps
cs
out
mov
xlat
lock
sbb
cmc
jmp
scas
clc
pop
pop
dec
jmp
mov
sub
in
movsb
mov
fcmove
xchg
addb
xchg
gs
add
out
test
imul
in
imul
mov
lods
std
scas
movsb
push
sbb
cs
push
lds
pop
or
shl
lods
jno
cmpsl
cmp
fists
stos
jmp
push
mov
pop
push
fldt
ds
cli
and
leave
clc
lock
rorl
out
ja
inc
movsl
mov
inc
in
jb
jecxz
pushl
cmpsb
or
js
jl
or
xchg
push
xor
mov
jae
out
into
jae
orl
lods
addl
mov
ljmp
add
sub
inc
cwtl
addl
mov
rorb
mov
or
adc
stc
shll
pop
call
add
cli
pusha
scas
push
mov
mov
cmpsb
push
hlt
mov
fs
sub
sbb
pusha
into
add
cli
cmpsb
jle
or
repnz
cli
mov
xchg
pop
adc
dec
sbb
pause
cmp
adc
and
adc
iret
stc
dec
aad
cmp
jg
mov
pop
jbe
repnz
xor
mov
mov
push
pop
orl
pop
orb
or
outsl
addr16
call
pop
cmpsb
add
mov
jmp
jg
jmp
ljmp
jg
popf
hlt
add
mov
mov
pop
cmp
lretw
scas
cld
pop
cmp
mov
cmp
cmp
adc
in
cmpsb
aam
inc
out
fmuls
xor
scas
aas
pushf
movsb
inc
test
and
in
push
push
mov
push
dec
add
jno
jge
std
shl
pop
popl
in
mov
test
sbb
out
dec
sub
mov
test
mov
pop
jg
xor
cld
in
enter
dec
imul
into
lcall
sbb
ss
inc
add
lcall
aam
jns
push
jae
jge
je
jbe
loope
sti
mov
dec
inc
decl
push
adc
jnp
or
pop
xchg
cs
dec
js
cld
into
arpl
mov
fldcw
jno
jae
sbb
jmp
js
pop
pop
inc
sub
in
inc
popf
js
jne
cmp
dec
inc
aaa
add
adc
cmp
push
ret
dec
jecxz
int3
fdivrl
adc
sub
into
insb
pop
cmp
cmp
lods
dec
cmc
iret
and
fistpll
andl
dec
mov
sbb
cmpsl
cmpsl
sub
stos
push
push
or
fidivrs
add
mov
mov
sbb
jbe
fldenv
lea
cltd
jecxz
xor
in
divb
ret
adc
insb
inc
cmp
xchg
adc
les
movsl
movsb
fnclex
je
jmp
js
movsl
addr16
xchg
and
adc
in
push
cmp
mov
pop
jns
cwtl
flds
addb
pop
nop
nop
sbbb
addb
xchg
push
pop
jecxz
mov
int
hlt
jle
dec
neg
jle
shl
jle
inc
fadds
aad
jmp
sbb
ja
nop
hlt
inc
sub
mov
push
mov
test
jl
mov
pop
fidivrl
aam
xchg
ds
mov
int
repnz
stc
insb
mov
pop
and
inc
xorb
shll
xchg
inc
xor
hlt
xchg
add
or
cmp
or
fs
xor
nop
int
rorl
or
call
mov
popf
cmp
sti
xor
add
jae
push
sbb
dec
inc
or
int
cmpl
addr16
bound
and
fistpll
pop
test
fdivl
pop
les
xor
ret
mov
andb
mov
jnp
cmp
fistpl
xchg
les
dec
dec
dec
leave
test
ss
inc
in
fisubl
xchg
inc
popa
push
stos
mov
or
sub
push
push
inc
or
mov
xor
pop
sbb
dec
or
xor
repnz
xchg
sub
add
sub
or
mov
subb
mov
xor
mov
pop
aam
jne
cmp
test
inc
mov
call
movsb
mov
dec
dec
shlb
outsl
sbb
imul
scas
pop
xor
fnstcw
popl
icebp
sub
lcall
xchg
pop
jnp
cli
cmp
add
hlt
test
pop
arpl
clc
lods
lds
inc
dec
loop
add
xchg
sahf
and
sub
or
bound
push
test
pushf
xchg
sub
lock
in
cmp
iret
adc
insl
cli
xchg
insl
fdivrp
or
push
jns
int
call
inc
pop
cmp
jae
push
orl
mov
xchg
pop
pop
adc
stos
mov
jbe
adc
sub
lcall
or
iret
mov
scas
pop
dec
cmp
pusha
out
mov
inc
dec
stc
cmp
or
jbe
push
in
leave
pop
clc
loopne
test
les
add
push
cld
scas
mov
and
negl
xchg
pop
dec
adc
cmp
sbb
xor
ret
cmp
std
ds
jl
pushf
rcll
pop
pushf
ss
jbe
dec
movsb
insb
sarl
mov
mov
push
out
cli
icebp
mov
jbe
faddp
add
pop
adcl
test
popf
mov
into
outsb
leave
dec
icebp
fdiv
and
cld
xchg
lahf
push
sub
cli
inc
adc
sahf
xor
push
insb
repnz
or
xor
and
sbb
inc
or
dec
imul
mov
pop
js
pushl
test
das
cld
or
movsb
mov
sbb
ret
addb
out
sub
loop
push
jg
push
mov
popf
xor
pop
mov
fnstsw
test
fcoms
in
xchg
out
inc
push
clc
outsb
or
xorb
xchg
dec
ja
mov
sbb
js
and
or
fucom
xchg
in
lods
std
pop
pop
bnd
mov
out
imul
add
in
inc
jg
jg
cld
add
mov
mov
push
call
mov
push
adc
jl
icebp
mov
jp
dec
and
or
xchg
stos
jmp
mov
fnsave
mov
loop
mov
add
pop
test
push
pop
xchg
jnp
push
rcll
jl
mov
pop
and
and
xchg
mov
pop
stos
mov
xlat
jl
lods
mov
jge
pop
jns
rorl
xor
jge
dec
nop
gs
jmp
mov
lods
gs
ljmp
push
sbb
cmc
inc
pop
mov
rcll
sub
adc
test
xor
mov
push
inc
sub
repnz
rorl
movsb
push
std
ret
sbb
adc
mov
shrl
incb
scas
leave
sbb
test
jno
lret
jmp
pop
jo
pushf
dec
jne
mov
mov
test
and
fists
mov
inc
mov
adc
push
push
jno
adc
xor
incb
lds
sub
pop
sbb
fdivs
mov
sbb
pushf
inc
imul
and
push
enter
mov
pop
out
cwtl
xor
xorb
test
test
xchg
add
push
mov
sbbb
jne
inc
pop
push
sub
add
cwtl
mov
jae
xor
iret
push
popa
ljmp
and
adc
into
mov
jo
cmp
aam
in
fsubl
push
rclb
and
clc
mov
dec
das
repz
leave
or
in
dec
pop
mov
adc
popf
cmp
sbb
movsl
and
xchg
fistps
in
divb
xchg
int3
test
mov
push
xor
cmpsl
pop
test
xor
inc
ret
int
adc
jnp
call
out
sbb
in
jo
stos
xchg
and
das
pop
add
rcr
loopne
fidivrs
repz
rcl
mov
cmpsb
push
sub
pop
dec
popa
add
arpl
xor
pop
mov
loope
data16
inc
cmp
xor
cltd
xchg
mov
mov
loope
data16
lahf
dec
xor
test
or
mov
jb
cld
push
mov
mov
sti
popa
pop
loope
pop
or
inc
mov
pop
mov
add
ljmp
mov
stos
jle
and
in
fstpt
xchg
sub
cmc
mov
mov
enter
sub
cltd
jns
cmp
mov
and
clc
orl
push
mov
iret
inc
ret
lods
gs
stc
cwtl
aad
push
pop
stos
add
jge
pop
shlb
adc
xchg
int3
cmp
push
andb
lods
adc
cmpsl
pushaw
std
pop
mov
sahf
and
jno
mov
adc
push
or
sti
jl
push
push
call
pushf
xlat
and
jno
cmovs
jp
add
xor
sahf
sub
addl
xchg
jnp
movb
movsb
hlt
fdivrl
jp
leave
mov
aas
cmc
sbb
out
push
inc
pop
loope
pop
inc
pop
mov
xchg
mov
push
mov
push
in
icebp
push
imul
mov
cmpl
stc
icebp
lock
repnz
ljmp
pop
mov
jmp
inc
ficoms
shlb
adc
jge
push
mov
inc
in
aam
push
sub
dec
jbe
cmp
fbstp
test
movsl
hlt
and
push
test
xchg
and
orl
mov
int
fistpl
mov
cmp
mov
inc
jnp
dec
xchg
mov
inc
inc
jp
popa
mov
xchg
and
add
xchg
mov
pop
pop
jl
mov
addr16
dec
cmp
xchg
and
and
movsl
inc
ret
mov
rcrb
or
xchg
adc
jne
jg
adc
in
mov
movswl
cmp
mov
outsb
xchg
jnp
push
popa
push
xor
lea
aam
adc
adc
cli
roll
cwtl
push
and
popa
add
xchg
sbb
jle
sbb
cld
enter
xchg
pop
das
cltd
mov
sbb
cli
outsb
fwait
decb
jo
in
incl
in
mov
ss
xlat
outsb
loop
insb
xor
mov
dec
cs
jbe
mov
mov
fcmovnu
outsb
add
cmp
test
mov
lret
out
xchg
xor
add
je
xor
pop
pusha
js
pushf
adc
mov
push
enter
xchg
scas
adc
xor
mov
daa
rorl
stc
cltd
je
roll
add
pop
in
fidivs
popf
insl
mov
lds
or
lret
or
mov
cmp
dec
shl
and
out
cltd
cmp
and
mov
data16
sub
xchg
ljmp
loop
repz
xchg
cld
mov
arpl
js
int3
js
mov
fldt
and
movb
mov
push
push
mov
xor
std
call
and
sbb
stos
cmc
pop
stos
out
mov
lcall
cmc
scas
sbb
mov
sbb
push
xchg
push
aas
pop
jno
neg
int3
aas
and
lds
cs
popa
xchg
push
scas
mov
stos
bound
add
outsl
addr16
mov
subb
andl
mov
mov
mov
das
xor
movsb
or
cli
lock
add
mov
stc
sub
or
pop
bound
mov
pop
jne
cli
jecxz
pushf
adc
lcall
mov
xchg
test
mov
xchg
pop
orl
cmc
jne
xchg
or
aaa
imul
mov
add
out
in
or
popf
xchg
ror
aaa
push
xchg
fidivrs
mov
imul
mov
pop
sub
mov
mov
rorl
jle
call
bound
sbb
sbb
jecxz
push
imul
or
dec
or
dec
icebp
xchg
out
push
sahf
lcall
loop
lret
js
test
lret
idivb
adc
mov
test
pop
ja
fisttpl
mov
data16
adc
add
pop
repz
out
adc
lock
add
add
jno
rcrb
scas
scas
jae
pop
jg
adc
add
add
inc
push
shll
mov
lods
aas
mov
cmpsl
xor
mov
mov
dec
or
mov
incb
xchg
std
jl
aam
jmp
jmp
push
mov
aam
out
addl
xchg
lahf
lret
frstor
fwait
gs
adcl
aad
add
hlt
fstl
mov
mov
test
adc
pop
in
push
push
add
dec
enter
sti
dec
stos
mov
dec
jae
test
cli
push
stos
cs
push
push
cli
outsl
lds
push
xor
fcom
mov
mov
ret
mov
cmp
stos
mov
fsts
dec
into
insb
mov
mov
mov
gs
sbb
fimull
das
fsubl
xchg
or
mov
cmp
mov
js
mov
lea
inc
dec
cmp
sub
mov
int3
lds
dec
sbb
test
das
shl
inc
pop
pop
decb
and
sub
clc
and
push
or
insl
adc
fs
lahf
ror
dec
mov
pop
push
and
dec
and
and
in
mov
mov
movsl
mov
and
clc
dec
mov
repz
push
mov
or
insb
dec
iret
mov
add
inc
jp
pop
pop
xor
mov
dec
push
enter
push
jp
add
lods
xchg
movsl
jnp
add
mov
xor
shrl
mov
rcrb
fxch
testb
mov
sbb
inc
sub
hlt
stos
outsl
and
mov
or
cmp
mov
ja
std
sub
dec
jmp
pop
pop
sarb
js
loop
sbbb
dec
sub
movsb
xchg
mov
leave
pop
ds
sbb
sbb
ss
fwait
mov
ja,pt
scas
sub
inc
push
pop
cwtl
push
jo
xchg
push
mov
out
and
or
bound
jae
fcomps
test
out
or
mov
xor
les
out
adc
jp
mov
push
xor
push
xor
xchg
cmpsl
jae
jmp
jle
mov
loop
cmp
outsl
orb
push
lret
adc
jecxz
push
xacquire
mov
mov
inc
fnstenv
add
int
mov
xchg
out
stos
lods
xchg
pop
xchg
leave
pop
js
sti
rcll
mov
fisttpl
cmpsb
jecxz
pop
push
mov
int
jnp
push
cwtl
pop
xchg
pop
and
pop
lcall
scas
stos
inc
and
mov
aaa
sarl
scas
xlat
fs
mov
dec
dec
outsb
out
ljmp
or
or
sub
dec
sub
ficoms
jnp
push
hlt
shl
mov
inc
mov
adcb
gs
mov
cmp
fidivs
lock
push
lds
sti
inc
out
pushf
sub
ret
sbb
jecxz
mov
nop
pop
xchg
dec
push
fcoml
pop
sbbl
inc
testb
shr
xchg
stos
ret
repnz
in
add
es
dec
rorb
icebp
push
add
add
and
xchg
outsb
je
cmpsb
stos
mov
cltd
add
push
xchg
fnstsw
dec
jl
dec
std
mov
scas
push
or
in
dec
jns
push
lods
fisubrl
lcall
add
int
jle
movsb
mov
shrb
or
in
scas
gs
or
test
xchg
out
adc
xchg
cs
mov
fnop
xor
insb
push
pop
pop
mov
test
pop
ja
push
stos
cld
or
mov
jne
mov
sub
out
lret
loop
dec
hlt
inc
push
pop
adc
std
xor
js
fisubrs
aad
push
int3
leave
dec
stc
dec
xchg
pop
dec
cld
mov
cmpsl
addr16
test
movsl
aas
push
in
cld
in
int3
dec
popf
js
inc
cmp
jp
push
and
outsb
cmp
dec
shl
mov
cs
add
lea
push
and
sub
outsb
mov
or
je
lcall
shr
dec
xchg
inc
pop
mov
pop
pop
pop
jo
dec
cmp
cmc
lods
inc
xchg
inc
adc
addr16
add
mov
xchg
adc
cmp
shrb
scas
sub
dec
push
cmp
xchg
cmp
addr16
and
inc
jecxz
ficomps
push
mov
xchg
mov
outsb
xchg
jne
mov
test
cltd
adc
cmp
sbb
add
mov
jg
movsl
add
push
and
cwtl
mov
xchg
mov
push
lahf
leave
cwtl
pop
mulb
loop
std
add
adc
jmp
push
dec
dec
sub
and
out
cmpsb
xchg
sbb
in
cmpsl
dec
adc
sub
dec
cmp
cmp
daa
xor
xor
inc
fimuls
je
addr16
jg
sbb
pop
mov
bound
std
mov
std
adc
jno
mov
push
cmpsl
jg
insl
pop
movsb
pop
jns
call
xor
std
ljmp
add
loope
xchg
loop
mov
call
mov
movsb
jl
scas
sbb
frstor
cmp
xchg
outsl
imul
or
lock
mov
push
ss
pop
cmpsl
nop
out
jbe
lea
outsb
sub
xchg
aad
sahf
push
adc
loop
outsb
lds
push
inc
xchg
jbe
mov
mov
movsl
mov
xor
out
inc
rclb
xchg
jecxz
sbb
mov
inc
adc
and
push
arpl
and
jns
mov
xchg
test
imul
push
xchg
pushf
out
gs
lods
jns
sbb
iret
test
popf
fstl
out
push
stos
sarl
mov
out
imul
nop
into
jo
decl
out
xor
or
loope
mov
sbb
push
fdiv
fcoms
out
mov
cmp
pop
and
jo
sahf
int3
rcl
pop
fs
push
inc
pop
js
shlb
mov
in
xchg
xchg
mov
daa
adc
outsl
in
push
adc
lds
icebp
sti
repz
xlat
pop
xor
inc
nop
jno
rorb
inc
mov
in
mov
dec
in
mov
jp
std
adc
fsts
mov
and
mov
dec
cmp
hlt
pop
fiadds
sbb
sar
cmp
dec
jmp
adc
pop
or
or
ffree
in
jb
mov
mov
adc
adc
scas
call
fimull
sub
andb
dec
out
mov
out
imul
mov
push
mov
arpl
outsl
lret
iret
jb
cmp
and
pop
fistps
popa
es
dec
adc
push
movsb
jecxz
lds
add
xchg
aaa
shl
sti
or
mov
add
adc
cmc
lret
int
shrl
add
lret
cmp
xlat
pop
int3
stos
or
outsb
and
mov
push
cmp
popa
in
scas
in
stc
int3
lods
cs
pop
mov
sub
mov
aaa
cmp
adc
cmp
ficoml
sub
push
je
ja
inc
movsl
lea
xchg
dec
sub
mov
inc
push
aam
test
mov
aas
add
cmpsb
das
inc
push
scas
lret
mov
and
pop
adcl
cli
ja
mov
std
lods
mov
popa
xchg
f2xm1
std
stos
pop
mov
fidivl
movsl
jmp
jno
imul
pop
inc
in
int3
add
jp
pop
repnz
pop
cmp
adc
int
jge
ds
repnz
push
hlt
aad
loop
xchg
or
or
out
into
mov
stc
aas
sub
mov
lea
jno
mov
les
inc
loope
xlat
jge
aaa
pusha
jg
and
sub
inc
push
repnz
jo
push
addr16
and
push
dec
ds
mov
stos
push
pop
sub
testl
jae
out
or
mov
bt
sub
mov
push
pop
js
push
xchg
xor
mov
ret
xchg
mov
clc
jne
fwait
jae
sarl
insl
dec
js
xor
cmc
xor
dec
and
shll
and
mov
pop
add
mov
push
std
in
popf
mull
aaa
xchg
lea
test
jle
das
or
ret
and
mov
aaa
in
jecxz
jg
jle
es
mov
jle
cmp
cli
and
imul
std
push
lock
pop
in
or
cmp
dec
les
xor
inc
cmp
out
jl
pop
add
xchg
bound
js
js
movsb
add
add
mov
fildll
lods
and
pop
pop
jne
push
popf
xorl
fcmovbe
xor
lods
cmpsl
inc
inc
cltd
or
shr
outsb
xchg
addb
add
add
inc
fistps
sbb
into
mov
sbb
ret
mov
sbb
iret
aam
jbe
sbb
lock
out
mov
cmp
test
cwtl
sbb
jmp
pop
jbe
sbb
and
mov
add
push
es
cltd
mov
dec
mov
add
cmp
jmp
dec
cmp
dec
mov
lret
mov
insl
xchg
ret
cmp
data16
push
xchg
adc
subl
test
sub
add
fsubl
jmp
orl
addr16
add
push
negl
lea
or
mov
mov
pop
xchg
out
push
cmpsb
xlat
xchg
mov
or
cmpsl
movsl
rcr
rcrl
or
testl
pusha
push
std
jo
imul
in
sub
add
aaa
and
stos
mov
and
xorl
in
and
jno
xchg
dec
push
rcll
lock
rclb
jbe
out
add
fisubs
add
and
inc
mov
cmovo
shl
bound
sahf
push
pusha
testl
sub
repz
and
mov
adc
mov
shl
pop
ljmp
inc
adcl
fdivr
hlt
push
xchg
andb
sbb
or
mov
lcall
push
clc
xor
adcb
mov
pop
ret
cmp
cmp
mov
jb
mov
mov
lock
imul
sub
pop
lcall
and
and
test
jo
das
out
jae
jns
in
jne
lahf
push
cmp
cmp
cltd
aas
loop
add
ficoms
xchg
add
cmp
dec
test
sti
jae
ja
or
jle
cld
lods
mov
cmp
add
repnz
je
and
leave
xchg
mov
sbb
test
and
insl
sub
cmpl
jno
leave
and
aam
imul
cli
inc
lret
es
daa
pushf
scas
xor
sub
dec
test
lea
push
int3
xor
adc
imul
jg
sub
hlt
pop
inc
int3
ljmp
mov
adc
add
popf
push
inc
lcall
mov
inc
or
xchg
test
add
sbb
mov
xchg
cmp
je
push
scas
or
pop
aas
xchg
push
cmpsl
inc
call
fisttps
mov
int3
xchg
mov
mov
cltd
lds
insl
cmp
repz
ffreep
xchg
pop
into
in
add
jp
push
mov
shrb
mov
dec
aaa
jo
dec
and
inc
cmpsb
mov
sarl
cmc
sahf
mov
lcall
pop
cmp
loope
adcl
cld
dec
add
cs
loope
cltd
xor
aaa
xchg
jp
mov
hlt
jbe
and
clc
cmpsl
stos
jns
shr
pop
addr16
imul
stc
and
xchg
repnz
cs
jg
negl
pop
dec
test
sbb
shlb
mov
xchg
cmpsl
push
fisttpl
jae
sub
lods
xchg
and
dec
mov
hlt
mov
jne
cli
mov
cli
clc
test
jb
adcl
push
test
or
push
inc
push
jno
sub
mov
aas
mov
decl
js
or
lods
push
sti
xchg
adc
inc
adc
mov
push
cmp
push
or
pusha
push
jno
mov
dec
in
or
xor
xor
jle
mov
and
push
sbb
loopne
out
ja
test
into
insb
mov
movsb
movsl
mov
lods
sub
mov
sub
loope
ss
mov
sub
repnz
outsb
xor
icebp
in
ss
jecxz
push
xchg
sbb
in
shrb
test
jnp
jle
movsl
shrb
adc
shl
loope
out
push
mov
push
xchg
jmp
add
sub
call
aam
inc
les
mov
add
fdivrs
xchg
sub
adc
sub
add
push
mov
jge
mov
mov
xor
aas
sahf
pop
test
cs
mov
in
pop
xchg
cmpsb
shll
mov
mov
sub
mov
outsb
stc
rclb
jl
or
adc
sbb
mov
pop
inc
jbe
loope
fucomi
push
aad
and
ret
mov
fwait
adc
jl
mov
cmp
scas
ds
inc
mov
sub
add
sbb
jg
cmpsl
pop
adc
js
push
nop
fstp
clc
xlat
adc
cmpsl
arpl
clc
nop
rclb
movsb
or
fidivrs
sbb
mov
adc
scas
mov
pop
mov
pop
xchg
mov
rorb
cmpsl
lods
add
jae
jns
jno
bound
push
lret
mov
jmp
iret
loopne
das
stos
ja
rorl
les
movsb
inc
add
mov
adc
fsubs
sub
scas
int
inc
pop
inc
lods
lods
jmp
push
cmc
fildll
mov
out
nop
jecxz
mov
mov
ja
popa
iret
and
fwait
cmpsb
inc
loopne
cmp
fisubl
int3
test
cltd
mov
outsl
addr16
ret
jb
adc
lds
scas
stos
sarl
pop
xchg
push
or
js
bound
lret
mov
clc
test
add
mov
or
mov
jg
sti
and
fcmovnbe
push
pop
je
xchg
std
pop
push
aaa
adc
aad
sub
mov
incl
incl
xor
js
aaa
daa
outsb
sbb
int
leave
mov
std
xchg
xlat
sub
add
add
xor
push
rcr
cltd
pop
cmp
dec
in
mov
sahf
arpl
imul
movsb
out
repz
or
sbb
sbb
insb
in
out
sarl
sub
mov
mov
repnz
cltd
test
pushf
iret
jae
test
mov
xchg
das
scas
dec
push
nopl
or
fnstcw
mov
mov
push
push
in
imul
icebp
cmp
out
dec
inc
mov
add
add
sbbl
hlt
filds
xchg
sub
mov
mov
ss
sbb
test
add
jmp
test
inc
pop
sbb
sub
adc
pop
pushf
xchg
faddl
mov
xchg
dec
lea
sbb
xchg
mov
xchg
pop
jo
into
scas
dec
imul
hlt
negb
fisubrs
cmp
pop
movsl
cmp
sti
xchg
xor
inc
je
les
je
push
xchg
mov
inc
mov
xchg
cmp
and
test
push
jle
jg
insl
pop
mov
sbb
imul
add
iret
enter
fbstp
das
pop
test
pop
and
shl
mov
adc
sub
out
test
push
inc
frstor
xchg
xor
inc
test
repz
jp
rcll
rcrl
push
inc
sub
push
dec
adc
cmp
mov
pop
inc
leave
dec
jle
add
adc
mov
add
jnp
add
sbb
cmpsb
dec
mov
lods
xchg
push
dec
mov
and
pop
jg
shll
sbb
mov
jno
adc
sub
mov
jmp
orb
clc
mov
test
ljmp
ffreep
adc
iret
mov
aas
jns
or
cwtl
popf
out
add
cmpsl
mov
jae
iret
cmp
fldl
iret
xor
scas
cltd
call
mov
cmpsb
xor
mov
dec
xchg
inc
lahf
inc
jns
lds
cs
daa
mov
xchg
aam
add
int3
test
pushf
out
cld
adc
mov
or
add
jne
jae
mov
rcll
push
mov
mov
popa
sub
inc
pop
test
xchg
push
or
jb
mov
or
fwait
dec
pop
mov
mov
lds
repz
xor
dec
mov
jg
adc
shll
jmp
jp
sub
lds
sahf
jecxz
in
push
fidivs
outsl
std
mov
sbbl
gs
clc
pusha
ret
out
and
out
xor
pop
mov
out
xlat
rolb
mov
xchg
xchg
sub
add
push
test
arpl
in
mov
cmp
inc
adc
dec
push
sbb
xchg
pushf
sub
dec
add
das
fstl
hlt
jno
out
pop
aad
sbb
hlt
pop
mov
cmc
fiadds
mov
jp
pusha
pop
gs
aam
repz
cmpsl
test
cmp
xchg
leave
je
cmp
stc
and
cmc
add
or
lea
pop
adc
loopne
pop
fs
or
pop
add
lcall
cld
pop
stos
stos
outsb
sub
cmpps
xor
imul
mov
mov
dec
inc
mov
push
call
or
stos
lcall
andb
ret
push
in
fwait
xchg
addr16
mov
repz
mov
sbb
sahf
sub
jle
jb
pop
mov
orl
push
fisubrl
mov
dec
jno
je
popf
jns
mov
testl
aaa
xchg
das
repz
fsub
int
and
fiadds
mov
lods
daa
xor
add
add
clc
sbb
inc
popl
inc
dec
cmp
test
cwtl
sub
leave
shl
incl
sub
jge
xchg
call
cmp
lahf
inc
pop
pusha
fsts
popa
push
fsubrs
pop
jg
cld
loope
jno
jle
data16
aaa
add
sbb
push
loope
nop
ja
xor
xor
sub
test
or
adc
inc
jl
pop
xchg
mov
mov
pop
push
push
lods
movsl
mov
rolb
retw
mov
incb
push
cmpsl
daa
mov
or
jp
ret
lods
std
cwtl
roll
pop
mov
or
jp
push
xchg
pusha
mov
xor
lock
mov
ja
test
imul
stc
lahf
push
test
jnp
addl
sub
jno
loop
add
mov
add
rol
mov
sbb
sub
mov
cmp
add
aad
push
jnp
add
fisubl
popa
lea
or
pop
mov
imul
in
inc
mov
lea
cs
daa
jmp
daa
aas
movsb
adc
cmpsl
sahf
xor
mov
adc
push
ret
nop
lahf
ds
xor
xchg
adc
adc
lret
cmc
mov
adc
imul
shll
xor
and
mov
jg
popf
clc
mov
jg
cmp
pop
fsubp
testb
gs
test
aam
pop
xor
and
insl
jg
or
sbb
push
add
xorb
hlt
testb
xchg
mov
and
imulb
pop
jmp
bound
push
add
pop
cltd
lret
mov
pop
and
out
xor
xchg
das
push
add
xor
enter
jne
mov
js
fiadds
insl
xor
or
incl
or
pop
sahf
rcrb
pop
sbb
rcrl
add
popf
cmpsl
xor
sahf
mov
sbb
les
xchg
out
lods
aas
sbb
pop
cmpsb
stc
inc
mov
into
pop
mov
and
pop
push
inc
sub
ljmp
jl
das
mov
cmpsl
jae
jnp
and
insb
xchg
push
cmpsl
inc
sarb
and
cmpsl
jge
fistps
or
mov
cmc
shrl
dec
shll
xchg
jle
in
jbe
arpl
out
lods
faddl
mov
xchg
push
xor
mov
pusha
lahf
daa
jb
sbb
jne
lahf
test
push
lcall
iret
dec
out
lds
xchg
popa
mov
mov
mov
inc
pushf
adc
cmp
fwait
mov
xchg
pop
adc
cltd
xchg
arpl
in
sbb
xlat
lods
test
repnz
or
sbb
fs
div
cmp
mov
and
and
mov
int
ret
mov
fcmovnb
push
aam
xor
dec
les
in
mov
sub
mov
shlb
inc
lahf
out
or
filds
xchg
jns
je
sub
movsl
decl
shl
sub
in
inc
ss
push
sub
xchg
lret
adc
jb
int
inc
lret
fidivrs
cwtl
push
fldt
in
push
inc
adc
pop
insl
addr16
push
ss
add
sar
outsl
lea
mov
nop
push
pop
int3
jb
in
inc
mov
push
jnp
mov
sub
lds
mov
test
jmp
shrl
or
popf
sub
dec
adc
mov
loope
cmp
fcmovbe
daa
test
ljmp
sti
ljmp
push
pusha
rorl
jnp
call
sbb
cmpsb
mov
pop
dec
ja
inc
aas
mov
cmovns
arpl
pop
push
sub
cmp
nop
ja
xor
xchg
or
addr16
sub
and
lahf
call
roll
sahf
lds
add
cmc
jg
mov
enter
notl
mov
iret
adc
out
xor
mov
push
mov
push
add
pop
and
imul
sub
dec
je
outsl
push
fisubs
jle
inc
mov
lods
int3
shll
stc
adc
sbb
cmp
add
out
and
lods
push
push
xchg
cmpsb
shr
outsb
cwtl
roll
sbb
stos
or
loope
lcall
inc
pusha
sub
sub
mov
fwait
pop
cwtl
js
and
nop
int3
popf
cmc
insl
pop
pop
lcall
bound
imul
mov
pop
mov
dec
mov
bound
mov
add
and
aas
sarb
add
test
pop
mov
ret
xchg
cmp
repz
aam
adc
lcall
mov
scas
sbb
cmpsl
adc
popa
shl
sbb
dec
adc
mov
testb
bound
add
inc
popa
jb
mov
cmp
push
aas
loope
jmp
dec
sbb
mov
jg
iret
pop
arpl
cli
hlt
pop
jns
lods
shr
shrl
or
adcb
add
icebp
testb
or
test
imul
out
mov
shll
stos
sub
inc
lods
mov
out
dec
ret
iret
lret
jns
mov
adc
jle
das
push
xor
sbb
in
fwait
mov
sbb
cltd
lods
loopne
mov
jle
addb
aaa
bound
cmpb
hlt
dec
or
lods
outsl
std
enter
leave
mov
and
add
enter
mov
sub
iret
aas
jb
arpl
or
int3
addb
daa
jno
xor
nop
incl
jg
shl
sub
outsl
out
fnstsw
addl
or
std
clc
mov
mov
xor
out
loop
pushf
in
push
stc
xor
xchg
cld
cmp
push
sub
andl
pushf
xchg
insl
std
jg
push
sbb
ret
dec
hlt
dec
sub
cld
jne
xor
jbe
pop
xor
movb
out
xchg
in
repnz
jmp
repz
pushf
leave
and
mov
dec
out
imull
leave
imul
ret
loop
lcall
gs
dec
xchg
insl
dec
notl
pop
jmp
mov
sti
fimull
movsl
repnz
sti
sti
lcall
pop
add
push
jno
mulps
ds
or
mov
test
sar
xchg
sub
lret
pushf
jp
dec
add
ret
fucomi
xchg
jp
outsl
lcall
xchg
stos
loopne
dec
loopne
imul
xchg
push
push
sbb
fwait
mov
lcall
out
or
ja
in
dec
push
pop
insb
xor
pusha
jno
pop
test
call
push
in
add
leave
inc
push
pop
pop
jle
xor
int
cmpsb
adc
xor
cli
xchg
loop
pop
mov
push
and
mov
or
ja
repnz
imul
out
arpl
and
in
and
or
cmpsb
mov
fmulp
mov
icebp
mov
push
xchg
mov
rcl
jp
jne
inc
test
inc
push
push
mov
add
repz
lahf
call
insb
mov
fildl
ret
std
in
fxch
pop
in
jp
mov
pop
ss
sbb
cwtl
cwtl
cltd
je
lods
fdivl
into
mov
jge
leave
pop
push
pop
push
xlat
add
mov
jb
pushf
push
sbb
call
loope
jno
push
xchg
fldl
repz
cmp
test
mov
mov
inc
xchg
ret
scas
popf
lds
pop
mov
aaa
or
inc
je
fisttpl
sub
nop
push
dec
dec
adc
inc
sub
js
mov
enter
sar
imul
xchg
lahf
out
decl
cli
jl
mov
mov
and
adc
mov
and
push
jo
shr
sahf
jne
movsl
or
mov
scas
fildll
pop
ds
fldl
pop
cmpsb
add
pop
push
test
movsb
ret
and
mov
sub
pop
scas
inc
stos
push
fisubl
ror
jecxz
add
shl
and
mov
sti
push
test
arpl
sbbb
adc
and
inc
mov
add
push
xor
mov
lcall
ljmp
push
lret
push
mov
sbb
dec
jnp
lret
popa
int
mov
add
loope
pop
inc
mov
add
andl
xor
sub
inc
mov
popl
divl
mov
lret
inc
xchg
or
mov
insl
pop
daa
sub
push
ret
dec
fsubrl
divl
ss
stos
sbb
inc
ret
ficoml
addb
push
mov
mov
addr16
int3
and
ss
or
ja
xchg
mov
inc
int3
sbb
add
or
cltd
in
cmpsb
fstl
mov
in
and
adc
les
insl
jne
scas
adc
ret
popa
xlat
lret
xchg
repz
rorl
js
les
cld
jnp
or
stc
adc
mov
xchg
pop
lcall
mov
mov
shll
push
pusha
aaa
test
in
push
pop
jmp
aam
jne
rolb
nop
push
add
icebp
gs
mov
jae
jmp
or
pop
rcrl
jp
add
in
test
enter
in
aaa
xchg
aaa
mov
xchg
data16
sbb
cmp
jae
ljmp
mov
mov
push
into
sub
popa
mov
cs
push
and
nop
xchg
fdiv
bound
push
xchg
xor
push
rolb
int3
pop
lcall
pop
xor
scas
movsb
mov
pop
inc
mov
pushf
pop
pop
notb
std
out
and
jns
mov
pop
scas
xlat
cs
icebp
push
sahf
xchg
mov
or
xchg
inc
or
push
push
loope
cmpsl
mov
jp
mov
dec
out
cmp
cld
xlat
adc
fwait
popa
sbb
and
fsubrs
insl
xrelease
mov
jmp
lds
sbb
shl
mov
pop
push
push
mov
or
jbe
orl
out
inc
pop
and
lahf
add
xor
dec
sbb
adc
pop
inc
and
sbb
jno
movsl
mov
in
sbb
lret
cltd
in
sbbl
cmp
je
lahf
push
dec
loope
sub
ficomps
mov
cli
cmp
inc
jbe
fdivrs
lods
mov
movsb
inc
pop
jno
and
insl
aam
mov
daa
xor
cmp
jo
shrl
mov
sub
repz
enter
movsb
push
stos
mov
mov
and
movsb
mov
jnp
rcr
dec
pop
fcmovnbe
inc
cmp
ljmp
jae
jp
pop
adc
sahf
gs
es
subl
jp
push
in
pop
sub
and
and
mov
stos
sbb
add
cmp
data16
cld
fs
jnp
hlt
mov
mov
fistl
js
pop
lock
pop
out
cmp
je
cltd
leavew
dec
insl
sbb
mov
xor
in
ret
push
out
rolb
dec
mov
loope
outsb
xchg
mov
push
das
cmp
sahf
mov
inc
inc
in
icebp
sbb
mov
xchg
filds
loopne
pop
sar
pusha
jp
nop
jecxz
adc
push
xor
cltd
mov
sahf
push
xor
inc
lcall
mov
decl
dec
mov
lret
std
or
inc
in
insb
clc
jb
dec
in
lahf
xor
test
shrl
add
test
test
push
xor
jae
push
mov
frstor
int3
test
insb
and
inc
sbb
sbb
mov
pop
xchg
inc
push
ss
int
aam
subb
dec
push
repnz
ljmp
cltd
idivb
pop
sub
pop
lret
cmp
and
mov
jp
and
xchg
mov
pop
lods
into
in
xchg
mov
call
mov
cmp
and
aaa
in
data16
lds
pop
xchg
mov
lods
lea
rolb
scas
jle
aam
xor
imul
imul
mov
stc
outsl
shrl
inc
test
incl
lea
gs
sbb
mov
int3
pop
xchg
lods
mov
iret
inc
popf
mov
mov
nop
mov
mov
xchg
pop
aad
inc
popa
add
fisubs
shr
xor
jno
cltd
repz
pop
mov
cmp
fistps
js
xor
sahf
push
xchg
not
test
jecxz
adc
imul
push
add
or
mov
xor
jecxz
and
pop
pop
fmull
mov
mov
mov
imul
push
ficoml
mov
push
outsl
sub
jmp
in
and
sti
cmpsl
dec
pop
jecxz
cmp
or
dec
pop
push
lret
hlt
sbb
add
lret
roll
std
in
rclb
and
es
xor
scas
test
push
jno
fsubr
push
aam
cmp
stc
insl
ror
pop
inc
movsb
rcrb
pop
adc
adc
xchg
inc
ds
adc
nop
push
add
mov
cs
add
mov
and
cli
stc
sub
mov
insl
jb
push
adc
inc
or
mov
mov
push
cmp
adc
aad
iret
mov
or
lods
test
or
mov
sub
xchg
xchg
sub
stc
shr
rolb
out
pop
xor
aas
and
jbe
xorl
add
push
jo
into
xchg
jg
pushf
adc
add
das
xchg
xor
arpl
addr16
mov
das
xlat
pop
add
stos
push
fwait
push
out
js
xor
mov
mov
fs
sub
ja
xor
cmp
pushf
cmpsb
pop
fadd
call
shlb
aaa
sti
xchg
roll
cmp
loope
mov
jg
push
adc
and
or
icebp
mov
add
nop
sbb
stos
out
jmp
sub
jmp
fisubl
daa
repz
push
mov
cmpsb
xchg
or
fcoms
xchg
cmp
mov
sarl
push
push
loopne
sub
aas
filds
cmpsb
sahf
mov
mov
cwtl
div
sbb
loopne
cmp
sarl
mov
inc
inc
push
movq
enter
xchg
xchg
ret
xchg
cmpsb
sbb
fimull
gs
fsubrs
test
adc
pushf
mov
pop
push
addr16
mov
stos
pop
jg
mov
int3
adc
inc
mov
int3
fdiv
outsb
insb
mov
push
gs
cmpsb
mov
divl
and
cmp
xor
mov
jg
cli
pop
mov
lea
jmp
subl
xchg
inc
sub
or
stos
xchg
cmc
std
int3
in
pop
es
adc
jae
pop
push
stos
inc
mov
insl
bound
fwait
adc
pop
sub
pop
hlt
fcmovu
ja
out
ss
repz
lahf
jb
mov
sbb
xchg
std
mov
sbb
pusha
jno
ds
or
sub
adc
rol
into
push
aaa
in
cmp
inc
movsb
pop
leave
icebp
add
movsl
mov
inc
xchg
mov
push
aam
dec
push
out
ret
movsl
call
fdivrs
jns
loope
add
pop
imul
das
pop
mov
inc
dec
xchg
sbb
test
dec
pusha
xor
jb
pushf
xor
jmp
pushf
jns
jae
stc
push
shlb
pop
jb
add
add
sbb
aas
ja
and
mov
outsl
sbb
fldl
push
cli
orb
or
cltd
les
inc
orb
cltd
adc
das
xchg
xor
jo
and
mov
mov
or
sbb
mov
outsl
xor
dec
loop
inc
je
mov
push
mov
cs
stos
imul
imul
aam
xor
scas
das
sbbl
adc
in
dec
inc
in
pop
icebp
and
mov
mov
test
xor
leave
scas
jno
test
jb
mov
and
enter
pop
cmp
in
push
jns
mov
add
js
mov
rorl
jmp
inc
or
rcll
cli
scas
inc
mov
jecxz
popa
int
imul
push
insl
cmp
mov
ficomps
in
jae
push
adc
out
pop
lods
insb
add
mov
mov
cld
pop
scas
xchg
inc
ja
test
nop
ret
divb
lcall
dec
in
mov
push
mov
dec
iret
xlat
add
jp
int3
mov
pop
xchg
dec
xchg
fidivrs
jmp
adc
fsubrs
mov
sub
and
lods
dec
sub
mov
or
xor
adc
ljmp
xor
pop
pop
call
xor
inc
cmpsl
dec
pushf
adc
mov
xor
push
xchg
adc
aaa
jmp
sbb
xchg
push
jo
je
mov
fmuls
fisubrs
aam
mov
or
int3
adc
stc
xchg
cltd
insb
push
dec
cli
dec
lds
js
inc
out
sub
jle
cmpsb
xchg
mov
outsb
sbb
mov
inc
jp
pop
cwtl
sbb
xor
leave
int
or
pop
cmp
data16
cmp
std
pop
jns
push
jnp
push
cmp
jo
mov
xchg
cli
cmpsb
outsl
pop
fmulp
xchg
jmp
dec
loopne
mov
ja
push
std
rol
and
into
out
rorl
pop
mov
inc
sub
xlat
xchg
pop
inc
sub
jge
mov
les
jne
jecxz
das
and
gs
and
jge
out
add
adcb
mov
lret
jo
loopne
ss
out
add
xchg
cmp
lock
or
sti
aam
pop
loop
loope
mov
mov
adc
push
mov
int3
clc
aam
ds
mov
jl
jl
adc
pop
pop
adc
mov
cmp
je
mov
js
ret
inc
jp
add
clc
push
pop
cmp
ds
sbb
loope
fucomi
inc
popa
es
push
add
or
dec
hlt
jns
lock
jns
fstl
push
xor
mov
inc
xchg
xchg
les
xchg
std
push
adc
call
arpl
lret
incb
repz
pop
fbld
dec
lret
pop
cmp
jb
push
ja
add
jecxz
shlb
in
xor
frstor
mov
out
mov
mov
push
mov
icebp
in
imul
and
arpl
pop
jb
or
mov
adc
movaps
push
add
call
add
mov
and
sarb
out
loopne
cmp
add
ds
push
dec
pop
cmp
push
sbb
add
adc
out
subl
testb
test
in
xor
iret
out
inc
movsb
mov
in
cwtl
pop
push
xchg
addr16
int
outsb
loopne
in
dec
dec
out
sub
push
test
lret
imul
add
lea
mov
into
aad
mov
mov
push
xchg
and
push
in
or
pop
jno
and
test
pusha
inc
pop
pop
hlt
lret
jl
sahf
add
test
mov
outsl
xchg
push
aaa
std
sub
aad
fiaddl
out
dec
stc
aas
mov
mov
pop
imul
sub
add
pusha
add
and
lea
call
cld
sbb
push
add
adcb
fidivrl
jo
cmp
in
sbb
dec
outsl
rclb
and
add
cs
popa
jle
por
imul
into
adc
std
pop
test
dec
or
lcall
or
sub
out
test
and
adc
push
cmp
shl
sarb
xor
mov
into
inc
sub
xor
mov
cld
pop
imul
dec
mov
sub
jo
bnd
or
nop
sbb
add
data16
push
sbb
and
aaa
pop
or
cmc
sub
cmpsb
cmp
jb
sub
push
sbb
sbb
std
add
lahf
pop
jbe
adc
cmp
vpmovusqw
popa
cltd
out
add
lret
emms
push
leave
cmp
adc
das
push
subl
std
call
roll
pop
pop
pop
movsb
jecxz
pushf
icebp
aaa
imul
stos
cmp
and
xlat
ret
sbb
sub
xlat
sbb
inc
divl
and
mov
dec
sbb
scas
test
pop
shrb
xchg
sbb
ds
lret
push
jp
int
mov
bound
jmp
imul
xchg
mov
mov
pop
cmp
popf
sbb
xor
inc
cmp
push
sbb
dec
inc
add
dec
mov
inc
mov
mov
test
jp
out
push
in
or
rcrl
dec
or
in
pop
jb
xor
xlat
roll
daa
mov
pop
scas
cmp
xor
ss
hlt
pop
bound
mov
mov
fwait
mov
add
inc
cld
mov
mov
mov
loopne
scas
daa
arpl
xor
repnz
mov
into
jmp
xchg
jecxz
int
insl
popf
test
iret
cmp
cmp
js
inc
arpl
cltd
jl
in
bound
fdivrl
lret
movsb
cmp
add
out
das
in
dec
fldcw
jns
pusha
cltd
test
cmp
and
push
push
fdivp
cmp
jne
inc
cmpb
mov
jnp
add
out
popl
arpl
and
mov
adc
cmp
arpl
jno
neg
and
dec
sahf
inc
sub
sbb
cwtl
cmpsb
xor
xor
hlt
int3
aam
sar
packssdw
xchg
jbe
les
nop
pop
xchg
push
fsubr
loope
cmpsb
pop
es
push
sub
fiaddl
mov
sub
outsb
xchg
mov
sti
inc
ljmp
sarl
mov
popa
in
ret
sub
mov
fwait
sub
nop
rclb
jo
xchg
or
xchg
lcall
test
mov
xlat
dec
lods
test
enter
fs
cli
sub
dec
xchg
inc
sbb
shrb
pop
push
xlat
adcb
shl
fsubl
outsl
push
pusha
mov
dec
xchg
ljmp
shll
pop
sub
fmuls
push
or
pop
mov
or
mov
sahf
and
lret
lahf
or
je
sub
dec
pop
sbb
fisubl
inc
imul
lods
cmp
aam
mov
pop
sub
push
cmp
and
pusha
push
push
sub
gs
das
mov
in
cs
insl
cmpsb
arpl
xor
cwtl
loop
scas
ljmp
shl
pop
xor
lods
pop
push
das
icebp
hlt
test
shrl
xchg
or
loop
les
xchg
fwait
data16
dec
add
jmp
and
std
mov
popa
mov
lss
sbb
add
mov
jg
pop
rcrl
sbb
jl
pop
clc
outsl
mov
cmpsl
dec
fldcw
lods
ss
aam
adc
push
and
mov
scas
fwait
imul
add
or
inc
sarl
pop
push
loope
or
jecxz
jle
popa
mov
push
pop
push
dec
aad
xchg
and
adcl
mov
jge
repnz
push
add
push
aad
ret
or
xor
iret
das
add
mov
sub
lds
mov
jle
imul
push
push
pop
sbb
fisttpl
shll
adc
pop
dec
mov
xchg
jb
adc
xchg
mov
push
jbe
scas
cmp
call
lods
pop
lods
in
mov
imul
sbbb
out
adc
xor
pop
push
orb
xchg
and
dec
mov
sbb
aad
out
es
jecxz
popa
daa
call
ds
negb
aas
and
aas
pop
or
jno
pushf
dec
aaa
into
mov
sarb
pop
mov
xor
mov
cmp
and
adc
mov
mov
faddl
shlb
sarb
xacquire
int3
pop
loopne
mov
push
mov
mov
jns
insl
fsubl
cmc
loopne
addb
push
mov
pusha
cmp
andl
push
lods
shll
pop
sub
in
and
inc
cmp
adc
jns
jo
aas
lret
or
sub
negb
or
sbb
mov
pusha
popf
lcall
and
jo
movsb
ds
mov
jbe
push
xchg
loopne
inc
mov
in
scas
sbb
and
jle
mov
hlt
sahf
bound
enter
push
orb
add
mov
add
pop
clc
cmc
lea
scas
call
dec
and
shr
insl
into
dec
adc
xchg
mul
shl
and
cmpsb
pop
daa
cmp
mov
add
push
push
dec
in
movl
jmp
je
add
mov
mov
adc
outsl
sahf
sub
sbb
mull
fldl
pop
xchg
or
push
pop
mov
sbb
mov
xchg
jl
lods
out
jl
pop
mov
in
jl
stc
sub
xchg
push
add
adc
icebp
js
sub
ret
push
adc
push
fidivrl
in
int3
xorl
pusha
adc
sahf
ds
push
ret
iret
pop
jp
mov
xor
sbb
test
into
ds
rcrl
stc
push
inc
mov
and
xlat
push
imul
scas
jge
js
jl
mov
cmpsl
in
cmp
push
inc
mov
addr16
lock
testb
ds
xchg
mov
sar
fidivrl
push
and
fwait
inc
mov
fcmovne
pop
cmp
inc
mov
push
sbbl
test
jmp
loopne
mov
out
mov
out
cmpsl
and
mov
addl
jae,pn
fcomi
insb
lcall
jno
jae
adc
dec
adc
mov
idiv
lcall
add
fistpl
sub
gs
cltd
cmp
lds
lahf
stc
das
cmc
in
adc
xor
jmp
pop
stos
jno
jecxz
cmp
popf
ss
movsb
jl
mov
mov
xor
xorl
add
stc
clc
hlt
push
push
mov
hlt
add
lcall
mov
test
aaa
pop
xor
test
ret
popf
test
sub
mov
gs
or
push
xchg
test
jle
stos
jg
push
stos
mov
inc
add
fistpll
dec
enter
or
mov
fisubrl
std
dec
icebp
cwtl
insb
jg
mov
sbb
stc
mov
jno
and
mov
xor
repz
aad
push
adc
rcl
pop
sbbl
xor
jp
sub
mov
add
or
add
pop
sbb
jl
inc
pop
lret
push
pop
inc
xchg
dec
push
adc
mov
das
test
cmp
mov
inc
inc
popf
jg
mov
push
fldl
into
add
nop
call
jecxz
sarb
ret
jns
cmp
xchg
mov
jp
rorb
ja
roll
dec
mov
or
test
repz
scas
jo
rcrl
outsl
cmp
sti
stos
or
int3
jmp
dec
jp
sbb
fldlg2
lds
cmp
push
roll
faddp
dec
adc
rclb
ret
shl
mov
jge,pn
push
clc
les
add
and
sub
mov
push
nop
std
jns
dec
lahf
push
push
shlb
mov
dec
aad
aam
lods
jne
ss
jecxz
lds
aam
sahf
mov
das
hlt
nop
push
out
mov
fisttpl
arpl
shufps
mov
fbstp
pusha
adc
sbb
jge
and
sbb
sbb
add
mov
cld
pop
pop
in
xor
mov
xor
out
and
or
scas
adc
iret
mov
in
inc
inc
add
sbb
add
ljmp
mov
into
cs
test
loopne
cld
sbb
or
xchg
cld
jge
pop
pop
push
adc
push
sbb
sahf
push
sub
subb
out
mov
nop
dec
sub
or
jmp
sarb
mov
sub
inc
lea
popf
sbb
mov
and
mov
mov
fisubrl
jno
pop
insb
cmpl
jo
mov
mov
out
mov
aad
mov
add
ret
cld
jb
add
jae
adc
pop
cmp
std
rcr
aaa
outsl
adc
das
cs
es
rorl
add
push
sub
in
inc
daa
mov
xchg
ret
mov
ret
sbb
in
xchg
inc
add
aad
sub
or
ja
dec
jp
fadd
mov
rorl
out
push
and
inc
mov
das
pushf
push
xchg
je
xchg
scas
xor
cltd
push
loope
lret
pushf
push
sbb
xor
aam
scas
pop
add
cmp
fadds
ja
in
mov
cs
adc
xlat
imul
mov
cmp
dec
test
cmp
cmp
hlt
cmp
rcll
cmc
cmp
xor
outsl
mov
mov
xor
or
mov
jbe
aas
xchg
out
in
jl
stc
rcll
xor
or
ljmp
mov
jae
cmp
je
stos
push
mov
sbb
push
and
fcomps
xor
loop
mov
iret
fldcw
lcall
xor
and
pusha
xchg
push
cmp
adc
and
fists
addl
enter
mov
in
jne
data16
jae
in
scas
idivl
jge
enter
fisttpll
ja
rcrl
shl
sbb
xor
pusha
jmp
lds
mov
mov
cld
lret
xchg
loopne
or
aas
pop
repnz
arpl
xchg
fnstenv
sbb
cmp
popf
push
es
push
ljmp
test
into
cld
push
cmc
mov
push
fdivrp
jle
iret
cwtl
jge
sbb
outsl
imul
clc
and
mov
mov
out
mov
imul
out
sub
push
push
add
int3
movsb
or
daa
aam
xor
jp
scas
add
pushf
sahf
xor
jnp
push
jg
mov
rcrl
and
sarw
mov
sbb
cmp
test
jns
stos
sbb
mov
sub
stos
loopne
rcl
popf
xchg
gs
or
in
xchg
jp
sub
fmull
les
inc
mov
mov
das
clc
mov
into
int
sub
into
xchg
pop
outsl
xor
cmpsb
lret
and
loopne
ja
mov
andl
pop
push
int3
adc
xchg
pop
sbb
loop
inc
sbb
mov
jmp
out
pop
add
jae
in
imul
inc
bound
and
cmp
push
in
jo
movsl
shrl
mov
push
xlat
add
lods
mov
xchg
test
pop
jle
mov
dec
xor
mov
mov
jg
fdivr
dec
jecxz
sbb
ret
fisttps
notb
mov
data16
mov
and
imul
mov
lahf
call
int3
mov
outsl
movsl
aas
divb
xor
xchg
out
js
nop
out
pusha
addr16
jle
lock
fsubrs
sti
fisttpl
sub
decl
xor
fstl
push
bound
adc
aaa
stc
mov
mov
lahf
sbb
mov
ret
pop
sub
mov
icebp
xchg
shlb
sub
loope
std
pop
mov
and
jge,pn
in
out
cmp
mov
or
sub
mov
push
pusha
test
fwait
xsha256
cmpsb
push
sub
daa
push
call
mov
cmp
mov
cmp
sbb
adc
mov
cmp
xor
daa
in
jle
cmc
jle
outsl
imul
xlat
mov
push
in
movsl
test
jle
in
scas
outsb
jmp
lds
push
test
and
aam
jb
cli
subw
mov
arpl
fsubs
xchg
pop
ds
xorl
lcall
sti
dec
imul
lods
dec
std
cmp
cwtl
fsubrl
push
insb
dec
sub
ret
add
inc
and
popf
rolb
cmc
xor
fwait
sbb
fwait
add
and
stc
out
leave
xchg
xchg
out
jle
insl
xor
inc
inc
mov
cld
lods
push
push
decl
xor
jp
cmpsl
je
mov
fbld
daa
gs
stos
shrl
out
adc
pop
xlat
mov
shr
xor
fsts
pop
mul
mov
sti
add
popa
test
aaa
push
rcl
imul
jmp
or
inc
sar
fidivrl
fsub
push
push
stos
adc
stc
mov
test
pop
dec
aad
inc
dec
fistps
xchg
aas
stos
jecxz
std
popf
negb
ret
dec
std
inc
stc
loop
outsb
mov
outsl
sbb
pop
int
aad
cli
mull
gs
mov
cmp
cltd
xor
mov
pop
xor
and
sub
push
fcoms
push
push
mov
insb
cmp
pop
xor
ret
das
cs
mov
dec
mov
out
imul
xor
push
jl
and
aad
rcr
fimull
push
xor
ljmp
scas
fldenv
ja
jne
fcomps
lock
ds
bound
es
ljmp
add
mov
push
stos
mov
shl
inc
mov
out
sar
or
xchg
das
out
xor
shl
lea
add
jmp
in
mov
test
mov
idivl
mov
lea
call
mov
dec
inc
pusha
loope
and
int
push
adc
or
test
jp
cld
flds
jno
out
mov
jbe
sahf
add
das
inc
jecxz
inc
sbbl
or
xor
leave
imul
cld
xchg
inc
mov
lret
scas
pusha
xchg
fimuls
cmp
sahf
ss
outsl
xchg
icebp
dec
mov
and
cmpsl
test
movsb
fldenv
out
xchg
inc
js
stos
fcomi
mov
andl
mov
inc
sub
dec
dec
cmp
add
xor
loop
pmaddwd
cmpsb
sub
sbb
test
fdivs
je
xchg
or
jl
and
pop
fldcw
ja
xchg
out
stc
mov
mov
subb
mov
xor
in
and
movsl
loop
mov
xor
popf
inc
dec
cmpsl
xor
shll
mov
xchg
les
adc
test
mov
test
loopne
adc
push
in
mov
loopne
xchg
mov
pop
xor
lret
inc
mov
js
mov
cltd
xchg
cmp
movsl
dec
push
add
mov
pop
lret
loop
daa
cmp
shl
bound
add
fisubrs
cmp
mov
stos
jns
scas
popa
xchg
les
jno
dec
cli
in
idivb
fists
and
mov
std
lcall
xor
decl
inc
and
mov
lods
add
cli
sbb
arpl
call
mov
lret
lret
negb
mov
xchg
cmp
daa
adc
movsb
out
ljmp
cld
inc
pop
mov
sub
add
and
test
mov
adc
sub
inc
pop
jno
fsubr
repnz
ret
popa
pushf
pop
shl
inc
or
xchg
xchg
cli
sbb
fs
out
sarb
pop
sbb
mov
adc
add
mov
xchg
nop
lahf
cmp
sahf
aas
sub
mov
test
pop
pop
loopne
pop
mov
test
pop
lret
loopne
push
push
pop
mov
xchg
mov
sbb
pop
jnp
mov
adc
mov
cmp
or
fs
jp
in
loope
stc
fcomps
lock
jo
shrl
pop
jne
out
pop
lcall
pop
push
pop
fidivl
sbb
data16
adcl
nop
xrelease
cs
push
mov
push
sbb
cmc
add
loop
or
xchg
adc
arpl
fwait
jecxz
add
enter
sbb
cs
mov
aas
pop
jp
sub
inc
xor
lcall
push
mov
or
mov
adc
ss
mov
dec
hlt
xchg
test
fadds
loope
jp
fistps
jmp
mov
or
mov
shl
push
movsb
add
pop
call
mov
xchg
das
popa
out
nop
int3
ds
negl
pusha
mov
mov
jge
or
lahf
xor
leave
mov
rep
and
mov
je
bound
or
rorb
mov
push
and
mov
and
stos
xor
add
rorb
lcall
xchg
mov
arpl
ja
mov
js
xor
jb
dec
repz
xchg
push
mov
jb
mov
pop
lret
cmp
xor
ss
add
dec
xlat
and
outsb
int3
xor
test
shrb
lahf
test
xorb
sbb
pop
fistpl
xor
fwait
xor
out
or
mov
int3
xorl
xchg
sbb
mov
inc
mov
repz
ljmp
cltd
mov
cmp
es
dec
sbb
sti
mov
jnp
arpl
cmp
test
fstl
dec
add
xor
iret
aad
rorl
bound
outsl
or
and
xchg
cld
lahf
pop
jle
jno
jb
dec
in
pop
xor
scas
xchg
inc
mov
fnstsw
xlat
aas
pop
orl
jmp
adc
es
repz
and
push
imul
dec
mov
sbb
push
je
adc
cld
ja
into
fs
jb
jg
cmp
mov
nop
repnz
pop
mov
in
xlat
xor
mov
sub
pop
mov
addr16
adc
mov
pop
jp
pop
mov
out
bound
aas
test
sbb
xlat
prefetchwt1
or
xchg
pop
pusha
fidivs
sar
in
cmp
fmull
test
add
scas
sub
xor
out
scas
lds
inc
pop
jp
jge
mov
cmp
out
and
lds
add
xchg
mov
xchg
lcall
leave
and
mov
adc
add
push
sarb
sbb
imul
mov
stc
fimull
fcomip
mov
adc
mov
sbb
leave
jbe
push
push
lds
test
dec
cld
movsl
in
movsb
add
or
push
inc
pop
cli
leave
mulb
pop
push
dec
xor
push
xchg
xchg
inc
notl
xor
mov
mov
xor
dec
sub
popl
lods
jae
jns
pop
fnstcw
and
jle
xchg
outsl
add
cmpsl
fidivs
shlb
dec
js
insb
clc
ret
sbb
mov
clc
dec
int3
lea
push
mov
lret
jmp
push
xchg
lcall
std
or
pushl
mov
mov
push
mov
dec
cs
sarb
push
pop
rol
pop
xchg
xor
and
mov
aad
mov
aaa
icebp
add
loope
pushf
out
cmovs
in
out
bound
call
testb
popa
jecxz
sub
xorl
mov
mov
or
stc
and
mov
and
out
stos
add
push
test
stc
inc
ret
es
test
test
fldt
lahf
pop
mov
in
inc
dec
jb
mov
sbb
clc
xchg
push
pop
cmpsb
ljmp
and
mov
jno
ljmp
xor
test
iret
mov
mov
inc
sbb
out
sbb
xchg
call
lds
xlat
jbe
cmp
data16
dec
ret
imul
stos
adc
dec
or
push
jo
sub
or
shl
test
roll
jg
outsb
pushf
mov
jbe
jnp
push
das
test
cmp
pop
int3
and
aaa
mov
dec
inc
xchg
adcb
stc
bound
mov
loop
lcall
aad
jns
movsl
test
stos
jns
rorb
pop
pop
push
sub
fs
loope
aad
push
jo
movsl
sbb
dec
push
xor
push
decb
scas
mov
pop
je
loopne
imul
add
adc
test
xor
lret
sti
mov
ret
push
repnz
push
sub
shrb
mov
mov
push
fdivrp
jle
add
repnz
rolb
add
loop
insb
xchg
sub
inc
in
jne
pop
mov
aad
push
sub
arpl
js
mov
add
cmp
xor
sahf
js
pop
adc
sub
stc
les
outsb
sti
shll
mov
divl
jecxz
mov
dec
inc
adc
xor
out
pop
jno
movsb
cltd
or
jno
lret
popa
mov
call
pop
or
mov
mov
ds
aaa
mov
xlat
mov
jecxz
sbb
je
insl
insl
inc
push
inc
pop
and
ds
mov
cmpsl
push
popf
and
pop
sbb
pop
mov
jmp
xchg
sub
jle
outsb
fildl
pop
test
pop
mov
xchg
stos
pop
pop
mov
sub
repnz
js
arpl
imull
jno
xor
and
mov
jge
inc
cli
inc
jo
xor
jnp
mov
int
dec
push
push
lret
shr
hlt
lods
and
loop
xchg
test
cmpsb
sahf
cmp
jmp
jecxz
pop
and
imul
rorl
inc
dec
sbb
push
aad
cli
lock
mov
mov
nop
xchg
cwtl
rcl
mov
scas
andb
lods
sahf
push
xchg
test
subl
cmp
enter
mov
mov
sbbl
mov
sbb
xor
cmp
mov
out
mov
cmp
scas
cmp
nop
in
rorb
out
pop
mov
loopne
inc
cmp
push
test
mov
nop
push
mov
sub
mov
add
inc
pop
inc
mov
sbb
lcall
mov
xchg
jecxz
testb
lods
fadd
movsl
fldl
jg
xor
mov
adc
jl
inc
push
in
cmpsb
inc
mov
outsl
test
imul
xchg
add
and
in
pop
dec
sahf
pop
dec
add
or
lea
fisttps
test
fwait
or
lods
dec
leave
stos
ss
in
lret
mov
mov
ds
cmpsb
aaa
or
cmp
and
test
in
sarb
pop
pop
cmpsb
out
mov
push
adc
insb
lahf
xchg
jge
add
sub
clc
xchg
dec
aad
ret
test
mov
dec
lea
in
test
cltd
pop
lahf
jl
sbbb
ljmp
add
pop
es
jns
mov
in
leave
add
jmp
or
int
mov
xor
push
push
pop
xor
xchg
loop
dec
das
cwtl
into
out
mov
icebp
mov
mov
jb
mov
dec
lods
cli
loop
icebp
cmp
jbe
popf
mov
movsl
enter
xchg
outsb
ds
push
cs
loope
clc
mov
test
or
and
xor
lds
popa
repnz
cld
imul
adc
mov
sub
cli
jnp
lcall
jo
movsb
adc
sahf
pop
sti
cwtl
inc
scas
add
lret
cmpsl
mov
repz
mov
push
into
gs
or
jp
mov
or
pop
pusha
cmp
aas
js
mov
shlb
sub
enter
addr16
mov
xchg
push
pusha
pusha
cmc
push
addb
scas
mov
xor
scas
adc
hlt
and
push
js
mov
in
lret
inc
jmp
push
subl
inc
pop
dec
push
pop
dec
push
sub
xchg
push
fildl
sub
fildll
mov
mov
sbb
add
push
inc
jmp
test
xorl
repnz
adcl
mov
ret
notb
or
cmpsb
jae
rorb
das
pop
mov
iret
and
imul
loopne
and
std
and
xchg
jecxz
mov
inc
adc
push
out
lcall
pop
add
or
push
fwait
inc
add
dec
mov
aaa
incb
adc
push
lcall
sbb
dec
cmp
add
push
nop
ficomps
lods
mov
enter
leave
or
dec
cmpl
outsl
gs
negb
add
outsl
loop
pushf
call
call
icebp
outsb
xorb
push
movb
lret
ds
faddp
xlat
sbb
inc
dec
into
psubq
inc
or
add
iret
test
out
sbb
jne
push
mov
andl
cmpsb
mov
pop
rcrl
jmp
dec
jmp
cmpsb
sahf
cmp
jmp
xor
mov
sarb
inc
jle
in
lods
mov
cmp
inc
loope
push
lock
jp
hlt
inc
or
mov
cmpb
dec
fimull
xor
push
inc
mov
dec
mov
ror
adc
mov
xor
gs
mov
inc
repnz
jb
add
lods
hlt
sbb
cmp
mov
pushf
lds
js
jb
pop
stos
jbe
jo
add
push
pop
pushl
lods
cld
rorl
fbstp
std
ret
loop
dec
push
aad
mov
jge
enter
js
push
add
notl
push
jmp
clc
pop
pop
movsl
lock
mov
push
sbb
cmp
mov
and
jae
mov
jmp
mov
movsl
ss
pop
and
sbb
push
and
and
mov
fwait
lods
mov
pushf
and
add
pop
stos
dec
ret
dec
jmp
aad
mov
fwait
pop
mov
popf
repnz
sbb
xor
insl
adc
clc
insb
das
sub
mov
loopne
int
cld
pop
fs
test
int
orb
mov
xchg
outsb
mov
xchg
xchg
push
int
cmpsl
jge
xchg
loope
pusha
sbb
mov
das
mov
rcr
das
pop
std
xor
inc
pop
and
xchg
lods
pop
mov
mov
out
push
fnstenv
mov
jbe
push
es
inc
cmp
dec
xor
enter
lcall
add
insb
stos
add
push
xchg
imul
rcrl
pop
cmp
xchg
addr16
aas
jne
cmc
mov
rorb
loop
pop
and
nop
sub
pop
std
mov
cmc
jmp
in
push
filds
push
mov
aam
lret
fistl
movsb
dec
lret
idivl
sti
jae
outsb
add
in
or
scas
je
sub
outsb
or
fistpl
mov
mov
shl
jmp
popf
push
xor
push
in
jmp
add
sub
sub
sbb
test
mov
lods
inc
and
pushf
aam
rcr
push
inc
cmp
fsts
or
addr16
call
push
arpl
push
jno
inc
test
js
mov
icebp
mov
lahf
xor
jo
and
lock
jg
mov
dec
mov
cmp
aas
xor
jns
iret
sti
leave
xchg
jbe
in
bound
fcomip
pop
sbb
push
scas
cmp
sarl
cmp
addb
ljmp
xor
jp
or
pop
mov
movsl
cltd
xchg
and
outsb
sub
xchg
add
lret
pop
shrl
jmp
mov
mov
xorb
lock
lods
aaa
jp
stc
mov
inc
mov
sbb
mov
jmp
cmpsb
sti
mov
adc
and
das
adc
ss
and
iret
iret
mov
gs
nop
cmp
clc
enter
push
std
fsubl
repz
or
mov
xchg
cli
icebp
into
fnstenv
push
push
fwait
xlat
lea
in
jno
push
mov
jo
cld
aam
ret
andb
and
clc
repnz
outsb
jns
push
jl
pop
push
in
mov
jo
xorb
movsl
or
mov
mov
pop
xorb
pop
jmp
in
or
xchg
xor
or
mov
or
or
rolb
pushf
fwait
enter
sub
xor
adc
out
test
inc
out
jns
call
dec
adc
mov
call
aaa
movsl
in
dec
xchg
mov
stos
adc
bound
popa
mov
ja
jae
xchg
aas
popa
out
loopne
lahf
aad
mov
mov
movsl
fs
mov
add
add
or
cmp
ret
push
sbb
and
ljmp
nop
xchg
xor
dec
jns
push
jle
stos
sbb
fcoml
je
mov
movsb
jl
out
inc
xchg
jmp
fucomi
stos
mov
xor
sub
popa
and
lods
icebp
out
mov
lods
mov
in
jne
lea
mov
jmp
adc
daa
nop
push
push
sahf
int3
loope
cli
aad
or
jle
scas
xchg
lods
out
out
cmp
loope
mov
inc
fildl
dec
mov
mov
test
add
mov
or
inc
cmp
aad
mov
negb
dec
fiaddl
es
loope
mov
je
and
cwtl
jmp
mov
leave
adc
int3
loop
rolb
rorl
jle
repnz
lret
stc
add
sub
inc
aam
jle
in
stos
and
sub
shlb
mov
sbb
dec
movsl
sub
sbb
push
push
cmc
push
add
push
insb
lahf
inc
sbb
sub
lods
popa
outsb
lds
pop
cmp
mov
push
int3
adc
das
sbb
xor
lods
sub
ret
lods
enter
loope
out
fs
sbb
subb
or
into
jbe
cwtl
movsl
int3
idiv
fisttps
cmpl
or
lods
push
adc
ficoml
jecxz
fwait
sarl
arpl
int3
aaa
jge
cld
incl
inc
xchg
loop
inc
push
xor
push
rcrl
iret
daa
xchg
sbb
pop
cmp
nop
or
or
icebp
xchg
icebp
or
les
fucom
pop
inc
cmc
lret
test
mov
or
pop
enter
lock
ds
movsb
mov
xor
xchg
testb
dec
mov
xchg
idivl
movsb
dec
dec
or
inc
mov
sbb
int3
jg
dec
and
or
or
dec
add
mov
in
or
pop
aam
sub
into
pop
jbe
test
fwait
jp
shr
mov
gs
add
sub
iret
adc
push
fsubs
cmp
roll
out
loopne
rorl
add
mov
roll
loopne
inc
mov
mov
xor
gs
repnz
std
mov
mov
pop
sub
hlt
xchg
insb
and
mov
add
adc
int
mov
es
sub
neg
xor
sbb
cmp
pop
or
arpl
ljmp
mov
dec
jnp
mov
add
hlt
mov
out
jae
inc
xor
jnp
adc
test
dec
cmp
imul
std
stos
loop
movsb
and
repz
insl
dec
add
sub
aaa
inc
cwtl
icebp
fcomp
add
push
pop
and
or
pop
pop
addb
popf
cld
out
inc
xchg
fwait
repnz
inc
mov
addl
das
call
fcomp
mov
dec
ficomps
xlat
daa
clc
xor
faddl
mov
mov
inc
scas
mov
add
fildll
or
mov
push
cld
xchg
out
xor
loopne
decb
nop
pop
push
dec
insb
pop
pusha
fcompl
aas
mov
inc
test
ss
pushf
dec
ljmp
mov
ds
out
lock
stos
cmp
jecxz
clc
sub
lcall
mov
mov
xchg
mov
xchg
aaa
pop
lea
cmp
sbb
imul
lea
daa
js
add
test
mov
sbb
out
dec
and
dec
adc
pusha
pop
cmp
orl
loopne
es
mov
je
hlt
dec
add
jmp
mov
inc
add
fbld
fnstcw
jo
mov
sbb
in
adc
mov
adc
movsb
pushf
mov
mov
loop
aaa
int3
mov
jb
nop
xchg
push
in
push
and
fildl
into
js
pop
dec
arpl
adc
mov
icebp
dec
dec
repz
dec
rorb
mov
jle
adc
push
xchg
mov
jg
push
shll
pop
jg
fs
insl
test
addl
gs
jo
bound
adc
adc
lock
das
lods
lock
in
repz
rorl
in
sub
push
xor
jmp
mov
inc
iret
in
mov
cmpsl
lods
mov
nop
sbb
sub
xchg
mov
and
cmp
xchg
out
add
push
inc
loope
ds
cli
jg
leave
outsb
sbb
push
mov
mov
lahf
icebp
out
sbb
shld
push
mov
aas
in
call
jp
sub
dec
lret
cmp
push
stos
enter
xchg
xor
mov
and
out
lea
mov
mov
daa
out
mov
or
cmpsl
xor
pop
xor
mov
loope
pop
mov
call
pop
ficoml
mov
inc
mov
pop
in
aaa
rcr
inc
mov
dec
add
ret
fucomip
arpl
sub
pusha
sbb
ss
aas
mov
jge
cwtl
out
push
jle
lods
leave
ret
mov
jecxz
pop
xchg
pminub
addr16
mov
std
push
pop
movsb
and
sbb
push
dec
das
push
mov
sti
or
pop
outsb
xlat
mov
imul
mov
pushf
stc
add
and
sbb
mov
es
cmpsl
push
adc
sub
mov
gs
mov
xchg
push
jp
test
push
pop
push
or
dec
inc
cmp
or
xor
pop
add
add
test
sub
pop
mov
cmpsb
adc
fcos
inc
cmp
shlb
cmp
popa
decb
pushf
scas
ret
dec
xchg
fs
pop
fdiv
adc
mov
sbb
pop
mov
scas
sbbb
hlt
in
push
fcomi
jns
jge
dec
mov
adc
jbe
imul
in
push
and
xchg
out
xchg
imul
daa
mov
lret
jecxz
adc
clc
inc
andl
dec
movsl
int3
push
xor
out
sbb
or
in
adc
dec
or
pop
aad
nop
popa
pop
out
fcompl
mov
loopne
mov
pop
outsb
out
divl
sahf
cmp
xchg
in
bound
out
sub
xchg
sub
lahf
sarl
sbb
sahf
mov
or
imul
or
jg
xchg
or
sbb
dec
mov
pop
fimull
push
sub
aad
xor
inc
pop
jne
sbb
mov
imul
mov
ret
dec
push
lretw
jle
xchg
fidivrl
add
pop
sti
movsl
jp
out
mov
aad
jmp
cltd
dec
in
enter
lods
cmc
mov
sbb
push
popf
mov
push
test
or
jge
inc
mov
pop
mov
rclb
mov
dec
cmp
int3
and
cmp
xchg
or
inc
in
and
aam
shll
fisttps
sub
mov
inc
cmpsl
cltd
aas
cwtl
cmpb
inc
dec
push
xor
lock
std
xor
jg
cmp
into
insl
cmp
lods
xchg
test
fisttps
in
xor
adc
cmpsb
shll
mov
ss
movsb
leave
sub
aam
repnz
xor
arpl
jne
mov
sbb
mov
cwtl
stos
aas
xchg
nop
xchg
mov
and
mov
rorb
mov
pop
mov
scas
sarb
sub
push
push
leave
jb
imul
fwait
rorb
pushf
pop
xor
leave
mov
mov
mov
ret
mov
std
ret
sbb
xchg
mov
stc
xor
scas
inc
loop
mov
roll
lret
push
es
test
int
lea
xor
sti
test
jecxz
pop
push
out
cmp
nop
xchg
pop
adc
push
ffree
rcrb
fdivl
in
push
jp
jnp
mov
xor
pop
xor
jmp
movsl
hlt
mov
jmp
xorl
jmp
in
add
addr16
lret
xchg
jbe,pn
inc
int
mov
ljmp
test
lahf
mov
rolb
cmp
adc
repnz
clc
popl
test
mov
iret
xor
inc
add
ds
stos
pushf
movsb
or
aas
jnp
or
mov
mov
roll
rclb
shll
int3
dec
pop
dec
xor
jle
push
sbbb
or
addr16
and
fists
fs
and
ret
shrb
nop
inc
dec
dec
ja
lock
cs
sub
repnz
cmpsl
jnp
nop
mov
mov
xchg
push
roll
shll
mov
mov
pop
insb
movsb
mov
push
fimuls
and
push
inc
jb
jno
data16
jle
iret
subl
jp
pop
mov
inc
cwtl
sub
sub
lret
jmp
xchg
push
lds
sub
add
mov
jecxz
out
das
sbb
xchg
ret
stc
test
jbe
pop
add
push
cmpsl
sbb
aaa
xchg
imul
inc
in
mov
sbb
mov
into
inc
in
lahf
popf
sbb
pushf
or
subl
mov
movsb
gs
adc
mov
arpl
subb
das
pop
cmp
push
cli
xchg
pop
cltd
lods
es
ret
fdivl
lret
inc
xchg
xchg
cwtl
and
mov
jl
adc
and
lds
cmpsl
int
lcall
mov
mov
sub
and
rcrb
cmp
insl
stos
imul
add
rcll
push
mov
adc
sbb
inc
adc
shl
cmp
pop
sbb
jnp
push
es
mov
inc
add
jl
ljmp
fistpll
ljmp
push
test
add
sbb
aaa
fists
lods
pop
shlb
push
or
jo
insl
dec
lret
std
mov
call
out
xor
stc
inc
cmp
aam
jae
or
dec
mov
popa
pop
loope
xor
sub
and
aaa
arpl
and
add
push
xchg
cmp
nop
rcll
cwtl
mov
xor
jecxz
lock
arpl
test
je
push
rolb
ss
aam
nop
adc
mov
mov
jle
je
xor
cwtl
cmp
fcomp
cmpb
nop
or
sub
cwtl
inc
sub
ja
movsl
sbb
push
orb
insb
sbb
or
in
mov
inc
fidivrl
pop
sti
inc
sbb
xchg
jbe
pop
and
cmc
mov
and
xchg
aad
pop
jecxz
adc
sbb
xchg
sbb
pop
lods
fwait
leave
jle,pn
push
fistpl
sub
les
add
lret
rorl
adcl
adc
dec
pop
fwait
pusha
mov
push
cltd
adc
mov
int
pop
enter
les
int
mov
outsl
pop
cmp
aam
fldl
cld
jl
jne
and
push
mov
jecxz
pusha
shrb
sbb
inc
cmp
pushf
adc
int
mov
push
fldcw
stos
loopne
scas
outsl
or
jle
daa
cmc
inc
and
imul
pop
data16
sub
frstor
push
std
inc
cld
scas
out
mov
test
das
mov
xchg
arpl
jb
cmp
stos
rcr
aam
insb
cmp
sub
notb
xor
mov
in
adc
insb
lcall
xchg
xor
repz
or
scas
adc
add
test
jns
scas
ficoms
mov
sub
lock
shrl
aam
in
push
mov
jge
fstpl
arpl
dec
pop
push
sbb
rorl
and
sub
inc
add
cltd
push
jnp
xor
mov
inc
mov
dec
and
push
xchg
sub
cmc
arpl
add
xor
mov
fs
sub
divl
movsl
stc
test
and
jbe
test
je
mov
pusha
pop
out
pop
xchg
or
and
or
jae
int
ljmp
or
cld
add
mov
push
inc
jg
cmp
loope
leave
push
dec
in
vmread
mov
and
cmp
lcall
rclb
std
lret
repz
xchg
dec
xlat
jle
mov
add
xchg
jno
sub
sti
pushf
and
pop
lock
in
jecxz
in
stos
daa
sub
lods
es
jns
lock
or
xchg
into
cltd
xor
xchg
pop
test
lahf
popa
lock
leave
in
mov
hlt
in
inc
orl
inc
jbe
lret
rol
jno
mov
hlt
fdivl
fmul
and
sbb
jbe
cmp
mov
sub
inc
shl
in
or
out
sub
lods
sbb
inc
adc
negl
xor
or
lret
aam
add
jge
iret
cmp
lahf
cmpsb
pushf
loop
jge
ret
aad
and
std
nop
xor
inc
in
and
xor
push
sbb
mov
scas
ret
int3
dec
lods
loop
xchg
cwtl
sbb
rorl
mov
jecxz,pt
insb
ljmp
pop
add
fidivrl
stos
vmwrite
mov
add
xchg
rcll
sbb
in
xchg
fs
add
hlt
push
fdivrp
sub
js
sahf
icebp
cmp
pusha
ret
movsl
and
mov
mov
cmpsl
imul
out
xchg
cltd
push
jl
xchg
lcall
cmc
adc
leave
push
mov
inc
lss
cmpsb
mov
sbb
js
and
add
jo
jle
jg
add
push
inc
fcmovnbe
das
movsl
sub
es
cmp
jge
pop
xchg
xchg
es
mov
add
push
pushf
arpl
in
mov
mov
in
iret
cmpsb
fstpl
xchg
mov
cmp
aam
xor
push
or
jl
loop
jae
xchg
add
outsb
mov
fiadds
mov
mov
mov
jb
lret
sbb
xchg
add
xor
xchg
fstpt
in
cmp
orb
jmp
into
sbb
cmp
xchg
or
test
cmp
mov
mulb
xchg
mov
adc
in
cld
sarl
sarb
adc
mov
bound
jnp
xor
stos
xchg
out
adc
fsubl
cmpb
push
lods
push
mov
cwtl
in
jo
pop
pop
cmp
dec
push
int
dec
inc
sbb
fwait
ret
mov
pop
adc
fisttps
icebp
sub
icebp
or
cli
push
daa
cmp
sub
sar
mov
fisubrl
xor
fwait
je
mov
and
in
jmp
test
mov
push
repnz
rorl
in
ja
outsb
sub
sti
lds
out
xchg
mov
lock
lahf
add
cmp
mov
in
bnd
jnp
scas
inc
shll
in
xor
inc
push
pop
pop
movsl
adc
or
xor
ss
lahf
in
fdivrl
rorb
xlat
lcall
mov
xchg
jne
pop
shl
int3
jle
test
dec
aad
push
sbb
mov
cmpsl
std
lret
in
mov
lods
lock
mov
mov
fldl
mov
pop
add
push
shl
fnsave
aas
xchg
pushf
scas
mov
mov
int3
shlb
jno
scas
pop
cmpsb
mov
movl
ss
push
cld
xor
or
jnp
int
jp
rdpmc
pop
daa
adc
sar
test
test
outsl
mov
push
outsl
pop
aas
test
adc
imul
mov
cmc
xchg
fimuls
lods
dec
jb
lret
lock
pop
inc
jg
add
xchg
inc
aam
pop
jo
movsl
push
out
insb
xchg
ret
add
shr
in
add
lds
fimuls
scas
lret
sti
pop
popa
sub
mov
pop
or
je
and
insl
int3
insb
ret
inc
pop
out
mov
fimull
into
pop
cmpsb
fsts
movsb
repz
mov
aad
in
cld
lock
sbbl
std
xor
jnp
test
decl
push
ljmp
add
out
aaa
adc
movl
leave
xor
fs
rcrb
xchg
mov
mov
scas
xor
adc
lret
add
add
fstpl
push
daa
pop
jnp
test
mov
dec
movb
jo
pop
out
lock
mov
xchg
add
xlat
out
fcoml
xchg
lahf
jmp
or
push
push
push
cmp
pop
pop
cld
push
mov
outsb
cld
rorl
and
push
push
dec
or
or
sarb
mov
jnp
jge
data16
fsubrl
jecxz
mov
jbe
loope
cmp
jmp
or
loopne
and
cmp
mov
subb
outsl
sub
xchg
mov
sbb
fildll
lea
aaa
xor
imul
jecxz
or
jmp
push
push
enter
jle
aas
xlat
jb
stos
clc
pop
or
lcall
arpl
push
pusha
and
outsl
sti
popa
inc
dec
xor
cli
mov
pop
fwait
adc
pop
pop
cmp
jge
int3
dec
dec
mov
nop
hlt
lods
cli
sub
icebp
lret
cmp
leave
and
pop
push
jl
in
sbb
jle
adc
add
pop
and
cmpsb
aaa
fidivl
cwtl
adc
mov
cmp
pop
lods
mov
pop
xchg
or
and
xchg
xor
cld
jg
stos
arpl
mov
aam
sub
movaps
out
repz
insb
dec
lret
sbbl
es
fidivs
push
jmp
or
mov
js
in
int
mov
mov
or
cltd
sbb
mov
cmpsl
in
or
aad
imul
ja
insl
sbb
mov
or
xor
dec
daa
insb
mov
and
xchg
imul
mov
dec
negl
and
ljmp
fs
lock
test
or
jg
stc
pop
out
dec
mov
cmpsb
jge
inc
lods
sub
push
inc
pop
loop
and
pop
out
mov
aam
mov
cwtl
std
jae
in
xor
cs
mov
dec
lcall
inc
aas
inc
subl
jnp
sbb
lea
cmp
mov
add
pop
into
cmpb
out
lahf
das
iret
mov
into
lea
sbb
roll
sbb
outsb
mov
mov
js
in
pop
push
push
sub
jle
shl
test
sub
push
fs
sub
jmp
ss
push
push
clc
mov
jecxz
clc
adc
hlt
out
ret
add
push
out
mov
xor
jno
pushf
sub
xor
sub
mov
insl
ret
aam
cld
dec
and
std
push
es
mov
cmp
xor
movsb
push
out
or
mov
scas
inc
fnstcw
mov
add
push
add
xor
movq
pusha
jmp
adcl
jg
ja
inc
das
enter
sbb
mov
push
adc
inc
mov
out
add
leave
and
roll
sub
stos
movsb
bound
sarl
adc
pop
lods
pop
or
xor
cwtl
incl
add
pop
mov
cltd
hlt
mov
scas
icebp
dec
aas
pop
out
mov
cmp
sub
lods
mov
dec
add
pop
rol
scas
lock
xchg
notb
and
sbb
xchg
out
cmp
pusha
das
mov
dec
pop
dec
insl
cmp
mov
int
adc
xchg
enter
int3
icebp
pop
fidivl
or
mov
inc
adc
iret
or
xor
push
mov
mov
pop
mov
inc
pop
sub
popf
adc
xor
data16
or
stos
jb
lret
mov
inc
push
shlb
or
stos
inc
icebp
sbb
xchg
les
pop
sub
int
or
or
daa
repnz
int3
rol
out
ficoms
cmp
lret
loop
add
mov
add
pusha
ret
repnz
inc
push
int3
mov
shll
jge
xchg
or
iret
repnz
dec
aam
lret
pop
xchg
jae
jg
inc
adc
rcll
popl
fcmove
fwait
addl
movsl
aam
sub
out
dec
imul
pop
movsb
movsl
cmp
loopne
inc
fnclex
repz
inc
or
aad
cld
adc
fwait
mov
and
pop
lret
jbe
mov
das
and
xorl
xor
fcoms
inc
shll
push
push
rcll
insb
lcall
jne
scas
push
fldenv
sti
test
mov
out
addl
cmp
adc
popf
adc
xor
and
lahf
xor
fwait
push
nop
mov
cli
cs
cmp
add
xor
sbb
enter
push
push
insb
pop
jge
inc
or
das
sub
hlt
mov
ret
lret
jge
sub
out
mov
outsl
stos
gs
in
sbb
aam
fistl
cmp
mov
cmp
aaa
out
xchg
or
inc
lret
in
mov
sub
ret
out
xchg
cmpb
movsb
adc
out
jge
push
cmp
pop
lret
sub
mov
insb
rcrl
fisubrs
or
pop
adc
xor
dec
mov
lahf
test
scas
mov
cld
sbb
cli
mov
sbb
call
int3
cmpsb
scas
xor
lds
ljmp
repnz
scas
lahf
mov
mov
adc
mov
or
int
hlt
add
fdivr
mov
xor
add
stc
mov
adc
xchg
pop
fsubl
dec
xor
xchg
mov
ss
dec
scas
xor
jp
pop
jmp
adc
dec
inc
out
sbb
das
and
mov
lahf
lret
dec
es
mov
push
xor
ja
push
push
cmp
xchg
mov
mov
popfw
hlt
cmp
cmp
jb
jge
push
push
test
je
lret
scas
or
loopne
insl
pop
xlat
pop
ficompl
ljmp
inc
enter
xor
dec
adc
pop
mov
mov
inc
pop
scas
push
ss
xchg
fcmovnb
xchg
inc
data16
rclb
aas
or
sub
lret
les
cltd
in
or
push
adcl
sbb
imul
adc
cld
add
mov
jne
stos
scas
inc
pop
jge
inc
imul
negl
in
mov
jle
aaa
mov
sub
or
out
jmp
loop
mov
dec
pop
jo
mov
dec
pop
push
add
fnsave
mov
lret
mov
ss
fadd
xchg
xor
cmpsl
mov
mov
fldcw
mov
lods
lods
mov
clc
mov
push
movsb
lods
pop
lret
xor
mov
inc
pop
stos
dec
shll
cmp
cltd
push
push
rorl
iret
aam
negb
and
cld
adc
in
jg
decl
pop
add
pop
lret
sub
mov
mov
in
push
mull
xchg
sbb
in
insl
pop
or
std
xchg
js
adc
jge
xorb
sub
repnz
adc
push
jmp
xor
mov
pop
dec
inc
and
sub
out
cmpsb
xchg
hlt
push
push
das
adc
cmp
dec
or
sub
mov
je
and
cmpsb
hlt
push
pop
jae
mov
in
sbb
mov
jbe
or
outsl
dec
mov
pop
iret
mov
ljmp
loope
jmp
imulb
bnd
push
mov
push
add
pop
and
enter
dec
mov
arpl
and
arpl
or
mov
or
clc
or
pop
xchg
sbb
iret
in
and
and
mov
pop
mov
aaa
lods
jge
es
sbb
sbb
cmpsb
or
jle
adc
out
cmp
lret
mov
rcrb
pop
jae
cltd
and
push
fwait
lcall
sti
mov
xor
inc
in
push
mov
dec
repnz
jns
iret
push
lea
fisubl
pop
incb
imul
rcr
push
je
ret
imul
add
pop
jge
cmpsl
xchg
add
arpl
ret
cli
jbe
fidivs
fidivs
lea
mov
inc
dec
mov
jno
xor
cmp
clc
test
std
mov
adc
xchg
icebp
leave
jl
jg
inc
push
pop
add
pop
leave
add
xchg
inc
cmp
xchg
mov
loop
imul
hlt
jb
mov
push
push
sub
jne
dec
jcxz
xchg
push
dec
pop
daa
mov
push
rclb
into
and
fldt
loopne
notb
pop
lea
out
in
or
and
sbb
adc
nop
aaa
sub
dec
cmp
mov
mov
push
jbe
add
ret
pop
cmp
xchg
add
dec
insl
shll
int3
pop
pop
and
rcrb
mov
push
nop
cmp
lret
push
rcrl
adc
loopne
jle
hlt
test
xchg
mov
mov
sbb
pop
es
andl
add
and
sub
ljmp
xlat
cmpsl
sarb
fisttps
out
dec
mov
cmp
xchg
pushf
inc
push
int
cmp
push
into
mov
mov
or
dec
test
pop
sub
icebp
or
mov
dec
popf
cwtl
jo
jmp
rorb
cmp
xor
mov
div
arpl
pusha
xlat
push
iret
push
nop
xchg
das
popa
push
mov
jmp
adc
sbb
xchg
ljmp
in
mov
push
mov
in
mov
or
mov
loop,pt
adc
push
jne
jg
mov
fistps
push
jmp
or
jne
int3
pop
or
adc
add
mov
leave
into
rol
lods
adc
ret
in
iret
sub
sub
ja
mov
xor
and
in
sub
adc
lcall
lods
cmp
xchg
lret
mov
jne
out
push
jle
push
sbb
out
xor
sbb
repnz
out
jl
out
pusha
mov
pop
cmp
popa
jne
push
xchg
rorl
or
mov
cs
lret
mov
and
inc
aad
call
repz
call
bound
cmc
ss
stos
test
test
adc
jno
js
lret
or
daa
jne
ret
mov
cmpsb
fnstcw
stos
xchg
sbb
cmp
out
inc
sahf
pop
leave
mov
mov
aas
fists
jb
and
mov
ja
cld
pushf
fiadds
or
ds
imul
je
cmpsl
ret
and
adc
rclb
mov
je
mov
push
aad
jg
dec
jg
mov
sub
pushf
fnstsw
sahf
mov
inc
insl
pop
cmp
rclb
sbb
jb
int
mov
jno
popf
orl
jg
sbb
scas
add
jmp
push
mov
clc
movsl
inc
rcrl
fisttps
adcl
loopne
scas
test
sub
push
mov
cmpsb
pusha
shr
pop
mov
outsl
inc
ss
nop
push
adc
lret
data16
mov
cmpsb
enter
iret
pop
push
cwtl
xchg
lea
fidivl
das
inc
jmp
adcl
ja
cmp
pushf
inc
xor
mov
mov
out
imul
ds
sub
out
jmp
jbe
sub
bnd
push
cmp
js
je
jg
cmp
jnp
xlat
jmp
jbe
rclb
stos
out
ret
into
xor
les
mov
sbb
je
stc
mov
push
inc
test
xor
xor
cmc
and
inc
fincstp
pop
mov
imul
sbbb
clc
sub
popf
sbb
add
cmp
and
push
cmpsb
push
ret
push
push
or
dec
mov
loope
or
setb
xchg
unpcklps
outsb
xchg
sarb
mov
sub
xor
or
out
mov
push
js
je
pop
mov
ret
push
shrb
cmp
outsl
and
mov
jne
orb
out
mov
mov
gs
test
inc
mov
sbb
loope
decb
pop
scas
mov
data16
rcll
dec
and
xor
xchg
cmp
out
pop
pusha
stos
lock
call
mov
fidivrl
data16
aas
popa
inc
sarb
rclb
imul
lret
outsb
jle
aas
les
outsl
in
pusha
sub
or
inc
loopne
push
or
xchg
scas
std
mov
xchg
mov
sub
mov
sbb
out
aam
jbe
pop
mov
insb
ja
lods
cli
mov
xorb
mov
mov
add
dec
gs
leave
or
imul
mov
xchg
dec
aam
lret
fwait
cmpsb
lods
xchg
cmpsl
or
es
adc
push
es
insl
jbe
cmp
rol
lods
repnz
mov
add
popf
lods
mov
movsb
xchg
push
rolb
sbb
je
pop
imul
lea
cmpsl
pop
pop
mov
mov
lds
xchg
push
or
decl
mov
arpl
dec
xorb
jns
inc
filds
popf
out
loopne
xor
roll
pushf
hlt
inc
int3
stc
mov
daa
test
faddl
sub
leave
dec
xchg
movsb
pop
stc
fs
andb
cmp
cwtl
mov
jl
cmp
add
adc
in
bnd
xchg
jns
lds
ret
jnp
fimull
xor
jno
insb
ds
cld
inc
or
or
jmp
out
lea
adc
push
adc
ror
popa
inc
xchg
mov
xor
nop
add
push
sbb
pusha
dec
push
sub
adc
mov
ljmp
jge
inc
xchg
stos
scas
or
pop
inc
jle
nop
loop
in
popa
sbb
icebp
testb
lock
xchg
stos
outsl
ljmp
inc
dec
pop
pop
dec
divl
int
xor
scas
mov
dec
xchg
cwtl
push
cmpl
std
mov
cmp
xchg
or
out
add
stos
sub
scas
jle
call
negb
insl
mov
mov
adc
lret
ficomps
jmp
xor
add
dec
jecxz
or
in
in
inc
push
andb
jmp
out
rcrl
fildl
mov
dec
loopne
inc
divps
xlat
mov
xchg
cltd
insb
xor
push
dec
xor
push
mov
sarb
and
jb
push
orb
int
push
ja
jge
call
fst
inc
jb
aaa
or
imul
clc
mov
sbb
xlat
jnp
jl
sbb
mov
and
push
pop
xlat
mov
xchg
cmp
lea
lock
nop
jmp
add
scas
scas
jae
fistl
or
mov
stos
or
dec
dec
scas
orb
scas
add
fstl
jmp
aas
pop
push
push
cmp
psrld
or
jbe
add
mov
jns
repz
dec
add
lods
pop
pop
mov
and
sbb
sbb
stos
xchg
rolb
into
into
lret
mov
rcrb
xor
jne
dec
pop
add
mov
fstpl
xlat
lahf
and
sahf
pop
and
add
fstps
pop
dec
xchg
arpl
orl
pop
mov
push
xor
ljmp
fldcw
ret
and
pop
pop
inc
and
xchg
mov
jle
fildl
stos
cwtl
sahf
adc
sbb
mov
imul
in
and
jbe
fwait
test
cwtl
nop
arpl
mov
adcb
push
es
std
std
sbb
cmp
dec
test
sub
mov
cmp
inc
pushl
ret
bound
inc
loop
or
dec
xor
xchg
xchg
arpl
push
mov
das
fwait
or
out
and
sbb
inc
push
shrb
pop
shl
add
push
loop
aad
cmpb
fistpl
movsb
xor
mov
shrb
cli
dec
leave
sub
mov
push
mov
inc
adc
hlt
mov
fcmovbe
sub
fs
js
jns
insb
mov
add
xchg
arpl
movsl
cs
and
or
cwtl
bound
jge
in
std
cmp
sbb
push
dec
mov
setns
popf
mov
call
dec
test
fistps
js
aaa
inc
mov
call
inc
push
xor
jo
push
push
into
mov
dec
idiv
leave
dec
sar
inc
and
insl
in
mov
push
pop
rorl
adc
mov
mov
or
js
ds
pop
leave
fwait
in
add
pop
shll
xchg
sub
out
hlt
lds
pop
push
cmc
js
cmpsl
adc
and
jnp
popf
es
mov
mov
or
dec
fnsave
iret
push
inc
mov
das
into
lods
leave
sbb
mov
imul
shrl
pushf
lahf
xchg
call
gs
scas
cli
cmp
das
loopw
cmp
sbb
mov
xor
push
jg
or
aaa
sti
mov
and
dec
imul
jo
outsb
imul
loopne
mov
lret
push
inc
sub
fs
fidivrl
std
flds
js
mov
jne
arpl
mov
out
jne
adc
aaa
stos
ds
int3
pop
add
jecxz
pushf
mov
orl
pop
sbb
or
mov
push
dec
add
mov
lcall
jle
or
outsb
push
push
sarb
scas
in
dec
jns
inc
enter
pop
test
in
xor
jns
mov
testl
in
std
shrb
or
popf
xor
or
loope
xchg
lods
push
push
andb
call
xchg
out
push
jle
sbb
mov
sbb
inc
pop
adc
push
lds
jbe
fcmovb
roll
adc
push
push
mov
js
mov
out
popa
fdivl
into
ss
out
jno
mov
jne
pop
dec
loop
test
clc
cltd
sub
add
add
mov
jae
xor
sbb
sbb
mov
ret
cwtl
inc
arpl
imul
cmp
inc
outsb
sbb
pop
mov
xor
jne
mov
jg
push
cmp
jecxz
mov
lcall
jl
or
das
push
inc
push
in
out
mov
pushl
lock
sbb
pop
dec
or
or
and
jnp
shrl
mov
xor
fcmovbe
mov
mov
xor
daa
cmpsb
xor
adc
test
xchg
jnp
dec
jmp
xor
jl
and
push
pop
adc
pushf
mull
mov
call
nop
mov
xchg
add
adcl
mov
xchg
mov
arpl
xchg
insl
shr
leave
mov
call
push
or
xor
cld
popa
mov
sbb
xchg
xor
ja
mov
jl
lret
jo
scas
push
call
xlat
mov
shll
fsubrl
std
lahf
lret
xor
pop
mov
cmp
and
or
fildl
fdivs
xchg
ret
xchg
xchg
int3
fbld
rcl
sub
jl
aaa
outsl
enter
mov
adc
arpl
xor
push
adc
mov
pop
push
jmp
jp
lock
sub
xor
sub
push
add
or
kmovw
mov
dec
jl
fidivs
int3
mov
repz
or
sub
lahf
lret
pop
mov
xchg
add
rorl
or
jbe
fcmovnbe
arpl
gs
fcoms
lock
xor
ja
and
jl
lcall
dec
inc
mov
mov
outsl
popa
xchg
sbb
stc
cltd
mov
add
imul
cmc
xlat
jns
or
or
mov
aad
loop
out
cmpsl
rcr
cmpsb
xor
arpl
mov
std
and
mov
xchg
pop
push
bound
fwait
negl
push
sub
mov
scas
iretw
sti
lcall
sbb
pop
and
inc
xchg
pop
ljmp
or
clc
nop
cmpsb
hlt
dec
pusha
sub
out
or
lock
push
imul
loop
in
ja
aam
sub
pushf
loop
cwtl
lahf
rcll
and
jmp
xchg
jne
jmp
arpl
adc
repz
mov
aad
jmp
stc
cwtl
mov
dec
mov
inc
add
mov
xlat
movsl
sahf
xor
inc
push
jg
mov
inc
mov
int3
lds
imul
mov
inc
cmc
mov
mov
mov
roll
cld
ret
push
insb
ret
jo
push
mov
iret
push
cmp
fistpl
or
mov
adcl
xlat
mov
cmpl
inc
push
out
push
pop
push
das
inc
mov
sub
jo
ret
xchg
test
iret
out
cmpw
jo
je
repz
or
cmp
dec
andb
lods
xorb
mov
xchg
xchg
xor
and
adc
sbb
out
andb
pop
add
clc
ret
cli
cmpsb
and
sti
mov
aad
cmp
cs
adc
lds
xchg
jg
jne
xchg
xchg
mov
cs
mov
or
mov
pop
jp
cmp
push
lea
lret
jp
xchg
mov
movsb
test
es
and
add
fldcw
pop
adc
cs
stos
sub
and
test
dec
repnz
icebp
jg
mov
cwtl
add
cmp
push
les
das
fndisi(8087
cld
and
loop
mov
nop
lahf
jecxz
and
jge
mov
jle
jns
and
fidivrl
jns
xchg
movsl
out
inc
ret
mov
call
fcmovnb
inc
in
lods
int
stos
subl
mov
adc
lcall
jmp
push
xchg
das
popf
dec
ret
jb
int
adc
jbe
rorb
mov
mov
adc
mov
aaa
xor
fildll
cmp
mov
mov
bound
es
xchg
insl
add
icebp
aad
sahf
adc
shl
nop
push
pushf
push
add
fdivl
popf
scas
mul
in
or
dec
int3
std
jb
jecxz
lods
jl
pop
xor
inc
lea
push
cmp
jnp
lahf
movsb
enter
xchg
ds
cli
shl
ficompl
jns
jecxz
inc
xchg
dec
jae
nop
xor
jnp
jp
or
lcall
test
inc
xchg
leave
inc
je
rcrb
mov
icebp
icebp
jmp
int3
stc
js
sub
es
shll
mov
movups
cmp
sub
pop
ret
jns
fildll
lock
nop
mov
inc
and
jbe
aas
cltd
pushf
fistpl
inc
sbb
imul
push
jl
cltd
cmpsb
cltd
sbb
or
ljmp
out
test
sub
inc
sbb
stos
and
insl
scas
dec
xchg
xor
lret
and
push
pop
push
pop
adc
add
xchg
mov
shl
cmp
push
adc
mov
bound
xor
popf
push
out
jne
in
cmp
jp
js
pop
jns
aas
ret
lret
inc
mov
sub
sbb
fs
xchg
add
sbbb
mov
fdivs
call
xchg
mov
add
lret
fmul
cli
jg
cs
loope
movsl
js
cmpb
fldt
outsb
out
push
pop
aas
ret
jbe
cmpsl
cmp
mov
and
jp
add
popa
stos
jmp
mov
jp
data16
ror
add
and
and
out
sbb
xor
mov
dec
mov
mov
push
adc
mov
mov
jle
mov
jp
aam
pop
push
inc
shll
add
and
xlat
add
jmp
xor
mov
jo
ss
xlat
pop
jmp
or
xchg
leave
cmp
cli
mov
adc
icebp
jae
inc
inc
xchg
jnp
fs
jns
dec
call
mov
stos
into
lods
cltd
and
push
leave
jecxz
mov
xor
jno
std
add
mov
aaa
push
sbb
inc
stos
hlt
mov
lcall
cwtl
dec
cltd
dec
popf
add
mov
or
or
call
add
sbb
addl
nop
loopne
sub
mov
pop
aam
xor
fs
outsl
pop
pop
lods
mov
test
cld
xchg
ficompl
lcall
inc
xchg
pop
add
test
pop
sub
push
jbe
shufps
orl
test
shll
jo
mov
mov
ss
pusha
pop
js
fists
push
pop
or
sbb
repz
jbe
push
or
adc
outsl
out
jle
popa
xor
and
push
shr
jne
dec
push
out
pop
pop
out
outsl
loopne
dec
pop
and
jne
inc
pusha
xchg
and
ds
sahf
arpl
cltd
adc
adc
push
dec
adc
lds
xor
sbb
xor
dec
sarb
or
add
mov
mov
xchg
dec
shlb
mov
hlt
lds
mov
xor
addb
in
mov
out
adc
or
fsubrs
jns
shlb
sub
pop
sub
and
int
cmc
push
mov
dec
mov
loop
icebp
ja
mov
mov
std
mov
mov
dec
push
leave
xchg
pop
xor
cmpsb
arpl
std
je
push
cltd
adc
addr16
fldt
jno
jmp
push
add
pop
sbb
dec
dec
sbb
sbb
call
mov
sbb
xor
xchg
lcall
xchg
fdivrl
jnp
repz
jns
std
pop
xlat
out
aad
mov
insb
xchg
mov
scas
in
jle
pop
dec
in
and
sub
sbb
fisttps
iret
rolb
call
test
inc
sahf
xchg
xor
xorb
aam
ss
jge
mov
in
clc
lods
push
aaa
cmpsl
cmpsb
jp
add
repz
jmp
bound
mov
push
inc
loop
inc
pop
xchg
imul
xlat
and
loopne
push
lods
mov
ss
arpl
adc
dec
push
and
addl
cmpsb
repnz
jnp
mov
xor
mov
dec
mov
sbb
add
jle
test
xor
or
mov
into
adc
leave
or
popa
mov
push
sahf
pop
out
inc
pop
mov
bound
or
sbb
cmp
lods
popf
dec
lods
bound
les
pop
jecxz
enter
movsb
cmp
imul
ss
addr16
jae
es
mov
jae
inc
inc
inc
leave
cld
std
dec
sub
cld
in
pop
clc
or
subb
jae
bound
aam
mov
jg
aas
std
jno
dec
adc
fldt
pop
jp
dec
insl
imul
fisttpll
gs
cmp
inc
mov
and
mov
test
ret
mov
js
pop
loope
sbb
inc
cmp
shll
mov
lds
inc
repz
mov
sub
lea
pop
mov
push
scas
mov
jb
cs
popa
cmpsl
jmp
js
aad
or
test
push
dec
jp
stos
mov
std
cmp
outsb
mov
jns
leave
or
xor
add
loopne
xchg
clc
sub
mov
mov
jmp
mov
sub
xor
jb
repz
test
dec
out
icebp
push
jnp
enter
push
cmp
outsb
fdiv
jmp
loopne
or
cmc
bound
adc
mov
jbe
lcall
jp
das
icebp
cld
mov
lcall
inc
int3
scas
ljmp
xchg
frstor
or
jmp
and
jne
mov
or
pavgw
cmp
mov
dec
push
jmp
cmp
fcomps
out
add
or
test
test
leave
jg
cmp
dec
mov
cli
in
mov
sbb
enter
sub
jl
mov
frstor
adc
insl
pop
push
jecxz
add
into
mov
dec
int3
xchg
jns
push
lcall
dec
and
in
lret
test
dec
aas
enter
out
sbb
xchg
int
or
movsl
loope
int3
loopne
fiaddl
mov
icebp
dec
das
rcll
call
shrb
cli
pop
mov
xchg
rcll
push
cmpsb
cmp
icebp
lahf
adcl
push
in
loop
out
inc
mov
mov
mov
repz
add
sub
mov
test
shll
jb
mov
sub
in
out
pop
leave
jge
hlt
outsl
mov
mov
cmpb
in
fsubrs
addl
push
orl
add
sbbb
imul
pop
push
stos
pusha
jg
jb
filds
dec
icebp
rorb
ljmp
xchg
add
int3
sahf
sbb
enter
movsl
add
push
out
add
xchg
into
dec
aad
jle
scas
imul
inc
ja
in
inc
psrlq
sahf
out
sarb
sbb
mov
fs
clc
pop
js
repz
repz
push
lahf
or
pop
pop
inc
lods
shll
mov
xchg
xchg
in
xchg
imul
push
inc
mov
insb
shr
cli
jo
mov
inc
aas
std
mov
cmpsl
js
mov
stos
mov
test
test
shl
sub
loopne
mov
cmp
pop
stc
cmp
data16
fidivl
dec
call
sbb
cltd
insb
mov
and
in
cltd
inc
aas
ds
push
mov
dec
mov
xor
inc
negl
adc
es
push
outsb
mov
lods
cmpsl
cmp
jl
addr16
cli
push
pop
mov
ja
mov
push
dec
arpl
fsubrl
iret
jmp
sbb
dec
cltd
mov
fwait
jl
adc
inc
cli
inc
cmp
adc
jb
shrb
xchg
cmp
les
inc
insl
xor
enter
insb
inc
dec
pop
sbb
pop
mov
mov
shl
or
inc
loope
xchg
xor
sbb
addr16
xchg
and
imul
test
inc
inc
pop
aam
mov
movntps
mov
jp
and
sahf
fstps
loopne
xchg
int
jnp
test
jne
call
or
cmp
jg
fldcw
aam
or
jp
sbb
test
cmp
xlat
push
cs
out
es
fildl
xchg
xor
cmc
dec
inc
shl
jmp
xlat
shlb
stos
outsb
xlat
add
ss
cli
mov
popf
dec
enter
or
pushf
pop
sbb
je
dec
xchg
in
xchg
stos
int3
lock
out
xor
xor
fnstcw
cmpsb
ds
xchg
in
mov
addr16
mov
inc
ret
pop
xchg
pop
jmp
cmp
mov
mov
mov
mov
lock
lea
popl
leave
cmp
mov
xor
and
jne
movsl
xchg
xlat
inc
adc
mov
jae
mov
iret
rorb
inc
lea
cmpsl
jb
fisubs
xlat
dec
mov
lcall
stos
popl
jmp
add
pop
insb
inc
cmp
cltd
out
outsl
dec
fmuls
cmp
mov
xchg
nop
xor
and
sahf
pusha
or
sub
loope
adc
lea
test
pop
movsl
jl
int3
out
mov
jne
xchg
test
cmp
cmp
mull
push
pop
pop
gs
in
js
loope
mov
subb
aam
loope
or
iret
push
pop
adc
insl
ljmp
jae
or
push
out
in
jle
jbe
es
adc
iret
xchg
dec
notb
dec
fbstp
sbbl
aam
adc
mov
xchg
push
push
negb
mov
sbb
inc
add
scas
inc
out
daa
aad
xchg
mov
es
dec
push
sahf
lcall
in
rolb
jle
out
add
jecxz
mov
in
jp
shrl
jecxz
xchg
jb
movsl
mov
sarb
sub
jl
dec
jae
mov
ss
daa
or
int
test
ds
or
inc
inc
addr16
mov
sub
mov
inc
cmc
add
inc
jp
cmp
or
adc
pop
movb
sbb
jl
jb
mov
mov
add
add
aaa
adc
mov
cmp
inc
inc
dec
cmpsl
mov
sbb
xor
loop
xchg
and
pop
add
or
das
mov
and
push
repnz
ret
xchg
test
and
js
lret
aas
xchg
dec
mov
push
xor
ljmp
inc
popa
push
es
shrb
push
aam
cs
cmp
nop
mov
xchg
repz
and
jmp
lods
sahf
add
imulb
mov
add
xchg
sub
es
or
lret
ja
std
inc
leave
cmc
negl
shll
aad
push
pop
mov
std
cld
in
or
mov
mov
jmp
aaa
jnp
or
mov
sub
ja
enter
pop
int3
stos
xchg
in
inc
test
repz
testl
dec
stos
and
cmp
neg
data16
out
out
add
xor
mov
scas
lret
cli
lods
jae
sbb
mov
push
xchg
push
mov
inc
xor
fnsaves
sub
or
aaa
int
xchg
fucomip
test
lcall
lock
mov
pop
xor
push
xchg
sbb
cmpsb
push
sbb
xlat
and
and
xchg
xchg
jp
jb
stos
mov
in
cltd
mov
insl
add
ljmp
popa
adc
shl
iret
inc
xor
xlat
cs
ret
fdivs
jae
sbb
ds
pop
cmc
pop
adc
xchg
jnp,pn
divb
adc
mov
mov
mov
dec
push
jmp
daa
rclb
pop
cmc
test
xchg
leave
jecxz
push
rolb
fildl
add
call
push
dec
aas
aad
mov
dec
icebp
push
mov
sbb
dec
fs
push
aas
ret
pop
cld
cmp
or
cmp
push
es
and
add
sub
pop
mov
fcoms
lahf
push
jbe
orl
gs
cmpsl
insb
int
sub
jle
fmulp
test
aad
push
push
lods
adc
pop
mov
in
mov
cmp
in
fldl2e
dec
in
mov
loop
clc
fidivl
scas
jg
sub
mov
ret
cmp
and
subl
notl
rol
test
ds
std
ja
ljmp
dec
out
xlat
movsb
mov
fcmovnb
dec
mov
cmp
mov
outsl
dec
adc
jae
les
sub
pop
mov
or
pop
jge
push
in
jge
aam
ret
int
lcall
jg
mov
or
push
insl
cli
push
inc
dec
lods
jge
and
out
stos
test
lahf
push
aad
mov
jnp
sbb
xlat
mov
xchg
pop
ja
sti
and
dec
mov
inc
fwait
and
pop
scas
lcall
mov
or
push
stos
sub
jmp
test
add
push
xor
mov
test
mov
lea
jo
lcall
pop
cmp
aas
movsl
mov
imul
jmp
insb
mov
imul
icebp
sbb
bound
jmp
addr16
pop
jmp
loop
mov
mov
out
outsb
outsl
add
push
pop
out
mov
mov
in
pop
bnd
nop
das
inc
jmp
inc
clc
stos
xor
adc
lret
loope
sub
mov
cltd
push
mov
xchg
inc
dec
adc
loop
in
adc
stc
call
lock
fnstsw
sbb
jns
cwtl
jmp
cmp
mov
mov
push
out
xor
push
pop
repnz
push
jge
je
aas
hlt
or
rclb
and
mov
dec
jle
push
add
pop
push
jo
xchg
dec
sub
int
sub
es
pop
cli
xchg
pop
or
inc
sarb
mov
stc
mov
aam
sub
dec
sbb
sarb
jmp
dec
push
lock
pusha
mov
pop
in
mov
mov
push
and
testb
in
xor
in
lods
dec
stos
inc
daa
aaa
ljmp
sahf
ljmp
testl
bound
and
cwtl
add
push
sbb
mov
andb
xchg
pushw
bound
inc
fisubrs
xor
pop
int3
and
popf
or
cmp
jle
mov
je
gs
js
sti
push
sub
mov
repz
clc
dec
int
es
fcmovnu
aam
arpl
leave
dec
fadd
dec
pop
mov
pop
rolb
rcl
call
xor
xor
jp
pop
add
nop
insb
and
leave
sahf
scas
dec
imul
stc
cmpsb
mov
rolb
pop
dec
sub
dec
xlat
and
xchg
lock
jbe
mov
add
mov
adc
pop
ret
iret
adc
push
add
test
je
shll
in
dec
popf
repnz
xor
cmp
adc
mov
in
test
jecxz
aas
insb
xor
mov
xchg
and
jecxz
and
les
enter
enter
in
cmp
cmc
dec
mov
dec
inc
sbb
loope
popf
icebp
xchg
loope
leave
xor
xor
mov
adc
inc
sub
push
sarl
add
jmp
xchg
adc
pusha
aas
mov
pushf
and
rcll
mov
faddp
xchg
dec
dec
mov
mov
imul
mov
mov
negl
xor
push
sbb
jle
inc
jbe
pop
ret
int
inc
mov
mov
lret
jbe
jnp
shlb
flds
enter
xchg
filds
mov
push
jns
xor
xlat
push
imul
shr
xor
daa
jbe
adcb
std
add
cmpl
ds
dec
pusha
add
ret
mov
in
push
ljmp
dec
lods
pop
aad
xchg
test
pop
pop
xchg
dec
mov
mov
lret
lcall
push
mov
push
outsb
hlt
jmp
mov
loop
and
clc
rep
rorb
aaa
jge
imul
jo
xchg
adc
adc
getsec
pop
cmp
cmp
or
outsl
dec
adc
je
sub
test
mov
scas
and
xor
xchg
mov
lea
sbb
enter
push
pop
xchg
pop
adc
outsl
dec
xchg
jg
jbe
add
push
and
add
pop
in
and
sbbb
push
inc
and
or
mov
iret
insl
mov
xchg
jb
sub
mov
adc
xor
mov
cmp
inc
outsl
mov
jmp
test
jbe
fmull
xchg
in
xor
mov
xchg
daa
daa
cmp
outsl
sbb
test
mov
adc
cmp
repz
xchg
clc
sub
push
mov
lds
call
daa
lods
dec
rcll
in
mov
add
bound
mov
addr16
sub
add
push
test
cli
mov
outsl
pop
push
jmp
sbb
mov
lret
sub
sub
clc
add
pop
adc
mov
clc
or
pop
mov
jge
fisubs
out
paddq
push
sbb
stos
xchg
cmp
sahf
inc
or
push
adcl
mov
ss
jecxz
jbe
sub
movsb
es
mov
add
xor
cmc
xchg
int3
mov
fists
pop
xlat
test
ret
sbb
movsl
cs
dec
pop
mov
les
std
add
ficoml
fnstsw
cmp
and
insb
cli
leave
iret
jns
data16
xchg
add
hlt
sbb
cmp
movsl
dec
sarl
cs
faddl
shrl
sar
and
pop
cmp
scas
les
test
cmpsl
inc
inc
shll
std
ss
xchg
test
ss
dec
das
xor
arpl
push
sbb
jb
out
movsl
xchg
mov
sbb
fnstenv
in
dec
icebp
sub
cmp
inc
and
je
jge
lock
mov
mov
xchg
and
pop
scas
test
inc
jg
pop
jae
and
shll
pop
ljmp
cmc
fiaddl
jl
bound
mov
push
repz
mov
jbe
xchg
xchg
push
clc
sub
cltd
pop
popa
jle
sub
pop
push
dec
das
sarb
lcall
loop
leave
cli
push
sub
orb
pop
sbb
in
jno
es
mov
int3
dec
push
jmp
adc
iret
in
es
insl
je
out
sub
adc
cwtl
and
repz
inc
lahf
push
cmp
mov
popa
rclb
jo
mov
popa
popf
mul
push
in
lea
into
das
in
in
into
pop
repnz
inc
cmp
and
fmuls
in
sti
pop
mov
jno
cs
mov
shlb
stos
loope
jno
sahf
into
add
sub
test
out
enter
mov
icebp
cmpb
cltd
jg
push
push
push
popf
std
mov
mov
xchg
jne
xor
out
push
adc
push
popf
dec
sub
test
fsubs
pop
loope
xlat
loope
or
mov
aas
into
mov
xchg
push
add
or
adc
mov
cmp
sub
sbb
mov
nop
sub
xorl
push
sub
fiaddl
xor
stos
xlat
sbb
push
push
mov
push
arpl
fsubrs
popf
stos
xchg
cmpsl
insb
add
dec
fisubl
sbb
testb
and
xchg
cmp
xchg
xor
fstl
add
cmp
cmp
sti
mov
fisttps
in
mov
sub
pop
out
cmpsl
clc
nop
push
jecxz
loope
aad
mov
out
fcmove
jne
hlt
popf
clc
loope
inc
jns
mov
dec
xor
cwtl
insb
adc
and
aaa
add
icebp
bound
lret
sub
dec
sbb
inc
fcmovne
sub
dec
aad
adc
out
inc
mov
insl
mov
push
cmp
and
dec
nop
andb
inc
data16
or
push
mov
rcr
jp
mov
sbb
sti
icebp
idivl
test
stos
hlt
pushf
ljmp
ja
rcrb
movb
xchg
sub
sub
pop
mov
bound
push
insb
into
les
imul
mov
and
xchg
sub
adc
xor
aam
dec
shufpd
lods
sahf
clc
jo
xor
xor
movsb
fcomi
add
adc
xchg
jno
push
ret
fidivrs
push
outsb
pop
fmull
hlt
in
dec
popa
in
pop
cltd
clc
mov
jge
push
lds
xchg
nop
or
fidivs
push
jecxz
mov
test
mov
scas
lock
xchg
inc
mov
inc
ret
or
lret
sub
jno
pop
mov
loopne
mov
mov
pop
cmp
pop
and
xchg
je
mov
enter
rcr
add
ftst
inc
pop
and
push
aas
add
jns
push
stos
pop
mov
call
inc
fsts
sbb
inc
jp
cmpsl
into
dec
orb
mov
test
mov
and
sub
lock
in
or
test
shll
jns
fmuls
fcoms
inc
cwtl
addr16
jo
das
jno
testl
dec
pop
xor
xor
sahf
jnp
dec
push
and
push
xchg
out
jnp
loopne
lea
inc
inc
mov
xor
jo
xchg
flds
mov
xchg
dec
sbbl
aas
jp
pop
xchg
dec
sub
rcl
mov
push
sub
test
mov
pop
lahf
mov
xchg
je
stos
xor
xor
jbe
jne
scas
sub
or
push
mov
pop
mov
pop
mov
xor
push
test
jl
push
int
dec
and
mov
cmp
push
call
inc
pop
or
adc
ja
outsb
and
xlat
jbe
push
mov
push
jecxz
push
fildll
add
pop
cmpsl
fucom
jl
mov
lret
adc
pusha
pop
lds
daa
stc
jno
popa
mov
out
das
jmp
lea
sbb
sub
cld
mov
loop
dec
shll
or
jecxz
mov
inc
push
add
movsb
push
lcall
or
cmp
hlt
lods
mov
push
jb
rorb
dec
dec
lods
stc
mov
out
movsb
mov
testl
jg
and
not
xor
mov
cmp
divps
hlt
xor
push
testb
pop
pop
clc
inc
jmp
inc
push
add
sti
nop
je
cmp
hlt
jne
sub
data16
shrl
sarb
in
sti
inc
xchg
negl
sub
test
lcall
xor
call
mov
cmpsl
adc
fs
call
xchg
test
or
out
fisttps
inc
jnp
add
fs
xor
popf
enter
pop
jmp
mov
xchg
and
fwait
test
call
fdivrp
movsb
sbb
xchg
rorl
hlt
les
dec
in
push
dec
notb
cwtl
popa
sbb
aam
mov
jb
nop
jmp
push
test
adc
hlt
repz
mov
mov
cmp
xor
iret
aam
lret
insl
rorb
aad
pop
sub
jge
push
loope
and
and
addr16
pop
mov
add
movsl
jne
das
ret
push
inc
fistpl
ret
movsl
push
push
mov
push
and
and
jno
xchg
and
xchg
mov
push
div
add
push
mov
cmp
add
push
sti
rclb
mov
mov
scas
cmpsb
inc
mov
test
repz
shlb
lcall
das
lock
ret
ret
inc
les
imul
sub
jne
fcompl
jne
jg
movups
sti
jb
das
pop
popf
jns
test
jne,pn
push
out
sti
inc
xchg
and
xchg
add
ret
sahf
push
imul
addr16
cmp
arpl
mov
cli
popw
mov
mov
pop
lahf
xor
popa
imul
add
mov
stos
movsl
test
or
pop
popa
hlt
daa
pop
mov
jle
shl
daa
clc
mov
imul
dec
xchg
in
dec
movsb
and
dec
test
add
lock
xor
inc
lds
popf
adcb
dec
out
cs
inc
xchg
out
fs
dec
popf
outsl
dec
pop
xlat
rorb
andb
cwtl
xor
cmp
inc
sti
push
in
test
mov
lock
das
je
sbb
push
test
inc
sub
test
stc
popf
movsl
mov
fs
lahf
std
test
jo
dec
test
pop
sbb
outsb
xchg
fwait
call
lahf
fldenv
testb
daa
jns
hlt
leave
cli
scas
xor
cmp
mov
inc
pusha
pop
imul
pushf
adc
inc
icebp
dec
imul
jl
mov
scas
jae
mov
ljmp
or
xchg
cld
jne
mov
insb
pop
and
cltd
test
and
cmpsb
ret
and
sti
out
cmp
cld
fnstcw
stos
outsb
loope
mov
xchg
out
cwtl
stos
pop
or
sub
fs
sti
xor
jb
jg
mov
and
xor
je
pop
xlat
sub
out
push
lea
ret
mov
ror
adcb
ljmp
inc
mov
fistpll
push
mov
mov
push
or
nop
test
movsb
lcall
lds
pop
rcr
jge
inc
lods
xchg
je
xor
sbb
push
push
xorb
and
cmp
out
popf
xorl
adc
mov
inc
or
xlat
into
in
inc
dec
jecxz
inc
popa
add
bound
sbb
dec
int3
sub
iret
lret
pusha
sbb
dec
xchg
lods
xor
jle
xchg
mov
ret
add
jp
push
ds
jecxz
cmp
outsb
adc
jns
addl
out
sbb
sub
sub
push
ljmp
dec
mov
xor
outsb
int
jmp
xor
cmp
leave
in
stos
push
pop
inc
shl
xchg
loopne
cwtl
jp
cld
jp
and
es
imul
pop
inc
fwait
std
mov
cmp
in
dec
faddp
sbb
jno
push
adc
fldt
mov
out
hlt
nop
sbb
xchg
insl
out
fmuls
lds
std
icebp
shl
das
xchg
loopne
sbb
sarb
ror
sbb
pop
outsb
cmc
test
sahf
cmp
mov
cmpl
inc
fisubl
dec
jbe
inc
mov
mov
aam
sub
jg
add
push
cmp
jp
or
imul
push
fisttps
mov
mov
and
stc
push
imul
cmc
scas
or
iret
divb
cmp
inc
pminsw
pushf
pop
push
or
add
into
imul
xchg
push
lret
popa
mov
or
lods
xor
jns
xchg
stc
scas
jle
lret
fldcw
in
add
push
and
push
xchg
push
shl
mov
mov
rorb
xor
inc
imul
lods
imul
mov
pop
jp
xchg
je
out
icebp
push
aad
lock
mov
ret
jmp
in
filds
cmp
and
push
pushf
movsl
addb
xor
insb
mov
mov
sbb
idivl
leave
inc
out
fisubrs
sti
insl
aas
loop
xor
daa
cmp
mov
push
in
dec
or
gs
lret
inc
outsl
adc
divl
add
dec
and
dec
adc
cmp
cmp
or
push
jb
vmread
xchg
in
xchg
mov
in
fstpl
fadds
inc
dec
lcall
jmp
fidivrl
mov
pop
loope
js
sub
je
inc
out
into
push
cmc
lahf
push
fistpl
sbb
test
hlt
es
test
lret
mov
test
mov
xlat
and
pminsw
push
test
jmp
lahf
insl
sub
jnp,pn
lret
mov
adc
dec
pop
cmp
adc
lds
add
or
mov
inc
or
gs
rcl
cmpsb
sub
mov
lcall
pop
mov
mov
mov
or
popa
and
idivl
stc
clc
out
outsl
pop
mov
jns
mov
cmpsl
jo
ljmp
sub
and
jne
push
mov
out
sbb
icebp
lods
cmc
das
lods
and
jl
das
xchg
iret
bnd
cs
in
pusha
mov
mov
dec
cmp
inc
fisubrl
and
cmp
hlt
enter
pushf
nop
inc
lcall
dec
in
mov
imul
das
sub
sub
inc
xchg
cmc
inc
sbb
loopne
icebp
movups
sub
push
shll
mov
xchg
push
cmp
loop
shll
push
sbb
and
mov
cmp
loop
icebp
aaa
data16
aad
cmc
ds
push
mov
or
outsl
xchg
sbb
std
mov
fbld
fistps
stos
cmp
flds
mov
pop
jecxz
in
push
dec
cmp
icebp
cmp
gs
xor
cli
jg
dec
push
hlt
dec
sub
pusha
fwait
out
sbb
lret
and
loope
addr16
cmpsb
inc
jb
idivb
push
lods
sub
and
jecxz
mov
mov
jns
out
jns
scas
cli
les
sbb
ljmp
insb
inc
cmp
test
rcll
out
stc
sub
aad
ja
push
adc
dec
dec
out
arpl
mov
push
js
and
rorl
xlat
je
mov
xlat
loope
mov
movsb
or
in
push
outsb
and
enter
cmc
leave
scas
push
inc
rcll
je
out
pop
and
jnp
mov
cli
aam
les
push
imul
orb
fs
int
ficompl
mov
xor
pop
sbb
fdiv
jmp
cmp
fucomi
cmp
jle
mov
insb
push
pop
and
xchg
testl
shll
and
mov
push
addr16
cmp
mov
into
imul
dec
sbb
lds
or
inc
inc
fisubrs
lods
jg
stos
mov
faddl
mov
sbb
sub
cmp
or
sbb
or
sti
or
xlat
xor
sbb
add
icebp
or
xor
xor
sub
lret
mov
notb
aad
adc
cmpsb
xor
mov
push
gs
cmc
cmc
mov
ljmp
xchg
outsl
fnstsw
scas
or
xchg
dec
test
addl
mov
popa
mov
add
jg
xchg
bound
sbb
outsl
jbe
stos
or
pop
jno
mov
test
mov
push
mov
pushf
fcoml
aad
movsl
adc
mov
mov
sub
cli
dec
push
sbb
xchg
bound
xchg
fs
ficomps
andb
inc
mov
adc
imul
adc
iret
mov
std
add
dec
imul
insl
pop
mov
sbb
loopne
sbb
and
dec
daa
sub
fcmove
out
sub
sar
push
jp
jnp
mov
lods
out
adc
aad
inc
les
idivl
add
lret
jo
sub
movsl
frstor
roll
dec
sub
lret
cli
inc
sbb
clc
mov
jl
popf
and
jb
nop
neg
out
sahf
cmpsb
lds
dec
repz
icebp
enter
sbb
mov
stos
js
jmp
cmp
ljmp
js
scas
cmc
sti
dec
pop
xchg
lea
adc
ret
dec
jle
adc
sbb
adc
xor
stos
ret
add
dec
cmpsl
cltd
les
cmpl
stc
je
lock
imul
push
cmpsb
cmpb
stos
sub
in
sub
dec
nop
maxps
movsb
mov
xchg
jae
xor
xchg
shrl
clc
je
testb
fcoml
aas
pop
xchg
xchg
xor
jns
pop
cs
repnz
mov
push
inc
cmp
adc
lods
scas
jmp
inc
mov
push
adcb
cmp
mov
xchg
xor
lcall
adc
fstl
in
imul
pop
sbb
dec
pop
jbe
lds
cmp
xor
fnstsw
xor
mov
cltd
aaa
sti
dec
mov
stos
mov
jb
pop
addr16
sarl
dec
in
sarl
dec
adc
sbb
sbb
fwait
xor
lds
cmp
mov
dec
psllq
or
sbb
push
das
adc
bnd
fbstp
jp
test
enter
sub
mov
mov
lea
out
adc
push
and
imul
sti
in
xchg
int3
subb
push
xchg
cmc
xlat
mov
mov
mov
les
dec
sar
fiadds
push
add
lret
xchg
jnp
jno
push
and
insl
int3
test
orl
mov
xlat
sub
jle
leave
pop
gs
addr16
dec
out
or
mov
inc
sub
out
sub
ljmp
sub
or
push
sahf
inc
fcmovnbe
pusha
pop
adc
out
notl
fisttpll
push
pop
mov
dec
mov
pop
jno
or
mov
stc
out
jne
test
cmp
mov
cltd
fsubl
pop
sarl
pop
shll
inc
lods
jecxz
jo
ret
out
out
xor
and
dec
loopne
bound
iret
inc
imul
fwait
into
or
repz
sub
or
dec
repnz
fidivrl
in
fcomps
xchg
xchg
jg
sbb
mov
test
mov
ficomps
mov
push
sbb
sbb
aaa
outsl
push
jnp
or
sbb
hlt
and
cwtl
dec
jo
out
add
call
xor
pop
jg
insb
in
shl
cltd
adc
lods
ja
dec
sbb
adc
jp
orb
cli
je
cmp
aaa
in
cmc
or
insb
xlat
fistpl
xor
fucomp
test
add
cmp
clc
xchg
inc
mov
loop
loopne
sahf
xchg
jae
or
hlt
mov
or
dec
push
hlt
mov
ret
or
inc
or
xchg
sub
inc
jg
sbb
adc
push
xor
jns
fsubp
sbb
jbe
aaa
or
fistps
mov
sti
lret
cmp
aam
filds
fisubs
add
test
inc
dec
mov
pop
cmp
xchg
pop
lret
push
and
stc
cmp
sub
or
daa
push
aaa
mov
aaa
cmp
mov
mov
mov
mov
int
in
xor
cmp
test
int
outsl
add
xchg
fistpll
pop
push
shrb
shrl
imul
out
es
loopne
cwtl
into
movlps
mov
fcmovne
mov
cltd
sbb
jl
xchg
bound
scas
adcl
lods
or
pop
adc
cli
fldcw
les
jnp
sahf
jb
jg
mov
mov
mov
repnz
cs
and
packuswb
cmp
or
push
cmp
popa
out
mov
nop
adc
pop
jbe
xchg
mov
add
test
or
or
cmp
ficompl
je
mov
das
pop
pop
fbstp
mov
mov
cmp
sub
jo
push
test
cmp
pusha
sbb
and
cli
je
out
ja
mov
ljmp
sarb
ret
xor
jns
setb
je
add
mov
repz
les
std
ljmp
pop
sbb
icebp
adc
mov
adc
cli
sarb
push
mov
sbb
daa
imul
imulb
xchg
mov
mov
out
pop
or
xchg
pusha
enter
cmpsb
and
dec
cmp
lcall
or
adc
adcb
add
ds
pop
test
jbe
imul
xchg
mov
xchg
mov
jp
inc
shl
sbb
jle
test
test
dec
inc
and
fs
mov
movsb
fs
scas
in
mov
scas
push
hlt
lods
popf
insl
fldl
das
pop
out
test
mov
repnz
insl
xchg
xchg
test
and
push
cld
sbb
and
mov
out
mov
ljmp
sub
jl
pop
inc
push
pop
xchg
cmc
out
xchg
sti
es
mov
push
sbbb
jae
enter
jb
mov
cld
mov
jae
inc
movsb
mov
xor
je
add
jb
cli
imul
jmp
sub
mov
pop
int
mov
push
loopne
loopne
dec
fwait
mov
std
sahf
lahf
repnz
and
idiv
mov
ret
movsl
add
xchg
mov
add
jo
pop
iret
lock
push
sbb
adc
jo
stc
jnp
add
xchg
xor
bound
ja
in
popf
mov
jnp
or
or
push
or
cmc
mov
test
xchg
push
push
jp
mov
mov
lea
mov
cmpsb
mov
inc
test
mov
sbb
dec
mov
sbb
add
orb
inc
adc
std
ljmp
and
sbb
loopne
sub
shlb
mov
xlat
fisubl
mov
stos
add
mov
lcall
pop
shrb
ficoml
cmp
sub
int
push
and
lds
sbb
rolb
mov
mov
cs
or
adc
adc
jecxz
mov
jo
fwait
aas
push
outsl
xchg
xor
push
mov
cmp
mov
notb
pushf
mov
out
mov
dec
sbb
ja
cwtl
divb
inc
and
pop
aas
cmp
mov
pop
pop
jp
or
bnd
cmp
dec
std
mov
lock
push
cwtl
insl
repnz
sbb
xor
pushf
pusha
push
mov
ss
scas
add
repnz
fmull
or
add
stos
mov
and
imul
push
sbb
mov
in
dec
cli
adcb
dec
bound
clc
push
in
inc
inc
xchg
cmpsb
aam
fsts
inc
ss
sub
inc
rorl
repz
sub
xchg
mov
mov
add
inc
cmc
je
call
into
test
mov
repnz
xor
pop
mov
clc
jle,pt
push
dec
jmp
sti
mov
stos
mov
sahf
cmp
jne
mov
sub
dec
in
sub
sbb
cmp
or
aam
outsl
mov
add
pusha
outsb
and
adc
js
jo
rcrl
ljmp
push
lcall
pop
jae
add
movsb
sub
mov
in
pop
fs
xchg
xor
je
clc
mov
out
les
pop
push
andb
mov
push
push
test
fwait
aas
arpl
cwtl
jp
cmp
fcmove
jb
push
pop
js
jle
sahf
lcall
outsl
mov
push
les
aas
lock
not
out
mov
sbb
adc
add
and
shll
xor
xor
jle
int
and
lcall
daa
lret
xor
loope
int3
xor
xchg
ret
xchg
enter
sub
inc
mov
fmull
xlat
jl
fdecstp
orl
jnp
dec
jg
cli
pop
and
ja
fistps
cli
clc
dec
es
adc
popa
mul
mov
lcall
dec
adc
mov
push
adc
lret
xchg
pusha
lcall
imul
rcrb
push
fcmovnb
mov
cmc
cmp
cmpsb
pop
pop
adc
js
adc
aad
lahf
cltd
data16
in
sbb
fcmove
mov
movsl
test
out
int
xchg
lea
sbb
movsb
pop
sti
mov
pop
cmpsl
mov
pop
jecxz
leave
stos
adc
stc
sub
cmpsl
stos
dec
mov
insb
fwait
aaa
adc
stos
stc
std
ds
or
adc
sub
fimull
cmp
mov
fcomi
pusha
shll
xor
loopne
lock
xor
cmp
movsb
iret
push
xchg
addr16
pusha
addr16
out
or
push
mov
inc
fisttpll
hlt
dec
call
scas
fstl
and
xchg
clc
pop
pop
push
dec
pop
cmpl
cmp
and
lods
leave
shl
sbb
inc
arpl
js
sbb
movb
lods
repnz
pop
xorb
cmp
xchg
scas
or
add
dec
out
adc
xor
pop
push
pusha
push
scas
jle
and
js
and
enter
ret
lds
stos
adc
loope
out
es
mov
mov
adc
ja
out
ret
or
adc
pop
mov
jl
mov
iret
insl
push
sbb
push
rorb
or
sbb
outsl
pop
js
dec
in
bnd
pop
pop
daa
jle
mov
sub
out
xor
shrb
mov
into
movsl
pop
push
push
or
and
or
fimull
mov
lds
iret
inc
inc
add
xchg
lcall
iret
rcll
divl
dec
push
sub
jge
pop
leave
aas
jnp
push
fstpl
fldt
mov
ljmp
add
data16
fldt
adc
ret
or
addr16
insl
iret
mov
pop
cltd
loope
loope
and
test
fldenv
adc
call
xchg
cli
jge
out
pop
jbe
add
mov
mov
mov
hlt
cltd
add
xchg
aad
sti
dec
or
scas
jae
sub
jns
and
mov
add
scas
ja
fildl
jmp
fs
pop
in
push
gs
divb
sbb
cmpsb
das
sti
xor
xchg
imul
gs
push
pmaxub
xor
dec
mov
imul
sbb
jb
jbe
xchg
cmp
clc
xchg
or
jnp
stos
mov
das
imul
stos
test
lcall
xor
sub
stos
movsb
lret
sbb
and
test
popf
fcomp
push
ret
mov
mov
xor
and
mov
ljmp
lock
cmpsl
pop
iret
xlat
pop
sbb
mov
mov
fwait
or
push
sub
xchg
mov
test
gs
push
jne
mov
sbb
and
repnz
xlat
sbb
outsb
jne
xchg
pop
aaa
sbb
dec
aam
sbb
cmpsb
add
popa
sbb
in
data16
push
sbb
cltd
jmp
bound
std
push
cmp
jbe
lret
fs
mov
sbb
out
mov
jle
mov
rorl
fisubrs
push
pavgb
mov
pushf
inc
mov
call
loop
inc
and
xchg
sti
sub
xor
inc
sarb
ljmp
imul
add
movsl
inc
pop
cmp
add
xor
mov
fldln2
call
xchg
push
mov
inc
nop
lock
jle,pn
daa
ret
and
aad
push
jg
push
sbb
mov
jecxz
push
adc
hlt
xor
mov
fldcw
push
sti
xchg
xchg
and
cwtl
repz
in
xlat
das
test
add
pop
out
pop
shr
mov
adc
movsl
push
xchg
xchg
aam
jmp
add
test
sub
push
mov
jmp
icebp
mov
loopne
ficompl
out
lods
js
mov
out
sar
shlb
cmp
mov
pop
mov
sub
decb
sarb
repnz
push
pop
inc
dec
jp
cli
imul
cli
or
xchg
in
and
mov
sarl
dec
out
xor
lods
mov
clc
fldcw
push
sar
mov
xchg
sub
jne
scas
add
or
sbb
sahf
mov
push
negl
clc
das
pop
sub
addr16
repz
adc
mov
lods
cld
das
in
mov
xchg
in
adc
adc
sub
mov
ds
int
sarl
ror
rcr
aas
in
mov
xchg
gs
adc
pusha
mov
ffree
ret
jns
push
mov
jmp
dec
mov
ret
mov
mov
jb
mov
aad
dec
and
inc
jmp
mov
inc
dec
sbb
insb
out
sbb
sub
clc
js
int3
mov
push
loop
mov
data16
mov
push
or
mov
mov
fsubrl
mov
enter
adc
sbb
insl
scas
xchg
dec
jp
inc
je
imul
pop
clc
lock
xor
call
sbb
adc
int
and
dec
sbb
test
xchg
pushl
daa
cmp
lea
ret
sub
lds
sbb
out
in
fs
insb
inc
inc
xchg
xchg
sbb
mov
rcr
das
sub
stos
xchg
mov
ja
sub
cmp
fwait
popf
cltd
sti
in
xor
bound
loope
cmpsb
or
orl
das
mov
gs
pop
fisubrs
inc
mov
jbe
les
test
dec
inc
xor
data16
fwait
imul
stc
out
push
xor
and
push
daa
dec
mov
cli
inc
sbb
dec
lret
mov
push
int3
insl
mov
add
cwtl
inc
cmp
push
ljmp
imul
dec
pop
inc
imul
pop
nop
scas
dec
leave
mov
inc
sbb
cmp
cli
mov
cmp
movsb
mov
or
cmc
xor
and
or
cli
pop
stos
or
pop
and
or
mov
in
rclb
data16
dec
cmpsl
mov
mov
shll
mov
in
pop
mov
stos
dec
rolb
xor
out
adc
lods
xchg
into
dec
ja
or
insl
lahf
dec
pop
cltd
ret
insl
mov
inc
cltd
inc
add
push
jmp
cmp
test
ljmp
and
xchg
mov
xchg
and
leave
cmp
xchg
imul
push
test
push
mov
sbb
dec
mov
mov
bound
cli
xchg
popf
or
push
xchg
sbb
repnz
or
mov
mov
mov
std
pop
mov
xchg
insl
ret
cmp
cmc
push
data16
jo
xchg
das
mov
pop
inc
pop
dec
jnp
lret
out
pop
dec
mov
rorl
or
sub
add
stos
jle
in
fisubrs
aad
in
test
cmc
sub
inc
jmp
into
and
push
movsb
leave
inc
or
jmp
jmp
mov
jmp
lods
rcrb
pop
dec
inc
popf
mov
inc
int
push
sbb
jg
aad
dec
loop
add
adc
jecxz
stc
aaa
sub
jae
cmpsl
pop
out
mov
popf
xor
mov
push
fstpt
in
int3
xchg
pop
sub
int
insb
cmp
mov
add
cmpsb
dec
js
mov
into
insb
xchg
inc
cmpsb
mov
add
cld
aas
jne
cwtl
jg
leave
push
fnstenv
out
aaa
push
mov
cmp
jl
mov
pop
scas
or
rorb
pop
and
stos
xlat
inc
into
fisubs
mov
cmpsb
jg
sub
ret
dec
push
jne
sbb
dec
movsl
lret
sub
jl
mov
icebp
into
cltd
mov
imul
arpl
scas
dec
in
or
mov
add
dec
sbb
sahf
sub
stos
or
leave
es
je
cltd
cltd
push
and
mov
cmc
mov
rcrb
imul
popl
pusha
jg
leave
dec
xchg
fstps
in
xchg
inc
jecxz
ret
lods
setle
cmp
and
cmp
pop
addl
push
ja
sub
jmp
stos
jg
test
les
scas
xor
push
pop
xchg
adc
ds
dec
hlt
out
rclb
ja
mov
orb
decl
sarb
rdmsr
insl
dec
or
movsl
cmc
fcompl
inc
inc
cmc
pushf
lea
add
test
and
lea
push
cmpsb
gs
jae
scas
mov
out
cmp
ss
mov
fildl
leave
cltd
pop
mov
mov
sbb
xchg
cs
sub
sbb
out
and
test
and
cmp
test
icebp
test
faddl
mov
lock
push
jmp
outsb
push
scas
adc
lret
stos
stc
pushf
lret
cmp
push
insb
pop
rol
cmp
xchg
sub
adc
xor
gs
lret
xor
aas
aam
aas
lret
sub
imul
mov
addr16
cmp
mov
popa
sbb
cmp
mov
jmp
cwtl
pop
ljmp
sub
imul
ret
jge
jp
fstps
pop
das
inc
mov
xchg
jg
cmp
les
dec
sbb
dec
imul
or
ret
lock
int
jae
movsb
test
mov
push
pusha
int
mov
movsl
inc
pop
add
mov
insl
rcrl
sbb
repnz
outsl
adc
adc
lahf
inc
mov
test
in
cmp
inc
decb
push
jns
fists
addr16
xchg
and
pop
test
xchg
mov
add
push
sbb
lods
inc
xor
push
xor
std
push
dec
out
out
std
lods
cs
test
test
xchg
jge
xchg
loop
push
enter
add
leave
leave
inc
testb
dec
imul
shl
sub
jmp
push
out
inc
xor
xor
mov
jge
sub
sbb
mov
push
adc
push
jg
movsl
aam
enter
mov
inc
jecxz
mov
push
fsubl
add
hlt
ret
fisubl
mov
mov
ror
js
in
paddusw
mov
xor
call
sub
jnp
xlat
cltd
pop
jbe
jnp
sbb
rcrb
pop
pop
mov
ret
push
xchg
dec
bnd
cmp
sahf
int3
shrb
or
push
dec
push
mov
lods
mov
aam
pop
nop
mov
stos
jge
jo
jno
sahf
adcl
enter
sub
mov
cmp
ljmp
adc
mov
cld
mov
jo
cmp
loope
pop
mov
and
ljmp
leave
mov
xor
imul
clc
ja
dec
sbb
scas
enter
in
push
jl
pop
mov
leave
loopne
jle
or
push
jo
mov
cs
push
mov
sbb
jbe
movsb
call
std
adc
rol
and
jg
in
jno
out
pop
ret
cmp
pop
push
out
add
cltd
or
xchg
ffree
icebp
sahf
mov
mov
push
les
inc
popa
pop
push
fnstsw
ror
int3
push
cwtl
fdivl
mov
jmp
pop
xor
adc
push
push
scas
dec
dec
jge
add
xor
dec
cmc
or
jnp
popf
leave
dec
dec
fucom
lods
xchg
xchg
xchg
imul
ret
rcl
jmp
fisubl
xorb
mov
loopne
pop
and
insb
or
sbb
std
jo
adc
and
insl
jnp
out
xchg
jns
leave
xor
bound
stc
fcoms
arpl
loope
xor
mov
lret
cli
inc
pop
xor
pop
lret
dec
testb
arpl
nop
mov
sahf
xchg
mov
pop
mov
adc
pop
leave
xchg
iret
mov
dec
je
inc
nop
and
or
xchg
push
add
popl
in
adc
rcrb
in
aas
mov
sbb
adc
push
lock
adc
je
repz
mov
lret
iret
int
out
mov
mov
adc
push
pop
sbb
sbb
sti
mov
pop
stc
push
jo
bound
pop
cwtl
dec
ss
les
std
jle
or
mov
lahf
cmp
push
leave
fisubrs
cltd
sub
lods
cli
xchg
addb
jl
stos
aam
jno
stos
inc
in
repnz
push
push
sub
lds
cmpsl
loopne
push
sbb
adc
lods
sti
jl
sub
lcall
jns
in
push
loope
fiadds
jns
sti
mov
pop
dec
add
xchg
popf
bound
std
cld
cmp
mov
add
incl
push
ret
cmc
mov
mov
xchg
cmp
in
jp
sbb
sub
jge
mov
mov
cmp
in
mulb
push
add
add
pop
cli
out
daa
and
adc
jnp,pn
outsl
xor
mov
mov
and
lahf
and
jl
repz
add
loopne
sbb
lcall
or
cmp
dec
out
addb
mov
cwtl
outsb
pop
sub
mov
jne
sub
cmp
and
fsub
inc
push
lret
pop
or
in
fucomip
push
mov
aas
dec
clc
insl
std
idiv
pop
sub
pminub
aad
outsl
jecxz
pop
popa
and
jo
cwtl
lods
sbb
xchg
jnp
push
fisubl
pop
xor
mov
fisttpll
jg
push
test
lock
sti
mov
rorl
jecxz
fwait
add
cmpsb
js
cs
mov
pop
xchg
sbb
xor
and
mov
dec
sbb
pop
out
push
mov
std
jle
xlat
jg
mov
dec
mov
inc
mov
aaa
adc
ficoms
arpl
sub
movsl
inc
out
dec
pushf
movsb
cwtl
dec
out
xchg
and
pop
imul
pop
addr16
loopne
mov
divb
data16
aam
mov
cmpsl
add
jp
fnsave
mov
push
xchg
lret
inc
jo
jmp
jns
mov
or
cmp
shll
nop
cmp
fisubs
pop
arpl
leave
dec
add
sbb
xor
je
xchg
mov
add
jo
mov
push
in
mov
ds
ds
lahf
cld
std
xchg
fisubl
adc
leave
cltd
or
pop
dec
mov
pop
pusha
test
js
xchg
push
push
xchg
sbb
adc
shll
xor
or
fdiv
dec
cmpb
jle
fisubl
xchg
sti
stos
sub
movsl
imul
inc
lods
lods
mov
adc
jae
and
fisubrs
xchg
pop
xor
and
sbbl
xor
sub
inc
pop
ret
inc
jns
pop
mov
mov
in
test
nop
lods
fistpll
dec
jne
xchg
cmp
and
cmp
or
fcom
pop
pop
dec
mov
test
mov
jae
pop
xchg
mov
mov
rolb
inc
adc
push
pop
gs
rcll
push
popf
xchg
nop
inc
xor
pop
or
jg
idivb
mov
cmp
fisubrl
das
sub
ljmp
and
jge
add
pop
xor
push
ja
insl
jmp
fnstsw
jecxz
add
xor
and
lods
push
mov
mov
jp
lret
push
adc
mov
pop
xor
mov
sti
xchg
pop
sub
addr16
mov
add
sbb
lods
push
imul
jae
jle
aaa
lds
cmp
in
mov
fnstenv
fisubrl
sbb
test
or
std
jnp
add
xchg
sbb
mov
sbb
push
in
setbe
cmc
roll
sub
push
inc
int
cmp
bnd
loop
xchg
dec
jo
dec
sbb
push
pop
arpl
test
dec
or
ret
call
mov
jo
cld
in
in
imul
lahf
push
pop
loop
sbb
pop
imul
mov
mov
xchg
mov
xchg
mov
and
shlb
add
cmpsb
popf
jp
lahf
out
subb
ljmp
lret
pop
rol
nop
bound
es
mov
test
pop
int3
push
push
call
cmp
adc
xchg
sub
pop
xlat
sbb
cld
or
or
jno
mov
mov
sahf
add
pop
push
nop
xchg
sub
or
psllw
out
cld
pop
daa
gs
add
std
fcompl
iret
loope
loop
scas
lret
outsb
lcall
jns
pop
push
fxch
scas
mov
push
daa
add
dec
and
xchg
sbb
sub
or
adc
movsb
addl
test
sbb
fsubrs
in
cmc
sub
shr
fildll
ds
cmp
jo
mov
mov
mov
adc
cmc
cmp
frstor
xchg
push
scas
xor
ljmp
scas
dec
inc
fsubrs
fdiv
mov
sarb
nop
adc
pusha
push
pusha
jne
pusha
xor
xor
adc
xchg
jno
cltd
outsb
sub
ss
xchg
dec
adc
cmp
add
jae
lods
sahf
jb
data16
push
sahf
mov
dec
sbb
inc
xchg
dec
fildl
sub
adc
push
test
or
mov
and
sarl
adc
fimull
movsl
mov
insl
xor
shll
xchg
ds
pop
xchg
pusha
pop
fldt
mov
dec
xchg
or
sub
add
mov
cmp
lret
add
loop
adc
mov
in
pop
inc
es
dec
insl
jg
adc
cmp
pop
and
lods
jnp
out
sbb
mov
cwtl
push
sbb
es
daa
popa
ret
pop
sbb
and
xchg
adc
add
ja
jo
hlt
divb
loopne
inc
xchg
push
inc
adcb
das
out
lock
sbb
xchg
adc
jmp
adc
sbb
lds
fs
repz
mov
sub
cmpsl
sub
std
xchg
ljmp
or
loopne
sbb
pop
stos
xchg
inc
pop
dec
xchg
mov
jg
imul
aad
push
aad
inc
loopne
adc
out
cmp
add
sub
and
pop
repz
xor
iret
push
jge
je
in
push
imul
jbe
pop
out
jle
xchg
inc
mov
andb
gs
jb
add
mov
gs
sub
or
fdivl
rcrb
lret
scas
cwtl
mov
adc
jle
popf
inc
lods
mov
xchg
xchg
ja
add
inc
lea
test
xor
lods
fsubs
ret
cmp
movsb
lahf
fnstcw
call
adc
jp
test
add
fs
loopne
jle
in
add
mov
jae
add
jnp
mov
mov
pop
pop
fs
loopne
shlb
adc
sbbl
jbe
jmp
pop
jbe
sbbl
stos
add
rcrl
push
ljmp
add
in
repz
xchg
adcb
cli
aas
fldcw
mov
jecxz
push
or
jg
cltd
xchg
incb
leave
pop
mov
inc
mov
sahf
and
jp
fcos
xchg
cmp
inc
cmp
push
mov
outsl
inc
enter
imulb
rcl
jmp
and
mov
sbb
mov
into
imul
mov
jmp
pop
and
pop
sti
jb
lea
push
xlat
and
jl
pop
mov
dec
cmp
idivb
jno
and
mov
in
imul
mov
push
inc
jp
pop
mov
pop
xlat
jae
test
add
mov
fcomps
es
loop
adc
scas
rorl
lock
lahf
icebp
lds
subb
adc
adc
cmp
xchg
push
fcmovne
in
popf
aad
sub
inc
push
repz
scas
pop
mov
dec
push
xlat
mov
mov
stos
push
insb
es
xor
mov
push
cmpb
pop
pop
fisubs
mov
arpl
data16
dec
stos
icebp
rep
or
ret
or
mov
xor
divl
int
ret
int
mov
push
mov
adc
test
inc
inc
clc
add
addr16
out
insb
push
outsl
push
mov
sti
push
push
dec
es
subb
imul
xor
xchg
shll
and
arpl
mov
pop
cmpsb
repnz
adc
aaa
jo
sbb
cmp
adc
jb
push
cmpl
in
xlat
push
and
xor
adc
mov
pop
pop
push
pop
js
loop
inc
aam
rcl
xchg
mov
lds
ret
leave
fwait
mov
sbb
sbb
jmp
fdivrs
insl
pusha
xchg
adc
fdivrs
adc
jp
push
inc
push
mov
xchg
xchg
ljmp
xchg
push
popl
dec
mov
lock
fstl
jo
jp
std
stos
addl
push
sbb
mov
push
mov
mov
dec
js
cwtl
inc
inc
sub
sbb
fistpl
cmc
mov
es
mov
pop
adc
push
xchg
bnd
fcmovu
and
int
outsl
sbb
add
mov
sbb
test
fs
dec
and
clc
jp
sub
adc
mov
xor
and
xchg
mov
xlat
jmp
popf
push
xchg
lds
cli
int
fisttpll
iret
data16
test
mov
mov
repz
cmpsl
cwtl
mov
lea
mov
pop
mov
mov
insl
fnstsw
mov
inc
lods
mov
movsb
cld
add
inc
cmp
lcall
stos
jnp
mov
dec
jge
mov
adc
add
xchg
out
mov
mov
mov
scas
add
push
xor
nop
bound
xchg
add
jmp
fisubl
add
std
clc
jl
or
clc
add
mov
push
push
fadds
je
shlb
or
int
mov
push
arpl
out
and
mov
cs
fst
arpl
jge
jp
jp
mov
cmpsl
arpl
cmp
mov
sbb
adc
pop
jnp
or
stos
xor
call
fdivl
cli
mov
mov
inc
jb
sbb
ret
jp
xchg
mov
loope
ret
xchg
scas
mov
push
sub
dec
mov
int
or
inc
ret
mov
cwtl
insl
dec
jbe
jle
daa
rcr
mov
test
add
jno
mov
popf
sbb
and
aam
icebp
cmp
cmp
scas
shll
cmp
fsub
inc
loop
sti
pop
jnp
test
fwait
test
icebp
fsubrl
xchg
xchg
and
xchg
xorb
sub
inc
xor
pop
cmp
repz
shlb
add
xchg
data16
pop
loope
pop
push
int
daa
cmp
fdivs
add
outsl
or
xor
lahf
and
insl
lock
jae
daa
inc
jecxz
out
hlt
inc
out
and
stos
int3
test
sub
jne
inc
rclb
push
ljmp
jmp
push
fs
rol
outsb
loop
lahf
lods
mov
jg
hlt
js
pop
cld
or
or
lcall
and
adc
aad
fadds
stos
xor
mov
out
insl
das
push
movsb
mov
mov
mov
lea
sbb
pop
cmc
mov
outsl
test
icebp
lret
push
mov
clc
jmp
xor
mov
xchg
sub
inc
lods
push
pop
mov
in
xor
dec
xchg
dec
movl
mov
lds
cmp
dec
rorl
call
and
aam
bound
or
ficoml
mov
mov
leave
jae
mov
pop
insl
cmp
add
jg
movsb
cmp
inc
push
push
pop
mov
in
jbe
test
xchg
push
jbe
fiadds
cwtl
push
repz
and
xor
push
dec
push
mov
mov
push
pop
out
or
sub
scas
in
add
mov
sub
pop
pop
pop
push
xchg
lret
sbb
inc
push
push
push
and
loop
sub
sar
cwtl
loopne
iret
divb
in
enter
aas
popf
inc
xchg
xchg
stc
popf
pop
push
scas
mov
sbb
xchg
jmp
sub
int
push
pop
scas
lahf
or
inc
xor
leave
jge
mov
in
repnz
dec
cmp
mov
jne
movsb
mov
movsl
movsb
cli
popf
ret
cs
loope
dec
inc
cmp
mov
and
mov
xchg
loopne
jle
jmp
adc
jns
add
into
aam
hlt
mov
jno
add
lods
sub
add
mov
out
jp
mov
inc
test
lcall
inc
gs
or
xchg
fldlg2
sar
cs
inc
cld
adc
and
and
or
std
push
mov
mov
imul
addr16
jnp
jno
jle
and
or
push
adc
mov
in
xchg
loopne
arpl
andb
fiaddl
xor
lret
jle
test
mov
popa
mov
jno
or
movsb
mov
xchg
cld
fimull
addr16
fsubs
xchg
add
clc
and
fcoms
test
xor
bound
mov
sub
std
int
iret
stc
pop
mov
mov
out
je
mov
push
mov
xchg
popa
leave
push
sahf
push
out
icebp
imul
adc
jle
mulb
out
mov
push
mov
bnd
fwait
and
test
nop
insb
xchg
leave
push
pop
fcomps
inc
push
repnz
mov
sti
repnz
inc
mov
fstl
call
movsb
adc
mov
clc
push
xchg
xor
mov
nop
mov
sbb
xchg
call
adc
jo
in
dec
gs
jno
subl
dec
aas
aam
movsb
inc
popa
add
adc
insb
add
int
cmp
jnp
lea
ret
ss
inc
aad
clc
je
mov
cmp
inc
fwait
gs
mov
icebp
cmpsb
lods
jle
jecxz
int
movsl
shrl
cld
loopne
stos
loop
inc
sbbb
fisubl
dec
leave
in
data16
mov
jbe
mov
or
sbb
fs
inc
js
pop
mov
dec
fcompl
and
xchg
jne
add
xor
insl
sti
int3
pop
lret
jno
enter
fstpl
push
pop
cmp
popf
cmp
and
xchg
xor
out
cmpsl
xor
notb
insb
outsb
loop
enter
cltd
sbb
cmp
imul
hlt
push
inc
or
outsb
mov
jo
add
xor
cltd
add
xor
jae
mov
push
shrb
fbstp
sub
inc
imul
jo
jnp
xchg
pop
dec
sub
ljmpw
pusha
les
subb
jne
dec
push
orl
jp
fcmovu
cltd
push
xlat
push
pop
cmpsb
xor
adc
sbbb
cmp
popf
movsb
cmp
mov
mov
add
scas
andl
dec
add
xchg
xorb
scas
les
loopne
adc
jle
fstpl
int3
mov
push
pause
and
mov
ds
xorb
and
ds
clc
insl
jnp
test
call
ficoms
dec
or
jno
mov
popf
stos
cmp
cmp
and
repnz
jmp
roll
mov
lds
mov
test
insb
std
inc
arpl
pop
in
cli
sub
and
je
dec
mov
ljmp
sbb
out
xchg
lret
dec
mov
push
dec
sub
clc
cmp
push
in
addb
out
pop
gs
mov
mov
xchg
roll
jbe
adc
jge
sub
clc
xchg
andb
jge
dec
fcomp
adc
rorb
mov
inc
out
shrl
push
ret
pushf
fidivl
dec
shlb
mov
imul
mov
scas
mov
cmp
mov
mov
mov
inc
lods
shrl
adc
jns
and
push
mov
lret
jge
or
fildll
in
cmc
roll
cmpl
mov
fwait
xchg
adc
pusha
push
pop
fdivp
gs
addb
sub
pop
sub
dec
fwait
push
xchg
ja
test
idivl
dec
lods
inc
stos
cmp
in
xchg
push
and
inc
adc
or
adc
fists
cmc
scas
dec
sub
rcl
lds
dec
sbb
in
shlb
sub
stos
mov
push
xchg
jecxz
int3
pop
mov
push
js
mov
cld
mov
mov
repz
xchg
fildl
ja
mov
jnp
adc
xor
repnz
std
sbbl
nop
pushf
adc
fdivr
testb
pop
inc
cli
sub
add
sbb
adc
dec
sub
sar
pop
inc
jb
daa
xchg
inc
push
inc
addr16
inc
out
addr16
xchg
ljmp
or
iret
jg
cmp
cwtl
stc
adc
enter
xchg
addr16
iret
test
cmpsl
mov
test
mov
cmp
mov
push
sbb
sbb
inc
push
orb
loopne
outsb
adc
nop
ds
push
jmp
pop
or
cmp
cli
push
mov
int
sub
cmp
into
mov
int3
cwtl
mov
mov
fdivr
mul
or
jp
mov
sbb
sbb
jae
dec
cli
js
cmp
iret
into
mov
mov
cld
in
or
mov
imul
cltd
add
jae
rolb
push
jg
bound
mov
lcall
fsubl
clc
mov
add
iret
cld
movsl
jno
mov
das
dec
lret
adcb
je
pop
adc
shll
lcall
ds
mov
bound
pusha
mov
addr16
sub
xchg
test
adc
sbb
fwait
push
mov
sbb
repnz
test
subb
xchg
imul
mov
push
loopne,pt
stos
inc
lea
stc
dec
out
add
adcl
call
or
mov
push
paddusb
popa
js
push
pop
xchg
pop
scas
pop
sbb
push
aam
mov
mov
mov
mov
hlt
cltd
enter
out
jle
fisubrl
mov
sbb
and
push
dec
jae
add
adc
push
mov
jg
fs
shlb
cld
push
jmp
sub
mov
cmp
jecxz
fists
lret
push
jle
call
push
push
or
dec
addb
adc
jge
mov
bound
push
jb
inc
lahf
je
mov
and
inc
push
cmpb
outsl
inc
push
js
ret
pop
call
insl
cmp
inc
insl
sub
inc
push
in
mov
je
fwait
pop
test
dec
into
adc
dec
cmp
pop
outsl
scas
das
ja
cmpsl
in
outsb
loopne
loop
xor
jmp
inc
nop
xchg
loope
pop
aaa
sub
movsl
jae
cmp
pop
pop
enter
sbb
jne
mov
addr16
mov
sub
test
aaa
sbb
popf
pop
sub
mov
ss
or
jnp
and
cmp
cwtl
and
daa
cmp
jecxz
sarl
test
mov
add
and
les
pop
les
cmp
es
rol
pop
cmp
clc
push
xchg
jne
call
mov
nop
adc
loop
not
inc
ret
xchg
mov
cltd
jno
insl
fimuls
lods
popf
push
adc
adc
and
sub
jge
aaa
in
jge
insb
in
pop
mov
mov
cmp
pop
js
inc
jae
dec
mov
mov
es
je
movsb
mov
arpl
and
jg
inc
mov
adc
push
pushf
lods
adc
inc
inc
sahf
inc
les
popf
inc
shrb
xor
push
out
cwtl
ret
inc
aad
mov
adc
mov
mov
out
and
jb
inc
mov
pushf
adc
xchg
sub
sub
or
add
lea
jno
cmpsl
jl
std
fadd
jmp
js
mov
xchg
sarl
xor
insb
sti
das
and
inc
cmp
or
les
jno
inc
cwtl
out
test
leave
add
adc
cld
adc
jmp
jb
xchg
in
icebp
push
push
xchg
cmp
nop
orl
sbb
fnsave
push
adc
jp
nop
int
xchg
stos
and
in
add
and
jns
rcrl
mov
cmpsb
fisttps
or
scas
out
pushf
mov
popf
rorl
cmpsb
push
repz
fisttpll
xchg
push
and
cmp
cltd
sub
cmp
mov
jo
or
mov
jge
xchg
push
dec
negl
in
sub
into
enter
mov
leave
leave
das
stc
jle
rorb
mov
nop
sub
imul
in
pop
or
inc
ja
iret
mov
lahf
push
dec
inc
sarb
dec
xor
ss
out
xor
test
mov
inc
sbb
dec
mov
aad
scas
and
cs
movb
aas
outsb
fidivrs
shlb
adc
mov
out
rol
or
mov
jge
add
rorl
hlt
test
sbb
hlt
push
mov
or
add
repnz
repnz
pop
and
mov
test
jae
aas
stos
mov
in
mov
xor
bnd
push
fwait
push
jbe
sbb
ja
xor
and
and
mov
ret
mov
push
sub
fildl
je
aaa
xor
mov
sub
mov
lret
dec
out
loopne
inc
das
popa
popf
xor
adc
cmp
hlt
hlt
xor
clc
sbb
popf
adc
and
nop
jae
fwait
les
and
fwait
sub
lea
mov
jmp
scas
repz
mov
nop
push
sub
lea
inc
xlat
cmc
xor
mov
xchg
lahf
jge
ss
and
rcrb
xor
jb
add
push
pop
cmp
sub
and
stos
sub
das
subl
jns
ss
or
jno
xor
jno
add
push
jg
inc
inc
mov
dec
jo
in
leave
int3
sbb
insl
mov
xchg
pop
hlt
fucomp
pop
pushf
xchg
sbbb
inc
mov
cmpsb
xchg
ds
pop
xor
cmp
bound
in
frstor
test
imul
sbb
imul
xchg
push
jg
in
push
or
outsb
aam
mov
xchg
sbb
shr
icebp
jle
negl
cli
inc
shrl
mov
mov
xchg
mov
push
mov
mov
push
jo
loop
cld
enter
and
bnd
xor
rclb
lds
xchg
mov
scas
cld
mov
pop
inc
fbstp
loopne
imul
mov
cwtl
adc
lret
push
mov
ja
out
gs
pop
adc
or
push
fldenv
mov
pop
ret
loop
xchg
mov
xchg
movsl
imul
and
loope
xchg
mov
jb
das
add
stos
stc
sbb
rcll
xchg
inc
inc
aam
frstor
repnz
ret
test
dec
cmp
jmp
inc
inc
xlat
push
shlb
mov
jmp
in
ljmp
xor
dec
int
lcall
out
lods
push
cs
jae
mull
dec
stos
push
movsl
lds
push
inc
loop
lods
out
clc
inc
push
fwait
mov
sub
loop
add
sahf
add
jmp
add
dec
mov
adcb
pop
in
sahf
ja
jmp
or
arpl
mov
movsb
inc
jge
dec
aaa
fnsave
inc
cmpsl
pop
cmpsl
and
mov
and
cli
inc
xchg
int3
fadd
rcrb
mov
mov
xor
in
mov
push
mov
aas
sub
dec
xor
mov
fidivs
inc
cmp
pop
inc
cmp
outsb
enter
pop
or
add
sarb
jne
mov
mov
mov
inc
cmpb
sbb
ficoml
push
fldl
mov
imul
lret
into
cmpsl
sub
mov
jne
cwtl
xchg
xor
test
aas
dec
xor
aam
cwtl
xchg
cli
and
jp
pop
mov
ret
dec
loop
repz
test
in
loop
nop
enter
add
int
xor
je
testl
mov
sbb
loopne
aas
or
sub
orl
daa
repz
adc
pop
xchg
mov
jo
lds
xchg
cwtl
xchg
dec
mov
push
aam
mov
pop
dec
test
divl
push
mov
push
roll
ret
cwtl
fwait
in
in
in
mov
pop
aas
inc
jns
adc
sub
mov
inc
mov
dec
fdivrl
icebp
stos
cmpb
scas
and
mov
cmp
cmpsb
sbb
sbb
nop
ss
push
ret
iret
setae
aas
or
add
and
sub
test
jae
mov
sub
das
bound
cmc
sahf
xor
icebp
dec
sbbl
pop
push
and
lahf
xchg
or
mov
aam
adc
push
test
lea
and
push
xor
inc
daa
ret
xchg
mov
sahf
mov
sti
int
movl
popa
cmp
push
pop
pop
xor
xchg
stos
cltd
test
cmp
push
dec
push
fistpl
cmp
dec
xchg
ds
pop
or
jo
nop
idiv
jp
std
imul
insb
stos
sub
imul
pusha
jmp
xchg
in
bound
ds
mov
mov
cmp
popa
arpl
mov
in
dec
sbb
dec
lahf
int3
push
or
out
jecxz
ret
sbb
cmp
lock
inc
insb
out
stos
lds
mov
mov
stos
push
push
ret
cmpsl
mov
sub
sbb
adc
and
aad
pushf
sub
adc
cmp
mov
out
adc
and
repnz
xchg
into
clc
adc
ja
ds
cltd
out
std
popa
int
mov
add
push
xchg
ret
outsb
mov
pop
mov
dec
jb
pop
xchg
das
mov
test
dec
or
pop
jne
ja
adc
dec
scas
lret
xor
test
jecxz
adc
shrl
push
hlt
xchg
cltd
imul
jg
and
pop
mov
mov
sub
adc
fldt
ret
imul
andnps
call
rorb
mov
les
mov
pop
leave
or
flds
adc
sahf
add
pop
jecxz
jae
jne
andb
mov
jne
jl
adc
daa
pusha
jno
cmpsl
test
mov
jnp
ja
test
push
xlat
cmp
dec
arpl
sub
or
and
xchg
sub
sub
push
lret
and
mov
mov
je
adc
imul
or
cs
inc
cmpsb
add
lods
or
sbb
fxch
push
fiadds
into
dec
cmp
fisubrs
inc
movsl
mov
add
xor
testl
mov
sub
mov
mov
and
dec
xchg
cmpsb
sub
dec
pop
dec
mov
push
lahf
clc
push
int
adc
cli
aaa
fistpll
test
and
jmp
out
pop
push
das
add
rclb
pusha
pop
push
decb
rcrb
mov
test
stos
nop
ds
jl
adc
cmp
cmp
push
bound
imul
or
mov
stc
cmp
lahf
aaa
push
ret
push
shrb
scas
std
bound
add
jo
movsl
mov
pop
or
test
xchg
in
loop
ds
imul
pop
imul
ret
cwtl
jle
addb
nop
and
repnz
lret
sub
jg
clc
cmp
jae
pop
imul
adc
in
mov
jae
cmp
jnp
insl
out
push
inc
negb
sub
dec
mov
imul
jecxz
adc
adc
mov
xlat
mov
mov
pop
stos
ds
and
loopne
mov
push
imul
lds
mov
mov
outsl
dec
pusha
add
cmpsb
dec
loop
test
mov
adc
inc
ret
inc
pmaddwd
loope
jge
clc
mov
mov
sti
xchg
cmp
push
xchg
lock
je
shr
add
fwait
inc
out
out
and
js
inc
xchg
scas
data16
sbb
inc
arpl
push
not
cs
jae
pop
fmulp
in
xchg
fs
lahf
data16
dec
sarb
jnp
pop
inc
in
std
stc
sub
je
adc
jp
gs
repnz
imul
xchg
cmp
mov
mov
and
xor
push
clc
cmpl
xchg
loope
test
stc
jno
aad
sub
daa
or
test
xchg
testl
pushf
ja
fldl
loopne
iret
imul
call
push
xor
test
jno
lea
push
xor
sar
mov
hlt
and
movsb
scas
lods
sub
or
add
add
adc
adc
leave
test
xor
test
push
aaa
push
out
out
mov
gs
insb
adc
lods
pop
mov
repnz
sbb
push
add
mov
filds
pop
push
push
pop
and
push
dec
mov
gs
imul
sbb
and
outsl
dec
fsub
xor
aas
add
cmpsb
mov
cltd
sub
in
fisubrl
test
mov
neg
push
dec
out
pusha
inc
xchg
dec
pop
and
pop
pop
daa
loopne
lcallw
fsub
sahf
ret
cmc
icebp
fdivs
jmp
xor
mov
mov
mov
adcl
pop
mov
ss
mov
jl
xor
das
push
cmp
adc
pop
ja
arpl
sub
mov
inc
push
push
add
xor
cmp
pop
mov
pushf
loopne
and
sub
mov
mov
mov
dec
jae
inc
icebp
mov
in
push
popf
mov
mov
jp
and
xchg
test
pop
sbb
rcll
std
jnp
adc
and
add
push
or
sbb
xchg
aas
inc
es
push
shrl
mov
loope
mov
add
xchg
gs
add
mov
jg
das
sbb
adc
subl
sbb
fs
in
fwait
lds
mov
cmpsb
sbb
scas
shrb
xchg
lret
xor
lods
adc
loop
add
push
icebp
cmp
fnstcw
rcrb
lret
xlat
sbb
ds
add
push
add
scas
loopne
in
out
fisubl
dec
es
sbb
test
imul
lea
cmp
mov
imul
negl
jns
pop
mov
add
push
leave
mov
pusha
jmp
pop
or
add
sub
in
es
inc
stc
or
mov
push
js
dec
push
mov
inc
ljmp
les
int3
cmc
inc
pop
shlb
hlt
jo
cmp
lahf
mov
mov
pop
aam
andb
dec
in
pop
cs
test
test
leave
and
mov
or
mov
sahf
imul
inc
test
mov
mov
dec
subl
jnp
fiadds
mov
sub
xchg
cmpsb
jo
cmc
pusha
add
mov
jmp
jge
dec
sbb
inc
cmpsb
pop
jb
xchg
xlat
shrl
pop
outsb
inc
mov
cmp
lods
xlat
das
mov
call
pop
in
cmp
loope
pop
inc
iret
test
aaa
jno
mov
outsb
and
dec
ljmp
add
test
je
imul
mov
jns
and
xchg
push
sbb
xchg
shlb
push
int3
repz
scas
in
movsb
sub
sbb
loop
sbb
or
adc
subl
mov
decl
loop
jb
mov
xchg
in
in
aas
pop
clc
mov
imul
cmc
sarl
cmp
pop
push
std
mov
outsb
inc
test
fmul
test
movsb
aaa
pop
iret
sbb
loop
cmp
push
sub
jo
add
jmp
fimuls
jo
mov
adc
sbb
fstpl
out
out
cli
push
addr16
lods
sub
adc
cmp
jb
xor
sbb
scas
int
cmp
jge
inc
jbe
sbb
inc
ret
aam
fldcw
pop
xor
movsb
mov
cmpsb
lods
in
mov
mov
fisttps
push
and
jns,pt
pop
stc
sbbl
mov
adc
mov
adc
jnp
pop
bound
ja
out
inc
imul
daa
or
cwtl
cmp
inc
xor
test
pop
mov
add
mov
shll
fisubl
pop
push
add
xchg
out
test
cmp
pop
rorb
xchg
mov
and
or
jo
add
bound
pshufw
add
imul
or
arpl
negl
aam
mov
or
pop
push
into
ret
popf
pop
cmp
add
mov
and
jb
xor
sar
mov
adc
dec
mov
pusha
dec
xor
iret
cli
push
rclb
xchg
jmp
sysenter
pusha
in
mov
inc
movsl
addr16
loope
inc
jp
xchg
push
aad
push
jns
aas
or
lock
cli
lds
mov
fcompl
test
jg
inc
dec
add
insl
add
add
cmp
cmc
bswap
mov
adc
xchg
lea
mov
mov
dec
dec
roll
inc
pop
je
sbbl
mov
repz
orb
pop
lahf
hlt
or
inc
add
cmp
pop
mov
pusha
mov
loope
sbb
stc
subl
scas
mov
mov
add
cmc
in
daa
sbb
jnp
sarb
adc
add
mul
lret
xor
jb
mov
lods
dec
gs
inc
stos
inc
scas
fs
dec
xchg
cwtl
pop
mov
pop
movsl
mov
hlt
push
xor
repnz
inc
test
mov
sbb
ss
jnp
mov
es
xor
sub
lret
push
and
cmp
fcompl
popf
leave
xor
jb
push
cmp
cmp
out
dec
jae
jnp
sbb
push
lcall
jmp
repnz
aam
push
push
icebp
test
add
mov
adc
jne
and
insb
cmp
mov
xchg
pminsw
jle
cmp
int
movsb
ds
out
call
xchg
jp
mov
leave
or
cltd
cmp
imul
mov
and
fnstsw
lret
popa
roll
jno
lret
std
das
lock
iret
mov
pop
mov
inc
shl
cli
ljmp
xchg
jno
or
mov
ret
push
adc
cmp
ret
mov
sarl
fnstcw
jl
mov
xchg
add
mov
cmp
jmp
push
in
outsb
insl
lret
and
movsl
into
pop
test
popf
loope
fnstenv
lret
loop
in
loopne
pop
xor
lea
and
loope
mov
aam
repnz
mov
xor
loopne
mov
leave
daa
pop
cltd
xor
sbb
mov
xchg
test
push
pop
xor
insb
cmp
lods
push
mov
mov
push
out
push
jbe
cwtl
scas
cmp
push
ja
lret
or
dec
mov
xlat
aad
aam
mov
xchg
mov
sahf
lret
in
outsb
ss
ret
inc
cmpsl
lret
mov
add
sbb
in
mov
mov
or
mov
rep
inc
test
xor
jle
jbe
out
or
push
test
das
es
jbe
xchg
aaa
mov
pop
adc
sub
pop
movsb
add
clc
mov
jo
arpl
mov
mov
jno
push
cltd
repz
pop
push
inc
cltd
pop
fwait
sbb
xchg
xchg
sub
movsl
fimuls
pusha
ss
jg
gs
mov
inc
mov
mov
fwait
lret
add
cs
imul
adc
mov
andl
jle
pop
adc
stos
js
inc
sub
lods
dec
mov
int
dec
imul
cwtl
jb
xchg
mov
pop
cmpb
xchg
sarl
pushf
cwtl
fcmovu
inc
adc
adc
into
cmpsl
in
mov
lcall
jno
cmp
insl
insb
mov
xor
repnz
sti
mov
mov
rcl
xchg
ss
cmp
movsb
mov
call
test
add
adc
sbb
pop
stos
aad
in
out
mov
and
and
stos
pop
neg
pusha
jae
lcall
sahf
stos
mov
pop
jnp
push
negb
shll
cmp
dec
clc
mov
jbe
sbb
imul
lahf
lret
int3
in
cli
push
movsb
lret
rclb
mov
popa
cs
repnz
cli
mov
push
into
stos
inc
ret
aad
iret
and
mov
dec
les
xchg
lods
add
int3
mov
icebp
outsl
dec
stc
les
xor
call
aam
mov
pop
lret
insl
jbe
repz
js
aad
jle
fs
push
jg
push
js
movsl
ds
nop
hlt
push
mov
and
push
flds
push
mov
out
sbb
ficoml
mov
notb
push
das
sbb
xor
outsb
loop
cmp
lret
push
imul
loope
add
add
mov
cmp
mov
jns
aam
daa
mov
mov
rclb
in
call
jecxz
jmp
das
push
dec
loope
jb
xchg
fildll
aad
clc
popa
inc
mov
mov
hlt
push
imul
push
or
stos
sbb
or
in
dec
imul
jl
popf
stos
scas
pop
scas
or
pop
mov
movsl
aaa
pop
mul
jo
xchg
les
cmp
push
gs
and
lods
mov
rcrb
call
adc
fiadds
insl
adc
out
add
insb
push
ja
das
shr
insb
inc
inc
and
sti
ds
mov
cmp
sbb
sbb
stc
jg
or
jl
je
xchg
push
or
int3
inc
ljmp
daa
cmp
mov
fs
or
cltd
mov
aas
push
clc
fiadds
dec
jo
sbb
leave
in
cmpsb
and
jo
cwtl
sbb
dec
test
mov
sbb
sub
daa
fistpll
push
imul
cld
int
push
push
lahf
mov
push
test
and
jle
jmp
sar
les
push
pop
xchg
jl
cli
loop
cmpl
je
js
aam
aad
pushl
xor
xchg
sub
jae
adc
ljmp
push
cmp
stos
imul
pop
popa
das
stc
jae
stos
popa
xor
or
sahf
dec
ljmp
data16
adc
mov
cmpsb
jl
adc
popf
inc
test
pop
iret
pop
roll
js
adc
shll
scas
repz
sbb
icebp
leave
fs
out
cmp
inc
pop
popa
out
aaa
jae
lods
cs
stos
into
dec
pusha
adc
mov
aad
jl
sahf
sbb
out
xchg
ret
mov
mov
xor
sti
push
push
cs
mov
sahf
lahf
fdivs
sub
arpl
jns
add
and
loope
add
cmpsb
xchg
pcmpeqw
hlt
aam
lret
and
cmp
cmpsb
movsl
mov
in
cmp
fs
inc
or
test
mov
or
xchg
ret
or
aaa
jp
lret
stos
inc
maskmovq
push
call
mov
push
or
loopne
popa
fildll
negb
or
test
das
dec
cli
iret
std
andl
mov
push
pop
push
dec
mov
pop
dec
iret
fcoml
xlat
mov
out
out
lods
jmp
cmpsb
jl
dec
jge
gs
fwait
jle
xchg
pop
push
movsl
mov
sub
mov
addb
inc
es
addr16
movsl
insb
inc
in
jnp
jmp
push
lea
aaa
cmp
xchg
inc
iret
mov
test
sub
fwait
or
cmp
mov
pop
pop
sbb
jbe
mov
test
push
rol
aad
dec
icebp
jnp
xchg
cmp
jne
or
movsb
pop
sub
xor
out
mov
dec
cmp
push
mov
mov
repnz
push
push
push
fcoml
push
lea
aam
stc
adc
mov
lock
sahf
pushf
dec
mov
jl
xchg
mov
add
loop
add
and
popa
xchg
cmp
sub
or
mov
std
pop
mov
lcall
jle
filds
pop
cs
ret
stos
test
loop
dec
cli
mov
jo
movl
mov
out
jbe
mov
stc
jge
idivl
mov
mov
ljmp
pop
in
mull
xchg
jge
jecxz
or
xchg
pop
xchg
sbb
pop
add
sub
cld
shlb
jns
test
lcall
int
call
andl
push
sub
jo
testl
or
in
xchg
out
test
fildl
sti
push
cmp
pop
sub
push
sbb
pop
adcb
pusha
mov
ds
std
sub
cmpsb
mov
ret
insl
lods
cmc
cwtl
and
cmp
and
addr16
insl
inc
rcrl
mov
mov
lods
scas
xchg
cmp
jnp,pt
outsl
xchg
xor
lret
push
cli
lods
call
sub
shlb
int3
add
mov
cmp
mov
mov
gs
sbb
mov
sbb
pop
incl
repnz
push
jmp
cmpsl
mov
inc
icebp
lea
mov
out
add
mov
or
mov
loopne
popf
dec
mov
mov
or
fstp
pop
mov
jns
out
daa
sbb
lret
sbb
and
addr16
std
lock
cmp
pop
sub
dec
sub
fistps
add
inc
jb
inc
out
std
jmp
pop
jns
xchg
sub
fs
jge
cmp
lods
pop
cmp
inc
fs
cld
jns
adc
std
js
aam
arpl
cmpsl
sub
xor
push
popf
sub
popf
adc
nop
scas
pop
xchg
mov
es
subb
fisubrl
cld
xchg
scas
loope
inc
lock
jnp
dec
ret
and
mov
mov
outsl
jmp
pop
cmp
cli
fistl
pop
loopne
aam
xchg
enter
scas
inc
sub
add
cmp
xchg
fcmovbe
xchg
pop
stos
icebp
inc
jle
mov
clc
cmc
pop
dec
rcll
sub
xor
jae
pop
in
xchg
pop
ret
jmp
movsl
mov
stos
cmp
jg
push
adc
cmpsl
fildll
and
add
mov
jo
mov
sbb
dec
js
mov
cltd
fwait
xor
aam
outsl
pop
lret
mov
sti
dec
movb
mov
js
outsb
add
push
sbb
mov
movsl
xchg
push
push
cmp
push
ds
pop
mov
jmp
out
test
xchg
add
insb
rcr
sbb
roll
rolb
cmpsl
int
adc
loope
lods
cmp
xchg
in
dec
mov
mov
and
jnp
push
xchg
lcall
mov
iret
jo
xlat
mov
sub
mov
jno
cmp
shll
mov
sbb
jle
jne
js
out
sbb
pushf
cli
jo
cmpsb
cmpsb
in
jbe
sub
in
or
lea
adc
sub
add
addl
fwait
inc
xor
push
insb
jbe
xchg
cmp
inc
and
adc
and
push
in
jae
rorb
mov
mov
xchg
outsb
scas
xor
fldenv
test
hlt
ret
fwait
enter
dec
xchg
rorb
test
sbb
rolb
leave
mov
dec
fsubp
popf
or
xchg
or
rorl
leave
push
push
mov
jmp
ja
pop
and
scas
out
xchg
stc
xchg
in
cltd
loope
dec
inc
pop
xor
inc
inc
jne
push
fidivrl
lods
pop
sbb
mov
mov
ret
push
repnz
push
push
mov
ret
in
rol
mov
clc
add
repnz
imul
fldenv
out
or
int3
ljmp
cli
xor
test
mov
and
pop
jbe
or
cmp
mov
sti
rolb
fimull
cmp
insl
push
cltd
sub
jo
dec
push
imul
iret
lods
push
mov
in
adc
aad
xor
shll
lock
mov
shlb
or
pusha
std
out
jno
js
dec
and
pop
dec
aam
push
mov
pop
push
sti
not
mov
inc
pop
jb
add
loope
or
cmp
jo
or
fs
xchg
out
sbb
or
inc
xor
sub
push
inc
inc
cs
pop
push
inc
mov
adc
addb
jnp
mov
cmp
adc
mov
cltd
popf
mov
fdivl
add
out
dec
hlt
repnz
movsb
and
imul
mov
lret
lret
into
outsb
jp
mov
into
dec
jmp
push
call
test
sbb
stc
push
mov
inc
jl
mov
xor
inc
sti
mov
inc
lahf
push
shrl
jge
inc
daa
push
test
call
les
mov
cs
movsl
ljmp
test
pop
scas
je
cli
inc
hlt
adc
inc
lock
jle
jl
repz
mov
mov
mov
or
data16
jg
int3
xor
imul
xor
mov
jle
lods
jmp
xor
sub
stc
outsb
jge
push
and
adcb
arpl
push
das
fstps
cli
mov
out
cmpsl
out
ds
jns
lret
rolb
shll
clc
mov
jg
push
stos
dec
mov
xor
fwait
dec
adc
das
lcall
ret
cli
jmp
fnstenvs
repnz
push
xchg
fsubp
movsb
xor
iret
pop
or
mov
or
mov
lds
inc
mov
xor
pop
std
xor
cwtl
mov
aam
mulb
cmp
push
in
jg
mov
push
ret
loopne
arpl
add
ret
jb
call
mov
mov
outsb
es
inc
pop
cmp
mov
xchg
sub
cli
mov
mov
ficompl
cmpsb
xor
movsb
cmp
sbb
adc
adc
daa
icebp
cmp
scas
and
cwtl
mov
aad
xchg
outsb
push
fdivl
lahf
fs
fwait
loopne
dec
xchg
jno
aas
test
sub
pop
jae
js
mov
cmpsb
sub
dec
sahf
outsl
xor
dec
adc
movsl
or
arpl
or
clc
xlat
fdivs
mov
xor
pop
adc
mov
mov
incb
push
push
bound
insb
popa
adc
jg
fadd
add
movsb
out
movb
fdivp
xor
jmp
mov
pop
cmc
ret
push
aad
adc
clc
cmp
out
imul
jle
iret
lods
sub
xor
mov
pop
cmp
negb
in
jl
lods
mov
lea
mov
out
aas
cs
iret
movsl
fists
jecxz
ss
push
fnstcw
xor
xor
inc
pop
inc
out
mov
sub
sub
xor
mov
dec
pop
add
or
out
push
rorl
push
xlat
pusha
adc
subl
jns
mov
test
lret
sub
xchg
imul
ljmp
mov
mov
xor
mov
xor
cmp
or
fisubl
fdivp
ret
outsl
push
mov
lret
jle
sub
mov
cltd
call
out
cmp
push
int3
xchg
in
xchg
and
lcall
pop
data16
enter
or
jbe
sti
js
mov
sub
cmp
pop
rcrb
daa
mov
inc
xor
sub
adc
fisttps
sti
push
or
and
pop
mov
decb
outsl
ffree
mov
icebp
cmp
andl
lret
xchg
les
jno
xor
in
xchg
add
push
adc
in
mov
in
stos
fwait
and
dec
rcrl
daa
outsb
pop
fldl
sbb
inc
lea
icebp
lret
cltd
pop
shlb
pop
jmp
cmp
lahf
mov
cmp
jge
cmp
fwait
mov
out
fisubl
aaa
add
cmpsl
sub
lock
popf
shl
pushf
xor
in
decb
sbb
fnstenv
pop
inc
test
inc
in
lds
call
js
ret
mov
jo
je
or
sbb
scas
sbb
jnp
sbb
int3
loop
mov
test
sub
outsl
loopne
loop
ss
repz
pop
pop
rorb
xor
repz
inc
push
sub
push
repnz
mov
shlb
cs
aad
addr16
pop
cmpsb
inc
not
bound
and
sti
mov
sbb
jle
inc
shl
fidivl
or
mov
lds
addr16
or
je
rcr
xchg
cmp
mov
insl
sub
or
add
mov
fistpl
mov
repnz
push
xchg
dec
xchg
mov
mov
fildl
xchg
push
lcall
push
add
fistl
inc
pop
pop
sbb
sub
xor
sub
cmpsb
leave
mov
sub
pop
out
aaa
xchg
int
mov
jl
ret
or
push
dec
cmp
dec
mov
push
jo
sbb
popf
sub
xor
dec
cmpsb
ret
xor
lahf
or
rclb
or
xchg
pop
in
pop
aam
cmp
or
int3
cmc
nop
into
mov
mov
jne
jecxz
xor
jb
mov
popf
lret
pop
xor
xor
in
dec
jge
aad
add
outsb
or
add
pop
xchg
shrl
shr
scas
or
or
movsb
fists
aas
gs
gs
xchg
scas
gs
adc
in
sub
and
stc
aam
out
rol
jns
imul
jo
fsubrs
in
push
rcrl
mov
push
pop
add
jns
sbb
scas
inc
xchg
dec
lock
test
xchg
jbe
xchg
sub
jmp
aaa
fs
jno
add
xchg
push
cmp
dec
xchg
and
insl
adc
mov
sbb
mov
jnp
outsb
pop
sahf
popa
push
inc
jb
sub
test
nop
pushf
cmpsl
mov
popa
int
xchg
mov
lods
mov
jle
push
cmp
loop
adc
popa
rorl
mov
lods
je
mov
jecxz
out
dec
clc
pop
or
jnp
adc
test
cmp
xchg
sub
std
cmp
mul
and
pop
xchg
bts
repnz
push
push
rcl
xor
adc
roll
inc
pop
loopne
push
mov
or
stos
orb
and
movsl
in
data16
jbe
mov
inc
repnz
shlb
ljmp
fdivrs
std
scas
jmp
aaa
int3
arpl
test
pop
ljmp
insb
push
insb
fcoms
or
popf
add
xchg
cli
jp
or
sub
aad
setne
movsb
mov
loop
dec
mov
rcll
in
add
or
sbb
int
arpl
in
popf
xchg
repz
loopne
pop
or
jmp
repnz
fsubl
bound
es
adc
xor
sub
test
mov
xlat
mov
lods
test
scas
rcrl
in
pop
jmp
pop
sahf
mov
and
push
sub
inc
cltd
pushf
test
movsb
add
icebp
and
cmp
in
ss
inc
xlat
adc
data16
rcrl
test
adc
jecxz
aam
xchg
lret
pop
add
cmp
sub
fisubl
arpl
or
es
data16
lds
add
test
mov
test
mov
or
sub
repnz
test
loop
into
je
adc
pop
sub
mov
stos
insl
xor
mov
and
negl
mov
xchg
in
idivb
add
outsb
test
xlat
loop
push
daa
loopne
push
movsl
xchg
into
adc
or
push
mov
aaa
mov
pushf
dec
sub
imul
add
xor
xchg
lahf
inc
push
pop
cmp
outsl
bound
jo
xor
roll
repz
adc
div
pop
sarb
inc
pop
pop
pop
out
dec
push
sarl
adc
inc
xchg
mov
pop
mov
cwtl
ret
push
fbstp
mov
pop
sub
mov
adc
adc
rcrl
push
test
sbb
insb
inc
mov
xchg
movsl
lahf
scas
fmuls
push
sub
cwtl
nop
jecxz
jnp
add
jbe
dec
push
decl
in
divb
imul
adc
xchg
inc
jg
aam
in
jnp
outsb
int3
dec
and
ret
adc
jnp
adc
jle
pop
arpl
fwait
mov
lret
and
xor
pop
in
or
and
cmc
arpl
movsl
mov
jp
mov
adc
cwtl
xchg
stos
sub
out
pop
ret
mov
mov
mov
pop
sahf
push
addr16
adc
iret
jo
sbb
fucomi
dec
inc
shrl
inc
int3
clc
cmpsb
sub
push
aaa
lods
sbb
or
push
xor
scas
sbb
cwtl
sub
mov
lods
enter
push
arpl
fwait
pop
cltd
int3
jb
andl
fnstsw
movsl
mov
sbb
stos
movsb
stc
sbb
jns
pop
popa
mov
push
mov
repz
pop
jbe
mul
mov
out
shll
cmpsb
fistpl
xor
das
sbb
push
clc
inc
pop
mov
add
jle
lock
push
rcr
shl
dec
cmp
jecxz
in
push
jl
imul
adc
mov
sub
ficoms
lcall
dec
mov
mov
cmpsl
dec
hlt
aaa
pop
daa
fwait
aam
add
mov
xchg
mov
pop
andb
cmc
mov
andb
pop
mov
in
gs
mov
dec
mov
add
mov
jne
scas
loope
es
fcompl
stc
dec
sbb
sahf
sbb
jecxz
rcrb
lea
in
insl
mov
mov
int
addr16
lcall
inc
mov
mov
fsub
imul
sub
xchg
in
jnp
lahf
xor
cwtl
jo
repz
ljmp
or
mov
pop
dec
pop
jo
mov
and
movsb
ret
mov
pushf
popf
cmp
and
lret
push
xor
popa
adc
iret
jae
jge
pop
cmpl
pop
dec
pushf
into
mov
jns
mov
sub
mov
sbb
inc
mov
mov
pop
sti
pop
jmp
jle
sub
cmpl
ljmp
aas
pop
mov
mov
fstpl
mov
fisttps
pop
jl
pop
cmp
xchg
jge
dec
mov
jb
scas
rolb
cs
mov
mov
xlat
int
in
in
xchg
mov
dec
lds
addr16
out
mov
push
cwtl
andb
jmp
ja
and
pusha
inc
push
into
ret
stos
aas
lds
sbb
mov
dec
std
test
xor
cmpsl
je
mov
adc
in
std
fistps
xchg
cmp
xchg
jecxz
push
in
mov
hlt
or
insl
sub
sbb
roll
cmp
xlat
sti
movq
mov
ja
lods
pop
bound
jo
cmc
dec
leave
and
bsf
xchg
mov
outsl
aaa
jmp
inc
inc
lea
jne
testl
or
dec
inc
test
iret
push
sub
lea
jl,pt
jl
lret
sbb
add
test
testb
or
pushf
jle
repz
pop
mov
dec
fwait
or
pop
sbb
repz
sbb
cmp
aad
mov
popf
and
mov
sbb
cmp
cmp
scas
orb
out
and
lock
imul
ret
mov
dec
and
adc
jl
aas
js
das
xchg
jge
push
leave
loop
mov
dec
loopne
lret
out
filds
orb
sub
dec
or
cmp
xor
sbb
add
cld
jo
push
mov
jno
hlt
bound
test
arpl
lret
test
jns
push
jo
jo
adc
and
int3
jnp
mov
jnp
add
lods
dec
xlat
inc
es
inc
push
jl
inc
ret
and
pop
mov
mov
shrb
push
ja
push
stc
popa
push
ds
loope
jnp
arpl
sbb
adc
ficompl
pop
fsubl
jmp
push
xor
enter
xor
movsl
mov
pop
and
and
test
imul
sub
jnp
jb
ds
xor
mov
movsb
lret
test
in
push
mov
xchg
sti
shlb
int
sub
adc
sub
pop
pop
cmp
aaa
mov
aad
xor
and
in
lcall
enter
jle
je
jbe
imul
jnp
mov
out
clc
iret
dec
ljmp
mov
mov
jno
popf
mov
add
lret
xchg
adc
mov
mov
dec
push
sbb
fsub
mov
rcr
dec
ret
jae
sub
or
inc
ljmp
cmpsl
push
outsb
stc
pop
lods
and
dec
insb
dec
stos
lea
mov
cmpsb
mov
insl
xchg
add
xchg
fisubrs
jb
dec
inc
inc
jge
test
sub
push
cmp
in
shrl
xchg
cmpl
aaa
push
cmc
or
mov
pop
pop
enter
les
jecxz
pushf
xchg
and
dec
lea
push
lahf
enter
es
xor
sbb
mov
pop
push
jno
push
mov
add
pushf
rolb
xlat
lods
or
in
push
push
dec
dec
add
pinsrw
cmp
mull
test
stos
cltd
dec
jno
in
addr16
jmp
les
sbb
mov
iret
in
popa
mov
sub
js
or
or
mov
xchg
adc
push
push
push
jne
mov
jb
cmp
jae
xchg
and
mov
cmp
sahf
nop
js
inc
icebp
ret
push
jmp
push
loope
ffreep
mov
pop
push
cmp
inc
pop
mov
cmp
cmp
cmp
outsb
xchg
aad
insb
int3
je
and
outsb
enter
mov
loop
aad
mov
test
push
lret
add
lahf
test
enter
pop
lret
les
dec
clc
loopne
jmp
and
lahf
mov
in
movsl
fists
movsb
invd
stos
fists
and
dec
out
cld
lcall
insb
sbb
std
dec
outsb
push
jno
pop
or
pop
imul
xchg
adc
ror
movsb
sub
pop
iret
mov
movsb
lds
adc
adc
loopne
lods
and
addr16
add
pop
mov
sub
int
dec
xchg
je
pop
fisttps
push
pop
dec
sbb
add
bound
fistps
stos
adc
pop
adc
jl
or
repnz
je
in
xchg
fnstsw
ds
mov
imul
pop
dec
add
pusha
sbb
mull
or
in
scas
xchg
dec
ficomps
pop
jno
pusha
push
les
inc
ss
rorb
xor
adc
and
out
push
fidivrs
and
pusha
imul
sub
sub
lea
hlt
int3
mov
fldl
pop
cltd
outsb
jge
or
pop
and
xchg
sbb
inc
adc
insb
jl
cmpsb
pop
repz
test
out
das
shrl
mov
jo
lea
xchg
mov
imull
ja
cmp
inc
inc
pop
sahf
sub
insb
cmp
xchg
repz
cltd
roll
insb
int3
add
dec
out
ficoml
repnz
ljmp
mov
addr16
ret
lret
es
cmp
xor
and
sahf
frstor
mov
ljmp
xchg
ljmp
mov
das
movsb
or
mov
lea
sub
movsl
mov
xchg
cmc
pop
mov
arpl
leave
xlat
lods
arpl
cmp
js
push
xor
cli
or
pop
xchg
add
mov
fisubl
icebp
pop
fsubrs
xor
aam
out
mov
std
and
cli
lcall
sub
sbb
test
addr16
jecxz
or
dec
pop
jle
sbb
pop
cmpsb
mov
imul
mull
repz
sbb
fisttpll
adc
repz
jbe
mov
es
fwait
xchg
outsl
mov
adc
inc
gs
insb
push
in
out
sbb
out
sahf
mov
inc
ss
movsl
and
enter
add
pop
mov
add
mov
cmp
sub
and
repz
comiss
sbb
mov
jmp
xor
iret
jecxz
mov
cmp
inc
push
repnz
mov
lret
mov
inc
mov
jle
xchg
lahf
inc
cmp
or
les
popf
sub
fsubrl
clc
push
sub
lds
cwtl
rorl
shll
xor
addr16
in
push
ds
and
pop
loope
xor
loope
push
adc
adc
hlt
pop
or
fs
push
decb
pop
inc
js
adc
loop
add
ret
sbb
add
imul
popa
jge
xor
loopne
outsb
sbb
cli
jge
je
dec
sbb
out
xchg
xor
scas
clc
or
mov
mov
ss
fdivp
xor
xchg
shl
and
push
mov
test
cmp
arpl
pop
sbb
sbb
clc
dec
cwtl
enter
daa
dec
lock
jnp
jmp
xor
jns
sub
sub
cwtl
or
ret
into
loope
and
xor
or
fimull
movsb
stc
cmp
jno
mov
cmp
sub
add
test
pop
xlat
lds
mov
filds
inc
push
jmp
and
lea
pop
outsb
mov
adc
sbb
dec
push
xchg
cltd
sbb
lret
pop
lcall
sbb
mov
pop
loopne
inc
and
push
movb
jmp
cmpl
mov
fdivp
stos
cmpsl
xchg
jle
in
mov
jns
std
xor
in
out
sub
fsts
xor
leave
clc
loopne
fimuls
jno
std
dec
ss
add
repnz
mov
aaa
das
rcrl
push
hlt
mov
jecxz
mov
jno
push
cmp
push
pop
rcr
scas
bound
sub
fldl
setns
or
aam
faddl
divl
dec
shl
adc
jo
sti
loope
add
rclb
les
jl
adc
inc
and
add
xor
jo
adc
adc
ret
mov
add
jecxz
and
dec
mov
and
stc
dec
repnz
cmp
push
fldt
ljmp
outsl
xchg
mov
lret
mov
fstp
dec
cmpsl
pinsrw
xor
test
out
dec
jne
loope
outsl
push
mov
adc
mov
scas
dec
cmpsb
ret
lds
jnp
ret
in
add
sbb
scas
test
das
int
and
shrl
push
cmp
fcom
xchg
mov
mov
sti
xchg
leave
pop
outsb
push
out
mov
inc
cmp
test
sbb
cmp
sbb
xor
mov
lods
fidivrl
cmpsl
jl
ljmp
aas
or
addl
les
not
dec
out
cmp
stos
bound
mov
mov
loope
push
push
push
xor
inc
mov
in
mov
push
dec
into
mov
cmc
mov
push
xchg
jl
mov
jle
mov
ljmp
adc
js
mov
ds
sub
sbb
xlat
pop
cmc
jno
xchg
add
xchg
jno
push
movsl
or
mov
mov
aas
adc
jmp
dec
sbb
sbb
adc
mov
add
jge
ljmp
mov
repnz
les
sub
cld
dec
jno
out
sub
pop
mov
xor
ja
cld
or
or
out
or
sbb
cmp
test
mov
cmp
sub
push
test
push
dec
mov
pop
and
popa
inc
pop
icebp
jmp
add
pop
popa
stos
adc
cmpsb
and
jbe
xorl
mov
xlat
test
xchg
sbb
push
sbbl
arpl
inc
sbbb
jae
into
xchg
adc
stos
pop
sbb
inc
inc
xchg
aaa
loopne
inc
push
dec
jp
or
or
sub
ja
dec
jb
add
lds
push
push
fimuls
ret
sbb
pop
sub
add
xor
mov
push
insb
push
loopne
incl
sahf
rorb
dec
aad
mov
xchg
fs
mov
loop
in
out
into
and
add
mov
push
int3
lret
xor
testl
repz
mov
and
mov
cmp
cmc
mov
adc
sti
mov
lret
jg
lods
pop
sbb
jno
shlb
lcall
jo
filds
push
push
and
dec
jl
xor
int
sbb
bound
fimuls
push
js
mov
add
lcall
sbb
bound
pop
xorl
mov
mov
pop
lret
pop
adcb
xchg
mov
shr
hlt
arpl
cmp
ss
frstor
fsub
orb
cmp
sbb
dec
and
aam
cli
cmp
loope
push
inc
adc
movsbl
push
mov
jge
cmp
fs
test
ss
out
adc
pop
shlb
roll
mov
sub
cmp
lods
jae
xor
enter
mov
fnsave
jmp
xor
lock
nop
cmp
inc
test
mov
sbb
out
movsb
cmp
sbb
dec
jno
lds
mov
jbe
das
dec
xchg
jle
dec
xor
into
sbb
add
insb
sbb
mov
add
or
clc
leave
mov
mov
outsb
dec
stc
jb
lds
or
jge
dec
call
jecxz
testb
add
cmp
cmp
and
movsl
sbb
jo
dec
adc
push
fld
movl
pushf
ret
or
pop
psraw
popa
lea
pop
mov
adcl
or
mov
xchg
loop
mov
push
pop
jno
cmovp
fldenv
aas
add
test
jle
popa
pushf
xor
pushf
add
cmc
xor
add
sahf
pop
leave
mov
jo
pop
dec
cmpsl
repz
mov
stc
loop
mov
aas
cli
scas
pop
les
mov
aam
aaa
sbb
mov
cmpb
das
and
imul
js
fcoml
fs
inc
inc
jge
push
add
aam
or
mov
lock
pop
addr16
mov
aam
adc
xlat
sbb
xchg
shll
pop
les
mov
in
inc
rorb
das
and
inc
loopne
add
add
fmull
add
dec
fstl
hlt
xlat
xlat
jno
sbb
rcll
leave
xorb
jno
fiaddl
clc
sub
iret
cmp
les
notb
fidivrs
sub
xchg
xor
mov
in
xchg
mov
inc
sub
ss
rcrl
pop
sbb
ret
cmp
sbb
lret
fnstenv
mov
mov
insb
lcall
fildll
mov
sub
fimull
int
in
lds
pop
push
call
cs
mov
mov
mov
sti
filds
add
cltd
push
cmpl
outsb
gs
out
dec
stc
inc
xor
mov
iret
mov
lds
in
int
loop
outsl
call
pop
jl
pop
imul
enter
lahf
mov
push
cld
cmc
shlb
enter
cmp
repz
mov
adc
jg
cwtl
and
push
or
insl
mov
sahf
or
and
jmp
pop
or
fnop
repnz
xor
push
push
mov
lods
pushf
int
std
in
sti
mov
scas
popf
dec
lods
pop
or
jno
sbb
out
sub
out
fdiv
mov
add
cmp
stc
jecxz
sbbl
in
dec
jne
xor
aas
repz
imul
jae
das
cli
mov
jecxz
movsb
in
xor
cmp
jb
cli
dec
jp
les
push
xchg
ja
dec
mov
cmpb
mov
push
stc
lea
pop
pop
pusha
xchg
mov
lcall
sub
sarb
rcl
push
hlt
roll
cmpsl
add
aad
jnp
push
aas
ds
xchg
es
or
dec
pusha
xor
mov
push
xlat
into
xor
and
and
pop
imul
inc
mov
je
push
xor
test
add
lods
pop
movsl
repnz
je
lods
dec
lcall
sar
or
addb
cmc
mov
jge
jae
sbb
lcall
sub
xchg
sbb
add
aaa
dec
in
jl
sbb
neg
stos
sub
daa
sub
push
loopne
or
fisubs
ds
xor
xchg
mov
jecxz
fsubrs
sub
or
pop
cmp
push
sbb
mov
dec
sahf
or
cmc
mov
negb
jmp
roll
les
jmp
push
cmp
test
pop
jns
sub
icebp
int3
push
outsb
pop
push
lcall
adc
popa
or
inc
xchg
insb
ljmp
outsl
xchg
outsb
test
cmp
xor
dec
cmp
ret
std
or
aaa
mov
sbb
add
shll
inc
push
mov
mov
mov
jae
jb
lahf
std
push
out
lock
into
cli
fwait
cs
mov
lock
adc
in
add
and
aam
arpl
or
out
vunpckhps
xor
gs
mov
sbb
imul
cld
pop
inc
cli
loope
mov
dec
cmp
ss
fwait
enter
out
or
push
mov
dec
fidivrl
and
xor
mov
mov
pop
ds
arpl
icebp
push
xchg
push
ds
out
pop
and
fbstp
std
xchg
in
add
cmp
jge
es
pop
sarb
jbe
mov
dec
mov
cmp
xor
pop
ret
testb
pop
jb
push
mov
fs
lods
xor
decb
jnp
fucomi
mov
jo
call
xchg
inc
in
pop
sub
mov
mov
loopne
iret
mov
fs
out
movd
add
andb
ficoml
jns
dec
sbb
ss
movb
movsl
xchg
or
inc
sbb
or
inc
sbb
add
insb
pop
orl
push
outsl
leave
xchg
imul
adc
popf
lahf
sbb
jae
sbb
dec
mov
les
xor
mov
xor
aas
sti
sahf
jb
xchg
insb
in
push
mov
xor
andb
loopew
dec
mov
mov
jle
arpl
fwait
jg
into
jmp
in
pop
add
pop
cmp
sub
ffreep
pop
lods
lahf
imul
push
cmpsb
ret
subl
add
sub
lahf
and
test
or
int
fisubrs
adc
mov
lret
xor
or
incb
nop
or
stc
loop
lock
fadds
mov
sbb
jbe
cmp
mov
sahf
popf
cs
movsb
mov
std
mov
inc
jmp
xchg
arpl
in
pop
mov
pop
pop
in
int
inc
fwait
mov
cmp
and
mov
lcall
out
pop
lret
out
xchg
add
out
push
sti
mov
imul
xchg
jnp
add
out
xorb
inc
mov
lcall
hlt
jbe
les
jle
cmp
je
pop
mov
aaa
sbb
sti
sub
cmp
xchg
pop
and
mov
sbb
push
add
jb
pop
add
sub
rolb
jnp
aaa
int3
add
lcall
into
scas
mov
inc
shrl
cmp
outsb
std
and
clc
adc
mov
outsl
mov
fsubr
push
pop
xchg
push
inc
iret
dec
sub
xlat
int
mov
mov
push
bound
xchg
insl
mov
sub
loop
cmp
sub
sub
bound
into
mov
adc
add
ds
fucomip
sar
lsl
push
out
mov
jge
push
jns
pop
dec
adc
pop
incb
xor
add
mov
movsb
rclb
icebp
sbb
testl
sbbb
xchg
cmc
sbb
mov
cmpsb
xor
push
push
jo
icebp
inc
mov
mov
and
mov
pushf
imul
pushf
enter
lret
popf
mov
dec
mov
popa
std
pop
and
leave
pop
jnp
xchg
xor
gs
jnp
inc
das
js
pop
loope
xchg
das
pop
mov
repnz
loopne
fwait
mov
ret
and
imull
cmp
push
hlt
cltd
shlb
fisttps
int3
pushf
lods
mov
adc
dec
adc
add
outsl
mov
push
sbb
xchg
loopne
fdivl
aam
pop
mov
pop
push
mov
and
testb
or
lcall
testl
out
pop
pushf
ss
xlat
lahf
push
ret
aaa
addr16
mov
push
adc
adc
add
add
imul
jle
add
enter
xchg
cmc
out
sub
stos
push
jecxz
movsl
rolb
mov
ss
insl
scas
aas
xorb
mov
inc
test
nop
sub
fs
daa
mull
xor
int
in
in
pop
inc
insl
inc
push
into
inc
or
cs
mov
out
lret
xor
in
inc
fbld
ljmp
iret
shlb
fidivrs
mov
xchg
decb
jbe
in
sar
mov
lret
pusha
data16
cmp
fwait
xchg
push
adc
nop
xor
pop
xor
adc
xchg
fnsave
mov
mov
idivl
push
hlt
cmp
insl
inc
mov
fs
dec
push
cmp
cmpl
rolb
fdivrs
mov
test
cltd
adc
pop
mov
psraw
mov
popa
jmp
and
xchg
cmpsb
inc
xchg
push
outsb
xchg
int
or
mov
inc
aaa
inc
dec
jb
insl
xor
jne
ja
mov
dec
stos
enter
push
test
outsb
xchg
push
cmp
add
jne
jl
lret
adc
ficompl
aad
mov
pop
movsb
addr16
jae
pop
jl
jne
mov
push
pop
or
jno
dec
pop
dec
movsl
push
repz
nop
jle
dec
add
sbb
jb
add
sbb
out
mov
vaddpd
mov
subb
gs
gs
addr16
mov
or
jne
adc
enter
dec
xchg
enter
cltd
xchg
xor
ret
or
je
popa
mov
aam
shl
stc
push
jle
aam
jno
adc
sbb
pop
std
outsb
inc
and
scas
sub
cli
ret
in
cmpsl
pop
mov
xchg
sub
arpl
aas
repnz
ja
aaa
xlat
xchg
popf
das
nop
nop
lods
shl
mov
mov
and
sysenter
stc
hlt
outsl
call
mov
aam
jl
jne
shlb
es
push
mov
dec
push
inc
fdivl
jp
inc
adc
in
flds
inc
mov
pop
test
pop
xchg
cmp
outsl
scas
adcl
ret
scas
xchg
pop
inc
or
sub
xchg
fcmove
cmp
xor
cmp
jno
lret
inc
mov
js
push
fincstp
cmp
mov
xchg
stos
mov
inc
sbbl
inc
shlb
ret
cmc
dec
lahf
mov
stos
int
dec
movb
push
dec
les
mov
push
mov
ja
mov
ret
in
sub
push
dec
js
pop
dec
push
es
adc
repz
mov
pop
fcomip
xor
cwtl
sbb
int
dec
sub
addr16
sbb
int
mov
mov
or
or
jno
sahf
sahf
mov
movsl
cltd
cwtl
ljmp
cmpsl
flds
inc
pusha
sbb
lcall
inc
in
inc
inc
sahf
mov
fsubrp
adc
jns
and
or
or
mov
jp
aaa
stos
cmp
stc
push
loope
pop
dec
testl
pop
and
push
mov
mov
and
sub
xchg
test
add
data16
lods
sub
ret
stc
inc
dec
dec
jbe
out
aaa
jle
mov
jno
daa
jmp
rclb
insl
bnd
dec
xor
pop
inc
daa
out
xchg
jns,pt
mov
xchg
cld
cwtl
cld
push
fisubl
sub
scas
outsb
ret
and
cld
xor
ret
stos
scas
or
sub
jbe
into
jmp
insl
mov
testb
pop
stc
mov
push
in
lret
or
cld
inc
mov
mov
and
jb
negl
mov
inc
inc
rorb
dec
and
out
xor
negb
cmp
jne
jg
adc
divb
cli
mov
and
xorb
adc
xor
push
test
popf
ds
jne
addr16
test
dec
enter
and
insl
xchg
jl
add
push
or
and
in
push
call
gs
adc
bound
loop
mov
push
adc
adc
cmp
lea
mov
les
add
std
pop
mov
xchg
sbb
hlt
popa
mov
sbb
push
xchg
mov
in
add
es
movb
rcrb
add
movsl
clc
fists
sub
mov
pop
jge
out
mov
or
das
sub
mov
mov
dec
lock
lcall
mov
cmove
clc
and
popl
shrb
subl
test
pop
rcrb
xor
fdivl
and
mov
jbe
mov
jp
loop
mov
add
sbb
outsl
jb
sub
or
stc
rcll
sub
add
outsl
sbb
addr16
flds
push
push
lahf
repz
out
mov
xchg
sub
jb
shrb
lods
dec
in
push
adc
pop
mov
cmp
push
mov
or
orl
jecxz
js
cmp
push
in
imul
jg
ret
jle
mov
jnp
outsb
mov
fld1
jne
rolb
daa
jecxz
ds
mov
xor
test
jle
xchg
xor
fdivrl
test
pop
pop
icebp
test
cmp
mull
adc
and
or
mov
lea
ds
sbb
add
inc
fbstp
call
aas
dec
test
xchg
fcom
mov
shrl
pop
dec
repnz
ljmp
lock
je
call
test
jae
mov
xchg
jnp
inc
inc
push
insl
fadds
push
les
lcall
jmp
jg
aam
mov
inc
out
data16
test
jns
or
xchg
jle
outsl
jb
montmul
cmpsb
shll
cmc
mov
inc
xchg
jle
sub
adc
jle
clc
int
cs
stos
lock
cmpsl
jmp
in
cmp
ds
jo
aam
inc
call
sub
mov
dec
shlb
and
cmpl
loop
mov
in
scas
movsl
pop
fs
bound
leave
dec
mov
push
lret
in
xchg
decb
lods
dec
mov
jp
sub
mov
add
fs
jp
pushf
mov
lret
loop
les
and
sub
call
mov
mov
test
cs
jne
aas
fldl
sub
mov
scas
sub
mov
stos
iret
sub
and
push
aaa
mov
push
repz
push
int3
lock
test
inc
inc
stc
mov
movsb
mov
jns
mov
and
div
jg
ljmp
fstl
sbb
pusha
clc
jle
in
shrl
scas
fdivrl
mov
hlt
into
dec
mov
sbb
test
jb
dec
dec
mov
loop
in
fcmovb
dec
ret
sahf
jbe
inc
pop
lods
mov
shlb
ficompl
mov
mov
jle
cmp
mov
ja
mov
jge
ror
sbb
fbstp
mov
into
pop
js
adc
in
inc
xchg
mov
data16
clc
int3
jbe
mov
addr16
in
shll
rorb
jle
pop
loop
jecxz
jne
pushl
or
into
xor
sbb
fnstsw
mov
ret
mov
das
scas
nop
hlt
imul
fldt
and
arpl
mov
sbb
push
stos
lods
js
ds
xor
lret
iret
aad
inc
mov
xor
repnz
pop
mov
sbb
out
sub
cmpsb
aaa
xor
cmp
repz
xor
or
roll
add
jb
dec
popf
mov
inc
addl
mov
rcr
sbb
mov
lret
mov
adc
mov
and
and
push
shlb
xorb
stos
movsl
inc
cmp
or
leave
add
xlat
fdivs
fildl
sbb
sbb
je
repz
mov
ss
inc
jle
mov
rclb
pop
xchg
imull
fldl
test
push
sub
lds
jl
push
ret
dec
movsl
pop
xor
push
int
xor
idivl
or
sub
lea
popa
or
orb
fisttpll
scas
push
enter
jmp
adc
cmc
sub
cmp
push
bound
cs
mov
pop
clc
andb
sbb
frstor
out
xor
dec
test
je
mov
and
mov
inc
mov
push
lock
and
test
push
stos
sub
mov
aas
push
dec
inc
out
and
jp
ss
lods
dec
xchg
ficoms
mov
adcb
dec
mov
insl
push
push
js
rcl
inc
xor
andl
mov
push
fs
mov
cmp
adc
scas
in
add
adc
stos
ret
sub
nop
or
jno
pushf
addr16
mov
mov
adc
cld
bound
add
jg
cmp
push
or
insb
ret
inc
lds
testb
mov
pop
xor
lcall
pop
push
xchg
paddsw
int
cmp
xor
je
mov
adcl
and
sub
fisubrl
pop
xor
test
cli
sub
sarb
adc
sub
jmp
mov
shrl
dec
mov
add
mov
dec
cwtl
mov
dec
xchg
shrb
mov
stc
jge
fs
mov
cli
mov
add
in
les
mov
in
lock
mov
xor
test
lahf
arpl
add
pop
xchg
cmp
test
mov
cmp
add
lret
cmp
out
pop
mov
testl
test
repnz
ss
jo
ljmp
mov
dec
mov
xchg
cmp
mov
mov
xor
xor
dec
jns
mov
push
test
rcrl
jmp
out
adc
pop
jno
xchg
jne
lock
sub
cltd
fdivrs
cwtl
sub
test
sbb
out
fldenv
mov
aad
sub
lods
ss
xor
les
push
fimuls
add
jl
cmpsb
imul
add
addl
inc
hlt
cli
xor
lret
xchg
fdiv
and
cmpsl
xchg
loop
fcomip
shrb
movsl
icebp
and
inc
imul
je
hlt
fwait
push
data16
inc
sti
dec
insb
inc
adc
pop
push
mov
sub
mov
sub
andl
mov
test
sub
stos
outsb
loope
call
inc
add
push
in
pop
fisttpll
enter
push
xor
loope
imul
hlt
mov
jno
subb
imul
mov
mov
js
push
das
xor
push
dec
cmpsl
lcall
outsb
fwait
dec
inc
cs
dec
xchg
test
mov
jl
jle
xchg
sub
mov
sbb
jo
mov
clc
mov
repz
sbb
and
lcall
fcomps
jmp
jecxz
mov
cmc
lods
fsubrs
out
hlt
jl
insb
mov
jl
sbb
mov
xchg
in
sub
mov
addb
aam
mov
shll
lods
neg
push
inc
mov
cmp
jbe
sbb
sub
adc
addr16
iret
dec
pop
outsb
es
aas
lret
fcompl
and
add
adc
icebp
fs
in
adc
xor
fmulp
cmpb
push
das
push
mov
fildll
fcomps
mov
dec
popa
test
dec
push
adc
scas
inc
pushf
ret
cltd
push
xchg
fildl
push
aaa
and
push
lcall
dec
mov
test
inc
mov
pop
ja
sbb
adc
inc
std
dec
lock
and
xor
insb
sub
movsl
jge
fbstp
sub
mov
cmpsb
lret
ret
dec
jecxz
pop
mov
leave
sbb
dec
jnp
cltd
pop
push
inc
jb
cmp
lret
movsb
add
mov
mov
std
mov
jmp
sarl
sub
fisttpll
cmpsb
rcl
testl
add
mov
out
addr16
xor
push
pop
lods
cmpsb
mov
adc
out
inc
pop
mov
pop
jnp
imul
mov
sbbb
lea
in
daa
rorb
iret
xor
xchg
in
clc
push
imul
sbb
cmpsl
dec
lret
xchg
jl
sbb
lods
jge
cwtl
cmc
dec
dec
mov
mov
and
inc
dec
sbb
xor
and
fwait
dec
std
aaa
mov
jnp
dec
xor
sti
cmp
mov
sbb
scas
jno
sbb
getsec
out
cmc
push
sbb
sahf
and
int
sbb
lcall
push
cmp
adcl
clc
cmp
outsl
jne
pop
sub
push
mov
je
adc
jecxz
mov
or
cmpsb
xchg
leave
lods
mov
cwtl
popf
mov
sahf
sub
lcall
popa
roll
xor
mov
cltd
mov
jge
sbb
es
xchg
frstor
movsl
mov
xor
pop
lcall
pushf
out
ja
xlat
and
cmpsb
push
aaa
mov
mov
lahf
mov
push
mov
mov
and
aad
enter
or
inc
nop
xor
je
mov
jbe
ja
subb
data16
orl
pop
push
lds
push
and
fwait
mov
mov
fcoml
dec
mov
adc
cld
enter
jbe
in
fdivl
or
fisubs
aaa
leave
lods
jg
popa
cmc
decl
jmp
lods
cmp
lahf
ret
loopne
xorb
push
dec
inc
aas
push
mov
pop
mov
mov
push
cmpsb
js
dec
inc
add
pop
pop
cmp
mov
sub
int3
outsb
add
or
popa
fcomps
fadds
ljmp
push
sub
rcll
clc
sbb
movsb
lret
cltd
xlat
imul
ret
add
ss
sub
sbb
hlt
in
sbb
mov
push
int
out
in
sub
jmp
les
cmp
cld
repnz
mov
stc
push
es
call
test
fistl
xchg
xchg
sbb
and
loop
enter
lods
arpl
fisubrs
add
icebp
test
add
mov
imulb
ljmp
jecxz
push
xor
mov
shlb
aaa
jno
mov
pop
cmpl
cmp
xlat
mov
repnz
sbb
adc
pusha
rcrb
push
es
loopne
mov
sub
insl
out
cli
imul
xor
out
sti
mov
sahf
pop
lea
outsl
mov
ss
adc
inc
lcall
push
mov
xchg
in
stos
push
cmp
call
cmp
aas
mov
mov
incb
cmp
adc
adc
sub
movsb
in
mov
adc
xchg
aam
std
xchg
dec
jne
add
lcallw
mov
jnp
outsl
or
ret
int3
mov
add
dec
mov
inc
lds
inc
or
outsb
ja
je
movntq
mov
mov
inc
push
inc
adc
es
stos
mov
negb
imul
psrlq
xchg
add
in
test
cmp
jmp
xchg
clc
out
push
in
cmp
shll
add
fmull
xchg
jge
hlt
arpl
in
clc
sub
mov
jmp
adc
sahf
mov
lods
dec
loop
jne
jne
addr16
mov
lods
xorl
in
sarb
push
repz
xor
xchg
cmp
add
mov
adc
xchg
mov
push
inc
mov
sbb
sub
sbb
jo
aam
add
adc
orl
xchg
movsb
ret
mov
pop
push
sub
pop
hlt
arpl
pop
jl
mov
adc
xchg
roll
xchg
mov
in
ret
and
imul
scas
mov
adc
and
xor
stos
loopne
pop
outsb
pushf
fnstenv
hlt
scas
or
add
addb
gs
int3
pop
push
mov
mov
cmpsl
fistpll
and
push
lods
inc
cmp
aam
mov
lret
in
lahf
jmp
mov
mov
fadds
jnp
imulb
xchg
dec
dec
dec
mov
add
and
daa
push
xchg
rcrb
inc
xor
xorl
adc
es
jmp
fbstp
ds
fcomp
mov
mov
sbb
lods
les
insl
or
pusha
icebp
pop
inc
movsb
push
idivb
call
pop
mov
popf
inc
pop
fwait
mov
jae
mov
loope
popf
aam
repz
jg
pop
ficoms
and
dec
dec
xchg
xchg
imul
push
sbb
xchg
add
in
into
int
dec
in
lea
leave
xlat
dec
mov
outsl
les
scas
cltd
imul
pushf
cltd
sub
adc
mov
fcoms
daa
and
mov
or
call
mov
fs
aad
dec
out
or
sub
shll
lea
movq2dq
sbb
notb
in
nop
jb
add
int3
dec
jecxz
jl
push
dec
mov
inc
imul
push
push
push
frstor
cmc
idivl
stos
lret
pop
mov
out
mov
or
call
loop
cmpsb
sbb
add
lret
shlb
adc
out
pop
inc
push
out
ss
push
test
cli
push
or
mov
and
hlt
inc
sub
mov
scas
shl
int3
xor
cmp
int3
cmp
xchg
xor
cs
out
mov
test
stos
sbb
es
mov
jno
icebp
xchg
lea
mov
pop
xor
xor
gs
data16
lods
inc
adc
and
or
sbb
cld
daa
pop
outsb
lods
sbb
lea
dec
sub
pop
fisubl
dec
xor
aam
add
outsl
fnstcw
mov
out
xchg
das
outsb
ror
cld
shr
loop
xchg
push
xlat
js
insl
sub
lahf
arpl
lods
dec
mov
dec
xchg
or
inc
pushf
jnp
ficoms
mov
test
sbb
in
xor
mov
lods
ss
hlt
and
mov
mov
jno
incb
pop
ds
int3
cltd
or
pop
xchg
mov
les
mov
jbe
icebp
ljmp
into
stos
pop
cs
push
or
rol
fidivrs
fdiv
addr16
mov
lea
cmpsl
jbe
pop
xchg
icebp
roll
jno
push
adc
shlb
xchg
push
mov
cld
jle
cmpsb
adc
pop
shrd
aaa
jno
cmpsb
xor
mov
jno
pop
push
pop
adc
pcmpeqb
nop
xor
sub
es
push
outsl
rorl
cwtl
into
push
xchg
std
rclb
nop
subb
jo
mov
mov
cmp
fcmovnb
sbb
or
sbb
daa
and
xor
mov
mov
sub
jecxz
mov
add
pop
xchg
fwait
inc
cmpsb
sarb
lock
lods
mov
push
shrb
int
movsb
mov
mov
xor
jecxz
les
dec
fstpt
xor
fdivs
pop
sub
xor
pop
cmp
mov
adc
out
ret
aas
push
cmovs
insl
iret
and
xchg
sahf
iret
cmpsl
cmp
arpl
or
fnstsw
enter
inc
ret
mov
in
dec
lcall
test
enter
in
fxch
push
xchg
or
sbb
repz
dec
imul
lods
xchg
in
push
test
mov
mov
ljmp
ret
mov
call
jbe
adc
cld
aam
dec
je
inc
movsb
insb
xor
xchg
xor
in
in
fwait
loop
adc
fisubs
das
sub
mov
jmp
lea
fstps
imul
sbb
in
xchg
mov
adc
cli
in
add
xor
icebp
sahf
clc
cmp
add
mov
gs
divb
or
adc
and
arpl
leave
xor
adc
out
test
out
jne
cwtl
mov
add
dec
je
push
xor
mov
mov
mov
or
jl
mov
dec
jp
rcr
xchg
sar
pushf
xchg
lock
mov
fnstenv
das
js
push
xchg
xor
jbe
ja
arpl
shl
jl
lods
xor
testl
inc
aas
add
or
push
lahf
mov
call
jmp
add
cmc
out
push
jg
addl
insb
adc
cmp
cmp
xor
shll
cwtl
aas
lds
test
push
enter
pop
push
pop
sbb
sub
rorb
in
mov
mov
xchg
xor
aaa
pop
in
adc
xchg
movsb
or
xor
or
xchg
sub
fwait
dec
clc
push
mov
call
pusha
movsb
sbb
inc
jl
xchg
mov
cmpsb
pop
iret
out
add
inc
xchg
mov
jno
mov
repnz
test
sbb
dec
in
jmp
and
cmp
pop
ds
out
and
xorb
int3
incl
stos
push
or
or
jle
out
add
ja
outsb
xlat
stos
arpl
inc
sbb
mov
cmp
mov
cs
repz
sub
push
fcompl
xor
or
daa
adc
mov
cli
pushf
movsb
mov
movsl
frstor
rolb
popf
rcl
rolb
mov
cs
add
leave
push
cmpsb
cld
in
lret
mov
insb
xor
fldenv
inc
out
les
cmp
xorl
add
jge
int3
mov
adc
xchg
clc
into
fiadds
jmp
inc
pop
scas
ds
cmp
scas
jg
xchg
popa
or
pushf
adc
movsl
movsb
sahf
popf
aas
mov
mov
pop
push
xor
lret
mov
xchg
cmp
or
les
loope
xchg
jecxz
mov
mov
mov
xchg
movsl
sub
xchg
pop
push
ficoml
and
movsl
ds
movsl
daa
jnp
scas
fsubrl
sti
lcall
cmp
cmp
ret
jno
xchg
or
das
pop
addb
fwait
add
inc
popf
lock
lahf
mov
in
sub
mov
addl
orl
mov
jbe
rol
sub
mov
lcall
adc
pusha
xlat
adc
sbb
cmp
rcrl
sbb
js
mov
pop
pop
arpl
pusha
fistpl
sbb
mov
nop
pop
pop
fidivrs
pop
lcall
push
jbe
mov
movsl
and
insb
std
pop
movsbl
xchg
add
dec
mov
jge
movsl
mov
adc
cmp
sbb
popf
mov
fsubrs
lcall
ret
aam
je
xchg
int3
enter
fcompl
loop
iret
cli
inc
xchg
sub
push
add
mov
sbb
std
int3
sub
dec
mov
cmp
out
mov
cmp
mov
icebp
inc
jmp
es
push
fistpl
mov
leave
rorb
cmpsb
iret
lret
mov
lret
nop
jp
pop
in
into
shll
inc
pop
iret
mov
and
popa
sbb
lret
jo
mov
loope
mov
bnd
inc
lcall
inc
push
push
ljmp
push
data16
push
sti
pop
test
popa
mov
dec
mov
in
and
lret
mov
dec
mov
push
lds
out
das
hlt
pop
jne
fldenv
scas
insb
adc
dec
dec
push
jnp
sbb
pusha
lods
sub
and
inc
xchg
mov
ljmp
fidivrs
loope
stos
add
sub
sahf
xor
aas
mov
dec
mov
xchg
popf
popa
jo
push
xchg
or
pop
jle
jg
xchg
xchg
sahf
cli
adc
add
inc
ret
add
mov
jbe
and
jns
and
adc
int3
aas
data16
mov
and
addr16
sbb
sub
cld
xchg
xchg
jne
jnp
xor
cs
dec
cmp
cmp
inc
xor
mov
std
and
and
sub
idivl
lds
or
loope
cs
movsl
add
cmpsb
sbb
fisubs
jae
das
pop
adc
and
mov
lds
addr16
je
pushf
gs
sub
aad
mov
jne
loopne
popa
leave
arpl
ss
data16
lock
adc
dec
lds
into
fldl
das
cmp
pop
mov
aad
jle
sub
mov
mov
cmp
aam
jl
jae
into
add
out
nop
repnz
pop
lods
stc
loopne
sub
inc
pop
pushf
mov
fwait
jecxz
data16
cltd
or
and
sarb
cs
pop
jp
add
fstp
ljmp
xchg
adc
movsb
les
cmp
scas
sbb
insb
push
scas
repz
sbb
loop
and
mov
push
out
je
in
icebp
pop
mov
pop
int
ficomps
xchg
cld
cld
iret
inc
and
iret
into
jmp
cmp
push
adc
cs
sbb
xor
mov
loop
ss
push
jg
and
xchg
dec
test
mov
ja
mov
test
cmp
sti
pop
frstor
shll
push
rcrl
lret
xchg
adc
sub
fwait
adc
mov
xlat
jge
push
inc
icebp
insb
inc
fildll
mov
pop
xor
loope
addr16
mov
and
out
sub
lds
cmpl
test
cmpsl
or
shl
mov
loopne
adc
pop
lock
ret
cmp
mov
gs
push
and
mov
mov
mov
dec
pop
call
add
mov
pushf
sub
aam
jge
adc
or
xor
sub
sti
xor
pushf
pop
iret
in
fwait
loop
mov
leave
outsb
test
xchg
jne
testb
mov
adc
scas
inc
call
push
sbb
popf
cmpsb
loop
mov
cltd
push
push
rcr
subl
mov
or
pop
imul
cmp
and
mov
fnsetpm(287
fldl2t
outsb
les
fldcw
dec
dec
push
jae
push
test
enter
jb
pop
lahf
lods
cmp
ret
mov
sbb
fmulp
out
mov
aas
outsl
mov
xchg
dec
imul
or
lret
movsl
pop
inc
jb
xchg
outsl
call
int
and
aam
test
inc
cmc
lea
mov
sub
aaa
popf
xchg
push
sub
int
push
movsl
jb
in
movsl
cmc
aas
xchg
nop
xchg
pop
pop
mov
xchg
sub
iret
cs
mov
aad
popa
sbb
daa
scas
sbb
lret
enter
push
sbb
mov
inc
iret
jl
in
aad
xlat
imulb
mov
imul
repz
inc
pop
cmp
inc
pop
xchg
out
popf
pop
call
adc
jne
mov
cmp
hlt
jecxz
pop
and
dec
adc
jmp
hlt
xchg
mov
inc
and
push
out
xchg
sub
and
loop
push
stos
test
sub
fnstsw
mov
shrl
dec
fildl
jl
xchg
shrl
dec
idivb
jae
push
je
cli
and
or
xor
push
nop
lcall
xor
stc
add
and
push
out
pushf
outsb
push
inc
mov
jmp
roll
jno
push
sub
popa
jl
out
movsb
enter
lret
lds
in
cmp
pop
sub
or
mov
popa
pop
cs
gs
add
cmp
xchg
adc
shrl
std
clc
push
dec
arpl
dec
dec
mov
jge
roll
pop
dec
andl
xchg
push
js
paddd
cwtl
sbb
ficoms
mov
jbe
xor
in
and
imul
lahf
lret
or
shll
shll
repnz
xor
push
add
ret
jae
ljmp
push
out
outsl
cmp
cwtl
out
pop
ja
hlt
insb
mov
js
inc
jge
jl
adcl
xor
movsb
hlt
movsl
jae
loop
push
aam
push
pusha
daa
gs
and
sub
dec
add
out
mov
dec
aad
adc
rcrb
aad
out
or
jnp
mov
int
push
aam
sbb
push
sub
sbb
sub
pop
imul
jne
mov
pop
push
rorl
mov
inc
ret
jge
setne
mov
xlat
inc
push
fisubs
cmpsl
fmul
mov
mov
cmp
hlt
pop
xchg
aaa
xchg
repnz
insb
test
pop
cmp
movsb
incl
jl
sub
inc
mov
mov
lahf
push
loope
mov
push
mov
xor
and
aaa
xor
mov
mov
std
test
mov
test
or
xchg
mov
repz
aam
xlat
adc
pop
sbb
jecxz
lahf
mov
hlt
ss
add
out
xchg
sub
or
mov
fimuls
fsubr
std
jp
andl
decb
add
dec
push
sub
xchg
lret
mov
xor
cmp
dec
fdivl
in
cmp
ret
notl
xorb
daa
mov
jle
push
cli
sysenter
mov
int3
jno
mov
sbb
test
jl
mov
pop
inc
fisubrl
sbb
dec
mov
cmpsl
sub
add
dec
jg
dec
dec
xor
cmp
js
gs
xlat
mov
mov
xchg
aad
mov
push
aaa
mov
leave
or
dec
jne
cs
cmp
pop
std
mov
dec
mov
clc
xor
dec
stc
jg
outsb
data16
xlat
addl
ss
call
jl
loopne
cmp
leave
aam
push
pusha
outsb
ret
jb
cmp
cltd
add
sbb
mov
mov
and
mov
movsb
adc
dec
xorl
jecxz
ret
push
xchg
lea
cwtl
add
inc
out
push
aam
push
fbld
pop
xorb
pop
xor
and
push
inc
arpl
cmp
fisubrs
mov
xor
xor
sbb
aad
aad
mov
and
and
jo
sbb
iret
or
mov
out
xchg
into
pop
incl
in
movsl
ss
sub
add
loop
xchg
xchg
ss
lods
push
push
sub
sub
arpl
jg
jo
inc
sub
in
rcrl
ja
jmp
mov
mov
inc
fnsetpm(287
pop
mov
dec
xchg
sbb
push
and
cmp
push
mov
push
lret
addr16
into
fstps
dec
inc
sbb
popa
icebp
mov
fdivl
stos
repz
mov
or
les
lods
popf
mov
and
mov
xor
inc
and
lea
std
push
jno
mov
mov
sbb
loopne
cmpsl
inc
enter
outsb
cltd
dec
mov
punpckldq
dec
loopne
cld
mov
call
lret
mov
sub
in
dec
mov
repnz
and
shrl
loopne
sbb
in
std
jno
imul
out
int
mov
or
dec
mov
pop
das
fists
fildll
std
mov
and
mov
call
mov
mov
js
rol
into
pusha
push
mov
out
and
cmc
push
in
pop
lret
ret
dec
pusha
mov
xchg
inc
test
test
xor
adc
push
shl
enter
icebp
enter
shlb
sub
pop
shll
loope
outsl
and
sbb
pop
lret
int3
cli
fists
jecxz
lods
add
xchg
lret
cwtl
call
or
cli
push
lret
mov
popl
outsl
push
pop
lgs
test
xorl
out
js
xchg
loopne
loop
sbb
cld
mov
xchg
je
pop
push
xor
movsl
jne
jns
scas
fldenv
cmp
pop
mov
cmp
and
stc
mov
lds
cmpsb
insl
ja
lods
jp
sub
jne
dec
dec
fldt
sarb
in
ret
ffree
lock
movsb
xchg
jg
jns
fisttpl
filds
sar
push
mov
mov
push
and
dec
push
testb
mov
fsubrl
and
add
cmpsl
dec
pop
std
iret
push
jae
notb
push
cwtl
push
in
leave
test
aam
repz
or
lahf
out
pop
in
or
ret
cmc
stos
jp
or
sahf
negl
sbb
or
adc
loop
push
lea
ficoms
lods
mov
mov
adc
lea
aad
jno
pop
lds
and
dec
jbe
cmp
in
cmp
inc
insl
gs
dec
jb
int
pop
or
sbb
pushf
mov
cld
in
inc
lods
or
push
es
clc
inc
jne
mov
mov
idivl
fcmovnu
rcr
fnstcw
fldl
push
ss
addb
imul
aaa
sbb
or
cwtl
arpl
push
jge
and
adc
push
push
pusha
or
sub
inc
fldenv
dec
icebp
outsb
mov
pop
js
stos
pop
xor
jo
lds
inc
push
cwtl
mov
popa
lea
scas
outsb
fwait
sub
push
sbbl
shlb
ret
xlat
sti
inc
outsb
mov
insl
inc
dec
hlt
jb
adc
mov
sbb
push
pop
xchg
neg
mov
mov
js
fisubl
mov
subb
arpl
test
mov
outsl
jb
mov
sti
push
nop
lret
inc
mov
inc
test
and
xchg
inc
fnstsw
xchg
jb
jg
push
jb
clc
mov
sbb
sub
movsl
sub
out
cmp
notl
lret
xchg
clc
cld
out
cmp
out
sbbb
outsl
pop
mov
cwtl
mov
mov
rclb
mov
in
inc
rcl
pop
data16
es
ret
sbbb
test
bound
inc
push
shl
cltd
out
or
jecxz
shl
inc
shlb
push
stc
jge
mov
xor
nop
aad
test
in
add
or
in
lahf
sub
xorb
mov
jmp
mov
filds
cli
cmp
add
js
pop
in
jp
in
adc
stc
rcl
xor
mov
xlat
add
arpl
jecxz
int3
adc
imulb
mov
push
add
push
or
sub
outsl
or
adc
pop
cmp
cmpsb
mov
mov
stc
and
mov
cmp
int3
int
and
fstl
in
pushf
cmp
mov
mov
movsb
add
imul
dec
daa
lret
rcl
shlb
xchg
and
fisttpl
mov
cmp
ljmp
add
loope
lcall
push
stos
push
fisubrs
mov
push
mov
data16
movsb
repnz
repz
xchg
insl
sbbb
inc
mov
add
jae
xorb
push
bound
add
leave
sbb
test
lock
sub
mov
and
popa
repz
ficomps
add
sbb
and
xchg
lret
xchg
and
jl
in
arpl
mov
shl
sub
je
push
das
enter
pop
imulb
push
icebp
push
ret
xor
jns
push
push
push
lods
pop
mov
popa
out
stos
adc
ret
arpl
inc
xchg
inc
jno
jo
mov
adc
or
or
and
repnz
cmp
stos
adc
add
jb
mov
ret
cs
xor
sti
ds
lods
ljmp
xchg
loop
inc
jae
ret
shlb
inc
test
sahf
addr16
lods
lds
int
xchg
js
adc
fisttps
loopne
cmpsb
push
pop
js
ja
lds
pop
adc
mov
push
inc
outsl
xchg
lods
push
loope
fisttps
cmc
xor
fidivl
jge
xlat
lcall
ret
sub
cld
in
int
xchg
data16
es
lock
sar
xchg
sbb
std
xor
mov
inc
sub
roll
xchg
fistps
stc
mov
mov
jle
in
dec
xor
jns
test
or
sbb
push
in
sbb
mov
or
cmp
test
leave
dec
jae
dec
lods
sahf
inc
popa
sbb
sahf
xor
lret
into
cmp
pop
adc
fistpl
mov
lea
mov
mov
mov
out
xchg
xor
xchg
pop
pop
jnp
add
xchg
mov
test
loop
aaa
je
rcr
test
test
das
xlat
stos
pop
jns
adc
xor
xor
push
lods
js
aam
clc
nop
xor
xor
mov
cld
cmpsb
adc
sti
adc
loope
xlat
and
push
fwait
and
imul
ljmp
aad
rorl
pushf
lcall
inc
orb
sub
push
test
pop
sahf
aaa
or
push
mov
push
pop
into
xor
inc
mov
sahf
jno
lds
fsubs
sbb
cmp
out
sar
outsb
imul
mov
jo
out
jb
stos
bound
imul
andb
xchg
xlat
call
andl
insl
adc
out
dec
rcrl
add
sub
out
repz
inc
push
decb
dec
mov
adc
sarb
add
je
stos
mov
jp
mov
adc
add
lock
or
clts
push
ds
sahf
ja
and
cmc
out
shll
rep
or
sub
jnp,pt
add
mov
xchg
jae
push
and
ret
xor
scas
or
mov
stc
inc
jnp
mov
sbb
leave
mov
inc
aas
cmc
push
xchg
dec
lds
adc
add
insl
inc
dec
mov
imul
mov
xorb
or
mov
xchg
mov
adc
loop
and
mov
arpl
or
or
lea
clc
daa
mul
sub
shll
push
out
inc
jnp
mov
xor
js
jno
lock
shr
xor
repz
pop
cmp
fcoms
cmp
sbb
mov
mov
out
leave
inc
mov
daa
pop
ss
pop
lds
pop
icebp
in
cmp
ret
movsb
add
loop
cwtl
lret
data16
shrb
test
mul
popf
movsb
incl
push
adc
xchg
dec
aaa
fs
fcomip
mov
sub
pop
xor
adc
call
jg
fisttps
addr16
lea
in
mov
int3
lahf
insl
pushw
cs
test
push
inc
icebp
pop
outsb
sbb
jmp
jne
loopne
cmp
add
dec
jno
addr16
cwtl
jae
ret
xor
push
push
pop
cli
aam
xor
and
sahf
inc
movsb
shlb
inc
popa
add
ss
adc
lock
enter
popf
and
imul
xchg
cmp
xlat
movsb
popf
mov
cmp
cli
out
outsb
jge
add
mov
icebp
sbb
sbb
call
inc
cmp
divb
jae
cmpsb
popf
es
loopne
mov
xchg
xlat
out
push
sahf
and
hlt
mov
fwait
xchg
fnstsw
lcall
jp
into
dec
jl
out
jmp
aas
xor
dec
fldlg2
mov
subb
mov
sbb
mov
xchg
sub
insl
ret
sahf
bound
icebp
sub
jl
jg
fdivrl
lds
push
cmc
push
pushl
nop
ja
jmp
xchg
and
leave
cmp
packsswb
fmull
cmc
inc
loopne
bound
aaa
in
jle
pusha
jbe
xchg
sbbl
outsl
pop
lret
pop
mov
dec
cltd
movsb
cmp
lret
cmpsb
cltd
in
inc
inc
fmuls
jl
jns
ret
mov
bnd
scas
js
mov
push
sub
out
aaa
lds
shl
mov
mov
xor
jecxz
mov
fdiv
dec
pop
add
lahf
sbb
ljmp
xor
cld
icebp
negl
hlt
jg
sahf
xlat
je
xchg
xor
ret
sti
fs
sbb
pop
bound
xchg
gs
xchg
dec
arpl
xor
inc
iret
xchg
iret
test
add
aaa
cltd
inc
arpl
push
mov
sarl
cmp
add
add
add
pop
dec
mov
push
fstps
or
sub
aad
dec
xlat
and
mov
je
stc
in
mov
mov
and
xor
mov
es
std
push
aas
test
dec
push
xor
popa
cli
pop
stos
mov
push
adc
test
dec
fistl
adc
ret
jmp
jg
aam
sbb
mov
aam
cli
xchg
jg
pop
adc
popa
pusha
subb
jge
repz
fnsave
aad
lock
add
cs
ds
stos
pop
or
lret
shrb
and
lret
popf
inc
mov
jbe
repz
adc
je
push
lret
mov
bnd
ljmp
ficomps
es
cld
lcall
mov
push
cmp
scas
repnz
or
mov
push
ficompl
fxch
clc
mov
pop
fbld
lods
nop
adc
jnp
xchg
sbb
out
int
lret
and
jb
loope
popa
ds
stc
push
repnz
jb
push
xchg
sub
std
mov
test
rol
jp
shll
enter
jo
xchg
popa
jp
lahf
pop
sbb
or
into
and
dec
adcl
inc
aaa
test
and
sbb
pop
sub
jbe
js
out
sub
jp
sbb
pop
inc
test
lcall
or
sbb
sahf
shll
dec
aaa
scas
pop
pop
leave
mov
or
scas
mov
cld
lahf
stos
cmp
inc
sub
fs
popa
xor
ds
ficompl
enter
hlt
pusha
push
cmp
xor
cmp
jmp
jns
test
std
and
dec
adc
mov
fisubs
add
mov
andb
push
xchg
mov
push
jg
repz
xchg
adc
stos
dec
repz
lods
and
scas
sbb
xor
hlt
inc
sub
mov
sbb
loopne
dec
je
out
mov
stc
inc
mov
mov
negl
inc
jno
adc
mov
xchg
enter
push
adc
mov
andl
mov
out
mov
sti
adc
dec
pusha
push
jne
mov
mov
fcmovnu
mov
int3
dec
dec
sti
pop
in
repnz
jnp
sub
loopne
insl
cmc
shll
nop
popf
pop
inc
cmp
les
lcall
pop
out
xor
lret
push
test
mov
in
sbb
call
test
and
cmp
add
xor
add
loope
mov
inc
rcrl
scas
push
in
push
sub
sub
movsb
rclb
bound
orl
mov
and
lcall
push
negb
insb
je
mov
cmp
imull
test
int
test
pop
cmpsb
popa
sti
pop
fwait
outsl
xor
xor
mov
mov
nopl
aad
or
jmp
dec
int3
jmp
add
dec
adc
xlat
lods
mov
xchg
cmpsb
pop
mov
cmp
leave
add
mov
push
pop
and
dec
test
jmp
pusha
mov
insb
mov
js
push
addr16
movsb
in
repnz
mov
cli
push
outsb
mov
and
stos
lret
ret
dec
cwtl
das
int3
cltd
sub
jge
lret
xchg
in
add
push
dec
or
mov
in
int
xor
fnstsw
add
mov
sti
cmc
xchg
gs
repz
xchg
aas
out
lcall
push
push
push
mov
int
xchg
aad
fmulp
fadd
xchg
mov
cli
adc
adc
outsl
dec
jae
adc
popf
outsb
xor
mov
cmc
das
aas
or
jecxz
xchg
leave
mov
movsb
sbb
mov
inc
inc
sahf
mov
lock
fsub
lahf
fsubs
pop
dec
sub
loop
fucom
fsubrp
cld
mov
sbb
push
fimuls
sbb
push
jb
test
std
mov
fwait
xor
jl
popa
sub
in
cwtl
stc
pop
jns
dec
and
push
mov
js
in
mov
cmpsb
pushf
mov
clc
jp
sub
xor
shlb
ret
insb
push
in
aad
daa
ljmp
mov
fistpl
sub
and
and
push
push
jnp
xchg
cltd
sbb
mov
in
leave
in
leave
repnz
inc
jg
xor
icebp
xor
or
out
push
rcrb
es
std
popa
pop
test
or
data16
fstpl
push
stos
es
fsubl
popa
pop
push
or
insl
jg
aad
jo
es
sti
lret
xlat
pusha
stc
pop
loope
jecxz
repnz
dec
xchg
or
int3
add
test
jb
je
loopne
lahf
addr16
sub
arpl
ljmp
out
sub
mov
jg
ss
lods
repnz
jecxz
fldenv
stc
xor
inc
jo
sbb
jp
adc
in
mov
inc
fists
aaa
cmp
iret
clc
shrb
xor
les
xorl
inc
repnz
aas
mov
xchg
imul
ret
xchg
jae
movsl
cmp
test
jb
ja
js
mov
xchg
push
addr16
in
int
mov
jb
or
lret
adc
ja
mov
sbb
jmp
test
jo
aad
pop
and
imul
add
jae
push
mov
lock
adc
or
jg
clc
pusha
sbb
movsb
stc
mov
in
jl
in
mul
repz
adc
fnop
or
shr
mov
popa
cli
add
arpl
mov
add
jl
sub
xchg
mov
sbb
testb
cmpsb
shr
xlat
pop
mov
xchg
push
xor
out
mov
clc
and
mov
mov
notb
inc
xchg
dec
repnz
xchg
loope
push
add
sahf
inc
mov
push
add
popa
popf
inc
sbb
or
sbb
jge
test
dec
inc
sti
sub
push
inc
sub
es
mov
mov
pop
imul
xor
into
fdivs
clc
xor
push
out
or
addr16
int
xchg
add
cmp
outsb
mov
mov
xor
xor
lret
xchg
repnz
sub
and
fwait
loope
jne
mov
push
and
and
sub
outsl
inc
scas
test
sbb
in
sbb
fadds
mov
outsl
cwtl
es
dec
pop
scas
test
cmpsb
cmp
sti
mov
xchg
mov
add
out
sub
dec
icebp
cmp
xor
pop
out
cld
cmp
push
and
jo
adc
add
and
fidivs
pop
inc
rcrb
andw
push
insb
leave
loope
jns
adc
or
push
mov
mov
jle
lret
lret
lret
dec
outsb
call
xchg
pop
xchg
mov
pop
xor
xor
push
mov
xor
movl
inc
repnz
push
fs
cltd
mov
popa
je
repz
scas
je
push
xor
test
pusha
fdivs
or
xor
pop
sbb
push
stos
repz
je
test
mov
out
xlat
adc
mov
mov
out
or
xchg
mov
rcll
jl
daa
and
cs
js
adc
sbb
fisubs
jae
push
iret
mov
stos
lds
sub
xchg
je
inc
in
mov
cmc
mov
les
cmpsl
mov
cmp
sbb
out
roll
adc
test
movsb
call
addr16
mov
insb
xchg
or
mov
pop
js
test
in
repz
adc
iret
je
xor
cmp
jno
jecxz
jecxz
inc
inc
fcomi
push
mov
pop
int
sub
and
mov
test
into
ret
xchg
imul
enter
aam
mov
shll
das
pop
cmp
imul
jmp
ds
std
imul
clc
lock
je
cli
xor
lods
rolb
mov
lea
ja
push
nop
push
mov
in
popf
sarl
jae
cmc
inc
cmp
xchg
xor
es
xchg
mov
mov
mov
sahf
sti
cmp
repz
xchg
imul
fistps
fcmovnb
sbb
cmp
je
lahf
mov
dec
mov
punpckhbw
mov
cmp
pushf
lods
jmp
in
insl
outsl
fiadds
cmp
arpl
mov
inc
add
or
hlt
inc
add
push
pushf
mov
mov
pop
push
insl
repnz
inc
mov
orl
adc
dec
jne
xor
fbld
lcall
orb
pop
je
lret
flds
pop
push
mov
ja
sub
fdivrs
outsl
sub
jnp
imul
lret
pushf
mov
imul
or
dec
test
sbb
inc
mov
repz
les
idiv
icebp
fstps
and
xor
jne
rcll
jnp
enter
dec
bound
pop
push
insl
push
adc
mov
push
inc
into
test
push
inc
dec
fisttpll
pop
xorb
xchg
xor
fidivrl
fxch
or
pop
inc
fsubs
sub
sbb
in
adc
mov
sub
push
mov
jl
sbb
clc
lcall
mov
out
sub
mov
leave
add
jecxz
pusha
clc
push
mov
push
fsubs
push
cmovg
pop
jle
pop
into
imul
mov
mov
hlt
mov
dec
aas
and
xor
xor
enter
dec
stc
and
sti
dec
insl
test
add
divl
scas
inc
sti
mov
pop
lahf
in
data16
lret
push
mov
repnz
adc
push
jmp
lahf
fildl
int
xor
insb
orl
mov
je
cmp
push
ss
mov
ja
or
mov
cmp
lahf
jno
cmp
push
popa
ja
movsl
push
jg
stos
inc
dec
aaa
movsl
cwtl
xor
jb
outsl
cli
movsb
enter
mov
xchg
stc
icebp
inc
push
push
sbb
mov
cli
in
sti
xchg
and
mov
inc
cmp
icebp
fnstenv
jl
fcomp
daa
out
repnz
cltd
ret
mov
xchg
mov
mov
ret
scas
imul
dec
fldl
adc
scas
sti
xchg
xor
mov
cli
mov
arpl
test
cmpsb
xor
or
adcl
sbb
mov
je
daa
sahf
ret
cmp
shrb
iret
pushf
mov
scas
mov
mov
adc
and
lahf
in
push
and
sub
xchg
jl
add
fildl
mov
mov
sbb
imul
ljmp
or
leave
lea
pusha
enter
xchg
jno
pop
pop
adcb
popa
push
out
xchg
xor
cmp
icebp
loope
jle
stos
xlat
daa
ljmp
movsb
jo
cmp
add
frstor
lret
sahf
in
stc
add
lcall
inc
push
ljmp
inc
mov
test
ficompl
xchg
jp
adc
outsl
jnp
jle
pop
mov
lret
fcmovne
mov
sbb
add
jge
in
in
lods
and
sbb
push
in
pop
add
ds
insl
shlb
divl
xor
rolb
lahf
xor
ljmp
xor
popf
and
cmp
bnd
push
mov
sbb
and
ja
lods
cld
xor
inc
adc
xor
xchg
aaa
sbb
cmp
not
stc
lock
cmp
xchg
or
pop
mov
sub
lds
cmpl
ds
ds
fimull
dec
mov
cli
rcr
call
jns
push
push
repnz
mov
xor
xchg
mov
leave
xor
cld
adc
lods
shr
xor
movsl
or
cmp
xor
mov
gs
fldcw
pusha
xchg
push
es
aas
adc
mov
stc
sbb
ja
es
divl
and
mov
testl
mov
jns
lods
aad
add
xor
adc
aaa
cmp
jne
cmp
lret
cmpsb
mov
in
mov
xor
test
add
mov
pusha
xor
xchg
into
sub
push
lea
or
pop
insb
scas
cmp
mov
jo
xor
jns
sbb
pop
cmp
sahf
sub
sbb
push
cltd
xchg
xor
sti
mov
daa
es
stc
rorl
xchg
xor
idivb
jbe
cmp
jg
loope
jno
mov
push
or
sbbl
fwait
pop
sbb
pop
je
test
aaa
push
test
push
cmp
push
mov
cmp
cmp
jbe
mov
push
dec
mov
icebp
adc
cmp
jo
pop
ja
nop
out
iret
fwait
mov
leave
call
dec
mov
sbb
cmp
inc
lret
dec
mov
imul
push
lods
mov
int3
add
out
pop
mov
adc
and
test
je
push
push
pop
push
or
out
les
jae
push
add
mov
or
jp
sub
cmp
mov
or
lret
sbb
jle
insl
idivb
pop
out
xor
add
xor
cmc
adc
sub
inc
push
mov
mov
sahf
mov
sbb
insb
pop
fdivp
or
jb
and
addb
pop
push
imul
pop
ds
je
ficompl
jo
mov
sahf
orb
scas
outsl
mov
rcrb
aad
jg
aam
mov
jg
insl
jge
stc
incl
adc
lods
sub
out
or
shl
out
mov
in
fldenv
jg
dec
mov
push
hlt
mov
ror
test
add
mov
bound
or
push
jp
das
xchg
cmc
fcoml
dec
xor
mov
data16
push
push
xchg
das
cmpsb
push
and
out
movsl
fdivr
in
into
aad
hlt
dec
std
push
jnp
mov
jle
pushf
pop
push
add
push
pop
pop
add
scas
mov
ljmp
jge
lret
xchg
stos
dec
push
gs
out
aas
mov
mov
vpshaw
xor
cmp
test
xlat
subb
shl
push
lahf
cltd
scas
and
or
aas
or
notl
add
dec
sbb
sub
jp
pusha
adc
dec
test
out
leave
arpl
addl
pop
add
sub
fistps
sti
mov
bound
adc
pop
push
xchg
inc
insb
das
dec
sbb
sar
mov
mov
enter
mov
sahf
sahf
scas
jg
push
aam
mov
add
mov
inc
mov
sahf
pusha
pop
ljmp
mov
cmp
xchg
cmc
in
sub
in
xchg
pop
dec
sbb
push
xchg
jecxz
or
or
mov
insb
scas
push
iret
and
or
xchg
fimull
inc
pop
push
sahf
or
dec
aas
push
test
pop
pop
out
xchg
cmc
adc
inc
and
add
adcl
and
lods
rcrb
pop
mov
jmp
sti
scas
ja
mov
gs
pop
clc
ds
xchg
fcomps
mov
xor
dec
add
negb
push
adc
adc
int3
scas
addr16
clc
xchg
xchg
stos
out
ret
in
lret
cmp
ja
push
mov
cmp
test
sub
xchg
int3
jecxz
mov
inc
aas
imul
jg
adc
ret
mov
enter
add
imul
push
pop
jecxz
addr16
shrl
pop
add
ljmp
mov
cld
cmc
mov
into
dec
sbb
or
pop
push
rolb
inc
mov
push
iret
adc
js
jo,pn
dec
cmpsb
in
pop
xor
sbb
and
xchg
dec
sbb
push
rcrl
jns
sbb
lock
lods
xor
test
cmpsl
insl
mov
jne
loopne
mov
cmc
sti
inc
mov
sbb
and
sarl
xor
and
push
addb
push
mov
outsl
mov
jne
pushf
sub
sbb
push
sbbl
insl
cmp
inc
repz
and
pop
ljmp
inc
cmp
xor
inc
pop
pusha
outsl
push
sbb
sbb
push
pop
pop
cmp
loopne
pop
idivl
jno
or
jno
mov
mov
fwait
or
aam
lock
fdivrp
lcall
and
mov
nop
lahf
shlb
lret
inc
inc
movsl
xorb
dec
pushf
xor
andl
cmp
outsb
xchg
cmp
xor
daa
mov
xchg
iret
shrl
pushf
jno
mov
cmpsl
mov
lds
movsb
cmp
mov
aaa
inc
push
stos
mov
shr
xchg
jmp
push
mov
int3
repz
xchg
xchg
mov
enter
jae
js
sahf
mov
rolb
and
call
xor
mov
xchg
sbb
stc
loop
lds
dec
out
push
ja
mov
lods
xchg
mov
loop
loopne
jmp
sub
cltd
add
fidivl
or
and
std
cltd
cld
xchg
hlt
dec
push
adc
xlat
daa
pop
jae
cmpsl
mov
push
xchg
int
movsb
adc
push
cmp
add
xchg
jecxz
pop
cli
jne
xchg
mov
ret
cmp
cmpsb
mov
fsub
xlat
roll
cmp
sbb
and
lock
cli
xchg
pop
mov
jg
jg
sbb
mov
adc
sbb
or
mov
pop
loope
push
and
cmp
and
inc
or
fimuls
cmp
aad
test
xor
mov
push
sarl
lcall
sbbb
ror
icebp
xor
gs
mov
nop
xchg
movsl
push
lahf
pop
daa
or
pop
push
dec
adc
ljmp
or
insl
and
lods
cmp
dec
aam
inc
inc
lds
fiaddl
flds
jecxz
std
insl
fisubs
ss
aas
pop
jnp
jns
gs
xorl
add
and
call
fidivrl
inc
mov
and
loopne
cmp
imulb
dec
aaa
pop
mov
jle
sahf
dec
mov
dec
dec
sahf
xor
mov
mov
cmp
stos
push
inc
outsl
inc
das
out
clc
mov
dec
les
push
inc
stos
data16
cmp
sbb
rolb
leave
jae
decb
rol
xchg
fdivrs
in
cmp
mov
adcl
fnsave
mov
dec
push
jmp
sub
mov
out
ds
cmp
mov
stos
dec
xor
cmp
jns
loope
push
or
mov
adcb
xchg
push
dec
adc
pop
les
mov
sbb
cmp
pop
je
or
adc
dec
mov
fwait
mov
int3
loopne
inc
imull
cltd
subb
and
lods
mov
dec
fisubl
push
loope
sub
inc
imul
sbb
bound
cmpsl
mov
add
pop
jg
mov
push
rcrl
div
fwait
and
aaa
int3
xchg
aam
cld
into
pop
mov
inc
arpl
orl
mov
rcr
stc
outsb
fistps
rorl
mov
and
xchg
mov
cmpsl
repz
jl
popf
jno
test
das
sub
cld
pop
mov
xchg
ret
sbbb
mov
push
addb
xor
push
xchg
cmpb
daa
rcll
daa
add
and
cmp
test
or
mov
xchg
sub
cmp
into
stos
xor
shr
and
mov
push
add
jae
jg
add
adc
decl
xchg
jns
add
loopne
inc
sub
mov
add
xor
adc
cmp
orb
ret
mov
insl
pop
cmp
xor
addb
jo
jmp
adc
fisttpl
inc
test
jp
insb
nop
cs
mov
jmp
mov
insb
and
lret
adc
test
cmp
mov
xchg
jnp
sub
lret
mov
in
sbb
in
cwtl
sti
dec
cmc
mov
xlat
pop
cld
dec
lods
outsl
bound
add
lahf
repz
and
arpl
lret
cld
mov
mov
lret
stos
cs
xor
push
mov
inc
xchg
pop
fistps
outsb
call
mov
jg
dec
mov
or
jae
imul
movsb
pop
mov
pushf
in
pusha
and
mov
scas
adc
or
mov
mov
rcr
push
add
cmp
mov
cmp
pop
xor
test
dec
dec
movsb
pop
outsb
testb
cmp
mov
dec
adcb
leave
jp
sti
jg
scas
cs
fldt
cltd
xor
aaa
cmc
je
fcomps
roll
arpl
and
in
lds
fwait
pop
mov
mov
pop
inc
push
divl
int
add
add
inc
aas
cmp
jns
and
lret
in
sbb
inc
sbb
vmwrite
aas
or
fs
xchg
xchg
jbe
aad
jnp
and
ss
mov
xchg
mov
push
or
or
movsl
movsl
data16
push
pop
imul
into
mov
sbb
psraw
test
mov
fcompl
xchg
xor
xchg
inc
fdiv
xchg
sub
popl
mov
mov
sbbb
cwtl
stos
les
ja
cmp
sub
loope
pushf
adc
pop
sbb
mov
mov
out
cmp
dec
sbb
cmp
call
or
xchg
cmp
ret
lcall
gs
out
aas
jo
cmp
pop
clc
pop
and
jae
mov
xchg
mov
fwait
jb
sub
jno
mov
pop
pop
cmpsb
jmp
lret
xchg
sbb
gs
and
sbb
jbe
sbb
mov
xchg
adc
sarl
cmp
push
cltd
movsl
mov
out
scas
subb
ret
mov
jl
enter
and
insl
int
out
repz
mov
sub
cltd
mov
call
or
adc
dec
or
dec
dec
pop
xor
xor
xchg
mov
jg
test
jbe
add
hlt
mov
cmp
xor
adc
jecxz
pop
popf
inc
push
jnp
inc
jl
subl
imulb
aaa
add
ss
sub
pop
inc
dec
add
ljmp
ss
pop
push
push
stos
mov
cltd
mov
add
cmp
xlat
iret
dec
mov
fldl
pop
rolb
sub
sarl
sbb
mov
add
loope
fcompl
fistps
and
xchg
inc
je
subb
ds
popa
test
add
xor
mov
aaa
dec
jnp
cmp
and
outsl
add
outsb
test
fimuls
xor
int
cs
mov
xchg
cwtl
lret
out
add
or
mov
mov
add
test
xchg
and
xchg
inc
dec
shl
inc
or
jle
xchg
jp
test
jmp
ljmp
push
into
ja
ja
add
add
call
test
cltd
loopne
ds
popa
xor
es
sbb
cs
sub
push
call
testb
push
fidivrl
sbb
dec
es
xor
fdivrp
repz
mov
inc
fisubrl
aad
sbb
loopne
negl
ljmp
fs
pop
cli
mov
adc
push
pusha
or
loop
dec
iret
aam
xorl
mov
mov
mov
ret
call
jecxz
lcall
mov
shlb
dec
aas
sbb
cmp
mov
cmpsl
lods
push
adc
sbb
dec
mov
sbb
xchg
or
filds
mov
sarl
lret
xor
hlt
enter
and
addl
sbb
push
mov
daa
push
jmp
sbb
push
mov
lret
mov
out
shlb
push
add
inc
out
mov
pop
fisubrs
jno
sbb
pop
cs
and
andl
jbe
repnz
pop
aas
nop
std
aam
nop
push
add
add
push
sbb
sbb
push
int
popl
sahf
nop
inc
pushf
fisubs
fdivs
xorl
insl
mov
cmp
stos
mov
data16
inc
lahf
icebp
popa
pop
mov
push
inc
pop
sbb
ficoml
pop
inc
inc
gs
push
adc
push
nop
scas
xchg
fisttpl
pushf
sub
das
pop
pop
and
lahf
mov
mov
nopl
mov
aas
dec
mov
stc
popaw
out
mov
dec
insb
and
lret
iret
movsl
xor
sub
and
fiadds
rcll
jl
bound
xchg
cmp
outsl
lds
xchg
jl
lods
jp,pt
popf
ss
inc
mov
push
addr16
cmp
js
add
mov
add
add
loopne
shlb
cmp
out
cltd
lcall
cld
mov
mov
xchg
add
mov
push
or
sub
inc
jge
sbb
mov
mov
cmp
lahf
test
call
add
lret
add
jp
dec
jl
into
mov
push
sub
adc
fsub
cmp
cmc
mov
push
out
pusha
inc
jle
cmc
sub
jl
aam
call
addl
test
mov
add
fcompl
and
mov
repnz
mov
in
cmp
mov
sbb
mov
sub
lock
cmpsb
push
push
pop
mov
movsb
and
sbb
fs
sub
and
jno
les
fadds
popa
cwtl
jmp
mov
clc
and
dec
xor
add
sbb
popf
jge
ret
lods
pop
jecxz
sub
pop
dec
dec
sbbb
pop
push
and
push
xchg
jp,pt
outsl
jb
jmp
je
mov
mov
int
mov
inc
jl
pusha
jp
or
and
scas
out
mov
dec
andl
sbb
aaa
jmp
push
out
movsb
lea
add
pop
out
int
xchg
cmc
sub
pop
rcrl
fdivrs
xchg
sub
pop
push
mov
fdivrs
lods
bound
movsl
cmp
popa
add
adc
mov
pop
and
frstor
push
add
xor
push
fbld
jae
bound
out
mov
and
jmp
in
inc
xchg
xlat
xchg
mov
dec
xchg
push
orl
fnstenv
outsl
and
das
popa
add
lods
imul
es
mov
int3
aas
lods
push
jno
jne
jp
ljmp
mov
xchg
shl
lea
push
xor
out
xor
lds
mov
jnp
rorb
and
pop
in
shr
sbbb
popf
and
adc
iret
pop
movsl
je
adc
jmp
repnz
stc
push
into
add
cld
fimull
push
js
mov
lods
sbb
or
xor
adc
mov
imul
pop
sub
lods
dec
pop
and
loope
les
sbb
sti
push
int
lahf
mov
nop
xchg
in
enter
loope
dec
and
scas
cld
testb
jae
push
mov
sbb
jne
xchg
push
dec
hlt
js
sbb
punpckldq
push
or
cld
inc
jbe
push
push
sbb
adc
lcall
rclb
jg,pt
adc
repnz
mov
daa
out
push
bound
mov
lret
cmp
imul
sbb
sub
inc
jo
add
test
les
pop
insl
inc
jb
adc
jge
cmpb
cmp
icebp
ret
sti
test
mov
inc
out
ds
cmpl
mov
dec
push
mov
ss
lret
aaa
push
ret
jae
out
stc
inc
xchg
shrb
aaa
nop
es
xchg
aas
bound
nop
mov
sarl
clc
jno
jae
movsb
mov
sbb
loop
rorl
cmp
push
sub
pop
loop
sti
movsl
or
iret
jo
rorl
and
dec
xchg
and
lods
je
mov
xchg
sbb
and
loope
sbb
pusha
pusha
mov
jnp
pusha
outsl
loop,pn
pushf
xorb
mov
loope
pop
test
xadd
scas
pop
sar
sahf
jmp
mov
icebp
lcall
sahf
dec
jns
or
inc
inc
shl
gs
push
sub
or
mov
jb
jnp
in
add
mov
insb
std
jg,pt
inc
out
popa
ret
repz
outsb
cmp
fimull
lock
lret
jnp
adc
push
out
mov
dec
and
je
call
cwtl
jecxz
movsl
sar
pop
push
and
xchg
lret
dec
movsb
pop
jae
inc
mov
inc
mov
push
repz
push
cmp
std
and
fstp
aas
dec
cli
sub
sub
mov
pop
shll
loope
mov
stc
imul
dec
das
jmp
pop
scas
mov
popf
pop
push
adc
int3
outsb
jmp
xchg
and
mov
insb
jl
jb
subl
arpl
fadd
pop
andb
mov
sti
lret
sbb
test
push
int
aad
loopne
add
ret
scas
add
std
or
xchg
iret
xor
call
flds
cmp
ss
movsb
lcall
arpl
jbe
fwait
shll
enter
mov
pop
rolb
cmpsb
mov
and
jns
lahf
test
mov
test
mov
mov
pop
lods
sub
outsl
jne
in
add
leave
or
jp
enter
lods
sbb
jne
inc
lea
pop
daa
gs
pop
cmp
repz
leave
lret
enter
lcall
test
inc
call
jae
mov
imul
cmp
ja
aas
push
lret
cmp
jmp
pop
push
in
insl
movsb
sub
in
sbb
je
lcall
movsb
imul
call
fdivrl
xor
rcrl
fistl
cmp
xchg
fwait
dec
xchg
jo
mov
cmp
sbb
ss
in
loope
loopne
xor
sbb
adc
test
leave
xchg
xchg
pop
pop
aas
mov
test
repnz
loope
mov
bound
mov
test
popf
cld
jbe
push
stos
sbb
xchg
sub
es
nop
pminub
outsl
and
push
sbb
ljmp
or
popa
jno
fldenv
shrl
inc
std
pop
stos
subl
xor
sub
add
pop
push
push
cwtl
mov
xor
stos
mov
lret
insb
lret
mov
mov
cmp
inc
push
xorb
out
xchg
pop
popa
pop
js
les
add
mov
testl
ja
aam
dec
lea
into
dec
cmp
ja
sub
fdivs
inc
cmp
dec
fstps
mov
xchg
dec
and
rcrb
add
or
std
fistps
and
xor
test
pop
ja
in
xchg
dec
sahf
cwtl
pop
adc
shl
xlat
sti
mov
add
xlat
dec
dec
fisubl
sub
cmc
jle
jne
popa
adc
mov
or
xchg
test
sbb
cmpsl
push
into
sub
add
pop
dec
adc
xlat
cmp
lret
xchg
out
out
icebp
stc
jmp
in
inc
mov
shl
push
jmp
std
sub
sbb
das
outsl
ja
mov
cmp
jb
push
loope
lahf
movsl
push
jp
xchg
inc
insb
mov
test
insb
fsubp
cs
out
pushl
jle
loop
mov
jmp
repz
ds
sub
mov
jae
xor
xchg
fsubrp
movsl
pop
fnop
xchg
mov
mov
xchg
movl
sti
add
adc
movsl
pop
scas
push
imul
int3
sti
aas
stc
pop
sub
icebp
mov
fisubrs
jbe
ret
mov
xchg
sbb
cmpl
mov
jmp
or
xor
test
enter
jmp
mov
jle
and
xorl
in
cmp
xor
pop
cld
sarl
lcall
incl
push
call
test
in
push
jne
movsl
fidivl
or
xor
daa
or
hlt
out
out
clc
add
push
clc
movb
repnz
adc
mov
addb
lret
add
loopne
or
std
fstpl
movsl
push
pop
pop
inc
or
fwait
cmp
dec
add
push
inc
jl
mov
out
and
push
gs
cmpsl
mull
jo
sbb
nop
rolb
pop
stos
iret
ja
or
push
xchg
movsl
stos
mov
gs
inc
dec
jae
test
adcb
sub
xor
idivl
xor
push
xchg
push
es
repz
mov
adc
and
in
leave
ljmp
ds
jb
cltd
aaa
mov
or
hlt
ljmp
sbb
xchg
cmp
xchg
dec
cmc
test
js
bound
sub
xchg
xchg
nop
arpl
mov
pop
sbb
fdivrs
aad
ret
mov
mov
adc
mov
mov
jno
int
pop
mov
push
jp
mov
dec
or
dec
ja
stos
rolb
aas
mov
push
push
cmpl
ljmp
xor
in
outsl
aam
push
inc
aaa
inc
xor
addr16
popa
mov
sub
mov
add
andl
mov
inc
outsl
adc
cmp
or
pop
mov
out
outsl
es
aad
push
push
xchg
dec
cmp
jl
imul
mov
xchg
pop
cmc
adc
xchg
jl
lahf
or
stos
add
mov
pusha
and
arpl
mov
and
js
cmp
ror
dec
idiv
lods
cmp
cmp
imul
mov
jp
inc
pop
das
shrl
or
sbbb
cmp
mov
mov
mov
push
popa
mov
fbld
mov
push
lea
mov
test
ret
clc
aam
aam
dec
pushf
adc
mov
shr
nop
push
test
xlat
or
aam
pop
mov
fists
push
mov
push
xchg
lret
outsl
iret
sbb
in
popf
stos
jle
in
stos
adc
icebp
xchg
pop
sub
std
lods
or
adc
mov
adc
xchg
inc
insl
jp
sbbb
ds
push
sti
stos
andb
or
inc
bound
lock
lret
sahf
pop
lahf
fldenv
pop
inc
std
dec
sbbl
xor
sti
mov
imul
mov
ss
aad
jg
clts
sub
xchg
add
xchg
and
cmpsb
out
sub
jbe
xor
rol
mov
mov
fcmovu
push
jmp
les
out
dec
push
lret
push
stc
cmp
test
sub
in
mov
jge
or
adc
add
int3
or
jne
cltd
jb
dec
or
push
inc
insb
xchg
pop
or
decl
ja
push
cwtl
jmp
cmp
call
jmp
aaa
shlb
pop
add
dec
sub
cmpsl
add
xchg
mov
pop
pop
sbb
push
out
xor
mov
sti
out
push
scas
xor
rcrl
add
daa
xor
dec
pusha
mov
and
fs
pop
mov
adc
pushf
rcrl
repz
xchg
aaa
ljmp
jae
fimuls
hlt
sub
mov
int3
pop
pandn
push
dec
cltd
into
mov
xor
fwait
pop
out
jg
inc
fldl
shrd
adc
imul
out
push
mov
jle
mov
xor
outsl
decb
test
dec
aas
scas
sahf
xor
and
push
jb
mov
cmp
dec
mull
mov
mov
dec
nop
out
sub
pop
ret
sub
mov
cmpsl
outsb
stos
imul
xor
push
adc
jnp
int
mov
mov
lret
fstpt
adc
fnclex
inc
test
inc
call
jge
mov
aas
fs
pop
cmp
dec
cli
aaa
pop
or
mov
xchg
xor
jge
jmp
mov
sbb
xchg
xor
push
mov
or
or
and
dec
rorb
mov
mov
sub
xchg
popa
push
cmpsb
cmpsb
push
fmull
push
cmp
test
pop
outsl
lock
jbe
pop
lds
sub
sbb
int3
jl
jae
incl
and
ljmp
lret
xchg
repnz
ds
adc
add
test
popa
push
xchg
push
int3
push
add
dec
mov
lcall
and
hlt
out
cmp
sbb
iret
lcall
leave
test
std
mulb
sub
test
or
xchg
and
pusha
out
xchg
mov
xchg
cli
out
sti
ret
sub
test
fidivrs
dec
int3
mov
rcll
mov
in
test
pop
je
insl
sub
fimull
ds
pushf
xchg
xchg
mov
add
sub
jmp
rcrb
in
lea
cmp
inc
dec
nop
aad
mov
add
loope
daa
out
daa
mov
pop
aaa
inc
mov
loop
std
sub
movsl
cmpl
ret
cmc
push
fldl
mov
in
adc
inc
jmp
inc
mov
int3
pushf
es
imulb
add
xchg
insb
cmpsb
neg
push
lcall
push
test
mov
xlat
push
mov
xchg
aas
xchg
add
mov
subl
jl
in
add
add
mov
aad
lea
fdivp
dec
lret
aad
roll
mov
xorb
jp
mov
xchg
mov
pushf
dec
outsl
out
mov
cmpsl
out
imul
stc
loope
outsb
es
dec
push
stos
jmp
rcl
mov
jns
mov
fidivl
dec
repz
pop
mov
ja
push
outsl
jb
cmpsl
adcb
rol
aas
inc
out
xor
dec
mov
loopne
orb
and
test
push
xchg
ds
aad
and
repz
sahf
fisttps
xchg
jne
incb
mov
fisttpl
imul
cli
mov
jmp
jno
push
andb
fcomps
and
pop
stc
test
cli
pop
push
test
lods
push
mov
cs
subb
mov
mov
lods
sbb
sarb
popf
aad
in
pusha
ljmp
incb
xchg
repz
inc
cli
xchg
mov
cli
xor
les
push
or
pop
mov
into
push
std
xor
sub
jno
ljmp
jo
dec
rol
hlt
stos
in
insb
push
push
iret
push
insb
inc
repz
negb
test
test
mov
pop
xchg
movsl
in
repnz
ret
xor
lods
lds
ljmp
into
push
mov
xor
sub
jg
jnp
xchg
xchg
test
xor
mov
fimull
fnstcw
aaa
out
cmpsb
out
sbb
imul
sub
add
xor
lret
xchg
cmp
imul
std
getsec
cmp
dec
js
jecxz
adc
lcall
jle
pop
jo
push
add
push
push
dec
daa
sbb
pop
ss
jns
mov
aaa
mov
clc
fbld
xchg
pop
aaa
jb
sub
xchg
hlt
popa
sarl
addl
pop
lods
mov
ficoml
mov
lret
mov
cld
insb
add
add
push
es
out
adc
adc
roll
jl
repz
or
imul
cmc
fs
leave
jno
std
cld
lea
int3
jne
dec
pop
out
dec
push
bound
fwait
dec
sahf
loope
mov
in
cmp
repz
xchg
push
cmc
jno
mov
pop
mull
sbb
sub
push
scas
or
sti
mov
fisttpl
pushf
sahf
cmpsl
mov
call
cmpsb
pop
or
je
mov
inc
lds
push
sbb
shrb
cltd
adc
sti
dec
or
add
enter
enter
dec
xor
adc
stos
jno
pop
sub
adc
stos
xchg
cs
xorb
jl
push
inc
mov
pop
je
ret
int
aas
xchg
and
icebp
mov
jmp
and
cwtl
jle
ret
jo
ss
mov
and
mov
mov
inc
into
aas
mov
xor
jmp
popf
popf
enter
inc
sub
push
cmp
xor
shrl
push
das
data16
pop
fcomps
loope
xchg
rcrl
and
std
mov
iret
inc
das
cwtl
mov
mov
lea
out
push
xchg
mov
xchg
stos
cmp
cli
jns
roll
cltd
jae
test
neg
jg
dec
cs
lods
or
jge
add
mov
adc
leave
jb
sub
fildl
adc
cwtl
mov
add
pop
mov
or
xchg
imul
cwtl
inc
sub
es
inc
loopne
xchg
push
add
loop
out
mov
subb
or
mov
lret
int
mov
scas
pop
popa
out
dec
xor
aam
icebp
sbb
jecxz
test
hlt
mov
or
movb
sbb
stos
inc
in
lcall
test
cmc
add
cmpsb
mov
push
xchg
imul
jnp
adc
sbb
xor
lods
adc
xchg
daa
and
ret
xlat
dec
mov
into
stos
arpl
fiadds
sub
pop
data16
push
insb
arpl
pop
and
or
or
je
rorl
push
shr
inc
pop
imul
jl
pop
inc
aas
add
les
jo
hlt
inc
sub
inc
call
adc
xchg
lret
or
xchg
mov
das
popf
adc
mov
jnp
jp
jnp
add
dec
out
push
jo
add
push
or
sbb
xor
jne
dec
daa
leave
pop
out
scas
jmp
jno
mov
test
sub
mov
xchg
inc
ja
cmp
sub
push
es
outsl
inc
rcrl
lock
inc
les
add
outsb
cmp
in
popa
pushf
adc
imul
adc
lcall
push
jbe
mov
jo
push
inc
push
dec
push
sbb
push
das
dec
stos
mov
sub
int
pop
ret
ficompl
movsl
fcomps
mov
int3
scas
cmp
push
rcrb
add
call
sbb
icebp
ret
lcall
andl
je
add
mov
enter
inc
repnz
stos
cmpsw
mov
mov
jp
out
xchg
dec
out
dec
push
pop
dec
and
pop
idivl
xor
adc
enter
je
rcl
jnp
int3
push
push
icebp
mov
aad
push
jmp
and
push
fstpt
aaa
sbb
xchg
lret
data16
xchg
clc
mov
mov
pop
push
mov
iret
jle
cmc
xchg
mov
xchg
pop
sti
mov
clc
add
adc
pop
xlat
out
adc
fisttpl
xor
push
subl
inc
mov
imul
mov
stos
cmp
cmp
and
fcoml
sbbb
repnz
jne
push
test
insl
cwtl
inc
pop
scas
daa
std
dec
fxam
push
dec
inc
xor
mov
sbb
jmp
sbb
lock
inc
pop
dec
setb
mov
mov
and
mov
cs
jb
andl
out
loope
cmp
cwtl
std
mov
outsb
pop
lcall
ja
imul
nop
stos
lds
pop
in
addr16
and
idivl
xchg
fisubs
test
lods
ss
lds
test
jae
push
mov
out
outsl
inc
imul
jbe
cmp
mov
mov
pop
rolb
jl
in
adc
aas
pop
sbb
fbld
aaa
xlat
inc
mov
mov
inc
das
pop
jns
fidivs
shl
mov
in
mov
pop
ret
lock
inc
jp
push
cld
outsl
pop
cmpsl
sbb
rcrl
jnp
xchg
je
mov
scas
leave
mov
scas
inc
popa
mov
jne
xchg
add
shr
movsb
sub
test
mov
cs
push
and
movsl
mov
dec
inc
std
pop
ja,pn
xchg
add
inc
shll
jbe
push
and
inc
xor
aam
rol
add
xor
push
dec
push
mov
mov
push
jge
jecxz
sub
xor
out
and
or
daa
xor
mov
ja
lcall
andb
mov
add
sahf
xchg
sbbb
fidivs
cltd
rorb
sbb
stc
mov
mov
movsl
mov
fs
inc
cmp
adc
movsl
and
xor
push
subb
and
jae
push
cmp
mov
fisubs
in
jmp
sub
xor
ds
adc
insl
pop
mov
in
lock
mov
mov
push
jae
aad
inc
push
adc
xchg
lcall
shlb
out
pop
out
pop
fnsave
call
repnz
and
jbe
fcmovnu
mov
in
andl
aam
mov
xor
lods
mov
sub
pop
stos
mov
mov
push
jge
adc
int3
cmp
sub
inc
cltd
jb
adc
and
testb
arpl
nop
repz
pop
mov
sub
enter
add
dec
js
xlat
mov
arpl
adc
cwtl
jno
movsl
fadd
and
fidivs
stc
pop
mov
add
sbb
mov
sbb
dec
shlb
mov
mov
pop
stos
out
jno
addr16
mov
inc
pop
mov
pop
xor
in
inc
add
pop
aas
loop
fwait
mov
test
int
and
or
jmp
sbb
shl
dec
push
xlat
ljmp
ja
imul
push
inc
daa
ja
inc
dec
fiadds
fnsave
dec
add
ljmp
mov
mov
and
in
xlat
xchg
aad
pop
xchg
cli
cmp
repz
add
int
pop
lret
pusha
imul
int3
mov
nop
seto
inc
xchg
push
jp
sbb
push
mov
icebp
popf
mov
das
popf
pushf
clc
pop
mov
outsl
dec
pop
xor
das
jne
jp
pop
xor
fsubrs
shl
mov
in
xor
ret
out
jbe
ds
cwtl
add
jle
add
in
cltd
and
and
popa
push
or
cwtl
rorb
test
imul
incl
push
jne
das
push
sbb
mov
gs
pop
xor
cmp
jns
jecxz
jle
add
ljmp
sub
mov
fs
adc
pop
movsl
sbb
fstpl
rorb
inc
mov
mov
adc
insb
sub
arpl
repz
inc
scas
out
mov
stos
andb
ja
xorl
cmpsb
sub
add
xchg
add
mov
pop
adc
push
inc
loope
movb
test
and
out
leave
int
pusha
or
icebp
inc
fidivl
frstor
jg
gs
xor
sti
add
sub
gs
mov
xchg
pop
and
sbbb
cwtl
cmp
cmp
mov
pushf
cmp
fisttpll
mov
clc
test
and
lahf
add
push
xchg
dec
mov
stc
adcl
mov
movsb
cltd
mov
mov
cmpsl
push
pop
cld
adc
mov
bound
lods
jmp
inc
sar
hlt
pop
pop
adc
lods
dec
inc
mov
pushf
and
movsl
clc
repnz
aas
mov
lret
popa
push
xor
and
push
shll
xchg
xchg
sub
imul
push
adc
iret
or
mov
test
leave
mov
xchg
or
divl
inc
test
xor
js
test
push
shlb
popf
popa
jb
push
scas
pop
in
push
ret
in
fnstsw
xchg
push
jp
mov
rorl
add
cld
or
faddl
in
orl
mov
xor
frstpm(287
push
push
xchg
clc
lahf
or
jge
mov
shrb
fmul
ficompl
cs
xchg
mov
pop
jno
jne
pop
or
outsl
cmp
fneni(8087
enter
cmpsl
lock
jg
xor
imul
icebp
loopne
inc
out
mov
jns
jle
xchg
mov
insl
pusha
popl
sahf
mov
std
enter
pop
pop
ucomiss
sub
dec
add
pop
mov
hlt
mov
xlat
inc
mov
cld
ds
xor
mull
aas
data16
bound
or
pop
out
or
xlat
jle
scas
cld
mov
pusha
dec
pop
lahf
and
inc
pop
inc
pushf
out
cmp
jno
and
jecxz
sbb
fwait
stc
je
aam
lcall
inc
imul
daa
or
push
add
sbb
xchg
fwait
mov
jecxz
sbb
test
shlb
sub
ljmp
shrb
inc
int3
xchg
inc
xchg
sbb
shr
shrl
arpl
shlb
inc
and
add
inc
enter
ret
das
aam
fadds
gs
pop
add
aas
loopne
int
xchg
xor
stos
lock
inc
testl
mov
mov
fwait
cmpsb
fstpt
jb
mov
xchg
fldenv
sbb
popa
dec
xlat
xor
push
fdivl
cmc
jg
xlat
mov
in
out
pop
rcrb
inc
in
lea
inc
test
adc
pop
imul
mov
cmc
push
sbb
aas
jns
je
mov
leave
daa
insb
mov
ret
loop
fldcw
xchg
repnz
or
xchg
jo
mov
cltd
jno
mov
les
lods
jno
aam
je
leave
mov
sbb
sub
and
xchg
jmp
mov
push
mov
rcll
shrb
add
cli
inc
test
push
imul
cmpb
add
in
mov
inc
stc
mov
add
push
cmpsb
and
xor
add
aam
or
in
scas
test
jo
in
inc
jp
lods
sub
cld
mov
lock
pushf
adc
ds
adcb
testb
and
daa
add
leave
ljmp
mov
notb
imul
adc
daa
xchg
push
repnz
add
dec
jne
in
pop
mov
mov
outsb
mov
cmp
push
jno
flds
pop
loopne
inc
sub
pop
cmp
fwait
xchg
in
gs
adc
lods
shlb
pop
xor
mov
mov
divl
xlat
add
adc
testb
fcmovnb
fcoms
xchg
sbb
mov
push
mov
ja
dec
lea
movsl
or
dec
or
mov
dec
pop
stc
sbb
add
and
movsl
add
inc
mov
dec
test
dec
data16
lods
push
push
xchg
movsl
pop
sahf
inc
nop
mov
inc
jecxz
jmp
cltd
sbb
xchg
jb
lds
pop
fistps
mov
jns
add
xor
adc
push
or
lock
fmull
fnstsw
xchg
dec
les
lret
xchg
shl
mov
xchg
sbb
pop
sbb
leave
ja
rcr
scas
mov
scas
arpl
pop
add
lcall
and
rclb
mov
fisubl
push
inc
mov
sub
hlt
adc
test
dec
mov
sbb
std
loope
repnz
sbb
fdivr
inc
fs
inc
insb
je
addr16
xchg
jae
jo
and
dec
test
popa
or
leave
adc
mov
mov
or
push
or
jg
decl
sahf
aas
jae
sub
cmp
jp
cpuid
mov
mov
je
pop
cmp
movsb
add
ds
lods
xorl
push
das
inc
push
cmp
addl
push
mov
out
movsl
leave
sub
xor
test
ret
mov
inc
jge
dec
lret
hlt
aad
scas
push
out
pusha
mov
movsb
mov
mov
xchg
jmp
pusha
fdivrs
pushf
sbb
fdivrl
mov
sar
add
stos
aaa
or
test
cmp
aam
ffree
je
out
inc
sarl
pop
cmpl
lcall
inc
test
fildll
push
and
arpl
jns
js
inc
xlat
mov
leave
js
and
inc
repz
adc
fidivrl
lods
and
into
sub
fwait
outsl
aas
out
and
mov
sahf
add
hlt
jmp
call
dec
cs
mov
mov
sti
push
sbb
add
xor
ret
movsb
push
cmp
out
sub
and
sbb
cmp
sbb
int3
push
pop
test
pop
andb
cli
shl
es
lods
stos
loopne
inc
push
fs
addr16
loope
sub
enter
sub
fcomi
xor
mov
testl
jecxz
fisttps
xchg
pop
jecxz
lcall
mov
imul
push
sbb
add
jmp
sbb
daa
rcll
or
xor
orb
jo
cmc
stos
add
addr16
loopne
imul
mov
mov
shlb
nop
out
stc
sub
repnz
add
cmp
xor
xchg
cli
aad
fsubl
mov
adc
cmp
clc
testl
xchg
jl
sarb
clc
dec
sbb
push
inc
insl
dec
xchg
iret
in
arpl
push
lea
xchg
mov
sahf
jbe
je
cmp
rcll
xchg
pop
mov
popa
xor
cs
das
sub
jp
and
jecxz
insb
cwtl
in
mov
out
arpl
push
idiv
testb
xor
xor
sub
roll
out
inc
sbb
test
es
xchg
xor
pop
rcrb
mov
hlt
push
push
and
cmp
out
xchg
push
xlat
repnz
sub
xchg
out
outsb
jmp
fbld
std
lcall
daa
icebp
fcmovu
xlat
or
adc
out
pop
push
in
sub
sub
sub
test
testb
adc
and
dec
mov
or
test
stc
inc
adc
popa
add
test
pushf
or
jne
leave
call
mov
pop
add
add
dec
sub
jg
push
pop
lret
xchg
iret
lahf
sub
enter
in
enter
repz
xlat
jle
jle
pop
pop
rorb
lahf
iret
ror
xor
xlat
sub
test
pavgb
and
movsb
lock
mov
xchg
divl
das
imul
or
ret
mov
jg
out
cld
pushf
daa
test
sti
xor
loope
cmp
lods
out
xchg
mov
rorb
xor
mov
xor
loope
cmp
sub
xlat
sub
cld
jle
pop
daa
sbb
shll
add
push
in
outsl
mov
and
sbb
mov
shll
notb
mov
in
jns
xchg
mov
jmp
xchg
scas
or
adc
pop
dec
repz
sbb
cwtl
dec
xchg
fwait
rorb
mov
cmp
mov
clc
add
inc
das
cli
dec
fcomip
cmp
pop
inc
in
fadds
pop
pusha
stos
push
xlat
mov
out
xchg
sub
jne
stos
cmp
and
punpcklbw
in
int3
sbb
loop
push
dec
sbb
es
loop
mov
popa
pop
add
xlat
cmp
cwtl
stos
or
push
xchg
add
cmp
xor
scas
jo
loopne,pn
nop
sbb
push
pop
cld
adc
push
sub
test
fildl
ljmp
pushf
les
sbb
jnp
push
dec
add
lods
orl
sbb
cltd
leave
stc
xchg
push
fstpt
js
std
cmp
adc
js
daa
xchg
rolb
adc
adc
adc
addl
jl
std
xor
mov
jne
fcoml
jno
movsl
xchg
cmp
cli
pusha
xor
xchg
scas
cs
sarl
imul
adc
sbb
test
test
sbb
xchg
repz
std
inc
inc
mov
adc
pop
ret
adcb
push
add
mov
mov
pop
loopne
cmc
fbld
cmp
push
mov
adc
mov
sbbl
data16
mov
sub
mov
lahf
pop
lods
es
push
cmp
les
ficoml
jmp
mov
pop
add
pop
add
loopne
flds
fs
sbb
in
push
sub
negl
mov
push
inc
xchg
and
leave
sub
pop
in
mov
mov
fcomip
push
ret
mov
std
and
ss
jae
hlt
pop
mov
cli
mov
inc
or
adc
mov
lods
cmc
ds
mov
push
pop
pop
xchg
sub
pusha
dec
mov
jae
outsl
sub
loop
add
scas
arpl
xor
xor
arpl
in
ljmp
pusha
divb
rcll
mov
je
add
pop
pop
fldenv
sti
sti
adc
cli
neg
scas
mov
cmpsb
add
ljmp
adc
pop
scas
cmp
cs
mov
shll
push
pop
or
es
sub
out
or
sarb
push
cmpsb
jno
movsl
rep
or
xchg
push
pop
xor
add
sar
pop
cmc
aam
imul
fwait
sbb
jg
sti
dec
xor
scas
data16
pop
in
lds
hlt
bound
push
inc
mov
pop
mov
xchg
nop
int3
daa
xor
or
cmp
pop
lods
mov
xchg
xor
test
sub
mov
out
lods
cmp
xorb
or
xchg
sub
push
sti
inc
jle
jp
sub
dec
cltd
dec
stos
movsl
fnstsw
add
pop
and
jecxz
or
sbb
mov
aad
jl
repz
push
push
js
aam
push
mov
xchg
cmp
inc
inc
cmp
out
push
clc
cmp
inc
or
in
sti
cmpsl
nop
xor
cmp
inc
lods
cmp
adcl
mov
push
cmpsb
dec
jle
jmp
rcr
jb
es
and
ljmp
int
cmpsb
jae
sbb
test
repnz
sbb
jmp
imul
and
repz
mov
aas
ret
scas
or
pusha
outsl
pop
pop
cmc
and
fs
or
push
pop
imul
pop
out
call
xchg
jb
mov
or
xor
frstor
inc
stos
ja
sub
leave
fistpll
mov
push
mov
dec
mov
mov
addb
xchg
lret
xlat
xchg
fisubl
dec
pop
notl
imul
inc
imul
and
pop
je
add
fsubr
sub
bound
sti
push
sti
pop
xor
clc
stos
jl
xchg
sub
pop
mov
fisttpl
cmp
jp
xor
daa
cmp
pop
xor
xchg
outsl
outsl
ljmp
push
jge
hlt
dec
into
loope
mov
add
rcrb
popf
jbe
jmp
out
xchg
inc
xchg
cmp
mov
scas
jg
sub
sbb
pop
or
mov
or
xor
inc
imul
jge
xchg
addb
or
jno
aaa
bound
fmulp
mov
xlat
lods
aas
cli
arpl
aad
xchg
pusha
xlat
sbb
add
and
xor
pop
bound
mov
pop
xor
inc
push
out
cmp
outsl
jg
jb
pushf
jmp
insb
cs
lods
jle
mov
lock
aas
mov
lret
add
xchg
lods
push
and
jmp
dec
nop
mul
sti
sbb
out
test
jge
mov
repnz
push
push
jne
sbb
arpl
arpl
test
inc
push
mov
out
pusha
stc
xchg
xor
pop
xchg
sub
push
mov
popa
aaa
ljmp
jge
stos
mov
mov
xor
mov
pop
xchg
xor
jp
ja
popa
in
sbb
mov
push
and
inc
xchg
lock
ret
and
inc
leave
add
mull
or
inc
daa
pop
jmp
adc
jnp
cmp
cmp
or
mov
mov
inc
daa
vaddpd
cmp
test
dec
roll
and
movb
adc
mov
hlt
popf
adc
push
add
in
sbb
outsw
sbb
icebp
out
mov
jp
pop
stc
popa
dec
jp
cltd
sbb
test
pop
mov
cmpsl
aaa
xchg
ret
rolb
xor
add
cmpsb
aaa
xlat
fs
out
dec
movl
cmp
lods
fs
xchg
mov
mov
mov
xchg
pop
scas
push
ja
xchg
movsb
shl
push
mov
addl
ret
das
push
faddl
add
jge
lcall
jmp
clc
iret
icebp
out
sti
mov
sti
repz
push
mov
mov
cwtl
mov
fldt
lods
xor
decl
cld
test
in
sbb
das
pop
inc
xchg
jo
inc
push
push
jp
out
movsl
add
or
add
cmp
int
push
mov
mov
mov
pop
mov
popa
pop
out
rorb
pop
cmp
jmp
scas
out
call
inc
scas
add
adc
ljmp
jne
out
sub
and
lcall
lds
ret
loope
xchg
pop
or
ss
push
inc
sahf
sbb
cwtl
xlat
add
push
outsb
scas
lret
xor
sbb
adc
push
fidivs
push
and
inc
bound
cmpsl
mov
push
xor
std
sahf
fucomp
fwait
inc
dec
xor
mov
iret
sub
mov
mov
hlt
xor
outsb
push
and
test
and
adc
inc
and
jp
mov
add
jbe
fcomip
fnsave
pop
mov
mov
movsl
in
lcall
fiadds
sbb
adc
cmc
jns
sbb
sbb
push
lcall
push
jnp
rorb
in
pushf
xchg
mov
and
aam
arpl
mov
es
fstp
mov
xor
and
xor
leave
in
jno
and
cmp
and
push
jne
mull
pop
mov
pushf
inc
push
faddl
push
dec
idivb
xchg
lret
movsl
add
add
incb
popa
jo
xchg
sub
cli
mov
jo
mov
ret
xchg
repz
xor
inc
movsl
aaa
xorb
cwtl
movsl
fcomip
pushf
xchg
ljmp
xchg
pop
stc
int
movsl
lahf
imul
movsb
mov
mov
jae
das
adc
pop
mov
and
xchg
js
mov
pop
jp
dec
pop
aad
fidivs
inc
pop
int
sarl
outsl
mov
fimull
pop
sub
xor
js
sub
arpl
cltd
rolb
rcr
repz
mov
enter
jo
cmpsl
pop
push
push
iret
mov
aas
lret
mov
dec
xlat
add
pop
les
xor
inc
popa
clc
mov
or
stos
cmp
insb
ss
loop
push
xor
loop
push
mov
xchg
inc
mov
sahf
cmp
adc
in
inc
push
movsl
and
xchg
mov
sub
out
fcoml
sbb
repnz
jo
mov
adc
out
pcmpeqd
push
mov
mov
push
xchg
loope
xchg
sbbb
mov
jnp
mov
adc
jp
mov
pop
mov
sahf
and
scas
andb
test
mov
jmp
sub
push
mov
cmp
inc
lcall
push
mov
out
dec
xchg
sbb
pop
inc
mov
pop
add
ljmp
jmp
adc
dec
insl
and
mov
inc
aas
addr16
fwait
mov
sarb
xchg
pop
ljmp
xchg
cli
mov
sub
test
sub
int
mov
push
cmp
mov
adc
xlat
push
and
cmp
outsb
lods
shlb
inc
mov
add
outsb
insl
repz
jno
push
popa
call
rorb
cwtl
pop
mov
sti
iret
sbb
jno
cmp
xchg
jg
dec
adc
mov
shll
cmc
sbb
xor
cmc
outsl
sbb
lret
sub
fisttpl
pop
mov
int
aaa
sbb
jae
jnp
repz
add
pop
xchg
dec
stos
push
iret
mov
cltd
lahf
add
fsts
cmpsb
cmp
add
and
sbb
stc
test
outsb
loop
insb
or
pop
outsb
repnz
mov
aam
pop
cmpsl
out
insl
cli
ficomps
xchg
push
popf
data16
sub
dec
mov
pop
dec
or
jnp
ficoms
clc
fisttps
and
scas
shlb
mov
fstl
dec
jl,pt
fsubrs
pop
aam
cltd
xor
dec
push
dec
push
imul
push
pop
xor
inc
loope
add
hlt
fdivs
leave
out
out
add
and
push
jb
sbb
enter
insl
inc
or
or
or
push
sub
call
xchg
jbe
repnz
dec
lret
push
sbb
sub
adc
adc
mov
push
push
xor
js
jnp
rolb
dec
ds
cltd
mov
movsl
lock
push
scas
jmp
pop
mov
mov
or
nop
jo
mov
fidivl
mov
push
stc
movsb
ret
xor
in
aaa
out
sahf
call
out
sub
int
pop
stc
push
sub
jne
data16
inc
arpl
push
mov
xor
cmp
sub
cmp
cmp
cmp
imul
or
and
outsl
xor
mov
mov
filds
dec
fidivrs
in
loopne
mov
cwtl
sbb
sbbb
cwtl
arpl
mov
pop
or
inc
xchg
outsb
outsl
loopne
cwtl
gs
dec
pop
icebp
loopne
cmc
push
mov
cmp
xchg
ret
cld
and
out
fdivrs
xor
adc
testl
cld
cmp
fadd
push
sbb
sti
scas
jnp
test
inc
pop
or
ret
stos
sbb
into
pop
shrl
mov
sahf
adc
lret
or
test
cmp
je
js
sub
cmp
insl
pop
cmpsl
cmp
cltd
pop
or
outsl
xor
ja
adc
into
add
ds
pop
push
cltd
mov
jl
jge
xor
xchg
mov
sti
ss
bound
aaa
mov
xchg
insl
cmc
sub
xor
xor
mov
ljmp
sbb
es
outsl
lret
sub
pop
cwtl
out
data16
pop
movb
rclb
dec
dec
mov
lock
push
dec
mov
mov
inc
xor
das
inc
cmp
xchg
push
ror
ret
adc
push
xlat
pop
xacquire
notl
lock
test
fbstp
icebp
inc
shr
mov
dec
mov
shlb
int
mov
xchg
xor
in
mov
lahf
scas
xchg
pop
cmpsl
push
pop
pop
je
jnp
imul
cmpsl
lcall
jo
addr16
adc
push
mov
jbe
push
lcall
dec
outsb
outsl
arpl
pop
dec
fiadds
jo
popa
push
int3
loop
mov
push
mov
fdivrl
sub
scas
ss
push
cltd
and
xchg
adc
out
aaa
fwait
push
adc
pop
dec
cmp
les
sbb
and
sub
pushf
call
mov
mov
or
mov
in
lret
jmp
or
dec
pop
or
int
xor
ret
fdivp
dec
jbe
outsl
jmp
sub
mov
and
adc
filds
push
shlb
adc
push
sbb
mov
mov
xchg
out
push
mov
vpmulhuw
push
xor
dec
xor
push
adc
popf
int
rol
mov
subl
jle
or
adcb
test
fdivrs
lea
sbb
aas
cmp
xchg
inc
xor
inc
push
pop
pop
stc
daa
gs
xchg
mov
adc
ficomps
sub
xchg
out
mov
adc
jmp
push
insb
push
pop
scas
ja
insb
callw
nop
pop
ds
daa
sbb
push
jp
movsb
insb
xorl
xchg
nop
sbbl
xor
jae
into
movaps
clc
pop
mov
aad
hlt
out
movsl
dec
jl
ud1
popf
daa
mov
adc
stos
mov
dec
mov
or
push
adc
dec
shrl
add
call
sbb
mov
xchg
jmp
dec
add
sub
insl
and
enter
adc
push
xor
adc
inc
dec
hlt
sahf
xchg
fnstenv
adc
rolb
testl
pop
or
mov
mov
sub
repz
leave
push
jmp
push
pop
mov
cltd
negl
hlt
scas
push
jle
repz
inc
jmp
leave
outsb
out
out
pop
stos
int3
mull
lods
cmp
dec
pop
inc
stos
xor
sub
xorb
mov
sbb
loop
enter
dec
pop
icebp
in
out
cmp
or
add
orb
in
xchg
ja
lods
mov
pop
les
add
mov
pop
mov
in
loope
aad
fwait
adc
push
add
imul
add
jmp
push
fdivl
test
fidivrl
mov
jg
jmp
jae
mov
xchg
leave
ds
enter
and
dec
sub
pop
mov
aaa
xchg
pop
cld
in
mov
jp
mov
mov
popf
ficoml
adc
cltd
ficomps
into
pushf
mov
imul
std
mov
add
jle
add
cmpl
xor
dec
jge
lret
xor
outsb
cmc
bound
ja
or
xor
add
cwtl
lret
push
dec
cmp
cli
ds
fs
mov
pusha
xlat
iret
mov
jmp
push
sub
push
adcb
push
mov
leave
pop
mov
push
mov
stc
push
std
test
add
sub
daa
test
rorl
aam
loop
push
sub
xor
mov
xchg
push
sti
sub
mov
cld
push
sub
imul
cmp
add
out
cmc
fldenv
in
stos
add
push
popf
mov
xor
jle
ret
mov
roll
pop
fxch
pop
mov
dec
cli
dec
out
push
and
stos
negl
sbb
icebp
cmc
and
scas
test
sbb
inc
jmp
sub
jl
cmp
mov
adc
dec
xchg
cmp
pop
aad
mov
mov
in
incl
xchg
cmpsb
xor
fistpll
jle
mov
mov
mov
dec
and
sub
into
sub
ret
jno
dec
xor
icebp
adc
xor
loopne
sti
xchg
xchg
scas
mov
or
fs
jp
test
and
inc
cmc
pop
mov
jns
push
subl
pop
push
dec
sarb
mov
cmc
movsb
cltd
and
out
jle
pop
ljmp
in
or
test
ret
iret
inc
adc
cmpsb
imul
notb
test
in
and
or
cmp
jecxz
stos
fmulp
xchg
pop
cmp
xchg
mov
xorb
add
or
mov
mov
jl
in
repnz
sbb
xchg
cmpsb
aaa
int
sbb
insl
gs
adc
mov
sbb
ja
gs
in
pop
sub
adc
xor
xor
mov
js
mov
call
addb
mov
roll
fsubrs
test
jl
or
fnstsw
insl
jbe
or
js
into
in
je
sub
xchg
pop
in
xor
mov
cld
data16
lea
pop
scas
cmc
jmp
sahf
pushf
jecxz
mov
scas
cmp
pusha
mov
scas
cmp
sub
pop
in
pop
cmp
outsl
sbb
xor
jg
fldl
test
movaps
xchg
mov
pop
andb
adc
dec
push
sbb
sbb
into
test
icebp
aad
push
mov
test
fiaddl
mov
mov
dec
nop
sub
das
cmc
lret
cld
add
sti
xchg
lods
dec
xchg
ja
ljmp
or
dec
loop
or
cmp
inc
fsubr
das
cmpsb
adc
mov
cwtl
mov
push
add
inc
in
insl
dec
js
or
ljmp
lea
loop
mov
ffreep
pop
cmp
pop
jmp
pop
cmpb
pop
sbb
aam
mov
jmp
cs
gs
xlat
jns
cs
iret
mov
add
add
push
dec
insb
jl,pt
push
mov
bound
mov
or
nop
das
pushf
sub
mov
adc
loope
mov
mov
or
mov
pop
mov
out
mov
push
pop
dec
mov
xor
mov
xor
jb
mov
das
hlt
lret
xchg
shrb
inc
aad
lock
sbb
mov
test
pop
jmp
xchg
jns
mov
cli
icebp
xor
pop
jge
dec
or
sbb
aas
and
mov
sub
and
jno,pt
xlat
jmp
jne
xchg
lea
imul
imul
and
das
cmpsb
jmp
inc
mov
jg
outsl
cmc
push
pushf
jbe
mov
insl
icebp
sbb
inc
int3
mov
sbb
mov
cmpb
dec
arpl
data16
xor
data16
daa
pop
lods
xchg
jns
dec
adc
mov
cmpsb
hlt
mov
pop
out
jo
out
dec
in
rcrl
mov
jbe
dec
pop
mov
test
fistpl
mov
out
cmp
or
adcb
out
ljmp
mov
jne
shrl
js
sbb
mov
dec
sub
push
mov
mov
add
cmp
jbe
in
cmc
out
jp
xor
aam
xorl
inc
xchg
add
out
jp
mov
pop
xchg
mov
cmpsb
scas
scas
lods
and
shl
pop
push
sbb
in
test
loopne
push
je
or
mov
cld
xor
or
loope
pop
cmpsb
jae
pop
in
gs
inc
push
lock
pop
lahf
dec
xchg
test
sub
aam
sbb
das
hlt
pop
sbb
sarl
out
lcall
pop
mov
xor
fs
xor
mov
xchg
out
sti
inc
sub
sub
addr16
lea
adc
in
aad
shrl
pop
cmp
mov
in
xchg
pop
daa
jb
mov
push
mov
shr
stos
and
cmp
cmp
pop
lea
bound
repz
inc
popf
cmc
arpl
fucomi
pop
divl
scas
sub
mov
jp,pn
mov
adc
push
ss
je
out
add
imul
sub
fwait
std
mov
loop
imul
adcl
test
add
scas
ret
xchg
repz
xchg
jo
daa
push
adc
ficoms
jg
pop
iret
pop
hlt
test
loope
iret
push
pop
cmp
sbb
sbbl
mov
sbb
movsl
mov
out
cmp
aam
mov
loop
dec
or
push
sbb
push
lcall
jae
cmp
mov
xchg
mov
icebp
jae
add
enter
nop
ja
adcb
and
lret
stc
jmp
xchg
push
fs
lods
mov
jae
cmp
push
sbb
lret
outsb
test
bound
mov
xchg
lahf
pop
ror
icebp
adc
push
xlat
aad
sub
aam
jle
cld
inc
cltd
ds
jbe
roll
jp
adc
sub
imul
rcll
aaa
ret
test
push
loop
jg
jns
rcl
add
dec
sahf
out
xchg
in
jns
and
cmpsl
inc
ret
int
adc
push
xchg
push
in
sub
lods
shll
push
dec
add
or
jg
mov
or
adc
or
insb
fimuls
mov
or
movsl
or
and
sub
add
mov
cmc
adc
mov
add
dec
sbb
inc
std
fidivl
sbb
jp
cmp
das
test
dec
stc
mov
bound
adc
xchg
mov
loope
fs
dec
loope
cmp
adc
xchg
pop
inc
or
or
ds
in
sbb
movsl
sbb
sbb
movsl
cmc
rol
sub
test
les
imul
outsb
xchg
flds
adc
xor
mov
daa
outsb
ror
gs
jecxz
push
popa
xchg
rorb
and
enter
ljmp
and
loop
lea
bound
dec
mov
lcall
inc
in
ja
push
fwait
inc
push
inc
in
push
out
lock
and
xlat
adc
xchg
jbe
push
mov
ds
in
cmpsl
xor
jno
test
adc
pop
xchg
loopne
outsl
cmp
sub
adc
push
xor
push
xlat
sub
jnp
or
leave
mov
data16
popa
and
mov
loopne
xor
fcmovnbe
or
mov
es
stos
repnz
jle
imul
fcomi
push
add
push
hlt
inc
adc
sbb
adcl
stc
xlat
dec
or
jge
leave
mov
dec
lods
repnz
aam
xchg
lods
add
xchg
xlat
lock
dec
and
ljmp
jecxz
mov
xchg
test
mov
xor
loop
sbb
and
mov
loope
and
mov
push
or
jo
dec
add
icebp
adc
xchg
mov
sub
lea
xchg
mov
adc
cmp
push
js
stc
out
movswl
mov
and
cltd
push
stos
xchg
test
xchg
fisttpll
mov
fcom
cmp
inc
jnp
cmp
hlt
nop
stos
insl
inc
aad
xchg
sub
fwait
dec
jo
dec
xor
mov
xchg
mov
ss
sahf
jg
out
movsb
and
movl
push
mov
mov
loop
cmpl
ds
cltd
mov
in
jae
xor
popa
pushl
adc
jp
and
push
mov
xlat
add
and
scas
out
andps
lret
xor
stos
cmpsb
xor
xchg
aaa
icebp
lock
and
adc
push
add
rolb
sub
pop
shll
cwtl
xor
repnz
imul
jg
jno
lods
mov
and
dec
push
cmpsl
mov
mov
sbb
roll
or
arpl
adc
ret
ja
test
lret
fiadds
nop
mov
test
or
cwtl
out
mov
int
cmp
pop
daa
or
sub
pusha
push
jl
out
cld
and
xor
mov
iret
imul
cmpl
inc
lret
adc
push
pop
aas
movsl
jg
cmpsb
jle
scas
pop
mov
sbb
lahf
lods
sbbl
rorl
push
cmpl
xor
sub
mov
ss
add
inc
sbb
movsb
push
insb
dec
scas
inc
push
pop
hlt
fwait
movsb
and
dec
aad
mov
arpl
push
sub
push
pop
test
mov
xor
jg
or
cmp
rolb
jg
mov
lahf
jb
addb
jp
push
daa
out
stc
pop
stos
cmp
mov
imul
push
je
cwtl
xor
cmp
mov
cmp
jo
jae
imul
mov
inc
pop
shll
push
sbb
pop
dec
outsl
cmp
cmpsb
clc
stc
adc
mov
xchg
mov
ss
sub
push
jp
push
dec
imul
in
mov
xchg
test
sbb
sbb
cmp
ret
push
stc
xchg
xchg
lods
cltd
cmc
xor
mov
inc
xchg
stos
xor
dec
inc
nop
adc
cmp
test
adc
cmp
inc
inc
repnz
pusha
pop
mov
mov
mov
mov
sub
cmp
test
pop
xor
dec
pusha
cmp
push
lea
std
or
aam
jns
test
jmp
mov
sbb
pop
test
push
sub
mov
out
and
push
inc
addr16
inc
aam
cmp
dec
andb
mov
push
fmul
cld
inc
push
bound
jne
push
lds
mov
xchg
ret
push
cmp
addr16
subb
dec
dec
ficoms
stos
pop
in
repnz
fidivs
push
pop
test
repnz
in
lcall
mov
sbb
flds
adc
mov
adc
adc
jbe
pop
mov
aad
mov
jmp
icebp
ret
pusha
aas
inc
iret
xor
pop
or
data16
lods
ret
sub
dec
jg
mov
xchg
cld
sub
mov
mov
call
outsb
mov
in
fstpt
xchg
mov
and
lods
addr16
jbe
call
inc
sbb
mov
inc
cmpsb
sar
outsl
lea
lret
sub
sbb
in
mov
pop
pop
lods
retw
mov
xlat
repnz
jp
jne
out
mov
inc
xor
push
mov
jle
outsb
or
add
push
sti
and
cmp
xchg
call
out
cs
push
ret
and
cmpsl
loope
push
push
mov
sti
mov
lret
fs
cli
or
leave
int
inc
fs
cmp
in
imul
ss
orb
cmp
rolb
push
filds
mov
jo
jg
xchg
imul
and
stc
roll
adc
jg
push
rolb
jle
add
mov
in
xor
mov
push
cmove
or
add
sub
mov
jecxz
pop
or
xchg
inc
jmp
enter
cltd
push
fdivs
scas
outsb
push
ja
arpl
mov
sub
pop
fistpl
loop
cltd
mov
fldenv
xchg
sti
aam
jne
mov
clc
dec
xchg
inc
nopl
mov
pop
dec
es
adc
mov
inc
hlt
and
call
bound
leave
mov
ss
sbb
in
fwait
mov
sahf
hlt
or
pop
cmpsb
es
fwait
popf
leave
arpl
xchg
pop
and
cmp
add
fdivrp
mov
adc
sub
mov
jnp
mov
mov
and
inc
cld
jne
push
mov
sbb
add
xchg
add
lods
sub
into
test
push
sahf
mov
push
sub
movsb
xor
adc
inc
clc
lahf
pop
pop
mov
jg
bound
xchg
arpl
xor
pop
sahf
bound
fldl
sti
inc
jle
xlat
inc
cmp
push
hlt
mov
test
stos
mov
push
push
xlat
sar
mov
sbb
das
ret
lea
and
imul
data16
outsl
pop
push
and
pop
out
movsl
ss
add
xchg
and
pop
or
fidivs
sbb
jae
or
lret
icebp
mov
push
aas
mov
fisttpl
repz
repnz
lods
data16
mov
test
stos
negl
imul
push
mov
cmp
sub
in
out
jb
mov
shlb
sub
mov
cmp
and
dec
sub
test
or
popa
sbb
push
mov
js
stos
mov
aam
push
cmp
mov
xchg
loop
cli
mov
ret
or
js
repnz
imul
ss
test
imul
xchg
inc
cli
pop
xor
out
cmp
mov
int
adc
call
les
fbld
xchg
jle
movsl
std
push
inc
mulb
jle
mov
cld
mov
out
scas
fiaddl
out
mov
push
aaa
das
xor
xchg
push
cmp
xor
stos
cmp
and
inc
stc
repz
insl
sub
sub
or
rorl
push
dec
scas
mov
cld
ss
cmp
shll
scas
popf
push
or
cltd
xor
inc
adc
push
sub
adc
aaa
push
sbb
dec
imul
popa
jne
loope
mov
std
push
add
pop
xor
iret
dec
push
adc
xchg
hlt
fisttps
mov
out
dec
or
sbb
or
mov
outsl
cs
movsb
jp
jp
lods
inc
imul
dec
jmp
mov
out
dec
push
xor
or
push
pop
mov
jae
inc
lcall
outsb
cmp
push
insl
cmp
sbb
dec
lahf
cli
pop
sub
mov
loop
inc
or
mov
mov
xchg
and
sahf
adc
cs
pop
mov
ret
jmp
daa
ljmp
jno
incb
inc
cltd
test
push
lret
dec
stos
addb
mov
jo
mov
jbe
outsl
add
xor
sbb
jge
or
push
rcll
mov
leave
adc
mov
sub
stos
sti
add
out
std
pop
int3
stos
sub
lcall
mov
push
data16
jae
pop
xchg
hlt
jge
push
cwtl
into
les
pop
dec
and
push
cwtl
pop
fdiv
int
data16
xchg
outsb
out
into
or
aam
pop
int3
fadd
imul
mov
pop
adc
xchg
movsb
push
test
or
pop
aad
jae
xor
arpl
shl
shl
dec
aam
jge
in
faddp
movsb
cmp
fstpl
sub
sub
test
imul
and
scas
mov
pushf
and
outsb
scas
std
jb
out
movsl
mov
pop
mov
iret
xchg
clc
mov
loop
aas
imul
push
pop
jno
ljmp
fwait
mov
push
add
inc
xor
mov
repnz
cmpsl
pop
push
cmp
movsb
sub
sbb
sub
cld
pop
ss
adc
and
sub
jmp
lret
inc
xor
sbb
dec
pop
sub
mov
sub
dec
ja
jp
push
dec
repnz
mov
ror
aaa
adc
fxch
inc
lcall
sbb
popa
xchg
jge
into
cld
and
or
or
fstl
sti
in
jg
inc
add
lret
cmc
mov
add
mov
aam
sub
fistpl
icebp
adc
ja
lret
or
add
repz
ja
jnp
jne
sub
dec
xor
lret
rcrl
test
lock
je
xor
push
imul
lcall
mov
sbb
mov
xor
bndstx
jmp
sub
mov
lret
rol
mov
cwtl
pop
insb
ljmp
popf
sti
adc
ss
cli
jmp
cmp
ret
jae
divl
sub
cli
cmpsl
cs
nop
mov
lcall
dec
aaa
mov
sub
or
or
mov
out
out
push
push
pop
and
xchg
pop
adc
leave
in
push
aas
imul
cld
xor
popa
mov
xor
and
mov
mov
arpl
xlat
int
andl
cmp
test
lods
push
es
outsb
sbb
push
push
add
cmp
test
aaa
cmp
jecxz
inc
jmp
add
xor
stos
mov
adc
cmp
lds
sub
xchg
cltd
dec
inc
lea
pushf
or
jo
dec
std
pusha
nop
sub
pop
std
push
sub
and
testl
outsb
test
cli
cmp
stos
jno
lret
imul
or
or
lea
push
pop
dec
pop
mov
out
jbe
pop
sub
frstor
icebp
and
pop
cmp
jg
adc
lret
popf
lea
mov
movsl
add
sub
enter
stos
scas
xor
jns
sub
mov
jns
in
filds
insb
mov
sahf
pop
aam
insl
xor
mov
or
jbe
cmpsb
ret
in
repnz
les
gs
test
jmp
iret
xchg
dec
std
sub
sti
into
nop
inc
push
or
je
adcl
or
aaa
sahf
mov
testl
adc
sbb
movups
out
mov
inc
int
andl
xchg
jnp
xchg
mov
sbb
jb
aam
push
testl
pusha
mov
sub
insl
int
jecxz
dec
xchg
mov
xchg
xchg
sti
cli
xchg
or
ljmp
jbe
adc
mov
leave
mov
daa
mov
inc
push
mov
movsl
outsb
sahf
dec
mov
mov
sub
lcall
mov
stc
jp
rorb
or
inc
fstpl
xchg
mov
cmp
cmp
dec
jl
fcmovb
out
imul
adc
je
mov
jecxz
ret
adcl
pop
aas
shlb
mov
aam
jnp
daa
popf
les
cmp
cld
mov
pop
arpl
adc
jb
addr16
dec
or
pop
dec
mov
add
sub
pop
adc
mov
ljmp
ret
ja
jae
mov
jp
xchg
cmc
inc
lea
adc
jbe
arpl
adc
in
push
push
movsl
adc
popf
mov
ret
mov
aaa
add
push
imul
adc
andb
test
sbb
mov
je
aam
jb
mov
adc
jb
jecxz
pop
gs
mov
sbb
sbb
lods
sub
pop
das
add
push
int3
stos
cmc
andl
daa
mov
and
or
jmp
mov
dec
sub
cmpsb
xchg
data16
rorl
ljmp
mov
mov
fcmovnu
shll
mov
or
mov
fisttpl
xchg
subb
roll
jae
leave
mov
cltd
sbb
stos
dec
mov
insb
mov
in
jbe
movsl
stos
and
inc
mov
shl
cs
clc
sbb
lcall
adc
mov
sti
and
cmc
adc
lea
push
rcrb
mov
fisttps
jbe
sub
daa
daa
sahf
lock
iret
cltd
push
cli
xchg
cs
lret
cmpsl
push
push
pop
add
insl
ss
sub
jo
adc
jge
lods
mov
rcr
hlt
xchg
mov
mov
inc
loope
sbb
adc
push
mov
hlt
out
inc
stos
lcall
icebp
filds
lahf
xor
fnstsw
scas
inc
jae
lret
ret
pop
movsb
mov
sub
mov
nop
adc
out
and
mov
mov
xor
jae
xchg
pop
nop
jmp
xchg
pop
fucomp
push
mov
jle
movsl
mov
dec
jbe
cmc
and
dec
mov
jp
call
divl
push
lcall
test
ret
xchg
insl
movsl
mov
aaa
xor
ja
fwait
lea
adc
loope
and
sub
pop
lret
mov
push
mov
xchg
mov
cltd
iret
push
adc
pop
mov
add
cmc
push
lock
fwait
in
mov
lock
mov
andb
shlb
loope
mov
jno
push
std
xor
outsl
iret
pop
jne
cmpsl
or
dec
push
and
std
sbb
sub
in
pop
ret
pusha
sub
inc
cmp
das
cmpsl
dec
loopne
lret
mov
pop
mov
test
push
adcb
push
pushf
sbb
add
push
adcb
or
cmp
mov
sbbl
les
fcoms
jg
xchg
add
adc
inc
cmc
cwtl
push
inc
arpl
push
mov
xchg
aad
jb
push
sti
pop
leave
or
fidivs
ljmp
sarb
test
mov
sbb
mov
push
testb
inc
test
arpl
inc
test
add
iret
ret
insb
sub
cwtl
jl
inc
sub
adc
push
sub
das
jl
sbb
test
cmp
pop
js
mov
cld
xchg
xchg
loopne
psubusw
mov
cmp
mov
fadds
adc
cmc
jae
push
or
movsb
lcall
into
insb
dec
push
fnstenv
pop
mov
inc
mov
lret
rcr
loop
add
roll
add
stos
xlat
popf
jns
xor
in
mov
testb
bound
aad
jo
aaa
add
mov
sbb
push
es
loope
addl
and
cmc
test
mov
je
dec
cmp
sbb
outsl
sbb
xchg
jo
ds
lea
scas
and
test
cs
mov
cmpl
out
ret
es
pop
jl
aaa
xchg
mov
roll
pop
dec
out
outsb
add
adc
dec
add
cmp
sub
fldl
cmp
ds
or
cmp
out
es
daa
inc
pop
cmp
dec
loopne
shlb
add
xor
lods
aas
jb
mov
leave
cmpb
call
out
mov
bound
loope
pop
adc
jg
push
arpl
inc
add
xor
or
xchg
add
jg
jbe
sub
dec
dec
push
push
dec
add
ss
sub
mov
push
jbe,pn
jmp
push
mov
daa
popa
ds
mov
jbe
imul
pop
mov
jne
sbb
lahf
cmp
adc
mov
clc
rcl
enter
fisubrs
es
rorl
adc
cmpsb
lds
mov
jecxz
es
sbb
test
adc
add
icebp
push
adcb
inc
fs
mov
popa
inc
push
fstps
cmp
sub
in
or
cs
and
jno
dec
mov
sbb
repnz
pusha
mov
out
add
outsb
pop
aam
mov
push
shr
or
pop
into
adc
cs
cmpsl
pop
xor
adc
out
das
cs
adc
xor
clc
xchg
jne
push
popa
lods
push
cmpb
shlb
fsubrp
cli
or
cmc
fnstsw
adc
cmpsb
notb
out
mov
adc
jbe
xchg
out
or
cmc
dec
cwtl
mov
inc
push
out
push
mov
dec
lret
dec
in
lcall
nop
jmp
mov
cmp
test
jns
daa
and
mov
sbb
push
je
into
in
arpl
jge
popa
je
mov
test
and
cmpsb
inc
and
add
pop
stos
orl
test
push
insb
or
and
mov
mov
sub
adc
movsl
jle
mov
adc
sahf
mov
xchg
nop
std
lea
lahf
sahf
psllq
aas
inc
sub
fs
cs
or
std
mov
jle,pn
jmp
div
cld
shlb
pop
movsl
pop
and
pop
stos
pop
dec
shll
dec
ficoml
dec
mul
nop
or
lods
ja
cmp
jb
aas
dec
rorl
sbb
fcmovnbe
push
xchg
cmpsb
xchg
inc
pop
stos
sarb
fscale
mov
cmp
loope
call
call
mov
push
sbb
fdivl
sbb
addr16
push
xchg
mov
adc
add
je
aam
mov
fucom
mov
les
dec
xor
and
into
shl
shrb
in
sahf
test
add
leave
bound
inc
jmp
fisttps
out
jmp
mov
pop
ret
push
jns
cltd
mov
mov
add
or
cwtl
rclb
gs
stos
or
push
shlb
negb
jns
sbb
lods
lahf
mov
test
sarl
adc
fidivrs
or
gs
fisubrl
scas
mov
push
pop
or
psrld
stos
mov
adc
xchg
xchg
scas
push
lahf
aad
cmpsb
mov
jg
push
sub
ficoml
inc
mov
outsl
add
dec
pop
aas
push
push
loopne
jbe
mov
call
sarb
imulb
sub
and
stos
arpl
ret
ljmp
cmpsl
inc
add
fsubrl
cmp
inc
mov
sbb
mov
into
dec
mov
arpl
jge
hlt
inc
in
push
mov
xor
aad
dec
sub
in
lret
ficoml
jmp
cmp
pop
fucomp
int
pop
fcmovnbe
movsb
icebp
mov
adc
sti
addr16
add
add
cmpl
jne
mov
mov
adc
mov
icebp
jl
pop
sub
sbb
push
fiadds
cmp
js
ljmp
in
in
sbb
mov
ds
into
fidivs
mov
lds
rorb
cmpsl
loope
decb
add
jbe
punpckhdq
push
sbb
imul
sub
push
sahf
sub
adc
mov
sub
jae
inc
or
and
daa
sbb
pushf
inc
or
inc
imul
lret
addr16
adcb
lahf
stos
mov
cs
dec
mov
std
cmpsb
int
pusha
dec
jmp
lret
or
jns
popf
push
or
pop
xchg
cmp
sbb
xor
repz
xchg
pop
xor
pop
fidivl
inc
inc
or
and
mov
ror
insl
jae
flds
mov
lods
stc
push
push
mov
std
lock
nop
jecxz
lods
push
shlb
add
mov
mov
mov
ss
ds
sahf
cmp
pop
lock
icebp
mov
mov
add
pop
gs
roll
enterw
mov
in
xor
scas
bound
push
nop
pop
cld
scas
push
lahf
xor
pusha
add
clc
test
xchg
pushf
stos
enter
cltd
push
ret
fs
fildl
cmp
data16
or
ljmp
jge
lock
scas
or
inc
roll
scas
jo
fsts
xor
jmp
dec
push
xchg
mov
imul
adc
jno
sar
sti
test
mov
and
adc
sbb
sbb
in
cmp
stos
xchg
jge
sti
mov
stc
add
sub
lea
inc
mov
push
xchg
push
ja
dec
and
xor
cs
lret
jle
xchg
mov
arpl
ds
jge
imul
and
lods
bound
jno
and
adc
shlb
or
xor
push
and
iret
sub
pop
pop
mov
inc
pop
xchg
inc
out
jnp
cmp
fstpl
cli
xchg
dec
jae
xchg
xchg
pop
jbe
popa
xor
pusha
sahf
test
repnz
jbe
jle
dec
xlat
cs
in
push
in
xchg
jns
dec
iret
mov
ret
iret
outsl
dec
ljmp
adc
sbb
mov
testl
xor
add
rcr
js
stc
ret
adc
sub
xchg
fisubs
xor
stos
outsl
sbb
test
fdivrp
pop
or
pop
lds
xchg
xchg
sub
out
movzwl
sbb
pop
insl
mov
rorb
shrl
call
mul
mov
jmp
loopne
clc
ss
dec
lds
xchg
int3
rcrl
cmp
jmp
adc
outsl
sbb
out
loopne
or
jne
xchg
out
fstl
push
add
add
mov
adc
js
test
mov
arpl
cmp
xchg
movsl
les
aaa
jo
inc
mov
push
adc
push
xor
cltd
outsl
cld
es
cli
outsl
and
call
jmp
xchg
inc
notl
outsl
inc
bound
mov
sbb
shrl
jbe
popf
cmp
pusha
xchg
mov
sub
pop
mov
lods
sub
and
sub
int
and
or
cltd
add
mov
leave
xor
clc
mov
test
in
jle
or
jne
push
mov
in
cmp
pop
sub
sarl
lret
cwtl
fnsave
mov
jp
dec
test
ffreep
pop
cs
jns
repz
insl
insl
mov
fcomi
mov
pushf
add
sbb
lea
or
push
jmp
xor
fidivrs
stos
cs
mov
xchg
mov
enter
cmpsl
mov
pop
xor
adc
repz
push
frstor
shlb
mov
jge
inc
mov
mov
pop
outsl
xor
cltd
rolb
scas
xchg
mov
mov
data16
out
sbb
add
xchg
popf
jl
push
pop
jb
lcall
out
mov
inc
dec
fwait
sub
lret
les
movsb
repnz
arpl
mulb
fwait
mov
push
outsl
cmp
rcrl
les
and
sbbb
movsl
bound
fidivrs
icebp
jno
sarb
pop
scas
add
adc
mov
pop
add
sti
cmp
pop
mov
dec
je
lods
fisttpll
test
sbb
dec
orl
imulb
jnp
xchg
and
push
out
lret
xor
sbb
inc
or
or
xchg
aam
and
cmp
fnstcw
gs
scas
clc
call
xor
pop
xchg
cltd
stos
mov
mov
xchg
and
pop
adc
in
mov
mov
lret
xchg
mov
data16
push
jns
push
cmpsl
test
sub
enter
adc
push
jnp
push
pop
addr16
sahf
stos
and
and
cmp
roll
sbb
stos
test
push
sahf
loopne
xchg
movsb
add
lods
mov
out
sub
shl
movsb
sbb
je
pop
bound
cltd
and
and
push
xchg
arpl
aas
sub
jecxz
out
or
jnp
inc
mov
inc
mov
sbb
cwtl
fdivl
cmp
ret
iret
push
push
sub
out
sub
or
inc
test
mov
push
sbb
pop
push
add
enter
outsb
jo
pop
mov
and
test
adc
mov
aaa
jl
sub
je
sub
mov
imull
out
cmp
jle
fdivl
inc
out
jno
xor
and
cmp
in
push
hlt
lock
xor
cmp
cltd
mov
sti
sub
test
roll
push
pop
add
cmp
lret
cmp
cwtl
in
and
pop
xchg
xor
in
int
lods
fs
cmpsl
mov
jmp
int3
pop
popa
or
adc
jb
repz
in
mov
sub
xchg
lods
push
fmulp
ljmp
inc
sub
mov
insb
xchg
test
outsb
mov
in
or
or
ds
inc
xchg
fildl
aad
ja
pop
lods
ds
push
sub
jg
push
push
stos
test
jecxz
pusha
fwait
cmp
and
stc
jns
mov
in
cmp
inc
call
shll
mov
pop
mov
jnp
adc
xor
test
add
sub
adc
mov
pop
xor
out
int
pop
loopne
loope
adc
jbe
push
add
idivb
out
sahf
sub
jbe
inc
cmovnp
push
pop
jmp
stc
jns
les
fs
cmp
mov
pop
and
daa
xor
popf
pop
ret
test
xchg
popa
les
push
mov
mov
cld
pop
mov
adc
and
xor
lret
xchg
and
bound
lcall
mov
out
loop
pop
sbb
repz
lret
push
cmc
mov
mov
outsb
xchg
addr16
adc
or
dec
arpl
mov
lods
xchg
lret
inc
icebp
mov
inc
daa
pop
or
sti
out
xchg
mov
repnz
and
jl
cwtl
data16
sarb
lea
not
ds
aam
mov
pop
fists
leave
loopne
cmpsb
test
jp
syscall
mov
sbb
js
mov
mov
add
pop
cmp
push
adc
and
aas
jae
and
jp
lret
sub
and
adc
int
cmp
test
notb
mov
lods
cmp
dec
and
lret
sarb
inc
dec
inc
sahf
sub
adc
sarb
jno
push
cltd
fmuls
push
lods
push
jo
fld
add
or
rorl
shlb
mov
stos
int3
ja
out
fcomps
test
cltd
loop
mov
pop
inc
jbe
pop
test
jle
add
mov
lahf
imul
inc
cmp
xchg
je
adc
inc
in
or
outsl
std
in
pcmpgtd
add
adcl
jb
sub
aas
test
jbe
rorb
jmp
xor
shll
rorb
shlb
xor
xor
inc
fsubl
jbe
aas
adc
mov
pop
inc
mov
or
cmpl
mov
xchg
add
sahf
ljmp
cmp
imul
mov
andl
inc
xchg
inc
in
test
xlat
jge
pop
dec
mov
leave
or
mov
or
xorl
mov
outsl
ds
xchg
outsl
ret
xor
fldt
or
nop
fadds
sub
sbb
arpl
cmp
add
gs
out
loop
jno
lret
jle
inc
sbb
sub
sar
pop
clc
das
pushf
fmul
fldenv
add
dec
fucom
imul
inc
pop
ficompl
push
fs
push
fadd
and
aam
xchg
lahf
sbb
mov
mov
test
mov
fwait
scas
push
aad
jmp
daa
cltd
sub
nop
and
adc
mov
inc
dec
sbb
imul
mov
dec
lcall
addps
xlat
mov
stc
int
lods
cltd
mov
fxch
or
adc
mov
insb
cwtl
jns
inc
out
xchg
or
cmp
mov
push
test
pushl
into
stos
push
movsb
popf
adc
mov
or
jns
add
add
xorl
inc
outsl
in
orl
sub
divb
sbb
cli
jb
out
in
or
ffree
sbb
test
inc
inc
dec
cmp
xchg
cmp
add
stos
and
or
dec
hlt
call
and
mov
imul
sub
jns
fistps
faddl
test
movsb
roll
insb
insb
loope
and
addr16
and
mov
pop
jno
sbb
roll
pop
xor
in
pop
xchg
jbe
sbb
loope
sbb
mov
inc
mov
popw
cwtl
movsb
std
xchg
aaa
push
xchg
je
sarb
cmp
jne
dec
or
jl
lret
push
cmpsb
lret
xchg
cmp
mov
scas
pop
mov
mov
mov
jne
add
icebp
xlat
ds
in
adc
xlat
sarl
mov
pushf
clc
mov
and
es
repnz
push
or
out
xchg
mov
xchg
adc
mov
lahf
popl
out
mov
std
mov
ss
jecxz
or
loope
dec
filds
sbb
or
sbb
in
lahf
popa
popa
jb
xchg
jg
int3
push
push
out
add
cmpsb
or
cli
mulb
push
stos
pop
xchg
frstor
xor
shll
add
mov
outsb
std
js
or
push
ret
cltd
xor
aas
fwait
in
jo
call
ficoms
aaa
adc
dec
filds
lods
add
lahf
push
mov
adc
dec
repnz
jmp
ret
and
dec
cmp
lea
sbb
pop
xchg
int3
aad
pop
inc
sbb
mov
or
xchg
xor
jl
leave
inc
push
sti
movsl
and
jmp
push
sarl
push
sti
xchg
ret
hlt
and
jmp
add
sub
out
out
inc
out
sti
or
es
out
lahf
or
outsb
loop
cmp
inc
aad
sub
movsl
imul
ret
clc
sub
fidivl
pop
xchg
xchg
cmp
cmp
fisubs
js
mov
js
sub
div
cmp
loope
jmp
push
mov
mov
xchg
addl
into
cld
jp
add
jecxz
and
mov
fmuls
xchg
xor
ret
nop
push
or
clc
add
add
push
in
leave
bnd
mov
pop
push
outsb
xchg
addr16
jae
and
into
mov
and
mov
js
sbb
pop
outsb
jb
jg
xchg
push
mov
loop
fcoms
or
mov
orl
or
sub
repz
cmpsb
jmp
push
xchg
out
mov
pop
add
fs
xchg
mov
sub
sbb
scas
cwtl
iret
adc
mov
test
jg
icebp
andl
cld
dec
insl
shl
out
sub
pop
addb
pop
mov
jecxz
out
std
mov
xchg
push
sub
test
aam
int
or
lea
mov
push
xlat
mov
icebp
shl
mov
or
inc
jecxz
xor
out
xchg
sub
dec
xor
jmp
xchg
imulb
in
mov
jle
iret
ds
lahf
sti
pop
add
testl
sbb
icebp
pop
cwtl
add
push
int
dec
testl
mov
push
bound
jle
add
je
inc
mov
sbb
iret
cmp
sbb
rorl
push
adc
int
icebp
in
daa
pusha
inc
mov
leave
aad
test
and
push
jg
push
shll
mov
and
or
pusha
scas
sbb
mov
test
jae
dec
and
xor
pusha
ret
cmp
test
lock
cmpsb
iret
xchg
and
inc
pop
stc
in
nop
shll
pop
adc
test
popa
push
mov
mov
dec
sub
popf
outsb
or
push
rorl
xchg
aas
jmp
int3
pop
mov
lock
lods
cmp
js
rcr
adc
enter
fdivrp
and
iret
or
mov
shrb
push
push
xchg
push
pop
stc
popa
test
fs
sbb
and
sub
mov
fs
cmpsb
xor
mov
sbb
fsubrl
sbb
ja
mov
lods
lods
mov
xchg
int3
fsts
lods
pop
cltd
mov
xchg
push
cmp
int3
enter
mov
mov
scas
cmc
js
in
dec
cli
mov
mov
ljmp
xchg
sub
mov
dec
arpl
fs
jmp
pop
lea
popf
mov
push
adc
sub
imul
aaa
adc
int
clc
add
mov
adc
cmp
push
mov
jge
ljmp
jb
out
cmpsb
and
mov
mov
dec
push
push
cmp
popa
mov
repnz
mov
imul
orl
in
mov
ret
jg
aad
inc
cwtl
pop
xchg
sti
pop
cmpb
std
dec
pop
loope
fs
jmp
cli
cmp
cli
sub
xlat
pop
mov
mov
mov
mov
pop
in
push
and
idiv
xor
push
lock
jno
cmp
push
mov
mov
push
mov
and
int
mov
mov
mov
sbbb
out
pop
addr16
push
mov
mov
dec
scas
push
adcl
mov
xlat
icebp
mov
push
and
outsl
push
dec
pop
mov
xor
std
pop
xor
in
movsb
pushf
push
int
jne
pop
shl
cmc
cmp
pusha
inc
xor
and
cmp
hlt
pushf
loope
jg
in
es
dec
stos
pop
sub
in
mov
in
cmc
adc
xchg
xchg
gs
test
jge
lods
fldenv
mov
es
repnz
xchg
pushf
fisttps
fbstp
dec
idivl
data16
xchg
mov
mov
arpl
xchg
push
cmc
xchg
int3
xor
loop
jbe
xchg
xlat
lods
inc
bound
stos
cmc
stc
adc
data16
jae
les
xchg
lahf
sbb
fst
cmp
pop
into
mov
outsb
sahf
adcb
out
cld
mov
les
cmc
mov
adc
mov
pop
nop
pop
add
cmp
nop
mov
lahf
or
xor
xor
xchg
out
insb
xor
xor
mov
enter
les
adc
es
andl
lret
cmp
and
je
pop
sbb
jecxz
xor
add
sub
push
sbb
cld
xchg
jmp
lcall
xchg
lds
dec
pop
stos
mov
fidivrs
push
out
mov
dec
jp
imul
push
andb
lahf
mov
call
pop
pop
fsubl
pushf
mov
pop
sbbl
daa
pand
call
pop
ret
or
je
out
cs
fwait
sub
mov
idivb
inc
push
shll
fnstsw
dec
cmp
repnz
xchg
andb
mov
xchg
pop
mov
gs
test
sti
int
jge
pop
mov
lcall
or
loop
inc
mov
cli
xchg
test
sub
sbb
mov
outsl
icebp
fbstp
ds
or
jbe
jno
std
iret
push
js
cli
and
dec
scas
push
aam
adc
adc
stos
dec
push
mov
out
adcl
mov
test
in
dec
std
jp
adc
lahf
sahf
xor
rcll
scas
jle
cli
inc
jns
fcoml
arpl
xchg
pop
push
inc
xchg
push
dec
test
in
mov
add
inc
mov
es
xchg
dec
stc
es
xchg
pop
cmp
imul
fsts
ss
enter
dec
pop
mov
mov
lods
stos
dec
enter
pop
arpl
in
scas
xor
mov
lods
aad
lret
push
xchg
adc
xchg
cmpsl
xlat
pop
dec
cli
cmc
ljmp
pop
sti
xchg
ds
popa
mov
mov
int
pusha
and
jle
jg
xor
xor
repz
sub
xchg
insl
loop
lds
loop
mov
ret
cmp
sbb
cmpsl
sti
icebp
jno
cld
sahf
and
pop
gs
das
push
and
mov
roll
lcall
pop
pop
jo
pushf
inc
arpl
ja
in
mov
dec
xchg
dec
clc
fcmovnb
dec
fdivl
and
leave
test
xchg
sbb
nop
ss
repz
xchg
or
mov
popa
mov
clc
loopne
movsb
inc
cmp
dec
jo
mov
movsb
lods
add
cmp
cmp
sub
mov
jno
add
lds
pop
je
jle
scas
pop
repz
sbb
scas
push
cmp
cmp
xor
xor
mov
out
insb
data16
adc
xor
xor
mov
enter
ret
inc
stos
pop
insl
cwtl
sub
jae
xchg
insb
xlat
mov
out
and
movsb
jge
xor
push
pop
jmp
adc
push
negl
or
roll
ret
xor
sti
pop
adc
push
aas
push
in
lcall
test
test
push
fisttps
ljmp
lret
lret
pop
cmpl
or
mov
mov
add
test
mov
cmp
sbb
jl
std
inc
outsl
fwait
mov
mov
les
xor
dec
es
sub
iret
fstpt
xor
fcomip
imul
jmp
lds
jae
inc
insb
mov
and
enter
shll
paddq
adc
mov
gs
pop
test
mov
push
fucomp
mov
inc
or
mov
sub
mov
in
mov
lods
mov
and
mov
mov
inc
inc
fwait
mov
xor
xchg
clc
outsb
inc
je
mov
sub
data16
pusha
mov
mov
mov
shlb
into
xchg
cltd
gs
or
and
nop
incb
sti
sub
cmp
and
mov
pop
je
jge
dec
sub
inc
and
pop
mov
int3
lcallw
cmp
lods
pop
jecxz
pop
xor
cmp
pop
fnsave
fisttpll
pushf
test
call
dec
leave
cwtl
imul
out
inc
xchg
fisttpll
sub
lods
mov
mov
loop
fisttps
addb
mov
addr16
inc
pop
stos
adc
jge
jo
adc
lahf
jecxz
ret
sbb
dec
jl
dec
jl
les
add
xchg
ficomps
aaa
jbe
push
pop
fsubrs
scas
ds
test
and
adc
outsl
divb
repnz
inc
ffreep
dec
shll
insl
and
cli
out
push
cmp
push
pusha
ljmp
push
sub
jno
fs
cwtl
inc
fstl
pop
sbb
aad
cmp
push
imul
scas
add
imull
adc
lods
jbe
sbbb
pushf
and
out
call
cmp
jg
arpl
jecxz
testl
mov
lods
pop
xor
inc
pop
xchg
inc
mov
cmp
and
and
sbb
cmp
xchg
cmp
and
shl
mov
cmp
or
push
jae
adc
mov
cltd
mov
repnz
or
dec
test
dec
push
mov
lock
loop
pop
dec
xlat
loop
sub
pushf
dec
outsl
sti
aad
addr16
loope
pop
cmpsl
filds
jbe
rcr
adc
jle
mov
mov
push
mov
sub
stos
mov
dec
mov
inc
pusha
pusha
xchg
pop
mov
xchg
cmp
lret
mov
mov
pop
xchg
imul
out
mov
xchg
cmpsl
aam
clc
push
test
push
jle
lock
in
add
imul
xchg
mov
fdivl
lods
scas
mov
ljmp
pop
cltd
sub
das
fdivp
jno
jo
add
je
sub
push
jae
cmp
fsub
loopne
clc
lock
lods
jmp
dec
jo
frstor
inc
out
dec
push
mov
pop
xchg
adc
sbb
scas
filds
pop
push
jbe
and
sti
repz
push
movsl
movsl
leave
sbb
outsl
lret
mov
cmp
cltd
stos
fbld
and
cmc
mov
stos
xlat
inc
cmpsb
test
insl
mov
and
imul
aaa
dec
and
popa
mov
sarb
sbb
fisubs
cld
pusha
and
mov
inc
or
iret
hlt
ljmp
movsl
data16
lret
ja
sbb
ja
js
lahf
or
scas
stos
sbb
popa
les
fmull
pusha
xchg
popa
in
pop
jo
test
sbb
sbb
jns
jb
es
mov
repnz
out
sub
xorl
sbb
sub
dec
push
cmpsb
mov
mov
clc
and
adc
fcoms
fdivp
mov
outsb
inc
mov
xchg
imul
inc
push
ffreep
add
xor
sahf
aas
fmuls
mov
push
jle
fwait
lods
pop
cld
stc
sub
xlat
stos
or
mov
push
sti
pop
lds
mov
jg
inc
hlt
icebp
insb
or
inc
out
ret
shrb
fstpl
out
or
cmc
jo
loop
mov
je
mov
sub
xchg
pop
or
sbb
lret
add
xchg
push
inc
ret
iret
fidivrl
jo
fadds
sti
fadd
pop
push
aaa
test
push
leave
inc
add
ret
sti
lret
rcrl
call
sub
and
popf
adc
inc
push
xchg
and
inc
scas
mov
in
ficoml
sbb
aas
cld
test
pop
dec
jp
lahf
add
lcall
bound
or
adc
mov
mov
mov
lret
push
testl
in
push
mov
test
and
filds
sbb
sbb
jl
ret
inc
fldlg2
push
inc
sarb
ret
shrb
dec
stc
push
int
add
aam
sub
xchg
aam
lahf
nop
push
aas
bound
inc
cli
and
mov
insb
sbb
inc
icebp
pop
adc
push
push
sub
clc
fsts
std
xor
jnp
and
jle
adc
and
sub
ret
pop
int3
cmp
adc
adc
mov
cmp
inc
xlat
jp
mov
pop
cmp
fwait
shrl
inc
sbb
jle
jnp
pop
adc
ljmp
lahf
add
in
mov
mov
push
orb
cmp
jl
test
xchg
push
daa
lcall
mov
cld
dec
push
push
lcall
aad
or
mov
enter
loopne
lar
or
cmp
lock
enter
sti
popa
loop
add
fists
jae
adc
jne
je
add
rolb
push
cld
mov
out
jne
cmp
fisubl
testb
jbe
lock
mov
in
shrl
mov
cli
jl
out
andb
les
mov
inc
pop
into
inc
push
or
and
dec
xchg
jecxz
mov
jle
cmp
pop
xchg
ss
adc
cmp
sub
icebp
das
pop
pop
scas
adc
cmpsb
popf
insb
xchg
pop
push
mov
ret
and
and
je
pop
xchg
mov
outsl
insb
adc
pushf
or
pop
cmp
dec
bound
cwtl
imul
scas
adc
jno
dec
xchg
or
lds
idivl
pop
imul
test
test
popf
aam
cmp
test
pop
lcall
stos
mov
cwtl
js
stos
mov
jl
sbb
xor
lret
ljmp
rcl
lret
mov
cmpsl
pop
stos
cmc
mov
out
popa
and
shrl
mov
or
fistpl
lods
push
ret
or
jno
fcoms
arpl
push
js
cwtl
jl
push
mov
lret
xchg
push
dec
add
xor
or
mov
jp
cs
push
cmp
pop
stos
shll
jmp
fmul
dec
das
mov
jo
imul
add
cli
push
mov
cmp
insl
sbb
mov
mov
jle
rolb
cmp
cmp
inc
pop
insb
sbb
ds
out
lret
mov
mov
xor
pop
cmpsb
ss
imul
adc
ficoml
push
mov
in
test
setno
lods
and
push
lods
das
stos
dec
add
xor
pop
lcall
scas
push
push
iret
mov
lea
out
fdivrp
div
jl
dec
nop
mov
add
and
jne
push
imul
nop
mov
add
addb
mov
int
popf
sub
push
sub
pop
mov
cmpsb
mov
mov
xchg
outsl
mov
popa
sbb
stos
addl
xor
mov
push
ljmp
pusha
imul
test
and
lcall
jge
or
test
mov
push
add
cmp
add
lock
jp
and
out
mov
pop
movsl
shrl
xchg
push
mov
and
cmp
sub
cmp
xchg
pop
mov
in
mov
jne
push
lret
xorl
ljmp
mov
cltd
push
mov
mov
aaa
xchg
test
push
mov
aaa
xor
adcb
shl
hlt
mov
pop
jecxz
sub
or
push
adc
push
mov
dec
insl
ret
sub
xchg
lret
dec
xor
scas
enter
out
cltd
dec
mov
fwait
pop
xchg
popa
scas
add
rcrb
cmp
cmp
movsb
and
in
jmp
or
cmp
jno
cmp
push
loopne
jmp
lods
in
jge
dec
cmp
cld
xor
mov
mov
into
into
test
outsl
pusha
vmovdqa
dec
inc
fstpl
push
add
lahf
xorl
push
test
pop
ret
jecxz
inc
and
push
mov
sub
xchg
push
jle
mov
jge
gs
push
fs
out
popa
add
cmp
xchg
xor
add
js
imul
fwait
adc
adc
cmp
stos
ret
ret
pusha
xchg
pusha
push
scas
popl
pop
jp
push
mov
iret
call
hlt
cmc
inc
xchg
mov
rcrl
dec
les
mov
loopne
cmpb
push
in
cltd
out
and
push
xchg
out
fcoml
pop
sub
jmp
cmp
sub
jnp
mov
cmp
aaa
inc
adc
sbb
jbe
push
xor
out
and
out
xchg
jo
stc
cld
mov
pop
xchg
hlt
leave
cmp
cmp
adc
and
dec
das
pop
push
xor
pop
xchg
les
mov
sub
fcomps
jge
pop
cmp
adc
std
xlat
xor
hlt
sbb
imul
cmc
nop
into
andl
or
jnp
mov
adc
sbb
hlt
or
fmuls
push
rcrb
imul
jae
or
push
sub
mov
movsl
dec
mov
push
xor
sub
mov
movsb
xchg
out
sbb
dec
pop
adc
dec
or
icebp
inc
test
sbbl
adc
sub
adc
jle
mov
xchg
inc
dec
xchg
sub
mov
cs
in
adc
popf
xchg
mov
xchg
push
movsl
add
out
into
xor
pop
cld
cwtl
mov
inc
or
sbb
xchg
enter
add
shrb
cli
cmp
es
and
lcall
push
lahf
add
movsl
mov
out
scas
sbb
mov
outsb
imull
jle
loopne
dec
cmpsb
je
sub
and
enter
or
mov
inc
scas
pop
adc
xor
gs
mov
cmp
ja
test
movsl
insb
sub
out
repnz
andb
mov
popf
in
decb
fs
subl
shll
push
loop
rclb
xorb
scas
jo
cmp
sbb
dec
bound
adc
aad
xchg
or
test
aas
scas
and
push
jp
arpl
mov
mov
mov
insb
bound
aad
cmp
out
and
or
icebp
lret
ds
sub
pop
popf
stos
loopne
cmp
jnp
fiaddl
mov
inc
mov
dec
xor
in
xor
mov
add
sahf
outsl
divl
mov
insb
scas
mov
sub
inc
dec
aad
out
fnsave
int
lcall
dec
insb
ror
aas
sub
mov
cmp
sbb
call
sub
mov
jne
fimull
shrb
pop
dec
pop
insb
jle
adc
aam
sub
adcb
xor
mov
xchg
jno
and
jb
xor
mov
in
pop
stos
sub
orb
stos
jle
popa
sub
cmp
jmp
sub
out
xor
xchg
andl
sub
mov
aam
mov
sti
jle
fldenv
cmp
adc
pop
mov
mov
pop
dec
sub
inc
lcall
hlt
mov
inc
aam
rcrl
sub
inc
ss
add
cmp
pusha
out
push
mov
in
scas
or
xchg
pop
test
push
xchg
cmc
ljmp
rclb
dec
hlt
fld
inc
test
addl
imul
or
into
call
jg
test
inc
pop
cltd
jns
mov
scas
cmp
rcrb
mov
jmp
mov
js
inc
repz
mov
mov
inc
mov
in
out
push
cltd
bound
scas
in
jle
jge
and
sub
fldt
aam
gs
push
cmpsb
inc
mov
push
repz
xor
mov
bound
xchg
pop
lods
test
in
test
cmp
out
xor
out
stos
outsl
push
std
cld
movsl
push
sbb
jl
mov
pop
xchg
lahf
outsl
fisubrl
dec
rclb
xor
jbe
push
ja
mov
lret
mov
pop
mov
jmp
push
jge
test
pusha
popa
insb
into
sub
in
mov
and
jbe
shll
scas
stc
into
cmp
ljmp
xchg
push
inc
and
push
jmp
cmp
addb
cmp
add
stc
mov
pop
dec
push
jg
mov
jns
bswap
mov
add
mulb
pushf
and
or
jnp
mov
and
adcl
sub
fsubl
mov
test
pop
fstps
mov
cmp
test
dec
and
fists
mov
pop
inc
test
imul
js
add
out
sbb
jo
cmp
lret
xchg
xchg
xorl
mov
jmp
xor
xorb
pop
sub
mov
dec
jno
outsl
sbb
pusha
jno
sbb
into
inc
gs
lcall
pop
dec
adc
xor
std
les
jb
in
mov
das
and
stos
xchg
cmp
ss
or
sbb
and
and
pop
or
enter
les
lds
jo
fwait
dec
movb
sar
loopne
pop
cmpsl
mov
popf
inc
sahf
daa
pop
mov
inc
cmp
mov
jl
and
stc
les
into
xchg
jmp
sbb
cs
sub
pop
in
loope
xorl
pop
inc
inc
jbe
imul
int3
jle
fninit
repnz
rdtsc
je
mov
pop
dec
pop
adc
jle
push
rclb
mov
add
mov
sub
in
icebp
mov
sub
push
jae
mov
dec
adc
cli
and
add
mov
js
adc
mov
cmc
sub
jecxz
jo
mov
adc
sub
xorb
aas
xor
pushf
xor
push
fstps
and
mov
xchg
iret
cwtl
pop
inc
push
shl
aad
xchg
ss
mov
getsec
xor
push
lds
in
cwtl
aam
ljmp
jae
lret
push
lods
pushf
cmp
mov
push
push
fwait
or
pavgb
je
iret
xchg
ret
cmp
das
das
loopne
test
jo
and
stc
xchg
data16
lods
mov
adcl
push
cmc
aam
jne
sbb
je
cmp
fcompl
lcall
lds
xor
rcll
push
pop
test
popa
jmp
cmp
pop
nop
dec
jbe
inc
shrl
repz
add
cmc
push
or
loopne
dec
mov
add
fisttpll
and
or
pop
jecxz
mov
pop
mov
fwait
imul
ja
and
mov
ljmp
shrb
xchg
call
ror
in
mov
imul
fsubrs
mov
jp
lret
xchg
aas
mov
popf
cmp
xor
push
out
push
aas
leave
imul
fisubl
adc
push
add
mov
and
pusha
mov
push
cmpl
pop
in
lock
jge
push
cmp
add
inc
lods
addl
popa
gs
lods
push
pop
mov
add
pop
adc
insl
mov
mov
popf
mov
in
in
or
out
cs
mov
adc
push
mov
or
and
pop
pusha
xor
mov
push
xchg
fwait
dec
imul
cmc
mov
pop
push
jo
jle
imul
cmc
jnp
cld
stos
pop
mov
neg
mov
js
popa
loopne
loope
xchg
out
test
xchg
sbb
mov
sbb
lcall
cmp
jecxz
les
and
dec
dec
movb
fldl
outsl
mov
xor
xchg
ljmp
cwtl
out
decl
jl
lahf
ret
je
adc
outsb
fstl
sub
mov
xlat
jecxz
mov
jle
sbb
rcrl
das
jns
out
mov
addr16
inc
cmpsb
sbb
imul
das
aas
cmp
mov
f2xm1
adc
xchg
sub
and
or
push
roll
cmpsb
inc
insb
lret
xchg
add
pop
shrb
mov
test
fs
aam
dec
mov
imul
insb
mov
inc
mov
andb
sbb
lods
je
test
push
sbb
push
movsl
test
cs
lret
aad
inc
push
pop
mov
pop
insl
jo
cmpsb
fcoml
ret
insb
dec
or
xchg
xor
aaa
sbb
adc
fcomps
and
data16
pop
xchg
cmp
push
sub
cmp
mov
sbb
outsl
in
pop
or
dec
jnp
jmp
inc
mov
setne
insb
push
add
lret
out
cmp
cmp
aam
push
jp
in
lcall
hlt
and
jecxz
insl
fnsave
jno
add
sub
call
popf
jecxz
pop
rolb
std
pop
jno
xchg
inc
dec
jp
rorl
loopne
in
jo
rcll
fs
or
icebp
lahf
and
jnp
cmc
dec
or
in
and
xor
lds
out
pop
fs
mov
mov
fcmovu
pop
pop
sbb
or
adc
aam
mov
fsubrp
jmp
push
mov
cwtl
push
pop
in
inc
mov
in
xchg
jae
pop
pushf
roll
aad
lea
dec
loope
adc
pop
in
in
dec
lods
outsb
lea
and
mov
cmp
inc
jp
pusha
mov
lret
lds
dec
push
pop
push
cmpxchg
dec
mov
inc
fistpl
inc
push
cmpsb
inc
mov
fcoms
pop
mov
aas
inc
insl
inc
pop
inc
jle
ds
jmp
push
mov
jo
pop
aad
pop
scas
mov
in
xchg
xor
sub
push
mov
or
mov
pop
lods
pop
xchg
mov
sbbb
cld
in
adc
add
cmp
mov
sub
cmp
test
xchg
dec
jb
dec
es
adc
lock
test
and
inc
adc
in
fisubrs
xor
sub
in
pop
icebp
adc
xchg
xchg
push
pop
cmp
faddp
pop
shll
xchg
jnp
push
pop
lahf
out
pop
pusha
ss
sub
call
rsm
jmp
bound
sub
adc
sbb
icebp
fcoml
fcoml
out
dec
shlb
out
mov
arpl
les
cmp
dec
stos
into
or
cli
pop
and
jecxz
testb
iret
ficompl
jbe
xlat
xchg
adc
insb
movsb
hlt
lds
and
fcmovne
shlb
into
sti
ret
push
mov
mov
ja
int3
out
xor
or
out
aas
jb
pop
cmp
jbe
mov
cwtl
cmpsl
lods
xor
lods
addl
iret
repnz
xor
pop
cs
cli
int
add
sbb
cli
xor
sbb
out
in
daa
in
fimuls
rorb
jne
mov
sub
or
js
repz
pop
sbb
cmpsl
js
loope
mov
enter
cmpsb
or
ljmp
inc
loope
pushf
mov
cmp
push
xchg
int3
mov
pop
int3
xlat
push
aaa
xor
mov
push
lock
popa
cmp
add
dec
loopne
js
push
and
mov
aad
fwait
dec
mov
test
lds
mov
jbe
movsl
adc
mov
sub
data16
xchg
push
pop
add
dec
push
push
lds
out
pushf
shrl
ret
xor
sti
pop
test
jo
xchg
call
daa
out
sti
inc
in
push
enter
and
scas
push
jg
mov
fs
jno
sahf
jecxz
dec
push
cs
or
adc
movsb
xor
int3
or
mov
jmp
adc
pop
pushf
and
adc
xchg
sbb
mov
mov
or
jb
mov
int3
pop
pop
adc
loope
inc
pop
or
xorl
aas
xchg
imul
jae
hlt
lcall
outsb
icebp
out
jo
out
sbb
dec
das
and
aam
xchg
jle
jecxz
and
mov
imul
add
xchg
pushf
movsl
sub
in
add
imul
jb
es
popf
dec
jge
rcrb
dec
and
dec
ja
cli
mov
push
mov
mov
mov
bound
pushf
lret
xor
stc
jnp
shl
mov
ja
xchg
insl
mov
fcmovnbe
pusha
fldcw
or
push
int3
adc
call
pop
loope
mov
jmp
aaa
roll
andb
loopne
or
mov
jp
ret
sbb
int
mov
mov
mov
call
mov
hlt
or
cmpl
test
xor
push
addb
xchg
add
jno
add
cmpsb
scas
js
in
insb
and
aam
incb
add
jnp
hlt
movsb
test
push
mov
loop
ret
pusha
mov
adc
cwtl
aaa
mov
and
sbb
cs
dec
and
cltd
test
cmpsl
lds
mov
cli
mov
mov
add
inc
mov
into
mov
popa
in
xor
enter
mov
mov
adc
pop
xor
outsl
dec
pop
push
out
pusha
xchg
test
dec
insb
movsb
aad
push
mov
lods
in
and
cltd
adcb
push
fsubs
dec
mov
aaa
mov
cwtl
mov
std
cmp
adc
adc
test
dec
in
lcall
add
stos
mov
push
jns
push
mov
popa
adc
cmpsb
clc
into
hlt
jbe
jb
adc
aam
add
fwait
pushf
jle
push
and
mov
and
push
aaa
icebp
add
mov
adc
push
xchg
inc
push
sub
cmc
jo
pop
subl
push
jge
jg
push
jge
jne
movsl
mov
mov
punpckldq
in
movsb
xchg
or
mov
xchg
dec
mov
mov
jl
notl
clc
cltd
shrl
cmp
mov
inc
xor
in
movsb
jge
dec
call
add
js
outsl
pushf
add
add
mov
push
mov
adc
push
dec
push
leave
ret
clc
xor
adc
adc
mov
jne
sub
subb
pop
or
movsb
in
xchg
add
xchg
orl
cwtl
cld
int
stos
fiaddl
popf
jne
mov
mov
repz
stos
fwait
mov
cmp
pop
dec
lea
sahf
xor
push
sbb
into
jl
dec
testb
shlb
adc
or
pop
sbb
pop
sub
adc
aas
in
aad
dec
sbb
and
push
pop
or
inc
inc
push
cltd
push
or
mov
jg
std
sbb
pop
repnz
loop
fmuls
or
pop
mov
stos
inc
leave
xor
aam
dec
mov
stos
mov
xchg
jle
pop
loop
andb
fwait
push
decl
mov
mov
push
lock
xor
sub
out
and
mov
popa
cmp
pop
in
and
xor
push
sub
mov
roll
mov
sub
push
notb
lods
push
lahf
adc
mov
jns
add
xchg
jnp
pop
in
test
jmp
scas
inc
call
jb
fisttpl
movsb
inc
add
lock
cmpsl
pop
jne
hlt
jp
dec
xor
in
divl
rcrl
scas
int3
inc
pushfw
loopne
add
call
push
sub
aas
sti
test
ja
es
jge
mov
push
mov
pop
adcb
outsb
cmp
jecxz
inc
lcall
push
mov
popa
das
shll
icebp
pop
push
adc
inc
inc
inc
mov
push
enter
lcall
cmpsl
aaa
xchg
and
push
mov
shrl
push
jno
add
fwait
pusha
xchg
xchg
test
in
mov
shlb
mov
rcrl
mov
scas
dec
outsl
bound
cmp
ljmp
stc
push
push
mov
lahf
and
rorb
movsb
or
cmp
lods
sbb
movntq
mov
dec
fidivs
imul
test
add
leave
dec
pop
adc
mov
add
cmpsb
push
pop
int
notl
rorl
jae
push
xchg
test
push
cmp
dec
test
inc
xchg
mov
inc
pop
cmp
jge
or
jl
xlat
push
lock
fwait
adc
push
dec
in
cmp
cmp
sar
mov
or
fs
mov
mov
push
sub
sbb
addb
test
jo
and
add
aas
mov
popa
pause
scas
in
and
leave
dec
cmp
stos
test
cmp
push
sarb
push
insb
pop
test
test
sub
mov
std
xchg
sahf
adc
fstp
pop
jle
add
adc
int3
adcl
arpl
outsl
mov
pop
add
mov
pop
insb
sahf
je
loope
dec
xchg
das
mov
push
not
pop
mov
mov
enter
out
dec
test
inc
jle
sub
cmp
std
imul
mov
cmp
mov
mov
xor
push
in
push
fsts
loopne
les
push
ja
faddl
mov
outsb
fnstsw
dec
test
jp
xchg
mov
dec
push
xchg
or
out
cmp
adc
or
daa
lret
mov
stc
fistpl
inc
or
das
mov
mov
repnz
cmc
xchg
into
std
gs
lods
mov
icebp
ljmp
icebp
out
push
cwtl
cmpsl
adc
adc
xor
jbe
xchg
push
insl
mov
ss
inc
cli
add
adc
push
push
pop
je
jecxz
xchg
sub
aad
xchg
int3
imul
xchg
mov
inc
inc
pop
arpl
xchg
leave
push
nop
out
loopne
fs
ljmp
jno
bound
aaa
dec
test
dec
das
jl
inc
dec
push
add
dec
xchg
inc
insb
aad
inc
cmp
les
pop
and
scas
cwtl
fdivr
pop
dec
lea
out
mov
adc
inc
lret
aas
add
std
adc
fidivs
push
cmp
sub
pusha
aad
paddb
sub
push
shlb
test
jg
stos
lods
add
pop
mov
sbb
cli
popf
fimuls
mov
jno
adc
push
cmc
fdivl
xor
out
js
xchg
adc
sbb
mov
mov
dec
filds
sarl
cmpl
sbb
iret
ja
mov
out
loop
and
into
lcall
adcb
mov
mov
sahf
dec
out
jp
mov
xchg
out
ss
jne
test
test
outsb
rolb
push
mov
enter
and
inc
incb
xchg
iret
shll
add
cmp
mov
push
jne
and
jnp
ret
xor
inc
jns
jns
lret
mov
lret
adc
scas
ljmp
fs
push
jae
mov
mov
cmp
sbb
push
inc
mov
movsb
pop
jl
sub
popf
mov
out
loop
lds
mov
inc
iret
in
clc
outsl
sub
subl
push
or
lret
pop
lock
aas
xchg
mov
fisubrs
or
mov
add
push
dec
pop
xchg
mov
dec
test
cwtl
scas
xor
roll
jne
and
imul
add
mov
in
cmp
push
rorl
sbb
fimuls
ja
nop
adc
fisttpl
mov
push
dec
mov
sub
mov
xlat
add
dec
mov
pop
movsb
adc
lcall
pop
pushf
xorb
pushf
idivb
xchg
out
ljmp
xlat
shl
dec
sar
sub
orl
daa
or
ss
sub
ljmp
shr
sub
or
iret
lock
xchg
out
inc
or
push
enter
pop
test
jp
inc
sbb
mov
mov
mov
jge
int3
je
adc
push
ds
push
nop
xor
and
mov
pop
push
pushf
jl
dec
mov
repz
or
pop
and
xchg
push
cmp
scas
test
fisubrl
push
jns
pushf
in
jg
push
xchg
push
clc
cwtl
fmull
mov
push
sbb
sbb
out
push
jp
outsb
les
jno
call
push
js
pop
push
dec
mov
stos
sub
lret
sbbl
cmp
pop
jne
inc
mov
in
lods
xchg
add
lods
mov
dec
int3
dec
push
xchg
into
lret
sub
mov
or
mov
stos
mov
xor
push
movsb
push
and
sub
pop
cli
push
outsb
lods
xor
mov
or
fiaddl
mov
add
xchg
iret
bound
insl
fstpl
sub
jbe
push
scas
and
push
jae
add
xchg
mov
push
pop
sub
icebp
pop
jno
jns
repz
cli
sub
add
sub
rorl
xchg
lods
lods
lret
lret
push
arpl
or
inc
xor
ljmp
mov
fidivs
push
pop
mov
dec
add
add
push
adc
data16
inc
test
hlt
push
jo
aaa
or
scas
push
xor
xor
lds
mov
jae
push
pop
scas
xchg
iret
push
leave
dec
imul
out
jnp
mov
mov
jb
push
data16
insl
xchg
mov
sbb
jns
inc
int3
mov
sbb
lea
cld
mov
pusha
xor
mov
add
int
mov
cmp
mov
mov
mov
ja
push
stos
mov
inc
inc
nop
adc
cs
in
nop
or
out
xor
dec
je
adc
fwait
inc
and
xor
orb
jle
mov
out
mov
stc
repnz
mov
inc
mov
and
pop
dec
cltd
mov
in
push
add
and
dec
imul
xlat
mov
loopne
sub
stc
lods
jecxz
and
jne
bound
ja
arpl
orb
cltd
adc
mov
mov
out
mov
outsl
lea
mov
push
push
stc
stc
xor
cmp
xchg
jno
or
dec
jl
xor
pop
cwtl
add
movsb
mov
adc
sbb
sub
xor
jbe
cmpl
push
outsl
push
jmp
fnstsw
pop
pop
pop
xor
cmpsl
or
cmp
outsb
push
mov
inc
rcrl
mov
andb
cmp
data16
dec
aad
mov
or
mov
lret
pop
jge
dec
xor
or
jae
xor
mov
imull
pushf
mov
decb
jns
push
xor
mov
inc
sbb
scas
adc
cmp
add
aas
mov
and
sbb
insl
inc
inc
mov
test
mov
in
sbb
rclb
xor
mov
and
js
scas
mov
sbb
loope,pt
dec
mov
adc
jg
mov
pop
or
dec
fbstp
cs
negl
out
sti
inc
lds
mov
mov
cltd
gs
and
out
outsb
fbstp
push
in
movl
loop
js
add
adcl
in
xchg
add
cmpb
inc
daa
jo
pop
std
sti
int
scas
push
xor
adc
inc
cli
loop,pn
iret
add
jo
shl
mov
testl
outsl
inc
clc
dec
pusha
adc
mov
popl
add
and
dec
pop
xchg
idiv
add
cmpsl
stc
adc
add
fnstsw
pop
pop
leave
cmp
scas
adc
or
popf
rol
lea
jnp
mov
gs
adc
sbb
enter
fmull
jae
in
out
mov
dec
sarb
out
mov
sub
ret
sub
out
cmp
mov
add
outsb
lock
pop
sbb
test
fiadds
add
or
fwait
xor
or
or
xor
push
repnz
in
pop
dec
jge
sbb
stc
lods
jp
mov
js
stc
add
test
repnz
ror
arpl
fidivrs
adc
notb
dec
notb
add
dec
fdiv
popf
inc
ffree
imul
aaa
stos
jno
sub
sarb
cwtl
ret
push
pop
add
pop
xchg
mov
add
sbb
sti
cmc
cmp
imul
imulb
jnp
mov
and
add
sub
push
jge
in
dec
mov
cld
cmpsl
or
or
mov
clc
fidivrl
jecxz
mov
xchg
mov
je
push
sub
xchg
xchg
ljmp
cld
jle
inc
push
and
or
adc
mov
add
movsl
mov
cmpsl
pop
mov
push
adc
jge
pop
jg
mov
xor
rorb
popf
aaa
mov
movsl
mov
imul
add
mov
cli
sbb
repnz
data16
dec
lahf
sub
push
add
adc
out
or
std
cmpsl
pop
or
dec
xchg
mov
aaa
inc
out
mov
es
repnz
mov
jecxz
jecxz
and
push
push
inc
rol
xchg
mull
sbb
jg
xchg
or
imul
xor
jecxz
in
aas
mov
fldcw
fdivrl
cmp
mov
daa
or
into
sti
jle
xchg
dec
aad
test
sti
loope
mov
rcll
loopne
sbb
stos
movmskps
test
ret
sbb
pop
or
xchg
jge
push
test
enter
int
ret
int3
mov
insl
adc
xor
xor
dec
daa
les
and
pop
adc
lahf
adc
popa
pop
neg
stc
lret
test
add
xor
es
cmp
leave
pop
xchg
or
ret
inc
into
sbb
lahf
xchg
call
push
xchg
pop
out
add
int3
jle
and
dec
nop
inc
fsts
lret
mov
repz
ffree
pop
add
mov
sbb
in
or
shrl
pop
and
dec
add
inc
outsb
jbe
pop
lods
inc
mov
jl
cld
jns
or
hlt
sbb
call
and
cmpsb
push
mov
cmp
pop
push
inc
je
push
in
loop
fidivl
inc
xchg
jmp
jg
loop
push
fdivrs
movsl
xchg
cmp
push
shr
sahf
hlt
sbb
gs
inc
rorl
dec
ret
das
aad
mov
dec
cmpsb
xor
dec
fwait
or
sti
call
cmpsb
jbe
push
fwait
aad
nop
pop
je
pusha
sarl
dec
add
and
mov
mov
adc
pusha
add
call
clc
mov
gs
es
xor
outsl
mov
push
jnp
push
bound
cmpsl
mov
movsb
sbb
arpl
fsts
adc
adc
mov
aas
jg
add
test
sbb
loop
pop
jno
jns
or
jnp
stos
dec
test
and
out
or
xchg
das
lret
dec
notb
jnp
ret
xchg
int3
ljmp
stos
inc
inc
push
pop
pop
or
leave
sbb
es
sahf
add
decb
jb
xor
mov
or
cmpl
mov
sub
jp
int3
testl
sahf
xchg
push
adc
xor
and
mov
mov
dec
and
xor
inc
or
mov
addr16
mov
inc
lods
insb
pop
mov
jmp
lods
add
pop
sarl
stos
jbe
pop
in
xor
dec
daa
sub
out
xchg
repnz
aad
or
pop
fisubrl
jecxz
cs
or
jbe
imul
pop
mov
jecxz
in
aas
pop
mov
out
mov
stos
adc
nop
scas
cmp
out
stos
stos
push
mov
inc
or
ljmp
movsb
push
cmp
pushf
mov
das
inc
adc
imul
adc
sbb
xchg
pop
subb
jecxz
cmpsb
mov
or
mov
adcl
fpatan
les
jge
dec
inc
mov
or
mov
movsb
shll
cmc
subl
int3
repz
inc
rcrb
subl
mov
insb
mov
cmc
sbb
push
cmp
xlat
adc
data16
push
add
sbb
sub
adc
enter
int
mov
stos
iret
pop
fwait
push
push
xchg
mov
pop
dec
ljmp
pushf
pusha
roll
xchg
cmp
and
mov
cmp
jo
sub
test
imul
and
dec
test
insb
repnz
mov
in
adc
fwait
out
xor
fldenv
adc
sbb
icebp
in
mov
sarb
xor
jae
xor
cmp
out
in
fbstp
ret
add
dec
pop
xchg
pop
enter
pop
test
mov
jae
shrl
push
je
sbb
out
jl
cld
sbb
cmp
cmpsb
add
or
or
mov
mov
adc
fnstsw
loopne
push
sbb
stc
push
mov
ret
mov
nop
hlt
dec
adc
gs
lods
push
popf
rolb
mov
xor
daa
lahf
dec
mov
pop
xlat
fdivrl
lds
inc
hlt
dec
xor
loope
xlat
in
pop
push
mov
mov
mov
jle
cltd
lea
daa
mov
pushl
pop
repnz
pushf
jge
test
mov
jnp
push
and
mov
fs
mov
rcrb
fcomp
orl
sbb
lea
fiaddl
rcll
jo
lret
mov
aam
fs
lahf
aaa
nop
ljmp
daa
loope
jg
inc
adc
pop
cld
sub
add
std
mov
mov
test
pop
shll
add
adc
std
sub
inc
aas
test
mov
adc
jns
mov
xor
adc
adc
mov
mov
js
xchg
imul
movsb
fs
push
ljmp
movsl
fs
add
cvtps2pi
mulb
lea
cmpsb
mov
or
adc
sub
stos
sub
jl
pop
sbb
movsl
sbb
les
mov
les
cmp
cmp
jnp
lcall
mov
or
push
mov
xchg
rcrb
jecxz
and
mov
movsl
xor
sti
or
jne
cld
test
jle
mov
std
and
xor
lods
adc
and
shll
icebp
stc
nop
dec
je
adc
rol
push
arpl
dec
adc
fiadds
insb
out
or
cmp
push
shlb
mov
inc
inc
mov
inc
pop
in
xchg
mov
pop
in
cmp
sub
test
arpl
ds
mov
xor
stos
jae
int
loope
sub
aam
fs
dec
add
inc
pusha
addr16
jne
jns
jle
or
lods
cmp
mov
cld
adc
pop
pop
aas
mov
or
mov
scas
jmp
gs
jmp
mov
test
dec
inc
ss
jmp
fidivrl
out
cwtl
in
xchg
and
mov
sti
mov
lcall
or
addr16
loop
movsl
jnp
dec
jle
mov
and
sbb
push
jns
hlt
imul
jp
in
daa
rcrl
sbbb
int3
mov
pop
inc
call
data16
xchg
insb
sbb
mov
mov
ss
stos
add
xor
shlb
jnp
jmp
push
jmp
jecxz
shl
mov
adcl
mov
push
mov
add
push
push
mov
dec
mov
jno
mov
mov
dec
test
jg
and
sub
repz
divb
imul
jecxz
sahf
jns
mov
lock
fsubrs
push
and
push
xchg
out
ja
dec
orl
xchg
movups
mov
stc
sub
inc
push
inc
xchg
sti
mov
mov
call
adc
aas
push
pop
jns
push
imul
adc
sahf
in
int
push
aaa
mov
sub
pushl
jno
mov
xchg
inc
pop
mov
mov
adc
mov
dec
loope
xchg
cmp
js
sub
shll
loopne
cltd
push
pop
rorw
cmp
push
jg
mov
or
mov
loope
mov
das
mov
and
xor
inc
mov
inc
cmpsl
pop
iret
cmp
lods
test
lock
orl
fs
jecxz
xchg
push
aaa
push
xor
mov
add
mov
stos
sarb
jno
xchg
inc
stos
sub
aas
xor
inc
jle
jnp
jmp
pop
int
das
dec
sahf
jp
into
loop
push
cmp
mov
idiv
out
das
or
stc
sub
movsb
adc
cltd
add
dec
shl
imul
icebp
sbb
notl
adc
outsl
push
data16
jmp
shl
ss
jmp
or
dec
int
imul
shll
ss
dec
add
mov
push
dec
stos
add
pop
jle
negl
jg
pop
ret
icebp
mov
test
inc
mov
push
cmp
lds
rcrb
or
mov
push
cmpsl
data16
das
mov
sbb
xchg
and
cmp
aas
jmp
into
and
cmp
mov
aas
fcmovbe
fdivr
xchg
xchg
inc
sbb
jnp
xchg
lock
jae
push
add
loop
jno
out
into
outsl
xor
jno
pop
jno
add
aas
mov
and
cmc
push
pushf
mov
popa
pop
ret
cmpsl
shl
mov
lret
sub
data16
leave
cmp
stc
jge
adc
ds
movsl
nop
mov
jb
cltd
inc
lea
add
mov
mov
or
push
iret
daa
mov
xchg
pop
xchg
movb
sbb
std
and
cwtl
cmp
jp,pt
out
sub
into
xor
jo
out
ja
xor
push
jne
push
mov
push
dec
arpl
and
mov
push
lret
out
test
repz
cli
xor
and
int3
jno
mov
outsb
mov
mov
adc
jle
or
push
pop
pusha
movsb
fmull
jmp
xor
add
mov
fidivrs
jl
je
loop
lahf
mov
mov
gs
not
push
mov
push
jb
jns
cli
sahf
sbb
clc
sub
cwtl
loopne
idivb
ud1
dec
mov
add
nop
jne
in
mov
jbe
pop
dec
enter
fcmovnbe
sbb
push
push
sbb
jo
dec
cmp
mov
push
dec
mov
call
pop
sub
add
push
or
dec
xor
jg
jbe
imul
mov
movl
jns
xchg
lahf
loop
mov
push
adc
add
out
add
xlat
dec
call
aam
jp
pop
cli
fcomip
xchg
jns
lods
sbb
push
push
ss
sub
mov
mov
sbb
xor
lret
jbe
movsb
push
cwtl
fnstenv
jmp
push
pop
xchg
movsb
adc
cmp
in
push
sub
jne
rcll
std
or
sbb
loopne
out
mov
push
push
mov
lret
xor
dec
pushf
and
jmp
mov
fwait
cwtl
xchg
xchg
inc
mov
adc
cwtl
arpl
or
mov
push
cmp
out
mov
pop
xor
popa
aad
clc
or
mov
popa
test
je
imul
or
xchg
andb
scas
xchg
xchg
mov
imul
jnp
adc
test
lods
pop
lahf
enter
xrelease
call
and
push
pop
loop
mov
push
lea
sbb
jecxz
icebp
push
imul
in
push
xchg
mov
inc
sar
jns
and
dec
and
mov
cld
jl
fbld
cmp
pop
or
mov
sub
push
mov
and
stos
xor
inc
paddsb
out
sbb
lods
xchg
cmp
and
out
xchg
sahf
mov
setnp
outsb
arpl
sbb
gs
and
shl
in
dec
dec
and
pop
int
call
jnp
jmp
mov
jnp
test
stc
pop
es
arpl
inc
push
sbb
push
mov
jb
mov
mov
in
enter
clc
push
jp
test
sub
mov
mov
ljmp
ds
scas
xor
inc
jmp
jle
cmp
mov
jne
repnz
inc
leave
inc
inc
cmpsl
negl
xor
daa
lahf
xchg
xor
aad
nop
pop
mov
jno
cmp
cltd
fcmovnbe
xor
clc
inc
xchg
sub
cli
test
aaa
push
nop
pop
push
jb
out
sti
repnz
aaa
inc
loop
nop
xlat
cmp
inc
cmpl
or
bound
cmpsb
adcb
push
xor
push
mov
out
sub
stos
pop
lods
jmp
and
sbb
push
decb
cwtl
fwait
push
adc
mov
or
xor
jnp
push
sub
mov
jl
fiaddl
mov
mov
roll
test
xor
lret
cmp
pop
xchg
or
push
cltd
stos
push
mov
mov
xchg
out
stos
nop
cli
lock
insb
jnp
sub
popf
incb
fadd
mov
xchg
push
mov
jg
test
lret
cmp
stos
adc
jne
jne
push
mov
faddl
ds
and
xor
ret
mov
pop
sbbb
shlb
push
or
adc
das
pop
adc
dec
outsl
lret
bnd
or
xlat
jp
mov
xchg
pusha
cwtl
sbb
dec
out
aad
sbb
outsl
pop
inc
xchg
or
add
out
add
sahf
pop
in
sarl
push
mov
mov
repz
enter
pop
rclb
adc
out
aas
aaa
xchg
sahf
outsl
rcll
pop
cmp
jg
in
fwait
out
mov
xor
mov
cmp
int
dec
adc
negb
clc
pop
div
sub
mov
adc
and
gs
mov
roll
hlt
adc
and
mov
ljmp
ja
fcmovbe
adc
jg
stc
jle
dec
insl
in
cmp
push
jle
test
imul
sbb
jae
sbb
mov
out
fucomp
or
dec
pop
xor
jno
mov
ja
mov
inc
sub
sub
mov
cmp
insb
shlb
ror
adc
js
das
sbb
data16
pop
daa
les
js
jmp
or
lds
stc
add
fdivrs
mov
call
mov
xor
imul
and
pop
rorb
in
lods
andl
add
pop
lahf
jp
jne
mov
div
lods
mov
and
xchg
xorl
add
pop
or
sub
push
daa
sbb
fsubs
adc
fs
jecxz
pop
xchg
fsubrl
push
sub
mov
hlt
outsl
mov
sub
daa
xchg
xchg
dec
pop
nop
jns
mov
sbb
ds
jae
mov
jmp
fs
jb
lret
cmc
or
mov
jnp,pn
int3
fists
sub
xchg
dec
and
sub
mov
dec
clc
inc
imul
cmp
or
aaa
inc
int3
mov
inc
lea
popf
push
sbb
cld
scas
push
test
imul
insb
imul
in
testl
cli
loope
fsubrs
stc
xchg
insb
xchg
pop
unpckhps
insl
inc
mov
cmc
cs
mov
out
cmpb
dec
out
adc
fs
or
mov
sbbb
ds
sub
lock
es
dec
mov
fxam
mov
pop
push
jno
cmpl
sub
sub
das
mov
inc
fisttpll
and
out
mov
mov
xchg
sbb
pop
loope
fisubl
push
xchg
test
repnz
cmc
dec
test
pushf
sub
push
push
js
loope
iret
xchg
cld
out
xor
push
jae
and
loope
shll
js
pop
ds
ds
les
inc
add
mov
int
push
vfnmadd213ss
push
jle
icebp
lret
idivb
and
push
pop
fisttps
jns
or
add
mov
dec
pop
sbb
inc
popf
cmpsb
sub
jg
add
fidivl
test
sbb
lea
lock
add
jns
enter
shrl
mov
repnz
dec
add
stos
inc
xlat
pop
scas
fistpll
or
ficomps
jae
rolb
jae
movsl
inc
lods
push
xlat
add
into
popf
cmpsb
stos
adc
push
lods
aas
jg
addl
aam
jge
xor
jae
inc
push
in
into
or
cmpsl
pop
mov
sub
adc
iret
mov
xchg
sub
push
clc
push
jge
pop
jo
jno
dec
xchg
adc
je
aad
xchg
pop
movsl
int3
rcrb
jb
mov
movsb
jns
jecxz
sub
add
notb
mov
inc
mov
push
lret
and
out
mov
xor
mov
xor
pop
mov
cltd
pop
les
xor
mov
mov
jb
ja
shl
adc
lret
int
std
xchg
mov
mov
js
lcall
sbb
ficompl
jne
pop
mov
scas
lret
stos
push
pop
jl
hlt
inc
adcb
inc
in
add
jecxz
add
sub
add
loop
enter
je
mov
fstpl
das
ret
fildl
testb
xor
or
cmp
loop
fisubs
fs
imul
jne
cmpsl
pop
repnz
and
movb
xor
and
add
adc
jg
cwtl
es
data16
jne
ss
xchg
clc
sbb
es
dec
loop
imul
pop
outsl
pop
std
mov
sub
arpl
and
push
dec
cmp
xchg
mov
hlt
pop
rcrb
test
lods
mov
nop
dec
push
inc
inc
movsl
cmpsl
push
sbb
or
cs
lods
push
pop
hlt
sub
cmp
addr16
pop
cwtl
frstor
fucomi
jp
add
hlt
es
mov
sub
dec
repz
cmp
out
shll
dec
lods
in
fxch
mov
sub
lods
mov
aas
cmpb
mov
in
das
xor
sub
inc
mov
adc
in
jo
fs
pop
mov
sub
mov
add
inc
inc
and
mov
and
xchg
stos
fcompl
nop
inc
adc
aas
movsl
lcall
mov
jne
out
mov
inc
scas
adc
jp
stos
jne
mov
fcmovbe
xchg
idivb
daa
dec
lret
mov
dec
sub
sub
inc
or
je
fwait
stos
incb
inc
push
inc
adc
xor
hlt
mov
cwtl
xor
movsb
fucom
xchg
mov
repnz
iret
push
mov
popf
fiadds
iret
imul
test
sahf
das
inc
pop
dec
inc
push
or
xchg
jno
scas
idivb
pop
mov
mov
roll
arpl
adc
test
data16
pushf
mov
xchg
orl
add
pushf
or
test
aas
jle
pushl
das
pop
add
sub
xchg
mov
ljmp
mov
imull
ret
imul
mov
sub
gs
jno
lea
jmp
testb
es
lret
cmp
loop
dec
sahf
imul
shlb
loopne
arpl
mov
mov
mov
iret
test
and
test
out
jo
adc
sub
mov
dec
sub
rorl
movsl
and
or
lcall
xor
mov
insb
dec
sahf
pop
inc
jle
mov
test
mov
push
andb
dec
xor
jl
stos
cmp
daa
mov
inc
adc
fidivrs
gs
push
push
aam
bswap
pop
or
imul
cmpsb
push
bound
out
out
aas
add
mov
shrb
cmpsb
orb
xchg
push
xor
pop
repnz
sbb
addr16
daa
in
or
mov
push
jnp,pn
mov
ljmp
mov
cmp
xchg
sbb
icebp
ficomps
movsb
outsb
xor
xchg
sbb
pusha
outsl
cmp
mov
pushf
loope
inc
xchg
pop
pop
and
jg
xor
enter
enter
movsl
lock
mov
xor
es
stos
xor
stos
sub
loop
push
or
shlb
data16
lcall
ja
stos
gs
iret
or
pop
add
or
pusha
sahf
lahf
test
movsl
icebp
ret
and
push
inc
mov
jle
cwtl
test
shl
dec
mov
jae
mov
jp
outsb
ja
test
mov
insl
scas
dec
out
int
push
loop
xor
sar
push
jecxz
aad
not
data16
sub
xchg
repz
les
js
dec
jmp
aaa
pop
es
jbe
xor
stos
adc
or
icebp
lds
push
insl
add
out
faddl
dec
pop
out
cmpl
pusha
sbbl
insb
mov
push
dec
add
jno
xorb
idiv
sub
je
xorb
lods
and
je
imulb
movsb
inc
add
jb
fcom
and
lret
dec
sti
mov
xchg
xchg
pop
cld
test
hlt
insl
xchg
rcrl
inc
add
and
mov
add
das
loopne
add
stos
mulb
dec
jge
jb
nop/reserved
std
inc
sub
dec
sbb
jmp
insl
mov
cmp
dec
dec
jmp
pop
cmpsl
mov
sbbl
mov
mov
inc
movsb
mov
xrelease
js
in
bound
test
sbb
out
ss
add
push
pop
out
cs
ljmp
nop
cmp
arpl
lret
mov
dec
push
loopne
mov
out
xchg
mov
push
gs
push
mov
or
mov
imulb
enter
mov
rclb
scas
into
cmp
xor
jae
aam
lods
dec
xchg
jl
pusha
push
jnp
and
inc
inc
mov
divl
gs
pop
jne
dec
inc
cmpsl
xorl
jmp
dec
xor
pop
mov
call
jl
aad
pop
xchg
push
cld
fwait
jns
pop
rcll
xlat
sub
jb
add
adc
jmp
hlt
inc
sub
scas
and
daa
movsb
pop
push
stos
mov
aaa
ja
pop
ja
aaa
pop
dec
outsb
or
ffreep
mov
inc
pop
cmp
mov
lret
lds
pushf
jg
popl
fadd
test
xchg
mov
sbbl
sbb
jp
jle
sti
scas
sbb
mov
mov
imul
fisttpl
mov
aas
in
lret
mov
ljmp
shl
daa
jb
loope
xor
fists
popf
stos
aam
pop
test
mov
cli
into
lret
fidivs
mov
add
inc
adc
or
sub
mov
inc
fbstp
mov
insb
stos
movsb
sarl
pop
fildl
push
push
ja
aas
sbbb
lods
mov
icebp
out
add
and
and
sti
mov
push
adc
std
in
hlt
stos
and
mov
sub
xor
jae
sub
xchg
lret
jl
mov
outsl
dec
scas
scas
scas
fsts
pop
mov
fadd
mov
push
pushf
outsb
fstpl
pop
imul
jecxz
mov
push
jno
jno
mov
loop
fdivs
in
mov
leave
hlt
mov
or
loop
add
nop
sahf
icebp
pushf
fisttpl
sub
sbb
out
push
outsb
push
push
mov
inc
int3
imul
mov
lcall
adc
or
push
data16
test
lret
mov
lock
je
aas
mov
xchg
cld
jns
pop
sbb
cmp
aam
pop
into
pop
fldenv
loopne
ficomps
outsl
leave
orb
xchg
push
in
mov
xor
test
xor
and
mov
lcall
inc
push
mov
bnd
outsl
out
sete
dec
lcall
xchg
or
sbbl
xlat
xor
fldt
pop
xor
xchg
pop
je
cmp
sbb
xchg
jnp
or
and
adc
lods
icebp
dec
scas
inc
punpckhwd
arpl
sbb
bnd
sbb
test
push
es
jl
push
inc
gs
push
jg
xchg
jl
inc
lret
adc
cmp
add
cmp
push
mov
cmp
addr16
roll
je
mov
push
inc
push
cmp
push
cwtl
mov
repz
sub
push
into
daa
jns
push
mov
xchg
inc
lds
xchg
mov
sti
out
and
lahf
cmp
rclb
aas
mov
shrb
data16
aad
jecxz
or
scas
lcall
ljmp
test
push
roll
arpl
pop
cmpl
push
and
movsb
sbb
pop
lds
xchg
push
je
xchg
cwtl
dec
lds
sarb
movsb
xchg
fsub
sub
das
outsb
xchg
or
pop
and
and
test
pushf
push
lahf
imul
inc
cmp
push
xlat
call
aaa
mov
jecxz
pop
shlb
sub
inc
pop
cmp
dec
inc
addr16
test
pop
cmp
imul
mov
xor
or
xor
mov
jp
insl
sbb
subl
hlt
leave
xor
psraw
hlt
sbb
add
stos
pop
shl
push
lods
cmp
jg
jb
or
jnp
xchg
negb
and
jl
jp
xchg
ret
pusha
inc
jmp
push
shrb
lret
push
add
pusha
mov
mov
es
enter
pop
push
mov
int
push
jmp
add
adc
sti
inc
xchg
sub
cmc
jae
cs
xlat
bound
xlat
add
cmp
push
scas
jge
and
jns
lret
sbb
je
outsl
or
sub
inc
or
push
push
xchg
scas
repz
pop
xchg
leave
mov
test
subl
lret
addr16
imul
push
mov
fstps
int
dec
imul
int
push
fdivrs
and
rclb
fistl
or
inc
mov
xor
sarl
cmp
and
ja
std
int3
push
mov
push
mov
scas
pop
scas
jnp
sub
dec
rcrl
into
jno
jb
or
xor
push
mov
fidivrs
inc
orb
jbe
push
mov
clc
sahf
cmpsl
repz
jae
clc
jne
repz
int
fcompl
adc
cmp
jne
fistpll
cld
or
flds
repnz
jnp
lea
push
fstpl
jg
xchg
mov
jmp
cmp
lcall
insb
push
sub
dec
xor
ja
insb
pop
push
jo
ja
push
rorb
cmp
jbe
testl
sti
icebp
shrb
subb
pop
data16
shl
andl
test
xchg
sub
push
push
negb
stos
jmp
cmp
adc
out
cs
xlat
jo
mov
mov
mov
in
xor
add
mov
fsubp
sub
lret
sbb
mov
sub
adc
add
mov
adc
push
dec
movsb
icebp
loope
repz
lds
shll
ja
es
add
loope
and
out
mov
in
add
adc
mov
push
adc
cwtl
cltd
dec
cmpsl
lea
add
pop
and
in
dec
mov
insl
cmpsl
pop
add
enter
aam
and
cmp
std
xchg
movsb
pop
scas
out
sub
xor
dec
xchg
sarb
ficomps
sub
popf
push
push
or
test
pop
and
mov
xor
mov
adc
lea
iret
jo
mov
mov
push
xchg
mov
push
jnp
andl
add
add
dec
sub
mov
add
cli
fimull
mov
mov
adc
push
in
mov
push
addr16
dec
mov
push
pop
cmp
jo
ficoml
cwtl
popa
bound
pushf
cmp
sbb
lea
pop
inc
clc
push
cltd
xchg
dec
in
test
sub
dec
push
in
mov
loop
adc
jb
add
push
xchg
push
ret
fiaddl
in
mov
mov
test
cltd
scas
xchg
mov
jmp
mov
mov
outsl
mov
into
stc
fmuls
jnp
leave
int
add
scas
sub
into
in
in
jae
pop
loop
lret
pop
xor
xchg
cmp
mov
ja
push
insb
pusha
sbb
push
shlb
dec
cmp
out
loope
loop
adc
jns
aam
sub
and
lods
mov
xor
push
jbe
rclb
stos
cmp
adc
outsb
and
fstl
scas
ljmp
mov
sbb
and
inc
pop
dec
mov
xor
mull
cwtl
mov
ret
les
inc
das
mov
and
fstpl
mov
mov
mov
push
and
stos
out
test
and
cmpsb
pop
cmp
imul
xchg
lods
std
and
xor
clc
sub
int
jge
mov
cld
and
das
shll
aas
popaw
stos
mov
jmp
loopne
or
sahf
dec
mov
push
imul
leave
outsl
lret
cmp
test
jno
xchg
leave
fistps
adc
push
shl
std
adc
enter
xchg
and
jno
mov
mov
fsubrs
jo
push
jge
mov
std
adc
popf
movsl
dec
jecxz
jle
dec
test
loope
add
in
jl
leave
scas
call
jno
clc
jp
sub
cltd
sub
xchg
and
jge
imul
ja
cmpsl
inc
or
inc
sbb
fwait
or
pop
pop
nop
jge
and
xchg
test
jnp
vcvttpd2dq
stos
sti
int
add
or
push
pop
jnp
jmp
mov
mov
loope
mov
and
cli
test
into
int
cli
cmpsl
add
in
jl
outsl
sub
sub
fistpl
add
jp
xor
daa
sbb
cltd
or
jge
aas
imul
outsl
ret
add
or
out
icebp
mov
mov
rcrl
pop
adc
lahf
les
outsb
icebp
lcall
push
out
je
pop
or
and
sbb
inc
cmp
out
push
scas
enter
xlat
mov
lcall
add
adc
jns
es
cli
leave
daa
ljmp
dec
mov
and
pop
insl
loop
mov
leave
lret
push
mov
pushf
aad
xchg
je
pop
xlat
lcall
lods
pop
inc
mov
xor
pop
rclb
pop
jnp
pusha
sbb
imul
stos
in
faddl
movsb
adc
repnz
cmp
push
mov
cmp
sti
mov
mov
lret
add
pop
mov
adc
adc
push
pop
mov
jns
or
jae
sbb
pop
cmp
dec
and
or
pop
cwtl
jl
data16
sahf
rcl
mov
inc
pop
xchg
pop
cltd
mov
ja
std
cmp
pop
repnz
fdivrs
out
mov
lcall
dec
in
mov
pop
cltd
test
mov
icebp
pop
jmp
icebp
mov
xor
jb
enter
push
loopne
push
xchg
inc
pop
les
mov
fidivrl
adc
jecxz
popf
dec
stos
cmp
outsl
outsb
stos
inc
out
pop
push
add
nop
jno
mov
pop
ja
cli
mov
xchg
fwait
je
scas
mov
push
pop
hlt
pop
jo
or
xlat
ss
mov
outsb
je
cmp
or
mov
jno
jns
fadds
cmp
rcl
lret
xchg
inc
lea
mov
icebp
lods
pop
dec
aam
push
mov
shll
dec
andb
pop
pop
push
push
cmpsl
pop
mov
mov
or
loopne
xchg
pushf
mov
arpl
mov
test
inc
es
scas
inc
mov
leave
jge
test
mov
sbb
dec
push
xchg
mov
popf
lret
fldl
dec
xor
hlt
cli
add
sarb
int3
sbb
lods
hlt
push
loopne
mov
movsl
outsb
pop
shrb
add
and
popf
ja
adc
pusha
mov
dec
jge
jmp
push
imul
xor
mov
out
paddd
clc
push
ret
push
insl
push
shl
xchg
mov
mov
loope
push
ss
mov
vsubpd
int
push
sub
xchg
mov
iret
add
mov
mov
mov
xorl
pop
int3
aad
addr16
sbb
push
out
sbb
sahf
ret
jp
decl
inc
cld
add
mov
xor
or
pop
xchg
sbb
fiaddl
pop
fiadds
pushf
pop
int
pop
leave
push
sbb
mov
inc
lods
popf
out
xchg
aad
imul
cmpsb
loop
scas
push
ret
rcrb
stos
cmp
loop
push
addr16
popa
xlat
add
daa
mov
mov
cmp
test
dec
xor
outsb
call
insb
xchg
xor
test
xchg
inc
inc
lcall
add
jge
js
jmp
inc
xchg
adc
je
add
xor
jo
test
and
dec
xor
and
dec
mov
push
mov
mov
jg
pop
clc
lods
and
cld
popf
inc
push
testb
jecxz
or
mov
loope
cmpsb
or
push
mov
xor
nop
push
lret
mov
es
mov
and
push
mov
push
xchg
inc
push
cmp
aas
mov
xor
mov
mov
add
negl
jne
push
test
icebp
shrb
mov
icebp
stos
pop
arpl
sbb
cwtl
mov
bound
ficoms
mov
or
imulb
ds
filds
mov
pop
fcoms
rolb
inc
sub
movsl
pop
arpl
lahf
mov
mov
jmp
loope
push
lahf
rolb
mov
xlat
das
add
rolb
push
imul
cli
sbb
nop
mov
ret
icebp
push
push
jno
mov
pop
pop
ret
mov
mov
sbb
mov
fstps
xchg
sarb
and
push
pop
xchg
dec
out
pop
sbb
mov
popa
add
lret
leave
dec
xchg
movsl
adc
mov
shr
push
dec
xor
xchg
lret
sub
dec
out
sub
jb
mov
iret
scas
imul
fistpl
insb
mov
je
jb
addl
fisttps
lods
mov
mov
sarl
stc
adc
shlb
lret
mov
hlt
lret
push
xor
xchg
inc
jecxz
pop
and
and
rcll
out
adc
xchg
sub
in
add
xor
xchg
jle
inc
imul
adc
cli
inc
pop
mov
out
aam
push
or
fnstcw
mov
xchg
jb
push
add
sub
mov
pop
mov
pop
stc
aad
mov
xor
dec
add
xchg
rorl
mov
push
iret
mov
stos
mov
sub
cmp
into
sub
sub
cmpsb
sub
shll
xchg
sub
aas
pop
test
dec
xor
xchg
movsb
push
cs
inc
jo
mov
mov
sub
mov
popf
jno
ror
xchg
xor
out
mov
rcll
lea
jp
stos
int3
inc
nop
mov
enter
movsb
sbb
xchg
push
mov
out
inc
mov
cs
push
lret
sbb
rorb
int3
loope,pt
lods
and
lcall
shl
sbb
call
dec
mov
mov
sarb
mov
sarl
stos
daa
pushf
cmpsl
fistps
rorl
or
sbb
xchg
fwait
xor
mov
sub
lcall
pusha
jmp
mov
mov
icebp
popa
inc
aas
jae
jmp
sbb
mov
addb
jmp
pop
mov
add
adc
imul
cmp
fisttpl
cmp
push
inc
push
or
shlb
je
pop
sbb
cmp
push
js
scas
fstl
ss
inc
mov
pop
out
adc
pop
cmc
mov
sti
xchg
decl
sbbb
xchg
int3
mov
xorl
push
cmp
test
xlat
aam
fsubs
xchg
call
pop
enter
push
loop
test
push
gs
push
cli
ret
imul
ljmp
insl
outsb
stos
aad
movb
mov
gs
xor
xchg
and
jg
imul
jne
inc
jns
fwait
sub
inc
fldln2
loopne
xchg
daa
mov
mov
pop
movsb
stc
xor
sti
mov
cmp
xchg
fsub
xchg
mov
xchg
inc
dec
mov
mov
mov
push
fisubl
add
adc
int3
xchg
nop
xchg
scas
xchg
imul
je
and
loope
fisttpl
sbb
jg
pop
subb
cmpsb
lcall
mov
sbb
mov
add
daa
mov
mov
mov
fidivs
lret
ja
shl
rcrl
mov
dec
insl
xchg
fisttpl
or
out
mov
andb
negb
xor
outsb
pop
incb
mov
arpl
in
lret
imul
out
out
push
mov
mov
mov
mov
pop
push
push
xor
ret
test
mov
movsl
mov
jbe
push
movsl
sub
jp
mov
xchg
pushf
pop
mov
jae
ss
cmpsb
or
jecxz
add
into
sbb
sbb
lahf
jbe
push
ret
data16
cmpl
sbb
lds
loope
or
adc
pop
mov
add
push
inc
aad
std
inc
les
fildl
rcll
jmp
mov
ja
lret
mov
cmp
adc
jl
push
fists
insb
negl
sbb
sti
movb
jge
sub
daa
dec
loopne
push
dec
cmp
aam
ret
lods
xchg
cmp
dec
je
cltd
add
pop
or
mov
int
sbb
lods
movsl
mov
cltd
or
fldcw
jne
cmp
push
cli
jo
sub
jmp
sbb
sub
das
jle
sbb
stos
jae
loop
pop
xchg
dec
jmp
call
mov
sbb
sbb
andb
add
or
cmp
push
push
jne
sbb
inc
and
iret
inc
ds
movsb
mov
adc
dec
stos
adc
outsl
mov
stos
rorb
or
jb
cmp
enter
xchg
add
mov
mov
loopne
movsb
or
rclb
cmp
cmp
xchg
fstl
push
push
test
push
xchg
jle
xor
adc
mov
pop
push
ja
jne
jg
xorb
loopne
mov
push
xchg
leave
mov
ds
je
addb
addr16
mov
mov
pop
cmpl
pop
jne
imul
cs
in
in
cmp
popf
and
add
lods
lret
dec
loopne
xchg
sub
push
cltd
sbb
aad
repz
xor
std
push
dec
sti
adc
jecxz
sbb
add
xchg
xlat
imul
outsl
lret
cmpb
lock
cmp
and
shrl
pop
xor
push
rcrb
sub
cmc
sub
inc
jecxz
es
ds
jle
data16
mov
imul
adc
adc
shlb
xor
or
sbb
pop
pop
pusha
push
in
dec
clc
mov
bnd
or
adc
sbb
pop
movsb
push
dec
testl
mov
cmpsl
shl
mov
sub
test
mov
nop
jecxz
lock
nop
popf
mov
xchg
jo
jge
lods
push
mov
cli
ja
mov
mov
lcall
fsubl
cmp
sub
cmc
pop
jo
cld
sti
dec
in
jl
or
fcomp
aad
jno
push
and
fdiv
fmuls
mov
and
or
inc
pusha
mov
pop
pop
sar
jle
inc
out
popa
mov
scas
add
adc
adc
pop
andl
aam
push
cmpsl
pop
mov
mov
cld
test
mov
adc
data16
push
and
neg
or
add
sub
sub
cmpsl
lods
xor
push
push
jle
xor
outsl
adcb
movsl
ljmp
push
daa
pop
fimull
sbb
and
or
jle
mov
adc
imulb
add
mov
or
xchg
adc
push
mov
xchg
pop
in
ja
dec
mov
cmp
in
in
rcrb
call
fs
add
sub
xchg
sarl
mov
inc
cwtl
inc
xor
add
cmp
lcall
repnz
push
push
mov
fnop
inc
sub
gs
cwtl
mov
mov
std
adc
bound
jae
stos
iret
mov
pop
scas
pop
aaa
sbb
arpl
pop
dec
enter
lea
dec
popa
stos
dec
adc
sbb
push
pop
adc
add
cmp
cmp
iret
ret
mov
or
repz
push
push
ficoml
pop
inc
mov
and
inc
mov
ds
xchg
cmpsb
pop
shrb
dec
xchg
xchg
sbb
pop
or
enter
jo
out
pusha
push
int3
nop
mov
cmp
xchg
sub
ds
dec
arpl
test
es
loope
sbb
ret
push
repnz
xchg
adc
xchg
mov
lock
fsubs
pushf
push
popl
cmp
pop
std
sti
mov
test
mov
xchg
adc
push
cwtl
lea
cmp
hlt
jae
inc
mov
xchg
int
mov
adc
outsb
repz
adc
push
xchg
pop
test
mov
scas
mov
xor
mov
out
rorl
scas
test
lods
fs
stc
outsl
jg
mov
adc
inc
add
outsb
push
mov
and
push
aad
dec
push
fs
stos
dec
test
scas
and
scas
mov
pavgw
mov
lret
jne
sbb
xchg
and
addr16
lds
xchg
cmp
mov
aaa
in
dec
clc
cmp
and
in
dec
ds
stc
sbb
sub
adc
fidivrl
adc
sub
push
cmp
push
cmp
hlt
mov
sbb
sub
repz
lds
pusha
negb
mov
imul
push
imul
cmpsb
pop
push
add
shr
cmp
jp
add
fisubrl
in
xor
movsb
ret
mov
xlat
fsubr
push
xor
mov
push
addb
decl
xchg
rcl
rclb
ss
add
int3
sbb
std
call
mov
sbb
fnstcw
mov
xor
addl
movsl
jecxz
pusha
bound
mov
imul
out
sub
xor
dec
xchg
ss
dec
jbe
arpl
dec
jecxz
push
sti
pop
iret
aam
ja
sti
jmp
inc
movsl
adc
scas
and
enter
ret
jg
shlb
rolb
fdivp
cltd
out
test
xchg
add
pushf
pop
jb
aaa
test
jno
cmp
outsl
pusha
add
push
add
sub
test
push
mov
arpl
fldcw
mov
lods
push
stc
mov
adc
test
jns
and
sub
loopne
cmc
inc
sti
test
jb
mov
repz
dec
push
mov
inc
jecxz
add
insl
faddp
sub
cld
and
jno
lret
sbb
lahf
dec
jne
xor
mov
push
or
pop
aas
rolb
inc
jae
dec
dec
pusha
rcll
dec
push
mov
xchg
repz
hlt
aaa
xchg
jecxz
cs
dec
mov
enter
js
sub
xchg
mov
cs
jmp
fwait
push
pop
sub
push
and
cmp
repz
jns
mov
fmull
pop
rcrl
bound
test
ja
mov
push
stc
mov
call
pop
xchg
mov
cmp
shl
xor
adc
mov
xchg
ret
ret
pop
mov
inc
push
in
das
mov
addr16
mov
lods
fsubrs
ljmp
ret
or
xlat
mov
and
inc
lock
ret
adc
pop
dec
mov
test
scas
aaa
or
lea
jp
adc
xlat
cmp
pop
stc
mov
dec
push
mov
inc
add
outsl
and
jns
sub
outsl
rclb
mov
jb
inc
ljmp
add
xor
xchg
faddl
cli
rcl
sbb
movb
cmpl
pop
jge
fstl
cmp
ljmp
int
adc
inc
sbb
les
inc
mov
sahf
and
and
mov
inc
cmp
adc
sub
leave
push
fs
jae
lock
inc
jge
sahf
outsb
mov
ss
mov
add
cmp
stc
mov
cmp
js
sub
les
mov
inc
mov
pushf
mov
in
lcall
stos
mov
or
mov
cmp
mov
data16
repz
jbe
dec
sahf
pop
and
adc
add
scas
sti
inc
dec
and
lds
aad
lods
inc
pop
scas
stc
test
adc
sub
mov
inc
sbb
jp
icebp
imul
jl
mov
pushf
adc
cmpsb
sub
call
fwait
xchg
movsb
sub
xor
test
xchg
or
stos
nop
arpl
jbe
loop
pop
stc
pop
popf
fbld
leave
dec
xchg
dec
pop
jp
out
stc
adc
and
push
mov
sahf
cmp
fwait
sti
cmp
fildll
xchg
adc
mov
pushf
cwtl
pop
clc
push
addr16
cmp
push
je
inc
inc
stos
je
cmp
dec
sar
cli
pop
pop
jle
dec
in
or
scas
xor
lcall
dec
inc
int3
popf
mov
mov
orb
fidivrl
inc
sbb
movb
sub
pop
dec
sbb
int3
or
jnp
xor
cmp
mov
lret
out
mov
mov
in
push
inc
lea
aam
aam
sbb
mov
jl
in
dec
dec
sub
pop
ficomps
mov
mov
mov
jne
push
clc
adc
shlb
or
addr16
popf
adc
mov
jecxz
jbe
sub
sbb
out
lret
sbb
push
xor
mov
lahf
sbb
mov
mov
cltd
ljmp
jl
jmp
dec
cs
insl
xor
and
mov
push
inc
mov
ret
add
movsl
aad
adc
xor
dec
pop
mov
fbstp
sbb
dec
xchg
ljmp
icebp
jmp
stos
cmp
mov
aaa
jbe
xchg
insl
outsl
pop
nop
aad
shrb
jne
lea
inc
mov
jns
addr16
adc
out
jle
pop
jle
cmp
xorl
dec
inc
pop
lock
out
cmp
push
lret
jge
ss
cmp
pop
ret
and
dec
rorb
data16
je
xor
int3
xchg
jp
add
loopne
mov
js
inc
cmp
rcrl
gs
mov
or
lods
fwait
jecxz
paddsw
inc
dec
cmp
or
push
mov
cmp
icebp
pusha
fwait
inc
iret
xchg
stos
shlb
inc
jbe
je
hlt
andl
sub
mov
pop
rorl
aam
popf
into
xchg
call
ss
push
sbb
push
and
cmc
movsb
data16
lods
fistl
into
or
int3
jo
lret
cld
mov
in
xchg
mov
inc
pop
lods
sub
add
pusha
dec
and
add
mov
mov
jne
test
arpl
cld
testb
pop
cmpsl
mov
inc
nop
aas
dec
mov
idiv
push
adc
rolb
sub
pop
push
divb
lods
inc
push
dec
addb
inc
es
js
test
add
std
fwait
outsb
hlt
push
out
cmc
xchg
adcl
push
mov
add
add
out
sub
jp
cwtl
clc
cmpsl
test
mov
leave
mov
and
vpshufhw
mov
test
push
add
pop
xor
loope
cmp
cmp
jne
ja
fs
imulb
or
callw
aas
sub
xchg
mov
pop
mov
dec
and
sub
jge
ret
jg
adc
idivb
mov
mov
push
cmpsb
test
or
xor
push
jno
lea
push
setge
in
aaa
xchg
repnz
cmp
das
sbb
push
pop
nop
pushf
lret
pop
mov
dec
pop
jg
dec
nop
cmp
inc
clc
xor
fstl
push
mov
inc
mov
inc
js
rcrb
out
mov
dec
adc
mov
ret
jl
mov
mov
sub
ds
jne
loop
sbb
jne
and
jl
adc
push
ds
fidivrl
hlt
aad
push
lds
cmp
and
xor
jg
cmp
jmp
dec
adc
mov
cmp
outsb
sbb
pop
adc
aaa
loop
or
dec
std
outsl
inc
mov
add
jmp
int3
push
mov
xor
fdivs
ss
and
lret
jbe
shlb
sbb
clc
loopne
je
iret
clc
loop
ss
je
ss
xlat
pop
mov
jg
cltd
cli
imul
stos
enter
ja
aam
hlt
xor
outsb
shlb
les
int3
cmp
add
adc
push
cmpps
lret
shlb
ljmp
daa
icebp
xchg
loopne
cltd
stos
cs
es
push
pop
xor
jle
xchg
aas
and
xor
cli
repz
mov
fwait
xchg
xchg
fiaddl
sbb
stos
test
lea
jo
out
dec
fcomps
movsb
es
pop
in
cltd
jb
fs
jecxz
or
test
dec
imul
inc
call
inc
iret
subb
ss
jl
fisubl
xchg
push
mov
mov
into
cmp
ret
lcall
pop
je
sub
xchg
mov
jae
sub
cwtl
ja
inc
sub
adc
int3
iret
xor
popf
repnz
cmp
cmp
adc
adc
mov
sub
xchg
fsubl
dec
mov
inc
pop
insb
hlt
jns
pushf
jle
push
jb
das
jge
add
out
fisubl
and
out
xorb
mov
jno
sbb
mov
lcall
movsb
mov
mov
loope
daa
inc
scas
lods
pusha
mov
sysenter
orl
lahf
insb
test
push
ljmp
pop
std
mov
xor
loop
insb
xchg
shrl
mov
mov
jge
mov
mov
adc
jnp
push
or
into
mov
sub
mov
and
xchg
sub
loopne
cmp
das
int3
imul
ds
movq
push
sbb
dec
ja
daa
mov
mov
sbb
or
mov
scas
dec
sti
int3
cwtl
jo
mov
out
xor
pusha
adc
mov
aad
xor
sar
mov
fcmove
fcmovu
into
outsb
aad
mov
ljmp
mov
xchg
pushf
lock
movsl
imulb
pop
addr16
mov
rol
ja
fldl
inc
and
repz
push
adc
addb
or
pop
push
fstl
push
test
mov
cmp
push
aaa
and
and
add
repnz
and
push
rorb
cs
lret
sbb
es
jecxz
pusha
in
xor
add
xchg
push
enter
adc
and
dec
rcrl
cltd
sbb
and
cmp
adc
mov
pop
leave
hlt
imul
sahf
xor
xchg
call
popf
loope
pop
daa
idivl
add
cmp
sbb
insb
imul
add
clc
xor
adc
xor
pop
ret
jae
outsl
dec
pop
mov
in
xorb
dec
rolb
pusha
in
mov
xlat
ds
xchg
insl
stos
and
jp
in
imull
cmc
aas
arpl
jo
mov
lods
cmp
fld
push
and
loop
mov
sub
rcll
fs
hlt
imul
jae
xchg
clc
cmc
mov
fiadds
mov
adc
and
push
lds
jg
add
movsl
xchg
xchg
ret
nop
testl
adc
dec
or
mov
test
xchg
ljmp
jle
int
adc
jne
sub
es
xor
jnp
dec
dec
je
xor
mov
fbstp
popf
lea
jae
inc
cwtl
loop
push
push
lea
cmc
dec
inc
lret
pop
fxch
subl
mov
arpl
jns
shll
add
out
and
idivl
rcll
ja
scas
cmp
stos
jno
cmp
xlat
scas
push
jmp
jp
popf
lds
icebp
push
sti
xor
push
imul
insb
sub
icebp
or
insl
shrb
pop
jecxz
adc
adcl
add
xchg
add
mov
je
ud1
or
pusha
xchg
mov
jnp
xchg
shll
xlat
pop
adc
sub
clc
cmp
stos
pushf
test
xchg
movsl
ss
push
and
mov
pop
add
aam
pop
std
das
aad
popa
jg
jecxz
in
dec
xchg
js
mov
xor
mov
sarb
movsb
xor
dec
lcall
cs
mov
dec
inc
stc
mov
xorb
and
and
adc
js
mov
mov
lds
jle
push
cli
jb
int3
faddl
jp
lock
rclb
mov
subl
cmp
scas
push
cwtl
or
divb
notb
cmp
lret
cmc
cmp
jp
das
in
dec
pop
or
in
pop
flds
adc
movsb
stos
fldenv
cmp
cmp
loope
sub
sahf
dec
in
push
das
jae
insb
addr16
cmp
sahf
xchg
negl
enter
frstor
in
jb
les
hlt
fwait
out
es
lcall
jle
fnsave
push
sbb
jnp
sti
aad
xchg
cmp
imul
or
jp
pushf
and
xchg
cmc
jno
mov
jo
std
cld
dec
lret
xchg
inc
adc
jp
outsb
lret
xchg
jne
sbb
mov
xor
stos
xchg
aas
int3
mov
pop
jns
lods
cmp
push
loop
sbb
and
mov
in
cs
sbb
jmp
lcall
ret
loop
lods
pushf
rorb
mov
cmp
sbb
rclb
clc
adcb
mov
aaa
fistl
lret
jecxz
jnp
jg
lahf
jb
cmp
xchg
sub
mov
iret
inc
adc
outsb
pop
test
or
pop
pop
mov
imul
in
lret
mov
mov
cld
dec
jge
mov
test
pop
cmp
leave
and
adc
ret
sarl
aas
sbb
out
fsubp
enter
push
jb
mov
cmp
in
xchg
xorl
sbb
jno
and
xchg
test
ss
in
add
push
mov
scas
fldcw
loopne
sbb
repnz
cmp
and
movsl
aaa
sub
xchg
jne
or
loope
jle
lret
jecxz
out
and
xor
sahf
dec
jle
jmp
repz
adc
push
lea
dec
mov
sub
add
or
aas
out
sti
pushf
dec
sub
mov
sbb
lcall
iret
movsl
out
insb
leave
fstl
xchg
mov
lods
mov
cs
hlt
jno
mov
push
push
mov
push
imul
or
out
scas
pop
or
mov
push
xchg
push
rclb
decb
push
xchg
icebp
xorl
loope
mov
pop
shlb
movsb
js,pt
or
dec
or
insb
js
mov
mov
xor
mov
out
push
scas
sbb
divl
lret
jmp
das
lods
or
lahf
lret
xchg
dec
and
sbb
stos
ss
iret
add
jbe
jne
in
or
ja
jbe
mov
xchg
adc
mov
stos
push
xchg
inc
aaa
or
inc
inc
or
xor
pop
and
xor
adc
imul
mov
mov
mov
shlb
in
mov
nop
push
jp
insb
out
notl
ficompl
mov
inc
mov
adcl
push
xchg
sub
push
adcl
xchg
add
test
ret
movsl
mov
pop
xchg
call
inc
pop
data16
aad
insb
xchg
js
or
cwtl
pop
push
push
and
scas
mov
mov
mov
fidivs
addl
jmp
sbb
loop
push
and
jo
pop
clc
cld
pop
in
cli
cltd
xor
lds
das
hlt
gs
pop
inc
out
cli
pop
xor
pop
stc
push
adc
mov
dec
imul
in
mov
insb
test
mov
std
ret
dec
mov
push
jl
jno
and
add
mov
dec
sbb
pop
sub
cmpsl
mov
rorb
loop
cmpb
subb
push
es
clc
loope
pop
jae
test
xchg
mov
jge
jge
sahf
mov
xlat
scas
jae
push
xor
insb
cli
add
or
fisttps
adc
call
xchg
in
and
pop
mov
jae
mov
hlt
sbb
xchg
adc
pusha
mov
cmpb
pop
inc
stc
int
xor
dec
ja
push
nop
fs
or
pop
xchg
insl
mov
es
test
xor
mov
iret
adc
or
js
aaa
sbb
and
outsb
sbbb
popa
pop
dec
sahf
out
stos
sub
ficoml
adc
loop
into
std
movsb
mov
inc
dec
icebp
fmul
push
fcomi
add
std
pop
outsl
pusha
ss
daa
mov
cmp
sbb
mov
xlat
lret
lods
or
mov
aam
xor
mov
faddl
scas
or
lock
sti
jb
add
fldenv
mov
mov
out
ja
shrl
pop
shll
jnp
call
lea
mov
dec
push
sbb
in
test
add
ds
ror
in
int
or
or
xor
mov
das
out
add
pusha
mov
xchg
mov
dec
push
xchg
ds
mov
imul
ljmp
inc
fs
mov
lret
int3
repz
lret
xchg
xchg
fnstsw
jp
negb
xchg
cli
int
cmp
loop
mov
sub
mov
fnstenv
dec
out
xor
adc
add
push
inc
popf
ja
gs
lcall
mov
jno
add
push
out
mov
loop
ds
stos
lods
lret
loope
mov
sub
mov
cmpsb
xorb
mov
mov
mov
xchg
enter
and
dec
cmp
sbb
pop
fstl
jge
lea
call
push
add
mov
add
mov
shl
lock
adc
pop
jae
cmp
add
jbe
and
outsl
imul
mov
mov
pop
jbe
ds
push
mov
scas
ret
aas
mov
pushf
fcompl
std
pop
jno
fdivp
jno
in
adc
scas
imul
cmpsl
xor
xchg
adc
out
out
shll
aas
addb
inc
and
gs
adc
dec
mov
dec
test
iret
arpl
push
push
sub
mov
les
test
xor
decb
lahf
xor
mov
push
pop
bound
jecxz
clc
int3
xor
leave
icebp
add
fwait
lret
cmp
cmpsl
pushf
jge
popa
xchg
daa
jb
jle
add
cmpl
and
adc
pop
je
rorb
aaa
movsb
iret
enter
mov
mov
sti
xchg
dec
xor
cwtl
adc
mov
loope
imul
pushf
mov
jno
adc
lea
xchg
and
mov
sub
iret
repz
sub
imul
adc
xor
scas
popa
shrb
lahf
jbe
bound
jns
and
fs
xorb
divb
dec
pop
cmp
negb
fisttpll
xor
and
mulb
sahf
andl
xor
jecxz
in
mov
dec
movsb
mov
lea
aam
lods
push
mov
pusha
sti
mov
outsb
fildll
jge
dec
pop
mov
or
hlt
scas
pop
pop
sahf
mov
dec
call
xchg
jl
xchg
aam
jp,pn
sbb
inc
inc
addr16
pop
or
stos
leave
fld
aas
push
jle
test
jmp
jae
jbe
xchg
mov
dec
jb
adc
xchg
mov
lds
jne
fcmovnb
hlt
pop
cmp
add
lods
push
rorl
nop
cmp
shll
test
or
leave
inc
lret
pushf
xor
xchg
frstor
mov
jb
cmp
loop
xchg
pop
sarb
adc
loopne
cmp
sub
fiaddl
mov
inc
add
cld
std
xor
dec
stos
int
mov
pop
push
adc
dec
dec
aad
loop
inc
jno
hlt
mov
lret
out
lcall
or
mov
fwait
cmp
lcall
mov
cmp
xor
ret
mov
clc
ret
and
fwait
call
xor
and
repz
add
mov
sub
inc
xchg
mov
mov
stc
xchg
cmp
sbb
xor
mov
cmp
mov
ja
rcrl
ss
xchg
cmc
inc
es
lds
lock
xchg
sub
into
lock
jns
lods
push
fnstcw
mov
mov
inc
push
push
and
stos
rcrb
ljmp
addb
mov
sbb
sbb
jl
adc
jge
or
pop
push
repz
pop
sti
push
ss
fwait
pop
sub
loopne
repnz
lahf
in
je
fs
les
ret
xorb
jne
inc
cmpl
cmp
or
xchg
mov
or
push
js
arpl
js
mov
jl
mov
push
pop
pop
xor
outsb
mov
cmpb
inc
push
mov
dec
arpl
int
stos
mov
cmp
add
jmp
cmp
imul
add
push
popf
lock
lret
scas
gs
int3
movsl
jnp
xlat
in
loop
jns
push
mov
lods
fidivl
popa
and
adc
add
push
add
xor
outsl
shlb
mov
test
mov
leave
and
inc
xchg
xchg
push
add
inc
mov
lret
sbb
mov
inc
sti
in
mov
aam
push
mov
add
cmp
mov
mulb
jns
enter
mov
xor
andl
adcl
fldenv
loop
pop
mov
lock
inc
inc
push
jae
inc
push
or
push
lahf
shll
popf
add
or
movsb
jp
out
xchg
add
sub
repnz
adc
jnp
adc
stos
and
ret
push
hlt
mov
push
sbb
push
pop
int3
mov
ret
inc
push
daa
xchg
call
sub
add
jns
jns
sahf
add
out
add
jnp
cmp
pop
jl
mov
popa
enter
inc
test
enter
sub
pop
imul
and
push
std
adc
das
push
pop
repz
fwait
cli
xchg
mov
fistl
jmp
xor
iret
addr16
dec
test
push
leave
ret
rcll
lcall
out
movzbl
mov
popa
rolb
push
cmp
pop
das
mov
fldcw
iret
fs
aas
stos
push
push
mov
ljmp
or
jae
pushf
adcb
mov
pop
push
int
gs
or
fmuls
lret
sub
nop
mov
add
cmp
inc
sarb
push
addr16
int
sub
mov
push
jae
repz
icebp
movsl
mov
test
xchg
mov
pop
out
sti
test
mov
fnstenv
mov
jg
ret
sub
dec
sbb
ss
inc
or
xchg
pop
adc
inc
out
std
shll
sbb
or
mov
loope
rcr
out
xchg
pop
push
int3
push
lahf
hlt
jbe
and
sbbb
push
cmp
in
jmp
ljmp
aam
sbb
arpl
cmp
inc
and
scas
and
outsb
dec
out
or
mov
popa
flds
push
mov
push
sub
cmp
negl
popa
push
mov
inc
inc
jmp
xchg
outsb
mov
mov
inc
mov
adc
icebp
dec
xchg
mov
jb
movsl
ja
xchg
jge
int
sub
dec
adc
add
aam
xchg
ffreep
arpl
cld
popl
mov
mov
movsl
shrl
aaa
cmp
mov
stos
out
pop
data16
mov
js
xchg
loop
xchg
dec
or
mov
pop
pop
in
out
or
or
xor
lahf
jle
jl
push
imul
pop
loopne
push
sbb
or
and
mov
pop
popf
mov
sub
lahf
mov
sbb
cwtl
jb
pop
xchg
push
inc
cmp
lea
cmc
sahf
test
fisubrl
or
sarl
scas
jle
xor
sbb
insb
out
push
call
inc
lock
adc
bnd
cmp
int3
jg
add
xchg
enter
adc
hlt
popl
add
mov
ss
xor
mov
xlat
sbb
les
push
xor
pop
scas
mov
xchg
in
leave
daa
mov
xchg
adc
pop
jmp
jb,pt
mov
in
jle
adc
and
add
sub
push
pop
scas
rorl
inc
roll
icebp
lret
mov
ljmp
jecxz
in
xor
scas
cs
sbb
push
popf
add
pop
cmp
lret
jns
xchg
push
negb
lock
pop
das
test
sub
mov
jns
jge
pop
or
push
xor
pop
les
dec
xchg
and
and
call
mov
out
loope
pushf
dec
jle
push
cs
push
mov
js
loopne
pop
arpl
dec
pushf
in
mov
mov
xchg
popf
cmp
nop
test
aaa
adc
jl
lea
test
jbe
jl
and
cmp
repnz
push
jp
rol
mov
pop
add
pusha
sbb
mov
push
mov
push
and
or
rolb
cmp
insl
xor
adc
push
rorl
mov
sbb
add
movsb
push
sub
add
scas
cmp
loope
xor
and
mov
bound
sub
out
out
jle
pop
das
movsl
loopne
ret
xchg
out
adc
std
mov
sbb
mov
in
cpuid
xchg
ret
cmp
or
jp
fstps
lock
loop
lock
jge
adc
movsl
into
sbb
mov
lcall
cmp
mov
adc
lret
loope
or
push
notl
sahf
mov
sub
sbb
iret
jle
push
jg
dec
jge
repnz
popa
mov
push
dec
push
les
rclb
push
mov
cmp
shrb
imul
sub
mov
mov
jg
pop
jno
dec
std
js
ja
bound
sarb
movsb
mov
mov
sbbb
jo
hlt
fcoms
pop
out
aaa
js
mov
test
flds
sbb
lahf
das
aaa
pop
loopne
push
aaa
lahf
aad
or
mov
xor
test
aad
jne
lods
in
insl
sub
mov
mov
int
mov
or
insl
mov
fnstenv
fs
inc
je
mov
jecxz
shr
daa
add
xchg
xor
mov
dec
jae
sub
and
adc
push
mov
jb
mov
dec
inc
cld
xor
pcmpeqd
jmp
je
inc
jne
push
xor
lock
xchg
jns
dec
imul
mov
hlt
ss
jb
imul
cmpsl
pop
xor
rcrb
xor
jecxz
add
push
es
adc
pop
scas
dec
mov
xor
inc
into
movsl
and
rcl
jns
addr16
pusha
and
cmc
pop
fdivp
das
insl
lret
mov
and
stc
jbe
pop
xor
adc
or
dec
push
cmp
insl
repnz
fwait
mov
add
pop
fisubrs
mov
lret
ret
dec
mov
sbbl
imulb
mov
sbb
xor
out
aam
iret
adc
and
dec
xchg
sti
xlat
or
cmp
or
fld
movsb
es
inc
jae
push
pop
sbb
xchg
nop
daa
pop
mov
cmp
push
mov
xchg
fcoml
and
and
not
lret
aaa
mov
cmp
xor
or
xor
stos
out
xor
mov
inc
insb
and
push
popa
sbb
jge
dec
inc
repz
mov
pusha
fsubrl
mov
test
int
insl
xor
aam
cmp
jno
sbb
adc
popf
repz
sbb
aas
fimull
cmp
scas
jle
adc
das
adc
in
leave
mov
imul
and
cmp
leave
call
or
into
dec
cmp
cmpsb
adc
sar
dec
hlt
fbstp
or
pop
mov
ds
xchg
xchg
adc
fucomip
add
mov
pop
cmp
mov
xchg
sub
fwait
lds
and
sbb
daa
sbb
jnp
mov
fcompl
mov
sub
xor
xchg
mov
sub
cmp
movsb
in
lret
mov
push
hlt
rcr
ret
jbe
fsub
in
jae
mov
mov
or
ror
mov
inc
and
ffree
jo
aam
xor
jae
pop
outsb
and
inc
shlb
xchg
addb
aas
or
add
lahf
dec
adc
mov
fidivs
push
insb
int3
mov
call
lret
or
cmp
pop
shll
cmp
out
into
jecxz
and
ja
js
cli
add
cmp
gs
push
push
test
xchg
int
jg
sti
nop
std
and
lock
mov
mov
mov
test
cmp
mov
mov
clc
xchg
lods
out
add
ficoml
into
ds
sub
popf
dec
out
xchg
xchg
inc
popa
in
lret
mov
push
xor
lea
dec
in
fdivrl
sbb
or
push
xlat
xchg
or
mov
lock
out
pushf
loop
sub
in
pop
popa
inc
pusha
fildll
adc
mov
add
cmpsb
in
arpl
xchg
scas
fidivrl
mov
je
dec
mov
aas
or
mov
jns
in
fsubs
in
stos
xchg
xchg
cld
jo
cmpsb
in
sbb
sub
mov
mov
fisttpll
int
cmp
jb
ret
pop
mov
mov
fdivs
xchg
aaa
out
lahf
cmpsb
pop
pushf
cmc
es
bound
fsubs
stos
out
scas
mov
sub
stos
aad
shll
roll
out
daa
adc
mov
and
hlt
push
sub
mov
add
push
rol
cmp
das
xchg
dec
add
adc
sub
xchg
xchg
or
inc
add
test
leave
inc
sbb
fisttpll
xchg
push
mov
lahf
sbb
xchg
enter
outsb
xor
aas
pop
or
mov
test
pop
and
arpl
and
mov
xlat
lock
ffreep
fildl
mov
aad
or
pop
push
vmread
shlb
stos
xchg
sahf
gs
gs
js
xchg
mov
mov
mov
push
in
mov
mov
fstpt
pop
fdivr
sarl
push
xor
out
sbb
mov
sub
mov
sbb
aas
inc
test
cltd
push
in
push
sub
sub
jmp
add
test
xor
imul
dec
jnp
cmpsb
out
jl
jo
loop
fisubrs
movsb
mov
jge
ljmp
clc
test
pop
lea
inc
lock
xchg
cwtl
dec
outsl
ss
sub
mov
dec
cmp
inc
pop
mov
mov
push
dec
jnp
xchg
lret
popf
xor
imul
sub
and
insb
daa
pop
xchg
and
push
jge
mov
aas
jns
ja
out
cld
into
cs
imul
adc
mov
pop
or
es
fisttpl
mov
ss
adc
js
mov
out
jg
in
cmp
ror
aas
jno
cmp
pusha
pop
adc
xor
adc
out
stos
rcrl
jne
mov
push
jno
mov
mov
popf
lret
add
mov
addr16
repz
adc
fidivrl
lea
mov
and
jae
adc
add
jno
repz
and
cmp
dec
aas
xor
inc
imul
fwait
mov
jg
lods
and
das
mov
xchg
pop
shlb
es
jne
fmuls
mov
ljmp
cs
jecxz
addr16
inc
mov
popa
xchg
mov
mov
xor
mov
jg
fwait
xor
les
dec
add
fbld
movsl
roll
repz
add
inc
iret
push
sub
lods
ds
xor
aas
add
jge
and
mov
mov
xchg
fcomps
inc
daa
int
mov
andb
test
pop
arpl
and
ficomps
ficomps
or
fs
xchg
cmc
call
leave
scas
outsl
fcom
cmpsb
pushf
or
mov
fisttpll
scas
sbb
inc
shlb
push
or
fimuls
mov
pop
dec
inc
dec
inc
xor
ja
xchg
xchg
popf
dec
clc
loop
push
pop
mov
pop
cmpsl
push
add
dec
jecxz
adc
shl
mov
adc
adc
add
cli
adc
xchg
or
mov
mov
adc
jp
aaa
pop
pop
xor
std
clc
xchg
fsubs
negb
adc
mov
jg
stc
push
mov
imull
xor
dec
loopne
pop
sarl
mov
jb
jns
inc
ds
add
popa
pop
mov
test
sbb
xor
divb
inc
dec
sub
sahf
ficoms
push
out
in
sahf
sbb
ret
inc
repz
cltd
push
testb
cmp
push
fbld
std
and
xchg
cmp
xchg
sub
fwait
lret
mov
xchg
bndldx
xor
das
xor
incb
pop
dec
ret
xor
imul
xor
mov
pop
inc
or
sub
fwait
test
lock
push
cltd
adc
fcomps
sub
shr
jae
ljmp
sbb
sti
jns
or
and
int
add
js,pn
shr
pushf
jb
sbb
icebp
jmp
enter
or
inc
iret
fcompl
xor
ja
jmp
test
mov
lret
mov
or
or
popa
push
dec
mov
test
jp
cltd
inc
cmpsl
mov
je
sbb
or
in
pushf
mov
pop
pop
push
pop
nop
loope
insb
mov
adc
icebp
dec
hlt
cmp
mov
sub
pop
inc
push
testl
jge
leave
in
adcb
fsub
loop
fisubrl
mov
xor
push
xor
fbld
mov
inc
mov
inc
insb
sbb
mov
push
dec
in
lods
je
adc
jle
cmp
imul
pop
loopne
pop
sub
push
filds
dec
mov
and
dec
or
lret
data16
icebp
aam
sbb
and
ljmp
push
sub
push
and
lods
sarl
mov
inc
or
pop
lret
hlt
add
jg
ret
outsl
es
inc
aas
aad
and
cmp
jnp
repz
push
je
insl
je
in
jge
in
lahf
arpl
fimuls
mov
ret
pop
dec
sbbb
and
add
fstp
mov
loope
sbb
cmp
repz
int3
sub
loop
movsb
lea
mov
enter
data16
mulb
ret
xor
pop
inc
dec
adc
ja
test
gs
sarl
adc
adc
rcl
cwtl
sti
add
sbb
fdecstp
cmp
push
leave
ja
ja
jmp
mov
and
and
rorb
inc
pop
jg
cmp
mov
xlat
or
cmp
fmulp
ds
and
repnz
insb
add
inc
stc
aad
xlat
cmpsb
lahf
inc
fsubrs
inc
loop
jmp
pop
aaa
ret
pop
shll
xacquire
adc
lret
mov
cmpsl
lods
addr16
rdmsr
cmp
mov
lods
cli
fildl
insb
pop
mov
add
dec
sti
imul
iret
lock
adc
loop
pop
lahf
inc
jno
mov
mov
pop
sub
out
call
bound
imul
push
leave
fstpl
pop
pop
push
fiadds
xor
dec
lret
mov
js
in
ret
add
xchg
loopne
push
mov
pushf
pop
xchg
stos
cltd
leave
pop
imul
mov
mov
mov
mov
xchg
inc
mov
dec
shl
mov
leave
mov
js
arpl
test
push
pop
out
mov
test
js
add
out
movsl
ret
jmp
mov
ret
xor
cmc
icebp
mov
aad
incb
subb
push
sbb
test
hlt
out
mov
imul
aam
fwait
inc
mov
or
mov
dec
cmp
dec
pusha
mov
inc
mov
pop
and
out
sahf
sti
and
dec
jg
bound
popf
pop
imulb
mov
sub
mov
clc
ret
lock
sti
pop
or
mov
std
cmp
std
jle
inc
loope
bound
push
rcrl
pop
scas
call
xchg
out
lret
hlt
shlb
mov
std
jbe
push
jbe
mov
lret
pop
das
fdivr
mov
lock
adc
incl
add
cli
and
cmpsl
popa
or
hlt
shll
mov
mov
mov
mov
std
mov
jns
jmp
cmc
loope
outsl
jmp
xchg
out
das
iret
out
inc
dec
xchg
mov
mov
mov
negb
shl
adc
cwtl
pop
loopne
and
bound
pop
fdivrl
popf
imul
jnp
sbb
sub
sub
cmpsl
nop
decl
rorb
cmc
sbb
xor
jl
loop
jae
mov
dec
push
inc
js
subl
test
popl
cmp
sub
lret
push
jae,pt
mov
sub
sbb
nop
stos
mov
movsb
lock
arpl
test
pop
cmp
pop
adc
xchg
xchg
jp
out
enter
shl
repz
pusha
jg
lahf
xor
hlt
cmp
pop
mov
or
daa
and
pop
cld
lods
mov
jbe
popa
jp
popa
jb
cs
cs
mov
mov
fisubs
xorl
push
mov
cmp
std
scas
lods
jae
aaa
mov
sub
jp
dec
incb
jns
aas
scas
hlt
lahf
mov
outsl
stos
pop
or
push
mov
fildl
dec
jecxz
mov
or
or
mov
jae
adcl
cmp
jo
or
mov
scas
pushf
mov
mov
sub
jo
insl
push
lret
sub
sbb
cmp
insl
in
lock
jle
inc
lods
addr16
lcall
stos
push
ja
xor
iret
mov
test
xchg
out
jp
pop
lock
lds
mov
pop
or
loope
jmp
or
fstl
xchg
repz
fadd
das
fldln2
or
pusha
push
inc
jl
daa
fs
xor
mov
xchg
and
int3
repz
xchg
push
adc
jae
mov
and
lock
xor
or
cmpsl
call
in
cmpsb
jbe
popa
add
dec
jb
hlt
mov
aas
xchg
inc
std
fcomps
pop
movsl
pop
xor
cmpb
ret
loopne
sub
jb
das
test
stos
cli
lahf
mov
mov
push
and
lds
out
daa
out
fwait
xchg
and
popf
xor
scas
inc
imul
inc
sub
scas
mov
and
fnstcw
adc
test
test
mov
jg
aam
addr16
mov
aas
add
xchg
aad
sbb
addr16
xchg
pop
add
jmp
push
and
les
sub
ficomps
add
gs
subl
sbb
mov
cmc
ja
inc
mov
decl
rolb
lods
mov
les
adc
clc
and
sub
xchg
icebp
xor
popf
bound
lods
sbb
rol
mov
lret
add
cli
xlat
inc
movsl
clc
sbb
dec
sarl
imul
mov
incb
orl
call
jge
mov
das
mov
pop
sub
out
imul
adc
mov
movsl
repnz
mov
popf
aaa
jno
push
out
bound
cmp
adc
popa
enterw
sbb
pop
xchg
mov
and
div
out
rcl
dec
push
jl
mov
inc
fisubrs
or
jmp
sahf
mov
in
scas
je
push
sbb
sahf
push
jecxz
or
sub
push
adc
cmp
lods
arpl
xchg
jg
subb
test
mov
push
xchg
and
adc
es
push
mov
out
push
pop
je
inc
aam
inc
outsl
stos
jg
pop
pop
mov
jo
imul
rcll
test
fisubrs
and
pop
imul
in
fbld
mov
sti
hlt
dec
or
mov
aas
nop
sub
into
add
xor
or
jno
outsb
push
add
dec
in
jne
addl
aaa
test
iret
repnz
nop
cmp
mov
fldcw
jp
clc
fistpl
in
leave
sbb
push
popf
cli
mov
mov
outsb
addr16
pop
jge
sub
aas
frstor
hlt
xchg
xchg
dec
idiv
out
loopne
sub
push
cwtl
aad
js
adc
push
iret
daa
sbb
or
add
or
mov
ljmp
ja
mov
popf
push
push
mov
mov
cmp
ror
cmp
add
mov
shll
mov
and
pop
push
ljmp
stos
fwait
std
jecxz
push
pop
push
daa
mov
jmp
xchg
mov
sub
push
dec
xor
sbb
xchg
cmp
sbb
pop
pusha
pop
xor
jge
outsb
fwait
jb
sti
pusha
pop
xchg
push
jp
add
out
mov
adc
sbb
cld
and
fdivrp
jnp
mov
pop
pop
adc
mov
sub
shll
xorb
les
push
aad
aaa
dec
iret
jle
outsb
fs
shl
dec
icebp
filds
aaa
mov
in
mov
imul
sbb
jle
into
jno
lcall
mov
cmp
cmpsb
dec
jg
dec
xchg
or
mov
push
loop
sahf
outsb
in
in
mov
fidivs
mov
shlb
shll
mov
xor
mov
imul
imul
inc
or
test
mov
stos
pop
add
std
pop
inc
mov
push
fdivrs
pop
repz
add
fildl
sbb
dec
stos
push
mov
mov
inc
cmp
call
cmc
mov
aaa
rorb
pop
les
jp
mov
xchg
stos
or
aaa
loopne
and
sub
enter
cmpl
xlat
xlat
cmp
push
mov
es
loop
cld
xchg
gs
stos
divb
dec
sbb
push
xchg
sub
mov
jnp
sbb
pop
jno
xchg
or
mov
jo
add
decl
ret
mov
in
cmp
cmp
arpl
mov
sbb
jno
mov
fdivl
loopne
xor
test
ja
ret
mov
hlt
imul
jo
jge
jno
fildl
mov
scas
nop
repz
mov
inc
out
pop
adc
fs
fldt
nop
iret
mov
sti
pop
adc
push
mov
dec
cld
pop
hlt
arpl
gs
outsl
adc
pop
pop
pop
out
test
dec
jge
and
imul
notb
int3
loopne
pop
popf
jb
out
xchg
sbbl
push
rcrl
mov
mov
ss
out
lahf
xchg
imul
add
bound
push
shl
jnp
loope
sub
jb
sbbl
xchg
dec
mov
cmp
xchg
pop
arpl
stc
test
les
shlb
adc
aad
out
xor
mov
mov
int3
pop
stc
and
mov
fidivrs
or
lods
xchg
mov
test
jmp
int
add
js
sub
lea
sbb
lret
not
imul
jp
pop
sbb
xchg
xchg
pop
daa
inc
mov
adc
push
mov
mov
sbb
rcr
mov
movsl
dec
mov
les
pop
cmc
mov
int3
mov
int
sbb
loope
mov
mov
shr
sub
xchg
mov
repnz
pop
dec
add
add
mov
xor
or
sub
push
out
add
push
data16
pop
pop
xchg
mov
cmp
adc
inc
nop
adc
in
sbb
into
lds
cmp
iret
getsec
jbe
test
int3
mov
cltd
jns
jecxz
cmc
roll
or
jle
push
sub
aam
sbb
push
mov
sbb
gs
call
or
or
xlat
or
das
cmp
mov
fmull
stos
in
inc
addb
jl
lea
ds
add
and
pop
out
leave
popa
mov
sub
xchg
addr16
pop
pop
or
jle
sbb
mov
sub
pushf
sub
lods
mov
jo
jmp
fmuls
pop
xchg
mov
mov
and
add
jne
std
xchg
push
and
xchg
ja
in
dec
push
mov
cwtl
lock
push
cmp
dec
sbb
xor
push
insl
mov
lods
xor
cmp
mov
push
mov
mov
cltd
sub
ficomps
fnsave
xchg
sub
in
cli
lds
cltd
push
cmpsb
or
mov
addr16
lods
cmpsb
dec
inc
dec
insl
insb
cmc
xchg
inc
mov
pop
fchs
inc
and
mov
icebp
cmpsl
cmpb
inc
pop
call
rclb
movsl
xor
fbstp
and
xchg
xchg
inc
cmpsl
fcmovnu
xchg
lret
je
mov
jmp
in
pop
repz
ret
jge
pop
sti
adc
sarb
aaa
add
pop
adc
add
sub
leave
icebp
leave
mov
mov
leave
jbe
mov
int3
sbb
dec
adc
das
aad
vdivpd
xchg
mov
mov
dec
subl
pop
mov
xor
ret
dec
movnti
pop
or
and
add
ljmp
inc
sbb
gs
pop
sub
jg
aad
lahf
pop
testl
adc
add
inc
push
aad
mov
jb
bound
mov
scas
loop
sub
jae
jp
cwtl
test
int3
dec
stc
sub
das
adc
andl
cmp
out
outsb
ret
dec
dec
jb
pop
inc
call
mov
mov
arpl
adc
int
dec
push
fisttpl
jecxz
test
mov
dec
add
xor
sbb
lret
pushf
or
iret
xlat
sarb
pop
ret
cmp
int3
dec
cmp
in
jle
cmp
ljmp
jmp
dec
fmuls
imul
sub
add
mov
adc
and
inc
cmp
xchg
loopnew
mov
insb
mov
pop
pop
pop
outsl
xor
jecxz
pop
add
mov
pop
jg
outsb
mov
push
jne
cli
inc
mov
imul
dec
fwait
xor
sahf
mov
dec
pause
pop
out
bound
jne
mov
bound
test
and
adc
jno
and
or
mov
dec
sub
inc
ret
adc
pushl
movsl
or
mov
imul
add
mov
insl
test
int
xor
jns
mov
leave
fdivrp
push
imulb
rcll
dec
test
xor
pop
out
sub
movsl
in
pop
and
cmp
ss
dec
es
fdivrs
pop
push
enter
or
aam
ljmp
mov
in
aaa
icebp
outsb
loopne
int3
and
into
xor
out
cmpsl
jge
ss
lahf
insb
fisttpll
lahf
jnp
cltd
sbb
mov
xor
popf
mov
iret
cld
adcb
inc
shll
lret
mov
mov
or
xor
mov
dec
xchg
rcrb
jmp
sbb
push
dec
jge
push
jg
lcall
popf
push
adc
mov
xor
mov
mov
cmp
push
pushf
rcr
jl
out
aam
lcall
aas
sub
jmp
jno
pusha
and
xchg
fwait
inc
imul
lods
out
sbb
int
adc
push
cmpsl
adc
and
leave
pop
dec
pop
xchg
movsl
xchg
js
push
es
bound
inc
pop
mov
outsl
xchg
mov
cmp
lret
cld
inc
in
sbb
cmc
and
mov
lret
lock
out
mov
inc
int
dec
fdivl
insl
xchg
mov
imul
popl
add
out
das
and
shll
repz
xchg
jecxz
in
mov
test
cmp
mov
push
loope
cmp
frstor
outsl
addr16
mov
js
testb
adc
inc
aad
in
test
pop
cli
addr16
mov
and
inc
pop
incl
icebp
inc
test
inc
xor
scas
fcmovbe
mov
nop
jb
jle
xchg
mov
arpl
push
es
jae
je
mov
inc
push
xor
xor
mov
hlt
add
inc
mov
ljmp
and
dec
mov
fidivrl
push
push
dec
mov
dec
add
mov
xor
fdivrl
push
xchg
repz
ret
dec
mov
dec
dec
sub
pop
and
cmp
sub
loope
pop
push
fsubrs
add
sahf
lret
cmc
pop
inc
mov
push
fbstp
lret
hlt
mov
call
or
mov
sub
jae
ljmp
int
shrb
repnz
inc
sbb
std
sbb
lods
lahf
setb
icebp
movsb
loopne
xchg
or
mov
adc
mov
dec
adc
inc
ret
loop
sub
aam
push
jecxz
push
xchg
sbb
jns
mov
sbb
and
mov
stos
mov
pop
xor
adc
add
or
pop
int
cli
mov
inc
jp
out
scas
insb
popa
mov
cmp
cmpsb
enter
inc
push
add
pushf
sub
pop
xor
cmp
inc
jge
aaa
inc
pop
cmp
mov
out
jle
test
pop
push
mov
call
mov
add
pop
jg
lock
dec
xorb
inc
pop
aam
push
int3
cmovae
cld
cmp
mov
lahf
fimull
in
jl
aas
test
pushf
push
sub
incb
push
cltd
iret
mov
jmp
jbe
pinsrw
adc
pop
xlat
mov
inc
fsubr
xchg
ret
mov
in
bound
push
fsubr
mov
dec
insb
mov
xchg
repnz
bnd
lods
pop
push
jnp
and
fdivrp
popa
test
dec
negl
bnd
push
xchg
or
pop
xchg
aam
hlt
pop
insl
lcall
cmp
inc
cltd
rorb
jb
aaa
or
cmp
pop
ret
lret
add
nop
add
xor
test
inc
add
and
mov
ja
inc
jnp
fwait
cs
add
pop
andl
jmp
jmp
sbb
popa
jg
lods
sub
xchg
nop
lods
loopne
or
in
data16
jnp
shrl
in
int
push
leave
jl
cmp
pushf
mov
jge
pop
fldt
or
sbb
mov
sti
test
lods
cmpsl
out
mov
lock
leave
out
dec
jne
ret
xchg
xchg
or
mov
xor
popa
sbb
pop
pop
mov
pop
movsb
dec
fstpl
ret
push
outsb
pop
add
lcall
sbb
imul
sub
jmp
or
and
sub
call
insl
sub
inc
pushf
cltd
js
icebp
xchg
popf
in
push
adc
fidivs
xor
or
bound
xor
mov
xchg
hlt
stos
push
sub
jl
push
mov
fisubl
and
mov
es
mov
pop
pop
sbb
stc
daa
loope
pop
orl
std
jae
sbb
ss
stos
or
ret
inc
daa
int3
cmc
enter
sub
adc
sbb
das
fs
ljmp
enter
out
xor
push
xchg
rcrl
int
xlat
dec
jmp
jecxz
pusha
sub
xor
cmp
pop
push
jecxz
push
addr16
or
fldl
xor
fs
adc
pop
jl
mov
or
jae
or
lcall
jns
xor
fdivrl
sti
in
dec
leave
sbb
mov
sbb
mov
fs
xchg
sub
aas
jns
loope
sbb
inc
xor
clc
cmp
sti
or
leave
jae
scas
pop
pop
pop
xor
fs
lret
jmp
inc
test
sbb
rol
inc
lea
aas
xchg
popa
fwait
leave
xor
pop
pop
insb
movsl
in
push
sub
xor
and
jmp
ret
aam
out
jl
shlb
add
mov
gs
out
jno
mov
push
push
scas
lock
jmp
xor
mov
arpl
push
in
fcompl
and
xchg
cs
stos
pop
xchg
jb
mov
loop
lods
pop
in
mov
lret
fbstp
push
repz
mov
dec
cmpsb
xor
in
lock
and
mov
ss
stc
popf
mov
push
es
repnz
pop
movsl
sbb
aas
cmp
movl
mov
ja
stos
jp
dec
push
fsubrl
add
scas
sbb
out
xor
arpl
push
int
xchg
pop
out
icebp
sbb
or
out
bound
lods
xor
add
lds
jno
dec
ret
xchg
dec
sbb
out
rorb
in
arpl
enter
cmp
inc
stos
or
jl
push
push
or
dec
xlat
mov
rcrb
push
and
sbb
jae
mov
inc
out
sub
or
sbb
adc
jnp
jno
and
mov
shrb
sub
dec
mov
movsb
push
mov
mov
fdivr
dec
adc
push
lods
xchg
cli
cld
rcll
pop
adcb
cmp
les
push
inc
ret
adc
mov
ret
mov
pop
scas
mov
push
lods
jo
dec
xor
pop
adc
jg
in
cld
xor
cmp
sub
sbb
cmpsb
jp
dec
scas
add
bound
sbb
push
ljmp
mov
xor
bound
mov
xor
mov
xchg
jmp
jg
cmp
sbb
push
out
cmpsl
pop
ret
xor
ret
clc
aam
movsl
lret
adc
pop
pop
fcomps
lahf
std
mull
mov
adc
pop
pop
jle
adc
mov
jb
imul
and
push
lock
inc
arpl
cltd
lret
pop
repnz
pop
pop
fldenv
xlat
int3
nop
dec
inc
repz
rorl
inc
cmp
arpl
out
mov
pop
ds
jl
xor
adc
sub
cmp
sbb
jl
fldcw
and
xchg
ljmp
shll
push
xor
in
insl
cltd
push
push
addl
and
mov
push
hlt
int
or
aas
out
and
out
into
xor
movsl
test
mov
push
xchg
ljmp
push
js
rcrb
xchg
pop
mulb
test
or
mov
bnd
jbe
lds
int3
push
out
dec
rorl
rcr
imul
pop
add
jno
mov
movsb
out
xchg
xor
mov
sub
popl
add
pop
jbe
out
push
scas
andb
dec
dec
sbb
sub
mov
and
cltd
cmp
ss
lds
xchg
sbb
inc
aam
sti
sbb
fs
xchg
movsb
sbb
in
xchg
dec
xchg
cmp
and
jl
add
mov
jno
int
fwait
lds
aas
jmp
insb
cmc
lea
adc
lods
mov
or
lcall
test
mov
mov
cmpsb
in
les
cmpsb
or
stos
and
js
dec
daa
arpl
cmpb
js
adc
add
dec
lea
loop
imul
mov
inc
rclb
loop
ss
gs
mov
lock
sub
rcrb
lret
pop
mov
out
inc
shl
jecxz
xor
mov
xchg
adc
fisubrl
clc
sti
outsb
sbbl
dec
sub
andl
addb
lret
loop
or
out
xchg
or
adc
mov
cmp
mov
icebp
add
push
mov
outsb
cmp
fisttpll
fbld
xor
ja
mov
imul
in
and
fiaddl
mov
pop
mov
bound
in
out
fnstcw
sbb
adc
cmp
movsb
std
add
daa
cmp
leave
mov
sub
scas
push
cmp
and
jle
and
aas
and
arpl
in
push
mov
adc
pcmpeqb
sub
mov
xchg
fs
bnd
dec
inc
mov
inc
xchg
aas
jp
cmp
hlt
cmpsl
dec
ret
in
out
fildll
push
mov
xchg
push
js
cmp
fnstsw
enter
pop
cmp
fsts
jb
inc
adc
dec
sbb
jb
cltd
fisubrs
mov
lods
pop
or
and
leave
jl
rcrl
clc
mov
adc
test
sti
xchg
xchg
stos
sub
dec
repnz
mov
xchg
adc
scas
mov
nop
movsl
adc
das
add
mov
popf
or
outsb
push
pop
fwait
sub
insl
inc
and
xor
mov
add
addr16
out
loop
inc
jo
in
mov
mov
adc
into
scas
scas
pop
mov
insb
aam
je
sub
pusha
lret
testl
mov
out
push
push
imul
or
xchg
dec
xchg
sbbl
inc
daa
lods
mov
cmp
xlat
push
pop
shrl
lahf
sub
daa
adc
sub
add
or
dec
test
mov
stos
icebp
pop
cmc
fwait
aas
push
rcr
and
push
popf
data16
in
jge
adc
push
repnz
ret
ret
hlt
and
pushl
shll
test
cld
popf
sti
and
xchg
jmp
cpuid
sbb
cmpsb
ja
xchg
je
and
push
mov
les
xchg
and
neg
jae
sbb
inc
add
rol
inc
xchg
js
jbe
jae
stos
pop
sar
arpl
ljmp
push
stos
jbe
repnz
xor
sub
nop
repz
lods
xchg
inc
pop
popf
add
dec
mov
dec
dec
pop
mov
jg
arpl
dec
and
jmp
xlat
loopne
push
mov
and
inc
adc
ret
dec
les
fsubs
sbb
dec
pop
pop
xor
fnsave
pop
jge
fstpt
push
mov
dec
adc
sub
push
fildll
or
jl
out
sub
push
inc
das
mov
insl
lcall
pop
fidivrl
push
and
pusha
xchg
cmp
jne
jo
xor
test
xor
fisttpll
adc
fdecstp
add
mov
incb
xchg
adc
xchg
pop
mov
jno
jle
testb
cmp
add
cmpsb
je
pop
cli
imul
and
xchg
dec
movsb
stos
sbb
sahf
jmp
dec
jge
adc
sub
sbb
dec
movsb
js
or
sarb
inc
mov
out
xorl
in
mov
movsl
out
fwait
mov
jno
pushf
aam
lcall
roll
mov
fcompl
cwtl
out
call
call
loop
subb
in
cwtl
clc
mov
push
push
bound
test
jae
stc
and
shll
out
mov
nop
dec
jno
or
mov
xchg
cmp
dec
fwait
or
rorb
loop
mov
mov
in
fwait
test
ja
leave
lods
sub
ret
lret
inc
mov
adcl
cmp
xchg
int
sbb
dec
or
xor
or
dec
xchg
dec
jne
lcall
pop
movsl
dec
jbe
je
inc
mov
sti
push
imul
adc
int3
loopne
vpshufd
es
or
cwtl
dec
push
and
outsl
pushf
pop
fs
mov
je
mov
mov
out
fsubrl
testl
adc
push
js
push
ficoms
adc
jne
dec
adc
std
lods
outsl
hlt
pop
pop
js
inc
in
mov
sbb
out
daa
test
test
or
scas
hlt
test
and
dec
jno
std
mov
test
jmp
cmp
mov
mov
dec
bnd
ficompl
stc
mov
aas
daa
aaa
pop
je
add
and
outsl
mov
leave
add
push
ljmp
cmp
fs
insl
inc
xor
stos
xchg
repnz
fiaddl
mov
mov
aad
xor
mov
dec
pop
test
sub
shl
test
pop
or
movsl
jno
mov
sub
shll
stos
mov
sbb
out
dec
sub
add
mov
pop
lret
push
fs
cmp
mov
lock
jbe
cld
xor
fcomp
dec
les
inc
scas
sbb
pop
mov
jae
xchg
mov
or
jns
xchg
jae
sahf
lds
cmp
insl
loope
or
xor
mov
or
cmp
aam
cmp
lds
out
scas
cmp
mov
and
aaa
or
xor
ret
es
arpl
js
xor
or
aaa
mov
mov
lcall
xorl
pop
mov
stos
sar
sbb
mov
movsl
lods
outsl
inc
or
outsl
sti
std
mov
sbb
ds
pop
jae
popf
bound
mov
out
jno
stos
adc
test
xchg
mov
pop
cltd
mov
sbb
hlt
icebp
sub
or
insl
rep
cmpb
adc
dec
out
sbb
mov
fcmovbe
pop
lea
xor
pop
cmpl
enter
mov
or
cmp
movsl
mov
lret
mov
push
aad
jmp
stc
movsb
mov
add
inc
sbb
jae
cmp
test
xchg
nop
xor
outsl
xor
push
pop
imul
jp
xor
push
dec
jmp
ss
std
sbb
push
imul
pop
push
test
xlat
out
aad
dec
out
test
or
sbb
jbe
fbstp
sbb
push
ds
mov
sbb
loope
jae
sub
add
pushl
sub
jecxz
mov
xchg
sbb
fistpll
pop
int3
fimull
stc
xor
js
and
pop
sub
fdivl
gs
add
cs
jmp
mov
cld
inc
sub
pop
jb
lods
xchg
cmp
mov
fbstp
arpl
pop
int3
arpl
hlt
cmp
cli
pop
imul
push
and
pop
jmp
xor
jo
add
cs
ja
add
adc
mov
leave
imul
rcrl
xchg
loope
sbb
cmpsb
push
mov
jge
mov
es
jp
dec
pusha
iret
adc
icebp
outsb
fwait
in
popf
cmc
mov
pop
jbe
out
insb
movsl
loop
jg
sbb
mov
push
xchg
jne
int3
mov
shrl
arpl
mov
xchg
or
in
fwait
cltd
jne
xor
rolb
or
inc
inc
push
inc
loop
sbb
repnz
shll
mov
xor
lods
mov
in
mov
mov
imul
pusha
repz
jecxz
mov
jae
imul
mov
xor
pop
cld
lcall
ret
mov
nop
mov
dec
pop
push
test
pop
inc
fcomp
scas
aad
arpl
loope
and
sub
dec
imul
or
adc
mov
xchg
and
cmpsb
gs
xor
shll
push
push
lahf
sahf
hlt
fwait
fwait
pop
cltd
mov
dec
cwtl
outsb
mov
push
adc
repnz
mov
push
push
xchg
adc
dec
jle
xorl
dec
lret
cld
js
ficomps
mov
shlb
fsts
and
xor
mov
sub
lret
jge
je
cli
imul
jbe
jbe
push
fadds
dec
jo
push
and
call
jae
outsl
psubusw
mov
lea
in
repnz
cmpsl
mov
jno
add
sub
or
sahf
test
and
mov
push
or
out
roll
aaa
or
icebp
xchg
xchg
mov
mov
push
sub
mov
stc
add
fistl
incl
pop
out
mull
mov
jg
jne
bnd
shrl
loope
in
test
sub
cmc
hlt
and
pop
or
add
jo
mov
out
xchg
push
ret
mov
aas
mov
jg
dec
roll
xlat
mov
repnz
cmp
movsl
popa
mov
dec
repz
int3
cmpsb
mov
jbe
aaa
add
pop
imul
incb
out
div
sub
das
sahf
call
jle
imul
out
call
adc
ret
popa
stos
and
dec
sbb
xor
jno
and
inc
scas
and
xchg
push
xor
sbb
xchg
pop
cmc
mov
xor
popa
in
adc
pop
mov
bound
sbb
mov
in
sti
cmp
test
test
push
rcrb
or
test
es
cli
out
cltd
or
and
inc
mov
push
pop
xor
push
jge
sbb
cwtl
push
cltd
sub
pop
out
push
aaa
bound
xor
jb
cmc
in
mov
inc
mov
sahf
sti
imul
cmc
ja
xor
sbb
pushf
and
cmp
scas
pop
mov
mov
xlat
out
rorb
outsb
jle
popa
sahf
imul
popl
dec
mov
notb
in
jb
and
lea
mov
inc
push
daa
xchg
jecxz
js
daa
cli
mov
mov
add
and
mov
outsb
inc
push
mov
loop
movsl
mov
push
in
iret
daa
iret
adc
xor
sbb
test
cmpsb
mov
mulb
out
sub
and
lds
sarl
add
jb
adc
gs
jmp
sbb
push
ret
cld
fisubrs
cmc
inc
adc
mov
sub
mov
pop
adc
add
mov
stos
lret
pop
cwtl
daa
scas
or
add
stos
add
adc
fstl
and
and
subl
jbe
ds
icebp
xor
stos
ja
pop
xchg
push
ret
pop
in
and
adc
mov
dec
testl
push
adc
pop
sub
pop
xor
ljmp
xchg
push
sub
xchg
cmpsl
sbb
rorl
ds
es
push
call
cmp
shrb
in
push
pop
adc
pushf
ljmp
jmp
jp
cli
mov
push
cld
sub
icebp
daa
mov
aas
stos
jnp
inc
and
scas
adc
movsb
sbb
push
inc
dec
rcr
adc
mov
popf
mov
jnp
mov
xchg
test
add
jo
pop
sbb
outsb
shll
cltd
es
cmpsl
pop
inc
addr16
push
xorl
sbb
push
xchg
xchg
fildl
dec
test
daa
pop
ret
xchg
fcoml
out
inc
cli
pop
add
pop
jp
mov
pop
pop
adc
jecxz
repnz
in
xor
xor
hlt
sub
rol
mov
enter
jmp
or
mov
in
idivl
les
jg
cmpsb
test
lods
addr16
enter
xor
mov
in
shrb
call
xor
add
cmp
add
xchg
movsl
fnsave
xchg
outsl
add
and
and
movsl
insb
sub
icebp
mov
call
jae
cld
andb
mov
push
xor
xor
inc
mov
imul
jle
push
sbb
cmp
and
cmovnp
adc
mov
inc
sub
push
or
inc
sub
or
dec
adc
stos
scas
jle
pusha
adc
sahf
lods
mov
daa
arpl
inc
mov
push
mov
sub
mov
es
mull
xor
hlt
add
je
jecxz
push
inc
jle
shll
pop
sub
push
or
addr16
rolb
je
fistpl
in
sti
sub
pop
aam
test
push
fdivr
nop
dec
mov
or
dec
mov
and
insl
stos
mov
rclb
dec
or
scas
mov
fs
or
sbb
lcall
sub
jl
cmp
adc
js
hlt
ret
push
mov
fildll
pop
stos
les
pusha
jo
jne
cmp
mov
jbe
fnstcw
jne
dec
aas
mov
pop
out
dec
out
jne
rcll
jmp
or
dec
not
je
dec
cli
add
icebp
pop
sbb
loopne
push
inc
cmpsl
imul
jno
lcall
cmp
xchg
push
std
outsl
cmp
xchg
inc
adc
scas
popf
ljmp
jo
dec
mov
push
rorl
div
shlb
inc
test
push
repnz
mov
out
stc
das
push
mov
sub
push
shlb
xor
fcmovb
data16
dec
idivl
jnp
and
xlat
jg
int3
stos
popa
ss
lahf
fnstenv
pop
je
cmp
dec
data16
sbb
std
mov
xchg
insb
popa
inc
loopne
pushf
pop
mov
je
xor
dec
jb
std
inc
xor
and
add
gs
xchg
lock
sti
cli
xchg
add
mov
cwtl
xor
pop
lods
xor
test
mov
inc
xrelease
push
lahf
repz
fists
mov
fwait
lret
lcall
jnp
test
hlt
cs
pusha
rol
lods
outsb
mov
or
jl
push
adc
cmc
cwtl
mov
mov
pop
inc
mov
mov
xchg
aam
loop
sbb
add
push
fnstenv
or
and
pop
dec
mov
add
nop
bound
jo
and
inc
imul
inc
jl
aad
fs
subl
test
pop
mov
dec
mov
cmc
sub
or
sbb
mov
mov
mov
push
outsb
mov
lock
mov
or
flds
pop
inc
nop
out
pop
test
lcall
leave
push
aaa
stos
mov
lcall
jns
out
aas
cmp
pusha
fs
gs
in
inc
mov
xchg
adc
rolb
or
dec
insb
inc
or
mov
dec
std
pop
pop
push
mov
mov
xor
cmpl
enter
ljmp
sbb
in
arpl
sarl
repz
int
div
add
adc
push
sbb
jmp
ljmp
aam
aaa
cmpsb
inc
imul
sbbl
push
out
push
sbb
jbe
test
dec
sub
xor
loopne
add
lret
mov
test
stc
and
sarl
mov
pop
add
jae
xorb
xor
xchg
push
ljmp
lods
push
cmp
adc
xor
pusha
sbb
inc
sub
mov
test
das
inc
adc
aad
imul
xchg
loop
push
psubsw
sub
cmovb
shl
push
out
cli
and
xor
sub
mov
xor
cmp
pop
lods
out
mov
leave
mov
pop
popa
add
mov
ds
mov
popf
push
aam
push
xor
mov
psllq
into
shll
push
repnz
xchg
std
icebp
adc
gs
mov
les
orb
stc
mov
xchg
pushf
xchg
mov
xlat
arpl
loop
xor
fisubrl
adc
out
sbb
loop
lret
and
mov
mov
test
add
lds
xchg
dec
test
outsb
jo
sub
pop
sub
shll
jle
xchg
and
leave
mov
fmull
popa
in
xchg
in
rcrl
or
push
fcmovbe
mov
pusha
fisubl
scas
push
sbb
xchg
pop
rcrb
leave
lods
sub
mov
stc
mov
ds
jo
lret
sbb
xchg
outsl
cmpsb
xchg
push
mov
xchg
jl
add
cmpsb
xor
pop
popa
inc
mov
or
adc
or
ds
mov
sbb
lcall
arpl
aas
mov
in
mov
inc
mov
ds
pop
outsb
cmpsb
mov
stos
mov
repnz
mov
in
push
sub
xlat
gs
les
push
push
and
scas
in
mov
arpl
popf
outsl
and
aas
push
and
stos
test
push
push
push
ss
in
rcl
fs
push
mov
sub
ds
cmp
lcall
shl
xchg
dec
pusha
std
insl
mov
test
lods
cltd
push
mov
or
arpl
sarb
xchg
or
das
mov
orl
or
repnz
sub
push
loope
icebp
stos
pop
mov
pop
out
mov
fscale
outsl
test
cld
lock
repz
jg
cmpsb
xchg
ds
vpshufd
icebp
pop
jb
sub
and
jg
push
lds
scas
mov
bound
sbb
adc
mov
mov
adc
mov
fstpl
jle
mov
inc
bound
je
fwait
xor
or
xchg
mov
or
cmp
ja
mov
clc
ss
fwait
fwait
adcl
xchg
push
sub
loopne
ret
in
in
stc
nop
mov
int3
lea
pop
ret
jae
sbb
pop
inc
inc
mov
pop
and
cld
cmpsb
adc
push
jae
sbb
push
incb
mov
movsl
rcrl
ror
mov
or
push
add
jmp
mov
fmul
lcall
mov
cmpsl
dec
sbb
pop
test
xchg
clc
add
clc
cmp
jo
dec
adc
mov
mov
leave
mov
jl
cltd
xchg
sbb
divb
pop
lret
shr
xchg
mov
call
or
jb
int
pop
inc
pop
in
cli
inc
daa
test
pushf
or
rcl
pop
stos
lret
aam
push
mov
sub
js
xlat
adcb
movsb
bound
fcomps
sbb
aam
push
loope
loopne
xchg
test
push
push
xchg
das
cmp
cwtl
rcl
adc
out
loope
add
fsubr
aam
jl
aaa
out
cmp
push
lock
push
int3
fcoml
jbe
loop
push
jbe
clc
div
adc
jge
popf
aad
popa
icebp
mov
push
fisubrs
mov
popa
cs
push
sub
inc
test
popa
popa
hlt
xchg
mov
adc
sahf
dec
cwtl
mov
push
xchg
xchg
andb
sub
rorb
je
or
ret
das
jne
push
xchg
pop
xchg
shlb
xchg
jp
cwtl
nop
sbb
or
aaa
les
roll
or
mov
cmp
mov
cmp
sub
mov
pop
mov
adc
repnz
xor
mov
repnz
test
ret
pop
scas
cmp
test
rcr
fistpll
lret
inc
testl
add
jp
bound
mov
pushf
nop
lea
ret
dec
xchg
pop
sub
and
xchg
int3
xchg
push
cmp
mov
mov
int3
jbe
jmp
pop
or
cld
jno
jge
adc
shll
mov
js
imul
loopne
or
push
or
mov
test
xchg
push
outsb
call
xor
push
lock
cmp
pushf
popf
push
shl
xchg
jg
lcall
outsl
inc
pop
ret
jb
xor
pmaxub
es
sbb
mov
cwtl
xchg
push
int3
rol
sub
rcr
pop
sub
hlt
pop
xor
mov
push
sbb
aaa
pop
repnz
imul
andl
imull
adc
mov
and
addb
cmpsb
pusha
sbb
adc
push
sbbl
inc
lcall
cmp
xchg
mov
sub
pop
inc
lds
or
lret
leave
test
xor
stos
xor
jns
fdivrs
mov
dec
ljmp
and
popf
cli
out
jae
xchg
jb
inc
xchg
inc
push
sbb
arpl
inc
sbb
pop
xor
push
pop
xchg
sub
lcall
movsb
out
mov
mov
int
and
xchg
pop
mov
pop
and
jmp
data16
call
lock
xor
dec
pusha
cmp
repz
mov
es
imul
fwait
add
lea
out
out
push
roll
mov
adc
in
jle
pop
sub
mov
inc
test
xlat
push
dec
xchg
mov
div
out
faddp
and
pop
mov
cmp
lahf
sub
cmp
in
sahf
test
pop
dec
pop
paddq
jp
lods
test
aam
hlt
stc
call
jge
xchg
and
setb
movsl
hlt
mov
in
pop
or
add
incb
out
pusha
aam
daa
inc
movsb
icebp
xchg
dec
shll
inc
in
add
pop
mov
fstl
lds
xor
jp
lds
inc
pop
xor
cltd
push
mov
pop
pop
sub
out
xor
into
mov
fcoms
and
sub
mov
ss
jmp
ds
lcall
dec
daa
push
mov
fs
pop
mov
pop
ss
punpckldq
mov
lods
popf
or
and
xor
mov
or
ss
icebp
sbb
mov
lret
inc
jne
pop
xchg
sbb
jg
cld
lds
outsl
cmp
adc
out
mov
jmp
add
out
popf
mov
inc
cmp
aad
and
movl
cmp
cmp
sbb
mov
dec
fxtract
dec
movsl
adc
scas
push
mov
pop
fcompl
arpl
inc
pop
andb
or
aad
cmp
stos
loope
or
out
or
in
jae
and
jle
xchg
in
xchg
xchg
nop
fwait
cmp
std
or
sbb
stos
xchg
enter
mov
mov
mov
int3
mov
arpl
dec
pop
shrl
inc
cmp
arpl
xchg
mov
sbb
xabort
gs
jl
mov
jo
fs
jl
sub
and
inc
and
dec
in
lret
ljmp
pop
jae
jno
movsl
sub
jp
imul
dec
arpl
out
orb
sub
mov
cmp
add
and
movsb
and
pop
jae
ficomps
push
ja
aam
add
dec
jmp
rcrb
inc
cmp
lea
jecxz
inc
mov
xchg
mov
in
jp
es
lods
gs
imul
divb
mov
mov
cmc
or
int3
dec
ret
jecxz
ja
es
test
mov
gs
pushl
jne
xor
or
imul
sub
shlb
test
dec
xchg
xchg
push
frstor
mov
cli
sbb
cltd
dec
mov
add
sbb
adc
pop
ret
rorl
mov
adc
mov
push
repz
or
or
sub
idivl
mov
jb
pop
int3
ret
shrb
pop
push
adc
sbb
pop
mov
dec
aam
in
mov
cli
lods
xor
mov
loopne
pop
push
mov
and
or
sub
insb
in
lret
rorl
sbb
cmpsb
in
pusha
sbb
or
mov
ficoml
pop
repz
repnz
insl
pop
nop
ret
cmpsl
mov
enter
or
push
adc
cli
jp
inc
das
cwtl
in
adc
sub
jae
dec
lret
nop
cli
sub
dec
in
cmc
in
outsl
mov
arpl
fmul
fisubrl
hlt
in
push
neg
push
jge
sti
sub
mov
cmp
dec
mov
insb
mov
pop
das
dec
arpl
mov
push
xchg
sub
inc
fimuls
ljmp
inc
or
in
in
inc
lods
xchg
and
push
add
xor
mov
cs
addr16
mov
ds
sbb
push
movsl
mov
xor
inc
js
push
and
fcmovbe
jne
notl
loop
xchg
push
pop
outsl
mov
fists
add
js
neg
in
pop
push
sub
scas
lret
test
jle
dec
pop
and
jg
adc
xor
inc
shrl
pop
xchg
mov
cwtl
int3
xchg
or
jle
xlat
jno
sub
adc
jno
shlb
dec
and
and
mov
push
add
fdivrl
fmul
in
cmp
fcompl
inc
and
inc
je
xchg
mov
jb
pop
sahf
fmull
ljmp
in
nop
jmp
cli
cmp
in
shl
incl
xor
jp
lret
jmp
xchg
inc
test
xchg
movsbl
leave
add
push
bound
mov
dec
push
mov
and
sbb
push
into
sub
cmp
xor
pop
cmpl
ret
adc
push
sub
xor
jp
mov
cld
lahf
ret
dec
cmp
addl
in
xchg
sbb
pop
fwait
pop
cwtl
xor
jbe
out
jbe
pop
std
stos
mov
jb
imul
loopne
xchg
mov
out
incb
xor
push
lods
inc
test
xor
fcompl
or
ds
enter
dec
sbb
pop
stc
xchg
movsl
push
xchg
dec
inc
test
mov
jp
xchg
orl
stc
dec
test
inc
dec
or
ss
pop
mov
fwait
imul
xchg
enter
lock
loope
mov
sub
pusha
push
xchg
push
adc
jbe
setns
lret
test
mov
mov
in
rep
adc
mov
add
jmp
xor
adc
hlt
dec
popf
pop
pop
mov
js
mov
add
jle
pop
int3
mov
inc
mov
popa
pusha
add
in
cmp
flds
add
mov
dec
xchg
and
imul
push
inc
push
jae
add
pop
int
clc
popa
and
outsb
enter
or
mov
push
xchg
lret
insb
enter
ror
and
cmp
movsb
icebp
sbbl
mov
popf
adc
es
fdivrl
stos
mov
xor
push
or
out
sbb
or
in
push
js
sub
inc
sub
mov
xor
repnz
mov
roll
rol
ljmp
repz
adc
or
add
add
inc
adc
notb
pop
pop
cmp
inc
cmp
sub
cmp
jmp
out
popa
adc
repz
lds
adc
mov
or
pusha
outsb
movsb
adc
jno
pop
test
flds
std
arpl
sbb
imul
mov
dec
fildll
inc
sub
pop
lds
test
jns
push
cwtl
sub
or
into
mov
cmp
daa
dec
xor
fwait
mov
sbb
and
push
fs
mov
cmp
test
andl
ljmp
and
mov
pop
adcl
mov
mov
sub
jle
add
xor
daa
or
adc
push
fnstenv
pop
mov
bound
mov
or
outsl
pop
ficompl
pop
hlt
inc
decl
dec
xor
scas
data16
inc
mov
or
dec
xor
mov
xor
gs
jg
dec
scas
paddusb
dec
iret
push
stc
mov
dec
mov
add
dec
xor
fisttps
paddq
push
mov
mov
je
insl
dec
mov
mov
dec
imul
out
pop
push
lcall
add
sbb
push
mov
dec
repz
lcall
sbb
in
cmp
and
and
cmp
pop
mov
xor
xor
sbb
mov
inc
shrd
lea
jb
in
mov
push
loope
pop
xchg
aas
xor
mov
jmp
inc
stos
sub
jg
xchg
insl
mov
mov
sahf
ljmp
sub
xor
sbb
insb
in
ret
ljmp
pop
shll
cwtl
cmp
cmp
or
subl
pop
jno
aam
xchg
aam
lahf
fs
mov
lock
lods
and
pop
push
xchg
aaa
inc
cmp
dec
sub
decb
fldl
sub
jge
xchg
push
push
cmp
mov
mov
das
out
inc
jnp
arpl
adc
sbb
sbb
dec
stos
loopne
adc
push
das
or
cmc
pushf
jns
mov
ss
lock
data16
pusha
add
mov
jb
cltd
sbb
scas
push
xlat
pop
mov
mov
mov
jo
cmp
aaa
xor
jns
repnz
out
dec
xor
mov
in
cmovs
test
add
aam
inc
shrb
mov
notl
ljmp
and
xor
dec
add
xor
xchg
into
inc
jb
daa
cmpsl
push
add
scas
imul
inc
or
loope
popf
adcb
or
lods
lret
xor
xlat
mov
pusha
insb
fnstenv
data16
sub
lds
xchg
mov
loop
lret
sub
jbe
mov
inc
pushf
push
jmp
cld
jnp
std
icebp
scas
sub
ret
imul
je
jp
or
mov
adc
add
mov
mov
dec
inc
or
adc
loop
loop
pop
or
aam
fisttpll
xor
lds
insl
mov
add
xchg
mov
clc
or
or
xchg
cmp
xchg
in
fwait
adc
xchg
in
loopne
mov
jge
fcomip
repnz
lds
push
leave
add
add
cmp
hlt
je
and
mov
loop
add
aas
jle
push
add
movsl
push
inc
jae
sti
aaa
das
sub
cmp
mov
ja
je
push
cmp
test
add
gs
lret
sahf
scas
mull
cmp
test
cmp
ja
je
pop
and
inc
xchg
aad
sahf
xor
adc
movsl
or
inc
std
addr16
mov
inc
mov
popa
jno
mov
ljmp
js
stc
movsb
jl
dec
mov
sub
push
lret
out
push
enter
fnstsw
add
ljmp
sub
data16
mov
dec
pop
scas
out
fnstcw
or
mov
mov
in
pop
fiadds
adc
test
dec
bound
jns
dec
lret
mov
sub
cld
sti
nop
out
sub
push
out
cmc
push
cmp
sbb
cltd
bound
sbb
addb
rorl
sub
ljmp
mov
jnp
mov
pop
int3
push
push
sbb
push
jp
popf
pop
lods
data16
popa
mov
inc
cmc
and
inc
mov
mov
mov
ja
xlat
popa
ret
in
pop
lock
and
sub
out
push
cld
cltd
mov
ds
adc
lahf
push
aam
add
jnp
adc
les
dec
and
add
or
cmp
pop
push
sub
pop
add
inc
jns
lret
xor
cmp
xchg
std
in
ficomps
idiv
dec
jb
sbb
add
cmp
dec
inc
test
jo
mov
ja
jns
scas
imul
into
inc
xor
jb
out
xor
push
add
arpl
sti
dec
push
rorl
aas
and
pop
daa
lea
add
mov
call
dec
mov
xorl
jnp
cmpsb
lret
das
xchg
testb
and
fucomip
in
mov
mov
sbb
dec
xor
inc
add
xor
repnz
icebp
ljmp
fisttpl
in
outsl
adc
add
scas
imul
mov
jle
jg
pop
jmp
inc
push
jmp
jb
sub
decb
fscale
insl
sbb
outsl
aas
dec
pop
ret
xchg
xor
movsb
imul
xacquire
jns
jb
insl
inc
push
or
add
and
lds
aaa
aad
dec
and
or
cmc
test
movsb
popf
shll
push
stc
inc
and
out
xchg
mov
dec
into
popa
jno
test
mov
sub
inc
les
repnz
cmp
aaa
push
into
subl
cmp
mov
lret
hlt
and
cmp
dec
daa
ret
faddl
xor
movsl
aas
mov
lea
sbb
and
push
insl
cmp
mov
pop
pop
addl
jp
test
jge
sbb
loope
data16
adc
jmp
je
sti
cmp
mov
or
pushf
pop
fsts
negl
sub
xor
or
popa
mov
movsb
sahf
repnz
fstl
hlt
adc
jbe
in
jge
push
int3
repz
popf
xlat
stos
popf
shrb
xchg
das
outsb
jecxz
or
mov
iret
nop
out
xor
sub
int
inc
fwait
pop
mov
repz
sti
add
jnp
aaa
push
or
cmpsb
cltd
inc
in
mov
bound
push
adc
or
pop
imul
mov
adc
mov
popa
loope
xor
or
jb
adc
out
shrl
pusha
sarb
addr16
inc
adc
jae
jno
sbb
add
xor
cmp
pop
sub
push
mov
in
mov
out
jge
sub
add
mov
jns
add
pop
mov
gs
arpl
ja
subb
pop
cmp
mov
lea
xchg
sti
add
fidivl
addl
test
ret
and
xchg
int
xchg
jmp
test
in
outsl
sub
iret
pop
ret
pop
sbb
mov
icebp
inc
push
leavew
int3
out
andl
xchg
fsubrs
fwait
mov
daa
xchg
or
push
or
sbbl
cmp
or
rcll
jne
jge
cmp
test
or
out
pop
pop
cmpsb
cmpsl
or
jp
add
fwait
and
mov
sti
roll
lock
in
int3
jg
leave
or
pushf
pop
jnp
push
ljmp
xor
push
pushf
std
ss
out
push
pop
mov
push
pop
pop
ss
dec
hlt
or
push
sbb
test
enter
into
popf
inc
ret
jle
in
in
xlat
loop
xor
dec
out
stos
sbb
mov
insb
xorb
pop
mov
dec
lea
mov
push
adc
mov
push
xchg
mov
lock
out
aam
shlb
bound
and
jno
int3
lahf
pop
xchg
out
in
aas
cmpsl
jl
jb
shlb
xchg
or
xor
aas
daa
daa
xchg
and
aas
cli
lock
cmp
pop
stc
sub
mov
jp
cli
xor
mov
dec
mov
jo
std
les
mov
push
mov
xchg
push
mov
daa
movsl
rcrb
jmp
les
pop
js
loopne
imul
pop
int
stos
jb
adc
sbb
cmp
lds
lds
mov
int
inc
adc
mov
jp
rolb
sub
mov
adc
je
lock
js
dec
jl
outsl
test
pop
rclb
inc
sub
jp
ret
js
inc
xor
xor
fidivrs
xlat
int3
xor
and
mov
push
cltd
add
mov
into
jns
jno
or
ret
adc
jmp
scas
mov
sub
add
cmpsl
std
pop
aam
into
pop
mov
repnz
aad
scas
or
fidivrl
movsl
cltd
in
sbb
adc
js
pop
movsb
pop
inc
mov
mov
xchg
adc
add
or
pop
clc
xchg
iret
stos
lret
or
mov
arpl
pop
dec
popf
add
ds
push
pop
in
iret
jp
std
add
call
fsubs
test
xchg
pop
pop
adc
pop
test
pop
lds
repz
pop
jecxz
mov
inc
mov
xchg
push
test
mov
jo
xchg
mov
jecxz
scas
sbb
inc
mov
dec
mov
dec
rcrb
cmp
pop
adc
out
mov
lea
push
bound
ja
jnp
pop
repz
clc
jo
lds
pop
sar
fwait
out
iret
inc
andb
cmpsl
loop
aas
cmp
add
lds
outsl
stos
sub
es
pusha
jecxz
push
pop
lret
daa
mov
mov
or
sbb
sub
es
or
push
inc
push
cmp
cmp
dec
cltd
push
popa
cmp
and
sbb
jnp
push
pop
pushf
mov
adc
enter
mov
scas
jno
push
pop
jne
or
es
mov
int3
jle
pushaw
push
cmp
mov
in
icebp
ds
call
and
pop
scas
sub
inc
push
mov
fwait
mov
jno
sub
aas
adc
clc
fbstp
xchg
scas
adc
outsl
push
out
je
cld
pushf
jecxz
push
mov
or
sbb
orb
mov
inc
mov
out
scas
daa
outsl
inc
outsb
mov
lods
sub
xor
jns
mov
mov
sub
lea
xor
das
pop
pop
xor
push
sarl
out
jne
test
or
pop
and
add
lret
fnsave
std
mov
or
insl
xchg
adc
loopne
adc
pop
adc
and
xchg
ffree
popf
cmp
fildl
xor
sar
and
jp
pop
inc
jbe
lcall
cwtl
pop
dec
fstpl
lret
push
xchg
sarl
push
pop
jno
sbb
mov
out
hlt
pop
addl
bound
mov
ja
xlat
mov
mov
pop
ss
pop
inc
mov
mov
push
pop
movsb
sub
xchg
mov
ss
pop
inc
jmp
sbb
push
push
addr16
out
xlat
lahf
lea
mov
cmp
lahf
xor
cld
roll
outsb
push
aas
dec
inc
leave
mov
addr16
mov
add
add
jecxz
shl
aas
add
sub
sub
ja
ss
pop
fcomip
pop
in
add
or
cs
movsb
pop
xchg
pop
aad
sub
iret
bound
scas
jo
iret
push
addr16
sbb
loope
es
or
loopne
xchg
out
rcll
ja
popa
add
jg
ss
cmp
sahf
or
jb
adc
popf
mov
rcll
orl
repnz
cli
dec
mov
pop
mov
adcb
shl
sub
lods
data16
fst
inc
fistpll
jg
std
fbstp
jbe
out
or
in
sbb
jg
scas
pusha
and
scas
lock
jns
jmp
and
dec
fistpll
sarb
mov
adc
mov
cmp
mov
jbe
rcll
sub
mov
jle
lcall
ss
sbb
aas
mov
and
jb
jo
xor
push
aad
push
aad
add
ds
adc
jo
push
stc
jb
and
mov
sahf
cmpsb
nop
ljmp
pop
sub
push
jnp
cld
cmp
imul
pop
std
pushf
outsb
lock
mov
call
mov
push
sub
cmpsb
add
cwtl
mov
xor
dec
in
push
sbb
idivl
neg
mov
push
add
negl
arpl
negb
mov
cmc
sbb
inc
xor
fwait
inc
xor
mov
cli
cmc
pop
inc
push
xchg
push
mov
or
mov
cli
adc
cli
push
sti
aas
mov
in
jne
xor
sbb
mov
ret
cmpsb
sbb
movsb
mov
xor
jge
sub
xchg
rol
mov
sub
xchg
ss
jg
push
mov
les
aam
fidivrs
pop
push
jl
jecxz
fildll
pop
xlat
mov
adc
mov
add
mov
rcrl
dec
shl
mov
ret
aas
sbb
aad
loope
cmp
lods
sbb
cwtl
mov
jp
repz
int3
mov
xor
or
mov
fildl
cmp
mov
in
mov
push
mov
shll
pushf
mov
add
jns
xor
inc
xor
rorl
xor
jno
inc
xchg
hlt
pop
gs
xor
clc
jl
test
ja
out
and
sub
ret
stos
sub
dec
pop
sbb
xchg
and
push
sbbb
das
and
dec
xchg
lds
inc
cmp
mov
adc
mov
push
fxch
ja
jne
jmp
lods
jmp
fldcw
or
loop
notl
xchg
lahf
inc
out
je
cwtl
push
xor
andl
jg
jp
mov
in
or
adc
fmul
add
int3
push
adc
inc
pusha
sub
xchg
mov
inc
jae
out
daa
xor
cmp
popf
xor
adc
push
push
and
rol
sarb
jge
inc
outsl
and
mov
push
mov
xor
out
cli
sub
push
jp
sahf
in
es
rcrb
jnp
je
nop
dec
sarb
xor
subl
add
mov
loop
cmp
js
push
test
and
ds
insb
mov
sbb
les
pop
out
and
dec
sub
pop
sbb
jle
jo
pusha
jno
lods
jp
cmp
sbbb
ret
adc
int3
pop
xchg
cmp
clc
dec
shll
fcmovbe
jb
fst
sub
fldl
inc
jbe
inc
ljmp
loop
push
and
sub
pop
sub
test
lods
add
xchg
scas
subl
or
repnz
xchg
mov
out
pushf
stos
int
pop
add
scas
push
sub
and
test
inc
loopne
orl
mov
popf
jns
scas
dec
fcomps
stos
into
insl
cmpl
int3
ljmp
enter
pop
xor
cmp
out
inc
sbb
inc
cmp
jl
add
push
jbe
imul
stos
es
test
aam
add
pushf
leave
add
mov
inc
xor
push
xchg
cwtl
xor
test
jbe
push
cmp
cmp
pop
sbb
es
mov
add
test
add
pop
sbb
mov
inc
lds
jp
and
shlb
jecxz
ds
adc
xlat
das
out
jmp
xchg
dec
out
inc
or
xchg
jne
xor
ss
add
orb
jne
rcll
push
cmc
shl
add
add
cmc
in
ret
mov
pop
lahf
lds
pop
stos
lret
dec
mov
out
inc
or
lds
jle
sbb
sbb
xor
lret
in
cmpb
rcl
gs
push
rcll
xor
sbb
or
outsb
lock
sub
lds
sbb
push
cmp
loopne
jmp
dec
cwtl
jp
cli
push
std
and
push
add
jmp
dec
add
js
lea
dec
fldcw
jg
aas
daa
inc
pop
fmull
xchg
aam
stos
pop
sbb
push
lcall
pop
pusha
sahf
lahf
jg
mov
push
sub
movsl
movsl
iret
push
xchg
inc
add
mov
push
push
sahf
test
pop
subl
push
enter
mov
nop
daa
movb
jmp
lea
mov
rcl
pop
push
insl
jnp
cwtl
sarl
rcrl
adc
mov
call
jbe
cmpsl
test
sub
repz
sar
fnstcw
test
jmp
pop
std
ljmp
enter
pop
ja
cli
das
fldt
in
sub
int3
adc
xchg
cltd
out
push
pandn
xor
xor
cli
cltd
xchg
mov
push
inc
cmpsl
jge
insl
mov
daa
addr16
xor
ret
cmp
insb
sbb
mov
lock
mov
test
pop
loopne
call
je
push
mov
punpcklbw
loope
std
or
pop
fcmovb
lods
sbb
jecxz
ljmp
cwtl
push
stc
push
loope
addr16
loopne
pop
jge
daa
notb
out
cld
jmp
inc
inc
call
inc
test
sub
lret
cld
mov
jle
addr16
cmp
adc
and
jnp
testl
das
cmp
jecxz
div
jg
pop
jnp
loope
jl
or
sahf
mov
jmp
popf
xchg
dec
and
pop
jo
jne
jmp
test
pop
cmp
xchg
outsl
rol
in
lret
add
sub
mov
lods
adc
push
cs
imul
sbb
addr16
pop
sub
mov
adc
es
repz
mov
test
jl
addb
pop
fmull
insl
pop
loope
jne
pop
shll
push
xor
sbb
xor
dec
adc
cmp
pop
test
fsubrp
dec
cli
inc
xchg
negl
aad
inc
and
test
stos
cmc
rcrb
mov
loop
popa
pop
movsl
or
fadds
lret
xlat
ljmp
insb
and
add
xor
pop
mov
call
fiadds
push
loopne
in
inc
imul
lret
push
cs
mov
mov
js
call
xchg
push
adc
push
fildll
mov
test
outsb
imul
sbbb
sarb
shl
cmpsl
insb
xchg
add
in
add
cmp
test
mov
and
aas
jb
repz
aaa
xchg
xchg
push
mov
pop
ret
repnz
and
mov
sti
lret
lods
jbe
loopne
jg
jl
mov
xor
rcr
lgs
lret
stos
adc
mov
add
jno
cmp
ret
aas
repnz
jl
mov
cmp
mov
fsubl
dec
add
jns
popa
or
test
jmp
sbb
cmp
popa
ret
push
daa
mov
xchg
loopne
mov
mov
jl
fcoms
out
dec
jle
ret
jo
xchg
jecxz
out
fistpll
pop
inc
add
fldenv
jo
xchg
push
fcmovne
fmuls
testl
push
iret
sbb
popf
imul
mov
dec
adc
lock
inc
jecxz
sbb
xchg
leave
lret
fsubrl
xor
scas
psadbw
or
pushf
data16
gs
sub
xchg
icebp
jl
and
push
notl
ret
or
pop
lods
rol
adc
mov
lret
dec
cmp
pavgw
mov
add
cmpsl
jns
jbe
pop
push
sub
mov
lock
call
push
sub
dec
jns
xchg
orl
add
pop
or
jno
adc
adc
lcall
and
dec
jb
jb
push
fmull
stos
inc
outsb
jmp
ds
push
lock
or
loopne
repz
xchg
arpl
pop
mov
mov
out
scas
ja
dec
test
jne
stc
ss
cmc
ljmp
inc
mov
aad
call
pop
ja
les
inc
sarl
icebp
stc
aaa
test
ret
popa
ds
push
rorl
pop
xchg
pop
add
lcall
ret
mov
daa
sbbl
testl
dec
jecxz
jb
out
mov
pop
jmp
rorb
bnd
xchg
mov
add
and
popf
jbe
les
leave
jae
icebp
lea
adc
inc
sbb
inc
addr16
or
pop
inc
outsl
xchg
mov
fnstcw
sbb
cmp
adc
push
xchg
push
ljmp
insl
stc
aam
lods
shrb
lods
xor
lds
xor
cmp
jne
shl
mov
mov
pusha
sbb
mov
xor
sub
gs
loop
mov
and
and
inc
dec
out
faddp
shr
push
jne
push
sbb
sti
das
or
mov
stos
pushf
mov
lret
ret
lret
rol
js
jp
sub
shlb
fs
loop
push
dec
sub
jnp
mov
nop
inc
cmpsb
jl
mov
pop
ljmp
cmp
push
sbb
or
pop
mov
loope
mov
shr
adcb
gs
jle
add
xchg
imul
push
add
loopne
sub
test
in
out
clc
daa
cmp
scas
mov
mov
add
scas
mov
mov
fisubl
stc
sbb
in
mov
dec
rcrl
popa
xchg
jecxz
jmp
loopne
jle
push
pop
mov
mov
jp
lret
ret
mov
scas
xchg
stos
ja
insb
sub
add
cmp
insl
fstl
xchg
mov
xchg
push
mov
in
jb
mov
xchg
xchg
ja
ja
xor
pusha
adcl
sbb
pop
cmp
movq
and
jne
jg
jb,pn
xchg
in
jmp
or
popa
cmp
out
mov
and
jnp
cld
in
test
test
iret
pusha
aas
fwait
adc
test
sahf
outsl
add
and
out
rclb
mov
movsl
add
scas
xor
outsl
mov
inc
leave
das
idivl
popa
and
aaa
cmp
xor
leave
fidivrs
jmp
in
mov
jecxz
fidivrl
xchg
pop
xor
cmp
sub
cmp
dec
jbe
add
mov
arpl
in
arpl
insb
add
sahf
mov
outsl
wrmsr
mov
testl
jns
inc
or
out
and
mov
dec
das
inc
shrb
int
pop
jb
mov
jp
dec
xor
dec
scas
sbb
jne
ja
pop
loope
and
lret
xchg
call
cltd
pop
cltd
or
ss
fnsave
aad
mov
js
rcrl
push
repnz
cmp
testb
ret
arpl
ljmp
test
mov
push
xlat
mov
aas
out
int3
cmp
jp
mov
or
xor
adc
mov
push
mov
fcos
test
aaa
je
or
adc
repz
xor
mov
inc
lcall
cmp
pop
inc
dec
push
sub
sbb
add
mov
mov
shrb
mov
push
dec
aad
int
movsl
adc
jg
daa
jae
xchg
in
push
push
add
movsb
mov
fldenv
out
pushf
cmp
into
test
scas
sahf
sub
test
in
andb
mov
xchg
mov
in
stos
inc
in
add
test
and
lods
sbb
ss
jmp
and
rcr
sbb
ja
insl
jbe
cs
or
or
or
aam
sarl
lcall
addr16
out
sub
stc
inc
inc
fsubl
inc
mov
stc
jne
mov
stc
cld
outsl
and
in
insb
add
push
lods
test
inc
outsb
scas
push
jmp
repz
sbb
mov
cld
xor
push
pop
inc
pop
mov
enter
push
fimull
pop
inc
inc
mov
lret
stos
mov
fisubrl
in
test
hlt
es
mov
iret
mov
or
pop
in
cmp
cmp
xchg
test
adc
xchg
push
pop
aas
fcoml
jb
popa
mov
dec
inc
ds
sgdtl
std
addr16
xor
int3
stos
pop
stos
push
inc
cmpl
adc
add
jp
dec
lea
pop
call
dec
call
push
mov
push
xor
inc
and
mov
inc
arpl
es
pop
outsl
or
mov
addb
fnstsw
out
in
cmpsb
dec
in
inc
fsubrl
push
pop
or
mov
mov
sbb
adc
xchg
push
inc
dec
mov
add
ljmp
ljmp
inc
sbb
rclb
rclb
scas
xor
dec
mov
data16
mov
push
jmp
push
popa
stos
enter
push
out
cmp
pop
adc
fadds
lds
push
adc
xchg
push
movb
pop
loope
fldpi
mov
jle
pop
in
xchg
push
xchg
out
xchg
mov
adc
std
mov
addr16
outsl
insb
xchg
idiv
mov
fstpl
cmp
loopne
mov
dec
or
sbbb
xchg
roll
int3
jmp
sbb
xor
mov
adc
pop
push
je
xor
jg
mov
movsl
dec
lcall
addb
dec
push
cmpsl
lret
jle
dec
out
sbb
cmpsl
xor
je
ljmp
xor
faddl
leave
movsb
dec
movsl
daa
or
mov
fmuls
out
das
nop
adc
push
ljmp
mov
lock
call
mov
in
jp
adc
or
sub
sub
stos
dec
lock
adc
pop
inc
adc
hlt
dec
or
pop
out
push
dec
push
daa
stos
aas
subb
mov
jle
xor
mov
push
ljmp
insb
std
ljmp
push
cs
mov
sbb
xor
cmpsl
and
mov
insl
add
xchg
inc
add
hlt
rclb
punpckhbw
ret
loop
mov
arpl
dec
inc
jno
aad
shl
push
cwtl
mov
adc
inc
jg
mov
inc
test
push
inc
notl
insl
cmp
mov
int3
xchg
xchg
outsl
push
stos
xor
mov
add
and
inc
jae
les
mov
mov
addr16
ja
cmpsl
aad
push
adc
inc
nop
lods
aam
cs
fidivrs
jne
add
add
xor
jg
push
mov
ret
push
out
xchg
jb
inc
inc
mov
popa
push
cmpsb
pop
hlt
or
repz
in
mov
pop
sbb
movsb
and
cmp
xchg
lcall
mov
push
pop
bound
or
dec
pop
mov
dec
mov
aas
ds
xchg
push
test
lods
mov
in
dec
dec
in
rorb
in
inc
inc
inc
jge
or
xchg
xlat
push
lock
sbb
negl
ret
loop
roll
sahf
push
adc
in
jmp
sahf
test
xchg
std
fsincos
call
lahf
jg
push
pop
or
data16
fsubl
dec
test
outsl
lahf
cmp
add
pop
and
inc
or
lahf
or
aas
cltd
and
xorb
mov
into
dec
movsl
push
and
or
loope
mov
jmp
into
pop
dec
jmp
and
xor
pop
sub
stos
sub
push
pop
es
sbb
sub
stc
add
fucomip
push
jno
jo
push
jmp
cmp
sub
les
adc
pop
fmull
mov
test
add
cmp
jne
arpl
push
enter
lods
or
aaa
xor
pop
daa
test
sub
stos
fcmovnu
cld
imul
sbb
push
sub
std
lahf
xor
rcrb
fdivs
mov
fcomp
outsb
pop
stc
loope
cld
add
pop
mov
add
adc
xchg
std
inc
lcall
in
arpl
js
int3
adc
pop
adc
dec
fiadds
fldenv
sub
mov
cltd
add
mov
cmp
mov
iret
mov
xchg
in
adc
inc
push
mov
cmc
mov
jg
sbb
imul
adc
pushf
and
movb
test
mov
xlat
adc
sti
fldcw
sbb
fisttpl
add
jns
ucomiss
xor
lcall
outsb
out
cli
inc
lds
pop
loop
push
inc
repnz
enter
lret
les
call
in
int
fimull
sbb
lcall
aas
xlat
jae
lret
mov
mov
push
jmp
inc
addl
fimuls
xchg
jge
negl
add
push
sbb
rcr
test
push
xor
int
shlb
push
hlt
push
dec
js
or
jmp
push
mov
js
mov
xor
mov
repz
jl
jns
std
cwtl
and
cltd
push
arpl
dec
lret
jae
sahf
lods
inc
out
push
cwtl
and
mov
loope
adc
pop
add
fwait
add
push
das
mov
movsl
sub
xlat
and
add
fnsave
sbb
or
xchg
mov
jge
inc
adc
add
test
push
dec
xor
push
movsl
inc
fisttps
pop
popa
xacquire
repnz
jecxz
jno
or
int3
dec
mov
adc
stc
out
arpl
loop
dec
sbb
popa
push
dec
dec
pop
lds
nop
int
fcom
cli
ljmp
out
mov
fucomip
aad
adc
mov
jne
jne
mull
fwait
stc
out
cmc
xlat
popf
adc
lea
fimull
fwait
jge
adc
or
imul
xchg
fwait
out
mov
cmp
push
shll
lahf
pop
sub
sbb
nop
out
push
bound
outsb
xchg
xchg
sti
pop
jae
cmp
mov
xchg
or
or
icebp
mov
das
add
test
xorb
lahf
fldenv
jb
dec
cmp
arpl
inc
aas
sbb
pop
jne
jge
sbb
loopne
pushl
call
pusha
addl
test
mov
xchg
cmpsb
push
enter
jecxz
int3
cmc
mov
xor
cmp
cmp
adc
outsb
insb
mov
mov
xchg
in
jecxz
mov
or
push
insl
data16
js
inc
rolb
jo
jbe
pop
ljmp
in
inc
scas
and
fists
sbb
test
jbe
clc
arpl
or
jbe
mov
mov
jbe
test
test
mov
cli
mov
mov
pop
ja
push
dec
adc
or
and
add
or
xchg
sbb
pop
xchg
jae
shll
mov
jo
push
ficomps
xchg
jbe
ja,pt
loope
adc
jno
pop
push
movsb
es
arpl
stos
jg
jmp
into
mov
adc
test
fst
pop
dec
setb
popa
add
fildll
dec
or
aad
xor
les
lret
iret
xchg
lock
das
movsl
xchg
inc
rorb
jl
mov
mov
push
mov
movsbl
iret
lods
push
jo
daa
mov
fdivs
lds
hlt
insl
repz
sbb
aas
mov
cmp
stos
jg
das
inc
mov
ja
cmpsl
popa
pop
xor
push
cmc
pop
push
imulb
xchg
dec
in
push
mov
xchg
outsl
push
adc
in
adc
test
dec
pop
ret
adc
sbb
movsb
jo
pop
test
ds
mov
arpl
test
xor
in
cmp
mov
or
mov
dec
add
push
adc
adc
jmp
int
mov
stc
mov
mov
and
loop
ds
adc
out
mov
sarb
mov
push
push
jmp
mov
in
fists
or
dec
icebp
mov
mov
lahf
adc
enter
jne
mov
mov
or
loope
push
and
out
mov
xchg
imul
fwait
testl
mov
imul
loop
push
sub
jns
cmp
mov
lods
mov
clc
das
pushf
mov
pop
mov
inc
adc
cmp
push
xor
cmc
out
inc
jecxz
push
mov
sub
jb
cmp
mov
pop
pop
dec
fdivs
pop
pop
and
in
andb
and
mov
mov
lods
xchg
dec
and
mov
call
fidivl
or
imul
arpl
xor
sub
or
cmpl
orb
ret
scas
mov
and
mov
arpl
adc
nop
lock
mov
push
lea
lods
inc
movsl
shl
cmp
xchg
rolb
pop
pop
xlat
fcmove
pop
int3
xor
loope
sub
pusha
iret
mov
loop
int
cli
rorl
fcoml
in
push
ja
fcomps
ret
enter
outsl
inc
jb
inc
in
or
mov
inc
sub
aad
imul
or
fld
xchg
mov
std
movsb
cmc
sbb
add
push
orb
jge
std
data16
enter
int3
mov
call
iret
into
and
jns
dec
clc
push
xor
std
add
outsl
mov
cmpsb
jmp
xchg
inc
sarb
arpl
arpl
test
jle
andl
aaa
fldcw
sub
cltd
lds
mov
cmp
or
idiv
inc
into
mov
sub
inc
shlb
add
push
adc
cmp
jns
out
les
add
sub
pop
jnp
and
imul
inc
inc
iret
lret
out
mov
icebp
in
ljmp
add
sub
mov
add
loop
mov
cld
sbb
fidivrl
jns
int3
mov
scas
shlb
cld
sbb
outsw
repnz
xchg
cmc
fiaddl
fwait
cmp
pop
push
repnz
in
pop
and
mov
insb
add
sti
pop
or
or
cmpsl
push
xchg
repnz
mov
mov
push
repz
pop
xchg
int
test
iret
lock
xchg
xchg
jmp
sbb
cmp
jae
jecxz
xor
add
sub
roll
enter
xor
push
jns
loope
sbb
sub
mov
dec
cmpsl
xor
fcoml
outsl
add
std
popa
push
inc
jecxz
loopne
leave
pusha
cwtl
mov
pop
scas
nop
or
pop
das
aad
rorb
inc
adc
fistpll
dec
adc
negb
jecxz
fs
icebp
repz
push
popa
rorl
in
fildl
sbb
fadd
sbb
xchg
adc
xchg
ficomps
add
daa
dec
in
and
movsb
inc
test
mov
mov
mov
mov
fcompl
jecxz
repz
leave
jg
and
pop
xchg
sbb
ficoms
jg
lods
daa
mov
in
iret
pop
ja
dec
sbb
adc
push
mov
jecxz
rolb
jmp
clc
icebp
nop
cltd
lret
jae
or
push
xor
cmp
decl
in
xchg
bound
scas
mov
jb
push
pop
fsts
cmp
ja
shr
lods
push
subb
mov
clc
mov
pusha
or
mulb
push
push
xchg
inc
fwait
in
ficompl
push
cmpsb
pop
jnp
lahf
fincstp
mov
adc
dec
cmp
jl
dec
push
popf
loope
xchg
cs
gs
bound
or
push
cmp
dec
adc
lock
cmp
jnp
dec
add
scas
insb
xorl
xchg
push
pop
add
xchg
out
jle
mov
jg
xchg
das
stc
out
int
cltd
fs
mov
fbstp
ljmp
shll
movsl
mov
lret
push
jb
jecxz
dec
arpl
in
mov
daa
add
std
adcl
mov
lock
jno
out
lods
push
xchg
test
inc
outsb
in
outsb
je
jecxz
cmp
inc
outsl
aas
inc
fnsave
sbb
mov
mov
and
decb
andl
and
insl
add
ret
lret
xor
lds
shrl
aaa
jmp
in
test
add
gs
pop
pushf
jnp
xor
les
cmp
testb
cmc
pop
loope
adc
cmp
out
adc
inc
lods
fists
cmp
pop
icebp
cwtl
adc
std
icebp
add
leave
mov
cmpsb
notl
jg
and
or
iret
das
cmp
pop
sahf
cmp
jns
fcmovnb
lods
icebp
push
pop
cmp
ficompl
ret
push
cmp
mov
pop
adc
mov
mov
adc
xchg
add
adc
add
ret
movsl
fistl
mov
sub
outsl
jp,pn
mov
call
test
fs
out
and
lods
fs
mov
sbb
data16
mov
jo
cli
inc
mov
lret
mov
add
addl
lret
mov
fisttpl
dec
fst
xchg
aas
cmp
mov
scas
fistps
cli
mov
loop
bound
in
mov
icebp
imul
jnp
inc
dec
xor
aad
shlb
insl
push
je
push
out
mov
or
lods
pop
aam
fists
insb
subb
shll
xor
jle
or
call
clc
lret
es
imul
leave
cmp
loop
adc
and
orb
xchg
imul
jle
mov
arpl
cmpb
add
popa
mov
push
mov
out
adc
push
and
jecxz
mov
mov
mov
in
ja
inc
fs
jns
sub
mov
sti
ffreep
leave
imul
adc
fdiv
or
or
sub
mov
call
push
incl
in
xor
mov
xchg
jp
sub
popf
loope
lcall
jle
add
and
dec
in
mov
jmp
mov
in
pop
pop
repnz
jmp
cltd
mov
pusha
outsb
test
adcb
xchg
mov
imul
pop
fdivl
mov
mov
out
pop
fwait
xchg
push
jne
mov
xchg
mov
enter
dec
ret
sub
fsubrl
xchg
repz
lock
adc
jecxz
fldt
into
inc
js
sbb
inc
lods
push
hlt
in
jb
xchg
inc
mov
aad
xor
or
xchg
in
lds
mov
js
jbe
cmp
add
das
cltd
push
shlb
xor
mov
push
es
or
jg
cmp
and
pop
shlb
and
out
cmp
mov
mov
daa
scas
mov
cld
or
sbbl
cmpsl
inc
fstl
push
dec
pusha
leave
mov
in
sbb
leave
mov
imul
out
daa
lret
jmp
in
xchg
jns
pop
mov
stos
cmp
icebp
dec
mov
xor
cmp
adc
and
and
push
mov
fistps
sbb
add
xchg
fsts
pop
jp
cwtl
leave
or
pop
or
pop
out
xor
mov
dec
add
cld
pop
insb
pop
icebp
insb
mov
add
fbld
dec
arpl
rcrb
ds
push
cmp
js
sbb
xor
mov
pop
fnstcw
cmpsb
call
sbb
pop
lret
clc
adc
pop
push
in
and
and
scas
leave
xor
sbb
cmp
or
shrl
xlat
lret
aam
inc
xlat
test
adc
lods
divb
xchg
sbb
lret
out
js
cmp
add
fldcw
dec
and
lods
pop
cmpsb
clc
mov
jl
mov
jmp
add
pop
lods
lds
pop
mul
push
mov
mov
push
sarb
js
and
loope
dec
test
xchg
mov
xor
sbb
sbb
sbb
out
test
cld
ficoml
cmp
cmp
out
in
daa
jb
fnstsw
insl
inc
loopne
es
push
or
je
aas
sbb
add
sarl
enter
loop
cmp
clc
loop
adc
mov
mov
cli
adc
test
je
xchg
aam
pop
icebp
inc
jb
push
cli
fldt
pop
dec
mov
cmp
sbb
cld
aas
cwtl
filds
clc
pop
adc
shlb
mov
jnp
cs
push
imul
dec
lock
int3
xchg
pop
xlat
xchg
ljmp
or
add
jnp
push
hlt
inc
shl
adc
mov
and
push
adc
xchg
jle
push
ret
pop
jl
pop
adc
or
push
and
and
mov
jg
or
jnp
and
in
xchg
fwait
lds
out
sbb
ljmp
jae
shlb
sbb
add
ja
insl
shl
cmpsb
pop
inc
inc
rclb
out
lahf
jae
ret
cmpsb
ret
test
fsubl
lock
stos
cs
pushf
pop
cltd
mov
insl
mov
arpl
test
pusha
push
mov
ss
sub
mov
jno
add
cltd
out
insb
mov
loopne
mov
pop
nop
sahf
jbe
push
mov
sbb
stos
push
adc
lock
adc
test
sub
les
mov
mov
lock
out
pop
mov
lods
daa
pusha
sub
jbe
lahf
or
repz
js
xor
in
adc
jp
repz
sbbb
mov
aad
shll
mov
test
negb
lahf
xchg
aas
std
mov
call
int3
shr
or
jl
lcall
adc
pop
fcmovb
push
and
jnp
mov
decl
insl
mov
push
fdivrl
push
xchg
out
xchg
addr16
fldl
dec
repnz
lcall
aas
and
gs
cld
push
ds
jo
stos
out
jg
test
addr16
adc
test
cmp
subb
mov
mov
call
lea
mov
sbb
ss
lds
xor
outsl
hlt
sub
dec
pop
test
jle
fmulp
xor
inc
add
stc
ja
aad
or
add
rcrb
adc
into
leave
lods
cwtl
jnp
sub
iret
push
lds
jo
lret
adc
cs
testb
mov
xchg
je
fldenv
jbe
push
push
cmp
ss
or
pushaw
xchg
and
mov
mov
lock
mov
jns
je
pop
mov
adc
rcrl
adc
mov
mov
call
adc
sti
lock
mov
push
push
cmp
fidivrl
or
xorb
cmpsb
sbb
adc
fisubrs
xchg
xor
adc
bound
pop
in
xchg
addl
xor
dec
inc
in
nop
cmc
mov
stos
cltd
inc
fmull
iret
add
test
pop
pop
mov
cmpsb
jmp
mov
js
pop
ret
mov
sbb
jo
mov
mov
cmp
sub
pop
mov
lret
mov
subb
out
cmc
cwtl
push
fwait
cmpsb
mov
icebp
lods
or
mov
mov
clc
cltd
dec
dec
sahf
scas
sti
inc
pop
add
sbb
or
fwait
push
pop
divl
and
dec
hlt
mov
rolb
aaa
sahf
xor
jnp
testl
mov
dec
sbb
sbb
test
dec
mov
push
pusha
rol
fld1
sub
adc
scas
scas
or
nop
xor
sahf
gs
test
xor
mov
sbb
or
in
stos
push
cmp
jmp
xlat
xchg
pushf
xor
scas
or
test
mov
add
mov
decl
sbb
dec
inc
je
mov
or
test
daa
cwtl
fwait
cmpsl
sbb
lds
sbb
and
mov
call
rcll
loop
fistpl
fstpt
cs
push
aam
cmp
jae
mov
pop
push
adc
and
into
mov
dec
inc
dec
mov
sahf
pusha
mul
ljmp
jmp
std
pop
xlat
jmp
or
jp
mov
cmp
mov
inc
add
fcomps
mov
add
dec
movsb
pop
lods
and
xchg
out
mov
je
ss
pushf
mov
out
dec
stos
mov
pop
add
xchg
loope
movsb
and
and
hlt
mov
bound
jb
dec
fiaddl
mov
test
addl
aas
repz
jbe
rcr
ljmp
inc
push
push
mov
movsb
and
insb
push
cltd
fwait
sbb
iret
lahf
orl
pop
jne
mov
lcall
lds
push
mov
inc
jne
mov
sub
adc
aas
shlb
insb
mov
mov
and
cmpsl
inc
sub
push
jmp
mov
outsb
icebp
ret
mov
pop
xorb
xchg
dec
xchg
ror
sub
out
adc
jno
dec
mov
cmp
lds
repz
stos
subl
mov
fistl
popa
xchg
mov
cwtl
mov
mov
push
mov
xchg
sahf
cmc
fucom
outsb
xor
add
clc
add
push
aaa
jp
mov
cltd
fistl
push
push
push
hlt
jb
dec
cmpl
icebp
out
push
ret
aad
xchg
cltd
daa
cmp
xchg
xor
pop
mov
mov
cld
xchg
in
lret
ret
iret
jbe
cli
xor
pop
lods
mov
pop
mov
cmp
mov
out
stos
in
clc
sbb
xchg
cwtl
fsubl
jb
arpl
out
xor
jmp
bound
repz
cmp
aam
jo
movsl
out
sahf
mov
es
loopne
add
sub
or
xor
out
imul
mov
pop
cli
aam
scas
push
stc
das
sbb
int3
sbb
or
xchg
fdivs
test
daa
fucomp
je
shl
jb
push
idiv
lds
xor
scas
pop
sub
sub
fdivp
movb
jecxz
and
mov
xchg
jecxz
add
push
dec
stc
rcl
adc
xchg
mov
pop
stos
cmpsl
mov
cld
std
jbe
mov
mov
sub
mov
mov
jbe
insb
add
stos
fwait
mov
arpl
pop
fwait
pop
jno
lret
movsb
and
loop
mov
mov
add
pop
mov
mov
sarb
pusha
bound
in
inc
mov
jne
pop
fistpl
sub
add
dec
xor
xchg
and
adc
sub
shl
xchg
jno
xor
xchg
in
cmpsl
test
pop
dec
fld
stos
mov
aas
push
mov
push
cmp
mov
scas
lahf
xorb
and
mov
sub
inc
mov
outsl
jno
in
push
xorb
or
sti
cli
add
fisttpll
or
mov
xchg
cmp
mov
xchg
add
call
das
test
dec
dec
outsb
mov
or
int
outsl
test
test
das
pop
out
mov
js
adc
jns
jne
add
mov
pop
pop
jmp
dec
inc
xchg
scas
lcall
jp
sub
inc
mov
cmpsl
fstl
cli
setge
xor
jle
hlt
xor
mov
addr16
push
jnp
mov
aas
add
jno
jo
imul
imul
js
push
ret
jnp
xchg
add
dec
sub
into
daa
xchg
lret
jb
je
jne
add
fldcw
dec
movsl
xchg
stos
cmpb
xor
imul
add
pop
xchg
mov
out
loope
call
cli
movsb
sub
imul
mov
mov
mov
jmp
jno
mov
lcall
mov
xlat
push
addl
push
lahf
sbb
push
js
or
and
cmpsb
mov
pop
push
daa
imul
pop
ret
inc
in
loop
push
cmp
mov
clc
inc
push
mov
and
adc
or
stos
out
jle
sbb
mov
mov
scas
mov
loope
push
pushf
jnp
xchg
ds
adc
push
mov
cmp
clc
scas
mov
loop
sbb
xchg
mov
orb
into
dec
aaa
lcall
loop
inc
xor
jecxz
xchg
cmp
inc
mov
outsb
dec
inc
ds
fnop
scas
repnz
das
dec
sbb
dec
push
pop
out
xchg
sub
ds
pop
add
pop
add
clc
jg
mov
in
adc
push
mov
out
pop
aad
jl
mov
xlat
clc
cmp
xchg
xchg
sub
lcall
xchg
lock
jb
jb
orl
push
lods
xchg
or
jns
cmp
sbb
pop
ljmp
out
mov
xchg
xor
shrb
xchg
and
test
push
int3
sub
sbb
adc
push
push
movsb
jl
dec
fstpt
push
jmp
sub
loop
in
mov
mov
sub
adc
int
mov
mov
add
xchg
mov
mov
roll
or
scas
pop
sub
bound
cmp
lea
mov
inc
shrl
mov
aas
jg
sbb
sbb
mov
mov
inc
mov
jnp
adc
dec
push
insb
dec
dec
pop
pop
lods
push
imul
xchg
xorb
es
aad
push
xchg
stos
pop
adc
rcrb
cmpl
jge
pushf
push
testl
test
loop
sbb
add
imul
xchg
sub
mov
fsts
pusha
es
fucomp
pop
mov
sbb
mov
jl
stos
aas
xchg
dec
fwait
sub
push
cmp
jnp,pt
pop
ds
mov
jnp
sub
imul
lods
ss
inc
push
jle
into
cmp
hlt
outsb
stos
out
test
jne
push
rcll
mov
jl
fwait
cmp
cwtl
es
cmp
sbb
popa
popf
ja
ret
pop
pop
inc
into
pop
sbb
mov
fisttpl
mov
iret
pop
inc
add
xlat
daa
mov
fidivrl
and
hlt
repnz
pop
xchg
and
pop
dec
xor
jno
enter
or
out
or
jecxz,pn
outsl
cmc
mov
add
sti
cltd
bound
mov
inc
jnp
xor
inc
and
xor
jp
inc
or
add
in
jae
and
jne
mov
xchg
dec
ss
je
sub
insb
fildl
push
imul
sarb
adc
ficoms
lods
test
mov
sahf
icebp
cmp
outsb
lock
mov
fs
jb
das
mov
push
je
test
cld
imul
xor
mov
lret
xor
mov
push
push
ljmp
cmp
jne
imul
jae
stos
jbe
mov
adc
decl
push
inc
push
jns
cmp
popa
loop
aaa
jl
add
fldl
outsl
xchg
pop
cwtd
and
outsb
inc
inc
mov
sarl
mov
sub
xchg
sbb
jns
push
aad
lret
jae
mov
or
test
cmc
aad
mov
and
dec
sbb
pop
cli
push
mov
lahf
outsb
insl
lea
neg
out
jge
jge
pop
xchg
addr16
popf
lcall
jl
xlat
mov
call
mov
cmp
enter
int3
push
pop
fcomip
push
or
lds
gs
pusha
in
ja
mov
enter
push
mov
and
aaa
inc
xor
push
divb
jge
lea
xor
or
xor
out
sub
add
dec
jnp,pt
pop
xchg
ss
test
ljmp
cmp
mov
mov
push
cmc
call
add
movsb
mov
mov
jns
inc
cmp
mov
leave
movsl
jnp
xor
dec
je
jp
jg
cwtl
cmpsb
fdiv
cmpsl
aad
push
test
cmp
pushf
add
in
jbe
out
xchg
xchg
or
inc
scas
loop
mov
popf
xchg
movb
mov
cld
xor
xchg
lahf
add
std
in
mov
pop
pop
mov
std
pop
pop
jbe
push
xor
jno
sbb
or
ret
popf
adc
in
pushl
adc
fwait
mov
jns
rcrl
xchg
inc
mov
add
dec
cmpl
pavgw
movsb
out
jmp
mov
jne
mov
mov
rcll
fisubrs
push
jns
int3
xchg
pop
mov
loopne
jns
loop
lds
jne
add
inc
jbe
das
lds
mov
andb
shrl
dec
adc
int3
leave
sbb
xchg
dec
jge
or
push
movsl
cmc
push
or
pop
jae
sub
push
jno
jecxz
xor
roll
mov
pop
fs
rolb
into
inc
jecxz
ljmp
loop
lret
cmp
and
scas
gs
mov
sbb
insb
call
scas
mov
xor
xchg
add
test
loopne
jo
push
push
adc
les
das
out
push
mov
or
or
mov
iret
cmpsb
xchg
and
push
inc
pop
or
or
mov
cs
push
mov
adc
push
dec
jb
mov
mov
dec
xchg
sub
push
mov
and
adc
sub
mov
clc
stos
xor
dec
xor
jmp
insl
cltd
jno
inc
jl
add
jg
xchg
pop
testb
xchg
jo
data16
add
inc
cmp
xlat
movsl
divl
aaa
push
stc
dec
push
jmp
xor
add
mov
xor
outsb
jnp
mov
sbb
mov
inc
mov
push
sti
xchg
xchg
mov
lods
aas
add
aad
mov
dec
add
out
ja
pusha
jl
xchg
xchg
mov
jp
repz
and
lods
inc
js
cwtl
push
orb
out
dec
jecxz
mov
push
loop
mov
adc
loope
pop
mov
dec
xor
add
cmp
out
sub
dec
int
std
inc
xor
mov
mov
aas
and
mov
test
inc
xor
jecxz
sbb
stos
xlat
out
leave
or
add
mov
jno
jg
mov
mov
xor
lods
inc
mov
and
loopne
jmp
pop
xor
xor
retw
sub
xor
dec
scas
rclb
push
jne
lcall
sbb
mov
mov
or
xor
xor
xlat
call
jae
or
mov
cld
addr16
jl
shll
push
subb
xor
fcomps
push
or
pushf
and
pop
mov
push
dec
mov
adc
xor
imul
and
push
pop
mov
fdivrp
imul
xlat
movsb
jb
jge
xor
mov
jbe
add
lods
and
cmpsb
xor
xchg
push
xchg
sub
mov
push
cwtl
and
dec
push
sub
pop
mov
and
lock
or
test
xchg
add
outsl
mov
ret
mov
pushf
shll
mov
or
pusha
hlt
adc
jns
sub
mov
mov
sub
pop
loop
iret
das
js
xorb
pop
mov
add
cwtl
and
ret
mov
in
pop
sbb
clc
imul
inc
pop
in
add
sbb
inc
dec
jle
out
dec
sub
mov
sbb
adcl
cld
cli
sbb
sahf
mov
loopne
push
imul
xchg
arpl
dec
imul
mov
dec
cvtps2pd
cmp
sti
jmp
jp
in
sub
sub
jnp
add
adc
je
jno
mov
mov
add
mov
icebp
inc
add
rolb
xor
mov
scas
mov
mov
jecxz
mov
xor
div
mov
pop
pusha
jmp
mov
xor
fs
and
call
jecxz
lods
mov
xchg
ja
jge
mov
cwtl
pop
fstpt
fs
mov
fldcw
out
outsl
iret
insb
fisttps
sub
loop
jecxz
dec
push
xor
ret
sbb
mov
inc
fstl
stc
push
ss
rcl
test
mov
add
and
push
lods
je
push
adc
sbb
and
lret
mov
inc
mov
cmp
add
sub
out
cld
bound
cmc
mov
sbb
ficomps
insb
cmp
lret
mov
adc
shl
xor
test
dec
ja
jo
sub
in
int
in
outsb
ror
adc
xchg
xor
pushf
shll
test
add
std
in
out
push
fucomip
pop
mov
test
les
dec
cmpl
mov
sub
mov
jnp
jnp
mov
push
lock
pop
jne
xchg
xor
and
test
xor
loop
jecxz
push
inc
mov
fdivrp
mov
pop
or
xchg
or
adc
out
sub
fwait
mov
cmp
sbb
sbb
xchg
push
or
mov
push
pop
adc
mov
push
icebp
pop
arpl
and
or
push
sbb
out
aam
push
lods
dec
and
loop
xchg
inc
iret
fabs
push
movsb
out
mov
in
loop
pushf
stos
shll
mov
or
adc
inc
lahf
insb
cmpsb
stc
in
push
in
jae
mov
popf
dec
push
in
mul
jns
and
ficoms
movsb
sahf
jp
inc
cltd
inc
dec
mov
cmp
in
in
mov
mov
add
xor
push
jmp
fnstsw
fstps
loop
or
inc
int
xor
xchg
lods
out
out
fwait
mov
mov
pop
bound
and
pop
xor
loope
shlb
xchg
add
cmp
addr16
xchg
and
and
pop
jno
pop
mov
ja
or
sbb
gs
push
mov
sub
dec
pmaxub
sub
lea
jb
mov
jl
jmp
mov
jge
pusha
bound
xchg
sub
fistpll
xchg
mov
outsb
xor
sbb
mov
lock
clc
push
nop
inc
insl
add
addr16
and
pop
push
lods
fcoml
stos
pop
js
xor
outsb
aaa
rorl
or
repz
sti
pop
pop
into
test
call
jb
scas
stos
iret
cmpsb
lea
out
jge
and
outsl
gs
ret
mov
aas
push
cli
lea
xor
mov
cmpsb
test
or
shll
lcall
push
xchg
mov
xor
mov
ds
cmp
mov
lret
xchg
mov
repnz
rorl
add
add
jo
mov
insl
ds
shrb
aas
scas
aaa
lea
jne
int
jmp
enter
cmp
mov
clc
in
mov
std
xchg
stos
xor
dec
dec
jecxz
cmp
push
subl
sahf
lea
ret
movsl
xchg
xchg
dec
fsts
cmp
mov
inc
mov
cmp
lcall
and
loopne
adc
inc
test
mov
or
ljmp
cmc
in
or
mov
push
scas
or
dec
xorb
sarl
pop
inc
jecxz
pusha
add
add
sbb
pop
sub
add
xchg
loopne
std
inc
inc
xlat
push
js
xchg
mov
test
dec
or
add
xchg
stos
jle
fs
push
dec
xchg
notl
std
cltd
dec
or
xlat
call
in
sarb
ret
and
push
sub
loopne
pop
cmp
bound
lret
mov
dec
or
lret
andb
mov
je
dec
repz
and
sub
sub
sub
mov
addb
mov
and
inc
dec
mov
jp
xchg
std
ret
cltd
dec
dec
xor
mov
mov
icebp
repz
push
scas
mov
dec
pop
daa
nop
pusha
pushf
mov
dec
mov
cmpsl
cmpsl
int3
decb
sbb
push
dec
mov
adc
in
pop
nop
sub
pop
stc
test
cs
dec
movsl
lea
int3
mov
xor
adc
xor
rcrl
daa
adc
sub
popa
cmp
stos
sub
call
scas
outsb
ror
pusha
rolb
xor
xchg
enter
fwait
cmpsb
loope
mov
in
cmp
es
xchg
push
push
or
push
or
push
adc
mov
sbbb
cs
jo
fcoml
adc
sub
xchg
or
cld
or
scas
ja
jae
mov
mov
adc
and
subl
mov
dec
in
pop
out
add
je
mov
fwait
add
inc
pop
or
addr16
push
mov
dec
lock
xchg
push
xchg
inc
add
popa
aas
mov
pop
ficoms
cmpsb
pop
xchg
idivl
mov
jno
adc
aam
sub
test
push
jo
movsl
push
cwtl
lcall
aaa
js
jno
jns
stc
pop
shlb
subb
mov
inc
jb
push
push
icebp
imul
mov
xchg
inc
mov
call
call
cwtl
loopne
iret
pushf
or
jl
adc
lea
ljmp
pusha
jnp
inc
mov
jl
std
xlat
and
stos
sub
leave
bound
pop
fnstsw
cld
lcall
fidivrl
imul
cwtl
xchg
sub
mov
ljmp
pop
dec
inc
inc
in
jbe
out
jns
xchg
or
mov
pop
shl
das
cmp
and
rolb
ljmp
loop
mov
fs
push
cmp
add
das
and
dec
out
hlt
pop
sub
loope
pop
negb
sub
rcrb
addr16
mov
cld
jle
test
test
in
sub
pop
fnstenv
jo
lcall
mull
cmp
negl
push
mov
andb
xchg
inc
dec
xor
insb
sbb
xor
nop
data16
out
insl
outsb
cmp
jecxz
enter
dec
hlt
in
pop
imul
sub
out
jmp
mov
mov
je
add
mov
and
rol
push
lcall
iret
outsb
int
mov
fsubs
repz
jne
xchg
daa
lea
movsb
jp,pn
add
cmc
sbb
adcb
sbb
inc
stos
push
fsts
add
xor
xor
xor
xchg
loope
push
xchg
push
push
cmp
ret
mov
sbb
jns
mov
mov
addr16
ss
test
xor
xlat
mov
push
leave
ja
mov
cmp
out
sbb
mov
aam
sub
cmp
pushf
int
lahf
ds
cmp
sbb
add
pop
inc
cmpsl
sub
and
shll
adc
jmp
loopne
mov
xor
cmp
fildl
int3
ficoms
mov
divl
pop
stos
push
ja
add
in
xor
out
pusha
xorl
xchg
push
push
stos
inc
fadds
inc
jp
pop
push
sbb
mov
loop
mov
mov
and
cmpsb
incl
sbb
lcall
stos
in
mov
mov
or
and
sub
mov
loop
sbbl
xor
sahf
jae
imul
into
inc
enter
inc
xchg
dec
dec
mov
fisttpl
insl
xor
outsb
inc
mov
ja
mov
aad
not
jge
lret
aas
mov
scas
enter
and
addl
mov
pop
movsl
cltd
sbb
pop
cs
insb
iret
or
adc
rorb
daa
aaa
hlt
or
and
hlt
pop
xchg
outsb
jl
jl
mov
mov
and
loope
fidivl
dec
pop
lods
xchg
popa
cwtl
adc
iret
jne
std
sub
mov
xor
jne
or
inc
mov
jne
mov
cld
xor
aaa
sub
fnstsw
orl
dec
cmp
mov
inc
sub
nop
push
add
sbb
cltd
mov
xchg
and
xchg
mov
shr
inc
push
lds
dec
cmpsb
or
xor
and
test
or
arpl
mov
shrb
xchg
test
fidivrl
in
test
inc
xchg
sub
mov
jnp
enter
ss
mov
shlb
mov
push
insb
data16
cwtl
idivl
outsl
movsl
addr16
jmp
into
test
aaa
add
mov
mov
cmp
rol
imul
popf
ds
test
fwait
adc
and
fwait
lods
dec
or
add
pop
xchg
jl
in
leave
loope
fst
or
jns
repz
inc
and
mov
decl
sub
xor
cmp
push
and
inc
psubsw
cmp
clc
mov
fucom
mov
push
mov
out
sahf
repz
jno
pop
add
rclb
in
inc
mov
sbb
ret
lahf
in
dec
out
inc
cs
pusha
inc
test
mov
jp
adc
fdivr
jge
jb
cld
cbtw
sub
movsb
push
pop
mov
loopne
mov
mov
call
mov
cmc
aas
je
movsl
cld
mov
popf
adc
and
sub
push
dec
aas
mov
xchg
jmp
pop
and
enter
add
pushf
int3
dec
out
stc
sbb
push
mov
lahf
mov
in
cli
lods
mov
or
mov
sub
in
or
lods
or
xchg
icebp
leave
clc
insb
pop
adc
cmp
pop
inc
jl
cmpsl
cmp
xlat
ds
xchg
mov
es
and
ja
push
roll
dec
pop
sub
mov
sub
pop
test
mov
bnd
mov
test
mov
or
xor
sbb
sbb
popa
and
addr16
dec
adc
and
mov
lsl
outsb
fxch
mov
mov
mov
xor
dec
mov
mov
subb
or
xchg
adc
cmp
push
repnz
xchg
mov
fmuls
in
pop
mov
jns
add
outsb
adc
loopne
enter
lds
scas
das
ficomps
add
mov
stc
mov
add
ljmp
popa
fisttpl
shlb
cwtl
loope
imul
and
sub
loopne
hlt
pop
xorl
repnz
in
shlb
cmp
pop
in
and
fwait
ds
or
cli
mov
shlb
push
scas
push
and
push
hlt
fadds
rcrb
push
or
aaa
jbe
xor
xchg
jmp
divl
cli
push
push
inc
loop
mov
aad
push
pop
cmc
movsl
push
jnp
mov
xchg
jb
jno
adc
movsb
inc
js
jg
sub
rorb
cmp
or
pusha
cmp
pop
mov
jns
mov
push
out
test
mov
ja
gs
pop
sub
sarl
rorl
inc
out
dec
and
cmc
adc
stos
or
test
mov
in
aas
mov
jp
cltd
and
notb
mov
mov
jae
mov
dec
loop
adc
cwtl
jb
popa
loope
adc
scas
mov
stos
inc
mov
jno
jns
gs
jbe
xchg
movb
sub
xor
sbbb
inc
enter
stos
call
mov
insl
or
clc
and
inc
mov
je
mov
push
mov
rorb
bound
mov
imul
mov
aaa
sahf
dec
adc
xlat
inc
cmp
jmp
sbb
pusha
mov
add
sbb
aam
pop
lock
and
xor
test
data16
out
jp
pop
fadds
fstpt
scas
addr16
add
imul
into
mov
jge
pop
mov
cltd
and
mov
sub
je
jg
mov
adc
xchg
lds
pusha
xor
push
shl
inc
pop
ja
in
icebp
mov
loope
aad
ficompl
fmull
out
inc
stos
lret
inc
cld
add
addr16
dec
push
les
ret
inc
mov
out
aad
ficompl
or
cmp
outsb
aas
mov
sbb
scas
int
jmp
enter
xor
iret
cmp
fwait
subb
sub
or
jecxz
jmp
xor
dec
int
call
add
cltd
fcos
dec
xlat
lea
enter
test
movsl
adc
mov
jnp
mov
mov
rcr
adc
sbb
mov
loopne
mov
insl
dec
daa
rcrl
stc
arpl
enter
and
xchg
out
pop
pop
insl
sbb
arpl
mov
cmp
mov
hlt
dec
inc
cmpsb
push
or
gs
insb
repz
roll
and
sbb
call
dec
jecxz
nop
sti
sti
sarb
sub
outsl
xlat
push
push
std
and
loop
mov
stos
jne
pop
outsl
dec
xor
addr16
rorl
int
mov
imul
push
popf
out
push
frstor
lock
fdivp
test
adc
fmul
insb
xchg
adcb
sahf
or
pusha
ljmp
or
jp
mov
cmp
repz
xor
movsb
sub
jns
ret
xor
pop
mov
cmp
dec
sbb
sbb
sub
sbb
jge
inc
pop
cmpsb
sbb
out
insb
push
arpl
outsl
mov
and
idivb
jnp
lret
jo
add
shlb
ret
cwtl
cmp
jne
dec
adc
or
xor
in
test
scas
xchg
outsl
xchg
cli
push
rcll
pop
mov
inc
fstps
gs
cmp
jle
aam
lret
xlat
xchg
aas
xor
stc
sbb
decl
imul
fwait
xor
orl
adcl
xor
out
mov
add
leave
and
and
inc
mov
mov
in
in
sar
int
mov
mov
mov
ret
out
outsb
fcmovnu
xchg
divb
inc
xchg
push
nop
xor
test
sbb
daa
mov
stc
xor
cmpsb
mov
push
sbb
aam
sbb
pop
ret
mov
fildll
xor
outsl
dec
jae
fwait
pop
xlat
adc
jnp
push
negb
mov
lret
aad
xchg
and
daa
xchg
popa
xorl
fiaddl
inc
push
inc
xchg
jge
lret
xor
fcmovb
xchg
pushf
arpl
clc
sbb
pop
xorb
pop
add
xchg
and
enter
pop
jo
xor
ds
mov
xchg
xchg
xor
psllq
int
inc
fsubl
mov
adc
stos
xor
or
cmpsl
and
adc
leave
fsubrl
push
outsl
aam
out
mov
cli
mov
fwait
inc
in
pop
lea
shl
push
cs
xchg
pop
mov
test
in
je
adc
xor
or
push
loope
in
mov
mov
inc
dec
mov
or
int
js
xorl
hlt
cmp
push
and
mov
or
mov
outsb
adc
filds
lods
push
cmpsl
clc
xlat
inc
push
lahf
shlb
fstl
mov
scas
inc
outsl
out
scas
out
clc
dec
out
arpl
jb
dec
xor
pop
mov
mov
mov
cmp
mov
sub
fdivr
jnp
loopne
mov
dec
cmp
fsubrl
data16
mov
push
arpl
xchg
mov
xchg
movsb
lock
cmp
loope
xor
dec
test
add
or
jo
push
scas
sti
lock
and
dec
imul
add
adc
fs
sub
into
pop
add
inc
adc
enter
sbb
aam
pushw
ljmp
jns
xor
push
ds
icebp
popf
dec
in
js
cmp
and
jno
sbb
mov
insb
ja
hlt
stc
jae
xchg
push
xor
std
sbb
cmpsl
jl
jle
or
cmp
pop
mov
xchg
fisttpl
dec
lock
popa
sub
adc
dec
cmp
mulb
mov
mov
insb
loope
movsl
in
dec
adc
stc
xchg
lret
mov
and
outsl
incl
jmp
push
int
insl
mov
mov
fsubrs
xor
lds
xchg
xchg
inc
lods
lea
ror
int3
pop
gs
sbb
sbb
sbb
push
data16
imul
in
push
pusha
scas
jae
xor
addr16
mov
sub
lea
push
mov
test
xchg
jno
mov
sbb
push
ljmp
push
mov
mov
ret
push
push
xor
jnp
mov
es
cmpsb
shl
inc
xchg
cmp
pop
lods
push
pop
xor
mov
popa
fistpll
ss
iret
lock
sbb
or
inc
in
movl
mov
rcrb
mov
insl
and
leave
pop
aas
lahf
xchg
jge
sbb
jno
leave
rcrl
imul
sub
mov
ljmp
lods
xor
iret
decb
test
hlt
xlat
push
nop
xchg
jg
cmp
bound
sub
jne
outsb
ret
js
imul
int
jns
cmp
std
lret
mov
add
pop
ljmp
jmp
xchg
mov
popa
frstor
xor
and
out
sbb
jecxz
outsl
and
lret
xorl
and
or
push
cmp
push
mov
push
push
stc
dec
push
test
ljmp
sahf
jno
stc
into
add
mov
xor
xor
push
dec
add
cmp
mov
gs
inc
xor
jmp
ror
rclb
push
in
pushf
cmp
xchg
aaa
scas
push
call
xlat
push
stc
out
mov
add
cmpb
dec
out
ret
ja
jmp
insb
pop
stos
add
cmp
dec
jno
xchg
aad
jl
in
iret
enter
cmp
jb
mov
cmpl
dec
out
sub
in
xchg
and
push
and
lea
sub
inc
nop
sbb
dec
dec
loope
ret
mov
and
dec
pop
xchg
mov
xchg
mov
sub
pop
outsl
test
and
leave
aaa
pop
dec
cmp
stos
lods
rclb
test
pop
enter
push
adc
mov
mov
fstpl
imul
sbb
push
cltd
sbb
cmc
xor
inc
adc
mov
jno
lock
adc
clc
int3
pushf
inc
xor
mov
imul
mov
sub
mov
data16
mov
adc
lahf
inc
aas
sahf
sti
xlat
push
lds
test
push
into
arpl
sbb
aam
cmp
les
ljmp
popa
mov
stos
pop
pop
insb
loope
cmp
jae
or
xchg
dec
aaa
mov
sbb
xor
dec
enter
push
pop
mov
icebp
push
push
test
mov
cmp
inc
dec
fdivr
mov
out
jne
dec
aam
adc
add
xchg
pop
int
sbb
cli
jne
xchg
in
scas
subl
outsl
mov
push
mov
xchg
fbstp
fxam
jg
loope
xchg
call
or
scas
je
cmp
adc
dec
cmp
inc
mov
fildl
push
outsl
xchg
mov
push
jmp
insb
cmp
adc
and
push
scas
aam
mov
cmpsb
adc
daa
leave
dec
adc
add
data16
mov
stos
or
jb
mov
push
push
xchg
push
enter
cmc
lea
loopne
pusha
hlt
decl
push
inc
xor
sbb
shl
insb
mov
movsb
lret
js
sub
xchg
mov
call
scas
cmpb
mov
pop
arpl
fidivs
xor
js
cmp
stc
adc
insl
push
inc
test
in
mov
ja
mov
jp
aad
out
lods
filds
xlat
adc
loopne
cmpsb
pop
call
ja
popa
xor
shlb
fstps
and
mov
mov
dec
pop
jecxz
sahf
xchg
xchg
scas
mov
dec
xor
xchg
ljmp
fnsave
in
lea
gs
push
out
mov
mov
data16
push
push
mov
xlat
push
stos
pop
push
or
lock
sbb
arpl
mov
lret
push
insb
insb
pop
cmp
mov
push
mov
ret
mov
sbb
and
inc
dec
xor
xchg
sub
out
cmpsb
mov
lcall
adc
ss
jae
ja
push
xchg
aas
ret
pop
sahf
cmc
push
sysenter
iret
xor
inc
aas
xor
push
dec
sub
aam
mov
sub
sub
stc
xlat
mov
ja
cmp
add
push
sbb
shrl
adc
mov
adc
or
imul
push
cmp
mov
push
aam
mov
sti
xor
aas
popa
cmc
and
andl
into
jne
push
scas
ficoml
mov
lds
data16
lods
mov
pop
in
mov
mov
adc
mov
fisubrl
cmp
test
xchg
sub
inc
adc
shll
jno
ja,pt
cld
loop
les
jge
dec
mov
shll
cmp
inc
into
xchg
cmpsl
push
xlat
inc
sub
add
xor
stos
mov
lods
aam
aas
shll
fs
sti
iret
inc
cld
add
cli
cld
data16
mov
insb
js
or
inc
adcb
ss
movsb
fiaddl
adc
mov
dec
cmp
rorl
xor
stc
adc
mov
dec
movsb
dec
adc
jmp
aas
push
push
mov
cmpsl
xor
sbb
lods
enter
and
imul
jp
pop
sub
lock
mov
pop
lcall
mov
pop
imul
or
gs
aaa
cs
push
xor
nop
xchg
lret
xor
orl
lods
stc
mov
std
mov
lea
or
test
pop
out
sub
adc
out
push
sub
stos
cmp
mov
aaa
xlat
dec
cmpl
loop
push
adc
test
aaa
xchg
adc
inc
and
mov
and
dec
imul
adc
iret
add
stos
idivb
sub
xchg
sti
push
jb
mov
xchg
je
dec
pop
popa
mov
pop
jb
icebp
xchg
imul
xchg
je
outsb
int3
jg
xchg
shll
sub
int3
enter
or
add
jge
lahf
pop
stc
stc
fxam
or
cmpsb
jge
in
stos
lods
adc
movsb
ret
push
lcall
loopne
dec
dec
inc
ret
out
mov
mov
jg
enter
scas
xchg
push
pop
dec
sub
add
xchg
leave
adc
cs
mov
or
je
mov
sbb
dec
lret
jo
test
aas
add
xchg
aas
xor
test
fisubl
xchg
mov
std
adc
jge
in
xchg
pop
mov
inc
or
lea
xor
cmp
inc
lret
push
adc
add
ja
or
pop
mov
or
mov
push
test
jbe
inc
sarb
sti
mov
and
pop
mov
lods
clc
xchg
jl
add
push
mov
jmp
mov
xchg
sbb
xlat
mov
sti
cltd
mov
add
popf
data16
xchg
push
ret
fcmovb
pop
enter
sbbl
shr
pushf
stos
fistps
cli
fs
cmc
lds
jns
pusha
adc
cmp
pop
shrb
pop
sbb
pop
imul
or
xchg
add
js
push
dec
lds
sahf
das
jg
push
inc
je
sub
call
dec
add
mov
adc
out
in
clc
rorl
pop
movsb
add
call
call
mov
xor
fs
mov
out
adc
mov
cmc
imul
into
mov
add
repnz
invd
mov
hlt
push
iret
xchg
pop
repz
sub
cmpsb
xor
xor
ret
lods
sub
xchg
push
pop
insb
cmp
ret
push
sti
add
std
cli
or
mov
cltd
push
sti
cmpsl
pop
sbb
xchg
sub
dec
icebp
ds
inc
pop
jb
mov
xlat
cld
test
call
dec
sub
and
das
repnz
add
das
fcomps
pushf
call
sub
mov
add
cmp
ds
jne
xchg
inc
push
pop
pushf
sub
cmpsl
sbb
mov
jecxz
std
mov
xchg
cmpsb
jp
imul
stos
sub
sbb
ljmp
mov
aad
call
pushf
pop
fildll
adc
rolb
jp
rorb
cltd
dec
roll
pop
dec
xchg
lahf
imul
mov
push
in
test
data16
lock
orl
insb
ss
fcompl
fadds
push
mov
pop
js
mov
jbe
rorb
fidivrl
jb
pop
stos
jmp
cmp
mov
and
pusha
insl
pop
inc
xor
mov
mov
aad
stc
es
xorw
addb
mov
mov
jae
loopne
pop
stos
push
das
lahf
fldl
pop
aam
sti
int
mov
sbb
daa
das
stos
aad
mov
sti
push
push
shrl
xchg
mov
cltd
mov
mov
pop
imul
pop
sub
mov
aad
out
or
pushf
lods
stos
popf
test
sti
inc
stos
ret
and
and
test
add
pop
mov
bound
rcrb
or
mov
idivl
jo
popf
mov
out
call
xchg
inc
jae
out
sbb
jbe
dec
clc
cld
xchg
push
aas
pop
stc
mov
pop
push
cmp
sbb
cld
mov
pop
rcr
pusha
test
pushf
inc
in
add
loop
arpl
sti
jb
sub
fnstsw
fisubl
imul
pop
ficomps
sbb
pop
lret
xorb
or
dec
addb
or
mov
into
push
es
jno
mov
push
jb
dec
repz
ds
pop
dec
add
sub
jno
es
int
mov
add
cmp
dec
push
mov
jae
and
pushl
dec
xchg
das
das
mov
loopne
adc
loope
mov
mov
xor
cmp
inc
movsb
jns
insl
add
lret
jo
and
popa
inc
in
sbb
inc
ret
push
jne
sbb
imul
popa
ljmp
dec
lock
jno
jecxz
push
lea
pop
nop
pop
fbstp
test
adc
jo
push
in
lds
add
sub
mov
adc
outsb
mov
pop
cs
addr16
mov
dec
stos
or
outsb
popf
and
fs
dec
xor
jg
sti
xchg
mov
mov
out
dec
jmp
pop
loope
loopne
sti
ss
dec
stc
es
mov
js
stc
data16
pop
call
pushf
pop
bound
mov
mov
jge
lahf
imul
pop
fsubrs
or
xchg
mov
and
sti
and
int3
movsl
pusha
sti
dec
inc
xchg
and
and
jmp
jp
cmpsl
inc
rorl
cmp
aaa
insl
sbbl
cld
dec
cmpsb
mov
pop
jno
add
sbb
bound
sbb
enter
mov
jo
ljmp
add
pushf
fs
mov
sbb
in
mov
ljmp
rorb
shl
push
aad
xor
and
test
cmp
aas
inc
sub
dec
test
mov
lock
pop
in
mov
outsb
and
fbstp
test
sub
cmp
pushf
icebp
xor
push
pop
pop
stc
insb
mov
pop
xchg
shll
or
push
push
sbb
cmc
outsb
not
and
xchg
push
ret
or
cmpsl
or
ret
push
pop
push
cmp
leave
mov
mov
add
rcrl
cs
movsl
xchg
aad
fs
inc
les
mov
xchg
push
jno
pop
jge
rol
in
push
mov
sub
cmpsl
nop
imul
lods
push
push
ljmp
fmuls
ficompl
add
mov
sar
in
xor
sbb
not
jae
ljmp
rorb
rcl
dec
jmp
clc
push
je
inc
in
jge
jmp
cmp
repnz
and
and
inc
mov
mov
popf
xor
enter
xor
repz
movsl
dec
out
ljmp
xor
pop
jl
mov
jnp
adc
fildl
push
mov
ss
repz
and
faddl
jb
add
mov
fsub
imul
xchg
vshufps
mov
pop
and
notl
popa
sbb
sahf
cs
sbb
ficoml
xchg
lock
sub
xor
mov
add
ja
add
shlb
jmp
sub
outsb
loope
xor
in
cmc
int
das
inc
xor
mov
push
dec
pushl
cmp
pop
cmc
pop
imull
sub
call
incl
movsb
mov
sub
clc
mov
jno
mov
and
cld
shlb
pusha
mov
je
test
gs
xchg
lahf
icebp
xor
idivl
sub
dec
mov
cmp
int3
stos
ljmp
jecxz
call
inc
aas
stos
dec
pop
in
stc
enter
popf
jnp
in
adc
push
andb
int3
jae
inc
sub
out
push
xchg
test
imul
mov
xlat
inc
leave
and
and
adc
lahf
sbb
push
add
pusha
inc
fbstp
sbb
das
cmp
cmp
ret
mov
push
inc
movsb
jecxz
and
ret
or
xor
imul
mov
out
repz
cmpsl
pop
popf
pop
popf
inc
sub
mov
xchg
loopne
adcl
addr16
mov
movsb
jae
test
dec
sbb
scas
mov
lods
jmp
movsl
mov
addr16
xor
or
test
inc
incl
pop
sub
test
std
pop
sub
lahf
sbb
lds
mov
push
dec
pop
movsb
movsb
ss
gs
and
jecxz
push
sbb
cmpsb
pop
fcoms
dec
mov
ljmp
decb
movsl
testl
imul
movl
ud1
xlat
push
fisttpll
jl
adc
sub
xor
cmp
sahf
sub
jmp
fimull
jnp
xchg
mov
fsubs
dec
addr16
cmp
dec
jae
jbe
fists
lret
add
scas
mov
add
loope
repz
test
push
scas
xchg
loopne
sub
adcl
dec
mov
rol
adc
sub
in
lahf
sahf
inc
mov
dec
hlt
xor
data16
pushf
push
adc
out
jns
adc
mov
fistl
jae
jg
hlt
dec
adc
dec
push
repz
fstpt
adc
push
sbb
adc
fistpll
cltd
xchg
jbe
cs
push
fwait
mov
cltd
loope
cmp
cmp
xchg
adc
xor
push
jecxz
push
mov
and
xchg
push
loope
cmp
mov
jl
sub
imull
or
sub
leave
pop
jnp
xor
push
pop
add
cwtl
aam
cs
xchg
dec
iret
sub
mov
addl
pop
shll
popf
movsb
fistpll
popa
int
dec
push
xor
mov
dec
vcomisd
push
push
mov
mulb
xchg
xor
sub
hlt
dec
stc
inc
add
addb
loop
dec
ret
inc
sbb
lret
pop
pusha
call
pop
pop
in
leave
and
scas
jmp
jbe
cld
jnp
xor
pop
add
xchg
sub
pop
imul
ret
icebp
aam
xchg
push
inc
inc
test
mov
jno
xor
or
enter
rclb
cld
cwtl
adc
ds
xchg
fwait
jnp
push
sahf
sub
imul
test
push
lahf
les
xchg
lret
xchg
repz
cs
add
add
adc
cwtl
stos
jnp
or
mov
jae
bnd
repz
frstor
mov
fistps
dec
or
fdivl
test
mov
movsl
mov
fistps
jle
jns
mov
mov
jb
scas
add
bound
push
lret
inc
insb
mov
sbb
pop
cmpb
sbbb
sub
adc
aas
xor
pushf
imul
hlt
shl
add
popa
outsl
mov
pop
xor
cltd
icebp
xor
paddsw
out
lds
mov
les
in
and
mov
jge
aam
das
mov
or
jmpw
push
icebp
jo
cmc
fildl
das
lahf
push
stos
iret
xchg
popf
sub
loope
cmp
and
inc
pop
enter
pop
and
xchg
aaa
xchg
movsb
jg
mov
and
out
lcall
movsl
das
scas
out
or
or
mov
std
and
mov
aam
xor
loopne
das
lods
sbbl
adc
cld
dec
sub
jne
ss
cmp
scas
stos
push
mov
jns
push
sub
cmc
sti
stc
cwtl
sub
xchg
jmp
cltd
inc
sbb
aam
sbb
lret
es
xchg
jbe
inc
stc
mov
mov
fsts
mov
mov
sarb
cld
sahf
mov
lret
push
sub
mov
ss
inc
mov
mov
imulb
jmp
ljmp
inc
sbb
push
push
repnz
inc
pop
loop
loopne
in
fwait
mov
and
xor
in
add
jmp
jp
jb
in
sahf
aad
sub
mov
aaa
stos
mov
xchg
xor
addl
call
scas
mov
and
sbb
sahf
ljmp
out
aaa
fsubr
inc
notl
out
movsl
push
lds
les
push
int3
adc
outsb
sbb
repz
out
sub
inc
mov
scas
aam
nop
add
adc
insb
and
and
sbb
stos
and
leave
mov
push
fidivrs
je
xchg
jl
scas
mov
out
xor
xchg
sub
movsl
cmpsb
adc
jp
je
or
push
dec
or
sti
cltd
adc
add
cld
or
jae
cmp
repz
es
ror
popf
insb
cmpsl
or
pusha
push
cli
cli
inc
dec
sarl
add
adc
push
add
je
jbe
push
jo
outsl
push
xor
or
push
and
fildll
jecxz
jns
xchg
int
out
lods
jg
outsl
jae
and
bound
lds
addb
insl
je
xor
cmp
mov
fisubs
pop
sbb
test
dec
pop
loope
sub
or
mov
cmp
xorl
push
sub
pmuludq
lds
orl
movsb
fdiv
dec
fstl
mov
or
pushf
inc
loop
dec
lret
mov
xchg
gs
aas
fldenv
cmp
shlb
pop
nop
xor
call
sbbl
lock
adc
add
sub
mov
sbb
fcmovnb
or
sahf
iret
jle
push
xchg
subb
or
lret
idivl
mov
sub
adc
or
add
repz
out
and
jno
movsb
lcall
push
fmull
add
aaa
fldenv
je
dec
mov
mov
xchg
jecxz
mov
repz
add
add
push
cmpsl
or
cmpsl
and
lcall
sbb
bound
icebp
out
sbb
cmpsb
xchg
rorb
daa
repz
scas
daa
mov
push
mov
test
inc
shlb
loopne
ds
mov
cmp
mov
push
pop
and
cltd
call
aam
fwait
inc
and
inc
sbb
pushf
arpl
xchg
xlat
jbe
lcall
mov
addr16
das
test
inc
inc
cmpb
scas
shll
lods
inc
ljmp
lahf
jne
fmuls
dec
jae
hlt
sahf
shll
popa
out
js
nop
mov
mov
insb
push
scas
cmc
rcll
out
lock
lret
mov
pop
pop
push
jno
adc
shll
and
fldl
jno
mov
ucomiss
pop
pop
bound
pop
les
mov
adcb
mov
mulb
mov
aas
sbbl
mov
je
xlat
add
das
mov
arpl
push
in
je
xor
jae
rclb
pop
xchg
in
fs
adc
ss
shll
jl
jb
and
ficoml
or
inc
bound
faddl
add
xchg
mov
icebp
or
add
xor
imul
dec
popf
arpl
add
lcall
adc
out
nop
xor
jbe
test
xor
psubusw
imull
hlt
push
dec
test
cmp
nop
dec
stos
mov
xchg
xchg
xchg
sbb
iret
jp
roll
mov
add
pop
in
or
add
and
mov
jb
jo
sub
movsl
imul
pop
or
ljmp
adc
jle
aaa
fstl
xchg
mov
push
pop
and
push
xor
hlt
fimuls
sbb
add
xchg
jl
sahf
scas
xor
xor
mov
ficompl
xlat
fsubl
jecxz
out
std
mov
inc
sahf
add
out
push
pop
xlat
std
sub
inc
orl
out
test
les
cmp
xchg
lods
into
mov
rcll
gs
fnstenv
adc
inc
pop
mov
dec
xor
or
jp
cld
lahf
mov
sbb
xchg
loopne
sbb
aad
cmpsl
ss
sarb
cmc
stos
push
xor
fstpl
das
jmp
xlat
into
inc
je
pushf
mov
popf
sbb
jecxz
mov
pop
push
stc
xor
xor
gs
or
das
inc
mov
fcos
mov
mov
test
outsb
inc
sbb
and
addb
repz
aaa
movsb
sub
popa
mov
push
add
mov
stc
decl
mov
in
and
sbb
jmp
in
fwait
add
inc
jecxz
test
lret
jg
ljmp
mov
dec
mov
cmp
mov
push
and
and
ja
fs
add
mov
jmp
mov
inc
xor
cmp
pop
cld
out
in
dec
lock
shll
std
cmc
mov
mov
xchg
mov
xor
and
sub
test
push
or
sub
dec
mov
das
pop
mov
lods
roll
movsl
xor
mov
xchg
inc
pop
je
call
insb
sahf
scas
popf
sub
cmp
dec
xchg
clc
div
frstor
add
out
adc
in
in
repz
fwait
sbb
loopne
xchg
mov
add
dec
and
cmp
in
mov
in
lock
mov
rclb
pusha
or
pop
stos
jg
loopne
jp
mov
add
sub
test
add
mov
aam
loopne
ficoml
sub
dec
jge
mov
rcll
cs
in
add
xor
adc
not
dec
gs
das
movsl
push
leave
mov
repz
mov
push
pop
cwtl
sub
push
fnstcw
xor
or
cmp
imul
xchg
stos
js
fdivrl
or
push
mov
add
stos
insb
xchg
arpl
push
sub
fnstsw
push
pop
subb
ljmp
adc
pop
xchg
pop
push
sahf
loop
orl
bound
in
lods
es
cli
jbe
fldcw
lcall
ret
pop
adc
add
scas
sbbl
call
aaa
ret
dec
inc
scas
stos
mov
sarl
pop
cmp
pop
in
push
mov
loopne
mov
mov
call
stos
cs
fwait
sub
mov
add
mov
mov
jb
cmp
sahf
xor
faddl
mull
out
mov
cmp
lret
xchg
jb
sbb
setnp
add
mov
adc
fdiv
sbb
pop
dec
iret
add
stc
xchg
shll
mov
add
jp
xchg
and
push
push
pushf
lcall
rcr
test
xor
xchg
mov
or
xor
xchg
add
idivb
and
ret
cld
bnd
scas
sti
stos
lcall
into
cld
jmp
sub
jmp
and
mov
dec
push
ds
push
cmp
out
fmull
and
mov
fistpl
or
push
icebp
shll
jbe
imul
fsts
int3
es
call
into
filds
dec
and
std
jge
pop
or
pop
xchg
sbbb
cmc
f2xm1
pop
daa
loope
fsubrl
add
test
xchg
pop
daa
push
scas
sbb
mulb
push
das
sub
pop
in
inc
bound
adc
bound
mov
jmp
push
lods
sub
sub
fidivs
outsb
add
jl
mov
scas
jns
jg
pushf
and
ficomps
mov
and
int3
xlat
mov
inc
cmp
in
sbb
pop
cmp
pop
bound
and
mov
daa
lahf
add
dec
ficoml
dec
jnp
push
call
test
stos
mov
gs
pop
mov
aaa
fdivrp
lods
cmp
cmp
out
mov
sub
stos
mov
cmpsl
jnp
mov
add
sbbl
mov
rclb
call
jns
and
xchg
loope
and
mov
pop
mov
jno
or
inc
outsb
inc
jp
adc
jnp
mov
jp
dec
stos
scas
inc
mov
mov
test
xlat
arpl
sbb
mov
insb
and
aas
les
cmp
jg
mov
xor
mov
mov
emms
int
inc
dec
sub
sbb
scas
push
call
jle
sbb
inc
ret
nop
minps
add
int3
clc
pop
jmp
lahf
int3
sbb
ret
add
sbb
xor
and
push
jecxz
inc
fs
sbb
out
ret
fcom
call
enter
fbstp
andb
dec
loope
inc
cmpsl
loope
pop
sbb
or
adc
push
and
arpl
dec
xor
pop
lods
loop
jle
jecxz
xchg
icebp
and
aas
mov
imul
cld
stos
pusha
jge
mov
jg
loop
cmp
pop
push
in
dec
in
ret
adc
jbe
cmp
pop
cmpb
mov
xchg
inc
jp
jbe
push
inc
shll
mov
jne
jle
push
test
mov
inc
test
scas
fcmovb
push
into
movsl
xor
push
xchg
aas
cmp
inc
jne
inc
fwait
cmp
adcb
aad
pop
idivl
jl
daa
xchg
jb
push
ret
dec
addb
test
mov
ret
mov
add
dec
notl
bswap
push
lahf
test
xor
or
ss
loop
adc
shll
and
shrb
mov
mov
sahf
fists
pushw
push
inc
jg
sti
mov
mov
ror
jbe
jmp
sub
jne
shrl
call
pop
or
pop
mov
pop
mov
mov
or
jnp
pop
repnz
jae
arpl
mov
inc
jge
push
cmp
movsb
push
mov
adc
xor
or
jg
adc
inc
sbb
push
adc
or
rcrl
mull
daa
push
ret
or
dec
lcall
stos
icebp
andl
xlat
inc
jne
inc
adc
divl
adc
cmpsb
ret
insb
cmp
pop
lods
sub
jecxz
imul
cmpsb
push
or
addr16
cmp
xchg
adc
mov
mov
bound
add
addr16
xor
cmp
mov
fdivl
aam
cmp
mov
shrb
and
sahf
cmp
mov
mov
repnz
adc
test
pop
dec
out
aam
jg,pt
js
loope
jecxz
and
lea
adc
lea
insl
inc
or
shrb
stos
jmp
test
js
sbb
mov
jecxz
sub
mov
xchg
and
push
mov
out
test
rolb
pop
aaa
push
lea
jo
push
push
mov
daa
pop
pop
add
pop
popf
decb
lods
les
add
int3
cmp
xor
dec
xchg
pop
and
xchg
gs
jl
push
cmp
and
imul
mov
lret
inc
and
aaa
hlt
sbb
imul
daa
lods
fadds
pop
dec
loope
push
stos
xchg
or
pop
clc
dec
mov
pop
fmul
repz
into
mov
movsb
lret
imul
mov
stos
fisubrl
loop
pushf
fsub
sbb
sbb
lea
mov
pop
stos
cmpl
scas
jne
jle
je
je,pt
push
in
lret
jl
vpunpcklqdq
push
mov
out
movsl
jg
jne
sub
into
mov
adc
fsubs
and
adc
xchg
scas
add
lret
in
repz
es
mov
addr16
push
and
cmpsb
rcl
cmpsb
sti
loop
cmp
pop
sbb
popa
pop
pop
jns
or
sub
adc
shlb
data16
push
pusha
sbb
cmpsb
inc
insl
cmp
dec
ja
xchg
sub
movsl
jl
pop
scas
sub
decb
into
in
push
insb
inc
enter
shl
in
mov
mov
mov
or
jl
testl
cmc
cwtl
rcll
cmpsl
out
lret
les
jp
add
mov
sbb
cmp
lgs
outsb
xchg
stos
daa
test
pusha
lcall
loopne
lret
jmp
aas
mov
shl
mov
push
pop
lods
and
daa
dec
andb
es
jne
cltd
ja
dec
bound
daa
pop
pop
sahf
jbe
lds
xor
clc
retw
sti
ds
add
fstpl
mov
iret
pop
lahf
rcrl
push
sbbb
xchg
push
xchg
jp
adc
arpl
jge
sahf
in
sbb
inc
push
xchg
push
inc
push
inc
int
sub
push
loope
pop
scas
daa
out
sti
adc
stos
xchg
and
xchg
mov
loop
pop
add
lea
mov
push
xor
mull
in
call
mov
test
adc
fstps
and
mov
pop
mov
test
int
xchg
xchg
cmpsl
cli
in
lods
int3
pop
repnz
imul
fwait
ret
cmc
pop
pop
inc
ljmp
movsl
cld
out
and
imul
xor
pushf
sti
adc
js
sbb
xchg
and
and
sub
out
or
xchg
into
sbb
lret
cmp
idivb
lea
dec
insl
push
out
cs
loop
xchg
add
sub
loopne
jp
inc
ret
and
lahf
out
jbe
mov
xor
dec
sub
add
sub
clc
ljmp
inc
insl
mov
lea
stc
loopne
jo
mov
pop
mov
sti
inc
sub
mov
cmp
xchg
cmp
inc
or
pop
xchg
test
in
aaa
lds
push
mov
cmp
push
ss
frstor
mov
mov
sbb
sbb
push
jo
pop
lea
loopne
scas
int
jb
add
addl
dec
imul
sub
sbb
ljmp
fwait
ret
inc
cmp
mov
pop
cli
pop
cltd
out
or
mov
out
adc
lcall
sbb
lock
mov
mov
jns
js
aas
mov
fidivl
push
xlat
lds
nopl
mov
addl
sti
movsb
dec
daa
fistps
pop
ret
jmp
push
mov
add
incb
lret
call
stos
ss
les
lahf
pusha
iret
pop
addb
mov
mov
mov
rcrl
repnz
adcb
dec
mov
insb
mov
jmp
mov
xchg
push
mov
ficoms
fisttpl
shll
or
adc
icebp
jle
ret
sub
pop
jle
shlb
insb
lods
std
add
cmpsl
mov
movsb
cmp
pop
mov
mov
popf
popa
mov
or
xor
lahf
adc
leave
cmp
cmpsb
inc
mov
xchg
lods
sbb
dec
out
add
fs
jno
inc
mov
imul
xchg
jo
inc
push
jae
mov
rclb
mov
sbb
lock
push
inc
hlt
sub
xor
mov
jno
xor
es
in
hlt
mov
lds
jno
or
mov
mov
pop
mov
xchg
and
cmp
cmp
pop
mov
aam
add
xchg
imul
sub
pop
dec
or
int
insl
notb
and
test
sub
ss
mov
mov
std
sub
cmp
and
inc
addr16
xchg
mov
cwtl
movsb
hlt
add
jle
pop
xlat
inc
subb
std
test
and
jl
shr
xor
mov
scas
jbe
mov
iret
mov
imul
xlat
xchg
and
push
mov
xor
into
hlt
mov
jns
iret
cmp
pop
lods
stos
mov
sbb
gs
scas
lret
inc
mov
inc
es
dec
mov
adc
popa
xlat
orb
dec
mov
mov
ja
and
test
aam
test
push
adc
sub
movsb
lock
imul
lret
outsb
or
and
imulb
test
aad
rcr
mov
out
fucom
divl
push
icebp
ficomps
jmp
adc
pop
mov
lods
push
loope
aas
sbb
cmp
mov
dec
insl
mov
dec
stos
dec
out
imul
in
xor
sub
and
shll
mov
inc
std
lods
out
and
dec
clc
lret
loope
test
fcomps
push
xchg
imul
out
dec
dec
xor
jno
aas
rorb
mov
test
cmpsb
lcall
pop
inc
push
andl
pop
sbb
mov
xchg
mov
enter
pop
cmpb
imul
aam
push
lods
inc
fstpt
out
pop
ss
or
add
out
adcb
aad
mov
outsb
loope
mov
and
enter
shll
xchg
sti
dec
jb
insl
sub
and
nop
jmp
loop
orl
xor
test
and
push
mov
inc
jp
stos
cli
rclb
ljmp
sub
addr16
mov
bound
jl
std
aad
int3
inc
mov
pusha
in
lcall
lds
and
cmp
jmp
in
jns
add
mov
loopne
repz
out
data16
and
cmp
fistpl
ficoms
fwait
dec
pop
scas
icebp
test
fdivrl
jecxz
inc
pop
pop
int3
adc
aam
cwtl
sub
sarl
jo
sbb
push
stos
repnz
lock
mov
push
addl
pushf
fwait
cld
js
mov
loop
cld
jecxz
lcall
push
jecxz
in
aaa
mov
adcl
mov
mov
lods
inc
das
arpl
pop
insl
push
mov
cmp
sub
sarb
xlat
cli
in
out
xchg
iret
lret
mov
je,pn
pop
testl
je
push
popa
movsl
adc
gs
dec
call
mov
int
mov
sbb
aas
push
lea
push
mov
imul
cmp
or
inc
mov
mov
jbe
pop
xchg
nop
and
jl
cmp
inc
push
fiadds
xchg
sbb
cmp
add
daa
adc
jnp
mov
clc
jmp
jge
aad
sub
fwait
jb
nop
and
das
stc
xchg
xchg
imull
sbb
dec
nop
add
fcmovnb
sti
into
ret
add
aaa
push
sub
sbb
add
sahf
xchg
sub
cmpsl
add
mov
lret
nop
sti
push
mov
jp
xchg
pop
cli
lret
outsl
xchg
mov
aad
inc
jmp
xor
mov
into
jmp
imul
jne
out
cmp
es
inc
pop
cmp
jnp
mov
adc
cmp
jmp
mov
pop
pop
into
push
mov
ja
jo
lock
fnclex
out
cmp
loopne
mov
not
sarb
jno
jecxz
pop
scas
inc
sbb
and
cmp
andb
inc
xchg
push
jns
out
mov
mov
pop
mov
inc
jecxz
push
fbstp
out
pusha
addr16
aas
aam
sub
cli
mov
sbb
sub
xchg
movsl
cs
inc
inc
cltd
adc
pop
pushf
cmc
push
sbb
pop
mov
cmpsl
add
pop
xchg
push
dec
and
push
sbb
jl
push
nop
fidivl
daa
int3
xchg
loopne
cmp
in
dec
bound
sbb
fs
gs
push
pop
das
pushf
imul
fildll
idivb
in
sub
lds
and
loope
rolb
stos
jg
out
ret
gs
push
dec
int
adc
mov
or
cltd
jl
mov
adc
lea
pusha
dec
jne
xor
add
mov
loop
adc
repnz
std
sbb
fs
inc
fnstsw
push
shrb
lea
pop
rol
inc
push
pop
mov
fcomip
mov
ror
sahf
push
push
out
sub
pop
xor
lods
in
sub
sub
mov
or
sarl
imul
jmp
lahf
mov
xor
inc
pop
inc
call
xor
push
dec
jmp
xchg
shll
lcall
fs
in
push
movsb
nop
inc
dec
mov
stos
iret
dec
ljmp
push
cli
sub
fstps
mov
mov
pop
xchg
mov
and
cmp
scas
jecxz
out
mov
cmp
mov
xorl
jmp
push
and
mov
sbb
int3
and
lods
shll
and
fcmovnu
jecxz
sbb
push
mov
mov
popa
arpl
sti
in
push
scas
dec
pop
leave
dec
cwtl
stc
mov
ss
popf
jo
sbb
jae
jmp
cmp
lods
fcomip
repnz
mov
adc
mov
call
cltd
mull
repnz
pop
push
scas
add
xchg
push
fidivl
push
idivl
cmc
dec
mov
jns
sbb
xchg
loop
mov
adc
scas
ret
ljmp
sub
cmp
mov
leave
out
cmpsl
jecxz
incl
cmp
adc
or
jne
dec
icebp
pop
call
fisttpll
mov
xchg
adc
push
add
sbb
dec
jle
loopne
rcrb
and
inc
push
push
mov
ss
out
jbe
add
imul
jle
lahf
push
lret
jbe
rcr
sbb
sarb
cmpsb
jb
int
enter
insb
ret
adc
ljmp
xchg
adcl
cmc
adc
sbbb
daa
jae
cmp
lock
into
negb
bound
mov
scas
fisubrl
neg
imul
jg
jmp
movsb
mov
or
jl
pop
addr16
cmp
mov
ljmp
and
lods
cmp
movsb
add
or
cli
inc
push
fsts
adc
fcmovne
fs
mov
mov
outsb
stos
mov
xchg
fwait
mov
mov
jge
ds
imul
xor
sub
inc
test
test
ror
ret
jns
xchg
in
and
daa
push
out
pusha
mov
mov
or
test
es
dec
jle
cmc
or
pop
scas
jns
pop
leave
mov
adc
ret
xchg
rolb
mov
sbb
popa
add
dec
daa
dec
in
cltd
cli
mov
push
sub
xor
ds
sbb
dec
jle
cwtl
loope
arpl
hlt
xlat
add
ss
incb
rol
cmp
pop
lods
cmp
in
nop
pop
dec
push
gs
popa
push
in
and
lahf
or
cmp
in
loop
pop
decb
jge
pop
pop
shlb
lds
inc
jecxz
push
icebp
mov
mov
sbb
pop
aas
mov
cmp
sar
fnstenv
or
out
lcall
xor
aad
mov
adc
mov
inc
ret
je
fneni(8087
push
push
mov
xchg
rol
push
das
or
sbb
idivb
or
mov
mov
mov
daa
push
jnp
xchg
ret
cmp
push
lahf
fstps
sti
lret
inc
call
xorl
adc
scas
insb
sub
mov
dec
movsb
jo
jmp
lret
cld
add
and
outsb
mov
imul
rcrl
pop
icebp
mov
add
in
sub
pop
mov
pmuludq
ds
xchg
dec
negb
pop
adc
add
pushf
adcb
fld
jo
bound
mov
adc
lret
data16
xorl
xor
sub
mov
lret
dec
mov
rclb
pop
ds
mov
push
adc
and
fisubrl
scas
sbb
stos
inc
ljmp
and
xor
mov
cmp
cmpsb
mov
bound
push
inc
out
push
das
pop
subl
pop
out
data16
negb
sub
jl
jecxz
andl
lcall
mov
jbe
outsb
testl
sarb
filds
test
sub
mov
lock
das
popa
sbb
sbb
pop
cmp
sub
dec
daa
clc
add
inc
movsb
inc
aaa
push
cmp
cwtl
inc
in
lea
inc
mov
stos
out
jbe
push
sbb
les
lods
pop
shl
ficomps
das
fsubs
jle
mov
ret
pop
hlt
bound
fbld
aad
aam
mov
mov
sbb
mov
out
cmp
fsubrs
fimull
cmp
pop
imul
xor
div
mov
jle
outsl
push
mov
cmp
inc
mov
inc
stc
loopne
insl
mov
je
ja
lds
mov
mov
les
xchg
jb
sub
mov
iret
fucom
test
fildl
loop
hlt
pop
jmp
jge
sub
ficoml
notb
iret
dec
aas
xor
mov
out
outsl
or
or
std
lds
mov
sbb
aad
sub
scas
jbe
clc
dec
pop
xor
arpl
lcall
popf
inc
fistps
xorb
popf
push
in
inc
int
xchg
addr16
ja
mov
inc
das
adc
jne
mov
in
xor
dec
adc
jmp
and
or
addr16
arpl
push
bswap
sahf
xchg
fsubs
repz
ja
cmpsb
mov
lods
mov
inc
sub
sbb
and
and
mov
fwait
dec
jle
fdivp
inc
xchg
or
cmp
in
aad
push
in
pop
mov
sbb
arpl
sub
xchg
add
fnsave
rcrl
insl
shll
adc
sbb
adc
mov
xor
adc
or
dec
outsb
inc
mov
sbb
push
movsl
and
sub
nop
adc
xor
push
pop
pop
mov
lods
arpl
and
xchg
mov
jecxz
das
in
pop
mov
out
or
adc
sub
xlat
dec
dec
cmpl
pop
repnz
lea
stc
mov
xchg
pop
mov
outsl
mov
ja
ds
pop
fidivl
jno
dec
jnp
fcmovnb
xchg
imul
inc
push
mov
rorl
daa
out
sbb
dec
arpl
and
mov
jae
lds
ljmp
and
or
dec
sti
sub
add
clc
mov
out
fdivl
fs
cmpsb
iret
dec
mov
xor
lcall
mov
sbb
push
int3
mov
outsb
xchg
icebp
xchg
dec
mov
sbb
adc
in
sbb
mov
xchg
sub
repnz
gs
sbb
pusha
or
xchg
pushf
jmp
push
notl
jbe
testl
add
nop
and
jbe
lods
lock
mov
xchg
int
cmp
arpl
ja
jl
popf
hlt
push
adc
into
mov
push
cmp
ret
and
les
sbb
test
mov
dec
fs
fistpll
mov
aad
adc
or
sti
and
scas
inc
lods
mov
pop
xchg
sahf
addb
sti
inc
dec
scas
mov
push
outsl
mov
or
jp
xor
and
inc
mov
inc
inc
jp
insb
xor
cmp
js
and
jo
xor
repnz
sti
test
in
mov
cmp
or
sbb
inc
ja
add
test
les
fdivrl
or
pop
add
pop
std
js
dec
lahf
fwait
dec
int
xor
push
adc
inc
ds
mov
daa
shll
jns
sbb
cmp
push
scas
sbb
das
xor
ficomps
data16
jbe
lods
fcomp
lds
ds
mov
push
das
inc
push
cmc
dec
lret
scas
mov
adc
ljmp
pop
mov
dec
xchg
sbb
pop
or
mov
push
pop
adc
das
sbb
pop
or
bound
xchg
fsub
icebp
ret
mov
mov
sub
pop
test
inc
dec
ljmp
xchg
std
push
push
dec
or
pop
mov
andb
xchg
pop
xchg
sub
mov
or
pusha
arpl
sbb
and
outsl
jl
dec
xchg
xlat
mov
pop
push
cmp
jns
dec
inc
adc
pop
stc
icebp
gs
movsl
jno
maxps
mov
cmc
lcall
pop
cmp
test
ret
cmc
jns
jo
sbb
jmp
jle
sarb
out
test
fwait
cmc
sbb
test
repz
dec
xchg
push
xchg
hlt
add
mov
imul
rolb
repnz
inc
xor
xchg
adc
fiadds
test
insl
pop
imul
jae
jns
imul
add
jno
setge
add
je
or
inc
lcall
adc
dec
aad
xchg
sub
imul
out
mov
daa
scas
loop
sub
jnp
subb
mov
loopne
nop
pop
stos
fmuls
shlb
push
icebp
outsl
pushf
adc
mov
lret
roll
or
rorl
popa
sbb
sbb
push
push
outsb
and
rolb
insb
fstl
or
jmp
jns
shl
sub
pop
xchg
test
in
add
push
xor
jmp
imul
mov
sub
stc
add
sbb
lea
bound
lods
sub
insb
mov
in
int3
sbb
fmul
mov
mov
ret
fdivrs
ret
out
mov
mov
popa
mov
xor
push
cmp
inc
add
out
cld
pusha
loope
mov
pop
or
test
repnz
fwait
ljmp
jno
sbb
add
movsb
sbbl
xchg
pop
jb,pn
inc
mov
shlb
fldt
mov
inc
sub
jecxz
aas
mov
loop
jae
fdivl
loope
test
sarl
inc
hlt
mov
add
popa
sbb
popa
jp
imul
xor
adc
mov
xchg
push
xor
clc
fsubr
inc
cmc
fcomp
in
pop
jecxz
inc
pop
scas
data16
ret
imull
pop
lret
or
out
xor
or
shl
sbb
bound
adc
clc
ds
inc
pop
rcll
jg
xchg
dec
pusha
int3
xor
lret
mov
mov
inc
mov
insl
loopne
adc
cli
addr16
adc
gs
fcomip
push
pop
xchg
mov
mov
push
jb
test
pop
mov
or
push
add
notb
mov
dec
repnz
push
push
pop
bound
jmp
xor
sub
mov
popa
add
xor
sub
sub
add
mov
dec
push
rclb
sbb
outsl
mov
lcall
pop
mov
inc
mov
test
inc
mov
xchg
dec
insl
rorl
mov
ss
jbe
shrl
and
or
int3
fmuls
cmp
mov
add
orl
lahf
fdivl
lods
or
testl
inc
xor
inc
jle
rcrl
rcl
mov
adc
shl
lret
dec
ret
push
je
xor
push
data16
cmpsb
mov
jecxz
mov
xchg
sub
push
subb
popf
addr16
hlt
test
hlt
stc
hlt
inc
fisubrl
jle
in
add
sub
push
sub
out
fistpl
jne
xchg
or
test
sbb
aad
outsb
dec
cmp
cmp
fstl
push
cmp
or
push
dec
mov
mov
dec
movsl
pushf
test
jp
mov
aad
adc
add
pop
pop
jg
fisubrl
add
cmpsb
xchg
pop
push
fisttpll
jle
jno
push
push
mov
movsb
inc
call
mov
in
xchg
pop
cmpsb
mov
lret
cwtl
jae
sub
mov
sbb
cmp
fmull
enter
icebp
lds
sbb
lods
cmp
test
ljmp
jle
loope
lea
pop
outsl
ljmp
dec
mov
test
jo
inc
test
xchg
movsb
fnsave
sub
les
jns
call
fildll
mov
cld
test
or
jg
xlat
pop
jge
xchg
int3
icebp
pop
xor
fs
jns
inc
bnd
gs
pop
pop
or
mov
ss
aas
xchg
mov
pop
or
dec
mov
adc
lods
and
movsl
pop
add
xor
pop
cmp
lcall
pop
push
add
mov
and
adc
leave
loopne
fistl
dec
push
jle
or
xor
xchg
pop
int
outsl
lds
aas
lahf
in
jl
pop
cmp
je
in
aad
js,pt
mov
sti
scas
sub
jl
mov
push
or
cmp
cld
and
nop
xchg
arpl
sub
gs
rclb
das
ss
shrl
fildl
js
add
add
lock
repz
enter
sahf
stc
dec
cmp
orl
lcall
pop
xor
in
mov
sub
adc
xor
in
dec
inc
addl
xlat
lods
das
jl
aad
sub
jae
rcr
dec
psubd
js
out
cs
sarl
add
mov
test
xor
xchg
je
push
sub
cli
mov
sub
push
adcl
mov
pushf
loop
out
mov
push
movsb
and
mov
mov
xchg
sub
push
pop
lret
mov
dec
jl
leave
lahf
ret
lret
mov
int3
sahf
mov
jle
cmp
cld
inc
sbb
daa
sub
sahf
and
adc
dec
jg
xor
or
shrb
dec
add
sbb
or
mov
in
inc
mov
lret
cld
xor
xchg
and
sbb
out
jg
dec
lea
push
test
loope
sub
pop
push
icebp
push
mov
insl
adc
jno
es
gs
inc
or
mov
dec
das
mov
inc
pushf
shlb
into
dec
dec
xchg
xchg
pop
enter
jecxz
repz
lods
or
add
shrb
mov
addl
mov
pop
lret
jecxz
push
js
jo
out
test
punpckhbw
push
mov
shrl
fildl
icebp
adc
std
outsl
xchg
out
sub
push
shll
jb
rep
xor
ror
insb
gs
pop
stos
fistpl
jge
fsub
pop
daa
js
sahf
jnp
arpl
jb
pusha
jns
pusha
and
adc
ret
jecxz
mov
lret
xor
mov
dec
mov
outsb
push
cmpsb
mov
xor
cltd
mov
aaa
and
imul
out
repnz
dec
adc
int
lahf
sbb
xor
insl
sbb
sbb
sbb
movsb
cmp
xchg
rcrl
mov
popf
adc
pop
xchg
cvtdq2ps
rclb
pushf
movsl
dec
xorl
sbb
mov
popf
enter
sti
inc
scas
ss
movsl
or
pushf
jnp
dec
filds
cmp
inc
mov
lcall
repnz
jnp
sbb
sub
xlat
or
cli
mov
mov
mov
xchg
or
mov
push
scas
test
stc
decb
cwtl
arpl
fwait
pushf
jl
dec
mov
pop
movsl
dec
rcrl
fs
push
pop
sbb
fucomi
in
xchg
ja
pcmpeqd
in
mov
inc
test
loope
sbb
gs
fwait
jecxz
test
push
not
data16
les
adc
movsl
xchg
aaa
ss
and
adc
mov
and
jmp
outsb
xchg
cs
mov
push
xchg
sbb
pop
nop
push
sub
mov
or
jae
dec
add
fisubrl
clc
lods
xchg
lods
dec
and
mov
add
xorb
das
push
pop
adc
push
inc
sbb
jmp
in
mov
pop
int
cltd
fs
addr16
push
clc
jbe
sbb
stos
insb
mov
jp
push
ret
ret
int3
test
dec
addr16
pop
bswap
dec
cs
dec
pop
sub
les
dec
dec
and
sub
inc
sub
dec
and
pop
jo
aam
test
nop
ret
js
xor
push
lods
mov
cmpsb
loopne
push
jmp
jge
clc
test
les
loope
outsl
dec
push
dec
pop
sbb
lods
lods
push
adc
test
mov
pop
cmp
push
mov
cld
ret
nop
sbb
push
fwait
iret
jp
test
xchg
imul
shll
pop
adc
outsl
xor
fiaddl
dec
stc
fwait
je
pop
xlat
nop
push
mov
xor
ret
mov
xor
sbb
adc
cld
nop
out
lahf
enter
sub
arpl
adc
xchg
sti
xchg
sub
mov
icebp
aad
imul
mov
enter
frstor
push
pop
dec
in
mov
xchg
sbb
repnz
push
fcoms
imul
cmp
xor
scas
stos
testb
loope
addr16
push
push
add
jne
jnp
mov
out
xchg
test
sub
inc
add
out
jmp
sub
adc
sbb
and
mov
popa
push
push
or
dec
mov
adc
fisttpl
cs
pusha
sarb
inc
enter
iret
cmp
in
and
into
jp
addr16
pop
sbb
orl
outsl
out
xchg
sbb
mov
fcmovnu
inc
jae
lock
js
lahf
daa
mov
cmp
loope
subl
pop
cld
lock
cmpsb
mov
push
repz
and
adc
gs
and
xchg
add
mov
xchg
rcrb
in
lret
adc
mov
aas
mov
orl
pushf
xchg
enter
push
nop
in
mov
cltd
shlb
or
dec
decl
rcrl
push
jmp
ret
cmp
bound
pop
rcr
in
cmp
xchg
xchg
les
icebp
dec
sub
in
sbb
jp
sub
pop
jecxz
addr16
filds
rorb
mov
dec
inc
dec
jbe
stos
pop
loop
fcoml
or
ret
out
stc
sbb
sahf
or
mov
insb
fildll
es
dec
scas
js
xor
sub
in
inc
dec
mov
sbb
add
jl
popl
mov
push
lahf
inc
lea
into
pop
pop
clc
clc
pop
cmp
mov
sarl
cmc
sahf
mov
push
add
push
cmpb
mov
or
pop
int
and
ds
sub
call
sub
rcll
jo
shrb
add
out
push
jge,pt
adc
jl
push
push
cmpb
mov
xchg
lcall
rcll
or
sub
mov
popf
je
jb
movsb
testb
mov
mov
jne
pop
cmp
inc
fwait
in
loopne
inc
mov
push
push
and
pop
mov
xchg
outsl
lret
int
and
nop
or
cli
test
xor
ja
fisttpl
xchg
push
ret
xchg
mov
outsb
add
mov
loopne
jp
andl
imul
add
popa
lcall
pop
inc
sahf
adc
stos
and
test
icebp
jl
popf
fmull
mov
xor
test
push
jnp
xchg
inc
out
scas
testl
stc
outsb
or
jecxz
adc
pushf
ja
mov
out
mov
pop
int
mov
xchg
pop
sub
faddl
fisttpl
mov
ret
enter
gs
into
or
in
and
and
push
jbe
outsb
mov
ja
xor
es
pop
cmp
dec
cwtl
xchg
lret
dec
xchg
lahf
xchg
fcompl
cmc
cmc
pop
adc
les
cmpsb
push
pop
cmpsl
stos
insb
xchg
lcall
clc
mov
cmp
sbb
enter
outsb
cmp
ror
insb
and
cmc
loope
bnd
in
pop
jae
dec
leave
mov
jnp
or
pop
aad
insl
mov
add
pushf
aad
mov
out
leave
es
es
mov
dec
cmp
add
pop
xchg
stos
loop
jae
adc
cmc
fxch
xchg
pop
jne
sub
push
in
mov
jbe
loope
mov
sbb
and
loopne
movsl
pop
push
dec
mov
jmp
xorl
inc
scas
xchg
icebp
sub
xor
outsl
inc
out
pop
iret
inc
jns
or
jecxz
push
scas
mov
xlat
test
mov
jp
add
xlat
inc
clc
ljmp
mov
or
add
sbbl
dec
ss
gs
add
mov
lahf
xor
and
xlat
dec
xor
jp
loopne
push
mov
ffreep
mov
out
cmp
out
insl
mov
fnstenv
les
sub
int3
ret
or
xorl
or
mov
js
mov
negl
dec
outsb
mov
xor
xchg
push
jb
aaa
icebp
adc
sub
lea
mov
fmull
icebp
mov
lods
cmp
mov
sbb
inc
cld
leave
or
bound
pop
stos
pop
inc
pop
pop
movsl
lock
in
or
mov
sbb
pop
jae
add
add
ss
or
dec
add
shr
orl
sub
push
push
cmp
push
jecxz
mov
loop
mov
or
mov
lea
gs
jp
sub
insl
xor
fldcw
mov
lcall
sub
add
mov
ss
add
sub
pop
int
aas
cmp
aaa
mov
mov
or
dec
jg
mov
or
or
sub
pop
ljmp
mov
fidivrs
xor
sub
sarb
mov
clc
shlb
subb
ret
ret
out
scas
xor
pop
loopne
mov
cmp
fadds
lret
shl
fsubrl
pushf
mov
or
adc
mov
out
stos
push
mov
popa
xchg
pop
cmp
test
xor
into
sbb
je
fdivr
mov
pop
and
adc
sbb
push
mov
cmp
mov
or
xor
add
in
mov
imul
dec
insl
in
mov
dec
leave
aas
dec
pop
inc
iret
test
js
add
add
lock
in
les
push
sub
dec
push
repnz
leave
pop
outsb
xlat
pusha
movsl
mov
pop
ljmp
mov
add
rorb
dec
inc
add
imul
inc
sbb
sub
mov
dec
icebp
dec
daa
sti
in
sub
jb
xchg
xor
dec
and
push
mov
aaa
xchg
xor
and
ljmp
lret
stos
mov
pop
inc
pop
add
pop
or
mov
and
cmp
or
jnp
sub
cmpsl
repnz
pop
repz
mov
js
daa
push
jne
inc
aam
adc
subb
lea
lret
sub
out
js
xor
std
inc
mov
xor
mov
jo
sub
repz
imul
aas
test
fmuls
scas
stos
scas
push
movsb
sbb
gs
lock
movsl
mov
imul
jmp
data16
xchg
imul
jae
jp
add
ret
dec
shll
aam
sbb
push
mov
fsubs
cltd
gs
push
ljmp
mov
pop
loopne
pop
and
mov
sbb
not
or
cmpb
es
mov
mov
inc
jo
int3
dec
mov
clc
lods
mov
pop
pop
pop
mov
or
mov
jns
adc
ljmp
lret
or
imul
fucom
or
cld
dec
cmp
pop
arpl
mov
xorb
popf
rcl
popf
mov
and
lret
fcomp
ja
mov
dec
jb
cli
mov
and
sub
test
icebp
aaa
xor
leave
or
lods
divb
cmp
fs
int
js
adc
out
mov
push
stos
test
bound
rorl
fstl
cwtl
jno
enter
sub
pop
jge
in
jg
xchg
test
mov
loopne
sub
in
aas
mov
pop
or
lea
add
test
in
dec
popf
adc
push
daa
add
ret
and
jle
push
and
push
sbb
leave
mov
jecxz
jo
enter
fcoms
mov
je
cld
pop
cmp
test
in
and
imul
daa
pop
dec
mov
repnz
xor
mov
mov
std
rorb
addr16
rclb
push
stos
add
jae
rorl
xchg
outsb
popf
enter
mov
and
ret
mov
je
xchg
popa
xchg
cmp
or
pop
xlat
fcompl
mov
mov
adc
xchg
loopne
aaa
cwtl
imul
stos
sub
call
pop
mov
sbb
xchg
sbb
int3
dec
jb
mov
xor
adc
pop
lock
push
mov
mov
out
pop
mov
mov
mov
out
ficoml
xchg
shl
jmp
movl
sarb
movsb
cmpsb
mov
jae
xor
add
andnps
ja
mov
add
subl
inc
pop
dec
and
outsl
dec
cmpsl
ret
mov
cmovnp
xchg
test
mov
adc
mov
scas
rorl
push
push
cmp
mov
inc
inc
lret
imul
ljmp
ds
sbb
mov
push
adc
ljmp
push
or
ljmp
cmc
mov
es
pop
pop
mov
leave
ja
sub
cmpb
mov
cli
mov
movsb
sarl
cwtl
add
pushl
shll
xor
sbb
jns
push
mov
cld
jecxz
int
and
mov
jo,pt
xchg
test
xchg
dec
scas
xchg
enter
dec
rcrl
push
outsb
sarl
mov
add
sub
test
xor
add
and
pusha
mov
dec
cmp
dec
lock
mov
ret
dec
xchg
pop
scas
outsl
rclb
pop
rcr
rolb
repz
add
fdivl
fwait
push
push
out
xchg
push
in
cmp
dec
mov
push
jl
jp
add
out
mov
jns
cmpsl
call
xor
shrl
and
and
xor
loope
sub
or
test
aad
imul
loopne
in
push
shlb
dec
mov
mov
or
push
pop
int
loop
xchg
jb
or
test
out
fs
add
aam
inc
sahf
es
cmpsl
mov
xor
lds
mov
mov
mov
lret
inc
das
add
in
into
mov
add
sahf
xor
xorl
jmp
mov
movsb
int
mov
int3
adc
fisttps
xchg
xorl
push
les
mov
imul
out
pop
dec
ret
xchg
divl
subb
es
ljmp
sub
test
daa
out
shll
xchg
daa
adcb
daa
popa
int
mov
mov
mov
in
cmpsb
xchg
mov
lods
sbb
mov
inc
cli
fisttpl
xchg
decb
fisubs
movsb
idiv
adc
shlb
das
pushf
mov
mov
je
inc
test
fwait
adc
dec
push
add
aaa
outsb
ret
push
cs
jo
ret
push
lock
push
inc
xor
push
mov
push
inc
mov
add
sarl
jp
iret
je
daa
cld
pop
imul
inc
xlat
add
jge
enter
rcll
jne
sub
addr16
adc
xor
xchg
loope
xchg
sbb
addr16
punpckhdq
mov
out
nop
jne
sahf
dec
pushl
rol
push
sti
add
loop
add
inc
push
ret
jae
xor
mov
jl
mov
das
xorb
cld
lods
repz
stos
arpl
adc
mov
mov
popf
shrl
loop
fnstenv
leave
cmp
mov
cltd
push
jno
or
fsts
lcall
jno
cmp
sbb
fwait
shlb
and
cltd
mov
or
add
in
push
repz
mov
arpl
arpl
fwait
xchg
test
cmpl
fcmovu
mov
sub
js
jno
lock
mov
inc
mov
lods
add
adc
es
leave
stos
iret
insl
pop
dec
js
std
outsl
jae
sbb
lods
jge
push
mov
mov
xchg
andl
or
dec
or
lahf
shlb
popl
inc
mov
and
xor
xor
push
sbb
jmp
cltd
in
push
cli
xor
ret
sub
adc
arpl
loopne
enter
fstps
popa
cmp
pusha
mov
pop
xor
iret
fcmovnbe
push
mov
adc
jecxz
hlt
dec
aaa
dec
shll
int3
jp
int3
cmp
add
sub
icebp
scas
ret
inc
mov
jbe
or
ja
ss
add
insb
jno
leave
mov
insb
pusha
mov
out
clc
mov
xor
add
hlt
inc
imull
jns
iret
insl
jle
shlb
dec
or
pop
sbb
adc
inc
push
mov
mov
icebp
add
in
int
inc
loopne
push
pop
xor
outsb
mov
aaa
push
push
call
xchg
mov
jae
push
jg
mov
mov
lahf
test
scas
sbb
jae
lea
sub
iret
fimull
insb
inc
push
xor
mov
stos
inc
and
mov
cmp
in
inc
arpl
cmpsb
gs
pop
inc
cwtl
aaa
mov
dec
out
xchg
in
pop
cmp
fistpl
cmc
cli
call
lods
clc
ret
clc
rcrl
xchg
pop
shrb
test
xchg
dec
xor
add
add
mov
fwait
pop
popf
inc
inc
add
jecxz
sub
mov
or
push
and
xlat
mov
ficoml
jmp
jb
repz
daa
sbb
jp
push
mov
das
mov
test
cwtl
sbb
pop
test
add
xor
arpl
rclb
repz
adc
insl
add
out
and
jae
movsb
cld
add
insl
adc
aaa
mov
test
push
or
xor
movsl
test
cld
and
mov
lds
xchg
sub
and
outsl
lret
and
lcall
xorb
out
lods
xor
mov
dec
xchg
xor
outsl
sahf
sahf
rcrl
pop
out
and
test
mov
punpckldq
pusha
hlt
jb
jbe
or
jo
mov
cltd
xorb
push
aad
lods
sub
aaa
adcl
cs
jnp
pop
pop
push
sahf
or
fsubrp
je
lahf
adc
xlat
cmp
es
in
enter
pop
cli
fsub
or
adc
and
jo
mov
dec
dec
sbb
shrl
lods
xchg
dec
xor
xchg
fst
fisttpll
and
les
movsb
fadd
decl
test
add
push
out
jns
mov
lret
fwait
and
paddusw
xchg
sub
jg
inc
add
cmp
sbb
push
in
dec
loop
sbb
push
ja
into
push
leave
in
or
adc
push
xor
mov
xor
lret
or
adc
sub
bound
dec
xor
dec
add
in
aam
and
push
mov
pusha
xor
lret
and
push
loope
mov
add
cmp
popf
pop
fnstcw
jo
mov
jo
cs
out
dec
or
enter
pop
pop
and
aam
jo
jecxz
imul
aas
adc
iret
ror
mov
jmp
cwtl
add
mov
call
pop
pop
decb
or
jecxz
iret
inc
cwtl
ja
or
xchg
push
scas
jno
lea
cmpsb
dec
lods
mov
daa
pop
out
in
pop
pop
pop
test
inc
jae
lods
enter
jno
mov
xor
inc
in
xchg
push
pop
in
xor
dec
inc
hlt
dec
and
push
pop
mov
out
fsub
in
push
shrb
popa
fsts
jmp
fisttpl
pop
jmp
xchg
sarb
dec
xchg
dec
insl
shlb
xor
jns
data16
in
imul
ljmp
aad
mov
and
push
cmpsb
sub
xchg
add
andl
sbbb
shll
lret
mov
sbb
mov
out
call
out
nop
addl
or
adc
aad
shr
enter
adc
stos
mov
sub
xor
push
dec
jno
inc
mov
leave
cmp
repnz
pop
imul
push
adc
in
rcll
or
pop
mov
push
xor
dec
inc
dec
daa
mov
mov
cmpb
mov
sub
sub
js
dec
mov
push
or
repz
adc
pop
int
sub
into
xchg
lds
aaa
mov
sahf
rcrl
test
dec
mov
mov
mov
mov
lea
repnz
jne
out
pop
lret
fmul
mov
sub
inc
pop
scas
sbb
inc
add
jge
jnp
pop
mov
push
adc
cmp
cmp
and
pop
push
xor
cmpb
dec
stos
jecxz
sbb
enter
and
cmc
inc
in
sbb
cmc
ljmp
jecxz
stos
mov
mov
repz
sub
mov
pusha
das
mov
push
mov
inc
dec
scas
lods
cmp
mov
andl
loop
or
mov
inc
rclb
or
outsb
inc
add
mov
mov
push
ret
mov
push
xchg
push
jecxz
inc
fidivs
cmp
out
adc
cmp
cmp
jecxz
sub
test
xor
repz
jp
and
fisubrl
pop
lcall
cmp
mov
cwtl
inc
jbe
lock
pushf
sub
dec
xorb
hlt
pop
xor
rol
cmp
inc
fldl
aas
sti
jle
mov
repz
jge
cmp
xor
stos
and
inc
aam
subb
push
call
test
ret
xor
je
cld
movsl
aas
cmpsl
mov
rclb
mov
cwtl
jl
xor
mov
shlb
xchg
or
push
into
cmp
pop
mov
xchg
sbb
rolb
mov
xlat
push
cmp
inc
sub
icebp
adc
mov
iret
daa
ds
call
sarl
mov
adc
dec
mov
test
sti
int
pop
push
and
xorl
adc
mov
xchg
pushf
roll
sbb
idivl
mov
add
cmp
sub
orb
mov
jns
fdivr
lcall
jge
cli
mov
test
push
scas
fsubl
test
mov
pop
pusha
cmpsb
and
aaa
js
in
fucomi
fisubrs
pop
mov
sub
jb
out
cmp
pushf
mov
pop
lahf
cwtl
out
adc
scas
addb
mov
dec
xchg
and
sub
inc
dec
dec
imul
ret
loope
iret
shll
adc
bswap
jae
rclb
lds
lret
or
pop
xchg
jbe
imul
mov
je
dec
in
imul
enter
mov
add
insb
mov
sbb
mov
scas
inc
mov
aam
xchg
lods
and
sbb
lods
pop
jmp
rep
jns
roll
push
sahf
push
adc
sub
outsl
in
adc
jg
xchg
bound
jne
jge
lea
les
scas
mov
pop
aas
adc
mov
jno
push
jne
sbb
outsl
daa
test
lds
fs
pop
filds
int3
stos
dec
xor
adc
insb
cmpb
jg
push
jp
xchg
adc
cmp
xor
subl
jmp
dec
pop
sti
fidivl
cmc
and
pop
aam
ja
shrl
push
xchg
push
test
lret
inc
pop
insb
adc
sub
stc
mov
push
jg
je
jae
lahf
and
jae
lcall
inc
loopne
add
inc
cmp
movsl
jae
arpl
sub
sub
push
repz
xor
pusha
jb
xchg
inc
xor
xchg
pushf
sub
push
sbb
xchg
cwtl
or
cwtl
leave
mov
test
loope
xchg
out
mov
jae
test
fwait
pop
stos
ds
repz
fisubrs
pop
jp
add
jns
fcomi
rolb
fs
icebp
outsb
mov
mov
dec
mov
lcall
mov
mov
cwtl
xlat
sub
sbb
jg
js
fildll
xchg
xchg
pop
pop
divb
aad
inc
xchg
lcall
inc
or
je
add
popa
insl
sub
call
sub
mov
adc
mov
js
add
rolb
mov
mov
pop
adc
je
js
jb
jle
sub
mov
bound
add
icebp
into
insl
cmp
mov
shlb
in
pop
xchg
pop
push
in
dec
scas
lea
push
mov
movsl
jns
ljmp
dec
xor
cs
sub
push
fldcw
lds
sub
popf
cmpsl
data16
sub
ja
in
fstl
pop
repz
js
push
lea
mov
pop
sar
pusha
lods
cwtl
mov
mov
xchg
push
lcall
fsubrl
jae
and
xchg
imull
sbb
lods
test
or
je
dec
push
stos
inc
dec
xor
add
and
negl
lods
loop
sbb
pusha
inc
mov
scas
int
pop
push
stc
push
inc
loop
mov
xor
jl
dec
pop
and
pop
lret
popf
xor
cli
cmpsb
fisttpl
icebp
nop
dec
jg
add
push
insl
shll
outsl
inc
fnstenv
pop
push
daa
out
sbb
or
push
lret
shl
xchg
cwtl
dec
mov
mov
pop
hlt
pushf
push
cld
fcompl
or
in
and
mov
dec
add
xor
cwtl
rorl
es
dec
call
sub
inc
and
mov
icebp
push
gs
lock
xchg
loop
mov
inc
dec
mov
pop
xor
jle
xchg
mov
lcall
aad
pop
rorl
and
loop
push
sbb
leave
mov
xor
mov
mov
push
mov
popf
and
cs
ror
in
lods
call
mov
ja
jp
or
movsb
fwait
mov
mov
cmp
testb
jno
add
lock
xchg
or
js
pop
std
jmp
popf
sub
sbb
mov
xchg
pop
test
leave
sub
out
mov
jno
fisubrl
xor
jns
fildl
pusha
jae
or
cmp
insb
cmp
push
into
pop
aad
adc
out
popf
lret
xor
push
cld
ja
pop
in
inc
pop
pop
aaa
sub
push
and
xchg
fdiv
fs
jbe
jae
aaa
push
in
inc
push
lods
cmpsb
dec
pop
stos
mov
mov
add
adc
mov
and
mov
das
mov
repz
inc
cmp
xchg
or
sub
dec
sti
pop
mov
or
stos
adc
mov
icebp
pop
loopne
and
mov
ja
sti
lret
add
pop
mov
xchg
jle
std
cmpsb
icebp
rcrb
mov
shrl
push
clc
xchg
fsubl
or
push
push
lock
loop
sbbl
in
or
jns
and
test
aad
lea
repz
mov
mov
cmp
xchg
bound
clc
jb
stos
popf
mov
jno
cmp
push
nop
bound
lahf
xchg
fstl
adc
push
or
into
lahf
fildl
mov
inc
bound
loop
ret
movsl
dec
aam
xchg
std
sub
es
ret
sbb
xor
xor
adc
adcl
xchg
rcrb
sub
cltd
ficompl
aad
mov
xor
adcl
mov
cs
loope
ds
sti
fs
or
ja
lret
pop
sbb
mov
dec
addr16
xor
and
xor
cmpsl
imul
fldcw
pop
push
aas
mov
mov
inc
pop
jecxz
aas
sub
push
lret
in
dec
sbb
ret
mov
loopne
addr16
inc
adc
in
cmp
pop
cmp
mov
divb
lods
inc
daa
filds
pop
outsb
ficoms
aam
es
mov
mov
jle
xorb
dec
xchg
inc
test
xlat
es
mulb
sahf
or
clc
int3
xchg
mov
pop
xchg
dec
es
sar
in
inc
imul
and
sahf
mov
and
sub
dec
mov
mov
scas
jo
insl
push
mov
dec
fstpl
inc
fs
jge
xor
mov
cli
xor
scas
loopne
pop
sbb
leave
fcmovne
pusha
arpl
adc
mov
daa
test
or
cmp
dec
rcrb
cs
mov
mov
fs
jg
add
out
movsl
ficomps
lods
inc
lcall
xor
bnd
imul
sbb
leave
jp
js
sarl
out
mov
arpl
pusha
add
fimull
jecxz
icebp
cld
sub
xchg
jbe
orl
sub
movsb
movl
cld
mov
mov
push
imul
add
inc
popa
dec
hlt
mov
jo
sub
shrb
es
xor
push
adc
mov
test
sbb
enter
lret
pop
lret
mov
add
repz
lods
dec
mov
mov
push
dec
test
lds
mov
xor
in
pusha
push
xchg
adcb
cmp
into
xlat
and
cltd
jge
test
es
or
movl
cmpsb
xor
sar
jge
lcall
rclb
outsb
insb
push
insb
xchg
jae
and
ret
dec
xor
daa
jne
fs
pushf
or
pop
call
jl
jno
sub
cmpsb
popf
pop
mov
cmp
filds
sahf
outsl
mov
adc
faddp
ret
pushf
in
call
daa
jbe
cld
sarl
bound
ret
fbld
add
mov
jp
rcll
dec
sub
and
ror
sbb
insb
xchg
ficomps
jge
es
adc
aad
jne
movsb
lret
jns
jb
lds
dec
inc
leave
repnz
pop
push
pop
sahf
into
stos
mov
movsb
out
push
or
push
pop
test
sti
subl
shl
mov
rolb
mov
les
ret
cmp
push
or
pop
imul
ret
setl
push
cmpsb
jg
rcr
inc
icebp
push
lock
imul
lds
jno
fnstsw
ss
int
xchg
cmp
mov
adc
lret
loope
shlb
xor
pop
scas
jmp
mov
enter
pop
mov
mov
ss
lret
jp
cmc
or
add
testl
push
mov
sub
hlt
outsl
jp
cmpsb
dec
ficoml
je
mov
out
in
addr16
xchg
or
push
cld
push
dec
pusha
rol
add
add
iret
push
adc
stc
jne
out
cmpsb
icebp
jmp
or
cmp
adc
sub
fidivrl
jnp
aaa
popf
lock
xchg
mov
lret
mov
mov
or
insb
popa
in
add
sub
mov
cmc
inc
inc
stos
mov
ret
shll
out
cmp
jle
pop
ljmp
push
pop
inc
jecxz
push
adc
adc
add
icebp
push
mov
in
addr16
movsb
push
mov
pop
mov
or
iret
xchg
push
scas
inc
pusha
xchg
lcall
sub
inc
pop
dec
mov
pop
or
inc
lret
addr16
and
cltd
mov
adc
sbb
mov
or
lods
xor
aaa
movsl
mov
lds
aam
lret
orl
push
faddl
cmp
adcl
fwait
mov
mov
cs
or
ficomps
fistpll
ret
lret
pop
jb
cltd
movsl
out
add
fsubl
in
sarl
inc
rolb
addl
mov
decb
push
inc
mov
cmp
sub
push
nop
add
adc
fidivrl
push
ljmp
fwait
cmp
mov
in
les
pop
sub
add
dec
mov
adc
pop
mov
and
shll
jo
insb
fwait
andl
and
sbb
fistpl
jb
xor
pop
inc
ret
hlt
jmp
inc
fnstsw
mov
sub
mov
ret
shlb
xchg
jl
adc
jno
or
jecxz
mov
and
fnstsw
aam
int3
xchg
adc
shlb
aas
xchg
sub
inc
cli
jmp
imul
jns
adcb
pop
mov
inc
and
lret
ds
stos
ss
xchg
outsb
popf
pop
pop
fsubr
testl
pop
xchg
je
dec
mov
popf
pop
daa
ds
clc
jp
sbb
lret
rorb
mov
in
dec
icebp
repz
or
sub
notl
pop
stos
mov
pop
pop
in
popa
cs
inc
mov
push
xor
mov
inc
jmp
in
in
jne
lcall
push
stos
jae
lock
lret
out
ficoml
mov
xchg
repnz
adc
movsl
push
dec
adc
push
sbb
fucomi
inc
scas
sbb
sbb
imul
clc
push
shlb
fistpll
mov
push
mov
inc
dec
xor
out
or
mov
lock
lds
jl
cmpl
mov
sub
imul
push
lds
push
sub
lcall
hlt
jmp
mov
push
mov
mov
notb
jle
mov
inc
shlb
pop
adc
loop
fnstenv
cmpb
lret
ja
addr16
xchg
sarl
xchg
push
aad
es
jmp
in
leave
inc
inc
enter
jo
ds
push
sarl
aad
dec
push
xchg
lock
fs
iret
push
ret
and
fistpll
in
lock
imul
dec
lcall
dec
scas
xchg
adc
imul
sahf
addr16
fwait
xchg
sbb
xor
mov
push
pop
or
icebp
std
sar
jno
xlat
and
cmp
out
test
push
repnz
and
mov
mov
in
mov
xor
add
repnz
jmp
xchg
or
adc
sbb
mov
add
int
jecxz
jg
push
subb
enter
cltd
jnp
insl
mov
inc
xor
mov
jnp
add
mov
push
movb
and
stos
test
sub
or
inc
mov
jns
cld
jno
add
hlt
shrl
sbb
mov
fcmovb
or
push
fwait
jle
nop
int3
mov
roll
mov
stc
mov
sahf
orb
daa
jno
movsb
loop
ret
mov
inc
sbb
pop
cmp
mov
and
adc
ljmp
add
pop
js
xchg
mov
xchg
stc
test
xor
inc
rorl
pop
push
mov
lock
arpl
inc
outsl
jge
pop
jne
jp
orb
and
mov
ljmp
jge
adcl
dec
fdivrl
pusha
stos
sbb
dec
repnz
leave
je
mov
or
jge
je
sbb
cmp
in
rdmsr
xor
cmpsl
pop
push
rcr
cmpl
scas
negl
jns
stc
insl
aaa
push
xchg
mov
movsl
ds
mov
cmovg
std
out
cmpb
mov
or
sub
ljmp
aam
out
xor
pop
xor
or
fcom
aam
sub
sbb
hlt
enter
popa
mov
add
jp
jo
mov
test
adc
inc
sbb
or
in
xchg
dec
test
daa
insl
pop
add
add
outsb
outsb
addr16
test
cmpl
cmpsl
cmc
mov
cmc
lods
in
sub
inc
lcall
mov
mov
rcll
adc
inc
mov
pop
xchg
jg
xchg
cmp
js
mov
push
pop
aaa
jae
out
mov
aad
push
bound
xchg
mov
push
cmp
sub
adc
je
std
outsb
jns
inc
movsl
pop
fs
out
ret
mov
outsb
mov
jns
ss
pop
cltd
mov
addr16
dec
lock
push
dec
aaa
aam
movsl
test
jecxz
or
in
jno
shrl
add
xchg
andb
icebp
mov
dec
ja
das
push
xor
jae
add
ret
push
mov
pop
and
aaa
push
jle
push
cmpsl
mov
mov
repnz
jg
imul
cmp
rcrb
ja
xchg
pop
pop
add
cmpsl
shll
jecxz
push
inc
push
rcll
fbstp
shl
addb
arpl
mov
je
xchg
mov
imul
movsb
scas
popa
xor
jns
shrl
cmp
pop
cs
fst
push
fcompl
inc
push
les
cmpsl
int3
mov
sarb
and
out
jge
jne
mov
mov
inc
mov
iret
mov
outsl
rcr
mov
iret
xchg
adc
sbb
lea
push
mov
stos
icebp
shll
insl
loop
and
jne
mov
mov
pop
inc
dec
int3
jmp
aam
sbb
stc
pop
mov
jle
add
xchg
cmc
loope
sarb
fdivl
shlb
mov
inc
sbb
bound
ror
add
mov
or
out
mov
lea
jb
mov
cltd
dec
jns
shll
cmp
lahf
inc
sbb
push
leave
addr16
cmpsl
fcomi
loopne
xchg
daa
nop
sbb
jmp
lret
cmp
std
or
cmp
lods
dec
lds
clc
test
fs
repnz
subl
xchg
xor
mov
adc
js
sbb
fisttpl
pop
out
sub
add
xorl
cmc
rcr
push
or
xor
imul
mov
jmp
and
mov
cmpsb
shlb
call
xor
js
adc
dec
in
pusha
in
ror
pop
and
pushf
enter
repnz
pop
rol
jns
push
jle
enter
push
test
orb
inc
sbb
dec
mov
mov
clc
ret
xchg
push
fisttps
movsb
addr16
jb
div
cmc
pop
aas
outsl
cwtl
mov
add
and
and
sti
and
cltd
or
ds
lret
aad
ss
iret
sub
and
pop
mov
jnp
or
int
adc
jbe
pop
push
outsb
jnp
xor
sbb
and
outsb
mov
sbb
adc
fisubl
xchg
nop
loop
popa
pusha
dec
adc
mov
enter
xchg
scas
sti
xor
xchg
shll
jo
adc
mov
cltd
lret
xchg
iret
imul
jg
jb
call
push
popf
outsl
xchg
repnz
push
mov
mov
pop
pop
mov
mov
fmulp
and
adc
aas
repnz
js
fcmove
mov
sub
jg
rcrb
inc
inc
push
scas
out
cmp
stc
jp
dec
cmc
loop
sub
push
addr16
mov
xchg
dec
pop
sub
push
fwait
test
daa
jae
iret
or
add
cltd
adc
or
xor
js
jmp
fidivrl
in
les
lds
sbb
push
movsb
les
sti
or
cmp
pop
decb
hlt
lcall
inc
faddl
inc
es
enter
orl
xor
jae
mov
xchg
or
out
lret
mov
fsubrs
jae
int
movsl
xchg
out
adc
xlat
lods
icebp
pop
inc
sbb
xor
aam
push
inc
insb
xor
inc
icebp
sub
dec
ret
jae
adc
lret
dec
inc
pop
mov
and
jb
es
mov
pop
and
mov
xor
sub
mov
jp
xor
dec
push
int3
sub
aam
jge
inc
push
imul
lds
in
fiaddl
js
setnp
fxch
fiaddl
sub
es
jnp
cld
pop
mov
lret
pop
incb
clc
aaa
outsb
imulb
xor
adc
test
push
data16
jno
xchg
add
mov
mov
jbe
sti
inc
mov
icebp
pop
xchg
ja
hlt
pop
movsl
fnclex
adc
out
std
gs
mov
out
nop
sub
push
or
cmc
push
sub
in
add
sbb
jae
sub
mov
stc
mov
adc
outsl
push
adc
lods
xor
and
xchg
movsl
push
dec
stc
call
insb
xor
sub
ljmp
shll
push
and
mov
ret
adc
mov
scas
dec
sbb
push
lret
mov
arpl
pmulhw
jp
xor
sti
adc
xchg
icebp
jb
inc
mov
mov
inc
js
xchg
nop
cmp
dec
loop
pop
cmp
sub
add
push
mov
and
add
aad
xor
push
push
sub
mov
gs
mov
adc
aaa
mov
ljmp
cmc
add
sbb
push
inc
mov
dec
push
mov
adc
mov
add
mov
imulb
pop
xor
cld
push
pop
push
jns
or
jmp
xchg
pusha
adc
xchg
mov
and
cmp
adc
mov
inc
fstl
sbb
mov
popf
and
push
dec
sbbb
js
or
jae
xchg
scas
push
jno
cwtl
pushf
pop
arpl
fs
repz
cmpl
ret
data16
jp
sbb
out
sub
test
imul
scas
adc
aaa
psraw
jp
cmp
push
dec
inc
and
jnp
les
imul
popa
imul
cmp
mov
add
mov
cli
cmp
xchg
cltd
lahf
dec
inc
bound
mov
xchg
cld
pusha
out
push
mov
push
lock
push
dec
cli
and
es
hlt
cmpsb
cmp
mov
push
movsl
and
js
rcl
adc
pop
imul
mov
lds
dec
sbb
jle
add
aad
sarb
movsb
cmpsl
dec
lock
jp
cmp
cmpsb
cli
ja
icebp
scas
cmpl
nop
mov
out
pop
jmp
gs
dec
pop
in
push
cmc
popa
inc
mov
jmp
cmp
fstl
loop
dec
add
inc
and
mov
lea
xchg
push
cmp
test
fidivrs
loope
lds
lcall
mov
mov
cmp
aad
mulb
adc
test
int3
ss
loop
adc
clc
imul
jg
fmul
popf
pop
shl
inc
scas
loope
aad
repnz
incb
dec
ret
rcll
into
cld
ret
icebp
dec
arpl
fisttpll
mov
movsl
push
out
pop
cli
xchg
fwait
int
xor
aam
jle
sbb
xchg
outsl
pop
jbe
xchg
cwtl
insb
cmpsb
pushf
sbb
cmp
mov
or
dec
sbb
jge
mov
or
mov
insb
or
sub
int3
and
add
ret
outsl
in
sub
daa
xchg
das
insb
ret
push
jo
sub
lahf
mov
cld
inc
jnp
aam
push
jno
clc
das
xchg
rcrb
push
add
add
stos
movsl
inc
jg
out
xor
movsl
adc
inc
aas
ja
out
fsubl
dec
add
lods
lret
cwtl
xor
sub
sub
divb
repnz
ss
lea
or
adc
sbb
shll
inc
lods
outsb
les
cltd
arpl
gs
lret
je
fstl
xor
ja
outsl
pop
fbstp
adc
xchg
pop
es
leave
push
das
cmp
push
mov
int
mov
ds
jbe
mov
out
lret
mov
js
mov
clc
out
jp
gs
outsb
jns
add
xor
push
and
lcall
cmp
lea
aad
testb
mov
in
ja
popa
xchg
mov
into
insb
fidivrl
cmp
inc
mov
sbb
out
decb
ljmp
insl
adc
mov
scas
js,pt
jnp
ljmp
data16
imul
cmp
xchg
scas
pop
pop
push
mov
mov
inc
popa
enter
scas
in
cmp
sub
jno
test
push
xchg
ljmp
leave
mov
adc
pop
sbb
fldcw
sbb
jae
push
pushf
in
or
les
cli
sub
pop
mov
jmp
inc
add
bnd
pop
push
jecxz
scas
adc
imul
or
mov
daa
xchg
test
jmp
add
sub
mov
mov
sub
pop
or
push
aas
pop
subl
sti
inc
mov
mov
and
push
fwait
mul
out
jb
inc
add
adc
add
pusha
dec
loop
or
repz
jmp
push
iret
and
inc
and
sahf
in
push
sub
jnp
or
insl
cmpsb
jnp
inc
push
sub
popa
pop
push
fbld
push
insl
test
ret
dec
hlt
sbb
pop
pop
xchg
lods
lock
sbb
pop
mov
add
push
enter
lea
in
sub
or
and
mov
lock
into
mov
jecxz
fcompl
loope
mov
xorb
fdiv
nopl
mov
fcoml
call
daa
test
fdivrs
pop
fs
outsl
dec
or
or
sbb
sbb
mov
adc
enter
dec
loopne,pn
cli
movsl
mov
repnz
int
repnz
je
pop
icebp
adcl
and
sti
clc
mov
cwtl
out
sub
lea
sub
push
jns
pop
inc
mov
cmp
fwait
lods
test
or
cmpl
loop
xor
cmp
nop
xor
popa
cmpsl
shl
movsb
lea
frndint
pop
xchg
in
jg
outsl
sub
cmp
xor
idivb
inc
cld
out
dec
ljmp
add
cld
rolb
mov
jnp
xor
dec
dec
add
dec
out
sbb
push
mov
ljmp
mov
cmp
adc
xchg
test
and
push
stc
into
push
cltd
sub
rcrl
les
addb
xlat
xchg
inc
sub
push
cmp
and
in
cmpsb
fbld
adc
sub
inc
fnsave
adc
fnstsw
pushf
call
shll
jp
int3
je
inc
dec
and
push
or
mov
mov
jns
mov
shlb
mov
add
out
lret
dec
int3
fnstcw
fs
mov
std
and
shll
mov
or
loope
pop
add
mov
ret
pop
dec
sti
mov
dec
mov
push
push
gs
cmp
xor
sbbl
sub
lds
jmp
push
xchg
popa
and
pop
roll
bound
pop
sub
mov
mov
sub
jnp
xchg
mov
icebp
mov
dec
mov
push
dec
repz
inc
out
dec
cmp
mov
fisubrs
xchg
mov
es
mov
int3
fcomi
in
jns
gs
xor
jne
cltd
imul
jae
pop
dec
ds
mov
andb
ds
lea
shlb
orb
fsub
pop
lock
jp
out
int
dec
fdivl
outsb
jp
jecxz
push
jbe
cld
das
inc
mov
out
xor
jnp
rcr
jp
mov
movsb
and
jb
mov
es
dec
or
dec
hlt
loop
fwait
mov
sbb
fidivrl
fisubl
popl
and
insb
fbld
insl
xchg
mov
leave
adc
outsl
mov
push
popa
push
xor
call
jl
push
push
cmc
movsl
adc
hlt
movsb
add
loope
dec
xlat
mov
xchg
movsb
or
push
push
fcomip
push
adc
pushw
stc
mov
sub
fsubr
flds
scas
icebp
lock
push
jae
fsub
clc
mov
sub
and
mov
push
add
lcall
paddsb
mov
cltd
ss
shl
xor
fimuls
and
popf
mov
outsb
pop
lods
xor
jge
push
mov
xor
adc
pop
adc
jns
pop
cli
sbb
in
xchg
psubq
test
adc
es
jp
lea
imul
or
out
dec
ss
push
mov
aam
pop
outsl
dec
push
scas
lcall
jg
sbb
jae
stos
xchg
clc
stc
cmp
mov
subl
ret
cmp
lds
push
pop
jbe
fwait
lret
aas
shl
popf
rep
popa
rorl
subl
stc
in
mov
xor
in
icebp
jns
xchg
dec
out
pavgw
lock
mov
fcmovnb
pop
fs
movsl
push
lods
sarb
cmp
push
out
xchg
lea
insb
mov
std
or
mov
sbb
test
cli
dec
push
inc
repz
push
fdivrl
or
mov
pusha
fmuls
mov
hlt
sub
xor
jae
cs
mov
in
out
into
mov
jmp
enter
fsts
adc
and
push
cmp
jmp
lods
mov
xchg
pop
loop
push
fs
cli
je
dec
test
add
sbb
pop
jno
stos
xlat
lret
cs
mov
push
dec
clc
mov
out
repnz
aas
cld
mov
cmp
in
sub
fisttpl
fistps
mov
push
lock
test
xchg
dec
push
sbb
daa
js
je
aas
mov
roll
aas
das
faddl
shl
or
fs
and
pop
cmp
xchg
loopne
mov
mov
push
push
sub
sbb
adc
out
mov
clc
outsb
outsb
out
aaa
loope
shlb
or
rcr
sub
adc
xchg
sbb
and
add
push
addr16
xchg
pop
jno
bound
jae
sbb
mov
jne
sbb
sbb
sbb
lcall
lret
xor
pushf
push
add
aad
sbb
xchg
pop
mov
loopne
test
aam
iret
fimull
cld
mov
fs
pop
out
push
aam
in
fisttpl
push
adc
fisubs
xor
push
mov
xor
dec
add
jb
movl
push
or
xchg
mov
std
push
ss
push
ret
fwait
pop
push
sub
fsubl
test
std
push
stc
in
xlat
inc
mov
add
push
loope
xchg
aam
ret
int
enter
int
sarb
call
nop
sub
mov
insl
jo
insl
and
outsl
push
adc
stc
dec
add
fs
push
fwait
stos
jmp
cmp
xchg
sbb
jno
fnsave
sahf
or
movsl
and
out
sahf
jno
cli
repz
pop
jl
sbb
xchg
dec
shll
arpl
aam
lods
mov
dec
and
test
jge
jmp
sahf
int3
adc
fsubp
inc
enter
test
sub
dec
adc
jl
xchg
cmp
sub
cmp
sub
enter
sbb
shlb
pop
aas
and
cmp
or
dec
inc
xchg
add
mov
shl
daa
ret
sub
movsb
pop
insb
cld
fwait
and
mov
gs
pop
adc
jo
mov
xor
jae
mov
fisttps
cmp
call
pop
adc
cmp
mov
mov
fwait
jg
xchg
cmc
adc
notl
inc
mov
pop
jecxz
jg
std
ljmp
add
int
stos
mov
int3
dec
ret
dec
les
addr16
cltd
add
inc
outsl
jecxz
shl
mov
add
sub
and
xchg
mov
lods
push
mov
aas
mov
cmc
push
jg
and
jnp
push
jmp
loopne
mov
js
jno
jae
rcrl
adc
cmpsb
and
push
dec
xchg
inc
lock
pop
dec
mov
adc
int3
sahf
inc
mov
pop
xchg
xor
pop
sar
cmp
pop
xchg
mov
add
es
sbb
xor
jns
movsl
pushl
mov
mov
ret
jmp
orb
lock
xchg
jo
das
and
cmp
pop
push
cld
in
repz
sbb
mov
movsb
js
lret
hlt
lods
mov
sbb
mov
pop
jge
sbb
pop
pop
jbe
outsb
test
jecxz
cmpsl
adc
mov
mov
sub
jle
clc
mov
xor
call
jp
stc
jbe
aam
les
inc
lds
hlt
pop
test
push
stos
ret
jns
sahf
add
xchg
incb
xchg
and
xor
xchg
repz
mov
or
mov
xor
dec
sti
aas
aam
in
sub
mov
fiaddl
sahf
clc
inc
push
es
jo
enter
dec
dec
sbb
in
loopne
mov
jge
mov
stc
add
das
jne
sti
out
pushf
pop
push
push
inc
push
subl
cmpsl
gs
lock
scas
and
mov
sbb
fs
adc
cltd
hlt
push
movsl
cltd
test
mov
jge
lods
int3
pusha
inc
scas
xor
xchg
int3
mov
ret
adcb
test
ret
int3
gs
or
and
lock
xchg
mov
nop
mov
jmp
sahf
lock
fnstsw
sbb
cmp
je
add
mov
push
cmp
vpunpcklwd
xchg
sbb
lret
pushf
xor
xlat
push
push
rorl
inc
mov
cmp
xchg
lock
insl
rcl
or
int3
imulb
push
inc
orb
test
push
ljmp
mov
lea
out
sahf
mov
out
or
sar
sub
shlb
hlt
sbb
xor
repz
mov
cltd
cmp
in
loop
xorb
inc
dec
add
jb
cmp
loope
scas
ja
test
mov
cmp
int
jo
add
sub
xor
cld
mov
scas
and
mov
xor
enter
in
inc
sub
imul
mov
popf
js
xbegin
jmp
mov
xor
inc
fucomp
mov
push
adc
mov
fadds
scas
add
das
xlat
aad
pop
inc
inc
jb
rol
inc
adc
lahf
pop
or
add
aam
pop
movsb
notl
lahf
mov
out
out
cld
xchg
sbb
jle
stos
ss
cmp
das
sbb
and
jmp
in
popf
xchg
mov
imul
enter
sub
fcoml
adc
xor
mov
fld
into
cmp
adc
xor
cmpsb
mov
adc
pop
imul
xchg
cmp
cmp
adcl
ss
cmp
das
xor
or
in
fidivl
ljmp
jbe
adc
add
cwtl
sbb
or
inc
pop
lds
cs
and
or
cmc
sub
jmp
rclb
cmp
test
or
adc
lock
xor
shll
inc
mov
popf
lcall
dec
push
cmpl
pop
pop
mov
jo
lcall
cmpsl
into
sbb
jecxz
push
fisttpll
lret
xchg
imull
es
out
pushf
mov
nop
jns
xlat
jno
jns
adc
inc
xchg
xor
xor
jmp
or
cmp
cs
loopne
imul
mov
xor
add
flds
push
into
add
ja
mov
jne
scas
xchg
adc
adc
nop
pop
or
add
push
sbb
jp
push
ja
call
xor
and
aas
sahf
iret
cwtl
xor
mov
mov
loope
cmp
mov
mov
adc
ret
lret
dec
and
stos
or
and
sub
mov
aam
jmp
and
fmull
push
push
mov
fs
cmp
out
mov
lds
mov
cmpsb
pop
je
clc
mov
hlt
repz
add
dec
testl
jnp
push
std
xchg
mov
mov
mov
ja
and
push
fimuls
imul
jo
sub
clc
and
add
stc
orb
repz
inc
test
inc
shlb
cmp
push
out
test
push
pop
inc
or
push
xchg
and
dec
and
jl
fidivs
nop
pop
sbb
stc
leave
shll
sbb
loop
in
mov
and
mov
mov
mov
lock
dec
test
and
loop
xchg
mov
xchg
jmp
push
and
mov
into
jmp
test
out
sub
fcom
xor
mov
adc
testl
mov
mov
out
mov
push
mov
push
outsb
das
repz
inc
xchg
xchg
inc
push
add
mov
lds
inc
xchg
aam
push
mov
sub
sar
cmp
dec
cmp
insl
outsb
in
aas
pusha
pop
popf
ljmp
lret
in
popa
repnz
data16
in
jae
fnstcw
fucomp
sti
dec
xor
aas
xchg
fdivrl
xor
jb
and
or
ds
jle
idiv
cmpb
lods
imul
mov
dec
sbb
or
cmp
in
pop
mov
cmp
jae
add
fsubl
dec
adc
cmpsb
ds
inc
insb
mov
adc
push
sbb
adc
lods
and
mov
lret
loop
jno
xor
dec
negb
dec
mov
cmpsl
into
push
dec
or
xchg
adc
cmp
fiadds
add
xor
fadds
pop
xchg
cmp
push
sbb
and
mov
mov
push
aad
and
ljmp
and
lea
push
jmp
popf
or
add
gs
mov
xchg
mov
movsb
call
inc
jg
or
lcall
and
rorb
outsb
sbb
xlat
fisttpll
pushl
mov
lock
sbb
sub
pop
jne
and
jmp
out
mov
sub
cs
jne
loop
es
mov
out
adc
adc
lock
mov
xchg
xchg
aas
push
pop
clc
pop
orl
sub
add
and
sbb
imul
lods
int
lods
dec
add
adc
sbb
fbstp
cmp
mov
jecxz
add
hlt
xlat
jp
inc
jmp
icebp
dec
push
mov
inc
subb
and
mov
movsb
mov
mov
cmc
bnd
cltd
int
or
pop
lock
das
inc
mov
mov
xor
mov
mov
xchg
jge
fwait
xor
dec
sbbl
mov
mov
jp
dec
test
stos
sbbl
add
repnz
xchg
testl
lret
xor
aas
scas
pop
je
roll
enter
inc
xchg
sbb
jae
test
ja
and
dec
shrb
sub
mov
adc
popa
lea
sbb
repnz
sub
sbb
or
rcll
mov
es
fldt
pop
add
cwtl
and
sub
dec
lahf
std
jo
cmp
stc
mov
jae
gs
scas
rcr
cs
and
rclb
lret
insl
out
pop
ret
popa
adc
pop
mov
shrl
mov
xchg
rcrl
push
ret
xor
mov
fisttpl
arpl
adcl
push
add
insl
cltd
in
jae
std
cld
adc
call
mov
mov
out
lods
dec
jbe
jo
or
mov
fxch
aad
xor
out
ds
mov
jo
push
and
outsl
cmp
repz
adc
inc
sbb
adc
jp
not
xor
mov
rclb
and
jns
jl
mov
mov
jp
cmp
ss
xchg
addr16
out
stc
xor
leave
jae
push
mov
pop
sub
cmpsb
sbb
fwait
push
ret
lret
aad
push
shl
mov
sahf
xlat
mov
sub
mov
int
or
inc
xchg
stos
xchg
divl
jl
loopne
lcall
jmp
push
push
push
cmp
pop
je
ss
push
imul
add
movsb
int3
outsb
addr16
jmp
jbe
out
enter
mov
or
shlb
jno
sbb
pop
lret
fdivrs
les
push
pop
push
mov
pushf
aas
adc
shrb
pop
fdivrs
aas
fsubl
fldt
int
adc
repz
stos
adc
mov
and
xchg
imul
sbb
xlat
add
test
jmp
jecxz
lcall
es
mov
shr
rcrl
loop
cmp
or
out
test
popf
test
mov
repnz
and
addb
out
inc
mov
std
lods
test
push
movsl
or
and
clc
xchg
inc
push
xchg
xchg
and
out
imul
ret
or
sbb
ljmp
test
jno
in
lret
fistpll
pop
xor
test
lret
jg
test
push
in
jbe
xor
add
cmp
sbb
pop
adc
ficoms
push
dec
inc
aas
ja
shll
lea
xchg
out
or
nop
jne
cli
fildll
mov
dec
add
fsubl
lret
daa
test
dec
xchg
xor
adc
lcall
ja
scas
outsb
mov
pop
es
xchg
enter
jmp
mov
push
sub
pop
mov
arpl
ret
push
xor
decl
adc
mov
cmpsl
rclb
xchg
mov
icebp
add
outsl
sbb
mov
pop
mov
jne
in
mov
ret
pop
imul
dec
ja
or
xchg
pop
jo
pop
mov
fdivs
in
movsb
mov
or
cmp
stos
mov
ret
add
mov
test
movsl
mov
add
pop
into
cmp
insl
fstpt
or
jmp
sbb
pop
inc
subb
fidivs
popf
and
in
dec
xor
arpl
adc
xor
cmc
jb
xchg
div
push
test
mov
pop
mov
sub
or
xor
inc
fldcw
popa
mov
sarb
sub
mov
fsubrs
mov
lea
pop
loop
je
mov
push
outsb
lods
fstl
cmc
loopne
daa
das
addr16
fnstcw
and
sub
pop
lret
mov
lods
and
jb
repnz
js
mov
jmp
or
xchg
fucomip
imull
jge
or
lds
mov
in
aaa
sub
and
aam
arpl
cld
sbb
cmpsb
and
enter
hlt
pushf
mov
mov
rclb
call
sub
lock
cmp
mov
cli
aas
add
sarl
lret
sub
pop
aaa
aas
lea
cmp
lahf
aas
mov
mov
jge
pushf
or
jl
nop
jge
mov
imul
mov
je
ret
dec
xchg
mov
mov
lret
orb
imul
popa
lahf
jae
fisttpll
mov
mov
cltd
imul
or
ret
lock
ja
filds
cmpsb
dec
sub
arpl
xchg
and
dec
call
lret
adc
je
or
cmp
and
int
enter
inc
test
mov
jle
out
dec
jno
int
jo
pushl
mov
outsl
repnz
shlb
pop
cmp
repz
mov
mov
adc
in
ds
popf
push
pop
mov
test
cltd
scas
int3
loope
adc
jmp
or
push
aaa
pop
cmpsb
int
adc
mov
inc
adc
int
xchg
movsb
arpl
imul
adc
subb
or
rclb
das
add
cmp
cmpl
sbb
mov
lods
sbb
frstor
out
not
insl
dec
out
mov
std
sub
mov
xchg
xchg
in
out
outsl
lock
sub
add
mov
mov
aad
sbb
and
jae
mov
mov
xchg
notb
mov
arpl
jg
adc
sysexit
mov
clc
adc
inc
push
or
pop
jo
jp
or
and
ret
jne
sbb
es
push
mov
mov
sbb
mov
hlt
ficoml
jae
int
es
sti
push
cli
imul
push
push
fldenv
outsb
jae
ds
dec
sbb
xchg
xchg
xchg
adc
sub
xchg
pop
ljmp
cmp
dec
cmp
lods
or
cmp
iret
rorl
xchg
arpl
cmp
push
mov
dec
mov
pop
daa
mov
adc
daa
add
mov
and
movsl
and
xchg
or
cmp
inc
out
cld
mov
push
add
jns
push
mov
push
sub
push
repz
pop
fcmovu
sbb
inc
mov
fiaddl
push
or
aam
mov
pop
test
arpl
xor
sub
subl
test
les
jns
xorb
cmovo
lret
andb
xchg
push
repz
fwait
ss
jns
mov
and
stos
cmovnp
cld
pop
and
cmc
sbb
out
dec
push
fdiv
cmpsl
test
pop
loopne
jb
imul
les
sbb
repz
xchg
push
mov
xchg
add
lods
inc
cmp
sbb
fdivr
test
xchg
outsl
out
jle
outsb
adc
cltd
insb
nop
and
and
xor
mov
aas
inc
jno
cmpsl
pop
les
movsl
dec
or
xor
jg
sti
lods
lcall
pop
and
sub
pop
js
adc
pop
sub
cwtl
cltd
shll
call
arpl
push
test
dec
fwait
dec
scas
lcall
xchg
nop
cltd
xor
mov
rcrl
push
add
push
or
add
xchg
dec
addr16
jne
sub
mov
enter
ret
fcomps
clc
mov
push
popa
cmp
sahf
leave
les
xor
popf
cmp
lcall
movl
aad
or
das
pop
pop
dec
xor
pop
mov
inc
xchg
lret
hlt
xlat
cmp
notl
popa
fldenv
in
xor
insl
outsl
fcompl
cltd
clc
jmp
sbb
mov
lret
pusha
call
dec
push
lret
arpl
and
pop
pop
jne
adc
insl
out
notb
mov
push
mov
mov
sbb
or
push
adc
mov
mov
pop
into
push
pop
pop
imul
xor
cmp
add
test
loop
mov
int3
repnz
pop
sub
je
mov
mov
xor
jne
xchg
adc
adc
repnz
or
cmc
inc
iret
ss
cmp
test
enter
jmp
sbb
movsl
out
cmp
fidivrs
bsr
mov
in
jno
in
sub
mov
sub
lret
adc
outsb
sub
out
das
fdivrs
jg
fisubrs
mov
cltd
loopne
add
pop
inc
ljmp
push
pop
or
sub
push
int
sbb
lea
stc
xor
adc
jne
fwait
out
mov
lret
push
mov
sub
inc
subl
pop
std
ret
bound
xchg
ljmp
sbb
gs
and
mov
xlat
in
xchg
mov
movsl
insb
push
ret
push
es
jecxz
adc
fmul
dec
movsb
lahf
out
adcb
xchg
jno
xlat
pop
es
mov
or
mull
ret
cmp
into
jmp
adc
sti
ljmp
push
and
popf
shll
mov
aas
rcr
add
test
cmp
and
pop
xchg
lds
insb
aam
cmp
clc
in
push
call
bound
jnp
ja
adc
cmp
sub
in
jecxz
vmaxsd
jo
int3
or
mov
cld
xchg
mov
fwait
jg
out
sub
fldl
scas
mov
test
xor
adc
outsl
adc
lret
push
pop
mov
dec
ret
orl
scas
mov
scas
cld
shlb
mov
push
test
cld
sbb
aas
out
jnp
dec
stos
xlat
out
cmp
push
in
jae
arpl
into
out
aad
sti
and
push
lahf
inc
xchg
scas
fsubs
in
mov
xchg
mov
adc
push
mov
aad
lret
mov
je
xor
test
sahf
cmp
push
sbb
ds
lods
test
add
inc
mov
leave
cwtl
popf
outsl
or
adc
call
add
sub
push
xchg
aam
loope
add
and
jg
jo
pop
jmp
lods
or
aam
mov
xchg
mov
lea
sub
pop
push
data16
xchg
icebp
jmp
dec
xchg
jmp
fstp
ss
adc
push
jbe
xchg
insb
sbbb
or
loope
fbstp
lret
les
inc
shlb
lret
repnz
pushf
imul
dec
pop
xchg
cmpl
imull
jo
mov
inc
mov
sub
cmp
sbb
das
repz
lods
into
shrb
jns
push
cmp
leave
into
lock
push
rol
shl
lret
aas
icebp
fstl
add
mov
jecxz
ds
icebp
mov
lds
daa
cmp
stc
addr16
insb
dec
mov
insl
out
loope
pop
mov
mov
int3
lods
and
xor
je
pusha
pop
push
fwait
mov
popf
inc
mov
mov
lock
inc
test
in
scas
push
mov
jl
dec
mov
js
add
test
negl
jl
inc
mov
or
mov
ffreep
ds
mov
add
xchg
mov
push
inc
scas
roll
stc
jo
xor
xlat
and
pop
mov
push
repnz
mov
gs
inc
loope
shrb
fadd
jp
sarl
or
leave
in
ret
mov
jl
notl
jnp
xor
das
dec
decl
dec
test
jbe
fsub
dec
jns
pop
sbb
mov
jae
sahf
jbe
scas
ror
aam
movsl
aad
aad
xchg
rcrl
inc
inc
movsb
test
jmp
adc
adc
lods
xchg
and
mov
cmpsb
frstor
pop
and
inc
mov
jo
call
jle
mov
mov
push
mov
or
sub
cmp
out
jnp
js
loope
leave
xor
and
xchg
les
subb
aam
stos
mov
shl
inc
mov
jmp
mov
sbb
pop
ja
movsb
push
es
ss
fcompp
lods
fucomi
movsl
adc
xchg
push
dec
je
out
pop
out
xchg
shr
inc
insl
xlat
mov
mov
arpl
xchg
in
jge
addr16
cmc
loopne
repz
addl
xchg
push
adcb
sub
push
pop
jo
outsl
push
pop
sub
xchg
mov
push
xor
aad
inc
je
in
push
jae
mov
pop
add
xlat
cwtl
jbe
push
test
outsb
jg
cmpsl
in
imul
ret
out
mov
dec
cmpsb
popf
and
sub
dec
lret
adc
movl
dec
xchg
mov
xchg
jg
cmp
stc
out
pop
adc
or
jg
int
push
inc
mov
out
mov
jne
sub
andl
out
lgs
sbbl
jg
dec
jp
sbb
cmovg
cvtps2pd
and
fisttpll
nop
out
bound
enter
ret
push
sbb
or
push
xchg
cmp
loope
push
pushf
jae
clc
dec
ljmp
imul
add
cld
sub
jne
roll
mov
xchg
add
xchg
loope
pop
ret
xorb
xchg
shll
xor
out
xchg
mov
inc
roll
loopne
push
and
mov
aaa
pop
cmp
sti
lods
push
in
mov
inc
scas
movsl
out
addr16
outsb
pop
xor
mov
movsb
fcmovne
inc
ja
addr16
inc
rorl
or
xor
movsb
push
into
sub
push
dec
into
in
xchg
mov
scas
dec
in
sbb
mov
jb
lret
push
hlt
or
dec
movsb
ficomps
inc
scas
jmp
lret
in
mov
jecxz
cwtl
push
or
and
mov
ficoml
outsl
mov
inc
addr16
mov
mov
ja
inc
je
add
insl
xlat
mov
push
dec
mov
add
testb
mov
gs
test
mov
outsb
and
adc
adcl
jmp
inc
cli
jmp
push
mov
inc
jmp
xchg
jl
dec
lods
shll
jno
xor
rcl
adc
xchg
dec
test
jo
scas
inc
pop
xchg
dec
jmp
inc
jnp
xor
movsl
push
movsl
mov
sub
iret
push
movsl
jle
in
cmpsl
push
test
cmp
mov
loop
out
iret
cmp
pop
addr16
sbb
mov
mov
loopne
outsl
mov
out
jbe
lds
jmp
aas
leave
fdivl
pushf
and
mov
pop
mov
subl
ret
push
and
stos
sbb
lds
sub
jno
sbb
or
or
mov
xlat
jo
leave
fsubl
xor
int3
jp
pop
fcoml
filds
add
push
andl
sub
jp
sbb
adc
mov
lret
or
mov
ud1
lea
enter
dec
jne
sbb
ret
test
repz
sbb
mov
scas
mov
push
std
and
push
cmp
out
adc
scas
pop
rcrb
lock
test
in
fists
out
in
rolb
fcomps
sub
and
cmpsb
out
mov
mov
inc
loop
push
mov
pop
inc
dec
stc
test
mov
jb
mov
pop
pop
cmc
xlat
iret
xor
scas
pop
and
arpl
and
shll
movsl
mov
add
inc
or
push
shr
jns
pop
clc
mov
cs
pop
cmp
hlt
scas
jp
sahf
add
push
push
jge
test
push
hlt
pop
xor
insl
and
add
imul
push
mov
gs
and
test
sbb
rclb
dec
popf
sbb
cli
mov
ss
jecxz
mov
xor
jno
dec
lods
hlt
inc
sysexit
lret
call
ret
mov
dec
sub
clc
xchg
add
repnz
adc
or
dec
loopne
fdivl
int
mov
xchg
mov
mov
stc
lcall
fidivrs
imul
in
mov
pusha
js
push
es
xchg
jp
dec
inc
imul
ret
xchg
out
pop
scas
jle
and
cmpsl
sub
pushf
loope
ljmp
into
push
aam
cli
aam
mov
stc
lock
outsb
pop
xor
lods
jnp
fcmovnbe
fstpt
pop
movsb
push
xchg
mov
into
cmp
test
aaa
mov
pop
test
adc
repnz
in
aaa
adc
inc
jl
dec
test
jmp
add
bnd
data16
mov
sbb
dec
sub
clc
jne
and
push
jmp
add
xor
andl
xchg
dec
cmp
insl
pop
dec
xor
xchg
push
push
mov
aas
pushf
daa
mov
mov
daa
scas
add
cmp
scas
ss
mov
fistps
cmp
gs
cmpsl
in
mov
sub
adc
xchg
xor
push
out
inc
and
or
add
jns
mov
xchg
xchg
and
mov
test
mov
mov
dec
mov
sti
nop
push
notl
scas
adc
inc
scas
in
pusha
cmc
clc
arpl
inc
out
mov
iret
adc
mov
movsl
mov
loopne
into
push
in
subb
mov
and
stos
push
mov
xorl
stos
loop
inc
lods
loopne
loope
xor
scas
and
jnp
dec
push
adc
jo
inc
inc
xlat
in
and
jb
jne
cmpsl
inc
sub
push
les
icebp
adc
out
pop
pop
fstl
lahf
and
mov
xor
pop
fdivrs
xor
int3
popf
rcl
xchg
jo
fs
test
lahf
into
xlat
xor
mov
pop
push
jmp
daa
push
pop
cltd
xchg
out
in
jns
rcrb
fldl
xor
in
pop
push
sbb
cs
lcall
movsl
dec
jno
mov
lret
xor
nop
jge
scas
test
dec
orl
or
les
mov
and
outsl
adc
fistps
stc
cmpsb
inc
test
and
xchg
movsl
jle
mov
shll
fistps
out
cli
jle
cld
push
mov
lahf
cli
cli
subb
ds
push
loop
mov
pusha
cmp
mov
mov
inc
loop
push
jp
sub
pop
scas
or
int
pop
lds
aaa
out
es
lret
mov
mov
jno
adcb
xchg
jmp
push
sub
call
in
loopne
int3
jnp
in
inc
or
xlat
xchg
cltd
jnp
lret
dec
fistpll
mov
pop
pop
xor
nop
mov
int
xchg
stos
push
inc
pop
adc
lcall
adc
or
out
cmp
lods
fmull
sbb
push
lahf
cmp
xor
cmpsl
or
cmp
mov
inc
inc
pop
and
add
and
popa
dec
xor
popf
int
ficomps
cwtl
pop
sbb
popf
mov
lahf
xchg
mov
aaa
xor
es
stc
jp
sbb
cmp
es
xchg
repz
push
push
adc
cs
pushf
gs
adcb
push
push
push
inc
les
xor
jl
mov
aam
dec
fsub
adc
lds
je
mov
imul
push
pop
or
neg
and
inc
sbb
pop
aas
xchg
ds
fs
fs
xor
dec
insl
dec
and
and
inc
imul
or
outsb
cmpsb
add
clc
mov
int
inc
into
and
or
sarl
jo
test
ja
sub
je
jns
stos
xchg
and
fwait
negb
inc
loop
mov
cmp
cmpsl
add
mov
inc
gs
and
push
loopne
int3
insb
add
push
adc
aaa
sbb
mov
inc
rorb
in
and
xor
fdivrs
jp
xchg
mov
xlat
sbb
inc
shrl
sahf
mov
push
rcl
sbb
pop
imul
cmc
push
or
fisttpl
lods
adc
mov
outsl
push
jge
mov
jno
jle
iret
add
test
xchg
outsl
cmp
xchg
iret
add
cmc
call
fiaddl
jns
cmpsl
dec
xor
sarl
mul
mov
sahf
ret
mov
dec
js
xchg
es
lahf
lret
and
pop
ficoml
push
xor
and
and
pop
in
ljmp
repz
pop
call
fs
je
repz
xor
loop
sarb
inc
syscall
fildl
dec
push
adc
and
xchg
xchg
leave
inc
aaa
cmp
mov
test
adc
test
ret
pop
or
jmp
jp
jae
mov
out
mov
mov
inc
decl
insl
outsb
xchg
jnp
mov
xchg
cmpsb
pop
dec
cmp
or
push
mov
mov
xchg
test
adc
sub
cli
xor
icebp
stc
cmpsl
sti
rcrl
inc
stc
idiv
push
mov
sarb
add
xchg
jne
bound
pop
fildll
dec
jge
aad
leave
xor
pop
outsl
or
loopne
in
mov
jecxz
arpl
pop
or
aaa
or
lods
sbb
push
pop
rcr
dec
mov
inc
test
dec
add
push
fxch
daa
stos
out
sub
or
mov
mov
push
jl
fcompl
pop
jns
jecxz
cmp
int
inc
push
sub
mov
fdivrl
cwtl
mov
dec
mov
es
xlat
add
adc
fwait
jl
outsl
cltd
mov
or
mov
xor
jg
addr16
xchg
add
xor
cli
mov
mov
jp
dec
push
adc
test
jp
sti
xor
adc
js
out
loop
mov
sub
cld
in
icebp
dec
sub
fstpl
push
andl
add
cmpsl
movsl
inc
jl
mov
lcall
mov
or
mov
adcb
loop
addr16
jmp
inc
sub
std
mov
in
fisubl
and
pop
shll
cmpsb
out
adcl
mov
lods
xor
xchg
imul
iret
clc
call
jno
aaa
inc
pop
loop
insl
dec
pop
push
ja
xor
repz
fwait
pop
or
pop
xor
nop
pop
pushf
out
in
fld
arpl
xor
pushf
jecxz
repz
je
imul
call
cld
lods
sbb
push
mov
lods
inc
pop
lods
out
cmp
push
lds
or
xor
jecxz
lods
push
push
sub
out
fs
in
fs
dec
push
outsl
xor
push
push
std
sub
xor
mov
lcall
adcb
imul
jp
icebp
jo
push
outsb
popf
sbb
sub
nop
push
cmp
dec
stos
xchg
push
lahf
fisubl
lret
das
addr16
cmp
cmp
sbb
testb
jp
mov
mov
repnz
dec
mov
cli
mov
popa
stos
fsubl
out
jp
push
mov
xchg
push
xchg
inc
lcall
movsb
mov
pop
repz
addr16
xchg
inc
es
ret
inc
pop
pop
leave
adc
xor
sbb
imull
mov
adc
data16
rcr
cmp
sub
sub
sbb
outsb
mov
pop
repnz
into
stos
ret
xor
xchg
adc
movsb
mov
imulb
movsl
pop
lahf
incb
mov
push
icebp
and
mov
xchg
sbb
mov
daa
push
lock
das
hlt
in
push
fidivl
sbb
out
mov
pop
les
aas
pop
sahf
lret
sarl
adc
sbb
fldenv
sbb
and
xor
mov
jns
xchg
mov
std
dec
dec
push
or
test
cs
test
ret
cmp
mov
rol
pop
dec
push
out
and
push
mov
in
fbld
cmp
and
cmpsl
mov
and
and
inc
add
rol
cmpsb
cmpsb
arpl
rclb
cmpsb
inc
cmp
loope
xor
mov
fsubrl
xlat
inc
test
lock
movsl
add
nop
addr16
mov
mov
test
mov
or
cmc
mov
sbb
pop
adc
sahf
dec
iret
xchg
aam
call
mov
push
gs
or
xchg
les
fldl
xchg
pusha
sub
lcall
xor
clc
fadds
mov
lret
nop
pop
ret
aad
xchg
nop
push
cmp
inc
mov
sbb
int3
out
fadd
add
fbld
lcall
pop
cs
sub
add
mov
ret
adc
mov
jecxz
decl
or
or
mov
inc
mov
ss
sarl
hlt
aas
lret
jo
fisttpll
mov
adc
sub
dec
sbb
and
inc
int3
jno
xchg
jmp
stc
sbb
subl
data16
cmp
nop
test
cmp
psubsb
out
adc
ds
pop
adc
and
loope
inc
jbe
xchg
test
lds
and
mov
or
test
sti
test
cmp
mov
insb
add
adc
xchg
insb
adc
adc
mov
dec
loopne
dec
push
in
or
sub
cld
jno
jbe
jmp
push
xchg
mov
rolb
sarb
pusha
and
aam
pop
inc
cmpsl
xchg
ljmp
orb
sub
test
das
cmp
jne
jae
dec
test
push
mov
iret
cmpsb
pop
je
ss
in
aaa
rcrl
mov
push
fcompp
cmpl
mov
imul
jmp
ss
push
ret
and
mov
aaa
xchg
loope
jg
stc
into
dec
jl
jecxz
or
dec
add
shrl
inc
mov
and
push
cmp
lock
pop
pusha
popf
fsubp
test
inc
jne
mul
in
sub
pop
fstpl
jge
sub
or
adc
test
sbb
xor
xchg
hlt
cwtl
ret
lret
xchg
insb
sbb
sbb
fcmovnu
push
inc
out
adc
sbb
and
cmc
dec
mov
lods
ss
jg
fcmovnu
adc
cmp
ljmp
mov
xor
adc
jl
and
lahf
inc
jle
mov
aad
mov
repnz
cwtl
xchg
test
add
and
int
cmp
and
push
push
push
adc
push
xor
fldl
and
outsl
and
xor
jnp
loopne
psrlw
clc
daa
leave
nop
scas
push
test
xchg
jns
push
mov
loopne
stos
xor
lahf
jle
cmc
or
lods
in
sbb
aam
inc
lock
inc
xchg
mov
lds
jl
insl
mov
xchg
inc
fwait
mov
mov
lock
out
pusha
xlat
add
test
push
sub
xlat
push
xor
cld
pop
fldt
mov
jmp
data16
jmp
and
mov
fildl
dec
stos
xor
push
sbb
outsl
test
xor
je
or
test
adc
xchg
mov
dec
xor
faddl
cmpsl
sub
mov
push
lds
and
scas
mov
push
fstps
inc
xor
jbe
cmpsl
mov
sbb
push
inc
or
inc
mov
lret
sub
orl
outsb
and
xchg
xchg
jns
or
scas
jl
xchg
push
in
jb
mov
js
push
xchg
or
loopne
add
jo
sub
shrb
mov
xor
sub
icebp
mov
jb
or
xchg
cmp
aas
push
popf
jg
mov
sub
fstpt
push
push
nop
call
cld
data16
fcomps
inc
insl
push
cmp
xor
xor
insb
pop
cs
fwait
mov
outsl
mov
bound
cmovnp
push
lahf
inc
test
push
jle
shll
in
cmpsl
mov
imul
int3
xchg
mov
pop
mov
aas
insl
dec
xchg
icebp
adc
xchg
sbb
andl
xchg
std
ret
and
jae
cmp
mov
mov
dec
cmp
insb
mov
pop
ret
cmpb
vprotq
stc
adc
pop
mov
test
adc
jp
dec
mov
xchg
bound
cltd
in
push
adc
push
mov
mov
ficomps
ret
inc
cld
mov
pop
sahf
movsl
sub
enter
pop
or
in
push
insl
das
or
orb
outsl
aas
sbb
in
inc
mov
lock
int
adc
int3
jmp
pop
loopne
jb
push
mov
push
pop
adc
test
stos
loop
push
jo
mov
pop
xlat
addl
or
add
mov
inc
push
xor
dec
push
cld
pop
ja
enter
sbb
add
imul
inc
dec
cmp
dec
pop
out
mov
push
jb
pminub
adc
pop
add
dec
notb
cmpb
mov
mov
mov
jge
mov
hlt
inc
sub
jmp
gs
add
int3
cwtl
out
and
pop
enter
xchg
jnp
leave
adc
mov
mov
pop
sub
fsubr
pop
repz
icebp
push
xchg
adc
repz
jg
mov
pop
or
inc
ret
adcb
imul
out
xlat
add
aas
roll
sahf
sub
sub
repz
outsl
clc
lods
inc
cmp
cmp
xchg
cs
and
cmp
out
cmp
dec
pop
cwtl
xor
mov
imul
aam
fimull
xchg
sub
andl
test
aad
ret
mov
mov
daa
mov
sti
stos
adc
xchg
xor
mov
outsl
out
leave
aaa
flds
sub
add
or
sub
out
movsb
push
mov
bound
clc
jp
adc
int
or
jnp
lret
fidivrs
mov
inc
stos
mov
imull
sahf
sub
inc
push
les
movsb
jge
pop
add
adc
xor
rcrl
mov
add
ss
cmp
stos
inc
xor
mov
in
aam
mov
sbb
xlat
lret
mov
hlt
nop
pop
movsl
jnp
inc
aad
push
stos
push
push
mov
fimuls
hlt
lea
push
les
rolb
stos
arpl
ficoms
sbb
arpl
es
pop
xchg
cmp
int3
ljmp
addb
rcll
push
mov
cmc
jb
xchg
adc
mov
fxch
jge
jne
int3
mov
ret
rcr
adc
mov
or
push
int3
mov
adc
test
jl
decb
sahf
je
shll
xor
das
lret
lea
clc
adc
mov
les
loop
pop
push
jecxz
loop
das
stos
rcl
mov
push
outsb
stc
hlt
jp
push
rorb
lds
es
nop
inc
pop
pop
lret
pushf
xchg
xchg
cmpsl
pop
sbb
mov
xchg
push
xchg
jno
and
in
mov
jnp
jmp
dec
adc
lods
imul
imul
mov
stc
dec
jg
sbb
mov
pop
adc
inc
leave
xlat
int
ret
pop
mov
push
lahf
mov
ret
pop
mov
cmc
pop
push
add
xchg
jns
cmpl
jg
inc
jmp
fildl
inc
shl
and
dec
leave
in
es
mov
sbb
scas
dec
pop
dec
pop
dec
mov
into
fsub
lock
dec
push
sub
testl
jecxz
mov
xor
stc
sbb
popa
sbb
xchg
push
cmpb
fwait
push
clc
loop
dec
pop
xchg
stc
cmp
and
daa
lcall
cmp
mov
in
das
in
cmp
pop
aaa
mov
xchg
mov
mov
imul
daa
sub
pop
push
adc
popf
adc
fildll
pop
dec
call
aaa
push
mov
cli
dec
add
inc
cmp
add
sbb
jbe
jne
xchg
push
orl
mov
xchg
js
loop
ja
imull
loopne
jo
xchg
mov
jno
dec
sbb
sbb
incl
or
clc
incb
fidivrs
cmp
sub
int3
shll
inc
pop
pop
pop
aam
repz
movsl
push
and
xor
jmp
and
mov
scas
mov
lock
pop
mov
adc
outsb
sub
scas
sub
mov
outsl
jns
mov
out
imul
incb
mov
fldl
and
cwtl
loop
xchg
aad
sub
outsb
divb
std
mov
or
pop
mov
inc
jb
rep
movsl
push
daa
cmp
mov
inc
enter
dec
iret
fcoml
stos
popa
push
mov
icebp
xchg
fadd
pop
loopne
mov
les
out
pop
mov
movsl
subb
imul
repz
jmp
test
xchg
and
add
sti
insl
cld
ja
sbb
or
loop
stos
inc
lret
mov
push
pop
in
mov
push
dec
jnp
and
and
cmp
inc
daa
add
cmpsb
mov
and
lret
std
hlt
nop
push
mov
xlat
xor
inc
popf
stos
adc
notb
pop
mov
je
mov
jecxz
mov
xlat
xor
mov
addr16
int3
ror
pop
mov
in
test
vcvtdq2pd
rorb
je
and
out
mov
stc
mov
mov
fcom
mov
inc
daa
push
in
pop
pop
cmp
call
push
les
test
mov
sub
inc
mov
dec
push
subl
je
jb
lds
cs
out
fmull
sbb
jecxz
sbb
pop
shrb
push
mov
xchg
stos
mov
std
push
push
xorl
scas
or
movsb
mov
adc
push
add
fcomp
xchg
mov
add
js
lcall
mov
jae
cmp
mov
fnstsw
pop
xlat
cmp
in
cs
mov
ret
xchg
mov
sub
mov
aam
loop
es
std
sub
inc
sahf
js
cwtl
push
stos
in
sahf
xlat
mov
push
enter
les
lods
daa
mov
out
cmp
pop
xor
sti
pop
pushl
cmc
or
int
lahf
lret
adc
mov
sub
or
test
jnp
sub
pop
inc
aam
push
outsb
insl
aad
mov
pop
loopne
shrb
fsubrs
rcr
mov
sub
mov
jle
and
popa
lahf
xor
dec
add
mov
aas
push
xor
xor
dec
inc
into
mov
add
imul
psrlw
jg
negb
loop
movsb
sub
aad
add
and
int3
mov
push
add
or
shl
adc
cmp
lock
inc
sub
lret
addr16
iret
ffreep
dec
pop
pop
addr16
addr16
es
dec
push
andl
push
push
imull
jns
xlat
cli
into
divb
push
fs
jp
aam
sbb
lcall
add
mov
or
xor
enter
cmp
add
out
test
xchg
xor
adc
dec
clc
cmc
test
xor
push
loopne
pop
inc
insb
lret
jmp
rcr
dec
mov
xor
cmpsl
or
sub
mov
int3
ficompl
inc
enter
dec
out
mov
jbe
out
out
xchg
int
push
sahf
fucomi
movsl
mov
aas
test
pop
test
and
shll
into
ret
repnz
and
push
lods
aam
mov
adc
sub
mov
rorl
nop
sub
dec
subb
out
sbb
sub
enter
add
test
into
jmp
ljmp
jge
sbb
cmp
outsl
sbb
stos
insl
inc
icebp
and
push
arpl
pushf
mov
popf
insb
sbb
dec
out
fldl
push
or
jo
pusha
pop
pop
jl
imul
es
inc
jnp
xor
xchg
rclb
out
hlt
rcrb
insb
imul
jmp
cmc
mov
and
xchg
pop
xchg
sbb
xchg
sbb
scas
or
mov
pop
inc
adc
cs
pop
xor
flds
and
mov
roll
mov
dec
mov
outsb
sub
test
call
cmp
jp
repnz
mov
dec
push
jnp
pop
iret
orb
addb
xchg
repnz
pop
fstpl
inc
cs
es
les
xrelease
mov
mov
andl
neg
mov
pop
nop
stos
xchg
xor
dec
fstl
push
cmp
pop
pop
xchg
push
push
mov
stos
push
leave
dec
mov
fisubrl
push
sbb
aaa
bound
and
iret
cmovl
lods
into
aaa
aad
outsb
repnz
pop
insl
push
das
jmp
scas
inc
mov
rcrb
inc
xchg
ljmp
mov
cld
mov
mov
sub
mov
or
xor
clc
aaa
adc
adc
mov
cmp
orl
push
roll
fnstsw
pop
enter
and
and
push
js
insb
push
clc
daa
ret
jae
loopne
lods
aaa
push
ficomps
adc
dec
icebp
inc
inc
ljmp
test
sub
sub
shll
test
mov
cld
lcall
mov
fwait
in
lea
sbb
out
fidivs
pusha
lea
cli
adc
ds
outsb
nop
rol
notb
icebp
ja
lcall
pcmpeqb
popa
pop
ret
out
pop
ds
lods
sub
jmp
jb,pt
inc
or
add
mov
cmp
and
lods
rcrl
mov
fcompl
pop
rcr
ja
adc
inc
fidivrl
lret
lret
add
fdivr
sub
adc
lret
cmc
sub
dec
mov
leave
cmpb
pop
sarb
lods
mov
lock
test
fidivs
dec
fcoml
mov
fisttpl
je
xor
sbb
adc
or
es
ret
mov
jl
sbb
push
clc
sbb
in
es
cltd
xor
in
daa
pop
dec
cltd
icebp
push
inc
pop
pop
int
cmc
cmp
jmp
adc
adc
in
mov
pop
and
addl
xchg
mov
add
inc
loope
shll
pop
js
push
aad
cld
adcb
pushf
lea
add
dec
adc
testb
mov
cmp
iret
cmp
mov
push
mov
fldenv
push
xchg
sub
mov
sbb
sub
xor
xchg
sub
xchg
addr16
les
lods
and
and
cmpsb
push
push
mov
push
test
arpl
mov
and
sub
xchg
ds
push
sbb
and
push
sarl
arpl
test
sbb
ret
sub
mov
and
mov
jge
sbbb
fwait
adcb
fsubr
xor
mov
mov
sbb
push
push
xor
mov
adc
push
insl
sub
scas
cvtps2pd
cmp
cs
scas
mov
popa
dec
out
add
dec
or
mov
sub
je
jmp
iret
test
add
fdivs
aam
and
lods
std
sub
cmp
inc
cs
rcrb
xchg
imul
adc
mov
cs
mov
ret
popf
xchg
pop
lds
lcall
lods
sub
and
repz
je
add
mov
mov
es
dec
test
cli
imull
pop
jp
adc
adc
and
loop
pop
mov
jb
lahf
jg
repnz
call
das
pop
mov
xchg
out
lret
int3
sub
imul
fwait
insl
sbb
ror
test
mov
xchg
push
push
test
out
into
mov
loop
xchg
and
jl
inc
push
sahf
jge
aad
sti
push
mov
jmp
pushf
mov
mov
dec
fs
mov
shl
je
inc
adc
pop
out
push
fnstcw
mov
scas
movsb
cmp
pop
mov
call
sahf
gs
aas
ss
and
clc
mov
mov
in
out
pop
cmp
aas
out
imul
xchg
orb
hlt
lret
inc
mov
dec
jns
inc
movsl
aad
jg
jne
xor
test
mov
push
gs
call
imul
mov
imul
bound
jns
neg
leave
push
repz
lret
aad
dec
call
rcl
adc
push
xor
push
push
mov
je
cmc
jb
mov
sarb
lds
enter
sub
outsb
inc
xor
push
lahf
out
add
testb
add
xlat
repz
cmpsb
pop
xor
jno
fistps
loope
xchg
xchg
gs
pusha
mov
call
xchg
ret
aad
inc
gs
test
pop
nop/reserved
add
nop
mulb
fsubrs
out
fs
loop
fcoml
addr16
or
push
lahf
cmp
mov
in
mov
sbb
cmc
fsts
or
call
add
and
fs
xchg
and
mov
inc
fiaddl
cmp
popf
les
insl
cs
in
daa
clc
jae
push
push
mov
cs
repnz
push
cli
adc
insb
sbb
mov
aam
push
or
xchg
adc
stos
sbb
aam
mov
sub
les
in
sbb
stc
loopne
xchg
cmp
pushf
push
pop
xor
mov
inc
lock
push
in
fistpl
push
dec
addr16
xchg
inc
dec
test
out
shll
into
sbb
xlat
dec
clc
das
imul
stc
lods
xchg
push
jecxz
jno
out
dec
jbe
jle
dec
push
sbb
jb
dec
pop
mov
dec
jecxz
cld
lods
adc
sub
daa
adc
lods
push
fldl
outsb
cmp
pop
mov
push
xor
fldl
push
add
testb
xor
pusha
enter
and
insb
jg
pop
test
pop
jp
mov
ja
data16
in
dec
push
push
add
hlt
and
aad
push
mov
bound
mov
xchg
mov
scas
lret
inc
sbb
xchg
repnz
sub
mov
push
lods
pop
fwait
test
pop
mov
cmp
mov
xlat
mov
pop
push
lods
add
je
outsb
push
sti
and
andb
imul
enter
sub
sti
out
out
mov
mov
mov
je
mov
mov
fcomps
icebp
pushf
aaa
dec
mov
sub
div
icebp
repz
scas
ja
cmp
cli
fisttpll
inc
inc
fs
fiaddl
lods
jmp
lret
incb
mov
push
imul
scas
aam
jnp
dec
addl
shll
xlat
outsb
add
dec
dec
loopne
mov
pop
add
mov
data16
in
int3
jbe
fstps
pop
lcall
into
testl
mov
push
dec
mov
xchg
mov
shll
inc
ljmp
fxch
addb
mov
cwtl
rol
pop
dec
push
insl
in
xor
jp
inc
push
jne
icebp
cmp
xlat
lds
mov
pop
inc
subb
and
and
jmp
add
push
push
mov
inc
pop
sub
push
or
imul
sub
pushf
nop
xor
xchg
xlat
pop
daa
pop
lds
dec
push
test
push
cmpsl
and
xchg
inc
pop
leave
pusha
push
sub
or
pop
imul
jns
popf
aaa
std
jno
addl
test
mov
dec
enter
into
sub
jmp
mov
ja
leave
int3
sbb
pop
push
rorl
movsl
daa
fnsave
inc
mov
cmpsb
cmp
jb
xor
pop
xchg
in
ffree
fwait
mov
inc
pop
andb
dec
mov
arpl
je
pop
lods
lret
mov
cmc
adc
jmp
out
rolb
in
mov
jmp
in
and
xor
es
out
push
mov
cmc
ret
jne
daa
mov
test
mov
mov
fidivl
in
push
scas
push
enter
adc
sbb
mov
scas
sbb
pop
push
xchg
daa
adc
adc
imul
das
mov
xchg
add
cld
mov
cmp
cwtl
in
es
mov
cltd
mov
ss
iret
aam
test
mov
mov
mov
inc
cmc
push
cmp
js
sub
cmp
jns
adc
cmpl
xor
adc
push
xor
enter
adc
mov
push
push
addr16
nop
mov
mov
and
sbb
pop
addr16
cmp
mov
fildll
xchg
sub
daa
outsl
and
adc
xor
cmc
mov
mov
xchg
sub
pop
adc
jae
mov
jmp
cmp
ljmp
cli
push
mov
mov
stc
jno
dec
adc
inc
mov
xchg
add
mov
jg
sub
dec
jg
xchg
push
xchg
add
lret
decl
adc
es
mov
adc
adc
xor
test
jp
inc
in
sbb
rclb
push
sbb
in
cwtl
into
sbbl
call
mov
pop
adc
pop
mul
cmp
adc
cs
sarl
xlat
inc
jecxz
xchg
jo
lret
mov
mov
lcall
and
sbb
mov
add
jmp
push
jmp
mov
add
adc
push
mov
push
aam
roll
lods
dec
adc
mov
xor
dec
pushf
mov
adc
sub
pop
jns
mov
mov
mov
push
enter
pop
pop
cwtl
lods
xchg
gs
popa
xor
out
ret
dec
int
or
mov
roll
push
repz
push
xchg
pop
jns
scas
jbe
mov
or
inc
mov
cs
data16
or
mov
data16
mov
add
sbb
and
loopne
iret
sbb
in
mov
inc
outsb
popa
and
repnz
add
add
ds
pop
xor
lods
aam
data16
lds
addr16
ds
push
xor
std
push
lods
sbb
cmp
imul
mov
push
inc
sahf
pop
into
dec
and
mov
dec
test
mov
sbb
loopne
rcll
mov
push
xchg
sbb
cmp
aam
mov
cmc
popa
in
dec
dec
fisttpll
push
or
in
pop
test
mul
inc
jnp
and
sbb
sbb
xor
pop
lds
nop
jnp
pop
std
ja
in
sbb
push
les
aaa
xor
mov
dec
xchg
je
loopne
int3
fimuls
dec
rcr
xor
leave
rcrb
test
pop
jbe
decb
fcomi
lea
ds
pushw
jb
mov
xchg
outsl
stos
imul
out
lahf
sti
ss
cltd
pop
adcl
pop
adc
inc
leave
xchg
clc
xchg
cmp
enter
popf
fldcw
ret
dec
test
das
xchg
testl
push
shll
jle
inc
outsl
enter
std
popf
ret
and
adc
mov
fcmovne
popf
add
fsubs
jns
fnstcw
mov
cltd
or
mov
cmp
cmpsb
sub
mov
sub
cwtl
and
xor
iret
xchg
rcrl
sbb
mov
cmpsl
lock
popf
cmp
xor
ds
jmp
mov
lret
lahf
cmpsb
mov
imul
mov
fwait
lea
pop
adc
ss
adc
inc
popf
dec
or
stc
mov
jmp
lret
jo
gs
pusha
mov
mov
inc
cli
add
xchg
xchg
inc
jecxz
cmpps
les
inc
test
subb
mov
add
adc
adc
repnz
inc
sbb
inc
shll
jae
out
xchg
insl
stos
mov
ds
gs
xchg
fwait
push
aad
sarb
lret
pushf
dec
fs
mov
mov
xor
mov
push
pushf
fisttps
mov
popl
das
xlat
ss
sub
cmp
add
pop
sbb
fistpl
aam
xchg
mov
mov
pop
shlb
sub
call
mov
pop
aaa
mov
sbb
into
cmp
or
jb
cmc
xchg
shrb
jb
and
push
xor
clc
callw
jl
inc
cmp
mov
or
mov
mov
mov
fmuls
jno
ficoms
jge
mov
fs
sbb
mov
lea
cld
popa
push
and
or
je
push
shlb
jp
test
outsl
int
call
mov
or
les
stos
pusha
add
lock
iret
cs
xchg
xor
jne
fnstcw
fdivrl
rclb
idivl
bound
arpl
push
mov
ret
push
orl
fadd
xlat
sub
mov
sbb
mov
jae
and
jl
inc
out
jg
addr16
sbb
inc
dec
mov
cltd
cmp
ss
jle
adc
ss
fs
lcall
pusha
out
cs
mov
notl
in
in
or
loopne
dec
clc
and
or
mov
adc
lea
xor
shll
lret
out
xchg
fwait
outsl
ja
in
pusha
or
mov
aad
daa
mov
fs
sarl
mov
sti
or
int3
add
scas
aaa
shlb
push
pop
in
push
fnstsw
mov
sub
dec
cmpsb
out
and
lock
aaa
sub
fists
addr16
cmc
adc
cmp
outsb
cli
lcall
or
repnz
nop
mov
pop
jle
mov
sbb
loop
fcmovnbe
push
inc
lcall
xor
push
sub
cmpsb
faddp
pop
or
outsl
stos
pop
jmp
movsl
mov
inc
cmp
mov
into
daa
mov
mov
mov
and
popf
divl
mov
mov
pop
cld
aaa
testl
xchg
dec
pop
cli
sbb
push
mov
push
jl
pushf
dec
push
cmpsb
mov
adc
inc
xor
les
pop
mov
aas
fisubrl
inc
fwait
lret
mov
mov
push
pushf
jbe
jmp
lahf
test
push
negl
xchg
fs
dec
xchg
pop
push
push
call
enter
mov
push
xor
xchg
mov
mov
lea
or
cmpsb
mov
pop
cwtl
sbb
adc
pop
aaa
mov
adc
push
mov
or
and
push
fadd
pop
mov
and
stos
add
int
push
push
loop
push
iret
and
dec
dec
sbb
mov
jge
into
jno
insb
nop
cmpl
repnz
push
or
test
or
adc
sbb
mov
loope
mov
andl
mov
or
test
xchg
lcall
int3
hlt
shll
mov
int
iret
popa
add
dec
dec
sub
or
lcall
das
fwait
dec
push
pop
decl
xchg
aad
xchg
aam
and
in
ss
insl
add
dec
jbe
rcll
add
sub
in
notb
popa
pop
leave
cmp
xchg
jb
dec
inc
fsts
dec
out
fs
leave
sub
loop
jns
dec
xchg
fstl
es
add
repnz
jbe
aad
lods
test
jne
movsl
inc
inc
mov
bound
and
mov
xchg
dec
and
add
fldt
fmull
and
adc
daa
dec
or
mov
lahf
repnz
jo
and
mov
sub
mov
daa
out
dec
jecxz
mov
push
or
ljmp
fistpll
outsb
dec
xor
pop
dec
out
out
push
movsl
ds
insl
repnz
lods
hlt
jl
mov
popa
ror
cmp
xchg
pop
mov
fisttpll
out
fidivrl
xchg
aaa
jle
fs
std
pusha
out
fcmovu
dec
add
in
insl
pop
and
pop
fidivrs
sub
inc
mov
dec
adc
test
cmpsl
push
call
sbb
adc
icebp
adc
mov
sbb
mov
push
jbe
mov
push
jb
xchg
push
test
mov
mov
movsl
rcrb
inc
mov
pop
mov
sbb
ss
fiadds
cmp
loopne
adc
xchg
dec
xor
hlt
xor
imul
cmc
out
add
mov
bnd
adc
insb
insb
pop
adc
sarl
dec
outsb
aad
lods
sub
jnp
sub
in
fstpt
fs
lcall
popf
push
xor
or
cwtl
cmpsb
flds
jo
jge
sarl
lret
mov
or
pop
mov
outsb
movsl
inc
dec
cmp
rcll
mov
movsl
ljmpw
and
cmp
ds
dec
or
push
push
dec
pop
fwait
insb
push
and
jno
dec
or
gs
xor
xchg
aas
jbe
daa
popa
jb
stos
jns
lods
inc
adc
push
inc
inc
jge
and
xchg
add
dec
mul
xlat
daa
xor
shl
stos
xchg
mov
pop
or
cmpsl
flds
repz
nop
imul
jmp
add
push
pushf
push
mov
add
lods
mov
cmp
mov
and
jb
mov
mov
orl
push
lahf
add
call
inc
outsl
mov
test
jmp
dec
sub
outsl
pop
insl
lahf
jo
inc
sub
in
jle
mov
outsl
mov
and
mov
cmp
cmp
scas
jle
ds
pop
fcmovbe
dec
lods
pusha
sar
mov
lock
jo
fstl
adc
adc
dec
pop
pop
xor
jmp
int3
lock
cmc
subl
cmpsl
push
je
cmp
scas
gs
aas
cmp
inc
std
ss
and
test
pusha
adc
mov
xchg
cmpsb
mov
mov
jp
in
or
pop
rcrl
jae
dec
mov
popf
xlat
mov
repz
pop
clc
xor
or
stos
stc
pushf
scas
mov
jp
sti
sbb
dec
push
jg
out
std
or
and
dec
sub
fidivs
dec
shrb
add
sub
pop
mov
xchg
cmp
sar
lock
and
add
outsb
lds
xor
mov
jle
or
push
test
push
into
les
int
les
andl
into
jp
lds
int
jg
rcll
and
cmp
xchg
adc
lock
inc
mov
daa
jl
push
js
sub
ret
lcall
mov
cs
sub
push
inc
and
inc
popf
rorb
ss
ficomps
addr16
lret
or
jmp
sbb
mov
out
arpl
mov
push
mov
ret
push
sbbl
inc
icebp
lods
mov
mov
jg
sub
push
shlb
nop
pusha
dec
mov
rorl
int3
aad
test
es
ljmp
cmp
cmp
mov
xchg
pop
out
xchg
shll
mov
clc
movsb
out
push
xchg
mov
sbb
mov
mov
stos
jl
and
clc
dec
jl
ret
push
sahf
and
push
dec
jno
in
ss
repnz
pusha
fwait
mov
movsl
dec
fisttps
shll
clc
hlt
mov
push
add
mov
std
cmp
dec
push
das
inc
dec
inc
cltd
or
mov
sub
and
adc
js
hlt
das
inc
fldcw
mov
testb
and
push
jbe
dec
loopne
xchg
das
mov
arpl
add
mov
jno
dec
stc
sbb
mov
outsb
mov
cmp
test
cmp
jbe
jl
daa
xor
dec
cmovg
cltd
pop
pop
lahf
mov
push
lret
dec
fsubs
inc
sub
les
gs
dec
sahf
and
mov
sub
out
sub
mov
mov
mov
dec
cmp
mov
and
xlat
jbe
mov
and
leave
push
or
popa
adc
push
cld
stos
mov
je
mov
cltd
inc
jg
cmpsb
dec
pop
inc
cmp
jbe
pop
mov
or
xorb
lds
push
jmp
addr16
xchg
cld
aaa
lea
ds
add
push
jns
mov
inc
sbb
mov
lret
mov
fs
cld
xchg
insl
lret
lahf
out
jmp
pop
in
xchg
adc
push
sub
jmp
in
or
sub
mov
mov
lcall
lret
mov
popl
test
mov
inc
fbld
test
arpl
pop
xor
push
inc
dec
repz
xorl
imul
xor
rorl
loope
mov
leave
scas
pop
fadds
and
leave
rcll
push
adc
jb
push
scas
fisubs
jnp
adc
rclb
and
mov
jbe
cmp
mov
push
pop
pushf
mov
mov
test
addr16
outsb
lret
je
sub
stos
push
and
jp
movntps
cmp
adc
xchg
mov
cli
or
aaa
xchg
xlat
pop
xchg
dec
adc
pop
jnp
cmc
jmp
loopne
pop
rolb
stos
fidivs
mov
enter
cli
inc
out
mov
jmp
push
xchg
mov
pop
pop
lods
icebp
lcall
pop
shlb
or
lahf
loop
jl
cmpsb
xor
repz
cmc
lds
push
jg
sub
rcrb
jo
fdivs
jecxz
or
je
push
das
fs
das
xlat
out
test
jns
add
int
or
mov
cltd
mov
mov
or
out
scas
repnz
dec
ds
in
jl
jae
jecxz
ljmp
jge
repz
decl
testl
clc
lods
sub
ficomps
cwtl
jg
rorl
adc
mov
inc
add
sbbb
xchg
mov
leave
jnp
adc
push
xorl
mov
sbb
push
mov
stc
jmp
out
fcomps
push
inc
icebp
adc
pop
shrb
jg
or
into
push
fdivl
lret
js
ljmp
loop
gs
mov
scas
ret
push
divl
fdivrp
in
sub
add
xchg
inc
cmp
mov
mov
out
hlt
adc
cmc
mov
pop
xchg
xchg
ss
mov
and
les
mov
mov
lret
aas
into
xchg
inc
in
or
lret
test
cwtl
pop
lret
mov
scas
adcb
xchg
sbb
mov
jnp
jbe
push
pop
jl
lahf
fildl
cmpsl
inc
lock
loope
add
loope
ret
mov
popa
testb
xchg
push
inc
outsl
call
repnz
rcr
ss
ss
xchg
fidivrs
pop
movsb
inc
mov
push
nop
inc
aaa
ret
cmpsl
in
aas
lea
inc
leave
dec
adc
pop
and
mov
lcall
aaa
clc
sub
jge
sar
adc
adc
and
in
jg
pusha
mov
cmp
sbb
negb
add
scas
addr16
pop
pop
xchg
imul
out
sub
add
mov
movsl
or
xor
mov
sbbl
rcrl
jl
inc
addr16
adc
cltd
cs
xchg
cltd
imul
sbb
hlt
inc
mov
decb
xor
aaa
push
cwtl
xchg
push
sbb
adc
pcmpeqd
movsb
dec
into
repz
jb
outsb
mov
fs
mov
mov
icebp
leave
addr16
fdivrs
int3
sbb
push
mov
xor
add
sti
dec
dec
xchg
loope
xchg
add
push
jae
or
vandps
in
or
xchg
pop
adc
pop
in
loope
mov
inc
mov
jmp
inc
adc
fdiv
fistpll
data16
xchg
inc
mov
test
jb
xor
imul
add
mov
lock
pop
fiaddl
cmp
scas
fistps
pop
cmpsl
fsubr
adc
jo
pusha
adc
mov
mov
outsl
inc
testl
loop
sbb
push
mov
loopne
addr16
lds
ss
pop
xchg
lea
in
cwtl
xor
xor
xor
out
aad
push
adc
pop
outsl
es
xor
dec
leave
jne
fs
xor
add
add
pop
adcl
rclb
jp
push
fmull
pop
xor
mulb
inc
sbbb
push
or
cli
aaa
add
mov
shll
jmp
push
test
xor
mov
imul
mov
in
je
push
in
pop
ret
int
popa
orl
xchg
cmp
lahf
shrb
loop
loop
cmp
mov
pop
popa
mov
fucomi
test
mov
add
mov
mov
lea
xchg
sbb
push
mov
in
pop
pop
pop
stc
or
jg
ret
divb
jb
dec
mov
aaa
pop
js
in
adc
dec
js
ret
push
jae
imull
pop
pop
loop
ficoml
pop
sahf
mov
ljmp
movsb
dec
push
jp
sbb
and
pop
scas
mov
mov
cmp
or
fldt
inc
cli
add
pop
ja
out
movsl
adc
call
test
push
mov
jns
leave
lahf
outsl
and
dec
xchg
xchg
jae
adc
push
sub
mov
gs
push
xchg
and
jp
xchg
cs
push
xchg
out
flds
outsl
xchg
xchg
in
mov
dec
mov
ret
cmp
imul
sbb
hlt
sahf
mov
cmp
into
aam
cmp
pop
xor
mov
xchg
stos
pop
daa
jne
fcomps
jg,pn
loopne
ds
jmp
adc
pusha
movsb
xor
xchg
dec
push
adc
xchg
and
inc
push
adc
mov
dec
sbb
mov
test
inc
imul
cmc
repz
mov
stos
and
aas
xchg
es
stos
mov
imul
pop
ret
push
je
adc
je
jg
cwtl
adcb
fs
adcl
out
xor
jl
jno
sbb
jb
jae
mov
pop
push
popf
sub
adc
insl
repnz
xor
out
cmp
pop
lods
jb
inc
pop
mov
pop
loope
ret
lcall
cltd
cmp
lds
mov
imulb
pop
adc
add
insl
out
mov
dec
mov
and
ret
cmp
or
into
mov
int3
inc
jecxz
push
fwait
jl
jo
xor
adc
fadds
dec
in
pop
and
outsb
or
in
popa
imul
jle
and
in
mov
mov
rorb
push
cld
jae
push
sbb
daa
jo
inc
fs
adc
sub
fs
mov
cmp
jmp
aad
sti
les
test
xor
lret
adc
ret
dec
loop
xchg
cld
and
push
inc
fbstp
cmp
inc
add
or
lea
lret
mov
jo
cmp
push
pop
sbb
mov
out
in
xor
hlt
call
xor
fs
mov
cmc
add
mov
mov
mov
mov
loop
push
mov
sarl
jge
or
pop
push
sarl
mov
adc
cvttps2pi
pop
inc
xchg
xchg
push
mov
ficomps
fidivrs
rcll
push
pop
repnz
lea
cli
mov
adc
cli
add
add
pop
nop
mov
push
inc
fiaddl
or
fnstsw
mov
pop
and
pop
jno
into
out
jmp
push
mov
jbe
pop
mov
sarl
sub
aad
imul
data16
std
sub
int3
pop
cmp
push
pop
xor
sub
iret
or
incl
pop
mov
or
aam
sti
or
incb
add
and
sbb
mov
cmc
negl
stos
add
pop
lret
lods
movl
jb
movsl
imul
and
xchg
pop
pop
ret
mov
fisttps
cmp
sbb
bound
and
fisubs
arpl
cmp
jae
inc
pop
popf
dec
pop
inc
insb
mov
mov
push
sbb
insl
xchg
xor
loop
jno
sarl
rcll
sub
add
jbe
pop
jle
or
adcl
fisubs
mov
fcmovu
ss
mov
sub
aaa
aas
addr16
inc
xor
test
jge
add
mov
or
add
fstps
pop
into
outsl
sbb
sub
ficompl
int
lods
dec
and
stos
fcomip
mov
popa
jmp
out
pop
and
xchg
adc
test
rolb
or
or
mov
inc
rcl
lret
out
jmp
adc
dec
lods
adc
test
jp
andb
dec
push
in
dec
and
push
xchg
mov
dec
and
gs
push
lock
xor
test
dec
pop
push
decl
mov
icebp
pop
aad
add
mov
aaa
jmp
pop
push
sub
pop
das
mov
loopne
shrl
imul
sbb
cwtl
enter
push
movsl
pop
sbb
dec
and
je
inc
into
lret
push
loope
lds
mov
fwait
pop
jns
xchg
sub
or
xor
mov
pop
mov
cmpsl
outsb
lahf
xchg
mov
jo
pop
pop
adc
pushf
add
sti
mov
nop
jnp
xchg
or
xchg
sub
push
into
xchg
jbe
repnz
push
iret
lcall
push
inc
inc
mov
test
inc
add
adc
sbb
imul
xchg
or
lods
pushl
or
repz
dec
call
mov
or
adc
jmp
xchg
adc
pop
call
push
int3
jle
loop
mov
test
adc
stos
sbb
outsl
mov
sub
repz
push
bound
cmc
cwtl
pop
and
mov
cltd
fcomp
xor
jmp
xorb
cld
xchg
fnstsw
xchg
push
outsl
stos
sbb
jne
rcll
in
pop
fwait
cltd
inc
add
mov
stos
in
inc
jl
and
ja
sbbb
jg
je
jns
arpl
add
jb
jo
sub
test
aam
add
in
test
in
rorl
sbb
sbb
fistps
push
inc
sub
leave
arpl
mov
and
push
pusha
jecxz
ficoms
xor
xchg
pusha
leave
scas
push
cld
lahf
stc
push
push
and
jmp
push
stc
pop
aam
sbb
jle
cli
daa
push
mov
push
xor
ja
xchg
int3
and
add
cmp
sub
rcrb
xchg
movsl
and
test
fsubrs
pop
and
sub
jle
sbb
pop
pop
mov
negl
int3
idivb
stc
pop
sub
out
jl
cltd
cmp
clc
aad
or
mov
jecxz
jmp
je
js
jp
cld
enter
lahf
int3
mov
leave
pop
lods
mov
mov
sub
bnd
rorl
xor
iret
jno
sbb
sbb
adc
xchg
repz
std
cs
cmpb
adc
jne
outsl
cmpsl
jge
and
jg
ds
xlat
and
cmc
mov
pop
mov
jge
cmp
push
imul
cmp
pushf
sub
movsb
push
mov
cmc
lods
add
in
fildll
adc
xchg
jbe
push
mov
mov
xorb
sbb
lods
scas
mov
add
lods
jnp
movsl
pop
insl
sub
inc
movsb
jo
lahf
repnz
test
imul
jg
ficompl
ljmp
jae
bound
inc
push
sbb
adc
test
xchg
enter
xchg
in
test
inc
adc
bound
int
fmuls
push
and
enter
es
pop
mov
addr16
jge
stos
out
roll
xchg
outsb
in
pop
or
jns
mov
xor
add
imull
jbe
fisubrl
mov
push
test
xchg
iret
dec
or
lret
adc
rol
and
or
mov
sub
pop
sbb
cli
add
push
jmp
mov
clc
mov
and
mov
add
sub
fsts
aaa
mov
mov
cmc
dec
aad
outsb
int
mov
xorl
test
insb
fistpll
sbb
cmp
jb
pusha
mov
mov
jmp
call
stc
push
ret
or
out
out
and
push
adc
ja
lahf
inc
pop
ljmp
cwtl
mov
repz
out
add
lahf
add
addr16
push
ja
push
clc
add
jg
sbbl
loop
pop
cmp
jns
out
mov
out
subps
gs
xchg
ret
or
int
jmp
pop
loopne
mov
stc
cmc
in
xchg
movsl
sbbb
pop
decl
mov
and
jp
dec
repnz
lcall
in
adcb
adc
ds
pop
scas
fisttpll
xchg
pop
push
push
inc
jb
mov
xor
out
xchg
ret
nop
jp
js
jl
mov
sahf
ret
jbe
push
stos
clc
cmp
ret
jne
pop
bswap
dec
push
add
test
lods
and
jg
cmp
test
sub
lahf
lret
ret
arpl
cmp
sub
dec
shlb
mov
int
test
jmp
add
or
mov
or
dec
push
testb
cmpsl
adc
loopne
sbb
add
cmp
jns
pop
pop
imul
cmp
jp
xchg
xorl
mov
addr16
push
rcr
mov
pop
ljmp
testl
pop
add
xchg
cmp
int
inc
into
fwait
shrl
bound
clc
mov
or
loope
sahf
daa
jo
aam
sahf
mov
mov
push
call
xchg
adc
jbe
inc
sbb
fcmovnbe
es
lret
sti
sbb
fs
pop
mov
dec
ja
js
xor
or
mov
xor
xchg
dec
adc
nop
es
in
test
jecxz
or
xor
mov
je
rorl
inc
loope
cmp
push
push
jno
das
imul
fcoml
pop
mov
lods
dec
xchg
mov
sti
leave
sahf
test
lds
pop
mov
mov
and
jno
test
mul
mov
mov
xchg
push
fnsave
fdiv
insb
pcmpgtw
nop
lods
add
mov
scas
xchg
mov
testl
negb
clc
and
stos
test
pop
mov
add
outsl
xchg
mov
cmp
push
aaa
pop
movsl
sbb
push
cmpsl
xchg
cltd
mov
and
or
pop
push
daa
test
xchg
pushf
popf
dec
icebp
faddl
xchg
lods
cmc
push
push
add
sub
pop
mov
mov
sub
xchg
dec
push
lret
lret
loopne
lods
daa
data16
mov
xor
add
mov
jp
inc
lock
mov
je
mov
and
xor
mov
and
cmp
mov
int3
xrelease
mov
int
shrb
dec
or
popa
in
daa
push
fistl
lods
insb
orb
xor
sbb
or
movsl
jmp
test
xor
adc
xchg
jg
mov
out
test
test
adc
jo
add
cmp
out
xor
das
add
inc
sub
sbb
insb
ljmp
inc
sub
loop
add
pushw
and
outsl
lcall
icebp
dec
inc
movsl
subb
outsl
aaa
mov
dec
push
mov
iret
enter
iretw
pop
in
cmpsl
test
cmpsl
xor
sbb
xlat
sub
out
and
xchg
je
push
inc
aas
adc
pop
jbe
cmp
push
inc
jo
popa
cmpsl
sub
inc
insl
jnp
pop
push
xchg
push
mov
pop
test
and
nop
or
mov
popf
cltd
dec
clc
sub
test
mov
mov
lret
fdivr
inc
fstpt
es
insb
icebp
mov
xchg
loopne
mov
rclb
jae
cmpsb
repz
xchg
jmp
mov
fstps
ror
loope
lods
jle
and
cmpsb
loope
mov
pop
lahf
dec
sub
cwtl
mov
inc
xor
mov
mov
pop
jbe
mov
jns
out
jb
jne
imul
push
jns
sti
xchg
push
jno
out
rcrl
jp
loop
mov
test
inc
push
fidivs
in
popf
add
pop
out
xchg
or
and
jge
mov
call
pop
xor
cltd
iret
ljmp
popf
mov
addl
jl
push
stos
popa
scas
mov
adc
xchg
in
js
and
call
movsl
test
cs
ret
and
cmp
es
popf
fnstenv
pop
lds
imul
pop
or
scas
push
addr16
push
push
js
mov
fisttps
mov
add
jmp
xor
cmp
mov
mov
fwait
ret
popf
push
aad
les
ja
les
xchg
pop
loop
mov
shll
inc
iret
mov
pop
mov
leave
fnsave
addb
mov
out
xor
arpl
sub
cmp
pop
lds
fisubs
add
mov
push
inc
xchg
mov
push
aam
push
or
and
repz
ljmp
es
lret
jle
push
adcb
adc
repz
bound
cmp
cmpsl
adc
cmp
fnstenv
push
jns
sbb
das
sbb
out
aaa
jmp
int
in
sub
ror
push
data16
fucomp
xlat
pusha
mov
psadbw
cmpsb
push
cmc
scas
add
pop
mov
sti
cli
mov
mov
and
xlat
dec
xor
cmpsl
scas
mov
adc
mov
das
outsl
push
stos
dec
pop
or
sbb
mov
add
addr16
push
inc
nop
arpl
dec
push
adc
dec
mov
mov
scas
cltd
or
ret
or
enter
or
jnp
adc
push
sub
test
mov
push
hlt
pop
jae
mov
or
fsubl
sbb
cwtl
js
xorl
ljmp
roll
mov
or
fdivrs
dec
cmp
ss
sub
jge
movb
push
sti
dec
cltd
les
inc
popa
jp
jle
ret
add
inc
sbb
sub
fcoml
fsubrl
dec
sti
mov
add
loopne
adc
mov
push
mov
cmpsb
ret
lock
lock
or
popf
outsb
clc
lock
mov
mov
and
inc
ficomps
dec
popa
add
dec
sub
mov
sub
fildll
lret
shll
xchg
inc
movl
js
xchg
int3
mov
xlat
xchg
das
pop
les
pop
dec
mov
daa
inc
movsl
sbb
mov
jo
rcrb
xor
or
xchg
rolb
xlat
mov
mov
in
mov
sbb
mov
mov
xlat
insb
stos
lahf
mov
ficoms
hlt
rolb
data16
movsl
mov
scas
hlt
sbb
mov
fs
test
sarl
dec
jmp
hlt
jb
nop
outsb
mov
loopne
push
cs
movsb
jno
or
int
pop
out
in
or
sti
sbb
xor
xchg
xchg
cmp
or
cwtl
idivb
add
jnp
in
and
adc
dec
add
push
in
wrmsr
xor
add
les
jne
dec
shlb
cmp
fisubl
push
mov
cmp
ja
pop
rcll
adc
or
or
call
xchg
sub
pop
aas
insb
push
and
fnstcw
push
or
cmp
je
adc
sbb
subb
inc
mov
xorb
and
ret
iret
mov
inc
add
out
jbe
mov
jne
or
fstl
sarl
stc
push
mov
aas
test
inc
mov
imul
xor
or
add
adc
lea
lock
fldl
adc
pushf
sbb
popf
sbb
test
push
rcl
jl
les
scas
imul
dec
xorb
mov
cs
hlt
cmp
jne
xchg
add
aam
stc
aas
adc
mov
rcll
insl
roll
mov
xchg
imul
lahf
daa
mov
cld
movl
std
cmp
insl
ret
adcb
push
mov
xchg
iret
sarb
dec
sbb
xchg
aaa
inc
xchg
jle
es
das
add
pop
testb
repz
push
jp
push
fnsave
jl
sub
jns
test
mov
cld
adc
push
jecxz
adc
jo
sbb
hlt
lret
scas
mov
scas
mov
sbb
pop
sbb
imul
xchg
loop
mov
rcrl
shll
xlat
mov
jmp
adc
or
add
into
jbe
or
sti
add
mov
pop
mov
pop
hlt
sbb
mov
fs
je
repnz
sub
pop
mov
jmp
mov
insl
andl
mov
pusha
insl
roll
fcmovnb
xchg
jnp
inc
int
add
dec
enter
icebp
jae
jmp
sub
decb
aas
sub
sub
iret
dec
notb
and
sti
pop
xor
test
fwait
out
mov
adc
mov
mov
lea
imul
jp
inc
jmp
mov
pop
in
inc
dec
inc
cmp
jmp
xorb
mov
xchg
mov
push
movl
and
dec
or
pop
push
cmp
add
cmp
mov
aaa
out
mov
cmc
pshufw
sbb
fs
ret
stos
insl
fadd
pop
sub
cmpsl
sub
mov
jb
mov
and
push
pop
cmp
jcxz
cs
shrb
pushf
outsl
xchg
pop
loope
pop
mov
jmp
adc
xlat
ljmp
stos
adc
cmp
gs
push
es
add
jo
mulb
pop
push
out
push
pop
pop
inc
pop
mov
fcomps
sbb
rcrb
mov
pop
mov
out
pop
ds
leave
mov
fimuls
push
jmp
xor
loopne
push
jp
lea
imull
push
dec
cmpsb
loope
push
mov
outsl
test
loop
lea
inc
cmp
bound
mov
in
jno
ret
xchg
fmuls
sub
lret
cmp
repnz
sbb
pushf
cmpsl
push
add
sub
or
adc
cmpsl
pop
stos
sbb
sub
es
pop
xor
jo
ljmp
fsub
iret
js
gs
test
and
shl
subl
mov
adc
dec
push
sub
outsb
nop
mov
jl
sar
in
inc
dec
outsl
xchg
lock
mov
push
cs
daa
dec
xchg
addr16
clc
std
mov
icebp
lods
add
jmp
jbe
call
jmp
out
ja
lea
fists
das
xorb
or
jmp
adc
jb
sub
icebp
sti
out
ret
fildl
pop
adc
in
lcall
ficoms
in
xchg
cmp
into
sbb
fs
out
movsl
stos
adc
insb
int3
into
lds
insl
pop
popa
adc
adc
mov
outsl
nop
xchg
popl
test
orl
jno
icebp
arpl
aad
nop
fdivs
mov
test
or
or
cld
dec
jno
out
pop
es
ljmp
sti
or
mov
das
push
aaa
mov
adc
jns
cmp
sbb
push
popa
inc
aad
add
outsl
xor
push
xchg
cmp
push
imul
hlt
inc
or
sub
in
xor
mov
out
jp
jns
mov
jge
dec
inc
imul
xor
xor
imul
aad
aam
inc
mov
jle
jae
insb
sub
xor
mov
inc
shrb
lea
add
into
cmp
dec
nop
mov
andl
int3
loopne
inc
mov
gs
or
mov
push
xchg
or
sub
loop
mov
dec
mov
xchg
xchg
sti
rcpps
mov
mov
inc
push
add
sbb
adc
lahf
push
sub
mov
lock
aas
aas
adc
and
xlat
ret
push
pop
and
push
scas
push
shlb
pop
out
ret
mov
sub
repz
outsl
pushf
mov
jno
in
in
test
push
fs
sbb
mov
test
lods
pop
cmp
jp
jecxz
xor
in
xor
in
cltd
mov
push
mov
xchg
pop
sbb
pusha
inc
xor
outsb
cmp
push
mov
pusha
bound
outsb
sbb
mov
sub
jae
cld
inc
rorl
test
pop
and
aaa
pop
dec
dec
xchg
sbbb
clc
stc
mov
popf
push
xchg
in
addr16
mov
or
adc
adc
dec
icebp
fnstsw
in
fdivl
bound
xor
rcll
mov
jl
ret
ficoms
rorb
push
xor
mov
adc
test
inc
repz
sub
cli
pop
insb
popa
push
mov
lea
stc
je
in
pop
add
cmp
clc
nop
loop
cmpsl
enter
dec
and
rcrl
inc
mov
movsl
fisubl
out
movb
add
cld
ljmp
xchg
sub
pop
push
cwtl
fcmovu
iret
scas
pop
mov
orb
push
mov
sti
das
lret
add
test
mov
mov
leave
enter
pop
pop
lds
lcall
mov
xlat
insb
or
in
andl
cmc
and
cmp
movsl
cs
sub
dec
das
out
xlat
or
ror
jge
mov
add
push
in
lods
mov
pushf
test
or
dec
fnsave
push
lds
dec
push
push
pop
fpatan
mov
into
imull
xor
mov
mov
into
push
cmpsl
add
lea
mov
mov
mov
mov
jp
adc
test
xchg
ret
add
add
int3
hlt
je
xchg
je
push
cld
sub
aas
xlat
andl
sbb
mov
jg
or
repz
push
ret
mov
lret
pop
add
jb
cmp
je
cmp
enter
mov
pop
mov
push
xchg
fiadds
cmc
scas
or
cmp
addb
shrb
sbb
or
mov
ljmp
aas
pop
cwtl
into
imul
les
dec
xor
xor
test
pop
subb
mov
loop
fucomip
xchg
pop
push
stc
or
addr16
pop
and
daa
clc
out
sub
rcr
js
in
adc
bound
filds
outsl
int3
add
adcl
insb
dec
repz
test
mov
sbb
cwtl
jno
adc
cld
sarb
pop
cmp
cmp
out
fists
movsl
lret
int
jmp
pushl
mov
xchg
fs
adc
pop
cld
popa
pushf
xor
xor
push
das
mov
xchg
addr16
gs
add
add
mov
push
xchg
fninit
or
xchg
xchg
xchg
pop
mov
mov
sti
insb
jmp
divb
mov
jecxz
jle
mov
inc
aam
hlt
test
xchg
dec
mov
loopne
push
cs
add
pop
cmp
push
call
cli
shr
xchg
or
pop
test
mov
enter
cli
xchg
scas
lret
jmp
cmp
imul
mov
jge
lock
cmp
popa
inc
mov
loop
sbb
pminub
gs
cmpsb
std
stos
lods
rcrb
pop
jg
cli
pop
or
and
xor
popf
add
scas
iret
out
mov
and
sub
sarb
xchg
inc
and
xchg
add
imul
xor
mov
cmp
and
stc
lcall
jb
mov
int3
sub
stc
push
stc
lret
dec
add
xor
pop
sbb
subb
add
cmpsl
data16
cltd
ljmp
out
sbb
out
lock
out
push
sub
fiaddl
aas
cmp
data16
cld
jecxz
fmuls
in
lcall
repnz
lret
stos
dec
icebp
out
insb
pop
test
adc
cmp
mov
push
in
cmpsb
pop
iret
ffree
and
data16
push
cmpsb
arpl
addr16
in
mov
int3
sub
xchg
clc
jb
jg
std
pop
sub
cmp
dec
mov
int
add
xchg
or
loopne
mov
sbb
mov
jns
inc
stos
fidivs
fcomip
jp
stos
jmp
ja
inc
lret
sbb
xor
mov
sub
sub
xchg
add
loope
iret
add
sbb
push
cmpsl
pop
xchg
push
test
cli
cmp
scas
cmc
call
jmp
pop
popa
daa
jne
mov
mov
sbb
les
cmpsl
xchg
pop
mov
movsb
xor
dec
fdivp
jno
jae
data16
loop
lods
addb
add
mov
cmpsl
adc
outsb
aad
ret
lret
pop
jno
in
push
mov
out
stc
xchg
dec
ss
sub
loop
xchg
jmp
das
cmp
xchg
mov
xchg
cmp
in
in
sub
daa
mov
cwtl
push
es
and
shl
pop
shlb
add
mov
rcl
mov
pop
mov
jmp
and
sbb
pop
into
pushf
inc
adc
pushf
push
aaa
arpl
pop
inc
test
push
js
test
push
dec
jl
lods
insl
jmp
addl
rorl
jle
fcoms
test
into
xchg
lock
mov
mov
fnstsw
sbb
pop
sbb
roll
inc
pushf
mov
mov
lds
mov
cmp
test
jnp
iret
loop
ds
cmpsb
adc
test
cmpsb
and
adc
adc
jne
mov
scas
pop
sbb
or
jae
outsb
sbb
push
sub
cmc
lcall
movl
mov
xor
sub
jmp
pop
cli
jae
xchg
in
imul
xor
xor
inc
add
pop
aam
mov
setae
test
jnp
jno
sbb
mov
aas
mov
jnp
in
adc
sbb
sbb
jnp
pop
lcall
add
hlt
outsl
test
xor
jp
and
push
pop
inc
cmp
fwait
dec
mov
jle
lods
adc
roll
mov
sbb
in
mov
xor
pop
dec
push
loope
cmp
mov
mov
mov
jnp
pop
sarl
cmpsb
lds
std
into
and
mov
jne
or
cmpb
ds
sahf
cmp
or
lret
add
sbb
sub
push
out
loope
pop
loop
sub
popa
and
xor
inc
dec
ret
dec
cmp
push
icebp
shl
call
aas
mov
xor
sbb
clc
adc
mov
test
ret
outsb
jns
mov
or
mov
adc
cmpsl
arpl
push
xor
sbb
ss
xorl
cld
pop
push
mov
sub
pop
inc
loop
jne
jmp
divb
dec
cmc
sti
jnp
sar
pop
imul
cltd
dec
decl
or
or
cmp
mov
rcr
push
cwtl
int
shrb
addl
and
dec
adc
push
pop
mov
data16
iret
mov
lret
or
int3
mov
push
enter
outsl
add
xchg
cwtl
xchg
sbb
mov
dec
cwtl
pop
mov
ljmp
or
fdivrp
mov
push
push
or
cwtl
push
push
lahf
and
roll
cltd
repz
mov
jnp
je
dec
nop
inc
pop
sub
mov
aaa
pop
pop
inc
cs
push
adc
daa
shl
cmp
mov
aad
jle
sbb
ret
ret
add
sti
xlat
je
mov
cmp
sub
sub
xchg
test
jl
pop
mov
enter
mov
xlat
mov
lods
ffreep
or
adc
xor
test
test
pop
mov
fnsave
in
jle
pop
cmp
or
lds
popf
daa
jl
add
push
jnp
add
push
dec
xchg
out
fisubl
loop
ja
or
testl
mov
adcb
mov
scas
xor
addb
xchg
psubusw
leave
cs
mov
push
aaa
outsl
in
int
inc
mov
sub
cmc
inc
cmp
gs
sbb
push
push
in
call
shll
dec
pop
or
cmpsb
das
lds
fmuls
int3
ret
jle
out
mov
in
cmp
xchg
or
cmp
fiadds
mov
psubsb
rol
mov
add
inc
stos
hlt
popf
mov
loopne
movsb
xchg
add
loope
pusha
addl
int3
lret
lahf
mov
sub
mov
daa
pop
mov
imul
jae
arpl
push
orl
add
xor
test
inc
lock
ret
cmp
es
pushf
inc
mov
inc
mov
mov
mov
inc
pushf
or
test
shlb
mov
lea
mov
fs
adc
xor
imul
mov
cmp
ds
xchg
sbb
xlat
popa
jmp
cmp
test
dec
xchg
jp
mov
aas
dec
jo
adc
adc
out
sbb
rol
sahf
adc
and
push
mov
orb
sub
rorb
and
int3
dec
popf
jg
test
sbb
xlat
dec
sar
cltd
pushf
add
cwtl
add
int
popf
mov
into
and
cwtl
fisubs
test
mov
insb
aas
pop
fwait
pop
dec
push
data16
hlt
and
pop
push
nop
stos
testb
shll
jbe
cmp
inc
mov
push
sbb
pop
in
outsb
mov
push
pop
mov
mov
xor
push
sub
jl
add
std
add
xchg
rcll
fstpt
cmp
ljmp
loop
push
icebp
outsb
adc
or
or
add
pop
sub
das
in
or
push
sub
insl
out
call
in
mov
aad
mov
xor
push
out
adc
and
dec
mov
cmp
jnp
jb
inc
sahf
cli
push
mov
rorb
outsl
inc
add
jp
ret
sub
bound
xor
incb
push
sub
jbe
jg
pop
add
ja
cli
stos
sti
mov
outsl
rclb
mov
pop
sub
in
daa
mov
sbb
and
xor
lret
lods
push
sbb
push
lcall
inc
xor
subl
push
and
jmp
call
imulb
mov
addr16
or
loop
popf
jns
scas
adc
xchg
fs
gs
inc
in
xlat
test
fmul
sbb
pop
aam
iret
pop
lock
cmc
mov
iret
out
ficoml
jle
shrl
pop
add
aam
repz
add
rclb
adc
dec
loope
cmp
jp
jne
cmp
cmovb
jnp
add
cld
xchg
insl
or
insb
mov
sbb
and
in
xor
fstpt
sbb
into
jmp
pusha
sbb
inc
fisubrl
lods
je
aas
ja
pop
lods
pop
pop
insb
mov
mov
sbb
inc
sub
sbb
xchg
nop
dec
pop
cmp
mov
sub
xchg
shr
rclb
test
mov
ds
js
mov
clc
xor
lret
push
popa
cwtl
loopne
sbb
mov
fstpt
or
sbb
sbb
push
add
ficompl
sub
sub
aad
push
push
adc
fs
das
push
xor
mov
fstps
stc
xchg
sub
sahf
xor
cltd
cld
cmp
ljmp
rorl
out
mov
and
adc
icebp
mov
aam
lods
mov
lods
push
stc
mov
je
adc
adcl
je
movsl
mov
out
popf
mov
je
pop
sbb
mov
repz
insl
loop
sbb
out
xlat
pop
push
js
int3
lahf
push
sub
or
inc
inc
pop
ljmp
test
dec
mov
jb
and
hlt
jnp
loope
fcoms
fstps
aaa
mov
fbld
cmp
stc
ret
mov
daa
insb
mov
cmp
dec
imul
dec
enter
repnz
mov
cltd
fdiv
ret
fwait
jns
push
cwtl
pusha
mov
bound
sbb
test
inc
ss
pop
cmpsb
iret
mov
movsb
repnz
push
pop
cli
test
test
scas
jge
pop
std
pop
sub
cmp
and
lret
push
pop
test
pop
adc
push
cmc
sti
sub
cmp
fisubs
dec
mov
fdivr
leave
jne
mov
loopne
mov
cmp
das
popf
pop
push
insb
orl
lret
mov
adc
add
sub
mov
push
out
push
inc
fmuls
fs
cmp
xchg
adc
inc
dec
jae
clc
mov
xchg
jle
xchg
nop
pusha
or
cmpb
bound
inc
insl
scas
dec
jecxz
pop
scas
outsl
push
mov
cli
mov
cld
aas
cmp
std
das
loope
ret
mov
cmp
mov
mov
ret
xor
aam
inc
adc
mov
cli
in
scas
dec
stos
adc
dec
imul
mov
and
push
dec
fstps
xor
push
sbb
cld
mov
and
mov
cmp
aas
mov
rcrb
push
jp
pop
popf
mov
add
into
mov
pop
pop
mov
lea
mov
and
mov
movsb
and
lahf
imul
jle
popa
lahf
into
mov
div
sub
mov
stos
lret
popa
in
or
mov
lret
jns
notl
sbb
cmp
aaa
das
push
push
cs
adc
outsl
jmp
dec
repnz
xchg
outsb
movsl
lret
cmp
in
movsl
inc
jno
sub
xor
rcrb
aaa
mov
mov
clc
movsb
push
fnstenv
pop
add
call
mov
sbb
sbb
repnz
or
push
dec
lea
test
xor
mov
testl
xor
xor
mov
jns
xor
adc
xchg
dec
das
sbb
cmc
leave
mov
roll
ljmp
lahf
aaa
or
cld
mov
pop
in
xchg
sahf
repz
push
ret
push
ss
mov
fdivs
pop
imul
insb
adcl
pop
ret
rcll
mov
mov
and
ret
dec
jb
xchg
movsb
popf
push
sbbl
sub
sbb
stos
push
inc
push
iret
outsl
xor
xchg
cmp
mov
dec
loope
fildll
fidivl
lods
jno
loope
out
ficoms
ja
push
push
dec
int3
lods
inc
and
pop
dec
sub
jo
xorl
enter
push
or
xor
lods
xchg
idiv
cmpsb
repnz
stc
mov
inc
push
push
inc
sub
or
lcall
into
or
lea
adc
fwait
pop
arpl
stos
xor
sti
mov
call
int3
fdivr
shll
cltd
imul
inc
sub
pop
ds
pop
lods
lds
xchg
or
sub
pop
xchg
mov
or
mov
xchg
xchg
les
sbb
xchg
shrd
je
dec
notb
mov
std
push
in
je
xlat
fldt
dec
pop
cltd
mov
cmp
pop
or
ljmp
add
mov
aam
sbb
add
sbb
stos
aad
pop
stc
inc
pop
loop
jmp
and
cltd
inc
mov
fucompp
adc
jne
data16
jg
sbb
pop
mov
jno
pop
ret
cmp
mov
sbbb
pop
adc
int3
out
imul
int3
mov
push
xchg
sbb
inc
jae
imull
inc
dec
cmc
lock
jbe
jae
lahf
lods
testb
popf
loope
push
stos
add
adc
dec
out
loope
and
sub
imul
fcoms
add
aas
push
loope
jmp
mov
mov
inc
dec
adc
inc
sahf
push
mov
fisttpl
push
aas
cli
sub
outsb
or
xor
arpl
pop
loopne
lods
or
fists
sahf
insb
cwtl
out
in
sbb
ss
sarl
inc
lea
cltd
pop
adc
lahf
and
or
mov
add
arpl
xchg
sub
inc
dec
es
and
jge
addr16
mov
insb
jae
addr16
mov
std
fwait
popa
mov
nop
xchg
sbb
lret
mov
aas
faddp
pop
shll
aaa
out
jmp
cld
xor
ds
mov
fstl
out
dec
loop
jl
in
ja
outsb
add
jecxz
jo
jl
mov
sub
out
dec
sti
jbe
inc
movb
jns
dec
addl
sub
pop
and
es
int
jg
mov
call
lahf
arpl
pop
xor
cld
mov
inc
add
in
mov
out
ljmp
leave
add
leave
insb
dec
das
dec
test
dec
pop
push
lods
and
jo
inc
jne
bound
shl
lock
stos
pop
js
lods
jbe
imul
sub
stc
scas
in
stc
test
xchg
pop
lahf
mov
xchg
lea
add
lock
cmp
nop
repz
jo
push
xor
aad
hlt
push
push
dec
out
xchg
das
js
insb
xor
pushl
insb
jnp
dec
in
es
insb
adc
popf
cmp
lock
push
dec
push
push
scas
lahf
pop
xchg
or
nop
mov
pop
scas
mov
js
push
frstor
adc
mov
cmpl
call
push
in
push
repz
shl
or
or
int3
xor
sub
pop
inc
inc
fnstenv
test
test
sub
pop
and
xchg
mov
aam
lret
add
cltd
std
fwait
pop
loope,pt
fisubs
pop
movl
loop
push
mov
mov
xchg
stos
mov
sbb
cmp
cltd
pop
mov
xchg
lock
loop
xchg
cmpl
les
cltd
in
inc
outsl
mov
vandps
sahf
in
out
pop
sbb
jae
jge
add
add
jmp
or
out
lea
aad
adc
rorb
jge
and
stos
mov
scas
add
lods
xchg
pop
in
mov
jecxz
inc
aas
bound
dec
cmp
jecxz
and
loopne
inc
incb
inc
pop
es
dec
ret
fsubrs
mov
mov
dec
clc
pop
and
or
mov
ds
xor
ljmp
movb
mov
sub
mov
es
int3
dec
mov
add
ret
gs
test
das
jmp
add
mov
jno
jo
out
mov
push
or
scas
or
sub
in
and
jp
in
dec
in
cltd
push
test
cmp
sarl
sub
push
fidivrl
push
cwtl
push
fstps
push
add
imul
cmpl
push
xor
adc
mov
jmp
insl
jns
movsl
sub
mov
xchg
into
inc
aas
xchg
movsb
out
dec
sti
dec
addr16
fisttps
mov
popf
cmpsb
das
sub
js
fimuls
in
xorl
clc
and
cli
mov
cwtl
mov
ja
jno
popa
inc
push
pop
mov
aam
xchg
push
adc
test
mov
hlt
xor
mull
push
pop
aad
mov
sarl
test
test
add
xor
xchg
lods
iret
mov
out
adc
sahf
mov
fmuls
push
fcmovnb
fisttps
pusha
adc
dec
inc
mov
aas
cli
les
fldenv
dec
add
aam
jnp
xchg
movsl
mov
xchg
cwtl
cwtl
outsl
jno
ss
cmp
aam
cs
lahf
cld
cmp
mov
js
ret
and
testl
rol
mov
push
outsl
or
sbb
cmp
jns
out
pop
xor
fs
mov
insb
and
ja
cld
jge
test
xlat
bound
ret
cmp
aam
mov
jg
mov
push
push
pop
lahf
inc
jle
mov
fucomp
in
sbb
jo
nop
mov
arpl
test
push
xchg
shrb
shrb
jge
dec
shlb
lods
movsb
es
subl
cld
repz
data16
cmpsl
les
in
mov
cmp
or
sbbb
out
sub
sbb
pop
xor
mov
xor
lods
iret
push
stos
std
push
jnp
cmpsb
data16
dec
dec
adc
jg
rcll
out
cmpsl
add
adc
or
push
xor
aas
or
mov
idivb
mov
outsl
pop
adcb
cld
pop
or
mov
add
subl
mov
dec
jge
inc
shr
daa
pop
inc
data16
scas
push
dec
nop
push
xchg
push
add
mov
inc
sub
mov
scas
adc
mov
dec
jae
cmp
bound
jp
ret
fistpll
int
outsl
inc
jle
fstpl
jecxz
das
jne
add
xor
lods
mov
mov
rcr
stc
cmp
mov
iret
inc
and
pop
shll
dec
out
mov
shrb
sub
pop
imul
dec
cmp
test
out
in
pop
mov
inc
cli
mov
or
inc
stc
pop
sub
mov
out
movsl
sbb
push
mov
sbb
pop
pop
push
test
insb
xchg
inc
mov
inc
mov
add
loopne
repz
pop
loope
push
stc
inc
es
xor
arpl
popf
insl
cmp
add
add
jp
scas
and
mov
inc
stos
sti
mov
das
pop
repnz
add
xor
cmp
lret
add
and
fwait
loop
jmp
leave
sbb
sbb
fiaddl
sub
push
nop
pusha
in
add
or
xor
rcll
mov
dec
cmp
inc
lods
mov
stc
subl
sbb
or
mov
dec
or
aas
mov
roll
out
mov
xchg
cmp
mov
cmp
loopne
add
pushf
sbb
pop
and
aas
and
pop
fidivrl
xor
or
out
in
jns
inc
cmpsb
jne
stos
mov
in
pushf
and
sub
arpl
and
jge
jecxz
xchg
leave
ss
inc
cmc
addr16
or
popa
or
pop
enter
stos
lret
inc
jae
mov
cmp
push
pop
pop
or
aam
enter
and
sti
imul
jl
push
in
test
mov
or
cmpsb
aam
push
sub
insb
jae
loope
lods
outsw
mov
or
pop
inc
sbb
or
insb
shr
or
push
pop
mov
test
test
mov
pushf
inc
les
lret
push
mov
movsb
adc
arpl
call
mov
movsb
cmp
push
lock
jo
fisubl
cmpsl
sahf
out
int3
cmp
out
sbb
push
cmc
mov
push
jne
fcoml
shl
outsb
sub
ss
pandn
sbb
in
outsb
popf
ldmxcsr
call
ret
call
pop
mov
pushf
xchg
mov
jp
aam
out
mov
fcompl
inc
xchg
movsl
test
bnd
jle
cmp
ret
inc
cmp
dec
xlat
into
or
pusha
in
pop
push
sahf
dec
sbb
aaa
fwait
dec
xchg
mov
std
fists
mov
fldl
sub
push
mov
pop
leave
popa
cltd
stos
shll
cmc
inc
pop
imul
mov
mov
test
xchg
movsl
dec
inc
pop
ja
stos
icebp
add
jb
and
cmpb
cmp
orb
in
outsl
cmc
lret
in
out
jo
out
out
js
mov
sti
ss
pop
test
movsl
fnsave
inc
hlt
ret
loopne
in
stos
sub
xchg
mov
push
sbb
dec
sub
mov
jge
repz
cmp
mov
sbb
xchg
test
adc
pop
loop
enter
push
cmpb
leave
cmpsl
or
shl
mov
jl
jne
out
ja
sbb
jo
dec
sub
mov
ret
or
lahf
xor
xchg
xor
mov
mov
fidivs
outsb
xlat
das
cwtl
outsb
mov
clc
add
xchg
push
mov
xchg
fmul
shrl
sbb
pushf
mov
or
test
test
jbe
xchg
mov
inc
movsl
fs
in
sbb
ja
sbb
inc
dec
leave
lods
int
movb
cmpl
subb
mov
gs
addl
or
or
or
lret
cmp
mov
movsl
adc
jns
mov
sbb
fdivr
repz
ret
ret
outsl
push
mov
push
xor
outsl
or
mov
imul
mov
xor
xor
test
in
cmpsl
rcr
mov
ljmp
aas
dec
jge
lods
fimull
dec
and
add
scas
dec
xor
int3
xchg
xchg
in
mov
jno
adc
leave
pop
jae
cmpsb
test
dec
lods
stos
les
lods
fcoms
inc
sub
mov
xor
fisubs
jge
inc
icebp
mov
in
xchg
fucomi
mov
jbe
dec
or
sarb
add
fmul
bound
ficompl
daa
mov
sub
shll
pusha
xchg
fsubr
sub
or
stos
icebp
mov
push
pop
test
pop
les
jb
sub
pop
xchg
fisttpll
jmp
shrl
gs
xor
pusha
dec
inc
xchg
pop
jecxz
or
pop
jo
imul
mov
lds
adc
scas
dec
mov
mov
jl
mov
inc
add
or
mov
in
xchg
pop
jo
mov
mov
pushf
add
mov
adc
cltd
jns
or
mov
adc
mov
push
arpl
lret
push
xor
push
sub
cmp
loopne
out
ljmp
mov
outsl
int3
sub
in
sahf
mov
xchg
xor
push
fmuls
xor
sar
inc
pop
dec
dec
shll
out
xchg
test
leave
lea
lds
insl
lods
lea
lahf
jb
sub
add
cmpsl
ljmp
xor
shl
cmp
hlt
jne
stos
mov
mov
loope
pop
inc
incl
enter
xor
mov
sub
ret
clc
int3
mov
ja
mov
enter
mov
xor
or
push
push
enter
out
inc
mov
pop
stos
mov
ret
scas
xor
aad
insb
test
xchg
sbb
push
xor
fisubrs
xchg
or
mov
aaa
imul
dec
cltd
inc
add
ss
sbb
lods
imul
mov
out
and
aam
pop
iret
and
lcall
int3
loopne
test
roll
clc
or
dec
scas
dec
les
xor
test
bound
stos
idivb
fidivl
push
lods
and
and
cli
mov
repnz
mov
mov
add
addl
bound
mov
outsb
jmp
sub
outsl
clc
or
fcoms
mov
jb
push
movsb
shl
cld
loope
dec
cmp
aam
lahf
or
lods
inc
stc
arpl
fstpt
mov
sbbl
cwtl
fisubl
add
sbb
push
jbe
pop
pop
xchg
push
jle
xor
mov
and
out
test
mov
push
xchg
mov
adc
call
and
cld
and
cmp
out
shrb
ret
popf
loopne
out
or
pop
pop
jns
popf
movsl
pop
subl
es
xor
cmp
sub
daa
mov
int
adc
jmp
imul
jp
pushf
xor
ss
mov
js
mov
push
pop
sub
mov
push
push
push
sub
shrl
or
call
mov
push
jecxz
aam
lds
in
aad
cmpsl
test
adc
cltd
mov
pop
ljmp
jecxz
jp
sub
cltd
in
fistpll
call
mov
dec
pop
pusha
ret
add
je
mov
ljmp
out
xor
icebp
lahf
push
xchg
xchg
daa
inc
inc
sub
mov
lret
inc
test
or
mov
movsl
or
xor
pop
push
dec
pop
test
cltd
enter
xor
adc
and
jo
fmull
sub
jns
pop
cld
addr16
mov
pop
gs
cmpsb
movsb
outsb
adc
xor
add
cmp
arpl
mov
pop
in
sahf
dec
inc
lock
push
mov
sub
adc
xor
gs
xchg
test
jbe
lds
xchg
cmp
pop
daa
pop
or
xor
sub
rcrb
lods
mov
ret
test
xchg
divl
inc
dec
sbb
shr
cli
lahf
and
pop
movsl
dec
decl
aad
pop
js
add
int3
test
test
push
or
push
testl
adc
enter
jb
ds
sub
push
stos
enter
mov
pop
popa
inc
jecxz
lret
lods
stos
lret
push
stos
lods
imul
ss
add
push
mov
fbld
push
xor
mov
lret
hlt
xor
loope
or
scas
out
push
xor
adc
repnz
dec
push
cmp
and
mov
bound
dec
movsl
outsb
inc
lods
lods
cmc
pop
sub
test
mov
jne,pn
mov
cs
pop
mov
cmpsl
pop
xchg
pushf
push
jno
loope
pop
call
test
cmp
mov
ds
std
lahf
inc
inc
jecxz
hlt
push
jb
xor
xchg
xchg
sarl
aad
das
shll
or
inc
or
and
jl
pop
mov
xchg
pop
mov
inc
stos
xchg
mov
jle
sbbb
cmc
flds
push
adc
xchg
scas
repz
daa
mov
pop
rol
fs
dec
pop
add
dec
stos
mov
int
xchg
movsb
lcall
pop
or
mov
pop
xor
mov
pusha
mov
rcrl
clc
repnz
cwtl
inc
movsl
rcrl
jne
leave
add
data16
out
cltd
push
add
xchg
in
sti
jl
adcb
mov
jbe
xchg
pop
arpl
div
or
sbb
je
movzwl
inc
fdivrl
xor
out
out
pop
inc
movsl
shll
aad
adc
pop
imulb
push
cmp
rcr
add
loope
jp
fnstcw
pop
inc
sahf
and
sub
dec
mov
imul
cld
iret
or
xor
add
mov
push
cmc
call
adc
or
inc
inc
int3
mov
inc
sbb
lcall
es
imul
mov
push
xchg
loope
sub
push
mov
dec
in
jmp
jmp
dec
adc
pop
inc
repz
fisttpll
dec
xor
lea
push
outsb
mov
std
cld
push
inc
push
in
out
cwtl
jo
rclb
push
shll
xor
jns
sbb
pushf
push
mulb
fcoml
mov
ljmp
sbb
xor
xchg
sub
or
xor
jns
pop
daa
adc
jg
cmpsb
jno
mov
and
adc
inc
stos
and
push
dec
pop
sbb
lds
pushf
or
outsl
mov
stc
repnz
gs
xor
hlt
pop
loop
pop
xor
subb
jbe
movsl
xchg
popa
xor
fsub
adc
dec
arpl
push
fidivl
mov
lods
add
dec
jnp
jle
pop
int3
or
js
sbb
pop
mov
mov
xor
dec
sub
out
jno
and
popf
jbe
pop
adc
mov
int3
repz
out
loope
mov
mov
fldl
rcrb
pop
mov
cmp
stc
out
fdivl
jmp
jmp
lret
mov
adc
movsl
mov
fsts
pop
push
push
pop
xor
shll
das
or
push
and
and
and
cld
push
fcompl
pop
insb
cli
fwait
sbb
xor
je
jle
push
xor
mov
pop
cmpsb
clc
jmp
push
lret
sub
mov
sbb
fmuls
xchg
or
mov
jbe
cmpsb
push
mov
nop
movsb
sbb
jp
inc
je
iret
jae
rol
jne
fisubl
cmp
insl
in
inc
stos
pop
mov
dec
inc
loop
das
mov
rol
cli
xor
shr
andl
mov
sub
adc
cmp
and
xchg
bswap
cmp
dec
xlat
adc
push
fs
jns
fstpl
stos
out
setle
mov
sbb
icebp
cltd
push
leave
and
pusha
lret
call
rclb
mov
test
test
dec
or
test
pop
test
cli
ja
lds
push
faddl
push
or
pop
cmp
das
cmp
rclb
popa
jge
cmp
loop
jl
roll
xor
inc
sub
xor
frstor
mov
fs
jmp
mov
pusha
nop
or
scas
ss
nop
push
repnz
add
xchg
je
mov
cmpsl
dec
push
xor
xchg
xchg
imul
or
mov
fstps
addr16
push
mov
push
loope
pop
mov
ljmp
xorl
frstor
mov
stos
ret
test
leave
int3
loopne
rcrb
dec
adcl
jle
ds
pop
repnz
popf
pop
out
jae
outsb
ffreep
test
js
dec
push
push
push
stos
ds
test
jmp
pop
cmp
push
xchg
adc
and
push
dec
cmpl
out
push
push
pushf
decb
das
test
out
push
jl
fdivl
pop
jae
sub
sbb
jno
int
push
into
loope
push
lcall
push
or
pop
jge
sub
out
pop
push
bound
jmp
jns
loop
ljmp
and
in
push
mov
shll
mov
aas
cwtl
fildl
sub
push
lock
pop
mov
cld
pop
xor
into
les
dec
out
mov
and
xchg
mov
mov
push
push
pop
or
ljmp
dec
push
xor
hlt
and
iret
inc
dec
shrb
or
shll
pop
mov
mov
dec
push
adc
mov
test
xorl
std
mov
sbb
push
cwtl
or
pop
cmp
int
jle
sarb
test
lea
or
sub
daa
stos
inc
fwait
fwait
icebp
cmpb
ret
or
jne
and
and
fwait
lcall
add
lock
adc
out
scas
sbb
push
cli
test
mov
sub
sbb
ljmp
addb
xchg
or
aas
mov
push
shr
mov
mov
jl
es
stos
and
lods
mov
jb
fmulp
inc
aas
cli
push
jl
inc
scas
ds
mov
add
jle
int3
insl
sub
xchg
addl
popa
add
sbb
repnz
lret
in
cltd
out
xchg
dec
push
pushl
dec
xor
xlat
rcrl
test
das
mov
inc
mov
adc
outsl
sbb
push
not
adc
mov
loopne
and
pop
out
leave
pop
test
repnz
es
cld
add
add
je
pop
sbb
cli
stos
mov
stc
mov
dec
and
fisttpl
mov
pop
adc
das
xchg
ret
jecxz
xor
push
dec
jae
push
insb
mov
mov
push
dec
dec
popa
adc
jb
jo
jp
jnp
push
in
mov
ficoml
adc
jne
fsubrl
lods
jo
add
or
sbb
fstp
dec
or
push
xor
dec
adc
pop
enter
mov
fsubrl
xor
jge
out
dec
push
cli
iret
mov
add
arpl
xchg
mov
push
jg
clc
mov
xchg
xchg
push
stos
popf
in
add
orb
sub
mov
adc
lods
stos
or
sbb
add
sub
push
sbb
mov
scas
sbb
jl
xor
adcb
xor
dec
je
shl
dec
and
add
punpckldq
xchg
pop
xor
sbb
mov
enter
sbb
pop
push
mov
daa
add
sub
pop
iret
and
into
icebp
mov
sub
fs
out
xor
or
cld
push
dec
roll
and
mov
les
xchg
je
stos
out
jo
inc
pushf
pop
call
cltd
and
mov
push
jmp
pop
lods
push
mov
outsl
dec
sbb
jecxz
xor
cmp
push
loopne
or
xor
out
adc
out
jp
adc
lea
or
mov
xchg
pop
mov
imul
pop
cmpl
xchg
arpl
sub
fcoml
clc
jmp
pop
and
pop
sbb
or
sbb
and
hlt
subl
fmuls
pop
into
leave
dec
sub
sbb
jb
fmulp
js
jae
cmp
mov
outsb
hlt
jnp
push
and
jecxz
mov
les
fisubs
mov
insb
mov
arpl
outsl
jo
pop
adc
jae
xchg
insl
adc
pop
mov
dec
jmp
cmp
add
call
lret
ljmp
sbb
daa
dec
fdivrs
out
pop
addr16
dec
inc
and
imul
push
sbb
add
addl
lret
xor
mov
xchg
int
and
xor
fnstsw
dec
je
cmc
xor
xchg
into
inc
cmp
fistl
and
jo
add
or
inc
sbb
mov
pop
push
dec
pop
mov
and
in
add
dec
sbb
test
into
addr16
cmc
xor
cmp
mov
mov
std
test
leave
sub
icebp
mov
xchg
nop
xchg
mov
sub
pop
shr
repnz
and
jl
pop
popa
mov
mov
arpl
stos
mov
ret
pop
in
shll
mov
insb
setae
insl
ss
test
mov
xor
push
adc
daa
xchg
sub
jmp
outsl
shll
jns
pop
sbb
loop
dec
hlt
adc
int3
lret
hlt
cld
data16
into
dec
fwait
cmp
sbb
jge
add
and
push
lods
test
xchg
push
and
pop
std
and
dec
and
mov
mov
mov
xor
loop,pn
xor
dec
dec
dec
pop
insb
pop
sbb
gs
cli
mov
sub
jp
dec
cmpsl
push
inc
mov
mull
push
lds
dec
test
sbb
mov
int
test
jnp
push
mov
stos
mov
jle
ffree
out
adc
pop
xchg
cmp
cmp
sti
incb
xchg
adc
insb
cs
sti
ljmp
je
ja
in
pop
enter
mov
mulb
xor
sub
dec
mov
aas
jle
mov
movsl
shll
lahf
gs
add
fiaddl
pop
test
xor
loopne
inc
fsubrl
je
adc
aaa
push
aad
inc
pop
lea
push
dec
js
pop
popa
xchg
mov
aaa
repnz
fwait
daa
jecxz
bound
out
jno
pop
mov
pcmpeqw
fsubr
inc
sahf
adc
push
imul
and
orl
jnp
out
fstpt
lahf
mov
sbb
mov
out
and
stos
mov
scas
xchg
push
sub
sti
sub
push
loopne
push
push
ss
dec
mov
mov
fildll
mov
scas
push
imul
in
lods
mov
ja
xchg
pop
or
jg
sub
xor
xor
orb
aaa
cmp
mov
sbb
loope
or
pop
push
call
std
in
es
es
enter
mov
addr16
jae
pop
les
je
shl
test
adc
clc
ret
pushf
insl
dec
popa
sub
dec
rcl
sarl
repz
mov
idivl
ret
adc
push
loopne
test
lahf
add
and
scas
xchg
sbb
adc
push
ja
aas
add
fcoml
lret
xor
cmp
aaa
or
mov
jnp
pushf
leave
xchg
testb
out
xchg
mov
cmp
mov
add
fdiv
mov
mov
test
sub
enter
lods
popa
mov
mov
popf
jns
mov
mov
xchg
sti
fs
data16
insb
push
and
fists
imul
lods
adc
push
dec
ret
in
sub
inc
jecxz
jbe
loopne
add
lds
sbb
dec
jb
clc
add
test
movsb
lods
scas
imul
mov
cmp
jl
loop
pop
xchg
push
cmpsb
inc
lds
loop
stos
or
push
jp
popf
es
das
sub
add
sbb
sahf
pop
sarl
roll
pop
add
jle
dec
add
ljmp
add
scas
push
fsubrs
frstor
test
xchg
scas
fdiv
sub
shll
movsb
rcrl
sub
rorb
mov
and
hlt
mov
mov
leave
mov
fnsave
xor
enter
mov
pop
and
sbb
stos
ss
cli
mov
jno
mov
out
sub
aaa
jg
add
shrl
push
ret
int
out
mov
cmp
add
cltd
mov
in
cmp
call
test
out
mov
fmul
and
mov
dec
lods
addr16
js
fldl
ss
add
sub
sub
cltd
mov
xchg
or
mov
mov
mov
push
pop
sbb
pop
mov
test
ret
adc
add
and
lcall
and
mov
dec
das
adc
pop
cld
enter
std
push
push
aad
mov
pop
pushw
sti
movsb
or
stos
ss
int
jb
dec
arpl
incl
inc
mov
dec
scas
shlb
iret
dec
add
xchg
stos
mov
movsb
inc
stc
adc
ds
jb
adc
adc
lahf
xchg
dec
mov
mov
sub
testb
pop
les
cmp
dec
fcomps
dec
add
iret
inc
jbe
inc
in
xchg
into
xchg
xchg
jnp
sub
and
mov
gs
test
cmp
sbb
dec
push
popl
fprem1
test
xchg
outsb
and
aam
push
cli
scas
testl
fcmovnbe
mov
popf
es
jne
in
out
imul
scas
pop
add
lds
or
rorl
jle
imul
aaa
scas
outsl
sub
pop
mov
and
shll
sbb
subl
notl
stos
xchg
adc
pop
fstl
cld
pop
fsts
les
lock
adc
lods
sub
xchg
mov
jb
jne
push
push
fsub
xchg
xchg
mov
call
rorl
xchg
int3
mov
das
push
test
fwait
inc
out
dec
push
pop
cmp
mov
or
push
fwait
pop
jno
jmp
push
gs
cld
and
jns
in
call
mov
lock
cmp
and
cmp
push
ds
mov
dec
lods
pop
mov
popf
jle
daa
and
in
dec
mov
dec
mov
fwait
jg
cmp
or
dec
sub
mov
and
jl
xchg
xchg
push
cmp
cld
mov
sub
arpl
in
in
mov
dec
les
xchg
sub
stc
js
lods
lea
adc
mov
rcll
arpl
mov
daa
mov
lock
pop
arpl
cmp
rorb
or
repnz
scas
or
mov
rol
fldl
scas
adc
xchg
and
cwtl
addb
push
idivl
clc
rorl
mov
inc
or
hlt
push
das
jle
cli
mov
in
aam
xor
dec
pop
in
popa
or
outsl
dec
and
or
popf
fmuls
sub
sub
cmpsl
adc
or
sbb
push
das
add
out
les
movsb
out
xchg
je
scas
sbb
imul
fsubrp
sbb
add
mov
jae
pop
inc
mov
out
sbb
cmpb
movntq
out
sbb
stos
jae
xchg
sarl
fcmove
sbb
es
adc
clc
loopne
shl
xchg
jl
dec
test
daa
mov
dec
push
inc
jns
push
cmp
push
adc
cmp
sub
dec
mov
xlat
jo
insl
int
enter
out
shlb
pop
cmp
into
mov
out
outsl
insl
aas
mov
inc
xor
out
add
movb
stos
in
cld
mov
rcl
mov
imul
dec
sbb
cltd
movsb
insb
sub
scas
fistl
and
movb
adc
and
cmp
mov
xor
sbb
inc
inc
jo
add
lods
adc
adc
sbb
sarb
sahf
jnp
sbb
xchg
cli
fisubrs
adc
mov
xor
mov
lret
add
inc
nop
and
mov
xchg
fistpl
icebp
lcall
loopne
xor
adc
pop
sbb
aam
mov
or
push
sti
das
fldcw
mov
jne
pop
clc
jbe
scas
mov
cmpsb
in
inc
cmp
cmp
faddp
mov
mov
jecxz
sub
scas
mov
inc
xchg
sub
fdivrs
dec
jnp
pop
pushf
or
or
fistps
shl
cmp
add
cli
rcl
xor
rcrl
mov
push
bound
dec
or
gs
and
xchg
aam
dec
clc
testl
xor
outsl
cmpsb
daa
mov
mov
xlat
push
pop
lods
incb
xor
sub
push
ret
push
cltd
mov
push
add
adcl
mov
dec
imul
mov
adc
cmc
push
bnd
xchg
jp
pop
add
xor
jmp
pop
and
adc
inc
sbb
add
mov
scas
lcall
sbb
movsb
shlb
loop
mov
xor
mov
mov
loop
insb
dec
aas
emms
inc
mov
lret
mov
lret
mov
pop
and
jmp
mov
sub
mov
cmpsb
mov
in
into
mov
sahf
jge
test
testb
cmp
mov
insb
xor
aas
pop
in
and
add
push
jnp
popa
jae
jp
sbb
inc
jmp
aam
mov
xchg
lea
fistl
add
xchg
es
cmpl
loopne
gs
fwait
pop
push
jmp
mov
or
subb
add
adc
pop
lods
je
pop
pop
std
daa
jae
or
repz
mov
sub
cld
stos
das
xchg
dec
in
fidivrl
mov
mov
pop
mov
xlat
imul
lret
adc
and
dec
shll
jl
sbbl
lock
mov
dec
cmp
imul
lcall
push
sub
xchg
push
in
imul
push
push
jns
or
fwait
negl
pop
push
pop
mov
lods
cmp
insb
adcl
sub
mov
dec
and
ret
fiadds
into
inc
cmpsl
ljmp
lret
orl
mov
dec
add
and
xor
pop
inc
bound
repnz
movsl
jb
loope
sub
jnp
fcmovnb
fldcw
cmp
add
nop
mov
mov
pushf
xchg
pop
adc
or
sysexit
or
add
add
imul
sub
mov
pop
adc
mov
pop
mov
lods
mov
sahf
xchg
mov
hlt
push
divb
jbe
jecxz
rclb
dec
out
aad
and
in
add
fwait
pop
popf
out
inc
add
mov
js
repnz
clc
pop
cltd
stos
sub
out
push
xchg
outsb
mov
cmpsl
push
sbbb
mov
add
jmp
jns
adc
and
xchg
lods
jmp
std
jbe
mov
xor
lahf
dec
gs
cmp
rcrb
mov
js
pop
mov
pop
fcoms
repz
shlb
add
inc
xor
es
inc
pop
cli
mov
pop
jo
roll
leave
and
lods
xchg
push
mov
mov
and
aas
sub
testb
mov
xor
out
xchg
stos
and
std
lock
in
lods
sub
nop
ret
loopne
in
jl
xor
out
pop
aaa
push
push
xchg
js
inc
adc
shll
outsb
fcmovnbe
xor
sub
sub
aad
pop
mov
test
fidivrl
out
ret
out
int3
int
mov
cmp
aas
push
sub
push
stc
and
sbb
test
add
mov
or
fs
lahf
jne
pop
cmpsl
ret
insl
jns
leave
or
sbb
shrb
cmp
push
push
inc
adc
or
push
rorl
pop
mov
ret
daa
cs
mov
and
sbb
sub
lock
dec
addr16
xchg
jmp
cmp
or
inc
xchg
adc
js
xchg
imul
aad
jno
fbstp
pop
loop
je
fbld
ret
leave
test
mov
jo
daa
inc
pusha
dec
jl
loop
adc
jle
imul
mov
mov
and
mov
imul
cmp
insl
popf
pop
pop
mov
cwtl
ret
jecxz
pop
xchg
jne
sub
lahf
cmpsl
mov
out
mov
inc
iret
imul
mov
ret
iret
push
sti
sahf
mov
jb
jge
mov
mov
cwtl
or
shl
imul
jge
and
inc
adc
cmpsb
fcompl
sbb
or
lcall
fucomip
push
dec
pusha
call
xor
xchg
enter
xlat
cmpsb
lods
push
lods
push
lock
and
sbb
jno
out
pop
out
and
movsb
mov
xchg
adc
dec
adc
fmuls
xchg
sbb
mov
fdivr
int
arpl
inc
inc
enter
negb
cli
push
int3
mov
cltd
cmpsl
test
pop
inc
insb
fisubrs
push
std
xorl
pop
mov
dec
movsl
mov
add
adc
xor
leave
dec
add
cmp
or
dec
mov
mov
sub
jp
mov
leave
mov
xchg
xchg
jb
mov
ret
mov
into
inc
push
call
fisttpl
lret
into
cmpb
xchg
dec
pop
es
sbb
fs
bnd
mov
out
push
fdivrl
lret
inc
mov
jo
fcom
filds
add
loop
aad
jl
cltd
ret
fistps
int3
xchg
xor
xchg
in
outsl
dec
fst
out
stos
in
fldl
and
mov
lret
mov
jb
stos
sub
and
push
mov
rorl
mov
jg
and
sarl
dec
nop
cwtl
pop
xchg
jg
mov
mov
push
loope
pop
sahf
pop
test
fadd
adc
mov
xchg
ljmp
sbb
not
out
mov
push
adc
aad
jns
and
mov
out
mov
insb
mov
mov
xor
mov
dec
out
jmp
mov
adc
mov
xchg
adc
pop
ror
pop
sahf
or
out
inc
cs
inc
or
fisubl
shrl
lods
mov
xchg
mov
mov
scas
pop
cmp
pop
div
cmpsl
xchg
mov
sub
imulb
pushf
stos
dec
mov
adc
sub
scas
xor
lock
in
into
ja
outsb
fwait
push
fdivl
lods
js
pop
shlb
push
cmc
pushf
test
jmp
pop
dec
xchg
pop
imulb
jmp
jnp
daa
xchg
mov
mov
fsub
and
lahf
scas
imul
mov
repnz
fcmovbe
aas
xchg
scas
lods
das
setle
into
sbb
and
and
mov
inc
dec
mov
in
dec
aas
push
cmpsl
push
jge
add
clc
and
in
sti
jl
lcall
hlt
fadds
or
mov
sub
mov
ret
xchg
lea
cld
and
repnz
pusha
or
dec
jg
movsb
xchg
cmpsb
jg
mov
mov
sub
lret
icebp
pop
mov
xor
outsb
xor
push
out
rcr
xchg
rcll
loopne
cld
inc
pop
xchg
xchg
xlat
jb
mov
stc
lcall
xchg
adc
jp
lds
or
fwait
jmp
and
shl
roll
push
or
int
gs
or
es
inc
pop
pop
daa
arpl
push
ret
mov
pusha
sbb
stos
int
outsb
and
les
add
xor
bound
movsb
loopne
dec
loop
lret
push
dec
cmp
mov
dec
mov
int3
aaa
and
insl
in
dec
or
cmp
cmp
push
push
jo
or
jmp
inc
ficompl
or
mov
jnp
dec
int
xchg
add
pushf
fidivl
pusha
xlat
ljmp
idivl
dec
call
add
and
sahf
xor
push
repnz
pop
loope
add
xlat
dec
je
mov
lods
or
cmpsl
push
jle
insb
cmc
jne
sub
test
adc
inc
sbb
rorb
jno,pt
jae
xor
mov
mov
and
sti
xchg
push
mov
mov
or
adc
daa
inc
insl
cmp
xchg
xor
jecxz
loopnew
pop
pop
cmpsb
daa
cmpsb
loopne
push
std
xchg
test
test
or
test
incl
ja
lret
pop
jmp
cmp
mov
popa
or
sub
mov
cs
in
idivl
mov
es
pusha
jmp
aam
shl
aad
dec
out
xor
mov
push
pusha
stc
std
lods
test
cmc
in
andb
adc
xchg
filds
add
lcall
dec
adcl
test
mov
xchg
lods
inc
lock
pop
adc
popa
aam
cmovl
iret
mov
add
inc
loopne
jbe
rcrb
in
notb
pop
cmpsb
sbb
sbb
add
dec
jecxz
outsl
inc
inc
pop
int
mov
xchg
adc
pushl
lods
ljmp
lds
dec
lds
and
lret
or
pop
ss
call
iret
jne
jge
shll
lret
dec
cmp
inc
dec
cmc
mov
icebp
pop
adc
in
cmpb
xchg
js
and
cmp
lahf
out
mov
insl
dec
inc
push
push
and
leave
vpmuludq
cld
sahf
mov
stos
inc
addr16
mov
sbb
adc
jge
subb
jle
and
loope
mov
jl
loopne
ret
pop
icebp
test
sub
aaa
mov
push
in
xor
js
dec
aas
jb
pushf
repnz
imul
jne
ja
mov
adc
xlat
jbe
addl
lcall
mov
sub
fucom
fmull
movsl
and
pop
mov
mov
inc
std
ret
cmpsl
sub
xchg
cmp
hlt
jbe
insl
sti
mov
cli
xchg
and
in
push
mov
das
and
out
stos
les
aam
mov
xchg
jle
mov
jge
repz
sbb
pop
cmp
sbb
aaa
int3
xor
pop
mov
mov
pop
subl
or
ljmp
xor
pop
out
or
sub
mov
aas
cli
dec
cltd
push
mov
cmp
xchg
sub
cld
xchg
mov
dec
or
dec
stc
aam
inc
fimuls
test
jno
sbb
nop
hlt
fidivrl
jbe
in
cmc
or
mov
popa
jge
cli
adc
test
lret
lcall
icebp
fs
pop
orb
mov
out
test
int3
and
add
movsb
inc
adc
test
jmp
and
pop
or
or
cs
jl
xchg
sbb
pop
add
mov
mov
fucomp
mov
stos
vshufps
jnp
les
push
popw
decl
jmp
mov
push
inc
add
dec
inc
push
cltd
add
push
mov
adc
into
push
cs
and
enter
inc
js
sub
push
fnsave
mov
cmp
lcall
out
mov
push
mov
int3
mov
jl
xchg
xchg
fistl
push
inc
movsl
clc
jge
in
gs
mov
loope
ret
les
inc
mov
add
mov
sbb
aad
xchg
std
pushf
mov
outsb
test
in
lahf
mov
mov
dec
mov
out
insb
fsubl
mov
mov
dec
mov
cmp
lods
lcall
mov
sub
popf
mov
cmpb
enter
or
jmp
pop
test
push
adc
inc
and
out
fs
mov
cmp
shrb
sub
rorl
test
adc
into
pop
test
xchg
jge
sub
in
or
loopne
pop
jne
in
daa
test
jecxz
out
pushf
gs
add
orl
icebp
mov
test
std
ljmp
test
mov
xchg
sbb
dec
test
and
sub
push
scas
sbb
mov
fwait
mov
aas
push
dec
mov
sub
mov
out
fdivs
mov
mov
jmp
dec
mov
in
rcrl
adcb
in
add
or
sub
dec
ds
sbb
add
xchg
inc
pusha
stc
lcall
fsubrl
sbb
ljmp
sbb
ja
insb
pusha
addb
inc
je
inc
mov
das
stc
sub
xchg
inc
sbbl
pop
mov
inc
pusha
call
repz
and
xor
aas
andb
test
push
pop
es
repnz
je
dec
in
jb
push
rolb
mov
pop
or
sahf
shll
jbe
aad
adc
std
and
pop
jl
stos
xor
pop
cmpl
bound
shll
pusha
dec
das
stos
sbb
or
mov
imul
inc
or
cmpl
mov
push
ret
movsl
push
xchg
cwtl
jecxz
or
arpl
into
add
mov
je
inc
adc
insb
in
mov
jno
jp
test
in
and
je
test
adc
inc
bound
sbb
add
dec
leave
xchg
cwtl
sarb
inc
mov
rcll
lods
jg
faddp
out
clc
mov
jns
pop
ret
cmpsl
pop
xor
loope
adc
pusha
mov
or
sbb
arpl
loopne
test
or
pop
aas
or
sbb
int
mov
mov
out
imul
mov
xor
pop
test
adc
mov
test
push
push
iret
pusha
je
sub
hlt
leave
out
adc
aam
push
and
inc
scas
mov
fidivrl
fstpl
and
movsl
jno
cmp
xor
mov
pop
jmp
adc
xlat
daa
mov
cmp
push
push
inc
in
lea
cmpsb
scas
popf
test
in
aas
int3
push
test
fs
inc
cltd
aam
bound
mov
dec
pcmpeqw
ficomps
lret
popa
adc
ret
stos
push
insb
mov
inc
das
cld
push
popf
inc
mov
bound
ja
ror
fldt
add
jne
stc
push
inc
cltd
fwait
cltd
mov
xchg
dec
or
lock
adc
shl
fisubrl
jae
push
xchg
call
pop
and
fnstsw
xchg
or
rol
jne
outsl
push
movl
dec
mov
mov
stos
push
jp
scas
jae
cmpsl
push
cli
inc
add
call
add
cmp
pop
cwtl
es
cmp
std
in
int
fwait
ret
insb
push
mov
sbb
dec
ja
js
push
add
mov
int
dec
xor
push
fwait
mov
xor
push
or
cwtl
popa
ret
insb
push
lea
xchg
sahf
jmp
call
jnp
inc
mov
notb
and
mov
clc
mov
je
fsubrs
outsb
call
lcall
stc
inc
jne
lret
pusha
cltd
xchg
mov
sbb
jbe
testl
mov
leave
mov
xor
jl
xchg
sbb
sbb
repnz
xchg
fdiv
lret
add
and
mov
lods
jge
fld
divl
inc
pop
mov
mov
in
mov
ss
in
insb
pop
testl
mov
mov
int3
fwait
lahf
jmp
outsl
mov
xor
pop
sbb
negb
movsl
cmc
jge
and
jbe
andb
roll
fwait
or
shll
stos
pop
xchg
shll
push
repnz
add
or
ja
jae
sub
jns
mov
mov
pop
jne
dec
out
mov
cmc
cmp
or
outsl
pop
pop
mov
mov
push
or
push
jmp
pusha
aam
xor
pop
out
popf
jge
adc
xchg
ljmp
push
popa
add
movsb
mov
add
cmc
popa
lock
mov
ja
or
sbb
mov
fucom
call
dec
out
pop
nop
jns
insb
inc
pop
xchg
push
or
mov
xchg
xchg
mov
and
ja
add
sbb
lods
or
or
add
shlb
sbb
sbb
js
test
adc
mov
fwait
and
push
mulb
mov
xchg
addb
adc
cs
mov
gs
mov
push
imul
fsubrl
divl
mov
push
shrb
repz
test
pop
cmp
daa
fiadds
inc
das
fisubrl
push
xor
or
outsb
out
xchg
xor
iret
and
xchg
xchg
fisubs
int
xchg
and
inc
sti
ljmp
jns
cltd
pop
dec
sbb
imul
pusha
lret
popf
iret
xorl
push
xchg
xchg
adc
icebp
xor
in
adc
mov
xorb
or
add
push
or
vpsubusw
or
cmp
dec
inc
push
cmp
daa
call
sbb
mov
cmpl
jmp
int
les
push
mov
mov
gs
popf
cmc
add
and
fstps
loopne
shlb
inc
inc
xchg
sahf
popf
mov
pushf
iret
lods
out
in
inc
shl
mov
into
mov
stc
and
imul
xor
push
sti
dec
xor
mov
mov
and
mov
jge
xchg
pusha
jns
cmpsb
mov
loop
ficoms
fsubrl
ja
test
cwtl
loopne
xor
in
loop
jbe
out
ffreep
in
xchg
sbb
jle
loop
sbb
sub
dec
adc
or
js
jnp
push
call
iret
rolb
mov
jns
mov
repz
aaa
xor
data16
ret
cmpsb
add
add
addr16
imul
adc
push
loope
push
and
or
in
outsb
arpl
jnp
inc
cmp
inc
mov
andl
sbb
test
adc
shlb
sbb
mov
lret
arpl
jl
mov
push
cmp
sarl
jle
xchg
and
mov
imul
xor
add
fcoms
arpl
roll
pop
xchg
xor
adc
mov
lret
cli
test
movsl
mov
adc
jae
push
test
pop
lahf
lds
and
scas
add
sahf
adc
xchg
mov
and
scas
enter
mov
cmp
inc
lret
repz
fmull
les
mov
aad
pop
cmp
fisubrl
mov
mov
mov
jg
test
cmp
mov
cwtl
inc
pop
and
jo
mov
inc
jo
pop
testb
scas
pop
jg
or
push
inc
je
ficompl
sub
xor
mov
cmp
imul
jnp
shrb
dec
ds
daa
lods
adc
enter
inc
jle
push
test
dec
mov
mov
inc
decb
int
push
lock
iret
rclb
lods
xchg
mov
nop
xor
pop
xchg
fildll
addb
rep
icebp
cmp
cli
sub
push
mov
jo
int
sar
push
aam
or
dec
add
cltd
jp
cli
repnz
mov
pop
into
mov
xchg
sbb
ficomps
cs
jbe
xor
sub
jb
orb
push
lret
adc
sub
mov
outsl
push
insl
xchg
dec
or
pop
ja
lds
ds
cltd
adc
das
jb
shlb
jo
mov
inc
inc
dec
test
leave
and
mov
ljmp
push
sbbl
adc
popf
insl
and
push
push
and
les
stos
mov
in
les
repnz
jl
imul
adc
mov
mov
inc
xchg
sbb
movsl
lds
jns
push
push
loop
cmpsl
lahf
int
outsl
mov
hlt
mov
pop
xlat
in
jecxz
insb
dec
in
int3
mov
cmp
adc
test
mov
stos
adc
xchg
xor
icebp
insl
jo
out
xor
daa
xlat
sbb
xor
shrl
fildll
enter
inc
dec
test
adc
pextrw
popf
sbb
out
cmp
ja
sub
clc
roll
fs
pop
add
xchg
and
mov
mov
mov
xlat
adcb
dec
sub
mov
ret
add
dec
add
mov
ret
into
mov
scas
sub
push
mov
add
out
pop
das
daa
mov
xchg
aaa
mov
cmp
inc
lock
jge
fisttpl
les
rolb
sahf
cli
or
scas
paddsb
jno
stos
nop
filds
out
fwait
inc
xchg
mov
pushf
push
xor
loope
adc
add
xor
xorl
into
xchg
jmp
ja
icebp
mov
push
mov
and
shr
add
loopne
dec
jo
xor
mov
mov
insb
xchg
inc
inc
jmp
mov
or
test
push
out
lret
scas
adc
aam
jp
lret
test
int
arpl
and
outsb
pop
in
ds
lock
pop
nop
int
pop
rclb
jl
jecxz
pop
pop
mov
jp
bound
fcmovnb
jl
inc
adcb
repz
popf
xlat
mov
cli
dec
jp
mov
or
push
lret
cmp
insl
sbb
xchg
sbb
mov
cli
orb
dec
cmpsb
inc
and
jg
pop
or
insb
in
or
subb
pushf
mov
je
push
fidivl
xchg
mov
jmp
jmp
pop
mov
xor
push
icebp
mov
movsl
cmp
out
mov
or
sub
cmc
imul
push
cs
daa
sahf
xor
repz
jecxz
sbb
jns
xor
xor
push
pop
or
mov
nop
cmpl
sarl
inc
inc
xchg
nop
daa
mov
mov
mov
popa
jno
dec
lods
arpl
sub
les
pop
arpl
mov
cmp
jp
nop
sbb
xchg
and
cmpsl
mov
or
xchg
sbb
xor
int3
inc
mov
popa
addr16
mov
mov
pusha
jmp
pop
dec
cmpsb
hlt
cmp
xor
jnp
mul
test
repz
adc
push
out
fwait
es
or
clc
std
in
xchg
popa
test
mov
arpl
in
test
cld
xor
mov
adcl
test
cmp
popf
nop
adc
ja
les
stc
xor
insl
jnp
jnp
dec
dec
movsl
mov
andb
mov
pop
pop
or
js
lahf
sub
rcl
popf
sub
aam
dec
jns
jl
mov
and
push
inc
sub
dec
repz
outsb
pusha
out
hlt
push
and
stos
xor
jo
pushf
std
or
gs
andb
dec
cmc
adc
xchg
or
call
or
sub
dec
jae
or
shlb
push
xchg
xor
popa
add
insl
std
mov
cmp
icebp
outsb
mov
jno
sub
outsl
cmp
stos
stos
dec
je
fld
jecxz
sbb
jne
loop
inc
movsl
inc
cli
cs
rorb
push
test
and
push
push
adc
mov
popa
and
pop
fstpt
xchg
mov
dec
int
pushf
push
dec
insl
mov
je
or
stos
xor
mov
inc
into
out
dec
aad
push
xor
xchg
pop
in
pusha
insl
bound
daa
aam
lds
movsl
inc
inc
insb
neg
xor
mov
popf
cwtl
outsl
lea
xchg
popa
jno
jmp
push
jb
inc
mov
xchg
std
pusha
lods
dec
lret
test
jp
cld
mov
pop
repz
mov
rolb
mov
aaa
xor
adc
rcrb
add
jmp
sbb
pushf
or
outsb
adc
or
or
mov
mov
das
test
stos
sub
fwait
in
repz
xchg
stc
adc
push
es
xchg
xchg
mov
jnp
xlat
sbb
cmp
fiaddl
inc
test
and
sahf
mov
ds
mov
dec
enter
or
dec
loop
mov
sarl
aaa
fsubp
and
pop
js
ljmp
shrb
adc
push
sub
and
sbb
scas
test
push
fadd
js
push
pop
pop
loopne
pop
add
sbb
add
subb
bound
sub
and
ljmp
sbb
int
adc
popf
testl
xchg
jo
jnp
fs
imul
mov
and
or
cli
inc
repz
xchg
fistpl
and
pushf
loopne
sub
pop
cmpsb
stos
popa
and
rcl
jl
mov
enter
rcrb
popf
push
pop
lahf
repz
fcoms
into
push
bound
xchg
into
mov
sarb
mov
mov
pop
and
andb
push
inc
pushl
mov
and
mov
pusha
scas
inc
push
scas
mov
jbe
adc
test
fimuls
push
mov
nop
scas
scas
aaa
fmull
in
mov
repz
add
jl
in
movsb
notb
dec
pop
enter
pop
cmpsl
cmp
add
sbb
gs
add
pop
pop
jmp
xlat
inc
popf
shrb
insl
cmpsl
xchg
dec
stos
clc
push
pop
mov
loop
loop
push
pop
std
jg
mov
cmp
orb
xchg
inc
stos
cmpsb
push
movsb
pop
rcr
mov
cmc
lock
sbb
lds
push
cmpsb
mov
push
ja
sbb
loopne
xor
test
xchg
sti
sub
es
jmp
lock
in
and
mov
and
xchg
xchg
popf
lods
hlt
icebp
xchg
mov
cwtl
pusha
popa
call
xor
pop
sahf
leave
dec
and
and
orb
pop
subl
out
repz
pop
aad
addl
jbe
xor
pushf
xor
out
rcrl
fs
mov
or
cld
not
rcl
or
pop
dec
rorl
lret
jecxz
scas
jg
mov
test
aas
mov
dec
mov
leave
aaa
or
fidivrl
dec
fimuls
jl
repz
ss
push
pop
shl
js
mov
imul
mov
jp
mov
jecxz
add
insb
mov
dec
jbe
dec
outsb
test
ds
jne
or
jmp
scas
flds
pop
push
mov
imul
rcrl
cld
sbb
out
pusha
jmp
and
icebp
repnz
shlb
movsl
push
jecxz
movups
adc
imul
jge
mov
div
icebp
fdivs
jge
adc
cli
ficoms
arpl
fistps
lahf
shll
sahf
pop
push
clc
mov
adc
and
mov
mov
pop
aas
pop
cmp
jb
int
jmp
push
xchg
popa
jge
rorb
sub
dec
lahf
pop
shrb
data16
xlat
aad
cmp
lods
imul
outsl
stc
int
aam
divl
insl
add
jno
insl
xchg
pop
jb
cli
push
push
loopne
aam
mov
push
xchg
lret
popa
pop
enter
ljmp
pop
ss
dec
xor
and
fs
das
or
cmc
jmp
cmpsb
repz
sub
jbe
jmp
pop
fisubl
jbe
leave
testb
out
or
jp
inc
stc
sbb
cmp
mov
int
std
sti
ds
js
cmpsl
aad
ror
pop
out
mov
add
mov
mov
fcompl
nop
in
sbb
add
lahf
movsl
jo
add
mov
sbb
xchg
push
cmp
cmp
gs
xorl
jb
in
cwtl
repz
or
mov
mov
xchg
sbb
sub
jb
xchg
xchg
test
push
insl
pop
inc
stc
leave
push
das
outsb
mov
sub
loopne
xor
shl
adc
enter
test
dec
push
mov
gs
lahf
cmpsb
jbe
cli
cli
cmp
imul
pop
dec
fimull
xchg
xor
out
xor
fs
not
aaa
dec
in
mov
cs
call
imul
or
push
aad
stos
inc
mov
and
jp
sub
sub
loope
push
adc
push
xor
mov
sub
std
xchg
add
test
filds
iret
push
xchg
jge
iret
jle
rsm
cmc
cmp
mov
lret
adc
sti
sti
cmc
repnz
jne
movaps
std
dec
inc
mov
cmc
or
faddp
ficompl
dec
or
notl
adc
adc
cmc
lock
pop
pop
inc
pop
mov
fisttpll
popa
bound
int
movsl
xchg
in
in
push
jo
stos
mov
loop
sahf
push
inc
xlat
jae
pop
lock
stos
fisttps
add
xor
adc
cmpsb
sbb
ret
sbb
fadd
outsl
push
rol
int
call
xchg
cmpsl
mov
dec
sub
inc
test
xchg
out
movsl
scas
pusha
add
stos
fbld
add
lret
loopne
pop
mov
pop
fwait
scas
jnp
outsb
pop
push
mov
pop
lret
mov
cs
or
sbb
sub
or
pop
sub
adc
xchg
movsl
out
outsl
push
jb
or
or
fs
xchg
sub
push
mov
stos
xor
popa
loope
push
ds
jl
dec
shr
aas
cld
xchg
les
int
jb
mov
loopne
movsl
mov
add
xchg
outsb
cmc
cli
sbb
add
int
test
rcl
inc
xor
loop
mov
sahf
sbb
dec
gs
inc
xor
sahf
leave
test
cmc
xor
jmp
xlat
inc
shrl
mov
add
jb
mov
jmp
cmp
orb
add
xchg
inc
mov
push
add
and
int
ja
clc
pop
clc
sbb
sub
insb
insb
iret
scas
in
popa
sub
lea
cmpsb
mov
es
testb
cltd
cs
xor
sahf
xor
std
in
test
adc
lahf
das
popa
add
mov
in
cld
lret
das
and
movsl
or
jp
movsl
mov
add
je
pop
mov
call
testl
mov
pusha
mov
in
repnz
dec
sti
jg
dec
sub
adcb
jnp
movsb
imul
dec
imul
sub
xchg
repnz
xor
mov
jns
mov
push
leave
fs
movsl
scas
jmp
loop
psubd
repnz
push
mov
mov
in
ffreep
adc
and
jecxz
addr16
mov
sub
movsb
adc
jmp
xor
xchg
inc
sbb
mov
nop
jae
enter
mov
nop
xchg
cwtl
imul
jo
ss
test
xchg
xor
or
add
sbb
sub
imul
xchg
loopne
and
mov
sti
inc
jmp
push
movsl
fnsave
push
aam
test
mov
push
xor
out
mov
inc
mov
sahf
clc
pop
js
fs
scas
xor
addl
lock
jg
ja
arpl
sbbl
push
or
sub
ficompl
pop
cmp
adc
ds
xlat
inc
pop
imul
sub
fwait
inc
mov
push
cmpsl
outsl
mov
push
add
jno
xor
push
lods
fs
and
jl
sub
cmpsb
or
cli
loopne
pop
mov
push
add
xchg
ljmp
pop
mov
outsl
cmp
in
sti
fildl
jg
and
ja
leave
push
arpl
test
pusha
movsb
arpl
mov
fcoms
cmpsb
pop
outsb
movsl
aaa
test
filds
pop
mov
jmp
sub
push
adc
sbb
cltd
ds
cmp
pop
adc
push
lret
mov
add
cmp
mov
fcoms
ret
clc
jmp
test
lods
into
rcrl
cltd
adc
mov
mov
mov
xor
fldl
cld
dec
data16
adc
cmp
adc
mov
or
arpl
lea
and
push
mov
loope
fisubl
out
xor
cmpsb
pop
ss
lods
ljmp
push
dec
jno
adc
mov
stc
mov
orl
add
sbb
sub
and
cmp
mov
cmp
dec
cmc
and
mov
xor
mov
lahf
out
adc
out
jo
add
arpl
mov
fnstenv
int
xor
leave
mov
lcall
mov
jnp
mov
sbb
adc
movb
cld
dec
neg
sbb
and
insl
mov
and
sarl
cmp
iret
xor
into
cmpsl
xor
push
xchg
cmpsb
mov
xchg
or
dec
mov
mov
les
lods
fisubrs
outsl
inc
insl
push
sub
rcll
ror
dec
jnp
addb
sbb
sbb
dec
sti
mov
nop
and
ret
push
fisubl
mov
pop
cmp
mov
adc
and
pop
xor
scas
sti
das
sbb
out
loope
cmpsb
push
dec
inc
test
cltd
adc
scas
lods
and
addr16
inc
jge
cmpl
add
divb
mov
pop
jbe
sahf
in
cltd
cmp
adc
mov
int3
push
and
mov
sahf
arpl
jecxz
cmp
xchg
int3
mov
test
mov
sahf
mov
gs
mov
lds
sbb
nop
cmp
ret
add
and
and
xor
mov
cli
mov
push
inc
mov
mov
mov
dec
adc
xchg
fdivl
dec
jl
bnd
mov
mov
pop
jp
and
imul
cld
push
js
scas
loope
sub
and
push
and
xchg
mov
mov
jno
fcompl
scas
dec
mov
lahf
sar
inc
cmpsb
cmpsb
sbb
mov
mov
xlat
or
clc
and
cmp
and
and
sbb
lods
xchg
in
mov
hlt
jnp
scas
repnz
lret
sbb
adc
xor
out
or
add
xchg
mov
mov
mov
mov
mov
mov
mov
xchg
test
mov
jge
loop
mov
dec
pop
sahf
jo
pop
inc
into
aad
jmp
push
push
faddp
jle
sbb
popf
lods
xor
dec
xor
sub
mov
sbb
sti
xchg
sbb
popa
mov
pop
fdivrs
pushf
ja
test
std
hlt
sub
push
test
lods
dec
fstps
mov
sub
hlt
xchg
clc
dec
in
xor
dec
cmpl
mov
pop
scas
jae
cmc
sbb
and
pop
push
pop
push
xor
mov
xor
pop
ffreep
out
sar
inc
pop
fsubrl
dec
dec
popa
test
std
add
dec
test
push
daa
das
mov
mov
dec
xchg
xchg
add
xor
pop
imul
fldl
aad
fstps
mov
inc
aaa
mov
ret
or
sbb
clc
insb
dec
inc
enter
sbb
mov
xchg
sbb
sbb
test
or
cmp
add
movsb
mov
xchg
test
fisttpll
cltd
sahf
add
xchg
iret
scas
inc
cmc
mov
xchg
lret
fwait
leave
out
popa
fdivl
fdivs
cmp
pop
xor
jmp
iret
xor
adc
test
je
inc
pop
pop
adc
add
pop
sbb
sbb
rcll
cld
and
sub
nop
push
scas
popf
int
inc
pop
out
lds
mov
jl
cmp
test
xor
repz
mov
aaa
pop
daa
mov
cmpsl
roll
stos
xchg
xchg
cmp
or
rcrl
ds
mov
xchg
and
or
or
sbb
mov
fsubr
movsb
xor
aam
cs
cmc
mov
out
or
sub
pop
or
pop
sbb
lcall
inc
fistpll
addr16
mov
cwtl
pushf
dec
mov
out
push
les
pop
bound
pop
gs
mov
inc
cmp
call
cmpsb
test
push
adc
js
mov
xor
icebp
mov
xor
test
jnp
pop
stos
je
inc
lret
fistpl
leave
dec
inc
pushf
dec
mov
lds
out
mov
mov
jns
popa
and
and
xchg
fidivrs
adc
jno
lcall
lods
cmc
aad
sub
xor
cs
fwait
inc
add
jge
sti
sbb
js
inc
and
and
add
mov
push
aaa
enter
arpl
fbld
nop
faddl
test
jmp
les
jns
push
ficomps
adc
fcmovne
xchg
loopne
add
scas
test
les
cwtl
cld
stos
fcomip
jmp
xor
int
or
jnp
push
mov
and
cmc
fs
cs
ret
xchg
test
pusha
cmp
ret
cmp
data16
inc
adc
popa
add
push
push
mov
sar
sbb
jne
xor
jnp
jnp
or
gs
ja
ds
das
or
imul
mov
xchg
addr16
fcomps
inc
dec
sbb
push
lods
ds
scas
outsb
cmp
add
pop
into
movsb
iret
lcall
and
dec
vandnpd
sarl
data16
popa
jg
shll
mov
dec
lock
lds
sbb
je
push
ficoms
jnp
jb
loope
mov
and
aad
sbb
dec
mov
mov
call
out
mov
inc
jb
mov
xchg
mov
insl
mov
pop
xchg
sub
mov
add
mov
ss
enter
sub
pop
inc
daa
insb
lds
sub
mov
loop
add
push
in
jnp
loopne
dec
call
xchg
pop
sub
popa
aaa
and
add
js
jnp
cmp
push
and
fisubrs
popf
mov
jbe
cmpl
add
je
adc
push
cmpsl
cmp
xor
outsl
test
insb
imul
fwait
lcall
in
ss
xchg
fiadds
stos
mov
jp
xchg
stos
rcrl
int
cltd
cwtl
pop
pop
enter
lods
stos
into
sbbl
xchg
mov
fs
pushf
mov
adc
test
mov
mov
out
into
bound
push
push
jbe
xor
add
xchg
inc
xchg
mov
mov
mov
pop
mov
shlb
pop
adc
dec
sbb
xchg
call
xchg
outsb
test
mov
xor
test
in
mov
sub
add
and
cmp
and
pusha
jle
out
sbb
notl
mov
mov
and
xor
int
movsb
cmc
push
push
mov
adc
mov
push
jle
repnz
repz
cmp
rcl
mov
shlb
dec
jle
sbb
cltd
xchg
movsb
mov
xor
mov
dec
fcomps
push
dec
sahf
lea
js
aaa
in
sub
sbbl
xor
ds
stc
sbb
aam
xor
jle
sahf
cs
mov
add
clc
mov
sub
push
pop
pop
int
lcall
fcmovbe
pop
in
and
popa
xor
scas
mov
fistl
sbb
out
adc
movb
and
outsl
fsincos
inc
jns
mov
std
fwait
mov
mov
addr16
into
pop
push
lods
loopne
lea
popa
mov
pop
add
push
sbb
fnstenv
lds
mov
pushl
jne
mov
imulb
in
pop
sub
sub
stc
inc
inc
jle
or
loop
mov
push
jmp
fwait
outsb
cmp
pop
stc
push
mov
jg
xor
mov
push
push
insb
xlat
dec
and
pop
mov
iret
fstpt
mov
je
or
cmpsl
popf
inc
lret
mov
shrb
cld
mov
test
sarb
push
sub
and
dec
cmp
std
aaa
mov
xchg
lods
lret
or
or
dec
or
dec
sub
gs
jp
pop
stos
out
das
jbe
shlb
fs
dec
insb
ret
xor
inc
jg
popf
xor
ss
lods
jbe
dec
mov
insb
les
sbb
cmp
jne
ds
cltd
cltd
repnz
jge
push
in
ffree
in
imul
and
loope
aas
ret
mov
jae
out
fprem
out
into
ret
cmp
push
or
sbb
pusha
je
decl
jbe
imul
fisubrl
mov
push
dec
fisubrs
xor
inc
inc
jge
pushf
or
jb
pusha
adc
aaa
loopne
pop
inc
sbb
test
dec
or
adcb
mov
fldt
xor
jge
push
lret
sti
cmpsl
xchg
mov
sbb
xchg
mov
push
mov
rcr
mov
or
imul
pop
out
sbb
mov
add
stos
popa
dec
adc
jmp
std
out
fnstsw
push
rcll
shll
or
sub
clc
lods
stos
sbb
pop
mov
pushf
mov
jl
jns
sub
adc
repz
iret
cltd
jg
pusha
ljmp
pop
shll
sub
pusha
test
jge
popa
or
fisubrs
mov
sub
sbb
rol
cli
imull
into
mov
bound
and
out
jmp
push
loope
bnd
icebp
or
ljmp
inc
jl
inc
lea
in
call
push
add
daa
dec
movsl
cmp
cli
cmp
push
dec
es
lock
dec
or
jge
daa
lods
jmp
push
mov
pusha
jbe
adc
sarb
loope
jnp
fucompp
ja
das
frstor
xor
push
aad
jns
andl
pop
pop
push
jge
shl
push
leave
out
pop
jo
je
int3
and
sub
out
jb
xor
mov
fistpll
push
lea
fiaddl
and
int3
add
or
cmpsl
push
cmc
cmp
dec
mov
sarl
popa
adc
hlt
cmp
lock
xor
adc
jnp
popf
jl
call
test
scas
out
clc
xchg
sbb
in
repnz
adc
addr16
fidivl
shrl
ds
jne
cmp
dec
lcall
shll
dec
aas
icebp
adc
lods
nop
sbb
int3
cmc
jg
ljmp
stos
xor
jae
mov
dec
xor
icebp
scas
push
rorl
add
mov
add
aas
add
xchg
int
mov
inc
mov
cmp
mov
xchg
pop
int
xor
inc
test
jmp
mov
or
imul
hlt
jp
or
inc
xor
lea
js
lret
xchg
sbb
pop
call
push
dec
popf
cmp
lods
pop
sub
cmp
aas
stos
mov
divl
sbb
sub
push
jo
mov
mov
shlb
push
adc
nop
notb
nop
outsb
mov
inc
or
or
test
je
and
fcmovne
addb
movsb
adc
sub
aad
push
dec
imul
jbe
push
bound
adc
les
xchg
pusha
adc
fst
push
into
push
cmpsl
xor
lods
xchg
or
outsl
rorb
cld
test
in
rcrb
and
out
jns
sbb
arpl
adc
out
inc
sbb
add
mov
scas
aas
stc
popa
outsl
fxch
fwait
adc
fucomp
sbb
fucomp
pusha
ret
inc
or
sub
movsl
xchg
leave
jnp
jecxz
fstp
sub
popf
or
pop
xchg
mov
incl
add
xor
repz
push
lahf
inc
jo
mov
in
pop
jge
xchg
mov
pop
dec
js
fs
aad
pop
push
ds
jg
mov
mov
xchg
out
or
adc
cmp
jge
mov
movsb
jae
fcoml
sub
sbb
pop
sbb
das
mov
lcall
das
popf
aad
add
mov
sarb
jae
int3
xor
jg
jo
jo
loopne
fstps
sub
lock
adc
mov
jae
bound
and
out
sub
pushl
ss
sbb
mov
fiadds
or
push
cmp
pusha
rcrb
sub
fdivs
fmull
and
mov
fistl
out
jns
insb
aas
mov
loop
sarb
lds
pop
test
jp,pt
inc
mov
xor
into
mov
aad
mov
pop
inc
stc
jg
scas
out
fnstenv
jo
dec
imul
mov
ds
inc
mov
adc
mov
sub
pop
imul
inc
push
or
add
test
sbb
mov
mov
xlat
incb
adc
gs
ficoml
mov
fcmovb
das
jle
repnz
xchg
in
sub
clc
sub
icebp
and
add
push
shll
imul
test
add
in
pop
les
prefetch
push
int
cmp
mov
mov
dec
sub
mov
push
inc
testl
inc
push
lcall
pop
inc
sub
pop
test
movsb
pop
mov
lret
sub
mov
mov
mov
mov
mov
in
fldt
testb
and
arpl
in
mov
xchg
movb
fldenv
cs
mov
xor
cltd
insb
mov
imul
jo
es
push
pop
adc
int3
and
mov
and
mov
sbb
out
jl
insb
inc
xor
pushf
scas
movsb
lahf
mov
int3
cmp
xchg
mov
inc
pushf
jb
mov
aam
add
adc
xchg
dec
push
mov
mov
adc
or
and
aad
add
push
test
xor
add
popa
sub
xlat
mov
mov
mov
js
andb
subps
scas
int3
push
pusha
or
dec
imul
xor
cmpsb
pop
les
sbb
pop
xlat
rorl
leave
mov
bound
or
dec
pop
mov
jno
mov
pop
rorl
fstpt
jne
dec
inc
jle
mov
pop
arpl
mov
jle
je
add
scas
jne
cmpsl
jge
test
mov
ss
fmull
ss
addr16
test
add
pop
outsl
cwtl
add
jbe
stos
inc
arpl
subb
add
mov
xor
or
push
adc
aad
and
fisttps
inc
ret
nop
lock
pop
adc
cmp
movsb
mov
loopne
sub
ljmp
js
enter
out
cld
push
mov
negb
mov
push
sbb
aam
sbb
mov
sbb
sub
cmc
rorb
js
loope
jns
inc
das
jno
lds
mov
sbb
jo
aam
xchg
dec
gs
cmp
adc
pop
ds
movsb
push
xor
mov
icebp
push
lods
jmp
fwait
ja
and
push
mov
pop
push
xchg
mov
iret
or
add
outsb
gs
pop
inc
lret
cld
jp
shlb
adc
cmp
sub
mov
movsl
dec
push
push
hlt
jne
mov
dec
cmp
mov
or
pop
jne
sub
push
dec
in
out
js
jmp
arpl
xchg
shrb
push
xchg
or
sub
mov
gs
jne
stos
mov
inc
mov
fs
test
push
je
out
cwtl
dec
add
jle
repnz
dec
mov
idiv
jmp
mov
lock
icebp
xchg
mov
dec
pop
sar
or
sub
dec
in
lods
gs
repz
cmp
dec
fnstenv
fdivrp
xchg
push
bound
dec
push
dec
inc
lods
movntps
xchg
xor
xor
in
lea
shlb
fdivrs
repnz
sub
popa
sub
mov
push
sub
cltd
and
jne
mov
addr16
xor
mov
dec
lahf
mov
xchg
jb
jno
int
lods
adc
and
negb
int
decb
sub
xchg
cltd
jo
dec
inc
dec
mov
in
mov
out
mulb
pop
mov
stc
cmp
jge
jmp
cmpsb
xor
xor
xchg
jp
movsl
xorb
je
fnsave
xlat
xor
movsb
roll
dec
push
jno
daa
adc
aaa
xor
test
pop
dec
out
inc
jne
mov
ret
push
test
call
cmp
sbb
cli
lahf
mov
pop
js
pop
shlb
pusha
sub
jl
inc
inc
stc
sub
in
jae
lret
stos
insl
push
pop
ret
pop
xchg
sbb
call
push
mov
dec
push
jle
pusha
sbb
sbb
out
inc
sbb
dec
les
xchg
sarl
mov
repnz
adc
ljmp
mov
sub
int
xor
inc
outsb
add
push
inc
bound
shll
pop
adc
push
sar
hlt
out
pop
push
data16
push
popf
lahf
dec
dec
das
dec
cmp
daa
xor
ret
nop
dec
in
dec
xchg
pop
mov
pusha
add
pop
push
ja
sub
ss
pop
pop
pop
adc
jle
cwtl
dec
and
repnz
loop
add
add
dec
jo
add
sbb
hlt
cmpsb
mov
test
int3
push
and
pop
jbe
shll
andb
jg
daa
xchg
xor
lret
jle
dec
jno
cld
dec
mov
lret
in
cwtl
sub
enter
mov
or
xor
and
fmuls
out
sahf
mov
ss
stos
jb
jmp
shrb
pop
cwtl
sbb
call
leave
cltd
fisubl
enter
lahf
mov
aas
leave
and
adc
lods
test
movsl
test
jl
lea
loop
cmp
pop
cld
imul
lods
add
push
add
jae
popf
sbb
shrl
data16
bound
push
add
imul
sbb
adc
imul
adc
andb
dec
fadd
jns
in
mov
arpl
lret
xchg
lods
mov
xchg
cwtl
pop
add
pop
movsb
int3
in
subb
xor
push
das
mov
cli
xor
arpl
xorl
pop
sarb
xor
adcl
mov
mov
mov
dec
mov
or
js
imulb
lods
stos
mov
shlb
sub
adc
sub
test
inc
xchg
inc
popf
iret
rcll
negl
sbb
fs
mov
and
mov
mov
adcl
and
xor
pop
xor
rorl
sub
cli
pushf
loopne
aad
jge
fildl
mov
push
pusha
jae
fists
cmp
or
mov
stc
out
mov
aam
xchg
stos
aam
dec
dec
mov
mov
imul
sbb
jecxz
sbb
mov
mov
jge
insb
fucomp
sub
or
bound
repz
and
mov
xlat
xchg
mov
push
adc
sub
xchg
xor
sbb
sbb
mov
leave
int
arpl
cmp
mov
negl
xchg
fsubrl
shr
push
in
pop
mov
and
push
inc
dec
movnti
cmpsb
or
xchg
cs
mov
adc
push
xchg
in
test
mov
sbb
sbb
lds
fcmovnb
pop
mov
jae
jb
stos
jg
pusha
pop
inc
out
xor
sarb
in
out
aad
sbb
movsb
sbbb
mov
sbb
into
cmp
mov
lods
addr16
stos
pop
sub
jge
ret
pop
push
pop
push
in
rclb
sbb
pop
mov
push
mov
push
push
sarb
mov
jecxz
arpl
sub
xchg
sbb
xchg
mov
or
mov
dec
andl
sub
ret
mov
pop
cld
lds
xchg
and
adc
cld
sub
fcmove
cmovge
push
and
push
test
shl
sbbl
aam
cld
push
xchg
push
adc
stos
and
mov
insb
mov
dec
jg
fldl
dec
fstpl
aam
jno
aas
inc
je
pop
xchg
ja
push
ffree
lret
cmp
jbe
jge
gs
cmpsb
outsb
cmc
daa
dec
cmpsb
pusha
jecxz
sti
out
lods
add
into
push
cmc
adc
not
fistps
push
pop
pushf
add
jecxz
std
xor
out
or
xor
jle
sbb
inc
bnd
into
jo
and
mov
movsb
adc
jmp
test
scas
popf
push
adc
pop
fistpl
js
mov
cmpsl
push
ja
adc
cltd
xchg
ja
mov
jnp
push
das
pop
loop
les
dec
mov
dec
add
enter
push
enter
out
xchg
repnz
push
mov
adc
sbb
pop
mov
mov
mov
push
scas
insl
xchg
notb
stos
scas
xlat
add
xlat
hlt
jecxz
or
loop
sub
cltd
loopne
in
test
data16
cli
mov
fucomip
mov
jmp
aaa
adc
stos
pop
or
shlb
test
das
je
pop
icebp
les
mov
mov
daa
jne
divb
sub
adc
jbe
dec
sub
std
call
xchg
adc
xchg
ret
cltd
lcall
cmp
sub
outsb
add
aad
xor
or
sbb
push
jbe
jo
mov
out
add
xchg
pop
test
jp
in
mov
sbb
dec
jge
xor
lcall
mov
xor
or
ljmp
arpl
cmp
ljmp
fcoms
cmp
push
sub
fsubrl
pop
fisubl
cld
popf
mov
add
or
lcall
pop
pop
cmpsl
adc
xchg
addr16
fisubs
sbb
adc
std
mov
xor
mov
cld
in
mov
xchg
push
cwtl
out
out
inc
neg
rclb
sub
lcall
sbb
push
cmpsb
mov
mov
xchg
sub
lret
push
arpl
pop
sbb
pop
js
mov
loope
enter
add
push
or
lods
and
ljmp
std
imul
cmp
shlb
mov
pushf
addr16
jne
outsb
dec
outsl
xchg
scas
xchg
ja
lcall
sbb
dec
jne
inc
loop
mov
jae
jbe
ficompl
ret
fwait
dec
sbb
mov
repz
lahf
add
jns
test
fistps
rdtsc
jle
clc
add
cmpsl
andl
pop
in
dec
mov
xchg
or
inc
xor
jns
pushf
sbb
inc
arpl
sbb
mov
js
outsb
lahf
fdivrl
push
xor
add
cmp
mov
ja
ja
and
sbb
aad
jge
xchg
cli
mov
mov
es
loopne
je
aas
jno
pop
imul
push
xor
lret
add
push
jno
cmpsb
cmove
sub
xchg
in
lds
inc
and
fwait
jle
xor
dec
or
imulb
cmp
insb
orl
mov
sarl
pop
lret
adc
dec
mov
sbb
or
imul
jmp
ds
cs
xchg
mov
mov
mov
int
push
stos
xor
inc
jbe
je
inc
jmp
repnz
add
mov
sbb
sbb
mov
push
stc
fsubrl
pusha
pop
sbb
jne
ds
lcall
sbb
imul
insl
jbe
and
mov
jnp
sbb
stos
push
mov
std
inc
movsb
mov
add
mov
cmpsl
pop
inc
or
pop
mov
addr16
mov
sbb
push
xor
rolb
add
cmpsb
jnp
pop
push
ljmp
iret
lret
jg
xorl
fcoml
fdivrs
jl
xor
mov
xchg
push
pop
repnz
hlt
sub
sbb
dec
add
xor
mov
xchg
into
cmp
mov
and
or
repz
adc
call
xor
gs
or
and
or
int
mov
loop
dec
xorb
pop
mov
imulb
inc
lock
xor
xchg
jmp
outsl
xchg
hlt
sub
dec
and
loope
addb
xlat
std
xchg
mov
and
shrb
bound
cwtl
and
xchg
push
mov
push
sbb
inc
sub
in
and
adc
in
mov
dec
loope
xor
xchg
cmc
imul
pop
and
xchg
pop
jo
ss
push
lret
and
lcall
jl
sbb
cltd
mov
pusha
jns
or
aad
aam
or
inc
mov
popa
pop
jl
and
lea
inc
stc
and
cmp
sub
shll
shll
daa
add
push
or
push
out
and
push
xchg
arpl
out
push
aaa
sbb
pop
test
mov
cmp
rclb
inc
sbb
je
out
cwtl
lret
testb
mov
test
loope
gs
xor
out
adc
movsb
mov
xchg
cmc
mov
cltd
cmp
xchg
call
cmp
jo
mov
add
fistps
cmp
lahf
ror
sub
cmpsb
insl
or
mov
mov
repz
les
cmp
clc
sbb
pushf
add
mov
mov
into
cmp
xlat
bound
xchg
dec
int
add
movsb
icebp
pop
sbb
mov
movsb
test
pop
mov
movsl
daa
add
les
jbe
in
or
insl
mov
xchg
aaa
push
dec
lahf
cli
cs
cltd
stos
mov
push
in
pop
xchg
shlb
mov
cltd
mov
addr16
inc
ljmp
cli
cmc
xchg
push
jl
icebp
icebp
mov
lods
std
rcll
push
add
fs
imul
mov
stos
cmp
dec
cmpsb
add
inc
dec
fmuls
pop
adc
shr
xchg
popa
adc
xlat
loope
jns
mov
add
divb
int
xchg
and
or
insb
out
jbe
xchg
sub
bound
stos
insl
adc
imul
jo
cmp
lods
insl
lret
adc
popf
mov
inc
push
cld
add
test
mov
int3
sub
stc
mov
adc
repnz
and
sub
cmpsl
rcrb
inc
push
imul
insb
pushf
shlb
mov
cli
inc
dec
sub
stos
dec
xchg
push
rol
dec
cmp
test
sub
test
xor
mov
dec
inc
lret
stos
push
sbb
stc
aad
pop
xorb
test
cmp
or
sub
mov
jmp
pop
divb
cmp
jbe
push
int
insl
mov
imul
ds
adc
lret
mov
sbb
mov
inc
arpl
ljmp
jnp
pop
and
mov
out
loop
dec
xchg
or
push
jmp
pop
rorl
or
je
jmp
into
mov
lods
js
jb
inc
in
jnp
and
aaa
cmp
not
fwait
add
or
sbb
inc
and
fmul
xchg
xor
or
stos
popa
inc
js
imul
sub
dec
push
mov
xchg
dec
jno
int3
std
lds
jbe
data16
cld
sbb
and
sahf
fdivrl
mov
mov
pop
or
out
jmp
sub
cmpl
add
inc
aaa
arpl
xchg
rcr
popa
cmp
pop
test
and
in
mov
or
cli
mov
cmp
sti
les
outsl
cmp
cli
or
pusha
xchg
sub
jbe
loop
fisttpll
xor
mov
lcall
loope
inc
clc
test
push
cmp
fildll
add
or
sub
ja
pop
jecxz
xchg
jle
sahf
fildl
and
push
ret
add
push
mov
call
clc
bound
ds
sahf
in
and
mov
fs
fidivs
mov
notb
cmp
push
xchg
xchg
inc
scas
sti
mov
aad
pop
mov
stc
loopne
and
popa
lahf
imul
push
sti
sub
idivb
and
fildll
orb
dec
pop
pop
mov
xor
pop
and
inc
cmp
ret
fisubrl
or
pushl
mov
int
repz
and
mov
shll
ficomps
xor
cli
add
sub
lahf
xor
not
or
data16
push
jo
int3
pop
aad
push
cmp
mov
fnsave
das
xchg
pop
pop
jge
add
dec
fucomi
mov
mov
je
in
pop
stos
dec
and
xchg
popa
pop
mov
and
push
and
pop
iret
and
xor
xchg
or
seto
mov
pusha
dec
add
insb
outsb
pop
jp
or
jae
prefetch
lock
fisubs
movsb
or
pushl
rorl
mov
std
sbb
or
push
rclb
push
out
sub
imul
aaa
ds
mulb
jp
imul
inc
ret
enter
inc
mov
jns
addr16
jno
mov
push
sbb
in
js
jb
movsl
push
pop
cs
fildl
push
add
outsb
test
test
scas
fmull
mov
loope
rolb
nop
adc
push
sbb
punpckhdq
xlat
push
pop
cmp
xchg
sbb
bound
stos
ret
cs
daa
jne
sbb
mov
xor
sub
orl
xchg
lods
mov
bnd
sbb
or
test
iret
or
or
xchg
loopne
add
sbb
stc
pop
lods
or
xchg
and
cmp
mov
push
cli
fs
out
mov
lret
cmp
ret
int3
sbb
lcall
mov
shlb
lret
jnp
aad
adc
mov
jmp
lcall
leave
jbe
mov
inc
fiaddl
jae
dec
mov
loop
insl
sub
insl
out
addr16
cmc
lret
pushf
push
enter
and
or
push
lods
jge
cmp
enter
mov
pop
clc
jecxz
mov
fildll
nop
ficompl
pop
ja
pop
and
dec
sbb
arpl
lds
xor
in
jecxz
loopne
sbb
xchg
shrb
pop
lods
cli
leave
ja
mov
lea
lods
sub
fsubs
add
imul
pop
sub
loopne
add
xor
adc
addb
jecxz
cs
js
pop
enter
push
lahf
es
arpl
adc
popl
fadds
dec
jl
push
xchg
xchg
add
xchg
test
pop
out
mov
mov
test
add
fmuls
mov
andl
pop
in
inc
sbb
stc
subl
xchg
cmc
fnstsw
jmp
push
lods
jno
inc
insl
mov
pop
cmp
inc
mov
pusha
mov
cmp
ret
or
inc
jp
cmpsb
and
mov
dec
or
outsb
int
ret
mov
into
inc
push
cwtl
sub
stc
mov
sbb
sahf
xchg
in
jns
in
stos
repz
shl
sub
dec
sahf
out
in
push
loope
adc
sti
jns
cmp
out
xor
or
and
xlat
mov
mov
call
dec
enter
test
pop
pusha
dec
cmp
jo
repnz
jno
adc
adc
mov
and
movsb
adc
xchg
pop
pop
xchg
in
iret
mov
scas
ds
add
jbe
sub
outsl
jo
aas
fs
xchg
les
sbb
jns
subb
das
popa
xchg
pop
pop
sub
cmp
sbb
mov
cltd
lods
or
xchg
push
hlt
loopne
jb
sahf
push
add
nop
icebp
out
das
push
ret
push
adc
mov
pusha
lcall
aaa
cmc
ja
test
shrb
add
push
mov
lret
dec
xchg
pop
lea
pop
loop
fs
ja
ljmp
hlt
int3
add
sub
pop
loop
ret
lods
inc
scas
push
testl
pop
inc
push
cmp
lcall
imul
mov
fmuls
sbb
cmpsb
and
jbe
mov
xor
mov
mov
pop
iret
xor
mov
and
das
test
ret
in
inc
sub
lock
mov
and
push
cmp
mov
and
aam
or
test
rclb
sbb
pop
mov
pop
or
mov
je
arpl
stc
jo
mov
test
mov
or
xchg
jmp
rcll
mov
nop
dec
scas
daa
pop
fistpl
mov
mov
xlat
clc
mov
adc
daa
cmp
mov
mov
mov
push
test
xorb
cmpsl
hlt
incb
ret
cli
pop
enter
rcll
pusha
and
test
sbb
scas
adc
sub
adc
fmuls
sbb
xchg
movsl
fistpl
popf
mov
rcr
cmp
aam
xor
push
xchg
inc
add
mov
mov
mov
fldenv
push
inc
adc
mov
xchg
jmp
inc
lcall
outsl
xchg
test
dec
lods
jecxz
jno
inc
dec
jbe
add
or
mov
add
fs
and
loopne
xor
fdivl
mov
in
sub
lahf
test
mov
leave
xchg
jmp
or
lock
push
into
xor
imul
dec
add
push
rorb
mov
rcl
rcrb
dec
repnz
push
popa
sahf
dec
mov
add
fmuls
andb
fsts
pop
gs
call
dec
pusha
and
out
adc
xor
cmc
stos
and
adc
xchg
sbb
loopne
push
repnz
scas
cmpsl
cli
insl
andb
lock
xchg
lcall
mov
pop
dec
cwtl
dec
cwtl
sub
imul
flds
cmp
mov
mov
inc
pusha
jnp
inc
jns
and
mov
pusha
inc
rcll
icebp
and
sub
xchg
mov
mov
mov
or
cli
push
adc
jl
push
in
fwait
adc
subl
jo
mov
aas
dec
fucompp
jge
fnsave
xorb
les
mov
loopne
push
iret
inc
add
adc
pop
push
mov
adc
pop
enter
fistps
aam
push
mov
shlb
addr16
xchg
outsb
ja
ljmp
imul
jbe
lret
sarl
int
cmpsb
mov
fdivrl
insb
out
je
popa
cmpsl
mov
out
scas
mov
push
push
cmpxchg
inc
mov
cmp
xor
lea
out
int3
inc
mov
stc
fwait
test
add
push
in
nop
or
nop
add
pop
xchg
xor
fwait
popa
mov
or
rorb
aad
xor
adc
mov
mov
lahf
inc
adc
mov
and
add
push
lahf
jbe
loop
aaa
scas
pop
xchg
ss
nop
repz
int
out
xchg
mov
and
les
in
mov
imul
push
xchg
cmc
fstpl
push
popa
mov
fbld
adc
adc
xor
add
push
pop
adc
sbb
test
dec
sub
loopne
lods
fucomip
popl
bound
pop
pop
jecxz
jmp
out
or
shll
out
aaa
outsl
adcl
insb
mov
lret
dec
sub
out
dec
jns
test
dec
leave
xchg
dec
or
icebp
in
push
sub
inc
ds
aad
ss
ret
adc
outsl
call
jne
das
test
sti
cli
jbe
sub
sbbb
add
dec
lret
cmp
xor
sub
mov
dec
outsb
cs
xchg
push
stos
test
adc
hlt
mov
es
add
setg
sarl
test
movsl
add
mov
gs
aam
imul
loopne
lahf
pop
push
fisubrs
rcr
inc
cvtdq2ps
std
pop
mov
mov
jbe
and
mov
push
dec
cmp
push
adc
fadds
cmp
aad
mov
daa
ja
popa
or
xor
fidivrs
dec
adc
or
push
leave
rclb
pop
push
add
stos
loopne
mov
xor
xor
or
in
scas
mov
jl
int
fdivrs
bound
fistpl
scas
fisubrs
push
ja
popa
adc
decb
add
test
mov
aaa
leave
mov
ret
jne
push
shlb
jp
sahf
sbb
xor
test
mov
shl
inc
mov
loopne
aam
std
mov
fidivs
xchg
xchg
rorl
jno
ljmp
or
mov
sti
shll
push
out
push
adc
jae
jmp
add
mov
fs
scas
or
pop
neg
lds
or
in
orl
fldl
cltd
push
lods
stos
xlat
mov
mov
sub
jnp
jp
js
and
stos
pop
mull
push
mul
sub
ljmp
notl
arpl
pop
adc
cmc
aam
addr16
sti
adc
ljmp
dec
sub
jnp
jmp
add
push
dec
inc
cmpl
xchg
icebp
mov
pop
dec
sub
lcall
xor
mov
iret
mov
xchg
xchg
mov
or
gs
bound
lret
repnz
adc
jmp
sbb
add
fidivl
pop
leave
mov
lods
test
pop
nop
and
int
xchg
cmp
into
jecxz
fnstcw
fistps
jge
sub
mov
lcall
push
sub
pop
mov
dec
dec
iret
mov
lods
jl
jno
or
adcb
or
mov
out
mov
ficomps
sub
adc
and
jns
xor
int
imulb
in
lods
dec
out
sbb
mov
add
test
inc
lods
cmp
mov
in
lock
stc
test
cmp
orb
xlat
pop
lret
inc
mov
jecxz
inc
gs
divl
add
and
mov
mov
sbb
xchg
jns
sub
xor
lret
iret
mov
inc
push
imull
out
sbb
push
xchg
popa
adc
call
insb
jg
lcall
jno
xchg
pop
stc
in
add
push
popf
mov
mov
testb
push
shrb
pop
js
scas
sahf
idivl
push
std
sbb
lds
je
int3
xchg
in
popa
jnp
add
ror
imull
hlt
lods
inc
adc
xor
xor
iret
pop
inc
mov
mov
lock
mov
loopne
pushf
lret
cltd
jp
js
inc
adc
shlb
and
pop
push
es
jne
lcallw
sbb
call
sbb
jecxz
popf
jno
and
fsts
outsl
jecxz
aam
pop
nop
cmp
repnz
adc
jmp
cmp
hlt
push
pop
cmp
out
imul
sbb
insl
mov
push
insl
inc
mov
lret
pop
jp
aas
inc
and
es
bound
inc
clc
mov
sbbb
cmp
push
sub
shll
stos
sub
daa
imul
cmp
xchg
test
fadds
stc
and
xchg
cld
sub
jno
inc
addr16
or
imul
mov
pop
xchg
jmp
push
imul
mov
bound
cmp
pop
es
pop
das
pop
jo
fisttps
jg
mov
mov
aam
divb
loopne
insl
icebp
testl
lock
daa
jmp
sbbb
stos
repz
scas
int3
scas
ret
mov
je
add
test
xchg
cmc
mov
push
je
push
or
dec
push
mov
test
je
divb
jge
sub
sub
push
dec
out
ror
or
mov
adc
test
es
jge
jmp
scas
ret
dec
sarb
nop
add
xchg
das
insb
dec
xchg
sbb
mov
aaa
jl
xchg
aad
loop
mov
push
std
ficomps
adc
inc
pop
sub
cmp
pusha
xchg
inc
jbe
adc
dec
enter
lcall
and
xchg
popa
pop
inc
adc
dec
mov
outsb
outsb
dec
sbbb
jle
pop
notb
push
das
sarb
aam
jns
mov
daa
mov
mov
test
nop
pop
push
push
pushw
insb
cmp
outsl
fwait
mov
sbb
xchg
fninit
out
enter
jb
pop
add
fmuls
push
sub
pop
inc
jecxz
out
cli
xchg
mov
and
arpl
jne
jp
xor
popa
call
xchg
data16
lock
sbbb
loope
pushf
leave
dec
mov
test
idivl
jmp
jno
and
std
iret
clc
mov
sbb
xchg
je
ja
sub
repnz
dec
addl
or
inc
mov
in
negl
in
or
lret
repnz
fcoms
xor
mov
sub
stos
enter
adc
ss
dec
xchg
insl
ret
fldcw
das
mov
cltd
sbb
imul
inc
jnp
xchg
js
jae
loopne
adc
jle,pt
xor
outsb
andl
and
dec
xchg
scas
mov
and
lahf
xor
ljmp
sub
sahf
mov
push
dec
out
pop
jge
cmp
shlb
loopne
add
fwait
rolb
inc
addr16
sarb
sar
hlt
mov
push
xlat
fisttpll
orb
js
push
adc
push
add
arpl
gs
popa
push
sbb
idiv
sti
dec
js
scas
ss
fincstp
mov
sbb
push
mov
push
inc
inc
xchg
mov
xchg
push
sbb
xchg
add
mov
mov
jge
mov
je
jp
test
mov
cld
dec
fwait
xor
adc
imul
add
stos
lock
xchg
jg
sub
inc
jmp
nop
add
aad
inc
mov
and
and
out
das
mov
daa
push
std
js
fidivrl
push
scas
dec
pop
movsl
rcrl
cmp
jmp
rol
cmp
aaa
push
or
pop
push
inc
push
stos
mov
push
xchg
js
nop
inc
jae
or
loopne
adc
cmp
mov
push
loopne
inc
cmpsb
fisubs
xor
sbb
pushl
inc
xor
lret
out
outsl
adc
js
sbb
or
xchg
pop
iret
and
sub
mov
push
incb
jns
add
jne
xchg
int3
cs
fwait
jo
inc
xchg
jg
addb
adc
sbb
shll
push
inc
and
push
sbb
mov
out
les
and
mov
and
loop
orb
xchg
ds
sbb
ror
fistl
push
fstps
fcompl
das
add
mov
mov
mov
sbb
ds
andl
shr
test
jbe
sub
scas
adc
enterw
cmp
mov
lea
outsb
stos
call
sbb
mov
addl
icebp
ljmp
mov
aaa
mov
sbb
roll
inc
fisubs
sbb
fsts
jmp
movsl
lds
addr16
out
push
dec
sbb
xchg
sub
cmp
inc
mov
aad
jecxz
enter
sti
cmp
pushf
mov
inc
fisttpll
xchg
ds
clc
flds
push
mov
jne
shlb
mov
in
sbb
jmp
sub
mov
push
mov
push
jg
fdivl
push
mov
fwait
add
hlt
lcall
xor
nop
lea
jb
add
cmp
test
push
pop
outsl
hlt
mov
out
adc
notb
out
cmp
push
push
jmp
and
clc
push
mov
inc
fucomi
cmp
loope
mov
pop
ja
inc
imul
incb
push
push
test
popl
fs
fsubl
stos
cmp
adc
popf
cmp
call
call
cmp
sub
incl
jle
mov
dec
jp
dec
sahf
pop
int
loope
jmp
sub
repz
xchg
nop
idivb
or
push
fld
jbe
push
inc
jae
mov
scas
shll
iret
inc
jns
mov
cmp
enter
jns
decb
shlb
je
dec
pusha
cmc
add
nop
bound
in
mov
mov
and
pop
inc
sbb
and
xchg
in
pop
daa
pop
xchg
cmpl
xchg
jmp
mov
add
cmp
xor
loope
fisubl
jne
jg
pop
imul
mov
and
pop
cmpsl
fidivrl
cmp
out
test
dec
in
xor
xor
roll
bound
inc
jbe
push
fwait
imul
push
xchg
or
mov
je
pop
mov
mov
daa
cmp
into
push
inc
cwtl
loopne
add
dec
jmp
dec
arpl
or
sub
mov
aad
test
sub
mov
ficoml
mov
or
out
mov
cmp
iret
mov
mov
rol
pop
sahf
mov
dec
push
repz
xchg
pop
sbb
inc
mov
lahf
hlt
xor
daa
xorl
push
stc
shlb
shlb
or
push
out
sti
in
push
add
jmp
inc
ja
adc
stos
and
addr16
repz
out
xor
xor
roll
cmc
dec
stos
test
lds
imul
ret
rclb
add
jns
push
sub
cmp
jl
fimuls
mov
mov
test
inc
lret
cmc
in
mov
ss
inc
addb
stos
xchg
and
std
dec
pop
sbb
add
xchg
repz
stc
push
lds
and
inc
sub
lcall
nop
mov
in
lret
push
ljmp
int3
inc
ret
add
aas
movb
mov
daa
mov
cmp
je
imul
stos
scas
mov
push
push
js
dec
lcall
mov
inc
jg
jnp
jne
test
nop
jo
and
adc
push
xchg
sbb
adcl
mov
xor
call
addb
inc
pop
mov
xor
fstps
and
gs
lret
inc
pushf
aam
lahf
jl
sub
xchg
jb
push
mov
inc
jne
adc
cs
push
popf
xor
out
addl
sub
sub
push
cltd
test
scas
sbb
xchg
stos
jbe
movsl
push
je
in
pop
loop
inc
xor
movsl
cs
js
cmp
test
mov
sub
popf
push
add
test
cmpsl
xchg
sti
sarb
rolb
or
sti
ret
jle
sbb
movsb
pop
jmp
out
xchg
inc
xor
adc
and
sbb
fimull
dec
adc
mov
popf
pop
pop
and
jns
ljmp
das
cmp
lods
sbb
ljmp
add
xlat
xchg
bound
cmp
ret
xor
inc
jmp
xchg
in
sahf
and
lcall
jecxz
std
test
fmull
xor
sti
jmp
ret
dec
mov
stc
xlat
xchg
je
cwtl
in
std
es
jmp
push
mov
nop
sahf
repz
sahf
test
jb
xchg
outsl
mov
icebp
push
adc
mov
repz
addr16
xchg
cs
cmpsl
clc
add
cmpsb
sbb
imul
xor
and
loopne
sbb
or
jnp
fwait
repnz
in
add
sbb
xchg
xchg
mov
mov
sub
out
pusha
lds
mov
mov
lcall
test
dec
lret
sbb
fcmovnb
lods
fadd
sbb
in
int
aam
movsb
mov
or
xor
fcoms
and
push
add
sub
movsb
scas
and
jo
sbb
push
into
cs
sub
insb
fmulp
sub
loopne
popf
mov
inc
mov
xlat
lcall
mov
push
popa
ljmp
pushf
jmp
popf
xchg
cmp
ficoms
roll
loopne
mov
push
nop
add
popf
mov
scas
push
in
dec
mov
mov
xor
scas
and
xchg
jae
out
xchg
outsl
in
cmp
sbb
loopne
lods
fidivrs
inc
test
punpckldq
fistpll
push
or
outsb
rcrl
or
mov
xorb
fnstsw
int
pop
add
push
out
xor
jmp
xor
push
je
and
ds
sub
dec
xor
mov
hlt
shl
and
jg
sarb
sub
enter
xchg
pop
adc
iret
jbe
filds
pusha
pushf
or
dec
xchg
dec
incl
ss
iret
cwtl
or
cmp
xchg
push
and
loope
scas
sub
stos
add
mov
push
subb
lods
in
pop
lret
sub
mov
cs
jp
sbb
xchg
roll
clc
adc
dec
dec
add
jne
test
mov
int3
fucom
pop
mov
mov
out
and
leave
into
cltd
jno
dec
test
add
mov
mov
dec
sub
test
aas
dec
pop
daa
add
push
add
nop
sbb
filds
aad
sbb
shlb
pop
lea
jp
xchg
imul
xor
mov
sub
stos
cmp
imul
cld
or
loopne
push
out
xlat
in
add
inc
out
or
ret
mov
push
xchg
aaa
sbb
pop
cmc
movsb
adc
mov
cs
mov
repnz
sarb
scas
push
addr16
in
scas
addl
scas
mov
xchg
inc
mov
mov
gs
xchg
jae
cwtl
mov
cmpsl
xor
push
or
xlat
sbb
adc
lock
rclb
sbb
orl
pusha
mov
mov
aad
daa
nop
in
insl
lods
adc
add
inc
sbb
incb
sbb
sbb
les
mov
jne
sub
inc
std
and
in
mov
sbb
add
shrl
inc
fwait
sub
pusha
dec
testl
sbb
popf
mov
sub
insb
ret
mov
xor
stos
mov
mov
mov
cmp
mov
sub
shrl
hlt
mov
jo
enter
xlat
push
sti
ds
rcrb
out
xchg
test
sti
popa
outsl
shll
add
hlt
cmc
enter
sti
mov
jmp
pop
jbe
daa
xor
cmp
iret
or
call
inc
in
je
fsubrs
test
push
dec
insb
out
xor
aad
jmp
mov
or
stc
jg
cmpsl
in
int3
repnz
sub
jo
jmp
lods
fsubrs
cmp
xchg
nop
xlat
rcll
fucomip
mov
xor
aaa
outsl
or
jmp
xor
inc
mov
dec
mov
sub
xor
cmp
ja
nop
pop
es
mov
notl
pop
push
push
dec
jge
inc
fs
loopne
xor
and
aam
cmovo
mov
lss
aaa
outsl
cwtl
and
sti
nop
outsb
pop
mov
and
jno
adc
sarl
or
cld
and
push
dec
cmp
testb
push
inc
and
xor
into
dec
repnz
pop
pop
insb
aad
push
or
jmp
fidivl
and
inc
push
bound
movsb
cmpb
aas
cmp
push
inc
mov
add
sbb
and
ljmp
inc
fists
or
test
mov
cmp
punpckldq
push
push
loop
push
sahf
xchg
ja
shrb
lods
mov
lret
sub
mov
pushf
pop
inc
push
xor
subl
jp
push
outsl
bound
push
aam
adc
daa
sbb
cmpsb
stos
je
mov
jnp
push
or
cmp
sub
shr
jnp
xchg
stc
jp
subb
aas
sub
xchg
and
sub
jp
sub
sbb
mov
sbb
sbb
inc
or
push
fimull
out
aaa
int3
scas
dec
add
insb
iret
sbb
adc
hlt
cmpsl
mov
add
mov
sarb
push
adc
clc
push
sub
add
test
std
mov
repnz
imull
push
outsb
xchg
xchg
add
jb
repnz
inc
pop
fwait
iret
pusha
mov
cmp
adc
ret
mov
loope
sti
nop
jmp
das
xchg
ds
cmovae
mov
dec
imul
fs
jp
aaa
lea
test
jno
dec
mov
divl
jp
mov
mov
inc
mov
clc
mov
push
lret
gs
mov
inc
pop
lret
sub
dec
daa
in
rcll
sub
jp
outsb
cmp
inc
leave
lods
mov
mov
jne
xchg
test
popa
outsb
mov
adc
xor
sbb
xchg
cld
push
push
cltd
daa
inc
stos
and
lret
xchg
ret
mov
cld
jmp
inc
mov
mov
push
outsb
xchg
mov
mov
cmp
push
mov
xchg
sbb
xchg
std
ds
cmpl
adc
xchg
shll
adc
out
cmp
mov
xor
jne
pop
mov
mov
dec
pop
les
decl
insl
mov
push
mov
cmc
mov
movsl
aad
xchg
test
xor
add
mov
lret
fldenv
push
sti
add
adc
mov
jge
loop
call
adc
andb
or
xchg
pop
divps
jns
movsb
cwtl
xlat
pop
cmpsl
ss
adcb
sti
cwtl
int
ficoms
in
div
dec
mov
js
lods
fdiv
das
mov
mov
push
push
and
lahf
jns
pop
outsl
and
iret
ss
hlt
mov
jl
icebp
sbb
lea
jnp
jmp
fistps
xchg
cltd
adc
rcr
std
int
mov
adc
test
daa
aaa
jp
and
push
jmp
scas
imul
inc
add
push
add
scas
icebp
jecxz
cmp
dec
add
enter
and
push
stos
push
fisttpl
cmp
dec
mov
imul
rcrb
jns
cmc
mov
mov
les
insl
call
imul
insl
mov
jnp
scas
xor
jb
aas
shll
or
or
fdiv
and
arpl
pop
sbbl
icebp
xor
mov
mov
fstp
xor
adc
repz
arpl
icebp
mov
add
fisubrl
lahf
fbstp
ss
aas
xchg
and
addl
repz
inc
stos
repnz
shrb
daa
and
xor
cs
leave
ret
shlb
push
sbb
test
pop
mov
in
push
outsl
shl
mov
mov
imul
fstpl
pop
pop
fldenv
push
xor
jg
aam
scas
sbb
xor
dec
notl
mov
xchg
jnp
mov
lods
jmp
push
pop
ret
adc
fsts
into
pop
js
pop
dec
sub
xchg
pop
add
push
push
adc
lret
xor
xor
mov
xor
pushf
into
sub
cmp
mov
inc
call
mov
xchg
xor
nop
dec
insl
or
xchg
sub
pop
rorb
cmpsb
enter
pop
and
movsl
xor
in
lret
lcall
stos
sbb
lods
add
movsb
out
sub
jp
mov
xchg
gs
sbb
pop
adc
mov
lea
pop
sbb
inc
and
js
pushf
stos
icebp
jle
and
frstor
sub
xchg
mov
outsb
mov
xlat
stos
adc
jl
jg
test
out
repz
jae
pop
cmp
sbbb
pop
outsb
ret
int3
scas
addl
mov
pop
and
mov
imul
mov
cwtl
xchg
mov
ja
mov
xchg
fdivrp
int3
mov
mov
dec
push
inc
nop
jl
xchg
decl
push
cwtl
jmp
cwtl
lea
dec
aam
xor
stc
pop
jl
loopne
aad
std
pop
mov
push
lock
incb
pop
pushf
mov
fmul
in
pop
mov
pop
mov
jno
daa
test
mov
jno
xchg
push
sbb
push
or
add
mov
add
sbb
xchg
repz
sub
xor
inc
lret
dec
push
mov
add
sub
cmp
xchg
or
lds
add
mov
bound
lahf
test
mov
cmp
xlat
sbb
xor
add
sbb
lea
movsb
or
add
arpl
mov
and
xchg
jbe
or
dec
loop
pop
outsb
dec
inc
xor
insb
shlb
dec
jbe
pop
arpl
jae
and
sub
sarb
mov
cmp
popa
dec
cmp
test
dec
pop
aad
arpl
enter
xchg
es
pop
cltd
adc
and
push
xchg
je
ljmp
scas
pop
mov
sbb
push
inc
sub
mov
stos
out
mov
jbe
xchg
std
push
jo
ja
pop
push
je
repz
pop
sub
add
lcall
push
mov
and
mov
or
loop
loopne
pop
outsb
xor
icebp
lea
iret
xchg
ja
aam
push
int3
push
dec
leave
loope
fistpll
jno
push
shrd
sbb
pop
in
lods
lods
push
jmp
outsb
cwtl
stos
or
xchg
ja
stc
jecxz
rorl
rcrb
arpl
jmp
cltd
xor
add
sbb
adc
sub
add
data16
fwait
mov
fs
sub
movlhps
pop
adc
faddl
push
movsl
adc
sbb
xchg
test
push
aaa
push
addr16
std
lods
icebp
clc
jl
xor
jg
dec
inc
xchg
in
data16
xchg
mov
idivb
cmpsb
xchg
std
je
mov
js
aad
pop
pop
in
rcrl
rcrl
nop
xchg
in
xor
shl
or
rcrl
popf
leave
and
insl
rcr
mov
in
xor
xor
mov
pop
push
ss
cmp
lahf
xlat
out
imul
xchg
out
xor
dec
ficompl
test
rorb
sbb
adc
pushf
mov
pusha
jno
pop
xor
jle
mov
sub
jne
fbstp
cmp
call
inc
out
popf
push
fiadds
cld
mov
insb
cltd
cli
stos
cmp
js
mov
out
cmp
mov
loopne
lret
clc
jae
repz
in
jbe
adc
cltd
in
push
loope
fidivrl
fldenv
cli
dec
stos
xor
inc
xlat
mov
lds
shl
int3
dec
push
push
out
aaa
ds
or
nop
icebp
xchg
push
sub
mov
cmpsl
fwait
setp
in
mov
sbbl
fwait
pusha
sahf
repnz
pop
call
push
jg
xor
push
repnz
push
pop
ret
cmp
ss
pop
divl
xor
cmp
pmaddwd
mov
cmp
jno
add
pop
jecxz
arpl
dec
mov
dec
dec
sti
std
hlt
mov
cmc
fmull
jo
std
pop
mov
cmp
sti
add
pusha
adc
sahf
push
jecxz
movsb
iret
leave
cmp
push
ja
std
mov
es
dec
xchg
scas
jbe
mov
xlat
jl
insb
shlb
aaa
aaa
or
mov
mov
aad
xchg
sbb
and
push
and
jo
popa
lea
call
roll
mov
jno
push
enter
arpl
ret
or
cmp
and
jo
sbb
sbb
and
in
inc
scas
ja
sarb
jge
in
or
mov
and
xchg
nop
jl
fisttpll
dec
sarb
hlt
dec
dec
xor
inc
jecxz
data16
out
arpl
lret
out
std
or
jecxz
xor
loope
push
jg
push
test
mov
jl
xlat
cli
or
jg
mov
mov
push
mov
mov
test
movsb
cmp
fucom
adc
fdivrl
jmp
sarl
xchg
loop
out
push
jnp
scas
aaa
call
jl
pop
iret
sub
xchg
push
and
xchg
mov
push
js
pop
lahf
outsb
sub
cmpsb
fisttps
pop
xchg
inc
cmp
mov
push
jns
push
mov
and
je
or
xchg
adc
pop
dec
lea
mov
xchg
mov
and
out
cmp
mov
enter
lahf
jbe
jmp
sbb
imul
xchg
shlb
cwtl
xchg
dec
outsb
dec
into
fimuls
test
add
movsl
aas
or
jo
jno
imulb
sub
pop
hlt
mov
push
das
mov
insl
sbb
nop
gs
pop
into
jnp
fistps
jnp
pop
cltd
fwait
xchg
dec
mov
and
mov
sub
mov
dec
sti
gs
sub
xchg
jns
pop
add
inc
inc
icebp
xchg
popf
icebp
das
and
add
hlt
push
int3
xlat
jge
cmp
loop
cli
sub
mov
lret
shll
dec
adc
push
push
les
fwait
jne
cmpsb
cmpb
nop
xchg
adc
int
movsl
push
and
push
sbb
lds
jmp
pop
dec
ret
pushf
push
sbb
lret
and
sbb
loopne
loop
pop
mov
xlat
sarl
fsts
cmp
jg
sbb
pop
cmpsb
xchg
int3
adc
cmc
push
out
push
addr16
leave
add
dec
adc
dec
adc
xchg
xor
flds
jl
rcr
xchg
xor
or
add
pop
or
or
inc
xor
sbb
aaa
dec
movsb
loopne
xchg
mov
lods
push
inc
jl
sbb
pop
xor
add
stos
inc
jp,pn
bsf
decb
mov
xchg
testl
sub
loope
ja
stos
ljmp
outsb
fwait
aam
mov
xlat
scas
or
loop
lock
insb
inc
mov
int
loope
mov
inc
pop
cmp
ficompl
dec
aaa
dec
out
adc
mov
loope
enter
into
sub
push
iret
sub
or
sub
notb
iret
adc
repnz
in
gs
cmpsb
pop
inc
repz
jno
jns
xor
jg
andl
std
xchg
dec
daa
ret
loop
xchg
iret
push
pop
jbe
mov
adc
repz
les
fists
add
xchg
insl
scas
push
aad
jb
mov
mov
push
pop
imul
push
xchg
lods
mov
jbe
fcom
int
mov
imul
mov
testb
movsb
or
push
inc
repz
push
iret
mov
and
xor
pop
jne
cmp
leave
fsub
mov
inc
loopne
and
cmp
adc
sbb
mov
imul
jge
add
ja
stc
and
dec
add
mov
mov
push
jne
ret
push
test
push
aas
movsb
iret
loopne
cmp
mov
mov
out
sub
mov
jns
pop
mov
rorb
adc
andl
push
mov
dec
ret
jg
ds
int
sahf
or
xchg
je
mov
in
loopne
xor
push
and
scas
sub
jg
sbb
out
lds
fsts
adc
mov
call
jge
pop
test
xchg
or
lods
push
mov
push
fldt
cmpb
jno
mov
push
je
mov
ror
loopne
jmp
divl
rorb
jmp
mov
inc
add
rclb
cmp
daa
pop
popa
push
idivb
test
pmuludq
call
mov
mov
adc
mov
mov
inc
pop
push
into
pop
shl
negl
xchg
insb
jbe
lahf
aad
sbb
pop
push
pop
rcrl
or
cld
lahf
sub
cmp
aad
jae
popf
lock
rcl
test
xor
fwait
dec
loop
rcrb
andl
and
jnp
ja
inc
cmp
cmp
cmc
pop
mov
arpl
or
out
adc
js
add
sbb
jae
dec
data16
fists
gs
dec
adc
and
jmp
inc
stc
pop
push
xor
cmp
cmc
inc
aaa
int3
and
jl
repnz
ret
dec
into
aam
sub
xlat
mov
lahf
push
inc
dec
rcl
cmp
push
xchg
adc
std
call
pop
fwait
add
ljmp
adc
pop
hlt
inc
mov
lcall
xlat
cmpsb
add
pop
adc
sbbl
pop
sbb
and
xchg
mov
les
add
popf
aas
xlat
jne
push
insl
les
mov
cmpsl
xor
cltd
fstp
aam
out
leave
rcrl
test
mov
jns
dec
dec
dec
call
cs
push
fstpl
stos
push
loope
jo
loopne
lcall
mov
call
das
cwtl
push
push
jo
inc
mov
or
or
pop
nop
jo
cmpsb
jge
sbb
pusha
mov
push
sarb
aad
sub
stos
adcb
int3
and
xchg
jb
dec
mov
rcr
sbb
ljmp
and
dec
xor
mov
mov
imulb
cmp
lcall
sub
iret
repnz
enter
data16
test
repz
les
sub
dec
cld
fsubl
add
les
sbbl
sub
xlat
sahf
cli
xchg
das
pop
dec
or
icebp
leave
pop
push
out
mov
jecxz
aad
mov
push
or
sub
dec
into
mov
or
push
out
lret
cwtl
sbb
loope
xchg
shll
mov
mov
lret
inc
and
push
jo,pn
shrl
adc
call
mov
imul
ficoms
pop
push
rcrl
dec
mov
and
xor
add
stos
mov
and
inc
mov
jge
cmc
stos
in
test
sub
adc
fdivs
inc
push
mov
xchg
jmp
and
insl
outsb
pushf
outsl
roll
xchg
pop
cmp
imul
lret
mov
bound
aam
pop
out
add
mov
or
movsl
lret
cmpsl
jbe
sub
jne
push
pop
inc
push
adc
add
loop
fdivrl
push
cmp
xor
or
data16
stos
movsb
fwait
bnd
pop
loopne
sub
push
scas
in
xchg
jnp
jo
inc
test
mov
push
pushf
aaa
ffree
mov
hlt
mov
and
aaa
sbb
stos
int
cwtl
push
in
flds
xor
mov
rclb
fstl
xchg
or
lods
mov
popf
add
mov
pop
sub
ja
adc
push
inc
add
inc
gs
imul
iret
or
sbb
xor
inc
call
push
push
imul
shrl
aad
loopne
pop
std
ljmp
add
repnz
mov
fisttpl
inc
daa
les
pop
js
xchg
sbb
inc
mov
push
mov
hlt
addr16
lea
fldenv
cmp
inc
push
enter
mov
sub
cmp
cltd
stos
gs
lret
rol
ss
jnp
mov
aad
insl
sub
push
sub
insb
mov
mov
test
orb
inc
lahf
xchg
inc
lock
fnstenv
add
xchg
lods
pop
xchg
imul
imul
xchg
push
fs
mov
fstpl
mov
sarb
mov
push
or
imul
pop
fidivl
lock
jge
lahf
inc
mov
je
andl
cmc
sbb
or
icebp
push
js
xor
outsl
pushl
push
out
fnstcw
scas
insb
loopne
inc
dec
jecxz
lods
int
xor
inc
inc
push
mov
jno
push
push
adc
scas
notb
testb
xchg
repz
lock
add
inc
iret
mov
arpl
shlb
pop
add
mov
imul
sub
jbe
pusha
cmpsb
cmpsl
xor
sbb
out
dec
pop
cmp
or
pusha
mov
ret
fldlg2
movsl
lock
loopne
es
rcrb
btr
xchg
cmpb
add
pusha
dec
or
inc
fidivs
xor
lret
aas
in
lods
push
sub
cltd
popf
mov
mov
jecxz
aas
xchg
iret
xor
sbb
xor
es
sub
sbb
test
push
push
loop
push
outsb
mov
test
xchg
and
js
repnz
adc
fwait
loopne
xlat
xchg
hlt
adc
push
out
xchg
int
fistpl
daa
in
stc
inc
xor
test
les
push
pop
mov
and
mov
jmp
pop
cli
xchg
shrl
insb
dec
insl
pop
inc
stos
aas
and
bound
out
movd
push
jb
jns
mov
cli
mov
int
or
arpl
ret
test
enter
xchg
stos
lock
cld
push
lret
into
add
mov
rorl
mov
mov
sub
adc
adc
hlt
add
dec
xor
out
dec
ret
adc
stos
sub
rolb
imul
sbb
sbb
pushf
push
cmp
and
jl
stc
or
pop
pop
fs
jb
xor
inc
popf
jmp
stc
push
arpl
lods
in
and
cmc
call
jns
xor
insl
or
mov
pusha
add
inc
xchg
lods
xor
mov
pop
fnsave
pop
popl
aaa
mov
imul
jnp
and
or
pop
jp
jecxz
adc
inc
test
ret
or
fsubs
cmp
outsl
fdivr
mov
mov
mov
outsl
mov
scas
cmp
add
icebp
sub
gs
hlt
int3
aaa
or
jg
mov
insl
and
xor
sub
inc
sub
xor
popf
inc
xor
xchg
jbe
aaa
push
and
hlt
push
pop
xlat
dec
jne
out
cmp
jecxz
not
inc
andl
cmp
movb
xchg
data16
and
mov
cli
es
pop
icebp
sub
jo
mov
pop
inc
inc
sbb
push
cltd
loope
into
add
add
in
mov
sub
sub
xlat
int3
xor
shll
aas
lret
pop
into
and
push
or
adc
mov
test
addr16
or
bound
mov
xchg
outsl
jmp
dec
dec
sub
cmpsl
and
mov
in
pop
out
jmp
push
lods
scas
pop
jno
add
das
scas
dec
pop
add
nop
xorl
push
subb
icebp
mov
mov
adc
out
jne
sbb
jl
inc
sbb
test
fwait
mov
loopne
xor
adc
lahf
adc
divl
add
push
or
add
fnsave
les
pushf
push
lea
dec
or
add
jge
mov
push
clc
fmull
cli
imul
fadds
or
and
test
and
jo
or
push
std
cwtl
das
testl
loopne
push
ds
aam
imul
or
mov
outsl
ret
pmaddwd
dec
jnp
mov
stos
xchg
es
pop
addb
insl
add
mov
in
test
fldcw
cmp
ss
cmp
jecxz
adc
arpl
fistpll
inc
cmp
mov
ret
xlat
mov
mov
fldenv
cmpsb
loopne
dec
fdivs
leave
mov
dec
cmp
sbb
lcall
or
scas
cli
xorl
xchg
jne
xor
fs
out
imul
push
lahf
jae
insb
inc
imulb
iret
repnz
sub
je
das
push
sbb
ret
or
fmul
and
xchg
xchg
andb
js
decb
pushf
mov
gs
inc
xchg
cmp
int
ss
pop
insl
pop
aaa
inc
loopne
pop
sub
sub
jg
add
out
xor
ffreep
pop
dec
cmpsl
leave
std
fistpll
fidivl
out
dec
push
mov
fisubrl
das
push
jae
jno
pop
inc
aad
sub
add
negb
push
data16
rclb
mov
cmpsl
arpl
lea
sbb
mov
mov
mov
repnz
iret
ds
std
stos
pop
jmp
popa
inc
push
rorl
or
lock
daa
ja
sbb
loopne
incb
cmc
or
lods
cltd
mov
das
int
push
cli
insb
xchg
dec
jecxz
cmp
aam
mov
sub
sbb
inc
popa
out
jb
push
mov
and
or
mov
mov
sbb
sub
lds
popf
fmull
xchg
sub
xor
adc
sbb
adc
mov
insb
jge
sbb
jecxz
sti
repnz
sbb
movd
and
inc
mov
or
loope
int
aam
cwtl
or
jb
add
loope
cmovp
int3
pop
shr
add
dec
inc
lock
and
xchg
or
and
and
mov
movsb
es
or
je
aam
mov
andl
les
xor
jns
lea
insb
jg
scas
mov
dec
jmp
stos
inc
cmpsb
repnz
rol
out
arpl
dec
sbb
notb
clc
xchg
jo
movups
cli
sub
sub
add
inc
call
and
jmp
call
mov
sbb
cltd
fstps
test
popf
jp
rol
mov
icebp
inc
adc
cli
fimull
pop
mov
push
es
inc
cld
movsl
insl
adc
aad
int3
push
jecxz
test
ja
shll
cld
lock
push
dec
cmc
xchg
push
in
lock
dec
mov
push
xchg
push
pop
mov
outsl
pop
jno
out
mov
fcomip
pop
les
lret
cli
or
aad
fcom
mov
dec
lock
add
mov
cmp
sbb
ret
cmpsb
vsubps
addr16
mov
call
fisttpll
add
and
fcoms
jno
out
imul
aad
jnp
in
int
sub
mov
sbb
fbld
pop
lods
or
clc
push
pop
je
add
lods
jmp
and
xor
js
shll
dec
mov
shll
retw
lods
cmp
std
scas
and
pop
out
dec
or
leave
iret
aad
or
mov
sub
mov
mov
jns
inc
pop
sbb
call
push
cmp
mov
roll
dec
mov
lods
inc
add
inc
sub
inc
mov
mov
shl
mov
mov
push
pop
mov
push
jne
sub
mov
pop
or
inc
mov
sbb
xorl
sahf
sti
rol
nop
cmp
jno
adc
or
neg
cmp
mov
jmp
add
pop
mov
gs
push
movsl
hlt
and
dec
mov
and
mov
ret
mov
aaa
mov
lcall
ss
pop
and
and
mov
inc
or
xchg
pop
xchg
ret
ljmp
lods
loope
cmpsl
pop
popf
hlt
and
loopne
je
pop
test
push
aam
in
test
and
or
pushf
adc
out
out
and
jbe
pop
int
andl
jl
mov
dec
push
inc
mov
in
push
insl
rorb
ficoml
add
xchg
movhps
mov
sbb
arpl
push
push
adc
loop,pt
jnp
jl
lcall
mov
inc
inc
rcll
sti
adc
cld
sbb
mov
pop
repnz
int3
dec
mov
pop
out
dec
aas
fdivr
nop
fadds
or
push
and
pop
adc
sub
lock
push
sub
cltd
int
mov
mov
dec
or
cmc
sbb
dec
mov
inc
mov
inc
inc
jl
push
movsl
mov
cld
push
pop
and
orb
iret
jns
mov
leave
aas
roll
pop
ret
std
mov
cmp
ror
cmp
addr16
inc
adcb
push
inc
fs
shll
jl
xchg
dec
mov
jne
fldl
shlb
push
dec
aas
cmp
rorl
shlb
sahf
cmp
push
or
frstor
cmp
paddusb
cmp
mov
fistl
cmp
fnstcw
push
enter
mov
mov
sarb
mov
lret
xor
push
aad
mov
push
insl
rcrb
pop
cmovb
cmpsb
dec
or
pushf
pop
push
push
aaa
push
add
pop
mov
test
pop
and
pusha
ljmp
loope
add
mov
pop
mov
adc
xor
or
mov
cld
jle
jb
mov
xor
out
iret
aaa
xchg
lock
add
inc
cmc
insb
jg
adc
into
cltd
mov
add
les
jo
jp
test
cmp
call
outsl
popf
int3
xchg
lock
adc
loopne,pt
mov
out
test
in
inc
jmp
mov
inc
repz
add
ss
cmc
pop
push
movsl
daa
rolb
cmpsb
stc
test
ret
and
jnp
cwtl
or
push
pop
inc
lods
jge
push
fiadds
or
repz
fiaddl
dec
or
nop
cmp
pop
inc
test
sbb
in
enter
mov
push
ret
notl
cmp
and
xor
mov
mov
rcrl
xchg
push
test
xchg
mov
jmp
je
mov
mov
or
jb
js
adc
sbb
repz
mov
mov
popa
shlb
push
mov
sbb
and
rcll
rorb
jbe
rorb
sub
jmp
cmpsb
lock
mov
cmpsl
movsb
loop
rcll
pop
cmp
mov
or
ret
and
shlb
push
jnp
jnp
icebp
fildl
jmp
jl
shrl
adc
cld
xchg
sub
orb
and
mov
mov
ja
jge
xor
test
popf
in
cltd
jg
sbb
arpl
clc
mov
mov
xor
insb
shll
xor
mov
adc
pop
arpl
dec
mov
push
mov
jnp
inc
out
pop
icebp
xchg
test
dec
rcrb
fidivs
xchg
hlt
ficomps
dec
jecxz
push
jae
faddp
dec
clc
push
xor
fbld
outsl
dec
outsl
jl
pop
ss
fnstcw
mov
dec
sbb
dec
adcl
or
icebp
pop
mov
mov
movsl
xor
pop
mov
movsb
sub
sbb
bound
jno
and
jo
mov
jbe
add
dec
inc
aaa
pop
xor
fwait
jns
and
push
jbe
inc
push
add
jno
insb
and
movsb
cltd
jge
fisubl
pop
ds
mov
jmp
add
flds
iret
cltd
or
push
mov
dec
pop
rcll
ret
out
inc
mov
out
mov
jle
subl
shrl
jp
xchg
dec
incl
gs
lods
mov
je
dec
stos
test
lea
dec
jp
pop
sbb
push
data16
dec
dec
xchg
cs
int3
test
repz
mov
dec
mov
test
inc
adc
sub
jg
icebp
adc
cmp
pop
inc
inc
and
shl
ret
shll
xlat
mov
and
jge
add
xlat
sub
cli
jno
jb
jecxz
push
xchg
and
and
lcall
stos
pop
mov
lcall
je
adc
add
mov
fstpt
jmp
push
pop
mov
and
jo
gs
mov
xor
inc
test
sbbb
lret
bound
adc
or
adc
ja
imul
lret
in
adc
xchg
loope
mov
subl
movl
fcmovbe
inc
inc
fisubs
adc
rclb
je
movl
pop
scas
lret
sar
mov
mov
popa
stos
data16
xchg
ljmp
cld
inc
pop
ljmp
pop
arpl
nop
scas
and
inc
cltd
push
out
pop
xchg
xor
test
sbb
or
jb
mov
loop
xor
repnz
jle
pop
cli
push
push
adc
mov
pop
cmp
sti
popa
jl
repz
push
adc
sahf
lahf
jns
push
jnp
inc
mov
jmp
sbbb
xor
dec
mov
mov
mov
movsl
cmp
pop
sbb
push
pop
fdivs
adc
sub
dec
and
inc
fucomi
xchg
fidivrl
sub
and
inc
cwtl
daa
inc
xor
and
adc
mov
inc
stos
jmp
loope
mov
xchg
mov
loop
xchg
sub
scas
xchg
xchg
cmp
dec
adc
pop
push
lret
mov
inc
sub
jb
inc
mov
push
inc
popa
into
flds
int3
negb
bound
push
cmp
rol
imul
jp
lcall
pop
in
insb
sbb
push
mov
fisubl
out
fsubr
bnd
add
imul
repnz
fimuls
ret
jnp
jne
lods
out
adc
sbb
dec
pop
adc
test
cmc
roll
das
lcall
pop
loope
lods
push
or
bound
mov
cmpsl
scas
xchg
cmpsb
inc
dec
int
loopne
push
shrb
loope
add
cmp
repnz
lods
test
in
and
insl
jge
test
loopne
push
clc
lahf
mov
iret
jmp
stos
cli
aam
jbe
mov
addr16
arpl
mov
lods
repnz
sbb
mov
fdivrs
xchg
mov
out
js
and
inc
xor
jnp
fwait
popa
cli
call
push
pop
sub
repnz
fistps
daa
pop
repnz
mov
jl
xchg
sbb
mov
pop
mov
and
lahf
sub
sbb
push
nop
bswap
xchg
testb
push
adcl
call
sbb
sarb
sub
jl
lods
lea
pusha
adc
fisttpll
insl
lods
fldl
adc
sbb
popa
mov
xchg
lds
inc
dec
pop
inc
pop
cmp
cmp
mov
adc
cmpsb
pop
mov
lock
cmpsb
cli
mov
cmc
jns
aas
pop
aaa
inc
enter
xchg
xchg
dec
iret
mov
fimuls
repnz
mov
repz
or
mov
pop
repnz
sbb
in
call
pusha
push
mov
pop
sahf
adc
dec
lock
aas
outsb
push
repz
xlat
faddp
loop
cwtl
jb
hlt
mov
sbb
in
jne
das
add
mov
mov
push
or
add
pop
mov
in
sub
mov
xor
push
addr16
or
scas
shll
enter
sti
in
bound
or
ret
std
call
inc
nop
lods
shll
ds
enter
or
aam
mov
mov
icebp
imulb
and
jg
xor
xor
add
insb
jnp
dec
mov
int3
mov
jne
cmp
sub
inc
and
lods
fdivr
mov
mov
sbb
mov
test
xor
mov
fcmovb
pushf
aaa
inc
sar
test
movsb
mov
xchg
dec
das
cmp
ror
pop
nop
imul
out
push
faddl
push
stc
int
lret
xchg
loope
lahf
jnp
data16
inc
fsubs
or
sbb
xchg
mov
mov
xchg
adc
shr
add
pop
mov
rol
mov
push
sti
cwtl
jmp
sbb
sbb
jle
pushl
cmp
dec
add
push
jp
inc
inc
fisubs
push
out
fcomp
mov
out
clc
movsl
or
fwait
and
mov
out
xchg
inc
push
xchg
dec
sti
cltd
xchg
mov
and
and
addr16
and
pushf
fstp
mov
adc
sub
int
subb
clc
sbb
lcall
aaa
inc
jb
out
insb
jl
into
sub
cwtl
cld
ja
ror
cmp
clc
jp
sub
push
push
popf
dec
cwtl
mov
adc
cmpsl
aaa
int3
push
sub
loopne
push
push
fwait
dec
pop
enter
insb
pushf
scas
shlb
std
adc
ljmp
shrb
xchg
mov
push
cmp
adc
andl
add
dec
out
mov
aam
int
pop
loope
sarb
dec
dec
and
dec
mov
inc
jo
stos
sbb
loopne
jge
ret
jo
idiv
mov
inc
andb
fucom
in
or
cs
push
push
lods
insl
push
xor
xchg
pop
lret
je
mov
loop
mov
inc
mov
test
popf
dec
mov
fidivs
adc
pushf
cmpsb
into
pop
orl
jb
inc
shrb
das
daa
sub
dec
xchg
push
xchg
xlat
sbb
jae
lods
cmpsb
enter
xor
mov
jle
sbb
aaa
movsb
inc
stos
push
ja
stos
pop
ds
or
and
nop
jae
dec
cwtl
or
sti
lds
push
popa
mov
cmp
aaa
pop
mov
push
add
lret
mov
fcoms
mov
stos
out
push
pop
push
push
and
fnstcw
fimuls
ret
scas
int3
pop
lods
loopne
gs
pop
push
lcall
addr16
sarl
or
out
jne
inc
mov
add
dec
je
es
mov
stos
es
inc
gs
jge
sti
int3
adcb
push
lods
outsl
in
xchg
cmp
cmpsb
xor
add
xchg
cmp
arpl
xchg
cld
int3
mov
inc
stos
lea
xor
jecxz
mov
repnz
aas
sbb
test
jmp
push
xor
mov
push
into
jbe
or
out
push
int
jne
sub
mov
mov
jle
cmc
push
dec
subl
mov
or
jo
out
cmc
adc
cmpsl
fdivrs
pop
and
xchg
mov
fisttpll
mov
push
cmp
pop
and
add
adc
ret
or
jle
mov
aam
xchg
out
sub
mov
cmp
xchg
aam
outsl
jl
leave
fisttpll
mov
cmpsb
push
in
mov
mov
xchg
test
mov
pop
out
cmpsl
cmc
add
lcall
mov
stc
subb
mov
push
in
push
xchg
lock
jae
or
outsb
cld
ljmp
inc
xchg
daa
lret
lods
dec
lret
imul
les
stos
mov
lods
xor
inc
inc
es
jae
es
shll
mov
push
mov
sbb
inc
jo
jmp
xor
add
cmp
inc
mov
mov
iret
fstp
sub
iret
fucomip
mov
les
jecxz
addr16
push
fbld
out
out
mov
mov
and
add
test
mov
ret
dec
mov
orl
lahf
and
push
jnp
enter
jmp
mov
push
mov
or
icebp
fnstenv
mov
fisubrl
movsb
fbld
jo
mov
sarb
adc
lods
ffree
mov
inc
fnstcw
out
rcrl
cmp
shrb
int3
mov
push
add
mov
and
xchg
mov
loop
jle
jp
adc
cmc
jo
push
jge
repnz
dec
sbb
inc
mov
lock
push
andl
fwait
mov
out
data16
aas
movsb
pop
sbb
fs
adc
mov
or
xchg
dec
pop
jmp
add
pushf
mov
cmp
ljmp
test
inc
or
ljmp
insl
sub
mov
lds
in
xchg
out
jno,pn
ret
fsubs
add
shrl
jecxz
aaa
sub
add
mov
adc
lods
dec
cli
jle
in
mov
sbb
xchg
sbb
idiv
fwait
std
adc
mov
xchg
addr16
adc
push
scas
add
clc
sbb
push
aam
mov
cmpsl
add
cmpsl
add
lret
mov
dec
and
negb
fnstcw
adc
lods
adc
sub
fwait
sti
xchg
test
mov
mov
mov
xor
sbb
fadds
icebp
mov
mov
gs
dec
repz
fnstenv
add
jne
outsl
outsl
push
ficoms
push
or
jns
test
mov
xchg
push
add
pop
mov
dec
xor
sbb
xor
out
jg
xchg
or
push
flds
jnp
fstl
mov
sub
mov
sbb
fadds
addr16
iret
cmp
lea
sbb
pop
push
or
push
add
mov
jl
sbb
test
les
sub
das
pop
call
jb
mov
loop
nop
push
int3
jne
push
mov
mov
imul
pushf
jns
sub
ljmp
pop
test
dec
mov
shll
mov
idiv
mov
adc
mov
xchg
daa
push
inc
scas
push
push
pusha
xlat
outsl
sbbb
shl
push
je
arpl
pop
push
cmp
out
jge
leave
mov
xor
repz
jbe
and
or
repnz
push
fcomps
pop
dec
add
scas
cwtl
and
fisubl
cmp
cs
bsr
cmp
mov
cmp
and
test
sub
out
ficoms
clc
mov
and
xchg
inc
xchg
loopne
xlat
inc
xlat
out
mov
mov
stos
ljmp
repz
jmp
mov
cmp
gs
pop
lret
scas
aad
cmc
mov
xchg
jno
fstl
in
insb
sbb
outsb
mov
fwait
adcb
pop
push
aaa
and
cmc
popf
or
xor
jl
sbb
mov
jecxz
mov
ljmp
pop
pushf
cwtl
outsb
fst
bound
clc
pop
jle
xor
mov
mov
xchg
inc
je
inc
xchg
jno
clc
fbld
lds
jnp
jge
scas
mov
mov
mov
push
rcl
jge,pn
xor
sub
xor
xchg
scas
test
mov
mov
jecxz
pop
adc
mov
pop
inc
push
cld
push
out
lds
fstps
ret
popa
aam
dec
bnd
cmp
repnz
pand
inc
push
repz
insl
sbb
inc
add
insb
push
mov
lock
mov
add
das
xchg
push
out
jg
lds
jnp
outsl
cmp
repnz
sub
out
jb
outsl
leave
jecxz
out
push
add
adc
out
sbb
jbe
jecxz
call
ret
add
adc
mov
ss
pop
not
nop
xchg
es
mov
dec
push
mov
cmpsl
adc
jb
push
push
aas
adc
subl
loop
jnp
lock
xacquire
sbb
pop
fstpl
insb
push
xorl
clc
in
js
inc
jmp
fisttpll
mov
sub
sarb
mov
clc
cltd
push
shlb
testl
xchg
stos
push
out
iret
cmp
into
lahf
outsl
xlat
jp
xchg
hlt
jnp
or
mov
add
or
cmpl
dec
push
pop
xchg
inc
pop
mov
test
and
ret
xchg
clc
pop
mov
mov
sbb
out
les
out
cmp
data16
sub
fdivp
scas
push
fs
sub
xchg
ljmp
pop
xor
popa
fisttps
rcll
bound
xor
or
cmpsl
pop
into
mov
lds
decb
pushf
lahf
shl
fistpll
cli
popa
imul
testb
in
ja
loope
dec
add
mov
jl
mov
pushl
adc
into
add
loopw
ret
xchg
sub
sbb
ficompl
dec
pop
fcmove
les
xor
rcll
mov
iret
push
lock
jae
adc
ret
lcall
pop
pusha
xor
out
push
les
jl
xchg
dec
cmp
mov
outsb
test
mov
pop
adc
add
loop
rcl
in
into
push
pop
sub
or
and
dec
lods
jg
icebp
xor
movsl
sbb
mov
popa
mov
pusha
sbb
adc
fcmovnbe
lahf
popa
sbb
out
sub
xor
mov
or
out
in
jne
mov
nop
pop
mov
jo
mov
mov
out
pop
adcl
or
pop
dec
pop
rclb
mov
insl
xor
or
mov
bound
faddl
out
rcrb
push
cmc
sub
pop
pop
out
fbstp
push
push
mov
pop
hlt
stos
cmp
lahf
gs
dec
and
lds
mov
shrl
sub
sub
jmp
int
ja
add
mov
jle
dec
rcrb
xor
jp
jle
adc
stc
in
imul
test
scas
out
and
arpl
and
mov
xchg
decl
in
jnp
pop
iret
inc
or
or
enter
out
push
les
gs
mov
icebp
sahf
leave
pop
inc
push
out
pop
aas
shll
jns
adc
aad
sub
jb
jmp
daa
mov
ds
enter
jb
mov
loope
pushf
fs
fs
inc
or
sbb
dec
pushf
shlb
int
add
fnstenv
xchg
push
rcl
dec
pop
cs
jecxz
sbb
rorb
pop
ja
dec
sbb
iret
dec
cmp
and
arpl
aad
pop
movsb
push
push
mov
incb
cltd
xchg
cmp
mov
ret
data16
imul
out
rorb
fwait
pop
xchg
mov
aaa
jle
clc
scas
mov
mov
xlat
jecxz
xchg
jl
mov
aad
mov
leave
push
add
mov
cmpsl
sbb
call
xchg
js
stc
inc
icebp
sub
fs
mov
sti
xchg
in
int
subb
and
aas
and
jecxz
cmc
adc
mov
lcall
in
iretw
jae
mov
jle
xor
movsl
mov
les
and
adc
mov
cltd
gs
or
cs
insl
loopne
or
push
cmc
pop
cmpb
arpl
cmc
jnp
mov
mov
dec
in
cmp
push
jg
ja
cld
jns
add
cmp
inc
pop
jecxz
push
icebp
pop
fxch
mov
mov
pushf
xchg
adc
clc
js
cmpsb
lods
fs
repnz
es
int
loopne
mov
js
inc
jb
lret
fisttpl
fs
adc
hlt
mov
out
pop
jne
je
es
fiadds
inc
push
fs
and
in
sbb
sbb
and
pop
xor
scas
loope
dec
aad
les
outsl
jle
test
aad
or
xchg
movsl
insl
xchg
andl
pop
adc
dec
in
mov
sub
mull
xor
scas
pop
enter
inc
add
dec
mov
dec
test
or
aam
test
ss
cld
pop
out
stos
hlt
jno
or
imulb
fisubrs
mov
xor
insl
rcl
rcrb
stos
jmp
lret
add
shll
cltd
daa
sub
mov
sub
inc
lahf
lret
imul
xor
inc
mov
xchg
xor
sbb
nop
adc
dec
xchg
dec
rol
gs
push
mov
shll
fstpl
xchg
inc
mov
mov
lret
fstps
test
mov
push
into
adc
cmp
push
xchg
adc
push
pcmpgtd
xor
aas
mov
push
movb
in
inc
cmp
iret
loopne
sbb
lds
xchg
push
and
cmp
test
or
imul
push
dec
in
popa
adc
push
jns
mov
mov
stos
stos
lock
lea
repnz
adcb
sahf
inc
cmp
push
in
inc
lds
add
push
std
cwtl
aas
adc
push
in
cmp
mov
pop
jle
jge
add
popf
icebp
outsb
stos
imul
dec
xor
popa
xchg
ret
sti
repz
in
or
cmpsl
push
daa
dec
pushf
repz
mov
xor
lods
iret
pushf
into
loopne
rorl
jae
sub
shll
mov
dec
cs
push
or
xchg
stc
inc
out
iret
in
outsb
adc
mov
and
pop
fimuls
xor
or
cmp
sub
jge
pop
popa
fs
jns
xor
mov
add
jne
dec
repz
jg
and
xchg
add
push
clc
sbb
add
xchg
jle
in
jnp
mov
mov
es
mov
or
test
adc
sub
lcall
ret
lods
or
mov
xchg
cmpsb
imul
sbb
lret
xor
pop
out
fildll
mov
rolb
lods
popa
sub
cmp
xchg
dec
push
test
jle
shlb
iret
in
xor
sub
push
pop
push
movsb
xor
dec
aad
inc
adc
scas
rcrl
std
into
dec
lret
fcmove
or
xchg
adcl
xchg
fs
fcompl
dec
cmp
pop
cmp
push
cmp
add
adc
mov
push
js
das
xchg
pushf
sub
add
fwait
arpl
rolb
inc
scas
push
and
cmp
jmp
mov
sub
jno
sub
das
push
pop
lret
jne
xor
nop
mov
jg
sub
in
sbb
movsb
adc
mov
pop
in
push
and
jnp
dec
fwait
mov
push
xlat
cld
sub
in
dec
das
sbb
mov
and
xorl
xlat
outsl
arpl
push
sub
cmp
or
jne
pop
idivb
arpl
addr16
sub
stc
test
lahf
dec
mov
mov
mov
iret
push
push
jbe
push
mov
ss
out
mov
out
push
orb
sbb
jg
orb
jg
stos
push
fwait
into
xchg
xor
gs
jb
into
int3
cmpsb
shrb
scas
rcrl
iret
jecxz
and
mov
stos
mov
sbb
xor
lods
mov
idiv
ja
mov
pusha
insl
imul
mov
fwait
or
jmp
sbbb
imull
push
ds
rcl
fxch
into
std
add
mov
loop
daa
mov
jae
pop
movsb
arpl
out
lds
es
lret
cmp
aam
stos
mov
xor
fldl
xchg
sbb
dec
push
inc
sub
outsl
sub
sahf
push
mov
jnp
jg
jnp
sub
es
add
ja
dec
lret
dec
arpl
jl
mov
jbe
dec
adc
inc
mov
fcomps
adc
int3
not
mov
jne
inc
push
out
adc
xor
mov
iret
xchg
out
xlat
dec
ud0
addr16
loopne
mov
lret
daa
jnp
xchg
dec
clc
push
add
sub
xchg
repz
add
jb
mov
cmp
imul
pop
fwait
push
mov
dec
movsb
xchg
subl
sub
xor
mov
dec
pop
xchg
or
call
shrb
add
inc
or
sub
xchg
push
push
addr16
or
stos
pushl
lods
or
cmovs
and
int3
push
das
sbb
cmp
les
repz
cli
out
out
dec
inc
inc
icebp
inc
out
push
pop
imul
cmc
lea
adc
stc
dec
pushf
xchg
xor
push
or
fistpl
jmp
dec
andb
jecxz
ret
cs
sbb
dec
mov
je
mov
mov
xor
pop
or
stos
pop
xor
popf
adc
jae
lods
loop
cmp
popa
adc
sbb
add
sub
mov
or
jno
ret
loope
or
test
in
sub
pop
xorl
sub
mov
div
mov
jl
inc
shlb
les
jne
adc
sub
inc
test
mov
mov
jmp
fwait
or
jne
ljmp
rcl
pop
pop
rcl
out
test
add
nop
pusha
add
inc
adc
repnz
sbb
aad
xchg
pushf
sub
popw
fcoms
add
jnp
or
mov
pushf
jns
dec
stos
jl
pop
push
cmp
and
adcb
in
movb
shlb
fcmovnb
int3
loop
adc
fisubs
shl
insb
lret
pop
jle
outsl
ljmp
ljmp
ljmp
aam
loop
mov
and
call
cmp
pop
dec
mov
movsb
mov
gs
mov
mov
ret
xchg
loopne
fidivl
xor
fisubrs
sub
pop
insb
lahf
clc
bound
adc
mov
aam
sub
pop
js
mov
test
cmp
loopne
inc
adc
sbb
nop
mov
push
sti
movsl
jno
dec
stos
neg
paddusw
mov
stos
aas
iret
dec
xchg
repnz
xchg
xchg
ret
mov
cmpsl
cmp
add
repz
ljmp
or
pusha
icebp
ja
loope
iret
aaa
in
mov
mov
outsl
adc
mov
out
insb
sub
les
cmp
jbe
adc
ret
testb
xchg
pusha
fst
pusha
test
test
into
pop
inc
test
js
pop
test
sub
pop
cmp
flds
sub
jb
pushf
cmc
cs
mov
mov
test
test
lods
enter
mov
xlat
bound
imul
es
or
loope
pop
jb
push
mov
lcall
cmpsb
xor
and
mull
dec
out
mov
mov
add
push
sub
imul
outsb
sub
cmpsl
pushf
ret
lcall
sub
nop
mov
mov
das
lret
rcll
or
andb
xor
cwtl
shrb
aaa
stos
jno
mov
cwtl
es
jne
sub
xor
mov
jno
sub
rorl
loopne
or
pop
mov
lahf
sbb
lret
sub
cwtl
nop
scas
scas
push
jbe
popf
pop
nop
push
leave
dec
sbb
cmpsb
icebp
sbb
sub
mov
sub
repnz
and
pop
movsb
jle
test
cwtl
mov
add
adc
pop
das
rolb
mov
lock
dec
decb
ja
daa
int
ret
push
test
and
scas
sub
adc
dec
xchg
mov
xor
icebp
pop
sbb
shlb
loopne
leave
std
repz
in
out
sarl
loopne
pop
icebp
aaa
gs
mov
bnd
insb
lods
jo
cmp
in
cmp
xor
popf
xor
mov
mov
mov
xchg
push
mov
push
loop
sub
scas
jp
mov
xor
mov
pop
rcr
nop
inc
inc
jle
and
and
mov
insb
cmp
orb
add
push
sub
fsubrl
mov
repnz
stc
adc
mov
mov
cld
jns
test
xchg
push
dec
loopne
cmpsb
xchg
rolb
mov
enter
les
dec
pop
xchg
mov
bound
cwtl
dec
cmp
shll
mov
inc
jae
iret
mov
cmpsl
xchg
push
jno
shrl
pop
adc
mov
shl
cmovle
lea
or
mov
push
pop
in
add
jle
cmp
mov
and
lahf
adc
pop
cmc
sub
gs
adc
and
add
loop
adc
push
or
sti
xchg
xchg
xchg
mov
fs
fs
mov
xchg
or
int3
data16
cmp
les
sbb
cmp
sbbb
mov
shlb
loopne
sbb
push
pop
mov
ror
aad
leave
cltd
dec
jle
pop
ds
mov
pop
add
mov
xchg
and
jmp
in
outsl
lods
push
lds
insb
js
adc
push
inc
jnp
insb
outsb
insb
dec
jne
and
inc
test
xor
std
dec
xor
push
fstl
jmp
mov
pop
mov
sbb
xchg
loope
jle
addr16
popf
je
jecxz
pop
in
sarl
fisttps
and
mov
dec
mov
cmc
and
cmp
add
xchg
inc
inc
stc
psrlw
and
mov
in
cmp
push
cmpb
sub
in
lods
cmpsb
rolb
lock
cmpsb
add
mov
adc
push
sbb
mov
loope
addr16
push
rorb
cwtl
jl
out
pop
mov
mov
mov
pusha
rcrb
cwtl
loopne
ja
dec
mov
push
xchg
fstpt
mov
pusha
mov
jg
out
xchg
adc
cwtl
scas
stos
je
mov
in
lock
pusha
bound
rep
lret
das
xchg
mov
rorl
dec
daa
xchg
std
dec
sub
sub
nop
or
loopne
pop
push
ja
jne
xchg
sub
jo
mov
add
add
xor
movsl
sbb
jmp
mov
iret
push
or
aad
out
add
repnz
icebp
cmp
mov
sub
xor
mov
push
repnz
mov
and
and
int3
jnp
scas
mov
inc
xor
daa
movsl
add
and
fs
sbb
mov
and
add
out
test
mov
pop
loope
fcoml
outsb
lods
std
test
lcall
dec
div
add
or
dec
mov
sbb
add
sbb
fidivrl
mov
ja
sbb
es
inc
sbb
addr16
movsb
fxam
or
mov
in
sbb
pop
stc
xlat
test
stc
jns
aam
js
jno
das
arpl
mov
cmp
inc
shlb
lret
xor
xchg
popf
jns
loope
int
push
adc
sbb
push
lock
fldt
insb
lea
ret
mov
std
xor
stc
mov
mov
les
adc
cli
push
push
mov
clc
test
iret
inc
sbb
add
and
adc
mov
jnp
push
lods
cltd
js
push
xchg
mov
mov
adc
ds
pop
sahf
xchg
lret
gs
ret
jmp
enter
sbb
jecxz
push
test
cmp
test
and
add
icebp
dec
ret
les
mov
das
jnp
push
gs
pop
or
inc
cwtl
aam
in
xchg
cmp
insl
adc
scas
and
ljmp
cmp
mov
aaa
iret
gs
or
dec
fmuls
popa
pusha
jle
sbb
cmp
sub
mov
xlat
imul
lea
iret
shlb
or
mov
shll
in
dec
out
mov
inc
mov
out
inc
loop
jae
into
dec
dec
jno
jg
pusha
out
into
movsb
in
jle
mov
out
push
dec
add
pop
add
fwait
xor
or
mov
add
in
inc
fldcw
pmaxsw
push
sbb
mov
pop
call
nop
or
clc
or
push
mov
clc
fidivrl
xlat
push
pop
rcrb
xchg
push
or
jb
nop
aas
incb
jb
repnz
jmp
pop
insb
sbb
cld
xchg
dec
jmp
sbb
jg
bound
negb
adc
cli
fisubs
push
ja
sbb
adc
sub
lcall
and
lret
mov
add
jg
adc
cmc
pusha
sub
bound
mov
insb
sbbl
or
inc
or
mov
ss
pop
pusha
repz
test
push
sarb
push
js
or
and
call
inc
or
cli
push
and
mov
popa
scas
repz
xchg
test
push
cli
sbb
push
movsb
pop
mov
mov
pop
fstpt
mov
rcll
mov
inc
mov
sbb
mov
cmc
and
sbb
jnp
sub
jo
mov
addr16
add
or
inc
mov
xchg
ss
jg
repz
in
xchg
sbb
mov
jbe,pt
add
dec
pushf
outsb
mov
push
sub
cmp
popa
loope
xchg
and
mov
push
fs
mov
add
xor
pushf
and
jne
cld
xor
xchg
repnz
xchg
je
add
and
data16
jae
test
or
fidivrs
in
mov
cmc
push
mov
popa
aas
fstl
scas
push
dec
mov
sub
shrl
xchg
mov
inc
ret
push
leave
sbb
repz
rclb
addl
or
inc
dec
or
push
lea
outsl
frstor
pop
jbe
subl
mov
cwtl
sub
js
dec
push
xor
pop
xchg
popa
insl
or
aad
cmp
ljmp
jl
fcmovbe
lea
shrl
lahf
popf
jne
mov
scas
fsubs
lcall
bound
js
outsl
pop
scas
mov
jmp
insl
xchg
sub
dec
iret
pmuludq
pop
push
mov
dec
icebp
pop
inc
xchg
repz
rcrb
inc
sarl
dec
insb
cmp
jg
test
add
push
mul
sbb
out
xor
adc
pop
in
or
fisubrl
outsb
sbb
xchg
mov
dec
gs
push
pop
ret
test
daa
sbb
sahf
lea
lea
ds
mov
xchg
mov
lds
xchg
inc
fs
cmpsb
xchg
popf
lret
gs
dec
mov
jne
mov
sub
sarb
sti
data16
xchg
test
mov
sbb
cwtl
jns
leave
push
xor
inc
adcl
test
mov
imul
imul
fmulp
les
into
les
sbb
lcall
jb
add
insl
inc
dec
ror
xchg
idiv
out
push
jge
cmp
jne
pop
lahf
dec
mov
pusha
cltd
xor
test
arpl
pop
in
scas
ljmp
mov
mov
gs
adc
repz
xchg
fs
ret
fdivrl
sbb
jg
out
cltd
jle
clc
lock
subl
or
iret
pop
push
pop
push
cs
enter
sbb
push
es
push
je
adc
inc
mov
in
rcrb
hlt
or
push
mul
dec
inc
cmp
ja
pop
shr
sub
pop
jmp
pop
pop
iret
fmull
test
in
sbb
sbb
push
loope
mov
sub
mov
jp
aam
stc
lds
push
jae
jl
scas
xchg
and
lods
pop
and
sbb
aad
pop
lock
js
jle
rcrl
push
repnz
cld
lret
dec
je
dec
adc
add
dec
mov
xor
push
cmc
sub
push
cld
xchg
les
or
shlb
lds
sbb
jecxz
test
xorb
push
fadds
xor
mov
enter
lds
push
mov
mov
and
out
pop
adc
sbb
push
xchg
test
pop
cmp
cmc
lock
sbb
hlt
out
dec
cmpsl
pop
int
inc
test
mov
add
enter
push
and
sbb
pop
mov
cli
out
xor
imul
movsb
and
fstps
repz
lods
xchg
pop
mov
loopne
lods
mov
cs
inc
in
xchg
push
lea
dec
aad
arpl
fcmovnbe
data16
sbbl
adc
add
xchg
pop
jb
sbb
mov
pop
mov
outsb
inc
cmp
repnz
js
and
das
pusha
jae
xchg
sub
dec
mov
add
mov
jo
inc
mov
clc
insb
dec
jbe
ret
jb
mov
cmpsb
ds
push
cmp
sbb
aas
pop
les
pop
dec
ljmp
pop
sub
iret
adc
push
lret
sbb
sahf
xchg
fsubrl
sbb
enter
shll
cs
lods
decl
ljmp
ja
cwtl
pushf
in
insl
cmp
pop
lahf
ss
push
repnz
jno
jl
and
add
icebp
sahf
xchg
xlat
xchg
addl
pushf
pop
inc
out
sub
or
arpl
mov
into
imul
mov
daa
mov
dec
add
cli
mov
pop
inc
leave
in
sbb
cmp
iret
jle
pop
shl
js
flds
jbe
mov
dec
loopne
adc
imul
cltd
je
sbb
test
sub
sbb
push
add
jecxz
sbb
stc
mov
mov
mov
or
mov
fisubl
add
jl
cmp
push
bndldx
and
addr16
repz
movsb
xchg
add
scas
push
jecxz
jnp
stos
addr16
daa
mov
dec
rorw
ss
pop
and
jmp
inc
or
mov
sbb
lret
xor
push
mov
jp
imul
es
pop
inc
fcomi
mov
lods
pop
push
sbb
push
mov
mov
mov
in
or
and
xor
and
mov
fldl
dec
mov
adc
inc
dec
sub
popf
pop
lods
and
mov
mov
daa
inc
adc
imul
subl
push
mov
ljmp
push
mov
lea
aam
and
js
xchg
clts
in
inc
fiadds
mov
sbb
mov
mov
in
adc
mov
sbb
inc
jecxz
int
pop
fmulp
mov
ja
and
dec
out
loop
fidivs
jmp
ss
and
stc
and
lods
adc
mov
aaa
mov
in
jg
push
int3
aad
mov
outsb
xor
rcr
mov
pop
push
arpl
push
inc
out
lahf
jp
and
mov
dec
loope
adc
dec
mov
out
dec
or
std
xor
pushf
bound
cwtl
jo
cli
xor
sbb
stos
leave
mov
and
insb
lock
cmp
es
or
aaa
daa
clc
lea
pop
mov
push
es
sub
cwtl
popf
and
push
jge
dec
lock
and
dec
xchg
xor
adc
cmp
loop
les
in
mov
shl
in
rcrl
lods
pop
mov
mov
mov
test
icebp
leave
icebp
jecxz
push
mov
cmp
dec
je
jge
adc
cmp
cmp
add
mov
add
jo
xchg
xchg
pop
popf
lods
push
jmp
pushf
jne
push
pop
inc
jo
outsb
xchg
rcr
adc
scas
lcall
adc
and
fs
stc
roll
adc
cli
adcl
pop
xchg
or
or
and
and
pop
xchg
dec
scas
xor
cmp
imul
lahf
insb
lods
and
jns
repz
sbb
cwtl
pop
ds
movsl
and
dec
xor
data16
cwtl
iret
cli
or
flds
aad
sbb
push
dec
popa
pop
xchg
xchg
add
mov
out
and
imul
adc
dec
mov
jb
pop
xchg
xchg
mov
and
and
loop
cmp
sub
hlt
sbb
xchg
ret
ret
inc
std
stos
mov
push
jl
xchg
mov
push
and
icebp
xchg
mov
cmp
mov
int
shll
sbb
cmp
add
cmp
aas
stos
xor
adc
mov
push
outsb
fnsave
push
xor
jle
mov
mov
andl
mov
cwtl
movsl
push
ja
mov
lea
jl
cmc
into
fdivp
fldt
sub
jo
loopne
into
pop
int
cmp
imul
jl
dec
imul
jle
stos
fcmovu
xchg
xchg
xchg
or
inc
cmpsl
push
jmp
insl
dec
pop
push
jne
xor
sbb
insl
mov
mov
es
inc
xchg
push
cmp
lcall
jmp
lahf
ljmp
sub
fdivrp
dec
lret
mov
dec
aas
ss
test
sbb
rcr
inc
mov
sub
into
bound
jne
jmp
sub
inc
orl
xor
data16
pop
lods
insl
lock
mov
push
xchg
push
and
and
jecxz
push
and
sub
test
adc
cmc
lods
data16
ret
div
jl
movsb
or
dec
decb
fdivs
xchg
js
mulb
inc
scas
dec
cli
add
mov
push
inc
iret
sti
lret
jge
in
push
cmpsl
scas
cmp
pushf
cmp
sub
lret
mov
cmc
adc
add
inc
pop
aam
xor
ret
mov
add
pop
jmp
popf
gs
add
test
mov
cmp
fisttps
out
cmp
mov
roll
movsl
out
mov
decl
mov
mov
or
sbb
mov
jp
sub
jae
add
or
jo
notb
mov
mov
frstor
push
mov
iret
lds
in
adc
es
add
ret
mov
jl
xchg
out
sbb
cmp
pop
sbb
fsts
sub
scas
lcall
pop
mov
sbb
mov
pop
pushf
lock
lret
lods
cwtl
sti
sbb
in
fsubrl
xor
xor
add
pop
xor
and
mov
jb
popf
lock
pop
cmp
dec
add
flds
and
roll
aam
xor
cmpsl
in
dec
es
sahf
xchg
sub
cmp
int3
lock
fisubrl
add
cwtl
jnp
push
scas
cli
jge
lcall
call
mov
fnstsw
mov
inc
lret
xchg
out
addr16
xchg
push
dec
inc
dec
mov
jp
test
cmp
jg
test
in
je
jae
sub
popf
fdivl
sub
clc
sbb
rclb
scas
jg
movsb
push
cmp
bound
out
addr16
adc
fwait
popl
dec
popa
cwtl
push
inc
popf
cld
mov
add
iret
xor
jns
aas
sub
mov
dec
add
movsl
mov
mov
cmp
mov
imul
leave
in
pop
push
sbb
cs
sub
test
cmp
jno
jns
and
icebp
js
cmp
sbb
mov
sahf
ss
adc
jno
les
test
pop
mov
pop
dec
shlb
pop
push
jge
mov
push
aam
pop
jno
mov
lds
jge
cmp
xlat
jl
jge
in
pop
outsl
das
data16
into
flds
xchg
ljmp
mov
mov
es
jecxz
stos
xchg
mov
sub
push
inc
test
fnstsw
xor
inc
adc
ret
insb
fcmovb
test
cmpb
push
js
sbb
pop
cmpsb
neg
cmp
jbe
dec
inc
insb
lret
jp
loop
inc
pusha
add
xor
or
or
loopne
xlat
pop
jns
sbb
xchg
es
push
dec
scas
ljmp
sarl
clc
push
lods
in
das
dec
mov
mov
jg
adc
mov
and
mov
add
sti
sub
pop
je
sub
lock
jns
dec
inc
popa
imul
adc
out
push
jle
hlt
and
sbb
cmp
mov
dec
outsl
rorl
xchg
mov
fsts
out
fnstcw
adc
arpl
sbb
rorb
jnp
and
pop
iret
xor
adcl
xchg
pop
and
sbb
pushf
rcr
lcall
mov
andb
cs
loopne
fidivrl
sbb
jne
insl
mov
sbb
inc
popf
fdivs
and
das
and
cmp
add
cmp
xchg
sub
int3
movsl
dec
cmc
arpl
cs
xchg
and
popa
or
shrb
icebp
fdivrs
daa
icebp
adc
data16
fidivrs
iret
in
out
mov
insl
addr16
jne
popf
push
loop
subl
jp
cs
jmp
xor
loope
shlb
push
testl
mov
lahf
dec
sbb
mov
push
push
mov
aas
lea
sbb
cltd
lret
scas
or
fnstsw
test
les
inc
mov
scas
int
nop
sub
adc
sbbl
loope,pn
lcall
sub
dec
dec
call
and
xchg
push
jge
add
jno
mov
std
add
sub
pop
mov
addr16
repz
ljmp
push
rorl
imul
dec
sub
gs
mov
mov
js
add
fcmovnb
xchg
jle
in
repz
jp
roll
and
js
fwait
jl
adc
and
jg
sub
outsl
call
mov
pushf
pusha
xor
cmp
and
cmpsb
mov
leave
pop
inc
jbe
lret
sub
dec
or
ret
ds
data16
ficomps
add
lds
repnz
icebp
mov
int3
adc
mov
in
stc
xlat
gs
mov
add
pop
mov
jo
or
sub
fisttpl
lret
push
pushf
pop
bswap
sbb
je
mov
push
lret
sub
xor
mov
popl
sbb
ds
mov
jae
insl
imul
fiadds
pop
mov
movsl
sub
cmc
int
popa
mov
popf
pop
xchg
mov
int
jp
in
imul
mov
divb
das
inc
dec
sub
push
mov
loop
data16
push
fidivl
adc
es
outsb
repnz
sbb
js
shrl
aas
pop
enter
scas
adcl
arpl
add
mov
stos
xor
shlb
int3
mov
inc
sti
add
push
mov
rol
jecxz
or
mov
pop
dec
mov
fnstcw
cs
mov
cli
mov
pop
lahf
ss
or
sti
pushf
and
pop
jnp
ljmp
dec
sbb
cmpsl
test
xchg
ljmp
sub
mov
in
pop
mov
mov
shll
out
push
jl
or
sub
inc
add
in
add
les
imul
enter
negl
nop
cmpl
leave
xor
fsub
inc
insl
inc
sub
adc
jns
push
mov
or
aam
loopne
xlat
pushf
xchg
mov
mov
adc
dec
push
mov
cld
or
push
xchg
inc
push
in
inc
xchg
or
daa
addb
dec
hlt
push
es
punpckhdq
xor
mov
xor
enter
push
xchg
pop
in
mov
adc
inc
shr
jg
xor
sti
lods
cmc
lret
clc
add
cld
adc
fcoml
cmp
mov
std
dec
mov
pop
or
shl
stc
mov
scas
inc
stc
sbb
xchg
in
push
mov
pop
jl
and
in
shrl
aad
rorl
movsb
insl
mov
pop
rcll
dec
aas
xchg
and
gs
push
jae
in
out
inc
outsb
popf
idivb
mov
int
ljmp
orl
pop
popa
inc
add
xchg
jns
iret
xorb
pop
pop
adc
loope
cld
or
dec
add
cmpl
movb
or
cwtl
js
loop,pt
push
repz
jne
jno
sub
push
call
push
sbb
out
lods
mov
ret
out
imul
xor
add
pop
addr16
faddl
and
arpl
sahf
add
lcall
ret
xor
mov
pop
je
push
xchg
nop
mov
jl
das
dec
in
icebp
pop
jno
lret
sti
stos
jae
rcrb
jns
sbb
stos
xchg
inc
mov
mov
and
es
add
jnp
inc
cmc
fisttps
cmpsb
pop
pop
push
jecxz
lcall
pop
mov
stos
testl
repz
loopne
addb
fnstsw
popa
and
call
and
jl
imul
jae,pn
repz
mov
mov
push
mov
ljmp
adc
mov
sar
test
and
adc
cmp
inc
adc
mov
add
test
pushf
flds
aaa
in
or
mov
push
filds
xor
xchg
shll
cmp
cs
cmp
data16
popf
cmpsb
mov
add
sarb
pop
fistl
mov
outsl
add
push
dec
repnz
push
outsb
stc
out
or
dec
incl
test
scas
es
lock
sub
loop
popa
sub
jb
cwtl
and
dec
mov
cmpsl
les
push
and
imull
imul
dec
add
aam
loope
bound
cli
ljmp
outsl
cmp
push
cmp
mov
mov
add
pop
pop
clc
lods
icebp
mov
push
rol
dec
test
cmp
push
loopne
jmp
jl
sti
repz
insb
mov
mov
dec
fsubs
inc
xor
lods
divl
daa
icebp
rcrl
in
and
sub
into
inc
cmc
xor
inc
scas
idivb
mov
mov
frstor
adc
jge
cmp
out
pop
call
jb
lods
cmc
sub
cmpsl
xchg
pusha
pop
or
inc
and
push
scas
js
adc
mov
push
mov
jns
or
xchg
pop
sahf
jae
adc
xchg
pop
into
or
push
sub
popf
in
jg
pop
jmp
movsl
mov
mov
dec
sbb
loope
mov
gs
xchg
cmp
pop
test
xchg
xor
or
loop
lea
pop
das
pop
mull
inc
cmp
bswap
add
pop
icebp
jbe
xor
out
adc
push
sub
mov
mov
or
sub
push
dec
jl
pop
dec
out
imul
pop
sarb
sbb
fildll
aaa
push
cmc
cwtl
sbb
dec
xchg
mov
call
jb
mov
mov
inc
xchg
fwait
outsb
xlat
push
fistps
jb
cmp
pop
push
cli
jno
addl
stos
jno
push
push
into
andb
sahf
pushl
adc
push
push
call
dec
mov
mov
and
xchg
rcrb
and
leave
mov
mov
push
jb
cmp
push
icebp
cmp
lods
mov
repz
add
and
aam
add
and
shll
fwait
adc
jbe
mov
test
or
and
arpl
pop
or
and
pop
sarb
sbb
inc
in
xchg
mov
add
mov
xchg
shll
rcr
roll
adc
jbe
mov
bswap
or
gs
fcmovnu
mov
adc
cmpsb
xlat
movsb
test
lods
sbb
fimuls
cmp
pop
jp
xchg
cmpsl
int
movsl
iret
out
negl
jne
or
aas
inc
ret
popa
mov
or
mov
lea
out
in
push
ret
mov
xchg
xor
testb
popf
cmpsl
sti
push
ljmp
cmp
adc
xchg
add
call
xor
ret
loop
fwait
mov
clc
mov
fwait
in
cmpsb
xchg
push
cld
add
add
int3
xor
les
inc
xchg
cmp
cltd
imul
loopne
xchg
or
push
pop
push
mov
fstpt
or
pop
adc
cmpsb
subl
cld
sub
jns
aam
cmp
sbb
pop
dec
je
fsts
pop
pop
push
push
leave
int
mov
jle
xchg
pop
cld
sti
cmc
sbb
xchg
out
xor
pusha
scas
mov
cs
jge
popf
out
push
addr16
mov
outsb
add
mov
pop
jge
xchg
and
or
icebp
popf
fdivrs
mov
add
outsl
adc
sub
adc
and
cs
sub
inc
sbb
sub
aas
popa
aad
lret
bound
jg
mov
shlb
jb
clc
or
push
roll
dec
fists
scas
or
rorl
pop
sub
dec
mov
pop
mov
addb
mov
out
add
stos
loop
aaa
loope
cmpsl
ret
fdivs
and
mov
scas
lock
mov
in
push
inc
inc
int3
inc
ds
xlat
mov
or
add
adc
clc
and
in
dec
jl
or
cmp
pop
out
lods
je
dec
sub
notl
fdivp
cmp
hlt
or
lods
dec
in
mov
aaa
mov
test
and
std
inc
repnz
pop
mov
stos
or
shll
mulb
push
mov
ret
popf
sbb
jo
xchg
mov
xchg
inc
xchg
lret
mov
mov
add
in
loop
test
push
push
fs
mov
data16
jne
inc
icebp
pop
or
call
pop
cltd
out
clc
push
sbb
mov
stos
mov
lea
xchg
mov
sbb
aas
jp
fidivrl
inc
sti
fcoms
cmp
add
jae
ja
sbb
imul
mov
fildl
nop
mov
xor
mov
adc
cmp
xor
enter
into
in
in
pop
hlt
dec
fiaddl
add
dec
insl
mov
cmpsb
cld
orl
shlb
cmp
sub
lods
cmp
adc
mov
inc
lret
and
fsubs
fisubl
dec
testl
mov
loopne
cld
daa
sub
lds
loop
movsl
mov
shrb
clc
dec
test
jns
pop
into
dec
ret
cmpsb
push
mov
or
jae
ds
fildll
jmp
popf
dec
mov
sbb
cwtl
cli
mov
repz
pop
inc
popa
xchg
sub
and
enter
or
movsl
in
cmp
xor
mov
lret
in
aam
pop
fistpll
and
sbb
mov
mov
shl
outsb
fnstsw
clc
aaa
popf
movntps
jmp
popa
jbe
jnp
call
call
dec
push
in
inc
enter
dec
adc
mov
lock
and
bound
xor
mov
push
ss
repnz
or
fisubrl
xchg
pop
jle
dec
or
mov
jmp
shrb
xchg
in
xor
stos
out
clc
fwait
inc
test
add
xor
arpl
sbb
jl
cmp
rorl
test
mov
enter
cmp
jae
in
xchg
pop
mov
xor
push
in
mov
in
ljmp
xchg
mov
mov
fwait
jns
mov
mov
int3
movsb
jne
xor
xchg
pop
popa
fnsave
sbb
mov
mov
mov
sub
pop
xor
jno
cmp
ss
sarl
or
mov
jnp
mov
addr16
push
subl
cmc
dec
lds
xor
ficompl
outsb
into
push
xchg
and
push
jbe
popf
sub
cmp
orb
enter
je
jne
andb
mov
ret
fxam
fsts
add
or
mov
inc
shrb
fidivs
mov
mov
jl
shl
ds
lea
cmp
outsb
xor
and
and
xor
or
push
decl
ret
mov
mov
adc
fldcw
test
mov
cmp
cmp
fsts
mov
loop
xorl
pop
aam
and
push
testb
stos
out
stos
sub
xor
pop
mov
sub
and
test
subl
xor
mov
les
test
sbb
mov
and
cwtl
in
popf
lea
jo
lret
je
sub
das
js
js
fsubrs
dec
jmp
sbb
and
pop
mov
ja
out
cmp
pop
hlt
pop
mov
lods
gs
repz
pop
dec
std
pop
mov
jle
cmp
shll
aam
pusha
aaa
mov
sbb
add
cmp
xchg
cld
add
inc
out
push
cld
rorb
or
clc
dec
and
push
mov
jg
mov
mov
shrb
cmpsb
adc
das
push
stos
das
xchg
nop
dec
testl
inc
xor
xor
xchg
lret
insb
inc
fistl
dec
mov
mov
push
ret
call
fnstsw
adc
mov
stos
add
bound
xchg
shrl
lea
sti
aaa
outsb
sbb
in
add
data16
push
test
cmc
mov
adc
ds
test
dec
jp
push
push
ret
mov
in
fcmovbe
popa
mov
pop
popa
push
hlt
pop
xchg
sub
pusha
push
jmp
xor
loope
mulb
in
inc
movsbl
xor
loopne
push
in
pop
insb
mov
push
ja
in
push
lcall
into
bound
mov
jo
xor
jae
int3
jo
mov
fsub
arpl
push
jae
out
add
rorl
and
data16
sbb
fldcw
sbb
push
scas
push
mov
mov
add
mov
jmp
mov
xchg
pop
out
add
xor
mov
out
jg
push
stos
sbb
xchg
pushf
in
aam
fcomp
ds
and
adc
add
cld
fstpt
jecxz
rep
lahf
jo
inc
test
jae
xchg
fsubr
stos
jns
into
clc
outsl
fistl
sub
das
mov
jp
imul
add
mov
scas
push
mov
push
dec
rcrb
mov
adc
fs
push
push
push
xor
push
sub
jmp
mov
sbb
nop
jle
into
xchg
sarl
adc
sbb
mov
call
xor
sbb
aam
nop
ffree
mov
adc
aas
ja
sub
mov
xchg
push
loop
mov
jecxz
ja
cmp
xorb
loopne
mov
mov
and
push
loop
inc
jl
sbbb
mov
shlb
int
mov
mov
test
mov
rol
icebp
pop
pop
jl
lea
dec
and
mov
ja
adc
roll
outsl
jae
lret
inc
or
dec
xlat
cld
jecxz
add
add
rorb
movsb
imul
lods
outsl
cwtl
pop
add
lods
and
push
out
add
inc
xchg
pop
sub
add
xchg
sub
jae
push
aam
fcmovnbe
sub
mov
imul
cmpsl
icebp
out
imul
mov
leave
or
push
into
movsb
icebp
add
and
fst
call
jecxz
cmc
xor
xchg
sbb
adc
pop
icebp
loop
mov
sbb
aam
data16
sub
jp
mov
mov
test
fcmovbe
sub
in
mov
aas
jns
sbb
nop
not
and
mov
add
inc
mov
adc
lds
adc
idivl
test
cmp
adc
mov
push
repz
fisttps
movsl
jnp
out
mov
pop
rcll
jl
xchg
sub
pusha
push
stos
jmp
jae
sub
roll
lock
xorl
pop
jne
popf
pop
jne
jne
jnp
gs
inc
and
mov
pusha
enter
insb
mov
mov
in
js
movsl
push
xor
mov
mov
fcmovb
dec
inc
fs
scas
mov
and
addr16
mov
inc
test
sahf
mov
iret
xchg
arpl
dec
adc
mov
mov
or
or
clc
pop
xlat
mov
shl
jecxz
cmpsl
sbb
jnp
xchg
xchg
jo
cli
jle,pt
scas
rorl
dec
or
push
xor
jl
and
mov
or
push
test
push
mov
add
hlt
or
sbb
out
adc
mov
ja
in
mov
mov
jl
sbb
jne
rol
dec
loope
push
fld
imul
sbb
daa
dec
or
cmp
xlat
mov
jb
loopne
and
sarb
pop
xchg
popf
mov
fmul
mov
add
xor
loop
stos
aaa
fwait
adc
mov
lock
fwait
inc
loope
aad
xor
repz
jg
das
inc
dec
mov
scas
inc
sarb
mov
out
sub
add
cwtl
mov
loopne
dec
mov
movsl
lods
lahf
jno
xchg
cltd
and
cld
out
and
popa
cmp
mov
cwtl
or
inc
shl
dec
movsl
ret
js
in
mov
bound
scas
fnstcw
fcompl
adc
ss
test
icebp
and
mov
rol
xchg
and
sbb
dec
xchg
mov
xchg
std
lret
adc
out
jne
into
ss
pop
cltd
insl
sbb
outsl
jo
xchg
aas
out
cmp
inc
push
mov
xchg
jge
sub
nop
xchg
imull
sub
sbb
fisttpl
jmp
dec
leave
jno
insb
xchg
pop
adc
mov
xchg
xor
jmp
mov
jns
stos
jnp
sub
inc
pop
lods
or
out
and
push
mov
vmovss
and
mov
or
mov
mov
xor
jp
cmp
in
in
add
ret
xchg
jmp
inc
icebp
out
sbb
inc
xrelease
pop
insb
sub
ljmp
in
push
xor
outsb
push
aam
push
outsb
fcmove
sbb
or
lret
jl
inc
es
sub
adc
jnp
mov
imul
test
cmp
push
movl
rcrl
enter
sbb
cwtl
mov
pop
cs
sub
xor
adc
push
daa
sub
cmp
mov
cli
addr16
add
push
sub
int
cltd
mov
imul
loope
lods
inc
push
repnz
loopne
fucom
xor
nop
cmp
call
xchg
and
sub
mov
sub
push
and
add
lock
xor
cwtl
mov
dec
mov
shrb
mov
cmp
add
ljmp
arpl
xchg
pop
cli
cs
ret
out
cmpsb
and
mov
inc
push
add
jae
add
jp
roll
push
popf
jns
aaa
movsl
fidivrl
into
leave
sub
pop
xchg
adc
scas
jg
xchg
xlat
cmp
repz
sub
push
xchg
pushf
xor
ret
adc
js
mov
scas
lret
nop
mov
jo
das
xchg
xorl
mov
adc
imul
les
mov
and
sbb
jne
sbb
sarb
mov
sbb
ljmp
push
jno
or
jle
or
cmp
les
mov
popa
jns
sbb
test
add
xchg
xor
push
jg
or
andl
sbb
mov
int
xor
add
negb
aam
sbb
mov
xchg
xchg
jl
lret
andb
dec
into
sub
pop
and
or
or
js
mov
cmp
jb
insb
jp
lods
out
adc
pop
dec
mov
and
pop
xchg
mov
imul
ret
loope
ret
aam
xor
mov
test
push
mov
push
fcmovnbe
pop
mov
mov
cwtl
sbb
xchg
xor
xchg
mov
inc
cmc
dec
fwait
sbb
dec
ljmp
out
out
xchg
pop
repz
push
lret
jge
xor
nop
lret
mov
inc
aad
testl
outsl
lret
jns
jmp
and
jno
ret
mov
lahf
pop
lods
push
push
fnstsw
imul
pop
xchg
addr16
mov
loop,pn
mov
loop
pop
leave
cli
cwtl
mov
mov
or
xchg
dec
pushl
and
loop
sbb
jl
mov
out
mov
enter
rorl
icebp
sti
outsb
dec
and
cs
pop
sub
pop
popa
cwtl
les
pop
pop
cltd
inc
xor
mov
xor
movsl
fwait
and
rcrl
in
pop
sbb
mov
push
imul
dec
push
pop
jae
and
xorb
repz
mov
insb
dec
bound
repnz
fiadds
xchg
jo
imul
adc
jg
outsb
je
push
sbb
popa
movsb
es
mov
and
bound
fcomps
pop
icebp
loop
push
jnp
add
out
pop
pusha
insl
into
xchg
pop
add
add
add
cmp
cmp
dec
inc
xor
gs
insb
scas
inc
les
push
mov
jne
loopne
pushf
pop
or
cmp
scas
dec
orb
mov
jp
inc
std
ja
xor
in
adc
or
and
push
inc
sbb
pop
jbe
arpl
inc
das
cmp
lods
movsb
sbbb
jle
push
xor
and
pop
push
imul
pop
call
sbb
xchg
inc
test
jo
sub
sbb
sub
inc
mov
pop
xchg
rcr
mov
and
sub
leave
mov
mov
mov
mov
repnz
sub
loopne
loopne
shll
clc
test
adc
mov
or
inc
inc
or
adc
xchg
out
fimuls
test
sahf
xchg
mov
push
mov
nop
leave
and
or
xor
mov
sbb
mov
stos
or
cmp
inc
cmp
adc
mov
push
cmp
popa
fbld
lds
lcall
int
in
pop
jecxz
push
adc
jp
imul
arpl
adc
scas
push
dec
sub
outsl
in
pop
inc
or
and
rcrb
fisubs
jl
dec
sub
scas
adcl
lea
lds
or
not
xorl
xchg
jae
call
jae
int
shrl
imul
lahf
jmp
fwait
arpl
ficoml
lods
pop
pop
pop
loop
into
nop
mov
mov
addr16
imul
mov
or
mov
cmp
push
stos
icebp
test
mov
pop
fs
es
sub
xlat
imul
push
movsl
jno
jae
outsb
jl
daa
sub
mov
test
aaa
test
pop
out
jg
add
rcl
loopne
fistpll
mov
aas
xlat
scas
pop
push
jge
xor
lods
xchg
stc
sbb
lock
jg
je
mov
and
inc
in
pop
push
addr16
repz
sub
rep
adc
push
ja
movsb
sbb
pop
movsl
mov
mov
jmp
sub
fcmovnu
pop
sub
xor
sub
inc
lods
cld
pop
xor
out
cld
and
inc
inc
xchg
push
imul
pop
pushf
dec
addr16
pop
cwtl
mov
nop
pop
std
and
mov
sar
pop
leavew
xchg
and
lods
lea
dec
or
ljmp
pop
and
jle
pop
iret
add
ds
sti
pop
sbb
ret
xor
pop
or
push
call
cli
push
push
pusha
add
lds
jns
shrb
adc
xchg
adc
mov
cli
aad
add
lods
mov
dec
sbb
mov
cld
sbb
sub
xlat
rolb
shll
es
pop
js
fbld
aas
ror
std
lcall
rsm
ss
pop
mulb
cmp
std
dec
add
mov
mov
test
sub
jo
dec
pop
ret
mov
das
mov
xor
flds
or
adc
xchg
pop
mov
aaa
lret
push
push
ret
pop
xor
add
push
in
add
mov
sarl
push
shlb
cmp
fwait
mov
insb
adc
xchg
push
sbb
test
aad
popf
lahf
xchg
adc
or
push
pop
scas
mov
cld
loopne
aad
fwait
pop
xchg
inc
andl
adc
or
popf
mov
xchg
out
mov
into
pop
icebp
stos
pop
lock
gs
test
mov
jne
jmp
stc
imul
xchg
loop
jb
add
jns
add
cmp
mov
pop
sbb
daa
fwait
ljmp
fldt
in
test
xchg
mov
pop
test
in
ret
jp
adc
outsb
std
pop
push
adc
das
dec
frstor
mov
stc
mov
pop
cs
xor
mov
push
insb
or
stos
pop
dec
hlt
shr
stc
cs
pop
dec
lock
cwtl
mov
pop
sbb
pop
push
test
and
scas
sub
and
into
divb
push
ret
jmp
and
lret
pop
add
stos
cmp
adc
inc
xor
flds
or
dec
mov
daa
ret
sub
inc
dec
xor
test
push
aad
sub
loop
clc
adc
adc
das
mov
testw
das
inc
test
fsubl
xchg
jo
popf
sub
push
mov
jp
push
xor
sbb
clc
fisubrl
je
and
std
iret
mov
jbe
mov
dec
adc
ret
adc
or
mov
or
mov
jmp
sbb
popl
rclb
cmp
jnp
xchg
or
sub
je
mov
into
xor
rclb
fnstenv
insl
or
jle
std
push
popf
fnstsw
xlat
push
cmp
lods
fists
pop
dec
push
repnz
sbb
lods
sbb
pop
sarl
sbb
popf
insb
rcrb
sub
aam
adc
rcrb
mov
mov
sub
mov
inc
adc
push
jmp
out
cmpsl
addr16
cmp
leave
ret
scas
in
cli
or
sti
sub
cmpsl
fwait
xchg
loop
rcl
mov
dec
mov
adc
test
sub
cmp
sub
dec
std
leave
insb
test
out
out
jo
cmp
rorl
pusha
mov
push
clc
loope
jb
shl
es
xlat
orl
les
or
push
dec
dec
shrb
sub
les
push
iret
mov
ja
enter
jecxz
je
scas
pop
loope
stc
cmp
cmc
sub
jecxz
in
ret
pop
out
pop
dec
pop
and
pushf
loope
push
lahf
xchg
fidivl
and
enter
mov
cmp
lock
pop
arpl
mov
loope
pushf
jg
std
jns
push
addl
mov
popa
lret
ds
add
mov
bnd
mov
lea
cmp
popa
sub
sti
cmpsl
mov
fsubr
popf
pop
mov
or
push
xchg
add
repz
loope
pop
sti
add
arpl
push
lcall
and
andb
jns
push
dec
or
outsb
cwtl
inc
mov
or
call
add
loopne
inc
mov
sub
and
cmp
mov
mov
fsubrs
or
fs
clc
mov
mov
or
andb
cmpb
fcmovbe
pop
pop
nop
in
popf
outsb
push
inc
pop
movsb
mov
addr16
sbbb
aam
or
ss
adc
jmp
loopne
jmp
xchg
pop
pop
inc
ss
mov
loope
mov
es
icebp
adc
push
pop
icebp
scas
xor
mov
sub
jne
jnp
imul
test
sti
fdivrs
push
fildl
in
sbb
xchg
js
xchg
fiadds
int
xchg
sub
sub
dec
push
inc
into
inc
push
je
sbb
sub
adc
pop
lock
orl
out
jno
cmp
inc
jo
aam
or
add
roll
movsb
mov
pop
stc
inc
shl
and
lods
jmp
fbstp
xor
popf
fsubrp
outsl
dec
xchg
into
mov
mov
out
clc
xchg
arpl
fildll
jnp
pop
jmp
bnd
loop
popf
xchg
push
outsl
movsl
sarl
jae
jmp
bound
lret
and
adc
daa
js
mov
mov
faddl
push
inc
test
cmp
push
pop
jle
subb
pop
in
push
xor
repz
ret
lods
and
jge
aam
push
dec
xor
push
sub
and
imul
mov
lcall
dec
shll
mov
lahf
test
inc
lcall
mov
in
mov
int
js
add
pop
les
nop
or
dec
add
pop
xchg
test
notl
lret
mov
add
jge
xchg
cmp
repz
and
add
sbb
ljmp
mov
loop
jno
sub
sti
out
jno
mov
xchg
xchg
add
sahf
xchg
xchg
fs
into
add
incb
incl
xchg
mov
adcl
cmpsb
and
ss
cmp
sub
xchg
jne
push
enter
out
int3
adc
pop
xchg
xchg
inc
add
aam
sbb
imul
lahf
sub
rclb
test
adc
mov
mov
aam
jno
xorl
push
xor
sti
add
jae
push
pop
cwtl
int3
jecxz
adc
rcl
mov
les
mov
icebp
dec
lods
lods
cmp
cmp
in
push
jnp
add
out
mov
ret
pop
dec
repz
mov
push
jbe
shlb
add
xchg
outsb
aad
and
add
bound
aas
xor
inc
sub
pop
popl
push
push
sbb
adc
dec
jmp
cmpsb
xchg
push
pop
jo
jae
jge
fbstp
aas
or
xor
cmp
inc
outsl
mov
xor
inc
push
adc
xor
adc
inc
mov
cltd
lock
push
movsl
shl
mov
fistps
mov
flds
mov
jne
mov
add
inc
shl
adc
or
frstor
leave
in
add
in
xchg
dec
pop
xor
pusha
sub
popa
stos
xor
sti
lret
cmpl
mov
sub
mov
jl
dec
test
inc
dec
into
cltd
loop
cwtl
fisttpll
outsb
adc
dec
std
clc
ds
popf
pop
mov
dec
cltd
lcall
aam
mov
outsb
mov
and
or
jl
mov
out
jp
mov
sub
call
inc
stc
mov
jno
stos
add
dec
movsb
insl
test
in
and
jle
fisubrs
mov
les
rcpps
popf
notl
sbb
mov
repnz
cmpsl
out
inc
lods
adc
mov
cmp
mov
fldcw
fsub
mov
ret
aas
push
jne
push
rol
sub
inc
push
iret
les
dec
sbb
mov
popa
mov
movsb
clc
shrl
fs
mov
into
pop
xchg
add
mov
push
mov
sbb
ljmpw
shr
sub
jp
imul
fs
inc
rorb
add
clc
adc
or
xchg
test
mov
mov
lahf
imul
add
sbb
movsb
mov
loope
mov
xor
sbbl
and
mov
jne
fldl
jecxz
popa
add
js
cwtl
rcrb
mov
pop
adc
sbb
xorb
xor
push
lods
push
lods
sbb
jb
mov
sahf
gs
ret
dec
pop
mov
mov
sbb
dec
pop
shld
rcl
aam
adc
push
int
imul
push
data16
or
lods
test
xorb
icebp
insb
mov
shlb
adc
jbe
ds
push
push
dec
sbb
pop
and
imul
insb
cmpsb
xchg
pop
pop
mov
dec
jnp
cmp
fstp
rcrb
inc
jbe
movsl
pop
lds
xchg
sbb
lcall
sarb
test
mov
or
sub
stos
mov
js
pop
add
shl
das
mov
sbb
scas
add
fs
cmp
and
or
in
fwait
mov
imull
and
sbb
mov
iret
pop
ss
inc
mov
mov
in
sbb
mov
pop
mov
push
mov
popf
mov
in
fildl
loope
aas
mov
rcrb
mov
jle
popa
mov
jbe
pusha
insl
sahf
mov
mov
test
stos
sbb
pop
out
out
aaa
xor
mov
and
dec
mov
pop
cmp
call
inc
stc
dec
ja
repz
scas
shrb
icebp
sbb
xor
xlat
cmp
loopne
mov
xorl
lock
sbb
push
push
into
or
mov
lret
js
out
push
loopne
ss
repz
imul
cmp
mov
hlt
xlat
push
lret
aaa
inc
pop
lods
sarl
into
pop
loop
push
push
fisubs
movsb
mov
inc
jnp
fdivs
clc
ja
mov
sbb
cmp
or
pop
scas
les
lods
pushf
imul
dec
lret
jecxz
cmc
scas
incb
add
inc
mov
lea
aam
pushf
adc
lods
pop
push
test
sbb
xor
jbe
mov
sbb
mov
push
dec
fdivl
shlb
dec
pop
out
push
scas
or
or
sbb
aas
sbb
cmpsb
or
adc
cmc
push
insb
loop
jne
stos
lret
aam
ret
xor
ljmp
mov
dec
aam
bound
or
mov
jnp
dec
cmpsl
jmp
cld
and
inc
cmpsb
insl
adc
sbb
pop
mov
push
jb
mov
or
test
push
imul
xchg
pop
in
pop
sarl
mov
sarl
loopne
lods
push
pusha
pop
loope
repz
cmp
push
loop
pop
mov
add
addr16
mov
sub
sub
add
mov
sarl
xchg
mov
pop
loop
mov
xchg
bound
aam
sub
mov
iret
and
inc
dec
pusha
pop
mov
in
hlt
cmpsl
mov
add
add
mov
jno
int
push
sub
scas
push
out
jo
add
dec
in
bound
out
mov
jae
sbb
pop
xor
scas
xchg
imulb
inc
xchg
je
scas
push
dec
repz
add
sub
ds
adc
out
or
int
test
fst
loop
xor
xor
aaa
xchg
pop
out
testl
pop
cwtl
lds
jbe
push
fsubs
ds
mov
dec
dec
pop
dec
andb
lock
addr16
push
js
insl
test
inc
cmp
mov
mov
xchg
jle
inc
repz
addr16
jmp
add
or
sub
loop
ja
out
rcr
pop
mov
daa
add
jb
outsb
lret
test
mov
daa
sti
mul
lock
mov
lahf
push
adc
and
mov
jne
add
int
scas
push
add
inc
xchg
ljmp
pop
push
xchg
ja
ficoml
mov
cmp
or
add
sbb
jg
jge
push
inc
scas
mov
popf
test
fildll
push
loopne
out
add
push
loope
jmp
push
call
fdivl
xor
jb
push
dec
imull
push
cltd
into
dec
cmp
je
in
enter
out
nop
fadds
pop
push
cmp
rclb
push
mov
pop
nop
dec
lock
xor
push
fcmovne
andl
inc
inc
push
clc
pushf
push
mov
add
push
stc
jne
or
test
outsl
sahf
xor
pop
imul
scas
movsl
dec
jae
stc
js
mov
pandn
xchg
stos
subb
nop
add
mul
loopne
lods
xchg
jl
fisttpl
sarb
cli
jecxz
xchg
sahf
sbb
adc
lods
jo
imul
enter
push
mov
sub
pop
out
xor
ret
int
xchg
cmp
jo
les
and
push
pop
pop
add
mov
fdivrs
fildll
std
test
cltd
out
ljmp
lea
adc
imul
push
cli
xchg
jmp
scas
inc
jo
sub
call
in
es
insl
pop
test
or
lcall
pop
inc
push
fwait
and
mov
ret
mov
mulw
xor
mov
inc
in
inc
lods
push
mov
fisubl
pop
in
icebp
repz
scas
mov
jmp
ficoml
push
iret
and
cmp
mov
cmpsl
mov
pusha
mov
pop
ds
loope
fdivrs
add
and
jl
and
xlat
pop
pushfw
repnz
mov
xor
dec
mov
sub
in
and
add
push
cmp
push
sbb
sub
push
jg
mov
rolb
nop
cwtl
ljmp
bound
push
pusha
mov
mov
daa
cmc
jo
cld
leave
xchg
cs
sbb
inc
or
push
rcr
xchg
in
aaa
push
mov
or
mov
gs
ret
pop
aam
loop
insb
rolb
lret
xlat
nop
jne
test
in
mov
int
push
insl
cld
fucomip
scas
shr
in
notl
and
ficoms
and
jo
lret
add
insb
in
int3
flds
jns
stc
out
cmp
xor
inc
into
or
cli
out
cmp
das
addl
pusha
mov
aaa
stos
loopne
sar
icebp
jp
mov
into
push
add
push
cmc
xchg
xor
int3
shlb
orl
in
sahf
aaa
ret
xchg
lret
mov
push
popf
fisttpll
inc
pop
sarb
adc
inc
pushf
ja
sbb
inc
lock
dec
inc
in
js
mov
inc
jo
stc
repnz
adc
jnp
lahf
scas
push
leave
adc
mov
pop
int
or
lahf
sub
jne
push
sub
test
and
jle
jge
std
lods
xor
push
add
movsb
repz
les
add
fdivr
test
sbb
fimull
and
xchg
mov
lahf
or
mov
jnp
icebp
imul
scas
mov
loopne
shl
out
push
fs
pop
xor
add
inc
ja,pn
inc
xchg
xchg
loopne
lret
jp
sti
add
stos
dec
into
lods
sbb
xchg
sub
leave
xor
sbb
das
push
iret
add
out
mov
cmp
adc
adc
in
xor
pusha
mov
stc
mov
pusha
mov
mov
inc
pushf
cltd
mov
rcrb
fmul
lods
dec
add
adc
jo
shl
mov
out
es
push
pop
decl
sub
jno
sti
mov
mov
shrl
rcr
shll
mov
mov
lret
jecxz
lods
sub
loope
hlt
xchg
repz
dec
fcmovnb
jns
inc
pop
add
lahf
out
pop
jo
outsb
test
or
pop
cwtl
loope
xor
cmpsl
test
mov
mov
cmp
aaa
insl
xor
add
loop
in
mov
pop
dec
inc
cwtl
adc
in
aaa
int3
push
es
cmp
jecxz
mov
mov
xchg
les
push
popa
out
loope
sbb
les
xorb
xor
lret
or
jmp
insb
dec
jae
arpl
and
mov
sub
push
aam
or
scas
cmc
out
movsb
sub
push
push
out
mov
add
push
or
outsb
cmp
nop
lahf
sub
cmp
fucomi
mov
cs
hlt
ss
pop
pop
xor
mov
lea
mov
cltd
and
loope
outsb
push
jl
stos
ds
pusha
adc
loope
xor
jmp
cld
pop
cmpsb
call
jecxz
cmc
cld
stc
lcall
xchg
inc
into
enter
dec
mov
in
les
out
fs
jecxz
adc
adc
mov
or
out
and
sbb
and
jb
je
bound
inc
ret
jl
inc
bound
add
fsubrs
fs
mov
push
jmp
in
insl
stos
pop
stos
outsl
jg
lret
push
mov
mov
dec
mov
mov
outsl
and
add
fnstenv
mov
inc
movsl
xor
cmovp
push
jp
ja,pt
movsb
cmp
push
jo
out
shrb
jbe
jge
sbb
mov
sbb
nop
mov
and
pop
jl
cmpsb
in
outsb
and
stos
aad
outsb
push
fs
sub
ret
mov
in
stc
lret
lock
loop
jp
push
sti
push
inc
iret
ficoml
push
dec
repz
clc
dec
js
sbb
mov
pop
lret
mov
pushf
leave
sub
add
popa
pop
sub
in
jle
icebp
sbb
fldlg2
adc
lret
scas
sub
dec
mov
mov
jle
xor
mov
mov
inc
jns
mulb
inc
stos
gs
mov
jno
xchg
pop
xor
dec
lcall
das
xorl
fwait
push
daa
mov
popa
cltd
or
fwait
and
shll
cwtl
stc
mov
sub
cli
mov
mov
imul
dec
pop
sbb
lods
jne
rorb
adc
sub
add
push
fldl
mov
std
repnz
test
mov
and
cli
adc
jb
sbbb
jg
inc
jnp
test
sbb
cmp
xchg
cli
ja
mov
jno
ljmp
leave
push
ja
sbb
outsb
adc
cmp
aad
orb
adc
inc
cmp
xchg
pop
bnd
into
lret
add
imul
xchg
into
mov
add
cwtl
ja
fwait
fs
les
dec
lcall
cld
mov
cmp
lret
xchg
out
inc
lahf
mov
das
movsl
mov
repz
add
shl
mov
addr16
outsl
mov
pop
pop
dec
scas
aam
mov
testb
lock
push
mov
loop
movsb
jmp
bound
bound
pop
xor
mov
push
into
mov
adc
in
sbb
ljmp
add
fmuls
pop
ss
add
cmpsl
outsl
and
xor
add
hlt
xchg
jno
fucomi
ss
es
cmpsl
pop
loopne
iret
jnp
sti
test
inc
ret
inc
push
stos
iret
jecxz
loope
cmp
jp
jnp
cmpsb
fimull
out
and
filds
and
dec
pushf
ljmp
sbb
dec
mov
sub
sub
lods
cmp
cmp
mov
dec
add
mov
mov
xchg
lods
xchg
mov
and
jmp
adc
sub
mov
fnstcw
loope
or
pop
ss
lea
mov
and
je
in
dec
xchg
ret
gs
mov
add
notb
aam
scas
in
xchg
xor
bound
ja
mov
push
push
pop
movswl
xorl
mov
fsubrl
scas
and
pop
andb
and
andl
cmp
dec
sub
mov
adc
cld
clc
dec
jge
xlat
mov
daa
lret
xchg
and
mov
or
adc
inc
scas
sti
mov
add
cmp
cmp
mov
cmp
mov
pop
jecxz
mov
xlat
repz
sbb
sbb
cmp
sar
or
cltd
mov
lds
add
mov
icebp
shl
cli
fsubrl
mov
sub
dec
or
pop
inc
lock
xchg
in
insb
outsb
insb
cmp
xor
add
cmp
aam
adc
xchg
test
sub
shrb
popa
or
adc
sub
fs
inc
xchg
add
shl
imul
movsb
jmp
jge
dec
sbb
loope
call
add
scas
hlt
test
je
popa
nop
rol
loopne
xor
sar
test
mov
dec
std
cmpsb
cltd
mov
push
call
ret
out
or
adc
mov
jge
lret
inc
mov
int
mov
sti
sbb
cmp
mov
or
movsb
push
push
jnp
add
mov
push
lds
fsubl
clc
gs
test
sub
cs
adc
dec
jge
outsb
fs
aas
jno
lret
mov
push
arpl
out
clc
sahf
mov
pop
enter
sbb
fwait
add
sub
pop
mov
sbb
outsb
sub
xchg
sbb
addr16
mov
insb
es
cmpsb
jne
xchg
add
fbstp
sbb
add
jne
clc
sub
sbb
cmc
out
out
das
or
sahf
rcl
negb
aad
or
pop
xor
mov
pop
push
mov
sbb
jo
sub
mov
stc
push
js
mov
or
push
das
pop
adc
and
jno
cmp
push
imul
popa
xchg
pushf
mov
fwait
outsb
adc
rcll
cmp
push
imul
mov
call
sbb
push
xchg
fs
imul
bound
cmp
pop
popa
push
cltd
mov
cmpsb
sub
gs
cmp
and
lods
loope
xchg
xchg
mov
jp,pn
fistpl
mov
mov
and
arpl
fistpl
mov
dec
push
idivb
outsb
scas
lods
mov
pusha
hlt
xor
xor
jmp
aam
js
push
sbbl
pushf
in
lods
xorb
xor
test
mov
mov
shr
rorb
dec
int3
cwtl
mov
or
inc
pusha
aaa
mov
mov
adc
dec
popa
push
out
xor
out
pop
push
loop
jbe
xchg
pop
or
cmp
sbb
out
daa
cs
pop
fidivl
out
dec
xchg
incb
pop
mov
and
aas
gs
xchg
cmpsl
xchg
mov
jl
dec
or
imul
movsl
pop
pushf
dec
mov
testl
and
sub
mov
mov
mov
mov
ficoml
fldenv
mov
orl
cmpsb
lcall
push
or
add
test
jb
fstl
ret
inc
data16
loope
mull
push
fdivrs
jmp
cmp
inc
add
repnz
cmovo
sti
jo
icebp
dec
sbb
loopne
xor
mov
sub
enter
inc
leave
push
dec
arpl
fwait
in
xlat
fs
sbb
xlat
movsb
outsb
jae
loop
pop
in
push
fdivl
pop
in
insb
fstpt
bound
xlat
jnp
mov
sub
stc
sub
std
insb
in
add
and
mov
out
or
mov
pop
pop
insb
cmc
lock
fwait
xlat
aad
hlt
mov
mov
lret
mov
fidivl
cmc
sub
sbb
ja
repz
fld
insl
jl
cmc
nop
sub
cmpsb
cmp
mov
mov
jo
popa
mov
jp
test
cwtl
xchg
jne
in
lret
data16
mov
je
add
jo
inc
xchg
call
fucomi
rolb
out
cmpsl
jne
arpl
jmp
adcl
enter
in
and
inc
xchg
fsub
mov
pop
xchg
andl
addl
cmc
push
mov
mov
ret
cli
jns
leave
xchg
pop
adc
dec
inc
iret
cld
push
daa
iret
sbb
push
repnz
test
add
jge
sbb
inc
cld
fnsave
mov
pop
cmpsl
sahf
mov
adc
popa
mov
lahf
cmp
orl
stos
or
cs
xchg
loope
inc
call
int3
fnstsw
in
int
and
scas
sahf
sbb
or
sbb
mov
sub
pushl
add
movsl
mov
lds
test
cwtl
movsb
in
dec
test
outsl
test
push
pop
xor
xor
cmpsl
shrb
fadds
or
int
jo
and
lods
ficoml
xlat
fisubl
adc
lods
pop
scas
arpl
je
stos
cld
mov
sahf
sub
sti
lahf
jl
ror
dec
mov
pop
je
addr16
sbbb
dec
dec
scas
into
xlat
ficoml
xor
push
mov
ljmp
dec
pushl
sbb
inc
push
fwait
adc
stos
push
cmp
ja
std
imul
mov
add
out
xchg
sbb
outsl
xchg
aad
dec
iret
outsb
loope
fdivr
xor
clc
jne
dec
enter
stos
mov
mov
jmp
push
jmp
icebp
jp
gs
andb
stc
sbb
enter
sub
lods
push
xchg
lahf
lods
and
cmp
pop
in
inc
xchg
pop
add
imul
mov
mov
ds
in
mov
xor
or
sbb
imul
jge
adc
daa
mov
pop
xchg
adc
stc
in
or
iret
mov
pop
sti
jl
adc
imul
inc
fadds
add
or
out
into
xchg
lret
icebp
inc
test
popa
mov
or
scas
sub
cld
xchg
int3
mov
mov
lret
push
dec
mov
pop
or
mov
xchg
mov
mov
mov
jle
jbe
sub
push
jg
push
add
sbb
in
les
mov
sub
icebp
pop
push
sub
adcl
mov
cmp
and
or
adc
cmp
lcall
adc
das
mov
in
sbb
mov
testl
lea
mov
inc
aam
test
cmp
scas
ret
add
dec
and
mov
ret
add
outsl
pop
mov
adc
fwait
or
xor
add
inc
mov
cmp
sbb
and
cmp
lcall
mov
and
loope
rorb
xchg
adc
pop
xor
stc
sbb
or
int3
inc
fsubrs
lods
movsb
or
pop
xchg
jl
sahf
in
sbb
sub
rclb
aaa
dec
mov
cmp
mov
fs
movsb
jge
push
sub
in
mov
dec
imul
dec
cmpsb
mov
movsl
cltd
push
movw
inc
add
pop
sub
out
or
nop
xchg
lret
sub
movsb
arpl
into
pusha
lcall
xchg
add
pop
loope
jbe
or
in
andl
jp
or
mov
push
mov
or
loop
xchg
lret
fidivs
add
call
stc
in
inc
push
ret
add
rclb
std
xchg
adc
mov
mov
sub
sub
sarb
imul
pop
xchg
lcall
jge
push
or
mov
popa
sub
xchg
xchg
addr16
mov
mov
in
adc
lods
push
mov
mov
pop
cmp
sub
popf
jp
lret
lcall
aad
rcll
cmpsl
xor
mov
add
xor
pop
xor
fistl
sar
call
inc
enter
add
mov
cwtl
jmp
or
sbb
aas
sbb
and
js
sub
dec
cmpsb
mov
inc
cmpsb
jmp
je
adc
cmc
leave
mov
std
add
mov
les
jb
stc
jecxz
mov
sbb
js
dec
xlat
mov
lds
or
shll
inc
dec
js
nop
outsl
in
fstps
stos
popa
scas
aad
adc
subb
mov
and
fists
cltd
cmp
popf
aad
cltd
sub
bound
push
lret
in
sar
adc
das
push
stos
out
sti
add
mov
insl
push
sub
jne
call
dec
jb
xchg
and
sbb
or
jp
adc
out
rcrl
jno
rep
inc
mov
mov
bound
insb
ljmp
lods
and
lds
push
cmp
aas
xor
mov
hlt
hlt
fs
lds
loop
cwtl
lds
loopne
aad
mov
inc
cmp
lods
dec
or
sub
xchg
xchg
and
out
mul
xor
sub
fistps
push
or
sbb
fsubl
mov
xor
in
inc
dec
and
sbb
mov
add
pop
enter
push
adc
andl
lahf
jp
dec
repz
mov
mov
addr16
scas
fistl
cld
xchg
or
test
push
idivl
or
stc
mov
scas
xchg
fsubs
add
test
sub
xor
call
movsl
add
push
ret
xor
cltd
push
mov
xchg
scas
pop
jne
imul
mov
fidivrl
arpl
ljmp
mov
cli
push
sahf
ds
jp
jnp
sub
ret
in
scas
pop
push
push
jns
cmp
scas
xor
inc
push
and
mov
cmp
testl
outsl
lods
inc
scas
out
rcll
push
pop
les
jne
leave
out
fimuls
add
bnd
push
adc
orl
cmp
jne
cmp
sarb
or
orl
push
in
or
pop
call
in
xchg
jg
das
cwtl
xor
dec
or
leave
cmp
dec
nop
imull
je
icebp
loopne
in
push
sbb
mov
cmovno
push
sub
sbb
and
sahf
mov
aas
dec
xor
jle
inc
mov
gs
scas
das
xchg
jmp
sarb
cmp
xor
movsl
out
les
loope
xor
sub
and
out
decb
xor
mov
cwtl
sbbl
xchg
jno
pop
int3
jge
mov
jmp
in
pop
frstor
mov
mov
pop
in
and
add
lock
out
cmc
adc
inc
pop
xchg
es
test
test
push
je
fs
add
push
mov
aad
xchg
inc
int
shrb
cmp
pop
shlb
jns
inc
mov
mov
out
add
daa
add
fcmovbe
xor
xchg
testb
xor
xchg
add
mov
inc
sub
lods
sahf
inc
es
mov
xchg
in
dec
sbb
jne
into
stc
dec
cmp
lahf
mov
inc
xchg
adc
int3
adc
and
setle
xor
shr
call
pop
push
es
cmpb
out
lock
and
ja
outsl
lcall
sbb
mov
xor
inc
xchg
push
jb
pop
test
sti
xor
arpl
cmc
xchg
stos
add
adc
imul
sbb
js
stc
sbb
jne
sbbl
or
outsb
cs
ljmp
push
into
mov
je
ret
cmp
push
jno
mov
pop
insl
pop
ret
pop
ja
shr
xor
lret
hlt
les
dec
sub
mov
push
mov
ljmp
and
mov
mov
leave
outsl
adc
sbb
test
es
scas
daa
mov
add
push
dec
sbbl
out
out
inc
and
jbe
leave
pop
aam
popa
mov
lods
mov
frndint
mov
sbb
xchg
popf
das
icebp
enter
int
stos
leave
test
cmp
jp
xor
outsl
lods
aam
lods
and
mov
pop
xor
test
dec
rcrb
xchg
add
shlb
or
ljmp
jae
les
push
decb
sar
sti
xor
push
fs
orl
stc
mov
mov
cmpsb
fsubrl
push
in
mov
sti
pop
adc
adc
cmp
sbb
dec
popl
mov
outsl
adc
popf
cmpsl
test
xor
mov
setge
cmp
test
movb
jmp
inc
idivb
push
pop
popa
mov
xor
test
lods
nop
lods
mov
loopne
addb
mov
lret
xor
lea
mov
jbe
in
jecxz
inc
add
push
in
cmpsl
call
imul
cli
out
pop
lret
das
sti
jl
repz
mov
xor
jno
jo
cmpsb
dec
out
gs
cmp
out
enter
cs
iret
jae
cld
loopne
dec
data16
jno
cmp
jl
bndstx
cwtl
enter
ret
sti
cltd
xchg
rcrl
adc
loope
cmp
sbb
or
jnp
std
sub
ljmp
loop
ret
addb
mov
mov
aaa
mov
dec
ljmp
or
xchg
adc
arpl
in
popf
ss
adc
cmp
arpl
mov
rcr
lods
cmc
push
mov
ficoml
sti
xchg
test
and
xchg
js
outsl
mov
call
cwtl
inc
loopne
mov
sbb
lock
clc
mov
sbb
xor
sbb
fistpll
mov
enter
gs
pop
shrb
xchg
or
push
imul
decb
fcmovnbe
fldcw
push
popa
addr16
cmpsb
test
or
xchg
into
nop
rcrl
fs
stos
inc
xchg
xlat
push
popf
jl
lods
lahf
pop
mov
dec
es
mov
aad
pop
lret
sub
loop
lret
test
cmp
xchg
sub
sarl
cmpsl
test
pop
jno
adc
les
mov
pusha
adc
push
test
mov
jle
scas
mov
int
add
adc
shrl
arpl
cwtl
mov
mov
scas
jo
or
xor
jo
call
mov
sub
das
cmp
mov
je
or
ja
cmp
adc
sbb
loopne
dec
xchg
je
nop
cmp
xchg
mov
and
adc
std
mov
shlb
and
inc
outsl
sub
bound
jbe
repnz
pop
ja
into
rcl
fisubrs
lahf
adc
push
sub
dec
dec
cmpsl
cmp
pop
fwait
mov
push
leave
or
fs
leave
loop
xchg
mov
daa
push
add
or
cmp
sbb
sbb
mov
xor
pusha
sti
dec
std
jnp
inc
dec
sub
mov
jo
scas
sarl
inc
sahf
mov
xchg
sbb
sbb
sbb
inc
lahf
rcr
arpl
pop
inc
data16
icebp
insl
mov
mov
sbb
mov
xor
dec
adc
lcall
in
iret
into
je
sub
movsb
mov
push
dec
cmpsb
imul
in
inc
jno
or
mov
movsl
sub
test
push
outsl
push
lds
rorl
xchg
inc
cmpsl
lret
ret
fs
xor
xchg
add
adc
inc
pop
adc
add
add
jbe
loop
xchg
test
stos
clc
adc
negl
paddb
movsb
outsb
pop
in
ja
add
leave
dec
stos
push
sub
lret
sub
push
xchg
inc
xchg
fsubl
xor
sti
mov
inc
test
sub
adc
adcb
sbb
rorl
pop
or
cmpb
push
stc
jg
mov
iret
and
shrb
adc
and
jl
mov
enter
add
sti
test
cwtl
push
sbb
add
pusha
push
adc
es
jle
imull
mov
xor
outsb
xor
sbb
sar
xor
mov
jo
lcall
cli
jecxz
test
aam
in
adc
pop
push
inc
mov
pop
jno
jecxz
inc
sbb
aad
mov
cmp
push
xor
xchg
std
cltd
out
dec
hlt
dec
in
inc
or
add
pop
xchg
mov
mov
add
mov
jnp
cmp
adc
and
fcoml
ret
out
sbb
imul
fstpl
add
in
jb,pn
mov
leave
fidivrl
jb
gs
stc
mov
adc
ret
lahf
notl
fiaddl
insl
cbtw
pop
icebp
fcompl
stos
rolb
cmp
mov
mov
mov
loopne
movsb
sub
test
je
or
fdivl
add
sti
jno
or
mov
std
mov
lret
dec
repnz
pop
push
popf
xchg
jp
movsl
aam
sbb
cli
mov
mov
sub
mov
rcll
cli
mov
cld
xchg
sbb
lgs
pusha
pop
mov
push
adc
imull
pop
cmp
mov
insb
outsl
lea
inc
adc
push
mov
popf
push
sub
inc
xchg
mov
add
aas
aam
shl
add
adc
adc
mov
pushf
in
cmp
rorl
jmp
and
aad
cmp
mov
repnz
pushf
iret
and
sub
add
mov
cmp
jmp
xchg
cltd
jno
sub
stos
push
inc
pop
jmp
pshufw
test
fdivl
mov
ja
rep
lds
int3
cmp
pop
add
sub
stos
call
lods
hlt
mov
sub
shrb
rcr
inc
aam
pusha
lcall
dec
loopne
stos
addr16
lods
jmp
inc
jo
lods
xchg
and
jns
xor
push
out
and
jmp
in
and
mov
pop
mov
imul
or
dec
mov
das
iret
cmc
and
shlb
sarb
jge
jle
cmpsb
inc
add
ret
mov
in
cld
popa
pop
pop
shll
cltd
jns
loop
sub
mov
test
jg
dec
pushf
xchg
test
out
add
or
pusha
out
jno
adc
jp
loope
or
jne
arpl
int3
les
inc
xor
leave
mov
sub
push
xor
jmp
jae
fstpl
or
jp
add
add
scas
pusha
mov
pusha
jle
les
mov
inc
xchg
fsts
sub
pop
mov
adc
add
jnp
aaa
leave
test
sbb
in
mov
arpl
or
ss
jbe
adc
jno
pop
pop
lahf
or
out
je
or
scas
dec
jl
or
jl
cmp
sub
xor
xor
cmp
test
call
popf
inc
pop
mov
loop
add
mov
lcall
add
xchg
mov
fbld
sub
cltd
pop
jo
lods
and
sbb
mov
push
mov
push
mov
pop
sarl
insl
adc
arpl
js
xor
jge
or
xchg
adc
test
push
andl
fs
push
mov
out
repz
outsb
ja
hlt
jle
addl
nop
pusha
xor
pcmpeqb
cmpsb
imul
pop
shr
negb
push
or
inc
aad
mov
stc
lods
push
fs
cmp
cwtl
xchg
or
aaa
jb
fwait
dec
scas
xor
cld
push
movsl
fcmovnb
jp
mov
adc
rcl
pop
mov
xor
stos
rcrb
popf
cmp
sbb
pop
insb
mov
sbb
push
jl
popa
adc
in
gs
jp
xor
fimull
fnsave
or
inc
aaa
addr16
je
shll
ret
jo
call
andb
push
and
or
mov
jno
jae
mov
mov
je
fwait
xor
pushf
out
fidivl
enter
call
push
imul
dec
ja
std
push
mov
xor
sti
dec
and
pop
stos
icebp
inc
iret
mov
or
notl
test
add
xchg
pop
jp
stos
jmp
or
into
aaa
jo
inc
pop
pop
jecxz
and
sub
les
mov
pusha
adc
movsb
divl
lds
push
mov
rorb
pop
push
mov
out
scas
outsl
mov
loope
sti
push
fmuls
jo
jg
mov
ljmp
add
push
lods
jl
jl
call
imul
mov
loope
inc
sub
adc
xchg
mov
mov
cli
cmp
pop
lods
cli
xchg
adc
fwait
dec
or
mov
push
adc
xchg
nop
xchg
sbb
imul
pop
mov
xor
mul
adc
test
aam
mov
jecxz
lods
cltd
jecxz
jl
rol
mov
jle
cwtl
fbld
xor
fcomip
jns
add
push
jbe
mov
push
inc
push
movsb
mov
lods
cmpsl
adcl
test
sbb
add
popf
push
nop
fnop
addr16
lods
add
cmp
sbbl
xchg
cmp
inc
rorb
ljmp
shll
cmp
jl
ret
or
sbb
jns
xchg
xor
push
int
jle
lcall
cmp
dec
mov
int3
rolb
and
fisttpl
xchg
xchg
inc
inc
fisubs
jbe
insl
aad
insb
cli
mov
jecxz
mov
fcmovnbe
xor
pop
xlat
jecxz
cmc
aad
sarb
sub
out
lahf
popf
sbb
cmp
push
cwtl
negb
arpl
repnz
push
mov
sub
jne
push
movsb
jecxz
mov
lahf
cmp
sti
cmpsl
mov
icebp
xchg
test
inc
mov
fcompl
jnp
movsl
sbb
jle
pop
aas
std
xor
mov
lods
ljmp
cmp
outsb
and
jbe
adc
adc
jle
dec
mov
repnz
test
inc
mov
fidivl
arpl
daa
jecxz
xor
inc
or
scas
test
dec
in
daa
inc
pop
push
inc
pop
inc
sbb
arpl
lret
ret
imul
add
sub
inc
mov
fildl
jmp
rcl
jl
or
sub
lds
pop
idivl
xchg
xchg
inc
cmp
arpl
pop
rclb
add
sub
into
inc
ret
das
jo
cmp
xchg
jecxz
fcomps
xor
pop
lods
lods
sub
pusha
mov
xchg
jo
adc
out
jnp
and
cmp
in
int
fwait
xor
shll
out
test
and
test
imul
pop
sbb
roll
mov
xlat
das
mov
or
jbe
xchg
test
xor
mov
loope
fisttpll
fists
jbe
pop
lods
mov
test
les
cld
mov
in
sub
mov
mov
adc
hlt
movl
sbb
xor
sar
mov
sahf
sti
adc
jb
pop
outsl
jl
mov
sub
out
mov
push
shl
test
adc
mov
iret
xlat
jge
dec
call
or
sub
test
cld
mov
push
xor
mov
out
sbb
into
aaa
add
jl,pn
out
push
movsl
sahf
daa
sbb
es
mov
icebp
lret
in
inc
adc
call
es
add
jecxz
add
out
xlat
pop
ret
pop
fildll
mov
cmp
sub
xchg
mov
pop
ret
mov
or
ss
sub
or
mov
loop
dec
rcll
into
jns
fadds
jno
repnz
add
xchg
sub
inc
mov
push
test
movsb
loope
sbb
cltd
mov
sub
sub
stc
lock
xor
jge
in
imul
imul
sti
dec
adc
mov
ret
xor
lods
fcom
sub
lea
clc
xchg
ret
das
jnp
out
xchg
in
les
cli
xchg
repz
or
enter
in
mov
sarb
sub
cli
sbb
shrb
pusha
inc
fstpt
pop
sbb
cmp
xchg
and
and
fdivrl
ret
mov
lock
es
xorb
push
loop
repnz
push
cmp
mov
enter
stc
lahf
mov
push
dec
test
ds
push
mov
rcrb
pop
sub
xchg
cli
mov
push
idivb
lret
sbb
fmul
mov
sbb
aaa
sub
sti
nop
or
xchg
mov
lret
test
jmp
jno
sbb
enter
sub
or
adc
test
sbb
cmpsl
mov
loopne
insl
add
push
and
or
jae
fdivrs
and
xchg
stos
inc
jbe
mov
and
mov
jle
jno
call
jno
int
inc
sub
push
loope
test
orb
addl
sub
adc
je
fildll
sbb
loopne
js
mov
or
cmpsb
push
in
xchg
pop
adc
out
or
and
popa
mov
fmull
test
test
das
out
pop
dec
lret
push
ds
add
outsb
push
test
xor
mov
mov
add
loope
sub
pop
mov
push
pushf
add
call
cwtl
and
xchg
pop
out
stc
daa
iret
ficoml
aad
or
mov
inc
aas
push
dec
out
hlt
dec
xor
fs
test
dec
mov
cld
cld
test
add
sbb
or
mov
pop
in
sub
notl
inc
std
int3
ret
or
and
mov
cmp
imul
push
mov
push
cmp
cmp
mov
sbb
roll
dec
add
push
pop
push
cwtl
add
addr16
jp
sub
dec
sub
adc
mov
pop
cmp
loope
xchg
lahf
lds
outsl
adc
test
or
fisubrl
mov
xchg
or
aam
xor
cltd
pop
sahf
rcrl
dec
cli
popa
idiv
cmp
jge
jo
or
jb
mov
adc
loop
std
inc
ret
mov
out
subl
push
mov
xor
jbe
adc
mov
mov
xchg
jp
mov
cltd
jge
inc
test
xor
icebp
xchg
sub
clc
or
mov
or
or
jecxz
int3
add
ret
pop
fimull
call
xchg
inc
pushf
out
xchg
out
sbb
push
mov
or
xor
sub
xor
cmc
int3
cmp
outsb
data16
in
pop
leave
scas
daa
das
sub
add
mov
or
nop
paddb
idiv
outsb
or
jl
jae
jnp
cmpsb
sub
push
and
popf
and
pop
push
mov
pop
xchg
adc
jo
stos
cmp
push
std
fwait
sti
xchg
pop
roll
add
xor
mov
dec
mov
clc
xor
adcb
jnp
inc
mov
inc
xchg
lods
push
stc
shr
inc
sbb
pushf
gs
pop
inc
pop
xchg
scas
inc
inc
add
cs
push
mov
fmuls
mov
push
pop
pop
jecxz
sbb
test
push
dec
ror
mov
fbld
mov
test
out
mov
pop
addr16
mov
repnz
ja
or
outsl
popf
rep
add
and
lea
cwtl
rorb
outsl
aam
lds
lcall
dec
jns
in
add
cmp
cwtl
sub
mov
stos
loop
sti
push
cld
adc
inc
push
dec
pop
pop
jg
mov
adc
add
fstpl
fxch
pop
and
xchg
sbb
mov
or
pop
adc
stc
test
nop
je
test
jmpw
inc
add
shrl
or
imul
sbb
cmp
jge
and
pop
aam
cmpb
andl
lods
es
mov
loopne
lods
adc
movsb
lock
in
or
shrl
jns
cltd
add
adc
xor
mov
call
sub
or
mov
push
leave
pop
cmp
add
cld
bound
insl
mov
xor
cmp
movsb
out
add
mov
sbb
and
push
sbb
dec
sub
mov
push
pop
pop
shlb
push
inc
pushf
nop
call
mov
rcrb
lods
jg
sub
imul
lahf
mov
repz
cs
aam
pop
push
mov
add
stos
xchg
cmp
push
jle
es
dec
dec
sti
inc
psubsw
cmp
in
mov
cmp
pusha
xor
int3
mov
and
icebp
mov
add
jmp
int3
pop
push
int
jecxz
inc
arpl
adc
xchg
mov
mov
cmpsl
push
adc
lcall
stc
enter
xor
sub
lock
mov
dec
cmp
mov
shr
clc
mov
inc
orb
bound
lret
push
popa
inc
and
pop
cltd
rorb
and
sar
mov
xchg
in
into
in
cmpsb
lods
and
pop
xor
sti
sbbb
sti
mov
push
loope
cmpb
mov
fldenv
jbe
push
fdivrs
mov
mov
lock
ja
jbe
es
inc
shll
sbb
jg
push
test
push
jl
jmp
cmc
and
fsubl
or
mov
cwtl
fildll
dec
jae
je
cmp
sahf
repnz
mov
inc
int3
add
jmp
sbb
pop
ret
into
push
pop
mov
add
add
rcrb
mov
and
leave
int3
cmpb
fsts
cmp
inc
imul
dec
push
mov
ja
int
xchg
cmp
mov
sbb
hlt
mov
imul
sbb
nop
xor
fcomip
scas
subl
lret
add
aam
push
mov
pusha
sub
sti
add
ret
fdivl
inc
mov
ds
jne
or
and
inc
sarb
mov
dec
inc
jecxz
inc
mov
xchg
cmc
inc
pop
push
roll
mov
mov
repnz
mov
mov
add
xor
mov
in
jns
dec
jl
sub
pop
mov
out
mov
scas
ror
add
jle
jns
lcall
scas
outsb
decb
inc
push
in
les
inc
pusha
into
subb
fdivrl
movsb
xor
je
loopne
jnp
jae
stos
ret
xor
popf
jo
push
xor
xor
in
repnz
pop
idivl
jns,pn
lahf
loopne
ss
ds
ret
addb
out
iret
xchg
hlt
dec
mov
jno
and
test
mov
jne
pop
mov
repnz
mov
xor
shll
adc
push
mov
ficompl
or
jg
repnz
jle
jmp
cmpsb
pop
jl
loope
ljmp
dec
pop
outsb
xchg
jno
mov
xchg
out
push
lahf
es
outsl
mov
xorl
scas
lods
sbb
sbb
inc
mov
outsb
pop
jmp
stc
inc
fs
mov
cmpsl
cmc
dec
enter
lret
add
mov
sub
adcb
rol
sbb
pop
idiv
and
sbb
movsb
in
data16
clc
adc
add
loopne
sub
mov
pop
add
xchg
fsts
push
adc
xchg
push
popf
enter
lds
push
xor
inc
dec
xor
test
or
fisttpl
cmp
into
fisubrs
push
jno
inc
in
push
fidivl
mov
inc
das
leave
call
mov
mov
sub
cmp
jp
push
jle
xchg
adc
pop
test
cld
mov
loop
jecxz
xor
cmp
add
fisubs
ds
mov
aas
outsl
outsl
daa
lock
repnz
mov
cmp
ficoms
push
inc
adc
add
cmp
jp
fdivr
or
loope,pt
ss
fwait
mov
add
in
int
mov
filds
mov
lds
mov
dec
push
orl
jae
pop
push
sahf
mov
inc
movsb
ficompl
fwait
inc
ljmp
fistps
scas
lods
or
cmp
xchg
and
pop
pop
popa
mov
cmp
aaa
jmp
mov
xor
xor
hlt
and
scas
lret
outsl
out
dec
repz
inc
div
aas
mov
or
xchg
js
ret
or
sbb
pop
loopne
enter
pcmpgtw
leave
in
adc
int
je
subb
mov
loope
mov
movsb
jle
js
jns
fcoms
mov
inc
jmp
les
add
xor
movsb
imul
les
pop
cmpsb
jbe
push
jg
inc
dec
inc
jl
jbe
outsb
les
sbb
int3
out
imul
cmp
test
adc
mov
xor
sub
mov
test
jb,pt
jecxz
xor
ret
lock
or
fwait
pop
mov
int3
fisubrl
adc
jb
jbe
lcall
into
flds
push
xor
or
sub
and
sbbb
push
mov
rorl
addr16
mov
jecxz,pn
jo
in
push
imull
adc
inc
out
fldl
fisubs
shr
mov
add
jbe
clc
xchg
add
ss
das
sarb
xchg
cld
daa
or
push
jmp
in
dec
les
sub
neg
test
add
pop
outsb
stos
sub
or
and
int3
mov
popf
shlb
stc
fistps
test
add
jge
lret
cmp
sub
jge
sbb
bnd
cmp
jns
and
pop
cmpsl
sub
addr16
orb
push
jge
testb
clc
cmc
fdivp
arpl
sbb
push
mov
insb
add
xchg
and
jl
leave
jae
int
loope
fists
cmp
sbb
xor
dec
cmp
mov
stos
insl
or
nop
out
push
jae
mov
mov
cld
lret
jb
xor
push
pop
es
dec
adc
aaa
or
pop
adc
scas
jg
jb
testb
xchg
lret
and
out
das
sbb
xor
cmp
scas
mov
jmp
popa
scas
rcrl
push
cmp
xchg
bound
or
and
adc
adc
inc
or
mov
xchg
mov
sarb
sbb
ret
js
shl
push
les
test
xchg
movsb
sub
mov
lret
adc
inc
js
push
add
in
xor
bound
aaa
mov
in
jp
mov
in
inc
rolb
insl
psubusb
inc
into
scas
adc
mov
mov
cmp
push
iret
xchg
jns
out
sahf
push
imulb
hlt
inc
lahf
mov
xlat
ret
push
notl
add
inc
sbb
shrl
push
test
push
xor
jp
cmp
mov
pop
lods
mov
push
lcall
cmpsl
push
dec
mov
fsubl
jnp
mov
inc
int3
and
dec
pop
or
mov
sbb
jle
inc
lret
mov
movsb
and
mov
imul
popa
push
jmp
outsl
es
aam
lcall
nop
arpl
mov
mov
xlat
dec
mov
add
cmp
xrelease
add
sbb
mov
xchg
cmp
jl
jp
push
test
imul
jle
les
movsl
ja
out
inc
test
pop
std
lods
inc
pop
test
adc
adc
adc
inc
repz
or
xor
pop
cmp
roll
and
mov
add
movsl
hlt
add
mov
adc
xchg
or
or
jg
sub
and
xchg
mov
inc
jmp
sahf
lods
push
mov
orb
inc
sbb
fbstp
bound
dec
jmp
inc
popa
fs
daa
imul
fidivrl
pusha
adc
mov
cmpsl
xchg
sbb
in
jecxz
test
test
pop
pop
inc
mov
pop
jp
dec
orb
in
loope
and
or
fistl
mov
add
aam
pop
ljmp
and
cmp
push
push
xor
enter
adc
cs
mov
lar
dec
data16
sbb
mov
add
popf
jle
incl
sub
dec
test
push
notb
loopne
pop
cli
sbb
fists
cmp
inc
lcall
scas
cli
pop
adc
lods
iret
jle
pop
cmp
movsl
add
mov
push
aaa
mov
sbb
cmc
sub
int3
xchg
inc
jns
stos
lret
movsb
inc
jl
nop
and
and
jp
lret
movsb
out
stos
out
xchg
ja
out
xlat
jno
stos
addl
mov
dec
test
dec
or
out
lret
mov
rorl
repnz
and
xchg
mov
ficomps
pop
out
ds
sbb
adc
lods
or
cmp
push
inc
dec
pop
mov
xlat
ret
hlt
pop
sbb
call
pop
fdivs
and
lods
push
mov
fidivrl
push
fs
jp
imul
push
add
or
xlat
xchg
or
jmp
jmp
sub
std
or
iret
mov
daa
inc
mov
icebp
hlt
leave
jne
arpl
insl
cmp
pusha
jle
shlb
shlb
sbb
mov
loope
and
cmp
lea
popf
ds
push
xor
xor
sbb
fyl2xp1
pop
test
push
cmp
or
add
jecxz
mov
std
je
jns
mov
mov
fstp
in
fidivrl
mov
rdpmc
out
inc
into
xchg
mul
xchg
xor
cmp
std
pop
cs
and
jbe
push
adc
subl
jmp
cmpsl
cmpl
mov
call
adc
jle
mov
pop
fisubs
mov
fisttps
mov
jnp
adc
cmp
clc
test
cmp
iret
xabort
sub
dec
nop
fcomp
and
fistpl
jne
test
jnp
outsl
jae
fnstenv
ret
mov
roll
push
mov
test
mov
in
inc
or
inc
adc
pop
cwtl
jo
or
fsub
cli
mov
ss
ret
inc
mov
push
lahf
sarl
or
push
sbb
rcrl
enter
xchg
jge
xchg
fsubl
or
sub
mov
inc
cwtl
leave
out
jns
add
adc
push
lcall
dec
dec
dec
or
movsb
mov
and
ss
xchg
sbb
adc
into
cmp
pop
add
or
shlb
sub
inc
loop
xchg
push
cmc
and
adc
shrb
jne
negl
pop
inc
hlt
xchg
std
inc
loope
jnp
loopne
mov
adc
adc
mov
sub
scas
fcompl
mov
enter
inc
mov
imul
and
out
jmp
sub
push
pop
push
sbb
xchg
test
jg
lcall
loope
push
out
push
aaa
cmpl
mov
push
mov
aam
shrb
push
jae
push
mov
add
pop
or
movsb
xor
data16
cmp
dec
cmp
xchg
lds
jp
into
adc
out
mov
cwtl
cltd
or
mov
dec
or
push
mov
je
mov
in
jo
push
inc
add
int3
sahf
scas
in
push
inc
call
xor
or
or
push
mov
sarb
cmp
fsubs
cmpl
jecxz
mov
out
mov
movsb
xor
mov
cmc
sahf
xor
je
inc
roll
movsb
loopne
sbb
sbb
sub
ljmp
or
xor
add
cmpsl
jae
pop
mov
fwait
xor
add
decb
inc
inc
ss
adc
mov
insb
inc
or
movsb
pop
xor
xchg
aad
jo
pop
jae
cltd
sub
pop
xchg
or
pop
fldl
and
lods
out
mov
bound
jle
movsb
fidivs
inc
mov
inc
dec
add
pushf
orb
mov
cmp
dec
fwait
adcl
cltd
fwait
sub
add
shlb
and
pop
bound
sahf
jg
sbb
out
sbb
mov
mov
jmp
xor
leave
push
movsb
fsubrl
rclb
jecxz
push
aam
emms
aaa
push
mov
call
out
lret
pop
xchg
lods
mov
bnd
cmp
mov
iret
popa
jae
pusha
sub
iret
in
sbb
and
dec
mov
jne
sub
movsl
into
stos
or
mov
inc
fisubs
ds
out
call
jge
dec
mov
popf
gs
stos
add
jl
aas
jo
popf
testl
call
stc
push
add
jmp
sub
fldenv
and
sbb
jnp
pop
adc
adc
lea
arpl
popa
mov
repz
lods
scas
les
xchg
sbb
dec
xor
adc
addl
shrb
mov
jecxz
movsb
addl
dec
push
xor
push
sbb
push
xchg
lahf
adc
arpl
jbe
sub
test
js
mov
mov
iret
adc
andb
cmp
cmp
popa
fdivl
xor
rorl
sbb
adc
mov
jecxz
scas
imul
jle
and
jl
movb
sbb
and
repnz
sub
lret
mov
repnz
fucomip
popa
pop
add
scas
cmpsl
imul
dec
cmpsb
xchg
push
ret
pop
aas
dec
jno
and
popa
mulb
push
pop
mov
add
adc
inc
push
push
das
mov
mov
jns
jno
dec
pop
popf
pop
inc
push
mov
xchg
hlt
jo
add
pop
fisttpll
popf
jnp
add
inc
daa
lea
jmp
dec
divl
push
dec
inc
popf
pop
sub
cmpsb
fdivr
cmp
mov
cwtl
shll
fnsave
inc
rcr
mov
loopne
mov
rcr
popf
inc
test
push
jge
sbb
mov
ljmp
push
mov
rorb
fistpll
xor
adc
fists
cmp
xchg
push
xor
and
scas
and
scas
inc
arpl
pusha
sti
push
mov
mov
jle
sub
jle
mov
popf
pushf
mov
cmp
push
loope
add
in
dec
pop
inc
cli
je
out
and
push
das
mov
inc
aam
int
jmp
js
sahf
out
mov
mov
scas
inc
inc
sahf
fnstenv
mov
mov
nop
mov
mov
and
shl
add
jge
aaa
dec
nop
cli
inc
rcll
lret
mov
and
imul
sub
pop
cmp
jns
or
nop
leave
into
popf
enter
stos
dec
xlat
inc
call
mov
push
enter
sbb
push
push
sub
xchg
fld
shr
cld
popa
fstps
test
mov
movsb
popf
test
mov
pop
out
cli
xchg
incl
xchg
jb
fst
sbb
stc
adc
add
imul
and
mov
test
cmp
adc
pop
sbb
mov
outsl
sub
pop
push
pusha
pop
and
sub
add
aaa
rolb
dec
cwtl
push
xchg
mov
mov
data16
test
rcrb
fnstcw
mov
int
xchg
mov
sbb
dec
sub
mov
adc
scas
into
xchg
pop
or
jmp
mov
lods
jo
cmc
imull
push
pop
sub
test
sub
es
or
int3
jle
sbb
ficoml
cmovp
test
xchg
pusha
cmp
pop
into
mov
mov
fwait
push
sahf
adc
outsl
mov
xchg
push
mov
pop
and
shlb
aas
xor
shll
xchg
test
add
cs
cmpsl
rcl
xlat
mov
inc
mull
pop
mov
sti
dec
cmpsb
push
jp
daa
loopne
xlat
fsub
or
inc
mov
subl
scas
cmp
cmp
jl
les
xor
or
ret
pop
pop
push
inc
ss
xchg
and
sar
hlt
mov
adc
pop
loopne
pushf
xchg
and
mov
aam
jge
mov
sub
scas
dec
cld
cwtl
add
movsl
mov
sub
xor
xor
divb
cli
hlt
xor
pop
mov
mov
dec
mov
mov
addl
adc
adc
push
mov
enter
mov
int
scas
out
adc
orb
mov
out
xor
adc
pop
pop
jg
and
push
out
mov
outsl
push
mov
notl
jp
into
cltd
cmp
pushf
lahf
jge
push
cmpsl
jno,pt
cltd
leave
arpl
xchg
fcoms
jge
shl
es
mov
ret
in
pop
je
jne
loop
fidivrs
pop
and
mov
mov
xor
scas
sti
sahf
mov
jg
add
mov
cli
daa
xchg
add
aas
rolb
lods
mov
inc
lahf
add
mov
popa
push
adc
pop
std
mov
add
mov
in
insb
cmpb
ljmp
mov
or
xchg
lods
aam
mov
pop
ret
push
bound
and
loopne
sub
bound
mov
add
sbb
aam
lock
mulb
imul
outsl
and
xchg
in
adc
jne
jae
or
xor
push
addr16
in
gs
inc
mov
cwtl
xor
dec
scas
inc
in
gs
mov
cltd
int3
stos
pop
leave
sbb
jl
push
imul
rclb
or
arpl
ja
dec
jnp
inc
add
repnz
sub
out
cmpsl
or
imul
pop
xchg
sbb
or
aaa
and
scas
in
ja
mov
movsb
jbe
in
dec
xchg
repnz
or
out
stos
scas
in
dec
cmp
push
xchg
xchg
inc
aam
sbb
ja
fildll
adc
xchg
in
sbb
mov
push
add
mov
pop
sbb
cmpsl
int
xor
ss
shlb
gs
push
push
pop
repnz
stos
hlt
fisubrs
jl
add
call
and
fmull
dec
fyl2x
dec
xlat
aad
mov
cli
cmp
ja
stos
lock
bound
pop
fwait
repnz
adc
loopne
into
jmp
pop
iret
or
push
xor
sbb
push
aas
mov
in
dec
or
or
scas
mov
jg
jns
and
mov
stc
pop
in
add
les
jmp
mov
pop
jmp
int3
daa
inc
cwtl
sub
fsubrs
adc
lods
lock
ljmp
cmp
jmp
push
push
ljmp
in
fsubrs
inc
push
cmc
loope
or
sbb
sub
fs
push
pusha
cwtl
mov
outsl
pop
push
popf
out
loop
iret
push
inc
mov
xor
ficomps
mov
cwtl
sbb
sti
in
pop
mov
notl
xchg
nop
or
or
jae
cmp
adc
sbb
xorb
mov
and
loop
pop
mov
iret
add
sub
clc
bound
sbb
inc
jp
mov
insl
xchg
jle
dec
andb
das
insl
jmp
aaa
aam
pop
jmp
inc
in
leave
sbb
sbb
mov
out
jecxz
test
arpl
stos
aas
out
movsl
testl
lahf
jmp
push
jnp
arpl
xchg
dec
out
jg
jp
xchg
cmp
psllw
xchg
arpl
push
add
mov
or
push
cltd
out
test
adc
call
jo
adc
inc
out
sbb
mov
mov
sbb
andb
push
mov
sbb
jno
sub
jb
push
dec
les
sbb
orl
js
shrl
dec
cld
push
and
jnp
adc
bound
push
add
adc
mov
push
mov
push
and
fbld
jge
pop
jmp
mov
or
out
mov
dec
ljmp
stos
mov
fcmovnbe
sub
mov
outsl
push
test
xchg
mov
clc
fidivl
add
jb
rcr
jbe
rcrl
subb
xor
mov
adc
andl
mov
in
pop
ljmp
lcall
fcoms
cwtl
and
std
sub
inc
loop
mov
inc
and
int
xchg
dec
jp
push
dec
lods
pop
fbld
jne
push
movsl
xchg
insl
mulb
test
pop
jg
dec
test
je
lock
push
xchg
xor
fucomip
lds
add
lcall
fwait
lret
sbb
inc
std
mov
dec
cmpsl
cmp
inc
sub
add
or
xchg
jl
pop
jge
pop
inc
xlat
cltd
push
xchg
roll
aaa
movd
cli
mov
stos
dec
jp
sti
xor
pop
mov
enter
incb
inc
push
xorl
push
pop
jae
cmp
xchg
or
mov
jl
xchg
pushf
imul
pop
and
lahf
mov
sahf
repz
pop
fstl
cmp
inc
dec
xor
cmp
fcoms
std
mov
inc
mov
sbb
fbld
push
js
data16
jnp
addr16
and
xor
inc
add
pop
ljmp
ljmpw
add
int
mov
ss
idiv
movsb
imul
ret
int
xchg
gs
inc
and
jns
and
in
and
xlat
psllw
loopne
stos
loopne
xchg
inc
xlat
movsb
cwtl
add
aam
adc
sub
gs
jmp
lret
mov
or
mov
cmpsl
movsl
sti
and
dec
mov
jmp
adc
dec
sbb
lock
shrl
call
ret
xor
ss
ret
xor
popf
mov
divps
xor
adc
adc
fwait
ret
in
dec
xchg
or
mov
iret
jmp
or
stos
pop
jmp
sbb
scas
out
push
adc
mov
enter
mov
lret
stos
das
shl
xor
jmp
fsubrp
in
mov
mov
xlat
mov
popf
add
rclb
push
sub
loop
xchg
out
std
adc
int
xchg
dec
and
add
loopne
cmp
mov
jnp
loop
mov
add
mov
push
add
mov
jnp
repz
cltd
jbe
add
adc
mov
inc
or
pushf
adc
pop
mov
arpl
addr16
inc
outsl
jne
push
movsl
push
cmp
or
sub
stc
sbb
movsl
pop
push
xor
xchg
aam
sub
mov
xchg
push
movsl
add
dec
cmpsb
es
popa
lret
pop
xchg
dec
jnp
push
adcl
push
sbb
es
xorl
in
scas
mov
daa
or
leave
sbb
ror
cmp
or
loop
pop
mov
xchg
sbb
imul
sub
jo
inc
xchg
fdivr
mov
popf
jns
addr16
sub
and
mov
pop
cmp
or
push
cmpsl
scas
fcoml
and
inc
inc
mov
mov
repnz
loopne
xchg
rorb
jecxz
jb
std
and
dec
mov
call
icebp
ss
sbb
push
inc
ror
filds
jno
xor
sbb
or
jle
dec
and
hlt
xor
push
pop
arpl
and
imul
cmp
push
push
lret
fadds
push
test
imul
das
inc
mov
and
lods
arpl
fistpl
and
in
or
add
movsl
jne
test
mov
cmp
subl
adc
cmp
stos
dec
lea
sbb
gs
jge
or
es
sbb
push
scas
mov
fcmovbe
jne
push
inc
shlb
subb
lahf
stc
enter
lret
fidivl
jnp
arpl
fsubs
mov
adc
cmp
cmp
add
jl
test
insb
push
movsb
mov
les
lods
pushf
inc
pop
sbb
mov
dec
push
xchg
sbb
inc
push
leave
pop
and
xchg
dec
push
lret
and
addb
aas
fidivrl
shlb
cmp
lahf
imul
fidivrs
inc
jl
sub
jae
xchg
mov
sahf
js
pop
push
add
mov
push
jle
mov
lret
mov
addb
out
push
rolb
test
ret
das
adc
cmp
inc
mov
les
test
shll
or
xchg
mov
daa
inc
cmp
hlt
cld
aas
and
inc
mov
in
dec
test
xchg
sbb
or
sub
outsl
lods
mov
mov
cmpsl
mov
mov
inc
sub
lock
mov
clc
repnz
lahf
pop
jl
pop
ljmp
fisubrl
lahf
adc
iret
fsubr
sbb
adc
mov
test
add
push
ljmp
jno
nop
outsb
cmp
in
sub
mov
sbb
xor
fxam
outsb
aaa
sbb
cld
rclb
mov
inc
in
das
add
sbb
dec
mov
xchg
jg
cwtl
push
jo
cmp
aam
ror
push
and
sub
xor
cmc
mov
push
sbb
sbbb
insb
fwait
in
mov
movsl
stos
out
cmp
mov
add
mov
cs
sub
or
dec
leave
pop
mov
clc
and
lcall
cld
xchg
or
add
mov
mov
jmpw
je
arpl
rol
xchg
stc
fs
shll
pop
outsl
out
sbb
push
repz
cmpsb
lret
outsb
dec
cmpl
cmp
rorb
imul
hlt
fildll
adc
lret
adc
add
test
and
mov
add
xor
add
pop
ljmp
or
in
popa
cwtl
pop
shl
sub
scas
cmp
or
movsl
pop
or
and
aam
sub
add
cmp
pop
inc
inc
insb
dec
mov
popf
ss
sti
mov
mulb
lret
int3
lcall
aam
lea
cmp
lret
mov
jne
add
sbb
jo
inc
lock
or
sbb
sub
adcl
xlat
adc
out
pop
in
and
pop
loope
or
enter
repz
xor
insl
iret
fbld
jnp
cmp
push
dec
pop
jo
mov
loop
loop
mov
inc
mov
arpl
int
add
cs
xchg
mov
cmpsb
mov
xor
sbb
push
inc
and
aad
add
pushf
sub
cs
pop
out
push
hlt
lods
inc
hlt
push
pop
fstl
repnz
cmc
imul
and
push
out
push
shl
lcall
movsb
mov
pop
mov
insb
std
jecxz
push
adcb
sbb
jne
in
cwtl
test
sbb
jo
adc
outsl
fwait
ljmp
jbe
jecxz
or
add
inc
xchg
push
ret
add
sub
lahf
fcoml
icebp
or
xchg
lcall
js
out
jge
imul
add
dec
mov
jecxz
xchg
out
clc
lods
xchg
les
das
mov
imul
paddsw
int3
ljmp
push
mov
push
push
fcoms
pop
xchg
addl
outsb
adc
mov
sub
push
xlat
sti
das
jg
nop
rorl
sub
pop
cmp
push
cltd
xor
add
popf
sbb
jl
inc
imul
xchg
jo
imul
fsubs
pop
push
jno
add
fstp
inc
es
in
cmpsl
aas
in
stc
push
push
dec
icebp
and
ljmp
adc
arpl
andb
imul
lods
lods
cmp
push
sbb
push
push
popf
push
cmp
or
fsubrs
ds
adc
cmpsl
xlat
dec
stos
jns
cmp
mov
fists
sub
lcall
scas
dec
dec
add
aam
outsl
sbb
mov
loop
lds
sarb
popf
in
in
or
adc
stc
out
push
and
push
leave
mov
push
clc
sub
stos
mov
inc
jl
call
iret
inc
aam
sti
mov
sub
mov
or
mov
push
sbb
fsubs
testl
mov
adc
sbb
push
xor
test
bswap
data16
cwtl
data16
mov
or
rclb
jno
inc
adc
dec
test
jbe
mov
loop
mov
mov
xor
add
js
lods
adc
std
push
aas
add
jno
push
inc
pop
sahf
jle
inc
vmulps
movsl
lret
stc
xchg
inc
or
pop
sbb
or
and
inc
adc
pop
mov
lods
pop
xchg
rolb
jb
in
mov
xchg
rcl
cmp
cwtl
mov
and
cmp
addl
inc
lcall
mov
aaa
inc
xor
pop
lds
sbb
jns
aad
shr
daa
dec
jge
xor
jo
push
cwtl
mov
dec
adc
arpl
sarl
ds
push
mov
push
sbb
xlat
fidivrl
fwait
mov
std
stos
push
dec
jle
add
sahf
stos
hlt
call
or
mov
push
js
loope
ret
mov
cs
sub
loope
cld
test
frstor
out
sbb
sti
adc
test
cmp
sub
ljmp
outsb
in
repnz
mov
test
and
dec
jnp
shl
xchg
dec
in
les
fisubrs
in
cmpsl
incb
cld
cld
or
lret
jnp
adc
lret
mov
outsl
imul
cs
mov
loope
cld
dec
pop
les
or
add
cmpsl
push
enter
fwait
xchg
xchg
and
ljmp
movsl
pop
imul
inc
inc
fmuls
xor
pop
pop
ja
pop
adcl
xchg
addr16
mov
or
or
ja
jo
adc
xchg
lcall
and
push
dec
cmp
push
notb
das
dec
push
stos
cs
mov
dec
mov
push
mov
adc
clc
push
sub
xchg
clc
jmp
dec
sub
int3
out
jno
sbb
iret
iret
je,pt
pop
pop
int3
inc
adc
fcoml
inc
mov
mov
cmp
in
cmpl
shll
nop
aas
sarl
orl
lods
ljmp
inc
mov
xchg
cmpsb
aaa
mov
dec
mov
imul
mov
pop
loop
cmpsb
jp
inc
mov
int3
pop
es
push
cmp
pop
rclb
xor
pushf
pop
pop
cmpl
mov
pop
jle
mov
jbe
icebp
mov
jge
ja
add
cmp
mov
mov
call
xchg
push
and
jo
and
mov
test
enter
and
inc
cmpsb
outsb
push
mov
fwait
pop
stos
mov
mov
in
adc
clc
test
pop
mov
dec
adc
mov
dec
mov
and
fwait
nop
jbe
jecxz
jns
mov
and
in
lea
imul
cmp
push
sub
scas
fsts
adc
inc
push
push
and
stc
cmc
out
andl
inc
jb
mov
mov
dec
daa
lods
mov
or
xchg
jl
mov
scas
ja
push
clc
dec
and
scas
sbb
fwait
add
mov
bound
xchg
in
in
call
sub
xor
dec
push
mov
dec
das
jp
out
or
sub
vmptrst
mov
jbe
push
mov
mov
push
add
fisubl
adc
in
mov
pop
pop
cmp
sarb
dec
add
ss
sbb
test
or
repz
push
mov
lock
aaa
adc
push
ret
cmpsb
xchg
aam
add
subb
cmp
gs
das
stos
pop
lods
xchg
jl
mov
test
mov
or
movsb
adc
sub
les
mov
pop
adc
test
divb
xor
mov
dec
cmp
cmp
xchg
xor
mov
pop
inc
pop
mov
mov
pushf
fldcw
xchg
movsb
test
sub
loop
stos
mov
into
add
dec
jno
cmp
mov
sti
xorl
arpl
push
loopne
inc
pop
int
adc
dec
pop
lret
fsts
fadds
ljmp
setge
jle
and
in
xchg
loope
pop
adc
or
lock
jg
jns
xor
sbb
mov
mov
in
roll
or
push
push
or
jg
pop
push
push
xchg
mov
adc
stos
inc
inc
jg
xchg
out
push
jne
popa
xor
arpl
icebp
sarb
dec
sahf
fmuls
inc
int
imul
jae
mov
mov
enter
jae
aas
jp
fidivrl
lods
push
pop
cld
and
xor
sub
dec
outsb
cmp
or
jle
inc
loop
push
jne
out
shl
mov
xor
cmp
sbb
adc
jae
mov
sbb
push
jo
ljmp
rorl
mov
mov
jecxz
jmp
dec
cld
add
adc
clc
stos
iret
adc
fists
cmp
repz
and
jne
sbb
xchg
jae
pop
insl
stos
sub
into
bswap
or
les
shl
int3
mov
jmp
push
aad
loopne
sbb
sub
orl
stos
int
insb
int
out
inc
mov
scas
mov
std
push
mov
test
jg
popl
in
jbe
fwait
aad
adc
cmpsl
push
dec
add
jb,pn
dec
repnz
loope
cmp
loope
jb
cmp
jae
sbb
aas
and
test
and
call
pusha
add
sub
push
push
xlat
rorl
or
mov
pop
or
or
mov
push
and
and
or
inc
sahf
jne
adc
adc
hlt
and
cmpnltps
sub
dec
xchg
add
cmp
loop
cli
push
add
out
insb
fdivl
jae
scas
push
jmp
out
jae
test
inc
adc
outsb
mov
stos
je
roll
mov
xchg
iret
and
or
adc
ljmp
call
mov
int
cmp
repz
cmpsb
sbb
lds
daa
rol
cs
js
cmp
popf
jcxz
jmp
ds
adcb
mov
imul
rorb
sub
dec
pushf
test
xor
and
incl
data16
outsl
sub
int3
shl
test
mov
sahf
lret
fwait
repz
mov
and
mov
leave
in
pop
out
add
test
jmp
sti
addl
inc
dec
js
dec
mov
stos
insb
mov
cltd
in
dec
mov
push
xchg
lea
mov
mov
sti
test
lahf
pop
cmpsl
mov
dec
fildl
sbb
pusha
sub
xlat
rcl
jg
push
cmp
dec
sub
cmpsl
addb
xor
adc
sub
mov
es
push
xchg
mov
inc
sbb
inc
xor
aaa
pop
xor
in
push
xor
or
jge
adc
add
insl
inc
fisubrl
hlt
test
pop
jae
lock
cmp
push
daa
in
dec
add
scas
xor
mov
dec
pop
ljmp
pop
ret
stos
push
mov
mov
or
gs
jl
nop
dec
adc
cmp
push
popf
in
vshufps
adc
pop
add
aaa
mov
inc
les
mov
cmp
push
iret
lret
sub
jg
ss
lds
fdivr
mov
loope
adc
cmp
sub
and
push
jno
jecxz
push
cmpsb
outsb
out
popf
pop
fildl
insl
cmpsl
lahf
push
add
mov
push
mov
movsl
daa
dec
hlt
pushf
or
out
test
xchg
aaa
nop
jo
mov
test
cli
adc
cmpsl
cs
pop
arpl
xor
pop
inc
pop
mov
sbb
js
fs
call
inc
bound
pop
sbb
xchg
scas
fcomi
subb
sub
xchg
adc
jp
mov
sub
mov
aaa
push
test
add
loopne
mov
dec
mov
or
cmc
stos
mov
xchg
jmp
xchg
push
mov
ja
mov
imul
jns
xor
test
subl
jae
dec
sbb
xor
push
test
fdivrs
imul
jb
push
dec
jmp
mov
in
mov
inc
add
nop
mov
aad
ds
adc
push
hlt
adcb
mov
cmp
nop
xchg
xor
pushf
pushf
sub
xchg
lret
stos
add
xlat
outsb
jl
and
out
pop
pop
rorb
and
test
rolb
push
sbb
jl
jno
add
dec
cmpsl
fmuls
xor
jae
pop
sti
jmp
and
js
jbe
add
aaa
addr16
subb
sbb
stos
es
mov
pop
in
xor
jnp
adc
stos
push
mov
add
lock
std
jecxz
adc
es
push
cmp
das
es
mov
fs
enter
cmpsl
jle
shr
gs
cmp
xor
sub
jmp
ljmp
mov
jmp
adc
cmpxchg
dec
xchg
sub
cmp
jl
daa
daa
lock
and
sbb
cmp
into
data16
cmp
cltd
push
mov
insb
mov
pushf
rol
test
inc
or
lcall
mov
lret
xor
push
enter
cmp
add
pop
cmp
call
mov
sbb
dec
ja
cmp
or
mov
add
fdivr
mov
xchg
pushf
jecxz
lret
dec
dec
push
or
dec
dec
es
jne
pop
and
push
mov
movsl
inc
pop
mov
fwait
bound
insb
xor
loopne
cli
sub
shlw
pop
push
test
lock
faddl
jne
aaa
push
insl
sbb
lods
pop
int3
pop
loop
pushf
xchg
cmp
cmp
inc
mov
leave
test
or
xor
cmc
jecxz
decl
pusha
dec
and
mov
stc
fcoml
mov
push
sbb
inc
dec
sub
cmp
mov
popa
sbb
xchg
clc
jbe
cli
cmp
dec
pop
sub
xchg
or
push
adc
lea
xor
divl
and
pop
aad
xchg
or
push
push
jecxz
mov
jnp
sub
jmp
es
cwtl
sub
xor
test
inc
addr16
ss
std
frstor
aam
fistpl
dec
leave
pop
jno
lds
loope
or
lret
cmp
lret
filds
nop
outsl
les
pop
clc
add
mov
stc
andl
cmpb
outsl
pop
clc
xchg
enter
mov
xchg
aaa
int
mov
int
push
popa
pop
fsubrl
test
pusha
pop
test
xor
push
cmpsb
mov
xor
cmpl
mov
pop
xchg
cmp
sti
push
nop
arpl
mov
sbb
push
push
fs
jp
push
scas
cmp
aad
cmp
push
or
daa
jg
js
adc
mov
inc
sbb
ja
xchg
lahf
dec
and
insb
xchg
sbb
loop
xorl
leave
data16
xchg
push
push
pcmpgtw
fnstcw
dec
addr16
icebp
xchg
ljmp
inc
movsb
lret
xor
sbb
xor
and
jne
xchg
inc
int3
pop
popf
data16
mov
ja
xlat
fstpt
cmc
mov
icebp
hlt
in
pop
inc
daa
and
and
cld
sub
cmc
ja
jg
adcb
mov
jmp
sub
push
and
outsb
je
jmp
jo
jge
std
gs
clc
mov
outsl
dec
sbb
in
loopne
or
into
pop
out
jl
cld
fsts
lcall
js
js
out
mov
cli
add
or
cltd
cmp
jg
and
rorl
ret
mov
adc
sti
aaa
int
push
dec
mov
in
push
xchg
dec
jnp
jbe
and
xor
cmc
mov
cmp
sarb
test
mov
mov
mov
and
cmp
sbb
stc
repz
leave
shlb
jecxz
nop
sbb
mov
es
xor
jnp
sbb
je
daa
outsl
sub
xor
out
mov
arpl
xor
push
gs
mov
lahf
mov
icebp
xchg
rclb
xchg
stos
cmpsb
sti
mov
mov
mov
push
neg
fiaddl
push
test
cld
shl
je
cwtl
mov
inc
jle
imulb
aaa
sub
mov
cwtl
call
stc
lods
sbb
or
stos
add
xchg
mov
daa
lds
mov
jno
jns
sbb
adc
in
mov
int
sub
mov
fildl
mov
pop
imul
pop
mov
xchg
addr16
movl
mov
pop
popa
xor
jp
shlb
lea
jnp
pop
enter
cwtl
mov
adc
data16
push
das
cld
cmp
lahf
mov
shrb
pop
mov
mov
jmp
hlt
and
inc
push
xor
lcall
push
out
lcall
adcb
jle
dec
out
xchg
xor
sbb
mov
cs
mov
mov
leave
add
xchg
das
lret
int3
xchg
mov
je
xchg
addr16
inc
imul
jle
pop
icebp
out
sbb
es
jle
outsl
adc
dec
jge
mov
jg
dec
shlb
les
stc
cmp
jecxz
cmc
lret
rcr
lahf
add
xchg
xchg
iret
insb
call
out
xchg
adc
push
sbb
jge
cmpl
jge
xlat
inc
mov
test
adc
and
sahf
push
jb
push
adc
adc
sti
push
icebp
lret
add
xor
push
lods
adc
mov
mov
mov
imul
mov
cmpsl
test
add
in
jg
sti
xchg
sti
push
subl
mov
dec
jecxz
pop
adc
and
xor
aaa
shll
fsts
faddl
adc
xchg
ljmp
call
mov
loope
sti
bound
lret
xor
inc
fcomi
sub
mov
mov
ljmp
inc
cmp
xchg
arpl
lods
enter
jo
sub
repz
cmp
lds
cmp
std
mov
repnz
arpl
es
jne
outsl
add
popa
ja
sub
add
fwait
data16
mov
push
leave
sub
in
adc
sub
shlb
mov
dec
xchg
sub
dec
aam
sub
test
xor
fistpl
sub
xlat
mov
push
popf
xor
and
imul
rolb
jmp
loope
pop
mov
push
jno
jbe
outsl
mov
lods
hlt
cwtl
lock
ss
inc
add
dec
call
or
sub
aam
iret
pop
sarb
enter
jo
xchg
inc
dec
add
repz
movl
push
es
ret
cli
insl
add
lea
in
fsub
push
xchg
jbe
icebp
stos
cmpsb
mov
or
js
pop
addr16
loopne
dec
dec
mov
daa
pop
jno
xchg
push
push
popa
add
sbb
lea
mov
mov
in
sub
xor
adcl
mov
inc
xor
xchg
cmp
mov
or
out
add
xchg
int3
xchg
jns
mov
ret
mov
pop
push
out
js
and
mov
xchg
enter
lods
adc
and
or
fdiv
or
sub
sbb
mov
lret
ljmp
lock
lcall
xor
mov
popf
int
fsub
sahf
hlt
jge
test
shll
push
nop
inc
dec
in
lret
ljmp
cltd
sbb
ret
xchg
cld
xor
jns
xor
pop
loopne
pusha
fstl
sbb
pop
stc
test
outsb
inc
adc
out
mov
loop
inc
push
iret
xchg
jo
sti
inc
mov
stos
ljmp
dec
ljmp
daa
cli
mov
push
jbe
imul
sub
insb
inc
pop
das
cmp
dec
dec
mov
sbb
cmpsl
and
pop
leave
xor
mov
pop
sub
icebp
add
xor
xor
pop
inc
popf
jp
mov
or
xchg
out
pop
jo
xor
xchg
adc
cmp
sub
and
add
les
inc
out
sbb
add
jg
jle
or
dec
jae
add
jl
mov
iret
incl
ds
push
scas
pop
jecxz
mov
jp
mov
test
roll
sub
jne
sbbb
lahf
std
and
bound
push
or
jbe
pusha
jns
lock
lea
or
pushl
in
imul
add
mov
sub
andb
icebp
fisttpl
lods
sbb
shll
mov
xor
and
lret
inc
pop
sti
mov
or
lahf
pop
add
shll
or
pop
adc
inc
xchg
mov
loope
cmp
shrb
enter
lds
jle
mov
jno
mov
mov
push
es
test
out
fisubrl
lret
ds
lods
popf
xchg
das
sub
sti
dec
ret
idiv
jo
xchg
sbbb
rcl
repz
inc
mov
mov
fstps
aad
jge
out
xor
xchg
pushf
cmp
in
repz
jnp
insl
sbb
inc
insb
push
dec
icebp
mov
sbb
or
cmp
outsl
sub
jle
scas
push
add
out
push
das
xchg
addr16
sbb
pop
or
xchg
ret
movsb
or
xchg
or
sub
pop
mov
xor
into
cli
shlb
pusha
loope
xor
scas
popf
pop
sub
dec
dec
mov
movsl
pop
call
cwtl
fwait
inc
pop
aas
popf
or
out
dec
push
and
xor
imulb
out
aas
mov
addr16
fdivr
adc
xchg
or
xor
xchg
push
fnstcw
push
xor
jnp
inc
outsl
mov
arpl
decl
add
inc
add
add
mov
ds
popa
adc
and
jecxz
add
imul
ljmp
add
stos
or
pop
rcrl
cmp
mov
mov
add
jmp
imul
sarb
mov
sub
lods
xchg
mull
rclb
inc
add
iret
ret
sti
arpl
dec
out
cld
movsl
mov
fdivrl
mov
fldl
aas
aad
jmp
jge
push
xlat
sub
fistpll
or
cmp
into
push
insl
fidivs
pop
push
outsb
cmp
push
int3
jo
cmc
call
insl
jo
repz
test
mov
cmc
xlat
sbb
mov
mov
ret
movsl
mul
data16
mulb
mov
movsl
mov
pop
push
pop
mov
xchg
div
xchg
cwtl
cli
cmp
rorl
xchg
push
aas
fmul
and
mov
addr16
cli
pop
sbb
and
leave
fcmovnbe
mov
add
dec
pop
pusha
adc
sar
jmp
pop
int
pop
das
sarl
add
mov
cs
lock
jo
imul
lods
mov
cmpsl
xor
jmp
lods
xor
xor
sbb
pop
sar
xor
aad
iret
fsubrs
pop
test
sbb
js
adc
xor
dec
jp
int
sbb
fstpl
test
dec
ret
jo
inc
out
xor
iret
call
mov
dec
mov
inc
in
jns
mov
sti
sbb
out
into
hlt
adc
pop
mov
mov
movsb
inc
adc
sbb
mov
cmp
out
xchg
xchg
pop
pusha
pop
mov
inc
test
mov
shlb
or
adc
dec
dec
jg
scas
dec
and
inc
mov
in
inc
stc
lcall
ret
mov
jne
pop
jmp
bound
add
in
push
sub
cmp
adc
jmp
dec
les
ss
loop
jecxz
loopne
sbb
push
push
fimull
or
scas
sub
xchg
mov
lods
mov
cmpsl
in
jl
add
pusha
cmpsl
xor
pusha
pop
mov
and
js
loopne
ficoml
sbb
mov
popa
test
dec
xchg
ret
js
mov
fs
dec
ss
jb
out
mov
fcompl
add
mov
data16
out
pop
lcall
icebp
lock
mov
or
les
loopne
imul
adc
push
enter
es
jmp
xchg
cmpsl
mov
sub
cli
sub
loop
adc
jnp
and
mov
ror
popf
hlt
jne
cld
ret
inc
xor
repnz
push
je
xor
je
add
sarb
clc
lock
push
mov
lds
out
dec
shlb
xor
mov
mov
push
fdiv
add
repnz
lret
mov
movsb
push
cs
push
loop
mov
pusha
xchg
sub
mov
je
inc
xchg
lret
xchg
inc
and
adc
or
xlat
aaa
mov
repnz
mov
mov
jge
outsl
cmc
pop
push
cmp
mov
or
fwait
mov
add
sbb
or
xchg
hlt
lock
ds
or
out
arpl
pop
andb
scas
into
lock
inc
cmpsl
xchg
cmp
xor
or
jmp
xorb
push
sar
push
sub
mov
lcall
cmp
pop
call
sbb
cld
std
add
or
adc
dec
push
mov
leave
lea
fsubs
dec
dec
jecxz
mov
xchg
push
xlat
mov
fdivs
push
jp
fwait
xor
ret
mov
xor
int3
pop
repnz
mov
mov
je
push
bound
sbb
mov
xchg
lahf
js
jns
shr
cmpsb
push
pop
sbb
adc
ds
outsl
cltd
das
jns
dec
pop
inc
mov
addb
orl
mov
fwait
xor
pop
lsl
add
inc
loopne
xor
call
vcvttsd2si
aas
icebp
xor
jge
pop
rcrb
mov
mov
test
inc
cmp
lcall
fmul
add
fucom
test
rclb
sbb
and
cmp
insb
nop
pop
mov
fisubrl
outsb
iret
mov
cwtl
mov
mov
es
pop
iret
cmp
neg
push
mov
lea
shlb
arpl
adc
xchg
pop
nop
jp
cwtl
mov
hlt
inc
mov
inc
das
jp
lea
push
cmp
and
mov
push
test
cwtl
pop
lcall
adc
xchg
in
aaa
mov
push
adc
mov
dec
iret
insb
add
stos
add
pop
push
div
enter
mov
imul
sbb
fildll
outsl
pop
adc
jno
test
mov
jo
fld
jl
ljmp
mov
fdiv
lcall
sub
inc
cmp
andl
je
xchg
jg
fnstenv
pop
dec
pop
addr16
shl
mov
mov
int
pop
outsb
jle
jecxz
bnd
arpl
push
loopne
sub
arpl
cmp
cs
cmp
inc
inc
shrl
push
dec
iret
cmpsb
jnp
aas
lds
test
js
xor
subb
aaa
hlt
pop
mov
popa
bound
sub
test
idivb
and
jecxz
mov
es
mov
cmc
cwtl
cltd
jecxz
jno
movsl
lock
inc
push
xor
and
ja
lods
pop
jne
dec
inc
aad
pop
shl
adc
xchg
aam
mov
lret
popa
inc
lahf
cmp
sub
push
imul
fldenvs
outsl
sub
xchg
test
loopne
sbb
lea
sub
sub
lods
lds
add
mov
and
xchg
cmp
adc
cltd
sub
inc
dec
in
dec
into
pop
mov
xchg
mov
push
icebp
mov
daa
mov
and
movsb
adc
adc
das
sbb
cmp
mov
jmp
jbe
xchg
lock
fcom
mov
mov
xchg
out
ret
test
lret
shlb
mov
outsl
mov
add
call
or
mov
sub
ja
xchg
dec
mov
adc
jge
sbb
mov
push
in
lods
xor
push
push
mov
cmpsl
int3
xor
mov
ss
mov
test
jbe
inc
dec
loopne
loopne
lret
mov
and
stc
test
xor
xor
in
mov
push
movsl
pop
sbb
mov
pusha
mov
test
insl
sbb
enter
imul
adc
xorl
mov
mov
imul
dec
and
faddl
cld
cmpsl
and
fsubrs
xchg
lods
inc
sti
fstpt
in
xchg
mov
lods
push
adc
sti
jns
xchg
cwtl
mov
insb
int3
pop
jl
hlt
push
dec
hlt
imul
adc
insl
xchg
sub
jno
bound
jbe
or
inc
jmp
mov
popf
mov
scas
pusha
mov
int3
xchg
mov
mov
push
add
popf
sub
outsl
push
add
movsl
pop
mov
cwtl
mov
pop
data16
adc
in
push
add
dec
pop
push
inc
sub
push
fldcw
mov
test
mov
and
lret
cltd
jmp
incb
sbb
or
and
push
mov
popa
sub
repnz
ja
or
push
mov
cmp
adc
inc
mov
fcoml
xor
mov
and
sbb
or
jmp
mov
push
test
enter
pop
or
imul
inc
and
std
sbb
sub
or
outsb
jno
aam
out
insb
jnp
xor
ficoml
pushf
mov
sahf
push
aam
add
mov
push
adc
mov
aas
dec
out
jb
in
testb
push
fsubs
inc
jb
jl
dec
mov
cmc
sub
test
cmp
mov
fimull
xchg
push
rcl
xor
or
xchg
pushf
cli
in
in
pop
xor
and
pop
add
in
sub
jo
jg
stc
cli
scas
jmp
xchg
and
sbb
xor
nop
outsl
push
push
mov
cmp
push
jae
jmp
daa
xchg
addb
in
testl
loopne
enter
ds
es
jb
sti
lret
in
jo
idivb
fisubs
bnd
xchg
xchg
mov
mov
and
mov
fsubrp
adc
shll
and
cmpsl
xlat
sbb
xor
adc
arpl
add
jbe
xchg
js
andl
lahf
push
das
add
lock
xchg
in
xor
inc
push
rcll
dec
and
jnp
or
sti
in
mov
dec
sbb
arpl
mov
mov
int3
cmp
xchg
ss
xchg
mov
dec
movsb
sub
adc
mov
push
dec
js
and
and
insb
push
subl
cmc
jmp
shl
pop
sub
int
repz
xchg
mov
mov
ret
fnstenv
repz
out
aas
mov
jmp
addr16
mov
adc
les
cmpsl
aam
lds
pushf
bound
movsb
mov
test
cmpsb
or
sub
rcr
inc
jbe
outsl
inc
jbe
sbb
xor
dec
cld
inc
imul
fdiv
and
es
adc
out
jnp
jecxz
xor
incb
out
xor
sub
jno
inc
xchg
dec
jae
test
or
aaa
dec
mov
enter
mov
ss
pop
mov
filds
nop
shl
pop
xchg
lods
in
icebp
add
jbe
push
sub
inc
jp
and
push
dec
dec
mov
mov
fsubrs
dec
pop
mov
out
xor
mov
stos
pop
or
or
test
push
enter
mov
jg
es
or
out
mov
and
sub
push
add
aam
dec
inc
jp
mov
in
js
mov
test
rorb
pusha
shl
xor
std
les
and
push
sub
dec
add
iret
aaa
js
es
xchg
loope
and
mov
mov
sub
mov
or
movsl
jge
ljmp
mov
cmp
int3
test
mov
in
mov
mov
cmp
divl
stos
in
andl
xchg
xchg
add
dec
mov
xchg
add
insb
sarl
lcall
call
lods
fists
lret
ds
iret
add
pop
or
rolb
and
gs
mov
fstpt
and
adc
mov
popa
push
ljmp
jne
mov
lret
mov
clc
cmp
insl
adc
mov
pop
mov
ret
jnp
mov
fnstenv
mov
and
addb
mov
mov
xchg
jno
jo
repnz
lret
ret
sub
enter
push
lods
stos
in
test
decl
enter
pop
jne
sub
popa
int
dec
add
push
ret
std
mov
push
call
js
das
mov
xchg
stos
jns
dec
pop
xchg
or
xor
fisttpll
aas
sub
push
std
lods
fiaddl
add
or
mov
ds
out
sbb
dec
out
sub
dec
dec
jmp
sub
mov
cld
ret
call
cmp
test
adc
movsb
pop
inc
jns
fistpl
repnz
stos
fs
xor
xor
dec
int3
sub
incb
sbb
pop
jno
jae
rol
add
xchg
cmp
inc
rol
mov
xchg
movsl
pushf
pop
lds
test
dec
pop
sbb
daa
push
xchg
jbe
push
and
loop
outsl
in
jb
gs
push
in
cmpsl
inc
jbe
cmpsb
fcmovnbe
les
frstor
fnsave
adc
jle
movsb
andl
xor
cwtl
popa
leave
mov
mov
dec
cmp
into
pop
cld
sub
add
test
jmp
sbb
or
daa
iret
popf
jne
push
rcll
mov
inc
inc
stc
cmp
and
push
stos
addr16
js
dec
cltd
mov
jp
ficoms
mov
pop
mov
inc
sub
sbb
js
fdivrs
js
push
test
push
sbb
inc
lods
ja
pop
push
cmp
push
in
stos
sti
scas
pop
jecxz
or
mov
cltd
pop
mov
mov
mov
movsb
hlt
jno
push
push
push
mov
js
sbb
and
mov
xor
fcomps
lahf
inc
sbb
jnp
adc
mov
adc
mov
jl
sbb
mov
das
mov
je
cmp
jno
lods
ljmp
pop
inc
mov
in
mov
jge
cmc
pop
ficomps
in
and
mov
insl
test
loope
mov
inc
mov
fisttps
fs
sbb
lock
push
xchg
dec
in
cmpsb
inc
mov
xchg
cmp
sub
sub
loope
sti
jnp
cmp
add
xchg
pop
lret
mov
jge
add
add
jno
or
popa
gs
sub
cmpsl
pop
lds
iret
sbb
pop
pop
xchg
xor
movsb
pop
orb
push
push
mov
or
in
data16
jae
pop
push
or
in
pushf
fsubp
out
inc
xchg
pop
add
lahf
jmp
or
mov
test
jle
scas
mov
lret
or
cli
xor
push
sbb
aas
mov
pop
mov
sbb
push
in
push
ss
sub
sbb
in
sub
leave
nop
adc
inc
sbb
pop
push
divl
pop
xchg
pop
imul
sub
sahf
add
movsl
mov
jmp
and
sbbl
xor
std
inc
cld
fidivs
icebp
cwtl
xchg
adc
cs
data16
and
stc
decb
push
lcall
mov
in
dec
lcall
mov
jns
and
jbe
add
sub
dec
pusha
stc
xchg
sub
stos
and
fsubs
xlat
push
gs
stos
xor
mov
inc
call
std
into
faddp
nop
imul
mov
call
int
and
mov
dec
cmp
sbb
fs
cmp
test
cs
rolb
arpl
leave
dec
jne
or
ljmp
sbb
lahf
mov
cli
lock
movsb
jp
push
adc
aad
adc
cltd
daa
mov
push
insb
mov
fdivrp
cwtl
and
test
mov
xchg
std
aad
sarb
xor
pop
mov
fimull
dec
mov
or
repz
cmp
call
mov
and
int3
or
xchg
jecxz
fists
loop
mov
pusha
xchg
xchg
add
enter
shll
lods
pop
cld
cmpsl
xchg
or
or
add
cmpsl
popf
loopne
ljmp
in
jmp
ja
xchg
jo
push
mov
cmpsl
or
mov
push
pusha
scas
xchg
add
jno
rolb
mov
and
push
aad
testb
xor
sub
pop
dec
pop
xchg
push
imul
cli
inc
iret
roll
mov
cmc
ret
loop
xor
lret
mull
xor
mov
add
rorb
mov
dec
in
arpl
gs
dec
pop
xchg
xchg
jne
test
iret
mov
xlat
mov
daa
es
push
xchg
in
std
mov
adc
push
inc
out
sbb
mov
gs
xor
xchg
daa
into
leave
adc
pop
lods
pop
or
mov
rcrl
push
out
mov
jbe
mov
mov
fs
out
cli
dec
mov
enter
aas
fsubrs
jecxz
cli
aad
sub
lods
int3
cli
test
jb
das
in
adc
test
push
push
in
sub
ret
jno
minps
xchg
jg
push
sti
and
or
out
or
sbb
jg
fmull
inc
push
and
mov
jae
sahf
xor
rorl
fcomip
xor
pop
jo
loopne
es
fstps
xor
mov
xor
xchg
xchg
mov
dec
dec
test
icebp
sbb
mov
push
sub
clc
cmp
pusha
fdivrp
hlt
enter
fiaddl
push
or
cmp
gs
insl
lret
lret
dec
pop
int3
jecxz
push
xchg
push
jp
jg
cld
adc
les
sub
mov
sbb
ljmp
mov
cmp
jg
lods
mov
js
add
cs
fwait
pop
dec
jge
icebp
sbb
loopne
fs
in
cltd
cmp
rcl
repnz
xor
inc
movsb
es
push
shlb
cmp
mulb
aad
sbb
loope
outsl
leave
hlt
insb
daa
iret
mov
or
jg
xchg
inc
mov
or
mov
mov
cmp
ret
jp
std
dec
push
pop
cli
ret
pop
mov
es
sub
push
fstps
inc
dec
jg
testl
stos
add
leave
sub
imul
adc
arpl
adc
push
arpl
decb
jle
sub
jne
fcmovbe
fdivrl
mulb
ja
pop
and
inc
sbb
testl
mov
adcb
mov
jne
add
push
divl
rcl
shr
or
mov
xchg
cmp
stos
rcl
mov
pop
add
add
pop
call
mov
cmp
js
cmc
pop
outsb
jns
and
or
mov
rolb
sbb
fs
inc
rolb
nop
cmc
rorl
lods
cltd
push
in
sub
loop
rclb
adc
pop
cmp
movsb
adc
xor
movsl
cs
adc
adc
stos
shll
daa
jge
mov
es
and
outsb
sbb
int3
addb
loop
cmp
fildll
iret
cmc
cltd
push
dec
xchg
pop
lret
stos
cmp
roll
mov
mov
imul
pop
stc
jecxz
faddl
insb
fwait
pop
std
ret
test
ret
lds
mov
and
clc
mov
rcrl
jecxz
in
push
in
pop
push
mov
sub
fstpt
pop
test
dec
lods
sub
ss
ja
sti
pop
sbb
addb
cmp
sub
rcll
and
loope
adc
sbb
std
dec
adc
insl
sub
cmp
push
add
dec
pop
sbb
mov
inc
int
les
insb
je
andl
push
jb
das
fldcw
mov
adc
xchg
cli
in
adc
stc
fdivrl
push
loop
lret
mov
sbb
xor
push
jmp
test
out
dec
push
sbb
mov
and
sbb
fsubrp
mov
popf
mov
repz
popf
mov
push
xchg
xchg
sub
sbb
push
cmp
cmp
xor
jb
sub
and
decl
push
imul
fwait
xchg
loopne
or
mov
add
mov
jo
xor
cwtl
inc
jbe
xchg
xchg
ljmp
cmpsb
in
push
cmp
mov
jl
cltd
outsb
lcall
sub
jo
loopne
repz
push
les
push
js
and
add
push
cltd
add
xchg
and
pop
std
aad
ficoml
inc
loop
int3
ret
rorl
movb
xchg
jo
stos
in
inc
fdivrs
xlat
bound
xor
push
push
cmp
inc
adc
enter
pop
out
inc
fs
mov
xor
pop
loope
jo
pop
test
sahf
pusha
pop
lret
test
das
stc
push
mov
aad
leave
fwait
push
shlb
pop
fadd
outsb
adc
sub
jle
pop
lds
jns
push
adc
push
adc
and
mov
out
jmp
cmp
sbb
sbb
hlt
and
sub
mov
pushf
lea
pop
sbb
xchg
notb
daa
in
int
pushf
mov
out
sub
fwait
testb
aas
test
or
jb
leave
ljmp
popf
and
sub
xchg
into
and
push
cltd
insl
das
loopne
add
inc
insl
xor
pop
pusha
popa
sbb
inc
xor
push
mov
outsb
push
mov
pushf
sub
sahf
sbb
push
add
out
mov
pop
js
xor
push
push
and
popl
mov
sbb
jns
add
push
repnz
add
out
popf
push
mov
aaa
xchg
das
pushf
ret
add
sbb
jne
mov
add
fwait
cmp
push
dec
jg
imul
into
stos
out
sbb
fstpl
outsb
sbbb
sub
lret
fadd
and
and
jle
pop
shrb
sub
dec
idiv
in
rcll
rorl
dec
cmp
inc
dec
daa
xchg
pusha
ss
push
xchg
ret
add
mov
pop
jno
icebp
aad
mov
sbb
les
push
cmp
inc
sbb
push
cmp
sbb
and
lds
pushf
daa
xorb
push
jb
add
pop
pop
or
sbb
out
pop
adc
stos
mov
std
and
mov
mov
mov
dec
pop
and
scas
adc
mov
icebp
shl
dec
sub
out
push
jno
cmp
dec
cmp
push
xor
lcall
mov
mov
mov
les
pop
xlat
adc
loop
flds
mov
adc
jl
cmc
scas
add
test
jp
push
add
sub
mov
into
pop
mov
fsubs
dec
out
pop
sub
adc
addr16
pop
sbb
inc
out
or
popa
mov
dec
lock
cmp
jle
iret
insb
sbb
sbb
sub
aas
movl
addb
mov
push
cmp
or
xor
sahf
pushf
push
test
inc
lret
dec
cmp
xchg
xchg
and
or
lods
xchg
mov
adc
add
push
enter
addr16
arpl
adc
xchg
add
pop
mov
cmp
xchg
pop
and
setge
out
mov
fidivl
push
pop
fcmovnb
sub
add
in
into
movsl
xchg
push
mov
shr
xor
je
sub
addb
lods
push
test
push
gs
fsts
mov
clc
cmc
mov
js
cmpsb
cld
in
mov
addr16
enter
cmc
negl
mov
in
and
mov
lock
rolb
fsubrs
push
dec
ss
xchg
popf
xchg
sub
push
clc
or
sub
int
neg
pop
jle
cmp
mov
fdivrs
les
mov
adc
insl
pop
loope
gs
dec
mov
inc
dec
jns
add
sub
fcomp
sub
fiaddl
sub
icebp
hlt
loopne
loop
cmpsl
xlat
imul
enter
xchg
xor
xchg
mov
push
pop
js
in
jecxz
push
jo
jmp
fistpll
inc
mov
cmp
dec
insb
aaa
mov
lret
push
cli
in
push
mov
imul
xor
xor
jl
sbb
xchg
fcompl
fildl
mov
sub
hlt
shr
dec
sahf
mov
jp
and
ret
jne
testb
shll
mov
repz
test
nop
fstl
push
cld
adc
jnp
sahf
add
inc
pop
or
out
add
loopnew
repz
test
in
popa
repnz
mul
popl
stos
out
jne
xor
outsb
nop
jg
jmp
je
sub
mov
mov
or
nop
cmp
movsl
test
add
jmp
push
or
sbb
add
xchg
pop
xor
inc
outsl
adc
add
mov
jp
das
loopne
mov
outsl
cmpsb
push
xor
pop
lods
jecxz
clc
or
xchg
loope
jnp
push
or
rcl
xchg
fbstp
fmul
ss
jg
xor
jns
pop
imul
int3
scas
rcrl
scas
lahf
cmpb
push
jae
mov
daa
pop
sub
les
adc
lea
shl
mov
cltd
scas
enter
push
js
pinsrw
ret
add
cli
mov
sbb
xor
insl
mov
mov
xchg
sbb
daa
inc
shlb
outsb
sbb
mov
cli
or
cmp
jp,pn
xchg
lcall
ljmp
repz
loopne
lock
fimull
subl
cld
mov
push
ljmp
mov
xorl
xchg
jns
bound
dec
negb
in
orb
ret
sub
xor
test
and
loop
adc
push
pop
push
fsubrs
dec
or
add
jbe
push
sub
mov
xor
cmp
leave
imul
sahf
pop
movsb
test
hlt
out
aaa
les
adc
jecxz
loope
push
sbb
movsl
jecxz
and
imul
movsb
test
adc
adc
stos
clc
int
fimuls
cmp
sub
loope
rcrb
cld
xor
fs
pop
fndisi(8087
mov
enter
or
mov
popa
and
add
jl
fs
jne
and
loopne
add
shlb
bound
inc
jmp
shll
lahf
ret
lcall
in
stos
sbb
xchg
imul
push
dec
jne
outsb
pop
loopne
cmp
push
dec
in
cs
xchg
inc
push
mov
mov
jb
pop
cltd
push
sbb
rolb
adc
lock
loop
aas
bound
shll
invd
push
call
and
or
data16
sub
xchg
int
pushf
push
add
enter
addr16
int
adc
dec
mov
sub
rclb
call
bswap
sbb
jb
add
or
icebp
sub
inc
cmp
cmp
sbb
and
sbb
dec
js
into
xlat
and
mov
fistl
xchg
inc
mov
shlb
cmp
icebp
push
mov
cmp
in
cltd
xchg
sub
in
cmc
mov
imul
addr16
data16
cwtl
test
repnz
jmpw
clc
xchg
sub
into
out
sub
mov
lcall
cli
loope
sbb
pop
add
clc
dec
and
test
ja
nop
lods
out
loop
lea
pop
cmp
sbb
out
sub
lret
loop
rolb
sbb
inc
inc
fucom
insb
or
lret
adc
fwait
pusha
cmp
cld
sub
add
jns
mov
sbb
sub
mul
xchg
stos
sbb
mov
xlat
xor
lock
lea
jns
jae,pt
ror
ret
jnp
vmovdqa
scas
mov
xor
adc
xchg
gs
push
inc
mov
mov
sub
arpl
add
rcr
insl
aas
repnz
mov
enter
xchg
push
fwait
and
ret
adc
pop
push
xchg
mov
addb
push
dec
pop
cmpl
aam
jno
or
push
xchg
jge
pop
pop
lea
inc
lods
push
push
shll
mov
xchg
pop
add
mov
pop
push
or
lock
xor
in
push
fs
or
pop
mov
mov
repz
xchg
jo
int3
jge
daa
dec
dec
pop
test
or
dec
vmwrite
fmull
mov
pop
es
and
fistl
aaa
xor
stos
cmpsl
cld
aam
icebp
repnz
imul
mov
pop
sbb
mov
lods
mov
mov
xor
ret
mov
pop
ret
inc
and
mov
sub
aas
ret
fwait
add
pop
call
xor
stc
mov
mov
shll
ss
jne
xchg
mov
mov
sub
xor
fwait
cmpl
stc
push
rolb
add
add
pop
push
push
fwait
popl
mov
xchg
repnz
adc
cmp
xchg
add
stc
or
xchg
jne
add
adc
xorb
mov
outsl
fs
dec
fdivrl
push
push
roll
ret
lea
int
or
test
push
push
and
inc
dec
cltd
sub
movsb
sarl
imul
das
mov
fisttpll
xor
shr
orb
push
ja
and
in
mov
lea
adc
dec
cmp
cmpb
pop
imul
xlat
fcomps
lods
pop
jmp
xor
mov
mov
jnp
adc
sbb
pop
sarb
insl
icebp
pop
xor
pop
dec
pop
dec
aaa
push
clc
pop
out
cli
inc
ret
mov
loope
cmp
push
xor
test
cltd
push
popa
ds
or
out
and
cmp
cmc
test
je
xchg
loope
jae
xor
sbb
dec
lea
inc
loope
popa
arpl
pop
add
xor
push
pop
and
lcall
gs
push
and
cmp
inc
fs
and
push
jno
dec
xor
lock
imul
loope
enter
ret
mov
dec
iret
push
lcall
roll
jb
jl
lds
repnz
mov
inc
dec
les
sbb
mov
faddp
adc
sub
icebp
mov
repnz
mov
sub
xchg
pop
pop
jns
mov
pop
dec
mov
data16
push
mov
les
lret
dec
jge
mov
mov
cmp
cmp
icebp
mov
jmp
rclb
mov
call
cmp
stos
aam
ljmp
add
hlt
push
jecxz
adc
push
stc
xchg
ljmp
mov
lock
lret
ret
repnz
rol
aas
scas
pop
insb
mov
ljmp
ja
xchg
shlb
out
dec
mov
iret
xchg
add
mov
jns
dec
out
mov
xchg
adcb
push
lock
cld
jp
mov
rcll
pop
out
pusha
je
dec
jo
cmpsb
cmp
fwait
or
mov
cmpsb
gs
lds
or
jb
mov
ja
aaa
xchg
mov
adc
push
push
sbbb
outsb
ja
inc
jge
daa
mov
nop
notl
lock
icebp
mov
imul
popl
movsl
clc
jmp
sub
mov
jo
lds
shrb
dec
xor
adc
cmp
and
inc
lds
dec
aas
add
and
xor
fsubrs
pop
jle
stc
inc
ljmp
out
or
cmp
adc
bnd
nop
inc
testb
xor
xchg
movsl
jg
sbb
shufps
psubq
mov
sub
jp
arpl
sub
pop
xor
sbb
lock
fnstcw
popa
mov
in
or
movswl
xchg
xchg
add
jb
dec
test
loope
pop
imul
dec
fwait
xor
out
out
jg
push
pop
adc
mov
adc
inc
dec
xchg
loop
jge
jae
or
mov
push
adc
dec
fldcw
cli
pusha
cmp
dec
loop
jp
jno
test
pop
sub
int3
in
or
fiadds
js
push
jp
jg
cmp
ja
cli
sub
mov
push
aaa
fdivrs
inc
pop
push
cmp
es
sub
les
sub
dec
test
sbb
aaa
in
loope
cmp
mov
xlat
xor
aaa
repz
lods
in
or
out
push
rcll
mov
adc
xor
stc
xchg
jmp
fucomi
fidivs
dec
jmp
idivl
imul
in
js
cld
pop
push
rcll
xorl
lds
in
shlb
aam
sub
imul
sub
sub
pop
or
int3
das
pop
pop
and
mov
repnz
pop
xor
dec
push
sbb
sbb
movsl
test
lret
inc
repz
cmpsl
test
aam
clc
adc
aas
push
mov
stc
out
mov
sarl
fwait
mov
mov
enter
lcall
mov
in
pop
rcl
bound
push
sbb
mov
stos
pop
add
and
loop
dec
cmpb
sti
push
lcall
ss
inc
fwait
and
and
sub
xlat
or
mov
jecxz
out
movb
nop
lock
jmp
jno
dec
mov
adc
int3
cmp
aad
pop
mov
lock
rol
sub
push
mov
push
sbb
aad
imul
xchg
xor
jmp
cmp
dec
jbe
lcall
inc
test
js
push
and
cmp
sbb
das
jg
loop
stos
int3
jecxz
pop
and
cmc
cltd
sub
movsl
sbb
ja
cmp
loope
ja
in
xor
xor
mov
arpl
push
leave
dec
push
aam
xor
into
dec
mov
inc
fisttpll
test
rep
fsubrl
or
mov
jl
mov
addr16
out
add
sub
aaa
movsb
inc
rcll
lods
mov
pusha
xor
sarb
xchg
sbb
pusha
aas
push
int3
adc
sub
cld
mulb
xchg
lock
pop
aad
xchg
inc
aaa
fcmovbe
sub
fisubrs
stc
inc
jns
mov
and
mov
es
movsl
lods
jmp
aad
xor
cmp
fxch
mov
pop
pop
std
mov
mov
aam
cmp
and
xor
pop
outsb
rcl
jae
push
movnti
mov
inc
imul
mov
pop
adc
addb
or
sub
les
dec
mov
movsb
cltd
mov
cmpsl
cs
inc
pop
push
sarl
or
nop
aad
lock
push
xor
mov
inc
stc
ja
out
adc
push
push
ss
xor
test
gs
enter
sahf
dec
jge
mov
call
push
int
mov
lods
cltd
in
jge
mov
pop
rol
pop
push
in
mov
int3
push
int3
jnp
fcoms
ret
xchg
xor
cmp
shrb
lahf
rclb
daa
inc
scas
adc
mov
mov
mov
mov
jp
in
adc
rcr
cmp
xchg
jae
leave
adc
aam
pop
or
sahf
out
sahf
fimuls
pop
pop
les
xchg
push
pop
inc
jg
outsl
leave
pop
cmp
adc
push
pushf
or
ljmp
fcomps
sbb
cmp
addl
cli
sub
fldcw
out
mov
insb
gs
mov
rolb
pop
daa
das
mov
pusha
aas
shr
xchg
loope
clc
nop
and
cmpsl
mov
push
fdivrs
cmp
fcmovnb
stc
dec
in
jecxz
pop
movsb
test
dec
in
stos
xchg
push
xchg
sti
adc
leave
les
xlat
pop
xchg
adc
push
dec
xchg
mov
inc
mov
push
int
mul
sarb
sarb
addr16
scas
loopne
mov
cltd
mov
add
aad
pop
adc
mov
stc
lock
leave
scas
adc
adc
mov
push
sbb
daa
mov
sbb
data16
loope
subl
sbb
in
push
leave
es
mov
stos
in
jmp
fwait
push
mov
mov
sbb
fisubrl
mov
ss
pushf
fnsave
push
push
pop
das
add
cmpsl
pop
das
jle
push
jg
and
dec
push
fists
notl
cli
sbb
xchg
inc
ds
ret
ror
fistl
xor
cmp
arpl
pusha
addr16
mov
cltd
mov
mov
lea
repnz
push
es
pop
or
sbb
aas
sbbl
mov
mov
in
or
rorl
adc
out
lods
inc
jmp
mov
ljmp
sub
ds
into
js
shll
test
jge
insb
insl
mov
sub
verw
xlat
adc
push
push
lods
popa
sbb
imul
inc
cwtl
pop
and
fistps
or
xchg
stc
adc
or
mov
xor
mov
push
movnti
mov
mov
in
shll
cmp
pop
repz
or
repz
in
lcall
out
or
shl
push
adcb
fwait
les
bound
jbe
xor
sti
adc
adc
and
mov
sbb
call
imul
and
push
test
jnp
lahf
jecxz
inc
sbb
add
xchg
jge
fidivs
int3
out
inc
cmp
lret
pop
mov
or
popf
mov
les
and
addr16
out
mov
leave
mov
lea
xor
mov
mov
cmpsl
lahf
mov
push
inc
cmpsl
cmp
sub
mov
cmp
rorb
mov
cmp
sarb
mov
jns
in
ficoml
fsts
inc
mov
or
dec
das
popa
inc
or
shr
mov
xchg
stos
out
pop
rcrb
ret
sbb
xchg
mov
xlat
je
push
into
test
inc
push
or
xchg
jnp
cmpsl
cmp
push
std
scas
popf
add
ds
jmp
cltd
fcmovnbe
dec
adc
push
push
mov
mov
jg
leave
test
mov
imul
lods
mov
ret
mov
jp
lock
rorl
xchg
loop
or
stos
test
daa
and
xor
loop
push
lret
sahf
fdivrl
cmp
scas
pop
or
repnz
inc
jbe
push
mov
or
mov
out
shr
sub
cwtl
sub
cs
lahf
jb
xchg
aas
out
lret
sbb
and
mov
jbe
leave
mov
insb
pop
and
fstpt
jmp
or
jb
filds
ss
push
ss
mov
mov
fiaddl
mov
adc
xchg
popa
adc
pop
dec
dec
jne
loop
cmp
mov
mov
xor
js
jb
test
push
stc
outsl
cmp
jbe
pop
outsb
ds
sbb
popf
adc
aam
rolb
mov
pop
pop
xchg
xchg
bound
cmp
pop
mov
add
lcall
inc
popl
xchg
push
mov
cli
and
add
clc
clc
cmc
syscall
sbbb
adc
scas
inc
shll
sbb
ficomps
movsb
add
jg
out
out
insl
inc
sahf
arpl
movsb
sub
cmp
hlt
mov
xorl
fsubrp
mov
js
ficomps
rorl
mov
jno
sub
sbb
mov
fdiv
xchg
inc
sahf
out
sbb
push
testb
push
mov
mov
clc
fwait
sahf
xchg
jne
aam
push
int3
jno
push
rorb
sbb
ds
cs
mov
adc
inc
aam
in
sbb
sub
lret
lea
insl
push
pop
rol
sub
sub
xor
mov
aad
and
xlat
in
pxor
stos
mov
imul
mov
rclb
orl
psrld
inc
aad
int3
mov
cld
dec
lcall
fsubr
mov
nop
dec
push
mov
xor
jne
into
mov
dec
xchg
leave
pmullw
sub
add
push
push
or
sbb
lret
int
out
jg
test
out
sub
stos
in
pop
mov
insl
cmp
stos
pop
push
mov
add
ss
pop
add
dec
cmp
sbb
dec
mov
jmp
push
movsb
in
or
pop
or
cmpsb
cmpsb
sar
pop
sub
popa
movsl
adc
inc
std
mov
pop
or
repz
sub
add
lock
into
sbb
sbb
fistl
movsl
fidivl
leavew
adc
lcall
or
ret
test
arpl
ss
out
loopne
cmp
shlb
les
out
jb
stos
push
outsl
sbb
jno
jmp
cmpsb
mov
incb
ds
mov
cmp
in
push
cmpsl
js
out
rol
test
mov
xor
push
shlb
stc
pop
add
in
pop
mov
cli
xchg
xchg
pop
jge
loopne
movsb
mov
pop
mov
jg
inc
xor
adc
jae
addr16
vhsubps
dec
js
lahf
and
aas
dec
jne,pn
mov
mov
mov
jg
jmp
dec
test
sbb
add
into
mov
xchg
xlat
and
imul
insl
pop
cltd
test
addr16
jle
dec
js
in
gs
lcall
mov
xchg
jns
mov
mov
enter
xchg
imul
and
sbb
std
out
std
push
gs
cli
lret
ja
test
xchg
xchg
inc
push
insb
lods
gs
mov
mov
cmpsl
xchg
mov
inc
popa
lret
xor
cmp
int3
addr16
popf
lods
lods
add
mov
mov
xchg
pop
mov
cli
movsb
stos
ljmp
mov
jl
mov
loopne
leave
mov
push
js
pop
popf
jle
and
adc
jmp
lods
repz
sub
fnsave
mov
xchg
sbb
mov
icebp
push
pushl
adc
out
je
lret
lret
ljmp
and
fiadds
pop
jno
imul
stos
cld
test
enter
loopne
fimull
adc
cmp
xchg
push
add
es
add
xchg
jnp
sar
loope
cmp
insb
jae
pop
mov
inc
nop
in
movsl
xchg
and
pop
pop
xchg
in
xchg
inc
sub
movsl
sub
jae
jo
inc
mov
lret
xor
scas
test
test
stos
mov
ret
cmc
pop
cmp
insb
lret
aaa
arpl
inc
add
addr16
dec
cmp
fisubl
xor
out
pop
jl
in
ljmp
lret
pushw
lahf
adc
call
mov
mov
dec
or
aas
and
mov
cs
fisubs
jmp
jo
pop
sarl
pmulhuw
hlt
sub
lea
movsb
adc
add
fdivrl
push
cmp
cmp
aaa
outsb
sub
mov
popf
push
push
shrl
push
ret
daa
fidivrl
leave
mov
xchg
and
dec
int
fdivrl
aam
fistpll
mov
clc
cmp
fwait
gs
icebp
movl
fistps
xchg
hlt
jb
mov
jns
mov
cli
pop
jp
cmp
cmpsb
mov
xchg
nop
jecxz
sub
cmp
incl
fistl
cwtl
mov
or
push
data16
mov
xchg
or
cwtl
cmc
and
push
jns
jnp
and
xchg
jae
icebp
jecxz
sti
fmull
cmp
xchg
gs
pop
addr16
jbe
cmpb
das
cwtl
loope
jmp
xchg
imul
mov
in
stc
pop
jecxz
repnz
dec
aad
dec
mov
stc
push
jnp
vpmaxub
mov
cmp
sahf
loopne
rorb
mov
push
jp
push
loope
jl
scas
xor
test
lcall
mov
jmp
cs
es
mov
mov
dec
testb
or
mov
ds
jmp
daa
jl
testl
sbb
cmp
and
mov
push
test
cli
stos
jo
dec
jmp
mov
shrl
test
outsl
sahf
dec
dec
cli
xchg
jmp
jg
or
int
jle
outsl
inc
loop
dec
cld
cmp
ret
jo
scas
jl
sbb
sub
lcall
pop
push
jbe
jp
ja
call
orb
pushf
repnz
loop
dec
scas
addr16
mov
lds
testb
and
xchg
fstpt
out
sub
and
adc
xor
nop
sub
xor
fsubrl
stos
adc
dec
rcl
xchg
fldt
pop
xlat
or
sub
mov
out
test
insl
add
mov
xor
hlt
mov
cmp
mov
out
jno
dec
movsb
jl
pop
jns
aas
sub
mov
jg
mov
rclb
mov
gs
pop
push
add
push
or
lds
add
jae
out
in
test
inc
pop
sub
call
jle
rcll
cmpsl
sbb
negb
dec
mov
xor
sahf
cmpl
push
cltd
and
movb
inc
js
aad
insl
xchg
movsl
mov
xor
lahf
xor
mov
lock
adc
or
fwait
stos
inc
sub
and
jbe
xor
dec
sub
jnp
lds
and
cs
call
sub
outsl
mov
repz
cmp
insb
push
aas
cmpsb
fstl
outsl
or
inc
rol
rcr
pop
mov
jo
call
xlat
out
scas
and
cmpsl
inc
or
inc
sarb
jns
outsl
push
mov
jge
dec
mov
pop
mov
or
loopne
test
jne
cwtl
in
push
add
or
cmp
fistpl
xchg
and
xorl
mov
mov
mov
xorl
jo
lret
gs
fisttps
stos
dec
xchg
or
sbb
xor
mov
xchg
out
dec
negb
adc
push
sub
mov
hlt
or
inc
push
clc
mov
shl
jne
idivl
and
xor
mov
fmull
imul
ds
jle
mov
dec
mov
fldenv
push
ds
cwtl
push
push
mov
dec
clc
fnsave
xchg
pop
fidivrl
xchg
in
nop
dec
loopne
sub
and
dec
fildl
lea
xchg
imul
into
outsb
or
popf
add
sbb
fnstsw
mov
scas
jmp
lsl
cmp
lret
dec
pop
mov
outsb
outsl
shr
cmp
adc
popa
pushf
movsl
lds
mov
sbb
cli
dec
into
pop
repz
in
call
loop
inc
xchg
xchg
pop
int3
addr16
imul
in
mov
pop
mov
jo
testl
adc
jns
ret
mov
cmp
std
jecxz
sti
lods
in
xorb
or
das
scas
mov
push
std
icebp
or
and
mov
aad
sub
xor
lahf
insl
inc
fistps
jne
aad
sbb
push
pshufw
mov
pop
xchg
xchg
popf
fnstsw
sub
push
ret
inc
sbb
decb
mov
in
sbb
pop
push
repz
xlat
push
stc
call
in
and
aas
int
mov
xchg
push
jl
push
movsb
push
in
lret
adc
push
sbb
mov
jbe
sub
add
jp
das
out
dec
push
outsl
mov
bound
sub
loopne
neg
mov
test
insb
aaa
and
jl
int3
mov
nopl
dec
ret
pop
inc
ja
jl
js
roll
add
cmp
mov
lods
or
mov
ljmp
sub
mov
cmp
sahf
enter
rol
xor
fimull
shll
mov
les
test
inc
negl
rol
imul
movsb
push
jge
pushf
lea
imul
imul
pop
loopne
leave
xor
and
jno
sub
test
jo
xor
mov
push
mov
rcl
mov
hlt
mov
push
cltd
incl
push
hlt
popa
orb
cltd
mov
pop
aad
cmp
push
daa
and
fiaddl
mov
jle
cmp
gs
jmp
fimuls
outsb
in
push
xor
fcomps
dec
mov
jl
jne
sub
add
in
cmpsb
rcrb
pop
cmc
jo
mov
add
loopne
sbb
daa
push
adc
icebp
jno
shlb
addr16
das
or
inc
mov
enter
adc
push
test
dec
stc
push
dec
int3
sbb
insb
fldl
dec
jg
xchg
sbb
pop
insb
hlt
xchg
pop
cmp
movsb
sub
orl
mov
pop
dec
xchg
or
shl
leave
fwait
bound
js
clc
mov
xchg
outsl
adc
addb
in
mov
jbe
sbb
pop
cmc
cld
outsl
les
pop
ja
mov
mov
in
xchg
mov
imul
aam
mov
inc
inc
jecxz
roll
sub
stc
mov
pmuludq
insl
repnz
out
add
mov
sbbb
in
lcall
aad
mov
lods
notl
aaa
push
cltd
mov
clc
xchg
xchg
push
loop
push
cmp
pushf
mov
jnp
adc
imul
jnp
lods
mov
mov
enter
gs
jmp
out
jecxz
loope
push
mov
pushf
aas
je
in
and
out
in
adc
ds
dec
dec
dec
lret
std
adc
leave
sub
mov
push
popa
lods
xchg
out
xlat
mov
add
jecxz
cmp
inc
push
adc
js
pushf
repnz
and
mov
sub
mov
gs
inc
and
inc
mov
push
sub
mov
or
cmp
push
arpl
lods
inc
sarb
pop
rorb
lods
bound
pop
xchg
mov
in
push
ja
sbb
test
and
cld
xchg
inc
jb
mov
adc
jmp
push
jne
fdivl
iret
mov
ja
mov
push
and
mov
lock
lds
add
mov
mov
cld
sub
mov
pop
mov
push
xor
mov
lods
cmp
and
test
dec
lock
loopne
xor
invd
es
mov
mov
sbb
nop
jecxz
adc
or
sub
pop
adc
push
jg
adc
sub
icebp
jmp
shlb
and
mov
ret
dec
jg
lcall
cmp
xor
scas
pop
sbb
mov
icebp
sub
cmc
or
xchg
mov
xorb
cmpl
adc
mov
int
cli
sbb
push
fnstenv
shl
pop
cli
sahf
popl
shll
pop
ja
xchg
mov
sar
pop
hlt
dec
lahf
push
daa
xchg
add
fcmovnbe
cmpsb
push
or
loope
jae
in
test
mov
mov
fidivs
ds
shll
in
add
mov
test
cmp
push
mov
jbe
hlt
add
aam
hlt
rcl
mov
les
inc
adc
pusha
stos
sbb
in
in
push
int
decl
fnstenv
jb
push
movsl
push
push
add
push
mov
scas
lahf
sbb
sub
inc
rsqrtps
mov
scas
push
sbb
jns
sbb
push
push
adcl
push
add
aaa
xchg
daa
dec
pushf
jp
jecxz
sub
movaps
cmp
jge
pop
pop
test
or
lea
sbb
out
ljmp
mov
pop
cltd
mov
lds
int3
sub
movsb
mov
sub
mov
adc
xor
or
loope
mov
mov
sub
sub
sbbl
and
mov
mov
inc
in
rcr
mul
int3
addr16
mov
inc
scas
movsb
jmp
loop
jno
cld
pushl
outsb
mov
jnp
adc
mov
dec
mov
cwtl
aam
pop
jb
sbb
movsl
aad
fistps
jbe
dec
test
in
cmp
inc
and
cmp
push
dec
out
test
pop
sub
test
leave
aam
push
adc
sub
repnz
faddl
add
jmp
push
out
xchg
adc
test
inc
mov
sub
cwtl
or
or
in
outsb
mov
inc
and
imul
mov
inc
repnz
mov
mov
data16
cli
cltd
lock
ds
mov
stos
lret
adc
test
sti
dec
sbb
xchg
pop
mov
enter
jbe
dec
jb
mov
push
jnp
jecxz
dec
cmp
push
int
xchg
hlt
fldenv
sahf
mov
inc
fmull
cmp
mov
cmp
pop
mov
outsl
sbb
cwtl
mov
cmp
add
mov
pop
mov
jbe
push
mov
gs
repz
mov
push
frstor
xchg
iret
cmp
cmpsl
dec
pop
inc
dec
mov
xchg
or
std
mov
popa
mov
jne
adc
rclb
sub
cltd
pop
mov
pop
dec
inc
mov
std
xchg
int3
ja
mov
mov
mov
pop
pop
fldl
movsl
sub
hlt
pop
push
push
sbb
lret
jl
incb
outsl
es
push
ficoml
rorb
dec
lahf
xchg
in
lcall
or
pushf
orb
jae
stos
xlat
push
sub
fwait
dec
arpl
lea
cmc
shlb
mov
aad
imul
jle
test
jo
pop
ror
cmp
insb
out
xchg
loopne
lds
xor
mov
enter
lcall
and
xchg
gs
jge
lock
mov
ljmp
push
adcb
pop
xchg
movsl
lret
repz
clc
adc
inc
xor
pop
mov
xor
idivl
cmc
pop
pop
mov
mov
dec
fsubp
add
pop
dec
popa
stos
jns
inc
push
add
jnp
mov
mov
fwait
xor
cmp
imul
test
jecxz
popa
mov
dec
fcompl
scas
adc
imul
ret
cmp
adc
mov
cwtl
mov
shll
pop
jg
mov
sub
xor
pusha
mov
jmp
mov
push
push
psubusb
mov
mov
pusha
push
adc
aam
xchg
inc
push
pop
inc
out
adc
fdivrs
aam
and
lock
inc
and
nop
jae
pushf
xor
call
mov
in
das
imul
mov
fdivrl
jb
sbb
stc
movsb
lock
test
sub
push
pop
mov
push
push
push
push
xchg
movsb
xchg
lret
jge
fmul
into
mov
inc
cmp
icebp
cmpsb
movsl
popa
xchg
scas
sti
add
xchg
adc
inc
call
and
inc
mov
test
pop
sub
mov
sub
dec
mov
mov
fisttps
ja
cltd
pop
jp
mov
cmp
inc
mov
jns
shrl
adc
imull
or
adc
ljmp
xchg
enter
and
fsubrs
pop
dec
loope
lahf
inc
cmp
stos
jge
lea
arpl
cmp
inc
xchg
mov
fidivl
sbb
mov
adc
icebp
stc
andl
pop
popf
cmc
int
repnz
push
ja
cli
out
dec
inc
pop
test
push
jg
test
mov
jle
aaa
push
stos
rolb
mov
negb
adc
std
cltd
leave
cmc
add
push
stos
daa
sub
outsb
dec
in
or
xor
adc
or
inc
ds
push
mov
dec
or
out
pop
adc
xor
or
push
aad
mov
and
and
mov
lock
rcl
adc
or
mov
leave
dec
pushf
mov
push
subb
xchg
mov
outsb
pop
lds
lret
and
data16
out
mov
jmp
jns
stos
leave
jae
dec
out
mov
ret
out
mov
leave
les
sub
bound
lret
pop
pop
nop
aam
fcoms
inc
popa
mov
sahf
dec
pop
xor
sub
ss
inc
outsl
jae
sbb
xlat
ljmp
lea
and
and
push
mov
scas
or
ret
jle
loop
or
not
push
xor
or
add
outsl
pop
fs
push
pop
mov
add
clc
iret
or
int3
test
daa
jno
add
jbe
cmpsb
out
mov
xchg
sti
sti
or
push
mov
jae
cmp
sbbb
es
pop
inc
pop
imul
xchg
int
mov
push
popa
data16
sub
sub
adc
jl
daa
shr
pop
lret
mov
sbb
movsb
sbb
xchg
mov
and
call
leave
push
mov
mov
cld
gs
cmp
outsl
lret
or
sub
sbb
pop
pop
clc
or
rcl
sub
ja
push
enter
fidivs
subb
jno
lret
pop
das
leave
xlat
rorb
movsl
push
nop
push
lds
orl
push
pop
cltd
sub
lret
out
fisttpll
xor
dec
lahf
push
movsb
inc
outsb
inc
leave
mov
out
mov
push
cmp
cmp
mov
out
pop
les
es
mov
sub
sbb
daa
mov
je
mov
sbb
iret
jl
cmp
rolb
cld
jnp
or
xchg
les
int3
fsubrl
jo
int3
js
cmp
fildll
mov
mov
xor
cwtl
aas
push
fnstsw
pop
ret
ljmp
lcall
xchg
les
icebp
mov
jge
notb
add
cmp
push
inc
xor
push
aaa
xlat
rclb
mov
dec
adc
dec
adc
stos
cmp
je
aad
and
push
adc
push
mov
clc
fisubl
or
mov
shrl
les
dec
leave
adc
mov
mov
and
mov
sub
cmp
adc
cmp
into
add
int3
mov
out
xor
shll
out
ffreep
lds
mov
push
sbb
sbb
or
cmp
js
repz
xchg
jo
xchg
andl
sbb
adc
pop
mov
pop
adc
scas
insb
ds
or
jae
hlt
mov
sbb
or
inc
and
sub
stos
push
and
pop
fadds
and
test
mov
cmc
add
rorl
mov
nop
sbb
lods
adc
add
jae
xorl
pop
cs
xor
rcrl
fsubrs
pop
pop
pop
adc
push
xchg
xchg
cmpsb
lcall
mov
mov
dec
popf
sub
fiaddl
out
jp
inc
pop
mov
push
addr16
xchg
adc
ljmp
gs
test
xor
clc
mov
inc
push
out
dec
sbb
nop
nop
outsb
outsl
jbe
dec
std
jecxz
mov
sarl
iret
push
mov
loopne
jb
or
mul
adc
stos
cmp
mov
pop
test
mov
jl
cmp
adc
adcl
xchg
adc
aad
xor
bound
sahf
xlat
jnp
mov
fmul
rorl
jo
and
inc
dec
or
mov
xor
pop
dec
inc
jmp
push
sub
cmp
jg
test
sub
movsb
mov
cwtl
jge
xorb
jle
leave
jle
sbb
call
stos
pop
xchg
jo
out
xchg
ss
jmp
inc
sub
push
ds
sub
test
mov
adc
add
into
pop
push
jg
jecxz
dec
js
cmpsl
push
xchg
rcrb
sbb
xor
aam
insb
push
sub
inc
xor
jnp
xchg
cmc
cmp
popf
nop
xchg
dec
enter
in
lods
dec
adc
clc
rorl
mov
scas
cmp
push
jnp
jp
lcall
mov
daa
js
jns
sub
jbe
int
mov
stos
sbb
shll
pop
xor
roll
xlat
scas
lods
sub
ficompl
xchg
movsl
notl
fstpt
push
orl
ficompl
sbb
into
inc
mov
mov
movsl
ss
cld
push
je
xor
fistps
push
pop
sbb
or
jo
mov
xor
stos
xchg
jmp
repnz
push
push
xor
je
jbe
addr16
xlat
ja
lods
jb
gs
jmp
jno
sub
xor
sbb
xchg
push
mov
sub
push
icebp
xor
xorb
pop
push
sti
sub
mov
add
add
inc
mov
cmp
sbb
jmp
push
push
xor
jge
test
inc
cs
fiadds
mov
xor
pop
iret
jno
test
pop
loope
inc
push
fcmovne
fucom
fdivr
push
sub
mov
jbe
pop
test
push
xchg
out
aam
push
inc
xchg
iret
cmpsb
sbb
xchg
ja
fiaddl
jno
cmpb
pop
rolb
js
ss
cmp
aaa
addr16
scas
adc
and
inc
fdiv
add
dec
das
mov
pop
jne
ja
movsl
and
mov
rcll
adc
out
lods
fistpll
sub
jne
pusha
dec
movsb
xorb
sahf
shlb
cmpsb
cli
sbb
fcompl
pop
adc
out
push
aaa
adc
mov
pop
adc
jge
mov
in
inc
int
push
sbb
sbb
data16
mov
add
dec
lret
push
jno
fistl
jo
icebp
clc
push
fiadds
stos
dec
lods
mov
or
xchg
int3
and
test
sbb
repz
sbb
jo
mov
lahf
xlat
jecxz
bound
loope
sub
popf
pop
out
add
lods
ffreep
jne
jcxz
fdivrs
out
loopne
cli
add
bnd
leave
xor
pop
add
rcr
enter
into
xor
dec
push
push
xor
pop
fisttpl
mov
lods
inc
fnstsw
dec
rep
push
movsb
add
push
adc
movsb
mov
or
push
pop
sahf
jno
les
lds
jg
dec
lea
sbb
adc
fnstcw
or
mov
rcll
cmp
daa
and
js
out
cltd
es
sbb
dec
xor
sub
in
fs
xor
mov
outsb
push
push
lret
loopne
shl
mull
repnz
mov
fbstp
mov
or
popa
aad
adc
stc
fistps
lods
daa
xchg
mov
dec
dec
insl
cltd
mov
shl
push
sarl
fstl
movhps
int3
lods
push
push
push
sbb
fdivp
pushf
fwait
sbb
jno
out
dec
fs
mov
out
frstor
ret
ret
inc
mov
movsb
sbb
dec
adc
mov
jo
lret
das
add
sub
or
and
inc
mov
daa
jle
les
in
aas
sbb
movsb
xor
pop
in
mov
aad
sbb
sub
lds
shlb
pop
std
sar
add
mov
mov
js
cmp
repz
test
dec
cli
ret
iret
les
shlb
popf
mov
jo
add
xlat
push
sub
icebp
ja
add
xor
xchg
ljmp
movsl
pushf
push
out
les
mov
jns
xor
cmc
cmp
call
mov
popf
inc
ja
lahf
sarl
xor
stos
fcoml
cmpsl
xor
ljmp
cmpsl
mov
xchg
push
add
mov
xchg
add
jg
fbld
repz
jo
pslld
insb
or
aaa
orl
mov
mov
dec
les
fimuls
andl
xorl
sbb
and
pushf
es
and
inc
je
push
movl
mov
cmp
iret
pop
xchg
sbb
fs
mov
mov
dec
inc
movsl
insb
xor
dec
lret
inc
out
repnz
pop
adc
mov
frstpm(287
mov
cmpsl
je
ret
xchg
stc
clc
pop
cmpsb
test
pop
jecxz
or
leave
cwtl
jo
cmp
dec
pop
movsl
repnz
test
mov
scas
test
aas
jp
mov
loopne
dec
or
out
jecxz
cmc
dec
sbb
rorb
stc
mov
mov
xchg
push
xor
and
fdiv
inc
sub
sbbb
outsb
and
leave
mov
repnz
lret
inc
and
sub
add
stc
cmp
shll
push
out
add
mov
cmpl
out
hlt
ficoml
mov
sbb
sbbb
dec
out
bound
xor
lds
mov
rclb
mov
ret
adc
pop
cmpsl
fdivrp
repz
push
stc
mov
ja
add
subl
and
sahf
ret
icebp
cld
sbb
imul
popa
fisubrs
push
icebp
mov
jg
fsubr
inc
xor
mov
dec
scas
jle
mov
in
mov
pop
xorb
mov
xchg
and
in
sub
sub
cmp
subb
xor
cwtl
dec
push
out
rorl
stos
push
in
cmp
out
add
out
lock
sbb
stos
sbb
mov
ror
xor
ds
popf
vphaddudq
sub
imul
sub
shlb
clc
mov
filds
popa
cltd
cmp
adc
loop
fs
and
notb
test
dec
fldt
roll
push
add
hlt
fdivs
or
in
int
mov
daa
dec
cmp
mov
add
or
mov
sub
ljmp
and
scas
daa
fisubl
pushl
add
cmp
xchg
int
lea
ds
cwtl
or
mov
arpl
es
addb
addr16
cli
push
xlat
dec
xchg
les
lret
push
sub
dec
lea
popa
cltd
ret
pop
mov
mov
xor
ljmp
sub
imul
stos
add
pop
cmp
imul
pop
call
ljmp
mov
and
mov
fsubl
xchg
js
jge
cmp
int3
stos
push
mov
ja
lods
pop
add
loope
mov
test
or
pop
inc
jmp
jle
out
xchg
jns
rol
es
rep
sub
outsb
sub
stos
sub
inc
negl
adc
xor
sub
fincstp
push
sahf
adc
negb
out
mov
xchg
insl
jns
xor
fistpll
mov
and
fstl
testl
out
hlt
fstpl
mov
in
add
mov
outsl
sti
mov
inc
sub
jle
mov
out
mov
lcall
add
mov
insb
inc
or
push
sub
rcrb
and
cmp
mov
sahf
lcall
add
outsb
loopne
and
insl
xlat
pop
cmpb
and
mov
adcb
mov
lahf
xchg
mov
add
ds
hlt
xor
or
in
dec
push
ds
and
mov
shl
ljmp
cld
sbb
mov
insl
push
adc
push
cs
pop
ja
subl
inc
arpl
icebp
xchg
aaa
es
push
outsl
pop
dec
stc
incb
int
xor
rcrb
sub
cmp
sbb
fnstcw
xchg
mov
xorb
jno
dec
das
jmp
add
and
imul
sete
mov
andb
ficoml
cmpsb
nopl
aaa
fdivl
insl
jge
imul
aam
sbb
dec
xor
shlb
fildll
push
push
in
js
pusha
sbb
or
int3
xchg
sbb
pop
dec
test
out
xor
add
hlt
test
jp
sbbb
shl
or
repz
inc
insl
xchg
adc
out
add
xor
push
lcall
mov
push
mov
testl
lods
cmc
cmpsb
dec
pop
flds
idiv
pop
rcr
cmpb
cmp
inc
xlat
push
push
push
divl
jne
dec
scas
add
xchg
and
pop
imul
adc
insb
inc
rcrb
jp
mov
gs
aad
out
mov
in
lds
imul
push
dec
jne
dec
ljmp
mov
test
jo
jns
insb
mov
loope
sub
push
xchg
push
adcl
or
lods
xchg
movsl
inc
repnz
and
adc
out
inc
test
mov
push
int3
dec
pop
push
cmp
mov
notb
orb
jge
push
cld
loopne
icebp
mov
rcl
jnp
sbbl
sbb
imul
lcall
sbb
sar
movsb
push
mov
fnstenv
mov
pop
xor
jbe
stos
mov
push
pop
sbb
mov
loop
push
and
xor
pop
mov
xchg
sbb
pushf
std
loope
repnz
xchg
mov
ja
movsb
inc
dec
sbb
in
adc
repnz
out
lar
xchg
push
neg
sub
or
xchg
mov
imul
xor
pop
jmp
dec
jbe
sub
std
bound
lods
je
scas
cmp
imul
pop
add
xlat
les
mov
addr16
xchg
mov
or
sub
cld
loopne
lods
push
bound
outsl
fs
pop
sub
jo
test
cmp
xor
or
mov
jmp
xchg
pop
sub
daa
lret
jecxz
push
les
icebp
xchg
jl
div
and
shl
and
jl
lret
mov
and
pop
mov
rcrb
mov
adc
mov
iret
sbb
out
pop
aad
lcall
test
fdivs
mov
push
mov
cli
cmp
cltd
pop
lcall
or
add
xchg
inc
shr
jnp
xchg
jnp
rcrl
in
xor
loopne
repz
sub
push
sbb
lods
mov
icebp
mov
xor
adc
int
cs
push
hlt
ficoml
cs
lret
ror
mov
aam
xor
jno
xchg
mov
fisubrl
loopne
mov
cmc
cmp
pop
int
inc
test
jecxz
loopne
mov
jo
fsubrs
outsl
mov
pop
clc
push
repnz
xchg
daa
xchg
cmpsb
add
dec
test
sahf
sub
loopne
nop
sbb
adc
daa
pop
data16
ljmp
aaa
fsubr
cli
and
add
xor
cmpsb
out
in
pusha
ss
repz
inc
hlt
add
add
stos
jge
call
mov
pop
scas
or
addr16
sub
xor
repnz
add
mov
jg
shll
mov
imul
push
imul
loop
inc
cmp
mov
in
xchg
mov
pop
stos
in
xorb
cld
jno
pop
push
push
sub
test
test
mov
roll
xor
stc
mov
iret
and
sub
sub
cmp
sbb
pop
dec
jno
test
or
scas
or
fs
in
adc
mov
mov
popf
popf
xchg
xor
idivl
push
mov
aam
xchg
es
addr16
stos
test
adc
jb
loopw
std
pop
sub
test
fsubs
adc
sub
ret
push
push
mulb
xchg
aad
or
and
test
mov
outsb
mov
and
jnp
daa
aam
aad
mov
adc
adc
sbb
inc
fsubrl
mov
sbb
cwtl
mov
xor
ret
jns
sahf
in
cmpsb
rcll
and
lods
rolb
dec
jno
testb
or
lock
sbb
or
leave
stos
jne
aad
pop
imul
in
mov
mov
lret
aad
fcomi
mov
pop
imul
lods
cmp
das
jo
addr16
pop
mov
loopne
pusha
std
mov
xchg
add
adc
pop
out
shr
call
xchg
adc
xor
push
pop
pop
push
adc
repnz
in
out
popf
add
adc
ja
and
add
inc
outsb
imull
mov
pop
cwtl
incl
hlt
xor
cld
dec
jge
in
adc
rcrl
popf
in
or
nop
fnsave
sub
mov
imul
les
and
mov
scas
and
jno
xchg
adc
mov
xor
test
mov
or
jge
and
mov
in
test
lcall
aad
or
lods
cmp
lret
cmc
out
sbb
ds
inc
mov
pop
je
mov
or
push
inc
aad
adc
or
xor
jge
pop
mov
mov
mov
nop
sbb
or
or
test
lahf
out
adc
sub
movsb
and
rcl
push
xor
aad
jl
insl
outsb
jnp
into
pop
mov
cmpsb
out
movsb
test
dec
and
mov
sti
loop
in
mov
jl
lahf
pop
repnz
jle
ffreep
pushf
adc
mov
pop
mov
or
sti
mov
lret
push
sbb
call
push
dec
sbb
gs
sub
cli
sbb
push
pop
mov
sti
cmc
test
repz
stc
clc
icebp
mov
add
mov
pushf
jo
adc
pop
push
rcll
cmp
mov
enter
in
lcall
popf
inc
rclb
adc
lahf
fbld
lods
outsb
les
fmul
mov
xchg
aas
insl
fldenv
cmc
insl
iret
inc
push
movsl
sub
cltd
ljmp
pushf
scas
push
adc
inc
rorb
fistpl
push
in
in
lret
adc
pop
jns
xchg
adc
addl
mov
push
mov
jnp
mov
das
dec
in
or
mov
dec
sub
mulb
aad
mov
ja
push
nop
std
mov
push
je
loopne
adc
push
adc
push
sub
sbb
rep
xchg
xchg
mov
repz
mov
or
je
xchg
es
jno
flds
jns
clc
rorb
es
scas
lock
enter
in
mov
rcr
or
pop
and
add
sbb
push
lea
and
push
addb
jbe
add
push
test
les
hlt
cmc
jecxz
mov
dec
gs
data16
lea
mov
out
sub
dec
clc
sti
loop
jp
popf
cltd
sub
add
adc
pop
loopne
mov
ret
dec
in
mov
sub
outsl
dec
cmp
jmp
and
outsl
cltd
jne
adc
push
dec
mov
xor
fisttps
daa
pop
push
aam
call
leave
mov
or
cltd
mov
sbb
mov
pop
pop
push
les
sbb
push
arpl
ljmp
sub
and
out
lret
xchg
xor
cmpl
jge
icebp
cmp
scas
mov
inc
inc
insb
test
adc
lahf
popa
sub
dec
adc
in
sbb
jl
sahf
addb
xor
incb
stc
mov
lahf
push
jns
out
sub
insl
scas
data16
and
lods
mov
sub
stos
push
jno
sub
loopne
popa
xor
jb
cmpsb
mov
xchg
lahf
cmpsw
aaa
sbb
loope
mov
sarl
or
cwtl
sbb
or
ja
mov
jne
in
adc
sahf
cmp
jecxz
shl
out
dec
lods
in
jno
push
mov
xchg
add
pop
std
jo
test
add
mov
rol
mov
xchg
mov
jbe
mov
sbb
and
fbld
cmpsl
jp
pop
cmp
push
jbe,pt
adc
icebp
add
out
pop
jb
xchg
push
rcr
stc
not
outsb
pop
sub
mov
push
ljmp
cmp
ret
add
cmpsl
iret
into
dec
cmp
cmp
nop
test
inc
ljmp
jmp
fwait
push
inc
lds
mov
insb
dec
push
xor
and
jnp
add
aad
sub
es
xchg
jmp
lret
scas
fnstcw
loopne
outsb
xor
sub
lock
cli
mov
call
mov
jbe
dec
cmp
and
fs
xor
pop
imul
pop
sahf
cmc
cmp
clc
cmp
mov
outsb
xchg
daa
pop
pop
mov
adc
push
lret
pushf
dec
and
lds
fmul
repz
nop
lds
mov
cmpb
mov
or
lret
mov
add
cltd
pop
stos
push
adc
jle
adc
cmp
imul
imul
int
cmp
xor
rcrb
or
jecxz
aad
mov
ljmp
icebp
pop
andb
cmp
jge
adc
push
aas
jg
lret
push
stc
inc
inc
push
cmpsl
push
lea
jecxz
hlt
xlat
mov
ja
out
mov
jge
xchg
cmp
push
cmpsl
test
sbb
mov
inc
sub
mov
cmp
call
lea
jne
shll
ficoms
jbe
jbe
hlt
imul
sbb
int3
lods
out
aas
mov
dec
adc
flds
push
dec
adc
mov
lret
test
mov
cmp
jp
out
mov
insl
mov
sahf
cwtl
dec
push
adcb
lods
or
mov
adc
xor
outsb
gs
ja
xchg
xor
roll
cli
lods
cmp
cmp
lret
xchg
jle
mov
xor
add
rcrb
clc
insb
mov
pushf
cmp
iret
dec
adcb
xchg
imul
or
mov
mov
push
mov
push
rcrl
sub
push
jcxz
cmpsb
fmuls
add
dec
dec
lds
or
jbe
ja
repz
scas
sbb
mov
adc
imull
push
test
sar
add
and
ljmp
mov
cltd
cld
add
pop
fidivrl
out
popf
push
mov
outsb
sbb
adc
sub
mov
pop
scas
iret
push
test
test
xchg
add
add
clc
push
ret
pop
fcmovnbe
dec
test
xor
jns
add
jae
cmpsl
xchg
push
sub
push
movsb
out
insl
sub
sub
stc
jl
xor
jle
outsl
and
ret
ficomps
mov
sbb
add
jne
dec
jg
shll
push
sub
fnstsw
mov
movsb
jecxz
ret
mov
mov
xchg
sbb
fdivrl
sbb
pop
cli
inc
cmpsl
roll
or
push
into
mov
es
sbb
pushf
fnstcw
cwtl
jne
xor
jg
lock
ds
nop
sbb
outsl
inc
rdpmc
push
jae
fstpt
insb
dec
andb
test
ficoml
leave
or
xchg
jbe
pop
fcomp
aas
mov
xchg
sbb
sbb
leave
imul
call
ljmp
cmpsl
pop
mov
mov
test
push
push
sub
mov
outsb
mov
fcmovb
aad
cmp
ret
cli
mov
stos
xchg
ss
cmp
stc
xor
mov
sbb
mov
in
fcomps
mov
mov
pop
push
imul
aam
dec
xor
stos
xchg
adc
ds
scas
popf
daa
mov
icebp
adc
jecxz
ja
hlt
cmpsl
cltd
pushl
ficoml
arpl
loop
pop
sbb
fidivl
sub
orb
mov
subb
cmp
stc
mov
inc
dec
jo
inc
imul
xchg
cltd
inc
xor
out
jmp
inc
add
and
push
jmp
push
mov
xchg
dec
data16
add
in
shrl
add
les
pushf
in
xor
xchg
in
ljmp
out
fcoml
mov
fiaddl
paddusw
out
pop
add
test
xor
mov
pop
jl
pop
shl
mov
jnp
stc
mov
mov
mov
dec
pop
mov
imul
jmp
mov
cld
add
jbe
adc
mov
sbb
lods
push
xor
cmpsl
ret
jo
fwait
ret
outsl
das
iret
or
and
cmp
and
xor
scas
daa
imul
repz
mov
rol
rorb
and
arpl
in
or
aad
sbb
cmpb
mov
push
mov
add
sub
ljmp
adcb
push
or
and
adc
push
mov
inc
int3
daa
or
inc
jp
sbb
addl
sub
in
inc
mov
jae
and
sub
xor
mov
cmp
movl
or
or
inc
xchg
sbb
or
sbb
std
aas
popa
loopne
scas
lds
ljmp
rorl
inc
icebp
inc
fisttpll
xor
mov
mov
sbb
fistpl
dec
nop
jae
xchg
jl
adc
mov
mov
arpl
out
movsb
xor
xor
jb
xchg
in
lret
pop
mov
inc
shll
mov
pusha
sub
cli
inc
adc
xchg
jo
push
and
lcall
bnd
fnsave
pop
pop
dec
ljmp
stc
jb
xor
imul
dec
je
jo
in
xor
jo
test
push
or
inc
jb
fisubrl
mov
pop
clc
jb
jo
push
inc
cmp
and
test
mov
out
sahf
test
xorb
mov
mov
gs
push
sub
sbb
dec
test
xchg
cmc
testb
xchg
push
test
lods
mov
mov
fbld
les
fildll
push
pop
lea
dec
bsr
inc
enter
mov
dec
jo
mov
pop
es
xchg
lcall
cmp
rclb
mov
movsb
push
xor
cli
jne
inc
rcpps
pop
leave
jmp
xchg
or
aam
clc
sbbl
sub
icebp
mov
lock
push
push
add
mov
repnz
mov
and
mov
comiss
add
fsubrl
pop
fbld
pop
insl
cmpsb
and
xor
adc
inc
out
and
xor
pop
xor
and
inc
aad
push
ja
add
xor
push
jmp
or
and
cli
xor
inc
pop
aaa
shll
andb
inc
xchg
loopne
jle
sub
lods
ljmp
cmc
inc
repnz
mov
jl
gs
inc
sub
push
faddl
pop
daa
push
clc
adc
insl
mov
roll
mov
int3
mov
jae
movsb
push
int3
xor
dec
sbb
pop
push
mov
cmp
mov
inc
movsl
adc
stos
hlt
xchg
mov
lret
enter
add
add
push
aas
and
ds
mov
cli
inc
add
out
sub
and
pop
fdivp
pushf
adc
add
jae
and
lret
push
pop
xchg
sbb
push
lods
pop
xor
out
in
push
jecxz
dec
adcl
mov
lret
or
sbb
clc
repnz
popf
and
adc
add
out
call
sbb
fsubrs
insb
add
adc
or
mov
ja
adcw
cs
dec
jb
insl
lds
cmp
jne
std
push
xor
lods
nop
and
sbb
adc
mov
repz
rcl
cmp
cmp
sbb
cltd
adc
xchg
cmc
aas
lock
movsb
pop
aas
adc
fsubs
ja
push
mov
pushf
mov
jle
scas
xor
mov
icebp
inc
push
imul
mull
xor
loope
pop
and
xchg
adc
pop
outsb
or
pop
xor
xchg
or
cwtl
xchg
ret
ret
dec
jb
clc
push
aas
pop
sbb
int
sub
cli
xor
inc
imul
xchg
jecxz
jp
and
mov
ret
popf
mov
cs
cli
sbb
daa
sub
jmp
dec
sub
cwtl
inc
jno
js
pop
popa
lret
int3
adcl
mov
rcrb
ss
jns
sbb
aaa
pop
rolb
pop
aaa
popf
sbb
pop
jle
inc
fisttps
nop
iret
cmp
jg
jmp
xor
in
out
push
add
shrl
xchg
mov
pop
data16
xor
mov
cmp
jo
pop
hlt
movsb
adc
adc
faddl
add
fisubl
repz
stc
xchg
mov
or
into
sbb
clc
shl
mov
das
loope
lods
cmc
iret
sbbl
nop
jo
stc
repnz
push
std
ljmp
pop
cmp
mov
xlat
les
movsb
in
xchg
or
sub
add
ja
sub
mov
and
ret
mov
inc
ljmp
not
or
stos
dec
ret
sub
and
pop
clc
andl
flds
or
aam
dec
mov
jecxz
mov
or
push
in
aam
push
mov
mov
popf
xorl
ret
sub
addr16
mov
sub
cmp
lods
fcoms
frndint
push
popa
xchg
cs
mov
push
lods
xchg
mov
iret
aad
and
cmp
xor
sahf
shll
mov
xchg
mov
mov
jno
pop
jno
dec
adc
les
xlat
int3
xchg
xor
xor
inc
sahf
sahf
push
add
add
pop
in
les
and
stos
ss
push
sub
mov
push
stc
jp
nop
adc
out
mov
fdiv
lcall
xchg
std
sub
mov
arpl
sub
hlt
adc
mov
push
cltd
ljmp
ret
ss
dec
je
xchg
pop
push
dec
xchg
mov
aad
or
sub
dec
psraw
ljmp
sbb
dec
out
push
ffreep
or
loope
dec
dec
pop
inc
jle
sbb
cmp
cmpsl
test
test
sbb
dec
js
test
mov
pop
repnz
mov
outsl
mov
or
inc
fisubl
or
imul
push
or
js
in
jne
xchg
mov
test
mov
addr16
mov
xor
and
mulb
lahf
fmull
push
aam
arpl
enter
and
add
dec
rcll
sti
push
add
call
or
adc
xchg
xchg
push
sub
das
jnp
dec
in
addb
lcall
imul
jge
xor
dec
imul
icebp
out
ss
inc
lock
in
mov
dec
cmp
pop
cli
push
lods
mov
jb
lret
jp
imul
mov
pop
mov
jecxz
sub
jnp
sub
dec
jns
add
jbe
and
inc
outsb
mov
pop
jg
shl
adc
pop
dec
adc
loop
jp
pop
sub
sub
fistpll
xor
adc
xchg
sbb
jle
icebp
sub
fadd
les
jo
inc
xchg
popa
mov
arpl
xor
jo
lods
push
dec
pop
orps
mov
je
popa
cmpsl
xor
xor
rcll
rol
cltd
popf
popa
mov
in
or
pop
mov
add
clc
xor
lret
cmp
int
pop
gs
push
outsb
mov
lea
dec
inc
push
clc
nop
jb
in
lret
inc
aad
es
mov
lahf
notl
insl
jmp
add
out
daa
mov
pop
inc
test
pusha
add
stos
call
push
nop
jnp
jmp
ds
mov
push
xchg
popa
inc
jnp
les
mov
ret
icebp
dec
mov
fisubrs
aam
xchg
test
pop
loope
or
adc
or
lret
or
jne
daa
test
sti
inc
shlb
imulb
shll
or
dec
lds
out
loopne
or
and
xchg
mov
ljmp
rcll
rclb
xchg
jb
push
fnstcw
je
enter
push
push
das
pop
popa
mov
xor
sub
stos
scas
rorb
fcoms
fisubl
pop
ljmp
adc
sbb
mov
cli
mov
sub
jns
mov
fsubp
xchg
movsb
fwait
inc
sar
rclb
lock
xor
mov
add
std
mov
in
jb
arpl
imul
xchg
inc
pop
je
push
clc
cwtl
sahf
xchg
call
jp
shr
push
pop
adc
inc
test
xchg
ret
pop
shll
mov
outsl
dec
test
and
and
or
aad
sub
pop
pop
pop
pop
movsl
sub
stc
stos
gs
pop
nop
sbb
out
aad
mov
xor
push
and
adc
inc
pop
dec
ficompl
mov
mov
xor
fistpll
lods
out
cmpsl
and
xor
lret
mov
dec
aad
lock
push
sub
cmp
inc
adc
dec
sbb
jnp
inc
push
adc
xor
xchg
or
inc
xchg
lea
fildll
pushf
daa
js
add
cwtl
jle
flds
dec
in
stos
jnp
adc
mov
inc
test
jg
ss
push
out
les
aas
add
xor
hlt
stos
loop
ret
push
pushf
outsb
dec
sub
adcb
sbb
xor
icebp
add
xor
lret
test
mov
out
outsl
dec
fisubl
jp
stc
pop
stos
push
enter
mov
xchg
cmp
pop
out
and
cld
outsl
add
aad
cmp
dec
push
pop
stos
lods
xor
cmp
orb
mov
loope
adc
icebp
inc
mov
xchg
xor
mov
add
pop
xchg
push
push
out
and
mov
add
daa
inc
jno
xchg
cmpsb
mov
cmp
dec
mov
pop
dec
pop
les
clc
ja
out
sbb
cli
iret
test
data16
inc
mov
and
dec
lahf
vmovaps
or
call
pop
bound
pop
mov
inc
adc
cs
fs
in
je
rclb
jno
mov
mov
cmp
dec
adc
loop
popf
mov
out
ja
cmp
pop
pop
inc
jns
outsl
fidivrl
dec
pop
xor
mov
sbb
and
enter
sbb
lahf
pop
add
dec
lock
adc
rclb
shll
xchg
xchg
in
aad
in
insb
arpl
and
in
jo
testl
pop
jae
fucomi
mov
data16
shlb
dec
mov
xor
nop
sbb
dec
cmc
push
pop
or
sbb
cmp
scas
push
leave
out
fwait
in
jecxz
loopne
sarb
push
outsb
rorl
or
rcrl
sbb
ret
pop
cmpsb
dec
pop
call
and
std
pop
sub
in
sbb
lea
das
inc
adc
adc
gs
clc
mov
xchg
jo
sbb
sub
sub
dec
shlb
add
pop
xor
icebp
repz
lock
test
pop
fsts
jmp
cmp
pop
or
push
sbb
push
jmp
repnz
loop
int3
jge
lahf
sbb
cmp
or
jmp
stc
and
dec
out
dec
stc
push
out
jg
fisubl
je
aaa
popf
addb
daa
add
das
xchg
out
loopne
cld
jbe
inc
push
mov
jno
adc
mov
cltd
ret
xor
push
adc
data16
sbb
int
outsl
jb
push
pop
jae
jp
cmp
sub
jecxz
aas
pop
push
dec
or
scas
inc
leave
out
mov
jae
xchg
fcompl
jae
arpl
enter
addl
mov
mov
push
movsl
lods
loopne
mov
call
lods
stc
dec
lea
sbbl
pusha
cmpsb
adc
jecxz
in
and
sub
adc
ja
mov
cwtl
insl
push
scas
jmp
std
cld
jecxz
sub
out
out
mov
or
xchg
subb
fidivrs
sbb
sti
mov
insl
fisubl
jl
roll
std
mov
mov
shrl
cmp
sbb
mov
std
jne
jp
mov
push
lea
mov
sub
mov
adc
and
add
iret
sub
push
add
lret
lds
sbb
rorb
inc
cmpsb
push
mov
xchg
stos
lret
xchg
aad
insl
pop
xor
ja
push
fldcw
lret
lahf
jae
cmp
ficomps
ss
adc
sbb
insl
mov
xor
scas
sub
adc
lock
or
sub
xchg
push
imul
enter
arpl
test
in
dec
call
sarb
xor
sbb
dec
lea
dec
cmpsb
std
dec
lods
push
mov
outsb
mov
aad
sbbl
pushf
out
loope
add
push
enter
inc
loopne
adc
xchg
sbb
sub
inc
fsubrs
adc
popf
pop
lods
in
clc
mov
mov
cmp
dec
call
push
mov
movsl
adc
push
cmpsl
lds
or
loopne
inc
or
pop
jl
lret
sub
sarb
adc
fisubs
jne
fwait
inc
jo
jecxz
pop
jecxz
or
xchg
dec
adc
or
sub
xor
mov
and
push
shlb
xchg
sbb
cmpsb
inc
mov
mov
std
xchg
insl
or
pusha
out
dec
out
lds
out
adc
and
push
pop
pop
addl
imull
xor
cmpsl
push
addr16
call
mov
jae
test
loop
ret
pop
addr16
push
jp
inc
enter
insl
push
cmpsl
int3
mov
jle
sbb
popa
cmpsl
dec
out
cmpb
lods
jg
imul
mov
vpmaddwd
gs
lea
mov
mov
sbb
ret
xor
arpl
ss
pop
adc
push
mov
jecxz
in
jecxz
rcr
mov
push
sbb
push
lcall
aad
add
add
cli
movb
movsl
add
dec
inc
or
xchg
xchg
add
outsl
xchg
xchg
mov
ret
je
inc
dec
mov
add
inc
loopne
adc
leave
mov
jno
mov
dec
pop
aas
test
lods
cltd
lret
pop
xchg
push
in
cmp
mov
js
dec
repz
fbstp
xchg
mov
mov
in
xor
in
fcoms
pop
mov
mov
test
push
mov
pop
add
jbe
ret
test
sbb
movsb
push
sbb
adcl
out
flds
cmp
jne
sbb
rolb
sbb
mov
cmp
adc
in
xor
in
dec
dec
mov
sbbb
repnz
sbb
dec
dec
pop
into
dec
jmp
cmp
jl
add
fidivs
scas
out
rcrb
mov
into
cmp
pop
mov
mov
je
push
fisubrl
in
inc
daa
mov
add
insl
adc
out
sarl
dec
popa
popa
rorb
pop
and
in
pop
fdivl
aad
sbb
pop
mov
xchg
xor
mov
ljmp
test
ss
mov
jmp
nop
xlat
mov
les
popf
dec
fnstsw
fs
mov
push
mov
push
lods
mov
aas
outsl
mov
mov
loop
push
cwtl
andl
test
mov
fisubrl
test
mov
mov
enter
test
mov
mov
ja
es
pop
push
faddl
jns
cli
gs
jmp
test
jg
sbb
push
inc
xchg
cmp
test
mov
aas
add
sub
and
and
inc
test
adc
into
xor
xor
xorl
ja
jno
jp
cmp
dec
xchg
decb
addb
sarl
das
and
sub
sub
movsl
lret
mov
push
cmp
add
mov
mov
mov
idivb
mov
mov
outsl
adc
cltd
pop
out
andl
pusha
sub
divb
and
test
mov
mov
mov
adc
ds
outsl
adc
fldl
mov
add
sub
stos
jg
inc
arpl
mov
inc
cld
lcall
popa
push
notb
add
mov
sub
cmp
add
stos
sbb
mov
xchg
mov
lods
pop
xor
xor
mov
xchg
mov
outsl
xor
aas
cmp
std
pop
and
xchg
sbb
loop
out
aaa
push
ds
xor
mov
into
outsl
popa
mov
inc
sub
lahf
sbb
stos
xchg
xchg
xchg
adc
daa
cmpb
divb
outsl
insl
add
cmpsl
pop
and
inc
lahf
je
repnz
sti
int3
test
mov
stos
pop
daa
xor
mov
rolb
das
scas
mov
int
outsb
cs
sbb
stos
clc
std
xchg
int
aas
fs
mov
jmp
push
repnz
lea
sub
sbb
push
sub
ret
jb
dec
cmp
push
mov
mov
dec
mov
pusha
add
mov
shrb
or
xchg
int3
add
add
or
dec
add
mov
hlt
negl
jp
inc
push
sbb
lds
cltd
loop
jge
push
or
iret
mov
and
mov
int3
jg
jge
int
cli
jne
adc
pop
add
js
int3
icebp
cmc
pop
add
icebp
push
idivb
jg
mov
jg
lea
sahf
rclb
pop
jmp
int
in
fnstsw
aad
dec
out
mov
lret
lods
mov
mov
test
mov
jmp
fwait
mov
lods
xchg
push
xor
cmp
mov
xor
imul
pop
js
pop
rol
pusha
cmp
jo
jnp
movsl
jo
testb
lds
mov
sbb
call
mov
add
fdivrl
and
enter
lock
leave
push
lcall
stc
sub
rcrl
daa
call
or
int3
stc
xor
push
rorb
movsb
mov
and
imul
pop
mov
iret
mov
cli
sbb
addr16
fldcw
repz
dec
cs
xor
call
js
mov
mov
sahf
cmpl
xadd
mov
stos
fwait
xchg
ja
xchg
cmpl
cmp
shlb
sahf
lret
fidivrs
adcb
icebp
xor
movsl
rcrl
aaa
or
jge
pop
fwait
push
fisubrl
xlat
push
cmp
sbb
imul
aaa
xlat
jb
cwtl
push
lahf
cwtl
jns
aam
cmp
or
loopne
pop
mov
sahf
gs
push
lea
ja
fstps
and
inc
or
aaa
cs
mov
xchg
push
xlat
negl
push
and
in
jno
repnz
cmc
loope
adc
cmpsb
mov
lcall
fiaddl
loope
jmp
push
sti
lahf
jns
mov
test
int3
xor
aas
sbb
fsubl
push
mov
inc
test
adc
stos
movsb
loop
add
jne
mov
pushf
pop
add
movsb
loop
sarb
mov
add
sarb
jo
lahf
dec
decb
mov
shlb
aas
or
test
ja
mov
gs
cmp
cmpsl
sbb
jl
insb
adc
and
pusha
inc
lds
dec
mov
mov
push
lods
mov
jp
mov
in
or
repnz
xorl
mov
mov
cmc
push
add
or
test
lret
mov
sbbb
push
test
mov
inc
stc
out
cmp
jmp
push
sub
xchg
cmpsb
inc
outsb
inc
inc
add
push
dec
xor
jnp
and
pop
cmpsl
ds
enter
pop
test
ret
jne
test
xlat
push
push
scas
xor
in
push
and
mov
and
mov
movb
push
inc
roll
fs
mov
sub
jp
cwtl
mov
ljmp
nop
jo
add
fistl
pop
add
les
test
mov
push
xchg
lret
adcb
popf
aas
push
cmp
enter
mov
pushfw
or
icebp
roll
mov
mov
dec
mov
ja
ret
cmc
je
add
mull
call
push
aad
inc
inc
cmc
cli
pop
les
mov
fidivrl
mov
jmp
cmpsl
pop
shrb
aad
pop
dec
xchg
inc
lods
or
adc
jo
in
mov
push
popf
mov
cmp
xchg
push
mov
enter
fists
out
xor
cmp
inc
addb
hlt
push
iret
sbb
hlt
cltd
lods
into
xchg
stos
cwtl
cmp
dec
cmc
mov
or
fwait
cli
sub
adc
jne
sbb
not
jne
shl
test
pop
aaa
cmp
lret
pop
mov
rorl
pop
fadds
addr16
into
sub
dec
lods
xchg
adc
loop
push
dec
adc
aaa
sub
loope
bswap
sub
or
addr16
clc
mov
sub
xchg
js
enter
push
or
popa
push
pop
lret
pop
rolb
sbb
jecxz
pushf
jne
mov
jge
jae
in
jecxz
fnstsw
pop
sub
cmp
mov
inc
popf
stos
out
psubq
popa
jb
lock
sub
in
cmp
lcall
and
jns
fcoms
je
inc
mov
xchg
jb
pop
xlat
jge
gs
lock
xor
sub
mov
fcoml
mov
sbb
push
mov
push
jno
inc
xlat
dec
push
iret
cli
dec
sbb
push
fwait
sub
jne
not
jno
push
imul
mov
ror
filds
icebp
stos
in
dec
rorl
int
push
push
mov
sti
lahf
aam
adc
push
add
repz
mov
aad
cwtl
mov
shl
imul
insl
lret
pop
mov
jg
add
insl
hlt
adc
inc
lret
fidivrs
in
repnz
mov
and
jl
pop
jnp
test
jnp
lods
fnsave
mov
cmp
inc
mov
dec
call
mov
ret
pop
pop
rcrb
std
ja
dec
test
std
addr16
sbb
xchg
adcl
jb
fstl
xor
loopne
daa
pop
iret
cmpsb
fwait
outsl
mov
cmpsb
jno
pop
inc
lret
add
push
out
ficoml
cmp
test
repz
movb
xchg
je
inc
add
loope
call
jbe
in
dec
or
adc
inc
sbb
add
loop
pushf
fwait
mov
and
cmp
dec
mov
mov
les
incl
out
push
pop
inc
popa
into
call
sbb
dec
lods
push
in
add
pop
sbbl
lds
xlat
fsubr
pushf
js
dec
dec
or
inc
mov
push
mov
jecxz
jo
xchg
aad
and
inc
mov
out
push
stos
pusha
fsubrs
xlat
das
or
aaa
xor
and
sub
or
sub
enter
addr16
xchg
cwtl
insl
enter
incl
loopne
add
notl
lahf
inc
lcall
xchg
pushf
push
sbb
sbb
inc
clc
les
loopne
stc
gs
sbb
std
mov
push
ljmp
repz
and
imul
dec
mov
addr16
pop
push
pop
gs
add
fiaddl
dec
cwtl
adc
xor
cmp
cmp
mov
mov
scas
push
pop
roll
lret
xor
cld
cmp
fdiv
das
arpl
xchg
outsl
inc
ja
stc
sarl
sub
sbb
mov
test
iret
jp
xor
js
jmp
repnz
aas
jle
mov
test
aas
in
cmp
push
xchg
int
enter
stos
cwtl
idivb
lods
push
mul
pop
add
in
movsl
stos
mov
sub
mov
push
mov
xchg
rcll
jl
hlt
les
mov
and
xor
icebp
pop
sbb
daa
mov
nop
loop
std
enter
mov
sub
in
pop
lods
xchg
pop
mov
xor
sbb
add
loop
push
cmp
cld
out
inc
jns
or
test
cld
hlt
out
insl
sbb
sbb
mov
push
mov
fucom
rorl
sub
cmpsl
jae
scas
push
xorl
mov
pusha
add
lcall
lods
test
sub
fwait
repz
sbb
jo
add
or
add
mov
xchg
cmp
iret
push
mov
nopl
incl
pop
add
ret
push
dec
mov
fisubrl
sub
xor
mov
xchg
stc
std
orb
cmp
push
jo
jp
mov
mov
fwait
cmc
repz
and
xor
fwait
add
adc
sbb
sbb
xor
movsl
cltd
call
pop
js
mov
hlt
jno
repz
push
into
int
stos
mov
jl
and
cmp
rcrl
pop
pushl
stos
push
loope
mov
lods
rclb
std
add
lock
jo
fdivr
mov
loop
andb
ds
shr
mov
mov
push
sub
cmp
into
cmp
xor
shlb
sbb
jle
push
test
pop
test
out
xchg
roll
xchg
hlt
mov
pushf
cmp
fbld
into
xchg
inc
mov
popf
std
sar
dec
lea
push
fcomi
mov
inc
je
adc
mov
jne
cli
js
fistpl
fsubr
or
jns
adc
lds
dec
mov
insb
lret
sbb
xor
sti
inc
mov
int3
push
imul
mov
add
fdivrs
xchg
xlat
lret
sbb
scas
jecxz
sbb
cmp
repnz
dec
jecxz
pusha
cmp
xchg
in
sub
movsl
jp
mov
mov
clc
inc
pusha
aaa
cmp
or
out
pop
cwtl
push
movsb
add
sahf
cld
pop
in
movsl
push
mov
dec
repz
push
pop
cmp
push
rcl
out
in
bound
popaw
sbb
imul
push
push
lds
hlt
out
arpl
cmp
lcall
ret
rcll
jno
mov
push
loope
or
mov
push
and
les
dec
and
pop
dec
xchg
rorl
or
push
and
lds
sbb
andb
push
outsl
outsb
push
test
scas
pop
in
popl
cmp
cmpsb
aad
ror
in
andl
frstor
cmpsb
out
mov
push
faddl
int
xchg
faddl
or
lahf
stos
dec
out
add
mov
push
xchg
jl
add
mov
je
aad
or
sarb
push
rdtsc
xchg
leave
mov
in
pop
mov
mov
or
pop
push
dec
xchg
out
js
mov
xor
or
cmpsb
sarb
mov
mov
aad
xor
out
jns
sub
insb
add
jg
push
scas
add
dec
xchg
rol
mov
cmp
pop
fdivr
or
inc
dec
out
movsb
and
std
repz
sub
scas
in
loopne
add
sub
push
sbb
les
pop
je
ret
out
clc
or
jge
fwait
pop
cli
adc
xchg
out
dec
iret
jmp
sbb
out
loope
mov
into
xor
rorb
ret
push
lock
push
aas
xchg
mov
dec
dec
mov
sub
fisttpll
cs
repz
js
vcvtdq2ps
push
jecxz
mov
sbb
xor
push
inc
mov
leave
add
rol
jg
push
pop
outsl
sub
andb
jns
add
scas
ret
jo
adc
arpl
sub
mov
push
push
lahf
dec
jne
arpl
iret
test
insb
out
icebp
lock
inc
add
leave
jb
icebp
xor
leave
test
push
cld
add
mov
pop
push
sub
cmp
fnstenv
push
mov
addr16
loop
scas
lods
mov
jmp
add
test
mov
frstor
in
dec
pop
inc
mov
jecxz
popa
fs
fbstp
inc
dec
sub
adc
out
ja
sbb
xchg
mov
mov
xchg
push
test
cmc
int
pop
sbb
jne
shrl
pop
repnz
int3
cmp
ror
hlt
clc
mov
jle
ss
sbbb
sarb
jg
lret
sub
repz
fs
jp
iret
dec
pop
mov
or
adc
je
sbb
filds
es
mov
add
ficoms
sbb
lods
lahf
rcrl
cwtl
jnp
fsubrs
jb
rorl
es
jmp
cmc
test
xchg
jle
out
mov
out
cmp
and
and
sub
pop
outsl
stos
fldt
movsb
std
jno
xor
sbb
cmp
adc
add
and
test
inc
aad
and
push
arpl
shll
ss
shlb
push
cmp
cmc
jo
mov
and
xor
inc
shrb
fimull
xchg
dec
mov
jb
cmp
ja
xchg
pop
sub
fisttpll
pop
dec
xor
add
or
sbbl
jecxz
in
dec
mov
and
mov
jl
ss
test
popa
fistps
inc
out
out
xchg
inc
scas
aaa
cmpsb
mov
sbb
cmp
inc
adc
daa
pop
outsb
out
xchg
fwait
mov
stos
jno
mov
mov
cmp
mov
dec
fiadds
xor
push
ret
js
sbb
loope
xchg
in
out
jl
adc
sti
aaa
pop
cmpsb
fisttpll
pop
jne
outsl
inc
sbb
xor
dec
into
scas
jmp
dec
lods
mov
daa
inc
ret
cmpb
rolb
mov
repz
and
pop
mov
imull
jnp
pop
lock
into
cwtl
jns
cmp
add
jl
sub
pop
push
outsl
int3
in
outsl
addr16
xchg
insb
mov
xor
cmp
jecxz
fisubrs
out
sti
xchg
repnz
pop
daa
test
int
test
incb
xchg
mov
mov
cmpsl
add
mov
mov
xor
adc
test
addl
and
test
jg
xor
xor
mov
aas
inc
stos
inc
insb
xchg
dec
into
lret
add
iret
ds
loopne
sub
test
dec
jl
pushf
cli
test
pop
stos
es
push
dec
int
add
inc
dec
js
stos
lock
or
cwtl
test
ret
or
push
jp
mov
push
cmp
rcll
pushf
movsl
jns
add
ds
addr16
mov
jle
pop
repnz
push
imul
test
ret
mov
cmp
mov
xchg
inc
stos
insl
jle
dec
mov
cmp
push
out
inc
imulb
mov
lea
mov
out
fdivrl
dec
cmpsb
adcb
jecxz
fldenv
in
mov
mov
jne
sub
xor
and
icebp
scas
adc
loop
mov
sbb
call
pop
cmp
mov
inc
cmp
jb
ja
cmp
inc
popl
in
ja
jge
cmpsl
push
inc
push
mov
sub
xor
or
or
mov
cli
mov
jl
ficomps
aad
pop
xchg
in
and
add
je
repz
or
int3
sti
js
lds
test
add
fs
call
pushf
inc
subb
mov
pusha
fwait
pop
insb
fs
sub
xchg
mov
pop
push
pop
decb
sub
ficoml
jno
or
inc
sar
dec
andl
xorb
and
test
mov
rolb
das
mov
jns
cltd
cmp
ja
repz
cwtl
pushf
setge
push
enter
mov
dec
and
pop
arpl
ljmp
mov
test
mov
cmova
mov
cwtl
lea
adc
xor
push
pop
xor
and
mov
ljmp
cmp
push
out
outsl
in
mov
jo
stos
push
sub
inc
fmulp
jl
sub
cmp
mov
jo
sub
mov
cmp
out
mov
xor
shrl
jbe
pop
int
out
xor
hlt
xchg
mov
dec
std
fmuls
test
adc
or
cli
pop
lahf
aaa
add
bound
movsl
mov
data16
inc
stos
cli
fdivl
inc
mov
fucom
cmpsb
call
shlb
or
lea
fsubp
mov
pop
or
clc
fcomip
dec
xor
inc
negl
aam
xchg
lods
fcompl
xor
adcb
mov
aas
fsts
lret
sub
bound
insb
sbb
shrl
push
sbb
test
mov
test
push
fs
aad
push
add
mov
test
pop
mov
scas
inc
fdivr
and
leave
fbld
mov
cmp
push
in
xlat
pop
pop
push
sub
out
xchg
jl
sahf
add
data16
jae
xor
stos
testb
adc
or
inc
or
mov
in
aad
ss
cltd
dec
or
fimuls
outsb
adc
popf
and
clc
sub
push
stc
dec
mov
pop
xchg
jnp
out
adc
mov
xor
dec
mov
fcmove
sub
sbb
sti
adc
mov
push
mov
sub
jnp
mov
push
push
xor
mov
icebp
xchg
and
mov
insl
lahf
jnp
ret
stos
dec
adc
sub
pusha
xor
sub
cwtl
and
pop
jmp
cmp
stc
mov
test
xor
dec
push
and
pusha
lret
mov
call
add
push
cmpsb
std
js
pop
into
scas
mov
xor
add
int3
push
stos
mov
shl
add
subl
jae
popa
mov
movlps
sbb
scas
test
jg
stos
adc
outsl
lock
dec
in
fidivl
sbb
int
scas
xlat
dec
inc
sbb
ja
outsl
aas
aad
jnp
inc
xchg
roll
ja
adcl
dec
push
fcomps
aad
push
sahf
inc
xchg
mov
cld
dec
pop
inc
mov
out
fcmovnbe
push
cmp
add
mov
mov
pop
pusha
mov
jb
sub
movsl
je
loop
rcrb
scas
ret
pop
push
mov
int
adc
in
mov
sahf
cmpsb
imul
fdivr
inc
js
das
dec
lods
or
leave
jle
ja
shlb
add
ljmp
out
adc
mov
outsl
mov
xchg
mov
enter
xor
std
loop
pop
fwait
enter
jp
in
mov
movsb
roll
je
push
ret
or
test
pop
daa
pop
mov
insb
dec
push
xor
scas
int3
ret
jne
dec
mov
jo
xor
ss
inc
ja
sub
inc
or
pop
jb
and
add
xor
or
aaa
ss
andb
pop
es
orl
sbbb
dec
ja
mov
or
popa
mov
test
mov
push
cmp
jmp
mov
and
testb
daa
push
ficoml
pop
subl
stos
aaa
xor
fwait
lret
sbb
jge
sarl
inc
dec
or
or
inc
aaa
decb
cmpsl
jae
sub
mov
loope
stc
in
aaa
out
scas
xor
push
iret
fstpt
addb
dec
xchg
xchg
and
loopne
shl
call
push
rcrl
pop
out
adc
sbb
sti
mov
inc
popf
jb
and
daa
sub
inc
mov
pushf
sbb
sbb
xor
stc
fs
jp
xor
mov
shll
mov
cltd
lds
in
sahf
flds
sub
scas
sub
sub
mov
repz
sbb
mov
inc
dec
cld
outsb
add
aad
sub
repz
lret
les
das
imul
lahf
inc
out
push
jns
xchg
mov
not
xchg
jge
push
stc
dec
das
pop
stos
enter
jle
mov
inc
xchg
stos
mov
cmp
arpl
xor
inc
ficompl
xlat
nop
loop
loop
sbb
cld
test
into
mov
xchg
jb
sbb
les
insb
cli
jp
inc
stc
sbb
nop
xchg
and
and
aam
es
aaa
cltd
jbe
lcall
cmpsb
nop
leave
js
mov
ficomps
fisttpl
ss
add
sbb
insb
lahf
out
xor
mov
ret
cmp
push
scas
sarl
push
sahf
test
cmp
popf
pop
daa
or
mov
fs
cmp
mov
jae
mov
or
mov
jae
je
dec
lds
or
cmpsb
mov
xchg
test
arpl
add
fs
jns
out
movsb
andb
mov
ret
in
xor
xchg
pushf
test
mov
movsb
lcall
cltd
into
js,pt
cmc
les
or
push
dec
loop
movsb
cmp
test
adc
out
adc
idivl
jae
add
xchg
loop
adc
enter
fidivs
lods
jne
stos
mov
pop
fimuls
popf
jmp
xchg
cmp
test
shl
lock
push
int
scas
outsl
dec
push
jmp
push
mov
push
pop
mov
popf
sarb
and
int
mov
xor
mov
mov
shl
xor
and
inc
lods
mov
xor
mov
aas
rcll
jecxz
push
arpl
adc
insb
adc
and
in
ljmp
xchg
mov
cltd
andnps
dec
adc
test
in
std
jl
jmp
pop
xor
mov
pop
aaa
mov
test
into
pop
add
pop
xor
push
mov
ret
rcll
and
adc
in
pop
scas
aad
and
shl
pop
xchg
cmc
mov
and
arpl
insl
dec
lea
pop
es
les
jl
add
aaa
hlt
jmp
xchg
add
aas
stos
pop
leave
arpl
fmul
and
mov
call
push
cmpsb
inc
add
ljmp
push
jae
fsts
push
cmpsb
aas
adc
push
ss
sub
enter
dec
pop
mov
mov
mov
fs
xchg
or
jae
insb
in
fcmovne
pop
dec
int
pop
cmp
xchg
test
fsts
fdivrl
jno
and
jbe
cwtl
sbb
inc
jmp
xor
xor
ret
jg
adc
lock
clc
mov
inc
inc
dec
test
pop
fdivrs
nop
dec
call
pop
mov
jge
push
adc
je
push
dec
pop
xor
mov
lahf
sahf
gs
add
add
insb
std
cli
cmp
sarb
and
scas
and
mov
cmp
pop
pop
cmpsb
dec
push
mov
pop
sub
cwtl
cmp
sbb
dec
repnz
add
sbb
into
adc
jle
dec
fmull
add
adc
cmpsl
mov
insl
jae
scas
in
rcl
and
jae
jo
adc
sub
pop
clc
dec
sub
sub
xor
stos
idiv
aas
add
repnz
mov
add
jecxz
shll
jecxz
js
mov
rcll
and
ret
lahf
mov
mov
and
lea
push
or
lea
push
and
xor
and
dec
pop
pop
out
shrl
jnp
xlat
add
rorl
push
push
sti
scas
aad
xor
cmp
cltd
cmc
mov
cs
dec
adc
stc
fldl
pop
int
mov
lcall
cld
pop
cwtl
jp
jmp
push
push
dec
xor
xchg
cwtl
negl
stos
test
pop
adc
mov
mov
out
imul
insb
xchg
and
sbb
mull
adc
mov
mov
xchg
int
aad
pop
xchg
aam
add
scas
fisubrs
cwtl
jg
rcl
push
les
pop
xchg
in
test
push
test
mov
imul
outsl
mov
inc
icebp
inc
mov
cwtl
ja
mov
iret
fsubl
lret
dec
mov
or
imulb
xlat
inc
sahf
call
cwtl
pop
jmp
divl
jno
mov
add
orl
jnp
add
jbe
jbe
leave
add
dec
dec
call
push
das
mov
mov
rcr
add
data16
cmp
stos
mov
sti
dec
les
ret
es
out
mov
out
pushf
std
pusha
dec
or
nop
vxorps
ds
orl
fcoml
xchg
clc
es
hlt
inc
dec
dec
dec
mov
mov
push
je
cmp
sbbb
cmp
xchg
loope
cs
nop
xor
dec
ret
je
and
cli
dec
addl
adc
pop
xor
push
mov
div
test
imul
or
nop
cwtl
leave
test
std
dec
xor
sub
add
xor
and
sub
xchg
xor
add
inc
out
incb
repnz
mov
daa
push
and
dec
jg
ficompl
or
mov
repnz
mov
push
xchg
cs
push
clc
dec
mov
jmp
js
jmp
or
ljmp
dec
dec
jns
jle
mov
xor
jnp
cmp
rcl
cmp
lods
insl
cmp
out
mov
mov
arpl
cmp
test
daa
xlat
xchg
xchg
nop
mov
mov
ret
xchg
xchg
jle
xor
bound
mov
push
js
test
icebp
dec
push
push
inc
jne
orb
pop
iret
push
int3
subb
push
ljmp
mov
loopne
push
add
push
inc
mov
and
enter
and
cmpb
out
mov
in
mov
js
out
and
icebp
pop
pop
inc
jae
adc
mov
mov
xchg
repnz
or
movsb
out
ficomps
adcl
stos
jl
pop
loopne
jle
jbe
or
ss
mov
shrb
xorb
rorb
inc
scas
fstpl
lret
jge
mov
or
dec
or
pop
imul
dec
jnp
rclb
mov
push
mov
ret
cmp
push
push
rdmsr
scas
mov
and
dec
or
cs
pop
das
lcall
ret
neg
enter
fdiv
mov
pop
jo
repz
int
lcall
add
les
adc
call
aad
call
xor
mov
sbb
stos
sub
pushf
push
sbb
add
mov
sbb
cmp
rcrb
pop
adc
sub
pop
jbe
repz
inc
movsl
popf
jne
sar
mov
pop
push
scas
arpl
adc
imul
rcrl
repz
push
mov
or
cmpsb
xor
aam
movsb
sarb
sub
inc
lret
mov
add
cmp
push
xchg
push
loop
dec
in
sub
sub
fisttps
inc
dec
aaa
stc
adc
mov
add
cltd
xchg
inc
cmp
push
xor
mov
add
mov
into
or
ja
mov
xor
sub
pop
movsb
fnstsw
std
dec
aad
lcall
loop
out
xor
inc
outsb
xor
dec
pop
enter
out
jbe
fwait
into
xorb
ljmp
ffree
mov
ja
xchg
loopne
pop
cmp
test
stc
outsl
or
cmp
push
outsb
inc
ret
sbb
xchg
adc
clc
pop
dec
inc
ror
jge
fdivl
jnp
push
imul
loopne
les
adcl
xchg
and
push
sbb
lock
jmp
pop
sbb
mov
stc
ljmp
dec
rcll
insl
add
push
adc
iret
cmpsb
roll
es
push
and
mov
xchg
pop
inc
iret
inc
dec
cmp
or
sub
mov
leave
mov
or
rcrb
mov
sbb
fdivrl
pop
fnstsw
out
insl
mov
icebp
imul
jecxz
ja
insb
dec
mov
mov
flds
scas
jl
cmpsb
aam
or
stos
mov
outsb
xorl
xchg
js
jle
sub
scas
enter
das
nop
lods
ret
loopne
or
scas
xchg
dec
xor
loop
adc
movsb
aad
stos
mov
lock
ljmp
insb
repnz
and
pop
sub
aam
js
push
in
xchg
fdivr
cmc
jbe
sub
arpl
pop
pop
out
or
lods
xor
push
divl
or
jmp
xchg
dec
into
push
cmp
in
repnz
sub
lret
add
push
test
xor
mov
mov
idivb
dec
testl
xchg
test
jae
flds
xchg
bound
xor
cmpl
lret
mov
lea
dec
outsl
push
xor
pop
adc
and
xor
add
scas
lret
mov
cld
dec
sub
faddl
mov
ret
xor
int
in
or
lret
cs
mov
dec
sbb
cltd
xchg
pop
pushf
aas
xor
mov
test
xor
fsubp
stc
add
xchg
jle
jb
cmpsl
mov
add
push
add
adc
mov
cli
mov
cmpb
fisubl
dec
xchg
out
fists
stos
pop
mov
inc
ret
add
xchg
loop
popa
xchg
push
movsb
xchg
sub
inc
imul
cmp
notl
xlat
dec
clc
cld
hlt
sbb
jp
xor
mov
mov
and
push
mov
clc
cmpsl
jo
mull
mov
sahf
sti
mov
cld
aaa
fwait
mov
push
xor
jb
lret
mov
jo
xchg
sar
and
adc
testb
jns
jge
cmp
xor
sub
mov
inc
or
out
jns
jp
stos
fmull
mov
cmp
sbb
jne
std
lods
ret
stc
jmp
in
pop
push
mov
mov
adc
stos
popa
clc
push
jl
mov
mov
mov
setne
lods
in
daa
jge
adc
mov
arpl
mov
aam
or
in
std
andb
dec
outsl
add
add
sarb
mov
xor
lock
enter
movsl
sbb
inc
shrb
ds
and
sbb
pop
leave
sbb
mov
and
cmpsl
mov
pusha
scas
jmp
cmp
pushf
cmp
mov
xchg
pop
aad
mov
sti
push
pop
push
rcr
inc
popa
movsb
imul
push
sti
jne
inc
add
inc
sub
out
push
adc
fcmovnbe
xlat
insb
mov
cmp
pop
mov
jno
dec
clc
mov
rcl
ja
int
gs
mov
sub
mov
xchg
push
repz
jo
bound
ficomps
add
push
lret
mov
movsb
je
or
dec
dec
jl
push
cmp
scas
sub
aas
ss
mov
mov
mov
jmp
push
pop
pop
xchg
cs
loopne
out
lahf
xchg
xchg
pop
and
jl
je
popa
inc
add
lahf
cmp
rcll
cwtl
mov
js
test
lds
mov
and
mov
jno
push
sub
jne
scas
mov
sbb
sbb
add
fiaddl
adc
cmp
jl
out
insl
and
fistps
xchg
test
cld
sti
ss
insb
int3
lea
mov
lcall
repz
stos
js
arpl
push
pop
xor
imul
inc
cmpsb
test
and
adc
iret
inc
sti
ss
push
gs
inc
cli
gs
pop
stc
mov
cmp
mov
aas
mov
rcll
pop
mov
gs
push
xchg
subb
fcoml
sbb
inc
lret
iret
or
hlt
mov
fcomps
stos
inc
and
repnz
and
sar
loop
add
iret
aad
test
cld
push
les
mov
jae
mov
and
mov
cmp
jbe
fiaddl
sub
insb
or
mov
pop
xchg
pop
mov
or
out
add
mov
sbb
fildl
sub
xor
xchg
push
mov
push
pop
and
fdivp
dec
cmpsl
scas
mov
addr16
int3
mov
into
out
xor
jae
test
cld
sti
jmp
jge
notl
sahf
mov
xchg
je
push
neg
dec
addr16
fcmovnu
das
pop
sahf
mov
xchg
das
push
pop
jmp
dec
jmp
std
lods
mov
dec
ret
or
loop
mov
jle
mov
add
dec
mov
clc
add
inc
div
sti
and
loope
lods
xchg
dec
dec
jp
cmc
into
repnz
inc
mov
fldt
mov
push
scas
pop
mov
repz
sbb
mov
xor
jnp
imul
inc
cmp
jno
sbb
rcl
cli
sub
int3
push
adc
cmp
fildl
test
push
clc
sub
outsl
call
loopne
aaa
imul
add
pop
lret
push
mov
inc
or
repz
pop
daa
push
arpl
xor
subb
sub
je
scas
lahf
in
jno
mov
xor
push
imul
jne
fisubrs
ret
jb
ret
dec
ret
xchg
int3
std
mov
aaa
push
mov
sub
fistps
push
mov
nop
icebp
pop
sbb
push
notl
jl
xor
insb
or
or
pop
scas
and
ror
cwtl
and
mov
inc
out
loopne
jno
jmp
in
xor
mov
jmpw
scas
mov
loopne
or
mov
shlb
xchg
and
sbb
sti
and
sub
pop
sub
add
jmp
add
jecxz
dec
pop
mov
fsubrl
add
inc
push
push
jmp
or
jge
and
fisubl
lods
mov
lcall
iret
lret
jge
imul
mov
mov
imul
hlt
jmp
or
out
shr
shl
xorb
jmp
push
in
fdivrs
sahf
std
test
mov
xchg
leave
or
in
inc
push
incl
fiaddl
rorl
testl
mov
inc
int3
jl
gs
adc
es
sbb
sti
inc
cmp
jg
xor
pop
into
pop
call
jl
sbb
mov
sub
repnz
outsb
pop
or
shl
xor
nop
mov
gs
shrb
xor
add
add
nop
mov
movsl
lods
inc
fiaddl
mov
mov
out
cmp
popa
ss
shrl
movsb
fwait
repnz
in
je
imul
mov
in
sub
clc
sbb
popa
push
leave
mov
cs
and
out
les
in
mov
xor
push
lea
mov
sbb
add
push
fwait
sub
clc
movsb
insl
jb
cmp
ret
fcoms
cmpsb
adc
push
lret
aas
popf
movsb
pop
popf
sbb
mov
and
fidivrs
test
mov
mov
mov
pushf
rolb
jnp
outsb
arpl
ror
push
bound
mov
inc
sbb
lcall
outsl
mov
cs
lret
dec
xchg
sub
push
imul
insb
mov
mov
push
sarb
and
jae
mov
jecxz
cmp
pop
xchg
scas
mov
andb
movb
in
inc
pop
in
jecxz
or
inc
cli
and
imul
js
mov
sub
push
enter
rorb
adc
cmp
and
mov
jns
sbb
push
pop
into
mov
lea
push
mov
cmpsb
imul
fstps
sbb
xor
inc
cwtl
lret
mov
jno
jp
popl
fimuls
ficomps
mov
cmpsb
shrl
ret
and
jno
xor
roll
test
jb
sub
push
mov
fs
cltd
push
pop
mov
sub
repz
push
or
xchg
jne
jmp
mov
ror
ja
insb
insb
cmp
pop
sub
pop
sbb
mov
or
dec
mov
mov
das
mov
add
mov
inc
inc
jle
lret
xchg
mov
adc
mov
push
jb
pushf
mov
jo
nop
pop
mov
xor
int
jmp
inc
rcrl
ret
in
mov
test
out
dec
ret
cmpsl
push
stc
push
sarl
inc
popa
mov
jmp
pop
shl
dec
xchg
leave
and
push
mov
and
inc
sub
test
xchg
push
inc
movsl
and
fdivrl
cmp
negb
jae
hlt
or
or
aaa
mov
mov
fdivrs
enter
pop
rcrl
rorb
mov
sbb
adc
pop
mov
popa
push
inc
loopne
icebp
aam
mov
lds
into
sub
pop
push
jmp
inc
aas
testl
push
ret
adc
mov
xchg
and
fcoml
movsb
mov
mov
repz
test
jmp
test
mov
lds
aaa
inc
popf
mov
pop
cmp
jb
fdiv
dec
xchg
packssdw
and
pushl
xor
xchg
jp
ss
repz
or
sub
mov
jecxz
xchg
inc
push
popf
dec
fucom
stos
fdivl
xchg
adc
inc
jp
pop
mov
mov
out
push
test
outsb
loope
arpl
sbb
in
jb
pop
jecxz
roll
ja
dec
filds
cs
mov
cltd
cmpsl
kmovw
xor
hlt
pusha
sbb
mov
push
lods
cmp
jno
les
ret
mov
jnp
adc
stc
popa
inc
xchg
adc
lock
dec
mov
push
in
push
rcl
cmp
jo
or
mov
sbb
sbb
xchg
je
sbb
ss
outsl
mov
xor
jo
ja
out
push
js,pn
adc
push
sub
mov
imul
hlt
adc
pop
jp
cwtl
xor
jge
or
pop
aam
je
and
push
xor
pushf
and
stos
and
mov
pop
dec
dec
sbb
xlat
and
inc
jne
pop
cltd
fbld
dec
in
pop
out
nop
roll
clc
dec
dec
addr16
inc
jecxz
scas
adc
stos
out
and
ljmp
icebp
inc
and
and
fists
repz
pop
xor
rcrl
push
sub
bnd
mov
and
jb
jbe
push
cmpsl
cmp
cmp
out
shlb
cs
fldl
out
out
inc
in
add
iret
mov
into
fdivs
pop
mov
sub
push
xchg
movsb
dec
shr
jl
xor
fs
pushf
xor
xor
aas
shl
repz
push
mov
lock
stos
cmp
sub
rorb
jp
mov
fimuls
jno
sbb
orl
mov
push
dec
dec
stos
lods
sbb
cmp
jecxz
call
decl
insb
sbbl
cmp
inc
add
and
xchg
ret
aam
inc
jo
out
push
cwtl
popa
adcb
inc
in
repnz
int
movsl
add
cmc
fsubs
jmp
pushl
push
and
dec
cmp
add
push
test
sbb
or
cmp
mov
and
outsb
in
mov
repz
add
sbb
aaa
lret
mov
cmp
enter
andb
push
aad
loop
in
or
mulb
pop
pop
add
pop
sub
cmp
out
scas
ret
inc
repnz
mov
in
pop
or
mov
and
dec
ds
mov
andl
adc
push
mov
bound
push
movl
int3
jecxz
xor
jns
pop
fsubl
insb
sbb
test
loope
pop
mov
sbb
or
inc
pop
push
jecxz
or
aas
rorl
xor
arpl
and
jno
or
fisttpl
jnp
cmp
iret
lods
outsb
dec
mov
cwtl
dec
out
cmc
cmp
pop
fmul
bound
pop
adc
es
push
imul
int
inc
xor
stos
es
xchg
movl
xchg
and
xchg
jp
es
in
sbb
push
cmpsb
or
daa
outsl
imul
mov
xchg
push
or
fbstp
andb
pop
fbstp
and
insl
and
mov
add
mov
cmc
aam
pop
sub
shlw
rcrl
cmc
fcmovnbe
dec
ss
cmpsb
imul
sub
pop
outsl
mov
repnz
dec
xchg
testl
pop
call
ffreep
pop
cmpl
sub
es
add
dec
imul
test
imul
xchg
fistpll
fistl
or
lahf
pop
adc
lds
mov
notl
imul
hlt
pusha
imul
popl
sub
pop
add
cmp
leave
push
jge
sub
mov
mov
sbb
rclb
add
or
pop
cmp
inc
push
repz
xchg
fisttpl
or
xchg
bnd
pop
jae
push
fwait
das
das
jno
out
pop
jnp
popa
push
xor
push
test
pushf
inc
adc
imul
bnd
push
movsl
jecxz
jbe
in
ljmp
repnz
das
push
inc
add
loop
xor
xlat
nopl
iret
mov
insl
xor
mov
in
ss
outsb
lods
dec
dec
ret
fcomip
add
and
pusha
sbb
add
mov
add
adc
fstps
xor
jae
rcrl
inc
inc
js
fwait
or
rclb
mov
mov
xchg
int3
fwait
cld
jno
xchg
mov
sub
mov
sbb
les
inc
mov
pop
jmp
jle
cmc
les
push
push
imul
das
js
jae
pop
push
cmc
or
testb
icebp
insb
stos
sbb
jmp
adc
bound
pop
js
in
push
jbe
dec
stos
jne
sub
xchg
inc
cmp
sub
pusha
sbb
jecxz
jmp
jo
jae
adc
jge
adc
xchg
push
in
fbld
loope
mov
inc
inc
roll
rclb
or
repz
andb
js
fldt
jne
lret
jl
test
jns
rep
or
inc
and
add
mov
add
out
or
jns
fsub
sbbl
lcall
mov
decb
push
mov
popa
iret
lret
sbb
xor
call
out
mov
jnp
dec
mov
and
arpl
inc
sbb
cmp
push
sbb
cmp
sti
pop
loope
lret
dec
imul
xor
xchg
lods
jnp
pop
movsb
and
lock
xor
imul
cltd
inc
mov
fdivrl
movsl
pop
hlt
dec
cmp
xchg
adc
dec
dec
int
rorl
mov
and
xor
push
das
in
ljmp
xor
xorb
fistpll
push
mov
les
imull
sub
adc
jg
stc
stc
push
jnp
dec
mov
stos
ss
dec
aas
and
lahf
mov
cwtl
sbb
leave
jbe
mov
mov
cmpsb
scas
push
mov
or
sub
mov
into
push
cwtl
or
leave
or
fidivs
fisttpl
pop
movsl
add
pop
push
fists
push
xorl
xchg
das
or
subl
jo
fdivrs
mov
ret
pop
lahf
add
clc
or
pop
xchg
xchg
aas
out
lods
nop
inc
lret
adc
adc
cmpsl
push
push
fcmove
xor
jno
shr
jbe
enter
push
inc
imul
pop
fs
dec
and
inc
xlat
mov
aad
out
dec
and
out
or
stc
pop
jle
pop
loop
jl
addb
sbb
or
inc
jo
lcall
fistpl
dec
mov
inc
push
sbb
push
push
inc
out
call
arpl
inc
mov
adc
jns
shrb
cmp
jmp
mov
outsl
cmpsl
stos
and
pop
lahf
cmpsl
jne
adc
stc
stc
ja
and
gs
out
mov
and
xor
call
in
jp
dec
loopne
out
dec
and
rol
dec
xor
inc
rorl
mov
hlt
scas
mov
push
cs
dec
add
adc
test
sub
sahf
jmp
and
cmc
mov
out
sub
inc
into
repnz
push
std
out
add
aaa
fs
call
and
pusha
jb
in
jge
add
mov
lahf
pop
pushf
out
das
cmp
mov
mov
ret
jne
xor
cmp
inc
sbbl
testl
ret
mov
jno
sbb
pop
jno
aam
in
rcrl
scas
cmpsb
in
leave
imul
push
cmpsb
xchg
leave
xor
xchg
jg
call
sub
rcrl
repz
lods
inc
cld
aas
xchg
outsb
inc
jmp
sub
call
cmc
sbb
jle
aas
shll
add
shlb
scas
cmp
and
or
mov
sarl
daa
lret
pop
daa
mov
daa
jle
pop
outsb
mov
push
imul
ret
inc
lcall
cmp
sbb
xchg
test
xchg
and
inc
and
pop
mov
push
dec
and
xor
mov
rorl
mov
mov
pop
mov
std
cmp
xchg
sahf
sub
xorb
pop
test
fcomp
sbb
cmp
lods
call
jb
xlat
sahf
add
mov
sbbb
pop
xorl
mov
adc
dec
adc
jno
jae
dec
pop
dec
pop
fmuls
dec
jmp
fcomip
mov
jp
repnz
imul
sub
sub
jo
test
fwait
mov
push
loope
adc
cmpsl
mov
test
add
jno
call
jmp
mov
lods
xchg
stos
flds
shrl
stc
imul
ret
test
idivl
push
jl
push
xchg
add
mov
fidivs
jns
adc
ficompl
inc
insl
mov
pop
mov
icebp
je
scas
enter
mov
int
cs
mov
cli
int
lock
jb
dec
lea
repnz
mov
adc
cmp
push
jecxz
mov
fsubl
push
mov
mov
rcrl
inc
fdivs
pop
cmpl
push
mov
mov
mov
loope
cltd
out
inc
mov
jo
pop
mov
mov
xor
repz
in
dec
hlt
bsf
mov
outsl
xchg
inc
ds
cmp
jbe
mov
das
popf
inc
or
mov
pop
dec
push
mov
jecxz
fs
pop
inc
xchg
cmp
mov
push
jns
lahf
rorl
mov
gs
in
pop
adc
fnsave
cmp
arpl
fdivrs
cmc
jge
rclb
add
shlb
pop
into
fdivr
cmp
aaa
lods
xchg
arpl
xor
xorl
jecxz
pop
sub
lea
pop
push
jb
cltd
and
push
aad
mov
jno
rorl
fisubrl
pop
inc
addr16
testl
pusha
testb
cmpsb
cwtl
mov
lcall
sbb
lods
jge
ret
push
adc
jg
mov
add
inc
add
mov
push
xor
xchg
jae
mov
or
xlat
fiadds
out
popf
push
and
sub
push
sub
or
mov
jno
jge
mov
sbb
ret
sbb
mov
ss
adc
dec
mov
add
cli
jecxz
std
cmpsb
add
stc
push
pop
jle
pop
or
shlb
fnsave
out
add
lods
push
dec
sti
jle
or
push
rcll
push
cmp
push
inc
mov
adc
xchg
add
jns
push
cmp
insb
xchg
and
xchg
and
push
je
cmpsl
scas
mov
mov
fucomp
lcall
dec
loope
adc
and
inc
sbb
xor
imul
sbb
dec
cli
movsl
ss
lea
jnp
adc
xchg
daa
adc
ror
mov
mov
or
jmp
push
xchg
mov
fildl
cmp
sub
mov
pop
std
enter
fs
adc
in
adc
inc
aas
push
push
cmc
add
add
dec
sub
stos
loopne
mov
aaa
out
std
nop
inc
cli
sub
pop
jns
sub
popa
stos
mov
xchg
cmp
sbb
pop
lcall
call
sbb
fcompl
jne
sti
into
mov
mov
repz
sub
mov
pop
insb
pop
mov
mov
das
push
push
das
bound
jb
cmp
adc
stc
bnd
xor
ficoms
andl
push
std
or
inc
adc
cmp
movsl
es
push
cmp
mov
pushf
push
mov
fnstenv
jp
lods
lahf
mov
mov
or
aad
add
push
inc
push
xchg
push
popf
daa
es
mov
push
outsb
nop
lcall
mov
add
dec
cmpsb
lods
ds
fcompl
inc
je
ljmp
push
and
cltd
mov
or
pop
sub
aad
test
mov
loop
frstor
jl
cmp
out
ficomps
add
xor
jmp
sbb
fdiv
loope
into
xor
mov
inc
xchg
mov
pop
int3
insb
pop
cwtl
sbb
test
mov
lds
dec
push
and
xchg
dec
ljmp
xchg
and
sbb
fs
inc
or
mov
mov
dec
sbb
push
jge
aas
mov
jnp
mov
cmpsb
jle
sahf
aam
in
add
icebp
mov
mov
jno
cmp
pop
add
outsl
or
inc
inc
xor
xor
adc
imul
and
push
lds
cmp
push
and
mov
out
cmp
pop
mov
sub
lahf
or
pop
mov
ja
jmp
fcmovnb
dec
sbb
and
iret
mov
pop
js
push
sub
nop
fwait
cmp
push
add
inc
lds
and
loop
outsl
repnz
test
scas
fdivrs
jg
push
daa
jne
xlat
ds
lods
pop
cmp
les
cmpsb
xchg
imul
mov
mov
inc
pushf
mov
jnp
sbb
jp
fidivl
lret
call
movsb
or
xchg
inc
and
rcrl
sub
cmp
push
iret
shlb
add
xchg
sbb
cmp
adc
pop
push
mov
mov
and
lcall
filds
sti
mov
push
cmp
ret
adc
dec
fistl
je
ljmp
aam
dec
fiaddl
mov
mov
js
jo
or
push
fwait
and
enter
ds
aam
adc
lea
mov
mov
jbe
sbb
lods
ficomps
fistl
cld
fcmovnu
or
in
enter
js
xchg
xorl
adc
aad
fwait
mov
xor
aas
cmp
xor
cmc
sub
or
cmp
sub
int
xor
xchg
inc
mov
rcl
lock
cmp
xor
jg
hlt
movsb
and
ss
mov
mov
cmp
movsb
add
je
cmpsb
sub
cmp
cltd
sahf
mov
out
sbb
jg
pop
sub
pop
lcall
xchg
mov
xchg
sub
pop
mov
rorb
mov
fnstsw
or
or
sahf
mov
imul
imul
ds
pop
inc
inc
xchg
jae
or
mov
jmp
inc
cmc
cli
xchg
xchg
scas
int3
push
xchg
lods
and
xorl
pop
xor
push
icebp
jo
pop
ret
pushf
cmp
mov
cli
and
adc
mov
mov
mov
add
and
loopne
nop
outsb
push
sti
pop
xchg
push
es
lock
jmp
int
gs
rol
jle
cmp
push
xchg
xchg
push
imul
pusha
hlt
dec
push
lods
cmpsl
cmp
pop
mov
insl
test
sub
inc
repz
cwtl
cmp
mov
cmp
decb
mov
xor
cli
lods
xor
add
sbb
sbb
push
stos
call
lods
stos
stos
into
push
arpl
fcmovb
sub
inc
lods
call
sub
cld
mov
ljmp
in
and
xchg
push
lods
stos
xchg
xchg
push
xor
test
add
cmp
lds
push
mov
movsb
and
lods
fsubl
sbb
jb
and
mov
mov
pop
ds
pop
scas
sub
xchg
ja
cmp
xchg
std
xor
xchg
cmp
test
and
push
pop
in
jb
sub
cmp
xchg
cmp
mov
fistps
jp
mov
test
das
addr16
sub
mov
in
in
jbe
sti
push
pop
or
push
cmp
shl
clc
adc
push
mov
push
aas
lahf
lret
pushf
out
jge
or
cld
sub
movsb
ljmp
add
inc
adc
arpl
repnz
jmp
imulb
lret
push
xchg
sub
repz
nop
in
sub
push
mov
sub
das
xor
xor
addr16
repnz
inc
mov
mov
push
pop
ret
ret
add
dec
int
pop
push
lds
inc
pop
mov
cmp
mov
pop
pop
mov
mov
adcb
ret
js
sbb
xchg
lahf
ss
mov
mov
sti
data16
sbb
mov
fistl
repz
xchg
cmpb
cmp
or
pop
popa
adc
push
pop
mov
fwait
lods
add
mov
popf
lret
xlat
dec
or
jmp
or
nop
cmp
pusha
cmp
cwtl
test
pop
xchg
fcoml
and
in
in
sbb
stos
xchg
in
dec
mov
divl
push
shll
aad
xchg
test
sbb
pop
shlb
pop
shlb
dec
insb
cmp
addb
aad
cmc
cmpb
inc
add
jge
clc
cmp
loopne
xor
xor
sbb
jns
fld
adc
shll
and
shl
mov
in
cmc
out
ret
push
lcall
mov
mov
and
xor
and
jg
icebp
lret
mov
jns
pushf
mov
mov
push
xchg
ret
pop
out
sub
fsubl
in
sub
rclb
clc
xor
arpl
pop
xchg
aaa
hlt
pop
pop
inc
clc
dec
inc
les
xorl
or
bound
loopne
mov
aam
push
hlt
je
int3
daa
mov
dec
dec
fldcw
adc
fldenv
cld
inc
popf
jmp
pop
rclb
sub
loope,pn
jl
cltd
fwait
pop
jg
or
xchg
bound
scas
xchg
inc
dec
sbb
lahf
shrl
leave
push
cli
and
push
out
loope
pop
adc
pop
add
mov
pop
clc
loope
stc
lcall
sbb
lods
shrb
andl
push
cltd
pop
bound
dec
pmaddwd
sti
and
lahf
xchg
sub
sub
adc
addr16
inc
add
lods
call
or
call
sbb
ljmp
or
push
xchg
loopne
ret
nop
int
mov
xor
pop
mov
les
int3
push
add
fnstcw
push
cmc
xor
pop
aas
lahf
add
stos
into
jmp
push
dec
fimuls
jg
push
or
mov
loope
jae
cmc
frstor
dec
inc
jnp
pop
mov
cmpsw
popf
xchg
mov
nop
jle
mov
shr
xor
mov
movsb
lock
js
jmp
bound
jl
mov
mov
jo
cmp
test
or
stos
mov
sbb
xchg
nop
lahf
enter
pop
adc
or
dec
fisubl
rcll
mov
inc
pop
mov
inc
in
test
and
fcompl
popa
mov
jge
aam
mul
mov
mov
mov
cwtl
scas
data16
imul
pop
in
cmp
mov
xchg
mov
gs
fisubs
sbb
lcall
mov
mov
sub
push
js
into
or
xor
xchg
int
mov
mov
inc
test
pop
nop
mov
sbb
xchg
faddl
and
ss
fs
in
fmull
mov
stc
jae
insl
or
pop
ja
cmp
sahf
in
ds
xchg
cmp
inc
pop
pop
jmp
sub
loop
sub
test
ror
pop
insl
add
fisubrl
pop
rdpmc
add
sar
lods
stc
pop
in
cmp
repz
inc
test
or
dec
cmp
repz
out
dec
ret
and
sbb
pop
fwait
push
ret
inc
aaa
mov
push
push
dec
mov
mov
ss
arpl
lods
jle
push
rclb
ja
fldenv
or
xor
data16
out
sbb
sti
rolb
sbb
push
pop
movswl
adc
lcall
push
and
std
lret
lock
cwtl
mov
jle
stc
outsb
xor
mov
jo
fistps
mov
jg
cmp
cmp
mov
mov
adc
xor
js
cmp
inc
dec
add
out
pop
bnd
pushf
xchg
addr16
fcomip
sahf
xchg
jno
adc
jns
sub
sahf
cli
add
inc
popa
insb
mov
iret
aaa
movl
and
sbb
ret
sbb
shlb
dec
pushf
mov
fcompl
nop
cmpsl
mov
mov
cmp
mov
cmp
and
ja
jl
push
push
mov
or
xchg
mov
outsb
into
lahf
adc
sub
dec
std
mov
mov
in
cmpsb
sbb
int
je
push
test
xchg
push
xchg
shll
test
or
jp
and
cmp
fdivrl
push
mov
adc
out
hlt
fdivrs
pop
sub
xchg
push
scas
cltd
mov
repz
cmpsl
sub
sub
sarb
sbb
mov
int
add
fiadds
inc
cld
inc
std
in
in
and
lret
adc
pop
ret
andl
out
push
notb
gs
xchg
repz
leave
jbe
xchg
push
xchg
aam
xchg
pop
mov
movsb
jne
gs
push
les
outsl
lret
stos
or
test
pop
mov
std
mov
jecxz
push
pushf
mov
aad
mov
dec
outsl
or
sub
sbb
dec
pop
lret
leave
fcoms
loope
daa
jecxz
in
lret
shrl
sub
xchg
daa
insl
test
adc
imulb
addr16
shrb
push
pop
xchg
sahf
or
dec
sbb
repz
pop
mov
out
std
or
fucomi
xor
fisubrs
inc
mov
imul
ljmp
push
push
xchg
dec
test
mov
mov
mov
stos
mov
scas
add
shr
dec
inc
orb
iret
push
in
add
lods
pop
jnp
jg
inc
rorl
mull
and
add
in
xchg
mov
gs
scas
inc
ret
lods
mov
notl
insl
and
jecxz
xor
loop
rorb
aam
movsl
sbb
push
mov
inc
mov
rcl
test
jnp
sub
pushf
dec
add
orb
imul
push
iret
bound
nop
sub
out
push
mov
jg
xchg
and
test
aam
inc
xchg
jae
xchg
sub
pop
inc
cmc
icebp
cmp
test
fs
jno
cmp
sti
pop
cltd
repz
xchg
iret
ret
test
lods
icebp
retw
sbb
mov
sub
or
rclb
js
sub
clc
xchg
movsl
adc
mov
fs
inc
xchg
out
inc
and
inc
adc
cld
xor
jmp
in
testb
adc
adcb
shrb
cmc
dec
mov
adc
adc
push
cld
js
inc
gs
fistps
daa
xor
add
fiadds
cmp
arpl
sbb
mov
out
outsb
cltd
jge
mov
fildll
pop
jo
and
cmc
or
push
test
enter
nop
and
loope
out
adc
pop
jbe
jp
ljmp
mov
mov
and
enter
xchg
inc
mov
lds
mov
fdivrl
arpl
int3
mov
mov
fs
sbb
imul
je
outsl
or
mov
pop
pop
in
aas
mov
stc
punpckldq
jb
lods
rorl
std
imul
in
dec
push
and
jp
in
pop
xchg
pop
cmp
addb
xor
inc
popa
xor
pop
inc
xor
pop
mov
lods
mov
mov
mov
pop
mov
mov
out
subb
daa
mov
inc
lds
adc
push
lret
lret
aad
ret
xchg
mov
aas
cmp
les
mov
aas
sub
out
pop
pop
cmp
popf
mov
out
pop
and
in
dec
lahf
pushf
mov
or
jnp
outsb
fstpt
mov
jbe
out
cmp
js
cwtl
negl
sub
pop
lods
nop
mov
xchg
mov
inc
or
ds
in
mov
and
push
or
lea
jno
fwait
sahf
sbb
andl
pusha
das
imulb
iret
mov
sbb
push
sub
add
and
add
cld
dec
jge
fsts
fs
fistl
adc
jb
fimull
push
insb
lods
cld
dec
out
pushf
subl
or
orb
dec
mov
out
cwtl
cwtl
and
mov
inc
push
sub
jb
fwait
mov
js
je
sub
sbb
push
ja
mov
inc
shlb
sbb
push
inc
or
es
add
mov
mov
lock
jns
roll
mov
mov
ja
adc
mov
popa
stos
int
pop
ss
es
jne
dec
jo
fistpl
xor
movsb
leave
outsb
cs
fwait
into
xor
iret
je
rclb
pusha
sbb
std
sub
or
addr16
lcall
mov
lret
cmp
aam
in
pop
xor
mov
push
das
dec
dec
pop
adc
cmp
pop
adc
bound
sub
mov
push
cld
out
cld
out
hlt
call
je
sub
dec
pushf
test
mov
jne
scas
stos
pop
cld
or
jb
lret
bound
test
sub
cmp
sbb
dec
xor
in
jp
aas
sbb
std
mov
clc
jae
rcl
cwtl
ss
jne
lea
push
mov
clc
test
and
mov
scas
xchg
mov
sbb
sub
pop
jbe
jns
mov
fwait
cmpsl
mov
cmp
xchg
outsl
mov
mov
test
adc
addl
xor
xor
call
xchg
xor
cmp
hlt
int
imulb
mov
inc
daa
aam
push
popf
jns
rcr
mov
in
je
adc
add
adc
sbb
adc
pop
stos
cmp
mov
push
negb
dec
test
adc
jecxz
jae
loopne
mov
es
ret
lret
fnstsw
xchg
sub
ret
xchg
inc
mov
lock
insb
enter
dec
ds
add
imul
icebp
movsb
and
mov
ret
roll
inc
xchg
xchg
sbb
sbb
test
push
adc
xchg
mov
loope
sub
movb
loope
pop
dec
stos
or
xor
cmpb
es
jno
cmp
pop
js
loopne
cmp
add
loopne
pop
push
sub
adc
push
jb
stos
int
pop
push
lock
jb
daa
cmpsl
xor
xchg
aaa
jl
cmp
mov
mov
outsl
and
lods
pcmpeqb
test
and
into
loope
fs
add
sar
add
ss
int3
flds
cmp
xor
push
mov
sub
pop
and
fwait
idiv
rcrb
add
es
jb
repz
rcrl
xchg
adcb
pop
and
cmp
outsl
popa
or
into
in
or
add
xor
adc
shll
stos
stos
cmp
add
inc
subl
xchg
inc
dec
pop
leave
int
jbe
out
add
fnstenv
xchg
adc
popa
insl
fnsave
and
push
dec
jl
dec
mov
lea
xlat
sub
cmp
jb
jno
xchg
ss
adc
flds
mov
mov
ljmp
mov
rorb
ja
decb
add
lahf
sub
cmp
push
push
jl
iret
gs
lods
out
sub
pop
daa
shrl
fstpl
xchg
ficoml
lock
dec
popa
push
push
mov
out
mov
cmpsl
add
aaa
sbb
dec
xchg
xchg
xchg
pushf
xchg
popa
xchg
sbbl
shrl
xchg
adcl
pop
inc
push
cmp
loope
fdivl
repnz
pushf
lods
sbb
pop
jge
int
mov
outsb
sbb
daa
mov
dec
fdivrl
in
mov
int3
xor
xor
in
in
es
int
mulb
loopne
sahf
inc
add
fildll
loop
ret
dec
in
and
push
insl
push
pop
jo
sub
jae
fstp
add
fisttps
mov
icebp
jbe
push
lea
cmpsl
pusha
push
js
testb
rcll
pop
shl
mov
dec
sbb
mov
adc
in
cmpsb
cmp
ret
dec
pop
xor
mov
fadds
adc
cmpsl
sarb
mov
les
pop
or
sub
mov
push
push
cmp
pop
addb
dec
in
outsb
repnz
repz
inc
inc
lret
xlat
ljmp
std
cs
int
mov
loopne
fldcw
mov
or
dec
aad
inc
std
inc
inc
paddusb
sub
test
js
jg
outsb
inc
push
add
xor
mov
sarb
inc
enter
pop
loope
jg
sub
add
sarl
out
mov
sahf
dec
cltd
into
xor
or
pop
imull
dec
dec
test
ret
sbb
and
mov
lcall
pop
jecxz
push
cmp
pop
and
sbb
paddusw
ret
cmpl
fwait
sbb
or
or
popa
sbb
inc
shl
dec
fs
add
pop
lret
ja
jmp
dec
jmp
mov
mov
mov
les
jle
inc
xor
aas
shl
mov
ret
into
nop
insb
xchg
mov
loopne
aad
insb
dec
and
sbb
pop
mov
xor
sbb
push
push
dec
dec
popf
pusha
in
pop
mov
cmp
cmp
lret
loope
cmpsb
cmp
arpl
nop
cmc
or
out
dec
xchg
pop
mov
ss
pop
mov
pop
nop
mov
cwtl
cmpsb
je,pn
mov
lret
hlt
dec
mov
sarl
ret
xchg
js
mov
jns
inc
fiaddl
or
xchg
adc
jp
loope
scas
div
loop
pop
inc
mov
jle
divl
jne
in
or
jns
sti
mov
push
add
jmp
mov
cmp
dec
push
xor
mov
mov
and
adc
mov
loopne
cmc
enter
pop
lret
into
ror
cs
mov
daa
mov
sub
xor
mov
cs
icebp
jg
adc
mov
and
sbb
int
jns
in
pop
aad
mov
sub
jecxz
out
add
jg
jp
push
fdivs
pushf
out
push
mov
jp
mov
in
sbb
sub
dec
inc
adcl
test
xchg
aas
stc
lods
jp
xor
shrb
out
movsb
lahf
jns
xchg
jmp
out
xor
jle
sti
and
pushf
jns
aaa
cli
ffreep
ret
dec
into
scas
jg
aad
and
xor
jo
push
jns
jecxz
cli
lds
mov
xchg
mov
jle
dec
imull
roll
lds
xchg
jmp
inc
add
rorb
out
sbb
es
leave
dec
cmp
mov
ss
cwtl
scas
cmp
and
pop
cli
loope
xchg
and
mov
mov
cmp
adc
inc
test
fcoml
fiaddl
jecxz
mov
pushf
loope
inc
mov
addr16
add
mov
sub
sbb
add
dec
sti
out
sarb
cli
sbb
loop
and
dec
imul
xchg
push
push
or
clc
sbbl
out
jno
adc
test
mov
dec
fstpt
ficomps
es
orl
xchg
jb
iret
jg
pop
mov
or
cli
push
outsl
aas
push
leave
aaa
mov
and
xchg
mov
pop
cmc
mov
in
adc
cld
lock
enter
mov
cmpl
enter
lret
jo
lret
add
push
cmpl
pop
pop
xchg
lcall
cmpsb
loopne
and
orl
mov
add
dec
sbb
pop
ficompl
mov
scas
and
inc
or
mov
jle
lret
push
clc
dec
add
pop
jae
xchg
out
mov
loopne
xor
filds
mov
data16
ljmp
jg
pop
cmp
push
lret
pop
lods
pusha
push
mov
pop
dec
mov
push
cmp
mov
stos
inc
xchg
aaa
jmp
pop
fwait
xlat
lahf
xor
popa
dec
in
cwtl
int
hlt
mov
scas
lcall
mov
xchg
lcall
xor
pushf
sub
jb
scas
xchg
xor
pop
cli
es
or
inc
rorl
jmp
int3
les
ror
clc
cmp
xchg
imul
sub
je
add
imul
leave
std
jb
jl
xor
mov
mov
sahf
pop
cltd
mov
fidivrl
imul
push
test
jmp
inc
cmp
or
movsb
into
in
ret
mov
add
addr16
clc
xchg
lret
xchg
adc
fildl
imul
cli
add
lret
loop
xor
icebp
iret
mov
out
in
std
decb
and
sbb
mov
jno
xchg
adc
daa
pop
mov
mov
sub
mov
ja
stc
inc
mov
bound
jnp
mov
fldcw
mov
push
scas
mov
call
cwtl
push
mov
xchg
dec
jns
xchg
jb
sub
dec
mov
adc
and
mov
push
jl
pop
push
imul
in
jp
repnz
jge
nop
divl
inc
dec
insb
int
cmpsw
pop
pop
mov
xchg
adc
std
cmp
popa
popf
mov
and
jle
gs
xor
sbb
inc
sub
bnd
stos
loope
inc
mov
enter
or
xor
aam
cwtl
lods
fcmovnb
add
stos
bnd
pop
ljmp
call
fbld
or
and
xchg
sbb
ds
or
xchg
fwait
xchg
icebp
dec
hlt
ljmp
cmpsb
jmp
dec
nop
popa
leave
xchg
fists
cld
pusha
mov
jnp
jmp
movb
negb
pop
lcall
xor
cli
lcall
jle
popf
je
xchg
xchg
and
mov
xchg
cli
push
cmp
cmpsl
out
mov
xchg
inc
push
psrad
or
mov
pop
stos
rorb
aaa
sub
cmp
mov
cs
and
jmp
sarb
mov
jbe
inc
and
icebp
add
loop
clc
aad
pop
bound
int3
cmc
js
lret
push
in
inc
test
bound
insb
cwtl
out
or
jo
test
sbb
outsb
test
mov
fwait
add
repz
lods
hlt
xor
lcall
repz
ret
call
xchg
sbb
cmc
or
fsub
push
cltd
mov
push
ss
mov
xlat
pop
adc
xchg
bound
cmp
rcr
or
mov
cmp
std
ja
mov
mov
mov
push
repz
add
inc
sub
es
and
or
or
iret
xor
insb
inc
dec
dec
outsl
in
fucomip
inc
std
inc
arpl
dec
xlat
jle
call
inc
pop
add
mov
mov
cld
xchg
dec
addl
or
push
stos
pop
div
dec
fsubs
into
push
int3
xchg
or
or
out
pusha
cmpsb
shll
mov
scas
out
jge
xor
pop
and
mov
outsl
mov
ss
arpl
mov
cmpsb
sub
divb
inc
aaa
aas
insl
decb
shlb
dec
adc
dec
arpl
xchg
adc
scas
lock
inc
dec
js
jo
push
bound
mov
mov
push
lret
pop
popf
mov
xchg
push
int3
outsb
push
sub
mov
adc
or
pop
push
test
pusha
leave
int
sti
push
pop
insb
mov
xor
popf
loop
stos
pop
sbbl
rorb
mov
dec
lods
push
jo
scas
pop
mov
cmp
icebp
sub
xchg
cltd
in
mov
push
pop
cld
mov
insl
popf
jmp
jmp
jl
push
cld
add
lahf
add
pop
bound
es
cmp
push
or
pop
fwait
xchg
cmpsl
pop
add
lds
insb
mov
icebp
mov
lods
mov
cmp
inc
nop
insl
dec
int3
mov
push
sbb
imul
push
and
jne
ss
and
push
inc
jnp
ficomps
lock
push
rcll
cmp
jle
lds
push
xor
insl
pop
cmpsl
mov
pop
sbb
sbb
inc
pop
aad
nop
fmulp
loop
je
jns
arpl
fwait
test
and
lods
mov
mov
dec
rol
jle
mov
mov
dec
and
imul
pop
cmp
mov
hlt
lock
sub
in
cmp
adc
push
push
mov
lods
cmp
mov
cwtl
mov
xor
stos
inc
fisttps
cmp
and
xchg
insl
adc
vpcmpeqw
add
xchg
jle
int
inc
jne
insb
xchg
inc
arpl
push
mov
jb
lock
pop
jle
dec
mov
in
fstpl
add
xchg
mov
fs
mov
xchg
insl
jle
clc
out
jge
sub
sub
mov
addr16
lret
cmpl
clc
sub
lea
rorl
push
jne
push
jmp
xchg
dec
mov
std
mov
test
lock
loopne
andl
into
into
jo
stos
sbb
xchg
or
add
aas
popf
popa
pop
mov
xchg
gs
fidivs
xlat
xor
test
sub
lret
jns
inc
fidivrl
xor
fldenv
test
into
dec
pusha
xor
add
jno
sbb
xor
pop
imul
cmp
cld
pop
std
adc
pusha
push
dec
lcall
and
adcb
push
jno
adc
fs
xor
and
hlt
or
inc
inc
push
shlb
movsb
inc
repz
push
aad
mov
pop
sub
cli
scas
lods
out
test
xchg
pop
or
adc
les
sub
sbb
call
or
hlt
in
cmp
ljmp
fnstenv
bound
inc
stc
ret
rclb
pop
cs
sub
movsl
imul
pop
rcrb
jmp
adc
sti
xchg
ror
push
lcall
sbbl
and
cmpsl
test
dec
jne
sbb
sub
hlt
dec
outsl
push
push
lods
mov
es
inc
lahf
sahf
int3
adc
mov
xor
add
jo
rorl
mov
int3
xchg
enter
std
fwait
xor
lock
cmc
mov
stos
mov
xor
enter
ffree
andb
or
or
xor
sbb
les
lock
xchg
out
cmp
and
insl
inc
cmpsb
ja
adc
push
int
into
clc
mov
and
cmp
nop
fidivs
mov
pop
jle
rorb
mov
sub
xchg
pop
aaa
adc
cmp
push
mov
and
in
push
movsb
stos
shrb
stos
shl
mov
adc
movsl
mov
pop
jo
insl
data16
mov
das
lds
loopne
pop
push
jmp
fwait
cmc
imul
in
int
jecxz
cld
sub
roll
lock
pop
fs
add
rorb
jmp
sub
lcall
push
xchg
repz
fbld
mov
test
les
and
sub
sub
pop
xor
dec
in
inc
aam
inc
sbb
cs
add
imul
pop
jl
aaa
rorl
nop
clc
fcoml
adc
sbb
sbb
xchg
iret
loopne
fldenv
dec
in
cld
fsts
ljmp
mov
ss
sahf
mov
xchg
outsb
sub
stos
pop
push
fcompl
je
sahf
arpl
adc
push
rorb
in
push
scas
inc
cmovg
shl
xor
das
in
dec
test
mov
adc
jmp
clc
ss
cltd
push
mov
lock
inc
push
inc
roll
ja
add
mov
ret
mov
push
decl
jge
mov
inc
loope
sbb
jmp
mov
adc
popf
ret
mov
int
xor
pop
sbb
and
xor
outsb
je
call
sbb
jmp
xchg
jle
popa
jne
out
add
xor
pop
sub
arpl
cwtl
jmp
fwait
rcl
icebp
ja
dec
scas
dec
cmp
or
lahf
pop
jg
jne
add
stc
dec
je
cmpsb
mov
xchg
inc
mov
test
push
test
jecxz
mov
leave
xor
mov
popf
jns
outsl
ret
add
scas
loopne
mov
hlt
pop
sbbl
movsb
sbb
shrl
mov
xchg
dec
enter
popl
inc
add
mov
push
cs
je
test
xchg
inc
xor
push
inc
rcr
pop
add
popa
xchg
int
pop
sub
into
flds
inc
insl
fisubl
adc
mov
mov
pop
dec
adc
push
sarl
cmp
cmpsl
shrl
les
cmp
popf
les
mov
push
sbb
push
pop
movsl
or
daa
and
mov
sahf
rcll
cmpsl
jp
xor
in
dec
rolb
int3
push
in
pop
nop
cmp
push
aam
xor
adc
mov
loope
xor
lods
xor
push
in
rcll
xchg
mov
stos
std
add
insl
xchg
mov
or
lods
pop
adc
mov
push
mov
push
adc
jbe
and
jb
pop
aad
test
aam
test
add
call
xchg
lret
dec
iret
lea
pusha
in
or
jne
cmpb
movsb
imul
jns
lcall
push
pop
xchg
movsb
outsl
repnz
sti
negb
lock
sub
or
push
pop
inc
jle
iret
pop
jne
pop
xchg
xor
xor
leave
loope
scas
sbb
shlb
pop
jb
adc
push
cmpsb
scas
xchg
push
andl
pop
sub
outsb
adcl
scas
data16
push
xchg
scas
testl
aad
fwait
adc
sbb
or
mov
adc
mov
and
xchg
pop
push
ljmp
dec
daa
loop
adc
pop
test
add
pop
insb
adc
jb
cmp
and
lret
cwtl
arpl
xor
je
and
or
mov
dec
outsl
fwait
add
jnp
int3
push
in
call
xor
lock
fstpt
mov
sub
push
addr16
ret
push
push
popl
sub
and
or
fmull
adc
and
jmp
sbb
add
ficompl
mov
imul
push
andl
or
leave
mov
jl
dec
clc
inc
jmp
mov
sahf
add
pop
pop
cmp
xchg
rol
fadd
into
loop
mov
mov
nop
jno
rorl
rol
adc
inc
and
mov
push
int3
pop
mov
aam
cmp
fsubrl
sti
sti
adc
fsubrl
cltd
gs
add
jp
and
es
xor
fwait
enter
xchg
cmp
pop
pop
adc
dec
into
ret
test
lea
sti
cld
mov
cmp
xor
add
mov
pop
aas
adc
enter
push
cmpsl
xchg
mov
xor
orb
jb
cs
dec
push
fcomp
sub
test
jmp
pop
out
das
sti
test
mov
mov
int3
adc
sub
test
popfw
jo
mov
jp
mov
mov
pop
ffreep
out
add
lods
xor
movsb
cmp
sbb
daa
inc
iret
popl
pop
sub
and
cld
rcrb
out
pushf
or
adc
lods
les
cmp
call
out
pop
imul
or
or
lock
test
insl
push
test
push
stos
cli
mov
imul
das
pop
out
in
int
mov
push
fstps
sub
or
and
adc
xor
cmpsl
in
pop
add
xlat
in
xor
shrb
sub
enter
sub
pushf
subl
out
jb
jle
insb
stc
test
movsb
scas
xchg
inc
inc
push
and
jmp
inc
enter
lds
lcall
cmpsb
jg
aad
mov
mov
out
enter
jne
pop
sub
mov
js
add
sub
sub
or
loop
fcoms
jno
xchg
insl
jo
sub
data16
mov
push
mov
pop
pop
outsb
nop
ret
pusha
mov
push
gs
stos
scas
jns
shlb
cmp
dec
repnz
imul
mov
testb
mov
je
mov
pop
mov
in
push
in
sub
xchg
mov
xchg
dec
sbb
sahf
dec
sahf
mov
xorl
adc
xchg
xchg
xchg
int3
cwtl
pusha
fdivl
movsl
cmpsb
pop
pop
int3
cltd
fidivs
std
jbe
daa
or
cmpsb
sub
fimull
es
pop
sarb
into
insb
xor
cmpsl
lea
push
loopne
push
es
jne
movsl
dec
xor
popa
mov
iret
pop
aas
jno
imul
pop
adc
cmp
jmp
xor
or
dec
test
mov
repz
test
out
jb
xchg
in
push
int3
insl
mov
movsb
push
jg
pop
outsb
cltd
out
lcall
in
mov
cltd
or
js
xchg
sub
xor
cld
lret
mov
movsb
fisubrl
cmc
push
bound
cli
and
fidivs
mov
cwtl
ljmp
sub
push
insb
mov
xlat
cmp
mov
add
push
rclb
insl
adc
lahf
sub
xchg
dec
outsl
mov
loopne
pop
jecxz
call
inc
in
fisttps
jl
push
or
rcrl
and
inc
lock
sub
aas
or
pop
adc
adc
inc
jnp
cs
jne
pop
sub
pop
add
out
xor
mov
mov
enter
lea
sbb
cmp
test
xor
xchg
in
inc
clc
adc
xor
fisttpll
add
or
loopne
mov
xor
inc
notb
ljmp
movsb
push
sbb
into
pop
dec
push
jmp
dec
das
nop
dec
out
cmp
push
lret
pusha
mov
pop
mov
stc
lds
aad
mov
stos
xchg
fstpt
lret
jne
pusha
cmp
ljmp
mov
cmpsb
lret
adc
sub
outsl
aad
ror
and
popf
mov
xor
push
mov
mov
xor
xor
and
aas
add
repz
fimuls
fildl
pop
test
xor
mov
lret
and
mov
mov
mov
pop
sub
ds
aas
dec
sub
inc
xchg
negl
xchg
pop
sbb
jns
int
xchg
xor
jmp
sub
stos
in
jmp
pop
sub
jne
outsb
pusha
mov
xor
mov
sub
loop
sub
out
inc
mov
xor
popf
je
lret
mov
bound
xor
cmp
leave
jno
xor
inc
dec
popl
or
xchg
aas
insb
sbb
xor
adcl
sub
loop
pop
dec
stos
popf
mov
mov
out
push
push
mov
jb
les
sbb
fstps
int
jecxz
or
out
mov
test
popa
ficoml
cmp
pushf
push
or
sbb
sbb
lds
mov
xchg
sbb
mov
leave
sbb
and
outsb
cs
lret
fisubrl
inc
adc
loope
or
cmp
mov
push
out
jecxz
int
cmp
pop
shll
outsb
mov
jne
mov
xor
subb
ret
or
push
cmp
cmc
cmc
pop
adc
dec
test
dec
arpl
mov
add
clc
sbb
pop
cmpsb
hlt
sbb
aad
je
insb
cmpsb
pop
data16
push
push
push
dec
mov
xchg
mov
push
mov
int3
ja
rcll
xchg
jmp
push
jne
insb
fcoml
adc
add
imul
jl
stc
pushf
iret
fdivl
cmc
push
fs
adc
test
push
lret
mov
xchg
fldenv
pop
sub
ret
sbb
mov
adc
pop
push
idivb
iret
adcl
jns
data16
cli
cmp
adc
int3
adc
ds
xchg
les
in
test
push
adc
out
adc
add
xor
clc
cmp
mov
cmp
pop
hlt
mov
inc
jne
popa
lahf
lock
mov
rol
aas
in
repnz
sub
out
popa
jmp
dec
stc
mov
xlat
adc
int
pop
lods
pop
adc
jle
mov
xchg
mov
xchg
add
sub
or
andb
lret
test
cmp
and
jmp
cmp
fidivrs
addr16
sbb
sets
and
repnz
inc
xchg
icebp
jne
ret
loopne
xchg
dec
cmp
cmp
push
xlat
dec
scas
push
scas
cli
fists
out
out
add
jecxz
push
jne
pop
mov
loope
shrl
add
jecxz
add
sub
bndstx
fucom
in
orl
cmp
call
mov
mov
xchg
adc
mov
shrb
pushf
stos
mov
inc
mov
in
ficoml
sub
sub
xchg
outsl
sarb
es
or
dec
add
dec
std
in
inc
scas
push
mov
out
pop
data16
add
pop
mov
mov
sbb
pop
mov
shll
iret
inc
fistps
jnp
movsb
xchg
xor
arpl
les
les
xchg
xchg
xchg
jb
test
xor
jno
outsl
inc
testb
es
je
mov
rcrb
sub
aaa
stc
jp
loopne
lds
mov
out
pop
stos
fistl
in
stc
jbe
sub
xorl
subb
cs
inc
add
mov
xor
test
in
sbb
adc
insb
test
push
mov
jnp
ja
mov
sub
mov
sti
cmpsb
insb
push
movsb
nop
cmp
addr16
popf
lods
xchg
sbb
inc
lahf
or
mov
dec
stc
or
aaa
adc
clc
mov
movsl
mov
adc
aam
push
jle
jg
mov
xchg
jo
push
out
lcall
dec
pop
out
jns
outsl
ss
jnp
mov
mov
mov
cmp
int
rolb
sub
push
pop
pop
jae
lds
lret
xchg
xchg
mov
inc
dec
pop
mov
mov
imul
xchg
add
ja
mov
addb
dec
push
fisttpl
sahf
mov
aam
sarl
lret
ja
inc
clc
pop
test
call
ficompl
dec
outsl
xor
mov
cmc
cmpsl
mov
mov
mov
sub
push
mov
xchg
sub
icebp
pop
mov
cmpsl
loop
jae
pop
lods
cmp
push
insb
mov
sub
test
rol
iret
int3
inc
loopne
cmpsl
dec
nop
rol
jle
and
movsb
mov
movsl
inc
punpckhbw
loop
pop
pop
imul
or
pop
int3
xlat
jae,pn
insb
pop
push
outsl
daa
movsb
inc
lret
mov
lcall
hlt
fmull
or
out
xchg
inc
mov
mov
stos
cmp
ss
xor
test
add
das
ljmp
inc
sub
add
or
out
lods
rol
sbb
cmp
jmp
sbb
push
mov
popa
movsl
xor
lock
sub
lods
and
into
mov
int3
push
jmp
jl
pop
xor
mov
stos
inc
push
shlb
movsb
enter
push
mov
add
ficomps
shrw
scas
sub
mov
out
fnstcw
scas
and
es
adc
ret
jnp
xlat
int3
xlat
pop
sbb
inc
jne
rcrl
mov
test
addb
stos
inc
dec
or
popa
enter
sub
lea
insb
mov
jo
inc
rorl
and
inc
or
in
cmp
loopne
bound
dec
sbb
fidivrl
out
pop
stos
lahf
and
sbb
or
add
aaa
pop
lret
jge
in
in
outsb
pop
rcrb
lahf
cmpb
xor
repz
stc
dec
mov
jno
mov
sub
into
lea
fwait
push
mov
inc
mov
fwait
es
cwtl
jno
pop
movsl
int3
sbb
jae
fbld
mov
mov
jbe
jbe
addr16
push
mov
into
mov
dec
add
xorl
jbe
jle
fdivl
and
or
jae
call
mov
lods
mov
push
lods
inc
adcl
inc
imul
push
xor
fsubrs
sbbl
shrl
lods
popf
test
loope
shr
test
insl
mov
lods
ret
jp
inc
enter
popf
bound
add
mov
div
mov
enter
ds
add
or
cmpsb
mov
sbb
push
or
adc
pop
sub
ret
call
or
push
lret
dec
cs
repnz
stos
mov
pop
aad
pop
jg
insl
loop
mov
xchg
test
adc
int
pop
pop
pop
movsl
xchg
shll
push
mov
ret
mov
pop
push
dec
ljmp
or
jg
push
xchg
aad
out
cmpsb
xchg
insl
push
add
xchg
fdivl
cld
adc
test
repnz
dec
jae
dec
dec
or
dec
cwtl
xor
int3
sbb
add
popf
int3
mov
mov
push
add
xchg
ljmp
stc
cmp
aas
xchg
xor
or
sbb
push
add
inc
or
cmp
jmp
popf
mov
out
call
xchg
or
and
dec
iret
lret
xchg
xchg
insb
mulb
mov
call
cmp
inc
xorl
sti
adc
int
addl
xchg
pop
fwait
xchg
fwait
aam
orl
mov
es
loope
fiadds
lock
push
or
cmpsb
mov
les
testb
out
lahf
xchg
push
flds
fbld
xchg
in
inc
jmp
icebp
orb
push
xor
cwtl
push
mov
push
mov
jle
movsb
dec
pusha
and
mov
adc
mov
in
addb
or
imul
imull
jne
or
cmp
adc
inc
imul
jge
jmp
daa
int3
dec
dec
sbb
sarb
repz
insl
add
cwtl
pusha
and
loopne
imul
push
xrelease
cmp
fldcw
daa
mov
les
out
repnz
lods
je
dec
xchg
jmp
jle
leave
fiaddl
add
imulb
stos
aam
movsb
ss
das
imul
xchg
lods
push
movb
pop
fisttpll
pop
dec
inc
pop
insb
je
call
pop
jbe
sbb
xchg
int
cmp
push
mov
mov
test
sti
test
lods
fst
popf
dec
das
sbbb
jnp
sub
dec
icebp
fnsetpm(287
fucompp
sub
xchg
mov
xchg
mov
adcl
imul
out
test
xor
stos
jp
incl
dec
cmc
jmp
jno
adc
mov
fcmovnbe
shrl
arpl
rclb
imul
mov
mov
rcll
inc
stos
mov
in
sub
stc
push
and
xor
hlt
call
idivb
sub
adc
sub
out
pop
fidivs
xlat
scas
xor
xchg
push
jae
push
push
les
mov
jp
bound
clc
fists
movsb
jg
setle
sbb
adc
adc
rcrl
cmpsb
andb
xor
fisubrs
int
scas
adc
stos
sbb
lcall
int
lods
rol
outsl
add
mov
sbb
scas
test
cmp
or
pop
int
xchg
fwait
divb
sbb
daa
mov
ljmp
inc
and
inc
xchg
jb
push
jg
xlat
gs
scas
jo
sub
adc
add
mov
fdivr
lods
dec
jne
outsb
movsl
sub
test
mov
fstps
mov
and
testb
addr16
xchg
hlt
mov
mov
inc
fcmovnb
hlt
bswap
inc
fsubs
mov
and
xchg
xchg
dec
scas
pop
sub
add
std
push
cld
int
mov
sbb
dec
cmpsb
cmp
add
jb
xchg
test
fmuls
fcoml
jl
icebp
sub
shl
jp
dec
std
sbb
xor
aam
adc
push
leave
mov
mov
scas
repz
push
mov
aas
mov
daa
pushf
push
sbb
cwtl
out
jb
es
test
stc
mov
scas
sub
bnd
and
nop
and
inc
mov
lds
mov
xor
sarb
dec
cmc
out
orb
mov
fcomps
mov
mov
insb
pop
push
movsb
stos
test
mov
sbb
call
mov
notb
rorl
xlat
xchg
push
adc
nop
je
sub
dec
inc
sbb
pop
ja
inc
int
dec
push
xor
pop
mov
xchg
xchg
roll
fcmovu
push
push
js
sub
loopne
ss
xchg
dec
ja
xchg
stc
mov
fs
test
jnp
sbbl
stos
or
pop
or
or
aaa
mov
inc
gs
cmp
ret
and
pop
push
out
mov
test
xchg
pop
add
xchg
xchg
push
push
xor
adcb
push
arpl
cmp
sbb
in
sbb
mov
ss
mov
ficompl
dec
das
cli
lea
addr16
jg
mov
and
mov
lea
add
add
je
inc
and
fwait
mov
mov
movsb
adc
jae
popf
push
jg
fwait
addb
mov
sarb
sbb
stc
add
ret
lret
mov
stc
jno
pop
push
lock
lahf
pushf
dec
mov
clc
dec
aas
js
dec
lods
ficoms
fcoms
test
xlat
gs
mov
pop
ret
outsl
xchg
adc
or
xor
lret
movb
and
lahf
cli
jmp
popa
stos
inc
mov
icebp
movsb
stos
pop
or
push
and
mov
pop
leave
jno
icebp
add
and
dec
das
add
mov
jo
pop
xor
cmp
scas
fidivrl
fdivrl
xor
stc
push
mov
jae
sahf
fadd
adc
movl
pop
arpl
mov
lahf
mov
call
repz
cli
arpl
xor
pop
notb
pop
jmp
sbb
xor
cmc
inc
or
xchg
mov
cltd
add
mov
cmc
rorb
inc
mov
pop
mov
dec
mov
push
out
xchg
inc
loope
stc
repnz
xorb
mov
mov
jmp
cltd
scas
lret
adc
sarb
or
and
sahf
rorb
dec
data16
pop
enter
push
int3
mov
jle
xor
mov
xor
and
push
popf
ret
je
arpl
push
jae
dec
je
imul
repnz
outsb
test
push
mov
fs
sub
ret
jmp
sub
lds
mov
repnz
sbb
nop
fcomps
dec
call
nop
or
jmp
fbstp
and
xchg
test
adc
out
ret
jmp
pop
mov
mov
ds
iret
jno
stc
js
mov
push
inc
push
movsb
fimuls
push
and
xchg
stos
mov
xor
insl
jo
xchg
enter
out
sbb
adc
mov
xchg
mov
in
inc
cs
loopne
or
js
pop
loope
inc
or
scas
cmpsb
adc
aam
sbb
cmp
ds
mov
pop
mulb
pop
add
jnp
ret
scas
adc
sets
sarl
fisttps
add
mov
sar
bound
mov
nop
fs
popf
jo
sub
and
addl
sti
lods
cwtl
hlt
sti
shr
mov
sbb
aaa
lds
pop
jb
sbb
shr
gs
jl
jnp
fcompl
jmp
mov
dec
nop
push
mov
bound
sub
add
andb
shlb
maxps
ds
out
ds
mov
out
adc
mov
push
dec
out
xchg
sub
lock
movsl
jnp
inc
insb
cmpsb
sti
outsl
out
jl
jb
aad
and
inc
inc
int3
loop
das
shlb
lret
int
cwtl
les
mov
pop
sarl
test
stc
pop
cwtl
push
pop
add
iret
mov
leave
aad
arpl
xor
stc
and
out
mov
adc
into
xchg
inc
cmp
xchg
mov
jl
cmp
xor
push
mov
rolb
jbe
mov
subb
out
orl
in
xlat
and
or
lret
jbe
xchg
jle
inc
mov
pop
jbe
cmpsl
adc
sub
jl
add
inc
test
mov
adc
or
sbb
pop
ljmp
fstpl
cmp
dec
mov
cmpsl
lock
test
pop
test
fmull
mov
add
inc
add
push
xor
ud2
mov
mov
cmp
pop
mov
sub
jae
call
push
cmc
ja
jnp
lock
jnp
mov
mov
add
insl
loopne
pop
ljmp
pop
pop
xchg
xchg
leave
jmp
pop
test
mov
adc
xchg
cmp
and
pop
mov
or
push
inc
ja
mov
jp
sar
jnp
add
pop
cmp
test
gs
cli
dec
mov
sarb
out
es
shlb
pushf
lahf
inc
and
ljmp
xchg
dec
and
adc
bound
lahf
or
cmp
push
xchg
or
lcall
inc
or
cltd
inc
jns
lods
stos
insl
insb
jb
adc
repz
int3
cld
xor
push
ljmp
or
xchg
imul
test
push
mov
dec
and
fwait
pop
fs
add
cmp
push
and
pop
ret
out
xchg
and
jecxz
push
inc
mov
in
fmuls
popf
lahf
pop
test
daa
xlat
sub
movsb
add
adc
lea
cmp
jle
int3
mov
mov
lods
jmp
icebp
shll
dec
shl
cmp
mov
cld
xlat
jmp
or
mov
push
mov
loope
sbbl
cmpsl
or
popa
jle
repnz
xor
in
xor
repnz
in
es
lods
stos
outsb
scas
je
sbb
inc
test
mov
sbb
test
popa
push
adc
or
ja
addb
lret
inc
hlt
insl
and
add
xchg
sbb
iret
aas
xchg
inc
sbb
mov
shlb
stos
mov
lcall
or
and
decb
arpl
les
fwait
add
jmp
inc
cmp
or
sar
repz
cmp
dec
dec
outsb
push
testl
cmpsb
xor
jnp
mov
ret
incl
cltd
jecxz
addr16
xor
stc
lret
ret
xor
pop
dec
adc
jg
mov
das
or
nop
test
shrl
cmc
xchg
lea
adc
and
cmp
jo
inc
imul
and
adc
insl
mov
sub
jle
pop
push
clc
push
loop
jecxz
lahf
inc
add
addr16
mov
xchg
pop
lea
pop
mov
popa
mov
pusha
test
lret
cmc
hlt
push
test
jns
add
test
adc
out
cmp
mov
fdiv
mov
sub
dec
mov
push
loop
cmp
popf
mov
sbb
dec
adc
lds
daa
in
fmuls
lds
nop
jp
xchg
cmpsl
adc
test
scas
push
dec
mov
in
lods
dec
adc
pop
iret
rcl
shll
mov
movsb
psubusb
sub
andb
fcmovu
or
stos
push
xchg
xchg
fstpl
mov
sbb
out
add
xchg
pop
sub
mov
cmp
ja
stos
popl
mov
pop
dec
inc
sahf
imul
mov
fbld
mov
aam
add
insb
xchg
jl
mulb
sahf
stos
xor
and
adc
stos
pop
test
shl
cmp
movsb
lods
adc
adc
je
fstl
outsl
add
pop
sub
mov
pop
push
fidivs
jno
add
adc
add
popf
movd
int3
clc
push
shll
fistpll
inc
mov
fs
cs
iret
jle
push
sbb
mov
xor
mulb
mov
fmuls
rorb
jnp
cmp
add
fucom
mov
leave
push
outsl
cmc
jnp
xor
and
xor
jmp
nop
imul
jg
imul
pop
sub
push
fs
xchg
cmpsl
shr
je
mov
pop
repz
xor
sbb
std
cli
xor
mov
mov
jmp
popf
in
mov
push
jecxz
mov
jge
movsl
mov
pop
push
pop
outsl
insl
cmp
bound
mov
xor
or
stos
cmpsl
ret
dec
adc
and
daa
mov
adc
and
cmpsl
int3
jp
adc
inc
je
push
insb
add
cmp
pop
dec
pop
sbbl
cmp
pop
popa
jno
adc
lock
add
mul
outsl
mov
ret
jno
adc
enter
mov
fmuls
mov
scas
cmpsb
outsb
mov
repz
dec
sbb
std
add
ret
mov
insl
repnz
and
call
fildl
add
inc
mov
pushf
or
mov
les
out
jmp
mov
push
mov
div
and
and
rclb
mull
xlat
mov
stc
pop
cmpsb
or
addr16
mov
in
adc
or
decl
xchg
push
arpl
movsb
sub
out
scas
shlw
loop
fwait
jne
cmpl
mov
pop
enter
clc
aam
jl
rcl
mov
jl
cld
xor
cltd
jbe
add
xor
js
xchg
or
xchg
cmpsl
cmp
popa
movsb
lds
in
rcrb
scas
jl
loope
inc
jmp
scas
jb
lcall
mov
cmp
sub
jne
jge
add
arpl
push
movsb
negl
jnp
dec
sub
xchg
daa
pop
nop
rclb
dec
or
out
dec
daa
addr16
loope
shrl
jnp
aaa
dec
addr16
dec
cmp
push
aam
pop
fwait
sbb
dec
sarb
sti
hlt
xchg
stc
xchg
lret
cmp
mov
xor
fnstcw
cltd
sub
jp
iret
xorl
js
data16
aam
test
ds
fdiv
lret
pop
mov
sahf
mov
sub
inc
pop
xchg
sbb
loop
dec
test
sbb
xchg
jb
aas
int
pop
or
aad
fcom
repz
inc
mov
loop
outsl
cmpsl
lods
pop
fcmovnb
mov
xchg
mov
adc
and
cmp
xchg
cmpsl
xchg
inc
push
or
mov
ret
xor
outsb
push
pushf
movsb
dec
sbb
ret
or
mov
sti
xchg
and
fsubs
xor
loopne
sub
jecxz
in
fdivs
pop
mov
popa
add
daa
add
aas
dec
adc
popf
xor
mov
jmp
pop
sub
push
mov
inc
inc
in
stc
dec
fstpt
sbb
cli
lret
dec
out
decb
and
xor
cs
lret
jmp
pop
clc
jp
js
cmc
push
sub
cld
out
sub
jno
fwait
jbe
in
inc
out
je
inc
xor
jb
ror
cmp
shrb
bound
jecxz
jne
or
mov
iret
dec
enter
shr
jnp
icebp
daa
mov
adc
cmpsb
and
sbb
jle
mov
sbb
adc
adc
loope
jo
lods
inc
mov
mov
call
adc
int3
jge
mov
pushf
dec
test
fsubp
sbb
add
sbbb
into
sub
hlt
sbb
mov
xchg
sub
test
jge
shl
cwtl
mov
push
jmp
push
push
mov
loop
xchg
js
jno
add
movaps
ret
pushf
inc
dec
cmpsl
imul
or
push
inc
sbb
push
ret
dec
clc
jge
faddl
xor
movsb
pop
xor
push
inc
mov
bswap
mov
push
ficoms
or
cmp
stc
out
jle
lea
outsb
and
enter
pop
sbb
or
jg
shrl
mov
mov
cld
cmp
sbb
push
inc
add
jne
movsb
icebp
loopne
test
push
out
push
jnp
sbbb
sub
xor
lret
divl
popa
in
push
xchg
xchg
sbb
lods
cld
je
imull
mov
add
aam
fisubrs
xorb
out
ficomps
xchg
ja
push
cmpb
test
imul
out
jp
add
ret
test
and
jle
jecxz
xor
or
adc
rolb
aaa
cmp
push
xchg
mov
dec
ss
outsb
mov
aad
push
mov
pop
int
add
lret
jp
fisttpl
mov
xor
mov
stos
in
scas
jle
sbb
cbtw
outsb
lret
cld
xchg
subl
xchg
mov
movzbl
add
imul
mov
dec
adc
adc
jne
mov
enter
mov
clc
stc
insl
cmpsl
fiadds
xor
pop
push
push
fwait
adc
ja
sbbl
fnstenv
mov
shrb
xchg
mov
ss
lcall
arpl
xor
jbe
jbe
pop
aad
sbb
mov
mov
add
xchg
pop
int3
ja
aam
pop
or
pusha
jl
jne
in
fists
call
sbb
and
cmc
ljmp
lcall
mov
dec
mov
xor
mov
popa
pop
dec
inc
movsb
mov
shlb
pushf
sbb
add
div
and
rclb
sbb
mov
lods
ja
push
push
pushf
push
into
ja
sbb
inc
sub
xchg
lahf
ret
outsl
fidivrs
add
mov
in
ret
xor
mov
lret
sbb
sahf
stos
in
sbb
lods
iret
cltd
adc
maxps
js
and
fst
add
jns
dec
cmpsb
data16
jg
pop
or
xchg
hlt
mov
ss
les
pop
mov
adc
sub
xchg
jb
mov
add
or
scas
xchg
repz
mov
jae
popf
push
lods
orl
fsts
adc
test
movsl
popf
stos
cmc
jmp
xchg
pop
jg
and
icebp
clc
popa
jae
lcall
adc
stos
orl
fcmovne
or
lea
dec
jg
push
cmp
out
test
push
in
cmp
dec
add
sbb
hlt
repz
insl
dec
aam
pop
push
adc
cmp
pcmpgtd
scas
push
sahf
push
iret
dec
add
pop
jb
cmp
lods
rclb
adc
das
mov
in
rcrb
push
xor
jo
sub
subl
adc
test
js
mov
mov
fs
ljmp
inc
addr16
xor
scas
and
jne
and
xor
push
xchg
xor
push
jl
dec
popa
enter
push
add
xchg
ljmp
mov
cs
mov
dec
add
lcall
aad
test
jmp
shlb
add
jge
popf
test
lahf
adc
imul
out
imul
or
add
xchg
pusha
inc
pop
mov
roll
pop
mov
insb
push
add
call
xchg
mov
orb
cmp
push
rcll
inc
popa
cmpsb
sbb
mov
cmpsl
push
mov
cmp
cmp
into
js
lcall
push
xchg
fldcw
rep
inc
roll
daa
sub
aam
or
jae
xor
clc
dec
fs
mov
es
filds
out
fldenv
gs
stos
stos
inc
adc
push
push
ret
daa
add
add
enter
push
ljmp
mov
outsb
add
add
mov
inc
mov
test
xchg
jo
sti
jne
dec
int
dec
jae
inc
sbb
mov
and
lds
pop
xor
mov
imul
test
cmpsb
scas
jge
push
adcb
cwtl
sbb
add
jmp
ror
jmp
mov
mov
fsubrs
cmc
cmpb
movsb
sub
js
jle
out
xchg
incb
cmpsl
pop
cmpsl
jns
int
push
enter
mov
mov
push
xchg
jmp
icebp
xchg
test
push
insb
loop
jne
or
std
es
or
pop
mov
mov
repnz
mov
dec
push
mov
lret
jo
add
add
sahf
mov
xor
push
mov
jno
or
imul
stos
push
repnz
addr16
pop
rorl
repnz
add
fsubl
mov
repz
inc
xor
add
push
and
into
fisubrl
js
pop
sbb
not
push
mov
test
lret
xchg
adc
lods
call
iret
jnp
ljmp
or
mov
push
mov
sbb
jne
jmp
dec
or
jne
xlat
jb
cmp
and
stos
push
pop
pushf
xor
pop
cmpsl
mov
call
dec
jnp
hlt
movsl
bound
out
xor
in
rorb
or
lret
icebp
scas
xchg
mov
dec
std
mov
gs
cmp
sbb
sbb
icebp
jl
stc
xchg
push
sub
mov
cmp
pop
mov
and
loop
mov
mov
or
mov
mov
sbbl
int3
in
cltd
mov
xor
mov
out
idivl
jg
jne
xchg
shrl
fisubrs
jb
iret
dec
adc
notb
icebp
aaa
addr16
jo
scas
jne
jl
mov
lock
cli
push
js
push
aam
xor
aas
clc
int3
mov
stos
pop
mov
je
push
mov
mov
lret
sbb
mov
dec
push
and
icebp
add
or
icebp
inc
mov
test
adc
sarl
pop
fmull
xchg
ja
js
mov
mov
mov
adc
std
movsl
stc
sub
fwait
insb
inc
sub
xor
pop
aaa
les
mov
pop
into
loop
cmpl
push
push
int3
mov
push
in
jne
sarb
pushf
mov
cmc
pop
int
popa
mov
adc
xor
mov
outsl
jae
push
ds
repz
repnz
lcall
xor
push
je
xor
hlt
adc
xor
lahf
movsb
or
sbb
lods
dec
icebp
adc
xchg
or
jnp
inc
bsf
dec
inc
push
std
mov
and
push
gs
pop
aad
cmc
testl
ret
test
add
shrl
cwtl
fstl
out
dec
jb
lock
dec
pop
jle
lds
sbb
adc
jl
mov
lods
daa
xor
lar
and
sbb
repz
outsl
ret
dec
pushf
daa
xchg
into
ja
xchg
jo
in
xor
cmp
fadd
into
mov
sub
dec
mov
inc
pop
jne
insb
aad
cld
push
lods
in
xchg
sbb
jmp
dec
inc
push
mov
out
mov
cmp
add
xchg
sahf
enter
dec
cmpsb
inc
repz
pop
sarb
add
icebp
popa
and
ljmp
pop
inc
mov
daa
xlat
arpl
sbb
movb
repnz
inc
ja
stos
test
lods
rorl
out
adc
xorl
and
addr16
or
call
cmp
aas
insb
mov
icebp
fimull
lods
stc
cltd
and
jns
rorl
xchg
pop
arpl
js
mov
mov
shr
js
jge
xchg
sbb
xor
rclb
or
lods
push
sbb
outsb
fdivrl
repnz
stc
call
aaa
and
cmp
sub
xor
scas
mov
repnz
movl
mov
dec
cwtl
loopne
cmp
ficoml
add
loopne
sbb
adc
sbb
xlat
xlat
aaa
outsl
cmp
jecxz
inc
in
push
xor
rcl
adcl
push
jbe
cmp
stc
mov
fwait
jg
cltd
aad
sub
and
mov
inc
mov
roll
bound
cmc
jmp
mov
enter
scas
in
cmp
lock
jmp
push
scas
leave
dec
aaa
sub
fwait
cmp
xchg
mov
mov
leave
cmp
aam
nop
test
adcb
mov
mov
xchg
dec
out
fdiv
fwait
adc
ljmp
jb
adc
mov
into
push
or
dec
sub
lret
les
aam
enter
out
dec
sarb
mov
fidivl
xor
lahf
dec
stos
push
push
sbb
lret
jo
sarl
into
sub
aad
mov
pop
gs
xchg
push
testb
mov
faddl
xchg
pop
pop
xor
shrl
int3
outsb
push
mov
cld
and
jno
xchg
push
fucomip
add
mov
repnz
arpl
jmp
push
fwait
pop
mov
and
je
and
mov
push
out
jbe
mov
dec
xchg
int
in
adc
pop
adc
push
inc
in
mov
rcrl
push
or
add
and
mov
imul
sub
jmp
jl
and
stos
movsl
jp
pcmpgtb
test
jns
add
loopne
or
jmp
inc
sub
in
movsb
dec
sbb
and
xor
addr16
jp
orb
mov
aaa
jns
push
into
imul
mov
jb
out
sarl
adc
lcall
int3
lods
sub
sbb
inc
mov
rorl
xchg
jnp
sub
fcmove
ja
shrb
sub
lock
sti
xor
fucomp
add
mov
out
mov
cwtl
or
pop
insb
mov
pop
scas
mov
pop
cltd
add
sqrtps
cmp
inc
popf
or
fildl
pop
repz
pop
cmc
inc
fimull
xlat
nop
xchg
fisubs
xor
pushf
fwait
scas
jp
sub
jl
add
xchg
add
add
mov
mov
adc
mov
adc
jmp
jl
lea
mov
leave
xchg
jl
ret
jno
dec
insl
jae
call
xchg
std
jl
push
mov
mov
fildl
clc
dec
shll
call
fistps
cmpsl
xlat
rcrb
xchg
jae
icebp
ja
lcall
jns
stos
mov
mov
pop
repz
mov
or
adc
scas
dec
stos
or
movsb
push
hlt
mov
add
pop
into
xchg
int
pushf
scas
adc
xor
adc
mov
inc
cmp
jns
or
or
jge
dec
xchg
pushf
mov
jns
and
jnp
aaa
xchg
add
sarl
daa
inc
aad
pop
lcall
sbb
add
and
jbe
sbb
into
cs
jg
aam
aam
stos
div
out
fcmovnb
rcrb
cmpsb
xor
xchg
jp
rolb
adc
push
inc
add
mov
popa
add
lcall
xor
sbb
inc
out
dec
pop
push
mov
cmp
clc
mov
mov
loop
jle
push
cmp
xchg
adc
dec
xor
shr
or
insl
jno
lods
mov
jmp
or
dec
or
mov
add
repz
into
push
and
fistps
pushf
clc
jbe
cmp
mov
inc
rcrb
shl
sbb
push
ret
sub
lret
jo
dec
call
dec
xor
in
xorl
js
inc
jl
jmp
pop
mov
outsl
xchg
sub
clc
pop
cs
xchg
inc
jecxz
mov
lea
cld
dec
dec
adcl
arpl
xchg
jmp
or
jae
xchg
push
stos
dec
cld
loope
das
mov
mov
inc
add
in
xor
mov
icebp
pushf
push
push
sub
imul
movsl
fwait
ret
shrl
push
mov
and
pop
pusha
in
addl
mov
xchg
call
outsl
cwtl
pusha
sub
incb
sbb
scas
aas
pop
cmpb
dec
in
sti
lock
xor
mov
popf
or
xor
jo
adc
add
popf
mov
and
jecxz
xor
addr16
xchg
push
xchg
mov
arpl
mov
fcoml
jo
in
iret
lcall
mov
sub
in
pop
data16
bound
int3
sbb
shl
int
test
cli
pushf
or
xchg
popf
ret
sub
rorb
mov
inc
mov
sbb
and
and
cld
roll
pop
xchg
jecxz
out
mov
add
test
dec
fcom
stc
call
jb
test
cmpb
mov
lods
pop
test
or
sbb
or
shlb
ss
mov
jp
lods
psubsw
rclb
mov
arpl
or
fimuls
mov
jecxz
es
sbb
sti
incb
lea
push
lods
cld
int3
cmc
and
mov
push
push
and
inc
dec
inc
addb
xor
std
ret
sub
and
sbb
cmp
lds
adc
lcall
int
shlb
mov
movsl
sbb
fsts
xchg
add
out
adc
inc
sbb
add
call
in
jl
add
jge
movsl
lods
mov
inc
dec
mov
es
inc
loopne
dec
or
gs
insl
outsl
xor
out
inc
xchg
je
inc
out
mov
sub
je
jns
aas
pop
or
xor
loop
inc
xor
adc
jp
mov
xchg
std
inc
and
dec
stos
das
cli
xchg
push
sub
cltd
jo
repnz
fs
or
xchg
shrb
and
fs
push
sbb
out
testb
add
fldcw
into
sub
shll
sti
and
fwait
and
leave
mov
in
mov
adc
dec
push
push
idivl
mov
leave
cmpsl
push
sub
dec
push
adc
and
pop
and
mov
push
push
cmp
adcb
subl
and
cmp
dec
cltd
or
insb
mov
jle
add
out
adc
xchg
ljmp
push
or
cmp
in
mov
dec
lds
push
repnz
dec
mov
icebp
popf
adc
sahf
dec
mov
mov
inc
repz
add
test
pop
in
enter
xchg
outsb
cmc
js
repnz
push
movsb
and
adc
push
clc
sub
cld
pop
sub
push
jl
iret
dec
popa
jle
arpl
ret
mov
jno
xchg
xor
pand
inc
inc
xor
mov
or
xchg
pop
in
inc
dec
fisttpll
inc
in
rcll
out
shl
jge
stos
test
in
in
pop
data16
inc
jmp
jmp
rolb
mov
sti
xchg
cmp
jne
roll
popf
pop
int3
cmovno
push
xchg
rcr
nop
mov
bound
push
in
push
xor
movl
adc
push
cmp
hlt
push
in
cld
jmp
leave
mov
out
add
sbb
lock
cmpsl
xor
repnz
popa
add
cmpsb
dec
aad
and
push
fsts
pop
jmp
mov
xor
outsl
inc
je
sbb
pop
xchg
sub
cltd
es
mov
dec
aam
dec
daa
fldt
and
out
lods
dec
and
aas
leave
xchg
movsl
sub
faddp
rorl
push
adc
aaa
mov
sub
sub
mov
in
mov
cs
int
lods
push
push
scas
push
or
leave
cmpsb
outsb
xor
add
ds
leave
sti
adc
jge
cmpsb
adc
or
flds
out
xor
jmp
mov
ds
mov
stos
push
and
xor
aas
mov
push
push
xor
or
lea
and
cmp
mov
sub
imul
xchg
decl
pop
push
mov
scas
inc
pop
in
jecxz
pop
push
and
mov
outsl
and
out
add
sub
lea
repz
andl
es
push
push
js
das
mov
adc
mov
cld
mov
in
shrb
xorb
jae
rorl
iret
lods
les
xchg
cmp
iret
push
and
pop
fidivrs
mov
or
push
sbb
cmp
imul
ret
es
and
sbb
xor
stos
jmp
mov
push
lret
push
jae
in
mov
pop
and
pop
mov
mov
cmp
add
enter
dec
inc
scas
inc
aam
and
or
add
out
je
or
cmp
or
lahf
sub
fsubrp
dec
xchg
xchg
out
sbb
cmp
dec
mov
and
hlt
mov
mov
scas
cmp
mov
sub
jae
mov
or
cwtl
xor
or
sbb
adc
rolb
out
bound
jg
hlt
pop
pop
out
mov
das
pusha
mov
and
pop
pop
push
inc
add
cli
test
in
and
push
jbe
ret
fsubl
es
mov
cs
fidivl
cmp
push
rcrl
adc
pshufw
call
pop
mov
jecxz
fidivrs
outsb
mov
ret
jbe
xchg
jno
es
push
jne
call
iret
mov
js
insl
shl
mov
imul
sbb
pop
out
mov
or
mov
test
inc
cmp
mov
mov
pop
test
mov
repz
sahf
inc
daa
and
sub
xchg
add
pushf
dec
xor
sub
xor
repnz
shl
rep
ja
jmp
cwtl
int3
pop
cmp
or
hlt
aad
call
pop
push
inc
and
adc
adc
cmpsb
cli
je
hlt
repnz
negl
fstpt
mov
jbe
lret
daa
dec
in
addr16
jmp
lods
repz
shrb
fsubrs
jb
mov
or
leave
daa
in
rcrl
shlb
test
fcmove
sarl
dec
cmp
cmp
sti
sub
jns
cwtl
ret
and
rolb
iret
xchg
inc
bound
xor
insl
stc
pop
aam
popf
push
mov
mov
loopne
fsts
cmc
add
push
popa
nop
mov
dec
push
jmp
jae
js
or
adc
in
inc
xor
dec
negb
and
adc
jo
sti
aas
adc
push
mov
push
dec
cmpsb
ja
pushf
rorl
hlt
mov
xchg
fcmove
shrb
iretw
mov
mov
mov
add
outsl
and
cltd
inc
or
and
dec
je
pop
stc
int3
jae
xchg
xor
push
jp
mov
jg
jbe
inc
ret
movsl
xor
xor
loopne
cmp
dec
sbb
jno
cmpsl
xchg
fisubl
lcall
and
das
scas
cmp
je
lret
and
icebp
mov
or
or
push
outsb
adc
mov
or
lfs
shl
sarl
xor
jmp
scas
xor
push
push
mov
mov
and
int
popa
inc
je
sub
xchg
lock
pop
xchg
mov
es
rolb
sarb
dec
mov
or
out
jne
lcall
adc
inc
popl
hlt
push
mov
push
repnz
push
call
ds
fwait
mov
fidivrs
push
out
icebp
dec
enter
mov
or
push
stos
ja
sbbb
pop
adc
mov
popf
pop
scas
scas
dec
xchg
subb
enter
pop
pop
jae
mov
xor
rcrl
std
std
arpl
cmpsb
lods
int3
aas
dec
pop
shrb
dec
mov
inc
lods
inc
enter
jmp
dec
pop
fwait
stos
ret
cli
add
jle
arpl
push
rcrb
add
repnz
fnstsw
pop
dec
movsl
adc
push
movsb
sub
mov
inc
pop
jns
shrb
movsb
sahf
movsb
pop
popa
fldcw
fistpll
mov
cmp
mov
call
push
aad
mov
lcall
rol
dec
lret
xchg
or
cwtl
imulb
bound
inc
pop
in
int
pop
sbb
aas
push
lret
ss
ja
pusha
ss
into
jg
fs
adc
dec
das
add
sub
addr16
jbe
call
mov
cmp
sub
std
in
push
sub
outsl
cli
xor
movsb
fcoms
bound
jb
pop
imul
cmp
push
mov
and
stos
sbb
lea
sub
fistl
loope
sahf
mov
push
shr
into
test
ljmp
sbb
mov
inc
jno
fnstenv
mov
or
js
mov
mov
mov
fisubrl
xchg
jno
jb
divl
cmp
cmp
loope
clc
shll
jecxz
insb
inc
out
and
mov
inc
xor
stos
or
sbb
push
mov
icebp
push
iret
loopne
int3
push
cmp
sbb
xchg
sbb
out
nop
out
cmp
leave
pop
pop
fists
or
or
pop
icebp
pop
sub
test
xchg
in
loopne
adc
adc
sbb
rclb
insl
mov
mov
inc
sub
dec
test
insl
lret
jecxz
jo
aas
inc
shlb
inc
in
xchg
push
mov
dec
pushf
adc
mov
lods
lods
bound
dec
pusha
rcll
leave
sub
add
daa
sbb
lods
daa
ds
push
loop
repz
sahf
mov
mov
pop
test
shll
in
insl
test
addr16
push
mov
add
mov
loop
cld
mov
sarb
pusha
cmp
mov
popa
xchg
mov
sahf
jp
shrl
dec
push
jmp
jnp
mov
rorl
sbb
test
sbb
fsts
jmp
pop
lock
add
xchg
andl
cld
stos
rolb
mov
jecxz
sub
shrl
call
mov
mov
add
or
and
cmp
adc
mov
dec
xchg
out
jmp
push
push
push
inc
mov
jmp
test
aas
js
sbb
mov
repz
jns
out
rcrl
test
stc
pop
insl
mov
rcl
and
fwait
push
and
cmp
outsb
add
adc
sbb
push
out
cld
ret
inc
cmp
test
push
jmp
scas
je
mov
shlb
cmpsb
shlb
addl
mov
stos
mov
shlb
gs
gs
xchg
push
shlb
lock
xchg
pop
cmp
sub
mov
jle
iret
mov
push
les
lock
movsl
cli
sub
je
fwait
js
fcoms
out
jns
xor
xor
movsl
in
fstpl
push
xor
shr
jo
pop
shl
inc
out
sbb
jmp
xchg
mov
call
dec
repz
loope
in
mov
pop
and
mov
mov
jae
cmpb
mov
adc
push
and
mov
call
mov
dec
ds
test
jne
xchg
xor
ds
mov
mov
mov
jno
nop
cli
stos
cmpsb
das
and
pop
stc
sbb
xlat
or
push
mov
lods
mov
and
sbb
cmc
mov
ret
jnp
sbb
in
inc
lret
mov
cmp
inc
imul
mov
add
cmp
xchg
add
loope
insl
jnp
pop
mov
icebp
or
int3
in
mov
sub
jbe
xor
outsl
dec
xchg
jae
test
sub
arpl
adc
add
stos
roll
mov
pusha
cmp
inc
jno
add
fisttps
lahf
fwait
mov
mov
adc
cmp
or
mov
divb
sbb
push
pop
jle
inc
leave
mov
loopne
imul
jae
mov
xor
cltd
push
into
test
pop
jl
push
rorb
cmpb
push
popf
cs
fisubl
cld
xor
pop
cmp
xchg
mov
lcall
test
fsubrs
pop
dec
xlat
lret
and
pop
mov
cmp
jmp
lods
sub
cmpsl
or
xor
les
mov
jbe
jnp
addr16
pushl
sbb
sahf
push
push
insl
jmp
lret
roll
xor
xchg
adcl
mov
sbb
fcoml
dec
adc
in
pop
loope
gs
sub
and
pusha
and
push
push
add
sbb
dec
aas
in
mov
and
stos
jecxz
aaa
sbbl
add
or
mull
lret
lds
sbb
and
jo
hlt
cmp
pop
in
or
loop
int3
sub
pop
cmp
clc
das
cmp
imul
test
addl
repz
je
repz
jp
movsb
stc
push
cmp
dec
and
mov
xchg
stos
push
jns
mov
push
bound
shrb
je
jle
add
nop
sbbl
inc
fdiv
sub
xchg
adc
mov
jecxz
ret
mov
xchg
stc
xchg
cmp
inc
xchg
jmp
stos
lcall
mov
mov
xor
lods
adc
xchg
shlb
adc
insb
fldl
cmpsl
mov
push
les
ljmp
adc
adc
scas
pop
pusha
scas
pop
or
arpl
inc
adc
sbb
call
pusha
cmp
jg
cmpsl
iret
fmuls
pop
mov
rcl
mov
xor
adc
scas
adc
push
das
pop
movsb
sub
enter
xor
rorl
lods
iret
adc
rcl
push
jl
sub
ficoms
jno
and
in
mov
and
push
leave
cwtl
cld
or
mov
xchg
or
in
je
mov
mov
or
lock
sub
les
pop
cmpl
pusha
sarl
in
fs
in
es
cmp
or
mov
dec
pop
inc
dec
aas
xor
push
movsl
loop
lods
out
sbb
dec
mov
inc
push
xchg
mov
daa
jle
and
in
icebp
dec
outsl
sub
aad
aam
jmp
inc
mov
lea
dec
adc
in
mov
xchg
in
dec
movsb
dec
mov
jmp
hlt
sbb
sub
sbb
sub
pop
push
pop
push
mov
jmp
fwait
push
push
cwtl
xor
dec
andl
jle
pop
cmp
ret
movsl
xor
xor
mov
cmp
or
push
and
in
jmp
mov
lds
jmp
cli
cmp
lods
xor
cmc
imul
push
or
mov
stc
xor
out
in
inc
frstor
addr16
mov
push
ja
sbb
decb
bound
rclb
mov
daa
rcll
mov
inc
add
fnsave
faddl
or
lods
or
out
gs
jo
inc
shll
fsubrl
jl
std
jno
dec
daa
adc
jp
mov
movsl
xor
pop
push
scas
jbe
cltd
xchg
mov
mov
es
inc
push
push
jae
lcall
adc
sub
sti
icebp
mov
fcompl
pushf
sub
std
sahf
xchg
adc
xor
ret
mov
addr16
divb
adc
add
dec
jno
mov
xchg
dec
mov
xor
mov
in
sub
sub
or
xchg
push
push
pop
cmp
or
cmc
mov
cmp
xchg
sahf
fisubl
divb
or
mov
pop
leave
push
cmp
cli
inc
inc
sahf
adc
sbb
or
jno
jb
stc
aaa
xchg
inc
pop
push
fs
xchg
insl
cmp
jne
mov
jg
test
and
mov
cmp
inc
in
lcall
pop
aad
in
popf
aad
pop
popa
scas
sbb
jmp
pop
jns
xorl
mov
dec
mov
repz
adcb
jo
push
sbb
mov
addb
jecxz
and
mov
insl
pop
jmp
xor
pushf
mov
xchg
in
xchg
outsl
and
lds
jae
stos
jnp
es
mov
gs
mov
fnstsw
test
xchg
test
sub
cmp
cwtl
push
dec
pop
loop
xor
inc
in
sub
aam
jno
jl
pop
fdivs
mov
pop
repz
test
dec
fisubl
xchg
push
adc
out
dec
add
inc
aad
pushf
adc
adc
push
nop
mov
repnz
lods
idivl
pop
mov
inc
jo
insb
mov
sbb
mov
and
push
hlt
dec
inc
adc
push
lea
push
push
fdivs
aam
mov
add
imul
adc
xchg
mov
out
xchg
sub
test
xor
loope
cmpsb
inc
loop
push
dec
mov
pop
in
lea
rep
popl
in
mov
das
mov
hlt
add
cwtl
stc
and
lods
fisubl
and
jno
inc
and
fidivl
mov
mov
loopne
sub
inc
outsb
shrl
rol
jl
and
push
fstpl
aas
or
push
jle
fsts
and
mov
add
push
insl
push
mov
mov
test
sbb
addb
stos
cmc
dec
dec
xor
sti
dec
dec
in
xchg
mov
sti
mov
inc
lea
pop
ja
les
arpl
lods
lcall
add
cmc
shrl
jae
mov
daa
xchg
jno
xor
test
add
inc
xor
mov
inc
add
or
xor
testl
and
xchg
add
pop
cmp
iret
and
jecxz
insl
imull
push
xor
pop
xor
dec
dec
gs
mov
or
adc
nop
icebp
dec
jbe
les
cmc
xchg
fs
push
fisubrs
pop
int3
cld
or
sub
add
scas
test
fld
pop
fldt
pop
sbb
aas
or
xchg
mov
mov
out
mov
ror
xchg
mov
jp
enter
and
jne
das
push
adc
repz
int
ret
jb
test
lods
pop
mov
test
mov
cmp
shl
pop
cltd
xor
mov
jp
xchg
mov
push
sub
or
cmp
outsb
push
dec
out
mov
sbb
cwtl
lds
shl
mov
aas
dec
fstp
mov
clc
ja
loopne
negb
push
cmp
and
sub
add
sbb
mov
or
push
and
mov
pop
fimull
pop
xchg
repnz
addb
xchg
dec
into
std
lret
imul
fsubrs
in
out
sarl
ja
xchg
testb
mov
std
sbb
daa
inc
imulb
lret
pop
xchg
and
in
dec
pop
pop
jp
mov
jbe
xchg
mov
popa
in
add
and
fdivp
adc
das
push
test
xor
mov
jp
push
addr16
stos
mov
push
jns
jae
mov
jg
flds
rcrb
pop
frstor
push
push
push
outsb
leave
lods
xchg
adc
jge
mov
sbbb
movsl
and
in
dec
js
shl
mov
pop
jl
scas
fdivrp
dec
outsb
jbe
xor
popa
aas
daa
notl
and
shl
xchg
jae
imul
xor
push
add
out
rolb
lahf
sbb
data16
mov
scas
ljmp
inc
insl
push
ret
fidivrs
orb
js
ret
or
sub
out
in
scas
imul
pop
push
inc
daa
adc
adc
mov
cld
add
sbb
jle
push
test
xchg
pushf
fdivrl
inc
sbb
ds
or
test
test
add
xchg
rol
ficoml
add
xor
mov
cltd
ret
mov
mov
mov
cltd
mov
sbb
inc
adc
cmp
sbb
in
movsb
dec
sub
repnz
cmp
cltd
jecxz
xchg
mov
out
lcall
gs
push
dec
push
sub
or
cmp
fldenv
and
jns
aas
cmpsl
and
int3
lods
mov
sysenter
loop
pusha
or
pushf
cld
mov
mov
pop
jg
das
rol
mov
lock
xchg
int3
adcl
stos
dec
pop
lret
repnz
rep
nop
dec
aam
fimuls
in
js
arpl
inc
test
pushf
mov
lds
push
xlat
pop
xchg
repz
sti
cli
je
pop
fcoml
dec
scas
mov
movsb
cs
xchg
xchg
lahf
lods
push
movsl
push
ret
out
sbbb
cli
and
lods
adc
push
jle
push
mov
cltd
or
jbe
dec
add
mov
loopne
dec
stc
notb
fwait
xchg
mov
fldt
sbb
sarl
xchg
cs
mov
ja
repnz
cmp
push
popa
adc
outsb
cwtd
pop
sti
sti
xor
std
les
dec
scas
inc
jae
cwtl
aas
cli
scas
jl
push
cs
mov
push
mov
mov
add
outsb
in
xchg
inc
cmpsl
dec
xchg
outsb
mov
jmp
mov
or
pop
pop
inc
add
or
adcl
sbb
int3
add
adc
cmpsl
pop
loop
mov
add
lahf
cmc
popa
pop
dec
mov
push
cmp
divb
mov
and
or
sti
lret
cld
mov
jecxz
in
jmp
xchg
repz
adc
arpl
pop
add
repz
je
jne
cmp
loope,pn
mov
rcrl
jp
mov
cmp
xor
inc
jge
xor
int
mov
inc
out
mov
imul
int3
dec
push
push
jmp
repnz
or
dec
sahf
cmpsb
xor
ret
rcll
add
xor
test
push
das
dec
loop
sahf
add
cmp
jmp
test
mov
out
mov
mov
and
popf
mov
jg
testl
fs
xchg
adc
jno
dec
scas
mov
in
fists
stc
and
mov
daa
or
aas
push
xor
les
test
dec
sahf
xor
inc
pop
inc
add
or
insb
aaa
dec
fdivrs
cmpsl
ret
nop
ds
mov
int3
test
fistl
test
fmuls
sub
cmp
and
mov
mov
push
push
ret
pop
push
add
sub
sub
fbstp
daa
leave
mov
rcr
pop
ficoms
jge
mov
mov
fimuls
shr
pop
xchg
rorb
stc
loop
add
cld
cmp
push
std
movsl
pop
mov
and
inc
xchg
daa
xchg
decl
jb
ljmp
fistps
and
out
adc
daa
cmp
adc
jae
pop
cmp
cltd
jecxz
dec
jno
ljmp
je
sub
aad
jae
xor
dec
stos
push
jmp
sbb
sub
ret
push
cmp
in
out
sbb
mov
or
pushf
stos
sbb
pop
cmpl
divb
cmp
mov
adc
add
or
push
add
adc
jge
adc
mov
sub
pushf
jo
add
in
xchg
aas
rcrb
jmp
es
pop
xchg
pop
cmc
bnd
jg
mov
jge
mov
sbb
jg
xor
aaa
movsl
jns
inc
xchg
pop
add
ja
mov
popf
pop
or
mov
outsb
inc
dec
in
aaa
data16
add
mov
or
or
cmp
add
cmp
shrb
fists
and
ljmp
lcall
inc
mov
cltd
aam
loope
hlt
mov
daa
shl
iret
add
cmp
sbb
xor
sub
lds
push
imul
mov
sub
push
lods
shr
aad
fsub
lods
jle
rcrl
or
and
jmp
add
cmp
sub
out
push
lahf
and
les
in
fildl
pop
out
js
mov
pop
mov
scas
out
add
flds
push
or
xchg
and
repz
leave
push
aaa
loop
imul
mov
cltd
jb
stos
sub
push
jb
lods
stc
mov
test
imul
sub
loope
iret
je
push
incb
pop
loope
cmpb
int3
jb
jae
hlt
inc
add
pop
int3
je
imul
loopne
orl
add
insl
mov
and
cmp
aam
cmpsl
adc
js
push
mull
repnz
jecxz
ljmp
addr16
adc
nop
push
xor
cwtl
jle
out
mov
xlat
repnz
cmp
lock
out
setle
push
inc
pop
mov
outsb
ds
and
shrb
dec
aas
lods
pop
es
push
mov
mov
push
lret
adc
pop
mov
dec
loopew
call
push
icebp
jmp
sub
mov
lea
inc
leave
rol
cmpsl
out
cli
pop
or
imul
les
std
imul
mov
push
pop
add
xchg
pop
jne
xchg
notb
ds
int
movsb
mov
cmp
mov
aam
insl
mov
pushl
pop
lea
nop
movl
aas
mov
cwtl
adc
cli
ljmp
xchg
test
pop
adc
xor
loope
pop
outsb
inc
mov
out
rclb
cmc
ret
aas
sti
add
into
sub
jnp
sub
sbb
pusha
xchg
cmp
mov
mov
fnstcw
nop
loop
mov
xor
push
or
mov
jmp
test
and
addr16
mov
pop
sti
cs
movsl
scas
dec
rcrl
enter
js
xchg
in
lods
leave
out
fmulp
mov
add
imul
mov
mov
sub
mov
shlb
cmp
or
hlt
sub
sub
nop
jns
sbb
lock
sbb
sub
cmc
subb
pop
fisttps
arpl
jmp
test
lret
ret
inc
pmullw
popf
test
inc
sbb
or
jno
or
push
pop
mov
cmp
jge
dec
mov
fcoml
sub
dec
jo
imul
jmp
sub
pop
movsl
in
dec
das
mov
mov
mov
mov
jge
js
xor
pop
in
xor
xchg
andl
add
adc
out
ret
dec
imul
addr16
pusha
std
inc
scas
cmp
xchg
or
ror
out
jbe
pushf
inc
jno
and
in
xor
nop
out
mov
stc
fstpt
ror
and
dec
out
in
popf
movhlps
pop
sbb
jno
test
pop
dec
shr
mov
jb
mov
sub
mov
jae
shll
mov
jno
nop
lea
ret
fcmovnb
aas
jge
fistl
sbb
ja
mov
xlat
lcall
dec
mov
push
lock
fcomp
std
inc
rep
jo
push
xchg
adc
xchg
cs
xor
pop
pop
das
sub
in
fmul
into
sarl
in
aad
fs
ljmp
cltd
xchg
sbb
loopne
jnp
mov
in
dec
xorl
jge
mov
jb
ja
rclb
xchg
inc
pop
inc
jb
mov
push
inc
inc
sbb
lds
stos
subl
jne
and
inc
lods
xchg
sbb
dec
outsl
sbb
push
sub
mov
xorl
mov
popf
sub
mov
xchg
cmp
fst
adc
add
jl
xor
sahf
div
pop
mov
insl
push
sbb
inc
lcall
xlat
adc
mov
dec
cmp
jg
les
push
jmp
push
ss
jae
call
imull
subb
popa
daa
dec
or
sub
and
cmp
mov
call
loope
leave
adc
xor
loop
mov
add
es
lahf
pop
lret
out
fdivp
push
xor
sbb
sub
loope
fwait
pop
or
mov
adc
cltd
int3
sbb
xchg
xchg
mov
lahf
xchg
inc
int3
mov
mov
mov
push
lcall
pop
cld
jne
dec
mov
xchg
or
inc
adc
fs
lea
sbb
cmp
sbb
sub
pushf
ds
dec
into
push
pushf
dec
inc
adc
jno
repnz
iret
lahf
int
push
fcompl
xchg
and
nop
ffreep
cmp
cltd
movsl
xchg
xchg
push
xchg
shlb
insb
lock
add
cld
int3
in
mov
mov
insb
mov
jbe
cmp
icebp
sti
test
jb
jne
xchg
cmp
adc
loope
add
shlb
arpl
adc
pop
fsubrl
mov
and
js
push
movsl
sbb
push
sub
in
popf
inc
test
enter
sub
fdivl
arpl
mov
repz
push
inc
add
test
cmc
jmp
hlt
aas
nop
mov
sahf
pop
pop
in
jno
jae
pop
ret
in
add
pushf
lds
dec
jo
nop
mov
add
pop
adc
outsb
out
mov
mov
xchg
jmp
movsl
clc
adc
push
pop
jae
cmp
mov
lods
push
imul
hlt
or
je
lock
scas
fld
inc
jmp
xlat
pop
mov
sti
imul
or
pushf
or
lcall
dec
pushf
dec
loop
addr16
cmpsb
xor
xor
fstp
xchg
popf
or
out
and
dec
jbe
rorl
adc
addb
cmp
inc
mov
push
adc
dec
call
jnp
dec
inc
mov
fbstp
das
nop
adc
ljmp
mov
fidivrs
jecxz
lret
cli
test
xchg
sahf
bound
decb
jo
call
fdivp
sahf
mov
pop
mov
rcl
xor
in
pushf
xorb
mov
enter
jbe
jnp
mov
jns
add
xchg
mov
xor
pop
imul
imul
loop
mov
jo
mov
mov
cmp
push
pop
push
pop
jne
addr16
and
sub
cmp
orl
cwtl
jg
dec
sti
cmpsb
maskmovq
inc
push
xor
dec
push
jno
int3
arpl
cmpsl
hlt
xchg
sahf
stos
stc
out
and
rorb
stc
pop
pop
int3
fiadds
push
add
push
stos
sub
jge
stc
mov
sbb
inc
xchg
push
inc
mov
fwait
gs
hlt
lea
ja
mov
jb
test
lods
fidivs
mov
add
dec
ret
inc
loope
jl
or
cmp
insl
and
test
sti
cmp
sbbb
jmp
aam
sbb
push
mov
fnstsw
push
sub
xor
xchg
inc
movsb
mov
nop
imul
push
call
xchg
or
div
ljmp
push
push
and
dec
jnp
jp
pop
leave
out
push
cmp
dec
out
jg
dec
add
cmp
pusha
cmc
cmpsb
test
and
cmpsl
or
jl
in
sub
dec
add
in
cmp
pop
idivl
stos
cmpsb
aas
lret
pop
ret
loopne
xor
sub
fildll
push
add
inc
pop
insl
repz
or
jae
xchg
add
cmp
mov
sarl
mov
adc
call
fisubrs
ret
sti
int3
adc
cwtl
stos
sub
lock
call
pop
mov
mov
fwait
sti
adc
mov
stos
mov
push
shl
xchg
xchg
out
cmp
sbb
les
and
lods
and
ja
mov
jae
loopne
in
dec
out
daa
and
dec
je
out
arpl
loop
pop
xlat
test
mov
es
push
jno
fldl
inc
xchg
jle
outsb
sbb
adc
and
in
hlt
ljmp
push
into
call
mov
or
sub
hlt
addb
js
out
push
dec
imul
add
mov
jno
cmc
adc
aam
jmp
mov
icebp
jae
int
out
and
imul
mov
inc
mov
mov
adc
scas
xchg
stc
mov
dec
shlb
mov
sbb
jle
addr16
jae
sbb
inc
or
jl
mov
loop
movsl
xchg
repnz
out
out
mov
or
ljmp
stos
mov
xor
cs
pop
adc
test
xor
ds
stos
adc
pop
bound
ljmp
add
movsl
cmpsl
inc
jae
mov
inc
cmp
xchg
out
jo
push
and
loop
in
clc
outsl
das
movsb
xor
leave
cli
mov
cmpsl
test
mov
add
dec
pop
sahf
shrb
cld
jae
push
loop
rcrl
out
push
xlat
pop
and
inc
pop
adc
jae
cmp
mov
dec
and
fidivl
sbb
pop
dec
pop
cli
pop
popf
pop
cmp
sub
sti
dec
ret
xchg
inc
mov
std
repnz
mov
call
cmpsl
push
out
les
aaa
dec
dec
inc
push
mov
out
imul
outsl
lcall
lahf
loope
xchg
lea
sub
cmpb
repz
mov
clc
stos
shrb
cmc
imul
xchg
sarb
sub
mov
aam
in
lock
adc
in
sub
lods
push
icebp
f2xm1
adc
insb
lret
jae
incl
dec
and
ss
in
das
pushf
xor
adc
fisubrl
sbb
lahf
movsb
test
jmp
lret
add
aad
insb
pusha
loopne
cmpsb
fadds
and
js
push
mov
mov
mov
jge
in
mov
cwtl
es
call
jns
out
aam
fldt
and
mov
outsb
lea
xchg
ljmp
jg
inc
sub
aam
push
filds
mov
lods
nop
xchg
adc
into
add
imul
xchg
sub
adc
pop
repz
xchg
aam
aaa
mov
les
push
fwait
xor
lods
into
lcall
xchg
or
mov
out
cmc
adc
test
pop
dec
ja
mov
inc
inc
lret
xor
adc
dec
lock
cmp
scas
pop
xorb
rorb
mov
or
stos
xor
push
cmp
mov
ret
pushf
dec
ret
mov
bound
xor
aam
jl
ret
out
fisubrl
sbb
push
stos
int3
sbb
jp
pop
inc
adc
insb
ret
mov
cmp
xchg
loop
fcmovne
mov
mov
mov
jle
dec
pop
pop
push
jecxz
imul
cmpsl
mov
test
adc
jo
push
stc
nop
jb
jmp
jns
sub
sbbl
jbe
pop
lea
nop
rol
cmp
fiaddl
adc
and
mov
sub
xchg
add
mov
stos
xorl
cli
jbe
jne
cmp
or
dec
fnstsw
pop
inc
and
xchg
pusha
mov
sbb
adc
push
cli
insb
movsl
pop
sub
movsb
insl
jmp
aas
dec
mov
adc
or
cmp
cltd
dec
scas
jae
mov
cmpb
xor
dec
push
inc
out
push
jno
jno
lahf
jns
in
std
in
popf
inc
ror
aad
mov
inc
in
push
pop
mov
mov
adc
mov
jp
dec
cltd
add
dec
enter
outsl
xor
pop
je
and
inc
fmull
adc
adc
inc
aaa
xchg
mov
push
jno
in
fwait
pop
inc
mov
add
idivb
mov
sub
mov
pushf
xor
jne
lock
int
cmpsb
fstp
sbb
cmp
inc
xchg
popf
sbb
dec
pop
push
sub
cmp
pop
loopne
mov
adc
sbb
adcl
add
add
nop
mov
cmp
cmp
sub
cmp
jno
mov
push
pop
out
gs
jo
mov
fildll
or
xchg
sub
add
jge
repz
cmp
lods
sti
xchg
xchg
xchg
xchg
std
mov
sub
sbb
loope
lds
lods
fndisi(8087
pop
cltd
rcll
cmp
pop
add
outsl
popf
xor
sub
fs
xchg
mov
movsl
stos
pop
ficoms
xchg
jp
inc
pop
stc
jnp
inc
sub
adc
pushf
jns
outsb
jae
sub
ss
jecxz
cmp
repnz
lods
leave
call
pop
pop
fsubs
leave
jnp
out
cmpsl
push
xchg
sub
cmp
xor
sbb
addr16
dec
ds
mov
dec
jge
and
movsb
outsl
dec
xchg
dec
or
adc
push
movsl
clc
cmp
ljmp
cmp
pop
or
sub
subb
cmpsl
jo
mov
nop
cmpsb
mov
inc
adc
and
adc
mov
jnp
dec
mov
lret
mov
lret
out
ds
out
ss
xchg
pop
sbb
add
insb
dec
in
leave
ss
outsb
out
pause
clc
daa
mov
pushf
push
rclb
lcall
xchg
jnp
add
icebp
and
hlt
mov
test
jno
insl
mov
or
jmp
mov
pop
fsts
xor
insl
jp
push
pop
push
push
mov
jb
call
aas
lock
xor
int
mov
mov
out
pushf
lcall
sahf
xor
fisubrl
cmp
xor
dec
outsb
xchg
mov
lea
and
out
push
inc
mov
and
imulb
jo
sub
mov
int3
inc
mov
and
shl
dec
dec
cmp
sbb
xlat
sub
aam
out
mov
gs
adc
add
jmp
lcall
jecxz
out
pushf
cmp
jmp
mov
adc
mov
out
mov
pop
sub
pushl
aaa
mov
sbb
mov
or
lcall
addr16
push
and
rcll
inc
and
jge
and
push
clc
jp
pop
shrb
jae
pop
data16
rcr
or
int3
stc
imul
xlat
inc
fisttpll
mov
xchg
subb
add
in
int
mov
sbb
xlat
cmp
cld
out
ror
push
lea
loopne
in
and
adcl
xchg
lcall
cltd
xor
and
xor
jb
jecxz
mov
add
xchg
sbb
call
lret
lods
fidivrs
push
inc
inc
bound
cld
mov
movsl
mov
xchg
mov
call
cmp
out
dec
cli
push
fstpl
shrl
mov
sbbb
jge
xlat
icebp
mov
aam
adc
fstps
ret
jbe
push
test
push
cmp
outsl
fsubrs
loope
mov
data16
jp
cltd
aas
mov
xor
out
pusha
add
icebp
out
add
xchg
aam
mov
out
add
test
sahf
push
fildl
jl
sbb
ss
leave
mov
loop
mov
arpl
idivl
jl
pop
xchg
and
lahf
pushl
das
data16
mov
mov
subl
and
clc
jle
sub
imul
int3
adc
cli
push
popf
or
add
push
and
icebp
lcall
add
in
out
cmp
in
ja
sub
ret
mov
subb
lea
lcall
jo
cmp
jae
gs
mov
push
mov
imul
popa
roll
lock
mov
mov
jg
mov
sub
xor
push
js
jbe
inc
add
pop
ja
adc
call
insl
mov
fwait
jnp
xor
out
scas
loopne
stos
xchg
shlb
or
test
cmp
dec
mov
push
ss
test
pushf
testb
jnp
loopne
dec
orb
cli
popa
addr16
cltd
dec
cmp
add
sbbl
icebp
pusha
or
fldcw
mov
add
mov
jl
and
bound
jno
sub
lods
sahf
sysexit
pop
ja
scas
cs
fstpt
jo,pt
dec
adc
inc
js
cmpsb
repz
xor
pop
mov
xor
or
xor
jne
lock
enter
cmp
mov
scas
push
jle
out
test
and
cmp
les
push
pop
shrb
push
cmpsl
arpl
icebp
outsl
jo
ds
nop
push
fidivl
mov
lods
dec
cld
gs
cwtl
mov
mov
repnz
mov
or
dec
mov
adc
or
imul
xchg
adc
sbb
frstor
ret
xor
lods
enter
dec
push
enter
pop
mov
movsb
and
fwait
and
or
int
enter
xchg
cltd
or
mov
mov
dec
test
mov
pop
fcoml
dec
mov
inc
shr
jmp
dec
inc
ret
ljmp
push
cmp
cmc
repnz
clc
dec
test
mov
roll
in
mov
aad
sub
mov
push
addl
lcall
xchg
lock
mov
xchg
std
dec
pushf
adc
pop
push
or
inc
jb
das
or
hlt
std
or
mov
pusha
mov
add
or
test
mov
aad
xlat
mov
adc
or
lret
loopne
xchg
cmp
cmpsl
in
or
hlt
repz
sahf
dec
jge
aaa
loopne
cwtl
sbb
jno
fildll
cli
gs
cli
lock
xor
dec
lock
hlt
seto
cmp
fmuls
outsl
cli
insb
cmp
insl
call
or
fdivs
sub
mov
popa
xchg
dec
and
jg
and
dec
dec
jmp
test
je
ret
out
andl
push
pushf
testl
idivb
jp
es
pop
mov
add
or
jp
or
repz
mov
popa
mov
mov
jb
xor
dec
pop
cmpsb
mov
out
stos
cmpsb
pop
leave
fcompl
mov
daa
dec
adc
sbbb
mov
xchg
jge
inc
pushf
add
mov
icebp
xlat
test
cli
sub
and
and
imul
pusha
pop
shlb
xchg
hlt
out
imul
outsl
shl
xor
js
aad
mov
or
fstpl
and
lret
adc
dec
sub
inc
loop
xor
cmp
les
je
mov
inc
or
mov
subl
stos
cld
sub
jno
in
movsb
push
mov
adc
sub
lea
cmpb
mov
mov
dec
jb
sbb
mov
and
adc
sbb
shlb
in
jg
and
jecxz
in
push
jns
fldl
xor
cwtl
in
out
fwait
pop
sub
pop
jg
cmp
cwtl
out
shrl
fadds
push
add
fcomi
aam
pop
pop
repz
mov
pop
leave
fwait
outsl
outsl
mov
xor
mov
cmpsb
pop
pop
movl
push
subb
pop
add
dec
jecxz
aad
test
cmp
cmp
cltd
sbb
xchg
push
inc
xchg
into
sub
push
scas
pop
and
sbbb
sub
sub
xor
push
inc
gs
or
add
dec
daa
cmc
add
scas
nop
push
aad
pushf
ja
push
orb
aaa
push
adc
out
es
xor
dec
mov
pop
data16
outsb
mov
popa
addr16
shr
cltd
and
pop
scas
int
and
sub
or
mov
mov
xor
cmp
jns
push
aaa
popf
push
ret
cmpsb
daa
sbbb
popf
fstps
repnz
int3
repnz
jg
inc
xchg
jmp
bound
inc
idivb
fidivrl
shrb
xchg
mov
sbb
sub
add
mov
les
add
and
or
mov
cmp
bound
cmp
pop
cmp
test
jp
pop
add
ds
mov
or
jo
xchg
pop
aaa
mov
cmpsl
adc
cs
or
dec
xlat
xchg
jl
pop
rcll
imul
push
mov
xlat
xchg
lcall
ret
xchg
les
push
jnp
loope
jl
mov
or
cld
ret
xor
mov
push
test
push
pop
add
js
icebp
push
jg
sbb
xor
push
jae
ja
jnp
and
mov
movsb
loope
mov
pop
ss
sbb
out
mov
shll
cmpsb
test
ret
sub
pop
fidivrs
stos
sbb
popa
inc
cs
push
decl
pop
fwait
out
xor
mov
cs
fsubs
arpl
dec
cmp
push
lods
stos
mov
ss
out
roll
jbe
pushf
push
mov
dec
ret
jmp
sbbb
mov
dec
incl
pop
fnstsw
fs
push
and
aad
sub
lds
pop
aam
fsubl
push
flds
mov
arpl
lcall
mov
stos
fldt
cltd
add
insb
mov
mov
mov
inc
test
daa
push
mov
aad
xlat
xor
call
in
add
mov
call
xor
sbbl
sbbl
sub
insb
jg
xchg
or
jnp
sbb
or
add
or
icebp
repnz
out
xchg
lret
cmpsl
inc
lods
lea
aam
addr16
pop
push
insl
dec
xchg
and
add
sbb
add
inc
xor
popa
jge
scas
dec
in
mov
mov
int3
xchg
into
inc
add
sbb
jmp
fwait
addr16
dec
jae
sbbl
adc
jecxz
notb
pop
jl
test
out
pushf
testl
pop
aad
inc
xor
sbb
testl
enter
xor
cmp
sbb
sub
mov
iret
dec
dec
popa
test
lods
clc
jp,pn
mov
int3
cmc
movsl
pop
icebp
cmc
mov
pop
cmp
push
and
imul
jl
test
sub
mov
xor
cmpb
mov
sub
pushf
cmc
push
pop
insl
pop
adc
or
sub
push
pop
mov
mov
outsb
mov
xchg
inc
mov
inc
inc
insb
insb
inc
and
imul
or
cmp
jno
mov
les
lret
dec
jecxz
pop
imul
pushf
out
xchg
dec
adc
and
or
stos
mov
stos
or
inc
add
sbb
push
and
mov
or
out
popf
je
xchg
jg
lods
lods
out
ja
pop
loopne
in
fistps
repz
test
mov
pop
sbb
stos
jle
push
repnz
popf
sub
jns
pop
xchg
xchg
pop
clc
mov
cli
jp
cmpsl
adc
adc
dec
push
cmp
into
mov
sbbl
xor
xchg
mov
out
dec
out
push
cmp
faddl
stos
cs
sub
mov
lret
and
push
leave
sub
ss
stc
adc
mov
lahf
mov
xor
inc
ficomps
out
or
or
jmp
mov
divl
out
sahf
xlat
mov
pop
addb
push
stos
int
in
sub
cmpsl
xchg
jnp
jb
loopne
push
in
mov
ja
dec
dec
inc
push
ret
jl
pop
fbstp
or
mov
sub
sub
dec
fidivrs
pop
sar
inc
flds
ffree
aad
loope
jp
mov
stos
xchg
mov
aad
mov
jns
in
mov
xlat
dec
mov
shlb
fwait
lea
add
jp
mov
pop
lods
push
js
inc
mov
shrb
cmp
js
add
mov
popa
movsb
stos
mov
adc
in
xchg
mov
xchg
xor
xor
rol
xchg
xor
pop
int3
outsb
mov
movups
mov
movsl
mov
sub
int3
cmp
inc
jmp
pop
arpl
push
test
ds
pushf
repnz
xchg
imul
in
hlt
mov
pop
stos
sbb
lret
push
in
cld
and
aam
pop
es
and
aaa
out
sbb
cmp
xor
xlat
push
cli
adc
mov
cld
outsb
mov
bound
ret
fldt
ds
or
pushf
push
mov
out
or
mov
push
xor
mov
sub
int3
jg
sub
mov
cmp
pop
arpl
ret
incl
je
shlb
sub
jge
or
je
aas
and
sbb
jnp
xor
or
adc
repnz
dec
mov
jmp
add
out
arpl
out
das
test
mov
adc
pushf
out
cs
es
test
test
xchg
xchg
jge
dec
inc
xchg
imul
nop
push
xor
xor
sahf
dec
movsb
cld
mov
mov
aad
mov
mov
adc
cmp
in
lods
pushf
push
push
mov
std
mov
sbb
inc
addr16
mov
or
push
push
mov
ss
ds
dec
pop
aam
inc
arpl
in
mov
enter
loop
add
cmpsl
sar
xchg
pop
or
pop
aas
sti
int3
mov
nop
leave
xchg
fwait
rorl
hlt
push
out
insl
cmc
xor
aam
in
outsb
clc
push
fwait
sub
add
pop
scas
lcall
pop
cmp
lds
pop
jl
shl
mov
pop
jle
mov
ficompl
sarb
push
jo
sub
fwait
mov
or
imul
xor
aas
mov
cmp
int
cmpsl
imul
push
rolb
sub
fisttpll
lock
addr16
in
outsb
dec
aaa
shlb
xor
test
aam
hlt
xlat
lcall
inc
in
lret
in
sub
mov
inc
aad
call
xchg
lods
sbb
nop
adc
ret
in
pusha
dec
xlat
inc
add
adc
inc
ja
fwait
ss
ret
mov
mov
sbb
fisubs
dec
cltd
mov
ja
xchg
push
pop
js
imul
imul
add
cwtl
jne
pop
cmpsb
sbb
loop
adc
sbb
inc
inc
and
mov
push
fimull
fiaddl
pop
sti
js
scas
pop
push
rcr
adc
dec
adc
mov
loope
outsl
push
into
inc
loopne
jns
or
aaa
mov
dec
into
pop
sti
imul
sub
mov
sub
inc
js
pop
mov
in
sbb
shrb
loop
or
stos
push
jp
int
scas
mov
jg
dec
sbb
sbb
dec
cli
fsubrl
nop
insb
cltd
insb
lods
adc
shr
jo
sub
and
pop
and
lret
lock
cmp
sub
aad
inc
out
push
sub
mov
into
mov
mov
push
jmp
adc
cmpsb
adc
cmp
xchg
xchg
xor
lcall
test
inc
aaa
add
xchg
inc
add
or
jecxz
sub
inc
pushf
pop
xchg
cwtl
ret
jge
mov
mov
cwtl
jns
xor
popf
add
cmp
divl
fcom
mov
fldt
xor
inc
pop
pop
xchg
jmp
scas
ss
out
or
push
push
sbb
pop
dec
inc
lock
inc
pop
in
xor
in
jns
and
insl
repnz
js
jno
fisubrl
jb
pop
cli
pop
sub
sbb
in
push
je
jg
imul
ret
popf
insb
outsl
inc
xchg
stos
pop
inc
insl
cmp
lcall
popf
ficompl
daa
mov
or
loope
out
jl
cli
or
xor
add
cmp
xchg
gs
sub
jb
pushf
jne
push
ror
test
xor
ret
sbb
pop
mov
daa
jae
mov
dec
dec
sbb
pop
add
in
adc
sub
fsts
cld
popf
orl
inc
sbb
push
fdivl
subl
pop
jne
cmp
jb
test
xor
or
add
cmpsl
call
and
icebp
ret
mov
stos
sub
dec
push
xor
xchg
mov
test
insb
adc
sub
adc
ds
cmpsl
stos
ret
mov
push
cmc
mov
sub
mov
xor
sbb
dec
je
popf
mov
ret
xchg
aas
xor
aas
jle
xlat
sbb
pop
out
mov
and
xchg
stos
mov
pushf
mov
lods
rol
sub
xchg
inc
push
add
scas
sbb
pop
clc
out
fs
stos
mov
jbe
sbb
iret
gs
data16
arpl
lcall
out
and
ja
pop
pop
es
pop
loop
inc
push
test
pop
test
sbb
inc
jg
cwtl
stos
js
pop
and
push
sbb
int
mov
imul
les
jmp
enter
stos
push
rol
push
in
movsb
mov
jns
test
iret
loope
mov
movsl
mov
push
jno
mov
pop
dec
icebp
sti
pop
mov
pushf
push
cmpsl
das
sub
in
jle
mov
ret
bound
jne
xlat
test
jno
pop
dec
jns
xlat
cmp
rclb
call
stos
push
push
sub
xchg
and
sbb
xchg
scas
xor
gs
and
pop
jg
cli
xchg
sub
pop
lods
imul
jne
mov
xor
negl
insl
outsl
adcb
js
pop
cltd
pop
ja
jae,pt
daa
scas
xchg
push
dec
call
test
fidivs
cmp
repz
xchg
cmp
cmp
and
sub
daa
repnz
lods
push
iret
pop
shlb
cmp
test
cwtl
scas
rcll
add
mov
int3
das
xchg
aad
xchg
outsb
add
pop
into
mov
ja
mov
int
ja
adc
aam
push
jns
inc
push
sti
repz
adc
adc
inc
xor
cmp
mov
xchg
dec
mov
or
xchg
pop
movsb
xor
fcoms
out
push
aad
inc
imul
xor
mov
sbb
dec
jnp
scas
orl
loope
cmc
pop
test
test
into
inc
sub
repz
push
lods
lret
sti
push
push
jne
andl
in
pushf
popf
push
inc
mov
insb
daa
mov
scas
js
pop
mov
insl
mov
cs
push
jmp
jg
fsubrl
adc
add
push
mov
lret
loopne
sahf
aad
adc
out
cmpsb
les
fstpl
jb
inc
dec
std
sahf
scas
enter
inc
cmpl
mov
jle
daa
cmpsb
mov
xor
outsb
cmp
lahf
cmpsl
jle
pop
cmp
adc
arpl
or
lcall
xor
jbe
xor
arpl
idivl
sbb
dec
or
add
inc
icebp
out
pusha
aaa
mov
xchg
mov
lds
popf
fmull
cmp
fildl
mov
lahf
lock
pushf
mov
and
inc
clc
outsb
cmpsl
outsl
test
sub
scas
insb
mov
push
mov
sub
cmp
nop
sti
push
adc
sbb
stc
pcmpgtb
mov
adc
push
rdmsr
popa
fsubs
cld
movsb
fbld
push
xor
repnz
dec
sub
add
sarl
es
xorl
xchg
fnstenv
movsb
out
add
adc
iret
fidivl
dec
mov
mov
inc
and
mov
je
icebp
inc
cmp
jmp
stos
xor
nop
cli
pop
dec
or
jecxz
ret
mov
mov
outsl
nop
shll
sub
or
addb
icebp
jl
popa
jae
lahf
popl
xchg
ja
mov
cmp
dec
incl
xor
pop
aad
push
inc
sub
shr
fistps
repnz
sbb
gs
inc
es
aas
cmp
sbb
test
adc
inc
comiss
pop
cmc
shlb
lret
outsl
and
inc
sub
hlt
dec
repz
jb
test
sbb
add
inc
adc
lahf
lea
dec
cmp
mov
mov
lahf
fnstenv
xor
in
pslld
mov
stos
fsub
ljmp
sbb
std
xor
dec
sub
aad
cmpsl
aas
sbb
xchg
test
loopne
jg
jmp
rorb
jl
pop
insb
cmp
daa
sub
push
mov
and
cmp
out
or
ljmp
in
add
cmpsb
sahf
jno
in
es
ret
push
mov
cmpsl
in
sub
adc
xchg
mov
ds
pop
jg
jmp
insb
filds
inc
arpl
and
jae
shrl
sbb
push
add
push
popa
xlat
pop
xchg
mov
out
lods
iret
jecxz
fists
setl
push
hlt
mov
push
les
sub
shl
aas
jne
fdiv
mov
pop
push
test
push
loope
pop
std
or
ljmp
push
fistps
push
pop
pop
inc
in
mov
clc
pop
mov
mov
adc
jg
push
xchg
subb
and
pop
sub
sub
sysexit
mov
popa
push
cli
lea
xor
adc
repnz
or
xor
fdivs
sarb
rcrl
xor
cmpsl
mov
out
push
scas
out
lods
sub
pop
scas
xor
cwtl
pop
mov
loope
je
mov
test
rol
adc
andb
shl
outsb
dec
cs
xor
test
dec
xchg
leave
sti
repz
imul
enter
push
dec
cwtl
jge
and
outsl
test
xlat
jno
adc
dec
ljmp
sbb
xchg
xor
ja
lret
lea
adcl
cmp
loope
jnp
pop
clc
test
loop
cld
xchg
xorb
jo
inc
lock
icebp
push
or
xchg
out
loopne
enter
xor
mov
insb
or
cmp
clc
jge
pop
mov
mov
jmp
add
fwait
mov
ret
movsl
inc
mov
arpl
leave
jg
lret
push
mov
mov
xchg
dec
jp
push
idivb
pop
dec
testl
dec
shrl
and
test
cmp
mov
cli
ljmpw
push
jle
lcall
ljmp
inc
dec
xorb
mov
and
pop
cmp
inc
sahf
mov
pop
jle
cltd
jmp
pop
xlat
bnd
mov
dec
mov
sub
sbb
sbb
dec
or
outsb
xor
mov
aam
out
cltd
rol
fnstsw
pushf
cmp
inc
xchg
ret
test
push
and
mov
mov
jle
pop
pop
out
in
lret
leave
test
mov
mov
pop
jmp
dec
push
ret
push
aam
fs
inc
jecxz
push
jb
xchg
subl
and
push
out
mov
imul
mov
cmp
les
fnstcw
or
jle
cmp
adc
push
shll
push
aad
pop
sbb
cmp
cmp
ljmp
cmp
xchg
dec
ja
cwtl
jne
xchg
enter
adc
push
out
sub
ds
xchg
int3
jl
leave
xchg
dec
pop
cmp
in
pop
pop
pop
popa
es
sub
xchg
and
pop
jne
pusha
mov
fstpt
cwtl
cmp
xchg
push
mov
dec
cmp
pop
sbb
ret
mov
icebp
sub
test
repnz
dec
jae
inc
push
mov
dec
add
mov
dec
out
cmp
rcll
imul
addr16
fsubrs
test
jbe
dec
scas
stc
xchg
mov
push
ret
cs
xchg
lahf
jp
les
out
lods
arpl
jnp
loop
mov
push
inc
mov
xor
mov
in
jmp
or
mov
call
imul
nop
mov
add
cmp
dec
mov
imulb
fucom
xor
lock
int3
pop
ljmp
xchg
cmpb
xor
mov
lods
or
dec
negb
aaa
test
insl
push
xor
outsl
inc
shl
mov
repnz
sbbb
lret
sub
loop
add
jnp
mov
inc
dec
enter
enter
ficomps
cmp
icebp
out
and
loop
adc
je
bound
cmp
movsb
mov
push
cmc
xor
and
mov
xchg
dec
adc
and
shlb
lret
mov
movsb
jge
iret
push
jp
xor
dec
sub
xor
mov
leave
mov
int
in
sub
outsb
xchg
cli
jns
pop
js
les
pop
fs
lock
clc
jnp
xlat
scas
popa
cli
cmp
mov
push
mov
xchg
shlb
std
inc
roll
insb
scas
lods
fisttpl
movsb
jo
bnd
fiadds
sub
loop
xor
xchg
shrl
push
jg
inc
ss
inc
pop
test
or
jae
lret
outsb
rorb
pushf
aas
sub
in
popf
shl
xchg
dec
repz
sbb
inc
and
dec
int3
push
push
cmpsb
es
shrl
mov
iret
mov
dec
movsb
xchg
int3
inc
push
mov
sbb
jnp
pushf
repz
sbb
mov
cmp
xor
addr16
add
imul
mov
xor
or
cmp
push
xor
loopne
in
gs
sub
push
fwait
in
std
mov
cmc
jno
scas
and
cmp
sub
pop
or
xchg
push
cmp
jb
fidivs
into
fs
cmp
sbb
push
mov
ret
mov
sub
mov
jne
pop
cmc
dec
pusha
mov
cmp
cmp
repz
adc
outsl
xlat
popf
inc
imul
push
ret
push
mov
mov
insl
push
sbb
lods
jno
ja
out
add
adc
jmp
imul
pop
lret
cmp
loope
mov
add
inc
and
sbb
nop
cli
jge
push
jbe
push
mov
shl
jnp
add
stos
clc
jl
ds
fsubrs
add
xor
test
movsl
gs
iret
gs
test
add
dec
jl
push
aam
js
jg,pn
jnp
pop
sbb
push
xlat
aad
int3
xchg
adc
in
xchg
lcall
inc
call
push
rolb
fcoms
sbb
lods
idivb
and
add
in
scas
pop
in
ljmp
mov
push
or
add
push
sahf
jp
lret
inc
les
dec
ret
nop
dec
jle
roll
pop
popf
pop
add
or
push
imul
mov
dec
and
push
fwait
mov
jbe
pop
ret
repz
popf
repnz
pop
pop
in
pusha
jne
dec
inc
pop
xor
pop
jle
cmpsl
cwtl
in
leave
stc
movnti
push
xchg
les
repnz
or
push
ficoml
xchg
xor
das
adc
test
adc
hlt
cmp
jg
cld
jmp
sbb
xchg
lcall
and
sbbl
and
iret
push
ljmp
cmp
jb
bound
out
mov
fwait
sub
dec
push
add
mov
lret
bound
sahf
sub
jmp
out
xor
pop
imul
jne
ljmp
sub
and
loope
fwait
push
mov
adc
sub
int3
scas
push
mov
ret
or
mov
cltd
jle
pop
out
test
push
sub
test
jl
cmp
sbb
jae
adc
cmpsl
out
iret
bound
and
pop
add
pop
sarb
cli
lahf
xchg
cmpsb
dec
cmp
xchg
add
push
sub
adc
in
ds
jge
aam
dec
lods
sbb
inc
jns
std
sub
add
ss
adc
loopne
push
fisubs
call
lret
jmp
xchg
inc
xor
das
xlat
cmp
jmp
bound
arpl
mov
mov
dec
sub
sub
loopne
repnz
icebp
aas
inc
xchg
insb
add
test
out
pushf
mov
and
xor
sbb
pop
ja
call
or
nop
xchg
orl
dec
mov
bswap
jae
mov
jmp
cmp
call
xor
xor
jecxz
das
outsb
xlat
jbe
sub
cld
mov
lret
ror
das
subb
dec
xchg
je
xor
popa
pop
or
int
jl
sub
mov
cmp
pop
or
dec
push
out
mov
mov
movntq
sarb
push
clts
test
push
sub
int3
pop
imul
push
and
or
pop
in
or
push
add
icebp
pop
push
mov
mov
fsts
cmp
inc
sub
les
mov
insl
xor
xchg
or
mov
pop
pop
cmpsl
sub
pop
out
sub
cmp
lock
lahf
pop
xchg
jle
add
lods
sbb
popa
adc
push
mov
popa
jp
jae
mov
push
lods
mov
cmp
out
xlat
dec
inc
xchg
movsl
insl
add
movb
es
addr16
and
pop
ds
mov
fs
or
inc
add
dec
ss
mov
mov
not
fsubl
mov
in
sbb
data16
adc
mov
cmp
xor
pusha
adc
stos
add
inc
or
inc
push
sbb
adc
into
cmp
mov
or
sbb
push
or
sbb
xchg
loop
rclb
sub
inc
jne
push
push
dec
daa
ret
mov
add
jmp
icebp
jg
pop
xor
pop
mov
roll
add
sub
std
pop
push
xor
push
or
js
sub
xchg
testl
add
mov
pop
lea
sbb
sbb
or
popf
out
mov
push
addr16
aad
psllw
fstpl
sbb
sub
xchg
dec
imul
mov
in
scas
enter
leave
mov
andl
adc
into
mov
mov
cmp
repz
jge
movsb
xchg
loope
in
and
sub
mov
or
dec
cmp
repnz
das
test
lea
out
mov
xor
loop
xchg
inc
jp
andl
cmp
pop
leave
xchg
jmp
stc
pop
add
and
idivl
xor
jnp
and
cmp
out
lahf
mov
movsb
mov
adcl
xorb
addr16
lock
pop
addl
iret
mov
and
mov
ss
inc
fidivrs
fisubrl
add
in
push
ficompl
and
add
lcall
leave
sbb
outsb
loopne
jne
pop
imul
mov
xchg
insb
sbb
xchg
mov
sbb
dec
mov
adc
loop
adc
push
aad
sahf
mov
sbb
xor
dec
lret
pop
nop
mov
adc
dec
popa
flds
int3
pusha
cmpsl
lcall
push
das
test
pusha
dec
or
jno
lods
jns
or
add
xor
iret
aaa
pop
ja
or
sub
std
loopne
lods
jnp
stc
lret
push
push
jle
movsb
push
cs
or
xor
repz
jp
and
push
pop
sbb
push
ljmp
or
leave
stos
test
lcall
mov
inc
cmp
mov
loope
imul
inc
inc
cmp
jp
jmp
and
pop
aad
imul
lcall
mov
dec
out
popf
mov
das
jae
inc
icebp
lock
xchg
or
add
dec
jbe
mov
sti
mov
ja
sbb
ficomps
iret
xchg
testl
cmp
bound
sub
dec
mov
add
pop
aam
dec
xor
dec
out
push
xor
jmp
sub
cmp
icebp
lahf
inc
pop
lahf
add
je
dec
or
insb
xor
jbe
dec
xor
ret
xor
mov
adc
and
jns
mov
insb
add
test
adc
popa
bound
loop
push
out
mov
dec
cs
adc
pop
mov
cmc
xchg
mov
outsl
push
outsl
insb
imul
xor
fcoms
jb
lcall
cmpsb
inc
push
mov
xchg
push
add
xchg
cli
stc
mov
shrl
fldln2
jae
sub
mov
mov
xchg
fistpl
jg
pop
push
outsb
repnz
push
mov
jp
aam
xchg
and
cmc
outsl
mov
mov
mov
cmc
pop
in
cmp
stos
mov
mov
xor
push
pop
rol
cmp
mov
mov
leave
out
xor
pop
dec
xorl
popa
sbb
inc
lock
jae
xlat
lahf
lods
stc
push
lahf
fisubs
scas
shlb
jle
pop
sbb
push
bound
mov
sub
rcrb
add
adc
xchg
add
out
in
or
outsb
aas
out
xchg
nop
cwtl
insl
ja
lret
inc
sbb
dec
xchg
fistpl
or
outsl
cmpsb
nop
daa
stos
inc
add
jmp
or
pop
movsb
push
je
and
mov
push
add
ficoms
adc
popa
sbb
cmp
fisttpll
mov
push
lahf
xchg
xchg
loope
push
js
test
andl
pushf
push
movsb
call
mov
cmp
or
sbb
or
sbb
mov
imul
cmc
pop
cmpsb
loop
icebp
mov
jo
adc
push
pop
sbb
loope
test
pop
int3
mov
dec
cmp
and
fidivl
ss
mov
push
out
je
mov
shl
cmp
aam
ret
push
inc
nop
mov
sti
xor
outsl
loopne
push
lret
adc
insl
pop
loopne
jecxz
inc
and
push
test
lret
pop
ret
dec
xlat
mov
push
and
sbb
dec
insb
out
add
jno
shlb
mov
fidivs
mov
mov
or
xlat
jle
push
out
fldenv
mov
mov
repz
and
test
arpl
cwtl
adc
repnz
leave
add
mov
xchg
mov
shl
mov
xchg
in
add
xchg
cmp
add
xchg
aas
xchg
push
mov
mov
leave
mov
lea
sub
pop
fimull
xor
ds
jne
jp
clc
ror
aad
ss
ja
sbb
out
scas
cmpsb
pop
sbb
lcall
adc
rorb
mov
xchg
test
jae
push
mov
add
ja
fsubr
andb
sar
push
aas
push
jnp
int
dec
out
xchg
repnz
dec
mov
adc
xor
jecxz
or
or
inc
enter
mov
shrb
pop
dec
int
mov
mov
dec
jno
push
lea
add
xor
mulb
test
jnp,pt
stos
mov
cli
shll
lock
mov
jecxz
pop
ficoml
dec
mov
movsl
push
test
insl
test
dec
mov
in
std
xor
inc
dec
test
push
xor
out
jg
pop
rol
mov
test
jge
flds
mov
and
mov
fdivl
inc
push
fmul
jnp
and
lods
or
mov
test
popf
xor
mov
verr
cwtl
adc
cmpsl
lods
pushf
inc
loope
inc
stc
sub
push
sub
cmp
pop
test
sbb
push
jecxz
and
sub
test
and
push
repz
mov
filds
inc
mov
cmpsl
shrl
pop
inc
jo
addl
pop
imul
aaa
mov
cmp
push
mov
loopne
ret
mov
mov
mov
inc
mov
es
rcrl
cmp
inc
pushf
pop
mov
ja
mov
mov
aad
ficomps
cmp
add
out
adc
insb
es
mov
xor
icebp
je
mov
lret
cmpl
or
dec
dec
in
pusha
cmp
mov
mov
mov
sbb
dec
dec
repz
mov
mov
leave
pushaw
fisubl
jbe
add
mov
mov
pop
hlt
adc
dec
mov
lret
xchg
cmp
mov
push
push
sar
pop
repnz
mov
pop
and
push
lcall
xchg
in
cld
pop
push
dec
je
sbb
cmpsl
addr16
dec
lea
sti
jle
mov
jns
lods
mov
movsb
incb
add
pop
dec
cmp
movsl
fst
loop
sub
sub
popf
xchg
and
jbe
negl
jno
imul
mov
add
lds
and
mov
test
jo
imul
shr
ljmp
mulb
pop
orb
fisttpl
mov
iret
loope
sub
repnz
mov
mov
lods
push
test
xchg
pop
and
jge
adc
dec
jl
fdivrl
pop
jmp
pusha
in
dec
add
xor
ljmp
stc
xchg
add
sub
mov
adc
icebp
sbb
inc
inc
hlt
div
iret
js
int
js
sub
sbb
frndint
fdivp
push
test
xor
xlat
pop
inc
jne
repnz
lcall
dec
out
ret
sbb
sbb
mov
jnp
les
add
loop
xchg
add
push
jl
andb
mov
dec
sub
or
pop
sbbl
push
cmpsl
movsl
sub
dec
jnp
or
shl
mov
mov
pop
add
in
lret
scas
push
dec
mov
rcrb
lods
fdivl
pusha
push
mov
call
out
mov
out
xor
lret
xchg
lret
gs
gs
jge
scas
ret
inc
ret
clc
mov
and
jo
test
pop
mov
roll
pushl
test
lret
jmp
imul
or
pop
xlat
jmp
mov
sub
fimull
sti
lods
lea
fildl
popfw
pop
pusha
dec
sbb
rcll
xor
push
in
mov
lret
sbb
scas
rcll
adcb
daa
rclb
and
dec
dec
fwait
arpl
pop
nop
js
pop
push
sbb
arpl
fxch
fs
pop
movsl
rolb
and
push
sbb
pop
dec
data16
pushf
decb
jg
insl
mov
cmp
sbb
mov
push
popl
mov
lods
scas
scas
test
jg
das
loopne
push
mov
inc
sbb
idiv
jg
jl
inc
push
jb
xchg
shll
daa
inc
lock
add
dec
aas
or
ss
push
sti
mov
dec
iret
rolb
enter
popf
mov
push
dec
adc
sbb
mov
stc
icebp
or
sub
dec
pushf
inc
or
enter
popf
mov
pop
imul
hlt
test
ret
loopne
mov
add
das
mov
mov
out
sahf
clc
dec
or
or
xchg
adc
add
movsb
cmp
dec
data16
outsb
ss
and
lret
sbbl
cmpsl
inc
dec
lods
scas
mov
mov
in
xchg
shrb
xor
and
add
test
xchg
xchg
or
push
mov
fwait
pop
nop
xchg
xchg
dec
adc
sbb
cmp
and
lahf
mov
jl
xor
aam
push
cmp
pop
adc
adc
clc
addr16
or
ja
out
jp
loope
into
adc
ds
pop
insb
aas
xor
outsb
pop
inc
or
push
into
fildl
mov
mov
iret
insb
mov
rcrl
mov
shll
push
pop
adc
test
jl
je
dec
push
jecxz
sarb
mov
orl
lcall
dec
add
pop
mov
inc
jg
or
jnp
push
mov
pop
and
popa
cmpsb
scas
push
pop
and
cltd
cmpsl
addl
orl
pop
movsb
aaa
jp
ret
cmp
add
sbb
or
mov
outsb
xor
lods
inc
aam
or
inc
stc
mov
jecxz
lods
arpl
xchg
rcrl
push
orl
pop
jmp
mov
xchg
rcr
and
or
repz
inc
ds
faddl
adc
in
mov
out
pop
mov
mov
aas
cltd
icebp
in
add
bound
cltd
fs
pop
test
aas
iret
adc
sbb
jp
incb
and
outsl
and
add
ja
dec
in
aam
test
mov
mov
jg
add
mov
dec
test
jo
adc
fcoms
xchg
ss
loop
and
sub
mov
je
ss
mov
addr16
dec
fisubs
cmc
pushf
imul
inc
jae
or
xor
shl
out
ss
ror
popa
aas
inc
out
ss
icebp
in
mov
in
scas
popa
test
bound
cmp
cmp
lret
cmp
pop
and
mov
and
cmp
hlt
dec
push
pop
je
jge
and
cwtl
ds
int3
paddsw
xchg
lock
inc
lret
cmp
lods
and
mov
in
cltd
dec
adc
fnstsw
or
enter
adc
pop
ja
arpl
sbb
cmp
push
add
push
inc
ss
not
jge
push
sub
jb
dec
jmp
dec
jmp
mov
sbb
divb
imul
sar
ret
pop
imul
pop
loopne
clc
and
iret
xlat
rdmsr
jl
mov
jbe
repz
fmul
mov
mov
cmc
xor
dec
dec
movsb
ret
adc
rorb
sahf
lods
cmc
xor
cmpsl
ret
sub
aaa
cmp
clc
rorl
mov
sbb
jl
aas
cltd
mov
imul
int
and
lock
ja
push
pop
sub
imul
add
test
loope
clc
lods
test
cld
sbb
and
push
les
lret
mov
stc
push
push
push
sub
mov
and
fisubs
sbb
gs
shll
dec
lods
test
andb
jg
lds
jns
out
dec
jmp
and
jns
nop
shll
xchg
mov
loopne
inc
push
push
fldcw
arpl
adc
cmp
dec
cmp
or
lahf
jmp
pusha
cli
imul
divl
jo
out
inc
jnp
andl
inc
cmp
inc
dec
inc
xor
ret
cmp
leave
out
mov
sti
ret
addr16
xchg
js
jecxz
xor
or
or
aaa
mov
sbb
mov
imul
loop
jmp
and
test
push
adc
test
repz
jmp
or
jecxz
arpl
or
test
jns
popa
and
add
int3
pop
daa
nop
inc
scas
xchg
clc
les
push
cmp
push
stc
or
adcb
js
imul
inc
mov
icebp
fs
or
sti
mov
lret
jge
mov
xor
inc
and
or
ds
dec
iret
out
inc
fwait
mov
je
mov
movsb
vxorps
scas
cli
xchg
daa
xchg
or
repnz
fsubp
in
xchg
fdivp
cmp
negb
cmp
cmp
js
dec
sbb
popf
xchg
cmp
ja
int
cmpsl
outsb
add
test
push
sbb
fcmovu
xor
push
gs
jnp
addr16
xchg
lds
sti
cmpsl
std
pop
jae
or
mov
pop
xlat
jp
loopne
ficoml
pop
jmp
outsb
das
push
mov
inc
cmpsb
lret
sbb
repnz
imull
mov
push
mov
gs
sbb
cmp
dec
in
inc
mov
push
fistpll
add
inc
in
mov
ficoms
int
add
add
movsl
jmp
xlat
jecxz
loop
sbb
js
push
adc
and
jmp
sub
mov
call
sbb
xchg
pop
adc
sbb
or
cmp
mov
push
jg
mov
sti
cmp
lock
add
fs
push
mov
fimull
jecxz
js
or
push
mov
jge
popl
mov
add
jmp
test
push
sbb
push
lcall
into
lods
dec
sbb
subb
call
or
mov
inc
lahf
mov
cmp
xchg
xor
das
and
or
or
xchg
das
add
call
and
aam
pop
inc
cmp
aam
adc
jbe
pop
dec
cmp
xchg
inc
push
and
fnsave
inc
inc
mov
js
cmp
scas
cmp
fsts
jb
fwait
mov
std
jp
sub
test
inc
dec
mov
scas
xchg
addl
cmp
xchg
mov
sarb
cwtl
or
in
data16
add
adc
cltd
imul
icebp
daa
dec
call
jle
cwtl
xchg
lahf
mov
push
rcl
outsb
and
push
mov
movsb
adc
movsb
addr16
add
in
lods
lret
cmpsl
ss
movsl
sub
xchg
dec
bound
mov
pusha
mov
xchg
push
cmp
adc
mov
scas
mov
data16
insl
cltd
xor
shlb
inc
jnp
fidivrl
nop
mov
or
sbb
adc
push
adc
sbb
addr16
dec
adc
shl
sbb
les
push
xchg
stc
dec
mov
inc
xor
mov
dec
int
loopne
pop
out
movsl
in
movsb
xor
xchg
lretw
in
dec
push
push
rcll
pop
ret
lea
mov
test
mov
mov
leave
pop
mov
xchg
lret
sbbl
sub
pop
adc
add
xchg
std
jecxz
lahf
int3
in
mov
clc
adc
movsb
je
outsb
loop
add
pop
mov
bound
pop
inc
cld
in
loop
repnz
mov
mov
dec
ret
mov
sarl
jle
push
xor
inc
testl
fldenv
fisttps
iret
ljmp
ljmp
icebp
popa
mov
mov
mov
je,pt
mov
clc
aas
push
jae
jne
jle
cltd
out
xchg
jbe
popa
sbb
cmp
and
dec
cmp
sbb
sbb
cs
xor
mov
push
int3
je
add
sub
movsb
nop
pop
push
sub
shrb
xor
push
out
push
jp
leave
stc
jl
mov
pop
outsl
scas
pop
push
xor
xor
add
dec
xlat
sti
jno
adc
lahf
rclb
movsb
xor
std
cltd
popa
or
test
div
int
jno
mov
pop
shlb
push
enter
stc
xchg
add
pop
les
and
xchg
imul
fbstp
mov
push
daa
call
jp
icebp
shrl
test
and
jecxz
aad
imul
enter
outsl
outsl
fdivs
pop
push
or
add
stos
hlt
add
mov
sbb
fmull
jnp
ror
cmpsl
pop
je
cs
jl
gs
pop
pop
add
jb
xchg
stos
mov
xchg
popf
add
outsl
cli
adc
pop
les
je
icebp
or
aam
or
jg
jns
adcb
lcall
inc
ja
ret
fisubrl
lds
out
xchg
mov
or
das
mov
jo
xor
jo
nop
xchg
mov
xor
pop
int
data16
jbe
xchg
inc
in
xor
pop
or
jns
int3
adc
ret
pop
test
lods
mov
jb
push
lcall
outsb
fstl
stos
jne
push
loopne
jb
test
sub
add
icebp
add
movsl
loope
dec
sbb
sub
outsb
int3
push
int3
adc
push
inc
insl
out
push
push
pop
pop
push
mov
int
xlat
dec
out
sub
mov
pop
jo
mov
sub
dec
fcmovnb
adc
jb
mov
imul
push
push
js
mov
insb
les
les
cmp
sbb
sub
divl
inc
ds
push
jl
push
cmp
xchg
dec
jno
ljmp
mov
mov
jae
cmpsl
cltd
sbb
in
bound
dec
lock
adc
lahf
lods
xchg
or
ss
in
popf
stos
mov
jns
mov
inc
add
clc
das
sub
or
mov
sbb
mov
insb
sbb
pop
inc
xor
mov
xchg
dec
mov
mov
stc
enter
test
stos
repnz
iret
cmpsb
sub
sbb
adc
pop
push
and
leave
in
xorb
dec
lods
xchg
fdivrl
and
call
decl
adc
xchg
xor
aaa
mov
std
inc
sub
cmp
shl
mov
rcr
dec
sbb
mov
fs
adc
fsubrl
lods
cwtl
cmp
dec
add
fidivrl
lret
xor
jmp
pop
movsl
bound
rclb
and
mov
jo
mov
pop
cltd
je
fsubrs
mov
or
mov
shrl
pop
jb
pushf
or
incl
push
stc
sub
das
push
jge
ret
sub
hlt
xor
push
fisubrs
daa
inc
fmulp
fcmovne
jge
dec
iret
add
popa
stc
fstpl
scas
jns
mov
push
adc
in
jo,pt
xchg
mov
ss
adc
in
fisubs
in
clc
inc
loop
daa
pop
mov
push
dec
sarl
xor
inc
add
icebp
fs
push
les
mov
mov
jbe
lahf
mov
cli
pop
test
test
sti
mov
add
pop
jae
xor
arpl
mov
push
lock
repz
push
and
push
xchg
xchg
jno
fiadds
movsb
pusha
or
scas
jle
inc
sbb
or
fdivrs
test
cli
das
or
pop
loope
insl
loope
xor
cmp
inc
mov
pusha
ljmp
and
scas
ljmp
or
mov
xlat
lcall
dec
jno
pause
sbb
cmpsl
daa
mov
sub
xor
xor
and
sbb
out
jge
sqrtps
int3
fs
lock
lock
and
mov
imul
mov
pop
push
push
int3
rclb
das
in
int
mov
cwtl
and
outsl
add
fwait
mov
xchg
pop
xchg
jg
xchg
inc
mov
mov
call
cmp
faddl
pop
push
out
nop
adc
inc
or
mov
int3
cmp
and
cwtl
add
nop
pop
mov
in
mov
jecxz
xor
mov
sub
fsts
aam
ss
fwait
sub
movsb
clc
out
adc
hlt
divb
mov
scas
idivb
mov
xchg
test
and
rcll
sbbl
inc
jbe
jae
loop
out
dec
popa
testb
roll
int
jg
testb
ret
mov
lds
adc
repz
mov
loope
imul
or
pop
mov
xorl
pop
inc
adc
pusha
push
bound
xchg
or
add
loop
pop
fistpl
mov
jge
fs
jge
mov
sub
ds
xor
or
pop
repnz
inc
inc
ds
mov
or
out
sbb
pop
ds
aam
xor
cmpsl
pop
add
out
cmp
loopne
fisubs
cld
add
push
pop
addr16
pop
or
shlb
dec
sub
xchg
mov
hlt
rol
xchg
cmc
sbb
dec
push
mov
jecxz
jl
and
mov
out
ljmp
xor
out
jbe
sti
lods
mov
jno
or
outsb
repz
and
xchg
xchg
fsts
mov
inc
in
pop
clc
adc
insb
cltd
iret
mov
std
push
scas
insb
xchg
mov
mov
jae
xchg
hlt
pminub
push
pop
push
pop
xor
sub
test
jg
insb
in
jbe
cmp
mov
or
pop
sahf
mov
mov
lock
fwait
jmp
into
std
push
and
jge
out
jae
jmp
jg
imulb
inc
mov
aas
aam
xchg
dec
dec
xchg
divb
pop
xchg
test
mov
rolb
jge
mov
std
or
daa
out
adc
mov
icebp
cmpsb
sub
aas
fbstp
cmp
out
pop
int
nop
push
inc
mov
add
fbld
ja
aaa
orl
pusha
cli
sub
clc
add
in
call
mov
push
out
fildl
lds
adc
mov
dec
and
sbb
in
xchg
push
sahf
cmp
mov
inc
pop
arpl
cmp
aas
push
aas
xchg
cltd
scas
aas
mov
adc
xchg
mov
cmp
or
inc
sub
and
mov
cs
jae
pop
out
xor
daa
pop
cs
and
loop
test
in
sbb
outsb
xchg
ljmp
in
sub
jbe
cmp
test
push
sub
push
mov
add
pop
notb
sbb
mov
or
dec
icebp
int3
sub
jmp
nop
pop
pop
popa
pop
mov
and
fimull
pop
sar
jae
dec
mov
imul
push
or
or
and
xchg
fwait
enter
dec
fst
or
lods
jle
imul
lock
das
mov
mov
out
in
in
mov
pop
js
inc
dec
jne
nop
incb
jae
mov
imul
les
adc
add
in
push
xor
dec
testl
adc
dec
add
ja
idivl
mov
adc
push
push
push
push
rorb
ja
lgs
xchg
mov
icebp
stc
enter
jb
xor
mov
add
jo
mov
or
cmp
into
push
iret
ljmp
mov
out
nop
stos
jbe
imul
fdivs
addl
xchg
jp
adc
in
int
mov
mov
shlb
xchg
cmpsb
pop
or
and
imul
add
cmpsl
sar
cmp
adc
dec
mov
push
xchg
inc
fcomps
mov
cmp
stc
scas
push
lock
sbb
mov
mov
lea
cli
and
aas
mov
mov
mov
cmp
jb
pop
sbbb
inc
test
sbb
mulb
and
cwtl
lahf
pop
repz
loope
and
fucomp
push
inc
mov
xchg
lea
out
jmp
mov
fs
shrb
inc
pop
push
mov
das
and
mov
sub
test
dec
shrb
es
and
iret
bound
sti
cmc
dec
xchg
scas
inc
shl
in
lcall
xchg
add
shlb
inc
movsl
and
lcall
jg
insb
outsl
inc
xchg
push
dec
xchg
imul
add
inc
movb
jge
push
xchg
dec
push
leave
dec
lret
pop
dec
adc
mov
test
add
add
cmpsl
push
sbbb
mov
out
mov
cmc
push
inc
shl
lds
scas
xchg
xor
ljmp
aas
inc
add
fisttpll
mov
lods
mov
std
call
and
jbe
ljmp
xchg
mov
sbb
pop
inc
cmc
ret
rolb
mov
sub
mov
into
lret
sbb
sahf
repz
xor
nop
fidivs
scas
sub
decl
add
sarl
push
fcmovu
bound
insb
mov
mov
push
jne
scas
cmp
imul
sbb
xchg
aaa
cmp
adc
pushf
sahf
mov
inc
int
cmove
sub
xchg
inc
mov
add
add
daa
dec
cmp
mov
loop
popf
into
outsl
in
loope
cmovp
loopne
xor
add
js
scas
jl
cli
arpl
xchg
xchg
js
fcomi
fdivrp
popf
dec
jle
jp
hlt
loope
mov
mov
and
mov
xchg
pop
jp
movsl
fnstsw
stos
mov
add
out
daa
sti
fisubs
ret
fdivr
movsb
adc
repnz
jge
aam
lcall
mov
dec
pop
lds
mov
addb
dec
int3
xor
ret
ret
lahf
dec
loopne
sti
stc
cmp
lods
int
jp
mov
inc
mov
dec
xchg
cwtl
jge
add
cmp
push
sub
shrl
adc
mov
jmp
mov
add
mov
adc
mov
xor
in
repnz
adc
mov
loopne
pop
pop
ret
ss
xchg
mov
movsb
push
test
addr16
mov
dec
mov
mov
lock
cwtl
jb
iret
daa
sbb
fisttps
sar
imul
jne
andb
pop
ja
adc
xor
or
add
jge
sub
cmp
imull
xchg
mov
and
mov
xor
aaa
rolb
jge
sti
mov
sarl
daa
cmp
adc
pushl
jecxz
out
fnstcw
pop
cmp
stos
int3
shl
lret
jmp
xor
int
out
mov
or
mov
xchg
xchg
js
cmp
pop
cmpsl
nop
and
std
pushf
cmpsb
push
shll
sbb
mov
scas
xor
mov
mov
xor
cmp
mov
cmp
imul
sbb
mov
pop
aaa
dec
pop
and
and
jle
lods
sbb
dec
and
test
arpl
addr16
fcmove
xor
rclb
cmp
mov
ja
lds
jb
mov
jo
adc
mov
aaa
leave
outsl
cmp
add
iret
pop
test
cmp
gs
outsb
rcl
pop
orb
cltd
inc
jg
jmp
or
jmp
clc
mov
shll
dec
test
je
mov
dec
les
pusha
pop
xor
imul
loopne
dec
cli
adc
mov
sahf
or
sub
sub
mov
push
mov
or
mov
outsb
push
leave
xchg
sub
imul
fiadds
or
jnp
nop
filds
daa
or
inc
fdivs
inc
test
inc
mov
das
or
push
test
pop
pop
repz
les
adc
pusha
and
pop
dec
lret
mov
sub
adcb
pop
jge
rcl
sbb
fdivrs
push
fsubs
movsl
gs
sti
cli
ds
xor
and
adc
sub
fstp
cmpsl
je
jno
inc
dec
jns
sbb
jp
test
mov
xrelease
fidivrs
ror
add
or
mov
pop
leave
nop
lahf
mov
mov
in
in
test
mov
jno
hlt
pop
imulb
ret
scas
xor
stos
push
das
mov
jne
xchg
mov
push
fwait
xor
xchg
cmp
in
pop
jbe
sbb
jle
inc
add
jmp
movsb
aaa
popa
test
push
push
mov
mov
or
sub
mov
xchg
or
in
icebp
mov
jne
xor
cmp
push
sbb
xor
adc
cmp
sarl
xchg
jb
push
pushf
xchg
sbb
ds
adc
and
cli
lods
cli
or
notl
aad
pop
test
mov
adc
gs
or
inc
inc
ret
mov
sarl
and
iret
icebp
mov
repz
sti
leave
testl
mov
jge
and
mov
stc
inc
stc
imul
xchg
stos
stos
incl
or
inc
cmpl
inc
push
lret
shr
and
mov
mov
divl
lds
xlat
pop
test
adc
out
inc
lret
xlat
mov
dec
repz
add
dec
add
sub
ds
addr16
lods
loop
pop
jne
sbb
clc
loope
or
jo
imull
outsl
mov
data16
dec
aaa
sbb
cmp
mov
out
fucomip
pushf
clc
sbb
cmp
idivb
ret
mov
sbb
push
xorl
inc
cltd
jns
lret
inc
mov
test
and
das
stos
xor
int
js
out
in
outsb
push
add
mov
pusha
and
push
out
mov
jae
imul
push
xchg
int3
aaa
adc
arpl
flds
popf
mov
int
in
fmull
repz
fmuls
or
test
shrl
sarb
jg
ja
mov
scas
jg
les
out
inc
dec
pushf
fstpl
int
inc
icebp
mov
js
xor
sbb
push
pop
idivl
dec
xchg
and
or
repz
mov
stos
test
and
lods
pop
pop
xchg
xchg
adc
or
pop
imul
inc
xor
mov
or
xor
aad
rorl
sbb
jmp
pushf
sti
adc
rol
jmp
pop
in
clc
insb
inc
fcomps
xchg
repz
sub
pop
mov
or
dec
mov
dec
xchg
jno
pop
pop
icebp
sub
inc
into
shrb
inc
cmpsl
xchg
test
push
rorb
sti
call
inc
push
ds
mov
dec
mov
adc
xchg
mov
jb
inc
dec
add
jns
rcrb
inc
outsl
js
add
aam
rcrl
pop
ficoml
cmp
mov
push
idivb
pop
adc
pop
cld
stc
rorb
jp
cmpsb
insb
sbbl
inc
aas
push
pusha
push
mov
sub
test
out
sub
sub
lods
mov
test
roll
lods
fstpt
or
mov
lret
jl
insb
shrl
lahf
cltd
xchg
lds
xlat
mov
mov
out
push
shlb
adc
int
push
aaa
iret
fstl
repz
dec
xor
push
cmp
fs
ret
fadd
sbb
cwtl
and
adc
pop
pop
scas
movsl
or
je
fsub
aam
push
push
mov
jns
cmp
clc
in
ss
mov
mov
and
int3
in
jmp
and
shl
cmp
or
in
cltd
addl
les
push
fsts
xlat
sbb
cli
loop
sbb
push
pushf
sbb
test
fstps
cmp
dec
sbb
fwait
lods
mov
pop
pop
hlt
aas
dec
cmp
in
fnsave
ficomps
dec
jle
xchg
xchg
mov
aam
fcmovb
mov
cmp
fimuls
hlt
sub
test
insl
xor
mov
sti
out
inc
jae
inc
in
add
out
popf
loop
and
jge
insl
jb
int3
adc
sub
cmp
fcoms
push
pusha
rcr
add
cs
es
mov
adc
outsl
pop
add
pop
out
call
sti
out
cmp
ljmp
outsb
and
push
shlb
jno
mov
pop
jno
sbb
add
lret
lock
cs
jo
bound
or
jbe
mov
bound
cmc
inc
loopne
sbbl
shl
sbb
sahf
test
xchg
mov
ficomps
mov
push
mov
les
testl
or
or
sub
loope
lcall
dec
jl
pop
cmp
adc
xchg
repnz
sbb
test
idivl
inc
lahf
enter
pop
addr16
or
push
cli
pushf
repnz
add
add
dec
mov
out
cmc
scas
lea
cmpsl
popf
gs
mov
leave
lret
insl
fcomps
int
cmp
mov
scas
dec
lea
ss
cli
jmp
lea
dec
sub
js
filds
or
pop
ja
movsb
push
inc
and
xorl
shl
jmp
pop
out
cmp
jae
and
popf
dec
fadds
xchg
or
or
adc
mov
sub
adc
or
lret
out
pop
filds
in
add
adc
xchg
lods
xor
xor
mov
lahf
mov
repz
inc
imul
inc
inc
shlb
xor
dec
imul
sbb
in
jnp
lods
cmp
popf
jae
jge
jnp
add
test
imul
int3
sub
cmp
push
aad
jbe
cmp
out
pop
fmuls
inc
lahf
pushl
cmp
jbe
mov
loopne
scas
mov
gs
lock
push
cmc
iret
loop
mov
jbe
adc
loope
xor
in
push
lods
add
and
repnz
paddq
mov
pushf
pop
lret
scas
test
jae
out
mov
inc
insl
sahf
sbbb
and
push
js
add
and
faddl
aas
jns
aam
mov
in
cmp
cmpsb
leave
sahf
jnp
mov
xor
sbb
pop
mov
sub
dec
jmp
sti
roll
cs
sub
aas
xchg
lret
ret
mov
xor
ret
arpl
add
mov
scas
push
and
push
or
mov
xchg
idivb
mov
push
mov
popa
shrb
inc
fs
ja
cmp
jmp
xor
xor
fildl
bound
xchg
js
aam
xlat
push
and
cli
push
xchg
aas
jno
ss
inc
cmpsl
dec
lods
or
push
add
jnp
cmp
jle
loopne
add
fnstenv
push
lds
mov
mov
cmc
lock
aad
cwtl
in
jle
mov
or
pop
and
ret
pushf
xchg
stc
out
lret
fildl
push
cmpsb
xor
push
lds
adc
clc
inc
or
jle
mov
into
sub
das
outsb
mov
cmp
js
pusha
mov
es
cmpsl
push
cld
fsubp
add
addr16
xchg
mov
mov
stos
mov
daa
pop
push
jo
xor
inc
fisubrl
cmp
adc
ss
rcl
xchg
sbb
addr16
movsb
daa
mov
test
in
or
jmp
mov
mull
loop
das
jge
cmpsl
aam
jmp
xor
cmp
and
aas
pop
cmp
xchg
stc
sbb
and
dec
mull
mov
rorb
adc
push
int3
cmpsb
decb
xor
mov
iret
lods
mov
mov
repz
repnz
out
fimull
push
sbb
push
mov
repz
scas
popa
or
mov
mov
dec
add
sbb
adc
jp
arpl
lcall
inc
push
fwait
stos
in
dec
add
xlat
mov
lcall
loopne
add
pop
adc
inc
loop
test
jns
es
ret
imul
mov
xchg
cmp
aas
es
and
fmuls
arpl
mov
bound
pop
cmp
cmp
push
loope
inc
loope
stos
pop
adc
sbb
shlb
aaa
jb
repz
pop
not
dec
adc
push
lods
lods
adc
repnz
adc
scas
fstpt
test
in
stos
lret
mov
push
pop
push
bound
fcompl
inc
dec
cmp
mov
ja
adc
sbb
sub
cmpsl
repz
loopne
rorl
test
sbb
movsl
and
push
jmp
dec
imul
mov
push
xchg
mov
adc
sub
dec
cmpsl
es
xor
cmp
aaa
ret
mov
repz
push
or
dec
push
call
inc
dec
out
xor
push
pop
push
lods
push
pushl
push
in
daa
pop
push
mov
dec
test
add
xchg
jb
loop
popa
pop
sub
test
cmp
push
loope
pop
ss
ja
es
adc
ds
mov
jae
daa
pop
aas
testl
mov
xor
jmp
repnz
cmp
dec
cmp
shlb
and
dec
icebp
xchg
in
lahf
inc
push
pop
add
fistl
outsb
mov
mov
insl
inc
rcrl
int3
inc
mov
mov
fbstp
and
dec
add
adc
incb
xchg
and
test
movsb
rorl
mov
mov
pop
ja
outsl
orl
inc
leave
adc
into
pop
aaa
xor
aad
in
shlb
and
inc
aas
imul
gs
push
ljmp
dec
jb
dec
lods
mov
daa
cld
push
ljmp
lea
scas
fwait
mov
pop
sarb
sahf
push
out
je
int3
test
xchg
sub
icebp
fsubp
jne
cmp
jne
ret
cmp
sahf
mov
jmp
je
lea
jmp
push
out
mov
bound
js
mov
xor
ret
sarb
add
pop
out
sub
in
loope
mov
dec
cmp
dec
pop
popa
xor
pop
aam
mov
andl
nop
sarb
arpl
mov
pop
leave
jecxz
stos
sub
mov
sbb
mov
xchg
movsl
lods
sub
adcl
or
aam
ss
hlt
fsubl
sub
and
mov
pop
jae
sbb
push
pusha
mov
pop
cmpsb
lock
out
mov
jae
cmpsl
pop
adc
xchg
leave
fcom
in
pop
mov
mov
push
pushf
insl
lods
lods
hlt
jne
sub
mov
push
lret
push
int3
rcll
jl
cwtl
lcall
sub
test
inc
data16
jb
ja
pop
ficoml
cltd
shl
mov
pusha
xchg
add
lock
sbb
and
add
push
pop
mov
cmpl
pushf
mov
sbbl
mov
aaa
sti
fmull
pop
movsl
repz
lahf
fs
push
out
outsl
sti
int
std
ret
mov
imul
insl
enter
xor
imul
cmc
and
sti
stos
xor
es
aam
jg
xchg
inc
pusha
cmp
inc
sbb
inc
sbb
xor
leave
int3
pusha
insb
jns
jmp
mov
rcl
mov
push
movsb
shr
add
jno
sbb
xor
xchg
fwait
dec
xchg
lret
push
add
mov
jns
or
lods
pop
sbb
mov
es
icebp
daa
cld
andb
outsb
faddl
jnp
pop
mov
or
shrl
xchg
lods
stos
jae
shll
fdivrl
addb
test
and
leave
cmpsb
sub
lret
clc
pop
cmp
or
fistps
add
xchg
icebp
in
ss
aaa
test
popf
adc
xor
or
cli
jle
cmp
xchg
xchg
shr
mov
aad
dec
inc
shrb
rolb
jne
pop
and
mov
xchg
hlt
xchg
xchg
ret
xor
std
jno
test
inc
mov
cmpsb
push
addl
cmp
sahf
mov
rcll
xor
loope
sub
outsb
cmpl
xlat
shlb
dec
je
cwtl
out
pop
lret
aad
lret
mov
mov
fisubs
push
cmp
les
push
sbb
xor
cs
mov
adc
push
sarl
xor
jecxz
mov
inc
aad
mov
inc
pop
xor
mov
mov
cs
lret
inc
dec
jnp
sub
adc
cmp
push
cli
xchg
jle
enter
insb
dec
and
cli
add
imul
in
aad
sub
dec
lds
scas
jg
push
xchg
jne
ret
push
add
stos
arpl
sbb
daa
pushf
xor
sub
add
fdivrl
lds
test
or
testl
mov
sbb
stos
jg
jnp
fcompl
jno
lods
inc
xor
mov
sti
fmuls
pushf
dec
mov
ret
mov
pusha
and
pop
or
xor
cwtl
test
mov
enter
push
sub
fsubrl
addr16
inc
cmpsb
lahf
fsubs
sar
adc
iret
mov
fs
lret
cmp
insb
lea
push
jae
arpl
into
mov
pop
sbb
push
cmpsb
cltd
ja
rcll
or
dec
cltd
ja
int3
sub
shlb
pop
fldt
mov
mov
stos
imul
in
and
adc
xchg
mov
xchg
dec
jg
xor
sbb
leave
in
ds
sbb
imul
sbb
fildl
sti
in
setg
adc
push
xchg
std
sbb
scas
dec
daa
pop
xchg
dec
push
push
aas
jne
jp
lcall
js
push
mov
loope
scas
xchg
pop
adc
push
subb
lds
je
sbb
dec
xchg
mov
test
pusha
and
add
leave
test
or
dec
inc
dec
push
pop
shrl
leave
push
lods
sbb
add
dec
scas
aaa
or
jmp
dec
out
mov
leave
stos
dec
mov
dec
es
enter
mov
or
mov
mov
test
in
fisubrl
in
pop
xchg
pop
sub
jecxz
lds
or
ja
mov
jmp
xchg
mov
fildl
adc
push
es
mov
dec
fiaddl
xor
or
clc
xor
nop
mov
cmp
lds
out
dec
pop
mov
imulb
sbb
insl
lods
add
addr16
into
mov
and
lods
shl
rclb
rcll
insb
dec
arpl
and
cmp
stc
push
sub
loopne
cmp
cmp
push
push
in
stos
push
xchg
stc
hlt
jecxz
add
inc
push
int3
or
cmc
lret
gs
repnz
adc
push
lods
sub
push
out
pop
out
cld
jg
daa
jne
mov
xlat
aad
int
xchg
test
dec
jns
test
xchg
fadds
pushf
hlt
inc
mov
dec
mov
or
pop
pop
aas
ss
push
add
cld
imul
rorb
out
or
pusha
sub
mov
dec
es
jns
scas
fiaddl
mov
jmp
mov
push
cmc
loopne
dec
push
adc
fdivrl
and
ficomps
call
dec
daa
dec
addb
and
ds
std
aas
inc
loopne
jb
scas
popa
mov
mov
mov
mov
repz
xchg
add
icebp
push
mov
jge
cmc
idivb
mov
adc
mov
movsl
cmpsl
mov
dec
cmc
iret
xor
inc
outsl
sub
cld
push
add
cmp
aaa
cltd
jns
mov
adc
mov
imul
in
mov
jbe
repnz
cmp
pusha
adc
cmpsb
pushf
int
in
insb
adc
pop
pop
add
xor
movsl
mov
gs
jbe
mov
rclb
sub
insl
push
and
sub
sti
adc
jne,pn
cwtl
nop
lods
mov
int
adc
push
fcoms
in
mov
out
mov
lods
test
xchg
inc
xor
xchg
mov
test
mov
aam
jg
mov
cmpsl
jge
dec
xor
xchg
xchg
leave
ja,pt
inc
dec
test
push
repnz
daa
leave
std
decl
mov
stc
jo
imul
out
lret
out
jo
scas
ret
add
pop
out
mov
dec
arpl
mov
push
leave
fmul
sti
scas
es
stos
out
cld
inc
mov
mov
scas
popf
or
mov
mov
add
dec
mov
xchg
sbbb
aas
mov
lahf
bound
and
into
cmc
bound
ss
sbb
push
mov
inc
sub
sub
in
add
pushf
jb
out
out
pop
inc
loope
mov
repz
je
add
xlat
repz
cltd
sub
mov
fildl
pushf
out
jo
mov
jp
cwtl
mov
nop
cmc
fcmovnb
hlt
sub
adc
pop
mov
mov
fcoml
cmp
daa
mov
mov
dec
dec
mov
jbe
aad
and
les
or
pop
sti
movsb
gs
dec
cmpb
inc
inc
pop
add
imul
and
inc
mov
mov
and
jmp
das
cmpsl
mov
outsb
loop
dec
fwait
and
sbb
or
lldt
jecxz
or
stos
xchg
outsb
xor
in
stos
xchg
or
popf
xchg
xor
rcll
test
in
or
pop
and
add
and
sbb
mov
pusha
cmpl
imull
jae
cmpb
pusha
xor
and
inc
jp
inc
dec
fmull
ret
nop
and
fwait
inc
sbb
ljmp
mov
inc
lods
lea
mov
jge
mov
and
ja
call
cltd
fnstsw
jne
ret
outsb
sub
inc
sti
ss
jne
cmpsl
jae
data16
cs
mulb
testl
fwait
cmp
cmp
leave
insl
cmp
nop
sbb
push
dec
mov
or
adc
xor
addr16
inc
cmpsl
pop
and
es
jg
pop
dec
rorl
pop
dec
mov
loopne
xor
sbb
sub
lods
inc
insl
in
jmp
cmp
ret
jecxz
scas
cmp
push
xor
xor
dec
xchg
in
stc
jmp
adc
test
enter
sbb
xchg
in
dec
js
mov
mov
xlat
and
fnsave
cltd
jno
dec
lock
lret
xchg
cmp
mov
dec
fsts
daa
push
out
jmp
daa
inc
cmc
repz
sub
mov
arpl
ret
pop
jae
in
inc
lds
pop
je
xlat
push
xchg
je
jmp
cld
inc
lcall
pushw
mov
pop
mov
aad
shr
push
xchg
push
inc
sub
roll
fists
inc
lret
pshufw
test
loop
jl
push
insl
and
mov
dec
loopne
outsl
dec
pop
dec
mov
inc
pop
pop
dec
and
xchg
stos
push
cwtl
xor
leave
inc
push
shr
sbb
mov
mov
xor
jmp
test
mov
cs
in
sbb
ss
rorb
sbb
movsb
pop
into
push
mov
sbb
or
out
stos
cmp
adc
imul
xor
cmpl
fcoml
inc
subb
aaa
jge
frstor
leave
push
add
push
jno
cltd
mov
pusha
add
out
cmp
inc
repz
cmpsl
mov
shll
mov
push
insl
inc
aad
mov
xchg
sub
xchg
inc
leave
cmc
mov
mov
pop
add
push
cmp
mov
jle
and
fucomi
loop
sub
icebp
sbb
pop
fistl
dec
jg
orl
xchg
cwtl
fcompl
dec
jo
and
inc
pop
xchg
rcrl
jp
nop
add
enter
xchg
adc
imul
stos
jg
and
xchg
fstpl
test
jb
cs
hlt
jecxz
jnp
mov
xchg
or
sub
popf
andl
push
rorb
pop
aas
adc
mov
pop
lret
mov
pop
shrb
out
cmp
fbstp
xlat
jbe
cmp
ja
xchg
lods
cmp
adc
in
sahf
loop
inc
add
rolb
push
ljmp
clc
scas
xor
aas
loopne
mov
decl
pop
jne
jp
fildl
or
popa
or
insb
push
or
sbb
notl
sahf
out
divb
sahf
cs
pop
and
test
sbb
call
xor
add
lcall
clc
add
in
leave
cmp
add
and
fs
repz
addr16
aam
cmp
mov
pop
xlat
mov
insb
pop
mov
nop
pop
fs
inc
and
inc
cmpl
cmpsl
scas
rcr
add
fisubl
push
mov
repz
les
adc
cmp
mov
push
push
or
cmp
dec
xor
jecxz
sub
adc
lret
sbb
mov
or
data16
test
cmp
stos
jns
pop
out
xor
jg
pop
in
lahf
or
push
cltd
mov
sub
sub
push
cmp
sbb
xchg
je
int3
mov
bound
cli
stos
xor
pop
inc
ss
push
xor
loope
xchg
lock
adc
mov
push
js
addl
inc
add
cmpsl
mov
xor
xor
mov
sbb
mov
movsb
nop
lds
push
jno
mov
cmp
mov
sub
std
aas
cmp
stos
ret
inc
sbb
jae
add
fcomps
loop
mov
push
jo
mov
leave
jle
cmp
mov
pop
mov
xor
hlt
test
xchg
xchg
das
loop
push
sub
ja
lods
test
cmp
fwait
cmpsl
xorb
movsb
adc
inc
movb
and
pop
jbe
popf
push
mov
cmpsb
push
cmp
outsl
or
adc
imul
add
jge
in
cmp
jmp
test
adc
fcoms
mov
std
in
int
sbbl
push
adc
add
xor
add
out
adc
mov
negl
add
ds
xchg
jg
loope
xchg
sub
je
test
push
cmc
xor
inc
rol
mov
inc
test
in
std
adc
sub
arpl
aaa
cmpsb
xchg
mov
dec
dec
in
loopne
lods
stos
adc
sbb
inc
xchg
stos
pop
sub
pop
inc
lods
lcall
pop
jecxz
jp
sbbb
in
and
ret
std
fstl
movsl
insb
fimull
xor
mov
or
pop
sti
into
jg
mov
mov
push
into
fistpll
js
sub
dec
sub
shrb
mov
jnp
pop
idivl
out
jmp
and
jb
xor
jb
ret
out
lock
jecxz
in
negb
fiadds
push
or
jae
fcoms
push
push
lds
adc
or
mov
xor
adc
mov
mov
mov
sti
stc
arpl
and
add
ficompl
adc
mov
cltd
xlat
mov
insl
push
inc
inc
mov
xchg
add
cmp
mov
out
jecxz
test
insl
pop
and
sbb
cltd
fs
inc
and
ret
jge
dec
pop
adc
fcomp
inc
xchg
jl
fstl
adc
push
ret
in
pop
imul
repz
or
sbb
mov
xchg
imul
xchg
add
popf
or
lret
adc
testb
mov
lahf
xchg
add
out
loopne
enter
or
out
pop
jmp
sarl
inc
sti
add
arpl
sub
jge
pushf
push
mov
pop
pop
sub
fdivrl
adc
and
sahf
enter
fldenv
cmp
push
inc
inc
data16
fcomps
sbb
pop
jecxz
jno
shrl
adc
push
and
push
xchg
pop
jno
pop
pop
loop
outsb
cld
push
stc
in
xor
rolb
push
jle
sbbb
mov
pop
std
loopne
mov
cmpsb
push
push
inc
jne
loope
push
loopne
testl
sbb
push
decl
jns
jbe
push
adc
pushf
jmp
imulb
movsb
xchg
jmp
outsl
movsl
les
mov
or
and
push
push
movsl
push
repnz
in
cmp
imull
shr
adc
cmpsb
sub
mov
repnz
pop
xlat
fiaddl
cltd
daa
push
add
movsb
popl
dec
loope
or
mov
jns
cmp
fnsave
das
sbb
cmp
or
jns
dec
cs
pop
and
mov
out
mov
ret
cltd
xor
xchg
fs
mov
sarb
mov
sub
mov
movsb
out
sbb
mov
push
mov
pop
pop
jmp
cmp
xlat
addr16
jecxz
push
sub
sbb
fs
popa
gs
xchg
pop
ret
ror
push
mov
cmp
fisubl
mov
repz
push
or
mov
insl
popa
mov
jnp
pmullw
add
sub
xor
out
cwtl
je
aad
mov
pusha
popf
outsb
mov
adc
mov
and
lods
push
pop
lods
movhps
cmp
cmp
inc
and
jecxz
jae
dec
mov
inc
ljmp
into
and
adc
dec
sbb
ror
int3
inc
mov
pop
sbb
mov
outsl
outsb
fwait
jg
push
cmp
insb
adc
push
orl
inc
ficompl
pop
mov
mov
mov
stc
mov
push
or
jbe
dec
xchg
das
and
adc
enter
repz
pop
push
mov
test
ficoms
mov
sbb
cmp
clc
cmp
dec
repnz
pop
xchg
mov
sbb
repnz
pusha
mov
and
jge
mov
decb
sbb
ret
popa
mov
or
call
fimuls
and
mov
hlt
jg
mov
xchg
arpl
jecxz
enter
pop
je
add
dec
sahf
jae
xchg
push
push
jno
ret
popa
xchg
inc
mov
adc
mov
lods
data16
jl
mov
popl
shlb
enter
popf
and
pop
xchg
or
xchg
jae
les
sub
leave
lock
xchg
mov
addr16
stos
lcall
mov
inc
push
jecxz
lret
jle
dec
sbbl
dec
lods
xchg
add
add
addr16
jbe
ds
cwtl
fists
jb
shlb
lods
dec
adc
sub
jmp
add
out
mov
or
jp
xchg
push
sti
jne
roll
mov
and
loopne
arpl
xor
xchg
push
sub
sbb
xorb
fildll
fists
adc
rolb
xor
sbb
repz
adc
lods
jle
lahf
aad
add
inc
xor
xchg
add
jne
testl
mov
jno
jne
sbbb
cmpsl
xorl
mov
pop
jno
repz
ja
rclb
jb
xchg
or
ja
sub
push
mov
cwtl
scas
xor
xor
ret
int
dec
jbe
enter
adc
ljmp
bound
mov
jmp
jle
xchg
dec
lods
inc
insb
adc
popa
and
xchg
arpl
adc
mov
jno
mov
lock
cmpsb
push
jecxz
and
inc
sub
psrld
daa
xchg
jnp
inc
adc
loopne
dec
adc
mov
mov
das
jo
push
mov
ss
mov
mov
push
add
fiaddl
stos
aas
imul
test
ret
insb
mov
insl
cld
jg
ss
push
stos
jo
xor
rorl
int3
pop
dec
in
outsl
adc
or
mov
inc
pushaw
je
cmpsl
sahf
les
jl
xchg
mov
outsl
adc
pop
jg
outsl
ret
iret
enter
add
es
cmpsl
cli
decl
arpl
out
imul
outsb
push
out
mov
jl
pop
repnz
call
dec
inc
xor
or
int
inc
mov
das
je
xorl
mov
add
pop
xchg
sub
jnp
test
mov
out
pushf
ljmp
outsb
rol
pop
fstpl
fildll
mov
add
out
cld
sti
xor
mov
orl
aad
mov
rclb
mov
dec
nop
push
hlt
sbb
adc
sbb
lcall
mov
fsubrp
jo
and
imul
insl
stos
sub
xchg
jge
lea
clc
sahf
fisubrs
cs
push
adc
mov
dec
push
mov
cmpsw
inc
inc
repnz
aaa
ljmp
mov
fisubrs
xchg
jp
mov
fidivs
and
jae
push
mov
and
pop
inc
sarl
pop
xor
out
mov
shlb
sbb
pop
inc
pop
shll
sbb
sbb
adc
les
lock
rcll
shr
int
sarl
lret
je
lret
xor
push
pop
dec
jae
rcll
daa
mov
imul
mov
mov
out
pop
call
mov
data16
push
cmp
repnz
dec
cmp
out
jmp
push
pop
jp
in
mov
dec
push
stos
pusha
inc
mov
add
pop
es
jns
push
lods
cmc
sbb
jo
outsl
xchg
enter
sub
es
mov
push
push
pop
aad
mov
push
testl
in
mov
cmpsb
clc
xor
mov
pop
loopne
ds
add
sbb
inc
pop
bound
jp
fidivs
in
out
xor
pop
imul
lods
arpl
fistps
jo
mov
insl
ljmp
imull
sub
stos
or
jbe
cli
lods
and
ja
fsub
xcrypt-ctr
cmpsl
pop
push
popf
jg
and
xchg
hlt
mov
pushf
cmpsl
xor
aad
add
lods
and
lock
scas
xchg
push
jbe
lea
xchg
xor
xchg
push
in
mov
dec
pop
and
pusha
sbbb
in
lahf
xor
popf
movsl
add
pop
cs
dec
nop
cmp
mov
in
test
ljmp
dec
lret
les
pandn
xchg
jne
mov
sbb
pop
xchg
lock
inc
fwait
stos
push
and
sub
js
jg
in
cli
inc
xor
orb
lods
jmp
inc
gs
lret
arpl
inc
leave
and
addr16
pop
icebp
sbb
and
jl
dec
jnp
mov
push
into
mov
js
sub
bound
sbb
pop
pop
imull
xor
cwtl
aas
pop
mov
cmp
mov
mov
adc
lret
pop
inc
ds
sbb
hlt
dec
mov
jle
or
cmp
divb
sub
add
xor
push
cmpb
lea
popf
fldl
and
loopne
push
lock
clc
lock
mov
pop
mov
jp
push
sti
test
mov
sahf
bound
or
pushf
cmp
dec
fs
test
aam
divl
push
stos
leave
hlt
xlat
hlt
ret
or
jmp
jmp
sub
mov
sub
leave
dec
cs
icebp
pop
mov
xchg
xor
out
xchg
xor
pop
dec
jne
jecxz
lods
pop
mov
fpatan
add
fcoml
and
scas
jbe
rcll
inc
cmp
mov
inc
add
push
and
bound
jp
lcall
movsl
out
test
mov
jecxz
shl
cltd
in
lods
and
mov
lock
mov
fadds
es
ret
les
cmp
scas
mov
inc
lods
xchg
inc
cmp
jmp
dec
repz
inc
and
cmpsl
push
rorl
pop
sub
insl
pop
push
shlb
xchg
inc
fidivs
sbb
lods
add
xor
mov
je
into
imul
lret
std
jns
pop
sub
push
xchg
add
dec
insb
xchg
sti
icebp
sti
addl
mov
xchg
lock
mov
ror
stos
movsb
test
inc
add
and
and
mov
lock
orb
mov
std
xor
sbb
pop
inc
xor
mov
jo
into
pop
test
adc
ja
inc
or
jge
cmp
xchg
ljmp
cmp
rep
mov
cld
fisubs
or
in
or
pop
mov
in
cwtl
popa
insb
aam
pop
jl
xchg
dec
pop
dec
js
add
push
lock
gs
arpl
pop
inc
outsb
into
or
add
xchg
sahf
arpl
jp
fwait
mov
dec
aam
mov
insb
cmp
xchg
sub
scas
ja
or
pop
jmp
sub
aas
xor
and
lea
sbb
popa
or
cmpsb
push
pop
jns
sbb
ret
dec
cmc
fcomi
iret
pop
ds
ss
or
push
add
pop
jmp
and
push
in
mov
mov
add
jae
bswap
sub
dec
out
push
push
fidivrl
fdivrs
sbb
pop
adc
outsl
cmp
cmc
mov
in
dec
pop
push
sub
xor
adc
and
mov
adc
int3
mov
xlat
scas
jle
sbb
testl
ds
pop
cld
daa
inc
mov
push
inc
enter
push
add
add
mov
and
mov
or
push
mov
arpl
rcl
cmpsl
sti
out
ljmp
fnsave
outsb
fiaddl
mov
in
add
jno
rcll
test
adc
mov
xchg
inc
int3
xchg
ret
sbb
lock
pop
xlat
jae
popf
xchg
inc
push
inc
inc
sub
dec
call
aas
pop
das
dec
inc
mov
cmp
enter
mov
push
pop
ficoml
jno
jo
int3
aas
leave
test
mov
jg
pop
mov
jmp
mov
iret
xor
push
rclb
in
mov
gs
or
inc
stos
fwait
dec
or
mov
dec
jb
add
adc
dec
out
in
cmp
mov
cmp
push
aas
out
inc
outsb
cmp
ds
jo
lods
pop
jnp
fdivl
mov
mov
xor
add
inc
inc
idiv
lret
cmpsl
ret
mov
inc
jge
pop
ljmp
mov
clc
dec
add
mov
loope
mov
mov
pop
data16
stos
push
or
xchg
or
push
testl
outsl
test
push
mov
xlat
cmp
int
lret
or
mov
into
dec
fcmovb
and
rcl
addb
mov
sahf
dec
ja
inc
mov
gs
push
pop
jmp
imul
jle
mov
sbb
and
push
popl
mov
push
cmp
cld
push
js
lahf
add
pop
in
out
mov
jae
repz
stc
pop
cmp
adc
ja
insb
jmp
pop
jne
xlat
insb
ret
mov
addb
mov
les
fimull
cltd
test
jo
sbb
repnz
mov
adc
dec
mov
fisubs
test
mov
xor
imul
and
cltd
and
std
push
jp
prefetchwt1
pushf
sahf
lcall
jecxz
cmp
mov
cmp
lock
sbb
adc
in
mov
repnz
lahf
movsb
and
cld
push
int
jbe
lods
fadds
lret
sahf
mov
dec
inc
popl
jbe
sbb
icebp
adc
loopne
ds
and
scas
cmp
or
adc
dec
inc
jno
les
hlt
mov
ss
in
pop
popl
leave
adc
cmp
xlat
xchg
push
fs
or
dec
in
cmpsb
pop
dec
or
pop
arpl
shl
fmull
mov
inc
test
pusha
cmp
and
mov
push
and
mov
mov
cmp
xchg
pop
pop
lods
dec
push
xor
mov
fptan
jno
int3
dec
ja
es
insb
mov
xor
insb
sbb
lds
jecxz
push
dec
xor
shll
pop
mov
pop
loope
and
sbb
adc
insb
mov
inc
aaa
cmp
addr16
dec
add
push
imul
int3
pop
add
and
pop
push
xchg
lds
mov
or
add
insb
adc
arpl
sub
aaa
lahf
or
out
dec
out
nop
clc
icebp
sti
dec
out
leave
fimull
xchg
jmp
adc
mov
cmp
fcompl
mov
jb
inc
push
scas
rorb
mov
push
insb
bound
add
call
sbb
adc
inc
ret
sbb
push
mov
jbe
sbbb
ret
int
imul
test
pop
jno
cmp
mov
and
xchg
xchg
push
in
fwait
scas
jl
outsb
mov
cmp
xor
insb
fincstp
stc
xchg
bnd
jbe
mov
mov
outsl
pop
lret
insl
pop
jge
gs
jle
xchg
ljmp
sti
push
sahf
pushf
jb
cmp
cmpsl
loopne
stc
pop
sub
in
daa
xchg
mov
add
pushf
jnp
jbe
jnp
jb
sub
in
mov
mov
mov
adc
outsl
popf
lods
in
push
je
mov
pop
and
adcl
dec
loop
lods
jne
ss
leave
mov
xchg
imul
sbb
cmp
add
add
or
aas
outsb
mov
cmp
mov
jo
pop
pop
pop
and
lahf
dec
pop
pop
clc
dec
stc
gs
loopne
and
and
fwait
adc
les
push
lods
out
sarl
ljmp
or
xlat
push
or
and
ret
add
sub
jmp
repz
in
sub
daa
and
movsl
push
gs
pop
mov
icebp
mov
or
add
xchg
xchg
std
dec
aad
dec
cmpsl
jne
add
in
mov
pop
or
andl
mov
cmc
jne
push
adc
push
mov
out
ds
out
or
call
inc
push
jmp
xchg
push
inc
aas
jl
frstor
sub
out
mov
push
inc
jb
mov
ljmp
int3
in
adc
push
gs
cli
rorl
mov
aam
cs
sbb
out
jl
push
imul
test
xchg
xchg
es
dec
nop
adc
xchg
pop
imul
out
movsl
in
call
out
bswap
sahf
adc
cmp
add
loopne
dec
sub
je
mov
cmpsb
lahf
sbb
mov
mov
rclb
adcl
das
push
or
jne
sbb
int
hlt
mov
popf
andl
or
pop
adc
xor
aam
lret
lock
mov
mov
xchg
stos
cmp
and
ss
adc
stos
xor
pop
pop
aam
jno
pushf
pop
dec
fstl
mov
cmp
leave
push
jmp
scas
jl
lods
cli
sub
aaa
jle
pop
mov
rcll
mov
xor
movsb
popa
lds
add
mov
das
dec
ljmp
out
test
fwait
push
lcall
and
push
call
lock
dec
push
imul
mov
xchg
rcr
cmp
dec
jmp
nop
out
lea
gs
mov
and
mov
sbb
bound
mov
pop
mov
inc
sbb
dec
shll
cli
pop
fimuls
clc
push
mov
icebp
mov
xchg
pop
cli
or
push
xchg
push
daa
in
int
ret
outsl
arpl
in
testb
adc
and
data16
in
imul
fisttps
out
imul
lahf
movsb
mov
xchg
or
jg
divl
pop
jge
in
lods
dec
dec
push
jecxz
lcall
jl
ds
push
clc
fiaddl
or
mov
repnz
pop
dec
sub
loop
sub
shr
add
push
mov
adc
sbb
dec
push
incl
mov
in
pop
stos
mov
aaa
hlt
add
mov
sti
xor
push
xchg
jecxz
daa
out
arpl
fwait
shl
jge
dec
jecxz
sahf
cmpsb
les
cmpsl
out
or
cltd
push
sub
add
or
inc
and
mov
pop
mov
aad
xchg
or
inc
and
test
testb
dec
clc
or
loop
jg
adc
aam
std
jg
leave
das
sbb
mov
mov
push
jbe
mov
out
lcall
aas
out
push
ret
fldt
repnz
pop
test
shl
mov
mov
hlt
mov
test
mov
jecxz
in
idiv
push
add
out
cmp
xor
nop
sti
add
sbb
les
sbb
fsub
xchg
add
add
adc
jp
xor
jns
and
cwtl
push
movsb
pop
pushf
in
dec
pop
sbb
add
lea
rorb
lea
sbb
adc
push
mov
into
add
jb
andb
push
shrl
xchg
popa
push
mov
lret
int
sub
ds
dec
add
inc
lret
ljmp
cmc
pop
push
push
mov
add
and
stc
mov
or
and
lea
jne
adc
movsl
mov
lods
es
pop
dec
ja
cmpsb
fs
lret
push
ret
mov
lret
dec
repz
or
pop
loopne
inc
data16
test
sbb
and
lods
xor
arpl
in
dec
pushf
adc
jae
adc
negb
ret
mov
xchg
cmp
rolb
fsubr
dec
cmp
xchg
mov
lds
icebp
push
push
int
bound
movsb
xchg
sbb
test
pop
dec
jne
mov
pop
mov
push
inc
jecxz
cmp
scas
push
mov
jl
outsb
enter
loopne
xor
xchg
out
dec
scas
mov
jp
jp
lret
ja
mov
sbb
das
jl
xchg
ljmp
cmpsb
daa
stos
out
inc
pop
jne
push
lahf
push
jecxz
addl
mov
sbb
jecxz
movsl
cld
lds
jecxz
test
mov
pop
cs
insb
or
sti
jl
clc
sub
aad
mov
test
mov
mov
and
mov
push
mov
jno
dec
xchg
sbb
cs
push
mov
in
stos
xchg
popa
out
inc
int3
xchg
cmpsb
inc
clc
int
orb
and
inc
mov
imul
shr
outsb
ss
xor
sub
mov
jae
ds
cmp
and
add
inc
jbe
ret
outsb
clc
popf
ret
lahf
aaa
jnp
je
scas
xchg
mov
cmp
cmovae
mov
xchg
sbb
fisubl
pop
les
sub
pop
fstpt
addr16
pop
or
imul
xchg
sub
xchg
sbbl
mov
testl
adc
adc
pusha
push
cmpsb
xchg
repnz
adc
rcrl
jnp
out
out
inc
push
ja
inc
sub
das
lcall
outsl
ret
imul
out
push
lahf
jl
lret
adc
leave
inc
push
and
jns
mov
xor
dec
ret
or
xchg
pop
aas
jp
push
push
cmp
mov
mov
addr16
jnp
jp
cmp
or
push
sbb
sub
iret
cmp
scas
orb
adc
adc
jbe
cmp
xor
ret
pop
adc
or
adcb
aad
mov
xchg
xchg
mov
xchg
movsb
nop
xchg
push
xor
mov
xor
xor
adc
test
push
pop
in
dec
sub
jns
outsb
inc
hlt
ret
sub
cwtl
shl
inc
inc
ljmp
popf
movsl
and
call
adc
and
sub
or
test
in
repnz
hlt
adc
rclb
cmp
push
jns
inc
fiadds
and
lea
stos
and
push
cmpsl
sub
pop
lds
adc
mov
repz
jge
push
cmc
lods
mov
sbb
add
adc
xchg
outsl
sbb
pop
or
and
fbstp
pop
ljmp
or
cmp
and
mov
roll
pop
dec
out
mov
push
sub
push
sti
sub
lea
inc
push
jae
popa
mov
test
push
xchg
push
add
sti
lds
ds
adc
into
inc
lret
jmp
sub
fisttpll
ret
subl
outsb
sbb
aas
fsubrl
xchg
jb
mov
xor
mov
or
fcomp
xlat
cmpsb
data16
arpl
cmpsb
stos
int3
data16
sbb
xor
fdivr
pop
pop
xor
out
pop
cmpsl
outsb
push
jge
ret
pop
add
sub
xchg
adc
js
xchg
cld
mov
sub
outsl
cli
loope
adc
test
enter
das
xchg
lock
cld
push
mov
shlb
fwait
loopne
mov
and
adc
pop
or
ljmp
repz
mov
pop
sbb
pop
icebp
cmp
pop
pop
adc
sbb
scas
cs
sub
mov
addr16
sbb
sbb
push
js
dec
in
mov
lds
rorl
jae
add
cmpsl
cmp
cwtl
shl
les
or
mov
cmp
mov
leave
push
mov
je
xorb
test
lds
push
stc
cmp
and
xchg
into
rol
inc
outsl
addr16
jg
data16
les
cmpsb
js
xor
mov
push
inc
xchg
ljmp
sbb
sti
mov
pop
ret
repnz
addl
dec
and
and
das
std
mov
cld
lahf
add
test
aam
fwait
or
inc
icebp
sahf
insl
imul
test
sti
ds
jmp
push
jmp
push
sahf
push
inc
pop
les
fwait
xchg
jecxz
push
mov
push
pop
iret
rcrl
cmc
fcomps
ja
push
rcrb
cli
push
scas
fimull
fbld
enter
add
adc
rcl
adc
test
mov
dec
shlb
jg
xchg
dec
es
ret
jno
nop
inc
push
add
jbe
xor
leave
repz
xchg
in
enter
repz
cmp
jp
lods
push
jnp
in
pop
dec
xchg
popa
cmp
sub
adc
fdivrs
xchg
sub
into
test
arpl
mov
aad
into
add
decb
packuswb
xor
in
add
sar
loopne
xchg
jp
test
xchg
mov
inc
mov
std
repnz
movsb
mov
shll
roll
push
pop
cmp
cmp
cmp
dec
int
jnp
je
inc
mov
jge
push
gs
push
das
or
imul
into
js
cmc
pop
int
and
ljmp
and
cmp
inc
fidivrs
cs
xor
daa
push
pop
push
push
mov
sbb
lahf
sbb
out
sub
adc
sahf
mov
and
icebp
adc
or
cmp
jp
fdivl
push
sbb
or
subl
mov
cmc
lret
cmc
xchg
in
fsts
pop
dec
aaa
and
das
sub
sub
adc
aam
adc
adc
fnstenv
psubd
mulb
out
aas
gs
push
jge
mov
test
mov
es
fists
cmp
lahf
popa
mov
insl
cltd
xor
lods
mov
mov
out
je
mov
lret
pop
repz
xor
xor
data16
sub
xchg
inc
and
inc
mov
nop
or
mov
lods
cmp
stos
mov
mov
rcll
movsb
lods
jb
mov
sub
sbb
je
pop
inc
jns
add
ret
pop
inc
cmp
pop
stos
js
push
jle
cld
or
xor
mov
imul
sub
data16
mov
test
add
lock
mov
mov
or
mov
call
cmpsl
imul
pop
dec
pop
mov
cmp
insl
or
lock
js
mov
scas
fcoms
fdivl
mov
adc
dec
stc
pushf
dec
cmp
les
cs
in
mov
inc
mov
push
push
push
cmpsb
sti
stc
call
cwtl
jmp
mov
mov
sbb
dec
cs
adc
wrmsr
mov
popf
lahf
test
xchg
or
mov
push
imul
sti
pop
mov
rclb
ds
pop
inc
je
add
add
jl
mov
in
and
push
sub
popl
jne
cli
cmpsl
adc
ret
in
push
inc
mov
iret
mov
popf
adc
addr16
xchg
sahf
andb
xchg
icebp
dec
es
lock
lea
les
xor
add
outsl
in
js
ss
cmp
loop
pop
int
add
lcall
push
adc
jmp
mov
jbe
add
repz
fidivrs
jmp
inc
frstor
push
out
std
cmp
iret
rorl
in
jo
repnz
sub
ljmp
pop
and
mov
push
fcmove
dec
jge
push
cli
leave
inc
dec
cmp
fldt
arpl
icebp
mov
loop
fisubrl
shrl
mov
imul
je
lea
add
push
loopne
mov
loope
inc
pop
pusha
je
cmp
cld
adc
pop
adc
fwait
xlat
std
stos
sub
jle
shll
and
dec
jge
sbb
jecxz
cmp
add
dec
sbb
inc
data16
fstl
mov
fsubrs
pop
js
jmp
adc
pop
lods
xor
pop
push
cmpsl
xchg
pop
mov
js
push
push
ret
jne
mov
leave
jo
xlat
imul
mov
fs
cld
lds
rorl
jnp
jle
xchg
ss
rol
jns
insl
out
mov
push
fmull
lahf
pop
pop
adc
ret
sbb
push
inc
js
inc
inc
fdivrp
push
arpl
mov
dec
loopne
xorb
inc
ja
or
lods
mov
pop
xor
out
sub
cld
cld
repz
dec
lock
stos
int
push
sbb
scas
pusha
lret
or
xor
sub
iret
scas
jge
mov
dec
lcall
jge
push
mov
mov
sub
ret
add
das
add
xor
pop
addr16
sbb
pop
pop
daa
pushf
adc
stc
imul
jbe
xor
and
jecxz
adc
nop
cmp
pop
cmpsl
std
fisubrs
aaa
mov
addl
mov
lea
sub
fisubrs
push
pop
bound
push
adc
add
mov
es
notl
xchg
outsl
je
test
cmp
dec
icebp
mov
mov
mov
and
std
movb
fisttps
fimuls
pusha
pop
dec
sbb
push
inc
inc
mov
stos
nop
cli
aad
sbb
aad
pop
notb
jecxz
pop
mov
bound
mov
xchg
sub
dec
imul
mov
rcl
shrl
ficoms
in
fcom
jmp
out
pusha
and
dec
aam
pop
adc
pushf
lods
lret
xor
lcall
dec
inc
in
and
add
push
hlt
push
jmp
xchg
scas
ds
push
push
popf
cmp
or
lret
test
out
pop
lret
inc
mov
adc
xor
sub
or
jge
addr16
lea
stos
adc
lods
pop
dec
lds
xchg
sahf
test
hlt
scas
lcall
call
out
adc
imul
dec
call
lds
lcall
inc
sbb
movsl
aam
or
dec
sub
fnstenv
popf
or
dec
adc
jnp
lock
jmp
jo
arpl
add
mov
mov
push
pop
inc
test
xchg
mov
rclb
std
in
aad
arpl
loope
je
icebp
sub
gs
or
xchg
loopne
sbb
pop
lds
sub
mov
mov
cmp
fnstcw
add
push
lahf
stos
cmp
push
mov
cmpsb
jge
lahf
outsb
outsb
out
and
xor
rorb
in
adc
inc
pop
fcompl
pop
mov
jns
and
cmpsb
sub
xor
push
in
pop
jo
pop
shr
pop
push
add
mov
hlt
push
push
dec
pop
push
das
iret
dec
sbb
cmp
inc
inc
mov
jecxz
sub
xchg
mov
out
jle
inc
aad
xchg
insl
xchg
jae
xor
inc
cli
fs
idiv
movsl
cli
sbb
mov
cmp
les
jno
out
inc
stos
xchg
repz
fs
gs
mov
mov
outsl
iret
aad
aam
loop
ret
jb
scas
sbb
lods
jb
movsb
push
iret
adc
out
sarl
ret
notb
test
scas
je
adc
adc
lret
mov
sub
xchg
pushf
sahf
ret
sub
push
ljmp
mov
mov
comiss
and
shl
rcrl
movsl
out
add
cmp
inc
jns
dec
jle
xchg
lds
adc
hlt
imul
lahf
fcomps
sbb
jb
int
adc
loopne
testb
dec
cmp
and
mov
push
sbb
das
adc
nop
inc
jae
pop
les
or
inc
inc
and
add
and
leave
mov
or
ret
jg
pop
mov
and
cmp
mov
orl
dec
mov
mov
hlt
movsl
mov
ss
pop
push
xor
mov
lcall
bound
stos
jnp
push
and
ret
mov
inc
lock
addr16
les
int3
xor
shrb
imull
pop
and
add
xchg
aas
sbb
xchg
push
sbb
outsl
mov
adc
xchg
lret
jne
aad
add
xchg
dec
xchg
xchg
pop
xlat
imul
andl
fistl
push
movsb
rcll
stos
insl
mov
stos
out
push
xchg
lods
mov
mov
and
dec
adc
ss
inc
jnp
cwtl
rorl
sti
int
out
dec
popf
adc
push
movsl
into
push
mov
je
dec
mov
cltd
inc
mov
sahf
cmp
ljmp
lods
jne
inc
ret
fnsave
and
inc
adc
scas
mov
pop
mov
mov
outsb
dec
into
insb
add
movl
fld
jo
enter
cwtl
sti
push
inc
ljmp
mov
and
or
pusha
xchg
jg
mov
lock
cmp
fsubr
mov
mov
stos
fcomps
aaa
out
rorl
push
cwtl
cmpsl
enter
lahf
shlb
xchg
cmp
in
in
popa
mov
outsl
or
jle
shrb
pop
add
fmull
repnz
pop
jge
cltd
fstps
insl
jb
adcl
stos
inc
test
push
sub
xchg
icebp
imul
rol
ret
cltd
ret
jg
mov
int3
adc
fldenv
mov
push
loop
repz
adc
push
pop
mov
push
mov
and
xchg
jne
cmpsl
inc
aad
bound
sbb
aad
or
cmpl
stos
loopne
xor
loop
inc
xchg
dec
or
test
inc
mov
mov
inc
or
jle
cmp
leave
lock
sbb
std
push
aaa
sub
push
sub
inc
jae
out
push
pushf
imul
cmp
cmpb
mov
jnp
push
lret
aam
jb
popf
mov
lods
inc
push
pop
push
add
fidivl
mov
cmp
test
pop
imul
lock
jne
add
mov
or
fnstsw
adc
xor
jmp
pop
mov
cmp
icebp
lret
jne
dec
jb
bound
ficoml
bound
lds
or
lds
in
stc
xchg
dec
std
mov
sbb
inc
sbb
push
cmc
mov
or
or
call
dec
sub
dec
sti
mov
test
int3
pop
lcall
or
pop
pop
xchg
cmp
sbbb
mov
push
sub
scas
dec
pop
mov
jp
mov
push
nop
mov
xor
or
leave
lret
add
imul
fs
xor
fwait
pop
xchg
dec
loope
ds
icebp
mov
mov
loope
std
cwtl
dec
ss
sbb
pop
push
xor
and
xchg
xor
enter
or
stos
pop
push
mov
sbb
jg
cld
arpl
xchg
inc
pop
repz
inc
and
aad
das
das
or
fstpt
rcll
xchg
mov
enter
repz
xchg
shr
stc
sbb
mov
jae
das
dec
mov
lods
popa
sub
mov
xchg
and
jg
insl
movsl
add
and
stos
mov
sbb
sub
outsb
dec
shl
xor
or
push
inc
out
xchg
cwtl
cmpsb
cmpsl
cmpsb
cmp
add
mov
lahf
je
add
fdivrs
cmp
js
pusha
push
cld
add
imul
addr16
in
lock
mov
lret
push
xlat
sbb
xor
jecxz,pn
enter
mov
push
xchg
lcall
sub
icebp
or
loope
or
adc
mov
out
xor
aas
imul
stc
jmp
dec
push
cmc
xor
and
ss
shr
lahf
mov
inc
rorl
aad
enter
sahf
cmp
popa
jb
call
dec
sub
in
sub
or
out
pop
xchg
cmp
xor
sub
push
jnp
jecxz
repnz
gs
or
in
out
mov
mov
movsl
inc
cmp
jbe
xchg
dec
fnstenv
adcb
dec
and
rep
jno
add
add
cmc
mov
mov
cli
fiadds
cmp
xor
aas
cmpsl
jno
fsubs
mov
mov
fisttpl
or
call
xchg
adc
dec
push
xor
rcr
add
stos
xchg
xchg
cli
or
mov
push
movsb
mov
push
fimull
lds
in
rcrl
in
int3
popa
dec
and
cmp
cmp
loope
lock
inc
adc
sbb
cmp
pop
push
gs
or
nop
mov
aaa
xchg
cli
clc
push
jo
mov
fmuls
push
inc
imul
decb
inc
jle
mov
adc
push
popa
adc
ljmp
mov
sbb
in
and
jl
adc
push
xchg
outsb
sbb
xchg
sbb
cmp
jno
xchg
in
cwtl
and
mov
cmp
mov
mov
fstl
les
jbe
pop
push
bound
and
add
pushf
mull
push
pop
adcb
adc
test
sub
lret
mov
push
xchg
adc
jo
test
sub
and
imul
dec
lea
rcrb
decb
fdivs
cld
pop
xlat
inc
shlb
shll
mov
xor
mov
jbe
ror
adc
cmpsl
mov
mov
add
sub
xor
sub
push
rolb
cmp
icebp
loopne
aad
push
sub
test
push
addr16
test
das
pop
cwtl
mov
ljmp
mov
inc
mov
cmpl
aas
add
mov
sub
fs
sbb
cli
out
mov
mov
or
test
cmp
test
jge
mov
test
jmp
fisubrs
rcl
jg
popf
mov
popa
mov
jl
dec
test
arpl
fwait
push
cmc
mov
add
add
sbb
mov
inc
pop
dec
test
das
lret
jae
dec
pushf
mov
ds
scas
xchg
push
fidivs
dec
mov
ljmp
movsl
mov
movsl
fisttps
daa
xchg
mov
mov
adc
push
xor
gs
jge
inc
aas
data16
dec
mulb
add
add
imul
fildll
cwtl
and
filds
adc
roll
inc
out
sub
mov
out
shrb
cmc
lret
shr
stos
and
xor
push
cmp
fidivs
movsl
lds
push
add
je
mov
push
scas
lahf
sub
sti
shlb
sub
push
pop
popa
out
adc
lcall
and
push
and
incl
sbb
stos
cwtl
popf
mov
pop
aam
jmp
test
repz
push
imul
pop
aad
repnz
mulb
ds
test
dec
sub
adc
sbb
sbb
fcoms
fdivs
scas
dec
add
lret
int
sub
jne
stos
cmp
in
mov
lcall
cld
jp
aam
sar
dec
xor
mov
xchg
loop
adc
push
dec
cld
sub
int
cmc
daa
mov
fnstcw
ss
lret
fidivs
adc
mov
push
int
mov
mov
insl
push
xlat
icebp
lret
js
cltd
cwtl
pop
fs
or
or
pop
cmpsb
push
mov
mov
inc
adc
dec
movsl
jae
or
test
testl
mov
pop
add
sub
dec
pop
inc
mov
mov
mov
scas
dec
int3
fld1
pop
mov
and
jne
adc
jp
pusha
and
push
shlb
addr16
mov
push
push
pop
mov
ds
decb
in
rcr
js
in
in
cwtl
xchg
push
and
cwtl
loop
jno
xchg
imul
dec
cmp
jl
jo
mov
test
sbbl
loope
xchg
inc
push
mov
loopne
ss
divb
or
xchg
mov
xor
shll
adcl
lods
dec
add
and
dec
jl
mov
ret
push
cwtl
xchg
jmp
pop
in
loope
jo
pop
inc
mov
cwtl
pop
lods
mov
or
dec
mov
ja
lret
jb
adc
sbb
fadds
sbb
pop
les
aad
lods
sub
jmp
mov
pusha
clc
dec
test
cmpsw
ljmp
negl
add
out
push
or
lret
jae
repnz
jo
fldenv
mov
stos
ljmp
cmp
pop
nop
push
test
sbb
jnp
cwtl
dec
adc
sbb
dec
lcall
jnp
xchg
push
outsl
js
mov
xor
fdivl
pusha
adc
xor
sbb
and
in
adc
cltd
aad
outsl
movsb
xchg
add
inc
lret
push
ds
pop
mov
pop
js,pn
pop
jp
sub
mov
or
mov
inc
mov
fsin
lock
cmpsl
leave
icebp
movsl
and
jne
lods
fwait
xor
jg
pop
and
mov
push
inc
addl
shll
push
cli
imul
push
rcl
cmp
jbe
inc
xchg
jnp
and
in
lret
cmp
push
mov
outsb
popf
lret
add
into
into
pop
mov
roll
adc
and
aam
loope
adc
xchg
xchg
stos
pop
lods
gs
es
popf
out
fcoml
pop
and
pop
aam
inc
lret
cli
sbb
dec
sti
in
pop
jge
cmc
xchg
and
ja
push
jb
ret
sbb
pop
mov
push
ds
adc
cltd
stos
roll
push
cmp
dec
call
dec
sahf
pop
push
iret
mov
sub
or
es
sbb
pop
or
test
dec
adc
mov
sbb
popa
aas
push
fdivrs
gs
pop
inc
pushf
adc
stos
cwtl
addr16
lret
popf
movsl
bound
xor
mov
lret
jge
cmp
push
ds
cmp
popf
pop
das
js
jne
jecxz
repz
pop
inc
xor
andb
lret
push
jl
cld
mov
jecxz
push
or
mov
pop
push
adc
in
mov
clc
inc
pop
loopne
data16
pop
mov
mov
mov
pop
mov
out
fiadds
jmp
iret
arpl
pop
sub
push
xchg
mov
mov
lds
test
dec
mov
inc
lock
mov
adc
push
sti
mov
sbb
dec
xchg
pop
mov
shr
mov
cmp
movsb
push
movsb
jecxz
ss
leave
lcall
addr16
adc
add
xchg
in
mov
add
das
into
sub
sbb
cmp
fs
lcall
das
xor
xchg
bound
loope
cwtl
ljmp
dec
push
es
and
in
jg
jl
popf
aad
aas
push
fs
pop
lahf
dec
mov
sbb
pop
js
dec
in
pop
add
jg
mov
scas
sbb
hlt
add
lret
cmp
push
add
dec
stos
ret
mov
dec
std
xchg
in
push
adc
fsubrs
jbe
out
xchg
call
loope
cmpsl
cmp
cmp
push
ret
mov
rcrb
sub
out
push
mov
sub
pop
push
loope
or
in
in
loop
push
mov
and
sub
jnp
push
pop
pop
jae
xchg
sbb
fldl
xor
imul
mov
outsb
cmp
jle
pusha
sub
into
ret
pusha
ret
in
cmp
push
pushf
xor
add
mov
push
xchg
arpl
dec
and
push
pop
mov
sbb
or
dec
adc
bound
test
and
fstpt
loop
loopne
pop
jno
rcrl
call
daa
pop
cmpsl
or
inc
cmp
mov
sub
push
pop
mov
ret
scas
fsubs
fst
mov
lret
push
or
dec
dec
pop
repz
jbe
out
jg
idivl
add
add
ret
mov
adc
xor
pop
xchg
lcall
addr16
xor
add
sbb
mov
jbe
je
divl
cmp
outsb
and
dec
push
test
or
sub
imul
xchg
mov
mov
push
in
test
shll
rcrl
cmp
or
repz
lods
jecxz
addr16
xor
push
and
ficompl
loop
mov
pop
mov
push
sub
cmpsl
sub
pop
mov
push
adc
sbb
pop
add
push
cmp
inc
jle
fcomp
shl
dec
or
push
sbb
pop
adc
or
xor
push
and
dec
jo
icebp
mov
pop
pop
push
rclb
enter
xchg
shll
and
add
inc
lods
cmpsl
roll
cmpsl
stos
xor
stos
ret
out
mov
fwait
mov
cmpsb
pop
jge
xchg
out
jns
sub
lods
daa
mov
repz
pop
pop
outsb
dec
js
or
jbe
mov
pop
add
sub
push
ds
add
mov
gs
lds
fdiv
cmp
aaa
sub
idivb
dec
inc
sbb
add
and
inc
cmp
pop
out
adc
xor
sbb
xlat
inc
mov
mov
test
or
xchg
mov
mov
fstpt
adc
out
lea
or
sbb
ret
xchg
sarb
xor
jnp
call
xor
lods
adc
xor
mov
rcll
pop
or
fcmovnu
pop
jno
jecxz
sub
sub
cltd
mov
dec
test
and
ret
xlat
cmp
sub
mov
xchg
xor
pop
ds
cmp
sub
call
sub
or
mov
jecxz
or
dec
xchg
test
outsl
mov
in
sahf
and
ret
xor
dec
data16
movsb
xchg
inc
loop
pop
cmc
push
lods
leave
dec
xchg
pop
scas
xor
cmp
xlat
mov
or
nop
push
ror
insb
xchg
jp
jecxz
xchg
push
ret
inc
xchg
dec
and
mov
andl
jo
pop
sub
cmpsl
scas
pusha
or
and
pop
mov
sub
dec
cmp
inc
loope
mov
aad
dec
outsl
out
xlat
loopw
mov
cld
mov
in
cmovbe
gs
pop
or
pushf
addr16
stos
mov
into
xorb
cltd
out
std
rolb
addr16
jo
xor
xchg
insb
imul
mov
adc
cmp
or
shrb
push
iret
jmp
iret
sub
xchg
loop
sub
inc
test
loope
mov
test
and
add
imul
jle
jmp
icebp
cmp
xchg
repz
dec
sbb
push
lahf
fnstenv
in
mov
pop
dec
cmpsl
jmp
jns
xchg
xor
stc
jle
push
push
jle
jge
ljmp
mov
rorb
sahf
cmp
mov
in
sbb
dec
call
cmp
movsb
and
inc
sub
cmpsb
mov
das
mov
insb
aas
je
xchg
data16
std
imul
mov
cs
or
out
scas
or
mov
lock
in
sahf
mov
and
mov
aad
and
inc
mov
or
jge
out
cmp
pop
lahf
push
lcall
mov
xchg
pop
inc
mov
ret
push
and
shrl
push
gs
mov
push
mov
sub
jg
cmp
pushf
lcall
out
addb
inc
jnp
sbb
das
lcall
push
mov
jmp
mov
pop
jl
mov
cli
clc
hlt
mov
jle
mov
adc
jbe
shll
adcw
outsb
sbb
popf
arpl
outsl
push
add
loope
test
adc
dec
mov
test
lea
push
test
push
scas
repz
push
lds
insb
insb
xchg
popl
cmpsl
loop
pop
rclb
divb
cli
adc
lea
test
mov
cmp
in
adc
out
adc
call
adc
sbb
sbb
dec
sbb
jb
test
mov
rorb
mov
mov
call
dec
adc
ficomps
cmpsl
sbb
sbb
outsb
mov
push
out
sahf
shrb
push
sbb
out
ljmp
insl
xor
cmc
insl
aas
dec
xor
mov
in
and
jmp
add
xchg
lods
sbb
sbb
mov
mov
pop
in
imul
les
mov
call
dec
mov
add
sbb
cmp
mov
pop
stos
test
inc
les
nop
mov
mov
sub
sbb
mov
add
orb
push
cmp
daa
add
mov
aam
ret
xor
push
mov
daa
incl
xchg
mov
fcompp
dec
jno
mov
fiaddl
cs
loop
idiv
dec
xor
out
lock
sti
mov
jno
test
add
xchg
in
insl
movsl
or
andl
outsb
std
xchg
mov
rolw
mov
jmp
xor
adcl
cmpsl
bound
ret
dec
scas
jge
incb
jns
or
cmpsb
mov
fs
sbb
mov
lods
sahf
mov
mov
mov
xor
das
jp
sub
out
or
add
mov
imul
mov
mov
les
add
nop
and
fldl
or
mov
mov
inc
cmp
test
rclb
lds
and
mov
xor
mov
pminsw
outsb
movsl
dec
aas
call
push
mov
mov
mov
inc
push
js
cmp
push
pop
jecxz
xor
inc
add
pusha
stos
mov
jmp
jno
mov
inc
inc
popa
cmp
hlt
dec
int3
add
lret
rcr
mov
mov
fdivl
xchg
push
addl
lret
mov
pop
mov
daa
pop
jns
sbb
fildl
push
stos
test
aas
aas
sahf
jns
mov
sarb
test
cmpsl
dec
dec
in
es
jae
jecxz
and
nop
andb
sub
cmp
je
leave
xor
movsl
adc
cmp
insb
mov
jge
test
pusha
xor
ret
jno
lods
lods
xor
mov
xor
push
popl
and
stc
and
mov
jo
cli
test
inc
pop
mov
aaa
mov
push
leave
xchg
insb
adc
imul
cli
cmc
pop
jmp
xchg
adc
repz
mov
push
movsl
shl
test
inc
popf
nop
mov
ret
test
and
sub
test
mov
outsl
pop
ss
dec
clc
push
sbb
mov
sub
enter
adc
mov
cli
loop
and
rcrb
xchg
adc
or
sub
mov
inc
sub
cmp
ja
lahf
ja
jae
mov
sbb
mov
repz
call
aas
bts
cmpsb
pushf
lds
mov
lret
pop
mov
adcl
std
sub
xchg
int
push
loopne
je
int3
imul
or
sub
mov
fidivl
lock
push
movsl
fiaddl
jl
xchg
call
scas
in
stos
sbb
adc
addr16
notb
lea
mov
outsb
mov
test
sbb
push
cltd
and
push
fbld
adc
insb
outsl
fs
adc
inc
xchg
sbb
add
mov
jmp
push
add
test
mov
jne
cmp
jns
testl
es
fdivr
or
iret
loope
arpl
shlb
xor
enter
inc
not
daa
mov
xchg
filds
adc
lret
aas
outsb
out
rcll
sub
daa
cmp
out
daa
iret
repz
pop
hlt
mov
mov
leave
stos
jg
add
add
clc
cld
mov
xchg
mov
shrb
ret
fs
popl
mov
xor
and
push
adc
sbb
sahf
adc
mov
addr16
andb
cmp
repz
je
lds
push
stos
andl
popa
xchg
inc
iret
jne
xor
jns
test
movq
push
mov
in
scas
sbb
arpl
cmp
mov
popa
lods
pop
push
std
popa
incl
cmc
lods
pop
lods
imul
xchg
stos
xor
push
push
arpl
sbb
aam
mov
mov
push
push
mov
push
lock
sub
dec
jge
dec
in
or
pop
fdivr
xor
popa
clc
hlt
adc
add
dec
mov
push
ss
inc
in
push
jne
outsb
rol
mov
out
outsl
jnp
movsb
fucomip
mov
dec
xchg
stos
ja
adc
ficoml
popa
xor
mov
lahf
stos
sub
sar
and
mov
jmp
jecxz
pop
push
repnz
fimull
inc
add
sbb
jo
pop
fsts
mov
aas
pop
jecxz
and
dec
xor
sub
int3
cwtl
jo
sub
inc
nop
pop
in
push
push
cmp
or
inc
inc
fwait
xor
lret
cmpsl
dec
push
xor
xor
push
adc
loop
nop
xchg
mov
insl
call
add
insl
lds
repz
and
add
xor
jb
xor
movd
mov
xor
sub
and
push
iret
fwait
test
push
sbb
jp
fiadds
sbb
dec
call
mov
xor
xor
mov
lea
push
sbb
ds
ficoml
xchg
pop
fs
bnd
mov
das
sbb
mov
cmc
xchg
cmovs
pop
cmp
inc
push
andl
push
xlat
js
sbb
into
popl
negb
fwait
lods
pop
mov
data16
into
jbe
jbe
pop
or
or
mov
jne
mov
adc
mov
mov
push
fst
cwtl
out
sub
testl
xchg
push
adc
arpl
fs
inc
aaa
cld
mov
jbe
insb
iret
imull
lea
xor
mov
popa
mov
push
in
jns
add
adc
and
lcall
inc
jge
or
and
in
cmp
pushf
in
mov
int3
push
cmp
mov
and
in
push
mov
dec
mov
movsl
push
cmp
stos
push
sub
add
lods
inc
pusha
jnp
cmp
insl
adc
xor
fs
xchg
mov
into
or
out
outsl
sub
movb
inc
pop
or
and
arpl
mov
mov
cmpb
sub
cmpsl
adc
cltd
or
insl
lcall
push
xchg
mov
insl
and
pop
xor
ljmp
xlat
lahf
mul
sub
cld
cmp
rclb
mov
add
sbb
icebp
inc
mov
push
cmp
push
cmp
js
and
js
inc
aam
leavew
add
lret
mov
stc
inc
mov
imul
pop
inc
jo
gs
push
dec
add
gs
ja
stc
fistl
outsb
jo
sub
xchg
int
stos
jp
loope
nop
add
mov
jecxz
jb
or
inc
mov
fsub
fisubrs
or
cmpsl
arpl
and
xor
leave
xlat
movsl
jo
movsl
fwait
sbb
push
incb
cltd
leave
ljmp
sbb
pop
repz
dec
lret
ficompl
jle
insb
jecxz
xchg
pop
push
pop
outsl
cmp
movsb
mov
sbb
inc
sar
dec
in
xchg
xor
dec
rcrb
filds
jmp
push
out
std
lahf
cwtl
and
in
lods
or
add
xor
decb
decl
mov
dec
adc
mov
pop
cmp
lret
xor
aam
and
test
xor
cltd
mov
sub
push
enter
cwtl
or
sub
jmp
push
pop
rcrb
pop
repz
mov
mov
push
rorl
mov
xchg
outsl
inc
roll
ret
push
sbb
fcmovb
adc
lret
inc
push
test
xor
mov
pop
xchg
inc
std
mov
push
cmp
cmp
dec
dec
mov
inc
jb
xchg
xor
dec
push
adc
mov
outsl
sbb
imul
scas
push
push
adc
les
jns
or
icebp
adc
mov
in
add
sub
out
mov
lods
sub
mov
mov
inc
pop
popf
push
add
add
sbb
aam
push
mov
add
pop
cmp
cld
adc
sbb
test
loopne
add
xchg
cwtl
les
pop
repnz
iret
int
loope
add
stos
popa
andb
sbb
in
rcl
jecxz
xor
into
or
mov
jo
add
xchg
push
sub
pop
je
int
test
mov
cmpb
xchg
shlb
mov
das
pop
sbb
mov
add
inc
iret
lock
sahf
insb
cmp
mov
outsl
rcl
shlb
cmc
push
icebp
xor
mov
adc
cmpsb
mov
fldenv
inc
std
xchg
and
aas
sbb
mov
dec
shrl
sbb
jbe
or
test
inc
dec
cmpsl
pop
jl
sub
adc
xchg
outsl
repnz
pusha
xchg
jnp
out
pop
push
cs
pushf
sbb
rorl
loope
or
repz
cld
lcall
jle
mov
push
insl
loop
int
jecxz
movsb
xor
pop
xchg
ja
ja
sti
mov
mov
data16
lods
stc
or
jecxz
mov
sub
das
jno
dec
lds
xchg
lret
jmp
loopne
jecxz
nop
mov
inc
sbb
xor
push
xor
aam
inc
fwait
add
loopne
dec
add
mov
and
and
sbb
out
ret
sahf
imul
sbbb
cli
int3
jle
jb
pop
mov
and
hlt
adc
dec
pop
and
movsl
mov
loop
mov
sahf
testb
out
push
outsb
shll
es
lock
lret
ret
lods
cmc
stos
inc
xlat
push
jge
dec
mov
jp
imul
xchg
gs
mov
addl
mov
in
sbb
push
cmpsl
popa
rclb
and
xor
jns
inc
push
inc
jp
subl
add
hlt
mov
sbb
cmp
mov
das
shll
jo
scas
out
cld
nop
sbb
repnz
mov
jno
cltd
jo
lods
inc
popf
jecxz
jae
mov
push
popa
cld
jno
mov
dec
jge
push
mov
mov
lock
stos
fcoml
pop
gs
test
aas
sbb
out
push
cltd
xor
insl
test
or
lcall
mov
xchg
pop
lock
es
movsl
ds
jg
js
xchg
pop
or
lods
and
fwait
pop
dec
inc
loop
loope
insl
mov
icebp
cs
mov
inc
sub
scas
out
jb
aaa
sub
popa
mov
mov
inc
insb
rcll
enter
rorb
sub
xchg
mov
ja
mov
xor
inc
popa
jge
mov
mov
into
add
aad
or
jge
stc
dec
pushl
and
and
mov
mov
rorl
aaa
aaa
outsl
jg
sbb
jl,pn
jg
pop
push
arpl
cltd
xchg
push
pushw
cld
jo
jg
xchg
xor
sahf
popa
add
mov
mov
repz
sub
jl
and
jne
xchg
xchg
push
icebp
sar
rolb
movsb
inc
mov
xchg
ja
addr16
in
dec
sti
int3
jg
inc
rcl
imul
out
sahf
fwait
or
mov
jne
lock
ljmp
xchg
enter
jle
xor
add
sub
int
ret
stc
aam
push
mov
imul
pop
dec
sub
mov
ret
sub
shll
pop
xchg
xchg
sub
cmp
inc
in
mov
push
jb
lcall
lret
jb
jle
adc
mov
arpl
movsb
in
sbb
mov
test
and
xchg
int
loopne
mov
adc
es
les
cmpsb
pop
mov
hlt
in
add
lods
xchg
and
pop
jo
shll
out
dec
jbe
leave
lret
rcr
jp
lods
jb
lock
loopne
sub
xchg
jno
sbb
mov
jge
dec
or
fistps
arpl
adc
xlat
lea
add
testl
fs
adc
lret
bound
sahf
mov
inc
dec
cmp
fwait
sub
mov
mov
cmpsb
pop
push
out
cltd
loop
shr
push
push
jae
or
cmp
in
push
cmc
ljmp
rolb
idivl
sub
dec
js
ja
xchg
repz
scas
push
adc
cmp
into
faddl
push
xchg
and
cmpsb
dec
into
int3
sbb
ret
pop
aad
mov
push
lds
outsb
test
xchg
dec
call
adc
dec
cmp
hlt
std
ljmp
and
insb
ss
inc
jnp
aad
cmp
test
pop
or
xor
pop
sub
sub
push
fbstp
sub
xor
xchg
sahf
adcb
dec
nop
push
aam
cmp
xchg
cmpsb
xor
nop
xor
mov
inc
roll
clc
pushf
push
cmp
arpl
je
xchg
cmp
pop
sti
lods
and
push
inc
aad
popf
push
push
movsb
sahf
orb
ret
pusha
imul
jle
fs
shlb
mov
mov
cmp
fwait
gs
leave
xor
or
pop
scas
xor
xor
in
es
in
jnp
sub
pop
ficoml
ficoms
mov
and
lahf
or
inc
aam
test
xchg
inc
ljmp
and
cmp
in
mov
or
imul
push
movsb
out
lcall
orb
test
push
push
jmp
dec
push
rorb
mov
sbb
cmp
icebp
pop
mov
mov
movsl
insb
inc
pop
adc
xchg
pop
fbld
xor
arpl
popf
jmp
repnz
sub
out
loope
pop
xchg
pop
jno
dec
mov
adc
addb
inc
addr16
scas
out
pop
push
mov
nop
int
lahf
cmp
daa
pushw
shll
sub
imul
mov
test
hlt
out
push
test
pop
fs
fildl
and
mov
stc
cs
jl
or
inc
push
cltd
jo
gs
mov
sub
ret
sub
add
std
in
xchg
adc
and
cmpsb
pop
sbb
out
test
inc
or
ss
sub
add
jns
lret
js
xchg
imull
sbb
iret
sbb
adc
adc
push
push
fwait
pop
aaa
jmp
scas
pop
or
xchg
pusha
push
addr16
cld
cmp
and
dec
imul
add
popa
call
cmc
test
cmpsb
or
mov
push
xchg
aam
std
test
test
inc
jae
mov
add
xor
push
es
jno
outsb
and
ja
inc
int
xlat
add
pusha
cld
push
mov
in
jne
pop
and
dec
dec
loop
pop
xor
movlps
pop
add
push
sbb
dec
rcl
lret
push
lret
fcmovb
loop
mov
xor
lods
push
loopne
mov
xor
push
adc
lcall
loop
adc
dec
enter
or
cmp
jae
inc
popa
repnz
std
xor
xor
push
or
clc
cmpsb
jnp
inc
mov
mov
scas
jo
fistl
xor
mov
out
mul
cltd
test
mov
sbbb
pushf
xchg
in
sub
mov
aam
js
sbbl
dec
outsl
into
add
add
mov
push
mov
rcrb
push
cld
add
int3
adc
pop
inc
pop
xor
test
inc
jae
adc
inc
insb
mov
xchg
mov
sbbb
push
out
inc
mov
imull
xchg
std
xchg
aad
sbb
dec
sub
jmp
lahf
cwtl
mov
pop
adc
popa
cld
dec
mov
scas
push
sub
outsb
mov
mov
loopne
movsb
jp
inc
jl
and
and
mov
popa
inc
ljmp
jmp
xchg
mov
aas
cmp
adc
xlat
add
pop
sub
test
push
retw
and
pushf
mov
cmpsb
out
mov
mov
mov
mov
fptan
lret
iret
jge
jp
push
rcrb
dec
pop
sub
sti
mov
cmp
out
fisttpll
arpl
pushf
add
mov
push
jecxz
inc
mov
addl
fs
push
inc
in
lods
ret
xchg
mov
stos
repz
ss
or
ljmp
in
mov
and
leave
ljmp
jle
or
cld
scas
into
lods
repz
adc
inc
pop
and
enter
cli
sbb
test
dec
lahf
fisubs
loop
cmp
xchg
lcall
lods
notl
scas
repnz
lods
jecxz
idiv
dec
sbb
clc
frstor
jns
out
sub
xchg
in
cli
jle
cmp
sahf
jnp
and
ret
inc
pop
loope
add
cld
cmp
ds
int
roll
sahf
iret
push
dec
stos
mov
fld
es
leave
cli
cmp
scas
fsub
lahf
mov
cmp
fisttpll
aad
jecxz
popa
mov
mov
or
pop
nop
mov
sbb
int
sub
dec
or
inc
adc
cmp
and
cltd
or
push
inc
mov
ja
add
in
jmp
movsl
fldcw
js
stc
insl
aaa
fs
cmp
dec
xor
scas
and
push
lea
mov
in
mov
mov
dec
inc
dec
mov
push
mov
nop
cltd
test
ljmp
sti
test
and
mov
inc
insb
clc
pusha
movsl
loop
xchg
sbb
jmp
or
movsl
push
loope
jg
cmp
lods
movsb
cwtl
lods
push
push
cmpsl
dec
stos
jb
xor
adc
clc
add
lret
cmc
dec
pop
fdivs
pop
ds
lock
imul
out
mov
xor
lds
sub
gs
and
arpl
mov
lods
mov
cmc
out
fsubrs
xchg
cmp
in
jno
aaa
jbe
test
lds
xchg
mov
or
std
xchg
lahf
push
cmp
inc
in
inc
dec
rcll
cmpsl
icebp
sbb
cmpsb
lcall
bound
xchg
dec
addr16
and
int3
in
and
dec
in
jl
push
mov
mov
in
fucomip
mov
nop
les
mov
rcll
mov
in
jl
sub
jne
cmp
xlat
pop
jae
ret
push
sbb
fcoms
rcl
lret
pop
mov
enter
aaa
fnstenv
fidivrl
jnp
lds
clc
mov
xchg
mov
pop
imul
adc
rcll
push
call
or
insl
lods
scas
ljmp
imul
shrl
lea
cs
les
fwait
adc
mov
in
inc
outsl
cmpl
int
adc
mov
mov
xchg
dec
sub
das
mov
lods
xor
roll
cmp
das
jmp
out
jnp
in
pop
ja
lret
xchg
xor
movzwl
lods
cmc
mov
fisubs
out
mov
mov
fcmovnbe
out
xor
insb
js
js
lock
mov
addr16
dec
orl
lcall
dec
sbb
cmp
repnz
sub
loope
movsb
sub
les
fidivl
loopne
mov
sbb
dec
push
jb,pt
jbe
xchg
sub
lcall
xor
sarl
arpl
jbe
sub
stc
stc
loope
in
push
movntq
jbe
aas
inc
or
lret
or
mov
je
imul
das
cmp
add
sub
push
enter
test
xchg
repnz
inc
pop
iret
adc
add
ret
push
in
jbe
pushl
cmp
jne
adc
lods
int
inc
lret
jnp
loopne
testl
or
out
jne
and
frstor
repz
jl
in
xor
sti
pop
into
ja
add
dec
and
cld
ficompl
loopne
lahf
test
add
dec
fldcw
rorb
xchg
cmpsb
push
push
inc
out
pop
xor
andl
mov
push
rcrl
in
imul
jnp
fsubs
mov
adc
sbb
test
cmp
cltd
add
pop
lcall
aad
shr
std
push
xor
mov
in
cmp
mov
daa
mov
push
or
pop
and
ds
sbb
cmp
test
mov
push
fs
out
sub
rolb
jo
imul
mov
push
push
inc
loop
pop
jne
and
jnp
mov
mov
jb
sub
mov
jnp
daa
xchg
xchg
inc
bound
xor
cmpsb
sub
mov
xchg
mulb
push
mov
data16
cmp
cmp
cmp
aas
sbb
jo
enter
sbb
and
clc
not
ret
mov
dec
es
sub
sub
mov
stos
push
sub
ljmp
xchg
jecxz
cmc
pushf
aaa
add
push
div
roll
xor
fists
xor
push
cmp
push
shl
or
orl
lods
push
jo
xor
shlb
imul
loopne
in
int3
xor
out
out
ss
aam
fwait
mov
push
and
imul
stc
sub
iret
es
in
call
stc
push
cmc
test
addl
mov
and
daa
cmp
pextrw
mov
sub
mov
divps
cld
lock
inc
and
mov
push
sti
sub
repnz
add
adc
pop
inc
rclb
xor
mov
mov
fisttpll
cmpsb
clc
adcb
mov
sub
int
sbb
cmpb
add
sub
lret
jl
cmp
lods
xor
and
jns
push
lret
lods
pop
sahf
cmpsl
push
mov
inc
jb
insl
loope
mov
in
rclb
aam
inc
hlt
cmp
push
mov
xor
hlt
push
or
ficoml
loope
fcoms
jecxz
movsl
pop
jp
mov
lcall
mov
lock
add
cmpl
jmp
dec
jne
add
jnp
inc
mov
int
int3
sub
inc
or
jl
aas
jns
aad
lods
mov
das
pop
xchg
test
shl
push
movsb
pop
adc
test
sub
mov
js
inc
mov
hlt
or
xor
adc
push
sbbl
dec
mov
xor
das
jo
sub
cmp
dec
dec
dec
push
add
adc
stc
jns
es
lock
push
push
xor
jnp
jl
xchg
push
jo
adc
jle
fucomp
sbb
sub
out
or
decl
dec
hlt
push
adc
sahf
inc
in
into
pop
mov
iret
data16
or
je
sti
push
xor
int
mov
sbb
add
add
faddp
leave
fiaddl
in
sbb
sub
aas
lret
je
and
arpl
rcl
adc
mov
fistpll
mov
scas
in
repnz
mov
ss
fildll
mov
ljmp
and
test
or
testb
cmpsl
lcall
mov
dec
push
adc
dec
sbb
je
lea
xchg
cmp
mov
out
notb
cmp
push
rcll
ret
aas
sub
push
idivl
push
push
outsl
inc
sub
push
scas
cmp
push
add
lret
mov
jl
or
scas
inc
inc
je
add
mov
sbb
xchg
xchg
dec
xchg
adc
push
rcl
int
addr16
adc
pop
lods
xchg
orl
idivb
leave
push
sub
in
ds
mov
sub
mov
sbb
mov
cwtl
xchg
push
xor
dec
xor
stos
rcrl
lretw
xchg
push
mov
and
loope
fildl
and
inc
jns
pop
jae
call
xchg
ret
fwait
jnp
xchg
ss
aas
mov
out
sbb
push
mov
adc
cmp
sbb
rcl
or
lret
test
add
dec
sbbb
cmpsl
dec
adc
cld
add
pop
xlat
into
out
mov
sarl
xor
adc
adc
mov
xchg
jno,pt
outsb
and
loope
movsb
jno
out
loope
pop
sti
dec
mov
xchg
mov
pop
les
stos
movsb
ljmp
jg
test
fnstcw
xlat
hlt
es
pop
pushf
insb
test
push
dec
jo
pop
cmp
cmpsl
shll
mov
stos
mov
test
jae
clc
out
add
scas
in
test
and
out
stos
xchg
jmp
or
inc
addr16
outsb
in
loop
js
push
sub
or
bound
xchg
out
push
jne
ret
add
addl
mov
jge
sub
mov
cmpsl
or
cmpsl
js
xor
gs
es
and
xchg
in
cmpsl
roll
repnz
sbb
sub
ljmp
pop
push
sar
movsb
data16
pusha
inc
scas
pop
push
popa
push
repnz
and
xorb
daa
aad
mov
mov
add
mov
jl
mov
mov
jne
cmp
dec
adcl
mov
in
mov
dec
popf
daa
inc
or
scas
mov
mov
cmp
jg
pop
xchg
jnp
imul
add
roll
fwait
icebp
testb
test
call
call
in
loopne
aaa
push
cmp
cld
adc
pop
dec
int3
ret
mov
jb
xchg
insb
repnz
dec
lret
inc
sti
jp
pop
fcomps
lahf
scas
adc
or
mov
push
sub
add
xor
jns
lock
test
mov
jb
aad
push
pop
data16
sub
or
pop
push
ret
out
loope
add
mov
in
sbb
inc
push
ret
dec
and
pop
addr16
adc
ja
sub
addr16
and
jmp
dec
in
arpl
stos
jecxz
mov
add
pop
jo
pusha
dec
data16
stos
jnp
scas
add
mov
xchg
cmc
pushf
mov
or
lcall
xchg
popa
insl
repnz
insl
xor
xor
shlb
fsub
call
add
mov
ret
iret
pop
pop
les
mov
int3
test
sub
sbb
cli
xor
movsb
sets
cmp
testb
or
xorb
sub
mov
rcrb
sti
cmp
lret
fiaddl
jmp
push
bswap
int
xor
lods
nop
lcall
bound
mov
mov
shlb
adc
jno
int3
pop
dec
mov
push
adcb
and
bound
mov
sub
pusha
add
jo
adc
xchg
fdivs
jns
leave
mov
fwait
in
lds
cwtl
mov
cld
popf
aaa
pop
andb
and
call
inc
cld
mov
xor
push
fdivrl
xchg
aam
dec
in
mov
dec
mov
adc
sbb
pop
pop
mov
shl
jmp
sarl
out
xchg
repnz
popf
aaa
fidivs
loop
xchg
and
add
or
test
imul
shrb
push
lahf
fcomps
xor
cli
inc
cmpsb
aam
mov
stos
cmp
fdivl
out
imul
or
sbb
adc
push
fildl
repnz
stos
into
sbb
ret
xchg
push
pop
mov
daa
jge
xchg
stos
into
mov
push
adc
mov
fisubrl
mov
gs
and
add
and
sub
jge
push
mov
fmulp
inc
loop
xor
fsubl
aad
xchg
and
movb
mov
inc
mov
xchg
sub
ljmp
or
push
jmp
sarl
int3
xor
hlt
inc
cmp
lret
lahf
jo
jl
fmul
inc
test
addr16
cmp
nop
pop
rcl
lret
aaa
dec
fs
pop
out
inc
sub
and
clc
fld
std
dec
pop
rolb
inc
mov
mov
int3
adc
or
std
push
fnstcw
fldl
xor
daa
pop
inc
stos
std
fs
cmp
xchg
xchg
add
and
mov
jecxz
push
jg
pop
inc
fisubrl
sub
lcall
out
and
mov
mov
inc
popa
xchg
mov
sub
mov
dec
sub
mov
fst
jp
lock
scas
clc
xchg
fmuls
jnp
and
dec
outsb
int
push
sbb
dec
dec
std
mov
sbb
mov
cwtl
aaa
sbb
pop
mov
jg
insb
mov
dec
lock
lret
dec
jbe
or
pop
clc
add
es
dec
jle
push
sbb
inc
aas
dec
test
push
orb
ret
push
xor
xchg
inc
arpl
sub
push
mov
stos
rol
inc
call
fwait
mov
inc
add
xor
and
idivl
into
xor
das
cmp
dec
jp
repz
dec
sub
mov
and
out
fwait
sbb
cmp
sbb
insl
daa
test
ljmp
sub
out
sub
jne
push
daa
xor
ret
cld
ret
mov
jne
aaa
ss
lret
rolb
outsl
stos
xchg
mov
ret
push
subl
insb
pop
call
mov
cs
mov
mov
mov
hlt
cmp
cmc
pop
cmpsl
mov
dec
adc
mov
or
in
cmpsl
push
call
addb
arpl
repnz
cli
insl
push
bound
adc
sbb
xchg
xchg
cmp
imul
and
pusha
push
adc
cmp
sub
adc
testb
jbe
push
or
sbb
test
adc
leave
stos
xchg
fldl2e
xorl
stos
ficomps
cmp
cmp
add
jp
test
and
adc
dec
or
cltd
inc
jle
xor
and
inc
out
xor
cmp
insl
sub
iret
repz
push
dec
data16
mov
dec
adc
and
mov
hlt
scas
lods
add
into
jp
push
and
push
push
out
or
sub
test
insb
dec
push
mov
sbb
sub
scas
data16
out
push
mov
or
lret
cmp
jg
add
in
ret
aam
xchg
movsl
into
pop
sahf
mov
or
sar
movsb
mov
xorb
pop
jmp
and
movsl
movsb
inc
mov
sbb
push
ss
sarl
loop
push
arpl
ds
xlat
test
dec
insb
jmp
fs
ret
sbb
mov
dec
imulb
inc
jecxz
ja
push
stos
std
imul
adc
pop
mov
jns
push
js
or
movsb
stos
stc
mov
xor
dec
fstpt
sub
mov
pop
ljmp
rcrl
fnstcw
jl
jae,pt
jle
in
testb
bound
jl
lahf
mov
xor
pop
xlat
mov
xchg
and
int
xchg
movsb
in
ja
cld
push
dec
mov
pusha
dec
mov
xchg
xlat
and
mov
mov
iret
sub
mov
jo
cmp
cmpsb
mov
inc
sbb
xchg
inc
cmp
cwtl
pop
mov
gs
subb
sbb
pop
cmp
sbb
subl
fdivr
xchg
sarb
mov
pop
jecxz
inc
fimuls
arpl
jl
xchg
stc
cmc
or
js
and
fwait
jno
ljmp
push
inc
inc
shrb
or
lds
inc
icebp
test
pushf
pop
fnsave
sub
xchg
mov
int3
into
repz
inc
lds
std
popa
int3
dec
iret
pop
test
nop
into
loope
jecxz
xor
lahf
mov
pusha
push
adc
arpl
nop
das
mov
iret
out
call
sbb
push
dec
int3
mov
mov
stos
jb
sbb
pop
mov
outsb
push
mov
test
xorl
out
xor
movsl
leave
xchg
fistl
pop
fidivrl
sbb
leave
push
mov
mov
mov
mov
das
out
cltd
inc
mov
mov
cmpsb
arpl
xchg
lods
mov
in
pusha
scas
cmp
pop
aam
dec
jae
outsl
lds
push
push
mov
int3
jl
mov
push
fstp
jle
and
arpl
daa
xor
mov
loope
sbb
sbbl
enter
add
add
insl
mov
mov
sub
int
stos
pop
mov
fdivrs
pop
out
jno
mov
aad
or
sub
add
lret
in
mov
les
jno
or
or
jmp
sbb
lods
jl
cmp
rcll
sub
mov
push
or
ja
pop
fmuls
fs
sub
aaa
test
jbe
xchg
sti
push
fsubrs
sar
push
cmp
es
popa
xchg
lods
cmpsl
cmp
test
push
lods
pop
pop
fs
pop
mov
lods
sub
jae
add
cs
divl
pop
mov
outsb
jns
mov
push
out
inc
jo
xchg
inc
sbb
adc
ss
adc
adc
addr16
adc
lret
dec
mov
fmull
shlb
mov
subl
xchg
aaa
and
inc
cwtl
pop
and
rcll
inc
les
jl
sbb
sub
into
mov
jnp
xor
cs
dec
ret
test
jmp
pop
or
sbb
scas
push
ds
xor
mov
fbstp
sub
out
pushf
js
adcl
shlb
js
incb
xlat
aam
sbbl
jl
jb
out
loopew
mov
adcl
jae
mov
dec
xchg
jg
dec
filds
cmc
insl
ljmp
leave
fs
mov
jecxz
incl
pop
sub
or
push
mov
jb
fildll
sarb
scas
fmuls
gs
xchg
sub
lahf
or
sub
ds
neg
aas
fistl
adc
jns
into
lcall
ss
push
leave
push
sahf
add
pop
es
fmuls
mov
lcall
push
mov
mov
repz
cmp
sub
push
pushf
imul
fcmovbe
lret
xchg
jnp
pusha
enter
jnp
in
popf
nop
xor
lods
jo
jle
dec
int
and
bound
loopne
mov
push
mov
fiaddl
pop
mov
mov
or
pushf
movb
cmc
push
testb
loopne
clc
xchg
pushf
xchg
or
test
ret
cmc
xor
xlat
xchg
mov
pusha
jb
lea
sub
jns
add
adc
add
test
js
mov
fnstenv
dec
inc
gs
ljmp
and
mov
jl
and
rcrl
xor
xchg
mov
push
adc
fisubrl
in
xchg
outsb
or
pop
std
xor
pop
dec
pop
mov
mov
into
and
mov
stos
xchg
and
outsb
pop
pop
fildl
in
stc
std
in
inc
repnz
rclb
or
leave
mov
test
aam
dec
add
into
xor
xchg
mov
cwtl
mov
adc
mov
movsb
inc
push
pusha
imul
cmp
mov
mov
out
lock
fidivl
cmp
dec
push
adcl
push
jg
mov
call
js
cmp
cmp
xchg
loopne
dec
jecxz
add
inc
sbb
mov
test
sbb
pop
je
outsl
les
cmpsl
stos
cwtl
push
hlt
dec
push
clc
xchg
mov
out
push
js
xchg
add
and
pushf
inc
loope
iret
aam
hlt
dec
mov
xchg
loop
pop
inc
ljmp
andb
cmp
fisubrl
dec
adc
push
push
xchg
mov
mov
adcb
cs
mov
iret
scas
shlb
jnp
shrl
imul
inc
push
cwtl
lods
movsb
adc
inc
pop
ds
inc
xchg
mov
push
lret
lods
xchg
pop
lcall
jb
sarl
mov
or
dec
fstpt
cwtl
mov
cmp
mov
sub
add
xor
mov
push
cs
negl
mov
adc
xchg
roll
mov
mov
setbe
fwait
leave
inc
sub
test
fdivrl
or
test
fdivl
push
fisttpl
int3
sbb
test
hlt
loopne
push
js
shll
mov
dec
and
mov
daa
pop
dec
xchg
dec
cs
pop
fdivrl
mov
lods
lods
ja
out
adc
je
xchg
loope
dec
orl
ljmp
lods
out
orb
jne
inc
icebp
repz
adc
inc
aad
loopne
mov
pop
out
test
shll
push
loop
test
daa
sub
push
cmp
sub
in
pop
inc
fwait
ret
or
addr16
sub
ljmp
addr16
rcl
out
sti
out
pop
rol
test
inc
adcb
fdivrs
mov
or
std
xchg
jo
out
push
cmp
orb
loopne
lret
inc
ljmp
in
bnd
fstp
or
push
fiaddl
call
cmp
xchg
inc
enter
adc
daa
sbb
mov
lcall
mov
stos
push
dec
mov
push
mov
mov
and
cmpsb
addr16
out
mov
iret
mov
dec
gs
aad
sub
push
popf
out
insb
inc
imul
mov
mov
bnd
adc
into
sbbb
lahf
mov
or
xchg
lahf
add
outsl
dec
or
xchg
movsb
sub
cmp
jb
addr16
int3
out
push
hlt
fdivr
mov
fsubs
insl
andb
jg
and
and
jmp
pop
stc
add
xlat
or
xchg
xchg
test
jbe
xchg
fistpl
test
int
mov
je
jae
stos
lods
mov
mov
fsubs
repnz
jl
mov
add
pushf
pop
out
or
add
fsubl
pusha
pop
leave
jge
loope
je
lds
push
outsb
sbb
stos
jb
fdivrl
ja
scas
jle
arpl
mov
dec
mov
pop
mov
loop
ljmp
repnz
mov
sbb
xchg
and
jecxz
test
push
xchg
cld
and
push
xchg
loopne
in
in
les
shll
and
sub
int3
pop
daa
pop
xor
cmp
arpl
lret
sbbb
pop
and
dec
cmc
mov
pop
stos
adc
or
mov
je
insb
xor
test
ljmp
orb
mov
sbb
in
data16
xor
cmp
ret
in
mov
lds
pop
loopne,pt
push
cld
xchg
sbb
daa
divb
inc
cwtl
sbb
add
and
ret
add
push
ficompl
adc
lret
push
ret
mov
cmp
sub
outsb
stc
jae
dec
dec
je
sbb
cli
mov
inc
mov
dec
cs
xlat
insb
pushf
xchg
jo
jle
push
lret
rcrb
add
and
xchg
and
cmp
daa
mov
mov
mov
mov
jnp
add
jp
sub
lcall
pop
xchg
dec
add
jmp
mov
add
test
mov
cwtl
hlt
or
xchg
sbb
sub
push
pusha
pop
fimuls
ljmp
in
cmpsl
je
dec
dec
mov
aaa
je
push
icebp
dec
and
add
inc
rol
add
inc
ds
fsubl
stos
jnp
fnstenv
ds
xor
repz
mov
repnz
cs
jnp
lahf
mov
decb
mov
cli
add
fidivl
lcall
xchg
iret
cmp
rcll
fildl
outsb
lock
xor
andb
ficompl
push
out
xor
xchg
push
repz
adc
jg
jecxz
mov
adc
test
add
sti
cmp
fsubs
out
hlt
lcall
push
mov
pop
push
test
or
jl
insl
and
rorb
lods
daa
sub
inc
pop
out
jmp
xchg
mov
jle
jmp
mov
mov
enter
faddl
rolb
cmpsl
inc
ja
add
iret
pushf
pop
fidivl
inc
mov
add
inc
dec
mov
or
pmuludq
xor
push
sub
fsubrl
push
outsl
test
outsb
xchg
std
out
repnz
sbb
inc
shl
adcl
mov
sub
lcall
das
push
dec
sbbl
and
mov
dec
fmull
push
gs
idiv
xor
mov
mov
jmp
arpl
lods
sbb
push
outsb
jmp
mov
shlb
mov
sub
rol
cmpl
xchg
push
add
xchg
add
sbb
out
in
jne
shll
in
call
jl
in
xlat
stos
or
add
les
inc
sti
mov
mov
xchg
ret
cs
cwtl
imul
pop
add
cmc
fldl2e
mov
sbb
xchg
hlt
iret
pop
jecxz
xchg
push
mov
pop
mov
jl
mov
push
test
je
xor
cld
cmc
stos
dec
sub
pusha
shl
pushl
add
js
cltd
sub
pop
outsb
std
mov
add
and
sbb
push
push
data16
mov
hlt
push
jg
aad
sbb
adcb
ret
shll
pop
movsb
mov
cmp
ds
add
fildl
mov
mov
xchg
mov
adc
mov
push
rcrb
enter
xor
push
fwait
out
mov
repz
mov
mov
sub
inc
aam
mov
outsl
imul
xchg
mov
xchg
mov
mov
push
jnp
cmp
dec
sbb
sbb
lahf
sbbb
test
xor
out
into
jmp
test
ljmp
xchg
addr16
mov
dec
lock
inc
push
jge
and
add
lret
insl
jne
js
mov
mov
stos
xor
push
dec
ljmp
xchg
std
inc
sub
call
fnstcw
mov
ficompl
testb
mov
pop
push
xor
add
into
adc
pop
pop
out
repz
jb
or
mov
fs
daa
xchg
in
push
jb
cmp
push
stc
fisubrs
lret
jae
aam
mov
cwtl
xor
loopne
mov
xlat
lret
insb
cmp
je
inc
jb
outsl
mov
sub
out
andb
pop
or
cmp
cmp
jb
xlat
cmp
mov
ljmp
popa
divl
dec
inc
daa
clc
dec
in
inc
pop
push
xchg
jmp
push
dec
cmpsl
sbb
and
xchg
xor
lods
mov
add
test
or
roll
xchg
loope
add
dec
mov
inc
rcr
and
push
cmc
pop
xchg
sub
jle
sarl
jbe
ret
aam
pop
cmp
cltd
icebp
in
sub
call
dec
xor
addl
push
ret
mov
addr16
ss
jle
outsb
push
push
push
pop
jecxz
mov
scas
int3
mov
pop
push
jge
pop
rorl
out
xorb
lahf
xor
test
ja
dec
jle
cmpsl
mov
mov
outsb
xlat
mov
xor
inc
inc
ret
pushf
xlat
loopne
aam
dec
adc
mov
sub
adc
sbb
in
sbbb
mov
pop
push
ficomps
sbb
pop
mov
mov
ret
cmp
and
push
push
xchg
int
xchg
inc
and
xchg
iret
das
lcall
lods
lods
comiss
dec
clc
and
push
cmp
pusha
fmulp
repz
dec
hlt
jl
mov
iret
pusha
push
xchg
xchg
jnp
sbb
pop
aam
push
xor
fsts
pop
es
xlat
test
mov
adc
cmp
inc
pushf
daa
les
js
mov
leave
mov
cmpl
test
xor
bswap
cmp
mov
and
testl
xchg
mov
add
xor
cltd
and
xchg
outsl
cmp
jp
scas
rcrl
adc
jp
fidivrs
add
or
add
xchg
pop
pop
push
jecxz
sub
push
das
adc
addr16
jb
or
dec
outsb
idivb
pop
adc
sti
mov
in
dec
mov
or
sub
mov
jns
outsb
dec
or
push
imul
repz
iret
leave
cld
push
push
aas
jg
call
test
push
das
push
mov
push
pop
movsl
outsb
pop
adc
mov
and
out
cli
xchg
ljmp
aas
decl
outsb
pop
pusha
mov
fs
loope
leave
sti
mov
insb
inc
and
lret
mov
mov
hlt
es
pop
mov
test
xor
repnz
shlb
fistps
cmpsb
xorb
mov
jne
push
cmp
bound
sub
mov
into
rclb
xor
and
cmp
mov
or
and
jmp
pop
or
int
and
leave
decl
adc
cltd
fwait
loope
mov
pop
or
icebp
inc
pop
inc
iret
jns
push
addr16
ret
sbb
sub
fcomps
jnp
fisttpll
out
jo
out
xchg
jg
inc
pop
jecxz
push
push
jns
jne
in
test
xor
sahf
ja
cltd
js
sti
out
xor
rorb
mov
popa
mov
jne
dec
roll
repz
push
js
dec
ret
lods
mov
and
pushf
inc
ret
dec
aas
mov
data16
bound
push
push
xor
cltd
sub
inc
add
pop
pop
lret
fsubs
push
push
adc
mov
add
ljmp
jge
add
dec
xchg
psadbw
fldl
scas
arpl
stos
pop
add
data16
xlat
call
imul
mov
add
jle
mov
test
cltd
pop
jne
adc
cwtl
shl
xchg
jns
cmp
xchg
xchg
mov
cmp
pop
push
pop
lcall
movsb
cmp
outsl
lret
movsb
cmpsl
xchg
jecxz
dec
lea
push
mov
mov
or
sbb
pop
adc
shll
xor
les
mov
jge
fwait
inc
pop
mov
xor
inc
movsl
pop
and
lahf
cltd
fisttpl
leave
cltd
xchg
or
cltd
dec
push
sub
push
adc
ljmp
xlat
dec
or
int3
xchg
add
int
and
add
xchg
xor
sbb
mov
sub
mov
sub
xchg
or
lea
sbb
mov
sub
jns
sti
hlt
jno
in
lea
fwait
mov
cmp
xchg
mov
sti
sub
ds
cmp
push
push
sbb
push
cmp
imul
fsubl
mov
inc
in
in
lahf
fs
fwait
lahf
sbb
lcall
sar
cmpsl
dec
push
add
lock
loop
leave
cmp
aad
cwtl
mov
stc
mov
adc
mov
and
adc
cmp
flds
jmp
lret
lods
xchg
inc
lret
cmp
das
fidivs
ret
xchg
stc
lods
sub
mov
add
inc
sub
cmp
je
sub
jns
sub
popf
imul
cmpb
and
movaps
jns
sbb
mov
dec
and
xchg
mov
adc
mov
sbb
gs
fldl
test
mov
jle
mov
insl
mov
xchg
clc
cmpsb
out
jno
test
jo
dec
jne
fdiv
xlat
lock
inc
jge
xor
xlat
and
adc
aas
add
mov
adc
out
addr16
repnz
adc
lods
lods
popl
out
dec
call
sbb
inc
mov
cmp
ret
mov
push
cmp
loop
push
cmc
mov
in
inc
dec
mov
xchg
mov
lock
push
loope
hlt
push
test
ljmp
sbb
mov
stos
int
and
pop
mov
jno
and
mov
les
sub
mov
xchg
pop
cmc
fnsave
repz
ss
mov
rcrl
ljmp
inc
mov
sahf
lret
sbbb
jno
and
cli
mov
dec
mov
int
rcll
aaa
ret
jmp
inc
js
sbb
stos
inc
lret
sti
jge
shlb
pop
stos
enter
cmpsl
mov
push
inc
jnp
mov
icebp
sbb
push
xor
dec
aaa
cs
fistl
pop
xchg
movsb
inc
movlps
insb
push
loopne
sub
inc
mov
xor
mov
pop
jns
test
je
int3
xchg
paddsb
ret
jne
xor
outsl
or
xor
outsb
imul
in
pop
xor
adc
mov
lahf
cs
stos
test
xchg
neg
test
mov
nop
leave
fldl
inc
shll
inc
daa
daa
inc
push
lods
or
lcall
cmp
cwtl
and
in
add
mov
lock
sbb
xchg
or
xchg
rcrl
icebp
out
dec
test
add
push
test
mov
push
test
cmp
dec
inc
test
mov
lods
ret
cmc
mov
sub
dec
push
lret
pop
push
lcall
mov
push
fld
movsl
mov
sbb
push
out
je
inc
jge
push
adc
push
xchg
or
out
les
cmp
sub
and
xchg
pop
cmp
out
test
push
repnz
sub
xchg
pop
inc
pop
xor
cmpsl
mov
xor
push
jae
loope
fucomip
lahf
sbb
push
dec
ss
mov
push
mov
xchg
sub
scas
inc
inc
lcall
push
adc
cmpsb
dec
xor
fwait
mov
mov
rorb
mov
pop
int
dec
inc
outsb
iret
xor
lcall
dec
loope
or
sahf
push
xchg
bound
cmpsb
notb
cmp
imul
jne
xchg
dec
xchg
jo
mov
stc
cs
roll
pop
dec
lods
shll
xchg
push
fcmovnb
popf
sub
test
mov
xchg
cmc
dec
shlb
lds
cmpsb
dec
jbe
scas
sbb
push
xchg
push
in
or
insb
fxch
inc
aaa
add
sbb
daa
mov
dec
scas
add
jle
jg
cli
xchg
repnz
xchg
stos
imul
je
mov
push
orb
pop
sahf
movsb
xlat
hlt
out
imul
fwait
cwtl
sub
rclb
xlat
test
add
icebp
jecxz
mov
mov
sbb
test
add
cmp
outsb
cli
imul
cmp
jecxz
pop
push
jb
aam
pop
insb
pop
mov
iret
enter
orl
popf
push
push
repz
add
les
div
xchg
sbb
das
mov
or
push
ljmp
xor
rclb
loope
mov
jae
dec
outsb
andb
icebp
xchg
js
repnz
rolb
in
testb
inc
xor
add
pop
adcl
testb
sbb
cmpsl
add
hlt
xchg
push
pop
adc
nop
pop
jg
jl
adc
lahf
test
xchg
push
or
stos
insb
loopne
addb
pop
xor
lret
cmp
mov
add
insl
xor
ret
fnstenv
push
or
mov
test
out
sbb
dec
add
and
pushf
push
sub
jl
sbb
add
lea
int3
add
mov
push
and
xor
cld
ja,pn
cltd
out
bound
icebp
sbb
cwtl
jne
jp
sub
and
aas
sub
pop
ja
push
sbb
sbb
lcall
jecxz
iret
ffreep
jmp
jnp
neg
js
or
pop
pop
mov
and
add
mov
aad
jbe
lcall
mov
push
jg
and
repnz
push
movsb
mov
pop
stos
pop
addl
cmpb
sub
cmc
rcr
rclb
xchg
cmpsb
subb
pop
int3
add
inc
xchg
sbb
mov
out
jmp
dec
mov
mov
ds
and
xor
mov
dec
pop
sub
dec
add
mov
jbe
bound
fdivrs
lcall
dec
inc
jg
dec
mov
or
xchg
cwtl
jbe
mov
lods
xchg
stc
mov
mov
icebp
jbe
and
es
loope
and
aaa
lea
jg
push
ret
lea
mov
aas
dec
xchg
xor
idiv
mov
xor
mov
jb
mov
inc
mov
pop
inc
ljmp
and
or
cli
mov
lds
mov
jb
je
stos
movsl
outsl
notl
xor
mov
jo
mov
repnz
inc
and
pop
lcall
jne
xchg
data16
pushl
insb
imul
mul
sbb
sbb
push
pop
out
rcr
pop
sbb
sahf
into
ds
mov
sub
shl
mov
in
pop
int3
and
pop
inc
cmpsl
in
mov
mov
fisttpl
fs
sahf
cmp
test
hlt
cmpsl
imul
xor
jle
and
jl
out
push
pop
repz
xchg
aad
loope
sub
lods
insl
enter
shll
shll
mov
out
mov
mov
sub
cmp
sbbl
inc
movsb
ret
dec
inc
adc
push
mov
test
xchg
add
repnz
cmpsb
inc
clc
repz
sarl
adc
gs
mov
ss
gs
or
pop
sbb
mov
dec
pop
xchg
push
xchg
shrb
xor
pop
inc
jns
movsb
add
das
bswap
push
xchg
xor
or
dec
inc
push
cmp
mov
addb
dec
push
push
sarl
inc
inc
jle
leave
dec
ret
jl
ret
mov
std
mov
outsb
push
pop
sbb
shr
mov
and
xchg
dec
and
push
xchg
stos
pop
sub
movsl
and
dec
push
shl
add
aam
sbb
push
cmp
in
ss
mov
push
jo
loop
out
xlat
jp
sti
cmp
jmp
into
sub
popf
xor
outsl
jg
aas
mov
or
leave
fdivrs
imulb
add
push
lret
xor
inc
lret
sbb
outsb
xchg
pushf
les
stos
cmp
xchg
mov
in
mov
xor
pop
sarb
scas
push
xor
or
jnp
sub
add
into
mov
data16
jp
enter
enter
xor
cmp
sbb
mov
cwtl
mov
int
outsb
push
mov
sub
adc
push
ret
adc
test
mov
leave
jnp,pt
pop
rcrb
sbb
dec
and
adc
sbb
stos
test
in
inc
jecxz
cld
cmp
popa
lret
dec
cmp
mov
clc
popf
icebp
lock
adc
mov
in
cwtl
cmp
sbb
push
cmp
xchg
insl
mov
ret
jae
mov
or
ss
mov
popa
rorb
inc
push
xor
inc
mov
xchg
sub
ficompl
cltd
dec
jo
pop
pop
loope
movsb
sti
clc
sahf
and
clc
les
test
scas
popf
gs
push
jge
pxor
jns
sub
gs
cli
roll
sarb
sti
fidivrs
test
mov
pop
movsb
call
push
out
arpl
sub
add
xchg
inc
mov
sbb
dec
aad
fdivr
dec
ss
ja
int3
dec
push
js
or
xor
fs
dec
xor
jge
and
loope
add
or
push
idivl
lret
push
ljmp
adcl
les
das
popa
add
pop
xchg
les
shlb
sbb
inc
push
inc
mov
rorl
xchg
lret
repz
push
cmp
pop
pusha
adc
aas
xchg
insb
jmp
shll
xchg
adc
dec
mov
shlb
dec
test
mov
or
cmc
lret
testb
test
xchg
push
mov
cmc
test
out
inc
xor
mov
les
decb
js
jp
push
das
add
sub
movsl
scas
stc
in
mov
xlat
rorl
mov
aaa
cltd
arpl
jmp
jns
insl
or
ss
out
sti
js
aas
sub
xchg
insb
inc
mov
sub
sbbb
sbb
enter
loop
mov
lret
dec
xchg
sbb
clc
cmp
push
rolb
movsl
shrl
sbb
jg
mov
loope
daa
shl
mov
xor
cs
lock
push
js
fiaddl
les
xchg
fsubrl
jo
rorl
pop
add
aam
jns
aam
push
into
dec
lret
sti
test
lcall
fisttps
inc
mov
cmp
cmp
xchg
mov
cld
xor
lods
testl
repz
sub
sbb
les
rolb
or
mulb
and
adc
arpl
lcall
mov
pop
aas
mov
movsb
pop
xor
mov
adc
adc
test
lds
insl
test
dec
inc
pop
mov
xchg
jne
data16
in
loope
xor
add
jecxz
sbb
jmp
fsubs
movsl
push
sbb
inc
cli
arpl
mov
mov
dec
jne
movsl
stos
aad
sbb
pop
mov
lock
jnp
sub
lret
imul
bound
loop
mov
leave
enter
leave
dec
movsl
or
shll
pop
jns
push
pop
xor
shll
cmp
xchg
mov
cmc
jne
scas
loopne
pusha
int3
in
sub
lret
loop
popf
jge
aaa
xchg
mov
insb
inc
jmp
fwait
sub
addl
mov
aaa
imul
jo
push
test
cld
out
int
xchg
mov
jge
sbb
push
mov
repnz
daa
sub
in
cs
adc
sahf
hlt
and
daa
mov
in
rcrl
fisubrl
dec
int
adc
lods
lds
mov
stos
lahf
jmp
sub
test
dec
sbb
dec
imul
nop
mov
pop
mov
cmpsb
cwtl
sbb
or
out
dec
int
aad
in
add
shl
dec
add
and
mov
inc
xchg
arpl
adcl
in
out
jg
std
cmpsb
and
mov
jbe
mov
dec
mov
inc
insl
xchg
idivl
xor
xchg
fiaddl
and
in
fsubl
mov
out
inc
addr16
leave
lret
aad
cmc
fstpt
out
push
pushf
loop
push
lds
jmp
push
sbbl
mov
mov
lock
dec
inc
pushf
lret
inc
mov
mov
sbb
lock
rcrl
push
jo
repnz
push
mov
sti
pop
adc
mov
push
mov
repz
scas
dec
ja
shl
cmp
push
in
ljmp
fbstp
cmp
push
in
mov
push
lds
es
mov
pop
cmc
les
test
mov
dec
test
dec
adc
and
xor
icebp
sbb
sub
xchg
dec
sahf
fsubrp
push
jp
test
sbb
or
rol
repz
xchg
or
scas
rcrb
push
inc
lock
adc
mov
les
fnsave
pop
mov
jmp
xchg
loope
rcrl
inc
inc
mov
mov
cld
inc
in
cli
xor
stos
clc
mov
arpl
xchg
bound
lcall
je
je
stc
and
inc
mov
sub
push
leave
dec
test
jbe
ss
test
std
int3
icebp
mov
cmpsb
out
int3
add
pop
fisttpll
repnz
mov
cmp
and
mov
xchg
inc
pop
dec
push
and
ds
push
xchg
rclb
fisubrl
push
stos
ret
cltd
negl
cmp
ret
jnp
xchg
aam
addb
dec
dec
pop
cli
mov
pop
mov
loop
mov
not
mov
rorl
adc
fs
push
mov
add
scas
ret
xor
inc
and
maxps
fs
pop
icebp
sub
scas
pop
movsb
pop
lods
ds
mov
aad
mov
xchg
adc
push
ret
push
pop
iret
xchg
mov
xor
shll
jl
sarl
adc
xchg
clc
unpcklps
stc
cs
push
add
dec
pop
in
mov
pop
mov
add
xor
cli
xchg
adc
test
mov
adc
adc
dec
jl
cld
mov
insl
adc
fsts
adc
xor
pushf
mov
inc
dec
push
test
sahf
sbb
and
mov
arpl
add
inc
in
orl
jle
pop
xchg
jmp
out
mov
push
imul
test
stos
xchg
dec
stos
ret
out
and
jns
inc
rcr
xchg
or
test
pop
ret
sbb
mov
mov
cli
and
sub
shrl
imul
pop
mov
inc
mov
xchg
nop
std
add
cmpb
cwtl
je
and
es
mov
cmp
cmp
inc
adc
and
xchg
arpl
pop
cli
xchg
fs
jnp
and
mov
ds
lock
add
add
mov
push
sub
and
adc
scas
out
jecxz
push
pop
and
out
mov
xor
push
and
je
push
cmp
mov
inc
push
jmp
leave
adc
xchg
jl
push
dec
xchg
hlt
jne
mov
outsb
cwtl
inc
lds
ja
inc
mov
xor
dec
cli
jmp
sbbl
stos
pop
pushf
sub
jo
sub
push
xorb
fists
mov
or
mov
stos
arpl
mov
mov
jnp
and
pop
test
js
sbb
mov
pop
inc
out
std
aas
sub
adc
xor
fisubl
xor
dec
or
xchg
js
mov
fldenv
push
aaa
xchg
push
int3
aaa
lods
xchg
or
ficompl
sub
in
popa
and
cs
lods
xchg
cmc
sahf
adc
dec
mov
dec
sbbl
cld
rcr
fs
test
dec
xchg
push
cmp
dec
addr16
mov
xorb
ds
ret
in
xor
add
mov
cmp
clc
dec
lods
mov
jo
pop
pop
mov
push
pop
push
adc
sbbl
mov
jp
mov
clc
lret
cmp
lock
fmull
jg
popf
insb
cld
lcall
stc
ljmp
xchg
xor
sbb
cli
jmp
mov
or
add
dec
pop
rcrb
xorb
or
movsb
mov
stc
enter
insl
sub
pop
pop
cs
push
out
imul
xor
fisubrs
jbe
jae
fs
push
jno
mov
mul
dec
insb
pop
stos
sbb
push
push
ficoms
pop
clc
dec
movsl
mov
push
icebp
xchg
xor
loopne
and
mov
adc
ds
neg
shrl
je
leave
adc
gs
jecxz
les
push
jge
push
sbb
jb
add
popf
hlt
cmpsl
mov
or
or
pushf
or
or
sub
das
daa
fcomp
mov
fmulp
push
js
cld
shr
jg
inc
xor
mov
hlt
cmp
push
in
mov
ret
sbb
push
xor
sbb
cs
lea
jo
pushf
pop
fcompl
in
cmp
add
mov
xchg
pop
iret
mov
inc
xor
das
insl
sbb
nop
sbb
repz
mov
sub
sub
sbb
mov
subb
cmpb
aaa
fdivs
and
and
shl
inc
jecxz
cmc
fstps
lea
fcomps
mov
notb
pop
xchg
andl
xchg
repnz
nop
pop
rorl
popf
add
shr
shrl
jb
sbb
fldenv
aam
push
jle
dec
scas
sarb
stc
mov
lcall
rcll
jae
mov
pop
push
loopne
ss
icebp
add
sbbl
jecxz
mov
xor
stc
or
add
or
clc
int
pop
in
cmp
jmp
jns
std
out
int3
scas
fwait
or
aad
iret
fisubs
sub
add
je
insb
inc
test
rolb
popf
sbb
lods
sarb
sub
icebp
mov
ret
sbb
xor
sbb
insb
or
pop
add
sbb
inc
adc
push
aas
xor
cli
pushf
inc
jb
cld
mov
es
loop
xor
xchg
sti
cli
icebp
mov
aam
xor
std
mov
mov
mov
sbb
pop
sub
jbe
mov
loope
push
aas
mov
sub
mov
pop
jns
mov
cmp
sbb
pop
mov
sti
sub
icebp
pushf
dec
dec
sar
shll
lods
arpl
xchg
sub
cmpsb
in
das
pop
shll
push
jbe
stos
or
mov
sbb
adc
dec
lds
ffreep
or
sub
xor
or
les
mov
mov
jne
xlat
xor
rorb
ss
daa
std
lods
sbb
add
sub
lods
cltd
fisttps
inc
testl
sub
leave
mov
fists
jmp
testl
testl
pop
add
mov
loope
mov
int
out
loope
pushl
js
shll
aam
loopne
insb
sti
mov
push
cmp
je
inc
rol
addr16
repz
xchg
xlat
pop
add
dec
dec
xchg
stos
sub
inc
popa
adc
test
fnstenv
or
pop
jb
iret
pusha
mov
enter
xor
fcomps
mov
fwait
mov
dec
scas
fisttpll
pop
dec
mov
cmp
sarl
mov
clc
test
push
in
jnp
push
dec
push
xor
jo
xor
sbb
sbb
fstpl
sbb
jle
mov
mov
jns
ret
ljmp
in
rolb
adc
mov
cmp
mov
cmc
cli
mov
icebp
pop
insl
loop
xlat
jge
xchg
dec
daa
push
pop
or
and
scas
addr16
push
call
xchg
pop
pop
js
cmpsl
push
mov
pusha
insl
movsl
mov
clc
pop
mov
dec
jmp
rcl
xor
leave
enter
inc
pop
cmp
pushf
and
je
and
enter
fmull
pop
movsb
push
out
sbb
andb
adc
nop
fs
pop
shl
dec
fwait
mov
jecxz
xchg
cwtl
sbb
sbbb
xchg
nop
jg
std
cs
out
cld
sarb
and
jg,pn
mov
sarb
push
push
cwtl
sbb
cli
popf
in
pushf
stos
jbe
mov
mov
aam
xchg
roll
cmp
sti
inc
mov
adc
cmpb
inc
aam
jecxz
fwait
aad
enter
sub
fadds
sub
xor
in
push
sar
es
mov
jne
mov
jecxz
inc
xlat
or
mov
pop
adc
cli
lds
or
aas
ret
fs
pusha
mov
jmp
fisttpll
pushl
es
cmp
mov
sbb
in
in
outsb
ss
outsl
mov
cmpsl
incl
push
sub
mov
aaa
pop
cmp
mov
jae
adc
push
fidivl
xlat
sarb
imul
jle
sbb
iret
in
mov
pop
imul
mov
sti
mov
movsb
rcr
jp
clc
mov
out
cmp
call
in
push
outsl
in
sub
adc
cmp
xchg
test
mov
mov
sbb
pop
mov
mov
jp
rcrb
int
pop
xlat
outsl
hlt
lock
adc
sub
cmpsl
adc
dec
ss
jae
push
lods
nop
lcall
stos
xor
cli
lods
movsb
cld
push
nop
test
rcll
stos
arpl
and
jle
fistl
in
and
jnp
sub
insb
and
sbb
adc
mov
push
lret
xchg
out
add
es
jb
xor
inc
pop
mov
test
push
push
sbb
lea
mov
mull
jno
or
push
and
cld
pop
subb
stc
pusha
ljmp
sahf
hlt
mov
sbb
icebp
in
insl
adc
lahf
sub
int
inc
xor
dec
or
mov
cmp
cmpsb
sbb
jno
inc
in
aaa
pop
mov
stos
nop
outsl
mov
xchg
cltd
mov
inc
test
pop
dec
sub
pop
repz
sub
dec
in
mov
rcr
loop
dec
imul
fsub
adcb
scas
arpl
cwtl
or
xchg
aam
mov
jnp
push
mov
sbb
outsb
movl
loopne
fsubrl
das
mov
mov
bound
in
test
test
lea
out
sbb
mov
cmp
shll
div
or
jbe
jecxz
data16
orb
jmp
inc
inc
or
mov
push
outsb
or
adc
mov
mov
jno
daa
xlat
sti
iret
cmp
and
sbb
cs
outsb
cmc
jl
fnstcw
xor
out
repnz
inc
fwait
in
out
pop
add
int
push
cmpsl
fildl
xchg
or
adc
mov
outsb
jge
sbbb
out
fistpll
mov
dec
mov
test
aad
or
lcall
loop
ds
mov
scas
pusha
and
in
ljmp
es
repnz
jns
pop
inc
pop
pop
jmp
mov
xor
sahf
popf
xor
ret
and
cmp
push
lods
vunpckhps
out
pop
sub
jae
sar
lods
shll
das
imull
or
dec
push
xchg
mov
fwait
push
movsl
cltd
insb
mov
mov
push
sbb
je
repnz
add
jmp
orb
stc
ljmp
mov
add
mov
fistpll
push
cli
les
pcmpgtd
mov
push
push
pusha
xor
bswap
pop
daa
mov
sub
lcall
sub
mov
mov
fmul
mov
cmp
lfs
push
xor
popf
fiadds
stos
xchg
fmull
out
push
xchg
popf
dec
sbb
or
lods
push
mov
pop
clc
dec
jo
lea
add
testl
std
adc
adc
jecxz
mov
stos
mov
pop
mov
push
sahf
ucomiss
jnp
ds
mov
sub
dec
addr16
out
mov
in
mov
push
xor
fiadds
mov
inc
mov
aad
lods
jmp
push
mov
push
leave
inc
lahf
xchg
mov
cvtpi2ps
pop
and
adc
xor
mov
inc
ljmp
xor
stos
mov
leave
ja
push
pop
xchg
mov
and
lcall
inc
out
aad
xchg
push
and
jp
pop
mov
inc
sahf
int
fidivrs
xchg
popf
sbb
add
mov
jne
add
fidivrl
push
mov
and
loopne
add
pop
dec
lods
sbb
call
mov
cwtl
in
int3
push
xchg
jnp
push
cld
add
inc
ret
push
loop
jbe
fsts
sarb
in
int3
mov
xchg
mov
mov
cmp
and
jg
xchg
push
pop
hlt
jl
xchg
cmp
dec
mov
in
mov
sbb
push
loope
and
daa
xor
fs
pusha
ljmp
sub
or
xor
inc
sub
imul
cwtl
sub
xor
add
add
mov
jecxz
mov
pop
adc
mov
add
pop
adc
cmp
fiadds
aaa
int
jnp
test
adc
lret
jbe
and
add
or
jmp
mov
mov
or
jbe
mov
xchg
bound
lea
xchg
call
push
jecxz
dec
xchg
lea
loope
jmp
pop
daa
repz
push
jg
add
mov
sub
sub
and
mov
aad
aad
dec
mov
dec
jb
repz
or
xor
cld
stos
arpl
lea
ret
cli
jo
cmp
orb
ljmp
pop
mov
arpl
push
xor
mov
mov
bound
leave
push
sbb
aam
xor
fidivs
clc
push
sub
clc
pop
int3
xchg
fadds
add
lcall
roll
and
out
je
outsl
and
popl
lock
push
mov
xor
call
dec
cwtl
sbb
in
mov
daa
add
das
mov
xchg
fwait
sbb
inc
aad
adcl
dec
cmp
inc
decl
mov
les
push
push
xchg
xchg
jle
inc
scas
push
cmp
push
repnz
xchg
pop
mov
leave
sti
or
dec
push
sbb
fldenv
dec
popf
cltd
pop
pusha
mov
push
lds
fsubl
mov
fbld
adc
lret
cmp
mov
push
push
mov
inc
lea
pop
bound
ss
cmp
jle
ffree
sub
aam
or
pop
inc
mov
xchg
inc
jnp
mov
dec
sbb
adc
popa
jge
mov
mov
adcl
aaa
sti
lahf
or
les
xchg
jecxz
xor
std
out
and
xchg
cmp
cli
mov
lds
xchg
dec
push
out
andl
and
scas
in
jmp
pusha
jbe
pop
jecxz
mov
jle
mov
mov
jbe
mov
les
inc
xchg
addb
and
mov
push
stos
in
xor
inc
pop
pusha
js
jg
sti
loop
xorb
pusha
hlt
lret
negb
cmp
mov
mov
in
test
insl
sub
xor
sahf
pop
or
mov
into
mov
test
das
daa
es
push
cmp
jnp
les
mov
sub
popf
std
sahf
jb
jecxz
lock
in
jge
xor
js
mov
cmp
fs
inc
decb
gs
in
sbb
mov
enter
jno
push
dec
xchg
add
dec
pop
pusha
orl
push
nop
pop
mov
jp
sub
xchg
fs
add
repz
flds
xor
add
mov
pop
mov
xor
stos
gs
xchg
xchg
in
fwait
cwtd
xor
orb
mov
ljmp
or
mov
xsha256
cmpsb
adc
jnp
xchg
xchg
fwait
add
es
pop
out
lret
shll
ds
pop
mov
mov
jmp
dec
mov
out
nop
ret
pop
sub
push
das
jp
je
out
clc
mov
out
fwait
aam
lcall
and
pop
fstpt
test
data16
dec
bnd
sti
rclb
mov
shll
js
adc
ljmp
pop
sti
jbe
xchg
fsubrs
add
sbb
mov
pop
clc
pop
aaa
inc
sub
call
xchg
push
ret
xlat
int
xchg
push
or
shll
or
flds
int3
push
mov
mov
fwait
stos
sub
adc
stc
push
sub
xor
mov
fcomp
fmull
idiv
lods
cmp
inc
bound
aaa
imul
cli
mov
test
jle
dec
xchg
pop
lahf
adc
dec
movsb
lock
add
mov
pop
repnz
cmp
dec
mov
xchg
and
pop
scas
jne
sub
je
or
idivb
jecxz
or
aam
out
push
sub
dec
and
mov
out
int
cmc
addr16
mov
in
ret
call
mov
and
cld
sub
jbe
mov
and
add
sbb
and
out
lret
inc
pop
jecxz
mov
push
lds
rclb
pop
xor
mov
adcb
adc
ljmp
sbb
cmp
sarl
in
lds
icebp
jno
pop
mov
inc
xorl
add
sbb
push
shll
mov
pop
test
shl
push
popf
rcll
sbb
push
clc
jnp
pop
adc
insb
int
pop
insl
jg
test
clc
mov
pop
push
push
jnp
dec
jecxz
and
dec
xchg
cmp
xor
sub
aas
scas
mov
xor
add
das
and
jl
sub
inc
sub
jbe
aam
fwait
pop
inc
iret
movsb
xor
fwait
mov
iret
clc
or
cmc
pushw
pop
pop
push
rcrb
dec
rorb
fcom
lcall
stc
mov
pusha
cmp
addr16
bound
dec
cmp
xchg
mov
nop
jbe
iret
mov
or
imull
cmp
sub
add
mov
sbb
cs
stos
arpl
mov
mov
xorb
fwait
dec
in
mov
loop
xor
mov
cmc
xlat
sti
inc
decl
mov
jns
insl
imul
pop
jns
sub
jg
push
lcall
fnsave
adc
rcl
dec
stc
test
jp
int3
hlt
push
xor
or
sbb
push
jge
pop
push
fistl
pop
and
and
js
scas
hlt
mov
sub
daa
aad
cmp
pop
inc
mov
js
aam
cmc
jb
adc
test
lcall
aam
aad
std
mov
cmp
nop
nop
add
jns
and
rcll
cmpsb
push
xor
popa
mov
adc
add
jne,pn
or
jns
cmp
test
dec
adc
into
jp
ss
aaa
or
shll
cwtl
bound
shr
loopne
pop
mov
xor
adc
mov
cwtl
add
int
inc
mov
and
daa
push
jge
jp
adc
pusha
adc
sub
dec
ret
xor
ja
jne
addr16
push
pop
fs
stos
stos
or
sbb
mov
in
mov
inc
repz
inc
ret
push
mov
fwait
lret
add
push
shl
mov
and
pop
push
fidivs
and
bound
push
int
enter
test
fadds
push
sbb
gs
push
nop
sbb
aas
xor
imul
aaa
test
jmp
gs
jno
jbe
je
rcrl
aas
mov
cmp
repz
xchg
lds
bound
sub
add
lea
xchg
rol
repnz
ss
pushf
jbe
mov
push
test
aad
es
pause
sub
daa
cmpsb
or
sbb
movsl
dec
test
jae
adcb
sbb
sub
push
adc
adc
lock
shlb
mull
movsl
mov
lds
aas
aas
aas
pop
pushf
in
mov
popf
mov
add
xchg
xchg
xor
jb
dec
xchg
mov
push
dec
call
mov
ljmp
adc
lods
js
xchg
inc
mov
xor
or
in
js
aas
pop
fs
jns
hlt
inc
pop
push
aas
nop
adc
sbb
jae
mov
pusha
lods
xor
bound
jne
xchg
mov
mov
or
or
das
lods
sbb
cli
fs
xor
fwait
jmp
cli
dec
rol
pop
push
cltd
imul
fiaddl
je
dec
sahf
and
int3
mov
es
decb
inc
call
cmpsb
sub
jo
testl
sub
sub
mov
push
push
xchg
sbb
fsubl
mov
sub
sahf
sbb
xchg
test
mov
in
mov
sub
xor
cmp
inc
adc
insb
ljmp
pushf
cmpsl
sbb
fdivrs
sub
mov
stos
inc
pop
cmp
and
push
xchg
rcrb
mov
insl
ud2
xor
out
lahf
stc
fwait
lock
call
push
sbb
inc
jge
ljmp
ss
push
mov
test
jno
mull
push
les
inc
test
fildll
push
shrl
sti
and
sub
fmull
nop
jbe
adc
rol
and
or
push
xlat
jp
ss
sbbb
xchg
jae
inc
fdivrl
mov
jae
mov
in
mov
lods
enter
cmpsl
lcall
mov
test
xlat
sbb
xor
sarl
push
cmp
dec
mov
pop
or
mov
push
movsb
shrb
cmpsl
pop
subl
leave
in
pop
lods
push
xchg
cmp
inc
fmul
addr16
or
mov
cmp
lss
call
pop
lds
dec
and
je
std
cmp
xor
pop
fisttpl
pusha
imull
xchg
jge
push
bound
fs
cld
imul
xchg
or
push
dec
fildll
push
stc
ljmp
ffreep
inc
xchg
mov
dec
add
lea
sahf
jnp
xchg
sub
aad
xor
pushf
and
xor
pop
dec
push
xor
jg
cmp
in
shl
inc
mov
dec
cmpsl
dec
jno
pushf
loop
jb
ljmp
icebp
out
jecxz
inc
repnz
cld
cli
xchg
stos
aam
or
stc
fstp
lahf
xchg
negb
push
lods
push
jb
mov
sub
out
lock
insl
add
in
sti
lock
insl
outsl
loope
pop
sub
xor
fwait
pop
in
pushf
cs
dec
push
cwtl
dec
iret
xor
mov
cmp
rorl
mov
xchg
ljmp
int
daa
out
adc
ficompl
mov
das
inc
add
test
mov
outsb
hlt
push
cmp
out
out
dec
xor
dec
mov
filds
movb
rcrl
arpl
push
mov
adc
movsb
mov
push
mov
jne
dec
gs
imul
sbb
mov
sub
xchg
outsl
mov
xor
fidivs
add
xchg
add
inc
cli
adc
cld
jb
insb
jp
outsl
xchg
xor
int
cmpl
bound
les
iret
push
arpl
adc
fucomp
mov
loope
push
ds
mov
dec
out
shlb
movsl
sub
lods
sbb
and
dec
ja
mov
loope
sub
cmp
cs
push
imulb
jle
lcall
into
pop
sub
popa
fldcw
sub
jecxz
fdivp
int3
push
jnp
cmp
adc
sbb
push
imul
or
jle
xor
jno
ja
stos
pop
imul
and
and
mov
xchg
imul
xchg
int3
push
xchg
lods
add
je
jb
pusha
jb,pn
xorb
cmp
incb
sbb
repnz
aad
int3
loope
shrl
cmp
jo
popa
fwait
cmp
push
mov
jo
movsb
pop
inc
lock
adc
xor
mov
xor
push
loope
cmpsl
add
das
lock
icebp
dec
jg
cmp
sahf
jbe
sti
xchg
shlb
sbb
fcmovnb
cmp
push
cli
pop
pop
sbb
iret
add
testl
mov
jb
pop
push
pop
dec
vunpckhpd
pop
jne
adc
imul
mov
into
add
add
lods
sahf
dec
scas
jmp
fmull
mov
cmp
lods
fs
out
insl
out
sub
mov
adc
test
fmuls
mov
outsl
add
mov
loopne
dec
or
mov
shlb
leave
movsl
in
lret
sti
add
jne
cli
lods
dec
mov
and
outsl
test
ljmp
xchg
addr16
push
ss
int
xchg
lcall
addr16
push
and
inc
jnp
xor
pushf
ljmp
outsl
mov
mov
push
push
jnp
sub
cmc
xor
inc
dec
cmp
scas
xchg
dec
pop
xchg
add
loopne
mov
mov
cmpsb
xor
dec
hlt
and
mov
lcall
xchg
xor
std
mov
dec
pop
jg
scas
cmp
mov
pop
cmpsl
rcll
sbb
scas
das
fwait
jb
xor
or
shll
imul
dec
xchg
xchg
sbb
push
cmp
push
ds
out
pop
pop
movsb
push
das
dec
loopne
lcall
adc
ret
xchg
daa
jno
out
iret
in
xor
shlb
inc
stos
cmp
inc
sbb
mov
loop
jle
mov
sub
pop
lret
mov
sbb
mov
leavew
pop
icebp
or
movsl
mov
sarl
xchg
sbb
cs
pop
ss
iret
push
push
xor
fs
jne
dec
fsubrl
pop
fcmovnu
gs
mov
cmpsb
inc
push
inc
jge
test
xchg
mov
mov
jnp
jge
stos
ss
rol
dec
pop
inc
cli
out
add
cmp
ret
aad
lods
jbe
gs
jl
dec
pop
or
in
and
xchg
push
dec
out
imul
int3
or
inc
popf
arpl
shrl
jns
mov
mov
ja
push
or
mov
out
iret
data16
inc
mov
clc
pop
mov
sbb
pop
xchg
je
push
clc
xor
push
push
cmpsb
mov
mov
sti
adc
mov
sbb
aam
call
xchg
popf
lret
subl
rorb
push
sub
inc
test
jne
addr16
xchg
in
cmp
addr16
fdivs
rolb
jecxz
arpl
mov
cmp
cld
fninit
ja
js
pop
or
push
rcrb
addl
loope
push
pusha
xchg
pop
pop
xchg
adc
push
sub
or
sbb
push
cwtl
lods
or
push
jmp
out
stos
mov
xor
xchg
xchg
jecxz
push
repz
dec
fsubr
jp
push
fcoml
andb
into
jmp
mov
mov
loopne
adc
and
xor
dec
xor
pop
push
insb
jl
sti
mov
pushf
cmc
jmp
lret
pusha
or
adc
xchg
push
xor
inc
outsb
inc
sahf
out
ret
xchg
pop
mov
push
ljmp
push
aas
insl
or
mov
xchg
icebp
in
sbb
cmp
test
data16
or
inc
stos
or
fdivs
fildl
int3
addr16
sbb
lcall
fidivrs
hlt
mov
mov
or
push
xor
jnp
test
lock
insb
add
and
mov
mov
sub
dec
mov
inc
pushf
fidivs
xchg
lahf
sbb
sbb
xor
clc
mov
rorb
adc
xchg
fidivrs
aad
outsb
inc
das
or
ja
ficompl
sti
ficoml
sbb
sti
test
dec
and
test
lods
xchg
aaa
adc
mov
push
test
xor
xor
mov
push
int3
movups
push
mov
test
ja
mov
push
ljmp
pop
jle
jmp
dec
lea
jo
mov
movsb
or
add
aad
dec
clc
sbb
testb
test
push
mov
into
dec
rorl
inc
aam
push
or
sar
fwait
les
add
rorb
test
push
stc
sbb
aam
int3
push
mov
icebp
testl
les
movsb
fidivs
sub
push
adc
mov
sar
cs
jb
xchg
dec
outsw
or
leave
push
push
jb
pop
xor
and
sti
inc
test
mov
fdivrs
dec
lret
mov
push
mov
stos
clc
add
push
addl
sbb
cltd
inc
call
shrb
stos
dec
jg
mov
lods
mov
outsb
pop
and
jbe
inc
mov
stos
mov
pop
out
mov
out
rorb
js
mov
sub
insl
popf
repnz
push
fwait
adc
adc
xchg
pop
dec
cmp
arpl
adc
out
fs
mov
je
sbb
and
std
mov
mov
xchg
stos
xchg
xchg
dec
and
add
sub
sbb
sub
xchg
sbb
or
xor
dec
jecxz
jp
into
xchg
cld
test
push
addr16
inc
push
xchg
xchg
add
jmp
fistps
icebp
jb
pop
mov
mov
pushf
imul
xor
fisubrs
call
pushf
mov
icebp
in
add
and
jbe
nop
lock
enter
add
ret
fcomip
push
adc
insb
frstor
nop
in
or
or
push
aaa
fwait
pop
jge
out
cmc
aaa
fildl
out
punpckhbw
and
or
or
sbb
outsb
shll
jle
pop
les
dec
shll
ljmp
ret
add
mov
aaa
mov
arpl
out
fstpl
xor
push
sub
popf
mov
jecxz
xor
dec
roll
in
js
scas
jg
rcrb
enter
or
add
std
addr16
mov
std
mov
pop
pushf
out
aaa
fildl
push
and
sbb
jg
in
stos
ret
int
int
iret
fwait
jb
pusha
mov
pop
fwait
xchg
jns
cs
add
mov
into
add
ds
pop
hlt
mov
test
push
sbb
lds
loope
ffreep
orl
lret
sahf
in
arpl
cmpsl
jl
inc
mov
adc
dec
push
fsubrs
lahf
repnz
mov
jae
into
mov
subb
dec
cmp
xchg
xchg
inc
test
loop
mov
fwait
and
push
jmp
sub
xchg
jecxz
mov
mov
pop
xor
aad
ret
push
shll
mov
dec
sbb
movsb
dec
nop
mov
mov
adc
subb
lahf
dec
adc
mov
data16
cli
add
pop
sti
pusha
je
mov
or
into
cld
fs
rcl
pusha
call
sti
dec
adc
lds
pop
pop
out
jae
in
not
paddd
dec
lahf
lret
int3
adc
xor
inc
sub
mov
mov
pop
orl
insb
adc
inc
mov
sbb
sti
mov
test
test
xor
mov
jmp
sbb
in
mov
lock
push
sbb
push
das
hlt
xor
and
inc
push
and
mov
pop
sahf
jl
hlt
xlat
popa
js
inc
icebp
push
ljmp
stc
sbb
and
push
mov
push
lods
clc
pop
loopne
xchg
test
sub
mov
outsl
out
arpl
dec
jecxz
das
mov
pop
mov
loopne
mov
imul
push
mov
mov
cmp
push
mov
mov
out
call
scas
test
dec
xor
cmp
jecxz
aas
test
out
outsl
inc
les
inc
int
pop
cmp
jmp
push
push
cmc
cmp
aaa
and
addr16
mov
loop
xlat
mov
push
mov
shrb
gs
les
hlt
lcall
scas
adcl
je
lea
out
out
pop
add
sti
pusha
mov
jp
fnsave
cmc
adc
popa
lods
mov
imul
mov
bound
jne
mov
sub
adc
cltd
testl
adc
enter
lods
or
cmp
subb
cmp
add
xchg
dec
clc
and
inc
mov
xchg
cs
jmp
sbb
addr16
fs
dec
xchg
mov
les
in
pop
mov
xorb
push
mov
incb
es
clc
jecxz
push
aaa
xchg
shll
rcl
enter
sub
jmp
sbb
sub
es
dec
aam
push
inc
mov
ljmp
scas
in
push
push
subl
xchg
mov
inc
sbb
mov
es
jb
sbb
and
les
cltd
sahf
jmp
flds
mov
adc
jno
lahf
add
sbb
loope
shll
lahf
adc
xor
cmp
adc
sub
jbe
data16
inc
mov
lret
loopne
mov
fsts
dec
stos
outsl
push
lahf
inc
test
sbb
loope
stos
or
mov
sahf
cmpsb
and
xchg
jl
inc
shrb
inc
cli
pop
mov
or
pop
cmp
xor
aad
dec
idivb
lea
cli
jg
out
jns
push
mov
dec
lahf
mov
cltd
and
xchg
repnz
xor
xchg
mov
inc
sub
add
jo
orl
mov
popf
mov
fisubrs
mov
test
mov
adc
into
leave
and
clc
or
pop
fdivl
mov
sahf
and
inc
lods
push
dec
rcl
mov
pop
incb
aaa
dec
pop
xor
adc
adc
sbb
mov
or
mov
dec
jmp
push
fcomps
jecxz
mov
addb
popf
xchg
loope
add
cli
dec
lods
add
dec
push
mov
out
movsb
mov
inc
pop
add
mov
and
cmp
stos
cltd
pop
add
mov
outsb
jbe
and
mov
insb
loop
xor
addr16
or
loope
lock
dec
xchg
or
bound
jnp
test
pop
mov
xchg
cwtl
test
pop
fwait
out
cmc
lods
xor
pusha
or
lods
ss
aam
rclb
stos
fdivs
mov
fidivs
push
iret
mov
inc
cmp
pop
push
leave
cmp
push
mov
xchg
std
push
sbb
inc
jmp
mov
emms
aas
xchg
out
scas
mov
mov
mov
push
imul
nop
cmp
imul
decl
jge
in
sti
xor
or
call
mov
data16
sbb
xchg
pop
sbb
je
jbe
push
cmp
pop
cmp
andb
fcmovnu
fstpt
fdivr
jle
ret
out
add
fimuls
dec
xchg
mov
sub
sbb
cmp
cmc
popf
mov
test
push
dec
sti
jnp
sar
leave
les
outsl
dec
ss
pop
pushf
outsl
repz
xchg
adc
jo,pn
in
sbb
mov
xchg
xor
sub
cmp
test
jb
sbb
pop
adc
inc
mov
fistpl
mov
rcrl
jne
cmp
xlat
sti
hlt
negb
sbbb
lea
xor
push
das
lret
mov
cld
and
mov
pusha
mov
xor
in
add
aad
addr16
push
je
cltd
mov
mov
cmp
in
mov
fisttpll
lods
xor
cmpsb
mov
push
mov
enter
and
test
shl
out
les
xchg
jo
cltd
lcall
ror
test
add
xchg
imul
data16
test
jl
xor
jae
add
xor
decl
pop
repz
lret
or
sub
add
adc
inc
std
xchg
mov
or
xor
aad
mov
mov
std
jl
mov
ljmp
dec
adc
fld1
push
xchg
popf
jnp
shl
rorl
fsubrp
mov
jbe
lods
xchg
mov
cli
sub
cmovno
sbb
adc
and
lcall
movb
lret
repz
subl
lret
xor
andl
sbbb
add
gs
enter
mov
xchg
push
js
or
mov
pop
and
dec
cmpsb
aas
ljmp
fdiv
insl
jbe
mov
xor
pushf
xor
pushf
enter
sbb
test
jbe
roll
ljmp
insb
mov
popl
cmp
cltd
push
idiv
cmpsb
jns
ljmp
mov
sbb
cmc
sbb
mov
lret
sahf
scas
and
ficompl
push
mov
leave
xchg
cli
adc
xchg
mov
imul
out
and
sbb
ds
mov
jo
movsb
jb
dec
sahf
pop
dec
dec
adc
or
fiaddl
and
inc
inc
push
shll
mov
pop
dec
pop
aad
or
int3
or
fbld
clc
push
inc
outsb
std
mov
fidivl
pusha
push
cmpsb
orb
int3
xor
fadd
insl
in
aam
daa
pop
add
fadds
dec
or
mov
out
jnp
cmp
js
aaa
inc
mov
movsb
push
stos
adc
xchg
xchg
push
fmulp
pusha
pop
sub
pop
adc
adc
mov
push
mov
test
sub
movsb
xor
and
insl
cmpsb
or
push
push
fstl
es
aad
fwait
push
cmp
xchg
adc
xchg
inc
loope
dec
jbe
or
jno
pop
int3
in
outsl
lds
aaa
jmp
mov
mov
push
int
jo
out
add
inc
ljmp
pushf
aam
or
push
in
ja
shrl
push
movsb
arpl
dec
jge
aad
jns
lcall
push
data16
add
pop
mov
lahf
insl
xchg
add
or
cld
mov
lods
jecxz
mov
jae
jne
lcall
cs
sub
and
movsl
inc
mov
jle
ret
dec
adc
mov
sarb
fcmovbe
movsl
sbb
loope
mov
shlb
sub
dec
inc
fwait
xor
push
mov
xlat
and
mov
xchg
lret
scas
xor
popa
ret
dec
pop
ja
push
and
inc
sub
insl
in
mov
add
cmc
xlat
or
sub
out
inc
daa
stos
jnp
sahf
adc
jmp
lret
dec
popf
lcall
xor
pop
and
rcrl
test
lcall
imul
bound
int
es
sbb
gs
dec
pop
dec
loope
jge
xchg
addr16
loope
cmpsl
and
outsl
into
divl
and
inc
sahf
ds
aam
repz
dec
inc
inc
popf
sbb
jnp
mov
sbb
arpl
aad
iret
mov
stos
outsl
and
xor
inc
pop
adc
aaa
push
add
push
sti
jmp
in
popf
scas
fcompl
mov
int
gs
lret
ja
in
gs
sub
repz
adc
push
insb
int3
jb
sub
imul
and
int3
fsubl
mov
pop
adc
fwait
xchg
jae
jbe
pop
mov
xchg
inc
jae
xchg
in
loop
leave
mov
adc
mov
sbb
push
add
or
in
sbb
stos
lock
repnz
pop
push
sub
addb
xlat
or
mov
popf
leave
ret
mov
pop
and
mov
xor
es
pop
pushf
inc
xchg
sbb
bound
gs
sub
and
jbe
lock
xchg
pop
loop
pop
xor
nop
sbb
jmp
jno
fisttps
xor
dec
les
call
and
sbb
adc
push
push
mov
and
leave
int3
mov
in
das
mov
xlat
fnstsw
xchg
shll
dec
xorl
mov
addl
enter
jle
lds
repz
rcrb
loopne
packsswb
cli
cmp
dec
cs
or
mul
fsubl
inc
gs
or
pop
mov
xchg
into
stos
cli
inc
stc
fimuls
sbb
inc
mov
cli
sbb
icebp
clc
push
push
pop
into
repz
out
mov
push
xor
mov
data16
jo
push
jge
bound
ror
mov
xor
mov
mov
cld
mov
ds
pusha
lds
shll
push
and
xchg
mov
xchg
jo
shr
repnz
add
sbb
adc
mov
add
jno
out
and
fwait
add
mov
inc
xor
jbe
sub
dec
push
or
sub
sar
sbb
mov
leave
mov
leave
adc
add
jle
in
pop
jle
mov
pop
xchg
jmp
icebp
pushf
push
jle
push
cltd
and
iret
mov
inc
pop
cmp
sub
and
in
imul
xor
jo
mov
call
push
movsb
in
mov
sarb
insl
ss
mov
add
gs
add
push
mov
jns
xchg
das
jg
enter
add
sub
mov
mov
dec
pop
push
mov
addb
or
add
mov
cmp
jns
sbb
subb
push
outsb
inc
wbinvd
lds
mov
adc
hlt
jg
push
ds
jmp
inc
lods
in
jns
clc
arpl
arpl
add
mov
loope
int3
adc
push
ss
cmp
je
sub
adc
push
jl
xchg
xchg
nop
mov
cmp
outsl
icebp
sar
imul
scas
add
mov
adc
imul
fs
sub
cmp
aad
dec
xchg
les
mov
and
push
mov
sbb
mov
add
adc
outsb
test
js
pop
pushf
icebp
mov
push
lret
xchg
push
push
cmpl
stc
add
mov
fiadds
xchg
cmp
jmp
loopne
imul
inc
add
pop
xor
and
sub
inc
xor
mov
sub
push
mov
fldcw
cs
fisubrs
push
insb
mov
fwait
xor
cmp
fidivs
pushf
mov
mov
icebp
pop
and
jo
test
lahf
cmp
jl
cwtl
dec
xor
jle
ficoms
adc
aam
push
adc
xorl
sti
cmp
inc
mov
arpl
mov
mov
pusha
xchg
test
pop
mov
in
push
popf
ret
aam
rcll
xchg
lahf
xchg
cmpsl
cli
fadd
rorb
inc
jl
pusha
add
cmp
cmp
es
scas
in
pop
and
push
jno
mov
cmpb
xor
hlt
mov
in
lods
mov
fstl
rcrb
adc
insb
cmp
into
out
mov
mov
hlt
paddsb
mov
pop
mov
push
jno
dec
dec
icebp
or
jmp
dec
add
dec
add
jg
pop
and
test
pop
roll
lea
jno
mov
cmp
shrb
cs
mov
cmp
inc
shl
mov
mov
fwait
jnp
hlt
xor
lret
jnp
test
sub
jp
and
add
and
fsubs
sbb
popa
push
and
mov
cltd
xor
adc
test
cmp
bound
adc
or
lret
push
jecxz
mov
shlb
data16
jg
aad
and
stos
test
mov
bound
cmpsl
xchg
shlb
ljmp
aam
jecxz
sti
mov
cmp
jns
ja
out
push
cmc
push
adc
mov
pushf
xor
daa
lea
in
inc
or
std
adc
sbb
repnz
cli
pop
lea
pop
enter
mov
aaa
jle
xchg
xchg
fisubl
adc
inc
add
xor
lret
aad
mov
sub
sub
xchg
inc
sub
out
lret
pop
pop
int
sbb
cld
push
jecxz
or
pop
pop
clc
mov
push
stos
test
pop
dec
in
cltd
pop
dec
pop
dec
data16
imul
mov
adc
loope
mov
orl
ficompl
jne
jns
push
leave
xchg
mov
dec
or
cmc
outsl
xchg
lock
cmpsl
daa
push
stos
into
cmovb
movsl
inc
imulb
jne
jne
xor
jge
hlt
arpl
jno
push
add
jb
push
xor
ret
xor
sbb
pop
cli
push
ljmp
push
mov
setne
push
pop
sub
lods
js
decb
mov
iret
jb
add
stc
sbb
arpl
fsubrp
data16
cmp
jb
dec
push
cwtl
cwtl
push
cmp
arpl
scas
jo
fprem1
jmp
cmp
or
es
jp
mov
jnp
lds
std
push
xor
jnp
adc
pop
cli
sub
mov
inc
adc
sub
out
or
cli
inc
xor
adc
sub
sub
dec
imul
rcrl
test
lds
dec
xor
add
idiv
fistps
aad
fld
and
push
mov
jb
sbb
int
loopne
repnz
pop
and
xchg
cmp
push
pop
jae
clc
loop
cmp
add
ja
pop
or
lea
fists
movaps
add
and
adc
mov
icebp
dec
push
out
mov
lods
push
call
iret
insl
subb
fdivrl
sbb
mov
mov
pop
outsl
call
rorb
cmpsb
cs
sub
lods
jmp
arpl
inc
push
cwtl
pushf
push
in
mov
out
addr16
xchg
test
outsl
cli
mov
xchg
sarl
or
cmpsl
xchg
mov
aaa
fdivl
in
xchg
call
or
pushf
lret
scas
aas
pop
out
jmp
xor
fcmovnu
faddl
pop
aad
lahf
data16
mov
jnp
int
xor
les
ficomps
daa
imul
and
js
mov
dec
xchg
cmc
movsb
push
clc
mov
test
mov
js
ljmp
add
call
lods
stc
cwtl
jb
xchg
xchg
rorb
mov
repnz
in
ss
xor
mov
mov
mov
scas
aas
mov
xchg
cli
dec
xchg
loopne
cmp
in
ds
enter
sbbl
xor
ss
rcrb
xchg
and
mov
aam
cltd
es
sbb
movsb
dec
loop
push
mov
lods
push
xor
dec
mov
sub
and
popf
in
lahf
mulb
mov
in
or
adc
cmpsb
sahf
and
rclb
das
ljmp
dec
mov
repz
or
push
and
mov
hlt
testb
xchg
sarl
inc
or
push
jg
cli
movsb
mov
mov
pusha
xor
arpl
sub
loopne
roll
pop
sbb
push
xchg
adc
ret
pop
nop
out
aam
push
repz
pop
xlat
imul
cmp
mov
dec
cmp
dec
push
mov
in
adc
jp
popf
and
lret
xchg
xor
test
inc
and
sub
bound
and
ss
out
mov
mov
out
sbb
stc
in
jb
inc
je
shr
pop
test
push
scas
cltd
mov
mov
repz
daa
cmp
push
cmpb
mov
push
mov
je
push
cmp
inc
push
out
mov
mov
popf
mov
testl
adc
popf
in
jp
sub
adc
dec
gs
push
jge
xchg
push
adc
iret
xchg
aam
xchg
test
call
rclb
mov
cmp
push
inc
adc
jns
loopne
xor
mov
ljmp
xchg
pop
jno
lss
push
popa
lea
fisubl
or
jge
pop
mov
sarb
ret
adc
mov
sbb
or
add
cmc
dec
lock
inc
mov
and
loop
fsts
outsb
movsl
sbb
ja
sti
mov
jno
sbb
rorb
dec
xchg
sbb
cli
xchg
imul
jne
sub
push
and
xchg
add
dec
sbb
or
popa
push
js
push
jmp
imul
add
xchg
mov
stos
jle
int
and
push
dec
jno
mov
frstor
or
xchg
mov
mov
lahf
scas
test
xor
popf
or
test
dec
push
xchg
cltd
stos
shlb
addr16
push
aam
mov
cwtl
fdivr
das
subl
pop
xor
push
mov
pop
call
int
mov
xor
xchg
inc
jge
in
fstl
jo
js
mov
sbb
clc
and
dec
xchg
mov
add
mov
push
fcoml
int
insl
mov
push
es
outsl
sbb
cltd
ficoml
cld
out
sbb
aaa
aam
xor
das
fwait
mov
sahf
push
xchg
inc
sbb
cmpsb
sub
pop
in
xchg
mov
lret
mov
push
or
repnz
pop
cmc
lds
test
cltd
mov
add
sar
push
lods
mov
xlat
mov
push
hlt
scas
daa
hlt
mov
jmp
pusha
jb
inc
push
lock
fbld
mov
jnp
imul
adc
je
shrl
jle
xchg
and
sbb
adc
aaa
iret
dec
ret
orl
jb
in
jno
mov
repnz
xchg
bound
out
pop
xchg
xor
hlt
mov
in
jecxz
jns
jbe
pushf
lea
cld
sbb
pushf
insl
rolb
es
mov
pop
pop
lret
push
cmpsb
xor
cmp
js
or
loopne
xchg
xchg
mov
fs
test
dec
dec
or
movsl
mov
pop
push
enter
test
dec
mov
roll
mov
lcall
adcl
add
jmp
iret
cmp
or
sbb
aas
push
sub
xchg
mov
push
jbe
xchg
or
test
mov
adc
cs
mov
and
shl
push
out
insb
pop
mov
mov
in
mov
sbb
in
test
jmp
test
dec
jmp
mov
fcomip
gs
xchg
dec
mov
push
jae
sub
movsl
dec
xor
stos
cmc
lahf
inc
jbe
leave
jb
andl
enter
loope
push
xor
sub
sahf
lahf
sub
pop
mov
out
lods
mov
inc
popw
add
mov
inc
int3
mov
and
mov
cmp
imull
mov
loop
movsl
mov
or
aaa
push
xor
je
push
dec
sub
and
dec
xorb
xchg
mov
jns
in
fildl
divl
inc
push
or
hlt
lcall
rcr
shrl
mov
stos
dec
loope
js
mov
sub
cld
jge
adc
shll
xlat
jecxz
dec
sbbl
dec
ficomps
mov
pushf
lret
or
inc
neg
or
mov
test
nop
jmp
popf
scas
pop
imul
add
add
jmp
loope
repz
dec
dec
lea
sbb
sbb
inc
xor
jno
int3
pop
repnz
outsb
dec
cli
in
shll
adc
lret
pop
shr
punpckhdq
adc
lods
dec
iret
adc
dec
stos
push
aad
popa
out
jl
cmp
pop
jns
icebp
add
add
aaa
xlat
sbb
jns
aam
xorl
xchg
pop
jg
or
repnz
inc
stos
sbb
sub
add
test
inc
out
mov
je
lcall
sbb
lcall
cmpsl
xchg
add
xor
inc
sar
adc
cltd
mov
test
dec
jns
xchg
cs
mov
lret
xor
das
gs
sbb
cmp
xor
xlat
and
fsubl
fwait
test
jae,pn
popa
cmp
jle
sub
add
push
cmp
jns
lods
bound
dec
fcmovnb
add
cmc
scas
testb
pop
adc
mov
xchg
mov
mov
add
in
ror
cwtl
xor
enter
jg
jge
cmp
divb
lods
pop
add
gs
shrl
dec
out
notb
mov
lds
out
fmull
movsl
fmul
inc
ret
pusha
sub
lea
cmp
shll
mov
dec
mov
repz
mov
and
or
adc
xor
dec
sbb
cmp
push
ret
rcrl
fsubrl
adc
push
pushf
inc
lahf
das
icebp
add
lcall
stos
cmp
jmp
dec
ja
sti
arpl
jbe
mov
mov
mov
dec
or
pop
sbb
mov
loopne
push
push
jl
popa
outsl
and
cld
loope
popf
test
pop
jnp
add
dec
xchg
roll
add
push
inc
push
xor
jae
jbe
pop
or
jnp
out
inc
cwtl
addr16
out
jge
adc
push
cltd
jno
stos
rolb
aad
and
add
in
xchg
mov
xor
sub
sub
mov
or
xor
pop
mov
shrl
or
cmpsl
imul
pop
jge
dec
jg
testb
and
mov
and
mov
fiaddl
jmp
adc
xlat
jne
add
mov
jne
lods
mov
lods
inc
inc
sbb
pop
or
aas
jne
or
xlat
adc
pop
lds
dec
imul
int
pop
add
lret
push
dec
inc
cmp
dec
fwait
push
push
in
dec
sbbb
push
mov
pop
or
push
sarl
mov
mov
outsb
cmp
jp
orb
insb
xor
xchg
pushf
nop
leave
xchg
adc
inc
adc
push
fildll
mov
push
jp
test
imul
les
xor
or
inc
in
jle
pop
sahf
js
adc
leave
cmc
xchg
clc
xor
es
mov
out
pop
xlat
fsubs
adc
add
mov
mov
ja
jb
pop
or
xor
and
pop
xchg
pop
mov
fs
inc
mov
mov
aaa
sub
jecxz
repnz
ret
add
dec
and
mov
adc
mov
mov
mov
add
mov
mov
push
rcrl
cwtl
cmp
xchg
into
pop
imul
test
sti
fmuls
pop
shl
push
push
mov
out
test
push
xor
lcall
mov
push
cltd
adc
stc
jge
fistl
scas
std
jb
push
rcl
je
xor
lea
mov
aad
push
mov
fst
mov
pop
push
pop
mov
data16
std
popf
or
mov
stos
cli
add
xor
push
xor
cmp
scas
sub
loop
xchg
cmpsb
fisttps
pop
ror
clc
movsl
daa
fs
test
cmp
test
push
mov
outsl
sbb
jno
bound
leave
adc
mov
xor
lods
xchg
xchg
pop
test
add
fistpll
cld
ljmp
subb
sarl
or
mov
pop
add
jg
movsb
rcrb
sbb
push
imul
adc
push
cmp
pop
popf
mov
rorb
cld
cmc
cmpsl
inc
or
xor
xchg
push
jmp
add
push
cmc
add
sbb
mov
or
outsl
adcb
jle
jb
inc
clc
sub
outsb
mov
adc
sub
cmp
sbb
sbb
in
or
sub
jmp
addr16
stc
rcll
sub
cmc
and
aad
popa
adc
mov
xlat
lahf
inc
outsb
call
add
dec
cmp
push
cmp
mov
lret
mov
mov
cmp
pop
scas
dec
mov
and
imul
or
mov
cmpsb
mov
cmpsb
xor
cmp
pop
lret
subw
and
stos
add
cmc
sahf
hlt
jnp
inc
xchg
ficompl
sbb
stos
sbb
das
fs
mov
dec
xor
lcall
daa
jg
or
outsb
sahf
push
les
xchg
out
fcos
arpl
fldt
in
int
pop
loope
push
adcb
jp
pop
inc
inc
sub
pop
mov
sti
mov
dec
mov
test
fdiv
lret
or
push
pop
outsl
int3
daa
dec
and
lods
and
mov
cmpsb
out
enter
mov
inc
out
mov
jae
mov
repnz
cmp
ret
xor
xor
cmc
push
insl
adc
mov
lcall
sahf
mov
push
outsb
leave
insl
fmul
mov
insb
sub
repnz
test
add
fwait
into
jno
ret
roll
and
insb
or
fsubrs
jb
inc
movl
mov
dec
cltd
xor
add
mov
int3
xchg
lods
push
mov
insb
xchg
mov
inc
jl
lea
es
call
mov
jne
push
in
bound
addb
mov
fildl
jo
mov
adc
sub
mov
jae
inc
mov
or
lea
pushf
rolb
or
leave
clc
jp
cwtl
sti
xchg
mov
adc
jns
shrb
cmc
mov
cmp
les
test
push
xchg
fsubrs
mov
push
push
and
and
data16
std
inc
fdivp
stos
rcrl
insl
or
aaa
inc
lcall
pop
int3
xchg
outsb
xor
in
subl
mov
repnz
pop
adcl
pop
and
cmpsl
or
out
fisttps
cld
xor
lahf
iret
mov
hlt
cli
mov
mov
cmp
sti
mov
and
jge
inc
insb
xor
popa
lods
mov
jmp
repnz
lea
xchg
add
ret
movsb
mov
adc
js
mov
rcr
jp
jp
inc
or
adc
movsb
cld
add
xchg
sbb
or
or
adc
xchg
cwtl
xchg
out
dec
in
mov
adc
sub
lahf
ja
cmp
gs
inc
jl
frstor
mov
cli
push
ret
and
mov
mov
cmc
jecxz
sub
sbb
cmp
ja
out
xchg
test
outsl
fs
mov
sub
xor
cmp
shlb
and
or
loopne
xor
xchg
jecxz
lahf
insb
fimuls
jns
and
fs
scas
xor
or
nop
dec
mov
mov
lds
add
add
push
lods
add
jns
sbb
rclb
push
jg
mov
das
sbbl
punpckhbw
pop
cmp
fisttpll
out
xchg
ret
int3
repnz
sub
push
push
ja
incl
jne
and
mov
ret
loope
ds
cmpsb
pop
push
pop
push
or
les
mov
mov
or
fstpl
es
lret
aam
ja
int
dec
mov
leave
dec
dec
cld
fs
in
movb
loopne
aas
in
imul
out
sahf
xchg
ret
movsl
and
int3
pop
pop
inc
loopne
nop
movsb
out
test
insl
sti
lds
xor
in
scas
inc
add
adc
push
mov
push
int
in
mov
and
mov
jbe
inc
dec
add
xchg
inc
dec
fcoml
mov
ljmp
ds
iret
xor
rcrb
mov
sbbb
cwtl
inc
and
push
loop
pushf
scas
leave
ret
bound
jp
push
xchg
jecxz
xlat
adc
es
jmp
iret
mov
and
repz
pop
hlt
push
jbe
and
mov
mul
cmp
sub
es
jg
sar
ds
repnz
out
cmp
jns
cmpsl
shlb
push
leave
pop
and
lcall
cmc
js
dec
and
adc
jle
aad
lea
lock
lock
mov
out
xor
xor
xchg
add
adc
jge
adc
xor
test
js
ja
stos
pop
addr16
push
sahf
jo
inc
out
aam
jle
testb
cmpsb
mov
mov
xor
adc
rorl
add
mov
sub
lods
leave
incl
adc
leave
and
test
mov
push
and
mov
ficompl
sub
xchg
jecxz
xor
out
pop
sbb
xlat
jno
push
mov
pusha
into
popf
mov
popf
mov
adc
hlt
mov
mov
dec
pop
les
xchg
jp
sahf
xor
xor
call
sbb
add
and
insl
aad
adc
add
mov
inc
cmp
cwtl
xor
ret
fisubrl
and
mov
sti
xchg
into
outsl
sbb
lods
inc
xor
xchg
mov
jle
sub
mov
jle
dec
mov
ret
out
test
fdivs
mov
cmc
out
mov
movsl
cmp
aaa
dec
mov
jns
stos
mov
pop
mov
pop
add
sbb
or
insl
or
sahf
and
dec
insb
pop
adc
push
aas
adc
adc
ds
shr
xchg
push
js
shlb
fcomi
es
fisubrl
sub
in
les
dec
mov
xchg
pop
js
sbb
jp
int
outsb
scas
ss
lods
into
ja
mov
ljmp
out
test
dec
push
sar
pushl
lock
andl
cwtl
rclb
mov
rclb
mov
insl
rcll
roll
xchg
in
insl
and
imul
sahf
mov
pop
mov
loop
mov
in
scas
loopne
jae
add
sbb
fstpl
cmp
inc
std
hlt
inc
pop
xchg
das
add
fnstenv
imull
daa
jno
test
add
and
xor
dec
test
aaa
mov
pop
sbb
dec
mov
or
mov
lcall
hlt
adc
shrl
add
stc
mov
and
or
pop
divl
jmp
aas
fistps
outsb
adcl
push
xlat
adc
dec
scas
jbe
xchg
insl
adcb
push
or
cwtl
cmp
pop
lock
jmp
adc
stos
rcrb
sub
fstl
insb
cmc
loop
pop
cmp
cmp
jno
sbb
adc
mov
inc
dec
pop
lret
mov
dec
iret
scas
dec
push
adc
xchg
pusha
ds
mov
inc
inc
notl
inc
mov
je
repnz
push
pop
mov
jo
mov
push
cmp
aaa
add
shrl
xchg
stc
jns
das
pusha
xchg
fimull
xor
pop
cmc
pop
adc
jbe
push
sahf
stos
imul
inc
movsl
add
sahf
test
jno
movsb
mov
xor
outsb
add
dec
scas
mov
icebp
enter
cld
inc
mov
stc
add
pop
xor
or
or
or
sbb
scas
pushf
push
sbb
sbb
pop
int
cmpsb
and
fwait
mov
icebp
in
pop
cli
xor
rcl
fcomps
daa
cmp
shlb
xchg
mov
mov
addb
and
hlt
inc
add
inc
push
ret
ror
daa
in
loop
sub
pop
sbb
test
out
imul
inc
mov
cmp
das
mov
and
repz
inc
add
mov
hlt
int3
in
adc
fidivl
lahf
dec
outsl
inc
mov
sub
bound
jae
pop
xchg
sbb
out
add
fildll
mov
outsb
imul
cltd
vaddps
mov
dec
dec
and
ret
xor
fadds
and
mov
inc
scas
xchg
xor
xchg
or
or
jl
cmpl
fsts
fsub
aas
je
ret
imul
push
pop
lret
jp
ds
sahf
sbb
leave
mov
test
inc
cmp
jmp
outsl
mov
ret
push
out
pop
mov
dec
daa
cmp
pop
lods
dec
adc
adc
cltd
ja
clc
pop
dec
push
or
ret
cwtl
lods
xor
ret
cmp
xor
jmp
mov
outsl
push
les
mov
sti
inc
mov
fists
jo
xchg
jle
movsl
dec
rcl
sbb
scas
push
shrl
in
lret
jmp
mov
fstl
xchg
roll
xor
dec
dec
arpl
hlt
mov
mov
push
scas
jne
add
mov
xchg
rclb
mov
push
fwait
loopne
or
mov
aas
pop
sahf
or
and
fstpt
lock
es
fcmove
popf
adc
jge
mov
jae
stc
repz
push
es
or
int
xor
sbb
dec
das
arpl
mov
int
and
aaa
shll
lods
call
frstor
xchg
shll
inc
inc
pop
icebp
mov
mov
ljmp
stos
and
aam
fidivl
fwait
stc
int3
imull
sub
sub
in
dec
repz
mov
mov
lret
enter
loop
push
mov
nop
mov
test
cmc
fldcw
dec
fs
jne
xchg
or
and
dec
jo
xchg
hlt
xor
insb
test
mov
push
jecxz
sahf
mull
rcl
mov
stos
sbb
pop
hlt
jnp
test
push
sub
adc
out
sbb
sub
jge
jp
arpl
loopne
enter
jmp
mov
loope
xor
aaa
outsl
mov
ds
jo
cmc
stos
out
cmp
jo
sub
and
sar
pop
mov
mov
imul
jecxz
pop
stos
and
pop
fidivrs
mov
lods
iret
sub
lret
and
sbb
bound
pop
mov
or
sub
and
sbb
pop
inc
stc
dec
cmp
ss
push
in
push
addr16
or
outsb
lock
inc
stos
std
jb
pop
repnz
mov
cmp
sbb
pop
lods
mov
pop
sub
stos
mov
mov
ror
lret
cs
push
push
mov
out
hlt
mov
mov
add
add
jmp
cmpsb
jbe
xchg
mov
cli
jo
and
rcrb
int3
mov
je
adc
enter
stos
dec
cwtl
mov
andl
sbb
adc
mov
das
cmp
xlat
push
hlt
lock
push
pop
je
pop
int
pop
jp
jg
or
sti
inc
xchg
repz
lock
shlb
xor
jecxz
sbb
pop
inc
dec
roll
push
mov
adc
test
xchg
or
jg
mov
stc
jmp
mov
mov
cmp
daa
pop
shrl
xor
mov
inc
popf
jne
orl
pop
push
aaa
in
mov
inc
mov
push
xchg
jl
int
xchg
fisttpll
cmp
stos
sbb
dec
pop
bnd
add
inc
out
nop
xor
ret
or
imul
pushf
inc
mov
pop
int
call
stos
or
outsl
dec
or
mov
daa
jmp
decb
inc
or
lods
sbb
dec
xchg
cmp
push
cmp
mov
and
cli
andb
icebp
mov
cmc
mov
cltd
xor
dec
mov
xor
mov
mov
xor
je
jl
cmp
sti
push
repz
inc
std
sbb
mov
and
lret
leave
sbbl
in
in
jle
addr16
add
bnd
jb
enter
inc
loope
sub
in
dec
lahf
negl
sbb
xchg
lock
out
jns
mov
scas
daa
xor
or
arpl
fdiv
cli
push
adc
pop
rolb
mov
xor
loop
rcrl
movsb
repnz
mov
aaa
es
mov
fwait
adc
cmpb
pop
sub
adc
mov
scas
push
push
lret
and
stc
testl
aaa
popf
jecxz
leave
push
cli
mov
xor
dec
pop
bound
lock
aas
pop
dec
and
testb
inc
lret
insl
fbstp
add
or
mov
mov
xor
loopne
mov
and
lock
je
addb
outsl
pop
call
cmc
inc
or
add
pop
xchg
dec
jmp
cmpsl
pop
ret
cmp
mov
mov
xor
xor
xchg
fadd
inc
call
scas
out
xchg
in
out
cmpl
pop
sub
aad
dec
add
fwait
mov
test
xchg
lahf
scas
mov
mov
data16
aaa
jae
dec
popf
xor
pop
mov
mov
out
cmp
insl
cltd
test
cmp
loope
lds
sti
cmp
pop
loopne
pushf
xchg
add
mov
adc
movsb
cmova
hlt
fs
mov
ja
pop
rol
adc
jne
cld
mov
jge
pop
adc
or
pop
and
pop
mov
into
xchg
xor
sub
xchg
fistl
lods
in
movntq
out
and
inc
xor
loopne
ret
sbb
lahf
mov
sbb
imul
xchg
call
es
xchg
sbb
jge
sbb
jbe
out
add
xchg
mov
cmp
mov
fldt
and
dec
mov
sub
inc
mov
push
add
test
aam
sbb
sbb
ljmp
cmpsb
xchg
mov
clc
jnp
dec
push
rorl
jnp
cmp
push
mov
outsl
mov
cmp
fists
stos
mov
loope
mov
jns
dec
das
je
notb
or
les
sbb
pop
sti
mov
test
loop
in
push
cwtl
sub
fistpll
mov
cwtl
dec
mov
rcr
arpl
and
and
idivl
aam
in
mov
cli
cmp
push
cmp
movsb
fs
and
cmpsl
loop
xorb
mov
push
add
sbbb
push
mov
cmpsb
push
dec
out
xchg
jecxz
pop
lahf
mov
dec
dec
mov
outsl
rorl
test
loop
push
dec
arpl
js
dec
jl
lea
mov
push
dec
mov
scas
je
popf
mov
jns
cmpb
fnsave
insl
dec
fldt
imul
inc
push
sbb
add
incb
mov
rorb
push
test
lds
in
jl
sahf
adc
mov
mov
mov
faddl
or
mov
stos
call
pusha
or
dec
jmp
cmp
adc
or
cmc
call
xor
xchg
dec
xchg
mov
jne
push
lret
xchg
push
mov
xlat
lea
std
sar
mov
movsl
mov
stc
push
aad
push
stos
inc
sub
xchg
mov
adc
addb
fs
cmp
repz
stc
lret
xlat
xor
sub
scas
mov
out
mov
jmp
push
mov
clc
mov
adc
mov
mov
test
movsb
in
dec
push
sub
in
repnz
loope
add
lcall
mov
mov
movsl
pushf
jl
cmp
push
rcrb
dec
rcrb
and
xor
idivl
adcl
rcl
mov
and
mov
je
andb
imul
cmp
rcrb
arpl
cwtl
sbb
dec
and
rcll
repnz
popa
dec
inc
in
mov
inc
xchg
and
test
shl
into
and
push
mov
and
push
lock
cmpsb
jo
inc
push
sub
add
lods
sub
add
cmp
adcl
outsb
jo
dec
inc
push
mov
mov
adc
jns
bound
sbb
mov
push
ja
mov
fs
dec
aaa
sahf
xlat
add
enter
jp
pop
filds
fisubrs
rcrl
xchg
pop
fistps
or
sub
cmp
mov
adc
adc
xchg
les
jle
std
cvtps2pi
into
gs
loope
mov
lods
push
jo
shlb
ror
rcrb
jo
mov
dec
mov
ds
xlat
inc
xor
sahf
imul
jecxz
test
mov
mov
ds
stos
fcompl
div
mov
es
inc
cmp
lods
in
xchg
mov
lods
add
cmp
dec
inc
push
dec
ja
mov
push
xchg
pop
imul
lods
sbb
loope
insl
mov
mov
pop
xchg
inc
mov
cmc
lea
or
dec
ss
inc
outsl
pusha
ss
jb,pn
mov
mov
notl
jb
adc
or
xor
sub
inc
push
test
inc
sbb
sbb
push
xchg
loopne
fcompl
ss
push
xor
add
push
xchg
push
jl
mov
push
xchg
pushf
rcr
in
fimuls
inc
dec
and
xchg
sbb
or
pop
inc
and
push
rcrb
and
mov
out
sbb
dec
mov
loope
aas
xor
jb
loopne
int3
jmp
cmp
je
xor
addb
sub
push
mov
mov
mov
aad
cwtl
pop
mov
mov
push
call
imul
daa
repnz
or
fcmovnu
jae
and
add
cmp
push
test
sti
je
popa
punpckhwd
sbb
movsb
test
sub
stos
cwtl
jb
js
movsb
and
push
sbb
mov
out
ret
push
jg
xchg
repnz
sub
cwtl
mov
sti
mov
adc
dec
js
test
mov
xor
pushf
repz
ret
repnz
movzwl
mov
roll
stc
repz
jecxz
adc
icebp
adc
pop
push
clc
xorb
scas
jb
mov
adc
out
push
jecxz
add
leave
push
jae
jne
ret
aad
int3
xchg
sbb
or
xchg
jecxz
lods
sbb
repz
mov
add
jno
xor
lea
sub
add
xchg
jns
icebp
adc
mov
xchg
dec
mov
xlat
sub
stos
scas
mov
es
or
sbb
mov
into
xchg
dec
shlb
cmpsl
sbb
testl
push
scas
xchg
fcoml
push
outsl
fldt
cwtl
mov
mov
inc
adc
inc
in
mov
adc
cmpsb
lret
stos
jmp
adc
fwait
mov
jns
mov
inc
or
pop
lock
out
jns
testl
inc
sub
divl
arpl
mov
imul
mov
shlb
dec
addr16
out
xchg
push
sub
mov
lcall
jbe
lahf
cwtl
dec
popf
test
fwait
cltd
sbb
mov
out
pop
jne
add
mov
rclb
sub
pop
dec
inc
sarl
cli
inc
xchg
push
fimuls
add
jo
pop
fsubp
mov
imul
sbb
loop
out
gs
ljmp
jne
xchg
int
popa
pop
stos
into
and
lock
pop
test
xor
test
pushf
cli
pop
out
sarl
out
mov
jnp
repz
mov
cmpsl
iret
out
mov
sub
lock
aaa
jge
loopne
mov
mov
loopne
or
xor
and
xor
cwtl
adc
lcall
gs
push
imul
mov
rcr
rcrb
mov
sar
int3
dec
xchg
cli
lods
gs
loope
xchg
sbb
aam
data16
xor
lret
pop
sub
ret
nop
jp
pusha
cmpl
lea
fisubs
and
cwtl
push
mov
mov
cwtl
inc
mov
cltd
or
jno
idivw
jecxz
std
test
das
bound
iret
imul
adc
jae
push
jb
pop
imul
jae
mov
movsl
aas
and
stos
mov
int
xchg
push
fiaddl
fnsave
movsl
sarl
sbbl
add
mov
pusha
ja
popf
and
pushf
nop
out
sub
push
scas
ja
xor
pop
sahf
add
mov
xchg
pop
ret
fisubs
lahf
ret
lahf
in
cmpsl
jmp
jl
dec
xor
inc
fistl
testl
push
pop
jno
cmpsb
cmp
aas
icebp
cmpl
dec
mov
insl
outsb
dec
mov
into
sbb
adc
fwait
addr16
std
jecxz
mov
add
mov
jae
pop
sub
push
add
mov
xchg
rdmsr
test
mov
lds
es
mov
add
inc
pop
iret
pop
ljmp
outsl
adc
je
xor
jp
in
mov
jnp
lret
mov
adc
inc
scas
test
push
movsl
push
inc
xor
push
std
xchg
inc
stos
mov
add
add
mov
rolb
sbb
stc
sub
lock
pop
xchg
pop
pop
test
mov
bound
scas
jo
negl
jmp
and
add
pop
cmc
sbb
dec
jns
mov
test
dec
pop
mov
push
lds
loope
xor
outsl
mov
sub
add
ret
jmp
xor
dec
inc
fwait
mov
inc
mov
loopne
out
cs
nop
mov
leave
push
xlat
pop
xor
adc
mov
arpl
lea
fcmovnbe
dec
shl
ret
decb
fistpl
in
pop
in
xor
xchg
jno
adc
lods
dec
aaa
lcall
jl
pop
mov
add
mov
rorl
out
aas
adc
adc
lods
push
pop
push
xor
jmp
jb
outsl
push
lods
ds
sub
cmp
aaa
jl
aas
ljmp
jb
ss
jl
mov
icebp
daa
notb
or
stc
outsb
divb
xor
pop
out
in
mov
pop
xchg
lds
xchg
je
sbb
cmpsl
mov
sub
xchg
xchg
mov
jmp
in
inc
mull
movsb
stos
adc
sahf
or
sahf
push
inc
enter
and
adc
enter
jo
sti
imul
sub
sub
xor
jne
or
sub
adc
and
sti
aad
xchg
dec
pop
cmp
xchg
dec
sbb
data16
lahf
jnp
mov
js
enter
sub
push
jle
pop
sub
outsb
jb
mov
jecxz
or
loopne
or
in
and
push
xchg
or
or
xor
cmp
xor
pop
pop
sbb
and
fcomp
stc
fiadds
or
ret
fsubl
inc
mov
xor
or
cltd
fmulp
stos
ss
data16
cmc
push
inc
adc
mov
lcall
mov
cli
inc
aaa
adc
dec
jns
test
adc
ljmp
sub
arpl
je
stos
dec
xchg
in
dec
sbb
jns
cmp
je
mov
icebp
enter
dec
in
mov
in
add
je
push
dec
ret
xchg
inc
mov
fwait
gs
cmc
sbb
adc
inc
cmpb
pop
dec
cmp
aas
add
mov
dec
mov
push
out
lcall
lret
and
xchg
lea
in
test
inc
dec
in
xor
rolb
xchg
sub
add
mov
xchg
pushl
inc
jp
daa
xchg
ljmp
iret
outsl
rolb
adc
cwtl
lock
pusha
jecxz
sub
test
jnp
mov
mov
sub
pushf
mov
inc
jnp
pcmpeqw
add
inc
cli
ret
mov
rcrl
sbb
xor
mov
rol
jbe
pop
cmpsl
insl
fwait
mov
mov
popa
loopne
das
inc
inc
add
or
inc
lods
lds
addr16
ljmp
push
shrl
fildl
popf
hlt
test
pop
xor
lods
cmp
xchg
xchg
divl
mov
aam
and
xlat
dec
jb
add
popf
mov
in
xlat
push
dec
sbb
into
into
insl
pop
xchg
iret
push
test
adc
mov
pop
ret
arpl
or
dec
in
shll
cltd
jge
call
lock
and
jb
out
mov
dec
repnz
into
xor
xchg
jae
or
cmp
jge
sub
lods
lahf
inc
or
xchg
imul
pop
testb
ljmp
test
test
adc
push
hlt
inc
sub
sub
arpl
mov
pop
std
jecxz
or
lods
stc
je
push
sti
scas
pop
cs
jbe
enter
push
xchg
ljmp
push
xchg
adc
addr16
push
inc
shl
xor
cmpsl
pop
add
and
or
fiaddl
mov
mov
rcrb
fs
cmp
mov
jbe
mov
sbb
mov
bound
inc
mov
sub
sub
popf
mov
out
push
mov
or
les
sbbl
cmpsl
rcrl
sub
or
arpl
pusha
cmp
icebp
aam
dec
imul
xchg
adc
add
pop
push
repz
jns
rcl
inc
lret
out
or
inc
fbld
sub
mov
pop
cmpb
leave
daa
les
arpl
and
data16
loope
movsl
mov
in
pop
mov
xchg
mov
ficomps
sbb
push
dec
aas
ret
lcall
ds
nop
dec
or
sbb
cmp
mov
sbb
xchg
lret
in
loope
and
in
enter
ret
xchg
mov
and
mov
in
adc
pusha
js
iret
pop
pop
lods
dec
xchg
xchg
insb
xchg
aam
jp
les
or
fs
pop
pushf
mov
lcall
xchg
cmp
stos
jb
loopne
test
stc
negb
cmp
xchg
leave
fldl
popa
ret
sub
mov
adc
movsl
adc
pop
adc
fwait
mov
jae
movsl
cmc
push
sbb
movsl
std
gs
mov
movsl
rolb
or
sub
push
jge
cmpsb
sub
ret
push
jne
pusha
fcmovnu
fcmovb
mov
mov
incl
cmp
cmp
cmp
mov
int
pop
mov
jp
decb
sahf
xchg
pushf
adc
sbb
xchg
stos
mov
sbb
outsb
xor
cmpsl
and
mov
xchg
dec
pushf
add
imul
mov
in
orl
push
pop
out
pop
call
xchg
fisttps
add
jge
inc
scas
adc
and
xchg
mov
cmp
adc
repz
sbb
mov
push
mov
pop
out
sub
jg
xchg
jne
dec
movsb
jp
addl
or
add
xchg
cwtl
sarb
in
cmp
sub
stos
adc
imul
mov
pushf
pop
stos
xor
in
mov
pop
in
xlat
lret
subb
add
je
mov
js
xor
push
or
xor
push
out
mov
push
sahf
push
loopne
add
pushf
andl
sub
push
add
psubusb
dec
sbb
test
movb
in
lret
aam
dec
shlb
int
hlt
dec
mov
mov
mov
dec
lcall
iret
or
mov
dec
jl
cli
sbb
ljmp
push
or
subb
in
scas
and
xchg
cmp
cld
shl
out
addl
xchg
sbb
test
ss
lods
into
and
sbb
lret
xorb
dec
in
push
pop
xchg
mov
fsubp
aaa
lods
jge
mov
loop
jecxz
cmp
lret
mov
cwtl
int
and
lcall
test
dec
jae
sarl
sbb
mov
jge
sbbl
push
sti
scas
sub
jp
pop
adc
in
xchg
test
std
push
jne
push
aam
rclb
jo,pt
in
idivl
jp
and
popf
sbb
addr16
jmp
das
xchg
jne
dec
mov
scas
ds
aam
sub
lods
pop
jns
jo
in
das
sub
xchg
imull
push
mov
out
or
sbb
jle
dec
cltd
lret
loop
ljmp
mov
fwait
sub
icebp
sahf
arpl
jno
xchg
lret
fldcw
ret
loopne
cwtl
sahf
add
pop
jg
idivb
sahf
lock
ds
xchg
fsincos
leave
ss
cmp
mov
std
push
and
fnstcw
mov
and
dec
inc
inc
call
inc
flds
insb
or
mov
cmp
jns
ljmp
or
xor
sub
mov
push
push
jb
stos
adc
imul
scas
ds
es
testl
jp
into
clc
fildll
add
jbe
pop
enter
mov
test
ja,pt
loop
dec
jno
dec
insb
jecxz
mov
mov
pop
sbb
adc
push
fnsave
lods
bound
shr
and
sub
mov
das
test
out
int
cmp
jo
xor
das
ret
jecxz
inc
mov
pushf
cmp
or
das
icebp
and
and
pop
dec
mov
out
add
out
js
aas
fdivr
movsb
mov
fstp
lea
cmp
push
lds
aam
daa
xor
es
cmp
dec
push
xchg
pop
arpl
jge
xchg
sub
fisubrl
int
cmovns
shlb
and
push
lods
out
pusha
pop
rcrl
inc
ret
shll
daa
add
cmp
jmp
ficoms
stc
push
inc
pop
ret
out
fstps
push
movsl
cmp
out
pop
rcrb
loop
lods
xchg
ss
and
mov
mov
xchg
sub
rolb
lret
xchg
sahf
and
mov
mov
sahf
shlb
xchg
cmpl
pushf
jb
mov
push
inc
movb
push
pop
leave
and
add
mov
xorb
pop
xchg
adc
in
lahf
ds
sub
dec
std
cmp
ficoml
rcll
sub
call
mov
pushf
pop
and
push
jbe
xchg
outsb
add
push
push
add
jno
jge
sbb
xlat
inc
rclb
icebp
lock
inc
push
cmp
loop
fwait
inc
lods
push
dec
addr16
subb
mov
cwtl
rorl
add
or
xor
js
subb
push
and
idivb
cmpsb
cmp
dec
fidivrs
cs
lret
xchg
enter
jge,pn
dec
xchg
rcrb
xchg
int3
in
sti
int3
scas
xchg
cmp
enter
xor
popa
mov
and
test
cmp
loope
cs
add
cmp
cmp
inc
or
div
fsts
cmp
fmuls
mov
dec
adc
aam
mov
lods
jae
adc
pop
pop
mov
lret
sbb
cmp
mov
call
inc
xor
push
dec
hlt
cmp
or
mov
icebp
negl
dec
jne
and
mov
sub
iret
pop
out
jo
repz
bound
mov
nop
or
test
and
js
test
dec
stos
and
mov
stos
mov
ljmp
jp
cltd
and
pop
sahf
imul
and
repnz
test
rcrl
cmp
mov
mov
test
xor
jmp
out
scas
call
cld
jbe
sti
inc
aas
cmp
test
icebp
dec
push
pop
aad
mov
arpl
cmp
jge
mov
push
or
mov
call
rolb
std
push
mov
pop
dec
ret
lock
in
loope
mov
into
repnz
mov
sbbl
das
movsl
bnd
clc
jno
cmpsl
inc
rclb
pop
cmpsb
mov
fs
clc
in
mov
aad
xchg
push
std
mov
jle
in
stos
and
inc
sbb
mov
add
push
and
repz
jo
std
dec
in
adc
xchg
xchg
mov
sub
popa
sahf
arpl
sahf
ret
pop
push
cmpsl
shl
hlt
ljmp
sbbl
dec
mov
xchg
les
lock
mov
lret
xchg
insl
cli
jb
bound
mov
test
mov
mov
xlat
cmp
pop
cmp
pop
pop
mov
mov
hlt
loope
dec
movsb
lods
cmp
jmp
cld
fildll
cmp
dec
cmpsb
loope
in
mov
lret
mov
mov
or
ljmp
cli
addr16
stos
jo
leave
scas
inc
jg
mov
ljmp
cld
mov
enter
clc
stos
fcomps
adc
jecxz
sub
or
sti
lret
mov
mov
in
pop
movsl
jp
fmulp
sbb
arpl
neg
push
push
test
cmp
mov
cmp
pop
das
fsts
dec
imul
jle
test
ds
les
sbb
xor
mov
dec
push
pop
mov
dec
stc
dec
mov
addr16
leave
and
hlt
mov
sub
lea
fmuls
adc
push
add
sub
sti
into
outsb
cs
add
pop
mov
sarl
lret
repz
pusha
cmpsl
test
mov
insb
pop
push
rorl
enter
les
and
jae
aas
daa
arpl
std
cmp
mov
dec
jae
ficoml
cli
mov
and
mov
mov
push
lods
cmp
dec
xor
jnp
adc
out
mov
push
jle
fcoml
in
mov
sub
loopne
or
movsl
add
inc
movsb
insl
stc
int
ljmp
out
push
dec
bound
inc
lea
outsb
pusha
adc
mov
test
or
divl
xor
mov
popf
adc
fbstp
mov
int
sub
imul
mov
mov
cmp
push
mov
sbb
cs
sub
mov
dec
outsb
jnp
pop
clc
int
push
jl
dec
xor
stos
lds
cld
test
in
mov
imul
cmc
and
pop
mov
push
mov
inc
adc
int
lea
jne
loop
psubusw
cmp
push
stc
or
and
pop
pop
push
sbb
repz
cmp
mov
stc
or
dec
or
in
mov
test
ja
push
rcrl
mov
cmp
popa
pop
addr16
fdivr
push
mov
inc
mov
push
mov
lret
imul
push
inc
mov
xchg
and
mov
inc
xor
rcr
pop
lret
jmp
sub
xchg
pop
push
xor
ja
lret
lods
and
roll
shl
and
mov
add
pop
shrb
call
ror
or
cli
mov
mov
fisubrl
inc
icebp
cmpsb
inc
fisubs
arpl
imul
sbb
scas
ljmp
sahf
mov
stos
and
pop
leave
mov
mov
xchg
pop
and
enter
fcmove
jecxz
mov
mov
xchg
push
and
push
sbb
cltd
ja
dec
xchg
movsb
and
mov
pop
sbb
xchg
lret
daa
lea
sbb
sarb
pusha
adc
xor
hlt
dec
loop
add
and
cmp
mov
inc
and
mov
data16
fdivrl
mov
jbe
ljmp
xor
orl
repnz
je
outsb
sahf
mov
pop
or
add
mov
scas
mov
jnp
mov
xchg
nop
xorl
cmp
popf
cmpb
out
bound
mov
aaa
xchg
ficoml
call
cmp
daa
jbe
repnz
outsb
pop
jnp
sarl
jge
sbb
pop
insb
jns
outsb
ret
sub
xchg
jecxz
add
outsb
lahf
mov
fsubrp
cld
shl
cmp
bound
into
mov
sub
fwait
das
and
sbb
jl
jl
and
jns
pusha
add
add
xchg
fistps
test
mov
sti
sahf
dec
int
sbb
movsb
inc
sub
inc
int
cmpsl
and
repz
lock
cmp
in
cmp
orb
adc
int
enter
and
imul
mov
xor
ljmp
fidivrl
jp
dec
std
pop
dec
xor
cwtl
test
pop
das
mov
sbbb
in
xor
int
xorl
add
imul
lds
shll
test
mov
pmulhuw
cmp
mov
mov
inc
mov
add
mov
in
mov
test
dec
xchg
cmp
rorl
das
loope
mov
mov
jecxz
loopne
ds
push
jle
cmp
sarl
lods
jecxz
push
add
daa
sub
loope
in
mov
cwtl
push
add
popa
xchg
inc
sub
shrl
dec
test
push
lods
mov
jg
fdivs
sbbl
iret
sarb
aas
lret
fwait
aam
aad
icebp
mov
nop
loope
jg
dec
mov
cwtl
inc
fdivl
pop
pop
lcall
jp
sbb
jmp
sbb
lret
into
in
daa
dec
cmpb
cs
lods
movl
packssdw
and
add
rcrl
repz
fwait
mov
stos
rolb
or
jbe
adc
sub
adcl
mov
inc
call
jl
dec
dec
cmp
rcrl
or
shr
ss
das
pop
les
inc
icebp
add
ja
xchg
xchg
dec
movsb
pop
or
and
lcall
enter
inc
push
stos
sarl
dec
incb
sbb
ds
pop
dec
mov
adc
das
cmp
and
mov
sbb
enter
lahf
outsl
shl
inc
mov
pop
or
jg
pushf
xchg
jg
roll
je
and
outsl
icebp
or
or
or
jg
and
scas
pop
clc
jbe
mov
sbbl
mulb
jno
jo
aaa
xor
test
mov
cmp
je
xchg
lahf
mov
jo
fnsave
stos
data16
ret
dec
mov
push
push
or
mov
sbb
shrb
pop
ret
les
ror
xchg
cli
dec
mov
repz
mov
mov
ss
push
jbe
lds
popa
xchg
mov
cmp
sub
dec
outsb
mov
scas
in
call
repnz
mov
jne
sbb
adc
ret
out
push
aam
adc
pop
and
icebp
daa
pop
stos
hlt
cli
loopne
lahf
insb
mov
dec
jo
sbb
int3
cmp
aam
push
mov
test
je
lock
shrb
mov
pushl
enter
scas
rol
adcl
inc
adc
je
in
arpl
aad
xorl
clc
mov
cmp
cmpl
fwait
jl
sub
adc
std
clc
inc
std
xor
jbe
shlb
ja
cmp
push
shufps
and
lock
xchg
aaa
bound
test
pop
or
dec
add
js
daa
lock
popa
jp
inc
xor
jns
cld
mov
loope
jns
jmp
pop
push
add
xor
fsubp
movl
and
in
inc
rcrb
sbb
jl
sbb
push
imul
pusha
push
and
pop
imul
rcl
push
push
stos
arpl
jge
outsb
pop
mov
xor
test
cmp
ror
inc
test
sbb
push
dec
adcl
or
insl
shll
sbb
loope
test
ret
adcb
arpl
add
arpl
sbb
fimuls
repz
enter
fildll
sbb
jg
inc
mov
xchg
adc
scas
jae
ds
shld
in
jns
incb
mov
lahf
cmp
dec
mov
stos
shrb
shrb
push
test
enter
pop
test
testl
nop
pushf
cmc
cmp
arpl
mov
in
sub
adc
mov
mov
cld
mov
mov
jnp
push
or
push
shrl
pushf
lret
jmp
fucomi
adc
mov
imul
fwait
outsb
pop
es
jo
mov
imul
iret
ret
daa
or
je
or
int3
fiaddl
subl
add
aas
xor
cs
fs
cwtl
and
sbb
push
jnp
and
adc
imul
incb
insb
addb
pop
filds
test
cltd
sub
ret
aad
loope
and
pushf
mov
popf
movsl
fstl
adcb
xor
inc
pop
inc
add
popf
mov
mov
movsb
add
jb
jecxz
mov
mov
ds
push
fcoms
cwtl
shr
std
cld
add
dec
out
dec
scas
fcompl
push
or
jno
ja
xchg
je
cmp
sub
sub
pop
mov
cmp
or
xor
push
mov
fmul
lods
pop
wbinvd
lcall
lds
cmpsl
mov
lcall
cmp
jnp
fcoms
dec
jne
scas
and
mov
xchg
or
mov
inc
int
sub
es
push
adc
lds
pop
call
movb
xor
sub
or
xor
testl
fldl
mov
add
mov
stc
es
xchg
sbbl
xchg
sub
add
dec
subl
mov
mov
sub
aaa
in
lahf
or
push
lock
xchg
mov
mov
cmp
dec
je
inc
adc
daa
popa
into
gs
and
out
hlt
push
popa
mov
mov
aaa
dec
popa
popf
andl
dec
or
mov
stc
sbb
xor
and
jo
mov
sub
lret
lahf
lahf
lahf
xchg
fldl
clc
sub
push
in
adc
sarl
inc
xchg
mov
out
in
les
test
popa
mov
ljmp
jl
cmc
and
cmc
mov
lock
inc
ficoms
add
ret
push
mov
jb
insl
xlat
adc
sub
inc
inc
xor
mov
pop
cmp
push
rorb
or
repz
insl
dec
sub
xchg
test
bound
add
push
mov
pop
das
out
imul
sub
push
subl
inc
loop
cmp
pop
mov
hlt
insl
adcb
push
in
pop
mov
je
insl
pop
pop
test
xchg
adcl
xlat
push
pop
push
inc
daa
leave
or
jp
shll
hlt
xlat
add
stos
mov
cmp
mov
rol
pop
inc
mov
je
ret
fmuls
daa
cmp
cwtl
out
inc
xchg
jb
mov
jg
mov
popf
imull
dec
add
stc
sbb
and
dec
push
insb
insb
pop
enter
pop
mov
and
adc
pop
and
pop
aad
mov
jl
inc
pushf
mov
cmp
xor
repnz
jbe
cmp
adc
sarl
sbbl
xlat
or
les
insl
add
jmp
jb
push
lock
pop
inc
mov
fs
insl
sbb
cltd
pop
arpl
lock
jo
dec
ror
mov
cmp
sub
loope
cwtl
nop
pop
jae
mov
push
loope
jnp
pop
mov
out
divl
je
inc
jo
das
pop
test
mov
stc
rcl
push
push
shrl
cmp
aaa
or
xor
call
xchg
les
imul
cmp
jmp
sbb
xor
or
cmp
loopne
or
xchg
sub
jmp
add
xor
mov
pushf
leave
mov
inc
fsubr
aaa
jmp
push
mov
cmpsl
sarb
imul
enter
stc
orb
push
aas
push
dec
imul
cli
cmpsl
push
mov
pop
frstor
scas
test
sbb
rcrb
add
es
xor
mov
or
sbb
jne
ja
cmpsl
imul
out
sub
add
sahf
mov
gs
fdivs
in
xchg
inc
xor
inc
push
xchg
mov
dec
repz
mov
and
pop
cld
cmp
int3
int
pusha
scas
das
mov
and
aad
rcll
sbb
mov
pop
out
ja
scas
mov
jo
cmp
adc
sbb
fwait
push
ss
hlt
nop
sub
adcb
add
and
push
add
test
jg
push
repnz
popf
aas
cmpsl
pop
mov
loope
pop
in
or
mov
fxch
mov
lahf
divb
inc
mov
scas
pop
arpl
xor
and
mov
sarb
fcomip
sub
push
xor
mov
pop
lods
cmp
cmp
push
ljmp
fwait
ds
icebp
dec
mov
and
push
mov
adc
popa
rol
cmp
xchg
sub
in
out
and
xchg
and
and
sub
testl
in
push
mov
jmp
inc
bnd
arpl
into
and
push
scas
fstpt
sub
loop
xor
pop
add
notl
fnstenv
pop
pop
jns
cmp
adc
sbb
outsb
mov
jl
int
jnp
mov
jle
jns
adc
lret
in
inc
movsb
testl
cmc
dec
push
shlb
pop
add
pop
rolb
adc
mov
sub
ror
and
arpl
xor
stc
lods
mov
jl
pushf
mov
mov
icebp
sub
jecxz
scas
dec
fs
sbb
jmp
push
enter
test
sub
xchg
push
adc
insb
lret
adc
jl
test
xor
adc
or
mov
je
jbe
mov
cld
xchg
cmpb
jecxz
lods
push
sub
bound
shlb
xchg
ljmp
xchg
pop
adc
frndint
pop
lods
xchg
hlt
xchg
dec
push
xchg
pop
xchg
pop
mov
jb
addb
mov
addr16
mov
stc
cltd
xor
jno,pn
mov
int
sub
daa
fs
arpl
imul
lods
add
mov
les
gs
fxch
jnp
jp
js
ret
pop
mov
lret
adc
or
stc
lea
jg
call
cltd
loopne
dec
out
in
je
pop
in
and
mov
js
add
enter
dec
jmp
xor
mov
outsl
jl
ret
push
inc
mov
fs
jo
cmp
xor
lcall
or
pop
sub
push
pop
push
push
xchg
xchg
jmp
pop
ret
jp
jle
mov
mov
lahf
mov
pop
pop
fldcw
test
push
add
jno
dec
fs
mov
and
and
call
or
fcomps
jmp
inc
cs
push
pop
aas
xchg
es
cmp
int3
mov
mov
enter
jae
lods
loope
push
ficomps
xor
insl
add
push
bound
xor
push
insb
stos
sub
pop
add
cli
data16
fcompp
int
loop
mov
or
mov
inc
adcb
data16
cmp
fiaddl
test
fmuls
mov
sub
lcall
scas
out
add
cmp
int
mov
stc
cmp
mov
mov
insl
jb
mov
xchg
jns
das
mov
jle
lds
ret
popf
sbb
add
jbe
in
cmp
popa
cli
cmp
sub
clc
dec
push
adc
notl
lahf
and
jge
pop
xchg
loope
addl
lret
xchg
popf
inc
cmpsb
outsl
jge
add
cltd
mov
and
inc
xchg
add
je
inc
adc
and
stc
mov
xor
std
popa
jo
push
inc
dec
scas
cmpsl
das
or
pop
push
ret
out
mov
inc
mov
imul
subb
inc
adc
jmp
mov
jne
xor
aam
scas
dec
push
add
adcl
mov
inc
jns
insb
in
outsl
jg,pn
inc
add
je
lods
adc
orb
in
fildll
es
adc
rcr
push
dec
insb
or
sahf
sub
xor
cmp
insb
adc
or
push
cmp
out
or
pop
movsb
pcmpgtw
push
dec
test
add
add
sahf
mov
lock
or
add
mov
fcoms
in
outsl
dec
xchg
movsb
push
and
mov
jae
cmpsl
cmp
dec
mov
mov
and
sahf
mov
test
pop
jnp
in
flds
xchg
loope
pop
cltd
lods
hlt
loop
jmp
cmp
sub
lods
sahf
jg
or
mov
out
adc
jle
or
inc
adc
or
push
clc
fidivrs
xchg
adc
sbb
inc
or
shrb
mov
push
ljmp
xor
add
jge
xor
stc
adc
pushf
popf
lods
dec
mov
movsl
stc
cmpsb
push
push
push
testl
test
xchg
divb
sub
push
icebp
pop
xchg
mov
aad
sub
lods
ss
inc
xor
push
mov
ret
loope
ficomps
int3
jb
clc
inc
xor
daa
cmp
push
dec
or
jb
ret
dec
fwait
das
jne
mov
xor
mov
fisttps
lret
cvtpi2ps
push
xor
cmc
sub
outsb
addr16
sub
ss
and
loope
mov
lock
add
lods
or
paddd
jecxz
aaa
cs
or
inc
in
je
xlat
mov
and
inc
loop
inc
jns
jecxz
sbb
push
sbb
xchg
lcall
xchg
mov
mov
and
or
shrl
lods
add
xor
fisubs
or
scas
fldt
xor
push
pop
cs
mov
jl
fwait
sti
xchg
aam
inc
fwait
test
call
jl
jecxz
mov
rolb
shll
mov
push
mov
xchg
rorl
or
jle
and
xor
into
testl
adc
inc
js
stos
jecxz
leave
inc
mov
sti
push
inc
js
add
push
ds
lock
mov
std
out
insb
mov
xchg
mov
out
sbb
adcb
adc
inc
jp
add
add
enter
jmp
in
xor
pop
xchg
xchg
adc
js
push
xchg
jle
outsb
sbb
lods
fnstenv
mov
push
cmpsl
fisubrs
push
sbb
xor
and
aaa
mov
lret
lea
xor
daa
int3
outsb
sarb
pop
dec
mov
sub
movsl
test
cmp
pop
jo
xor
mov
mov
mov
icebp
fistpll
cltd
out
adc
jle
imull
in
xchg
mov
pop
push
movsbl
data16
xchg
mov
loopne
inc
xchg
insl
sbb
xchg
ds
push
xchg
loope
push
dec
aad
test
out
add
leave
pop
rol
test
inc
xchg
orb
sub
jl
inc
mov
inc
in
jle
push
xchg
addl
jne
xor
sbb
imul
mov
fs
xchg
cmpsl
xchg
dec
mov
dec
lds
cmpsl
xchg
test
aaa
xchg
adc
dec
jg
mov
imul
inc
popa
out
add
imul
cmp
inc
jmp
cltd
arpl
mov
mov
popf
mov
add
mov
jne
jmp
repnz
lret
pop
push
adc
fiadds
clc
jge
jmp
stos
cmpsl
pusha
dec
lret
stc
add
pop
lods
out
in
xchg
xcrypt-ofb
cmpsl
lods
cmpsl
push
call
pushf
add
push
in
mov
scas
xchg
arpl
push
mov
jecxz
test
sub
push
jecxz
pop
repz
ficoms
in
iret
daa
fadds
int
movsl
hlt
xchg
leave
movsl
jb
mov
addr16
mov
push
xchg
xor
and
sub
adc
lahf
arpl
aas
xchg
sub
lds
xor
dec
fdivs
nop
lea
adc
je
stos
mov
cwtl
jmp
rol
ds
shrl
xor
pop
fbld
and
jbe
mov
add
loop
cld
dec
dec
pushf
xchg
jo
mov
fcmovb
lods
lods
js
sarb
pop
fildll
xchg
jecxz
test
push
test
pop
fsubrs
and
out
insb
imul
shrl
cmp
xchg
mov
fs
mov
insb
out
sahf
fxch
and
cmpsl
push
and
mov
ljmp
stc
jl
pop
inc
xchg
or
cltd
xchg
fcoms
ja
sub
sbb
push
mov
inc
repnz
rorl
sub
js
xchg
int
outsl
push
fisubs
jbe
test
dec
outsl
fildll
xor
ficoml
mov
sub
ret
pop
shlb
test
cltd
ja
xchg
push
mov
push
mov
and
xlat
fisubl
out
mov
pop
jbe
mov
xchg
mov
in
roll
sub
pop
pop
jo
cmc
lods
subl
movsl
fisubl
loopne
mov
scas
mov
and
jmp
add
cmp
daa
jp
mov
iret
cmpb
mov
inc
aam
dec
icebp
push
jle
dec
mov
push
dec
shl
std
add
shrl
inc
repnz
sub
shll
jp
gs
lods
int3
repz
test
lret
pop
out
and
loopne
inc
xchg
adcl
dec
push
clc
add
stos
cmp
add
in
les
test
jno
fcoms
mov
test
or
push
ljmp
insb
mov
jmp
jg
in
mov
scas
in
inc
nop
icebp
pop
roll
insb
hlt
dec
inc
fnstsw
inc
fbstp
stos
push
mov
sahf
popa
dec
popf
lds
lahf
xchg
es
cmpsb
enter
popf
adc
sub
jbe
xor
std
popa
mov
mov
push
inc
data16
dec
xchg
and
jg
fdivrl
enter
mull
hlt
xor
inc
mov
sti
into
mov
jne
je
mov
sub
pop
push
insl
add
clc
push
pop
andb
dec
pushf
mov
movsb
jo
pop
ljmp
subb
ja
mov
les
inc
int3
push
mov
cmp
push
popf
sahf
cmp
sub
sub
outsb
dec
pushf
ja
scas
popa
push
leave
mull
sub
mov
fwait
fwait
call
inc
sub
jecxz
outsl
pushf
xchg
xor
imul
test
or
ret
xchg
sbbb
cmp
mov
daa
dec
sbb
and
mov
add
cwtl
push
sbbb
imul
cltd
imul
imulb
mov
push
push
jge
lahf
shrb
push
sbb
testb
jns
cltd
push
fcomi
mov
push
arpl
js
cltd
lahf
repnz
fs
test
ja
mov
test
sub
pop
aam
mov
jae
mov
int
jnp
fxch
adc
add
shrb
test
pushaw
loope
in
xchg
cmp
mov
sahf
gs
jge
fdivrs
stos
or
lock
popa
or
dec
inc
mov
out
popa
je
cmp
xorl
mov
push
push
into
mov
sti
or
lock
adc
or
imul
jle
adc
lahf
lods
cmp
test
iret
or
cmpsb
sbb
sbb
sbb
jae
mov
mov
inc
add
jnp
subb
stos
leave
push
ds
aas
jp
test
leave
inc
and
adc
mov
clc
outsb
shrb
push
ja
jo
ja
out
pop
or
jo
test
pop
outsl
jnp
ds
xchg
push
jmp
xor
fmull
clc
mov
sbb
jnp
push
cmp
jne
lcall
imul
dec
adc
leave
std
enter
sbb
loop
mov
mov
scas
xor
out
lods
push
cmpsb
and
push
xchg
and
mov
lahf
nop
add
mov
xchg
pop
inc
enter
xlat
cmp
pop
add
xor
ljmp
push
jecxz
pushf
push
fdivl
mov
jmp
dec
iret
enter
jmp
and
cltd
jne
je
or
xchg
push
loop
adc
dec
imul
fsubl
and
sbb
sub
jne
mov
pushw
cs
test
xchg
pushf
mov
push
mov
movsl
divb
jo
insl
into
shlb
ret
sub
inc
xchg
push
loope
cmp
in
int3
mov
cwtl
ret
or
gs
mov
jp
sub
cmc
popf
pop
dec
pop
out
ret
sbb
ror
or
xor
lahf
jle
std
fildl
sahf
orb
pushf
sbb
push
pop
lret
xor
fistps
arpl
jmp
adc
dec
push
add
or
enter
or
rolb
dec
fnstcw
popf
or
clc
pushf
add
in
mov
loope
xchg
jle
mov
cmc
push
xchg
popa
and
int
loop
xchg
cmpsb
in
xor
gs
div
movsl
aaa
mov
testb
les
xor
stos
push
das
mov
das
mov
dec
adc
mov
fs
adc
pop
mov
mov
cmp
mov
mov
pushf
in
scas
xor
std
and
dec
mov
in
aam
movsb
iret
jo
dec
and
out
mov
imul
push
jae
cmc
call
sti
jle
xchg
mov
pusha
inc
es
mov
adc
adc
sarl
cwtl
sub
adc
cs
lret
mov
lods
lods
je
lcall
inc
je
call
orl
lods
mov
add
inc
pop
dec
stc
xchg
aas
ss
or
stc
and
cmc
pop
movsl
popa
fists
leave
mov
dec
jae
aas
test
mov
or
push
mov
sbb
mov
pushf
inc
je
repnz
mov
xchg
mov
mov
out
adc
ljmp
shlb
pop
and
jmp
mov
jns
dec
ljmp
adc
pop
sbb
popa
hlt
clc
cmp
xchg
push
cmp
scas
push
adc
mov
outsb
pusha
shll
in
mov
and
xor
out
add
xor
sti
loope
inc
add
mov
rclb
iret
sar
jg
adc
pusha
push
push
push
lea
jo
rolb
lret
sarb
add
out
inc
popf
jecxz
push
shr
dec
jbe
and
add
mov
add
lcall
shr
cltd
insb
and
shll
fimuls
xlat
fmull
or
sti
loope
jge
add
in
dec
gs
mov
xchg
mov
popf
call
mov
xor
in
jnp
iret
xor
fnstenv
mov
add
test
fnsave
leave
sub
mov
fisubrl
pop
imul
lea
shr
lods
daa
mov
push
out
jle
jbe
push
fdivrl
call
jno
mov
mov
mov
sbb
xchg
xor
insl
loop
jb
stc
jno
gs
repz
scas
setnp
or
dec
sahf
out
fistpll
sub
mov
popa
xchg
xchg
ss
push
pop
push
pcmpeqb
sub
push
or
add
cmp
out
adcl
daa
sarl
les
test
insl
cmp
mov
push
mov
jl
lret
xor
es
lret
mulb
mov
sbb
data16
sbb
cmc
xchg
adc
je
std
mov
lret
or
jl
dec
and
inc
lods
pop
hlt
js
cld
aaa
fisubrs
push
popa
setb
dec
mov
push
cmp
cmp
add
test
outsl
adc
jno
or
push
in
mov
and
or
ljmp
push
cmp
push
mov
ljmp
sub
daa
sarl
dec
fimuls
scas
xor
cmpsb
outsb
jge
pop
mov
stc
mov
outsb
mov
cli
inc
loope
push
pop
sub
or
js
lcall
cld
or
fmuls
repz
pop
jmp
in
lock
cs
in
mov
sbb
aas
cmpsb
fwait
adcl
je
mov
rolb
fdivrp
add
sub
ss
adc
pop
or
testl
inc
icebp
pop
xchg
xchg
dec
push
mov
cs
pop
sub
mov
adc
lahf
jle
shll
ss
cmp
shlb
pop
inc
fwait
lods
insl
inc
std
mov
scas
call
data16
ljmp
gs
push
jecxz
lock
aas
push
lods
fmuls
int
pop
lods
scas
jg
stos
adc
mov
xor
sub
adc
lcall
sub
xchg
subl
push
lret
dec
je
pop
pusha
pushf
scas
or
sub
clc
push
add
sub
mov
add
xchg
lcall
stc
ret
int3
dec
push
stos
dec
or
int3
addr16
or
add
stos
mov
scas
frstor
sub
mov
ds
ror
inc
pop
sarl
mov
lret
insb
mov
or
bound
sahf
fimull
loop
addl
das
mov
repz
mov
mov
movsb
dec
dec
ret
movsl
xchg
mov
lea
cwtl
push
in
aam
andb
push
fistpll
movsl
andl
mov
les
out
test
and
addl
add
movl
dec
mov
fwait
testl
and
push
sub
int
movsb
mov
mov
loope
mov
sub
stc
push
enter
mov
stos
mov
popa
and
ret
arpl
xchg
pop
out
xor
dec
push
jge
in
addl
mov
cmp
ficomps
stos
repnz
fwait
jg
push
push
pop
clc
sub
das
xor
or
lock
stos
and
inc
push
xchg
es
test
jo
mov
fadds
ret
xchg
mov
push
ss
lock
mov
popf
mov
enterw
pop
sbb
jae
push
add
jge
or
fcomp
sbb
inc
pop
loope
xchg
cmp
cmp
push
pushf
jecxz
repz
mov
adc
sub
sub
push
dec
inc
mov
sbb
enter
je
xchg
cmpsl
mov
rclb
in
adc
mov
out
fsts
mov
adc
push
pop
sub
jp
dec
popa
mov
into
sbb
xor
mul
push
in
test
fisubs
int3
rcl
jo
add
mov
loopne
push
mov
mov
aas
outsl
push
dec
jl
cltd
in
lds
pop
inc
dec
repnz
cwtl
push
xor
or
lret
js
sub
inc
sti
fcoms
sbb
inc
call
fistl
enter
pop
xlat
xchg
popf
out
js
lret
imul
or
fsub
add
fwait
inc
and
outsl
xlat
movsl
and
test
out
xchg
jb
add
jb
dec
loope
adc
xor
xchg
jmp
in
push
loop
fiadds
cmp
cwtl
push
scas
cmc
pop
adc
jmp
fildl
jbe
jl
leave
popf
push
sub
ficoms
fld
testl
out
sub
nop
mov
outsb
outsl
sti
out
cmpsb
movsb
mov
fcmovne
inc
sub
pop
ret
and
ret
mov
dec
mov
iret
pop
mov
sbb
and
dec
sub
jne
bound
fdivr
cli
mov
sahf
adc
std
mov
ror
pop
hlt
jge
xor
and
pushf
ret
fs
adc
insl
jg
stos
arpl
mov
lcall
in
data16
add
test
and
call
push
mov
inc
push
jp
les
cwtl
push
jecxz
je
cmp
xor
adc
push
addb
fnsave
inc
roll
js
mov
or
pusha
adc
cmp
push
dec
bound
fisttpl
add
stc
stos
movlps
adc
and
sbb
add
adc
add
mov
mov
and
and
add
pop
pop
mov
cmc
sbb
mov
jns
mov
aaa
mov
stc
in
push
pop
inc
cmp
mov
sub
xor
and
leave
scas
pop
je
call
mov
add
shlb
cmc
fwait
lcall
popa
or
cmp
lret
jno
test
fnstsw
sbb
outsl
rcrb
dec
or
xor
inc
pop
rcrb
sbb
fs
movsb
xchg
or
pop
mov
push
push
gs
mov
call
cli
js
xchg
or
xor
in
jmp
testl
jp
xor
jecxz
xchg
jp
je
out
xchg
push
inc
mov
jns
outsb
dec
mov
add
push
cmpsl
inc
inc
popa
push
test
xchg
add
outsb
xchg
clc
mov
cmc
push
popa
hlt
gs
sbb
inc
or
movl
shll
xor
andl
rcrl
inc
outsl
xor
leave
mov
jne
or
or
sub
mov
add
sahf
jbe
aas
inc
mov
or
mov
lahf
mov
sub
cltd
imul
xchg
lret
sub
push
in
pop
pop
pop
sub
das
push
cmpsl
sub
movsb
xchg
fidivs
daa
les
pop
inc
in
ficompl
mov
imul
in
sub
scas
xchg
pop
inc
and
jl
sub
mov
mov
insb
addr16
aas
sbb
add
or
mov
pop
push
jge
loope,pn
mov
popa
pop
je
mov
fs
aas
pop
mov
push
cmp
test
xor
xor
dec
stos
pop
aas
jmp
mov
mov
dec
js
push
xor
loop
das
sahf
and
popa
hlt
fstpl
imul
jb
mov
inc
xor
out
sub
stc
push
jg
fcompl
jnp
aaa
stos
addb
adc
dec
add
sub
jl
push
mov
test
xchg
jp
test
mov
or
call
ror
add
xchg
ficompl
sbb
or
popf
inc
sbb
push
repz
pop
into
push
pop
fstp
inc
mov
out
cmp
aad
jb
dec
scas
pop
test
xor
xor
push
sbb
stos
sti
ja
pop
pop
xchg
jnp
pop
cmp
sbb
cmp
mov
sbb
test
sbb
adc
sub
pop
push
pushf
lahf
sbb
in
lcall
fsubs
cltd
pop
test
scas
popf
arpl
lret
sbb
push
fs
pop
rcrb
repnz
subb
adc
cli
jge
jnp
ret
leave
pop
mov
add
adc
or
sbb
std
cmp
idivl
lods
out
push
sarl
jno
iret
mov
jnp
or
lea
popf
dec
fisubrs
es
arpl
aaa
lods
sub
subb
pop
test
das
insl
or
repz
push
in
dec
fs
inc
into
pop
lea
imul
inc
sub
stos
dec
test
lock
aas
stos
loopne
or
fnstenv
sub
fwait
hlt
leave
xor
cmp
dec
test
mov
mov
lds
sahf
xchg
and
lods
mov
mov
lods
gs
sub
ret
lods
adc
mov
push
pop
cltd
lock
or
jge
movsb
mov
mov
mull
gs
fs
popa
jnp
cmp
add
inc
pop
xchg
mov
pop
jae
loope
aad
pop
aad
sub
jb
andl
fmull
sub
or
sbb
sbb
mov
jno
sub
loopne
mov
scas
sbb
jp
cmp
adc
mov
jo
mov
lock
mov
xchg
mov
xor
jp
cli
push
dec
push
icebp
scas
ljmp
lods
enter
and
mov
add
cmp
int
test
jns
neg
xor
out
insb
data16
xor
loopne
or
pop
nop
push
inc
xchg
into
adc
cmpsl
rclb
xchg
dec
add
cmpsl
jbe
mov
fwait
jns
cmc
xchg
rcrl
pop
ds
mov
adc
pop
les
lea
push
fdivl
jge
pop
cmpl
cmp
sub
jo
imul
mov
xlat
inc
or
es
rcl
xchg
fcmovb
jo
test
or
cmc
xchg
mov
inc
mov
mov
sbb
and
jb
popa
pop
sub
fwait
movsb
inc
fstpt
test
mov
and
add
enter
mov
test
xor
dec
into
iret
outsl
mov
xor
lea
push
push
andl
mov
into
repnz
inc
jns
xchg
add
or
lahf
adc
adc
add
loopne
push
pusha
lcall
call
addb
daa
xor
shrb
js
cmp
ljmp
popf
lea
xchg
inc
xchg
aam
mov
jge
dec
negb
in
push
movsl
xchg
mov
fldcw
pushfw
int
outsw
addr16
adc
rorb
push
adc
pop
rcr
mov
or
xor
ja
cmp
mov
sbb
cwtl
in
pop
lahf
sbbl
pop
sahf
lahf
dec
sbb
sub
and
lock
shr
jb
jnp
stos
lret
push
jae
xlat
mov
push
fisubrl
repnz
popa
xchg
sub
sbb
mov
push
stos
incl
dec
ja
xchg
loope
dec
or
sbb
pop
ss
addb
enter
push
test
arpl
es
and
and
add
js
pusha
push
loopne
outsl
cmp
push
mov
and
ss
into
loopne
faddl
add
xchg
dec
daa
sbb
xor
lret
leave
and
out
fistps
add
icebp
loop
and
ss
jmp
pop
shr
adc
cli
test
push
fnstenv
mov
add
xchg
mov
add
jnp
mov
rorl
int3
mov
les
mov
js
add
lods
into
xchg
bswap
mov
mov
fisttpll
in
ljmp
rorb
jp
sti
push
in
or
push
movsl
add
lahf
lds
mov
loopne
fcmovnbe
add
into
jp
xchg
sub
mov
cmp
xor
and
sbb
push
cmp
xor
add
add
dec
and
xchg
arpl
lock
out
push
dec
lods
divl
in
xchg
sbb
inc
xchg
rcll
dec
in
sbb
pop
outsb
mov
js
lahf
xchg
adc
dec
pop
xlat
rolb
mov
out
push
fcmovnbe
loope
push
mov
outsl
push
cmp
je
add
fucomp
js
repnz
sahf
cs
pop
mov
mov
jle
mov
std
mov
push
ret
subb
jo
out
adc
xlat
adc
rcll
sub
xor
sub
jae
fnstenv
lods
sub
cmpb
arpl
dec
pusha
inc
je
rcr
je
inc
lds
lods
int
push
aaa
sub
or
mov
cmp
mov
xor
insb
adc
dec
shrb
fwait
xchg
sbb
bound
add
sub
mov
xchg
inc
mov
or
mov
loopne
aad
test
test
test
sahf
xlat
in
push
dec
jno
inc
add
mov
std
push
mov
xor
insl
lea
cmp
mov
mov
cmpsl
fdivrl
cmpb
push
dec
xorl
push
fimuls
outsl
pop
icebp
add
arpl
orb
repz
jne
xor
sti
jnp
sbb
je
out
add
ljmp
jne
mov
inc
push
sub
pop
nop
iret
pop
movsl
icebp
xchg
ljmp
cmpsl
dec
sbb
pop
xor
pop
das
jg
mov
or
mov
jb
adc
aas
and
out
mov
push
fwait
sub
scas
scas
lods
andb
lret
xorl
in
popa
sbbl
or
int3
aad
je
in
and
fwait
xchg
sahf
jg
mov
push
int
add
push
mov
and
mov
and
jno
pop
fstps
xchg
mov
rcrl
sub
sbb
sbb
mov
out
mov
sbb
xor
mov
lock
dec
out
jne
jno
jns
mov
pop
and
dec
and
test
out
xor
negl
jmp
dec
add
adc
ljmp
cmp
sti
repz
or
jne
clc
ja
sub
mov
mov
sbb
sbb
mov
fildll
cs
out
or
pop
filds
dec
jle
jg
inc
add
push
cmp
int3
pop
das
ljmp
data16
je
test
hlt
dec
mov
pop
cmc
push
stc
xor
test
lret
xchg
and
jmp
jnp
jecxz
cmp
mov
icebp
iret
mov
fmul
addr16
icebp
cmpsb
push
mov
inc
test
mov
push
and
mov
pop
xor
leave
mov
int3
stos
shlb
cmp
jl
mov
mov
cmp
fcmovne
xchg
xor
mov
or
pop
xchg
lret
arpl
lds
push
or
cwtl
xchg
xchg
dec
inc
and
mov
in
js
and
outsb
lea
cmp
mov
inc
icebp
ja
xchg
call
pop
dec
notb
cmc
icebp
push
push
loope
or
push
xchg
sbb
xor
lea
xor
fucom
jmp
mov
dec
cmp
leave
cmpsl
xchg
outsb
mov
lahf
push
dec
popf
hlt
add
fldcw
push
stos
les
or
in
xchg
jle
sub
mov
push
je
ret
cmp
insb
mov
xchg
mov
addb
iret
adc
pop
sbb
faddp
out
inc
mov
shlb
aaa
ds
int
mov
movl
pop
dec
std
sbb
sbb
and
jmp
xlat
mov
daa
cmc
es
fucomp
imul
int3
test
idivb
add
ss
hlt
add
dec
push
jecxz
and
shlb
std
in
sub
adc
xor
cmc
mov
push
rorl
ja
mov
pop
push
push
jbe
pop
add
jmp
cltd
bnd
fdiv
pushf
cltd
mov
das
pop
fwait
mov
out
mov
add
push
cmovbe
dec
and
xchg
mov
cli
les
sarb
ja
gs
in
push
jbe
decl
in
pop
fcomps
in
dec
mov
dec
out
push
sub
xchg
push
or
mov
or
jb
cmc
and
push
and
xchg
sarl
cmp
dec
nop
aam
mov
test
clc
mov
fldcw
shrb
sub
mov
cmp
orb
pop
xchg
or
ficoms
sbb
xor
xchg
dec
hlt
pop
into
jns
cmc
cwtl
dec
pop
popf
cmp
lret
xor
fistpll
imul
xchg
mov
jne,pn
imull
adc
push
xchg
dec
int
inc
jp
lret
mov
xor
out
mov
mov
cmc
cmp
add
lock
test
sub
int3
xchg
push
sti
shl
cmpsl
adc
xchg
jl
xchg
loop
stos
in
or
les
stos
push
mov
xorb
sbb
mov
push
or
push
mov
cmp
pop
inc
jg
in
mov
adc
sub
imul
add
or
cmpsl
adc
inc
jae
test
mov
repnz
adc
js
inc
pop
xchg
scas
ret
push
dec
jae
mov
push
or
xor
jb
mov
test
cmp
std
add
xor
arpl
jne
jg
xor
std
lods
outsl
and
ret
xchg
ljmp
push
sahf
lock
call
sbb
mov
ret
cmc
adc
xchg
sub
sbb
lea
in
fadds
fdivrp
in
nop
sbb
hlt
fcompl
push
mov
pop
add
jmp
loop
mov
sbb
andb
add
mov
push
enter
mov
adc
push
loop
scas
jnp
popf
loope
out
fwait
clc
push
xchg
mov
loope
push
aad
pop
adc
lds
push
mov
test
cwtl
mov
hlt
jl
mov
stos
cmc
mov
leave
stos
das
pop
dec
sub
adc
add
or
or
jle
test
int
inc
cmpb
adc
int3
inc
mov
push
ffreep
ror
fs
sub
lods
cld
sahf
jecxz
arpl
aaa
xlat
bound
imul
inc
stos
mov
mov
inc
icebp
sub
push
pop
jns
test
mov
or
loope
test
and
mov
adc
std
inc
ficomps
in
adc
add
jno
cltd
adc
add
jbe
das
sub
ss
ljmp
fildl
mov
sub
push
es
inc
mov
fisubl
je
or
addr16
repnz
adc
notl
repz
cli
clc
push
addb
mov
xchg
test
pop
mov
repz
add
mov
dec
xor
xchg
push
inc
arpl
sbb
inc
insb
sbb
test
testb
push
lds
xchg
lret
bound
mov
loope
imul
imul
inc
sarb
and
ljmp
jb
push
mov
add
addl
adc
push
test
ret
test
mov
in
jno
into
in
push
cwtl
and
inc
cwtl
ss
pusha
repz
or
jp
push
add
flds
and
int
push
jae
rorb
sub
adc
popf
jno
inc
pop
ja
std
ljmp
pop
pop
dec
fs
test
xchg
sbb
bound
xchg
frstor
xor
mov
xchg
xor
xor
cmpsl
jl
xor
pop
push
sar
call
pop
jle
mov
enter
pushf
cmp
push
loope
jne
push
xchg
or
test
add
out
sbb
xchg
jg
xlat
push
mov
pop
iret
adc
cwtl
aaa
push
out
daa
in
jb
or
mov
push
jnp
call
inc
cmp
jnp
push
inc
rolb
sub
mov
jp
notb
movsb
add
pop
rorb
and
mov
in
test
xor
xor
in
push
in
pusha
enter
lcall
mov
mov
sub
lock
clc
xchg
dec
add
and
mov
lods
and
test
inc
sub
push
faddl
sbb
mov
ljmp
mov
int
dec
add
dec
roll
fadd
and
mov
ss
inc
cwtl
loope
inc
pop
mov
pop
xchg
imul
inc
ds
inc
in
push
mov
test
jmp
aas
addr16
jmp
loope
jbe
mov
ret
scas
inc
xchg
hlt
js
xchg
and
xor
push
or
call
cltd
xchg
test
fs
lret
xor
leave
aaa
test
test
sub
or
xchg
jp
scas
in
adc
bound
xchg
add
out
bound
adc
fs
jb
mov
sub
sub
in
push
mov
in
fiadds
adc
daa
mov
mov
pop
cmp
in
jnp
adc
imul
int
xchg
nop
call
popf
and
sub
scas
loopne
and
in
inc
xlat
cmp
or
push
inc
push
insl
ret
push
aaa
mov
les
andb
insb
jg
cmp
pop
inc
pusha
inc
shrl
dec
ficoms
stc
or
dec
xor
cmp
hlt
mov
mov
loope
sbb
les
xor
fistps
or
stos
jg
nop
out
xor
stos
test
fsub
cs
das
mov
xchg
sbb
in
xor
pop
jnp
shrb
xor
inc
test
movaps
jge
dec
xor
sbb
mov
clc
adc
push
repz
pop
loope
jae
shld
jbe
or
jecxz
fsubrl
dec
jmp
and
stc
enter
mov
sub
mov
fisttps
jecxz
pop
lret
xchg
adc
sbb
push
insb
imul
jb
cmp
in
js
das
push
or
mov
mov
addr16
loop
mov
test
add
movsb
adc
int
mov
pop
push
jmp
mov
sbb
push
lret
add
rcl
jne
shr
gs
xlat
aad
mov
inc
sbbl
insb
loope
cmc
xor
mov
sbb
ss
call
int3
es
xchg
and
xchg
shlb
xchg
push
lret
push
jae
sbb
in
adc
cmp
outsb
mov
jecxz
lahf
jmp
clc
xlat
push
xor
push
sti
popf
repz
mov
pop
mov
std
push
adc
adc
adc
decb
push
pop
stos
mov
pop
int3
add
dec
addl
cmp
test
xchg
out
push
jo
and
cmp
clc
std
sub
cmp
jns
cld
mov
inc
std
or
popa
out
pop
push
or
fbld
sbb
xchg
out
hlt
jle
sti
stos
mov
imul
inc
mov
xchg
orl
mov
dec
inc
push
mov
xchg
pop
xchg
pushf
and
pop
xor
or
jno
adc
nop
mov
sub
xor
int3
icebp
xor
xchg
jae
into
sbb
lods
push
test
pop
jo
and
iret
pop
jg
sarl
in
orb
mov
inc
pop
stos
sub
add
mov
inc
arpl
das
xchg
ficompl
adc
adc
pop
jp
stos
and
hlt
ja
sub
fcoml
int
jp
dec
es
and
int3
fbstp
aad
imul
dec
insl
or
push
mov
mov
or
pop
mov
add
mov
test
ljmp
ljmp
cmpsl
and
mov
and
les
xchg
jge
xchg
xchg
bound
jge
cmc
mov
mov
enter
out
inc
xlat
cli
add
in
push
cld
ret
push
cli
inc
inc
sbb
mov
aad
xchg
out
rcrb
lods
add
mov
add
and
or
push
lahf
idiv
adc
int3
sub
push
add
imul
addl
sub
dec
js
pop
jg
pop
mov
pushf
push
mov
in
add
lret
icebp
bound
mov
jp
cmc
mov
andl
push
dec
pop
adc
inc
and
sar
xchg
outsl
pop
movsl
xor
movsl
jge
stos
sbb
jp
push
out
add
and
or
cli
dec
sbb
mov
inc
adc
xor
add
fnsave
aad
lea
icebp
in
adc
sti
enter
xchg
imul
or
movsl
jb
dec
lds
into
das
lret
jp
sbbb
addr16
mov
sub
mov
aam
add
sahf
adc
or
stos
dec
pop
or
pusha
rcrl
pushf
js
leave
jo
xchg
xchg
lods
pop
stc
pop
sub
xchg
cmp
xor
fcomps
mov
out
and
mov
lds
xchg
out
cld
out
xorb
and
inc
mov
adc
and
mov
imul
mov
or
rorl
adc
aas
push
push
insb
rclb
repz
das
xchg
out
leave
movsb
inc
loop
sub
mov
add
mov
lea
cmp
ror
dec
inc
mov
inc
jbe
pop
mov
and
adc
cmp
xchg
push
sub
mov
mov
push
scas
add
out
test
cmc
sub
cmpsb
adc
enter
std
lret
or
cmpsb
aaa
pop
sub
jne
pop
mov
scas
pop
in
inc
daa
pop
sbb
pop
icebp
cmc
mov
dec
fisubs
in
sub
loope
adc
incl
mov
jne
mov
jne
sbbb
cmp
sbb
jmp
sub
shrl
sub
leave
add
xchg
mov
adc
add
icebp
cmp
sar
xlat
sub
sub
sub
imul
jne
mov
leave
cwtl
test
out
jnp
cltd
shl
sub
inc
or
jmp
mov
mov
mov
push
dec
add
fwait
jge
aad
int3
roll
cmp
lods
push
scas
sub
cmp
dec
ds
xchg
enter
mov
clc
xor
mov
decb
add
lock
cli
mov
out
call
cmp
in
xchg
inc
xor
in
xchg
cli
sbb
in
or
jge
mov
mov
idivl
call
mov
loope
jo
push
imul
lea
imul
push
fwait
daa
lds
ror
das
cs
mov
mov
push
imul
int3
rorb
xchg
sub
cmp
push
test
mulb
cs
push
mov
daa
addr16
jmp
mov
jp
inc
sbb
xor
inc
fdivrl
mov
addb
aas
xchg
pop
inc
je
cmp
dec
outsl
and
icebp
sub
in
xchg
mov
dec
xchg
pop
test
lcall
les
scas
xor
hlt
cmp
and
movsb
lahf
inc
arpl
andl
stos
std
loop
arpl
jmp
add
insl
jmp
pushf
je
xchg
sub
fmuls
xchg
das
push
minps
sub
xor
pop
add
popa
mov
outsl
stos
pusha
mov
adc
cmova
cld
mov
jbe
fidivl
stos
fisttps
adc
loopne
lods
inc
test
and
scas
rorb
inc
fistpll
and
pop
xchg
and
xor
bound
mov
into
ds
adc
loopne
pushf
sbb
sbb
leave
jnp
push
or
outsl
ret
in
js
pushf
mov
imul
ljmp
int3
lret
push
shll
dec
mov
push
loopne
in
pop
lea
insb
hlt
xchg
cmpsl
clc
xlat
add
repnz
fs
orl
dec
cmp
dec
push
xor
dec
icebp
inc
cmpsb
imul
mov
cmp
add
in
xchg
imul
scas
lcall
and
icebp
xchg
movsb
cmp
xchg
xchg
sub
mov
cwtl
sbb
scas
ja
mov
out
fisubrl
jmp
sub
and
scas
lock
rolb
sbb
js
sub
pusha
push
popf
sub
stos
mov
out
call
dec
xor
insb
insb
adc
ret
sub
pop
mov
orb
push
sub
xchg
push
imul
popl
mov
mov
mov
adc
pop
stos
ljmp
mov
jns
mov
pop
in
pop
lods
loop
lahf
sti
outsb
jne
mov
insb
jno
stos
mov
scas
mov
xchg
insl
lret
fwait
push
jmp
fucomp
xchg
cltd
outsb
push
fmull
adc
push
call
icebp
aaa
push
out
pop
shl
outsl
xchg
loopne
outsl
cmc
icebp
mov
adc
jb
fwait
mov
sbb
sub
or
adc
cltd
icebp
add
mov
sbb
pop
lret
mov
fstp
jb
mov
cmp
inc
push
sbb
std
call
adc
and
movsb
push
push
aas
xor
xorl
bound
ret
mov
add
sti
fsubl
pushf
pop
push
ret
mov
xchg
inc
mov
out
or
adc
inc
pop
mov
and
repnz
int
push
cwtl
mov
stos
or
xchg
clc
adc
add
jecxz
mov
insb
pusha
lods
mov
pop
cmp
sbb
pop
mov
dec
jnp
mov
das
push
mov
pop
int3
inc
cmpsl
xchg
mov
adc
lcall
clc
test
and
das
js
jo
ja
loopne
mov
cld
pusha
add
mov
add
fldl
es
dec
arpl
sub
shl
dec
out
mov
mov
mov
std
jmp
adcb
rorl
mov
fldenv
es
fs
xor
lret
jnp
das
je
sahf
fsubr
inc
loope
lret
cmp
lcall
ret
cwtl
aaa
shlb
mov
arpl
inc
out
js
enter
or
sbb
mov
into
aam
cmp
xchg
fsubs
inc
xchg
fidivl
or
fstl
arpl
mov
fmul
add
inc
jno
pushf
js
daa
std
sub
pop
inc
cwtl
fmuls
ud1
hlt
pop
aad
pushf
dec
out
lcall
repnz
repnz
and
and
mov
adc
xchg
mov
repz
int3
nop
out
andb
sti
push
mov
addr16
shl
mov
std
push
pusha
fisttps
and
es
and
data16
jne
mov
mov
jg
lea
lcall
movsl
div
pushl
sbb
inc
adc
inc
inc
sbb
push
cmp
repz
mov
in
push
movsl
pop
sub
add
mov
xchg
or
add
push
jg
inc
fidivrl
cmpsl
cmp
clc
push
pop
mov
aam
or
mov
jns
xchg
xchg
xchg
lock
test
sub
icebp
mov
fwait
shlb
and
gs
lcall
inc
scas
scas
int
int3
lret
jecxz
rorb
sub
adc
inc
jge
bound
out
int
popw
mov
mov
lret
aad
aad
cmp
sbb
loop
pop
icebp
sub
rolb
ret
jle
lods
out
xor
mov
push
mov
push
push
ss
add
rorl
lcall
jecxz
call
and
adc
iret
pop
push
jl
cmp
mov
mov
mov
xchg
pop
sub
mov
fistps
movsb
or
or
lcall
std
out
pop
push
pop
or
pop
cmp
mov
es
ss
js
or
ja
int3
mov
fwait
subl
std
mov
mov
cwtl
pop
das
add
scas
cmc
xchg
fstps
push
int
sbb
fwait
test
in
xchg
stos
cmp
aam
or
aas
daa
bound
mov
xchg
and
and
cmc
jge
fs
push
or
repnz
fsubrl
mov
mov
jnp
mov
insb
fwait
daa
cmc
adc
leave
cmp
fidivrs
daa
sbb
ret
jbe
enter
push
add
pop
mov
and
pop
pop
jl
sub
leave
add
xor
lahf
mov
or
int3
jmp
loopne
sub
push
btrl
inc
stos
pop
in
in
test
gs
cmp
dec
filds
cmp
insl
adc
mov
mov
jecxz
rorb
adc
sub
mov
fldln2
insl
xor
mov
frstor
cmp
adc
mov
aad
nopl
fcmove
adc
mov
mov
cld
push
jbe
test
pusha
sub
cmp
sbb
into
in
outsb
cwtl
ljmp
cmp
pop
lret
xchg
je
sub
nop
push
add
fsubrs
xor
pop
test
dec
mov
xor
push
dec
pop
aam
mov
sub
jne
popa
dec
mov
hlt
and
pop
pusha
pop
int3
fs
pop
imul
hlt
dec
mov
sub
jp
cmpsb
shll
in
lcall
stos
mov
pop
jbe
cmc
and
push
mov
stos
je
pusha
push
out
in
aam
pushw
sahf
or
inc
mov
loop
outsl
and
inc
dec
rorl
and
sbb
add
sbb
shr
dec
inc
call
in
lret
jmp
rcll
jnp
cmpsb
hlt
adc
dec
sbb
push
mov
jne
cmp
adc
dec
into
lods
adc
lock
inc
loope
adc
aad
cmp
stc
adc
pop
sub
sarb
jno
in
push
fidivrs
insb
pop
jnp
inc
popf
les
dec
adc
ret
mov
test
and
sbb
xchg
xor
mov
nop
xor
jecxz
and
lcall
mov
int3
sub
in
rol
cmpsb
pusha
push
add
push
sub
pop
xchg
and
mov
clc
jns
data16
sbb
pop
dec
push
adc
cld
adc
pop
or
pop
or
dec
mov
aaa
out
mov
jmp
cmp
xor
jbe
test
out
pushf
lahf
cmp
fbstp
ss
cmp
or
xor
jecxz
int3
and
repnz
sub
imul
fiadds
insb
stos
jmp
out
ret
daa
and
xchg
das
shrl
add
leave
xchg
fildll
jns
loop
std
pusha
add
lret
dec
imul
ss
addl
lods
call
mov
rorl
mov
xor
sub
cltd
xor
lret
cmp
insb
int
in
imul
aaa
mov
jo
sub
bound
sub
and
pusha
push
add
cld
add
das
xor
bound
inc
push
mov
mov
mov
inc
dec
inc
add
popf
mov
out
stos
in
pop
cmp
lea
or
mov
out
call
push
mov
lret
push
cmpsb
leave
or
je
repz
roll
mov
dec
adc
inc
pushf
popf
int
cs
mov
outsl
dec
mov
cmp
movsb
int3
mov
mov
iret
sub
push
sti
mov
rorl
cwtl
cmc
push
test
fs
hlt
xchg
or
aaa
or
pop
xchg
mov
stos
pop
mov
andb
jp
out
push
pop
dec
push
add
cli
push
fcoml
movsbl
es
dec
movsl
sahf
mov
mov
xchg
jle
add
std
dec
mov
pusha
js
decb
out
dec
shll
push
ficomps
mov
push
dec
mov
push
sub
mov
xchg
pop
push
sub
push
mov
aam
xchg
loop
jecxz
test
loop
divb
jb
cmp
jp
push
popf
enter
fcomps
cld
dec
sbb
jae
clc
jae
jae
xchg
repz
lock
cs
pop
cmp
rorl
sbb
xchg
and
xchg
movsb
imul
dec
mov
and
insl
sbb
cmp
xchg
pop
mov
test
cmp
and
data16
cmc
mov
cmp
and
stos
xchg
dec
dec
popf
icebp
cld
mov
dec
movsl
xchg
test
ret
jg
lahf
push
jbe
imul
mov
xchg
int
mov
das
mov
xchg
pop
mov
in
mov
int
inc
dec
les
push
and
std
hlt
cwtl
mov
and
popa
movsl
aas
mov
aam
add
mov
cmpsb
cld
cltd
inc
fs
dec
lret
sbb
les
jnp
stc
mov
dec
and
xlat
push
xchg
cwtl
mov
mov
cmpsb
and
and
mov
add
jo
jg
iret
xchg
nop
cmp
aad
add
mov
gs
cmp
or
es
pop
jne
push
test
push
sti
cmc
call
xlat
push
icebp
mov
or
jmp
arpl
arpl
lahf
aaa
jno
mov
xor
push
cwtl
mov
xlat
fidivl
jg
ljmp
mov
js
adc
daa
into
mov
lds
pop
nop
mov
mov
mov
rclb
jmp
cmp
ja
push
test
data16
xchg
fs
mov
mov
cmc
aas
mov
pushf
push
cli
mov
lods
lock
mov
jnp
cmp
ds
mov
and
xchg
pop
int
popa
sbb
hlt
ja
mov
pop
xor
imul
sbb
push
arpl
test
pop
pavgb
fisubrs
jae
jg
inc
repz
mov
test
push
push
arpl
outsl
in
and
jns
enter
out
ss
nop
mov
das
adc
clc
decl
and
inc
jne
clc
cld
sub
xchg
into
subb
mov
mov
push
cmp
jmp
cmpsl
popf
xchg
inc
dec
in
fs
ret
repz
push
imul
dec
or
push
mov
jno
push
movsl
pop
bnd
and
call
stos
xchg
pop
movsb
pop
ret
adc
sti
push
or
xor
daa
jle
mov
jmp
mov
inc
jno
sub
xor
xchg
loope
inc
out
jmp
mov
push
xor
push
or
xchg
popf
xchg
mov
test
mov
xor
lcall
je
jo
outsl
jb
in
mov
pop
cwtl
pushf
mov
mov
in
mov
movsl
shll
jno
int
das
adc
int3
add
pop
mov
mov
jbe
xchg
pop
sbb
fucom
fcoms
inc
adc
push
insb
pop
test
loop
cmp
lods
loop
pop
mov
xchg
rcrl
sbb
sbb
incl
pop
in
mov
adcb
xchg
sbb
cmp
fwait
cmpb
or
push
inc
jg
lret
popa
icebp
imul
mov
aaa
ljmp
fbstp
loope
mov
sbb
lea
fists
daa
mov
cli
inc
cmp
fcoms
cmc
in
cwtl
mov
mov
ja
push
test
int3
sahf
mov
adc
jo
jge
mov
das
dec
scas
cmc
pop
iret
adcl
push
jae
dec
and
sub
inc
mov
jbe
mov
jge
pop
lock
mull
jns
jl
subb
bound
sub
jne
jbe
jb
pop
repz
shlb
mov
xchg
push
pop
sbb
xor
outsb
sub
xchg
fwait
aad
xor
xor
out
xchg
jmp
sub
hlt
popf
mov
pop
cs
cmp
loopne
repz
or
adc
flds
or
xor
xchg
xlat
mov
and
sbb
scas
out
mov
adc
sbb
iret
cmp
repz
lods
imul
xchg
lds
xor
push
or
xlat
jmp
lods
jo
int
mov
shlb
daa
pushf
push
adc
rorl
xor
in
dec
sbb
cmpsl
adc
push
xchg
dec
cmp
pop
lret
roll
jns
cltd
mov
jge
lret
sysenter
mov
and
aad
add
dec
lock
addb
push
inc
xor
pop
mov
out
adc
jno
stc
mov
xor
mov
into
push
jnp
mov
jecxz
repz
mov
add
inc
xchg
ja
lds
jecxz
pop
mov
mov
pop
push
push
sub
sbb
loopne
stc
push
lock
add
push
and
loope
fcmovnb
fstpl
test
adc
out
dec
ljmp
or
cmp
inc
xchg
icebp
push
andl
sub
mov
cmpsb
pusha
cmp
sub
mov
jmp
push
push
mov
sub
pop
andb
xchg
cmp
mov
jg
xor
je
scas
add
fwait
mov
xchg
jae
mov
cli
dec
cmp
sbb
dec
notb
cmp
xor
sti
dec
push
fs
daa
dec
dec
adc
sbb
xchg
push
jns
hlt
push
mov
je
mov
imul
push
daa
in
out
vpsubb
cmp
ds
xchg
scas
shl
pop
es
xchg
sbb
jb
cmpsb
adc
sahf
loop
je
filds
jg
dec
enter
cmp
ficoml
sbb
mov
decb
push
das
mov
int3
insb
loopne
and
jle
sbb
sbb
ds
fwait
adc
js
roll
and
pop
inc
pop
dec
add
clc
andl
lahf
xchg
stos
push
mov
push
fcomp
test
icebp
aaa
push
sbb
dec
cltd
mov
push
or
out
cli
adc
push
pushf
mov
xor
jp
cmp
mov
dec
jge
add
and
pop
inc
test
dec
cmp
jnp
mov
mov
addb
xchg
in
adc
cli
dec
sub
in
pop
xor
shl
mov
out
iret
sub
mov
mov
ret
mov
xchg
subb
nop
insb
pop
jl
mov
icebp
pop
xor
idivl
bound
in
fucomi
mov
push
jo
mov
add
cmc
icebp
in
mov
or
jne
sub
mov
gs
xor
push
push
mov
in
pop
push
xchg
sbb
shr
pop
test
xchg
jo
push
mov
xchg
jo
shll
stc
xor
fiadds
jae
and
out
inc
cvtpi2ps
insb
repz
inc
fsts
lret
iret
add
gs
mov
dec
mov
outsl
std
add
jnp
inc
inc
fistpll
mov
xchg
adc
testl
pop
test
pop
daa
bound
mov
fstpl
into
mov
enter
popf
inc
xchg
or
add
and
cld
fwait
xor
ljmp
adc
aaa
movsb
in
adc
xchg
ficoml
cmp
cmp
dec
fstpt
sbb
pop
cmp
cs
sbb
mov
mov
mov
jmp
pop
inc
jo
rol
inc
xchg
fbld
lret
fwait
jns
or
xor
push
pop
idivb
mov
adc
inc
daa
shlb
cmpsl
inc
xchg
clc
mov
leave
push
negb
jae
mov
rcl
sub
xchg
mov
fsubl
and
cmc
repnz
jno
in
andl
cmp
dec
mov
neg
stc
pop
es
pushf
mov
adc
clc
push
xchg
inc
cs
dec
xor
aam
dec
orl
sbb
andl
int3
jle
es
pop
insb
addb
dec
out
mov
aad
daa
inc
xchg
test
test
sbb
xor
ljmp
cmpsb
ljmp
enter
sub
mov
mov
ss
lods
mov
pop
xchg
pop
cld
rolb
movsl
add
int
add
in
jae
adc
mov
jmp
sbb
pop
jno
sbb
test
mov
popl
aad
pop
and
add
js
pop
popa
xchg
cmp
test
cs
inc
cmp
stos
mov
mov
sub
data16
lahf
leave
xchg
test
dec
inc
xchg
dec
lcall
dec
out
pop
ljmp
sahf
out
and
lods
out
mov
pop
pop
xchg
subl
push
jmp
in
adc
nop
popf
cmp
enter
mov
jo
insl
jp
outsl
shrb
add
cs
cmp
mov
sbb
mov
movsl
or
mov
stos
dec
shl
arpl
sub
add
aad
sti
outsb
lods
add
xlat
popf
pop
movsl
pop
sbb
pop
lret
adc
xlat
push
sti
inc
shl
inc
mov
pop
out
adc
iret
imul
jp
pop
xor
push
xor
push
insl
cmpb
test
mov
adc
pop
mov
inc
movsl
xchg
mov
rorl
push
push
inc
outsl
movsb
fcmovnb
xor
fdivrl
fmull
scas
jecxz
xchg
into
pushf
xor
xchg
cwtl
xor
cmc
pop
sbb
xchg
mov
les
sub
repz
into
mov
aas
sub
pop
mov
mov
pop
add
into
xor
mov
inc
decl
cmpl
jmp
outsb
das
mov
outsl
adc
shrb
idiv
inc
pop
add
inc
scas
enter
mov
insb
sub
push
iret
sbb
sti
repz
roll
fiadds
dec
and
fildl
mov
xlat
xor
outsb
sub
mov
in
je
cli
test
enter
sbbl
lods
sahf
push
pop
fistpll
xchg
iret
pop
cmc
push
shrb
pinsrw
pop
ljmp
xchg
les
leave
mov
loopne
push
test
add
mov
dec
xchg
icebp
push
cmpsb
cwtl
decl
bts
fs
dec
jle
loopne
rol
or
xchg
call
mov
add
and
adc
nop
xchg
movsl
fstpl
inc
mov
aas
iret
fucomi
mov
xlat
arpl
insb
mov
mov
leave
out
sbb
push
ret
jns
dec
dec
sub
stos
sbb
testl
mov
mov
cwtl
dec
pop
xlat
mov
dec
cwtl
std
out
sbb
pop
repnz
out
sbb
fmul
jle
js
sbb
mov
jmp
lods
out
inc
push
add
pop
scas
sbb
sub
or
mov
dec
cmp
dec
dec
jne
inc
sub
and
fists
pop
xchg
mov
mov
and
aas
sub
add
insl
jne
adc
add
push
add
push
in
inc
xor
xchg
popf
bswap
jb
pop
cmp
xor
jae
test
mov
mov
addr16
mov
popa
mov
aad
js,pn
stc
push
push
sbb
fiadds
add
mov
cmp
pusha
jle
test
xor
xchg
je
mov
mov
fwait
cli
mov
ss
popl
pop
hlt
mull
int
push
enter
je
mov
cmc
sbb
inc
fstl
mov
stc
aaa
jle
xchg
dec
stc
and
mov
aaa
and
out
jns
ds
popf
xchg
aad
pop
movsl
xor
sub
iret
stc
push
stc
xchg
in
jns
or
repz
pushf
dec
mov
jae
xchg
cmovno
jnp
scas
ja
mov
pop
dec
ficoms
add
cwtl
gs
test
lahf
mov
mov
mov
xor
push
sahf
and
cmpsb
xchg
es
cmp
fstps
adc
sbb
jns
push
repnz
xor
lret
rcrb
dec
repnz
popa
psadbw
int
adc
fcomi
inc
and
fcom
hlt
add
aas
sub
xor
jmp
mov
jae
xchg
data16
push
mov
shrb
out
ret
ss
sub
repnz
dec
push
push
inc
cmpl
xorl
jmp
mov
mov
sbb
push
and
inc
adc
adc
dec
mov
jg
cmp
mov
testb
daa
xor
xchg
cmpsb
les
scas
xchg
fwait
mov
addl
into
into
or
cmp
inc
inc
inc
mov
cmc
jnp
lahf
rcrb
xchg
sbb
xlat
pop
scas
test
mov
in
adc
pop
fimuls
mov
and
jae
outsb
sbb
dec
pop
ret
aas
out
sbb
sub
sbbl
or
rcr
mov
cmpsl
pop
in
or
push
jns
or
leave
sub
out
cwtl
sbb
mov
cmc
mov
xor
pop
shl
dec
mov
jnp
mov
in
inc
repz
add
movsl
pop
fnstcw
pushf
rorb
rcrb
shrb
sub
scas
scas
ds
inc
cmp
test
cld
repz
mov
sbbl
mov
rorb
mov
push
xorb
scas
mov
addb
jmp
mov
fs
cmc
lods
or
sbb
lods
data16
push
dec
leave
or
in
in
mov
dec
leave
dec
test
daa
ret
es
cmp
int
cltd
fbld
lds
or
mov
xor
inc
dec
out
xlat
jns
std
ficompl
add
popf
push
dec
jmp
pop
mov
iret
outsl
xchg
cmp
push
xchg
repz
inc
xor
mov
stc
pop
lea
test
loop
add
sub
adc
xor
fdivrs
fcomps
adc
xchg
adc
jo
and
mov
cmpsl
scas
xor
ds
testl
mov
inc
sub
xchg
push
daa
jg
cmp
mov
imul
and
pop
std
mov
xchg
imull
in
ret
jl
inc
inc
adc
mov
mov
cld
and
daa
adc
stc
aad
test
stos
mov
jb
mov
xchg
or
adc
lea
dec
test
add
jg
dec
pop
jecxz
and
inc
pop
jecxz
popf
xor
or
mov
insl
mov
test
inc
scas
jb
popa
or
mov
shl
les
fbld
out
sarb
push
icebp
repnz
stos
sahf
cmp
ljmp
lcall
orps
adc
imul
lock
out
xor
push
sub
xlat
xor
fdivs
pop
inc
or
mov
imul
cmp
push
rcrl
push
mov
sub
or
push
and
mov
lret
or
adc
sbb
cld
hlt
dec
shrl
sub
xchg
out
les
faddl
fdivl
js
mov
cmp
inc
inc
xor
loopne
add
push
stc
mov
xchg
xlat
in
mov
adc
inc
sti
and
mov
adc
idivl
movsb
sub
pop
sbb
mov
sbb
sub
std
icebp
pop
das
push
insl
push
or
cltd
mov
add
mov
mov
fs
fistps
lock
dec
push
pop
shlb
pop
mov
stos
adc
js
xor
dec
adc
out
je
inc
andb
das
pop
shlb
aam
movsl
dec
ret
adc
adc
sbb
daa
lar
das
xlat
jno
xchg
push
ja
pop
push
ljmp
es
nop
jmp
xor
fxch
pop
adc
mov
mov
mov
add
test
push
stc
jnp
popa
pop
dec
sbb
out
xor
dec
mov
cli
incb
dec
lea
mov
fildl
insb
pop
pop
and
push
jne
add
xor
filds
lods
jg
and
into
jne
and
mov
adcl
sbb
add
fld
mov
rol
lret
cmp
mov
pop
pusha
adc
sarb
or
mov
cmp
and
icebp
sbb
sbb
rorb
xchg
dec
mov
loopne
cmpsl
je
inc
xchg
jge
sarl
pop
loopne
cmp
and
jmp
dec
imul
adc
sbb
push
roll
sbb
mov
je
iret
popa
inc
mov
andb
jmp
lcall
les
data16
xchg
in
incb
mov
jmp
loop
rolb
sbb
in
pop
jne
scas
cmp
jnp
push
pop
rcrb
sub
rolb
cmp
adc
sbb
push
jno
repz
mov
mov
mov
push
lea
inc
insb
sbbl
lret
popf
je
enter
sub
add
adc
lret
jp
inc
mov
and
pop
or
push
testl
mov
mov
lea
in
repnz
repz
and
jb
lea
adc
fchs
sub
sub
add
outsb
outsb
or
in
nop
ljmp
cmp
cwtl
sub
mov
pushf
rolb
lods
dec
mov
shll
aam
divb
cltd
mov
and
addl
add
sbb
into
sbb
mov
movsl
inc
jl
dec
push
add
fs
rolb
sbb
push
xor
xchg
shrl
cld
movsl
xor
adc
jmp
sub
in
dec
pushf
cwtl
ficompl
cmp
adc
icebp
cmp
or
pop
scas
inc
mov
aam
add
push
test
lods
dec
test
shl
xor
pop
jg
fwait
cwtl
lods
mov
push
arpl
and
dec
sbb
lock
or
xchg
cmc
sub
mov
pop
fnstsw
stos
lret
adc
add
lcall
arpl
push
mov
pop
push
jmp
adc
inc
jae
in
add
fisubrs
or
ja
sub
jge
lret
pop
or
inc
dec
mov
mov
sub
jb
cmp
xor
mov
push
fs
std
into
or
mov
jne
sti
or
xchg
mov
ffreep
icebp
lahf
xchg
inc
jns
data16
cmp
push
dec
movsb
cmp
clc
fucom
lahf
outsb
dec
pop
insb
xor
pop
xchg
lret
test
imull
pop
lds
sbb
mov
out
into
fisubrl
cwtl
cmp
decl
jmp
xchg
xchg
mov
loopne
mov
notl
jne
insb
sub
mov
sub
add
push
rcr
inc
cmp
out
cmc
lret
xchg
pop
mov
pop
sbb
add
jne
inc
in
adc
mov
insl
pop
and
push
stos
cmpsl
pop
lock
stos
bound
push
loope
int3
push
test
push
cmp
mov
mov
mov
jnp
sbb
push
lods
xchg
mov
ljmp
mov
sub
sti
lods
fwait
add
jp
jle
xchg
xchg
into
fdivrp
dec
push
sbb
outsb
sub
pusha
bound
cmpb
cs
clc
shlb
adc
push
push
mov
xchg
push
sahf
ret
push
cmpsb
call
inc
divl
sbb
lds
xor
clc
sahf
test
mov
data16
test
stc
scas
outsb
jl
xchg
and
mov
sbb
mov
pop
cmpl
add
and
and
andw
imul
das
cmp
mov
dec
insl
hlt
ret
pop
push
sbb
lret
dec
js
stos
inc
dec
je
jge
xor
adc
hlt
jle
inc
sbb
dec
fnstcw
into
xor
sbb
scas
mov
leave
lahf
sbb
mov
popa
and
test
negl
sbb
fnstenv
pop
cmp
out
dec
outsb
push
sbb
mov
lea
lcall
dec
sbb
xor
dec
and
add
add
push
stc
dec
inc
icebp
xor
jno
push
mov
lcall
sahf
mov
icebp
fwait
sub
and
repnz
sahf
cli
mov
js
data16
lret
push
sbb
pop
bound
cmc
sbb
pop
gs
fwait
xlat
push
adc
ret
test
pushf
push
into
push
inc
jae
jge
add
mov
outsb
fnstenv
lea
fldt
cli
jl
pop
adc
mov
aad
icebp
sub
jbe
cld
fidivrl
sub
and
xor
popa
popa
mov
push
mov
outsl
add
incb
inc
inc
jg
mov
xor
cmp
repnz
sbb
xor
dec
mov
imul
push
pop
inc
push
mov
or
cmp
cmpsl
push
add
xchg
push
add
mov
int
xrelease
testb
push
push
into
cwtl
fcomps
mov
popf
jg
int3
xchg
lret
decb
lcall
cmp
push
aad
sahf
mov
gs
jmp
aam
cld
xor
jmp
or
jecxz
adc
mov
lods
sub
xlat
bound
out
lea
out
inc
aas
mov
and
dec
adc
andb
add
adc
sub
icebp
xchg
notb
mov
or
lds
inc
test
push
ljmp
mov
push
imul
xor
clc
cltd
xchg
xor
pop
movsl
ja
nop
in
imul
or
pop
jae
and
shl
sbb
sub
arpl
sub
sbb
rcrl
and
sub
cwtl
pop
bound
add
int
mov
jg
sbb
dec
incb
cmpsl
xor
icebp
inc
ja
lahf
mov
aas
aaa
and
dec
mov
fnstenv
and
lahf
arpl
xchg
mov
es
or
push
mov
mov
and
sub
xor
ljmp
xor
lods
fdivrs
stos
jge
mov
gs
mov
std
in
sub
xor
js
xor
pop
push
jbe
and
das
mov
and
arpl
test
test
std
fwait
inc
pop
adc
mov
jae
or
bound
inc
cmp
ror
pop
cmpsb
pop
mov
jns
jmp
scas
call
adc
data16
push
sbb
ljmp
fcomp
addr16
inc
jg
daa
mov
sub
xchg
rorb
pusha
inc
push
mov
adc
xchg
push
pop
test
gs
xor
dec
cltd
imul
scas
mov
sub
test
out
dec
jnp
cld
pop
and
adc
pop
repnz
notb
xchg
mov
jbe
jne
add
pusha
popa
fbld
lcall
jnp
pop
stc
dec
mov
sbb
aad
loop
repnz
fstpl
imul
sbbl
cmp
jno
cmp
xor
stos
dec
sub
xchg
add
push
int3
cs
rcrb
iret
inc
sti
faddl
shl
dec
push
cwtl
int
cmpsl
cmp
mov
jae
cld
or
aas
push
pop
dec
and
mov
aas
push
xlat
idivl
loope
mov
int3
mov
xchg
pop
call
cmp
out
stos
and
or
arpl
xchg
xchg
out
icebp
cmpb
ljmp
push
push
andl
xor
lret
xor
test
adc
jle
adc
xor
sbb
mov
dec
lods
mov
push
mov
fwait
jge
or
pushf
sbb
std
dec
rorb
icebp
pushf
in
push
enter
out
out
ret
mov
test
ja
inc
orb
pushf
push
mov
stc
mov
pop
in
or
dec
ja
cmpsb
inc
test
adc
push
dec
pusha
sbb
mov
lods
sub
sar
cmp
rclb
mov
mov
sub
call
inc
sbb
ret
out
mov
loop
jge
cltd
loope
icebp
or
js
mov
adc
add
mov
add
clc
mov
adcb
mov
lret
mov
test
cli
inc
inc
lods
icebp
jno
stos
nop
addl
ljmp
popa
mov
leave
aam
aaa
jnp
inc
outsb
cmp
fstpl
hlt
cs
in
mov
mov
loope
sarb
lods
mov
mov
mov
popf
stc
inc
outsb
scas
out
mov
out
xor
cmp
pop
idivl
sar
and
and
andl
adc
inc
movsb
mov
mov
mov
mov
in
xchg
stos
push
hlt
xchg
lock
repz
cmp
std
dec
test
sub
xchg
out
cmp
jae
cs
or
pop
mov
orb
push
lods
add
and
sub
in
rorl
sub
ss
pop
in
cmp
cltd
in
lahf
sbb
ljmp
pop
lods
ficoml
mov
shlb
pop
pop
repz
in
jne
mov
push
jbe
mov
pop
sub
mov
lods
mov
dec
pop
xor
sahf
push
out
rcrl
leave
in
push
mov
addl
or
xlat
mov
repnz
lods
add
stos
es
sbb
mov
adc
fs
xchg
xchg
add
mov
iret
adc
mov
insl
push
pop
pop
cmp
loope
xor
clc
scas
dec
inc
addr16
jo
add
inc
pop
lahf
cli
mov
mov
sbb
es
lods
mov
adc
testb
fyl2xp1
and
push
pop
mov
addr16
jmp
and
mov
and
rcrb
cld
sbb
dec
push
cmpsl
and
into
mov
mov
xor
int
xor
pop
or
xchg
jae
popf
aaa
mov
subl
jns
jno
or
subl
loop
xchg
lods
push
jle
fiadds
lahf
push
inc
out
push
sbb
sub
int
sbb
sbb
pop
sub
and
cmp
and
mov
add
lock
inc
repz
je
filds
fcoms
popa
jne
nop
out
lea
aad
cmp
push
rorb
mov
push
repnz
jae
mov
mov
mov
shl
push
cmp
adc
push
inc
or
ss
push
adc
test
add
ret
jge
lcall
jecxz
scas
clc
je
fcmovu
mov
cmp
xchg
out
add
jmp
jl
sub
cltd
fists
xor
jne
sbb
lds
cmp
sub
mov
jno
ja
add
cmp
out
mov
xor
daa
stc
lahf
mov
mov
iret
adc
mov
push
and
sbb
dec
jbe
imul
or
mov
mov
fisubs
push
pop
sub
arpl
sub
bound
adc
std
sub
push
test
sub
dec
mov
add
fiaddl
int3
add
inc
push
push
push
imul
push
ss
pusha
int3
mov
hlt
arpl
fdiv
hlt
cmpsb
lock
out
outsb
cltd
rcll
mov
repz
popf
fisubl
lds
enter
jo
out
dec
cs
ror
es
sub
bound
test
jmp
ljmp
xor
pop
fstl
mov
fidivrs
ljmp
jns
push
jecxz
movsb
addr16
pop
sbb
subl
outsl
mov
pop
mov
mov
pushf
rcrl
sbb
dec
xor
cltd
mov
rcr
sub
mov
andl
pop
out
push
in
and
pop
or
push
push
and
inc
push
std
test
addr16
push
pop
lock
imulb
jge
adc
jbe
add
sahf
ret
int
sbbl
dec
pushl
jl
cmpsb
push
sbb
mov
les
jnp
stos
dec
push
ljmp
fs
fistps
scas
jg
pusha
ds
int3
adc
gs
movsb
or
test
sub
push
pop
test
mov
xchg
outsl
add
sub
jae
loopne
mov
rorl
adc
lahf
icebp
repz
dec
mov
fsub
scas
inc
cmp
mov
mov
sub
enter
dec
push
ja,pn
pop
push
jecxz
clc
cwtl
push
jge
or
shl
add
push
cmp
aam
cmpl
jecxz
fidivl
pop
and
out
push
ljmp
aaa
mov
lret
xchg
subl
pop
sbb
sahf
cmp
imul
je
lock
xchg
mov
shlb
lea
adc
pop
xor
dec
lock
test
xlat
fidivrs
test
sbb
pusha
aad
dec
mov
into
mov
or
dec
jl
lods
mov
outsb
ss
mov
cmp
dec
dec
inc
mov
jo
push
sbb
ljmp
add
mov
dec
ja
sbb
scas
mov
cmp
push
mov
ljmp
out
xor
pop
std
mov
leave
mov
add
and
flds
cmpsb
outsb
adc
adc
mov
jnp
and
add
lahf
movsl
and
xchg
cs
sbb
or
mov
mov
mov
pop
test
xor
xchg
or
cwtl
and
mov
fmuls
fstps
lds
sti
imul
cli
scas
decl
cmpsl
lea
cmp
pop
sbb
stos
out
dec
mov
data16
dec
cli
clc
add
int3
scas
adc
mov
mov
shrl
int3
push
in
shrb
test
js
jae
mov
xor
shlb
mov
fistps
gs
jmp
ds
or
mov
ds
cmp
mov
call
sbb
test
addl
push
test
xlat
subb
pushf
dec
xchg
insb
les
adc
mov
push
fadds
dec
adc
jo
movl
xchg
mov
add
xor
lods
test
call
repz
sub
pop
mov
xchg
adc
mov
ffree
movsl
lahf
scas
mov
imul
mov
push
jnp
inc
pop
mov
dec
nop
mov
mov
imul
push
mov
jnp
fsubl
jle
sahf
jmp
stos
pop
pop
and
inc
push
shl
and
fdiv
js
rorb
cmpl
dec
fisubrl
repnz
jne
mov
xchg
or
fstpt
or
mov
rol
mov
xchg
iret
incb
insl
mov
xchg
adc
pop
xchg
xor
xchg
mov
sub
xchg
xor
xor
ja
cmpl
mov
or
dec
dec
jge
inc
enter
paddsw
xchg
test
sub
ficoms
aad
cmp
lret
js
leave
pop
pop
sti
push
in
xchg
mov
jae
lods
cld
fidivrl
sar
mov
icebp
mov
cs
lcall
loop
pop
movsl
mov
adc
pop
push
rorb
push
aaa
and
sarb
cld
xchg
mov
adc
ffree
iret
push
pop
mov
lret
mov
loopne
pop
sub
push
pop
or
or
push
sub
and
mov
jne
imul
or
rclb
adc
stos
cltd
xchg
in
xor
fsubs
push
aas
mov
lretw
orb
sbb
dec
ljmp
jo
adc
outsl
mov
sbb
mov
mov
fs
idivb
popf
mov
ret
mov
mov
lods
loop
sub
adc
inc
clc
dec
cld
test
push
push
lahf
int3
imul
lea
pop
mov
pop
xor
adc
loopne
xor
sub
adc
push
push
rclb
or
js
jne
ljmp
loope
adc
mov
dec
cli
inc
push
dec
inc
jecxz
nop
lret
es
mov
jns
mov
mov
pop
pop
push
mov
jle
fadd
mov
adc
pop
push
pop
inc
mov
mov
fcom
push
mov
push
in
push
push
out
pop
shll
inc
pop
xchg
mov
add
daa
out
push
push
or
mov
sub
lock
pop
cmpsb
ss
cmpb
and
cwtl
mov
adc
iret
ss
dec
fwait
loope
sub
inc
mov
jns
jg
mov
pop
arpl
mov
mov
inc
cmp
jno
mov
jle
and
xor
repz
aad
cmp
mov
mov
lcall
xor
mov
insl
adc
dec
fwait
cmc
pop
pop
mov
push
out
add
test
mov
add
sbb
dec
std
jge
cmpsb
mov
jmp
push
xor
mov
mov
mov
mull
lods
xor
es
cmp
mov
or
call
mov
shlb
mov
out
adc
fcmovnbe
dec
inc
vmwrite
lret
and
dec
and
sub
mov
out
pop
xchg
sbb
xchg
int
popa
adc
pop
or
add
lret
mov
add
pop
cli
loop
sbb
push
or
cmp
pop
dec
stc
test
leave
lcall
sub
dec
inc
xchg
xchg
mov
and
idivl
inc
cwtl
sub
xchg
in
cmp
jns
insb
int3
jb
mov
movsl
dec
pop
dec
and
or
insb
out
rcrl
cli
sbb
orb
insb
push
mov
and
insb
mov
adc
sub
scas
or
js
int3
jle
cmp
or
arpl
push
cmpsl
rcll
inc
mov
lods
test
push
xor
stos
mov
fidivrl
cmp
xor
sbb
lret
filds
add
mov
xchg
movsl
gs
lea
fcomps
xchg
sbb
mov
movsbl
dec
shr
loopne
pop
rcrl
sarb
out
mov
les
mov
lods
mov
mov
push
int
jmp
scas
mov
ljmp
pop
lods
in
loope
jb
add
std
xor
js
and
std
pop
les
inc
ficoms
imulb
or
and
nop
lods
sbb
cmp
jae
stos
stos
jl
dec
ja
xor
insl
cs
cld
add
or
shlb
sub
mov
imul
add
dec
mov
add
int3
jns
dec
mov
scas
dec
or
jnp
jp
mov
in
dec
cld
xchg
mov
sub
or
pushf
mov
push
fidivrs
sbb
xor
or
loop
sub
push
jmp
daa
pushl
rcll
pop
pop
addb
inc
sahf
inc
int3
sbb
arpl
push
jae
sub
sarl
push
or
jns
add
shrl
xor
or
sub
cmp
add
sub
pop
jecxz
and
cli
sti
loop
push
push
sub
add
insl
mov
sti
add
xchg
lods
jle
insb
mov
adc
loope
outsl
or
mov
int
or
imul
sti
mov
mov
xor
into
fsubrl
popa
cmpsl
or
push
cmp
aad
add
lret
or
es
push
adc
mov
and
pop
mov
fldt
divl
std
mov
pop
mov
les
xlat
jns
mov
mov
insb
out
xchg
sbb
negl
jmp
sub
sarl
aad
or
data16
dec
adc
shll
repnz
push
mov
mov
sub
mov
or
xor
xchg
cwtl
out
cmp
mov
jle
lcall
loope
and
lds
sbb
call
and
cmc
cmpl
jnp
mov
or
lods
das
dec
rclb
adc
push
call
inc
dec
das
pop
push
push
pop
xchg
cs
movsl
loope
push
inc
fildll
pop
cld
jp
sbb
pop
pop
lret
adc
pop
mov
jns
jae
scas
adc
pushf
xchg
lods
mov
insl
test
xchg
push
push
xchg
bound
movb
nop
lock
inc
icebp
fisubrs
jb
lds
pop
push
in
cmp
leave
movsb
pop
xchg
icebp
fwait
in
adc
lock
rcll
out
fldl
ljmp
mov
and
sub
outsl
jmp
sbb
xor
orl
mov
addr16
jb
lea
stos
pop
inc
and
into
mov
sti
ficompl
imul
mov
lea
push
dec
cli
sub
add
inc
lods
mov
call
jb
out
ret
mov
xor
mov
xorl
jle
xor
cmp
icebp
incb
or
mov
add
ljmp
xchg
inc
out
add
dec
pop
outsb
mov
sub
pop
pop
pushf
mov
decb
inc
dec
dec
bound
push
inc
inc
lret
cmc
mov
sub
jae
lahf
aas
add
cs
ret
sub
sbb
daa
and
loope
std
pop
xor
xor
mov
inc
inc
mov
pushf
and
sub
test
lret
mov
adc
dec
fldt
movb
out
push
push
add
jg
sub
fwait
incb
js
int
pop
push
and
jns
lret
leave
cltd
fidivl
sub
add
xlat
mov
cli
jb
stos
xchg
pop
adc
fwait
leave
stos
jge
xor
test
inc
ret
int3
push
sbbb
mov
shll
mov
add
or
jle
inc
pop
jbe
pop
push
push
mov
aaa
sub
pop
cmp
call
out
cmp
push
mov
fistpll
cwtl
or
fwait
jno
test
popa
push
and
aad
das
xchg
popf
xchg
pop
es
jb
xor
cli
xor
mov
and
es
mov
lds
pushf
xor
add
out
sbb
ficompl
push
xchg
adc
add
cwtl
xor
pop
aam
pop
addr16
adc
or
or
lods
sub
aas
push
xor
andl
lock
mov
jno
das
xor
aas
scas
ss
mov
movsl
icebp
test
pop
sbb
test
xor
xorb
adc
mov
in
mov
push
xchg
jle
je
push
push
cmp
pop
imul
data16
out
in
mov
pop
test
popa
and
aam
pop
data16
adc
mov
cwtl
out
pop
pop
adc
add
dec
lock
or
call
mov
inc
ja
aas
outsb
cmp
data16
xchg
or
sub
cmp
sarb
cmp
or
scas
push
sub
push
inc
inc
lret
mov
in
pop
or
jne
dec
jmp
pop
jmp
adc
sub
pop
add
pusha
fldl2e
or
mov
cmp
mov
mov
xchg
adcl
pop
push
cli
stos
lcall
sbb
orb
je
daa
repz
loop
adc
cli
rclb
into
cs
or
out
push
jae
outsb
adc
iret
pop
xchg
mov
jmp
cmp
pop
ss
dec
sub
out
adc
fwait
test
mov
shl
int
hlt
sub
pop
rcrb
push
adc
adc
mov
mov
add
stos
push
es
loope
nop
jmp
movl
clc
jnp
push
imul
sub
mov
lahf
sub
ror
cmpsl
xchg
mov
add
jb
scas
clc
sti
aad
scas
jne
xor
push
andl
lret
add
fildl
mov
xchg
popa
clc
mov
jo
sbb
sete
pop
jo
add
cmp
mov
pop
ficomps
in
mov
daa
pop
xor
call
sbbb
inc
jae
xchg
imul
rcl
nop
je
inc
ljmp
cmpsb
mov
or
pop
imul
jne
hlt
jbe
mov
int3
movsb
cmp
sub
lods
outsb
fs
sbb
test
repz
imul
stos
and
movsb
inc
lods
jmp
and
and
shr
mov
push
mov
out
test
in
xchg
jne
negl
dec
mov
lret
lret
ud2
fsubl
pop
inc
pop
daa
or
out
fisubs
mov
pusha
sar
int3
pop
icebp
sub
dec
ss
push
je
test
ret
jno
inc
pop
xchg
or
icebp
xchg
loopne
xchg
arpl
xchg
dec
lods
dec
cmp
xchg
lret
fldl2t
jmp
push
dec
cwtl
sbb
pop
mov
xchg
push
dec
int
jecxz
lods
add
jne
and
jbe
lea
sbb
icebp
inc
clc
or
add
fcoms
mov
adc
repz
sbb
dec
xor
inc
add
push
fbstp
cmpl
lea
cmc
xor
imul
imul
lods
sub
ds
push
jle
pop
das
push
jmp
pop
mov
dec
or
xchg
leave
std
imul
mov
adc
jne
sbb
dec
out
aas
in
mov
cmp
arpl
in
mov
mov
push
js
push
adc
mov
add
mov
stc
test
adc
insb
dec
idiv
stos
mov
test
xchg
ds
xor
dec
xchg
adc
inc
decl
pop
stos
mov
xor
mov
push
pop
mov
mov
xorl
repnz
dec
mov
test
fistpl
push
mov
call
adc
mov
lea
fs
mov
jno
int
push
je
xor
jl
mov
repz
shl
ret
stc
pop
sub
mov
lcall
jle
mov
jmp
sahf
test
mov
lret
in
pop
or
mov
inc
shlb
and
adc
xchg
enter
in
or
arpl
insl
push
call
pop
lods
mov
into
in
adc
push
idivb
dec
enter
jl
cwtl
dec
fmuls
test
insl
push
xchg
dec
lea
xchg
sbb
gs
int3
imul
add
dec
adc
and
rcll
jmp
inc
xor
enter
xchg
dec
stc
mov
daa
jno
cld
jno
push
loopne
mov
mov
loop
xlat
cmpb
and
sbb
cmpsb
movsl
mov
dec
daa
pop
push
test
dec
lock
and
pop
xlat
adc
sub
xor
pushf
pop
sti
inc
xor
inc
sub
ret
mov
loopne
mov
xchg
or
sub
fwait
movsb
cmp
aaa
jge
xor
mov
lahf
loope
dec
sbb
mov
hlt
icebp
out
ljmp
mov
in
mov
scas
insb
jg
int
mov
mov
sub
outsb
sti
mov
lods
adc
dec
dec
xor
data16
dec
shlb
iret
int3
push
fildll
mov
adc
fucomip
inc
mov
xor
cmpb
sbb
sub
icebp
xor
divl
lods
cmpsl
jp
mov
and
lock
mov
adc
pop
sbb
movsl
aas
push
pop
mov
xor
lds
cli
lahf
jo
leave
pop
cld
and
pusha
dec
repnz
pop
aad
xchg
inc
sti
mov
ficompl
sub
test
pop
cmp
pop
sahf
or
rclb
addr16
push
mov
in
jno
pop
sbb
jg
dec
cld
push
leave
push
cmpsl
push
out
imulb
mov
aam
jbe
loopne
sbb
and
jmp
and
pop
mov
bound
jecxz
in
mov
or
outsl
gs
inc
push
dec
xchg
mov
mov
nop
push
mov
add
std
aaa
jle
cmp
jnp
mov
or
mov
mov
mov
xor
aas
fildl
push
fsubrl
insl
xchg
mov
push
sub
ds
inc
nop
dec
pop
jns
mov
mov
divb
lods
sarb
inc
ds
pop
xchg
cmc
adc
inc
dec
clc
push
mov
push
push
into
inc
mov
notl
and
movsb
pop
jno
int3
mov
in
dec
add
ss
or
inc
or
and
cli
jecxz
mov
subb
pop
fildl
test
mov
adcb
jmp
aaa
ljmp
push
fildll
repnz
fisttpl
in
mov
push
add
inc
lea
loop
mov
pop
pop
enter
push
dec
jge
lret
xchg
in
js
and
mov
sub
scas
pop
negb
call
ds
xchg
lds
lahf
or
out
scas
loopne
test
aam
fistpl
push
cmp
std
mov
jnp
mov
push
out
shl
clc
outsb
adc
or
fdivrl
mov
loope
or
lahf
icebp
loopne
dec
mov
pop
dec
shll
pusha
lea
lods
ss
add
cmp
cli
cmp
jmp
dec
call
orl
stc
push
leave
adc
or
pop
cmc
sub
in
in
pop
fisttpll
dec
movsl
xchg
add
push
imul
pusha
xchg
or
ljmp
shrl
sbb
sub
pop
xor
loope
incb
fmull
sbb
and
int3
xchg
xor
loopne
movsl
ds
nop
pushf
daa
mov
or
and
push
xor
xchg
add
xchg
xchg
inc
insl
imul
outsb
imul
push
xor
addr16
pushf
dec
lcall
dec
inc
or
pop
add
ja
ss
adc
or
ds
push
ljmp
sub
arpl
imul
dec
jl
fildl
test
in
jecxz
add
movsl
aas
shlb
sbb
sub
xor
and
repz
rcl
pop
and
mov
push
inc
movsl
sub
pop
fildll
js
outsb
mov
adc
int
in
out
xchg
xor
mov
sbb
jmp
or
pop
jb
sub
fstl
testb
dec
push
xchg
xor
andb
push
jb
adc
add
push
jo
lcall
popa
add
pop
xchg
xor
add
add
jo
dec
scas
lock
jmp
test
and
mov
push
mov
mov
push
lea
sub
mov
push
lods
add
or
push
dec
ljmp
in
sbb
fcoms
jnp
dec
repnz
mov
and
inc
xor
and
pop
adc
stc
cld
mov
pushf
clc
adc
test
dec
sbb
idiv
scas
jns
lahf
sbb
cmp
mov
inc
xchg
dec
fcoml
stos
leavew
mov
je
cmp
dec
stos
ret
daa
iret
imul
rep
cltd
call
in
jle
mov
mov
adc
dec
gs
jecxz
adc
popa
dec
cmp
out
mov
and
xor
push
addb
sbb
out
inc
sub
scas
or
jge
mov
pop
jnp
mov
inc
outsb
je
mov
clc
test
mov
mov
inc
sub
xlat
fidivs
cmp
dec
out
fidivl
je
pop
xchg
inc
mov
and
xor
mov
push
sbb
xchg
dec
gs
call
cmp
roll
xor
mov
outsl
mov
in
cmc
mov
cltd
mulb
jmp
rcl
add
mov
pop
pop
xchg
xor
sub
lret
mov
adcl
leave
adc
outsl
imul
stc
notl
mov
or
adc
outsl
inc
or
movsl
push
femms
jl
ret
xchg
dec
call
adc
jb
sub
out
mov
inc
int3
fstl
rol
jle
lods
and
cmp
icebp
mov
cmp
sub
shlb
cmp
add
dec
loopne
or
mov
jae
dec
jmp
leave
xor
or
out
xchg
sub
cs
and
fldl2t
and
imul
loopne
loop
dec
popl
ss
inc
jge,pt
mov
mov
push
and
mov
int3
jp
jmp
ficomps
aaa
xlat
sbb
aam
jp
jne
jno
push
movsl
arpl
pushf
lock
fisubl
sbb
js
imul
fcomps
jmp
mov
jbe
adc
dec
out
xor
ret
fnsave
out
push
ss
and
shrb
addr16
inc
movsb
mov
ret
adc
xor
push
dec
jne
push
or
loope
inc
inc
pushf
jne
and
lret
test
jne
push
cmpsl
pop
arpl
mov
push
jecxz
adc
or
jne
mov
shlb
das
sub
pushf
push
stos
es
and
push
fstpl
roll
pop
xchg
push
incb
mov
sbb
aas
jl
icebp
mov
sbb
jb
mov
ret
dec
mov
cli
imul
push
dec
lahf
shrb
cmpsb
js
mov
push
inc
push
lods
imul
mov
mov
in
cmp
add
adc
cmp
es
cli
xchg
mov
sub
inc
inc
mov
dec
iret
in
sahf
shrb
pusha
and
cmp
dec
shlb
imul
mov
movsl
mov
push
xor
in
in
inc
imul
cmc
sub
cmp
adc
dec
in
dec
push
lret
pop
jns
or
pushf
fbstp
or
push
movsl
jge
jns
int3
out
ds
mov
cmp
or
pop
std
nop
rcrl
sbb
pop
divl
movsl
or
cwtl
sub
jp
ja
xchg
sbb
fildl
scas
inc
add
popa
sbb
jecxz
inc
sub
sub
mov
jmp
add
ret
pop
push
push
ret
dec
outsl
lea
push
adc
jp
lcall
inc
xor
push
sub
cmp
sbb
fsubrs
roll
les
in
add
adc
mov
les
je
cmp
stc
loop
xchg
out
dec
clc
adc
lahf
popa
outsl
fstps
insb
insl
test
sub
pcmpeqd
dec
xchg
xor
mov
icebp
mov
loopne
pop
sub
mov
inc
cmc
inc
adc
int
and
xor
cmc
adcl
fstpt
jl
hlt
and
repnz
mov
inc
sarb
lods
dec
nop
xor
sbb
pop
cwtl
leave
push
stc
push
and
enter
and
pop
xchg
sbb
outsb
loop
inc
lret
in
push
mov
push
pop
ret
cmp
add
rorl
push
or
negb
lea
mov
xor
sub
pop
mov
pusha
sahf
aam
xor
test
mov
sbb
pushf
stc
xchg
fidivl
in
repz
mov
jb
into
jl
sbb
in
cmc
mov
add
dec
and
pop
xchg
repnz
mov
dec
in
or
rcll
out
test
addr16
sub
cmpsl
fisubl
ret
iret
fwait
imul
lock
inc
out
or
gs
xchg
lds
jo
daa
sub
sahf
inc
mov
push
inc
test
out
lds
cs
cmp
cmp
int3
push
jmp
pop
jno
cmp
stos
outsb
mov
jb
lock
fistps
mov
je
or
mov
push
cmp
lea
test
sbb
sbb
sbb
and
inc
or
jno
cmp
pop
adc
adc
and
mov
lret
sbb
pop
pop
cld
mov
movsl
negl
bound
and
pop
pop
push
ret
ret
xchg
test
push
hlt
scas
loopne
pop
cs
in
add
jmp
push
ror
push
push
mov
ja
mov
jne
outsb
or
mov
aam
pop
into
dec
or
adc
fists
or
ss
xchg
jp
jp
lahf
loopne
add
shlb
mov
adc
push
sbb
mov
inc
mov
add
arpl
pop
inc
cmp
jnp
jae
jmp
inc
std
pop
mov
je
push
leave
dec
jl
jmp
push
jp
fbld
sahf
lret
or
aas
or
sahf
jmp
mov
dec
dec
test
fbld
das
inc
lds
mulb
cmp
cmp
xchg
and
in
sub
xchg
gs
mov
enter
adc
jae
or
push
push
push
push
daa
jp
sbbl
fcmovu
xor
aad
aaa
mov
add
ss
sbb
lods
mov
fcoml
sub
subl
sub
mov
addr16
or
enter
outsl
aaa
loope
xlat
fcomps
mov
xlat
dec
popa
xlat
insl
repz
pusha
rol
movsb
jp
mov
fsubl
subl
push
sahf
push
push
inc
jp
cmc
mov
lcall
xchg
cwtl
mov
frstor
inc
push
into
mov
mov
and
les
es
mov
mov
push
call
in
xchg
out
movsl
arpl
les
push
lock
pop
ljmp
mov
test
je
mov
out
sbb
pop
scas
xchg
lods
pusha
jg
inc
bound
inc
pop
add
mov
in
pushf
and
xlat
and
stos
int3
jbe
sub
sbb
incl
jno
push
aad
rcrb
ljmp
pop
lods
iret
mov
adc
pop
jb
xor
adc
cmp
aad
sbb
aaa
jae
ficomps
mov
or
adc
cmc
xor
test
jecxz
jae
push
jp
shll
xchg
out
lds
jns
gs
movsb
mov
xchg
pop
in
sub
lods
cmp
xor
test
mov
sahf
shl
xchg
adc
jno
jbe
sub
push
pop
insl
xor
or
frstor
test
jge
leave
add
cltd
jnp
inc
ror
xchg
cmpsb
cmp
int
or
mov
mov
std
mov
bound
or
or
push
clc
jle
adc
push
pop
xor
filds
test
add
std
push
add
push
ret
mov
mov
mov
jno
mov
in
stos
sahf
cwtl
cmp
notb
pop
dec
xchg
cld
das
jg
adc
xchg
inc
test
in
nop
xlat
aad
add
xchg
jg
imulb
cmp
dec
push
adc
mov
mov
jae
mov
fsub
add
test
shlb
aaa
push
or
aaa
das
lods
adc
add
test
aam
lds
cmp
jmp
shrb
leave
imul
testl
sbb
and
cmp
jae
mov
inc
mov
leave
and
adc
rol
lds
push
sbb
inc
pop
test
ja
cmpsl
loop
xor
cmp
data16
inc
lods
fiadds
pop
xchg
stc
xor
mov
sbbb
shl
cmp
test
cs
sbb
dec
push
dec
cmpsb
cmpsl
mov
faddl
loopne
pop
jge
aam
test
inc
loope
push
loop
sbb
mov
pop
xchg
push
dec
shr
inc
or
mov
lock
mov
and
sbb
inc
xor
rcr
scas
jmp
shlb
pop
add
sub
mov
jg,pt
push
ja
cmp
notl
sbb
enter
mov
shrb
sub
sahf
jne
nop
dec
cmp
xchg
cmpsl
cmpsb
add
jno
popa
pushl
rcrb
imul
mov
int
lods
dec
mov
flds
push
movsl
cwtl
pusha
ljmp
adc
mov
jb
aad
sub
out
hlt
adc
adc
adc
int
adc
sbb
pop
movsb
cmp
sub
push
xlat
sub
repz
xchg
int3
cli
push
ret
dec
sub
xor
inc
js
roll
sbb
mov
popf
lcall
mov
pop
sarb
jnp
xchg
mov
out
push
in
inc
imul
mov
lea
adc
fnstcw
es
outsb
push
repz
fdivrs
or
pop
jbe
mov
aaa
jnp
dec
hlt
aam
add
insl
sub
test
and
pop
and
aad
dec
fwait
data16
fdiv
out
xchg
lds
push
push
dec
cmp
mov
stos
aad
in
cltd
out
and
dec
mov
fst
adc
lea
ss
test
cmp
sbb
cli
xor
ficomps
mov
popa
cmp
clc
subb
fnstenv
xchg
push
cs
test
xlat
sbb
pop
jnp
cmp
test
sbb
repnz
mov
mov
cmp
pop
sub
mov
cs
mov
pop
cmp
cmpsb
pop
outsl
cmp
mov
insb
loop
lods
xor
cmp
lret
daa
lea
popa
lret
sahf
push
cmp
mov
or
out
popa
imul
shl
pop
in
push
push
cmp
push
cli
mov
mov
fdivs
fcoms
jge
cmp
movsl
in
fst
mov
lock
ret
xchg
fcomps
out
aas
int
xchg
shll
scas
mov
in
pop
outsl
and
jno
xor
shr
xor
pop
jg
or
mov
mov
mov
mov
cmp
sbbb
jne
in
arpl
test
insb
push
movsl
or
and
call
xchg
dec
fisubs
test
push
sbb
in
sahf
jb
jns
push
cwtl
cmp
divl
add
out
test
xor
pop
data16
loop
lahf
popf
std
mov
rolb
inc
out
dec
ffreep
scas
loopne
sbb
sbb
das
popa
cmp
fnclex
cld
stos
push
adc
push
jae
xor
sahf
cmp
ds
mov
mov
outsl
xlat
sbb
lods
sub
ja
rorb
xor
andb
fldcw
std
or
mov
shll
imul
shlb
fnstsw
xchg
jmp
mov
xchg
xchg
or
clc
int
cli
inc
jl
clc
ja
fucom
sub
push
std
stc
jae
repnz
mov
adc
push
xchg
jg
sti
test
loopne
loope
push
mov
xor
adc
inc
repnz
sahf
mov
push
cmp
stc
add
test
mov
sbb
test
adc
imul
mov
out
in
test
loope
lcall
test
popf
call
xor
push
xchg
clc
int
sbb
mov
pop
xchg
cmp
mov
lcall
cmp
aas
pop
jle
sbb
daa
fsubl
cmc
or
dec
pusha
int3
scas
and
jecxz
rcll
lods
mov
leave
arpl
or
int
sub
repnz
xchg
xor
pop
jno
js
jnp
inc
and
repnz
int
mov
and
push
push
mov
jbe
mov
ror
push
push
stos
shr
mov
or
les
inc
sub
add
push
or
lret
scas
or
mov
adc
xor
in
jecxz
xor
pop
lret
pop
fnstsw
and
test
aaa
mov
or
adc
add
push
jb
ret
pop
cld
insl
shlb
add
sti
jge
sbb
pop
leave
inc
xor
jb
add
mov
stos
xchg
and
xchg
add
inc
stos
stc
mov
and
sbb
xor
xchg
cli
cwtl
fnstenv
dec
xlat
jmp
cmc
movsl
and
repz
or
push
and
and
stos
push
adc
sub
sbb
lods
nop
div
add
inc
pop
mov
fdivrl
jl
loope
fidivrl
pop
pop
fst
xor
dec
dec
pop
mov
sbb
stc
dec
sub
je
je
repz
scas
leave
adc
push
adc
nop
add
add
lret
mov
rorl
incl
pusha
insl
pop
mov
add
test
or
dec
xlat
aas
cmc
mov
and
popf
lea
je
outsb
loop
ret
adc
outsl
in
xchg
xchg
mov
add
inc
js
xchg
pop
push
mov
fsubl
int3
lea
dec
adc
adc
iret
mov
daa
out
mov
fildll
ss
fcomip
xchg
lret
daa
inc
jle
lock
dec
pop
xchg
lahf
inc
mov
rolb
sbb
pop
pop
jecxz
push
mov
rcr
int3
sub
repnz
push
pop
xor
xlat
mov
mov
stc
lret
sub
insw
push
in
mov
popf
xchg
test
ja
lds
push
mov
icebp
fs
lods
loopne
js
out
leave
pop
add
leave
aad
insb
add
das
sbb
out
xchg
mov
sbb
push
shlb
shrl
or
testb
inc
xor
mov
adc
dec
pop
cwtl
xor
xorl
stos
xor
mov
sbb
xchg
rcrl
call
mov
jbe
adc
and
push
das
repz
loopne
mov
push
shr
ja
je
gs
scas
cld
jp
fimull
test
cmp
push
pop
adc
arpl
or
pop
test
jmp
daa
arpl
jge
push
cli
jo
cmp
xchg
nop
or
jl
movsl
movsl
jmp
jns
add
iret
scas
jmp
hlt
aaa
sbb
in
pushf
cmpsl
in
pop
sbb
adc
ds
insb
mov
or
cmc
mov
cld
in
in
and
cmp
mov
cmp
int
and
das
jne
jbe
and
add
dec
and
inc
pop
arpl
adc
aam
push
xchg
or
xor
es
repz
fiaddl
lods
bound
cmp
mov
add
xchg
shrb
icebp
push
hlt
mov
jnp
pusha
test
dec
imul
mov
decl
mov
xor
cmp
pop
mov
popa
in
dec
pop
fisubrs
push
inc
int
xchg
shlb
xchg
rol
jecxz
mov
xor
sahf
insb
xchg
cmp
addr16
stc
jecxz
int3
mov
dec
js
insl
lock
jnp,pt
arpl
movsl
sub
sbb
incb
mov
bound
shl
aam
adc
cmpsl
int3
cmp
pop
fstl
ret
jmp
divl
sti
dec
mov
lret
rclb
mov
add
ds
int
xor
sbb
scas
pop
dec
mov
jmp
sub
add
inc
push
rcrb
add
inc
jp
aam
cmpsb
jnp
jnp
dec
popa
mov
fists
jno
jnp
xchg
or
push
pop
imulb
popf
insb
jmp
xor
fimull
cmp
jmp
cmpsl
or
enter
repnz
sub
ds
mov
mulb
dec
add
jg
xor
scas
dec
and
cmc
bound
mov
lret
aas
adc
mov
loopne
nop
daa
mov
cmpsl
scas
fmuls
mov
or
xchg
jno
dec
dec
imul
xchg
orl
lods
stc
outsl
jnp
pop
adc
dec
xlat
pop
int
sub
filds
add
decb
push
rcrl
jge
inc
bnd
mov
mov
adc
insl
insl
cs
or
pop
popf
mov
inc
stc
push
and
add
add
cmp
xchg
sub
pop
leave
jns
loope
imul
dec
xbegin
shrl
adc
xchg
jae
fsubl
mov
mov
movsb
shlb
mov
fs
mov
jg
inc
cld
cmpsb
std
mov
sub
mov
push
pushf
sbb
loop
sbbl
popf
push
popf
imul
out
in
push
sub
mov
mov
cmp
outsb
popa
sbb
adc
repnz
popa
jmp
push
ret
pop
jb
add
sub
sbb
jae
fisttpll
movsl
pop
movsl
ds
mov
adc
push
mov
sub
jno
addb
push
popf
mov
mov
cmpsb
cmpsl
push
sbb
jp
adc
ficomps
rep
push
mov
scas
pop
mov
imul
pop
sbb
pop
mov
in
push
or
pop
outsb
aad
jae
xlat
imul
in
ds
pop
inc
shlb
mov
xchg
lret
clc
aaa
mov
jb
sub
mov
jb
imul
xchg
cmovno
adc
mov
sbb
pop
sahf
shrl
lcall
inc
fdivr
ss
arpl
xchg
mov
mov
insb
daa
xchg
mov
aaa
repz
xor
pmulhuw
mov
xchg
dec
push
icebp
lcall
subl
testb
test
mov
aas
jp
jb
mull
xlat
adc
sub
out
cli
lock
lea
loope
sub
cmp
jno
and
movsb
lret
rclb
inc
mov
adc
xor
mov
inc
jns
repnz
or
push
shrl
or
daa
imul
ljmp
and
cmpl
movsl
outsl
inc
mov
in
xor
loope
jne
mov
jo
das
push
cmp
jae
xchg
lret
dec
daa
sbb
gs
cmp
add
cli
ds
or
fistl
les
sbb
scas
pop
adc
add
aaa
inc
dec
add
ja
lret
mov
push
pop
repz
and
test
inc
sbb
adc
pop
rcrb
mov
mov
mov
push
addr16
cld
jg
jg
push
aam
xchg
pop
stos
mov
pop
jl
sbb
pushf
cwtl
cs
xor
es
sbb
popa
mov
jnp
outsl
mov
and
sbb
jbe
dec
enter
jbe
out
cld
pop
mov
in
sbb
xor
js
pop
out
mov
xor
cmp
jnp
ds
idivl
js
into
sbb
inc
pop
imul
scas
aam
xchg
mov
pop
cmc
lcall
pusha
mov
cmp
inc
je
ja
insb
bound
mov
dec
jge
rep
or
insl
aas
inc
std
dec
bound
push
cld
cwtl
jb
scas
and
iret
scas
out
add
and
scas
sub
lcall
dec
mov
dec
jne
adc
cltd
or
push
add
xor
push
psraw
or
lret
mov
jl
test
mov
pushf
das
notl
ror
out
and
jle
pusha
test
sbbb
mov
fmul
enter
fidivrl
fbld
mov
repnz
adc
cs
jg
xlat
push
cmp
xor
jne
or
jb
mov
adc
xchg
popf
add
out
loopne
mov
out
xchg
sub
daa
das
mov
xor
int3
ds
push
not
adc
das
adc
out
negl
xor
mov
jg
fdivr
xor
adc
push
dec
loopne
nop
aaa
jb
mov
ficoml
add
fnsave
xor
call
data16
adc
loopne
pop
test
mov
test
scas
scas
push
leave
pop
dec
mov
fbstp
xchg
nop
jbe
test
add
and
cmp
ljmp
pop
inc
push
inc
mov
shrl
add
arpl
incb
push
jo
stos
icebp
sub
dec
repnz
add
leave
inc
shll
cmc
xchg
inc
call
test
dec
sbb
in
sub
fdivr
dec
mov
push
xor
sub
xor
repz
pop
cmp
adc
xchg
mul
dec
cs
xlat
js
xchg
adc
and
and
jge
out
aad
jmp
dec
dec
add
ror
add
notl
fs
jle
bound
pop
and
cmp
imul
add
mov
push
fdivrl
push
xchg
mov
push
inc
mov
test
pop
push
jno
out
aas
and
out
les
ror
xor
movsl
aad
das
mov
xorb
leave
pop
push
aas
pop
ret
jo
dec
add
fisubrl
cmp
mov
or
mulb
fsubrs
xchg
mov
leave
fwait
addr16
mov
insl
out
xor
dec
xor
andl
cmp
mov
xchg
adc
jo
scas
hlt
jecxz
push
sbb
inc
pop
sub
jecxz
cmpsl
out
dec
rcll
subl
das
xor
lock
cli
das
enter
inc
add
es
or
inc
sbb
inc
test
dec
mov
aad
negb
jl
push
mov
insb
mov
dec
and
test
mov
xor
subl
mov
cld
or
mov
fnstsw
into
stos
xlat
dec
in
jns
movb
lock
mov
and
rol
dec
xchg
jo
dec
mov
mov
insb
push
test
imull
out
push
and
add
push
or
outsl
and
fadds
cmp
shl
xchg
or
cmpsb
xor
xor
aad
test
icebp
add
mov
aas
pop
inc
cld
jmp
push
ljmp
jne
popa
cmc
test
jnp
pop
movsl
inc
pop
je
cmc
push
out
gs
mov
fsts
mov
pop
or
xor
pop
xor
add
mov
and
scas
jp
pop
push
pop
jmp
jne
sahf
pushf
outsl
push
sbbl
nop
pop
adcl
mov
mov
pop
fiadds
roll
or
lcall
jbe
clc
pusha
add
jnp
in
jle
xor
orb
pop
xchg
inc
jo
data16
ret
pop
cmc
rorl
loopne
stos
jg
mov
push
cmp
cmpsb
mov
mulb
fnstsw
mov
aas
push
or
and
inc
mov
dec
mov
jo
sbb
shl
das
cmpsb
mov
lods
pop
fldenv
scas
leave
rcrb
stos
repz
mov
fs
mov
push
movsb
insb
push
inc
ljmp
in
xchg
dec
stos
adc
xchg
test
adc
xlat
inc
mov
or
adc
dec
mov
mov
pop
sub
addb
test
imul
adc
addr16
push
in
mov
jmp
stos
xor
in
sub
clc
pop
fisubl
push
push
pop
jecxz
repz
out
fnsave
mov
testb
push
jl
dec
xchg
push
pop
xor
mov
pusha
dec
mov
push
xchg
scas
insl
pop
ja
lock
int
insl
jmp
pop
in
fwait
mov
pop
sbb
xorb
imul
loop
mov
push
mov
and
cmp
add
mov
cmp
xchg
add
lea
push
pop
mov
mov
add
addl
or
divb
mov
mov
test
jo
ret
mov
and
mov
cmp
out
test
lret
mov
pushf
sahf
mov
icebp
mov
push
xor
cli
adc
pop
push
inc
cmp
dec
mov
jbe
jns
mov
repz
insl
movsb
mov
mov
sbb
sbb
ds
popa
ret
push
mov
lret
adc
mov
pop
enter
pop
dec
add
xor
xor
cmp
dec
sbb
mov
int
es
out
mov
sbb
jnp
pop
xchg
mov
xor
jle
pop
jb
ret
int3
sub
jecxz
movsb
addr16
add
out
lret
xchg
cmp
ret
sbb
and
sub
push
lcall
aam
xchg
dec
mov
fst
loopne
jns
dec
cmp
pop
ljmp
jns
ds
pop
cmp
packssdw
adc
mov
lahf
xchg
adc
sbb
pop
pop
sub
xor
nop
sub
push
loope
fwait
scas
push
cld
fs
sbb
shrb
inc
and
sbb
jge
mov
or
stos
xchg
movsl
or
mov
adc
test
push
cmpsb
insl
xchg
push
mov
dec
out
or
sbb
test
rcll
inc
movsb
and
fbstp
inc
sub
push
fstpt
push
adcb
std
insl
or
adc
cltd
pop
mov
out
out
cld
outsb
xchg
xchg
adc
xor
xor
push
arpl
sbb
rcll
xor
pop
enter
pop
jnp
or
icebp
sbb
iret
std
fldt
idivb
push
pop
and
bound
jecxz
repz
jnp
fsubr
add
xorl
repnz
popa
mov
mov
das
repz
in
dec
xor
aaa
push
repz
add
or
mov
sbb
dec
cs
sbb
jae,pt
dec
imul
into
mov
dec
cli
lods
dec
or
into
insl
xor
sub
hlt
shrl
xchg
push
or
gs
fstpt
inc
fldt
jle
or
dec
push
cmp
sub
xlat
push
pop
push
pushf
sbb
xchg
and
test
lret
in
jae
inc
inc
mov
sub
or
es
adc
fs
out
jecxz
scas
ret
mov
mov
call
shrb
xorb
inc
clc
repz
movsb
shl
push
lahf
sbb
cmpsl
add
mov
mov
sbb
add
jae
xchg
popf
test
pop
sbb
or
iret
movsl
sbb
pop
std
sbb
jecxz
lcall
jmp
addr16
ja
mov
mov
cmpsl
cmp
sub
sti
and
aam
and
or
nop
sbbl
push
scas
sbb
push
push
lods
les
outsl
inc
enter
push
dec
cltd
cltd
xor
pop
mov
decb
cmp
pop
clc
cli
mov
inc
push
and
inc
mov
lods
in
pop
add
movsb
xchg
dec
ss
push
lock
inc
loop
xchg
sub
aad
shlb
in
ret
mov
nop
aas
jne
inc
dec
mov
lods
dec
loopne
mov
popa
dec
mov
mov
pusha
repz
loope
mov
mov
cmp
lahf
into
stos
fnstcw
lock
test
fsubrs
xchg
push
out
push
out
test
jo
int3
int3
dec
mov
xor
push
cmpsb
add
es
test
loope
xor
mov
mov
call
sub
scas
test
dec
dec
repz
imul
jge
add
and
mov
je
sbb
shlb
out
test
stos
scas
testb
jecxz
in
push
xor
dec
fdivs
adc
pop
jge
cwtl
cli
jmp
cld
lret
mov
jecxz
aam
fldt
xchg
paddq
sub
sbb
pop
stos
js
lret
cmp
cltd
lea
jnp
sti
inc
or
add
mov
movsb
cltd
or
sub
repnz
mov
cltd
mov
xchg
call
sbb
mov
mov
jmp
mov
iret
cmc
lret
pop
xchg
repz
pop
dec
push
mov
pop
pop
fwait
rcll
push
lods
ficompl
hlt
cmp
mov
test
mov
int3
fsubrp
xor
lahf
mov
adc
add
cld
sbb
xchg
xchg
xchg
rorl
jmp
js
push
mov
es
or
movsl
xchg
mov
ss
insb
nop
rcrl
or
push
adcb
andl
pop
jecxz
sub
loope
scas
into
adc
lahf
sub
push
dec
or
jle
hlt
or
jns
mov
out
in
fisubl
push
mov
push
test
push
lahf
inc
popl
lods
xorl
push
repz
jl
jle
sbb
xchg
insl
dec
mov
jecxz
cli
jmp
cmp
movsb
mov
and
and
inc
mov
inc
fsincos
push
int
pop
cltd
xchg
xor
push
sbb
loopne
out
inc
dec
or
enter
push
sbb
cmp
push
mov
sbb
adc
fidivrl
mov
in
push
inc
jbe
mov
cmp
cmp
lock
mov
xor
xor
ror
jg
jmp
inc
icebp
mov
sub
sbb
adc
orb
ds
xchg
ret
lahf
stos
or
sahf
in
arpl
jmp
loope
xchg
or
pop
out
push
test
scas
pop
fnstsw
aas
xchg
jnp
arpl
in
xor
in
gs
jp
into
jno
popa
hlt
out
jle
bswap
jmp
shrb
cmp
ficompl
ret
out
in
popa
jl
seto
or
lods
cmc
loop
fnsave
sub
cmp
lods
mov
cld
outsb
xor
sbb
dec
mov
dec
ljmp
cwtl
icebp
and
jmp
push
and
mov
xchg
cmpsl
pushf
jl
jbe
cmc
lds
jl
stc
les
aam
test
das
in
mov
movsb
inc
aad
xchg
ret
push
lar
rcll
push
fistpl
jp
adc
or
cmpb
xchg
mov
sbb
fbstp
and
in
push
sub
leave
inc
xchg
adc
mov
andb
push
inc
ret
mov
daa
mov
mov
mov
repz
std
je
jmp
pop
ret
and
cmc
mov
mov
mov
mov
jbe
xor
je
push
cld
push
lock
inc
sbb
mov
add
dec
pop
sbbl
fsubrs
inc
mov
push
movsb
mov
emms
jns
cwtl
outsb
stos
xchg
idivl
jmp
mov
and
xor
xor
xor
cmp
data16
in
jnp
test
push
gs
dec
divl
adc
and
mov
sub
mov
adc
fistps
ja
push
push
test
sub
fstl
mov
aas
xor
inc
inc
aad
dec
xlat
inc
sub
mov
cmc
adc
dec
adc
mov
fildl
dec
and
mov
mov
ss
in
sti
mov
and
sbb
stos
sti
in
jno
add
pop
pop
mov
fbstp
push
cmc
cld
sti
mov
ss
jp
cmpsl
das
dec
xchg
stos
inc
mov
hlt
lret
or
imul
mov
iretw
aam
jnp
mov
mov
jo
add
gs
push
int3
push
je
bt
jno
mov
or
pop
out
clc
and
lcall
add
cmp
push
scas
movsl
cmp
int
xchg
cmp
sahf
decb
xor
mov
cli
adc
test
jg
or
sbbb
lret
pop
sbb
clc
movl
pop
push
fsubl
mov
jo
test
mov
and
xchg
push
adc
inc
xor
je
cwtl
jae
jnp
stc
adc
jno
jns
add
outsb
adc
sub
inc
jne
nop
cmpl
dec
in
jle
mov
dec
mov
sbb
adc
mov
xchg
jno
fsubp
into
imul
xor
cmp
or
jecxz
in
lcall
loope
dec
cmpsl
popa
scas
add
jmp
dec
popa
popa
mov
dec
jecxz
pushf
cmpsl
pop
xchg
jg
test
movsl
cmp
fstps
mov
push
pop
fisubs
iret
sbb
into
call
mov
ljmp
adc
inc
dec
mov
bound
das
loop
dec
or
ret
leave
ret
cmp
shll
pop
mov
push
xor
adc
push
aam
jecxz
inc
push
mov
lret
popf
dec
and
stos
sub
fnop
push
push
mov
ss
xchg
mov
add
imulb
jl
or
lds
cmp
fwait
pop
aam
adc
int
inc
add
add
cmp
or
imul
inc
cmp
add
testb
jmp
stos
pusha
es
enter
add
into
les
push
sahf
lahf
je
mov
cmp
shlb
lret
rcr
int
addl
mov
test
out
test
add
inc
data16
jecxz
mov
push
lds
or
iret
xor
adc
jae
mov
fimuls
cmpsb
in
inc
mov
push
fstpt
jne
call
outsb
mov
xor
and
js
mov
mov
out
push
movsb
pop
dec
or
sub
repz
bound
fildl
andl
add
movsl
mov
dec
pop
std
outsl
push
ret
test
gs
mov
mov
sub
insl
sub
mov
sub
lret
fdiv
pop
mov
push
aas
dec
ds
fbstp
sub
pop
sub
xor
lods
mov
jg
adcb
ja
adcb
pop
loope
mov
mov
popf
cld
cmc
push
adc
gs
mov
aas
aas
test
push
add
mov
jge
add
insb
call
dec
sub
out
mov
jle
pushf
jp
cwtl
pop
or
pop
paddw
clc
enter
pop
add
mov
push
jns
adc
cmp
inc
pop
aaa
cwtl
adc
jb
rol
sub
fcmovb
mov
and
or
cwtl
aas
ja
outsl
pop
jne
nop
pop
mov
sub
xchg
mov
adc
push
pusha
imul
nop
js
mov
dec
bound
fildll
aas
and
pop
or
sahf
out
out
mov
inc
shr
xchg
je
nop
jo
gs
mov
and
stc
lret
adcb
push
sub
sub
mov
in
bound
pop
popa
imul
fidivs
cld
es
in
dec
lcall
mov
sub
dec
pop
pop
mov
inc
arpl
andb
in
cltd
fdivp
or
out
scas
inc
mov
iret
sub
inc
push
inc
jmp
popa
jge
and
inc
test
push
xor
lcall
sahf
dec
xor
das
xor
inc
xchg
push
pop
aaa
xchg
lret
mov
push
lar
xchg
test
int3
rcr
lods
xor
push
mov
push
xchg
fcmovne
andl
inc
in
add
pusha
popa
jge
pop
mov
xor
push
rol
sbb
xor
test
repnz
ja
pop
clc
dec
test
xor
pop
mov
pop
into
addr16
loopne
fldt
sbb
fcomip
xor
je
inc
ja
loop
dec
mov
add
sbb
cmp
add
mov
cmp
iret
out
shl
arpl
jmp
dec
sub
out
or
lods
xor
push
sub
fdivr
or
shl
fnstcw
sbb
xchg
add
arpl
popa
ja
loop
imul
xor
jmp
test
cmc
add
std
sti
gs
negb
lret
mov
mov
fwait
fwait
mov
mov
rcrl
movsb
mov
lea
mov
mov
cmp
cld
push
mov
lret
sahf
xor
jns
xchg
clc
cmp
pop
push
pop
adc
xchg
jne
stos
cmp
js
outsl
dec
xor
mov
pop
mov
subb
xor
jle
and
paddusw
pusha
sub
mov
mov
mov
mov
push
out
rorl
test
lret
xorl
in
sbb
out
inc
push
adc
aad
adc
push
out
mov
cmp
push
fdiv
mov
cltd
adc
jl
or
stc
xlat
mov
mov
out
pop
jg
test
cmc
sbb
sub
sbb
aaa
les
pop
inc
jge
push
pusha
int
rorb
mov
push
gs
push
xchg
dec
arpl
cmp
aas
add
mov
jne
lcall
and
sti
mov
jo
iret
mov
pop
pop
pop
dec
pop
popa
jg
mov
jl
dec
add
pushl
xchg
lret
shll
ljmp
adc
sbb
cmp
in
mov
mov
aam
xchg
jne
insb
loop
es
add
fwait
jo
sub
out
jnp
test
hlt
jno
clc
jmp
jb
loopne
leave
jbe
negl
push
mov
in
cmp
push
pop
cltd
jmp
sbbb
insb
fld
mulb
pop
xsaves
rcrb
mull
test
lcall
mov
mov
test
xor
mov
or
decl
sbb
scas
aad
iret
fcoms
push
dec
jle
push
mov
mov
shrl
aas
in
jb
pop
mov
daa
scas
add
shlb
jnp
or
or
icebp
fisubrs
push
ds
dec
stc
sbb
inc
enter
aas
fisttpl
leave
movsb
push
pop
jge
pop
imul
shrb
mov
lods
test
cmp
mov
jne
jmp
mov
lock
mov
stc
pusha
jo
push
arpl
je
mov
push
je
ss
addb
test
xchg
inc
pop
pop
aaa
in
rcrb
movsb
movsl
inc
addr16
jmp
gs
xlat
in
insb
shll
sbb
push
sub
lret
cmpsl
scas
and
mov
inc
enter
lcall
jmp
lods
ret
lods
popf
lahf
ds
stc
mov
and
int3
loopne
and
ret
or
icebp
call
xchg
sbb
jno
mov
mov
pop
idivl
inc
outsl
testl
mov
stos
and
inc
jae
mov
or
jle
jl
sbb
xor
mov
int
sub
pop
rorl
sbb
push
int3
mov
or
fldt
es
clc
dec
inc
lods
mov
pop
and
mov
xor
ja
aas
shlb
cmp
filds
sbb
test
leave
pop
xchg
xlat
xor
ja
jb
or
and
jecxz
in
mov
outsl
push
fisttpl
jns
sar
into
pop
insl
pop
mov
cmpsb
repnz
loopne
fcompl
jge
mov
aam
inc
inc
cli
adcl
pop
adc
mov
loop
repz
enter
arpl
sti
and
push
dec
loop
notb
into
nop
mov
add
add
mov
ljmp
xchg
sub
addr16
cld
mov
pop
sub
pop
mov
sti
lcall
adc
or
mov
sub
nop
xlat
xor
pop
lea
pop
mov
aad
js
mov
xchg
ljmp
loop
dec
jne
fldz
clc
test
mov
mov
fcomps
or
xchg
pop
nop
in
js
imul
xchg
cmp
dec
xor
pop
ds
push
xchg
push
mov
dec
sbb
xor
xor
mov
cld
cli
nop
subl
stos
mov
cmp
fiadds
xchg
es
fbld
sti
mov
ja
dec
cltd
fildll
ds
and
xchg
dec
jno
aas
cmp
xchg
out
stos
popa
repz
fadds
das
addb
dec
shll
dec
jp
sub
mov
cltd
xor
and
popf
iret
clc
out
cwtl
push
or
aaa
mov
jl
mov
dec
jno
stos
mov
ficoms
lea
sbb
mov
push
push
or
mov
dec
xchg
push
dec
or
mov
xchg
sbb
mov
jae
aaa
fistl
mov
pop
push
loop
fsubs
jp
push
gs
in
mov
test
fnstenv
frstor
es
push
dec
or
jge
and
orl
sub
inc
push
data16
mov
push
js
inc
test
movsb
inc
repz
out
add
in
cltd
ja
ljmp
test
or
in
repnz
adc
xchg
imul
push
adc
cmp
sub
dec
xchg
sbb
xchg
fsubrs
cmc
aaa
insl
push
ljmp
rolb
or
inc
call
movsb
add
mov
xor
int
xlat
ja
xchg
outsb
mov
mov
faddl
outsl
dec
push
sub
or
sbb
jb
hlt
stos
or
mov
mov
sti
add
fistl
lret
sub
sbb
shll
jne
scas
pop
jg
cwtl
ljmp
orb
jnp
fidivl
lods
cmp
imul
loope
scas
or
push
adc
push
lods
push
fsqrt
mov
mov
jbe
jae
imul
lods
push
cmp
mov
push
push
adc
cli
cmp
push
aam
cmp
mov
mov
dec
adc
and
sbb
out
test
popf
push
jle
ljmp
sahf
mov
push
les
dec
adc
xchg
xlat
sub
aad
aad
dec
dec
and
hlt
mov
mov
into
push
jno
adc
and
aad
lea
test
push
movsl
cmp
xor
jl
cmp
rcl
sbb
stos
or
mov
inc
xor
dec
dec
rcl
sahf
scas
cmp
pop
push
cmpb
ljmp
notb
sub
jmp
loope
shl
loope
sub
aad
adc
ja
ja
dec
pop
xor
test
pop
repz
xlat
fwait
loope
das
adc
rcrb
pop
pop
mov
jp
xor
imul
jl
test
cmp
push
int3
jecxz
test
push
xchg
ds
rcrb
ljmp
mov
fs
xchg
fmul
stos
popa
js
shll
rcll
and
inc
push
mov
push
mov
in
lods
subb
push
lret
and
pop
jno
mov
pushf
mov
enter
sti
xlat
mov
out
leave
sbb
call
push
add
lcall
pop
loop
in
sbb
jl
nop
repnz
cltd
in
mov
inc
popa
push
ret
mov
ja
inc
and
aad
sub
dec
or
mov
inc
xor
adc
mov
enter
sub
lret
mov
mov
adc
and
and
adc
xchg
dec
in
imul
jnp
inc
pusha
mov
cwtl
sub
mov
out
jg
fsubs
lret
imul
stos
jb
fs
push
nop
cmp
cmp
pop
stc
add
fcomps
cli
rcrl
stos
xlat
push
lret
push
mov
push
leave
test
mov
jmp
idiv
movsb
jne
inc
inc
imul
gs
mov
fisttps
inc
jnp
fs
test
ljmp
pop
pop
pop
dec
jp
in
sahf
stos
add
adc
or
rcll
dec
dec
call
mov
xchg
mov
sbb
mov
das
pop
cmp
dec
repnz
bound
sbb
mov
rcrb
push
scas
xchg
xchg
outsb
inc
lods
and
test
and
ljmp
inc
aam
mov
push
movsb
lret
sahf
mov
jle
xlat
repnz
out
ljmp
movsl
stos
push
test
lcall
pop
test
je
in
popa
or
cmp
jb
mov
pop
push
sub
mov
mov
clc
pop
dec
inc
and
mov
adc
push
xor
mov
aaa
out
mov
cmpl
adc
and
call
ja
mov
icebp
imul
push
arpl
pop
mov
push
push
mov
inc
fldt
movsb
add
mov
mov
xlat
dec
fistps
imul
cmovp
and
addr16
daa
xchg
jmp
xchg
mov
dec
lods
cmp
cmp
jl
fldl
mov
popf
test
pop
push
popf
pop
lock
lock
imul
lea
cmp
dec
sar
sar
inc
orb
add
ret
std
and
dec
pushf
popf
cmp
mov
sbb
adc
push
jno
mov
clc
cmc
fldl
orl
roll
rcl
loope
xor
inc
aas
lods
lcall
cwtl
out
pop
or
aam
pop
push
mov
adc
mov
test
xchg
dec
and
mov
or
jg
mov
cli
lods
cmp
and
add
loope
mov
int3
jo
or
mov
jmp
je
add
mov
lods
in
fcoml
inc
xchg
inc
icebp
shll
cs
xor
push
data16
jo
push
das
jecxz
dec
jae
mov
push
cmp
mov
aad
cmp
loopne
rcrl
scas
add
adc
enter
in
lock
sar
mov
loope
fs
imul
cmp
push
fistl
pop
test
pop
add
lock
cli
mov
clc
add
push
cmpsb
xchg
lods
in
daa
pusha
in
inc
popa
ja
xor
pop
mov
insl
jl
scas
dec
insb
inc
fs
fcomip
test
xchg
andb
push
repnz
pop
iret
mov
inc
popa
sub
mov
push
in
mov
subl
adc
addb
lret
loop
mov
fnstsw
es
sbb
pop
lea
inc
jne
jne
mov
sub
mov
popf
cs
pop
xchg
call
std
pusha
iret
rcr
nop
jmp
adcl
jmp
mov
repz
add
mov
fwait
xchg
mov
adc
push
pop
scas
test
dec
pop
xlat
ror
xchg
jecxz
lods
sub
sub
int
jae
mov
and
adc
div
lods
roll
icebp
mov
adc
ja
in
loope
add
rcrl
inc
pushf
sub
outsl
pop
bnd
dec
and
aas
dec
fdivl
loope
cmp
mov
sbb
jmp
mov
cmp
mov
xor
mov
movsb
push
adc
pop
cmc
fisttps
push
insb
imul
xor
fstp
jp
jmp
out
xchg
add
cmp
or
aas
ss
jge
xchg
cmp
test
xor
pop
pop
pop
hlt
mov
push
sub
ret
xchg
mov
ficomps
sbb
cmp
xchg
mov
xchg
aam
adc
sti
sub
cs
mov
add
push
js
sbb
mov
push
mov
test
shlb
rcrb
inc
mov
adc
push
pop
mov
enter
clc
pusha
cmp
std
pop
inc
lock
lret
or
push
sbb
daa
xchg
dec
cli
adc
push
mov
test
imul
mov
push
sbb
jb
pop
roll
pop
push
ds
sub
mulb
test
es
mov
mov
adc
and
push
stc
push
cs
shrb
fildl
std
cmp
cs
cmp
fldt
sbb
and
and
jb
stos
jno
lds
push
out
cltd
jnp
dec
test
aas
xlat
stc
outsl
or
pop
xchg
sub
lods
mov
cmp
and
movsl
jae
test
and
aam
test
jmp
jae
adc
adc
add
jge
into
mov
mov
push
daa
and
xorb
xchg
fcoms
push
loopne
mov
das
stos
int
sub
leavew
push
ss
mov
cmp
ret
popf
arpl
fsubs
mov
jae
mov
adc
inc
jo
adc
xchg
mov
movsb
push
xlat
inc
decl
xchg
fbld
and
sahf
jmp
insl
jmp
test
insl
pushf
in
pushf
pop
push
xchg
cmp
inc
dec
and
push
mov
iret
repnz
jg
sub
push
mov
inc
mov
out
mov
inc
xor
in
ret
dec
mov
movsb
inc
cmpsl
je
dec
jmp
add
pop
clc
out
sbb
sub
pop
lds
jmp
cmpsb
xor
adc
repz
add
jmp
pop
dec
lcall
jns
rolb
inc
ret
mov
pop
addr16
mov
xchg
or
test
insl
adcb
pop
xchg
mov
add
flds
xor
scas
pop
ss
movsl
xchg
addr16
xchg
dec
enter
inc
and
repnz
call
sbb
xor
inc
cld
inc
js,pt
xchg
hlt
lods
cs
iret
sub
fucomi
cld
mov
mov
mov
rol
jecxz
test
dec
jle
sub
ret
subb
and
mov
cmp
dec
push
jle
cmp
add
push
aad
lods
or
in
jbe
adcb
lahf
fstl
jge
pusha
insb
aaa
push
jnp
js
in
into
cli
mov
xchg
shlb
js
lahf
lcall
or
fsubrl
sub
adc
inc
add
mov
daa
lahf
out
inc
lods
sub
xchg
gs
jp
xchg
fmuls
cwtl
sbb
mov
mov
xchg
lret
sub
xchg
add
repnz
mov
dec
dec
mov
mov
xor
add
xchg
in
shrl
xchg
imul
lods
inc
hlt
lea
cli
lds
cmp
cmpsl
lahf
sub
cld
mov
rclb
clc
add
sbb
subb
mov
lret
xchg
xlat
in
mov
pushf
mov
mov
cmp
mov
loop
or
mov
pop
lods
hlt
pop
ret
insl
cmc
dec
pop
lds
mov
fldcw
cmp
into
and
jb
push
mov
test
push
div
inc
jle
sahf
rcll
pop
push
dec
clc
pop
popf
cmp
testb
push
popa
xchg
mov
pusha
xchg
pop
imul
push
icebp
clc
push
jns
mov
sbb
mov
pop
adc
andb
and
pusha
aaa
lods
push
sahf
adc
dec
cmc
sbb
xor
add
dec
jecxz
int3
pop
and
mov
push
fstpt
cli
pop
outsb
orl
mov
bound
sbbb
xchg
adc
es
loope
mov
mov
pop
mov
adc
idivl
aaa
adc
mov
fldenv
add
loop
stc
ficompl
mov
jb
pop
adc
call
dec
je
add
mov
sub
pop
stos
sub
xor
xchg
pop
add
std
xor
push
mov
and
jae
sub
jno
orps
push
mov
push
cmp
and
leave
pop
int
repnz
sbb
movsb
jl
bound
push
inc
xchg
mov
sbb
imul
stc
ljmp
ret
andb
cltd
das
push
sub
dec
mov
cld
mov
lds
cmpsb
enter
pop
imul
jmp
push
cmpsl
jns
pop
mov
pop
inc
pop
xor
data16
lcall
mov
cmp
inc
pop
cmp
ja
fildl
test
adc
adc
ss
jge
lahf
repnz
stos
orl
push
lock
sbbl
push
jo
out
sub
ljmp
insb
pushl
fisubs
lock
cmp
in
xchg
lret
movsb
leave
mov
loop
and
mulb
pop
or
mov
fwait
icebp
add
in
fists
lods
in
int
mov
adc
into
mov
xor
inc
test
jge
sub
cmc
stc
jp
xorb
mul
mov
lret
mov
ficoms
dec
pop
mov
xor
out
gs
and
scas
pop
add
pop
bound
cli
and
xchg
popl
sahf
mov
pusha
mov
xchg
bound
pop
lret
dec
mov
fldcw
icebp
pop
lds
mov
push
xchg
xchg
lret
insl
add
mov
add
cld
sahf
push
shll
push
scas
add
cwtl
xchg
ror
dec
adc
jns
xchg
sbb
or
pop
insl
js
into
jnp
jg
xchg
inc
sub
addl
mov
cs
jo
push
inc
dec
mov
inc
xchg
pop
sub
dec
push
fstl
fidivs
lahf
pop
and
xor
push
sar
vunpckhpd
push
pop
xchg
sbb
sub
add
test
mov
xor
cli
in
inc
jne
mov
fcompl
cld
push
dec
jmp
jno
testb
inc
dec
pop
sub
add
sbb
mov
or
icebp
pop
mov
nop
in
ds
jne
push
sub
mov
cli
ret
lret
fisttps
int
jno
movsl
add
ror
adcb
mov
ja
in
xchg
xchg
jg
or
addr16
loope
sbb
cmc
jbe
dec
pusha
push
xchg
lock
mov
xchg
dec
inc
dec
pop
push
jnp
je
out
adc
push
jle
movsl
test
lods
push
sub
inc
pop
jno
or
pop
sub
movsl
pop
cmpsb
and
xlat
inc
sub
aas
sub
push
loopne
arpl
rcrb
jp
imul
mov
out
nop
mov
insl
mov
push
mov
pop
cmp
out
lds
dec
pop
ljmp
shrb
scas
aad
movl
push
aad
mov
push
shlb
jp
and
jno
scas
xchg
sti
inc
or
dec
aas
rorb
mov
xchg
enter
stos
sub
adc
std
pop
in
inc
mov
lods
jnp
fcomi
leave
aaa
cmc
mov
and
and
stos
decl
push
fwait
pop
in
lods
xchg
sbb
jecxz
mov
mov
pop
add
or
mov
jb
fisubrs
or
insl
sbb
fwait
pop
das
aad
test
adc
incb
pop
jns
push
cwtl
mov
add
jnp
pop
add
jne
jns
push
sub
or
fcmovne
cmpsl
xor
repnz
add
ret
jno
mov
jecxz
push
jbe
inc
outsb
xor
stc
popf
fistpll
xchg
add
sbb
xchg
js
aam
pop
xchg
mov
cmp
and
lock
cs
adc
xchg
mov
or
xchg
pop
pushf
fsubrs
mov
inc
andb
mov
mov
mov
ds
lcall
mov
and
jne
sbb
popf
jne
push
xor
stos
mov
fstp
and
shl
aas
mov
jb
dec
jnp
cmp
xchg
add
inc
stos
cmc
pop
ret
mov
loop
pusha
in
arpl
pop
scas
mov
movsb
dec
je
jo
mov
insl
pop
cmp
repnz
mov
push
lcall
and
aam
dec
ret
push
imul
xchg
repnz
leave
ret
loopne
data16
test
jmp
fldcw
test
stos
test
jmp
mov
cli
push
cs
xchg
push
or
xchg
loope
cmc
jae
arpl
sarl
scas
fidivrs
hlt
fmul
pop
shrb
pop
inc
sbb
mov
scas
stos
nop
daa
adc
lret
fwait
jno
add
in
cmp
aaa
or
add
push
aad
leave
push
mov
xor
sub
dec
push
rcrl
pop
in
and
fs
or
and
sub
shll
lcall
and
sbb
cmp
push
ja
sbb
sub
pop
int3
shr
fsubs
ficoml
push
loope
mov
add
mov
stos
sbb
cli
filds
out
cs
mov
inc
xchg
lods
push
dec
test
mov
mov
push
stc
faddl
push
cmp
sbb
xor
lock
call
inc
mov
push
xchg
insb
cmp
sbb
xchg
mov
test
shl
int
add
dec
andb
xor
cld
mov
inc
pop
mov
push
test
movsb
jo
aad
andl
mov
or
in
cmpsl
pop
aam
mov
mov
push
mov
pop
or
fcomp
insl
add
inc
into
xlat
xlat
lret
nop
jg
push
pusha
mov
dec
fstpl
ret
mov
xlat
push
je
leave
in
dec
xchg
xchg
sbb
out
in
adc
xchg
mov
xchg
les
mov
les
jg
neg
sub
and
nop
outsl
cmp
imul
cmp
pop
push
pop
xchg
inc
sbb
ljmp
popf
movsl
mov
mov
sbb
adc
pop
lds
into
push
jo
xor
push
pop
mov
mov
aaa
mov
and
mov
xor
push
xchg
dec
pop
push
sub
int
mov
xor
jne
faddl
cmpsb
mov
in
popa
jmp
xor
pop
aad
arpl
loop
cmpsl
aaa
adc
rclb
shrb
clc
ret
into
pushf
push
adc
loope
imul
xchg
ffree
pusha
movsl
loop
loop
loop
cmpsb
inc
cli
rcl
fwait
cwtl
push
add
cmp
adc
sbb
xorl
aas
pusha
mov
pusha
jbe
adc
insl
repz
ds
mov
and
lret
jge
addr16
aad
sub
pop
in
sub
outsb
mov
cmpsb
cmpsb
sub
fndisi(8087
stc
sub
dec
dec
add
mov
push
mov
cmp
test
sbb
adc
pop
jne
ds
dec
pop
dec
mov
lods
in
movsl
push
pop
or
stc
adc
shrl
jmp
cmc
fisttps
sar
add
movb
out
mov
filds
cmpsb
push
xor
sahf
adc
aad
or
das
cmp
dec
cmp
mov
pop
sub
int3
loopne
ret
jmp
lcall
xchg
fdivrl
cli
loope
imul
xchg
adc
pop
push
sbb
pop
mov
add
jle
pop
adc
sbb
movsb
cmp
xorb
or
dec
sub
mov
lods
test
add
dec
jp
mov
fdivrs
xor
fidivrl
jo
or
cld
jb
push
push
push
push
lock
and
xchg
frstor
roll
adc
dec
dec
jo
sub
fildll
bound
pushf
mov
jns
lret
pop
mov
push
inc
xor
rdmsr
imul
scas
mov
jle
popa
jmp
lret
jl
jl
movsb
in
insl
cld
xchg
cmpsb
fdecstp
lcall
fs
call
testb
test
mov
cwtl
shll
pop
dec
mov
ds
das
dec
mov
out
loop
sbb
lods
fidivs
push
jp
daa
aaa
pop
mov
or
cmpsb
stos
outsb
negl
roll
insl
in
dec
sub
pop
lret
nop
popf
pushf
mov
lret
dec
lods
out
roll
xchg
test
popf
enter
addr16
xchg
lds
hlt
mov
fdivr
xchg
repnz
mov
and
lods
sub
mov
out
sti
inc
pop
push
sub
xor
jb
int
sbb
mov
sub
ss
cltd
test
test
xchg
sarb
mov
daa
jmp
aas
mov
mov
fists
subl
dec
decl
inc
jo
sub
aaa
jbe
jnp
test
xor
test
xchg
sbb
cmp
mov
es
das
push
and
jl
stos
xchg
cmpb
mov
scas
ret
ja
insb
inc
cmc
push
jmp
icebp
pop
dec
andb
repz
testb
sub
lock
lds
in
pop
add
fists
fnsave
or
or
fwait
adcl
xchg
rcr
or
fmul
pop
lds
jnp
push
push
outsl
call
or
ja
pop
insb
enter
or
push
int3
inc
xchg
adc
shlb
cmpsl
mov
pop
xchg
jle
pushf
mov
stos
push
push
dec
stos
stos
cs
imul
xor
and
mov
xchg
aas
addl
mov
push
es
add
out
rclb
sub
les
push
mov
aas
test
ljmp
cmpsl
sub
out
int
jbe
mov
cmc
push
stos
mov
repz
jmp
ds
sub
stc
pop
xchg
mov
ja
inc
xor
inc
and
and
fimuls
int
mov
nop
hlt
or
mov
leave
es
pushl
add
mov
add
gs
ficomps
and
dec
inc
cmpsb
push
or
arpl
mov
add
cwtl
fistl
add
or
imul
jg
cmpsb
jmp
loope
mov
out
jl
fs
xor
outsb
lcall
mov
xor
pop
lret
pop
add
inc
es
cmpsl
fildll
cld
xor
scas
lret
stos
cmp
out
xchg
xor
push
sbb
lods
and
pushf
jl
icebp
test
cltd
cmp
repnz
cmc
push
ror
xchg
nop
repz
push
hlt
out
jne
aam
xchg
dec
sub
std
mov
sub
aas
int
pusha
mov
jl
loope
push
shrb
cmpsl
pop
pop
pop
mov
popf
sti
out
rcl
and
mov
jle
add
pop
and
mov
or
cmp
push
sti
stc
fnstenv
sub
and
std
adc
lret
iret
mov
test
pusha
cwtl
cltd
jno
add
or
or
sti
sbb
arpl
xor
adc
pop
sub
mov
dec
fbstp
pop
or
mov
das
aaa
out
xor
pop
mov
sbb
scas
ret
aas
sti
lods
gs
sbb
xchg
iret
fstps
or
rcll
fwait
out
or
or
push
cmp
std
cld
iret
cmp
imul
test
inc
pop
das
pusha
add
insb
sti
or
fistpl
mov
shrb
mov
adc
adcb
jne
out
mov
std
popa
mov
and
lret
dec
jp
out
jnp
cmp
aaa
adc
mov
or
push
or
push
jge
test
fbld
jp
scas
pop
pop
pop
adc
out
xor
sti
bound
xor
sbb
lret
jecxz
negl
pop
lret
test
outsl
push
jmp
loope
andb
mov
xchg
and
cmp
jo
inc
add
int
mov
adc
inc
xchg
xor
cmpsl
cmp
lcall
cwtl
test
or
neg
dec
jns
icebp
mov
repnz
imul
adc
daa
sbb
in
xor
cmp
jl
xchg
xchg
mov
frstor
or
hlt
mov
fwait
cwtl
lds
lcall
and
je
mov
inc
jge
sub
outsl
sub
data16
jg
and
jb
mov
test
hlt
mov
xchg
pop
cmpsl
sarb
xchg
jno
sub
cmpsl
jmp
xor
sbb
cs
cltd
addr16
movsb
mov
outsb
pop
sarl
xor
pop
pop
mov
clc
cltd
loopne
jp
sbb
fwait
xchg
pop
sbb
add
fldenv
aaa
mov
lcall
shlb
dec
cmp
add
psadbw
fsubrs
lods
js
dec
push
sub
xchg
add
push
out
mov
xor
clc
es
jp
test
sbb
pop
mov
push
jg
sbb
add
pop
les
add
adc
adc
mov
adc
adc
mov
icebp
jae
and
sahf
movsl
andb
repnz
lock
imulb
mov
dec
ror
cmpsb
cmp
aas
sarb
test
stos
xor
out
loopne
adc
lods
or
in
shrl
sub
jo
inc
or
dec
jae
test
loop
sub
out
into
jb
jb
sub
xchg
jl
xchg
add
adc
mov
int
ret
xor
adc
les
push
mov
sub
jns
mov
push
sti
cmp
int
mov
fnstcw
xchg
and
lock
cmp
sub
xchg
adc
mov
scas
lahf
cmp
jb
data16
pop
or
leave
push
idivl
imul
xor
add
mov
xchg
call
jp
pop
pop
and
dec
and
imul
mov
orb
enter
add
mov
mov
jo
les
sbb
add
mov
mov
add
popf
es
test
mov
jecxz
dec
push
fistpll
das
jge
jns
je
pop
aas
in
or
inc
jmp
leave
movsb
adc
push
add
outsb
out
xor
gs
inc
jb
pop
cwtl
xchg
and
fidivs
pop
jae
aad
jmp
mov
sahf
push
les
je
xor
adc
mov
ror
adc
sbb
or
aaa
in
add
fsubl
and
ret
jns
xchg
sub
cmc
jmp
xorl
loope
pusha
mov
add
adc
fistps
or
into
fprem
cmpsl
lock
int3
mov
gs
and
mov
sbb
clc
int
add
and
stos
cmp
dec
jg
rcll
push
adc
fisubrl
and
rcrb
arpl
int3
and
test
or
pop
fisttpll
cltd
addb
jb
adc
or
push
pop
fildl
mov
xchg
jmp
into
nop
adc
in
mov
fnstcw
sahf
mov
push
lods
les
push
push
mov
cmp
jle
insl
lds
lods
lea
pushf
sbb
popf
pop
out
dec
jecxz
xorb
jno
mov
fcoms
pop
rcll
pop
adc
loope
inc
pop
insl
ljmp
clc
int
into
jbe
imull
sub
inc
fcmovnbe
fs
loope
sbb
scas
or
fwait
mov
rcll
fadds
movsb
test
shr
nop
loopne
js
add
xor
mov
mov
mov
sahf
pop
iret
imulb
popa
cli
inc
test
adc
jge
out
jno
movsl
pop
add
dec
jo
pop
fldcw
test
and
repnz
mov
mov
btc
outsb
addl
pop
push
sarb
stc
das
mov
sahf
sub
iret
sar
divl
stos
rcrl
push
in
sub
mov
cwtl
inc
mov
push
sar
lcall
lods
mov
test
push
mov
aad
and
xor
pushf
sbb
loope
mov
or
mov
pusha
xchg
pop
in
or
push
rorb
mov
pop
cmp
push
dec
outsb
cltd
ja
cmc
push
call
in
push
enter
and
cmp
ret
and
cmpsl
push
mov
roll
rcrb
pop
sahf
insl
imul
push
jae
jne
decl
inc
loopne
mov
cmp
push
rcl
scas
sbb
pop
mov
xlat
outsb
jns
push
cmp
icebp
xor
push
ss
inc
daa
leave
xor
aaa
roll
fs
push
lods
lahf
push
clc
fs
adc
pop
stos
and
outsl
scas
and
pushf
mov
aas
mul
mov
xchg
test
sbb
xor
mov
in
xor
jnp
sbb
jge
hlt
pop
and
dec
push
sbb
jns
jge
sub
fistps
mov
out
push
jne
and
push
sti
adc
lcall
add
sub
mov
and
jns
cmp
insb
aam
adc
mov
jns,pt
std
je
aas
popf
ret
push
sub
pop
repnz
and
in
outsb
sub
rol
jge
mov
fidivs
add
mov
xor
xor
sar
bswap
cmpsl
or
lods
ss
je
and
jge
in
shll
popa
push
stos
xchg
jnp
xor
or
leave
xchg
xor
std
stc
lahf
add
jg
lcall
dec
push
fcoml
mov
aam
mov
jno
shrb
pop
xchg
movsb
out
mov
mov
mov
jp
ret
out
fs
stos
or
enter
and
pop
jns
lea
loop
cmp
mull
loop
cmpsl
loope
inc
fwait
adc
sbb
outsl
les
inc
push
or
outsl
xor
cmpsb
mov
loop
call
aas
inc
add
add
jle
adc
lods
hlt
push
cli
aad
int3
sbb
mov
mov
clc
pop
int
in
jp
mov
mov
dec
lods
jb
test
mov
je
jle
mov
cltd
xchg
ja
lds
stc
mov
fimuls
ljmp
dec
aas
xchg
ret
and
aam
jl
xor
rclb
push
jne,pt
lds
data16
lret
dec
push
imul
ret
sub
sbb
scas
fdecstp
sbb
subl
add
movsb
cltd
pushf
cld
aad
inc
xlat
movsl
cs
gs
add
push
jb
mov
aaa
sub
cmp
shll
rolb
jge
fimull
pushf
mov
mov
addl
insb
ss
sbb
call
push
mov
outsb
dec
popa
push
mov
in
sub
das
mov
sub
inc
xchg
push
jae
adc
sub
or
inc
or
adc
stos
mov
jns
and
jnp
or
into
cmp
fmulp
fidivrl
xor
loopne
test
mov
mov
and
insl
cmc
jne
inc
cmp
push
pop
or
push
add
mov
dec
dec
sbb
cmpsb
imul
mov
flds
scas
loopne
and
lock
sub
xchg
push
mov
hlt
cmp
hlt
xchg
push
jmp
test
jp
pushf
push
mov
jne
mov
shrb
lods
jbe
lret
dec
jbe
in
jno
sub
inc
nop
dec
enter
stos
stos
add
clc
pusha
mov
dec
pushf
push
pop
in
push
jle
aad
jmp
mov
imulb
in
sbb
aas
cld
fsts
ficomps
jb
pop
xchg
lret
dec
les
pop
mov
andl
add
sub
add
sub
mov
or
cmp
mov
pusha
add
xchg
andb
or
sbb
fldcw
xor
cmp
rorl
insb
mov
push
and
pop
jb
pop
adc
sbb
out
inc
scas
lock
add
adc
aam
test
cltd
jmp
mov
push
shl
add
mov
out
std
clc
inc
icebp
imul
sub
push
daa
aam
push
punpcklwd
es
dec
stos
sub
jl
jno
dec
notl
and
enter
addr16
add
ljmp
lods
and
insb
push
test
push
inc
adc
and
jnp
sbbl
nop
adc
cmp
mov
outsl
stos
jg
pusha
mov
xor
sbb
test
inc
enter
ret
adc
xor
gs
lods
outsb
imul
insl
cs
push
mov
scas
cmp
push
jo
lea
in
fwait
imul
lods
hlt
mov
cltd
lret
pop
push
std
push
ja
xlat
call
jns
push
sub
cmpb
mov
fwait
cmc
cmp
and
ficoml
ret
adc
nop
movsl
stos
xchg
mov
adc
cwtl
push
or
sbb
inc
push
dec
andl
outsl
cmpsl
fmuls
sub
mov
popa
dec
lds
and
pop
ljmp
inc
sahf
dec
mov
xchg
jb
in
loopne
mov
insb
xchg
inc
popf
pop
rol
push
mov
roll
inc
js
adc
or
ja
cwtl
insl
rcrb
loope
push
xchg
pop
dec
xchg
pop
push
sub
shrl
push
cld
stos
mov
mov
cli
cmp
outsl
push
xchg
gs
inc
cmpsl
add
test
aad
mov
dec
addr16
ret
je
dec
xchg
or
dec
xchg
cwtl
fisttpll
or
das
add
fwait
mov
inc
mov
sbb
xchg
mov
movsl
inc
mov
pop
jge
outsl
pop
add
sti
fadds
in
push
popf
cmc
iret
adc
mov
lea
or
dec
sub
dec
mov
pop
pusha
and
aad
jg
sub
dec
cmp
out
loop
add
testl
dec
dec
lahf
cmp
sub
cmp
mov
fcomps
loope
dec
or
pushf
rcrb
shr
int
mov
cld
mov
movl
dec
jns
sub
push
sub
cmp
and
pop
add
imulb
cmpsb
pop
inc
jle
leave
sub
cmp
loopne
bound
nop
leave
pop
push
scas
aaa
scas
insb
fdivrs
lcall
xchg
xchg
mov
xchg
jbe
adc
push
pop
fidivrs
scas
adc
xlat
push
aas
jmp
daa
lods
adc
inc
lret
pushf
insb
sbb
sub
shrb
mov
pop
fwait
sbb
loopne
imul
stos
ja
stc
cmpsl
push
and
mov
into
int
xor
sbb
adc
sbb
aas
out
lahf
xchg
dec
int
aam
mov
and
out
jb
mov
jb
xor
jns
dec
adc
out
enter
imul
pop
movsb
out
push
or
bound
or
mov
pop
das
pop
or
xor
jl
movsl
gs
js
push
dec
cmp
or
fnsetpm(287
hlt
fsubrp
lods
xor
pop
stc
push
call
repz
test
sbb
int
in
clc
pop
lret
xchg
rcll
repz
lea
sbb
jg
in
cs
sbb
imulb
sub
insb
stos
mov
mov
adc
cmp
test
cld
add
in
hlt
sub
xchg
dec
cmpsl
out
test
cmpsb
inc
adc
popf
sub
inc
lds
fldt
sti
sti
cmc
arpl
aas
fwait
daa
inc
inc
inc
cld
mov
repz
jae
shr
sbb
lahf
das
mov
mov
fsts
sti
lock
or
add
pop
addr16
repz
stos
addr16
push
cmpsb
orb
xor
xchg
mov
mov
ds
jne
les
mov
rorl
std
gs
cmc
aam
mov
xlat
xchg
sarb
pop
int3
sbb
fidivrs
mov
jbe
jle
mov
jg
in
dec
xchg
xchg
mov
pop
fcoml
xor
cld
nop
leave
and
pop
cwtl
push
mov
call
leave
aaa
mov
xor
mov
inc
out
das
imul
push
cmp
insl
mov
mov
repz
inc
js
js
mov
xor
adc
fldlg2
mov
mov
lea
xor
xor
xchg
arpl
fadd
mov
rcrl
add
or
jbe
not
cli
icebp
lds
inc
mov
dec
mov
xor
jne
fstps
add
or
mov
mov
mov
imul
mov
ret
sbb
insl
or
dec
popa
out
in
pop
cltd
sbb
imul
push
mov
loop
ror
out
adc
out
aas
insb
lods
mov
sub
jge
leave
cmc
sbb
fbstp
dec
or
cmp
loop
icebp
xchg
push
cwtl
fstps
testl
aad
into
fadds
jg
je
sbbl
adc
pop
and
dec
sbb
mov
movsb
lahf
push
andb
lret
inc
in
aaa
xchg
repz
xchg
into
push
pop
xchg
arpl
inc
imul
or
lock
lea
sahf
xor
daa
jnp
gs
push
js
mov
pmuludq
imul
push
cmp
fwait
push
daa
xor
inc
xchg
pop
repz
xor
rcrl
push
scas
lds
sti
lock
aad
aam
pushf
out
adc
cld
pop
push
out
xchg
dec
jecxz
mov
lds
lods
out
inc
xchg
adc
cmpsl
lock
shll
decl
push
insl
and
andl
into
adc
mov
add
std
cli
push
fs
or
cmp
add
add
dec
dec
jbe
shlb
mov
sub
int3
test
lcall
test
pushf
mov
adc
jno
fistps
movsb
push
jbe
repnz
idivb
data16
inc
popf
and
es
mov
cwtl
ret
sbb
or
inc
popa
mov
mov
pop
mov
test
outsb
and
xchg
push
inc
cmpsl
mov
iret
pause
pop
sub
shlb
outsb
or
pop
adc
or
mov
adc
lret
push
out
push
sub
nop
cmp
fnstsw
sbb
lcall
inc
push
ss
or
mov
aad
or
sahf
mov
and
and
xor
mov
cmp
lods
aad
mov
incl
push
jns
xchg
enter
mov
ds
testb
push
call
push
aaa
mov
lds
xor
mov
push
mov
insb
enter
in
xor
call
cmp
gs
mov
cmpxchg
pop
and
es
leave
mov
sbb
sbb
mov
test
sub
aad
in
es
rcll
and
mov
xchg
sbb
cmp
push
sub
xor
das
add
lods
outsl
mov
adc
cltd
mov
lret
jecxz
sub
enter
cmpsl
sub
add
mov
icebp
cltd
add
xlat
test
repnz
lret
sbb
jne
jmp
sub
mov
cmc
push
push
jg
ja
sbb
pop
cmp
jo
jb
imul
jbe
sub
aaa
clc
mov
inc
rcll
xor
sti
into
and
push
xor
fadd
xchg
cs
and
in
movsb
push
out
mov
aaa
sbb
popf
and
push
or
test
xchg
mov
cs
inc
leave
sub
sbb
or
push
jno
aam
mov
gs
aad
lret
add
push
icebp
lahf
dec
dec
or
fs
out
shll
rorl
mov
xchg
jmp
sub
mov
xchg
cli
popf
mov
test
sbb
loop
insl
pop
adc
adc
in
cmpsb
scas
xchg
push
push
fisttps
dec
fmul
stos
pusha
jge
add
movsb
pop
test
lock
popa
mov
xor
stos
pop
sbb
and
js
addr16
add
call
jb
cmp
inc
lret
imul
lock
in
inc
dec
mov
mov
push
inc
scas
jno
outsb
pop
dec
or
xchg
adc
cmp
sub
cmp
lret
push
xchg
cmpsl
mov
cmp
je
jmp
mov
pop
adc
repnz
cld
add
jge
inc
jp
in
mov
scas
scas
mov
push
pop
pusha
mov
je
inc
sahf
rcll
lahf
jae
or
sbb
push
pop
enter
in
pop
sbb
mov
cmp
outsl
sahf
dec
fildl
jns
mov
icebp
adc
lret
push
cmp
jne
loope
xor
jo
fcoms
xchg
sbb
mov
mov
call
push
test
inc
insb
adc
or
test
mov
push
mov
pop
daa
insb
call
pop
and
iret
incl
jle
into
jge
loope
cmc
sbb
adc
into
sub
enter
add
jbe
inc
xor
into
xor
xchg
subl
adc
mov
or
inc
mov
mov
mov
mov
mov
std
out
lfs
push
add
jnp
cmp
sbb
lds
pop
mov
xchg
mov
dec
movsl
jmp
cmc
mov
adc
cmpsb
pop
icebp
or
ds
pop
ljmp
das
cmpsl
rol
dec
test
inc
push
fdivl
jne
xchg
cli
or
clc
mov
data16
out
xor
imul
mov
dec
sub
xchg
dec
add
call
xor
push
into
imul
inc
lret
or
ds
rorl
dec
jnp
xchg
fistpl
mov
jl
jg
push
add
pop
and
addl
pop
sub
push
or
fadd
inc
xor
rclb
aad
mov
arpl
inc
das
jmp
mov
xchg
mov
imul
mov
fildll
adc
xor
adc
and
xor
pop
outsl
pandn
icebp
std
dec
sahf
mov
push
sub
jno
inc
iret
mov
mov
arpl
mov
mov
push
mov
mov
mov
push
insl
mov
cmp
mov
inc
cmp
sub
fisttpl
aas
push
mov
jl
insl
push
shlb
les
mov
aad
cwtl
int
roll
xchg
dec
adc
xchg
cmp
imul
sub
cltd
mov
pop
cmp
dec
mov
fucomi
lret
test
mov
insl
jno
xor
inc
inc
scas
movsl
sub
sbb
push
dec
push
jge
jns
mov
rolb
pusha
push
push
jns
mov
loope
mov
jne
sbb
sbb
xor
mov
mov
loopne
nop
pop
dec
pop
and
jle
ja
sbb
lret
add
adc
pop
mov
mov
sti
movsl
jp
jg
cwtl
pop
shlb
insl
stos
xor
jbe
addr16
rolb
sbb
push
lret
bound
pop
jmp
sti
or
sbb
imul
push
dec
pop
daa
or
mulb
ds
mov
cmp
ret
xchg
sub
pushf
bound
push
out
bnd
jno
mov
ja
out
int
cs
mov
xlat
bsf
push
sub
lret
jge
das
jne
push
cs
out
inc
sbb
ret
jp
cmp
mov
jge
xchg
inc
jbe
imul
insb
jno
and
repnz
inc
enter
ret
es
add
xlat
lea
imul
pop
jne
lcall
xchg
or
or
adc
and
xchg
cmp
in
xchg
or
and
test
scas
insb
call
movsb
dec
clc
fldenv
sub
call
xchg
insl
std
dec
xor
sub
orb
jmp
adc
notb
aam
cmc
cld
arpl
test
xor
xor
ds
leave
lahf
sub
pushf
mov
cld
jmp
push
insb
imul
hlt
mov
jp
dec
cmp
nop
lds
pusha
adc
rcrb
and
arpl
ficompl
fsubr
mulb
imul
push
push
scas
and
cmp
outsl
ror
out
sbb
add
mov
mov
testl
addr16
jbe
lea
add
rorb
mov
push
mov
and
mov
rcrl
jg
dec
xchg
lret
mov
rclb
cmp
lcall
sbb
adc
ljmp
js
cmpsl
decl
xor
push
and
add
stos
jge
movsb
add
bound
adc
adc
jo
mov
into
push
adc
or
or
jge
lcall
mul
xor
cmpsl
sub
fcompl
dec
les
lar
ror
push
mov
mov
add
lea
test
outsb
test
mov
dec
mov
mov
sahf
and
cmp
cmp
fidivrl
jnp
iret
cmp
insl
or
inc
in
mov
pop
mov
or
mov
add
lea
daa
lods
orl
or
testb
sub
stos
or
push
inc
jo
pushl
sbbl
mov
in
xor
in
sbb
stos
insl
xchg
jns
in
mov
jno
adc
sbb
mov
out
or
add
mov
mov
lret
push
out
jmp
sub
push
pop
jmp
sbb
ret
jle
mov
add
sbb
mov
inc
outsb
icebp
hlt
xchg
hlt
push
jo
cwtl
xchg
ds
icebp
dec
inc
shrb
in
jno
sbb
ja
xchg
mov
jle
and
sbb
into
jmp
mov
rorb
or
dec
pop
push
je
test
lret
push
movsl
clc
insb
add
mov
popf
cltd
cmp
lea
loop
loop
mov
scas
loope
lret
cmp
test
and
adc
jl
sarb
ljmp
cmp
leave
xchg
fisubs
xorb
and
mov
push
jge
rorl
test
mov
js
rclb
inc
stc
xor
mov
aaa
mov
dec
out
jns
aaa
dec
mov
mov
icebp
dec
inc
fldt
cmp
leave
dec
shrd
sahf
and
shlb
jbe
xchg
xor
sub
in
xor
movsb
cli
addr16
jp
sub
cmp
pop
fwait
sub
mov
xchg
mov
mov
imul
pop
xor
jge
shlb
mov
or
incl
inc
pop
das
mov
jnp
repz
mov
push
stc
int
adc
mov
push
mov
sbb
add
inc
push
mov
lods
add
xchg
loopne
pop
movsl
and
lret
push
push
add
jmp
in
cltd
out
loop
das
movsl
add
adc
cld
xorl
inc
dec
and
cmpsb
push
jno
ds
push
dec
cwtl
sub
or
adc
rcrb
lock
aad
addr16
scas
fdivl
aas
je
push
loopne
pop
bswap
cmp
call
hlt
leave
lret
outsb
jae
or
mov
mov
xchg
out
cmp
or
ds
mov
mov
daa
pop
insb
in
dec
push
mov
clc
pop
test
mov
pop
mov
test
adc
hlt
notl
ret
or
int
push
dec
fadd
mov
hlt
addw
fisubrs
xor
into
lret
lcall
jl
mov
mov
bound
fsts
mov
xor
mov
enter
and
inc
mov
addr16
add
lods
add
jge
cmpsb
dec
cmp
leave
psubq
mov
test
out
mov
add
push
addr16
sub
leave
scas
adc
push
mov
xor
or
mov
call
or
lea
loope
testl
or
push
mov
xor
dec
lcall
cmc
push
push
int
loop
fninit
adc
cmp
push
or
into
test
xchg
dec
icebp
adc
insb
xchg
fsubl
inc
stc
fucomip
mov
jno
jbe
or
in
push
incl
xchg
push
out
stos
aam
dec
mov
ljmp
stos
inc
pop
fcomi
xchg
mov
fbld
jle
push
shlb
psrlw
mov
mov
mov
push
rorb
les
notb
dec
or
add
or
jmp
es
inc
test
leave
bound
ljmp
mov
insb
aam
add
lods
adc
outsl
lea
mov
xchg
les
cld
and
fldt
cmp
dec
insb
das
fisubl
fdivs
cmp
jno
test
push
xchg
mov
add
aaa
inc
cwtl
jge
push
jae
mov
lcall
sbb
std
popf
hlt
pop
jo
lods
js
fwait
xchg
movntps
imul
nop
lods
mov
sbb
pop
jg
sbb
les
xorl
je
add
fdiv
mov
lret
inc
test
ss
push
test
or
jp
push
sbb
mov
inc
adc
pop
lods
jne
jl
fldt
jo
mov
mov
add
jo
ret
push
sarl
dec
lea
xor
sbb
inc
pop
in
pushf
mov
mov
pop
pusha
push
or
or
or
test
inc
out
sub
jo
lahf
cmp
clc
sub
test
dec
cmp
dec
sahf
bound
jp
lods
push
sub
pop
xchg
cli
mov
lret
mov
aaa
and
mov
frndint
dec
loope
ja
leave
iret
loopne
lea
ret
xchg
daa
push
jg
fs
divl
cmp
jp
cmp
test
inc
sub
sub
mov
jmp
das
mov
jne
testl
sub
xor
push
xchg
add
inc
andb
test
mov
add
ja
loope
es
or
push
sub
inc
int3
testb
cmc
and
stos
pop
int
jmp
push
mov
sbb
pusha
mov
sub
aam
jno
dec
mov
bnd
dec
and
inc
mov
inc
shlb
ret
in
or
stos
enter
adc
pop
call
aaa
push
out
push
inc
mov
punpckhbw
mov
xor
sub
dec
add
sub
fcomip
sbb
pop
test
or
int3
add
movsl
xchg
out
jno
lds
mov
xorb
test
pusha
sbb
sahf
arpl
push
push
and
cmpl
sub
mov
in
push
push
movsl
je
xchg
cmp
sbb
add
out
lcall
fistpll
jnp
mov
pop
fldt
xchg
and
mov
fistl
cmp
pop
les
jle
out
dec
and
stos
lahf
xor
sbb
push
or
out
adc
pop
sbb
outsb
nop
push
sbb
test
lds
add
push
push
repz
xchg
aaa
sbb
insl
inc
mov
jne
sbb
sbb
pusha
pop
repnz
imul
sbb
pop
sbb
xchg
cli
mov
hlt
push
xor
int3
out
inc
adc
fwait
lds
enter
stc
push
add
or
jo
shl
rorb
mov
test
punpckhbw
pop
push
fstpl
mov
rsqrtps
ret
and
pop
loop
and
andb
int
cltd
jmp
dec
ss
aam
lcall
sarl
or
minps
out
fs
addb
mov
push
sub
cmp
nop
cmpsl
pushf
int3
xchg
and
into
push
pop
xor
into
mov
sarl
adc
add
jns
mov
sti
and
cmp
sbb
pop
xchg
scas
movsb
push
shr
scas
jns
push
jp
lret
shlb
adc
lcall
shrl
test
test
jnp
mov
or
loopne
sub
pop
fisubrs
jecxz
loope
mov
and
arpl
leave
cmp
adc
ficoms
pushf
inc
jg
dec
cs
repz
pop
pop
imul
leave
push
or
sub
lret
add
push
popf
mov
jne
ret
es
ficomps
jle
push
and
or
push
ljmp
jge
dec
pop
insb
mov
push
imul
bound
scas
pop
dec
jns
jge
lods
scas
mov
enter
add
imul
test
push
movl
mov
mov
jno
loop
mov
push
cmp
fs
push
cltd
insl
and
pop
les
js
or
inc
adc
fmuls
jo
sub
incl
push
pop
enterw
fs
sbb
cmp
or
ret
roll
gs
mov
int
aas
lods
rep
sbb
xchg
loopne
mov
in
arpl
test
mov
mov
dec
fbld
imul
dec
inc
add
mov
mov
mov
push
push
movsl
jae
out
fisubl
loopne
push
or
sub
lar
adcb
call
mov
push
movsl
add
ljmp
or
mov
push
mov
iret
lods
aad
shll
sub
and
push
pop
ja
addl
popf
enter
jmp
outsl
mov
cli
ror
push
ljmp
pop
mov
mov
xorb
or
pop
movsb
push
lahf
xor
cli
mov
push
adc
and
outsb
out
xlat
jle
jmp
sbb
into
in
cwtl
xchg
gs
xor
dec
lods
or
mov
test
out
fdivrl
or
mov
fxch
mov
mov
call
out
pop
inc
xchg
sbb
imulb
cmp
shlb
fisubs
rcrb
jne
dec
pop
sub
mov
add
inc
push
test
and
pop
and
loopne
rolb
lea
ret
lods
stc
scas
out
pop
out
push
mov
mov
mov
ss
imul
clc
mov
ror
gs
xchg
hlt
inc
xchg
mov
movsl
stos
lahf
dec
mov
movsb
push
rcrl
aaa
int3
mov
pop
dec
and
lret
jge
lret
and
shlb
das
mov
add
cmp
push
repz
imul
add
cmpsl
xchg
pushf
or
insb
outsl
jge
push
or
push
dec
scas
in
mov
dec
sub
mov
inc
and
stos
push
cmpsl
add
loope
addr16
inc
pop
rclb
jno
frstor
dec
sbb
inc
mov
and
imul
jns
mov
push
xor
call
push
dec
data16
iret
xchg
pop
stos
xor
mov
test
jp
xchg
pusha
cs
test
inc
test
cwtl
repnz
in
sub
push
jb
sbb
fidivrl
xchg
dec
push
in
xchg
add
pushf
pushf
int3
aam
lcall
mov
clc
ss
pop
add
inc
adc
aam
filds
adc
cmp
xor
imul
test
fs
lret
xchg
mov
xor
mov
pop
sahf
mov
xchg
xchg
push
sub
nop
inc
xor
adc
rclb
add
lock
sti
mov
outsb
push
ss
mov
mov
fdivl
icebp
int3
fs
nop
xor
jl
jl
stos
imul
adc
insl
sub
cs
int
aad
lret
dec
loopne
stc
sub
mov
sbb
push
add
stc
mov
mov
rcl
outsl
idivb
lods
and
stos
cmp
enter
mov
in
jle
jne
sti
pushf
popa
repnz
nop
push
out
sbbl
cli
xlat
loope
mov
xor
sub
push
ljmp
lods
mov
ret
xchg
popa
out
push
mov
adc
clc
test
inc
fnstenv
stos
stc
push
imul
xchg
inc
add
fbld
mov
int3
dec
jp
fdiv
inc
add
sbb
stos
xchg
cmpsb
in
mov
mov
lock
mov
xchg
icebp
int3
mov
fnstcw
mov
lret
mov
push
cwtl
xlat
imull
pop
sbb
xchg
add
cmpsl
shr
scas
scas
xor
arpl
pop
dec
cwtl
lock
lods
fistpll
movsl
sub
mov
iret
ret
lahf
int
xchg
dec
leave
insb
fs
or
inc
jmp
sarb
fisttps
nop
popa
sub
imul
in
lea
leave
xchg
jmp
push
ljmp
and
insb
mov
lods
shll
pop
stos
jl
aad
sbb
test
lock
mov
bound
out
mov
mov
adc
pop
mov
in
sub
xchg
inc
or
xor
sub
in
mov
adc
les
cmpl
jo
fisubrs
or
push
mov
dec
push
in
or
ja
pop
sub
jg
jae
loopne
ds
dec
mov
mov
mov
sti
loope
scas
mov
xlat
into
ss
pop
addr16
nop
es
out
outsb
add
aad
lds
pop
cmpsl
aad
lods
xor
cli
push
jmp
xchg
shl
cmp
mov
sti
leave
xor
pop
jg
pushf
add
ja
or
add
sub
test
andb
int3
aas
dec
ret
ja
mov
leave
pop
jecxz
push
out
mov
push
push
add
shrb
ljmp
mov
cmc
inc
ret
adc
sub
xchg
and
imul
ljmp
lea
ret
aas
pop
leave
and
jl
dec
nop
imul
jmp
jns
fsubs
aad
adc
mov
add
inc
fdivl
pop
xchg
sub
and
sub
jge
jg
mov
adc
and
jb
cld
xor
jbe
xchg
pop
push
jp
lock
lret
into
jle
mov
sbb
leave
insb
popf
push
outsl
cwtl
in
int
call
pop
bound
inc
in
cmp
mov
cmp
fwait
sbb
dec
jns
or
stc
inc
sub
dec
test
xor
mov
test
pop
xor
in
xchg
sub
cmp
xor
add
add
cmc
rcll
sub
mov
call
neg
cli
push
pop
xor
or
and
or
adc
out
stos
inc
push
flds
add
ja
or
sub
mov
push
add
addb
push
pop
aas
andl
mov
test
cmpsb
pop
mov
xchg
popl
popa
xor
add
lret
cld
out
lods
iret
je
push
pop
sarl
mov
andb
rcll
push
and
add
repnz
push
jl
in
insb
insb
hlt
std
test
add
scas
outsb
xchg
in
enter
stc
pop
adc
sub
sbb
stos
mov
cmpsl
loopne
and
leave
mov
das
iret
mov
jno
cs
xchg
jno
xchg
xor
sbb
mov
adc
xor
dec
std
sub
mov
mov
adc
repnz
push
mov
dec
jb
addr16
insb
jmp
imul
and
adc
mov
adc
jno
jne
aas
mov
push
and
roll
push
add
loopne
mov
sub
push
call
inc
lea
inc
sbb
adc
xchg
xchg
adc
mov
cmpl
iret
sti
lock
xor
es
pop
mov
out
loope
xchg
into
sbb
pop
daa
pop
icebp
mov
nop
syscall
dec
clc
stos
ljmp
mov
sub
pop
push
ret
jae
pop
filds
into
pop
jle
sub
push
fwait
dec
xchg
movsl
push
std
pop
and
jo
lret
ret
add
cmpsl
lret
pop
sub
push
dec
es
out
out
pop
push
fstpt
out
insl
movsb
sbb
into
mov
xlat
jecxz
out
out
push
jp
test
jl
out
out
mov
pop
jnp
push
xorb
push
mov
jg
mov
mov
loopne
ret
mov
punpckhwd
push
movsl
aam
repz
jg
sbb
js
sbb
cmp
bound
mov
psraw
push
jp
mov
dec
in
data16
rol
and
outsl
inc
pushl
sbb
mov
lods
loopne
repz
sub
in
loopne
sahf
and
neg
stc
jle
mov
xor
jmp
push
dec
mov
cld
rorl
mov
push
popa
pop
jmp
sub
mov
test
mov
movsb
xor
or
jmp
xorps
out
call
aaa
mov
inc
out
and
jp
inc
push
dec
sbb
mov
popa
pop
sbb
sbb
pop
out
xchg
aaa
and
aam
nop
push
xchg
lock
and
push
push
fcoms
fisttpl
mov
ret
and
ficompl
mov
mov
fwait
cmp
decl
fcmove
mov
mov
test
fstpt
stos
movl
jb
pushf
in
jno
adc
mov
xor
sti
xor
adc
les
test
dec
jne
push
shrb
popa
movsb
inc
add
mov
scas
push
mov
add
cmpsb
jmp
xor
jae
jae
and
add
dec
push
std
mov
and
add
push
ds
mov
lds
mov
popa
push
push
jns
push
sbb
push
mov
add
pusha
inc
shrl
mov
cld
inc
test
int3
add
clc
mov
mov
dec
in
adc
push
xchg
clc
xchg
cli
add
sahf
popa
push
or
out
lds
ds
xchg
pop
rol
in
xchg
sbbl
add
enter
push
in
mov
jecxz
jbe
cli
fbstp
mov
mov
lret
test
and
mov
sub
mov
test
mov
pavgw
idivb
repnz
into
and
mov
stos
daa
mov
loopne
insl
das
rclb
ds
lods
dec
mov
push
daa
xchg
cmp
push
xchg
or
cmc
jbe
adc
dec
mov
mov
addl
jno
xor
adc
xchg
into
inc
notb
sub
ljmpw
jnp
xchg
cld
nop
ret
inc
inc
in
pop
xchg
jmp
push
cld
inc
mov
daa
and
in
xorl
push
pop
lods
scas
mov
xchg
inc
jg
add
out
addr16
inc
push
jl
imul
push
sahf
loope
ret
ret
mov
repnz
mov
pop
jb
movsb
ja
xlat
jecxz
clc
mov
cmp
mov
sub
mov
sub
cli
movsl
jb
and
ss
fdivp
addl
mov
and
and
mov
out
pop
push
push
jns
xchg
shr
push
cmove
sub
in
das
adc
enter
int3
outsb
sub
enter
in
adc
arpl
call
movsb
jmp
sbb
pop
rcrb
inc
leave
cltd
cmp
add
or
inc
mov
cmp
inc
jmp
cmp
cwtl
or
or
adc
or
int
movsl
sbb
pusha
in
test
cmpb
outsb
xor
or
add
sub
pop
mov
je
add
or
rorb
ss
out
hlt
mov
and
out
adc
jnp
cmc
push
cltd
pop
sbb
dec
out
out
push
jp
rclb
loop
jb
loop
mov
and
pop
mov
xor
jl
mov
mov
sub
mov
sub
loopne
xor
faddl
test
or
popf
mov
mov
xor
fs
movsb
mov
adc
insl
enter
mov
and
sub
dec
testb
adc
xor
scas
cmp
ret
pop
dec
jnp
popa
outsb
daa
and
rolb
shl
push
cmp
fldenv
sub
cmp
push
fiaddl
dec
mov
repz
inc
int3
mov
std
cmp
mov
sbb
sti
pop
aaa
subl
xlat
cmp
popf
cmp
xor
or
push
in
xchg
dec
pusha
dec
push
dec
adc
sbb
jle
cmpsb
lret
jg
mov
pop
mov
dec
repz
mov
out
mov
cmp
jg
mov
stos
xchg
negl
sahf
xor
mov
cmp
sub
pop
in
sub
jno
clc
or
fs
mov
or
lods
xchg
mov
dec
mov
mov
addb
xchg
push
scas
cmc
pop
pop
push
or
rcr
faddp
cwtl
mov
insl
test
push
mov
rorl
and
ds
add
xchg
adc
imul
jno
xchg
imull
push
testl
loopne
popl
mov
inc
gs
jmp
push
push
jns
mov
push
mov
or
or
push
repnz
or
and
mov
mov
fistps
push
pop
pusha
jle
push
lret
adc
pop
icebp
std
insl
jbe
shll
je
and
sbb
lret
fsubrs
jp
add
icebp
lahf
xor
shr
loope
push
pop
fdivrl
leave
lahf
daa
xor
lcall
ret
ss
scas
xor
push
or
xor
xor
mov
inc
and
xchg
ds
setp
cmp
adc
negb
mov
sub
icebp
imul
int3
dec
rolb
cmpsl
imul
or
in
jmp
mov
repnz
outsl
scas
pushf
mov
imul
inc
cmp
mov
imul
aaa
jmp
and
mov
test
add
sub
mov
xor
lret
jp
mov
cmp
lret
push
inc
dec
add
mov
sbb
jae
das
xor
mov
xchg
rcll
jmp
arpl
xor
fsubrl
and
mov
adc
cld
int3
mov
insl
aaa
sarl
push
movsl
inc
mov
push
fdivl
ljmp
dec
jmp
shlb
pop
cmp
sahf
mov
or
jmp
es
shll
popa
pop
sub
and
cltd
sub
and
imul
gs
dec
and
lcall
inc
iret
filds
mov
fistpll
inc
dec
loope
or
jp
adc
mov
cmp
fs
mov
ja
sub
pop
cwtl
arpl
nop
mov
loope
push
out
stc
pushf
sbb
cmp
sub
scas
dec
jne
sbb
das
lfs
lds
cli
and
dec
mov
decb
ljmp
xchg
pop
scas
xchg
lds
push
ljmp
pop
jne
dec
push
out
aas
xchg
mov
inc
pop
pushf
inc
pop
test
clc
lcall
cmp
jmp
insb
cmp
push
jns
add
push
mov
xorb
outsl
repz
addr16
xorl
xchg
xlat
insb
arpl
push
sbb
mov
notb
ja
xchg
cmpsb
lods
je
jp
je
add
jle
es
icebp
jecxz
ds
push
aam
shl
mov
test
add
xchg
lods
lds
pop
jg
inc
insl
movsb
pop
mov
loopne
lea
pop
dec
repz
xor
adcb
mov
sbb
add
in
and
xorps
add
shrl
xor
rolb
lods
cmpsl
cmpsl
pop
iret
std
mulb
sbb
and
jge
mov
out
mov
xlat
scas
popf
cli
xchg
push
adc
mov
imul
lea
leave
mov
push
mov
ss
shrl
mov
cmp
dec
pop
mov
xchg
mov
mov
sub
popf
lods
mov
push
xchg
mov
sbb
push
adc
add
inc
and
movsl
pushf
or
leave
pushf
add
test
sub
scas
dec
sbb
push
adc
ficoml
sbb
enter
ljmp
pop
jge
pop
insb
push
pop
dec
xlat
out
xchg
sbb
push
add
mov
and
jb
pop
out
jle
clc
jo
pusha
in
mov
mov
and
add
lods
pusha
mov
lea
adc
mov
dec
jmp
add
jg
mov
sub
sti
addr16
test
mov
mov
out
push
jae
adc
cmc
push
inc
jg
lock
mov
jne
inc
and
jp
dec
xor
push
and
jnp
xchg
arpl
not
mov
or
inc
sarb
cmc
leave
in
arpl
cmpsl
mov
popf
lock
pop
adc
jecxz
adc
lret
fsubl
test
ud2
push
pop
push
shrl
cmp
jne
sarl
adc
push
int
out
pop
lret
cs
or
xor
inc
addl
inc
fstl
jmp
sub
pop
fmuls
xchg
lds
into
fists
pop
popf
loopne
inc
into
dec
call
scas
test
jge
lret
mov
test
pop
fnstsw
jns
jne
push
add
xor
push
pop
stos
cmp
dec
lds
movsl
sbb
mov
mov
adc
mov
sub
ficoms
pop
std
fidivrl
mov
in
sbb
loope
xor
add
out
cli
cmpsb
pop
push
lods
cmp
rolb
nop
adc
inc
mov
rorl
xor
jl
and
jecxz
out
sub
test
enter
pop
adc
adc
xchg
dec
sarb
pop
lods
test
loopne
inc
test
pop
cmpsb
adc
iret
jnp
mov
fwait
cmp
and
push
outsl
cld
jns
das
mov
shlb
inc
pop
popa
fnstsw
push
lcall
pop
sub
push
cmp
xlat
push
ja
sbb
jecxz
adc
test
cwtl
movsb
adc
rcrb
xchg
mov
jae
int
pop
icebp
mov
sub
std
pop
test
cvtps2pd
popa
sub
int3
jge
add
shrb
popa
xor
out
jnp
je
sub
sbb
aaa
dec
pop
std
notl
mov
icebp
xchg
hlt
fsubrp
dec
jb
shlb
cmp
daa
iret
pop
cmc
sub
lods
imul
add
nop
in
jne
sub
addr16
push
sbb
sbb
test
adc
adc
jmp
popf
fnsave
pop
sub
fisubrl
es
and
negl
cli
bound
mov
push
mov
int
ret
stc
arpl
push
or
jnp
insl
dec
push
push
pop
jns
sub
add
xchg
jge
fs
xor
daa
pop
xchg
xchg
sbb
adc
xchg
pushl
lret
mov
enter
pusha
xchg
mov
xor
movsb
lret
pop
out
mov
outsb
addr16
and
dec
loopne
or
daa
jl,pn
andb
insl
pop
lahf
xchg
jb
or
pop
mov
pop
call
push
mov
xor
leave
push
mov
xchg
scas
vpsubusb
xor
and
lret
dec
fs
xor
hlt
hlt
mov
or
loop
sbb
hlt
inc
jl
push
lds
mov
jo
fabs
xchg
in
fnstcw
lahf
sti
adc
xchg
push
adc
dec
repnz
jecxz
movsl
sbb
or
and
out
xor
xor
inc
mov
shr
neg
dec
xlat
je
dec
mov
or
gs
ds
mov
dec
adc
loope
inc
fldt
pop
xor
cmpsb
enter
mov
int
jae
cmpsb
jmp
mov
fs
mov
out
fadds
data16
mov
mov
ds
inc
cmp
pop
leave
push
jle
loopne
adcl
mov
out
negb
jle
bound
mov
jo
jg
fdiv
cld
mov
dec
push
ljmp
shll
imul
adc
mov
jmp
jle
sbb
sub
cmp
xor
cmpsb
sbb
test
push
pop
jae
rolb
mov
lahf
stc
mov
scas
add
iret
adc
sbb
inc
pop
dec
xchg
sub
dec
mov
in
inc
int3
mov
fdivrs
inc
pop
jle
xor
jo
mov
mov
jnp
sub
cmp
mov
pusha
push
jb
xchg
or
add
inc
cmpsl
push
nop
lret
add
push
scas
cs
incl
dec
cmp
mov
jge
dec
cmp
mov
leave
push
push
sub
fcomip
inc
hlt
sbb
out
imul
inc
xchg
and
jg
xchg
rcr
jb
fmul
mov
cmpsb
push
sub
mov
mov
call
add
shl
fsub
xor
subb
scas
pop
mov
test
dec
hlt
ret
add
sub
imul
mov
stos
cmc
inc
jecxz
loopne
je
jbe
dec
mov
mov
ja
jo
loope
jge
and
lcall
add
dec
shlb
xor
ret
mov
daa
gs
cwtl
fistl
bound
jo
mov
mov
outsl
mov
fisttpl
sbb
dec
clc
clc
push
xchg
pop
sbb
leave
jnp
addr16
adc
xchg
push
cmpsl
push
jecxz
cmp
mov
cmpsb
mov
test
notl
pop
dec
pushf
sti
xchg
sbb
push
xchg
mov
in
insb
iret
mov
daa
and
cs
xor
push
sbb
sbb
je
push
ljmp
pop
inc
pushfw
xlat
xor
adc
xchg
pop
pop
daa
lcall
or
xchg
xchg
and
stos
repz
cmp
xorb
in
popf
movntq
out
dec
adc
aas
negb
outsb
push
in
cmpsb
or
out
shl
test
jg
stos
and
jp
push
insb
loope
adc
mov
les
xor
dec
fidivl
push
mov
icebp
mov
clc
sub
into
sbb
sub
push
ljmp
loope
test
shl
loope
les
outsb
aad
stc
inc
xchg
mov
pop
cs
lcall
mov
fs
je
push
imul
les
icebp
xchg
sarl
aas
ljmp
int
incl
push
adc
jb
push
pop
ljmp
fisubrl
sarl
call
push
daa
mov
loop
jne
dec
push
jns
jle
xor
sti
inc
nop
popa
mov
cli
xchg
aas
insb
and
dec
dec
dec
xor
je
and
jmp
mov
dec
pop
mov
mov
filds
dec
cltd
xor
cmp
sub
pop
nop
xor
mov
icebp
aad
push
outsl
test
push
cld
cmp
push
mov
mov
sub
jp
lea
mulb
pop
mov
aam
pop
sub
aad
add
mov
movsl
push
pop
sahf
dec
lret
imul
aaa
pop
fs
cld
jne
push
xchg
into
mov
hlt
push
je
and
imul
dec
adc
add
mov
jo
jne
in
mov
mov
insl
jmp
pop
xchg
sbb
adc
cmp
fdiv
push
imul
xlat
cmc
out
and
out
int3
lock
insb
or
gs
aaa
stos
aaa
cmp
mov
loopne
popa
or
sub
or
loope
test
popa
pop
pop
divl
add
pop
pop
aad
adc
stos
ret
xchg
jl
xchg
sub
and
lods
push
xor
add
cmp
jge
mov
dec
fcompl
pop
push
or
test
int
xchg
lds
mov
sti
adc
int
cwtl
add
int3
mov
sbb
push
xorl
cmc
cmp
lods
outsb
pop
lds
movsb
cmc
push
pop
scas
pop
mov
inc
inc
subl
aas
sub
xchg
sub
push
adc
nop
xor
insl
das
dec
ficompl
adc
lahf
inc
sub
push
cld
pop
fs
mov
cmp
ja
shll
pusha
sbb
stc
insb
pop
mov
dec
mov
aas
cmpsl
in
call
sahf
movsb
test
iret
and
sub
mov
mov
xor
add
iret
sahf
test
sub
sbb
sbb
pusha
xchg
dec
insl
jne
jge
rcrl
pop
mov
xor
xor
jne
mov
mov
lea
mov
mov
xchg
outsb
dec
or
scas
cmp
and
inc
hlt
xchg
adc
add
outsl
imul
xchg
xchg
mov
jp
ja
std
inc
and
movsb
sbb
mov
push
mov
pop
push
popa
adc
sub
negl
pop
and
cmpsl
cmp
mov
jb
std
sub
jnp
xchg
fcom
push
push
push
cs
xor
xchg
std
xor
adc
icebp
leave
xor
jne
bound
jmp
cmpsl
mov
dec
sub
sbbb
mov
pop
test
ss
dec
pusha
mov
imul
rolb
mov
jle
sub
mov
push
cmp
xchg
ljmp
sbb
in
sbbb
jecxz
dec
jno
sub
inc
sbb
gs
fwait
enter
sub
mov
jne
add
scas
rorl
shl
ds
sbb
sbb
cmp
jg
adc
push
mov
rolb
inc
cmp
fistps
dec
mov
and
ds
push
pusha
daa
xor
hlt
dec
xlat
mov
dec
testb
popf
mov
mov
ret
outsl
rcl
cmc
xor
imul
dec
roll
sahf
ret
rcll
inc
enter
popa
xor
inc
popa
add
or
bound
das
call
cmc
push
ror
ss
das
xchg
dec
push
out
stc
jne
rcl
sbb
inc
xchg
push
cmpb
imull
fwait
cmp
stos
jnp
in
stos
push
fldl
lret
and
in
xor
movl
es
add
stc
lcall
cmp
mov
bound
xchg
push
or
mov
lahf
decb
push
pop
out
push
ljmp
push
jne
mov
test
or
out
outsb
and
xchg
cmpxchg
shlb
jne
lcall
push
or
dec
adc
xchg
and
enter
ds
cmp
fiadds
dec
push
push
dec
add
push
sub
push
ja
pop
rorl
rcrl
filds
dec
mov
push
mov
sub
mov
cltd
cmova
and
fwait
cli
mov
mov
lcall
ja
cmpsl
mov
cld
outsl
push
in
jl
lock
jge
dec
and
fldcw
nop
cmc
in
pop
jge
sbb
pop
mov
sar
add
xor
pop
xor
cmp
sarb
push
test
aaa
out
filds
addl
loopne
je
dec
loope
mov
in
mov
les
scas
sbb
lret
in
or
adc
and
adc
clc
mov
adc
mov
and
and
sub
mov
cmp
les
mov
or
add
adc
cmp
xlat
int3
xlat
icebp
lds
lods
mov
or
int3
jae
dec
mov
add
pushf
jo
xor
cmp
aam
or
pop
test
js
xchg
cmp
jb
std
push
cmp
jle
lret
dec
push
push
xchg
insl
cli
in
gs
cltd
mov
jle
push
fbstp
dec
sub
sbb
inc
mov
or
mov
xor
sub
inc
jp
es
lods
out
or
nop
enter
test
mov
fiaddl
jae
es
int
mov
aaa
loopne
xorb
and
rolb
lcall
push
mov
ficompl
xor
jl
xchg
push
addb
xchg
jbe
jmp
mov
jns
push
dec
jbe
movsl
push
sbb
sub
push
icebp
jp
xor
mov
xor
cmp
popf
add
fsts
or
xor
fcmovu
cmp
pusha
hlt
leave
repz
aam
popf
ret
or
idivb
fisttpll
cmpsl
mov
pop
sub
lods
mov
add
adc
or
push
fs
loopne
and
insb
icebp
in
testb
addb
lea
inc
mov
xor
cs
das
and
jno
mov
pop
mov
cmc
xchg
fimuls
sahf
push
sahf
adc
out
stos
lret
jno
lods
xor
leave
filds
jns
sbb
dec
test
out
push
lods
test
cmpsb
lcall
fstps
push
movsl
jg
loop
jmp
lret
ret
add
or
gs
mov
shlb
jl
enterw
test
dec
xchg
repnz
lds
xchg
sbb
mov
xor
push
sub
das
pop
jmp
iret
imul
das
mov
fdivrl
dec
adc
mov
cs
lods
stos
lret
adc
cmp
scas
cmpl
inc
popa
pushf
pop
rorl
xorb
js
xchg
sbb
or
int3
fldt
pop
je
ds
sahf
adc
leave
sbb
js
fidivl
pop
dec
xor
scas
into
jl
push
aam
jge
jae
xchg
sbb
xor
scas
fnstcw
add
mov
jp
call
icebp
add
movsb
xchg
popa
das
loop
les
inc
mov
les
xchg
test
or
aaa
and
dec
pop
mull
push
inc
or
sub
push
push
fwait
pop
rcll
enter
push
dec
adc
dec
aad
shll
rorl
adc
push
inc
and
subb
popa
leave
movsl
in
pop
push
mov
shl
push
adcb
sahf
mov
loopne
imul
mov
push
push
inc
fisubrs
aas
pop
mov
repz
jecxz
out
ljmp
clc
es
inc
flds
pop
insb
pop
or
jmp
xchg
dec
insl
mov
andb
jp
data16
and
mov
dec
sub
jmp
cltd
mov
push
lea
dec
or
int3
xchg
std
mov
jbe
cmp
int3
mov
call
push
push
ljmp
aad
aam
xchg
loopne
inc
bound
andl
insl
data16
add
xchg
arpl
jae
cmpsb
mov
mov
aas
aaa
mov
jne
jg
jnp
mov
and
or
dec
cmp
jae
cmp
xor
shrl
cmp
push
outsb
mov
xor
mov
mov
and
push
push
mov
sbb
cltd
dec
jmp
psubw
loop
test
pop
mov
insb
fisubrl
hlt
ss
stos
lret
jae
sbb
ret
pop
jbe
dec
aam
jmp
shrb
adcl
push
push
pop
scas
daa
lods
in
push
sarl
jge
nop
in
je
sbb
outsl
rol
mov
xor
mov
and
cmpsl
sub
mov
mov
or
dec
add
call
xor
push
sarl
repz
fcoml
cmp
mov
sub
loope
divb
xor
xchg
out
mov
or
pop
arpl
mov
pushf
sbb
inc
push
push
or
pop
xchg
mov
adc
cmp
xchg
ss
in
repnz
hlt
and
xlat
rclb
cli
dec
lods
and
out
pop
rcll
ret
stos
sub
adc
lock
fdivrs
mov
enter
les
fisubs
xchg
or
or
fwait
lret
jp
test
mov
and
loop
mov
xchg
lahf
lds
sti
movsb
inc
xchg
xor
xlat
sub
cmc
arpl
dec
pop
orl
jmp
cwtl
pop
in
jns
pusha
std
xchg
into
scas
sub
addr16
sti
rcll
ja
movsl
std
adcl
cmp
and
xchg
fdivs
popa
insl
mul
insb
outsl
and
mov
cmp
push
and
rcrl
dec
js
fdiv
faddl
imul
adc
dec
mov
sub
movsl
jl
aas
jmp
out
int3
push
xchg
add
subb
in
fimuls
pop
xlat
sbb
bound
xor
pop
fs
cmc
lds
push
and
push
jecxz
lock
sahf
lods
jbe
in
fidivl
rolb
enter
cmc
cs
call
mov
push
mov
inc
or
jecxz
and
push
jae
data16
fwait
mul
push
sub
inc
push
mov
pusha
stc
pop
pop
push
xchg
das
dec
clc
roll
add
xchg
xor
xchg
lret
add
pop
ja,pn
pop
adc
stos
jns
frstor
mov
push
jg
in
iret
ds
cli
fldt
dec
mov
pusha
enter
push
mov
push
stc
push
xchg
les
xchg
pop
test
pop
fsubs
mov
imul
pop
in
lods
xchg
inc
shl
sbb
cs
nop
lret
out
repz
dec
lods
ljmp
jns
inc
inc
inc
roll
add
mov
adc
dec
xchg
lahf
rorb
pop
cmpsl
push
xchg
dec
adc
jp
push
xor
mov
push
add
in
in
mov
aad
shlb
xchg
jb
daa
sbb
psllq
sub
add
cmc
shrb
push
mov
jnp
inc
je
dec
cmc
aas
gs
loop
mov
mov
ret
jb
std
sbb
cld
and
add
decl
jecxz
mov
jnp
les
jno
popa
sub
inc
pop
cmp
pop
sbb
jae
int
inc
ja
adc
repnz
arpl
out
cmp
jmp
mov
xchg
int
ss
push
sub
ret
add
cmc
loopne
sbb
mov
mov
sub
xor
aad
xchg
mov
mov
mov
andb
ss
jl
inc
and
sahf
mov
shll
mov
and
push
adc
arpl
pop
jl
mov
sub
adc
lods
cmpsb
mov
std
mov
aaa
in
test
cli
xchg
and
int
es
scas
mov
loopne
arpl
inc
ds
lcall
loope
pop
xor
outsl
and
arpl
aad
jb
test
mov
mov
xlat
js
xchg
loop
xchg
into
mov
add
inc
clc
sbb
inc
mov
mov
imul
bound
cltd
out
popf
pop
xchg
shll
push
jge
int
popa
push
mov
fisttps
lds
mov
sti
jb
aas
clc
sub
in
das
call
inc
sbb
dec
mov
lcall
js
add
leave
xor
dec
cli
mov
inc
sbb
or
add
mov
cmpsb
pop
rcll
dec
je
xor
ficoml
in
xchg
stos
inc
outsl
sbb
sti
pop
pop
mov
pop
out
pop
add
mov
cmpsb
sahf
imul
fadd
ret
xor
or
inc
cmp
pushf
movsb
ss
ljmp
add
arpl
aas
mov
lds
fwait
fs
std
mov
fcom
leave
pop
mov
jmp
ret
cltd
xchg
in
scas
jne
ljmp
loop
aaa
rcll
and
imul
je
dec
jb
mov
clc
dec
repz
lret
jl
cmc
cmp
movsl
dec
jecxz
mov
inc
pop
cli
push
daa
xchg
lock
mov
adc
pusha
push
push
jg
dec
or
mov
mov
sbb
test
xchg
sub
roll
in
push
mov
ror
stos
cmpsb
jbe
sbb
push
and
inc
pop
or
inc
rol
push
jbe
push
jmp
imul
imul
mov
sti
inc
test
mov
mov
loop
popf
mov
mov
repz
dec
pop
cmpl
mov
rolb
out
rcrb
mov
out
sahf
lods
or
iret
out
mov
inc
sbb
gs
and
mov
sub
pop
mov
mov
sbb
xchg
mov
push
pop
fcmovnbe
in
cmp
cld
mov
mov
dec
adc
pushf
mov
out
in
sub
dec
fsubrl
mov
ficoml
mov
pop
and
into
sbb
pop
sbb
or
and
ja
loop
dec
or
and
jg
push
jo
test
lods
cld
cmpsl
aaa
gs
sbbb
inc
or
push
std
mov
push
dec
fbstp
out
push
int
mov
add
ss
lcall
gs
fsubrs
inc
ss
xor
xchg
std
mov
mov
out
jl
mov
dec
and
jp
mov
adc
int3
mov
and
repnz
icebp
push
fidivrl
jnp
or
stc
pop
push
push
adc
mov
mov
inc
pop
adc
add
jle
cld
shlb
add
out
sbb
cmovg
loopne
xchg
negl
lods
ljmp
int
aad
fwait
call
adc
jmp
fs
sti
mov
sub
insl
inc
cmp
add
pop
dec
stos
imul
hlt
xor
je
inc
mov
cltd
dec
sti
popf
xlat
pop
mov
iret
pushf
jecxz
mov
inc
add
lret
add
or
pop
loopne
cli
testb
sar
in
out
lods
jno
ret
mov
lods
loope
jae
cwtl
xchg
hlt
xor
fstpt
xor
arpl
pop
fmuls
adc
push
xchg
dec
movsl
leave
test
sbb
addb
jge
jmp
insb
out
jmp
or
sub
inc
mov
fwait
jnp
xchg
sub
fdivs
fiadds
pop
imul
dec
fldln2
les
dec
pushf
mov
fwait
and
mov
push
andb
and
mov
mov
pop
cwtl
push
loopne
ja
inc
sbb
inc
mov
movsb
mov
in
outsl
jp
loope
orb
test
jbe
ds
mov
jbe
lret
pusha
or
and
sub
or
push
mov
adc
lds
imul
aas
mov
push
pop
stos
int
test
jge
xor
loop
test
enter
or
and
and
cmp
insl
push
inc
sub
jno
or
mov
in
call
or
cmp
adc
push
dec
sbb
sub
lahf
mov
mov
aam
dec
add
rorb
sbb
mov
xchg
and
inc
pop
mov
leave
cmc
add
out
cmp
out
enter
xor
cmp
loop
cmpsb
mov
pusha
pop
aad
push
adc
punpckldq
xchg
xchg
cmp
fistpl
inc
mov
ja
xor
cmc
pop
data16
mov
dec
dec
ret
lea
shrb
xchg
fadds
mov
sbb
sub
push
mov
out
jge
push
pushf
mov
mov
aad
popa
jmp
pop
jg
jmp
scas
pop
xorl
lea
popa
das
bound
aas
mov
daa
aad
push
dec
lret
mov
imul
pop
jmp
cmp
ljmp
imul
js
popa
push
mov
stos
mov
in
sbb
bound
ds
or
sbb
mull
mov
fldenv
mov
or
jnp
mov
push
pop
ljmp
ficoms
inc
insl
or
fbld
outsb
jbe
aaa
adc
aaa
sub
ret
sbb
loope
mov
dec
testl
jne
dec
dec
add
movsb
stos
loop
push
pop
lods
sub
mov
push
mov
or
cltd
mov
cmc
inc
pop
and
movsb
xchg
and
sub
out
pop
jl
rcrb
or
dec
sbb
xor
jp
clc
xchg
or
adc
push
xchg
fs
adc
cmpsb
scas
loopne
rcrb
mov
rcrl
test
push
lock
or
dec
stos
ret
pop
jns
pushf
sub
fdivs
mov
sub
mov
mov
sbb
test
cmp
je
mov
cwtl
xchg
jle
vpunpckldq
pop
repnz
mov
inc
mov
and
cmc
ds
sbb
jecxz
sub
xor
inc
dec
mov
xor
inc
imul
fnop
push
cwtl
sub
xchg
out
add
jg
sti
fisubs
stos
or
sub
cmpl
adc
mov
jns
cmpb
add
inc
inc
xor
jmp
adc
push
sbb
dec
sbb
mov
xchg
xchg
rcl
push
pop
rcr
shll
cltd
or
jle
adc
dec
dec
or
adc
and
xchg
arpl
cmc
fisttps
sub
cmovno
shlb
push
lods
ret
cmp
cmp
xchg
stos
js
shl
push
push
shll
push
nop
inc
in
daa
sub
insl
mov
or
adc
xor
cmp
hlt
mov
jae
into
jb,pn
test
mov
push
push
inc
sbb
xchg
insb
sub
loop
xchg
adc
mov
aam
out
in
fdivrl
fs
mov
mov
push
jns
xchg
shrb
push
jo
iret
ds
ss
mov
adc
stos
lahf
aad
adc
outsl
adc
mov
mov
inc
xor
or
xchg
iret
cmp
out
jns
sbb
mov
dec
adc
fs
add
and
push
pusha
dec
mov
es
ret
aam
mov
cmp
jnp
inc
add
dec
mov
jge
dec
mov
and
sbb
dec
cmc
mov
or
fdivrp
test
ljmp
rcrb
imul
ljmp
aas
pop
xlat
insb
idivl
adc
rcll
fwait
mov
or
xchg
mov
sti
pop
std
pop
jg
bound
jl
stos
sbb
sub
adcb
push
movsb
leave
or
xchg
pusha
or
bound
stc
mov
lret
mov
push
stc
sub
inc
jmp
jle
push
push
dec
cmp
out
push
pop
fucomp
cmpsb
jmp
mov
repnz
mov
subl
pop
xor
fnstenv
dec
loope
or
int3
push
mov
mov
push
shl
test
sub
or
fwait
call
and
mov
sti
xorb
sti
xor
mov
sbb
fwait
stc
push
js
adc
imul
insl
xor
mov
sbb
es
andl
jg
sub
cmp
inc
push
jbe
ret
stc
rcrl
mov
xchg
mov
pop
in
cmpsl
or
out
cmp
iret
jmp
push
jle
cmc
cmp
mov
gs
inc
out
jle
sbb
lret
clc
and
fmulp
test
mov
sub
aam
inc
jge
aam
fdivr
sbb
in
insb
xor
pop
cld
lds
mov
xchg
lods
mov
mov
iret
xor
add
xchg
imul
xchg
push
addr16
fs
scas
movsl
loope
adcb
sub
loopne
mov
sub
push
adc
imul
xor
shrl
imul
xor
lock
setb
cmc
gs
and
pop
jp
pop
xor
xchg
mov
in
mov
jb
cltd
mov
lods
out
cld
jp
imul
bound
adc
adc
jecxz
js
xchg
mov
dec
push
test
push
rcl
mov
push
push
stc
hlt
xor
lea
cmp
sbb
jle
mov
mull
sub
pop
stos
push
ds
sbb
mov
push
xchg
test
xor
rcrb
inc
rcr
dec
push
jns
daa
adc
outsb
and
pop
fcmove
add
into
sub
int3
cltd
loope
mov
lods
pop
jno
xor
push
imul
sub
xor
and
jge
daa
lock
in
ja
imul
sub
mov
mov
mov
and
or
rcll
out
inc
loop
into
mov
sub
adc
nop
std
push
jp
xchg
ljmp
mov
mov
cmpsl
movsl
mov
fisubl
push
mov
jnp
jge
loop
mov
ljmp
mov
xor
sti
xor
inc
mov
xchg
cmp
out
out
jge
xor
stos
arpl
cli
cmp
loop
pop
or
insl
mov
sub
xor
jmp
out
pop
pop
fsubl
xchg
push
ds
push
ficoms
xchg
cltd
inc
js
dec
pop
scas
sbb
xchg
inc
jbe
pop
sahf
rclb
mov
add
ret
jmp
adc
sbb
icebp
sti
cmc
in
es
sub
rorl
cmp
fsubrl
stos
sbb
dec
push
mov
rorb
jg
cvtps2pd
in
mov
xrelease
jne
add
jecxz
xchg
sub
scas
sub
push
xchg
imul
sbb
lret
mov
jmp
push
jl
mov
pop
out
test
sbb
jle
int3
lcall
mov
imul
aas
jmp
jecxz
iret
push
adc
icebp
in
push
frstor
clc
adc
mov
lea
mov
xchg
loopne
test
popf
aaa
mov
mov
repz
out
mov
or
inc
mov
clc
andb
outsl
xor
lret
sbb
sbb
testb
mov
daa
dec
outsb
add
outsb
in
rcrl
cltd
add
xor
adc
pop
jg
sbb
fwait
and
mov
mov
ljmp
pushf
test
add
jmp
fs
stc
jl
lret
dec
movsl
mov
mov
sub
in
ja
popa
or
popa
cmp
fdivs
mov
lret
sbb
mov
fisubs
lods
icebp
frstor
dec
daa
ret
test
pop
xor
xor
decl
add
xor
push
fldl
and
and
out
push
lock
and
xor
push
sti
mov
add
jl
rolb
cmc
jg
xor
inc
jmp
mov
dec
xorl
inc
shll
daa
push
cmp
repnz
push
sarb
xchg
and
mov
das
fsubrp
push
pop
xchg
cli
das
cmp
or
pop
cmpsl
cmp
pop
int
lea
inc
fbld
jb
jmp
out
inc
or
aad
ds
sbb
cmp
insl
rcrl
insl
loop
xchg
je
cmpsb
mov
int3
jg
insl
and
popf
fiadds
lods
jns
dec
push
pop
jecxz
sub
jmp
xchg
mov
adc
jne
push
scas
data16
xor
jge
pop
add
lahf
lods
jbe
jbe
sbb
sub
clc
movsb
jle
lods
mov
div
mov
adc
outsl
add
dec
xor
jne,pt
notl
das
aad
movsl
or
andb
xor
dec
sti
cmp
inc
vcvtpd2dqx
pop
pop
xchg
ja
notb
pop
add
jg
aam
xor
adc
mov
lahf
jo
sbb
adc
aas
push
mov
push
int
aaa
fucom
in
mov
dec
pusha
xor
or
inc
std
add
mov
cltd
add
insl
std
imul
pop
lret
clc
roll
ds
xchg
lcall
mov
fldcw
xchg
pop
out
pop
mov
loopne
add
inc
or
test
daa
mov
adc
out
xchg
mov
jnp
add
xor
xchg
fwait
fs
push
ja
push
adc
lret
pop
mov
into
sub
lea
jle
rolb
pop
sub
add
lock
ljmp
dec
jl
aad
imul
and
xchg
repnz
lock
dec
loopne
clc
sete
in
or
mov
lahf
mov
fldt
test
xchg
mov
pushf
and
sti
imul
mov
ss
nop
dec
clc
mov
add
and
push
and
pop
jbe
sub
jns
or
push
out
dec
jge
shrb
xchg
in
into
ret
out
cmp
adc
inc
enter
ds
aas
std
cwtl
sub
mov
xchg
fs
sti
dec
push
aam
ljmp
test
scas
xchg
pushf
dec
add
jnp
hlt
add
in
pop
adc
sub
icebp
inc
mov
add
jp
adc
mov
push
jae
fsubl
les
popa
insb
fists
pop
mov
repnz
mov
sbb
icebp
sbb
loop
in
in
ret
aam
pop
inc
sbb
add
xchg
pop
sub
sub
dec
jb
andl
pop
out
sbb
mov
idivl
jp
mov
push
loope
fs
xor
daa
or
sbb
fldenv
mov
ss
push
jno
nop
and
pushf
pop
mov
add
jg
xor
movsb
or
gs
imul
popf
mov
movsb
push
sbb
pop
cmp
hlt
mov
rorb
adc
icebp
testl
aas
test
mov
insb
testl
ret
mov
outsl
sub
pop
js
sbb
test
lahf
sbb
pop
pop
mov
mov
inc
dec
cld
shlb
push
xor
test
mov
hlt
out
out
popa
outsl
leave
pushw
xchg
adc
mov
pop
loope
inc
das
mov
mov
cwtl
lcall
lea
sub
lcall
insl
push
loope
mulb
sbb
test
mov
sub
xchg
hlt
das
mov
cmp
adc
loope
testb
xchg
sbb
cmp
imul
cltd
aad
pop
scas
add
aam
and
pop
push
xchg
and
cwtl
or
mov
xchg
lea
stos
mov
jl
push
xor
shl
mov
jmp
outsb
into
xchg
dec
dec
iret
loopne
xor
mov
es
mov
and
mov
pop
das
and
mov
ficompl
mov
popf
push
addr16
xchg
fisubrs
or
movsl
cs
mov
or
jb
insb
xor
cmp
pmullw
icebp
mov
aam
adc
in
daa
mov
add
jecxz
dec
inc
aas
or
xor
xchg
push
sbb
xor
and
add
ret
dec
jg
push
xor
or
dec
adc
push
jg
mov
mov
int
mov
stos
push
jnp
mov
int3
jae
fbld
add
jl
lock
mov
jns
push
and
xchg
dec
jmp
lret
cmp
ss
push
xor
or
scas
pop
or
jge
xchg
in
jecxz
jmp
xchg
xchg
fistpll
fwait
jmp
mov
test
mov
inc
inc
cmp
roll
adc
adc
pop
and
adc
sub
sbb
pop
xor
or
sbb
jmp
es
aas
out
mov
jecxz
test
into
xchg
and
cltd
in
call
adc
pusha
scas
in
out
call
loope
add
mov
inc
js
in
add
push
mov
out
inc
jae
scas
in
les
rcrl
dec
enter
sar
xchg
lods
leave
shlb
andb
testl
nop
adc
out
pop
or
out
je
ret
mov
mov
push
repz
cmp
jb
dec
sbb
cmc
mov
mov
xor
pop
adc
mov
jne
cmp
mov
push
mov
fbld
fwait
and
gs
jp
adc
sub
ljmp
mov
inc
xchg
scas
jns
inc
push
loope
stos
fcmovnbe
inc
icebp
fcom
xchg
sbb
stc
mov
push
fistpll
xor
add
or
js
sbb
and
jns
repz
xchg
xor
mov
scas
subl
or
stc
pusha
cli
pop
pop
sbb
loope
add
jb
jl
mov
cwtl
dec
xchg
sub
xor
ret
clc
insl
pop
sbb
mov
jo
sub
in
pop
fwait
sub
cli
xchg
mov
cwtl
xor
arpl
add
clc
sub
pop
inc
mov
or
fildll
and
stc
cmp
mov
mov
int
xor
cmpsl
or
aad
mov
aaa
adc
lahf
outsb
push
ret
in
aas
xchg
out
or
adcl
pop
cmp
orb
adcl
add
mov
mov
cmp
aaa
cltd
xchg
imul
jge
aaa
js
mov
inc
ljmp
imul
sub
cmp
in
mov
mov
imul
mov
outsb
xor
cmc
jmp
out
inc
xor
cli
jle
cs
in
add
cltd
dec
test
aam
inc
sbb
xor
sti
xchg
sub
xchg
mov
mov
and
call
jle
cmc
fcompl
dec
test
jns
mov
mov
inc
pop
lret
mov
inc
icebp
adc
xchg
pop
jle
pop
and
jns
cmc
jbe
ss
adc
cli
sti
push
xlat
cmp
xchg
adc
pusha
ljmp
sub
xor
xchg
std
pop
enter
or
sbb
shr
sbb
mov
shl
mov
mov
xchg
cmpl
push
sub
fbld
adc
popl
xor
lea
dec
shl
iret
mov
dec
rcrb
add
rcrb
pop
push
in
popa
or
insb
xchg
jp
mov
out
or
xor
aad
cmpsl
ficoms
dec
pop
xchg
mov
inc
adc
sub
xchg
sbb
fwait
dec
pop
or
out
fldt
cmc
es
in
lcall
dec
lahf
sahf
push
in
mov
rcrb
lods
fiaddl
stos
dec
sub
cmpsb
xor
fadds
mov
lds
pop
push
dec
jle
or
mov
fstpt
mov
into
out
cmpsb
dec
imul
xor
sub
in
inc
icebp
rclb
ljmp
and
inc
cmp
mov
mov
inc
clc
leave
or
jns
cmpsl
shll
lret
aam
mov
xchg
repz
xor
or
out
xor
or
mov
insb
dec
and
test
lea
xchg
inc
test
out
inc
lods
test
inc
jmp
loopne
add
jns
out
xor
xchg
call
jae
jnp
lcall
iret
or
call
sub
stos
sub
test
shlb
popf
xchg
repz
sbb
and
clc
arpl
sbb
cwtl
lods
fstps
orl
inc
in
in
ret
push
int3
jnp
outsl
stc
imul
mov
adc
or
jecxz
cmpsl
rcrl
pop
push
mov
or
shll
sbb
push
int3
adc
mov
mov
adc
out
and
in
shll
cld
push
data16
cmp
cmp
cld
mov
cmp
jne
out
dec
mov
movsl
filds
mov
cs
mov
cmp
dec
fwait
add
xlat
adc
xor
cs
ror
mov
adc
cmp
push
xchg
xchg
hlt
dec
in
inc
sub
fwait
push
cs
add
loope
pushf
or
push
cli
xchg
int
scas
ds
inc
aas
movsl
pop
arpl
fidivrl
mov
outsb
loopne
pop
sahf
enter
lret
imul
out
add
dec
sbb
cwtl
out
in
mov
add
int3
mov
xchg
aam
xor
xchg
push
and
pop
pushf
shll
dec
pop
test
js
mov
sub
shlb
adc
mov
pop
gs
mov
fnstsw
out
mov
xchg
jne
repnz
sub
adc
jp
jp
mulb
mov
insl
shlb
inc
cmc
ret
cmpsb
fwait
xor
mov
js
add
in
ja
pop
push
xorl
inc
push
or
sbb
sub
cmpsb
div
fsubrl
test
aas
imul
bound
outsl
aaa
xchg
jp
int
pop
xor
jge
scas
sbb
cmpsl
jp
ficoms
cmp
dec
cld
add
mov
clc
lock
in
jmp
fdivrs
js
sarb
fcmovbe
pop
adc
shlb
xor
icebp
jge
aam
inc
rorb
lods
ljmp
mov
ror
pop
push
sub
clc
nop
cmp
and
dec
pop
arpl
hlt
sub
or
or
sub
repnz
jmp
sbb
push
mov
aam
add
sub
cmp
leave
mov
mov
jle
test
in
sbb
mov
cs
pop
mov
mov
xor
pop
mov
cltd
sbb
pushf
fwait
jecxz
test
inc
pop
jge
or
xor
repnz
lret
out
cld
pop
stos
pushf
inc
mov
push
iret
mov
mov
mov
fbld
pop
sbb
int3
dec
test
mov
cmp
cli
jl
idiv
xor
push
and
lea
es
mov
mov
mov
popf
mov
aad
or
and
insb
cmp
test
insb
cltd
jo
cmp
xchg
popa
cmpsb
sbb
movsb
mov
jb
xchg
insb
pop
mov
sbbl
cmc
filds
jle
pop
int3
or
cmpb
cwtl
add
imul
out
lods
pop
shrb
and
dec
aam
add
xor
fnsave
jo
insb
pop
arpl
or
pop
jmp
jo
push
repz
mov
pop
xchg
mov
iret
loopne
cmp
xchg
push
test
ljmp
shll
cmc
dec
pushf
test
aam
sbb
adc
mov
lret
mov
sbb
out
mov
xor
add
mov
andb
mov
call
adc
ss
lahf
push
pushf
inc
xchg
ljmp
shll
mov
sbbb
leave
roll
iret
push
adc
add
cmpsb
hlt
add
mov
xlat
or
push
or
mov
mov
cmp
mov
add
imul
bound
fwait
push
mov
xor
insl
mov
mov
xlat
dec
faddp
out
ficoml
out
inc
loop
and
sub
stc
mov
hlt
movsl
jge
out
cmp
push
lds
scas
je
push
arpl
fdivr
add
or
dec
push
cmp
in
enter
xchg
jecxz
out
fisubl
insl
xor
cli
push
fimuls
mov
cmp
clc
jno
pop
xor
in
lods
mov
xchg
jne
or
cmpsl
inc
jbe
shrl
push
add
mov
pop
mov
jecxz
loop
seto
pop
dec
call
loope
in
sbbl
mov
sbb
add
or
inc
mov
popa
pop
sahf
and
sub
test
sahf
jl
ss
push
add
and
xor
or
pop
adc
mov
mov
fisubs
sbb
adc
dec
mov
in
es
fs
es
rorl
orl
pop
dec
and
jb
jmp
mov
leave
orl
or
jl
push
idivb
or
jge
cmp
insl
jne
test
mov
sbb
mov
mov
test
pop
cmp
rorl
xorl
inc
fisttpll
xchg
jno
sub
shlb
mov
in
inc
sub
and
mov
mov
fstps
call
loopne
sbb
je
lods
and
and
cmpsl
push
mov
mov
sbb
icebp
test
xchg
jp
cmpsl
add
mov
or
insl
call
and
add
aam
test
cmp
mov
test
mov
push
jmp
jp
push
or
add
xor
inc
mov
mov
and
cmp
fnstenv
ret
or
popf
jmp
mov
pop
popf
pop
mov
shll
lret
pop
adc
jg,pt
lahf
push
jnp
inc
mov
cmp
add
sbb
inc
popf
add
mov
jae
nop
lods
xor
adc
push
adc
mov
sbb
pop
jecxz
pushf
jo
inc
sbb
out
lods
lods
mov
cmpsl
arpl
js
test
ja
rclb
call
mov
sub
movsb
cltd
mov
int3
and
mov
xchg
mov
cmp
test
js
mov
dec
adc
cmc
insl
aas
out
movsb
lea
pop
jg,pn
mov
sub
loop
in
push
mov
cmp
fsubs
addr16
out
lcall
mov
mov
insl
cld
xor
add
mov
inc
mov
aaa
lods
test
out
dec
into
je
cmpl
mov
cmc
sarb
dec
subl
outsl
fwait
rcl
pushf
mov
or
daa
and
and
pop
jns
leave
or
pop
jb
in
mov
pop
mov
movsb
cs
xchg
push
add
stos
ds
dec
fcoml
sub
lds
pop
je
sbb
xchg
mov
inc
or
push
shlb
insb
subl
mov
dec
push
inc
pop
lret
cmpsl
cwtl
dec
pop
xchg
adc
sub
addr16
outsl
xchg
jo
shrl
in
mov
rolb
ret
cmpsb
subl
cmp
xor
or
and
ljmp
push
das
or
jmp
sahf
addr16
add
dec
shl
stos
lods
and
decb
mov
xor
lahf
xchg
push
push
push
ret
mov
push
shll
ja
loope
mov
jg
push
mov
out
stos
ret
stc
and
and
xchg
jl
sub
inc
sub
fstps
lret
mov
std
jmp
pop
xor
adc
push
jne
leave
mov
inc
sbb
inc
pop
xchg
mov
sub
cld
clc
jbe
arpl
jg
dec
mov
push
testb
mov
mov
in
dec
mov
sahf
ud1
pop
je
adc
mov
cmp
loope
xchg
fwait
jecxz
rcrl
adc
pop
orl
sahf
jg
pushl
and
xor
ror
cs
repnz
pop
clc
popf
data16
mov
sti
dec
jnp
nop
xlat
stc
ficomps
add
xor
mov
repz
lcall
out
sbb
sub
sbb
adc
mov
add
mov
out
add
das
aaa
sbbb
adc
repz
mov
addr16
cmp
test
outsb
pop
mov
xchg
dec
jle
je
loop
xchg
cmp
imul
js
jmp
jl
mov
cwtl
push
les
popa
negb
outsl
and
iret
mov
pop
fsubrs
add
nop
fidivs
sbb
pop
outsb
ja
stos
and
lock
push
inc
pop
mov
pop
popa
mov
mov
mov
jecxz
pop
addr16
ljmp
mov
jle
cmpsl
test
jo
data16
imull
push
sub
dec
mov
inc
clc
fdivr
aad
cli
or
out
pushf
or
jb
out
ja
fiaddl
int3
clc
fmuls
icebp
fisubrs
or
jo
popf
repz
movsl
out
std
shl
cmpsb
inc
test
adc
into
mov
mov
mov
sub
flds
sub
js
enter
xchg
adc
cld
lods
xor
mov
orb
mov
stc
adc
gs
and
fcomps
cmp
jno
mov
dec
push
pushf
add
ret
lcall
add
inc
mov
pop
push
push
jno
xchg
mov
cwtl
xchg
inc
in
xor
loopne
mov
out
lret
cmp
or
and
movzwl
add
out
movsl
outsb
xchg
lahf
mov
fwait
pop
ret
and
call
lret
push
xor
cmpsb
shlb
mov
pop
sub
fdivl
inc
or
repz
sub
mov
pop
mov
and
ret
sahf
dec
lea
and
rcr
loope
fstpl
icebp
pop
cmpb
sub
repz
rcrl
pop
cli
xchg
jbe
pop
pop
jnp
mov
jo
or
addb
roll
aad
lock
loop
call
mov
fs
mov
inc
stos
mov
xchg
cwtl
in
cmp
jle
mov
popa
xchg
sub
cli
rcr
fldcw
push
jmp
js
sub
leave
lcall
mov
mov
loopne
inc
fcoml
fsubrs
pop
jbe
and
fcoml
notb
aaa
fists
in
js
add
ret
fldcw
jnp
xor
arpl
add
movsb
pop
inc
mov
aad
mov
push
and
lcall
in
mov
push
pop
mov
rol
ljmp
pop
fcmovbe
and
xchg
test
test
mov
fadd
jecxz
cld
jbe
jae
rorl
cmp
nop
cmc
pusha
mov
insb
add
cmp
flds
mov
inc
or
test
mov
or
sti
sub
sub
jl
xchg
loope
loope
mov
lea
mov
lcall
jecxz
fs
icebp
push
roll
pop
push
shrb
jge
outsb
dec
inc
fstps
and
sbb
pushf
push
lret
pop
mov
add
fstpt
cmp
jmp
sahf
idiv
add
mov
test
popf
shll
shll
inc
enter
cli
hlt
mov
std
inc
shlb
adc
cwtl
xor
imull
pop
lcall
movsb
in
cmp
xchg
or
stos
mov
fiaddl
mov
jle
out
sbb
aas
in
sub
or
clc
stos
test
loope
cmp
and
and
outsb
or
xor
push
shrl
mov
pop
adc
nop
mov
jge
push
arpl
push
push
shll
mov
pushf
sti
xchg
cmp
cmp
add
rclb
sub
sti
into
push
hlt
lahf
push
and
add
bound
inc
pop
ss
push
aaa
sub
sbb
dec
inc
lods
pop
jno
imul
pop
inc
insl
push
jne
rclb
sbb
cmp
push
lret
in
ljmp
xor
cmpl
jp
icebp
mov
jg
fldl2t
push
dec
addr16
dec
test
inc
sar
xor
int3
pushf
push
ret
push
cmpsl
gs
popf
mov
imul
fnstsw
sbb
jo
cmp
insb
xchg
mov
dec
sbb
adc
mov
in
mov
pop
and
mov
xchg
ret
xor
and
or
fxch
and
lods
sbb
pop
pop
outsl
lret
in
adc
xor
add
xchg
clc
cltd
pop
loop
scas
or
cld
cltd
mov
jmp
and
stc
stos
xor
and
lea
inc
push
jge
rcrl
fnsave
or
leave
cmpsl
sbbl
sbb
dec
sub
adcb
fwait
pop
out
test
bound
push
and
in
sbb
lods
mov
ds
cmp
stos
dec
pop
sbb
jmp
add
mov
loop
inc
jb
sbb
sub
je
cld
ss
push
inc
pop
pop
out
push
cmp
xchg
sub
in
pop
insl
outsl
rcrl
pop
sub
in
popl
jge
ftst
sub
test
fildll
es
cmp
mov
enter
mov
xchg
lds
sbb
loop
sahf
test
lret
jb
loop
push
push
pop
jmp
loopne
mov
dec
adc
mov
xchg
xor
addr16
inc
cld
jb
les
shll
xchg
push
mov
imul
or
roll
adc
xor
mov
inc
xchg
mov
pop
push
dec
les
and
mov
cltd
xorb
xor
sub
push
outsl
and
pop
jne
mov
mov
mov
std
add
sti
push
stos
imul
cmp
aad
test
dec
test
cld
in
mov
into
pushf
sub
cmp
mov
inc
pushf
insb
aaa
mov
pop
sub
push
mov
jmp
test
jg
test
cld
xchg
xor
aaa
cmpsb
xor
mov
scas
repnz
out
sbb
lret
inc
mov
mov
rclb
sub
mov
xchg
pop
leave
scas
movsl
mov
repz
out
out
cwtl
stos
and
mov
scas
stos
loop
sub
mov
sbb
cltd
fsts
insb
movl
fidivrs
in
xor
inc
les
in
jo
repnz
loop
or
stc
sub
mov
jge
xchg
out
sub
fsubr
shll
cmp
add
out
std
test
cmp
push
lret
divb
lods
pop
shrb
push
jge
arpl
and
jbe
out
xchg
dec
fcompl
xchg
enter
xor
inc
xchg
or
adc
xchg
inc
add
or
movl
jp
setne
out
add
loopne
repnz
or
mov
xchg
mov
or
sub
ds
mov
xchg
fs
jno
jns
jmp
mov
adc
movsl
popf
sub
pusha
jmp
mov
dec
xchg
shrl
loope
jl
push
data16
mov
fwait
mov
cmc
push
sbb
inc
inc
movsl
xchg
push
cli
jo
inc
test
jmp
cmpb
cmp
data16
sbbb
push
inc
lock
pop
lds
mov
mov
push
mov
xor
fmuls
jecxz
test
cmp
aaa
js
ljmp
xor
sub
jg
push
cmp
pop
leave
xchg
push
imul
pop
push
lock
xchg
mov
iret
ret
imul
jb
mov
pop
stos
lret
lods
ret
xor
push
outsb
lcall
icebp
mov
cmp
lret
sarl
call
sub
and
mov
xchg
fwait
sbb
pusha
inc
fwait
sar
adc
adc
testb
test
cmc
shll
and
cmp
dec
iret
mov
shlb
and
mov
dec
mov
mov
loope
fwait
dec
cmp
and
mov
push
mov
andl
pop
push
call
je
sub
fs
sub
rorl
nop
or
and
repz
mov
jno
mov
mov
jne
sub
mov
sbbl
add
and
inc
cmp
outsl
iret
xor
insl
fistps
jl
and
mov
in
rolb
aas
stc
xor
stos
push
sub
movl
push
xchg
and
push
sub
iret
or
sbb
mulb
sbb
jo
popa
setb
lods
dec
push
push
jmp
inc
pop
fucom
jle
jmp
xor
sti
mov
or
or
clc
rclb
dec
movsb
arpl
js
lods
add
push
mov
mov
inc
pop
jo
xchg
sbb
cmp
popl
jle
idivl
pop
dec
and
jl
aad
push
insl
rorl
scas
sbb
jle
pop
mov
mov
adc
pop
std
dec
in
fstl
xchg
jge
push
fs
sub
jo
out
adc
xchg
mov
aam
fcoml
jb
fmul
movsl
popw
andb
cli
pop
cmpsb
jns
mov
add
fidivl
roll
mov
mov
cmc
shr
sub
mov
add
sti
adc
and
cmp
cltd
pop
mov
or
mov
clc
adc
test
ror
out
mov
outsl
cmpsl
push
pop
in
and
xchg
ja
mov
lret
mov
cli
nop
inc
sub
pop
cli
mulb
inc
add
fidivrl
lock
stc
sbb
les
test
imul
pusha
pusha
sbb
insb
loop
lock
imul
dec
xor
pusha
imul
outsb
xchg
pop
mov
add
push
int3
mov
aaa
aaa
xchg
adc
fnstenv
adc
or
xlat
xor
outsb
adcl
in
cmp
notb
xchg
test
jl
mov
xor
pop
out
sbb
js
adc
addb
out
lret
mov
mov
and
jne
mov
xor
or
sbb
fistl
in
pushf
push
bnd
mov
in
call
cs
inc
rcrl
mov
adc
cmp
imul
or
cmp
test
mov
outsb
out
jecxz
aam
and
dec
movsb
scas
jmp
pop
inc
gs
or
mov
push
pusha
xchg
xchg
imul
imul
mov
in
js
icebp
pop
addr16
insl
adc
mov
hlt
and
and
sbb
adc
pop
outsb
ljmp
roll
int
bound
xchg
mov
xchg
lock
stos
sub
dec
sub
dec
or
jnp
in
and
out
inc
cld
sbb
scas
push
xor
xchg
sub
std
andl
pop
and
sub
lcall
mov
push
inc
add
inc
xchg
aaa
cwtl
sbb
lock
or
mov
dec
dec
mov
ret
rol
in
movl
adc
out
outsb
pop
or
je
push
mov
xor
lea
test
push
pop
cmp
mov
jae
les
cltd
sub
and
xchg
aam
jns
jg
repnz
fwait
push
mov
sahf
inc
cmpsb
daa
xchg
sub
jge
sub
mov
push
lea
pushf
outsb
sbb
pop
das
push
jge
aam
loope
pop
cmp
and
mov
pop
mov
jae
dec
ds
sti
outsb
ficompl
add
int
and
add
mov
push
sub
mov
dec
pop
dec
xchg
sti
bound
enter
inc
and
adc
fidivl
push
mov
mov
cs
mov
hlt
lods
add
cmp
stos
pop
add
or
mov
cmp
iret
mov
mov
xchg
ret
fs
mov
dec
xorb
push
bound
lea
or
lahf
frstor
sbb
jb
mov
dec
jge
jp
mov
enter
test
int3
xchg
lcall
insl
pop
mov
sbb
xor
cmp
outsb
push
aam
clc
test
and
cli
gs
and
enter
push
out
std
pop
inc
pop
inc
push
xchg
xorl
and
pusha
xchg
adc
mov
dec
mov
mov
arpl
iret
sbb
sti
mov
int3
add
or
push
mov
clc
jne
pop
movsb
insl
mov
packsswb
pop
cmp
mov
push
xor
lds
sbb
sbb
fcmovnb
cmp
mov
jnp
fs
addr16
dec
enter
negl
out
jge
jb
fs
cli
xchg
sub
stc
sub
inc
in
push
xchg
mov
lret
lret
cmp
and
xor
cmp
inc
jmp
sbb
repnz
movsb
int
into
add
xor
pusha
push
xchg
hlt
adc
lret
fs
add
cmpsl
pushl
mov
clc
xchg
push
out
ja
mov
cli
and
inc
cld
int
fnstsw
in
pop
popf
xor
inc
shr
imul
or
mov
push
loopne
js
xchg
or
frstor
mov
xchg
stos
scas
js
inc
mov
lcall
mov
sbb
js
sbb
add
jno
inc
jae,pt
xchg
lcall
xor
xchg
nop
shrl
dec
push
inc
mov
sub
test
mov
sub
pop
stos
sbb
mov
sub
lock
fsubrl
in
push
and
rcrb
pop
mov
xchg
jnp
xchg
repz
jne
jo
fisubrs
mov
xor
dec
fdivrl
les
push
ss
mov
scas
sti
sarb
cld
jmp
mov
or
add
jmp
leave
push
xlat
fnstcw
adc
cwtl
mov
adc
jle
aas
add
add
xor
ljmp
ljmp
repz
add
insb
int3
and
data16
sahf
inc
pop
stc
lds
add
stos
cmp
sbb
dec
shrl
adc
stc
cmp
mov
dec
jecxz,pn
pop
push
shlb
xchg
gs
jle
cli
and
dec
xchg
add
cltd
xlat
jp
pop
xor
adc
fwait
into
adc
mov
subb
inc
pop
cmp
clc
or
and
pop
lock
fidivl
fs
sahf
add
outsb
jle
enter
sarl
mov
ficoml
iret
rcr
imull
mov
cli
inc
jo
nop
sbb
icebp
inc
dec
enter
mov
xchg
pop
xchg
push
hlt
pop
jp
mov
std
adc
and
dec
jp
outsb
inc
imul
test
sbb
add
lock
mov
cmpsb
add
jns
xchg
test
inc
mov
js
inc
sbb
ret
mov
incl
repnz
outsb
repz
add
add
std
inc
fsubr
pop
inc
ret
and
xorb
pop
push
mov
test
iret
daa
ret
cmpsl
xor
ss
jno
dec
andl
cli
shrl
sub
mov
push
mov
data16
js
xor
mov
pop
mov
ja
push
jae
and
ds
in
cmp
icebp
outsb
out
hlt
cmp
sub
js
out
adcb
fsubl
push
ss
push
sub
rcll
pop
mov
mov
orb
and
cmc
mov
xchg
call
dec
popa
and
jne
pcmpgtd
sarb
imul
mov
fcom
out
imul
cmp
add
insl
roll
aaa
clc
xchg
xchg
cld
popf
jmp
and
movsb
xchg
jns
pop
inc
test
jecxz
loop
mov
imul
aad
arpl
test
lods
aas
arpl
jecxz
aaa
cs
aaa
sbb
cmp
pop
clc
xchg
int3
jne
and
lret
xchg
inc
jge
addr16
dec
cmpsl
mov
mov
mov
lcall
mov
lea
fdivs
std
add
das
inc
fmulp
jmp
mov
sub
pop
pusha
filds
test
daa
mov
jae
inc
rcr
inc
cmp
pop
sbbl
pusha
xor
and
push
lret
jge
ficoms
jp
js
mov
xchg
jmp
mov
jae
or
imulb
mov
imul
push
std
push
ss
bound
inc
pop
icebp
push
xchg
or
push
rclb
cli
mov
lea
mov
and
ret
lea
imul
imul
and
inc
push
adc
es
insl
cmpsl
push
jno
mov
mov
testb
movsb
test
pop
lahf
ss
fwait
dec
stos
subb
jno
lahf
mov
aad
clc
pop
push
sbb
inc
adc
xor
lret
cli
sub
data16
push
xchg
inc
les
jae
insb
inc
negb
loope
add
dec
jge
jge
push
inc
jo
dec
test
mov
outsb
or
arpl
and
sub
pop
out
rorb
jae
pop
je
adc
shlb
push
std
lret
cmp
cmp
pushf
cltd
jns
icebp
nop
fdivs
push
sahf
out
stos
add
inc
adc
scas
cli
gs
std
movsb
aam
dec
xchg
adc
push
add
mov
fmull
bound
jo
pop
adc
add
addb
cmp
inc
aam
cli
sub
gs
push
pop
and
lret
mov
mov
jmp
clc
aas
insl
cmp
inc
jg
dec
jl
out
out
ror
mov
std
jae
pusha
push
ljmp
scas
xchg
push
mov
mov
jns
pop
add
fbld
outsl
xchg
sbb
lods
cmc
out
push
pop
sbb
jns
jl
dec
out
inc
add
ret
leave
sub
pushf
fnsave
loopne
jnp
adc
idiv
jnp
jle
sti
cmp
sbb
mov
push
pop
dec
imulb
jno
cld
cmp
roll
sub
neg
ss
movsb
dec
bound
sub
or
mov
mov
cmp
popf
outsb
xor
cmp
add
hlt
lods
xabort
mov
sbb
ret
push
out
mov
shr
sbb
bound
cmp
js
mov
int
loop
adc
xor
mov
shrl
js
in
dec
js
ja
adc
dec
das
lds
push
push
clc
and
xchg
jle
push
xor
popf
pop
insb
jo
or
mov
push
sub
or
xchg
xchg
and
out
adc
test
lea
push
push
push
sbb
clc
ds
push
mov
or
scas
mov
sub
or
or
jbe
shrb
xor
and
flds
fildl
mov
sbb
fnstsw
ud0
xchg
pop
lds
dec
jne
pop
or
xchg
xchg
fdiv
add
jecxz
jo
les
ret
jns
dec
dec
pop
lds
pop
add
nop
pop
ss
inc
ret
inc
adc
adc
dec
mov
mov
jnp
push
push
dec
sbb
adc
mov
mov
mov
mov
insb
enter
add
repz
sbb
sbb
in
inc
push
pop
or
mov
out
push
mov
inc
xchg
jmp
mov
cmp
cmc
jae
mov
jecxz
adc
add
cld
aam
cmp
sbb
sub
mov
scas
loop
das
dec
sbb
loopne
int3
inc
lret
or
test
xor
cmc
fwait
test
xor
push
out
shlb
or
xor
repnz
mov
sbb
xchg
fdivrl
out
test
push
ljmp
mov
repnz
mov
nop
fstl
xor
stos
push
fwait
push
dec
fmulp
std
jnp
cmc
pop
jo
hlt
mov
pop
mov
pop
add
xchg
insb
mov
jmp
enter
and
addr16
outsb
jmp
pop
fdivs
int3
dec
fsubrs
daa
push
jbe
sub
mov
andl
movsb
sub
stc
or
outsb
inc
push
jl
jmp
push
sti
push
fnstsw
and
mov
cmpsl
push
mov
lahf
push
hlt
xor
ror
mov
dec
cmc
add
arpl
mov
or
iret
notl
outsl
push
mov
call
sub
mov
add
lret
cmp
pop
inc
jecxz
or
push
and
dec
mov
or
fldl
cmp
movsl
arpl
adc
inc
insl
lea
bound
adc
mov
push
imul
stos
stos
cmp
cmp
inc
jae
call
push
pop
in
test
xor
push
push
stos
imul
xchg
fistps
mov
test
clc
es
imul
int3
das
fwait
insb
lcall
inc
scas
jmp
ret
mov
xor
sti
adc
add
fdivl
cmp
das
rcrb
fcomps
pushf
pop
imul
sub
les
push
scas
jb
scas
outsl
and
jnp
dec
mov
and
outsl
mov
inc
ret
stos
mov
pop
and
divb
and
xor
mov
int3
mov
stos
stos
jne
test
jg
and
and
cmp
sub
inc
mov
sbb
call
mov
mov
js
fwait
aad
dec
sbb
outsb
movsb
dec
mov
std
cmp
lcall
repz
movsl
lcall
mov
popa
jb
xor
sub
cmp
fstp
mov
ret
sub
das
mov
mov
jb
dec
call
jmp
shll
loopne
fwait
dec
jae
in
mov
jp
outsl
leave
xor
js
leave
rol
xor
mov
test
out
jecxz
bnd
cmpsb
lods
jp
mov
jne
movsl
cmc
xor
or
push
dec
pop
cmp
enter
cmp
mull
add
das
in
and
cmp
pop
cmp
mov
les
jg
fwait
mov
out
movsl
jnp
mov
jp
mov
xchg
mov
ficompl
sbb
inc
inc
add
mov
dec
adc
push
hlt
mull
dec
inc
xchg
push
faddl
test
cmpsb
mov
mov
mov
xchg
fstp
scas
and
aam
push
rcrl
lods
inc
into
imul
bound
icebp
jae
ljmp
insb
mov
mov
lret
movsb
decb
mov
xchg
arpl
lock
jp
inc
shrb
fwait
out
cli
shr
icebp
mov
fcoms
xchg
push
inc
mov
lods
jne
pop
xchg
sub
xchg
jl
adc
jp
xor
adc
push
lahf
sub
test
push
lcall
incb
filds
pop
add
movsb
gs
dec
daa
push
inc
xor
jbe
jno
jnp
push
sub
jmp
or
mov
dec
clc
imulb
fstpl
fisubs
ljmp
jecxz
and
loopne
fdivrs
push
push
dec
arpl
lods
int
inc
lahf
sub
lods
xor
stos
jle
push
lods
sub
out
sbb
mov
mov
and
adc
hlt
repnz
mov
test
ja
sarl
loope
pop
pop
add
mov
push
push
mov
xchg
xchg
shrb
in
das
sahf
ret
xchg
mov
cmp
push
cwtl
sub
in
jmp
jg
jb
dec
insl
push
jnp
mov
jae
cmp
bound
add
mov
xchg
aas
rcll
std
ret
mov
icebp
inc
in
pushf
mov
jmp
cmpb
jg
dec
hlt
jle
add
rcl
fisubrl
xchg
imul
divl
sti
out
jo
adc
xchg
dec
rorl
dec
in
or
xorb
fistpll
cmp
push
imul
push
xor
bound
sbb
es
les
fs
mov
xor
imul
cli
arpl
je
imul
push
out
stos
push
mov
push
push
or
cmpxchg
inc
fwait
and
dec
sar
add
xchg
or
xor
inc
mov
loop
icebp
push
xor
jns
xor
push
mov
pusha
lds
cmpsb
gs
cwtl
cli
xchg
int
adc
jno
addr16
push
dec
scas
out
pop
testl
cwtl
mov
pop
addl
jge
scas
mov
insb
jo
push
loopne
jp
cwtl
arpl
xchg
or
add
mov
popa
sub
bound
xor
add
inc
sbb
jae
adc
scas
loopne
dec
or
mov
mov
adc
fiaddl
pop
shrb
dec
jbe
and
sbb
or
cmp
insb
xchg
mov
in
ror
mov
ds
cmp
aam
movsl
sti
pushf
sti
push
lods
cmp
jmp
sti
fdivrp
pop
xchg
in
jo
push
or
out
mov
dec
or
mull
and
sbb
xchg
mov
fwait
inc
mov
cmp
mov
mov
scas
push
loope
das
cld
or
push
jmp
ret
jb
subb
clc
hlt
push
idivb
jg
jne
pop
push
shlb
fwait
popf
int3
sub
mov
pop
addb
inc
jbe
loope
insl
push
mov
bound
jbe
xchg
fildll
mov
inc
jae
adc
rep
cmp
sbb
hlt
or
ljmp
outsb
mov
daa
movsl
xor
sbb
fnstsw
loop
cli
div
pop
mov
mov
ds
icebp
or
das
jp
sbb
dec
fldenv
data16
cltd
or
mov
add
movsl
cld
pop
es
inc
mov
mov
dec
andb
ret
jl
es
jmp
mov
fsubs
popa
mov
and
es
jg
sub
jbe
hlt
cmp
pop
push
mov
or
jno
mov
or
cwtl
lea
jno
cli
push
pop
jb
pusha
ja
outsl
lret
jne
das
sbb
and
mov
inc
xchg
pushf
repz
pop
fadds
into
dec
les
add
mov
in
adc
shll
jb
add
outsb
insl
repnz
mov
dec
clc
mov
test
pop
dec
sub
loop
lock
mov
push
xor
adc
jnp
pushf
or
sbb
fwait
adc
add
mov
dec
inc
xchg
fcoms
fstl
and
mov
jle
in
rolb
adc
adc
xor
push
loop
stc
dec
xchg
stos
sub
pop
pop
scas
inc
fcomp
push
aas
dec
addb
call
jne
pop
shll
push
mov
test
ret
jb
fisttpl
leave
fisubl
jo
incl
loopne
lock
icebp
cltd
add
push
insb
add
xor
dec
lods
xchg
rcr
sub
or
out
les
das
jl
mov
xchg
push
leave
push
pushf
lea
dec
jg
jle
jo
push
leave
gs
push
sbb
or
out
cmp
andl
cmp
jo
aam
adcb
pop
dec
xchg
mov
mov
les
pop
in
pop
pop
sub
push
mov
movsb
pusha
dec
push
sub
xchg
or
cmc
sub
je
sub
and
push
mov
dec
sub
into
pop
mov
inc
inc
addr16
xchg
sub
jge
push
add
xchg
int
outsb
jecxz
lods
sbb
jno
movsl
into
in
sbb
xor
roll
add
cmp
mov
mov
or
insb
fwait
fwait
xchg
mov
cmpsb
pop
pop
add
arpl
mov
movsb
insb
push
dec
stc
jno
push
paddusb
xlat
mov
adcl
leave
dec
cltd
push
sahf
dec
xchg
mov
lock
hlt
adc
mov
jnp
daa
sbb
sbbb
outsl
add
aaa
jno
icebp
in
inc
adc
sbb
lahf
jne
or
ss
ffree
inc
cltd
cwtl
push
pop
xchg
xchg
xlat
js
mov
sbb
leave
push
inc
xor
aaa
push
mov
jecxz
je
adc
shll
out
inc
adc
xor
es
jg
movsl
fnstcw
and
test
push
pop
inc
mov
stos
imul
in
loopne
mov
inc
sbb
xchg
mov
sbb
add
shlb
vunpckhps
xchg
add
loope
lret
jo
jo
cmp
hlt
dec
mov
jnp
inc
movsl
movsb
test
imul
add
push
jne
int
xchg
loopne
arpl
loope
sub
lods
fwait
nop
adc
in
iret
sbb
inc
mov
add
dec
cmpl
and
mov
mov
jbe
dec
clc
popf
xchg
cmc
je,pn
xchg
pop
adc
sbb
push
shrb
scas
rclb
cmpsl
and
je
mov
and
adc
mov
sub
ja
aam
mov
aam
ror
add
jmp
jae
call
xor
pop
jecxz
addr16
loope
in
in
push
adc
xchg
adc
test
inc
inc
pop
or
loop
fstps
jmp
xchg
push
int3
push
dec
xchg
das
pop
xchg
jo
pop
leave
aaa
jmp
and
in
rclb
insb
and
push
dec
enter
xor
dec
imul
lret
bound
jno
push
xchg
adc
fdivrl
mov
lret
out
mov
and
lcall
ret
jge
dec
jbe
pusha
loope
jp
and
lretw
inc
lret
lods
out
jo
mov
jle
enter
ror
inc
ret
dec
ss
lret
fisubrs
or
pop
imul
jge
fcompp
push
dec
sub
aam
jnp
lret
mov
pop
jae
lcall
mov
sbb
mov
not
movsb
pop
push
mov
call
jbe
pushf
call
cmp
cli
arpl
ja
or
xchg
cmp
push
sbb
push
dec
mov
roll
mov
adcl
imul
and
xor
aad
in
int
pop
arpl
cmp
fmul
sbb
xor
or
dec
sbb
shlb
arpl
jbe
jle
adc
xor
jecxz
xlat
rclb
insl
cmpsb
and
pop
cmp
jb
mov
adc
lea
cmp
int3
rclb
mov
mov
movsb
js
xlat
cs
push
jecxz
movsl
push
pop
nop
pop
pop
or
test
jbe
mov
lds
mov
mov
mov
pop
push
mov
or
icebp
jne,pt
das
loopne
mov
sub
push
cmpsb
pop
ljmp
sti
outsl
mov
int
jbe
adc
nopl
ds
pop
or
ret
inc
mov
jae
insb
ret
stc
out
aas
push
insl
pop
cmp
arpl
test
jb
push
insb
jae
mov
fmuls
or
jge
fmuls
mov
push
add
dec
push
sbb
ret
jecxz,pt
ds
adc
clc
jl
insb
inc
flds
sub
jmp
in
mov
add
jb
es
iret
ds
bound
jno
lods
daa
fcoml
imulb
jae
cmp
push
sub
scas
repnz
add
and
or
jl
aam
test
clc
mov
notb
inc
jne
jae
push
sbb
divl
std
subb
add
mov
or
mov
jge
stc
sti
movsb
in
cmpsl
and
imul
mov
mov
push
dec
xchg
mov
mov
or
adc
mov
cmp
fisubrs
cltd
mov
add
lods
das
cs
fbld
dec
faddl
jnp
jmp
in
ret
sub
push
fiaddl
loopne
ret
adc
mov
sarb
push
mov
arpl
jo
rcrl
mov
fs
aam
loope
xor
decb
dec
mov
or
pop
repnz
fwait
out
pop
inc
jne
mov
xor
push
jmp
jo
or
push
push
push
imul
sarb
clc
and
out
jg
fstl
xor
lds
add
push
das
lcall
and
pop
leave
adc
icebp
pushf
mov
inc
sahf
pop
mov
stos
cmpsl
stos
dec
inc
jp
enter
jne
mov
pop
gs
jnp
mov
dec
adc
xor
out
jo
lock
push
sub
xchg
in
movsb
es
hlt
xchg
cmp
loopne
pop
test
out
lret
lret
xor
mov
add
and
or
mov
lds
jae
outsl
mov
mov
jo
mov
mov
adc
push
lcall
dec
pop
ret
push
push
pop
xchg
mov
out
cmp
xchg
fsubl
sahf
movsl
dec
or
mov
push
rcr
imul
repnz
ljmp
jmp
push
addr16
int
call
ss
fs
mov
repz
pop
fildll
and
sarb
std
daa
inc
xchg
out
mov
dec
lods
pop
sub
jl
rdpmc
sub
das
shll
adc
icebp
popf
adc
test
loope
push
xchg
xor
gs
dec
fs
fcomi
dec
ds
adc
dec
or
sub
je
aam
mov
movsb
aaa
aaa
push
bound
cmp
jns
sub
cmp
inc
xchg
add
sub
mov
adc
cwtl
push
addr16
and
data16
cmp
sub
shlb
iret
fwait
adc
inc
pop
jmp
sbb
andb
lret
add
push
leave
fnsave
xor
imul
pushl
test
and
sub
push
mov
mov
cmp
shrb
call
mov
out
adc
inc
mov
rcl
dec
lods
bound
dec
aam
and
sbb
push
mov
and
sub
sub
lods
pop
mov
pop
fnstenvs
ficompl
cli
and
cltd
jns
xchg
inc
add
addr16
sbb
or
and
dec
jmp
xor
pop
icebp
push
stos
lcall
xchg
xchg
imul
jmp
jl
mov
mov
mov
cmp
lcall
xchg
jl
add
iret
sub
mov
nop
rcrb
xchg
cmc
jae
mov
sbb
pop
sub
popa
push
xor
push
sub
out
cmp
mov
or
mov
aam
cmp
out
cmp
aam
dec
or
mov
imul
sub
mov
push
adc
jl
and
sbb
mov
leave
mov
out
add
pop
push
out
jle
mov
xlat
fldt
xchg
bound
clc
das
adc
dec
and
call
nop
mov
loopne
push
aaa
jecxz
xchg
nop
dec
popf
pop
in
sbb
outsl
or
push
mov
and
test
mov
jmp
in
stc
fisubl
ljmp
push
sub
jns
aas
fnstcw
rcl
dec
pusha
into
push
out
dec
push
mov
inc
cmc
sub
jp
or
mov
fs
inc
pop
sbb
popf
cwtl
loopne
xor
sar
insb
out
in
jecxz
and
aam
xchg
out
push
mov
inc
inc
add
lods
fisttpl
or
push
pushl
std
pushf
insl
push
jg
mov
add
mov
dec
out
cmp
inc
inc
xchg
aaa
testl
ret
in
mov
aaa
loop
adc
adc
in
mov
lods
and
ret
lcall
and
dec
mov
push
out
mov
movsb
xor
push
or
shl
dec
mov
or
cmp
mov
scas
dec
or
fisubrl
cmp
inc
or
cmp
lock
dec
in
mov
sahf
in
dec
cmc
mov
xchg
dec
or
jns
std
test
outsb
mov
inc
jge
push
pop
fmull
shll
jb
bound
rcr
pop
test
cwtl
cmp
shll
icebp
push
mov
mov
mov
pop
push
mov
pop
push
fldcw
testb
xchg
inc
dec
push
fucomi
and
mov
or
or
jmp
jae
repnz
iret
ljmp
xlat
sub
pop
xchg
push
insb
loopne
mov
add
push
out
movsb
mov
test
push
hlt
in
xorb
daa
cmc
fmuls
mov
out
add
push
stos
xchg
int
mov
cmpsl
push
xchg
bound
push
fldt
in
movsb
xor
pop
push
js
xor
ror
sahf
ja
cmpsl
sbb
and
adc
jb
nop
shrb
rolb
pushf
adc
mov
push
push
aaa
pushf
push
push
sub
push
mov
add
aad
jns
mov
das
sub
sub
js
leave
sbb
orl
sub
in
ljmp
faddl
push
jne
and
das
jne
sbb
cmp
jno
jle
pop
mov
xor
movsb
sub
push
dec
call
sub
test
pop
sub
or
mov
jo
pop
lea
sub
inc
cs
xchg
sub
sub
inc
hlt
jns
adc
leave
movsb
mov
call
test
inc
or
lret
test
jge
arpl
call
mov
adc
xor
inc
fadds
loopne
mov
sti
push
and
and
scas
dec
out
stos
cmp
bound
rolb
jae
das
xor
pushf
mov
cmpsl
dec
xchg
adc
dec
movsl
or
cld
adc
out
or
cs
push
insb
scas
or
add
jge
xchg
push
inc
imul
outsb
fisttpl
ljmp
sub
outsb
fisttpll
repnz
aam
sub
or
in
jns
sub
jns
mov
clc
fiaddl
mov
xchg
cmpsb
icebp
add
sbb
jmp
mov
pop
jle
pop
push
mov
or
popf
push
scas
jmp
stos
jecxz
fs
mov
mov
and
pop
decb
push
mov
leave
lods
mov
dec
stos
push
outsb
ljmp
movsl
repz
mov
ficomps
cmpsl
repz
cwtl
and
in
xchg
pop
fistps
add
data16
test
scas
ja
ret
mov
gs
jle
adc
repnz
and
push
adcl
dec
adc
sbb
dec
or
ret
push
cltd
clc
xor
repz
mov
imul
rcrb
in
xor
lea
pop
sti
mov
and
cmp
scas
xchg
or
adc
sub
jns
divl
lock
fwait
inc
jle
and
xchg
rcl
mov
lods
fistl
pop
jecxz
adc
push
cmpb
hlt
scas
and
ja
je
test
or
mov
pop
sbb
stc
mov
data16
lahf
xchg
pop
aad
mov
xor
jno
push
ljmp
push
sti
jl
and
std
dec
mov
sub
movsl
dec
cld
sbb
xor
ja
add
cmp
arpl
xchg
sbb
pop
ds
cmc
es
in
into
inc
test
push
repz
mov
add
mov
jnp
pop
out
icebp
sarb
push
ffree
pusha
push
int
ja
xor
data16
scas
mov
test
negb
sbb
add
mov
sub
stos
in
add
shll
hlt
and
mov
cmp
push
loope
cmp
ficoml
daa
xlat
inc
test
andb
je
mov
jne
sub
js
rcll
movsb
and
add
xchg
nop
scas
and
imul
jns
and
adc
sub
jns
ficoms
mov
sbb
and
es
bts
push
inc
mov
mov
or
inc
push
or
xchg
lods
dec
add
cmp
push
adc
adc
inc
scas
roll
jge
std
lods
cli
cmp
inc
adc
aam
push
sub
or
push
ficomps
ds
cld
xchg
jge
in
dec
add
add
jae
mov
sub
dec
out
sbbb
ss
fs
sub
add
ljmp
divb
ss
or
sbb
sub
ss
insl
mov
jp
int3
mov
mov
scas
outsl
out
insb
aas
pushf
mov
mov
push
aam
and
fwait
mov
mov
pusha
das
outsl
sbb
popf
aaa
or
in
and
or
clc
stos
loopne
es
shrl
andl
inc
jb
jp
jnp
shrl
pop
popf
pop
xor
ss
dec
inc
es
push
andb
arpl
fiadds
leave
rcr
sar
outsl
aad
popf
movsb
and
or
fisttpl
mov
xor
jnp
inc
sub
or
jae
popf
push
test
or
jbe
jmp
int
add
stos
std
rorb
sub
xchg
insb
pop
cmpsb
sub
add
jge
addr16
out
cmpsl
add
sbb
push
leave
scas
mov
fistpl
roll
jae
pop
sbb
inc
pushf
es
outsb
out
xor
mov
push
es
xchg
xchg
leave
inc
int3
jb
mov
in
cmp
arpl
and
or
push
lahf
fs
adc
push
adc
xor
jne
jl
cmc
insl
loop
push
cmp
hlt
mov
cmp
inc
pop
dec
clc
outsb
nop
pushf
push
inc
jl
jb
movlps
and
pushf
add
mov
dec
dec
fistpll
dec
adc
dec
inc
pop
pop
sub
pop
jbe
dec
adc
test
dec
lcall
or
pop
pusha
lahf
jle
push
icebp
sbb
orb
call
mov
stos
mov
mov
test
nop
pop
mov
pop
into
pop
lods
and
xchg
ret
loope
ss
int
mov
jp
pop
adc
or
aam
icebp
mov
jecxz
out
sub
add
cld
call
cs
pop
aam
sbb
outsb
jmp
push
inc
xchg
popf
and
jo
dec
scas
jmp
mov
lea
and
test
add
pop
lea
adc
adc
sti
adc
or
or
adc
fadds
mov
aas
inc
lods
lret
cmp
mov
jge
lcall
movhps
fildll
sub
add
negl
xor
lret
mov
sar
js
mov
xor
mov
lods
jae
out
stos
out
icebp
fwait
adc
out
xchg
testb
je
mov
dec
dec
dec
cmp
pop
pop
stos
mov
ds
int
mov
push
sar
addb
sbb
jbe
cmpsb
dec
mov
jmp
mov
dec
xchg
pusha
and
scas
icebp
push
faddl
stos
mov
pushf
test
fldcw
fistpll
jl
add
inc
add
xchg
lods
and
addl
ja
cmp
or
jp
orl
lahf
rorl
xor
sbb
mov
push
inc
adc
loope
data16
adc
adc
sahf
pop
out
xchg
jmp
push
movl
or
lret
pop
mov
pop
in
pop
fadds
dec
mov
mov
cmp
mov
inc
jbe
addr16
stos
or
dec
dec
outsb
aas
daa
xchg
add
les
pop
int
add
pop
adc
dec
fld
nop
ja
add
dec
sub
aaa
jle
xor
stc
fdiv
aad
xor
add
stos
movsl
mov
stos
cwtl
mov
mov
and
sub
pop
xchg
shll
rcr
fsubs
push
push
xchg
inc
adc
adcl
dec
cmp
sti
or
jb
rcll
sbb
and
sub
pop
sub
cmp
cmp
into
mov
bound
les
sub
lods
aam
inc
mov
sbb
dec
dec
pop
mov
sub
or
jno
jo
mov
adc
stos
sbb
and
repnz
add
iret
xor
push
je
cmp
ret
push
xchg
dec
ss
lahf
popa
push
cmpsl
ffreep
add
xchg
es
es
mov
leave
fdivrl
dec
sbb
xchg
out
aad
sbb
icebp
push
icebp
fidivs
cmp
enter
scas
stos
mov
sub
int
rcr
stos
sbb
ljmp
add
sub
int
fs
mov
jge
pop
jae
adc
cmp
add
add
jle
cmpl
xchg
jecxz
pop
adc
or
mov
scas
cli
mov
mov
je
je
add
dec
sbb
xchg
xor
pop
rorl
dec
mov
fucom
adc
mov
mov
mov
xor
rorl
cmc
dec
and
je
xor
inc
mov
sub
jae
es
idivb
cli
inc
and
mov
pop
xchg
std
nop
push
adc
push
mov
in
fs
cmp
sub
ss
fldcw
add
fisttpl
or
hlt
mov
xchg
dec
test
icebp
cmpsb
jge
or
xor
mov
push
loope
or
loope
sub
aad
cmc
and
jmp
inc
pop
sar
sbb
sar
sbb
sub
pop
mov
fisubrs
xchg
repnz
aam
outsb
sub
movsl
std
idivl
shll
cmpl
loope
popf
jp
sbb
add
jle
iret
push
mov
xchg
int
dec
cmp
add
scas
cltd
push
fbld
push
pop
cmpsb
loopne
gs
popa
cmpsl
pop
jb
xchg
lret
push
push
mov
mov
push
mov
aad
adc
fsts
subb
mov
xor
int
and
lahf
out
inc
dec
xchg
mov
lret
push
outsl
push
jae
sub
imul
jno
mov
mov
in
xchg
jns
scas
aam
ss
int
sbb
cld
outsl
clc
je
fcmovnb
sbbl
mov
test
mov
es
add
xor
jle
xor
mov
xchg
fwait
in
lahf
pop
pop
push
xchg
sbb
inc
or
sahf
pop
cmp
jmp
test
iret
fs
out
mov
out
out
cmp
fdivr
andb
xor
testb
cmp
adc
pop
mov
mov
mov
cmp
sbbl
jl
fs
dec
push
andl
add
stos
mov
stos
mov
sbb
cmpl
mov
loop
jp
data16
insb
or
hlt
fstl
sbb
cmc
movsb
pusha
insl
mov
sub
or
mov
adc
inc
iret
add
test
shll
shl
js
movsb
mov
dec
hlt
popf
sbb
loope
mov
daa
push
jecxz
sbb
ljmp
jae
les
add
lock
xor
mov
cld
jb
ret
aaa
mov
iret
add
add
stos
test
movsl
daa
inc
and
jns
dec
push
and
daa
fsubr
push
mov
repz
je
mov
outsb
push
sbb
xlat
sbb
in
stos
cld
es
addl
push
sub
lret
inc
jo
push
sbb
mov
cwtl
or
ret
or
mov
popf
loopne
mov
pop
or
pop
je
nop
cmp
and
inc
pop
push
mulb
dec
iret
sub
cmp
outsb
adc
and
xchg
xchg
adc
out
cs
out
rcrb
aas
testb
test
rcl
sbbb
aam
lret
or
sarb
push
mov
sahf
je
pop
imul
sbb
fnstcw
enter
pusha
cmp
mov
xchg
mov
or
and
bound
ja
arpl
cs
mov
out
mov
lods
cmp
loop
inc
sbb
aad
int3
insl
xchg
ret
push
pop
jecxz
mov
or
nop
or
andl
jne
mov
push
mov
outsb
pop
lahf
pushaw
cld
sbb
les
cmpsb
loop
ss
jbe
inc
aam
stos
xchg
xchg
loop
call
mov
ds
loope
leave
repnz
or
jmp
jbe
ja
loopne
pop
mov
lods
mov
mov
adc
es
xorl
nop
mov
lret
ret
faddl
mov
outsl
aam
clc
aam
mov
loopne
xor
jne
dec
cmp
and
fnstenv
fs
jle
fcmovb
repz
lods
sbb
lea
dec
es
add
jle
lret
jnp
xchg
aas
adc
dec
negl
lods
dec
js
insb
sbb
leave
mov
ret
inc
call
cltd
les
or
add
rolb
lods
jge
push
and
fcmovu
pusha
xor
aaa
mov
xchg
repnz
jl
jae
adc
lds
test
xchg
dec
leave
bound
or
loope
sbb
in
add
mov
dec
sbb
iret
sub
ss
cld
push
mov
lahf
dec
es
mov
mov
cmp
pop
sbb
mov
sbb
icebp
clc
push
pusha
jne
frstor
cwtl
dec
cmp
push
push
leave
enter
and
lock
mov
push
sub
or
and
sub
jnp
and
and
or
sar
adc
roll
lea
adc
mov
mov
out
mov
scas
lock
lods
jg
mov
stos
movsl
jns
pop
cltd
ret
ficompl
es
cwtl
push
sbb
aad
fcmovnu
gs
dec
aaa
test
sbb
dec
int
cmp
pop
or
daa
push
sbb
leave
push
sahf
repz
jae
mov
lret
test
fwait
int
xchg
adc
fstl
adc
adc
pusha
into
mov
jbe
in
hlt
ss
fistpll
inc
and
push
cld
inc
push
add
in
pusha
adc
push
inc
sbb
pop
stc
push
inc
jle
out
and
js
push
lcall
xchg
sub
into
leave
sub
mov
in
sahf
loopne
sbb
and
orb
aad
test
gs
dec
lea
test
adcb
aam
cmp
cmpsb
mov
call
lret
test
or
scas
lea
cmpsl
mov
loope
insl
lock
xchg
mov
xor
bound
inc
xchg
out
dec
cwtl
pop
std
imul
aaa
iret
push
jg
or
pop
cmp
je
lret
jne
cmpsb
adc
add
xchg
inc
clc
imul
push
sbb
std
jno
in
jp
sub
xchg
out
mov
ljmp
pop
add
into
xor
cmp
std
jg
or
jbe
jle
ss
adc
inc
fs
xchg
daa
loopne
ror
aam
or
jns
pop
jg
inc
outsl
add
mov
or
mov
cltd
je
stos
sub
inc
mov
sub
addr16
mov
push
add
int3
dec
outsb
ja
pushf
xchg
enter
movsb
cltd
inc
out
fbstp
repnz
into
sahf
cmp
adc
xor
mov
das
in
ja
out
in
add
pop
push
or
add
les
mov
pop
icebp
xor
adc
pop
les
and
pop
pop
arpl
mov
cmc
cmpsl
mulb
add
mov
in
pop
adc
adc
adc
adc
sti
bound
cmp
jecxz
xor
ljmp
movsl
mov
or
pop
jmp
push
negb
js
cltd
mov
insl
imul
pusha
ret
and
dec
mov
mov
pop
clc
subb
fists
repz
xchg
jmp
push
js
addr16
aad
xchg
xchg
fimull
pop
jne
test
out
jmp
xor
out
aam
sub
movsb
scas
and
and
add
leave
es
flds
dec
into
in
inc
xchg
sub
jg
mov
xchg
and
lea
repnz
xor
and
cmpsl
xchg
mov
mov
mov
inc
fiadds
dec
lea
mov
lods
xchg
fiadds
push
mov
mov
dec
lock
push
arpl
and
push
pop
in
sahf
out
lods
dec
jg
adc
pop
sub
repz
in
and
sti
inc
addr16
push
test
sbb
jns
sbb
cltd
jne
cmpsb
jbe
std
icebp
or
fiadds
mov
out
dec
inc
test
mov
dec
sahf
jns
jl
adcb
sti
xor
sahf
cld
or
pop
dec
sbb
dec
inc
mov
push
sbb
add
or
xor
fmull
mov
enter
mov
stc
adc
addr16
sub
loop
in
out
mov
cmovp
adc
shlb
xchg
ljmp
sub
in
and
fcomi
les
cmp
dec
dec
or
aas
or
dec
mov
xor
add
dec
stc
nop
cmp
je
icebp
sub
xor
inc
mov
inc
or
cmc
fnstsw
push
and
mov
mov
dec
dec
test
fistpl
test
and
ljmp
ficomps
aaa
call
testb
jl
xor
mov
add
lds
cmp
xchg
xchg
sbb
dec
rcll
lret
xchg
fisubrl
push
jmp
cltd
sub
xlat
cmpl
adc
loop
push
ljmp
arpl
cmovs
cmp
int3
ja
ja
sbb
jg
repnz
scas
adc
aaa
jge
out
arpl
mov
pop
mov
push
les
xchg
outsb
lods
movsl
cmp
jo
jecxz
push
xchg
int3
out
aam
adc
sarl
xchg
pop
xchg
xchg
or
push
ficoms
fs
adc
mov
xor
lods
int
or
add
stos
xchg
hlt
or
adc
xchg
push
dec
sbb
fisttpll
and
nop
xor
mov
int3
xchg
sbb
cmpb
dec
jns
cmpsb
rolb
es
or
lea
add
mov
push
or
dec
sub
xchg
push
fwait
jle
mov
js
lahf
test
mov
pop
dec
cmpsb
fwait
out
xchg
add
jo
in
mov
pop
ds
rcrl
cs
jecxz
and
je
xor
and
and
ret
ja
push
andb
push
and
adcb
aas
outsl
cmp
int
lcall
lea
push
fldcw
cmp
inc
inc
test
jnp
fstpt
dec
inc
adc
daa
iret
mov
xchg
cmp
push
jne
ret
sbb
xor
popf
push
loop
mov
arpl
jp
lods
out
inc
out
bound
out
jge
sbb
cli
ficompl
jns
adc
fxch
or
mov
lcall
scas
sbb
jg
iret
push
rcll
xchg
loope
es
and
pusha
mov
add
jb
xor
mov
cwtl
mov
mov
daa
push
jnp
push
cmpsl
add
mov
pop
call
jno
jb
push
xchg
xor
fnstcw
loopne
sahf
in
adc
repz
outsb
rcll
dec
les
shr
ljmp
nop
mov
cmp
xor
rol
dec
xor
js
sub
hlt
adc
xor
add
jbe
fwait
push
jbe
scas
fdivrs
loope
jne
add
dec
movsb
sbb
xor
dec
adc
rcl
bound
adc
mov
shrb
sbb
push
adc
pop
imul
inc
sti
lret
mov
sub
imul
adc
jnp
push
sub
push
inc
xor
mov
mov
and
pop
dec
mov
add
insb
and
mov
cld
cltd
out
jo
jecxz
test
pandn
sbb
shr
push
pop
fsubp
mov
ss
popf
xor
cs
rcll
shll
les
lahf
andl
xchg
scas
xchg
dec
or
jne
xchg
mov
jb
mov
lret
aas
insb
xchg
dec
out
shl
jno
repnz
loopne
pop
lock
jmp
std
xchg
or
mov
loop
xchg
and
mov
dec
cmp
pop
rcll
pop
and
sbbb
xchg
outsl
daa
jne
inc
enter
add
idivb
fsubrl
jge
sti
cmc
sub
mov
fucomip
push
jl
xlat
stc
lahf
je
push
mov
and
nop
cmp
xor
rorl
in
js
push
lock
inc
lret
push
xor
mov
imul
xlat
or
test
sub
mov
add
mov
fs
or
xor
imulb
gs
clc
fistpll
clts
mov
insb
loopne
rep
mov
shl
sarb
in
push
mov
subb
stc
adc
fisttps
xchg
in
pop
int3
cwtl
jl
cmp
xchg
xor
int
stc
test
imul
cmp
push
out
mov
push
inc
sub
add
lods
or
repnz
enter
testl
repnz
popa
int
ljmp
mov
jp
or
rcrl
into
roll
xchg
jg
cld
movsl
xor
outsl
insb
xchg
push
or
xchg
dec
inc
sbb
jbe
sub
cmp
lret
adc
pop
mov
imul
xchg
mov
vucomiss
imul
je
int
in
ja
ret
or
mov
cwtl
scas
adc
neg
jmp
loopne
sub
xor
scas
and
push
cmpl
cmp
int
fistl
push
pushf
pusha
rclb
mov
sub
out
test
jge
mov
repz
adcb
js
dec
lcall
adc
and
out
aas
mov
sub
cmp
popa
adc
fisttps
into
scas
lock
sarl
daa
inc
pusha
push
iret
mov
clc
pop
lcall
pop
imul
sub
insl
inc
leave
pop
icebp
sbb
ret
mov
je
imul
sbb
subb
inc
inc
sbb
std
imul
std
and
and
xor
imul
bound
dec
inc
and
int3
enter
xchg
movsl
mov
pop
xor
or
loop
jb
sub
mov
arpl
in
push
push
andb
lock
pop
sti
ret
and
pop
daa
pop
jnp
sbb
aad
je
call
xchg
mov
ds
push
sbb
out
cs
mov
loope
dec
shll
mov
jnp
mov
inc
insb
lcall
inc
add
adc
dec
sub
aam
rclb
xchg
sub
inc
icebp
push
pop
sbb
adc
es
push
push
mov
sti
xor
cld
adc
test
jmp
sbb
or
sti
test
out
xor
daa
fstps
ljmp
mov
push
mov
mov
shl
lcall
in
out
popf
xchg
or
popf
and
dec
jmp
js
scas
icebp
cmc
pop
push
movsb
pop
dec
pushl
jnp
jecxz
sbb
sub
dec
add
push
dec
mov
or
sbbb
lds
lds
pop
mov
push
scas
xchg
je
jl
clc
cli
out
sbb
mov
test
push
out
pop
sbb
dec
mov
inc
xchg
sub
mov
push
pop
ds
int
lret
aad
or
xchg
jnp
fxch
fists
out
jmp
inc
lea
dec
lcall
xchg
loopne
inc
lock
aad
mov
jns
cmovnp
jp
pop
cmp
xchg
out
mov
sbb
jmp
add
in
or
inc
sbb
adc
adc
mov
cltd
in
mov
out
push
aaa
or
stos
pop
icebp
ret
push
adc
bswap
cs
push
mov
adc
push
pop
lea
test
xchg
mov
repz
out
outsb
and
xor
dec
insb
rcrl
adc
popa
mov
lret
xlat
cmpsl
dec
or
out
lock
mov
incl
test
js
je
rcll
jno
cmp
call
jecxz
mov
adc
xchg
jae
push
inc
mov
dec
mov
leave
mov
fisubrl
mov
and
xor
pop
jae
pop
fidivs
push
daa
jg
sbb
mov
push
xchg
data16
inc
or
lods
call
in
leave
pop
imul
es
inc
bound
and
sub
ds
loope
dec
pop
or
add
subb
out
add
shlb
ljmp
fistl
repnz
cmp
pushf
sbb
adc
arpl
sbb
lret
aam
cmc
clc
fistpll
mov
jge
orl
int
dec
push
and
pop
pushf
push
jl
push
jb
xorl
fwait
daa
jns
inc
sbb
push
xor
xchg
loop
int3
inc
popf
rolb
xor
cmp
test
add
mov
mov
in
pushf
jo
outsl
repz
imul
sub
jge
jmp
mov
popa
push
and
xchg
enter
xor
jge
push
movsb
and
stos
lret
inc
cmpsb
pop
stos
pop
push
loop
mov
xor
sub
nop
rclb
xchg
or
dec
mov
stos
fmuls
push
es
lods
outsl
sbb
pop
movsl
divb
xor
cmc
lahf
repz
mov
jae
ja
aam
mov
sub
dec
jl
push
or
push
xor
outsb
and
dec
mov
add
and
repnz
movsl
jmp
fs
stos
loope
and
jnp
shll
and
pop
or
pop
and
int
bound
in
add
pop
aad
test
sbb
lea
ret
push
dec
lret
pop
out
dec
pop
stos
push
inc
shll
je
mov
push
mov
jle
adc
jnp
mov
or
mov
fwait
aaa
or
inc
sub
stos
popa
imul
push
mov
xor
lock
adc
adc
or
mov
adcb
jae
pop
rorl
in
cmpsl
mov
sbb
pop
inc
aam
les
mov
stos
mov
jecxz
xchg
sbb
pop
pop
lds
mov
inc
dec
fwait
repz
jl
stos
sbb
fisubl
dec
data16
shrl
mov
pushf
xchg
jbe
push
notb
jns
lcall
push
dec
je
xor
xor
push
pusha
mov
in
mov
add
pop
addr16
mov
dec
mov
int
or
shrb
sub
filds
jns
sahf
mov
loopne
and
mov
outsl
and
into
pop
xchg
std
cmpsl
daa
pop
in
sbb
mov
fs
jp
repz
outsl
xchg
call
cmp
mov
and
out
inc
lcall
orl
in
das
and
pusha
push
sbb
rcll
pusha
es
sub
adc
sub
ja
lock
icebp
adc
test
add
pop
mov
jo
addr16
lcall
jle
movsb
out
dec
aam
repnz
andb
mov
xchg
add
and
or
cltd
daa
adc
adc
add
nop
bound
mov
lock
enter
push
nop
sbb
mov
ficompl
dec
add
outsb
fxch
push
mov
add
scas
inc
adc
rorb
cmc
push
xor
xor
outsb
adc
filds
aas
or
rorb
repnz
ss
js
lcall
pop
pop
out
sbb
getsec
fbstp
push
xor
jg
rcll
sbb
inc
cld
ret
mov
ret
insb
push
testb
add
mov
or
adc
repnz
dec
int3
popa
push
aaa
mov
mov
mov
rcrl
xchg
icebp
cmp
repnz
xor
adc
arpl
int
bound
add
push
movsl
or
ret
pop
int
loope
xor
test
daa
out
andl
js,pt
imul
imul
mov
rclb
dec
pop
cwtl
aaa
xacquire
or
loope
sub
lcall
and
adc
jge
mov
sub
addr16
pop
imul
lahf
movsb
sar
dec
ret
ficoml
or
out
sub
movsl
push
ljmp
jb
mov
scas
mov
push
outsb
xchg
cmp
test
rcll
movsb
cmp
fdivrl
mov
outsl
mov
testl
mov
pop
out
inc
call
push
lods
shlb
mov
add
fistps
frstor
mov
add
or
xchg
pop
fdivrl
and
or
stos
sbb
mov
lahf
ficoml
mov
mov
sub
mov
jns
sub
jle
in
std
in
int3
pop
push
dec
rol
loopne
sarl
or
sub
lods
dec
stos
popf
dec
xchg
and
add
test
mov
imul
xchg
stc
fs
sbb
stc
jmp
in
scas
adc
xor
es
repnz
loop
inc
shll
push
out
or
lret
ret
dec
movsl
into
movsb
push
scas
mov
cmpsl
mov
sahf
je
adc
push
jnp
mov
lahf
and
xchg
add
dec
mov
ret
pop
loopne
mov
hlt
lahf
and
mov
ljmp
out
cmp
cmp
pop
jecxz
and
pop
pop
cmpsb
jl
sub
dec
mov
popa
rorl
addr16
push
push
jl
std
sbb
cld
xchg
or
scas
popf
es
fdivrl
mov
hlt
subb
sbb
mov
flds
das
add
insl
popl
cmc
lods
inc
xchg
sbb
lods
cmpsl
sub
filds
xor
xor
mov
jno
inc
sbb
and
dec
sbb
mov
xchg
test
addb
mov
mov
clc
dec
testb
fs
mov
hlt
cli
ret
cltd
jecxz
and
dec
fs
dec
jne
stos
mov
in
add
out
mov
not
pop
loope
dec
push
dec
jnp
xor
leave
je
jne
cmc
and
push
pop
dec
jae
cmp
mov
icebp
sbb
fidivs
inc
jo
mov
adc
mov
pop
cmp
in
cmp
fs
mov
pop
cmpsl
ds
cmp
fs
mov
mov
cltd
and
fbld
negb
xchg
xchg
jp
aam
adc
cmp
adc
jle
sbb
push
arpl
mov
mov
addr16
fwait
add
jecxz
mov
hlt
shlb
sub
inc
sahf
lcall
or
fadd
movsb
add
mov
and
dec
jmp
fsts
sbb
insb
pop
dec
cmp
out
and
sbb
inc
cs
and
and
adcl
arpl
jmp
flds
mov
je
ds
pop
push
sub
xchg
and
pop
sub
enter
and
jns
pop
fstl
in
pop
outsb
shrb
mov
xor
sbb
mov
mov
cmp
movsl
cli
mov
mov
sarl
mov
and
mov
mov
outsb
cs
inc
sbb
mov
mov
cmpsb
insb
scas
lds
pop
push
jl
fdivl
lds
pop
lret
enter
lret
inc
sbb
scas
inc
cwtl
and
icebp
test
or
imul
das
add
pavgb
in
xor
jge
xor
in
aad
sti
push
sub
xchg
mov
adc
sub
mulb
jne
sbb
leave
cld
aam
and
mov
pop
sbb
push
popf
push
loope
xchg
adc
push
loop
mov
pusha
and
dec
pop
mov
test
test
push
stc
mov
shll
xchg
ficoms
xchg
aas
mov
mov
mov
aas
enter
adc
xchg
or
or
mov
push
rcll
cld
jnp
aad
addr16
adc
fpatan
sahf
test
mov
in
lcall
pop
pop
xor
push
xchg
mov
gs
inc
add
push
addr16
mov
enter
repz
xchg
iret
inc
jns
cmp
dec
lods
mov
dec
push
cltd
in
xor
pop
push
xchg
cli
and
fwait
stos
jmp
xor
jns
inc
js
add
nop
dec
pop
incl
iret
imul
push
mov
stc
outsb
add
pop
je
into
xchg
add
les
int
movsb
pop
fdivp
pop
pop
imul
jbe
imul
imul
push
push
push
mov
sub
inc
and
jne,pt
sbb
stos
inc
addr16
mov
lcall
icebp
pop
mov
cmp
inc
sti
lret
dec
cs
pusha
fistpl
in
jno
sub
jae
cwtl
and
mov
pop
call
or
mul
jbe
popa
ret
cmp
scas
mov
dec
punpcklbw
and
mov
jp
repz
adc
outsb
fistpll
push
mov
jnp
push
mov
leave
das
dec
sti
xchg
mov
fsub
inc
cld
in
pop
cmpsl
push
es
mov
pushf
push
sub
inc
push
dec
in
sahf
incb
addl
sub
iret
xor
mov
int
outsl
xadd
add
adc
mov
loop
add
sub
out
inc
jns
ficoml
cs
or
jns
xor
or
jle
test
push
sbb
mov
jae
test
lods
mov
stos
xchg
cmpsb
push
jo
popa
jnp
imul
dec
mov
jnp
adc
scas
stos
scas
mov
pop
pop
movsb
mov
push
lret
out
cmp
jmp
pop
loopne
fimull
lret
out
pop
shlb
xchg
imul
out
clc
mov
pop
sbb
sysexit
repz
bound
sub
mov
loope
pop
mov
or
mov
jl
ret
stc
and
js
add
lods
mov
jge
mov
sbb
mov
push
mov
or
pop
in
add
stos
push
lret
fimuls
loop
mov
insl
pushf
aas
fwait
add
adc
ljmp
insl
sub
inc
jno
or
mov
shll
out
popf
movsl
or
xor
jecxz
add
insl
test
testb
inc
mov
mov
jmp
add
mov
ret
fidivrs
test
sbbl
inc
push
mov
jbe
sub
sub
add
arpl
pushf
sbb
fistps
js
imul
mov
out
ja
jmp
mov
adc
jmp
gs
push
xchg
pop
jge
cli
cmp
outsl
xor
testb
daa
imul
scas
sub
int
negl
out
clc
xorl
sub
sahf
adc
adc
cmp
add
cwtl
push
ss
fcmovnb
call
out
pusha
leave
mov
push
push
cld
dec
cmc
scas
push
cmp
lret
incb
out
jbe
mov
test
test
add
arpl
cmp
idivb
mov
mov
dec
popf
add
stos
mov
xor
dec
ljmp
sbb
lods
frstor
scas
add
ljmp
pop
pop
mov
test
and
lcall
push
push
adcb
dec
xchg
mov
es
flds
insb
fidivrl
pop
cmp
inc
out
arpl
jge
push
inc
testb
push
mov
insb
imul
pop
adc
xchg
xchg
jno
inc
or
mov
aad
xor
sub
inc
pmulhuw
mov
addl
mov
and
outsl
movsb
ja
pop
mov
push
inc
fmuls
pop
outsb
out
out
sub
sti
mov
push
mov
mov
inc
jle
mov
fisttps
sub
addr16
shlb
out
dec
loope
and
or
stc
xchg
cmc
clc
mov
sub
jg
test
ret
mov
sub
test
xchg
out
jns
sub
sub
pop
inc
xchg
mov
sub
andl
popa
dec
inc
push
mov
or
test
fwait
lcall
jle
jae
pushf
sti
add
sbb
in
adcb
pop
icebp
pop
mov
das
push
mov
test
into
js
sbb
mov
sub
notb
lods
adc
jp
jle
and
mov
test
int
negb
clc
mov
lret
sahf
mov
aam
xor
orl
cmpsb
sti
mov
nop
ja
and
mov
scas
bound
pop
inc
andb
sub
jmp
fstl
into
aam
or
pop
cltd
jnp
ret
mov
mov
pop
je
mov
sub
inc
sub
or
cmp
push
inc
cltd
movsb
jl
sbb
iret
xlat
push
xor
dec
bound
jae
movsl
cmp
xchg
add
add
mov
ror
jmp
cmp
cmp
pop
mov
out
stc
cld
pop
ljmp
aas
sbbl
movsl
ds
mov
aas
cmp
sbb
leave
sbb
jns
or
cltd
push
push
fmuls
ljmp
jle
sbb
mov
dec
ret
jbe
jmp
xchg
xor
push
sbb
repz
push
push
mov
insl
daa
add
push
scas
xchg
lret
pop
test
repnz
fmull
cs
cltd
enter
sbb
mov
or
ret
push
xchg
repnz
call
leave
sub
push
bnd
mov
call
or
ds
mov
std
jp
xlat
mov
sub
jnp
jle
pop
jge
pop
jp
xchg
dec
xchg
rorl
sub
mov
and
inc
scas
ljmp
lds
dec
ja
push
or
packsswb
adc
shr
pop
pusha
and
inc
sti
inc
sub
clc
inc
xlat
lock
or
sub
mov
xor
repz
mov
push
pop
jle
popf
xchg
pusha
and
incl
sbb
cmpsl
sbb
jns
push
pop
nop
and
out
lods
es
xchg
mov
rcrl
test
fcmovnb
mov
jg
fdivs
test
mov
iret
mov
fiadds
popf
mov
add
stos
inc
mov
pop
push
cmpsl
push
in
jo
roll
push
insl
cmp
lcall
add
adc
mov
push
mov
pop
repnz
mov
lock
movl
imul
imul
repnz
jmp
jns
pop
lcall
push
mov
bound
mov
push
in
cmc
jae
imul
js
movhps
mov
adc
mov
dec
push
push
ljmp
adc
pusha
lcall
inc
lods
push
mov
rep
or
or
stc
sahf
mov
fldenv
fsts
adc
hlt
dec
fsubl
sti
ss
in
ja
jo
xor
test
fst
inc
jmp
data16
pop
xchg
adc
dec
xchg
jno
paddusb
pop
movsl
inc
or
mov
ret
mov
imul
dec
repnz
arpl
mov
add
dec
xchg
adc
adc
dec
xchg
and
ficomps
inc
mov
mov
nop
hlt
movups
arpl
xor
les
mov
fistpl
sbb
push
push
fistpll
mov
and
jns
jmp
out
push
mov
adc
inc
fidivs
mov
out
mov
jmp
mov
dec
stos
dec
add
dec
outsl
scas
mov
dec
ret
mov
pop
push
es
sarb
mov
rorl
loop
jle
sbb
lds
or
push
jmp
cmp
outsb
js
pop
cmc
jmp
shlb
push
ret
lods
or
inc
mov
ffree
cltd
sub
int
popa
adc
pop
inc
jmp
cmp
mov
fstp
jb
adc
lcall
fnsave
cwtl
bound
push
pop
adc
daa
outsb
fstpl
push
aas
add
or
adcb
aaa
pop
pop
add
rorb
push
cmp
lods
or
test
dec
jae
or
or
lods
adc
imul
andl
stos
in
cmpsl
xlat
fcomps
cmp
cmpsb
mov
and
lods
inc
mov
or
mov
pop
sbb
imul
adc
push
sub
mov
lock
jo
xor
jns
add
adc
cmp
mov
sbb
movsb
and
fisubrs
subl
push
addr16
sub
pop
inc
outsl
pop
inc
movsl
movsb
fsubrl
or
jle
xchg
js
mov
jmp
mov
mov
sub
pop
fbld
loopne
add
pop
nop
mov
out
sti
notl
add
cmp
aad
jbe
les
xchg
inc
repnz
jno
addb
or
cmpsl
int
out
jne
or
fucomi
idivb
add
sbb
mov
xchg
arpl
and
sti
subb
push
lcall
ficoms
pusha
mov
adc
push
cli
cld
dec
sbb
lds
push
ret
shl
xor
in
fdivrl
test
fdivl
pusha
dec
push
test
in
cs
jp
xchg
jg
dec
pop
ljmp
jp
mov
jbe
in
mov
in
clc
std
push
mov
enter
mov
mov
je
jg
sub
cwtl
mov
lahf
clc
popf
xchg
push
jnp
adc
mov
out
jno
stos
hlt
adc
in
movsb
mov
adc
sbb
lcall
mov
pop
pop
cmp
inc
sub
fstl
movsl
and
mov
and
pop
push
push
out
sbb
and
cwtl
dec
inc
fwait
cmp
mov
test
ret
in
ja
mov
and
imul
pushf
and
sbb
cwtl
adc
pop
enter
leave
xchg
mov
cmpl
imul
loopne
push
movl
jg
inc
loopne
xor
jo
into
mov
insb
jns
dec
stos
sahf
and
pop
or
push
in
fimuls
mov
aaa
xor
add
cwtl
popf
or
mov
stc
dec
or
push
cs
jmp
sub
icebp
iret
pop
mov
push
lret
adc
sbb
mov
bound
jno
inc
repnz
push
dec
cmp
jg
mov
test
jl
and
dec
test
fstpt
arpl
or
xchg
xor
ljmp
mov
cli
dec
xchg
lods
mov
cmp
shlb
test
testl
fnstcw
bound
pop
adc
mov
sbb
push
jmp
lock
bound
add
inc
mov
jnp
cmc
fistpll
in
aad
popf
out
fisttpl
lods
aaa
xlat
in
push
hlt
int
mov
dec
cmp
xchg
adc
jne
aam
jl
aam
stos
pop
and
mov
xor
sbb
jg
adc
pop
sub
xchg
sti
adc
cs
sbbb
sub
out
cmp
cmp
dec
inc
or
inc
ds
fimull
push
rolb
cmpsb
or
jmp
fldt
ret
pop
popl
stos
mov
nop
dec
push
pop
jno
stos
in
pop
jo
int3
jnp
xor
pusha
dec
adcl
arpl
cmp
or
xchg
scas
gs
cltd
push
add
xchg
mov
sbb
fldenv
pop
mov
push
xchg
or
cmp
cmp
cmp
push
int3
sar
add
imul
xor
push
and
jno
xchg
negb
out
stos
add
test
add
int3
or
cmc
fcom
imul
fnstenv
xchg
mull
xor
jg
jmp
xor
sti
ds
jl
mov
cmpsb
movsl
scas
and
and
xor
jns
push
movl
std
subl
dec
push
mov
dec
out
and
fwait
mov
rclb
fwait
pop
cmp
mov
inc
rol
les
stos
jo
push
inc
test
jae
inc
in
les
sub
inc
cli
xchg
imul
xor
mov
or
enter
cld
xor
scas
push
je
pop
pushf
dec
scas
into
sbb
mov
push
adc
push
in
and
adc
xor
mov
xor
xlat
xchg
and
inc
out
pavgw
mov
push
cmpl
xchg
xchg
push
mov
fsts
add
lret
fistpl
lret
dec
push
mov
xchg
mov
jo
jns
ret
out
dec
and
mov
mov
pop
add
xchg
mov
pusha
push
int
std
pop
push
adc
mov
cmpsb
mov
cmp
or
bound
nop
pop
cmp
imul
dec
push
int3
xor
add
insb
mov
dec
subl
xchg
sub
jbe
repnz
jne
imul
xor
aam
fwait
adc
les
xor
jecxz
adc
xchg
fwait
outsb
pop
dec
mov
movsl
shrl
mov
lcall
fistl
mov
sbb
or
dec
xor
std
imull
and
call
rcl
pop
mov
mov
and
mov
inc
jp
xlat
dec
cmpw
add
mov
jne
call
xchg
pop
mov
inc
mov
jmp
pop
add
in
cmpsb
pusha
pop
outsb
mov
jae
outsl
cmpsb
add
pop
dec
jge
out
xchg
outsl
jno
test
jo
sub
mov
inc
pop
out
mov
mov
cmc
movl
pop
orb
aaa
pop
ret
and
stc
insb
inc
arpl
pop
xchg
pop
invd
inc
imul
xchg
mov
and
outsl
jmp
cli
push
insl
and
push
push
out
shrb
incb
xchg
aam
out
xchg
dec
test
jecxz
repz
cld
imull
gs
in
add
bound
scas
inc
aad
stos
js
and
imull
ficoms
mov
add
imul
push
mov
inc
rorl
inc
jnp
inc
add
aas
dec
scas
sbb
imul
pop
dec
aam
push
jo
xor
inc
xchg
or
scas
out
rol
shr
lcall
imul
mov
inc
push
std
jb
or
add
jmp
mov
add
mov
mov
pop
mov
dec
jbe
out
inc
hlt
jno
inc
in
push
test
scas
push
shld
lods
int3
cld
mov
cwtl
jb
loop
cmc
add
sub
jae
push
gs
sub
xchg
jns
cli
cmp
or
jp
mov
push
or
jo
dec
mov
nop
mov
test
int
push
sbb
add
mov
or
cltd
pop
pop
cmp
imul
pop
sub
bound
sti
rol
filds
fwait
mov
xchg
cwtl
js
ja
lods
xor
push
inc
mov
adc
inc
iret
shlb
sbb
push
insb
in
movsl
cmp
and
fcmovne
lahf
jbe
adc
pusha
cmp
sbb
hlt
lods
popf
jg
imul
inc
ljmp
rclb
stc
xor
cmp
in
xchg
pcmpgtw
rorb
sub
cmpsl
imul
dec
jecxz
and
movb
inc
sbb
jne
pop
jo
xor
jns
ret
aaa
aam
pop
fnstcw
mov
and
gs
mov
jbe
dec
addr16
fdivl
repnz
jns
add
and
loop
jo
fsubl
pop
mov
mov
inc
lds
push
pop
push
adcb
and
decb
sub
push
pop
mov
lods
scas
movsb
fnstsw
ss
inc
sbb
pop
add
sub
fmuls
movsb
mov
sub
or
imulb
ror
xchg
adc
inc
sub
xor
xlat
or
scas
mov
push
sbb
push
push
ficoml
dec
movsl
addr16
pop
and
mov
sbb
insl
push
xor
add
jg
sub
test
cli
and
or
mov
das
popa
mov
sub
xchg
xchg
lea
or
push
fsubrl
loop
pop
fwait
adc
xor
hlt
repnz
insb
and
mov
test
aaa
pop
stos
lods
sub
dec
lock
fcmovu
popfw
push
sub
pop
faddl
mov
or
cmp
cmc
std
fsubl
sti
mov
dec
or
fdivs
and
bound
pop
out
mov
cmp
mov
push
popf
jns
call
xchg
cmc
repnz
ds
es
cmp
lret
xchg
push
push
lea
repz
movb
flds
xor
sahf
aas
outsl
or
sar
jl
mov
sti
xchg
mov
xor
int3
ret
xchg
xor
push
test
and
addl
inc
shrl
fcoms
mov
add
andb
or
sti
or
jo
outsl
or
insl
cld
ljmp
dec
or
cmp
jno
xchg
mov
mov
cltd
dec
jo
or
sub
xor
push
ljmp
mov
fmull
push
and
xchg
mov
xor
jno
cmp
mov
test
add
pop
and
sbb
cmc
push
bound
ret
lock
push
mul
ljmp
int3
mov
pop
pop
jp
jmp
testb
mov
ret
int3
fmull
inc
adc
imul
xchg
and
test
add
fidivrs
xchg
loop
iret
push
data16
scas
mov
sbb
sub
xor
ja
mov
or
int
inc
sbb
push
in
dec
fld
inc
test
popa
movsb
jle
mov
nop
stos
xor
ficoml
mov
push
mov
inc
xor
sub
rcrb
stc
xchg
xor
inc
lods
sti
icebp
push
mov
dec
mov
lcall
bnd
xlat
sub
jno
rcrb
in
or
in
add
sbbb
or
xchg
lock
mov
ret
push
pop
in
push
outsl
inc
dec
repnz
mov
jg
repnz
stc
shrb
xchg
dec
lcall
ds
jnp
pop
ja
sbb
xor
pop
repz
pop
pusha
pop
sbb
mov
inc
fwait
pop
sti
or
scas
pop
and
aas
fs
pop
xchg
adc
add
aam
testb
lret
cmp
push
cmc
faddl
sub
enter
div
stc
enter
adc
dec
sarb
andl
bound
add
sub
mov
and
decb
sub
mov
or
xchg
ja
add
mov
push
add
mov
pop
adc
mov
sti
pop
ret
push
mov
movsb
cmc
cwtl
or
es
xchg
xlat
stos
ror
add
hlt
dec
dec
mov
imul
insb
js
data16
and
mov
ds
xchg
in
js
hlt
dec
pop
dec
dec
sarb
ss
fs
dec
sbb
rclb
mov
scas
adc
das
xorb
push
repnz
xor
pop
xchg
mov
out
pop
sub
daa
cwtl
push
push
sub
or
pop
jmp
fldlg2
or
sub
test
stos
cmp
or
dec
mov
out
iret
push
rol
cwtl
clc
hlt
loopne
roll
sub
mov
pop
inc
mov
xlat
sub
inc
push
into
stc
jo
xor
out
adc
jnp
mov
and
lret
jno
repnz
iret
pushf
int3
jns
imul
ss
add
rclb
or
inc
imul
or
mov
pop
xor
data16
pop
dec
shl
mov
lock
das
in
pop
stos
movsl
inc
enter
ret
add
xorb
cwtl
int
mov
stos
pop
sahf
pop
inc
scas
cmpsl
nop
lock
out
mov
inc
xchg
push
mov
cmp
stos
aad
mov
divl
jle
fadds
cmp
push
and
mov
xlat
fcoms
mov
lcall
sbb
pop
push
push
cmp
add
sbb
cmpsb
and
sbb
das
xorl
ds
dec
sbb
mov
and
sahf
mov
repz
mov
push
add
out
rcll
iret
in
push
mov
cmp
xor
sbb
mov
jecxz
cltd
xchg
adc
sub
pop
push
inc
adcl
push
mov
les
orl
jecxz
pusha
dec
pop
movsl
lods
mov
fucomi
cwtl
into
iret
sub
pop
sbb
inc
jp
fistps
mov
push
jae
cli
mov
pop
out
aas
lret
mov
cs
xchg
mov
mov
movb
loopne
stos
mov
ljmp
cmp
xchg
loopne
mov
aam
pop
faddl
jmp
xchg
cmpl
ljmp
aad
outsb
or
mov
mov
push
or
jecxz
cwtl
mov
adc
int
das
adc
dec
gs
or
push
outsb
mov
pop
fnstcw
push
cmp
icebp
cmp
or
pop
pop
mov
andb
add
sub
dec
adc
out
inc
fcoml
nop
test
adc
cmp
ret
enter
push
xchg
les
pushf
fcomps
add
addr16
pop
lcall
sub
mov
or
inc
jae
lods
mov
dec
dec
inc
shr
iret
push
popa
mov
sti
cld
push
xchg
imul
add
or
xor
push
or
adc
adc
leave
icebp
std
jne
jbe
push
dec
jle
push
or
pop
jle
test
and
fsts
adc
mov
scas
enter
repnz
jg
mov
push
xchg
data16
mov
mov
sub
mov
jnp
stos
out
popa
push
jmp
pusha
nop
cmp
mov
mov
insl
ja
lahf
jge
mov
xor
or
adc
movsb
unpckhps
pop
pop
dec
loope
clc
push
xor
test
dec
cmp
das
adc
cwtl
cmp
xchg
pop
xor
arpl
xchg
sbb
sub
mov
xchg
fstps
cld
xchg
lods
pop
sbb
out
mov
insb
arpl
mov
dec
xlat
daa
pop
imul
xchg
xchg
mov
mov
ret
shll
mov
sub
push
mov
jle
sbb
sub
insb
filds
lahf
sub
pop
cmp
and
lea
lret
aas
out
aas
rcrb
aas
insl
cmpsb
xchg
mov
ss
push
daa
loopne
shr
fsubs
cmpsb
xor
lods
jl
jmp
pop
mov
and
sub
mov
sbb
test
shrb
ret
outsl
xor
dec
sahf
les
outsb
popa
sub
scas
xchg
loop
repz
lea
mov
or
jne
ret
lret
insw
int3
stos
xorl
xor
out
mov
insb
fildll
fisubs
popf
mov
fisubs
and
mov
xor
sbb
push
ret
stc
push
add
fwait
xor
loope
adc
ljmp
lods
clc
scas
fucomp
cmp
stos
fidivl
orl
pop
jl
push
fstpl
pop
lret
inc
xor
sbb
cltd
notb
adc
popa
xchg
adcb
xor
popfw
pop
jmp
fmul
dec
lock
and
or
mov
mov
lock
sti
mov
testl
jecxz
push
sub
mov
cs
jg
jge
jb
cld
popf
pop
inc
mov
pop
cmc
push
dec
movsl
daa
push
lds
out
inc
sub
add
stos
cltd
rolb
cmpsb
xchg
sbb
jo
lds
sub
jecxz
icebp
jns
add
outsl
push
xor
add
xor
roll
dec
push
in
xchg
movsb
xchg
idivb
sbb
mov
mov
xor
pop
sub
mov
xchg
dec
lds
and
xor
popf
and
push
mov
lret
jg
xchg
xchg
leave
pop
aaa
insb
jno
pop
push
jne
shrl
lods
and
lods
gs
fsubr
aam
neg
rorl
popa
inc
jne
mov
push
in
mov
sbb
addr16
jno
dec
das
mov
sbb
or
mov
dec
cmovl
jecxz
test
push
orl
mov
loopne
cmp
xchg
push
jae
sbb
push
popa
or
xorl
bound
sub
gs
insl
gs
or
cmp
mov
iret
or
popa
jmpw
mov
js
dec
arpl
or
outsl
pop
movsl
jo
jecxz
xchg
and
sbb
rcrb
push
sbb
pusha
scas
and
lea
cmp
ret
xlat
push
jmp
push
and
jmp
in
scas
gs
fistl
jg
jmp
je
add
in
out
es
aad
es
outsl
jne
or
test
hlt
rolb
sub
adc
out
mov
roll
icebp
insl
rclb
iret
xchg
fisttpll
loope
test
jmp
push
cmpl
mov
mov
pop
push
jbe
mov
or
pop
sahf
adc
add
mov
ret
inc
push
pop
cwtl
lcall
gs
fcoms
xchg
pop
jns
sbb
xorb
push
int
or
hlt
mov
xchg
mov
push
in
inc
jle
in
push
mov
sub
and
cmp
mov
jnp
in
imul
in
out
push
daa
inc
dec
nop
xchg
xor
shrb
daa
sub
mov
scas
sti
or
mov
das
fnstsw
inc
xchg
sbb
out
rcrb
mov
sbb
pop
ret
cwtl
fwait
jmp
inc
push
xchg
sbb
xor
cmp
andb
mov
fcomip
or
adc
mov
and
dec
sub
push
xchg
je
cmpl
cmp
xlat
aad
jne
mov
daa
jns
imul
mov
shll
adc
xlat
dec
ljmp
arpl
aas
cltd
dec
int
sbb
sarb
ret
add
fbld
inc
adc
cs
cmp
sbb
jns
movsl
fmull
sbb
jp
stc
lret
add
and
or
xchg
xor
ja
sti
fsubrl
adc
popf
mov
stos
xchg
fwait
mov
stc
in
popa
lea
add
jge
jecxz
pop
pop
int
mov
rep
push
mov
inc
xchg
pop
or
cltd
pop
pushf
idiv
movsl
push
adc
mov
pop
adc
aad
adc
fildl
cmp
bswap
loope
lock
testl
inc
cld
push
pop
or
das
cmp
pop
adc
mov
xchg
add
cmc
out
fists
push
aaa
pop
scas
fwait
cmp
inc
nop
sbb
push
push
js
xor
sub
pop
and
mov
adc
push
aad
insb
and
dec
movsb
lds
inc
xorl
movsl
stos
xor
sub
dec
scas
out
xor
or
jno
mov
mov
lds
cmc
mov
sbb
stos
movsb
sub
call
data16
inc
jne
sub
aaa
jmp
sub
fldenv
lcall
lods
add
aad
adc
rcrl
inc
and
test
negb
jge
add
or
xchg
cli
jb
mov
out
data16
imul
sub
jno
sbb
stc
sahf
scas
leave
les
mov
lods
popa
mov
sbbb
xchg
mov
imul
or
dec
loopne
insl
in
jp
or
mov
pop
out
mov
out
dec
jb
jle
adc
mov
pusha
or
rorb
mov
mov
sti
push
dec
fistl
sub
out
xchg
cmc
xchg
mov
repz
mov
cs
adc
inc
popf
pop
xchg
jbe
sarl
jl
imul
ds
into
ja
adc
popa
sbb
xor
and
adc
in
inc
push
std
mov
out
push
jmp
or
dec
ret
inc
add
cmp
add
or
pop
or
and
adc
or
xor
mov
popf
dec
sbb
ret
push
cld
aas
sti
stos
xor
mov
int3
adc
dec
les
mov
and
mov
xor
hlt
inc
les
push
sbb
setae
add
xor
pusha
dec
cli
fsubl
jno
out
js
js
test
xor
in
dec
daa
orl
jmp
mov
jmp
stc
inc
mov
inc
not
in
push
test
mov
stc
sbb
in
cmp
ret
and
dec
sub
leave
fcoml
out
lcall
loopne
shrb
push
sub
es
jp
aad
cmpsb
push
je
leave
xchg
lods
mov
cmp
aam
cmp
mov
xor
mov
imul
mov
or
jns
sub
mov
sub
add
icebp
test
jne
int3
aas
mov
jecxz
adc
stos
sub
in
dec
negl
mov
lds
mulb
mov
dec
inc
shl
xlat
add
push
push
sub
lcall
mov
jp
push
dec
shrl
stos
jne
in
push
and
cmp
test
add
into
mov
call
gs
mov
cltd
sub
pop
sub
fmuls
rcl
rorl
fcmovnbe
cmp
push
aad
lods
add
popf
scas
add
movsl
sub
or
push
cmp
clc
xchg
sub
sub
int
aas
addr16
push
mov
call
sbb
xchg
mov
xchg
xor
inc
fsubrs
dec
cmp
mov
sub
mov
imulb
lret
and
mov
ss
cmp
rol
sub
sti
scas
jns
rcrb
fs
rcll
std
mov
in
cmp
mov
adc
pop
test
ror
xlat
cmp
scas
mov
movsl
pop
dec
mov
out
fists
mov
imul
test
mov
sub
int3
lret
ss
lret
out
xor
mov
hlt
xchg
mov
mov
cmp
call
jp
int3
sbb
xchg
push
pop
dec
jecxz
loopne
cmp
lcall
dec
sbb
loop
ljmp
fdivs
inc
psubb
cmc
or
ss
sub
rclb
mov
fldt
jb
loope
sub
shll
nop
xchg
aad
shlb
xchg
pushf
sti
xchg
mov
fcompl
cmp
enter
lock
pop
mov
add
sbb
movsb
fs
xor
js
negb
in
popfw
pop
dec
mov
mov
inc
lcall
pusha
test
mov
push
sub
or
in
mov
push
arpl
call
ss
cmpsl
jb
pop
imul
scas
dec
cmp
scas
cltd
enter
xor
lods
out
movsl
inc
roll
fld
cltd
ret
pop
imul
aam
pop
mov
mov
lock
loope
push
cli
sub
mov
mov
inc
std
ss
pop
or
adc
ljmp
sub
mov
iret
pushf
inc
test
sbb
scas
cmp
mov
cwtl
cmp
adc
fsubrl
out
jge
popa
pop
scas
ret
cmp
cmp
sti
push
mov
pop
sti
pop
mov
add
mov
sbb
push
add
dec
subl
xchg
add
adc
sti
roll
stos
xchg
xchg
or
movsl
rcl
push
call
jns
subl
rep
xlat
enter
popa
adcl
jne
lds
xchg
add
add
xor
ret
add
push
lcall
or
jge
repz
rclb
aas
or
xor
push
cmp
mov
and
xor
xlat
sbb
clc
out
popa
pop
faddp
mov
mov
xchg
pusha
in
cmpsb
in
xor
cmp
lock
mov
mov
mov
pushf
data16
and
jno
sbb
or
mov
movsb
sbb
xchg
into
dec
mov
xchg
or
and
js
xchg
mov
sbb
lret
jb
sub
jp
in
mov
adc
int
stc
sub
clc
loopne
pushf
mov
inc
jge
and
scas
jp
cmpsb
mov
stos
sbb
or
fistpl
js
repnz
mov
cmpsl
adc
out
lods
dec
jle
adc
call
or
je
bound
sub
gs
xorb
push
cmp
jae
xchg
sub
and
cmp
lea
mov
test
mov
sbb
shll
add
daa
insl
lret
out
xor
out
push
addr16
out
nop
or
sbb
pop
sub
scas
pop
sub
pop
scas
sbb
add
mov
daa
sub
popf
pop
mov
jle
add
orl
test
push
or
leave
and
xchg
sub
fsts
xor
loope
mov
rcrb
scas
xlat
aaa
testb
push
fnstenv
aam
daa
mov
jbe
std
xchg
sbb
imul
mov
in
divb
lret
enter
cwtl
mov
mov
mov
inc
sbb
sub
lods
push
test
xchg
in
xchg
dec
jl
repz
push
aas
adc
dec
hlt
adc
adc
call
fisttpll
ret
call
push
push
les
or
jbe
inc
test
stc
int
fstl
rol
push
aam
int3
js
stos
mov
int3
ds
jbe
test
cld
add
ret
add
cmp
arpl
mov
mov
ss
or
daa
pop
pop
push
xchg
xlat
clc
lods
cli
xor
in
imul
out
enter
in
jne
sub
mov
loope
mov
addr16
cwtl
stc
mov
cmp
enter
jl
dec
dec
call
mov
out
insl
cmpsl
stc
push
cmp
jae
fucom
push
ret
xor
sbb
cmc
push
addr16
add
xchg
ja
or
lret
push
rclb
add
sub
xchg
or
pop
inc
xor
filds
ja
or
mov
pop
sub
cld
outsb
dec
es
stos
xor
cmpsb
pop
cmp
daa
or
adc
addl
mov
roll
jg
push
out
mov
test
xor
dec
out
mov
mov
aad
fs
shrb
std
stc
push
sub
mov
xchg
or
add
sarl
dec
xor
sub
xor
cmp
jb
cmpsl
jg
sbb
outsl
sti
ljmp
imul
repz
xchg
jge
jmp
cmp
xchg
sub
push
sub
add
jno
inc
mov
xchg
add
iret
bound
push
fisubrl
cmpb
dec
mov
loope
sub
je
lcall
add
mov
aaa
pop
mov
fdiv
into
incl
in
into
inc
or
mov
or
jbe
aas
sarb
subb
stos
push
xchg
cmp
sub
jae
xchg
aad
jmp
lret
jge
dec
mov
sti
stos
jmp
or
scas
xor
jl
pop
loop
xchg
add
lahf
rcl
xchg
fbstp
mov
test
sub
mov
int3
adc
add
sub
jb
cmp
lahf
xor
test
jae
cmp
loope
imul
jno
push
pop
js
pusha
clc
mov
mov
or
or
pop
cmp
and
hlt
add
adc
push
push
cli
push
xchg
lahf
out
ret
fcoms
leave
pop
pop
test
dec
int3
test
sbb
gs
sahf
and
cld
js
test
cmovl
test
sbb
mov
jns
xor
in
mov
out
hlt
jg
xchg
adc
subl
mov
mov
leave
cltd
inc
lret
or
iret
mov
adc
mov
or
out
mov
movsb
inc
jmp
pusha
mov
mov
pop
ljmp
cmp
jp
loope
call
and
pop
push
dec
mov
cmp
pushf
lahf
and
adc
xchg
xchg
out
inc
stc
pop
shll
adc
mov
out
cmpsl
out
orb
mov
scas
ss
push
popa
addb
xor
push
xchg
dec
hlt
sub
shlb
inc
clc
in
mov
pop
push
inc
xchg
cmp
ret
stc
jae
mov
loope
mov
imul
pop
dec
mov
out
fsubs
jb
in
pop
popf
shlb
jne
xor
add
arpl
bound
push
push
mov
inc
jle
xchg
and
out
or
and
fldcw
sbb
fwait
dec
and
fistpl
jbe
pop
in
lahf
cmpsb
enter
aad
cmp
imul
sub
mov
cmp
push
pop
dec
pushf
nop
mov
negl
jbe
lods
cmpsb
subl
fildl
and
jb
cmpsb
mov
lods
mov
and
jp
jg
mov
popl
dec
pop
inc
jle
mov
xor
invlpg
xchg
push
je
pop
js
bndldx
xor
in
or
call
xlat
int3
sub
icebp
xchg
pop
aaa
xchg
test
add
lods
mov
xchg
pop
int3
in
mov
and
mov
sbb
rcll
jno
sbb
xor
jp
push
outsb
movb
push
iret
sub
jno
adc
ds
dec
mov
gs
nop
jb
outsb
push
xchg
outsl
xchg
cmp
pop
shlb
jbe
imul
adc
outsb
push
cmpsb
leave
popf
push
ficoml
and
fiadds
inc
aam
cmp
jge
inc
fimull
ret
and
fdivs
or
clc
mov
xor
mov
imul
cmpb
in
sub
mov
push
push
popf
test
ds
ret
stc
or
bound
xchg
add
lret
jg
in
and
cmpsl
arpl
clc
mov
cmc
jae
adc
xor
mov
call
sub
scas
dec
mov
xor
cmc
or
pop
push
pop
or
mov
or
scas
les
mov
outsl
aam
inc
mov
jb
stos
std
push
ret
aam
xchg
fbstp
in
outsl
adc
clc
ja
push
cs
fildll
xchg
loop
fstpl
movsl
sub
adc
jnp
in
test
mov
pop
sarl
test
cmp
nop
cltd
jle
out
and
mov
cld
and
scas
loopne
jge
fisttpl
pop
add
jbe
xor
and
push
nop
jb
incl
xchg
lock
adc
xchg
repz
pushf
push
loop
mov
scas
adcl
lret
push
jle
inc
mov
mov
mov
das
dec
es
ljmp
fs
sub
insl
push
mov
lock
add
or
jmp
sbb
fwait
shlb
imul
jp
pop
out
pop
jle
push
sub
ja
ret
push
in
cwtl
xchg
leave
ret
ljmp
and
xchg
jge
adc
js
jno
mov
fs
insl
scas
orb
sbb
mov
dec
cld
pop
cltd
or
sti
xor
stos
mov
sbb
adc
lret
mov
loope
mov
mov
movsl
jne
std
roll
or
or
adcb
xor
xor
test
int3
jo
in
mov
outsb
jns
clc
out
cld
enter
inc
cmp
mov
stos
mov
in
or
cmpsb
and
repz
outsb
adc
mov
pop
mov
mov
inc
lahf
push
mov
lea
sbb
xchg
add
inc
cmpb
xchg
in
sbb
mov
mov
fwait
pop
leave
sbb
mov
divb
sub
push
xlat
xchg
or
inc
adc
mov
ret
mov
mov
fucomip
push
imul
jno
shrb
pop
add
or
lods
sbb
push
scas
adc
into
sahf
cmp
inc
test
lock
jge
scas
dec
pop
addr16
inc
fmul
add
mulb
das
adc
cmpsl
xor
scas
push
fmuls
mov
or
dec
sarb
mov
enter
pop
dec
cmpsl
int
xchg
or
mov
push
imul
mov
fisubrl
jl
mov
fbstp
cmpsl
adc
loope
inc
push
int3
xchg
data16
ljmp
icebp
loope
bound
mov
aam
jg
addb
fcmovbe
sahf
adc
jo
pop
dec
xchg
mov
pushf
add
aam
pop
test
lods
mov
adc
mov
mov
iret
negb
push
mull
fistpl
xor
lds
cmp
popa
add
cwtl
icebp
rcrb
out
std
imul
mov
mov
jge
push
mov
ret
xchg
jecxz
popf
imul
xor
adc
pop
push
cs
jl
test
pop
xchg
xorb
pop
shl
sbb
cmp
js
imul
and
imul
xchg
les
cs
inc
test
inc
movsb
mov
out
ret
fidivs
loopne
mov
hlt
mov
stos
jmp
lahf
xchg
lcall
idivl
jecxz
push
inc
test
in
nop
add
divb
jp
popa
inc
hlt
adc
adc
ret
cmpsb
lahf
jno
mov
aam
gs
cs
pop
sub
test
inc
std
fidivl
mov
pop
dec
test
loope
cli
xor
repnz
add
mov
out
dec
jmp
push
notl
dec
mov
or
pop
sbb
add
enter
fldenv
lods
iret
fidivl
inc
test
call
lods
pop
inc
jne
push
inc
xchg
sub
jecxz
adc
push
insl
xor
addl
push
decl
jnp
adc
xor
sub
xor
lahf
movsb
inc
movsb
je
mov
add
aas
mov
mov
std
sahf
aaa
xchg
mulb
shl
dec
mov
xor
jl
daa
jp
ret
loop
nop
sub
xor
add
adc
mov
fcmovnu
adc
or
ret
fstpt
mov
push
sbb
and
push
adc
ficoml
jo
adc
mov
inc
je
inc
add
xor
fsts
or
jge
or
cwtl
jp
insl
daa
leave
fsubs
mov
cmp
or
lods
cwtl
outsb
mov
mov
inc
mov
inc
cmp
pop
fisubrl
test
or
lahf
dec
sti
sbb
in
arpl
lcall
fmull
jmp
adc
jg
and
push
pop
jbe
insl
sbb
and
aam
cmc
adc
ja
add
xor
jle
pop
in
mov
adc
inc
jae
push
loopne
inc
mov
nop
cmc
pop
insb
in
cmp
and
lods
sbb
add
das
testl
scas
std
or
pushf
loopne
lcall
daa
push
add
adc
fldt
test
movsl
outsb
mov
movsl
push
cwtl
je
cmp
push
sbbb
sub
xlat
cmpsb
daa
cmc
xchg
pop
dec
lahf
insl
je
add
xor
negb
clc
clc
mov
stc
cltd
adc
pop
mov
scas
and
in
jl
outsb
push
add
mov
xchg
ror
out
mov
repnz
insb
pusha
jge
mov
test
fs
jp
cltd
and
repnz
jle
lcall
pushf
or
aas
aam
push
cmp
jge
pop
movsl
loopne
and
push
dec
pop
mov
or
dec
adc
inc
adc
dec
das
mov
ds
or
pop
daa
hlt
into
mov
insl
pop
xchg
ljmp
iret
pop
gs
loop
xor
js
sbb
adc
mov
sbb
jp
iret
inc
fs
orb
lods
pop
add
add
adc
mov
pop
popa
rcl
push
lods
les
into
call
imul
mov
mov
outsb
cmp
dec
popf
or
dec
lahf
push
xchg
or
frstor
rcrl
mov
arpl
mov
dec
cmc
and
cmc
daa
in
mov
rcll
xor
xor
insb
jns
cmp
dec
pop
ret
and
mov
push
fwait
cmp
mov
inc
or
stos
dec
push
mov
mov
xchg
sahf
ja
adc
aad
insb
xor
mov
mov
fmuls
popf
scas
mov
flds
adc
cmp
aam
leave
jo
or
cmp
roll
stos
or
push
mov
js
data16
pop
pushf
lock
xchg
fists
mul
jnp
push
jl
xchg
psllw
mov
mov
lcall
mov
rcll
and
jge
jmp
jl
and
cltd
daa
popw
or
adc
loop
jne
mov
add
dec
mulb
popa
xor
jo
hlt
arpl
pop
pop
stos
jge
pop
imul
jne
cs
pushf
js
aam
stos
xor
mov
shlb
adc
push
add
mov
gs
inc
imul
fildll
sbb
ss
and
mov
mov
sub
mov
lods
mov
xchg
jg
ljmp
mov
cmp
jns
xchg
rcll
lods
rcl
dec
scas
fwait
ja
repnz
lds
jl
or
sbb
mov
mov
pop
adc
out
shll
jae
shll
xchg
mov
sbb
and
je
enter
sbb
pop
loop
js
or
push
mov
add
xor
push
push
fxch
cmp
sub
xor
call
lret
out
dec
call
jg
rcll
sbb
xchg
dec
shrl
xchg
dec
and
or
insb
push
xor
xor
imul
mov
cmpsl
inc
jo
insl
insb
jge
lcall
gs
push
sbb
and
mov
add
movsl
mov
aaa
jo
push
lods
adc
lahf
or
or
std
cwtl
push
inc
das
mov
test
lret
push
lahf
push
stos
xor
ja
add
or
jge
bound
aad
nop
dec
sub
mov
shr
sub
push
mov
arpl
inc
and
adc
mov
jbe
sub
pop
mov
pusha
jo
outsl
bound
shlb
cmpsl
in
call
cld
out
cs
imul
rsqrtps
js
outsl
sbb
iret
adc
js
adc
dec
ljmp
scas
jp
and
pop
iret
aas
test
lods
subl
dec
icebp
iret
mov
sbb
call
push
and
push
mov
or
sub
mov
mov
mov
js
xor
les
xor
out
jne
inc
cmp
test
mov
mov
mov
or
or
aad
mov
shlb
mov
adc
mov
push
movsb
and
setle
es
and
cmp
pop
xor
jo
ficoms
enter
test
adcl
jg
cmc
sbbl
mov
js
rcrb
xchg
cmc
and
push
jo
cmp
mov
nop
mov
dec
gs
in
sub
jmp
jg
fldt
inc
mov
push
xor
sub
fmuls
cmp
movsb
test
out
add
and
xchg
insb
adc
rsm
leave
mov
mov
add
dec
push
jnp
shlb
fldl
mov
or
mov
das
xchg
pop
mov
jae
xchg
mov
cmp
shr
fisubrl
jne
jmp
cli
lods
cltd
sbb
outsb
lcall
and
data16
in
mov
pushf
push
mov
push
mov
or
xchg
fwait
scas
sub
out
int3
test
imul
lods
decb
pop
push
js
jns
clc
lahf
lea
in
mov
and
test
push
lcall
in
stos
in
or
push
enter
adc
inc
xchg
lock
jb
pop
cmp
mov
jecxz
jle
xor
fldenv
xchg
and
inc
push
add
xlat
sbb
mov
insl
mov
test
xchg
jl
push
push
add
in
mov
cmp
mov
mov
jno
fisttps
jbe
daa
cmp
xor
loop
popf
rorl
sahf
mov
dec
xchg
cmp
or
xor
mov
lret
adcl
fcomp
pop
lea
in
loopne
pop
call
inc
jns
fcoml
cwtl
mov
jp
mov
fistps
clc
push
aam
or
adc
dec
in
lock
mov
loopne
out
lret
movsl
jecxz
sbb
mov
push
cmp
sub
xor
or
dec
icebp
pop
pop
imul
xchg
es
repz
lret
sbb
mov
mov
lods
pushf
jp
inc
lret
je
adc
cmp
int
jbe
xchg
adc
ljmp
lods
sub
push
ja
scas
xor
lods
andl
push
or
cli
mov
out
mov
roll
outsl
xor
sub
dec
push
test
cmp
xchg
jl
and
mov
icebp
outsl
xchg
jmp
in
sub
add
add
movhps
mov
xchg
movsb
add
iret
fsubrs
cmp
inc
xchg
sub
lcall
xchg
imul
cmp
fs
xlat
stos
lcall
ret
jno
dec
mov
fmull
dec
out
or
ret
push
add
mov
sbbl
fptan
arpl
test
testb
repnz
sahf
shl
outsb
jg
pop
push
loopne
fiaddl
mov
out
mov
push
and
sarb
mov
mov
scas
mov
inc
out
xor
bound
sub
sbb
aas
push
imul
mov
pop
cmc
aaa
aad
idivb
inc
cmpsb
in
mov
in
lcall
jmp
cmc
pop
ret
scas
push
xorl
test
push
inc
addr16
scas
lock
scas
fdivrs
jle
rolb
mov
sub
movsl
repz
lods
mov
fmul
test
ss
pop
or
xor
lahf
in
jp
push
xchg
inc
sbb
mov
gs
fisubrl
notl
xchg
dec
shll
jne
lcall
leave
mov
ret
das
push
int
dec
mov
mov
add
test
push
icebp
dec
cmp
rorb
into
cwtl
xchg
push
sti
das
pop
mov
repnz
cmpsb
jmp
fisubrl
dec
lds
dec
mov
xlat
leavew
loop
pop
incb
inc
pop
mov
push
adc
lods
aaa
aas
push
adc
je
repnz
popa
psllq
nop
arpl
into
dec
xchg
add
int3
addb
dec
sahf
sti
negl
xchg
adc
cmp
jmp
hlt
push
fdiv
jmp
xor
sub
mov
dec
and
mov
dec
xchg
dec
lock
and
in
dec
jb
sub
pop
int3
cmp
cs
mov
jbe
xchg
out
jnp
dec
sub
adc
mov
clc
int
stos
jne
scas
pop
or
sbb
out
sbb
jmp
sahf
push
xchg
sti
div
das
xchg
call
lea
mov
push
sub
push
xor
jmp
les
hlt
out
imul
fsqrt
lock
adc
in
jp
xor
sbbl
frstor
sub
into
rcll
jmp
loopne
scas
xor
in
sub
sbb
enter
in
inc
fs
orb
mov
mov
ljmp
leave
cmpsl
sti
xor
push
mov
imul
and
addr16
mov
aad
hlt
inc
lods
test
icebp
pushf
fidivl
cld
mov
xchg
out
xchg
lcall
pushf
sbb
xor
or
mov
fmuls
rorb
sub
cld
push
out
stc
cmp
into
mov
dec
inc
or
cmp
leave
lods
mov
xor
fs
mov
mov
mov
inc
mov
fmulp
shlb
cmp
nop
popa
jecxz
arpl
cltd
idiv
or
sbb
lock
push
push
stc
fidivs
jmp
sbb
stos
jg
cmc
jne
mov
and
xchg
or
mov
arpl
arpl
into
dec
mov
in
pop
lods
iret
scas
fucomp
arpl
adc
xchg
jle
or
sbb
add
xchg
aam
pop
xchg
test
xchg
xor
dec
xchg
popa
or
push
inc
aad
cwtl
or
sbb
jbe
mov
jbe
push
jae
outsb
mov
fldcw
divl
adc
imul
rcrb
push
or
dec
mov
adc
inc
push
adc
cmp
jne
loopne
adc
movsb
sub
dec
or
add
ret
mov
incb
pop
cmp
daa
lock
notl
test
mov
push
ja
leave
pop
adcl
gs
cmpsl
push
sub
cmp
rclb
adc
scas
pop
pop
inc
push
adc
out
jl
fsubl
orl
les
loop
push
test
adc
das
in
and
push
cmpsb
mov
mov
sub
adc
lret
stos
adc
xlat
mov
aam
cmp
adc
add
nop
es
add
mov
insb
call
sub
jp
push
mov
lret
jb
movsb
in
fisttps
nop
fs
sub
cli
mov
push
lods
out
mov
cmp
rcl
cld
jle
shl
dec
lret
pop
mov
enter
subl
mov
test
push
fisubl
mov
clc
jg
xchg
xchg
ret
mov
lock
lods
pop
inc
inc
mov
cltd
fwait
push
cmp
fistpl
fistpl
enter
enter
clc
pop
and
dec
bound
roll
jns,pt
push
pop
scas
sub
in
sbb
popl
pop
call
xor
movsb
cmp
jle
inc
mov
mov
popa
pop
and
fwait
jno
and
pop
ss
call
xor
lds
inc
pop
cmp
negb
mov
iret
push
fbstp
dec
lcall
mov
xchg
xlat
cmp
jb
sbb
mov
mov
inc
out
mov
addl
mov
mov
hlt
dec
sbb
js
pop
std
mov
jbe
mov
fcoml
iret
inc
inc
movsb
cmp
xchg
mov
sbb
push
pop
or
adc
xorb
in
inc
push
in
xchg
xor
pop
fwait
mull
out
dec
pop
sahf
dec
push
aam
adc
xor
push
mov
push
mov
popa
enter
fisttps
cmp
jmp
dec
repz
adc
mov
pop
dec
or
add
jg
mov
sti
out
icebp
mov
push
shrb
sub
and
add
mov
out
pop
stc
xchg
mov
dec
fwait
cmc
xor
std
jmp
or
inc
imul
jmp
ss
pop
dec
pop
aas
add
mov
dec
daa
cld
push
cmp
insl
push
out
lcall
jg
test
movsb
add
cltd
mov
dec
or
xor
daa
add
fwait
pusha
jg
mov
and
pop
push
xchg
mov
pusha
inc
repz
idiv
push
adcb
pushf
popa
adc
push
dec
lea
mov
out
mov
lods
push
inc
xor
dec
adcb
subl
adc
sub
add
inc
xchg
lds
lds
sbbl
push
add
insb
pop
cmp
imul
out
std
js
inc
fisttpll
out
push
mov
push
sub
ds
outsl
sbb
dec
jnp
stos
imul
imul
cltd
inc
ror
xlat
jle
aam
and
mov
call
mov
inc
in
add
pop
ret
and
adc
pushf
mov
jmp
out
mov
hlt
pop
lahf
cmp
pushf
jg
cwtl
sarl
push
jmp
movsl
icebp
fmuls
xor
xchg
adc
lds
sub
xchg
cmp
cmpsl
push
movsl
lret
jg
popf
dec
mov
jbe
cmp
fisubrs
sub
lahf
das
add
pushf
bound
lcall
std
fs
in
xor
mov
test
arpl
stos
insl
inc
push
int3
leave
loope
dec
add
jecxz
int
aas
sti
lcall
lret
andb
dec
pop
lret
and
repnz
test
xlat
popa
movsb
out
out
scas
cltd
call
push
add
insb
fsubs
adc
in
xchg
sbb
test
ljmp
pop
xchg
imul
aad
inc
es
lret
dec
mov
sti
clc
pop
movl
mov
jge
xchg
iret
sti
jge
outsb
arpl
lret
out
push
sarl
clc
mov
jl
repnz
addl
inc
int3
xchg
push
pop
fstpl
fisttpl
jno
xchg
cmc
mov
hlt
xor
popa
into
aad
out
ret
divb
loop
xor
outsb
mov
xor
xchg
mov
je
test
jnp,pn
and
sti
pop
fldl
mov
jp
sbb
xor
sub
lret
jne
fidivrl
stos
add
sub
rorb
call
clc
add
and
inc
adc
pop
add
aaa
sbb
push
jae
inc
jae
mov
decl
xor
stos
inc
and
dec
sub
or
sub
mov
fldenv
into
shll
jo
in
sbb
mov
call
cmp
out
ljmp
push
das
adc
ljmp
out
dec
or
sbb
pop
mov
mov
test
mov
pop
push
mov
xchg
nop
mov
or
xlat
inc
gs
and
add
aas
mov
mov
add
or
add
jg
cmp
push
pop
inc
xor
sub
jnp
fiadds
lahf
popa
pop
imul
aam
pop
lods
xchg
sbb
inc
aas
loope
icebp
inc
push
into
and
dec
ss
cltd
dec
ljmp
and
nop
popa
jecxz
shll
xchg
rcrl
pop
ret
scas
mov
sahf
cmp
inc
sahf
sub
les
or
jae
fimuls
loopne
ret
imul
js
jg
in
movsb
jle
outsb
xchg
push
out
loopne
jno
rorl
push
sbb
stos
fwait
lahf
pop
fisttpll
fidivs
push
or
mov
xlat
outsb
scas
cwtl
dec
and
ficomps
movsl
arpl
lret
dec
sub
push
push
xchg
test
sub
mov
mov
test
sbb
ret
push
outsb
mov
xchg
aaa
xlat
pop
movsl
sub
popf
lahf
push
repnz
into
fmuls
shll
jno
xor
ljmp
out
idiv
dec
std
into
lds
jl
lods
pushf
sbbl
xor
adc
insl
test
sbb
shrb
faddp
fmuls
and
and
pusha
sti
mov
jle
cs
cltd
mov
mov
jne
adc
stc
add
xor
cmp
flds
sub
shll
sahf
jno
mov
sbb
xchg
dec
jl
iret
mov
mov
dec
sti
cwtl
push
pusha
mov
xor
ss
sarb
inc
or
jg
jle
jmp
add
into
inc
inc
sub
insl
xlat
out
shrb
popf
lret
inc
fistl
repz
std
inc
shll
repnz
push
lock
add
and
mov
out
dec
lods
cmpsb
pop
cmp
repz
jmp
jl
mov
test
jl
add
inc
and
inc
add
mov
sbb
pusha
std
and
out
pop
and
dec
out
leave
mov
jo
insb
inc
mov
mov
add
or
and
xchg
sahf
gs
dec
xchg
sub
mov
jo
add
out
adc
ret
bound
push
xchg
push
out
mov
aad
mov
ror
ret
adc
push
sbb
in
mov
ljmp
fidivs
stos
scas
push
mov
fldt
mov
and
repnz
inc
fcmovbe
mov
andb
movzbl
and
cmovne
loopne
ds
fists
sbb
pop
ret
dec
popl
mov
push
xchg
or
mov
lds
mov
out
es
jle
push
jnp
or
xor
jg
cmp
notb
mov
test
jmp
add
imull
aad
cmp
jl
mov
test
xor
and
in
inc
mov
pop
jp
in
roll
sbb
call
xlat
push
stc
mov
stc
sbb
cltd
sub
je
dec
movsl
mov
std
iret
shl
xchg
sub
mov
mov
or
push
cmc
fucomip
rcrb
cmp
and
enter
shrl
sar
xor
xchg
es
mov
stos
jle
js
pop
sti
inc
out
or
xor
imul
mov
pop
sti
movsl
mov
movsl
mov
rcl
into
shrb
pop
orl
and
cmpsl
push
cmpl
xchg
inc
inc
and
mov
arpl
or
lret
sbb
inc
xchg
cwtl
jp
sub
jl
movsb
daa
int
repnz
stos
out
insb
and
std
aaa
popl
sub
mov
sub
nop
sbb
lret
int
pop
mov
mov
mov
data16
sarl
mov
nop
mov
nop
xchg
fwait
adc
xor
add
gs
inc
movsb
je
xchg
subb
add
movsl
jecxz
push
cld
adc
aad
icebp
imul
mov
xor
dec
add
push
or
cmp
mov
movsl
imul
jno
test
push
sbb
xor
cmp
pop
popa
add
iret
mov
push
add
test
xlat
cld
and
in
pop
pusha
push
xchg
int3
jmp
add
xchg
lds
sbb
test
jne
neg
cmp
sti
test
lods
pop
adcl
adc
pop
jle
push
pop
cmp
push
or
mov
rorb
pop
loopne
cwtl
daa
push
lods
in
jbe
mov
filds
in
int
xlat
cmp
and
cmpsl
movsb
pusha
xor
inc
pusha
xchg
push
mov
cli
dec
ret
ret
fimuls
jge
sbb
cmp
sbbl
pop
les
popa
sti
inc
test
dec
xchg
xchg
in
imul
in
dec
mov
popa
push
cwtl
sbb
inc
loop
inc
xor
xor
jp
pusha
lea
cmp
mov
cmp
sar
iret
push
add
mov
push
imul
arpl
out
dec
adc
enter
push
mov
cmp
mov
mov
out
sbb
push
mov
xchg
mov
dec
arpl
xchg
and
sar
push
xchg
push
ss
cli
imul
mov
repnz
sbb
faddl
sti
aaa
pop
test
jns
ret
jo
mov
loopne
cwtl
inc
les
mov
pop
je
aad
scas
loope
mov
jae
lock
and
xor
stc
lds
jl
cmpsl
xor
cmpsl
mov
push
jecxz
cs
and
pushf
pop
cmp
jg
mov
sbb
or
aam
xlat
cmpsl
loop
sbb
mov
dec
jno
sbb
adc
mov
mov
imul
fisttps
test
inc
push
ljmp
les
mov
xchg
mov
add
cmpsl
nop
jp
mov
or
mov
cltd
cmpsb
sub
and
xchg
aad
insl
fwait
jno
mov
lods
lods
inc
loopne
push
xor
ljmp
filds
stos
mov
stc
stos
loopne
jne
mov
sub
add
pop
outsb
mov
pop
lods
fiaddl
inc
lods
push
je
out
mov
push
and
adc
mov
add
inc
cli
icebp
and
and
xor
test
pop
mov
mov
pop
mov
insb
xchg
sbb
insl
out
mov
pusha
iret
aaa
pop
xor
ds
rcrl
cli
and
pop
mull
jne
cmp
add
fimull
in
clc
daa
jno
test
leave
pop
enter
orb
cmp
xchg
adc
xor
add
cwtl
and
popf
shl
sbb
lret
lods
decb
jnp
pop
jl
inc
pushf
mov
lods
cmp
pop
lods
bound
xchg
popa
xchg
jl
inc
aad
jmp
cwtl
sub
fs
adc
push
sahf
mov
sub
mov
mov
lcall
cmp
int
testb
mov
mov
outsb
in
pop
jne
popf
inc
negb
mov
push
xchg
test
push
jecxz
adc
dec
cmp
xchg
movsb
mov
mov
mov
mov
jns
shll
or
in
sub
adc
pop
xor
andb
lea
cli
dec
xchg
fiadds
sbb
repnz
or
cltd
fmuls
pop
mov
and
icebp
xor
aam
cld
cmp
test
jg
mov
push
xchg
pop
outsl
loop
and
mov
jp
cmp
sub
pusha
pop
or
pop
mov
sbb
sbb
xchg
mov
popa
jg
xor
push
inc
dec
imul
cmp
dec
inc
push
pop
cmpsl
and
fdivrl
inc
addr16
pop
rcr
cli
push
sub
xor
les
cltd
mov
aas
jle
jns
inc
inc
cmp
sub
pop
push
inc
lods
cmp
in
scas
jns
mov
sub
sbb
rorb
sub
push
out
dec
mov
ficoml
daa
gs
movsb
in
push
sahf
pop
test
hlt
jb
pusha
aad
mov
testb
nop
push
rcr
jae
imul
push
add
nop
jbe
pop
cmp
inc
or
and
ljmp
push
or
enter
outsb
out
inc
loop
loop
fwait
sarb
stc
push
sbb
loopne
or
xor
xor
daa
fstp
icebp
in
fimuls
addb
jge
inc
adc
hlt
inc
pop
jp
mov
and
int3
negl
dec
adc
push
push
mov
iret
push
icebp
add
dec
popa
inc
iret
testb
jne
jecxz
lock
lret
mov
push
pop
sub
mov
fdivs
push
push
shl
daa
out
adc
sbb
jl
inc
add
jmp
pop
pusha
imul
xor
iret
js
sbb
cmpsb
mov
es
jno
std
xchg
aaa
pop
push
and
xchg
inc
std
sbb
inc
fcoms
in
test
imul
iret
popa
xchg
out
xchg
test
xchg
sub
mov
xor
sub
mov
jnp
push
fcoms
cs
les
test
mov
movsb
fmull
imul
stos
incb
cmp
movsb
jo
and
jmp
adc
imul
pop
cmp
dec
bound
add
idivl
lds
xchg
mov
mov
mov
jle
lock
jno
test
sbb
jg
sub
out
loop
xchg
rcll
rol
sub
mov
and
push
mov
dec
sti
sarl
aad
jne
pop
ret
pop
arpl
dec
iret
cld
add
sub
fnstenv
and
cmpsl
dec
bound
pop
popa
adc
push
fcmovbe
out
sub
push
sti
jecxz
cltd
cmpsl
push
daa
aad
pop
mov
sbb
sbbb
add
packssdw
jge
out
dec
sub
pop
inc
and
xor
pusha
dec
ljmp
mov
lods
sbb
mov
ficoml
mov
movsb
fisttpl
sbb
cmpsl
popf
mov
push
cmpsb
sub
mov
hlt
mov
or
stos
cmpsb
dec
mov
nop
sbb
jle
movsl
mov
sub
adc
push
movl
ja
mov
xor
aad
sub
xchg
cmp
out
mov
and
or
ds
pusha
xchg
sbb
in
push
mov
jno
in
mov
pop
xchg
aaa
leave
mov
lret
add
add
mov
inc
repz
or
jmp
shrb
leave
lcall
das
mov
adc
int
push
push
dec
icebp
xor
sbbl
fisubl
xchg
push
in
dec
adc
nop
sahf
pop
aas
and
xlat
in
mov
or
pop
sbb
jmp
rcll
mov
push
scas
movsl
mov
ss
movsb
dec
inc
movsl
fcompl
sub
mov
pop
lds
dec
mov
ret
mov
cmc
popf
insb
sub
push
subb
outsl
xor
xor
loop
test
imul
inc
add
cmp
push
cmp
and
inc
mov
lahf
gs
popf
sbb
sub
mov
inc
mov
movsl
out
clc
jb
lds
bound
iret
adc
push
out
mov
loope
mov
ret
jo
jl
mov
jl
outsl
adc
sbbb
pop
pop
pop
mov
mov
sub
jnp
push
xchg
and
sarb
loop
decb
in
jb
call
sub
mov
loopne
mov
rcr
pop
adc
aad
out
pop
scas
jg
gs
insb
in
inc
daa
fcomps
jg
gs
movsl
add
pop
mov
clc
mov
test
xchg
cmp
imul
sub
mov
cmp
mov
jns
and
push
aas
push
push
jle
lret
jbe
fisubrs
mov
fst
mov
loopne
xchg
or
stos
mov
and
push
test
ja
and
mov
cld
jae
mov
push
cmp
cld
xor
dec
hlt
cs
je
add
xchg
repnz
and
pop
lret
push
test
bound
xchg
fwait
adc
jb
lfs
movsb
sti
pause
call
sub
loopne
xor
sbb
ja
sbb
add
sub
aad
cmp
outsb
pop
xor
and
xchg
xor
aas
xor
outsl
mov
flds
mov
test
std
dec
adc
std
gs
jo
dec
jns
call
fs
inc
popa
or
or
cmpsb
popf
out
sub
cmpsl
jo
scas
mov
jne
dec
xchg
xchg
out
adc
adc
xchg
sub
add
mov
xlat
sub
sbb
dec
xchg
nop
lret
xor
in
shrl
insl
call
test
xchg
stos
and
inc
dec
daa
dec
mov
sub
daa
enter
outsb
xchg
cmp
daa
push
addl
or
std
pop
jnp
sar
push
ds
inc
in
sti
adc
rcrb
cmp
shll
out
xchg
rorb
jo
in
cmp
inc
xchg
rclb
inc
sub
pop
cmp
sahf
and
push
iret
icebp
inc
filds
daa
jae
stc
jno
mov
mov
mov
and
mov
dec
scas
pop
jnp
adc
xchg
mov
mov
add
test
adc
test
add
lret
fcoml
jl
xor
fistpll
dec
jp
cwtl
xchg
mov
adc
cmp
mov
add
xchg
cmp
cmp
shll
faddp
mov
fcmovne
xor
pop
sub
cwtl
cmpl
dec
push
mov
push
mov
mov
adc
iret
push
cmp
je
into
sub
lret
pusha
jb
xor
dec
sbb
popa
push
and
cmp
cmpsl
movsl
in
rol
fwait
sti
jne
lahf
repnz
jmp
aad
loopne
cmp
push
clc
imul
iret
leave
aas
lea
push
jmp
movsl
fcomps
jmp
push
pop
stc
mov
out
jne
in
push
dec
xchg
xor
test
jecxz
mov
pop
js
fcom
xchg
insl
lock
ja
push
sub
jb
dec
xchg
jmp
out
sbb
push
push
mov
inc
hlt
leave
out
icebp
int3
cltd
jge
cmp
jnp
add
lea
xchg
js
jp
mov
les
mov
inc
xchg
frstor
push
and
xchg
cmpsb
fsts
sbb
add
mul
pop
jmp
xor
cmc
pop
jbe
or
jo
andb
mov
nop
jno
adc
fsubl
dec
push
sbb
mov
lea
cmp
repz
sbb
sub
cmp
mov
pop
jne
fwait
mov
test
jnp
xchg
movsl
lret
mov
iret
sti
imulb
sbb
cltd
xchg
pop
lds
mov
decb
repnz
xchg
jecxz
loope
test
add
inc
xor
and
sub
popa
lret
xchg
add
mov
mov
sub
cmp
mov
pop
pop
scas
push
cli
cmp
into
imul
iret
iret
mov
cmp
ds
inc
cld
dec
dec
out
fisttpl
fdivs
jmp
sbb
dec
leave
adc
rcrl
sahf
xor
repz
dec
insb
leave
insl
div
enter
mov
ljmp
mov
jecxz
inc
fadds
dec
mov
arpl
dec
add
push
jle
sub
shrl
addr16
scas
in
pop
sub
dec
sti
and
adc
int
mov
adc
daa
xor
inc
test
hlt
inc
pop
or
inc
xor
mov
int
mov
out
ljmp
mov
imul
push
lahf
movsb
enter
push
inc
add
lcall
testb
test
subl
fcoms
dec
js
rorb
pop
mov
cli
inc
jns
add
loope
cwtl
push
jbe
mov
push
out
mov
pop
js
sbb
mov
adc
fcomps
int3
fwait
mulb
dec
jmp
lea
xor
loope
jle
jl
in
mov
push
or
in
or
jb
cmp
pop
cld
push
add
sbb
stc
jb
cwtl
jae
test
jmp
imul
data16
repz
push
mov
mov
push
fdivr
mov
rol
jae
cmpsl
pop
loop
sub
in
pop
dec
adc
stos
repz
jno
ficoms
and
sbb
hlt
in
sub
mov
jb
xor
insb
es
cmp
mov
cmp
repnz
pop
inc
addr16
scas
js
jecxz
sub
xchg
es
or
cmp
and
mov
pop
push
sbb
insl
cltd
fwait
lcall
xor
xchg
sbb
dec
mov
aaa
sbb
scas
in
rcrb
pop
ja
push
cwtl
jge
test
mov
xchg
sbb
mov
sub
mov
cmp
mov
imul
lods
jb
or
push
negb
mov
icebp
bnd
lds
sti
enter
mov
idiv
lret
mov
or
push
pop
or
lret
or
or
lea
inc
comiss
adc
jl
xchg
xchg
xchg
adc
pop
dec
mov
inc
push
roll
xor
scas
mov
ja
pop
mov
jb
repnz
adc
gs
outsb
xor
ret
scas
movsb
popw
sub
xor
adc
push
stc
mov
movsb
cmp
testb
dec
cli
or
jle
jno
inc
stos
sbb
pop
jo
jl
lcall
nop
inc
das
or
insl
mov
xchg
xchg
ds
cmpb
mov
push
jl
ja
mov
mov
jb
cwtl
cmpsl
mov
gs
loopne
xor
sub
das
sbb
sahf
or
lods
test
ret
jmp
mov
cs
xor
lcall
sbb
xchg
add
cmpsl
rclb
mov
inc
std
rorl
repnz
xor
stos
hlt
mov
lret
jle
sti
pop
fs
mov
or
inc
cmp
push
sub
arpl
pop
test
hlt
ljmp
inc
sar
or
push
out
xchg
lds
add
call
ret
mov
xlat
test
xchg
add
add
outsl
call
test
daa
add
jo
cmp
pop
xor
mov
jecxz
popa
jne
fs
aaa
or
imul
cltd
outsb
lret
add
dec
xor
push
mov
shrw
cmp
leave
fstp
cmp
addb
js
xchg
cld
arpl
cmp
pop
mov
cld
cmpsl
inc
pop
mov
mov
fs
test
rorl
sub
gs
les
mov
push
repnz
jl
lahf
iret
push
pop
cmp
lcall
nop
pop
movsl
fidivrl
sbb
xor
mov
scas
dec
ret
pop
shll
bound
ljmp
adc
dec
mov
sub
push
cld
mov
or
insb
hlt
and
and
ret
adc
dec
pop
sbb
aas
andb
mov
stos
les
mov
xchg
jecxz
and
jb
push
push
repz
icebp
pop
fisubs
dec
andl
pop
aas
aaa
xchg
push
cmp
xchg
inc
jle
in
cmpsl
and
bound
or
cmpsb
mov
icebp
pop
pop
popa
cld
or
data16
das
sub
dec
push
lcall
pop
jne
and
and
in
pop
ret
ds
adc
out
stc
jo
dec
mov
cld
cmp
clc
and
sub
orl
jne
mov
push
in
mov
dec
dec
dec
dec
dec
add
xchg
pop
cmp
mov
adc
cltd
and
jg
out
mov
repz
push
cmp
rcrb
xor
das
mov
and
jl
gs
cmp
dec
or
push
sti
and
sbb
pop
mov
jno
mov
or
inc
or
cmp
jns
fcomps
dec
dec
fdivrs
stos
ljmp
xchg
push
xchg
scas
push
mov
in
dec
jae
jp
cmc
jle
inc
pop
popa
cld
cmpsl
jno
mov
pushf
and
imul
test
pop
inc
lods
scas
fiadds
stc
js
adc
add
inc
pop
in
mov
xchg
jo
push
mov
push
jl
cmp
mov
push
jo
mov
cltd
fs
mov
out
aam
dec
scas
cmp
or
call
sub
push
push
popa
jmp
cltd
andb
dec
scas
jmp
xchg
jne
hlt
test
sarb
aam
xor
or
xor
and
fcmovne
pop
inc
mov
daa
jo
in
cmp
cmpsb
sti
or
in
insl
mov
sbb
push
inc
push
push
and
and
int
imul
push
fwait
daa
and
dec
dec
inc
scas
sbb
leave
jno
push
ret
outsb
negb
icebp
jns
lret
push
add
push
in
push
mov
gs
fdivl
sub
daa
and
out
orl
clc
les
mov
xor
pushf
outsl
mov
adc
test
adc
rclb
lods
mov
or
dec
push
mov
mov
add
cmp
pop
in
mov
pop
fwait
xchg
push
sbb
rclb
jnp
and
vmovaps
pop
ret
jns
stc
inc
mov
xor
sbb
fwait
mov
xchg
cmp
sub
jb
jae
pop
inc
mov
pop
pop
xlat
sti
rolb
or
cld
jno
xchg
mov
cmc
mov
call
xchg
lahf
mov
cmp
push
leave
cltd
data16
pand
out
sbb
cmovge
dec
icebp
inc
scas
mov
mov
or
dec
mov
cmp
lea
mov
sub
pop
mov
sub
mov
cmc
sbb
js
push
push
ds
divl
cmpsb
inc
out
ffree
mov
repnz
pop
add
xchg
jmp
mov
std
outsb
jnp
mov
call
lock
lret
data16
mov
popf
and
mov
repz
sti
inc
das
xchg
adc
shl
jle
shl
mov
jne
adc
adc
dec
lcall
mov
push
lock
and
sub
push
mov
mov
ja
inc
or
movsb
pop
pop
lahf
xchg
mov
push
in
icebp
mov
jne
data16
imul
mov
xchg
jno
aas
pop
sti
sahf
mov
shlb
cli
sub
xchg
mov
jp
out
push
adc
sub
cltd
leave
mov
pop
xchg
push
inc
jno
scas
jp
or
loope
daa
xor
fs
mov
fisubrs
pushl
push
xor
and
adc
mov
xor
add
push
out
inc
cld
outsl
and
dec
pop
es
mov
inc
shll
xchg
icebp
pop
cmp
bound
adc
xchg
ficoms
andb
push
inc
fstps
mov
rcrb
push
push
or
hlt
cmp
dec
pop
adc
mov
xchg
xchg
xchg
xor
shr
and
pop
fdivrs
loope
scas
test
xlat
loopne
popa
push
cmp
fldl
push
arpl
push
inc
sbb
popa
fsubrp
lcall
pop
cmp
aaa
cs
pop
mov
stos
xor
outsb
out
cs
adcb
add
mov
dec
mov
lock
and
dec
mov
ds
push
add
sarb
jmp
pop
jne
mov
or
or
pop
inc
insb
ja
lcall
push
lds
mov
mov
adcl
stos
push
xor
or
and
or
enter
leave
sbb
jo
adc
subl
push
sbb
pop
les
mov
out
repnz
rcrl
lahf
sarl
add
mov
rorb
sbb
jmp
inc
and
pusha
and
and
mov
and
daa
ds
repnz
test
lock
jae
push
cld
xor
sbbb
cmpsl
add
mov
adc
jp
add
sahf
push
xlat
inc
loope
adc
subb
shl
pop
mov
cwtl
outsb
inc
mov
jmp
sbb
pop
mov
xor
out
les
cli
test
mov
out
aas
dec
or
inc
idivb
scas
mov
and
adc
inc
nop
stc
out
icebp
jae
cmp
sbb
movsb
shl
jle
lock
ja
mov
adc
les
ljmp
cmp
loopne
xlat
out
fs
fnstcw
mov
mov
lret
jno
cmc
int3
nop
mov
sbb
testl
int3
in
mov
xor
stos
bound
dec
pop
adcl
mov
xchg
test
test
mov
leave
dec
adc
insb
sub
movsl
adc
js
mov
mov
lds
nop
xchg
and
jb
mov
cmp
jl
xor
sub
xchg
loopne
repnz
dec
mov
push
sbb
rorl
cli
sub
fs
push
xchg
jge
pushf
cltd
jnp
std
cli
pop
sub
lcall
loopne
ficompl
lret
inc
decb
in
sub
aas
repnz
lock
movsl
inc
sti
cmp
shrl
into
repz
into
roll
mov
mov
arpl
push
js
cmp
add
pop
xor
cli
mov
add
xchg
jecxz
cmpsb
lods
add
mov
stos
cmp
loop
and
or
fwait
scas
pop
addl
jecxz
out
gs
adc
cli
push
sahf
xchg
mov
push
ds
push
lcall
mov
xchg
and
adc
lret
out
icebp
aad
jmp
push
gs
lock
enter
sub
ret
loopne
sub
aaa
pop
add
pop
jae
or
mov
sbb
mov
bound
xchg
xchg
sub
iret
xchg
cmp
lcall
je
test
insl
xchg
mov
mov
add
xchg
insl
insl
and
mov
inc
icebp
es
shr
stos
lahf
sti
out
in
mov
dec
sbb
pop
adc
das
lret
movsb
pop
test
xchg
out
push
imul
push
pushf
adc
jmp
sbb
adc
adc
aaa
sbb
and
cwtl
movsl
sbb
bound
xor
bound
mov
pop
mov
sub
cmp
imul
push
lods
scas
mov
out
ljmp
sti
imul
jno,pn
ror
fidivrs
inc
jmp
inc
dec
icebp
pusha
mov
jmp
sbb
mov
adc
stc
xor
xchg
iret
sub
sti
call
cli
nop
fsubp
pop
mov
jmp
ss
xchg
sarb
gs
test
gs
xchg
dec
das
pop
imul
dec
cmp
inc
cmp
cld
pop
xor
out
jmp
rcll
outsb
leave
mov
iret
ret
dec
clc
neg
in
add
cmp
fcoms
loop
xor
pop
dec
aam
inc
cmp
jo
bound
es
mov
aad
shll
ds
aam
icebp
push
rorb
xchg
leave
cs
or
mov
test
sti
outsb
cmpl
pop
xchg
xorb
loop
and
inc
aam
inc
mov
pop
mov
lods
lock
dec
mov
shrl
add
push
es
repz
xor
add
frstor
or
ret
out
xchg
xor
shl
jno
push
add
outsb
or
movsl
jge
cmp
in
cmp
stc
lahf
into
jl
push
ret
inc
push
out
int3
jne
xor
loope
add
push
or
out
mov
sti
shll
cmc
insb
mov
loope
fldl
insb
out
add
shl
add
popf
psrlq
sahf
in
dec
loope
mov
stos
iret
mov
add
mov
mov
ljmp
cmpsb
insb
add
movsb
jbe
adc
pop
mov
xchg
and
mov
fcompl
adc
add
pushf
test
lea
mov
push
push
mov
pop
hlt
lret
inc
mov
mov
lea
and
add
bound
inc
push
or
fadd
pop
mov
mov
push
cwtl
aad
inc
sti
dec
lret
inc
or
pop
inc
popa
jmp
gs
mov
push
inc
jge
mov
pop
mov
bound
or
clc
cltd
mov
inc
mov
xchg
insb
mov
mov
arpl
adc
xor
das
popa
xor
ret
mov
adc
test
je
pop
loope
std
add
int
dec
cwtl
mov
push
sbb
jmp
popf
jns
cmp
inc
mov
jle
push
sbb
jne
nop
fistpll
lods
push
loopne
xor
fidivrs
addps
mov
scas
mov
hlt
pop
mov
mov
ret
ficompl
add
aad
sub
push
movsb
mov
add
sbb
test
cmpsb
shrl
mov
icebp
xchg
pop
push
orb
mov
jmp
in
nop
push
sbb
aad
repnz
inc
std
mov
xor
aam
cltd
jp
cmovae
mov
mov
and
data16
dec
mov
cltd
mov
ficomps
lods
jnp
or
data16
cwtl
cltd
add
mov
dec
xchg
repz
gs
lret
mov
gs
cmpsb
stc
scas
xchg
inc
mov
sub
xor
mov
jnp
jne
pop
rcrb
cli
in
repnz
push
sbb
add
scas
out
sarl
or
ret
xchg
out
cmpsb
push
dec
imul
mov
lods
adc
xor
leave
cmp
xor
in
cmp
dec
cwtl
jne
mull
lahf
or
add
push
mov
test
in
xchg
and
repnz
lret
pop
ficoml
cmp
push
rcll
sbb
out
xchg
leave
mov
mov
and
jb
sbb
in
ficompl
or
popa
call
sub
sti
daa
insb
subb
adc
xor
jb
shlw
or
leave
mov
and
stc
aam
xor
imul
inc
cmp
stos
pusha
push
dec
cli
stos
cwtl
test
ret
fiaddl
pop
inc
mov
adc
xchg
push
pop
popa
jmp
jmp
mov
cmp
into
imul
test
fwait
push
test
in
push
ja
fidivl
lahf
fimull
xchg
mov
add
add
dec
and
loope
fucomp
cmp
sbb
add
dec
mov
jo
jmp
shrl
hlt
adc
add
jae
mov
xor
inc
mov
add
cmpsl
inc
out
sbb
fstpt
ficoml
lods
js
add
mov
cmp
outsb
sbb
outsl
enter
pop
mov
inc
js
mov
fucomi
or
and
or
jo
call
stc
ret
rorl
push
add
push
lahf
popf
and
adc
dec
cmp
sar
insb
mov
and
sbb
pusha
enter
sub
or
outsl
mov
push
int
cld
fcoms
iret
lods
icebp
stos
test
jae
sub
dec
xchg
test
cwtl
repnz
js
inc
aam
cwtl
xor
test
in
lods
and
lahf
dec
mov
push
cmp
aam
sub
cmc
mov
in
adc
jmp
push
test
inc
cmp
dec
vdivsd
mov
mov
pop
mov
test
jae
orl
push
add
frstor
or
pop
mov
testb
shl
add
push
jg
arpl
leave
dec
cltd
icebp
xor
in
arpl
push
lods
add
jb
aas
lretw
jecxz
inc
xchg
xor
or
gs
movsb
les
fs
or
enter
pop
dec
or
push
mov
xchg
sbb
fdivrl
call
add
xchg
test
arpl
aas
or
in
xchg
pop
pushf
mov
std
flds
outsb
mov
xchg
int3
and
jmp
andb
jmp
dec
adc
les
mov
rcl
loope
pop
dec
sarl
push
cld
leave
scas
mov
in
pop
adc
fwait
and
jl
mov
xor
js
mov
loope
sahf
mov
ret
das
leave
cmpsl
dec
dec
test
aaa
mov
imul
lahf
repnz
push
mov
sub
sbb
mov
pop
or
cs
pusha
lods
bound
jns
ss
inc
stos
add
add
pop
test
inc
and
gs
in
push
mov
cld
incb
and
mov
mov
loop
lods
add
int3
cmpsb
dec
dec
das
clc
push
loop
ja
mov
icebp
leave
push
xchg
in
xlat
push
in
sub
ss
cmp
mov
and
fwait
and
push
push
mov
ljmp
sbb
pop
mov
and
push
inc
mov
shll
inc
ret
xchg
add
jbe
aas
iret
test
dec
sbb
jne
mov
jo
and
or
or
into
mov
push
hlt
cmp
add
das
dec
es
inc
lods
aas
data16
aaa
xchg
mov
test
mov
and
mov
ljmp
rol
dec
jne
mov
push
dec
dec
dec
inc
inc
pushf
in
push
test
test
fs
fld
add
push
not
mov
ljmp
in
lock
mov
stos
adc
arpl
or
hlt
xor
in
cmp
sti
ljmp
adc
mov
sub
mov
cmpsb
jge
test
add
out
test
iret
xor
and
add
sbbl
jg
jb
sbb
imul
lods
add
mull
fucomp
add
frstor
mov
daa
dec
xor
popf
stos
addb
xchg
dec
mov
outsb
out
cmpsl
lea
rorl
dec
adc
int3
or
mov
pop
scas
sarb
aaa
xor
pop
jge
pop
adc
aaa
add
xchg
mov
sbb
push
cli
or
xchg
xor
lret
cmp
xor
jo
or
jbe
test
sub
push
or
jo
dec
inc
shlb
icebp
adc
adc
and
mov
inc
int
xor
decb
xchg
ss
add
inc
movsl
cmc
daa
adc
or
dec
mov
movsl
ljmp
push
mov
jl
xchg
out
outsb
out
mov
sbb
sbb
push
pop
inc
jg
clc
cwtl
dec
clc
enter
test
xchg
pop
mov
std
cs
into
test
gs
pop
push
add
dec
push
pop
outsl
enter
mov
sbb
and
in
jne
pop
idivl
loop
fimull
into
aas
in
jmp
xchg
je
pop
push
or
mov
loop
cmc
add
std
sub
stc
stos
mov
orl
out
decl
mov
or
adc
jbe
imul
xchg
lahf
and
mov
jns
outsb
lea
inc
mov
outsl
das
mov
add
jg
lock
mov
inc
mov
out
cmpsl
dec
push
sub
pop
mov
test
inc
ds
daa
pop
add
dec
mov
fisubs
ret
sub
inc
ret
jb
jge
mov
fistl
xor
xchg
and
lods
rorb
inc
insb
in
sbb
rcr
aad
cld
dec
or
lcall
add
out
call
push
mov
xchg
sbb
rclb
xor
mov
mov
iret
cmp
addr16
mov
leave
mov
dec
inc
pop
xor
push
loop
push
sar
jb
inc
xchg
inc
xchg
xchg
sarl
push
imul
scas
js
or
xchg
es
mov
pop
pop
add
pop
ja
pop
outsl
jo
xchg
ljmp
popw
add
popa
xchg
mov
jge
loop
in
push
sub
loopne
pop
cli
lret
jno
mov
dec
mov
xchg
mov
mov
aaa
addr16
mov
mov
lret
or
incb
jne
movsl
xchg
xchg
xchg
jp
mov
sub
test
add
or
inc
es
subb
cmp
lds
test
xorl
addr16
push
xor
inc
lods
pusha
rcl
inc
adc
push
hlt
test
in
scas
es
mov
sbb
jns
mov
and
les
adc
out
pop
jmp
clc
sub
pushf
loopne
subb
xchg
jge
repnz
jae
mov
int
clc
sub
inc
or
or
bound
lret
jns
insb
push
js
shll
xor
dec
int3
push
mov
cmp
out
movsl
lahf
mov
sub
mov
mov
dec
out
jmp
xchg
sbb
push
test
push
lahf
sbb
dec
inc
dec
jns
adc
and
jge
rcrb
into
movsl
adc
loop
shrb
movsl
aas
cld
mov
ja
xchg
mov
in
ds
bswap
jae
fstl
push
sbb
inc
mov
add
dec
mov
pop
push
and
jnp
arpl
sub
enter
push
adc
notl
mov
nop
push
lret
mov
mov
sub
mov
fsubrs
inc
test
andl
dec
stos
or
jae
pop
sub
xchg
or
icebp
jmp
filds
rcl
adc
test
aam
adc
mov
add
mov
inc
test
jb
je
repz
push
cmc
sbb
cld
jo
xlat
rcrl
xchg
adc
pushf
call
in
cmpsl
int
mov
insl
lock
mov
pop
scas
dec
pmulhw
fisubrs
mov
or
in
add
inc
add
inc
mov
popf
or
lds
adc
pop
fs
mov
mov
and
push
cmp
xchg
mov
xor
rolb
fistpll
out
pop
ds
mov
mov
xor
jge
jecxz
cld
sbb
hlt
lods
jge
sti
std
mov
push
nop
idivb
es
insb
jmp
and
push
imul
mov
stos
cmp
jg
and
xor
lahf
cmpsl
jl
bound
mov
int
xchg
imul
xor
pop
mov
and
sub
add
mull
push
mov
mov
daa
movsb
pop
push
aas
sub
pop
test
scas
scas
push
jbe
and
dec
shrl
arpl
mov
rol
cli
mov
scas
add
cmpl
push
inc
and
jnp
ljmp
or
test
shrl
enter
out
sub
jbe
pusha
push
mov
adc
cmp
test
movsl
loopne
test
sub
pop
aad
pushf
testl
jae
xchg
mov
mov
or
jns
mov
es
gs
add
test
sub
dec
ljmp
lret
and
in
shl
xor
in
repz
or
sub
pop
add
cmpsb
adc
outsb
std
or
ret
jle
pop
insl
mov
scas
sub
fsubr
shl
test
push
sarb
sub
shlb
test
push
sti
and
xor
adc
xchg
mov
or
test
out
in
add
jmp
je
sub
mov
test
xor
xor
push
ror
sub
mov
popl
idiv
out
and
adc
ljmp
jmp
idivl
mov
dec
mov
pop
loopne
jmp
out
xchg
xchg
add
ret
stos
scas
xor
cmp
loop
fwait
mul
orb
xchg
mov
mov
mov
bound
int3
pop
movsl
mov
in
or
outsl
dec
popa
lret
ljmp
leave
enter
nop
sbb
inc
push
mov
xchg
or
mov
inc
fsubl
aam
jae
out
sbb
pop
push
sub
popf
adc
fucomi
sarb
mov
xchg
push
xor
sarb
aam
clc
jl
out
in
daa
test
fcom
fs
repnz
cmp
mov
inc
fsubl
inc
stos
xor
jno
pusha
das
nop
push
mov
mov
loopne
mov
and
das
pushf
test
in
call
or
cld
mov
inc
inc
test
inc
aam
std
loopne
scas
loopne
shrl
jns
fcoml
mov
in
inc
loope
cmp
add
lock
jp
decb
adc
lahf
xchg
ret
sahf
add
clc
fnstsw
adc
pop
out
dec
insb
mov
gs
out
bound
popf
mov
in
imul
fnstenv
popf
push
push
inc
data16
mov
push
pop
dec
or
rol
in
into
shlb
adc
scas
pop
or
lock
xchg
fs
pop
fucom
mov
mov
xor
and
mov
outsb
inc
aaa
fwait
movsb
ljmp
gs
lahf
inc
push
or
pop
dec
jg
or
stos
cmp
dec
lcall
scas
dec
mov
pop
in
mov
cmpl
out
pop
cmc
mov
inc
out
or
leave
xchg
ds
dec
das
jp
jns
int
pushf
lea
cmp
inc
movb
out
or
xor
cmp
jle
dec
aad
mov
test
addb
jle
sti
je
icebp
add
dec
out
in
movsl
xlat
das
lret
aas
mulb
pop
scas
gs
mov
repnz
nopl
aas
leave
pop
pop
sub
inc
shll
sub
roll
pop
dec
test
enter
xor
fs
mov
add
pop
enter
mov
aam
sbb
into
add
testl
inc
mov
test
stos
push
inc
aaa
sbb
push
ss
push
out
rolb
adc
aad
xchg
add
inc
paddsw
test
ret
iret
jo
adc
test
mov
xor
test
in
fidivrl
dec
mov
xor
pop
push
pop
jns
out
lcall
clc
test
jnp
sar
jge
xorb
lret
in
adc
shrb
addr16
call
aad
sbb
xor
mov
or
ficoms
out
cmp
lock
mov
xchg
xchg
int3
sub
out
xchg
outsb
cmpsb
loop
lret
js
xor
pop
inc
xchg
hlt
jmp
push
and
inc
outsb
pop
cmp
push
mov
xor
das
jl
out
sub
cmp
cs
and
add
and
hlt
adc
sub
cmpsl
or
popl
push
dec
xor
mov
call
aad
cld
jp
pop
add
mov
cmp
imul
mov
loop
out
cmp
push
loope
sub
std
xchg
mov
inc
out
mov
push
fs
je
cltd
or
xchg
icebp
xor
pop
push
mov
ljmp
call
daa
jge
push
cmpsb
xchg
xchg
outsb
imul
arpl
adc
data16
sub
in
xlat
es
sub
inc
stos
push
pop
inc
decb
xchg
je
aam
push
testl
jns
mov
pop
inc
testl
test
int3
stos
ss
mov
and
int
loopne
insl
shlb
stos
out
add
jne
cmp
cmp
mov
into
jns
sub
sbb
in
lahf
pop
cmpl
sbb
repnz
fcomi
inc
sub
dec
les
xorb
add
mov
or
dec
sub
loopne
js
push
sub
push
mov
mov
push
int
or
insb
idivl
cld
ja
cli
int3
mov
adc
mov
inc
sbb
adc
sarb
pop
mov
mov
repz
cmp
sbb
cmp
xchg
sbb
outsb
add
cmp
sahf
decb
jmp
mov
fcom
sbb
sub
lock
out
push
xchg
ds
sbb
xor
mov
mov
jmp
lods
push
pop
test
push
lods
les
aaa
ficompl
int
fildl
outsb
jne
lret
mov
pop
jmp
jns
sarl
loop
fistl
pop
hlt
pusha
lds
adc
gs
or
jae
shll
push
lret
test
mov
cmp
inc
std
fcomip
mov
negb
dec
or
push
test
movsl
ret
lods
or
push
lock
loop
ja
or
mov
pop
ja
in
pop
rol
xchg
clc
inc
or
ljmp
stos
fnstenv
cltd
inc
aad
imulb
jo
xchg
jmp
ja
xchg
add
push
jge
push
dec
andl
add
cwtl
jge
pop
dec
xchg
jge
push
push
cmp
shrl
and
loop
dec
cltd
int
mov
in
push
int3
fimull
insl
sub
call
push
sub
sti
mov
xchg
and
popa
pop
testb
dec
xchg
outsb
and
cwtl
imul
mov
and
insl
int
xchg
sahf
xchg
and
dec
adc
push
gs
mov
inc
cmp
in
stos
and
popf
mov
mov
iret
or
lret
pop
mov
movsl
popf
ljmp
jb
sti
push
test
ss
pop
insb
sbb
outsb
pop
jmp
cmpsl
aam
movsl
add
jb
mul
xchg
add
xor
test
push
icebp
mov
xchg
dec
push
mov
jae
adc
sbb
in
icebp
push
pusha
push
pop
sahf
test
and
xor
mov
hlt
push
mov
cmc
mov
sbb
aas
xchg
in
stc
ret
test
inc
ficoml
movsb
mov
jns
or
jb
and
stos
pop
xchg
and
fldenv
cmp
and
aad
sbb
nop
sti
mov
fmuls
pusha
fs
cwtl
imull
dec
push
stos
dec
and
dec
jmp
xchg
xor
push
cmpl
dec
pop
pop
inc
push
arpl
xor
and
popa
testb
mov
cmp
xor
cs
add
and
ret
sbb
dec
pop
xor
shll
cmp
or
ja
jp
push
sub
xor
sti
mov
or
lcall
push
add
lret
loope
enter
fnstenv
stc
ror
or
mov
rol
or
ss
push
repz
xor
push
pop
arpl
cmp
movsl
push
lods
das
push
mov
mov
stos
cmp
mov
int3
ss
sbb
enter
or
movl
in
and
xlat
pop
mov
mov
xor
sbb
in
movsl
scas
mulb
leave
xor
js
jmp
fadd
and
insb
add
jl
adc
adc
mov
sub
rol
out
lret
push
add
push
pusha
scas
inc
lods
fldenv
sub
inc
xor
imul
sbb
test
cld
mov
or
popf
insb
ds
jmp
jns
or
lock
ret
roll
addb
in
ja
cmp
lds
repz
mov
pop
push
xchg
pop
ret
mov
rcll
jae
add
xchg
mov
sbb
sbb
xchg
xchg
ss
xchg
xchg
xor
sarl
outsb
lea
xchg
mov
xchg
sahf
xor
fsubs
test
cmc
add
cltd
mov
nop
nop
ret
cs
pop
xchg
jge
lds
xor
push
pmaxub
cmp
jp
fnstenv
divl
sbb
sar
xlat
push
mov
dec
jb
or
pop
dec
lock
pop
stc
add
insb
cs
mov
adc
adc
or
adc
mov
sub
mov
add
mov
or
jns
sub
test
mov
stos
out
rclb
adc
fldcw
pop
test
cli
cmp
ss
xor
mov
lret
or
sbb
or
ds
pop
inc
clc
arpl
dec
stc
stos
jl
mov
pop
jne
rcrl
and
repz
insl
mov
mov
fiaddl
dec
dec
rcrl
adc
jns
sbb
out
jo
push
dec
xor
xor
ffree
add
out
popaw
gs
ljmp
push
and
int3
cli
sbb
cmp
or
lods
or
loop
icebp
lods
ret
movb
fstpt
orb
xchg
pop
shlb
xor
sub
mov
scas
mov
mov
fmul
sbb
orl
sub
mov
sub
std
ror
and
lret
mov
pop
cld
xchg
dec
jbe
xor
and
push
sub
dec
stos
cmpsb
shlb
pop
or
rcll
push
cmc
movl
cmp
lds
adc
lea
dec
ret
adc
mov
mov
jno
xor
xor
mov
inc
xchg
and
pop
mov
xlat
push
pop
sub
pop
and
xchg
mov
add
sub
sbb
inc
mov
pop
loope
cmpsb
sbb
shr
add
call
out
adc
mov
and
push
push
adc
add
cli
push
and
add
aas
pop
jle
fdivl
jo
sub
je
add
movsl
in
inc
fldcw
lods
outsb
sti
jg
in
cmp
sub
int3
aaa
test
sbb
cmp
dec
aas
das
mov
addr16
fs
mov
pop
xor
pop
mov
into
and
stc
nop
sub
dec
or
pop
in
in
cmp
cmpsb
aas
jns
or
or
push
jecxz
ror
divb
adc
clc
lods
inc
aam
fidivs
sbb
pop
mov
mov
frstpm(287
jns
jb
pfrsqit1
sahf
or
jb
orb
dec
fildl
cs
mov
dec
dec
cwtl
mov
cmp
xorb
push
mov
mov
sub
sub
pop
movsl
xchg
sti
and
sbb
xchg
roll
cltd
cmp
lahf
hlt
cmc
dec
loop
mov
incl
popa
mov
add
mulb
push
cli
xchg
daa
loope
mov
mov
jb
jle
jnp
mov
ja
lea
mov
xchg
aad
pop
movsl
imul
inc
out
inc
or
mov
enter
loopne
in
enter
push
cmp
mov
enter
sbb
inc
adc
stos
xchg
xlat
jns
push
outsl
jb
stos
lods
pop
mov
mov
outsw
jp
mov
xchg
popa
jmp
lahf
inc
adc
jb
sti
mov
js
frstor
jmp
jge
mov
adc
repz
mov
cmc
mov
adc
dec
je
popl
repz
loopne
outsl
fidivl
push
or
orl
in
jle
pop
push
mov
es
push
sti
cltd
cmp
fisttps
xor
mov
pop
ds
or
lret
mov
pop
mov
xlat
jmp
lahf
jne
add
add
pushf
cmpb
sub
divb
test
mov
pop
dec
cmpsb
push
pop
lock
cmp
cmc
jle
or
xchg
add
inc
imul
loop
jge
adc
lods
stc
popf
xchg
data16
out
jb
shl
pop
inc
push
mov
sub
stc
repz
jns
sbb
and
rcrb
pop
sbb
cmp
ljmp
cmp
dec
nop
xor
loope
aad
jle
mov
adc
rcll
fbstp
mov
pop
ljmp
addr16
rcrl
sub
xchg
fisubrs
xchg
push
jb
idivb
mov
mov
or
fcmovnb
cmp
xor
add
rcr
insb
idiv
or
mov
dec
jecxz
push
inc
pop
sarl
sti
inc
loope
dec
mov
xchg
pop
fs
rol
stc
xor
popl
jg
add
loope
stos
adc
fistpl
jmp
outsb
dec
shrb
xchg
jae
loop
xchg
pop
sbb
sbb
xor
rcll
shr
push
cmpsb
scas
out
sub
insl
ljmp
push
sub
aas
cmpl
aaa
or
lret
fnstcw
and
push
push
cmp
xor
ss
roll
pop
das
sub
cltd
loope
jb
dec
shll
cmp
sub
fldenv
dec
mov
xor
sbb
mov
scas
je
in
rcrb
push
mov
ret
jns
ss
jb
push
es
gs
ret
jnp
mov
leave
imul
scas
and
cmpsb
aas
sub
mov
ds
xor
inc
push
pop
repz
ret
jo
xor
bound
pop
mov
xchg
out
or
pop
or
push
fnsave
outsb
lods
cmp
inc
lock
iret
xchg
mov
sti
mov
cwtl
test
sub
cltd
mov
cmc
je
pop
jb
inc
dec
cli
sti
fs
cld
ljmp
jae
pop
mov
in
enter
fmuls
push
mov
nop
mov
push
iret
pop
adc
dec
mov
mov
je
sub
xor
shl
cmpl
cwtl
repnz
pop
enter
call
fcoms
jb,pn
in
fwait
adc
dec
ret
jge
sub
cltd
sahf
stc
and
stc
mov
inc
ficomps
sahf
pushf
and
incl
pop
xchg
inc
xchg
cmpsb
cld
fnstsw
pusha
cmp
dec
dec
scas
shrb
sbb
mov
adc
xchg
xchg
push
mov
cld
or
push
jl
scas
mov
mov
mov
cld
push
sub
imul
jo
js
sbb
out
dec
cmp
cmpb
bound
fbstp
cmp
inc
movsl
or
notb
xor
int
and
adc
fidivs
repnz
sub
mov
decl
adc
sbb
mov
cmc
dec
add
cs
repz
dec
cmpsl
dec
inc
repnz
lock
inc
insl
out
push
icebp
movsb
mov
and
or
mov
scas
out
cmp
or
add
sbb
in
std
mov
push
mov
out
inc
insl
negl
out
inc
int
popa
scas
not
inc
push
clc
mov
and
shrb
add
jle
arpl
inc
adc
and
xchg
dec
cwtl
loopne
outsb
dec
int
mov
mov
in
pop
shl
stc
movsb
cli
cld
rorb
loopne
sahf
mov
push
and
add
jg
and
sbb
imulb
psllw
fcomi
pop
cmp
and
or
and
jl
or
pop
cltd
inc
sbb
push
add
cmp
call
dec
pop
testl
sahf
rol
lahf
xchg
call
jp
ja
pusha
lahf
push
add
iret
adc
or
aas
std
lea
icebp
ror
jg
adc
and
hlt
xor
shlb
jo
mov
push
inc
sti
mov
jnp
push
xor
mov
xchg
inc
test
pop
jmp
jle
pop
lret
stos
xchg
je
fs
add
icebp
jle
xchg
aaa
aam
dec
xor
enter
and
xchg
xor
jle
scas
pop
lds
xchg
mov
sbbl
into
jmp
pop
test
loopne
push
les
lock
pop
jg
addr16
xor
jge
or
cmp
sar
int3
and
mov
jnp
jns
xor
mov
nop
and
pop
cmp
cmc
aad
in
movsb
icebp
fnstcw
scas
into
loope
adc
shll
cmpsb
or
pop
ja
cmp
shll
cli
push
inc
jp
pop
and
sbb
in
ja
or
shl
jp
scas
cmp
push
ret
jo
into
addb
bound
and
xor
cmp
or
popl
int3
lods
sbb
scas
dec
cld
pop
stc
stos
xor
xchg
lods
add
sbb
in
hlt
fisttpll
cmc
popa
test
outsb
enter
sbb
jecxz
jmp
dec
addr16
mov
push
hlt
fs
dec
mov
pop
sbb
add
gs
ljmp
mov
mov
xchg
out
outsb
xchg
mov
ljmp
mov
out
xchg
test
xchg
hlt
xlat
clc
jl
in
ljmp
pushf
je
in
cmp
gs
leave
hlt
fdiv
sub
inc
loope
sub
imul
lahf
mov
and
xor
mov
les
or
xlat
cli
outsb
mov
lret
push
es
imul
add
insl
add
mov
mov
xchg
das
pop
cmp
pop
jle
mov
jb
loopne
jge
sub
mov
xchg
outsl
xchg
sbb
nop
and
sub
sub
xchg
and
outsl
pop
sbb
mov
leave
data16
sbb
call
stos
push
cmp
mov
and
imul
mov
sbb
ljmp
push
mov
cmp
fs
add
fistpll
adc
fwait
push
adc
mov
pop
mov
xor
jo
lock
test
sbb
stos
jp
push
outsb
les
in
sbb
jne
inc
xchg
push
subb
or
aaa
or
js
mov
in
inc
sbbb
nop
lds
cmp
push
in
jo
cmpsl
stos
mov
mov
rorb
je
push
push
imul
mov
or
out
lock
and
sub
xchg
lcall
out
sbb
lret
sbb
loop
inc
daa
in
or
mov
notl
inc
out
jns
pop
in
aas
mov
inc
ret
dec
xor
add
call
paddusb
pop
xchg
arpl
dec
jp
jmp
aad
mov
pop
lods
adc
mov
gs
arpl
xchg
or
push
int3
ficompl
xchg
pop
aas
or
shlb
cmp
mov
mov
adc
inc
into
cwtl
push
push
sbb
add
mov
je
inc
push
into
sub
mov
and
out
lea
cmpsb
sub
cli
xchg
dec
fcom
pop
adc
out
dec
fistpl
cmc
pop
fidivl
lods
clc
outsl
cmpsl
lahf
or
mov
rol
aaa
sarl
ret
sbb
jns
pop
dec
pop
std
pushf
and
mov
inc
test
cs
insb
xchg
jle
jmp
cmp
add
mov
mov
xor
mov
pop
mov
outsl
dec
pop
pusha
imul
mov
popf
jo
add
insl
into
push
cmp
popl
xor
or
and
dec
imull
loope
leave
das
roll
aas
cmp
pop
xchg
jnp
pushf
dec
adc
pop
hlt
xlat
mov
rol
std
cmpb
dec
lods
imul
sbb
mov
aam
dec
mov
out
mov
add
cmc
inc
jne
daa
loope
leave
push
fadds
pop
add
loop
jge
loope
in
push
rcrl
lcall
lret
and
push
jp
sbb
out
jne
aam
mov
adc
add
cmp
call
dec
mov
jmp
pop
pop
dec
xlat
daa
xor
mov
inc
cmc
lretw
dec
inc
movsl
fisubrl
psubsw
data16
xchg
out
fisttpl
add
pop
movl
pop
fmull
je
aam
push
lea
iret
sbb
bnd
jns
lods
push
das
xchg
adc
lret
inc
push
fs
ljmp
xchg
je
aas
jle
sub
xchg
mov
xor
dec
adc
outsb
jns
popa
pop
sub
sbb
inc
popa
or
mov
js
pop
add
inc
fsubp
out
pop
inc
inc
inc
or
orl
push
inc
pop
mov
arpl
mov
mov
mov
add
and
lahf
add
jle
and
pop
mov
and
out
pop
addr16
repz
push
imul
mov
push
push
sub
mov
push
adc
arpl
fisttpll
sahf
jns
dec
ret
in
sbb
mov
push
mov
pop
xchg
in
xchg
stos
adc
lea
xchg
int
lretw
mov
pop
add
lock
sub
shll
jl
out
cmp
xchg
cmp
loopne
pop
jg
cmp
aaa
gs
hlt
dec
adc
xor
add
xchg
sahf
jl
leave
loope
scas
fisubs
xor
push
pop
xchg
cmp
adc
push
out
movsb
enter
insb
int3
cmpsb
jns
fisubl
cmpsb
sbb
repz
lea
scas
jbe
xchg
inc
mov
fwait
leave
dec
dec
add
jp
data16
jmp
mov
cmp
xchg
sysret
pusha
mov
mov
mov
leave
fidivrl
push
push
hlt
vmwrite
and
xor
jl
stc
arpl
insb
mov
inc
je
dec
test
push
sbb
push
pop
mov
call
clc
pop
outsl
jnp
sub
and
mov
lods
mov
mov
mov
jno
sbb
jle
dec
push
jmp
fsubr
adc
insl
push
mov
inc
loopne
ljmp
fsub
xor
jbe
and
lret
cld
mov
jbe
adc
or
movsb
mov
sub
sub
repnz
lods
push
cmp
rclb
push
inc
imul
push
sbb
rcrl
inc
mov
pop
clc
lcall
pop
xor
cmpb
imul
addr16
cmp
je
cwtl
cmp
dec
ds
ljmp
and
pop
add
cmp
mov
in
test
loop
mov
and
ljmp
sub
stos
test
test
and
xchg
inc
mov
and
mov
cwtl
and
jmp
setnp
aad
mov
clc
push
pop
iret
dec
jb
repnz
fnstsw
lods
dec
in
xor
and
iret
jl
pop
cwtl
cmc
sub
mov
sub
cmp
jmp
pop
push
cmp
loop
jle
das
push
lahf
xchg
incb
jmp
jae
cwtl
jnp
lock
cmpsl
loope
and
in
mov
je
cmp
movsb
mov
mov
cli
cmpsb
mov
loop
sub
xchg
dec
cmpsl
js
insb
out
dec
movsb
mov
jecxz
roll
rorb
push
inc
daa
jmp
mov
ds
push
adc
adc
imul
or
dec
cmpsb
adc
and
bound
pop
aad
mov
jb
xor
mov
std
mov
xor
cmpsb
mov
inc
push
fidivrs
popa
fdivl
cmpsl
and
call
sbb
cltd
inc
fwait
push
insb
scas
xchg
sub
mov
andl
push
mov
cmp
pop
sub
int3
adc
pop
jnp
mov
or
xlat
ftst
or
or
shll
in
mov
sub
hlt
push
faddp
pop
frstor
push
roll
mov
or
cli
loop
and
xchg
jg
dec
fisttpl
and
xor
imul
sahf
in
pusha
mov
cwtl
mov
mov
push
jno
jmp
dec
pop
dec
xchg
ret
cmp
popf
orl
cmp
in
lods
clc
cmp
jo
sub
jge
imul
cmp
adc
bnd
jae
mov
or
gs
lahf
push
les
xchg
pop
inc
xchg
cs
add
gs
inc
ds
cltd
lock
scas
lods
push
cwtl
out
pop
jnp
punpckhdq
jmp
outsl
cmp
xor
mov
add
sub
dec
mov
insl
xchg
jo
sub
leave
adc
orl
sub
add
pop
dec
mov
hlt
lds
xlat
stos
pop
lahf
rol
lret
clc
std
and
add
leave
pop
shlb
aam
scas
jae
js
pop
pusha
sub
mov
test
adc
or
addb
mov
mov
sbb
out
xor
and
imul
filds
lcall
and
inc
in
ficoms
dec
xchg
mov
or
out
cmp
pop
jge
mov
xor
sub
dec
xchg
mov
jne
fildll
xchg
cmp
mov
gs
shll
sbb
push
movsl
loopne
les
loop
jno
jns
pop
pop
hlt
xchg
incl
scas
rcr
xchg
mov
sbb
jbe
inc
mov
or
xchg
cmp
scas
lea
inc
adc
cmp
sub
cmc
nop
and
or
add
cltd
mov
dec
cltd
mov
je
fs
xor
clc
aad
inc
negb
test
xlat
imul
out
cmp
pushf
mov
punpckhwd
lcall
push
test
xor
and
pop
dec
fidivrs
and
mov
push
sub
fwait
xchg
das
ss
imul
sahf
sbb
mov
or
or
push
mov
repz
jl
and
rorb
jb
adc
addr16
jmp
adc
sub
scas
cwtl
ret
in
ror
jo
push
fisttpll
inc
or
mov
sahf
mov
in
push
mov
or
dec
mov
push
push
icebp
jno
cmp
rcr
cwtl
in
pop
ret
jl
push
arpl
mov
pop
sub
add
idivl
popa
popf
nop
mov
mov
xchg
push
inc
icebp
insl
lods
cwtl
test
ret
xor
and
ret
shl
cltd
mov
shll
hlt
fiadds
repz
fistps
push
jnp
fstl
and
and
testb
movsb
int
popa
push
je
inc
cs
push
jl
jp
lods
xor
or
imul
push
aam
xchg
push
push
dec
push
out
dec
xor
addr16
call
mov
xchg
popf
repz
mov
cwtl
bound
mov
ja
jmp
movsb
movsl
adc
adc
mov
cmp
cmpsl
and
mov
xor
xor
lds
add
hlt
inc
add
or
ss
mov
fdivl
arpl
pop
cwtl
inc
fidivrl
cwtl
lahf
adc
push
cmp
and
leave
dec
popf
clc
mov
push
ret
adc
sbb
dec
inc
ficoms
loopne
cmpsl
dec
es
xlat
adc
sub
fldl
xchg
inc
pop
stos
fildll
jecxz
pop
pop
jno
pop
mov
imul
repz
in
loopne
lea
movsl
and
js
mov
push
mov
cmc
push
in
data16
lods
mov
idiv
mov
movsl
sub
mov
ss
adc
sbb
xchg
add
inc
inc
enter
mov
fists
lcall
sbb
lods
inc
adc
in
mov
ficompl
movsl
fldcw
xchg
in
outsl
mov
das
adcb
addr16
mov
rclb
xchg
call
ret
cmp
cmp
lret
pusha
das
mov
mov
mov
sbb
mov
inc
and
je
imul
in
repz
mov
pop
push
aam
mov
scas
ja
ret
and
mov
call
or
ret
sbb
adcb
outsb
sbb
and
cmpsb
outsb
divb
popf
daa
push
outsl
mov
enter
pop
mov
inc
cmp
lea
in
push
jae
sub
je
in
push
sti
xor
sahf
rcrb
cmpsb
push
ljmp
sbb
jle
jns
shrl
push
mov
popf
mov
scas
xlat
aas
jl
fistl
cmpsb
or
add
sbb
adc
xchg
ret
cmp
sub
jmp
mov
into
pop
cmc
mov
xor
repz
aaa
add
cli
xor
xor
decb
add
cmc
sbb
cmpsb
adc
push
in
hlt
test
xorl
movsl
dec
mov
out
arpl
xor
ficoml
rorb
setge
fidivs
insl
dec
sarl
add
movsb
shlb
dec
mov
insb
dec
push
cmc
cmp
xor
jp
inc
sub
mov
inc
int
cmp
push
and
ffree
fwait
jns
loop
out
stos
lret
outsl
mov
sbb
mov
sbb
xlat
sub
mov
xchg
cmp
mov
bound
and
mov
lods
pop
jmp
rolb
pop
or
xor
ret
xchg
or
roll
loopne
dec
daa
nop
jb
outsl
push
fwait
dec
insl
loope
xor
mov
mov
xchg
mov
cmpsl
mov
fdivrl
lds
cltd
mov
push
into
sti
out
das
fmull
clc
mov
add
push
in
or
jg
mov
add
inc
fucomip
cwtl
push
or
pop
inc
sti
pop
pusha
out
in
push
es
fildl
push
cmp
out
xor
lahf
loop
sub
lcall
add
imul
push
popf
loop
cmc
mov
jns
sbb
daa
sbb
mov
ljmp
add
aaa
ss
data16
push
push
mov
sbb
cmp
mov
fwait
and
bound
addr16
push
insb
mov
std
shrb
push
leave
sub
out
std
mov
mov
clc
and
or
mov
jle
jp
dec
rorl
into
push
lea
xchg
arpl
pop
and
adc
repz
shll
xlat
aad
call
mov
jle
cmp
dec
rorb
lock
push
mov
cmp
and
pop
loope
xchg
inc
adc
add
pop
and
int3
mov
dec
push
sbb
xlat
cmp
add
loop
out
popf
or
fidivl
movsl
shrl
out
xor
cmp
add
pop
addr16
cltd
testb
jp
out
cmp
pusha
inc
xchg
shrb
push
pop
adc
add
push
rcr
fwait
loopne
hlt
inc
cmp
dec
js
sub
dec
mov
mov
mov
popa
lret
sub
notb
and
ror
add
sahf
fsubp
jmp
inc
cmp
mov
push
xorl
jle
mov
dec
inc
cmp
lds
test
xorb
pop
adc
jl
notl
and
sti
rclb
push
rcr
xor
xchg
lret
or
fsts
repz
arpl
std
addr16
or
mov
in
mov
fwait
inc
shl
mov
lds
inc
imul
pushf
leave
add
in
xor
push
ljmp
out
pop
mov
enter
cmp
and
mov
cli
bnd
cwtl
test
testb
adc
sub
adc
mov
pushf
fildl
mov
loop
jmp
shlb
mov
cmp
out
cmp
bound
rclb
fsubrs
jnp
lods
repz
dec
rcll
les
jecxz
in
pop
mov
cmp
out
pop
andl
or
jmp
dec
ljmp
jmp
sbb
je
jae
hlt
call
push
jmp
rorb
xchg
aaa
add
leave
add
lcall
dec
sub
in
push
push
bound
or
push
xchg
test
stos
pop
imul
and
dec
push
sub
fldl
mov
sbb
rorb
lahf
ror
in
icebp
stc
sbb
push
pushf
jne
or
mov
imul
push
outsb
ss
adc
mov
js
idivb
jnp
and
and
cmpsb
pop
xchg
std
enter
loop
lcall
addl
lods
ja
sahf
js
stos
pop
fdivr
fmull
mov
push
loopne
data16
push
sub
ja
mov
jno
add
repnz
scas
fstpt
mov
and
inc
clc
repz
jge
mul
ret
dec
adc
stc
out
fwait
mov
imul
pushf
std
stc
pop
sbb
push
js
cli
jp
cmpsl
mov
jge
or
gs
cmpb
or
fistpl
inc
cmp
mov
add
dec
into
shll
lds
pop
adc
shrb
jmp
dec
pop
aad
cmp
xchg
jno
xchg
mov
push
adc
inc
scas
mov
test
jne
inc
iret
jl
das
les
sti
add
popa
dec
cltd
add
mov
movl
fcompl
imul
mov
pop
outsb
in
or
mov
cmp
cltd
xor
jb
mov
pop
lock
cmpps
fstl
and
jb
dec
or
testl
mov
mov
fdivr
jg
test
shlb
xchg
xchg
pop
stos
sbb
adc
push
jnp
mov
lds
in
mov
xlat
mov
adc
add
pop
adc
jmp
pop
xchg
push
test
movsl
pop
lretw
je
pusha
test
clc
jo
repnz
jecxz
fstl
xchg
divl
jb
mov
pushf
pop
stos
push
inc
fimull
je
pop
flds
rclb
sbb
xchg
int
scas
xor
jno
mov
jns
dec
and
data16
jo
cmp
cmp
lret
sbb
mov
es
sub
push
cmpsl
fmuls
shl
inc
cmpsl
je
push
push
inc
dec
mov
mov
pop
sbb
test
shll
sti
jl
push
jns
mov
fists
xor
add
fildl
jmp
das
enter
mov
jmp
cmp
es
cmp
cmp
xchg
sbb
mov
xor
iret
mov
push
jns
mov
mov
inc
sbb
dec
pop
sub
sbb
adc
cli
or
push
mov
out
fsubl
push
cwtl
inc
push
push
dec
aad
stos
lock
push
xlat
into
outsl
push
sub
jne
mov
mov
aam
ja
sar
cmc
and
cmp
ss
jg
xchg
fnstcw
mov
fucomp
mov
push
mov
xchg
mov
aas
je
js
pop
sbb
insb
loope
cmpsl
dec
cmp
iret
insl
sbb
loope
dec
jnp
out
dec
out
aam
jle
dec
or
sub
inc
lret
jns
add
inc
mov
iret
xchg
aam
cmp
pop
repz
and
orb
movsl
test
sbb
or
flds
mul
aas
pop
sbb
loopne
xor
cltd
add
adc
cwtl
dec
adc
inc
je
lea
mov
xchg
add
in
enter
pop
dec
add
add
sbb
dec
add
add
jle
andl
push
ds
out
push
sub
dec
ret
pop
bound
or
inc
xchg
pop
aaa
bound
sahf
int
or
pop
and
outsb
jecxz
loop
jp
and
dec
jns
or
lret
push
jb
mov
ret
out
repz
rcr
fs
rcrb
add
xchg
out
cmpsl
out
dec
adc
ja
or
fidivrs
lods
dec
loope
es
sahf
push
test
pushf
ret
xor
pushf
hlt
test
xlat
pop
outsl
jge
lods
shrl
dec
dec
fcompl
add
dec
lahf
repnz
out
mov
jbe
lods
push
mov
mov
bound
out
push
mov
sub
sahf
insb
pop
loopne
cmp
arpl
out
push
in
mov
ret
xor
sbb
mov
testb
push
arpl
stc
xchg
test
sbb
push
jnp
push
scas
push
rcll
adc
or
in
in
jnp
sbb
enter
mov
add
and
clc
dec
hlt
mov
cmp
dec
std
push
cmp
shr
cmc
dec
pop
les
aaa
jle
inc
mov
pushl
xor
in
add
mov
push
int3
fcmovu
adc
arpl
jge
jne
call
stos
mov
repnz
inc
mov
push
jae
mov
lods
daa
fcmovnu
pop
add
push
scas
outsl
dec
sub
xor
xchg
and
push
shlb
rolb
add
aas
inc
push
sub
inc
sub
jne
in
lods
fs
mov
jge
sbb
or
adc
sub
filds
xchg
das
andb
test
jbe
es
fadd
ja
push
xchg
cmp
fistl
mov
in
dec
xor
mov
pop
lods
ret
insb
aas
dec
bound
sub
xorl
jecxz
pop
mov
push
scas
lds
dec
enter
out
scas
sub
jns
std
sub
sti
cli
repnz
mov
xchg
scas
mov
loope
subl
dec
xchg
lret
sub
pushl
out
aad
faddp
push
mov
add
loope
addr16
mov
mov
mov
xlat
decb
mov
push
inc
xorb
in
cmp
or
dec
mov
push
and
xor
cld
es
repnz
iret
mov
stos
cmp
push
mov
sub
aaa
and
mov
pushf
xor
std
pop
pop
icebp
jge
inc
lock
pop
in
sub
ljmp
imul
and
ret
pushf
rclb
mov
jge
dec
loope
jge
and
dec
mov
je
es
pop
pushf
lea
sub
inc
mov
xlat
jge
dec
dec
dec
adc
push
stos
fnstenv
rcl
stos
pop
xchg
cli
mov
adc
repnz
fwait
call
sbb
sub
ds
in
movsb
sbb
dec
movsl
call
push
lock
jle
ret
sub
add
push
cmp
daa
ljmp
push
cmp
push
test
hlt
call
mov
es
xor
mov
cli
and
cwtl
jb
imul
sbb
lahf
sub
xor
push
scas
mov
mov
pusha
jnp
xor
cmp
xchg
mov
sti
mov
cmpsl
push
dec
and
ljmp
mov
loopne
shr
mov
hlt
lcall
pop
outsb
cld
fs
jne
sbb
loopne
push
or
fcmovnu
cmc
pop
popl
mov
loope
sbb
sbb
in
push
mov
jmp
sub
sbb
daa
dec
xchg
adc
into
xchg
pop
push
pushf
ljmp
sahf
int3
js
repnz
adc
adc
add
pop
xor
sub
inc
ds
or
cmp
decl
cmp
mov
or
repnz
xchg
xor
das
in
leave
inc
xor
cmp
rol
adc
xor
and
pushf
dec
adc
in
sub
out
xlat
ljmp
mov
push
add
lea
adc
pusha
in
and
adc
andb
je
jmp
jp
jne
mov
popa
jbe
sbb
adc
mov
mov
cltd
into
jg
mov
in
movsb
sub
sub
rolb
xchg
rcr
test
in
add
cmp
mov
xchg
call
out
cli
jmp
pop
out
jecxz
ret
pop
sbb
cmp
testl
xchg
sub
ja
filds
dec
dec
push
scas
jae
arpl
adc
xchg
stos
jmp
adc
cmp
xor
iret
inc
nop
aas
rclb
fstpt
push
sub
push
push
fdivs
imul
jo
loope
push
rcll
in
ret
inc
xor
cmpl
mov
cmc
out
sub
and
and
mov
jg
xchg
je
push
ret
test
push
sub
aas
pop
xor
mov
pop
and
or
ja
mov
insb
dec
sub
stc
push
pop
xor
pop
sub
lock
jo
lcall
add
or
xchg
sub
movsl
xchg
lods
xchg
jp
outsl
sti
cld
sbb
or
loopne
repz
int3
fisttps
cmp
lea
fisttps
jmp
adc
in
bound
mov
cmp
cmpsb
scas
mov
sti
aad
shlb
pmulhw
cmp
negl
sbb
jb
ja
int
movsb
adc
add
xor
in
dec
sahf
icebp
pop
out
add
in
mov
int3
sarb
pushf
in
mov
jb
jmp
rorb
mov
xor
jmp
arpl
loop
mov
ss
pop
ljmp
jecxz
jbe
call
pop
cmpb
xorl
mov
sub
mov
sbb
out
sub
sub
je
mov
gs
push
in
enter
dec
sahf
inc
sub
sub
sbb
ret
adc
or
mov
jno
fsubrl
add
mov
inc
in
mov
and
cmp
pop
pop
cmp
shlb
cmc
data16
je
nop
adc
xchg
insl
bound
loopne
sub
inc
push
movsl
adc
inc
insb
pushl
int
push
sub
loop
push
movsl
pop
int3
sbb
cs
or
sahf
fildll
sbb
pop
cld
pop
cmc
ja
scas
jecxz
inc
movb
mov
test
mov
insb
shrl
mov
or
lret
mov
lea
add
imul
xorl
xor
mov
and
xor
xchg
xor
lods
stc
adc
mov
jne
addr16
sbb
lahf
inc
test
mov
ja
cmp
les
outsb
scas
jbe
adc
xor
clc
mov
popa
js
push
loop
pop
out
int3
lods
adc
loopne
pop
test
mov
mov
ljmp
nop
ljmp
cmp
mov
jl
js
mov
xlat
pop
cmp
loop
pop
and
call
out
dec
xchg
addr16
and
jecxz
or
dec
sub
or
test
jns
mov
clc
loope
sub
sti
xchg
mov
or
in
mov
sub
lea
push
jl
mov
cs
sbb
cvtps2pi
test
cmp
aaa
xor
sub
jle
xchg
ret
mov
and
daa
ret
jge
fcmovnu
arpl
insl
insl
mov
cld
sub
cmp
jp
sbb
xchg
push
sbb
add
push
inc
sti
jns
and
or
jl
in
sbb
pop
lods
arpl
insl
in
xchg
andb
inc
or
sbb
add
dec
mov
lcall
pop
frstor
or
jle
scas
int
hlt
pop
iret
roll
mov
xor
xor
dec
push
xchg
pop
jo
jnp
aam
mov
jb
push
add
cmc
out
scas
mov
out
scas
mov
test
xchg
frstor
or
divl
dec
sbb
call
jns
pop
adc
sbb
sub
idivl
repnz
push
imulb
dec
pop
cmc
xor
les
leave
push
insb
jns
xchg
push
dec
mov
out
inc
push
or
sti
jbe
adc
dec
inc
cmp
push
add
pop
sub
outsb
cmc
out
mov
cmp
incl
push
les
scas
call
xchg
test
arpl
xor
adc
outsb
adcl
repz
std
es
bound
xor
sub
out
add
sahf
xchg
ret
test
jno
push
xchg
clc
loope
fdivp
jmp
insl
push
in
test
das
inc
or
push
aam
in
add
dec
push
jns
pushf
mov
pusha
cmp
sub
xchg
pop
in
fbstp
dec
pop
or
in
pushw
cmpsb
pop
popa
sar
mov
aaa
xchg
cli
and
mov
push
imul
subl
dec
mov
xor
mov
cmpsb
xchg
inc
sub
xor
sub
addl
push
data16
add
imul
xchg
mov
push
loop
pusha
cmp
aad
movsb
dec
cltd
lods
notl
pop
lahf
mov
ret
iret
ret
pop
stc
xor
xchg
shl
enter
in
sub
pusha
mov
xchg
mov
jb
enter
je
insb
sti
xchg
mov
push
sbb
adc
sbb
inc
adc
lcall
in
js
mov
mov
xchg
sub
sarb
inc
adc
add
aas
subl
ficoml
xlat
std
add
out
cmpsl
adc
es
fsubrp
out
call
sbb
das
popa
imul
test
int3
or
iret
jg
ja
cmp
mov
push
xor
jecxz
cltd
int3
sbb
add
lcall
cmpsb
mov
fildll
mov
add
inc
sahf
in
sbb
in
movsl
inc
and
mov
ss
jae
adc
mov
xchg
aam
jbe
out
mov
dec
std
dec
sub
aaa
clc
pop
xlat
mov
dec
mov
fidivrs
scas
pop
lods
cltd
and
ja
sar
jmp
inc
jp
nop
lcall
jae
push
jno
fdiv
aaa
repnz
in
cmpsb
sbb
push
cmpsb
and
add
mov
mov
outsb
jno
das
inc
rorl
outsl
push
packuswb
rol
jmp
lock
mov
inc
pop
mull
cmp
dec
add
inc
inc
push
jno
dec
je
movsl
pop
in
inc
iret
addr16
xchg
fcoml
inc
adc
incb
adc
mov
dec
and
sub
pop
sub
pop
rorb
push
orb
pop
rcll
neg
xchg
dec
xchg
stos
ja
cmp
lret
add
out
nop
or
mov
sub
pop
pop
inc
test
jno
jb
cmp
cmc
in
xchg
mov
cmc
inc
adc
add
xor
push
nop
outsl
ds
je
insl
rorb
lods
sbb
icebp
mov
jge
jns
add
cmp
ret
fcmove
lds
js
clc
mov
ud2
adc
mov
jle
mov
test
jle
inc
dec
dec
imul
iret
or
sub
adc
cmp
lret
and
mov
pop
jb
rcr
mov
cmp
xor
mov
aam
loope
ret
push
jl
pop
push
repnz
jns
inc
repnz
js
inc
or
rclb
es
pop
xchg
jo
adcl
sbb
xor
int
fucomp
fstps
pop
push
inc
cs
movsl
add
jbe
loopne
fidivrs
push
cmp
insl
xor
jmp
mov
into
enter
call
xchg
sub
dec
in
mov
mov
incb
jle
jg
sbb
sbb
ds
jne
bound
aam
icebp
jne,pt
xlat
inc
addl
adc
fwait
loopne
mov
add
mov
adc
mov
inc
lods
push
std
fwait
imul
repnz
ljmp
nop
mov
aam
push
notl
gs
xchg
jno
aas
jle
int
jb
icebp
push
jp
mov
sbb
adc
cli
outsl
cld
sub
xchg
add
jmp
addr16
outsl
sub
cmp
xor
xor
pop
push
jmp
push
adc
jmp
inc
movsl
inc
push
in
clc
or
stc
add
xor
out
je
test
xor
les
jl
inc
bound
jp
call
aaa
add
loope
iret
cmp
sub
xchg
add
sahf
mov
loop
int3
xor
std
shrl
adc
lahf
adc
adc
pop
jmp
inc
push
test
or
outsl
push
or
add
cmp
rorb
jp
stos
test
push
sbb
xchg
cmp
add
dec
arpl
pop
mov
pop
inc
sub
mov
es
fisubl
ror
dec
shlb
push
jno
int3
popf
adc
std
aaa
mov
or
mov
das
sub
movsb
sti
enter
mov
push
push
into
repz
adc
mov
xor
js
dec
mov
xor
loopne
iret
jbe
hlt
push
cld
ds
sbb
inc
pop
mov
jne
fwait
dec
mov
mov
and
jle
cmpsl
jge
mov
insl
mov
inc
inc
and
pop
jmp
xlat
sub
xor
fucom
sbb
cld
js
xor
pop
call
inc
sbb
call
cld
xchg
cmpsl
dec
mov
xlat
mov
fsubs
out
out
jo
mov
daa
fiaddl
cld
add
loopne
iret
in
mov
dec
add
mov
fnstenv
jae
mov
lahf
dec
adc
mov
add
nop
addr16
jb
iret
mov
lret
pop
scas
addr16
jle
mov
mov
add
cmc
pop
in
mov
lret
imul
push
into
in
push
loop
and
cmpsl
or
mov
pusha
jbe
or
dec
xor
cmp
ret
lea
lods
icebp
or
arpl
inc
jmp
dec
xchg
mov
fcompl
in
jmp
jmp
and
add
mov
in
clc
outsb
cld
pop
ret
cmp
inc
xchg
add
and
xchg
fwait
push
ljmp
mov
jnp
mov
mov
scas
les
lret
fxch
fwait
adc
xchg
sbb
pop
outsl
cmpsl
or
pop
mov
arpl
mov
inc
into
es
cwtl
adc
inc
cmp
sbb
mov
xor
xor
jns
pop
shlb
xor
repz
mov
mov
jo
ss
mov
je
pushf
inc
mov
pop
fisubs
xchg
dec
pop
sub
dec
es
repnz
mov
sbb
cltd
fistpll
mov
movsb
ret
aas
adc
imul
popa
mov
ror
jo
pushl
jbe
stos
add
dec
adc
xor
jae
sbb
inc
lods
push
iret
addr16
mov
call
inc
xchg
mov
cmc
movsl
test
pop
add
mov
add
xor
push
imul
and
xchg
fnstenv
stc
pusha
xchg
imul
lock
xchg
xchg
inc
adc
xchg
mov
add
jmp
push
cmpsb
jp
addr16
test
fisubrs
and
cmpsb
and
and
mov
mov
leave
aaa
xchg
mov
dec
or
popf
movsl
in
popa
xor
inc
mov
lds
sbb
xor
sub
rorl
mov
mov
rclb
xchg
rcr
out
push
push
mov
sahf
addr16
out
mov
jle
sbb
jno
call
or
sub
shr
shrb
in
sub
data16
and
ret
cmpsl
pop
in
push
cli
test
xor
sub
cltd
dec
outsb
adc
cmp
pusha
push
ss
add
jg
into
cmp
add
inc
inc
lret
out
mov
hlt
push
adc
push
jae
push
shll
stc
or
jb
mov
shll
jns
xlat
inc
dec
lds
jcxz
sub
iret
and
xor
lea
jb
addr16
inc
pop
or
iret
xchg
sbb
mov
enter
cmpsb
stc
test
add
outsl
add
arpl
into
and
sub
lret
inc
add
xlat
test
jl
lods
enter
sbb
add
mov
sbb
movsl
push
xlat
inc
dec
push
mov
sbb
cmpsl
xchg
in
scas
xchg
or
movsl
lds
insw
cmpsl
arpl
aaa
dec
rclb
mov
frstor
jg
inc
cltd
adc
cwtl
aad
repnz
mov
fcompl
xchg
fcoml
inc
gs
dec
jnp
adc
aad
loope
and
in
movb
leave
out
test
dec
cmc
xor
inc
fs
cmpsb
sbb
xor
mov
pop
aas
mov
xor
mov
inc
in
stos
xchg
in
mov
sbb
xor
popf
mov
mov
jge
in
dec
rorb
jmp
pop
sub
push
jbe
fisubl
lds
mov
sbb
mov
movsl
imulb
imul
inc
jns
xchg
xchg
or
inc
add
bnd
mov
fidivrl
and
push
stos
pop
movsl
call
bound
or
or
repz
leave
into
scas
cmpsb
sqrtps
mov
xchg
in
imul
pop
ror
mov
pop
int3
jne
mov
dec
rol
mov
adc
push
xlat
dec
inc
fs
sbb
push
in
add
icebp
scas
lahf
divps
into
jb
lcall
add
or
sbb
cmp
mov
clc
int
fxch
mov
jecxz
in
mov
in
test
inc
ret
ljmp
gs
inc
add
into
subb
mov
or
sbb
ret
lods
scas
jnp
push
fwait
rorl
mov
push
lods
and
jl
sbbl
leave
jg
cmp
repnz
jge
cltd
pop
mov
mov
arpl
jmp
rcl
jno
mov
and
sub
fistl
sub
fistpll
mov
loop
leave
mov
xchg
les
loope
es
or
out
in
pop
push
clc
or
mov
ja
cld
lods
ja
pushf
sub
mov
dec
imul
pop
pushf
jecxz
adc
es
pushf
imul
push
jl
push
sbb
popf
mov
or
sar
jne
ds
loop
popa
popf
push
loop
hlt
jo
pop
or
test
sbb
adc
fistps
testl
ss
push
mov
jecxz
std
add
xor
std
xchg
sub
js
jl
lock
mov
movl
out
jne
shl
sbb
sbb
adc
push
mov
pusha
btr
test
or
out
pop
dec
and
xchg
pushf
xchg
lcall
cmp
dec
testw
jecxz
push
je
and
add
rcrl
fmuls
mov
sub
jo
xor
push
lret
cmp
addr16
ffree
fistps
mov
lock
int3
popf
dec
lret
push
scas
mov
ds
inc
dec
xor
test
data16
xlat
mov
inc
add
pop
mov
xchg
mov
in
fs
ret
mov
in
inc
add
mov
mov
ds
xchg
jmp
and
aam
ror
jbe
cmp
xchg
in
cmp
ja
cmp
cli
in
loope
or
mov
push
aas
stos
outsl
js
dec
jnp
jge
mov
cmc
popa
adc
adc
out
cs
fbstp
pusha
lods
mov
mov
dec
push
jb
jecxz
popl
mov
fistpll
push
cmp
fwait
cltd
loope
int3
fstpl
inc
sbb
and
push
mov
push
sbb
out
inc
es
hlt
pop
mov
push
inc
mov
jae
or
sub
inc
pop
xchg
mov
pop
xchg
dec
jmp
add
xor
stos
mov
into
test
add
or
add
push
add
sarb
pop
inc
fwait
in
adc
shr
or
cmp
or
pop
dec
jo
dec
lods
iret
mov
lock
scas
pop
mov
test
inc
sbb
mov
fistl
adc
enter
out
fstpl
and
sub
movsb
rolb
fcoms
leave
and
aas
pop
addr16
xchg
mov
lods
xchg
mov
loop,pt
and
jle
jmp
jmp
pop
cmp
mov
call
shrl
stc
cmp
ret
mov
mov
dec
or
push
stos
push
inc
sti
jb
xlat
sti
adc
dec
pushf
lea
mov
sbbb
or
pushl
sbb
add
xor
xor
pushf
fisttpll
sbb
mov
mov
notb
sbb
in
xor
in
pop
iret
arpl
into
and
in
mov
mov
insl
cmpsl
xlat
push
mov
jnp
add
push
in
movsl
mov
sbb
adc
or
dec
and
fistpl
cmc
xchg
test
fstp
int
cli
lods
jle
push
mov
xchg
cmp
cmpb
addb
jp
and
xchg
int3
daa
mov
das
mov
mov
xlat
jg
dec
es
and
xchg
xor
fsub
stos
jne
je
repnz
adc
imul
stos
insl
jae
jno
xchg
dec
cmpsl
into
dec
inc
mov
daa
cmp
push
iret
int3
or
lcall
sub
repnz
and
dec
aad
cmp
fldl
bnd
loopne
add
fstpl
icebp
and
clc
popa
mov
add
or
xor
inc
pop
add
mov
push
pusha
addr16
pushf
or
sbb
sub
jmp
mov
enter
sub
adcb
les
and
inc
ret
scas
or
icebp
test
sbb
inc
lcall
sahf
dec
xchg
lods
mov
xor
loopne
pop
mov
shlb
cmp
repz
je
arpl
imul
mov
sahf
dec
idivl
testb
mov
xlat
cmc
push
loopne
popa
loopne
sub
and
mov
inc
xchg
xor
sbb
cmp
repnz
mov
mov
xor
iret
mov
dec
cwtl
pushf
aam
hlt
and
lret
bnd
insb
mov
jle
sub
xchg
xchg
or
sti
or
push
jnp
pop
push
aas
cld
cwtl
in
subb
push
cmp
xchg
or
out
aad
adc
cwtl
mov
ret
cmpsb
ret
pop
cmp
in
rorb
sbb
cmp
mov
jo
mov
loop
pop
rorl
popa
arpl
shll
test
add
mulb
add
xor
push
or
in
xchg
imulb
dec
mov
xchg
aam
pop
std
sub
xor
ret
cwtl
jo
xchg
pop
mov
lock
stos
dec
push
push
sbb
xor
xor
push
imul
in
js
and
pop
int3
inc
ret
icebp
pushf
inc
fsub
add
lods
xor
inc
xor
inc
cmc
jno
cmpsl
repnz
or
inc
enter
xorb
inc
jmp
or
fsubs
xor
mov
aas
or
xor
push
mov
add
out
into
push
insb
test
xor
sahf
dec
push
test
sbb
stc
shl
dec
pop
data16
rcrl
les
loope
mov
mov
mov
test
imull
daa
out
imul
push
mov
test
xchg
push
and
push
addr16
hlt
mov
jns
xchg
js
inc
inc
mov
test
test
inc
push
pushf
xchg
imull
iret
inc
pop
leave
jnp
ret
sbb
jp
int
push
imul
mov
sub
dec
sub
pop
xor
mov
gs
xor
xchg
call
repz
jbe
pop
lahf
xchg
aad
lahf
pop
xchg
movsl
push
inc
push
xor
adc
and
push
lcall
xor
jo
sub
push
pop
cltd
hlt
mov
out
fistpl
pop
xor
cmp
in
push
hlt
inc
lahf
clc
cs
mov
add
in
pop
jns
mov
out
loope
loop
ret
mov
and
pop
push
mulb
adcb
mov
or
inc
cltd
sub
pusha
jno
jo
cmp
mov
stos
in
push
jae
and
jno
lcall
xchg
push
add
jbe
mov
xchg
inc
sub
aas
mov
and
pop
sar
mov
popa
or
idivb
adc
jmp
insl
scas
out
sub
pop
cmovae
decb
rcrl
mov
hlt
nop
mov
lahf
adc
stc
cmc
xchg
stos
nop
mov
mov
or
xadd
add
mov
les
int3
jecxz
jle
xchg
sbbb
lcall
ret
test
xchg
sbb
cs
jno
mov
mov
out
pushf
jg
arpl
pop
mov
sbb
xor
sub
adc
sbb
out
mov
dec
xchg
lcall
jb
leave
inc
aad
dec
mov
cmp
rcll
arpl
leave
jmp
xchg
cmp
stos
jbe
adc
cmp
daa
pop
xor
sahf
arpl
aaa
push
push
sbb
push
cmp
add
in
pop
xchg
in
xchg
fwait
sub
stos
or
push
cmpsl
dec
loopne
in
xchg
push
notl
incb
es
cltd
sbb
sti
or
add
dec
imul
xchg
dec
gs
push
fistps
aaa
ljmp
roll
add
push
bound
cld
sbbl
add
insl
iret
cmpsl
xor
in
out
mov
xchg
jo
or
stos
cwtl
outsb
mov
and
out
repz
and
sbb
test
in
add
js
lahf
sbb
cld
idivl
sbb
pop
sbb
mov
mov
push
inc
mov
pop
test
adc
loope
nop
pop
mov
rorb
lahf
mov
push
pop
es
inc
outsb
add
out
push
push
out
sbb
inc
sub
and
loop,pn
xchg
cld
push
lcall
cmpsl
aaa
fimull
in
dec
out
add
or
and
scas
add
fstpl
sub
stos
push
inc
ret
imul
xchg
push
cmp
mov
add
cmp
iret
adc
cmp
push
pop
inc
pop
orl
les
pop
fnstsw
mov
shrl
cmp
pop
pop
mov
or
test
push
enter
mov
mov
push
aad
pop
es
pop
jge
popf
jns
stc
cmp
cmpsb
adcl
shr
mov
lret
xor
jb
and
cmp
adc
arpl
add
sub
adc
inc
cld
add
shll
pusha
mov
push
pop
sub
add
pop
or
xchg
xchg
enter
aam
scas
scas
xsha1
cmpsb
lret
mov
cmp
imul
pop
loopne
in
dec
popf
lods
xchg
repz
out
mov
out
inc
out
xor
xor
xor
xor
stc
pop
imul
out
xchg
sti
fsubr
xlat
adc
dec
or
repz
or
sub
pushf
orb
jecxz
fcoms
ret
aas
and
in
adcl
hlt
test
andb
insb
xlat
outsl
inc
sbb
ret
dec
adc
in
scas
std
jnp
test
data16
mov
out
js,pn
cmpsl
js
push
jmp
xor
inc
xchg
into
push
jp
jl
mov
mov
hlt
into
or
fildll
jnp
sbb
mov
ss
bound
push
push
fdivs
int
xchg
mov
push
fisttpl
jae
mov
add
dec
nop
dec
nop
push
sbb
adc
fs
cwtl
shrl
mov
popf
or
or
mov
lods
mov
push
sub
je
repnz
mov
dec
sahf
xchg
dec
lea
imul
nop
or
call
sti
int3
incb
mov
mov
jb
out
inc
sub
push
or
push
and
jmp
pop
jnp
fwait
sub
cmp
pop
shlb
inc
movsb
xor
and
jl
jge
push
fwait
cmovle
lret
dec
add
loopne
xchg
jne
add
frstor
mov
push
in
mov
cmp
nop
push
loop
xchg
xor
adc
test
sub
push
mov
pop
pop
in
mov
xor
pusha
call
cmp
xor
mov
out
mov
sub
rorb
shlb
xchg
cli
push
xor
das
or
call
gs
scas
or
pop
lock
push
lret
pop
inc
dec
dec
xor
scas
insl
cmpsb
jae
lods
mov
push
mov
sbb
scas
sbb
dec
imull
push
pop
pop
out
loopne
mov
push
fdivrp
hlt
and
int3
mov
and
mov
pop
orl
mov
enter
out
push
adc
dec
pop
cmpsb
aaa
adc
inc
xchg
xchg
mov
das
out
cli
pop
mov
shr
bound
outsl
xchg
inc
sbb
sarb
xchg
inc
mov
cwtl
xchg
call
ficoml
lcall
sbbb
fcoms
movsb
mov
add
cltd
std
lret
test
mov
jecxz
imul
pop
fists
dec
das
sub
add
test
test
inc
pop
push
insl
jb
jbe
aam
mov
jns
popa
scas
addr16
xor
and
xor
add
rcrl
fistps
push
cld
dec
dec
pop
fisubs
lods
test
adc
inc
aad
test
ja
xor
cmp
and
xor
out
cmp
call
push
ds
je
nop
cmpsl
fld1
cmpsl
insl
fiadds
int3
xchg
jo
je
aaa
cmp
cs
add
popf
dec
mov
repz
or
movsl
int
fstl
jl
xlat
xchg
js
jnp
xor
stos
dec
adc
sub
add
sub
loopne
or
xor
and
xor
arpl
cmp
lods
outsb
push
ds
popa
mov
stos
push
test
xor
hlt
sub
loope
iret
repnz
mov
and
dec
outsl
xchg
out
aam
adc
xor
mov
push
cmp
cmp
daa
lret
lds
sbb
mov
ja
lods
imul
pop
cltd
xchg
rclb
and
nop
addl
andb
xchg
mov
xchg
adc
ret
and
sahf
cmpsl
movsb
gs
dec
jge
mov
adc
insb
push
or
in
jne
out
pusha
pop
sbb
sbb
out
push
rclb
xchg
dec
clc
orb
pusha
dec
jno
jb
mov
gs
mov
lea
jne
cmp
loop
push
out
dec
adc
and
sbb
or
xor
ljmp
mov
inc
add
xchg
xor
fmulp
lcall
xchg
and
fistl
lea
xchg
jb
in
jmp
dec
ret
pop
inc
pop
fcmovnu
dec
inc
mov
add
pusha
subl
pusha
pushaw
into
or
dec
rorb
or
mulb
xchg
cs
out
lcall
push
mov
hlt
dec
lcall
xor
xor
ds
cmp
lret
add
movsl
imul
fyl2x
jnp
push
scas
cmpsb
and
cmp
xor
inc
adc
hlt
mov
movsl
mov
movsl
and
push
sub
mov
shll
xor
xchg
add
lret
xor
sti
cmp
in
fmul
std
test
push
sub
test
sbb
lea
shrl
movb
jae
dec
inc
loope
addr16
sbb
push
fdivl
inc
arpl
aaa
xchg
fildl
imul
je
xchg
incl
fs
imull
or
sub
lret
push
xchg
repz
cmp
xlat
mov
scas
mov
iret
push
jge
je
lret
xchg
insl
outsl
cwtl
mov
cmpsb
xor
dec
adc
and
add
mov
pop
enter
sub
xchg
aas
movsl
fidivrs
mov
ret
test
mov
add
sti
lods
cmpsl
sub
push
test
pop
sti
sbb
fcompl
jnp
pop
clc
sbbl
xchg
pop
mov
shll
movsl
push
rorl
or
mov
sbb
aad
mov
test
bound
and
clc
push
sbb
cmc
inc
jg
xchg
dec
dec
sbb
std
xor
xchg
mov
mov
cmp
sub
dec
adc
sbb
jb
jo
ja
pop
js
sbb
sub
inc
add
inc
scas
push
bound
mov
mov
movsl
pop
dec
push
mov
mov
shlb
pop
dec
inc
lret
dec
fmuls
mov
mov
pusha
jbe
cld
mov
dec
push
jg
dec
pop
enter
jp
andl
xchg
insb
cltd
test
lret
les
std
adc
adc
scas
mov
aas
jmp
ss
push
test
sbb
dec
insl
xor
repz
inc
push
adc
pop
sub
push
arpl
mov
data16
sub
loop
jl
mov
pop
xchg
xchg
repz
push
jnp
mov
enter
rolb
push
adc
aam
sub
les
jge
hlt
inc
cld
mov
loope
push
out
sub
push
add
nop
daa
scas
pmulhw
sbb
sahf
cmp
lods
and
out
adc
mov
fstpt
cmpsb
cltd
ja
jae
xor
cmc
shrl
fmuls
xor
add
fwait
jl
mov
in
into
push
rcr
or
mov
add
mov
mov
sub
mov
shlb
cmp
je
push
mov
insb
jge
cmp
or
mov
jae
jl
setle
adc
jp
inc
or
dec
notl
subl
adc
or
push
outsl
cmp
push
or
mov
sar
mov
ljmp
addr16
lcall
lahf
sbb
xchg
and
into
ja
jo
loop
push
sbbl
in
in
test
pop
movsl
and
call
add
hlt
sarl
lods
xor
in
mov
es
ds
dec
in
mov
pop
shll
sbb
lret
push
dec
aaa
push
push
out
mov
mov
lcall
pushf
and
mov
sub
sub
sub
gs
in
or
cmp
cmp
push
dec
sbb
std
cmpsb
xchg
add
stc
icebp
xchg
sub
lcall
jnp
dec
xchg
mov
leave
lods
ss
rolb
cmp
pop
dec
psrld
push
adc
mov
mov
adc
cmpsb
xchg
add
sub
sti
out
lds
and
loopne
pop
fstpl
adc
mov
scas
adc
sub
fldt
xor
outsb
jb
push
outsb
push
jo
or
das
in
push
sub
rol
sub
push
out
pop
and
and
lahf
sub
jg
orb
arpl
mov
outsl
add
adc
xorl
ret
adc
popf
loope
imul
insb
rclb
pop
inc
sub
test
and
jne
rolb
or
mov
pop
inc
iret
cld
subb
dec
enter
jmp
aas
pop
jl
adc
mov
movsl
sbb
sarl
fmull
lods
push
movb
in
pop
addr16
je
push
xchg
ja
repnz
scas
dec
mov
cmp
pop
push
adc
cmc
jge
add
popf
or
pop
cmp
loop
fs
ret
mov
lods
adc
scas
loopne
mov
clc
mov
mov
pop
fcomi
mov
enter
push
xor
test
or
gs
jo
loope
or
inc
shll
stos
ss
stos
sbb
or
dec
sarb
mov
or
cli
leave
js
out
fwait
push
shl
cmpsb
rcll
mov
bound
out
mov
or
pop
js
movsb
pop
and
push
ss
lock
ss
decl
xchg
js
rolb
in
clc
test
loopne
int
lret
xor
pop
sbb
andb
imul
rol
pop
sbb
arpl
ds
xor
aas
push
dec
dec
xchg
fdivs
stos
lahf
cmp
sbb
xorb
stos
sub
sbb
mov
dec
push
mulb
sbb
aam
clc
sbb
fsts
sub
sub
ds
shl
pop
cld
push
ret
xchg
sbb
out
out
imul
push
push
lods
cmp
sub
subl
fcompl
sbb
add
and
out
call
in
pop
sbb
frstor
clc
adc
repnz
fistl
xor
outsb
cmp
test
mov
pmulhw
cmc
dec
mov
outsl
outsb
stos
jnp
ss
test
dec
dec
sbbb
into
je
ja
adc
add
outsl
movsl
dec
mov
data16
jle
in
lds
fwait
push
aas
sbb
xchg
jl
repz
iret
push
inc
scas
push
out
jp
into
xchg
xor
mov
push
pop
in
subb
push
repz
or
xor
jae
out
xor
aad
arpl
xchg
sti
push
clc
fdivl
popl
das
js
mov
or
scas
bound
xchg
add
aam
and
lahf
sbb
push
pushf
jmp
addr16
orb
stc
call
lret
outsb
adc
jno
and
sbb
adc
ret
int
shrl
ret
and
leave
int3
mov
mov
push
cld
push
xchg
addr16
outsb
push
push
push
sahf
jnp
addb
mov
dec
xor
js
jne
pmullw
sub
cmp
stos
pusha
sub
fwait
and
and
subl
mov
push
imul
sbb
sarl
dec
sub
inc
js
dec
cmp
mov
pushf
test
lret
adc
dec
leave
xchg
je
in
pop
pop
and
xlat
jo
or
push
pop
cmp
push
repz
sbb
daa
jo,pt
cltd
or
add
pop
adc
mov
in
jne
xlat
in
filds
adc
inc
inc
fwait
pop
loop
addr16
rolb
in
push
jecxz
cmp
ret
pop
mov
xchg
dec
add
icebp
lds
aad
cwtl
xchg
pop
xorl
rorb
lock
pop
mov
scas
loop
pop
test
fcomps
xchg
pop
sbb
ja
lock
femms
mov
inc
rorb
xchg
ficoml
negl
dec
pop
add
stos
lret
out
adc
fisubs
push
inc
xor
shlb
lea
dec
inc
loopne
or
loopne
les
adc
and
pop
xchg
mov
or
xor
cmp
ret
addr16
pusha
mov
jp
sahf
mov
stos
jae
enter
js
ja
xchg
jbe
jg
jge
int
data16
lret
mov
imul
mov
fadd
sub
aam
push
lock
popa
out
xchg
add
test
in
and
or
sub
outsl
xchg
aaa
lret
mov
mov
dec
xchg
sbb
pop
mov
loopne
inc
rol
sub
es
dec
aad
stos
pushf
or
dec
sbbb
aaa
cli
repz
dec
push
dec
in
mov
mov
shrl
repnz
arpl
add
lcall
jl
lcall
scas
sarl
icebp
xchg
cmp
aaa
inc
adc
stos
je
add
add
lret
movsb
out
outsb
addr16
dec
jae
int
inc
fs
xchg
cmp
or
push
xor
fucomip
mov
inc
ret
out
add
cmp
sub
push
xchg
dec
xchg
and
bound
dec
and
sbb
cli
sub
popa
shr
mov
aad
xor
mov
jmp
sub
mov
lret
add
fdiv
add
out
lods
loope
es
ljmp
cmp
stos
xor
xchg
in
push
xchg
pop
add
repz
sub
mov
cmp
xorl
sub
and
lcall
mov
insl
jl
mulb
inc
cmp
dec
sti
jnp
sub
dec
fwait
push
movsl
push
sbb
adc
cli
faddl
bnd
lock
mov
cmp
mov
inc
mov
nop
mov
or
inc
add
sbb
mov
lret
dec
lahf
pop
loope
cmpsl
adc
sbb
cltd
int3
cmc
jg
std
shr
es
adc
loop
dec
mov
inc
pop
lret
rcrl
inc
mov
mov
mov
ret
or
sti
jbe
inc
mov
xchg
int3
adc
jns
or
popa
shll
push
ret
inc
lret
mov
pop
add
cmpsb
pop
cld
jmp
icebp
xchg
enter
push
imul
jae
popa
and
outsl
popa
ret
pop
lret
mov
in
mov
mov
mov
jl
and
shrb
gs
int
pop
mov
fisubs
cwtl
fcom
pop
lahf
test
lret
inc
nop
cmp
je
loop
inc
and
inc
arpl
call
xor
sub
lds
std
push
ud1
int
inc
sub
pop
push
push
mov
pop
pop
mov
jg
pop
cmc
cmp
adc
xor
imul
lods
mov
cmp
inc
push
or
test
mov
loope
hlt
push
pop
jo
mov
imul
clc
adc
inc
adc
xchg
jle
sbb
pop
or
enter
push
pop
mov
or
repz
dec
mov
in
repnz
and
popf
out
adc
xchg
mov
loope
loope
pop
outsb
cmc
subb
fst
int3
fsub
jb
mov
enter
push
sbb
push
push
mov
int3
movsl
arpl
test
fdivrl
cmc
fcmovnbe
fnsave
xor
jmp
push
scas
mov
jnp
in
gs
jbe
mov
jmp
pushl
xchg
test
cmpsb
int
mov
jmp
xchg
shll
jecxz
daa
sbb
ret
pop
push
add
mov
pusha
popf
test
lock
fsubs
xchg
push
xchg
cmp
int
in
inc
negl
mov
xor
mov
dec
test
pop
inc
and
cmp
mov
dec
xchg
fisttpll
sahf
outsl
xchg
jo
mov
sub
pushf
daa
lcall
cmc
and
cld
pop
add
jne
lcall
decl
sbb
faddl
aad
mov
stos
lahf
mov
xchg
push
out
leave
mov
xor
cmp
and
repnz
out
jl
fmull
pop
test
xchg
inc
test
sahf
cmp
scas
adc
and
add
out
fsubp
cmp
repz
xor
or
sub
lods
scas
pop
push
cltd
scas
and
push
cmp
pop
ss
mov
lret
or
mov
call
mov
lret
mov
dec
clc
xchg
push
xor
bound
js
out
dec
xchg
aas
int3
mov
xchg
out
mov
test
pop
andl
jo
jp
mov
aas
jmp
or
push
test
mov
les
sahf
ffree
cmc
cmpsb
pop
lret
sbb
pop
mov
pop
aaa
mov
ret
stos
inc
push
aam
xchg
push
adc
das
xchg
std
arpl
mov
dec
ds
adc
cmp
push
hlt
and
inc
jbe
push
jge
or
aaa
xorb
sub
pop
push
add
pop
in
lret
es
mov
std
fcomi
mov
lahf
xchg
push
int3
adcb
mov
jl
jns
pop
hlt
ds
cli
mov
adc
jle
in
pop
test
test
adc
rcrl
movsl
mov
or
cli
cmp
mov
sub
fsubs
les
adc
in
push
ss
in
mov
ret
dec
pop
fwait
rorb
add
xor
push
sub
clc
rcl
xorb
mov
sahf
in
pop
ljmp
mov
frstor
mov
adc
mov
adc
push
imul
cld
stc
lods
test
lods
in
cld
adc
mov
call
jae
and
fsub
xchg
adc
lahf
scas
mov
out
imul
adcl
testl
cmpsb
lods
sbb
push
xor
ficoml
lds
mov
in
mov
xor
jae
push
lods
pop
jmp
aad
inc
imul
add
vmovntps
cmp
xor
sbb
mov
xor
stc
mov
mov
and
add
or
push
test
mov
insl
xor
jp
movsb
in
flds
into
inc
test
mov
xchg
fnstenv
hlt
sbb
popl
fs
mov
adc
lods
dec
out
sub
inc
loope
popf
adc
inc
lods
add
out
jae
cmp
pop
inc
popa
mov
std
in
pop
flds
lock
pop
sahf
xchg
inc
sti
rol
push
lahf
flds
inc
rclb
lock
movsl
jp
and
aas
loop
push
movsb
push
fs
xor
jnp
icebp
sbb
lret
pop
cmp
jns
in
daa
pop
and
cmc
lret
imul
push
inc
xor
push
jb
test
mov
push
test
fstl
xchg
mov
sub
jmp
js
movsb
add
xchg
mov
cmp
leave
push
cmp
jle
sbb
fstl
stc
cmp
div
sbb
xchg
mov
cld
add
inc
mov
cmp
inc
and
mov
or
cmp
pop
pop
clc
inc
and
xchg
pop
cmp
fidivs
push
jns
scas
mov
arpl
or
fnstenv
mov
cld
dec
ret
incl
int
shl
or
push
addl
int
inc
imul
mov
mov
push
icebp
fildl
std
sbb
sti
sub
in
mov
mov
adc
cmp
lcall
or
sbb
rcrb
roll
in
fdivrs
jmp
mov
xor
mov
lock
sub
dec
inc
subl
aad
lret
out
pop
mov
xchg
pusha
jg
or
scas
adc
mov
or
pop
dec
push
popf
leave
and
xor
and
dec
xchg
sti
sub
enter
mov
push
push
mov
arpl
and
mov
xor
in
lahf
lock
jecxz
scas
mov
subb
mov
in
icebp
jns
sti
adc
or
pop
xchg
xchg
xor
adc
sub
stos
scas
ja
dec
pop
int3
xchg
roll
sbb
add
in
aas
inc
jge
cmp
aas
and
mov
inc
xchg
fstps
or
xorl
sbb
fwait
pop
in
sub
in
inc
negl
int
mov
sub
cmp
mov
in
dec
icebp
adc
sarb
jb
push
inc
xlat
mov
jo
sub
cmp
mov
and
add
int3
pushl
loop
and
mov
sti
std
sub
cmp
dec
fcoms
xor
adcb
out
add
sbb
fisttpll
outsb
loop
jnp
pop
or
xor
xor
pop
push
dec
jne
or
scas
pushf
push
inc
xchg
mov
decb
int3
filds
mov
dec
mov
cltd
mov
jns
out
bound
mov
enter
popl
dec
and
lea
and
push
cmc
mov
jge
pop
add
gs
clc
cmp
xor
addr16
xchg
in
jmp
xchg
xchg
xchg
std
mov
lret
jp
cltd
jbe
mov
shll
dec
and
sarb
repnz
inc
dec
fstpl
addb
push
rol
lea
inc
aam
ret
jae
in
mov
data16
adcl
mov
mov
sbbl
jae
out
jg
aad
out
pop
jl
and
mov
pop
ss
sub
mov
add
push
xchg
dec
or
mov
pop
movsb
inc
push
push
pop
pushaw
inc
cli
clc
inc
jnp
jmp
ret
orl
ficoml
repz
pop
mov
add
jno
jle
push
push
popf
pop
popf
clc
cs
sarb
clc
or
es
mov
jne
cs
iret
je
push
mov
xchg
xchg
adc
js
popa
sub
mov
gs
iret
negl
repz
fiaddl
gs
scas
cld
pop
dec
stc
cld
sub
ljmp
mov
call
cmpsl
fwait
aas
les
loopne
add
mov
jle
rorl
ss
dec
ss
push
sub
add
adc
filds
clc
cmp
lret
xchg
stos
jmp
mov
jmp
pop
push
or
xchg
into
push
leave
pusha
data16
dec
pop
push
inc
lods
inc
mov
and
addr16
cmp
push
mov
mov
and
mov
mov
pop
enter
jbe
mov
jmp
pop
cs
mov
sti
xchg
adc
loop
xorl
in
pop
add
out
mov
jg
stos
rcl
nop
pop
inc
shl
aam
cli
movsb
in
jg
xchg
adc
mov
push
or
pop
cwtl
adc
out
shlb
mov
cmpsl
sti
cwtl
xchg
mov
mov
outsl
ja
out
mov
mov
ljmp
ret
gs
push
enter
add
mov
cmp
pop
sub
dec
add
fincstp
cmp
mov
pop
ficoms
xor
sbb
inc
sub
rorb
jns
sub
lahf
mov
xor
dec
fisubrl
and
out
pusha
es
fcoml
arpl
fiaddl
mov
sub
inc
dec
rclb
push
enter
cld
xlat
aam
jbe
popa
push
adc
mov
cmp
add
xor
fldcw
cmpsl
out
push
add
rcll
out
jb
jmp
out
cwtl
sar
push
cmp
jb
fs
ljmp
repz
sarb
das
int3
jge
dec
xchg
push
imul
xor
cli
arpl
dec
int3
cmc
arpl
lcall
cld
adc
jge
je
lret
lret
xor
xor
dec
sub
mov
notb
jg
ss
sbbl
popa
fstpt
inc
call
xlat
mov
and
xchg
cwtl
push
hlt
and
mov
mov
pop
in
xlat
xchg
in
mov
pusha
dec
out
dec
sbb
xor
call
and
pmaxsw
adc
lods
jnp
repnz
aad
outsb
cmp
mov
mov
push
mov
push
cmp
cmp
data16
mov
or
movsb
sub
mov
mov
jae
fnstcw
dec
dec
push
sbb
sbb
cmp
mov
notb
repz
imul
mov
pop
xor
sbb
cwtl
mov
mov
xchg
lods
pop
sub
fwait
pop
adc
pop
xor
lret
dec
pop
notl
push
adc
ja
xchg
xor
inc
xor
xlat
mov
cli
leave
mov
pop
pop
js
cmc
mov
mov
add
bound
aaa
jg
repz
mov
mov
pushw
mov
adc
fimull
negl
jl
into
je
or
into
sbb
add
iret
jb
sti
lcall
fistps
repz
xor
enter
stc
or
mov
ret
xchg
sarl
mov
aaa
in
cli
into
mov
cs
cmp
pop
xchg
lret
dec
add
xchg
mov
movsb
imul
mov
dec
fdivl
mov
arpl
xor
popf
rcll
jmp
mov
ja
mov
data16
fldl
int3
cmp
fwait
adc
ret
pop
mov
cmp
lcall
mov
and
fwait
inc
jg
cmc
lret
inc
repz
frstor
call
xchg
sbb
mov
cmp
jmp
mov
jns
in
xorl
and
cs
mov
xor
cs
dec
add
cmp
outsl
adc
aas
xchg
into
rorb
subl
loop
lods
cmp
call
lds
jo
cmp
imul
fs
xorl
cmpsl
mov
mov
test
jecxz
sarb
js
push
lret
hlt
mov
mov
dec
or
fiaddl
mov
sub
cltd
mov
inc
and
cs
leave
and
imull
aam
sub
or
push
arpl
daa
loopne
lret
pop
push
jp
cmc
jno
inc
jmp
adc
in
orb
or
popa
cmpsl
mov
test
cltd
cli
test
add
mov
add
mov
ja
arpl
enter
sub
push
sbb
push
lods
sahf
test
daa
pop
sbb
mov
mov
mov
push
rcr
movb
incl
bound
jp
lods
xchg
fucomip
fistps
pop
lret
outsl
dec
shlb
push
xor
nop
imulb
mov
scas
mov
test
icebp
jno
je
inc
mov
jns
call
cmpsl
push
add
sub
xor
push
je
leave
and
cmp
jecxz
inc
mov
ret
and
in
cmp
jmp
push
adc
lea
mov
mov
pop
sbb
lret
xor
lds
cli
or
mov
jg
jb
lret
loop
in
mov
scas
in
dec
dec
loopne
mov
sbb
aam
mov
mov
ret
push
xchg
pop
ds
push
mov
or
cmp
push
dec
shl
icebp
out
int
stc
repz
mov
bound
sahf
fists
cltd
mov
int
out
cmpsl
sbb
lds
jg
es
adc
jb
cmp
push
mov
pop
jecxz
jae
mov
cmpsl
sub
xor
nop
sbb
push
fists
dec
xor
push
out
mov
sbb
add
sbb
dec
cmp
aaa
cmpsb
pop
push
xor
cmp
xlat
bound
aam
cmp
cmpsb
inc
or
xchg
lahf
loop
sbb
push
pop
add
stc
addr16
jmp
test
in
ret
out
jae
push
pop
out
or
addr16
out
mov
and
inc
sbb
xchg
jl
nop
aad
mov
pop
shll
dec
xchg
mov
add
lret
les
add
mov
or
repnz
aas
xor
jne
sbb
push
hlt
push
clc
into
iret
loopne
jne
arpl
inc
gs
arpl
sub
jg
sti
rorl
aas
pop
ljmp
adc
mov
pop
pushf
or
test
int
popa
loopne
push
jp
daa
inc
ret
mov
cmp
mov
xchg
nop
xlat
pop
pop
imul
mov
xorl
repz
les
cmc
rorb
in
mov
pop
aad
mov
out
lods
out
push
loop
add
pusha
xor
ret
pop
or
hlt
movsb
fidivl
mov
add
jp
mov
out
js
movsl
lods
push
push
add
cltd
in
popf
loopne
pop
jmp
std
ficoms
js
adc
mov
sar
call
xchg
cmp
int3
jo
mov
mov
mov
fmull
jo
push
enter
gs
xchg
loope
and
std
fstps
sbb
inc
loop
mov
pop
leave
xor
push
and
jp
or
xlat
movsb
jne
mov
enter
jbe
pop
mov
nop
push
out
push
adc
and
leave
frstor
inc
add
xchg
or
adc
mov
pop
fldcw
mov
in
ret
inc
stos
bound
ss
cmp
push
loope
jno
cmp
xor
insl
or
insb
ja
inc
pop
aas
add
leave
dec
shlb
push
gs
aam
xchg
inc
adc
sub
mov
cmpsl
push
outsl
mov
mov
out
sbb
test
test
fldenv
pop
jge
testl
cmp
cmpsb
filds
push
inc
imul
push
lock
mov
xchg
loopne
mov
and
shl
fistpl
mov
sbb
jne
sub
sbb
stos
mov
dec
xchg
xor
ret
or
shll
xchg
jb
sbb
stos
mov
shlb
add
mov
rolb
dec
sbb
inc
cltd
jp
cld
cmpsb
dec
ret
shrl
pavgb
fcomps
fcoms
and
jno
shr
inc
out
push
inc
aad
add
sbb
test
adc
mov
test
sbb
insb
orl
mov
lcall
jl
mov
ja
in
xor
inc
mov
jbe
in
fstpl
cli
adc
iret
mov
sub
xchg
jl
dec
aas
cmp
xor
inc
fidivs
inc
testb
xchg
dec
dec
gs
imul
loope
test
ja
jae
and
out
pushf
mov
je
adc
enter
adc
adc
mov
out
or
cmp
add
aas
sbb
aam
mov
gs
pop
scas
aas
test
addl
pusha
stos
xor
xchg
mov
inc
jecxz
cs
sub
mov
sahf
adc
ljmp
out
xchg
or
std
mov
es
mov
pop
lods
scas
cmp
nop
mov
adc
loope
inc
xchg
insl
hlt
aam
push
cmpsb
xchg
xchg
lods
outsb
lods
adc
mov
fimuls
adc
dec
outsl
stos
inc
pop
leave
or
aas
jbe
mov
gs
nopl
out
mov
repnz
imul
or
out
mov
cmpsl
mov
sub
pop
xchg
or
and
data16
iret
jns
add
ja
sahf
xor
adc
push
cli
xor
pop
mov
sbb
mov
ss
in
test
push
lretw
loopne
call
ds
jbe
push
inc
repz
mov
push
loop
xlat
jecxz
pop
pop
das
xchg
mov
jg
push
into
insl
push
pusha
or
jp
dec
push
cmpsl
jbe
imul
xor
add
mov
or
idivb
pop
int
mov
mov
xor
loopne
jbe
ret
pop
mov
adc
das
ljmp
imul
frstor
fcmove
pop
jp
dec
call
jecxz
cmp
mov
xchg
ljmp
jne
add
xchg
push
pusha
mov
push
push
dec
loopne
push
andl
mov
and
sub
jne
js
dec
pusha
sahf
repnz
lods
dec
push
sub
insl
mov
mov
mov
movsb
xor
fmull
sbb
push
cwtl
lods
fistpll
xor
xchg
lcall
enter
icebp
mov
mov
test
xor
add
mov
insl
cwtl
cmpsb
or
enter
sarl
movsl
push
int
and
outsl
idivl
ljmp
mov
repnz
push
mov
or
mov
or
stos
mov
fldt
xor
push
sub
jns
dec
or
sub
mov
inc
fldl
gs
mov
sysexit
mov
lods
jp
fstpl
cld
testl
ds
or
std
xchg
ret
sub
pop
push
test
inc
outsl
pop
lahf
mov
jnp
mov
stos
push
adc
rcrb
fildl
rcr
dec
dec
pusha
cltd
pop
or
rolb
sbb
aas
arpl
or
push
xchg
inc
inc
std
pop
push
sub
je
mov
rclb
cmpsl
arpl
stos
js
push
jle
inc
bound
mov
sub
push
inc
lods
nop
inc
sub
bound
dec
push
test
stc
jb
jbe
dec
jmp
dec
mov
stos
lea
arpl
repz
ss
mov
icebp
and
pop
or
popf
adc
sbb
and
and
sub
fstl
fcomip
es
xor
sti
or
icebp
add
cmp
inc
sahf
in
mov
test
mov
xor
lret
xchg
imul
add
xlat
rcrb
ljmp
sub
lcall
mov
jnp
xchg
dec
divl
enter
jb
stos
loope
mov
push
jmp
insb
repnz
mov
repnz
jge
add
cmpsl
fists
fnstsw
push
or
stos
cmpl
mov
sbb
mov
jge
mov
aad
sub
aam
jbe
jmp
mov
cltd
cltd
push
ljmp
mov
jg
mov
xor
lds
mov
add
out
sbb
add
sub
orps
xchg
divb
imul
adc
es
popa
sub
jle
jge
cmpsl
ret
ds
sbb
movsb
in
pop
in
mov
leave
test
xchg
cmp
adc
mov
addr16
sti
mov
inc
fsubs
les
pushl
adc
sbb
push
sbb
fldenv
cmp
test
cli
push
stc
sub
xchg
hlt
cmpl
inc
adc
mov
aas
out
jne
jge
mov
das
sahf
sub
jle
and
inc
pop
jg,pt
fimuls
in
inc
call
mov
mov
loopne
test
jo
pop
mov
xchg
cs
popa
jmp
xchg
or
std
push
sub
inc
cmc
or
jne
inc
hlt
xlat
ficoml
mov
cs
push
movsl
or
xchg
xor
test
sarb
cmpl
and
lds
lret
jecxz
pop
push
mov
jnp
mov
xor
cld
cld
pushf
dec
imul
cld
aad
mov
xor
into
dec
or
push
icebp
addr16
mov
jecxz
xchg
pop
or
sbb
ret
ret
test
mov
or
popl
je
cmp
mov
cmp
pop
jo
mov
push
mov
pop
inc
adc
jg
aam
mov
lods
add
jecxz
mov
rclb
or
jns
xor
mov
scas
cmp
jne
shlb
incl
movsl
out
mov
imul
sarl
mov
mov
mov
pop
xor
xlat
out
push
mov
jae
cwtl
mov
dec
stc
test
lods
or
xchg
sbb
aas
sbb
cli
push
sahf
loopne
popl
push
rcl
loopne
les
rcr
mov
sub
or
fisttpll
ret
and
jle
mov
jb
cmpsl
pop
aaa
lea
jecxz
fwait
adc
in
fisubrl
inc
mov
es
push
out
and
ud1
pop
pop
jbe
ss
in
add
xor
nop
pop
xor
lahf
ljmp
enter
jg
sub
das
mov
aaa
push
mov
int
and
push
in
inc
ficoml
inc
mov
pop
mov
inc
call
push
out
arpl
test
pop
ret
shrb
sahf
add
aad
fwait
adc
enter
pushf
push
out
inc
stc
or
adc
in
cltd
sub
stos
add
jl
out
dec
cmp
andl
xchg
test
jl
sub
cmp
mov
enter
adc
pop
lahf
push
inc
imul
xor
mov
cmp
jb
lea
xchg
jb
mov
lret
ja
je
mov
sbb
push
out
stc
lods
stos
push
jnp
sub
xchg
xchg
shrl
jle
ret
lods
repz
fs
imul
push
sahf
test
stos
out
xor
inc
icebp
dec
icebp
fwait
addb
iret
int3
data16
mov
xor
lcall
frstor
push
adc
dec
lret
jae
inc
icebp
popf
jne
idivb
adc
stc
lret
repnz
adc
stos
pop
pop
mov
xchg
and
and
jecxz
lcall
ja
or
out
ficoms
pushf
out
xchg
fsubl
jae
adc
sbb
or
add
push
cmpsl
out
sbb
pop
sbb
sub
in
out
sbb
nop
xlat
testb
mov
sub
cli
lea
ficompl
mov
mov
cmp
dec
cltd
xlat
xorl
insl
add
mov
cwtl
jge
sbb
stc
or
xchg
in
jp
inc
or
data16
testl
in
ds
mov
lea
repnz
and
stos
add
or
dec
mov
gs
dec
xchg
dec
xor
inc
cmp
les
cmp
push
aas
pop
cpuid
loop
cwtl
insb
and
fbstp
jae
rclb
leave
jle
outsb
ss
hlt
xor
sub
and
mov
pop
mov
add
inc
dec
and
in
scas
test
jno
gs
faddl
push
in
xchg
jnp
mov
daa
xchg
filds
je
adc
cmp
fdiv
sbb
pop
popa
andl
sarl
sub
and
cwtl
add
sbb
mov
imul
cmp
mov
xchg
in
dec
pop
movsb
mov
pop
cmpsb
xchg
jmp
test
xchg
movsl
and
mov
dec
sahf
aas
mov
push
fsubp
or
cmc
mov
add
lds
mov
lahf
mov
cs
stos
dec
mov
jmp
lods
icebp
inc
pushf
push
shll
pop
mov
ja
ja
inc
or
push
add
mov
pop
mov
pop
movsl
cmp
into
rorl
mov
dec
sub
rcrb
lds
pop
xor
sbb
test
push
test
testl
repz
data16
out
sbb
aas
stc
add
outsl
lahf
sub
pop
jmp
push
sbb
popa
sub
lods
sbb
cmc
repnz
jbe
xor
add
in
fiaddl
cli
xor
cmp
inc
and
xlat
cmp
mov
mov
push
fdiv
mov
mull
xorl
cmc
fsts
push
push
push
xchg
xchg
adc
adc
sbb
cmp
bound
cmc
mov
xor
sti
dec
and
test
int3
xor
lds
xor
movsb
sbbl
adc
push
ret
cmp
push
add
push
and
fidivrl
or
fdivl
test
sbb
jnp
ret
pop
loop
outsl
ror
in
mov
imul
mov
lahf
scas
je
or
mov
dec
pushf
xor
aad
ficoms
test
mov
outsb
rcl
jecxz
dec
subb
mov
mov
push
mov
pop
or
jae
rclb
inc
scas
pusha
enter
add
pop
fisubs
rcr
clc
adc
mov
mov
pop
pop
push
push
mov
jg
es
lock
fcmove
mov
add
repnz
push
test
sbb
mov
rorb
out
loop
xchg
outsl
ror
mov
loopne
ret
lock
jg
loopne
les
cltd
dec
add
inc
in
push
sub
or
cmp
lcall
push
push
stc
inc
xchg
mov
repz
push
in
int
push
rorb
dec
push
ljmp
mov
enter
xchg
mov
mov
mov
sbb
not
jae
jecxz
mov
sbb
xor
sbb
add
sub
and
xchg
out
mov
mov
arpl
and
divl
adc
or
or
lods
mov
jae
movsb
push
ja
outsb
lret
aaa
jecxz
enter
sbb
loop
aad
jbe,pt
daa
jle
into
mov
and
push
int
fcoml
sub
lret
stos
ds
mov
and
dec
stos
fdiv
lcall
out
nop
pop
outsl
popf
push
lret
shrl
inc
sub
push
aas
inc
xor
cmp
push
jbe
mov
dec
push
sub
in
or
xchg
xchg
fldl
cwtl
mov
push
inc
mov
push
jne
inc
mov
mov
test
mov
adc
and
call
push
in
js
orb
and
fdivp
mov
jnp
xchg
push
shlb
aad
iret
iret
mulb
ret
sbb
pop
and
pop
push
outsl
pop
xchg
pop
pop
cmp
xchg
fcoml
sub
rdtsc
or
lret
xchg
int3
add
and
pop
call
add
xchg
xor
sub
mov
dec
mov
data16
xchg
jnp
arpl
dec
lret
aas
js
les
movsl
cmp
stos
mov
or
lcall
enter
sahf
pop
pop
xor
fdivs
mov
hlt
pop
mov
cwtl
fnstenv
add
inc
es
repz
aas
mov
pushl
pop
out
adc
pop
cmp
nop
inc
sbb
mov
sub
jecxz
pop
jmp
jle
ret
dec
pop
repz
jne
js
rorl
mov
cmpsb
xchg
clc
mov
jae
jno
fbld
nop
inc
push
arpl
mov
xlat
mov
imull
sti
push
mov
lea
arpl
int
lock
mov
pop
sub
jne
mov
xor
insl
push
fnsave
cmp
imul
push
pop
nop
cmp
stos
push
imul
xadd
pusha
dec
das
mov
dec
gs
outsb
sub
iret
push
jp
push
jns
push
repz
inc
cld
data16
or
div
jl
stc
test
push
hlt
push
xchg
cmp
mov
call
mov
xor
lds
mov
hlt
in
and
rcll
mov
mov
ljmp
push
dec
push
test
gs
and
add
outsl
cmc
xchg
add
mov
addl
jne
or
vunpckhpd
mov
movsl
fistl
shlb
lret
pop
dec
mov
mov
pop
psubb
out
push
mov
adc
insl
xchg
push
mov
lds
daa
in
xorb
and
cld
push
mov
leave
arpl
push
mov
xchg
or
jl
xchg
out
cmpsl
imul
lock
aaa
lret
dec
mov
inc
fwait
cmp
add
outsl
inc
push
scas
das
mov
gs
fmull
cld
fsubs
push
inc
xor
mov
mov
mov
pop
or
jg
push
ret
adc
add
pop
pop
aam
inc
js
adcb
dec
cmp
ds
sub
jecxz
mov
fcomps
test
adc
js
xor
jns
sub
pop
pop
imul
add
jo
arpl
mov
mov
adc
jmp
out
push
dec
push
inc
pop
mov
ret
int
sarl
cmp
push
xchg
add
add
xchg
sub
ret
pushf
pop
jecxz
pop
fnstenv
adc
es
out
or
add
xchg
mov
ljmp
idivl
sbb
cs
scas
cmpsl
sarl
or
jnp
aaa
xchg
mov
sbb
popf
aaa
xchg
add
mov
out
call
repz
xchg
hlt
pop
cmp
xchg
out
jnp
popa
sbb
jae
and
cltd
cmp
jp
lods
sbb
xor
mov
inc
testb
mov
pop
mov
jbe
mov
jbe
in
cmp
std
dec
dec
mov
sbbb
sub
sbb
push
xor
sub
xor
cs
fnstenv
dec
mov
imul
loopne
xor
push
jno
in
shrl
add
push
into
push
negl
adc
addb
cmp
imul
mov
scas
push
adc
xor
mov
and
jb
or
das
sub
pop
cmp
scas
adc
dec
cmc
mov
mov
add
sub
mov
aas
dec
inc
xlat
mov
daa
sbb
mov
inc
fildll
push
sahf
mov
and
lret
cld
push
push
inc
into
jns
push
in
add
sub
in
rcll
test
xchg
push
rcrl
js
sarb
mov
and
push
int
lar
push
addr16
sub
adc
sub
push
cmc
sub
jne
mov
sub
movsl
out
mov
ror
mov
test
scas
imul
push
xchg
adc
ret
push
mov
xchg
test
out
dec
mov
sbb
push
and
fbstp
mov
enter
jge
inc
aad
adc
pop
aaa
xchg
iret
or
sbb
faddp
testb
inc
jnp
pusha
testb
and
inc
rcll
imulb
xchg
xor
clc
loopne
shll
std
shll
clc
jmp
daa
bound
lcall
je,pn
mov
iret
fsubr
les
sbb
pop
clc
mov
faddl
imul
roll
lret
shr
int
adc
cld
fs
int3
cltd
testl
pushf
jmp
jp
jl
and
hlt
jno
lret
xchg
push
push
jne
gs
idivl
sub
stc
jge
icebp
push
push
ja
mov
pushf
mov
mov
mov
mov
add
in
dec
mov
imul
or
nop
and
adc
pop
jns
outsb
push
pop
testl
leave
stos
xor
je
syscall
rclb
or
andl
hlt
and
inc
sub
mov
fisubrl
cmp
movsb
mov
xor
cmp
repz
add
je
adc
sbb
mov
mov
cmp
out
pop
xor
push
jle
adc
in
aad
push
mov
iret
push
nop
arpl
scas
imul
adc
push
inc
dec
cmp
shr
pushf
mov
popa
test
cwtl
dec
fdivl
push
jnp
addb
outsl
fisubrs
je
jo
cltd
dec
ss
lahf
mov
jb
sbb
shlb
mov
sub
mov
lcall
in
sbb
xchg
xchg
lea
push
mov
sub
aam
mov
out
rcll
in
bound
adc
ret
add
ror
sbb
out
xor
cwtl
mov
addr16
test
mov
fsubl
sbb
mov
dec
and
xchg
cmp
sar
inc
das
xor
and
or
imull
jne,pt
inc
dec
pop
cmp
clc
mov
or
or
pop
jge
xchg
push
daa
iret
lock
stos
mov
jae
div
xchg
mov
sbb
adc
sti
sti
std
das
test
ficoml
xchg
hlt
cmp
mov
sub
dec
int
mov
call
push
iret
pushf
popa
adc
cmp
add
inc
gs
icebp
stos
lcall
test
mov
push
push
pusha
or
or
addr16
mov
lret
pop
inc
adc
movsb
jp
ficompl
or
fdivr
sub
dec
cmpsl
add
adc
add
mov
ja
mov
push
outsb
pop
mov
dec
ror
adc
pop
jb
and
pop
jno
rclb
pop
std
push
lret
jne
jmp
jo
ja
es
sub
fcomps
scas
push
and
pop
xchg
out
repz
syscall
lret
dec
dec
cmp
sbb
pop
cmp
lahf
xchg
insb
inc
and
mull
int3
pop
mov
loop
movsl
mov
jmp
push
stos
je
ficomps
adc
sbb
mov
push
out
mov
sub
call
sti
push
sbb
mov
sbbl
and
xchg
jo
fcom
add
xchg
aam
dec
jne
jge
add
and
addr16
data16
rcrl
push
movsb
popa
sbb
addl
push
insb
out
test
and
jno
add
jmp
gs
fmulp
or
mov
jo
test
lahf
test
cmpsl
or
dec
mov
inc
arpl
jbe
add
cmp
scas
outsl
mov
pop
cmp
push
pop
sbb
cmc
shlb
jmp
lea
cmc
testb
sub
pusha
scas
mov
or
jp
inc
lock
mov
mov
mov
push
loopne
popf
insb
lock
cwtl
and
push
mov
lock
pop
adc
mov
imul
sbbb
fninit
jmp
xchg
mov
jb
and
je
lahf
loop
push
cld
dec
out
add
xchg
pop
jnp
add
mov
sbb
loop
jg
ljmp
sub
mov
ret
imul
sub
push
hlt
pop
dec
sbb
scas
inc
add
js
in
push
notb
push
jae
ret
pop
push
mov
mov
mov
pop
lret
ret
lods
adc
inc
and
dec
cltd
pop
imul
push
aaa
pusha
loopne
pushf
test
js
or
std
push
dec
stos
arpl
or
clc
mov
std
dec
int
data16
mov
decb
jns
push
mov
je
cmp
or
ljmp
pop
and
imul
pop
fisubrl
pop
loopne
push
lret
loop
out
push
call
mov
js
insl
cmp
push
cs
test
jmp
lock
nop
rcll
scas
out
sti
add
add
xor
scas
pop
add
scas
sub
ret
into
jae
xor
add
stos
and
push
push
out
int3
push
in
pushf
sub
lock
stos
stos
incl
jns
pop
pop
dec
xor
movsb
fmuls
mov
jecxz
adc
mov
xor
adc
dec
add
add
sub
adc
add
mov
cltd
rolb
xchg
dec
arpl
dec
loopne
int
mov
inc
aas
jmp
movl
dec
jnp
lahf
pop
and
xor
js
adc
pop
sbb
jl
push
xor
lods
mov
loop
insl
int3
pushf
dec
ss
and
adc
lret
sub
rcrb
sub
mov
mov
frstor
jmp
sub
pop
insb
gs
stos
xchg
rorl
stc
shll
sbb
sahf
stos
scas
mov
cmp
lret
pushf
jecxz
xchg
and
dec
or
enter
xchg
adc
push
ds
xlat
cltd
mov
into
sti
or
int
adc
fiaddl
or
mov
jbe
or
xchg
sti
orb
or
movsb
test
repnz
mov
loopne
bound
sarb
pop
jp
mov
fiaddl
frstor
ss
sbb
int
xchg
inc
lods
popl
or
dec
jge
push
sbb
xchg
icebp
jecxz
or
loop
mov
cmp
aam
jmp
enter
jne
dec
into
insl
flds
adc
dec
int
adc
std
stos
bound
jne
push
repnz
test
push
sbb
mov
daa
xor
movsl
cmpsl
pop
add
dec
jns
xchg
sbb
push
popa
pop
sub
int
xor
ja
pusha
ja
sub
gs
stc
aaa
sub
sti
push
and
xorb
push
xchg
mov
cmp
push
mov
fdivrl
shll
pop
sti
in
cmp
and
orl
fwait
insb
xor
out
leave
xorb
addr16
aam
test
jb
and
sahf
pushf
shll
inc
mov
js
xlat
mov
inc
sbb
mov
pop
outsl
mov
pushl
pushf
dec
out
imul
mov
push
repnz
add
pop
mov
xor
dec
dec
stos
mov
xchg
roll
pop
js
out
pop
cltd
add
les
add
mov
inc
jmp
insl
stos
jl
mov
in
lahf
mov
je
jns
hlt
xlat
mov
stos
fadds
scas
adc
cld
or
int
jmp
cmp
iret
rcll
js
jae
pop
push
push
mov
push
push
dec
jmp
les
loope
out
data16
jmp
mov
or
cmp
pop
movsb
push
and
incb
dec
jle
in
rcr
dec
fidivrl
imul
and
fdivp
pushf
cs
mov
cmp
adc
pop
lock
mov
sub
push
adc
and
push
fdivrs
aaa
popf
stos
ret
pop
and
xlat
add
mov
pop
rolb
xchg
js
and
hlt
sub
add
mov
cmpsl
mov
or
pop
ret
jmp
mov
xlat
lds
mov
or
vpunpckhbw
jo
inc
push
gs
cld
gs
dec
scas
into
mov
and
dec
lcall
mov
dec
out
sbb
push
sub
mov
loope
out
inc
xor
mov
mov
adc
roll
ljmp
mov
jl
dec
sbb
insl
int
xorl
rcrb
bound
stos
dec
dec
inc
push
fimuls
ljmp
test
adc
adc
sahf
fdivr
sbb
and
jmp
add
dec
test
popa
cmc
mov
das
jo
mov
je
scas
or
adc
pop
jbe
js
sub
mov
mov
mov
popa
arpl
xchg
xchg
test
subb
test
dec
clc
push
in
xor
test
and
int
pop
xchg
push
test
pop
push
into
sbb
adc
jg
popa
cmc
insl
lret
cmpsb
dec
lcall
jb
lods
loopne
add
icebp
adc
addb
dec
imul
ds
insb
pushf
into
cmc
pop
cmp
or
push
pusha
xchg
fdivrl
cmp
xchg
sbb
and
out
mov
jp
pop
aas
mov
popa
xchg
shrl
arpl
psrlq
xor
jmp
stos
cwtl
mov
fsubs
out
push
inc
mov
jbe
sarl
jmp
cmp
divb
sub
insb
pop
inc
inc
sar
jmp
out
pop
mov
cli
notb
faddl
sub
iret
fmuls
aam
pop
mov
cmp
mov
pop
pop
pop
xchg
pop
push
stc
sub
and
adc
frstor
sub
jae
cmp
dec
cmp
mov
hlt
into
xchg
dec
das
mov
iret
inc
imulb
loope
es
mov
and
xchg
sarb
jmp
je
jecxz
into
mov
and
mov
arpl
xor
fcmovu
dec
movsl
push
int3
scas
scas
popa
sbb
imul
imul
mov
cmp
out
mov
aad
inc
out
jp
inc
dec
rclb
pop
fcmovbe
ja
push
mov
in
popw
outsb
adcb
rorl
in
fmul
rol
outsb
xor
fildl
and
das
je
push
add
lock
jno
sbb
pushf
jnp
inc
sub
imul
out
shll
mov
aam
inc
push
adc
jno
jb
loope
sub
mov
cmp
outsl
push
fsts
mov
ja
jmp
jp
out
and
xchg
ffreep
jge
or
push
cltd
icebp
jmp
push
cmp
add
rcrl
ret
xchg
jecxz
dec
lahf
add
mov
lock
jns
daa
clc
pop
lock
mov
mov
mov
pop
ss
dec
jl
cmpsl
ja
jp
adcl
movsl
je
stc
in
pop
sub
mov
aas
fidivl
aam
mov
adc
jge
jle
or
mov
jg
push
inc
push
insb
mov
out
ret
test
aad
inc
pop
stc
mov
lahf
or
das
cwtl
daa
cmp
rcr
pop
push
mov
ja
fwait
push
dec
lock
mov
pop
add
dec
stos
popf
loope
mov
nop
sarl
cmp
push
and
das
fsubrl
fisubrs
sub
inc
insb
mov
out
shll
test
xchg
inc
sbb
cmp
xor
jg
mov
or
mov
movsl
and
pop
cmp
push
movsb
cs
or
insb
out
stos
push
bound
mov
inc
inc
mov
enter
fisubrs
and
sbb
and
in
mulps
xchg
cmpsl
push
add
mov
in
mov
std
push
mov
ja
add
or
outsb
xor
sub
sti
sti
jmp
aaa
imul
clc
sbb
xchg
sub
lods
test
push
inc
and
aaa
jl
jae
pop
ds
adc
out
add
adc
xor
push
and
mov
int
pushf
mov
ja
insl
push
mov
mov
jbe
loopne
das
adc
xlat
or
mov
stos
jnp
jne
lret
js
in
push
test
pop
test
mov
subl
mov
out
cs
lret
push
xchg
push
lret
or
sub
int3
aad
out
xor
adc
loopne
nop
jo
out
push
inc
add
sub
hlt
fisubs
dec
cltd
xchg
mov
adc
push
dec
cmovno
in
negb
jno
lock
ret
sbb
push
sub
dec
cmpsb
lret
icebp
ret
jb
cmp
pop
pop
lock
fildl
fnstcw
or
out
add
push
pop
push
inc
aad
stos
push
cmpsb
stc
out
bound
outsb
outsl
iret
or
sbb
sbb
mov
data16
movsl
xor
lods
dec
pop
sahf
stmxcsr
inc
test
imul
mov
adc
jp
lods
xchg
ds
aam
gs
lods
cmp
popf
pop
ljmp
divl
dec
insl
lret
jns
daa
mov
adc
lods
and
xchg
add
push
sub
aam
iret
jnp
push
mov
sub
nop
mov
fcomp
xor
outsl
push
ret
mov
pop
mov
loopne
push
add
sbb
cmp
or
cmp
cmpsl
iret
sbb
mov
jne
shlb
dec
jns
out
mov
cld
pop
jns
js
mov
dec
filds
cmp
test
pop
dec
mov
dec
repnz
stc
lcall
subb
cmpsb
and
ds
push
and
add
aam
mov
roll
xchg
sbb
sub
push
xlat
fsubr
subl
sub
cmp
out
xchg
cmp
xchg
mov
cmp
or
push
xor
orb
and
scas
dec
js
xorl
dec
push
adc
in
fmull
dec
enter
sbb
fdivs
das
inc
lcall
cmp
scas
mov
movsb
xchg
pushf
xchg
xorl
bound
or
jo
fistpl
cmpsb
jl
pop
mov
test
lea
ljmp
xchg
in
mov
insb
test
cltd
xchg
addr16
pop
xlat
imulb
cld
add
ret
lahf
inc
std
mov
fwait
adc
into
andl
loop
cwtl
ljmp
outsl
and
pop
jno
fisubrl
popf
mov
mov
addr16
inc
cmp
jno
adc
nop
jne
pusha
or
adc
aam
pop
cli
cs
cltd
movsl
jnp
lds
fnstcw
xchg
enter
jae
adc
mov
adc
lock
mov
or
cmp
mov
push
fidivrl
cmp
nop
das
mov
repnz
push
sbb
rcr
out
add
xchg
lret
in
adcl
mov
sbb
or
sub
push
push
mov
or
pop
pop
mov
dec
enter
int3
pop
xor
stc
jns
pop
pop
decb
jo
pop
andb
in
ds
add
or
mov
xchg
adc
mov
push
push
daa
in
movsb
push
inc
ss
pop
ret
jo
push
push
pop
iret
in
dec
fs
add
jge
or
cmp
lods
cmp
dec
popa
in
ss
sub
rcll
sysexit
push
lods
mov
adc
insl
sbb
pop
rorb
bnd
pop
or
xor
mov
nop
sbb
jmp
dec
sub
nop
aam
inc
dec
sub
mov
lret
xor
sbb
pop
mov
int
stos
mov
ret
jmp
push
ret
or
cmp
and
xchg
lcall
or
jbe
and
xchg
sbb
in
lock
xchg
fsubrl
add
add
sbb
cmp
cwtl
into
jge
push
dec
int3
sti
jmp
clc
sub
mull
and
adcl
aaa
icebp
test
stos
or
pop
shl
insb
popa
add
push
test
fs
xchg
insl
mov
ja
mov
push
sbb
test
leave
mov
mov
cwtl
in
sub
jno
mov
mov
pusha
ret
dec
lcall
repz
add
push
cmp
outsl
stc
sbb
inc
sbb
pop
push
int
inc
push
sbb
lock
mov
popa
test
mov
shl
xor
mov
shlb
sub
cld
sbb
push
subl
leave
pop
and
fldz
mov
loopne
aad
sub
push
in
sarb
pop
adc
pop
ljmp
punpckhbw
dec
pop
dec
imul
add
les
mov
pop
fldenv
push
cmc
je
std
xor
push
in
sub
and
fwait
in
aam
mov
test
mov
push
jg
jo
and
and
cmp
and
push
lods
lock
adc
mov
or
out
or
iret
add
mov
lods
das
xchg
in
in
pop
jnp
aad
push
xor
xchg
cmp
dec
push
push
stc
imul
push
lods
and
in
push
sbb
repnz
mov
xchg
xorb
daa
and
jbe
lret
imul
mov
sub
dec
push
cmp
add
or
ja
mov
inc
and
cltd
movsl
push
inc
mov
jmp
cwtl
rorb
pop
mov
add
push
insb
sbbl
or
ljmp
js
data16
add
addl
pop
inc
mov
dec
ja
nop
and
inc
xchg
mov
int3
hlt
mov
pusha
dec
jge
subb
or
pop
xor
je
sbb
sbb
test
cmc
stos
lret
jg
or
push
je
mov
and
nop
test
jno
lea
int
add
jno
lock
mov
mov
call
leave
jecxz
popa
xor
addr16
and
cs
adc
jmp
es
cmp
dec
andb
insl
in
in
ss
mov
push
push
lods
mov
inc
jns
insb
frstor
fisubs
fcom
imul
sub
popa
add
xchg
loope
inc
shl
cmpsl
jmp
dec
cwtl
lock
je
out
cwtl
bound
jb
add
test
and
pop
pop
jge
je
xchg
addl
sub
cmp
aad
ret
cmp
sbb
shrl
cmc
push
cmp
mov
call
test
cmp
shlb
xchg
dec
shll
enter
bound
jo
push
push
push
gs
mov
int
xchg
lcall
push
inc
imul
sbb
add
lahf
adc
clc
xor
clc
pushf
aam
inc
sbb
fsubrs
pop
xchg
lea
imul
inc
pushf
mov
push
and
dec
sbb
xchg
sarb
fisttps
mov
call
add
jge
out
into
sbb
jns
mov
sub
push
cwtl
dec
repz
fsts
fs
test
inc
loope
dec
fisttpl
pop
push
or
sysexit
xchg
out
adc
xor
lea
enter
jmp
ds
jge
xor
lds
sbb
mov
xchg
loop
xchg
loope
or
rcll
pop
dec
xchg
mov
imul
loop
and
arpl
in
jl
mov
loope
push
lcall
lods
nop
popf
mov
lods
xor
xchg
std
pop
pop
push
les
push
dec
cwtl
js
mov
pushf
inc
push
push
insl
pop
popf
das
sub
aam
jp
adc
out
stos
movb
cmp
jno
int3
or
clc
add
xchg
lret
stc
jg
jbe
jl
jmp
add
js
ja
dec
aas
xchg
mov
test
cmc
xor
ds
lods
in
adcl
sbb
clc
into
lcall
jmp
adc
inc
pop
mov
lods
push
lods
call
inc
lahf
shrb
mov
cmp
dec
icebp
mov
jl
sahf
sbb
imul
fists
sbb
jo
mov
mov
jns
das
cmp
mov
sbb
inc
mov
mov
xor
adc
inc
mov
cmpsb
rclb
and
sub
or
in
out
mov
pop
xchg
repz
pop
lret
jg
movsl
into
addr16
push
js
dec
xchg
push
scas
scas
dec
jle
jb
xor
cmpsb
cwtl
lea
jmp
in
pop
decl
orb
loopne
pop
lock
mov
dec
repnz
adcb
stc
sbbb
xor
aad
cmp
pop
notb
jl
or
pop
mov
sub
rcrb
jae
and
mov
std
inc
mov
jbe
movlps
mov
adc
inc
icebp
xchg
into
sbb
cmp
pop
push
aad
adc
pop
xor
mov
and
lds
stos
loopne
sub
fwait
xlat
push
push
sub
mov
jle
loop
pop
add
dec
hlt
dec
in
icebp
sub
pop
pop
js
stc
ds
rcrl
leave
daa
imul
idivl
int
adc
mov
in
mov
dec
xchg
dec
hlt
cmp
ret
lods
xchg
xchg
mov
or
int
dec
int
mov
mov
and
jle
jno
repnz
insb
out
dec
imul
mov
lea
fldt
scas
mov
sbb
cmpsl
daa
push
inc
and
outsb
adc
mov
pop
jl
push
sahf
xchg
cmp
testb
dec
std
xchg
add
insb
hlt
fwait
stos
fsubrl
inc
or
sub
sub
mov
outsb
leave
scas
push
sbb
inc
ds
sub
sbb
mov
dec
mov
adc
fwait
lret
sub
xor
adc
sub
and
sbb
lock
test
adc
fcmovnb
orl
inc
inc
mov
sti
out
cmpsb
repnz
mov
push
shlb
xchg
mov
sbb
dec
sbb
mov
jno
add
xchg
push
cmp
jg
sbb
aad
xchg
cli
dec
or
cmp
adcb
pop
xor
mov
inc
out
cmpsl
into
sbb
or
jb
test
mov
jge
jp
mov
jge
jmp
into
daa
arpl
add
sbb
in
call
cmp
test
loopne
stos
cmp
xchg
jl
mov
sub
test
pop
icebp
mov
movsb
mov
icebp
adc
mov
jecxz
in
inc
dec
repz
cmc
cmp
push
xchg
jo
jge
xor
call
pop
jo
iret
icebp
fdivs
inc
and
push
out
add
cld
xchg
cmp
pop
pop
and
mov
mov
jns
dec
fnstenv
jo
ficomps
push
inc
cwtl
xchg
add
adc
fldl
test
ret
ret
dec
add
jge
push
mov
rcr
lods
sub
fisubrl
sbb
cmp
and
xchg
repnz
cltd
lahf
movsb
sub
pop
cmp
cmc
fsubrl
and
std
push
shl
fnsave
inc
pop
add
and
sbbb
fnstenv
jecxz
outsl
mov
cmpsb
or
add
leave
fwait
fs
jp
std
pop
insl
adc
aas
mov
sar
cmc
xor
fnsave
popa
sbb
pop
xchg
sbb
mov
sbb
mov
cmovg
insl
outsb
pshufw
jmp
cmp
push
jmp
and
ds
mov
xchg
stos
cmpsb
xor
and
movsl
lret
xchg
in
je
lret
test
mov
js
cld
xchg
push
shr
sub
out
jb
add
popf
cmpsb
push
cli
dec
mov
xchg
jl
arpl
pop
cmp
das
adc
and
icebp
mov
mov
jo
jo
sub
and
pusha
cmp
pop
pop
add
jb
adc
scas
pop
xlat
xchg
push
xor
and
andb
lret
cltd
aas
hlt
sti
out
push
cmc
and
or
sub
sbb
push
pusha
imul
test
sarl
dec
ret
dec
adc
adcl
add
in
icebp
hlt
scas
push
mov
mov
repz
push
or
dec
push
lea
xor
xor
out
repnz
shlb
mov
arpl
dec
or
stos
pop
loopne
xchg
cmp
mov
test
xor
mov
mov
adc
lret
in
mov
ja
mov
xchg
jl
mov
and
enter
mov
int3
inc
xchg
sub
aas
inc
negl
fisubrs
outsb
ds
and
mov
mov
in
push
jbe
inc
std
fsts
jg
mov
movsb
sbb
jp
adc
cmp
xlat
and
jnp
lea
dec
jbe
push
cmp
add
mov
clc
pop
xor
inc
add
in
stos
jbe
jecxz
xchg
push
jecxz
jmp
fbstp
in
das
lods
xor
mov
pop
push
sbb
pop
cmp
das
or
mov
mov
ljmp
adc
repnz
fstps
pusha
out
and
push
jl
dec
fs
sti
sub
cmpsb
lret
aam
mov
es
xchg
js
add
xchg
jbe
dec
xchg
push
dec
push
lcall
jb
push
push
in
cmp
pop
jns
lods
dec
iret
dec
lds
lahf
xor
shl
jl
rclb
add
jo
mov
mov
outsb
and
sbb
sub
mov
mov
lods
inc
add
std
jb
rcrl
xchg
sarl
shlb
outsl
popf
push
add
jmp
daa
inc
sti
sub
negl
jg
in
mov
test
pop
xor
and
mov
and
sbb
jne
sti
testl
cli
mov
dec
push
or
jmp
imul
daa
dec
mov
cli
xor
adc
mov
imul
cmp
and
xor
sbb
mov
push
jecxz
fisttpll
lahf
jmp
int3
xlat
jne
adc
add
adc
mov
lods
push
pand
dec
in
xchg
xchg
adc
sub
add
int3
shlb
jl
insb
pop
test
jbe
mov
mov
cmp
xchg
fmull
pop
pop
movsl
inc
pop
mov
sub
pop
scas
sub
iret
sub
cmp
daa
popa
div
sarb
mov
push
pop
sub
mov
lcall
jmp
add
inc
fidivl
mov
hlt
je
adc
mov
mov
sbb
add
jg
lret
sub
cmpsl
add
jp
aaa
insb
stc
adcl
rcrb
inc
mov
pop
shll
lock
imulb
jge
int
cmc
adc
gs
dec
mov
push
mov
push
js
lods
js
jg
dec
jne
leave
shll
hlt
fwait
adc
pop
fwait
sahf
pop
lret
ja
adc
xlat
aas
jge
add
add
sbb
int
andl
mull
mov
jne
xchg
cmc
dec
jg
mov
xchg
jo
ret
mov
mov
xor
sub
stos
xchg
idiv
adc
push
jmp
inc
cmp
into
jge
sahf
je
xchg
sub
repz
cmp
xchg
jb
scas
inc
bound
sbb
dec
or
outsl
cmp
add
cmp
popa
ret
or
jbe
dec
pop
xchg
cmp
push
movsl
jp
dec
dec
scas
pop
mov
sbb
inc
sbb
mov
adc
xchg
add
rorb
mov
push
or
jo
add
push
scas
leave
lods
arpl
test
sbb
and
jecxz
and
mov
fsubrl
or
mov
shl
lcall
mov
push
sub
or
and
mov
sbb
sbb
stc
fcmovb
je
inc
dec
imul
inc
lea
push
inc
aam
pusha
pop
mov
imulb
ljmp
sub
xchg
iret
cld
movsl
or
dec
pop
rclb
shrb
ljmp
imul
mov
or
xor
push
shrb
add
mov
int3
pop
adc
mov
or
rorl
sbb
imul
sahf
mov
cmp
out
fs
xchg
test
mov
dec
and
insb
into
xor
lcall
mov
fldcw
test
jnp
push
inc
insl
sbb
mov
pmuludq
add
or
movsl
sbb
inc
sub
mov
fucomi
imul
insb
push
sbb
aaa
addr16
inc
data16
inc
mov
ficoml
cld
jnp
int3
cltd
mov
sub
into
pop
or
out
mov
stos
mov
mov
rorl
movsb
lahf
and
and
cltd
fsubr
ljmp
lret
call
or
or
mov
rcll
popa
jp
int3
xor
loopne
mov
test
jbe
aas
add
ja
mov
xor
cmp
sub
xor
test
mov
push
test
pop
and
inc
lcallw
xor
jecxz
mov
mov
or
insb
jo
and
sbb
test
lods
xchg
sahf
es
bnd
icebp
pop
dec
cmp
sub
push
ja
mull
daa
icebp
push
lods
sbb
imul
std
cmp
aaa
cmp
mov
fcoml
ret
adc
pushl
or
mov
ret
xor
inc
adc
aad
lods
push
ror
fsubl
inc
jbe
sub
icebp
adc
xchg
mov
shrl
stc
movsb
rclb
xchg
mov
gs
loop
jno
or
movsl
inc
in
movsb
rcll
xor
cmp
add
mov
dec
sub
div
xor
ss
in
jle
jecxz
lods
cmpsl
ds
xchg
add
cs
sbb
sub
repz
cwtl
ljmp
lret
jno
mov
and
mov
add
icebp
cmp
mov
repz
jl
lret
enter
and
insb
shll
or
cmc
lcall
xor
sub
orl
cwtl
mov
shl
push
ljmp
pop
cmp
pop
push
cmpsb
inc
mov
xchg
fs
and
addr16
test
imul
dec
xchg
jp
ds
lcall
push
popf
pop
ds
and
dec
cwtl
adc
mov
into
pushf
shlb
mov
adc
xchg
repnz
add
mov
lods
testb
or
inc
dec
push
xchg
pushl
mov
push
in
xor
jle
sub
lods
pop
adc
or
xchg
flds
mov
xchg
mov
mov
scas
loopne
inc
repnz
sub
shrl
in
shlb
mov
sbb
fnstenv
lds
aaa
cmc
mov
dec
mov
iret
cmp
mov
icebp
pop
pusha
jo
jne
sahf
test
test
popl
add
lock
sbb
call
loopne
fidivrl
lock
fs
imul
cmp
pop
faddp
lahf
add
mov
call
clc
idiv
xchg
dec
into
ds
sub
jno
cltd
xor
les
xchg
in
roll
fldcw
iret
adc
test
mov
add
sub
sub
dec
ret
dec
stc
push
or
popa
adc
pop
sarb
je
popa
or
dec
loop
leave
push
mov
xchg
into
jp
aaa
outsl
idivl
test
cmc
pop
xchg
dec
xor
xchg
jmp
arpl
into
sbb
fimuls
sub
or
jle
sub
xlat
mov
lcall
or
mov
xor
addr16
mov
ds
jbe
out
popf
dec
inc
in
jle
sub
popf
add
jl
jmp
stc
or
push
cmp
aas
popa
push
cmp
cltd
sbb
cwtl
pop
xor
mov
push
out
stos
add
mov
inc
adc
hlt
pop
push
or
ret
outsl
jne
lret
push
dec
fs
xchg
aaa
dec
dec
ja
mov
dec
jno
ret
out
jmp
dec
mov
jb
shlb
mov
bound
xor
outsb
push
dec
loopne
mov
ret
lahf
std
dec
mov
pop
int
iret
orb
mov
jp
pop
inc
adc
pusha
fcmove
inc
cltd
mov
and
mov
inc
mov
jmp
sti
ss
insl
mov
sbb
ror
push
sbb
cmp
adc
roll
es
bound
data16
test
ret
sbb
dec
pop
push
and
mov
cmp
cmp
leave
or
push
lock
outsl
stc
cmpsl
lret
mov
jns
bound
movsb
xchg
inc
daa
and
cmp
loop
push
loop
into
inc
xchg
hlt
xor
cmpsl
pop
jl
adc
es
nop
dec
mov
cs
sahf
xchg
fldenv
imul
lds
mov
mov
ret
sub
inc
jb
mov
xchg
addb
test
cmp
dec
sub
push
mov
lea
fdivs
sbb
mov
xchg
jle
sbb
sti
loop
pop
gs
push
pushf
jb
push
imul
fcmovne
xchg
dec
sti
cmpsl
gs
push
pop
jns
mov
xor
mov
xlat
push
imul
out
pop
mov
mov
or
push
lret
xchg
jbe
xchg
mov
loop
xchg
movb
dec
rorb
mov
lret
fucomp
pop
sbb
inc
sti
push
mov
push
sarl
xchg
xchg
xchg
pop
inc
jmp
test
testl
sbb
cmp
jp
lret
add
adc
scas
jns
lcall
dec
int3
pop
addr16
lods
xchg
emms
les
icebp
jmp
sub
lds
dec
sbb
or
xchg
clc
aas
pop
and
jl
inc
lcall
icebp
and
jecxz
add
push
cmp
add
les
inc
mov
pop
and
inc
dec
daa
or
dec
jbe
aas
nop
or
out
dec
dec
ret
shrl
fildll
aam
into
cwtl
jecxz
inc
int
repnz
sbb
jns
mov
fs
out
pushf
js
xchg
fs
leave
nop
mov
pop
mov
mov
or
push
mov
sub
mov
aam
bound
push
stc
js
lea
lret
lcall
sub
pop
test
sbb
idivl
dec
xchg
push
jo
inc
jecxz
sub
lea
xchg
xchg
cli
mov
push
lret
push
and
dec
xchg
push
loope
lds
in
dec
das
push
jmp
ret
mov
add
pop
sub
pop
test
xchg
ficompl
test
and
leave
lret
aas
insl
stos
inc
cmp
insl
dec
xor
aas
xchg
jge
mov
cmp
sbbl
mov
dec
push
les
mov
lret
inc
jge
mov
mov
sub
inc
ja
fldt
sbbb
pop
sbb
insb
push
in
test
inc
sti
sti
fsubr
in
jp
std
push
adcl
pop
pop
or
xchg
xor
inc
jp
xchg
shlb
scas
pop
mov
sar
es
push
outsl
adc
inc
mov
push
es
dec
aad
mov
add
sub
sbb
mov
jae
sub
inc
cwtl
dec
ljmp
dec
and
push
inc
and
jbe
mov
loope
sbbb
add
repz
xchg
mov
lret
xlat
push
loop
xor
rcrl
and
aaa
or
sub
fs
lcall
xchg
push
dec
and
loope
mov
dec
pop
pop
stc
lods
jmp
ja
push
xlat
pushf
xchg
add
hlt
inc
sub
rclb
sbb
loope
dec
dec
xor
fstl
dec
cmp
xchg
adc
mov
cmp
mov
lret
pop
adc
mov
cmp
iret
adc
lock
testl
push
shl
pop
lret
jne
hlt
push
mov
inc
dec
dec
cmp
mov
cmp
jns
hlt
notb
out
into
enter
ljmp
adc
insl
mov
jp
movsl
out
fwait
xlat
cmp
out
pop
add
stos
movsl
jmp
adc
inc
pop
sub
int3
pop
jmp
mov
sbb
sar
or
cwtl
push
fisubl
adc
or
mov
pop
mov
fldt
xor
aam
dec
dec
cmpl
mov
test
sbb
push
pop
movsl
dec
lahf
pop
adc
dec
xchg
dec
dec
xlat
or
pusha
xor
enter
jge
add
add
fdivrl
fmuls
cmp
out
daa
imul
mov
bound
js
xlat
jmp
insl
mov
and
mov
cltd
repz
sub
xor
and
cld
test
add
cmc
lcall
lret
push
lcall
push
stos
pop
pop
pop
mov
adc
das
sbb
push
fistps
dec
dec
xor
adc
pushf
adc
and
lods
mov
jne
dec
popa
push
cld
push
aad
sbb
adc
mov
divb
mov
mov
aam
movsl
aaa
ljmp
movsb
mov
ficompl
rorb
jo
lods
ljmp
or
mov
mov
add
imul
jecxz
add
loope
icebp
arpl
testb
movsl
outsl
jl
mov
aad
dec
jp
jge
in
cs
pop
ficoml
mov
and
mov
inc
mov
lar
insb
inc
xor
xor
mov
mov
mov
fnstenv
mov
lret
add
push
ja
pop
pusha
pop
mov
xlat
xor
or
dec
cmp
ja
or
shll
out
pop
pop
imul
je
cmp
xor
arpl
push
out
adc
mov
lret
push
lret
stc
add
pop
popf
sub
scas
hlt
mov
stos
rcr
push
adc
jmp
in
pop
je
jns
insb
jge
je
sub
leave
repz
add
mov
leave
jo
fbld
jnp
test
fstl
push
mov
lods
mov
jne
push
mov
sub
leave
mov
pusha
cmc
cmp
cmpsb
pop
cmp
adc
or
adcb
pushf
sti
xor
fdivrs
push
mov
mov
and
loopne
mov
outsl
sub
into
add
mov
jle
lods
mov
fisubrs
push
hlt
sub
or
jbe
pop
ret
fisttpl
outsb
push
inc
pop
fadd
cmp
pop
cltd
cwtl
loope
in
lret
xchg
sbbb
mov
mov
cld
mov
and
outsl
push
arpl
cmc
xchg
xchg
or
adc
mov
mov
cmp
dec
out
sbb
sub
ds
push
jl
pop
loope
mov
xchg
or
push
xor
insb
stos
test
out
popf
adc
ljmp
mov
cmpsb
rcrl
mov
inc
jecxz
mov
xor
sub
push
or
mov
mov
cmp
lcall
add
out
test
loopne
inc
pusha
aad
fimull
addl
loopne
in
mov
cmp
dec
inc
jp
out
aad
movl
stos
cmc
repnz
xchg
cmp
push
jne
dec
in
jecxz
leave
bound
mov
sahf
cli
fwait
fwait
sbbb
dec
mov
stos
pop
popf
adc
jbe
int
jnp
test
pop
lea
fcmovnb
cltd
jmp
xor
shrl
adc
or
sub
pop
mov
gs
inc
loope
push
add
out
imul
mov
jbe
mov
or
cmp
test
pusha
sub
and
fsub
cmp
push
out
mov
outsb
inc
add
testb
stos
sbb
inc
nop
shlb
push
sbb
push
fsub
mov
in
dec
movsb
cmpsb
shrl
dec
and
scas
mov
xchg
inc
stos
rcrb
sub
lods
aam
les
add
or
or
push
dec
fldenv
fmuls
push
lea
pop
pop
mov
sub
stos
xor
aad
mov
movsb
jne
adc
sub
pop
out
mov
add
or
fbstp
inc
mov
xchg
sbb
and
out
adc
sbb
in
cmp
jmp
dec
adc
in
inc
sbb
sbb
out
xchg
lahf
inc
push
inc
std
pop
dec
cmpsl
sbb
xchg
and
mov
jl
xlat
cmp
xchg
push
sbb
fistps
xor
sub
je
out
ret
stos
pushf
cmp
mov
sub
lods
xchg
int
push
add
push
mov
aaa
mov
mov
into
jecxz
into
pop
xorl
jns
subb
xor
jp
stos
addr16
outsl
pop
mov
pop
test
pop
pop
idivl
xor
stc
shrl
mov
aas
inc
xor
cltd
ja
mov
mov
leave
xchg
dec
sub
out
jne
pushf
stc
mov
jns
cmp
add
out
daa
outsb
lds
pop
shrl
or
and
out
push
in
cmp
pop
mov
push
aam
and
inc
loope
jae
sbb
jbe
pop
mov
in
dec
pop
test
fprem
into
sbb
xor
fcomp
jne
mov
lods
rcrb
cmp
dec
xor
push
out
add
repz
xchg
adc
cmovg
punpcklbw
outsl
add
sub
mov
mov
jae
aad
aam
and
xchg
xor
and
cltd
dec
xchg
add
mov
in
insb
add
mov
mov
sbb
aaa
fnstcw
fbstp
jmp
sahf
fs
push
iret
jmp
lock
pop
sub
ljmp
es
clc
sarb
dec
pushf
inc
addr16
leave
xchg
adc
shlb
dec
rorl
sbb
int
push
mov
pop
out
int
jp
mov
repz
rcl
movsl
jne
gs
rolb
flds
mov
xor
push
gs
insb
repz
enter
sub
pcmpeqw
lock
popa
jecxz
dec
jmp
movsb
pusha
rclb
jae
xchg
cmpsb
lret
inc
add
arpl
dec
push
push
scas
rolb
fwait
loope
lods
je
and
inc
loopne
add
mov
je
ds
loopne
mov
test
ds
dec
mov
xchg
push
ret
add
pop
and
add
hlt
mov
lock
or
push
dec
mov
cs
mov
sub
jo
jmp
mov
jg
adc
add
std
loope
jge
in
pop
adc
add
and
fnsave
testl
jl
adc
or
sar
xchg
ljmp
fnstcw
mov
rol
ja
jb
lahf
incb
ja
daa
cmpsl
das
hlt
xor
test
lret
sub
ss
lret
xchg
into
adc
inc
cmpsl
repnz
or
arpl
xchg
xor
in
je
into
cmp
mov
cmpsb
xor
call
inc
push
push
mov
into
inc
cmc
mov
shll
cmp
push
test
jmp
lahf
mov
mov
dec
dec
cmp
into
cs
sbb
mov
fcmovnbe
in
jmp
test
mov
nop
test
in
cmpsb
pushf
std
or
not
xchg
outsl
gs
xchg
jb
mov
insb
mov
fdivr
mov
inc
adc
push
inc
pop
gs
into
mov
scas
dec
fadds
scas
push
xor
hlt
insb
xor
dec
jecxz
repnz
xchg
sbb
ljmp
jns
out
lahf
insl
sbb
dec
xor
jmp
jns
xchg
sbb
outsb
sti
xchg
repz
push
shl
dec
push
mov
loop
add
and
mov
inc
ja
loop
repz
movl
insl
fnstenv
mov
xor
mov
call
xchg
jnp
jno
dec
pop
cmc
mov
stos
insb
xor
lahf
push
xor
sub
ds
xchg
mov
and
lea
mov
or
stos
movsl
inc
out
sahf
movl
mov
pop
or
adc
cmpsb
ficompl
cwtl
add
or
popf
cltd
fstl
xchg
xlat
xor
or
je
push
lcall
outsl
repz
mov
adc
mov
ss
push
sub
std
fstp
cmp
dec
mov
and
loop
dec
mov
mov
sbb
push
or
add
stc
out
adcb
jo,pt
movsb
jbe
jae
mov
in
cmp
iret
sub
pop
scas
mov
mov
rcll
jmp
sub
mov
popf
dec
push
push
mov
stos
pcmpgtb
or
xchg
xchg
xor
add
xor
mov
mov
mov
cmp
sub
bound
and
cs
xor
ret
imul
test
push
stc
mov
or
and
or
pushf
out
push
push
mov
push
popf
and
imull
mov
push
movsb
sbb
in
jnp
or
in
dec
imul
ds
or
in
mov
mov
lea
cmp
xor
add
xchg
xor
or
jns
dec
arpl
lock
mov
hlt
push
icebp
in
xchg
mov
inc
xchg
das
mov
fisubl
cmp
lcall
jg
lret
xchg
or
pop
mov
pop
mov
packuswb
jbe
adcb
sahf
inc
mov
pop
push
sbb
push
sub
adc
out
mov
mov
xchg
pop
push
movsb
push
mov
imul
ret
sahf
push
sbb
sahf
fmull
and
dec
ret
sbb
push
mov
popf
mov
and
in
pop
inc
dec
xlat
fwait
push
out
out
ds
in
hlt
popf
out
add
cltd
mov
sub
sbb
mov
xlat
int3
jno
pop
rcrl
mov
ljmp
in
lock
loope
pop
push
sbb
jo
mov
pop
jl
sbb
dec
int3
divb
aad
cmp
and
idivb
cmc
push
cmp
jg
cmp
push
cltd
dec
inc
jecxz
inc
cmc
fisubrl
cmpsl
in
adc
cmp
int3
out
adcl
sbb
mov
bound
sbb
inc
push
mov
and
and
push
sahf
dec
cli
sbbb
cmp
sbb
push
div
jl
push
xlat
pop
add
mov
sbb
repnz
or
outsb
in
mov
outsb
pop
ret
mov
daa
js
or
dec
ret
sbb
pop
aad
neg
aaa
inc
subl
lcall
adc
xlat
ss
or
leave
std
lret
outsl
push
xchg
mov
cld
jnp
jl
jb
mov
mov
jmp
mov
jecxz
rorb
movsb
aad
add
cmc
popf
mov
cmp
fldcw
ljmp
gs
xchg
inc
lods
cmp
or
out
hlt
jae
cmpsb
mov
insl
call
rcll
mov
pop
mov
push
push
shll
sub
inc
push
xchg
aad
lock
fs
lea
aaa
mov
shl
mov
xor
and
popf
dec
xor
jge
lea
clc
adc
push
push
ja
popa
int3
jne
imul
mov
mov
dec
inc
or
sahf
lret
push
icebp
mov
fwait
nop
adc
xor
cmp
bound
fwait
xchg
dec
negl
addr16
cld
ret
repnz
xor
scas
cmc
xchg
and
push
lcall
lods
xchg
cmp
sub
mov
mov
cmp
scas
push
cli
movsb
out
rcrl
clc
scas
jae
push
xlat
or
xor
mov
mov
and
mov
mov
or
mov
xorb
pop
cmpsb
push
xchg
push
lds
nop
pop
stos
mov
fsubr
sbb
cmp
pop
dec
jns
data16
addl
xor
ds
xor
lods
dec
dec
adc
mov
int3
sub
jno
ret
pop
das
mov
push
testb
scas
mov
mov
call
jmp
loop
xor
mov
jno
icebp
insl
mov
test
repz
jne
ss
add
mov
add
xchg
sbb
lahf
loope
sbbb
call
dec
lret
test
clc
lahf
scas
jnp
mov
xor
dec
pushf
mov
xor
sub
xchg
repnz
stos
mov
lahf
sar
jno
push
push
je
nop
add
and
xchg
jmp
xchg
insl
btc
mov
shlb
test
xor
inc
addr16
inc
mov
pop
mov
lods
inc
push
movsb
aas
loope
pop
jae
sbb
into
add
lahf
and
imul
add
jmp
repz
rorl
add
cs
mov
in
imul
xor
mov
dec
xchg
or
mov
aas
fadd
sbb
je
aas
pop
push
out
xchg
clc
aaa
inc
out
loopne
addl
add
hlt
lret
sbb
filds
xor
sahf
fldl
les
mov
push
mov
pop
gs
or
add
push
enter
sub
fists
sub
cmove
in
mov
jno
je
xor
fdivrl
sub
fwait
xor
cmp
leave
xor
ret
orl
outsb
push
sbb
inc
mov
scas
xlat
mov
int
inc
pop
ret
insl
fcmovnu
xchg
cmp
test
insl
sbb
jno
ljmp
sbb
xchg
push
pop
imul
and
xchg
push
test
fisubs
add
imul
fldcw
or
xor
or
stos
out
push
mov
and
in
inc
xchg
adcl
test
jge
das
xlat
sub
push
xor
test
mov
dec
mov
jbe
mov
push
sbb
outsl
cmp
leave
fistpl
and
sub
cli
repnz
push
bound
addr16
mov
sbb
mov
hlt
add
xchg
dec
in
aad
mov
inc
lret
push
loope
xchg
or
into
sbb
js
mov
pop
sub
cmp
je
cs
icebp
push
ret
sbb
ja
adc
les
in
or
pop
mov
ret
scas
dec
mov
fwait
pop
add
xchg
mov
lahf
cmp
out
xchg
hlt
mov
inc
or
sbbl
cmpsl
fnsave
pop
and
out
ja
pop
bound
xchg
mov
and
int3
push
popa
pop
sti
test
adc
addr16
xor
jo
and
jmp
dec
and
push
push
pushf
into
xor
pop
and
mov
xchg
imul
mov
repnz
sbb
add
lea
cs
rcll
arpl
pushf
cmp
add
rcll
mov
sub
jno
js
pop
jmp
push
call
lret
push
sbb
add
mov
in
lds
push
xlat
cmpsb
cmpsb
int3
pop
call
sub
lods
fmull
mov
xchg
xchg
sbb
jo
clc
and
dec
inc
inc
popl
outsl
aaa
xchg
ja
or
int
inc
test
or
out
dec
or
dec
push
dec
bound
push
stos
xor
jns
inc
xor
outsb
sub
rcrb
mov
adc
mov
out
mov
ret
sahf
xchg
imul
adcl
jp
mov
xchg
xor
ja
sub
enter
in
ljmp
jno
lret
rcrb
fcoml
jb
mov
xchg
or
int
adc
sbb
add
cmc
loopne
rorl
cltd
fcoms
loop
les
mov
add
add
outsb
adc
scas
mov
xchg
xor
lret
sub
pop
das
or
test
mov
stos
ljmp
loope
loopne
imul
jmp
in
loope
clc
jmp
jg
jl
mov
sbbl
loope
mov
jne
sub
lods
mull
push
add
sub
push
or
fwait
enter
pop
or
outsl
imul
lea
fisubl
jle
loope
in
add
pop
mov
pop
fmuls
lcall
cmp
scas
xchg
movsb
inc
mov
xchg
pop
adc
cli
jns
shlb
mov
push
mov
jp
out
cli
xchg
roll
fnstcw
call
adc
cld
mov
in
dec
dec
dec
ret
cli
adcb
mov
xchg
cmpsb
adc
dec
jnp
and
or
gs
adc
ret
mov
fwait
lret
hlt
inc
movsb
and
dec
scas
or
sbb
stos
mov
hlt
mov
lds
sbb
add
push
in
lret
pushf
lods
jo
jb
sbbl
pop
jl
jle
insb
outsb
dec
push
mov
mov
push
inc
push
and
cmpb
test
cmp
and
mov
int
push
inc
xor
sub
mov
mov
aam
mov
push
adc
and
daa
add
and
cli
mov
adc
cwtl
jno
idiv
jne
in
sbb
dec
inc
cmp
push
in
mov
loopne
call
cmpsl
xchg
mov
enter
xor
shlb
shll
jae
dec
pop
jbe
xor
fisttpll
jns
xchg
xor
xchg
les
jb
xor
xchg
pop
add
cmp
dec
cmpsb
mov
mov
xchg
scas
pop
loop
mov
mov
jg
fstpl
loope
aam
out
sub
loop
je
cld
insb
lret
add
test
pop
xchg
cmp
int3
mov
in
add
dec
jo
out
lock
xor
je
add
pop
jo
ss
cmc
adc
mov
paddusb
ja
ja
ficoms
sti
clc
lret
jno
call
popf
pushf
xor
jl
and
mov
pop
repnz
pop
add
mov
outsb
push
xchg
movsl
and
or
shlb
jns
and
popa
cmc
les
call
mov
xchg
fsubrs
sbb
ret
loopne
test
aas
and
sbb
xor
adc
pop
inc
rcll
sbb
mov
adc
dec
shll
int3
leave
add
imul
inc
lods
mov
xor
fidivrs
lcall
scas
pushf
push
jne
adc
stos
scas
lahf
ss
sbb
sbb
add
mov
dec
sub
push
cmpsl
enter
bound
adc
xorb
pop
js
in
hlt
mov
cmp
mov
out
dec
jg
cmp
inc
sahf
jo
std
gs
mov
mov
mov
andl
xchg
js
pop
pop
fisubs
xchg
dec
jle
xchg
xor
and
dec
ljmp
fnop
cmp
xor
das
sub
jnp
add
jb
fxsave
fs
xchg
bound
jne
jge
aas
cmp
push
stos
jbe
popa
adc
aas
stos
push
dec
ja
jae
lock
jo
movsl
repnz
xor
js
shl
and
loopne
push
push
stos
inc
or
inc
sbb
adc
leave
aad
or
pop
dec
pop
or
lret
inc
pushf
pop
cmc
fcoms
pop
sahf
add
mov
nop
push
arpl
call
int3
std
xchg
ja
gs
sbb
fisttpl
or
addr16
cmp
mov
scas
cmp
ds
insl
es
push
mov
cmc
aas
loope
pop
inc
ss
pop
aaa
push
into
icebp
push
rcpps
repnz
mov
cmpsb
add
in
imul
lock
pushf
sar
xchg
dec
lds
jecxz
lds
fisttpll
fndisi(8087
fs
dec
insl
jmp
aaa
movsl
daa
cwtl
testl
inc
inc
js
stc
xchg
icebp
cmc
cmp
adc
nop
sub
cmpsb
mov
adc
movl
mov
cmp
push
outsl
dec
pop
add
scas
jp
in
sti
inc
repnz
push
in
stos
daa
xchg
lahf
fldenv
add
sbb
inc
imul
or
test
mov
ret
mov
les
sub
js
lret
or
fsts
loop
or
jle
les
jne
stos
push
in
outsl
or
xor
shrl
daa
push
xchg
fcomip
ficomps
pushf
fwait
pop
xchg
decl
and
into
loop
add
popa
inc
mov
test
mov
insb
sub
inc
fwait
mov
mov
sti
inc
fs
push
fidivl
mov
bound
sbb
jae
shrb
pop
or
mov
pop
ficomps
pop
addb
mov
rcrw
push
add
mov
sbb
adc
pop
pop
dec
cmc
adc
pop
pop
or
jle,pn
sti
sub
xchg
inc
and
adcb
cltd
ret
lods
jmp
inc
negl
pop
aam
dec
adc
push
ja
repz
mov
and
in
jae
sub
mov
and
test
sub
mov
sub
icebp
or
ja
cmp
aam
mov
and
aaa
addr16
pop
ja
adc
inc
fcomps
sub
jns
dec
jae
dec
ficomps
push
test
adc
push
icebp
xchg
js
pop
or
daa
lcall
dec
in
dec
bound
adc
cld
or
inc
jmp
fwait
stos
mov
dec
js
sbb
fs
sbb
xlat
out
inc
cwtl
cmpb
fcmovb
test
ss
lret
test
sub
cmp
repz
fisubrs
jne
push
inc
mov
movsb
fistl
test
jmp
adc
fisttps
andb
push
lcall
cmp
jo
adc
xchg
add
gs
mov
sbb
dec
push
shr
dec
hlt
jge
cwtl
popa
add
imul
lods
xor
das
push
dec
xor
mov
push
xchg
nop
pop
push
cmp
loop
jg
lret
mov
std
hlt
or
or
lods
cmp
jge
mov
mov
push
dec
cmpsl
fstl
sub
dec
dec
xchg
insb
insb
stc
je
xchg
sub
and
and
xor
sbb
cltd
in
inc
leave
leave
shl
and
mov
adc
dec
jl
inc
xor
jno
xchg
pushf
outsb
arpl
std
std
sbb
daa
jnp
sub
jg
mov
loop
mov
divl
rorl
outsb
push
xor
xchg
pop
add
es
or
push
adc
rcll
dec
cwtl
scas
ss
or
mov
fwait
test
inc
add
cltd
add
ja
scas
jecxz
xor
sbb
es
xchg
addr16
shll
sbbb
inc
cmp
repz
lret
add
div
nop
into
pushf
jg
cmpsb
push
mov
jo
sub
inc
sub
std
mov
es
push
adc
stc
sar
sbb
in
lcall
je
push
insl
cmc
push
dec
mov
adc
sti
movsl
push
outsl
dec
dec
ret
or
scas
sub
jo
sub
jbe
xor
add
scas
sub
pop
pop
mov
fmulp
inc
or
and
mov
push
out
out
inc
sbb
cmp
in
les
test
xchg
pop
jbe
mov
lcall
loopne
cwtl
jp,pt
pop
sub
clc
pop
xorb
pop
jg
sbb
jmp
mov
mov
shlb
dec
jecxz
aam
in
adc
popf
or
pop
cmp
cmp
mov
adc
pop
flds
mov
jb
scas
loop
mov
into
in
push
loop
test
fs
push
movsb
test
out
mov
popf
xchg
repz
and
mov
imul
lret
and
push
sub
dec
or
test
fcompp
sub
adc
std
xchg
cmp
stos
in
sbb
aam
fs
jae
es
js
imul
iret
lcall
ret
ss
lods
imul
and
dec
fstpl
push
pop
mov
dec
pushf
jmp
movsl
add
ja
stos
loopne
jo
push
dec
mov
aad
popf
jmp
fimuls
cmpsb
xchg
and
popf
add
add
cmc
xchg
push
fdivp
xchg
lock
add
add
jl
jge
aad
xchg
call
mov
pop
cs
enter
or
repz
test
icebp
xchg
add
xor
push
lcall
inc
adcl
outsl
add
xchg
jmp
fwait
int
leave
adc
push
cmpb
sbb
or
pop
je
dec
imulb
leave
sub
sbb
pop
dec
mov
jns
and
fidivl
push
nop
pop
xchg
mov
sbb
inc
lea
lea
inc
fisubs
cmp
sub
orb
xchg
sub
adc
insl
add
icebp
int3
scas
sbbw
push
pusha
and
data16
sahf
or
loop
hlt
dec
mov
lret
insl
dec
pop
jo
rcrb
push
push
sub
or
push
push
cmpsl
fmulp
add
iret
cli
mov
and
jo
pop
loop
or
cmp
aam
xchg
cmc
sub
jge
dec
adc
imul
or
push
inc
xchg
clc
push
or
testb
mov
je
xchg
aad
gs
and
ret
xor
dec
push
pop
movsl
js
cmpsb
sub
gs
and
daa
push
cmp
in
xchg
fdivl
arpl
jg
arpl
mov
mov
rcll
dec
mov
mov
jns
int3
in
push
fisttpll
out
inc
inc
push
shll
adc
into
repnz
cmpsl
jecxz
pop
xor
sahf
dec
in
cmp
adc
push
mov
sti
inc
xlat
mov
or
stos
enterw
inc
test
jg
jae
popa
mov
xor
xor
xchg
push
sub
dec
data16
or
sbb
inc
das
inc
cmpsb
mov
loope
icebp
std
lea
call
push
loope
cmpsl
or
sub
push
sbb
sbb
mov
out
stc
aam
stos
in
in
aad
rol
fldenv
ja
and
jno
loop
in
aas
pop
std
scas
and
push
xchg
mov
out
scas
dec
adc
cmp
aam
jmp
jmp
imul
cli
movsb
es
popa
imul
je
or
jge
xchg
push
addb
push
xchg
repz
jne
lcall
cmpsb
mov
and
and
imul
push
jp
cmp
fisubl
cld
mov
and
xchg
cmovns
int3
cmp
loop
mov
addl
mull
mov
clc
daa
add
outsl
clc
sub
push
mov
jb
xor
xor
fdiv
push
cmpsl
movsb
or
sub
mov
testb
mov
push
adc
sub
into
mov
das
scas
mov
inc
inc
xor
dec
xchg
pop
mov
jp
repnz
sti
incl
ret
lcall
in
call
push
pop
data16
adc
mov
ror
mov
push
add
vpmaxsw
push
xor
pusha
cmpsl
lock
ja
jo
lods
data16
lahf
dec
pop
xlat
inc
mov
xor
ja
ss
add
xchg
les
cmp
jg
dec
mov
jb
ljmp
icebp
inc
dec
xchg
imulb
xchg
cld
mov
mov
xchg
mov
jle
push
push
sub
sahf
inc
jns
movsb
jl
fmull
inc
mov
cmpsb
fstl
ljmp
pop
clc
mov
push
call
jmp
mov
loope
shlb
repnz
aas
fdivrl
lret
adc
xchg
mov
mov
mov
sbb
repnz
das
cmp
cmpsl
mov
cwtl
pop
outsb
and
movsl
pop
out
or
or
jg
ret
je
pop
cmp
mov
scas
movsl
sbb
xabort
mov
scas
pop
ds
ljmp
mov
cmp
push
ds
movsb
sub
and
lret
outsl
ret
out
pop
xchg
dec
imul
dec
scas
cmp
pop
imul
lea
fcompl
stos
out
sbb
lock
ja
add
cmp
xor
push
loopne
gs
mov
icebp
add
pusha
data16
dec
xor
push
sub
fwait
enter
mov
cli
jb
scas
jne
leave
sbb
popa
orb
aas
dec
cmp
fstps
and
or
push
push
inc
or
in
sub
or
push
lahf
xlat
push
jo
xchg
stos
fldt
pop
jo
jnp
out
cmp
mov
pop
gs
sub
sbb
divb
pop
inc
sbb
cmp
das
add
mov
sbb
jae
jne
xor
daa
pushf
mov
popf
inc
or
pop
das
push
cld
mov
xchg
loope
std
jo
push
sarl
adc
inc
rcll
inc
test
xor
or
sub
shrb
xor
mov
inc
mov
sbb
sub
ret
dec
clc
jle
jnp
jb
jns
push
insl
dec
or
fisttpll
xchg
cwtl
xchg
stos
mov
scas
or
inc
test
or
jae
mov
sarb
pop
mov
cs
lock
push
bound
cmp
lea
ss
jge
xchg
and
fwait
jno
jno
push
out
mov
rcr
insl
shl
push
cmp
test
mov
nop
mov
gs
test
sbb
adc
adc
sub
cld
mov
scas
in
hlt
stos
push
pushl
cmpsb
sarb
mov
xor
or
and
or
aas
inc
mov
lahf
push
sti
and
ret
jne
pop
lahf
lea
test
mov
lcall
outsl
push
xor
test
push
inc
ret
and
gs
pop
sub
or
or
sahf
loopne
adc
xor
push
fcmovb
adc
out
push
add
add
inc
shlb
and
jbe
pop
and
or
cmpsl
std
push
adc
ret
aad
ss
push
lods
data16
repnz
push
stos
fbld
and
add
jae
stc
jg
imull
jbe
lods
leave
and
mov
mov
sbb
stos
mov
mov
in
sbb
test
mov
nop
push
jmpw
rclb
repnz
aaa
mov
push
aad
mov
call
pop
inc
hlt
cmp
xor
or
jg
icebp
imul
fldl
xor
jae
enter
pushf
inc
pop
cmp
sbb
cld
fsubrs
iret
dec
inc
repz
cs
mov
cli
push
xlat
outsb
daa
fwait
aad
push
aad
mov
lock
mov
xor
xchg
gs
mov
adc
sbb
sti
dec
mov
fildll
daa
cmpl
cmpsb
lret
cwtl
movsb
jnp
insl
push
mov
shr
sbb
push
cmpsb
or
addr16
rcrb
scas
into
into
mov
xlat
dec
aaa
push
sbb
inc
sub
jl
out
cmp
xchg
mov
addr16
scas
lcall
mov
repnz
push
cld
repz
ds
out
repnz
sub
nop
inc
pop
mov
bound
and
mov
scas
rcrb
clc
and
scas
cltd
std
pushf
cs
iret
mov
mov
mov
inc
fdivrl
lret
jge
lret
pop
lret
adc
psubusb
mov
mov
sub
xor
retw
ret
fwait
stos
mov
sbbl
jge
inc
inc
stos
or
push
push
rolb
cwtl
lea
popf
ds
fimull
jg
pusha
dec
in
mov
add
pusha
adc
test
inc
xchg
inc
shl
sbb
adc
shll
lea
fwait
icebp
loop
xchg
add
mov
dec
dec
cmp
jp
leave
notl
jl
int3
cltd
mov
sti
xchg
adc
and
or
sbb
inc
aad
pop
push
sbb
in
lret
stos
cltd
and
pop
outsl
fstps
adc
lcall
add
mov
cltd
test
adcb
add
in
out
mov
gs
lahf
mov
xchg
pop
sbb
mov
mov
push
jo
mov
dec
test
adc
and
cmpsl
mov
repz
das
in
outsb
add
push
popa
inc
adc
aam
fs
aaa
sub
jecxz
std
mov
push
xchg
sti
or
call
mov
cmc
push
mov
adc
pop
xchg
test
jl
jg
jns
lock
insb
ljmp
sbb
push
push
xor
pop
pop
mov
das
push
scas
inc
repnz
inc
and
or
dec
fnstenv
hlt
mov
ret
call
or
mov
and
cmc
xor
pop
dec
test
sbb
fisubs
xor
out
cmp
inc
and
jo
js
xor
lret
and
jg
cld
add
push
pop
cmp
popf
mov
sub
mov
mov
adc
jbe
dec
dec
mov
mov
push
add
cs
sbb
sub
or
sbb
xlat
and
add
aaa
and
push
pop
mov
lahf
or
call
mov
shl
sti
adc
rcll
clc
push
popf
adc
stos
xor
cmp
or
xchg
push
sbb
jmp
dec
cmpsb
xorl
pop
jg
mov
pop
push
jae
jp
loope
add
fstl
mov
mov
jns
addr16
mov
jle
push
add
test
aad
push
mulb
mov
enter
sub
mov
mov
ret
jg
jecxz,pt
int3
xlat
shl
aas
mov
sub
fiaddl
aam
lock
sbb
sti
xchg
lds
mov
cmpxchg
out
fistl
mov
mov
jo
push
xor
jmp
add
sub
arpl
pop
mov
pop
mov
jo
loopne
mov
or
movsb
dec
int3
cs
cmc
movsl
xchg
push
push
add
jbe
jg
out
jno
stc
xchg
add
jecxz
mov
lock
idivl
lret
out
lock
and
jne
or
adc
add
jle
push
inc
mov
lods
out
cmp
rcrb
xchg
pop
addb
jl
adc
fdivl
xor
sti
or
in
pop
cmc
or
jae
fnstenv
dec
xor
add
cmp
adc
xorl
ss
clc
outsl
dec
mov
fisubl
jmp
loop
push
stc
cld
mov
dec
push
leave
and
adc
nop
ljmp
jecxz
hlt
xor
pop
dec
xchg
es
jg
cmc
repnz
mov
push
or
cmp
fidivrs
aaa
insb
push
pop
push
jae
cs
in
je,pn
into
int
adc
push
out
ds
pop
add
nop
fwait
dec
rorl
dec
mov
pop
shufps
pop
push
fdivl
cltd
mov
loopne
out
mov
cmpb
fidivrs
loop
add
fiadds
bound
cmp
leave
test
fs
xor
outsb
mov
push
adc
sbb
adc
sub
rcll
divb
add
jne
adc
ror
adc
cmpsb
dec
xchg
out
std
pop
ds
in
lcall
cmp
add
in
mov
iret
jmp
fcomps
lods
arpl
stos
mov
sbb
push
sbb
jbe
es
fs
cmpsb
jge
loope
sbb
inc
lods
dec
std
sahf
popf
test
add
jl
pop
repz
or
mov
push
nop
add
mov
imul
dec
pop
repz
dec
loop
inc
adc
dec
enter
push
mov
pushf
adc
subl
add
push
push
lods
mov
cmp
and
pop
mov
xor
sbb
scas
imul
daa
ror
jb
and
xchg
pop
adc
fdivr
imul
stos
pop
or
xchg
dec
jmp
sahf
cmpsb
push
mov
sub
push
in
imull
jp
mov
adc
out
loopne
or
rcrb
fnsave
stc
adc
or
cld
cmp
push
push
xlat
push
out
add
dec
mov
in
adc
addl
hlt
sti
ret
and
sbb
mov
mov
fistpl
add
ss
sti
and
ljmp
jno
or
push
xchg
inc
mov
lods
xchg
outsb
dec
cmc
mov
inc
dec
sbb
shll
xorl
xchg
loope
gs
and
aad
fcompl
pop
mov
inc
icebp
push
mov
mov
jb
popa
scas
or
repz
or
jnp
xchg
lahf
bound
sub
pop
sbb
xor
test
mov
mov
fldl2e
ret
lock
cmpsb
jne
ljmp
adc
lret
out
jae
imul
jmp
ret
push
es
mov
jecxz
pop
data16
and
subl
std
sbb
inc
roll
pop
ja
shrl
sbb
shl
pushf
xchg
jmp
movsb
xchg
cmpsb
sub
repnz
faddp
nop
mov
negl
push
or
test
pop
js
lods
fldt
rcll
cli
inc
adc
xor
stc
scas
jle
lcall
push
stc
sahf
xor
fs
adc
jo
out
mov
dec
inc
ret
jle
cmp
pop
push
xchg
pop
xchg
shrl
xor
lods
add
cmpl
pop
and
aam
xchg
pop
hlt
int
mov
jmp
out
cmp
xor
dec
and
inc
mov
inc
stos
andb
xchg
in
lret
lahf
xchg
and
popa
mov
loop
js
xchg
std
nop
xchg
cmp
cmp
mov
push
inc
lock
scas
in
jl
pop
add
pop
mov
and
clc
fcompl
int3
loope
dec
adc
xchg
push
cli
jecxz
sub
cwtl
aaa
xchg
pop
jbe
mov
jmp
cltd
pcmpgtb
dec
cmp
jge
testl
xchg
outsl
or
xchg
insb
xlat
sbb
cmp
inc
jo
fisubl
movsb
cmp
mov
pop
negb
popa
mov
fcoml
mov
in
leave
lahf
inc
popa
mov
fwait
push
xor
es
xchg
dec
push
lods
iret
xchg
pop
pop
popa
ljmp
loopne
sbb
xchg
inc
dec
in
gs
subb
mov
jb
shr
push
negl
and
xchg
cltd
fidivl
in
mov
mov
lock
cmpsb
mov
loop
dec
flds
loop
cwtl
inc
sahf
pushf
dec
dec
in
pop
dec
lcall
xor
and
mov
jnp
lret
pop
jo
jecxz
nopl
nop
xchg
sbb
mov
sbb
leave
es
push
inc
jbe
sar
insb
stos
and
sbb
mov
adc
mov
mov
imul
lea
rcl
xorb
addb
cmp
loopne
lahf
loope
loop
lds
push
mov
pop
leave
stos
js
in
cmp
mov
xchg
ds
mov
pop
jno
dec
jo
pop
dec
lret
xchg
js
inc
or
scas
inc
pusha
mov
cmpsb
xor
lock
imul
xchg
aas
lods
loopne
scas
xchg
mov
fistl
xchg
mov
mov
cmpsl
mov
adc
ss
sub
mov
push
add
add
cmpsl
stos
out
pop
jo
sub
test
lcall
and
imul
in
jns
fcomi
inc
inc
out
push
inc
sbb
mov
psllq
iret
mov
movsl
xchg
lods
inc
fdivrs
lret
stc
mov
lods
test
jae
inc
jmp
jbe
cmp
mov
mov
adc
xchg
mov
lret
sbb
adc
jl
dec
test
es
push
xor
cmp
push
mov
scas
cmpsb
movsl
test
outsb
jmp
sub
push
out
mov
or
pop
divb
sarl
ret
sub
push
outsb
sub
mov
xor
ss
scas
xor
inc
pop
in
pop
ret
ljmp
inc
aaa
lds
jl
lods
push
das
adc
inc
es
fs
fnstenv
mov
push
dec
dec
inc
push
mov
cwtl
je
shrl
insb
cmpsl
or
test
jle
test
loopne
push
adc
in
sbb
mov
ss
test
mov
add
mov
ficoms
insb
pop
cmpl
outsl
pop
in
dec
jnp
or
jne
mov
aaa
lods
sub
and
jmp
pop
daa
push
mov
jae
repz
scas
mov
push
ljmp
and
shl
mov
and
add
mov
nop
out
mov
or
out
aad
es
ja
jp
inc
les
sub
xor
xchg
pop
fdivrs
cmp
lock
loop
jnp
fmuls
sbb
mov
push
dec
inc
fwait
repnz
js
xlat
loop
adc
push
ss
cwtl
notb
je
pop
xchg
lahf
push
mov
rcll
cwtl
inc
scas
push
addr16
mov
out
aad
in
inc
xchg
dec
loopne
jne
jg
cmp
push
inc
std
das
add
dec
mov
shrl
sahf
xchg
jne
mov
inc
loopne
xor
xchg
inc
jbe
scas
lret
pop
lods
aaa
out
ljmp
sub
push
dec
xchg
jecxz
sti
test
cld
mov
mov
iret
dec
jbe
pusha
cli
mov
mov
jmp
xorb
xor
jnp
xor
lcall
mov
leave
xchg
cs
mov
cli
mov
xor
xchg
sti
test
inc
repz
mov
mov
cmp
push
jecxz
xor
xchg
cmp
into
mov
sti
sbb
loope
leave
jmp
xchg
sbb
xchg
popa
xchg
loop
sti
cmp
sub
stos
cltd
and
nop
adc
gs
aaa
ljmp
ret
pushf
in
jle
mov
xchg
xchg
push
aad
or
mov
mov
and
push
mov
stos
jmp
dec
rorl
push
outsl
fadd
mov
orl
jb
or
push
out
dec
bound
mov
roll
aas
imul
cmp
push
or
push
imul
mov
out
fmuls
cwtl
adc
imul
xchg
out
push
mov
imul
push
and
inc
jne
mov
les
push
jge,pt
pop
inc
jp
call
or
outsb
shl
push
pop
push
jge
inc
sub
loopne
xor
lods
mov
and
in
mov
inc
push
test
push
and
push
lahf
enterw
dec
ucomiss
je
aas
mov
into
mov
outsl
jnp
cwtl
pop
shlb
mov
bound
jo
xchg
xor
dec
lret
sub
mov
pop
lods
dec
incl
mov
outsl
jg
int3
pusha
rclb
jmp
popl
stos
jle
dec
cld
lock
sub
nop
lods
mov
lret
fistpll
fs
mov
outsl
lcall
dec
into
push
outsb
gs
test
inc
fistpll
sbb
out
mov
ja
insb
mov
lcall
mov
ss
ret
sbb
decb
cli
push
xchg
test
xchg
adc
sbb
inc
mov
xor
js
xchg
and
stos
lea
ret
imul
dec
dec
daa
inc
fdivrp
sbb
insl
push
mov
sti
nop
dec
inc
mov
sar
call
xor
jns
dec
jae
lret
sub
xchg
sub
inc
mov
into
loopne
std
sub
into
sub
fcompl
sbb
fs
mov
jns
jge
adc
cmpl
push
or
out
push
sub
mov
nop
inc
imul
sahf
shrb
std
jg
ljmp
jb
pop
or
pop
popa
leave
mov
sbb
add
in
gs
pop
stc
out
jo
cmp
jno
fmul
sti
jae
gs
shrb
cmp
ret
jp
sbb
ret
push
pusha
mov
jo
lds
pushf
pop
imul
sbb
jnp
add
fists
mov
mov
ret
cmp
idivl
sbb
je
test
mov
dec
lret
and
imul
sbb
xor
test
push
outsl
repnz
sub
in
ret
adc
sbb
cmp
adc
xchg
sbb
cmp
mov
xchg
cwtl
xchg
jecxz
mov
adc
cmp
and
repnz
or
and
mov
jp
cmpl
ror
hlt
adc
sbb
hlt
stos
push
test
push
pop
mulb
icebp
and
push
nop
adc
leave
repz
mov
add
rorl
stos
lea
out
sbb
inc
shll
sbbb
out
inc
call
aad
inc
repz
jecxz
aas
iret
jle
dec
ret
les
stos
cli
mov
js
adc
in
mov
ret
inc
mov
mov
sbb
mov
int3
cmp
or
mov
test
lods
xor
inc
dec
mov
fstps
das
push
cwtl
lret
mov
sahf
pushf
or
int
add
sbb
push
jno
pop
stos
jns
sarl
notl
lahf
insb
ljmp
movsb
or
div
popf
sti
adc
mov
ljmp
in
mov
notb
xchg
jle
inc
and
dec
addr16
test
movl
cmp
xor
ret
add
mov
lea
cmpsl
gs
inc
dec
sahf
sub
add
mov
fmull
xor
insb
rclb
add
sub
aad
mov
loope
cld
lahf
pop
movb
das
xchg
pop
in
sub
dec
inc
mov
imulb
mov
icebp
test
sahf
jne
jns
xchg
inc
roll
mov
xchg
lds
pop
out
repnz
out
sbb
ja
push
xor
add
popl
cmp
loopne
pop
das
fsubrl
fisubs
imul
loop
jb
xor
adc
push
dec
outsb
ret
mov
mov
call
xchg
imul
pushf
lahf
movb
shrb
push
xor
xor
push
dec
rcl
es
sti
sub
ror
mov
in
dec
jle
aas
out
insb
lock
das
jbe
pop
loope
rcrl
scas
pop
or
call
jg
and
push
dec
pop
and
cmp
lcall
das
pushf
cmc
xor
mov
jmp
adc
xor
cmc
sub
inc
ds
pop
nop
push
dec
xor
cs
inc
icebp
push
adc
icebp
out
aam
test
add
mov
adc
or
cwtl
mov
mov
imul
add
div
lods
and
aas
sbb
enter
mov
xchg
es
sbb
adc
cmp
jae
mov
repnz
gs
lcall
in
sbb
xor
pop
xor
mov
jns
arpl
mov
stos
das
sub
test
setns
out
pop
fstps
ja
subps
dec
lahf
pop
ret
pop
pop
dec
mov
push
lea
pop
lret
mov
imul
push
pop
sahf
ljmp
jb
and
cmp
or
call
xor
bound
pop
in
in
pop
sti
jns
fs
cmpsb
and
in
daa
enter
jno
clc
data16
sub
std
icebp
jo
and
sub
and
dec
ja
push
iret
and
gs
shrb
mov
sbb
sbb
push
movsb
pushf
cmpsl
in
repz
sbb
mov
push
adc
inc
repnz
insb
or
pusha
mov
cld
xchg
and
mov
call
dec
inc
xchg
fnstcw
jbe
cli
jmp
stos
xor
fmull
cmp
add
pop
je
into
inc
jl
test
cmp
les
jmp
sub
xchg
sub
cli
addl
inc
sub
call
je
clc
jl
xchg
adc
xlat
mov
scas
addl
jno
rorl
mov
lea
pop
shrb
js
adc
in
in
or
jl
jg
push
sub
and
imul
bound
scas
pusha
adc
mov
mov
loopne
lods
inc
inc
sbbb
ret
mov
add
in
bound
pop
cli
and
sbb
and
xor
loope
mov
push
adc
xor
push
lock
cmp
push
outsb
jge
pop
add
lret
inc
cltd
jo
scas
xchg
push
dec
shrb
repnz
sbb
in
inc
and
jo
jns
outsl
push
nop
pop
mov
mov
cmp
mov
ror
mov
push
js
outsb
xor
daa
mov
mov
and
incb
xor
les
cmp
pop
stos
jb
mov
adc
ljmp
sbb
sbb
lcall
mov
push
mov
movsb
push
xor
push
lods
push
repz
insl
pop
push
addl
pusha
mov
pushf
loop
test
int
std
cmp
loopne
push
cmp
dec
adc
in
add
bound
and
xor
mov
hlt
lds
std
sti
mov
aam
popa
pop
xchg
sub
addl
push
jle
push
out
jecxz
or
lods
jns
imul
adc
jae
sbb
ja
movsl
shll
inc
jb
lods
js
cmp
nop
out
or
imul
sub
int
mov
stos
jge
add
mov
push
stos
mov
loope
decl
pop
sbb
push
cli
pop
outsl
dec
outsl
call
iret
mov
xchg
mov
scas
rorb
adc
mov
cmpsb
push
dec
sbb
fnstsw
outsl
mov
xor
loop
xchg
or
jge
pop
dec
and
out
lods
jle
sbb
mov
aad
scas
or
inc
vcvtpd2psx
aam
out
push
adc
push
imul
out
enter
mov
add
mov
add
fcomip
pop
arpl
movsb
and
mov
mov
add
mov
je
popf
add
sahf
dec
sbb
lods
pop
mov
sar
add
and
push
dec
fwait
test
dec
jae
insb
mov
aam
xchg
in
dec
mov
insl
fildll
dec
sub
mov
scas
inc
les
out
insl
clc
aam
dec
cmp
sbb
mov
mov
mov
add
roll
les
jg
outsb
jge
shll
mov
insl
cmp
lret
adc
xchg
and
je
ss
popa
xchg
stc
outsl
jge
mov
icebp
xchg
cmc
loopne
or
adc
clc
inc
mov
or
bound
jle
jp
aas
mov
jp
test
in
xchg
and
jg
jge
mov
ljmp
add
addr16
lret
xchg
inc
mov
push
cli
sub
push
adc
and
xor
fldl
fistps
popf
pop
push
dec
and
jle
lret
imul
jb
xor
pop
push
xchg
or
jnp
lcall
mov
imul
lcall
adc
ret
inc
in
sub
push
jno
roll
inc
or
adc
mov
js
fisubrl
jae
cmp
xor
iret
pushf
and
cmpsb
sbb
fdivrl
lret
test
mov
sti
mov
inc
das
out
cli
jp
mov
xor
orl
lahf
cmp
sbb
lcall
pop
xor
or
mov
fisttps
inc
int3
push
pop
in
sarb
loopne
les
xorb
mov
ret
mov
in
mov
xchg
sub
test
lcall
xor
xor
jecxz
push
inc
fldenv
imul
pop
add
push
enter
lret
and
cltd
iret
adc
xlat
xlat
lea
pop
sbb
xor
inc
das
cltd
shll
cwtl
xchg
gs
out
gs
cmp
scas
cmpsb
mov
loop
mov
push
push
jg
outsb
add
lods
hlt
scas
scas
fistpll
daa
pusha
daa
adcb
sub
icebp
push
jl
lock
and
pop
mov
ja
and
add
and
dec
lahf
divb
mov
push
mov
dec
in
scas
pop
push
andb
cwtl
cmc
icebp
or
and
push
adc
cwtl
pop
rcr
inc
lds
leave
adc
push
lcall
mov
lods
jne
dec
sub
dec
nop
jl
push
mov
imul
ja
push
les
jno
mov
imul
mov
sbb
jne
sar
inc
push
push
nop
stos
iret
jns
cmpsb
add
mov
push
jno
push
test
dec
mov
out
dec
out
arpl
jo
pop
inc
cmp
and
sub
mov
jg
fcmovne
inc
dec
jle
js
in
jne
fnstsw
les
fistps
or
xor
sub
mov
sbb
inc
cmc
push
cmp
bound
std
adc
sbb
outsb
cmp
jecxz
pop
shl
and
in
cld
gs
sti
ret
lahf
enter
sahf
fildl
mov
out
gs
lret
test
dec
std
xchg
fcomps
test
mov
dec
orb
cmp
imul
rep
imul
outsl
loopne
test
outsb
xorb
pusha
stc
jo
pop
mov
adc
mov
adcb
push
pusha
hlt
mov
test
loope
fcom
fdivrl
into
inc
mov
pop
iret
addr16
mov
notb
and
sti
mov
out
xchg
dec
aas
dec
pushf
stc
mov
scas
in
je
enter
sbb
adc
cmp
call
sarl
add
jp
int
adcb
in
pop
mov
pop
cwtl
xchg
mulb
cmp
lret
jmp
mov
mov
sbbl
popa
outsl
std
mov
repnz
and
pop
imul
dec
stos
lods
or
mov
add
loope
sbb
jl
fs
je
decb
mov
out
cmc
mov
inc
scas
les
cmp
mov
jnp
or
pop
ret
lea
daa
les
mov
daa
jge
sub
cwtl
push
cs
rcll
sub
mov
das
push
into
mov
mov
xchg
mov
loop
mov
inc
jl
arpl
fdivs
mov
test
mov
jl
mov
xchg
fiaddl
stos
pop
sbb
int
test
and
insl
int
mov
lret
fwait
les
scas
xbeginw
sbb
pop
pop
bound
pop
xchg
out
mov
jmp
push
les
push
jns
paddw
pushf
insb
push
cs
push
je
div
xchg
sti
adc
sub
jmp
ret
and
sbb
jnp
adc
leave
popf
or
movsl
aad
push
mov
mov
add
xchg
ljmp
jne
xor
mov
mov
ret
movsb
pusha
sub
xlat
jae
rcrb
outsl
sub
mov
sbb
cmpsl
fwait
adc
ret
pusha
push
lea
add
int3
in
sbb
movsl
fcompl
xchg
std
lds
cmpsb
mov
dec
clc
std
or
mov
pop
mov
fwait
jle
xchg
inc
and
mov
or
jmp
movsl
and
cmpl
add
out
pop
sbb
fcompl
push
or
xchg
or
xchg
mov
pop
mov
mov
idivl
daa
leave
mov
jo
push
dec
addr16
lahf
lock
push
mov
mov
pushf
cmp
xchg
fidivl
in
jo
adc
push
dec
das
ja
inc
sbb
dec
sub
cld
idiv
dec
repz
subb
or
test
aaa
clc
lock
push
xchg
loop
and
inc
mov
cmp
cld
ljmp
notb
fwait
xchg
and
pop
add
pop
js
push
or
shrl
addl
shll
mov
fcmove
xchg
push
or
mov
andb
mov
clc
adc
rorb
aaa
xchg
sbb
add
or
push
dec
stc
aad
dec
and
pop
fstps
xchg
mov
cld
and
or
xor
leave
mov
repz
adc
imul
jbe
popf
lret
cmp
stc
sub
adc
leave
test
pop
adc
dec
jmp
xlat
push
xor
gs
xchg
insl
std
mul
inc
loopne
push
adc
add
sahf
add
push
fcmovb
addr16
out
jmp
push
jbe
outsb
push
test
fs
sub
jnp
add
push
mov
fcompl
xlat
je
fildll
iret
jo
sbb
aam
int3
out
cltd
sub
jae
lahf
cwtl
scas
out
rorl
cmpsb
add
sub
xchg
dec
fs
mov
repnz
ret
add
arpl
dec
aas
or
jmp
mov
fistpl
aas
dec
mov
lea
jb
neg
insb
cmp
bnd
sbbl
out
cmp
push
pop
pop
scas
leave
mov
rcrb
int3
test
push
sbb
fs
jno
jb
sbb
xchg
inc
mov
dec
loope
out
inc
adc
cwtl
shrb
aad
scas
dec
es
sarb
inc
add
dec
sbb
or
push
dec
or
rcr
lret
add
lods
sub
xchg
andb
aad
movsl
xor
aad
ss
xchg
inc
aad
add
and
xor
adc
xchg
dec
mov
cmp
push
push
cld
cmpsb
mov
mov
mov
das
and
pushf
hlt
xlat
adc
jle
leave
pop
nop
loopne
jge
pop
inc
and
lahf
xor
adc
jge
mov
mov
lods
adc
cmp
dec
sub
jne
loopne
push
cmp
aad
dec
and
jp
inc
sub
hlt
dec
dec
je
ret
sub
int3
cmc
lods
shll
add
rorb
cmc
cmp
xchg
enter
lods
subl
push
xor
arpl
add
push
mov
xlat
add
cmp
xchg
jp
aaa
iret
cmp
mov
or
mov
push
pop
xor
sahf
push
shr
sub
inc
std
xor
pop
xchg
dec
sahf
dec
shlb
pop
xlat
ds
cmp
pop
push
jge
push
cmpsl
outsl
ss
adc
xchg
shrl
orl
sub
in
scas
sub
rol
repnz
sub
mov
mov
sbb
arpl
js
lcall
adc
xor
jo
sti
fs
mov
out
movsb
nop
fwait
js
adc
mov
xor
mov
rcll
mov
push
and
push
jno
lods
call
adc
or
add
xchg
cs
loop
mov
jmp
mov
push
aas
iret
sub
scas
test
push
pop
insb
mov
test
loop
mov
stos
adc
nop
add
jle
or
fidivrl
mov
shll
push
arpl
dec
xor
sahf
shll
loope
lahf
mov
loop
jae
stc
fmull
xor
inc
in
addr16
mul
xchg
inc
and
jno
and
adc
push
or
mov
xlat
idivb
mov
and
xchg
sub
pusha
in
mov
sbb
push
jle
rorb
in
leave
push
flds
or
movsl
cmp
daa
pop
cli
insl
outsb
sub
arpl
pop
mov
and
add
sub
stos
test
js
cli
roll
or
mov
xchg
jmp
sarl
movsl
jmp
push
out
pop
mov
xchg
pusha
cmp
mul
pop
jg
lea
dec
imul
sbb
dec
and
mov
mov
cld
xor
xchg
insl
xorb
ljmp
test
mov
imul
ss
into
sti
adc
mov
dec
add
leave
or
push
jns
inc
push
pop
shll
addr16
insb
nop
and
pop
pop
dec
or
sbb
xor
in
add
jns
adc
and
inc
jnp
or
add
mov
jmp
into
inc
ss
fs
xor
mov
cmpsb
in
sahf
dec
lret
push
mov
sub
je
and
jne
pop
xchg
cmp
pop
inc
xchg
adc
add
mov
imul
fdivrs
xchg
scas
cmp
jne
outsb
sub
cwtl
cmp
out
adc
dec
cltd
mov
icebp
cmp
mov
cwtl
push
add
push
cmp
sbb
push
insb
add
mov
aaa
int3
push
bound
clc
stos
adc
movsl
les
jecxz
mov
inc
dec
sub
pop
out
push
or
int
test
mov
lret
popa
and
popa
mov
pop
gs
pusha
pop
mov
incb
imul
stos
imul
jecxz
and
out
out
mov
inc
lret
adc
loop
mov
out
and
rclb
fcoml
push
cmp
test
and
push
fs
xor
mov
stc
test
aaa
fiaddl
lret
xchg
mov
rcrl
imul
lcall
add
mov
out
lods
inc
call
out
pushf
stos
addr16
ljmp
insb
mov
pushf
pop
inc
lock
into
cli
pusha
imul
in
pop
push
xor
ljmp
add
sub
mov
add
jb
clc
clc
jg
gs
mov
arpl
dec
mov
mov
xchg
shl
mov
push
idivl
xchg
movsb
mov
imul
pop
loop
ror
adc
mov
adc
loopne
loop
imul
repz
mov
add
roll
orl
xchg
push
movsl
jns
or
jb
xchg
xor
out
push
aad
shl
lods
arpl
xchg
scas
stos
insb
test
es
jo
jb
shll
adc
jecxz
and
mov
inc
jl
ret
dec
gs
mov
inc
dec
lahf
mov
adcl
mov
repnz
lahf
stc
xor
mov
fwait
mov
pop
stos
fwait
arpl
sahf
jle
gs
sti
xor
inc
mov
insb
sbb
or
in
jge
jl
call
les
mov
pop
xchg
or
xor
jno
insb
rclb
std
inc
movsb
stos
pusha
nop
adc
jle
sti
ljmp
jae
cltd
inc
sbb
mov
add
adc
cmp
or
adc
mov
add
sbb
adc
mov
jne
mov
ss
stos
test
and
sbb
push
divl
lds
in
dec
inc
jns
cwtl
js
add
in
andl
hlt
palignr
push
push
setg
outsl
rcr
pop
std
xor
int3
inc
lods
ja
enter
and
popa
lret
stos
mov
imul
fdivr
push
fists
pusha
jl
cs
pop
mov
rcll
mov
outsl
mov
cmpsl
pop
mov
jecxz
out
dec
stc
dec
sbb
inc
cmp
push
sub
insl
or
roll
push
pop
cld
or
xor
dec
shlb
jne
sub
adc
fidivrl
jp
mov
dec
jl
enter
jl
mov
insl
push
sbb
sbb
inc
sub
out
aad
cmp
push
in
in
xchg
mov
mov
hlt
adc
into
out
push
jne
cli
cmpsl
push
mov
jns
and
xor
adc
xchg
mov
arpl
inc
dec
clc
xchg
sahf
xchg
pop
jo
clc
mov
aaa
or
test
jp
pop
fisubrl
pusha
pusha
dec
mov
out
jno
xchg
pushf
mov
stos
lds
sub
cmp
sub
inc
std
xor
push
loop
je
xchg
xor
push
sub
cmc
shll
sub
jnp
push
arpl
cmp
and
mov
std
mov
cmp
mov
sub
mov
stos
repnz
nop
rorb
fadds
in
inc
mov
ds
push
mov
popf
loopne
push
in
fsubrs
out
cmp
jecxz
data16
lds
mov
movsb
cmp
or
and
add
movsl
pop
xchg
int3
int
lret
test
dec
inc
add
jge
lret
pop
adc
jge
clc
es
xlat
xor
repnz
loope
lods
and
in
push
sub
sub
cmpsb
stos
cmp
xor
xlat
adc
out
adc
sbb
xchg
ss
aas
addr16
cltd
lods
cld
sub
andb
push
imul
out
pop
repnz
sbb
push
cltd
scas
xor
rorb
cli
rcrl
pop
into
xor
mov
es
sar
jo
lock
sti
fwait
cld
jns
mov
push
repz
fldl
aam
mov
push
fcomps
push
push
xor
dec
in
sbb
stos
inc
xor
enter
add
ror
xchg
loope
sahf
adc
les
push
or
adc
rolb
not
xchg
xorl
test
jle
clc
jg
jnp
adc
mov
fiadds
mov
xchg
daa
lock
xchg
lds
loop
mov
cmpsb
mov
pop
jl
subb
sbb
mov
fdiv
sbb
sbb
scas
xor
xlat
inc
adc
movsl
lcall
mov
fnstcw
sbb
push
call
std
jge
insl
add
push
pushf
push
push
ret
insl
pushf
test
sub
les
imul
cmp
push
lret
lds
leave
lock
dec
shrl
fidivs
pop
nop
jecxz
xlat
lret
xor
loopne
dec
sbb
mov
lahf
ss
push
cmc
sbb
scas
mov
sub
xor
sub
cmp
add
push
fists
sub
push
sub
mov
or
pop
gs
inc
imul
call
cmp
sbb
frstor
sbb
stc
mov
xchg
shrl
xor
add
addr16
nop
xor
pop
out
pop
mov
repz
xor
inc
mov
push
jge
xor
repz
insb
out
popf
int3
dec
aad
jge
xor
jmp
cmp
mov
mov
mov
mov
and
test
in
push
leave
push
mov
adc
addb
aam
mov
call
push
pop
data16
lock
cli
lods
or
stc
mov
imul
xor
lods
mov
adc
xchg
ret
ret
pusha
fs
out
dec
add
ss
pop
pop
test
popf
cmp
int
movsl
call
pusha
sub
cmpl
lea
sahf
js
clts
and
lahf
ss
nop
pushf
dec
fiadds
mov
ja
sub
cmpsb
loop
int3
inc
sbb
mov
test
adc
shl
insl
mov
dec
in
xchg
mov
jno
add
add
bound
into
mov
or
addr16
scas
test
jb
sbb
lret
mov
mov
cmpsb
jg
mov
push
and
xor
fdivs
loope
and
leave
xchg
and
xchg
xchg
scas
out
push
cmp
mov
sbb
loope
notb
mov
or
mov
clc
les
and
je
pop
xchg
ss
icebp
jo
pop
xchg
mov
cmpsl
pop
xchg
jg
mov
inc
add
inc
je
xor
sub
mov
xchg
push
push
decl
mov
inc
inc
cs
scas
adc
call
imul
inc
in
xor
aaa
xchg
add
data16
mov
adc
lcall
mov
fs
movb
sbb
in
push
cmpsl
lock
cmp
lods
in
lcall
test
gs
fbstp
dec
lcall
xchg
int
fsts
dec
cmpsb
cmp
cld
push
lret
dec
daa
int3
mov
mov
add
or
jp
aas
ljmp
es
call
adc
clc
mov
out
and
outsl
mov
clc
fildl
out
incb
jbe,pn
xchg
adc
xor
sti
mov
xor
rol
divl
push
xor
xor
xchg
dec
stos
sbb
rcll
cmp
imul
outsl
or
insb
mov
aad
pop
mov
add
jnp
xor
outsl
cmc
movsb
pop
out
cmp
shll
add
ljmp
push
jns
icebp
push
push
incb
jmp
and
mov
insl
jns
mov
cmpsb
xor
je
push
add
std
into
push
and
jo
lahf
in
or
je
icebp
inc
jae
sbb
dec
mov
cmp
or
mov
int
sbb
jp
sar
inc
cld
and
xchg
and
jae
call
cld
cmp
mov
scas
mov
sub
jns
loope
in
push
xchg
into
adc
mov
iret
pushl
fsubs
sub
pop
push
add
xor
gs
clc
sbb
andl
mov
mov
and
inc
scas
xchg
inc
push
mov
and
dec
loop
in
push
stos
push
pusha
jmp
sbb
arpl
and
addl
xor
push
fstpl
mov
fmulp
xor
popf
outsb
std
push
cmp
ret
int
cmp
cmp
xchg
pop
shl
popa
xchg
cmpb
pop
xor
jmp
nop
jo
inc
add
xorl
mov
scas
dec
stos
mov
test
jg
pop
xor
inc
mov
ficompl
push
push
mov
xchg
cmp
push
stos
cmp
into
or
aad
xchg
lea
sub
cld
fistpl
push
pop
or
adc
add
pop
or
test
bound
sub
scas
std
mov
ret
xor
sub
sub
push
xor
mov
xchg
push
push
or
int
cmpsl
aam
mov
xchg
adc
mov
fists
rorl
mov
ret
jbe
shr
movsb
fistl
out
jno
mov
mov
sbb
sahf
scas
in
pusha
rcll
fdivrs
or
loopne
ss
rcr
jnp
scas
insl
pop
and
sub
inc
aaa
into
cmp
pop
xchg
xchg
jne
repnz
mov
js
mov
je
inc
aam
jnp
cld
push
dec
mov
push
sahf
fs
add
jecxz
push
enter
cmp
mov
add
add
xor
sbb
push
frstor
je
int
and
add
aad
mov
pop
inc
add
dec
jl
pop
push
aaa
pop
push
into
add
and
into
and
std
adcb
aaa
or
push
jp
repz
xchg
xchg
cltd
loop
testb
adc
xor
dec
out
mov
mov
xchg
out
mov
jbe
sbb
cli
mov
adc
sarb
dec
leave
cmp
lret
adc
loope
adc
nop
mov
addr16
mov
das
mov
loop
addr16
jno
pop
sti
push
lds
adc
pushf
dec
jecxz
and
fsubl
call
jnp
and
aaa
repz
xor
mov
mov
ret
loop
popf
mov
insl
mulb
rorb
cmpsl
push
scas
mov
push
lahf
add
mov
lds
cmp
jmp
fcomps
shlb
fstps
popa
daa
rolb
pop
les
push
repz
outsb
iret
push
push
jg
fisubrl
dec
sbb
adc
pop
add
into
lods
movsl
mov
jno
xchg
or
or
aad
pushf
cmc
mov
mov
clc
call
idivb
rclb
push
or
inc
sarl
mov
lcall
mov
call
dec
or
sahf
adc
push
cmp
xchg
dec
insl
xchg
xorb
sbb
inc
imull
push
enter
int
addb
lods
inc
mov
pop
test
int3
or
test
shl
lods
fwait
ja
sub
xchg
ffree
dec
inc
test
int
inc
mov
lods
loope
xor
inc
inc
call
dec
adc
lods
jecxz
xlat
mov
rorb
sub
fimull
cwtl
cltd
lcall
xchg
pop
pusha
cmp
xor
es
add
pop
fwait
and
adc
sbb
repnz
adc
xchg
xor
cmp
mov
inc
sub
or
imul
les
and
pusha
daa
insb
arpl
call
add
lods
sub
imul
stos
and
in
rcll
pop
dec
lahf
jecxz
int3
xchg
cli
dec
sub
in
enter
xor
xor
mov
push
out
jge
xchg
xchg
dec
dec
or
sub
or
mov
imul
xor
sub
test
inc
dec
outsb
outsb
aaa
xor
outsb
dec
data16
loope
sbb
xchg
std
loop
popf
cltd
sub
scas
jg
in
out
or
mov
mov
push
xor
inc
add
xor
scas
fldenv
scas
xchg
mov
stc
sahf
aam
mov
scas
loop
inc
lret
mov
fisubl
and
es
push
stmxcsr
roll
add
pop
adc
add
push
adc
test
insb
dec
popa
sti
fdivl
dec
loopne
fs
rdmsr
jecxz
popa
xlat
push
xlat
or
inc
imul
sbb
aas
dec
push
jmp
pop
cmp
insb
hlt
aad
cmp
cli
cmp
sbb
or
fwait
aam
inc
add
xchg
pop
mov
dec
cmp
dec
out
lahf
dec
or
push
data16
stos
add
stos
add
notl
or
inc
loop
jg
or
adc
mov
fucomip
jb
cld
pop
or
data16
adc
int3
jno
adc
lds
inc
mov
dec
add
xchg
mov
call
movl
dec
ret
pop
js
mov
xchg
xchg
and
mov
std
push
or
pop
adc
sti
test
xchg
outsl
adc
fstp
push
cs
pop
int
sub
jecxz
fcomip
sbb
inc
pop
xlat
cmpsb
mov
int3
jecxz
cmpsb
mov
fisttps
mov
adc
and
rcl
xor
add
mov
jne
popf
fsubrs
inc
movsl
adc
sub
pushf
imul
cmpsl
loop
out
pop
jmp
mov
sub
loop
stos
fcoms
ds
out
jg
iret
fcmovu
inc
jns
push
sub
lods
hlt
out
xor
xchg
mov
int3
or
test
mov
push
test
or
scas
dec
and
and
iret
lock
call
rcrb
int3
pushf
call
mov
stos
subb
arpl
push
adc
mov
arpl
in
xor
inc
cmp
jne
xor
popa
lret
pop
test
lods
jno
push
mov
adc
mov
into
mov
aam
mov
scas
push
mov
xor
and
xchg
push
sahf
int3
mov
mov
jnp
out
dec
dec
inc
sub
in
push
or
repz
cmp
sbb
fs
mov
and
or
xchg
xchg
pop
push
movl
iret
mov
mov
or
je
mov
pop
pop
push
mov
xlat
cmp
scas
cmp
dec
int
fcmovnb
popf
and
mov
dec
push
xorb
cmp
push
mov
pop
cmp
xchg
push
lods
fdivr
nop
jecxz
cmpsl
rcll
pop
dec
pop
sti
xchg
sbb
in
andl
rcrb
xor
frstor
cmpsl
and
cmp
sbbl
adc
das
lock
lods
rcl
in
add
out
mov
jg
addr16
jle
int
add
jae
bound
mov
push
xor
test
test
and
in
pop
mov
jg
or
jecxz
mov
ss
inc
out
inc
cltd
leave
mov
or
movsl
shrl
pop
movups
test
scas
xor
lods
scas
js
iret
call
jnp
push
psubusb
jns
xor
test
je
or
call
adcb
hlt
stos
test
aam
add
lea
mov
add
rol
push
mov
outsl
dec
mov
mov
push
insb
xchg
call
push
inc
xchg
movsl
gs
jecxz
push
pop
adc
xor
cmp
cmp
inc
mov
jnp
mov
push
cmp
shll
popf
pop
inc
mov
bound
neg
or
dec
fmull
loopne
pop
mov
stc
cli
adc
xchg
outsb
mov
sub
xchg
iret
xchg
inc
outsb
addr16
push
mov
add
push
pop
add
mov
lock
repnz
jne
mov
push
sub
mov
or
out
mov
sub
lods
outsb
sar
inc
rclb
xor
jnp
int
cltd
or
and
add
cmp
stos
test
je
negl
imulb
inc
cli
add
outsl
lock
and
pop
insb
aad
sbb
xchg
xchg
sbb
rorl
gs
push
mov
and
stc
fs
mov
arpl
xor
popa
testb
insl
xor
ret
fs
and
xchg
lods
jnp
cli
mov
inc
dec
adc
lods
lods
adc
nop
and
stos
cmpsb
stos
stos
push
bound
push
nop
enter
jb
pop
test
stos
inc
outsb
adc
outsl
adc
ds
cmc
popa
out
sbb
adc
ja
mov
outsl
inc
and
mov
imul
adc
sbb
or
pop
lds
pushf
loop
xor
jl
jns
push
aas
cwtl
push
jge
lea
mov
outsb
and
leave
push
and
jle
xchg
or
in
scas
addr16
mov
adc
inc
mov
ret
jle
add
mov
imul
fwait
inc
cmp
xor
jecxz
div
push
shrb
popf
loope
mov
pushf
dec
inc
mov
jmp
and
repnz
fsubs
add
xor
leave
es
rcrb
mov
mov
dec
mov
sbb
stc
scas
pop
sti
out
aam
xchg
addr16
or
mov
insb
fcoml
jne
adc
lahf
and
out
push
xor
mov
es
fldt
scas
sbbl
addb
inc
gs
insl
sbb
xor
in
mov
sbb
or
push
std
add
xor
adc
decb
insb
xchg
and
push
xor
lret
inc
nop
push
sahf
pushf
mov
das
lods
fcompl
jmp
mov
out
mov
mov
jo
ror
fists
adc
addr16
sbb
pop
dec
jo
or
nop
orl
in
aam
cltd
push
jmp
aaa
ficompl
push
aaa
call
sbb
mov
cmp
add
cwtl
in
jl
out
add
xchg
push
mov
xor
xchg
dec
xor
pushf
sbb
cmc
out
jns
jecxz
pusha
adc
cld
cmp
lock
mov
push
and
lods
add
dec
and
cld
hlt
scas
fcoms
mov
mov
mov
stc
dec
cli
lret
in
cltd
gs
pop
leave
pop
mov
mov
and
clc
not
jg
daa
fsubs
negb
arpl
jae
adc
enter
jg
xor
adc
cld
dec
pusha
cmpsl
adc
mov
ret
dec
test
xchg
sub
sub
cmp
insl
mov
mov
and
aam
fwait
inc
test
nop
pop
andb
test
lock
sub
pop
xor
push
fcoms
mov
fs
xchg
outsb
test
sbb
fbld
pop
les
insb
dec
mov
cmpsl
test
mov
out
data16
pusha
add
pop
cmp
lea
jne
imul
sahf
push
scas
cmp
filds
rorl
mov
mov
and
inc
xchg
nop
sub
jmp
pop
xor
adc
or
std
stc
repz
nop
inc
add
addr16
add
int3
inc
mov
daa
into
cmp
mov
int
add
shlb
xchg
sub
push
jne
fimull
mov
cmp
or
adc
mov
or
adc
mov
adc
dec
clc
push
pop
jae
inc
int3
cli
outsl
mov
or
jno
cmovo
jbe
sti
and
sub
or
xor
xor
xchg
cmove
aam
add
std
dec
enter
into
cmp
test
outsb
sub
mov
insb
mov
call
push
aam
js
add
ljmp
pop
sbb
ret
pop
lods
mov
add
sub
mov
mov
ret
jne
xchg
decl
lcall
rcr
les
xchg
pop
lret
punpckhbw
loopne
les
cli
push
iret
gs
jp
mov
ret
testb
mov
push
mov
adc
pusha
mov
inc
lods
inc
sbb
movsb
add
mov
sub
loope
in
xchg
mov
pusha
ja
xchg
fcomps
pop
adc
outsl
dec
cmp
cmp
mov
out
sbb
add
pop
mov
cmpsb
pusha
lcall
mov
pop
rorl
dec
bnd
insl
jnp
cli
and
xlat
mov
sub
ficomps
movsb
daa
xchg
aam
fprem1
lea
clc
repnz
frstor
stc
xchg
jno
mov
pop
fwait
pop
in
push
mov
mov
out
test
movsl
cmpsl
dec
adc
jmp
jl
gs
inc
mov
idiv
dec
sbb
adc
adcb
jge,pn
adc
push
clc
cltd
movsb
pop
cmp
dec
mov
jmp
cmc
inc
jge
add
sahf
fs
mov
cltd
out
mov
pushf
rol
insb
sahf
pop
in
adc
lock
mov
push
and
mov
out
in
sarb
xchg
push
es
loopne
pusha
xchg
leave
fldt
pop
bound
push
push
cwtl
push
aad
pop
inc
enter
rolb
xchg
dec
lahf
dec
fwait
aad
testb
test
pop
fs
mov
adc
mov
xchg
fldl
sub
testb
sub
adc
data16
dec
sarb
inc
stos
pop
aaa
and
cltd
repz
mov
dec
dec
bound
shrb
cmc
mov
pushf
inc
inc
adc
lods
dec
inc
or
sub
push
clc
clc
fsubs
inc
movzwl
insb
or
and
jmp
loop
sbb
pop
imul
int3
xor
add
fstpl
xchg
dec
sbb
aaa
cmovae
dec
mov
pop
sub
and
inc
fstpl
daa
xchg
lcall
out
xor
push
adc
mov
cli
imul
addr16
stc
out
aas
push
jo
and
test
pop
scas
xchg
mov
repnz
repz
and
lds
mov
dec
and
xchg
call
pop
fmul
adcl
mov
adc
dec
movsl
adc
std
sub
jo
pop
mov
test
iret
sub
shr
out
repz
test
xchg
mov
addr16
sbbl
sub
cmpsb
add
fs
add
push
mov
mov
aad
dec
shlb
enter
lret
push
adc
in
sahf
dec
mov
pop
mov
dec
int3
mov
xchg
pop
ficoms
aam
stc
mov
bound
push
sarb
mov
es
std
jo
mov
in
roll
mov
std
fildll
cmpsb
jbe
xchg
cmpsl
push
xchg
stos
push
pop
sub
mov
lcall
and
xchg
addr16
shr
mov
and
gs
mov
add
mov
inc
movl
nop
ret
in
jge
int3
pop
hlt
call
xor
outsb
int3
fwait
mov
cmpsb
mov
aaa
imul
stc
adc
ret
rorl
pop
jno
rclb
cwtl
clc
xchg
inc
gs
xchg
sahf
push
cltd
add
dec
ja
jl
and
lret
stc
fwait
cwtl
insb
push
mov
push
dec
jae
xchg
dec
inc
or
ficoms
bound
lods
das
pusha
mov
sbb
cli
mov
sub
insl
or
dec
sub
in
cwtl
fisubrl
imul
movups
stos
push
add
in
daa
ror
sub
mov
lock
jo
movsb
int3
test
lods
sti
loop
adc
and
dec
pop
mov
nop
testl
fcmove
rcll
repnz
loope
pop
test
dec
add
add
xor
mov
das
pushf
mov
mov
jl
jl
fisttpl
pop
and
sub
je
outsb
jle
ja
jnp
into
pop
lods
movsb
aam
shll
dec
lret
and
mov
cmovns
jecxz
repz
dec
fimuls
xchg
cmp
in
icebp
jmp
imul
repz
stos
inc
sub
adc
jae
xor
xor
jne
mov
push
mov
int
aad
stos
pop
dec
sub
pop
pusha
divl
cwtl
push
and
xchg
dec
cmp
dec
dec
mov
lds
rcrl
mov
daa
out
push
cld
or
mov
pop
scas
jns
mov
mov
aam
shll
loopne
mov
lret
xchg
dec
stc
adc
jge
xlat
cmp
outsl
pop
out
inc
jno
hlt
xorl
xchg
mov
das
out
test
nop
inc
ret
adc
cmp
out
bound
fisttpll
and
aam
je
fwait
arpl
push
sub
out
pusha
mov
mov
push
push
outsb
push
ja
mov
and
into
pop
sbb
or
addr16
adc
stos
aas
fmulp
sbbl
andl
or
hlt
jmp
lea
aam
push
cld
mov
js,pn
daa
or
adc
push
add
fiaddl
inc
jb
fldt
fldt
inc
mov
adc
xchg
pop
and
enter
iret
out
mov
dec
pop
fwait
out
lock
sub
sub
test
fsubl
pop
mov
popf
or
sub
mov
or
mov
push
movsl
jmp
das
pop
lret
adc
lret
ja
push
mov
imul
jae
cmp
fmuls
adc
cmp
jp
lea
sub
pop
sub
or
push
jecxz
ja
push
push
jle
stc
jbe
mov
inc
test
pop
lock
mov
emms
in
cmpsl
popa
jo
inc
fbstp
xchg
add
test
adc
insb
inc
gs
cmpb
hlt
mov
lods
pop
jmp
push
std
scas
in
stc
pcmpeqd
mov
daa
popf
ud1
xchg
pusha
outsb
dec
mov
cli
mov
inc
inc
and
push
stos
mov
or
or
xor
jns
stc
jno
fsubl
test
sub
gs
jbe
adc
scas
loope
fs
push
cmpsb
lea
or
lods
mov
push
or
push
lahf
adc
mov
pop
add
and
mov
lret
xlat
add
add
or
sbb
sub
lahf
cli
push
push
sbb
mov
jbe
push
ljmp
xchg
rorb
aad
mov
loope
cmp
pop
mov
add
add
jmp
adc
pushf
test
pushl
daa
fisubrl
nop
insl
adc
int3
lret
add
xchg
test
inc
add
sub
nop
rorb
mov
negl
leave
scas
inc
xchg
adc
fwait
mov
negl
mov
push
scas
xchg
mov
scas
push
icebp
mov
rcrl
sub
aaa
xchg
in
xchg
js
scas
sbb
out
ds
and
mov
sub
cmpsl
jns
iret
stos
clc
mov
fdivr
push
ljmp
add
es
jecxz
mov
sub
push
fimull
mov
mov
cltd
lds
insb
adcb
push
fdivrl
sub
inc
cmp
rorl
xor
push
inc
fildl
aas
xor
xchg
push
xor
out
push
lcall
mov
imull
mov
and
fidivrs
jno
fldl
inc
mov
mov
xlat
xor
dec
imul
das
imul
cli
xchg
lret
or
stos
pop
xchg
je
cmp
mov
mov
jns
mov
fdivrl
dec
cmp
fs
imul
fdivrl
ss
adc
les
jno
jae
and
jge
bound
jl
fwait
push
xor
outsb
push
jle
notb
xchg
xor
stos
dec
nop
lahf
mov
cltd
fimull
and
mov
fisttpll
xor
lahf
test
fsubp
push
adc
dec
aad
mov
jns
in
fucom
push
ss
or
pop
pop
outsl
jle
jo
pop
ds
pop
add
xchg
inc
insl
push
xor
cmp
xchg
push
icebp
push
out
cmp
test
dec
sbb
aas
xchg
xchg
push
loopne
movsb
jb
push
aas
mov
adc
pop
popa
push
cmpsb
and
jp
or
mov
xor
and
mov
cli
mov
cmp
out
sub
mov
out
mov
jge
int3
lock
repz
xchg
jcxz
js
ret
mov
sub
cmp
test
aad
mov
and
setl
in
pop
pop
movsb
jae
lods
dec
std
icebp
movsb
pop
ret
fisubl
clc
sub
xor
xor
out
popa
call
jae
mov
mov
clc
mov
add
sub
jae
pop
mov
push
push
mov
sub
fiaddl
lds
cmp
out
adc
dec
pop
xchg
sarb
inc
xchg
and
mov
add
fstps
addr16
es
popf
dec
dec
xchg
dec
mov
imul
jl
mov
inc
mov
daa
call
jge
push
push
mov
jp
xchg
ds
cli
adc
pop
je
jl
mov
add
jp
push
xchg
shrl
sub
xchg
xchg
dec
jno
sbb
jbe
push
fdivrl
cmc
out
xor
xchg
adc
outsb
enter
dec
idiv
imul
and
imul
nop
mov
or
cmpsl
arpl
inc
sarb
fisttpll
prefetch
and
sbb
in
push
xchg
adc
inc
adc
cmpsb
push
in
loope
addr16
and
ss
inc
pop
lea
dec
aas
xor
xchg
inc
mov
fsubrs
xchg
xchg
cmp
sbb
fcmovbe
dec
pop
popf
ss
stos
dec
pop
mov
xchg
fildl
shrb
fsub
sti
cli
jmp
fisttps
imul
leave
push
mov
enter
pop
adc
add
and
or
and
inc
outsb
jle
pop
cmp
mov
fcmovnbe
mov
enter
fstps
mov
aaa
jno
rcrl
push
lret
in
ret
mov
dec
push
adcl
imul
pop
jae
movsb
jne
out
push
cli
push
cmpl
sbb
jo
add
dec
stos
push
int3
nop
fs
add
jae
cmpl
xor
mov
icebp
add
pop
xchg
out
int
and
add
lds
addr16
fwait
xor
sahf
or
cmp
inc
inc
into
imul
push
lahf
pop
fisttpl
mov
cmp
xor
mov
inc
push
popa
mov
pushf
enter
inc
shlb
mov
mulb
mov
int3
ret
movsl
xchg
es
jnp
pop
call
add
inc
pop
dec
and
dec
push
adc
scas
out
and
dec
mov
sub
inc
loop
in
jno
push
into
scas
or
loopne
mov
sub
rorl
insb
mov
mov
xchg
pop
pop
sbb
in
sbb
and
cmp
dec
in
pop
dec
mov
hlt
xor
sarl
jne
nop
jge
sbb
gs
xchg
mov
iret
mov
stos
jbe
pop
and
adc
cmp
or
adc
adc
jg
pop
in
nop
sahf
je
push
shll
scas
jecxz
popl
and
jne
inc
and
sub
movsb
add
cmp
rcrb
inc
pop
jp
mov
fstl
insl
andb
dec
ss
sbb
mov
dec
movsb
shlb
cld
pop
xchg
jge
xor
xchg
cmpsb
jmp
mov
adc
call
push
outsb
sub
cmp
sti
imul
sbb
add
adc
mov
dec
nop
sub
dec
sbb
sbb
shrd
inc
sbb
sahf
sub
xchg
or
scas
imul
movsb
out
inc
insb
test
movsb
mov
cli
imull
loop
call
mov
call
push
fnsetpm(287
cwtl
out
pop
jno
cmp
fs
pop
ss
xor
cmp
mov
mov
mov
push
jne
cmpsb
in
pop
xchg
es
xchg
insl
jge
shlb
inc
stc
mov
mov
das
xchg
in
fmull
outsl
enter
mov
enter
push
lods
mul
push
std
cmc
dec
ret
push
mov
std
pop
dec
jge
mov
xchg
arpl
mov
loop
add
mull
add
rorl
fcoml
cmp
loopne
pusha
cmp
call
sub
xor
xor
jge
inc
inc
mov
mov
daa
and
jmp
xor
mov
and
mov
adc
je
int3
or
mov
xchg
cmp
xor
jns
test
ret
mov
ret
jge
jae
fdivrp
mov
fmulp
xchg
insb
fadds
clc
lods
icebp
rorl
cltd
loopne
cmp
add
and
mov
mov
jae
mov
add
test
adc
mov
mov
adc
sbb
ja
jno
add
stc
jne
imul
and
mov
mov
test
mov
imul
jnp
es
mov
sbb
jne
shll
xlat
mov
iret
pusha
notl
std
daa
sub
sbb
test
mov
cmc
paddq
pushf
sub
adc
push
subl
fistpll
movl
mov
lea
gs
ljmp
int3
sbb
movsl
sub
pop
add
test
int
cmp
and
addr16
aad
mov
or
cmp
loopne
jno
jno
mov
or
popa
jl
sub
or
insb
fdivl
nop
xor
addl
pop
xor
mov
outsb
dec
rcrl
add
cs
push
fidivs
xchg
es
mov
in
pop
in
xchg
test
adc
lcall
mov
jge
pop
or
out
jne
push
ljmp
movq
cmp
and
mov
fisttpl
adc
or
mov
dec
cmpsb
xchg
pop
inc
push
mov
leave
clc
addr16
call
or
mov
cli
cli
jb
aad
rcl
icebp
mov
jp
mov
inc
push
mov
test
enter
nop
ficoms
sbb
push
jmp
ss
pop
adcb
pop
scas
pop
mov
jmp
jne
out
mov
pop
outsl
cmc
jl
ret
loopne
int3
fwait
mov
rcrl
dec
loope
push
inc
sbb
add
jb
pushl
mov
push
jg
jae
push
add
add
shlb
cmp
int3
push
movl
negb
xchg
aaa
out
movsb
cs
cmp
xchg
testb
mov
out
sbb
jmp
xor
adc
push
xor
dec
lods
ficoml
scas
jl
jmp
mov
imul
jg
loope
xchg
test
mov
daa
insl
je
aam
loope
scas
lods
push
cli
aam
or
cmpsb
iret
enter
mov
call
hlt
lods
jne
mov
cmpl
cmp
fdivrs
dec
mov
adc
test
imul
add
popf
xchg
xchg
xlat
frstor
xchg
lcall
push
mov
or
orb
rcrb
fstpt
mov
push
cs
inc
stos
mov
lret
test
rclb
mov
inc
bnd
adc
dec
outsb
nop
clc
ret
sbb
int3
test
ljmp
insb
stos
movsl
and
movsb
jmp
daa
loopne
jecxz
inc
in
mov
sbb
scas
cmp
bnd
mov
out
sbb
mov
push
cmp
jae
add
scas
inc
inc
les
cmp
jns
add
cmp
jmp
sbb
jnp
stos
inc
add
in
pop
lret
lret
adc
and
pop
stc
add
adc
mov
cmp
sti
adc
adc
sbb
gs
xchg
xchg
adc
dec
ljmp
mov
ds
push
dec
mov
shlb
pop
pop
jge
lret
scas
mov
je
iret
adc
rol
aas
mull
insl
sub
pop
sub
mov
repnz
xchg
stc
arpl
inc
movsl
out
std
lret
xchg
adc
inc
lods
jno
stos
sub
sub
mov
dec
push
pusha
xor
xchg
mov
jbe
je
mov
dec
xchg
aas
lret
add
xor
mov
adc
add
mov
pop
push
adc
out
into
int3
jb
mov
pop
les
sub
add
jo
hlt
data16
push
adc
into
push
inc
imul
pop
adc
lds
out
pop
mov
ss
es
out
fucom
bound
mov
add
rclb
inc
jns
sub
fwait
xchg
out
cmp
mov
adc
jnp
jnp
dec
shl
sub
hlt
jl
cmp
and
insb
pop
cld
dec
mov
int
sub
in
jmp
cld
lcall
and
pop
add
and
jae
int3
push
js
sub
inc
fnstenv
pop
or
dec
push
test
aam
xchg
dec
jge
orl
loope
xchg
sbb
pop
push
push
cs
addr16
mov
pop
mov
adc
jp
std
arpl
not
pop
cmp
mov
aam
in
les
jne
test
js
push
add
call
sbb
pop
mov
loopne
test
push
arpl
mov
fimuls
jmp
cmpl
ljmp
ds
call
mov
pop
mov
aad
ficompl
mov
xchg
out
inc
stos
and
aaa
imulb
xor
and
into
mov
outsl
int
mov
add
repz
inc
addr16
lock
orb
dec
push
cmp
andl
int3
cmc
stos
add
dec
fimull
arpl
into
divb
es
add
lret
sub
ds
mov
adc
hlt
ds
call
and
ds
jge
lock
add
in
jl
jo
std
dec
js
rcrb
jecxz
popa
push
push
imul
in
and
and
xchg
xchg
enter
inc
inc
inc
lea
shrb
inc
mov
loop
fs
aam
xchg
mov
fs
in
pop
jmp
fs
fcmovnu
ja
mov
imul
in
mov
hlt
cld
sub
cwtl
sub
aam
cmp
icebp
mov
loope
dec
xor
sbb
push
and
cwtl
dec
sbbl
ret
inc
shlb
cmp
lcall
xor
or
jns
jecxz
jl
inc
pop
pop
add
mov
leave
mov
dec
scas
fucomip
frstor
push
xchg
mov
add
push
push
jg
popa
loope
adc
inc
and
sub
xchg
outsl
pop
jmp
add
ljmp
jge
pusha
stc
fmull
cli
lods
push
test
fistpl
or
cltd
xchg
out
pop
pop
push
test
pop
lcall
rcll
ljmp
add
outsl
pop
mov
dec
fisttpll
loopne
das
and
and
xchg
stc
jle
mov
lock
inc
push
clc
sbb
incb
dec
sub
and
je
fsubrs
mov
push
jle
mov
stc
push
dec
sbb
les
in
xor
rclb
shll
dec
loop
cmpsl
nop
fildl
cmp
lods
int
push
les
test
mov
sub
inc
ret
mov
movsl
xor
xchg
jmp
in
push
pop
or
in
cs
cmp
fldt
push
cltd
xor
movsl
int
jbe
sub
cli
cltd
mov
sub
sub
lods
icebp
ret
push
mov
insb
repz
ds
jo
movsl
adc
adc
aad
lret
jb
push
pop
adc
jns
xchg
movsl
pusha
inc
dec
sbbl
mov
repnz
fisubrl
cltd
cmp
or
mov
add
sbb
jmp
data16
cli
mov
hlt
mov
aam
or
scas
pop
push
ds
shrl
inc
pop
shll
inc
inc
inc
popa
testl
iret
mov
mov
or
test
push
jo
insb
inc
mov
movsl
movl
mov
sbb
fidivs
mov
loopne
pop
add
repz
jbe
or
cltd
sbb
xchg
data16
inc
stos
lret
loopne
sbb
pop
enter
xor
sbbl
xor
out
leave
int3
adc
lock
dec
pop
fld
popf
cmpsl
add
negl
rep
loop
stos
roll
jns
negb
mov
adc
pop
pop
push
loop
fcoms
stos
lcall
lds
adc
decb
sbb
in
mov
addr16
xor
cmp
sti
dec
setle
inc
mov
imul
mov
rolb
repz
sahf
inc
jns
inc
outsl
mov
gs
call
mov
and
pushf
mov
aam
inc
mov
jle
addr16
mov
and
add
inc
and
push
jne
ja
sbb
insl
push
and
xchg
insl
js
mov
mov
add
mov
repnz
mov
mov
imul
je
inc
mov
lea
cmp
lds
sti
xchg
mov
pushl
pusha
in
jne
dec
cmp
mov
or
pop
data16
push
adc
pop
pusha
cmp
and
mov
push
dec
jp
add
out
cmpsb
dec
stos
ffree
xlat
push
inc
lods
mov
pop
outsb
cmpsb
push
cmp
add
dec
push
cmp
inc
add
jns
sarb
cmp
push
addr16
imul
loop
push
hlt
push
push
and
pop
jle
jge
loop
loop
add
std
mov
lock
call
mov
fcompl
push
incb
in
or
cmp
jp
or
fisubs
imul
push
lds
jl
shrb
enter
out
enter
icebp
cmp
xchg
loop
loopne
mov
push
push
cmp
imul
mov
cmp
jbe
lea
imul
cltd
push
mov
movsl
jg
inc
adc
mov
fsubs
inc
movsl
mov
dec
dec
dec
jb
inc
jmp
jb
push
mov
sub
bound
scas
jecxz
or
xchg
dec
push
lret
pop
test
in
es
cmp
test
bound
inc
das
aaa
leave
xchg
lods
jno
call
stc
push
cmc
push
aas
xchg
jp
rclb
into
cmp
sbb
dec
or
pop
cmpsb
clc
xlat
cmp
xchg
push
push
ret
cmc
aas
and
iret
inc
jne
adc
out
add
stc
mov
daa
popa
mov
sbb
xchg
jno
or
sub
mov
sbb
sbb
inc
sub
mov
jae
or
or
xor
add
cltd
mov
ret
movsb
xchg
mov
lcall
ror
mov
shlb
pushf
into
jno
scas
push
leave
imul
add
mov
cld
fmul
mov
andl
sarb
jne
mov
shlb
addl
rclb
pop
mov
movsl
dec
sbb
pop
daa
add
lret
mov
nop
or
icebp
test
iret
xor
mov
nop
scas
jge
and
inc
movsb
adc
cmp
push
jns
js
xlat
cmp
dec
and
cmp
into
sub
aad
out
sbb
imul
fprem1
and
sub
push
inc
sti
xchg
push
cs
icebp
cli
pop
jne
push
lods
ja
jmp
bound
xchg
addr16
push
push
adc
and
fimuls
jg
hlt
popf
into
gs
cmpsl
sahf
mov
inc
and
mov
stos
cmp
clc
push
outsl
cmp
stc
inc
pop
pushf
enterw
aaa
inc
call
mov
in
xlat
pop
aas
cmpsl
jb
xchg
and
push
add
test
or
test
call
add
adcb
ret
inc
push
ficompl
mov
les
dec
xor
jle
imull
and
pop
scas
pop
lret
cmp
and
hlt
or
nop
lret
pushf
lcall
mov
pop
mov
loop
sub
mov
mov
pop
fdivl
pop
mov
inc
lahf
fwait
loop
sub
push
imul
inc
jo
scas
popf
shr
clc
xchg
inc
inc
xchg
and
into
xor
clc
adc
add
shld
pop
push
and
out
add
iret
mov
and
jp
jl
push
mov
mov
mov
jae
ret
test
int3
xor
outsb
inc
sbb
out
imul
or
or
adc
inc
mov
mov
pfnacc
mov
in
sbb
push
push
adc
adc
adc
dec
repz
in
sub
popf
jp
push
and
lret
loopne
sub
mov
out
outsl
mov
lods
adc
push
outsb
jnp
es
mov
jbe
popa
stos
or
or
cmp
or
inc
es
addr16
mov
rorb
mov
inc
pop
pop
sbb
xchg
pop
mov
push
mov
mov
mov
xchg
cltd
mov
fmuls
fldl
lods
das
add
inc
pop
fisubs
xchg
lods
insb
cs
cmp
sub
push
sbbl
jne
lahf
and
dec
mov
jo
cld
mov
sbb
mov
xchg
xchg
dec
stos
add
mov
loop
sarb
insl
push
cmp
and
dec
dec
add
cmp
inc
sub
aas
test
jp
in
mov
pop
cmpsb
mov
mov
rdpmc
mov
ja
sahf
cld
fnstsw
xor
lcall
mov
push
inc
fldt
mov
jle
loopne
sub
mov
lret
aaa
jecxz
call
and
lods
out
ret
dec
pop
and
std
and
add
mov
mov
xor
pand
jge
std
mov
cltd
ja
or
shlb
adc
ss
jne
test
sbbl
xchg
insl
cld
stc
clc
push
lods
scas
data16
pop
jle
rcrl
sub
mov
cmp
imul
das
lret
outsb
sub
mov
mov
push
lods
jmp
inc
imul
aad
pop
dec
or
pop
popa
pop
je
cmp
je
adc
daa
pop
or
dec
ret
push
mov
lea
mov
notl
stos
push
leave
mov
std
sub
and
mov
adc
aas
data16
stos
or
cmp
mov
pusha
das
mov
leave
div
push
mov
push
jge
mov
iret
jnp
pusha
mov
loop
loope
or
loope
addl
mov
add
ja
sbb
or
inc
pop
lcall
iret
bound
xchg
lods
jg
aaa
lcall
cwtl
and
sahf
jmp
xor
mov
push
jmp
mov
scas
fmul
xchg
mov
cld
imul
fistpl
popa
imul
ds
cltd
jl
test
mov
inc
aam
js
mov
xor
xorb
or
push
mov
aam
xchg
mov
pushf
mov
lock
add
ret
shlb
inc
aad
adcb
and
loop
jb
lds
orl
mov
cli
lock
hlt
sbb
dec
lods
movsb
mov
xchg
push
mull
in
add
push
rol
and
lods
jmp
stos
push
es
out
inc
cmp
in
mov
std
lahf
test
addr16
push
xchg
out
xchg
mov
xlat
in
dec
mov
push
push
dec
xchg
std
call
sub
xchg
jecxz
sub
mov
scas
sub
xchg
dec
in
shl
push
mov
test
push
mov
aam
lcall
mov
rcrb
std
mov
aam
movb
cvttps2pi
cmc
daa
xor
add
dec
push
movsb
clc
xchg
lds
cmp
negb
mov
xor
sti
xor
or
cmp
cltd
testl
or
lods
mov
adc
rcrl
lret
scas
mov
test
subl
mov
loopne
enter
fnstenv
mov
or
push
inc
pop
scas
cvtdq2ps
out
pop
cmp
jmp
add
xchg
test
adc
xchg
subb
in
or
iret
hlt
popa
mov
aaa
inc
add
pop
cs
inc
fdivr
js
inc
mov
in
test
hlt
cmc
fstpl
xchg
jne
pop
jo
mov
add
sbb
pop
pushf
xor
push
test
inc
cmp
mov
push
mov
jno
movsl
xorb
jp
dec
jle
je
cltd
mov
pop
aad
std
inc
mov
in
inc
je
jle
aaa
jmp
xor
jbe
lods
mov
les
push
aaa
jmp
sbb
into
popa
push
bound
fwait
add
in
aad
dec
stos
dec
inc
mov
lahf
je
in
cmpsl
cwtl
call
jb
movsb
sub
int3
iret
cltd
mov
testl
jnp
or
jmp
in
mov
pop
xchg
lcall
pop
mov
mov
add
mov
rcrb
xlat
xchg
pop
rol
pop
enter
add
mov
sbb
add
mov
inc
lcall
jl
jmp
inc
push
icebp
jp
inc
rolb
sti
insb
stos
jae
jle
jno
mov
xor
movsl
mov
lcall
aad
or
movsb
xchg
insl
in
scas
sbb
nop
daa
shrb
mov
and
rcrl
inc
cmp
aad
int3
lods
and
fiadds
or
insb
pop
sbb
mov
push
add
cmp
aad
xchg
sub
sbb
mov
push
mov
imul
inc
insl
mov
jmp
adc
jg
loopne
or
call
push
mov
sahf
pop
fdiv
adc
mov
pop
mov
cmp
movsl
outsl
add
ja
sub
xor
pop
xor
adc
cmp
cwtl
push
cmp
dec
test
insb
aaa
jns
xor
push
lret
jg
outsb
inc
or
test
mov
sbb
mov
push
cmpsb
jp
roll
push
inc
jnp
and
jnp
dec
sub
sahf
mov
inc
mov
and
test
sbbb
scas
mov
lds
into
stos
shrl
popf
jo
ret
push
mov
push
mov
lea
leave
add
jo
lods
pop
sbb
mov
test
mov
cmp
jne
inc
daa
mov
cltd
inc
jl
mov
push
mov
mov
roll
xor
ss
enter
inc
fsubrl
inc
sbb
xchg
mov
scas
inc
lods
mov
mov
dec
subb
movsb
sbb
outsb
into
or
lret
xor
cmovl
add
push
fnstenv
stos
inc
lret
sarl
loope
push
push
enter
or
jg
xchg
push
iret
mov
sbb
fnstsw
jle
lret
cmp
add
in
jge
xchg
sbb
adc
jne
in
sbb
jb
xchg
mov
push
into
repz
inc
xor
mov
push
sub
int
gs
mov
dec
scas
lret
or
push
mov
push
jl
arpl
test
lds
aas
add
sub
dec
xchg
mov
pop
addr16
mov
in
call
pop
cmpsl
inc
ret
lea
push
jmp
or
ror
sbbb
cmp
push
push
dec
jno
and
int3
lods
inc
mov
pop
xchg
cmp
and
add
cmp
call
aam
xchg
adc
ja
rcrl
test
add
test
js
mov
pop
cmpsb
jne
leave
mov
int
fwait
movsl
xchg
xchg
xchg
stos
sub
cmp
adc
je
or
jbe
mov
addl
rorl
cmpsb
xor
pop
ret
adc
push
mov
bound
cmc
mov
xor
add
mov
pusha
push
movsl
jmp
and
xchg
push
out
loope
addr16
rclb
mov
mov
xor
shrw
jne
mov
jmp
or
mov
sti
mov
xor
aas
adc
inc
or
or
mov
out
out
imull
fidivs
test
sti
mov
shlb
push
cmp
inc
adc
push
xlat
and
inc
ljmp
ljmp
dec
push
out
cmpsb
mov
xchg
push
ja
ja
or
fstl
inc
cmp
stos
inc
fcomps
cs
je
sub
jno
cmove
inc
jno
outsb
stc
sub
xchg
xchg
add
jo
movsl
add
arpl
daa
xchg
adc
mov
inc
xchg
pop
or
mov
pop
data16
xchg
xchg
lods
gs
adc
adc
xchg
lret
xor
jmp
xchg
mov
add
xchg
or
aas
push
clc
das
lret
cs
push
pop
and
push
loop
daa
add
adc
lret
push
add
xor
adc
and
loop
insl
repz
and
int3
push
sti
cmpsl
push
faddl
push
in
fcomps
jb
inc
shl
aad
roll
cld
aad
mov
in
or
aaa
enter
das
pushf
xorl
fstps
sbb
repnz
and
and
inc
and
mov
imul
mov
les
sub
lock
into
xor
adc
in
mov
xor
inc
jl
or
pushf
outsl
bound
push
in
into
jge
pushf
jne
adc
loop
jnp
push
add
testb
cli
and
outsb
jae
cmp
fmull
ds
xor
loopne
mov
das
mov
sub
adc
pop
cmp
aas
inc
rcrb
jge
cld
xchg
dec
cmp
hlt
push
insb
pop
pop
shll
jnp
mov
adcb
cmp
clc
mov
ret
jb
cs
cmp
push
xor
xchg
outsb
iret
xchg
scas
xor
jno
cwtl
aam
out
add
sahf
daa
into
pop
icebp
push
ss
cmovbe
xchg
mov
inc
xchg
cmpsl
and
in
dec
cmp
push
inc
sti
pop
daa
sbbl
in
adc
lret
in
xchg
fstpl
adcl
mov
into
lcall
scas
inc
fmulp
mov
xor
adc
fwait
mov
cltd
clc
push
or
and
mov
jg
jl
jb
aad
lods
or
ds
rclb
cmp
jno
dec
mov
push
adc
movsb
adc
inc
mov
test
xor
notb
xor
xor
sahf
hlt
or
cwtl
into
jg
nop
dec
inc
sub
and
stos
movsl
adc
mov
cltd
out
and
dec
mov
mov
in
xchg
lcall
jge
push
jl
jmp
xchg
push
jnp
jae
push
sarb
lahf
adc
jne
aam
addr16
aaa
dec
mov
pop
nop
dec
pop
stc
shrb
pop
mov
cmpsl
sub
or
popa
fadds
mov
xchg
aas
inc
inc
inc
cltd
xor
test
pop
ja
pop
ror
clc
negb
clc
scas
inc
enter
lds
cmc
push
repz
clc
jl
jmp
in
mov
es
cs
or
jmp
imul
int
sbb
test
insl
nop
pop
sbb
add
adc
mov
pop
lods
mov
roll
sbb
rol
sbb
and
xlat
adc
mov
adc
mulb
test
adc
mov
call
popa
cwtl
sub
jl
out
in
arpl
jae
js
pop
dec
ficomps
or
imul
mov
vmovupd
jbe
lock
mov
jo
push
enter
dec
push
mov
loope
pushf
mov
stos
mov
mov
xlat
mov
lds
push
dec
cltd
inc
mov
mov
call
mov
popf
cmp
dec
push
icebp
or
jne
subl
jae
shr
pop
data16
add
add
mov
out
cmp
mov
mov
lret
xor
dec
push
cmp
mov
loop
push
in
pop
jns
adc
idiv
add
ret
fs
shlb
and
std
sahf
push
push
cmp
push
arpl
mov
sarb
mov
imull
mull
stos
mov
dec
push
vmaxpd
push
push
or
sub
mov
add
sbb
jmp
sub
cltd
inc
xor
mov
add
dec
cli
ja
shll
add
mov
adc
or
sub
inc
or
cwtl
mov
push
mov
test
and
outsb
or
or
lock
int3
add
fucom
xchg
mov
mov
data16
jp
push
into
pop
or
cmp
sahf
je
xlat
cwtl
rcll
adc
call
loop
ja
ja
mov
mov
mov
stos
fs
cmp
push
lret
xor
aaa
aaa
shl
out
or
mov
cltd
jb
jns
add
sbb
add
mov
cmp
mov
sahf
or
xchg
push
popf
pop
xchg
add
push
dec
pop
xchg
jmp
ja
std
dec
sti
and
scas
sub
inc
dec
movsb
call
fwait
or
push
jge
pop
inc
scas
fwait
jmp
push
pop
iret
xchg
sbb
cltd
bound
imul
mov
ds
fs
lret
mov
insb
cmp
xor
test
pop
mov
sbb
fwait
push
clc
popa
hlt
dec
sar
push
sar
inc
ss
jle
popa
cmp
push
cmp
dec
jae
sbb
pop
mov
mov
sub
jo
push
mov
mov
movsb
xor
sub
pop
push
fwait
mov
stos
sar
inc
rol
flds
cmc
aam
mov
push
punpckldq
push
fwait
sub
int
pop
pop
lods
xor
je
push
xor
xchg
or
xchg
jnp
sub
adc
fists
or
jo
cmc
mov
into
in
adc
je
movsl
mov
push
xchg
aad
cmc
sbb
call
sub
mov
pusha
into
out
lods
inc
repz
mov
mov
mov
dec
push
push
or
xchg
adc
aaa
xchg
mov
mov
add
repz
arpl
push
inc
mov
mov
inc
mull
mov
push
pop
jmp
orl
pop
mov
int
xchg
pop
inc
sarl
pop
dec
push
imul
adc
jno
ljmp
cmp
outsb
pusha
sbb
ja
shlb
and
pop
dec
fcmovb
sbb
add
or
mov
cmp
outsl
repnz
adc
mov
enter
or
or
xor
cltd
data16
or
mov
pushf
push
test
and
psrad
pop
arpl
inc
dec
setno
inc
mov
or
icebp
imul
xlat
sub
int3
test
in
shll
pop
cmp
push
jbe
dec
daa
idiv
mov
aad
sub
xchg
push
dec
in
imul
push
repnz
or
mov
in
dec
cld
cltd
insl
lahf
ret
or
mov
subl
inc
xchg
js
inc
adc
cmp
fcom
je
rcrl
inc
mov
add
push
add
mov
dec
ficoms
je
push
and
nop
gs
pop
adc
icebp
mov
sbb
movsl
sub
mov
cld
inc
cld
xchg
mov
cmpb
mov
push
mov
inc
ljmpw
cmpsl
push
icebp
push
popa
jmp
mov
sbbb
mov
shr
pop
int3
adc
inc
aas
sbb
xorl
fnsave
jnp
rcrb
ds
inc
movl
adc
test
push
dec
mov
leave
fwait
jle
adc
aam
add
mov
cmpl
xor
adc
pop
test
fiadds
mov
jo
test
sti
cmpsb
andb
xchg
add
scas
repnz
and
jbe
scas
sbb
popf
bound
std
test
repz
jecxz
push
scas
test
outsl
les
aaa
mov
clc
pushf
aaa
sarl
sbb
add
mov
mov
mov
imul
clc
imul
test
dec
bound
cli
inc
jmp
test
iret
cmp
mov
es
popf
mov
pop
pop
inc
jl
dec
mov
inc
mov
ja
insl
mov
in
addr16
decl
sbb
fwait
jmp
push
mov
es
lahf
jbe
daa
mov
inc
icebp
and
pop
pause
leave
mov
inc
push
jmp
pushf
es
cmpsb
faddp
test
jb
movsl
inc
sbb
daa
mov
jmp
mov
ja
adc
insb
xchg
je
adc
lret
stos
pop
cmc
test
mov
xchg
aad
jg
inc
outsb
jnp
iret
movsl
and
dec
add
and
in
dec
jne
cwtl
xchg
cmpl
addr16
jo
cmpsl
xchg
jecxz
cmpsl
daa
mov
xlat
iret
icebp
mov
xchg
or
jnp
sub
cmp
loop
jge
ljmp
nop
fadds
dec
add
aaa
adc
mov
push
in
ss
push
or
push
mov
xor
xor
std
cs
xor
loop
jb
pop
movsb
xor
cmp
jp
loop
aad
test
lret
fdivrs
in
mov
scas
add
aam
jg
push
mov
mov
ficompl
ret
in
adc
or
flds
mov
push
push
lods
xchg
add
xchg
push
and
mov
int3
fwait
stc
dec
jg
loop
das
int
add
sahf
icebp
cwtl
mov
fsubrs
xchg
pop
jle
pushf
push
cmp
loope
cltd
test
data16
movsb
lret
cmp
mov
cmc
adc
push
mov
xchg
dec
int
add
add
arpl
xchg
sub
push
cli
in
jp
or
pop
cmp
daa
pop
fwait
push
add
mov
pop
pop
hlt
lock
pop
xor
adc
cmp
imul
out
js
pop
bound
push
cs
xchg
cmpsb
ds
rclb
jecxz
and
push
and
test
mov
xor
cmc
inc
bound
xor
in
xchg
loope
cmp
sti
sub
sbb
aad
rcrb
std
sbb
movsl
movb
addl
ljmp
or
outsl
clc
fwait
out
in
or
leave
cmpb
gs
xchg
and
and
sub
test
fists
loope
fistpl
or
sub
xor
or
mov
xchg
and
inc
sahf
or
jge
icebp
pop
xchg
jo
jbe
stos
push
lea
lahf
push
test
cmp
aam
add
ljmp
xchg
test
push
or
hlt
xchg
xor
xor
inc
cmp
add
repz
add
push
mov
into
mov
jp
mov
or
push
mov
adc
shll
loopne
mov
xchg
cli
pop
repz
mov
pop
mov
or
push
sbb
enter
aam
jbe
out
lea
mov
or
mov
mov
cwtl
add
cli
insb
adc
imul
and
pusha
sbb
sarl
out
fdivrl
pushf
lret
inc
loopne
int
or
xchg
addr16
roll
mov
scas
add
xchg
cs
ljmp
xor
and
in
fwait
loope
popf
mov
lods
in
mov
call
adc
ror
mov
mov
test
ret
aam
std
inc
xchg
or
ds
call
fimuls
nop
lods
fs
mov
loop
dec
data16
lock
sahf
mov
lock
inc
fs
inc
hlt
inc
aaa
push
cltd
pop
xor
in
xor
stos
adc
or
mov
int3
mov
repz
and
in
pcmpeqb
repz
out
clc
xchg
ja
and
mov
lock
xor
loop
iret
lret
pusha
xor
or
push
ret
lea
out
adc
outsl
popa
stc
gs
adc
ljmp
aad
fxch
ret
or
cli
or
dec
cmpsl
pusha
dec
mov
adc
pop
mov
fistl
add
jmp
sub
notl
insl
sub
addl
adc
sub
daa
sub
jge
nop
pop
xor
pop
adcl
push
inc
cmp
jbe
or
std
xchg
push
xlat
push
dec
pop
and
xchg
dec
sbbl
mov
cmp
xchg
cmpsb
in
sbb
leave
loopne
pop
shrl
pop
inc
es
fmull
stos
pop
pop
mov
jg
mov
loop
mov
mov
push
or
call
int
add
add
sti
adc
stos
xor
mov
and
and
push
pop
std
clc
fstps
fidivl
sbb
push
cmpsb
xor
mov
iret
xor
lods
sbb
add
into
outsb
adc
pushf
mov
in
test
pop
and
pop
mov
inc
jecxz
ss
mov
je
mov
negb
js
test
mov
rolb
jno
or
adc
sbb
shl
inc
hlt
adc
mov
add
xchg
jno
lahf
cmp
cmp
repz
scas
lds
cmpsb
sbb
xchg
hlt
mov
xchg
loopne
mov
mov
inc
xchg
push
and
xor
mov
sub
mov
xor
std
jge
mov
cmp
push
cld
popl
xor
hlt
mov
jmp
mov
shlb
out
data16
and
jo
mov
ret
push
das
fistps
xchg
jno
in
loopne
adc
and
pop
xchg
pusha
aad
push
sbb
in
xchg
je
add
shll
mov
pop
mov
sbb
inc
stos
mov
and
cmp
out
add
std
and
hlt
aam
lea
and
outsl
jne
adc
lods
ret
jmp
and
scas
lcall
pusha
out
leave
ret
imulb
jb
icebp
adc
sbbb
nop
add
or
push
test
mov
dec
jo
lret
inc
fwait
inc
xchg
mov
fcomps
outsl
inc
inc
mov
shll
test
xchg
mov
push
pusha
push
movb
pusha
mov
mov
jge
clc
mov
xor
sub
jno
inc
inc
sub
stc
mov
or
pop
je
pushl
sbb
push
fldpi
jbe,pn
das
jecxz
loop
aaa
mov
mov
inc
or
vunpckhps
sar
shlb
cmpb
xchg
mov
cmpb
xor
mov
movsl
out
sub
enter
push
cmp
or
call
mov
sub
lret
mov
mov
mov
loope
lods
sbb
pop
mov
adc
mov
mov
sub
sbb
xchg
mov
loopne
fimuls
cmp
inc
xor
mov
bound
pop
pushf
or
or
xchg
pusha
mov
cld
mov
push
cmp
cmc
aad
loop
data16
cmp
je
cmpsl
out
sar
repnz
dec
addr16
lock
cmpsl
dec
cmp
mov
cltd
mov
stc
inc
ret
mov
inc
xchg
mov
adc
ret
mov
loopne
scas
pop
bound
add
xlat
sbb
repz
jno
lret
jge
sbb
leave
dec
in
mov
daa
jg
xchg
in
lcall
jg
pushf
cmpsb
xlat
push
cltd
jecxz
add
xchg
pop
movsl
ret
pop
fbld
mov
arpl
lock
adc
loope
mov
inc
cwtl
mov
jp
aas
jne
out
dec
jp
daa
movsb
jmp
decl
jl
mov
call
mov
mov
or
aas
push
cmp
xchg
jae
push
decb
add
mov
and
inc
bound
pop
mov
xor
xlat
lods
mov
push
pop
ja
cmpsl
mov
test
stos
outsl
pop
int3
cmp
add
mov
mov
mov
or
push
inc
leave
push
push
cmpsb
dec
stc
inc
ljmp
xchg
sahf
ret
fiaddl
aaa
mov
mov
rolb
sbb
int
sbb
push
fldenv
dec
lret
inc
sub
sti
sbb
mov
xor
adc
push
pop
push
mull
add
daa
mov
mov
or
pushf
fldl
cmp
rcll
sbb
push
arpl
pushf
jo
cmp
rcr
add
and
dec
cmpsl
sbb
xor
hlt
sahf
dec
popf
iret
and
shl
jge
inc
xchg
int3
xchg
push
inc
cmp
add
jbe
sbb
imul
mov
mov
mov
cmc
mov
jle
inc
xlat
and
sahf
adc
lods
repz
lock
cltd
xchg
or
loopne
mov
or
ret
lock
call
sbb
fldenv
push
jbe
dec
mul
cmp
sub
dec
jae
sti
mov
aam
mov
clc
push
dec
shrb
rcrb
pusha
adc
insb
loop
in
loope
mov
fwait
jp
and
das
inc
je
in
cld
pusha
xor
add
xor
vunpckhps
lea
inc
lahf
push
and
push
bnd
call
or
sub
jbe
dec
lcall
adc
hlt
mov
and
fwait
ret
xor
fiaddl
into
orb
out
xchg
test
xchg
sub
rclb
jne
add
negb
dec
sub
add
sti
mov
push
loopne
jnp
icebp
rcr
jns
test
xor
inc
sbb
add
adc
stos
mov
aaa
loope
cwtl
addr16
xchg
hlt
jo
cli
fisttpl
js
popa
push
loope
lods
sbb
lods
xlat
xor
sbb
add
push
push
popf
add
sub
in
data16
fimuls
fisttps
xor
scas
and
xor
lret
xor
test
pop
enter
push
lock
pop
sbbb
xor
icebp
lods
loop
mov
cli
jae
mov
add
lds
dec
push
stos
jg
outsb
filds
or
xor
popf
push
and
hlt
movsb
jl
jbe
cmc
rcr
push
add
mov
jge
push
mov
jecxz
sub
repz
push
or
insb
out
pushf
fiadds
mov
out
sbb
imul
pop
rclb
or
ds
ja
popa
fwait
stc
add
scas
mov
pop
mov
jo
loope
pop
pop
hlt
jmp
inc
lret
xchg
adcb
fwait
mov
sti
pop
ja
adc
push
test
pop
inc
popa
mov
roll
stos
cmc
mov
xchg
push
faddl
push
daa
pop
inc
inc
and
cwtl
lret
pop
loopne
out
js
ret
push
dec
call
out
movsb
xchg
mov
cmp
cmp
dec
imul
lahf
add
idivb
xor
ret
lock
push
fistpll
mov
jg
out
imul
mov
mov
or
test
push
sub
mov
stos
xchg
adc
out
cli
push
jmp
jecxz
mov
inc
jge
imul
dec
bound
movsl
cmp
cmp
jge
mov
leave
or
add
andl
ss
mov
aad
loopne
xor
dec
jg
pop
out
aaa
call
js
jmp
and
and
sub
or
loope
push
pop
jbe
test
and
pop
inc
fiaddl
insb
xchg
repnz
jecxz
cmpsl
es
mov
dec
cwtl
push
popa
jnp
mov
xchg
mov
fdivrs
std
xchg
imul
jp
ja
add
mov
outsl
pop
lret
jmp
in
adc
imul
inc
and
aad
sub
jne
xlat
mov
test
inc
push
lock
mov
adc
adc
push
pop
inc
sub
lds
loopne
stc
sbb
inc
push
fildll
fcoms
adc
icebp
cmpsb
sub
and
adc
jmp
imul
push
xchg
into
orb
add
aam
lahf
push
icebp
mov
lret
rcr
stos
and
cmpsb
mov
cmp
arpl
lahf
movsb
jae
inc
jo
inc
fbld
fldcw
and
inc
popf
fnsave
imul
aad
jp
mov
jecxz
inc
leave
add
lds
into
test
dec
jmp
adcb
inc
xor
into
ds
insb
ja
rcll
mov
push
cmp
loop
aas
sti
cmp
cmp
jmp
inc
out
mov
mov
cltd
mov
loop
bnd
xchg
imul
sub
in
ret
push
in
out
enter
mov
xchg
adc
mov
xor
lods
fcomps
and
xchg
in
pop
push
fsubrl
stc
insl
dec
sahf
sub
jb
mov
pop
push
xlat
mov
cmp
ror
repnz
popf
or
mov
push
push
inc
adc
leave
cwtl
repz
push
and
xchg
icebp
push
outsb
and
sub
and
xor
cmp
data16
je
mov
push
lock
fnstenv
test
aaa
popf
xchg
mov
lcall
bound
in
xor
adc
sbb
mov
pop
jmp
push
int3
icebp
xchg
sbb
cmp
fsub
mov
add
mov
cmpsb
jl
jmp
jne
jl
jg
lock
cmp
loope
push
mov
pop
cld
pop
pop
push
adc
pop
aas
mov
and
pop
lds
xor
scas
dec
xor
mov
sub
pop
mov
xor
inc
pop
stos
pop
pop
sub
mov
imul
lock
jo
rcrl
mov
sbb
fidivrs
sahf
pop
mov
inc
insl
push
loope
lock
scas
jo
popw
addr16
push
xchg
mov
dec
test
out
jno
adcl
inc
roll
movsb
stos
sbbl
pop
call
lods
cmp
dec
cmpsl
pop
xor
outsl
push
mov
fcoms
jo
fstpl
adc
loop
test
mov
xor
js
or
sbb
sub
lea
inc
sbb
out
jmp
out
adcl
pushf
nop
loopne
cmp
push
ret
sbb
or
jnp
shlb
mov
dec
push
icebp
push
push
fxch
imul
loope
sbb
push
xchg
lea
sbb
daa
int
inc
jo
xor
ss
dec
sti
mov
into
jge
lods
mov
add
fmull
sahf
dec
mov
sbb
lcall
aaa
addr16
and
sbb
sarb
daa
insb
in
and
mov
add
js
push
adc
lret
arpl
cmp
mov
and
gs
adcb
mov
jnp
subb
idivb
mov
enter
ds
jp
std
pushf
pop
lea
sbb
xchg
sbb
popa
outsl
or
movb
dec
push
add
cmp
inc
xchg
test
rcrb
mov
mov
inc
js
jb
daa
div
xor
jge
test
test
fisttpll
mov
sub
mov
cmp
adc
cmp
das
in
add
and
mov
aad
xlat
lods
int
loop
stos
xchg
pop
mov
imul
out
dec
popa
sbb
ficoms
cmp
push
mov
mov
cmp
fdiv
sbb
xlat
in
out
xchg
push
lret
int3
add
mov
mov
sub
fsubr
js
cmp
and
in
enter
nop
cmp
jo
sbb
cmp
pop
jle
scas
sub
add
lret
in
aad
push
fisttpl
movsl
ret
aad
sub
xor
push
pop
loop
popa
and
mov
xchg
fistpll
mov
js
inc
xlat
in
mov
adc
inc
sub
cmp
loop
hlt
and
and
dec
les
popf
test
cwtl
mov
cmp
push
dec
jns
mov
mov
popa
cmpsl
sub
cltd
adc
lret
push
roll
push
dec
rcr
mov
out
rolb
test
mov
fadds
adc
jge
js
or
maskmovq
testl
out
ja
enter
mov
xchg
in
aam
notb
rcll
pop
cmp
adc
mov
scas
or
dec
xchg
dec
push
jle
sbb
call
stos
in
pop
imul
scas
or
inc
ljmp
test
sahf
mov
loop
mov
add
call
mov
fisubrs
stos
push
js
cs
adcl
stc
out
dec
ja
or
pop
push
or
repz
mul
bound
popf
jge
lcall
jl
jne
movsb
roll
xor
sbb
jns
inc
xor
adc
stc
cmp
fs
pop
push
cld
inc
sbb
mov
dec
out
int3
scas
movb
cwtl
fcmovbe
sbb
cmp
cmc
xor
mov
push
gs
mov
test
mov
jns
test
aaa
ss
add
ss
sub
sbb
jle
or
and
js
jmp
xor
enter
xabort
cwtl
cmp
ss
fstps
je
in
movzwl
pushf
insl
imul
sbb
dec
out
add
test
mov
inc
add
mov
push
lahf
aaa
push
sbb
popf
lret
cmp
not
lahf
ret
cs
push
mov
outsl
dec
cmp
loop
addr16
sbb
adc
das
scas
lret
lock
loopne
jp
adc
push
mov
mov
lds
or
adc
sahf
mov
sub
ja
loope
add
jl
loop
test
gs
leave
pop
jns
fimull
xor
mov
xor
fcmovnu
cmpsb
je
mov
jbe
push
xchg
cmpsl
mov
cmp
ss
jg
mov
js
shrl
mov
sbb
mov
push
fcoms
outsl
movsb
cmp
and
and
idivl
lock
inc
push
into
stos
and
negl
mov
mov
mov
lods
lods
inc
jp
and
pop
ret
cltd
push
rcll
xorps
mov
outsb
add
sub
mov
loope
lcall
ds
sub
xor
and
ret
sub
pop
clc
stc
hlt
fdivrl
ror
cmp
pop
mov
xchg
and
pop
test
decl
shll
cmpsl
add
and
sbb
pop
clc
inc
inc
and
push
jbe
mov
xor
cmp
repz
leave
insb
xchg
jp
jmp
and
arpl
mov
shr
mov
ret
cmp
mov
addr16
hlt
pop
push
mov
fdivrl
pop
sbb
xor
aad
test
mov
cmp
std
and
iret
fldcw
fpatan
cltd
xchg
lock
mov
fwait
xchg
outsl
rcrb
lahf
or
fsubrl
mov
lret
icebp
mov
rcrl
or
test
dec
xchg
and
sti
jne
xchg
pushf
nop
push
mov
lds
loop
insl
cmpsl
adc
dec
mov
shrl
inc
movsl
pop
das
inc
sbb
pop
xor
sbb
je
push
int
cs
mov
sub
lock
adc
popf
jo
mov
fsubrl
pop
andl
scas
repz
push
andb
push
scas
insl
push
add
pusha
fists
push
xor
jl
pop
jecxz
imul
inc
mov
subl
ret
jmp
or
out
inc
and
test
or
push
xor
adc
in
fisttpl
jecxz
loope
xor
cld
push
jge
scas
enter
clc
mov
sub
mov
xor
or
rol
cwtl
ss
out
or
movsl
jle
xchg
call
adc
fstpt
inc
rcll
repz
test
fimull
pop
cmp
add
xchg
rorl
or
mov
mov
mov
test
add
andb
sbb
lods
sbb
adc
lcall
sbb
mov
aas
mov
sub
stc
mov
test
je
add
xchg
sub
imul
es
inc
cvtps2pd
sbb
lahf
xchg
dec
push
stos
call
cmp
sbb
in
test
mull
jecxz
mov
push
lahf
xor
in
and
inc
mov
sub
imul
int
lret
into
mov
rcrl
pusha
out
push
out
jg
jo
mov
mov
aam
scas
out
movsl
popa
scas
and
mov
mov
int3
xchg
inc
jnp
clc
mov
test
inc
pop
mov
sub
insb
pop
popf
test
sub
or
fbld
fwait
out
repz
mov
mov
jo
xor
xchg
push
neg
fldenv
xchg
shl
sub
mov
icebp
sti
iret
repz
and
push
and
mov
jmp
mov
sub
nop
cwtl
arpl
xor
and
int
mov
xor
cmp
aam
scas
and
ret
pop
xlat
push
out
mov
xchg
jo
sub
cltd
subl
pusha
adc
xchg
or
ja
lret
cmpsb
fnstenv
sbb
inc
lds
cmc
mov
lods
stos
cltd
dec
stos
mov
mov
into
lret
sahf
es
mov
mov
mov
popa
xchg
lcall
mov
cmp
ss
inc
xchg
test
scas
or
mov
daa
das
sahf
add
test
iret
repnz
inc
jle
sahf
sbb
shlb
or
in
add
clc
xchg
sub
sti
lcall
cmc
or
daa
dec
sbb
lea
sbb
pop
dec
xor
sbb
test
or
int
cmp
push
outsb
jecxz
xor
sbbb
stc
push
adc
lahf
orl
ret
iret
in
mov
data16
ffree
nop
pop
imul
push
mov
cmc
jge
add
add
icebp
mov
scas
and
add
leave
jo
mov
adc
push
js
outsb
shll
cmp
or
dec
aas
or
mov
icebp
cmp
xor
or
lock
xchg
lock
sbb
mov
pop
div
int3
add
mov
mov
mov
jbe
dec
mov
ja
jbe
imul
iret
sub
pushl
loopne
pop
insl
jecxz
sbb
push
pop
enter
push
rcrl
bound
mov
aam
lock
or
lea
daa
fsubp
lret
loopne
jnp
test
in
popf
test
mov
es
mov
cmp
lods
push
sub
arpl
jne
enter
cwtl
scas
cmc
push
or
pop
int3
js
lret
int
mov
fildll
je
ret
and
pop
push
xchg
sbb
pop
repnz
adc
cwtl
ljmp
test
adc
jb
clc
cmpsb
or
pop
pop
pop
rolb
je
clc
movsb
pop
sarl
push
ja
mov
push
imul
scas
xlat
notl
push
popf
cmp
jge
in
shl
xchg
pop
daa
mov
add
sub
sub
dec
sahf
dec
mov
pop
pop
adc
addr16
fcomp
add
mov
mov
lock
pop
idiv
pop
mov
sub
push
out
in
inc
push
sbb
xor
cmp
lods
dec
xchg
cmp
adc
lret
loop
aam
mov
shl
pop
push
sarb
movsb
ss
and
or
stc
cmpsb
and
push
xchg
loope
aaa
inc
adc
or
xchg
nop
dec
bound
sub
pusha
push
push
ret
popf
into
out
int
mov
push
push
js
lret
mov
lcall
scas
lcall
or
cmp
adc
jbe
fucomp
outsb
es
test
gs
jo
adc
movsb
sub
movsl
roll
lods
cld
out
es
inc
mov
negb
mov
mov
loop
xor
push
mov
mov
mov
inc
sbb
test
arpl
je
mov
inc
or
jle
stos
bound
pop
cmp
pop
mov
xor
das
jbe
or
pop
mov
add
int
imul
add
pop
in
cwtl
test
pusha
repz
call
shll
jmp
sub
sbb
jbe
movsl
xor
aaa
sbb
mov
fs
das
lock
out
and
jecxz
xchg
mov
dec
dec
jo
je
es
mov
shrb
out
and
stc
or
and
mov
xchg
repnz
add
add
stos
lahf
repz
add
mov
cwtl
push
dec
inc
in
std
xchg
inc
pop
add
outsb
out
jg
data16
bswap
iret
push
fwait
lcall
add
cs
es
out
or
mov
popf
fsubrs
mov
ljmp
into
int
adc
out
es
mov
push
out
fiaddl
dec
sub
dec
add
cmp
dec
push
int
cld
icebp
je
jl
pop
repz
enter
push
std
aas
incl
jnp
cld
push
xchg
addr16
call
mov
orl
int
lods
sti
cmp
fsub
pop
cmc
subb
adc
stos
in
mov
dec
push
in
in
shl
push
inc
dec
outsb
inc
mov
adc
adc
sub
push
rclb
cwtl
cmp
mov
push
xchg
mov
mov
push
fdivr
mov
dec
sbbb
std
or
and
jns
pop
test
or
popf
cld
inc
xor
call
sbbl
adc
jb
cmp
imull
jno
push
xlat
inc
fdivrl
ror
scas
mov
popf
je
mov
loopne
push
adc
adc
jnp
cli
aam
cmp
add
ljmp
cmpsl
xchg
mov
out
movsl
or
pop
int3
dec
inc
jl
shlb
icebp
bound
ds
xchg
subl
pop
mov
mov
lret
test
xchg
mov
pop
aas
mov
jl
jno
outsl
mov
push
sub
add
ja
das
sbb
cmp
loopne
push
ds
fwait
and
cmp
dec
xchg
bound
adc
jns
inc
jge
dec
fbstp
add
jp
add
sbb
dec
mov
mov
and
fists
adc
in
sbb
loope
add
push
jle
rcrl
or
pop
jns
mov
add
in
and
push
xchg
outsb
out
in
js
dec
stos
add
cmp
add
mov
xor
inc
fstpt
ljmp
popa
mov
scas
or
mov
dec
pop
cmp
andl
push
mul
jmp
cltd
mov
enter
pop
mov
insb
sbbl
insb
xor
mov
mov
inc
adc
adc
dec
in
icebp
gs
test
fwait
mov
pop
fnstcw
mov
adc
mull
mov
outsl
mov
and
fdivrl
mulb
lret
lret
push
sbb
enter
lods
in
jae
mov
addl
mov
popf
hlt
call
sbb
sub
or
das
mov
popa
mov
pusha
xor
and
or
jmp
cmpsb
andl
inc
push
or
cmp
incb
mov
add
and
xchg
sbb
movsl
dec
stos
ret
adc
mov
xchg
xchg
out
insb
cwtl
sbb
lock
clc
aas
ret
mov
imul
add
sbb
jno
cmpsl
xor
mov
gs
mov
mov
cwtl
sbb
lret
loope
push
addr16
push
xchg
int
push
xchg
sarb
mov
call
mul
sbb
fs
in
loop
repnz
lods
loop
mov
or
jno
lcall
out
setbe
call
int3
xchg
mov
lock
push
and
add
xchg
or
int3
sti
dec
je
xchg
push
in
sbb
test
add
push
andb
pop
sbbb
jecxz
mov
cwtl
je
aam
jno
test
repnz
loope
add
cmpsb
stc
cmp
jno
cmpsb
mov
arpl
movsb
andb
out
test
imul
into
mov
inc
idivb
sub
test
test
out
popf
pop
gs
jg
mov
lods
lea
add
bound
pop
add
mov
shll
sub
or
stos
mov
shl
and
sub
xchg
loopne
jns
loopne
ret
cmc
pop
pop
mov
mov
sub
outsl
xchg
adc
das
push
iret
pop
shrb
mov
dec
shll
enter
cmp
add
sbb
mov
jns
inc
jb
jo
adc
and
cmpsl
std
gs
sti
dec
inc
lahf
mov
lea
test
mov
jo
jmp
sahf
inc
sub
lret
adc
lods
pop
out
mov
or
xchg
cmp
jle
pop
add
adc
int
xor
pusha
arpl
sar
cmpsb
faddl
cs
mov
xor
inc
or
js
cmp
sbb
jnp
mov
insb
xor
sub
xchg
mov
sbb
add
rorb
mov
mov
mov
adcb
jmp
aad
test
mov
out
xor
inc
bound
enter
fadd
adc
push
and
inc
mov
rorl
sbbl
mov
enter
mov
adc
ds
xor
in
movsl
pop
push
insb
xlat
ret
mov
sahf
lea
jg
push
and
push
lret
loopne
fiadds
mov
add
mov
cmp
loope
jg
into
xor
rcll
test
xor
jnp
mov
fists
shrb
push
out
push
sub
loopne
or
sbb
add
testb
out
push
loope
out
dec
xor
movsl
or
inc
sub
icebp
mov
dec
xchg
sbb
mov
stc
ret
mov
test
loopne
xchg
lea
insb
sarb
jmp
rcl
push
out
out
or
jns
fiadds
imul
iret
sbb
int
ss
jg
and
addr16
push
repz
pushf
sti
lds
scas
ja
std
out
mov
fcomps
cmpsb
sub
push
adc
mov
stos
push
cwtl
jno
dec
mov
jmp
or
xchg
out
inc
loope
dec
lret
push
mov
adc
loop
push
adc
inc
xchg
inc
and
movsl
mov
sarb
mov
negl
orb
insl
sub
outsb
cli
dec
push
push
push
cmp
fnstcw
fsubrl
cmc
cmp
andb
pop
in
pop
pop
and
and
mov
inc
test
pop
add
mov
into
insl
xchg
xchg
xorb
out
sub
or
pop
sbb
jecxz
popa
sub
outsb
inc
cmp
or
ja
mov
shl
mov
jg
popf
fdivrl
sbb
push
sbb
pop
scas
loopne
sub
loop
or
fmull
pop
cmp
xlat
mov
shlb
lcall
jmp
pop
movsb
mov
sbb
xor
mov
outsl
sub
push
inc
fs
in
dec
adc
dec
test
cmpsb
scas
mov
jmp
fld
movsb
mov
icebp
gs
pop
sub
xor
xchg
scas
add
jae
sub
ljmp
std
pop
jmp
dec
lret
aad
leave
jbe
in
and
sub
lret
cmc
mov
xchg
xchg
rolb
cmp
xchg
popa
cmpsl
in
jp
int3
in
fstl
mov
lahf
pushf
xor
cmpsl
std
inc
in
and
shrl
dec
in
fisubrs
mov
jl
push
cld
cmp
cmc
adc
movsl
mov
stc
popa
jnp
in
fsub
cmpl
popf
int
dec
sub
sahf
or
xlat
push
xlat
int
dec
les
jae
addr16
cmp
inc
sbb
add
imul
ret
out
gs
leave
fstp
or
ja
cmpsb
sub
cmpb
lock
in
shll
or
lahf
das
lret
outsl
mov
test
imul
adc
in
hlt
out
lret
mov
push
lds
aad
ja
shrb
aad
jecxz
cmp
jo
arpl
xchg
bound
divl
jp
fdiv
mov
sub
inc
addr16
xchg
pop
dec
mov
test
mov
cwtl
mov
jge
xchg
pop
jbe
jnp
mov
dec
mov
pop
and
cmpsl
icebp
aad
aas
adc
sub
or
push
fstpl
jnp
mov
lds
fbld
ljmp
les
loopne
rcll
repz
pop
sbb
mov
mov
sbb
daa
imul
rcrb
roll
xor
idivb
clc
sbb
push
daa
test
jae
add
jo
test
pop
adc
dec
lods
cld
adc
cmp
jb
ja
sub
push
add
and
in
imul
add
decl
daa
lret
pop
pop
mov
xorb
clc
fs
sub
sbb
jg
cmp
pop
pusha
pushl
push
jbe
mov
push
pop
ja
out
pushf
and
adc
push
shlb
aas
ret
jp
fistl
pop
sbb
mov
cmc
and
out
pop
and
in
mov
and
ss
add
add
in
push
pop
inc
filds
fnstenv
aad
add
sar
sub
pop
arpl
stos
pop
aas
xchg
rcr
lret
sub
je
or
push
or
push
pop
xchg
and
jno
and
fs
push
or
outsb
sti
mov
in
stc
out
xor
int
pusha
jge
arpl
daa
icebp
enter
pop
jp
jg
pop
mov
jmp
arpl
leave
lret
aad
fwait
testl
sbb
xor
add
jmp
adc
and
in
and
push
inc
inc
jo
out
aam
fs
xchg
or
sub
dec
sub
xorb
and
jb
les
sbb
and
sti
cmp
lods
rolb
lea
or
cld
pop
sbb
xchg
mov
daa
call
pop
in
xchg
adc
repnz
push
je
xor
sbb
clc
sbbb
and
es
icebp
insl
popf
ret
pop
lods
push
cmpsl
sub
and
jnp
pop
jne
pop
shl
and
push
setnp
jp
iret
jecxz
add
data16
fstps
test
jmp
cmp
xchg
out
mov
scas
lods
lret
or
pop
in
sti
xchg
jno
sub
loope
sbb
shr
mov
ficomps
pushf
sti
leave
out
test
ret
cmc
test
cwtl
xchg
sub
push
and
das
ja
xor
adc
fs
ret
hlt
hlt
mulb
cltd
sub
sub
imul
push
out
rclb
push
pop
mov
push
aas
and
mov
dec
sbb
arpl
cld
add
adc
pmuludq
cmpb
jno
dec
mov
cmp
jne
mov
out
or
jo
adc
fdivrl
fdivrl
and
lret
mov
mov
sbb
mov
sti
lcallw
fninit
add
mov
mov
inc
pop
lods
jecxz
or
mov
call
rorb
jp
cltd
data16
and
xlat
and
sahf
push
sub
xor
jb
sti
pop
jo
sarl
sbb
fidivrl
fwait
jge
in
outsb
test
push
and
sbb
clc
sahf
bound
test
cltd
cmp
cmc
push
pop
xchg
shll
xchg
lock
mov
cs
insb
adc
push
xchg
mov
in
mov
jno
mov
jns
mov
xchg
cmp
imul
and
fmull
cli
daa
push
sarb
loope
add
enter
cmpsb
push
cld
sub
addr16
mov
pop
mov
andl
fildl
lods
aad
xor
adc
in
sbb
mov
sarl
adc
add
test
cmpsb
jle
push
shrl
xchg
and
repz
xchg
sbb
adc
lcall
adc
gs
push
adc
cli
dec
push
test
jne
stos
test
fiaddl
xor
jb
inc
cmp
test
sbb
mov
inc
icebp
inc
inc
fsubrl
ret
xor
outsl
popf
aaa
cmp
jl
test
jb
mov
popa
outsb
neg
test
out
fidivrs
mov
es
das
dec
ja
mov
or
mov
inc
mov
mov
dec
push
incl
mov
push
insb
inc
addr16
jno
enter
aas
out
jbe
pop
inc
in
add
mov
push
shll
icebp
xor
jnp
rep
mov
mov
sub
bound
cwtl
out
int3
insl
les
and
movsb
lea
xor
cmpsb
jp
and
popf
scas
cmc
addr16
adc
cs
or
loopne
cmp
loopne
cmpsb
jp
loopne
icebp
ja
mov
leave
mov
je
ja
aad
lds
jbe
imul
sub
loopne
out
mov
stc
ret
cmpsl
lcall
outsb
or
into
fs
add
inc
dec
mov
shlb
ja
gs
pop
pop
dec
lret
les
xlat
add
in
mov
add
test
pop
pop
cltd
shrl
adc
xchg
inc
add
rcll
or
sub
cmp
jb
fisttpll
lret
and
xor
ret
dec
mov
fs
mov
add
push
in
mov
mov
movsl
int
shr
lods
dec
or
mov
imul
shlb
add
mov
sbb
popa
stos
jbe
inc
mov
bound
mov
mov
cmpsl
push
sub
pop
scas
mov
xchg
sbb
xor
std
std
scas
stos
mov
ficompl
xor
mov
cli
stos
jne
fnsave
cs
mov
cltd
push
in
out
into
lahf
mov
int3
jmp
sub
out
int3
lea
scas
jg
cwtl
push
arpl
or
outsl
pop
mov
cmpsb
cmp
out
arpl
push
mov
dec
jge
sti
adc
dec
nop
xor
stc
cmp
outsb
pop
sub
mov
hlt
ret
mov
and
fiadds
das
cmc
sbb
xchg
inc
in
leave
shr
sub
int
sbb
lcall
add
add
les
fmul
insl
pop
xor
out
aas
xchg
mov
pop
mov
loope
arpl
push
or
xchg
clc
scas
push
cltd
psrlq
or
xlat
and
lds
addr16
or
sub
daa
sub
cmpsb
push
repz
mov
mov
js
or
mov
inc
sbb
push
jge
std
sahf
or
xor
fisttpl
mov
mov
ret
out
push
enter
push
cmp
mov
pop
imul
imul
jns
dec
jl
movsb
inc
xor
sbb
jmp
fldcw
jecxz
xor
adc
cmc
and
outsl
mov
lahf
rcrl
lret
notb
push
adc
icebp
push
pop
jno
loop
cmp
sbb
xchg
xchg
aam
xor
xchg
add
mov
loopne
jo
and
cmp
cmp
aam
aas
xchg
mov
or
sbb
sbb
rclb
arpl
ret
enter
int
mov
mov
ss
adc
or
sub
jl
xchg
or
jle
mov
and
lahf
pop
mov
dec
mov
mov
xor
imul
inc
lds
pop
cltd
movsl
out
loop
data16
fisttpl
popf
sub
repz
cmp
pop
out
adcb
mov
xchg
subl
mov
repz
xchg
mov
jno
jg
mov
mov
cmpsb
rol
push
mov
pop
sbb
push
mov
push
cmp
jnp
sahf
push
xor
in
sahf
repnz
sub
call
cmpsl
adc
dec
dec
xor
mov
test
in
ljmp
or
mov
sbb
xlat
push
scas
push
shrb
push
cmp
pop
mov
pop
out
ret
outsb
mov
jae
stos
insb
jo
pop
pop
lahf
das
outsl
std
lret
adc
push
sub
adc
movsb
shl
mov
lea
mov
mov
push
push
pusha
adc
in
mov
imul
sbb
add
ja
fidivl
test
into
jecxz
in
call
mov
add
jl
inc
mov
mov
mov
fcomi
pushf
or
sbb
mov
cmc
insb
cmp
xor
sbb
xor
cmc
arpl
push
test
dec
pop
call
mov
push
stos
add
cmc
cmpsl
xchg
push
mov
adc
mov
daa
or
adc
in
in
and
jb
xor
ja
pop
out
mov
mov
insb
mov
dec
les
in
dec
jmp
clc
pop
inc
lret
dec
pop
jecxz
jp
pop
je
xor
scas
mov
scas
adc
inc
and
icebp
sub
test
sub
fbld
cmp
xor
int
ds
fisubl
dec
inc
or
aad
xor
pop
jno
pop
cld
xor
push
pushf
mov
and
clc
pop
mov
iret
les
or
test
mov
icebp
popa
push
and
mov
push
pop
and
and
repnz
mov
test
stos
push
dec
rcrb
shrb
sub
hlt
inc
stos
xchg
fstps
pop
js
and
lds
fwait
ja
movsb
pushf
test
imul
cmpsl
sbb
fisubrl
or
fldenv
pop
lret
mov
rolb
movsb
mov
in
and
test
outsl
call
lods
mov
out
repnz
popl
test
mov
mov
outsb
flds
pop
mov
push
cld
inc
mov
jle
mov
notl
mov
sarl
orl
cmp
lds
lods
testb
push
pop
jg
pushf
xchg
sbb
fadds
adc
lahf
mov
ficompl
test
in
xchg
mov
adc
and
lods
push
mov
inc
add
dec
fdivrl
pop
lret
inc
cmp
mov
push
add
inc
push
flds
inc
push
sbb
lcall
inc
push
hlt
jg
jecxz
push
call
scas
aaa
jg
rcrl
scas
cmp
inc
inc
adc
fnstsw
mov
mov
jl
mov
les
leave
in
pop
xchg
imul
sti
jae
push
test
and
std
insl
jmp
cmp
or
cmp
ljmp
loopne
mov
push
enter
xchg
fisttps
push
mov
sub
xlat
stos
stos
ja
cli
das
jecxz
lods
loop
xor
subb
add
imul
imul
loope
in
mov
data16
sbb
or
jne
mov
lds
push
sarl
add
xor
push
roll
stos
xlat
stos
push
mov
jp
test
ja
imul
inc
rcrb
jbe
shll
shlb
dec
invd
or
scas
ss
jno
pop
aaa
int3
cli
sub
push
lock
jnp
sti
shll
adc
out
sarb
inc
cmp
xchg
xor
int
mov
jns
pop
outsb
cwtl
xchg
push
or
stc
jbe
fisubrs
xchg
jmp
add
loope
pushl
inc
mov
add
nop
push
scas
std
adc
int3
pop
pop
or
add
lret
addl
push
mov
arpl
mov
pop
xchg
jne
mov
xchg
out
add
jo
cwtl
xchg
and
addr16
push
std
int3
gs
testl
fiadds
jbe
ja
dec
adc
dec
sbb
popa
ljmp
hlt
cltd
dec
sbb
pushf
and
lods
hlt
add
shlb
pop
jns
xlat
gs
ret
mov
push
xor
or
lret
sti
xchg
call
push
mov
outsl
je
into
mov
pushf
adcl
lods
inc
fimuls
dec
add
xor
fwait
hlt
dec
stos
pusha
or
jo
and
lahf
and
pop
jnp
dec
insl
addr16
stc
cmpsl
repnz
int
inc
fldcw
stos
jle
shrl
imul
jle
dec
jae
aam
stos
bound
nop
movsl
fmulp
mov
aas
nop
push
pop
pop
dec
or
mov
adc
add
scas
scas
push
shll
stos
cli
cs
or
imul
pop
adc
dec
mov
outsb
not
xorb
cmp
push
adc
inc
xorb
fmull
xchg
push
rol
aaa
pushf
decl
subl
leave
add
hlt
and
xorl
sbb
xor
and
cwtl
subl
lds
cmp
cmp
subl
mov
adcl
pop
xchg
outsl
dec
pop
mov
int3
or
je
mov
xchg
jbe
shlb
fldl
and
jnp
xchg
mov
lcall
and
mov
das
jmp
cmpsl
mov
pop
xor
xlat
test
xor
xchg
stos
cmpsb
lcall
stc
stos
add
and
lret
push
fptan
dec
out
sub
mov
xchg
mov
fwait
cmp
mov
shl
loopne
hlt
mov
push
pop
xchg
jmp
sbb
add
repnz
inc
loopne
lock
mov
daa
adc
mov
fsubl
inc
imul
les
pop
add
stos
outsb
out
addr16
cmp
mov
ret
pushf
sbb
mov
inc
mov
inc
fwait
xor
ds
pop
pushf
mov
pop
mov
sub
cmp
cmpsl
shrb
jp
inc
gs
mov
push
or
sti
test
pop
jmp
popa
sti
out
and
push
inc
or
movsb
inc
xor
adc
add
jae
and
jnp
sub
scas
mov
cmp
xlat
jl
xor
mov
outsl
loope
test
dec
lret
les
imul
out
jge
dec
push
mov
mov
push
loope
xchg
xchg
sbb
iret
outsb
or
mov
fs
out
xchg
popf
cmpsl
stos
loope
push
ret
mov
mov
cmc
fcmovb
cmp
sub
movsl
cmp
mov
into
or
loopne
inc
add
cmpsb
stos
cli
sub
jae
ror
jl
mov
shlb
jo
mov
pop
jb
add
shrb
insl
jl
jge
add
pop
jb
cwtl
jns
fwait
add
xor
adc
out
sub
lods
leave
push
and
test
cwtl
lahf
jne
push
push
cmp
insl
push
arpl
scas
js
test
mov
ja
mov
push
inc
ror
stc
dec
arpl
xor
or
sbb
cwtl
adc
nop
mov
icebp
push
popl
push
lret
sbb
shll
jb
pop
popf
add
hlt
adc
xor
sub
xchg
pop
sbb
sub
aam
aas
and
js
push
ljmp
mov
shlb
jae
mov
sbb
or
adc
test
lds
cmpxchg
cld
enter
shl
fwait
sti
incl
xchg
sbb
adc
jl
xor
pop
xchg
repnz
lcall
fiaddl
adc
fisubrl
int
imul
mov
imulb
dec
mov
push
repnz
push
mov
mov
mov
loop
push
sti
push
pusha
bnd
jns
roll
jp
aaa
cltd
pop
sbb
packuswb
push
mov
push
xchg
and
jge
lea
fdivs
movsl
mov
sbb
in
jecxz
decl
add
inc
push
mov
jnp
push
stc
stc
mov
mov
lahf
dec
add
mov
loopne
jg
jno
jns
xchg
dec
clc
cmpsl
in
and
lcall
add
or
fidivrl
imul
add
adc
mov
cwtl
call
fcomps
icebp
bound
into
mov
or
or
mov
aas
xchg
push
fcoms
scas
jno
enter
sbb
push
lret
ret
xor
push
xchg
or
xchg
pop
push
cmpsl
mov
fwait
adc
aas
pop
insb
test
adc
call
loop
popa
divl
xchg
mov
in
or
orl
and
and
lods
inc
hlt
dec
fidivrs
push
mov
pop
mov
mov
lret
test
aaa
mov
sub
fld
int
mov
sub
sti
in
faddp
call
fisttpll
fnsave
mov
sarb
mov
ret
and
rcr
push
push
push
push
sub
dec
shlb
mov
lock
fcoms
inc
pop
dec
ja
mov
mov
pop
or
loopne
cwtl
xor
sbb
imul
nop
ficompl
jnp
xchg
mov
adc
mov
xor
pop
int3
aam
mov
jno
divl
sbb
xor
pop
jge
ljmp
leave
inc
jmp
push
jmp
fwait
pushf
xor
repz
test
orb
pop
lahf
push
fcmovu
fdivrl
cmp
adc
sbb
cli
enter
push
adc
incb
push
loopne
ret
fdivs
jge
and
or
test
add
sbb
ds
or
outsl
inc
subb
mov
ret
mov
fstps
negb
scas
dec
mov
arpl
dec
dec
add
xchg
addr16
sub
out
xchg
ficomps
xchg
mov
loope
push
shll
pop
dec
sub
or
out
add
lds
push
jb
sub
xchg
int3
sub
jmp
aas
lret
mov
pop
out
sbb
out
out
cli
cli
mov
inc
cmp
aas
mov
fnsave
xor
fmull
mov
lods
lret
jl
mov
mov
push
jmp
adc
loope
mov
push
stc
inc
mov
cmp
cmp
jmp
aad
enter
jb
sahf
dec
lret
rcrl
add
xchg
les
fcmovne
ljmp
mov
sub
sub
jae
sub
rcll
push
push
jns
inc
sbb
mov
das
sti
scas
lcall
bound
xor
lret
cmp
scas
mov
mov
or
push
xchg
cmp
ret
fistpl
into
ficomps
test
leave
mov
dec
scas
movsb
sbb
cmpsl
pop
mov
pop
pop
movsl
inc
push
push
jg
stc
notb
mov
adc
orb
js
mov
rcl
xor
jecxz
lods
mov
jne
pushf
scas
subb
mov
punpcklwd
fidivrl
aas
jmp
out
cmpsb
cltd
dec
lods
mov
xchg
lret
out
lods
popf
dec
mov
les
lahf
ss
or
xlat
cmp
and
cmovo
push
mov
repnz
into
fs
mov
push
pop
push
sahf
or
sbb
rcll
cmp
or
xchg
js
push
and
rcr
jne
fs
push
or
mov
test
mov
js
and
test
hlt
or
xor
outsb
jb
mov
mov
adc
into
pop
call
sahf
pop
dec
mov
jns
push
add
aam
mov
jae
dec
inc
js
es
add
sbb
add
rcrb
inc
rcrl
stc
pop
pop
xchg
cmp
and
popf
sti
test
or
and
jo
fiadds
jg
xor
out
inc
and
mov
leave
add
fdivrp
iret
mov
xchg
shl
test
lret
lods
cmp
ja
pop
fiaddl
ds
outsb
xor
ffree
jg
pop
and
js
xor
rclb
cmpsb
filds
pop
std
push
call
je
jp
sbb
stc
sti
or
dec
xchg
lds
rcrb
mov
aad
adc
loopne
sahf
loop
cld
sub
mov
cwtl
sub
repnz
sub
mov
repz
sbb
sub
cmp
fistpll
jae
sbb
xor
adc
fdivrl
dec
lods
aam
lods
and
or
cmc
imul
jnp
dec
rol
mov
mul
add
add
ud2
mov
stc
int
hlt
and
pop
mov
aas
in
inc
mov
mov
mov
arpl
xchg
xchg
sub
fidivl
dec
inc
fnstenv
xlat
cmp
jmp
jo
notl
movsl
cld
and
stos
xlat
sbb
dec
mov
test
push
shl
aad
sub
sub
mov
cmp
lahf
fnstenv
add
push
mov
xor
shll
xor
mov
popf
jb
fsubs
mov
pop
add
and
cmp
mov
fs
push
ret
mov
pop
mov
xor
iret
adc
jecxz
mov
idivl
and
sti
sbb
lods
dec
mov
pop
cli
popf
clc
lods
bound
movsb
stos
insb
gs
jl
aam
leave
mov
xchg
cmc
xchg
sub
popf
push
dec
add
mov
nop
repnz
xor
mov
icebp
outsb
mov
jbe
inc
js
xlat
shrb
xchg
mov
mov
cld
fsubrs
pop
loop
pop
jp,pt
aad
jb
xchg
shll
sahf
add
repnz
xor
frstor
pop
mov
xchg
cltd
out
shll
add
loop
enter
mov
divl
sub
xchg
mov
or
not
lods
test
fldl
add
mov
test
mov
mov
pop
dec
in
in
popa
jno
insl
jge
call
adc
sub
js
sub
and
shll
dec
sub
sbb
add
bound
stos
inc
add
test
mov
dec
cmp
fdivs
test
inc
inc
subl
loope
fcmovu
dec
add
mov
jp
lea
cmpsb
xor
fmuls
mov
pop
adcb
pop
jle
movsl
xor
push
adc
push
ljmp
cmp
xchg
push
in
and
jmp
jno
push
cmp
pop
adc
std
xchg
push
mov
xchg
fucompp
mov
int3
adc
jnp
das
xchg
and
lret
push
inc
xor
pop
pop
add
fisttps
idivb
mov
dec
cmc
js
nop
sti
jl
popa
or
xor
mov
add
mov
pusha
daa
mov
sbb
ret
pop
fadds
popa
andl
pop
lods
int
cmp
xor
es
hlt
pop
sbb
aas
push
mov
aas
jl
xchg
xor
cmp
cmc
pop
das
mov
mov
mov
jle
int
frstor
hlt
daa
adc
inc
adc
pusha
pop
dec
jge
rcll
or
ficomps
cmc
cld
mov
mov
or
lods
add
jb
pop
push
aam
mov
mov
add
outsb
jno
or
sbb
or
sub
jae
jp
jp
sub
cmp
mov
pop
sub
test
arpl
and
mov
sti
nop
sbb
cmpsl
and
push
cmp
mov
push
jp
cmp
fwait
xor
test
pop
mov
daa
mov
jno
cld
es
test
or
jp
clc
mov
dec
or
cmc
rolb
addr16
xchg
mov
roll
imul
pop
cmp
shll
sbb
sti
movsl
or
repnz
sub
leave
inc
cld
mov
hlt
popf
cwtl
pop
dec
mov
js
push
insl
pop
dec
cwtl
ret
mov
mov
and
stos
push
pop
xchg
jge
pop
sbb
mov
sub
fs
cmp
pop
push
mov
shl
dec
or
xchg
clc
test
push
xchg
orb
push
aam
mov
jo
push
fstpt
push
pop
lods
mov
das
jnp
mov
mov
mov
sahf
lock
test
fcomi
push
fisttpl
subl
mov
jge
rorl
xchg
mov
sarl
mov
clc
adc
add
push
out
or
adc
jle
lea
je
test
mov
pop
fisttps
ret
fiaddl
cmp
adc
iret
sub
movsl
mov
and
and
adc
dec
inc
jb
idivl
das
lahf
repz
mov
frstor
pop
cmp
push
ret
xchg
lock
push
ljmp
dec
cmp
adc
and
inc
hlt
mov
push
adcl
ret
out
sub
cwtd
push
pop
pop
or
loop
mov
adc
mov
inc
inc
insb
sub
stos
or
add
sbb
dec
jmp
ja
cmc
arpl
mov
cmp
scas
adc
xchg
add
add
out
daa
mov
clc
leave
insb
lds
cltd
loopne
xorl
nop
lret
push
jbe
fs
dec
pop
or
mov
rcr
jle
adc
sub
push
mov
daa
js
push
stos
sahf
or
popf
adc
imul
ja
mov
ljmp
jbe
outsb
push
sarb
loope
pop
xchg
mov
shlb
and
jmp
cmpsl
fcmovu
les
data16
cli
sub
xor
xchg
and
push
sahf
and
push
je
dec
inc
je
xchg
xchg
mov
loope
cmc
cli
lahf
sti
mov
push
adcl
or
adcb
xor
pop
lds
out
out
adc
clc
xlat
add
sbbb
cli
negb
fcmove
cli
xor
cmpb
sub
rorb
insb
sub
test
sahf
inc
mov
xor
js
add
inc
pusha
add
mov
xor
sub
and
pop
rcr
lahf
imull
in
shrl
mov
lahf
call
xor
es
stc
jnp
pusha
les
cmp
mov
int
sbb
inc
xchg
loopne
push
mov
lds
push
mov
decb
mov
mov
shl
sub
rorl
pop
push
adc
addr16
cmpl
sahf
xlat
loopne
fildll
insb
jo
sub
mov
and
loope
inc
fstpt
test
push
mov
call
iret
lea
int
icebp
mov
pop
or
mulb
nop
mov
arpl
ljmp
add
scas
sub
fidivs
out
fwait
push
dec
or
mov
xor
push
add
xchg
jnp
adc
mov
shrb
mov
nopl
leave
sarb
inc
mov
jnp
in
nop
loope
dec
xchg
out
scas
xchg
into
and
cmp
testl
rcll
mov
movsl
in
add
iret
pop
repnz
ljmp
cmp
sub
or
stos
cmp
faddp
lock
sbb
nop
sbb
pop
cmp
xchg
xchg
push
minps
add
mov
sbb
mov
fdivrp
or
add
inc
push
lds
out
cmpsl
ficomps
aas
test
mov
hlt
rdtsc
cmp
cmp
push
iret
jns
mov
dec
out
mov
popf
lahf
push
pop
push
jp
and
testl
xchg
push
sti
mov
sub
lret
js
xor
adcl
xor
xchg
xchg
scas
push
lea
or
cmpl
dec
add
lock
insl
mov
lock
pop
pop
sub
add
imul
ds
jg
js
pop
inc
mov
ja
pop
in
cmp
inc
mov
dec
icebp
cmp
stos
cmovns
leave
jp
sbb
lds
fs
jb
dec
mov
mov
sbb
dec
pop
fdivs
test
icebp
scas
adc
cmp
scas
movsl
inc
cmp
scas
adc
rep
push
into
dec
std
cltd
mov
imul
ja
mov
jne
adc
rcr
mov
es
jo
test
shlb
fistpll
fwait
out
gs
fdivs
jo
into
jp
lods
outsb
jecxz
cwtl
jecxz
and
push
outsl
xchg
jg
ljmp
pusha
stc
dec
mov
and
imul
divl
aas
je
push
js
lea
js
xorl
or
rclb
add
ret
sbb
movsl
insb
push
gs
jecxz
lcall
jne
mov
cld
test
add
pop
shlb
dec
fcmovne
inc
jmp
out
test
inc
cli
push
or
call
sub
or
inc
sub
cmpsb
xor
mov
xchg
fsts
jo
push
sub
test
fsubrs
jecxz
and
adc
or
aad
lods
out
cli
test
cmpsb
xor
in
sbb
adc
fldt
dec
jecxz
aam
gs
gs
mov
xchg
aas
sahf
inc
and
insb
ja
repz
cmpsl
fstps
sub
jle
jo
sub
xor
jmp
push
subb
bound
ret
add
fisubl
or
sub
push
add
sbb
dec
ficoms
divl
pop
repnz
push
leave
jne
std
dec
push
xchg
pop
pop
sub
mov
clc
pushf
cld
jns
icebp
fdivrs
mov
push
cmp
inc
mov
fs
subl
bswap
sahf
xor
mov
xchg
bswap
or
jle
push
pop
pop
and
adc
gs
rcl
mov
or
cmp
mov
fcmovbe
rorb
sbb
push
cmp
lods
lahf
mov
mov
cltd
sbb
mov
mov
out
mov
dec
inc
into
mov
sbb
mov
std
fnstenv
sbb
imul
xor
cmpsl
sti
adc
push
ffreep
or
test
les
cltd
inc
lods
imul
mov
mov
lods
fstps
pop
flds
fildll
cmp
ret
lret
popa
mov
push
mov
xor
xchg
aas
inc
and
push
into
jb
pop
fwait
jp
sub
pop
popa
adc
xchg
mov
jne
stos
dec
rcrb
pusha
fwait
stos
sbb
sub
push
stc
mov
or
pushl
mov
test
jb
aaa
inc
mov
sti
dec
fmul
inc
mov
fcompl
xchg
shll
jmp
decb
out
jne
mov
jns
dec
lods
sub
push
jmp
and
fwait
push
cmp
inc
mov
movsl
in
push
or
sub
sub
xchg
stos
fstpt
jp
mov
jecxz
add
sbbl
mov
in
jl
repz
rclb
inc
mov
ret
rcrl
test
rorb
and
adc
mov
dec
add
pop
dec
sub
rcrl
mov
add
in
out
sub
bnd
inc
mov
and
xor
mov
mov
cmc
pop
pop
dec
xorl
fcmovnb
fidivrs
fwait
jecxz
std
or
iret
int3
or
aas
sub
lods
cmc
ret
pop
js
cmp
stc
sbb
int
jae
hlt
inc
jne
call
sbb
ret
loopne
mov
lret
inc
mov
popa
orl
add
mov
fidivrl
xchg
inc
dec
cmp
bound
leave
sbb
test
fiadds
ret
fsubr
sbbl
notb
pop
push
ficomps
in
popf
mov
xor
aad
mov
movsl
stos
aam
xorb
and
iret
sub
push
and
test
mov
cltd
cmp
mov
mov
loope
int
adc
test
test
cwtl
sbb
movsl
lcall
outsb
or
push
sbb
cmp
cmpsl
pop
or
add
adcb
mov
inc
lds
sti
adc
fisttpl
fidivs
addr16
cmp
jecxz
movsb
pop
imul
daa
nop
in
cmp
jb
lea
sub
outsl
jl
cmp
stos
jge
cs
loop
ljmp
pop
repz
mov
jecxz
and
xchg
mov
in
popa
aad
fcoms
push
mov
outsl
imul
cmpb
pop
xchg
sub
sbb
xlat
pop
out
push
dec
std
test
push
in
pop
xchg
out
or
xor
test
xchg
stos
cmp
sarb
int
or
cli
fwait
cmp
pop
mov
pusha
cmc
clc
push
jae
shll
into
fidivs
sbb
movsb
sbb
mov
push
imul
xchg
loope
sbb
fcoml
dec
push
clc
lcall
les
loop
mov
cmp
cmc
lods
jnp
or
jl
adc
jg
sub
pop
push
int3
xchg
pop
fsubl
mov
jg
dec
ret
aas
bound
mov
in
cld
push
sbb
lods
push
cmp
cmpsb
mov
pushf
xchg
xchg
into
in
sbb
imul
sub
pop
stc
adc
jge,pn
in
cmpsb
pop
testl
scas
mov
and
xchg
mov
or
test
ret
dec
and
jae
scas
fstps
jmp
and
dec
lock
xchg
int3
adc
pop
shl
xchg
cmpsl
js
dec
or
imul
xor
clc
leave
int
ret
and
es
xor
add
pop
leave
jmp
ret
xor
inc
xchg
pop
stc
stc
daa
aad
cmpsb
inc
or
imul
inc
or
fstpt
mov
pop
jle
mov
inc
insl
ja
fistps
lret
sub
ret
inc
mov
lea
push
test
xchg
int3
outsl
sub
loop
stos
popf
in
xor
rcl
lahf
rcl
mov
inc
push
popf
mov
mov
push
dec
add
mov
addr16
jne
mov
push
nop
cltd
sti
es
popa
push
repnz
shll
shl
cmp
jb
vcvttsd2si
adc
pop
dec
xchg
mov
sub
xorl
iret
push
movsb
jo
cli
sub
cwtl
push
int
stos
xchg
outsb
add
fsave
loope
sti
ljmp
or
dec
pushf
sbb
rolb
fwait
push
lock
ss
iret
mov
dec
jle
push
loop
insl
xor
fisubs
mov
sti
fnstcw
and
mov
pop
stc
or
push
adc
inc
movsb
ficoms
ss
sbb
adc
test
sbb
dec
xor
mov
adc
std
bound
jns
mov
scas
mov
int3
gs
lds
sbb
das
mov
jg
pop
fbstp
roll
add
pop
rcrb
daa
dec
out
pop
mov
or
and
sub
insl
xor
or
sub
rclb
ds
xchg
mov
iret
adc
jns
aas
loopne
push
xor
or
or
addr16
inc
inc
dec
iret
pop
mov
push
popf
imul
pop
and
sub
clc
fists
int
xor
ret
cmc
push
mov
shr
sub
mov
push
push
jecxz
sbb
mov
sbb
xchg
sub
sub
bnd
lds
repnz
ds
pop
pop
dec
movsl
mov
fmull
sbb
test
sbb
sbb
out
ret
das
sbbl
imul
jge
popa
test
or
push
push
fstpl
outsb
gs
je
add
aaa
inc
inc
cmp
cs
lret
sub
clc
cs
add
sub
stos
loope
push
aam
int
adc
cmp
lock
or
adc
pop
dec
enter
and
push
jle
pop
push
xor
mov
cmp
cltd
xchg
xchg
mov
lds
pop
push
mov
pop
rolb
call
popa
lods
or
stos
js
mov
test
jno
lret
push
push
mov
or
xchg
fcomp
scas
out
sub
pop
aad
imul
jo
out
ljmp
flds
std
inc
idivl
or
and
mov
std
xchg
inc
pop
sbb
cs
fistpll
dec
mov
nop
in
push
mov
je
cmp
xor
push
loopne
jle
mov
sub
or
mov
or
sub
and
fbstp
lods
xchg
mov
add
and
lods
imul
imul
fs
xchg
jp
and
add
popa
decl
imul
in
clc
stos
push
cmpsl
push
cwtl
adc
mov
iret
mov
cmc
push
adc
or
ret
testb
rorb
cmpsb
inc
pusha
push
pop
cmp
adc
pop
push
scas
rclb
sahf
shr
test
xchg
arpl
pusha
and
lods
jns
std
adc
aad
std
stc
test
addr16
or
addr16
pop
adc
pushf
stos
xorb
xchg
adc
add
sub
ds
hlt
mov
dec
xchg
test
xor
sahf
pop
cwtl
sarb
cli
pop
xor
shlb
loope
std
and
mov
int
sub
dec
inc
gs
mov
das
loop
push
cmp
lsl
add
sub
jnp
ss
ret
push
jp
lret
seta
sub
cmc
daa
fwait
jmp
popf
inc
mov
mov
mov
out
lret
loop
add
lahf
or
jp
pop
dec
pop
out
mov
xor
test
adc
add
pop
mov
adc
or
stos
sbb
rcrb
sarb
das
sahf
in
xor
cmp
push
sub
cs
dec
sbb
push
sbb
je
or
loopne
fucomi
cmp
xchg
call
inc
add
jbe
jno
dec
pop
shll
push
inc
sbb
fstpl
mov
inc
pusha
inc
push
xchg
mov
shll
xor
mov
out
outsb
push
je
jl
addb
outsb
and
mov
sub
aad
push
xor
jnp
sub
mov
sub
sbb
mov
push
fs
mov
arpl
push
lret
ljmp
mov
adcb
std
outsb
lods
cmp
and
cwtl
movsl
scas
aad
out
cmp
pop
test
lock
insb
sub
and
adcb
add
in
out
imul
pop
out
pop
clc
out
nop
mov
sbb
mov
je
es
mov
adc
jbe
and
scas
pop
jno
lods
and
cmp
les
xchg
xchg
push
cltd
jg
loop
pop
adc
imul
mov
mov
cs
popf
sti
mov
fldcw
sar
jmp
sbb
and
dec
adc
cmp
int3
add
xchg
jo
xor
pop
les
inc
sbb
adcl
mov
lcall
cmpsl
push
sub
loope
loop
inc
aad
insl
fmull
mov
insl
insb
aaa
jecxz
bound
sub
jns
pop
xor
mov
sub
cwtl
outsb
push
cs
inc
or
int3
fisubrl
cmp
xchg
jne
stos
add
pop
or
lret
sub
sbb
ds
adc
jl
mov
sub
mov
ret
lcall
xor
xchg
mov
out
sar
popa
cmp
xchg
xor
scas
hlt
sahf
inc
push
and
dec
lahf
es
inc
loope
nop
sti
adc
mov
rcrl
imul
ja
call
xchg
or
and
dec
int
movsb
xchg
add
lahf
dec
pushf
xchg
xchg
mov
repnz
gs
cmp
int
test
mov
data16
or
inc
push
pop
in
insb
ds
xor
aad
dec
mov
mov
mov
rcll
js
add
pop
push
cli
dec
push
add
lea
loopne
imul
stos
pop
aam
sbb
repz
gs
enter
dec
and
push
js
imul
movl
lods
mov
pop
or
xorb
dec
sbb
arpl
mov
jnp
fiadds
decl
icebp
inc
push
movsl
sub
sbb
adcl
pop
push
inc
sub
cmpsl
test
jg
mov
aam
push
sahf
jbe
test
pop
cmp
mov
mov
sbbl
jle
js
xor
cmp
cs
and
push
out
xor
adc
int3
in
fwait
les
sahf
sbb
jp
outsb
sbb
aaa
and
lret
jno
rcll
mov
movsl
xor
and
fistl
cmp
jmp
scas
inc
cmp
jno
repz
les
pop
into
xor
adc
or
sbb
and
andb
outsb
mov
dec
ljmp
test
dec
push
push
test
inc
cmp
repnz
push
mov
push
cmc
mov
or
jne
mov
pop
fidivs
ret
jmp
fiaddl
rclb
out
xchg
dec
out
ret
aad
ja
lret
mov
cmp
mov
arpl
jle
mov
cmc
mov
inc
repnz
ss
rcrl
stos
cmp
mov
sub
rcll
push
fadds
dec
sar
lds
jl
push
or
jae
fists
pop
dec
cmpsb
mov
fwait
push
loope
in
and
sbb
add
mov
inc
push
jns,pt
into
ja
out
mov
xchg
adc
pop
push
imul
cmp
scas
push
mov
jbe
out
leave
imul
or
int
scas
subl
mov
mov
btr
mov
inc
lret
ret
cld
or
pop
dec
aad
adc
adc
subb
push
std
or
fmull
pop
adc
sbb
inc
mov
cmp
lods
jnp
pop
stc
stos
shll
loop
inc
or
mov
add
aas
aaa
dec
mov
call
and
scas
divl
je
inc
into
sub
fdivrs
or
pusha
push
pop
push
imul
adc
sar
dec
loopne
inc
fisttpl
dec
dec
es
roll
outsl
imul
or
adc
rcll
push
adc
outsl
adc
mov
cld
jnp
sarl
stos
je
stos
xor
pop
sub
sbb
into
cmp
loopne
arpl
arpl
mov
xor
jns
test
je
jno
jae
icebp
push
repz
sti
imul
out
int
adc
add
add
or
dec
mov
add
movl
xor
lret
and
mov
ss
cmp
dec
xchg
lret
ret
test
push
push
cmpl
jne
je
popa
push
push
push
push
jmp
bound
mov
sbb
mov
lock
lret
cmpl
lods
pushf
outsw
adc
and
jno
xchg
lret
and
in
mov
movsb
les
gs
xchg
ret
pop
sbb
lcall
ret
int
and
test
jmp
out
sbb
push
push
test
jmp
ret
cmp
ss
pop
out
xor
fiaddl
ss
lock
ficoml
mov
xor
gs
add
fnstenv
cmp
outsl
and
movsl
sbb
mov
ja
xchg
jne
pusha
add
inc
dec
aad
test
jge
lret
cmpsb
ljmp
neg
mov
sbb
xchg
lea
or
repz
cmpsl
pushf
jns
cs
xor
xor
and
sbb
lds
add
or
jmp
out
lea
cmp
clc
sub
xchg
sbb
and
pop
mov
in
inc
pushf
rclb
psllq
pop
lahf
xor
enter
test
push
push
fistpl
adc
insb
ljmp
pop
push
mov
mov
mov
cmp
mov
jne
push
xor
shll
jmp
inc
test
pop
mov
sbb
mov
xlat
bound
repz
idivl
arpl
iret
sbb
test
insl
pop
mov
int
adc
adc
mov
mov
cmpsb
pop
adc
call
pop
sub
sub
jg
popa
mov
sbb
or
dec
sbb
popf
mov
fcomps
sarl
push
nop
bound
sbb
popa
stc
mov
int
inc
xor
outsl
jp
push
mov
adc
daa
or
bound
pop
lods
shrl
jge
cltd
arpl
push
pop
divl
insl
out
scas
das
rorl
into
add
faddl
adc
cli
mov
ss
in
ret
xor
inc
sbb
xor
rcll
into
xchg
outsb
inc
repnz
adc
push
mov
roll
lods
mov
mov
test
adc
dec
dec
mov
push
pop
rclb
lret
adc
or
push
jle
push
dec
and
flds
sti
outsb
pop
lods
aad
dec
and
iret
insl
repz
scas
xchg
sar
jo
push
xor
pop
js
adc
mov
or
add
push
loope
scas
push
sarb
aad
lcall
pop
cmc
jecxz
jo
lods
imul
mov
mov
pop
mov
dec
mov
cmp
inc
mov
inc
stc
pop
rorl
xchg
jmp
stc
mov
aam
aaa
pop
mov
jg
jle
adc
int3
inc
movups
movl
xchg
jae
jl
aas
xchg
dec
push
xor
push
arpl
sub
jae
mov
dec
popf
mov
aad
adc
insl
mov
jbe
push
in
or
cmc
andl
jl
mov
rorl
popf
inc
ret
jnp
mov
push
fs
jge
mov
mov
sub
loop
cmpsb
or
pusha
invd
dec
addr16
adc
xor
das
lods
loope
jbe
add
dec
aas
sub
mov
pop
cld
iret
xchg
jmp
xchg
mov
lret
xchg
or
push
dec
das
stos
push
arpl
rclb
mov
shll
xchg
inc
inc
mov
call
and
or
test
jecxz
cmpsl
out
push
and
xchg
add
sub
daa
jo
jne
test
imul
mov
pop
repnz
addl
pop
xor
inc
testl
rclb
fiadds
std
stos
addl
mov
jno
mov
xor
xchg
push
push
jmp
jl
pop
push
cmp
or
dec
clc
ds
insl
sbb
mov
cmp
stc
mov
xchg
jg
cmp
mov
shll
push
data16
lret
bound
out
mov
test
cs
sti
int
dec
gs
dec
add
jge
xchg
stos
jb
std
cmp
hlt
or
cmp
sahf
lahf
dec
hlt
out
std
sbb
push
jnp
popa
push
adc
fisttpll
dec
roll
fidivl
mov
sbb
sahf
ds
sub
outsl
sub
mov
xor
inc
gs
mov
ss
in
xchg
dec
pushf
pop
sbb
int3
sub
fnstsw
into
gs
push
sti
bound
int
addr16
mov
data16
and
repnz
xor
fnstsw
inc
nop
adc
add
xor
cmp
sub
and
popa
xor
imul
insl
movsb
movl
stc
popl
push
mov
sti
aas
lds
pop
ss
jmp
and
mov
jno
mov
dec
push
repz
and
andl
adc
add
sar
push
test
jb
aas
lock
lods
rdtsc
lret
xchg
pushf
and
xchg
inc
add
movsb
add
adc
push
js
imul
cltd
addb
pop
outsl
push
out
rcrb
imulb
mov
popf
sbb
jae
out
mov
test
lret
movsb
push
addr16
cmp
lahf
dec
shl
mov
mov
rcl
cld
ljmp
push
or
jae
xor
sub
repnz
adc
int3
or
or
ret
shll
sbb
sub
xchg
cwtl
test
jmp
sbb
dec
mov
rcrb
movsl
add
loopne
mov
fcoml
test
ljmp
pushl
pop
sete
cmp
fbstp
pop
push
sbb
add
adc
outsb
push
daa
sbb
pop
xorb
jmp
cld
sub
scas
pop
sahf
nop
roll
and
mov
lds
dec
in
xor
push
fdivrs
lods
mov
in
mov
lret
jge
cwtl
mov
xor
push
fcoml
shll
dec
ss
or
sbb
mov
push
ja
mov
jle
mov
sarl
addl
divb
push
fcmovnb
stos
movsl
js
lods
fbstp
cmp
pop
xchg
jl
xor
xchg
or
jno
add
inc
sbb
xchg
inc
sbb
es
jnp
mov
mov
and
jnp
pop
or
repz
push
xchg
cmpsb
jbe
sbb
pop
dec
cmp
push
sbb
push
int
jo
sub
or
pop
js
fistl
sbb
mov
add
sbb
in
and
fisttpll
shl
or
cmpsb
inc
jg
shrb
flds
cmp
sarl
add
shrb
pop
adc
outsb
or
mov
xor
xor
rcl
ja
add
lods
add
rorl
mov
sub
inc
xchg
sbb
mov
rcrb
outsb
adc
shl
mov
jmp
int3
in
leave
adc
cld
ja
xchg
jle
enter
into
sahf
out
lods
mov
or
movsl
cltd
scas
outsb
inc
data16
dec
dec
jg
fisttpll
adc
js
pop
mov
mulps
sub
rorb
out
pop
mov
and
push
fs
adc
imul
lcall
cli
push
fistl
sub
lret
outsb
jnp
sub
or
sbb
jl
push
fisubrl
xor
shlb
and
sub
sti
xchg
mov
fists
xor
dec
jmp
dec
mov
sarl
inc
add
imul
insb
in
pop
stos
push
imul
call
out
mov
jns
xor
dec
popf
push
iret
ficomps
and
test
out
lods
mov
pop
mov
jns
jg
or
pop
jne
add
pushf
mov
jns
pop
movsl
mov
scas
push
ficoms
lods
addb
sbb
sbb
or
out
sbb
daa
inc
xor
hlt
cmpsb
sbb
cmp
lret
add
outsl
in
push
daa
sbb
adc
mov
scas
xor
sar
jle
add
ja
roll
push
iret
or
repz
or
pop
jb
pop
push
stos
mov
stos
or
in
push
pop
lahf
pop
and
sub
mov
arpl
pop
fistpll
push
lret
pop
jb
push
stc
sub
inc
lods
imul
inc
fiaddl
scas
or
pop
nop
ret
xor
aas
pop
or
push
loopne
or
and
sbb
pop
sarb
adc
fwait
adc
fwait
negb
loopne
loope
mov
lcall
stc
mov
scas
add
sub
mov
ret
xchg
es
cmpsb
outsl
lds
das
inc
cmp
sub
cwtl
push
and
loop
xchg
mov
lahf
mov
mov
xor
mov
jno
push
out
mov
outsl
cmp
sub
jmp
test
mov
inc
sarl
repz
sbb
dec
gs
dec
xchg
fstpt
outsl
dec
jecxz
mov
pop
lret
dec
movsl
test
cmp
cmp
ret
fisubrs
push
fs
jb
mov
or
and
int
sbb
cmpsb
imul
daa
and
pop
and
inc
lcall
fs
bound
notb
bound
sarl
mov
jle
test
lret
xchg
jns
cmpsb
fisttpl
cmp
fwait
pop
mov
mov
pop
pop
jg
scas
mov
cs
sti
sbb
cmpsb
movsl
mov
fiadds
ret
xchg
inc
int3
dec
mov
das
sub
sub
or
xor
push
mov
das
js
outsb
loope
movsb
popf
mov
and
test
add
inc
xor
push
aam
mov
and
mov
stc
mov
mov
clc
sub
jbe
into
adc
xor
xor
or
rcrl
popa
inc
sbb
sbb
lret
icebp
stos
mov
fwait
loope
pop
mov
and
xchg
sti
mov
sub
mov
xchg
adc
test
mov
xor
jg
sti
mov
push
fcompl
imul
fsubs
pop
lods
cmpsl
jae
test
sub
and
mov
jae
and
push
sbb
int
andl
pop
sbb
inc
out
xor
out
or
xor
add
dec
rcl
cmp
or
lods
fs
std
mulb
add
cmp
das
xchg
outsb
jmp
ja
push
and
pop
xor
mov
repz
cmp
mov
jbe
push
fsubl
ja
repnz
sub
and
in
mov
cmp
daa
insl
jge
xlat
push
movsl
loope
dec
pop
sti
incl
dec
mov
lret
pop
dec
jg
in
mov
push
mov
loopne
out
adc
jb
jp
fwait
into
mov
sub
fdivrp
imul
loopne
test
inc
xchg
xchg
xor
push
mov
cmpsl
loopne
or
iret
fadds
mov
mull
test
jbe
in
mov
mov
cltd
add
add
push
cltd
xchg
stos
js
fcmovb
fidivs
dec
jmp
xor
loope
pop
sub
pop
lods
aaa
bound
fstps
mov
pop
mov
scas
cs
and
pushf
mov
aaa
das
out
int
push
jne
clc
aas
jmp
xor
stos
mov
lds
xchg
pop
stos
movsb
cmp
cmova
xor
jno
push
icebp
aam
aam
pop
orb
mov
mov
and
mov
push
xor
aaa
sub
inc
loope
daa
jle
fdivr
jae
adc
negb
push
pop
insb
dec
jp
cmc
ss
mov
aad
add
clc
xchg
std
fimull
sub
sbb
sbb
aas
jg
push
cmp
push
pop
and
or
inc
or
cmpsl
fidivrs
mov
movsl
mov
shll
or
cld
sub
add
enter
mov
jno
scas
cmpsl
lcall
inc
popa
mov
sbb
mov
movsl
mov
aam
pop
int3
and
sbb
mov
or
sti
or
sub
pop
ja
adc
sbb
fcmovu
or
add
sbb
js
mov
lods
push
inc
sbb
pushl
in
shrl
aaa
push
add
mov
dec
pop
es
xorb
pop
add
inc
sbb
mov
or
push
lea
pop
add
rclb
push
shll
and
xor
pop
cli
out
adc
or
cs
adc
jl
inc
inc
subl
push
dec
sbb
enter
inc
fdivrl
mov
add
scas
les
fstpt
inc
pusha
xor
adc
shl
cltd
and
popa
push
mov
addb
stc
ja
dec
xchg
in
adc
fsubrs
cld
mov
sahf
fmul
inc
int3
aad
in
addb
rorl
push
das
xchg
insl
cmc
or
push
clc
push
addr16
cmp
adc
fwait
aaa
out
mov
and
push
pushf
add
cmp
inc
fs
in
mov
mov
jg
xchg
mov
fucom
repz
fs
mov
pushf
repz
lods
sbb
push
sarb
xchg
xchg
add
sub
ds
stc
add
gs
jp
stc
sub
test
lock
pop
stos
lcall
jo
in
xchg
int3
pop
push
loop
aad
dec
ret
xchg
cmpl
sbbb
sub
ljmp
push
enter
xor
cmpsl
jl
xchg
insl
pop
mov
mov
stos
mov
xor
sbb
cmp
push
stc
in
rorb
sbb
les
mov
push
lcall
push
cld
push
nop
cmp
cmpsl
data16
dec
roll
sbbl
push
iret
jb
inc
cmpsl
jle
les
es
ret
mov
adc
or
repnz
xchg
daa
cmp
pusha
mov
push
xchg
and
and
sbb
mov
dec
jns
rcl
dec
cmc
mov
mov
jmp
jbe
xor
jg
out
cmp
in
stos
outsl
inc
ret
push
adc
lock
fwait
xlat
cwtl
es
stc
int
sub
mov
mov
filds
arpl
xor
test
pusha
mov
punpckhbw
inc
incb
mov
dec
add
and
add
out
iret
mov
jo
in
scas
das
mov
push
push
mov
fisttps
out
dec
lret
mov
xor
les
ljmp
push
fdivrs
fs
aaa
notl
sub
lret
mov
in
scas
in
ret
pop
xchg
insb
shlb
lahf
test
push
sbb
rclb
sbb
out
rorb
mov
inc
repnz
pop
aam
int
pop
cmp
inc
cld
adc
fimull
ds
adc
leave
cltd
bound
mov
add
jle
sub
in
or
loope
hlt
mov
lahf
xchg
imull
mov
sub
xchg
icebp
add
push
nop
js
clc
pop
inc
jg
push
xor
outsb
pop
dec
pop
aam
dec
or
push
imul
adc
inc
lret
cmp
hlt
or
or
mov
cmp
mov
jl
sub
mov
les
add
cmpb
inc
stos
jp
inc
js
lcall
xchg
into
xchg
mov
popl
roll
dec
xor
and
jmp
mov
out
ljmp
roll
xor
leave
cmp
hlt
negb
sbb
xor
fdivs
pop
lret
iret
outsl
std
cmp
jo
fwait
sbb
int3
mov
sbb
es
and
jmp
inc
fisttpll
inc
mov
imul
daa
push
adc
test
pop
or
xor
test
mov
pushf
aad
pop
mov
das
in
ds
aas
mov
push
sbb
data16
fstpl
push
rorl
sbb
pop
popf
sub
sub
add
sub
xchg
mov
fsubp
mov
cmp
fld
mov
dec
adc
pop
and
mov
aaa
push
js
rorl
push
add
cmovle
roll
loop
add
sub
movsl
jo
mov
adc
mov
sub
mov
inc
mov
mov
mov
push
xchg
mov
ret
fcoms
out
into
cmp
outsl
xchg
out
adc
lret
push
clc
sbb
stos
out
push
in
and
jmp
push
stos
imul
ret
lret
sbb
mov
rorb
pop
and
inc
jecxz
repz
arpl
add
mov
mov
push
dec
test
push
out
adc
es
outsb
out
ficoms
sti
xor
or
popa
pop
xchg
mov
xchg
jle
mov
in
pop
pop
pop
fiadds
bound
mov
adc
scas
mov
movsl
inc
jmp
sbb
scas
cmpsb
or
dec
sbb
mov
lds
outsl
inc
lods
pop
insl
movsl
clc
xchg
fldt
insb
jno
jecxz
add
and
push
push
xchg
or
hlt
outsl
call
mov
in
stc
or
dec
stos
sahf
dec
inc
cmp
add
insl
popa
ret
std
test
aaa
jno
in
cmp
arpl
push
adc
inc
fbld
dec
and
adc
pop
pop
cwtl
insb
lds
ret
pop
sarl
popa
pop
or
fnstsw
push
xchg
xor
sub
jno
mov
lods
dec
xlat
repz
jno
dec
sub
dec
mov
mov
stc
add
lcall
enter
lcall
sub
les
jecxz
je
sbb
outsb
sti
in
mov
or
lret
sbb
inc
sub
sbb
and
leave
mov
out
jge
xchg
xor
jnp
adc
jbe
sbb
cmp
imulb
popa
mov
arpl
mov
inc
xor
sub
fisubs
push
stc
cmp
lcall
xor
inc
jnp
fidivrs
popa
xor
adcl
ret
dec
lea
cltd
pop
test
xor
push
mov
mov
adc
daa
sub
pop
xchg
scas
pop
out
xlat
jl
cs
xchg
cs
dec
shlb
mov
roll
inc
xchg
inc
aas
add
and
stos
adc
in
push
pop
stc
xchg
xor
ljmp
decb
js
jae
addl
push
mov
adc
or
bnd
rcl
push
je
jnp
std
in
mov
dec
imul
popf
pop
orb
jmp
pop
mov
popf
pop
xchg
test
ds
pop
mov
popf
jg
or
jnp
xlat
pop
sti
mov
add
jbe
mov
jne
lahf
gs
sti
adc
orl
xor
mov
xchg
jno
popw
nop
pop
fisttps
add
fdivp
push
mov
cs
xorb
dec
inc
pop
test
es
mov
xlat
imul
insl
mov
rolb
fdivp
adc
xchg
mov
jmp
aaa
pop
test
sti
shll
popf
inc
sub
jmp
out
inc
inc
pop
rcpps
jno
in
pop
push
lock
das
xchg
push
shlb
mov
push
sub
jne
test
sbbl
pop
incb
push
sub
sarb
dec
pop
rclb
xor
adc
pop
popf
fdivrl
sahf
or
cmp
cmp
pushf
into
cli
sahf
add
fucomi
lret
push
xchg
mov
sti
jae
mov
std
fistpll
les
iret
xchg
int
sub
repz
cmpsb
inc
mov
pop
sub
cmp
mov
ja
xchg
xchg
call
fwait
mov
loope
cmc
sbb
dec
cmpsb
in
pop
mov
addr16
inc
xor
ss
mov
cwtl
or
push
shlb
popa
sbb
sarb
xchg
dec
les
lcall
stc
xchg
fmul
add
pop
pop
out
nop
pop
stos
cs
jbe
pop
loop
or
shr
in
fsubs
pop
mov
mov
pop
jl
repnz
add
ret
cwtl
add
pop
mov
into
dec
and
scas
and
xchg
add
inc
das
outsl
push
mov
sbb
sub
mov
loop
jb
fadds
add
sub
mov
mov
add
cltd
cli
inc
in
pop
jge
sti
lahf
push
and
imul
lret
mov
in
stos
and
mov
push
call
in
inc
or
push
std
pusha
add
push
ficompl
cmp
ss
xor
pop
std
add
jnp
jne
mov
or
pminub
cmp
adc
and
test
aas
and
popf
negb
inc
or
add
mov
adc
adc
shlb
mov
mov
loop
cltd
shlb
jge
ret
or
jge
and
xor
pushf
aad
pop
je
push
sbb
xchg
cmp
adc
ljmp
jnp
das
loopne
mov
mov
loope
lds
in
adc
pop
ss
mov
orb
adc
sub
mov
pop
pop
js
dec
mul
cld
iret
lock
fwait
xchg
pushf
fwait
fwait
jne
lds
add
sub
cli
sbb
lds
movsb
jmp
mov
test
sbbl
nop
inc
std
pop
push
lds
je
mov
jmp
jge
dec
mov
jo
mov
xchg
lock
mov
add
add
out
or
cli
cli
sbb
jo
and
adc
and
clc
mov
fwait
cmp
add
mov
cmp
xorb
adc
push
and
lds
adc
jmp
xchg
notb
insl
sub
mov
pop
push
in
sbb
in
pop
mull
add
mov
mov
or
sub
add
mov
cmp
stos
push
in
jp
mov
xchg
jmp
push
sahf
push
pop
fldcw
int3
cmp
fwait
xchg
or
pop
or
jle
xchg
mov
cmpsl
mulb
xchg
std
nop
xlat
mov
push
shlb
sbb
xchg
mov
push
sbb
cmp
sub
test
push
mov
bound
dec
or
cmpsb
decb
daa
inc
pop
jl
sti
add
adc
btc
push
or
mov
xchg
imul
mov
jecxz
sbb
es
fisubl
and
gs
loopne
inc
jmp
mov
ret
cmpsl
mov
mov
jbe
pop
adc
cltd
mov
cli
adc
add
pop
addr16
in
outsl
push
mov
adc
int3
arpl
out
aad
movsl
adc
popf
cmp
std
pop
stos
scas
sbb
js
fcomi
jl
test
jbe
addl
jp
andb
repnz
je
push
jno
test
xchg
sbb
cmp
fdivs
and
add
mov
xchg
add
cmp
and
arpl
mov
inc
xor
xor
xchg
out
jno
push
xchg
or
aam
sub
adc
add
rorb
xor
scas
iret
jge
adc
xchg
xlat
mov
aas
into
sbb
sbb
sub
inc
je
pop
pop
stc
cmp
aam
fldl
divb
stos
aam
dec
leave
push
cmp
xchg
orl
call
pop
mov
jns
adc
popa
arpl
inc
sub
xor
jo
adc
movsl
stos
and
mov
hlt
sub
enter
mov
mov
ljmp
jmp
jbe
jmp
outsb
lret
xor
jl
sbb
or
mov
xabort
and
sbb
jp
out
xchg
imul
mov
xchg
xchg
out
aam
pop
stos
xchg
test
inc
lret
dec
add
lret
and
dec
daa
outsl
clc
lods
mov
dec
fldl
shr
clc
dec
xor
sub
lcall
inc
pop
sub
jle
inc
into
es
lods
pop
popa
mov
jbe
mov
imul
call
lock
fcmovu
testb
mov
outsl
sbb
out
sbb
jge
cltd
inc
and
sbb
es
sarl
lds
dec
mov
sti
jp
or
loopne
jbe
enter
popa
push
dec
xor
cmp
inc
inc
and
loop
ja
shll
out
dec
scas
jp
std
gs
pop
popf
imul
stos
icebp
push
test
pop
aas
push
dec
das
jae
mov
inc
push
popf
xor
push
sahf
mov
jnp
out
idivb
hlt
aam
shll
sbb
rcr
lcall
std
jp
in
xchg
add
js
and
in
enter
or
mov
js
and
push
jmp
jbe
dec
ljmp
xchg
xchg
add
pop
in
ja
dec
push
xor
dec
jecxz
mul
mov
test
mul
xlat
jo
popa
sbb
scas
pop
aad
cmp
outsl
insb
jb
mov
mov
jge
idivl
xchg
sub
or
or
pop
fcomip
and
stos
xor
pop
and
iret
push
jg
scas
outsb
pop
pop
bound
mov
and
int3
and
mov
bound
xlat
add
mov
mov
leave
sahf
pop
jns
cmc
lcall
jp
dec
repz
xchg
pop
js
popf
in
jb
sub
cld
loopne
sub
or
aam
iret
pusha
sub
iret
scas
scas
mov
orl
inc
and
xchg
push
cli
cmp
vpunpckldq
cmp
sub
mov
jg
fidivs
mov
lods
lods
push
xchg
enter
mov
psrlw
mov
dec
ljmp
jo
pop
jns
sbb
push
sbb
out
adc
inc
push
cmpl
inc
std
sbb
dec
pop
cmpl
lcall
mov
mov
sbb
sub
jl
ret
outsl
add
xor
outsl
movl
adc
fisttpl
mov
aas
cmp
or
out
mov
mov
push
pop
pop
into
imul
icebp
pop
jp
xchg
cmp
and
daa
mov
xchg
mov
adc
pusha
icebp
and
push
and
dec
and
in
insl
mov
jno
and
xor
lds
jp
fsubs
in
jne
pop
mov
xbegin
pop
or
push
push
repz
jge
sbb
test
call
jle
jns
cmp
or
adc
cld
cli
sub
xchg
pop
cmp
pop
inc
repnz
pop
cmpsb
mov
ds
xorl
fnstsw
mov
les
or
push
push
addr16
jmp
in
repnz
ja
outsb
fidivl
cltd
in
mov
ret
hlt
inc
add
dec
rcrb
cwtl
outsl
jecxz
or
sbb
movsl
and
push
add
scas
xchg
cmp
jo
in
cwtl
adc
mov
insb
shrl
xchg
aaa
loopne
jle
pop
and
adc
out
int3
mov
xchg
mov
and
xchg
inc
inc
je
lret
jo
je
out
aas
fcomps
mov
les
cmpsb
and
cli
fldl2e
jo
jno
sub
iret
fmull
jnp
adc
mov
mov
and
call
sub
in
ja
and
xlat
loope
les
push
daa
jecxz
data16
xchg
xchg
pushf
aas
ret
mov
nop
dec
xchg
in
mov
mov
daa
call
int3
adc
ja
jge
push
arpl
in
mov
mov
xchg
ds
insl
shl
dec
push
mov
call
jne
mov
shlb
sahf
inc
push
je
and
jge
fstl
dec
jl
inc
sub
out
inc
pop
and
sub
jbe
push
cmc
adc
imul
jp
mov
pop
imull
lods
stc
xlat
loope
out
stc
shlb
in
jmp
lea
pop
sbb
leave
ss
mov
sub
add
daa
jl
idivl
pop
jmp
outsb
aam
pusha
xor
and
mov
xchg
fs
shll
orb
es
add
and
push
lcall
dec
fstl
pop
sbb
xchg
cli
stos
shrl
ja
insl
mov
pop
mov
mov
bound
mov
insb
int
mov
sub
push
scas
lds
jno
dec
jle
adc
adc
mov
cld
test
insb
sub
inc
mov
out
mov
stos
stc
out
aam
cmp
cmpsl
test
or
stos
inc
jno
jecxz
cmp
aam
fisubl
mov
andb
add
cmp
cwtl
out
pusha
xchg
adc
popa
test
jge
mov
inc
jae
shr
mov
fisubs
jbe
imul
dec
mov
sbb
xor
pop
icebp
mov
jbe
int
inc
arpl
and
gs
jno
mov
sbb
pusha
nop
cwtl
add
int3
or
xor
stos
pop
adc
push
lcall
and
cmp
xchg
enter
xchg
push
cmpsl
adc
call
cmp
scas
add
jge
frstor
adc
pop
in
insl
icebp
out
xchg
xor
decl
test
clc
test
ret
pop
inc
mov
in
das
jno
js
inc
inc
sbb
push
xchg
ja
push
cmc
xlat
pop
ds
pop
int3
lds
add
inc
lahf
mov
cmp
popf
cmp
jg
ss
adc
cwtl
movsl
outsl
jno
jo
push
repnz
js
add
sahf
stc
and
mov
mov
sub
jg
xlat
jbe
xchg
shlb
sbb
repz
inc
fcmovnb
out
enter
pop
lcall
idivl
adc
lret
xlat
mov
popf
jecxz
sub
lret
cmp
roll
movzbl
pop
testb
cltd
fwait
sub
les
into
mov
arpl
dec
or
push
dec
aad
mov
nop
xchg
xchg
cmpsl
cmp
xchg
mov
ret
lret
les
push
dec
push
cs
loope
mov
jmp
std
idivl
rorl
inc
sti
test
inc
imul
movsb
mov
nop
and
mov
fdiv
inc
sbb
in
out
inc
iret
mov
hlt
inc
ja
pop
mov
mov
sub
dec
in
xchg
and
xchg
mov
stc
cmpsb
cmp
lock
mov
adc
fsubr
push
adc
pop
cmpsb
xor
pushl
pushf
mov
jecxz
pop
out
mov
add
sbb
cmc
std
imul
test
push
push
mulb
push
aam
sub
sbb
sar
mov
imul
fcoms
mov
inc
test
inc
aas
mov
cld
pop
ljmp
es
inc
roll
push
push
inc
cld
imul
and
add
aas
adcb
ret
call
ja
lret
fwait
jecxz
mov
cmp
pop
rcr
ret
je
sbb
jmp
ret
aaa
mov
in
and
adc
pusha
call
ds
xchg
jle
mov
mov
mov
mov
cmp
jb
jne
jl
ficompl
jl
je
cli
pop
jb
push
xor
loope
sub
arpl
jae
or
push
je
inc
sub
adc
push
into
push
sub
push
sub
cmpps
push
lods
sub
lea
std
add
push
lret
icebp
jns
repz
ret
insl
dec
movsb
std
scas
loop
sub
mov
xchg
dec
sub
adc
xor
mov
or
repz
cs
out
cli
jg
pushf
mov
sub
pop
dec
sbb
leave
bound
jle
das
cmp
mov
inc
or
lods
addb
cwtl
or
sub
aaa
imul
sub
ds
push
mov
call
xacquire
mov
int3
test
shll
push
popl
mov
inc
or
rcrl
cmpsl
fwait
mov
mov
fistl
or
insb
pop
sub
mov
scas
fs
popf
into
cmp
mov
jecxz
fidivl
xchg
inc
mov
das
fmuls
sub
repnz
mov
cmp
das
cwtl
sti
cmp
add
push
ret
cmpsb
inc
or
loopne
gs
and
sbb
movsl
fsubrs
sbb
mov
xor
add
jp
xchg
je
imul
push
jnp,pt
icebp
and
rorl
cmp
shrl
xor
push
xor
mov
fsubl
pop
xchg
or
andb
or
movsb
mov
adc
cmp
xchg
adc
shll
jmp
cmpsb
mov
repnz
mov
out
sub
hlt
cmp
jmp
adc
call
imul
inc
mov
iret
cli
in
outsb
xor
pop
adc
pop
pop
adc
aas
psubsw
mov
mov
pop
nop
inc
adc
insb
dec
insb
cmp
xor
scas
int3
dec
or
inc
pop
or
test
mov
cmp
mov
xchg
and
sbb
je
sbb
pop
pop
aas
adc
push
jne
inc
adc
push
clc
jns
push
cmp
mov
or
sub
xchg
push
inc
arpl
imul
pushf
fdecstp
cmpb
je
jp
sahf
push
movzbl
das
pop
sub
dec
inc
inc
mov
cltd
push
aad
dec
hlt
out
dec
dec
and
leave
insl
mov
and
push
mov
xchg
pop
fcomps
imul
push
adc
js
push
shll
add
xor
jne
lea
or
mov
dec
jno
pop
out
out
sub
ret
dec
and
cmpsb
adc
lds
pop
popf
sub
aad
or
shr
ljmp
nop
inc
addps
push
popa
adc
sbb
xchg
hlt
mov
cltd
cld
pop
mov
push
inc
jns
jns
sub
jl
adc
push
mov
add
push
ljmp
push
dec
xor
test
and
popa
sbb
movsl
or
and
jg
in
sbb
adc
sbb
enter
out
mov
lods
testl
push
mov
rclb
or
jp
dec
adc
mov
jne
mov
sub
jge
dec
imul
mov
aas
roll
inc
inc
sub
call
cmpsl
mov
mov
loop
or
movsl
or
sti
xorl
repnz
ret
xchg
inc
adc
mov
or
leave
jg
outsb
adc
jp
cmc
jg
push
cmp
js
adcb
cli
sub
push
mov
les
sub
adc
test
sbbl
into
pop
mov
and
mov
movl
scas
loope
dec
cmpl
mov
std
loope
cli
xchg
and
cmpl
cmp
push
mov
pop
mov
ja
movsl
jle
mov
dec
xchg
inc
jb
push
push
rcll
cmpsl
dec
lds
mov
repnz
push
push
lods
insl
lods
xchg
push
xor
and
cli
mov
sbb
jns
push
xchg
mov
testb
idivl
sub
scas
sub
jae
fnstsw
cmp
lds
cwtl
xchg
mov
enter
push
test
rcrb
out
idiv
cmpsb
fisubrs
pop
mov
and
sub
ret
cli
pop
sbb
mov
sarb
stos
cmp
jo
push
pop
sahf
push
mov
cmp
cltd
mov
inc
jge
inc
ret
into
scas
out
js
sarl
mov
int
scas
pop
inc
roll
shll
sti
inc
out
cmp
pushf
jnp
std
dec
bound
push
push
cmpsb
mov
testl
out
sub
sbb
add
lret
dec
ja
pop
cli
test
mov
lds
and
loope
lock
lods
cmpb
cmp
filds
mov
fs
mov
pushf
pop
add
addr16
adc
mov
inc
mov
enter
cmp
idiv
mov
lea
jne
fwait
cwtl
push
push
mov
test
lods
or
jne
jmp
inc
xor
ljmp
or
nop
idivl
inc
add
jle
xor
popa
adc
aad
xlat
push
inc
mov
mov
add
loop
mov
dec
cli
mov
jbe
repnz
jmp
scas
js
out
push
and
fcompl
ret
test
rcl
in
test
or
xchg
inc
leave
popa
lahf
adc
mov
xor
mov
jmp
xchg
pushf
push
and
ja
lods
cmp
in
fldt
loop
mov
dec
lods
pop
movsl
jge
push
pop
jno
add
and
orb
rorb
mov
loopne
and
mov
and
sub
sarb
push
les
jne
clc
mov
dec
pusha
clc
mov
fdivrs
dec
cmp
xor
sti
xchg
in
lahf
ja
mov
push
xchg
lods
adc
dec
xlat
and
and
lock
adc
or
jmp
jb
loopne
jg
popl
rorl
pop
in
cmp
aad
sbb
dec
jnp
negl
cmp
pop
lock
lcall
mov
inc
jbe
cmpl
xchg
add
and
mov
or
dec
in
das
loopne
jbe
mov
push
loopne
std
insl
scas
mov
stos
lea
loop
mov
cmp
arpl
in
xor
lock
call
push
stc
xchg
cmpsl
mov
sbb
cmc
fucomip
mov
xchg
jo
es
hlt
xchg
in
push
sbb
sub
in
sub
adc
movsl
adc
int
push
test
cmp
scas
adc
lds
test
lret
nop
push
adc
pop
xor
xchg
mov
sub
pushf
xlat
adc
pop
pop
mov
test
and
or
test
test
add
inc
mov
push
pop
test
bnd
movsb
cld
das
sub
mov
jmp
or
loope
mov
xchg
sub
adc
mov
sub
pop
cli
jecxz
pop
mov
inc
sbb
mov
and
icebp
dec
fcoml
pop
fwait
pop
xor
or
out
pop
or
mov
popa
xchg
sub
add
fidivrl
stos
and
inc
pop
push
into
orb
add
lods
and
sbb
inc
mov
mov
dec
in
leave
aaa
scas
rorl
mov
jg
sahf
or
call
xchg
lods
lock
sti
push
or
imul
lds
ficomps
sub
mov
in
sub
adc
xorl
or
xchg
jae
pop
fcmovnbe
les
push
sbb
pop
hlt
popa
in
je
call
sub
in
js
mov
inc
adc
pop
cmc
bound
daa
divl
push
mov
sub
in
leave
inc
pop
imul
sbb
in
xchg
idivb
daa
cli
dec
das
sbb
jg
push
out
sbb
xchg
aad
dec
cmpsb
dec
in
icebp
mov
add
ss
roll
sub
sbb
pop
add
xlat
dec
iret
lods
adc
dec
pushf
pop
mov
mov
xor
pop
out
pusha
cltd
cmpsl
sbb
xor
movlps
inc
xchg
into
pop
pop
push
roll
into
popf
xchg
out
xchg
adc
ja
jns
xor
jecxz
sbb
imul
sbbb
pusha
dec
dec
adc
data16
xchg
sbb
and
iret
mov
pushf
push
pop
jbe
pop
dec
scas
push
cmp
fdivr
roll
enter
mov
ja
dec
adc
orl
cmc
jge
lahf
insb
or
in
or
lcall
push
lods
xchg
and
push
xchg
pop
outsb
mov
dec
inc
popf
and
mov
mov
test
jge
xor
stos
or
adc
xchg
fs
dec
add
sbb
push
add
dec
add
push
neg
add
sbb
xchg
shl
push
and
cmc
scas
cmp
and
mov
orl
sbb
pop
xchg
es
or
jge
inc
inc
ret
mov
shlb
sbb
jmp
and
mov
add
cmp
pushf
aaa
lods
and
cs
ss
mov
mov
fwait
push
adc
push
push
pop
pop
push
xchg
leave
xchg
mov
daa
shlb
inc
inc
shll
iret
jp
movsb
mov
mov
add
pop
bound
ja
inc
enter
lcall
mov
mov
inc
test
jle
out
fildll
pop
in
filds
imul
xchg
add
mov
xchg
jecxz
sub
jp
xchg
ja
das
arpl
rcrb
ficomps
ss
sarb
fs
add
loope
out
lea
jae
pop
int3
dec
lret
dec
les
sub
cmc
enter
sub
adc
das
and
mov
cmp
and
loopne
dec
pop
mov
int
push
enter
cmp
cmp
and
mov
arpl
out
sub
sbb
xchg
popf
cmp
outsb
xchg
std
inc
inc
cmpsb
pop
sbb
sahf
movsl
stos
cld
sbb
push
push
cmp
xor
scas
push
jnp
xor
imul
sbb
sbb
lds
aad
push
push
push
xor
aad
and
sbb
and
arpl
pop
mov
aas
pop
scas
or
insb
fcomip
xchg
ljmp
and
push
je
scas
loopne
iret
push
std
loope
xchg
iret
mov
dec
xor
adcl
insb
leave
lret
sub
cmp
out
rcll
out
pop
mov
jmp
stos
xchg
int3
inc
mov
bound
and
mov
xchg
or
pop
mov
and
cmp
dec
int3
int
les
sub
jle
xchg
xor
out
dec
and
cmp
xchg
jo
inc
sub
adc
std
push
fbstp
jge
popa
nop
push
inc
add
jnp
cmpsl
icebp
inc
aaa
sbb
sbb
inc
pop
stc
lahf
ret
xchg
aam
mov
add
arpl
mov
int3
fcomi
lods
lods
ds
ss
ja
in
scas
add
mov
push
push
popf
dec
or
pop
push
push
out
insb
pop
jg
stos
dec
leave
pop
sbb
push
pop
outsl
imul
sahf
sub
push
and
dec
fdivrs
dec
dec
cmp
xor
inc
in
int
push
mov
rol
fbstp
faddl
pusha
mov
out
xchg
mov
cmpsb
push
out
xchg
aam
cld
pop
mov
leave
das
push
std
sbb
push
mov
pushl
mov
push
mov
lods
xchg
aas
dec
inc
pushf
sub
nop
sahf
mov
add
iret
xchg
cmp
push
aaa
arpl
pop
push
mov
push
rcll
in
jbe
adc
cmp
inc
insl
stos
xor
fists
or
cwtl
in
mov
sub
cmp
jecxz
pop
cld
rolb
pop
jecxz
mov
stos
mov
push
das
inc
clc
repz
arpl
aam
ror
jno
hlt
xchg
cmp
pop
mov
cmpsl
pop
popa
mov
sub
sbb
pop
sbb
and
lds
pushf
imul
popa
aam
popl
push
inc
and
outsl
xchg
ss
xor
or
jg
daa
and
cmp
pop
inc
jnp
xlat
imul
mov
out
mov
sbb
cmp
mov
cli
mov
adc
inc
dec
xlat
mov
leave
dec
xor
aad
or
jb
xchg
cmp
pop
mov
mov
pop
icebp
mov
or
ss
mov
out
sahf
ljmp
mov
jge
stc
push
jno
lret
fstpt
push
cltd
loope
push
inc
and
cwtl
adc
test
push
sbb
cmpsl
scas
in
bound
fwait
cmp
negl
fmuls
fistpl
daa
addr16
adc
repz
loopne
inc
add
sbb
sbb
in
cmp
call
sub
data16
cmc
push
jp
mov
mov
pushf
outsb
shlb
inc
ja
mov
adc
mov
gs
push
adc
mov
mov
mov
mov
sarb
mov
hlt
sti
aam
push
pop
cmp
pop
enter
cmc
cmp
ret
ss
mov
dec
fsubl
sub
ljmp
fisubrs
push
cmp
hlt
push
arpl
imul
push
mov
mov
inc
int
jo
and
fsts
popa
sbb
mov
dec
dec
push
loope
ss
into
ljmp
das
sbb
mov
adc
stc
stos
ljmp
cmp
stos
mov
mov
inc
xor
cltd
mov
imul
jb
lods
cld
push
push
fiaddl
lods
xor
and
mov
cs
scas
movl
sub
dec
test
cmpsl
mov
out
mov
inc
jne
mov
lea
or
repz
pop
cmpsb
out
xor
jg
push
mov
dec
jno
stos
sub
imul
or
lock
loop
lods
jmp
sbb
insb
clc
dec
mov
jecxz
scas
jge
pop
les
fs
adc
adc
pop
rcl
ficoml
cmp
jb
lods
push
aam
stos
lcall
sub
imul
push
call
cmp
xor
pop
mov
adc
lods
adc
adc
movsl
cld
push
mov
shrb
add
push
iret
mov
enter
scas
mov
sbb
push
jmp
cmp
adc
call
shlb
test
mov
sub
sub
sub
insb
mov
xchg
xor
into
repnz
cld
jge
jb
cmp
dec
mov
es
lahf
push
sub
test
mov
cmpb
je
xchg
out
jae
insb
dec
sbb
add
cmpsl
lock
pop
jecxz
dec
pop
or
jnp
jns
mov
out
pop
xor
sub
mov
xchg
addr16
ret
xchg
jp
popf
and
adc
int
fwait
aad
pop
shrb
rorb
dec
push
mov
lds
adc
mov
or
xchg
in
inc
test
arpl
sub
fsubr
negb
sub
inc
xchg
cltd
cmp
ss
pop
cli
or
jbe
stos
sub
inc
in
repnz
add
lock
push
push
inc
xchg
mov
aam
dec
ljmp
dec
cs
scas
add
call
cli
or
cmp
out
dec
mov
dec
mov
cld
push
fdivrs
xor
pop
popa
sbb
xchg
cltd
faddl
imul
cmp
insl
aaa
movsl
add
call
xchg
and
ja
pop
popf
lea
or
push
imul
rorb
jae
cmc
push
mov
and
pop
jg
jp
les
rcrl
movsb
mov
sahf
mov
push
pop
mov
lcall
or
mov
pop
mov
add
cmc
loop
imul
loopne
pop
mov
mov
jge
mov
imul
push
icebp
gs
cs
mov
sbb
pop
aaa
mov
xor
cmp
sbb
or
dec
add
xor
lahf
and
dec
cld
cmp
in
mov
jbe,pt
mov
push
popl
icebp
call
fldcw
clc
inc
mov
dec
add
and
lret
fdiv
cmp
into
insb
lock
out
sbb
adc
push
jne
jnp
sub
sahf
cs
dec
fildll
cltd
jbe
xor
add
sub
fadd
filds
insb
mov
jp
push
or
test
repnz
mov
sbb
and
cs
sbb
ds
stc
adc
insl
out
sti
imul
pop
andb
xchg
bound
push
xchg
lods
mov
dec
dec
insb
fsts
or
jae
insb
push
push
jo
mov
ret
adc
stos
inc
push
dec
shrl
pop
jl
leave
jge
lods
jb
dec
aas
stos
xor
and
cld
daa
fidivrl
inc
aad
and
movl
stos
xchg
inc
scas
xor
mov
mov
or
int
sbb
xchg
stc
xor
push
push
lcall
addb
dec
adc
adc
pop
int3
push
push
arpl
mov
inc
mov
mov
push
jle
jecxz
push
imul
xchg
cld
ret
stos
and
scas
pushf
int
movsl
xchg
icebp
xor
les
jo
sub
jl
and
pop
dec
and
xchg
out
scas
subl
cs
inc
push
imul
gs
mov
je
mov
fwait
fmull
popf
mov
push
xchg
rcrb
hlt
inc
test
dec
jb
jae
loope
movsb
push
xchg
dec
sub
test
sbbl
cmpsb
popa
aad
dec
getsec
outsb
xor
push
mov
and
es
cwtl
xchg
aam
sbb
out
add
cs
sub
adc
scas
adc
adc
and
sti
stc
or
cmc
push
stc
jge
push
or
call
adc
pop
ret
or
mov
test
repnz
inc
cmp
xchg
test
inc
clc
jecxz
stc
mov
mov
test
movsl
xor
sbb
inc
sub
lahf
pop
lock
arpl
push
xchg
pop
mov
sub
mov
mov
shll
xor
push
xchg
mov
test
adc
xchg
pop
sbb
mov
sub
fisttpll
sbb
pop
iret
shl
xchg
and
push
arpl
jp
adc
bound
dec
test
or
lds
imul
mov
xor
adc
sub
xchg
idivb
push
sub
and
call
push
mov
aam
fsubrs
jbe
shrb
adc
in
pop
lods
loop
cwtl
push
lea
enter
push
mov
inc
adc
les
dec
iret
ficoml
pop
fisttpll
out
enter
insl
xchg
jmp
mov
pusha
sub
jnp
insl
movsl
sbb
inc
jmp
cli
insl
jg
xchg
pop
xorb
cltd
inc
dec
pop
xor
arpl
add
push
andl
popf
xor
sbbb
mov
fwait
sbb
and
jge
xor
jnp
jno
xchg
outsb
add
out
ret
pop
dec
int3
ds
and
daa
dec
cmp
mov
sbb
sbb
jne
push
jb
xchg
mov
cmp
imul
jg
mov
mov
ret
adc
filds
push
scas
pop
push
fiaddl
mov
fnstenv
push
jnp
mov
cmpsb
test
jmp
daa
fcmovnb
icebp
insl
aaa
add
fldl
rcll
fdiv
int
stos
ret
dec
sbb
xchg
loop
repnz
xchg
xchg
and
jmp
adcl
pmullw
faddp
adc
push
std
mov
in
adc
je
xor
dec
jne
enter
mov
xchg
push
cmp
fsubs
out
add
outsl
mov
mov
popf
jl
and
sub
mov
mov
sbb
push
sub
fsubs
jge
jae
rorl
adc
jmp
stos
inc
insb
fiaddl
lcall
and
ret
xchg
lret
cmc
dec
jae
jae
aaa
mov
lcall
lods
push
inc
int3
imul
inc
push
lock
push
xchg
lcall
dec
cli
cmpb
test
pop
add
jmp
enter
insl
cmp
push
mov
cmp
dec
jne
rorl
int3
cmp
movsl
outsb
int3
pop
mov
or
mov
dec
cwtl
xor
push
jnp
cltd
mov
jb
fimull
mov
imul
aad
fsts
mov
fucompp
rcrb
xor
stos
cmp
es
icebp
les
mov
or
add
add
xchg
cmpsl
inc
lods
jecxz
inc
mov
sahf
jmp
loopne
popa
icebp
in
pop
jecxz
jb
pop
or
divb
push
xor
mov
addr16
push
or
in
clc
idivl
and
imul
ficomps
sub
in
mov
rorl
faddl
lea
xor
push
mov
decb
test
icebp
or
add
pop
enter
inc
ja
push
cltd
jno
mov
pop
enter
xchg
aad
push
and
inc
sbb
test
fmuls
ds
dec
js
adc
sbb
and
ret
iret
add
mov
cmp
mov
cmp
mov
dec
mov
xchg
cmp
adcl
push
popa
pop
imul
dec
xor
call
push
popa
mov
in
stos
movsl
decb
scas
leave
mov
jb
mov
mov
ret
icebp
push
fnstenv
or
sbb
outsl
or
test
cmpsb
in
vfmadd132sd
loop
pop
cltd
lahf
jmp
shlb
sbb
jecxz
insl
adcl
mov
mov
sbb
cmp
xor
icebp
cli
repz
mov
hlt
cmp
xor
dec
nop
adc
mov
ss
sbb
stc
xlat
fnstenv
adc
int3
dec
int
push
lods
xor
iret
test
add
sub
mov
rclb
repz
sub
xlat
push
in
or
mov
insl
mov
pop
xor
mov
push
mov
in
xchg
es
rclb
xor
adc
mov
cmp
cld
ret
mov
dec
cli
stc
inc
jnp
into
adc
inc
or
ret
mov
jmp
mov
out
out
fbld
out
ss
dec
cmp
mov
lods
imul
mov
outsb
out
sub
push
aas
mov
loope
stos
scas
push
xlat
mov
movsl
sbbb
dec
dec
mov
mov
dec
dec
pop
add
bound
mov
mov
adc
mov
push
dec
imul
add
xor
mulb
aaa
sub
das
fwait
test
dec
dec
pop
sti
sub
lret
dec
add
les
cmp
xchg
loop
in
int
aaa
sub
mov
push
aaa
push
mov
mov
out
cmpsl
cli
mov
mov
ljmp
xchg
jae
movsl
fidivs
jno
xchg
ljmp
push
pop
addl
mov
outsl
in
push
sub
aam
ljmp
mov
jno
sbb
or
int3
mov
ljmp
pop
das
or
int3
fisubrl
mov
add
pop
js
bound
cmp
cmp
test
mov
insb
lret
add
out
arpl
sysenter
lds
dec
aas
lcall
xor
cmp
mov
push
pop
loopne
fnstsw
push
inc
push
pop
int
out
push
pop
sbb
fisubrs
cmp
dec
je
testl
mov
dec
mov
ret
adc
sbb
xor
icebp
outsb
mov
fimull
sub
into
jnp
xor
aad
lea
cmp
aaa
ss
loopne
jl
fsubl
adc
cmc
shl
mov
orb
dec
lcall
xor
test
je
out
dec
pop
vmovss
adc
shrl
fiaddl
or
pop
xor
pop
lods
je
pop
fucomp
cli
mov
ret
je
xchg
xor
ja
std
icebp
das
icebp
xchg
sahf
repnz
mov
rcll
cmp
fists
and
ds
sub
ldmxcsr
sub
jmp
mov
scas
push
adc
popa
leave
test
test
out
mov
frstor
fwait
ret
cmpsb
loopne
aas
popf
cmpsl
imul
push
loope
inc
mov
sbb
enter
dec
sub
xchg
xchg
or
sbb
pop
sbb
jp
inc
and
rorb
cmp
pop
pusha
mov
enter
add
mov
jle
adc
xor
mov
pop
mov
hlt
notb
cwtl
out
aad
sti
add
call
dec
pop
adc
clc
ficoms
data16
cld
mov
aaa
xchg
ja
in
sub
subb
xor
outsl
xor
xchg
outsb
mov
mov
jbe
fwait
xor
enter
in
xor
dec
sbb
cs
xor
je
lcall
xchg
cmp
repz
fidivrl
push
inc
jp
sbb
or
out
loope
mov
outsb
pop
push
cwtl
clc
or
bound
outsl
faddp
pop
sahf
in
fbstp
jb
out
inc
pop
jge
fs
sub
out
and
or
add
jae
scas
pusha
push
aad
fstpl
and
movsl
inc
dec
into
mov
mov
in
imul
testb
sub
enter
xchg
push
sub
daa
fidivs
mov
notl
ucomiss
jo
addr16
aad
mov
fcompl
rorb
sub
pop
mov
lahf
das
out
jbe
std
out
pop
aaa
sbb
mov
xor
dec
faddl
pop
jmp
mov
cld
loop
mov
or
mov
ljmp
sub
mov
mov
mov
xchg
mov
lcall
pop
pop
dec
rolb
call
push
cmp
pushf
mov
imul
sbb
adc
sbb
mov
imul
sbbb
stc
repz
jo
fsubrp
jmp
dec
mov
dec
push
arpl
xor
mov
imul
push
in
addl
aam
lock
jp,pt
pop
mov
mov
mov
in
insb
aam
mov
js
sub
stc
jo
inc
mov
aad
cld
dec
add
mov
add
and
into
cmpsb
add
lea
mov
out
and
les
dec
add
cmc
insb
inc
inc
push
push
lea
jl
loope
ret
pop
outsl
jp
jns
adc
jne
popa
adc
test
daa
mov
dec
or
popf
fwait
leave
flds
inc
int3
clc
lahf
cltd
adc
sub
mov
adc
testb
jbe
fnstcw
xor
lock
fnsave
inc
inc
mov
mov
jae
pop
stc
add
fwait
std
leave
lret
push
mov
inc
int3
sbb
pusha
aam
cmp
mov
cmp
or
cmp
inc
loope
aaa
fs
mov
andl
push
fdivrl
inc
mov
adc
out
jo
jnp
pop
jns
stc
std
mov
pcmpeqd
fldcw
and
stos
popa
sub
psubb
hlt
inc
aam
loope
aad
add
add
push
dec
icebp
lods
pop
xlat
data16
sub
dec
pop
gs
bound
sub
fs
lahf
int
add
dec
popf
imul
pop
jne
dec
lods
xor
jg
sub
arpl
cmp
loop
xor
cmp
pop
mov
jns
lret
mov
mov
sbb
loopne
orb
jnp
xchg
lea
inc
loop
hlt
fcmovnu
sahf
jecxz
bound
mov
or
cmp
and
pop
jb
fistpl
dec
ja
fstl
out
or
or
pop
dec
out
jns
inc
mov
lret
test
mov
mov
mov
fisubs
sub
cmp
aaa
and
xchg
ret
mov
aam
shll
dec
std
add
xchg
stos
pop
cmpsb
jnp
outsl
xchg
mov
pop
adc
and
adc
pop
int
int3
mov
and
push
pushf
mov
js
and
and
mov
arpl
je
mov
or
std
ss
cs
pop
adc
jnp
and
sarb
sub
inc
pop
jecxz
add
xchg
jne
sbb
mov
pusha
fldenv
fsubr
jnp
add
call
jno
push
idivb
stos
pop
jmp
mov
sub
fisubrl
mov
js
sub
pavgw
xor
mov
scas
nop
and
outsl
mov
lret
insb
movsl
jmp
in
adc
dec
sbb
jmp
adcl
xor
dec
sub
sbb
sbb
iret
dec
dec
shlb
into
leave
xor
sbb
push
mov
shr
enter
jmp
fwait
dec
out
mov
into
or
dec
sbb
adc
lods
add
ret
int
ljmp
adc
add
mov
or
lret
inc
fiaddl
mov
insb
and
gs
test
push
sbbb
cmp
push
and
fs
dec
cwtl
test
pop
jne
cmp
hlt
jp
and
push
call
jne
enter
mov
lods
jle
push
inc
dec
in
push
and
mov
pop
aam
push
fisubrl
mov
pop
or
shll
in
je,pn
dec
imul
mov
or
imul
inc
sub
je
inc
cmpsb
lahf
adc
cmp
loop
jecxz
outsb
ret
pop
out
inc
xor
sub
shll
sbb
pop
addr16
clc
test
sub
aam
mov
pop
hlt
cli
xchg
je
mov
data16
inc
xchg
cmpsb
adc
sub
pop
jo
cmpsl
pushf
xchg
out
adcb
cmp
push
mov
ljmp
xchg
mov
add
jl
sbb
dec
mov
jle
lds
lahf
repnz
jns
pop
xor
sub
mov
ljmp
cmp
push
fwait
inc
repnz
jns
mov
imul
bound
loope
push
inc
dec
ror
sbb
cmp
push
sbb
sbb
int3
orb
fstpt
and
pusha
jno
in
inc
sar
mov
sub
mov
sbb
pop
push
sub
imul
shlb
in
mov
stos
mov
jmp
dec
push
jg
enter
test
fisubs
out
pop
in
sbb
nop
hlt
loop
nop
das
pop
push
imul
mov
ds
cmp
clc
shlb
cs
and
out
or
mov
cmp
jbe
out
mov
jnp
or
xchg
pop
adc
fwait
call
fnstcw
hlt
jp
cmp
pop
push
pop
xchg
lods
sti
push
inc
mov
dec
and
addr16
adc
mov
stos
scas
or
js
jl
mov
sbb
int3
hlt
xchg
cmpsb
inc
mov
aam
cli
roll
cmpsb
in
jecxz
leave
xchg
mov
fildl
add
sub
push
arpl
jns
push
adc
inc
fldt
fsubl
fs
loope
xchg
jge
pop
mov
mov
or
iret
push
push
ja
incl
pop
xchg
mov
mov
bt
pop
mov
xchg
dec
popf
push
dec
call
lcall
cmp
or
loop
lahf
icebp
sti
mov
std
hlt
mov
pop
cmp
scas
out
iret
cmp
enter
bound
sbb
out
mov
stos
mov
arpl
mov
faddl
pop
js
pop
inc
cmpsb
data16
cltd
dec
adc
gs
inc
add
lods
xchg
inc
inc
add
cld
repnz
stos
pop
lods
lds
outsl
sahf
push
lcall
inc
insb
push
add
movsb
add
shrb
inc
in
test
enter
mov
adc
push
fnstcw
lods
cmpb
sbb
mov
xor
fnsetpm(287
int3
fwait
movl
jl
jg
push
inc
pushf
clc
cwtl
pop
adc
sub
pop
jg
stos
lock
test
insl
cmpsb
push
pusha
mov
imulb
cmp
pop
jne
jle
clc
push
fisttpll
rcrb
subb
ret
mov
push
pop
fsubrl
rorl
mov
imul
dec
lret
mov
adc
jg
mov
dec
adc
aam
in
push
loope
xor
notb
push
pop
jnp
inc
notl
xlat
push
jle
lock
in
repz
sub
lock
insb
hlt
adc
add
or
addr16
adc
fiadds
xchg
pop
jne
mov
inc
and
in
rcrb
pop
les
scas
inc
pop
push
cmp
cmp
nop
jl
int
and
push
mov
js
push
shlb
ret
outsl
enter
icebp
bound
out
out
xor
pop
xchg
cmp
jb
shll
stos
and
out
push
pop
cmp
sti
pop
out
inc
shlb
addb
or
ss
sbb
ret
les
out
push
jb
add
les
fcomps
mov
sti
mov
pop
sbb
gs
push
mov
in
iret
cmp
cmpsb
cmp
xchg
xor
inc
dec
lret
out
or
xchg
popf
mov
sti
sbb
scas
cmp
fldcw
cld
add
stc
ja
xchg
pop
mov
xchg
add
movsb
jl
icebp
add
es
push
mov
push
rcrl
mov
cmp
and
gs
mov
hlt
xchg
jle
out
cmpb
repnz
in
push
inc
int3
add
stos
dec
dec
adc
jnp
sbb
cmpsl
and
push
lods
push
and
and
cmp
ss
mov
mov
sub
push
stos
mov
pop
test
out
out
sbb
push
pop
hlt
daa
adc
je
dec
xchg
push
popf
sbb
dec
js
jmp
iret
nop
mov
test
pop
lock
iret
mov
mov
js
mov
fldt
push
scas
nop
sub
sarb
mov
fcoml
sti
jmp
ss
sub
push
ljmp
lds
addr16
push
and
into
leave
mov
mov
cmp
sbb
sub
js
lret
push
scas
enter
mov
adc
sarb
inc
lahf
insb
iret
mov
paddw
jmp
fidivrl
sub
scas
sbb
in
push
test
shll
inc
jbe
mov
push
dec
mov
sbb
mov
mov
sbb
xchg
mov
aad
scas
sub
jmp
aad
scas
lock
pop
movsl
and
jl
out
pop
add
sub
xor
cmc
sub
add
imul
mov
or
and
shll
xor
jne
add
add
mov
lods
adc
mov
popa
and
loope
fnstcw
jecxz
add
out
addb
fwait
jne
outsl
dec
inc
jp
push
scas
stos
add
and
fistl
dec
insl
push
jne
stos
outsb
cmp
mov
mov
sbb
cld
or
add
pusha
push
repnz
jmp
adc
and
data16
add
ljmp
mov
scas
and
sub
adc
jb
adc
sub
pop
in
xchg
mov
add
test
cli
pop
mull
repnz
pop
test
dec
cmp
cmpsl
les
fwait
xchg
xchg
xor
push
jle
mov
ret
xchg
or
stos
push
jmp
loopne
out
arpl
inc
push
lea
aas
adc
dec
out
movsl
xchg
add
xor
xchg
pop
add
pop
dec
cli
xor
push
fcoml
scas
cmp
les
dec
movsl
mov
xchg
and
out
inc
mov
jg
push
in
push
das
pushf
data16
xchg
out
popa
sub
sub
add
cmp
fldcw
cld
addr16
jge
insb
test
push
xchg
cmp
roll
loope
fildl
mov
insl
inc
push
out
mov
incl
loop
cmp
in
push
ljmp
and
xor
out
adc
negl
inc
addr16
jae
inc
in
add
xlat
and
mov
pop
fwait
xor
test
hlt
enter
add
mov
outsl
ja
int3
mov
inc
mov
xor
add
pop
jbe
lock
pop
jbe
daa
push
fstl
sub
adc
fildll
test
es
call
sbb
xor
neg
mov
in
pusha
jne
xor
mov
insl
mov
push
jnp
icebp
ss
adc
adc
mov
inc
mov
sub
push
fwait
cmp
and
cmp
stos
mov
js
loope
sahf
lcall
out
sbb
movsb
ljmp
icebp
xlat
iret
cmp
mov
jo
adc
ljmp
lret
or
xchg
inc
inc
adc
mov
js
mov
pop
jp
and
sti
call
lods
shlb
jb
jle
dec
test
lods
rclb
fmull
cs
jbe
insb
dec
fadds
testl
jle
fimuls
inc
mov
fiaddl
xchg
pop
clc
mov
jns
push
addb
xchg
in
dec
ret
xor
test
xchg
lret
int3
aad
mov
cld
setns
cmp
ret
test
stos
aas
pushf
pushf
and
sbb
xor
loop
mov
sahf
mov
and
dec
ret
sub
fwait
jl
xor
cli
clc
dec
clc
icebp
repz
es
fstp
insl
clc
aam
ret
push
cmp
mov
pop
scas
push
jp
data16
push
out
pop
lds
or
sti
es
in
cltd
xchg
push
jge
sbbl
movsb
pop
popf
inc
loop
shrl
mov
ret
adc
fnsave
dec
dec
movsb
and
sahf
inc
jmp
fisubrs
shlb
jbe
and
hlt
mov
mov
outsb
ja
loop
adc
mov
movsb
rcr
jne
dec
loop
mov
out
inc
jne
jns
out
xor
leave
ror
sbb
push
push
je
cmpsb
ret
inc
lcall
cs
rol
or
cltd
les
addb
jle
push
xor
inc
test
cmp
test
lock
sti
mov
repz
repnz
or
cmpsl
fbld
pop
inc
mov
or
lret
pop
inc
push
fsts
nop
popf
pop
sbb
movsb
mov
xor
jns
fstl
adc
out
rorb
cmpl
add
aas
cmp
mov
mov
rol
ret
xor
cmpsb
xchg
lcall
out
lahf
or
insb
hlt
jae
mov
stos
push
mov
mov
mov
mov
mov
lret
in
xchg
dec
clc
inc
or
addr16
push
or
mov
jb
inc
ret
pop
mov
stos
mov
mov
cmp
scas
sub
enter
js
mov
xchg
mov
fsts
js
mov
cmp
dec
out
loopne
aam
cmp
lock
pop
xchg
cli
insl
xor
rdtsc
jmp
mov
mov
push
pop
mov
jo
and
xchg
adc
or
hlt
dec
pop
xchg
jecxz
icebp
cld
pop
fidivs
fs
pop
jno
lcall
xor
push
sti
jmp
repz
mov
jecxz
cmp
cmp
test
push
xchg
insl
sbb
xor
in
xor
int3
lret
fcoms
inc
fmul
sub
or
adc
mov
addb
push
pushf
loopne
fadd
in
je
sbb
fidivrl
sti
clc
mov
mov
push
xchg
test
and
and
xor
into
icebp
repz
adc
test
scas
xor
mov
out
hlt
fisttpl
adc
imul
fadd
add
mov
push
cmp
outsl
sbb
xor
pop
pop
mov
mov
mov
and
bt
jb
push
sub
add
jge
icebp
rcrl
sub
xor
cmp
ret
and
aad
inc
das
mov
lahf
dec
aas
insl
pop
mov
into
mov
or
fwait
dec
sarb
mov
or
mov
das
inc
xor
test
fcompl
push
inc
int
lock
dec
insl
adc
mov
popa
icebp
cmc
shr
bound
mov
pop
andb
mulb
andb
fwait
xor
in
mov
and
push
cltd
xchg
pop
gs
imul
push
inc
push
adc
movsb
sahf
push
mov
addr16
xor
das
add
subl
xchg
fwait
dec
xchg
xor
xchg
es
je
test
int3
mov
jge
lods
push
rcll
fs
repnz
rorl
push
adc
push
sub
stos
xor
outsl
mov
jle
imul
xchg
pop
scas
xchg
jbe
jnp
clc
cmpsb
jp
inc
pop
mov
jle
ffree
ja
cmp
push
addl
pusha
in
sbb
and
xchg
mov
les
sbb
inc
xor
or
fidivrs
icebp
lret
aaa
sbb
pop
jb
idiv
or
aam
loopne
mov
mov
std
outsb
andb
xor
push
xchg
adc
cld
loopne
adc
jns
mov
loopne
icebp
dec
dec
arpl
or
lret
lahf
jge
add
pop
fcmovbe
push
mov
ret
pop
aas
xor
fincstp
daa
ds
insl
mov
lods
mov
pop
int
fmulp
ret
mov
andl
jb
lock
dec
fldcw
lret
dec
std
and
stos
sub
mov
inc
mov
adc
fwait
les
or
mov
inc
jg
call
rcrl
stc
mov
outsl
out
fnstsw
pop
pop
or
adc
stos
jo
xor
jmp
data16
mov
mov
jl
push
cmpsb
aas
int
int3
dec
outsl
lods
xchg
cmp
jae
mov
inc
dec
addb
jl
frstor
repz
mov
pop
stos
jo
scas
push
mov
xchg
insl
std
and
sub
jns
jmp
in
into
and
push
leave
add
dec
mov
or
mov
dec
dec
lock
mov
shlb
xor
push
cmp
subb
or
push
es
int3
cmp
sbbb
add
es
lret
iret
ja
jp
lods
inc
stc
out
push
mov
xor
push
xor
shll
das
jge
aas
popa
sarl
push
pslld
loopne
mov
push
popf
pop
cmc
aam
inc
xchg
mov
and
cltd
stos
and
imul
and
int3
loopne
ss
add
dec
jno
adc
sub
test
int
inc
ljmp
cltd
jae
mov
lahf
cli
test
jge
pop
lds
mov
add
jg
jle
movsl
in
in
dec
push
pop
add
outsb
jae
aad
stos
inc
outsl
jecxz
jl
jge
mov
dec
sub
aad
cli
pop
int
jbe
xchg
mov
dec
mov
sub
dec
adc
or
inc
xchg
xor
add
fidivl
pop
sbb
loope
cmpsl
stc
sub
add
std
push
adc
test
insl
int3
stc
es
jae
adc
fisubrs
xorb
sbb
lahf
jg
mov
in
fs
push
mov
ret
and
out
ret
push
sub
iret
or
sbb
psubb
faddl
push
mov
mov
xchg
pushf
mov
lods
std
lahf
adcl
das
mov
das
pop
xchg
pop
pop
sahf
pusha
scas
aaa
cmp
pop
loop
into
cmpsb
dec
sbb
jbe
test
cwtl
mov
ja
dec
arpl
cmp
mov
in
movsb
or
sbb
push
insl
outsb
shll
das
repnz
cwtl
add
loopne
sti
push
jnp
mov
dec
lds
insb
push
repnz
pop
jg
sub
adc
aaa
dec
cmpsb
es
sbb
mov
or
or
mov
mov
jmp
stos
loop
push
cmp
js
das
out
test
inc
les
xor
cli
test
xor
stos
cld
mov
push
xchg
scas
add
in
dec
jne
lock
decb
push
shll
out
sbb
loope
mov
fwait
outsl
fidivrl
inc
xor
shlb
mov
mov
mov
popa
xor
mov
stos
out
jmp
or
jl
mov
scas
cmpsb
push
movsl
sahf
xor
mov
push
pushf
or
xor
punpcklbw
jle
jbe
lcall
inc
xchg
jg
mov
jg
add
shlb
mov
mov
imul
pop
sub
movsb
dec
mov
shlb
mov
repnz
jne
push
lods
or
jecxz
popf
imul
fwait
aaa
mov
mov
int
push
in
jbe
mov
lods
add
cmpsb
xor
pop
xor
pop
add
jecxz
sbb
jb
and
cmp
int3
pop
testl
sbb
leave
addr16
push
imul
cmpl
sbb
das
sub
les
sbb
nop
push
arpl
int
pop
and
nop
cmc
test
std
lea
mov
aam
aas
cwtl
push
mov
add
push
sbb
adc
push
in
inc
sbb
jne
cmpsb
sbb
sub
fwait
pop
aad
faddl
dec
addr16
adc
popa
in
push
arpl
adc
jp
shlb
push
iret
jecxz
mov
and
jbe
push
cmpsb
mov
jecxz
je
mov
pop
xchg
and
aas
xchg
cmp
fidivrs
xchg
aas
mov
dec
arpl
out
inc
out
adc
mov
cmpsl
insb
movsl
pop
jle
pop
push
loope
push
sbb
mov
jecxz
test
adcl
lock
mov
in
pop
das
and
data16
int
pop
or
aas
and
or
idivl
test
imul
sbb
repz
jge
pop
add
mov
dec
testl
mov
cs
int
inc
mov
loopne
pop
xlat
adc
pop
mov
jnp,pn
xchg
popa
cmp
shlb
inc
idiv
rcrb
xchg
mov
ds
outsb
mov
or
mov
fwait
jecxz
mov
je
and
in
cs
push
add
ja
lret
mov
cmp
rcrb
push
pop
push
add
xor
dec
dec
bound
ds
push
cmp
stos
out
xor
cmp
in
cmc
cmpsb
sahf
divl
das
popf
out
int3
sbb
mov
cmc
test
jns
inc
cwtl
test
in
pusha
mov
and
mov
pushf
push
aaa
and
je
mov
daa
insb
mov
jns
fcomps
and
gs
ret
loopne
and
inc
or
mov
pop
add
mov
stc
mov
dec
lahf
push
nop
push
js
mov
pop
int
cmpb
mov
sub
out
sub
inc
aam
aad
lock
in
daa
stos
rcll
ret
fcmovnbe
incb
dec
mov
inc
iret
and
sbb
inc
clc
jb
sub
xchg
scas
shl
sahf
push
mov
mov
xor
and
mov
dec
sbb
sbb
fbld
pop
xor
int
xorb
aad
rorl
or
pop
rorl
add
push
mov
hlt
push
mov
cs
push
inc
xchg
add
mov
out
jl
negl
dec
lret
stos
dec
fisubrl
mov
cld
xchg
aaa
xor
mov
mov
lret
push
fwait
in
cmp
inc
push
nop
mov
js
loop
pop
fbld
xchg
jne
cmp
mov
insb
add
mov
lds
loopne
sarl
add
rcl
repz
scas
push
mov
mov
mov
dec
sahf
sahf
ret
scas
sbb
divb
cwtl
arpl
inc
daa
sub
mov
test
out
popa
jb
sbb
mul
jnp
dec
loopne
dec
lret
jns
pop
cmp
dec
repz
lods
cwtl
push
mov
mov
dec
add
enter
adc
xchg
cmpsl
push
rcll
add
push
sub
sbb
std
pop
in
jecxz
loope
cmp
jne
xlat
xor
pusha
mov
jle
mov
jae
subb
out
cs
fndisi(8087
clc
sub
inc
dec
leave
push
xor
jb
jle
mov
push
cmp
lahf
mov
xor
mov
sub
repnz
add
adc
out
fdivs
sub
jmp
andb
and
push
mov
adcl
loopne
test
xor
sbb
push
cmp
rcrl
frstor
gs
pop
rorl
into
stc
scas
sbb
cltd
loopne
mov
cmp
jne
jae
and
aad
testl
jl
mov
push
addr16
pop
xchg
int
inc
inc
dec
test
inc
ljmp
and
jns
testb
jl
mov
pop
fcmovnu
mov
cmp
jmp
fidivrl
sahf
fisttpll
adc
outsl
pop
shll
dec
pusha
pop
outsb
orl
outsb
enter
sbb
aad
dec
fsts
popa
mov
and
fwait
mov
repz
addb
jnp
jne
xchg
out
or
popa
push
cmp
jp
mov
mov
or
fcompl
subb
xchg
mov
aam
incl
and
mov
les
jnp
mov
clc
aam
inc
xor
mov
cmpsb
add
int
mov
fildll
push
jbe
push
sub
pop
sub
mov
xlat
mov
adc
mov
mov
inc
ljmp
mov
test
pusha
sub
in
sbb
test
mov
mov
dec
das
idivb
and
cmp
shlb
arpl
or
xor
hlt
xchg
shlb
xchg
lcall
es
scas
cltd
jle
cmp
rcll
cmpsb
xor
fdivrs
cmp
cmc
push
pop
fstp
test
push
sbb
mov
push
inc
mov
lcall
inc
and
in
gs
icebp
inc
add
out
shll
mov
pusha
jne
out
mov
out
jb
loope
and
jnp
jmp
dec
popf
and
xor
xchg
mov
das
sub
fcompl
push
xor
xchg
cmp
mov
adc
mov
orl
mov
aam
xchg
movsb
add
mov
xlat
clc
xor
xchg
mov
mov
outsb
push
and
lods
shrl
das
mov
es
shrl
lds
dec
xchg
jnp
mov
xor
shrb
arpl
lahf
stos
push
xor
push
jle
cmp
jg
and
clc
xchg
aaa
out
sbb
and
jbe
loope
mov
pop
mov
xchg
mov
mov
add
and
xor
sub
pop
mov
sarb
or
push
mov
in
scas
sub
rsqrtps
add
push
or
push
add
xlat
xor
iret
pop
scas
insl
fcomps
out
sbb
bound
addl
shlb
addr16
dec
lcall
sub
sti
movsb
addl
add
pop
jg
das
fisubrs
arpl
mov
repnz
test
push
push
rcrb
cmp
test
fdivrs
dec
iret
inc
mov
cmp
es
jg
in
out
and
push
nop
int3
xor
mov
dec
xor
rol
push
or
dec
fidivrs
loope
test
jbe
mov
mov
pop
mov
mov
sub
jbe
push
dec
fdivrs
fcmovbe
mov
sbb
insb
hlt
pop
addr16
dec
ret
cli
adc
xor
and
sub
add
out
loope
stc
movsb
xchg
push
mov
and
add
pop
or
flds
pushf
insl
stc
cmc
ss
es
cmpsb
push
scas
xor
cmp
fdiv
popf
test
push
cli
enter
or
push
jo
push
sbb
mov
xchg
pop
xchg
dec
xchg
pop
int3
or
jae
adc
aaa
shrl
sub
sub
dec
adc
mov
cmp
jmp
cld
mov
pop
push
adc
inc
xchg
add
xor
mov
and
mov
adc
add
in
pop
dec
lahf
dec
mov
repz
incl
jns
stc
cmp
mull
pop
adc
or
bound
mov
aas
insl
mov
in
push
xor
cmp
pop
xchg
or
adc
sbb
repz
cmp
mov
sahf
and
icebp
out
lret
ss
test
sub
mov
pop
add
add
inc
mov
inc
sti
mov
cmpsl
push
divb
lock
pop
stos
add
mov
sbb
sbb
adc
rcrl
push
cmp
nop
xchg
or
sub
xor
ret
xor
xchg
xor
push
stos
add
add
data16
and
and
shll
jne
pop
mov
divl
adc
test
stc
xor
mov
mov
fidivl
sub
sbb
inc
mov
dec
and
and
push
ds
mov
add
inc
push
sbb
aad
mov
xor
mov
lret
pushf
outsl
and
gs
push
and
push
sbb
pop
loop
ret
mov
or
xor
rol
jo
lret
push
js
and
pop
cmp
in
jg
aad
sub
shrl
xchg
xchg
push
fnstcw
pop
adc
sbb
jo
jbe
mov
loopne
push
dec
pop
mov
idivl
rclb
pop
sub
xchg
pop
jbe
in
xor
gs
and
iret
out
mov
out
xchg
frstor
testl
mov
jne
mov
daa
test
adcl
sbbb
gs
gs
pop
lea
das
andl
cltd
pop
mov
xor
cmc
pop
mov
shl
add
mov
jns
mov
mov
adc
outsl
fistpl
adc
jb
or
push
test
add
mov
sahf
mov
dec
or
jp
out
mov
daa
mov
mov
and
imul
in
xchg
sbb
imul
pop
jns
mulb
pop
pushf
push
jno
push
fadd
shr
mov
adc
js
imul
or
or
xchg
mov
xchg
daa
adc
test
and
dec
and
add
mov
out
js
cmp
dec
xchg
orb
outsb
rclb
or
jae
outsb
mov
inc
int3
xchg
fimuls
mov
repnz
mov
mov
xchg
mov
gs
insb
fnstcw
dec
bound
ss
xor
ret
mov
add
inc
cmpsb
jno
fnstenv
ljmp
lret
sub
sarb
xor
and
push
aas
mov
repnz
inc
add
and
and
nop
or
xor
inc
dec
es
cmp
aaa
daa
cmc
movsl
xor
aaa
mov
into
into
ljmp
fidivrs
xor
stos
popf
outsb
cmp
mov
lds
lods
mov
icebp
insl
stos
pushf
test
test
out
std
scas
sbb
jg
jns
and
push
xchg
popa
inc
mov
pop
push
cmp
pop
xor
popf
jge
ret
push
jne
lcall
dec
jns
in
pop
jle
mov
fdivp
jecxz
push
sub
add
mov
jne
push
pop
or
and
mov
push
inc
daa
push
dec
test
int
or
jle
dec
xor
jle
outsb
jmp
stos
rclb
sbb
insl
adcl
aam
push
jl
pop
addr16
sub
mov
lock
je
mov
lods
xchg
or
in
fcomps
fmulp
cmp
dec
lret
or
mov
fstpl
pusha
lods
data16
in
dec
ja
push
mov
sub
nop
ljmp
adc
fisubl
dec
sbb
ret
jb
dec
cs
popa
loopne
push
or
pop
adc
sub
cli
add
adc
xchg
inc
inc
xchg
lret
lock
pop
add
cmp
pop
xor
or
jle
jnp
das
testb
lods
cld
shlb
cmovg
and
jbe
mov
jno
jbe
and
xor
and
jae
rcrb
mov
add
scas
sbb
mov
scas
lds
aas
lea
cltd
mov
insb
or
sub
les
adc
arpl
loop
pop
hlt
adc
sahf
ffree
inc
add
sti
xor
dec
xchg
fbstp
cmpsb
mov
in
loopne
lcall
test
bound
mov
adc
decl
mov
insb
adc
fcoml
mov
call
push
xchg
adc
cmp
ss
and
xor
fbld
push
sar
jno
les
push
insl
inc
sub
lahf
addr16
cmp
enter
fsubrl
cmp
xchg
pop
mov
idivl
xchg
jmp
pop
sub
mov
push
stos
fs
mov
jne
push
mov
push
sub
loop
rorb
outsb
dec
shr
mov
xchg
out
out
sarl
sbb
in
mov
mov
mov
xlat
mov
out
jb
pop
dec
das
sarl
pushf
popf
rorb
push
fsubrl
stc
aam
imul
cld
shll
aaa
jl
ficoms
lcall
js
push
sbb
adc
pop
sbb
mov
cmpsb
testb
repnz
cmp
or
lcall
mov
stc
inc
push
jecxz,pt
xchg
insb
scas
mov
pop
andl
fs
sub
insl
in
repz
test
stos
sub
ret
or
pop
mov
mov
cmc
push
or
adc
sub
or
clc
punpckhwd
test
jecxz
xchg
pop
ror
cmp
fimull
jl
mov
and
dec
aad
sbb
int3
es
inc
icebp
shr
xchg
jecxz
dec
pop
xlat
sahf
push
fsubrl
xchg
fadds
adc
mov
pop
mov
jne
lea
test
rclb
jo
mov
inc
cmp
in
mov
outsb
mov
ja
or
or
rclb
push
add
shll
push
cmpsl
mov
mov
arpl
xor
stos
imul
insl
mov
adc
pop
push
push
mov
lds
pop
xor
insb
dec
loopne
std
sarl
fwait
mov
xor
les
out
out
jbe
pop
fwait
daa
adc
pop
lea
insb
je
js
push
jns
jno
mov
pop
or
and
test
test
shrl
push
and
jo
arpl
movb
int
sahf
addl
adc
add
xlat
xlat
gs
push
loope
lods
gs
popa
cwtl
fmuls
scas
lret
lahf
mov
cmpsl
add
sub
ret
jns
mov
jl
cmp
or
scas
inc
push
or
rorl
xor
stos
mov
and
in
clc
sbbb
cmp
into
sbbb
push
pop
ss
scas
ret
andb
sbb
pop
dec
mov
sub
mov
ljmp
fstpl
imul
xchg
add
lahf
inc
cmp
mov
es
ret
out
inc
sti
sbb
push
ja
shll
xchg
push
mov
pop
cmp
int3
cmp
mov
mov
and
pushf
inc
je
lahf
incl
cmp
ret
and
add
jnp
push
adc
mov
push
push
dec
ret
popa
or
or
mov
jecxz
dec
shll
mov
cmovge
dec
ds
fcomps
sub
outsb
lret
lea
add
call
jbe
add
cwtl
mov
add
fildl
movsb
fmuls
jmp
mov
pushf
sub
repnz
push
call
data16
out
shlb
fcoms
cmp
mov
add
adc
mov
mov
out
cmp
scas
and
adc
push
es
sub
sub
int3
mov
mov
jb
out
es
scas
repnz
stos
aas
cld
sub
jae
push
inc
mov
and
mov
pop
movsl
jl
int3
push
xor
stc
or
int3
shlb
dec
test
insl
and
lea
mov
cmp
push
xchg
pushf
dec
inc
inc
mov
ljmp
cltd
insb
push
add
clc
adc
or
adc
ss
repz
movsb
data16
dec
lret
inc
sti
repz
lret
xchg
dec
dec
stc
xor
fdivrl
push
shrl
jecxz
lret
les
pop
mov
adc
imul
mov
pop
cmp
pushf
stos
mov
mov
push
cmp
add
mov
sahf
pop
test
inc
mov
cmp
es
sbb
lahf
ljmp
add
cld
stc
cmp
pusha
inc
mov
jnp
jae
dec
and
stos
and
jl
ja
enter
sbb
or
mov
clc
xchg
mov
sub
ljmp
repz
insl
fs
sub
sub
xchg
adcl
fists
fisubrs
inc
inc
mov
pushf
movb
in
ret
inc
xor
mov
mov
push
cmp
add
aaa
add
and
fisttpl
pop
faddl
outsb
insb
push
stos
push
dec
subl
cmp
xchg
push
fdivrp
je
mov
xchg
add
shrd
adc
ret
jns
sub
sub
insb
jmp
jbe
ret
cmp
push
xchg
pop
xor
sbb
inc
pop
rolb
and
push
pop
int
jmp
cmp
mov
xor
push
out
lods
inc
pop
inc
ja
iret
loopne
fists
ja
lret
into
mov
mov
clc
jnp
inc
es
pop
inc
push
cmpsl
fmull
mov
and
ds
shlb
sub
and
mul
mov
adc
ret
push
push
push
inc
sahf
dec
dec
and
fnstenv
repnz
mov
mov
jbe
mov
adc
pop
pusha
in
add
dec
loope
test
test
jp
and
mov
jbe
ss
pop
or
jo
pop
mov
mov
scas
pop
adc
shrb
push
or
test
int3
xchg
push
sbb
out
test
and
pop
jb
jnp
xchg
aaa
shll
and
adc
call
mul
pop
xchg
out
enter
rcrl
divb
mov
flds
test
loopne
push
xchg
or
inc
enter
insl
test
int3
jp
ret
cmp
mov
inc
push
adc
ret
stc
imul
int
inc
inc
jnp
cmp
lahf
inc
dec
in
popf
pop
clc
imul
pop
jp
pop
fildll
out
cmpps
sti
mov
fldl
fidivrs
xlat
or
jg
into
cmc
mov
orl
xor
push
push
popf
cltd
xlat
mov
dec
sub
or
mov
data16
mov
fidivs
dec
shlb
mov
jle
xchg
iret
mov
cmp
mov
jg
jmp
jmp
das
repz
mov
add
imul
les
bound
cwtl
jmp
es
rcpps
and
fs
shl
jg
inc
mov
fidivrs
sahf
push
addl
push
outsl
gs
lret
aaa
hlt
push
cmp
addr16
mov
and
adc
add
lcall
xchg
mov
insb
add
movsl
cli
mov
cmp
xchg
xchg
jg
daa
xor
stos
adc
add
je
fcompl
mov
inc
adc
repnz
xor
ret
mov
cs
sbb
cmc
sahf
push
pushf
outsb
ja
and
das
aad
xorl
insl
add
pop
add
incb
mov
mov
cmp
pop
fdivl
stos
cmp
and
xchg
repnz
inc
xchg
insl
mov
movsl
cmp
jb
dec
les
scas
ss
ret
push
push
ret
in
mov
into
mov
insl
mov
push
dec
mov
xchg
cld
test
iret
mov
lahf
cmp
jle
inc
xlat
add
mov
aam
sbb
add
xchg
ficompl
jp
mov
loopne
call
push
cmp
lea
bound
xor
pop
xor
fnstsw
shll
inc
xor
int3
push
pop
fs
pop
mov
mov
mov
lret
add
loope
in
push
mov
movsb
cmpsb
scas
mov
incb
test
push
decb
rol
stc
cmp
xor
push
stos
in
add
daa
dec
int
in
mov
or
fs
dec
cs
pop
inc
sub
xor
fldenv
clc
popa
xor
and
ds
dec
pop
insb
movsl
fdivrs
andl
mov
mov
cmp
jno
mov
sbb
fwait
adc
jmp
mov
mov
movsl
xchg
insl
pusha
xor
gs
outsl
mov
mov
add
lret
xchg
or
cmpsb
jbe
fildll
mov
push
jno
mov
test
mov
iret
mov
xchg
xor
loope
pop
out
scas
or
fnstsw
sbb
adc
sbb
xchg
pop
insl
aad
fucomi
movsb
es
inc
add
mov
cwtl
jno
mov
add
jge
cmp
mov
shll
loop
in
push
out
nop
cmp
xchg
and
push
add
aam
dec
jg
das
je
or
ss
push
sub
adc
repz
mov
dec
lock
xor
dec
nop
cltd
mov
sbb
mov
lock
cmc
sbb
testb
lea
xor
mov
loopne
mov
lret
btr
xor
movsl
imul
jo
inc
xchg
in
je
cwtl
mov
lret
jae
xor
aam
das
push
adc
push
sub
jl
mov
test
dec
mov
or
fwait
lahf
mov
mov
cmp
lret
xchg
sbb
add
xchg
lret
dec
popa
js
xor
sbb
cmp
mov
addr16
fs
xlat
stos
movsl
jbe
mov
loop
cmpsl
shlb
and
mov
inc
ret
mov
leave
and
push
adc
leave
filds
jge
pop
test
testb
mov
pop
pop
and
in
frstor
movsl
mov
pusha
arpl
sbb
push
sub
jnp
jns
cltd
repz
and
xchg
add
je
aaa
xchg
mov
push
or
into
mov
push
pop
mov
cld
sbb
outsb
scas
movsb
imul
in
cmpsl
jle
add
push
mov
mov
adc
test
mov
lds
lret
aaa
stc
jmp
xchg
xor
shl
scas
adc
jne
cmpl
inc
dec
mov
and
scas
lds
xor
pusha
cmc
fisttpll
outsb
jmp
subb
scas
cmp
mov
js
push
lret
in
lahf
dec
push
pop
popa
or
mov
mov
shlb
mov
lret
jp
mov
mov
lcall
cmp
jo
call
clc
pop
lcall
pop
data16
pop
pop
loope
mov
jg
fisubrl
sub
mov
cwtl
in
mov
shrl
sti
xchg
dec
daa
pop
pop
dec
dec
stc
and
sbb
mov
roll
xor
sub
fs
dec
shlb
xor
stc
adc
mov
mov
sahf
adc
inc
lcall
jmp
lret
push
gs
mov
push
xor
cmp
shlb
or
pop
mov
adc
push
cmp
inc
inc
test
gs
xor
jmp
inc
fucom
ss
push
sbb
push
pop
mov
dec
xchg
xchg
cmp
loop
adc
pop
mov
xchg
in
push
lahf
fcmovbe
imul
cmpsb
jg
xchg
jno
mov
or
and
add
lds
push
xor
inc
shll
xchg
jle
sbb
xchg
pop
cmp
inc
mov
xor
hlt
dec
mov
lods
and
aas
jae
stos
cmc
and
out
mov
sbb
push
push
xor
aaa
pop
orl
pop
lret
or
xchg
jl
lock
cli
xchg
cmp
les
loop
jne
xchg
mov
xor
add
mov
xchg
push
xlat
stos
out
mov
add
and
rcrl
mov
lods
punpckhwd
jp
js
xorb
add
hlt
addb
xchg
mov
clc
ret
ret
inc
sub
jg
push
push
sub
cltd
sub
inc
sbb
lcall
es
or
mov
sub
and
mov
icebp
lods
es
mulb
and
cwtl
dec
add
mov
dec
sbbl
xor
in
dec
and
or
jmp
or
fcmovu
fwait
xchg
ljmp
jle
lahf
fcom
push
or
shlb
push
rcrb
jge
dec
or
push
sub
lock
jbe
mov
rcr
sub
xlat
loope,pt
imul
push
jl
cmp
push
lahf
scas
add
lahf
cs
gs
jmp
mov
out
inc
imull
sub
stos
sub
add
add
dec
xchg
into
pop
adc
addr16
out
or
push
leave
cmpsb
rcrb
int
or
pop
push
jg
jbe
and
call
imul
les
imul
jo
fcmovnb
push
divb
sub
fwait
xorb
gs
adc
adc
icebp
ja
dec
insb
mov
in
ljmp
or
inc
loope
pop
push
enter
cmp
dec
arpl
cmpb
int3
dec
jae
nop
lock
and
mov
adc
pop
jbe
adc
cwtl
sti
notb
pushf
aam
cld
leave
mov
les
xor
mov
outsb
inc
pop
fcoms
cmpsl
pop
movsb
xor
mov
jmp
out
inc
sahf
aam
fsubs
stos
cmpsl
push
nop
push
bswap
sbb
sbb
pop
or
popa
fsts
cmp
adc
mov
mov
call
sub
ror
adc
pop
pop
jno
sbb
sub
push
imul
mov
aas
or
gs
stos
xchg
xchg
or
add
icebp
add
pop
insb
cmp
in
in
adcl
pop
inc
mov
lcall
icebp
xchg
jns
icebp
insb
imul
in
mov
idivb
out
and
loop
pop
arpl
lret
pop
xchg
xchg
inc
stos
add
outsb
icebp
or
inc
lods
es
and
mov
mov
repnz
movsl
call
xchg
push
xlat
cmc
nop
pop
aam
fdiv
addr16
sbb
inc
out
xchg
call
or
gs
pop
cwtl
push
xchg
aaa
stos
mov
xchg
jmp
mov
sub
jmp
stos
mov
mov
ret
test
sbb
xor
pop
insl
test
mov
ljmp
cmpss
jle
mov
mov
int3
add
mov
leave
and
inc
leave
or
lea
stos
mov
loop
leave
xchg
push
adc
mov
ror
test
pop
sub
push
jmp
sbb
or
mov
jg
cwtl
pusha
mov
sbb
cmp
pop
add
xor
jns
or
xchg
bndldx
in
mov
gs
and
cmp
hlt
dec
loope
mov
inc
xor
sbb
sbb
mulb
mov
xor
ja
hlt
cmpl
loop
adc
add
outsl
xchg
push
lods
pop
in
dec
add
mov
lods
movsl
insb
mov
daa
mov
inc
sahf
popa
stc
push
add
test
xor
push
stc
daa
jno
inc
mov
xchg
call
cmp
nop
in
mov
sarw
and
inc
pop
in
mov
test
xor
jmp
rclb
mov
adc
fsubl
or
daa
jge
test
ljmp
mov
push
inc
mov
xor
subl
ss
mov
xor
fwait
stos
cmp
mov
or
pop
add
or
fwait
loopne
add
adc
in
cmpsl
clc
pop
jo
jg
add
outsb
mov
cmc
and
xor
fisttpll
dec
je
push
fistps
pop
sub
or
pop
stos
stos
mov
sbb
push
lret
adc
or
and
mov
repz
insb
adc
sub
fwait
jnp
push
inc
xor
orl
and
lock
pushf
loop
btc
add
testb
push
pop
cmp
pop
sub
sub
jmp
xor
adc
negb
ljmp
add
in
aaa
mov
sbb
in
adc
movsb
jb
cmc
shlb
dec
gs
push
and
data16
aas
sbb
adc
mulb
pop
fmull
aas
pop
das
and
test
jp
jg
rolb
fstps
push
or
mov
leave
ret
push
test
jne
mov
faddl
and
pop
sub
movsl
pop
jnp
fcoms
test
push
sti
cwtl
and
inc
das
lcall
dec
adc
test
adc
mov
inc
mov
mov
sbb
jae
xor
push
mov
jns
push
and
xor
add
shlb
xchg
mov
sub
test
sbb
arpl
push
testb
fwait
pop
mov
insb
mov
mov
addr16
repz
fsubrl
in
out
in
mov
leave
mov
or
ret
mov
jle
jae
xor
jo
xor
ds
jne
inc
inc
push
dec
and
cmp
inc
jne
lret
pop
mov
mov
adc
clc
into
cmpsb
xchg
ja
push
outsb
or
sub
movsb
push
xor
mov
dec
or
and
mov
adcb
hlt
push
mov
cmp
jmp
out
fwait
jo
mov
in
int
adc
push
adc
pop
xchg
sahf
and
inc
adc
fdivrl
cltd
sbb
icebp
daa
jb
push
dec
cmp
int
cmpsb
lods
repnz
xor
mov
mov
test
sar
out
dec
lods
notl
or
jmp
push
loop
fldenv
push
push
jmp
idiv
or
jno
sarl
jecxz
ss
call
mov
repz
sub
pop
enter
inc
sbb
arpl
adc
push
dec
adc
mov
xchg
jmp
test
fs
test
shl
sar
lahf
mov
mov
xchg
nop
and
fucomip
imul
dec
xchg
popa
cmpsl
in
adc
adc
inc
mov
inc
dec
and
cmp
push
ret
mov
test
dec
cmp
dec
jmp
fwait
inc
jbe
leave
clc
mov
adc
push
shrl
shrl
out
inc
mov
pop
loopne
and
into
mov
cltd
imul
fcoms
jp
sbb
nop
nop
xor
lret
and
scas
clc
dec
push
inc
mov
cmpsb
aam
cmpsb
mov
mov
sarb
and
pop
mov
enter
gs
inc
lret
sub
in
insl
adc
mov
mov
and
fadd
dec
pop
arpl
pop
adc
aam
push
imul
push
notl
pop
lret
pop
pop
or
outsl
mov
ret
lods
rorl
imul
in
cwtl
mov
pushf
inc
outsb
jno
xchg
fcoml
cmp
sub
sub
pop
cmc
xor
aaa
lea
test
xchg
or
sarb
mov
xor
mov
mov
mov
cld
repz
fcomps
scas
inc
insb
jns
popf
and
into
add
lret
stc
mov
sub
cmp
xchg
push
sub
outsl
nop
in
pop
mov
fcomps
mov
popf
popf
or
cmpb
leave
in
imul
out
adc
fisubs
jbe
fistps
icebp
xchg
xlat
fisubl
int3
das
jnp
dec
scas
push
sub
xor
jle
sub
movsl
in
sbb
mov
or
int3
lea
jge
jle
xor
add
aaa
scas
jp
and
cmp
sbb
out
cmp
jbe
repz
enter
leave
cwtl
pop
or
xchg
add
or
inc
push
es
mov
xchg
gs
push
sbb
es
leave
aaa
scas
enter
test
xor
lods
test
hlt
xchg
icebp
mov
lret
cmp
mov
inc
aas
fstpt
adc
lods
jo
cmp
bound
in
mov
jb
pop
out
sbb
nop
fwait
mov
dec
sbbl
hlt
fmull
das
sub
test
stos
out
gs
push
in
xchg
dec
in
jae
testl
add
aam
jle
or
mov
xor
out
out
clc
repnz
jne
add
mul
std
psllq
lods
imul
jmp
lds
pop
pop
mov
aam
jge
and
insb
inc
add
mov
fwait
cmp
push
hlt
mov
add
push
pop
out
in
shlb
paddsw
adc
push
mov
xchg
sub
jns
cld
inc
or
subl
or
mov
jns
inc
incb
jns
and
pop
scas
sub
or
mov
ljmp
or
js
outsb
fcompl
in
int
xchg
sub
loope
mov
dec
inc
data16
ret
inc
rol
xchg
jo
int3
fs
fwait
nop
arpl
lret
in
cmp
pop
call
ret
jns
and
dec
lods
mov
movsl
movlps
xchg
lods
xor
add
adc
pusha
frstor
repz
sub
jecxz
adc
mov
inc
test
fs
cmp
add
dec
inc
jbe
stos
loopne
ds
xchg
pusha
lret
data16
cmp
aaa
add
test
rcrb
sahf
movsl
pop
gs
lea
lds
adc
and
add
mov
int3
enter
sarb
pushf
leave
mov
push
push
popa
arpl
sub
sarl
pop
es
mov
sbb
ja
push
jo
lea
pop
scas
lcall
insl
add
mov
fcom
adc
jne
addr16
cmovno
pop
and
add
sarb
adc
shl
sbb
lds
cmp
aam
sbb
imul
into
push
jo
adcb
in
add
mov
out
dec
jl
imul
or
mov
and
ret
fwait
push
out
iret
lcall
addr16
jne
adc
push
dec
lds
test
mov
mov
ds
add
mov
test
xchg
das
xor
jle
sbb
pop
ss
pop
scas
inc
push
sub
sbb
fildl
lret
jmp
test
lock
xchg
mov
push
icebp
mov
lods
pusha
int
cmp
pop
lcall
push
cmp
xor
sbbl
ds
push
imul
mov
or
addl
add
out
lcall
lds
lahf
test
incb
mov
dec
sub
cmp
out
ss
xchg
cmp
xchg
out
cli
negl
out
inc
roll
cmp
js
inc
xchg
lret
jecxz
add
push
sbb
mov
ja
push
push
mov
imul
aaa
call
sub
sarl
aad
pop
push
mov
lods
ss
fwait
push
cltd
std
sbb
outsl
call
fs
loope
add
jno
nop
dec
push
dec
ja
cli
jle
repz
fstps
jnp
adc
out
mov
lahf
sarb
imulb
and
lcall
daa
loope
shlb
xchg
push
dec
aad
and
daa
xchg
in
mov
ret
mov
test
push
shll
stos
cli
in
dec
fsubrl
frstor
gs
scas
loop
cmp
xchg
loope
and
lcall
insl
jp
mov
and
insb
jbe
dec
outsl
loop
or
es
ljmp
stos
mov
addb
fcmovu
mov
xchg
fs
inc
rcrl
or
mov
lret
hlt
sub
fld
xor
dec
pop
fs
sub
cmp
cs
fcmovu
ss
push
in
xor
inc
sahf
xor
addr16
inc
test
adc
mov
add
stc
arpl
add
add
dec
cmp
inc
xor
jnp
pop
filds
adc
repnz
xor
fwait
movsb
fildl
call
in
lret
addr16
sarb
sbb
inc
xor
mov
test
or
popf
mov
xchg
jo
push
mov
or
orl
push
xor
xor
je
adcb
or
rcrl
jg
mov
jb
push
ds
movsb
dec
sub
stos
push
clc
cli
push
push
int
in
xchg
xchg
ss
sub
jle
lret
movsl
jl
mov
lcall
jecxz
test
push
movsl
mov
shl
stos
rcll
mov
insl
daa
cmp
lea
int3
pop
aad
in
leave
es
arpl
and
mov
lods
cmc
es
call
dec
jecxz
sahf
mulb
pop
out
loope
outsl
call
imul
js
adc
add
lret
pop
negl
std
mov
xchg
push
sbb
cmp
scas
leave
pop
adc
xchg
push
je
add
out
fildl
pop
add
loopne
leave
iret
fs
stc
dec
jg
shll
jge
and
ret
dec
jne
jae
push
or
test
stos
test
lcall
inc
test
mov
divb
inc
into
jecxz
rcl
daa
das
add
fisttpll
jmp
scas
push
sub
pop
or
pop
out
flds
sbb
fisubrs
and
sbb
rolb
pop
in
lahf
jno
adc
bound
push
push
imul
mov
adc
adc
jmp
repnz
adc
fmuls
push
sbbb
add
xlat
sub
cmp
jle
xchg
mov
or
sub
jb
outsb
add
les
ret
push
xlat
and
and
in
adc
cli
rorb
fdivs
ljmp
mov
jno
push
mov
mov
cmpsl
mov
mov
bound
sti
adc
out
jno
and
xchg
and
push
push
add
lahf
sub
cmp
sub
xor
dec
add
mov
cmp
scas
cmpsb
repz
mov
adc
stos
popa
scas
cmp
stos
mov
xor
mov
mov
lcall
in
daa
jecxz
cwtl
jne
cmpsl
xor
inc
xchg
test
sbb
inc
scas
scas
cld
icebp
dec
inc
jmp
incb
push
shll
incb
loopne
cltd
loopne
cmpsb
loope
xchg
xor
jl
jp
sti
jmp
jl
jo
sub
cwtl
adcb
enter
add
mov
popa
push
sub
and
mov
mov
and
lahf
jae
xchg
mov
and
dec
jl
add
inc
rorb
daa
mov
sbb
jecxz
pop
jl
xchg
xchg
xor
cmpsl
jg
call
loop
jmp
addr16
ret
pop
testb
ret
jge
xchg
scas
mov
inc
mov
addr16
imull
ja
mov
test
or
lock
call
pop
mov
and
in
push
mov
adc
pop
test
xchg
out
lods
ds
jnp
je
stos
pop
clc
jmp
mov
mov
push
cmp
cld
je
and
ror
fimull
sti
adc
adc
nop
mov
or
mov
fs
aam
lock
mov
pop
dec
icebp
or
aaa
mov
addr16
stos
sub
add
ret
fsubl
mov
xor
leave
repnz
lea
mov
loope
shl
adc
mov
sub
fmull
sub
fs
jl
fistpl
sbb
dec
int3
sub
cmp
int3
btr
pop
pop
std
pop
sub
sti
lock
decb
inc
jns
int
jmp
sub
and
ror
test
jnp
cs
stos
scas
mov
in
inc
push
jge
mov
aas
cld
push
popa
les
and
push
mov
mov
and
pop
outsl
imul
loopne
push
lahf
jns
fdiv
or
inc
push
iret
mov
pop
movsl
int3
das
add
add
or
stc
adc
mov
sbb
loopne
adc
inc
mov
and
imul
jmp
jnp
add
out
les
mov
pushf
adc
xor
xor
jns
jb
lods
jbe
icebp
mov
mov
sub
push
and
pop
in
inc
jmp
shrb
pop
inc
jo
es
pop
sbb
push
and
std
add
in
ss
cmpsb
leave
testb
pop
ja
sbb
daa
mov
cltd
adc
dec
jp
adc
or
pop
sbb
test
inc
mov
test
push
push
mov
push
add
aaa
cmc
sbb
mov
mov
popa
shll
inc
cmp
or
sbb
mov
rolb
sbb
in
xor
mov
cmc
xor
sub
xor
mov
dec
jne
inc
or
add
jmp
jnp
repnz
cmc
jno
add
jo
jne
sti
jle
test
sbb
inc
shl
loope
mov
inc
add
jnp
mov
fldl
inc
cmpsl
and
pushf
iret
es
inc
dec
xchg
les
xor
adc
faddl
cmpsl
inc
fs
push
loop
pop
leave
iret
sti
insb
fisttpll
inc
data16
xor
dec
xchg
lret
inc
sahf
push
push
adcb
into
xchg
and
insl
xor
xchg
inc
cmpsb
imul
push
pop
mov
lcall
shl
mov
call
mov
adc
xor
or
test
dec
push
push
dec
dec
sar
push
test
dec
movl
push
int3
xchg
rolb
out
out
jmp
sub
ja
dec
lahf
je
mov
mov
imul
mov
cld
rcr
dec
into
push
inc
push
sbb
shlb
or
add
in
pop
sub
mov
and
stc
adc
add
lahf
daa
loopne
adc
xor
gs
insb
outsl
ds
dec
mov
jg
jae
inc
es
jl
add
sti
test
divb
ja
push
js
and
movsl
lret
fistl
cld
bound
notb
add
and
mov
adcl
sbb
mov
leave
mov
lcall
orb
aam
imul
fnstenv
ficoms
pop
fdivl
fmulp
pop
ds
in
push
dec
loope
loope
and
mov
xor
jno
xchg
lock
aad
fists
push
fisubs
in
inc
rolb
mov
scas
xor
sbb
test
pop
mov
mov
pushl
and
xor
jo
les
mov
cmp
push
push
sub
push
pop
loop
mov
mov
popf
mov
std
ror
jae
jmp
sbb
fsubl
rorb
push
push
popa
pop
ss
bound
mov
mov
push
out
loopne
bnd
fwait
les
icebp
sbb
call
pop
and
xor
out
inc
xor
cmpsl
inc
scas
pop
mov
fisttpl
inc
mov
add
loope
sbb
hlt
movsl
xchg
or
pop
xor
push
mov
mov
cld
daa
cs
xchg
jne
mov
movaps
pop
addl
in
inc
adcl
mov
jp
xor
xchg
pop
add
stos
mov
and
inc
loope
inc
aaa
pop
adc
gs
cli
mov
xor
mov
pop
pop
pushf
mov
iret
push
jae
in
out
mov
pop
test
aaa
xchg
mov
mov
shrb
xorb
jne
and
aad
add
adc
shlb
lret
hlt
push
pushl
mov
mov
lds
outsb
jmp
cmp
andb
mov
lds
dec
arpl
mov
adc
test
mov
fistps
xchg
add
ror
pop
jbe
pushf
push
mov
mov
mov
mov
mov
es
sbbb
inc
mov
dec
and
push
cld
popf
out
dec
fidivl
pop
shll
xchg
push
pop
enter
sub
mov
xor
scas
dec
cmp
cs
sub
mov
insb
cmp
dec
stos
pop
push
pop
dec
pushf
in
mull
in
outsb
xor
call
pop
sahf
pop
int3
pop
sti
clc
or
lods
push
imul
icebp
rorb
mov
xor
dec
push
sbb
fmull
inc
je
mov
mov
mov
jns
testl
repnz
adc
adc
icebp
mov
xchg
pop
xlat
add
mov
int
pop
int3
aas
icebp
jo
sub
sar
int
mov
cmp
xchg
xor
in
dec
cmp
cmp
adc
or
cmc
fistpl
xchg
test
inc
push
jbe
cwtl
xor
sbb
out
fdivrs
lea
cmc
adc
mov
xor
js
pusha
cmp
insb
dec
popf
sbb
gs
int3
sub
jnp
daa
icebp
dec
mov
int3
leave
repnz
call
ss
and
mov
imul
sub
xchg
cltd
lcall
js
jb
cld
les
cli
push
rol
pop
push
in
test
mov
subl
icebp
xchg
cld
push
add
fsts
fadds
jns
cmp
inc
adc
cmc
and
mov
fwait
or
test
shll
adc
lock
andb
add
mov
jmp
jle
sti
out
ss
outsl
xrelease
into
adc
stos
sarb
inc
mov
test
xor
daa
xchg
add
imul
hlt
ss
sbb
add
into
mov
push
shl
and
mov
sahf
out
xchg
ret
cmpsb
xor
cld
cltd
int
jp
pop
mov
or
add
pop
mov
xchg
das
add
mov
mov
sbb
mov
shll
shrl
aas
xor
cmp
jb
addr16
sbb
xchg
rolb
bound
out
inc
jne
push
aaa
mov
mov
pop
jae
jmp
and
xor
add
and
cmp
mov
test
jge
dec
sub
mov
jns
fwait
cmpsl
mov
in
push
ret
dec
push
arpl
in
and
stos
mov
add
xchg
mov
push
loop
sub
in
fsubs
mov
call
fldl
lock
pop
jb
test
jmp
sub
push
fistpll
iret
inc
int3
inc
lcall
xor
or
ficompl
sbb
cmp
frstpm(287
sbb
adc
sbb
mov
in
adc
and
mov
ja
add
push
addl
ret
cmpsb
sub
call
ret
xor
loopne
cs
push
mov
imul
in
lods
les
push
mov
int
pop
ffreep
popa
cmp
dec
bound
and
xchg
fisubrs
jg
cmp
mov
push
push
xor
mov
sbb
xlat
jl
or
lock
adc
dec
jno
jb
pop
sbb
cwtl
xchg
xor
mov
fnstenv
int
push
out
mov
cltd
popf
testb
inc
test
movsb
movsl
mov
call
sarl
mov
sahf
push
dec
pushl
outsl
ss
in
jp
mov
push
jmp
mov
divl
or
pop
jg
push
xor
mov
lods
or
mov
mov
pop
cmp
lock
cmp
mov
rclb
dec
xchg
pop
leave
dec
iret
shl
and
jae
lock
sub
xchg
data16
sbb
loopne
jge
jge
push
xor
fptan
loope
xchg
inc
imul
pop
rcr
in
pop
cmpsb
out
stos
mov
insl
pop
je
mov
add
jecxz
in
cmp
into
rcr
jmp
hlt
mov
cmp
and
mov
add
fdivr
jns
push
sti
xchg
pusha
mov
push
aad
pop
xchg
push
lods
faddl
mov
xor
and
mov
mov
dec
lods
lret
and
cmc
cmpsb
inc
cld
sbb
popf
fdivrl
xlat
dec
fisubrl
insb
lods
pop
mov
adc
scas
dec
inc
pop
bound
or
push
xor
cmpsl
ljmp
xchg
push
outsb
add
lret
sub
inc
jmp
cmp
cmpsb
push
roll
mov
mov
sbb
dec
inc
adc
add
fidivs
and
fists
add
push
inc
inc
xchg
mov
adc
add
sbb
ljmp
mov
test
mov
push
sbb
negl
and
sbb
lds
fimull
lret
xor
sbb
pop
jle
inc
pushl
negb
ret
mov
mov
lods
stc
ffreep
loop
lock
fsubl
lahf
adc
das
pop
and
test
jmp
xchg
bound
mov
sub
movb
and
in
out
xchg
push
inc
push
aad
mov
sarb
cmp
ss
inc
ret
es
sub
outsb
push
jb
or
push
adc
push
fists
rclb
sbb
mov
test
cmp
jle
sub
jae
stc
imul
cs
ds
addr16
adc
loopne
stc
mov
pop
dec
mov
ret
xor
int3
push
call
arpl
pop
into
das
mov
rolb
add
cwtl
add
xor
lods
repnz
hlt
out
bound
inc
mov
ljmp
mov
mov
out
mov
testb
jecxz
dec
inc
test
adc
fildll
iret
imul
imul
xchg
xchg
clc
movsl
arpl
xchg
pop
push
add
mov
xor
fnstcw
mov
xchg
mov
jo
aaa
out
sub
add
mov
cmpl
inc
and
jne
xchg
out
xor
push
xchg
lret
push
fwait
cmp
mov
sbb
scas
sbb
js
pop
outsb
in
dec
les
inc
rolb
mov
icebp
daa
push
add
aam
dec
mov
inc
dec
push
push
push
sarb
mov
pop
sbb
add
nop
xor
cmpb
fs
cmp
popa
mov
mov
arpl
aad
lret
cmp
daa
das
pop
lds
cmpsl
mov
shlb
movsb
push
fldenv
cmp
and
ljmp
jo
xchg
jb
mov
adc
lds
pop
ret
out
call
ja
adc
dec
jmp
xor
jle
cmpsb
fistpll
sti
or
stos
sbb
inc
fadds
dec
roll
les
repz
jno
mov
cltd
repnz
sbb
rcrb
fidivs
daa
adc
jae
xchg
insl
and
pop
pusha
loopne
xchg
sub
orb
inc
testl
cmpsb
mov
iret
adc
mov
sub
int3
dec
shrb
xor
sub
in
jnp
faddl
cmp
xor
and
pop
or
sub
lods
lods
sub
jecxz
xor
lret
repnz
aas
mov
and
aam
test
cmpsb
sbb
or
repnz
nop
jp
insl
outsb
xchg
daa
fmull
push
lds
jp
es
cmp
add
jae
mov
jbe
dec
hlt
adc
inc
adc
bound
insb
mov
pop
notb
mov
mov
push
outsl
int3
fs
cs
add
shll
sub
test
cmp
cmp
ret
pop
aad
xchg
xor
addr16
aad
mov
adc
mov
fstp
pop
in
mov
mov
sub
xor
scas
mov
pop
and
cmpsb
lods
pop
inc
out
xchg
int
rorb
push
jnp
dec
lret
adc
push
rcrl
movsl
jp
fmulp
cs
add
imul
or
jg
sub
pushl
jl
cmp
aad
dec
popa
jecxz
out
js
imul
pop
arpl
lahf
ret
imul
pop
out
adc
scas
push
jp
scas
inc
in
arpl
xor
and
das
or
or
xchg
aad
sbb
sub
mov
aad
dec
push
cmp
in
rcl
imul
jbe
add
mov
enter
add
dec
or
sbb
mov
rolb
add
push
and
lret
jno
mov
in
das
inc
cmp
add
or
sbb
adc
fwait
inc
and
xchg
xor
adc
jmp
mov
cmpsb
mov
aam
jp
fcmovnu
test
scas
les
xor
mov
jb
and
clc
fdivs
or
and
jg
cltd
pop
cmp
iret
jg
mov
push
cmp
cli
sbbb
mov
mov
cmpsl
add
addr16
test
loopne
mov
fstpl
mov
shl
imul
jns
testb
mov
lock
je
or
and
and
dec
add
sub
and
mov
mov
fstps
in
arpl
call
ljmp
ss
and
ss
xchg
dec
sti
mov
adc
in
mov
xor
nop
fwait
lahf
cltd
add
loop
inc
lea
and
pop
dec
sub
push
dec
xor
repz
ret
test
jbe
inc
dec
xlat
xchg
dec
and
fistps
int
out
push
shll
push
jne
addr16
orl
pop
adc
cmp
jp
stc
sbb
pop
arpl
das
inc
cmc
aad
pop
and
xor
repnz
pop
adc
cmpsl
fwait
xor
xor
push
sbb
ds
int3
and
push
cmc
push
sbb
shrl
jg
jo
add
xchg
stc
sbb
xorb
adc
inc
jno
xor
sub
sub
sub
jae
cmp
cmp
in
dec
cmpsb
cmp
mov
sbb
adc
outsl
fs
dec
icebp
pushl
imul
cmp
jne
pop
xor
shll
xchg
ret
imul
sub
mov
call
push
enter
shlb
push
pop
cmp
push
push
lods
adc
and
cmp
sub
ret
lds
cmp
and
in
icebp
push
test
lret
sub
mov
nop
incb
fidivrs
sbb
ror
jp
pop
in
push
lret
dec
cmp
adc
andb
or
pop
loop
mov
inc
daa
xchg
or
jmp
loop
fcomi
sub
mov
loop
icebp
loop
adc
cmc
inc
std
adc
dec
decb
add
ljmp
mov
adc
push
scas
cmp
mov
inc
stc
sub
stos
cli
adc
nop
lods
push
and
lret
jecxz
sbb
xor
adcb
jae
mov
jns
xchg
pop
in
ret
mov
pop
es
xor
xchg
or
mov
jmp
cmpsb
hlt
cld
dec
xor
mov
stos
push
mov
ret
test
dec
or
je
xor
maxps
adc
ljmp
lret
sbb
jne
jbe
ss
rorb
dec
dec
xor
in
hlt
test
rcrl
cmc
push
cli
leave
cmpsl
fcomps
sub
in
in
and
into
rcl
inc
andb
enter
out
out
shll
mov
test
aas
fsubrl
adc
inc
dec
je
in
add
movsb
gs
pop
jbe
and
jbe
in
mov
scas
xchg
mov
in
out
pop
pop
cmpsb
xor
pop
scas
inc
aas
adcb
dec
jno
jp
nop
or
repz
jb
dec
adc
mov
dec
xchg
imul
or
jge
push
adc
fsubl
rorb
sub
leave
cs
aas
xchg
add
pop
push
lea
pop
sub
cwtl
out
subb
imul
push
pop
jb
ljmp
test
mov
push
mov
out
mov
popa
pusha
xchg
cmp
fwait
add
outsb
ret
jp
test
sub
scas
outsl
ret
jns
int3
fistpll
movsb
lret
cmp
mov
aad
pop
sahf
stos
int
fwait
leave
xor
lret
and
cmp
mov
mov
rol
scas
or
popa
loopne
add
mov
dec
dec
addr16
ret
imul
xchg
inc
push
sbb
into
pusha
lods
es
rcll
mov
or
xchg
push
out
xorl
add
fidivl
jp
out
mov
push
std
and
clc
sbb
pop
mov
idivb
or
ds
mov
push
fisubl
push
mov
cmp
lahf
cwtl
pop
jae
xor
ds
pop
gs
in
sbb
xchg
xor
mov
lret
enter
add
push
pop
fcomi
jle
inc
and
inc
rorb
std
cmc
divl
inc
inc
movsb
fisubs
sbb
cmp
or
push
xchg
push
call
std
dec
popa
fistpl
nop
stc
xchg
cli
in
xor
jnp
les
int
push
xchg
stc
mov
sbb
jbe
divl
inc
pop
push
out
mov
pop
sarl
jbe
bound
nop
and
imul
sub
test
push
das
ljmp
es
aam
leave
cmp
clc
outsl
loop
cmp
fwait
mov
cwtl
lock
mov
mov
enter
hlt
dec
mov
xor
push
fimuls
lods
insb
cmp
pop
sub
fisubl
mov
fidivrl
sub
int3
ja
sub
xor
cltd
xchg
adc
adc
jle
rol
int
inc
fsubs
xor
xchg
or
ss
xchg
push
les
arpl
into
sbb
int3
push
aam
pusha
add
xor
out
loop
add
ret
idiv
mov
mov
lcall
dec
and
cld
sub
mov
pop
out
or
or
push
dec
test
test
adc
out
add
aam
xlat
outsl
jmp
pop
inc
repz
jecxz
dec
ret
sub
sbb
int
sti
out
inc
mov
shl
sub
arpl
cli
mov
movsl
jae
jl
movsl
loop
jns
inc
mov
or
arpl
mov
fnsave
fcmovbe
in
xchg
and
cli
gs
enter
jg
sbb
sbb
adc
jo
or
dec
or
adc
ja
loopne
addr16
jecxz
add
jmp
adc
xor
inc
cltd
popf
lock
mov
movsb
loopne
adc
into
and
xor
or
lahf
xchg
sub
cmc
jae
ljmp
shr
outsb
pop
cmp
outsl
cmp
pop
pop
pusha
lds
and
jge
sar
cmpsb
or
inc
dec
and
cmpsl
mov
mov
in
sub
push
sbb
xchg
mov
xchg
mov
ja
add
frstor
push
adc
test
mov
or
dec
xor
cmp
and
test
sarb
sub
pop
jg
xor
dec
out
pusha
jmp
scas
scas
mov
addr16
lods
popf
push
cmp
pushf
decl
push
fsubrp
fs
aas
in
sub
xor
in
mov
mov
xchg
xchg
pop
cli
xor
inc
jbe
mov
fildll
mov
test
adc
aaa
mov
jo
test
mov
mov
jmp
xchg
lea
gs
imul
sub
mov
insb
push
xor
push
xchg
adc
cmp
aad
sub
mov
pop
mov
xchg
pop
xchg
inc
aaa
jp
mov
inc
xor
mov
mov
dec
sbb
insb
push
mov
sbb
je
cli
movsb
dec
pop
mov
mov
es
in
mov
lods
sbb
mov
xor
push
lret
add
push
dec
push
add
andl
loope
dec
and
ljmp
insb
adc
dec
scas
out
rolb
dec
shrl
xchg
arpl
fwait
push
cmpsl
dec
aaa
cmpsb
mov
ss
mov
dec
add
dec
scas
xchg
pop
jmp
sub
cmp
add
ret
pop
add
stos
sub
inc
adc
rcr
leave
mov
jecxz
dec
mov
jge
vmovsd
sub
cs
mov
jb
push
mov
dec
xor
jl
aas
in
movsl
fiaddl
aaa
mov
xchg
stc
repz
xchg
xchg
inc
lea
push
mov
pop
orl
in
rcrb
jp
pop
xor
mov
xchg
sbb
jmp
aad
call
xor
pop
adc
dec
in
xor
mov
mov
xchg
ss
aam
popa
add
loopw
lcall
out
mov
mov
jge
loope
cmc
xchg
and
cmp
test
ds
push
jl
stos
and
lahf
popa
fisttpll
pop
inc
jge
adcl
inc
mov
gs
fcoms
xchg
jg
pop
cmpl
jns
test
mov
loop
and
jne
xor
repnz
les
mov
adc
xchg
lret
jb
inc
shll
jns
int3
imul
xchg
mov
popa
push
add
xchg
pushf
push
test
inc
and
cmpl
push
fnstenv
pop
daa
lahf
jo
enter
sahf
jo
decb
jns
pop
pop
xchg
push
cmp
pop
lcall
das
dec
xchg
pop
int3
in
jb
inc
pop
aaa
mov
icebp
add
lret
cmp
lods
loop
or
push
cmp
or
dec
mov
enter
mov
andb
add
mov
repz
mov
bound
divl
test
imul
mov
xor
mov
jge
mov
out
mov
cmp
or
sti
ret
aad
outsb
pop
push
js
pop
pop
sub
loopne
nop
sbb
xchg
mov
xchg
icebp
inc
lahf
pop
ficoms
mov
popf
push
stc
popa
sarl
inc
jle
push
arpl
sbb
mov
sarl
daa
sahf
jge
rcl
out
mov
in
add
xor
jae
or
cmc
jge
je
addb
xchg
addr16
test
ljmp
mov
or
pushf
adc
fiaddl
cltd
nop
cli
fwait
imul
fistl
cmp
out
or
sahf
popa
add
pop
jle
rorl
mov
pop
lcall
sti
sub
addl
int3
lea
pop
xchg
xchg
pop
push
xor
adcl
pop
pop
int3
dec
je
lds
aas
xchg
cmp
xor
pop
mov
sbb
bound
lods
hlt
mov
loopne
mov
in
lods
add
hlt
loop
loopne
or
xchg
fdivr
inc
cmp
xchg
or
enter
aas
dec
adc
adc
xchg
incb
mov
dec
lcall
scas
inc
test
mov
enter
sub
in
fmull
jle
push
pop
ret
mov
mov
lock
arpl
xorb
outsb
in
in
pop
cmpsl
imul
and
jbe
sub
mov
mov
mov
push
sub
pop
shll
movsb
mov
dec
test
les
mov
lea
jl
lahf
mov
fdivrp
or
push
scas
cmpsb
sub
repnz
cmp
clc
mov
into
jle
mov
sub
push
push
imul
pop
orb
mov
adc
mov
sbb
data16
add
inc
in
dec
sar
ret
or
adc
xor
das
inc
mov
daa
in
movsl
sbb
lods
mov
xchg
xchg
shrb
and
popf
in
movsb
orl
mov
push
xchg
jnp
adc
daa
je
sub
lods
add
cmp
lea
or
cmp
dec
inc
stos
add
jne
push
xor
push
in
gs
repz
dec
xchg
lods
les
aad
mov
je
stos
nop
pushf
fldenv
pop
push
or
and
mov
adc
decb
in
cwtl
shrb
pop
ljmp
enter
xor
lock
stc
mov
dec
out
neg
fldt
mov
imul
jg
and
dec
cmpl
sbb
repnz
lahf
jbe
loopne
aam
aad
push
call
mov
adc
sbb
iret
aas
filds
or
inc
cmpsl
push
loopne
add
das
nopl
lcall
das
xchg
sub
sub
pop
lret
xor
gs
scas
movsb
es
das
inc
lea
dec
ret
decb
sbb
mov
mov
das
jmp
imul
lcall
into
ret
pop
lcall
cmp
or
xor
fwait
add
into
mov
pushf
sub
jae
ja
movq
adc
mov
cltd
shlb
test
fwait
shlb
jmp
sbb
clc
scas
mov
rorb
sarl
push
jae
movsb
push
test
leave
dec
jge
push
inc
inc
ja
push
dec
lcall
jno
outsb
and
mov
iret
loopne
dec
cld
test
stos
pop
jno
fdivrl
jl
mov
xchg
xchg
mov
jle
push
xchg
xchg
mov
lahf
jecxz
shlb
push
out
dec
sub
and
adc
into
mov
call
lret
dec
imul
lock
jle
cmpsl
mov
add
pushf
mov
adc
mov
mov
push
idivb
ss
pop
mov
fbstp
dec
jecxz
lea
arpl
stos
loopne
xorb
inc
mov
and
pop
adc
out
out
mov
cmp
jae
bound
lods
cmc
out
add
adc
push
cmp
mov
test
sub
xor
loop
cmp
rcrl
movlps
push
mov
imul
andb
bound
inc
mov
mov
imul
mov
repnz
mov
lcall
mov
and
dec
sub
jb
les
inc
lahf
dec
cltd
cwtl
jmp
ret
mov
sub
jge
movsl
fimuls
pop
mov
mov
mov
pop
push
cmp
test
in
sahf
pop
jecxz
cmpb
fbld
xor
push
sub
mov
pop
jl
repz
and
push
inc
pop
stos
ljmp
cmpl
cmpsb
imul
imul
stos
sbb
sub
xchg
pop
in
jae
and
idivl
adc
add
adc
jecxz
mov
sbb
scas
mov
clc
jo
xchg
xchg
cltd
adc
pop
jb
mov
adc
cmp
imul
inc
dec
in
inc
inc
push
shlb
xchg
test
lret
adc
jmp
movsl
mov
mov
int
gs
xchg
fnstcw
hlt
cmp
cwtl
mov
inc
hlt
or
xchg
or
fcoms
loopne
punpckldq
addr16
int
mov
jbe
movsl
inc
hlt
cmc
ficoms
lock
pop
mov
jmp
push
lahf
iret
mov
or
and
outsb
lock
fdivs
xor
rcrb
mov
into
andl
push
add
mov
xchg
push
jg
add
sbb
xor
mulb
push
in
xchg
mov
ss
mov
out
stos
addb
dec
mov
jge
out
push
push
sbb
into
mov
lea
and
dec
int
jmp
mov
shl
leave
push
fs
rcr
lods
sti
sub
dec
rclb
dec
aas
mov
cmpsl
sub
movb
or
xor
imul
aas
or
dec
sub
pop
push
jae
movsl
in
jge
xchg
push
in
cli
push
jno
push
dec
jns
mov
or
outsl
or
js
xorb
cwtl
pop
push
fyl2xp1
mov
mov
inc
mov
rcrl
cmp
es
lcall
sahf
fstpl
jecxz
int3
mov
pop
into
fwait
dec
jb
fisubrl
out
and
das
subl
cld
pop
adc
jae
xchg
xorb
rcrb
lahf
hlt
and
jmp
out
stos
pop
ret
cmp
sub
imul
dec
lret
jmp
jno
inc
movsb
mov
push
ret
dec
movsl
and
imul
mov
dec
shl
lock
call
xchg
mov
gs
adc
mov
pop
add
sub
rorb
out
mov
sub
cmp
imul
idivb
push
inc
bound
popa
pop
adc
test
add
pop
lret
sbb
dec
jecxz
rorb
adc
ss
sub
cmp
loope
fsubrl
cli
inc
js
clc
bound
inc
add
pop
movsl
push
out
mov
dec
xorb
mov
iret
pusha
push
or
fnstsw
mov
cmp
ret
loopne
push
pop
inc
pop
test
out
shlb
and
inc
out
sbb
aas
test
adc
cmpsb
mov
mov
adc
cmp
ret
lea
jmp
lea
pop
xlat
pop
js
lea
jg
ljmp
xchg
add
pushf
mov
mov
pop
in
rol
pushf
insb
cwtl
cwtl
pop
call
sbb
mov
decl
push
aam
fwait
cmp
jae
aam
adc
push
cld
ljmp
cs
dec
pop
sub
xor
jmp
loope
adc
mov
cmp
sbb
mov
mov
mov
inc
lret
pop
popa
xor
aam
push
xchg
scas
sti
sahf
enter
push
int
sbb
cmp
jno
fs
lods
jecxz
rcll
mov
sbb
lds
mov
mov
sbb
andl
pop
fstpl
sub
in
sub
in
dec
add
jl
clc
imul
cmp
insb
jo
lds
xor
shl
lcall
imul
adc
fwait
cs
xor
xchg
and
addl
in
jl
stos
mov
out
mov
icebp
movsl
or
out
int3
addr16
hlt
add
sub
stos
sti
bound
jmp
inc
inc
xchg
dec
fldt
pop
cmovne
and
icebp
fisttpl
lea
cmpsb
fstps
jae
mov
mov
and
mov
jne
xchg
dec
xchg
cmp
or
adc
push
pushf
aas
lret
ljmp
dec
cli
orl
xchg
shrl
jae
xchg
mov
loop
es
das
push
ss
push
jnp
lret
mov
daa
aad
mov
xchg
inc
mov
xor
add
fisubl
adc
mov
xor
push
sbb
aad
adc
test
and
sahf
jp
ljmp
mov
fiaddl
aas
mov
sbbb
mov
push
les
jae
push
inc
pop
mov
push
sub
cld
in
sbb
mov
xor
jnp
push
sti
pop
cmpsl
xchg
fnstcw
scas
rcl
lods
popa
shll
subb
xchg
nop
repz
add
jae
lahf
lret
mov
mov
lea
js
out
or
cwtl
jbe
pop
inc
nop
or
jne
mov
pop
cmp
cmp
add
fistpl
push
loop
xor
aas
jg
or
outsb
popf
mull
push
add
push
sbb
cmp
add
sbb
xchg
jne
cmp
xor
out
push
out
push
loope
cld
cwtl
dec
jl
inc
insl
js
push
lahf
fcmovbe
cmp
jecxz
xor
or
sub
ds
lea
mov
xchg
jge
push
or
fistpl
clc
mov
hlt
add
pop
insl
xchg
imul
icebp
fninit
and
ss
dec
fiadds
mov
rol
scas
mov
xchg
fucomi
push
cmp
stos
pushf
shll
mov
loope
icebp
cmpb
mov
inc
mov
push
push
test
push
rol
sbb
jae
lret
push
push
cmp
jne
cltd
lea
andb
inc
lcall
push
into
jb
xchg
jns
bound
xchg
repz
add
fucomi
pop
fiadds
das
aam
loopne
cmp
stos
outsb
shl
dec
lods
push
loop
xchg
xchg
icebp
pop
xor
or
inc
aaa
sbb
cwtl
mov
sub
xchg
cltd
push
mov
add
mov
in
insl
popl
inc
cmc
adc
pop
pop
out
inc
int
jne
out
sub
cmpsl
sbb
push
ret
addl
jp
mov
jge
js
sbb
dec
stc
frstor
xchg
pop
xchg
or
xchg
jge
idivb
push
fs
das
mov
lods
xor
adc
pop
aaa
and
adc
lret
testb
lret
xchg
and
add
pop
xchg
pop
xchg
rclb
mov
push
push
gs
icebp
push
push
leave
dec
mov
cwtl
xor
lea
int3
shll
in
fistpll
sahf
mov
les
push
mov
ljmp
sahf
cwtl
test
sahf
das
ss
loopne
jge
xchg
add
cs
jbe
std
and
xchg
sahf
imul
ror
mov
mov
inc
jbe
xchg
cwtl
pop
add
jo
sbb
int
jmp
cmpsl
or
inc
sbb
add
divl
sub
push
xchg
lods
rolb
push
mov
jb
outsl
pop
fidivl
cmc
cmp
outsl
hlt
jbe
pop
adc
loopne
das
sti
test
push
cmp
jno
arpl
push
aam
inc
shlb
frstor
push
repnz
and
aam
imul
and
pop
xchg
xor
dec
sub
sub
pop
call
xchg
mov
lcall
addr16
aas
fadds
test
or
jmp
sub
int3
push
add
bound
lahf
data16
loopne
imul
mov
lret
xchg
mov
add
mov
sub
dec
fbstp
xchg
jnp
xor
and
hlt
fstl
dec
dec
out
xchg
mov
mov
sarl
xor
scas
push
push
xchg
pop
data16
movsl
and
pop
popa
mov
aaa
mov
movsl
jne
mov
insb
xor
mov
insb
mov
pushf
pop
push
cmc
ljmp
fwait
test
push
loope
and
jns
ja
out
in
adc
sbb
mov
std
sub
adc
daa
mov
leave
mov
push
out
mov
decl
das
pop
cmpsl
fwait
pop
mov
sbb
loop
idivl
and
outsl
mov
out
cmp
dec
arpl
xchg
imul
ja
bound
xchg
popa
dec
sbb
andl
cmpsb
xchg
aad
pop
mov
mov
dec
addr16
mov
mov
inc
mov
mov
ret
add
stos
mov
test
loop
insl
addr16
adc
hlt
lcall
mov
inc
aad
bound
mov
out
or
mov
and
ret
insl
incb
pop
xchg
xor
dec
or
mov
enter
setnp
loop
gs
mov
loopne
cmp
and
icebp
inc
push
pusha
notl
mov
or
mov
fbstp
into
pop
or
movsl
and
ret
pop
popa
adc
sub
cmp
test
mov
xor
les
lods
iret
add
sbb
out
fildll
jne
incb
test
es
negl
decb
mov
xchg
clc
ret
jb
or
adc
mov
push
outsb
data16
cmp
pop
cmpsb
jns
cli
adc
ret
stc
xchg
pusha
das
stc
mov
jae
test
jl
repz
cmpsl
xor
inc
cmp
stc
push
add
repnz
push
orl
sub
repnz
aas
mov
int
fsubs
cmc
jl
sbb
and
rorb
lahf
adc
shrb
sbb
mov
jle
pop
jb
mov
into
adc
loop
or
loope
sub
lret
jne
stc
ret
push
xor
sbb
mov
mov
dec
sbb
and
ret
das
xor
inc
das
setbe
mov
mov
adc
fimull
ja
insl
jbe,pt
test
cmpsb
cmp
dec
outsb
add
ffree
jb
insb
push
stos
sbb
mov
fistl
ljmp
shll
pop
lods
push
mov
adc
or
lcall
adc
and
outsw
pop
test
aad
mov
out
mov
cmc
insb
xor
adc
cwtl
ja
lods
xor
aad
sub
xchg
push
jecxz
pop
cs
xchg
sub
stc
fadds
pop
repz
rcll
out
ret
std
fsubl
mov
repz
lret
push
repnz
or
int3
inc
xchg
add
cmp
cmp
out
fs
xor
pop
notl
push
mov
push
or
addr16
inc
jno
inc
pop
sub
pop
mov
cmpsb
mov
mov
aaa
push
push
pop
das
dec
and
sbb
adc
cmp
test
stos
lahf
into
and
repz
cltd
repz
clc
dec
loop
jne
fcmovbe
insb
dec
mov
leave
ss
dec
sub
outsb
shr
jbe
sub
ret
mov
cwtl
fiadds
insl
les
or
and
lret
mov
shl
je
mov
daa
push
mov
sub
into
add
loopne
or
pop
pop
xor
mov
aad
xor
scas
std
dec
cmpsb
pop
xor
xor
mov
daa
pop
or
adc
loope
pop
in
sbb
stc
mov
dec
mov
scas
ljmp
orb
rep
or
orl
pop
and
push
test
xor
jp
scas
and
jb
mov
jne
push
lcall
clc
or
pop
mov
push
push
test
mov
outsl
xchg
imul
mov
ljmp
outsb
jbe
fiadds
test
dec
xchg
sbb
shrl
mov
xchg
rcll
aaa
fcompl
leave
fwait
push
xor
cmp
loope
lods
shl
push
movsb
stos
insb
out
icebp
add
add
js
or
repz
imul
mov
xor
ja
push
xor
mov
test
sbb
stos
sub
push
bnd
fwait
push
subl
hlt
mov
cmc
lds
out
jle
in
xchg
ds
dec
inc
outsl
mov
and
xor
enter
test
js
dec
outsl
mov
ds
ret
je
inc
rcrl
pop
xor
pop
addr16
jle
or
xchg
sbb
add
scas
sub
add
cmp
adc
in
scas
mov
daa
sti
cs
cmp
sub
sahf
jb
inc
sbb
in
and
cmp
adc
cmp
test
push
cmp
jbe
mov
push
iret
xchg
jnp
inc
in
push
xlat
inc
rorb
mov
adc
cwtl
push
mov
mov
mov
sbb
add
out
cmp
sub
leave
rcr
pusha
xchg
ja
adc
sarb
ljmp
movsl
movl
fwait
aaa
jmp
mov
push
bound
les
addr16
es
push
mov
cmp
sbb
xchg
push
clc
cltd
fmuls
cmp
incl
mov
and
mov
mov
push
mov
add
ja
loopne
mov
push
lods
test
shlb
ret
cmp
les
pop
pop
adc
movsb
sbb
xchg
gs
popa
xchg
out
sub
lret
fucomp
adc
sar
cli
add
dec
leave
jge
outsl
sbb
adc
cli
jge
iret
jno
pop
lods
sbb
dec
inc
sub
and
push
cwtl
mov
jne
push
pop
push
dec
lcall
sub
jb
and
in
insb
or
push
cmc
jg
sti
push
popa
sbb
inc
xchg
or
scas
cld
jecxz
pop
orl
sbb
or
mov
mov
add
and
outsl
div
cmp
cmpsl
jno
pop
and
cmp
and
mov
inc
clc
push
mov
xor
out
cld
xchg
imul
dec
shl
add
rolb
mov
push
inc
fxch
sub
dec
push
add
push
push
cmc
xor
xchg
push
sbb
mov
call
mov
jp
mov
fiaddl
repz
in
sbb
push
mov
in
and
mov
push
pop
mov
inc
gs
leave
ljmp
lods
rol
mov
pusha
ret
test
pop
cmp
and
aam
or
jno
jle
jno
lret
imul
push
or
test
mov
sarl
stos
jb
and
ds
data16
push
fimuls
jns
dec
xor
das
fcoml
mov
imul
or
push
sbb
adc
cli
into
push
jne
add
cmp
cld
sbb
mov
aam
rcrl
lods
inc
jecxz
les
mov
clc
mov
add
mov
xorb
xor
add
mov
xor
cmp
out
xor
jmp
addl
clc
loop
pushf
movsb
jb
jge
xchg
cld
sbb
mov
cmp
leave
push
sahf
adc
mov
xchg
sbb
add
jo
sub
push
or
mov
xor
push
or
xchg
adcb
sbb
pop
xor
inc
xchg
int
repz
jp
mov
shlb
mov
fsubrs
dec
ret
call
stos
jae
pop
mov
and
iret
pop
scas
push
loop
mov
mov
aas
mov
push
and
mov
inc
sbb
xchg
lcall
ficoms
inc
and
sbb
int3
mov
or
bound
mov
ret
push
test
loopne
test
inc
ljmp
push
or
push
shll
test
std
aad
cmp
repz
lds
divl
gs
lahf
movsl
pop
mov
push
stos
cli
adc
xor
xor
inc
fdivrs
rorb
sahf
gs
fucomip
and
or
sbb
outsb
jo
into
mov
jns
sbb
sbb
xchg
fisttpll
add
mov
cmpsl
mov
scas
out
fstl
in
jecxz
xchg
inc
dec
nop
gs
scas
in
mov
rcrl
dec
xchg
cmc
xchg
pop
imul
or
mov
loop
jle
idivb
pusha
push
movsl
scas
test
jb
iret
sub
pop
add
dec
sarl
test
fildl
daa
xchg
push
fadd
push
mov
pop
jo
mov
add
mov
pusha
sti
icebp
lcall
test
cli
in
xor
test
xchg
sbb
ds
setns
mov
in
popa
cmp
sti
adc
pop
pop
jecxz
dec
shrb
pushw
sbb
mov
mov
mov
mov
mov
aam
cld
inc
sub
mov
sub
out
cmpsl
mov
xchg
mov
pushf
pushl
stc
shlb
repnz
test
mov
fs
mov
mov
shll
lea
or
test
fsubs
cmp
cmp
scas
cld
cwtl
sti
fisttpll
cmp
dec
xor
test
ret
jb
lea
cli
lods
xorl
pop
ljmp
test
sub
rclb
fadds
and
pusha
inc
mov
test
adc
rcll
div
cmpsb
mov
dec
adc
lret
jnp
inc
adc
mov
repnz
cmp
inc
bound
fsubl
sbb
loop
pop
xor
outsb
cltd
into
std
dec
mov
test
jecxz
sub
cmpsb
cmp
test
stc
fwait
and
inc
rcll
add
pushf
andl
add
mov
in
or
dec
push
popf
ljmp
in
sbb
jecxz
xchg
or
mov
repnz
es
out
push
movsl
ret
push
int3
fs
mov
outsl
orl
into
hlt
hlt
stc
cmpsl
push
adc
mov
or
cmp
mov
fs
bound
int
pop
test
add
pop
cmp
add
out
scas
in
mov
and
mov
in
inc
sbb
inc
lret
or
ss
outsl
pop
inc
push
inc
fxch
frstor
mov
fdivrl
bound
xor
adcl
dec
icebp
dec
imul
add
ret
xor
sbb
mov
incb
cmp
sbb
pmulhw
pop
fbld
rorb
insb
das
pop
mov
test
xchg
sbb
clc
jle
ret
add
inc
js
lods
test
jge
or
icebp
xchg
in
sbb
cmp
iret
pop
not
and
xor
push
push
aam
add
hlt
stos
push
dec
lcall
fidivrl
pushf
push
xchg
fsubrl
loop
subb
ret
sbb
arpl
jp
in
andl
cli
xchg
or
dec
xorl
jmp
xchg
aaa
push
jmp
pop
ljmp
ss
inc
call
mov
fs
sbb
pop
sbb
mov
ret
jmp
mov
outsl
cvtdq2ps
sbb
sahf
mov
pusha
mov
mov
pop
add
mov
aaa
lret
faddl
cmp
or
inc
mov
notb
add
fld
add
jne
jns
push
lret
jp
lods
xor
rclb
imul
psubusb
dec
repnz
sbb
adc
push
icebp
jae
cmpsb
inc
std
push
mov
and
mov
sub
dec
cmp
lods
and
outsl
scas
mov
loope
or
push
std
sbb
data16
or
mov
aaa
add
std
fdivrs
sbb
fmuls
lret
and
dec
fbld
into
lea
jmp
xor
inc
ss
lods
lods
in
dec
mov
inc
adc
ret
mov
roll
pop
pop
push
jp
flds
sub
push
in
cmpsl
pushf
insl
xchg
ja
push
inc
test
jae
or
cmc
shrl
xchg
test
mov
lock
cmp
repnz
dec
inc
loopne
dec
jno
pop
lods
std
adc
lret
shll
es
movsb
call
mul
insb
clc
pop
xchg
mov
push
fildll
jnp
mov
lret
cli
mov
popa
sbbb
iret
xor
mov
mov
mov
pop
jnp
movsb
add
cmp
add
dec
and
xor
sub
daa
sarb
ret
decl
jns
repz
push
jbe
lret
jge
push
jl
aaa
lahf
cmpsl
add
xlat
lds
mov
rclb
add
jecxz
insl
lret
sbb
jnp
gs
sti
and
mov
add
call
inc
mov
sub
out
pop
out
jle
rcrb
mov
test
mov
cmp
lods
insl
lcall
pop
je
fisubrs
mov
xchg
in
fwait
cmp
pop
xlat
xor
cli
lret
sub
jne
xor
cli
and
cmp
mov
sub
mov
mov
pusha
add
js
sub
sahf
cmp
and
lcall
lret
test
ss
aaa
sub
cmp
jno
popa
fucomip
ret
fiaddl
mov
int
push
add
xor
or
fs
ds
sbb
rorl
or
pop
daa
cmp
push
cmpsl
add
jb
mov
das
mov
fmuls
mov
testb
cmp
lret
lret
leave
shlb
fldenv
std
mov
imul
paddsw
jno
ret
push
lret
inc
adc
jb
sahf
jae
imul
ret
jnp
or
push
jne
ds
xchg
mov
mov
sbb
adc
pusha
jo
mov
ja
or
insl
rorb
rorl
insl
fisttpll
adc
xchg
mov
fdivrl
lret
aam
mov
push
popa
mov
insb
adc
add
sub
mov
pop
mov
stos
and
sbb
xor
jl
std
insl
pop
mov
iret
pop
stos
push
cmp
jp
aad
cmp
cld
ds
push
and
push
scas
jmp
subl
adc
push
xchg
leave
mov
inc
addl
add
push
lock
and
mov
rcr
push
xor
and
icebp
xchg
push
ljmp
jmp
or
lods
sbb
pop
sbb
or
fmuls
xlat
aam
dec
xor
cltd
dec
call
hlt
roll
jnp
inc
cmp
into
inc
adc
out
std
dec
jo
push
xlat
jne
xchg
pop
std
push
loope
lret
mov
mov
fmull
adc
or
cli
mov
jmp
popf
idivb
xor
into
pop
lea
fiaddl
and
mov
push
es
xor
cmp
cmpb
out
mov
movsb
mov
outsl
or
pusha
test
dec
mov
mov
cmpsl
xchg
or
movsl
push
das
xor
cmp
fisttpll
je
mov
pop
xchg
aaa
aaa
xorb
sub
cmp
xchg
out
into
xlat
push
stc
cld
loopne
cmp
cmpsl
inc
call
ds
push
xchg
leave
jg
leave
add
mov
jbe
adc
je
arpl
insl
cld
divl
push
cmp
push
push
in
inc
fidivl
adc
out
sbb
leave
mov
insb
lahf
test
jmp
adc
decb
mov
xchg
mov
mov
into
sub
mov
out
pop
cli
sub
push
shl
cli
push
sbb
fidivl
fs
orl
adc
mulb
mov
dec
es
sub
or
imul
lods
scas
mov
data16
mov
jo
push
ror
dec
mov
gs
mov
lock
mov
pop
inc
lea
add
cmp
inc
dec
lds
mov
mov
xor
xor
nop
testb
pusha
out
xor
fdivs
lock
or
add
and
xchg
out
dec
push
or
les
movb
push
pop
neg
daa
lahf
fisubrs
repnz
adc
mov
lds
mov
xor
pop
pushf
dec
add
mov
gs
mov
test
enter
sub
pop
jne
mov
aaa
xchg
ljmp
push
cmpsb
dec
mov
int
je
add
sti
xchg
je
imull
jp
lock
and
shll
cli
test
mov
lret
mov
mov
pop
xor
test
or
push
mov
ss
jecxz
mov
out
jnp
sbb
subl
lcall
in
and
dec
out
mov
mov
repz
std
jmp
loopw
test
data16
mov
xchg
mov
daa
dec
es
loop
out
cltd
add
cltd
scas
mov
bound
jle
sbb
loope
mov
fbstp
mov
mov
pop
dec
inc
ja
cld
inc
jle
and
add
xchg
sub
stos
xor
jmp
mov
insb
outsb
sti
pusha
adc
fsubl
dec
std
cld
sbb
jae
and
aad
gs
mov
inc
aaa
pop
ds
arpl
in
xchg
mov
mov
test
or
and
outsl
cwtl
dec
inc
clc
fldl
inc
jecxz
sub
jl
and
mov
mov
rcll
out
fldenv
jae
push
repnz
sub
mov
in
xchg
mov
in
lea
xchg
push
adc
cltd
push
lahf
aaa
pop
pop
in
pop
xchg
fucom
sub
scas
cmpsb
leave
cmp
mov
lahf
push
lods
sbb
loop
fsubrs
push
in
mov
push
or
push
and
dec
dec
orb
add
icebp
push
adc
loop
rolb
in
addl
popa
loop
sbb
add
mov
mov
inc
mov
inc
inc
cmpsb
jmp
jp
icebp
mov
mov
popa
movsb
pushf
daa
jno
sub
and
sub
jl
dec
int
out
cmp
mov
ds
or
push
jg
adc
mov
dec
loop
push
push
push
loop
jae
push
dec
repz
scas
negl
and
adc
mov
scas
sub
adc
shrb
movsl
inc
mov
pushf
dec
lds
jl
ret
xchg
push
sbb
jmp
sub
xchg
xchg
jl
mov
add
xor
shll
movsb
std
addr16
loopne
rclb
and
lods
xchg
inc
stos
cmc
shl
sbb
or
sbb
addr16
jnp
adc
dec
mov
lret
cmp
pop
or
inc
rol
adc
mov
mov
pusha
ljmp
sub
inc
adc
fld1
shlb
sub
stc
lahf
cmp
pop
ret
jp
sarl
mov
repz
fs
mov
dec
fimuls
test
stc
sub
sbbb
jae
push
stos
add
adc
add
aam
pop
push
fnstsw
ds
dec
fdivl
xor
mov
jno
test
push
dec
mov
out
sbb
pop
push
sub
xchg
fidivrl
sbb
and
mov
imul
cld
subb
dec
jg
xor
in
iret
rcll
mov
inc
shll
call
push
fdivl
iret
fildll
xor
les
or
add
fwait
ljmp
ret
std
adc
sub
push
cmp
adc
lds
push
pop
inc
lret
out
insb
mov
fnstsw
and
jae
sbb
imul
cltd
xorb
xor
mov
test
mov
and
mov
push
mov
sbb
mov
dec
pop
mov
sub
jle
adc
das
insb
orb
repz
add
push
push
push
mov
roll
mov
sti
push
jae
rorb
mov
push
add
rcrb
enter
lods
cmp
pushf
loope
or
push
inc
outsb
rcrb
jge
loope
fisubrs
into
das
jecxz
mov
call
test
or
jnp
lret
push
stos
add
cmpsl
and
cmp
aas
lahf
mov
xchg
mov
mov
or
aas
test
in
add
fs
mov
icebp
push
xacquire
adc
xor
sbb
test
sub
neg
ss
xchg
xchg
pusha
dec
orb
xchg
jp
loopne
jg
sbb
loop
pop
mov
es
stos
push
cmpsl
fwait
xchg
test
and
inc
andb
adcl
mov
js
mov
push
fs
pusha
jmp
loop
push
imul
add
dec
cmpsl
leave
or
adc
pop
and
push
dec
jne
arpl
data16
test
sub
fbstp
cmpsb
add
cmp
xor
cmp
pop
scas
pop
insb
mov
mov
fwait
scas
aad
movsb
fs
mov
adc
ljmp
lods
movb
mov
sub
jo
xchg
adc
dec
jno
jg
stos
add
lods
fadd
pop
mov
add
dec
xlat
loope
add
movsl
sub
inc
or
mov
ja
dec
inc
push
cmp
aas
sbb
lea
sbbb
movsb
imul
cwtl
lahf
add
add
gs
adcb
sbb
ficoml
pusha
jecxz
daa
sahf
arpl
test
hlt
out
andl
rorl
cmp
notl
mov
mov
xor
xchg
test
fisubs
sub
loopne
cld
xchg
mov
insb
sbb
inc
cmpsb
cmpsb
stc
rclb
mov
mov
pop
gs
and
or
or
fdivl
mov
jno
fsubrs
add
in
xor
in
fisttpl
pop
xlat
movsb
dec
push
in
push
or
push
mov
in
ror
push
mov
insb
lcall
sahf
cmp
adc
aas
out
enter
dec
cmp
popa
push
or
jae
lods
fldl
jb
inc
mov
aad
mov
outsb
inc
je
cmp
mov
mov
ret
dec
mov
sub
sub
and
inc
mov
scas
aad
adc
popa
pop
sahf
test
ret
and
inc
int3
jo
push
pop
jg
dec
jns
les
sbb
dec
cmc
nop
movsb
cmp
cwtl
mov
jo
fisubs
je
adc
stos
imul
pop
push
lods
mov
dec
stos
repnz
ss
jl
push
jle
mov
pop
mov
arpl
imul
xor
lret
sub
daa
jmp
add
jo
mov
shrb
into
or
cmpsl
xchg
push
std
lods
and
mov
sbb
rcll
dec
pop
iret
fbstp
sbb
push
push
mov
stos
dec
mov
aam
sbb
ja
ds
push
ucomiss
add
ret
repz
or
mov
add
into
movsl
js
mov
fdivr
aaa
shlb
dec
add
sub
js
cs
mov
sti
mov
push
daa
dec
or
outsb
mov
adc
nop
sub
mov
mov
pop
push
aaa
xor
cmp
push
sub
out
cmp
cmc
sub
add
out
test
cmp
mov
inc
icebp
into
mov
mov
stc
push
testb
imul
movsb
in
pop
pop
imul
push
xchg
sarl
or
int
add
nop
xlat
daa
mov
test
pop
add
andl
push
add
mov
inc
xor
jg
sub
lret
mov
add
out
cmp
cs
pop
call
mov
lcall
xchg
dec
pop
sub
jmp
lods
in
mov
fsts
in
inc
push
mov
adc
push
pop
dec
push
mov
sub
pause
inc
dec
cs
repnz
enter
inc
mov
cmpb
bound
or
xchg
pop
sub
jmp
daa
add
cs
in
xchg
lret
rsm
int
mov
jl
scas
push
aaa
ja
or
shll
cmp
out
repnz
or
daa
mov
scas
add
loope
enter
in
repnz
jb
push
lret
iret
inc
xchg
pop
lret
or
xor
and
mov
or
mov
and
add
adc
int3
sahf
cmpsb
int3
inc
mov
repnz
data16
test
jb
iret
enter
push
push
imul
repnz
jns
dec
stos
pop
push
inc
ss
adc
or
sub
jo
bound
in
psraw
dec
loopne
or
mov
scas
mov
jnp
sbb
add
cld
mov
pop
es
mov
mov
add
jne
insb
mov
pop
dec
mov
je
pop
lods
rorl
out
inc
movsl
and
loopne
pop
lret
pop
out
leave
cmp
mov
add
jge
push
fldcw
cmc
mov
pop
ss
stc
jbe,pn
xchg
jle
mov
xchg
dec
mov
jne
fst
add
inc
mov
xor
sahf
push
cmp
inc
lods
jb
xor
mov
nop
mov
xor
popf
icebp
fsubp
and
cmpl
daa
and
aas
dec
mov
sti
jne
popf
pop
mov
pop
ljmp
imul
not
pop
sub
rolb
push
push
mov
imul
sahf
pop
jnp
mov
fsubrs
mov
sbb
in
or
jae
mov
jp
cmp
frstor
pop
sub
out
or
jge
jp
mov
nop
pop
je
movsb
out
pop
cmpsl
push
pop
xchg
cmp
xor
std
sti
xor
jns
xlat
enter
mov
xchg
into
jmp
outsl
rcrb
stos
jns
cmp
out
ret
fildll
adc
test
sarb
xchg
inc
xor
xor
adc
lods
mov
sub
mov
mov
cmpsl
push
out
lock
loop
ret
cmpsl
out
rclb
sbb
xchg
mov
inc
mov
push
movsb
cmp
add
dec
mov
sub
mull
ds
xchg
test
mov
sbb
dec
mov
push
xor
mov
loope
sbb
cwtl
lods
lods
fisubl
ror
testl
and
aas
dec
inc
jns
dec
mov
dec
pop
lcall
and
inc
in
and
test
push
jp
xor
pop
jmp
lcall
ror
or
test
push
inc
sub
or
mov
movsl
shr
dec
lret
lods
adc
stos
mov
out
cmp
push
cmp
add
jno
add
repz
sub
push
sahf
inc
mov
cmpsl
push
jg
push
scas
addr16
aaa
jo
jb
push
dec
jg
into
cli
jne
int3
dec
gs
in
xlat
arpl
mov
push
std
adc
and
loope
push
out
nopl
mov
ss
pop
mov
sbb
call
loope
lods
das
outsl
jne
mov
mov
ret
mov
and
or
andb
jnp
decl
leave
add
pop
cli
inc
sahf
mov
out
int
pop
cmp
pushf
mov
or
cwtl
ljmp
dec
cmc
and
push
jae
sub
ffree
mov
jae
push
add
ret
mov
hlt
jg
repnz
outsl
mov
test
push
inc
inc
mov
rorl
jnp
jecxz
jl
test
pop
in
lret
cli
js
fs
xor
cltd
pop
push
push
clc
das
jecxz
scas
nop
aaa
hlt
fisubs
dec
fisubrs
cltd
jmp
iret
les
fcompl
xor
dec
loopne
xchg
mov
icebp
lret
add
pusha
int
add
fmulp
pop
shrl
lock
adc
sub
movl
push
stos
roll
inc
dec
mov
cltd
test
cmp
cmpsl
pop
pushf
jl
adc
ret
arpl
cs
xchg
js
loope
mov
aam
lods
sbb
stc
jecxz
and
jb
nop
xchg
out
mov
jge
xchg
jne
dec
dec
test
in
mov
jne
or
push
lods
fisubl
addb
out
insl
out
faddl
cld
ret
xor
pusha
fnsave
jecxz
mov
outsl
movsl
inc
stc
into
cmpsb
dec
sub
xor
jb
es
rclb
inc
mov
mov
sbb
loope
fs
dec
incl
sbb
sahf
mov
icebp
scas
repz
dec
stos
push
sbb
sub
sub
mov
push
lods
loop
mov
loopne
dec
lret
ret
sahf
cltd
push
aas
jl
mov
ds
mov
addl
popf
sbb
push
mov
mov
and
pop
push
and
std
fwait
pusha
out
test
shrb
out
stos
xor
jmp
and
sbb
adc
sbb
cmp
rcrl
or
addr16
xchg
aam
pop
xchg
js
popa
std
or
negb
sub
push
mov
and
cmp
pop
loopne
fstpl
dec
ret
pop
jb
or
push
push
sub
pushf
lcall
shr
lcall
loopne
les
dec
sarb
repnz
roll
mov
cmp
fldt
push
sub
pop
ret
icebp
xchg
aaa
mov
mov
pop
sub
data16
sub
sbb
fstps
out
nop
mov
int
add
imul
cmp
mov
loopne
push
out
sub
in
arpl
pop
jno
nop
shl
adc
data16
sahf
sub
das
dec
test
lahf
repnz
jb
in
mov
clc
add
shrl
loope
cli
or
adc
and
xchg
adc
adc
scas
inc
mull
daa
or
lds
xor
or
inc
sbb
jmp
mov
mov
sub
xchg
mov
out
adc
mov
or
cli
mov
mov
adc
call
mov
add
push
in
loopne
mov
leave
fldt
or
and
cmc
not
cwtl
stos
mov
jmp
int3
xor
loopne
push
or
out
jle
in
pop
add
test
cld
stos
sbb
push
outsl
in
je
dec
inc
inc
nop
xchg
lcall
test
js
dec
rcr
icebp
pop
and
icebp
into
cmc
lds
xchg
fcoms
xchg
and
aam
rcrl
popa
movl
and
lds
fisubrl
dec
mov
pop
push
addb
imul
inc
cmp
testl
inc
sti
pop
lcall
inc
dec
daa
pop
mov
inc
mov
sbb
stos
and
in
jnp
cmp
mov
jmp
mov
roll
mov
mov
jp
in
adc
inc
out
les
and
jp
or
pushf
push
nop
lods
call
testl
xchg
inc
outsb
sub
or
adc
push
sub
cli
fidivrs
add
les
adc
xchg
cmp
adc
imul
lret
loop
int3
ja
cmp
ljmp
mov
fimull
movl
fstl
arpl
inc
sub
cmp
ljmp
or
adc
out
jne
out
pop
cmpb
adc
popa
xchg
cs
jns
fidivrs
cmp
sbb
lcall
push
push
pop
jmp
inc
xor
fadd
sub
lret
ss
lock
jno
cmp
xchg
fwait
cmp
aam
mov
mov
sub
and
push
js
adcb
into
or
adc
hlt
in
cld
push
mov
les
and
ja
or
dec
scas
mov
adc
ljmp
dec
out
xor
and
push
cwtl
cmpsb
push
fdivrl
addr16
mov
mov
pushf
fwait
imul
andl
pop
mov
cmp
mov
test
mov
or
aam
hlt
or
lret
outsl
push
pop
lahf
xchg
pushf
aad
lcall
int3
cmp
addr16
xor
jno
jne
into
orb
stc
das
adc
xor
xor
or
notl
jo
je
dec
mov
mov
jge
sub
sti
mov
pushf
roll
ret
pusha
jmp
adc
push
je
enter
cld
xchg
sarb
jecxz
mov
das
cmc
fs
jbe
rclb
loope
mov
jl
retw
xchg
sti
out
xlat
pushf
rorl
loope
inc
ret
sub
and
imul
in
xor
stos
ds
data16
mov
in
sbb
xor
cld
xchg
and
bound
cmp
lods
cmp
or
adc
faddp
mov
cmp
mov
adc
outsl
lret
push
andb
mov
xchg
add
jbe
repz
mov
lea
jmp
stos
dec
loope
inc
cmp
or
inc
jle
subl
loopne
shlb
dec
inc
mov
jmp
jns
pop
push
popa
cld
mov
inc
xor
xor
push
data16
mov
mov
sbb
pop
rep
jno
xchg
aam
ret
push
or
mov
push
push
mov
in
cmp
xor
fstpt
mov
outsb
out
sbb
subb
aas
popa
xchg
test
fidivrl
mov
icebp
pop
outsb
jecxz
and
jmp
or
pop
imul
cs
mov
jno
mov
pop
hlt
popf
movsb
adc
mov
sub
pop
aad
or
xchg
or
xchg
xchg
clc
and
mov
xchg
xchg
jae
mov
aam
jnp
loopne
mov
outsl
sub
mov
inc
adc
jle
mov
sub
movsl
cmpsb
es
sti
jno
xor
adc
mov
ret
add
lahf
lret
in
cmp
lret
scas
rcll
xlat
push
adc
lcall
sub
call
add
mov
mov
jns
pop
adc
outsb
mov
out
sub
fistps
dec
jmp
divb
repz
insb
xchg
jmp
ret
aas
pop
aaa
loop
push
cld
cmc
out
add
bound
std
or
pop
push
je
and
lahf
ss
stc
cltd
cltd
sbb
rorl
sti
xchg
xor
cmp
xchg
xor
mov
fimull
mov
cmpb
sbb
mov
jnp
mov
cmpsb
mov
inc
and
mov
enter
ret
pop
mov
sub
cmp
jge
mov
sbb
sarl
mov
je
cltd
inc
jo
arpl
cmp
jecxz
icebp
std
mov
cmp
or
scas
jne
jb
pop
fcmovu
inc
cmp
sub
lods
loopne
sahf
fimuls
aaa
call
xchg
xchg
dec
adc
sub
mov
lea
test
adc
jp
call
hlt
lcall
inc
add
lods
inc
dec
dec
out
insb
lods
mov
sbb
scas
xor
dec
mov
push
cmc
daa
push
mov
xchg
repz
jg
outsl
dec
movsl
jl
sarb
lods
scas
es
mov
mov
add
xchg
in
fsub
pop
popf
in
mov
push
int
mov
icebp
inc
cmp
aas
adc
sbb
pop
cwtl
jne
and
fdiv
sar
clc
fstps
movsb
int3
gs
cmp
mov
inc
dec
int3
roll
stos
cmp
enter
mov
push
cmp
mov
jnp
dec
mov
lahf
push
in
cwtl
ret
vmwrite
add
test
push
call
adc
add
fwait
ret
decl
fcmovbe
les
pop
outsl
jle
clc
add
inc
fimull
out
jno
icebp
stos
int3
mov
inc
stos
ljmp
and
dec
and
dec
push
aas
push
add
push
xor
mov
jg
test
in
imul
js
mov
nop
xor
push
mov
inc
out
xor
or
jae
loope
lea
add
jg
lcall
ss
aam
sub
push
enter
mov
add
lret
maxps
mov
out
add
jmp
scas
xchg
mov
repz
mov
add
mov
cwtl
mov
stos
mov
insb
jmp
mov
jge
fdivrl
ss
xchg
jmp
cld
jle
subl
add
out
sbb
jne
and
pop
addr16
pop
sub
mov
mov
outsl
xor
cli
xchg
test
daa
jle
daa
arpl
arpl
xchg
add
mov
out
div
cmpsl
jge
cli
fsubrs
mov
scas
add
hlt
mov
stc
rorl
dec
shlb
push
jns
pop
or
xor
mov
mov
jmp
dec
stc
inc
pop
pop
popa
idivl
mov
fcomi
mov
push
fistl
mov
pop
or
and
fistpll
repz
loop
repz
lods
push
scas
push
pop
out
fbld
xchg
loope
aas
dec
and
xchg
in
cld
movsl
fdivs
movsl
and
loop
test
movsb
push
pop
dec
jns
mov
pop
mov
lcall
mov
push
popa
add
lock
inc
mov
mov
call
xor
repnz
adc
dec
in
xor
sbb
add
aas
cli
movsb
cmp
leave
xor
add
bound
sub
pop
or
mov
inc
pushf
inc
bswap
mulb
adc
rolb
fimull
in
and
pop
add
lods
dec
das
shll
jnp
shrb
adc
sbb
add
jae
test
jge
test
push
cmp
jmp
add
pop
cmc
lds
pushf
out
arpl
jg
insl
cltd
inc
in
lock
mov
out
xor
mov
cld
sbb
mov
push
push
push
fsubrl
js
in
cmp
test
ds
js
push
das
icebp
inc
mov
sub
inc
cltd
xchg
ds
rcr
outsl
les
adc
je
aaa
outsb
mov
lock
jmp
int3
dec
inc
jno
stos
mov
inc
out
fwait
xlat
mov
dec
mov
int
loope
mov
inc
xlat
in
pusha
pop
cli
xchg
repz
jmp
mov
xor
call
jle
fildll
shll
jno
cmp
imul
sarl
outsb
mov
mov
adc
imul
jle
dec
mov
pop
daa
andl
push
outsb
out
adc
inc
arpl
mov
gs
pop
popf
add
mov
sub
mov
pop
test
sbb
push
dec
jno
roll
xchg
inc
cmp
jae
sub
push
fidivrl
mov
fsubrl
adcb
in
negb
imul
cmpsl
inc
in
inc
push
ds
sbbl
mov
mov
js
movsl
cs
dec
iret
pop
mov
in
xor
arpl
ds
cmp
enter
jecxz
mov
je
rep
jmp
add
push
mov
xchg
cmp
sbb
bound
push
test
addr16
cs
rcll
cltd
and
or
jns
xor
push
scas
push
dec
push
mov
push
in
sti
sbb
xchg
ret
scas
xor
andb
sub
sbb
xor
inc
fldcw
gs
dec
xchg
lahf
int3
and
movsb
jle
cs
shr
repnz
sub
pop
ret
cmc
adc
or
jg
ds
jle
xlat
dec
enter
out
stc
sbb
inc
outsl
lods
xlat
mov
xchg
stos
nop
scas
xchg
ret
dec
dec
fmuls
mov
outsb
pushf
mov
int
outsb
mov
negl
inc
xorb
pop
sbb
stos
mov
leave
dec
and
xor
xor
je
mov
jmp
fcompl
in
sbb
jp
pop
sub
iret
mov
popa
mov
pop
ds
sub
mov
fisubrs
push
pushf
and
stos
and
jmp
sub
sbb
imul
ja
in
jl
dec
sbb
sub
nop
outsl
pandn
jnp
jmp
pushf
mov
data16
je
icebp
mov
xor
push
sarb
shlb
ljmp
cmp
inc
cmc
adc
fnstcw
jae
and
test
sub
jge
in
adc
rclb
cs
mov
test
adc
sbb
jp
cmpsb
movl
arpl
pushf
aas
sub
dec
jae
pusha
andb
pop
jmp
jge
outsl
rorb
push
je
sub
sub
test
inc
movsb
hlt
mov
sbb
push
int3
sbb
push
and
sbb
test
cld
int3
test
pop
aas
add
xchg
popl
into
std
push
sbb
jl
test
xor
push
and
mov
cld
imulb
pop
push
es
js
xor
les
mov
sub
xor
mov
jae
icebp
mov
adc
pop
xor
lods
enter
and
push
popa
aad
insb
sbb
xchg
inc
xor
test
xchg
sub
leave
xchg
in
dec
mov
iret
jno
mov
imul
aam
fildll
jecxz
daa
adc
das
push
jns
lock
inc
adc
aam
cmp
dec
addr16
jecxz
push
das
fs
xor
sub
inc
cmpsb
daa
xor
shll
mov
lcall
mov
std
push
cli
mov
into
pop
test
and
and
ffree
es
cmp
mov
mov
mov
int
out
repnz
test
mov
cmp
sbb
iret
xorl
pop
push
fsubl
pop
xor
mov
sub
xor
dec
outsl
leave
ret
push
xor
lods
and
popf
lahf
icebp
lods
and
mov
push
xchg
push
lret
in
push
add
mov
mov
arpl
cwtl
adcl
dec
push
mov
xchg
sbb
inc
dec
dec
jl
xchg
icebp
sbb
push
js
jb
andl
div
mov
add
stos
pop
lods
pusha
jmp
scas
add
cmc
idivb
pop
push
xchg
xchg
xchg
xchg
dec
hlt
mov
stos
dec
cli
fstl
mov
push
dec
mov
test
push
in
and
or
rorb
arpl
cmp
push
inc
lock
sub
stos
adcl
and
mov
lods
jecxz
jnp
shrb
cwtl
jmp
cmp
cmc
scas
xchg
lret
sub
push
ret
lcall
imul
jbe
fmull
pop
push
cmc
inc
sbb
add
cmpsb
and
jae
dec
cli
ret
jo
and
test
jnp
adc
and
inc
fisttpl
adc
clc
push
jnp
sbb
cmpsl
sbb
xchg
test
outsl
mov
jae
xchg
loop
pop
mov
test
mov
xor
push
aam
inc
lods
into
mov
out
fcmovnbe
rorb
mov
std
push
ret
incb
int
xchg
pop
test
loopne
aad
dec
jge
outsb
stc
cmp
mov
scas
lock
adc
fcomi
jae
hlt
int3
insl
jne
inc
xchg
cltd
out
or
cmp
lods
fsubr
mov
pop
cmp
test
subl
in
mov
sub
xchg
jp
addl
mov
jl
movsb
sahf
ss
mov
push
rorl
sub
out
or
scas
xor
orl
inc
xchg
fisttpll
loopne
lea
mov
sub
addr16
stos
xor
mov
out
and
xor
dec
mov
es
icebp
pop
shr
aaa
xchg
loope
pop
in
add
ljmp
mov
dec
inc
dec
jo
lahf
cmpsb
jae
sub
addr16
xchg
fnstenv
loope
add
sbb
adc
jecxz
sub
mov
xor
mov
popf
sahf
and
imul
sub
cltd
mov
movsl
mov
roll
mov
sbb
or
std
mov
xchg
sahf
fmul
fidivl
mov
iret
add
jp
fwait
inc
mov
xchg
mov
or
sub
insl
test
cmp
popa
aad
jno
orb
andb
sbb
nop
aaa
cmp
sub
or
gs
pusha
adc
ret
dec
and
clc
sbb
aam
movsb
mov
cltd
xchg
jne
adc
jecxz
enter
add
push
mov
add
inc
sbb
cmpsl
js
mov
shlb
pop
popf
adc
aad
sbb
ror
jb
sub
in
sub
fidivrs
inc
add
das
xchg
adc
dec
lock
or
or
mull
mov
repz
push
aaa
in
xchg
lock
cmpsl
gs
sub
cmpsb
inc
lods
push
fiadds
dec
clc
pop
sub
and
outsb
inc
movsl
and
lahf
push
subb
dec
adc
data16
push
inc
in
cmp
cmp
push
mov
movl
cmpl
ljmp
add
inc
in
mov
fistpl
adc
mov
int
and
mov
xchg
xor
inc
push
outsl
imul
gs
ds
shll
pop
sbb
inc
and
bound
dec
test
xor
pusha
negl
lea
int3
std
sbb
jp
adc
cmp
cli
popa
lcall
movsb
and
pop
sub
outsl
fdivrs
inc
mov
dec
mov
push
aad
adc
add
in
fists
shr
pop
jbe
add
imul
les
and
sbb
test
pop
dec
subb
fisubl
pop
push
add
loope
dec
adc
pop
jle
jbe
scas
push
xchg
fdivs
jnp
and
pusha
sbb
cwtl
xlat
or
in
rolb
sbb
jg
xor
inc
sub
mov
pop
xor
mov
xlat
cmpsb
mov
inc
add
pop
loope
bound
sub
clc
cmpsb
cmp
mov
or
sbb
jmp
inc
xchg
pop
and
jge
repnz
add
push
arpl
adc
shlb
xor
pop
clc
mov
aad
push
or
dec
loopne
std
mov
xchg
inc
push
call
rorb
hlt
fistpl
push
popf
pop
jbe
outsb
push
lock
push
xor
roll
sub
loope
xchg
mov
into
inc
rorb
leavew
jecxz
mov
sbbb
fistl
sbb
aad
adc
pop
enter
jbe
push
pop
mov
pop
into
jmp
sub
mov
dec
xor
mov
jnp
mov
rorb
add
daa
rcll
cmc
pop
test
pop
mov
imul
repz
stos
xchg
mov
shlb
jns
xchg
or
or
jbe
les
scas
cmc
jge
mov
push
dec
pop
mov
imul
sub
dec
repz
cmp
loope
gs
adc
enter
push
adc
pushl
add
lcall
sub
jo
pop
cmp
fwait
ret
or
les
daa
cwtl
inc
sbbl
mov
lret
std
mul
out
dec
mov
adc
fwait
in
test
pop
xchg
pop
xchg
or
cltd
add
adc
leave
jo
jae
mov
cmp
dec
cmp
or
lods
sahf
sub
das
cmp
mov
movsb
jne
mov
xchg
xor
cld
dec
daa
aas
sahf
adc
out
dec
dec
je
test
push
xchg
js
das
mov
pop
cmc
xchg
xor
dec
inc
testl
fisttps
lahf
imul
lret
jno
add
xlat
lds
mov
jp
cmpsl
sbb
xchg
fcomps
dec
lahf
aad
cltd
mov
cmp
jo
or
sbb
fmul
push
add
adc
push
sbb
or
in
andb
jmp
pop
repnz
out
push
jl
in
jmp
push
xchg
push
cmp
xorl
mov
push
or
xchg
insb
pusha
jecxz
dec
mov
movl
jns
lret
call
lods
cmpsb
repnz
jns
cli
nop
dec
xor
addr16
test
mov
mov
push
std
sub
mull
xchg
xor
add
jmp
lds
imull
test
ret
xchg
pusha
add
inc
xchg
xchg
loop
jnp
push
dec
cmp
dec
mov
daa
stos
xchg
repz
lea
cld
sbb
inc
inc
gs
add
sub
mov
xchg
shrb
xor
push
sbb
ret
cmp
jbe
and
mov
jmp
sbb
pop
inc
sub
lahf
xor
test
in
and
add
push
call
jp
push
cli
mov
mov
cld
xchg
inc
daa
bound
adc
dec
jbe
rclb
cmp
imul
and
std
jecxz
outsl
inc
fbld
cld
out
cmp
call
in
or
dec
movsl
xchg
or
fldenv
xchg
cli
loope
xchg
popa
enter
xchg
sahf
xchg
inc
imul
push
nop
roll
fildl
add
enter
push
int
mov
mov
sbb
scas
mov
dec
mov
adc
adc
sub
iret
mov
adc
sub
mov
lcall
pushf
mov
add
inc
stos
mov
cmp
mov
std
leave
pop
les
outsb
pop
sub
imul
cmp
scas
or
cli
cltd
jge
setb
out
ret
mov
dec
insl
jno
mov
test
pushf
jo
loope
pusha
or
sti
fbld
addr16
int3
call
push
and
insl
mov
add
cmc
mov
popa
add
ds
adc
adc
mov
inc
mov
test
jl
jl
xor
stc
mov
dec
jno
flds
das
insl
mov
cmc
xchg
adc
push
movb
aaa
aaa
outsb
sub
cs
jnp
lods
rol
lahf
sbb
or
mov
fs
fcoml
sbb
and
xor
mov
mov
mov
mov
inc
dec
push
lea
sub
aad
in
loop
loope
xchg
fwait
in
add
aam
pop
jle
jbe
add
shrb
iret
sti
fwait
inc
es
testb
mov
sub
push
sbb
xchg
xchg
mov
xchg
sub
mov
push
adc
inc
enter
push
negl
pushf
pusha
and
sbb
sbb
inc
jne
mov
dec
jbe
xor
mov
cmp
push
pop
fisubrl
mov
addr16
pop
andl
sub
pop
cmp
xchg
jg
add
jle
repz
out
xchg
aas
ds
jbe
icebp
mov
insb
and
xor
pop
inc
cmp
mov
and
pop
pop
push
cltd
mov
test
add
mov
mov
xchg
mov
or
adcb
xchg
pushf
pop
pop
cmpsb
pop
cmp
jl
adc
pop
pop
lock
das
int3
xor
sub
xchg
xchg
lret
in
xchg
adc
cld
loopne
mov
popa
xlat
rorb
jmp
imul
cltd
hlt
or
mov
out
mov
sarl
sub
pop
std
outsl
lahf
ljmp
inc
shlb
cmp
jmp
in
sub
mov
loopne
sub
dec
add
test
das
push
es
int
lea
insl
xchg
inc
aad
dec
dec
jecxz
and
mov
stos
pop
ffree
ret
test
mov
clc
dec
pop
mov
rcl
and
jnp
pop
lahf
and
pusha
push
stc
pusha
icebp
dec
jge
add
push
jmp
fisttpll
jl
in
dec
inc
mov
mov
sbb
xor
push
cld
pop
in
adc
das
dec
jecxz
fs
adc
cmp
rcll
mov
loopne
mov
aas
push
out
push
mov
test
pop
hlt
lret
mov
and
xchg
and
sub
jl
test
push
les
jge
fwait
xor
lea
and
sub
add
idiv
cmp
cwtl
stc
aam
mov
push
sbb
jno
sub
in
mov
cmp
outsl
pop
and
ds
iret
sbb
jmp
mov
jecxz
add
sti
and
dec
jge
orb
mov
outsl
cmp
pop
cmc
pop
orl
dec
rolb
jo
movsl
adc
sbb
inc
adc
sub
and
jg
int3
adc
arpl
decl
mov
sub
insl
movsl
je
xlat
dec
cmp
cmp
mov
imul
daa
cmc
pop
inc
dec
push
ret
scas
jecxz
rolb
insl
jo
call
lret
hlt
jo
cmp
jns
cmp
mov
aaa
lock
nop
cmp
inc
outsb
sub
cwtl
mov
jo
repnz
mov
dec
test
dec
push
sbb
pop
aam
je
stos
and
sbb
push
outsl
or
clc
into
jl
ja
sub
pop
or
fstpt
push
push
lcall
xlat
in
push
out
jb
scas
lods
pusha
mov
ds
xchg
mov
jg
lret
xchg
mov
adc
adc
jno
insl
mov
lcall
lret
daa
leave
shl
or
adc
aad
cmp
out
sub
fidivl
int
xor
test
les
push
adc
pop
sbb
mov
dec
dec
mov
aad
mov
push
lea
dec
mulb
shlb
inc
call
stos
inc
jle
push
mov
and
dec
adc
aad
sub
mov
jecxz
mov
stos
lahf
dec
outsl
test
pop
inc
dec
ja
scas
stos
cmp
push
mov
mov
add
mov
push
iret
mov
fcmovnu
aaa
movsl
js
ret
sbbl
ja
lcall
sub
insl
daa
inc
cmp
mov
sub
or
test
mov
lods
add
sbb
aas
adc
lea
fcompl
pop
mov
push
inc
and
dec
hlt
rorb
aam
mov
xchg
ds
inc
pop
mov
outsl
gs
aaa
fwait
and
mov
push
fstp
and
out
aaa
pop
sahf
in
and
cmpsl
sub
sbb
pop
inc
subb
jmp
arpl
lock
lret
imul
movsl
and
xchg
xor
outsl
dec
mov
fcomip
mov
ret
and
cmp
pop
aas
movsb
mov
das
dec
mov
js
aam
inc
insb
xchg
inc
aad
push
add
int3
gs
xchg
dec
dec
adc
pop
nop
fdivl
adcl
mov
xor
dec
or
dec
imul
jle
rorl
nop
add
push
pop
sbb
dec
lods
cli
imul
adc
mov
xor
dec
cltd
outsb
jge
adc
or
sub
call
cli
inc
sub
and
enter
jge
addr16
push
jl
xor
shll
jmp
test
fldcw
loop
adc
and
in
jnp
xchg
cmp
ret
gs
pop
or
or
stc
push
sbb
mov
out
inc
sti
decl
je
popfw
fldl
dec
and
pop
xor
insb
dec
cmp
enter
xchg
add
into
cmp
mov
jle
jmp
push
push
insl
pop
or
shll
mov
cmpsb
lods
xlat
push
push
enter
scas
xor
jge
dec
dec
or
ret
test
and
mov
xlat
fsub
fisubs
neg
dec
push
gs
in
xchg
jp
mov
inc
adcb
movsl
jne
das
stos
add
movb
cld
inc
xchg
jge
and
jne
fistpl
stos
xchg
aad
mov
inc
fisttps
xchg
jecxz
lcall
repz
push
les
sbb
jecxz
push
sbb
popa
cmpsl
dec
mov
push
push
lods
imul
ret
std
in
push
or
pop
mov
dec
jle
push
int3
adc
test
je
jae
xchg
sti
enter
push
cmc
jb
pushf
mov
or
pop
and
divl
pop
jbe
or
push
loopne
add
sub
mov
shlb
cld
cmpsb
mov
push
insb
test
stos
sbb
out
lock
jmp
sub
nop
push
sbb
lea
mov
mov
lahf
popf
int
pop
xchg
lods
and
sbb
cld
mov
mov
xchg
scas
cmc
data16
jnp
loope
jo
in
mov
data16
jl
sahf
mov
stos
and
dec
pop
std
pop
in
mov
aam
pop
lock
mov
jle
cli
pop
sub
jns
xchg
rcr
js
adc
adc
popf
push
xchg
js
pop
add
mov
adc
cwtl
mov
xor
loope
lret
mov
sbb
scas
stos
sub
ljmp
fisubrs
mov
cmp
pop
sub
call
pop
jne
loopne
lods
jbe
jbe
jg
scas
test
cld
fisubs
or
sbb
das
inc
dec
cltd
dec
out
jo
mov
in
fdivs
push
push
pop
in
fcoms
dec
lcall
dec
pushf
fs
jmp
inc
fisttps
jne
clc
lods
sbb
mov
dec
pop
lahf
mov
add
cmc
push
mov
pushf
lods
add
add
jge
sarl
mov
dec
movmskps
insb
cmp
add
test
mov
mov
mov
stos
inc
or
addl
mov
out
outsb
inc
int3
jmp
adc
sbb
jecxz
scas
je
sar
mov
mov
outsl
adc
repz
rcrl
mov
xor
iret
dec
or
inc
leave
stos
fcom
and
inc
or
pop
cmp
push
xchg
lock
and
mov
fwait
cld
push
cwtl
pop
sbb
jb
push
push
xchg
test
add
clc
mov
inc
xor
call
adc
adc
popf
adc
lret
add
dec
adc
xor
aam
adc
lock
movsb
cli
es
subl
inc
sbb
in
adc
and
fwait
add
in
xchg
and
or
push
les
jnp
jge
cmp
in
push
push
mov
daa
addr16
jge
dec
shlb
xor
adc
and
js
shrb
pop
test
les
jns
inc
imul
ss
mov
pop
push
push
cmp
loop
push
push
sar
fmull
int
dec
jmp
cli
xchg
add
std
sbb
cwtl
dec
xor
out
cwtl
jno
test
mov
jb
int
inc
pop
push
cmp
sbb
sbb
aam
and
repnz
mov
addr16
xor
sbb
cwtl
mov
sbb
cmpsb
test
and
and
addb
popa
pop
stos
fstl
lahf
push
jecxz
inc
lods
call
loopne
fdiv
mov
fcmovnb
movsl
fcmovne
or
jg
dec
push
ds
pop
lahf
xchg
add
ja
dec
xchg
jb
jnp
bound
or
jno
add
das
ja
stos
mov
jno
leave
jg
lods
mov
push
lods
cli
hlt
mov
mov
push
jnp
imul
mov
dec
mov
dec
dec
bound
cmp
pop
mov
inc
lds
mov
aaa
je
xor
sub
and
pop
out
cwtl
aam
dec
jp
add
jmp
push
push
pop
adc
mov
xchg
mov
rcll
pop
int3
pop
aaa
hlt
repnz
mov
and
pop
dec
aaa
fs
mov
mov
mov
mov
imul
andl
inc
inc
push
clc
cmpsl
aaa
idivl
loope
stos
cmc
out
xchg
aas
sti
xor
cmp
mov
into
stos
inc
popf
fyl2x
out
xchg
mov
xor
das
or
lret
mov
mov
jns
jmp
addr16
mov
mov
sub
mov
push
int
sub
out
pop
dec
lcall
pop
je
or
mov
or
repz
adc
outsl
inc
inc
or
sti
lea
mov
roll
pop
pushf
jb
pusha
xor
pushf
ljmp
add
int
das
mov
and
push
fucomip
scas
mov
test
lcall
scas
mov
loope
sbb
je
cwtl
jl
es
inc
pop
adc
in
push
mov
loope
and
push
js
inc
js
andnps
mov
divb
mov
push
or
pusha
clc
call
push
mov
mov
std
cli
sbb
mov
pop
push
addr16
xchg
sbbb
adc
mov
inc
add
jl
fscale
iret
lock
andl
popa
fwait
mov
gs
push
mov
gs
leave
mov
orb
inc
add
adc
lea
lcall
push
lret
addr16
sub
cmc
addb
cmp
cli
lods
jnp,pt
mov
in
mov
xor
shlb
sar
pop
js
sbb
push
cmp
ret
fcomps
insl
mov
mov
pop
xchg
mov
cwtl
fdivs
pop
cmp
andl
xchg
xchg
mov
jno
add
ss
ficoml
call
mov
shrb
lods
arpl
or
out
aad
fcomps
out
pop
xchg
jae
mov
lds
stc
sti
aad
outsl
cmpl
clc
cmpl
cmovns
dec
xor
pop
dec
add
jb
fmuls
mov
dec
xchg
xlat
leave
scas
xchg
pop
int3
bswap
fprem
pop
roll
rorl
mov
or
fisubl
pop
cltd
jge
push
test
rolb
mov
push
les
loopne
push
push
mov
adc
daa
jne
push
mov
stos
push
pop
insl
mov
sbb
push
pop
filds
push
mov
xchg
rorb
cmp
xor
ja
xchg
and
cltd
out
fldenv
mov
cmp
push
push
mov
xor
idiv
jb
mov
pop
enter
shlb
xor
movsl
sub
fnsave
add
in
sub
push
add
movsb
movsl
dec
pop
clc
cmp
push
sbb
mov
fucomp
ss
or
inc
stos
imul
xlat
popf
sti
pop
outsb
lret
xor
xor
jb
xchg
mov
aam
dec
fimull
call
js
mov
sti
repz
loopne
rcrl
inc
xchg
stos
loope
jle
or
in
daa
push
insl
mov
out
push
in
push
test
loope
dec
adc
xor
arpl
adc
push
mov
imul
jno
mov
mov
test
ljmp
adcl
xchg
pop
inc
mov
je
inc
data16
add
push
jl
fmulp
xor
sbb
xchg
jmp
in
rcrl
adc
test
inc
iret
mov
xor
shrb
ret
mov
ret
dec
decl
int
push
imul
pop
dec
leave
mov
mov
xchg
adc
mov
push
inc
scas
mov
pop
hlt
in
arpl
sti
repnz
mov
fmul
jl
into
xor
js
push
cmpsb
mov
push
popa
adc
fmuls
pop
mov
shlb
xchg
imul
adc
push
sbb
bound
xor
stc
dec
out
mov
test
lds
das
out
rorb
test
jge
aaa
push
or
mov
ss
push
lret
pop
jno
ret
sub
std
push
push
cs
movsl
pop
mov
data16
mov
je
fsubs
out
loop
xor
push
xchg
mov
pop
jmp
lods
mov
xchg
sub
cmpsl
lock
lcall
out
or
repz
mov
pop
repnz
cmp
data16
mov
dec
push
aam
jmp
dec
hlt
loopne
sbb
call
repnz
imul
daa
mov
dec
jle
jb
inc
push
aaa
sub
or
lret
js
in
pop
jmp
jbe
jne
or
jl
sbb
xor
lods
int
push
mov
aas
imul
push
pusha
dec
out
adc
lahf
pop
mov
sub
adc
inc
adc
iret
rorl
sbb
mov
rolb
pop
fsubrl
xor
pop
imul
outsl
fistps
bound
sbb
mov
mov
push
xor
data16
inc
cwtl
pop
sub
lds
dec
xlat
jbe
in
repnz
or
popa
out
fildl
shrl
sbb
adc
push
loopne
jg
mov
fsubs
xor
sbb
testl
pushf
lcall
js
ret
call
xor
ljmp
in
fidivl
cwtl
inc
push
jmp
pop
pop
ljmp
or
loopne
pop
loopne
ret
jecxz
xor
icebp
jmp
mov
push
daa
leave
mov
cld
xchg
xchg
hlt
mov
xchg
sti
in
mov
sub
imul
cmpsl
bound
dec
push
mov
and
cld
mov
out
leave
repz
mov
sbb
iret
pop
and
inc
ret
push
jno
pop
sahf
cltd
dec
insb
data16
cmpl
add
popa
fwait
lahf
add
js
mov
xchg
divl
push
stos
dec
outsb
rorb
mov
xchg
pushf
pop
inc
pop
into
mov
stos
mov
and
jns
push
mov
or
sub
xor
dec
shl
adc
popf
scas
pushf
lret
and
cmpsb
push
dec
and
xchg
xchg
xor
inc
ljmp
shll
pop
mov
xlat
add
lahf
fwait
lods
std
mov
stos
mov
out
sti
ss
sub
test
xorl
sub
pop
push
or
xchg
pop
iret
or
insl
inc
adc
addr16
sahf
ret
cmp
scas
jns
idiv
icebp
test
or
out
jg
lret
mov
xchg
mov
jb
rclb
loopne
pop
mov
scas
mov
std
in
xor
push
dec
and
dec
mov
sti
pop
movsb
add
adc
mov
js
add
push
cwtl
push
dec
xor
pop
or
adc
mov
xchg
shll
push
jl
aam
sbb
jl
jns
inc
adc
jge
fldenv
mov
dec
je
pop
js
in
out
and
adc
std
cmpsl
and
fdivrl
lock
out
dec
lods
mov
popf
cmc
outsb
enter
lea
stos
les
mov
stos
cmc
adc
inc
es
shrd
and
into
addr16
into
or
mov
daa
js
jle
dec
jne
and
xchg
push
dec
insb
lods
imul
outsb
sub
shr
mov
pop
pushf
out
mov
idivb
sub
inc
mov
pop
ja
mov
mov
ja
les
je
mov
push
jmp
inc
pusha
mov
filds
inc
rorb
push
fdivrs
jg
pop
inc
jp
ret
mov
lcall
call
push
aad
movsb
jg
sbb
inc
mov
out
mov
xchg
lea
jnp
push
pop
xchg
push
sub
jle
nop
mov
cmc
mov
xchg
cld
sbb
rcr
xor
fidivrs
movsb
add
std
dec
push
inc
cmc
daa
lock
and
jae
leave
div
lea
push
mov
pop
lods
cld
cmp
lods
mov
sub
pop
cmpsb
cs
jb
mov
incl
test
fcmovne
or
pop
call
push
pop
mov
dec
fdivrp
push
in
in
sub
sub
ljmp
pop
xor
xor
pop
adc
test
jle
into
cwtl
pop
mov
fpatan
movsb
xchg
pusha
sbbb
movl
shlb
mov
pop
add
and
mov
push
lahf
push
mov
stos
rcrb
dec
js
dec
sbb
mov
add
mov
jns
popw
mov
jge
insb
daa
mov
mulb
or
inc
popa
movsb
fs
or
mov
mov
lcall
mov
add
out
fwait
xor
fdivl
leave
mov
push
fnsave
cmp
jmp
lret
xchg
scas
test
inc
adc
ss
cld
xchg
sub
inc
mov
adc
fisttpl
sub
inc
clc
adc
or
push
dec
testb
push
addr16
rcl
imul
outsb
push
jecxz
or
aam
xchg
loope,pn
subb
aas
push
jb
sub
mov
divb
js
mov
loopne
into
sti
repnz
idivb
out
inc
or
mov
cmp
cld
xchg
es
leave
push
icebp
inc
out
sbb
or
rorb
and
fwait
jo
mov
popa
adc
jmp
and
dec
jl
jbe
int
inc
andl
push
lret
inc
pop
sub
xchg
mov
cwtl
mov
inc
imul
shll
or
xchg
xchg
pop
mov
inc
push
dec
fldt
mov
jg
imul
inc
mov
and
jbe
lcall
cmp
and
cmpsl
popf
adc
sub
mov
je
add
sub
loop
mov
cli
fcomps
int3
mov
xlat
jns
daa
push
lea
and
sahf
mov
lret
xchg
js
out
sti
aam
xchg
inc
pop
push
hlt
push
sbb
lock
sbbl
sub
pushf
sbb
jo
lods
cmc
movsb
dec
dec
rsqrtps
out
es
lods
cltd
cwtl
sar
mov
xor
leave
adc
and
dec
add
hlt
mov
out
ss
ss
popa
cmc
xchg
sbb
add
test
test
test
stc
push
sbb
jae
scas
xchg
jbe
jmp
xchg
mov
adc
gs
daa
adc
arpl
sub
mov
xchg
fidivrl
jno
add
ret
mov
xchg
pop
mov
scas
mov
lret
shrb
cltd
sti
rorb
lods
adcb
into
pop
aad
cmpsl
push
push
sub
rol
pop
in
iret
push
idivl
orb
movsb
xchg
das
stc
loope
sti
popf
inc
mov
pushf
add
aam
sbb
aas
xor
iret
push
cs
sub
xor
mov
cs
in
mov
test
testb
mov
mov
out
rcl
dec
inc
pop
lcall
jl
loope
and
inc
mov
mov
adc
and
push
and
pushf
nop
add
enter
and
ret
jo
jo
lds
push
jne
nop
inc
lret
mov
mov
mov
dec
pop
lret
dec
arpl
jns
lds
in
add
sub
mov
outsl
outsb
sbb
inc
xlat
add
fsubrl
cs
mov
xlat
imul
pop
test
mov
in
pop
pop
incb
jne
jns
or
fisttpll
rclb
or
lods
push
adc
push
ja
xlat
testl
int3
daa
call
dec
mov
ror
sbb
out
movsl
pop
dec
push
push
sti
arpl
gs
sbb
rcll
leave
aad
pushf
xchg
xor
sbb
add
push
neg
adcb
mov
fsubs
mov
lock
mov
ret
jmp
push
pushf
repnz
xor
sarb
or
push
test
mov
sbb
jne
cmp
xor
inc
jp
fsubrs
jp
xor
and
loope
push
mov
jle
std
gs
lahf
in
jne
adc
ds
stos
lock
daa
ret
ja
cmp
and
xchg
stos
xchg
or
mov
out
mov
ds
mov
or
int
sbb
popf
or
sahf
jb
pusha
push
jbe
rorl
or
pop
mov
or
test
dec
pop
add
aaa
nop
lret
jnp
and
pop
and
push
pushf
add
arpl
mov
shll
xchg
addr16
ds
add
icebp
cmp
fistl
leave
add
push
in
cmc
and
jns
or
push
mov
cmpsl
gs
mov
scas
hlt
ja
pusha
call
jl
insb
cmp
ljmp
cmpsl
mov
loope
push
adc
test
xor
xchg
mov
mov
push
mov
mov
imul
sub
in
xor
dec
xchg
dec
rcll
daa
fstps
ds
ljmp
inc
sub
lret
add
lret
and
lret
test
int3
pop
inc
shrl
mov
movsb
roll
mov
shrb
or
mov
inc
jg
jo
or
int
push
pop
jbe
jb
out
subb
mov
push
push
frstor
stos
pop
sbb
lea
and
ljmp
cs
add
leave
leave
add
xlat
movsl
cmp
dec
popa
test
scas
add
pop
lods
jnp
push
dec
ss
cmpsb
pop
sahf
xchg
mov
pop
loope
mov
cmp
sarl
sub
add
in
fcompl
imul
push
std
test
fidivl
xchg
dec
lock
popf
loope
mov
decb
popa
xor
push
ss
xorb
into
sub
lods
loope
in
xchg
or
sbb
fiadds
mov
push
jle
pusha
scas
xchg
stos
push
jecxz
je
stos
andb
xor
add
in
push
dec
gs
stos
sub
test
dec
ret
pop
lahf
inc
push
jns
pop
push
test
in
pop
repnz
sub
pop
in
aam
outsb
out
sarb
test
aas
mov
mov
aas
loopne
std
xor
ja
mov
ljmp
call
jae
stos
stc
xor
int3
xor
xchg
insb
dec
adc
mov
lea
clc
test
call
mov
repz
pushf
shlb
imul
pop
in
dec
cld
popf
call
inc
dec
rorb
add
aad
jp
loope
not
and
hlt
mov
int3
and
enter
iret
inc
stc
lahf
addr16
xchg
call
sub
adc
sbb
add
or
in
lret
mov
leave
lahf
add
mov
fidivl
jg
mov
and
mul
lret
mov
dec
pop
repz
and
rcl
daa
cmpl
iret
xchg
mov
ds
inc
loope
rorb
jge
loopne
mov
mov
and
inc
xchg
pop
add
fstpl
jbe
pop
dec
cld
push
xlat
add
push
cmpsb
inc
sarl
cmp
gs
and
movsl
dec
out
xor
sub
mov
int3
scas
jg
insl
pusha
mov
ss
and
pop
sbb
push
std
and
lods
cmc
add
sub
add
in
clc
push
mov
fnstenv
cs
rclb
stos
das
jl
das
je
pusha
pop
mov
mov
mov
aad
pop
fisttps
mov
outsb
test
push
ds
mov
sub
mov
and
call
sbb
mov
add
imul
fcos
jae
mov
pop
xor
pop
pushf
cmpsl
and
dec
in
xchg
outsb
jne
lock
cmp
ljmp
popf
cmp
jl
dec
lea
movsl
mov
add
pop
fisubs
jp
xchg
das
stc
pushf
lea
cmp
outsb
mov
push
inc
shll
out
fbstp
and
push
mov
es
jae
mov
fisttpll
inc
mov
mov
out
or
incb
mov
popa
in
arpl
sbb
jl
or
mov
add
int3
pop
outsl
aas
pop
popa
in
mov
fildll
xchg
push
lea
jle
iret
mov
push
testl
push
xor
test
push
stc
inc
add
loopne
mov
clc
imull
mov
xchg
js
ret
pop
insb
lret
test
sbbl
xchg
xchg
lods
push
aad
leave
adc
mov
dec
inc
daa
pop
insb
lcall
in
xor
xlat
inc
insb
jmp
dec
push
stos
int3
out
stc
push
out
gs
shrl
lea
push
adc
cmp
mov
out
xchg
lret
cltd
out
popf
scas
mov
jne
and
fidivrl
in
sbb
shrl
pop
mov
dec
clc
xchg
cmc
add
inc
pop
and
or
leave
sti
shlb
sbb
repz
cmp
pop
aaa
cmp
fidivs
cmp
loop
adc
lcall
jo
fnop
aam
jle
mov
push
outsl
je
sbb
out
jp
lods
ret
inc
push
and
dec
out
xlat
sub
pop
les
std
gs
lret
and
gs
mov
out
lcall
sub
mov
orl
icebp
cmp
pop
push
jecxz
dec
lret
xchg
or
mov
dec
pop
je
int3
ret
js
sbb
mov
in
outsb
mov
mov
pop
and
sub
sbb
in
add
adc
out
cmp
push
lahf
repz
hlt
movsl
sub
xchg
jne
ljmp
data16
lock
mov
jne
jne
ret
sub
pop
cmp
push
xchg
dec
lods
jae
xchg
xchg
push
jge
adcb
push
mov
sbb
lahf
int3
cld
aas
outsl
in
push
mov
inc
out
lcall
stos
lods
and
loopne
sbb
mov
in
lods
addl
aad
scas
xor
jno
sbb
dec
sbb
nopl
jbe
jbe
sbb
rorb
add
sub
popf
popa
scas
and
inc
xchg
stos
dec
js
in
lea
out
scas
ret
stos
mov
jno
lods
adc
dec
mov
xor
xlat
pop
mov
out
jp
adc
imulb
aas
stos
mov
sti
push
add
pop
add
xchg
push
bnd
mov
xlat
vpshaw
sub
outsl
jne
xchg
mov
aas
mov
add
arpl
mov
aam
imul
outsb
sbb
andl
cmp
stc
hlt
fnstsw
sub
lds
or
scas
or
push
push
xchg
sahf
cmpsl
or
mov
jb
out
jle
je
add
sub
cmp
sbb
imul
outsl
loopne
dec
xor
xchg
daa
cmp
lahf
and
pop
mov
push
cli
adc
loope
mov
hlt
push
mov
repnz
mov
xchg
popa
sti
stc
push
jmp
mov
and
fidivrs
rolb
dec
rcll
pop
imul
sbb
in
push
shlb
pop
mov
subl
out
mov
in
push
popa
mov
sub
mov
ret
filds
xchg
dec
fldl
lret
or
in
cld
mov
mov
xor
push
jno
stos
aad
dec
and
call
mov
mov
push
pop
and
cmp
dec
sbb
lcall
pop
pop
dec
and
pop
addr16
jo
inc
lock
daa
div
adcb
ss
out
pusha
jl
repnz
cmpsb
sbbl
iret
lahf
xor
aaa
imul
inc
mov
mov
shlb
add
ss
out
mov
dec
adc
jle
outsb
mov
outsl
inc
sahf
inc
loop
inc
fldcw
repnz
cltd
mov
add
pop
push
xor
lods
pop
cld
cmp
mov
sub
aas
stos
cmp
pushw
gs
fidivl
mov
hlt
call
les
stos
out
mov
pop
ljmp
or
push
jmp
insl
cmp
mov
cmp
jle
in
inc
mov
jle
pop
cli
mov
fmul
jno
int3
jns
sarl
frstor
das
lcall
inc
mov
pushf
xor
mov
test
xchg
lahf
fcmovnu
hlt
jg
test
cmp
rcl
jno
mov
clc
in
mov
scas
filds
stos
jbe
jecxz,pn
outsb
out
movsb
iret
lods
ret
idivb
inc
loopne
pop
scas
xchg
rcl
sub
and
fwait
aaa
or
fld
jo
lds
jb
das
mov
mov
pop
call
inc
aas
sub
pushf
out
shlb
pop
sbb
repz
jl
jmp
dec
push
xchg
gs
xorb
lcall
scas
inc
mov
arpl
std
movsb
pusha
repnz
lahf
and
mov
sub
loop
fwait
adc
xchg
pop
mov
lods
xchg
sub
sub
sahf
mov
loope
push
cmpsl
dec
mov
mov
xor
mov
push
ja
sub
xor
shl
and
and
out
xor
mov
add
mov
nop
sti
iret
jb
and
and
pushf
lahf
add
dec
jecxz
popf
js
sub
sahf
or
sbb
mov
mov
pop
out
arpl
fadd
into
fldenv
lahf
mov
test
out
imul
pushf
out
cltd
lock
cmp
mov
in
mov
popa
cwtl
dec
in
cmpsl
mov
fwait
mov
xchg
out
add
iret
insb
pusha
icebp
mov
lret
cmpsb
fdiv
xchg
lock
idivb
cmp
arpl
ss
loop
scas
sbbl
or
test
leave
jbe
outsb
add
and
mov
sbb
or
mov
push
aas
cltd
jge
fiaddl
mov
fcoms
lcall
mov
cmp
cmp
xchg
mov
aas
add
pop
xchg
push
fidivrs
es
xchg
inc
sub
int
ljmp
enter
push
xorb
dec
fisttps
jns
pop
xor
ret
or
mov
cli
xor
xchg
mov
pushf
call
sbb
sahf
aas
jns
cmpsb
rcrb
add
mov
add
testl
out
sbb
pop
bound
and
cmp
pop
lock
add
std
jno
sub
fldcw
mov
mov
mov
push
inc
clc
lret
push
test
and
push
mov
cmp
cli
xor
cmp
push
mov
les
add
jl
aam
rcll
dec
sub
imul
ret
mov
or
add
jns
pop
nop
pop
sbb
ljmp
sbb
and
mov
inc
and
call
subl
jge
in
mov
stos
in
push
aaa
int
lret
xchg
xor
cmp
jnp
xor
std
mov
imul
js
push
int
aam
push
dec
aaa
mov
into
icebp
xchg
or
insl
xor
add
std
mov
mov
add
sahf
clc
push
sarb
lahf
sbb
rcll
in
jne
insb
imul
mov
repz
js
jp
sub
int
arpl
das
cmpsl
xchg
lea
pusha
fs
jg
in
iret
mov
jo
mov
fdivl
js
adc
int
jbe
pop
push
inc
out
fs
aaa
inc
pushf
fists
stos
das
and
mov
stos
dec
ss
enter
scas
divl
xor
and
adc
je
jae
into
hlt
pop
lods
sbb
enter
push
sbb
mov
daa
test
mov
aaa
xor
aaa
es
ror
ds
jb
rcll
out
jae
dec
ja
inc
sbb
sbb
sbb
sbb
sahf
lcall
inc
adc
scas
push
xchg
lret
jnp
pop
xlat
ret
fs
loopne
out
addb
aam
fst
fdiv
je
out
bound
sar
fistps
xchg
push
jns
es
dec
pop
aas
jno
jecxz
jno
xchg
cld
cmpsb
push
fcmove
and
loope
divb
hlt
jae
iret
xchg
dec
aam
fstpl
mov
fwait
cmc
mov
add
arpl
lock
mov
lahf
cs
xchg
int
cmc
jle
lcall
je
mov
iret
cmpsl
mov
xchg
or
aas
inc
std
stc
xchg
scas
outsl
mov
lods
inc
imul
sub
pop
sub
fs
push
inc
push
sub
out
mov
push
imul
add
mov
adc
dec
cmp
push
std
mov
loop
xor
lret
xor
testl
and
sub
fs
lea
push
jmp
lcall
pop
pop
imul
cmp
push
movsl
mov
mov
xor
enter
mov
lds
int3
icebp
in
pop
jge,pn
push
adc
mov
inc
add
or
sbb
and
xor
out
movsb
jg
clc
aad
sbb
push
add
and
pop
jno
pop
add
xchg
incl
pop
cmp
hlt
pop
lret
lds
cmc
xor
loope
sub
jl
cmp
frstor
cmc
push
xchg
push
cmp
dec
addr16
inc
inc
outsl
popf
sbb
pop
sahf
insl
test
sbb
inc
cmp
mov
imul
incb
jmp
jg
fstpl
xlat
outsb
iret
and
xor
inc
xor
outsl
fldt
daa
in
mov
pop
gs
inc
mov
int3
mov
scas
cmpsl
filds
jecxz
popa
inc
cs
lret
mov
aad
xchg
scas
xor
jp,pn
pop
inc
jmp
jecxz
jmp
dec
inc
cld
add
out
lea
daa
and
fimuls
stos
xchg
push
int3
out
sub
ja
in
movsb
negl
jmp
imul
mov
inc
mov
ja
cli
sub
sub
ljmp
outsb
push
pop
lods
push
fisttpl
out
xor
mov
or
sbb
and
jl
sbb
das
or
mov
push
sbb
rcl
push
push
add
push
pop
inc
sti
shrl
aas
jge
inc
ret
pop
jno
scas
mov
popf
out
sbb
add
mov
jecxz
loop
enter
aam
test
sub
jmp
and
ficoms
ficomps
sub
lea
aad
rcrb
mov
mov
bound
cmp
jge
inc
fadd
mov
mov
push
shrl
add
fwait
loope
sbb
nop
jns
xchg
mov
ds
popa
jbe
cwtl
pop
jno
fstpl
arpl
inc
jbe
test
jp
nopl
push
xchg
imul
inc
dec
mov
push
inc
scas
inc
push
pop
sbbb
mov
fadds
and
lods
mov
sub
or
rorb
mov
add
pop
call
test
and
pop
sar
jb
sti
pop
xchg
je
movsl
mov
jae
movsl
int
jo
insl
mov
sub
stc
push
ss
dec
xchg
jne
jl
ja
jae
mov
out
ljmp
xchg
mov
daa
push
mov
lock
cmp
push
lods
pop
sarb
out
cmc
cli
cld
movups
or
push
sti
pop
test
ror
mov
xchg
inc
rcrb
mov
imul
dec
dec
sbb
aaa
mov
ja
push
pop
lods
call
mov
jnp
pusha
adc
cmpsb
pop
adc
stos
pcmpeqw
and
out
mov
sub
icebp
dec
fldt
pop
cmpsb
jb
std
inc
xchg
adc
outsb
insl
add
xlat
mov
shrb
jno
arpl
lods
adc
cli
mov
xchg
mov
jmp
stos
adc
fstl
outsb
stos
insb
jp
pop
dec
mov
lods
push
push
adcl
cmp
loope
cmpsb
test
pop
imull
in
cmc
sbb
cmp
lret
jo
mov
or
push
out
call
ret
mov
push
fwait
mov
fs
outsl
popa
push
jno
popf
or
xchg
push
cli
lock
imul
clc
mov
subl
loope
add
cld
mov
fidivs
pop
and
jbe
iret
sub
aad
std
repz
cmpsl
mov
popa
adcb
fadds
add
pop
sti
inc
cwtl
out
sbb
and
push
jl
jno
adc
push
sbb
push
mov
jp
cli
call
push
cmp
daa
fwait
add
popf
inc
dec
and
lds
add
jmp
scas
ds
jno
pushf
popf
dec
enter
aaa
arpl
and
and
orb
pop
xchg
imulb
pop
std
sub
and
add
into
xor
pop
xor
fdivr
fwait
mov
lahf
rcrl
jbe
lahf
xor
insb
xchg
mov
jo
fwait
and
or
sbb
add
cmp
add
cmp
shlb
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
cmp
stc
iret
mov
sbb
pop
cmp
arpl
lea
rolb
popa
imulb
xor
jecxz
xor
ret
out
adc
sahf
rclb
xor
or
sub
jb
cmpl
jo
sub
mov
insl
and
mov
in
je
push
imul
lahf
daa
imulb
pusha
and
adc
lss
jp
sub
ja
enter
fnstcw
lret
mov
stc
lds
mov
cmp
push
xchg
lods
fcomi
dec
and
add
sbb
mov
data16
xchg
inc
imul
sti
mov
pushf
aaa
icebp
push
inc
xor
jb
test
mov
add
sarb
andb
add
push
push
sbb
sub
cmp
add
or
icebp
dec
inc
adc
xor
mov
mov
clc
sub
pusha
sub
daa
xchg
repz
mov
pop
and
xor
movnti
jle
push
adc
adc
mov
adc
add
jmp
icebp
push
sbb
mov
push
jg
sbb
outsl
icebp
aam
mov
outsb
js
and
stc
scas
push
lods
in
jle
repnz
dec
inc
int
pslld
jno
lods
cmpsl
shrb
mov
sbb
and
and
push
nop
add
xlat
dec
push
aad
and
push
fmulp
fwait
outsb
les
shrl
adc
sarb
pop
aad
xor
bound
push
sub
arpl
push
test
dec
sub
mov
lea
std
inc
dec
int
sbb
loopne
jle
inc
add
rcll
xor
and
add
negl
test
adc
push
xchg
imul
insl
jl
out
xor
out
dec
clc
jne
sub
inc
push
std
repz
sub
or
pop
stc
jp
out
xchg
roll
sbb
xor
pop
xlat
and
add
je
fildll
in
mov
ret
inc
ja
cmp
adc
mov
mov
cltd
loop
lcall
inc
and
sub
jle
and
je
fwait
jb
sbb
push
xchg
and
pop
rcrb
repnz
add
xchg
pop
nop
mov
arpl
mov
mov
sbb
pusha
and
inc
andl
mov
outsb
test
es
and
popf
pushf
mov
cmp
mov
pop
dec
sub
push
ret
and
ret
ljmp
loopne
ss
or
cmp
push
loopne
jbe
jae
or
nop
jae
fcmovnbe
rcl
push
xchg
xchg
push
jg
rcrb
inc
addr16
data16
jo
push
inc
subl
push
inc
fcoms
ja
lret
jno
lret
inc
mov
lahf
push
cmp
shr
pop
or
movb
push
push
enter
outsl
cmp
sbb
cmp
inc
mov
cmp
cmp
pop
xchg
cmp
jae
cltd
mov
mov
push
cmpsb
pushf
icebp
jns
sbb
aam
stos
push
cmpsl
in
mov
and
icebp
ficoms
xchg
adc
stos
cmpsb
xor
xchg
pop
xchg
and
jecxz
lods
or
das
lea
adc
addl
and
insl
stc
leave
shrb
jp
xor
stos
mov
push
popl
mov
ret
ds
repz
cmp
or
iret
test
es
mov
call
jnp
mov
mov
ret
pop
sbb
dec
testl
ret
out
cwtl
push
movsbl
adc
hlt
scas
pop
stos
add
and
imul
jne
and
xchg
dec
pop
clc
and
sti
mov
push
mov
mov
adc
clc
stc
in
inc
clc
inc
addr16
xor
sbb
mov
std
mov
xor
arpl
test
sbb
test
jmp
xlat
repnz
sbb
add
and
push
nop
mov
xchg
inc
cmp
jnp
xchg
push
popa
push
add
xor
aaa
adc
push
and
adc
and
stc
inc
in
dec
shll
push
fists
jp
add
call
pop
pop
test
cld
adc
xchg
shrb
sbb
dec
mov
push
test
call
lock
inc
adc
iret
mov
imul
out
jge
aas
test
imul
cwtl
jecxz
or
xor
add
fidivl
and
jg
pop
out
pop
xor
pop
push
imul
sbb
and
push
test
push
dec
mov
adc
add
int3
js
xchg
jmp
adc
inc
mov
lods
dec
mov
push
sarl
mov
push
jnp
xor
lock
xchg
insl
daa
and
dec
rcl
mov
js
mov
push
bound
xor
add
xor
rcrb
sbb
pop
not
xchg
rcll
pop
lods
loop
test
inc
ret
fidivrs
insl
add
addr16
not
stos
or
xlat
lds
divl
fistl
lds
sbb
mov
cld
jp
and
fwait
mov
fs
mov
in
and
js
push
mov
ret
psubq
or
rcrl
jne
mov
lods
push
add
jo
mov
ret
outsl
pop
xchg
sub
outsb
mov
in
cmpsl
xor
mov
dec
cltd
dec
inc
pop
and
sahf
add
pop
nop
push
mov
cmp
push
and
xchg
rcl
xchg
in
adc
lret
data16
test
pop
push
and
cmc
xchg
mov
std
mov
movsb
cmp
shrb
add
mov
cmp
lods
std
xchg
jno,pn
jmp
aas
stc
inc
and
xchg
and
lret
xor
aas
push
sbb
cmc
stos
jmp
int
sti
pop
stos
push
dec
mov
hlt
sub
and
cmp
jno
imull
pop
lcall
rcrb
dec
enter
call
adc
xchg
insl
loop
inc
cmp
adc
ret
aam
fsubrl
cmp
or
cmpsb
out
sarb
pop
pop
dec
lds
arpl
cmp
or
cld
shll
xor
dec
sbb
mov
dec
lds
mov
cwtl
mov
out
repz
out
ret
jne
stos
push
mov
mov
dec
push
sub
jo
out
or
mov
pop
push
insb
cli
and
inc
loope
fistpll
sub
jmp
js
aad
dec
dec
in
mov
and
fnstsw
les
rorl
int3
pop
mov
xchg
pop
int3
push
ret
cmpsl
cmc
ret
dec
fs
outsb
mov
rcrb
push
pusha
sub
lret
pop
push
xchg
lret
pushf
cmp
ss
enter
jg
sbb
idivl
lods
out
add
mov
mov
cmp
movsb
xchg
add
ljmp
cmpsl
sub
fstpt
jmp
idiv
dec
xor
xchg
pop
loope
imul
movb
cs
and
dec
inc
mov
mov
aaa
sar
pop
jmp
test
enter
adc
arpl
call
inc
mov
outsb
xor
mov
pop
insb
call
ret
xor
scas
or
sub
mov
inc
add
mov
test
dec
dec
test
xor
test
mov
mov
push
out
adc
or
xchg
sub
sbbl
xchg
xor
push
test
jmp
outsl
adc
jg
xabort
mov
std
daa
pop
mov
push
test
stc
call
jmp
call
dec
mov
aam
or
mov
imul
sti
push
mov
pop
idiv
inc
mov
mov
xor
jns
pop
aam
mov
push
jo
sbb
shrb
and
outsl
ret
adc
hlt
dec
sti
fmuls
nop
or
ror
fldpi
mov
mov
mov
std
push
das
xchg
in
in
xor
xor
jmp
scas
jae
sbb
pop
inc
out
ret
jbe
out
gs
inc
add
fdivrl
pop
jae
jmp
push
dec
fidivrl
enter
rcll
daa
add
jbe
cltd
fldt
popa
xor
sahf
int
shrl
sbb
dec
fwait
xchg
pop
popf
ret
xor
loope
pop
xchg
xchg
add
lea
pop
ror
adc
xchg
inc
sbb
leave
push
pop
test
jge
andl
loopne
addr16
adc
adcl
ficomps
clc
adc
push
into
shll
mov
sub
divl
mov
movsb
int3
aas
cli
outsb
mov
daa
adc
push
xlat
mov
icebp
mov
insb
push
push
lods
inc
inc
out
aaa
mov
arpl
pop
or
lret
sbb
out
sbb
jns
jmp
xor
aad
ret
jp
dec
jae
ret
repnz
and
dec
cs
in
daa
outsl
or
xchg
sbb
neg
int
push
push
jmp
out
xor
sbb
cld
jbe
nop
xchg
dec
dec
nop
sub
mov
xchg
sub
lea
mov
and
lds
out
adc
and
js
out
int3
fisttpl
fistpll
sub
inc
ds
imul
xchg
ja
xchg
insl
icebp
inc
mull
inc
imul
insl
adc
or
test
push
mov
das
push
leave
cmp
lahf
push
adc
test
mov
sbb
jmp
icebp
pop
dec
mov
js
fstp
inc
daa
cmp
pop
inc
imull
addl
imul
cmp
cs
pop
adc
inc
sbb
sub
cmp
in
fnstsw
push
push
sti
pop
sub
mov
loopne
mov
mov
call
xchg
sub
jp
pop
gs
mov
movsb
sar
cmp
je
movsb
addr16
sahf
shlb
mov
sahf
cmp
test
mov
ljmp
pusha
les
push
idivl
les
pop
add
or
out
outsb
pop
add
repz
js
push
pop
aad
int3
test
jae
lahf
push
push
lret
data16
insb
sub
inc
jae
jmp
push
sti
fwait
fs
ss
mov
sbb
mov
mov
inc
fcomi
popa
cld
mov
clc
push
popa
enter
dec
loope
lret
xor
es
mov
stos
cmp
test
std
or
inc
jbe
int
arpl
test
outsl
out
out
or
lock
xchg
add
lods
add
lods
cmc
stc
mov
add
in
shll
sub
dec
ret
cmp
addl
aam
mov
pop
cmpsl
adc
pop
imul
sub
lds
inc
imul
aaa
inc
popa
mov
mov
rcrb
jo
sbb
cs
loope
cmpsb
clc
cwtl
inc
loope
inc
mov
or
add
aaa
jmp
inc
adc
cwtl
mov
sbb
dec
cmp
outsb
out
adc
add
test
bound
aaa
ret
push
jg
repz
aas
push
mov
push
mov
cwtl
inc
pop
push
dec
lock
mov
das
cmp
outsb
daa
jae
test
clc
sub
jecxz
fisttpl
mov
test
sub
dec
shrl
imul
dec
cmp
mov
or
test
and
sbb
fucomip
and
bound
fmull
or
or
adc
out
and
sbb
sub
fldl
dec
dec
sbb
and
out
ss
xor
mov
mov
shll
jo
adc
add
xor
xchg
mov
mov
push
jne
test
shlb
dec
add
scas
sub
inc
divl
push
and
jns
fcmovne
jecxz
rorl
lahf
sbb
dec
test
pop
rolb
jnp
xor
sub
sbb
ret
lcall
mov
and
ss
mov
loop
sbb
cmp
fucomi
jmp
xor
in
pusha
test
xor
dec
pop
push
pop
mov
in
jg
addr16
mov
sti
dec
mov
test
adc
sub
jmp
adc
jmp
mov
xchg
jecxz
dec
jp
inc
jge
movsl
or
xchg
aam
inc
mov
movsl
cmpl
mov
pop
mov
adc
mov
outsb
sub
dec
ret
sub
clc
fstl
mov
mov
dec
inc
xor
cmp
fs
hlt
aas
xor
mov
aas
cld
adc
adc
out
es
call
jg
dec
stc
mov
xchg
int
cltd
cld
mov
mov
xchg
out
data16
jmp
or
dec
arpl
sbb
aad
mov
push
or
ja
frstor
aam
mov
add
jo
add
stos
dec
lock
data16
dec
test
fmull
es
gs
aas
sub
fcmovbe
rolb
xchg
rcrl
lock
outsl
incb
xor
adc
add
dec
dec
ret
clc
lcall
and
and
mull
sub
inc
addb
pushl
shlb
pop
jle
adc
sbb
mov
push
xchg
fidivrs
mov
xchg
faddl
pop
dec
dec
xchg
lret
cli
adc
cli
xchg
cld
dec
mov
out
inc
jge
mov
cmpb
fsubs
out
ss
add
jmp
das
imul
pop
adc
add
sub
cld
push
mov
rep
outsb
adc
jmp
orl
adc
scas
fstpt
stc
scas
adc
mov
test
shrb
mov
sti
fidivrs
popf
and
js
mov
cli
inc
lods
ret
mov
ja
imulb
cmp
dec
pop
in
imul
push
pop
sarl
or
mov
mov
xchg
popf
cmp
xor
cmp
xor
adc
stos
aaa
adc
xchg
ja
add
hlt
popa
dec
mov
in
cmc
jbe
fnstenv
ficomps
xchg
fistpl
int3
popf
or
mov
es
mov
mov
pop
pop
add
xchg
lods
xor
xor
cmp
lret
rcrb
aas
repz
enter
mov
xor
mov
sti
test
pop
daa
popf
dec
xor
int
aad
in
xor
cmpb
push
mov
bound
push
or
adc
les
arpl
push
aas
mov
std
mov
bound
popa
insl
xchg
add
dec
cmc
or
push
dec
mov
movsl
or
sbb
nop
pop
pusha
cmp
dec
dec
insb
mov
iret
jo
lret
insl
mov
xlat
sub
xor
jp
fcomi
outsb
mov
popa
data16
and
idiv
arpl
lcall
call
jg
cltd
gs
repnz
lcall
insl
mov
mov
ljmp
pushf
mov
out
mov
add
js
cmp
inc
xchg
pop
mov
sbb
lahf
mov
leave
xor
fisttpl
lds
pop
adc
std
in
mov
add
inc
insb
cmpsb
xor
in
inc
int3
jns
call
push
mov
and
stos
mov
jmp
mov
leave
pop
mov
daa
fisttps
stc
xchg
xchg
int3
out
lods
xor
sbb
mov
pop
pop
inc
pop
movsb
inc
in
pushf
mov
push
mov
dec
movsl
xchg
aad
xchg
add
insb
push
adc
call
lock
popl
jae
sbb
xor
data16
imul
sbb
movsl
movsb
dec
pushf
cld
or
mov
test
in
add
push
addr16
jecxz
cmp
mov
and
dec
mov
sub
movaps
or
mov
add
lea
addr16
push
ja
mov
xchg
fbstp
test
fistl
mov
insb
xchg
dec
fildl
leave
cmpsl
cmp
fs
fbld
insb
cmp
and
push
popa
xlat
aam
bnd
inc
fsubr
jmp
dec
add
mov
push
push
les
jp
cmp
push
dec
notb
fdivs
dec
fnstsw
sub
and
push
aam
daa
pop
mov
adc
jmp
mov
sbb
in
sbb
out
pop
and
shr
cltd
in
mov
dec
and
cmpsb
enter
outsb
mov
push
inc
jl
pop
in
or
and
in
push
nop
push
out
fisttpll
pop
arpl
outsb
xchg
adc
movsb
ds
mov
leave
das
push
lret
sbb
scas
es
and
sbb
pop
cs
shrl
iret
outsl
jg
and
xor
fimull
es
lret
cmpsl
inc
clc
push
mov
xor
lea
pop
mov
lahf
int3
cmpsb
lret
in
mov
mov
jbe
mov
cmpsb
mov
arpl
mov
lock
push
mov
out
cld
enter
xor
or
aas
mov
rorb
push
pop
lds
mov
jp
mov
in
and
sbb
lahf
and
push
adc
xor
scas
arpl
out
or
cmc
out
das
xor
inc
leave
xor
test
pushf
cwtl
mov
pop
jmp
xchg
cmp
icebp
mov
cmpb
xchg
addr16
movsl
mov
push
jno
stc
inc
aas
xor
aad
sbb
data16
and
iret
push
sub
mov
jmp
popa
icebp
push
flds
and
pop
push
movsb
push
dec
mull
add
push
test
mov
push
add
test
push
das
les
add
es
pop
xlat
inc
shll
pop
out
out
sub
push
mov
adc
shlb
dec
push
pop
dec
imul
sbb
mov
lret
push
push
scas
xchg
and
adc
cld
icebp
test
pop
pop
fcom
mul
out
jnp
inc
push
xchg
add
add
xchg
pushl
cmpsb
sbb
sbb
shl
in
cwtl
je
jle
and
pop
ja
cltd
and
lahf
int3
xor
sub
test
lahf
ret
test
pusha
arpl
popf
xchg
out
add
jg
test
pop
movsl
inc
mov
inc
xchg
inc
sub
imul
jno
mov
jbe
mov
mov
sub
add
std
jnp
stc
sbb
cmp
adc
push
fidivrl
sbb
mov
xchg
sbb
icebp
inc
xor
scas
sbb
push
movsb
and
outsb
mov
std
pop
les
or
dec
stos
xchg
test
dec
push
sbb
repnz
stc
mov
dec
aad
fcoms
es
pop
test
test
dec
test
roll
loopne
movsl
xchg
out
xchg
sub
clc
fidivrl
icebp
or
inc
inc
mov
cmp
fnstsw
repnz
hlt
filds
test
jg
test
ss
xlat
arpl
sbb
add
xor
imul
jb
popf
mov
mov
mov
lods
repz
jae
jp
xor
fmul
cwtl
mov
and
mov
cmpsb
pop
pop
dec
inc
and
loopne
mov
inc
jo
xchg
out
mov
adc
jb
and
mov
test
push
add
in
pop
jl
aad
push
sbb
es
pushf
mov
pusha
mov
pmulhw
orl
sub
int3
iret
iret
mov
aam
popf
lahf
hlt
and
mov
xor
fstpl
xchg
daa
add
out
rcrb
push
mov
adc
lock
mov
aam
aaa
lahf
stos
sub
faddl
pop
cmc
std
mov
mov
mov
xchg
add
xor
scas
daa
mov
dec
shll
mov
jl
aaa
adc
shrl
cmp
or
sbb
xchg
ja
shll
mov
rorb
push
lahf
sbbl
or
dec
in
outsl
fistpll
ja
mov
or
loopne
cmp
jbe
cli
jb
repz
movsl
xorb
cmp
and
jo
dec
cwtl
sub
int
enter
mov
lock
inc
hlt
lret
push
xor
jl
and
dec
cmp
call
add
pop
imul
jnp
stc
cltd
sahf
xor
cmpsl
das
and
stc
aas
fcoml
inc
adc
push
add
cltd
mov
cld
addr16
push
mov
mov
xor
inc
adc
imul
insb
les
push
out
push
cs
adc
dec
jge
sub
cs
adc
inc
dec
inc
in
mov
inc
cmc
fisubrl
out
cwtl
stos
and
mov
sar
enter
fbld
mov
test
pop
lret
cmp
push
addr16
lods
out
mov
cld
sub
mov
call
popf
mov
lods
dec
add
rcl
lock
out
std
sub
xchg
sbb
xor
or
fcompl
or
pop
notl
xor
adc
xchg
mov
popf
cmc
loope
inc
iret
or
fwait
iret
mov
sbb
cmp
call
popa
inc
loop
enter
aad
or
sti
popf
out
mov
sbb
out
jp
das
inc
stos
push
jno
arpl
sub
je
xchg
mov
push
xchg
sbb
imul
and
call
imul
adc
out
mov
mov
xchg
inc
or
cmp
imul
lock
mov
jge
js
xor
punpckhbw
out
stos
pop
cltd
mov
testl
test
stos
fs
ds
push
lcall
mov
movsl
mov
int3
ret
into
popf
cwtl
or
fisubrl
or
mov
push
mov
jne
std
inc
jl
lods
rorb
add
rclb
pop
jle
je
not
adc
pop
fprem1
mov
aas
mov
xor
mov
pop
push
mov
dec
shlb
mov
mov
xor
xor
loopne
cmpsl
pop
lds
or
cmpsl
sbb
cld
lea
loop
fcoms
jecxz
push
lods
dec
mov
lds
cmpsl
jle
pop
lock
int
aad
mov
add
sbbl
cltd
push
lea
inc
xor
add
out
xchg
lods
or
xchg
and
jmp
shlb
xor
int
leave
es
sti
sbb
mov
push
adc
jmp
icebp
and
xchg
in
jmp
fsubl
and
add
ja
fscale
das
lds
mov
jg
xchg
movsl
xor
adc
push
sub
mov
dec
mov
loopne
sarb
fidivs
adc
push
fsubl
cwtl
adc
dec
notb
and
mov
nop
out
dec
and
addr16
xor
xor
push
fucomi
shl
scas
daa
lea
fbstp
das
mov
mov
loope
dec
inc
and
adc
mulb
dec
sub
add
pop
pop
mov
jne
shrb
arpl
jb
iret
scas
jnp
out
mov
cli
mov
ds
and
jo
jbe
repnz
and
pop
in
pushf
dec
jg
stos
mov
inc
lret
pop
mov
test
inc
pop
test
xchg
aam
test
popa
gs
fxch
fadd
inc
and
test
outsl
mov
sbb
xchg
inc
xchg
lods
mov
xor
mov
insb
shrl
ss
adc
sahf
int3
fucom
pusha
or
mov
imul
outsb
xor
mov
or
xor
jo
pop
push
push
mov
incb
inc
imul
jg
dec
ss
mov
imulb
rclb
or
mov
xchg
gs
pop
call
add
mov
lahf
call
inc
orb
into
jle
or
push
xlat
inc
sbb
xor
rcl
lock
cmp
pop
xor
mov
lods
xor
jg
push
lret
xor
outsl
popf
popf
aam
mov
mov
inc
cli
loope
sub
orl
test
xchg
movsl
dec
add
lret
pop
xchg
ds
pop
lcall
mov
dec
lahf
into
mov
xchg
inc
mov
jmp
rol
cs
dec
mov
je
repnz
hlt
daa
sbb
sbb
dec
aas
daa
cmpsb
mov
xor
mov
inc
fcompl
pop
jnp
sarl
mov
inc
mov
cmc
xchg
lret
ror
mov
xchg
inc
aas
push
ret
lret
sbbb
repnz
mov
mov
inc
clc
sub
pop
cltd
jne
lock
pop
out
dec
ds
inc
xor
xorb
lods
sbb
sbb
push
repz
cltd
pop
and
sahf
jb
fmul
stc
stc
mov
pop
pop
jne
cmpsl
mulb
inc
inc
xchg
jnp
lock
and
in
inc
lret
xchg
jl
ss
cmp
xchg
add
or
ss
hlt
inc
das
arpl
jbe
mov
sub
addb
push
loop
pop
clc
sbb
clc
repnz
fcmovne
sahf
sub
mov
push
or
jno
fimull
and
dec
mov
xchg
scas
mov
call
sbb
ljmp
into
mov
div
sub
jmp
bound
pop
dec
movsl
lods
das
cmp
cli
xchg
cmpsb
inc
faddl
xchg
add
or
repnz
jbe
nop
push
ss
jge
fwait
imul
dec
xchg
jmp
adc
xor
out
or
dec
movsl
adcl
xor
int
mov
add
inc
adc
in
mov
xchg
mov
mov
cmp
mov
push
test
mov
adc
sbb
push
add
push
mov
mov
inc
bound
std
notb
xor
xor
clc
rol
or
jp
fcmovbe
sub
ss
or
leave
push
xchg
push
mov
or
jl
loop
in
adc
adc
mov
and
push
fdivrs
int
mov
hlt
std
jge
lds
mov
pop
add
daa
cmpsl
arpl
stos
jno
out
mov
aas
dec
test
out
mov
push
loopne
push
jo
je
pop
pop
stos
ds
hlt
jmp
arpl
pusha
loopne
addb
mov
and
xchg
pop
adc
ljmp
mov
stos
mov
clc
pop
sbb
outsb
lock
pop
pop
in
add
outsb
jp
pop
lock
pushf
loop
enter
imul
add
sub
test
sbb
gs
enter
sbb
cmpsl
sub
repz
xchg
ljmp
nop
mov
jae
leave
ds
pop
les
pop
mov
out
sub
cmpsb
adc
mov
stos
add
lret
dec
xor
fidivrl
push
inc
imul
rcl
insb
pop
cmpsb
ljmp
or
and
xchg
sahf
jo
lds
cmpsl
mov
test
fcomip
cmp
push
add
sbb
mov
sub
inc
sub
fbld
xor
leave
add
inc
adc
sbb
push
stos
insl
popf
xlat
inc
inc
stos
push
ficoms
and
in
dec
push
inc
jae
jae
mov
pop
cmpsb
pop
fldcw
pop
jl
cmp
loopne
cld
popl
icebp
in
imul
push
push
adc
out
ds
push
pop
adc
add
fstpt
fiadds
add
or
push
lret
sbb
jp
call
xlat
adc
push
push
xorb
and
ret
or
jmp
inc
shlb
cmp
dec
pushf
test
out
outsl
xchg
jp
dec
jae
fs
jns
sub
repz
subl
jmp
int3
cmpsl
mov
movsl
xor
sbb
inc
jmp
cmp
fcmovu
mov
popa
mov
push
add
mov
dec
jbe
pop
loopne
loop
insb
stos
stos
stos
pushf
inc
xor
or
mov
movsl
ret
jno
mov
push
xchg
jecxz
int3
fcmovnu
icebp
fwait
ds
ja
fidivs
lock
sbb
lret
test
fisttpl
dec
test
add
adc
aad
shlb
push
xchg
mov
or
adcb
in
hlt
test
das
lcall
in
sbb
test
cmp
jge
rcrl
jne
scas
inc
push
sbb
jb
ds
push
in
popf
mov
jecxz
in
int3
cs
testb
push
pusha
push
jp
mov
mov
notb
movsb
add
outsb
arpl
fs
out
fst
mov
add
mov
inc
mov
addr16
xor
jne
int3
adc
stos
test
scas
ss
les
cmp
imul
mov
xchg
xchg
sbb
lcall
lods
and
scas
xor
push
rcrl
sub
das
sub
pop
jmp
scas
nop
fdivp
sub
xchg
xchg
popa
outsl
rcl
add
sbb
mov
call
cs
loopne
mov
lds
push
or
into
sbb
jge
add
sub
loop
adc
cs
icebp
scas
icebp
pushf
outsl
add
in
pop
pop
adc
pop
ret
inc
nop
mov
cltd
arpl
lods
loopne
je
and
int3
mov
aaa
cli
jmp
shrb
mov
add
lock
ja
lahf
jns
fs
push
data16
decb
in
inc
ja
add
mov
mov
dec
sbb
les
leave
adc
loope
mov
test
pop
popf
pop
iret
push
mov
dec
mov
ret
pop
mov
in
clc
add
mov
add
mov
loopne
mov
jae
sarl
stos
sahf
cmp
sbb
xchg
repz
jmp
pop
iret
in
cltd
mov
mov
push
pop
cmp
es
fisubrl
mov
lret
lcall
popa
lock
cs
out
loope
shl
test
cmp
std
push
push
ja
inc
test
notl
push
movsb
rcr
rol
filds
and
enter
out
fistl
scas
shl
loopne
dec
mov
mov
scas
push
fnstsw
repnz
rol
ror
ja
aam
adc
xchg
sbb
or
iret
xchg
cmpsl
jcxz
sahf
mov
jmp
dec
maxps
pushf
mov
push
dec
fwait
or
mov
push
rcl
sub
cld
mov
repnz
inc
push
dec
sub
rcrl
mov
push
loope
divl
jecxz
adc
or
pushl
fcomp
test
add
jne
inc
mov
pusha
mov
pop
dec
enter
xor
idiv
and
pop
sub
cmp
xorl
fidivrl
dec
push
fidivrl
jl
and
push
cmp
cmp
jmp
xor
xor
jnp
sub
fsubs
loope
fst
imul
dec
icebp
mov
push
das
dec
enter
xchg
iret
inc
sbb
pop
mov
stos
addr16
jg
movl
je
js
xchg
pop
sbb
dec
pop
xchg
xchg
mov
in
xchg
pop
mov
cltd
jl
pusha
mov
and
pop
add
mov
sub
rcl
mov
jns
idivb
fmulp
sub
mov
call
lret
mov
mov
xorb
fsub
out
decb
push
xor
xorb
int3
inc
mov
add
pop
or
stc
adc
pop
pop
lret
cmpsl
mov
shlb
das
xlat
js
mov
iret
jmp
inc
or
mov
sbb
cmp
xchg
or
or
call
add
add
sbb
mov
or
int
or
lcall
scas
jg
jno
and
aam
iret
add
sub
aaa
cmp
cmp
dec
pop
sarl
stos
adc
popa
sbb
cmc
negb
sahf
std
jb
and
stos
fidivrl
mov
pop
add
ret
movsb
cld
fidivrl
xor
aad
icebp
test
std
mov
push
jo
inc
push
push
int3
stos
xor
add
and
jno
loope
mov
es
nop
lea
mov
mov
fldl2t
add
inc
popf
dec
dec
or
adc
and
pusha
mov
pop
cmpsl
popa
jbe
aam
xor
mov
cmp
jmp
xor
mov
das
mov
adc
xor
ret
jecxz
mov
push
mov
fcomps
dec
mov
sbb
rorb
mov
and
inc
movsb
xor
inc
xchg
dec
mov
sub
jb
dec
mov
push
or
mov
jle
dec
movsl
ret
push
mov
in
xchg
xchg
push
enter
cmp
out
stos
je
ds
in
xabort
dec
mov
hlt
inc
enter
xor
pop
or
xchg
mov
sub
mov
movsb
and
push
inc
rcll
add
in
sub
shl
push
test
imul
mov
sub
cmp
adc
pop
fstpt
sbb
push
popa
hlt
test
andl
cmc
lock
fdivs
xchg
pushf
shrl
icebp
pop
test
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
inc
dec
test
jl
test
and
cmpsl
