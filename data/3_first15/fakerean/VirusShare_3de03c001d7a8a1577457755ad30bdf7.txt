pushl
lea
mov
call
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
mov
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
cs
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
push
mov
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
flds
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
mov
lea
lea
movl
mov
add
add
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
or
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
dec
mov
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
xor
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
js
inc
add
sbb
incl
sarb
mov
dec
leave
inc
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
sub
les
and
lea
call
mov
cmp
jne
mov
mov
leave
enter
add
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
clc
enter
mov
jmp
mov
push
mov
mov
call
mov
sbb
dec
and
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
rcr
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
inc
int3
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
or
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
cli
mov
sbb
dec
and
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
sub
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
daa
movb
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
xlat
enter
push
lea
push
mov
mov
cmp
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
pop
iret
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
in
in
sbb
jle
add
fcoms
pop
popa
sbb
push
push
push
call
pop
push
push
add
fstps
cmc
lahf
add
jno
add
mov
mov
into
push
pop
fldt
in
imull
lret
scas
sti
call
addl
fsubr
sub
pop
popl
push
push
lea
push
push
push
push
push
push
call
mov
roll
notb
jle
xlat
xchg
iret
push
add
jge
push
add
jnp
add
fiadds
add
les
add
mov
jmp
jp
fwait
pop
xchg
mov
add
fildl
add
fwait
mov
fs
add
std
add
icebp
pop
stos
add
add
add
push
push
push
push
push
push
push
call
add
add
stc
scas
add
mov
add
loope
lds
outsl
xchg
jb
mov
xchg
imul
lret
roll
xchg
add
add
imul
add
push
push
lock
push
add
pop
ljmp
test
lds
call
add
mov
xchg
std
jae
mov
lcall
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
add
enter
xchg
push
xchg
add
push
imul
add
add
test
add
mov
add
lret
in
fcmovb
jp
lods
mov
lret
add
add
mov
pusha
add
call
push
push
push
lea
push
call
add
mov
fiaddl
add
cmc
mov
mov
add
jp
leave
outsl
fisttps
mov
data16
bound
add
add
popa
cld
popf
add
lcall
add
lcall
les
mov
jl
fiaddl
icebp
add
add
jnp
fs
pop
push
push
push
push
push
push
push
push
push
push
call
pop
fcoms
ficoms
imull
add
add
add
vpand
mov
out
mov
mov
add
add
bound
movsb
sub
pop
call
push
push
push
push
lea
push
lea
push
call
fidivrl
ljmp
pop
add
add
mov
add
loopne
popf
add
popf
lret
add
outsl
out
add
add
add
in
xchg
sub
pop
jmp
push
push
push
push
push
push
call
ljmp
jmp
roll
mov
rcrl
mov
fisttps
jbe
add
repnz
sti
add
incb
pop
imul
bound
lcall
push
lea
push
push
push
push
lea
push
push
push
push
push
call
out
add
addr16
iret
mov
lock
jnp
add
iret
fsubrp
ret
add
lcall
inc
hlt
push
push
push
lea
push
push
call
xchg
mov
mov
testl
add
add
lods
mov
add
jb
add
add
add
out
jp
loopne
jl
add
jae
jmp
add
outsl
lea
lret
fldl
in
in
lcall
pop
hlt
push
push
push
call
add
fdivl
add
jmp
out
mov
addr16
cltd
mov
add
fcmovne
fsubrp
add
add
add
add
push
push
push
push
lea
push
push
push
lea
push
call
shll
mov
jp
pushf
mov
xlat
mov
xlat
add
jmp
arpl
test
fs
roll
mov
mov
loope
add
add
add
add
roll
add
mov
aad
xlat
xchg
popa
lock
add
pop
add
add
fbld
add
ret
xchg
inc
add
push
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
addl
add
add
enter
in
add
mov
xchg
xchg
mov
cld
push
add
add
mov
pop
add
out
int3
iret
iret
push
lea
push
push
push
push
push
push
push
push
call
flds
add
mov
mov
roll
add
outsl
fxch
testl
add
add
add
notb
mov
movsb
add
movsb
add
add
ljmp
sbbl
add
add
lcall
sbb
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
out
cmpsl
xlat
add
push
add
mov
test
pop
lock
je
sahf
add
mov
cmc
add
add
mov
mov
add
add
gs
add
rolb
add
mov
jecxz
imul
bound
in
loopne
add
push
push
dec
push
push
pop
add
not
lea
add
sub
rol
pop
not
lea
xor
pop
push
lea
push
push
push
push
push
push
call
in
mov
mov
into
imul
icebp
add
out
add
add
outsl
adcl
fwait
xchg
add
in
pushl
push
push
push
push
push
call
bound
cli
add
mov
add
out
fdivrl
push
cmpsl
out
stos
pop
add
hlt
cld
fyl2x
add
out
jmp
add
sti
add
fisubrs
push
xchg
push
add
sti
add
add
ficompl
lock
aad
sub
pop
call
push
push
call
add
lock
add
jmp
add
sbb
jb
add
insb
jle
fdivl
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
lret
in
add
lcall
mov
push
out
cld
add
mov
add
incb
arpl
inc
call
push
push
push
push
push
lea
push
push
push
push
call
icebp
aam
mov
into
xchg
lock
add
leave
imul
icebp
out
fsub
add
nop
add
insb
add
jbe
push
fstpl
lea
push
push
push
push
push
push
push
push
push
push
call
add
addb
push
movb
add
mov
pop
mov
pop
add
fistpl
add
mov
fcomps
pushl
push
lea
push
call
sti
pusha
adc
leave
lret
pusha
movsl
loop
lds
add
jne
add
add
mov
lods
add
out
add
mov
fisubrl
add
add
js
iret
ret
in
clc
pop
pushl
call
push
push
push
push
push
push
push
lea
push
call
in
movsb
std
add
jp
add
add
pop
test
imulb
ja
add
mov
out
add
mov
test
add
add
filds
and
xchg
add
push
fistpl
add
mov
xchg
add
lcall
jne
pushl
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
fucompp
add
add
add
add
pusha
push
fildl
add
add
jo
add
movsl
pop
in
lcall
add
sub
pop
call
push
push
dec
add
push
or
not
add
add
sub
dec
rol
sub
ror
pop
dec
add
pop
push
push
push
lea
push
lea
push
push
call
add
add
sti
lea
popf
jl
pop
jmp
mov
add
arpl
cmc
mov
add
sub
pop
pushl
call
push
push
call
mov
pop
fucomi
lds
movb
add
add
add
add
fbstp
sbbl
jns
mov
jecxz
cmpsb
jo
add
add
in
fcmovnbe
add
add
fidivrs
mov
xchg
movsb
test
xchg
push
sub
pop
push
push
push
dec
ror
push
and
add
sub
shl
dec
lea
pop
add
dec
pop
push
lea
push
call
pusha
rcll
out
in
add
add
jnp
jae
add
rcl
mov
add
push
add
icebp
popf
ret
mov
add
mov
jno
xchg
xchg
xlat
scas
testb
sub
pop
push
push
lea
push
call
jbe
cmpsl
add
add
add
mov
push
lds
xchg
add
add
add
add
mov
push
clc
lcall
add
lea
push
lea
push
lea
push
push
lea
push
push
call
into
mov
add
cmpsb
mov
leave
lahf
lock
lret
jo
push
test
mov
add
jbe
into
mov
mov
add
add
add
xchg
or
rolb
add
pop
into
add
add
pusha
mov
lcall
rorb
stos
es
adcb
push
lea
push
push
push
push
push
push
call
add
scas
add
testb
add
mov
lods
add
mov
pop
flds
add
movsb
add
testl
mov
add
add
add
in
add
add
addb
add
in
fcompl
push
push
push
push
push
call
cld
rolb
add
fldt
add
add
mov
add
lods
add
out
fildll
mov
add
pop
sub
pop
push
mov
push
push
push
lea
push
push
push
call
add
stos
xchg
add
add
rorl
xchg
xchg
add
movb
add
mov
fbstp
add
mov
add
xchg
add
test
add
add
add
xchg
pop
ja
xchg
fdivr
add
in
add
add
scas
add
in
call
add
add
push
push
lea
push
push
push
lea
push
push
push
call
xchg
sarl
mov
add
add
add
add
add
add
add
in
xlat
flds
pop
mov
lret
add
fdivl
mov
push
int3
std
add
std
add
loop
out
mov
add
arpl
lods
mov
mov
leave
mov
mov
sub
pop
add
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
lret
add
hlt
mov
mov
jns
add
fiadds
cli
in
lds
add
add
rolb
flds
add
add
movsl
pop
add
jae
add
add
sar
insb
cmpsl
fstpt
add
push
add
lahf
shll
in
in
lcall
xor
push
push
push
lea
push
lea
push
push
push
push
push
push
call
push
add
popf
add
mov
add
insb
push
add
sub
pop
stos
out
loope
add
add
add
add
jo
add
add
mov
add
fistl
rcrb
mov
add
push
xchg
sub
pop
add
push
push
push
call
add
rolb
add
jge
xchg
js
add
movsb
jns
add
stos
pop
xchg
nop
jl
loope
add
push
add
jne
push
push
lea
push
push
push
push
call
push
movl
lret
in
scas
add
add
pop
add
add
add
fbld
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
cwtl
add
add
ret
mov
add
add
sti
cld
add
add
pushf
push
ljmp
js
into
in
add
add
add
pop
test
add
add
in
add
lahf
clc
pushaw
rolb
lcall
add
push
push
push
push
push
push
push
push
push
push
call
mov
mov
arpl
sahf
add
jne
mov
jmp
std
push
mov
mov
jae
add
mov
fs
sub
pop
add
push
push
push
lea
push
call
add
stos
ret
pushf
movsl
incb
outsl
enter
leave
fiaddl
add
add
add
add
mov
add
sbbb
test
add
xchg
mov
add
jecxz
add
ljmp
mov
into
add
in
nop
popl
addl
pop
mov
pop
add
pop
push
push
push
call
sti
add
add
data16
pop
add
jne
add
mov
mov
add
ficompl
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
pop
repnz
mov
jmp
fs
gs
sahf
stos
add
add
lret
xchg
add
lret
sahf
add
mov
add
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
push
push
call
popf
add
xchg
add
jo
in
add
add
loopne
add
cli
addl
popa
add
pusha
add
jl
mov
ljmp
push
bound
mov
cmpsb
add
add
add
insb
xchg
ja
add
cld
add
cmc
pop
add
add
lcall
les
push
push
lea
push
push
push
push
push
call
andb
popa
shlb
add
add
js
fs
add
jb
add
into
mov
add
add
add
pop
add
incb
add
mov
movsb
lret
fldl
add
add
add
push
in
loopne
push
mov
push
push
push
push
push
push
push
call
test
add
gs
lret
pop
sti
mov
test
push
aam
cltd
std
add
add
test
add
in
jecxz
xchg
add
les
mov
test
rcll
add
add
popf
cmpsl
add
loop
test
add
lcall
add
push
push
push
call
mov
scas
into
pop
add
add
sti
mov
je
add
jbe
add
add
fdivrp
test
les
push
lea
push
push
lea
push
call
imul
fsts
mov
add
add
add
add
mov
push
mov
add
xchg
add
fadds
pop
mov
add
shll
pop
pop
scas
add
in
test
push
sub
pop
sub
push
lea
push
push
call
std
add
shrb
sahf
add
ja
cmpsb
fnop
stos
je
add
pushf
add
bound
test
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
pop
loopne
leave
add
jge
add
pushf
add
xchg
mov
add
add
in
add
mov
testl
xchg
add
mov
jo
out
addb
rolb
scas
stos
outsl
add
mov
add
add
add
push
loopne
rep
pop
push
add
pop
mov
add
push
push
push
push
lea
push
push
call
xlat
add
xchg
mov
add
iret
xlat
mov
pop
enter
js
add
xorb
bound
push
add
add
int3
add
jle
rorb
lcall
ret
add
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
enter
add
xchg
add
arpl
add
loope
ja
aad
add
scas
add
ljmp
fdivr
lcall
ret
xchg
inc
add
mov
push
push
push
call
add
stos
cwtl
add
xchg
fs
cli
mov
add
add
add
add
jbe
outsl
add
mov
in
clc
pop
xor
push
push
call
mov
in
pusha
mov
ljmp
mov
add
gs
cmc
cwtl
outsl
out
add
xchg
cli
add
add
add
cwtl
icebp
nop
sub
pop
add
push
push
push
call
shlb
stos
add
ficomps
cmc
add
add
pusha
add
push
aad
mov
add
incb
add
xchg
add
add
ljmp
cltd
add
add
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
push
call
add
sti
mov
add
mov
push
jmp
shl
add
mov
cld
add
mov
testl
jecxz
imul
sub
iret
push
lea
push
push
push
push
push
push
call
insb
add
fldcw
add
arpl
xchg
ret
add
add
testl
add
mov
shll
mov
testl
mov
add
cwtl
add
sti
add
loope
lods
add
add
add
push
push
push
lea
push
call
movl
add
add
pop
gs
add
add
jns
add
mov
add
in
lock
lcall
rcll
sbb
shr
add
pop
mov
push
push
inc
rol
push
push
pop
add
ror
sub
sub
add
shr
pop
add
pop
push
push
push
call
mov
xchg
add
jge
xchg
add
add
outsl
lea
out
je
push
mov
add
mov
movl
add
add
andl
add
in
xchg
hlt
add
add
jmp
pushl
push
xor
inc
sub
pop
call
push
lea
push
push
push
push
push
lea
push
push
call
xchg
add
add
cmc
movsb
pushf
add
js
repnz
testl
pop
sarl
lods
add
pop
mov
lret
add
popf
fldl
add
iret
in
push
fistl
add
mov
add
cld
add
rcrl
mov
xchg
insb
movsl
jp
out
jns
icebp
out
add
add
mov
les
add
imul
into
add
lea
push
sub
add
shr
sub
add
add
inc
pop
dec
pop
push
inc
pop
push
push
push
lea
push
call
ret
add
in
fucomip
add
stc
add
in
cltd
test
test
movsl
add
fisubs
out
add
xchg
add
push
lret
add
iret
loop
add
add
subl
call
push
push
lea
push
push
call
add
popa
jl
add
push
fwait
cmpb
js
jae
add
add
add
test
add
add
xchg
add
in
add
ljmp
add
mov
insb
xchg
mov
add
push
add
ja
add
lcall
clc
push
xor
pop
push
push
push
call
add
in
fiaddl
xor
incb
add
add
gs
add
push
int
mov
mov
add
popa
jecxz
mov
xchg
mov
mov
lret
add
jecxz
addl
add
lahf
sub
pop
push
mov
push
shl
sub
pop
add
add
push
lea
push
push
push
call
mov
xchg
fwait
add
addl
mov
testb
popa
add
push
mov
notb
mov
icebp
xchg
data16
orb
add
add
jnp
xchg
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
lods
jne
add
lods
movsb
loop
add
jmp
mov
jl
repnz
add
lcall
add
lret
lahf
jns
lock
add
jae
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
add
lret
add
addb
andl
aad
in
ja
popa
add
mov
add
add
fdivr
lcall
xor
push
lea
push
push
push
push
push
push
call
arpl
add
movb
add
add
lds
stos
add
add
jo
stc
sub
pop
add
push
lea
push
push
push
call
add
add
fs
lret
add
add
jp
fdivrs
push
add
sbb
add
push
add
add
pop
add
xchg
in
add
mov
add
cmc
movsl
mov
sub
pop
add
push
sub
pop
push
mov
xor
push
push
push
push
call
test
add
icebp
xchg
pushf
add
sti
cmpl
cmpsl
add
mov
fiaddl
add
push
ja
lods
andb
add
add
jle
out
mov
arpl
nop
fcmove
insb
add
add
movsl
movsb
add
cmpsb
mov
jp
mov
add
lock
push
lea
push
push
push
call
add
mov
push
imul
mov
fnsave
cmp
add
add
push
jp
insb
add
fs
loopne
add
movb
pop
mov
xor
push
pop
rep
push
pop
mov
xor
push
push
push
call
add
fwait
rcr
add
int3
mov
add
push
add
fstl
jnp
add
shrb
add
add
aam
push
add
mov
nop
add
bound
add
mov
loop
add
lret
pop
mov
arpl
hlt
lcall
leave
je
mov
xor
push
ror
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
addl
in
lahf
add
mov
add
filds
pusha
add
add
test
fistps
push
add
add
jbe
out
lea
fdivl
scas
cld
add
add
jge
in
fcompl
adc
push
push
lea
push
lea
push
lea
push
call
add
mov
insb
insb
cli
add
add
add
xchg
mov
add
jno
add
test
add
mov
mov
mov
add
add
mov
enter
add
movsb
orl
pop
jl
add
les
pop
add
push
push
lea
push
call
bnd
jb
rorl
add
add
mov
inc
add
lret
add
fsubrp
je
add
insb
mov
xchg
mov
cli
into
push
add
add
iret
jl
add
jnp
ja
insb
add
push
loop
jns
add
add
mov
add
rcll
sub
pop
add
push
push
call
add
pop
mov
xchg
lret
loopne
cwtl
stos
jl
jle
sarb
pusha
fsubrl
mov
add
loopne
mov
add
je
add
pusha
jnp
add
stos
jae
lock
sub
pop
push
mov
xor
push
add
shr
dec
pop
add
push
push
push
push
call
int3
mov
add
add
add
push
int3
stos
pop
add
aad
in
mov
jns
add
add
rcl
mov
mov
enter
jno
push
add
pop
fnstcw
add
filds
ljmp
lahf
mov
call
movsl
test
sub
pop
pop
push
push
call
sahf
add
xchg
std
stos
outsl
xchg
add
mov
add
add
cmc
pop
add
add
stc
lcall
add
test
add
in
sub
pop
rep
push
not
rol
dec
pop
mov
push
push
push
call
add
std
call
add
xchg
mov
mov
add
xchg
out
mov
mov
mov
mov
fadds
sti
mov
add
insb
mov
rcrl
mov
xchg
int
mov
ljmp
hlt
xchg
in
sub
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
cld
add
mov
lods
push
add
add
mov
loope
add
push
shlb
xchg
flds
mov
movsl
jbe
add
add
add
add
mov
sahf
push
xchg
mov
xchg
jbe
add
leave
movl
in
fcompl
les
push
push
push
push
call
in
mov
add
jle
jb
add
push
add
add
cld
int3
cld
in
mov
jmp
add
add
jbe
mov
push
sub
pop
or
je
mov
push
push
call
add
roll
test
cltd
add
add
cld
add
xchg
add
add
lahf
jne
rol
roll
out
xchg
add
cli
outsl
out
mov
loope
std
into
add
mov
add
add
add
add
jnp
lcall
pop
add
add
push
add
shr
rol
pop
rep
push
sub
add
add
pop
pop
push
push
shr
xor
add
push
and
add
shr
not
sub
shl
ror
inc
pop
inc
shr
pop
push
dec
add
pop
pop
push
add
add
pop
mov
mov
push
rol
sub
xor
pop
mov
push
push
push
push
call
popf
mov
pushf
add
mov
in
add
mov
insb
stc
add
xchg
pop
add
jecxz
fldt
test
mov
in
lock
lcall
loopne
push
lea
push
push
lea
push
call
fwait
pop
test
add
add
mov
lods
add
xchg
add
rcrb
add
add
divb
add
xchg
enter
mov
add
add
cmc
xchg
mov
adc
add
mov
push
dec
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
call
jle
rcll
leave
add
add
push
add
in
scas
fiaddl
pop
xchg
mov
in
push
mov
xlat
add
add
in
mov
xchg
mov
test
add
add
add
cli
je
fdivrl
pop
fcompl
mov
out
mov
ret
jae
sub
pop
push
push
push
pop
push
push
push
inc
shr
ror
pop
mov
push
add
pop
pop
push
push
push
push
push
push
call
lds
les
enter
rclb
add
add
jp
xchg
aad
lods
loop
add
add
fidivl
call
cli
mov
push
fsubp
add
add
add
fnstcw
add
ja
jne
cld
add
sub
pop
pop
push
rol
sub
shr
pop
pop
push
sub
sub
shl
ror
pop
pop
push
inc
lea
add
add
pop
leave
push
push
push
push
push
call
lods
je
add
rolb
arpl
mov
pusha
fsubl
jo
jge
add
add
mov
add
add
out
test
xchg
push
mov
lcall
add
iret
jecxz
add
in
add
mov
sub
pop
ret
push
push
shr
lea
dec
sub
pop
mov
push
push
lea
push
push
push
push
call
mov
hlt
xchg
inc
data16
cmpsl
xchg
add
clc
rolb
incb
add
movsb
add
push
push
mov
add
sti
add
test
add
mov
jle
mov
pop
out
add
pop
add
stos
add
sub
pop
add
push
push
push
lea
push
push
lea
push
push
call
add
add
out
addl
push
add
testl
testb
pop
add
mov
test
jbe
push
pusha
shr
pop
add
mov
pusha
div
mov
mov
lcall
push
push
call
add
cltd
scas
mov
pushf
add
jns
push
leave
fistps
icebp
add
push
testl
sub
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jo
mov
add
lahf
add
imulb
add
jecxz
movsl
insb
cltd
jne
arpl
add
test
add
mov
add
add
add
add
mov
xchg
add
add
mov
add
icebp
add
sub
pop
push
push
lea
pop
push
movl
push
pop
addl
test
je
push
inc
dec
add
pop
mov
push
inc
dec
add
pop
pop
push
push
push
push
lea
push
push
lea
push
call
addr16
in
arpl
push
pop
cld
mov
add
cwtl
add
add
jo
add
fwait
loopne
add
addl
ja
testl
pop
add
pushf
add
add
add
and
lcall
push
ror
xor
ror
add
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
rcll
in
mov
jge
jae
add
jne
add
popf
add
fs
movl
add
pop
aam
aam
add
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
call
mov
rolb
add
jle
add
mov
mov
add
xchg
pop
push
add
add
mov
test
cld
mov
jo
mov
pop
fbld
mov
je
add
enter
loope
add
or
pop
loope
aam
in
in
lcall
push
push
push
lea
push
lea
push
push
push
push
call
lods
jne
add
add
out
fiadds
popf
flds
pop
mov
pop
add
test
add
add
add
lods
lcall
mov
loopne
ret
push
ror
xor
ror
pop
push
push
push
push
push
push
push
lea
push
push
push
call
jmp
add
add
mov
add
pop
mov
lret
icebp
sti
add
add
pop
push
add
add
ja
add
fdivr
lcall
in
push
shr
pop
add
push
xor
pop
push
push
push
push
call
add
add
pop
idivb
add
add
mov
loopne
mov
xchg
add
ret
xchg
mov
jnp
imul
push
lock
push
add
add
pop
into
add
sub
pop
push
push
push
push
push
call
add
add
aam
add
add
add
mov
enter
popf
add
outsl
jecxz
scas
mov
add
add
add
add
int3
fisubs
cwtl
jmp
imul
roll
leave
xchg
shrl
add
mov
pop
push
testl
push
add
shr
dec
pop
addl
push
add
shr
pop
push
call
push
shl
pop
mov
push
add
dec
shr
pop
pushl
push
dec
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
add
xchg
stos
scas
enter
add
add
icebp
test
add
add
pop
iret
add
mov
jb
data16
add
add
add
roll
xchg
add
call
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
push
aad
into
add
repnz
imul
mov
bound
add
push
add
sub
pop
cmpl
jne
push
push
push
push
call
xchg
add
xchg
popf
aad
add
out
add
add
add
add
mov
push
call
add
add
out
add
jmp
in
lock
pop
push
sub
pop
pop
pop
push
lea
add
pop
pop
push
lea
pop
leave
push
push
push
lea
push
lea
push
call
xchg
aad
jnp
stos
add
jp
add
scas
bound
xorl
repnz
push
jne
mov
test
add
mov
imul
jmp
add
push
mov
xchg
je
add
addr16
mov
sub
pop
ret
push
sub
inc
pop
push
mov
push
lea
push
push
call
add
lods
add
pop
add
add
test
mov
lods
movsl
add
add
add
fwait
add
add
add
sub
pop
add
push
dec
shr
pop
push
push
inc
pop
push
push
lea
dec
pop
push
push
push
dec
pop
movl
push
lea
push
call
fnstsw
add
xchg
mov
lret
add
mov
add
add
lret
sahf
mov
data16
mov
add
mov
in
jle
out
add
out
add
sub
pop
push
push
shl
pop
call
push
push
inc
rol
not
pop
call
subl
push
lea
push
push
call
add
add
scas
scas
mov
outsl
add
jmp
arpl
add
fwait
xchg
push
roll
lahf
out
mov
stc
add
xchg
pusha
pusha
addl
add
jge
les
add
sahf
add
movsb
add
fsubs
stos
cmpsb
jbe
add
add
sub
pop
cmpl
jne
push
push
push
push
push
lea
push
push
call
add
addb
loope
pop
xchg
add
add
cmc
xchg
jne
out
push
mov
std
nop
mulb
add
sarb
mov
add
test
ror
pop
add
sub
pop
pop
push
lea
push
push
push
call
fsts
fsubrl
mov
add
movsb
hlt
add
mov
add
arpl
pop
add
cmpsb
push
add
cltd
roll
add
mov
add
add
pop
push
xor
ror
pop
pop
push
push
call
add
fwait
pop
jno
add
add
cld
jno
mov
mov
add
add
std
add
add
mov
add
add
std
add
jbe
test
cmc
scas
jbe
push
add
popa
out
add
clc
lcall
push
lea
push
call
aam
add
xchg
gs
add
stos
popa
xchg
stc
fsubrs
jl
in
add
test
add
xchg
jne
rorl
add
add
ljmp
bound
leave
xor
cmpsb
bound
sti
add
pop
add
jp
mov
push
push
roll
add
xchg
push
mov
roll
add
sub
pop
leave
push
push
push
push
push
call
add
iret
pop
cltd
mov
fiaddl
mov
add
pop
ja
add
add
lods
add
add
lret
add
add
scas
push
les
add
testl
in
pop
ret
push
push
lea
push
lea
push
push
push
push
push
call
iret
add
add
mov
add
add
lret
jno
lock
add
add
xor
add
add
add
add
add
fldl
push
push
push
mov
add
ljmp
pop
push
mov
push
lea
pop
add
push
lea
push
push
call
adc
loopne
add
loop
testb
ret
loop
popf
add
mov
add
out
add
add
add
arpl
xlat
add
add
add
add
scas
mov
pusha
add
sti
ljmp
push
cmc
mov
sub
pop
push
push
push
lea
push
push
push
lea
push
call
icebp
pop
cmpsl
mov
sahf
add
aam
fiaddl
add
add
mov
pop
add
cmpsb
js
add
mov
mov
push
data16
fcomps
sti
add
mov
jl
fildl
add
shll
push
jecxz
add
clc
add
lea
mov
push
push
add
add
pop
push
push
push
add
ror
dec
add
push
or
inc
add
shr
not
dec
sub
shl
shr
lea
pop
rol
add
shl
shr
pop
push
shr
xor
pop
pushl
call
push
sub
inc
inc
pop
call
push
push
lea
xor
push
sub
add
shr
lea
sub
sub
shl
shl
pop
sub
shr
add
pop
push
push
lea
push
call
jne
in
imul
addb
loopne
add
add
xchg
lret
pop
sub
bound
cmc
loopne
add
add
ljmp
add
add
push
jb
out
fadds
xchg
xlat
add
cli
imul
in
hlt
lcall
jne
push
push
push
push
push
push
call
add
test
add
mov
jp
add
push
add
iret
mov
jle
pop
incb
add
test
sarb
into
add
sub
pop
call
call
push
push
shr
inc
sub
sub
push
or
not
add
sub
sub
sub
sub
add
add
add
pop
sub
ror
dec
add
pop
push
push
call
jnp
xchg
add
mov
xchg
jbe
imul
push
mov
imul
jge
add
mov
add
imul
aad
add
in
push
stc
add
add
shl
clc
push
or
add
add
popf
pop
add
add
mov
js
add
jp
in
clc
pop
pushl
push
push
lea
push
push
push
call
lret
add
push
popf
jge
add
cmpsb
add
mov
pop
push
stos
add
jae
in
jb
add
test
push
cmc
mov
mov
add
mov
lret
add
add
cld
lret
mov
add
add
add
mov
sub
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
clc
lds
fwait
add
in
add
loop
add
jae
mov
add
fucomip
push
leave
push
add
lret
mov
add
lds
lcall
rclb
adc
pop
jecxz
inc
pop
mov
push
push
push
push
call
jecxz
add
popa
add
add
mov
xchg
add
sti
je
add
add
pushf
ljmp
fdecstp
add
pop
clc
popf
rol
add
pusha
mov
fstps
push
jp
pop
pop
add
add
pusha
add
mov
add
pop
add
rolb
inc
cmp
push
push
push
lea
push
push
push
call
push
cli
add
jecxz
iret
add
in
mov
fiadds
jl
in
add
push
fldt
add
add
jne
pop
mov
pop
stos
test
add
lds
loopne
repnz
in
add
test
outsl
lock
mov
lcall
call
leave
jle
lea
push
push
lea
push
call
addl
pop
add
fwait
les
test
add
test
jmp
stos
clc
add
outsl
push
ret
scas
add
out
iret
add
jo
add
mov
cltd
add
in
mov
lea
add
insb
test
sahf
add
mov
movsl
popa
jmp
fiaddl
add
fadds
jno
in
in
pop
mov
push
rol
pop
shr
push
lea
push
lea
push
lea
push
push
push
call
mov
add
add
add
mov
rolb
rcl
xchg
lret
rcll
xchg
add
les
add
add
add
add
lcall
xlat
add
xchg
clc
hlt
add
cmpsl
jo
mov
add
imul
add
lcall
inc
or
push
call
add
add
add
jae
add
add
rcrb
lods
fdivp
add
in
add
rorb
jb
add
add
pop
movsl
lahf
movsb
add
add
clc
pop
mov
push
shl
sub
xor
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
fldl
add
mov
jbe
add
add
cmpsb
lods
add
into
lods
add
mov
add
stos
test
mov
add
push
push
add
mov
mov
sub
pop
add
push
push
lea
push
push
call
lds
add
mov
pop
push
push
mov
add
test
lods
pop
imul
add
add
fmul
cmc
jne
add
add
fimuls
xchg
gs
fidivl
lock
lock
add
push
add
add
add
pop
mov
push
add
xor
ror
add
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
xchg
add
add
arpl
add
call
add
scas
in
lds
add
jno
aam
xchg
add
aad
add
jmp
jb
jae
xlat
pop
cmpsb
cli
add
add
pop
aad
mov
pop
cmpsl
int
imul
fs
fxch
sti
scas
ljmp
pop
outsl
jne
push
push
push
push
lea
push
push
push
push
push
call
stos
lds
jl
jbe
xlat
add
shrl
jae
push
jmp
mov
add
xchg
fcmovu
leave
xchg
bound
lcall
cwtl
fadds
add
jne
push
shr
add
pop
mov
push
sub
inc
pop
movl
jmp
push
sub
xor
pop
mov
push
shr
lea
pop
mov
sub
jne
push
inc
pop
mov
push
push
push
call
mov
nop
add
jle
stc
jae
add
add
add
cmpsl
nop
add
roll
add
sub
pop
movl
push
inc
pop
jmp
push
lea
push
push
lea
push
push
push
push
lea
push
call
insb
pusha
rolb
addr16
lds
outsl
imul
xlat
imul
push
lods
add
fsubs
push
rolb
mov
add
bound
mov
mov
add
add
jge
add
add
push
sub
pop
mov
push
shl
sub
sub
pop
mov
cmp
jne
push
push
push
lea
push
push
push
push
call
add
jecxz
mov
cmc
add
add
add
cli
add
add
xchg
incb
add
add
add
jae
xchg
insb
add
pop
test
mov
push
in
mov
push
push
push
push
push
push
push
push
call
mov
add
loop
nop
mov
negl
testb
lret
add
mov
movsl
test
ljmp
xchg
addb
jb
jbe
aad
addr16
add
push
lret
add
int
sub
pop
movl
push
push
push
push
lea
push
lea
push
call
pop
add
mov
bound
in
add
mov
add
mov
loope
clc
mov
xlat
test
add
cld
add
int
add
fnstsw
mov
cli
sub
pop
jmp
push
push
push
lea
push
push
push
call
add
add
pusha
mov
cli
les
add
movsb
add
pop
arpl
imul
add
pop
mov
into
xchg
add
imul
add
mov
add
sub
pop
mov
push
not
sub
pop
cmpw
jne
push
push
push
push
push
push
lea
push
call
mov
add
leave
add
mov
add
cmpsb
addr16
sahf
test
mov
add
test
out
jno
xlat
loopne
lahf
add
jnp
add
test
sahf
out
cld
add
loop
std
insb
lahf
mov
add
in
in
mov
push
inc
inc
inc
inc
pop
movl
push
xor
ror
sub
pop
jmp
push
lea
push
push
push
lea
push
push
call
aad
add
add
loop
flds
xchg
mov
out
add
add
cli
push
int
add
jecxz
lods
cli
rol
add
sub
pop
pushl
push
add
inc
pop
pop
push
add
pop
mov
mov
push
push
push
push
call
jo
movsb
jns
add
mov
jno
flds
cltd
add
jmp
add
fcmove
add
add
lock
lcall
push
or
xchg
sub
push
ror
shl
push
xor
add
sub
sub
ror
rol
sub
ror
pop
dec
lea
add
pop
push
lea
push
call
mov
roll
add
jecxz
faddl
mov
add
push
lahf
into
add
arpl
aam
add
add
add
add
mov
add
add
add
jne
lret
add
lcall
push
push
push
push
push
push
call
add
push
pop
mov
cltd
movsb
add
add
bound
push
add
push
add
add
mov
add
mov
add
add
mov
jp
add
xchg
mov
cld
xchg
add
std
pop
sub
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
clc
mov
lret
enter
outsl
add
popa
add
mov
in
add
add
cmc
pop
iret
add
add
aam
jle
mov
fiaddl
addb
push
mov
fcomps
cmp
rol
je
push
push
shr
not
rol
push
or
inc
add
ror
sub
dec
pop
lea
not
rol
sub
pop
push
shl
pop
push
push
push
push
push
lea
push
call
mov
mov
add
add
jle
loop
bound
add
add
add
loopne
jge
add
fs
add
addl
test
xchg
mov
je
push
int
leave
add
jne
testl
xlat
out
lret
jno
sub
pop
call
push
pop
cmpl
je
push
push
lea
shl
push
sub
add
add
sub
shl
xor
rol
pop
shr
lea
pop
push
ror
xor
xor
add
pop
push
call
push
not
pop
cmpl
je
push
push
shl
add
xor
rol
push
xor
add
not
shr
sub
rol
lea
pop
lea
pop
push
add
pop
push
push
sub
ror
pop
call
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
in
add
add
lock
add
outsl
in
mov
add
push
cld
xchg
add
mov
hlt
jno
add
lcall
js
int3
fldz
ret
jmp
inc
push
mov
push
rol
shr
shl
push
xor
add
not
sub
shl
shl
pop
shr
dec
shr
pop
push
shr
rol
rol
rol
pop
push
push
push
lea
push
push
call
imulb
pop
add
filds
aad
add
add
xchg
mov
add
scas
add
mov
add
jl
jl
jo
add
std
addb
add
cli
enter
mov
push
pushf
add
mov
add
lock
add
xchg
faddl
jnp
aad
mov
loopne
je
sub
pop
call
push
dec
not
pop
cmpl
je
push
push
push
and
add
not
lea
sub
inc
rol
sub
pop
sub
sub
pop
push
add
pop
push
push
not
shr
lea
add
pop
call
push
ror
add
pop
cmpl
je
push
push
shr
push
and
add
lea
sub
add
sub
pop
shr
pop
push
rol
shr
rol
pop
push
push
xor
dec
xor
pop
call
push
push
push
lea
push
lea
push
push
lea
push
call
mov
les
enter
add
mov
fs
ja
add
xchg
lret
add
add
add
sub
out
add
int
iret
add
fldl
push
adcb
add
add
sub
pop
cmpl
je
push
push
not
add
sub
push
or
inc
add
add
dec
dec
sub
shr
add
rol
not
pop
ror
pop
push
sub
pop
push
push
push
lea
push
push
call
add
add
add
mov
jge
add
pop
add
add
mov
aam
aam
fidivrs
xchg
xchg
add
add
mull
lcall
lahf
sub
add
repz
pop
cmpl
je
push
push
push
and
add
ror
inc
add
sub
add
pop
xor
ror
pop
push
inc
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
lods
mov
add
add
lahf
add
add
repnz
add
xchg
sti
xlat
out
xchg
add
call
out
add
scas
add
mov
test
add
push
loop
add
pop
add
jnp
add
pop
push
sub
pop
call
push
lea
push
lea
push
call
mov
pop
aam
push
pop
fcomps
add
fadds
enter
xlat
add
ja
add
icebp
lret
jb
add
movsl
mov
into
mov
mov
xchg
xchg
ljmp
mov
lret
add
add
sub
pop
cmpl
jne
push
push
lea
push
lea
push
call
lcall
add
jp
add
jb
push
clc
cwtl
pop
add
jmp
pusha
add
cmc
pop
test
add
add
inc
adc
add
add
add
xchg
push
push
push
push
push
push
push
call
call
ret
add
mov
add
mov
lret
add
add
fxtract
add
add
add
sub
jp
popf
int
fiadds
add
arpl
sbbb
xchg
pop
add
std
add
mov
jbe
in
fcompl
pop
add
add
jmp
pop
push
push
push
push
lea
push
push
lea
push
call
add
mov
rcll
ja
add
addb
push
add
lds
push
mov
jae
jno
mov
pop
pop
pop
push
push
push
push
call
xchg
add
add
mov
addb
add
push
add
add
js
xchg
loope
mov
add
add
add
loopne
aad
iret
add
mov
mov
jnp
sub
pop
pop
leave
push
add
pop
ret
push
push
add
not
xor
pop
mov
add
push
xor
pop
cmpl
jne
push
push
ror
ror
shr
push
xor
add
shl
inc
sub
sub
pop
rol
not
pop
push
push
push
push
lea
push
push
push
push
call
cld
add
push
add
xchg
add
add
insb
into
push
loope
fwait
int3
xchg
mov
int
add
out
add
mov
enter
lods
lods
bound
add
add
je
sti
lret
add
add
push
test
xchg
add
add
pop
push
vsubss
sub
pop
pushl
push
pop
call
push
push
sub
pop
call
push
rol
sub
add
pop
jmp
cmpl
jne
push
add
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
jbe
orl
add
mov
add
add
add
add
add
jmp
jnp
arpl
jb
add
add
add
aam
xchg
enter
lods
jae
add
add
push
mov
call
push
push
lea
push
call
loope
out
mov
sarl
scas
ljmp
add
add
add
add
fstps
clc
ja
adcb
pop
add
add
add
mov
add
loop
in
hlt
lcall
push
add
add
pop
jmp
push
lea
push
lea
push
push
lea
push
call
add
hlt
dec
add
push
int
mov
add
xchg
shll
faddl
add
mov
add
push
pushf
addl
add
pop
addr16
add
out
add
lcall
jge
add
test
add
add
rcl
push
not
push
or
inc
add
sub
rol
sub
rol
pop
lea
pop
push
push
push
push
push
push
push
push
call
lock
sub
enter
cmpsl
add
loop
lods
mov
shrb
xchg
lods
add
lret
bound
jmp
jge
add
add
insb
pop
mov
push
mov
add
test
imul
int3
add
add
sub
pop
pushl
push
rol
ror
pop
call
push
push
push
lea
push
push
push
call
add
jno
mov
add
cltd
add
add
ja
mov
pop
scas
bound
add
fninit
add
ja
out
pushf
test
jnp
add
add
add
outsl
add
pusha
add
addb
pop
add
add
ljmp
mov
testb
pop
call
jmp
push
add
sub
pop
cmpl
je
push
sub
sub
pop
cmpl
jne
mov
push
sub
pop
mov
push
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
leave
jne
pop
add
test
add
out
mov
nop
cmpsb
add
push
add
in
icebp
imul
fsub
test
hlt
xchg
add
add
popf
repnz
aam
cwtl
add
add
add
stos
add
add
lods
fadds
je
iret
call
sub
pop
jmp
push
push
add
push
or
not
add
inc
rol
sub
ror
pop
pop
push
inc
sub
add
pop
pushl
call
push
push
call
add
add
pop
pop
xorl
lods
add
mov
add
pop
jae
movsl
add
loopne
lock
into
pop
addr16
xchg
sub
pop
call
push
push
dec
rol
dec
push
and
add
shr
sub
rol
pop
dec
pop
push
lea
push
push
push
push
push
call
add
add
test
mov
add
mov
movsl
fdivp
pop
mov
sbb
add
cltd
add
mov
xchg
add
scas
loopne
in
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
add
add
jle
scas
lock
add
loop
add
add
mov
out
mov
add
lods
into
xchg
add
cmpsb
fisubl
cltd
sarl
add
add
out
add
add
sahf
add
add
arpl
sub
pop
call
call
push
push
dec
not
rol
add
push
and
add
rol
sub
not
lea
sub
ror
add
sub
sub
pop
xor
add
dec
pop
push
dec
pop
pushl
call
push
sub
ror
pop
call
push
push
shl
push
push
pop
add
lea
add
lea
sub
rol
sub
inc
sub
pop
rol
dec
pop
push
push
push
push
call
mov
gs
in
add
mov
mov
add
add
add
nop
add
mov
add
add
imul
movb
sahf
js
jl
out
lods
mov
in
int
add
push
out
jl
push
std
fiaddl
mov
push
lret
add
add
mov
jnp
add
jo
in
lock
lcall
jne
push
push
push
push
push
call
mul
add
int
add
push
fistpll
lock
mov
mov
add
out
xlat
mov
fcompl
add
pop
add
lcall
sbb
add
push
shr
pop
call
push
push
sub
push
or
not
add
dec
sub
rol
sub
pop
add
not
shl
pop
push
push
push
push
push
push
push
push
call
add
push
icebp
add
movsb
add
mov
clc
xchg
mov
and
lods
add
add
add
xchg
push
mov
add
add
in
xchg
cld
push
xchg
in
push
fildl
pop
leave
fldl
mov
cli
mov
add
popf
add
test
movb
in
loopne
pushl
call
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
les
fcomps
enter
add
add
std
rolb
les
add
cltd
jmp
add
add
cltd
push
lock
add
add
add
cli
pusha
mov
add
add
movsb
pop
mov
add
add
fwait
sub
pop
call
push
push
push
sub
add
lea
sub
sub
sub
pop
rol
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
out
mov
pop
add
out
add
jnp
add
popa
mov
add
mov
movsl
icebp
mov
iret
add
mov
add
xchg
cwtl
xchg
pop
cmc
sbb
mov
lock
add
jecxz
add
add
mov
add
add
test
jb
add
jne
push
not
pop
call
call
push
push
inc
not
xor
push
or
not
add
add
lea
sub
sub
xor
add
pop
xor
sub
pop
push
push
lea
push
push
push
call
lret
aad
cmc
push
pusha
lock
lock
imul
mov
jmp
mov
rolb
insb
rcl
addb
cmpsl
jle
add
add
push
add
lahf
add
pop
jno
test
add
fwait
sub
pop
pushl
push
push
push
call
add
add
add
add
xchg
xchg
add
mov
push
add
add
pop
add
xchg
add
mov
bound
add
xchg
add
add
add
cltd
imul
mov
arpl
add
nop
add
add
in
xchg
leave
jmp
sub
pop
call
push
xor
sub
sub
rol
pop
call
push
push
rol
push
or
inc
add
shr
shl
inc
sub
lea
rol
inc
pop
add
lea
ror
pop
push
xor
ror
inc
not
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
fiadds
add
add
jb
xchg
in
aad
stc
add
in
add
lahf
repnz
jge
add
cmpsl
add
cmpsb
pop
sub
pop
call
push
push
sub
add
push
or
not
add
sub
not
rol
sub
rol
pop
inc
dec
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
test
lahf
mov
mov
mov
icebp
test
mov
add
fsub
add
add
add
in
add
cli
mov
jnp
loope
pop
xorl
lods
add
jne
call
push
lea
add
pop
call
push
push
add
not
push
sub
add
ror
shr
not
sub
xor
sub
ror
pop
add
rol
pop
push
rol
pop
pushl
call
push
add
add
shr
shl
pop
lea
push
sub
pop
push
call
push
push
ror
sub
push
sub
add
inc
not
not
sub
sub
pop
xor
shr
add
xor
pop
push
add
pop
pushl
push
sub
pop
call
push
push
lea
push
push
push
push
push
push
call
fiadds
ficompl
mov
lock
mov
push
rcrl
lods
bound
add
sti
sahf
add
push
pop
add
fwait
add
add
movsb
cmc
add
mov
add
cwtl
mov
cld
jecxz
pushf
add
scas
popa
cmpsb
add
xchg
add
sub
pop
call
push
push
add
shl
inc
push
xor
add
lea
sub
not
pop
add
ror
pop
push
shr
add
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
negl
add
add
les
clc
out
xchg
pop
add
mov
enter
add
mov
into
jne
push
add
add
lcall
sub
add
push
push
push
push
lea
push
lea
push
push
call
mov
jp
add
incb
addb
add
jge
add
lret
pop
addr16
mov
add
sbbl
add
add
mov
add
shrb
xor
rcll
iret
push
xlat
add
add
shr
sub
pop
dec
sub
pop
push
dec
ror
pop
pushl
call
push
lea
push
call
add
sarb
add
add
roll
ror
sarb
add
add
int3
add
nop
jnp
add
xchg
add
add
add
pop
add
add
rolb
stc
loope
in
clc
lcall
shrb
sub
push
or
not
add
inc
sub
sub
pop
inc
pop
push
rol
inc
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
call
js
xorb
rclb
add
add
add
add
push
data16
in
push
add
loopne
add
jl
add
add
xchg
add
mov
lcall
add
mov
lret
cwtl
add
leave
into
roll
sub
pop
call
push
push
add
rol
sub
dec
push
push
pop
add
add
inc
add
sub
pop
add
sub
xor
lea
pop
push
push
sub
push
or
inc
add
dec
sub
ror
pop
rol
dec
dec
inc
pop
push
inc
shr
pop
call
push
lea
push
push
push
lea
push
push
lea
push
call
in
leave
add
add
xchg
add
js
pop
popl
push
add
add
negb
push
add
add
xchg
mov
add
add
add
mov
mov
pop
pop
add
pop
push
pushf
add
push
add
clc
int3
add
rcr
jmp
lods
push
add
in
pop
dec
jne
push
lea
push
push
push
lea
push
call
fldenv
add
popl
add
fstps
cmpsl
mov
ljmp
fiaddl
add
add
pusha
je
add
test
push
push
mov
pusha
add
test
fiaddl
push
add
add
stos
add
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
call
filds
add
add
jnp
faddl
aad
add
fwait
nop
iret
nop
fadds
fildl
add
outsl
add
ror
add
pop
test
add
add
add
add
in
add
call
add
rol
add
add
push
iret
add
push
mov
xchg
ja
add
add
add
int
push
pop
lea
push
push
shr
push
sub
add
shl
not
sub
inc
pop
rol
xor
pop
push
push
push
lea
push
push
push
lea
push
call
lods
into
pop
jno
add
nop
xchg
add
add
add
add
add
jp
add
add
add
pusha
jb
push
fstl
out
cwtl
hlt
mov
add
lock
fldl
imul
jl
stc
imul
popa
loop
aam
add
hlt
add
lcall
jne
call
push
rol
add
sub
add
pop
push
push
shr
inc
pop
call
push
push
lea
sub
dec
push
xor
add
dec
inc
sub
dec
add
pop
inc
rol
shl
pop
push
ror
inc
dec
pop
pushl
call
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
lock
add
add
or
add
add
cld
insb
add
sub
pop
call
push
add
shr
pop
mov
push
rol
pop
lea
push
push
xor
push
push
pop
add
not
ror
lea
sub
pop
dec
sub
add
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
shlb
add
add
add
cltd
pop
add
lret
pop
xchg
add
loop
movsl
hlt
xchg
lcall
add
test
add
popl
leave
test
add
les
mov
sub
pop
pushl
push
rol
lea
dec
pop
call
push
push
lea
push
call
leave
add
add
add
add
pop
filds
lcall
add
add
cmpsb
add
mov
in
add
add
mov
sub
pop
lea
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
jb
mul
ja
out
add
push
add
add
popf
add
stc
pushf
add
pop
add
add
add
faddl
lcall
add
adc
add
jne
aas
push
lea
push
push
lea
push
push
call
mov
add
scas
subb
fsubr
js
jae
add
add
rolb
outsl
mov
add
add
movsb
push
add
lods
xchg
add
add
mov
push
add
add
mov
mov
add
js
mov
add
add
cltd
out
enter
mov
push
push
push
push
call
add
shll
add
out
fcomi
xlat
enter
idiv
add
icebp
add
stos
add
xchg
addl
add
int3
add
jge
add
add
pop
rclb
add
add
add
add
mov
in
hlt
lcall
jne
push
push
dec
shl
push
or
inc
add
xor
sub
shl
pop
xor
xor
xor
pop
push
xor
shr
pop
push
push
lea
push
push
push
lea
push
call
stc
lret
add
push
fiaddl
pop
in
leave
pop
mov
test
jo
add
mov
add
push
mov
int3
scas
mov
xchg
aad
mov
lcall
insb
jmp
add
movsb
pop
mov
in
pop
call
push
push
add
add
shr
sub
push
sub
add
dec
sub
add
sub
add
xor
rol
pop
rol
pop
push
shr
add
pop
pushl
push
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
mov
lods
add
jns
xlat
add
jecxz
lahf
mov
insb
mov
lods
push
jo
add
add
addr16
hlt
mov
add
add
rcl
add
add
sub
pop
push
push
push
push
lea
push
push
push
push
call
add
add
add
lea
cmc
jp
add
aam
add
mov
add
loopne
sub
pop
call
push
push
dec
lea
push
and
add
rol
sub
sub
lea
lea
pop
add
add
add
sub
pop
push
ror
sub
add
xor
pop
pushl
call
push
xor
pop
call
push
rol
shl
not
lea
pop
pushl
mov
push
shr
dec
pop
jmp
push
push
add
push
and
add
sub
sub
add
sub
sub
lea
sub
pop
inc
not
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
fldl
mov
xchg
mov
popf
jecxz
add
in
arpl
push
add
add
add
out
repnz
fidivrs
popl
xlat
call
add
cmpl
pushl
push
push
push
lea
push
lea
push
push
push
call
rcll
xchg
icebp
mov
addl
pop
clc
add
cmpsl
arpl
mov
les
lods
add
add
shrb
out
add
add
pop
add
add
push
add
add
aad
pop
shl
add
add
mov
in
in
call
push
push
push
push
push
push
push
push
call
pop
jl
add
jmp
add
add
ljmp
shlb
faddl
mov
cwtl
addr16
xchg
jbe
in
in
lcall
shrb
pushf
xlat
push
inc
ror
shr
dec
push
push
pop
add
sub
add
sub
shr
dec
pop
dec
pop
push
inc
rol
xor
shr
pop
pushl
call
push
ror
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
int
ja
add
add
add
jmp
add
add
filds
mov
fnsave
in
fcomps
rclb
ds
jnp
push
push
push
call
add
add
pop
add
fildl
add
fcmovu
add
add
loopne
add
jb
jo
add
add
lods
add
push
in
xchg
cld
sub
pop
leave
add
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
xchg
add
xchg
add
add
pop
jl
bound
mov
xchg
xchg
add
push
add
mov
add
sarl
mov
add
js
pusha
outsl
add
push
into
int
add
mov
call
add
lcall
push
push
push
call
mov
mov
pushf
push
shll
xchg
add
mov
xchg
add
out
add
add
mov
add
in
add
xchg
add
enter
loopne
add
rolb
mov
add
mov
fldl
add
lcall
push
add
rol
sub
ror
pop
pop
push
lea
push
push
push
lea
push
push
call
add
add
stos
fs
mov
push
add
add
add
js
add
add
stos
testb
push
gs
add
icebp
jge
jle
add
out
mov
in
call
xor
push
push
push
call
cltd
add
cwtl
add
add
into
add
add
sti
add
mov
test
add
add
roll
push
add
call
sub
pop
inc
ret
push
dec
lea
pop
leave
ret
push
push
push
push
push
lea
push
push
call
in
mov
cmpsb
cmpsl
cltd
fcmovbe
xchg
xchg
test
xchg
add
int
add
add
add
add
mov
cld
add
mov
in
in
lcall
push
add
xor
sub
add
pop
mov
push
push
call
lds
pop
clc
int
ret
addb
mov
enter
fiadds
shr
pop
mov
add
add
add
ror
add
add
mov
hlt
add
in
lcall
add
add
nop
call
stos
in
lret
jmp
pop
add
sub
pop
cmpl
jne
push
push
call
out
add
add
lahf
test
hlt
pop
addr16
cli
hlt
lds
fsubrs
add
enter
add
int3
out
add
fiaddl
lods
add
enter
loopne
jbe
test
ffree
add
arpl
pop
mov
add
add
sub
pop
mov
push
not
add
add
pop
jmp
push
rol
pop
mov
and
push
push
push
push
push
push
push
call
add
mov
add
mov
mov
add
add
push
push
cltd
add
shrb
xchg
in
add
add
jecxz
mov
add
add
add
mov
icebp
in
in
in
lcall
leave
xor
push
pop
add
xor
push
rol
pop
dec
push
not
add
lea
pop
sub
push
push
push
push
push
push
lea
push
push
call
loopne
out
add
add
addr16
popl
add
xchg
add
notl
add
jbe
add
add
push
add
add
loop
xchg
fs
push
js
cmc
jb
push
arpl
fnstsw
test
jno
aam
add
xchg
sub
pop
jmp
sub
push
not
lea
pop
pushl
pop
push
add
shr
pop
sub
cmp
jne
push
push
push
push
push
push
lea
push
call
add
add
out
add
xchg
js
push
incb
add
add
add
add
jl
rclb
add
add
je
std
ret
add
add
jb
add
pushf
jmp
ja
cmpsl
aad
sub
pop
mov
lea
push
push
push
push
lea
push
push
call
xlat
add
add
push
add
push
xchg
add
add
mov
les
nop
add
iret
add
add
cmpsl
add
jo
testb
push
aad
add
add
mov
add
add
add
in
scas
add
push
add
add
add
sub
pop
sub
mov
push
shr
pop
shr
push
push
lea
push
push
lea
push
push
push
call
lahf
cli
fbstp
mov
add
rclb
add
jno
mov
add
push
lahf
lea
call
add
shrl
jmp
add
enter
pop
sub
push
dec
pop
pushl
pop
push
push
lea
push
push
lea
push
push
push
push
call
fcoms
outsl
push
add
add
add
mull
nop
int
add
incb
add
gs
mov
addl
push
clc
pop
add
xchg
out
add
movsb
add
mov
in
cmc
pop
add
movsl
add
push
lret
add
xorb
cmpb
mov
loopne
shr
push
inc
inc
lea
ror
pop
and
push
shr
sub
lea
pop
sub
push
pop
cmp
jne
push
push
lea
push
call
popl
xchg
add
sti
popf
xchg
test
iret
lret
scas
mov
adcb
add
add
add
add
add
add
clc
mov
mov
pusha
in
mov
scas
add
int
add
xchg
jbe
add
clc
add
jecxz
add
test
push
add
dec
shl
shr
pop
ret
push
add
pop
push
push
sub
lea
add
pop
mov
push
sub
shl
pop
add
push
sub
pop
push
push
add
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
lds
mov
add
add
into
mov
push
filds
add
mov
in
enter
lret
add
add
in
lds
add
add
sti
mov
add
add
add
add
mov
jle
aam
mov
lcall
push
pop
push
push
add
add
pop
mov
push
push
push
call
add
leave
lret
add
nop
add
cwtl
add
add
enter
add
hlt
pop
loopne
movsl
loope
popa
sub
pop
lea
sub
push
push
push
push
push
push
push
push
lea
push
push
call
add
into
add
add
add
add
add
stos
add
popf
test
scas
add
mov
lock
push
add
add
flds
add
add
mov
add
mov
jecxz
add
add
sub
pop
mov
shr
push
inc
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
ljmp
jnp
jo
jne
add
pushf
bound
mov
add
scas
add
add
addr16
mov
mov
add
addr16
mov
shrb
loopne
mov
push
shl
xor
dec
pop
add
push
ror
add
pop
mov
add
push
dec
pop
xor
push
push
push
call
lret
jle
add
imul
out
pop
add
into
bound
lock
add
jp
sub
add
add
loop
add
mov
in
hlt
pop
mov
and
push
shl
shr
pop
rol
rol
push
add
add
pop
xor
inc
push
push
call
stc
shll
int3
add
test
add
roll
lds
add
scas
jns
add
add
add
add
clc
stos
mov
out
enter
add
sti
sbbb
add
clc
lcall
cmp
jne
push
rol
add
pop
add
push
lea
push
push
push
lea
push
push
push
call
leave
lds
push
enter
test
fnstsw
cmpsl
loope
add
mov
lret
add
adcb
fadds
add
add
add
cmc
pop
pop
add
add
pop
add
ficompl
iret
add
lds
loop
add
mov
add
sub
pop
cmp
je
push
not
shr
pop
add
push
rol
add
pop
cmpl
jne
push
rol
pop
xor
push
push
push
lea
push
push
call
pushf
lret
mov
je
les
enter
add
cmpsl
pop
faddl
mov
test
mov
mov
lods
mull
pop
filds
in
add
add
add
add
cmpsb
rorb
pop
in
enter
stos
mov
add
push
push
push
push
push
push
push
push
call
push
into
mov
mov
jmp
mov
xchg
push
add
lcall
ljmp
scas
add
fld1
add
in
add
add
add
out
add
popa
add
addb
add
add
mov
cmpb
pusha
mov
out
sub
pop
pop
pop
push
lea
push
push
call
ror
pop
add
mov
scas
loopne
mov
shll
add
cmpsb
movl
add
add
add
enter
addl
in
hlt
pop
pop
pop
push
xor
add
pop
leave
push
rol
not
shl
add
pop
ret
mov
push
push
push
push
push
push
push
push
push
call
lock
add
fldl
ret
repnz
outsl
add
out
cmpb
movsl
add
add
add
sti
leave
jge
add
add
incb
jno
pop
fadd
sahf
mov
sub
pop
add
push
push
push
push
push
lea
push
call
pop
jae
clc
mov
scas
pop
lret
pusha
xchg
mov
jo
add
mov
xchg
out
jl
xchg
aad
adc
add
xchg
jnp
fstps
repnz
mov
pop
fildl
lea
jp
add
add
sub
pop
mov
push
not
pop
movzbl
push
push
rol
pop
call
push
add
shl
add
pop
xor
pop
push
lea
push
push
push
push
lea
push
push
call
fnsave
add
imul
fdivr
add
ljmp
mov
add
jae
add
fcompl
add
jge
cmc
add
push
lret
xchg
hlt
add
push
add
js
add
xchg
fiaddl
lcall
pop
push
push
push
lea
push
call
add
mov
mov
sti
enter
add
push
lds
roll
add
mov
int
mov
into
les
add
cmpsb
add
jo
add
mov
lahf
add
mov
fadds
push
add
add
loope
add
add
aad
xlat
add
pop
push
push
push
call
jbe
cli
mov
mov
xchg
add
fcomp
jae
mov
clc
data16
pop
cmpsl
cmpsl
pop
pop
add
mov
int3
add
and
add
cmp
movsb
decb
add
pop
int
pop
out
sti
bound
jns
loope
mov
add
add
add
push
push
js
sub
pop
leave
ret
push
add
inc
sub
sub
pop
push
mov
push
push
lea
push
push
call
outsl
fwait
xlat
in
out
jns
add
add
roll
add
mov
stos
add
add
xlat
stos
popf
int3
jae
lock
add
add
jecxz
add
jecxz
add
xchg
scas
push
xchg
test
sub
add
add
popf
add
add
add
add
add
sub
pop
add
push
rol
shr
pop
push
push
lea
push
lea
push
push
push
call
arpl
mov
xchg
aad
mov
add
add
scas
jp
lods
add
faddl
pop
test
add
into
hlt
mov
mov
fnsave
add
addb
mov
sub
pop
push
push
shr
not
dec
pop
push
push
shr
inc
sub
pop
push
push
lea
push
call
add
stc
cmpsb
stos
pushf
bound
add
add
add
rcl
jo
enter
loop
add
add
add
add
jno
add
cmpsl
add
in
clc
pop
mov
push
push
push
push
call
add
test
lock
pop
add
add
push
pop
fmull
bound
lahf
leave
into
add
fwait
add
add
stos
xlat
add
add
out
out
add
enter
pop
push
push
lea
sub
not
pop
pop
push
push
lea
push
push
push
push
push
push
call
mov
xchg
mov
filds
mov
out
out
enter
add
add
mov
sbbl
add
jl
add
fidivrl
scas
add
add
add
mov
add
add
pop
lea
push
shl
inc
sub
ror
pop
sub
push
pop
mov
push
lea
push
lea
push
push
lea
push
call
add
mov
add
add
add
add
add
add
jmp
add
push
jb
andl
add
add
add
leave
add
pop
fildl
xchg
add
sub
pop
shr
add
push
lea
push
push
push
push
push
lea
push
lea
push
call
les
jnp
add
add
pop
xchg
lcall
add
xchg
arpl
scas
add
sarl
add
faddl
add
add
add
xchg
mov
fildl
loope
test
add
add
jmp
aam
mov
mov
add
icebp
add
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
call
mov
add
mov
add
hlt
ret
add
scas
incb
int
add
add
add
add
or
xchg
mov
add
add
addr16
pop
add
push
push
push
lea
push
lea
push
push
call
cmc
mov
mov
mov
xchg
fstl
add
lcall
add
add
add
movsl
mov
out
insb
ja
imul
jecxz
loope
add
shrb
in
add
scas
add
add
pop
add
lcall
jae
popl
push
rol
xor
rol
pop
mov
push
ror
pop
add
push
push
push
push
push
call
add
pop
call
mov
cli
add
add
jnp
je
add
mov
xchg
add
add
clc
add
add
iret
xchg
popl
add
les
add
out
jns
imul
xorb
call
add
in
in
pop
xor
lea
push
sub
pop
mov
push
push
lea
push
push
push
push
push
call
add
lcall
mov
flds
push
movl
fwait
add
arpl
add
je
pop
add
jae
imul
fcomip
push
push
pop
mov
in
icebp
imul
add
add
cmpsl
jnp
jae
hlt
movsb
sub
pop
add
push
add
add
pop
xor
push
xor
sub
pop
rol
push
push
lea
push
push
push
push
push
call
jmp
xchg
xorb
mov
loopne
add
xchg
add
scas
add
add
push
add
in
jo
mov
mov
fdivl
add
xchg
add
add
jnp
rolb
add
cli
cli
lret
xchg
mov
fiaddl
shlb
sub
pop
nop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
pop
add
add
jnp
movb
nop
push
jnp
add
add
add
push
mov
add
cld
addl
add
sub
pop
nop
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
aam
add
add
add
add
loope
enter
add
sub
pop
xor
nop
push
pop
nop
inc
push
lea
pop
nop
nop
push
shr
add
pop
cmpb
jne
push
pop
add
push
push
push
call
add
push
testl
mov
lahf
pusha
test
into
pop
int3
mov
xchg
in
add
mov
jmp
add
shrb
gs
mov
in
mov
fcoml
add
mov
push
push
push
in
out
loopne
int3
js
mov
mov
add
sub
pop
nop
push
lea
push
lea
push
push
lea
push
push
call
imul
fldl
xchg
add
jne
je
imul
pop
aam
push
add
cmc
mov
addr16
addb
lods
mov
mov
xchg
add
add
add
aad
addl
bound
cltd
sub
pop
nop
push
push
push
push
lea
push
lea
push
call
iret
add
add
mov
lock
je
add
movb
add
add
add
add
mov
in
cmpsl
js
in
imul
add
fistps
lahf
shrb
xlat
test
mov
lret
add
add
add
add
add
push
add
lcall
inc
or
test
add
add
loope
pop
nop
nop
push
lea
push
push
push
lea
push
lea
push
push
call
pop
xlat
add
clc
rolb
add
mov
pop
outsl
lret
out
lahf
add
add
add
add
xchg
push
add
icebp
addb
add
mov
jle
bound
hlt
addl
mov
push
lret
add
lret
addr16
cmpsb
mov
test
add
jo
enter
push
add
in
in
inc
push
sub
lea
ror
pop
nop
push
shr
sub
pop
nop
cmp
jb
push
lea
push
push
call
lods
xchg
add
in
xchg
add
movb
pop
scas
lock
add
iret
fwait
pushf
notb
pop
push
imul
add
xor
jmp
push
sub
add
rol
xor
pop
mov
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
aam
add
add
push
cwtl
int3
add
gs
fwait
add
pop
scas
mov
leave
in
out
add
add
jb
cmpsb
addb
jl
add
add
add
add
add
sti
jge
add
imull
mov
jl
add
sub
pop
movzwl
push
add
ror
pop
mov
push
pop
add
push
push
call
lods
lret
add
mov
jbe
push
ret
bound
mov
add
xchg
add
add
add
lret
add
add
add
add
mov
add
add
fwait
add
mov
add
pop
movsb
js
int3
pop
mov
bound
lcall
dec
hlt
push
dec
xor
not
pop
xor
xor
push
shl
add
add
rol
pop
shl
push
lea
push
lea
push
push
push
push
push
push
push
call
add
jge
add
fldl
cmpsb
add
lret
xorl
add
add
ljmp
mov
add
add
mov
jmp
jmp
add
lcall
dec
nop
add
loope
push
add
pop
xor
push
sub
ror
pop
shl
push
lea
shl
shl
pop
xor
push
push
call
lcall
add
ja
add
sti
mov
add
in
insb
mov
leave
add
add
add
testb
add
call
roll
insb
call
sub
pop
mov
add
push
dec
dec
xor
pop
pop
push
pop
pop
push
shr
xor
pop
pop
pop
push
sub
pop
leave
push
inc
ror
pop
ret
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
repnz
add
les
add
add
push
add
add
add
add
add
hlt
lods
aam
call
icebp
testb
add
add
add
mov
push
add
inc
sub
pop
push
push
push
add
shl
sub
pop
push
push
push
pop
mov
mov
push
add
add
pop
mov
push
shr
add
pop
test
je
push
dec
pop
mov
push
lea
push
lea
push
push
push
push
call
mov
iret
test
ret
add
test
arpl
sahf
xchg
xchg
xchg
lret
rolb
add
add
subl
xchg
jle
xchg
in
cld
fsubl
mov
jnp
xlat
testb
call
jno
scas
jecxz
in
call
test
je
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
call
jmp
dec
aad
popf
add
popf
mov
add
iret
add
add
ljmp
add
mov
add
add
add
pop
add
jp
add
add
test
iret
in
les
add
add
add
loopne
lcall
notl
pop
mov
push
sub
ror
ror
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
cmpsl
mov
outsl
add
cmpsl
add
add
push
sti
add
stos
add
in
mov
fcomi
jp
in
fcomps
cmp
je
push
push
push
lea
push
push
push
push
push
push
lea
push
call
jae
add
in
add
xchg
pop
jns
pop
lods
jecxz
mov
add
mov
add
xchg
add
mov
mov
add
out
add
into
add
cwtl
jmp
mov
in
pop
sub
pop
test
je
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
pop
mov
out
jae
test
add
nop
clc
xchg
add
nop
test
int3
rolb
mov
push
add
jae
add
mov
in
fcomps
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
add
sti
add
mov
lahf
add
pop
mov
rcll
imul
mov
loope
add
add
xchg
add
lret
outsl
add
add
add
in
in
lcall
push
xor
rol
shl
pop
cmp
je
push
push
call
add
lahf
clc
rolw
sahf
add
add
fstpl
add
in
and
add
mov
jl
add
rorb
cmp
pushl
rclb
dec
and
inc
push
push
lea
push
call
mov
mov
add
scas
mov
mov
mov
cmp
out
add
mov
xchg
add
add
jns
add
push
add
pop
sti
add
loop
sub
pop
pop
pop
push
push
push
call
add
filds
add
call
mov
andb
mov
add
add
lods
add
jno
test
push
add
imull
mov
add
imul
ljmp
mov
add
xchg
scas
scas
lods
in
in
mov
lcall
push
add
sub
lea
pop
pop
push
add
pop
leave
push
dec
pop
ret
push
push
push
push
push
lea
push
call
shrl
clc
add
add
add
test
aad
iret
add
push
mov
pop
add
add
push
push
shl
ror
pop
inc
cmp
jne
push
push
push
push
push
lea
push
lea
push
push
push
push
call
lds
pop
add
add
scas
mov
outsl
add
fwait
jb
mov
jbe
in
add
cmc
into
pop
lret
mov
fs
jae
movl
jmp
mov
mov
mov
add
add
addr16
add
mov
sub
pop
lea
push
push
push
push
lea
push
push
push
call
cwtl
add
add
add
add
add
add
add
xchg
jbe
stc
add
add
int
enter
enter
shl
loope
mov
loop
movb
add
add
int
loop
mov
add
push
lock
pop
mov
push
push
push
push
push
push
push
call
stos
push
add
add
push
rol
mov
add
mov
add
pop
in
neg
add
add
xchg
stos
mov
cmpsl
rolb
pop
insb
out
mov
add
add
hlt
mov
scas
pusha
jge
add
repnz
shlb
movsb
mov
lcall
in
test
add
add
cltd
sub
mov
outsb
push
lea
push
push
push
push
push
call
into
add
mov
add
mov
add
add
add
cmpsl
add
mov
add
incb
lahf
add
jmp
pop
enter
mov
sub
pop
mov
push
push
lea
push
push
push
push
push
push
call
loope
fiaddl
stos
imul
add
add
add
testl
mov
lret
test
movsb
lods
add
cld
pop
xchg
stc
add
icebp
call
add
ja
push
jne
mov
cmpsb
add
mov
sahf
rcrl
gs
add
lcall
movb
loopne
test
push
lea
push
push
call
xchg
shrl
mov
pop
test
add
add
lds
mov
mov
sub
pop
mov
test
je
push
xor
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
fsubs
add
leave
js
sarl
jbe
add
jmp
gs
push
cmc
add
imul
in
fdivr
lcall
roll
push
push
push
push
push
lea
push
lea
push
call
add
mov
scas
add
loope
les
jb
cmc
add
enter
iret
mov
jle
add
add
incb
jp
mov
data16
add
push
gs
xchg
jno
lds
fiaddl
je
xchg
add
movl
in
add
and
lret
add
jp
add
sub
pop
cmp
je
jmp
push
push
call
push
add
add
add
call
fs
add
fisttpll
mov
mov
repnz
add
push
mov
add
add
int3
mov
mov
jns
in
clc
pop
xor
push
not
rol
pop
pop
push
inc
add
ror
pop
pop
push
lea
pop
pop
push
sub
add
pop
pop
push
dec
add
pop
leave
push
push
push
call
lcall
leave
add
add
loope
lret
mov
mov
push
cli
mov
jle
add
pop
add
add
mov
add
add
stc
add
cld
fcompl
cwtl
add
cld
mov
sub
pop
ret
push
dec
shl
add
pop
lea
push
lea
push
push
push
push
call
loop
push
test
fldt
test
mov
into
roll
xchg
add
add
arpl
mov
insb
xchg
add
lods
add
xchg
lods
test
out
mov
mov
add
loop
add
out
push
rolb
xchg
jmp
pop
jbe
xchg
push
shl
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
call
lds
popa
add
mov
pop
jbe
jbe
jecxz
add
add
add
xchg
mov
cli
xchg
jmp
xlat
popl
jb
lret
jp
mov
mov
lret
rolb
mov
out
add
pushf
jnp
add
lcall
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
fwait
push
mov
jae
rolb
aam
add
xchg
push
add
in
jns
mov
add
add
jno
add
repnz
pop
pop
push
push
push
push
push
call
int
add
add
ljmp
out
mov
jecxz
xchg
add
add
cmc
mov
lcall
jne
add
les
add
add
cmpsl
add
add
sahf
pop
push
jle
push
add
add
push
mov
hlt
cmc
add
push
pushf
lock
pop
leave
push
push
push
push
push
lea
push
push
push
call
add
stc
add
add
cmpsl
ja
add
stc
mov
pop
mov
add
mov
pop
add
add
pop
pop
clc
lea
add
leave
xchg
add
lcall
or
push
push
lea
push
push
lea
push
push
push
push
call
add
add
push
jmp
jle
add
add
add
add
les
add
push
add
out
xlat
test
int3
popa
add
xchg
add
lods
mov
test
xchg
add
xchg
add
sub
pop
mov
push
push
push
call
popf
add
jo
add
add
add
mov
mov
add
in
jmp
mov
jge
jno
imul
into
add
into
mov
test
push
rolb
jge
add
add
add
mov
add
add
push
push
lea
push
call
add
add
arpl
popl
repnz
add
enter
mov
add
hlt
mov
mov
add
xchg
add
add
aad
mov
stc
add
add
out
mov
loope
add
add
imul
out
add
loope
mov
hlt
lcall
pop
push
push
lea
push
call
cli
add
push
jae
push
lretw
fisttpll
mov
add
add
gs
push
add
int
js
add
popa
faddl
push
add
dec
shl
add
pop
leave
ret
out
jl
iret
out
or
iret
jnp
iret
iret
out
mov
iret
iret
icebp
iret
iret
jno
iret
iret
popa
mov
iret
out
fmul
iret
out
iret
iret
iret
movb
iret
push
rorl
out
mov
in
divl
cmp
mov
fstl
dec
xchg
lret
shrb
orl
std
sub
aam
es
mov
pop
xchg
dec
testl
fwait
incb
pop
ficomps
fwait
inc
mov
pop
arpl
imul
loope
sbb
push
xor
mov
xchg
jl
jge
sbb
clc
js
mov
in
jnp
mov
xchg
xchg
arpl
and
fldt
sbb
dec
out
std
test
hlt
jbe
daa
mov
mov
xchg
lea
mov
dec
mov
sub
hlt
adc
popf
adcl
outsl
push
xchg
jmp
xor
ljmp
mov
pop
xor
or
jbe
sahf
cmc
sbb
aas
cmpsl
inc
fwait
jbe
cmpsb
addr16
iret
mov
les
mov
add
jno
inc
std
pop
dec
sbb
mov
or
jo
xrelease
adc
sbb
lea
mov
and
jne
add
jmp
fyl2xp1
cvtps2pi
mov
bound
popf
insl
or
rolb
mov
dec
ds
xor
dec
fcmovnb
add
in
mov
lock
fldl
ret
mov
push
xchg
addr16
data16
mov
ret
pop
fs
or
popf
popf
push
jecxz
ret
fstps
sub
xor
ljmp
jg
inc
shrl
dec
scas
xor
aam
aaa
fnsave
pop
adc
insb
dec
push
or
hlt
adc
jbe
dec
ret
cli
stos
in
ss
or
inc
dec
add
cmpsl
enter
jnp
inc
test
ja
into
in
ror
push
pop
adc
mov
aas
in
add
mov
mov
and
in
cmp
push
adc
or
sbbl
mov
rolb
out
out
outsl
out
adc
scas
in
inc
test
lods
xor
mov
cli
testl
lcall
push
dec
xchg
sbb
dec
push
int3
fcoms
lock
xlat
mov
jnp
sahf
test
shrl
inc
repz
popa
in
negb
pop
out
es
jne
dec
imull
add
and
add
xor
cmp
add
mov
adc
mov
cmpsb
in
xchg
sbb
add
insl
sbb
into
das
dec
test
sub
ja
xchg
pop
and
push
mov
push
sub
mov
add
out
add
adc
lret
lea
xchg
rol
push
icebp
enter
stos
or
adc
jecxz
jno
jno
sub
pop
addr16
sub
sbb
push
pop
clc
adc
imul
sbb
inc
add
inc
xlat
sbb
xchg
mov
and
mov
scas
and
pop
inc
cmp
lret
jb
jl
gs
mov
pop
js
leave
je
adc
mov
js
imul
adc
or
inc
loopne
push
rclb
mov
and
cld
leave
mov
mov
pop
push
jge
inc
imul
or
in
fistl
movsb
pushl
pop
xor
dec
cmp
dec
mov
dec
ret
enter
cmovbe
mov
mov
fmull
fsubp
push
loopne
mov
test
xlat
mov
mov
bound
leave
dec
in
movsb
push
pop
in
push
dec
jl
ds
push
xor
loopne
cmp
cmp
and
dec
mov
cmp
or
aas
sbb
add
insl
cmpsb
lods
xchg
cmp
aam
jbe
cmp
rcll
js
add
push
push
cwtl
sbb
pop
inc
and
cmp
mov
je
ds
pusha
inc
cwtl
cmpsb
test
jno
push
cmp
dec
jp
or
imul
lret
pop
in
adc
mov
sti
imul
jbe
rorb
push
movsb
popf
int3
in
inc
lods
mov
test
pop
or
jns
inc
inc
mov
push
add
add
lret
jbe
loope
shrl
lods
fbstp
aaa
mov
jbe
loop
jl
bswap
mov
out
mov
mov
orl
arpl
xchg
imul
int
pop
lret
mov
pop
jns
cmpsl
and
sbb
stos
push
jo
and
sarb
mov
mov
cmpl
aaa
push
sub
shlb
inc
and
push
pop
lods
ret
lea
cmp
sbb
addr16
pop
lret
inc
test
push
xchg
out
mov
cmp
int
jae
test
enter
jp
push
add
lret
sbb
sub
mov
movsb
mov
inc
fsubrp
mov
lock
inc
mov
jg
loop
stos
and
push
jae
leave
mov
subl
jmp
adc
adc
ret
xor
or
pop
dec
xor
xchg
lret
mov
and
ljmp
movsl
addr16
out
rcrl
movsb
mov
loope
retw
stc
sbb
test
or
ret
sahf
arpl
fisttps
sbb
mov
hlt
xor
dec
adc
cld
mov
lods
dec
sub
test
xor
stc
mov
pop
rclb
ror
fmull
lds
add
mov
cmp
pop
loop
sub
lea
inc
fldl2e
dec
gs
enter
test
mov
paddq
add
jge
pop
xchg
add
ja
or
push
in
cmp
inc
popf
fcoms
adc
inc
pusha
imul
aad
pop
imul
roll
and
lds
mov
lds
cmp
push
xor
sbb
cmc
hlt
pop
xor
out
sbb
fs
ret
je
jmp
test
outsb
loope
jmp
lret
fisttpl
imul
push
mov
mov
int
enter
bound
out
pop
adc
dec
add
lea
ljmp
stos
int3
pop
xlat
addr16
jnp
es
jl
js
xor
ret
dec
out
loopne
pop
xchg
ljmp
and
imulb
mov
cmp
lcall
fimuls
jmp
imul
adc
loope
pop
inc
scas
jnp
push
dec
or
jbe
cmc
jne
inc
dec
es
int
xchg
push
xchg
inc
ja
adc
cmp
sub
call
out
fdivrs
pop
pusha
mov
push
push
shll
subb
push
fdiv
mov
sbb
cmp
stc
xor
push
ljmp
cs
sti
xchg
mov
hlt
punpcklwd
out
cwtl
ror
xchg
sbb
lret
dec
jbe
jl
stc
outsb
bound
dec
cmp
adc
pop
mov
inc
fsubs
loope
hlt
das
pop
push
lds
fmuls
fldcw
inc
dec
pushf
rorl
mov
cmpsb
stos
data16
int3
in
pushf
cmp
xchg
lods
jns
cmpsb
sub
push
pop
pop
repz
mov
xchg
cld
cmp
mov
imul
jmp
out
or
aad
lock
mov
sub
clc
cmp
aad
jne
insb
mov
dec
shlb
iret
ret
popf
out
clc
add
dec
dec
mov
push
mov
mov
aad
lret
mov
xor
jno
ret
adc
xchg
jecxz
fbld
inc
xchg
les
jne
sahf
dec
inc
fcompl
xorb
fistps
xorl
mov
adc
loop
pop
inc
scas
in
jo
xor
xchg
in
and
insl
dec
insl
scas
data16
andl
or
stos
mov
inc
aas
push
mov
mov
aad
xlat
dec
repz
dec
imul
pop
mov
mov
or
jbe
jl
dec
dec
add
xlat
int
fwait
add
sbb
lret
jb
lret
fs
rclb
push
mov
mov
cmp
push
push
and
loopne
dec
add
xor
and
push
add
into
sahf
in
lea
xchg
imul
scas
mov
frstor
mov
insl
je
lret
mov
hlt
repnz
sub
in
jae
out
movsb
inc
in
in
sbb
idiv
fisubs
lahf
cwtl
pushw
sahf
jb
jae
mov
mov
cld
xor
int3
dec
popa
fmuls
inc
gs
add
sti
int3
incb
jge
mov
lds
pop
dec
inc
jnp
sbb
pop
insb
jae
push
js
jno
pop
xchg
jmp
cmc
and
test
dec
mov
fcomps
jmp
scas
gs
cli
mull
shlb
call
dec
sti
mov
cmp
roll
xchg
jp
imul
sub
dec
insb
dec
xchg
stc
ret
inc
inc
test
push
pop
sub
sub
pop
and
xor
jp
pushf
pop
cmp
push
ret
xlat
jnp
jne
mov
aaa
rcl
adc
dec
gs
int3
pop
mov
sbb
repz
lret
or
dec
add
sbb
xor
int3
adc
ja
fs
je
std
lods
test
mov
sub
pop
hlt
stc
pop
cli
data16
stos
mov
or
lods
dec
sbb
int
hlt
mov
imul
mov
push
xchg
push
inc
xchg
xchg
imul
call
inc
out
shrb
or
sub
sbbb
adc
mov
jge
pop
sbb
stos
cmpsb
sti
sbb
shll
inc
inc
mov
mov
pop
aaa
imul
call
call
or
pushf
add
bound
mov
push
aam
pop
loope
or
mov
stc
fcomip
pop
xchg
outsb
cs
lret
mov
mov
lods
adc
xchg
or
pop
sub
and
leave
in
inc
cli
roll
push
repnz
rcr
imul
jg
cmp
jnp
popf
stos
dec
pop
arpl
call
fmul
imul
jne
and
or
test
mov
lock
and
xor
das
fwait
arpl
lea
popf
mov
jg
push
clc
insl
inc
push
add
repz
sub
mov
mov
and
cld
arpl
addr16
cwtl
cmp
push
inc
jbe
insb
mov
mov
xchg
xchg
ss
adc
dec
fwait
gs
movsl
sbbb
aaa
or
outsb
movsb
mov
inc
xchg
mov
das
adc
lret
ret
mov
arpl
inc
mov
popl
push
xor
xchg
fnstsw
sar
add
dec
sarb
fs
or
out
stos
repnz
mov
push
mov
fcomps
inc
adc
enter
dec
xor
inc
std
jg
jmp
enter
xor
xchg
cmpl
loop
fcoms
pop
shrb
and
push
fcoms
test
lock
cmpsb
mov
mov
cmp
xchg
jbe
xorl
jnp
sahf
cltd
mov
or
fwait
pop
loop
or
or
hlt
fisttpll
clc
adc
into
cli
inc
or
gs
sub
inc
jl
jne
lret
jnp
mov
push
cmp
and
jg
out
out
pop
inc
mov
cmp
jb
sub
or
divl
addr16
inc
inc
ret
pop
andl
jge
sahf
shlb
loope
fildl
or
in
mov
ja
xchg
xor
xchg
in
push
aad
out
test
pop
push
fstpl
arpl
mov
or
rcll
mov
cs
jg
jmp
lsl
scas
lret
xlat
lods
jnp
xor
and
xor
divb
mov
push
rorb
pushf
lods
or
punpckldq
dec
sub
xor
bound
int
js
or
adc
scas
je
xor
mov
xor
xor
dec
cmc
sub
int3
hlt
mov
into
sub
mov
adc
push
loope
dec
je
aas
fldl
xchg
aas
and
jle
adc
clc
aam
lcall
or
inc
dec
cmp
pushf
xor
mov
into
fwait
dec
sbb
push
adc
cmp
sbb
pop
cmp
pop
and
outsl
es
ljmp
test
dec
movsb
out
add
cmp
cmp
std
repnz
push
pop
pop
and
into
xor
inc
lods
es
int
push
cwtl
data16
lock
mov
cwtl
mov
inc
cwtl
stos
dec
rcrb
loopne
les
addl
insb
cmp
add
adc
jecxz
inc
xor
push
mov
test
and
cltd
inc
mov
sbb
push
dec
adc
mov
addr16
subl
ds
xor
mov
sub
jno
jae
popa
push
cmpl
pop
inc
cli
xlat
mov
in
jns
arpl
hlt
outsl
mov
imul
mov
pop
andl
xchg
lods
ds
inc
rorl
sub
sub
mov
jg
insb
xchg
test
pop
lret
js
add
outsl
fs
stc
lds
pop
movsl
adc
negb
jbe
stos
sti
add
push
add
pop
or
repnz
arpl
gs
add
adc
dec
pushf
pop
leave
cmp
shll
dec
xchg
xor
cld
enter
insl
inc
push
and
lods
cmp
push
in
fsubrl
jmp
and
ja
cmp
cmp
xchg
mov
stc
outsb
mov
and
mov
dec
imul
push
jle
je
add
jg
inc
aas
cmc
loop
insb
cmp
repz
cmp
ds
test
mov
sbb
dec
xchg
shlb
xchg
cld
bnd
mov
nop
cmp
je
mov
sub
mov
dec
fs
outsb
jnp
test
push
imul
addr16
rcrl
aaa
or
outsl
or
cmp
mov
jl
pusha
inc
in
adc
jge
sub
cmpsb
sbb
mov
das
rorl
out
seta
dec
fstl
sbb
cltd
jmp
fsubp
pusha
jo
sub
enter
xchg
dec
enter
xor
loopne
orb
push
cmpsb
pop
int
pop
xchg
cmc
cmp
xchg
push
pop
xor
cs
push
cmp
and
dec
jecxz
and
aad
mov
dec
das
push
dec
test
mov
inc
pop
push
push
pop
cld
pop
jno
add
stos
insb
adc
pop
dec
adc
push
fwait
push
loop
jp
roll
sbb
jns
loop
lods
scas
jg
in
push
push
mov
cmp
and
inc
lds
lds
mov
dec
mov
fdivl
shlb
clc
and
pop
aam
cli
popf
iret
out
xchg
add
jnp
inc
push
ja
push
ds
fs
mov
sbb
dec
shlb
gs
xchg
ret
and
ret
mov
jg
sbbl
mov
mov
or
jae
std
nop
mov
ja
faddl
mov
shll
sbb
xor
add
clc
cmpsl
sub
jle
jo
mov
pop
pop
mov
pop
xor
add
movsb
jle
mov
movsb
cmp
mov
jl
cli
push
xchg
inc
mov
mov
int
fwait
imul
lds
sbb
pop
pop
sbb
fucomp
push
mov
or
cmp
ds
shrl
push
xchg
sbb
pusha
out
sbb
je
fwait
mulb
rcll
and
cwtl
mov
fildl
add
cld
in
cs
xor
or
pushf
in
push
clc
cmp
push
mov
in
in
cwtl
jp
mov
loope
rorb
lea
ds
aam
mov
mov
pop
cltd
adc
addb
jae
pop
sti
cmp
dec
aaa
mov
inc
in
jae
xor
mov
cmpsb
or
call
roll
xor
lcall
inc
mov
scas
ret
insb
jge
pop
jne
cmc
xchg
xor
movsl
test
data16
mov
lahf
jnp
loop
ds
out
adc
push
pop
pop
adc
push
std
je
push
push
in
sub
mov
pop
jnp
and
adc
out
jb
sti
stos
sbb
pusha
or
lods
arpl
loop
addr16
ss
lock
push
add
inc
cmp
mov
xchg
and
xor
xor
and
loop
ds
insb
jl
loope
xchg
jg
xchg
mov
lahf
aad
gs
xchg
xchg
bound
mov
jmp
leave
pop
mov
mov
repz
and
or
push
pop
xchg
xchg
pusha
cmpps
jge
pop
lret
xchg
pop
inc
xchg
mov
insl
xchg
push
pop
iret
mov
mov
fiadds
sti
dec
std
mov
and
pop
adc
inc
mov
out
cmpsl
ss
jmp
or
pop
movsl
pop
test
aaa
addr16
repz
pushf
sub
inc
mov
adc
bound
repz
das
mov
call
xchg
adc
pusha
negb
pushf
inc
fcoml
rol
jg
les
mov
mov
xor
call
andl
mov
dec
dec
add
jp
test
dec
adc
jne
pop
xchg
or
int
mov
mov
imul
inc
pop
imul
pop
push
ret
shrb
mov
or
clc
daa
xchg
push
mov
cmpsb
rol
add
mov
sub
jnp
test
and
push
cmp
pop
or
das
bound
sub
pop
ss
add
cmp
mov
into
les
das
sub
pushf
mov
add
dec
xor
jnp
mov
cmpb
jl
push
mov
mov
ljmp
insb
rcl
loopne
mov
cmp
pop
iret
movsl
sahf
inc
out
push
cs
mov
incl
and
fwait
adc
mov
les
push
lea
aad
pop
inc
fbstp
inc
sub
adc
lods
fmull
cmp
cmp
jge
dec
mov
flds
sub
jge
pusha
jae
xor
xchg
mov
aam
rcrl
sub
aaa
xor
mov
mov
out
lods
enter
mov
xor
loopne
cmp
popa
hlt
lahf
in
push
enter
xchg
outsl
add
mov
in
in
mov
sub
das
es
das
push
icebp
inc
adc
push
add
sahf
xchg
dec
xchg
xchg
loope
test
mov
test
outsb
in
jl
add
sub
inc
sbbb
dec
jbe
jmp
pop
bound
loop
cmp
inc
jae
data16
out
in
int3
xlat
add
orl
in
sub
fildl
in
jg
repz
imul
rorb
into
xchg
int
stos
jecxz
out
sub
cltd
add
fs
xchg
leave
lock
xlat
pop
mov
cltd
or
popf
pop
dec
lret
fwait
mov
aam
jns
ja
pop
sbb
ja
test
xor
and
stos
roll
daa
dec
sub
in
sbb
xor
push
jmp
pop
cmp
add
jl
mov
cmpsb
pop
lahf
jne
fnstenv
push
xor
pop
sub
outsb
js
jns
and
stos
or
lea
lahf
xor
pop
aas
mov
add
dec
into
gs
mov
test
sub
pop
mov
xor
int
xchg
fcoml
xor
int3
or
jbe
pop
xor
and
daa
or
cwtl
xor
and
mov
lahf
ret
pop
add
pop
dec
js
adc
sete
pop
pop
cmpsl
cmp
fldl2t
rorb
nop
sub
dec
in
push
sub
repz
sub
sub
xchg
mov
stos
movq
cmp
jnp
call
cmpsl
pop
and
andb
scas
imul
imul
nop
outsl
call
pusha
loopne
sub
in
rcl
adc
icebp
sub
sub
jp
and
gs
shll
jecxz
fstps
ror
jge
jb
cmp
adc
mov
daa
mov
shr
lods
movsl
hlt
and
or
xor
in
mov
fstp
iret
sub
mov
cmp
xchg
push
add
mov
inc
cmp
inc
jp
ja
cmp
shll
addb
sbb
xlat
inc
jg
imul
call
pop
iret
jg
mov
scas
pop
rolb
xchg
and
mov
pop
bound
add
cmp
ret
mov
pop
test
pop
shrb
test
icebp
add
and
mov
mov
shlb
or
or
adc
out
in
adc
jbe
out
xchg
jl
xor
js
test
cmp
ss
fwait
rcrl
sti
scas
pop
add
jmp
add
sbb
xchg
add
mov
xor
cmp
lea
cmp
cmp
push
pop
scas
nopl
or
xchg
cwtl
cld
dec
insb
cmp
xor
add
cmp
or
cld
push
orl
pop
pop
pop
rclb
mov
push
stos
jns
sub
push
add
push
repz
shlb
lret
xchg
mov
xchg
add
insl
mull
test
xchg
arpl
mov
stos
adc
cld
sub
test
jle
ret
cmp
pop
xor
out
or
pop
hlt
adc
pop
mov
es
cwtl
xor
jmp
push
ret
out
orl
sbb
pushf
pop
add
dec
sbb
dec
lret
out
out
enter
inc
jbe
inc
shll
aaa
loop
push
jne
std
sub
scas
mov
push
sbb
and
test
jae
scas
les
repz
data16
jle
outsl
int
adcb
cmp
pushf
push
adc
cmpsl
mov
roll
mov
mov
mov
lea
xlat
movsb
and
jg
fwait
scas
mov
mov
mov
int3
addb
scas
call
xor
cmp
sbb
or
leave
xchg
mov
xor
data16
cltd
jno
loope
sub
je
cld
out
fistpl
mov
mov
mov
cwtl
jmp
daa
lods
or
cmp
divl
clc
adc
in
inc
jl
or
fs
fiadds
cltd
aas
xchg
sub
inc
jge
or
shlb
fld
stos
fsubrl
xor
in
in
in
push
push
loope
sbb
ja
mov
dec
inc
jb
and
icebp
ficoml
lea
jb
arpl
int
in
fbld
cmpsb
add
lock
mov
out
insb
test
notb
mov
push
inc
or
lds
cwtl
dec
pusha
or
enter
aam
xchg
loop
or
mov
ljmp
call
test
push
in
pusha
pop
pop
decb
cld
adc
push
or
xchg
aad
pop
lahf
push
sub
inc
sarb
mov
xor
jae
test
sti
mov
jg
pop
xor
and
daa
xor
inc
sub
pop
dec
push
cwtl
lret
cmp
sbb
test
stc
pop
cmpsb
lcall
sub
vphsubbw
mov
push
xchg
jecxz
adc
push
icebp
cmp
pop
and
out
in
mov
mov
inc
push
and
ret
js
add
pop
fistpll
adc
insl
jmp
mov
outsb
add
or
mov
and
mov
notl
mov
js
add
xor
daa
sbb
pop
xor
imul
sub
push
mov
sbb
int3
popa
mov
mov
pushf
mov
rcll
xor
cmp
add
inc
iret
cmp
gs
mov
xchg
aad
xchg
xor
andb
mov
and
xor
fnstcw
push
xchg
and
popf
aas
xor
adc
movsb
pop
xor
movsl
leave
pop
cli
xor
repnz
hlt
daa
outsb
es
enter
pop
dec
push
mov
cs
icebp
cmc
stos
dec
push
pop
mov
sbb
pop
call
sub
jl
ss
push
loopne
int3
movl
mov
leave
insl
les
imul
mov
sbb
sub
xchg
sub
jmp
mov
fmuls
scas
mov
test
pop
out
stos
cmp
push
sbb
mov
jl
cmp
lahf
inc
add
xlat
ret
xchg
cmp
lcall
outsb
xchg
in
push
loope
popf
mov
push
aas
ret
enter
lods
mov
push
mov
mov
dec
loopne
xchg
jb
xchg
js
mov
outsl
jl
int
lret
mov
mov
xor
mov
or
out
or
mov
jno
push
cmc
or
cmp
int3
test
pop
pushw
inc
test
mov
ja
adc
jo
aam
stos
lods
lods
fstl
xchg
into
mov
adcb
jns
pop
movsl
pop
lock
jne
inc
in
lds
mov
bound
aam
inc
hlt
cmp
in
cld
dec
sub
pop
je
std
inc
fs
aad
repz
xor
xor
push
push
jne
xor
gs
and
mov
cmp
push
hlt
add
push
shll
das
and
mov
sub
adc
in
adc
repnz
movsl
lahf
sahf
sarb
jae
adc
jge
rep
rcrl
sarl
cmp
cmp
sti
sbb
testb
fadd
add
hlt
pop
shrl
inc
iret
imul
mov
hlt
fstpt
jnp
mov
test
test
repnz
inc
outsb
dec
aas
das
arpl
jae
mov
imul
or
loop
cs
repnz
or
mov
mov
jno
push
mov
inc
lret
sbb
fnstsw
out
xor
xchg
lret
sub
cmp
dec
aas
inc
ret
mov
movsl
ret
pop
add
mov
sbb
out
dec
dec
leave
loop
dec
sbb
add
or
ret
inc
mov
ret
mov
pop
xchg
mov
jl
dec
dec
clc
test
fsubrp
and
push
dec
cmp
leave
add
mov
xor
mov
cli
fs
orl
cltd
test
push
and
shll
mov
push
fiadds
js
sbb
pop
lods
adcl
pop
and
push
jp
cs
faddp
es
shll
aaa
push
call
pop
mov
pop
or
xchg
mov
js
outsb
ret
fs
mov
cmpb
pop
xchg
jae
pop
xchg
xchg
insb
sbb
std
pop
mov
sahf
pop
mov
inc
pop
into
xchg
lcall
mov
mov
push
sti
add
minps
int
loope
sbb
xor
xor
mov
inc
mov
or
add
insl
out
pushf
pushf
ss
sbb
mov
jle
xchg
cld
push
cwtl
pusha
adcb
pop
mov
pop
mov
jae
add
outsb
out
adc
xchg
adc
push
push
jne
pop
cmp
stos
lcall
popa
push
pop
lea
lret
daa
and
lret
mov
orl
testl
jle
movsl
dec
and
bnd
and
iret
sub
andb
and
adc
movl
jo
jae
aas
in
roll
ja
scas
pop
add
sbb
mov
outsl
clc
cmp
ja
mov
sbb
stc
lret
pop
sub
insl
sbb
test
jno
jne
leave
mov
jmp
add
adc
cmovl
jmp
sub
mov
pusha
stos
insl
and
sbb
mov
icebp
arpl
daa
jle
jmp
mov
jge
and
mov
mov
mov
push
xchg
cmp
movsl
cmpsb
push
adc
dec
cmp
iret
movsb
or
adc
bound
cmp
fisttpl
hlt
dec
movb
jl
mov
mov
fcmovnbe
and
jp
call
inc
cmp
rol
pop
lods
cltd
pop
std
es
pop
mov
ds
mov
imul
std
jne
mov
out
sahf
xchg
cmp
imul
adc
xchg
or
movmskps
add
std
jmp
sub
imul
jecxz
inc
call
sahf
xchg
out
xchg
cmp
call
enter
xor
mov
pop
ret
adc
shlb
inc
int3
jge
fidivl
out
push
lahf
mov
cli
pop
in
jecxz
js
in
hlt
ljmp
test
and
cmp
stc
xchg
sbb
mov
jae
or
rclb
add
pop
add
aaa
fnstsw
cltd
rcrb
ret
xor
and
int
in
cmp
dec
sbb
sub
pop
imul
bound
pop
rcl
test
sti
pop
rorb
arpl
cmp
inc
je
mov
mov
mov
fdivrs
scas
inc
in
jmp
into
or
adc
add
icebp
rcrb
dec
xchg
jg
mov
insl
inc
ds
loope
pushf
jns
fs
jmp
gs
jnp
xor
cli
jecxz
loope
jecxz
jg
shlb
sarb
pop
jns
cmp
jne
cmp
popa
mov
fbstp
add
cld
jnp
jnp
mov
adcl
icebp
out
mov
sbb
mov
adc
stos
jmp
mov
jo
hlt
cld
mov
insl
aad
in
add
sbb
cmp
fcompl
lahf
mov
ret
add
mov
jg
mov
sbb
cmp
andb
test
das
sbb
and
pop
bound
dec
arpl
icebp
sbb
or
mov
je
lock
pop
fistps
pop
enter
push
mov
add
lods
inc
lock
cmp
movsb
cs
mov
dec
arpl
xor
ljmp
mov
jl
out
cmp
and
in
mov
cmc
mov
sti
in
or
clc
or
jne
insb
pop
push
int
xlat
insb
insb
inc
shll
int3
rcrb
loop
lret
cltd
xor
sbb
cmc
adc
adc
xchg
icebp
add
call
dec
daa
cltd
pop
sbb
jo
mov
sldt
or
shlb
ds
aaa
bound
sbb
arpl
shl
inc
cmp
sub
push
mov
outsb
inc
sbb
in
imul
sti
push
mov
inc
iret
cmp
nop
mov
rorl
iret
push
adc
adc
dec
pop
add
push
mov
aaa
inc
jns
jne
dec
nop
rolb
or
jns
xor
outsb
sbb
or
jne
xchg
inc
lods
dec
pop
push
pop
cmp
bound
mov
cmp
ljmp
insb
hlt
add
in
fildl
popf
dec
out
adc
sub
add
xchg
add
aad
push
mov
mov
ja
cmpsl
dec
xor
sti
andb
stc
add
add
pop
push
insb
sbb
imul
out
stos
dec
push
push
imul
ja
push
add
push
jbe
mov
and
jbe
xor
je
xlat
nop
push
sbb
repnz
mov
push
lods
inc
nop
and
mov
xor
mov
or
stc
pop
dec
outsl
aaa
cmp
pop
hlt
int3
sbb
cmp
data16
mov
push
ret
xchg
adc
pop
jle
lahf
sub
or
adc
je
int
xor
inc
mov
sbb
cmp
lds
leave
xchg
in
arpl
xchg
and
mov
fadds
mov
mov
push
repnz
sbb
sub
jns
stos
test
clc
inc
out
movsl
adc
sub
outsb
xor
lcall
inc
push
pop
sbb
sbb
ljmp
push
mov
lds
dec
xchg
ljmp
aad
cmp
add
sbb
repz
sub
fs
cli
cltd
inc
std
fmulp
pop
loopne
sub
cmp
out
add
pop
and
orl
mov
cmp
push
mov
mov
dec
mov
pop
mov
js
int3
xchg
hlt
push
dec
je
fisubrs
jnp
jl
mov
ja
adc
cmpsl
icebp
push
insb
incl
cltd
cmp
lret
or
les
sti
cmc
insl
add
mov
test
insl
idiv
fucomip
mov
hlt
test
add
jecxz
push
dec
fcomp
cmpsb
mov
mov
and
dec
add
add
je
cmp
cs
ljmp
out
lea
subl
inc
repnz
push
adc
ss
push
in
ds
repnz
lea
xchg
xor
mov
sbbb
pop
roll
rol
xchg
ljmp
jae
rcr
repnz
xor
sub
xor
int
and
add
add
and
out
stos
mov
mov
mov
pop
mov
out
push
xor
and
test
ss
outsb
mov
mov
movsl
push
push
sbb
lahf
push
cmp
stc
pop
mov
inc
insb
inc
sahf
jge
mov
adc
sbb
sub
adc
out
pop
sar
pop
xchg
mov
or
mov
es
push
mov
pop
aas
pusha
push
push
fisubl
fwait
repnz
int3
pushl
mov
lcall
mov
jmp
fildl
pop
and
inc
and
and
mov
bound
cmp
mov
gs
pop
mov
stc
dec
movsb
dec
jle
in
or
add
add
fisubl
jecxz
enter
jae
push
andb
push
xor
mov
rclb
xor
daa
and
ret
mov
xchg
sahf
in
mov
fstps
adc
int
dec
cmp
jecxz
mov
cmp
cmpl
fldl
mov
inc
and
or
xchg
jne
push
add
repnz
inc
xchg
fcomip
fistps
sbb
push
test
xlat
push
inc
cmp
xorl
in
imul
jg
outsl
or
subb
or
pop
dec
lcall
call
call
loopne
cmp
and
cmp
stos
xor
aam
or
inc
pusha
aaa
dec
nop
sbb
jl
inc
dec
fadd
mov
out
mov
cmp
dec
ss
and
mov
movsb
jmp
test
loopne
movsb
jle
push
jp
push
test
mov
sub
test
cmp
xor
xchg
mov
mov
mov
ss
divl
dec
lea
outsl
xchg
es
pop
popa
pop
mov
xadd
sub
inc
adc
popa
mov
jge
test
mov
xor
sbb
sahf
loope
pop
invd
xor
push
mov
mov
pushf
jo
jo
test
xchg
iret
xor
incb
test
into
jo
adc
add
mov
sti
or
inc
sbb
mov
xchg
xchg
jge
test
or
bound
xor
jns
jmp
dec
or
xchg
mov
cmp
mov
xchg
in
ret
frstor
loope
fs
xchg
arpl
filds
cmp
test
add
gs
jb
flds
and
js
or
int
cmpsl
es
inc
ret
or
jecxz
sub
xchg
loop
inc
outsb
sub
fldcw
jno
mov
pop
add
push
mov
imul
sub
test
sub
inc
jp
in
in
mov
testl
push
adc
sbb
cmp
or
pop
fwait
pop
pop
out
fiaddl
fld
bound
insb
lahf
add
mov
adc
and
push
imul
scas
scas
pop
int3
ljmp
xchg
lret
xchg
mov
cmp
mov
add
add
outsb
inc
mov
sbb
daa
pop
mov
xchg
xor
xchg
lret
dec
pop
inc
jecxz
mov
cmp
jecxz
push
cmp
inc
pusha
xchg
andl
add
jge
subl
pop
xor
push
push
enter
dec
lcall
pop
mov
pop
dec
adc
jecxz
cmp
dec
cmpsl
sbb
pop
movsl
cli
jbe
test
xchg
mov
mov
fists
add
mov
or
adc
aad
xor
fiaddl
mov
lods
adc
mov
xlat
cmp
sarb
mov
repnz
imul
sbb
incb
je
mov
jp
jg
mov
push
mov
sbb
test
andl
lcall
cmp
jmp
lock
adc
shll
faddl
xchg
mov
sti
out
data16
repnz
scas
mov
shr
xor
dec
gs
into
dec
fdiv
test
lret
dec
fimull
jnp
sub
out
subb
or
lds
cmpl
xlat
xlat
mov
lret
lahf
or
pop
ds
repnz
mov
xor
in
js
jl
jae
xor
scas
mov
sbb
add
pop
inc
inc
sbb
sub
xor
add
xor
mov
dec
jp
test
mov
dec
sarl
push
test
adc
mov
mov
mov
jno
inc
mov
or
mov
fcmove
test
outsb
ljmp
jmp
xor
mov
mov
test
out
call
dec
aas
aaa
push
int
mov
xor
push
outsb
fwait
xor
andl
out
sub
pop
jmp
lcall
adc
pop
xchg
sub
rcrl
xor
in
and
and
and
sub
push
mov
jns
sbb
leave
jmp
negl
lods
jmp
dec
xchg
frstor
sub
gs
sbb
push
lods
push
jae
gs
andl
je
fldl
enter
cmp
mov
sub
sbb
or
xchg
jl
sub
mov
jb
inc
push
pop
repnz
in
dec
cmc
cli
cmp
pop
cmp
idivl
sbbb
cmp
sub
bound
out
pop
lahf
cmp
in
std
stos
mov
mov
cmp
mov
pop
aas
adc
sbb
sub
add
dec
jb
cmpsb
int3
aad
shlb
lret
sub
pop
cmp
push
nop
dec
xor
jbe
aam
test
pop
cmp
pop
push
sub
daa
insb
mov
jb
push
lret
fcoml
sbb
shll
sub
xchg
sub
out
push
cmpsl
cmpsl
fdiv
ret
test
fcomps
xchg
int3
mov
xchg
ret
out
sub
mov
sti
out
sbb
mov
jl
movsl
mov
hlt
push
push
pop
clc
repz
test
jnp
mov
andl
adcb
subb
in
mov
dec
add
push
cmc
push
jl
ljmp
sbb
xchg
push
scas
xor
add
xchg
out
mov
cmp
add
iret
dec
pop
sarb
mov
imul
ret
push
pushf
in
lock
fiaddl
outsl
ds
fists
gs
and
inc
pop
jo
mov
lock
mov
push
sbb
out
das
stc
mov
push
sahf
and
aam
adc
cmp
xchg
jmp
xorb
cmp
mov
int3
pop
andb
cmpsl
mov
lds
lods
push
add
dec
dec
and
rcl
dec
popl
jmp
inc
fidivrl
push
mov
mov
pop
or
pushw
cmp
getsec
xlat
add
ss
push
pop
jno
fcmovnbe
mov
and
mov
cmpsl
fwait
js
xchg
sbb
and
mov
ret
popf
loop
fs
sub
mov
gs
loopne
std
sub
sub
arpl
imul
fucomip
into
add
cli
pop
and
and
add
pop
stos
out
mov
jmp
dec
xchg
sub
xor
lea
test
and
icebp
xchg
incb
orb
sbb
sbbl
sub
clc
add
popf
sarl
xchg
adc
and
xor
into
jb
push
divb
jle
out
xchg
inc
cmp
stos
lret
inc
lods
add
out
in
out
orb
cmc
stc
xor
mov
in
push
jae
repnz
sub
scas
js
add
gs
test
scas
jl
mov
jp
out
repnz
fadd
andl
push
sub
lret
test
jo
faddl
mov
imul
mov
pop
and
lods
xchg
push
data16
rcrb
ficomps
aaa
add
pop
or
push
sbb
sarb
adc
loope
sub
fwait
cs
cmp
pop
jecxz
faddl
xorb
outsb
dec
out
jb
stos
push
jno
ficoms
push
jmp
and
clc
hlt
pushl
push
fidivl
inc
ss
insb
push
jns
or
outsb
or
sbb
fcoms
inc
mov
lahf
inc
popa
rolb
orb
sub
test
movsl
dec
inc
int
xchg
jne
jmp
cmp
cltd
xchg
test
into
jge
mov
les
mov
hlt
dec
daa
out
jnp
popf
fnstcw
cmp
repz
insb
mov
adc
dec
data16
subb
jns
pusha
inc
sub
mov
and
jmp
arpl
add
cld
jecxz
dec
fucomi
dec
arpl
and
push
push
sub
sbb
in
lret
or
inc
addr16
dec
test
mov
mov
rorb
mov
imul
xor
xchg
lock
js
xchg
adc
imul
cli
or
mov
cli
pusha
ljmp
repz
popf
movsb
out
add
in
jns
xchg
xor
ja
ja
std
ds
mov
push
cmp
imul
jbe
pop
test
xchg
loope
rcrl
jne
or
roll
mov
push
popa
es
sub
xchg
std
sbb
das
inc
push
cmpb
scas
movapd
xchg
cwtl
sub
sbb
dec
insl
or
and
xor
cwtl
sbb
sbb
adc
cs
lret
xchg
fiaddl
mov
out
sbbb
lds
movsb
mov
clc
fbld
pop
adc
jno
out
bound
addb
fnstsw
sbb
filds
jae
sarl
outsl
sbb
xor
jno
clc
ret
repz
sar
lea
aaa
cmc
cltd
fldt
sbb
xchg
mov
loope
movsb
mov
add
popa
les
xlat
inc
movsl
or
fcmovnu
push
mov
aad
cmpsb
adc
sub
leave
dec
add
std
dec
mov
lds
lret
adc
mov
js
dec
mov
adc
rcl
aas
push
popa
out
xorb
cmp
mov
aaa
mov
fisubl
and
jnp
movsb
std
out
adc
cmp
xchg
cmpsb
cmp
adc
add
and
arpl
fstl
mov
inc
xor
jecxz
sar
inc
fwait
push
or
xchg
sti
push
adc
arpl
or
xor
cltd
xchg
data16
cmp
rclb
jle
xor
push
mov
jbe
mov
fildl
mov
stos
mov
push
gs
arpl
jecxz
push
pop
xchg
outsb
iret
add
fwait
hlt
cmp
jo
data16
adc
sahf
out
stos
jl
jns
inc
inc
jle
push
dec
in
nop
xchg
mov
push
loopne
in
filds
xor
and
lock
shl
add
mov
cmp
sub
add
fsubl
sub
daa
add
lret
inc
outsl
lds
pop
sub
pop
and
loope
shlb
adc
inc
xlat
cmp
call
daa
fwait
imul
sbb
xchg
adc
push
cld
out
jns
push
sbb
incb
aas
sarl
and
cmpsb
data16
scas
mov
jge
negl
adc
jmp
popa
sub
inc
test
jg
popa
sub
mov
mov
arpl
sarl
cs
cmp
push
ficoms
pop
inc
loop
pop
push
or
push
or
cmp
sub
call
sub
clc
dec
in
scas
jl
jae
es
inc
ret
pop
or
pop
into
xor
inc
cltd
mov
mov
ret
mov
cmp
out
test
inc
push
cmp
xorb
stos
into
ret
push
add
fstpt
sub
sub
cwtl
dec
bnd
nop
mov
fadd
xchg
lret
push
addr16
clc
lods
sub
jg
pop
dec
sub
push
jo
mov
xchg
cs
adc
fildll
fdivrp
fistpl
mov
fwait
push
enter
loopne
dec
adc
push
cmpsl
jl
sahf
mov
adc
out
outsl
xor
inc
dec
or
out
mov
cli
jle
sub
sbb
leave
mov
addl
insl
dec
decb
sub
and
pop
pop
xchg
addr16
dec
or
inc
jle
inc
pop
decb
lcall
inc
sub
call
scas
std
mov
sbb
sahf
movhps
shll
push
jmp
cmp
int3
pop
lds
inc
stos
pop
mov
dec
jb
push
hlt
lds
test
insb
loope
xor
fmuls
pop
cld
pop
nop
mov
cmp
cmp
add
add
dec
sti
aaa
outsb
push
fs
rorl
adc
aam
mov
insl
test
dec
inc
adcb
in
enter
sub
push
and
cwtl
adc
pop
xchg
jno
pop
cmp
pop
inc
mov
fstp
adc
pushf
add
mov
sub
jo
dec
adc
out
dec
mov
in
pop
lcall
punpckhdq
jmp
fcoms
ljmp
xor
out
test
mov
je
xlat
fdivl
std
jmp
iret
roll
nop
mov
test
jb
pushf
ljmp
ret
sbb
aaa
pop
mov
js
sub
add
cli
adc
movsb
cmp
mov
ja
pop
lcall
xchg
adc
out
mov
arpl
mov
fistl
hlt
cmp
jnp
xchg
pop
hlt
cmp
jle
js
sub
or
fstpt
mov
int3
test
std
mov
inc
pop
lcall
add
sbb
iret
int
loopne
lods
hlt
jae
push
sbb
lock
push
int
push
add
fmull
shr
insb
sbb
xchg
popa
pop
mov
inc
ljmp
or
push
xor
sbb
sarl
push
xchg
dec
icebp
sbb
ror
loop
dec
loop
or
add
xor
ss
adc
fwait
inc
das
adc
ror
push
dec
or
xchg
frstor
mov
bound
popa
adc
adc
pusha
adc
push
or
jle
sti
mov
popa
shll
and
adc
add
mov
arpl
add
jmp
mov
ljmp
or
sbb
in
inc
xor
adc
pop
in
fmul
cmp
xor
adc
dec
mov
push
jge
sbb
mov
inc
inc
xchg
xor
mov
cli
push
or
xor
ds
mov
loope
ret
pop
test
jp
ss
loope
add
test
mov
xor
aam
sbb
jmp
xchg
in
sbb
mov
pop
aam
cmp
repnz
negl
or
fcoms
das
and
clc
mov
pop
add
fistpl
mov
fistpl
adc
addr16
xchg
fwait
dec
outsb
gs
mov
xchg
nop
sub
sbb
dec
lcall
mov
out
xor
jle
loope
faddl
mov
cmp
lahf
pop
out
inc
or
mov
jns
dec
jg
mov
dec
das
movsb
lret
cwtl
xchg
aas
adc
mov
add
push
push
pop
jmp
or
sub
push
lahf
sahf
fcoms
mov
push
or
cmc
mov
test
push
xchg
xlat
mov
cmpsb
ror
loop
mov
mov
add
mov
xor
add
ret
mov
bndldx
cmpsb
mov
fwait
jle
rorl
loop
call
and
out
add
iret
mov
in
jmp
add
leave
lret
xchg
cmp
mov
pop
fcompl
ret
rep
fs
xor
cmp
mov
loop
push
int3
fadds
or
xchg
push
jmp
call
je
and
sti
popa
pcmpgtd
sub
dec
mov
cmc
aaa
ljmp
push
cmpsb
mov
iret
test
fcmovu
hlt
fucomp
xchg
mov
insl
cmp
fnstenv
aas
icebp
pop
mov
mov
sub
push
test
cmp
cmp
adc
inc
lods
mov
repnz
xor
sub
mov
insl
imul
movsl
mov
jecxz
sbb
ss
lds
test
out
and
mov
inc
cld
xchg
jge
push
cmc
outsl
lret
movsb
aas
jo
mov
and
ret
sub
fst
out
inc
pop
mov
push
or
sub
loopne
pop
pop
adc
jle
sbb
cmp
cli
jle
je
push
sub
cmp
aam
fsqrt
outsl
cmp
and
jp
cmp
push
test
leave
mov
jnp
fcomps
insb
insl
rol
lret
pop
mov
test
push
jl
pushf
xchg
sti
jle
push
or
int
es
cmovno
dec
sbb
jge
pop
shrl
mov
aaa
sbb
icebp
rorl
outsb
push
jne
les
adc
movsb
scas
popf
xchg
push
dec
mov
add
and
dec
mov
stc
push
pop
insl
rorl
mov
pop
jnp
inc
fdivrl
data16
loop
inc
inc
cmp
ss
push
mov
xchg
sub
inc
mov
cmc
jge
cli
dec
fistpll
repz
lcall
jne
xchg
lahf
out
mov
or
sbb
jl
imul
pushf
push
test
fdivrs
fidivl
inc
int
lods
test
test
scas
outsb
dec
or
add
cmp
mov
jl
arpl
sub
adc
xchg
xor
push
xor
jnp
movsl
mov
mulb
bound
imul
cmpsb
pop
pop
adc
and
jnp
mov
rcll
out
add
out
mov
rclb
inc
xchg
mov
and
insb
adc
lahf
push
inc
roll
jle
dec
std
popa
mov
jnp
jnp
jnp
insb
mov
mov
mov
sahf
mov
data16
aad
push
mov
mov
test
inc
aam
ljmp
inc
ss
dec
and
sub
pop
pushf
pop
insl
cmp
or
cmpsl
mov
adc
mov
lea
xchg
fisubl
cwtl
xchg
sbb
insb
push
arpl
jae
jo
popf
test
xchg
and
cmp
les
xchg
push
ljmp
xor
les
daa
cmp
leave
loop
jne
imul
cmp
fstps
xchg
imul
sub
cld
xor
out
cmp
lods
or
faddp
mov
fs
or
xchg
cli
xlat
adc
push
sbb
dec
movsb
insl
ret
dec
jp
mov
mov
xchg
clc
inc
icebp
test
or
sbb
dec
ljmp
xchg
loope
daa
into
push
xchg
pop
lock
subl
les
mov
xchg
add
push
test
mov
cltd
sti
sbb
mov
jne
inc
aad
pop
shrl
cmpsb
push
sbb
fldl
decl
push
test
sbb
and
js
aas
fcompl
inc
dec
dec
leave
aaa
ret
xor
mov
insb
lods
or
sbb
cmp
icebp
repz
mov
iret
inc
push
mov
dec
push
adc
vpmadcswd
dec
jbe
sub
add
sbb
mov
cs
sub
inc
jno
test
push
inc
xchg
mov
shlb
xlat
aad
cmp
mov
push
lea
mov
dec
movsb
enter
adc
inc
insb
mov
dec
mov
int3
xor
or
mov
inc
and
fcmovb
mov
jnp
sbb
dec
je
loop
test
mov
mov
and
sbb
jmp
dec
rorl
jae
dec
jmp
pop
push
push
jmp
enter
aaa
jge
in
stc
stc
outsb
and
mov
int
inc
js
and
fcoms
insl
ja
or
sti
xor
hlt
test
mov
dec
adc
jnp
pop
mov
pop
jno
jo
stos
and
repz
sub
inc
sahf
vinsertps
adc
jne
mov
ret
mov
arpl
movaps
or
mov
jge
addl
mov
shl
mov
icebp
pop
inc
aas
and
lret
xchg
fsts
cmp
dec
inc
jae,pn
push
push
sbb
pop
pop
lret
rorl
ret
sub
dec
ljmp
cld
cmpsb
dec
in
enter
lds
add
mov
jge
adc
mov
mov
leave
pop
aam
pop
addb
sarl
xchg
push
sbb
in
repz
inc
push
iret
inc
lods
cmp
pop
stos
shlb
cwtl
clc
leave
dec
lea
push
testb
mov
sbb
arpl
sahf
stc
jns
mov
imul
xor
and
cmp
int
insl
xor
mov
lcall
cltd
fiaddl
inc
ljmp
xchg
jmp
push
xlat
push
enter
and
out
sub
mov
in
xchg
jb
repnz
dec
and
movsl
mov
jnp
add
ror
xchg
testl
adc
or
inc
daa
inc
or
loopne
repnz
addr16
aaa
adc
ret
out
stos
or
outsb
repnz
dec
pop
inc
add
dec
cmp
dec
clc
xchg
lret
xchg
mov
aaa
mov
enter
push
sub
xor
loop
test
sbb
outsl
ljmp
jo
cmp
xor
xor
test
not
imul
clc
push
sahf
mov
lahf
daa
lods
dec
lret
mov
rorb
jb
aad
xchg
add
lcall
dec
jecxz
packsswb
sub
sub
and
jne
outsl
jle
mov
pop
pop
mov
shr
lret
fisttpl
mov
ljmp
movsl
ret
dec
xlat
inc
enter
jae
fldl2e
cmp
inc
add
mov
dec
xchg
sbb
and
jnp
mov
pop
cli
pushf
adc
adc
icebp
mov
jl
pusha
in
pop
into
cltd
bound
dec
in
jne
sbb
mov
inc
jg
out
jl
mov
mov
sub
imul
stos
and
jge
or
or
ret
sub
test
fsubp
xchg
cmp
daa
or
or
popf
inc
jle
leave
nop
adc
jno
mov
and
daa
adc
out
repnz
pop
xchg
cmp
notb
and
jg
fistps
push
lods
jnp
cmpsl
push
mov
outsl
sti
dec
aas
push
mov
aad
lret
dec
repnz
loope
add
scas
mov
inc
outsl
inc
mov
xchg
out
xor
xchg
or
loopne
pushf
add
out
dec
jle
ljmp
fbstp
mov
loop
jno
fsubl
lods
prefetch
or
sub
lea
push
lods
movsl
and
add
xlat
adc
inc
adc
into
xor
rclb
sub
outsb
imul
xorl
mov
lock
cmp
mov
add
loop
leave
int3
fldl
sub
xor
and
lds
rcrb
imul
in
inc
mov
xchg
sbb
lods
je
dec
mov
ret
out
push
dec
insl
jns
fwait
test
addb
xor
int3
fmull
cmp
push
xchg
clc
outsb
daa
dec
jbe
jns
stos
sarb
add
cmp
sbb
or
addb
xchg
inc
dec
fnsave
jmp
jge
dec
out
add
xor
xchg
js
enter
xor
push
xlat
cmp
push
inc
sbb
push
aaa
xor
fidivs
insl
or
scas
icebp
lods
mov
movsb
and
addr16
leave
stos
jb
and
cmp
movsb
jns
mov
jb
aad
fcomps
ret
addr16
push
mov
dec
sahf
lahf
inc
mov
sti
mov
popf
or
dec
ds
int
scas
or
or
dec
xchg
cli
mov
arpl
dec
bound
test
mov
es
sbb
xchg
xchg
in
lea
icebp
cmp
mov
and
pop
adc
ja
mov
iret
test
push
jl
int
adcb
inc
sbbl
stos
add
inc
loopne
scas
push
adc
push
xor
stos
nop
cs
pop
push
and
add
sub
imul
add
mov
push
dec
std
movsl
lods
stos
sti
inc
mov
xchg
int
or
enter
rcrb
mov
jae
jl
push
jnp
sub
xor
adc
pop
cli
add
bound
jae
rcrb
sub
xor
repz
rcr
sub
push
jg
pop
push
mov
addr16
sahf
adc
push
rcr
push
sbb
jle
inc
pop
mov
movsl
sahf
ret
jg
je
addl
dec
xor
sti
mov
xchg
das
or
push
mulb
push
jnp
ror
sbbb
adc
push
dec
push
push
xlat
adc
cli
clc
ss
cmpsl
pop
fistpl
jns
fmuls
and
push
xor
add
and
push
add
mov
je
dec
testl
into
xchg
jo
and
dec
pusha
scas
mov
pop
xchg
in
jmp
clc
out
dec
int3
pop
hlt
shrl
sbb
cli
and
adc
push
int3
clc
xor
mov
sbb
inc
divb
cwtl
popf
daa
das
lea
arpl
dec
fcmovb
jecxz
mov
xchg
dec
jle
imul
sahf
nop
inc
ret
in
xchg
enter
daa
inc
jae
lahf
test
sub
xchg
enter
pop
and
ss
in
add
enter
dec
and
ja
pop
shll
addr16
and
jno
fistpl
rclb
lret
es
or
sub
mov
lret
jns
shrl
in
mov
inc
or
stos
stc
cmp
dec
mov
int
add
pop
inc
pop
pop
inc
xor
lock
popf
mov
pop
cltd
inc
lock
int3
insb
ss
lcall
pop
push
addb
int
nop
std
shr
mov
lret
mov
ds
xchg
adc
cmp
jle
imul
sbb
into
sub
es
sbb
pusha
xor
ja
mov
jae
mov
ja
btr
xchg
in
inc
test
cmpb
push
pusha
aam
jbe
jnp
or
mov
add
cmc
add
ret
sub
insb
bound
insl
adc
das
jbe
in
fcmovb
popa
dec
mov
push
sub
xor
movlps
arpl
adc
jne
hlt
pop
cmp
jp
mov
xchg
std
fnsetpm(287
lahf
and
rcrb
shll
subps
pusha
add
mov
cmc
jne
jmp
add
add
xor
mov
cmp
nop
jle
mov
es
cmp
into
ljmp
adc
sbb
push
mov
jecxz
jl
xor
add
xchg
test
push
dec
mov
movsl
rcrb
test
andl
push
mov
fwait
push
xchg
fwait
int3
lret
fwait
pusha
iret
jno
jmp
mov
pop
add
mov
push
add
in
sub
out
mov
xchg
lock
clc
js
lcall
in
sahf
sub
insb
inc
gs
fcomps
pop
fstl
mov
mov
mov
cmp
pushf
out
sbb
out
std
ds
mov
cli
pop
sub
inc
out
jns
add
negl
mov
cmp
cli
push
ret
ret
sub
jle
fnstenv
and
movlps
sbb
xchg
cmpsl
sub
add
loopne
cltd
sbb
xchg
inc
loopne
xor
dec
xchg
inc
dec
inc
iret
das
pop
cwtl
sbbl
ret
imul
adc
jno
test
inc
xchg
sub
add
xchg
or
adc
stos
add
push
xlat
pop
add
flds
fs
push
adc
jns
mov
mov
adc
dec
adc
xchg
dec
mov
inc
iret
dec
stos
dec
insb
movsb
push
das
push
cmp
sub
jns
jl
jecxz
fsub
pop
pop
stos
xchg
cli
mov
push
jno
sbb
add
pop
jae
xchg
popa
inc
in
scas
pop
push
out
fdivs
or
mov
mov
inc
cmovbe
push
clc
mov
sahf
cltd
pop
dec
cmp
data16
cld
in
stos
jo
fistl
dec
xlat
out
in
xor
test
aad
cld
cmp
loopne
add
je
mov
gs
lahf
pusha
fildl
jecxz
push
mov
adc
pop
ljmp
mov
aad
cmp
lahf
pushf
das
mov
adc
outsb
mov
js
sbb
sub
cli
xor
xor
pop
cmp
clc
jb
movsl
lcall
sub
or
lds
dec
push
and
mov
loopne
pop
xchg
test
jg
fs
jbe
jo
mov
cmp
faddl
sbb
pusha
ret
xlat
pusha
addl
daa
aas
lret
sbb
repz
pop
out
or
psrld
mov
popf
daa
cwtl
pushf
punpckhbw
adc
or
lock
pushf
in
cmp
xchg
imul
adc
stos
lock
dec
pop
xlat
add
push
pop
add
xchg
iret
jle
mov
push
das
xor
ds
or
dec
sbb
cmpb
cwtl
icebp
imul
pop
cld
cli
pop
inc
lods
adc
movl
xchg
dec
cmpb
push
aas
jbe
cmp
lss
or
dec
incl
imul
arpl
leave
ds
cmp
push
subl
loope
andb
push
enter
pop
cli
daa
ss
ffreep
lcall
add
mov
push
cltd
xchg
mov
cmp
sarl
data16
adc
push
int3
sbb
inc
mov
stc
mov
cli
xor
mov
mov
cld
mov
lahf
jmp
xchg
negb
mov
and
mov
shl
stos
mov
fidivrl
sbbb
xchg
push
xchg
inc
jb
pop
jle
insl
ljmp
mov
sub
sarb
push
xchg
cltd
inc
orb
pop
ss
leave
hlt
mov
mov
movsl
lea
mov
rorb
pop
sub
cmovs
sbb
add
mov
mov
cmc
mov
mov
insb
push
enter
push
mov
popf
push
rolb
test
adc
push
movb
cmpsb
pushf
adc
lods
push
outsb
jmp
mov
rcll
call
or
rol
add
jno
jl
pop
xlat
mov
lods
jne
data16
lcall
arpl
push
ja
sbbb
nop
sbb
dec
mov
shlb
inc
pop
pop
test
jae
mov
dec
cs
mov
cmpsb
and
loope
insl
gs
pop
push
inc
in
jb
leave
push
and
jne
ficoms
fwait
dec
aaa
jbe
xchg
xchg
hlt
mov
aam
imul
jae
lods
cmc
lds
jg
repz
fdivr
fs
and
out
cmc
mov
or
xchg
xchg
adc
test
or
test
jbe
sbb
add
mov
ret
aaa
push
jne
sbb
cmpsb
sar
mov
pop
test
mov
jle
call
or
or
or
aas
mov
sbb
out
or
pop
aam
mov
push
adc
inc
mov
sub
mov
test
mov
out
push
sub
rclb
jno
mov
leave
arpl
es
jno
ds
cmp
mov
dec
push
dec
sti
cmpsb
lds
leave
bound
dec
in
and
lods
inc
sub
call
sbb
outsl
mov
test
je
je
fcoms
add
inc
lock
int
pop
mov
int
mov
xor
loop
test
out
adc
jmp
je
mov
dec
shlb
lock
fdivs
push
pop
inc
clc
xlat
test
push
pop
push
aaa
mov
fs
push
daa
inc
sbbl
xor
push
inc
mov
popa
mov
dec
push
std
pop
or
cltd
inc
es
data16
fs
mov
clc
inc
inc
daa
mov
loop
sbbl
mov
push
and
xor
and
sub
push
sbb
in
inc
mov
daa
stos
add
cmc
fidivl
decl
inc
add
mov
xchg
sbb
adc
sbb
inc
repnz
jg
dec
pop
xor
or
dec
out
pop
mov
ds
rcr
dec
cld
setnp
arpl
pop
mov
jge
lea
inc
or
pop
and
push
pop
inc
and
out
fwait
out
in
pop
and
out
outsl
adc
mov
xchg
push
lcall
cmpsb
sub
inc
push
rcrb
insl
daa
lds
mov
mov
push
das
xchg
sahf
sbb
pop
pusha
mov
mov
add
fsubrs
nop
mov
mov
inc
xlat
add
outsl
mov
pop
iret
clc
mov
push
and
fs
iret
mov
pop
out
cmp
dec
js
dec
rcl
imul
push
sub
xchg
cmp
adc
adc
and
inc
movsl
adcl
adc
xchg
mov
subl
and
ret
stc
leave
jno
xchg
push
mov
dec
pop
cmpsl
les
ljmp
inc
or
dec
gs
test
jno
xor
rorb
inc
jp
inc
xchg
inc
insl
cmp
push
mov
pop
mov
lahf
nop
push
cmp
pop
sbb
mov
pop
mov
test
xchg
imul
sub
in
cmc
addr16
or
xlat
rorb
aas
push
cmp
pop
mov
repz
call
outsb
dec
sti
inc
repz
jecxz
push
jp
out
cmp
cmp
push
sub
and
xchg
mov
lcall
xlat
push
xchg
and
dec
sbb
and
xchg
sarl
testb
xor
push
jmp
sub
shll
popf
and
mov
sbb
push
push
movsb
scas
icebp
repnz
int3
mov
fwait
cs
std
dec
push
jmp
addr16
jno
orl
dec
sbb
pop
out
and
fsts
cwtl
imull
sub
push
into
pop
stos
pop
aaa
addr16
ficompl
mov
or
movsl
push
dec
inc
sub
outsb
jb
testl
sbb
xchg
fwait
decb
cli
sti
in
lahf
add
xchg
out
adc
sub
mov
rorl
js
pusha
push
pusha
insl
cmp
pop
pop
dec
out
add
addr16
inc
mov
pusha
add
jecxz
mov
xchg
jno
xor
decb
das
inc
cmp
and
xlat
arpl
lcall
or
lahf
jle
ficoms
mov
lock
lahf
lret
cmp
inc
pop
jns
imul
lcall
stc
xor
and
push
in
enter
into
fstpt
push
xchg
les
xchg
xlat
xchg
inc
jl
xor
insl
xchg
or
mov
or
ss
cmovs
mov
xchg
loope,pn
stos
mov
popa
xor
mov
sbb
jp
popa
fildl
sub
pop
sbb
addr16
setle
arpl
cmp
mov
in
sbb
dec
dec
imul
fcmovnbe
mov
andl
lea
subl
mov
aad
outsl
mov
pop
dec
cmp
ja
les
int
test
dec
icebp
iret
add
jg
iret
cmp
int3
clc
mov
fdivrs
sub
rcll
xchg
pop
test
ja
jo
popf
rolb
mov
add
pop
mov
call
or
pop
test
mov
cmp
or
js
cmc
call
push
frstor
xchg
xor
xchg
jnp
stos
sub
inc
lods
dec
fimuls
and
mov
mov
push
call
jnp
xchg
pop
xor
lods
push
xchg
adc
push
add
fwait
xor
pop
mov
xlat
or
sbb
xchg
sahf
fucomp
stos
cld
sbb
fcmovbe
xchg
jmp
xchg
es
jbe
cmp
gs
ret
popa
add
cmp
pop
mull
lahf
xchg
cs
fdivl
jns
popf
pop
pop
cmc
dec
insl
es
sub
mov
cld
pop
mov
data16
xor
push
xchg
cmpsb
outsl
jp
cmpsl
and
stc
leave
xchg
jo
imul
adc
loopne
mov
mov
cmc
test
in
mov
cld
call
sub
pop
clc
ret
sbb
shll
sbb
fnstcw
stc
mov
mov
or
cwtl
scas
ret
lahf
adc
add
jo
out
cmpsl
mov
sub
jno
mov
ljmp
push
sbb
fimull
lcall
pop
enter
xchg
push
and
dec
jge
mov
ds
lret
xor
inc
lret
clc
loop
jp
adcb
add
xchg
inc
add
popa
ss
popa
jl
push
rclb
xchg
arpl
inc
outsl
jecxz
mov
std
dec
pop
inc
out
loopne
mov
mov
mov
mov
cmp
cli
adc
and
popf
mov
mov
stc
int
xorl
xchg
xlat
gs
mov
outsl
out
test
sub
xor
sub
pop
and
mov
roll
hlt
stc
mov
in
mov
fnstenv
fsubr
cmpsl
enter
add
lods
cmpsl
lret
sub
xchg
rolb
ljmp
adc
in
andl
sti
loope
es
aaa
mov
pusha
adc
jbe
mov
stos
enter
int3
fildll
icebp
inc
sbb
cwtl
jno
push
pop
popa
int
jo
and
arpl
out
and
adc
lods
mov
call
xchg
hlt
xor
xchg
insl
sub
or
or
inc
jecxz
xor
jp
mov
push
cmpsb
cmp
mov
out
rorl
mov
cmpsb
inc
inc
inc
sahf
adc
xor
out
ja
mov
out
test
loope
repz
mov
xchg
xor
mov
jb
out
xor
mov
inc
outsl
inc
test
dec
fnstcw
cli
out
in
sti
mov
mov
rcrl
insb
insl
cld
arpl
lcall
xchg
lret
push
push
adc
popa
roll
mov
setl
mov
mov
out
out
dec
add
jecxz
imul
dec
dec
imul
cmp
push
sbb
ja
mov
rorb
mov
lret
negl
or
cmpsb
ficompl
inc
outsb
in
ja
push
jl
fistl
inc
xchg
sub
pop
mov
cmp
mov
dec
jo
movsb
mov
test
or
ret
push
ja
push
into
fdivl
sub
cmpsb
cmp
mov
pop
fstl
out
mov
dec
add
mov
outsb
cmp
dec
inc
rcl
js
pop
loope
adc
mov
out
scas
fwait
sbb
aam
xchg
mov
insl
adc
imul
cmpsl
xor
test
in
or
mov
int3
sbb
mov
daa
pop
mov
pop
sbb
lods
inc
mov
mov
or
nop
pop
repnz
push
sub
push
dec
xchg
jmp
movsl
ljmp
cmp
cmp
jmp
pushf
cld
adc
and
stos
cmpsl
fisubrs
jmp
lock
aaa
and
mov
scas
xchg
dec
and
js
cli
mov
inc
pop
push
lret
cld
xchg
cmp
cmpb
daa
gs
nop
adc
scas
rcrl
mov
cs
push
add
stos
sub
ja
adc
pop
xor
adc
add
lahf
jo
or
loop
into
int
insl
adc
ja
repnz
mov
lahf
or
sub
push
lock
gs
imul
mov
imul
out
out
mov
nop
cmp
aad
test
daa
jg
fisubrl
cmp
mov
push
mov
ret
arpl
test
mov
repnz
in
push
cmp
sti
sub
or
movsl
outsl
push
push
pop
addr16
je
neg
cmp
push
inc
xchg
mov
sbb
popf
js
aad
add
rcrb
movsl
jbe
rorl
sub
jns
aam
ds
xor
int3
sub
xchg
cs
mov
mov
push
idiv
and
ja
cmp
dec
shr
jg
add
nop
fistpl
ljmp
and
lock
push
xor
mov
and
mov
and
pop
mov
pop
gs
mov
mov
movsl
fists
xor
add
popa
jb
jae
mov
xchg
repz
xor
sbb
add
cmp
push
data16
fidivrs
push
jb
daa
mov
sub
lret
es
test
int3
mov
lock
dec
mov
mov
hlt
arpl
in
cmp
cmp
pop
icebp
xor
popa
fiadds
lock
and
stc
jno
mov
stos
insb
push
in
mov
jle
xor
inc
fists
mov
add
sbb
rolb
cmp
xchg
sub
dec
add
mov
dec
or
xchg
ljmp
cmp
mov
out
cmp
sub
mov
jbe
shrl
xchg
mov
pop
push
add
fsubs
test
fisubrl
mov
mov
pop
out
fldcw
aas
and
xchg
cwtl
in
fs
mov
xchg
sarb
clc
and
cmpsl
ss
cmpsb
fwait
ja
pop
dec
in
cmpb
jb
call
adc
jp
jae
jo
adc
dec
push
ret
cwtl
xchg
aaa
and
pop
xor
popf
mov
adc
stc
pop
iret
xor
fs
notl
ljmp
or
xor
jne
fwait
arpl
lret
add
pop
jnp
push
arpl
fcoml
out
fdivr
ret
mov
sub
clc
mov
or
outsb
repnz
inc
mov
fisttps
movsl
push
sub
enter
add
push
sub
pop
shl
push
mov
int3
jge
hlt
dec
into
xor
mull
xor
xorb
push
jg
int3
loop
leave
popf
push
imul
sbbl
fsubrs
movsb
and
mov
pop
data16
fsub
mov
xlat
aaa
aam
std
sbb
and
mov
adc
movsl
mov
jp
jecxz
inc
cmc
clc
sub
push
pusha
mov
icebp
and
and
pop
add
inc
jno
sbb
lret
dec
push
movsb
data16
add
xor
push
gs
lods
mov
xor
xchg
subl
fiaddl
pop
adc
xchg
int
out
es
in
cmpsl
aas
or
mov
out
bound
jne
nop
arpl
jae
mov
pushf
rorl
frstor
pop
pop
scas
dec
push
lods
sahf
inc
sti
cltd
push
ja
fcoms
mov
aad
pop
push
inc
adc
add
xor
movsl
and
call
mov
cmp
dec
mov
mov
xchg
mov
js
fildll
add
bound
fisttpll
fcmove
cmovb
cmpsl
xchg
sahf
lods
mov
xchg
cli
rorl
fs
and
sub
cmc
nop
daa
dec
jae
test
pop
repz
jge
clc
pop
and
or
xchg
adc
dec
mov
cs
fstpt
mov
fldenv
data16
fs
add
fcoml
push
fs
add
mov
fwait
lds
jg
add
xchg
or
sub
repnz
cli
fwait
xchg
jecxz
jnp
dec
jns
loop
dec
lea
mov
lock
push
mov
test
imul
pop
insb
xchg
and
or
add
clc
xor
and
mov
inc
mov
pushf
sahf
adc
pop
dec
cmp
inc
jb
jmp
sahf
mov
dec
icebp
in
jl
loopne
cmp
out
cmp
mov
adc
adc
pusha
jle
xchg
xchg
loope
ds
adc
imull
movsl
sbb
in
shlb
cmc
addr16
add
in
lcall
dec
ja
mov
cmpsb
sub
cmpsb
inc
xlat
mov
mov
mov
jecxz
mov
enter
xor
or
sub
sbb
sub
ja
cmp
sub
test
in
arpl
stos
inc
mov
mov
lret
and
pop
in
cmp
cli
sbb
push
or
cmc
inc
push
and
xlat
jle
inc
test
inc
addr16
push
dec
addb
mov
adc
or
inc
stos
pslld
pushf
out
fidivrs
out
pop
lods
sbb
push
mov
arpl
inc
cmp
mov
jg
in
inc
stc
stc
cli
shrb
mov
mov
ret
dec
rolb
and
pop
push
mov
sub
mov
pop
cmp
inc
jecxz
inc
cmp
loop
jge
js
movsb
mov
sbb
repnz
push
xlat
rcr
sub
xor
pusha
bound
call
por
out
lds
out
jecxz
lea
push
and
sub
cld
fdivrp
incl
sahf
cmp
addr16
mov
jmp
test
xor
mov
movsb
mov
cmc
and
lds
inc
jae
push
and
sub
fisubrl
sub
lcall
and
xchg
sbb
mov
sub
fucomip
mov
inc
and
test
adc
pop
add
rorl
mov
jmp
jnp
xchg
stc
xchg
pop
inc
sbb
int3
pop
mov
mov
lock
inc
cmpb
adc
rcl
inc
jmp
mov
cltd
je
sbb
sub
emms
out
imul
pop
mov
out
dec
pop
cmp
and
xor
xchg
test
mov
stc
bound
mov
cmp
leave
sub
add
dec
inc
xchg
push
std
pop
dec
inc
inc
mov
pop
xchg
sahf
out
cs
and
enter
xor
insl
stc
cwtl
lea
stc
pop
cltd
sbb
aam
jne
fisubl
sbb
push
outsb
inc
mov
lcall
icebp
push
pop
cmp
or
adc
jno
mov
sbb
frstor
dec
int3
adc
in
pop
pusha
xlat
xor
fs
jb
out
and
scas
lahf
test
xchg
jb
jmp
mov
jle
sahf
repnz
sbb
ret
cmpsb
xchg
adcb
cltd
ss
cli
popf
mov
xor
pop
pop
movsb
and
adc
cmc
dec
or
sub
sti
jno
pop
sbb
cmc
popa
and
fstpt
adc
bound
push
mov
push
cmpsb
cmp
fdivrs
mov
lds
loop
scas
mov
mov
hlt
mov
mov
and
mov
hlt
or
mov
paddb
mov
sar
ss
adc
sbb
loop
cli
test
fwait
in
lea
insb
sub
dec
cmpsl
or
sbb
int
mov
mov
popf
lods
outsl
insl
clc
push
sbb
orb
add
or
jne
push
jae
xchg
add
mov
rcrl
ds
jg
scas
outsb
inc
cmp
and
shl
stc
inc
or
add
or
jno
insl
imul
fdivrs
pop
jne
mov
pop
imul
xor
movsl
ja
fwait
insb
shl
adc
repnz
les
int
stc
add
sub
rclb
fwait
cmp
rcrb
push
ds
mov
adc
adc
cmc
and
xchg
pop
enter
jg
pop
inc
ds
jecxz
push
popa
sub
sar
cmp
pop
ds
xchg
xor
mov
jo
fdiv
fidivs
push
mov
xlat
sub
pop
adc
dec
ret
ja
ljmp
rcll
jnp
jnp
or
pop
sbb
sub
fwait
repz
push
ja
mov
cmp
test
or
inc
or
cmp
sbb
add
fstp
mov
fildl
xchg
xchg
cmpsb
jae
cmpsb
sbb
add
mov
sbb
sub
push
push
pusha
jbe
mov
mov
push
sti
dec
jb
fildll
adc
mov
mov
push
xchg
push
xor
push
js
aas
int3
xor
lcall
adc
out
jbe
fcomi
inc
mov
push
loope
lret
lret
and
mov
outsl
adc
xchg
hlt
lods
pop
scas
test
push
xchg
mov
sahf
pop
sahf
je
es
xor
shll
jmp
dec
push
inc
jmp
xorl
fcmovnb
test
dec
xchg
dec
and
push
jle
dec
js
stos
test
and
imul
xor
dec
adc
es
xchg
sbb
or
stc
dec
push
cwtl
jl
push
pop
push
mov
call
sub
and
in
xor
cmpb
xlat
mov
repnz
js
cmpsb
or
fisubrs
jl
fistpl
sub
jp
inc
notb
mov
roll
std
jg
adcb
xchg
sti
push
mov
cmp
lea
push
pop
aas
and
inc
leave
shlb
out
dec
fbld
fsubl
ljmp
in
sub
cmp
or
jne
adc
cmp
cmp
push
mov
icebp
lock
mov
add
scas
push
mov
dec
lcall
sbb
adc
sub
push
push
cmp
das
les
loope
fs
jne
xorb
xor
mov
dec
cmp
and
mov
adc
and
jecxz
lock
test
inc
add
lcall
clc
or
mov
clc
xor
pop
rcrb
add
jg
test
pop
mov
test
roll
inc
sbb
cmp
daa
sbbb
fdivr
jmp
and
sub
adc
inc
mov
clc
xchg
pop
mov
fdivrl
and
mov
aad
outsb
les
xchg
pushf
jle
scas
mov
sbb
fsubs
or
imul
fists
mov
push
fdivr
sub
loopne
cmpsb
jo
leave
jns
lds
push
inc
jae
cmp
push
mov
das
push
adc
mov
xchg
push
loopne
push
mov
push
sbb
pop
pop
rclb
test
xchg
dec
stc
enter
xor
sub
jns
ficoml
lahf
incl
mov
jl
ds
ja
test
push
jp
sbb
jp
adc
xor
and
orl
orb
movl
mov
pop
fbstp
adc
and
mov
sbb
mov
fucomp
fs
add
push
mulb
cld
jns
lahf
cmp
mov
inc
int3
mov
sahf
xor
jne
or
pop
in
insl
testb
in
push
push
clc
jge
shr
sub
cmp
push
pusha
mov
push
jg
test
pop
mov
mov
sub
sub
mov
int3
sahf
data16
ret
or
or
mov
je
cld
test
enter
out
sahf
mov
mov
pop
mov
mov
add
fmulp
or
mov
ret
jecxz
dec
lahf
sub
or
out
aam
or
fiaddl
hlt
addr16
aad
mov
ret
rol
push
aas
mov
les
jle
ret
mov
mov
test
popa
pop
insl
jmp
stc
sbb
mov
xor
xchg
fwait
ljmp
js
adc
cmc
popf
sti
ljmp
sbb
sti
mov
push
jle
inc
movsl
lea
dec
inc
jnp
push
and
sbb
insl
inc
pop
dec
inc
jb
lock
fwait
and
sbb
stos
sbb
outsb
icebp
ss
ficompl
shrl
pop
sbb
xorb
add
sti
and
adc
and
hlt
test
test
xchg
mov
jge
push
add
mov
pop
cmp
outsb
inc
roll
cmp
insl
and
movhps
int
and
cmp
mov
xchg
jnp
cmp
or
les
ss
adc
and
pop
push
mov
arpl
sub
lahf
mov
cmp
xchg
mov
cmc
xor
dec
add
xchg
fwait
xchg
jno
int
or
mov
out
push
out
pop
cld
in
lods
bound
ds
push
mov
or
xchg
sahf
sbb
inc
sub
loopne
add
inc
je
add
cmpsl
call
icebp
sbb
mov
xor
dec
in
sahf
test
mov
pop
rorb
outsl
xlat
ret
aad
mov
cs
shrl
fs
loop
mov
je
mov
dec
lods
and
es
idivb
ljmp
push
mov
fldl
imul
xor
popf
aaa
mov
push
and
repnz
sbb
dec
movsb
mov
movsl
in
dec
push
pop
push
inc
fcmovnu
popf
cmp
and
xchg
andl
in
cmpl
xchg
cwtl
ret
xor
scas
sub
push
imul
adc
jbe
pusha
jle
jp
mov
or
add
mov
lret
or
cmp
cmc
or
pop
sbb
or
jp
insb
imul
dec
les
ds
int
cs
xchg
dec
rolb
mull
mov
pop
orl
push
and
adc
xchg
pop
stos
mov
js
icebp
fbld
pusha
pop
cmpsl
mov
es
jo
sbb
fs
mov
shlb
fwait
push
fcoms
jno
pop
or
xchg
inc
push
xchg
fisubrl
xchg
ss
push
jge
xor
aaa
rolb
sub
adc
sub
cmp
jl
mov
lds
icebp
sbb
sbb
add
push
jne
std
xchg
lcall
ret
and
mov
pop
jl
cltd
sbb
mov
dec
int3
mov
jb
or
fidivs
and
sbb
std
mov
push
mov
mov
cmpsl
jge
dec
xchg
fs
xchg
or
mov
cmp
and
test
scas
and
jae
hlt
cld
and
push
pop
cmp
pop
mov
mov
pop
in
or
mov
scas
jne
xlat
insl
cmpsb
inc
mov
sbbl
push
ret
ret
cmp
sub
push
or
pop
push
fistps
loopne
fwait
lods
fimull
lock
pop
pop
sbb
adc
jnp
shlb
imul
xchg
mov
lahf
ljmp
lahf
cmc
cltd
sub
jp
dec
xor
gs
mov
dec
push
mov
repnz
mov
lret
jns
daa
test
cld
mov
mov
fcoms
push
and
orb
pop
mov
imul
rcl
xchg
repz
xchg
ficomps
dec
xchg
test
mov
xor
es
sbb
mov
mov
or
mov
fimuls
jg
inc
pop
push
adc
fldl
push
adc
inc
popf
iret
inc
arpl
test
rolb
idivb
pop
mov
in
shlb
xchg
lea
stos
aaa
xchg
mov
out
mov
lret
push
test
cmp
sbb
stos
pop
idivb
loop
adc
ja
add
mov
or
jb
adc
gs
repz
pop
or
mov
push
inc
daa
ja
jae
or
lock
push
sbb
mov
pop
pop
inc
int
cmpsl
jle,pt
jl
aas
jo
nop
in
out
movsb
add
mov
inc
cmp
mov
xchg
outsb
je
lahf
movsl
or
rorb
xchg
and
dec
cmp
push
jb
jge
jge
loope
xlat
divb
mov
sub
pop
pop
aad
jge
xchg
in
sti
push
cmp
int
into
cld
fstcw
xchg
mov
and
cmp
rcll
out
inc
push
lahf
fwait
push
fcomip
out
dec
sbb
jno
add
sti
sbb
mov
cmp
xor
mov
ss
mov
pop
sub
testb
sub
ljmp
sub
in
and
inc
and
lret
pop
sbb
test
jb
stos
sub
outsb
mov
mov
lods
cmp
mov
push
jmp
pushf
int3
xlat
jo
icebp
mov
pushf
mov
repz
enter
dec
mov
push
loope
test
dec
in
rorl
popf
test
or
sbb
lods
outsb
add
mov
jns
add
dec
and
aam
js
push
insb
jle
icebp
and
xchg
inc
stos
add
mov
pop
jl
jmp
jbe
movsl
cld
sbb
lods
add
gs
cwtl
mov
push
movsl
add
cmp
addr16
push
fs
pop
call
orb
add
jle
cmpsl
loope
adc
popa
jmp
xlat
movsl
jp
cs
cmp
std
mov
fsubr
aam
insb
ret
fldenv
stos
mov
jnp
jmp
xor
dec
fimull
ret
cld
pop
jl
dec
js
mov
mov
call
leave
add
outsl
andl
ficompl
scas
iret
daa
dec
xchg
lret
enter
jp
sbb
jbe
adc
sahf
mov
add
push
mov
jge
fwait
sbb
and
inc
cli
inc
out
xor
jns
dec
lods
repz
push
fstl
jno
int
rep
xor
mov
dec
rcrl
stos
push
add
xchg
jno
inc
push
adc
sub
mov
out
xor
cmp
dec
popf
sbb
fsubs
and
es
push
xor
ret
cld
push
push
movsb
aad
js
push
adc
cmpsl
inc
lcall
jge
out
fldt
xor
xchg
sar
push
gs
or
cli
je
and
sti
mul
push
stos
mov
xchg
call
leave
cmp
mov
mov
fstps
pop
adc
std
dec
arpl
in
jmp
xchg
cmpsl
in
dec
cltd
push
xchg
adc
arpl
ret
jecxz
fsubr
leave
pminsw
popa
push
add
out
dec
dec
test
push
sub
inc
repnz
add
adc
les
out
and
xor
movsl
jne
pop
push
ss
inc
jecxz
xchg
out
xchg
push
inc
outsb
sti
push
leave
cmp
cltd
arpl
ljmp
xchg
mov
into
inc
fdivp
mov
stos
loopne
test
sbb
fidivl
mov
and
pop
push
push
sub
loop
dec
mov
int
inc
mov
insl
test
ljmp
xchg
not
mov
arpl
push
sub
loopne
testl
in
push
cmp
scas
add
mov
movsb
pop
mov
push
mov
xorb
das
hlt
mov
mov
and
shlb
decb
add
dec
push
shll
xor
and
scas
and
testl
pop
loop
shll
imul
dec
jo
mov
xchg
jg
mov
mov
mov
inc
jmp
addr16
cmp
leave
mov
adcl
scas
push
mov
jnp
cltd
xor
xchg
cmpsl
mov
mov
sbb
add
lock
cmp
mov
mov
out
push
add
pop
push
and
aad
xchg
xchg
lds
lea
push
das
ret
jae
cli
dec
out
mov
pop
adc
mov
addb
inc
lret
insl
inc
in
lods
xor
lea
jp
addr16
cmc
sub
lods
daa
je
cmp
outsb
lock
mov
testl
sub
mov
sbb
jnp
test
sub
jp
add
inc
sahf
mov
addr16
dec
lret
mov
mov
test
clc
rcrb
call
pop
push
je
in
out
sbb
pop
and
adc
mov
mov
aam
enter
mov
inc
jns
jl
dec
clc
addr16
dec
add
xor
pop
stos
mov
loop
xchg
pop
mov
pop
loop
or
jp
push
cld
decb
jae
jg
xor
pop
jmp
mov
aaa
sti
shlb
push
jnp
mov
and
dec
mov
test
inc
jb
mov
mov
cmp
inc
add
ja
dec
mov
mov
int3
mov
and
pop
pop
ret
arpl
popa
fisubs
and
and
inc
gs
hlt
out
shll
jo
sbb
lock
stos
inc
shll
test
adc
out
mul
nop
insl
mov
or
xor
cmp
jp
lcall
sbb
sahf
stos
jecxz
xchg
jp
and
outsl
sbb
aas
pop
push
leave
jb
mov
xor
inc
mov
test
sarl
mov
inc
dec
and
mov
out
mov
mov
push
sbb
mov
mov
mov
dec
lret
fimull
cmpsl
jb
push
mov
xor
jb
test
push
addr16
popfw
shll
imul
xor
pop
popf
xchg
jnp
pop
xor
adc
or
pop
pop
filds
push
lcall
cmp
mov
lret
pusha
dec
push
cmp
mov
adc
lods
pop
pop
fisubrl
incb
scas
or
loope
enter
xor
xor
bswap
int3
mov
cli
lahf
jle
push
cmp
fcomip
ret
setno
sub
testl
loopne
xchg
dec
std
push
mov
mov
rorl
std
sbb
ret
push
ret
lods
in
popa
push
cmpsl
mov
push
sub
loop
jmp
push
xor
sbb
shll
or
jo
ret
insl
adc
repz
out
jg
cmp
testb
push
mov
push
fwait
cmp
jg
fcomps
outsb
lea
and
inc
das
pop
inc
push
inc
pop
scas
inc
fwait
call
lods
pop
cmc
xchg
cmp
mov
imul
aaa
fiaddl
jmp
mov
outsb
orb
daa
call
xchg
push
inc
enter
movsl
sub
push
imul
scas
xorb
and
inc
mov
add
push
or
mov
out
push
sub
mov
xor
and
lcall
push
fimull
push
dec
jns
cmp
adc
jge
loopne
pushf
dec
leave
addr16
cli
dec
or
add
xor
cltd
xchg
cvtps2pi
adc
jle
aad
repz
inc
or
lahf
inc
ss
cmpb
in
jne
lock
add
add
fdivrp
jns
into
nop
insb
lcall
aas
push
lret
loopne
xchg
sub
cmpsl
jg
in
fucomip
in
or
pop
iret
sub
popf
pushf
sbb
call
sub
adc
sub
mov
mov
adc
loope
into
shlb
ljmp
cmpl
or
xor
add
and
push
mov
mov
pop
push
iret
dec
jbe
mov
adc
lret
nop
js
lods
inc
pop
int
mov
cmpb
push
ret
and
div
inc
mov
sub
les
xchg
scas
cmp
cmp
outsb
inc
inc
rol
push
adc
hlt
out
sbb
cli
sbb
xchg
jne
jb
es
sub
popa
test
gs
mov
sbbb
push
cmp
and
mov
stos
add
push
sub
pop
sbb
out
fstpl
jns
test
mov
in
ss
xor
bound
jno
inc
xor
adc
std
mov
das
je
fidivrs
sahf
clc
pop
adc
fstps
das
mov
sahf
mov
addr16
in
ljmp
pop
ret
inc
mov
cmp
cmp
sbb
adc
mov
push
sbb
imul
mov
adc
mov
aad
lret
mov
lods
mov
cmp
sub
into
mov
insl
mov
ljmp
aam
subl
or
sahf
lahf
ljmp
les
sbb
jbe
xchg
mov
mov
outsb
and
enter
out
loopne
nop
stos
sbb
xchg
clc
lods
sub
repnz
jp
jl
jnp
xchg
mov
fcmovnbe
push
inc
arpl
xchg
xchg
pop
mov
mov
and
and
adc
adc
scas
sub
mov
push
scas
or
mov
outsb
dec
push
add
int
inc
fcoml
sub
mov
sub
fs
adc
repnz
xchg
mov
loop
mov
jae
mov
push
jb
cmp
sbb
hlt
or
jne
dec
mov
scas
and
movl
mov
pop
pop
stc
mov
in
cmp
mov
divl
subl
sub
loope
jne
mov
adc
out
and
in
lds
jmp
jmp
or
ficoml
pop
out
js
es
jmp
cmp
out
dec
xorb
cwtl
jmp
xchg
in
sti
dec
adc
xchg
xor
enter
mov
scas
push
mov
mov
mov
xchg
repz
rclb
add
stos
scas
ret
mov
xchg
and
sub
notb
out
cmp
jecxz
int
mov
xor
pop
pusha
out
mov
cs
xchg
dec
cmpsl
mov
or
jecxz
stos
sbbl
xorb
enter
outsl
push
jmp
xchg
sub
xchg
outsl
push
out
xchg
fildll
sub
cmc
inc
stc
les
enter
je
leave
out
xchg
dec
cmp
sahf
add
push
mov
mov
fsubrs
jp
imul
adc
add
lret
push
mov
adc
aam
ljmp
mov
stc
push
sbb
test
mov
mov
arpl
inc
xchg
inc
leave
mov
add
in
out
hlt
rclb
jecxz
mov
jmp
cmc
in
xor
sbb
pop
mov
pop
pop
roll
sbb
pusha
pop
ficompl
jbe
xor
jecxz
cmc
sbb
bound
xchg
push
in
bound
cltd
sbb
mov
mov
cmpsb
lea
xchg
jle
idivl
mov
test
mov
lahf
mov
sub
dec
movsl
gs
loop
add
mov
dec
jmp
inc
sarb
in
jl
mov
les
adc
fwait
sti
loope
and
mov
mov
inc
mov
pop
jno
int
sub
cli
repz
fsubl
and
pusha
or
in
std
xchg
into
test
cmp
mov
sub
push
cmp
stc
push
fwait
nop
inc
and
shr
pop
pop
mov
addr16
and
out
sub
and
js
jp
jns
mov
adc
lcall
pop
adc
in
int
loopne
mov
popa
sub
adc
jle
push
aam
mov
jmp
int
adc
imul
mov
ret
cmp
and
and
xchg
push
out
sub
mov
out
jae
jle
jbe
decl
int3
mov
sahf
mov
frstor
inc
outsl
add
push
daa
mov
adc
mov
jo
push
leave
lods
xchg
adc
hlt
mov
pop
addl
ss
jnp
xor
sbb
out
xchg
xchg
fbld
add
dec
pop
cmp
loopne
sbb
iret
add
inc
adc
push
rclb
sbb
mov
xchg
ret
mov
outsl
dec
mov
lds
sub
sub
aaa
daa
or
sahf
mov
aam
cmp
icebp
popf
mov
pop
push
dec
rcr
das
push
jne
lahf
pop
jo
mov
dec
cmc
adc
sub
sub
pop
stc
pop
or
or
and
mov
out
xchg
mov
or
setae
mov
cmp
jnp
mov
and
cmp
add
ret
sub
dec
or
cmpsb
cwtl
ljmp
push
add
mov
xchg
xchg
cmpsb
aad
rcrl
fbld
sbbb
into
cld
decb
std
adc
adc
push
mov
ljmp
dec
ficoms
mov
inc
aas
jmp
mov
repz
mov
mov
inc
jp
xor
and
jmp
sti
mov
mov
js
push
sbb
loopne
in
mov
fstpt
sub
outsb
jbe
clc
pop
popf
or
xchg
lods
jmp
cwtl
or
xchg
aaa
xchg
jmp
cmpsb
jnp
push
insb
push
xchg
test
pop
mov
push
rclb
xchg
inc
and
and
outsl
xlat
fdivrl
and
inc
cmc
add
das
and
lods
imul
inc
xchg
cmp
test
and
mov
dec
push
js
push
fisttpl
push
fincstp
push
jae
dec
cmp
lret
in
xor
push
imul
rcrl
jno
lds
movsb
push
add
and
or
adc
cwtl
cmp
aad
sub
cld
lods
cmpsl
and
mov
ss
mov
mov
jnp
fmull
dec
mov
pop
xchg
dec
mov
pop
add
inc
and
mov
ret
out
add
inc
daa
inc
cltd
iret
jl
or
pop
std
cmpl
push
lods
or
and
xchg
repz
fimuls
cmp
jae
dec
adcl
mov
push
fwait
or
push
xor
in
lahf
xchg
mov
xchg
mov
jg
xchg
mov
and
adc
inc
pop
stos
or
insl
mov
pop
mov
ret
leave
xchg
xchg
xchg
test
push
and
and
stos
and
cmc
test
lock
popa
clc
mov
mov
jecxz
cmpb
push
and
and
andb
test
dec
pusha
mov
xchg
pop
dec
test
scas
push
outsb
push
xchg
mov
ss
sahf
es
xchg
pop
mov
jne
xchg
inc
or
inc
mov
xchg
push
mov
ja
shll
sbb
xchg
pop
jge
ss
fisubrs
and
insb
sub
sbb
mov
mov
mov
push
sahf
cmpsb
or
add
mov
add
test
and
imul
in
ss
xchg
pop
adc
xchg
rorb
lods
lock
adc
cmpsl
pop
inc
push
in
in
jg
and
sbb
xchg
cmp
pop
jmp
sbb
push
pop
jmp
xor
adc
adc
sbb
ret
stos
rep
pop
push
push
push
or
insl
adc
idiv
ficoml
lret
call
dec
std
xchg
sti
adc
xlat
add
js
pop
inc
repz
xchg
xchg
jmp
sbb
push
scas
stos
arpl
mov
mov
rcll
outsb
and
sub
mov
jecxz
push
cmpsb
jo
test
xlat
pop
stc
add
cmp
mov
or
ret
sub
stos
mov
stos
push
sub
lods
add
jp
pusha
icebp
cmp
add
and
out
sbb
sub
pop
adc
movsb
movsl
mov
or
decl
sub
sbb
outsb
lcall
in
int
or
inc
ljmp
jns
shlb
loop
idivb
mov
test
enter
mov
mov
fistl
into
stos
inc
or
cmp
mov
popf
sti
mov
sub
cli
lcall
or
jge
cmp
pop
sub
lcall
adc
mov
or
mov
or
and
popf
es
cmpsb
lcall
xor
mov
test
xor
adc
push
mov
pop
fcom
loop
test
cmp
mov
jmp
das
cmp
lcall
aas
mov
mov
and
addl
scas
and
std
test
or
aaa
xchg
pop
xor
inc
adc
sub
sbb
outsl
jg
out
mov
lahf
inc
xor
push
cli
push
inc
sub
mov
or
jnp
repnz
xor
sarb
or
adc
mov
out
cwtl
lahf
add
imul
mov
xor
cwtd
fdiv
imul
data16
sub
clc
lock
inc
pop
push
int
lods
jle
mov
jne
cltd
or
fs
xor
fstps
sti
jns
adc
inc
repnz
test
sbb
add
inc
aad
fimuls
mov
shlb
js
dec
das
xor
xchg
fwait
pop
sub
int
inc
fsubl
push
bswap
rcrl
insw
add
rorb
repz
xchg
cmp
out
jg
dec
sbb
imul
lcall
xchg
push
aas
sti
js
leave
rorb
add
pop
xchg
call
or
jns
push
mov
push
xor
dec
loop
sub
adc
mov
inc
test
cli
mov
inc
jb
push
add
loop
cld
push
add
test
jmp
cmp
xchg
out
xor
push
test
pop
push
xlat
loope
push
nop
sahf
mov
sti
mov
sti
add
fdivrl
sbb
add
mov
cmp
cmp
jno
repnz
loopne
out
movsb
cmp
xor
ljmp
xchg
pushf
fidivs
and
pop
out
mov
mov
dec
xchg
bound
fucomi
adc
aam
cltd
lcall
xor
push
mov
push
fnsave
jecxz
sbb
mov
inc
je
jecxz
insl
shll
xor
push
xor
xchg
fildll
xchg
movb
pop
test
pop
adc
enter
cmpsl
repnz
cwtl
lds
mov
test
push
xchg
in
lea
rcll
push
sahf
enter
aas
jmp
dec
bound
or
inc
popa
out
pop
adc
stos
cmc
xchg
push
pop
outsb
nopl
inc
int
dec
rcl
iret
hlt
imul
push
stos
imul
ljmp
mov
cmc
and
mov
movsl
in
lods
vxorps
fcmovnb
mov
sti
bound
push
icebp
out
in
inc
leave
cli
cmpsl
xor
jg
negb
aam
dec
ja
pop
and
pop
mov
push
and
movsb
mov
push
cmp
jge
dec
out
push
cmp
lods
sub
mov
sbb
in
mov
sub
jle
inc
sub
movsl
repnz
lahf
xlat
adc
sbb
sahf
sbb
stc
and
std
daa
and
lock
mov
cli
mov
mov
es
cwtl
lds
push
fs
sbb
je
xorl
dec
sbb
repz
fmull
in
insb
test
fsubrl
stc
icebp
inc
ss
jns
daa
cmc
loope
jge
cld
daa
in
cmpsb
xchg
loope
sub
into
cltd
inc
lods
cmc
aam
inc
shrb
pop
add
cltd
pusha
and
rolb
xor
cli
scas
gs
mov
into
push
add
mov
pop
mov
jg
sarb
inc
and
aad
arpl
jns
into
and
arpl
das
jp
mov
hlt
out
fsts
mov
or
mov
aad
lds
fidivrl
jno
xor
pop
jbe
add
add
out
mov
into
mov
fisttps
lods
shl
cmp
out
mov
jne
pushf
push
add
inc
insl
pusha
dec
and
inc
and
ror
js
test
rolb
arpl
mov
int
inc
popf
icebp
cmp
das
mov
bound
dec
out
jbe
mov
call
pop
cmpsl
insl
lds
in
das
jecxz
mov
mov
popa
loope
add
or
rcll
pop
lock
lods
xor
pop
aaa
pop
cs
test
push
out
mov
arpl
in
sbb
clc
int
test
sub
dec
cmp
movsl
jo
lret
or
into
pop
insw
xor
mov
add
jb
add
test
dec
leave
inc
jle
test
lahf
cmpsb
mov
push
in
mov
je
xorl
pop
ret
jns
jae
push
mov
movsl
cmpsb
jbe
pinsrw
jbe
ror
sahf
add
enter
and
xchg
xchg
mov
xchg
sbb
xchg
sub
sti
das
ret
andb
bound
sti
les
sti
neg
mov
bound
add
lret
dec
ret
sub
xor
loop
add
add
sub
dec
mov
cwtl
xchg
mov
jmp
and
and
jle
mov
sub
add
inc
in
pop
sub
dec
and
notb
arpl
xor
in
mov
dec
scas
or
pop
das
sbb
popa
movsl
xchg
jmp
xor
call
add
fdivl
cmp
imul
shl
aam
xchg
push
outsl
sbb
sti
xchg
stos
sub
pop
sbb
xchg
pop
inc
cltd
jnp
testl
xchg
mov
push
pop
push
lock
mov
or
fadds
insl
cmp
dec
clc
or
pop
jno
in
xor
adc
inc
cli
sbb
subb
sbb
hlt
xchg
clc
push
test
sahf
out
mov
inc
mov
call
hlt
mov
and
mov
cwtl
jnp
cmpsb
call
xchg
enter
dec
sub
insl
jl
andb
inc
into
mov
lods
imul
test
fildl
rcrb
cmp
stos
loopne
push
cld
ds
jecxz
pop
xor
push
push
jno
cmp
cmp
pop
in
pop
mov
pusha
cmp
mov
cld
bound
push
outsl
mov
arpl
sbb
dec
pusha
add
xchg
rcl
out
lret
ret
jge
out
cmpsl
in
pop
add
xlat
test
mov
clc
into
js
adc
sub
pop
lods
jae
sbb
xchg
cli
mov
call
push
cmpsl
cmp
mov
movsb
lret
mov
les
negb
int
mov
outsl
mov
inc
and
dec
jge
or
xor
fisubrs
mov
sbbb
sbb
shll
movsl
mov
pop
test
push
xor
adc
cmp
push
call
or
adc
shr
shl
clc
mov
jae
jnp
movsb
ja
lds
dec
in
inc
insl
aas
fldcw
test
cmp
jle
jge
popf
int
jb
icebp
jae
fists
int3
mov
cmp
cltd
xor
js
sub
iret
fwait
fmull
sbb
flds
int
mov
and
cmp
sub
ja
insb
fldl
pop
jge
xchg
push
aad
mov
cmp
xor
in
or
rorl
loopne
push
in
inc
adc
jle
lahf
sub
pop
in
cmpsb
jecxz
stos
mov
pop
test
clc
sbb
xchg
adc
jle
or
dec
out
inc
arpl
mov
jmp
jnp
test
outsl
loope
mov
scas
out
push
das
or
cmp
psrld
aam
roll
sub
rcrl
fildl
xchg
cmpps
mov
mov
xchg
cwtl
add
stc
ljmp
loop
hlt
jle
loope
in
or
add
lahf
orb
sti
fldcw
sub
add
cmpsl
mov
fdivr
aam
dec
or
cld
scas
shl
loope
mul
mov
dec
push
mov
add
xchg
xchg
ja
mov
adc
mov
jle
fmuls
pop
cmp
repz
fisttps
ret
out
and
fildl
cs
sub
rolb
pop
ss
mov
mov
shl
mov
inc
pusha
lds
dec
hlt
mul
jo
mov
rcr
cmp
push
mov
rcrb
ds
xor
xor
xor
and
pop
mov
cmp
jle
mov
or
pop
sub
lret
in
cld
shlb
lret
jns
adc
mov
and
ret
scas
nop
mov
inc
gs
enter
mov
pop
push
movb
mulps
lea
xchg
adc
mov
stos
xlat
stos
movl
fildll
xchg
dec
mov
jnp
inc
jge
call
ret
inc
xor
imul
jg
dec
mov
sbb
xchg
aaa
pusha
mov
mov
cmp
mov
data16
mov
fs
jmp
or
mov
ds
hlt
test
sti
pop
aam
aad
sbb
sbb
enter
push
adc
dec
mov
xor
loopne
cld
adc
mov
mov
push
inc
and
movsl
shll
shrl
xchg
pop
mov
jbe
or
mov
add
test
add
jno
pop
sbb
xor
pop
shrb
fwait
arpl
cmp
pop
add
sbb
cmp
cmp
mov
xorl
push
clc
loop
outsl
xchg
pop
adc
mov
jle
shlb
add
rclb
dec
jbe
test
stos
int
dec
int
xor
mov
leave
cwtl
ficompl
nop
idivb
sbb
call
scas
scas
jmp
dec
pusha
cmp
mov
dec
mov
pop
sbb
aas
aaa
mov
stos
jnp
jne
cmc
rorl
cmp
xor
push
mov
push
hlt
test
pushf
cmp
in
cmp
lret
pop
and
add
flds
xlat
lret
push
outsb
loopne
aam
xchg
xor
cmpsb
xor
inc
fnsave
sbb
sub
push
pop
lret
push
cli
aaa
mov
pop
lcall
jg
cli
dec
aam
xor
sti
pushf
mov
and
cmp
adc
and
test
xchg
jns
clc
mov
add
add
add
pushf
xchg
iret
jl
mov
pop
pop
add
inc
adc
sbb
or
sub
pushf
test
lcall
push
daa
fucompp
cmp
scas
ret
lds
cmpl
push
push
pop
pop
mov
push
aad
add
movsl
add
repz
sbb
xchg
cmp
sbb
or
xchg
in
mov
dec
sbb
mov
sub
arpl
iret
mov
lea
push
outsb
sti
sbb
cmp
add
sar
out
and
xor
xor
mov
jmp
mov
and
imull
mov
push
shr
mov
into
push
and
stc
push
movsb
loop
dec
sub
fwait
jo
mov
loope
dec
jnp
mov
mov
jns
inc
enter
xchg
cmpsb
mov
mov
fs
xchg
cwtl
fdivl
dec
or
adc
dec
xchg
push
call
sub
jecxz
jmp
xor
mov
push
insb
inc
xchg
pop
popf
ja
fs
xor
movsb
pop
mov
outsl
inc
lcall
xchg
out
xchg
jne
shlb
cmp
stc
mov
add
push
aam
mov
rcrb
sbbl
jg
push
push
lret
jb
sub
lret
sub
cmc
in
jb
pushf
es
js
int
dec
or
fmuls
or
cmp
xor
into
mov
into
dec
pop
mov
int
xor
ds
stos
fdivr
ret
addb
mov
or
xchg
arpl
and
in
push
cmp
in
pop
notl
mov
popa
cmpsl
xchg
or
jecxz
in
add
xchg
lret
icebp
rol
dec
and
jmp
jnp
or
cmpsl
push
js
rolb
cmpsb
mov
pop
fisubl
jno
cmpl
mov
dec
pop
cs
and
push
pop
jl
push
lods
push
ljmp
hlt
or
inc
mov
clc
addl
mov
lods
ljmp
add
sub
add
cmpsb
cmp
cmp
xor
data16
xchg
jge,pn
add
cs
xchg
fadds
jno
mov
loope
push
fsub
lret
mov
enter
jp
or
test
fisubrs
cmp
xchg
loopne
scas
ret
push
popa
outsl
leave
sub
jns
sbb
into
mov
sub
out
icebp
mov
loopne
cmp
pop
aam
inc
xor
xchg
lods
popa
lock
jo
scas
jno
je
test
push
int3
sbb
jp
sub
in
mov
sahf
xchg
rol
or
lret
jo
mov
dec
push
dec
and
jb
ds
iret
pop
icebp
leave
mov
dec
pop
fcompl
fwait
imul
push
adc
jg
ss
and
adc
sahf
ds
jle
aad
mov
aam
in
addr16
in
push
push
or
movsl
cmp
ljmp
mov
push
movsb
xor
mov
sub
lock
sbb
je
rcr
xlat
jle
mov
fsts
stos
or
das
ss
negl
inc
movsb
cmp
outsl
and
pusha
fidivrl
sub
mov
test
jbe
rcr
dec
fsubrl
jge
jmp
dec
push
xor
lahf
pop
outsb
jnp
jne
fldt
add
test
fs
dec
dec
cmp
pop
xor
or
jns
sarl
xchg
sti
arpl
pusha
je
jno
dec
mov
adc
sub
mov
xchg
ja
int3
aaa
dec
pop
icebp
mov
lds
scas
add
sbb
add
mov
ds
pop
push
mov
loop
sub
inc
mov
aam
jo
mov
lcall
cmp
cmp
adc
outsl
push
je
ds
cmc
loope
int3
roll
jmp
scas
stos
pop
clc
out
or
dec
sub
movsb
repz
mov
jecxz
lds
ja
repnz
mov
dec
add
fadd
gs
inc
and
sbb
cmp
cmp
popf
test
lds
out
pop
lods
push
sbb
loop
add
cmpsl
mov
inc
cmpl
aas
mov
insb
inc
add
or
jle
adc
dec
lds
jnp
pop
mov
and
adc
fyl2x
addr16
cmc
mov
imul
mov
sahf
cmp
lods
xchg
addb
xor
xchg
xchg
pop
shl
lahf
xchg
push
pop
roll
jno
data16
ret
repnz
dec
dec
push
xor
cmpsb
adc
scas
mov
push
and
cli
rcl
cs
sub
sbb
jl
lcall
cmp
mov
pop
popf
sub
das
pop
xor
mov
push
ds
sub
lock
stos
rol
shl
inc
fidivs
cmp
xor
out
mov
jae
rcrl
pop
ficoms
in
rcrb
and
mov
push
daa
ror
mov
adc
clc
mov
jecxz
xorb
jl
scas
stos
dec
jbe
pushf
adc
test
enter
clc
int3
into
cld
cmp
jo
jne
pop
addr16
add
mov
push
pop
les
pop
xchg
test
inc
mov
into
dec
sbb
movsl
xchg
enter
pop
jb
ret
adc
xchg
stos
out
push
pop
pop
pushf
popa
jbe
pop
inc
or
int3
aad
or
and
jg
imul
mov
sbb
fsubp
pop
dec
aad
xor
aam
int3
push
into
or
bound
inc
and
sbb
mov
push
movsl
jmp
das
insb
pop
cmp
pop
jo
sub
mov
mov
xchg
pop
jge
adc
ds
fwait
scas
xor
jp
xchg
mov
aaa
xchg
push
jo
mov
ret
lret
mov
sbb
pop
sub
push
mov
xor
push
mul
push
std
mov
repnz
aaa
mov
sahf
shr
cmp
sbb
sbb
movsl
decb
mov
lods
mov
lcall
lcall
int3
pop
jg
js
cli
decl
cs
dec
xchg
or
stos
pusha
fnstenv
sbb
enter
into
mov
enter
imul
inc
xchg
in
dec
mov
ret
add
addr16
cs
lods
pop
xchg
je
jne
dec
push
jle
sbb
test
xor
ret
cmp
cmp
imul
leave
lcall
outsl
outsl
insb
lods
jne
mov
adc
xor
out
repz
movsl
insb
add
leave
push
inc
and
imul
out
or
jb
xacquire
cmp
add
jg
inc
jno
xor
ret
xor
inc
movsb
imul
inc
sub
jb
int3
cmp
xchg
out
push
shl
fldt
fnstenv
stc
and
pop
lds
outsb
in
dec
cli
cmp
pop
inc
loopne
test
xchg
jmp
mov
test
push
mov
fwait
outsl
jo
lahf
xor
lahf
pop
pop
sbb
pop
jge
add
cmc
out
loop
out
int3
sti
dec
int3
test
cmp
pop
lock
stc
call
cmc
mov
outsl
test
aaa
push
inc
sbb
fs
cmp
push
aaa
call
dec
popf
mov
cmp
cmpsb
mov
jo
sbb
cmp
inc
dec
add
inc
mov
lar
movsl
testl
sbb
xor
jns
mov
and
push
sub
fnstcw
out
adc
aas
dec
dec
jne
xor
fnsetpm(287
mov
popa
cmp
sti
jl
sbb
mov
sub
push
clc
mov
cltd
push
adc
xor
jmp
sbb
add
sub
cmp
push
pusha
adc
aam
mov
icebp
pop
and
fucom
jbe
xchg
or
mov
and
push
xorl
outsl
cli
repnz
lea
pop
and
xchg
cld
add
lret
sbbl
mov
mov
lahf
adc
shlb
sbb
push
mov
clc
icebp
or
sbb
push
xor
push
adc
mov
cmc
mov
movsl
dec
sub
pusha
sub
int
inc
stc
mov
add
clc
ss
jecxz
mov
into
adcb
stc
mov
insb
in
out
arpl
adc
hlt
pushf
push
jb
xchg
test
mov
xlat
lods
adc
or
push
cltd
stos
xchg
std
dec
loopne
movsb
xor
jae
push
xchg
pop
or
dec
cltd
roll
xchg
arpl
sbb
in
xor
lret
movsl
cmp
add
std
and
pop
jmp
insl
in
inc
addb
adc
fdivrs
lock
or
jmp
outsl
dec
xchg
or
adc
cld
and
and
ja
lds
cmp
cwtl
lahf
xorb
sahf
or
push
inc
push
sbb
out
outsl
cmpsl
mov
lods
sbb
imul
push
xchg
mov
or
insl
push
test
jmp
push
inc
sub
mov
inc
xor
pushf
adc
inc
repz
xor
popf
or
test
mov
xorb
lods
mov
aad
or
cmp
das
iret
adc
or
insb
sbb
sbb
repnz
sbb
jl
push
dec
add
call
mov
fsubp
jo
dec
cmp
repnz
and
mov
inc
cmp
lea
aaa
xchg
and
jbe
fwait
jmp
out
xor
aaa
jp
in
das
push
test
cld
or
add
cmp
loope
mov
push
sbb
inc
jns
jne
cmpsl
push
xchg
dec
mov
out
pop
push
test
int
cltd
out
dec
push
mov
fwait
lods
xor
mov
mov
mov
dec
adc
push
and
shrb
outsb
push
adc
lods
je
lcall
scas
xchg
jg
call
xchg
and
fmul
daa
mov
jecxz
or
cwtl
mov
add
loope
push
add
sti
fbstp
test
xchg
hlt
pop
lcall
pusha
cld
scas
push
cwtl
mov
dec
adc
pushf
push
xlat
cmp
or
lock
or
popf
loopne
repnz
jae
or
out
pop
aaa
adc
add
inc
fldt
xchg
test
and
leave
inc
adc
lock
imul
neg
mov
icebp
adc
xchg
mov
inc
les
and
pop
add
fstpl
pop
adc
loopne
sbb
and
aam
mov
sbb
cmp
adc
jo
sbb
loopne
shlb
jo
xchg
nop
lea
push
mov
xor
mov
popa
cld
mov
imul
add
push
pop
fidivl
dec
inc
cwtl
sahf
pusha
push
cs
fidivs
movsb
jno
or
cli
jns
pop
out
cmpsl
mov
sbb
push
fsubrl
adc
cmp
mov
cmp
xchg
fwait
imul
sub
jmp
cwtl
and
insl
cltd
int3
sub
jne
xchg
cmpsl
sub
push
insb
loop
mov
mov
shll
sbb
ljmp
dec
mov
lahf
push
sarl
fldenv
scas
icebp
or
xchg
jnp
add
iret
cmp
mov
int
mov
or
sub
lret
mov
xchg
cmpsl
and
xor
fdivrs
sahf
insl
notl
add
or
cli
add
shrb
sub
xchg
int3
fiaddl
mov
outsl
pop
and
cmp
in
mov
and
cmp
jns
mov
and
jp
jg
lods
mov
sub
cmc
jns
cmpsl
cmpsb
fcomps
clc
pop
push
movsl
int
in
adc
sbb
fistpl
mov
or
adc
loopne
adc
inc
mov
mov
dec
pop
adc
add
jmp
es
xchg
and
or
xor
and
jnp
and
mov
cmpsb
lret
push
and
cltd
insl
or
inc
notl
out
xchg
inc
and
jg
icebp
sbb
adc
add
inc
mov
mov
mov
xchg
mov
and
aam
aaa
sub
add
inc
lcall
sub
push
addr16
shll
mov
adc
scas
or
jecxz
or
adc
iret
pop
pusha
push
cwtl
add
pop
fwait
popf
insb
dec
ret
inc
mov
movsl
jb
mov
xchg
je
mov
xchg
mov
inc
dec
jne
and
mov
sub
adc
pop
aad
dec
cmp
mov
push
pop
nop
mov
in
dec
je
mov
mov
loope
call
xchg
sbb
aas
sub
jp
mov
xchg
mov
mov
movsb
adc
push
inc
mov
data16
movsb
les
adc
inc
insb
mov
imul
add
lcall
pop
pop
cmpsb
fs
stos
jns
out
aad
mov
xchg
lahf
insb
imul
jl
loope
push
sub
add
icebp
movsl
push
push
js
xchg
movsb
mov
cmpsl
aad
or
testl
push
fldl
jmp
into
in
cmp
dec
rcll
xor
xchg
das
out
cmpsl
adc
dec
popa
jg
mov
jae
xor
inc
in
arpl
cs
cs
jo
fcom
in
sbb
bound
push
xor
lahf
xchg
mov
mov
out
jns
and
push
mov
stc
scas
sbb
aas
pop
adc
sbb
xor
dec
out
mov
aam
inc
mov
cld
push
test
movsb
push
in
shll
mov
adc
or
inc
adc
insl
mov
cmp
std
push
xchg
leave
sbb
ret
push
loope
inc
int3
jg
mov
movsl
mov
test
cmc
or
push
pop
inc
inc
out
cmp
push
mov
push
je
xchg
adc
adc
sbb
lods
ljmp
test
cmpsb
inc
fisubrs
sbb
dec
push
adc
in
and
int
mov
scas
inc
test
jmp
sbb
cmpsl
shlb
orl
jmp
int
hlt
mov
mov
loope
push
xorb
cmc
xchg
inc
mov
or
push
jp
das
mov
lods
repz
pop
test
mov
lock
popa
aam
mov
xor
insl
imull
jae
arpl
jp
cltd
adc
adc
dec
out
and
mov
out
add
or
ror
in
pop
lahf
xor
fsts
pop
aam
mov
cmp
sti
jo
lock
cmc
or
and
lods
enter
xor
xor
jmp
xchg
mov
xchg
add
cmc
std
icebp
jecxz
leave
arpl
fs
insl
xchg
jne
ss
mov
dec
stc
jbe
or
lcall
pop
stc
out
loope
add
adc
xor
aaa
cmc
loopne
mov
jne
dec
fsts
test
sahf
ds
aam
clc
pop
fiaddl
enter
lds
call
pusha
xchg
cmp
inc
stos
pushf
and
pusha
cltd
inc
inc
or
push
jbe
cwtl
bound
fwait
daa
dec
xchg
data16
mov
pop
inc
pop
out
push
ror
out
jne
lret
lock
lods
xchg
int3
mov
push
loope
xchg
cmc
add
push
dec
pop
arpl
ret
push
ret
cmpsl
shlb
xor
ret
pop
leave
fistps
and
ja
sub
fadds
repnz
scas
and
fistpl
add
popf
das
mov
aam
roll
js
mov
cmpsl
cmp
repz
fwait
lret
div
inc
xor
test
daa
adc
sbb
mov
sarb
jns
mov
sub
lods
add
dec
xchg
xor
ror
add
test
shrl
inc
sbb
aaa
cmp
jno
inc
pop
clc
or
xor
xchg
or
push
pop
xor
mov
int
scas
mov
push
scas
adc
and
push
arpl
push
dec
or
movsb
or
sbb
dec
fdivl
inc
ds
mov
lcall
insl
pop
jns
dec
ret
push
sub
xor
push
test
sub
jp
ret
xor
mov
call
mov
jbe
scas
imull
inc
jmp
and
jl
and
es
jnp
mov
in
or
cmp
jnp
jmp
xchg
adc
push
das
movsb
inc
stos
jmp
les
push
lea
repz
xchg
mov
sub
mov
sbb
jle
fisttpll
aam
xchg
dec
mov
jbe
mov
dec
mov
push
sbb
mov
and
and
jo
adc
or
shlb
popa
jecxz
test
ja
cli
int
sbb
sbb
repz
pop
mov
xchg
and
sub
adc
sar
sub
daa
jl
fidivl
cmp
and
jl
pop
fidivs
imul
fldcw
mov
in
aam
dec
test
jo
out
sbb
in
aad
jae
pop
repnz
cmp
inc
ss
fwait
outsb
jle
jg
jbe
je
pop
or
push
lret
sti
addr16
jecxz
push
cmp
cli
or
dec
inc
cli
fldt
int3
pop
repz
lret
xchg
mov
sbb
push
in
push
jno
mov
or
popa
and
or
lret
scas
js
fstpt
movsb
es
test
or
pop
out
mov
lods
jge
sarl
mov
repnz
imul
cld
adc
adc
jb
into
ja
jne
mov
xchg
fs
mov
scas
repz
fdivrs
aam
pop
cmp
sub
push
arpl
clc
lahf
push
cmc
cs
ds
fcomip
call
sbb
fsubrl
mov
enter
add
jge
icebp
and
cmc
test
sub
add
sbb
lea
movsb
scas
daa
xlat
and
lock
fwait
xchg
clc
pop
mov
lcall
add
push
sub
dec
push
mov
mov
dec
pop
xor
sahf
or
push
xchg
imul
stos
pusha
sbb
mov
jo
mov
stc
mov
aas
push
mov
outsl
or
lds
lahf
sti
xchg
scas
push
pop
out
push
lods
add
jle
mov
pop
jae
push
push
ret
in
cmpsl
cld
pop
xchg
xchg
mull
inc
fidivl
mov
inc
ss
test
push
rolb
mov
inc
jp
inc
adc
jbe
push
fs
lods
jb
pushf
jge
cmp
jecxz
sbb
iret
push
insl
lods
and
and
int3
dec
mov
in
cmp
stos
ret
leave
cmp
or
pop
dec
mov
loop
gs
fmul
dec
pushf
or
icebp
inc
adc
mov
adc
into
jae,pn
imul
push
xor
aaa
lcall
cltd
insb
daa
cld
sbb
into
mov
lea
mov
jg
xor
sub
nop
in
sbb
push
jnp
dec
jl
pop
inc
mov
xchg
ficomps
jae
and
popa
ret
lds
dec
jle
or
xchg
rcrl
pusha
inc
adc
popf
loop
popf
scas
nop
adc
cmpsl
pop
cmpsb
mov
fisubs
mov
ret
pop
and
stos
mov
enter
push
or
jge
outsl
je
icebp
add
mov
and
mov
sti
jl
rorb
testb
imul
mov
loopne
push
data16
mov
jns
jns
cs
dec
mov
dec
ds
jge
imul
cwtl
stos
mov
mov
inc
xchg
out
fbld
jg
and
xchg
mov
lea
icebp
mov
rorb
pop
sahf
pop
in
gs
repz
pop
sbb
cmpsb
in
and
into
add
jmp
fsubp
stc
jp
adc
out
jb
lret
fidivrs
push
icebp
add
cmp
repnz
fwait
jecxz
mov
mov
mov
mov
shrb
shrl
orl
shlb
mov
mov
outsb
pop
mov
lea
inc
adc
or
push
mov
jo
add
lcall
xchg
pop
das
nop
add
es
and
adc
or
jle
js
in
testl
cmpsb
xchg
ret
sub
lds
or
add
fcmove
repnz
add
icebp
out
push
mov
sbb
xor
pop
int
fiadds
sbb
mov
mov
cmc
int3
js
xor
mov
push
push
dec
mov
icebp
in
cmc
inc
xlat
imul
pop
sub
jno
pop
insb
cs
xchg
push
dec
test
cmpsb
insb
cltd
into
repz
int
cmp
sbb
out
je
adc
jne
jo
mov
nop
int3
sti
out
sti
and
pop
les
lock
fs
push
jnp
sbb
ljmp
ljmp
push
cmc
xchg
aad
loope
push
scas
adc
and
jle
cmp
adc
icebp
movsl
sahf
push
repz
andl
or
call
es
dec
xor
popa
adc
xchg
les
fidivrs
sub
or
ljmp
into
jl
jge
jne
cmp
dec
lods
and
sbb
jmp
mov
decb
push
call
fadds
iret
jnp
sbbl
dec
cmp
repz
adc
or
js
xchg
arpl
add
dec
in
cmp
aas
push
je
test
xchg
outsb
data16
leave
xchg
pop
mov
mov
xchg
xor
push
sbb
ret
xchg
mov
push
dec
subb
mov
faddl
xchg
mulb
jnp
or
adc
pop
andl
lds
je
ljmp
or
inc
enter
les
xchg
and
fsubr
xor
push
loop
aas
test
inc
lahf
adc
aaa
mov
mov
push
sarb
ror
pop
xchg
cmp
cmp
cltd
sar
sbb
loopne
insb
scas
xlat
cwtl
inc
push
push
mov
int3
sarl
lods
aam
out
nop
enter
add
inc
pop
xchg
mov
cmp
add
xor
sarl
cmp
not
dec
in
xlat
dec
dec
lcall
sbb
mov
jo
les
ja
mov
js
ljmp
push
ja
mov
cmp
mov
dec
mov
sub
cwtl
jp
jnp
out
add
mov
les
sub
push
mov
cmpsl
decb
pop
dec
mov
mov
fsubr
jns
mov
and
cmp
pop
dec
lret
sub
jmp
js
popf
xchg
add
ljmp
mov
pusha
fwait
cmc
xchg
pop
sbb
rorl
pop
ss
cmp
cmp
pop
insb
pop
adc
inc
es
xchg
jmp
pop
mov
mov
mov
xchg
call
push
notl
mov
cmp
jmp
and
jo
lds
das
cld
pusha
add
addr16
mov
out
repnz
je
test
push
iret
add
cmp
popl
mov
sub
xchg
in
leave
ja
cmp
scas
sub
mov
out
adc
or
mov
jno
icebp
and
push
aaa
insb
fdivrl
mov
jl
or
ljmp
test
xchg
pop
leave
icebp
and
or
xchg
or
xor
jno
cmp
sub
ja
or
add
ljmp
iret
mov
or
push
subl
scas
out
dec
xchg
adc
out
push
fs
pop
mov
add
fsubrl
add
sub
xchg
mov
testl
out
stos
cli
push
pop
xchg
mov
pop
add
dec
test
dec
add
jno
movsb
sbb
lcall
push
aam
sarb
movsl
xor
lret
mov
cmc
lock
popf
lock
add
pop
out
push
pop
out
movsb
inc
push
dec
push
xchg
or
rcll
jle
loop
dec
sbb
push
in
mov
xor
pop
jecxz
xchg
or
push
push
data16
in
add
xchg
sbb
mov
sub
push
jmp
xor
mov
sbb
push
dec
leave
sbb
mov
or
jo
loope
stos
cmp
jg
sub
aas
jnp
mov
in
fdivl
mov
xchg
mov
and
cmp
in
mov
lods
mov
add
ret
leave
inc
lret
cmc
clc
int
ficompl
push
and
sbb
inc
les
dec
mov
adc
std
add
cmp
imul
in
mov
popf
add
sub
jl
sbb
mov
push
adc
adc
das
jns
or
out
fbld
loop
in
sbb
or
ret
sbb
int
xor
sub
fdivrl
adc
icebp
fwait
adc
outsb
mov
das
cmp
pop
pop
inc
aas
mov
andl
pop
ss
movsl
repnz
add
jno
imulb
ljmp
outsl
or
sbb
jecxz
xchg
xchg
rorl
mov
xchg
sbb
movsb
pop
sahf
incl
es
cmp
imull
fidivrl
out
ret
push
mov
test
aad
pushl
pushf
insb
push
cmp
repnz
cli
aad
sub
idivb
and
dec
or
and
xor
push
push
mov
adc
push
iret
and
std
fistpll
sarl
xor
clc
mov
movsl
inc
push
cmp
xor
sbb
and
pop
mov
mov
mov
mov
jle
outsb
sbb
mov
rorb
sbb
aas
pop
add
inc
cwtl
out
jl
sbb
ljmp
jae
mov
pop
cli
ficompl
call
sbb
xor
shlb
push
jle
pand
jno
push
es
sub
rol
out
loopne
mov
jo
movsb
jle
push
movl
jbe
pop
adc
mov
lret
leave
inc
mov
mov
xchg
fidivrl
push
adc
inc
push
jmp
je
lret
or
xor
cmp
test
mov
fstps
jae
mov
adc
jno
mov
adc
pcmpeqw
dec
repnz
dec
lock
and
decw
dec
arpl
test
fists
test
sub
mov
xchg
cmp
xchg
or
in
sbb
test
cmp
punpckldq
mov
add
jbe
sbb
lods
adc
adc
add
in
push
jo
adc
dec
shrl
lcall
pop
outsb
xchg
adc
xchg
ja
jo
fs
and
pop
xchg
sub
cmc
pop
out
lea
xlat
adc
cli
cli
adcb
shlb
in
popf
cmpsl
bound
sbb
mov
lret
inc
jae
add
rolb
stos
sbb
push
sub
sub
fistpll
aaa
sub
adc
and
inc
sbb
mov
les
inc
push
jb
mov
pusha
mov
jp
push
lcall
enter
loop
mov
dec
and
pop
jp
lock
xchg
iret
xchg
lret
mov
sub
ds
push
mov
pop
jbe
ja
mov
sub
loop
enter
faddp
mov
out
in
cmp
call
aad
test
mov
add
ljmp
movsl
stc
fldt
xchg
out
mov
xchg
adc
into
xor
lods
dec
pop
dec
das
cld
cmc
pusha
jle
adc
jp
or
adcb
push
inc
jmp
push
faddl
stos
imull
xlat
aaa
push
jnp
adc
mov
jge
lcall
cmc
mov
mov
in
xor
fldenv
inc
gs
inc
stos
fs
sbb
lods
mov
inc
fsubrl
xor
movsb
into
xchg
jne
sahf
mov
xchg
shlb
loope
js
push
in
in
dec
shll
fildll
lods
jb
mov
mov
mov
nop
icebp
mov
mov
dec
mov
repnz
xchg
enter
push
dec
fld
mov
jmp
bound
mov
push
aam
lret
icebp
ja
decb
addl
lcall
test
subl
jnp
insl
ret
jns
adc
xchg
and
stos
push
mov
or
shll
and
push
lea
mov
xor
jns
jae
mov
mov
test
mov
popa
dec
mov
jne
test
mov
push
pop
xchg
add
rcl
insl
inc
insb
mov
addl
popa
iret
enter
or
mov
adcl
mov
fistps
pop
cmpsl
test
daa
in
fdivrs
cmp
rcrb
inc
mov
jg
fwait
nop
test
lds
frstor
mov
mov
cltd
mov
outsb
ret
shl
xchg
xchg
int3
push
mull
ret
jne
xor
out
adc
sahf
cmpsb
into
imul
push
out
inc
rorb
jno
xchg
jp
add
jp
popa
push
shll
jge
lea
pop
mov
cltd
loopne
xchg
and
adc
adc
cwtl
inc
shlb
push
stc
push
cmp
addr16
sub
jmp
pushf
xchg
xor
jecxz
jmp
pop
fwait
mov
add
rcrb
shlb
out
sbb
out
pushf
add
dec
ds
cli
jp
pop
arpl
lea
mov
test
enter
and
pop
and
xchg
bound
mov
jle
or
adc
xchg
sbb
lds
mov
add
mov
sub
lcall
es
add
je
jno
loope
add
outsb
and
fiaddl
lock
in
mov
mov
add
adc
xor
mov
pushf
xor
jge
dec
adc
pextrw
inc
gs
and
jmp
icebp
daa
adc
and
and
add
inc
xor
jp
cmpsb
add
mov
ror
push
sub
or
mov
mov
push
sarl
push
xchg
lahf
mov
aam
mov
aam
lahf
mov
push
jns
lods
sbb
push
test
push
vaddsubpd
xchg
push
inc
sbb
mov
and
pop
push
aas
lret
push
fildl
and
in
rcr
loope
icebp
rcl
xchg
int
xchg
lds
dec
push
push
lods
push
jmp
jecxz
cli
pop
cmpb
rclb
pop
imul
pop
mov
stos
les
xor
das
ss
cmpb
xor
in
dec
dec
push
test
jmp
cs
pop
xchg
in
je
dec
insb
mov
mov
jne
dec
dec
clc
sub
int
fbld
stc
test
mov
push
push
jno
ret
cmp
pusha
dec
mov
jge
cmp
push
mov
lret
push
xchg
and
in
loop
sub
pop
push
test
jl
cltd
aaa
pop
call
in
dec
lahf
dec
rol
inc
int3
dec
adc
push
cmpb
adc
packsswb
roll
inc
mulb
divl
mov
xchg
xchg
xchg
rcl
out
add
or
cmp
int
inc
pop
mov
data16
dec
fisubrl
pop
sti
movsb
popa
jnp
icebp
punpcklwd
xlat
lahf
dec
rorb
fs
pop
mov
nop
sti
xchg
in
fistl
fimuls
mov
jg
gs
push
out
adc
js
pop
adc
nop
scas
in
repz
orb
js
out
jnp
xor
dec
cmp
cmpsb
or
mov
addb
mov
pop
adc
mov
and
push
sbb
jb
xor
jp
popf
dec
loopne
inc
int
aad
jnp
dec
addr16
fisubl
test
xorb
shr
std
lock
add
mov
and
stos
jle
and
push
cmpsb
and
xor
arpl
das
mov
dec
jo
dec
jl
cli
sbb
jmp
mov
sub
dec
push
por
xlat
mov
scas
push
cmp
aaa
leave
movsl
cmp
fwait
or
sbb
mov
jp
and
lret
je
sbb
xchg
dec
scas
jg
sbb
clc
adc
jo
mov
int3
mov
sbb
fbstp
in
inc
pop
inc
adc
sub
out
adc
push
xchg
add
inc
xor
or
pushf
fidivs
push
aas
gs
add
test
andb
enter
push
mov
sbb
push
cmp
rcl
inc
push
jge
inc
in
sti
pusha
cmc
pop
sub
pop
sarb
or
adc
push
cld
pop
cmp
push
pop
adc
mov
fimull
lods
insl
xchg
sahf
rol
mov
push
fwait
mov
daa
subb
jb
cli
adc
push
mov
ffreep
mov
les
cmpb
div
add
scas
in
mov
jno
ja
pop
cwtl
je
sbb
es
pop
mov
xchg
cli
xlat
bound
add
jo
lahf
mov
push
adc
pop
dec
int
pop
xchg
adc
sbb
sub
mov
addr16
lock
pop
fdivrl
dec
mov
or
iret
mov
les
sti
popa
test
mov
incb
fcmovnu
mov
out
cmp
xlat
sub
imul
cmc
movsl
and
fidivrl
scas
sahf
int3
stc
ret
mov
jno
insb
and
cmpsb
push
and
mov
xor
std
adcb
pop
fs
outsl
mov
lcall
repz
mov
lea
sbb
sti
das
jne
mov
and
mov
mov
es
mov
in
and
jmp
pop
xchg
xor
cld
and
je
sahf
xchg
sbb
out
mov
pop
orb
arpl
pop
cltd
int3
dec
repz
ja
mov
inc
insl
sbb
loop
mov
cld
scas
test
mov
xor
fprem1
cmpsl
jge
jbe
jbe
outsb
xlat
push
je
in
push
bswap
icebp
mov
outsb
jl
daa
adc
in
insl
xchg
jae
testb
or
je
mov
inc
out
and
aad
notb
xchg
std
xor
test
out
mov
dec
jmp
push
lds
mov
int3
inc
aas
test
dec
push
pop
push
loopne
ret
fs
jp
or
bound
ljmp
test
push
jo
rcl
cs
dec
mov
out
or
mov
sbb
dec
cli
lea
cmp
jnp
test
mov
jl
out
sbb
dec
aaa
imul
push
les
xor
mov
xor
lods
adc
fldl
mov
push
or
xchg
ficompl
and
pop
xor
xchg
and
pop
adc
push
adc
mov
pop
jmp
xchg
mov
fisubl
sub
scas
outsl
fidivs
push
sbb
test
es
gs
iret
arpl
push
insl
sub
sbb
mov
lods
mov
sbb
and
add
or
stos
pusha
in
test
movsb
jo
in
push
and
mov
rcrl
jmp
in
xor
mov
mov
aam
add
incl
stos
dec
cmc
cltd
sbbl
clc
insb
pop
out
adc
stc
enter
insl
pop
mov
push
mov
lea
xor
pushf
daa
mov
mov
enter
push
push
push
daa
aad
xchg
cli
inc
inc
xor
cmp
and
xchg
push
mov
loop
mov
xchg
pop
push
mov
inc
and
jae
and
mov
inc
pop
sahf
clc
pop
std
mov
adc
call
adc
xchg
and
into
adc
inc
mov
aaa
or
adc
stos
add
lea
cmp
mov
dec
cmp
jb,pt
scas
les
rolb
sbb
pop
repz
xchg
pop
and
aaa
pop
jle
fwait
add
ret
mov
fildll
cli
pop
xchg
or
mov
clc
mov
jmp
out
pop
je
jecxz
dec
ljmp
iret
push
and
pop
pop
cs
xor
adc
fcmovbe
push
cmpsb
and
out
or
imul
pop
scas
cmp
mov
jg
mov
push
cmpb
mov
mov
int3
xor
cld
mov
cmp
bound
adc
pop
cmp
adc
aas
nop
lods
movsb
and
pop
mov
popf
mov
jecxz
mov
test
sbb
dec
lcall
sahf
and
dec
dec
pop
pop
out
lea
gs
int3
enter
pop
sbbl
sub
inc
dec
xchg
pusha
or
pusha
fimuls
fisttps
bound
insb
sti
ljmp
add
jae
sbb
std
ret
inc
lahf
clc
mov
cmp
popf
sbb
pusha
jl
in
and
loop
nop
aam
fistl
push
add
sbb
loop
popf
xchg
sub
jbe
inc
iret
or
subb
xchg
mov
add
scas
notl
sub
xlat
inc
repz
cmp
bswap
jmp
ss
imul
lcall
mov
hlt
mov
and
mov
rol
sub
push
in
gs
inc
pop
cld
nop
add
pop
mov
cmp
jns
cmpsl
and
push
jne
jecxz
xor
leave
pop
xor
lods
jae
jnp
mov
xchg
test
jle
aam
lock
es
ja
daa
lahf
sahf
jge
or
sahf
mov
call
mov
imul
adc
mov
pop
push
shr
pushf
and
dec
jmp
es
and
sbb
test
mov
icebp
repnz
shl
sub
push
ljmp
xor
int
adc
sub
fsts
movsb
icebp
cmp
sub
or
cld
pop
mov
cltd
push
mov
push
shll
sub
pusha
cmpsb
rorl
and
je
or
scas
pop
jle
sbb
xor
sub
lahf
in
inc
notl
cmpl
psubb
push
ret
xchg
cmc
sbb
xchg
clc
xchg
outsl
std
jecxz
out
mov
ret
jo
fsubrl
gs
in
jmp
sahf
jp
lea
mov
pop
imul
inc
sahf
xorl
es
in
or
mov
lock
in
fidivrl
mov
dec
xor
mov
rcrl
and
dec
pmulhuw
fnstcw
test
test
aas
mov
loopne
lcall
inc
aam
ffreep
and
fildll
ret
xor
cmp
ret
xor
fisubs
lods
popf
packuswb
shll
inc
jo,pt
mov
test
cmpsl
jno
movb
loope
fwait
sub
push
jp
daa
inc
push
movl
sahf
imul
fwait
in
sbbl
mov
pop
jle
and
push
mov
ret
outsb
pop
out
das
inc
fcmovnb
lcallw
pop
out
or
repnz
fwait
inc
push
sbb
adc
cmp
pop
stos
mov
add
and
lea
pop
iret
pushf
daa
xor
scas
pop
sub
imulb
or
movsb
insb
lcall
push
rcrl
xorb
pop
xchg
mov
cmp
dec
in
sbb
lods
fwait
lret
sbb
jmp
iret
dec
arpl
dec
aas
push
mov
add
negl
xchg
orl
pop
add
lahf
imul
cmpsb
mov
lock
xor
addr16
adc
rcr
popf
push
lock
cltd
cld
dec
pop
int
in
popa
push
lahf
adc
sbb
xor
cwtl
xchg
repnz
lcall
aad
into
and
sbb
jmp
jns
movzbl
xchg
ret
mov
push
movsl
mov
fsts
push
sub
push
in
pushf
jp
inc
mov
pop
mov
pop
xor
ja
dec
or
cmp
lock
jmp
int3
call
arpl
cmp
aas
pop
mov
xchg
xchg
cmp
and
sbb
popa
sub
add
sbb
xchg
mov
xchg
sahf
pop
pop
les
iret
cmp
mov
dec
pop
xor
in
xchg
js
cmpsb
fs
lret
fstpl
dec
jp
popf
je
xor
push
lods
adc
cmp
sub
repnz
movsb
mov
xor
int
pop
jecxz
push
push
sar
mov
and
sbb
pop
decb
mov
add
stos
fwait
adc
add
mov
jg
dec
fbstp
jl
test
xchg
inc
insb
clc
out
xchg
adc
mov
adc
popa
nop
ljmp
adcb
dec
push
lret
hlt
movsb
shll
cmp
jns
das
fldl2e
push
xor
idiv
imulb
and
negl
scas
jbe
test
inc
mov
mov
insl
les
or
dec
cmp
fdivr
dec
xchg
rcrb
jbe
jle
ja
mov
lea
dec
mov
mov
pop
ret
shlb
jle
out
cwtl
pop
and
flds
incb
je
xchg
imul
jo
dec
mov
jl
andl
jb
jo
sbb
xor
jne
movsb
scas
pop
adc
mov
inc
push
insl
mov
inc
pop
cmp
pop
test
xchg
and
addb
pop
int3
std
ds
test
cwtl
imul
out
adc
in
pop
movsb
mov
push
xchg
and
cmpl
data16
dec
xor
push
push
das
dec
and
xor
mov
mov
rorl
adc
xchg
enter
inc
push
pop
imul
lea
lods
add
or
jo
js
add
fisttps
jae
or
xchg
cltd
xor
jnp
push
mov
and
les
sub
mov
test
stc
jle
lahf
pop
xchg
insb
push
pop
mov
sbb
ret
sub
sbb
jmp
cmpsl
mov
ret
or
push
lret
sarl
loopne
in
mov
inc
aaa
inc
inc
sub
pop
cmpsl
cmp
or
xorl
nop
cmpsl
cmp
fwait
rorb
arpl
sbbb
add
dec
push
and
cmp
aaa
repz
arpl
int
mov
mov
or
xor
mov
inc
fwait
in
lret
aas
sub
mov
mov
jne
push
movsb
or
xor
sbb
pop
cmpb
in
mov
std
push
inc
es
cmp
in
sbb
and
sub
and
in
fsts
das
sbb
cmp
insl
push
leave
cmpsb
or
ds
das
int3
das
xchg
cli
jecxz
scas
negl
add
xlat
fwait
lods
loopne
mov
sub
jl
ret
std
mov
add
adc
subl
inc
mov
and
in
std
incb
cmp
lock
pop
dec
fsts
movsl
sub
adc
imul
push
xlat
nop
pushf
ss
pop
jl
rcrb
cmp
jmp
rcrl
insb
lock
fnstenv
jns
les
les
mov
incb
in
lcall
gs
or
mov
and
add
sbb
je
lds
adc
aas
mov
rorl
add
cmp
cmpsl
shl
push
pop
jb
sub
sahf
mov
cmp
bound
out
mov
in
push
shr
sbb
sti
bound
sbb
das
loop
ror
out
imul
sahf
and
mov
jo
xchg
and
jo
and
cmp
fwait
push
cs
jno
cmc
xchg
and
ret
test
dec
rol
insb
enter
mov
in
sub
or
movsb
pop
cmp
fldt
dec
xor
cmp
cmpsb
inc
jo
push
cmpsl
inc
add
stc
dec
insb
pop
jmp
xchg
and
jmp
out
push
jecxz
ja
dec
mov
adc
mov
push
mov
inc
fwait
cmp
stc
in
pop
adc
mov
or
xor
jno
adc
inc
inc
mov
xor
mov
sbb
inc
sub
pop
fsts
pop
out
dec
stc
imul
jmp
inc
pop
dec
dec
push
and
sub
or
pushf
inc
psllw
xchg
pmuludq
push
in
adc
lods
lret
pop
sub
push
or
dec
cmp
lret
dec
or
fwait
xchg
mov
rcrb
sub
jl
repz
jge
pop
xor
nop
pop
add
aad
xchg
cmpsl
cmc
pop
leave
aas
popf
sub
and
movsl
push
mov
jnp
pop
xchg
mov
out
cmp
dec
mov
pop
jo
inc
xchg
ret
jge
mov
adc
sub
in
enter
mov
push
les
icebp
and
leave
mov
xor
stos
fistps
pop
xchg
fidivl
sub
xor
and
jns
lret
shl
cmpsl
testb
addr16
push
into
xchg
push
iret
rorl
dec
das
leave
inc
sbb
inc
out
sub
adcl
bswap
inc
mov
inc
movsl
fcoms
stos
daa
inc
fidivs
mov
call
mov
test
rcrl
out
imul
imul
fisubs
cld
pusha
cmc
test
sbb
pop
mov
mov
dec
push
xor
lcall
inc
xchg
pop
pusha
pop
rclb
mov
hlt
test
filds
sbb
fbstp
enter
dec
clc
aas
sub
mov
jae
cmpsl
and
xor
out
clc
mov
jne
mov
jne
arpl
mov
mov
icebp
das
cltd
pop
mov
cmpl
jl
dec
std
xchg
jg
icebp
sbbl
andb
jnp
js
xor
loope
call
xor
into
jecxz
inc
subl
push
mov
fistpl
sub
flds
lcall
push
fsub
pop
ret
cmc
lds
aad
pop
sbb
hlt
lods
pop
dec
jnp
cs
idiv
xor
lret
fstpl
scas
scas
fisttps
adc
mov
sub
movsl
dec
sbb
leave
pop
shll
jle
push
adc
lcall
aaa
jns
jl
test
or
sbb
cmpsl
pop
pusha
inc
mov
add
inc
sbb
mov
xor
jno
div
mov
out
sub
shrl
or
daa
scas
ja
insl
in
pushf
jecxz
icebp
lock
and
mov
inc
mov
out
jmp
jmp
cmc
dec
sub
pusha
mov
sub
movl
movsb
fldl
push
and
xor
insb
outsb
test
loopne
and
push
fnstenv
ss
or
cmpsb
push
outsl
das
pop
inc
ds
jg
jae
xchg
push
or
pop
xchg
dec
mov
push
imul
fbstp
test
daa
add
popa
fisubl
or
push
xor
aam
out
mov
call
inc
pop
pop
scas
out
shlb
mov
push
out
mov
clc
enter
cmpsb
shlb
adc
mov
and
sub
cmp
fstpt
insl
xorl
lea
cli
iret
roll
lods
add
adc
adc
jp
test
mov
push
dec
repz
shll
popa
imul
or
insl
add
jno
push
aas
imul
pop
loopne
mov
pcmpeqd
xchg
aaa
popf
in
xchg
mov
je
leave
je
cmp
mov
mov
dec
dec
inc
das
daa
loope
mov
push
imul
push
outsl
movsb
jnp
and
arpl
rolb
inc
mov
mov
mov
scas
pop
ds
jae
dec
in
test
or
iret
pop
lret
sbb
or
jns
inc
nop
adc
faddl
clc
fcos
xor
in
add
and
int3
add
pop
rol
add
jmp
stos
jo
xchg
xchg
cmpl
pop
shr
ret
stos
lods
daa
lods
lods
or
loopne
clc
cmp
cltd
mov
jno
out
test
cmp
dec
or
mov
pop
stc
add
inc
movsb
incl
ja
xchg
or
sub
fcmovbe
jne
jl
jbe
fisubrs
add
mov
loopne
mov
jmp
push
push
stos
xchg
in
in
fstl
movsb
lods
xchg
stc
sbb
or
or
mov
cmp
call
aam
pushf
sub
mov
in
sub
sub
fwait
xchg
sub
mov
js
cmp
pushl
stos
iret
loop
pop
loopne
sub
mov
add
xor
std
iret
cmp
cmp
mov
sbb
in
data16
inc
pushf
leave
and
xchg
or
aas
xor
mov
pusha
mov
push
push
push
cli
mov
push
repnz
nop
imul
je
push
dec
lea
and
mov
jo
out
sub
dec
gs
or
lds
push
lods
js
lret
mov
faddp
or
mov
add
lcall
test
push
sbb
std
imul
mov
cltd
setb
mov
inc
ss
les
or
ljmp
fldl
loopne
call
mov
mov
roll
scas
inc
popa
bound
mov
fbld
inc
adc
mov
data16
cmp
fcmovnbe
xor
mov
lds
dec
ss
mov
int3
fwait
movsb
add
or
sub
sahf
xchg
aad
adc
in
loop
frstor
out
mov
aam
mov
mov
adc
sub
sbb
sub
sub
shll
mov
fcomp
adc
mov
jb
out
cmp
in
mov
movsl
jne
cwtl
or
cmc
dec
push
jno
aam
stos
lahf
cmp
popa
mov
mov
cmp
xchg
fldcw
mov
icebp
dec
arpl
cmc
and
orl
icebp
xor
mov
popa
pop
mov
cmp
pusha
test
push
cli
fs
dec
scas
mov
outsl
int3
lahf
shlb
mov
adcl
mov
add
and
sbb
insl
pushf
pop
loope
xor
sub
xchg
adc
dec
in
repz
pop
pop
push
test
mov
out
sub
test
inc
mov
xor
adc
cmp
lods
xlat
and
rclb
add
sbb
pop
cs
and
lcall
jns
mov
mov
hlt
icebp
jp
insl
inc
js
mov
outsl
dec
pusha
sub
lret
inc
sbb
insl
xor
mov
repz
ss
rcll
mov
jge
lds
ret
cmp
pop
pop
push
sub
sbb
cmp
addps
ret
test
jb
in
les
out
push
test
jge
pop
popf
inc
mov
add
scas
out
mov
sub
lcall
pushf
pop
mov
orb
cltd
cmp
mov
in
and
popf
fucomp
sbb
sbb
xor
inc
les
add
mov
pushf
lahf
or
loope
fsubs
pop
leave
lods
or
stos
jns
pop
and
movsb
xor
test
add
jno
pop
jle
mov
pushf
cmp
popf
cmpsl
scas
and
adc
data16
jno
rorb
mov
mull
lock
jns
add
das
xor
sbb
sbb
add
inc
cmp
and
andb
fisttpl
pop
test
jb
adc
lods
xchg
fs
sub
mov
dec
movsb
cmp
mov
sub
pusha
jge
or
mov
jns
jmp
push
leave
pop
lock
in
mov
aad
mov
xchg
pop
out
scas
dec
out
lret
movsl
pop
loope
inc
and
sbbl
andl
cmp
cmpl
loop
ds
cltd
stc
int
jmp
mov
je
push
shlb
mov
ret
or
xchg
sbb
xor
add
lock
or
sahf
outsl
inc
lret
mov
and
stos
daa
mov
push
or
lret
fnstcw
pop
xor
dec
addl
mov
fwait
mov
mov
and
test
sub
lret
int3
adc
pop
sti
mov
pop
out
fldt
sahf
bound
lods
and
adc
inc
sarb
and
aaa
aad
aas
mov
add
jge
test
mov
fs
xor
aaa
popa
sti
mov
mov
xchg
mov
ret
xor
push
cmp
push
sarl
adc
inc
sub
cmp
aam
into
mov
xchg
std
cmp
mov
push
cmp
xor
scas
adcb
dec
xor
adc
and
fwait
sub
mov
loope
push
sbb
scas
sub
xchg
sub
add
cmp
aas
jle
mov
xchg
mov
movsb
test
adc
in
outsl
roll
mov
jo
mov
ficoms
adc
jnp
lock
push
push
cmp
loop
mov
and
push
bt
mov
lods
ja
add
ja
out
sbb
jbe
inc
and
daa
fld
lret
out
xor
mov
or
aas
fsub
push
xchg
xor
int
xor
or
mov
mov
sti
out
repnz
lea
jmp
insl
test
int
imulb
pop
rcr
std
loope
jo
pop
jb
cli
xor
iret
je
or
xor
add
bound
push
cmp
test
ret
jne
test
bound
cmc
cmp
and
mov
add
das
stos
xor
cmpsb
push
sbb
je
daa
dec
pop
iret
mov
pop
int
or
pop
test
data16
repnz
popw
shrl
das
cltd
popf
pushf
jp
insb
loop
addr16
dec
sub
or
and
add
pop
xchg
mov
cmp
pop
call
not
dec
stos
push
inc
test
rolb
nop
dec
imul
jne
dec
arpl
lahf
mov
cmc
pop
fimuls
pop
add
out
cli
push
inc
inc
insb
das
pop
mov
dec
mov
mov
add
or
inc
mov
push
mov
mov
popf
lods
fisubs
loopne
pop
push
repz
sub
inc
xor
mov
push
mulb
lret
loopne
lds
sbb
fstpl
and
stos
movd
or
lahf
lret
push
dec
std
or
insl
lea
popa
pop
pop
jns
fstps
push
sbb
out
xchg
daa
add
jmp
jp
mov
cmove
jae
fucomi
mov
movsl
sarl
jl
lds
cltd
sbb
xlat
dec
inc
fiaddl
xchg
bound
cmp
inc
xchg
jno
cmp
jnp
mov
xchg
jl
xor
xchg
dec
in
cmp
shl
aam
push
sti
aaa
gs
test
jecxz
jae
pop
push
mov
and
int
int
jb
xchg
in
aam
orl
stos
arpl
mov
xorl
aam
sbb
or
mov
or
pusha
call
jno
sbb
xlat
scas
mov
loopne
mov
xor
mov
fistl
mov
fwait
xor
sahf
out
bound
test
lods
sub
and
stos
mov
ror
xor
adc
add
pushf
adc
mov
jae
cltd
sbb
and
mov
ljmp
add
or
mov
imull
test
aas
dec
lods
adc
cmp
lods
xor
hlt
movsl
hlt
jp
sub
call
push
push
insb
js
fnstcw
xchg
addr16
push
fwait
sbb
pop
sbb
xchg
inc
sbb
stos
rolb
mov
aas
jmp
cli
and
sub
adc
shl
jg
mov
jmp
imul
mov
fcmovb
outsl
mov
ljmp
loop
dec
rcll
out
loopne
ljmp
cmp
cmpsl
addb
add
sbb
cs
jo
out
jmp
jns
pushf
jle
shlb
cmpsl
lret
mov
gs
call
cmc
or
subl
aad
cmp
leave
lods
daa
outsb
pop
push
dec
insb
and
clc
bound
xchg
scas
cwtl
or
inc
jg
jns
stos
fstps
push
ss
call
xor
mov
cmp
loope
insb
rcrl
mov
movsl
pop
rcrb
sub
aad
or
enter
inc
hlt
repnz
outsl
rorb
mov
inc
push
or
xchg
fldt
sub
push
add
sarl
stos
jno
xchg
call
add
jmp
lods
in
nop
ljmp
sbb
sbb
xorb
sbb
repnz
int3
adc
out
xchg
jbe
push
fdivr
pop
pop
dec
xchg
push
and
shlb
fdiv
aad
aaa
inc
inc
mov
in
sbb
adc
sahf
outsb
mov
xor
jle
cmp
xorl
push
int
cmpsb
push
dec
mov
enter
xor
push
shrl
xchg
xlat
roll
sbb
out
lods
xchg
enter
insb
data16
movl
adc
mov
jbe
xchg
cmc
cmp
imul
ficomps
inc
xorl
sub
xchg
jmp
in
push
push
or
cli
mov
sti
arpl
add
rcrb
sti
ficoms
cli
jge
rep
push
or
iret
inc
adcl
imul
in
outsl
in
xchg
adc
mov
push
lods
mov
je
into
jne
or
add
repnz
stos
aad
cmp
mov
and
nop
int3
rorb
cmp
jecxz
sbb
sahf
and
out
aas
pop
ret
cmp
mov
pop
cmp
test
sub
sahf
outsl
clc
enter
mov
les
movsb
fwait
lods
loopne
mov
movsl
inc
jp
xor
jp
ljmp
ds
xchg
lods
mov
dec
cld
aaa
sbb
mov
bound
shrb
jle
jns
cmpsl
cmp
scas
imul
xor
dec
and
add
pop
dec
mov
idivb
fstl
in
aaa
mov
mov
faddl
inc
mov
shrb
inc
pop
aaa
imul
sub
rcr
jo
js
and
xor
mov
inc
xchg
mov
adc
or
popf
xchg
and
mov
test
clc
aam
aaa
jecxz
mov
test
shll
dec
aad
mov
xchg
push
dec
dec
repnz
pop
jne
or
push
mov
or
and
mov
xchg
lcall
lret
sbb
outsb
sub
test
in
call
cmp
sbb
mov
rcpps
scas
and
mov
dec
dec
int
cld
cmp
ret
aas
inc
cwtl
xchg
mov
push
add
lret
mov
ja
mov
sbb
in
jg
pushf
aaa
mov
ficomps
flds
or
mov
xchg
or
push
out
xchg
jp
sahf
ffree
int3
sbb
pusha
iret
in
mov
inc
mov
inc
xchg
xor
sbb
xor
jb
mov
movsb
pop
inc
or
jae
scas
sub
cmp
sub
inc
xor
add
push
iret
out
rcrb
loopne
pop
fbstp
xchg
sub
in
arpl
xlat
xchg
fld
mov
aaa
in
sbb
push
and
add
fbld
in
loopne
jae
arpl
push
jne
xor
ss
lods
insl
ja
sub
sbb
fdivrs
jb
ljmp
test
xor
inc
scas
jge
aam
mov
jbe
ret
scas
xor
aaa
pop
mov
or
pop
jno
mov
lahf
xorl
loop
xor
stos
mov
cmp
in
push
cwtl
sbb
cmp
rol
jecxz
mov
xchg
insb
lods
or
jg
std
ljmp
and
mov
repz
mov
pop
xlat
sbb
loope
jne
stc
addr16
out
pusha
add
into
lahf
mov
push
or
sub
ds
jbe
ja
mov
pop
push
leave
shlb
scas
pop
out
loope
dec
nop
dec
in
fisubrl
inc
push
lahf
xchg
pop
rorl
sbb
call
sub
mov
dec
int3
stc
rcrl
icebp
pop
add
pusha
enter
xchg
cmp
add
mov
push
push
out
fld
mov
ret
fcomps
fldl
sbb
das
cmpsl
addr16
push
movsl
sti
sub
lahf
or
in
adc
mov
push
outsl
pop
cmp
inc
dec
and
sahf
roll
shl
sub
lret
adc
mov
fwait
xlat
pop
into
jmp
dec
pop
into
pusha
data16
jae
outsb
inc
xor
pop
xchg
aad
push
add
xchg
xor
or
pop
and
test
in
pop
xchg
sbb
push
shll
jl
divb
inc
sahf
test
xchg
cmp
pop
xor
or
pop
and
add
dec
iret
fidivrs
sub
je
push
mov
add
pop
popf
rcl
cmp
push
jno
addr16
jp
outsb
in
jae
sbb
jo
jo
cmp
outsb
xchg
pop
rol
xor
lock
sub
sbb
cld
test
dec
or
mov
loop
sub
mov
lods
scas
in
pop
out
jnp
std
sub
imul
jmp
dec
inc
rorl
or
cmp
pusha
subb
pop
mov
rcll
jge
jne
int3
cmp
lock
xor
pop
inc
shrl
dec
xor
add
xchg
jns
pop
lahf
mov
xchg
in
pop
int3
int3
mov
jp
ret
cmp
sarb
repnz
ljmp
lds
mov
mov
mov
jg
out
sub
adc
dec
stos
xor
fwait
gs
cmpb
inc
or
arpl
fsubrs
dec
popl
stc
sahf
push
inc
sar
inc
lret
js
repz
sub
lret
shll
inc
inc
repnz
xor
inc
pop
es
mov
mov
icebp
jns
add
cmp
aam
push
mov
loop
test
inc
or
cmpsl
dec
adc
ficoms
das
repz
sub
and
xchg
int3
iret
cwtl
and
and
jecxz,pn
dec
ss
add
in
inc
adc
jge
lcall
movsb
or
fstpl
mov
inc
sbbl
dec
insb
std
lods
adc
movnti
cmpsl
sbb
lret
sub
out
faddl
cwtl
inc
repnz
push
pusha
lods
cmp
mov
jae
jns
ja
mov
lcall
clc
inc
mov
sub
mov
call
sbb
push
cmpsb
test
xor
leave
push
jnp
out
aad
add
add
dec
jmp
rolb
cld
push
dec
in
orl
cmp
stc
mov
sub
stos
xchg
or
scas
repz
stc
frstor
push
repz
iret
lea
cmpsb
cld
int3
jnp
cmp
jmp
xchg
js
cmp
enter
aam
cmp
and
dec
daa
mov
jge
lock
cmc
push
lret
xchg
lea
stos
mov
outsl
xchg
sub
movb
ljmp
push
movsl
sarl
je
and
sub
fs
cs
xor
jbe
push
imul
leave
sub
mov
or
adc
xchg
jnp
aad
xor
inc
and
adc
repnz
outsb
in
cmp
lods
ja
add
fsubl
adcb
or
dec
sub
lret
fidivs
lea
imul
dec
fbstp
pushf
lahf
mov
xchg
in
push
int3
mov
roll
fidivrl
mov
aaa
mov
ljmp
test
repnz
pop
pmulhuw
mov
imulb
inc
xchg
js
cwtl
imul
mov
and
outsl
fidivrs
or
mov
mov
push
adc
and
mov
jb
add
loopne
leave
sub
pop
push
inc
push
loope
lret
leave
mov
es
rcrl
aam
cmp
subb
enter
mov
jmp
sbb
mov
push
inc
sbb
mov
fs
mov
cmp
xor
fiaddl
cs
addl
repz
mov
pop
or
jp
insb
sbb
jbe
adc
xchg
cmp
cmc
es
inc
pop
ret
rcll
xor
xchg
ss
xchg
sbb
fld
xor
pop
ljmp
and
arpl
popa
sbb
or
sahf
xchg
adc
inc
push
add
decl
sbb
imul
cltd
push
adc
pop
jle
adc
fs
and
pop
in
jecxz
push
adc
hlt
addr16
xor
adc
lea
push
out
vmread
movsb
mov
jmp
jp
sbb
cmc
adc
rclb
out
jns
push
pop
cmc
test
js
add
icebp
or
mov
xlat
adc
dec
fistpl
inc
shrb
fisubrl
pmaxub
mov
pop
jns
mov
bound
pop
rcl
scas
sti
movsl
fsub
lcall
or
into
roll
fsubr
sub
movsl
mov
xor
push
ret
aad
lea
test
jl
mov
test
adc
stc
insl
xchg
add
scas
pop
add
push
add
fisubl
out
out
int3
lahf
mov
popf
int
nop
int3
lcall
xor
jmp
sarl
xor
fwait
jo
in
js
jle
out
cwtl
push
dec
jle
mov
pop
push
das
dec
addr16
dec
xor
sbb
mov
mov
adc
and
jne
sbbl
cs
popf
icebp
into
outsl
pop
push
inc
cmp
test
adc
inc
inc
push
sub
inc
lret
jne
pop
lret
xor
mov
insb
xchg
shrl
xor
mov
call
mov
shlb
push
rcll
pop
mov
adc
into
ss
pushl
in
adc
stos
inc
mov
pop
cmp
lahf
and
sub
and
add
arpl
lret
outsb
pushf
faddl
mov
shl
xchg
roll
fmull
shlb
jge
test
int3
mov
mov
call
or
out
push
das
dec
in
xchg
test
out
sub
or
add
pushf
add
cmp
cli
cltd
xchg
and
popa
ret
insb
xor
mov
jge
or
lahf
cmp
ret
aaa
mov
add
mov
cmp
iret
leave
mov
dec
das
dec
sbb
and
sahf
lret
cmp
push
imul
test
mov
adc
xorb
jnp
test
icebp
mov
jmp
mov
inc
dec
rcl
mov
dec
xchg
jno
pop
inc
inc
fwait
inc
sbb
or
cmpsb
mov
mov
int3
and
daa
cmpsl
and
mov
in
adc
pop
movsb
pop
mov
jo
add
mov
imul
bound
fdivrs
insl
push
aas
xor
je
push
pushf
inc
movsl
lret
bound
dec
mov
xor
idiv
popf
push
or
mov
dec
xchg
loopne
dec
setl
xchg
mov
mov
pushl
dec
or
pop
aad
into
xchg
repnz
loop
lds
hlt
inc
cltd
std
pop
popa
outsl
mov
stc
adc
pop
adc
xchg
call
mov
mov
dec
pop
clc
mov
daa
mov
jno
outsb
imul
jmp
sub
inc
jmp
fistpll
call
sub
dec
and
mov
mov
sti
adc
loop
fnstsw
pop
mov
clc
xor
sub
cmp
imul
out
xor
sub
push
xchg
jp
cltd
cmc
pop
out
mov
xchg
and
xor
add
cmp
repz
or
and
jne
mov
xor
out
lods
push
std
sbb
sbb
sbb
aad
loop
lock
jecxz
push
cmp
fsubr
jg
aad
ja
negb
inc
jb
jns
fwait
push
or
pop
aad
cmp
outsb
xor
and
sub
mov
sub
xlat
lea
jno
pushf
std
jnp
jno,pt
xchg
mov
pop
fwait
imul
movsb
push
mov
and
inc
xchg
adc
mov
inc
iret
subl
fnstcw
and
mov
lock
xchg
imul
sbbb
mov
xor
lret
sbb
jne
pushf
lds
push
loop
push
int3
push
xchg
je
mov
lock
cli
ds
loop
push
inc
jp
mov
inc
and
add
pop
inc
mov
and
in
mov
push
mov
mov
dec
jg
xlat
cmp
cmpsb
lds
lret
mov
popf
add
loopne,pn
xor
std
mov
lret
or
jg
mov
sbb
shlb
jl
adc
rol
cmpl
pushl
dec
cltd
jbe
cmc
ds
imul
mov
add
jae
xorl
mov
test
jp
arpl
mov
mov
nop
rclb
test
ds
sub
xor
daa
mov
push
out
dec
imul
pop
enter
int3
adc
pop
jnp
leave
ljmp
clc
push
addb
hlt
mov
shll
sbb
lods
call
mov
rcrl
std
loope
fnsave
xchg
push
rclb
lods
test
and
adc
movsl
not
inc
popa
xchg
loop
sbb
arpl
ds
sub
pop
loop
xor
mov
push
xor
cs
es
les
jae
gs
arpl
inc
or
mov
loopne
and
push
scas
cs
scas
xchg
jg
xor
cmp
fistpl
rcrl
push
repz
cmp
sahf
adc
dec
mov
mov
xchg
xor
add
pop
les
sti
into
jg
inc
pop
dec
jp
aad
cs
mov
aam
idivb
mov
xor
test
jge
cmc
sbb
xchg
inc
jne
in
jne
js
movsl
js
xchg
adc
lods
push
add
cmpsl
lret
xor
and
iret
enter
ja
pop
sub
or
pushf
jecxz
aam
xchg
adc
inc
fwait
std
or
dec
mov
sub
cmpsl
adc
jp
std
hlt
loop
call
dec
jg
testl
fwait
mov
ss
pop
inc
mov
outsb
mov
fldt
xchg
push
mov
jp
lret
sub
sbb
jmp
sub
jl
scas
xchg
sub
dec
jle
incb
pop
test
ficompl
and
popf
sbb
lea
or
inc
lds
xchg
cwtl
icebp
loop
cltd
mov
mov
in
mov
mov
adc
jle
jmp
cwtl
xchg
mov
cmp
imul
sbb
leave
fcmovbe
cmp
dec
shrl
call
cld
xchg
xchg
test
roll
ljmp
mov
inc
loopne
pop
and
jnp
fisttps
inc
add
flds
cs
jns
sahf
aad
inc
xchg
cmpsl
adc
mov
push
lret
jne
js
inc
mov
imul
je
movsb
and
mov
cmp
lock
ret
push
out
aaa
gs
cmp
cld
sub
clc
mov
ja
push
sbb
es
gs
adc
cmp
xchg
xchg
add
adc
daa
cli
xchg
pop
or
adc
ss
mov
je
test
jno
ficompl
dec
imul
push
and
pushl
mov
mov
outsl
lret
add
jg
iret
pop
pop
addr16
cmp
adc
xor
mov
mov
lock
push
mov
xchg
leave
ss
fs
int3
leave
out
repnz
movsb
mov
hlt
loop
lahf
imul
int
daa
test
xor
repnz
mov
insb
sbb
jbe
lahf
cmpsl
pop
mov
cmp
into
repz
mov
add
fimull
daa
mov
xchg
xchg
test
cmp
aas
add
or
dec
or
mov
inc
mov
cld
xor
sbb
pop
pop
sub
jb
sub
add
cld
sub
sbb
scas
add
iret
notb
xchg
into
orps
xchg
add
loop
jmp
in
sbb
mov
aas
pop
ljmp
mov
jle
test
cmp
shrl
pusha
mov
sbb
jecxz
ret
add
jge
stos
add
in
dec
and
arpl
out
in
nop
jbe
dec
fisubs
cwtl
nop
pop
jl
pop
imul
lret
mov
dec
cmc
sub
pop
dec
push
push
fldt
dec
rclb
into
dec
xor
push
insl
cs
inc
add
xor
and
and
push
inc
pop
outsl
ret
add
flds
sbb
sbb
mov
imul
xor
and
lcall
cmp
sahf
pop
enter
outsl
sbb
outsl
fcomps
xchg
lock
adc
jge
ret
call
test
ss
sub
add
popa
out
adc
popf
mov
inc
pop
inc
and
out
sbb
std
inc
fxch
xchg
fistps
mov
scas
sbb
loope
sub
and
test
dec
repz
or
adc
jecxz
fdivrl
cmc
clc
es
mov
mov
mov
out
add
mov
ret
cmp
pop
inc
ja
test
addr16
jle
mov
sbb
cmp
fs
or
mov
pop
ror
in
pop
fsubl
pop
mov
jne
ja
into
sub
inc
clc
and
iret
and
mov
cmp
mov
orl
push
pop
rorl
dec
xchg
sbb
xlat
lock
out
push
pop
pop
in
inc
sarb
in
cld
jnp
in
std
xor
or
mov
push
aas
mov
push
aaa
mov
loop
gs
sub
jae,pn
adc
mov
sub
lock
repnz
addr16
jo
inc
xchg
ror
mov
mov
mov
or
sarb
xor
jne
dec
add
fwait
daa
fbld
mov
icebp
jle
push
push
andl
shrb
ret
in
imul
lcall
pop
jle
cmpsb
daa
sub
jns
pop
adc
inc
ret
mov
addr16
out
in
add
cli
shrl
xchg
adcl
ja
and
cld
sbb
scas
sub
and
jns
push
or
xchg
lahf
sbb
fwait
insl
jp
dec
into
xchg
mov
xchg
lret
or
mov
test
data16
aad
ljmp
jae
or
lahf
sub
ss
push
loopne
leave
mov
mov
mov
sbb
push
ljmp
fs
or
sbb
push
mov
push
jp
stos
add
scas
in
shll
push
addr16
push
mov
and
lods
icebp
xchg
lcall
fidivrl
nop
and
inc
xor
jns
xor
int
rcrb
js
push
add
mov
xor
sbb
out
jecxz
dec
lods
lods
rcrl
pop
add
scas
and
in
cld
and
loop
or
xchg
adc
cmp
adc
movsb
push
jo
addl
add
mov
push
ljmp
mov
pop
jmp
rcrl
push
loopne
add
incb
xchg
mov
sbb
mov
push
cwtl
cmp
push
aad
cmp
iret
xor
xchg
mov
pushf
mov
insl
xchg
sbb
clc
add
pop
rclb
inc
mov
rorl
rclb
cmpsl
xchg
outsl
out
mov
mov
mov
lods
xchg
sbb
mov
sbb
add
jno
nop
xchg
push
sbb
pop
xchg
sbb
rcl
inc
xorl
pop
fisubl
incb
jp
negb
jnp
and
and
sti
sub
arpl
pusha
cld
cmpsb
push
adc
adc
rorb
inc
cmc
and
inc
dec
xchg
or
test
repz
in
imul
or
pop
adc
movsl
fisubs
xor
or
sti
pop
clc
subl
jbe
loopne
mov
mov
inc
and
aam
ljmp
sbb
mov
push
pushl
add
shll
dec
jae
cmp
clc
fiadds
add
pop
or
dec
or
xor
pushl
adc
jne
stc
lret
cmp
push
or
inc
xchg
jg,pt
stos
mov
xlat
fsub
lods
pop
movsl
adc
sub
xor
lea
jmp
sbb
mov
mov
arpl
icebp
add
aas
mov
sahf
movsl
xchg
cmp
mov
sub
mov
lds
dec
or
cmp
fsubr
sub
gs
or
ret
das
dec
jl
loope
rcr
pop
add
nop
into
into
lock
xorl
dec
roll
clc
fdivrl
loopne
cmp
test
push
jmp
repnz
cs
addb
int
pop
int3
movsb
cld
mov
inc
pop
test
leave
xor
push
lea
add
sub
sub
and
xor
push
dec
into
mov
xor
mov
repz
cmpsl
ss
fsubs
and
mov
jl
push
clc
add
fldenv
pop
iret
mov
push
imul
outsl
dec
mov
out
sub
fidivrs
pop
sbb
lods
adc
sbb
ret
add
sbb
sub
divb
add
mul
push
jno
pop
fistps
imul
adc
jg
in
jecxz
lods
ret
xor
out
out
sarb
cmp
icebp
fldt
lret
push
arpl
or
shll
pusha
pop
xchg
inc
insb
mov
pop
xlat
pop
fbld
outsb
dec
pusha
jecxz
pushf
xchg
cmp
pop
mov
stc
or
dec
loop
add
subb
out
syscall
mov
sbb
mov
adc
sbb
jne
adc
std
sub
or
dec
jecxz
les
mov
stos
jp
inc
outsl
je
xor
mov
pop
inc
jb
push
mov
subb
dec
pop
or
fsubrl
cltd
dec
fimuls
and
jbe
jno
pop
pusha
pop
dec
lea
xchg
cmp
insb
loopne
ja
jae
xlat
lock
test
paddb
fmul
in
loop
mov
movsl
inc
ja
mov
or
push
xorb
scas
dec
sbb
inc
jns
inc
cli
je
loop
jle
push
jb
leave
jg
push
cwtl
sti
or
inc
cmp
mov
pushf
xor
pop
test
ror
in
sarl
lcall
cmp
pop
imul
dec
ret
pop
lret
jne
sbb
pushf
pop
cmp
push
aad
mov
ja
addr16
inc
or
inc
xchg
inc
cld
cmp
call
and
pop
jg
jmp
repz
fisubrs
xchg
data16
bnd
in
cld
mov
dec
dec
jns
cmpb
subl
and
push
pop
sbb
push
test
loop
push
mov
out
and
fistpll
ficomps
nop
mov
add
addr16
mov
push
lahf
xor
out
out
popa
inc
jbe
stc
hlt
loope
aaa
js
in
aaa
or
jl
push
insl
push
xor
sahf
push
testl
or
add
nop
pop
dec
xchg
and
inc
pop
int
in
lock
inc
test
ret
inc
or
xor
cmp
sub
arpl
ficoml
sub
pop
pop
mov
cld
imul
mov
movsb
and
rcrb
flds
mov
arpl
bound
clc
cmp
cltd
hlt
or
cmp
jge
adc
inc
jle
mov
push
mov
jbe
push
ja
sub
mov
xchg
xor
add
cmpsb
mov
int
jle
xor
incb
popa
mov
pop
dec
sbb
xchg
loope
sub
adc
int
push
in
add
fidivs
lods
fucomip
shll
jle
xchg
loop
cld
aas
and
pop
push
jecxz
and
test
xchg
mov
jo
jge
aaa
es
iret
inc
push
lods
sbb
mov
add
inc
rcrb
mov
or
mov
jle
mov
mov
adc
rcrl
cs
jbe
fmull
xchg
pop
ljmp
gs
fcmovnbe
cli
dec
inc
push
dec
arpl
lcall
inc
add
ljmp
push
xorb
mov
pusha
test
xorl
outsl
jbe
or
cmpb
push
dec
xchg
inc
and
fadds
sub
mov
xchg
ja
pop
sbb
aas
and
adc
dec
out
jne
mov
push
jns
arpl
ret
ret
add
lret
std
pop
call
mov
cwtl
ja
insb
xlat
add
push
jmp
test
xorl
shll
push
push
cld
aad
clc
lods
sub
cmpsb
movsl
or
xor
jge
pop
iret
xor
shlb
sub
cmp
add
loopne
lock
push
mov
ret
cmc
loope
jbe
in
mov
lods
adc
aad
cltd
into
hlt
xor
lret
cwtl
lods
movsl
mov
ljmp
xchg
cs
call
sub
cmpsl
jecxz
pop
test
inc
cld
mov
sbb
inc
aas
or
add
mov
enter
mov
lea
pop
add
je
sbb
fnstsw
cmpb
vpaddsw
imul
ficoml
pop
rclb
btc
mov
nop
out
ret
loop
jbe
jne
shl
xchg
out
into
mov
imul
adc
pop
push
fstpl
xor
xor
sub
or
or
sub
fildll
lock
rcll
shr
lret
das
int3
addr16
xor
mov
mov
fbld
mov
scas
ret
out
imul
femms
sar
jg,pt
mov
sbb
pusha
push
cmpsl
xor
popf
pop
arpl
mov
pusha
xchg
mov
in
or
roll
les
jmp
testb
sahf
int
gs
add
aad
dec
inc
sarl
inc
mov
ficompl
out
pop
stc
test
mov
mov
jae
dec
into
inc
add
inc
jl
orl
push
notl
in
push
push
xlat
daa
pusha
inc
jg
cmpsl
push
xor
in
adc
or
aam
test
xchg
mov
repnz
xor
jle
arpl
jno
in
jecxz
shrb
scas
add
mov
out
pop
pop
cmp
push
out
pop
stc
sarl
adc
imul
mov
sbb
lock
neg
pop
jg
aam
push
cmp
push
mov
mov
mov
movsb
jo
jo
sbb
xlat
pop
shll
mov
out
mov
jp
lds
mov
adc
inc
inc
jle
pop
and
jne
outsl
jb
nop
jmp
rorb
mov
mov
rclb
push
rolb
push
stc
jae
mov
add
test
xor
add
sub
add
mov
jg
pop
das
ret
pop
movsb
cmc
dec
cmp
fcompl
in
lcall
xchg
fdivr
lcall
inc
sbb
xor
mov
adc
pop
jb
adc
scas
pop
fcmovu
add
pop
and
mov
pop
sub
ljmp
sub
inc
lret
cltd
int
and
mov
in
and
jl
jae
outsb
jmp
loopne
in
jecxz
or
cmp
xchg
mov
lea
insl
loope
loope
xor
lods
adc
int
jbe
cmpsb
push
iret
fidivrl
xor
or
xchg
shll
sub
jle
mov
push
push
pusha
cmp
cltd
in
and
hlt
int3
repnz
jge
mov
jg
push
cld
add
dec
into
nop
xchg
inc
inc
addr16
push
and
gs
push
push
cmc
aad
or
insb
lea
dec
ds
xor
call
jns
push
aas
mov
mov
xchg
pop
mov
loop
jbe
fs
jge
add
in
out
adc
mov
jle
gs
into
mov
push
pop
mov
dec
xchg
sbb
dec
ljmp
sub
out
xorb
cmpb
pop
into
mov
scas
bound
pop
shll
mov
arpl
test
aaa
inc
js
je
cmp
pop
mov
push
xchg
std
and
mov
push
stc
mov
popf
xor
lahf
loopne
cs
jmp
pop
into
mov
les
loopne
pop
cmpl
dec
push
mov
out
cmp
mov
pop
data16
jg
ds
pop
shll
idivb
pushf
mov
cmp
lock
mov
xchg
movsl
xor
mov
or
movl
jp
sbb
outsb
out
pop
and
fidivrl
jg
leave
xor
pop
out
int3
scas
inc
mov
in
cmpsl
cmp
aad
outsl
fimull
xchg
mov
xor
loope
fisubl
sbb
insl
inc
xchg
pop
adc
daa
push
das
dec
mov
lea
popf
sbb
mov
outsb
popa
loopne
or
stos
or
gs
loope
je
test
lcall
rclb
sbb
xchg
xchg
or
testb
insl
call
mov
jl
jne
pop
aam
bound
push
inc
cltd
mov
hlt
mov
loopne
and
test
xchg
add
sub
jbe
adc
sub
dec
jle
inc
insb
pop
loopne
sbb
shrd
and
sbb
cltd
hlt
mov
in
loopne
xor
mov
cmpsb
arpl
lods
xlat
ds
dec
fmuls
push
push
mov
movd
fadd
lds
lds
sub
imul
lea
push
mulb
cmp
and
mov
and
add
mov
dec
lods
mov
jb
and
scas
adc
mov
mov
add
mov
sbb
jne
push
out
jg
repnz
cli
gs
add
hlt
sbb
call
scas
cwtl
lret
sub
sub
cmc
mull
lods
cmpsb
in
or
ss
sub
cmp
das
pop
lods
arpl
loop
mov
cmp
stos
jp
fdivrl
mov
cs
jns
test
inc
xchg
xchg
xchg
jo
push
call
fcomip
fistpl
hlt
orl
sbb
and
xor
in
ret
and
mov
pop
jmp
cmpsl
jnp
xchg
shlb
stos
es
in
mov
push
sbb
add
icebp
lods
fiadds
stos
xchg
pop
test
cmp
sub
sbb
jb
push
int
stc
jp
in
lock
jle
cli
add
cmp
ds
nop
es
lret
sahf
lods
jle
arpl
int
in
xchg
mov
orl
stos
xchg
xchg
adc
push
call
insb
mov
inc
jmp
cmp
test
roll
aaa
stc
mov
clc
jb
mov
dec
movsl
xchg
popf
sbb
pop
xor
push
sbb
jecxz
push
fnstenv
arpl
inc
mov
cli
mov
or
jae
mov
adc
sub
pushfw
notb
sbb
dec
mov
in
orb
xchg
cmp
mov
stos
aas
dec
inc
stos
je
push
sub
rclb
dec
mov
jle
sar
jmp
sti
lods
dec
out
pop
cs
lods
pop
sar
mov
mov
xor
mov
cmp
out
rorb
fimuls
fwait
xchg
cmp
bound
insb
inc
js
mov
out
cs
jg
or
imull
aas
test
push
sbbb
in
cmc
add
aas
xchg
adc
xchg
inc
jl
std
mov
jp
jo
daa
xchg
adc
into
rol
pop
mov
imul
sbb
adc
loopne
pop
fsubs
and
push
cmp
and
adc
sahf
adc
dec
sbb
lahf
inc
push
jge
xor
adc
mov
insb
xchg
ss
fiadds
nop
or
insb
ds
push
mov
cmpl
xor
dec
aad
pop
testb
sahf
or
popf
mov
sub
call
repz
lcall
fiadds
insl
loop
in
test
sbb
sti
add
cmp
lcall
fsubs
inc
jb
xchg
test
push
mulb
les
popf
mov
pop
daa
cmp
sarl
repnz
adc
mov
mov
shlb
sbb
inc
js
xor
lret
xchg
xchg
icebp
adcb
cmc
icebp
in
dec
or
outsb
mov
gs
jecxz
xor
or
sahf
les
and
movsb
dec
mov
mov
std
sbb
sbbl
fisubl
xchg
and
or
lret
pushf
push
sbb
popf
pop
in
dec
test
repz
lea
mov
mov
mov
lods
mov
les
cli
aad
mov
jae
push
jne
xor
xchg
inc
movsl
jae
rcrl
lods
xor
mov
mov
push
into
repz
pop
dec
dec
ret
jne
sub
out
push
push
xchg
dec
pop
jmp
aad
or
icebp
or
jbe
ss
jnp
mov
in
pop
stos
pop
cmp
ss
sbb
push
pushl
or
dec
add
cld
inc
mov
pop
adc
bound
aam
stc
out
dec
ret
mov
or
mov
sub
pushf
jo
movsl
pusha
inc
outsl
into
adc
mov
inc
adc
shlb
and
push
xor
insl
xor
pop
mov
outsl
incb
in
xlat
cmp
adc
jnp
xor
sbb
mov
cld
jae
push
bound
sub
les
jl
imul
dec
call
jecxz
add
push
push
cmpsb
sbb
lods
out
mov
pop
push
mov
add
lods
jl
mov
cltd
pop
push
ret
push
sti
mov
fnstsw
cmp
inc
xlat
out
shrl
xchg
adc
cs
lahf
cmpb
dec
insl
sub
mov
pop
xchg
cmpsl
or
pop
mov
call
sarl
inc
mov
jnp
jl
scas
pop
push
adc
fmulp
ret
dec
out
mov
out
xor
loope
add
ljmp
fidivl
sbb
jp
dec
mov
lock
in
push
fwait
push
sbb
in
gs
movsl
push
iret
xchg
sahf
int3
or
addr16
dec
sbb
sbb
dec
decl
jle
push
ss
and
cld
imul
enter
pop
clc
mov
movsl
sahf
cmpsb
inc
in
add
call
in
cmp
stos
lock
push
jge
add
in
pushf
mov
out
js
cmpsl
rolb
popa
or
lods
sbb
xchg
cmpsl
pop
sbb
jle
leave
mov
xchg
clc
lods
clc
jle
cmp
mov
cld
dec
jo
dec
xchg
rolb
test
in
push
mov
cmpsl
inc
xor
orb
jecxz
fwait
icebp
out
enter
repz
inc
test
adc
xchg
mov
shll
mov
add
cmp
add
scas
test
pop
aaa
mov
cmc
lods
jne
xlat
xchg
test
mov
mov
cwtl
lods
inc
jnp
test
gs
xchg
cltd
add
das
inc
pop
pop
sbb
pop
sub
sbb
les
mov
sub
jnp
daa
sbb
pop
xor
xor
sbb
jge
xchg
dec
call
cmovae
repz
and
scas
push
loope
shl
cmc
jmp
add
push
push
mov
xorb
and
mov
lods
mov
cmp
cmpsl
ss
push
aad
sahf
popa
sahf
pop
mov
mov
xor
pop
add
ret
push
jns
push
popf
add
scas
fisubs
jbe
jg
cmpsb
and
xchg
cmp
dec
add
mov
test
idivl
jg
mov
addr16
fstl
add
xlat
fnstsw
sub
add
enter
insb
mov
mov
jecxz
cmp
bound
data16
jg
icebp
pop
ja
jne
inc
mov
fsincos
mov
cmpb
mov
add
aaa
dec
xchg
idivl
test
jb
int
inc
cs
pop
in
adc
loop
and
dec
push
sbb
test
and
fstpl
cmp
iret
jno
test
and
imul
jge
idivb
adc
and
pop
insl
cmp
int
pop
push
cmp
adc
aad
or
repnz
inc
push
ds
and
lret
cmp
jle
insb
xor
les
mov
gs
cltd
fwait
xchg
negl
push
leave
scas
in
and
sbb
xchg
xor
test
mov
repnz
aaa
sti
jle
out
pop
push
sbb
or
loope
popa
mov
in
mul
mov
mov
mov
pop
mov
mov
ljmp
lahf
lahf
loop
xchg
out
in
push
in
push
adc
push
xchg
jbe
add
dec
adc
xchg
dec
add
sub
cmc
ljmp
push
push
shrb
jnp
and
bound
or
push
mov
aad
fistps
mov
sbb
sub
xor
fcoml
and
xor
out
popf
fs
js
adc
or
je
inc
movsl
push
pop
cmp
repz
loope
iret
enter
decb
rolb
sub
lods
into
andb
adc
mov
out
jl
int
or
mov
mov
inc
and
jg
pop
stos
je
push
mov
enter
dec
fwait
clc
push
jns
or
or
push
push
pushf
out
out
cmp
pop
pusha
adc
out
xchg
pop
push
push
fbstp
addb
in
mov
imul
xor
pop
dec
push
jo
sbbl
add
das
sub
gs
or
xor
sub
mov
jo
popf
loopne
mov
pop
jg
lods
std
mov
xchg
inc
adc
icebp
andb
movsb
push
push
ficoms
xchg
pop
sub
xchg
or
ret
fcompl
loopne
lahf
std
iret
sub
ja
mov
jmp
inc
sub
xchg
dec
cmp
out
and
xchg
out
adc
test
sub
or
shrl
std
out
xlat
addb
adc
out
js
jbe
xor
push
cltd
inc
sbb
pop
daa
lcall
out
sub
daa
jae
mov
mov
add
lds
jno
arpl
cmpsl
jb
std
mov
int
cs
or
decl
cmp
add
mov
inc
cmp
push
xchg
dec
cld
dec
mov
mov
pushl
cwtl
inc
stc
or
push
adc
cltd
stos
sub
dec
clc
and
bound
out
dec
mov
cmpl
in
pop
mov
mov
sub
inc
xor
add
pushf
leave
jnp
les
mov
in
cwtl
fldenv
fchs
push
and
aad
test
call
xchg
lods
cmp
mov
icebp
xchg
push
add
in
jno
add
jmp
xor
mov
xchg
fldcw
scas
cmp
subb
fldl2t
pop
call
out
adc
test
aad
or
jmp
imul
or
into
lret
add
mov
sarb
fwait
leave
call
popf
fildl
xchg
pop
fstpl
lret
mov
icebp
mov
add
xor
sbb
sub
lcall
cld
push
lock
mov
hlt
push
sub
push
lret
fisttpl
mul
mov
pop
jg
mov
loop
mov
mov
add
rcrl
jp
xchg
imul
dec
inc
cmp
add
pop
sbb
xchg
push
xchg
ss
pop
dec
lea
lods
lea
dec
cmpsl
jmp
js
repz
xor
iret
decl
cld
cltd
lret
icebp
adcb
ret
mov
xor
push
in
lcall
mov
insl
stos
sub
or
inc
mov
insl
add
test
add
ret
je
rorb
xchg
cld
mov
mov
loope
or
mov
ds
push
popa
or
inc
clc
lock
in
repnz
xchg
roll
mov
add
cmp
faddp
sbb
das
mov
dec
sbb
add
fistps
adc
sbb
in
mov
xchg
ja
add
imull
xor
sahf
mov
jg
jnp
outsl
cmp
push
inc
dec
mov
pop
jg
push
repnz
xchg
jns
cmp
mov
inc
loop
fnstsw
mov
adc
insl
in
xchg
stos
or
mov
cmp
mov
popf
lods
in
dec
aaa
lret
call
lahf
in
or
dec
test
cmp
mov
add
mov
inc
add
adc
mov
mov
lret
sbb
sub
fcompl
and
idiv
pushl
sub
mov
dec
dec
popf
or
test
in
xor
loope
rcl
fs
decb
in
jecxz
das
dec
mov
or
pop
jnp
popf
jmp
rcr
icebp
xchg
mov
ja
loopne
decb
and
data16
inc
lods
mov
jno
shl
shlb
xchg
mov
jae
pusha
jno
xor
imul
gs
mov
mov
arpl
or
rorb
lods
push
adc
push
sbb
mov
jo
cmp
mov
xchg
dec
add
stc
inc
and
in
popf
inc
jl
jl
mov
xchg
scas
ret
mov
pop
or
mov
idivb
adc
sarl
jge
add
ficoml
and
mov
inc
ret
and
xor
pop
mov
cmp
pop
mov
ljmp
mov
push
outsl
aas
cli
adc
popf
popw
cltd
roll
cmp
and
push
jmp
lcall
adc
jne
adc
push
clc
int
std
cmp
mov
lock
fbstp
dec
xor
mov
iret
jecxz
fsubrs
pop
out
pop
mov
xor
add
mov
xor
push
dec
int
and
jmp
loop
cmpsl
add
sub
mov
mov
xchg
imul
mov
fwait
pop
mov
jns
xor
fidivrs
pop
stos
in
mov
jp
sahf
xchg
mov
stc
pop
cwtl
adc
pop
ss
xchg
pop
fmull
push
mov
dec
out
fidivrl
std
sbb
fldenv
daa
fs
jb
push
jg
xlat
test
rclb
dec
fcomps
dec
rorb
inc
rol
or
adc
jmp
in
notb
pop
adc
push
out
cli
loopne
mov
mov
mov
stos
mov
xor
fbstp
cwtl
xchg
xchg
repnz
ret
mov
mov
cli
nop
dec
out
outsb
push
sub
sub
aaa
gs
and
push
pop
ror
jns
mov
cmp
in
sbb
mov
mov
sbb
lods
frstor
idivb
cli
xchg
or
or
adcb
data16
mov
jecxz
pop
dec
mov
pusha
sub
pop
jle
mov
inc
cmpl
repnz
mov
inc
movsb
adc
test
jg
outsb
jge
dec
jp
push
xchg
and
call
push
or
inc
xor
mov
int
in
and
add
outsb
adc
mov
cmp
or
jle
jg
es
jo
ljmp
xchg
sub
adcb
jb
aad
lods
adc
xchg
sbb
out
fs
and
mov
jmp
sub
and
ret
test
es
sub
iret
jno
insl
mov
out
gs
js
insl
xor
sbb
push
adc
imul
or
enter
sarb
xchg
push
cmp
xor
adc
jne
push
loopne
in
xor
in
fmuls
dec
dec
push
movsl
mov
mov
cltd
hlt
or
jmp
push
in
int
add
jns
fiaddl
pop
ljmp
and
mov
and
in
xor
cmp
lahf
cmp
mov
or
jbe
sub
dec
or
push
iret
pop
fsts
daa
test
scas
cmp
cmp
test
lcall
push
fcomps
cltd
pop
in
mov
add
nop
adcl
mov
leave
scas
icebp
stos
mov
hlt
add
cmpl
pop
push
mov
xchg
aad
xor
cmp
fs
std
data16
jp
xchg
imul
mov
es
mov
imul
addb
xorb
repz
adc
and
adc
imul
fwait
xchg
loope
rclb
push
pop
jg
pop
aam
jnp
jns
fldt
jp
xor
sti
jnp
lods
mov
das
or
lds
cmp
fmuls
or
add
jp
push
mov
test
add
movsl
xor
insb
cmp
repnz
adc
dec
jne
cmp
ja
and
das
fisttps
pop
loope
xlat
pop
ja
push
popl
outsl
mov
push
mov
mov
push
push
push
scas
cmc
and
and
add
ljmp
testl
stos
add
push
dec
cmp
call
je
add
sahf
outsb
mov
mov
test
xor
mov
std
pop
adc
pop
xor
mov
pop
inc
int3
xor
xor
call
shl
mov
into
sub
idivb
pop
and
stos
mov
sti
insl
leave
xor
mov
inc
fstl
pushf
fwait
int3
nop
mov
iret
adc
inc
mov
outsl
stos
lods
ret
sarb
and
adc
or
add
movsb
leave
inc
mov
in
or
xchg
sub
mov
add
test
dec
sbb
loope
ret
mov
sbbb
out
xchg
sbb
mov
mov
xchg
mov
int
shrb
mov
lret
xchg
jbe
push
sbb
sub
insl
cs
and
loope
int
pop
and
out
and
cmp
andb
push
fwait
jae
jecxz
jl
fmul
dec
daa
sub
jno
push
out
sub
mov
mov
mov
and
dec
push
aas
loopne
lret
stos
sub
popa
sarb
jl
and
and
pop
outsb
mov
pop
jae
xor
cltd
clc
jmp
inc
and
cmp
stos
in
xchg
outsl
xlat
jmp
outsl
fistl
xchg
lods
mov
inc
dec
dec
cmpb
js
callw
lahf
pop
mov
push
test
ds
pushl
cmp
les
leave
xor
add
or
dec
popl
cmp
jle
pop
outsb
inc
adc
jb
cmc
or
test
lahf
sbb
mov
pop
jbe
aam
mov
add
pop
pop
adc
mov
push
les
inc
xchg
rcr
es
call
test
aam
xor
arpl
jbe
mov
mov
jo
out
ret
clc
cmp
into
loope
jecxz
cmp
mov
jg
clc
mov
cmp
popf
js
push
fucomi
ja
pop
pop
mov
stos
fldl
notb
adc
mov
add
js
xor
movl
cmp
dec
pop
mov
roll
sub
fs
test
insl
jo
and
gs
or
lea
jge
mov
icebp
pop
lcallw
daa
call
dec
out
popf
into
mov
xorl
dec
mov
fwait
lret
mov
mov
inc
adc
pop
jmp
and
pop
clc
cmpsl
jb
bswap
test
push
and
xor
lock
adc
popf
cmp
jne
sub
sub
mov
add
jae
jnp
pop
inc
and
insb
jmp
cwtl
pop
xchg
jae,pt
aam
mov
data16
xchg
aad
mov
mov
add
repz
pop
jle
aaa
stos
pop
sub
cmpsb
xchg
pop
jbe
sub
mov
test
lods
pop
xor
jns
push
dec
je
push
aad
mov
sarb
pusha
and
or
enter
cmp
pop
push
or
sarl
repnz
jo
insb
xchg
cmpl
fs
jo
xchg
lock
into
and
sub
xchg
jo
adc
stos
adc
pushf
clc
and
dec
ss
dec
int
es
mov
int3
ljmp
xor
lret
jo
push
je
jo
dec
call
int3
gs
xor
cmp
pop
enter
inc
jle
cmc
pop
lret
lret
xchg
jp
gs
stos
dec
fimuls
sbb
adc
and
test
lcall
scas
lret
rcrl
ret
stc
pop
mov
mov
inc
add
lods
add
inc
mov
pop
or
mov
popf
mov
dec
sahf
cmp
sbb
icebp
pop
inc
js
inc
cs
stos
xorl
sarb
outsl
mull
dec
adc
dec
jmp
das
testb
mov
dec
xchg
fistpll
ficoms
cld
inc
dec
xor
in
xlat
aaa
ffree
pop
cld
call
push
pusha
in
movsl
push
sbb
sbb
xchg
xchg
mov
xor
push
rorb
pop
xor
dec
test
jmp
daa
cmp
push
mov
lds
cmp
stos
or
in
cmp
loop
push
pop
xor
data16
mov
or
outsb
sub
pop
xor
or
push
mov
mov
cmp
dec
adc
xor
sar
shlb
scas
jbe
test
jmp
xchg
scas
ds
daa
sbb
push
push
in
jp
mov
ss
loopne
lods
mov
xor
or
sbb
pop
jnp
fldl
mov
add
push
add
cmp
mov
pop
sbb
dec
aas
jmp
lret
and
or
sbb
out
pop
popa
xchg
cmpsl
in
fs
mov
lret
jmp
xchg
mov
jae
or
fidivs
and
cmpsl
sbb
shll
and
stc
mov
adc
dec
sbb
lcall
pop
std
incb
sbb
add
idivl
xor
addr16
scas
andl
orb
sub
ficoms
fmuls
mov
pushf
popa
add
jmp
outsb
mov
jo
mov
xlat
sub
mov
xor
push
lahf
cmp
fwait
negl
adc
mov
cmp
push
sbb
int3
or
xchg
jl
fiaddl
jne
call
mov
xchg
mov
movsl
jne
cmp
ret
pushf
cltd
or
jnp
rcrl
outsl
inc
les
inc
pop
sub
xor
cmp
add
cmpsl
sbb
cli
sti
dec
mov
mov
das
jg
mov
dec
and
in
mov
sub
cmp
pop
add
and
dec
test
push
push
testl
or
jnp
inc
inc
mov
rol
fwait
daa
jno
popf
add
xchg
mov
sahf
mov
jmp
ficoms
cmc
mov
add
inc
mov
cmp
push
sbb
mov
push
testb
out
pop
jle
out
and
cli
dec
cmp
incl
fwait
cmp
dec
mov
clc
mov
lds
dec
add
dec
outsb
jecxz
popf
xlat
mov
shrl
inc
outsb
in
jbe
pop
jb
xor
mull
jle
pop
mov
enter
sub
jle
outsb
sub
cmp
test
icebp
jae
lods
mov
mov
iret
out
test
cli
pop
inc
loopnew
adc
fildll
push
scas
in
shr
mov
pop
sub
lods
lods
add
dec
dec
sbb
and
cmpsb
orb
mov
js
mov
out
call
xchg
test
mov
xor
or
add
scas
jle
inc
mov
cmp
divb
test
vshufps
mov
insl
pop
mov
pop
clc
mov
testl
xor
sbb
subl
cs
and
aam
mov
add
aad
je
enter
or
test
inc
ja
popa
sub
aad
jno
ss
loopew
add
push
outsb
mov
clc
sub
pop
push
adc
mov
mov
pop
fdivrs
dec
cmpsl
imul
mov
fisttpl
dec
popa
test
cmp
popa
jge
insb
popa
cmc
in
dec
jb
daa
inc
jbe
movsb
jno
inc
add
mov
jo
mov
subl
pushf
xchg
das
in
inc
sti
fdivrl
sub
into
mov
out
outsb
push
stc
clc
stos
jg
test
sbb
adc
inc
xchg
jecxz
dec
es
sti
stos
call
fsubrl
out
into
sub
mov
shll
jne
imul
jg
and
sbb
pmulhuw
in
lods
inc
hlt
out
mov
aaa
add
jp
and
xchg
adc
outsl
cmp
rorb
lar
int
in
jbe
js
mov
imul
push
jo
imul
cmp
test
inc
pop
lret
cmc
jp,pt
sbb
ss
dec
pop
dec
fucomi
sarl
and
ja
sub
aas
mov
inc
mov
arpl
and
fs
mov
fidivl
adc
or
pop
cmp
pop
ja
pop
fsubrs
leave
cli
andl
mov
add
push
mov
xchg
ret
int3
adc
popa
adc
leave
stos
lock
mov
pop
mov
pop
addr16
or
and
push
cli
and
pop
insl
mov
mov
mov
in
das
cmpb
adc
sub
mov
aaa
sbb
sti
xchg
mov
cmp
ret
ret
inc
pop
cmp
lds
push
cs
mov
add
ret
mov
pop
fldenv
mov
pop
jg
mov
dec
sub
dec
aas
nop
test
sarb
cmp
pop
inc
add
movsb
pop
nop
push
orb
and
xchg
iret
cmp
lcall
mov
aad
out
mov
sbbl
xor
and
and
mov
lds
negl
inc
adc
inc
sbb
xor
js
fldcw
mov
push
sti
rol
mov
dec
notl
jge
mov
insb
add
icebp
aaa
xchg
test
lock
mov
or
daa
push
mov
pop
xchg
inc
fdivs
mov
dec
sbb
push
pop
push
movsl
pop
sbb
xlat
loopne
hlt
add
out
stos
hlt
inc
lds
lods
mov
loope
lret
int3
jle
mov
roll
push
insl
lods
hlt
aaa
into
xchg
xchg
adc
rcrl
xchg
xchg
push
push
in
enter
dec
push
ret
icebp
mov
mov
lds
in
movsl
rcll
inc
aas
int3
ds
mov
jecxz
movsb
push
pop
and
icebp
out
pop
roll
push
xchg
xchg
push
sub
test
out
andl
pop
sbb
es
inc
fildl
test
push
jae
sub
mov
push
cmp
mov
loop
xchg
sbb
imul
ret
push
cli
insl
outsb
hlt
and
jecxz
push
cmc
ficoml
popf
cmc
jge
mov
sbb
pop
stc
push
add
negb
mov
mov
test
xchg
jo
inc
mov
pop
xor
jl
inc
xchg
xor
cmovp
mov
mov
out
xlat
ret
or
adc
movsl
orl
push
mov
iret
xor
aaa
loope
leave
xchg
fs
mov
mov
adc
push
stc
inc
sub
lods
shrb
push
scas
fildll
call
aaa
push
xchg
lahf
lcall
pxor
out
cmp
sbb
jge
sub
sti
jae
sub
cwtl
lea
and
movsl
mov
add
into
stos
lret
cmp
mov
test
push
inc
inc
jmp
enter
aam
or
mov
cmp
int3
and
inc
or
dec
out
faddl
cmp
push
pop
pop
movsl
into
inc
push
dec
mov
sub
jo,pn
mov
stos
ds
outsb
sub
or
xchg
adc
pop
push
repz
loope
sar
inc
mov
bound
dec
loope
pop
ret
push
push
test
out
test
in
pop
and
fists
dec
clc
mov
fs
jmp
out
rorl
arpl
adc
bound
pop
sbb
dec
jae
aad
cmp
adc
push
lock
cmpsb
jg
lods
add
ret
adc
aam
push
lock
add
call
data16
xchg
movsl
push
bswap
adc
dec
lret
inc
lods
mov
dec
ja
mov
clc
mov
sub
fdivrl
xorl
addr16
sbb
test
jle
fcmovnbe
add
repnz
sbb
mov
outsl
jp
cmp
aaa
inc
fldl
dec
mov
cmpsb
aaa
or
add
shrl
cmp
dec
dec
inc
sbb
add
cmp
test
sbb
xchg
out
mov
add
mov
mov
mov
fstpt
sub
mov
mov
adc
aam
fstpl
mov
xorb
into
dec
call
jo
sub
or
popa
dec
sahf
outsb
mov
add
or
decl
inc
mov
in
or
aam
rol
movsl
outsl
test
sti
xor
push
add
inc
fisubrs
adc
std
xor
cmp
mov
push
movsb
test
dec
out
dec
ja
pop
pop
xchg
in
mov
addb
imul
negb
in
mov
jbe
sbb
dec
iret
dec
movsb
mov
add
sub
test
cmc
dec
push
xchg
fadds
or
cs
mov
xor
mov
aaa
hlt
lods
add
adc
pop
mov
cmp
leave
hlt
mov
js
mul
int
in
out
fiadds
mov
xchg
mov
sub
sbb
shlb
orl
lea
fwait
add
xor
or
push
adc
repnz
fs
popf
in
cmp
pop
pop
out
ljmp
nop
adc
popf
lods
fisubrs
testb
imul
outsl
pusha
dec
pop
jns
jno
daa
mov
mov
xchg
dec
jne
loope
dec
jns
push
insb
int3
mov
xorb
mov
std
out
sbb
push
dec
add
rolb
clc
cmp
imul
pop
ds
out
sub
int3
outsb
repnz
and
xor
mov
into
mov
adc
popa
lea
hlt
es
push
cwtl
push
sbb
push
jns
in
dec
mov
gs
mov
and
test
leave
rorl
add
and
stc
ss
aaa
sub
add
test
mov
xchg
inc
push
mov
orb
jb
jle
lods
sbb
sbb
shr
aaa
inc
jno
lcall
outsb
les
negl
mov
cmp
inc
jmp
lahf
add
pop
mov
sbb
fucomi
pop
stos
dec
mov
das
in
aad
jmp
repnz
xor
push
call
popa
adc
push
addb
and
sbb
jecxz
jne
jbe
movb
mov
or
loopne
shll
jno
int
test
loope
pop
iret
popf
xchg
mov
fmull
jle
pushf
aam
mov
xchg
ret
dec
add
imul
jnp
sub
mov
mov
jae
test
popa
shl
sti
push
mov
fdivrl
pop
mov
xor
mov
clc
sbb
test
fimuls
dec
mov
pop
test
push
jnp
xchg
mov
cmp
jnp
jge
sti
loopne
push
jg
shlb
sahf
adc
mov
lds
push
xor
or
xchg
rclb
push
jle
aam
push
mov
pop
cli
fs
xchg
scas
imul
mov
mov
xchg
sub
inc
enter
xchg
aam
dec
mov
les
icebp
popf
and
pop
cmp
and
ror
and
das
loopne
cmp
pop
xchg
nop
lahf
out
xchg
xlat
jle
mov
dec
bound
mov
out
insl
dec
push
outsl
loope
popa
jo
pop
or
and
imul
lods
in
dec
cli
or
pop
xchg
mov
mov
push
xor
pushf
sbb
or
jns
xchg
mov
inc
xchg
dec
cmp
pop
sub
mov
cmc
cwtl
push
dec
adc
inc
xchg
and
test
das
std
mov
sub
insb
mov
and
outsb
and
xchg
or
ja
jecxz
lret
dec
xchg
divb
mov
or
loope
ret
out
mov
add
dec
pushf
cli
insl
sub
or
scas
out
sti
lods
scas
add
fmull
sbb
pushf
mov
dec
mov
ss
sbbb
mov
test
jecxz
and
jne
outsb
in
add
hlt
dec
add
in
mov
cmpsb
jg
lock
dec
aam
jns
pop
xor
aas
sub
ret
xchg
xor
shll
mov
cltd
ret
popa
arpl
sar
cmp
das
test
or
jecxz
push
push
mov
pusha
mov
jp
push
cld
sub
sbb
sub
pushf
cmp
repnz
add
fmull
and
xchg
daa
xchg
inc
pusha
push
push
cmpsb
ljmp
dec
insl
xchg
push
cmp
or
push
in
sub
aam
sahf
ljmp
xchg
mov
and
pusha
pop
fadd
jmp
sti
jb
loope
jae
push
sbb
cld
lods
cmp
mov
sbb
dec
jb
dec
xor
sbbb
scas
jns
push
test
mov
popf
gs
and
fadd
popa
push
push
mov
pusha
enter
clc
scas
pop
lea
adc
mov
xchg
or
pop
ror
or
icebp
dec
rcrb
dec
adc
fwait
mov
push
stc
jmp
iret
dec
mov
data16
mov
js
insl
cmpsl
cmp
xor
int
cld
inc
fstl
aad
sub
shr
xlat
sbb
mov
jge
gs
or
pushf
icebp
xchg
mov
cmp
inc
push
dec
pusha
mov
lahf
aaa
repnz
testl
xchg
insl
push
jnp
cs
dec
jmp
mov
xchg
iret
lahf
pop
sbb
lret
or
jge
pop
std
fidivrl
jb
sub
pop
jo
shlb
or
cmp
dec
repz
adc
inc
push
repnz
movl
mov
push
fadds
in
aam
in
clc
fsts
lods
std
roll
into
sbb
lcall
jne
fadds
adc
stc
movsb
daa
mov
mov
adc
pop
and
mov
cmp
inc
push
jg
mov
leave
xor
xor
pop
push
push
cmp
pushf
mov
sbb
aas
pop
gs
jge
stc
and
xorl
pusha
jp
lret
adc
hlt
mov
push
push
xchg
stos
test
and
and
sarb
add
xor
mov
push
pop
insb
lods
mov
sar
repz
sbb
aaa
push
xchg
jmp
es
dec
cmp
int3
mov
je
std
in
out
lods
cmp
ds
daa
mov
cmp
cmp
mov
push
pop
js
fildl
in
xor
xchg
cmc
cmp
push
jge
nop
push
outsb
jl
loop
mov
fsubrp
pop
shl
inc
dec
pushl
and
cmp
in
hlt
push
inc
lret
adcb
push
movsl
inc
cmp
xor
pop
aaa
dec
xor
jne
mov
mov
rcll
jle
push
mov
xor
and
jge
sub
cwtl
mov
sub
cmpsl
repnz
int
or
adc
jmp
test
std
inc
mov
mov
je
mov
jle
mov
js
or
jmp
aaa
in
ja
mov
mov
inc
xor
inc
inc
leave
cmp
cmp
dec
jne
mov
scas
pusha
mov
loop
xchg
sbb
in
jbe
popf
xor
push
adc
cmp
push
pop
scas
cmp
dec
push
sub
icebp
push
sbb
mov
push
jecxz
lods
ljmp
adc
and
flds
sub
out
xor
and
sub
pop
les
dec
out
loopne
bound
inc
out
mov
jnp
movsl
push
jge
lea
ret
dec
pop
rclb
mov
outsl
or
nop
add
pushf
push
sahf
cmp
sub
cmp
and
cmpb
cmp
mov
xchg
jmp
pop
sbb
inc
addb
add
cld
jl
mov
mov
inc
sbb
shlb
sub
xor
cld
xchg
notb
daa
sbb
push
mov
mov
push
cmp
adc
sbbl
mov
dec
cmpsl
in
jns
mov
sbb
gs
mov
adc
pop
dec
lret
fbld
fs
cld
lret
pop
xor
jne
xchg
test
movsb
or
mov
sub
mov
pop
outsl
out
aaa
inc
pop
js
jmp
xchg
outsl
fucomip
inc
test
inc
cmc
jl
jo
scas
jge
gs
cld
push
mul
mov
mov
ret
mov
loope
mov
cs
pop
inc
mov
cwtl
adc
into
pop
sub
push
lods
in
xchg
mov
mov
or
mov
fsubrs
sub
outsl
dec
testl
outsb
add
sub
mov
inc
test
push
xchg
fstpl
and
inc
xor
and
pop
xchg
test
inc
shrb
mov
cmp
imul
jnp
lret
add
push
imul
hlt
scas
in
sbb
lcall
testl
into
dec
cmp
push
jae
pusha
inc
into
jecxz
cmc
iret
jecxz
xchg
gs
mov
push
push
pop
imul
add
call
imul
sahf
xchg
push
or
pop
repnz
pop
daa
outsb
inc
pop
imul
push
mov
and
int3
sbb
xchg
fld
cli
dec
aaa
push
dec
xchg
jge,pt
call
push
sbb
call
out
imulb
icebp
into
lds
mov
repnz
insl
pusha
out
loope
sbb
push
jne
fcomps
mov
pop
add
and
insb
jmp
inc
lods
sbb
nop
inc
adc
hlt
sbbl
jbe
aaa
aad
aad
sbb
xor
bound
dec
ret
sahf
push
repnz
addr16
add
and
cltd
mov
fimull
les
xchg
clc
in
enter
jno
dec
mov
push
into
mov
aaa
repnz
jecxz
sub
xchg
movsl
jmp
cmp
xor
scas
cmp
jmp
add
or
adcb
sub
and
xor
xchg
xor
orl
lret
cmp
dec
cmpsl
sub
into
shrl
cmp
mov
add
clc
xor
lret
cwtl
mov
dec
repnz
push
out
pop
jge
into
jae
les
mov
sahf
cs
in
mov
add
adc
pop
loope
xlat
insl
mov
push
pusha
sarb
xchg
insb
in
jmp
xchg
cs
int3
jg
shlb
dec
mov
pop
inc
push
orl
dec
jge
and
jbe
mov
dec
adc
mov
lret
pop
iret
int3
mov
xor
iret
cmpsl
popf
mov
add
adc
sub
add
popf
add
mov
scas
fnstsw
xchg
push
dec
jae
fistpll
adc
adc
mov
mov
mov
sbb
lock
mov
xor
dec
mov
jns
outsl
daa
mov
orl
sbb
pop
int3
push
push
push
loope
dec
mov
shr
rcll
dec
test
pop
cmpsl
lock
jg
push
jg
xchg
data16
test
xor
mov
loop
or
adc
into
xchg
jp
scas
cmp
jmp
mov
out
test
pusha
push
jp
push
pop
hlt
out
dec
sub
dec
sbb
stos
xor
mov
cld
mov
cltd
push
add
nop
gs
dec
fsubrs
sbb
stos
into
push
cltd
mov
inc
mov
or
ljmp
repz
sub
fdivl
mov
incb
es
cmc
jbe
addr16
mov
add
sbb
rcl
pusha
mov
fwait
pop
scas
test
movsl
push
sti
stos
mul
cmp
cmpsb
es
fisubs
jle,pn
mov
xor
push
xchg
test
push
jecxz
js
aam
fimull
inc
add
hlt
inc
lret
xchg
shll
mov
call
imul
pop
push
xor
fidivl
js
or
or
or
inc
mov
jnp
lds
push
movsl
mov
dec
and
imul
fisubrs
jecxz
lcall
jge
dec
ss
test
add
decl
xchg
push
pop
cwtl
push
lock
popa
add
pusha
sarl
mov
insl
inc
in
inc
sarl
ja
cmpb
mov
lcall
inc
popf
gs
js
mov
push
mov
das
mov
xchg
ja
daa
rclb
aaa
pop
sbb
adc
jecxz
ss
std
dec
fisubrs
pushf
pop
in
jne
das
es
fists
js
movsl
mov
popf
jne
xchg
test
cmp
push
fbstp
mov
add
mov
add
pushf
jl
jmp
mov
adc
mov
stc
adc
gs
push
repz
mov
stos
mov
cld
pop
dec
pop
pop
les
adc
cli
aaa
jnp
push
xor
imul
test
mov
dec
sub
inc
mov
loopne
cli
leave
push
or
xchg
jo
sbb
xchg
push
push
rorb
mov
push
leave
movsl
addl
insl
jne
sub
shl
mov
rcr
push
repnz
dec
lock
sub
adc
andl
scas
divl
jb
mov
or
scas
mov
fs
aas
subl
pushl
cld
cltd
inc
stc
loop
pop
push
cmp
lods
push
andb
and
sbb
or
lods
outsl
mov
dec
jecxz
pop
leave
or
mov
nop
jecxz
mov
sub
xor
out
ret
ljmp
mov
popl
mov
lret
adc
fnsave
sub
arpl
fwait
mov
xchg
xchg
mov
mov
sub
add
cmpsl
cltd
pop
or
push
outsl
lcall
xlat
pop
and
sub
push
xlat
sbb
arpl
dec
push
scas
xchg
andl
les
icebp
pop
cmp
lock
ret
lcall
sub
cmp
xchg
mov
in
mov
cs
icebp
sub
xchg
xchg
sbb
ret
inc
movsb
lahf
pop
xchg
pop
jae
fwait
clc
scas
and
lret
imul
adc
sub
fldln2
in
insb
arpl
dec
leave
sub
es
dec
add
cwtl
adc
je
mov
ds
pop
out
rcrb
scas
enter
cmp
std
roll
cld
pop
movb
push
cmp
adc
test
mov
sbb
sub
mov
arpl
or
pop
or
mov
pop
test
rcrl
cs
inc
repnz
in
jae
jne
xor
inc
addr16
jno
fchs
pop
mov
rolb
sbbl
jne
lret
xchg
ret
xchg
pop
jo
mov
loope
xor
stc
shlb
shrl
pop
imul
pop
repnz
ss
sti
jns
fcomp
cmp
inc
jo
push
sub
outsl
out
sub
adc
in
shrl
push
xor
xor
inc
and
sub
xor
or
shlb
push
testl
dec
int3
lds
pop
test
lret
stos
or
mov
or
push
xchg
gs
rcrb
cltd
xor
fisubs
cmpsb
outsl
shrl
aad
pushf
push
rcll
in
ss
lahf
loop
adc
mov
jns
jl
jnp
cmpl
test
mov
es
ret
ds
or
add
pusha
pop
xor
mov
lea
lods
sub
test
rol
inc
in
xorb
dec
mov
and
arpl
in
test
insl
xor
pushf
mov
enter
cmp
push
aad
mov
adc
push
pop
imul
es
sbb
inc
pop
ss
dec
fdivrl
xchg
cwtl
inc
and
das
pop
lcall
aam
jbe
movsl
scas
arpl
aam
adc
sbb
cmp
sbb
pop
movsl
mov
scas
dec
sbb
jns
mov
in
mov
cmpsl
mov
dec
cltd
xlat
test
out
enter
and
push
dec
jmp
rolb
mov
mov
inc
rorl
arpl
int
xor
cltd
adc
mov
mov
jl
mov
pop
sbb
mov
mov
scas
inc
xor
push
lods
pusha
imul
xchg
mov
sbb
scas
inc
lods
setb
pop
xchg
inc
lea
or
fsubr
hlt
and
aas
cmp
cmp
jne
out
and
add
dec
int3
mov
adc
mov
je
pusha
xchg
out
ja
mov
jo
mov
pop
imul
dec
lret
inc
daa
notb
test
xchg
push
sbb
call
mov
push
out
rol
mov
pop
pop
inc
or
imul
pop
and
jo
xchg
out
pop
xchg
fwait
add
nop
mov
cmpsl
cmp
pop
lcall
cs
push
inc
sbb
xchg
push
dec
xchg
test
sub
mov
in
lcall
mov
leave
mov
loopne
ljmp
loope
mov
mov
arpl
and
sub
or
pop
xor
jnp
adc
loopne
test
and
mov
xchg
inc
and
inc
lods
cmp
outsl
bound
lcall
ss
pushf
in
loop
or
dec
sub
mov
hlt
and
or
nop
mov
adc
int3
in
jge
ret
and
jcxz
dec
cmp
sahf
xchg
pop
leave
push
mov
js
rcll
fisttpll
jp
sub
sub
xchg
cli
sbb
dec
cmp
hlt
sbb
inc
mov
cld
xor
sbb
mov
sti
sub
ret
sub
sahf
outsb
sub
out
sahf
cmp
push
jne
cmp
sub
scas
pop
add
lods
add
cli
stos
je
xlat
push
push
mov
pop
loopne
mov
insl
mov
mov
lret
inc
push
pop
popf
jg
mov
sarl
neg
daa
test
in
push
mov
rcll
push
jns
fmulp
pop
and
cmc
xchg
mov
mov
mov
sub
inc
adc
xchg
lret
orb
lahf
and
ret
sub
dec
push
in
jne
flds
dec
dec
popa
rcrb
icebp
jle
xchg
test
jb
cmc
inc
mov
adc
xor
rorb
cmp
mov
cld
sbb
mov
jns
shll
jno
decb
jle
test
xor
jmp
inc
push
test
mov
add
andb
jns
addb
mov
pop
enter
test
and
jo
mov
lods
daa
cmp
movsl
mov
ret
push
xchg
dec
cwtl
inc
sbbl
fcoml
add
and
push
mov
xchg
xchg
sti
lret
inc
jmp
les
adc
data16
enter
cmp
jge
add
jmp
mov
push
fs
fildl
sub
icebp
and
insl
mov
mov
xor
xor
xchg
hlt
mov
mov
inc
mov
out
sbb
adc
adc
pushf
pop
fstps
inc
orb
in
pop
rcll
dec
inc
icebp
xchg
sbb
and
loopne
stos
fs
hlt
in
popa
test
jmp
pop
jo
push
pop
imul
xchg
sbb
and
inc
xor
lea
les
sub
ljmp
cld
xchg
and
jecxz
inc
pusha
push
pop
outsl
pop
mov
jp
add
out
adc
xchg
mov
xchg
pop
psrlw
mov
jb
cmpsb
mov
jnp
dec
and
imul
add
add
in
out
test
roll
fcoms
fldt
movsb
jnp,pn
xor
sti
test
pop
xchg
inc
push
pop
sahf
out
sbb
and
clc
fildl
sub
cmpsl
xchg
daa
ds
mov
xchg
and
mov
lcall
mov
cmp
cmp
sahf
movsl
sub
lea
inc
mov
and
xor
adc
ret
adc
xchg
sbb
stos
subl
aam
das
in
imul
push
cwtl
push
mov
jns
loopne
insl
out
in
enter
movsl
test
jns
or
js
lret
stos
sahf
xor
fstpl
ja
mov
call
jns
pop
test
add
hlt
cli
pop
xchg
push
jecxz
rcll
jb
xchg
test
or
jmp
aas
mov
repnz
push
push
mov
out
lret
mov
fsubrs
mov
adc
and
mov
xor
dec
mov
gs
mov
sbb
fnsave
std
out
sbb
inc
aaa
mov
push
not
xchg
call
int3
outsb
xor
mov
mov
test
add
jae
dec
bswap
jno
push
jo
insb
xor
imul
out
jl
xchg
outsb
dec
pop
imul
add
push
mov
xor
xchg
xchg
adc
shrb
int
and
es
jge
sub
jae
add
testl
mov
mov
xor
cltd
movsb
mov
lret
lahf
shrb
pop
or
pop
xchg
shrb
fwait
std
and
ret
sbb
sbb
andb
inc
adcb
gs
fcoms
lret
dec
pop
pop
js
mov
cs
jne
inc
std
xor
xchg
iret
dec
in
out
xchg
xchg
gs
fs
shll
stos
insb
loop
mov
test
not
pop
jge
test
or
mov
ss
fstpl
and
cwtl
push
scas
xchg
bound
filds
repz
jle
mov
lcall
icebp
movsb
insl
rolb
and
mov
sub
sbb
movsb
fadds
jge
and
xchg
ja
fdivrs
cmp
fdivl
adc
fdiv
sbb
int
jp
cmp
sub
mov
inc
mov
mov
push
sahf
mov
cmpb
imul
pop
bound
push
dec
mov
movsb
lock
lock
scas
jb
mov
lock
jge
popa
cmpl
push
ja
xorl
sti
jg
inc
mov
js
into
xor
jo
ja
das
ss
mov
in
loope
lods
mov
push
sbb
sbb
call
bound
jo
or
push
shrl
fwait
test
rorl
sub
fdivrs
inc
sbbl
jnp
mov
lcall
int3
loopne
and
inc
xchg
or
pop
sarb
mov
stc
leave
out
icebp
sbb
movsb
add
mov
jne
fcompl
ret
adc
scas
add
icebp
dec
scas
shrl
fiadds
aas
xor
hlt
cmp
cmc
jge
mov
iret
lods
icebp
pop
imul
addr16
sbbl
jp
sbb
mov
das
ss
adc
jbe
mov
int3
test
sub
ret
xchg
mov
incl
mov
ret
xorb
or
mov
dec
popf
pop
jmp
mov
xor
das
out
adc
or
cld
lods
dec
movsl
fcmovb
sub
jne
cmp
in
fs
test
cmp
adc
shr
cmp
cmpsb
je
jnp
inc
cmp
jle
and
insb
jb
in
mov
addr16
movb
leave
inc
out
call
fildl
sbb
xchg
jmp
mov
cmc
or
sub
xorl
fdiv
imul
lods
clc
shll
pushf
and
das
imul
aas
arpl
test
dec
cmp
mov
imul
and
popf
jp
and
xlat
ficoms
cs
add
lods
repnz
insb
movsl
mov
pusha
mov
xchg
mov
lods
fistpll
add
cmpsb
mov
jp
cli
and
in
and
fisubrs
mov
sub
cmc
xor
es
sbb
lods
dec
xchg
fmuls
lds
pop
sbb
cmp
sub
adc
scas
push
mov
sti
pop
xchg
dec
mov
and
add
adc
cltd
xchg
sbb
test
push
inc
jns
sbb
push
add
mov
mov
inc
sbb
test
ret
into
jno
sbb
jns
dec
xchg
loopne
stos
inc
adc
addl
ja
or
popa
aaa
xchg
mov
dec
popf
repnz
mov
ret
not
mov
negb
inc
arpl
xchg
ficoms
aaa
lods
sub
cmovbe
lcall
mov
xor
sbb
lds
inc
in
dec
jb
ret
ret
adc
rorb
rolb
adc
mov
sub
or
into
xchg
add
pusha
idiv
mov
pop
mov
arpl
adc
jo
stos
nop
cmpsb
loop
pop
pop
lret
jp
mov
xchg
and
pop
xlat
nop
aam
das
cld
pop
pop
push
ss
sub
dec
cmp
loope
dec
mov
mov
imul
xchg
shlb
add
xor
adc
fldcw
hlt
pop
or
pushf
subb
ja
cmp
ret
pop
stc
mov
pop
fsubp
cld
pop
xchg
push
sahf
jmp
fnstsw
dec
cmp
add
mov
push
loopne
cmpsb
lahf
inc
imul
stos
pop
into
mov
jo
xchg
sbb
in
mov
push
mov
outsl
imul
jle
dec
imul
sub
sbb
push
xor
lahf
cmc
loop
push
add
dec
mov
cmp
nop
and
push
push
dec
push
cs
mov
xchg
or
add
into
dec
mov
fwait
imul
xchg
cld
dec
add
add
stos
pop
outsl
jnp
mov
not
inc
push
data16
or
stc
test
dec
mov
and
dec
loop
std
pop
push
sub
or
cmpsl
cmp
mov
pop
or
aad
mov
jbe
add
sbb
gs
mov
mov
fistpll
movsb
add
xchg
cmp
das
in
sbb
push
ret
pop
mov
lds
mov
test
or
push
cld
pop
mov
stc
insl
insb
insb
add
fwait
push
clc
scas
xor
ffree
xchg
push
les
out
inc
sub
add
pop
test
add
push
imul
imul
vmulss
xchg
push
fnsave
dec
fcom
sbb
in
mov
pop
xchg
cli
pop
shlb
add
arpl
data16
or
test
cld
cmp
adc
bnd
mov
xor
ss
std
ret
mov
push
pop
ficomps
mov
push
pop
dec
movsl
sbb
lods
scas
test
sub
jmp
pop
pop
mov
js
inc
xorb
es
ljmp
arpl
test
sub
cmp
repz
cli
arpl
sarl
sub
push
inc
and
cltd
pop
cmp
push
out
push
and
jmp
dec
push
lods
nop
shlb
fwait
mov
pop
popf
xchg
inc
pop
mov
cwtl
leave
add
mov
xor
or
lret
jg
sbb
dec
fucom
push
mul
mov
push
mov
cmc
mov
and
jbe
cmp
data16
sarl
dec
popf
fcompl
cld
popf
inc
mov
jnp
jno
mov
insb
iret
add
insb
stos
or
sahf
sets
jmp
mov
fmul
sub
dec
lock
mov
ficomps
mov
or
jmp
cmp
jns
cmp
movsl
out
inc
loopne
pop
mov
pop
cmc
inc
inc
dec
add
cmp
pop
in
loop
cwtl
ret
fistpl
bound
jecxz
push
mov
shr
cmpsb
cld
sbb
orb
adc
mov
or
inc
push
dec
gs
es
gs
pop
out
ffreep
test
mov
lret
sub
dec
in
stos
lret
jne
xchg
bound
adc
push
push
jae
jnp
mov
push
dec
jns
es
pop
jo
cmp
cmpsl
stos
and
jmp
sub
insb
cmp
push
cmp
push
adc
mov
xchg
cli
rcrb
inc
sahf
mov
or
pusha
aam
jle
insb
stos
fstps
or
cmp
inc
or
inc
mov
mov
cmp
jo
pop
jns
push
jg
filds
sbb
scas
scas
sbb
lods
sub
mov
cmp
pmuludq
jle
or
imul
lret
adc
imul
sub
and
js
aas
mov
jp
add
xchg
aad
movsl
clc
flds
les
fildll
rol
inc
inc
xchg
not
int
jno
std
cli
jg
push
loopne
inc
mov
outsl
rolb
cmp
push
andl
adc
insl
popa
jge
dec
gs
enter
cmp
jp
movsb
inc
cli
xchg
ds
dec
aaa
cmp
adc
or
push
imul
xchg
dec
icebp
sub
jecxz
ljmp
std
xchg
adc
outsl
test
jmp
bnd
std
mov
jbe
xchg
cs
pop
mov
andb
mov
push
xor
add
popf
inc
jno
cmpsb
mov
xchg
push
out
js
xchg
test
into
xor
pop
add
sbb
inc
add
push
mov
pop
inc
xor
ret
movsl
dec
shrb
scas
pop
outsl
xchg
imul
or
mov
dec
cmpsl
imul
ss
mov
mov
jl
cmp
mov
adcl
adc
mov
inc
outsb
mov
xchg
push
inc
mov
lret
out
dec
fsub
das
sub
lret
pop
or
addl
xor
imul
dec
mov
or
out
mov
test
stos
movsb
xchg
and
and
ret
call
cmpsl
push
inc
xor
sahf
sub
ja
movsl
jne
cmp
pushl
add
decb
pop
mov
scas
lock
lret
sbb
mov
xor
pop
push
xchg
js
pop
aad
out
fisubrl
fiaddl
adc
xor
enter
addl
hlt
inc
lea
packuswb
sbb
adc
fisubrl
out
and
xchg
jae
adc
push
fistpll
cs
inc
aam
push
fisubl
sti
orb
mov
ja
or
jl
push
dec
cmp
cmp
sbb
insl
and
push
roll
inc
pop
jbe
inc
cmpl
hlt
mov
dec
mov
inc
in
xchg
xchg
inc
cmpsl
cmpb
inc
mov
cltd
xchg
add
aas
sub
loop
aas
subl
mov
and
or
sub
xchg
jne
or
sbb
pushf
mov
cmp
adc
mov
push
add
cmp
int3
pop
dec
icebp
fs
icebp
repnz
pop
sti
fsubr
jns
ficoms
xchg
repnz
xchg
cli
adc
push
xlat
push
cmpb
xor
jp
addr16
out
jp
outsb
lds
mov
xor
fadds
cmp
lea
xchg
scas
mov
xor
mov
add
fnstenv
mov
dec
js
nop
add
leave
mov
loop
dec
rcrl
xor
repnz
stc
xchg
inc
lahf
ja
xor
call
push
cmp
fisubrl
mov
lret
adc
jnp
add
adc
pmuludq
adc
push
cs
adc
out
test
dec
clc
insb
or
rclb
shl
loop
adcl
push
jle
mov
dec
in
sbbl
pop
cmp
sahf
add
add
pop
enter
mov
dec
push
and
push
imul
cmp
mov
movl
lock
mov
add
mov
sub
and
push
stos
mov
mov
loop
std
daa
sbb
nop
cltd
xor
aas
sbb
jecxz
mov
sub
add
lods
popf
cmp
jmp
ret
xchg
mov
lods
je
dec
inc
sub
cltd
jmp
stc
test
andl
add
int3
cmp
fmul
or
xchg
jns
mov
dec
addr16
cld
call
mov
push
mov
jbe
mov
hlt
sti
arpl
mov
decb
in
insl
into
test
push
es
push
lea
push
dec
arpl
mov
push
call
ret
xlat
filds
dec
stos
leave
pop
push
fimull
lret
sarl
int
cltd
ja
outsl
xor
sbb
popf
sub
and
mov
jecxz
lea
fldt
sbb
in
mov
jae
scas
mov
push
and
icebp
stc
pop
mov
enter
cltd
xchg
adc
cmpsl
add
and
cmp
fstpt
mov
mov
aam
insl
rclb
jg
push
iret
pop
mov
and
cmp
mov
mov
js
bound
mov
inc
loope
lds
cmc
cmp
fcomps
fs
jp
insb
fwait
dec
cli
sub
ror
lods
in
in
xor
cmp
jne
test
lret
call
js
imul
add
shll
pop
movsl
out
lds
mov
add
xchg
push
pop
addr16
rorb
cmp
mov
imul
cmp
add
add
lahf
enter
aam
loopne
jbe
mov
das
xchg
cmp
mov
mov
mov
stos
cmp
jge
sbb
in
xlat
dec
mov
cmp
sbb
lahf
sbb
push
sbb
scas
jo
mov
xor
xor
xor
jp
decb
inc
cmp
lret
lds
daa
shlb
movsl
mov
ret
cwtl
cltd
xor
mov
sub
push
sbb
enter
incl
nop
pop
jbe
mov
sbb
out
cmc
jo
and
in
sub
dec
mov
and
sub
sahf
sub
stos
aas
mov
pop
ret
mov
push
ja
mov
add
cmpsb
in
out
xchg
jg
loope
and
mov
out
pop
cld
adc
or
loope
sub
jp
sbb
dec
push
cmp
pop
jb
xchg
adcb
lret
xchg
out
movsb
and
nop
aaa
mov
dec
or
mov
pop
add
scas
push
jmp
aaa
lret
or
push
push
outsb
stos
repnz
dec
or
and
jecxz
adc
divb
dec
shrl
imul
xor
xorb
jg
pop
ret
jbe
addr16
push
push
outsl
add
sahf
xchg
mov
ja
pop
xor
jmp
inc
movsl
pop
neg
js
mov
and
sbb
stc
fbld
adc
xor
xchg
sti
pushf
mov
mov
ds
cli
sbb
sahf
fisttpl
mov
jb
imul
outsb
adc
sub
xorb
ljmp
ljmp
add
and
and
push
push
and
mov
repz
jle
das
test
repz
jbe
sbb
jae
rclb
icebp
mov
loopne
scas
push
jae
jl
push
lret
cmc
shl
clc
cmp
aad
push
and
pop
ffreep
mov
push
mov
dec
pusha
imul
pop
add
ljmp
and
sub
insl
mov
out
mov
and
push
pushf
lret
out
inc
jmp
addb
popa
xlat
cmp
mov
jno
mov
movsb
addr16
roll
mov
push
dec
je
test
inc
dec
xchg
loop
div
mov
aaa
loopne
inc
into
test
insl
xor
sub
mov
fisubrl
cmp
push
pop
push
addl
xchg
iret
xchg
out
or
outsb
test
mov
scas
cmpsl
mov
push
add
leave
notl
add
ss
ljmp
add
inc
push
stc
fisubrs
pop
in
bound
push
inc
iret
sub
out
and
shlb
sbb
in
pop
pop
mov
ret
subb
mov
jo
sbb
xchg
imul
xor
mov
push
outsl
rcrb
div
cwtl
jmp
loop
int3
pop
jne
pop
sbb
idiv
push
cli
dec
adc
sbb
push
shll
sbb
les
cltd
sarl
cmp
xor
ret
push
movsl
add
add
sbb
jp
jmp
mov
imul
or
mov
sub
ds
popa
repz
mov
std
rcrb
and
adc
aaa
dec
adc
push
rolb
ljmp
pop
sbb
dec
mov
or
pop
scas
sub
mov
mov
inc
dec
xchg
ss
jg
imul
sub
pop
std
roll
push
sbb
sbb
sub
ret
aam
loop
dec
loopne
xchg
sbb
dec
jno
insb
movsb
mov
idivb
outsl
mov
adc
notl
sti
add
push
pop
pushl
jg
mov
jo
loope
jnp
imulb
xorb
or
sahf
in
shl
jle
add
push
std
cmp
fcoms
sbbb
scas
inc
popf
jp
mov
ja
cmp
sub
out
movsb
in
push
stc
mov
lds
mov
cmpsb
jo
mov
fwait
jb
and
test
stos
pop
push
inc
and
cmp
subl
inc
cmc
push
sub
bound
mov
dec
cmp
lret
sub
and
mov
in
adc
fcmovu
pop
adc
outsb
dec
into
enter
and
push
sbb
jg
dec
push
mov
push
fisttps
xchg
enter
orl
inc
mov
popa
inc
or
sbb
pop
dec
dec
leave
jmp
sti
pop
push
int
push
push
ret
fs
sub
movb
test
dec
loopne
out
sbb
repnz
xor
ljmp
mov
xor
mov
ljmp
je
add
sub
jge
mov
shlb
pop
fwait
jae
mov
jbe
lods
aam
aas
jge
dec
jl
cmp
div
xor
popf
dec
mov
cwtl
mov
mov
out
scas
xchg
lret
jo
fbld
subps
xchg
cmp
add
lret
test
push
pusha
les
cmpsb
and
imul
stc
sub
jecxz
add
dec
mov
lods
inc
inc
into
mov
pop
daa
pop
cwtl
out
or
shlb
ror
outsl
cltd
call
pop
leave
sahf
mov
pop
hlt
or
in
das
ja
in
cld
adc
pop
ret
fnstcw
mov
sbb
cmc
fs
sub
sbb
xchg
or
jmp
cmpsb
sbb
xor
dec
dec
xor
lret
test
cmp
or
xchg
xor
mov
lret
fnstenv
xlat
cmp
sbb
int
loopne
or
push
cmp
jl
cmp
push
rep
test
and
icebp
adc
mov
call
ret
test
dec
add
mov
cs
repz
inc
js
daa
cli
inc
jne
push
cmp
mov
pop
mov
add
add
sbb
into
add
cmpsb
xchg
adc
sti
push
mov
imul
or
pop
mov
pop
jbe
cwtl
xchg
push
lock
sti
test
rcrb
subb
pop
push
ds
or
push
dec
cmp
cmpsl
iret
int
cmp
in
incb
insb
sbb
jns
sbb
enter
rcll
sti
jge
mov
sub
sub
mov
lret
jbe
repz
xor
sub
stos
cli
sbb
data16
cmp
into
jl
xchg
mov
xor
lock
mov
call
sbb
pop
cli
inc
fsubrl
popf
sbbb
outsl
test
dec
stos
gs
popa
pop
negl
xchg
aas
pop
outsl
mov
and
repz
jg
cwtl
xchg
dec
test
and
cld
jae
repz
sub
push
dec
das
dec
xchg
data16
or
lds
das
lea
add
inc
push
push
sbb
cmp
mov
and
rorb
push
adc
mov
mov
pushf
hlt
mov
or
mov
in
inc
aas
adc
mov
out
adc
pop
mov
pop
fcoml
sbb
out
inc
sub
jo
xchg
xchg
loop
sub
pop
aam
push
cmp
imul
add
dec
mov
adc
fidivl
pop
and
mov
pop
dec
mov
scas
out
jno
pop
jno
push
lcall
subb
or
scas
push
push
mov
or
iret
gs
lret
jg
mov
enter
cs
push
dec
mov
adc
xor
arpl
jp
out
iret
xchg
rorb
dec
out
dec
test
lahf
mov
out
xchg
mov
cmp
aaa
dec
sub
aas
rolb
cmpsl
inc
sub
jle
icebp
xor
mov
jg
popa
push
adc
pusha
ja
shrb
and
jbe
js
mov
cmp
and
insb
aad
shrb
sub
aam
rorl
pop
lds
cmp
cmc
scas
das
push
std
ds
imul
cwtl
aaa
adc
jmp
insb
in
add
clc
mov
dec
aam
jnp
fcoms
xchg
adc
pop
mov
outsb
xchg
xor
jbe
jge
fmuls
jp
pop
add
mov
jb
lcall
out
or
insl
mov
and
inc
orl
mov
push
imulb
push
cmp
aas
add
pop
jl
jmp
data16
jmp
xchg
arpl
icebp
adcl
add
out
jo
popf
xchg
fisttpl
imul
or
jmp
and
dec
adc
scas
lock
adc
jmp
sbb
sub
hlt
jp
test
or
sub
jbe
leave
test
push
sub
movsl
lods
pop
push
sti
sub
insb
inc
addl
adc
mov
jle
pop
into
mov
jecxz
pop
lods
je
fldl
xchg
les
in
out
jno
pop
shrl
addl
sti
bound
inc
mov
dec
push
lock
mov
scas
mov
xor
and
cli
movsb
je
dec
xor
cmp
dec
inc
dec
lret
xchg
lea
fisubs
insb
jb
leave
pop
xchg
jae
adc
inc
mov
lcall
and
or
jae
xchg
dec
stc
dec
jnp
mov
mov
gs
adc
push
jbe
adc
sub
and
dec
fidivs
adc
test
loope
ret
shll
scas
cmp
je
cli
cmp
push
xor
lcall
test
scas
mov
mov
lcall
mov
sbb
mov
pop
fstp
int3
fdivr
es
aaa
loop
and
and
jno
jno
imul
push
sub
mov
lods
mov
cld
mov
fcmovne
repnz
mov
shlb
cmc
inc
push
mov
xor
arpl
insb
lds
cs
add
mov
xchg
pop
das
mov
orb
cmp
pop
sbb
ljmp
jae
in
cmpsb
sbb
movsl
sub
cmp
aaa
rorb
aad
lea
lret
cmp
dec
cwtl
scas
inc
sbb
pusha
push
or
shll
pop
mov
rol
push
or
out
and
mov
cld
xchg
adc
daa
es
movsl
arpl
dec
mov
outsl
adc
adc
int
arpl
jno
cmp
imul
mov
adc
jl
arpl
push
nop
aam
ss
stc
and
sbb
lahf
sti
pop
jle
pop
movsl
sub
or
or
imull
sbb
mull
cmp
lods
lds
adc
and
mov
jb
jnp
push
sub
ret
int
scas
pop
repz
mov
out
comiss
or
sbb
jno
pop
push
cmovs
in
and
mov
jmp
mov
push
arpl
and
add
pop
out
mov
inc
pop
test
nop
inc
jnp
or
cs
add
imul
sbb
aad
xor
pop
dec
push
mov
in
cmp
repz
scas
inc
lea
or
outsl
push
jbe
stc
inc
pushf
push
gs
test
xchg
mov
jl
jecxz
sub
xchg
lahf
jge
mov
push
bound
dec
jae
fwait
jnp
adc
inc
mov
xchg
out
mov
pop
inc
mov
loope
mov
rclb
mov
pop
ret
sub
das
dec
pop
xchg
fld
xchg
jbe
repnz
jns
jae
adc
int3
mov
int
push
xor
cltd
mov
lret
push
sarb
insl
pop
xchg
xchg
ret
rol
mov
dec
lock
sbb
sub
sub
mov
jg
and
bound
xchg
test
mov
jmp
push
shrl
jge
push
or
jae
xor
mov
rcll
xchg
testl
jmp
aaa
xor
mov
lret
in
out
mov
idivl
push
lds
fcmovb
xchg
mov
adc
sahf
adc
mov
adc
push
je
in
sahf
adc
imul
sahf
scas
push
fidivrl
test
adc
and
stos
and
lret
fldenv
enter
add
stos
daa
js
loop
pop
sub
push
push
pop
push
cmpsl
xchg
ss
cmpsb
jmp
fmull
in
lret
aad
aaa
jae
hlt
adc
jb
jns
call
rcrl
mov
fistpl
adc
inc
fmuls
shrb
dec
dec
mov
stos
xor
and
mov
or
mov
enter
inc
xchg
ficompl
rorl
out
adc
inc
lahf
shlb
sub
lea
sti
xlat
xor
lret
push
mov
add
push
out
pop
inc
cmp
lds
pop
arpl
repz
rcrb
jmp
jae
or
mov
ljmp
mov
adcl
nop
push
xchg
fsubrl
pop
pop
and
inc
sbb
mov
addb
aas
rcll
in
insl
arpl
jb
lret
int3
cld
cmpsb
in
adc
jmp
lea
mov
sbb
stos
pop
call
xchg
push
imull
out
lret
sti
imull
hlt
icebp
fistpll
inc
dec
fcomps
and
adc
lret
out
dec
xor
int3
imul
sub
and
sub
xor
mov
addr16
inc
scas
test
xlat
xchg
xor
pop
mov
mov
xor
xor
das
in
dec
adc
lods
xor
dec
xchg
movsb
insb
adc
or
rcrb
ficompl
aam
mov
daa
out
ret
outsl
inc
mov
dec
adc
outsl
and
mov
loopne
ljmp
or
mov
xchg
sbbl
addr16
lds
subl
mov
xor
ja
jns,pn
loop
or
mov
js
xlat
or
jno
loope
lret
pop
pop
imul
icebp
xor
push
sub
sbb
cs
cltd
divb
push
lret
dec
jle
sbb
jg
cmpsl
sbb
xchg
mov
add
push
lock
js
push
aad
das
aam
fisubl
ret
mov
pop
adc
xor
inc
mov
fmull
in
cltd
pop
int3
in
gs
sahf
ss
stc
js
iret
inc
jg
stc
daa
inc
nop
pushf
mov
insl
xchg
iret
fwait
shrb
push
icebp
in
cwtl
mov
pop
inc
into
imul
xchg
inc
sub
dec
adc
pop
int3
shlb
add
cmpb
mov
inc
rclb
xchg
mov
mov
xchg
push
das
frstor
popf
mov
les
mov
pop
adc
add
cmp
ja
lea
jne
adc
lret
aas
outsl
xchg
push
pusha
xchg
sarb
sbb
shll
xchg
rorb
ds
ljmp
jecxz
fwait
inc
fdivrl
mov
adc
scas
sahf
and
push
mov
add
xchg
jl
fwait
mov
pop
lahf
dec
and
xor
xlat
rol
xor
and
and
nop
dec
test
cld
pop
je
push
cmp
lds
mov
test
mov
push
fdivr
dec
push
add
in
leave
jp
push
or
jmp
inc
mov
cltd
cmp
xchg
jecxz
add
aas
xor
adc
ret
leave
popf
stc
lock
jo
push
ds
shll
mov
inc
testl
pop
in
imul
aaa
inc
xchg
out
inc
leave
mov
adc
subb
xor
test
sahf
dec
dec
add
mov
push
fsubs
cmpsl
dec
pop
push
sub
sbb
test
test
adc
or
or
aaa
and
mov
rcrl
pushf
in
add
and
add
ss
nop
cmp
dec
in
pop
test
push
cmp
lods
push
dec
addr16
shll
dec
jns
cltd
test
xchg
scas
addl
mov
in
push
and
xor
aas
jl
popf
sub
or
sub
lcall
loopne
sbb
jne
cwtl
mov
in
sub
cmp
out
imul
jae
pop
xchg
cld
dec
sbb
sub
jmp
jl
jbe
push
cltd
shll
add
mov
repnz
and
lods
pop
pop
push
sti
mov
repz
push
push
mov
js
lret
add
leave
lock
andl
jnp
push
xchg
dec
in
gs
sub
pusha
cld
mov
mov
adc
and
add
pop
xor
mov
sbb
addr16
adc
lret
push
mov
cli
aaa
mov
je
xor
stc
in
leave
cwtl
shl
in
xor
pushf
orl
sbb
lods
nop
insb
adc
dec
cmp
inc
scas
xchg
notl
cld
push
xor
mov
mov
mov
mov
push
icebp
inc
fisttpll
push
jne
inc
xchg
cmp
sbb
data16
out
cld
clc
xchg
mov
push
xchg
push
lcall
ret
fs
push
shrb
les
xlat
inc
jnp
mov
cmp
ljmp
push
adc
sub
push
sub
filds
arpl
js
insl
mov
inc
jmp
mov
cmc
cltd
sub
pop
ret
in
inc
inc
cmovo
test
ljmp
inc
mov
stc
outsl
sbb
rclb
aad
sbb
in
sbb
push
adc
pop
sub
lcall
add
adc
mov
pusha
mov
pop
ret
sbb
lods
or
orl
ss
orb
ljmp
fcomps
or
mov
es
add
dec
aaa
xchg
sahf
lock
jae
aad
cmpsl
dec
sbb
pop
push
mov
repz
out
ljmp
lret
mov
push
mov
mov
mov
sbb
adc
adc
or
jae
mov
test
je
mov
call
rcrb
shll
adc
in
ror
pop
mov
pop
mov
iret
dec
pop
cltd
jp
jmp
jecxz
push
xor
loop
push
lret
mov
sbb
ret
mov
addr16
xchg
in
out
rcl
outsb
and
pop
out
mov
ficoms
push
xchg
imul
insl
mov
cmp
lcall
lods
shlb
xor
fldt
or
jmp
adc
ret
rcr
loop
inc
aam
cmp
rcl
or
dec
test
add
and
mov
jne
cmp
dec
aad
inc
lcall
pop
mov
and
nop
inc
sbb
mov
push
jp
jmp
or
sahf
popa
and
add
add
pop
cmp
fwait
jo
xchg
pop
nop
and
dec
ja
out
pusha
xor
in
pop
sar
and
pushf
into
out
ljmp
ss
push
outsb
adc
xor
out
rorb
and
inc
test
ljmp
add
mov
or
mov
ret
movsb
mov
cmp
and
daa
push
adcl
mov
mov
std
adc
fistl
mov
mov
lea
xor
lcall
outsb
pop
call
sub
outsb
sbb
or
dec
popa
pusha
gs
pop
int
stos
and
adc
les
mov
arpl
fmull
push
jecxz
push
mov
out
in
mov
jg
jg
dec
mov
test
mov
ficompl
iret
add
cmp
test
pusha
sbb
stc
jl
fldcw
sarb
cmp
mov
cs
cld
xor
adc
pop
sbb
movsb
inc
lods
fnstenv
lods
in
add
je
int
das
leave
mov
add
pop
ds
stc
stos
add
xor
test
popa
cmp
sbb
aam
aas
dec
addr16
push
push
aas
js
mov
fsubrl
inc
jae
push
imul
and
lea
into
enter
stos
push
jnp
sbb
inc
sbbb
push
mov
insb
imulb
or
dec
js
inc
inc
xrelease
mov
arpl
sti
dec
pushf
and
std
outsb
mov
adc
bound
in
fidivs
push
add
inc
leave
dec
sbb
or
es
scas
shll
dec
iret
mov
ja
aad
cmp
sahf
dec
das
sub
ret
mov
aaa
jle
stos
xor
ds
mov
adc
dec
mov
and
stos
and
mov
and
outsl
mov
mov
fstp
stc
adc
inc
xor
ja
or
roll
and
call
mov
lock
lahf
std
and
pop
sahf
sbb
out
cld
sbb
jno
repz
lret
dec
xor
lahf
lret
and
das
mov
sub
pop
les
xor
std
xor
jno
or
jbe
test
cmp
sub
sub
arpl
push
push
sub
daa
dec
add
push
cmpb
iret
sbb
and
push
cmp
lahf
pop
xlat
add
or
and
fbstp
xorl
xchg
and
fstl
mov
mov
imull
daa
jge
push
inc
dec
not
xor
mov
and
out
mov
adc
aad
xor
imul
movsl
test
fldpi
test
xor
push
repz
jb
in
out
stc
test
push
lcall
fiadds
ds
addr16
jge
xchg
bound
shr
pop
jo
add
sub
jbe
aad
jecxz
in
mov
in
or
ficompl
jl
jp
and
mov
mov
inc
movzbl
mov
jno
lea
fwait
pop
clc
icebp
scas
push
sbb
dec
fsubrs
pop
addr16
movsl
imul
jmp
les
movsl
mov
sub
cmc
jnp
ja
adcl
fyl2xp1
lret
cmp
icebp
push
int
daa
mov
in
inc
fisttpl
sub
icebp
push
xorl
adc
push
pop
fdivr
xchg
sbb
cmp
nop
cmp
lods
lar
dec
aaa
in
xchg
loopne
xor
xchg
mov
dec
dec
daa
les
add
pop
and
cmpl
sub
jp
mov
sub
add
jl
jecxz
mov
jle
fistl
inc
xchg
aad
xor
lahf
xor
test
clc
jnp
cmp
add
push
fiadds
jge
dec
sarl
push
sahf
cmp
pop
xlat
xchg
adc
or
push
dec
sbbb
mov
and
xchg
data16
shr
and
shl
push
inc
and
add
adc
mov
mov
mov
pop
cmp
ljmp
jg
cld
mov
mov
enter
mov
cmp
lods
push
push
iret
push
aam
int
loopne
lods
int3
mov
add
scas
ret
js
test
xor
cmp
push
andb
int3
cmp
jl
imul
out
push
push
jns
aas
jb
mov
add
dec
aam
out
xor
and
mov
aad
fs
dec
fwait
inc
adc
push
and
int
pop
pop
dec
adc
mov
inc
sbb
dec
dec
xor
int
adc
cmp
cmpsl
repz
xor
cld
xor
jb
fcmovb
test
pop
insl
data16
inc
dec
daa
out
push
das
adc
inc
jmp
mov
mov
stc
movsb
pushf
and
inc
je
sub
les
out
iret
notb
xchg
in
fstpl
or
aam
mov
fnsave
xchg
inc
dec
sbb
testl
pop
xchg
js
sbb
cmp
xor
pop
andb
mov
xor
loope
sub
loop
mov
xchg
xor
pop
adc
ret
test
sahf
sti
add
cmp
inc
pop
dec
stos
popf
add
adc
popf
push
mov
jae
lret
and
jne
fcoml
ljmp
fidivs
dec
mov
jns
mov
jno
ss
inc
cmp
lret
aad
mov
adc
mov
gs
stc
and
test
repz
insb
pop
mov
xchg
shlb
in
leave
fnstcw
dec
jl
repnz
popf
xchg
dec
inc
lock
insl
pop
mov
loopne
sbb
fisttpl
sbb
or
aad
mov
rcrl
out
adc
push
jbe
sarb
adc
dec
out
out
cmp
hlt
xor
adc
popa
fucom
dec
ds
cmpsb
push
mov
add
pop
lods
jl
jmp
dec
and
adc
insl
xchg
imul
scas
sub
mov
fnstenv
jo
dec
add
pop
jg
jb
xchg
mov
iret
mov
xor
imul
push
adc
or
fidivl
int
das
iret
stos
data16
sub
loope
lea
pop
shlb
pusha
adc
mov
outsl
mov
cmp
fwait
fwait
pop
add
push
and
mov
fists
adc
jo
adc
dec
jmp
xchg
sub
les
in
fs
insl
pop
xchg
out
and
pop
frstor
divb
xchg
cli
pusha
xchg
icebp
loop
int
mov
pop
nop
xor
cmp
es
adc
push
mov
add
xchg
xchg
inc
mov
leave
decl
adc
movsb
roll
xor
or
rcrl
pop
or
jns
sub
mov
mov
mov
sub
pop
adc
cmp
outsb
int3
and
sti
inc
cmpsb
mov
xchg
or
xchg
shlb
or
pop
inc
push
hlt
fnstsw
mov
add
loop
inc
arpl
ja
xor
fistpl
daa
xor
incl
add
jns
ret
cmpsl
adc
test
mov
dec
lds
outsl
das
jmp
push
pop
sbb
pop
insl
sbb
xchg
icebp
mov
inc
in
insb
add
push
hlt
jg
movsl
lods
test
mov
mov
jle
add
pusha
adc
pop
cld
cmp
data16
stos
mov
inc
gs
repz
icebp
std
dec
inc
loopne
sbb
cmp
pop
lcall
adc
xor
mov
mov
std
dec
popa
pop
jae
mov
sbb
sbb
clc
leave
dec
movsl
loopne
xchg
cmpb
adc
rorl
sbb
mov
push
adc
ss
cld
stos
data16
xchg
fld
inc
xchg
adc
hlt
jo
mov
jg
mov
sub
jno
pusha
mov
lods
daa
aam
hlt
mov
repnz
mov
movsb
mov
jno
add
out
int
or
in
inc
movsl
imul
inc
std
lret
stos
pop
addl
pop
and
loopne
test
or
xchg
scas
inc
pop
add
pop
shll
dec
and
call
xchg
or
or
movsl
jmp
adc
into
pop
mov
in
das
push
cmp
fcoms
ds
pop
into
xor
cli
in
int
cmp
dec
jg
dec
mov
mov
adc
and
add
popf
inc
std
sbbl
adc
fnstenv
xchg
inc
mov
xor
xor
lods
jge
lcall
into
mov
jnp
mov
je
jp
mov
and
jp
repz
add
add
add
xor
xor
lahf
push
shlb
mov
movsb
xchg
lods
pop
and
sub
add
leave
push
in
lgs
movsl
dec
fwait
cld
cmp
mov
push
push
cmpsl
dec
pop
lds
push
mov
int
mov
sti
inc
add
bound
movsl
jno
cmpsl
leave
inc
pop
cmp
cmp
dec
sub
sub
movsb
pop
lods
test
and
lcall
dec
nop
int3
push
mov
rcr
das
jmp
in
push
lock
cltd
mov
nop
aam
into
stc
scas
xchg
ds
in
outsb
dec
mov
hlt
jb
hlt
std
xchg
sti
inc
mov
jp
jbe
inc
cwtl
adc
mov
add
xor
fistpll
outsb
sahf
mov
sub
test
and
push
jne
jns
loope
fdivl
xor
je
sub
mov
xchg
xchg
mov
jnp
mov
inc
mov
mull
or
mov
xchg
adc
and
and
sbb
test
syscall
scas
test
and
dec
hlt
inc
pop
bound
icebp
pushf
lret
aas
out
add
and
shll
out
test
or
xchg
shll
test
lret
and
sbb
and
fisubs
xlat
test
in
jo
in
or
push
inc
shrb
adc
sti
push
cmc
daa
div
jns
dec
dec
or
sti
addr16
add
aaa
mov
jl
push
fs
js
push
add
adc
xor
cmp
fs
mov
test
pop
adc
pop
nop
mov
sub
mov
fwait
dec
add
and
mov
cmp
add
imul
add
add
xorl
fsubrl
sbb
add
int3
cmp
jg
push
or
push
rclb
fnsave
mov
adc
andb
jle
or
pop
outsl
or
dec
push
sub
daa
in
adc
push
into
fsts
pop
ja
iret
movsb
dec
faddl
nop
adc
fnstsw
sub
pop
mov
pop
sub
or
sbb
cwtl
int
scas
adc
das
leave
jmp
inc
mov
jle
inc
dec
aaa
out
inc
xor
push
ret
add
ds
mov
insb
and
stc
lea
mov
mov
adc
int
xor
xor
push
mov
sbb
lods
out
sub
adc
int
jp
cmc
mov
xchg
xlat
add
andb
and
ss
outsl
movsb
jl
mov
aas
jl
mov
fs
cmc
or
scas
push
movsl
cld
add
push
sub
iret
and
jmp
mov
mov
in
inc
mov
or
into
xchg
and
add
jmp
lahf
add
xor
jge
sbb
add
lahf
leave
cmp
gs
mov
or
daa
loope
and
adc
lahf
push
clc
mov
test
in
cmp
call
rorb
andb
adc
dec
imul
pop
cli
lock
addr16
out
out
cmpsb
xchg
sub
or
inc
adc
add
fwait
add
mov
imulb
inc
xchg
in
icebp
insl
or
push
mov
sbb
xor
sarb
adc
rcl
mov
mov
inc
faddl
nop
in
rclb
add
jl
jbe
sbb
push
pop
sti
je
pop
popf
jle
sbb
inc
gs
fildll
daa
pop
mov
cmc
pop
test
xor
call
dec
mov
je
dec
into
pop
lahf
add
aas
xchg
cmp
les
inc
jno
out
aam
roll
sti
cld
in
mov
filds
add
divb
xor
add
lods
aaa
repz
sub
mov
test
add
jbe
push
push
push
mov
push
movq
test
popf
mov
call
rorl
int
cld
in
aas
lcall
add
ds
jb
adc
js
arpl
rcl
mov
adc
inc
lcall
sbb
mov
hlt
mov
bound
out
xor
pop
mov
ja
push
stos
aas
jecxz
mov
sub
mov
repz
test
mov
xchg
or
adc
sub
out
ds
mov
adc
popf
jno
stc
ja
lea
loopne
fwait
rcll
dec
or
divps
sbb
sbb
imul
mov
fdivl
popf
sbb
mov
ds
int
pop
sti
jmp
mov
adc
icebp
mov
loope
push
mov
pusha
inc
lods
shlb
xchg
mov
sub
jne
inc
and
xlat
mov
loopne
cltd
fdivrs
insl
mov
repnz
and
mov
fcoms
push
mov
inc
insl
xchg
out
and
jae
test
jbe
add
and
aaa
mov
jb
fcoml
add
dec
jnp
jns
push
cwtl
inc
mov
add
int
add
mov
pusha
mov
push
sub
push
sbb
enter
in
push
dec
in
leave
mov
pop
xorl
rorl
shrb
fldl
es
xchg
data16
cld
pop
adc
and
xor
sub
or
pushf
test
sbbb
mov
outsb
mov
shlb
and
scas
outsb
adc
sti
loop
mov
add
sti
fnstcw
cmp
ja
cmc
xchg
insb
leave
xchg
test
sbb
fstpl
xor
js
xchg
push
and
mov
push
jg
lea
js
aad
push
or
push
push
and
pop
xchg
sti
xor
adc
sarl
add
mov
fwait
shll
dec
fbld
add
adc
and
and
lods
sub
jecxz
aad
cmc
sub
mov
inc
test
xchg
and
jmp
jge
dec
cmpl
or
mov
sbb
aas
push
jp
pop
imul
dec
loop
jno
mov
and
rcrl
scas
and
iret
rol
lea
fs
xor
clc
test
jl
insl
cmp
dec
and
inc
add
jp
sbb
push
cmp
sbb
jbe
aad
and
pop
lock
mov
cltd
daa
jae
sahf
test
inc
push
push
inc
mov
ja
lods
lock
loop
dec
mov
cmpsb
ror
dec
xor
push
pop
mov
je
or
insb
adc
push
mul
jne
mov
push
aaa
outsb
arpl
mov
jmp
bsf
popf
mov
mov
clc
pop
push
pusha
xor
sub
sub
ficoml
inc
sub
outsb
arpl
adcl
cld
es
lds
mov
dec
and
stc
in
xchg
cmp
adc
ret
dec
repz
add
jmp
in
daa
push
test
xchg
xor
or
ds
jbe
xor
sbb
test
mov
lock
test
std
aaa
mov
mov
js
jmp
xor
sbb
fildll
sbb
insl
cld
loope
ds
iret
bound
lcall
bound
xor
call
test
pop
addr16
repz
inc
outsb
xchg
cmc
mov
lock
add
push
jge
iret
dec
nop
pop
push
icebp
dec
jbe
mov
out
ret
shrb
pop
sbb
dec
and
clc
cmp
mov
int
repz
sbb
les
jle
pushl
mov
shlb
je
dec
leave
mov
mov
or
push
fsubr
add
stos
fildl
call
popa
xor
fmul
or
dec
fucomp
jp
cld
add
rol
sub
popa
dec
or
mov
add
xchg
jp
jmp
sub
cmp
sti
dec
inc
push
push
gs
in
cmpsl
fadds
jo
and
fwait
mov
push
imul
mov
mov
xchg
daa
test
push
xchg
es
mov
xor
inc
mov
jno
cli
push
mov
iret
mov
in
xor
jo
cmp
cmpsl
flds
xchg
pop
jle
ficomps
cmc
std
into
jmp
test
fsubs
jbe
lret
dec
jp
daa
add
xor
subl
fwait
jns
pop
pop
mov
jne
mov
ja
int3
jo
add
stos
xor
je
inc
sti
call
push
jae
lret
cmc
loopne
push
lcall
push
push
scas
out
daa
cwtl
inc
test
mov
pop
cmp
lds
jle
decl
xchg
loope
stc
decb
sbbb
fistps
mov
fistpl
pop
lret
aad
mov
push
stc
pop
aad
sub
sub
cmp
nop
and
pop
mov
push
pop
xor
test
mov
sbbb
pushl
add
out
adc
loope
cltd
add
mov
scas
xchg
mov
pop
pop
xchg
cs
ss
nop
stos
mov
jnp
std
xor
inc
ss
es
xor
xchg
xchg
xchg
test
cmp
cmc
pop
mov
and
sbb
xchg
fldl
jecxz
repz
pop
adc
jmp
leave
scas
and
lds
jmp
push
shlb
scas
insl
int
adc
pushf
clc
lret
sahf
les
or
dec
xor
inc
in
in
cltd
push
and
mov
cmp
jg
mov
repz
pop
mov
push
mov
jle
imul
mov
and
jge
stc
loopne
dec
mov
subb
int3
or
push
shll
xor
sahf
or
ret
fadds
enter
adc
or
aaa
fidivs
imul
icebp
add
mov
outsb
mov
nop
push
fsin
fldenv
loopne
mov
or
xor
sub
sub
lea
fdivs
cmp
jle
rcll
stos
lods
jno
jns
hlt
hlt
jmp
dec
jmp
mov
js
aas
jae
test
cs
fdivrl
push
dec
sahf
add
in
scas
xor
setge
mov
flds
jge
adc
cmp
cwtl
push
jle
xor
dec
mov
jns
ljmp
cs
call
adc
scas
xor
rcrl
sbb
pop
popa
call
outsl
jae
xorl
push
lcall
loope
clc
daa
cmpsb
add
insl
out
and
inc
xchg
jae
bound
sub
adc
xchg
and
push
leave
cmpsb
pusha
cwtl
dec
or
or
addr16
push
outsl
push
aas
xchg
orb
pop
cld
loope
dec
mov
cwtl
or
aaa
add
and
out
lods
bts
mov
stc
shlb
es
jno
arpl
or
adc
lret
cwtl
loope
das
lahf
out
jecxz
mov
pop
nop
out
fmull
push
mov
std
inc
push
fdivrs
hlt
in
cmp
shlb
xchg
loope
jecxz
and
dec
js
or
roll
mov
xor
cmc
mov
lock
out
mov
jl
xchg
dec
nop
sarb
sub
bound
fwait
jmp
inc
mov
fcomip
inc
and
shlb
cmc
aas
inc
je
mov
lret
hlt
in
inc
aam
mov
push
outsl
lock
hlt
jmp
je
fwait
cmp
and
std
lret
dec
dec
push
call
mov
out
and
pop
lea
add
dec
push
hlt
mov
js
out
lock
dec
jle
add
jp
jnp
ss
nop
pop
lret
iret
inc
mov
mov
xchg
xchg
int
sub
add
mov
sbb
cmpl
pop
pop
icebp
push
mov
dec
rcr
inc
mov
fadds
pop
and
mov
add
mov
insb
into
add
inc
loope
pop
pop
sbb
adc
and
ljmp
cmpsb
stc
clc
jmp
fiadds
frstor
push
adc
and
lock
pop
push
adc
insb
stos
roll
nop
faddl
jl
rcrl
sub
pop
movsl
nop
xor
pop
fucomip
pop
and
or
outsb
sti
cmp
das
pop
negl
in
lea
mov
cmc
loope
mov
int
scas
xor
sub
lea
push
cmp
vmread
stos
jmp
mov
mov
sub
fwait
push
mov
scas
lret
aaa
push
mov
push
popf
stos
inc
fsubl
xor
or
ja
lret
popf
mov
and
lret
lds
stos
xchg
inc
inc
xchg
dec
sti
popa
aad
dec
push
clc
and
sbb
fs
out
add
cmc
pop
mov
cmp
xchg
fucomi
pop
mov
xchg
ds
sarl
dec
les
mov
out
das
jge
rcr
in
jnp
shll
fchs
int
cmpb
loope
subl
push
cmpsl
loop
sub
rcr
imul
sub
add
pavgb
sbb
pop
mov
pop
xchg
sbb
inc
sbb
push
pop
pusha
push
xor
addb
sbb
jne
add
mov
sbb
subb
stc
nop
adcb
mov
fwait
fs
cmp
jae
sub
out
lret
add
and
mov
cmp
sbb
or
pop
sub
cmp
push
mov
and
ss
std
in
and
aad
sub
repz
mov
push
push
imul
gs
dec
cmp
add
push
cmp
shrb
je
ds
repz
or
and
push
cmp
jne
in
dec
mov
or
out
test
pop
cmpsb
lea
enter
addr16
ficomps
sbb
sub
mov
lds
cmp
mov
fidivs
lcall
add
js
push
pop
testb
xlat
add
cmp
test
cmp
data16
adc
clc
mov
push
movsb
jecxz
mov
mov
pop
cmpl
int3
stos
nop
sbb
inc
mov
mov
pop
pop
xchg
xchg
mov
xchg
mov
jbe
inc
xchg
add
pop
fists
push
add
adc
mov
inc
pushf
mov
xchg
gs
test
mov
pop
fstp
imul
std
xor
das
inc
hlt
jp
adc
cmc
push
gs
inc
push
cs
imul
jnp
push
orb
pushf
lret
xchg
xor
hlt
jg
shlb
das
cmp
push
jns
add
xchg
sbb
repnz
or
xchg
xchg
lds
mov
xorb
lds
add
adc
repz
add
cmp
into
cmp
or
popl
ficomps
test
dec
fadds
fnstcw
mov
fs
jl
test
add
orl
out
dec
fnsave
fsubrs
pop
stos
mov
ljmp
mov
imul
or
testl
iret
and
xchg
inc
insb
ja
or
sub
xchg
imulb
xchg
push
loope
loopne
push
shl
mov
jns
adc
cmp
or
sub
cs
mov
or
add
cmpsb
push
or
cltd
scas
sbb
stos
data16
jecxz
repz
mov
mov
das
adc
and
push
dec
es
pop
jle
aam
cmp
mov
mov
cltd
cmp
dec
movsb
test
push
inc
mov
cmc
xor
cmp
xlat
mov
cmp
xchg
cmp
push
add
scas
pop
cwtl
out
in
inc
pop
call
add
push
jl
fsubrs
bound
test
dec
dec
lret
inc
or
mov
fs
pusha
cmpsl
inc
adc
pop
std
lea
adc
dec
ds
iret
out
aas
inc
add
mov
push
inc
inc
repz
mov
mov
pusha
daa
movsl
mov
jp
push
inc
andb
out
aad
stos
jp
outsl
cmc
movsb
or
icebp
dec
mov
mov
push
mov
popf
mov
adc
sahf
xchg
cltd
lea
scas
mov
shrb
jne
lret
xor
ja
xor
push
insl
push
sub
popf
hlt
mov
addr16
sbb
pop
popf
pop
sahf
inc
ret
je
sti
shl
dec
jp
cmpsb
scas
jle
fucomip
pop
mov
outsl
cltd
std
jmp
repz
or
mov
psrlq
outsb
mov
arpl
xchg
mov
jne
movlps
fcomps
and
cltd
mov
push
test
xor
sub
lock
cmp
mov
mull
loop
push
push
mov
pop
iret
mov
pop
push
adc
fldenv
jle
imul
fiadds
shl
mov
lea
push
popa
sbb
pop
mov
jg
into
insb
mov
in
mov
inc
adc
pusha
sub
pop
daa
in
mov
dec
sbb
push
push
or
test
sbb
mov
mov
push
imul
ret
jge
bound
sahf
nop
or
cwtl
out
rcr
in
jp
or
movsb
div
daa
push
xor
jnp
es
cmp
iret
pop
dec
es
ret
imulb
sbb
out
add
mov
loop
iret
int3
xchg
cs
mov
mov
push
in
ljmp
lea
or
aad
dec
sub
flds
mov
sub
dec
std
xchg
movsl
cmpb
leave
dec
subb
mov
dec
lret
lock
shr
or
and
out
pop
push
test
pop
push
push
in
sub
inc
add
ret
fists
pop
sbbb
add
outsl
jnp
dec
sub
or
inc
shl
and
cmp
jge
cmpsb
inc
pop
adc
lret
lock
sub
aas
xor
dec
lret
mov
pop
pop
dec
inc
ret
ds
pusha
out
in
daa
js
out
stc
stos
cmp
loop
arpl
lods
push
cli
mov
pusha
adc
pop
dec
xorb
int3
mov
mov
xor
xchg
fildl
xor
insl
rclb
decb
mov
jbe
sub
xlat
cmp
scas
pop
cmp
push
in
out
pop
jne
das
xor
stos
fdivs
push
ss
fsubrl
xchg
in
xor
sbb
mov
mov
pop
jl
mov
pop
ret
lcall
jne
cs
in
mov
jno
ds
in
fadd
sbb
outsl
push
or
jecxz
xchg
ds
es
jno
rcrb
xlat
jno
xor
in
mov
sbb
cld
in
or
mov
and
testb
cmpb
aam
push
sub
push
stos
into
mov
fprem
mov
jecxz
das
test
dec
out
xor
pushf
loope
shrb
mov
push
pop
fists
pop
push
js
ja
and
cmp
sub
int
sbb
bound
nop
sub
add
sti
add
in
outsl
mov
jge
mov
sbb
jnp
inc
mov
dec
sahf
arpl
jb
pop
inc
mov
pop
jns
cmp
cmp
movsl
ds
lock
add
mov
jno
jbe
lret
icebp
or
call
add
xor
pop
in
add
mov
sbb
sti
dec
fiaddl
mov
pop
rorb
push
push
pushf
push
jge
icebp
adc
scas
pop
lcall
lea
lods
test
and
ja
das
js
fcomps
mov
add
or
xchg
loop
mov
push
js
or
fimull
outsl
mov
xchg
adc
fwait
scas
std
xchg
loope
pushf
or
dec
add
jp
lcall
lret
les
xor
bound
arpl
fsub
movsl
daa
lods
mov
cltd
dec
lds
jno
lods
mov
cmp
mov
jle
test
or
sbb
in
add
aad
sub
mov
fdivrs
push
adc
jns
je
push
retw
fdiv
dec
cmp
or
fldt
lods
mov
and
call
mov
insb
push
mov
add
sbb
inc
mov
sbb
popf
inc
adc
add
mov
xor
int3
popa
movsl
sahf
iret
ret
xchg
data16
mov
cmp
test
fiadds
inc
push
mov
mov
cmpsb
sub
pop
xor
out
pop
sub
jno
stos
into
lods
out
jb
mov
jp
push
xorl
mov
movsl
xchg
fwait
data16
sti
jge
into
les
mov
xchg
mov
jae
stc
imul
jns
in
clc
sbb
inc
inc
mov
movsb
out
ret
xor
xlat
inc
out
hlt
faddp
push
push
movsl
fcomi
adc
inc
faddp
dec
or
stos
jbe
adc
push
sub
xchg
dec
in
pop
fimull
insb
sbb
fidivrl
push
xor
call
lock
dec
rcrl
cmpb
xchg
imul
or
imul
xchg
pop
add
push
cmpsb
fmulp
add
mov
sub
fwait
xchg
mov
js
cmpb
rcrb
cli
cmp
add
in
fwait
sbb
jne
fisttpl
fidivrs
ljmp
scas
and
cmpsb
fwait
push
xlat
jle
out
pushf
push
and
xor
dec
lods
xor
gs
cmp
push
sub
in
scas
and
lea
jne
adc
rorb
movsl
in
mov
ret
test
lcall
dec
jo
adc
bound
loopne
xor
jecxz
repnz
dec
cld
shr
jp
dec
dec
cmpsb
pop
inc
mov
sub
cmp
mov
jg
adcb
push
bound
xchg
xchg
adc
pop
adc
pop
std
adc
add
nop
repnz
in
loopne
push
movsl
jno
rclb
jecxz
pop
imul
dec
popf
mov
daa
add
adc
inc
lods
pop
pop
out
lahf
inc
stos
je
or
mov
xor
push
arpl
cmp
lret
jl
test
mov
es
push
jl
push
insb
xchg
popf
test
test
and
imulb
out
jnp
dec
sub
xlat
push
add
adc
stos
sub
push
aaa
mov
mov
pop
adc
jmp
jg
xchg
sub
lock
and
sbbb
loope
pop
das
mov
mov
lock
push
mov
gs
add
or
cmpsb
ja
mov
movsb
jl
out
cmp
fcoms
mov
sbb
cmp
inc
jns
pop
loope
dec
imul
cld
les
inc
stc
nop
xlat
push
cwtl
int3
jns
mov
mov
popf
sub
sti
dec
fdivl
popw
mov
insb
and
sub
adc
in
mov
mov
leave
stos
push
aas
xor
dec
ret
sub
push
inc
repz
ficompl
fsubl
adc
nop
popf
xorl
lea
pushf
jnp
data16
jb
jp
idiv
xlat
in
inc
lret
ret
int
orb
xor
xor
ret
or
int
pop
jmp
adc
mov
cmp
ds
icebp
xor
jmp
repz
cltd
xor
ja
lcall
ret
push
fisubs
mov
sub
inc
mov
insl
add
pop
sbb
movsl
mov
mov
xor
mov
push
scas
or
push
xor
push
xorl
mov
in
jo
mov
mov
js
insl
mov
stos
and
pop
mov
inc
push
jne
cli
ja
loope
fidivrs
adc
lret
ret
test
cmp
xchg
repz
pop
lods
nop
arpl
xor
cld
adc
mov
jo
je
xchg
sub
xchg
inc
or
xchg
insb
jecxz
ds
sbb
jp
shrb
nop
jb
mov
cmp
rolb
mov
loope
dec
sub
ficompl
mov
pop
mov
mov
mov
addr16
jbe
inc
out
xchg
hlt
mov
cmpsl
mov
inc
or
pop
inc
fisttpl
repnz
xor
adc
pop
xchg
sbb
movsb
outsl
int
jecxz
movsb
int
fnstenv
mov
int
insl
imull
xchg
push
sub
cs
aad
pop
shll
out
js
pop
mov
notb
dec
adc
sti
inc
sbb
pop
repz
xchg
sbb
testl
mov
mov
pop
mov
xor
mull
and
jg
add
ret
jl
or
ja
fadds
ret
pop
push
mov
pop
jl
cmp
push
jmp
adc
adc
adc
into
dec
add
dec
addr16
sub
outsb
sbb
or
xchg
and
sarl
call
jl
rorb
dec
push
xlat
das
inc
inc
xor
mov
xchg
fnstsw
mov
addl
cwtl
fildl
jae
dec
int3
mov
xchg
jns
or
les
and
jmp
sub
rcll
lahf
sbb
push
sbb
loopne
rep
xchg
insb
lahf
std
loope
gs
mov
sub
lahf
aaa
push
xchg
pop
adc
cmp
out
add
mov
mov
stc
aad
cmc
in
repz
add
mov
pusha
push
xor
movsb
pop
shlb
ret
outsl
stc
test
xor
adcl
and
scas
cmp
fidivl
xchg
addr16
add
add
push
mov
int
std
adc
fcmovnbe
cmpsb
insb
jns
aam
lret
lods
ret
out
lret
fsub
lret
pop
popa
sub
es
adc
xchg
stc
repnz
mov
inc
pop
inc
test
fwait
mov
mov
aad
repz
push
cmp
xor
popf
outsl
push
arpl
movsl
jb
push
mov
jge
aad
push
ret
pop
insb
pop
adc
sub
stos
push
sbb
dec
fmuls
icebp
movsl
and
inc
jno
cld
adc
mov
mov
pop
and
mov
and
jbe
js
loope
push
push
push
cwtl
in
mov
cmp
xchg
out
sbb
ret
addl
mov
jae
sbb
ds
in
lea
jge
xchg
inc
xor
out
lock
ljmp
and
idivb
fsubrl
adc
shll
fisubrl
mov
add
or
inc
stc
mulb
ret
mov
lods
fildl
cmp
mov
lcall
jp
sbbl
cmp
xchg
clc
cmp
lds
sbb
sbb
adcb
mov
lea
cwtl
inc
ss
mov
xor
or
inc
gs
movb
es
add
jb
fbld
jp
jae
jns
cli
lock
add
mov
mov
popf
or
mov
and
mov
add
inc
lods
or
push
mov
es
ja
cli
jb
sahf
mov
mov
addl
js
bound
mov
fld1
out
lods
aad
cmc
pop
mov
and
lahf
nop
and
or
cs
pop
sub
jle
mov
jp
lahf
mov
jecxz
scas
push
pop
stos
mov
movsl
out
imul
jbe
movb
cmpsl
scas
mov
mov
cmp
xor
popf
push
ficomps
mov
cmp
and
lods
std
xchg
lcall
adc
mov
sbbl
cmc
pop
and
mov
outsl
call
jecxz
out
stos
xchg
push
xchg
sbb
pop
aaa
adc
adc
popf
xor
sysret
jnp
fstps
lahf
xor
add
and
pusha
fdivp
out
inc
or
push
shll
pushf
mov
jae
pop
sub
xchg
or
push
jl
stos
mov
fisttpl
aad
popa
sbb
fcomi
shll
xor
lods
roll
fnsave
daa
jl
cli
in
repnz
mov
inc
jae
aas
cltd
into
pop
sbb
ret
nop
add
out
jo
xor
push
jl
ret
jl
das
adc
sbb
jnp
xchg
mov
jns
mov
test
xlat
pop
sbb
fistl
nop
nop
or
nop
test
mov
repnz
mov
dec
mov
popa
popa
lret
push
out
push
shrl
push
jno
dec
inc
xchg
mov
sub
mov
push
xor
xor
insb
aaa
fisttpll
xchg
jno
xor
ret
inc
push
lahf
out
xchg
cltd
ds
mov
stos
shrl
sub
mov
xchg
xor
pushf
push
lods
movsb
sahf
ss
push
sahf
or
rorl
lahf
ret
mov
hlt
mov
pop
lods
imul
mov
push
mov
adc
xchg
sub
mov
dec
lcall
adc
adc
jle
dec
inc
cmp
std
imul
jae
inc
xchg
jbe
jne
inc
mov
pusha
cwtl
pop
data16
add
mov
jb
loope
xchg
mov
fiaddl
mov
js
aaa
and
mov
add
js
rcl
lret
pushf
mov
mov
testl
cmp
imul
aam
mov
rolb
push
das
insl
mov
jbe
inc
data16
sub
jbe
into
lret
adc
incb
cli
dec
xchg
lahf
pop
jns
or
cmp
jge
adc
cmp
and
cmp
ljmp
mov
jo
or
pop
inc
or
jo
jecxz
pop
mov
call
pop
dec
mov
jle
or
ds
pop
cld
sub
push
in
stos
ss
and
rcl
in
nop/reserved
or
mov
aad
push
cmp
imul
mov
iret
inc
seta
fistpl
fildl
pop
insl
mov
test
push
mov
insl
cmpsl
jecxz
subb
push
iret
out
mov
adc
or
mov
and
inc
mov
addr16
insb
pushf
mov
sub
mov
lret
std
adc
out
or
fimuls
and
sbb
fdivrl
ds
scas
sahf
mov
movsb
sub
es
lret
repz
cmp
lcall
cmp
lods
scas
push
jnp
xchg
adc
bound
adc
pop
inc
aam
inc
push
je
mov
mov
jo
insl
xchg
out
jle
fiaddl
dec
xchg
sub
out
xchg
and
cmpsb
dec
jge
jg
shrl
cmpsl
test
dec
dec
jp
xorb
mov
sbb
mov
add
stos
push
add
dec
pop
and
std
jecxz
mov
call
xor
arpl
movl
in
push
or
ret
push
jl
orl
inc
lods
cli
push
int3
test
mov
adc
cs
cltd
fnstcw
je
iret
test
jecxz
mov
adc
xor
cltd
shll
xor
pop
add
imul
xchg
jmp
cmp
sub
shr
out
cmp
rcll
sbb
and
ja
aam
or
lods
push
test
out
adc
mov
std
in
and
imul
aad
andl
mov
jnp
xlat
in
mov
lcall
lahf
or
xor
rcrl
push
cmp
out
cli
sub
cmp
out
lock
or
xchg
pop
fiadds
pop
push
jno
movsb
clc
cld
call
icebp
mov
dec
or
add
add
jp
adc
or
shrb
leave
sahf
subl
dec
mov
sub
je
hlt
add
ret
mov
movsb
and
clc
cli
outsb
je
mov
daa
sub
aam
mov
sub
mov
pop
imul
push
jp
push
sub
icebp
roll
cmpsb
pop
loope
fwait
and
xchg
mov
or
dec
jne
call
mov
mov
dec
push
std
aad
repz
leave
frstor
sub
ja
or
lock
repnz
fdivp
out
hlt
push
int3
clc
sub
and
testl
aad
jns
pop
mov
push
insb
ds
dec
fisubl
dec
imul
popf
test
xor
sbb
push
mov
xor
and
pop
ljmp
inc
cltd
sbb
sub
adc
jae
and
lahf
sti
mov
dec
sti
lods
jmp
cmp
pop
jo
mov
jno
mov
hlt
cmp
dec
flds
mov
mov
fdiv
cs
bound
cld
fnsave
xchg
push
jae
mov
jmp
mov
adc
inc
sub
mov
sbb
push
stos
jecxz
pop
add
scas
test
lret
clc
xchg
push
cmp
mov
js
pusha
cmp
xor
jmp
push
xchg
sbb
ror
aaa
stc
shlb
xchg
nop
push
add
dec
mov
cmp
pop
xchg
push
das
xor
lea
jp
mov
out
push
jmp
jnp
mov
mov
pop
mov
jb
lahf
push
cli
cmp
lea
dec
lods
cmpb
xor
shrb
mov
push
pop
inc
andnps
mov
loope
cmc
xchg
xlat
dec
fnsave
push
arpl
jle
push
fs
fstps
sbb
push
lods
iret
loope
hlt
dec
mov
cmp
loope
cli
mov
cld
jne
ds
dec
xor
fwait
jge
dec
aas
lret
mov
bound
pop
jmp
cmp
cmpsb
shll
mov
inc
mov
divb
cmp
or
rcl
mov
repz
cmp
stc
cmp
rorl
aam
movsb
and
popf
xor
insb
push
mov
and
sbb
enter
roll
push
cs
stos
outsl
loope
mov
leave
jae
inc
mov
cmp
inc
mov
adc
stos
sarb
jb
loope
pop
mov
inc
adcb
cli
lret
daa
xor
cmc
jle
mov
icebp
outsl
dec
mov
push
jo
out
imul
or
lea
cmpsl
push
iret
mov
in
out
mov
imul
ss
pop
int3
loopne
sub
cmp
lock
loop
fidivs
adc
stc
fistpl
cmpsb
sub
or
jb
imul
loopne
cwtl
pop
jno
mov
and
cmc
mov
mov
pop
lea
rcll
test
jo
fcoml
enter
std
adc
fiadds
pusha
push
sub
mov
push
into
mov
je
adc
mov
repnz
cmpsl
loop
into
ret
push
stos
mov
fcomps
out
jge
mov
or
fdivr
lcall
shrb
jl
enter
push
jbe
dec
jb
fwait
jns
sbb
mov
mov
adc
mov
les
push
imul
jae
add
test
cwtl
cwtl
and
xchg
mov
gs
and
fs
mov
or
mov
dec
in
and
cmc
adc
aaa
rorb
adc
je
xor
lods
mov
mov
mov
cwtl
dec
xchg
jmp
ss
hlt
int
sarl
dec
mov
ret
notb
and
xchg
stos
mull
or
sbb
pop
loop
xor
add
sub
cmp
popa
xchg
push
jmp
mov
jg
cmp
lds
movsl
out
repnz
dec
add
sbb
or
out
rcl
dec
jae
nop
nop
mov
pop
pop
mov
inc
jae
cmp
jle
fmull
aaa
fcmove
push
adc
popa
xchg
and
jg
sahf
cmp
nop
jp
mov
test
in
adc
push
and
dec
jno
xor
jg
ss
jns
aam
stos
mov
shrb
dec
or
push
es
ss
inc
stos
xor
or
int3
or
or
mov
jecxz
call
adc
dec
sarl
and
jmp
mov
cmp
out
imul
push
leave
xlat
pop
mulb
pop
test
jle
mov
sub
shlb
push
push
adc
inc
mov
and
insl
mov
xchg
mov
xchg
shl
ss
aaa
adc
adc
lcall
and
fwait
scas
ret
jecxz
xchg
xor
out
adc
mov
xchg
xchg
mov
push
stos
adc
adc
les
pop
lods
push
adc
out
sbb
mov
push
push
mov
jb
ja
dec
xor
cmp
scas
lods
lret
xor
ror
push
fidivrs
sbb
cltd
lock
jno
stos
xor
lahf
adc
out
jns
das
scas
push
mov
inc
jns
dec
cmp
inc
jmp
cmp
cmp
jmp
es
dec
int3
jge
push
imul
pop
shrb
je
gs
test
jmp
mov
jl
pop
imul
sub
pop
mov
in
push
or
push
bound
push
loope
jb,pt
mov
inc
xor
popa
lds
xchg
adc
pop
ss
mov
and
mov
cli
fbstp
sub
aaa
adc
call
push
jl
out
fists
fnstsw
imulb
outsl
cmp
xchg
pop
das
sbb
cmp
aas
mov
ret
fisubrl
lret
mov
aas
je
adc
pop
test
sub
fs
jmp
push
fnstcw
stc
fisubl
pop
mov
stos
dec
repnz
sub
pop
aas
movsl
jae
imul
repnz
jecxz
sub
pop
mulb
jb
jns
sub
es
or
test
inc
pop
outsl
adc
mov
pop
movsb
jmp
shl
lods
js
lret
sahf
mov
js
sub
add
dec
hlt
mov
adc
xchg
mov
mov
insb
in
test
sub
pushf
outsb
mov
mov
xor
mov
outsb
in
cmp
mov
outsl
fdivl
jne
adc
or
and
add
icebp
adc
arpl
cmp
dec
mov
daa
test
push
jmp
aaa
xchg
pop
mov
or
and
fbstp
arpl
pop
pop
int
dec
inc
es
dec
mov
or
nop
aaa
subl
push
fstl
les
int
cmp
mov
test
xor
jo
sbb
jne
jecxz
add
clc
mov
out
xchg
sbbl
test
cld
pop
xchg
das
mov
push
add
xor
enter
loopne
pop
xchg
dec
xchg
jge
push
pop
mov
inc
dec
fnstcw
mov
xchg
mov
pop
cltd
lret
or
flds
mov
mov
adc
fwait
inc
insl
xor
repnz
shr
dec
imul
sbb
cmpsl
hlt
push
push
orb
push
cmp
push
pop
fidivrl
stos
xchg
cmc
pop
xor
int3
push
push
test
sbb
xchg
xchg
test
lea
pop
icebp
scas
insl
mov
aaa
mov
inc
test
test
pop
bound
stos
cltd
cli
mov
int3
mov
mov
inc
add
mov
mov
and
dec
lds
out
je
mov
call
lds
data16
stos
stc
sbb
ja
xor
test
sub
add
pushf
ret
cmp
mov
pop
out
inc
and
mov
or
dec
lahf
outsl
push
xor
jle
pushf
out
lret
dec
es
pop
jp
jle
out
aad
out
xchg
inc
mov
lds
daa
iret
jno
push
bound
push
mov
jmp
push
addr16
test
mov
fisttpll
lods
incl
int3
scas
mov
and
mov
jne
push
incb
into
out
bound
xchg
mov
pop
movsb
movsl
pushf
mov
js
fldenv
out
test
adc
inc
lahf
cmc
pushf
orl
addb
pop
test
arpl
inc
repnz
lods
loop
out
iret
adcb
out
repz
lahf
dec
dec
mov
movsl
mov
cmpsl
add
dec
movsb
mov
lods
jno
or
nop
enter
pop
icebp
loope
xchg
out
cs
inc
call
xchg
pop
jnp
pop
jmp
fistps
cwtl
sub
push
sub
adc
pop
int3
pop
dec
dec
ljmp
jne
popf
or
dec
in
lcall
addps
fadd
js
lock
sbb
cmp
fdivs
jae
jne
std
jle
lcall
push
lds
inc
fdivl
adc
fidivrl
xchg
fstl
inc
add
test
xor
enter
mov
jp
outsl
mov
jge
and
pop
jecxz
sub
in
mov
testb
add
or
pop
scas
pushf
or
movsb
iret
xchg
or
cwtl
out
sahf
cmpsb
out
push
ds
jle
adc
addr16
in
aaa
js
and
lods
push
cs
outsl
push
cli
inc
mov
mov
cld
push
lock
repnz
add
xchg
inc
sar
or
jg
maskmovq
imull
insb
lods
pop
es
imul
push
cmpl
les
test
jnp
xor
mov
inc
int3
adc
movsl
es
dec
lods
dec
lds
stc
cmp
push
out
lss
jge
xorl
lock
sbb
loopne
cmp
mov
jecxz
sub
fwait
cwtl
lock
push
add
or
or
mov
mov
cmp
jge
sar
mov
stc
ja
lods
jp
push
push
shll
insb
xchg
or
pop
arpl
cmp
xor
mov
inc
jbe
inc
andl
push
mov
mov
cmpsl
jmp
push
push
push
and
cmp
aaa
mov
pusha
dec
xor
inc
xor
out
jle
aam
arpl
mov
push
jge
mov
test
sbb
mov
add
cwtl
addr16
lods
jbe
mov
stos
xchg
out
bound
adc
arpl
fstpl
repnz
xchg
jl,pn
ret
mov
fistps
jmp
xchg
inc
mov
dec
fildl
jbe
pushf
aaa
stos
popl
stc
mov
push
push
mov
repnz
repnz
pop
mov
jmp
mov
lcall
inc
cmc
xchg
sub
clc
push
inc
inc
lahf
push
ficompl
loope
cmp
rcrb
jo
fs
std
xor
fcomps
js
mov
xchg
mov
fsubl
test
test
dec
push
fistps
pop
aas
push
push
mov
inc
push
std
xchg
xchg
lods
aas
push
add
mov
push
pop
dec
pop
and
jp
imul
cmp
push
out
adc
imulb
xchg
or
fcoms
cmp
lock
out
sbb
and
out
leave
and
push
ljmp
adc
sbb
sbb
ret
ja
inc
ss
mov
jg
aas
incl
adc
or
dec
stos
icebp
gs
rcrb
fdivs
pop
xchg
loopne
add
das
add
cmpb
popf
sub
subl
mov
dec
dec
mov
add
fdivrl
pusha
les
jb
rcrl
in
aaa
pop
xchg
jle
cltd
es
jae
xorl
xchg
mov
jmp
jnp
cmc
or
mov
js
sbb
push
cmpsl
ret
in
int
adc
lock
mov
jmp
sub
hlt
push
ds
repz
mov
xchg
or
mov
jmp
dec
lods
icebp
dec
add
cltd
fs
xor
cltd
icebp
add
iret
push
popa
pusha
xchg
add
mov
in
sbb
push
xchg
sbb
fisubrs
jg
pushf
mov
and
fstp
ret
jl
int3
sbb
pushl
shrl
mov
or
inc
stc
xchg
imul
insl
xchg
pushf
aad
adc
mov
cmp
ljmp
cmc
dec
sbbb
cmpsl
or
xchg
xchg
sub
insl
int
inc
cmp
int3
pop
mov
inc
xor
and
xor
stc
stos
add
mov
movsl
icebp
inc
sub
in
lahf
lret
push
iret
pop
add
xor
push
mov
adc
popf
push
repz
int
push
adc
pop
lods
push
jne
xchg
cmp
cmpsl
sub
sbb
and
cltd
stc
js
xchg
jno
xor
cld
fisubrs
cmpsl
xchg
shr
pop
mov
adc
pop
int
push
push
xor
outsb
flds
pop
pop
insl
fwait
and
sbb
inc
clc
inc
movsb
mov
scas
insb
mov
add
dec
xchg
push
loopne
mov
popf
scas
rcl
mov
fldcw
scas
mov
add
lcall
hlt
adc
add
dec
mov
pop
push
pop
pop
incb
mov
ret
jmp
mov
mov
dec
dec
jbe
cmp
mov
inc
repz
test
sbbl
add
scas
mov
stc
push
bnd
or
icebp
fcoms
pop
stc
fsubl
dec
pop
xor
lret
dec
movsb
cs
jp
sbb
ss
mov
push
push
repnz
arpl
aam
add
cmc
add
push
add
loope
stos
vcvttps2udq
push
cmc
ss
mov
jge
adc
mov
js
jo
aaa
pop
cli
cmp
iret
dec
je
add
adc
aam
mov
cmp
enter
mov
rorb
jnp
in
adc
lock
mov
pop
adc
or
adc
cwtl
push
out
cwtl
or
rclb
pop
loope
aas
add
and
stos
in
out
and
jge
shrl
and
sub
lcall
mov
imul
pop
fcmove
sub
mov
insb
repz
xchg
pop
ss
mov
mov
xor
out
bound
stc
sbb
pusha
imul
ficomps
fwait
cwtl
jl
mov
cmp
xchg
mov
dec
jno
pushf
mov
test
cmp
scas
cmpsl
jl
mov
ss
sbb
adc
mov
hlt
mov
xor
lods
adc
daa
and
pop
dec
or
in
aam
sbb
int3
or
cmc
mov
stos
and
add
sub
push
and
cmp
sbb
lret
and
and
clc
add
negl
loope
push
lods
sub
cmp
push
fcmovu
xlat
rcrb
mov
or
mov
mov
popf
xor
movsb
notb
sbb
xchg
xchg
sbb
xchg
ret
aas
in
and
xchg
mov
jns
cmp
mov
mov
lods
sub
cmp
or
xchg
insb
popa
std
imul
scas
push
mov
shlb
xor
sub
inc
add
aaa
aaa
mov
push
pop
push
stos
movsb
jle
adc
leave
cwtl
aas
inc
lahf
or
inc
mov
fs
jae
cmp
icebp
dec
gs
xchg
nop
lea
xor
lea
and
dec
mov
fdivs
mov
out
movsb
gs
scas
rcr
ret
adc
mov
in
adcl
adc
rcll
fucomp
pop
pop
inc
stos
dec
in
cwtl
xlat
insl
repz
sub
fs
idivl
jmp
inc
cld
cltd
pop
cld
dec
mov
mov
nop
xor
mov
adc
leave
lcall
or
shlb
shlb
sbb
cmp
inc
dec
push
sarb
out
or
inc
xchg
fs
xchg
rcrb
bound
mov
push
out
cld
dec
in
mov
in
pop
pop
xchg
rcrb
pop
sub
addb
inc
rcrl
jb
add
mov
pop
xor
ja
repz
dec
shr
jbe
test
push
adc
xor
fucomip
mov
push
ret
inc
outsl
xorl
jle
data16
std
mov
lds
ja
xchg
ljmp
pop
arpl
fneni(8087
out
cltd
mov
in
pop
mov
mov
sbb
rcrl
jecxz
in
add
popf
into
lock
test
loope
sahf
cmc
test
inc
shll
arpl
dec
xor
iret
jno
inc
jmp
sub
jmp
ss
and
lods
lret
ja
in
mov
mov
adc
hlt
testb
test
dec
or
hlt
and
daa
movsl
ds
out
stos
mov
pop
aas
andb
fdiv
iret
sub
inc
cmp
and
mov
jp
pop
xchg
enter
int3
mov
push
inc
push
xchg
jmp
inc
mov
dec
xor
xchg
addb
movsb
jl
fisubl
mov
mov
dec
stc
sarl
repnz
sti
lahf
jmp
pushf
lret
andl
jl
fwait
loope
hlt
jmp
iret
jp
jb
ss
dec
push
inc
adc
push
jb
sub
push
hlt
mov
idivl
add
gs
mov
sbb
adc
xchg
pop
lock
filds
sub
mov
daa
mov
or
repnz
inc
pop
ja
cmc
pop
pusha
es
jl
sbb
js
adc
imul
ljmp
fcmovne
cld
cmp
mov
xchg
fwait
outsl
lods
adc
out
cmpsb
mov
scas
adc
cmp
mov
sub
xchg
loop
sarl
leave
xchg
dec
add
xchg
stos
in
or
and
rorb
adc
or
xchg
stc
mov
in
enter
mov
pop
int
cmc
jmp
loopne
clc
inc
bound
jo
push
aam
test
sub
lock
or
stos
cmp
adc
out
cltd
push
inc
dec
xchg
lock
adc
arpl
fisttpl
repz
test
leave
mov
pushf
int
outsl
testb
push
int
sbb
and
sub
dec
into
push
in
xrelease
jle
push
in
mov
jae
xor
dec
push
rcr
ret
decl
arpl
test
jo
movsb
int3
pop
mov
movsl
push
add
mov
xor
lea
or
add
mov
or
loop
jbe
call
mov
dec
jmp
mov
mov
jl
aam
sub
adc
adc
test
fisttpl
sub
and
or
ficoml
pop
cmc
daa
xchg
pushf
cs
ja
test
xorl
pop
divb
rol
scas
add
xchg
dec
or
rcrl
cmp
mov
pop
dec
adc
cltd
stc
andb
imul
repnz
lret
xchg
xchg
pop
in
adc
push
outsb
and
int
lds
cld
inc
sub
jo
mov
sbb
lds
mov
and
mov
cmp
or
xor
adc
frstor
mov
push
xor
pop
or
icebp
push
dec
imul
arpl
sub
stos
and
ds
jecxz
subl
lock
int3
jb
mov
mov
push
cmc
jae,pt
push
lcall
dec
aas
xor
pop
cmp
inc
rorb
sti
je
push
repz
icebp
mov
lahf
push
jecxz
cld
repnz
jl
adc
push
aaa
dec
repz
fisubs
push
add
mov
cmc
js
or
jecxz
mov
inc
ret
jb
mov
loop
mov
jns
mov
imul
dec
stc
lahf
push
std
into
bound
std
shlb
scas
sti
sti
push
xor
adc
mov
mov
daa
adc
shrl
sub
dec
cmc
adc
imul
loopne
lcall
jp
pushf
lea
js
xchg
mov
mov
pop
aas
pop
xchg
sbb
int3
scas
or
cli
push
inc
and
xor
adc
ja
jl
cmp
mov
mov
inc
mov
aad
das
repz
xor
dec
call
jl
xor
ret
or
xchg
insb
pop
inc
xchg
cltd
or
dec
fwait
lds
ss
int3
mov
sbb
mov
ret
fdivrp
pushf
imul
xor
popa
sbb
dec
in
jge
mov
lret
sbb
xor
sub
popf
or
dec
test
pop
add
in
jbe
adc
adc
clc
mov
sbb
insb
pop
adc
jae
adc
add
pushf
call
jnp
mov
xchg
pop
addr16
icebp
mov
and
xor
es
es
sub
lea
fidivrs
and
sub
push
lea
lahf
movsb
into
daa
clc
jae
xchg
add
in
lea
mov
flds
pop
fdivr
in
cmp
jno
divb
fistpll
push
out
sub
push
jo
addr16
bound
cwtl
mov
notb
lahf
js
hlt
sub
in
jnp
mov
loopne
jno
nop
mov
lahf
js
pop
call
inc
ja
icebp
sub
jp
popf
ss
sub
inc
nop
mov
fsubl
or
xchg
jle
cmp
dec
nop
jo
push
pop
adc
mov
fistpl
loope
rol
jbe
sbb
repnz
jmp
icebp
pop
lahf
mov
xchg
or
movsb
outsb
dec
xlat
cltd
aam
pushf
int3
pop
lods
add
rol
xchg
push
cmpsl
jae
shrb
rorl
inc
imul
mov
testb
xor
mov
pop
jnp
pusha
xadd
imul
vcvttps2dq
std
ret
cmp
shrl
popa
dec
test
inc
std
mov
pop
adc
cmpsb
cmp
jo
dec
mov
mov
ror
outsl
add
dec
negl
pop
repz
sub
jge
incl
cmp
pop
shll
sbb
xchg
push
inc
adc
ss
in
int3
sbb
xchg
js
push
shrb
jne
pop
scas
pushf
iret
xchg
cmpsb
mov
into
jae
in
push
mov
sub
je
mov
sub
and
rorl
cmpb
lret
jmp
loope
jmp
cli
dec
pushf
in
adc
jl
lret
stc
test
sub
xchg
test
push
push
and
xchg
mov
outsl
fld
inc
dec
add
jp
mov
push
jmp
mov
inc
cli
fimull
aad
ja
xor
data16
mov
je
sti
mov
incl
push
pop
gs
mov
xchg
ljmp
ficomps
lock
add
inc
aaa
fucom
mov
fists
lock
jge
aam
sbb
inc
or
mov
mov
mov
pop
in
ret
add
xchg
xor
sarl
inc
or
xor
addl
mov
hlt
mov
push
or
or
shlb
jae
pop
mov
popa
lods
shr
lock
lods
inc
repz
pop
or
sub
and
frstpm(287
leave
enter
and
cmp
xchg
cwtl
movsl
scas
outsb
mulb
dec
into
xor
stos
pop
add
in
rolb
out
dec
and
ja
xchg
sbb
push
sbb
push
mov
xchg
and
cmpsb
nop
lods
adc
xor
push
cltd
adc
inc
mov
dec
and
leave
xor
lock
scas
jno
xchg
repnz
fisttpl
push
inc
repnz
inc
cmpsb
aas
jmp
clc
xorl
fbstp
pop
js
rcll
dec
mov
xor
xchg
fwait
icebp
xchg
insl
or
test
mov
out
loop
jge
dec
mov
push
push
addr16
das
xchg
sti
mov
sti
mov
fcomps
mov
pop
mov
cmpsl
dec
lods
outsb
cmp
adc
cwtl
inc
lret
jbe
xchg
xor
data16
mov
in
mov
ror
xchg
sahf
jbe
jp
bound
dec
mov
sbb
lret
mov
imul
loopne
mov
jmp
mov
fldcw
dec
xchg
leave
adc
cwtl
nop
sub
into
pop
imul
mov
ja
dec
and
jbe
mov
push
mov
pop
cmp
rolb
jne
fwait
jmp
test
rcrl
sub
in
sub
pop
xor
sbb
and
fucom
jmp
in
popa
mov
pop
push
dec
mov
test
and
xor
fnstsw
mov
cmp
or
push
fiaddl
jne
ds
les
add
push
mov
mov
out
pop
movsb
movsl
sub
arpl
ja
jns
adc
push
lods
xchg
in
xor
and
xor
andl
lret
mov
jne
pusha
pop
inc
xor
adc
lret
xlat
pop
mov
mov
jns
adc
popf
inc
in
or
movsl
in
mov
sbbl
or
out
roll
std
in
dec
outsl
mov
lods
decl
into
cwtl
sbb
into
test
shl
xchg
fldcw
cld
mov
lcall
sbbb
jno
cwtl
sub
pop
int3
adc
add
dec
lret
repz
mov
call
pop
adc
push
add
xchg
pop
dec
cmp
xchg
mov
sbb
pop
fldenv
shll
mov
sub
int3
inc
aas
dec
insl
fisubrl
pop
sub
mov
lret
shrb
jne
pop
fisubs
lock
dec
or
jno
jge
shlb
xchg
ja
adc
mov
out
bound
ds
in
push
int3
dec
mul
aaa
pushf
cwtl
imul
mov
loop
cli
outsl
push
inc
add
mov
sbb
inc
repz
cmp
and
ficompl
pop
push
mov
pop
xchg
into
push
mov
push
cmp
cmc
out
addr16
xchg
ret
or
pop
std
insl
pop
add
lret
xor
leave
xor
int3
lods
or
lret
push
inc
sbb
jne
lret
clc
data16
arpl
enter
int
mov
inc
jbe
leave
mov
pop
iret
sbb
fdivr
sub
pusha
mov
ret
scas
gs
pop
cwtl
imull
mov
ret
pop
aam
clc
addr16
aas
cld
inc
sbb
lret
imull
mov
adcl
out
pushf
add
cmp
sub
adcb
mov
std
xchg
xchg
or
data16
push
js
clc
xchg
jecxz
shl
incb
inc
das
xor
dec
int
lods
in
loopne
mov
mov
mov
pop
add
push
mov
push
push
fsubr
push
lcall
ffree
lret
sarl
jmp
cld
cld
loope
js
cmp
inc
inc
icebp
sbb
dec
mov
lds
pop
dec
jg
sub
cli
bound
sti
out
push
sub
popa
call
jb
cmp
mov
loopne
mov
or
jae
mov
popf
rorl
in
jmp
imul
ret
xlat
aam
pop
xchg
adc
addr16
aaa
xchg
pcmpeqd
repz
pop
push
rcrb
mov
fisttpll
shrb
jae
jp
cmp
jo
scas
jmp
in
and
popa
inc
xor
mov
add
icebp
rol
jae
outsl
and
jo
pop
mov
push
jb
pop
roll
sub
cmp
movsl
mov
sub
xor
and
sub
data16
push
lea
or
es
fs
addr16
push
xor
xchg
xchg
mov
loope
pop
and
mov
mov
out
xchg
sbb
mov
rcrl
gs
sbb
and
aas
push
push
cmpsl
and
dec
jp
aaa
insl
dec
ret
sbb
in
js
in
push
inc
jmp
pop
cltd
add
mov
push
nop
notb
and
jae
push
mov
fidivrl
popf
test
loop
addb
addl
push
push
rorb
inc
je
call
rcrb
stc
out
mov
insl
add
ja
cmp
mov
orb
lods
clc
leave
jne
inc
insb
movsb
or
into
cltd
aam
pop
fldenv
loop
sbb
pop
mov
mov
lock
cmpsb
jmp
cmp
and
xchg
mov
pushf
movsl
iret
cmp
pushf
inc
mov
xchg
dec
mov
mov
pop
inc
cmc
call
ret
dec
jns
ss
stc
pop
in
dec
mov
jb
cmp
jnp
jl
jns
jne
mov
lahf
inc
mov
mov
loope
imul
jo
pop
scas
push
scas
out
inc
push
xlat
adc
lock
loop
mov
das
xchg
sbb
aaa
loop
incl
mov
push
and
cli
lret
inc
ljmp
lahf
js
xchg
xor
orb
cmpl
jle
pop
inc
arpl
and
sbb
movsl
out
popa
js
push
adc
ficomps
sbb
les
jnp
scas
jecxz
pusha
ret
out
xchg
repz
add
jo
out
cmpsb
xchg
jg
pop
dec
int
fbld
mov
jecxz
jbe
int3
cmp
add
dec
xlat
and
push
pop
dec
cmpsl
xchg
fidivrl
push
into
call
pop
das
js
les
lret
cld
jno
cmp
cld
rep
pop
loopne
cltd
arpl
pop
out
lret
sbb
lds
push
mov
jno
je
ss
pusha
adc
mov
mov
jno
cmpsl
and
out
rol
pop
int
or
into
inc
lcall
imul
cmp
call
shl
mov
shlb
inc
push
hlt
jne
push
adc
pop
ret
leave
out
ret
ja
je
fdivp
test
lahf
push
shrb
out
idiv
mov
repnz
iret
sarl
xchg
icebp
stos
aas
mov
push
adc
adc
adc
inc
sbb
loope
js
call
fadd
movsl
fimuls
shll
lahf
sbb
cld
stos
cwtl
pop
nop
mov
scas
sub
xchg
iret
dec
arpl
out
divl
mov
add
mov
pop
pop
loop
sbb
into
pop
leave
pop
adc
add
mov
jg
add
sahf
rorb
cld
imul
rorl
inc
stos
in
inc
mov
call
or
jg
int3
xchg
lods
sbb
push
push
add
sbb
mov
fidivrl
push
lahf
xchg
lods
sub
dec
mov
in
or
fwait
in
inc
fs
add
inc
sub
xchg
pop
not
sbb
xchg
mov
dec
dec
cmp
shlb
stos
adc
add
aaa
fsubrl
push
das
push
dec
inc
or
pushl
sarl
mov
in
cs
imul
subl
inc
sbb
fmul
mov
sbb
mov
cmp
mov
dec
and
lahf
cltd
call
nop
mov
notl
fucomip
inc
xchg
lahf
cwtl
jl
xor
xchg
fidivs
mov
insl
ja
fwait
cmpsl
or
xchg
adc
fs
fisubrl
popa
lret
adc
inc
push
cld
jo
fsubrl
loopne
neg
dec
hlt
inc
sub
xchg
mov
in
push
pop
cmp
aad
push
cmpsb
jg
fnstenv
lret
sub
mov
jmp
adc
mov
sbb
insb
ficomps
loopne
out
cmp
loop
xor
add
xor
dec
std
clc
aas
dec
js
mov
pop
mov
xor
cld
xor
sbbl
add
test
mov
arpl
outsb
in
xor
fnsave
int
mov
and
mov
or
lahf
cs
outsl
push
and
popf
mov
xlat
mov
inc
loope
pop
mov
decl
add
mov
lret
and
fstps
das
push
cmp
sbb
aas
movsl
sahf
icebp
js
mov
xchg
fnstcw
mov
jns
insl
fwait
test
loopne
push
push
js
inc
iret
addr16
add
sbb
fmuls
push
sub
cmp
jns
int3
jmp
dec
cmp
scas
js
iret
jmp
add
pop
imul
popf
jb
push
aas
jo
push
cltd
or
sub
mov
mov
push
mov
mov
jp
inc
jno
add
mov
cmp
mov
jne
outsl
or
inc
pop
jg
add
mov
repz
popf
outsb
xor
imul
xchg
ret
xor
movsl
mov
xchg
ja
lods
cli
scas
in
arpl
push
xor
xchg
lea
jp
sub
pop
xchg
out
add
or
pop
out
pop
imulb
mov
mov
xchg
cltd
pop
cltd
xchg
push
jecxz
mov
lods
cmp
out
mov
aaa
xchg
out
outsb
cmpsb
lcall
add
adc
clc
add
pop
adc
cmp
pusha
push
dec
outsl
or
and
popa
adc
rcl
jecxz
xlat
mov
xchg
cmc
fmul
loope
xor
scas
mov
shlb
xor
xchg
testl
xor
fucomp
adc
add
xchg
mov
push
gs
movsl
cmpsb
mov
insb
push
sbb
mov
pop
add
lcall
mov
test
or
and
jmp
pop
popa
xor
daa
adc
gs
aaa
adc
pop
jg
dec
push
test
insl
insl
inc
mov
jns
jl
jp
pop
pop
daa
push
aam
cwtl
out
jl
sbbl
fsubl
clc
les
xchg
aas
scas
xor
sti
adc
xor
shr
repnz
add
push
aam
adc
or
out
jns
cld
mov
sub
dec
push
frstor
inc
push
xchg
rcrb
in
scas
out
dec
xchg
out
xchg
mov
jp
ret
adc
leave
push
dec
pop
mov
jb
loope
adc
repz
fld
les
lahf
inc
xor
mov
and
inc
shrw
dec
inc
imul
jbe
pop
stos
jb
ret
ret
or
aam
les
jno
fsubrs
xor
sarl
jno
rcrl
push
push
dec
xchg
mov
and
dec
rol
xchg
sub
test
xchg
mov
cmp
es
in
daa
aas
pop
xor
lock
gs
in
xchg
and
ljmp
lret
mov
push
in
mov
stc
mov
scas
shll
inc
sub
int
in
jl
pop
cmp
jns
push
ja
cs
clc
mov
stos
popa
jo
push
mov
dec
stc
pop
mov
in
or
dec
cmp
sbb
and
and
pop
cld
fisttps
push
mov
mov
test
or
iret
lret
rcr
loope
push
pushf
lock
adc
fisttps
push
test
sub
in
or
addl
hlt
cmp
inc
loopne
das
test
in
mov
sub
push
shl
xchg
out
or
add
pop
sbb
out
jge
mov
mov
cmp
jmp
mov
stc
pop
xorl
pop
mov
cmp
mov
fucomp
fistpl
xorb
aaa
enter
jg
jbe
mov
popa
jo
push
testl
stc
push
aas
mov
sbb
loopne
repnz
cld
cmpsl
pop
cltd
shll
dec
inc
mov
insb
popf
fsubp
bound
mov
iret
mov
xor
xchg
test
mov
mov
mov
jno
test
push
mul
dec
dec
xchg
sbb
add
push
inc
xchg
dec
aam
jb
out
sti
pop
lds
lea
mov
xchg
cwtl
mov
push
movsb
jo
enter
jle
push
push
ds
lea
push
movsl
pushf
pop
rcrl
jge
jno
pop
jmp
loopne
cltd
adc
ret
and
add
inc
test
bound
and
mov
movsl
scas
lahf
inc
and
imull
sub
sub
in
mov
pop
aad
jl
xchg
test
mull
sub
hlt
and
imul
pop
aam
xchg
in
sub
sub
xchg
sbb
daa
int3
push
mov
mov
pop
push
mov
insb
inc
loope
aaa
mov
call
mov
push
xor
inc
dec
leave
pop
out
cmpps
push
pusha
les
ja
xchg
int
push
xor
cmp
sbb
pop
xor
mov
movb
jb
adc
jp
dec
mov
ret
outsb
mov
icebp
jnp
push
dec
sub
ret
in
cmpsl
mov
jge
jmp
xchg
ja
cwtl
inc
adc
sbb
mov
testl
popf
sub
or
insl
push
pusha
sub
xor
testb
pop
mov
mov
pop
inc
in
outsl
sub
out
adc
in
jmp
or
mov
sub
repz
xor
repz
pushf
inc
and
cmp
xor
fisttpl
jge
hlt
xor
ljmp
push
mov
push
lret
aad
and
adc
xchg
xchg
iret
fdivrs
and
out
mov
mov
lea
ja
mov
fwait
test
inc
add
ljmp
xchg
mov
sub
dec
out
push
push
add
xor
add
mov
in
pop
add
push
fsubrs
add
mov
and
dec
pop
jmp
fimull
xchg
mov
sbb
inc
inc
inc
icebp
pop
das
xchg
sub
xor
in
sub
add
fwait
cli
mov
mov
cmpsb
sbb
mov
push
pop
stos
cmp
xchg
lcall
loopne
xor
ret
dec
adc
add
sahf
scas
cmc
clc
mov
xor
out
mov
mov
push
outsb
outsl
inc
push
dec
scas
or
addr16
popa
pop
rolb
dec
or
xchg
push
mov
hlt
sbb
pusha
aad
orb
sarl
repz
cmpsl
xchg
add
mov
push
lahf
jb
fmull
lds
push
cli
xor
jne
jae
or
fisubrl
mov
lods
jge
je
shrb
dec
pop
xorb
mov
dec
pop
fisubrs
ficoms
pop
sahf
xor
js
jnp
xor
pop
mov
mov
cmp
pop
jb
cs
rcll
mov
mov
in
jl
jne
addr16
ja
outsb
sub
in
cmp
data16
dec
adc
stc
call
push
sub
imul
pushf
mov
call
sbb
mov
icebp
sub
push
ss
in
xchg
stos
xor
ret
xchg
jp,pt
inc
fcmovu
mov
push
cwtl
popf
sti
cmp
out
iret
xor
push
or
mov
mov
loopne
aam
into
xor
ljmp
aad
jp
jbe
icebp
scas
leave
call
mov
xor
ljmp
mov
fmul
scas
jg
std
inc
mov
adc
into
inc
out
jne
dec
test
clc
mov
or
test
fidivl
les
xchg
hlt
lret
cmpsl
repnz
inc
xor
mov
scas
sub
mov
adc
mov
imul
nop
cmp
cs
mov
js
jmp
mov
sub
out
jo
push
mov
dec
sahf
lods
sti
mov
imul
inc
sub
push
cmp
jmp
jmp
push
push
xlat
sub
icebp
mov
les
pushf
cmp
bswap
and
lcall
movsl
or
xchg
pop
mov
movsb
fucomi
jecxz
cmpsb
sbb
jl
xor
xchg
mov
fwait
call
mov
pop
lock
lock
clc
xchg
lahf
sbb
pop
outsb
or
rclb
inc
lret
mov
loop
sub
or
xchg
test
mov
stc
ret
push
fdivs
mov
cmp
cltd
ja
scas
popf
aas
fs
jmp
std
mov
les
xchg
jb
inc
jl
shl
and
insl
push
arpl
f2xm1
pop
jb
popf
aam
and
or
outsl
mov
faddl
ljmp
dec
hlt
fcomip
lock
xor
push
jge
fsqrt
or
mov
ret
dec
lahf
into
popa
fwait
mov
roll
out
data16
call
test
movsb
loopne
cmp
fidivl
lea
or
jmp
inc
lahf
and
pop
jae
repnz
aaa
cmp
or
push
or
lock
cmp
xchg
xchg
xor
loopne
add
aam
lret
test
jno
inc
fsts
les
outsb
stc
jge
test
aaa
lcall
int3
cmp
dec
mov
out
lcall
mov
dec
adc
mov
jge
cmp
jae
insb
incl
fnstsw
ds
ss
cmp
push
cmpsb
int
mov
cmpsl
dec
dec
into
dec
lcall
jp
pop
mov
loopne
ficoms
jl
sub
dec
mov
cmc
cs
out
xchg
popa
fnstsw
int
sbb
pop
cli
call
push
and
sti
pusha
bound
push
int3
sub
es
mov
pop
add
and
mov
xchg
in
mov
nop
xor
adc
sub
pop
inc
cmp
test
cld
add
push
cld
xchg
in
pushf
adc
and
mov
idiv
sti
lahf
repz
mov
push
sbb
inc
adc
leave
inc
sbb
aaa
mov
sbb
movsb
dec
mov
js
sbb
mov
roll
xchg
or
int3
sar
repnz
mov
lret
cmp
mov
sbb
cli
shrb
cld
andl
dec
mov
shlb
mov
push
testb
inc
xor
mov
stc
jge
jnp
imul
xor
fcmovb
mov
pusha
cmp
shll
lods
test
push
push
jae
fisttpll
lods
and
xor
fdivl
mov
shl
pop
outsl
and
mov
sarb
sbb
shl
test
test
fs
arpl
pop
lods
lahf
rcr
xchg
pop
leave
icebp
movsl
lcall
test
push
fsubp
lock
pop
sbb
repz
nop
enter
inc
jl
sbb
insb
movsb
cmp
ret
gs
and
loope
or
mov
mov
jns
jne
fdivrs
pop
ss
idiv
das
rclb
orl
mov
jmp
and
cmp
xor
adc
pop
or
mov
out
icebp
fisttps
adc
or
push
or
pusha
and
dec
fadds
mov
js
push
mov
inc
repz
loopne
sub
adc
les
mov
test
sub
xor
popf
mov
data16
scas
ret
inc
push
pop
cmpb
inc
pop
cmp
mov
mov
cli
push
int3
mov
and
int3
jnp,pt
je
pushf
leave
pushf
ss
and
inc
movsl
or
or
aas
adc
adc
cmp
icebp
sahf
push
xorl
repnz
push
add
push
popl
in
add
out
mov
push
xchg
jb
mov
adc
fwait
lea
xchg
jl
mov
bound
sub
pop
mov
ret
fdivr
push
mov
jg
clc
cltd
or
jno
jns
test
rcr
dec
mov
jo
stos
les
out
mov
aas
jne
inc
ljmp
in
es
popf
testb
adc
mov
sbb
jb
cmp
xchg
popa
loopne
out
jns
add
xor
aad
dec
push
call
stos
stc
jmp
cmpsl
out
popf
push
rcll
adc
fs
enter
aad
jo
sbb
fsubrl
ss
sbb
jecxz
push
cs
add
mov
jle
push
out
loope
sbb
push
es
testb
ja
in
sbb
sub
inc
xorb
pushf
and
mov
jb
repz
lds
loope
pop
loop
mov
cli
idivb
or
mov
adc
jmp
ss
out
and
push
lods
icebp
mov
xchg
pushl
adc
insb
enter
rorb
inc
test
or
pushf
jp
orb
xchg
bound
popf
imul
and
jnp
mov
sub
test
popf
rorl
pop
loope
mov
or
outsb
dec
fsubrl
cs
sbbb
fnstcw
or
into
mov
test
test
cmp
xor
add
dec
add
xor
push
das
arpl
mov
cmp
pusha
xchg
jecxz
enter
jbe
xlat
jle
cmp
pusha
sarb
in
cmovg
sub
add
movsl
setg
out
push
xchg
add
imull
lret
xor
mov
lret
add
out
cwtl
push
leave
imul
sarl
sbb
lahf
xchg
in
jnp
mov
push
fistpl
gs
lods
sub
insb
pop
enter
push
fcmovnb
fnstcw
fadds
inc
push
push
rcrl
push
paddusw
inc
xlat
mov
sub
rorb
es
xor
movsl
pushf
cwtl
lret
loopne
dec
rep
pop
add
das
xchg
jle
rcrb
ret
sbb
push
mov
mov
rcll
sub
pop
xchg
push
jo
xchg
sbb
sbb
jp
mov
mov
cmc
mov
mov
into
and
pop
les
int3
sahf
cmovns
push
xor
xchg
idiv
aas
in
pop
rorb
push
push
sub
test
inc
clc
xor
jno
adc
jmp
mov
cmp
pop
repz
xor
jnp
mov
add
dec
pop
in
loopne
ljmp
dec
mov
mov
mov
popf
out
inc
mov
push
or
adc
adc
sub
je
inc
sbb
in
xchg
and
sahf
push
xchg
jmp
lret
shl
xor
aas
jne
mov
cmp
adc
mov
inc
or
insb
lcall
test
push
inc
push
and
dec
das
add
sub
mov
jo
mov
xchg
lds
sub
je
loopne
push
fdivl
cmp
es
sub
outsl
dec
jo
xchg
dec
jbe
cmp
test
ret
adc
xor
jne
stos
loope
outsl
ret
stc
sub
sbb
popa
push
movsb
pop
mov
outsb
xchg
lcall
adc
or
shrb
stos
mov
insb
sbb
push
and
inc
adc
bound
mov
outsb
sbb
lahf
jl
mov
sbb
dec
jp
or
mov
xor
cmc
xchg
call
jp
sub
jl
and
aad
out
inc
push
cmpsl
fcoms
popf
mov
pusha
ja
loopne
push
ret
mov
sub
sub
mov
adc
cmp
out
jmp
ds
sub
inc
mov
rcr
mov
adc
lds
js
ficoms
sub
test
mov
imul
aam
xlat
add
jmp
cwtl
adc
adc
test
stos
rolb
int3
push
arpl
push
jae
scas
mov
cmpsb
jno
jl
shrl
fisubrl
fistl
mov
aad
jecxz
jl
dec
fimuls
ja
notb
into
subl
jno
jl
cwtl
insb
mov
in
fidivs
and
xor
repz
lods
fcomp
fcmovbe
lret
and
nop
loop
sbb
fwait
sarb
mov
sbb
pop
jecxz
lahf
lret
imul
adc
adc
addr16
adc
call
stos
jp
sbb
inc
test
pop
jl
aam
das
ret
fnstsw
jnp
sbb
pop
cmc
inc
dec
jo
lods
xlat
popa
int3
jg
mov
sub
jp
data16
pushf
dec
pop
rclb
xor
enter
or
or
fs
xlat
hlt
call
or
imul
mov
sub
roll
adc
cmp
jge
or
imul
xor
push
fldenv
xor
js
filds
es
jle
push
mov
mov
repnz
mov
test
insb
push
jmp
and
xchg
addl
jo
cs
es
fdivp
add
loopne
stc
cld
and
dec
pop
xchg
and
xchg
adc
or
or
or
pop
sbb
test
mov
rolb
push
xorl
fsubrs
dec
repz
push
fadds
lods
dec
rcl
fsts
test
shrl
inc
fistl
jmp
insb
inc
das
std
rolb
inc
adc
mov
sub
shll
xchg
iret
test
ss
daa
mov
push
or
pushf
xor
jno
add
mov
lods
fldt
sub
and
imul
dec
push
adc
push
dec
xchg
xorl
and
lcall
cmp
jge
iret
inc
aam
dec
mov
pop
cmpsl
xchg
xchg
jne
mov
enter
outsb
insl
ret
jl
mov
outsl
or
lret
rorb
mov
popa
aam
push
mov
jno
mov
in
sbb
lret
frstor
pop
notl
in
bound
and
mov
leave
sub
inc
push
and
xchg
adc
enter
xor
jl
jmp
movsb
out
lds
xchg
aas
je
sti
inc
xor
fmull
sub
fcompl
pop
or
mov
dec
ret
push
mov
pop
jmp
xor
out
and
xchg
cmpsb
mov
scas
adc
cmpsl
xchg
xchg
aas
out
cld
cli
dec
and
xchg
imul
call
out
sub
dec
in
daa
andb
inc
test
pop
add
daa
jno
pop
imul
ret
data16
mov
outsl
int
push
testb
in
lds
sub
test
in
mov
loop
adc
jo
call
icebp
inc
popf
mov
fists
out
mov
dec
fdivs
inc
cmp
inc
mov
inc
mov
inc
shrb
sbb
notb
or
in
adc
add
mov
pop
out
loope
or
stc
stos
mov
stc
ret
and
lds
shlb
pushf
add
iret
sbb
pop
xchg
in
pop
push
xchg
pop
movsw
int3
mov
stos
pop
mov
aam
jg
inc
inc
mov
sbb
add
pop
xor
sub
mov
in
aaa
xor
xor
push
test
scas
ds
xor
mov
sbb
cltd
pop
mov
xchg
ljmp
loop
adc
ds
sub
test
xchg
jecxz
or
xor
ficomps
xlat
pop
iret
fildl
sti
cmp
notb
imul
into
mov
iret
and
out
adc
sahf
cltd
jmp
mov
insb
sti
aas
mov
dec
ljmp
inc
je
cmc
hlt
push
push
add
dec
sbb
clc
or
dec
loope
in
or
mov
mov
and
mov
fs
jle
jbe
or
add
icebp
fwait
pop
insb
adc
lcall
cmpsl
pop
cwtl
and
xor
push
ret
push
sbb
loop
cmpl
and
fs
jle
mov
mov
jp
es
lds
xor
outsl
or
fs
jp
push
iret
enter
mov
mov
jmp
stc
pop
mov
fstps
sbb
das
push
dec
jbe
lea
fcompl
adc
dec
jbe
out
fcomi
lea
jecxz
cli
push
stc
outsl
loop
loope
inc
sbb
iret
test
xchg
jp
xor
xor
xchg
lret
pop
and
stc
sar
cmp
movsl
or
mov
aas
aam
sti
mov
divb
enter
out
fisubs
pushfw
xor
je
push
xlat
addr16
sub
gs
dec
mov
xlat
in
lods
add
sub
fisubrs
jl
inc
out
test
pop
fisubs
xor
or
pusha
filds
subl
push
repz
jl
pushf
add
data16
add
stos
xor
pop
jmp
pop
and
push
fbld
cmp
imul
inc
in
add
ret
in
loopne
xor
cmpsl
out
jne
push
xchg
dec
ds
sbb
inc
inc
pushf
mov
dec
xor
cli
hlt
mov
add
pop
dec
cmp
mov
loope
xchg
fldz
cs
fwait
add
inc
xchg
pop
in
ja
cmp
cwtl
cmpsb
fcomip
xchg
mov
cmp
mov
push
aas
pop
dec
add
jno
dec
push
andl
shrl
and
pop
fwait
ret
push
pop
fidivrs
pop
xchg
pushf
pop
adc
mov
or
lret
addr16
pop
aas
add
jecxz
lods
clc
sub
jo
pop
push
outsl
jg
pop
jmp
test
jno
or
popf
insb
sti
inc
inc
cltd
out
icebp
mov
aam
outsb
lods
jae
fwait
sbb
clc
daa
cmp
repz
enter
jo
repz
setnp
orb
and
ds
cvtdq2ps
movsb
or
movsb
movsl
lods
push
fs
jg
xchg
jl
and
lret
xor
mov
mov
sub
div
inc
or
and
dec
pop
test
int
mov
and
mov
je
lret
ret
or
mov
or
rcl
out
test
fildll
cs
dec
mov
sbb
sbb
out
adc
mov
jg
ljmp
cmc
into
and
cmp
mov
or
out
inc
or
jg
andl
jmp
ficompl
testl
imul
xchg
pop
jo
push
and
mov
outsb
add
dec
lds
sub
lcall
mov
fstpl
xchg
adc
cltd
add
cmp
and
pop
scas
divb
sarl
or
lds
adc
fwait
ret
push
jo
je
fldt
jmp
cs
js
test
rorb
xchg
insl
test
push
ror
test
arpl
mov
adc
test
xchg
in
pop
shll
pop
jge
in
push
sbb
repnz
mov
sbb
cmp
push
jl
xor
sbb
push
mov
push
rcrl
inc
mov
into
stos
sub
into
icebp
stc
aam
mov
adc
adcb
mov
cmp
fisttpl
jnp
es
or
mov
and
fistl
mov
jmp
xor
js
shlb
ficompl
test
push
ja
jecxz
or
psubd
jb
sub
ljmp
shlb
fbstp
cmp
and
xchg
cltd
les
sbb
lods
or
or
dec
mov
enter
sbb
jl
outsl
pop
and
inc
add
shlb
mov
sub
and
les
dec
xor
out
loope
xchg
fisubrl
movsb
ljmp
imul
leave
push
mov
jge
outsl
loop
js
xchg
roll
js
loop
out
xor
mov
rorb
and
subl
lods
cmp
sub
xlat
mov
sub
pop
sub
xor
lcall
dec
xchg
jno
sti
es
es
mov
pop
shrl
dec
push
sbb
into
cld
jbe
jae
sub
jmp
ss
inc
push
sbb
push
pop
fdivrs
test
cmpsl
add
loop
fwait
das
out
or
les
arpl
outsb
sub
add
or
pushf
dec
adc
insb
adc
seto
movsb
call
mov
bound
fldt
sbbl
sbb
cltd
xlat
inc
lds
lea
mov
iret
sbb
icebp
jg
stc
mov
cmpsl
push
add
test
push
jo
xchg
xlat
cli
and
out
push
pushf
and
sarb
pop
aad
or
push
cmp
sub
jb
xor
pop
outsl
push
inc
pusha
sub
xchg
rolb
mov
xor
addb
imul
jne
leave
enter
cli
add
jecxz
sbbl
lret
dec
add
arpl
lret
mov
mov
xlat
push
dec
push
test
sub
hlt
cmp
out
int
xor
dec
adc
pop
in
pop
or
and
adc
or
jle
or
repz
aaa
jbe
xor
dec
movsb
test
subl
pop
inc
mov
scas
xor
add
rorb
daa
test
mov
xchg
out
mov
xlat
sub
pushf
mov
cmp
add
dec
inc
scas
fildl
js
xor
cmpps
sub
addr16
hlt
xor
push
inc
pop
add
xchg
iret
xchg
jbe
imul
aaa
or
int3
or
jg
mov
jmp
ret
dec
mov
lret
popf
loop
push
push
sahf
mov
std
jns
xchg
stos
cmp
xor
mov
cmp
adc
push
leave
fneni(8087
mov
xor
mov
leave
cmp
out
out
mov
dec
dec
int3
push
out
push
mov
loopne
dec
mov
std
jg
lret
xor
mov
mov
cmp
repnz
out
mov
insb
movsb
mov
test
inc
cltd
inc
inc
pop
lret
mov
mov
sahf
dec
repz
out
mov
seto
xorl
push
mov
mov
push
fisttpll
jno
enter
add
in
mov
rol
in
mov
inc
pop
mov
xchg
sub
mov
shll
out
mov
xor
sub
iret
ss
jmp
pop
jns
popf
nop
cmp
dec
cltd
cmc
pop
inc
inc
mov
xor
xor
cmp
fbld
cmp
out
push
cmpsl
dec
push
daa
mov
out
sbb
jne
popf
jbe
popa
dec
dec
inc
adc
gs
jl
aaa
jle
adc
icebp
js
sbb
fcompl
lcall
mov
lret
fcmovb
das
loopne
pop
pushf
mov
mov
fwait
jecxz
dec
add
js
adc
push
cmp
ret
pusha
dec
inc
negl
sbb
outsl
push
dec
push
push
inc
cmp
add
scas
push
roll
lahf
and
adc
jae
sub
rcll
mov
sub
and
and
lret
xlat
cmp
sbb
roll
cmpsb
cmp
jge
leave
loop
dec
jmp
inc
stos
ljmp
cld
pusha
push
and
test
push
ja
mov
pop
adc
sahf
and
cwtl
enter
mov
lods
stc
jl
mov
outsb
adc
nop
pop
inc
xor
inc
addr16
stos
icebp
in
xlat
adc
imul
icebp
sbb
int3
int
jmp
xor
push
gs
mov
stos
or
test
mov
imul
mov
mov
adc
in
and
mov
fldenv
pop
enter
mov
mov
fwait
and
in
xor
ret
lahf
inc
push
add
out
in
sbb
cmp
mov
fs
mov
rcl
mov
and
pusha
out
mov
cmp
mov
push
jns
scas
popa
inc
int3
pop
add
mov
and
fsubl
cmp
sub
pop
rorb
mov
daa
or
inc
mov
rolb
add
daa
cld
leave
shll
out
jo
jge
jbe
data16
hlt
and
fidivrs
das
sub
dec
icebp
pop
cmpb
push
popa
jl
jne
or
aad
mov
xor
mov
test
lea
aas
push
out
pop
sub
and
loop
rcrl
out
insb
and
outsl
mov
into
lods
ret
sbbl
insb
add
xlat
jg
sbb
sti
adc
xor
or
pop
stos
lods
and
call
jo
icebp
xor
int3
cs
sub
gs
lods
mov
pop
sbb
xor
or
or
lods
pusha
rol
hlt
inc
jmp
xlat
mov
xchg
hlt
xchg
divb
out
jle
aaa
cli
cmp
mov
ljmp
push
mov
daa
not
xchg
lods
pop
sbb
inc
mov
loope
icebp
xor
pop
fcmovnu
xchg
in
xchg
bound
stc
das
mov
xchg
pop
push
in
mov
jbe
lds
dec
das
insb
stc
jne
sub
data16
sar
test
dec
add
adc
mov
call
out
es
push
das
scas
out
arpl
mov
or
scas
ffree
jno
mov
imulb
test
pop
add
out
push
mov
adc
fs
mov
push
mov
icebp
nop
je
mov
pop
daa
inc
aam
scas
cli
and
pushf
out
fists
pop
insb
cmp
gs
outsb
int3
mov
and
outsb
shll
jae
mov
xor
add
pop
in
and
add
std
icebp
jb
js
imul
jo
or
loop
movq
xorl
jle
xor
xor
jno
out
cltd
nop
fs
cmp
mov
cmpsb
mov
xlat
je
jl
adcl
neg
pop
xor
or
rcrl
mov
mov
xor
sbb
cmp
int3
mov
je
int
into
pop
cmp
fwait
or
arpl
sub
enter
lods
bound
inc
cmp
dec
or
xchg
or
sub
add
cmp
std
clc
js
jns
and
iret
mov
pop
sub
mov
sub
mov
xor
jmp
jno
pop
fdivrs
cmp
mov
in
adc
test
sub
push
clc
mov
lods
dec
push
dec
xchg
cltd
cmp
cltd
jb
inc
frndint
jp
push
adc
lea
push
nop
nop
stos
push
sbb
sbbb
or
pop
xor
sbb
imulb
jecxz
sbb
js
fldt
mov
cltd
sub
xchg
mov
xor
jp
mov
mov
push
dec
dec
stos
out
lock
outsl
sub
or
repnz
mov
cmc
mov
lock
lcall
jb
imul
fidivrs
sbbb
sbb
cmp
lret
out
add
push
in
sti
sub
lods
dec
mov
jbe
pusha
mov
stos
cmp
push
cli
or
sub
mov
lods
mov
mov
pop
push
push
inc
mov
push
leave
icebp
mov
stos
sbb
dec
fsubr
and
out
stos
dec
adc
fsubrl
aam
dec
leave
adc
xchg
push
or
push
xchg
rcrl
sub
xor
or
dec
sti
call
inc
cmp
aaa
pusha
stos
loop
leave
push
sbb
loop
ret
mov
sbb
xor
sub
cs
dec
addb
inc
or
adc
insl
sbbl
cmc
les
and
std
xchg
lds
iret
push
lds
jno
andb
lcall
mov
jo
cld
inc
jl
lock
push
xor
cmp
aaa
aas
inc
sarl
sub
jle
push
test
dec
dec
add
add
mov
rcr
in
lods
jb
subl
pushf
or
and
pop
cmc
frstor
adc
test
in
xor
rcrb
adc
imul
stos
mov
push
sub
out
mov
add
add
mov
fstpl
ds
test
out
je
pop
outsb
clc
lock
mov
stos
cwtl
es
das
rorl
push
out
add
jge
mov
jns
subl
loopne
add
pop
scas
sbb
cmp
mov
int
and
and
dec
xor
aam
faddl
pop
jne
jg
mov
imul
inc
push
aaa
add
and
xorb
rorl
lret
push
push
mov
scas
repz
cwtl
add
out
dec
leave
mov
mov
sbb
push
daa
dec
movsl
lahf
or
push
cmpsb
jbe
push
pop
dec
arpl
add
int3
call
jae
nop
cltd
ds
mov
jecxz
dec
lods
cld
das
aam
fcompl
adc
insl
or
inc
and
push
jb
mov
fcmovu
adc
jo
push
mov
xchg
cmp
rcll
jns
adc
and
int
add
jo
xchg
aas
fisubl
push
mov
cmp
dec
mov
lret
and
shl
push
bound
and
inc
sbb
dec
or
push
sbb
jmp
mov
stc
xor
out
mov
int
pop
pop
test
mov
jns
mov
mov
and
mov
xor
aaa
or
fldcw
xchg
pop
add
mov
outsl
mov
ret
cmp
fsubs
xor
mov
dec
and
or
xchg
lcall
mov
xchg
sub
daa
bound
mov
sub
scas
insb
stc
ficompl
push
lea
xchg
mov
imul
dec
mov
js
adc
xchg
push
js
jnp
int
sub
and
enter
cli
shll
inc
ljmp
lcall
repz
jp
pop
scas
popa
aad
inc
push
jmp
push
in
jp
addr16
xchg
xchg
js
mov
sbb
movsl
sub
xchg
dec
adc
adc
shll
inc
inc
lock
or
fidivs
out
push
je
call
enter
loop
jl
into
mov
mov
daa
pop
fs
push
sub
cmp
mov
mov
dec
sub
push
dec
test
push
xchg
int3
dec
push
mov
and
push
negl
mov
dec
mov
fiaddl
aaa
and
stos
mov
gs
xor
ret
ss
sbb
bswap
int
adc
or
jnp
xor
mov
dec
dec
mov
adc
pop
mov
pusha
push
aam
enter
xchg
pop
xchg
lock
std
pop
jne
fisttpll
fs
jp
adc
jp,pt
iret
lock
cmp
xor
insb
lahf
lret
cmp
into
stc
mov
cmpsl
xor
popf
or
and
jle
xchg
lock
mov
pushf
out
sub
inc
sub
sbb
xchg
cmp
mov
andl
mov
xchg
xorb
outsl
lret
push
dec
repnz
in
fisttpl
pop
and
add
stos
jbe
push
fcmove
repz
je
cmpsb
mov
roll
stos
push
movsb
test
xchg
mov
add
lea
jp
enter
icebp
push
fcompl
int
xchg
loopne
mov
cmpsl
mov
or
mov
pop
push
jmp
adc
insb
das
mov
stc
icebp
test
push
push
iret
clc
addl
mov
push
xchg
stos
lret
les
es
mov
pop
sub
dec
adc
ss
xchg
lcall
mov
fcomps
dec
cltd
or
and
lret
vmwrite
jmp
aad
cli
in
push
addr16
mov
ret
jge
mov
aas
vmovapd
add
dec
xchg
xor
inc
fsubs
xlat
pushf
test
dec
filds
xchg
out
cltd
xchg
xchg
aaa
jns
push
jnp
sti
or
jecxz
push
out
push
sub
or
sub
pop
pop
scas
loop
inc
lock
movsl
jmp
out
popa
or
addr16
fs
lahf
lds
sub
sub
mov
fdivrs
insb
cmpsb
jmp
jb
ret
xor
sub
in
push
aam
and
fsubl
ljmp
sti
stos
adc
xor
or
stc
jae
or
aas
adcb
or
or
dec
lcall
stos
sub
mov
mov
and
dec
out
incl
sbb
jmp
jle
cmp
in
push
lods
fistl
subl
inc
or
jecxz
cmpsb
lods
push
repz
add
dec
daa
cmp
ds
clc
mov
pop
xor
rcrl
es
fcomip
mov
xchg
lods
in
or
push
int
rorb
jno
into
or
and
jmp
pop
mov
add
lods
mov
andnps
mov
call
pop
sub
jg
sti
or
mov
pop
mov
cmpl
repnz
in
lods
push
adc
adc
fstp
push
out
cmpsl
and
mov
ret
gs
adc
and
push
jbe
mov
or
std
jecxz
mov
and
and
mov
cmp
mov
ffreep
mov
out
aas
sub
xor
jb
sbb
mov
movsl
gs
in
mov
imulb
fcoml
or
and
or
jmp
push
stos
or
out
push
popa
mov
pop
idivb
pushf
sahf
cmp
mov
pop
fists
arpl
add
pop
sbb
and
jbe
pop
je
lcall
and
sar
mov
add
ret
jnp
cmp
pop
cmpsb
scas
push
jge
movsb
pop
mov
pop
ret
sahf
xchg
mov
faddl
mov
out
std
sbb
repz
or
mov
test
xor
int
fstps
push
cld
sbb
std
ret
mov
ds
pop
sbb
inc
std
loopne
adc
adc
mov
stos
js
in
jae
test
add
adc
stc
popa
lock
xlat
mov
mov
int
inc
scas
cli
mov
test
in
push
movsl
xor
fsubl
sbb
mov
xor
dec
and
push
fwait
mov
mov
lds
xor
orl
pop
push
or
push
xlat
stos
cmpl
or
daa
pop
repz
fsubr
popf
jae
aam
adc
rcrb
stos
pop
lods
jb
jb
pop
out
lea
inc
xchg
jle
ja
jns
and
xchg
icebp
test
repnz
pushf
dec
dec
insl
fidivs
mov
daa
xchg
inc
inc
xor
jmp
jb
sbb
loop
ja
test
mov
jp
mov
int
shr
jne
or
dec
cmp
je
lret
loop
adc
addl
test
imul
das
roll
or
out
aam
jp,pt
sbb
jnp
test
adc
jbe
sub
adc
inc
push
stos
stc
outsl
xor
fstpl
push
dec
mov
je
dec
shlb
sti
rclb
daa
cmp
push
pop
ds
icebp
test
adc
fwait
jb
imul
cmc
paddw
fistl
aas
scas
shlw
sar
add
mov
add
aam
or
adc
pop
fs
pushf
in
sbb
int3
shrb
movsl
popf
cmp
cmpsb
insl
mov
pop
scas
push
ljmp
aam
xlat
cmp
sub
add
cmpsl
mov
pop
dec
mov
and
hlt
jg
add
xor
stos
in
jecxz
and
orb
stc
in
lret
outsl
dec
in
cmp
cwtl
neg
xchg
add
fstpt
adcb
push
inc
add
aad
movsl
sti
icebp
pusha
dec
shrl
inc
data16
jmp
sbb
and
jle
aas
pop
mov
adc
jg
aad
loop
jb
dec
sub
scas
enter
add
stos
mov
fcompl
fs
mov
sbb
out
orb
fsubrs
fimuls
jns
pop
inc
or
push
mov
gs
rclb
push
xchg
xchg
fldcw
xorl
sbb
in
xor
sbb
call
push
mov
push
or
hlt
and
ret
nop
mov
lret
mov
rorl
lds
sti
sub
scas
jns
mov
insl
jl
add
scas
lds
mov
popf
ss
cli
fmul
mov
pop
jg
out
sub
stos
jecxz
dec
ret
subb
jp
cmp
imulb
lcall
sub
xchg
lcall
lcall
loope
mov
hlt
fildll
incl
mov
cmp
xor
xchg
inc
add
dec
stc
repz
and
testb
sub
xor
cmp
out
jmp
ss
or
xchg
test
loop
scas
and
popf
pop
or
insb
push
test
xchg
test
enter
dec
pop
repnz
div
ss
lret
aam
dec
jg
cmp
rolb
fndisi(8087
and
dec
int3
push
mov
jns
xchg
in
es
insb
mov
inc
inc
clc
ss
lahf
mov
sub
cmp
js
xchg
rep
mov
jb
movsl
xor
lret
jp
push
ds
mov
pop
sub
or
fs
cmp
pop
push
inc
push
fimull
push
int
mov
and
xchg
mov
out
and
negb
dec
into
fimull
dec
scas
sarb
addr16
adcb
leave
pushf
add
cmp
push
ds
popa
cwtl
inc
dec
stos
sbb
and
add
lock
rol
sbb
add
inc
stos
lcall
jle
sub
jle
pop
inc
push
mov
mov
movsl
test
das
mov
cli
outsl
fs
sub
mov
outsb
or
scas
jp
fdivrs
mov
and
call
pop
xor
andb
repz
movsb
mov
ljmp
push
xlat
aad
fucompp
pop
sub
sahf
hlt
xorl
movsb
lea
dec
mov
or
fimull
push
fisubl
adc
ja
or
rorl
jns
and
jbe
in
inc
jge
pusha
fisubrl
jg
insl
mov
push
xor
out
sarb
cmp
mov
daa
lcall
pop
and
mov
rcl
dec
cmpsl
aaa
ljmp
mov
inc
inc
frstor
fs
punpckldq
scas
mov
xchg
and
cltd
or
xchg
jbe
adc
or
cmp
ds
data16
and
mov
cmp
mov
loopne
inc
es
pusha
sub
sarb
idivb
fsubrs
stos
dec
out
jp
cmp
xor
scas
mov
cwtl
xor
adc
dec
std
dec
push
fwait
adc
xchg
cltd
vpminub
hlt
pop
jns
clc
test
cmp
or
jns
mov
xor
sbb
out
jns
xchg
add
push
jp
mov
fwait
lea
push
dec
sub
movl
jb
cli
orl
pusha
in
dec
and
mov
ret
inc
pop
sub
fs
xor
and
jo
or
xchg
addr16
cmp
rcrl
rorl
push
dec
shl
mov
in
pop
add
and
daa
sti
or
xchg
push
lock
into
mov
and
jne
mov
mov
or
lret
fdivrs
pop
dec
jo
fwait
pop
ja
pop
mov
xchg
fnsave
int3
sbb
popa
lcall
lea
mov
jbe
pushf
test
push
push
call
sub
ljmp
dec
adc
popl
mov
rorl
inc
lret
mov
xchg
cmp
adc
xchg
cmp
cmp
cmp
inc
adc
mov
mov
fsubp
dec
iret
inc
mov
lds
and
xchg
popf
rorl
adc
shlb
inc
pop
test
mov
push
sub
iret
fmuls
add
adc
xchg
cmpl
xor
sar
sub
and
inc
fs
adc
loop
mov
shll
in
jmp
dec
cld
mov
cmp
movsb
ret
shlb
xchg
sub
xorb
popf
enter
and
imul
cmp
lret
push
scas
test
add
add
mov
sti
lods
push
push
cmp
mov
mov
sub
mov
sbb
outsb
lea
and
sub
cmp
mov
popf
scas
sub
sahf
pushf
adc
xchg
outsl
jnp
sbb
aaa
sbb
dec
es
pusha
jae
aad
sbbl
fisubs
cs
inc
jno
jb
arpl
inc
fisubl
pop
rcrl
cwtl
inc
xchg
mov
mov
aam
insl
pop
addb
inc
mov
fldcw
stos
xor
xchg
repz
add
aas
add
mov
sub
and
psubusw
pop
ljmp
sub
movsb
pop
mov
push
xchg
in
out
pop
int3
inc
das
cmpsb
repnz
push
lods
mov
js
test
push
filds
test
lock
fwait
jne
jnp
cmp
pushf
sub
outsl
jnp
inc
das
push
loopne
xor
arpl
cmp
pushf
add
mov
icebp
lret
insb
mov
insb
cli
out
mov
sbb
leave
pop
sub
mov
xor
stos
ja
enter
divb
jns
mov
xor
pop
jmp
or
cmp
pop
sti
in
push
xor
stc
scas
xchg
jg
push
imul
inc
adcl
push
lret
out
test
xchg
out
es
pop
push
sbb
cmp
cltd
push
loope
sbb
cmp
jge
pop
movb
jle
push
out
call
pushf
call
add
mov
call
inc
test
stc
mov
mov
mov
xor
pop
stos
in
pop
jge
jg
std
stc
or
clc
loopne
pop
xor
ret
jecxz
lods
mov
das
add
push
cmpsl
test
cmc
dec
mov
and
sub
mov
stc
xor
xchg
sbb
add
sbb
pop
icebp
mov
movsl
pushf
jl
shrl
pop
mulb
xchg
mov
pop
add
call
sub
pop
loope
push
pop
push
adc
pusha
fwait
movb
push
jmp
lea
pop
mov
lcall
cmp
mov
push
leave
cmp
mov
leave
mov
lea
outsl
lock
sbbl
cmpsb
mov
int3
nop
inc
repz
gs
jne
adc
inc
mov
fsts
xchg
scas
out
cmp
mov
sub
mov
mov
ret
pop
sbb
push
out
push
cld
lods
test
mov
jge
and
jge
jbe
andb
pop
cmp
or
ja
sbb
cmp
inc
xchg
cld
cs
ror
cmc
pop
push
sub
leave
xor
jg
out
daa
mov
sub
mov
and
cmp
cltd
test
and
cld
stos
pushf
adc
movsb
mov
inc
addr16
push
fcomps
mov
mov
loope
fisubrl
cmp
mov
sbb
or
lret
mov
bnd
mov
cmp
push
pop
mov
add
add
sub
loop
xchg
fs
icebp
loopne
mov
fcmovnbe
decb
rcrl
add
xchg
movsb
xchg
aas
popf
and
mov
sub
sbb
loope
cmp
hlt
mov
scas
imul
data16
pop
xchg
dec
out
jae
daa
test
cmp
mov
adc
ret
pop
dec
cmp
mov
or
test
mov
ja
ret
jns
cltd
nop
mov
cmp
stos
call
in
dec
repz
jle
mov
std
sti
xchg
push
adc
das
cmp
sbb
and
das
push
xchg
shl
cld
inc
mov
outsl
mov
add
dec
arpl
lret
pop
add
sub
xchg
mov
push
sub
adc
test
xchg
dec
rolb
pop
sbb
inc
sbb
scas
bound
les
push
in
pusha
ss
rorb
push
lcall
dec
test
imul
pop
dec
add
or
cmp
mov
dec
jbe
in
lret
push
sbb
call
add
les
orl
jmp
lcall
loopne
fimull
mov
cwtl
xor
cmpsb
mov
pop
xchg
aam
and
jne
stos
sbb
pop
sbb
out
push
mov
lods
fisubl
mov
popa
stos
std
negl
int3
mov
icebp
rol
leave
dec
imul
xor
out
test
movsb
xchg
xor
pop
fidivrs
fmul
fcomp
inc
xor
mov
flds
and
xlat
and
pushf
add
mov
dec
dec
gs
xchg
out
mov
sbb
fdivl
inc
inc
testl
lret
jmp
pop
inc
sti
jl
rcll
out
outsl
int3
and
lcall
push
cwtl
movsl
push
loop
adc
mov
icebp
sbb
test
or
push
mov
mov
mov
in
adc
cmp
enter
pop
mov
mov
or
adc
cwtl
test
mov
sti
mov
pop
pushf
xor
jl
jg
fbstp
ret
or
cmp
inc
out
jge
sub
popf
rol
idivl
xchg
sbb
inc
hlt
iret
cmp
std
mov
aaa
fstpl
clc
loopne
dec
dec
outsb
lret
adc
mov
gs
pop
loop
call
cs
in
xor
jno
push
sbb
xor
cmc
fisttpll
cmpsb
in
dec
out
dec
xor
rcl
popf
aas
std
mov
imul
mov
jnp
and
aad
clc
dec
ja
stc
out
lahf
enter
scas
inc
shlb
pop
cmpsb
repz
int3
dec
push
outsl
popf
mov
stc
sahf
out
inc
and
cmp
mov
cli
repnz
mov
add
or
pop
gs
repz
filds
xor
int
dec
lods
nop
push
pop
lahf
movsl
xor
fninit
sbb
lea
adc
popa
mov
fstp
arpl
cmp
outsb
mov
mov
xchg
lret
nop
xor
inc
mov
gs
pop
dec
xchg
inc
cmp
pusha
and
xor
fisubrl
jmp
sbb
add
dec
sarb
fwait
cs
pushf
std
mov
xor
fwait
scas
xchg
and
add
mov
fcoml
sub
or
lcall
hlt
movsl
nop
aaa
dec
push
seta
add
movsl
nop
xchg
sbb
cmp
rsm
enter
jo
test
lea
shlb
xor
rol
loopne
push
jg
dec
sti
lds
sbbb
in
ret
ret
leave
pop
lods
iret
pop
dec
jo
adc
inc
sub
fwait
sbb
mov
popf
ret
cmp
fwait
test
add
pop
add
inc
call
push
xchg
cmp
mov
lods
mov
fmuls
dec
xlat
test
push
and
pop
lcall
dec
mov
inc
xor
loop
imul
lret
icebp
inc
lods
mov
sbb
pop
les
in
mov
sub
lock
loop
mov
les
dec
out
pop
or
in
or
jbe
and
xchg
aaa
std
test
push
loopne
xchg
adc
dec
aaa
rcrl
loop
sub
push
jg
out
fcmovnb
sbb
push
add
xchg
fldenv
sub
mov
repnz
decl
outsl
add
jns
loop
clc
mov
and
fwait
dec
aad
sub
mov
aad
sub
push
pop
ja
dec
inc
mov
fstps
xor
movsl
cmp
cmpsb
adc
mov
lcall
std
or
mov
cmp
or
xlat
ds
jmp
cmp
jmp
adc
sbb
pop
cltd
scas
cli
repnz
mov
cmc
lret
fs
cmp
pop
push
arpl
add
rclb
stos
xlat
test
cltd
xlat
pop
mov
adc
adc
call
or
lods
cli
fidivs
addr16
push
and
stos
mov
aam
mov
dec
sti
jge
add
cltd
or
daa
ljmp
xrelease
push
outsb
xchg
lods
cmpsb
pop
mov
push
imul
mov
fucomi
lret
loope
int
sbb
pop
sbb
call
lret
lods
xor
cmp
cmp
lea
mov
mov
les
sarl
fimuls
sub
insl
fnstsw
add
xor
fbld
pop
mov
dec
push
xchg
inc
gs
sahf
mov
rcrb
mov
push
xor
and
cmp
cld
leave
xchg
pusha
cmp
ds
cltd
fucomip
push
repnz
xor
sbb
loope
mov
stos
bound
stc
and
dec
mov
movsl
mov
pop
lds
ss
mov
mov
mov
dec
ljmp
or
jmp
mov
jl
and
mov
enter
mov
data16
fnstsw
idivb
jg
and
jae
jg
mov
cmp
sbb
bound
pop
sub
jg
pushf
popa
xlat
dec
push
dec
les
jecxz
sub
inc
push
call
cmp
cli
addb
adc
mov
scas
scas
mov
xor
cmp
xchg
mov
sar
sbb
enter
lock
data16
rcll
mov
cmp
mov
scas
xor
xchg
dec
mov
lahf
js
je
and
sbb
cmp
and
and
mov
out
jp
mov
push
add
leave
mov
cmp
or
fisttpl
sub
adc
pop
pop
scas
sbb
lds
mov
jecxz
cmpsb
pop
adc
std
lds
cmc
inc
bound
leave
imul
mov
cwtl
js
dec
push
xor
xor
xchg
popa
inc
cs
or
fcoml
xlat
jecxz
loop
inc
mov
outsl
push
cmpb
xchg
gs
sub
mov
ds
imul
add
xor
jo
inc
push
xorb
cltd
aas
push
in
out
cmp
in
int
xchg
xchg
cld
out
stc
push
cmp
mov
sub
adc
sub
sub
xlat
in
ljmp
out
cmpsb
xchg
ljmp
push
sbb
mov
imul
dec
sub
fwait
es
repz
call
dec
and
rcr
xor
xchg
mov
lcall
addl
cltd
dec
repz
jge
xor
add
daa
fs
das
xor
mov
dec
test
adc
dec
in
js
pop
mov
bound
add
mov
scas
cwtl
ror
orb
adc
js
jbe
push
movsl
out
hlt
xor
xor
jg,pn
fdivrs
adc
dec
xchg
aaa
fisubs
in
test
inc
dec
pushf
lea
mov
mov
divl
clc
fmuls
jecxz
rcrl
pop
icebp
push
or
ljmp
out
movsb
mov
lea
out
sti
inc
cmc
out
scas
and
sub
cmpb
addr16
pop
push
test
out
adc
imul
jb
dec
mov
mov
mov
jge
xchg
addb
push
orb
movsl
adcl
data16
fmul
jecxz
bound
fdiv
fs
rorb
sub
mov
sbb
lock
and
outsl
lods
jb
adc
add
mov
jmp
inc
mov
cwtl
mov
adc
and
push
pop
in
jp
mov
mov
cmp
mov
dec
inc
int
push
xor
out
lds
jmp
arpl
int
push
cmpsb
lods
and
test
daa
mov
rorl
fdiv
or
in
in
nop
mov
inc
pop
fldt
scas
subb
sub
test
scas
sar
pop
xchg
pop
or
sbb
nop
xchg
mov
andl
stos
push
xchg
nop
loope
sub
push
mov
loopne
xchg
push
cmp
lret
loopne
aad
int
cvtdq2ps
dec
jne
lds
push
lret
jl
daa
fmuls
xor
xor
add
cmpb
lds
popf
cwtl
push
into
in
sbb
sub
mulb
add
and
mov
nop
mov
or
push
add
cmp
xchg
jne
inc
jo
push
cmpsl
popa
xor
out
pop
je
pushf
test
push
mov
jb
lret
mov
mov
or
ffree
sub
mov
sbb
and
cwtl
mov
and
mov
adc
cltd
push
test
test
sbb
and
out
js
mov
jnp
iret
cwtl
shll
jmp
add
mov
dec
jbe
pop
cltd
inc
sbb
xchg
mov
ss
test
and
addb
add
loope
das
imul
ljmp
gs
movsb
cli
or
mov
or
std
rcrb
nop
cmp
out
out
loope
mov
xchg
mov
mov
sbb
leave
popa
mov
orl
or
bound
cltd
push
leave
fs
pop
js
adc
push
push
enter
mov
cli
dec
addr16
jb
test
fwait
hlt
pop
mov
cld
push
lret
or
jl
loope
push
ljmp
mov
inc
sbb
xchg
andl
ss
jg
add
add
xchg
loope
xchg
out
ljmp
pop
mov
xorb
test
jns
jns
test
dec
out
fiadds
pop
cmpsb
insb
mov
filds
aas
test
dec
das
aad
imul
es
data16
loop
ficompl
icebp
mov
stos
or
push
pushl
xor
lock
sbbl
mov
add
test
cmp
sbb
hlt
sbb
in
decl
mov
pop
mov
movsb
aad
push
roll
sbb
inc
cs
dec
mov
jp
lret
push
test
repnz
rcrl
inc
dec
inc
icebp
lea
mov
inc
xor
adc
push
or
sti
jb
jo
mov
push
xor
sub
cwtl
or
mov
mov
jb
cmpsb
and
fcoml
pop
and
xchg
outsl
xchg
pop
pop
push
ljmp
xor
clc
push
mov
push
int3
repnz
ret
sbb
pop
mov
inc
movsb
adc
iret
xchg
push
and
cmp
aam
pmaddwd
mov
adc
dec
adc
in
mov
or
fcomp
nop
push
xchg
mov
dec
frstor
xchg
lods
neg
jns
int
inc
test
sub
pop
xor
add
cmpsl
test
sbb
rcr
sub
pusha
jns
stos
add
xor
fwait
dec
sbb
lret
cmp
sbb
mov
cmp
fidivrl
xor
clc
jae
add
jmp
lahf
push
sub
stos
insl
cmp
cmp
add
mov
lds
push
push
and
frstor
fcomp
sbb
cmp
shufps
add
sbb
adc
pop
xchg
sahf
push
enter
mov
cmc
cmp
mov
in
dec
mov
adc
xlat
push
outsl
jecxz
pop
jae
pop
mov
and
stc
data16
js
dec
movsw
ja
int3
out
inc
mov
jg
mov
and
imul
add
ss
popf
jp
mov
jnp
cmp
jg
jno
inc
mov
dec
jmp
test
cmp
cmp
jbe
jo
mov
adc
cmpsl
ror
test
lret
incb
movsb
cmp
sbb
jmp
sub
xchg
mov
adc
loope
sbb
int
mov
int
outsl
push
aam
add
sarl
mov
call
and
lcall
push
mov
mov
and
or
in
movsb
shr
cld
or
leave
adc
movsb
sub
xor
sub
fistps
cli
ds
cmp
sub
and
sub
hlt
popf
fwait
sbb
lock
fs
xchg
mov
xor
fidivl
sub
xchg
adc
js
or
and
test
adc
test
loopne
dec
bound
push
nop
mov
jecxz
or
rcrl
loope
and
push
popa
mov
lret
inc
shl
into
pavgb
ret
cmp
sbb
test
cmp
fisttpl
lcall
push
pop
js
push
test
in
push
outsb
inc
inc
adcl
jecxz
fisubrs
mov
pop
sub
xchg
stc
rorl
push
xor
or
adc
lock
pop
jge
clc
cmp
shl
int
pop
jno
into
adc
or
test
inc
inc
in
in
nop
inc
mov
mull
push
sbb
popf
jnp
test
test
adc
cmc
cmp
jmp
mov
ret
cld
cmc
dec
int
pop
cli
ss
pop
adc
cmc
cmc
aas
rcl
pop
fbstp
mov
push
pushf
out
mov
popf
sbbb
cmp
adc
jge
in
iret
cwtl
jno
sbb
mov
or
jmp
arpl
sub
incb
in
lods
push
cmp
mov
cmp
mov
and
loopne
lea
notb
shlb
push
pop
xor
jmp
clc
outsl
jbe
inc
je
xor
fwait
out
jl
hlt
les
or
aas
cmc
out
adc
lahf
aaa
mov
inc
dec
and
lfs
cmp
arpl
in
loope
inc
repnz
xchg
dec
sahf
cs
rcrb
scas
mov
cmp
push
mov
cmp
lock
scas
fstps
push
mov
jmp
sub
mov
aad
jns
and
popf
aam
das
lods
xchg
mov
inc
lahf
push
cltd
cmpsb
stc
xchg
jle
push
mov
nop
pusha
in
outsb
stos
sahf
lret
lcall
cmp
ja
jb
pusha
jns
les
popf
sbb
jecxz
xlat
sub
mov
ss
and
cmp
xchg
lods
jne
jl
cmp
fsts
inc
arpl
sub
xchg
sbb
lahf
dec
outsb
out
or
aad
icebp
imul
sbb
and
pop
push
add
mov
jl
push
inc
fisttps
sahf
clc
jp
mov
lods
jbe
mov
mov
cmp
ret
add
fnstsw
xorl
ljmp
jp
notb
cli
popf
nop
jno
cmp
loopne
dec
test
test
push
test
push
mov
aaa
imull
outsb
mov
out
and
mov
call
fstpl
ss
std
gs
pop
sub
xchg
movsb
cmpb
mov
outsb
xchg
fistpl
push
pop
push
mov
lahf
adc
negl
adc
sbb
pop
negl
add
stc
icebp
cmp
cmp
mov
push
clc
xor
stos
call
repnz
adc
push
add
data16
jge
mov
dec
int
mov
cmp
xchg
cmp
gs
mov
aad
and
mov
imul
mov
ss
fists
lret
outsl
adc
imul
mov
mov
xchg
iret
aad
fcomps
push
xor
push
fs
mov
pusha
ret
push
cmp
dec
jo
pop
cmp
cmp
rcrl
and
sti
xchg
push
lock
mov
icebp
jp
in
movsb
or
and
sub
mov
push
mov
out
addr16
insl
xor
lea
lods
mov
shr
push
mov
pushf
mov
mov
nop
mov
xchg
jb
test
movsl
jb
stos
xorl
lcall
pop
add
imul
push
sub
and
stc
sbb
repnz
fiaddl
dec
roll
enter
jmp
inc
out
icebp
decl
xchg
arpl
or
pushf
dec
outsb
sbb
das
add
js
repz
mov
xlat
cmp
pushf
push
cwtl
mov
adc
add
outsb
cld
fsubl
xchg
aad
stc
push
in
fwait
mov
mov
inc
jl
iret
imull
es
sbb
add
sub
mov
mov
sti
cltd
push
sti
cmp
test
inc
mov
into
lcall
jnp
xor
clc
xchg
xchg
and
rcrl
jle
dec
imul
cmp
cmp
pop
push
cmp
sub
pop
jae
dec
decl
ja
adc
out
xchg
and
or
test
jae
cmp
pop
mov
mov
cmp
inc
sub
ret
push
frstor
sub
cmp
clc
pop
fstp
pop
outsb
test
lock
vpunpcklwd
dec
std
scas
mov
call
movb
loopne
cmpsb
push
xchg
and
stos
cld
outsb
popa
jmp
mov
dec
push
add
clc
sub
jne
sbb
push
sahf
out
cmpb
dec
repnz
pop
scas
lods
inc
inc
inc
xchg
push
cmp
into
cwtl
and
and
sub
xchg
shr
dec
test
sahf
test
mov
pusha
iret
mov
mulb
lret
push
lods
pusha
sub
dec
jg
lahf
cmp
and
jge
dec
imul
arpl
mov
jns
dec
mov
mov
pop
xchg
into
sbb
fs
cmp
push
rclb
mov
rol
mov
jl
dec
daa
or
xorb
stos
sbb
jle
mov
sub
in
cmp
out
lcall
int
mov
jbe
and
jle
movsl
lea
mov
jmp
dec
or
push
push
cmp
adc
and
sub
cmp
xor
sub
aas
scas
lock
pop
aaa
jbe
add
cmp
jno
fs
mov
xor
out
or
mov
inc
fisttpl
call
ret
popf
inc
shlb
mov
mov
adc
lods
mov
sbb
ljmp
jmp
or
je
mov
cmp
sbbb
fs
cmc
push
repnz
addr16
roll
sbb
cmp
mov
jb
std
test
inc
bound
pop
pop
les
loop
std
sahf
xchg
or
add
mov
and
push
xor
add
push
call
sub
adc
sarl
jnp
mov
mov
pop
or
pop
imul
mov
sbb
jecxz
lods
rol
fstp
push
into
movsb
adc
pop
push
push
fisubrs
and
mov
lcall
push
cmp
jnp
stos
dec
and
pop
loop
adc
js
imul
call
iret
imul
push
dec
jb
mov
insb
add
xor
movsl
jb
lcall
jnp
xchg
jmp
inc
test
sbb
out
std
out
mov
fidivrl
and
add
mov
or
mov
xor
aas
xor
pop
mov
aas
mov
add
xor
int
fisubrs
mov
lods
fwait
aad
or
test
cli
add
rcrl
test
shlb
xor
xchg
add
cmpsl
nop
ds
out
aaa
lock
aaa
gs
adc
cmpsb
outsb
aam
push
or
fisubrs
lods
pop
jmp
sahf
inc
data16
sbbb
popf
jecxz
push
pop
cmp
or
xorb
inc
push
cs
xchg
xchg
es
lcall
adc
xchg
adc
sbb
fstpt
xchg
pop
fwait
pushf
sub
mov
jae
push
sahf
cmpsb
xchg
adcb
in
loop
inc
rcrl
xchg
cmp
popf
stc
fildll
mov
cmp
daa
cmp
enter
decb
pushf
adc
orb
mov
fiaddl
ljmp
pushf
out
stc
movsl
call
bound
inc
stos
aas
dec
hlt
les
mov
sbb
and
mov
cmp
icebp
test
cmpsl
xchg
mov
int
or
sbb
idivb
pop
jne
fimuls
pop
and
pop
sarb
ret
or
or
add
pop
repnz
mov
xlat
jle
sbb
mov
div
push
push
dec
add
and
pop
sbb
xchg
mov
sub
xor
jo
aaa
lahf
sub
jno
inc
clc
and
adc
adc
push
inc
pop
ret
mov
loop
mov
inc
xor
xchg
push
jge
fwait
loop
cmpsl
outsb
mov
adc
loop
dec
sub
cmp
imul
out
pop
ljmp
add
add
cmpsl
shr
add
push
jbe
loop
nop
inc
mov
test
iret
pop
pushf
dec
xchg
cmp
xor
jno
rcll
ret
ss
mov
xchg
mov
sub
xchg
cmp
test
jmp
adc
cmp
movsb
pop
xchg
ret
rcr
mov
dec
stos
shll
mov
mov
adc
or
or
mov
add
dec
sub
std
in
test
mov
xchg
pop
cmp
stos
shrl
shl
loopne
xchg
shll
daa
adc
fbstp
repz
out
sub
sbb
cld
rcrl
sub
mov
push
pmuludq
jge
ds
jo
or
xchg
jg
jb
push
outsl
inc
mov
es
xor
punpcklbw
daa
ss
fimull
rolb
ja
lods
push
movsb
jmp
cmp
mov
divb
ja
cs
add
out
jge
mov
push
mov
js
out
xor
dec
push
rcll
mov
inc
mov
icebp
sbb
jb
out
fdivl
inc
cmp
test
mov
aam
mov
cmp
cld
scas
mov
xchg
ficoml
lcall
mov
lds
sbb
in
leave
jge
pop
and
mov
fcomp
outsb
out
xchg
mov
out
cmp
inc
int3
je
fsubrs
aas
pop
mov
js
mov
bound
add
pusha
sub
xor
xchg
loope
cmc
lock
xchg
dec
cmp
mov
or
add
jbe
loope
lds
xchg
out
ret
adc
aaa
jecxz
stos
xchg
or
dec
adc
inc
cltd
fs
imulb
int3
xchg
push
sub
repz
push
lcall
adc
aas
fcom
ljmp
fwait
push
dec
imul
cmp
mov
je
dec
cmp
pop
cld
aas
add
loop
popf
fidivl
test
das
mov
mov
inc
cmpl
mov
jb
pop
addr16
lret
fwait
hlt
sti
pop
dec
xchg
and
fyl2x
mov
out
add
repnz
clc
xchg
ss
xchg
sub
push
jmp
lea
pusha
sub
mov
ds
pop
mov
lock
jo
dec
cmp
adc
dec
mov
imul
xchg
stos
xor
mov
in
stos
inc
jge
idivb
fiadds
jp
mov
repz
test
arpl
dec
orl
sub
cld
clc
mov
jae
in
movsl
sbb
push
jmp
or
repnz
or
jne
rcrl
sub
and
cmpsb
pushf
cwtl
pop
and
cmpsl
and
push
push
addr16
mov
aas
cli
dec
and
scas
add
and
bound
push
jg
dec
rorl
mov
outsb
iret
push
repnz
popf
and
movsl
addr16
jl
xchg
lock
mov
rorl
out
bound
or
lds
jge
sbb
or
aad
out
fstpt
and
das
push
sahf
mov
mov
inc
add
incb
push
ljmp
jecxz
data16
mov
rolb
cmpsb
js
int3
ljmp
add
ja
mov
js
loopne
dec
or
cmp
inc
pop
xchg
in
movsb
dec
cli
mov
mov
jmp
push
mov
lret
stc
repz
loope
push
or
dec
mov
cmp
leave
daa
add
fbstp
cld
ret
add
aas
loopne
sub
mov
mov
inc
mov
inc
sbb
sbbl
pop
loop
mov
int3
movsl
dec
or
xchg
sarb
mov
pushf
rorl
in
push
sbb
fmuls
sti
fsubs
addr16
roll
shr
ljmp
push
push
in
or
adc
icebp
jg
dec
shlb
test
or
lock
insl
push
lea
add
lock
mov
lcall
push
push
dec
inc
sub
jge
iret
mov
pop
mov
sbb
gs
ljmp
mov
movsl
mul
out
shrb
mov
xchg
mov
cmp
mov
inc
js
imul
jp
lahf
lea
or
mov
jg
xor
fbstp
es
cmp
shl
out
fsubrl
lods
ficomps
adc
xchg
test
sahf
cs
sar
cmp
mov
int3
mov
adc
insb
add
jne
sub
andl
and
jo
pop
cld
inc
push
sbb
je
pop
stc
and
inc
mov
popa
lret
rcr
lds
fidivrl
cmc
add
add
popa
mov
jno
adc
and
xor
dec
mov
fsqrt
test
cmpsb
sbb
jnp
movsl
jle
push
jo
fcoms
out
push
sub
fmull
loope
xor
push
stos
push
sub
mov
mov
popf
mov
ficomps
lea
mov
or
fwait
pand
cli
jmp
mov
dec
inc
mov
aam
xor
fistps
cmp
cld
jbe
dec
mov
rcrl
sbb
fstl
stos
inc
aaa
ja
insb
jns
mov
sub
loop
push
cmp
ss
push
nop
mov
arpl
icebp
mov
pushf
popf
icebp
xchg
dec
lret
jae
sbb
or
hlt
in
fcomps
jno
add
mov
ja
mov
outsl
andb
cmp
ja
push
into
out
or
sbbb
and
adc
in
insl
mov
stc
mov
dec
ljmp
fdivrl
lods
imulb
inc
lcall
pop
in
insb
push
insl
pop
sub
cmp
adc
enter
scas
mov
mov
lods
insl
test
lds
in
sub
xchg
lock
mov
mov
mov
dec
and
das
push
jecxz
movsb
or
inc
cmp
inc
and
sbb
inc
cld
lret
mov
pop
xchg
out
addr16
and
cmpsl
mov
jl
movsb
jmp
outsl
in
mov
outsb
in
das
xlat
imul
xchg
imul
jnp
push
loop
xor
dec
out
add
cmp
aad
decl
sbb
mov
mov
cld
xor
dec
inc
nop
sub
inc
jns
or
mov
mov
cmp
in
mov
in
fcoms
popa
out
pop
xchg
cltd
sbb
aas
mov
loop
lahf
incl
outsb
push
aaa
xor
dec
sbb
push
inc
push
loop
adc
pop
jecxz
jl
ret
push
repnz
fpatan
aad
jae
cwtl
sub
mov
dec
sbb
inc
push
scas
and
jne
xor
les
mov
mov
in
mov
push
push
addr16
pop
sbb
gs
les
nop
lret
dec
and
sbb
pop
clc
sbb
mov
insb
push
out
stos
dec
out
xor
stc
and
inc
adc
and
xchg
lock
pop
mov
stos
ja
jmp
movsl
repz
dec
pushf
jecxz
test
jmp
mov
dec
push
add
and
jo
ret
outsl
jnp
outsb
xchg
sub
dec
inc
jne
into
enter
into
scas
das
arpl
inc
int
popf
testl
adc
imull
pop
push
stc
das
out
push
pop
mov
push
push
out
jmp
and
mov
popf
push
mov
jl
loopne
xchg
jno
jg
dec
xor
mov
div
int3
mov
adc
mov
push
loopne
mov
enter
jp
test
call
adc
imul
loopne
out
mov
dec
decl
xor
loopw
fwait
cmpsb
insb
or
mov
sub
les
cmp
inc
dec
lds
lret
inc
xor
mov
rcr
or
sub
dec
es
push
cmp
mov
stc
sub
mov
push
fistpll
adc
xchg
loop
ss
pusha
xor
or
ljmp
subl
pop
jg
mov
pop
fcmovb
out
cmpsb
pop
jg
mov
enter
jno
fnstsw
call
dec
dec
cmp
das
outsl
inc
test
rcrb
lret
fnsave
icebp
xchg
adc
fadds
mov
sbb
xchg
mov
jnp
xchg
gs
cmpsl
aam
inc
je
sub
xor
ret
outsb
inc
ss
cld
cmp
pop
lea
inc
inc
push
aas
test
rcr
inc
loop
shlb
fucomip
mov
out
aad
sub
ds
pop
out
add
mov
or
xor
mov
gs
pop
push
adc
and
cmp
aaa
add
addb
mov
dec
out
mov
movsb
jo
jl
decl
arpl
or
dec
cwtl
xor
pop
jbe
add
rcrb
cli
popf
push
adc
xchg
lods
in
sahf
jp
add
fstps
outsb
push
push
jb,pn
fwait
repnz
int
cmp
nop
insl
into
dec
mov
gs
jo
cmp
pop
pop
or
ds
outsl
xchg
xchg
jno
jb
fmuls
lea
dec
enter
mov
repz
and
lods
stc
movsb
rolb
adc
pop
dec
fdivrp
mov
addr16
jae
pop
mov
sbb
xor
in
mov
fs
fmul
test
push
push
dec
lods
dec
aas
out
scas
sbb
cmp
inc
add
test
jmp
movsb
xor
mov
dec
cmp
xor
fdivs
stc
dec
add
pop
popf
pusha
dec
rclb
inc
stc
pop
cmp
int
sbb
dec
es
je
xor
mov
sub
pushf
fildl
cmc
dec
pop
pop
ficompl
dec
std
push
data16
dec
loop
addr16
out
mov
mov
or
arpl
out
jae
xor
xor
mov
jae
repnz
lods
in
iret
xchg
xchg
cmp
sbb
js
mov
jmp
in
testb
mov
addr16
mov
lods
aas
add
mov
lock
cmp
test
xchg
pop
cmp
xor
mov
xchg
sbbl
cld
test
int
mov
sub
insl
dec
push
inc
aas
dec
sbb
leave
repz
inc
out
mov
mov
mov
mov
lahf
add
xor
cld
and
dec
jb
and
imul
mov
mov
mov
rcr
xor
dec
sti
sahf
or
dec
loopne
jg
adc
mov
jge
dec
test
adc
sub
jbe
iret
xchg
cld
adcb
popf
in
scas
arpl
cmp
daa
out
pop
lret
jne
mov
pop
outsl
cwtl
or
or
pop
addl
dec
loop
bound
sbb
daa
imul
mov
jle
cltd
mov
inc
and
dec
imul
jns
lock
not
dec
push
cmp
fsubrs
xor
test
cmp
aad
sub
andb
lret
in
pop
fsubs
dec
insl
pop
push
ljmp
fcomps
cwtl
mov
shl
outsl
mov
roll
pushf
or
or
into
enter
cwtl
testb
pusha
add
daa
sub
or
jmp
je
ret
jno
fdivr
jbe
pop
hlt
mov
stc
sbb
dec
add
ja
cmp
push
loop
icebp
mov
cli
aaa
sbb
in
dec
push
push
loop,pt
add
mov
xor
fs
mov
hlt
mov
pop
mov
mov
or
fs
mov
mov
sub
leave
std
xor
movsl
adc
sti
adc
mov
jb
stos
clc
insl
aas
xor
add
subl
les
mov
inc
mov
enter
into
or
cltd
ljmp
xchg
movsl
stc
jb
xlat
nop
lret
sub
xchg
leave
adcl
mov
out
mov
and
mov
call
mov
sbb
mov
jg
jmp
fdivrs
dec
xchg
cwtl
fwait
aam
xchg
pop
xor
xor
cwtl
pop
mov
gs
and
xchg
xor
fdivs
repnz
js
lcall
mov
in
divl
sub
xchg
repnz
adc
scas
lret
pop
jecxz
cmpsb
adc
xor
pop
stc
test
jb
xchg
aaa
roll
pop
mov
dec
sbb
jp
jle
or
stos
out
icebp
clc
loop
push
lods
jmp
push
mov
lcall
in
nop
das
push
jl
imull
or
xor
push
cld
xchg
leave
push
shlb
clc
sub
ret
rol
mov
movsl
xlat
pop
loop
jg
push
insb
call
dec
and
mov
lods
sub
roll
pusha
aaa
inc
rcll
xchg
dec
inc
push
dec
mov
lret
test
in
mov
hlt
cmp
jmp
jne
mov
daa
xor
sbb
or
mov
inc
scas
mov
addb
jno
mov
lds
jl
arpl
adc
movsl
push
into
push
pushf
sub
int
pop
inc
shl
unpcklps
xor
jge
loope
pushf
push
pop
lods
xor
pop
add
aaa
mov
inc
mov
dec
xchg
decl
sub
les
mov
movsb
icebp
mov
lock
test
xchg
je
cmp
dec
pop
ret
mov
and
lcall
cmpsb
add
sbb
movsl
add
daa
std
sarl
mov
or
or
mov
pop
add
clc
push
jle
cmp
push
mov
in
iret
push
inc
es
pop
push
push
movsb
test
ja
mov
dec
pop
imul
test
lods
mov
cld
sti
repnz
mov
adc
sbb
inc
xchg
bound
cmpsb
jge
push
leave
xchg
stos
push
outsl
outsl
jp
or
jmp
mov
repnz
loop
je
pop
xchg
das
pop
mov
std
adcb
pop
rcrb
icebp
rcr
out
icebp
lret
in
pop
jecxz
push
pop
iret
call
rolb
in
addr16
in
sub
mov
sti
add
ljmp
mov
iret
or
cmp
inc
mov
inc
je
pop
lret
lock
scas
lea
and
mov
sub
pop
lcall
repz
mov
shl
pop
rclb
hlt
and
mov
push
outsb
cmc
dec
repz
add
je
test
jle
push
adc
pusha
aad
add
lds
jecxz
lret
aad
sti
or
sbb
sub
mov
hlt
push
cvttps2pi
pushf
movsb
and
pop
xchg
cmp
int3
xchg
cmp
lds
mov
test
jnp
pushf
adc
xor
shll
in
push
and
stos
sarb
jmp
push
push
fnsave
mov
ds
sub
inc
mov
lcall
and
popf
mov
push
imul
lds
xor
xchg
int
cmpsl
je
cmp
fcoms
mov
aaa
push
mov
sbb
mov
mov
or
pop
dec
test
jb
cld
mov
push
ss
and
xchg
jge
leave
clc
xchg
test
inc
or
or
xchg
test
or
pop
pop
push
and
pop
mov
cmc
addr16
test
sahf
outsb
ret
shlb
jge
sahf
repnz
shll
pop
sub
es
dec
sbb
xor
lds
push
fucom
orb
dec
add
ds
ss
xor
fnsave
add
dec
shlb
fcos
sbb
xchg
push
jnp
iret
fmuls
jge
xchg
out
fiadds
jnp
out
mov
imul
xor
ret
or
xor
enter
orb
inc
pop
xor
xor
testl
loop
repz
xor
adc
pushf
jle
jge
mov
mov
inc
or
xchg
cmovno
and
scas
dec
cmpb
push
mov
jnp
imul
mov
adc
leave
dec
sub
inc
pop
sbb
movsb
xchg
inc
int
call
xor
fwait
gs
push
mov
and
dec
adc
ret
shrb
push
mov
enter
in
daa
pop
test
mov
cmp
adc
pop
add
daa
mov
dec
lret
stos
cwtl
xor
and
xchg
mov
popa
stc
xchg
test
lret
xchg
lcall
scas
inc
cs
stos
add
lret
ljmp
jp
jp
xor
pop
addb
pop
push
insl
in
call
inc
mov
mov
inc
xor
mov
and
pop
sti
dec
xor
loopne
jle
out
jecxz
and
pusha
aam
adc
mov
std
pop
mov
aam
ss
jbe
mov
jae
pusha
test
xor
rcll
aam
cmp
aad
mov
loope
or
jmp
iret
push
inc
adc
in
mov
fistl
inc
xchg
sti
cmp
dec
jns
cmpsl
fiaddl
shll
test
xor
jae
jbe
lcall
sbb
clc
pop
loope
rcrl
xlat
les
imul
sbb
fcomip
jne
and
repnz
jmp
std
stos
xchg
push
sub
xor
add
lret
xlat
popa
xchg
cs
mov
push
jnp
dec
mov
xchg
fcmovu
cmp
mov
mov
sub
xor
xchg
push
xor
add
push
dec
jecxz
loopne
jnp,pt
test
push
push
dec
in
xor
cld
xlat
out
mov
sub
loop
or
call
ret
xchg
pusha
and
adc
dec
push
push
xor
ret
pop
xor
lock
and
sbb
clc
and
cmpsb
lcall
xor
aad
in
add
lock
ds
and
test
test
add
dec
jnp
out
mov
mov
hlt
and
gs
cmc
stc
ret
sub
mov
gs
jb
jae
cmpb
mov
mov
subl
and
xor
ret
mov
mov
fidivrl
ds
add
cs
jg
insl
cmp
bound
sahf
aam
and
movaps
sub
test
test
mov
add
xchg
stc
int3
cmpsl
xor
jle
lock
pop
inc
inc
data16
xor
lret
popf
pop
push
sbbb
mov
stc
adcb
leave
add
cmp
mov
in
fdivs
daa
xlat
mov
int
jbe
or
push
into
cwtl
inc
adc
les
adc
pop
ja
xor
inc
xchg
movsb
mov
xor
sub
mov
in
xchg
push
adc
jnp
mov
adc
adc
test
mov
lods
flds
mov
movsl
add
ret
xchg
es
cmpsl
xchg
jg
jmp
inc
cmp
adc
test
in
sub
mov
xchg
or
mov
xor
mov
cmp
lcall
jno
dec
fidivrl
fucomp
adcb
in
xchg
jge
push
mov
bound
push
jp
movsb
test
fmull
into
imul
dec
out
and
fwait
xchg
std
jp
clc
sarb
cmpsb
cmpsl
popf
push
pop
nop
lods
aas
jne
push
pop
dec
cmp
jle
add
sub
dec
lcall
test
fwait
out
nop
xor
shl
daa
in
aad
pushf
adc
mov
fists
xchg
xor
inc
mov
outsl
lds
mov
cmp
std
mov
insb
adc
xchg
aaa
and
sbb
js
sbb
sbb
inc
cmp
in
xchg
cli
xlat
and
mov
repz
test
push
sub
cmpsb
or
test
push
inc
jae
test
xchg
cmp
pushf
addr16
mull
into
and
or
pop
aaa
add
adc
idivb
dec
or
int
jmp
sbbb
dec
movsl
js
ret
out
jg
insb
cmp
cltd
lock
or
rolb
and
inc
inc
adcb
int3
push
lds
and
mov
mov
outsl
clc
xchg
xchg
pusha
addr16
popa
mov
and
xchg
aad
iret
int3
pop
xchg
mov
dec
lcall
fcmovb
xchg
mov
push
movsl
daa
int3
cli
cld
arpl
addr16
mov
mov
popf
je
or
jp
push
inc
jb
addb
bound
sub
push
out
xor
sbb
add
inc
cmp
adcb
shll
dec
ja
ljmp
fidivs
xchg
mov
push
hlt
daa
rorl
sub
mov
add
inc
outsb
int3
pop
add
fcomi
jno
cli
mov
and
ljmp
mov
xchg
pop
ljmp
lahf
mov
aad
jg
xchg
int
push
inc
sub
repnz
push
subb
imul
orb
and
test
in
sahf
jecxz
sbb
call
xchg
movsl
daa
repz
jge
adcb
ret
fld
fnclex
fwait
sbb
cmp
mov
sub
sbb
mov
out
sbb
pop
loopne
pop
loop
lret
fldt
xchg
adc
cmp
mov
je
mov
mov
insl
mov
fxch
inc
cmpb
jno
mov
stos
sub
jbe
in
scas
cmp
dec
movsl
test
into
sub
repz
popa
jb
and
lods
sub
leave
fldl
fbld
insl
movsl
mov
das
lea
sbb
pusha
push
cmp
shlb
dec
enter
jne
insl
xor
out
mov
cli
dec
jns
pop
mov
sub
mov
enter
shrb
test
mov
push
in
mov
or
adc
popf
mov
pop
fidivl
mov
mov
add
push
pusha
push
test
pop
arpl
outsb
cmpsl
push
mov
sub
adcl
inc
mov
inc
sub
ss
mov
mov
or
mov
pop
bound
mov
shlb
mov
ja
push
lods
pop
xchg
jle
sub
mov
dec
xchg
lea
push
mov
mov
adc
ror
inc
jl
cmp
adc
inc
mov
cmpl
fnstenv
in
mulb
aas
dec
sarb
cltd
sahf
xchg
push
add
jo
outsb
and
cmp
ret
xor
xchg
cwtl
xor
jae
outsb
mov
lcall
jns
js
cltd
mov
or
in
jbe
int
addr16
mov
jp
inc
and
test
jp
ds
stc
data16
fsubs
add
xchg
pop
es
decl
aam
mov
pusha
adc
dec
sub
enter
fs
push
xchg
cmp
fsubl
shll
loope
movsl
in
push
aad
xchg
mov
leave
xor
or
pop
xor
leave
in
mov
clc
test
adc
inc
mov
ret
and
adc
and
mov
icebp
or
dec
in
mov
mov
roll
cmpsl
pop
push
aaa
jo
sbb
pop
jmp
daa
adc
jae
aam
imulb
int3
mov
arpl
div
pop
mov
adc
pop
sti
repz
lret
jp
scas
out
mov
mov
sahf
and
jno
dec
add
jo
inc
int3
mov
sub
aad
add
pop
cwtl
je
icebp
inc
xor
xor
or
ret
pshufw
pop
into
adc
insb
iret
pusha
std
jae
or
jl
rol
and
mov
jne
scas
and
mov
and
jmp
xor
adc
sub
jle
and
outsl
mov
subb
sahf
popf
in
stos
aam
sbb
pop
int
mov
and
dec
mov
xlat
jge
cld
test
shlb
jle
jne
sbb
push
orl
test
out
iret
lahf
mov
mov
ret
or
dec
cmc
in
cmp
or
loopne
lahf
jnp
repnz
orl
dec
push
adc
or
mov
test
cmp
or
lea
xor
hlt
mov
add
mov
iret
bnd
adc
sahf
jmp
sbb
jns
stc
mov
les
xchg
mov
shlb
rcrl
cmp
insl
dec
cmp
mov
aam
push
mov
daa
mov
sarl
or
mov
popf
mov
jp
mov
cld
mov
je
add
push
std
sbb
inc
cli
filds
mov
push
jb
mov
mov
xor
sub
test
imul
out
dec
mov
fwait
shlb
inc
pop
iret
lea
cmp
outsb
sbb
xchg
and
outsb
iret
mov
mov
cmp
ja
adc
mov
lret
mov
or
ds
push
sahf
jp
xor
jo
sub
xchg
xchg
fs
iret
int3
ret
and
sbb
dec
adc
ljmp
leave
cmp
bound
repz
sub
sbb
jno
sbb
inc
fistps
ret
inc
ja
xchg
mov
cmp
stc
imul
jmp
adc
add
enter
bound
iret
xchg
push
mov
sti
movsb
adc
add
jecxz
or
xchg
xchg
pop
nop
cmp
lcall
testb
sub
inc
fildll
xor
enter
add
lea
adc
pop
add
repnz
loop
cmpl
das
jle
push
mov
rcll
xor
mov
scas
mov
cmp
lods
iret
movsl
sbb
das
and
mov
es
inc
sub
js
sub
shl
dec
std
cmp
cmpb
mov
fldenv
mov
push
int3
mov
pop
orl
mov
sbbl
lahf
in
loopne
mov
jno
cs
sarl
push
fldcw
sbb
xor
ror
jl
imul
fiadds
mov
push
xchg
into
das
pop
mov
dec
loopne
dec
mov
xchg
cmp
add
fsubp
lds
jle
sbb
mov
jg
jno
pop
mov
lods
jle
aad
sub
xchg
mov
add
out
jns
xor
lock
xchg
jae
loop
lret
sti
ds
xchg
xchg
addr16
dec
mov
mov
in
int
movsl
push
cmpsb
dec
jp
imul
jb
outsb
inc
icebp
sahf
mov
lret
fwait
dec
cli
mov
int3
lahf
mov
sahf
insl
or
repnz
lcall
je
mov
out
stos
outsb
mov
xchg
push
ficompl
xor
pop
ss
and
dec
int
loop
sub
je
push
insl
push
mov
and
cli
sub
into
in
outsb
push
ljmp
setge
mov
mov
pop
popa
jg
mov
xor
cmp
xchg
ret
int3
je
jbe
aaa
lods
loopne,pn
jle
push
cwtl
sahf
mov
es
iret
pop
out
jecxz
push
xor
pop
js
out
xlat
aaa
xlat
dec
xor
adc
push
push
ret
adc
in
xor
cmp
cmp
pop
scas
cmp
add
fninit
jnp
or
sahf
push
xchg
push
stos
and
das
cmp
pushf
mov
into
imul
dec
sbb
and
fnsave
fidivl
pusha
mov
fsubl
stos
icebp
xchg
xchg
xchg
cld
or
lahf
jne
leave
xor
dec
sub
rcrb
jmp
into
lock
jg
pop
cwtl
lahf
inc
cmp
ss
push
sbb
pushf
xor
or
fcom
daa
lcall
jmp
cmp
lahf
sbb
js
inc
cmp
sbb
jp
gs
invd
les
ret
insb
roll
jne
add
pusha
data16
int3
int
hlt
adc
push
out
pushf
jns
out
scas
in
or
adc
ss
adc
pop
mov
stos
mov
aas
arpl
mov
inc
jecxz
stos
gs
or
lahf
mov
fcmovu
adc
jle
rol
add
ficoms
cmc
or
inc
xor
inc
cmp
leave
ljmp
xchg
sub
sarl
sbb
push
call
jg
insl
cld
loop
mov
repz
xchg
and
loop
jl
xchg
cmpsl
out
xlat
lods
mov
dec
xor
fldz
dec
push
rolb
enter
and
jle
mov
mov
fcomps
cmp
jb
push
dec
sbb
pop
push
mov
xchg
scas
mov
je
inc
mov
push
repz
aas
add
rolb
lahf
insl
inc
inc
in
jb
xor
mull
adc
xchg
push
xchg
aaa
int
cmp
fimuls
add
mov
aad
mov
aaa
mov
and
mov
fstpt
jg
mov
cmp
mov
pop
mov
cmp
cvtdq2ps
subl
mov
aad
subl
xchg
xor
idivb
mov
imul
daa
sbb
push
push
xor
stos
je,pt
rcrl
hlt
add
mov
shrl
xchg
push
movsb
dec
push
cmc
mov
popa
xor
stc
loope
stos
gs
adc
clc
inc
push
dec
rcr
fmulp
sbb
jbe
inc
and
sbb
fcmovu
mov
das
cs
mov
xor
mov
outsb
subb
cmp
sub
and
out
popa
cmp
daa
imul
pop
pop
test
es
test
enter
sbb
les
mov
mov
in
jg
subb
sbb
pop
ficompl
rolb
and
lock
fdivs
bnd
mov
sub
hlt
icebp
rcll
jbe
ror
das
inc
stc
and
push
xor
mov
mov
jg
in
and
sbb
mov
push
mov
adc
cmp
imul
sbb
sub
push
out
pusha
sbb
inc
aad
adc
cs
dec
cld
imul
pop
mov
or
mov
lods
es
mov
lods
mov
mov
mov
dec
sbb
jge
imul
sub
push
notb
or
mov
ljmp
nop
cmp
mov
push
shll
test
pop
es
sub
sub
dec
xchg
arpl
cltd
jp
or
mov
mov
gs
or
jge
shll
jg
ds
cmovs
sahf
add
cld
or
adc
sub
mov
shr
testb
jbe
fcomip
stc
xchg
xlat
push
ret
fwait
insb
or
pop
mov
pusha
aas
test
xor
xchg
scas
jnp
icebp
cs
xchg
push
arpl
dec
jnp
ss
std
sbbl
lahf
pop
out
sti
dec
je
cmpsl
pop
lea
daa
jecxz
cmp
push
cmp
sub
add
pop
repz
mov
fisubs
adc
into
call
fimull
sbb
aad
aam
jmp
imul
pop
sub
xor
int
in
mov
xchg
faddl
xlat
jg
pop
push
outsb
cmp
or
push
sub
add
int3
dec
and
rcll
rorl
mov
outsl
xor
lock
add
sbb
lcall
ret
pop
inc
push
shrb
dec
push
stos
mov
sbb
out
and
xchg
mov
loope
xchg
inc
mov
xor
jns
mov
and
fwait
je
mov
in
sbb
gs
enter
jmp
xlat
cmp
cmc
fisubrs
cld
or
aas
mov
cmc
lods
sbb
addl
aad
push
dec
push
pop
and
cltd
pop
ja
repz
cmpsb
movb
mov
mov
data16
fucomi
inc
dec
add
push
xchg
in
mov
sub
out
push
addr16
call
dec
ds
sahf
cwtl
cmp
je
das
jno
pop
mov
movsl
subb
sahf
out
and
lds
leave
cltd
add
stc
test
mov
test
nop
mov
pop
xor
mov
test
loope
inc
pop
pop
lret
push
pushf
dec
adc
xlat
adc
mov
outsb
lds
loope
aam
mov
cld
rcll
inc
push
arpl
sar
cmp
lahf
ror
and
mov
cli
xor
cmp
xor
or
sti
xor
sahf
aas
test
xchg
xchg
push
testb
cmp
or
sbb
lea
cli
dec
inc
shrb
fidivs
jle
dec
rcl
enter
aaa
adc
dec
jmp
out
pop
jp
adc
and
cmp
movb
jns
inc
lret
push
dec
mov
cmp
adc
test
out
inc
xchg
inc
jae
cmp
inc
ret
sub
push
ret
movsl
inc
sub
mov
dec
shrl
pop
stos
lea
imul
xchg
sub
and
in
push
inc
push
test
jbe
enter
dec
test
les
inc
mov
jmp
lods
push
frstor
into
dec
jb
xor
ss
mov
and
xchg
lods
orl
rcrl
push
xor
inc
popl
cmp
aad
pop
fs
sti
mov
ljmp
add
je
or
sbb
xchg
jge
shll
shl
mov
sbb
mov
lods
xchg
scas
push
inc
xor
and
shld
sbb
shr
insb
loop
popa
push
pop
shlb
test
jmp
pop
mov
outsl
dec
cmp
push
fadds
adc
inc
gs
mov
pusha
rclb
icebp
add
xchg
rcrb
std
mov
push
dec
pushf
lcall
das
push
fsubrl
stos
xchg
cmp
mov
fldl
and
dec
dec
xchg
loope
aaa
mov
stc
pop
xchg
jo
ljmp
lret
imul
cltd
imulb
cwtl
mov
dec
daa
xchg
fdiv
inc
jl,pn
mov
pop
pop
pushf
mov
cli
mov
lahf
sub
scas
bound
std
gs
inc
inc
jmp
mov
pop
in
cmp
loope
daa
daa
xor
cmp
adc
ljmp
je
jae
mov
loop
ja
inc
jl
xchg
lahf
xchg
dec
lods
push
mov
push
inc
adc
push
cmp
jl
imul
inc
dec
sub
fxsave
stos
in
or
xor
hlt
and
loope
sbb
xchg
stos
adc
jb
aam
mov
sub
cmp
fisubrs
xchg
into
fidivs
and
inc
repz
fistps
cmp
out
movb
fldt
cmp
call
andl
xor
loope,pt
test
pop
add
cmpsl
push
cli
andb
fwait
cmp
out
pop
dec
xchg
mov
sub
pushf
leave
daa
cmp
das
movups
add
xchg
lahf
jno
scas
divl
push
rep
sti
adc
nop
ds
or
add
mov
xor
shl
into
cmp
mov
stc
xchg
add
mov
fstps
fmuls
pop
adc
add
rcll
lds
inc
mov
jb
test
ret
xor
adc
pop
lods
test
push
outsl
and
std
cld
sbb
lds
jb
dec
ljmp
xchg
add
jmp
mov
xchg
fbstp
daa
sbb
jnp
or
rcrb
mov
mov
imul
sbb
outsl
or
add
xor
lcall
jnp
adcl
movsl
push
or
out
mulb
cmp
shl
js
dec
cwtl
mov
popf
xchg
cld
push
je
add
and
lock
and
stc
mov
mov
clc
dec
mov
inc
xchg
inc
sub
scas
out
or
lcall
xor
dec
adc
mov
ljmp
addr16
jb
xchg
mov
in
xchg
inc
push
pop
lds
int
cmc
ljmp
xchg
int3
mov
mov
sub
pop
cmp
pop
fmull
out
sahf
cmc
jge
popw
sarl
test
imul
fcom
jg
nop
pop
inc
mov
outsb
jmp
mov
rorb
adc
xor
pop
fsts
stos
pushf
lods
insb
mov
mov
dec
xorl
lcall
or
push
lret
sub
xor
adc
lret
aas
adc
jnp
arpl
adc
xchg
mov
cli
lret
orl
test
mov
pusha
cmp
push
jmp
bound
mov
cmp
es
and
sbb
lock
push
ss
popl
stc
stos
jns
jnp
filds
data16
lret
fwait
imul
dec
add
jo
adcl
or
push
sub
call
and
movsl
sbb
testl
xchg
pop
divb
in
fbstp
add
fldcw
mov
adc
pop
jecxz
add
popa
lcall
out
pop
xchg
sub
fwait
shll
mov
add
das
leave
pop
mov
negl
es
movsb
mov
das
pop
push
insb
addr16
adc
xor
cmp
sahf
mov
rcrl
loopne
test
add
cmp
cmp
add
int
out
pop
pop
push
adc
imul
sub
or
mov
mov
push
and
mov
xchg
fistpll
testl
cs
cmp
shl
cmpsb
cmp
mov
inc
sti
loopne
push
stos
pushf
xor
inc
pop
sbb
or
sbb
imul
out
xchg
mov
jge
insb
int3
or
fs
loope
out
arpl
sbb
dec
sbb
stc
xchg
movsb
cwtl
adc
call
xor
fcomps
mov
pop
jmp
retw
add
sbb
jo
pop
mov
rcrb
lock
icebp
mov
les
in
fcompl
shll
out
roll
push
testl
inc
fmulp
jbe
imul
mov
mov
push
push
mov
inc
movsb
je
aaa
movsb
cmp
in
mov
sub
mov
fists
mov
out
out
mov
jge
add
repz
jle
mov
or
clc
sub
mov
cmpsl
test
mov
mov
mov
jns
sub
xchg
inc
repz
adc
jbe
jae
inc
cmpsl
clc
ror
or
jno
mov
cld
mov
sti
add
mov
xor
jbe
movsl
das
popf
sbb
enter
sbb
add
push
jecxz
es
adc
push
and
sbb
inc
loopne
aad
or
std
inc
aas
mov
subb
stc
imul
leave
xor
lret
lock
dec
lret
imul
je
xchg
cmp
pop
fcomps
add
insl
ficoml
scas
or
in
dec
or
jg
in
cmpsb
les
cli
sub
dec
push
shrb
jle
mov
test
ja
adc
movsl
dec
nop
mov
push
mov
popa
xor
adc
in
ds
push
or
jbe
mov
clc
cwtl
cltd
fucomip
mov
jno
inc
maxps
js
mov
jno
cld
cltd
jne
inc
bound
pop
sarb
aam
or
mov
divl
imul
cld
pop
jge
add
bound
push
cs
ret
subl
fdivs
pop
cmpsb
jecxz
fwait
pop
test
jbe
sub
rorl
xor
and
xchg
xlat
scas
sbb
push
iret
jge
or
mov
mov
or
mov
ss
pop
dec
jg
add
aad
push
sub
pop
bound
cmp
cmc
sub
das
or
scas
test
mov
int3
lahf
pop
dec
jbe
sti
enter
xchg
insl
mov
sub
add
add
mov
call
pop
cmpsl
dec
mov
mov
aad
roll
pop
rcll
lds
sub
xor
xchg
outsb
test
sub
outsb
sub
push
mov
scas
cld
xchg
and
inc
pushf
adc
pop
int3
insl
xorb
loope
cmpsl
movsb
shrb
repnz
jne
cli
dec
dec
insb
add
xchg
and
cmc
fldl
aas
push
lods
pusha
stc
xchg
jo
cmp
pop
ret
pop
ret
mov
jg
stc
and
jg
cs
or
aam
fildll
lret
mov
mov
push
cmpsl
pop
inc
js
push
or
ja
adc
cmp
inc
xchg
jge
fisttps
and
push
inc
lcall
or
iret
push
out
push
push
adc
shrb
xor
je
lock
xor
push
rcrl
sub
xor
arpl
mov
jae
xor
push
test
jl
ror
add
mov
std
int3
cmp
push
mov
test
dec
js
in
or
out
pushf
or
fwait
or
mov
push
push
push
push
ret
mov
call
in
in
pop
fsubrp
fwait
and
vpcomb
mov
or
and
outsb
mov
push
pop
leave
arpl
xchg
aam
out
sub
adc
roll
xchg
and
scas
mov
call
inc
mov
inc
lods
bound
rorb
pushf
pop
pop
popf
ret
sub
dec
sbb
inc
mov
or
dec
je
push
lcall
mov
ja
add
sub
stos
mov
sbbl
mov
lock
fists
add
ja
pop
out
fdiv
gs
inc
dec
jl
fstpl
xchg
aas
ret
add
nop
bound
int3
mov
ja
bound
ret
pop
cwtl
jae
mov
jae
stc
jp
pop
mov
dec
divl
jl
rolb
sub
mov
mov
dec
push
xchg
push
xchg
mov
test
or
sub
and
pop
fldt
cvtdq2ps
mov
dec
cld
cmp
jne
testl
lock
in
or
cs
mov
and
or
pop
pusha
mov
stc
inc
and
and
jle
xchg
pop
stc
xchg
xchg
add
jmp
sub
imul
daa
dec
popf
xor
mov
push
jno
out
xor
sub
filds
aam
pop
mov
ja
xchg
mov
inc
ret
mov
cmp
mov
sub
fildll
push
popf
sbb
xchg
xor
test
rcr
add
nop
mov
sbb
clc
inc
jge
fsubl
xchg
dec
sbb
shll
pop
mov
push
lds
pop
push
fsubrs
lcall
mov
clc
adc
inc
or
jns
dec
std
bound
add
jp
scas
lds
loop
add
inc
adc
pop
lret
add
mov
mov
add
jl
jmp
repz
inc
lret
xchg
and
in
or
push
push
xor
add
adc
addr16
mov
adc
cld
out
lds
push
lods
dec
and
cmp
jmp
adc
xlat
clc
in
push
cmpsl
push
cmpsl
add
sbb
scas
in
xor
mov
inc
inc
adc
fldenv
stc
enter
push
cwtl
dec
mov
bound
loope
dec
or
dec
subl
es
push
les
xchg
repz
dec
xchg
je
pop
push
mov
mov
in
sub
sarl
or
jo
scas
sbb
pop
mov
clc
sbb
mov
cld
inc
lea
add
lods
repz
fwait
cmpl
adc
xchg
shl
sbb
lods
xchg
fwait
sub
push
push
xor
jg
xor
xchg
adc
bound
xlat
sti
test
int
lock
sahf
es
comiss
mov
sti
mov
test
sub
pop
jmp
dec
sub
rcll
dec
outsl
js
jp
popa
popf
int
clc
pop
inc
pop
rorl
mov
clc
daa
pop
mov
popf
in
inc
shll
inc
or
jae
add
and
push
div
mov
bound
int3
sbb
int3
popa
popf
imul
push
ljmp
loopne
and
xchg
movsb
stc
sti
lcall
jne
iret
fiaddl
xor
jnp
or
dec
xorl
fisubs
repnz
insl
mov
lds
mov
mov
icebp
imul
mov
fidivrl
jl
cmpsl
in
adc
ss
xchg
mov
xchg
and
loope
mov
jge
and
and
jl
in
test
xor
fimull
mov
cmpsb
sbb
stos
mov
push
add
lahf
jb
mov
jl
pop
sbb
data16
nop
loope
adc
rcrl
movsl
mov
jg
push
adc
fcompl
int
test
sti
mov
jl
add
dec
dec
cmc
cmp
aam
jle
loop
xchg
xchg
jge
jb
clc
arpl
cmp
clc
out
cmp
dec
xor
rclb
jmp
push
lock
stos
sub
add
mov
les
inc
andb
cwtl
hlt
cmp
cmp
jne
cs
inc
pop
and
repz
sahf
out
das
sti
jmp
sbb
cwtl
clc
pop
mov
imul
inc
int
pop
ret
addr16
daa
cmp
adc
sub
push
mov
jg
cs
adc
lahf
mov
xchg
notl
cmp
sar
lret
hlt
xor
xchg
adc
sub
mov
push
and
jb
fisubs
or
adc
pushf
mov
popa
shlb
iret
in
push
mov
push
ret
mull
or
cmpsl
in
push
and
or
int
sub
xchg
sub
xor
int
mov
inc
xor
ret
jl
mov
aam
pop
pop
imul
xor
fwait
jg
out
push
jne
push
push
lahf
fsubrs
jnp
xchg
inc
loopne
sbb
stos
inc
cwtl
mov
aas
cwtl
js
int3
stos
adc
pop
out
lods
les
adc
mov
ds
mov
and
scas
data16
pop
mov
stc
jmp
rolb
lahf
pop
dec
addr16
test
mov
lods
fnstenv
or
sbb
push
or
cld
sbb
js
fs
into
mov
mov
push
loop
js
repnz
jg
and
hlt
testl
cmpsb
lock
stos
pop
mov
dec
push
pop
mov
jbe
cld
jns
pop
push
hlt
lret
mov
cmpsb
hlt
loop
mov
sbb
jmp
pusha
xor
push
shlb
push
inc
stos
fmul
out
cwtl
in
push
fdivs
rolb
mov
mov
in
jmp
adc
push
iret
xor
sbb
xchg
xchg
ja
mov
jge
dec
int3
pushf
lock
xchg
pop
ret
iret
mov
or
out
jae
inc
cmp
pushf
push
jnp
inc
setge
push
xor
imul
mov
scas
cwtl
lcall
movsb
lret
sarb
sub
insb
insb
pop
xchg
enter
jge
mov
bound
cmp
sub
pop
imul
and
xchg
push
lret
jge
faddl
jo
jge
addr16
dec
pop
mov
inc
stos
and
lods
xor
imul
cmp
bound
mov
cmpsb
or
mov
out
out
ljmp
loop
adc
mov
and
seta
or
pop
add
jo
popf
xor
icebp
jne
mov
stc
mov
inc
push
shll
xchg
mov
jns
or
mov
and
xor
orb
pop
mulb
xchg
adc
inc
scas
hlt
ret
int3
imul
jmp
pop
cmp
imul
inc
jecxz
nop
stc
pop
cltd
bound
iret
jb
in
aas
movsb
dec
pop
in
jb
xchg
iret
push
xor
fbld
imul
xor
mov
jp
bound
xchg
push
dec
imul
mov
repz
scas
xor
push
and
inc
fcompl
add
add
mov
nop
dec
add
pop
in
push
and
out
divb
insb
push
cmp
popa
shll
pop
xchg
insl
filds
shrb
or
jl
xchg
and
shll
js
stc
out
out
rcl
mov
cmp
mov
xchg
stc
adcb
pop
sbb
mov
lds
and
je
addb
in
mov
xor
mov
adc
rorl
push
sub
add
sub
jmp
push
mov
sub
sub
mov
sbb
inc
push
imul
sub
jo
push
jne
not
add
js
adc
mov
pop
sbb
rorl
insl
decl
mov
into
jle
cmc
jb
rclb
into
mov
cmc
stos
xor
aas
rorb
fidivrl
aas
in
dec
inc
ss
and
rcrb
sahf
jb
sub
test
xchg
xor
pusha
sub
cmp
push
push
js
sbb
hlt
ret
push
rcrl
jb
or
xor
xor
out
shrl
scas
ficompl
repz
loop
test
std
xor
mov
and
test
jno
sbb
mov
scas
mull
cmpsl
mov
pusha
sbbl
movsb
stos
jmp
adc
pop
jmp
or
xor
mov
push
iret
std
dec
pop
pop
aad
push
pop
jecxz
or
ds
push
jmp
out
mov
das
out
cli
ficoms
movsb
jae
xor
lea
mov
enter
xlat
js
sahf
mov
jg
mov
mov
inc
sbb
pop
sbb
xor
sub
mov
mov
hlt
mov
arpl
icebp
mov
pop
pop
sbb
dec
test
or
popa
inc
or
or
add
or
or
arpl
sbb
lret
push
mov
add
jge
mov
cli
in
sub
sub
pop
sbb
jecxz
inc
xor
imul
pop
jp
ja
sub
cmpsb
dec
nop
lcall
mov
jmp
es
imul
sahf
cs
jne
rorb
mov
bound
les
mov
sub
mov
mov
aam
cltd
sbb
mov
jge
enter
push
fcoml
mov
addr16
rorl
bound
data16
cmp
jecxz
jl
add
xor
call
out
mov
imul
sbb
xor
test
add
popf
jmp
adc
dec
ds
jge
xor
inc
sbbl
push
adc
hlt
jl
mov
cmpsl
hlt
or
mov
mov
addb
ss
ret
pop
ljmp
pop
sti
sub
leave
aas
dec
xchg
xchg
mov
jle
dec
push
or
jne
jo
cmp
lds
xchg
insl
cwtl
xorb
call
push
inc
jl
mov
rorb
mov
imul
stos
push
add
enter
jle
cmp
mov
pusha
iret
fucomi
or
pop
imulb
ds
xchg
or
out
pop
mov
or
mov
push
mov
test
push
outsl
int3
das
dec
sbb
insb
or
adc
jecxz
mov
mov
fsts
lcall
or
bound
and
loopne
lods
push
das
cltd
cwtl
xor
jns
and
xchg
mov
add
add
or
outsl
sar
jns
mov
mov
sub
js
dec
in
cmp
repz
jge
fwait
push
xor
or
cwtl
in
jno
je
sub
leave
cmp
mov
xchg
adc
cmp
jle
inc
rolb
add
in
stos
dec
ja
nop
xor
in
jne
sti
dec
cli
mov
add
clc
bound
cmp
pop
or
gs
pusha
loop
push
dec
aam
cltd
imul
outsl
fbld
mov
push
fcmovu
mov
jne
add
andb
jle
ret
add
gs
inc
ret
ficoml
xor
mov
fildl
ret
sahf
push
jne
sbbl
mov
scas
xchg
fsubs
mov
jns
sbb
insb
shrb
mov
mov
xor
rcll
mov
outsl
fs
pop
xchg
dec
pop
bound
movsl
xchg
dec
out
mov
or
mov
mov
jle
in
popf
push
jge
push
testl
mov
loop
xor
cmpsb
dec
lods
cmp
or
sub
push
stos
lcall
daa
adc
xor
std
ret
mov
dec
cwtl
pop
shl
mov
mov
test
mov
pop
mov
ja
sub
int
sub
jae
ljmp
ret
dec
imul
jle
jge
imul
mov
das
movsl
cmp
sbb
jp
cmp
cmp
ret
pop
dec
inc
mov
xlat
mov
xchg
leave
push
jbe
out
dec
dec
cmp
xchg
pop
fmull
inc
pop
pop
je
jge
jp
rolb
adcl
adc
or
sbb
add
mov
pop
es
loopne
push
push
pop
or
jno
jecxz
in
shrl
jge
mov
xor
sub
lods
jmp
cltd
mov
js
add
andl
mov
or
into
mov
test
roll
mov
dec
cmp
jle
test
daa
int3
cmp
push
cmpl
push
pop
outsb
dec
xchg
scas
nop
lods
ss
xchg
enter
pop
sbb
sbb
add
cld
aad
push
insb
jge
fs
adc
cmpsb
mov
jle
mov
sub
mov
mov
cmp
adc
std
inc
movsl
jge
call
xchg
adc
fiadds
in
push
adc
jecxz
lret
or
adc
aas
sbb
shlb
dec
outsb
ficompl
aas
std
std
mov
frstor
mov
ljmp
es
sbb
mov
iret
lock
xor
adc
mov
fcompp
icebp
jns
jecxz
adcb
inc
xchg
cmp
sahf
and
jns
ds
dec
cli
ror
sbb
xchg
cmp
das
inc
fmuls
inc
test
xor
inc
and
insl
in
mov
dec
push
mov
ds
cmc
dec
lea
inc
daa
cmpsl
icebp
rdpmc
or
jmp
pop
push
lcall
push
ficoml
imul
xor
shll
ss
mov
repz
movsb
js
jb
imul
lret
int
pushf
mov
scas
dec
adc
mov
mov
xor
mov
push
adc
jns
scas
fscale
push
add
inc
mov
ffreep
sub
push
xchg
jnp
mov
cmp
outsl
mov
fdivr
je
cmpsl
dec
jns
int3
cmp
dec
cmp
push
jne
mov
inc
or
mov
mov
dec
stc
ficoml
std
fadds
int3
cmc
mov
xor
jmp
jle
jmp
movsb
push
shrb
or
push
or
lea
std
bound
test
test
lock
fiaddl
mov
scas
or
test
lea
xorl
pop
mov
ficoms
mov
push
bound
jbe
addr16
dec
dec
or
pop
cwtl
mov
pop
add
xor
movsl
stos
dec
xchg
loopne
mov
inc
push
mov
cwtl
pop
imul
inc
pop
pop
sub
notb
hlt
pushl
cld
insl
fldenv
pop
xor
aas
xchg
and
push
push
xchg
dec
mov
push
inc
les
mov
fdivs
dec
and
dec
lahf
sub
loop
mov
nopl
push
jle
xlat
mov
out
dec
sbb
pop
out
loopne
in
andl
mov
mov
sbb
or
test
daa
aaa
xchg
fiadds
push
push
xchg
pop
sub
in
push
daa
jne
pop
xchg
in
arpl
outsb
fst
ret
lock
xor
fs
or
mov
dec
movsb
and
inc
adc
cmp
cmp
cmpb
xchg
dec
pop
xchg
mov
aas
pop
jp
push
int
bound
addr16
push
inc
pusha
out
pop
adc
cmp
popf
and
mov
push
ja
sub
lret
sub
test
cmp
inc
inc
int
mov
pop
or
jne
jmp
dec
fdivs
fsubrl
dec
fistpll
dec
cmpsb
jbe
push
sub
shr
xorl
adc
in
sbb
pop
sub
hlt
lcall
inc
int
mov
inc
cmpl
testb
fldcw
rcll
mov
outsb
js
sub
xor
jmp
dec
pop
cwtl
roll
push
and
sub
fnstenv
mov
mov
or
cs
dec
cmp
pop
ret
dec
roll
sbb
xor
jl
gs
add
jae
sub
cltd
xchg
pop
stc
fcoms
loope
and
adc
mov
incb
insb
repz
jns
mov
cld
pop
sub
push
imul
pushf
mov
repz
insb
mov
or
jg
mov
mov
fisttpl
js
xchg
jo
xchg
mov
dec
insl
stc
cwtl
jl
and
push
push
jmp
and
dec
lret
or
lods
xchg
add
adc
and
xchg
and
lock
push
pop
xchg
mov
or
sbb
sbb
mov
xchg
dec
loopne
dec
dec
test
aad
sub
sub
push
cs
mov
cs
or
pop
inc
push
mov
add
dec
inc
xchg
ror
fstpt
or
fistps
mov
add
ret
jo
jbe
iret
icebp
jp,pt
in
ds
cmpsb
lods
xlat
ret
jge
in
idivl
cli
xchg
in
xor
movsl
stc
mov
test
mov
loope
push
aaa
and
fwait
pop
or
popa
fs
mov
pop
fwait
lods
cmpsb
mov
inc
or
pop
sbb
dec
and
jns
ret
jo
xor
sub
int3
jae
cmp
push
lahf
mov
or
push
inc
xchg
lea
or
ret
inc
in
js
std
mov
lds
ror
sbb
cli
in
inc
dec
bound
dec
jle
mov
lret
xor
push
pop
and
stos
lds
fdivrs
and
sub
add
jns
xchg
int3
in
sub
inc
fdivs
pop
adc
mov
inc
sbb
jp
mov
mov
fnsave
call
mov
in
hlt
or
jnp
ds
inc
in
leave
inc
in
push
and
push
cltd
push
push
pop
mov
push
data16
iret
movsb
push
dec
cld
cwtl
mov
cmpsb
decl
ret
fwait
push
jmp
xor
scas
push
insl
test
mov
lds
sub
leave
dec
push
and
mov
xor
in
idivb
jmp
or
stos
inc
jae
xchg
jge
call
add
mov
test
push
xchg
mov
rcl
fistpll
daa
enter
jo
adc
mov
ret
fsubrp
sahf
mov
test
xchg
filds
movsb
test
clc
inc
mov
roll
jg
or
push
mov
sbb
inc
fst
les
mov
sub
icebp
xchg
lods
push
mov
jp
push
into
xchg
fidivl
rcll
ds
test
push
movsl
or
ret
and
jmp
mov
and
test
dec
and
xor
movsb
jae
xchg
loop
ljmp
mull
mov
pop
nop
rcr
mov
push
inc
stos
push
les
jge
mov
pop
inc
xor
mov
xor
js
std
jb
shll
cmp
pminsw
orb
sub
pop
insl
push
shll
cli
aas
scas
nop
cli
jmp
ficoms
lods
xchg
rclb
daa
cmc
jnp
pop
adc
int
dec
lods
adc
outsb
mov
fsubr
push
lret
notl
test
fcoms
jnp
test
or
and
sbb
push
aam
notb
aad
pop
enter
js
sub
mov
mov
ret
xchg
lahf
jbe
pop
loope
js
das
clc
icebp
stc
inc
inc
dec
and
inc
sbb
cwtl
das
xor
test
sbb
add
fildl
dec
jne
or
repz
inc
jns
outsb
cli
or
or
ja
dec
test
andl
add
cmp
sub
jp
pop
pop
outsl
lods
inc
addr16
ret
sbb
setl
mov
cmp
fwait
sbb
sbb
mov
jle
aas
push
aad
sub
and
mov
movsb
lock
xor
inc
mov
mov
push
xor
xor
pusha
das
enter
pop
fsubrs
jae
outsb
sti
and
int
aad
insb
imul
dec
out
sbb
ds
push
movsb
cmp
inc
sbb
adc
cli
push
jecxz
mov
dec
aaa
sub
xchg
cmp
mov
mov
in
mov
or
jcxz
int3
cli
fisubrl
pop
clc
xor
mov
add
mov
dec
insb
pop
push
cmp
add
cmc
mov
jmp
xor
and
mov
xchg
add
mov
nop
and
andnps
in
add
cld
rcr
fldenv
addr16
rorl
mov
movsl
mov
dec
dec
or
mov
adc
nopl
inc
adc
in
fstps
push
mov
mov
clc
mov
repnz
sub
aad
shlb
sub
das
mov
dec
xchg
cwtl
adc
xchg
mov
mov
out
fimuls
mov
adc
pop
jnp
mov
dec
inc
add
mov
adc
in
shrb
mov
dec
and
lret
jno
sbb
stos
loopne
pop
push
cmp
mov
sub
int3
jnp
lahf
xchg
scas
aaa
mov
mov
or
jge
pop
incl
push
imul
sbb
call
xrelease
or
and
jns
loopne
out
loop
je
out
jns
inc
dec
sbb
pop
and
ss
sub
adc
cmpsl
pop
lods
sub
fmull
mov
mov
insl
mov
cmpsb
cmovae
inc
push
test
xlat
fsincos
clc
decl
mov
mov
stos
mov
jne
loope
pushf
jge
out
pop
pop
cs
scas
cmp
dec
cmc
sti
push
sub
sarl
lock
aas
mov
data16
pop
sbb
lds
outsb
jb
fcmovnbe
icebp
adc
xchg
inc
sqrtps
jecxz
cli
mov
pusha
push
in
pop
adc
add
mov
fidivrs
daa
aad
in
cmp
ret
push
adc
add
ljmp
and
shrb
hlt
mov
inc
mov
push
int3
push
pslld
and
lahf
jbe
hlt
scas
adc
imul
cmc
dec
dec
pusha
xchg
ret
outsb
jne
shll
or
dec
xlat
movsb
pushf
xchg
movsl
inc
fisttpll
loop
push
fsubrs
xchg
out
mov
call
pop
jecxz
cli
pop
xchg
jbe
mov
xor
push
popf
mov
repnz
cmpsb
add
push
mov
lds
adc
imul
sbb
inc
mov
jno
ja
jo
dec
aam
je
add
jnp
bound
lahf
test
sub
pop
xor
cli
jb
sbb
or
jecxz
push
push
sub
outsl
mov
nop
pop
scas
mul
or
sub
call
testl
mov
addb
lea
jns
hlt
insb
mov
test
pop
stos
shrb
push
mov
testb
in
sbb
jg
and
ljmp
inc
test
add
pop
shrl
je
cmpl
fildll
push
pop
add
shrl
push
mov
dec
stos
in
mov
xchg
cmp
out
cli
movsb
mov
add
pop
ss
leave
dec
std
jno
outsb
sbb
idivl
int
cmp
bound
add
push
mov
aaa
ljmp
lock
inc
shrb
sbbl
lcall
inc
dec
lea
jg
in
pop
je
pop
insl
fucomp
mov
xor
out
and
adc
lock
ds
stos
cmpb
pop
push
sbb
pop
mov
in
jecxz
sub
mov
in
clc
loopne
adc
popa
mov
xchg
mov
icebp
mov
inc
lret
popa
xchg
popf
dec
cmp
mov
cmpsb
outsb
push
out
aam
mov
rolb
jbe
push
inc
call
mov
jae
or
imul
adc
std
dec
lods
sub
outsb
dec
add
xor
fwait
xchg
pop
cmp
addr16
out
aaa
jae
aad
pop
pop
rcr
jecxz
test
call
mov
push
xor
mov
xor
and
xchg
mov
pop
rol
pop
aas
xor
and
jae
and
lods
xchg
rorl
call
cmp
push
dec
imul
pop
icebp
adc
test
mov
sub
movsl
and
ss
outsl
dec
cmp
gs
mov
repz
cmc
daa
sahf
or
lret
mov
jno
fcomip
in
add
xchg
imull
mov
mov
enter
push
jno
in
in
mov
stc
push
stos
gs
sbb
lods
dec
mov
lahf
insb
js
out
cmp
mulb
inc
mov
ja
pop
or
or
sub
or
lds
rcrl
stc
mov
push
sahf
arpl
dec
icebp
jp
inc
fidivs
xor
mov
or
jle
pop
je
ret
loope
add
mov
add
int3
add
inc
mov
adc
dec
hlt
xor
push
add
loopne
jl
push
push
jns
inc
mov
mov
xor
fs
xor
or
dec
xor
jl
inc
insb
mov
ss
mov
sub
mov
jnp
jmp
jecxz
jnp
movsl
shll
scas
or
fs
loope
roll
movb
fwait
rol
and
or
mov
mov
jg
cld
inc
mov
mov
and
ja
or
or
lock
jp
je
lods
movl
fsts
nop
je
jnp
in
sbb
dec
or
addb
adc
into
push
test
mov
sbb
push
sahf
xor
in
mov
ds
mov
jns
xchg
ffreep
addr16
jno
mov
sbb
jae
out
push
dec
add
repz
test
arpl
lods
jp
int3
fwait
adcb
notb
fwait
std
jbe
jl
lahf
call
sub
clc
jmp
bound
jl
clc
pop
repz
cwtl
mov
mov
ret
ljmp
jns
clc
xchg
scas
nop
jg
rcrl
ror
rclb
scas
or
mov
imul
pop
sub
lods
pop
push
aad
imul
xchg
adc
pushf
add
shrl
cwtl
and
inc
shll
or
arpl
or
adc
sub
cmpsl
pop
insl
cli
lret
push
adc
out
pop
xor
insl
loop
pop
call
repnz
iret
mov
in
adc
or
push
movsb
rcrb
testb
mov
aas
mov
sub
mov
scas
and
pop
sub
arpl
pop
loope
cli
and
cltd
dec
dec
bound
nop
pop
pop
and
xchg
cmp
cli
jb,pn
inc
mov
sbb
insb
call
dec
xor
cmp
cmpl
sbb
cmovno
adc
mov
ss
insl
xchg
lret
mov
stos
mov
mov
rcll
stos
cmp
daa
imul
cmp
xor
xlat
sub
pusha
pop
sub
push
jge
push
and
repnz
jae
add
arpl
and
push
jae
push
mov
stos
imul
sahf
inc
arpl
pop
xchg
inc
sti
jge
xchg
fs
add
nop
jmp
js
xor
mov
cmp
or
xor
inc
inc
jne
arpl
fcmovne
in
jmp
imul
icebp
push
jnp
adc
fisttpll
pop
aam
ja
inc
add
out
jno
lea
xchg
das
mov
icebp
aam
adc
cwtl
addr16
inc
in
or
test
jbe
js
mov
push
imul
push
data16
mov
add
jns
not
daa
jne
jmp
xor
pop
fistpll
in
mov
sub
add
mov
insl
and
push
inc
sbb
sub
sbb
into
lock
xchg
mov
push
daa
pop
mov
scas
xor
push
or
jle
pusha
fcoms
inc
fnstcw
loopne
cmp
cltd
outsb
and
push
insb
cmp
lahf
fisttpl
jns
scas
inc
sbb
lock
in
adc
xchg
jge
mov
inc
or
push
aam
daa
or
jae
aaa
inc
add
push
jbe
jg
dec
dec
outsl
outsl
inc
inc
dec
inc
lret
icebp
lcall
outsb
outsb
or
dec
or
push
imul
adc
mov
arpl
mov
iret
lahf
mov
mov
push
xchg
cmp
shlb
or
and
mov
inc
add
mov
lock
inc
scas
dec
lret
mov
jg
lods
imul
push
pop
rolb
cmpsb
in
jecxz
movswl
ret
add
mov
pop
fistpll
jmp
test
iret
int
mov
sbb
cs
scas
lods
sub
test
push
jg
cmp
test
arpl
mov
jp
add
aam
mov
in
and
or
std
jmp
gs
mov
jo
in
in
orl
jmp
mov
mov
push
or
out
std
cmp
and
sub
aad
adc
dec
sbb
mov
scas
jns
sub
js
xor
mov
sub
add
imull
loop
movsb
inc
mov
mov
rorl
out
xchg
loopne
and
or
in
pop
xchg
icebp
sbb
popf
test
dec
rorl
fisttpl
fisubl
jae
cmpsl
movsl
jbe
mov
inc
or
repz
mov
out
aaa
and
cmpsl
inc
push
jg
sbbl
xor
ds
cmpsb
mov
lods
leave
dec
sub
dec
mov
shrb
pop
jle
jg
xchg
sahf
jae
les
leave
in
push
xchg
lock
in
ret
and
sahf
fsts
pop
es
sbb
lock
adc
push
mov
dec
mov
pop
sbb
mov
scas
pop
inc
xor
push
insb
add
jbe
in
and
lcall
xchg
hlt
stos
test
and
and
inc
push
nop
inc
shll
xchg
ja
push
pop
int
mov
push
test
mov
std
shlb
stos
adc
inc
jle
mov
jl
and
jns
push
mov
xor
add
rorl
sub
out
add
scas
movsb
pop
mov
cmc
andb
je
aad
fs
stos
mov
sbb
push
pop
mov
jl
push
cmp
bound
cmp
aam
sub
data16
sub
mov
sbb
iret
jno
addr16
mov
push
sub
data16
scas
jg
icebp
shlb
out
ffree
jecxz
fwait
adc
sbb
nop
adc
fsubl
outsb
sub
cs
lahf
out
and
inc
push
or
pop
xchg
jp
mov
sub
aam
add
addb
popf
jecxz
ljmp
xor
nop
fcmovnb
icebp
and
cmc
dec
xchg
jg
enter
xchg
push
aaa
xlat
jle
insb
fidivrs
cltd
outsl
mov
jg
inc
sub
gs
and
add
xchg
pop
xor
or
jae
sbb
popa
jne
add
dec
xchg
loope
out
push
pop
sbbl
mov
scas
nop
push
cmp
xchg
fcmovb
jmp
fwait
scas
icebp
dec
sub
mov
pop
test
lea
push
jl
mov
mov
int
fdivp
mov
and
cmc
int
push
push
ds
push
xchg
test
add
test
sbb
pop
rcrl
xchg
es
pop
push
out
xchg
aad
cld
shr
mov
outsb
add
cli
inc
daa
mov
call
cmp
mov
nop
repnz
xor
insb
mov
movsl
cmpsb
xchg
shlb
push
dec
rcl
cmp
in
test
xor
hlt
jo
cmp
pop
insb
mov
lret
lods
dec
fisubrl
bound
negl
inc
xor
sub
or
cmpsl
push
addr16
push
mov
mov
sub
mov
cmp
push
xor
sub
sbb
jecxz
das
cld
lahf
aad
mov
lds
or
dec
daa
pop
xor
jo
in
sub
jmp
in
loope
mov
stos
rcrl
sbb
dec
inc
push
rcrl
jge
xor
ror
and
cmp
rol
addr16
and
sbb
movsb
enter
dec
cmc
push
sarb
dec
repz
int
and
pop
mov
xor
ror
mov
inc
lods
in
cmpl
jns
test
repnz
repz
clc
mov
test
cmp
push
adc
xor
mov
fstl
in
rorb
push
in
sub
inc
daa
jnp
pop
fists
imull
leave
push
test
push
shr
pop
cwtl
xor
int3
repz
vcvtdq2ps
mov
clc
pop
in
ret
lret
lock
push
popa
outsb
test
pop
ret
repz
adc
fscale
aad
or
imul
push
pop
jmp
lcall
lret
inc
shr
push
ljmp
js
incb
aaa
mov
adcl
mov
cmp
shlb
into
fs
insb
imul
and
inc
pop
call
daa
dec
add
xchg
cltd
mov
and
sbb
lods
inc
jnp
xor
cwtl
aad
call
lds
fstpl
adcb
mov
lods
dec
mov
loop
jecxz
out
sub
fistps
push
call
sbb
scas
loope
cli
push
mov
adc
sti
mov
sarl
bound
popf
push
cs
enter
mov
xchg
lcall
adc
fnclex
out
call
aas
out
or
and
cwtl
test
cwtl
mov
mov
adc
iret
arpl
lret
push
jno
loope
insb
mov
pop
nop
jns
scas
movsl
or
sub
push
mov
les
aad
gs
jle
jns
aas
add
subb
sbb
fsubl
out
outsl
lahf
mov
lret
movsb
movsb
pop
into
push
add
call
push
call
dec
adc
adc
jecxz
adc
aam
push
negb
mov
or
push
orb
mov
mov
loopne
xor
mov
push
cmpsl
std
out
add
fstpl
leave
faddp
cmp
cmp
lds
popf
clc
add
rcrb
aad
cltd
xchg
dec
lods
ljmp
jbe
mov
add
data16
xchg
or
xchg
adc
pop
push
loope
fdivs
mov
pop
inc
push
in
ds
pop
mov
mov
cmp
setns
jne
inc
jnp
xchg
mov
js
cmpsb
cmp
mov
sbb
mov
dec
jnp
jg
fadds
jge
add
in
arpl
add
cmc
in
fimull
les
jge
sbb
test
loope
movsl
scas
sbb
dec
adc
addl
fsubr
mov
jle
xchg
aam
shr
divb
mov
lds
lods
fdivrs
add
push
mov
leave
fsubrl
xlat
and
inc
std
aas
imul
loop
fwait
jmp
fisubl
dec
lock
or
div
into
ds
xlat
xor
xor
inc
adc
test
dec
mov
jbe
or
add
xchg
pop
add
or
mov
pop
daa
mov
xchg
sub
cmpsl
push
ret
sub
xor
mov
cmpsl
and
mov
je
mov
cld
lea
loope
add
mov
das
and
sbb
pushf
inc
into
push
shll
mov
jle
inc
or
insb
movaps
jo
jae
pop
lock
mov
stc
test
pop
inc
jg
and
cld
push
shrl
scas
fistpll
aaa
add
mov
bound
push
fildll
lea
lret
pop
dec
add
shrb
xchg
cltd
push
and
leave
aaa
add
lea
fcmove
adcl
cmp
out
inc
fwait
popf
cmp
aas
lods
imul
pop
aas
popf
icebp
imul
push
xchg
das
loope
sub
mov
test
insl
sub
sub
adc
adc
popa
rcr
mov
ss
sub
in
xor
cmp
in
jl
insb
dec
es
xchg
leave
mov
fists
inc
lock
and
add
fwait
push
and
stos
loop
and
or
ror
mov
xor
pusha
testb
add
jmp
out
pushf
jecxz
movsb
je
lret
bound
xchg
dec
fistpl
cmp
or
jle
imul
das
lods
add
and
fisubrs
push
iret
push
testl
ja
jg
jle
icebp
arpl
popa
arpl
adc
adc
mov
mov
adc
fcompl
xchg
cmp
xor
in
xor
adc
fcmovnbe
inc
and
stc
adcb
repz
dec
imull
or
fidivl
arpl
movsl
jle
cmp
cwtl
sbb
inc
scas
les
push
push
mov
mov
mov
mov
movsb
dec
popa
in
ljmp
xor
mov
out
pop
pop
inc
sarl
ret
fsub
ss
inc
or
pop
loope
mov
inc
xor
das
jo
add
sarl
imul
cmpsb
mov
outsl
inc
sbb
in
sar
mov
movsl
add
sub
loop
nop
or
adc
xor
sahf
jmp
mov
dec
xor
fs
push
out
mov
imul
sahf
inc
jns
out
mov
dec
mov
orl
test
mov
adc
adc
and
mov
inc
add
filds
sbb
mov
mov
out
pop
cltd
push
out
jmp
adcb
ds
js
mov
xor
cmp
mov
xchg
dec
mov
faddl
les
dec
push
add
or
mov
push
out
adc
sbb
sbb
icebp
cmp
lret
gs
pop
movsb
pop
jecxz
inc
xchg
pop
sti
lods
std
aad
cmp
pmulhuw
int3
hlt
int3
outsb
push
mov
xchg
push
ret
or
cmp
sbb
insl
jge
ss
test
xchg
add
jmp
orb
dec
push
ja
mov
ja
xchg
scas
out
outsb
sbb
xchg
jne
gs
cltd
xorb
sbb
sbb
fstpt
dec
xor
hlt
xor
rorl
push
testl
pop
sar
cmp
dec
dec
jae
gs
and
loope
out
daa
pop
add
xchg
sbb
loop
xor
cmp
jne
dec
sbb
fs
stos
pop
add
xchg
xchg
stos
sbb
loopne
aam
out
stos
in
mov
iret
rcrb
pushf
and
jecxz
mov
nop
aaa
scas
loope
insb
fwait
or
outsb
out
jle
fxch
pop
mulb
jg
sahf
loopne
popf
cli
shrb
mov
scas
loope
arpl
lods
push
movsb
and
cmp
sbb
jmp
or
or
sti
inc
je
jno
cltd
popf
or
push
inc
dec
jl
xchg
jno
es
xor
lret
inc
push
sbb
pop
jle
pusha
mov
pop
mov
push
pop
test
inc
xor
sbb
push
inc
mov
cs
add
leave
popf
adc
mov
cmc
lcall
xchg
cli
push
in
stc
push
test
sbb
and
outsl
and
adc
push
lea
leave
mov
pop
mov
sbb
imull
sbb
jne
mov
scas
test
xchg
jge
test
xchg
cmp
push
gs
mov
ds
cmpsl
popa
fstpl
mov
mov
loope
sub
cmp
nop
inc
dec
lea
push
dec
xchg
test
cmp
imul
aad
pop
or
push
jp
rcrl
aaa
shrl
cwtl
sub
sub
jnp
xor
sbbl
mov
lock
inc
insl
add
testl
in
inc
js
xlat
mov
add
or
sub
dec
loopne
mov
push
movsl
cs
dec
dec
adc
movsl
push
pop
push
fs
pop
inc
sub
stos
out
lods
jae
mov
cmc
mov
fisubrs
call
xchg
pop
in
inc
lret
push
push
inc
repz
mov
xor
xor
cmpsl
in
push
mov
xchg
pop
push
ds
pop
cmp
fwait
dec
jnp
mov
mov
or
cmp
jl
ret
std
push
bound
and
jbe
jnp
lcall
xchg
mov
out
ljmp
jle
cmp
inc
mov
or
pop
data16
test
insl
pop
rorl
lds
out
pushl
add
dec
fsubrl
mov
xlat
out
push
hlt
push
jle
jnp
jbe
cmpsb
imull
inc
pop
into
add
cltd
inc
pop
sbb
xor
out
push
jp
not
jne
inc
lret
nop
mov
inc
arpl
mov
xorb
sub
lock
stos
lds
roll
outsl
mov
test
cltd
dec
mov
out
imul
fwait
pop
out
push
in
xor
push
push
in
gs
in
mov
out
add
lods
dec
sbb
jecxz
fcmovb
pop
fisttpl
sub
ja
les
fwait
inc
push
outsl
arpl
cmc
mov
inc
push
movsl
les
testb
fwait
xchg
mov
pop
push
pop
pop
dec
add
push
ffreep
cmp
dec
xchg
test
in
fisubs
mov
dec
pop
adc
js
das
adc
daa
fnstenv
int3
push
ja
sar
pop
pop
xchg
stos
lcall
hlt
lahf
loop
les
daa
mov
push
popf
arpl
jge
xlat
fs
dec
mov
andb
insb
pop
cltd
loop
dec
mov
mov
arpl
jecxz
insl
loopne
jp
cli
test
movsl
pop
mov
std
push
jecxz
les
or
lcall
test
gs
push
adc
jbe
cld
sub
cmpsl
jl
push
data16
xchg
push
aad
rorl
mov
gs
cmp
xlat
out
or
xchg
pop
shll
cmp
dec
mov
cmp
add
jo
ds
sbb
mov
xchg
jne
push
sti
pop
je
jp,pn
adc
xor
sahf
dec
int3
fidivl
fsts
push
outsl
jmp
mov
and
or
loopne
mov
cs
repz
sub
add
iret
fs
jbe
in
push
iret
lcall
push
cmp
mov
loopne
aas
sbb
in
in
je
adc
push
data16
je
pop
clc
add
aas
sbb
stos
lahf
dec
popa
addb
je
mov
jb
cld
mov
mov
inc
out
xchg
xchg
movsb
hlt
mov
cwtl
mov
mov
sub
out
aad
or
lock
es
xor
imull
sbb
xor
mov
je
cltd
cld
xchg
push
insb
cli
jg
pop
push
fsubl
xorl
iret
mov
xchg
mov
dec
cltd
inc
dec
push
test
push
leave
sbbb
clc
push
nop
out
add
gs
adc
icebp
push
test
sti
pop
cli
sub
mov
repnz
in
pop
lods
sub
leave
pop
roll
mov
rcll
inc
idiv
into
pop
je
inc
pop
adc
dec
mov
sub
cmp
sarb
outsl
in
lds
adc
testb
das
jmp
push
mov
int
adc
nop
push
iret
ss
push
pop
test
ljmp
pop
mov
push
add
int
sbb
enter
in
test
sbb
xchg
cmp
out
roll
sub
pop
arpl
or
stos
in
push
mov
cmp
jge
jns
lods
add
es
jno
mov
std
mov
stos
mov
jae
jle
addr16
dec
xchg
inc
xchg
add
repz
fsts
pop
cmp
bound
mov
push
aam
fmul
inc
ds
data16
ds
push
fnstcw
jbe
sahf
out
and
pop
call
jmp
xor
jae
fsubr
dec
movsl
jmp
cmp
sbb
push
add
adc
lds
xlat
subl
xchg
clc
out
mov
movsl
mov
pop
sub
pop
jb
das
pop
inc
cld
insb
jns
mov
dec
ret
xchg
sub
xor
adc
lods
mov
dec
sbb
xchg
inc
cltd
int3
aad
and
in
or
mov
or
leave
xchg
lock
mov
outsb
aad
xor
sub
jmp
add
dec
daa
outsb
arpl
cmpsl
and
mov
mov
jb
sarb
mov
pop
lahf
in
out
shlb
jb
xchg
je
mov
sub
push
sbb
cwtl
xchg
pop
clc
stos
out
push
dec
lock
add
or
pop
jg
ja
xchg
es
sbb
inc
push
sub
mov
cmp
mov
pop
stc
cltd
fwait
mov
jbe
mov
pop
lods
xchg
xor
jb
adc
push
repnz
es
scas
jne
mov
mov
adc
bound
sbb
lods
ret
mov
mov
sbb
xor
lret
pusha
xor
lret
lcall
fs
push
shll
xor
out
fsubl
lahf
cmpsb
test
jo
pop
push
mov
fidivs
roll
ret
cmp
jl
mov
ss
and
hlt
sbb
loopne
fs
out
dec
js
std
sbb
in
sbb
xor
out
push
cmp
cli
jae
jle
nop
call
sub
jmp
lahf
mov
adc
and
pop
cld
jns
in
pop
mov
repz
push
add
out
sbb
pushf
ss
jnp
in
xor
ficoml
sbb
xor
and
popa
stc
cmpsl
jbe
addr16
mov
popf
fisubl
orl
in
mov
xor
add
cld
inc
pop
and
adc
push
inc
insb
or
or
inc
and
lock
lea
leave
sub
xor
adc
rclb
jmp
daa
addr16
xor
mov
sarb
fistpl
in
cmpsl
outsl
lahf
or
in
insb
mov
fisubs
lods
dec
rol
xchg
cmp
repz
xlat
pop
jle
clc
add
test
mov
xchg
in
xlat
jecxz
cmpsb
jns
loopne
xchg
sti
mov
movsb
jecxz
pop
add
jb
int
mov
push
stc
stos
aaa
lea
and
pusha
xchg
sub
xchg
cmp
pop
vmwrite
ret
scas
pop
ds
adc
sub
xchg
xchg
jg
mov
pusha
sbb
jbe
dec
aam
dec
sub
adc
xor
or
xchg
lret
sub
test
sahf
push
mov
clc
mov
dec
mov
shrl
cli
cltd
jp
scas
or
dec
push
notb
and
add
push
insb
pop
es
loope
data16
outsb
leave
dec
push
mov
sbb
nop
cmc
pop
add
push
xor
inc
in
incl
in
leave
stos
jmp
out
test
add
push
dec
push
lahf
push
fs
jae
sarb
pop
jmp
jmp
loope
outsb
scas
call
push
adc
push
jns
mov
das
jmp
pusha
daa
test
cmp
adc
adc
mov
inc
sub
stos
xchg
sub
jno
dec
cld
enter
andb
setae
xchg
sti
mov
fidivrl
lahf
enter
xchg
icebp
dec
loopne
push
cmp
in
int
in
xor
sub
test
fwait
xor
cmp
fcoms
mov
out
in
fdiv
iret
bound
cmp
inc
and
negl
scas
dec
adc
xchg
jge
cli
bound
mov
sti
inc
aam
push
mov
jle
push
js
notl
cmp
mov
dec
loopne
inc
push
jmp
adc
cmp
ficomps
int3
ds
lock
scas
jae
shrb
mov
movl
lret
repnz
jo
loope
mov
and
push
push
jns
cwtl
test
mov
inc
push
xchg
sub
arpl
sbb
push
add
enter
dec
into
pop
stos
fisttpll
pusha
negb
insl
inc
xor
loopne,pt
int3
xor
stos
test
jne
xor
pop
or
outsl
or
mov
jg
adc
sub
repz
push
pusha
lcall
ja
clc
enter
fmul
mov
pop
shl
repz
sub
decl
lahf
add
jl
ret
sub
jno
ds
into
call
gs
pop
fucomip
mov
in
mov
lods
xor
iret
movsb
jge
pop
repnz
inc
fstp
xor
mov
jno
mov
sahf
mov
imul
hlt
xchg
mov
xchg
mov
sub
push
les
push
hlt
ficomps
adc
or
idivl
push
jmp
or
xchg
push
dec
or
daa
pop
les
xchg
mov
sti
or
pop
ds
xor
movsl
outsb
jmp
popf
cld
add
std
sub
das
lret
cltd
push
test
xor
repz
mov
lahf
roll
and
add
push
and
mov
dec
push
in
das
xlat
mov
fiaddl
dec
sbb
adc
xor
add
mov
jle
jb
cmp
lods
fnstsw
and
pop
adc
notb
popf
dec
shlb
jo
adc
stc
in
iret
push
fdivrp
add
lea
sbb
repnz
push
aas
mov
lods
insb
cltd
adc
push
or
sahf
shrb
sub
push
xor
stos
dec
and
mov
scas
dec
sbb
mov
pop
in
push
vmovss
and
inc
sti
mov
fsubr
mov
jmp
in
mov
mov
lret
js
push
pshufw
xchg
push
ss
mov
jns
dec
mov
mov
sub
sti
dec
ss
inc
test
sub
insb
add
inc
je
sub
lods
cmp
push
mov
fbld
aad
mov
inc
sub
cmp
cs
add
cltd
repnz
insb
rclb
fcmovne
dec
divl
push
fldenv
jmp
mov
sbb
insl
dec
dec
adc
adc
mov
mov
jnp
in
pushf
leave
ss
add
mov
dec
inc
dec
mov
mov
movsb
rcll
cwtl
adcb
sbb
push
insb
push
ljmp
sbb
mov
mov
movsl
dec
xor
mulb
push
xorl
cmp
shl
data16
jbe
cli
lea
jo
jnp
bndstx
in
fwait
cmp
jp
test
lock
and
inc
jnp
lret
es
push
jmp
dec
lods
cli
in
shlb
fsubs
cmp
mov
xchg
mov
sbb
gs
fwait
sbb
ficompl
mov
sub
rcrb
scas
mov
insl
jmp
jecxz
inc
imulb
xor
pop
pop
scas
ficomps
inc
mov
and
sbb
pop
jnp
mov
in
and
xor
push
arpl
sub
xlat
std
cmp
and
cld
in
mov
push
in
repz
ret
test
mov
ret
leave
push
and
ljmp
sti
outsb
rcrl
adc
addl
es
mov
js
mov
out
notl
push
fldenv
add
xchg
int
lcall
out
lahf
push
jge
cwtl
call
add
cmc
cmp
test
mov
mov
shlb
mov
repnz
fmuls
js
xchg
lret
push
dec
out
mov
dec
test
int
scas
dec
adc
inc
sub
and
xchg
push
loopne
leave
jns
pop
sub
cmp
test
pop
nop
and
inc
lret
push
mov
data16
inc
pop
push
movsb
cmc
cmpsb
mov
pop
xchg
and
pop
sbb
or
or
cmp
jle
mov
and
ljmp
dec
and
test
clc
lock
out
fsubr
sub
mov
mov
mov
xor
push
mov
fdivrs
adc
iret
xchg
xor
mov
xchg
mov
xor
xor
pop
xchg
dec
and
mov
nop
push
pusha
lret
gs
ja
insb
cltd
cmc
sub
adc
sub
xorb
sbb
dec
cs
fcompl
dec
out
fstpt
les
xor
std
jl
rcl
xor
xchg
sbb
in
push
in
cmc
lods
cmp
insb
push
testl
popa
push
dec
fidivrl
mov
jbe
mov
add
out
sbb
in
loop
mov
xor
jle
or
ja
int
mov
cmp
rol
out
xor
mov
cmp
addr16
pop
mov
test
fsubrp
pop
pop
std
push
sub
outsl
lret
mov
imul
mov
aas
or
sub
lahf
add
and
xchg
push
adc
xchg
mov
in
mov
cmp
add
testb
jecxz
repz
out
inc
aaa
aad
push
add
mov
sbb
jl
aas
sbb
cmp
mov
daa
jmp
pushf
lcall
push
fwait
xchg
push
hlt
cs
cs
test
jecxz
loope
cmp
add
cmp
or
int3
imul
xchg
shll
and
sbb
jb
inc
aam
mov
fs
roll
outsl
lcall
cmp
inc
dec
scas
aad
mov
adc
jg
adc
and
inc
adc
mov
fsubl
jb
cmp
xlat
test
add
pop
shrb
jp
xor
or
imul
in
jae
out
dec
push
inc
sti
mov
test
or
sbb
pop
mov
mov
and
pop
mov
jl
pop
ret
jb
scas
and
out
js
mov
jbe
mov
xlat
mov
data16
inc
aas
xchg
test
add
ret
dec
mov
bound
mov
cmp
jge
stc
jne
xchg
mov
lea
fsubl
cld
test
and
add
and
sub
pop
pusha
mov
jo
in
jmp
loope
ret
scas
mov
jecxz
jno
jle
mov
xlat
nop
mov
jns
adc
xor
adcb
fsubrl
and
lret
mov
aaa
aaa
add
loop
ds
or
or
push
or
shrb
cmp
sbb
mov
icebp
pop
pop
adc
and
iret
insl
mov
or
jne
in
push
or
das
fmuls
lcall
shrl
add
inc
icebp
notb
cmp
add
jbe
xchg
and
inc
lretw
stc
or
jg
cmp
stos
jg
fisttps
lahf
ljmp
and
test
inc
pushf
mov
pop
xchg
dec
and
xchg
xor
push
sti
fwait
push
mov
nop
sub
into
add
lahf
add
sarl
xchg
adc
push
jb
push
lods
out
adc
sub
mov
in
cli
sub
push
jb
dec
cmc
mov
out
adc
xchg
add
cmp
or
out
fs
mov
rcll
stos
fcomps
mov
in
mov
jp
adc
xlat
mov
mov
sbb
push
cmp
nop
aad
and
sbb
call
in
ss
adcb
mov
loop
jbe
add
out
add
add
cmp
and
xchg
je
mov
pop
sub
negl
insb
or
mov
adc
cmp
in
filds
std
es
xchg
lahf
or
sbb
push
jne
test
or
fstps
jge
inc
mov
movsl
pop
lret
fs
cmpl
data16
push
or
out
add
mov
cld
inc
pop
push
fists
fwait
dec
jns
rcll
ret
jbe
dec
sub
std
push
cmp
jbe
xchg
es
test
fs
cmp
cmp
mov
pop
pop
xchg
sbb
in
and
pop
test
or
mov
loope
outsl
cwtl
push
cmp
lods
mov
mov
popa
mov
jp
das
and
mov
mov
and
lock
sahf
cmpsb
xor
test
imul
pusha
ret
loopne
and
xchg
mov
sub
add
xchg
sti
loop
jns
mov
push
dec
push
popf
and
mov
cmp
cmp
mov
push
adc
rcll
xchg
sbb
pop
sub
in
mov
and
aad
cwtl
sbb
in
mov
pop
dec
mov
push
repnz
ss
pop
imull
xchg
inc
fdivs
dec
test
or
out
loop
jno
ret
jl
mull
es
movsb
aas
aam
adc
xchg
and
int3
mov
adc
ljmp
loop
xchg
test
inc
push
adc
movb
iret
mov
sub
mov
or
dec
mull
ss
add
outsl
shrl
pushf
jg
jl
inc
and
jo
inc
pop
xchg
imul
adc
lods
cmp
push
ja
ret
xlat
gs
outsl
inc
mov
xchg
mov
into
data16
dec
inc
std
ds
or
hlt
loopne
adc
fs
sahf
es
gs
and
mov
cmpsb
cwtl
lahf
jbe
mov
sti
outsl
lahf
call
sub
adc
adc
sub
rorl
mov
dec
sbbl
cmpsl
pop
cmpsb
add
shl
outsb
test
leave
sbb
test
mov
jnp
xlat
and
inc
in
inc
push
mov
sbb
mov
inc
test
cmpl
adc
and
lcall
sahf
push
call
jp
cld
or
mov
jp
fwait
imul
nop
add
ret
repnz
sbb
daa
je
cmp
pop
leave
fwait
aas
mov
and
jp
test
mov
in
rclb
imul
imul
or
cmp
jp
sub
xchg
mov
lcall
mov
fldt
mov
mov
jmp
inc
sub
cmpsl
push
outsb
and
das
adc
xor
out
aam
pop
iret
xchg
pop
ss
les
scas
inc
loop
lret
xchg
sub
andb
lcall
mov
sub
sbb
ja
adc
bound
mov
sbb
mov
cmp
movsb
cli
negb
pop
movsb
cli
cltd
jne
add
mov
js
sub
dec
xchg
xchg
sbb
xor
mov
mov
inc
add
sub
das
rcl
ret
adc
test
pop
iret
push
push
insb
lcall
out
ja
adc
push
dec
pop
popf
nop
sbb
add
fs
jns
loope
add
scas
adc
xchg
nop
adc
fadd
fmuls
test
negl
and
stos
push
xor
add
sbbl
mov
xchg
sahf
xor
fstl
into
dec
push
sahf
test
jnp
xchg
push
xchg
pop
and
pop
jns
wrmsr
push
cmpsl
out
ljmp
inc
int
dec
dec
sub
movsb
imul
movsl
xlat
push
cmp
adc
mov
mov
imul
push
dec
adc
jb
inc
xor
push
ljmp
push
in
pop
sub
sub
out
call
or
push
mov
push
icebp
jg
mov
inc
inc
jns
popa
push
pop
dec
sarb
sbb
push
mov
into
jno
dec
cmp
into
bound
stos
jnp
push
xlat
aaa
inc
pop
push
xor
movsb
test
sub
test
xor
enter
cmp
fdivl
inc
jl
cli
out
test
fidivrl
fnstenv
cwtl
cli
das
test
dec
cwtl
ss
and
ja
or
mov
ret
pop
jmp
imulb
mov
sub
cmp
shll
mov
inc
mov
xchg
adc
imul
or
adc
xchg
xchg
push
mov
loopne
es
aad
cmpsb
fdivrs
mov
lea
mov
cmc
mov
sbb
loop
popf
nop
push
adc
xor
jg
insb
rorl
sbb
aad
xor
mov
js
out
sbb
mov
sub
xor
leave
or
fisubl
jns
fcmove
out
push
sarb
mov
out
adc
inc
aam
imulb
movsb
push
fcoms
cmpsb
fisttpl
leave
in
std
inc
gs
jae
sbb
aam
and
testl
js
cmpsb
sbb
mov
sbb
and
inc
lret
imul
mov
add
cmc
sbb
roll
fsub
leave
pop
mov
xchg
xor
fs
add
jle
cmp
mov
fcomps
push
repz
pusha
sbb
jbe
sahf
or
add
jl
aam
adc
test
nop
loopne
negl
or
adcb
jl
push
dec
jne
jg
mov
inc
add
popa
test
cld
test
mov
mov
or
adc
iret
pop
dec
push
cmp
cmp
push
xchg
inc
or
xchg
xchg
xchg
fsubs
pop
aas
add
pop
lcall
sub
mov
adc
xchg
out
push
pop
cmp
dec
push
lcall
push
orb
lahf
add
arpl
bound
mov
xorb
stos
sub
jg
sub
insl
pop
dec
out
xor
push
xchg
or
enter
aad
mov
xchg
add
pop
roll
cmovno
dec
pop
mov
shrb
push
loopne
and
scas
imul
or
pop
pop
sbb
pop
xor
test
sub
xor
jecxz
jae
sbb
pop
lea
lods
cmp
insl
push
inc
push
or
pop
shlb
es
mov
and
push
in
nop
jmp
or
ljmp
into
inc
leave
push
adc
outsl
int3
push
lret
pop
fldt
popa
insl
mov
push
jmp
dec
or
mov
jge
daa
mov
pop
das
mov
out
mov
jg
xchg
xor
xor
mov
sbb
mov
aaa
mov
fbstp
lahf
inc
mov
push
lret
lret
lcall
inc
adc
add
add
iret
lock
lods
lods
mov
adc
jb
lret
mov
enter
pop
js
fldt
dec
sbb
xor
xchg
push
inc
jns
push
xor
imul
cmp
or
jae
mov
std
sbb
pop
enter
and
out
pop
rclb
int
xor
mov
xchg
or
lods
stos
test
jg
fnstcw
sbbl
imul
mov
stos
sub
lea
bound
sbb
in
cmp
sub
lock
add
mov
jns
xor
xor
mov
cmp
mov
lret
in
sbb
clc
lods
mov
pop
addr16
pop
mov
mov
outsb
push
mov
popf
fcomi
dec
dec
sbb
addl
inc
or
icebp
mov
stos
stos
dec
inc
aaa
int3
xor
or
add
into
mov
in
xor
mov
pusha
mov
pop
cmp
fst
ret
and
in
aas
xorb
push
sahf
repnz
jb
cmp
ret
cmp
imulb
mov
cmp
icebp
inc
pop
adc
jg
mov
push
mov
add
dec
loopne
jmp
mov
rcr
fs
add
shr
fimuls
jmp
jae
pop
pop
clc
inc
or
jne
and
sbb
sub
das
push
addr16
xor
popa
jmp
dec
xor
push
mov
jge
sub
dec
addb
sbb
jl
mov
and
lret
call
sub
or
cltd
cmc
xchg
or
inc
pop
push
add
jns
push
leave
mov
clc
jns
jne
mov
ljmp
adc
add
sub
sub
pop
jmp
aam
mov
xor
mov
xchg
rorb
jo
xor
xchg
stos
in
cmpb
or
add
mov
test
inc
cld
cmpsb
ret
lock
inc
xchg
pop
sbb
js
fnsave
jns
jl
scas
jge
pop
out
test
insl
in
nop
pop
xchg
notb
shlb
or
sub
pop
add
imul
cmp
ficoms
dec
jle
inc
sub
rol
pop
push
sub
fcomps
setae
and
ret
in
popa
lods
inc
push
pop
or
fisttps
mov
shlb
js
leave
mov
mov
lods
and
scas
push
and
xchg
jmp
jae
dec
fwait
jns
lret
rclb
sub
imul
xchg
dec
ror
jne
pop
dec
mov
sbb
pop
clc
or
int
js
ret
popf
hlt
mov
jmp
sub
lods
pop
jae
out
stos
pop
jns
xor
mov
add
jle
cwtl
xchg
xchg
xchg
cmp
pop
ja
or
sbb
sub
iret
fisttps
loop
ficompl
jmp
xor
pusha
lock
pop
cmpb
sub
mov
push
test
sbb
xchg
lods
std
cmpl
xor
je
and
sbb
fisubrs
cli
jg
pusha
push
add
adc
daa
lcall
and
outsb
outsb
test
cmpsl
enter
out
xchg
adc
mov
jns
add
push
push
push
pop
in
in
arpl
or
jbe
mov
cltd
clc
and
pop
scas
pop
mov
ret
mov
cli
push
aas
daa
pop
enter
jne
and
sbb
push
sbb
and
sbb
fdivr
pop
mov
add
xchg
movsl
sti
pushf
cld
or
sbb
inc
pusha
fsts
cmpsl
adc
scas
gs
lret
imul
movsb
cwtl
sub
outsl
push
scas
sub
mov
push
flds
mov
jl
aaa
mov
or
cli
push
and
mov
test
into
andb
jmp
insb
push
test
repz
pop
jge
xor
mov
adc
dec
adc
mov
ds
or
push
jns
xorl
jb
out
dec
test
xchg
push
or
incl
dec
test
push
or
dec
adc
lea
sti
mov
pop
jnp
xchg
xlat
jbe
dec
mov
adc
xorb
or
rorl
sbbl
mov
mov
ds
pushl
in
lds
cmp
pop
mov
push
stc
pop
inc
outsl
mov
push
adc
fstps
scas
test
inc
adc
nop
sub
sbb
test
mov
outsb
into
repnz
pushf
inc
in
or
xchg
test
inc
sti
inc
jae
jns
sub
or
je
pop
mov
mov
fiadds
call
cmp
and
movsb
and
fnsave
into
cmp
cld
adc
test
fldl
lods
jp
mul
mov
hlt
mov
or
mov
sbb
add
add
cmc
mov
leave
inc
inc
jno
adc
jbe
jbe
rorl
je
int
sarl
adc
pop
and
xlat
pop
or
lahf
stos
test
bnd
push
add
ds
xchg
call
mov
ja
mov
add
sahf
popf
rcrb
mov
sub
inc
loopne
inc
push
out
pop
popf
adc
movsb
adc
pop
imul
xor
xor
jl
mov
repz
xor
xor
inc
xchg
daa
mov
jg
or
pop
icebp
int3
scas
int3
mov
dec
cmp
or
mov
jg
push
addb
fists
jp
dec
popa
inc
iret
and
cli
xlat
repnz
mov
push
sbb
rorl
add
leave
mov
jno
mov
mov
push
loope
dec
xchg
ss
es
nop
mov
add
cmp
repnz
scas
loopne
jmp
aam
std
jbe
adc
inc
stos
push
fs
add
jle
ds
or
xor
movsl
push
aam
arpl
mov
and
je
sbb
add
ss
sahf
pop
int3
sub
cltd
cmpsl
cmpsb
jnp
adc
mov
loopne
out
pop
rorl
jae
adc
fsubr
pop
movsl
lds
xor
test
push
mov
les
mov
push
pop
mov
daa
loope
jns
lods
mov
mov
repz
leave
push
push
popf
pop
sahf
repnz
jmp
lret
loope
lret
and
int
mov
mov
adc
cmp
ljmp
dec
inc
jb
mov
lret
int
insb
adc
ret
and
fistpll
repnz
cmp
push
pushf
clc
shrl
ja
or
sbb
data16
mov
xchg
mov
mov
lock
cmp
and
sub
push
shrb
cs
out
dec
shl
mov
das
lahf
inc
imul
in
cmc
cmp
or
xchg
xlat
movb
and
jg
dec
frstor
xor
mov
fs
mov
jp
and
sbb
pop
or
stos
cmpl
adc
or
mov
pushw
push
aas
pushf
rclb
dec
push
or
and
sarb
jg
subb
xlat
std
ret
jp
mov
inc
add
mov
rcrl
pop
loop
cmc
cld
cmp
sub
dec
lds
xor
fwait
xlat
shlb
lcall
movsl
and
push
push
fcoms
mov
in
push
stc
jp
repnz
stos
cmp
and
out
arpl
aam
and
nop
loop
mov
call
fildll
in
outsl
rep
mov
push
mov
mov
in
dec
xchg
inc
add
lods
or
xchg
js
std
movhps
xor
test
push
sub
mov
push
bound
rcl
ljmp
mov
mov
xor
mov
sbb
or
out
pushf
mov
mov
clc
loop
push
jo
push
dec
and
mov
and
dec
insb
mov
sti
in
mov
movl
sbb
dec
adc
lcall
sbb
lea
outsl
out
add
push
dec
push
sbb
cmp
push
std
lahf
xor
dec
mov
push
out
jle
nop
fdivrl
push
and
hlt
mov
orl
scas
add
cmp
jbe
push
cmp
pushf
xchg
clc
xchg
cmp
mov
adc
push
pop
adc
jae
mov
dec
call
inc
and
ds
not
push
rcl
cmpsb
mov
xchg
sbb
into
inc
dec
scas
cs
std
test
mov
dec
push
rolb
jae
mov
sbb
lcall
pusha
jmp
leave
inc
stos
fimull
jnp
and
add
xchg
mov
xchg
in
push
ljmp
das
test
data16
sbb
sub
mov
xor
and
dec
out
repnz
mov
loopne
mov
dec
mov
jb
adc
fs
adc
dec
gs
push
lahf
dec
sub
and
inc
inc
mov
sub
cltd
dec
iret
lea
adc
aad
jmp
fnstsw
xchg
xor
daa
aas
fisttpl
or
add
loope
sbb
in
mov
push
inc
dec
sbb
jge
xchg
mov
add
jae
rorb
dec
jnp
adc
popf
nop
push
fildll
aam
cmp
movsb
dec
popa
mov
imul
cld
pop
add
into
push
inc
add
out
push
aaa
cmpl
fstpt
jb
push
pusha
shlb
adc
pop
adc
imul
outsl
jae
pop
push
mov
xchg
push
rcr
lea
mov
cs
sti
test
inc
inc
cmpsl
pusha
sti
loop
dec
movsl
decb
js
mov
lods
lods
jne
imul
adc
shl
adc
test
cmp
lahf
sbb
daa
mov
out
lods
sub
inc
int
push
push
adc
dec
mov
jbe
out
test
or
mov
mov
adc
xchg
jl
or
pushl
and
lods
pop
inc
adc
push
inc
aaa
and
in
dec
aam
inc
mulb
dec
les
mov
repz
xor
and
and
mov
cmp
jecxz
pushf
dec
pop
mov
jbe
cmp
pusha
rolb
loope
leave
sub
sub
adc
lock
jne
mov
ret
enter
sub
push
mov
sub
call
inc
adc
sub
sub
pop
inc
sbb
lds
mov
xchg
inc
sahf
insl
jp
pop
push
ljmp
int
mov
mov
subb
inc
nop
add
fcomi
cld
mov
sbb
sbb
daa
xchg
movsb
insl
dec
out
fs
or
dec
repz
inc
scas
xor
pop
adc
add
test
jmp
dec
sti
out
stos
das
mov
cmp
shrl
pop
dec
mov
stc
daa
push
sub
stos
add
fnsave
jp
pop
mov
xor
mov
inc
loope
dec
push
stos
sub
cmp
stos
pop
cs
shrl
pop
dec
test
inc
pusha
inc
add
scas
shrl
push
jl
pusha
pop
xor
out
jae
xor
cmpl
fwait
mov
sbb
mov
mov
mov
sbb
jle
imul
fucomi
xor
out
or
xchg
dec
nop
std
icebp
or
out
jle
xor
push
push
in
fiadds
and
sub
mov
sarb
mov
das
cmpl
mov
insb
dec
cs
sahf
sub
fidivrl
es
sbb
push
call
sbb
nop
gs
fists
adc
mov
lock
lods
sbb
xor
clc
int3
cmp
pushf
enter
movsb
loopne
jge
jp
sub
pop
incb
rep
lock
into
push
mov
clc
push
inc
adc
mov
mov
test
pop
into
rcrb
les
aaa
rcrl
mov
jne
repz
push
dec
jecxz
push
in
pop
xchg
fildll
inc
dec
mov
xor
cmpb
and
js
xor
mov
mov
push
pop
or
push
aas
inc
in
cli
mov
xor
cs
push
add
call
call
pop
pop
or
mov
pushf
xor
xor
mov
repnz
call
jnp
mov
cltd
adc
push
stc
jecxz
jae
in
das
sub
or
stos
in
or
cmpb
fwait
cli
jmp
mov
push
imul
imul
xchg
mov
cwtl
dec
sbb
cli
pop
popf
cli
jp
int3
ss
arpl
ret
shll
cmc
cwtl
loopne
dec
ret
jl
dec
pop
dec
xorl
xchg
xchg
pop
mov
cmp
jns
add
out
jnp
movsl
int
lods
inc
pusha
add
push
mov
iret
pop
adc
scas
sbb
inc
push
mov
icebp
jle
dec
or
pop
sub
or
je
push
lcall
je
dec
arpl
mov
gs
popa
cmpsl
insl
jne
loope
rorb
insl
inc
mov
int
arpl
out
cmp
sarl
inc
inc
clc
in
sbb
scas
scas
xor
clc
mov
mov
dec
jge
stos
cmp
ljmp
pop
xor
dec
icebp
in
loopne
ja
jecxz
jl
aas
xchg
enter
dec
test
sub
mov
sbb
cltd
sub
mov
fcoml
mov
sbb
inc
cmpsb
scas
push
dec
dec
leave
stc
xchg
or
filds
jo
and
sub
jmp
jl
hlt
mov
sub
xor
xor
aaa
cmpsb
mov
pop
or
imul
xchg
mov
jmp
jmp
sub
pop
call
mov
xor
xchg
je
jp
ss
movsb
mov
out
insb
sub
push
mov
cli
sbb
xor
add
rolb
mov
xchg
push
sbb
jge
mov
out
mov
in
andl
jp
into
cmc
in
sbb
test
addr16
scas
dec
fs
mov
pop
sar
sbb
leave
insl
lea
mov
ds
jne
in
inc
int
adc
out
sahf
aad
bound
xor
or
sbb
add
das
pop
sbb
jne
xchg
lock
not
mov
jno
fisttpl
mull
xchg
mov
ss
xor
sbb
adc
push
ret
aaa
test
adc
inc
push
dec
xor
inc
sbb
outsl
sub
cld
jge
cmc
push
sbb
jae
aad
mov
jno
loope
rorb
lods
jbe
fsubrs
out
dec
mov
adc
mov
mov
data16
fimull
cmp
xchg
cltd
mov
xor
mov
popa
pop
push
mov
mov
mov
fs
dec
cmp
cmp
mov
push
stos
popf
jmp
or
mov
lods
mov
test
sbb
inc
lock
ja
pop
mov
pushf
jp
pop
clc
lret
inc
imul
imul
xchg
lret
adc
add
xor
add
and
mov
and
imull
js
dec
xchg
ret
rcr
push
in
insb
mov
iret
in
jns
loope
lds
add
scas
push
push
cmovae
dec
mov
repnz
dec
sub
sub
jg
inc
mov
fsubrl
popl
xor
jae
mov
fwait
dec
jg
sti
cmp
ss
popf
push
popf
call
mov
push
mov
pop
mov
fs
mov
mov
inc
pusha
fldt
daa
inc
jns
ret
cmp
pop
and
lahf
aas
aas
scas
adc
jp
les
lret
jmp
nop
lcall
fmulp
jb
mov
leave
cmpsb
pushf
ljmp
and
push
icebp
sub
in
lahf
lahf
sbb
inc
or
jb
push
iret
notb
jae
bound
cmp
mov
shlb
pop
fwait
negl
dec
push
jbe
flds
arpl
xor
jae
mov
pop
sub
xor
xor
fs
in
mov
fsts
std
lcall
cmpb
adc
bound
push
sub
inc
push
mov
jne
sahf
out
xchg
cmp
loopne
enter
andb
mov
sub
sub
push
data16
adc
in
int
stos
mov
imul
xchg
mov
fs
inc
out
mov
out
aam
decb
jns
push
xorb
rolb
jl
repnz
mov
inc
xor
inc
sub
sbb
rorl
test
mov
push
sub
std
addl
dec
jg
imul
pop
jle
fisubs
or
push
inc
jo
xor
mov
popa
mov
call
sbb
xor
xor
mov
test
in
scas
clc
out
aaa
inc
and
adcb
fisubs
jbe
jno
push
add
ljmp
push
sbb
daa
sub
stos
jmp
inc
xor
push
ret
stos
xchg
jg
mov
into
rolb
adc
push
addr16
scas
jmp
shl
pop
jmp
pop
or
ret
dec
sahf
dec
movsl
sbb
mov
hlt
insl
cmp
cmc
inc
jmp
pop
lret
xchg
jmp
sarl
gs
inc
adc
out
test
jo
push
insl
mov
loope
imul
popf
daa
mov
and
into
in
xorl
jp
mov
js
jae
and
lods
in
mov
jae
call
push
cmp
cltd
push
mov
xlat
jne
cmpps
sbb
add
adc
push
push
fsubrs
test
inc
out
pusha
adc
jg
leave
adc
stc
jg
and
fisttpl
mov
hlt
inc
xchg
xor
mov
xor
jne
or
jge
fidivs
push
add
mov
outsb
xorl
xor
jmp
mov
dec
inc
add
arpl
pop
xchg
popa
mov
xlat
daa
or
test
addb
cmpsl
mov
xor
fbld
je
xchg
jnp
outsl
sub
sbb
popa
or
popf
cmp
repz
sub
jmp
push
pop
push
lahf
out
push
mov
aad
lds
mov
imul
aaa
xor
lret
bound
loopne
lahf
scas
fnstenv
scas
arpl
ss
and
sub
push
push
rcll
mov
out
adc
cmc
mov
fnsave
jnp
sbb
int
int3
and
mov
cmp
pop
aaa
pop
mov
out
jns
or
jae
stos
mov
inc
frstor
xor
fnop
push
inc
inc
in
jmp
pop
mov
sbb
fwait
pop
and
sub
xchg
lahf
and
aaa
das
scas
inc
notl
loope
repz
or
mov
push
mov
sarl
jmp
push
add
xchg
or
sbb
adc
sti
mov
jle
mov
pop
xchg
jmp
out
testl
mov
mov
pop
fistps
stos
add
push
xchg
pop
xor
out
sbb
adc
pop
lahf
nop
inc
out
repz
pop
in
sbb
xchg
call
lods
dec
add
fisttpl
mov
std
push
out
push
cmp
xchg
enter
sub
sahf
js
dec
mov
sbb
xlat
jns
jle
imull
sub
nop
sub
sahf
les
and
jge
mov
stos
adc
add
push
cmp
push
mov
and
mov
adc
xchg
aam
pop
addr16
leave
xor
mov
add
mov
shlb
mov
in
movsb
hlt
mov
sbb
dec
lods
xor
imul
xor
adc
push
jnp
inc
fidivs
out
xchg
call
inc
out
lahf
push
enter
adc
cmp
mov
addr16
push
leave
lret
mov
cmp
les
gs
lcall
pop
adc
pop
shlb
cltd
cli
sbbb
out
push
inc
testb
es
push
mov
mov
bound
and
popf
inc
out
push
das
sbb
outsl
in
loop
hlt
xor
repz
scas
not
shrb
jnp
inc
popf
hlt
sbb
dec
adc
pushl
mov
push
xchg
enter
mov
pop
mov
mov
xchg
sahf
dec
mov
in
imul
js
bound
or
outsb
mov
push
roll
jecxz
xchg
sub
pop
insl
ret
push
add
cs
lock
sub
push
mov
cmovo
js,pt
nop
repz
stc
mov
sub
repnz
jmp
dec
mov
mov
cmp
imul
inc
pop
roll
and
outsl
mov
andb
cmp
dec
xchg
mov
xor
in
fs
push
sub
push
mov
or
sbb
sbb
fwait
hlt
jg
jb
outsb
push
clc
mov
aas
sahf
pop
aas
push
cmp
clc
sub
mov
xchg
push
aad
mov
push
jne
dec
dec
xchg
mov
pop
sub
xor
test
cmp
ja
push
adc
insl
mov
cli
movsb
scas
xchg
call
adc
jbe
roll
or
enter
addl
inc
sahf
outsb
ss
push
lret
sbb
xchg
push
in
push
and
mov
add
icebp
pop
add
js
adcb
adc
das
fidivrs
fldl
mov
xchg
bound
add
adc
pop
in
mov
cmp
jo
mov
iret
dec
inc
xchg
jno
out
push
jns
idiv
adc
pop
mov
sbb
jbe
cmp
insl
xlat
dec
stc
ds
fwait
iret
lods
sbb
push
push
mov
std
into
stos
sub
sub
sbb
jge
push
fcmovb
jb
push
insl
jecxz
daa
jo
sbb
adc
test
std
negb
xchg
push
fisubs
add
cmpsb
outsl
fildl
ds
pop
lds
movsl
ja
inc
mov
outsl
sbb
and
test
daa
fiaddl
into
int3
shl
ficoms
adc
pop
mov
into
in
popf
sub
ljmp
jbe
mov
or
js
rolb
ljmp
bound
and
out
fwait
sbb
int3
out
imul
loop
call
cmp
cmpsl
inc
pushf
push
mov
aas
lods
dec
popf
int
in
xchg
xor
loopne
adc
aad
inc
cmp
loop
fdiv
or
lahf
aad
ljmp
mov
enter
jg
out
push
lea
cmpsl
adc
dec
call
addb
fs
adc
mov
xorb
adc
movsl
xchg
pop
fsubs
inc
xor
lahf
mov
adc
inc
sub
inc
xchg
sti
cwtl
sarb
fnstcw
ljmp
push
and
je
icebp
loopne
in
push
push
shl
and
arpl
push
out
je
clc
pop
setae
sub
adc
les
xor
mov
sbb
fnstsw
push
inc
test
bound
imul
loopne
sub
push
jecxz
sub
cmp
lret
ret
scas
fidivl
testb
roll
out
jmp
leave
jnp
xchg
shlb
je
test
add
movsl
in
dec
jno
cli
insb
add
jns
lods
out
dec
xor
push
in
sub
cwtl
dec
mov
mov
pop
mov
flds
std
call
popf
test
sti
mov
adc
mov
shrb
cmp
sbb
data16
popfw
stos
lock
mov
pop
dec
ljmp
push
iret
mov
or
xor
pop
out
test
out
popf
sbb
push
ds
mov
fistpll
pop
sahf
rorl
leave
rclb
cmp
leave
fs
mov
mov
ret
repz
xor
lahf
push
cs
mov
ret
pop
add
aaa
lds
insb
dec
xchg
add
popf
repnz
xchg
lds
xchg
inc
push
mov
cmp
lahf
xor
adc
pop
mov
and
xchg
add
or
in
xchg
or
lods
sti
sub
jb
rorl
push
adc
sbb
xor
cmpsb
rorb
xlat
popa
xchg
inc
stos
pop
xor
imul
test
dec
push
xor
out
xchg
push
enter
iret
fcmovnb
jg
scas
add
and
or
jbe
int3
lret
pop
loopne
inc
mov
aaa
aad
pushf
push
nop
outsl
in
jbe
insb
cmp
int
in
xor
sbb
adc
push
loope
fld1
inc
pop
clc
sub
xchg
adc
popf
xor
pop
fldt
dec
xor
cmp
cltd
push
fwait
add
jmp
movntq
or
rsm
xchg
sub
sub
imul
sar
pushf
sub
scas
and
std
fisubs
xchg
pop
cltd
pushf
out
and
fnstsw
imul
xchg
cwtl
es
out
mov
nop
sub
and
dec
insl
xlat
xchg
fstpt
sti
add
mov
in
stc
xchg
push
or
add
mov
in
xor
adc
push
sub
aas
cmc
jp
movsb
dec
add
xlat
insl
mov
xorl
mov
je
cltd
pop
xor
adc
push
popa
pop
sarl
inc
sbb
push
and
shll
mov
rol
ror
aaa
mov
clc
add
ljmp
push
lea
das
test
out
mov
sub
dec
sub
mov
sub
inc
mov
pop
mov
pop
enter
test
ja
mov
xor
mov
and
dec
je
push
xchg
popa
jo
sub
in
push
jno
dec
stos
sub
lods
enter
clc
push
jns
icebp
sub
inc
sbb
sub
into
sub
jnp
pop
sti
sub
dec
sti
push
sub
inc
movsb
stos
cmp
xor
jl
cmp
ret
loope
mov
xchg
jecxz
mov
ja
rcrl
jmp
loopne
scas
mov
leave
xchg
xchg
int
jp
cmpl
dec
aas
xor
xor
jl
add
ret
jb
adc
aam
dec
mov
jg
pop
jg
xor
std
adc
fbstp
sarb
lods
xor
inc
mov
cmp
mov
jns
mov
imul
add
movsl
inc
dec
sbb
mov
dec
push
push
pop
xor
dec
add
add
daa
cld
push
sub
sbb
in
xor
xor
mov
ljmp
mov
inc
aaa
idivl
fbstp
imul
clc
mov
stc
outsb
test
mov
aam
adc
mov
scas
push
loopne
add
mov
inc
ds
jae
or
adc
jl
and
jge
into
addr16
ljmp
or
inc
arpl
jno
flds
or
mov
fstp
out
xchg
ret
cmp
jmp
cmp
xchg
dec
adc
insb
dec
cmpsb
imul
mov
aaa
adcl
insb
adc
dec
xor
xchg
mov
pop
cmpsb
sarb
xor
jle
xchg
fdivrs
call
xchg
push
push
ljmp
cmp
push
xor
test
fdivrs
div
loopne
inc
shll
xchg
cltd
sti
mov
jmp
fs
mov
iret
lret
sub
dec
mov
dec
sti
jg
push
sbb
outsl
or
aam
lock
xchg
es
sub
int3
push
mov
or
icebp
popa
es
sbb
jl
jae
mov
push
lea
jne
xchg
dec
inc
gs
int
rorl
pop
js
icebp
call
out
mov
mov
cli
dec
cmp
mov
int3
add
xor
jae
mov
out
hlt
sahf
lea
mov
aad
xor
adc
and
aas
mov
fwait
cmp
jle
cmpb
mov
pop
cli
fwait
insb
scas
into
bswap
lea
fildll
or
dec
les
dec
mov
lahf
adc
icebp
and
pop
jns
mov
cpuid
adc
xlat
jge,pt
dec
inc
enter
pop
mov
pop
aas
icebp
pop
in
inc
es
jmp
loopne
push
iret
push
es
adc
jecxz
scas
inc
mov
scas
lret
mov
cmc
push
inc
mov
adc
dec
addr16
xchg
mov
jge
mov
shll
sbb
and
outsb
push
fldenv
sbbb
xchg
movsl
jp
data16
pop
das
mov
sub
cli
cmp
stos
notl
fldt
sub
pop
mov
movsb
jg
rol
add
sbb
push
mov
and
addr16
jg
add
rcl
mov
ficomps
mov
test
in
cmp
dec
out
enter
rolb
std
imul
icebp
dec
cmp
js
xchg
push
jecxz
xchg
add
sbb
roll
mov
aam
sbb
pop
imul
adc
jb
xor
pop
insb
lcall
insl
out
or
lahf
adc
cmp
fdivs
xchg
sub
adc
jae
js
or
xor
lds
jl
scas
pop
cmp
lds
fnstenv
scas
and
mov
lds
pusha
not
loope
mov
into
lds
dec
mov
pop
lret
das
or
leave
fiadds
lds
repz
rcrb
rclb
scas
test
sti
ja
movsb
cli
pop
xor
les
daa
inc
jbe
xchg
pop
pop
push
mov
pop
xor
push
add
fstpt
lods
ss
in
outsl
push
mov
shlb
mov
pushf
add
jno
xor
and
sbb
call
add
mov
cmp
push
icebp
pop
jmp
outsl
mov
mov
mov
aaa
iret
test
mov
push
sbbl
ret
arpl
mov
inc
shll
test
addr16
mov
or
lcall
mov
mov
jb
mov
xchg
jnp
mov
push
jmp
add
je
push
pop
iret
push
outsb
popf
add
or
inc
and
jne
cli
sahf
add
jae
pop
push
int3
mov
pop
jle
pop
sti
ss
add
les
mov
xor
xor
adc
lret
pop
inc
xor
inc
add
push
int3
and
jmp
jo
in
ds
addl
dec
test
dec
andl
push
ret
mov
enter
pushf
jecxz
pop
mov
shlb
or
lock
ret
sbb
push
pop
pop
pushf
ds
sub
push
shl
mov
xchg
inc
mov
xchg
movsb
js
jnp
bnd
mov
iret
loope
test
mov
lret
dec
mov
mov
ret
push
fldenv
inc
cmpsl
ficoms
adc
sub
ds
push
imul
adc
pusha
pop
ljmp
mov
dec
pop
xchg
shll
sbb
and
movsb
loop
cmpb
push
push
and
loope
mov
leave
xlat
addl
sub
fistps
test
enter
int
jae
or
fwait
or
xchg
aam
cwtl
pop
rclb
or
xor
or
loopne
cmpsb
inc
adc
icebp
mov
sbb
push
xor
cmp
sbb
inc
dec
dec
cmpsl
or
xchg
arpl
icebp
xlat
inc
jns
adc
cmp
jl
jb
fstps
jle
nop
mov
mov
mov
xor
lahf
jno
jge
ret
and
xchg
mov
fsubl
shrl
cmp
call
xor
xchg
daa
jnp
or
loop
daa
dec
xlat
cld
lods
or
mov
test
in
dec
ret
inc
mov
xchg
dec
notb
push
xlat
sub
ja
rcll
xchg
cld
push
xor
fs
inc
xchg
inc
xchg
lahf
sbb
or
sub
out
cwtl
pop
mov
ds
xor
ret
add
xor
xor
mov
fmull
js
or
mov
fwait
insb
mov
test
mov
fs
mov
in
test
jmp
push
popf
inc
inc
cli
inc
dec
mov
and
sbb
cltd
xchg
call
test
sbb
int
nop
pop
inc
cmp
cmp
or
jae
mov
xchg
mov
add
in
sub
jp
cld
out
or
in
mov
pushf
in
inc
jle
pop
sbb
sub
sbb
push
test
push
mov
sub
cmp
cmc
mov
mov
popa
mov
fsubl
mov
aaa
xchg
enter
adc
das
adc
lcall
icebp
cltd
mov
dec
les
sahf
xor
mov
stos
push
sbbl
push
xor
mul
xchg
mov
fsincos
inc
xor
pop
inc
sbb
in
mov
icebp
cmp
jmp
or
dec
fsts
iret
xchg
or
jb
add
inc
test
rclb
clc
sti
sahf
neg
pop
mov
and
aas
xor
aas
inc
adc
aaa
sub
pop
mov
in
pop
or
fsubl
out
nop
enter
xchg
out
pop
mov
mov
leave
loopne
lods
stos
cltd
movsb
or
test
mov
xlat
mov
in
jae
out
dec
mov
stos
cmp
testl
lahf
cmp
xchg
pop
ds
cmp
sub
test
out
jge
mov
rcll
pop
or
jl
xchg
add
xchg
mov
fstpt
cwtl
mov
mov
mov
mov
leave
sub
dec
mov
xlat
call
pop
inc
xchg
cmc
sbb
inc
leave
mov
mov
mov
cli
xchg
pop
bound
rolb
lods
icebp
clc
les
aas
inc
push
mov
jl
mov
pop
ds
xchg
js
shlb
xchg
xchg
mov
sub
aas
sahf
stc
repz
jle
and
cld
mov
xor
push
fildl
ret
or
dec
push
clc
push
mov
jne
xlat
mov
insl
repz
call
loop
cmp
add
inc
in
jbe
push
ss
push
arpl
dec
int3
pop
fisubs
add
add
ret
add
cmp
jns
sbb
aam
cmp
outsb
and
pop
cltd
pop
mov
pushf
push
and
add
and
and
fs
std
mov
mov
repnz
xchg
jns
enter
add
xorb
in
out
cli
dec
dec
pop
or
mov
movsb
mov
and
adc
mov
push
aas
cmp
sub
pop
sbbl
adc
pop
lock
lds
inc
enter
pop
lds
push
nop
jle
mov
xor
sbb
les
je
jae
push
jbe
std
sbb
push
mov
jl
int
cmp
test
subl
inc
dec
inc
imul
shll
mov
js
mov
inc
and
dec
or
in
mov
pop
cmp
xor
xchg
pop
das
xor
add
pushf
out
dec
popf
push
xchg
push
jl
xchg
sbb
test
aad
scas
clc
and
dec
cmpsb
xchg
ret
jge
in
arpl
jno
pop
dec
sbb
mov
push
cmp
int3
adc
pop
popa
scas
inc
cmpsb
push
stc
aad
les
push
scas
cmp
dec
int3
pusha
cli
adc
push
adc
out
pop
add
xchg
aad
movsb
xor
test
pusha
adc
hlt
mov
sub
lahf
mov
mov
loope
test
out
or
push
xor
pop
sub
rep
mov
pop
imul
cmc
data16
cmc
dec
or
lea
push
and
inc
insl
sbb
pop
ljmp
sub
mov
adc
add
sbb
adc
inc
adc
jb
add
and
inc
adc
out
cmp
fdivrs
int
mov
insb
test
mov
scas
push
adc
mov
mov
push
aaa
aaa
push
mov
movsb
inc
icebp
loopne
dec
repnz
sar
mov
sahf
je
xchg
mov
lret
push
mov
stos
push
loopne
inc
es
xchg
hlt
adc
aas
fistps
mov
daa
dec
mov
stos
xor
std
out
pop
dec
test
jae
leave
jp
xor
push
pop
jg
dec
jmp
out
push
test
call
or
in
inc
out
add
mov
mov
stc
cltd
aam
orb
loopne
lea
pop
fisttpll
dec
fimull
in
xchg
testl
andl
ret
push
mov
dec
add
das
xorb
jb
add
dec
jbe
arpl
stc
lret
or
scas
jno
pop
or
cli
shrl
test
shll
lds
pop
adc
mov
iret
jnp
scas
sbb
mov
push
stc
mov
add
aad
sar
xor
loopne
or
mov
xor
popf
lds
jle
lods
or
adc
aaa
ja
sub
sahf
and
incl
js
push
sbb
sub
mov
ss
inc
in
mov
lahf
repz
mov
pop
mov
inc
jbe
bound
cwtl
sbb
pop
stc
adc
stos
cli
nop
andb
popa
sub
pop
repnz
andb
pop
aam
addr16
out
push
enter
int
dec
sbb
mov
or
jle
fldenv
lock
movsl
stc
push
popa
sub
lret
xchg
push
dec
and
mov
inc
loope
in
add
xchg
jne
add
stos
xchg
xchg
mov
cmpl
ss
fcom
mov
and
leave
jb
pusha
jnp
clc
jns
fcomps
aaa
outsl
orl
xchg
or
sahf
rolb
jg
inc
fmul
push
adc
push
inc
push
movsl
sahf
jg
nop
mov
shlb
in
jo
xor
cmc
jnp
or
xchg
cmp
cmp
ffree
xor
jae
and
pop
pusha
enter
int
out
bound
and
ret
or
filds
pushf
xor
cmp
push
dec
jae
lret
jg
jnp
es
cmp
dec
ret
cmc
flds
xchg
push
call
sbb
rcll
or
cmp
ret
lods
sub
inc
and
mov
add
cmc
mov
cmp
push
push
push
xor
jnp
neg
daa
xchg
push
mov
out
sbb
in
xchg
jp
or
enter
jb
repnz
cs
out
lock
dec
adc
ljmp
jmp
mov
cwtl
push
lahf
lahf
ds
dec
pop
mov
mov
jo
dec
adc
js
fisubrl
inc
rorb
sbb
pop
jb
push
adc
jecxz
adc
jb
add
das
in
sbb
stos
and
xlat
divb
rdmsr
loop
jno
aas
dec
or
stos
xchg
inc
xchg
xchg
push
mov
inc
cwtl
cmp
movsl
lret
xchg
dec
mov
jae
push
cmp
sahf
test
pop
int3
cwtl
pop
shl
scas
call
dec
add
add
popf
adc
push
sarb
std
adc
xorb
add
cltd
aaa
xchg
gs
mov
dec
sbb
stos
xor
mov
int
push
andb
fs
mov
jo
mov
in
inc
inc
push
xor
pop
daa
cmpsl
sub
push
xor
call
jnp
inc
push
sbb
xchg
andl
ja
push
scas
xchg
jle
pushw
jecxz
push
gs
mov
pop
and
cmp
iret
xor
jne
push
outsl
cmp
push
es
frstor
ja
fisttpl
inc
ret
mov
sub
add
stos
scas
inc
mulb
inc
js
mov
decb
or
pop
shlb
or
orb
jecxz
sarb
jnp
adc
or
fists
insl
scas
mov
scas
int3
mov
into
ja
adc
mov
jne
inc
xor
repz
js
repz
les
lret
fcom
ljmp
add
mov
mov
jb
popa
xorb
in
dec
pop
lods
push
jne
iret
and
scas
loopne
fisubrs
xchg
sbbl
push
and
push
push
fisttps
bnd
mov
push
push
or
imul
repz
imul
add
mov
xor
loop
mov
and
loope
imul
test
pop
mov
lock
jg
mov
add
mov
mov
fstpt
outsb
inc
cmpsb
or
insl
mov
int3
pusha
pop
movsl
imull
lods
ficomps
mov
mov
stos
dec
dec
cld
adc
out
inc
leave
fcompl
andb
mov
mov
mov
inc
fiadds
sub
leave
cmc
or
sbb
dec
and
aam
cli
xchg
adc
jnp
fdivs
ljmp
jle
push
hlt
mov
fwait
adc
add
shrb
sbb
bound
cmpsb
fsubrl
cs
and
jb
adc
insb
scas
pop
pop
pop
and
lea
outsl
xchg
push
lahf
and
adc
bound
push
shll
mov
or
pop
xchg
pop
or
xor
rcll
jp
sahf
out
and
dec
push
cmpsl
mov
imul
mov
out
int
jecxz
addr16
test
les
fistl
push
shrl
js
and
inc
ret
dec
out
jg
ret
test
jae
sbb
mov
daa
push
pop
fs
std
movsl
cmp
loope
repz
lahf
addr16
sbb
inc
inc
stos
pop
pop
imul
pusha
sbb
add
push
cmpsb
cmp
xor
outsb
add
mov
stc
xchg
popf
or
mov
jae
mov
out
xor
sub
sub
inc
in
xor
movsb
loopne
dec
adc
gs
and
jnp
mov
xor
fwait
mov
fcomps
adc
adc
pop
cmp
ss
sti
dec
xor
cmp
dec
mov
add
cld
call
out
les
cmpsb
or
adc
mov
xchg
xchg
and
mov
jl
and
das
movsl
push
cmc
lfence
inc
and
repz
add
push
ss
sahf
mov
add
in
pop
mov
and
xor
cmp
jae
imul
add
mov
push
std
push
push
sub
insl
dec
xchg
movq
push
and
xor
dec
adc
jecxz
arpl
ret
bound
rcrb
dec
sbb
adcb
loopne
les
int
pop
outsb
push
mov
aas
xor
cmp
mov
movsb
mov
push
mov
jmp
or
mov
es
ss
add
jae
ret
gs
jmp
aam
sbb
orl
xor
xor
movsl
call
js
stc
mov
pop
mov
and
and
mov
and
pop
into
xchg
je
test
sbb
lock
sbb
inc
mov
sub
inc
xor
js
or
mov
mov
mov
jmp
cmpsl
push
pop
es
cs
stc
sti
outsl
add
xor
xor
pop
mov
mov
hlt
data16
out
jo
shlb
call
stos
faddl
pop
ja
xchg
push
cmp
add
popf
or
inc
mov
in
ja
fcmovbe
xchg
cmp
enter
mov
cmc
jae
cmp
in
in
pop
hlt
mov
test
ljmp
xlat
sub
bound
push
jnp
les
fisttpll
jb
insb
ret
mov
sbb
inc
sub
ret
pop
jg
jg
es
mov
jns
fsub
sbb
dec
call
sbb
xor
pop
fnstsw
mov
gs
add
pusha
inc
sub
js
test
out
or
hlt
sbb
cmp
clc
add
ret
cwtl
fbstp
or
daa
out
cltd
dec
std
aad
lret
push
out
pop
shll
imul
mov
jae
xchg
in
hlt
repnz
sbb
jo
out
ds
and
mov
aam
sbb
xchg
push
stc
pushf
lods
cli
push
pop
push
cwtl
lea
mov
sbb
bound
clc
addr16
fldenv
cmp
jne
xchg
shrb
pop
add
push
fnstsw
xchg
mov
jno
int3
adc
je
adc
mov
jg
or
adc
inc
fnstcw
pslld
enter
shlb
fsub
repz
nop
cmpsl
dec
cmpsb
loopne
push
enter
xorb
test
loopne
test
cmp
adc
bound
popa
xor
and
inc
outsb
xchg
xchg
sbb
sarl
push
les
cmp
jge
jae
aam
xchg
shr
cmp
loopne
ss
inc
and
pop
fildl
sub
ret
lds
sbb
sbb
outsb
aas
dec
outsb
push
sarb
adcl
lret
jmp
pop
std
and
stc
push
sub
xchg
jg
arpl
ficoml
inc
ret
jo
mov
enter
adc
pushf
gs
mov
or
add
adc
xchg
push
sar
out
addl
rcrl
dec
cmp
in
push
sbb
in
jbe
call
cwtl
in
popa
xor
adc
push
add
adc
lcall
and
push
loopne
lahf
das
fcmovb
aas
scas
mov
pop
pop
push
xor
sbb
jge
sub
push
lahf
adc
inc
ja
jno
push
mov
dec
lcall
xor
popa
aaa
icebp
into
enter
adc
insl
hlt
mov
js
or
push
or
js
andl
cmc
xorl
loop
lock
iret
xchg
jge
cmc
bound
jmp
xchg
in
lahf
test
lcall
sub
push
inc
cltd
repz
fisubl
movl
popf
lea
mov
and
jbe
xor
cmp
add
adc
jno
xchg
xchg
imul
xchg
fisubs
jne
pop
push
sub
adc
stos
aas
adc
push
push
inc
sub
lods
call
cld
jno
xchg
ja
or
lahf
pop
aam
jle
out
add
imull
adc
arpl
pop
movsl
out
pop
xor
lcall
insl
cwtl
push
mov
sub
fwait
cld
sbb
imul
jmp
dec
jo
xor
pop
mov
decb
sahf
jo
cs
mov
repz
jns
enter
jae
aad
inc
add
fst
mov
out
in
lods
jecxz
sub
cwtl
pop
insb
mov
inc
push
imul
fsubl
lret
cmpsb
cs
xor
mov
adc
scas
lret
xorb
push
push
inc
lret
int
and
hlt
mov
mov
mov
ss
jle
ss
sub
adc
mov
in
hlt
ror
ja
mov
jl
pop
mov
and
pop
or
push
xor
iret
pusha
cmp
pusha
xchg
and
imul
mov
test
add
sbb
test
xor
mov
das
test
js
lret
adc
imul
pop
sub
jns
mov
into
outsl
push
icebp
adc
mov
sub
or
dec
cltd
pop
test
movl
iret
pop
cmc
inc
dec
add
or
imul
sbb
stc
movsb
fwait
mull
enter
or
pop
aas
push
fsubrp
lahf
int
mov
and
dec
or
pop
adc
lcall
push
push
aad
push
cmpsb
cld
cmp
addr16
imul
push
push
mov
xchg
cs
stc
insl
sti
mov
mov
jmp
push
or
and
xchg
int
pop
jg
sbb
pop
mov
mov
xchg
push
scas
mov
lods
push
cli
stc
lock
inc
xor
sub
push
sbb
and
push
push
add
jmp
push
dec
leave
jp
sub
jecxz
xchg
xor
sbb
faddp
xchg
jmp
sub
out
pop
lods
cmp
cmp
lods
rcll
out
into
fistps
lds
rep
mov
sarl
push
aad
xor
mov
and
push
test
lcall
adc
pop
shll
ret
add
cwtl
call
sti
jns
rolb
adc
orb
cltd
and
sti
and
push
lahf
aad
pop
cmp
fs
test
fs
push
lret
dec
jl
popf
adc
sbb
pop
rol
repnz
inc
mov
fstpl
sbb
push
je
sbb
int3
adc
daa
sbb
mov
push
cmp
clc
test
ficomps
popa
fsincos
cmpsl
sarl
dec
dec
test
shll
adc
fsts
sub
lret
into
scas
xor
icebp
in
dec
adc
pop
push
jne
imul
es
and
int
or
inc
sub
icebp
aaa
es
mov
mov
aaa
lock
nop
shrl
add
cmp
stos
sbb
pop
sbb
ret
xchg
sub
shrl
adc
pop
mov
inc
imul
dec
lea
xchg
mov
dec
or
test
push
mov
pop
mov
mov
movsl
icebp
out
es
pop
lds
bound
das
ficoms
bound
loope
sub
imul
xor
addr16
jb
xor
addl
in
mov
out
adc
paddusw
xor
rolb
stos
subb
ret
test
mov
xchg
cwtl
fildl
sbbl
test
sti
lods
mov
mov
mov
ds
pop
out
nop
sub
dec
jg
das
mov
rorl
dec
xchg
orb
lock
aas
test
pop
inc
mov
out
inc
push
adc
ja
mov
rol
adc
aas
mov
outsb
rolb
pop
add
pushf
add
sbb
mov
popa
jne
inc
pcmpeqb
ljmp
sbb
mov
imul
dec
aas
cmc
push
mov
outsb
sbb
loopne
lret
int3
mov
xlat
adc
inc
dec
mov
ja
and
cmp
and
xchg
and
fistpl
int
add
push
aam
mov
mov
mov
mov
push
cltd
fnstcw
jns
pushw
pop
ret
jp
xlat
mov
mov
in
mov
clc
jno
inc
mov
xor
dec
scas
clc
test
outsb
or
loope
addr16
data16
scas
cmp
xor
mov
or
xor
adc
je
mov
mov
push
icebp
popf
push
cmp
loop
or
int
jge
cwtl
pop
ficomps
xchg
sbb
jmp
mov
fcomip
jbe
out
push
pop
cmp
scas
sbb
mov
cs
daa
ss
push
das
out
daa
xchg
xchg
mov
mov
lds
xor
mov
xchg
pushf
mov
cmp
rorl
sub
das
inc
xlat
push
setge
lcall
test
rcl
imul
push
adc
mov
rorb
lea
sbbb
and
mov
mov
push
movsl
add
cwtl
add
sub
lods
or
and
cli
mov
enter
and
push
scas
or
inc
divl
insl
nopl
mov
out
pop
mov
pop
lods
rcl
sub
cmp
mov
mov
push
jae
int3
push
fwait
test
flds
pushw
arpl
xor
out
adc
adc
scas
mov
cs
inc
jp
sub
addr16
xor
fadd
dec
pop
imul
je
fcmovnu
jg
insb
mulps
mov
fldt
xor
or
and
jl
mov
lods
push
pop
lcall
sbb
out
xor
outsb
shrl
arpl
cmp
jb
int
test
push
popf
nop
or
cmc
xor
sub
pusha
xchg
lret
loope
push
test
push
fldt
fidivs
repz
mov
xor
and
jp
jno
fs
or
pusha
inc
mov
hlt
repnz
out
je
icebp
dec
insl
repnz
js
mov
cmc
adc
aam
add
test
dec
xchg
imul
mov
outsl
scas
ret
lret
jne
inc
adcb
loop
cltd
mov
in
hlt
xchg
clc
dec
lcall
inc
cs
push
jp
jne
fdivl
stos
jnp
int
mov
ds
lods
add
ss
mov
popf
loopne
call
or
push
pop
movsl
es
xor
cmp
insl
stos
add
js
add
lock
mov
movsb
mov
fisubl
pop
fisubrs
xchg
mov
mov
loopne
jmp
sbb
jb
in
add
popa
and
inc
outsb
inc
in
or
enter
leave
in
xchg
divb
sub
xchg
inc
dec
adc
cli
sahf
mov
fsts
jns
or
xor
out
jno
jae
push
les
push
rolb
adc
in
daa
aaa
inc
mov
out
lahf
in
jmp
pslld
ret
sahf
mov
cmpsl
imul
and
push
sub
sbb
push
push
jns
cmp
cmpsb
cmpsb
sbb
dec
sbbb
das
push
hlt
push
pop
jl
sbb
xchg
adc
push
sbb
clc
inc
ds
fdiv
test
add
add
jb
xor
iret
aad
cmpsl
fcompl
pop
pop
and
js
dec
insb
mov
cmp
call
sahf
add
inc
push
push
adc
in
push
add
imul
fwait
mov
aad
lcall
cmp
int
repnz
repz
mov
std
inc
rcl
or
subl
subb
jnp
inc
cmpl
inc
pop
rclb
test
sub
mov
fdivs
pop
outsb
xchg
mov
das
popa
rcrl
xchg
subl
pop
roll
xorl
xchg
add
rcll
mov
xlat
in
inc
andl
rorb
xorb
and
loop
mov
out
andl
push
xchg
ljmp
mov
pusha
stos
and
sbb
cwtl
adc
push
or
out
dec
scas
mov
fmuls
test
mov
in
cs
ret
xchg
xchg
std
or
jae
call
insb
push
and
aaa
subb
push
mov
cmp
add
jle
aas
adc
scas
sub
decb
mov
and
cli
fcomp
push
mov
fisubl
icebp
cmp
pop
jne
icebp
jg
cltd
add
mov
push
cmp
dec
insb
and
or
pop
jo
rcll
dec
jecxz
jecxz
sub
pop
mov
jp
sbb
mov
adc
rorl
in
cmpsl
in
cs
mov
stos
movsb
in
mov
xor
gs
pop
sbb
sub
xchg
inc
adc
ret
jno
jb
jo
xchg
pop
in
or
mov
xor
push
orb
pop
lret
jmp
xchg
arpl
cmpb
inc
in
push
insl
je
xchg
clc
enter
cmpsl
mov
push
jae
jns
in
mov
in
repz
cmp
sub
ja
nop
mov
stc
inc
das
xchg
imul
aas
jecxz
inc
mov
stos
inc
fnstsw
push
repnz
add
fbstp
out
shlb
push
test
sbb
jbe
sti
mov
cmpsl
imul
push
dec
xor
mov
adc
scas
rcrl
repnz
mov
clc
inc
out
icebp
lahf
cmpsb
adc
jge
je
or
cwtl
adc
popf
jbe
mov
pop
ret
in
cwtl
and
in
jle
jo
mov
jmp
xor
push
sbb
idiv
fistpl
push
pop
lahf
test
cmp
je
mov
add
in
dec
enter
xchg
xor
pop
lar
mov
sbb
in
jle
ret
out
sub
add
shr
pop
xor
sbb
movsl
test
cmp
loopne
pop
arpl
orb
mov
je
dec
sbb
out
std
cmp
or
or
push
push
out
inc
sbb
dec
and
xchg
dec
pop
adc
in
adc
das
xchg
aas
lahf
push
dec
jmp
out
or
xchg
ds
jbe
int
leave
dec
fwait
mov
cmpsb
in
cmc
mov
adc
mov
pop
cmp
cs
js
testl
push
add
addr16
ljmp
cld
ja
or
adc
or
cltd
xchg
int3
mov
jbe
push
icebp
xchg
inc
popa
mov
fldt
pop
mov
out
outsb
xchg
mov
js
push
jne
les
lods
pop
aam
scas
mov
adcb
ffreep
mov
mov
mov
jecxz
call
lods
xchg
notl
xchg
lea
push
sbb
test
inc
aam
gs
xchg
dec
cmp
pop
rclb
outsb
popa
xor
xor
xor
push
bound
or
daa
aam
int3
push
sbb
scas
mov
xor
js
mov
jmp
pop
sbb
add
jmp
in
faddp
sahf
iret
mov
push
cmc
stos
aaa
mov
jecxz
mov
pusha
xchg
dec
add
pop
inc
lahf
inc
jge
je
in
lret
jae
daa
insb
subb
loope
div
pop
ficoml
xchg
xchg
hlt
icebp
addr16
jg
pop
notl
cmp
mov
sbb
nop
movsb
lea
les
popw
insb
mov
pop
lahf
push
es
jl
inc
inc
push
loopne
jecxz
insl
arpl
stos
mov
aam
cmc
insb
adc
je
inc
push
call
popa
push
fdivl
arpl
cmp
in
cwtl
lea
in
push
inc
xor
leave
ljmp
xchg
mov
aaa
ja
adc
popa
lahf
dec
iret
sbb
nop
mov
xor
arpl
icebp
insl
das
popf
es
shrb
and
jnp
les
adc
lods
push
cmp
pushf
in
mov
popf
out
sbb
out
dec
insb
mov
adcl
adc
mov
push
lods
cmpsl
into
lods
sbb
stos
fiadds
xchg
inc
pop
rolb
stos
loop
xchg
dec
inc
insb
xor
data16
push
sbb
loopne
push
jnp
repnz
bnd
lcall
scas
cmpsb
cltd
test
dec
fcom
sbb
jmp
sub
add
mov
js
cmpsl
repnz
sub
mov
push
xor
and
std
loope
bound
mov
insb
scas
or
shlb
hlt
mov
rol
out
iret
sub
jae
push
or
adc
xor
mov
jle
int3
icebp
rolb
inc
lret
inc
mov
clc
cmp
cmp
jle
lret
sahf
mov
insl
jbe
mov
add
dec
push
sar
in
lea
ljmp
insl
outsb
movsb
jl
xchg
cwtl
xlat
or
cwtl
jge
outsb
pop
dec
mov
fisubl
mov
neg
jo
sbb
add
jnp
repz
scas
mov
stos
rolb
dec
fcomp
dec
aam
mov
sbb
pop
mov
aad
stos
lods
jns
jle
stos
pop
lods
ljmp
aad
and
lods
imul
cs
pop
xchg
xchg
loop
sahf
jae
outsl
cmp
cmp
clc
cmp
pop
pop
cmc
pop
sti
pop
adc
mov
add
jbe
xchg
mov
hlt
dec
push
xor
add
les
mov
dec
sarb
fnstenv
scas
in
dec
mov
inc
mov
pop
xor
cmp
mov
sbb
mov
fbld
push
fstpl
cmp
rol
stos
int3
test
xor
outsl
ret
dec
shrl
mov
adc
adc
cmp
jae
pop
sbb
scas
dec
adc
push
jge
xchg
adc
testl
scas
sub
jne
dec
jno
mov
cs
jl
mov
arpl
in
push
or
xlat
add
lret
xor
stc
add
sub
push
stc
aam
int3
xor
out
jae
imul
pop
ja
xor
mov
cltd
adc
ret
cld
jbe
xor
push
ja
iret
sbb
pop
mov
iret
sahf
pop
xchg
xor
je
cltd
out
sahf
fildl
mov
aas
cli
sbb
std
xchg
inc
mov
sub
ficompl
push
mov
je
mov
push
imull
mov
movzbl
or
adc
test
pop
sub
sbb
les
insl
bound
fldl2t
cmp
cs
dec
movsl
pop
negb
lret
pusha
push
jb
sub
dec
lods
arpl
dec
push
push
in
add
or
arpl
xlat
test
cmp
js
ret
call
movsl
mov
enter
pushf
mov
xchg
cli
sahf
fiadds
xlat
sub
sub
das
xchg
xor
mov
jle
pop
aaa
or
mov
icebp
cltd
cmp
and
mov
and
cmp
pop
inc
shl
push
xchg
and
mov
jbe
xor
mov
pushf
pop
pushf
pusha
js
jmp
push
cmp
inc
dec
sbb
mov
push
into
cmp
mov
loopne
pushf
fwait
ljmp
and
movsb
cwtl
outsl
movsb
movsb
jbe
jge
push
push
movl
pop
jmp
push
mov
push
mov
push
loopne
shrl
imul
adc
repnz
xchg
test
fldcw
xchg
int
call
fnstcw
cmpsl
icebp
cmpsl
lcall
ljmp
inc
sbb
inc
pop
mov
pop
sub
lock
sub
mov
lret
rorl
out
pop
es
jns
fbld
sarl
gs
lods
aaa
paddd
les
shlb
push
ja
dec
pop
jbe
inc
mov
nop
insb
pop
xor
popf
loopne
es
cmp
repnz
mov
addr16
ds
lret
fs
popa
movl
loope
daa
push
and
data16
jmp
repz
pop
or
movsl
xlat
jo
mov
jbe
ljmp
ret
cmc
mov
or
fwait
insb
sbb
mov
es
pop
xchg
adc
fs
sbbb
out
fildl
stos
outsb
and
arpl
lock
fcomps
xor
mov
mov
popa
jmp
inc
mov
fs
nop
into
push
or
lret
stos
mov
aam
mov
inc
dec
cltd
div
mov
out
bound
test
inc
cmp
sbb
mov
outsb
mov
xchg
xchg
out
call
dec
xchg
jmp
jg
mov
cmpsb
and
sub
mov
popf
add
int3
add
xorb
out
mov
filds
out
jnp
lea
adc
scas
sbb
std
fimull
xor
popa
inc
repnz
fs
sub
lret
sub
push
cmp
sbb
inc
push
shll
lcall
stc
shlb
in
fmuls
xorps
lods
inc
push
mov
mov
stos
cmc
mov
lods
cmpsl
pushf
cwtl
cmp
dec
movsl
cmp
pop
decl
in
xor
push
dec
adc
pushf
fldenv
cmc
or
cmpsl
test
and
lret
or
adc
mov
int3
inc
ret
es
dec
xor
pop
and
pop
in
mov
insb
in
fistpll
nop
pextrw
sbb
sbb
fs
dec
xchg
fs
testl
jbe
stos
mov
mov
ja
jg
jb
cmp
aas
adc
rcrb
js
jp
mov
or
sub
shlb
fidivs
pop
xor
lock
fcomps
outsl
push
add
int
add
xor
loope
scas
xor
mov
mov
dec
jne
jg
orl
sub
push
repnz
addl
inc
mov
repz
dec
sub
pop
mov
aas
je
push
gs
rol
jecxz
inc
push
fldz
fidivrs
cmp
bound
in
xchg
sub
nop
fsubp
sbb
cmp
adc
sbb
aad
or
icebp
mov
jae
mov
out
sbb
mov
bound
xor
pop
mov
mov
sub
aam
scas
mov
imul
adc
inc
xor
popf
je
pop
sbb
mov
or
shl
out
pop
jo
jp
fdivrl
mov
push
ljmp
int
les
add
jmp
dec
lcall
adc
add
jbe
inc
push
push
sub
xor
repnz
adcl
jl
popf
cltd
test
lods
movsl
push
test
enter
xchg
push
fcmovnb
add
loopne
xor
cwtl
push
mov
fists
fimull
movsl
sbb
cld
jne
out
out
cmp
mov
cwtl
mov
sub
push
shll
mov
push
sahf
jns
scas
jmp
mov
mov
mov
mov
lods
lock
xor
mov
adc
gs
mov
add
divb
pop
in
mov
les
push
pop
xchg
xchg
push
loop
push
scas
loopne
inc
sub
out
arpl
fcompl
push
in
adc
pop
shr
scas
pushf
call
adc
add
bound
subl
xor
xchg
rcl
popa
jg
int
mov
mulb
movsb
and
mov
out
fmul
aaa
mov
sub
out
xchg
cmp
sbb
cmp
adc
stc
aas
fmuls
mov
or
pop
jbe
mov
xor
outsl
in
mov
sub
adc
cmp
mov
int
lock
jns
or
push
mov
in
xchg
les
xor
call
in
dec
sub
pop
jns
mov
data16
cmp
out
jno
adc
lock
cltd
repz
lods
jmp
pop
mov
sub
mov
hlt
dec
repnz
and
cmp
push
mov
and
sbb
jne
mov
adc
scas
or
mov
fisubs
into
mov
cmc
pop
aam
lods
mov
pushf
sub
aaa
jge
pop
decl
or
insl
mov
jnp
data16
sti
popa
push
stos
or
and
cmp
arpl
push
xchg
cmpsb
repz
das
mov
pop
es
aad
mov
adc
add
arpl
test
popl
dec
sub
mov
aad
fimull
jmp
cmp
mov
repnz
jns
push
mov
dec
mul
fucomp
fwait
icebp
mov
pop
push
data16
mov
stc
mov
mov
cmp
movsb
pop
fisubrs
push
in
xor
adc
movsb
pop
iret
sbb
add
shlb
insb
in
jl
dec
fwait
cmp
stos
cmp
xchg
mov
and
ret
dec
push
shr
out
lds
push
mov
jne
sbbb
leave
adcb
or
lret
adc
fdivrs
sub
cmp
sbb
cmp
cmpsl
and
inc
int3
loopne
pushf
push
insl
int3
sar
add
jnp
in
int
xor
mov
mov
and
xor
inc
lret
ds
pop
fsubrl
cmp
iret
lcall
cmp
pop
popf
pop
mov
leave
movsb
mov
mov
xor
mov
addl
dec
push
int
jo
adc
out
pop
cltd
addl
stc
xchg
in
xchg
mov
pushl
xchg
sbb
in
and
push
imul
pop
pop
sbb
ljmp
aam
cmp
inc
loopne
mov
and
xor
arpl
dec
pop
adc
insl
or
inc
mov
fistpll
out
or
add
lods
xor
mov
cwtl
sbb
xchg
jb
out
das
int3
test
js
mov
or
movsw
pop
ret
mov
mov
lret
jecxz
xchg
rorl
lret
ficoms
movl
mov
shll
sub
pop
or
daa
nop
push
push
sbb
pop
pop
lds
jnp
mov
xchg
movsl
mov
dec
out
in
xchg
jp
iret
mov
repnz
xor
sbb
adc
dec
stos
shll
sub
pop
fwait
je
and
daa
sbbb
stos
jno
pop
es
pop
xor
cli
jmp
mov
imul
outsl
outsl
aad
push
add
bound
loope
push
xor
or
test
xchg
stos
jae
fmulp
fldenv
cmpsl
jb
loop
sub
xor
jecxz
add
ret
popl
test
insb
daa
shll
jle
pusha
shrl
xlat
js
dec
sbb
adc
iret
mov
rcll
lret
or
pop
popa
popa
aad
pusha
lea
adc
mov
cmp
and
aaa
push
cwtl
popf
push
mov
jne
sbb
shll
xchg
movsl
imul
aaa
pcmpgtd
sbb
lods
loop
add
fidivl
les
jae
mov
int
jb
cmc
jae
xor
or
enter
shl
inc
jo
mov
jb
push
aad
pop
xchg
lret
push
jbe
lret
jnp
insb
insl
mov
xchg
pop
dec
mov
rorl
inc
out
int3
hlt
add
mov
inc
rcr
int3
out
dec
jo
pushf
xchg
fdivl
movsl
add
inc
mov
pop
ljmp
pop
out
add
stos
out
es
daa
push
mov
jo
repz
xchg
sub
arpl
add
sbb
jge
nop
icebp
mov
rcr
sub
mov
and
add
imul
pusha
xor
aaa
xchg
les
leave
cmpsl
pop
test
xor
sahf
lods
rorl
ficomps
sub
or
sbb
repnz
or
ss
es
nop
xorb
pop
int
out
mov
mov
mov
adc
pop
xchg
push
cmpsb
ret
xchg
dec
mov
std
inc
xor
mov
rolb
ds
shlb
jmp
int
adc
pusha
and
jp
sub
cmp
repz
xlat
mov
pusha
stos
loop
repz
jge
imul
dec
jno
aam
pop
pop
push
push
pop
sbb
sbb
ja
mov
xor
aam
jb
in
push
adcl
xchg
dec
mov
fs
add
mov
je
xor
stos
icebp
lcall
add
rolb
push
lds
call
dec
push
fsubr
negb
popa
pop
jecxz
sub
cmc
movb
out
cld
icebp
mov
adc
mov
pusha
dec
xchg
inc
mov
inc
sbb
sahf
xchg
mov
sbb
popa
push
jg
lret
cltd
nop
mov
lret
mov
js
in
hlt
test
enter
dec
dec
int3
inc
pop
loope
or
in
xor
jmp
sbb
loop
jns
pop
inc
shlb
icebp
ljmp
shrl
and
adc
shlb
pop
aad
mov
daa
push
dec
adc
push
mov
cmp
sub
and
in
push
out
dec
mov
add
jp
push
dec
js
cwtl
adc
orl
dec
and
gs
ret
mov
loopne
mov
fsubp
in
orb
fidivl
mov
test
or
sub
push
xchg
scas
jl
push
and
pushf
mov
jb
push
mov
fidivl
jp
add
iret
stc
pop
push
stos
mov
popa
or
popl
mov
ljmp
push
push
or
stos
or
and
mov
test
enter
iret
sub
add
push
pop
cmp
data16
mov
pop
cmp
arpl
push
les
aaa
xor
mov
into
jbe
or
add
mov
lret
jl
xchg
sub
cli
push
fldenv
add
nop
aam
push
sahf
sbb
dec
add
hlt
sbbb
xlat
push
mov
int3
dec
cmp
fnstsw
jmp
xchg
add
add
fcompl
mov
mov
scas
add
sub
xchg
cld
or
push
bound
adc
xorl
in
fsubr
iret
sti
test
pop
stos
aam
shrl
movsb
sbb
repz
dec
mov
cmp
fld
in
push
push
les
pop
xchg
pop
cs
mov
fs
jge
or
repz
lods
js
pop
add
fisttpl
mov
je
jecxz
test
leave
mov
and
mov
clc
and
sti
push
shlb
divb
shl
xlat
fwait
mov
xchg
loopne
pop
dec
push
popf
push
xchg
in
xchg
and
mov
push
pop
pop
mul
dec
test
adc
add
lahf
daa
movsl
inc
xor
sub
movsb
push
in
cli
push
adc
sub
jmp
mov
push
stos
sbbb
cmp
or
push
mov
sti
mov
inc
aas
ret
sub
sarl
aam
fxsave
cmpl
add
dec
clc
lcall
mov
std
dec
filds
mov
pop
inc
addl
push
dec
outsb
cmp
adc
aas
addr16
push
std
das
and
mov
inc
test
push
jbe
jl
inc
in
push
sbb
inc
mov
inc
cmp
out
leave
or
push
outsl
repz
test
icebp
pop
test
mov
jnp
hlt
addr16
arpl
jb
jge
movsl
xchg
pop
xchg
adc
push
and
or
movsb
test
jecxz
adc
and
rolb
jb
shll
add
incb
cs
mov
cmpsl
cmp
cmpsb
stc
enter
lock
pop
fidivrs
push
jg
loopne
push
pop
xchg
xorb
enter
xchg
cwtl
adc
in
xchg
ficomps
pop
mov
and
shl
out
push
add
call
mov
mov
loop
fstl
xchg
jl
pop
jecxz
xchg
mov
jae
out
ret
ss
in
sbbl
and
lock
cmp
push
ret
in
divl
jecxz
jge
loopne
pop
pop
push
xor
cld
out
xor
rorl
int3
mov
out
insb
leave
fs
mov
shll
sbb
sbb
push
pop
cwtl
inc
xor
enter
push
push
push
aam
stc
dec
adc
jle
pop
pop
imul
push
inc
add
pushl
inc
iret
pop
popf
jecxz
cwtl
cmp
mov
cmpsb
and
and
jae
cld
mov
xor
mov
ds
in
cmc
es
jae
cmp
adc
movsb
pcmpeqw
lods
arpl
dec
aaa
and
add
sbbl
add
testb
jnp
mov
xor
or
shlb
in
int
fsubrs
jae
mov
add
push
xchg
push
popa
cmp
push
fcmovne
cmp
cmp
or
loop
test
mov
cmp
or
push
imul
xor
es
push
or
aam
movsl
test
dec
fisttpl
ss
out
int
jmp
dec
aas
stc
jne
addr16
and
jge
inc
mov
adc
dec
cwtl
lods
pop
and
add
push
pop
ficomps
adc
out
ja
mov
fldl
enter
lahf
ffreep
mov
sti
leave
inc
push
je
or
push
push
fsubs
arpl
inc
xor
adc
lods
adc
mov
test
out
arpl
and
pop
xor
xchg
lods
xor
das
fsub
push
push
mov
adc
daa
cli
dec
rcrl
mov
loope
jnp
adc
dec
lret
jno
xchg
outsl
pop
push
leave
xchg
std
pop
in
pop
xchg
pop
cmp
dec
lea
es
jecxz
adc
pop
icebp
mov
call
sbb
dec
jle
cmp
and
je
mov
inc
adc
push
or
jmp
je
cli
shll
cmpsl
ljmp
push
cld
push
dec
test
shll
ljmp
movsb
neg
loop
xchg
mov
jle
or
add
popa
xlat
sub
add
nop
aam
push
pop
cmc
xchg
fldenv
jb
xor
xor
in
jne
inc
xchg
adc
ja
xchg
inc
mov
pop
mov
inc
pusha
mov
sub
adc
or
insl
sbb
cmp
pop
insl
push
push
lock
int
inc
jbe
rorb
loop
add
test
and
jns
sub
jmp
fwait
movsb
mov
std
negl
jge
loope
push
pop
push
push
lods
xchg
cmc
dec
xor
movsb
or
and
mov
or
cmp
dec
push
bnd
ror
je
arpl
add
fstl
pop
pop
jae
jp
fildll
dec
mov
pop
daa
ret
icebp
xchg
insb
cmpsb
shlb
mov
sarb
cmp
ret
or
push
mov
in
loopne
cmc
jl
arpl
cmp
cmp
or
or
sub
out
and
jnp
xchg
mov
ja
xchg
rclb
mov
fwait
insb
hlt
inc
out
daa
fxch
mov
push
or
lods
push
int
imul
inc
inc
fs
mov
sbb
std
mov
les
or
jecxz
mov
pop
aas
cmp
daa
xor
sbb
ret
mov
pop
sahf
xor
test
mov
cmp
or
mov
inc
sub
iret
fwait
push
inc
rcrb
stos
lcall
push
ficoml
dec
push
lret
push
push
dec
hlt
push
lret
sti
call
loop
sub
push
repnz
pop
lret
outsb
sub
fsubrs
jbe
mov
gs
mov
pushf
imul
pop
das
jmp
std
mov
push
push
mov
cltd
push
fs
inc
aas
cwtl
popa
aas
and
fdivrl
movsl
xchg
das
mov
ja
add
lcall
mov
dec
shll
aam
pop
popa
mov
ljmp
hlt
mov
fwait
and
jns
dec
mov
dec
jge
int3
add
dec
cmpsl
outsb
and
insb
cld
add
add
adc
or
rcll
std
xchg
out
int3
cmp
cmovbe
stos
dec
xchg
inc
inc
push
test
in
jb
cmc
cli
lods
xchg
lcall
xor
aas
shll
xchg
xor
cmp
shlb
scas
sbb
pop
pop
mov
hlt
add
cld
int
add
cld
adc
add
std
cs
xchg
or
aad
sub
cmpsb
push
cmp
aam
repz
lcall
test
pop
jb
or
inc
stos
push
stos
adc
add
stc
push
dec
or
sbb
mov
pop
dec
dec
sti
ss
cmpb
ret
into
cltd
adc
add
or
push
jg
pop
ficoms
cmp
mov
inc
repz
mov
into
bound
xor
jns
adc
mov
clc
mov
int
push
mov
pop
mov
cmp
cli
and
push
in
push
cmp
mov
xchg
jnp
sbb
leave
cwtl
ljmp
loope
fidivrl
fsubrs
cs
push
mov
push
push
inc
dec
inc
shlb
lcall
repz
adc
imul
or
andl
mov
dec
fisttpl
inc
ljmp
dec
sbb
cmp
out
inc
cmp
pusha
sbb
jg
aas
xchg
or
ficompl
test
ljmp
aas
pop
jmp
movb
minps
dec
inc
lret
push
imul
xchg
dec
loope
inc
inc
or
xor
xor
addr16
mov
xchg
stos
mov
cmp
int
lahf
loopne
xor
pop
mov
push
jne
dec
arpl
xchg
xchg
jns
sub
mov
das
pushf
inc
sub
xor
gs
cmc
sub
mov
repz
cli
cmp
pop
sub
cmp
sbb
sbb
fidivl
cmp
mov
jo
subb
insb
mov
jo
push
shll
dec
stos
dec
cmp
sub
repz
pushf
or
insb
or
aaa
mov
and
mov
and
pop
mov
out
outsl
lret
jg
mov
mov
loop
outsl
and
scas
cld
sahf
lret
adc
test
shll
add
mov
clc
add
cmp
cs
outsl
xchg
enter
mov
jae
stos
fs
mov
rolb
pop
push
jmp
add
ret
mov
inc
mov
lea
icebp
fildl
adc
lds
xor
adc
fwait
sti
fmull
scas
sub
push
rclb
mov
stos
cs
cli
jecxz
push
xchg
mov
int3
frstor
nop
and
and
rdpmc
fmuls
fld
dec
cmp
mov
pminsw
out
mov
js
jno
lods
adc
adc
lahf
pop
aad
cltd
pushaw
adc
mov
clc
push
push
push
sub
push
ret
inc
fcmovnb
popa
fisttpll
incl
scas
xchg
mov
cmp
les
cmp
push
loope
mov
out
inc
inc
pop
cmp
int
adc
cmc
sbb
lods
aas
inc
fdivs
inc
fcomip
test
insb
cmp
xorb
push
adc
stc
ret
je
cmp
lods
addl
mov
call
orl
xor
dec
cld
or
push
mov
sub
pop
ljmp
and
sti
popa
push
inc
inc
inc
inc
outsl
xor
cmp
pop
cli
mov
jbe
int
add
aas
xorb
int
imul
mov
aas
xor
xor
lods
pop
adc
add
cltd
ret
push
push
pop
mov
loopne
cli
xor
inc
xor
mov
xchg
mull
push
pop
rolb
sub
xchg
jge
lcall
jns
inc
stos
adc
adc
jmp
mov
aad
xchg
or
loopne
mov
pop
test
in
scas
xchg
cwtl
cmp
jbe
les
xor
pop
ss
add
sub
add
pop
bound
xchg
push
in
or
dec
sub
testl
outsb
repz
jg
mov
lods
sbb
movsb
call
push
push
fbld
das
dec
xor
sbb
xor
cltd
pop
in
xor
inc
xor
fdivrs
mov
pop
out
test
mov
addr16
cmp
lret
adc
loop
icebp
out
cmpsb
mov
fucompp
leave
lds
insl
arpl
xchg
add
xchg
jecxz
enter
repz
xor
push
mov
gs
mov
sub
cli
std
cmc
jo
mov
push
sti
cltd
fmul
dec
stos
shufps
fiadds
outsb
test
in
test
aad
sbb
aas
sub
sbb
mov
push
arpl
sub
jbe
lea
loope
inc
fsubrs
inc
jae
mov
sub
sub
mov
cmpsl
mov
icebp
cmpsl
gs
test
das
jbe
das
decl
sbbb
rcr
and
fistps
das
pop
scas
cmp
pop
adc
shrl
sub
lods
ret
shrb
jnp
xchg
pop
push
add
outsb
ret
into
les
mov
inc
xlat
xor
ja
pop
orb
pop
jbe
mov
add
leave
and
cmp
inc
outsb
pop
subl
mov
pop
mov
in
xchg
inc
sbb
lods
mov
je
das
pop
fnclex
ja
xlat
xchg
push
cmpsl
add
adc
sbb
fwait
adcb
sbb
test
clc
outsb
sub
imul
jecxz
cmpsl
pop
out
scas
jnp
pop
ficompl
or
test
nop
pop
aad
lods
das
jp
into
pop
jnp
fsubr
js
sbbb
push
pop
push
sahf
cmp
aad
or
or
out
sbb
jns
sti
push
imul
mov
pop
pusha
cmp
jecxz
push
ss
add
rclb
fsubrl
out
testl
bnd
push
mov
or
jo
jnp
lcall
js
sbb
pop
test
mov
and
mov
int3
out
push
xchg
pushf
pushf
sub
sarl
in
mov
inc
mov
and
xchg
or
xor
inc
adc
popf
out
jp
mov
mov
jo
in
sbb
imul
lcall
into
pop
jp
push
mov
fisubs
and
cmp
xor
cmp
int
add
test
and
lea
jle
fadd
vcvtsi2ss
adc
and
into
gs
jb
push
mov
inc
cmp
mov
lret
or
xchg
inc
push
loop
stc
testb
scas
push
repz
and
or
mov
dec
jp
mov
inc
das
lock
insb
pop
loope
out
adc
mov
sub
jae
ret
cltd
mov
nop
mov
ljmp
mov
testl
adc
mov
aas
jecxz
imul
rorb
mov
shlb
jae
jg
lret
out
mov
into
cmp
leave
iret
mov
jecxz
enter
sbb
or
addr16
fstpt
xchg
add
dec
mov
es
cmp
jb
arpl
mov
inc
cmp
pop
jae
int
repnz
in
ret
xchg
sub
xchg
lods
fldenv
mov
sbb
test
push
adc
dec
or
fsubs
das
add
les
mov
or
sbb
pop
lods
sub
adc
sbb
pop
fistpl
pop
adc
push
cmp
mov
mov
xor
pop
jge
add
dec
call
out
std
cmp
dec
mov
inc
jns
sub
adc
mov
outsb
sbb
sbb
popf
mov
inc
cmp
in
sub
les
test
outsl
leave
addl
iret
jl
test
jno
lret
sbbl
ljmp
xor
push
in
xor
sub
jns
pop
cmovb
mov
xor
adc
roll
sbb
iret
mov
lods
test
cwtl
ret
icebp
sbb
aaa
incl
insb
mov
arpl
js
pop
scas
push
lret
pop
cmpsl
pushf
push
fs
sbb
sahf
out
mov
xor
mov
addl
sub
loop
inc
scas
pop
rcrb
mov
cmp
flds
stos
xchg
daa
cmp
das
xchg
and
popf
movlps
xor
pop
and
in
insb
inc
ret
mov
sub
fistpll
js
push
call
test
add
dec
push
lcall
and
pop
fstl
and
push
mov
sbb
aaa
leave
negl
popfw
jle
imull
pop
movsb
js
sbb
repz
aas
loopne
jmp
in
stc
mov
adc
cld
add
and
inc
xor
aas
jne
cmp
push
fstl
push
xchg
adc
xor
mov
cmp
mov
fcoms
pop
lock
sub
add
pop
lret
cli
pop
jge
out
jle
xchg
sbb
push
out
gs
mov
pop
pop
push
test
sbb
out
sbb
jp
movsb
out
les
and
mov
out
xchg
mov
rclb
cmpsl
push
dec
clc
mov
mulb
add
out
sub
xor
arpl
hlt
les
