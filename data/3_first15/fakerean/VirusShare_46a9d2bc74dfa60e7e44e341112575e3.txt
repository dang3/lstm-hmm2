add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
dec
dec
inc
add
decl
decl
test
mov
sub
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
out
es
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
sbb
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
mov
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
sub
add
add
add
test
add
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
mov
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
pop
push
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
cmp
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
cmp
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
aaa
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
dec
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
jge
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
ss
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
xor
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
daa
pop
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
push
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
or
and
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
in
inc
add
sbb
incl
sarb
mov
mov
inc
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
test
les
and
lea
call
mov
cmp
jne
mov
mov
cltd
pop
inc
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
mov
mov
jmp
mov
push
mov
mov
call
mov
repz
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
add
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
insb
push
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
cmp
sub
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
push
push
call
mov
add
clc
movsl
mov
ja
gs
add
mov
add
repnz
mull
mov
mov
add
mov
add
add
mov
lret
jecxz
mov
add
add
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
repnz
mov
icebp
jnp
add
popa
add
add
ret
shll
add
cmc
hlt
add
add
add
add
lock
rclb
mov
addl
add
add
add
in
movsl
add
enter
add
add
add
pushf
cmpsb
out
test
add
add
add
add
mov
lea
pop
popl
push
push
push
push
push
call
add
xchg
add
test
lret
test
add
mov
mov
add
add
add
add
mov
add
mov
add
add
rcrb
add
add
add
lock
add
rcl
add
fs
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
call
cld
cltd
xchg
mov
ljmp
fs
push
hlt
add
add
pushf
add
add
add
mov
test
mov
add
add
push
aad
test
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
lods
add
nop
in
movl
add
add
xchg
add
add
add
add
add
add
add
add
movsl
add
stos
add
out
lcall
stc
mov
testb
add
mov
push
jle
mov
push
mov
lea
pop
call
push
push
push
push
call
mov
add
xchg
push
add
push
add
add
cli
cwtl
jl
add
call
add
add
or
mov
hlt
lea
pop
call
push
push
lea
push
push
lea
push
call
add
rolb
add
push
pushf
add
roll
int3
jns
add
je
add
add
into
loop
fildll
add
popa
sahf
add
add
jae
add
add
js
add
add
add
mov
movsb
je
push
mov
adc
lahf
insb
add
push
push
push
call
notl
fs
data16
add
out
add
add
out
push
add
xlat
xchg
pop
ja
add
add
enter
add
jp
jns
mov
jno
fmull
pusha
add
add
push
push
lea
push
push
push
lea
push
push
push
call
push
lods
jecxz
gs
add
add
mov
add
jno
mov
pop
push
add
sahf
mov
push
add
orb
pusha
and
inc
in
push
push
push
lea
push
push
push
push
lea
push
call
add
into
insb
ficomps
out
jno
jmp
add
mov
test
mov
mov
aad
add
loop
add
fs
rolb
add
cwtl
jle
ficompl
jmp
jl
push
pop
scas
cli
sti
mov
test
pop
jmp
mov
add
sti
in
pushf
ja
shll
hlt
lea
pop
mov
push
push
push
push
push
push
lea
push
call
add
lret
pusha
add
add
testb
out
stc
fdivrs
add
add
add
loopne
repnz
popa
jo
push
push
add
mov
std
fs
push
test
int3
add
add
add
mov
stos
loop
add
mov
add
mov
add
add
add
mov
lea
pop
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
jne
add
xchg
add
faddl
scas
insb
xchg
add
add
mov
add
add
mov
add
hlt
shll
add
add
out
push
rclb
add
add
xchg
cmp
cld
lea
pop
add
push
push
push
push
push
lea
push
lea
push
call
add
cmc
into
xchg
add
jmp
pop
loop
lods
mov
mov
add
push
out
mov
test
add
add
stc
add
add
test
movsb
std
push
add
mov
jne
test
jmp
add
call
add
test
int3
add
jnp
add
add
data16
add
push
push
push
push
call
xchg
pop
push
out
fsubs
add
test
add
repnz
xchg
add
xor
hlt
loop
mov
lock
add
nop
add
add
add
mov
pop
add
loop
add
add
add
out
mov
add
test
add
add
gs
add
lret
nop
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
imul
rcll
fdiv
jge
roll
add
jmp
fnsave
add
add
popa
data16
add
loopne
hlt
lea
pop
xor
push
push
push
push
push
call
lret
add
xchg
mov
add
loop
js
icebp
fwait
lcall
add
mov
js
push
lret
pop
add
sti
out
clc
out
jge
cwtl
mov
out
mov
push
out
test
mov
lea
pop
add
push
push
xor
shr
ror
add
push
or
inc
add
rol
sub
dec
xor
add
add
pop
not
add
shl
shl
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
fwait
add
shll
rolb
mov
jge
insb
ret
mov
stc
jb
movb
jmp
add
in
jge
mov
add
pushf
movsl
push
loop
add
add
stos
add
popa
jns
fwait
movsl
add
add
decb
push
add
std
add
add
add
pop
pushl
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
negl
mov
insb
mov
mov
add
mov
add
jb
outsl
outsl
add
mov
add
add
add
add
popa
testb
xlat
add
add
mov
add
mov
addr16
loopne
lods
add
sahf
fnstenv
add
mov
fmull
adc
add
inc
push
push
push
push
push
lea
push
lea
push
call
add
cmpsl
mov
stos
lock
fyl2x
pop
loopne
mov
add
cmpsb
out
add
mov
add
sahf
in
add
out
add
add
jae
shrl
add
add
push
test
add
pop
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
call
fiadds
add
push
add
adcl
xchg
pop
test
movsb
add
add
imul
out
xchg
add
fwait
add
add
test
rcrl
add
cld
add
add
add
mov
lea
pop
movl
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
add
mov
ljmp
jae
repnz
add
push
nop
mov
jle
mov
mov
lea
pop
lea
push
push
push
push
push
push
call
add
add
in
add
add
jne
icebp
arpl
lea
add
add
add
add
les
xchg
jne
bound
ja
imul
out
mov
mov
mov
add
outsl
leave
add
mov
roll
add
mov
add
add
bound
mov
add
mov
mov
pop
mov
mov
add
in
add
add
mov
add
pop
push
pushl
push
push
push
push
push
push
call
cmc
lret
push
push
add
add
add
add
pop
addb
mov
mov
add
fstp
add
jge
add
je
jnp
imul
add
in
lea
mov
addb
add
movb
mov
add
mov
lea
pop
pushl
push
push
push
lea
push
push
call
mov
add
add
imul
enter
mov
faddl
in
add
addl
test
mov
pop
add
add
add
int
add
pop
mov
gs
jne
andl
add
shl
push
test
mov
lea
pop
call
pushl
push
lea
push
push
push
push
call
test
add
ror
jge
cwtl
add
iret
test
add
add
jmp
jne
mov
push
cmpsl
int3
mov
add
add
icebp
lods
leave
lods
add
add
add
lahf
jns
add
jmp
mov
add
cmpsl
add
iret
into
add
add
pop
scas
jl
leave
jp
fstpt
out
add
pop
pushl
call
push
push
ror
shr
sub
push
or
inc
add
rol
shr
xor
sub
lea
pop
pop
push
push
push
push
push
lea
push
lea
push
call
mov
pop
mov
lods
rcr
add
add
ja
pushf
shrb
fiaddl
add
loop
xchg
add
mov
jp
add
add
mov
data16
into
mov
out
cmpsb
add
add
mov
add
add
add
pop
add
data16
pop
mov
add
cmc
add
add
mov
lea
pop
pushl
call
push
push
push
push
call
jns
pop
insb
add
add
fisubs
push
movsl
pop
testl
lods
std
sti
add
add
scas
add
mov
lods
icebp
into
jp
mov
add
in
test
subl
add
stos
lea
lods
lods
out
fnstcw
add
xchg
jae
add
roll
add
mov
fwait
add
add
xchg
lods
add
in
fmull
inc
push
push
add
not
inc
push
or
inc
add
not
inc
sub
sub
pop
xor
shl
pop
push
push
push
push
push
push
call
add
add
lods
ficoml
loopne
push
push
neg
iret
jecxz
scas
clc
std
sarb
add
xchg
stos
shrb
pop
leave
add
add
mov
add
mov
xchg
xchg
add
add
add
jmp
pop
pop
sbbb
sti
out
push
add
in
mov
add
add
add
pop
push
push
lea
push
call
add
jb
jo
shrl
aam
in
mov
jae
data16
pop
add
mov
add
jbe
insb
test
loopne
fcomps
add
add
add
lods
out
mov
cmpsb
bound
pop
push
push
push
push
call
add
mov
add
add
xchg
add
jmp
mov
push
leave
add
out
pop
rcl
add
push
pop
add
mov
add
repnz
insb
mov
or
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
enter
add
xchg
jo
std
add
pop
add
jecxz
add
push
mov
fldl
add
add
lds
les
les
les
mov
add
ret
add
fs
add
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
call
add
xchg
test
add
push
rolb
into
hlt
add
nop
pop
add
gs
andl
gs
pop
push
add
fs
add
sub
add
jge
add
lret
lea
pop
push
push
push
push
push
lea
push
push
push
call
push
hlt
add
jb
add
pop
enter
lret
push
add
scas
push
xchg
mov
add
mov
lods
mov
mov
cltd
mov
fisttpl
jne
mov
loopne
jae
icebp
ljmp
jno
rcr
gs
push
insb
add
arpl
jnp
add
jle
stos
add
pop
push
push
push
lea
push
push
push
lea
push
call
xchg
shll
add
ficoms
shll
add
add
fisubrl
add
add
popl
cmpsl
add
popf
test
add
add
in
loopne
mov
add
cmpsl
mov
in
add
mov
out
add
mov
loop
iret
add
fs
add
push
add
pop
iret
add
pop
mov
lea
pop
mov
add
push
push
push
lea
push
push
push
push
call
test
add
ja
add
int3
add
add
add
rolb
add
fidivl
add
fstl
add
add
into
add
push
shr
lds
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
pop
add
scas
sub
jp
mov
popa
mov
push
mov
cmpsb
outsl
add
push
stc
add
shl
cltd
cli
add
addr16
push
add
stc
ljmp
sahf
add
mov
lea
pop
add
push
push
push
lea
push
call
fiadds
ljmp
mov
insb
out
add
add
aam
lods
data16
fsts
push
nop
popa
mov
push
je
mov
add
pop
mov
add
add
arpl
push
mov
sahf
mov
add
jnp
ljmp
add
sahf
add
clc
push
xchg
int
imul
add
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
icebp
stos
cwtl
lret
mov
add
jbe
add
jo
out
jns
add
lods
rcrl
mov
cmpsb
add
out
outsl
lea
add
add
loopne
add
mov
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
mov
mov
add
sahf
mov
iret
test
addl
test
add
inc
pop
add
add
repnz
pop
mov
jp
add
cmc
pop
in
cli
mov
jp
mov
jb
out
pop
data16
add
jp
cmc
add
jbe
mov
lea
pop
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
lret
pop
aad
movl
add
mov
add
jmp
mov
pop
gs
add
enter
add
xchg
mov
jo
fs
jb
push
imul
mov
add
in
mov
in
movsl
add
lahf
mov
lea
pop
add
push
push
push
push
push
push
call
jp
add
aad
test
in
push
mov
movsb
pop
jl
add
lods
add
jbe
incb
scas
push
add
mov
add
add
mov
jo
in
ljmp
add
in
xchg
add
test
mov
pushf
ljmp
add
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
lods
mov
movb
add
add
add
add
add
mov
push
add
push
pop
mov
jae
test
into
in
pusha
push
stos
push
pop
pop
add
lcall
xchg
mov
add
add
popa
add
scas
into
cmpsb
filds
je
sahf
fwait
mov
lea
pop
xor
push
push
push
lea
push
call
add
ret
mov
hlt
add
gs
jb
lahf
mov
mov
pop
add
add
push
aam
icebp
jbe
add
data16
push
jo
mov
into
cmpsl
pusha
jno
add
mov
lea
pop
add
push
lea
push
push
push
push
call
pusha
add
rcl
add
jmp
push
add
mov
out
add
cwtl
fs
add
mov
jecxz
add
add
add
push
jmp
add
mov
popf
test
add
pop
add
pop
push
push
push
call
push
test
add
mov
push
loop
cmc
loope
add
mov
add
out
outsl
scas
mov
add
add
stos
pop
hlt
outsl
xchg
add
push
mov
add
pusha
add
fucom
add
cmpsl
mov
cmpsl
add
add
add
add
sarb
mov
addl
mov
add
les
xchg
xchg
lds
mov
mov
add
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
jecxz
add
mov
add
add
jecxz
movsb
pop
push
stos
mov
push
xchg
mov
jnp
mov
cli
add
mov
flds
fwait
pop
mov
nop
je
mov
mov
lea
pop
push
push
push
lea
push
push
push
push
call
stc
jb
cli
mov
add
pushf
js
jno
mov
jno
add
test
add
jae
add
add
mov
fsubr
popf
lds
xchg
mov
cltd
add
jl
add
aam
bound
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
bound
ficomps
add
je
pushf
cltd
mov
pusha
add
push
add
add
cwtl
add
add
out
pop
add
test
xchg
add
mov
add
add
std
add
in
add
add
mov
fmull
enter
aad
jg
push
push
push
call
add
ja
jecxz
lods
jns
push
add
ljmp
mov
in
jne
add
mov
aam
leave
mov
loopne
icebp
add
add
mov
lea
pop
pop
push
lea
push
call
mov
mov
cld
pushf
jbe
icebp
pop
add
add
add
add
add
movb
jp
imul
aad
jnp
add
push
out
xchg
jmp
pop
lds
add
pushf
add
js
jbe
jp
add
add
jmp
or
movsb
push
push
push
push
call
fucomi
test
lret
popl
add
mov
mov
pop
call
fdivr
out
fldl
add
add
hlt
pushf
add
add
mov
jge
xchg
add
add
stc
aad
add
mov
scas
icebp
leave
add
add
js
add
mov
imul
movsb
jecxz
add
push
add
add
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
xchg
lods
add
jo
fadds
pop
fidivl
pusha
push
push
add
add
out
je
pop
add
mov
jnp
mov
add
push
iret
sahf
hlt
add
jnp
add
lds
pop
pushf
out
add
int
add
pop
mov
add
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
jecxz
push
popa
mov
add
scas
push
add
lds
movb
mov
test
xlat
rolb
mov
mov
xchg
xchg
add
mov
push
add
pusha
add
mov
add
jmp
xlat
out
add
mov
lea
pop
add
push
lea
push
push
push
push
push
call
ljmp
int
negb
xchg
mov
add
std
add
add
cld
add
mov
add
clc
loopne
arpl
add
clc
sbbl
mov
add
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
int3
push
add
mov
add
mov
test
rolb
mov
test
filds
imul
fildl
aam
addl
pop
add
adcb
add
xchg
sahf
insb
add
pop
pop
xchg
outsl
mov
lea
pop
mov
xor
push
push
push
push
push
lea
push
call
add
mov
add
jno
mov
sahf
in
jne
jb
add
xchg
test
stos
xchg
jp
add
add
icebp
mov
add
jb
push
add
lahf
je
add
jno
mov
mov
clc
iret
fiadds
add
mov
mov
lea
pop
mov
xor
push
ror
ror
pop
mov
push
push
push
push
push
call
add
test
cld
add
add
add
in
mov
andb
mov
cmpsl
add
rclb
lds
in
jmp
mov
push
pop
mov
lea
pop
xor
push
lea
push
push
lea
push
push
push
call
add
loope
andb
pop
fwait
mov
jns
add
mov
lret
jecxz
int3
jp
add
jge
add
add
add
popf
add
aam
push
push
flds
add
add
add
add
lea
pop
add
push
lea
push
push
lea
push
push
call
jle
popf
add
jne
lret
jge
add
mov
cltd
add
mov
testl
add
outsl
movl
jmp
sar
add
outsl
xchg
xchg
in
add
test
add
lock
pushf
mov
add
add
push
mov
add
fnstsw
add
add
cli
cmc
add
lea
pop
add
push
push
push
lea
push
push
push
push
call
xchg
nop
lahf
pop
mov
cld
jbe
add
add
add
add
add
icebp
add
add
xchg
add
xchg
shll
add
add
test
stc
outsl
sti
fdivr
lret
jne
add
rolb
ljmp
add
lock
stc
jo
push
add
popa
sbb
add
mov
push
push
shl
ror
push
or
not
add
sub
ror
sub
shl
sub
ror
pop
shl
shr
pop
push
not
dec
ror
pop
pushl
push
lea
push
call
std
add
xchg
jns
testl
stos
add
add
push
clc
add
scas
stc
test
add
add
pop
scas
pop
add
mov
add
popf
pop
add
jo
add
data16
ret
add
push
push
inc
sub
rol
push
and
add
sub
sub
add
pop
ror
shl
add
ror
pop
push
sub
not
rol
pop
push
push
ror
pop
push
push
shl
add
inc
pop
call
push
pop
mov
push
push
shl
lea
ror
pop
push
push
push
call
int
movsb
add
add
ret
add
mov
gs
cmpsb
stc
add
cmpsl
mov
cltd
mov
add
add
lret
mov
les
xlat
jmp
add
pop
mov
push
push
push
lea
push
push
push
lea
push
call
push
lods
jne
add
mov
jmp
shrl
add
jmp
js
sti
pop
fwait
pushf
call
pop
add
lea
fiaddl
mov
add
lods
scas
add
mov
add
xchg
mul
jb
add
call
mov
les
pop
in
ret
add
add
push
lea
push
call
add
jge
iret
jle
add
xchg
into
popf
roll
movl
testb
pop
add
pop
cltd
add
stc
movb
xchg
roll
add
in
mov
ret
out
cwtl
add
jo
divb
jne
rcrl
cmc
mov
cld
lea
pop
add
mov
push
push
push
push
push
push
call
add
add
scas
add
mov
loope
add
cbtw
add
add
mov
add
add
push
xchg
add
mov
push
add
push
add
add
out
fldcw
add
mov
cld
mov
pop
add
rolb
cmpl
test
mov
mov
rol
imul
aam
movsb
data16
lods
mov
int3
lea
pop
xor
push
lea
push
push
push
push
call
cmpsb
outsl
ja
pop
ret
add
add
add
mov
fbld
push
add
flds
add
imul
jle
in
fwait
add
incb
ljmp
mov
add
mov
lahf
push
add
add
add
add
add
mov
xlat
addr16
mov
lea
pop
add
push
rol
pop
add
push
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
call
jmp
leave
add
add
addl
add
add
lods
xchg
add
in
aad
popl
push
cmc
jbe
mov
mov
push
pop
push
add
add
mov
add
incb
add
add
add
sahf
add
mov
lea
pop
xor
push
lea
push
push
push
lea
push
call
add
add
cwtl
lret
sahf
imul
add
in
mov
xchg
add
jle
add
pop
xchg
test
add
add
shll
jmp
add
mov
lea
pop
add
push
shr
add
pop
add
pop
push
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
stc
cli
out
push
jl
roll
rcrb
add
mov
out
lods
nop
add
cmc
add
add
mov
add
cwtl
push
xchg
add
stos
add
fadds
push
cld
mov
int3
fsub
cmc
lret
rolb
shll
lods
add
xchg
addl
mov
add
test
add
pop
xor
push
push
push
push
push
push
push
push
push
push
call
add
add
jecxz
testb
add
cwtl
add
addl
nop
add
jmp
popa
push
add
add
rcr
jp
pop
cwtl
xchg
add
add
add
std
int3
mov
jnp
mov
add
add
scas
add
add
cmpsl
fbstp
aad
add
cld
lea
pop
add
push
shl
inc
lea
pop
rep
push
not
sub
sub
pop
mov
push
push
push
call
push
addr16
std
add
jmp
add
loop
loop
add
std
jnp
add
add
lret
fbstp
add
addr16
mov
add
divl
add
add
add
out
add
xlat
fadds
add
mov
lea
pop
xor
push
push
push
push
push
push
push
push
call
ljmp
add
push
sti
jnp
push
pop
jnp
xlat
lret
jp
add
push
add
int
jle
repnz
jb
mov
mov
add
test
add
add
pop
add
add
add
pop
nop
lock
mov
in
add
add
add
push
std
mov
add
imul
and
les
lea
push
lea
push
push
lea
push
push
call
in
in
into
add
out
add
out
movb
lahf
rcr
data16
out
push
filds
add
add
fdivrp
icebp
cmpsl
add
ljmp
add
add
mov
mov
imul
pop
cmc
ljmp
fcomi
mov
mov
lea
pop
or
je
push
xor
pop
mov
xor
push
not
shl
add
pop
mov
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
jle
add
mov
push
stos
mov
add
add
roll
jne
rolb
xor
add
lds
add
in
xchg
add
popa
push
add
in
pop
lret
add
add
add
add
cmpsb
add
add
cld
add
pop
idiv
lret
add
pop
mov
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
xchg
lret
add
fadds
add
add
jne
add
add
test
pop
arpl
add
add
insb
movsb
mov
add
add
fidivrl
ja
movsl
add
add
aad
add
imul
add
add
mov
lea
pop
add
push
push
shr
pop
mov
xor
push
lea
push
lea
push
lea
push
push
push
push
call
fsubs
add
in
addb
mov
add
add
add
loope
testl
pop
sti
cli
jne
jb
add
push
xchg
mov
addl
mov
mov
scas
and
aam
bound
add
push
xor
add
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
idiv
and
subb
xlat
mov
add
stos
add
test
rorl
arpl
add
add
std
rolb
lret
pop
add
movsb
shll
cli
pusha
test
or
in
mov
into
mov
lea
pop
rep
mov
push
push
push
push
push
lea
push
push
push
call
out
lahf
add
mov
movsb
arpl
jmp
jmp
jbe
add
mov
lcall
add
std
aad
repnz
add
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
call
bound
push
xchg
je
rolb
add
add
popl
popaw
cltd
add
lret
add
push
add
pusha
scas
add
add
in
outsl
mov
lret
in
ja
push
pop
add
rolb
add
pop
in
mov
popa
out
add
jo
add
add
les
insb
add
sbb
add
push
ror
xor
ror
pop
or
je
mov
push
add
lea
rol
pop
add
add
push
add
pop
rep
pop
push
push
shr
push
or
not
add
sub
shr
lea
ror
sub
xor
dec
pop
shr
ror
not
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
into
cwtl
add
jns
push
loop
add
add
sahf
imul
nop
js
xchg
add
add
imul
add
add
test
add
jmp
fiaddl
lods
ja
jecxz
add
add
mov
add
mov
lcall
add
lcall
test
lret
mov
lea
pop
pop
mov
push
push
push
push
push
push
push
lea
push
call
pop
cmpsl
cli
out
add
add
add
add
jmp
add
add
js
add
cld
imulb
add
cmc
add
add
add
shrb
sahf
add
xchg
ljmp
mov
addb
add
add
add
lea
pop
mov
push
lea
push
push
push
push
lea
push
call
push
add
out
add
out
lds
shrl
cld
xchg
xchg
add
imul
cwtl
add
fistl
add
push
add
scas
mov
push
movsl
out
clc
into
mov
add
add
lret
lock
loope
lret
lea
pop
mov
jmp
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
pop
jae
jecxz
add
jmp
add
fildl
loope
add
sahf
lds
cmc
int
loop
ret
test
ret
test
add
add
xchg
jle
lret
lea
pop
push
push
sub
xor
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
jne
add
leave
roll
xchg
xchg
les
lds
add
add
iret
nop
mov
in
mov
fiaddl
add
in
sti
lods
scas
xchg
jmp
jnp
add
pop
add
push
push
push
push
push
lea
push
push
call
lret
add
add
mov
mov
test
add
out
rcrb
mov
arpl
movsb
add
add
rolb
out
add
mov
add
add
jno
pop
les
cmc
iret
pop
jno
andl
mov
lea
pop
push
push
sub
inc
ror
lea
pop
push
push
shr
lea
dec
inc
pop
push
mov
push
dec
add
pop
pop
pop
push
sub
shl
shr
dec
pop
pop
push
sub
pop
pop
push
add
pop
leave
push
push
push
lea
push
call
add
addl
sti
mov
push
mov
pop
add
add
sti
xchg
add
jnp
pop
out
pushf
roll
ja
out
add
ret
movsl
pop
jecxz
mov
popa
mov
add
push
add
fisubl
jno
add
lock
add
mov
lea
pop
ret
push
push
sub
add
xor
pop
mov
add
push
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
mov
out
lea
test
add
add
mov
lock
add
jo
add
aam
lret
add
mov
add
loopne
nop
add
xchg
add
add
mov
lea
pop
push
push
shr
pop
push
movl
push
pop
addl
push
add
pop
test
je
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
movsb
out
hlt
add
add
push
push
add
add
ja
add
into
add
add
lock
xlat
add
jne
add
fldt
incb
add
cmpsl
test
in
repnz
sahf
add
jo
add
add
loope
add
cmpl
incb
push
add
pop
mov
push
push
lea
push
push
push
call
add
push
fldl
roll
adcb
faddl
pop
addl
imul
pop
add
add
push
add
hlt
cmc
mov
cmpsb
add
xlat
add
xchg
add
add
push
nop
out
scas
push
jns
faddl
add
push
add
enter
roll
add
add
je
je
add
add
mov
lea
pop
pop
push
add
not
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
call
push
mov
rolw
stos
flds
faddl
lods
mov
mov
xchg
add
add
fildl
add
cmpsl
lea
push
add
xchg
add
mov
lea
add
roll
add
test
jge
add
mov
add
fstp
mov
push
mov
lea
pop
pop
push
shr
pop
pop
leave
push
lea
push
push
call
jnp
sahf
fbld
test
mov
fs
add
insb
aad
mov
push
in
add
leave
add
pop
push
add
mov
mov
lea
pop
ret
push
push
lea
push
lea
push
call
add
cwtl
mov
loopne
insb
mov
push
add
pop
scas
ror
jns
add
add
jmp
add
mov
mov
push
mov
push
mov
fdivp
push
xchg
cwtl
add
add
add
mov
lock
fmull
add
les
mov
out
mov
lea
pop
mov
push
shr
ror
pop
add
push
shl
add
pop
push
push
lea
push
push
push
push
call
pop
add
je
add
push
lods
jle
sti
ljmp
js
lahf
add
add
add
je
jge
fildl
leave
jo
add
mov
push
mov
add
add
add
mov
add
pop
jb
push
lds
mov
fildl
xchg
stos
mov
add
add
add
add
lret
movsb
mov
lea
pop
push
push
not
add
sub
pop
push
push
dec
add
inc
pop
push
push
push
push
push
push
push
push
call
jecxz
sahf
pusha
mull
add
mov
xchg
add
ljmp
xchg
xchg
add
mov
pop
xchg
add
jmp
jns
add
ja
fildl
mov
add
add
push
repnz
mov
shll
mov
lea
pop
testl
push
lea
push
lea
push
push
call
divb
sahf
add
push
jbe
lret
add
out
push
fldl
add
add
add
add
pop
add
mov
lret
xlat
popa
imul
pushf
mov
add
pop
addl
push
push
call
lods
add
xlat
add
ret
xchg
pop
push
add
pop
pop
mov
add
jge
add
mov
push
add
popf
negl
add
add
scas
add
fiadds
cmpsb
add
jl
loope
push
cli
enter
mov
aad
add
in
mov
pop
push
call
push
not
add
pop
mov
push
dec
not
inc
xor
pop
pushl
push
shl
add
dec
pop
push
push
push
push
push
push
push
push
call
mov
jge
push
mov
add
fmuls
add
add
pop
add
add
xchg
mov
xchg
add
leave
fmuls
sahf
addb
add
pop
xor
mov
mov
icebp
outsl
push
jne
add
add
stos
mov
lea
pop
push
push
xor
shr
add
shr
pop
call
push
push
push
push
push
push
push
push
lea
push
call
jmp
stos
add
test
add
add
jno
add
jp
push
icebp
add
in
add
mov
addb
cld
add
add
add
jne
jb
add
add
jbe
jp
lds
insb
int
add
mov
lea
pop
cmpl
jne
push
add
pop
pop
pop
push
push
push
push
push
push
push
call
add
mov
add
leave
mov
push
movl
add
les
filds
push
mov
fcmovne
add
pop
add
mov
lea
pop
pop
pop
push
dec
shl
inc
sub
pop
leave
ret
push
rol
shl
sub
pop
push
mov
push
shl
rol
pop
add
push
lea
push
push
push
push
push
push
push
call
add
sarb
add
add
icebp
mov
mov
icebp
mov
add
jle
lea
imul
mov
add
lock
add
add
push
hlt
push
xchg
lods
lds
jnp
add
pop
mov
lea
pop
push
push
push
ror
pop
push
push
push
xor
pop
movl
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
cld
add
mov
movsl
add
add
rorl
lret
mov
jge
mov
add
in
arpl
fstps
stos
lahf
mov
add
add
pop
call
push
push
push
push
push
push
push
push
call
jno
fildl
add
add
rcrb
add
enter
mov
add
pop
scas
add
pop
mov
stos
faddl
add
sti
add
loope
lcall
add
jnp
add
add
add
add
icebp
test
mov
add
andb
jge
aam
bound
call
push
lea
push
push
call
add
push
add
add
pushf
add
enter
add
enter
ror
jle
mov
add
add
in
icebp
fldt
int
xlat
push
add
movsl
add
addb
lcall
imul
add
sub
fsubrl
jecxz
add
add
mov
add
pusha
or
subl
cmpl
jne
push
push
push
push
push
lea
push
push
call
jmp
lea
sahf
add
je
mov
add
pop
add
pusha
add
les
push
add
add
mov
add
fwait
push
jecxz
push
nop
mov
add
add
add
add
jnp
jl
stos
pushf
add
add
mov
lea
pop
pop
push
push
push
call
jnp
push
out
jp
add
add
imul
push
jp
out
xchg
mov
add
cltd
imul
push
xchg
add
pop
pop
mov
add
mov
lods
jns
scas
ljmp
add
jo
push
popf
push
add
xchg
add
add
hlt
lea
pop
pop
push
push
call
adcl
loopne
add
movsb
hlt
add
popf
jl
add
jo
outsl
mov
push
add
add
pushf
js
in
enter
add
add
add
in
lret
add
add
add
add
add
add
add
push
add
imul
add
mov
lea
pop
pop
push
ror
add
pop
pop
leave
push
push
push
push
push
push
push
call
fmul
mov
mov
xchg
add
ljmp
test
mov
add
add
les
add
add
std
jne
jle
hlt
xchg
incb
out
xchg
test
out
ljmp
push
jl
add
add
mov
mov
add
jns
add
pop
mov
add
add
add
stc
add
lea
pop
ret
push
pop
push
mov
push
sub
add
shr
pop
add
push
inc
dec
pop
push
push
push
shl
add
pop
push
push
pop
push
push
ror
pop
mov
push
push
push
push
push
push
call
fidivs
mov
enter
jp
pusha
icebp
icebp
lods
repnz
mov
cmpsb
imul
pop
mov
add
sbb
mov
les
inc
cmp
push
push
push
push
call
add
out
add
fldl
movsl
xlat
movsl
lds
add
sti
test
into
add
jle
ljmp
add
loop
add
lea
add
pushf
fistl
add
add
frstor
out
add
cmp
pop
add
movsl
shll
add
shl
scas
add
pop
sub
push
push
push
push
push
push
push
lea
push
push
push
call
mov
cli
push
add
xchg
push
aad
add
jmp
add
rolb
int3
call
mov
jecxz
add
faddp
arpl
jmp
add
imul
incb
mov
add
jb
xorl
jle
add
mov
push
ficompl
add
fwait
add
pop
mov
shr
push
ror
dec
shr
pop
add
mov
push
not
ror
shl
shl
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
outsl
add
add
je
shl
int3
add
cmpsb
scas
lock
iret
jge
ja
add
clc
in
add
xchg
add
incb
pusha
jle
js
sbb
xchg
fildl
jns
add
add
push
push
jo
outsl
mov
lea
pop
add
push
shl
pop
add
push
add
rol
shl
not
pop
mov
push
shr
dec
sub
pop
mov
cmp
jne
push
lea
push
push
push
push
push
push
push
push
call
add
push
add
pop
xchg
aad
fsubrp
add
add
flds
and
pop
add
lahf
lods
add
movsl
add
push
arpl
enter
add
add
mov
incb
push
out
notl
scas
add
mov
out
xchg
mov
add
add
out
mov
mov
lea
pop
cmp
jne
mov
push
shr
xor
rol
pop
movl
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
pop
pusha
xchg
add
insb
add
add
lahf
mov
out
add
mov
loopne
add
cltd
lret
scas
add
add
pop
add
shll
jae
add
add
in
mov
bound
mov
add
push
add
mov
lea
pop
jmp
push
not
rol
pop
mov
push
push
lea
push
lea
push
push
push
call
mul
filds
add
lods
shl
mov
mov
test
jmp
mov
cmpsl
js
add
add
aad
fcmovu
insb
pushf
push
imul
add
cmc
jl
out
cmc
test
pop
push
add
into
in
cli
add
add
jp
lahf
push
mov
fiadds
scas
xchg
add
ret
lea
pop
mov
sub
jne
push
add
not
xor
pop
mov
push
push
push
lea
push
push
push
push
call
add
add
leave
add
in
call
add
stc
add
into
std
add
push
add
jmp
mov
add
add
mov
add
jp
ret
pusha
negb
push
add
aam
add
add
roll
lret
sti
fiadds
test
add
push
push
into
movsb
leave
popa
cwtl
mov
lea
pop
movl
push
pop
jmp
push
push
lea
push
lea
push
lea
push
call
std
add
lcall
add
xorb
lock
mov
stos
in
fisttps
scas
jp
mov
pushf
mov
xorb
add
scas
add
add
push
test
add
xchg
mov
jae
add
mov
fldenv
gs
add
roll
imul
mov
gs
lea
pop
mov
mov
push
shr
inc
inc
pop
cmp
jne
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
imul
lret
mov
leave
add
cli
jae
pop
pop
jp
fiaddl
add
mov
pop
fwait
add
add
idivb
repnz
cwtl
mov
fldl
popa
fistps
xchg
jbe
add
iret
add
out
mov
sub
add
add
add
std
xor
dec
pop
jmp
push
add
pop
mov
push
push
lea
push
lea
push
push
call
add
add
lcall
add
std
fiadds
add
jp
add
add
call
mov
loopne
jae
add
pushf
add
je
jecxz
add
add
add
bound
cmpw
jne
push
lea
push
push
push
call
add
imul
call
mov
fwait
jge
in
add
jo
add
xchg
push
nop
add
enter
jbe
add
add
xchg
test
add
lcall
loop
enter
add
mov
lea
pop
mov
push
lea
push
call
mov
out
add
add
cli
arpl
add
pop
add
xchg
mov
add
ficoml
std
add
loopne
hlt
out
add
push
mov
pop
movb
xchg
push
js
aam
bound
pop
movl
push
xor
ror
pop
jmp
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
iret
jb
outsl
pushf
add
fstps
add
popa
into
add
sarb
add
bound
xchg
add
add
add
scas
fidivrs
mov
xchg
fisubl
into
jmp
jns
in
cmpsl
stos
imul
popa
cmpsl
pushf
repnz
pop
pop
push
push
push
push
push
push
lea
push
push
call
scas
sbbb
movsb
lea
mov
xchg
add
xchg
add
mov
jns
lret
mov
add
fdivrs
icebp
add
add
aam
out
add
mov
lea
pop
mov
push
lea
add
sub
pop
mov
push
push
lea
push
lea
push
push
call
gs
jle
aam
xchg
add
add
add
push
lods
mov
add
popf
add
pop
les
add
add
sti
in
add
repnz
add
jle
jp
orl
mov
push
push
shl
xor
shl
push
push
pop
add
not
ror
dec
sub
shr
pop
xor
sub
pop
push
lea
dec
pop
push
call
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
gs
add
int3
xchg
ret
loop
add
mov
xchg
add
pop
lret
sarl
xchg
mov
clc
sahf
out
add
test
mov
add
add
add
pop
jne
mov
add
add
pop
add
clc
jle
aad
add
push
add
clc
pusha
loope
add
jo
xor
loop
pop
mov
add
push
lea
mov
lea
pop
cmpl
je
push
push
inc
push
or
not
add
lea
sub
sub
shl
pop
dec
lea
lea
pop
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
xchg
pop
pop
add
xchg
mov
pop
shl
add
add
loopne
arpl
add
add
add
leave
add
cwtl
add
add
mov
hlt
lea
pop
push
call
push
xor
pop
cmpl
je
push
push
sub
sub
push
sub
add
sub
sub
sub
xor
shl
pop
sub
pop
push
xor
pop
push
push
add
add
pop
call
cmpl
je
push
push
add
not
ror
push
push
pop
add
sub
add
dec
sub
sub
add
pop
add
pop
push
sub
pop
push
push
lea
push
push
lea
push
push
call
imul
add
push
add
fadds
stos
add
push
add
add
add
popf
enter
test
xchg
jbe
xchg
mov
cmpsl
add
xchg
mov
add
add
pusha
aam
add
imul
in
mov
aam
mov
arpl
call
push
push
lea
push
call
adcl
add
fsubr
sarl
cmc
add
xchg
add
cltd
movsb
loop
jmp
stos
lahf
in
add
xchg
add
mov
add
js
loop
scas
add
sti
pusha
fwait
add
add
pop
add
imul
add
mov
mov
lea
pop
cmpl
je
push
push
add
not
add
push
or
not
add
ror
xor
lea
add
sub
sub
dec
pop
sub
pop
push
push
call
add
lds
pop
add
mov
scas
add
push
movsl
test
jb
add
jo
xlat
add
aam
subl
mov
add
push
add
les
test
arpl
add
add
add
xchg
add
stos
mov
ljmp
in
push
mov
add
jns
add
arpl
mov
or
call
push
lea
push
lea
push
call
sbbl
lahf
mov
add
add
jle
add
lods
add
ljmp
out
lret
add
add
cwtl
test
xchg
add
les
jne
add
out
add
add
mov
movb
pop
mov
mov
lea
pop
cmpl
je
push
push
push
or
inc
add
add
sub
xor
pop
add
add
add
pop
push
inc
shr
pop
push
call
push
pop
cmpl
je
push
push
shl
not
push
sub
add
ror
sub
add
shr
pop
sub
inc
pop
push
push
push
push
push
push
push
call
jns
gs
in
add
sbbl
add
arpl
add
add
icebp
add
mov
add
mov
add
xchg
pop
pop
add
add
leave
lret
test
aam
lret
add
lret
add
stos
shll
fisubl
into
fiaddl
add
lods
add
mov
lea
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
xchg
add
sti
add
jecxz
add
mov
add
add
mov
push
fldl
loop
pop
add
lret
add
add
add
incb
mov
mov
lea
pop
call
cmpl
je
push
push
lea
sub
push
xor
add
not
sub
dec
add
sub
inc
pop
inc
rol
pop
push
ror
pop
push
push
shr
not
ror
pop
call
cmpl
je
push
push
add
push
or
inc
add
ror
shl
sub
add
ror
shr
pop
xor
add
sub
pop
push
ror
lea
xor
not
pop
push
push
push
push
push
lea
push
push
call
test
add
hlt
add
sarb
mov
mov
pop
mov
mov
push
pop
rolb
push
xchg
icebp
nop
add
push
xchg
add
rorl
lds
in
add
mov
fldcw
fsubs
pop
mov
add
add
cmpsb
popa
add
mov
fstp
add
sbb
test
add
cmpl
je
push
push
inc
not
add
push
and
add
sub
shl
sub
not
ror
pop
shl
pop
push
inc
dec
pop
push
call
push
inc
xor
pop
cmpl
je
push
push
shl
ror
add
not
push
xor
add
xor
add
sub
add
pop
not
xor
sub
pop
push
xor
not
lea
sub
pop
push
push
sub
add
pop
call
push
lea
push
lea
push
push
push
push
push
lea
push
call
loope
shlb
aad
mov
add
add
jo
mov
add
insb
js
mov
jns
add
add
cmp
pusha
add
add
cld
outsl
repnz
add
jp
mov
lea
pop
cmpl
je
push
push
dec
push
and
add
xor
sub
lea
pop
pop
push
dec
pop
push
call
push
lea
push
push
lea
push
push
call
out
add
add
push
roll
add
lret
add
dec
scas
loopne
add
push
leave
mov
xchg
xchg
fiadds
add
fwait
add
out
int3
add
add
mov
add
popf
mov
iret
in
jbe
add
add
fistps
addr16
pop
lds
mov
add
loop
movsl
mov
add
pop
cmpl
je
push
push
shr
push
or
not
add
ror
ror
add
sub
sub
sub
pop
add
sub
inc
rol
pop
push
push
push
push
call
hlt
loope
test
add
add
fildl
add
add
add
add
add
roll
add
jge
add
jae
mov
add
add
lret
add
mov
push
mov
add
mov
pop
add
pop
add
push
cld
aad
add
xchg
pop
add
add
jno
add
add
lock
add
pop
push
call
push
inc
pop
cmpl
jne
push
lea
push
push
lea
push
call
fldcw
pop
mov
mov
pop
add
xchg
lret
cwtl
ljmp
outsl
mov
out
mov
add
jae
and
lcall
int
les
inc
adc
add
add
add
lret
jmp
push
push
push
lea
push
push
call
add
mov
into
fiaddl
add
icebp
out
pop
jne
add
fldl
mov
xlat
xchg
add
filds
add
fldl
add
add
movsl
add
add
cmc
mov
fwait
rol
jle
add
add
jbe
add
jmp
jno
add
add
xchg
add
pop
xor
push
push
lea
push
call
out
frstor
push
out
popf
add
fnstcw
add
fs
add
add
add
add
jno
add
add
mov
ret
add
add
out
add
lea
pop
pop
push
lea
push
lea
push
push
push
call
add
add
lods
lds
add
add
add
jno
mov
leave
out
ret
movsl
cwtl
add
xchg
popf
int3
push
jns
add
xchg
add
out
push
ja
add
jmp
add
imul
enter
je
add
fiadds
pop
xchg
fcomps
add
lea
pop
pop
push
push
push
push
push
push
push
push
call
loope
xchg
jle
mov
add
add
sar
mov
add
insb
add
stc
push
loope
mov
add
add
push
add
push
xchg
add
add
add
add
add
add
sti
ja
add
aam
lret
rcrl
mov
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
call
in
add
mov
jl
leave
lcall
push
mov
add
mov
add
movsb
add
add
aam
std
mov
push
lock
add
rolb
jne
mov
fisubrs
xchg
jno
xchg
add
sahf
add
cld
mov
mov
lea
pop
pop
leave
push
rol
sub
sub
pop
ret
push
push
push
push
push
call
add
add
add
jecxz
add
xlat
ja
add
imul
push
lods
flds
push
mov
add
lret
in
add
add
imul
jno
jb
xchg
add
fwait
push
pop
int
add
jge
imul
loop
jecxz
add
fisubs
pop
mov
add
mov
pop
add
push
mov
lea
pop
push
mov
push
sub
inc
ror
pop
add
cmpl
jne
push
push
sub
dec
push
sub
add
rol
sub
not
add
pop
shl
lea
pop
push
lea
push
push
push
push
push
push
push
call
fnstsw
loopne
icebp
imul
rolb
ljmp
add
add
loopne
iret
add
add
test
cwtl
xchg
mov
bnd
fwait
roll
add
popa
into
shlb
cwtl
add
addl
addb
mov
and
jne
push
push
push
push
push
push
call
push
add
push
mov
add
add
incb
roll
add
popa
pusha
add
pop
lcall
in
int3
add
add
cmpb
add
icebp
lret
mov
lea
pop
call
push
shl
shr
lea
pop
push
push
sub
sub
ror
pop
call
jmp
push
add
pop
cmpl
je
push
push
push
call
mov
lcall
xchg
xchg
lock
lcall
fsubrs
add
jne
add
aad
in
mov
add
rcll
imul
pop
add
jo
cltd
mov
movsb
test
push
add
xchg
add
out
pusha
add
jnp
add
add
add
mov
lea
pop
cmpl
jne
leave
push
lea
add
pop
add
pop
push
push
push
lea
push
call
outsl
rolb
add
xchg
add
add
add
xchg
add
movl
mov
add
xchg
add
add
add
mov
add
jge
pop
push
push
cmpl
add
les
push
push
push
push
call
add
add
mov
add
add
push
int
push
popa
movsb
xchg
add
lock
add
bound
pop
add
add
mov
pop
test
xchg
mov
push
mov
roll
movsl
add
js
jmp
ljmp
jecxz
jnp
jnp
fmull
push
sub
pop
pop
leave
push
push
push
push
push
push
call
call
fiaddl
add
add
push
mov
into
js
mov
shrl
mov
pop
std
add
add
cli
pusha
add
add
push
les
cld
stc
lock
jo
mov
lea
pop
add
push
lea
lea
pop
ret
push
push
push
push
push
push
push
push
push
call
stos
scas
pop
mov
js
add
jp
xchg
add
push
lret
lods
mov
add
cmc
add
jmp
fsubr
add
add
mov
jge
sti
add
pop
xchg
filds
add
push
cmc
lods
xlat
add
pop
add
fwait
js
mov
mov
mov
jnp
int
add
mov
lea
pop
jmp
cmpl
jne
push
push
sub
rol
shl
shl
push
and
add
shl
sub
sub
lea
sub
sub
pop
add
dec
xor
pop
push
shr
pop
pushl
push
push
push
push
push
push
push
call
ficoms
xchg
lea
add
add
lods
add
add
fldl
loope
xchg
xchg
fcoms
fldenv
add
add
xchg
push
add
add
mov
stos
add
mov
lea
pop
call
push
pop
push
push
xor
lea
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
rorl
pushf
add
push
push
jl
cmc
jo
mov
xchg
nop
jecxz
movl
push
cmpsb
stc
xchg
push
add
js
lea
jp
add
ja
mov
push
push
lret
add
mov
sarb
lea
pop
jmp
push
shr
pop
cmpl
jne
mov
push
lea
push
call
hlt
mov
jl
gs
add
add
mov
notb
mov
add
add
add
cmpsb
movl
add
lea
add
popa
or
add
add
push
add
xor
sub
pop
call
push
shl
add
sub
sub
pop
push
push
push
inc
sub
push
and
add
sub
sub
rol
sub
inc
rol
rol
pop
shr
add
shr
pop
push
push
lea
push
call
add
add
lods
push
add
sahf
add
adcl
mov
jae
bound
add
add
add
addl
aam
bound
pushl
push
push
push
push
call
mov
stos
pop
mov
add
insb
icebp
jbe
mov
jno
add
add
jle
fs
test
mov
add
pushf
fiadds
mov
add
mov
stos
mov
add
add
xchg
add
push
mov
loope
enter
xchg
jae
add
mov
lea
pop
call
call
push
push
shl
push
and
add
add
sub
add
rol
add
pop
sub
lea
pop
push
shr
ror
pop
pushl
push
push
push
lea
push
call
nop
add
add
mov
mov
add
fldl
movsb
add
add
in
add
lock
add
add
stos
add
add
fwait
add
add
scas
push
mov
add
fwait
add
add
mov
add
push
jmp
ret
add
add
pop
stc
fistps
mov
push
insb
std
pusha
mov
lea
pop
call
call
push
push
rol
push
push
pop
add
ror
add
sub
xor
lea
pop
sub
add
inc
pop
push
push
push
push
lea
push
lea
push
call
push
add
outsl
add
arpl
add
add
fs
pop
lea
mov
mov
int3
add
movsl
lahf
mov
in
sarb
movl
scas
cld
call
add
add
lock
mov
add
add
add
je
mov
lea
pop
pushl
push
push
push
lea
push
call
xlat
scas
add
add
pop
add
hlt
jbe
add
hlt
add
aad
add
add
shrb
scas
scas
mov
scas
out
repnz
pop
jnp
leave
add
stos
jle
mov
add
testl
add
push
push
call
out
add
jo
add
in
add
imul
pushf
mov
test
add
js
push
lret
add
mov
ljmp
xchg
add
loopne
cmpsb
jno
hlt
add
mov
add
pop
call
push
push
xor
push
sub
add
dec
xor
xor
add
sub
not
add
pop
sub
rol
inc
pop
push
ror
inc
rol
add
pop
pushl
push
push
push
lea
push
push
push
push
call
add
jle
cwtl
xchg
add
cmc
add
add
sbbb
add
lds
ret
je
sti
push
add
push
bound
stc
mov
lahf
push
xchg
test
repnz
xlat
add
fists
add
std
add
add
jmp
rcl
add
pop
call
push
sub
rol
pop
call
push
push
ror
ror
push
push
pop
add
add
sub
shr
dec
pop
lea
pop
push
pop
pushl
push
dec
pop
call
call
push
push
dec
lea
dec
sub
push
or
inc
add
not
sub
lea
shr
sub
ror
xor
pop
pop
push
shr
xor
lea
shl
pop
pushl
push
add
dec
pop
call
push
push
lea
push
lea
push
push
push
lea
push
call
fdivrp
loopne
pop
add
mov
add
add
add
mov
in
add
add
sti
xchg
mov
repnz
in
add
jbe
hlt
cmpsb
jns
mov
fadds
cmpsl
push
les
pop
call
push
push
lea
add
push
xor
add
rol
add
sub
ror
rol
pop
ror
rol
ror
pop
push
lea
push
push
push
push
call
std
add
orb
add
pop
je
add
add
fadd
jl
iret
add
jp
add
add
mov
hlt
mov
scas
add
add
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
in
gs
add
push
out
stc
push
add
test
pop
add
add
add
out
ficoml
loope
add
sahf
in
fiaddl
add
xchg
sbbb
add
push
add
je
add
add
add
jmp
add
xchg
mov
add
popa
imul
add
call
push
push
sub
ror
shl
push
and
add
xor
add
sub
xor
lea
inc
pop
pop
push
push
call
add
add
pushf
jae
mov
add
push
les
out
test
xchg
xchg
xchg
leave
pusha
add
test
mov
jns
movsb
xchg
std
out
push
mov
push
add
std
add
lcall
push
int3
pop
fcomp
add
jp
jl
addb
add
add
add
add
lea
pop
pushl
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
stos
add
mov
ljmp
mov
add
xchg
ja
out
lret
add
shrl
jae
add
add
pop
add
add
push
addb
imul
jmp
add
add
add
add
scas
je
add
add
add
hlt
add
add
lods
mov
lea
pop
call
push
push
inc
not
push
or
inc
add
inc
inc
sub
sub
lea
pop
lea
pop
push
push
push
push
lea
push
push
push
call
stos
mov
outsl
push
xchg
popa
scas
scas
int3
fs
adc
add
fbld
movsb
out
out
je
add
in
mov
repnz
add
mov
mov
add
test
jbe
fists
add
mov
andb
rolb
mov
add
mov
lea
pop
pushl
push
rol
shl
xor
pop
call
call
push
push
not
push
xor
add
rol
add
lea
sub
sub
pop
pop
push
ror
add
pop
pushl
push
dec
pop
call
push
push
push
lea
push
push
push
push
call
push
mov
imul
add
xorb
add
mov
jle
pop
add
add
add
sbbl
xchg
add
adc
mov
add
mov
mov
add
add
jge
xchg
add
push
cmpsb
lock
testb
lcall
fadds
incb
cld
mov
lea
pop
lea
push
add
sub
shr
rol
pop
push
push
sub
lea
pop
call
push
push
sub
shr
sub
push
or
inc
add
rol
sub
lea
shl
sub
shr
sub
ror
pop
xor
pop
push
push
push
push
push
push
call
leave
push
into
add
lret
arpl
mov
pusha
add
stc
add
enter
push
imull
scas
add
pop
push
add
add
mov
jae
push
gs
add
or
add
add
add
pop
pushl
push
lea
push
push
push
push
push
push
push
push
call
mov
into
mov
fildl
or
mov
int3
lahf
lcall
mov
mov
add
stos
mov
mov
add
add
add
ret
cwtl
add
flds
add
mov
filds
out
jmp
icebp
add
movsl
out
cld
mov
pusha
and
call
call
push
push
push
xor
add
inc
lea
shr
sub
add
pop
add
ror
sub
pop
push
lea
inc
pop
pushl
push
push
push
push
push
push
push
push
push
call
mov
arpl
ljmp
lea
add
xlat
mov
mov
mov
add
stos
mov
mov
les
iret
and
mov
or
popf
add
push
push
push
push
call
rorb
hlt
cwtl
lcall
add
lods
add
jno
clc
xchg
pop
add
lcall
loope
add
js
icebp
mov
pop
add
mov
add
mov
lea
pop
call
push
push
shl
push
push
pop
add
dec
sub
lea
xor
pop
xor
shl
add
pop
push
sub
shr
pop
pushl
push
rol
pop
call
push
dec
dec
shl
pop
call
push
xor
pop
lea
push
push
sub
shr
shr
push
sub
add
add
shl
sub
add
pop
sub
dec
pop
push
add
shr
pop
pushl
call
push
ror
pop
push
push
push
lea
push
lea
push
push
call
lods
push
shrl
add
gs
jp
js
mov
jl
add
jmp
mov
add
add
in
add
mov
xchg
push
pop
xchg
add
add
add
add
add
add
lds
mov
add
int3
lea
pop
call
push
push
add
sub
push
xor
add
inc
ror
sub
pop
lea
rol
pop
push
push
push
call
mul
add
add
xlat
lret
negb
add
lds
insb
add
xchg
mov
enter
rolb
fbld
lock
add
ficoms
pop
add
jl
add
mov
add
mov
hlt
add
add
fadds
xchg
in
add
lahf
fwait
rolb
mov
jae
add
add
jbe
mov
add
std
sahf
ja
fmull
jne
call
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
jbe
add
rol
lret
add
cmpl
xchg
mov
push
cmpsb
add
add
add
std
add
jp
mov
mov
add
add
pusha
in
add
mov
jmp
popa
arpl
aad
add
movb
mov
jp
imul
fiaddl
scas
bound
add
fsubr
ror
cmpsl
add
aad
fmull
rorb
insl
add
push
dec
xor
rol
lea
push
sub
add
add
ror
sub
lea
pop
sub
add
sub
pop
push
shr
pop
pushl
push
dec
pop
call
push
push
lea
lea
pop
pushl
push
push
push
push
call
cli
fadd
cmpsb
add
arpl
imul
jmp
pop
jae
loope
ljmp
lahf
int3
jnp
in
push
add
sarl
lahf
jns
add
add
add
iret
jmp
add
add
add
insb
add
mov
arpl
pop
call
push
push
add
inc
push
xor
add
inc
sub
inc
sub
sub
ror
pop
sub
sub
dec
pop
push
add
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
push
add
jmp
add
ret
mov
xchg
in
sbbl
add
nop
xchg
sahf
out
push
fidivrs
add
push
andl
mov
cmpsl
jmp
fucomp
jno
add
add
je
les
mov
add
push
push
add
shl
shr
push
xor
add
shl
sub
shl
lea
pop
rol
pop
push
push
xor
push
or
inc
add
not
shl
add
lea
sub
shr
pop
lea
inc
lea
pop
push
pop
call
push
push
sub
shl
push
push
pop
add
add
sub
not
pop
inc
pop
push
push
push
push
push
lea
push
call
rcl
test
add
xchg
insb
lock
jmp
add
push
out
roll
add
sti
add
add
leave
out
cmpb
jle
pop
fistpl
lea
pusha
mov
add
incb
lock
pop
add
add
je
add
mov
add
add
mov
add
call
xchg
mov
lea
pop
pushl
push
lea
push
push
call
add
je
add
lods
hlt
add
mov
add
jb
add
clc
pop
add
clc
add
enter
add
jns
add
scas
clc
enter
push
push
cmpb
add
test
lods
cwtl
mov
add
hlt
lea
pop
call
mov
push
add
sub
pop
lea
push
push
lea
push
push
push
push
push
call
add
add
repnz
mov
add
out
addr16
add
sti
add
add
add
cltd
arpl
add
add
add
mov
add
add
in
lods
cmpsb
add
mov
testl
sbb
lea
push
push
not
pop
push
push
push
push
push
push
lea
push
push
call
add
xchg
lahf
cmpsb
in
addb
add
flds
popa
jmp
add
icebp
test
cltd
push
add
mov
loope
stos
add
cmpsb
jp
mov
mov
lea
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
fstpt
addl
outsl
add
jbe
lret
mov
loope
add
add
test
push
lret
ja
xchg
add
add
cmc
mov
movsl
add
add
lock
cmc
scas
addl
pop
add
sub
add
loop
mov
rorl
mov
cmp
cmp
je
mov
mov
out
das
adc
cmp
add
stos
push
add
aam
jno
loopne
add
mov
into
add
add
rcr
add
enter
add
add
add
loope
mov
jmp
add
orb
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
ja
add
cli
cwtl
out
add
pop
cmpsl
jns
fidivl
addr16
test
mov
add
sarb
add
mov
add
cmpsl
mov
mov
mov
lea
pop
push
push
push
push
lea
push
lea
push
call
movsb
add
pop
mov
mov
jns
mov
loope
addl
add
fwait
add
cld
add
clc
test
push
mov
lea
mov
pop
add
add
aad
jle
aam
js
hlt
lea
pop
push
push
lea
push
call
push
add
fldt
mov
addb
add
xchg
in
jp
add
add
lret
add
add
add
jae
add
jno
add
repnz
add
imul
add
add
into
add
add
add
mov
fwait
stc
enter
add
jp
add
in
pop
cli
jns
add
add
jo
mov
or
jne
push
sub
rol
sub
shl
pop
push
push
lea
rol
sub
pop
call
push
push
xor
add
inc
sub
push
and
add
sub
shr
rol
pop
pop
push
push
push
lea
push
push
call
leave
jo
testb
ja
add
jecxz
add
add
cmpsb
xchg
leave
test
cwtl
je
jae
cli
add
fbstp
pop
pusha
ror
mov
add
out
push
add
mov
push
add
add
test
arpl
ja
out
add
cli
add
add
add
add
pop
pushl
push
sub
sub
pop
call
push
lea
push
push
push
call
mov
out
jge
jne
add
add
xchg
movb
pusha
xchg
add
add
in
add
popa
add
popl
add
mov
add
pusha
add
add
loopne
jo
add
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
call
push
add
mov
xchg
jge
xchg
fs
add
push
add
scas
pop
repnz
scas
jo
clc
push
aam
add
test
add
lea
repnz
add
in
add
ljmp
faddl
mov
arpl
fmull
inc
clc
pop
push
push
push
push
push
call
jno
add
sti
add
shll
aad
lahf
std
test
scas
test
jae
xchg
loope
mov
add
add
xchg
add
int3
add
pop
ja
xchg
in
sahf
jl
rolb
add
add
stos
fildl
out
imul
mov
mov
add
test
fmull
jne
push
ror
shr
shr
pop
jmp
push
xor
pop
call
push
push
lea
sub
push
and
add
inc
sub
rol
pop
shl
rol
ror
shr
pop
push
shl
ror
pop
pushl
push
shr
inc
pop
call
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
out
add
push
mov
add
lcall
pop
test
push
jp
addl
lea
leave
push
decb
out
push
fs
pusha
add
jne
add
mov
push
add
add
rolb
pop
mov
int3
nop
stos
jmp
add
lea
pop
call
push
ror
pop
mov
lea
push
push
xor
shl
push
and
add
add
sub
rol
sub
inc
inc
pop
shr
lea
add
pop
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
imulb
neg
jle
add
out
add
nop
cmpl
add
add
in
std
lahf
add
fdivl
add
add
mov
fstps
mov
add
push
cmpb
ja
jl
scas
xchg
sarb
push
in
add
push
mov
add
sahf
add
add
mov
lea
pop
pushl
push
shr
add
xor
pop
call
push
push
push
push
push
push
lea
push
call
js
out
add
scas
rol
add
add
cmpsb
add
push
addr16
cmc
mov
add
pop
pop
js
rolb
out
lahf
add
loopne
add
add
add
pop
add
add
jl
add
enter
pop
mov
add
insb
flds
add
mov
mov
add
imul
mov
lea
pop
call
push
push
xor
dec
dec
push
and
add
xor
sub
inc
ror
inc
pop
ror
dec
pop
push
dec
lea
xor
pop
pushl
call
push
push
push
push
lea
push
call
add
add
jo
push
insb
shll
stos
add
cmpsl
pop
add
add
fcmovnb
add
xchg
mov
cli
pop
push
add
orb
jge
mov
addr16
fdivrl
add
out
add
filds
add
add
add
mov
out
mov
jbe
add
mov
lea
pop
call
push
add
pop
mov
push
shl
shl
lea
pop
lea
push
push
not
rol
shl
push
or
not
add
inc
sub
not
shl
shl
pop
inc
ror
inc
pop
push
push
push
push
push
push
call
nop
mov
mov
add
add
add
ja
mov
rclb
add
sti
add
std
mov
popf
add
add
push
mov
add
add
add
mov
push
in
flds
in
ljmp
jne
add
add
ret
add
lods
lods
add
lods
jno
aam
bound
pop
pushl
push
push
push
push
push
push
lea
push
call
jne
pop
xchg
addl
orb
add
data16
add
into
xchg
mov
add
mov
out
jo
mov
pop
rol
add
popf
jmp
fmull
js
add
push
lea
push
call
jb
add
add
add
loopne
shlb
pop
out
test
in
sarb
add
leave
into
jmp
movsb
add
fbstp
mov
add
mov
nop
clc
pop
add
repnz
add
out
pop
mov
add
add
jns
js
add
xchg
roll
loope
add
insb
js
add
add
mov
jecxz
jb
aam
bound
pop
lea
push
sub
shl
pop
push
push
push
call
add
add
lea
imul
stc
jl
push
int3
pop
stos
imul
mov
loope
add
add
add
add
xchg
mov
xchg
add
ret
add
popa
add
add
ror
add
add
add
int
jns
push
mov
mov
lea
pop
push
push
push
call
pushf
cld
push
pop
add
pop
aad
xchg
jns
add
in
add
hlt
fwait
movl
add
add
pushf
mov
fldt
add
add
xchg
out
add
xchg
xchg
loope
add
fnstsw
add
int
andl
mov
lea
pop
push
push
shr
rol
pop
pushl
push
push
sub
push
sub
add
ror
sub
add
pop
dec
shl
pop
push
push
lea
push
lea
push
push
call
add
mov
cmpsb
add
mov
xchg
add
addr16
push
in
add
add
xchg
adc
stos
add
add
add
les
push
call
add
add
cmpsb
xchg
add
lock
mov
cld
lea
pop
push
push
push
lea
push
push
lea
push
call
add
add
add
rcl
popa
add
out
data16
xchg
add
add
add
add
add
add
lret
stc
xchg
out
mov
mov
jl
out
cld
rolb
add
cmpsl
pop
mov
out
mov
xorb
add
pop
call
push
push
shr
sub
inc
dec
push
or
not
add
inc
sub
sub
sub
pop
shr
inc
pop
push
push
lea
push
push
call
add
out
add
imul
fistps
jl
js
add
mov
mov
cmc
out
incb
mov
mov
add
into
cld
add
sar
lods
popf
add
add
jmp
faddl
rcl
add
pop
add
ret
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
add
jns
add
scas
lods
pop
xchg
xlat
mov
pop
push
mov
add
mov
pop
mov
insb
mov
pop
call
jne
cwtl
sti
add
loope
add
push
popf
xchg
les
and
push
stc
add
fiaddl
add
xlat
mov
lahf
cmp
fcoml
add
add
add
jge
mov
add
test
push
loope
mov
lea
pop
push
call
push
push
shr
push
and
add
add
shr
sub
add
pop
shr
shr
dec
add
pop
push
push
push
call
add
add
add
hlt
add
push
ja
add
add
push
testb
push
add
test
add
fwait
call
jno
jns
aam
mov
ficompl
imul
add
std
cmp
xchg
add
add
lods
add
mov
out
clc
add
add
add
add
pushf
add
sahf
mov
mov
lea
pop
pushl
push
ror
shr
pop
call
call
push
add
not
pop
jmp
pushl
push
dec
lea
shl
pop
mov
jmp
push
push
not
sub
push
or
not
add
dec
sub
sub
xor
pop
add
inc
pop
push
xor
lea
sub
pop
pushl
push
shl
add
add
pop
call
push
push
call
arpl
xchg
fcoms
mov
mov
gs
add
mov
add
mov
xchg
xchg
add
jge
add
adcl
mov
lea
pop
push
push
lea
xor
pop
call
push
push
rol
add
lea
push
xor
add
sub
shr
add
pop
lea
pop
push
xor
shl
pop
pushl
push
xor
pop
call
push
push
pop
call
push
add
inc
lea
pop
leave
push
push
push
push
push
push
push
push
push
call
idivl
int3
movsl
cwtl
mov
add
add
add
jmp
add
add
int3
add
shl
add
add
imul
add
add
jns
mov
jecxz
imul
cld
lea
pop
add
push
shl
shl
shl
pop
pop
push
xor
inc
pop
pop
push
not
sub
rol
pop
pop
push
ror
shr
pop
pop
leave
push
add
rol
shl
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
fsubs
add
add
mov
add
add
add
add
lods
add
bound
out
mov
cmpl
add
add
loop
rol
jno
rclb
mov
mov
iret
out
mov
lea
pop
ret
leave
push
lea
pop
ret
push
not
dec
pop
push
push
push
call
pop
shll
shrl
pop
leave
mov
add
add
add
movl
ret
in
jmp
loop
mov
repnz
mov
faddl
xchg
add
add
add
add
xchg
xorl
fldenv
push
roll
into
add
add
xchg
pop
xchg
in
movsb
add
pop
movb
jb
shl
mov
int3
lea
pop
mov
push
lea
push
push
push
push
push
call
add
mov
xchg
pop
scas
cmpsb
add
add
loop
aad
mov
add
add
add
add
cmpsl
out
iret
add
outsl
mov
push
call
jle
add
add
je
cld
negb
add
mov
push
test
add
xchg
xchg
lds
pushf
add
pop
lret
stos
aad
mov
mov
add
lock
add
jns
add
ljmp
add
hlt
lea
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
push
push
push
call
add
movsb
mov
jno
add
add
popf
mov
mov
aad
add
roll
add
mov
in
pop
imul
loopne
mov
loopne
cmc
into
js
iret
loope
add
ja
add
sbbl
add
fcompl
pop
add
rcl
mov
mov
and
jmp
push
pop
mov
push
push
push
push
push
push
call
push
add
xchg
add
fwait
add
push
add
ja
bound
push
jne
add
jmp
mov
lods
jb
add
popf
cwtl
in
ror
aad
filds
iret
fwait
loopne
push
add
in
fldenv
cli
loope
add
add
mov
add
lret
mov
out
pop
mov
jmp
add
mov
lea
pop
and
push
lea
push
lea
push
call
add
mov
out
add
stc
add
lahf
add
lea
adc
loop
add
push
mov
mov
test
pop
add
push
sahf
pop
add
scas
jnp
fbld
add
in
cli
push
pop
xchg
add
scas
add
mov
aam
bound
xor
push
push
push
lea
push
push
push
lea
push
call
pop
add
add
mov
add
mov
add
add
int
add
jmp
movl
add
fwait
test
add
test
shlb
shl
add
filds
mov
add
push
mov
pusha
mov
imul
arpl
lock
sbbb
sbb
xor
push
xor
sub
pop
add
push
push
push
push
call
lds
xchg
add
add
cmpsb
add
mov
cmpsl
outsl
lahf
add
lds
add
add
int3
sti
movsb
mov
xchg
add
xchg
loop
ret
xchg
fs
add
pop
sarb
stc
mov
lahf
mov
lea
pop
xor
dec
push
not
add
pop
sub
push
xor
pop
jmp
sub
push
push
push
lea
push
push
push
call
test
add
add
jge
cmpsl
in
les
add
add
ja
mov
mov
add
cld
mov
push
arpl
lahf
pop
push
movsb
pop
mov
in
mov
int3
add
mov
sti
mov
lea
pop
pushl
pop
push
sub
pop
sub
cmp
jne
push
add
pop
mov
lea
push
sub
pop
sub
push
xor
sub
sub
pop
mov
push
shr
ror
pop
shr
add
push
ror
not
pop
sub
push
shl
dec
xor
pop
pushl
push
push
push
push
push
push
push
push
call
add
jb
nop
mov
xlat
cmc
out
scas
xchg
lods
add
add
pop
add
add
add
add
int
add
add
js
imul
mov
add
cli
mov
movsl
pop
add
lea
pop
pop
push
dec
inc
inc
not
pop
shr
and
push
add
pop
sub
push
lea
rol
pop
cmp
jne
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
jb
add
add
fucomi
lcall
lea
mov
xchg
push
mov
add
jmp
jno
arpl
xchg
jbe
add
push
in
mov
lea
pop
leave
push
push
push
push
push
push
lea
push
call
add
pop
movsl
lcall
pushf
icebp
add
test
add
mov
pop
jp
add
add
push
out
add
scas
push
out
stc
add
mov
add
repnz
add
jmp
push
in
cltd
xorb
add
jmp
mov
lea
pop
ret
push
inc
ror
pop
push
mov
push
push
call
fstpl
add
push
add
rcl
add
mov
jl
test
add
loop
mov
aad
add
test
push
add
add
add
add
add
add
cwtl
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
xchg
add
push
add
pop
cli
add
pop
mov
insb
lret
out
scas
jo
add
add
mov
pop
fstp
add
add
add
add
ret
mov
add
add
loope
add
ja
add
fadds
rcrl
mov
xchg
leave
mov
add
add
sub
push
shl
pop
push
push
add
pop
push
push
push
lea
push
lea
push
call
xchg
int3
in
flds
aad
add
xchg
add
mov
add
add
mov
add
jae
add
mov
add
jae
add
xchg
sti
jne
add
lea
pop
push
push
push
call
push
add
push
mov
pop
add
out
loope
mov
into
mov
add
aam
add
fidivrs
fldcw
mov
add
pop
add
mov
mov
stos
int
mov
push
mov
movl
add
add
or
pop
or
movb
shl
pop
lea
push
pop
sub
push
lea
push
push
lea
push
push
push
call
xchg
jecxz
ljmp
add
ja
mov
int3
jle
add
mov
pop
enter
imul
add
add
add
in
mov
std
add
fildll
popl
icebp
add
ljmp
add
leave
add
add
fmulp
loopne
clc
mov
cld
fadds
ret
add
push
lea
pop
mov
shr
push
shr
sub
pop
add
push
add
add
not
rol
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
xchg
pop
scas
out
out
add
cmpsb
popf
add
mov
mov
add
add
pop
outsl
add
jp
add
mov
lods
add
push
mov
mov
add
mov
addl
lea
pop
add
mov
push
inc
lea
pop
add
push
rol
pop
xor
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
fisubrs
aam
ljmp
cli
insb
mov
add
add
add
imul
push
out
icebp
add
xchg
add
pusha
jae
jecxz
out
jb
leave
movsb
je
pop
jb
cmpsb
movsl
add
loopne
imul
bound
pop
mov
and
push
push
push
push
push
push
push
push
push
push
call
out
movsl
xor
jle
add
lea
add
jl
icebp
arpl
add
add
jb
jno
call
xchg
jnp
mov
pusha
fstps
data16
xchg
ja
cli
add
add
pop
rol
push
rol
rol
sub
shl
pop
rol
push
inc
sub
pop
xor
push
shr
lea
pop
inc
push
push
push
push
lea
push
push
lea
push
lea
push
call
loope
add
add
jmp
jo
data16
data16
add
xchg
add
ror
test
mov
addl
add
popa
fwait
add
lock
jns
add
and
cmp
jne
push
lea
push
push
call
xchg
add
imul
add
test
mov
add
add
add
add
add
mov
mov
add
out
lahf
lahf
jns
jl
mov
add
add
add
add
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
call
stos
negb
add
jno
stos
add
aad
add
std
scas
clc
mov
add
js
add
jp
add
jge
add
add
rcrl
add
lds
int3
lea
pop
cmp
je
add
push
lea
pop
cmpl
jne
push
lea
push
push
push
call
push
out
out
les
jne
aam
add
add
mov
in
add
rclb
add
aam
add
fnstsw
mov
int
test
add
xchg
xchg
add
jge
add
add
pop
xor
pop
push
push
push
lea
push
lea
push
call
cmpsl
mov
mov
push
add
xchg
jnp
mov
add
cwtl
add
xchg
add
mov
in
add
add
add
add
add
rclb
loopne
aam
add
pop
pop
rcl
pop
movsb
fcompl
add
fcomi
arpl
mov
push
out
pusha
add
push
add
fsub
mov
lea
pop
pop
pop
push
add
pop
pop
push
ror
add
pop
pop
leave
push
xor
pop
ret
push
ror
xor
pop
mov
push
push
push
lea
push
push
lea
push
call
jmp
add
add
cwtl
xchg
aad
add
test
add
add
add
pusha
sti
les
lahf
xchg
add
add
movb
jbe
add
mov
xchg
xlat
add
add
jne
jae
jb
mov
mov
add
add
pop
add
push
inc
sub
lea
add
pop
push
push
rol
pop
push
push
dec
add
pop
add
push
dec
pop
mov
cmpw
push
not
inc
not
pop
pop
pop
push
lea
push
call
add
pop
movsl
xchg
scas
add
mov
out
add
add
fidivs
add
add
cmp
rolb
enter
push
add
add
push
cmp
insb
add
add
pop
mov
push
lea
push
call
mov
ljmp
movl
shrl
xchg
add
jb
in
cmpsl
shl
add
in
movsl
out
xchg
scas
test
add
add
in
scas
out
xorl
add
push
jno
cwtl
add
pop
push
push
push
push
push
call
add
add
aam
add
ljmp
add
jae
mov
gs
add
add
add
add
icebp
mov
add
add
add
popa
adc
out
icebp
call
lret
lret
rcrl
xor
pop
push
push
push
lea
push
push
push
push
push
push
push
call
pop
out
add
arpl
add
pop
cltd
add
push
movsb
shlb
pop
add
stc
mov
push
add
roll
gs
pop
lods
add
icebp
mov
add
cmc
add
iret
test
out
add
add
push
add
add
push
jnp
add
ljmp
sub
push
push
push
push
push
lea
push
call
pop
addl
nop
cltd
je
pushf
add
add
lds
loopne
xchg
add
jle
add
pop
add
popf
pop
jae
call
add
add
add
jbe
outsl
lea
repnz
fiaddl
push
add
push
add
add
insb
lahf
add
fistpl
stc
fisubrs
mov
in
fisttps
pop
pop
push
shr
pop
pop
push
inc
xor
not
pop
pop
leave
push
push
lea
push
lea
push
lea
push
push
lea
push
call
and
add
jo
lret
mov
test
test
mov
add
data16
jno
add
push
in
add
add
scas
cwtl
add
aad
add
mov
add
add
jb
out
add
cwtl
out
mov
push
lret
add
pop
ret
push
shr
rol
ror
add
pop
push
push
push
lea
push
lea
push
push
call
mov
jnp
mov
pop
add
neg
xchg
in
xchg
add
cltd
add
sub
mov
pop
cmpl
out
aad
push
stos
xchg
mov
roll
fbstp
in
add
pop
aad
leave
stos
mov
add
jo
bound
data16
std
add
out
scas
popa
mov
xor
add
add
je
add
pusha
adc
mov
push
xor
sub
ror
pop
add
push
push
pop
push
push
push
push
push
push
push
push
call
cmpb
test
fs
lods
jmp
jp
fs
add
lret
add
hlt
mov
add
add
add
add
xchg
mov
add
add
jo
int3
mov
lea
pop
push
push
push
push
push
push
call
add
add
push
lock
pop
mov
andb
xchg
xchg
jge
add
outsl
mov
add
sti
add
pop
addl
add
js
add
add
pop
mov
push
lea
push
push
push
push
push
call
add
jo
xchg
jmp
add
mov
add
add
add
mov
incb
mov
rcll
enter
pop
fstpt
jbe
mov
add
jle
std
sbbb
jp
add
add
add
add
leave
add
mov
xchg
in
roll
cld
lea
pop
push
pop
push
inc
xor
rol
shl
pop
lea
push
push
push
lea
push
lea
push
push
call
add
push
add
in
mov
add
add
add
push
lea
jno
add
add
not
xchg
jle
push
add
sti
add
imul
pop
fcmovbe
loop
add
mov
nop
add
add
add
add
stc
mov
add
fmuls
pop
sub
push
push
lea
push
push
lea
push
push
call
jno
add
cltd
mov
add
int3
add
add
add
add
mov
mov
add
lock
mov
imul
fwait
in
int
ljmp
add
mov
add
mov
push
add
add
mov
push
sarb
pop
mov
lea
pop
mov
push
lea
sub
inc
pop
shr
push
push
push
lea
push
call
add
lods
popf
insb
call
xchg
jecxz
add
scas
leave
add
add
add
loopne
push
add
jbe
mov
fnstcw
out
pop
mov
cltd
ja
add
add
push
add
addb
add
ffreep
fisubrs
add
add
pop
pop
cld
add
loop
mov
lea
pop
add
mov
push
sub
pop
add
push
pop
pushl
push
add
pop
popl
push
push
call
cmpsb
add
add
add
mov
lret
roll
add
add
adcl
mov
insb
lock
add
test
xchg
cmpsb
add
fbld
shrb
add
pop
mov
leave
add
jno
insb
xchg
fidivrs
add
cmc
add
mov
lods
push
jecxz
jns
mov
cld
lea
pop
mov
add
push
lea
push
call
stos
lods
add
mov
lret
add
mov
push
cwtl
add
mov
pop
shrl
add
add
test
add
add
push
add
movsl
fstpt
lahf
add
pushf
pop
pop
add
pop
xchg
add
pusha
insb
add
iret
add
addl
mov
lea
pop
xor
push
shl
shr
pop
lea
mov
push
inc
shr
sub
pop
add
push
add
add
pop
xor
push
pop
rol
push
push
push
push
call
popf
fdiv
push
fwait
jae
scas
mov
lret
lcall
add
enter
cli
add
add
add
add
aam
add
add
aad
pusha
mov
add
cld
lea
pop
nop
nop
push
push
push
call
leave
add
add
pushf
xchg
addl
add
add
add
push
loop
fisubrs
mov
add
fldl
add
cmc
add
mov
push
add
nop
add
add
xchg
add
testl
or
xor
nop
push
push
push
push
push
lea
push
lea
push
push
call
leave
add
jl
data16
add
push
add
add
pop
data16
add
cmc
testl
call
pop
add
leave
cld
mov
add
scas
fst
add
add
in
jno
add
add
add
add
pushf
js
add
add
add
add
add
mov
pop
je
add
mov
cld
add
data16
push
add
inc
sub
add
pop
inc
nop
push
lea
lea
pop
nop
push
push
call
loopne
mov
mov
jp
jns
mov
add
mov
popa
fsubl
mov
xchg
mov
xchg
jl
xchg
rol
add
add
add
add
fidivrs
out
add
add
mov
int3
lea
pop
cmpb
jne
push
sub
pop
add
push
dec
pop
nop
push
lea
push
push
call
enter
add
add
lcall
add
fdivl
lret
pop
pop
int3
aam
cmpsl
add
push
add
xchg
gs
jb
popa
aad
rclb
mov
shrl
add
call
addl
addr16
nop
push
push
push
call
mov
add
scas
mov
xchg
in
add
lods
fsub
in
add
test
jmp
ljmp
fidivrl
test
add
jp
add
pusha
xlat
shlb
jbe
adcl
data16
cmp
je
push
not
not
ror
pop
nop
push
push
push
push
lea
push
push
push
lea
push
call
lea
cmc
add
jle
add
movsb
int3
ljmp
mov
xchg
enter
popl
gs
scas
add
aad
pop
faddp
add
sbbb
icebp
out
scas
jbe
add
pop
add
add
je
out
mov
add
leave
add
mov
mov
mov
add
outsl
gs
add
pop
add
bound
test
lea
pop
nop
push
sub
rol
pop
inc
push
add
dec
shr
pop
nop
push
rol
shr
shr
pop
nop
push
push
push
call
mov
add
test
mov
jae
mov
push
add
push
fiadds
out
add
cld
pop
add
add
out
add
testb
in
add
add
add
add
addb
jmp
mov
add
add
lock
push
mov
add
push
rorb
jecxz
add
std
mov
lea
pop
cmp
jb
push
lea
push
push
push
call
add
in
in
add
outsl
add
test
sti
add
ljmp
sbbb
mov
add
xchg
push
movsl
lods
add
add
add
movsl
add
add
push
mov
lea
pop
xor
jmp
push
dec
sub
ror
pop
mov
push
push
push
push
push
push
push
call
mov
jb
stc
add
rcr
les
mov
add
jns
add
mov
mov
push
pusha
lods
add
add
call
add
mov
add
mov
push
addl
lea
pop
add
movzwl
push
add
pop
mov
push
rol
pop
add
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
rcll
push
sti
add
repnz
xchg
roll
out
mov
nop
add
add
add
pop
add
mov
add
add
test
cmpsb
lret
pop
jle
outsl
add
scas
add
pop
mov
xor
push
push
lea
push
lea
push
push
lea
push
push
call
add
ja
add
mov
fwait
add
lods
rcr
xchg
stos
add
xchg
gs
mov
xchg
scas
mov
ret
clc
lods
leave
xlat
jno
cli
add
cld
add
stc
test
xchg
mov
sahf
mov
jb
cmpsl
cld
add
add
pop
test
pop
nop
mov
sbb
xor
shl
push
push
push
lea
push
lea
push
call
add
add
andl
add
add
add
lret
add
add
ljmp
add
add
push
nop
xchg
mov
jge
add
push
hlt
outsl
clc
add
fidivrs
aam
bound
xor
shl
push
rol
add
pop
xor
shl
push
rol
pop
xor
mov
push
sub
ror
inc
pop
add
push
push
push
push
lea
push
push
call
loop
data16
call
jge
add
out
add
jmp
add
jge
mov
xchg
mov
ljmp
movsl
js
add
xchg
add
sbbl
hlt
pop
lret
mov
add
add
cli
in
js
les
push
shl
add
xor
ror
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
call
add
add
aam
add
add
push
ljmp
add
add
lahf
pop
push
mov
icebp
add
fisubrs
ret
ja
shll
imul
add
leave
pop
lahf
add
add
in
jne
jno
push
mov
or
pop
in
add
cmpl
add
sbb
pop
leave
push
inc
pop
ret
push
rol
pop
push
push
shl
not
shl
inc
pop
mov
push
push
dec
rol
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
enter
jbe
cli
add
add
in
jge
mov
popf
mov
cltd
add
jo
lret
add
add
add
jo
test
add
jne
add
mov
icebp
fildll
popf
add
sahf
add
jp
add
add
add
add
push
add
mov
add
data16
mov
addb
arpl
add
pop
push
push
ror
pop
mov
push
push
lea
push
push
push
push
push
call
movsb
add
xchg
mov
fmul
jae
add
scas
push
add
out
lock
add
sarb
add
xchg
add
add
addr16
in
add
add
jle
jle
pop
pop
int3
popa
add
add
add
push
ljmp
rcl
mov
add
roll
add
add
mov
popa
xchg
mov
lea
pop
mov
push
push
push
call
add
subb
hlt
pushf
mov
enter
in
mov
movsl
filds
add
lods
add
xchg
in
add
fisubrs
loope
sahf
hlt
add
outsl
pushf
add
addr16
add
add
lods
add
jns
lahf
mov
enter
incb
lods
out
lret
add
add
jb
add
stos
fucomi
fsubs
add
imul
arpl
mov
push
sub
pop
test
je
push
lea
push
push
push
push
lea
push
push
lea
push
call
xlat
mov
fstps
shrl
std
ljmp
add
add
cltd
jno
testb
add
jle
mov
lock
popf
out
xchg
jns
xchg
add
add
popa
movsb
std
add
add
std
add
lahf
pop
imul
mov
add
add
cld
lea
pop
mov
push
push
call
add
add
push
fists
sar
add
outsl
add
movl
add
rolb
gs
mov
add
add
add
push
test
mov
add
add
loope
add
arpl
mov
push
add
jnp
imul
add
add
add
and
outsl
aam
je
mov
cld
lea
pop
test
je
push
add
pop
mov
mov
push
push
push
push
push
push
lea
push
push
push
call
jo
add
add
add
lea
add
imul
push
add
jns
add
add
arpl
xchg
push
mov
lock
add
add
add
add
ret
nop
add
add
int3
lea
pop
mov
inc
push
add
rol
inc
pop
cmp
je
push
shl
not
shr
pop
test
je
push
add
dec
not
pop
mov
inc
push
push
lea
push
push
push
call
fsts
cld
mov
add
add
pushf
add
jmp
js
cli
add
add
lods
xchg
mov
add
add
mov
ja
movsb
add
repnz
bound
fnstsw
arpl
rcrb
mov
lea
pop
cmp
je
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
les
movsl
add
cld
add
jbe
hlt
lcall
test
add
faddl
into
fiaddl
add
mov
add
add
push
add
mov
lea
pop
test
jne
push
rol
ror
sub
ror
pop
xor
push
push
push
push
call
add
adc
add
icebp
add
add
add
mov
push
add
jp
mov
add
add
popa
lds
add
cmpsl
pop
test
add
add
repnz
in
data16
mov
mov
add
cmpsl
add
pop
jo
repnz
add
add
add
jno
ret
xchg
mov
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
call
add
fiadds
add
add
lea
movsb
add
lea
jmp
pusha
movsl
add
mov
jne
mov
add
add
shl
add
pushf
add
xchg
clc
mov
add
test
stos
xchg
add
add
mov
add
int3
lea
pop
pop
push
add
lea
not
pop
pop
push
shr
shl
pop
pop
leave
push
push
push
call
jle
shlb
fnstenv
sbbl
add
push
in
pop
movsb
test
icebp
jno
add
add
test
fidivrl
jle
jp
pop
add
add
mov
mov
test
add
pop
ret
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
lahf
add
add
jae
add
add
add
add
xchg
xchg
pop
add
aad
add
rcll
mul
push
add
imul
rolb
add
add
ja
add
add
icebp
add
add
add
filds
add
jl
add
jge
testb
inc
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
jmp
lahf
mov
fwait
add
pop
rcl
mov
out
add
cmpsb
add
gs
pop
pop
add
insb
pop
add
add
jae
add
pop
push
mov
jmp
add
cwtl
pop
mov
popa
push
add
mov
test
add
jge
xchg
mov
jmp
arpl
pop
cmp
jne
push
push
push
call
add
into
add
add
lds
jp
push
push
push
arpl
pop
ja
cmc
add
add
rclb
imul
add
add
push
add
xlat
shl
add
stos
add
mov
jmp
mov
data16
les
add
push
xchg
mov
rcl
popa
add
loop
jecxz
mov
xor
xchg
pop
lea
push
inc
dec
sub
pop
mov
push
push
push
lea
push
call
add
mov
in
add
mov
outsl
add
mov
sar
imul
add
pop
outsl
jnp
add
mov
jno
add
lret
jmp
push
xchg
add
in
into
push
lea
pop
test
je
mov
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
aad
filds
push
bound
jge
mov
jno
add
sahf
push
add
mov
add
xchg
add
pop
mov
outsl
cltd
mov
rcll
lret
add
add
mov
lea
pop
add
push
rol
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
push
push
call
add
jnp
imul
repnz
addl
add
add
add
movsl
add
aam
fsub
add
pop
scas
add
rolb
jne
hlt
sar
jle
add
add
add
mov
lea
pop
test
je
push
push
push
push
push
push
push
call
add
add
imulb
add
cmpsl
add
pop
add
add
add
add
xchg
mov
add
pop
jno
add
lret
stos
add
add
addl
loopne
add
add
outsl
add
shll
xchg
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
incb
add
add
shl
xchg
shlb
jmp
add
add
shl
add
push
mov
lahf
add
mov
mov
add
mov
xchg
lret
add
outsl
pop
add
add
cmpl
pop
mov
pop
add
add
enter
push
gs
push
jo
add
push
jge
rorl
add
cmp
je
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
push
xchg
add
mov
int
push
in
push
add
clc
add
add
in
mov
lret
add
insb
jnp
jmp
add
push
mov
add
mov
out
add
rolb
push
xchg
jns
sti
add
xchg
mov
add
pop
jmp
xor
push
push
lea
push
push
call
test
add
scas
hlt
add
mov
addr16
jno
add
mov
rolb
add
xchg
cli
sbb
add
pushf
pop
imul
pop
pop
push
lea
shr
pop
pop
push
push
push
call
add
add
add
xchg
add
add
mov
lret
mov
andb
ficoms
hlt
mov
test
jo
cld
jp
push
cld
mov
lea
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
xchg
lods
in
add
jecxz
fiadds
addb
push
mov
add
add
add
add
mov
scas
fidivrs
add
mov
add
shl
lcall
in
push
mov
jp
mov
rcll
fiaddl
in
mov
fs
cli
push
push
mov
add
cltd
push
add
popa
add
add
add
add
xchg
stos
add
and
push
push
push
push
push
lea
push
push
call
add
pushf
add
push
and
fildl
out
in
mov
add
pop
test
add
cltd
mov
push
add
filds
add
test
in
xlat
mov
mov
add
mov
add
add
add
pop
ret
push
lea
push
push
push
push
push
push
push
call
add
xlat
pop
add
mov
cli
in
add
imul
add
add
test
add
add
jae
add
add
push
add
arpl
in
add
lods
add
imul
add
add
mov
test
pop
add
add
push
add
jmp
repnz
mov
lea
pop
lea
push
sub
add
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
cmpsb
add
sahf
xchg
push
add
out
stc
pop
scas
out
ljmp
push
add
test
add
shl
sahf
add
pop
jmp
add
add
push
fisttps
cmpsl
mov
push
mov
add
add
loop
test
mov
add
mov
les
pop
push
push
push
call
scas
add
add
mov
cltd
mov
mov
mov
add
mov
cmpsb
add
pop
mov
fildl
popa
lds
fcmovbe
push
pop
mov
lea
pop
leave
push
push
push
call
mov
add
imul
movsl
add
add
add
aam
add
out
add
add
cmc
scas
cwtl
out
add
add
push
xchg
jo
in
add
fs
add
enter
scas
add
add
jl
sahf
bound
or
ret
push
push
push
push
call
jbe
movsl
in
add
add
lods
add
jecxz
add
rclb
add
popa
add
mov
frstor
mov
in
fsqrt
add
add
add
jle
loope
mov
add
add
add
add
pushf
fadds
add
notl
int3
gs
xchg
movsb
lret
add
test
sahf
je
leave
mov
mov
lea
pop
mov
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
cmpsl
out
add
jecxz
arpl
in
mov
cmpsb
pop
push
pop
outsl
push
add
fiaddl
out
push
add
pop
jne
add
push
add
cltd
sahf
lea
mov
add
add
insb
mov
mov
rolb
jno
cwtl
fs
lea
pop
pop
pop
push
push
push
push
lea
push
call
add
add
pop
add
mov
aad
xchg
roll
addl
stc
add
jp
add
add
clc
xchg
addb
add
imul
loop
add
sahf
mov
mov
lea
pop
pop
leave
push
push
lea
push
push
push
push
push
push
call
testb
mov
add
in
add
mov
mov
add
push
lock
jge
testl
adcb
add
add
clc
jge
test
xchg
jb
outsl
add
jmp
lahf
stc
add
xchg
add
add
lea
pop
ret
test
push
test
jae
test
jb
lret
data16
out
jae
push
shll
mov
jae
push
mov
add
imulb
adc
out
imul
lods
mov
test
aaa
lods
push
negl
stos
fcmovu
dec
loope
fadd
shll
push
test
popf
push
ficomps
adc
add
mov
mov
dec
insl
push
push
fwait
add
push
mov
pop
mov
das
ljmp
notb
and
or
leave
ss
xlat
test
cmp
xor
sbb
ja
aaa
mov
sub
dec
leave
dec
icebp
sahf
jl
pop
jl
push
out
mov
repnz
add
clc
arpl
pop
icebp
shrb
mov
dec
rcrb
push
popa
pusha
mov
popa
movl
stos
je
shr
ret
divb
jne
pop
cmpsb
or
mov
or
pop
pusha
or
add
mov
or
mov
addb
insb
cmp
and
jnp
xor
ljmp
cld
imul
adc
dec
sub
inc
in
loop
aaa
cmp
subb
mov
cmp
pop
sbb
clc
xlat
push
mov
pop
xor
jae
shrl
inc
mov
or
lcall
notb
dec
dec
xchg
push
xchg
jge
pop
lods
mov
cmp
loop
cs
xor
rcll
cmp
cmp
in
fs
push
mov
jns
sub
sub
pop
bound
xchg
push
outsb
sahf
inc
neg
mov
mov
inc
or
cmpsb
mov
in
mov
scas
daa
cmc
clc
les
push
jmp
cmp
and
call
mov
movsb
mov
xlat
int3
mov
and
cmp
call
das
jge
divl
jbe
add
int3
orl
dec
pop
sub
scas
jg
jl
dec
cmpsl
adc
jb
cmp
jae
cmp
xor
std
or
or
sysexit
pushf
cmp
adc
addr16
lds
jb
add
aas
cltd
andb
std
push
sbb
lock
xchg
loop
lea
inc
push
ja
lret
je
out
push
fisubrs
push
mov
nop
jns
fstpl
sub
mov
pop
push
nop
loope
xor
div
or
xor
cmpsl
jbe
inc
add
inc
xlat
adc
pusha
or
cmp
add
push
push
movsw
xor
dec
cltd
inc
dec
mov
or
pop
sbb
ja
cmp
lds
lahf
cmp
sub
cmc
add
lret
pop
lret
sbb
stos
insb
cmp
clc
cld
or
jg
inc
popa
jne
into
xor
cmpsl
mov
out
jp
jb
enter
jae
inc
and
or
cli
sarb
and
push
fld1
das
xchg
and
jg
and
dec
pop
pop
stos
leave
popl
push
loope
cmp
out
pop
lret
dec
push
mov
hlt
daa
fldenv
sti
and
outsl
cmp
mov
lret
dec
adcb
rorb
out
pushl
into
mov
mov
shll
add
arpl
cmpsl
enter
stos
adc
aad
or
lods
ret
push
mov
push
cmp
and
mov
cmpsb
sar
ret
sub
faddl
xor
jns
lock
push
and
test
xchg
push
mov
dec
xor
nop
das
xor
clc
xchg
outsl
add
loope
shrl
mov
clc
sbb
int3
std
scas
cmpsl
sub
ret
lret
rcll
movsl
mov
mov
repz
imul
outsb
push
pop
adc
std
and
mov
lods
in
mov
sub
lret
xchg
pop
push
xchg
cmc
insb
ljmp
sbb
ret
dec
push
cmc
mov
imul
adc
scas
sbb
sbb
dec
inc
sidtl
cmp
ss
sub
push
mov
fwait
add
cmc
js
dec
mov
pop
imul
cwtl
dec
in
rol
fsubl
xchg
adc
in
fucomi
fs
insl
pop
mov
stc
inc
mov
out
jnp
sbbb
sbb
imul
in
std
jno
sub
rorl
pop
jecxz
and
pop
mov
jb
lods
pop
imul
mov
cmp
pop
cld
cmp
push
jno
dec
mov
or
xchg
xchg
ljmp
stc
mov
and
xlat
dec
dec
sbb
pusha
mov
js
lahf
frstors
push
cmpsl
aam
fstps
push
mov
jbe
xchg
inc
call
jecxz
mov
jp
and
shll
out
ljmp
pop
mov
outsl
sub
xor
sti
pushf
mov
lret
pusha
jno
icebp
dec
cli
cmp
inc
sbb
xor
icebp
inc
xor
xchg
sbb
sub
scas
jecxz
or
xor
xchg
jecxz
pop
xchg
fwait
repnz
fbld
adc
repnz
sahf
jne
gs
and
dec
jmp
and
adc
push
jns
mov
arpl
mov
inc
arpl
pop
mov
add
inc
fiadds
xchg
ret
je
mov
jge
lcall
movsb
call
xchg
fs
adc
das
in
push
fidivl
or
pop
dec
je
mov
xor
dec
addr16
and
adc
xchg
loope
movsb
mov
sub
lods
rcrb
mov
or
stos
ds
jge
pop
jbe
jae
xchg
bound
out
jne
bound
mov
inc
leave
inc
xor
in
push
fcmovu
ret
cmp
jae
jg
and
pop
mov
cli
std
fstps
inc
mov
test
outsl
shrb
ret
lock
ljmp
cli
pop
cli
pop
xchg
ffreep
sbb
dec
mov
popf
daa
mov
adc
ss
dec
cmp
rcrb
add
xor
dec
dec
mov
push
xor
fwait
movsl
shl
xor
jo
mov
cli
add
ljmp
and
les
and
mov
sub
push
mov
pop
add
out
adc
xor
mov
popf
clc
in
or
jg
cmp
cmc
adcb
dec
jbe
lahf
or
sub
sbbl
aas
pop
hlt
pop
and
into
mov
and
out
enter
push
ljmp
push
add
cmp
das
divb
out
stc
jb
dec
push
test
enter
into
or
dec
jnp
cmp
sarb
ret
adc
mov
sbb
mov
mov
mov
shll
adc
xor
outsl
mov
jge
out
mov
stos
sbb
roll
cs
mov
jle
pop
lods
and
inc
data16
stos
mov
cmp
fdivrl
fcomi
or
bound
fnstcw
pushf
repnz
mov
dec
dec
test
lcall
sub
mov
jmp
outsl
inc
push
lret
sbb
xor
jnp
and
fadds
xchg
jno
add
xor
sahf
mov
loop
out
aad
scas
in
mov
mov
pop
xchg
out
lea
int
xor
out
sub
xchg
or
fidivs
shld
and
jne
addr16
push
aaa
out
adc
adcl
not
sbbb
cld
fsubr
popa
push
int3
lret
ret
mov
push
jns
mov
and
sub
repz
les
int3
inc
mov
pop
popa
iret
sub
sbb
xchg
inc
sti
aas
pushf
movsl
aas
pop
out
cwtl
test
mov
xor
ret
arpl
jmp
adcl
sub
jb
sbb
fs
mov
cmp
jne
mov
mov
shlb
pop
mov
pusha
dec
rep
vcvtsd2si
test
add
cmp
loopne
push
pop
inc
rorb
jo
or
mov
call
scas
xor
lcall
test
dec
aaa
add
jno
push
imul
xor
notb
cmp
into
stc
loop
mov
inc
mov
adcb
scas
inc
imul
fdivl
sbb
ret
mov
fstp
das
adc
xor
ret
insl
shl
imul
add
loope
adc
push
dec
cmp
mov
cmpsl
test
add
mov
test
xchg
dec
ss
pop
jbe
cmpsb
mov
cmp
adc
mov
add
data16
jae
mov
loop
pop
clc
adc
dec
dec
nop
call
dec
aaa
mov
mov
mov
mov
popf
outsl
pop
adc
lahf
imul
loope
pop
in
stos
jle
loopne
or
cld
sbb
shl
sbb
fistpl
mov
jle
or
mulb
out
jnp
inc
in
inc
inc
xchg
ret
loop
and
cltd
gs
inc
ljmp
or
aas
cwtl
rolb
lret
push
push
dec
sbb
push
sub
cmp
xor
mov
jl
fistpll
cmp
adc
mov
pop
push
push
lock
xor
push
xor
push
jae
les
add
or
les
and
and
cmp
in
je
dec
mov
fnstcw
sbb
sbb
cmp
hlt
dec
sti
jbe
inc
jbe
je
js
adc
jnp
enter
cmp
and
adc
ret
cwtl
adc
jp
inc
fdivrl
and
mov
les
std
out
pop
rolb
int
int
mov
repz
enter
push
or
jne
and
and
mov
sbb
cmc
mov
jbe
test
sbbb
and
aas
inc
popf
int3
push
push
push
aam
mov
push
push
aas
xlat
dec
sbb
cli
repz
fidivl
sub
jne
int3
xchg
and
mov
and
push
int
lahf
pop
cmp
mov
insl
dec
inc
mov
mov
fisubl
mov
and
mov
movsl
nop
imul
shlb
out
or
jl
loopne
sbbl
in
dec
pop
mov
xchg
xchg
lret
fisttpl
push
pusha
cmc
stos
clc
add
sbb
jbe
ja
imull
dec
mov
data16
adc
sbb
loope
mov
fnstsw
je
jbe
icebp
lahf
add
adc
adc
jo
pushf
shr
mov
pop
sub
out
std
dec
cwtl
pusha
pop
jl
stos
jl
inc
xorl
jge
shll
xchg
mov
scas
scas
xor
pop
add
fildll
fcmovb
mov
mov
cmp
mov
mov
add
mov
inc
jae
ds
js
and
inc
fld
sbb
fistpll
add
je
repnz
ljmp
sub
pop
test
mov
and
int3
dec
adc
pusha
jo
jle
call
cli
gs
mov
and
cmp
cmp
mov
pop
mov
jecxz
xchg
adc
push
std
mov
add
push
mov
incl
and
andl
dec
outsb
push
and
mov
push
std
sbb
and
cmp
sbb
dec
shl
aam
out
jo
lds
mov
jmp
or
pop
dec
cli
movd
push
repz
cmp
and
stos
je
ljmp
add
aaa
popf
jno
or
imulb
lds
cmc
ljmp
pop
sbb
jb
cmp
or
arpl
cmc
enter
adc
mov
inc
mov
insl
ds
test
out
fsts
mov
outsb
in
adc
pusha
mov
faddl
xlat
hlt
adc
scas
and
stc
pop
hlt
outsl
cmp
sbb
notb
xchg
shll
ds
cmpsl
test
jle
in
sub
cld
sahf
xchg
pushf
stc
loop
xor
pop
fildll
cmp
adc
xchg
call
test
or
divb
insb
sub
hlt
mov
dec
dec
sub
pop
push
test
cmp
aaa
sbb
and
loope
or
into
subl
shll
or
cs
or
test
out
push
lea
mov
add
add
iret
push
lea
push
fsubrs
mov
sub
scas
lea
cmp
mov
or
jne
sbb
cmp
aam
loope
mov
and
jae
mov
push
jecxz
js
dec
inc
imul
cmp
shll
xchg
cmc
mov
pop
insl
rcrl
aad
jnp
mov
aam
dec
bound
ror
push
jno
stos
sbbb
je
outsb
push
cmpsl
dec
dec
mov
gs
jne
aaa
cmpsb
nop
mov
pop
xchg
imul
fisttpl
mov
faddl
lret
icebp
and
mov
rcrl
dec
in
repz
inc
mov
insl
jae
or
jmp
xlat
or
add
stos
mov
ljmp
fisttpl
stos
test
or
jle
data16
sbb
out
mov
es
add
xorl
test
rcrl
outsb
push
test
dec
les
andl
pop
test
push
push
or
mov
mull
xor
xchg
cmp
and
pushf
pop
fdivrs
pop
fcoms
out
sbb
addr16
add
jne,pn
push
cld
mov
hlt
aaa
dec
inc
sbb
aad
adc
push
nop
insl
jnp
pusha
add
xor
push
push
cmp
fwait
inc
xor
fcmovne
decl
dec
inc
and
jge
andb
fdiv
inc
mov
cmp
mov
cmp
mov
cli
cltd
subl
jp
jp
out
jg
popa
mov
dec
xor
mov
push
fildl
out
jge
fstp
insb
pop
fcoms
aam
leave
dec
add
push
jmp
inc
jns
jne
cmp
rorb
insb
cmpsb
sub
jb
int
mov
out
push
sbb
scas
ror
jae
into
and
loope
add
sti
enter
enter
jb
out
mov
and
sbb
sar
jae
es
xor
jecxz
repnz
ficoms
cs
add
or
mov
pop
push
jp
test
xchg
shr
ret
icebp
insb
insb
mov
fwait
cmp
into
stos
mov
adc
test
fidivl
fisubrl
in
sbb
mov
in
mov
sbb
outsb
pop
ds
dec
hlt
in
sub
ss
repnz
aaa
cmpsl
pop
sbb
push
mov
int3
hlt
les
cld
pop
sub
cmpsl
orb
call
xchg
sbb
mov
mov
xchg
call
push
arpl
jo
sub
in
push
mov
outsb
out
dec
xor
mov
hlt
or
pop
xlat
adc
cltd
mov
push
outsb
dec
jne
lret
mov
movsl
sub
mov
popf
pop
test
inc
mov
and
xor
adc
cmp
xchg
aaa
nop
mov
pop
daa
or
in
dec
popl
push
push
cmp
out
push
ljmp
movsb
cmp
outsb
jecxz
mov
and
mov
cwtl
and
inc
jo
and
jge
push
inc
push
mov
lret
adc
lds
adc
iret
insl
mov
fcoms
sub
call
pusha
sub
sub
cmp
ljmp
fisubl
mov
sbb
and
xchg
or
jb
xor
rol
std
jg
mov
xchg
and
hlt
push
std
push
arpl
add
scas
outsb
pop
mov
mov
sub
out
mov
inc
jecxz
in
jno
out
mov
pop
fidivrs
cmp
pop
cwtl
outsl
pop
lcall
int3
repnz
mov
addr16
sub
xchg
aad
pop
pop
mov
push
sub
pop
push
repz
add
add
lods
ljmp
cmpsl
jns
pop
mov
cmp
aad
add
dec
pusha
test
dec
xchg
pop
pop
push
or
or
pop
pop
sbb
jmp
xor
into
xchg
out
out
clc
cmpsl
mul
cwtl
aam
in
mov
popa
adc
test
or
call
call
rcll
mov
mov
lcall
nop
add
inc
outsb
ret
and
mov
pushf
sbb
sysenter
inc
out
loope
cltd
xchg
bound
xchg
push
mov
lcall
pop
jg
inc
andb
insl
sbb
call
testl
lea
out
pslld
or
lcall
into
das
dec
loope
inc
xchg
jae
jg
orb
xchg
popf
add
xlat
pushf
aad
push
fst
inc
fwait
repz
inc
pusha
mov
iret
cltd
ljmp
ss
fwait
lods
pop
xchg
imul
mov
mov
pop
sbb
imul
cmp
out
xchg
lahf
mov
push
fsubrl
mov
adc
arpl
pop
adc
xor
pushf
pop
jae
jmp
xchg
gs
addr16
push
pusha
leave
xchg
arpl
ja
jbe
mov
ficoml
in
xor
int3
je
cld
pop
sti
mov
mov
rcrb
add
mov
ret
xor
sti
mov
inc
fnstcw
dec
loop
repz
push
js
and
loopne
mov
stos
mov
ds
jne
sbb
mov
jp
pushf
xor
nop
insb
test
faddl
xorb
cmp
out
or
pushf
lock
mov
cmp
in
jle
loop
pop
sub
mov
or
test
rcrl
sub
mov
xor
xlat
xchg
sbb
inc
insl
add
outsb
push
stos
sub
loopne
es
fmulp
xchg
cmp
push
mov
jae
ffreep
lock
jp
repnz
pop
add
adc
fisubs
insl
ret
cwtl
sahf
xchg
mov
cmp
xchg
mov
push
xchg
sbb
lods
jecxz
jnp
sbb
stos
outsb
adc
outsb
mov
mov
push
mov
sahf
sub
jg
mulb
gs
shrl
add
or
icebp
repz
sahf
and
jg
popf
xchg
and
xor
pop
ss
jl
popa
mov
loop
mov
add
out
add
xchg
les
sbb
inc
hlt
loopne
or
xchg
sbb
lds
in
je
xor
in
mov
sub
imul
jmp
or
sbb
xlat
ja
jl
jo
jmp
push
jae
ret
out
cmpsl
imul
mov
test
mov
unpckhps
mov
into
inc
inc
dec
add
das
pop
rcrb
mov
mov
cld
ficomps
xchg
add
cmp
loope
inc
jne,pt
push
outsl
sbb
inc
adc
and
jne
pop
jmp
mov
xchg
mov
aam
push
jae
pop
sbb
add
sbb
mov
out
out
jns
scas
mov
hlt
imul
push
pop
push
inc
mov
lods
or
bound
adc
push
scas
lret
outsl
mov
xchg
jmp
imul
mov
clc
mov
pop
test
repnz
repz
mov
ret
jg
mov
pop
xor
xchg
sbb
mov
xlat
test
repz
push
lahf
movsb
pop
or
cmp
sub
cmpsl
xlat
out
mov
in
les
jbe
repz
fwait
imul
cmp
fimuls
orl
cmc
and
fwait
loopne
fwait
dec
outsl
push
push
adc
cmp
enter
movsl
push
stos
jle
mov
mov
insb
popa
popf
or
cli
pop
adc
mov
sbb
inc
cs
pop
mov
mov
aaa
lock
mov
inc
or
dec
jl
mov
aas
adc
push
sbb
bound
mov
sbb
push
cmp
ret
leave
cs
jo
mov
into
adc
and
xor
out
jns
jge
pop
mov
hlt
nop
or
jmp
insl
les
icebp
rcll
and
loop
hlt
lretw
jno
jl
pop
lcall
mov
jge
ret
iret
xchg
push
dec
or
cmpsb
push
lahf
fisttpl
data16
inc
or
fistl
aaa
es
mov
mov
or
xchg
sbb
test
sahf
mov
fimuls
or
aad
inc
icebp
jmp
or
push
and
cli
xchg
pop
arpl
dec
pop
and
jo
cmp
sahf
dec
xchg
mov
out
adc
scas
ja
hlt
test
sbb
scas
in
loop
outsl
shr
mov
xor
inc
popf
std
jno
pop
inc
jne
ror
or
stc
insb
lcall
mov
pop
pop
mov
pop
push
subl
sarl
jnp
jnp
dec
test
jmp
lret
ljmp
hlt
stos
xor
inc
fsubs
jo
sbb
mov
mov
shlb
cmp
loope
jnp
sbb
cmp
jle
or
jl
popa
adc
jo
outsb
pop
imul
outsb
pop
xchg
test
cmpsb
cmp
inc
sub
mov
xlat
lret
add
stos
sbb
push
mov
lods
bswap
pop
mov
test
movsl
loope
push
scas
and
mov
lock
cmp
repz
and
inc
cmp
ret
or
popl
lcall
in
inc
mov
cmpsl
sbb
loope
in
fs
dec
lret
lret
shl
mov
inc
aaa
xor
pop
fidivl
xor
dec
push
pop
sarb
rol
dec
xchg
nop
xchg
fildl
outsb
daa
aaa
shrb
test
lods
lret
mov
es
lock
lea
jecxz
call
movsb
dec
xchg
movsb
xor
sti
mov
in
xchg
dec
call
xor
push
inc
aas
mov
mov
stc
push
addr16
imul
scas
jno
inc
cmp
push
lods
pop
fs
xchg
repnz
out
imulb
mov
mov
lret
dec
lods
test
cmp
mov
sub
decb
je
aad
pop
int
jb
jg
enter
cmp
dec
mov
cmpl
cli
jns
stc
rcrl
ror
out
fildl
push
repnz
es
mov
shr
ljmp
out
mov
mov
inc
and
jmp
into
inc
daa
fisttps
mov
repz
jns
dec
mov
mov
loopne
jmp
arpl
stc
roll
dec
push
leave
movsl
jecxz
loopne
jno
out
dec
xchg
out
sbb
push
ds
idivl
imul
fisttpl
nop
cmp
dec
sahf
jp
dec
into
shr
sarb
jae
rol
push
shl
aam
scas
adc
cmpsb
leave
aaa
lret
movsb
loope
data16
dec
pop
test
outsb
adc
jge
cmp
and
or
inc
xor
ret
arpl
sahf
push
std
imul
cmpsb
adc
push
xor
or
out
icebp
and
cmp
cmp
add
cmp
xchg
mov
ret
pop
leave
sub
add
inc
lods
std
mov
mov
jg
inc
repz
inc
leave
mov
or
popa
or
test
sub
sbb
pop
data16
sub
addl
mov
inc
mov
mov
adc
into
int
mov
fldenv
addl
adcb
hlt
stos
push
adc
out
std
pop
pop
cwtl
sahf
divl
popf
and
mov
xor
jge
sar
mov
fidivrl
cmp
dec
ss
fbstp
cld
je
sub
cmp
rorl
cmp
sbb
aas
add
dec
xor
enter
mov
or
mov
cli
xchg
cmc
lret
imul
jmp
mov
data16
lcall
fmull
outsl
lock
adc
mov
sub
insl
xlat
in
in
jno
out
sbb
test
xchg
and
test
jmp
push
cmc
gs
xlat
mov
adc
out
lcall
xor
ljmp
mulb
sahf
cs
adc
mov
pop
adc
push
xor
pushf
mov
sbb
jbe
mov
repnz
outsb
fwait
dec
xor
gs
and
dec
repnz
mov
rolb
pop
jnp
dec
out
aas
push
lret
mov
and
ds
add
mov
inc
outsl
imul
inc
leave
pushl
aaa
inc
hlt
lret
sbb
fsubl
dec
insb
mov
cwtl
inc
mov
aad
loopne
repnz
xor
dec
loop,pt
pusha
dec
test
inc
sbb
jns
scas
icebp
shlb
popf
lods
jl
fsub
scas
test
or
test
inc
jle
shl
int
xor
and
and
adc
test
jmp
ss
notl
ljmp
mov
push
jb
in
nop
lock
test
mov
push
dec
enter
xchg
enter
stos
add
xor
fwait
push
jge
aaa
js
test
lahf
lcall
rcl
subl
leave
cmpsl
sti
decl
jle
leave
jnp
mov
jecxz
adc
adc
xor
clc
cmp
add
xchg
push
add
fistpll
lods
jg
icebp
inc
mov
scas
pop
int
fnsave
fmul
sub
jb
repnz
adc
aam
or
push
pop
xchg
mov
xor
movsb
fs
mov
mov
push
icebp
xor
jp
cmp
cmp
jo
adc
xchg
inc
pop
test
cld
cld
mov
std
xor
mov
mov
jno
push
iret
repnz
leave
inc
sbb
movsb
push
and
in
outsb
hlt
xchg
mov
shrb
sub
xor
ficompl
in
dec
mov
sub
dec
and
sarl
mov
jl
ret
dec
sub
inc
arpl
into
mul
jp
mov
insb
out
sub
and
repz
mov
scas
ss
hlt
sbb
mov
ljmp
pop
and
mov
les
push
inc
sahf
push
mov
je
cmp
test
idiv
add
dec
es
fcomip
push
pop
mov
and
pop
inc
cwtl
jae
jmp
jle
jge
mov
cld
inc
adc
jecxz
cltd
mov
push
inc
test
ja
sbb
xor
loope
sub
bound
fstpt
les
add
push
js
aaa
fldenv
mov
xchg
push
clc
outsb
push
xor
sbb
ja
mov
bound
pop
imul
dec
jae
data16
jle
mov
sahf
or
jnp
pop
jmp
out
lahf
xchg
test
fstps
xchg
xchg
mov
pop
pop
or
inc
pop
fcoms
inc
mov
lock
cmp
ja
push
jp
xor
bound
popa
jmp
push
insl
jbe
mov
sub
shld
aas
ljmp
cmp
mov
fs
das
mov
mov
mov
es
add
lret
enter
xchg
loopne
and
and
shlb
mov
add
lods
mov
pop
fs
in
inc
stc
mov
jns
lock
sub
push
sub
frstor
call
xchg
add
inc
push
mov
dec
fmul
rorl
rcl
push
cwtl
adc
xor
push
inc
and
mov
loopne
fisttps
not
cmp
and
jb
cmp
push
jb
inc
inc
mov
movsl
jbe
sbb
or
add
mov
ds
roll
adc
dec
jecxz
rcrb
daa
nop
inc
mov
rolb
mov
cmp
jecxz
pop
sarl
scas
jge
pop
jbe
jl
jg
xor
bnd
test
jns
mov
adc
popf
inc
adc
xor
mov
call
stc
fdiv
jmp
dec
pop
in
sbb
cmc
inc
add
enterw
pop
andl
xchg
sub
cmp
dec
mov
push
mov
dec
adc
pop
lea
or
pop
xlat
je
test
xchg
jne
movsb
movsl
data16
and
cmpsb
or
repz
sti
aad
stc
lret
std
or
sbb
sahf
lea
add
dec
int3
xlat
mov
ret
xlat
sub
bound
push
fst
sub
ss
push
popa
fsubs
sbb
pop
popf
push
xchg
stos
adc
xchg
add
and
mov
mov
das
fnstenv
jmp
xchg
cmp
pusha
inc
cmc
cmp
sbbb
sti
call
ret
sbb
in
and
cld
out
xchg
fstpt
adc
dec
movsb
out
aad
aas
cmp
mov
push
push
mov
adcl
xchg
fnstenv
mov
fistps
add
xor
push
inc
clc
aas
mov
push
ret
in
lods
cmp
or
inc
cmc
adc
jg
inc
xlat
in
pushf
leave
in
mov
sub
pop
testb
out
sbb
aaa
fildll
mov
add
aad
fwait
bound
sub
pushf
cmpsl
mov
shr
sbb
pop
repnz
in
stos
popf
cltd
lret
aam
jb
jnp
je
jmp
adc
mov
rcrl
daa
xchg
scas
les
aad
leave
pop
dec
xchg
sub
push
test
cwtl
sbb
and
mov
andb
test
scas
into
testl
popa
je
movsl
mov
dec
imul
in
mov
shlb
adcb
jne
popw
in
xor
mov
pop
pop
push
xchg
xchg
cmc
mov
jmp
out
imul
addr16
sbb
bound
jne
jb
cmp
sub
or
dec
enter
jge
bound
inc
jg
out
stos
pop
fsts
add
sbb
call
push
lods
in
out
enter
mov
insl
xchg
jno
xchg
divb
repnz
sub
les
and
and
fildl
fisttps
mov
xchg
dec
dec
and
out
insb
mov
cmp
pop
dec
push
lahf
std
pop
cmp
or
adc
inc
adc
lret
add
in
popf
loop
in
inc
fwait
out
out
shrb
jge
dec
fdivp
push
dec
xorl
or
xor
xadd
sub
add
imul
pop
popf
or
lods
and
iret
and
inc
push
pop
mov
sub
or
pop
jmp
out
adc
scas
popf
pusha
mov
or
or
and
pop
outsl
bound
hlt
push
sbb
mov
divl
jbe
sbbl
mov
jle
mov
out
stos
sbb
mov
repz
mov
xchg
out
test
jo
sbb
sub
sbb
mov
scas
std
and
mov
push
xchg
lods
xor
movsb
repnz
push
jnp
dec
push
testl
dec
push
insb
data16
push
inc
cmp
testl
gs
test
adc
in
into
cli
js,pn
outsl
pop
dec
cmp
fs
jp
in
pop
mov
or
mov
xchg
xchg
nop
clc
fcmovb
xor
adc
loopne
xchg
sub
and
and
sbb
ja
les
dec
adc
test
movsb
lcall
sbb
shrl
loop
push
test
stos
dec
sbb
loopne
nop
clc
jae
jo
repnz
scas
jnp
xchg
out
xchg
sub
in
inc
in
sbb
sub
adc
mov
pop
pop
loop
aas
dec
mov
lcall
fnstsw
mov
jo
jl
std
stos
adc
cs
pop
xor
lock
xchg
pop
mov
pop
ret
or
pusha
into
mov
inc
sub
cmp
lcall
pop
pop
xor
and
int
testl
repnz
ja
out
or
push
jg
sahf
sbb
sahf
pop
dec
mov
sbb
and
sub
clc
fdivp
inc
out
and
std
shll
push
pop
xor
jle
mov
jle
mov
lahf
jne
pop
aaa
movsl
pop
xor
or
in
xchg
je
push
pop
add
xor
lret
test
mov
adc
clc
adc
bound
push
iret
in
test
insl
sti
repz
test
pop
subl
add
dec
sbb
inc
sub
imul
pop
and
out
iret
aam
cmpsb
addr16
pop
adc
fiaddl
push
lock
inc
mov
adc
adc
pop
fs
cli
jp
jae
rclb
lods
dec
xlat
lret
test
int3
jge
inc
into
cli
mov
add
sub
xor
shl
insb
lods
mov
std
bound
mov
imul
arpl
lods
lret
jecxz
sti
popa
cwtl
ss
and
lock
xor
push
sbb
or
fs
xor
and
fs
loop
test
mov
out
cmpsl
jp
or
test
popa
push
out
ds
cmpsb
sbb
dec
inc
jnp
iret
gs
ja
fildll
or
rcrl
cmp
fmull
push
mov
push
fldl
es
js
jb
repz
cltd
lods
cli
lahf
and
out
cld
call
shrl
das
xchg
enter
mov
xor
or
shl
pop
sub
icebp
mov
repz
sub
jb
lods
aaa
or
xchg
push
stc
shr
fcmove
pop
pop
mov
dec
mov
sahf
mov
add
stos
sbb
stos
pop
sub
movl
ss
lahf
aad
add
mov
pop
add
movsb
orl
dec
repz
sahf
mov
stos
push
rcr
lret
fidivl
adc
cli
stos
pusha
dec
xlat
add
mov
or
call
push
pop
sahf
es
mov
es
rorl
enter
repnz
fildll
loop
xor
fcmovnu
repz
xchg
popf
pop
mov
dec
cmpsb
add
jno
cmc
and
adc
cmp
repnz
mov
mov
fldcw
leave
sbb
pop
repz
popa
and
cmpsb
add
mov
and
add
push
test
mov
imul
aad
scas
pop
ljmp
and
xchg
lds
loop
jp
or
lea
inc
pop
and
sbb
xor
cltd
stos
stos
imul
repnz
push
fstps
lods
push
lods
inc
dec
xchg
jo
jmp
mov
and
jb
stc
mov
in
dec
jmp
lret
dec
jle
pop
sbb
data16
jae
stc
dec
in
inc
stos
fnstsw
jecxz
mov
aas
inc
lds
repnz
or
add
push
jl
mov
push
stos
outsl
rcl
pop
inc
add
mov
int
rorl
jbe
pop
adc
js
and
fcomps
jb
inc
inc
mov
jmp
cwtl
popf
outsl
insb
out
fisttpl
or
jle
movsl
sbb
jg
or
xchg
ja
pushf
inc
dec
pop
sub
sub
mov
dec
daa
xchg
xor
bound
sub
shrb
outsl
pinsrw
mov
and
fstl
jns
call
subl
dec
mov
push
test
arpl
stos
pop
jmp
stc
bound
ja
pop
add
mov
pushf
pop
in
xchg
add
inc
xor
or
or
ljmp
aam
out
movsl
pop
lret
mov
jb
ja
imul
push
xor
pushf
xchg
in
jb
ds
enter
jle
inc
mov
hlt
sbb
adc
sub
sbb
je
scas
mov
popl
scas
fcomp
jmp
imul
inc
aaa
jle
xor
jle
out
jb
pusha
mov
fst
or
aam
mov
xchg
pusha
mov
mov
cmp
hlt
push
loop
insl
adc
into
xor
adc
sbb
cld
sbb
fdivl
xchg
nop
icebp
xchg
fistps
jb
mov
cmp
add
clc
jno
mov
lds
inc
or
cli
cwtl
xchg
cmp
out
in
xchg
lret
push
xlat
xor
add
js
sbb
pop
bound
lcall
xchg
mov
xor
test
js
ljmp
int
shll
mov
xchg
xor
lea
xchg
xchg
orb
push
ss
aas
lahf
dec
int
xchg
xchg
lret
lahf
loop
ljmp
push
pop
scas
push
sahf
jge
and
sub
push
mov
je
xor
cmp
cmp
out
sub
xor
shr
subl
test
clc
sub
pop
js
dec
xor
pop
push
test
mov
fcmove
and
arpl
jle
push
mov
cltd
outsl
mov
dec
mov
sub
stos
pusha
mov
shrl
push
leave
mov
addr16
out
and
cmpsl
daa
neg
push
push
pushl
push
jno
sub
jnp
aas
pop
mov
ss
stc
push
mov
adc
or
mov
or
repnz
sub
sub
into
fnstcw
lods
inc
jle
das
adc
push
push
gs
call
inc
and
sbb
adc
jo
mov
scas
xchg
xor
push
repnz
pushl
inc
sub
sarb
into
into
addl
cmp
loopne
jecxz
fiaddl
add
fistl
loope
cmp
sub
out
xchg
sbbl
pop
arpl
sti
iret
add
in
iret
mov
push
cltd
data16
mov
xchg
mov
dec
pop
sahf
cmp
filds
shl
mov
adc
pop
mov
pop
movsb
addr16
std
ret
in
dec
mov
mov
test
fiaddl
inc
xor
dec
jmp
dec
aam
movsl
loopne
lcall
test
xor
sbbl
jle
dec
sub
mov
loopne
addr16
push
jg
stos
push
xchg
fcoms
push
pop
daa
loopne
inc
ficoms
sub
add
cmp
jge
adc
addr16
jmp
cld
adc
dec
pop
rcll
fadd
push
outsl
mov
addb
mov
fcomi
mov
mov
fcoms
int3
mov
arpl
cmp
aam
pushw
mov
test
xchg
dec
ja
mov
mov
mov
xchg
sub
push
mov
mov
inc
jl
jge
mov
loopne
and
and
cmp
pop
inc
cs
cmpsb
push
adc
mov
mov
cmp
push
mov
subl
xchg
pop
iret
or
addb
sub
mov
mov
sbb
dec
into
inc
ret
mov
imul
and
out
into
pusha
rcll
sbb
xor
rol
daa
into
xor
mov
jp
mov
rolb
xchg
jbe
mov
dec
cmp
dec
lock
or
xchg
outsb
mov
jae
push
icebp
ljmp
mov
fildll
enter
xlat
add
cmp
fstpl
jo
xor
dec
mov
mov
in
mov
inc
xor
jge
cmp
pushf
sub
mov
mov
mov
outsl
dec
fdivl
insl
jns
test
fwait
js
sbb
add
sahf
cld
lock
or
je
js
ljmp
mov
test
xchg
leave
test
jmp
mov
mov
pop
lods
insl
sti
add
ss
jo
lods
push
sub
pop
jg
pop
xor
add
xor
test
xchg
subb
lds
imul
or
aas
flds
xor
or
xchg
xor
push
sbb
pop
dec
hlt
nop
inc
dec
je
testl
lret
dec
fldl
out
sub
push
dec
dec
push
popf
jo
dec
sahf
mov
call
lahf
mov
out
pop
mov
sbb
icebp
out
out
andl
sub
sub
jns
into
sub
mov
pop
xor
rcr
or
jne
dec
mov
les
push
mov
and
lds
dec
mov
mov
sub
mov
call
push
dec
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
add
xor
jo
push
sub
cmc
mov
insb
test
shrl
out
xchg
and
stc
insl
cmc
push
daa
lods
je
popa
xchg
leave
xchg
lock
imul
adc
cld
jne
push
xor
mov
push
jle
mov
cmpsb
cmpsl
dec
xor
add
sbb
ss
je
sbb
mov
cmp
cli
out
hlt
add
and
mov
xchg
push
add
mov
ret
jno
adc
inc
test
ss
sub
jno
fnstsw
imul
sub
inc
jl
test
inc
loope
push
loop
add
test
dec
clc
mov
mov
xor
inc
push
lock
insl
sbb
adc
lahf
je
lock
repz
bound
in
and
dec
in
pusha
cld
inc
insl
adc
pop
ror
dec
jmp
mov
jmp
addr16
mov
sub
fmul
addb
jno
adcb
xchg
leave
dec
jge
or
xor
adc
data16
fdivrl
lret
insb
inc
jle
xchg
dec
jl
mov
jmp
outsb
sub
ds
or
push
mov
xchg
nop
push
lret
mov
fs
push
xchg
sti
cmp
fistps
frstor
pop
nop
sbb
adc
mov
cmp
jmp
xor
pop
adc
mov
imul
or
test
outsb
xor
xor
lahf
sbb
adc
pop
cmp
sub
pop
xchg
and
sbb
jo
testl
mov
push
jno
mov
lahf
mov
das
sub
bound
lret
lods
jo
cmp
xchg
int3
sarl
adc
push
mov
sub
dec
cmp
add
shlb
mov
xchg
jp
stos
sarl
mov
cli
cmpsl
pminub
mov
xchg
cmp
shr
hlt
popf
jno
fmuls
mov
push
jno
add
cmp
inc
and
push
inc
out
xlat
repnz
xlat
push
cmpsl
sub
rcr
fstps
mov
jl
movsl
mov
clc
into
sbb
xor
repz
xor
test
bound
jp
ret
enter
xor
js
pop
out
sbb
inc
repnz
xchg
mov
sar
push
adc
lds
test
sub
test
xchg
cmp
out
xchg
push
test
pop
insl
sti
fnstcw
rorl
mov
test
sub
fistpl
xor
xchg
test
lret
xchg
imul
mov
call
int
in
daa
cli
stos
das
divl
mov
outsb
mov
icebp
rcrb
jle
or
gs
pop
pop
inc
and
ds
test
pop
xor
xchg
push
jne
mov
push
ret
and
sbb
pop
and
inc
sub
jl
inc
popa
adc
cmp
clc
stc
jo
gs
jo
cli
ljmp
or
test
pop
sub
pusha
jne
jno
inc
mov
shlb
adc
xchg
icebp
cmp
adc
in
fildll
xlat
xchg
add
lods
cmp
jp
repnz
pop
stos
stos
xchg
add
int
sarl
pop
shrb
fcoms
cmp
sbb
adc
xchg
cmc
dec
notb
xchg
and
cltd
fldt
test
out
adc
repnz
mov
lahf
mov
stos
jle
bound
insl
call
aad
sbb
xchg
dec
and
or
int3
jecxz
or
dec
and
fldt
pop
lcall
mov
imul
add
mov
in
mov
adc
inc
imul
cmp
sti
ret
add
jecxz
lock
sbb
mov
pop
jo
jb
xchg
push
cmpsl
cmp
jo
fs
popa
iret
sub
dec
push
jae
xlat
push
mov
leave
dec
fistl
or
xchg
out
in
sar
imul
cmp
ud2
test
rcl
in
in
jle
addb
mov
sub
fucomi
arpl
pop
lret
pop
jnp
out
sub
xlat
adc
sub
fsubrs
cmpsb
pop
push
jp
fnsave
xchg
jge
test
pop
pop
lods
or
push
mov
sub
cmp
aaa
adcb
enter
adc
jge
bound
pop
stos
in
fsubr
xchg
loop
pop
push
sbb
cmp
pop
shlb
sbb
add
into
shll
sahf
movsl
mov
push
popf
lods
movsl
push
push
cmp
jge
cmp
add
pop
gs
sub
imul
push
outsl
cmpsl
fisubrl
jb
pop
sub
push
shrl
js
inc
movsl
cmp
push
out
mov
jecxz
loopne
push
shll
ljmp
jl
ljmp
aaa
test
sub
je
rcr
sbbb
shll
pop
clc
lcall
cmp
cli
jp
mov
pop
add
sub
pop
pusha
inc
cmp
mov
sub
mov
inc
xchg
jbe
xor
cmpsb
xor
aam
adc
pop
cmpsb
ljmp
inc
shrb
cmp
lock
js
in
test
fdivrp
rcrb
fistl
xor
fcoml
inc
push
jmp
call
pop
push
sbb
stc
cs
out
daa
sbbb
xchg
mov
dec
stos
xor
xchg
add
sub
lods
ljmp
mov
xchg
inc
scas
mov
mov
arpl
inc
cmc
adc
ja
out
repz
push
out
mov
subl
cmp
dec
imul
push
add
mov
sub
mov
ss
inc
mov
jb
push
mov
aad
mov
or
jbe
test
es
inc
sbb
mov
inc
cld
xlat
jmp
jb
hlt
icebp
fwait
sbb
cli
mov
add
jo
mov
pop
jns
testb
and
lcall
and
je
andb
clc
push
push
test
nop
ret
adc
test
lea
inc
xchg
repz
cmp
loop,pt
mov
loopne
fsubs
div
mov
sahf
mov
sub
ret
hlt
dec
mov
lcall
jne
mov
xlat
push
orb
std
cld
inc
mov
scas
enter
dec
inc
rclb
jae
xlat
push
ja
les
cmpsb
das
or
imul
mov
mov
push
fistl
data16
xor
jecxz
xor
mov
push
enter
std
mov
cmp
hlt
popa
mov
rol
xor
mov
sahf
pop
push
fimuls
add
or
shll
push
cld
test
dec
sub
cltd
ds
add
sub
in
push
clc
jp
adc
mov
cmp
ds
xchg
inc
cs
mov
pop
xor
out
jecxz
sub
leave
cmp
jmp
stc
mov
adc
cmp
push
cmp
es
aam
out
dec
std
jbe
jle
sub
add
cld
jmp
mov
sub
ljmp
cmp
scas
add
mov
sbbb
jg
test
test
or
and
fcmovb
clc
and
dec
mov
fs
negb
cs
lods
aas
inc
lods
mov
imul
sbb
sbb
sbbb
test
push
fs
add
sbb
ss
movsb
pushf
repz
adc
mov
adc
inc
lahf
mov
add
ror
outsl
mov
lods
mov
and
sub
inc
jge
adc
inc
pop
enter
jne
lret
ja
mov
and
and
inc
or
fisubs
lahf
clc
push
inc
jmp
fnstcw
or
mov
imul
lahf
idivl
jae
inc
ret
mov
lret
pop
out
sub
cs
and
je
push
jg
sbb
lcall
stos
ljmp
pop
pop
fldcw
or
or
inc
push
sbb
icebp
dec
dec
pop
icebp
sti
sti
jnp
push
movsl
jle
push
aad
mov
pop
mov
inc
or
dec
cmp
nop
mov
or
daa
push
jp
icebp
iret
sti
lahf
lret
inc
xor
mov
cmc
sub
pop
dec
mov
test
cmp
pop
xor
cltd
dec
test
push
mov
out
jb
and
insb
mov
or
dec
mov
hlt
push
cmpsl
mov
pop
push
xlat
sub
lcall
subl
inc
cmp
mov
mov
rcll
movsl
push
mov
enter
shr
xchg
nop
cld
pop
out
add
out
sbb
sub
movsl
and
inc
push
pop
and
push
dec
sbb
xlat
cmc
sub
in
mov
push
and
or
sub
leave
ficoms
in
adcb
pushw
cmp
push
cld
fildll
repz
pop
mov
mov
stos
fisubrl
notl
add
ret
fldcw
stc
cmc
push
push
and
out
or
test
aaa
mov
xchg
aaa
data16
ds
push
cli
int
aaa
in
pop
pop
cld
inc
or
push
fs
fisubs
hlt
xor
xor
je
push
test
out
fnstsw
dec
shlb
popf
mov
lods
inc
cli
or
xor
sub
cmpsb
jge
repnz
push
imul
ret
push
jnp
call
pop
clc
int3
pop
fwait
push
or
aaa
loopne
das
dec
or
cmpsl
ficompl
or
les
push
jne
push
and
or
sti
lods
mov
bound
loop
xchg
jg
push
gs
aas
mov
stos
and
mov
push
inc
inc
sbb
lret
lret
mov
fdivrs
mov
xchg
xor
dec
test
int3
das
fdivrl
scas
rclb
hlt
gs
cmp
jae
jg
or
push
sub
test
stos
test
sbb
cmc
movsl
sbb
mov
jo
mov
jmp
repnz
mov
stos
mov
mov
xor
push
jge
xchg
push
test
addr16
jmp
sbb
ja
jecxz
mov
movsl
test
jae
mov
in
inc
in
lcall
mov
pop
xor
adc
cmp
and
ficoml
jns
jnp
fstpl
sti
jno
xchg
mov
jns
movsl
cmp
jecxz
repnz
ds
mov
push
dec
mov
mov
aam
push
mov
imul
shrb
lea
bound
push
daa
stos
push
pop
sub
inc
out
ret
in
aad
sbb
shrb
add
sub
cmp
jae
frstor
jl
sbb
xchg
jo
js
dec
mov
pushf
and
test
out
add
dec
cmc
push
xchg
es
fsts
sti
or
add
mov
add
mov
lock
popf
fcoms
loop
dec
mov
rclb
aas
bound
adc
cmp
pop
out
rol
test
sub
pop
fcompl
ret
mov
mov
movsb
add
adc
dec
mov
jg
dec
lea
and
imul
loopne
jle
add
sub
pop
pop
outsl
xor
imul
inc
in
mov
lea
rolb
ret
cmp
jne
lahf
xor
shlb
mov
push
push
test
mov
add
dec
stos
mov
mov
dec
mov
faddl
mov
je
mov
or
cmp
test
out
and
mov
outsb
jge
mov
adc
ret
dec
inc
test
xchg
test
nop
in
mov
ja
clc
ror
push
rcrb
sti
jb
add
ret
lods
push
in
cs
dec
call
xor
push
jne
cmp
jbe
lret
fldenv
add
dec
fs
sub
stc
cmp
xchg
testb
lods
mov
shll
ret
mov
rclb
addr16
sar
sub
aaa
lods
mov
xor
jmp
fidivrs
mov
dec
xchg
imul
cmc
fmull
push
fcmove
into
incb
mov
sti
adc
mov
popf
fs
jmp
xchg
icebp
xchg
mov
test
shrb
or
pusha
lock
enter
xchg
add
sbbl
push
cltd
imul
jne
jle
mov
mov
fimuls
shlb
or
xor
movsb
in
xchg
mov
mov
es
sbb
cmpsb
xchg
lods
out
mov
orps
mov
push
cld
cltd
jg
aad
jae
adc
push
test
cld
rcll
in
fcmove
in
cmp
stos
sub
sub
and
movsb
xchg
test
pop
in
mov
xchg
xor
xchg
xchg
dec
dec
or
mov
jae
xor
jbe
mov
out
arpl
movb
jp
data16
sarl
stc
fcmove
fidivrs
inc
and
jb
mov
in
mov
xchg
out
sub
sub
cmp
cmp
push
cmpsb
inc
xchg
add
xchg
adc
imul
mov
dec
push
jmp
cmp
or
lahf
fwait
sub
add
push
mov
daa
mov
aam
popf
sbb
sbb
or
outsl
outsl
adc
mov
ds
cmp
in
cwtl
mov
es
mov
ret
pop
gs
call
add
mov
jg
jp
stc
sahf
push
fs
dec
mov
push
shr
mov
jae
in
inc
dec
imul
outsb
in
jne
mov
xor
cmpl
inc
cmp
ss
cmp
add
lahf
lods
jnp
inc
frndint
mov
vunpckhps
xchg
popa
aaa
mov
sub
shl
lods
xor
out
xor
adc
xchg
and
in
push
cmpsb
add
out
rcl
mov
je
jle
lahf
xor
gs
dec
gs
pop
inc
xor
jne
in
stos
sub
ds
push
pop
js
das
dec
imul
mov
jp
dec
jge
jne
mov
add
rcrb
in
js
divb
cwtl
fldl
cmc
pop
cmp
scas
mov
leave
fwait
xor
fcomps
jb
and
sbb
icebp
cmp
pop
pop
repz
push
shlb
xor
push
dec
mov
ds
dec
je
inc
dec
mov
cli
bound
push
inc
mov
fstpt
xor
or
sti
sub
addl
sbb
lret
pushf
jmp
jmp
test
adc
push
push
sub
mov
and
jnp
ror
sbb
lahf
imul
sub
mov
inc
ret
jnp
andb
push
jle
adc
loop
arpl
addr16
dec
cmp
and
push
cmp
adc
insl
mov
enter
aam
nop
test
mov
sbb
and
adc
jno
push
cwtl
in
add
mov
lcall
xor
inc
rol
in
pushf
data16
jp
sub
ljmp
pop
ja
loope
test
dec
pop
jo
lods
outsb
cli
sti
xchg
cld
into
push
int3
push
std
pop
loope
mov
adc
insb
aaa
test
or
pop
lods
test
mov
lods
gs
jnp
and
int3
push
scas
repnz
out
push
push
loopne
mov
test
jecxz
inc
mov
dec
fcoms
negl
adc
push
mov
adc
into
cld
ficoms
rcrb
xchg
mov
rol
loopne
icebp
or
cmp
dec
push
push
lock
adc
adc
xor
sub
sbb
jno
adc
outsl
add
push
hlt
iret
inc
lcall
jp
sub
fnsave
mov
fdivs
ror
or
mov
cmp
mov
ret
mov
outsb
inc
mov
sub
mov
mov
mov
jp
sbb
je
mov
cmp
insl
in
fwait
pop
xlat
xchg
fldpi
loop
push
pop
mov
mov
popa
add
pop
mov
das
mov
test
xor
jb
loopne
sub
popf
pop
cwtl
aas
lahf
daa
add
es
aam
jl
dec
arpl
jmp
xchg
test
or
push
shrb
cmp
int3
push
pushf
mov
cmp
popa
add
inc
pusha
pop
out
movsb
sbb
loop
fcompl
cmpsb
scas
divl
xchg
adc
cmc
inc
scas
nop
repz
lock
std
push
push
mov
add
mov
insb
ljmp
fsub
push
cld
rolb
push
sub
adc
push
stos
clc
cmp
mov
popf
je
cmpb
das
and
cmc
pop
or
xchg
jb
leave
into
int
sbb
jno
seta
inc
rclb
cmp
call
mov
aad
inc
idiv
xor
movsl
aad
bound
xor
or
andb
pop
and
cmpsl
out
or
into
push
rclb
sbb
jb
inc
hlt
addl
dec
cmp
jbe
aaa
xlat
fadd
pop
fcoml
test
in
test
jno
les
and
icebp
mov
nop
pop
arpl
in
sbb
xor
jns
ret
cmp
in
repnz
sbb
push
into
clc
out
jecxz
xchg
in
cs
cli
outsb
daa
mov
sub
insb
testl
mov
fwait
pop
and
push
mov
lret
or
inc
dec
xlat
adc
and
dec
leave
pop
inc
xor
sbb
je
mov
jo
xchg
xor
sub
mov
fdivp
cmp
out
mov
xchg
xlat
dec
pop
jno
clc
inc
adcb
mov
popf
xchg
pop
ds
pop
inc
xchg
pushf
sub
rolb
jne
movsb
xchg
sarl
add
push
xor
pop
mov
in
pop
sub
mov
xor
repnz
mov
mov
cli
sti
jle
stos
sub
mov
mov
adc
dec
xchg
rorl
mov
and
outsb
sbb
sub
aam
push
and
sub
int3
push
sbb
push
ljmp
leave
mov
rdtsc
dec
adc
arpl
push
xor
cmp
dec
or
lcall
ret
mov
aam
movsb
mov
push
mov
jns
push
rorl
jmp
out
inc
adc
int3
ret
xlat
ss
add
or
ret
inc
movsb
jp
pop
in
push
sbb
inc
adc
push
mov
fs
sub
rorl
mov
mov
cwtl
jns
push
inc
pop
cltd
mov
jb
cs
in
fs
xchg
inc
es
or
es
add
pop
jae
dec
xchg
jl
ljmp
xlat
jle
jns
testb
int
std
mov
push
lods
cmpsb
sbb
dec
imulb
mov
into
inc
push
out
mov
pop
xchg
adcb
loope
xchg
cmp
pop
adc
test
rep
mov
sbb
xor
call
insb
sbb
cs
mov
loope
and
int3
ja
test
and
pop
push
inc
in
mov
scas
out
xlat
jmp
movb
add
cmpsl
das
push
dec
push
ret
pop
lods
xchg
adc
xchg
sbb
sbb
loop
mov
ror
adc
hlt
push
movb
pusha
mov
adc
inc
fsubr
mov
cmp
sbb
call
mov
lods
add
ret
mov
fwait
fwait
mov
mov
mov
push
fadds
hlt
out
adc
lock
fwait
mov
xchg
popa
and
cwtl
cld
decl
iret
add
sbbl
sub
push
mov
rcrb
dec
jo
ljmp
mov
addr16
dec
in
inc
add
mov
es
dec
push
sbb
jne
xor
lret
cwtl
cmp
test
fs
fsubrp
mov
test
mov
daa
cmc
pop
faddl
xor
movsl
xchg
cmp
pusha
jae
push
lea
ret
sub
adc
push
push
rclb
test
jb
inc
add
flds
in
inc
out
les
and
ds
xor
push
daa
repnz
pop
cmpsb
lss
aad
dec
psubsb
or
inc
pusha
mov
test
sbb
out
lods
mov
scas
mov
into
fwait
adc
jp
mov
fisubrs
fnsave
dec
xchg
hlt
lcall
pop
cmp
testb
jbe
out
hlt
loop
sub
mov
mov
adc
pop
adc
mov
fs
icebp
sub
fldenv
in
pop
aaa
sub
lret
mov
sbb
adc
ret
notb
and
scas
mov
in
mov
lret
enter
jmp
aam
mov
mov
xor
pop
aad
lahf
ds
js
addr16
js
aaa
mov
mov
in
jp
pop
or
call
scas
push
stos
cltd
jne
push
xor
in
test
cmp
repnz
lods
mov
inc
dec
popf
ss
push
ljmp
fwait
and
lock
ljmp
aaa
add
int
rorl
gs
or
add
jmp
sub
jnp
sub
rcll
push
or
cli
lds
jl
test
cmp
mov
cmpsb
aas
daa
ret
shll
jp
int3
xchg
mov
xchg
cli
push
fwait
adc
pop
cmp
imul
in
inc
push
std
insb
aam
adc
ret
nop
dec
inc
ljmp
aad
test
mov
jnp
pop
jmp
gs
iret
push
jnp
xchg
pop
xchg
adc
rol
inc
cmpsl
mov
inc
data16
and
daa
lods
repnz
dec
lds
mov
imul
add
les
outsl
shlb
fcmovbe
push
adc
and
ljmp
lret
cmp
jno
sbb
ror
push
jo
add
scas
shll
mov
daa
sub
je
xchg
mov
jl
mov
jb
in
pop
pop
in
dec
js
add
mov
idivb
lods
push
pop
nop
test
ret
nop
mov
daa
add
fistl
pusha
pop
pop
and
push
xchg
mov
inc
or
divl
mov
outsb
mov
stos
arpl
dec
mov
push
add
fcompl
movsl
jnp
jns
add
sbb
cmpsl
sbb
ds
clc
cld
gs
xchg
incb
shl
cmp
scas
dec
dec
sbb
cmpl
sbb
gs
add
fsubrs
adc
ret
cwtl
ss
inc
mov
push
xchg
adc
sub
sbb
in
or
jmp
movsl
xchg
push
jmp
in
adc
or
loope
sub
das
outsl
rclb
out
jnp
xor
flds
rolb
push
adc
mov
sub
aaa
jo
enter
jno
push
adc
sahf
mov
mov
or
or
or
pop
cli
daa
fwait
cmpsl
xchg
ficompl
setge
sub
jl
or
fdivrs
sub
into
call
cmpsl
jb
pop
pushf
push
adc
mov
out
mov
mov
icebp
cltd
jp
pop
pop
out
jns
lcall
decb
cvtps2pd
fists
jmp
sar
ficomps
mov
imul
imul
stos
fisttpl
sarl
lock
sbb
fsubs
push
sahf
aad
push
fimuls
and
sbb
pop
aaa
je
mov
call
rcrl
dec
jle
cltd
mov
nop
iret
mov
mov
sbb
mov
xchg
test
gs
int3
push
or
mov
xchg
sbb
popf
xchg
sbb
lods
dec
cli
jb
add
pop
mov
pop
inc
scas
iret
dec
call
subb
push
leave
jnp
mov
ljmp
outsl
sbb
mov
and
stc
pop
fwait
jo
pop
xchg
xchg
data16
jns
arpl
outsb
xchg
cmp
mov
pop
adc
repnz
fiadds
dec
daa
push
mov
dec
dec
scas
imul
xchg
dec
fisubrs
inc
adc
ljmp
push
sub
bound
and
mov
in
into
mov
shlb
iret
xor
cwtl
ljmp
imul
jecxz
adc
sub
adc
in
mov
adc
push
dec
pusha
jae
adc
fcoms
mov
int3
ret
jmp
movsw
dec
test
add
out
in
shll
fs
es
add
fistpll
inc
movsl
xor
cmp
pop
mov
mov
adc
push
pop
mov
popf
pop
mov
fisttps
xchg
nop
push
mov
ret
aas
xchg
or
and
andb
outsb
js
cs
pop
out
daa
inc
fiaddl
push
add
jb
jnp
imul
dec
and
addb
cld
pusha
mov
adc
add
xor
pop
xchg
ss
dec
sbb
xchg
jno
outsl
xor
inc
mov
fcmovnbe
je
aam
or
xchg
xchg
ret
mov
dec
test
imul
or
outsb
hlt
cs
ljmp
inc
xlat
fadd
bnd
cltd
les
fildll
mov
shlb
add
cs
add
ret
scas
out
fimull
adc
mov
push
pushl
push
xchg
and
inc
loopne
mov
push
in
mov
or
push
add
xor
fdiv
cltd
stc
cmp
sub
std
cmp
ficoml
xchg
xor
or
in
push
mov
inc
xchg
out
cmpsb
ds
add
inc
repnz
into
imul
or
push
es
inc
arpl
cmovle
das
pop
and
fcmovb
cmp
add
movsb
sarb
bound
stos
outsb
sbb
push
pop
pop
jmp
or
or
sbb
or
or
jp
lods
cmp
push
push
add
jg
test
fnsave
sub
cmp
push
sbb
pop
and
pushf
xchg
hlt
imul
cmp
or
xor
xchg
dec
pop
jg
icebp
sbb
repz
xchg
sar
adc
fmuls
cmp
mov
fcom
xchg
add
test
cmp
into
lcall
and
dec
sub
mov
dec
je
jne
dec
roll
mov
pop
xor
ret
shll
jmp
cwtl
insl
jno
ja
sub
add
out
loop
mov
fwait
mov
sub
js
negb
fdivrl
popa
pop
dec
cli
xor
mov
cmp
push
ljmp
sub
dec
add
addr16
fcmovnbe
fstpl
mov
cmp
push
push
les
lds
lea
mov
loop
fstl
mov
or
sub
insl
ljmp
cmp
cmpsb
mov
inc
nop
in
inc
stos
push
mov
mov
sub
xchg
jns
cmpsb
add
fbld
jecxz
int
adc
cwtl
enter
hlt
mov
rolb
pushf
cmp
jg
out
jp
or
lods
outsb
es
fdivrp
pop
js
mulb
push
mov
filds
out
sbb
stc
daa
iret
outsl
out
pop
cmp
mov
push
push
push
ds
popf
or
and
and
test
fstpl
stos
data16
fisubrs
ss
mov
xchg
and
xor
dec
loop
imul
inc
cmpsl
jge
pop
lahf
stos
push
repnz
dec
enter
movsb
fidivrl
dec
push
jecxz
and
arpl
aad
bound
scas
or
mov
xchg
aad
mov
adc
mov
adc
inc
pop
ret
pop
dec
movb
pop
ret
and
movsb
and
cmp
clc
pushf
fs
push
hlt
test
xlat
fdivrl
or
sub
jns
xor
push
push
outsl
mov
insl
int
jle
ficompl
mov
pop
cwtl
mov
jl
stc
cmp
ljmp
shll
and
aad
aaa
ret
and
lcall
xchg
lret
enter
push
dec
cmp
out
jmp
pop
jge
fldl
or
add
xchg
out
pushf
sti
js
cmp
mov
fdiv
mov
imul
aad
out
dec
sbb
dec
in
ss
shr
cld
gs
mov
mov
adc
ret
in
ljmp
pop
outsb
mov
xchg
add
mov
cli
cmp
gs
icebp
jne
pusha
push
push
ror
movsb
cltd
repnz
ss
popf
aas
jge
fstps
pop
int3
subb
mov
mov
sahf
inc
lock
outsb
pushf
fs
push
cmc
or
jo
jl
dec
aas
daa
add
js
stos
xchg
ds
lods
lea
cmpsl
xchg
sbbb
jb
adc
pop
repz
mov
push
pushl
xor
dec
call
jmp
jae
sti
mov
cmp
and
dec
jnp
sbb
jno
sbb
mull
xchg
ret
add
add
and
loope
bound
sarb
call
xlat
xor
ja
aas
adc
pusha
mov
adc
clc
stos
hlt
sti
xchg
ja
arpl
jmp
jecxz
lcall
add
inc
xlat
scas
adc
clc
ret
add
test
movsb
rorl
jo
fucomp
in
jno
add
das
cmc
ds
fcoms
mov
mov
mov
and
fbld
cmc
cltd
cs
sbb
pop
adc
dec
jge
cmpsl
popf
stc
fldenv
ss
jne
mov
pop
fcomp
cmp
jns
pusha
out
lods
lcall
and
repz
mov
adc
scas
call
fcoms
into
add
int
clc
pusha
inc
in
and
lods
jecxz
sbb
or
sti
cltd
xor
loopne
xor
mov
mov
ljmp
jmp
xchg
test
cmp
ds
ret
ret
movsb
in
mov
std
push
insl
fnstcw
cmp
inc
adc
push
sbb
pop
sub
test
lcall
popa
inc
jl
fwait
and
test
inc
and
inc
mov
pusha
sub
inc
or
es
dec
scas
adc
xchg
xlat
mov
stos
jb
std
lret
fmuls
aaa
addb
mov
ds
xchg
inc
rep
pop
or
out
rorb
mov
inc
fs
mov
adc
out
jge
xor
int3
cmp
mov
mov
stos
cwtl
daa
xor
mov
pop
xchg
lahf
and
mov
sbb
pop
scas
or
adc
xor
test
jl
add
mov
cs
jp
sbb
leave
clc
stc
adc
popa
mov
call
ja
sbb
push
dec
sbb
xchg
sbb
xchg
in
mov
ret
mov
inc
popf
icebp
rorb
mov
test
cwtl
std
mov
test
jmp
inc
lret
adc
and
test
es
es
cld
out
gs
fs
repz
in
xlat
adc
sti
sarb
in
dec
rcrb
push
jmp
aam
cmp
popl
sarb
pop
or
adc
cli
jns
test
ja
jnp
mov
mov
int
or
push
addr16
out
lea
sub
mov
jg
ss
iret
shl
dec
int
lea
scas
sub
or
in
orb
in
jl
adc
cmp
sahf
into
ja
fcomip
add
rolb
push
push
je
jb
stc
shlb
xchg
mov
out
and
sbb
pop
xor
test
mov
mov
jmp
mov
inc
lcall
xchg
adc
sub
cmp
mov
push
jnp
jo
testb
sub
mov
mov
inc
dec
pop
out
push
add
fst
rcrl
cmp
mov
mov
out
fwait
mov
test
jl
cmc
or
inc
push
xchg
xlat
xor
pusha
sbb
xor
jb
insb
mov
mov
ss
outsb
push
push
enter
in
mov
xlat
cmp
adc
dec
sarb
dec
ja
test
and
mov
fcompl
push
push
ljmp
cmp
mov
es
cltd
aas
and
scas
sbb
push
mov
pop
pop
cmp
lock
push
shll
xchg
inc
imul
mov
push
int
mov
dec
mov
or
sbb
bound
bnd
fwait
fs
push
bound
dec
jo
fwait
push
xor
sbb
pop
xchg
iret
dec
out
cmp
shr
jmp
lea
dec
pop
push
push
imul
or
add
mov
insb
in
pushfw
fidivs
mov
and
loopne
je
mov
decb
cltd
repnz
pusha
lods
inc
push
adc
test
inc
xchg
mov
dec
sahf
fcoms
xchg
andl
mov
sub
pop
lods
in
pop
push
dec
int
jge
add
pop
mov
jns
add
mov
inc
pop
test
jae
loopne
ret
and
sbb
mov
fisubl
into
xor
dec
xchg
call
test
push
out
lcall
lea
jns
cmpsb
gs
pop
jle
aam
jecxz,pt
mov
pop
pop
scas
pop
fisttpll
faddl
pop
pop
jecxz
repnz
mov
repz
jb
shrb
dec
test
cli
xchg
stos
or
dec
xchg
pushf
push
in
xchg
lock
aas
nop
add
or
sub
aam
in
out
sub
or
dec
cmp
pop
push
shll
daa
pop
imul
mov
jmp
shll
sub
xchg
mov
ljmp
jg
lret
and
pop
pop
cmp
dec
jo
mov
cmp
xchg
sbb
push
inc
sub
fst
adc
sbb
sarl
out
cld
push
scas
mov
push
inc
in
push
daa
cmp
sub
pop
cmp
and
or
mov
dec
xor
adc
jae
and
dec
ret
adc
jmp
shrl
mov
out
mov
mov
inc
push
or
ja
lock
xchg
mov
nop
out
outsl
cmp
or
sub
jae
and
xchg
nop
mov
out
jle
lods
mov
mov
dec
dec
neg
mov
inc
ret
xchg
incb
in
insb
mov
scas
push
mov
enter
scas
mov
mov
mov
sbb
adc
mov
je
xor
dec
lret
cwtl
icebp
sbb
ss
into
jle
inc
xor
stos
into
inc
imul
aam
push
adc
and
sbb
sub
mov
mov
hlt
pop
sbb
sub
hlt
test
dec
xor
adc
or
dec
push
ss
mov
cmp
lock
jmp
outsl
inc
scas
add
xchg
inc
mov
pop
nop
pop
loop
pop
insb
pop
add
pop
scas
repz
mov
inc
stos
adc
push
fstp
in
push
xor
sti
movsb
jecxz
push
sbb
add
adc
cmp
jge
imul
dec
jo
sub
cmp
inc
add
testb
xlat
and
or
dec
mov
jbe
clc
sub
sub
xchg
jl
mov
les
cmc
mov
lahf
imul
mov
fcoms
scas
js
test
jbe
scas
fcomps
adc
lods
xchg
pushf
dec
mov
gs
adc
sbb
add
pop
jns
dec
cmp
push
push
push
add
pop
adc
fldcw
or
les
jns
outsl
scas
sahf
xor
outsl
jecxz
sbb
out
and
dec
sbb
cli
mov
popf
inc
mov
mov
cli
daa
cmp
pop
mov
sub
mov
mov
lods
mov
les
clc
ss
jmp
xor
pop
cmp
dec
xchg
cltd
jnp
mull
subl
mov
mov
and
clc
sbb
sbbl
inc
out
add
jnp
mov
jnp
cmp
outsb
enter
cmp
arpl
sarb
mov
jb
inc
push
xor
push
sub
cmp
mov
or
inc
xchg
loopne
jae
or
xor
addr16
inc
push
roll
pusha
insb
movsb
loope
loop
jle
jnp
pop
add
sbb
test
int
out
cmp
fistpl
pop
sub
pushf
push
fs
xchg
add
add
rcrl
xor
cmp
ljmp
mov
sbb
xor
dec
cmpb
dec
aad
pop
mov
add
scas
and
pop
pop
test
cs
cld
cmp
push
repz
fdivl
xchg
out
test
sar
stos
add
insl
fsubrs
dec
cmp
rcrb
aad
subl
sti
jno
sbb
jge
xchg
dec
fmulp
mov
adc
jo
or
out
movsl
sub
scas
dec
pop
sub
fmull
pop
rcll
mov
das
xlat
or
inc
fistpl
js
das
mov
mov
sar
into
into
mov
adc
jne
adcb
out
rcr
mov
push
test
subl
mov
das
xchg
xlat
push
das
and
pusha
push
sbb
push
call
testb
push
hlt
add
mov
dec
cmpsl
imul
xchg
inc
ret
lahf
push
jmp
push
les
push
cs
in
arpl
imul
dec
daa
mov
xor
data16
aam
adc
jne
or
dec
imul
pop
aaa
data16
jge
cmp
or
shrl
sarl
stos
sbb
add
test
mov
mov
push
adc
sbb
sbb
lahf
in
adc
mov
out
enter
ret
outsb
pop
ljmp
sbb
outsl
daa
fdivrs
adc
pop
pop
into
fnsave
sbb
pop
xlat
orb
mov
jbe
mov
in
lods
mov
add
lea
mov
jae
mov
and
add
fsubrl
jns
pop
inc
jae
repz
repnz
cmp
or
xor
mov
int
cmp
dec
lds
cltd
inc
imul
mov
cmp
adc
outsb
mov
or
or
enter
mov
add
push
xorl
in
push
sub
and
bound
std
sub
test
lods
lcall
imul
aaa
jbe
adc
cmp
push
cmpsb
cwtl
sub
inc
div
cmp
jge
lds
call
ret
lret
lds
cmp
jl
dec
loopne
aas
test
sub
add
pop
pop
cmp
cmp
mov
fisubs
je
pop
pushf
fcmovb
fistps
jne
sar
mov
cmp
ffree
jmp
mov
in
add
add
xchg
xchg
inc
cwtl
mov
and
sub
loop
in
clc
xor
ljmp
xor
push
stos
pop
sti
or
inc
arpl
cld
pop
and
fnstenv
pusha
mov
jne,pn
or
icebp
jo
cmp
test
leave
loop
fcomi
into
dec
adc
test
js
sahf
ss
stc
add
or
dec
xor
mov
arpl
push
addr16
mov
cmpsb
in
push
pushf
rcll
sarl
dec
mov
sub
testl
mov
negb
push
add
xor
jae
mov
pop
filds
mov
jmp
mov
cwtl
cmp
add
ret
inc
dec
das
out
dec
jmp
sarl
sbb
bswap
adc
inc
mov
pop
add
subb
sarb
stos
stc
add
or
cld
into
cmp
outsb
adc
inc
hlt
js
push
gs
pop
inc
popf
and
and
jb
nop
push
fldcw
sbb
int3
dec
scas
fldcw
addr16
xchg
repz
xor
add
std
gs
loop
jb
push
mov
xor
arpl
daa
popa
dec
movsl
test
dec
stos
test
pop
ss
and
mov
fs
xor
test
adc
arpl
pusha
rorl
dec
sub
leave
add
cld
sarl
out
push
aad
push
add
dec
stos
ljmp
mov
ja
pop
jecxz
daa
pop
mov
scas
leave
and
jp
xorb
mov
scas
in
mov
stc
mov
fucom
popa
mov
xor
faddl
add
pop
in
sbb
cmpsl
out
fwait
jno
orb
xor
lock
cmp
sub
ret
mov
sbb
ja
mov
cli
inc
pop
loopne,pt
sub
mov
dec
leave
xor
popf
mov
outsl
adc
and
sub
repnz
out
sbb
pop
jae
cmp
adc
jns
mov
es
imul
mov
in
enter
lea
in
mov
int
lret
add
repz
popf
cmc
enter
sbb
xchg
xor
or
jmp
cmp
mov
add
je
mov
mov
lock
add
int3
outsl
inc
rcl
cltd
mov
imulb
jge
jno
shll
push
test
hlt
cltd
pop
mov
fcmovne
push
jo
bnd
mov
repnz
orb
loop
cld
mov
sbb
sbb
or
pop
sub
shl
sub
daa
xchg
test
or
iret
fs
push
mov
punpckhdq
popf
add
mov
jmp
jno
jecxz
or
xorl
ss
pop
mov
js
mov
mull
jbe
inc
and
aas
jmp
data16
mov
loopne
into
pop
mov
mov
lret
and
sub
mov
int3
pop
xchg
xor
sahf
les
aaa
mov
cmpsl
andb
lret
pusha
fistpl
or
lret
push
xor
daa
mov
adc
ret
mov
or
fidivrs
pop
enter
jnp
clc
sti
je
pop
xchg
cs
arpl
je
mov
movsl
mov
cmpsb
les
mov
add
lret
sub
popf
jle
mov
lods
push
jb
out
imul
xchg
test
lock
pop
xor
rcrl
call
jmp
addb
lret
fildll
mov
xor
fs
xchg
into
test
add
xchg
mov
pop
mov
test
je
repnz
in
loopne
loopne
sti
scas
jecxz
sub
popf
lret
push
mov
fnstenv
push
cmp
faddp
push
push
push
xor
mov
lods
ret
rcrb
mov
mov
sti
lcall
jne
adc
mov
lret
jge
jnp
mov
mov
test
inc
cld
and
dec
icebp
daa
cld
push
repz
dec
das
or
test
in
and
xor
jl
fwait
fs
cmp
lods
push
jecxz
sub
mov
mov
sub
xor
int3
outsb
rcr
pop
xchg
lret
outsb
jle
xor
cmp
add
mov
push
adc
ljmp
xchg
imul
jl
ljmp
jl
or
cmp
ljmp
xchg
jle
into
insl
loop
nop
or
xchg
shr
ds
lock
xchg
push
out
lret
sbb
and
orl
jae
mov
push
sbb
imul
adc
xchg
das
mov
ret
aam
jb
shl
roll
icebp
dec
xchg
or
push
mov
adc
rcll
mov
sbb
pop
xchg
cmc
dec
xchg
test
add
sub
pop
pop
cltd
imul
call
popf
sub
push
sub
test
xchg
push
and
ljmp
das
push
inc
push
xchg
icebp
inc
jns
and
dec
fldenv
negl
outsl
addr16
stc
lret
jmp
inc
ret
sub
sbb
pusha
jmp
dec
stc
fwait
mov
orl
and
test
adc
aad
dec
or
push
aas
loop
sub
insl
insl
jle
cmp
cmpsb
mov
loope
cmpb
mov
mov
insl
insb
inc
inc
es
arpl
lret
dec
mov
mov
inc
lcall
jmp
dec
push
pop
test
aaa
mov
mov
adc
cmp
or
jae
dec
add
imull
bound
add
jno
insb
push
push
xor
and
adc
add
and
mov
sti
sub
cmp
cmp
push
lds
mov
outsl
jb
gs
add
pop
into
pop
hlt
sbb
icebp
popf
aam
call
movsl
inc
cltd
insb
xlat
popf
mov
xchg
mov
sub
mov
inc
addl
enter
or
inc
mov
add
mov
xchg
dec
fnsave
lds
push
adc
sti
pop
xchg
pop
jle
push
adc
or
insb
aaa
inc
pop
pop
inc
sbb
dec
push
fwait
insb
insb
xchg
dec
push
movsl
mov
sahf
fs
or
jnp
daa
loopne
call
enter
test
mov
ljmp
push
nop
add
push
mov
addl
jle
dec
dec
mov
dec
rclb
sbb
in
stc
sbb
cmp
inc
xlat
jae
lahf
aas
dec
mov
inc
pop
enter
mov
push
jl
mov
mov
pop
add
icebp
out
and
mov
jno
add
jp
sbb
arpl
into
xchg
imul
mov
add
xchg
and
jmp
shlb
fs
fdivrl
fsubrs
dec
ljmp
sbb
jo
sbb
rcl
fdivrs
test
cmp
out
js
popa
xchg
stos
sti
dec
push
jecxz
fwait
cmpsb
pop
adc
shl
and
lcall
mov
push
jecxz
inc
aaa
push
leave
cmpsb
pop
scas
mov
push
aad
lock
xchg
bound
loope
mov
cltd
pop
test
es
cmp
inc
sbb
xor
or
fcoml
in
loop
fmull
ja
fmull
jge
dec
test
or
out
push
add
repnz
mov
jl
pusha
or
jge
inc
fidivrs
subl
push
inc
mov
sub
and
test
insb
adc
orb
nop
pop
jle
sbb
inc
jo
fdivrl
push
sti
aad
mov
and
fdivrl
add
add
out
ljmp
ret
cld
sub
xor
dec
pop
sbb
pop
lret
lret
inc
push
lea
cmp
inc
test
add
and
cli
aas
hlt
aad
pusha
roll
je
clc
and
aam
enter
stos
cltd
insl
idivb
xchg
mov
add
popa
add
mov
push
mov
les
imul
pop
jmp
test
lret
cld
mov
mov
mov
xor
arpl
jbe
jbe
lds
mov
cmp
mov
or
push
xor
xor
lahf
iret
out
lods
in
mov
lods
dec
dec
shl
divl
test
fstp
inc
iret
ds
xchg
dec
nop
dec
enter
push
inc
sub
adc
and
xor
jo
cmpsb
gs
cmp
pop
dec
fwait
sub
shrl
clc
mov
stos
sbb
push
xchg
shrl
sti
popf
add
outsb
mov
out
jnp
xchg
icebp
ljmp
addr16
xor
int3
cmp
jmp
out
int
jae
ja
xor
adc
test
dec
es
xchg
subb
xor
jge
dec
xor
pop
add
cmp
dec
xchg
in
jo
push
sbb
adc
and
adc
mov
test
negb
hlt
xchg
xor
adc
xorl
insb
and
mov
fisubrl
sbb
shll
cmp
icebp
mov
cli
jle
dec
adc
push
arpl
insb
in
lods
into
les
xchg
test
sub
cltd
ficomps
mov
decb
adc
lahf
or
cld
dec
popf
std
jae
mov
push
mov
pmaxub
sub
seto
test
pop
cmp
lahf
push
lock
add
repz
adc
mov
out
xchg
in
testb
popa
push
ds
sbb
sbbb
cmp
in
fldenv
ja
inc
les
hlt
or
ja
mov
push
pushl
movsl
cs
jge
setle
pusha
jg
jmp
jge
dec
pop
imul
sub
in
repnz
mov
dec
gs
xchg
xchg
arpl
addr16
nop
outsl
cmpsb
xor
ja
imul
xor
push
xor
mov
cmp
inc
jns
mov
mov
pop
xchg
or
pop
imul
aaa
fwait
mov
hlt
jmp
xchg
iret
mov
xor
adc
push
fwait
add
divb
mov
push
sbbb
leave
loopne
push
sarl
inc
test
out
aaa
rcll
call
push
mov
and
ljmp
xlat
cmp
inc
cltd
in
lods
repnz
in
add
mov
pushf
or
push
push
cs
jne
shrl
testb
pop
inc
inc
pop
lods
or
jb
add
add
push
mov
xchg
jne
jno
bound
lret
mov
subl
mov
adc
push
lea
add
cltd
addl
cld
testl
jle
xchg
out
roll
cmc
shl
ret
data16
aad
xchg
and
and
adc
lret
lahf
les
popa
scas
mov
fisubs
xchg
imulb
rcll
imul
push
sub
dec
mov
mov
aad
bound
xor
cmovge
sbb
mov
subl
hlt
sub
mov
add
icebp
mov
sti
xchg
xor
int
push
lret
add
jp
adc
dec
setne
sub
dec
loopne
fs
mov
mov
jl
into
addl
testb
xchg
pop
mov
cwtl
push
or
sahf
add
jno,pn
iret
nop
add
push
out
shrl
lock
aas
or
ss
pop
jo
mov
call
movsb
pop
cmc
aaa
xlat
jbe
jge
or
and
mov
dec
loope
mov
fxch
repz
in
dec
cwtl
out
dec
fwait
push
cwtl
jmp
pop
and
or
dec
daa
sbb
xchg
mov
arpl
or
loop
loopne
pop
sub
fildl
jge
scas
daa
lret
fisttps
sub
or
jbe
fcom
pop
in
pop
popf
or
nop
lea
and
dec
std
push
and
add
sub
stos
sbb
cli
jne
push
pop
lahf
jno
dec
add
push
cmp
and
mov
sub
xor
or
mov
ret
xor
pop
loope
dec
pusha
lock
push
xor
lock
lret
mov
lods
adc
cmp
cmp
add
and
cltd
pop
add
jp
in
pushf
nop
aas
lds
orl
mov
jo
pop
fs
sub
js
adc
in
movsb
pop
pop
lret
out
clc
push
xor
fwait
jg
ja
enter
jno
loope
mov
call
pop
xabort
ret
shlb
loope
cmp
mov
lret
jnp
int
cmp
negl
and
add
loopne
aaa
jg
cmp
idiv
jnp
repz
dec
mov
mov
xlat
aam
cmp
mov
push
sub
test
mov
testl
xor
dec
mov
cltd
notb
popf
xchg
stos
sub
inc
sti
test
aam
add
ss
or
xchg
mov
inc
mov
seto
shrl
push
mov
sub
mov
jl
jg
xchg
and
push
xorl
sbb
sub
sti
ret
das
mov
frstor
icebp
mov
das
cli
lret
stc
test
lds
test
and
sub
fabs
mov
repz
push
push
and
jb
cltd
push
cmpsb
fsubl
popa
inc
ret
popf
flds
lods
scas
sti
decl
pop
xor
loopne
bnd
cwtl
pop
fcmovbe
add
mov
roll
popa
or
pop
add
inc
cpuid
pop
insl
ljmp
or
cs
and
and
jge
sub
push
adc
fists
jno
push
mov
les
sub
lods
fimull
dec
stos
pop
int3
insb
ds
xor
fsts
lret
scas
imul
cltd
shlb
insl
lret
xchg
and
add
dec
xchg
in
xchg
dec
sub
fistps
cmc
jmp
dec
out
int3
mov
inc
adc
movsb
adc
dec
sahf
mov
dec
pop
or
cli
cmp
inc
jne
scas
loopne
sti
rolb
sbb
jns
rcll
xchg
mov
dec
imul
mov
je
xor
int
repz
push
cwtl
shlb
dec
in
ja
ljmp
out
cmp
aad
sub
adc
jo
mov
outsl
fdiv
jne
cmp
das
xchg
sub
sar
fwait
dec
pushf
xor
mov
jns
es
xor
pop
push
pushf
cwtl
loop
repnz
mov
jecxz
xchg
cltd
push
mov
dec
sbb
lds
lret
pusha
out
mov
stos
xor
lahf
out
enter
test
adc
stos
fstpl
loopne
fidivrl
shrb
outsl
xchg
dec
dec
xchg
sti
dec
push
push
pop
push
daa
testl
xor
push
cmp
out
rorl
cmp
arpl
call
test
or
arpl
inc
fwait
push
jo
inc
scas
adc
movsb
addl
inc
cld
jae
aaa
dec
adc
jg
cmc
or
and
pop
xchg
push
or
out
out
add
fidivrl
xchg
pop
lds
mov
jcxz
pusha
clc
ljmp
mov
scas
or
inc
mov
xor
jg
rol
inc
setl
mov
out
mov
push
sti
pop
cmp
sbb
xlat
or
int
cmp
jno
loope
xchg
jo
js
lret
faddp
or
and
sbb
xchg
push
add
divb
mov
mov
sub
cmp
adc
insl
mov
jne
and
add
out
sbb
testb
outsb
inc
sbb
sub
xchg
push
mov
xor
adc
mov
jg
lods
cmp
jle
mov
adc
mov
lods
loopne
rcrb
xchg
push
xlat
ret
notl
loope
sti
mov
test
out
mov
rcll
movsb
bnd
adc
dec
nop
lods
sub
ret
movl
or
test
cmpsb
outsl
cmp
jge
push
cmpsb
xchg
add
sub
arpl
mov
out
fdiv
mull
out
enter
mov
jo
pop
mov
cmp
pop
mov
pusha
inc
sahf
jl
xchg
push
xchg
out
rorl
mov
cwtl
lret
lahf
inc
push
lcall
pop
mov
adc
dec
sbb
jns
insl
popa
add
xor
notb
and
fcmove
adc
rcrl
inc
idivl
ds
aam
cmc
cmp
rcll
out
shll
in
cmp
dec
jo
aas
rcll
xor
and
xchg
xor
inc
dec
das
xlat
jns
sbb
add
xchg
dec
xorl
fwait
lret
fimuls
aam
je
insl
xor
iret
pop
clc
pushf
mov
mov
fwait
loope
adc
int3
dec
into
cmc
xchg
in
fidivrs
or
push
push
ljmp
jle
cmc
jmp
dec
insb
xchg
or
mov
adc
fsubrl
sub
in
imul
movsb
addr16
push
outsb
icebp
sub
add
clc
inc
in
adc
push
test
cmp
adc
pop
orl
push
in
xchg
addr16
mov
cli
faddl
out
or
nop
ljmp
mov
dec
xor
jg
rorb
sbb
dec
in
hlt
or
mov
hlt
lock
mov
push
jg
into
dec
aas
mov
inc
mov
lret
mov
stc
and
test
push
inc
mov
mov
sub
cwtl
mov
mov
adc
adc
out
lret
scas
out
fimuls
add
dec
repz
rdtsc
insl
sbb
movsl
out
ljmp
sbb
aad
lods
add
jo
mov
mov
pop
push
popa
notb
aad
adc
pop
test
aaa
pop
fisubrs
ret
dec
dec
fistl
mov
outsb
jnp
or
ljmp
jbe
mov
test
in
clc
jl
imul
adc
ret
fmul
and
xor
lcall
add
add
in
and
imul
mov
mov
jecxz
jg
sarl
adc
mov
mov
jp
ss
pop
int
iret
fidivrs
arpl
jb
and
in
push
scas
imul
outsb
in
or
inc
mov
pop
jo
cmp
xchg
xor
cld
dec
mov
inc
mov
or
cmc
or
jge
and
push
icebp
pop
jb
repz
mov
int
out
arpl
imul
mov
mov
jp
stos
mov
test
dec
je
in
xchg
mov
sbb
movsl
jns
fsubs
jmp
stc
sbb
rcrl
inc
dec
arpl
fsub
xchg
mov
sbb
jecxz
movsb
sti
xor
out
cmp
adc
adc
cld
stos
fists
pop
mov
pop
mov
dec
shll
cmp
pop
ror
adc
mov
add
fisttpl
push
mov
stos
dec
addr16
rcr
jb
shll
jno
mov
or
lds
jae
mov
shll
push
jle
in
jns
dec
xchg
xchg
popf
pop
in
lahf
movsb
pop
loopne
int3
mov
fistps
dec
jle
loopne
inc
xchg
and
aas
push
insb
sbb
sbb
adc
in
in
stos
sbb
test
inc
cmp
jg
setl
jnp
cmc
push
test
xchg
xchg
mov
addr16
out
lcall
sbb
repnz
cmp
xchg
pop
jnp
arpl
sbb
clc
push
arpl
cmp
scas
mov
mov
mov
std
cmpsb
push
add
pop
mov
mov
clc
pop
in
dec
sbb
negl
xor
mov
dec
xchg
int3
sub
push
test
lds
movsl
xor
xchg
stos
add
mov
xchg
push
cltd
hlt
in
ret
mov
idivl
arpl
mulb
into
mov
push
int
pop
shlb
rcl
lds
dec
out
or
pop
jbe
and
jbe
pusha
decb
pushf
add
and
inc
loopne
inc
shll
mov
add
pop
adc
shll
out
jno
mov
pop
add
outsb
add
push
sub
xsha1
cmpsb
setp
call
xchg
in
mull
das
lea
jg,pn
iret
aaa
mov
cmp
and
push
call
inc
cmpsl
jnp
adc
xor
add
add
test
es
clc
xchg
push
add
jmp
mov
and
popa
fsubrp
enter
xor
test
push
imul
inc
cmc
repnz
enter
xorl
les
outsl
mov
mov
dec
cld
or
jge
mov
mov
fsubrl
ret
fcomi
push
out
fcoml
xor
scas
cli
call
sahf
or
mov
cltd
inc
test
sahf
nop
push
xchg
and
addr16
insl
xchg
sub
jbe
jb
cs
xchg
push
jbe
add
cmc
mov
ret
orb
roll
cmp
xor
sbb
and
xor
test
dec
adc
pop
jno
add
fmulp
iret
add
ret
mov
sti
dec
jae
push
jp
xor
and
iret
sub
outsb
pop
xchg
ds
std
mov
lahf
mov
leave
dec
test
push
xchg
frstor
imul
mov
lods
jge
call
ret
or
and
shrb
xor
mov
jmp
mov
xchg
sub
push
out
inc
cs
out
popf
sbb
and
xorb
les
xchg
shlb
push
std
ret
insb
clc
insb
in
jae
bound
repz
mov
pop
in
int
loope
fisubl
scas
add
inc
ret
mov
outsl
int3
mov
cmp
push
int
dec
add
cmp
add
mov
lret
push
sub
aaa
jns
loope
jbe
inc
loope
jb,pt
iret
shrl
loop
push
insl
clc
cmpl
push
xor
sub
mov
call
jge
sbb
div
sbb
leave
fwait
clc
lods
adc
hlt
add
cmp
push
dec
or
jnp
mov
fcmovnu
enter
stos
jo
jbe
push
es
jns
enter
cmp
jns
add
jl
test
ret
int
add
jae
subb
mov
pop
pop
fsubrl
mov
out
out
cmp
ljmp
or
mull
fwait
and
divb
xor
sahf
roll
adc
scas
ss
imul
mov
dec
mov
sahf
stc
aaa
addr16
xor
pop
inc
mull
imul
push
into
in
sbb
jo
lahf
mov
gs
xor
mov
fldt
movsl
add
repnz
out
dec
outsb
inc
sub
sbb
xor
jne
add
push
push
jle
jns
or
call
push
into
out
fwait
cmp
sub
inc
dec
xorb
rorl
jmp
adc
sti
adc
add
outsb
mov
adc
shr
mov
xor
or
mov
out
mov
movsl
movsb
aas
daa
loopne
lret
stc
rolb
icebp
shrb
push
pop
enter
sbbl
mov
sbb
jecxz
cmp
add
xchg
fstps
push
push
mov
mov
xor
pop
adc
mov
dec
enter
jg
mov
std
and
rcrl
sahf
pop
adc
test
mov
xor
pushf
aaa
ficompl
lret
push
jp
adc
mov
out
adc
sub
jecxz
fisubrs
clc
stos
xchg
and
or
pop
cwtl
lret
into
or
jmp
sbb
mov
adc
adc
push
popf
adc
jmp
test
xor
xor
pop
inc
mov
incb
ret
push
xchg
add
shr
dec
or
rorb
xchg
popa
lods
dec
add
pop
shlb
outsb
mov
adc
sbb
jg
in
lds
xor
cmp
leave
xchg
and
sbb
mov
add
push
pusha
adc
and
aam
cmpsb
lea
xor
push
popl
sbb
sub
arpl
push
cmp
pop
and
push
cmp
mov
or
fistpl
cld
pop
mov
push
lods
push
jmp
inc
icebp
fidivl
jg
enter
lcall
or
movsl
mov
push
inc
xchg
ljmp
sub
mov
jl
test
inc
lret
or
xchg
mov
push
repz
fnstsw
lcall
mov
and
jecxz
ret
jo
sarb
sub
push
xchg
xor
sub
adc
adc
decb
fstpl
add
add
add
mulb
pop
data16
dec
aaa
adc
inc
cmp
mov
pop
cmp
imul
push
xchg
out
push
sbbb
inc
fcompl
addr16
mov
aas
pop
sbb
jmp
mov
pop
cwtl
pusha
aaa
shrb
scas
xchg
inc
in
lea
stos
or
push
and
dec
pushf
aas
je
pushf
les
into
push
jns
mov
xchg
imul
fidivs
filds
cmp
cmc
inc
scas
sbb
lds
sbb
repz
mov
ficompl
jg
and
int
add
arpl
add
ret
rcrb
jp
sbb
divb
iret
xor
push
outsl
cltd
test
test
push
xor
je
jl
aas
and
add
das
pop
cmpsb
andl
ret
and
add
ja
sbbl
xchg
call
sti
inc
imul
bound
push
or
subl
xor
or
dec
andb
ljmp
pop
sbb
jno
cmc
xchg
fidivrl
cltd
dec
insb
imul
shlb
shrl
lret
popf
repnz
lcall
xor
mov
xor
fisubrs
or
notb
in
lods
leave
add
xchg
fisubrl
mov
dec
inc
and
cltd
pop
and
dec
pop
in
cmpb
sahf
incb
loop
movsl
mov
jnp
sbb
ja
inc
pop
sbb
mov
mov
cmp
mov
jno
test
inc
mov
mov
dec
sub
fsts
ret
insl
aam
test
fldcw
and
push
sub
gs
add
hlt
sahf
cmp
scas
das
sub
cmp
jae
test
lea
sub
sti
push
lcall
cmp
mov
jns
adc
jp
dec
push
ret
lea
inc
xchg
daa
pushf
cld
rcrb
jge
rol
xchg
loope
adc
scas
in
bound
mov
leave
pop
adc
pop
mov
leave
mov
iret
imul
pop
mov
inc
loop
lods
xchg
aaa
roll
cs
or
xchg
scas
mov
call
in
mov
lods
mov
mov
push
pop
fldt
add
decl
push
cmp
add
cmpsb
es
pop
stos
dec
lds
or
in
xchg
rcr
xchg
push
dec
cmpsb
sub
mov
es
mov
rcrb
sub
int3
mov
inc
inc
add
dec
add
outsb
cs
xchg
leave
lea
ds
ds
imulb
sbb
push
cmp
jecxz
arpl
pop
jb
push
jl
lods
xchg
sub
push
pop
movsb
sub
add
or
push
sarb
mov
lods
xlat
inc
sbb
mov
scas
sbb
xchg
icebp
mov
ja
pushl
xchg
pushf
in
or
in
repnz
insb
mov
xchg
and
js
cmp
icebp
shr
arpl
jae
sahf
mov
mov
add
lock
test
pushf
jbe
add
sarb
cmp
fsubrl
jne
jbe
ret
pop
mov
add
xor
test
or
divb
add
mov
and
int
cmp
popf
xor
mov
test
and
inc
sbb
xchg
xor
daa
cmp
pop
shlb
adc
fmuls
xor
xor
jbe
mov
ficompl
pop
push
jno
sbb
pop
sub
and
test
sahf
insl
adc
int
mov
adc
test
jmp
xor
xchg
out
bound
pushf
ret
lahf
xchg
bound
mov
hlt
pop
adc
shl
xchg
daa
gs
jne
test
mov
leave
mov
stos
outsl
mov
push
dec
mov
push
in
pop
rclb
mov
enter
sbb
sub
xchg
adc
mov
rcrl
pop
in
nop
loop
ds
rcr
or
rcll
cmp
xchg
cmpsb
push
lds
cmp
push
mov
rorl
xchg
notl
movsb
je
push
dec
cmp
or
jg
pop
pop
ljmp
leave
movsb
fisubs
cmp
add
xchg
dec
loope
jp
outsb
stc
mov
sbb
add
sub
ds
outsb
lcall
push
or
hlt
xlat
push
faddl
adc
js
clc
add
into
pushf
sub
stc
pop
sub
add
movsl
push
hlt
leave
jle
mov
pop
or
test
loopne
mov
push
jbe
dec
and
inc
mov
mov
test
jp
cwtl
cmp
xor
dec
daa
ret
xchg
call
and
or
mov
test
pop
or
adc
js
push
add
pop
lods
cwtl
mov
repnz
mov
sahf
fwait
xor
out
gs
filds
jg
rcll
jmp
jbe
iret
sti
in
add
adc
cmp
es
dec
add
xchg
cmp
lcall
xchg
loopne
xlat
data16
enter
inc
loopne
subl
fs
adc
mov
jmp
repnz
test
jne
addr16
mov
xor
adc
repnz
or
stos
dec
sbb
inc
jae
jge
fdivs
or
scas
and
add
ljmp
data16
mov
pop
outsl
jg
mov
adc
dec
mov
xor
loopne
jge
js
out
mov
adc
fcomps
insl
sub
int
movsb
mov
jne
push
jge
loope
negb
push
shl
push
sbb
fbld
shrl
sbb
jb
xorb
sub
xchg
pop
pop
push
ret
in
push
xor
mov
pop
stc
add
lret
in
add
fucomip
jb
push
jle
imul
loope
pop
sarl
add
inc
repz
mov
push
jbe
sub
icebp
jns
mov
or
and
adc
sbb
daa
cli
and
call
lcall
mov
sahf
mov
ret
mov
dec
call
loope
sbb
cs
cmc
or
jecxz
enter
into
push
mov
scas
shrb
mov
inc
lods
cltd
inc
sub
jp
ja
clc
or
push
fdiv
iret
mov
stos
cli
push
test
jns
mov
and
sarb
and
loopne
mov
enter
add
or
push
dec
lds
inc
sbb
aas
faddl
inc
adc
jecxz
push
mov
loopne
add
xchg
insl
pop
mov
and
test
cmp
mov
fsubs
aad
mov
jnp
cmp
das
out
adc
mov
fcoml
outsb
jb
push
mov
dec
sub
xchg
dec
mov
mov
mov
stos
mov
pop
out
inc
mov
push
stc
mov
movsb
das
mov
or
mov
fwait
dec
inc
imul
stc
insl
push
mov
sbb
mov
push
dec
ds
ljmp
cmp
insb
mov
pop
pushf
popf
xchg
sub
scas
cltd
clc
adcb
lds
es
fisubl
sarb
cmp
jge
out
popf
add
pushf
xchg
and
hlt
cmp
and
pusha
inc
sub
push
push
int
sbb
jbe
sbb
or
cmpsb
iret
das
pop
arpl
sarb
push
sub
dec
mov
shlb
int3
outsl
add
insl
sub
das
icebp
adc
cmp
dec
cmp
rorb
ret
int
xor
pop
xchg
outsb
inc
xor
pop
dec
enter
jbe
insl
sbb
add
dec
adc
xchg
fsubrp
test
push
xchg
cmc
xchg
hlt
insl
and
retw
test
xor
ret
sbb
lcall
faddp
clc
jae
stos
outsb
push
adc
cld
test
int
xorb
outsl
aad
push
jb
das
mov
aad
inc
ficompl
nop
sub
sub
push
rcrl
inc
lods
mov
pop
push
cmc
xchg
stc
dec
imul
xchg
enterw
pop
test
xchg
cmp
ss
cld
fimuls
dec
jge
std
cmpsl
fidivrs
std
imul
push
adc
lea
mov
mov
imul
pushf
mov
inc
and
rorl
fldt
ficompl
mov
mov
pop
pop
or
adc
daa
add
pop
inc
mov
inc
lods
fs
call
xchg
andb
or
mov
push
adc
push
adc
inc
lods
fnstsw
mov
cli
aas
js
mov
sub
ljmp
adc
stc
fcoms
mov
out
mov
dec
push
fwait
adc
cmp
xchg
dec
cmc
xchg
push
shl
add
in
cmpsl
shll
pop
and
and
testb
xlat
xchg
popa
cmp
xchg
mov
aad
push
jle
dec
push
fistpl
xor
mov
jp
cmp
data16
and
sti
push
call
jae
les
test
adc
push
out
andb
mov
testl
repz
cmpl
sbb
popa
dec
pop
ja
pop
and
add
fiaddl
outsb
dec
mov
ret
lods
mov
adc
xchg
shl
clc
int
add
fcoml
rep
dec
sbb
mov
inc
scas
aas
lds
push
push
cmp
jmp
in
jle
xchg
jo
cmpsl
dec
push
mov
lahf
int3
pop
and
fs
mov
sbb
sbb
inc
dec
inc
test
mov
imul
cmpsl
or
pop
or
push
mov
imul
dec
dec
pusha
rclb
push
jg
and
hlt
loope
cmp
mov
pop
fimuls
add
jae
adc
ss
leave
stc
adc
fwait
mov
push
push
xchg
fs
sub
jmp
addr16
cltd
mov
scas
xlat
cmp
xor
xor
int
int3
inc
dec
mov
loop
push
dec
pop
movb
jg
arpl
pop
lock
rcll
js
xchg
mov
and
addr16
inc
xorb
aaa
sub
cwtl
rorl
cmp
int3
repnz
fs
cmp
push
std
jle
sbb
popf
insb
adc
fwait
cs
inc
push
in
mov
xor
xor
push
inc
xor
or
fldl
pop
scas
add
or
and
mov
jnp
mov
add
inc
dec
add
fwait
and
aaa
sbb
mov
pop
lret
xchg
outsl
fisttpl
std
xlat
and
aaa
loop
xor
cld
fists
outsl
fdiv
in
jbe
adc
add
xor
fs
shll
or
pop
or
jo
inc
call
xor
xchg
test
pop
pop
les
popa
mov
cmc
mov
pusha
and
iret
rorl
adc
lcall
leave
in
clc
ja
pusha
fucomp
mov
sub
push
aam
adc
cld
push
ds
outsl
push
divb
inc
gs
in
aas
sub
test
jo
jnp
pop
cmpsb
mov
out
jl
xor
roll
xor
sub
cmpsb
dec
xor
fists
push
and
mov
in
stos
popf
dec
fldpi
push
pop
roll
stos
push
lds
xchg
xchg
outsb
loop
push
lea
orb
inc
inc
or
or
test
hlt
pop
cmc
add
das
xchg
test
jp
js
out
insb
dec
or
das
mov
adc
xor
pop
orb
xchg
dec
and
stc
add
add
push
mov
outsl
push
mov
pop
cmpb
add
scas
out
hlt
dec
stos
jl
dec
inc
outsl
div
xor
jmp
outsl
js,pt
mov
test
and
sbb
leave
loope
jno
filds
pop
sahf
es
pop
fincstp
add
push
repz
outsl
mov
ljmp
and
push
jbe
inc
xor
jne
mov
pushf
sbb
stos
dec
or
popa
pop
fwait
and
sti
arpl
hlt
push
div
mov
aaa
fmull
popa
test
movsl
test
imul
out
fbld
inc
pop
rolb
cmpb
mov
pop
out
xchg
push
dec
push
cmpsb
xor
mov
loopne
lcall
mov
push
lods
int
pop
arpl
ds
sbb
dec
push
outsl
cmc
pop
out
ret
fstl
cmpsl
jge
lahf
sarb
cmpsl
pop
inc
mov
mov
xor
jmp
mov
dec
lret
and
imull
mov
shlb
aad
pop
repz
xchg
fadds
popf
mov
jg
and
inc
in
cmp
ds
hlt
movsb
xor
or
xchg
repz
in
xor
mov
xchg
and
cltd
fnsave
adc
mov
mov
xor
jle
es
jge
aaa
and
mov
xor
cmpsl
xor
lock
push
shrl
cmp
negb
cld
add
rclb
icebp
add
pop
out
lea
movups
into
inc
mov
test
mov
and
fcomip
bound
mov
sbb
add
shll
outsb
nop
jne
jns
mov
pop
xchg
xchg
jl
and
sbb
mov
pop
adc
add
adc
push
fstpl
and
mov
iret
mov
ret
lret
in
ret
cwtl
sbb
pop
mov
add
xchg
dec
lret
aaa
xchg
ss
jb
dec
add
gs
je
add
fstl
test
popf
fxch
arpl
test
push
mov
xchg
or
hlt
xchg
pusha
cs
std
adc
repnz
adc
stos
dec
stos
jle
push
mov
push
imul
inc
std
push
mov
xor
and
cmp
loope
fwait
aad
scas
xchg
nop
mov
adc
cmp
fxch
jle
je
int
pop
pop
pop
jge
mov
cs
in
mov
cmovbe
mov
out
pop
dec
xchg
xchg
dec
cltd
xor
push
data16
scas
cltd
sbb
stos
or
xchg
imul
loope
mov
dec
out
push
in
jmp
aaa
or
jbe
divb
mov
out
xchg
cmpl
mov
aaa
imul
dec
xor
sub
mov
sub
in
mov
scas
sahf
clc
testl
inc
mov
and
addr16
adc
cli
ret
outsl
push
mov
xchg
push
hlt
pop
loopne
mov
sub
adc
sub
or
add
aad
add
dec
lock
sub
jecxz
and
mov
pop
lds
pop
and
dec
js
mov
push
fsubl
inc
int3
int3
iret
cmpsb
push
push
cmc
fldcw
mov
lret
pushf
cmp
fnstenv
xor
in
sbb
add
push
and
mov
adc
mov
pop
fnstcw
cmp
iret
lret
push
mov
insl
pushf
loopne
mov
inc
and
mov
jno
pop
repnz
pop
pop
sub
sub
pushf
pop
sbb
inc
or
into
push
jae
hlt
fildl
in
add
mov
jmp
in
inc
fbstp
shl
adc
and
iret
jecxz,pn
or
inc
add
aaa
mov
gs
sub
in
or
test
xor
bound
in
sbb
js
adc
jmp
push
pop
lock
leave
jb
sbb
test
adc
mov
sub
fs
cmp
adc
sbb
or
inc
icebp
das
call
les
sub
ja
jmp
cli
std
jecxz
fsub
sbb
and
pop
lods
cmpsb
mov
mov
rcrl
push
inc
mov
cli
loopne
mov
cmp
push
push
adc
clc
nop
mov
cwtl
aad
or
out
in
mov
lcall
and
push
pop
mov
arpl
cmp
negb
xchg
test
imul
adc
daa
enter
or
sbb
nop
dec
sbb
bound
and
sahf
push
repz
push
cmp
lods
xor
repnz
inc
aad
mov
aaa
fnstcw
jle
inc
and
xchg
pop
cmp
cmp
mov
mov
shlb
jmp
cld
cwtl
push
and
and
xchg
or
cwtl
aad
andb
push
cli
outsl
into
sbb
cwtl
loop
xor
push
cmp
shll
jo
xchg
daa
xchg
sbb
xchg
xchg
bnd
mov
xchg
add
fidivs
mov
fwait
cwtl
push
jecxz
test
cmp
hlt
pop
sarl
jle
nop
pop
dec
cwtl
pop
fimull
iret
test
int3
dec
fldenv
dec
outsl
push
or
push
data16
cmp
cmc
roll
xor
arpl
add
stos
mov
das
xchg
icebp
insl
lock
vpslld
mov
iret
enter
add
bndstx
insl
mov
mov
add
push
roll
adc
cmp
mov
mov
clc
test
les
insb
andl
or
inc
add
cmp
jecxz
insl
je
mov
mov
test
jns
dec
pop
lea
push
out
scas
jmp
mov
cli
faddp
mov
sbb
inc
shl
shlb
add
pop
mov
test
and
pop
dec
ret
or
lea
fists
pusha
jae
cmpb
sbb
jecxz
movb
cmp
mov
frstor
repz
adc
push
orl
xor
push
loope,pn
xchg
adc
xchg
popa
cmpsl
jne,pt
aaa
adc
pop
cld
dec
jle
shll
dec
add
cmp
xorl
std
dec
ret
into
in
add
lea
and
mov
cmp
mov
jmp
sbb
int3
in
std
pop
pop
fs
pop
mov
js
outsl
les
les
test
es
loope
pop
dec
lock
imul
gs
jmp
mov
fdivl
popl
and
aas
jmp
sahf
or
call
mov
pop
lock
xor
xchg
xorl
aam
push
add
xor
or
notb
push
push
aad
insl
add
xor
stos
sbb
mov
xchg
mov
jae
mov
shrb
stos
wbinvd
or
cwtl
jns
inc
dec
movsl
lret
jmp
outsb
jmp
icebp
xor
jne
es
mov
loopne
jo
mov
cmp
pop
add
push
or
sbb
js
scas
fcomps
fmulp
cmp
or
mov
and
ja
sbb
push
xor
pop
and
aam
inc
call
mov
and
inc
sbb
nop
add
sub
pmulhuw
pop
xor
mov
mov
jmp
jl
es
shlb
in
nop
sub
loope
movsl
aas
sub
mov
push
aas
incl
jo
sub
jmp
sbb
inc
nopl
mov
and
mov
movsb
mov
push
icebp
sarl
push
pop
hlt
fwait
xchg
shlb
xchg
cmp
in
lock
fstpl
adc
jmp
add
lahf
lods
ret
sbbb
loopne
cltd
call
pop
mov
mov
pop
mov
mov
popf
push
mov
push
outsl
push
fs
lea
aaa
scas
xchg
pop
outsb
outsl
xor
mov
cmc
push
xor
pop
mov
adc
push
pushf
pop
int
jp
movsb
dec
xor
sbb
inc
sub
mov
orb
lcall
xchg
repz
xchg
fwait
pop
in
add
pop
loop
add
lds
stos
pop
xchg
add
enter
das
push
jnp
xor
pop
and
adc
icebp
add
aaa
mov
in
pop
sub
push
pop
out
or
call
cmp
aad
pop
int
cmc
xchg
add
sub
shrl
push
push
pushf
xlat
inc
xchg
adc
inc
popf
cmp
adc
shll
adc
adc
or
pop
cmp
insb
dec
dec
in
mov
push
pop
xor
int
push
add
xchg
hlt
sub
push
pushf
punpckhdq
dec
sub
scas
cmp
sbb
mov
aas
gs
xchg
dec
add
dec
xor
outsb
jp
pusha
dec
out
inc
jp
inc
jns
jns
sahf
jmp
fisttps
xchg
xchg
sbb
jo
sub
mov
adc
xchg
iret
pop
xor
sbb
popa
and
ja
xchg
add
das
cmp
mov
pusha
jp
mulb
cmp
cmp
adc
push
cmpsl
std
cmp
sub
cmp
out
scas
xor
dec
ljmp
or
jb
les
imul
scas
insl
mov
sbb
filds
into
popf
mov
sub
lds
outsl
xor
cmp
pusha
or
js
add
xor
mov
gs
out
xchg
or
xor
outsb
cmc
pop
pop
or
push
js
sub
jnp
jg
jo
mov
mov
lcall
jno
mov
outsb
stos
in
sbb
pop
sbb
xchg
dec
insb
imul
xchg
cmp
adcb
add
jne
pop
jg
daa
inc
or
daa
iret
dec
adc
push
xchg
inc
leave
xchg
pop
and
dec
aad
add
outsl
cmp
xlat
aas
fsubrl
or
xchg
mov
xor
rolb
add
insb
mov
push
cmp
lods
mov
popa
pusha
gs
mov
push
ja
xor
mov
xor
mov
scas
jmp
mov
xchg
add
add
push
pop
shrl
lds
xor
cmp
test
pop
push
mov
inc
mov
outsb
int3
repz
mov
popa
adc
xchg
arpl
mov
add
xchg
fdivs
shlb
inc
and
addr16
addl
and
xor
imul
mov
fiadds
call
add
sub
insb
jmp
jns
mov
mov
adc
mov
in
inc
pop
fldt
pusha
cmp
cmpsb
dec
sub
lahf
adc
adc
push
lret
cmp
mov
mov
fsincos
cmp
cltd
ss
sbb
mov
leave
rcrl
inc
out
cmc
mov
lock
or
adc
xlat
or
repnz
mov
pop
fidivrl
out
movsb
sub
jecxz
sub
sahf
call
cmp
popa
fstps
or
dec
loopne
push
arpl
lret
call
inc
pop
fbstp
mov
xor
sub
mov
divl
add
add
std
sti
enter
and
aas
in
and
test
pop
enter
mov
add
sbb
push
push
or
cmp
cmp
cmp
fsubrs
dec
sarl
aaa
adc
xchg
in
push
stc
ret
mov
mov
xchg
rorl
in
repnz
jbe
inc
push
mov
sbb
test
xchg
cmp
push
jge
insb
or
test
xor
jns
in
fisubs
in
out
xchg
pop
stc
mov
push
sub
repz
sub
xchg
loope
xchg
in
mov
cmpsb
lea
repnz
insl
sbb
fcomps
aam
movsl
cmpsb
notb
inc
jp
xchg
pop
dec
pop
inc
lret
enter
stos
into
out
add
lock
dec
mov
aas
aad
xor
movsl
inc
pop
in
call
sbb
nop
or
xor
mov
call
das
xor
int
xorb
push
xor
add
dec
sbbl
ret
jnp
jno
or
test
jmp
gs
lret
lds
outsb
dec
es
cmpsb
insb
jbe
cmp
inc
pusha
mov
out
add
xchg
and
dec
mov
stc
cli
xchg
xlat
mov
repz
sub
jae
xchg
or
and
mov
sbbl
lahf
sub
jg
sbb
lcall
xchg
scas
lock
xchg
jl
xchg
xor
in
cmp
adc
mov
gs
mov
imulb
pusha
loope
pop
out
inc
inc
fs
pop
sub
mov
call
clc
push
mov
insl
mov
fsubrp
aad
mov
mov
cmp
and
in
mov
add
int
mov
and
push
ja
aas
pop
pop
call
lea
je
repnz
scas
jmp
addr16
mov
mov
nop
mov
pop
pop
xlat
inc
loopne
scas
in
jno,pt
shlb
std
sub
bnd
mov
jg
lret
loope
pushw
inc
getsec
ss
faddl
enter
sub
lods
jl
cmpsl
sbb
outsb
xor
xor
mov
xor
lea
cwtl
inc
add
fistl
in
pushf
jle
jp
data16
insl
into
jnp
out
shrl
xlat
jg
pop
push
bound
movsb
and
mov
test
lods
fcoml
or
mov
and
stos
inc
jo
xlat
cmp
mov
mov
inc
and
insb
sbb
ds
sbb
fwait
mov
pop
data16
mov
loopne
xchg
ljmp
leave
dec
xor
stos
sbb
mov
negb
imul
mov
xor
ljmp
fs
mov
in
repz
mov
or
cmp
push
and
outsl
sahf
mov
lret
lahf
jp
test
pop
cmp
lods
shlb
iret
aaa
inc
cmp
jb
or
idiv
out
popa
jge
sub
das
js
and
sbb
out
sti
dec
add
cmp
imulb
repnz
cmpsb
cmp
adc
dec
mov
adc
into
lock
cmpsl
movsl
mov
fisttpll
dec
push
std
mov
xor
pop
cmc
adc
cltd
fsubrl
push
push
pop
push
imul
cmp
sbb
mov
inc
push
cmp
and
push
inc
insb
mov
or
and
inc
inc
lods
pop
aad
push
cmc
shl
adc
mov
loop
mov
in
and
ljmp
pop
cwtl
mov
jne
sarl
push
fldl
push
leave
jns
sbb
push
pop
push
push
jmp
pop
ja
xchg
loop
aas
mov
stos
mov
test
push
sub
popf
xchg
pop
cmpsb
pop
in
sub
xlat
aaa
xchg
jp
add
cld
mov
rcll
mov
mov
popf
adc
xor
mov
mov
or
sub
fisubrl
jge
cwtl
sub
test
fsubrs
pop
pop
dec
pop
cld
add
imul
sub
dec
inc
and
xor
push
subl
and
sbb
in
jmp
sbb
mov
cmpsb
adc
into
inc
adc
outsl
loopne
inc
fdiv
ficoml
cmp
subb
fimuls
push
int3
adc
das
clc
sbb
out
ret
sbb
jmp
neg
adc
loop
xor
cmc
das
jne
cmpb
mov
jne
lret
jns
pushl
push
mov
push
push
fwait
loop
sbb
pop
mov
jne
rep
adc
mov
dec
call
inc
lret
push
jl
out
test
or
aad
sub
mov
cmpsb
insb
out
xchg
cmp
pop
shl
mov
ja
pop
xor
seta
scas
dec
cmp
cmp
dec
fwait
cmp
daa
pop
jbe
daa
outsl
lock
mov
adcb
inc
sbbl
jne
push
xchg
or
cmpsb
popa
in
fimuls
pop
aas
adc
cmp
jl
int
clc
or
and
adcb
sbb
int
in
push
mov
pop
stc
jl
iret
pop
rclb
push
inc
jg
push
pop
ffreep
dec
sub
lahf
stos
mov
out
or
imull
xchg
jno
cmpl
mov
cmpsl
push
push
incb
dec
jns
push
fisttpll
lods
cmpsl
mov
and
jne
test
insl
fstpt
mov
jl
xlat
divl
dec
outsb
or
sub
lahf
shrb
ja
push
inc
call
je
lods
sarl
cmp
jae
mov
pop
pop
xor
mov
popf
or
mov
lret
xor
test
fisubs
std
sub
pop
mov
test
jmp
loopne
lcall
sub
lret
in
fstps
cmp
sbb
or
push
jo
push
addl
inc
shrb
or
push
push
jecxz
arpl
cs
jecxz
add
push
lds
aam
and
xchg
sbb
into
xor
lret
push
or
or
cmp
sub
fimuls
jg
mov
xchg
xorl
pop
xchg
cmpsl
call
pop
loop
scas
mov
cmp
repz
adc
bswap
adcb
je
in
cs
jle
ficompl
jns
pop
loop
popa
popa
jne
mov
lods
fxch
mov
or
mov
push
ja
inc
mov
and
ffree
or
mov
adc
insb
loop
loop
lds
loope
aas
jnp
xchg
jbe
movsl
jbe
add
lods
in
dec
push
fs
jge
xchg
adc
fistpll
xor
xor
sbb
fs
mov
cmp
xchg
test
fldpi
mov
inc
jae
lcall
std
mov
add
idivb
repz
pop
sub
jp
mov
push
adc
jge
xchg
fstps
test
popa
mov
mov
mov
xchg
sbb
jg
inc
sbb
cltd
xchg
mov
insb
add
leave
xchg
rcr
cmp
jae
mov
scas
out
lods
lret
not
out
dec
jge
push
sbb
and
cli
mov
jg
lea
or
ret
subb
or
mov
cmpsb
fsqrt
daa
scas
push
jp
sub
or
orl
or
mov
ds
popa
cmp
lret
push
mov
jge
add
dec
xor
aas
and
into
or
scas
jns
shlb
xchg
outsb
jne
fdivl
and
mov
notl
cld
aam
xchg
loopne
push
mov
mov
add
sahf
mov
push
push
pusha
rolb
jg
xor
xchg
jae
lds
inc
scas
shrb
jae
movsl
push
in
cmp
shlb
mov
jo
fwait
sub
dec
inc
jg
lahf
stos
imulb
mov
sti
fst
cmpb
mov
sbb
scas
fdivrp
pop
jns
test
mov
dec
gs
jns
ret
sarb
jmp
push
xchg
push
jg
frstor
xlat
nop
nop
jp
ljmp
ficoml
push
popa
dec
push
shl
inc
push
inc
xor
dec
sti
inc
add
imull
test
pushf
mov
iret
mov
push
scas
inc
xor
dec
jno
inc
sarl
xchg
ret
push
or
jle
mov
jns
add
in
mov
cmp
ret
das
dec
xchg
sub
fwait
test
fsubr
xor
mov
jecxz
aad
mov
xlat
hlt
pushl
pop
jnp
daa
cmp
pop
shrb
xor
dec
out
incb
insl
jmp
inc
dec
fstps
test
test
scas
mov
into
push
test
subb
ljmp
push
lret
inc
add
mov
xorb
and
aam
pop
jb
mul
pop
adc
rorl
cltd
enter
repnz
or
mov
ss
sub
fs
orl
cld
test
ss
jl
insl
lods
outsl
mov
nop
and
pusha
fistpl
push
stc
fimuls
push
sub
mov
lds
push
clc
das
add
test
jne
sbb
and
pusha
push
or
arpl
push
lahf
out
scas
pop
in
adc
les
mov
push
jne
sub
jle
add
mov
leave
rcll
rol
das
and
xor
fcomps
loopne
call
jge
aas
gs
scas
xor
notb
ja
shlb
hlt
cmpsl
setl
xor
pop
adc
pop
adc
mov
daa
jns
inc
jb
push
int3
ja
add
pop
sbb
in
test
lcall
loopne
mov
lahf
pusha
mov
or
loop
insl
pop
jbe
mov
pop
add
imull
addr16
push
dec
cmc
lock
test
dec
xor
inc
push
ss
cmp
outsb
dec
les
pop
jge
xchg
repnz
popa
jae
sbb
lock
jp
test
enter
shll
jecxz
fistpl
mov
icebp
nop
jp
mov
dec
xchg
dec
ja
repz
add
call
pop
xchg
sub
jne
shlb
cmpsb
into
repz
loope
loopne
push
mov
xor
pop
cmp
mov
cmpsb
mov
mov
inc
in
lcall
subb
mov
movsb
repnz
cmp
lods
adc
xchg
repz
cs
sarb
in
dec
push
push
cmpsl
popa
xchg
outsl
aam
mov
inc
in
xchg
jmp
in
into
loop
dec
clc
mov
add
scas
pop
gs
ret
pop
daa
lds
popa
sbb
dec
std
addr16
xchg
and
and
xor
cwtl
jnp
inc
test
jecxz
loopne
add
scas
ret
fsub
jns
lret
inc
fs
cmovno
vorps
sbb
adc
out
cmp
imul
mul
jmp
lahf
fimuls
pop
jbe
test
stos
cmc
jns
sarb
and
test
or
push
testb
sub
imul
imul
movsl
mov
loopne
out
inc
or
jp
es
mov
scas
pop
sub
inc
iret
xor
bound
insl
sahf
data16
movsl
test
xchg
and
add
test
xchg
push
lahf
push
mov
fnstenv
lahf
xchg
sbb
cmp
dec
cmp
out
mov
loop
xchg
mov
in
xchg
in
mov
into
popa
pop
sub
xchg
sbb
xchg
dec
fstpl
sbb
test
imul
xor
out
out
bound
out
std
push
mov
jb
push
inc
ficomps
push
loope
adc
xchg
jbe
test
es
or
stos
mov
jo
xchg
inc
xorb
shlb
cmpsb
xor
pop
ficoml
dec
mov
je
outsb
fadds
js
push
aam
push
bnd
inc
shrb
pop
sbb
ss
jmp
dec
jns
lods
mov
ds
dec
int
or
js
xor
daa
dec
push
test
sub
mov
adc
xor
ret
mov
std
test
or
xchg
adc
aad
push
cmp
cmc
push
inc
pop
enter
push
fstpl
add
lods
ja
xorb
testb
sahf
out
xchg
cltd
subb
mov
jbe
pop
lds
mov
mov
cmc
push
add
negb
xchg
sbb
out
push
or
fwait
mov
pusha
jns
sub
xchg
add
cmc
sti
xchg
add
xchg
test
lods
sub
dec
or
mov
test
push
pop
daa
add
pop
cs
inc
cmp
sub
cmp
inc
fwait
bound
and
and
or
mov
and
mov
mov
cli
scas
dec
lret
adc
xchg
lea
inc
xchg
cmp
jb
jbe
push
fisubl
cmpb
leave
dec
jnp
test
and
shl
loop
arpl
cmc
mov
push
push
xchg
and
sbb
lcall
push
push
add
or
pop
mov
js
sub
ret
xchg
fucomip
dec
movsb
cmc
sbb
daa
jmp
cli
test
dec
lahf
push
xchg
dec
and
mov
and
mov
shll
nop
add
ret
movsl
aam
mov
xor
aaa
hlt
loope
imul
in
sub
andb
sti
shl
sub
sub
lods
shl
xchg
loopne
xor
add
paddusb
jae
lods
jns
inc
aad
cmpsb
aas
hlt
mov
pop
mov
mov
out
pushf
fucomi
mov
and
sub
fwait
test
add
mov
sar
inc
jnp
mov
addr16
mov
pop
mov
cmp
scas
in
stos
jg
mov
test
dec
stos
test
cmp
in
imul
and
xor
mov
inc
addl
in
adc
lea
xchg
jecxz
ja
dec
xchg
pop
dec
push
or
mov
in
lods
stos
aas
inc
sahf
sub
test
pop
push
lret
dec
in
push
fldenv
jge
mov
insb
scas
inc
dec
xchg
mov
int3
xor
das
mov
jbe
cmp
dec
loop
daa
adc
rcll
je
addr16
ss
xor
dec
cmp
jb
jns
loop
cmp
sub
lds
iret
out
xchg
repz
push
pop
fisubs
das
xor
cmp
imul
dec
cmp
test
and
adc
or
dec
sub
or
in
sub
inc
xor
adc
pop
cmp
jle
ljmp
cld
jle
mov
pop
pop
xor
ret
jl
sbb
test
xor
xchg
lahf
sub
jle
dec
jp
sbb
addr16
nop
ret
and
push
mov
mov
xor
inc
inc
jb
insl
add
mov
cmp
and
dec
popf
sbb
mov
mov
dec
imul
jae
and
loop
int
ss
in
sbb
outsb
cwtl
dec
les
iret
xchg
xor
dec
testb
es
fisubrs
fdivs
adc
scas
jb
push
inc
fs
scas
mov
jp
add
add
sub
adc
fsubs
scas
fstpt
sub
mov
inc
cmp
lock
ret
sbb
addb
add
pop
mov
shrb
adc
loopne
mov
mov
jno
push
cs
nop
sbb
or
fnstsw
stos
mov
popf
fisubrl
cmpsl
jp
mov
aam
repz
inc
outsb
push
test
ljmp
mov
fcompp
fldenv
out
inc
xor
test
sbb
ret
mov
jae
add
in
cmpsl
cmc
rcll
jl
fstps
cs
in
out
roll
pop
pop
aam
icebp
or
pop
pop
inc
cmp
push
dec
movsb
mov
je
mov
pop
mov
jecxz
xor
or
clc
pop
shl
stc
mov
cmp
dec
mov
scas
dec
add
aaa
mov
sbb
and
adc
jp
ljmp
aas
stos
jo
ja
push
mull
jo
adc
cmpl
add
inc
jae
cmp
cmpsl
imul
pop
or
push
jle
rol
push
std
mov
sub
mov
sbb
bound
mov
rorb
rolb
inc
out
sysexit
insb
insl
out
pushf
or
enter
iret
push
hlt
xor
add
cmp
movsl
adc
fdivl
ret
enter
roll
dec
popf
imul
pop
and
fwait
lret
rclb
rorl
mov
ljmp
dec
or
inc
outsb
mov
pop
jae
bound
dec
sub
adc
insl
jne
sbb
in
cmc
xor
push
lods
sbb
ja
mov
lea
dec
mov
or
test
xor
mov
test
push
inc
jb
scas
scas
dec
cmp
mov
inc
hlt
mov
push
jbe
cli
and
add
out
mov
push
pop
sub
mov
std
sti
xchg
dec
adc
loope
xor
push
gs
lods
sub
js
jbe
jae
jbe
xchg
and
sub
sub
insb
sbb
dec
in
sbb
andb
mov
and
cmp
testb
enter
adc
push
outsb
inc
or
pushf
mov
mov
cmc
dec
xchg
dec
or
shll
adcl
int
inc
sub
lcall
jle
xor
and
dec
arpl
jnp
or
push
movsb
sbb
insb
jmp
jae
mov
addb
sarb
sarl
jb
sub
sarb
mov
out
mov
and
xchg
inc
aaa
add
and
xor
test
pop
lods
cmp
mov
sbb
scas
pop
cwtl
sub
scas
mov
scas
cvtps2pi
stos
pop
cmp
mov
inc
mov
stos
lret
loope
or
pushf
jg
data16
lods
fildl
aas
sub
mov
pop
in
dec
nop
adc
cmp
scas
inc
xchg
or
mov
xchg
rolb
mov
and
cli
xor
pmuludq
dec
inc
inc
ja
jb
pop
sub
popa
xchg
neg
ret
mov
xchg
ret
or
jne
jge
lahf
arpl
push
jo
sar
add
jo
xchg
shlb
xlat
or
jecxz
pusha
sarl
cmp
mov
test
mov
xchg
lcall
mov
sbbl
imul
aaa
cmp
adc
push
add
push
or
push
sbb
adc
cmp
jp
jmp
test
repz
aad
mov
pop
mov
inc
jl
xchg
or
inc
jo
cmp
inc
xchg
cmp
jo
mov
fwait
xchg
jmp
enter
daa
pusha
insb
into
mov
sbb
cmpsb
les
enter
in
imul
dec
xchg
lcall
mov
xor
push
jg
cmpsb
add
sbb
lret
dec
mov
push
test
enter
ljmp
push
je
repz
fisttpll
insl
and
js
dec
mov
dec
dec
jmp
inc
fsubr
gs
test
in
pop
imul
adc
add
stos
addr16
dec
sbb
cmpsl
jg
loopne
mov
loope
stos
movsl
mov
jge
ljmp
dec
popf
ret
add
pop
xchg
popa
shll
lds
inc
pop
mov
xor
sub
mov
dec
sbb
mov
dec
xchg
cmp
lret
or
add
sbb
call
cltd
in
xor
cmpsl
mov
jg
mov
lcall
xchg
push
insl
into
aaa
add
inc
pop
push
sub
iret
and
adc
call
jno
or
cltd
xor
dec
idivb
adc
rclb
subl
push
mov
ret
sbb
cmc
jo
cmp
aas
stc
lahf
xchg
lods
push
fisttps
lcall
cs
imul
add
and
cmp
mov
ljmp
inc
std
jb
sub
xchg
jp
fwait
cmpsw
add
mov
xor
add
dec
jae
jo
js
pop
pop
and
mov
push
adcl
fs
adc
xchg
clc
xchg
mov
mov
jne
in
xchg
xchg
stc
add
lock
ret
jp
insb
xchg
fistpll
in
scas
mov
ret
shlb
dec
loop
cmpsb
mov
sub
scas
enter
sarb
xchg
lcall
dec
mov
fnsave
mov
les
mov
arpl
mov
ljmp
cmpsl
cmp
lret
inc
hlt
rcrl
pop
fsubs
xchg
addr16
out
mov
push
xchg
pop
lret
sbb
adc
or
lds
mov
xorl
std
xlat
cmp
inc
inc
test
cli
testl
mov
jg
xor
push
or
pop
data16
add
mov
add
stc
push
sbb
add
pop
out
fwait
js
mov
mov
sahf
mov
or
loope
test
pop
int
cmp
mov
imul
shll
mov
loopne
lock
loopne
push
enter
fadds
imul
test
cmp
and
xlat
popf
xchg
push
jbe
xchg
xor
subb
cli
scas
mov
cmp
dec
fdivrl
sbb
xchg
push
sbb
jle
or
or
adc
sub
xor
adc
popa
inc
repnz
add
imul
les
sarl
test
sub
inc
dec
rcl
in
outsl
ljmp
hlt
mov
sub
xchg
popa
xor
jno
push
mov
aad
repnz
xchg
xor
and
sub
and
bound
pusha
jb
jns
pop
mov
xchg
and
mov
cmpsb
inc
pop
push
adc
dec
sub
aas
or
adc
ja
or
testb
fisttpll
insb
mov
aas
cs
pop
cmpsb
out
dec
mov
jns
lret
cwtl
xor
lahf
in
xor
into
dec
test
test
mov
jmp
xor
cltd
cmpsl
mov
mov
push
cltd
pushf
adc
xchg
mov
mov
mov
and
mov
jecxz
dec
into
ret
cmp
bnd
push
jno
int3
hlt
sarb
xchg
cltd
add
pop
push
outsl
aas
jb
inc
scas
nop
adc
sbb
andb
pop
aam
test
out
outsb
push
xchg
add
pcmpeqw
pushw
sub
fstpt
add
movb
dec
inc
jbe
in
lret
sbb
test
out
lcall
or
xchg
aam
pop
es
js
pop
iret
cmp
adc
imul
call
std
push
ret
ss
iret
lret
aas
xchg
arpl
sub
dec
jo
pop
jmp
int3
xchg
cmp
sub
mov
mov
jg
leave
dec
push
jmp
xchg
test
xchg
mov
and
sub
pop
push
mov
pop
add
push
les
xor
sub
and
xchg
jne
sbb
outsl
sbb
cmpsl
shl
nop
fcoms
pop
rcrl
aas
ficompl
idivl
ja
filds
and
dec
sarl
lods
stos
mov
lods
data16
inc
popf
or
xchg
lods
cwtl
xchg
es
pushf
mov
pop
pop
inc
movsl
mov
movsb
xchg
scas
pop
in
inc
and
lret
mov
stos
stc
je
ss
scas
lds
addr16
scas
lret
aas
rol
mov
mov
enter
in
shr
xor
push
push
mov
sbbb
or
into
dec
cmp
stos
pop
rorl
cli
dec
xchg
imull
dec
sar
mov
pop
in
jge
fsubrl
int
mov
cmp
nop
ds
scas
outsb
sti
or
orl
and
lock
decb
scas
jns
fstl
push
xchg
mov
sahf
jecxz
sbb
sub
push
xchg
jbe
push
sub
mov
mov
cmpsl
insb
mov
lods
pop
cmp
add
popf
adc
imul
cli
bound
dec
and
pop
testb
orb
stos
gs
add
ret
push
test
sbb
add
dec
in
rcr
pop
jbe
stos
fistps
ret
sbb
movsb
mov
sahf
jg
inc
adc
mov
mov
sbb
decl
outsb
xchg
test
push
jecxz
mov
push
out
push
lock
inc
sub
sub
dec
lret
dec
pop
jbe
sub
cmp
insb
xor
fiadds
sub
imul
enter
pop
jnp
scas
mov
shlb
push
adc
std
pop
fdivrl
sbb
xor
sub
sub
adc
pop
pop
xchg
cmpsl
jmp
ret
je
xchg
lret
pop
movsb
iret
dec
sub
inc
orl
lods
shlb
jne
rcrb
stos
mov
sbb
fildl
mov
outsb
sub
sbb
out
subb
loope
xchg
sbb
and
adc
cltd
fwait
imul
and
lea
cs
mov
repz
cmp
stos
mov
subb
out
clc
xchg
mov
pop
jecxz
movsb
sbb
mov
inc
icebp
sbb
inc
and
lods
xor
jne
adc
ret
xor
dec
in
mov
shl
out
push
xor
push
jnp
add
movsb
xor
mov
lods
in
lds
in
or
sbb
add
insb
lock
jl
xor
es
mov
mov
mov
push
lods
mov
test
xchg
scas
fistpll
je
faddl
call
insb
mov
xchg
mov
xchg
mov
sahf
adc
pop
arpl
sub
push
mov
sbb
xlat
movsl
inc
mov
int
bound
icebp
xchg
lock
inc
in
cmpsb
leave
retw
fs
mov
les
and
scas
cmp
cwtl
scas
imul
addps
inc
dec
sub
lods
fwait
adc
or
add
loopne
sbb
andb
daa
push
jbe
jecxz
or
mov
iret
je
mov
loope
fsts
enter
aas
iret
jne
aaa
fiadds
adc
ss
rclb
xor
add
mov
push
jecxz
gs
pushf
sub
pop
loope
xchg
mov
out
nop
loopne
cs
ret
pop
outsl
enter
adc
or
or
mov
push
dec
jbe
fistpll
popa
shll
and
les
dec
rolb
mov
jp
push
xor
std
cmp
sahf
pop
add
repz
mov
das
inc
jbe
add
cwtl
in
push
mov
sbb
insb
mov
xchg
js
addb
stc
or
mov
dec
icebp
or
stos
out
sub
sbb
cmp
adc
int
cmpsl
andb
lock
push
loopne
lods
cld
stos
mov
lock
mov
push
rorl
imul
out
imul
fiaddl
mov
sbb
add
mov
inc
lea
lcall
jecxz
jns
lds
xchg
mov
mov
cld
repz
xchg
mov
inc
std
lea
addl
push
xchg
das
pushf
iret
lahf
js
in
fmull
lods
mov
movsb
sub
mov
aaa
dec
popf
shl
pushf
jle
imul
stc
gs
iret
mov
loope
pop
lcall
or
rclb
popf
stos
popa
sbb
addr16
into
sbb
mov
mov
sbb
in
jb
xchg
mov
mov
xchg
xchg
push
rcrb
aaa
ds
mov
loope
test
add
ja
imul
sub
jnp
jae
sahf
icebp
inc
xchg
in
je
stos
gs
rcl
or
cwtl
leave
cmp
outsl
movsb
scas
cltd
cmp
sub
shrb
mov
mov
pop
movsb
xchg
fnstenv
pop
xor
in
mov
hlt
cmp
mov
mov
popf
lcall
cmp
add
ret
mov
mov
inc
nop
jp
inc
mov
mov
leave
mov
hlt
lds
mov
sub
mov
outsb
loop
xchg
dec
lods
mov
in
scas
jns
out
ja
xor
xlat
ret
stos
iret
sar
jmp
sub
pusha
add
outsb
jbe
xor
jg
cmp
dec
push
push
add
push
into
push
jge
push
sub
out
jbe
fnstcw
sub
pop
fcoml
fs
lret
inc
sub
fildll
insb
pop
data16
cmpsl
mov
and
push
ss
fwait
mov
pop
mov
sub
adc
or
mov
jecxz
pop
popa
or
or
fwait
cmp
sub
and
cld
sub
call
ret
pause
fwait
pop
xor
test
inc
inc
icebp
jmp
xorl
add
fadd
rolb
insl
push
or
sbb
cmpsl
mov
mov
stos
and
xchg
jmp
xchg
test
adc
adc
imul
adc
push
adc
rclb
adc
cwtl
test
mov
fidivs
adc
aad
stc
push
push
or
cld
mov
rclb
in
and
shll
cltd
aas
inc
stos
inc
and
adc
ret
mov
aas
pop
or
stos
in
and
es
lahf
ss
outsb
notb
inc
cld
sbbb
ret
jmp
mov
cmpsb
add
inc
and
mov
push
inc
jge
int3
bound
push
out
shlb
cmp
push
or
rcr
addr16
jo
lods
and
push
jmp
ficoms
rcrl
idiv
pop
xchg
jbe
sti
mov
lock
and
sub
divb
pop
mov
sub
mov
rcrb
fs
stos
out
cld
pop
push
daa
ds
ss
sub
or
movsb
data16
lods
lret
add
jno
arpl
cld
push
dec
dec
pop
cmp
clc
or
or
mov
cmp
and
out
ljmp
dec
imul
lea
cmp
lds
sbb
sub
fxch
ljmp
xchg
xor
jb
sbb
push
rolb
imul
and
push
adc
sti
mov
pop
dec
ror
add
mov
test
mov
pop
outsl
push
xor
dec
mov
dec
and
cmp
jno
sub
pop
dec
pop
xorb
dec
pop
dec
dec
adc
jae
repnz
mov
pushl
sbb
xor
in
jbe
enter
jp
sbb
add
cld
int3
out
add
mov
pop
push
add
ret
repz
jns
outsl
and
sbb
aam
paddusb
and
xor
adc
cmp
int
mov
scas
leave
bound
out
loope
ficoml
movsb
out
and
push
cld
mov
nop
push
mov
adc
xchg
mov
int3
testl
cmp
call
xchg
lods
jae
sub
dec
and
out
fistpl
sarb
adc
aad
and
pop
scas
repz
nop
popa
xchg
jo
jmp
mov
popa
iret
ja
push
lock
stos
push
mov
pop
imul
or
xor
xlat
push
inc
popa
aam
addl
rorb
mov
inc
jecxz
mov
es
and
scas
pop
jmp
subb
hlt
push
out
pop
shll
mov
stc
mov
lods
jmp
imul
outsb
dec
sub
scas
in
pop
loope
inc
inc
xor
hlt
pop
cmp
pushf
in
std
fistpl
je
ret
mov
repz
dec
mov
sbb
test
mov
pop
mov
adc
stc
dec
adc
flds
mov
je
out
xchg
xlat
arpl
and
int
rcll
mov
inc
out
cld
mov
mov
mov
mov
xor
xor
or
test
jmp
xchg
jle
aad
push
mov
jne
mov
mov
add
pop
mov
add
push
pop
fdivrl
cs
mov
loope
ret
imul
test
xchg
data16
cmp
stos
push
aam
jl
iret
cmp
add
inc
dec
movsl
cmp
cmc
mov
int3
ja
fnstenv
dec
jnp
mov
ja
or
xor
xlat
sti
push
adc
bound
dec
out
push
inc
mov
js
pop
add
mov
jmp
mov
lahf
jl
push
fadd
push
imul
cwtl
cmp
add
cs
sub
inc
add
xchg
es
jbe
dec
and
sahf
jp
outsb
aas
push
outsl
shrl
sub
test
xchg
imul
mov
jb
and
pop
cmc
fsts
rorb
push
push
push
dec
push
jmp
sahf
inc
pop
loop
adc
xor
sub
jo
outsb
popa
adc
addr16
sub
pop
fimuls
je
xor
inc
inc
or
repnz
mov
sub
call
adc
sbb
sbb
cmpsb
adc
scas
pop
mov
fcompl
and
outsb
xchg
movsl
rorl
add
add
add
leave
pop
lea
out
sub
sbbb
stos
rolb
mov
mov
jae
shlb
cmp
mov
inc
out
mov
or
dec
movl
in
push
dec
arpl
repnz
mov
add
push
pushf
cltd
xor
pop
mov
mov
jg
mov
mov
and
lcall
inc
out
sub
push
cmp
jl
popa
insl
adc
sbb
imul
stos
adcb
jae
adc
das
mov
push
in
sub
cmpsl
addr16
scas
inc
mulb
pop
scas
push
hlt
or
mov
and
cmpl
and
mov
pop
movsl
mov
mov
xor
gs
in
ss
sbb
mov
sbb
mov
inc
shrb
pop
mov
mov
and
dec
add
stos
mov
push
push
hlt
push
cmp
push
and
and
arpl
add
iret
xor
in
cmp
and
push
test
stc
imul
shrb
jno
sbbb
fs
xchg
pusha
call
xor
ret
mov
cli
dec
shll
test
sub
ret
mov
arpl
je
jmp
inc
sbbl
mov
js
jmp
sbb
not
mov
test
sbb
insb
pop
cmc
pop
loopne
xor
and
mov
std
jmp
pop
fidivl
push
jg
cwtl
pop
pop
iret
adc
or
adc
adcb
dec
mov
out
test
repnz
out
xchg
test
lahf
mov
mov
mov
cwtl
xchg
lret
sbb
out
inc
push
fistps
dec
and
movsb
pop
outsl
std
cmc
scas
imul
xor
pop
stos
decl
cmpb
push
and
movsb
popa
mov
out
mov
decb
sti
mov
mov
imul
rcrb
test
jl
pushf
jbe
mov
es
and
in
mov
pop
add
or
xchg
mov
xor
jl
hlt
data16
mov
sub
ja
push
int3
add
lods
xchg
lods
or
es
and
adc
lcall
stos
mov
dec
xchg
mov
xchg
mov
jmp
sahf
fstp
fdivp
roll
imul
adc
or
arpl
pop
xor
and
inc
xchg
imul
ljmp
orb
imul
mov
lods
cli
lea
cmpsl
mov
jns
push
add
aad
or
or
pop
lods
ss
sarl
cli
scas
dec
inc
xchg
or
mov
push
and
pusha
sub
cltd
lock
or
jo
rorb
div
and
das
imul
mov
lods
test
adc
lret
lds
into
je
lods
adc
stc
xor
incl
dec
xchg
test
sbb
lea
sahf
and
or
into
call
lret
mov
repz
into
incl
fisttpll
or
mov
loopne
or
std
cmpsb
call
cmp
testl
pop
jb
jb
sbbl
or
or
mov
in
adc
jl
cmp
stos
mov
addr16
sbb
out
les
push
jg
jmp
cmp
std
jg
adc
jno
out
gs
sub
xor
pop
add
fwait
xchg
aad
lret
push
dec
and
and
dec
sbb
enter
inc
pop
fildl
mov
pop
pop
call
add
cmp
fwait
clc
movsl
lods
lea
rcrl
movsb
jge
subl
fsubrp
push
pop
mov
je
insl
int
mov
divl
mov
adc
shrb
sbb
outsb
add
cmp
mov
cmpsb
inc
cmp
aas
sub
mov
int3
insb
mov
xchg
popf
in
inc
stc
xchg
sahf
int3
mov
push
test
add
outsl
mov
inc
pop
xor
mov
jg
jp
xor
and
jb
jg
lods
pop
sahf
pop
hlt
js
mov
sbb
xchg
sahf
inc
lar
inc
xor
stos
cmpb
ret
mov
or
push
addb
xchg
aas
cmpsl
nop
jge
pusha
or
dec
dec
mov
sti
lcall
xchg
outsl
and
out
and
das
ret
adcb
mov
mov
jno
js
lock
fucomp
cmp
pop
and
mov
pusha
mov
aas
and
ss
test
adc
mov
mov
das
inc
dec
lods
cld
int
rcll
push
xor
movsl
daa
pop
movsl
sub
sbb
jecxz
mov
rolb
subb
testl
and
sbb
stos
repz
rclb
push
cmp
mov
jb
aaa
movlps
dec
out
pop
cld
mov
inc
inc
fisubrs
mov
leave
xor
je
mov
push
sub
fnstcw
pop
dec
dec
xor
pop
int
dec
mov
inc
xchg
icebp
sbb
and
lcall
cmc
mov
stos
ret
test
out
fcomip
adc
jg
lea
xchg
cmpsl
gs
es
xchg
inc
inc
push
cwtl
pop
shlb
shr
jo
adc
mov
push
popf
enter
mov
adc
pop
loopne
mov
out
jnp
or
jnp
shrl
lods
imul
mov
mov
or
mov
jg
mov
ret
in
cmp
out
xchg
leave
xchg
or
adc
and
dec
cs
mov
and
jbe
mov
and
cmc
testl
out
xchg
scas
ret
iret
push
mov
xchg
stos
jb
sub
sarl
jg
mov
je
fsubrp
add
xor
dec
cmp
cmpsl
pop
cld
mov
sbb
xor
or
mov
dec
mov
jb
cli
aas
in
adc
adc
mov
orb
insl
fsts
mov
mov
mov
pop
imul
and
mov
out
lret
out
mov
les
rclb
std
push
sbb
popf
inc
sbb
add
mov
inc
xor
xor
cmp
push
pop
cmp
fdivs
push
mov
movsl
fidivrl
test
xchg
clc
loope
or
sub
lea
popa
pushaw
shll
ds
imull
clc
mov
sahf
int3
add
add
pop
cmc
dec
jl
popa
cld
pop
lods
inc
rorl
mov
sub
aad
pop
ret
movb
push
inc
jnp
xor
jbe
cmp
fildll
adc
jg
mov
mov
pushf
add
sar
jne
sub
test
repz
adc
push
mov
rorb
lods
shlb
jno
sub
mov
in
outsb
aaa
int3
mov
jmp
cltd
fistps
ret
or
ret
cmpsb
sub
scas
in
imul
xchg
jo
ret
mov
mov
xchg
outsb
lds
cmpsl
pusha
pop
cs
pop
out
mov
cmp
add
xchg
out
pop
daa
aaa
xor
scas
ret
ret
mov
inc
push
fistpll
or
lods
inc
xor
loope
jecxz
jno
ret
mov
frndint
sbb
aad
mov
dec
push
inc
or
xlat
pop
stos
insb
add
cwtl
jmp
xchg
dec
insl
cmp
icebp
sbb
pop
movsl
cld
daa
cmpsb
roll
mov
jnp
inc
int3
jge
out
shll
sub
xchg
cmp
adc
test
mov
int
sti
shl
add
pop
jo
aas
movsl
lahf
addr16
jo
mov
push
mov
hlt
movsb
dec
bound
sbb
adc
cs
xchg
xchg
and
cmp
scas
jne
sbb
mov
push
dec
enter
add
ficomps
scas
xor
push
xor
or
es
scas
jl
movsb
shr
add
fcomp
adc
push
add
ret
push
in
add
cmp
pushf
ja
fcomi
push
insb
mov
xchg
push
pop
push
pop
sbb
test
push
and
cli
mov
daa
clc
cmpsl
sarl
mov
and
push
mov
cmpsb
mov
into
mov
mov
test
mov
or
outsl
pop
popa
xchg
mov
pop
js
outsb
push
mov
sahf
es
scas
mov
or
pop
jmp
lret
out
sub
pushf
lock
cmp
rolb
dec
jns
push
push
or
mov
fwait
insb
push
mov
xchg
pop
mov
pop
int3
mov
shl
rcr
test
ss
jp
mov
sbbb
inc
lods
mov
cs
add
xlat
repz
xchg
jp
out
mov
cmpb
cmpsl
dec
loop
jle
cmp
sub
mov
pusha
lea
iret
sbb
fwait
inc
popa
pop
jge
hlt
xchg
rep
add
popf
xor
cltd
xchg
xor
in
sub
inc
pop
fimuls
pop
ljmp
incb
leave
roll
fisubl
das
mov
outsl
xlat
rclb
adc
movsl
jnp
repnz
dec
in
xor
fmull
fildl
iret
mov
push
pop
pop
jne
into
xor
mov
scas
jnp
jl
notl
mov
sbb
leave
inc
ficompl
xchg
or
gs
mov
xor
outsb
dec
adc
lcall
rorl
leave
out
into
mov
push
add
lods
iret
mov
xor
cmc
nop
je
mov
jecxz
cmpsb
fsubs
add
push
fdiv
push
add
push
test
rol
mov
cltd
cwtl
leave
jae
je
lods
jp
in
cmpsb
loop
idivl
in
mov
into
mov
push
adc
nop
push
stos
xor
ficompl
pop
fst
mov
popf
mov
popf
pop
add
pop
outsl
sahf
jmp
mov
inc
cld
dec
add
xlat
into
das
inc
cmpsb
mov
sbb
jp
repz
sbb
aaa
add
inc
ja
add
divw
rorl
mov
clc
jae
inc
push
or
out
mov
mov
es
add
push
push
xchg
adc
insb
sbb
adc
pop
pusha
data16
mov
xchg
sbb
xorps
mov
jle
fiadds
push
imul
outsb
mov
mov
adc
adc
inc
dec
push
in
inc
in
pushl
sbb
xchg
outsl
inc
sti
call
mov
jg
dec
pop
push
pushf
pop
sub
push
or
inc
fbstp
mov
sbb
mov
test
jp
hlt
out
shrb
stos
adc
dec
inc
sub
xchg
inc
pusha
mov
fsubrs
mov
dec
xchg
inc
ljmp
ja
mov
movsl
add
int
in
fisttpll
jecxz
add
jo
vunpcklps
jno
test
sub
inc
in
mov
repnz
rclb
mov
inc
dec
cmp
jne,pn
mov
sbb
push
or
mov
or
cmp
int3
ret
sbb
xchg
cmp
add
idivl
cwtl
test
jmp
fdivl
fcomip
xchg
cmp
lret
push
loop
rorb
push
je
lret
mov
into
inc
mov
lret
loop
inc
pop
add
lods
cwtl
repz
cmc
mov
adc
push
mov
je
jp
lahf
xor
jno
jg
dec
inc
ds
loope
icebp
xchg
mov
into
aam
xchg
movsb
jo
push
pop
lret
push
enter
cmc
sbb
pop
ljmp
mov
dec
mov
jnp
jb
add
fstpl
push
mov
test
psubd
cwtl
jne
or
inc
cwtl
popf
cmp
testb
sub
ret
bound
pop
add
clc
stc
out
fs
pusha
into
sub
int
xchg
mov
dec
mov
mov
jb
mov
lock
and
es
mov
lock
bnd
cmpsl
out
mov
cmp
inc
into
cmp
les
test
jle
and
mov
aad
push
fs
sahf
sub
dec
inc
int
shlb
pop
mov
fcomps
push
adc
mov
xor
ljmp
xchg
fcmovne
xchg
mov
mov
push
jmp
inc
inc
lcall
scas
je
sbb
fdivrs
or
scas
cmpsb
mov
pop
rcll
pushf
ja
repz
push
daa
jbe
adc
dec
pand
repz
cmp
push
ret
xchg
adc
mov
lcall
test
jno
int3
fstpl
push
mov
test
stc
adc
or
pop
popf
push
adc
fisubrs
dec
pop
mov
iret
xlat
push
out
adc
cld
push
out
cmp
xorl
shrl
xor
movsb
cld
rorb
mov
mov
daa
lcall
hlt
test
mov
inc
int3
mov
roll
mov
lods
rorl
imul
icebp
pop
imul
dec
pushf
pusha
dec
sub
enter
in
rcrb
pop
pop
adc
out
or
inc
jne
dec
adc
scas
or
mov
call
pcmpeqb
js
ljmp
hlt
mov
sti
xchg
fmuls
faddl
cmpsl
sub
shll
fcompl
ret
lahf
out
sub
sub
jno
or
mov
xchg
sub
dec
pop
shlb
xchg
inc
cmp
pusha
mov
in
mov
sbb
or
mov
or
push
clc
es
clc
or
fadd
stc
cwtl
cmp
mov
sub
and
in
fcomps
fucomip
test
pop
adc
cmp
mov
pusha
xchg
cltd
test
cmp
cmp
cmp
or
dec
sub
lods
xchg
cmp
ds
repz
mulsd
xchg
mov
mov
test
xor
and
and
push
repnz
sub
lods
daa
mov
jl
imul
push
add
addr16
into
fcom
sub
out
inc
cmpsl
dec
insl
cld
mov
fldenv
std
movsb
dec
push
dec
inc
clc
loopne
or
xchg
sub
gs
in
sti
mov
rcrb
aaa
sbb
jmp
out
scas
mov
mov
xchg
fucomi
mov
frstor
dec
imul
repz
jge
pop
or
and
fwait
mov
js
into
in
ffreep
imul
inc
jp
lods
push
pop
adc
lock
mov
add
inc
sbb
push
mov
xor
cld
add
push
xchg
ss
cs
mov
push
dec
sarb
xchg
ja
lret
repz
fimuls
push
add
cmpb
push
pop
fs
or
pop
cs
mov
lcall
into
loope
mov
cmp
xchg
lret
adc
fists
inc
push
xchg
pop
push
cmp
pop
push
jno
adc
mov
or
outsl
mov
cmc
xchg
mov
dec
rol
add
adc
pop
adc
lds
jbe
loope
outsl
add
stos
and
xor
imul
hlt
adc
or
pop
mov
and
adc
lcall
loopne
les
clc
out
addb
aaa
lahf
mov
or
cmp
in
add
les
push
add
ret
mov
ljmp
jne
jecxz
mov
sub
in
pop
pop
jno
pop
ror
and
and
mov
cmp
lods
cmc
adc
ficoms
dec
bound
jno
xchg
inc
test
loope
dec
loop
fnstenv
mov
test
arpl
or
sbb
sub
cmp
movsb
fwait
popf
enter
inc
dec
push
cmp
xchg
jo
xchg
int
test
xchg
add
sub
mov
mov
sub
fstpl
movsl
jo
inc
jno
scas
jg
insb
ret
and
push
fs
mov
xor
mov
les
mov
jge
movsb
mov
mulb
imul
push
out
push
movsb
mov
outsl
and
outsb
jmp
ficomps
xor
cli
out
test
add
push
adc
jecxz
loope
out
push
push
xor
in
push
or
jecxz
bt
in
xchg
pushfw
cmp
call
insb
repz
mov
fbld
mov
repnz
sub
sbb
insl
sbb
aaa
xorl
out
pop
cld
inc
sbb
jge
icebp
or
jmp
andb
fdivs
mov
or
jo
imul
popa
or
adc
fldl
cmp
push
dec
cmp
pop
cli
sub
ficoms
dec
mov
jae,pt
lods
sub
fnsave
dec
aaa
lods
jns
and
sbbl
loopne,pn
stos
nop
mov
in
lock
fisubs
pop
push
fsubl
ljmp
gs
popf
pop
je
dec
icebp
jne
or
bound
addr16
arpl
xlat
cmp
push
or
lret
dec
jge
mov
mov
ret
sti
dec
add
cli
xchg
aam
bound
pop
imul
aad
sahf
push
sarb
mov
xchg
into
mov
stos
nop
sbbb
fdiv
imul
ja
stos
xorl
iret
shrl
fstpt
xor
pop
xchg
pop
std
in
js
std
push
fwait
xchg
inc
mov
and
sbb
mov
rclb
pop
push
adc
shlb
sbb
idivb
not
push
mov
movb
sub
push
aam
sbb
dec
cmp
int
mov
imul
mov
lds
dec
sub
cmp
inc
dec
or
int3
fidivs
iret
imul
dec
dec
xchg
aaa
lea
jo
loopne
xlat
ljmp
pop
sbb
dec
mov
nop
lret
leave
add
pop
cmc
in
lahf
jno
ficompl
rcl
dec
mov
ror
scas
and
pop
test
fucomi
jmp
cld
out
jmp
adc
cmp
sarl
mov
add
stos
pushf
dec
cmpb
ljmp
adcl
push
divl
jne
sub
push
adc
loope
dec
es
dec
jecxz
in
sub
mov
xchg
les
pop
dec
cmp
push
adc
jecxz
out
add
push
ret
xchg
sub
rorl
int3
mov
aam
dec
jl
and
or
xchg
add
dec
pop
in
imul
sub
jge
test
movsb
dec
and
jnp
add
pushf
adc
cmp
xchg
mov
iret
mov
xor
mov
idivb
and
std
fstpt
jns
push
movsl
adc
pop
xor
push
sbb
and
lret
lods
xlat
jl
and
jecxz
adc
fs
push
push
mov
sub
cmp
out
and
push
sbb
or
jle
es
xor
mov
iret
aad
fidivrs
adc
ret
xor
dec
pusha
repz
ret
mov
sbb
adc
movsb
mull
fcmove
pop
popf
outsb
lods
loop
out
sub
adc
or
adc
or
mov
push
jnp
lcall
js
and
jae,pn
jbe
jo
imul
and
fsubs
xchg
adc
xchg
sub
cwtl
outsl
fnstenv
lds
mov
lods
mov
scas
mov
insb
mov
add
pop
sahf
fimuls
adc
sub
in
stc
push
jno
jnp
sbb
ja
pop
jo
and
das
sbb
pusha
push
shll
and
push
sbb
xchg
imul
push
fistpl
dec
repnz
in
into
jg
cmpsl
jl
dec
dec
jns
sbb
fistl
xchg
hlt
popf
xchg
inc
push
adc
and
repz
mov
jae
aas
mov
pushf
jae
fildll
es
std
xor
push
cli
call
in
insb
jns
fsubrs
bound
dec
xor
mov
sub
ja
or
outsb
outsl
loop
popa
cld
in
pop
repnz
cmpsl
addr16
ja
mov
cwtl
out
out
xor
xorl
ret
ret
or
mov
mov
lcall
hlt
xorb
sarb
mov
into
jle
test
cmc
mov
sbb
pop
std
test
sbb
divl
shll
xchg
inc
xchg
mov
in
add
mov
gs
adc
mov
incb
out
dec
dec
push
or
ljmp
jl
cmp
call
jns
or
jo
inc
adc
mov
jecxz
ds
add
add
xor
dec
add
sahf
fsubl
fcomip
in
mov
pop
or
call
push
roll
sub
push
stos
mov
fcomi
enter
divl
dec
popf
adc
lcall
mov
shll
xchg
enter
mov
xchg
dec
les
cmp
je
aam
jns
or
lods
push
stos
insl
lods
in
adc
push
add
je
fs
adc
subb
int
xchg
inc
mov
int3
jge
and
mov
std
add
inc
mov
js
imul
or
sbb
jns
add
jnp
int3
pop
mov
popf
xchg
jl
test
cmp
and
test
ficompl
ja
sub
mov
xchg
test
lds
sub
scas
or
cld
pop
ja
sbb
lods
div
cltd
mov
cmpsb
aaa
cmp
cmp
xchg
andb
pop
mov
cltd
cmpsb
mov
adc
and
push
rolb
pop
scas
mov
sbb
int
popa
cmpb
xchg
icebp
push
push
sbb
jne
pop
sbb
pop
outsb
pop
cmovp
test
iret
mov
sbb
cmp
popa
push
xchg
fimull
mov
push
xor
mov
xor
add
loopne
stos
std
mov
pop
call
ret
pop
imul
and
cmpb
insb
adc
cltd
std
sub
out
movsb
or
loope
es
lret
or
das
xchg
pop
outsl
cmp
jle
call
and
iret
testl
jnp
lods
xchg
jp
sbb
dec
daa
rcrb
push
in
dec
dec
fdivl
cmp
rorb
lock
inc
sub
cmpsl
xor
inc
dec
jbe
icebp
push
mov
push
fnstenv
cld
cmc
stc
inc
cmp
pop
orl
dec
sbb
push
sbb
out
dec
or
negl
xchg
pop
movsb
push
jbe
les
in
cmp
mov
enter
xor
aaa
xor
testl
int
out
lds
adc
sub
xor
mov
daa
cmc
outsl
jbe
push
dec
das
pop
add
sarl
mov
mov
push
mov
adc
sbb
movsl
dec
xor
loope
push
mov
jmp
cmpsb
jb
mov
push
xchg
jno
mov
std
pop
xor
out
shlb
dec
jnp
and
and
mov
lds
xor
mov
aaa
call
aas
dec
cvtps2pd
arpl
ret
or
outsl
mov
lahf
rolb
lret
sbb
pop
je
out
aad
mov
rcrb
xor
cmp
ds
push
lock
adc
xchg
int
jnp
mov
mov
push
pop
xchg
xchg
mov
lea
fstpl
pop
aas
out
sbb
loope
ror
jb
lcall
dec
bound
int
outsl
loop
add
inc
jg
add
jne
loopne
lods
daa
jp
dec
in
push
push
add
aad
fisubs
out
or
push
out
mov
jmp
subb
pop
imul
fisttpll
rorl
scas
imul
mov
push
or
shll
loopne
add
add
or
inc
cli
adc
leave
lods
aad
xchg
pop
push
dec
mov
loop
sbb
addr16
dec
call
xor
jle
sub
jle
jle
dec
sbb
adc
jecxz
jae
xor
and
ret
ljmp
and
dec
or
inc
cmp
arpl
cli
lret
out
jbe
push
test
ficoml
pop
js
out
into
test
in
mov
fdivl
push
push
shll
int
addr16
jl
pop
pop
mov
sub
pusha
jns
add
adc
imul
xor
movsb
add
cld
in
into
in
mov
sub
push
fwait
adc
aam
stos
pushf
jmp
pop
inc
and
inc
es
push
ljmp
sbb
mov
add
jg
shll
pop
mov
and
outsl
orl
mov
xor
mov
fsubrp
mov
mov
out
outsb
mov
ret
adc
add
mov
mov
push
mov
cmp
and
call
mov
lret
xchg
imulb
ret
dec
mov
jbe
hlt
mov
adc
bound
xchg
or
lret
or
loope
push
fisubrl
aad
js
aad
aam
adc
ss
push
bound
xchg
pop
mov
mov
stos
fdivrp
pop
popa
outsb
jnp
repnz
aad
push
fcomp
lock
outsb
andb
jae
mov
clc
mov
scas
xchg
and
push
mov
cmp
dec
pop
ja
cli
xor
sub
xchg
mov
inc
inc
repz
jp
popf
mov
add
outsb
jl
dec
ficoms
dec
add
or
les
mov
pop
cmp
jge
test
add
rclb
lahf
inc
cwtl
jbe
and
xlat
fcmovnb
mov
shlb
sbbl
in
leave
jb
iret
mov
loope
addr16
cltd
hlt
int3
in
jnp
push
pop
sbb
test
inc
in
movsl
mov
hlt
test
pop
rcrb
pop
jge
or
mul
dec
push
in
ds
push
test
sbb
notb
inc
sti
icebp
xchg
fmull
bound
adc
ficompl
mov
mov
mov
mov
xchg
cli
cli
sti
notl
inc
aad
test
shrl
xor
sbbl
out
push
in
or
pop
jnp
adcb
mov
fs
xchg
mov
cs
and
leave
out
shrb
cwtl
and
aam
xchg
xchg
sbb
xor
pop
sti
int
test
dec
outsl
cld
jl
adc
mov
scas
call
inc
jne
ss
repz
mov
and
sbb
lret
xor
sub
jae
int3
rcll
mov
nop
cld
inc
mov
jns
add
lcall
xchg
and
ja
outsl
sarb
out
xor
adc
mov
jmp
ror
repz
cli
aaa
imulb
cmp
cs
or
jg
fistpl
adc
mov
std
lret
loop
out
imul
push
and
into
xor
xlat
je
push
push
loopne
inc
and
mov
idivb
jae
nop
jmp
xchg
xor
adc
dec
xchg
pusha
out
and
or
push
or
xchg
sub
fisttpl
mov
sbb
les
add
push
push
and
jge
and
mov
cmp
cld
and
jle
xor
inc
pop
pop
inc
cli
decb
add
adc
cli
insb
push
enter
adc
ljmp
xor
pop
push
testb
pop
test
popf
mov
jmp
cs
mov
xchg
rclb
add
push
pop
jp,pt
shl
or
stos
scas
or
xor
cmpsb
push
sub
icebp
pop
jmp
mov
lret
orl
fisubl
mov
cmp
push
push
sub
cltd
jae
or
loop
inc
in
xor
pop
mov
icebp
cmp
mov
pop
sbb
or
cmp
insb
ljmp
ret
mov
mov
mov
in
enter
mov
fldt
push
pop
mov
cmpsb
mov
jg
adc
pop
rorb
dec
call
jae
sbb
testb
inc
clc
arpl
sbb
ja
dec
movsl
pop
xor
pop
adc
in
add
int
xchg
addl
aaa
ret
lds
add
ffree
sub
push
xor
es
andl
bound
pop
xlat
or
cmc
or
jns
lods
adc
mov
sbb
pop
shrl
cmpsb
jge
sub
cld
int
cmp
sbb
call
mov
jne
sbb
dec
in
cmp
int3
adc
mov
xchg
mov
cmp
subb
stos
out
jnp
sbb
and
fwait
xchg
jno
lods
jne
in
or
cld
mov
cld
mov
arpl
aaa
das
ds
aaa
shr
dec
mov
cmp
xchg
or
mov
jb
inc
test
cs
in
mov
pop
faddl
pusha
mov
push
or
out
mov
add
mov
mov
sarb
pop
jmp
or
xchg
scas
mov
int
pop
lahf
hlt
push
push
ds
or
lods
cmpsb
not
dec
lds
iret
js
mov
jle
jbe
addb
xor
outsl
mov
fimuls
mov
xchg
pop
sub
stos
mov
or
add
cmc
out
sbb
fldl
and
sub
push
sub
mov
and
mov
mov
mov
push
popf
adc
fadds
dec
sbb
imul
push
dec
cmp
inc
cs
add
scas
idivl
cs
dec
mov
jp
jp
fnstenv
cmp
xchg
cmpsl
cmp
movsl
cmc
adc
inc
inc
jno
es
ja
xor
clc
arpl
test
and
push
stc
sub
fnstcw
pop
pop
xor
xchg
mov
lods
mov
jmp
int
movsb
lock
ret
bound
andl
adc
push
loope
jmp
in
ret
pop
push
fs
cmpsl
inc
and
icebp
les
xor
sti
test
lods
mov
push
sti
mov
xor
sbb
lods
push
rcrb
std
xor
int
dec
inc
cltd
push
mov
ret
mov
int
mov
incl
xor
pusha
fwait
lahf
in
xchg
scas
mov
mov
inc
ret
sbb
pushf
xor
inc
xchg
std
pop
mov
or
mov
sbb
jmp
inc
sahf
mov
rcrl
add
jno
lret
jnp
in
sbb
fcmovnu
mov
stos
mov
xor
in
or
xchg
jo
mov
ficompl
or
shrb
aam
inc
sub
or
aas
popa
arpl
adcb
inc
test
notl
cmc
sub
lcall
test
cmp
lock
pop
sti
jge
movsb
pusha
jns
mov
or
sti
sbb
fimull
stc
jmp
push
mov
inc
xor
loop
xor
mov
jecxz
xchg
and
sbb
pop
stos
testl
ficoml
pop
sub
push
dec
lret
loope
adc
push
adc
stos
pushf
adc
icebp
call
cwtl
pop
pushf
mov
lock
pusha
fidivrs
or
into
pushf
hlt
mov
xchg
inc
fbstp
lret
xor
cmpsl
mov
xchg
bound
xor
outsl
push
scas
leave
or
cltd
mov
adc
iret
loop
sub
sub
jb
movsl
add
ja
cmpb
mov
insl
adc
testb
and
sub
mov
cli
lods
mov
mov
xchg
jnp
pop
and
arpl
xchg
adc
mov
insb
je
addr16
mov
daa
lret
dec
mov
inc
movsb
mov
mov
cmpsb
addb
mov
lcall
and
sub
out
pop
cs
in
xor
jns
xor
in
xchg
jle
stos
mov
test
mov
push
addr16
cmc
jp
pop
ja
rol
int3
fisubrs
addr16
rcll
mov
mov
and
push
xor
rorb
incb
or
mov
cld
stos
jne
dec
in
jl
jl
xor
mov
aad
ljmp
ja
or
jmp
clc
cmp
mov
pop
and
mov
cli
add
cmp
mov
sub
mov
mov
pop
int
push
or
mov
gs
lods
ds
sbb
push
push
inc
xchg
push
out
fisubrs
or
cmp
pop
mov
jo
or
test
xor
aad
push
sbb
lahf
not
push
mov
lods
out
lahf
inc
out
cwtl
mov
dec
inc
popf
inc
jg
mov
add
push
jmp
movq
stos
stos
lret
dec
xchg
mov
mov
and
stc
mov
push
jl
movsb
xchg
enter
out
mov
iret
sbb
xchg
inc
out
mov
in
fildll
in
loope
lret
fadds
and
in
inc
and
xchg
push
jb
inc
mov
lcall
movq
test
inc
outsl
rcl
call
jnp
sub
or
mov
xchg
jb
cmp
or
je
test
sub
mov
cmp
mov
test
negl
rclb
lods
cmp
and
jae
jae
insl
in
lcall
push
aam
adc
int
mov
repnz
in
stos
mov
insb
and
adc
jmp
adc
add
cmp
add
mov
or
gs
decl
lret
in
insb
in
fisubs
es
repnz
push
dec
icebp
and
repnz
incl
movsb
insb
xchg
mov
in
movsl
ljmp
ja
cltd
mov
test
add
orl
jecxz
xor
or
xor
ljmp
fidivs
jnp
xchg
test
hlt
outsb
mov
stc
orb
iret
mov
dec
jbe
add
mov
sahf
lods
loop
xchg
jg
xor
int
cmpsl
and
or
mov
jnp
aaa
stc
push
les
fsubl
mov
add
aaa
repz
sbb
jns
test
lcall
in
out
call
scas
int
pushf
popf
jle
test
shll
mov
lret
push
xchg
rcl
sub
add
mov
addl
fstps
mov
mov
jne
rclb
sbb
or
test
lret
rolb
insb
adc
icebp
pop
dec
pop
cmp
xchg
mov
pop
and
cli
push
or
aas
mov
pop
xchg
mov
jae
orb
aaa
stc
mov
mov
popf
mov
jmp
stc
xlat
popf
sbb
int
into
lods
xchg
lods
mov
dec
lahf
xchg
stos
les
push
imul
jl
and
adc
jae
cmpb
add
mov
leave
pushf
sti
cmp
mov
das
insl
mov
pop
fs
lcall
pop
popa
pop
pop
adc
xor
xchg
jge
js
fs
jnp
divb
out
push
ljmp
lea
mov
pop
out
popa
jns
add
cld
inc
in
push
test
imul
addr16
mov
jle
adc
pusha
inc
dec
test
std
ret
sbb
sbb
loop
or
cmp
push
fistpl
adc
out
pop
std
push
aaa
dec
xchg
js
lcall
sub
push
out
dec
mov
out
push
arpl
mov
addl
pop
lods
inc
mov
das
test
stos
push
inc
pop
pop
aas
shl
mov
loope
cmp
sbb
mov
adc
leave
imul
fisttpl
arpl
cmpsl
imul
sub
cmp
bound
inc
mov
and
ss
mov
pop
or
imul
or
xor
cltd
cmp
inc
js
mov
mov
xor
dec
lds
cmc
or
in
xor
push
or
sarb
push
out
adc
jl
jmp
xor
or
jge
idiv
jne
sbb
adc
int
mov
add
mov
inc
enter
lret
sahf
test
icebp
fnstenv
in
or
pop
mov
and
idivl
push
push
or
adc
push
fidivs
jle
ljmp
dec
mov
dec
mov
insb
leave
maskmovq
negl
inc
push
mov
js
mov
or
mov
mov
lods
mov
in
int3
push
jbe
movsb
pop
stc
mov
inc
lea
das
cli
add
cld
scas
inc
add
iret
add
and
pop
xor
shl
push
lock
outsb
scas
icebp
and
jno
cmpl
hlt
mov
rcrl
mov
mov
cld
lods
add
das
push
xchg
add
add
xorl
daa
cmpsl
cmpsl
and
fstpl
jne
mov
arpl
into
sub
dec
add
cmpsl
cld
mov
into
jg
and
iret
shr
sub
and
sahf
fwait
je
scas
jae
add
stos
cmpsb
icebp
pop
sub
loope
test
aas
pop
imul
cmp
movsl
xchg
xlat
fdivr
loopne
cwtl
fdivrl
mov
dec
je
les
ret
icebp
jle
cmpsl
outsl
push
or
mov
idivb
std
mov
lret
repz
addl
flds
mov
xchg
insl
mov
and
iret
out
and
fists
in
dec
jl
roll
popf
dec
es
shlb
movsl
ret
and
insb
dec
inc
hlt
sub
inc
push
sub
or
gs
lcall
movsl
dec
in
mov
lret
sub
dec
jns
add
mov
push
jnp
icebp
adc
sbb
cmpsl
mov
in
inc
jge
dec
fsubrl
lea
arpl
loopne
sub
cmp
insl
loop
mov
add
mov
leave
pushf
lret
insl
in
adc
or
loope
in
jnp
int
and
xchg
mov
jl
mov
cmpsb
outsb
mov
xlat
dec
in
pop
lcall
ss
dec
adc
jns
xchg
mov
inc
mov
mov
pop
jnp
jae
or
sbb
test
iret
and
mov
fs
add
ret
call
add
mov
dec
jb
mov
pop
mov
in
mov
push
in
filds
iret
add
repz
daa
cltd
sub
pop
push
cmpsl
daa
add
jecxz
lock
adc
or
push
movsl
aas
push
adc
int
fmulp
shr
insl
add
or
inc
int
pop
daa
enter
mov
fstps
mov
push
mov
rolb
mov
shlb
test
bound
mov
or
pop
xor
xchg
push
sti
push
adc
dec
mov
in
pop
sti
ret
jne
addl
aaa
xor
adc
ja
adc
cmp
movsl
mov
jnp
cli
lock
mov
and
daa
and
ret
faddl
adc
lcall
shlb
shl
mov
jge
pop
push
dec
inc
jge
clc
out
xchg
sub
sahf
repz
push
xchg
or
mov
mov
push
bound
jle
sti
lret
sub
or
lock
sbb
push
adc
push
jae
push
or
int3
dec
pop
insl
aad
adc
sbb
and
xchg
sub
rcrb
fcom
and
push
hlt
xchg
inc
es
xor
mov
mov
sti
jno
pushf
sbb
scas
xchg
out
inc
ja
or
jl
push
loop
movsl
insb
push
test
test
fnstcw
jmp
cmp
div
lods
jo
lods
inc
push
push
jl
xchg
ljmpw
lods
enter
pop
mov
sbb
jnp
mov
rclb
mul
repnz
push
cmp
or
fldt
jl
cmc
jbe
mov
js
xor
iret
fcompl
mov
mov
lock
jnp
jle
dec
xchg
push
inc
outsb
fcoml
les
add
leave
loop
div
popf
adc
sbb
xchg
push
sub
int
and
jmp
adc
inc
push
movl
jae
lret
or
mov
xchg
pop
loopne
xchg
inc
push
negb
and
fcompl
mov
xlat
mov
ds
inc
jae
mov
icebp
aaa
fiaddl
inc
fildll
inc
add
jae
jg
and
jo
stos
jae
bound
mov
repnz
loop
je
loop
mov
test
nop
adc
add
insb
loop
cmp
sahf
mov
andl
addl
iret
xchg
mov
fmull
push
out
mov
lea
mov
or
sbb
or
cltd
outsb
cmp
xor
push
jl
sbb
loop
jb
xchg
rcll
cmp
inc
push
mov
push
shrl
ja
push
push
lock
pop
push
mov
lock
add
push
dec
or
lcall
imul
cmpsl
cli
in
js
or
inc
cmp
fisubrs
je
faddl
mov
sti
push
adc
xchg
mov
mov
jmp
push
rep
aad
pop
and
pop
xor
jb
lock
dec
in
orl
cs
mov
iret
dec
dec
push
mov
xor
inc
add
rcl
bts
or
in
mov
inc
jle
and
fsubr
stos
inc
popf
in
inc
sub
cmp
or
loop
mov
lcall
sbb
pop
mov
lahf
add
xor
lds
adc
scas
jbe
hlt
inc
sbb
lods
int3
nop
ret
or
aam
test
sub
insl
scas
arpl
ja
dec
call
dec
push
leave
stc
xchg
add
cmp
jmp
mov
and
hlt
sti
push
mov
test
fidivrl
and
inc
lret
jae
and
imul
stc
lret
imul
into
shlb
cwtl
fistps
xor
xchg
rclb
push
test
or
sub
xor
mov
dec
addr16
and
xchg
mov
aad
add
aas
arpl
inc
sub
cmp
pop
sub
cmp
out
mov
add
or
mov
sub
into
stc
sbb
scas
daa
in
test
scas
jmp
hlt
and
movsl
popa
add
hlt
pcmpeqb
repz
xor
in
cmc
lcall
cmp
cmc
mulb
bnd
fnstenv
mov
mov
adc
imul
lahf
dec
inc
dec
cld
jno
jmp
inc
push
es
rorb
jle
fwait
add
mov
mov
adc
cmpsl
int3
sahf
or
mov
add
in
adc
jns
dec
int
fcmovbe
rcll
dec
pop
add
jnp
cmpsb
adc
arpl
mov
inc
dec
dec
fildll
jmp
movsb
loope
push
pop
aaa
les
out
cmpl
es
lock
and
arpl
frstor
dec
xor
push
insl
adc
dec
pop
lret
in
mov
add
int3
cmp
popf
daa
fidivs
jbe
int3
imull
inc
test
sub
aam
out
jo
sbb
adc
loop
xchg
hlt
xchg
hlt
mov
aas
in
scas
rol
out
or
inc
scas
popl
data16
inc
push
sbb
jo
dec
jl
dec
push
ljmp
int3
lret
sub
loope
mov
jecxz
int
stos
and
fwait
testl
insl
inc
push
rol
jo
lea
mov
jae
nop
cmp
movsl
add
jb
mov
push
mov
data16
push
mov
push
in
sub
mov
cmc
iret
mov
arpl
sbb
rcll
negb
lret
fidivrs
mov
jno
test
cli
jae
jne
js
fbld
test
mov
or
and
test
inc
push
std
cld
dec
jmp
je
cmc
cmp
push
popf
push
and
ds
pop
or
add
sbbl
fdivrl
jo
aam
mov
mov
and
leave
mov
mov
jmp
jo
push
in
add
xchg
ss
push
fistpll
loope
jle
jbe
fiaddl
sbb
out
xor
inc
push
cmp
and
in
test
aad
loope
int3
xor
pop
ret
fcomi
mov
daa
add
xchg
rorl
cmp
dec
sbb
mov
out
jmp
add
xchg
lret
int
adc
data16
les
xor
dec
cmp
add
or
filds
aam
ja
addl
and
or
mov
jo
int
cmovs
stos
xchg
push
or
and
ja
sub
or
cmp
adc
clc
sub
dec
mov
jb
sbb
scas
sbb
or
mov
outsl
dec
dec
in
xchg
mov
jns
repnz
jb
ss
cltd
xchg
adc
in
aad
sub
add
pop
mov
enter
cmp
cmpsb
fwait
movnti
jmp
fdivl
hlt
and
jb
xor
out
sbb
fldcw
js
insb
ljmp
inc
mov
jns
dec
leave
push
or
mov
adc
xor
pushf
lods
sbb
out
int3
jp
sbb
loopne
gs
mov
scas
mov
pop
push
push
mov
push
push
adc
cmp
mov
fldt
pop
pop
jne
pop
jg
xchg
sbb
mov
sub
test
xchg
lock
adc
das
cmp
divb
bound
stos
popf
stos
cli
aas
ficoml
sub
orl
ljmp
mov
jmp
dec
push
dec
xor
mov
int3
dec
addr16
outsl
pop
cmp
stos
push
insl
mov
rcrl
imul
sbb
sahf
mov
mov
iret
sbb
stc
adcb
pop
out
mov
jbe
xor
sbb
jb
add
mov
sti
mov
movsb
mov
jge
testl
mov
mov
cmp
test
inc
out
jno
xchg
push
ja
sbb
hlt
jo
sarl
dec
or
lret
enter
lock
xchg
inc
sarb
fidivl
xchg
mov
imul
jmp
fdiv
idivb
xchg
mov
inc
popa
inc
cmp
jmp
outsl
movsb
jle
out
clc
in
nop
pop
mov
xor
mov
arpl
dec
adc
mov
iret
inc
mov
dec
mov
sbb
dec
cmpsl
jb
push
mov
pushf
scas
mov
shl
or
fstpt
jae
lods
mov
call
or
add
sbb
xor
gs
imul
aad
xchg
and
cmp
fadds
into
sbb
dec
adc
ret
dec
cmpb
inc
in
jmp
aaa
stos
dec
arpl
jecxz
cwtl
and
inc
push
jecxz
dec
add
mov
ss
adc
pushf
mov
jge
xlat
adc
sbbb
xor
icebp
adc
lods
sbb
in
stos
movsl
cmp
pop
outsb
scas
inc
mov
mov
push
cmp
add
dec
andb
lcall
add
mov
lahf
call
push
xor
popa
push
cmp
jl
jl
mov
push
push
pop
inc
cli
outsb
cltd
lods
mov
xor
cmp
mov
in
test
fdivs
lret
rcrb
pusha
adc
in
and
outsb
xor
fwait
nop
addl
mov
xlat
mov
frstor
sub
fisubs
xor
cltd
outsb
in
push
cmp
popf
in
mov
sbb
int3
mov
scas
std
pop
lahf
ss
push
mov
inc
test
je
inc
shlb
adc
das
aas
xchg
stc
dec
mov
cld
xor
inc
adc
add
dec
jb
test
roll
pop
cmpsl
push
jnp
inc
fdivs
xorl
shrb
ja
ss
push
sbb
xchg
xchg
jg
mov
iret
pop
dec
add
dec
shrb
cmc
sub
push
lahf
adc
mov
inc
sbb
aam
push
addr16
cmp
mov
outsb
sub
adc
xchg
sbb
jo
xchg
mov
or
dec
or
stos
or
jmp
idiv
xor
inc
dec
lea
sbb
nop
addb
imul
xor
jg
fistps
mov
mov
outsb
xlat
push
lret
inc
adc
xorl
rcll
sub
mov
call
mov
jmp
cmp
and
inc
adc
imulb
int3
cmpsl
movsl
jae
test
sahf
arpl
insl
inc
mov
push
and
repnz
dec
jecxz
add
sub
into
pop
clc
mov
scas
in
mov
adc
pop
jb
aam
lods
rorl
adc
nop
icebp
push
data16
outsb
sti
std
mov
mov
xchg
jno
in
push
test
dec
cmova
notb
ja
pop
xor
dec
mov
add
addl
loope
adc
pop
mov
rorb
ret
dec
push
mov
pop
in
repz
insl
outsl
idivl
bound
xchg
pushf
aam
ss
leave
mov
mov
push
test
popf
lea
insl
ja
in
and
inc
jb
pop
rcl
push
orl
push
add
fisubrl
enter
jmp
push
xor
push
xor
mov
ja
mov
cmp
xchg
cld
inc
not
jle
insl
push
xchg
insl
pusha
jns
cmp
sbb
xlat
nop
add
xor
hlt
add
sub
cmp
jge
clc
testl
cs
inc
movsb
cmpsb
inc
cmp
fidivs
add
mov
jnp
cmp
cmp
dec
pop
imul
popf
mov
or
jp
fistl
les
test
add
out
fidivrl
sub
rolb
ret
sbb
sahf
jle
mov
dec
int3
or
in
jle
xchg
cmp
push
test
outsb
daa
outsb
js
pop
add
push
lea
sbb
xchg
mov
outsl
insb
cltd
adc
push
mov
lock
pop
int
mov
fnstsw
push
adc
push
leave
jnp
and
imul
jp
add
push
imul
mov
mov
in
in
dec
arpl
mov
das
jo
sbb
testb
mov
clc
push
dec
jmp
enter
ret
iret
pop
add
imul
test
mov
out
movsb
mov
adc
les
xchg
jecxz
push
xchg
or
dec
aad
mov
sub
mov
and
and
mov
pop
mov
clc
mov
push
in
sub
xchg
out
in
jb
pop
lret
push
push
mov
or
out
jp
cmc
push
popf
adc
cli
mov
dec
xor
push
sub
sub
imul
sti
movsb
inc
icebp
cmp
popa
dec
sahf
or
cld
pop
out
jbe
out
lea
movsb
or
push
xchg
or
mov
add
pop
aam
jnp
scas
ret
fimull
push
lret
xchg
stos
xchg
popa
stos
fisttps
jmp
movsl
add
sub
or
push
in
jge
int3
aaa
push
pop
int
dec
iret
cltd
jmp
je
adc
inc
movsl
mov
stc
fistps
or
jp
jp
clc
inc
andl
add
pop
dec
pushf
jmp
mov
inc
shll
ljmp
push
jae
out
cmc
int
std
push
outsl
xor
lods
xchg
xchg
cmp
orl
add
sbb
and
ret
xchg
loop
or
es
jns
xchg
adc
pop
shrb
cmp
cmp
push
repnz
or
fsubrp
mov
xor
pop
fstpt
pushf
mov
test
or
ds
adc
cmpsb
lds
or
sub
jae
mov
mov
xchg
int3
cs
addr16
mov
xor
pop
into
sbb
stc
in
xor
jae
or
pop
mov
add
adc
mov
lret
sub
push
in
fdiv
rcll
mov
pop
dec
mov
sti
push
clc
mov
sahf
bound
mov
in
jecxz
fistl
mov
fwait
or
push
push
dec
inc
mov
shlb
jns
movb
sbbb
ret
mov
and
mov
inc
push
jg
dec
jno
and
cmp
inc
in
mov
lods
unpckhps
add
inc
jmp
adc
in
call
outsb
inc
scas
jbe
or
dec
mov
mulb
imul
jno
out
jge
out
jg
or
mov
jbe
cmp
xchg
sbb
mov
xlat
fcomp
and
repnz
inc
sahf
or
mov
pushf
mov
out
jae
mov
fs
add
lret
cmp
fldcw
mov
out
shll
xor
dec
mov
shr
subl
lds
lds
lods
icebp
stos
dec
jb
push
cwtl
push
mov
sub
xchg
out
xor
loop
test
push
insb
sti
into
idivl
lcall
xchg
test
mov
test
popf
lahf
movsb
cs
loopne
inc
mov
lds
push
add
arpl
mov
mov
popf
shll
fimuls
mov
popf
cmp
imul
pop
mov
aaa
movsb
sbb
add
fbld
mov
jmp
sbb
xchg
js
add
mov
in
sub
mov
jo
jmp
call
sbb
cvtps2pi
divb
mov
out
jl
daa
data16
rclb
imul
stos
xchg
insl
mov
xor
daa
scas
call
sbb
jg
nop
jmp
andl
cmc
nop
jb
mov
mov
arpl
push
cmc
shlb
inc
jae
push
in
mov
cmp
inc
lcall
loopne
adc
xlat
shl
cwtl
push
dec
sbb
shr
imul
inc
jb
rcrb
call
flds
clc
sbb
mov
xchg
in
rorl
rorb
push
mov
xlat
cmp
icebp
fimull
mov
cmp
out
mov
jnp
mov
std
out
mov
pusha
call
jns
xor
xlat
dec
and
pop
addr16
push
push
mov
pop
leave
jmp
in
xchg
and
je
mov
mov
cwtl
or
ljmp
popf
decb
sti
sub
pop
sub
popa
sbb
push
mov
shlb
push
repnz
je
fwait
lods
push
mov
sbbl
out
jecxz
out
mov
add
jg
int3
pop
add
push
stc
xlat
mov
mov
inc
dec
jnp
mov
in
es
int3
rcl
adc
fisttps
inc
and
dec
sbb
daa
shr
dec
aad
cmpsl
pop
push
pop
and
sarl
popf
pop
add
lcall
xor
cmpsb
dec
pop
jns
in
mov
roll
shl
imul
repz
xchg
lret
sub
push
dec
imul
dec
xchg
ficoml
adc
push
mov
jmp
adcb
xlat
iret
sarb
push
dec
inc
mov
lds
cld
hlt
xor
pop
out
xor
adc
mov
iret
jl
push
pop
mov
inc
scas
add
addr16
mov
orb
es
jbe
push
movsb
das
sti
cmc
mov
inc
cs
notl
mov
arpl
push
mov
adc
mov
movsl
push
cmpsl
into
dec
inc
adc
shrb
pusha
pop
pop
or
in
test
dec
int
add
or
sub
or
add
pusha
add
rorl
inc
push
lds
ror
lcall
fdivrl
sbb
sbb
sbbb
lahf
pop
into
pop
or
lret
stc
push
adc
mov
jp
insl
fbld
mov
or
enter
movsb
push
adc
sub
js
jp
push
dec
xlat
or
cmpsl
inc
addr16
mov
add
in
jmp
xchg
inc
out
add
adc
xchg
or
les
xchg
inc
cli
test
enter
push
scas
push
xchg
dec
inc
out
xlat
mov
and
push
xchg
jnp
jbe
daa
mov
push
push
inc
std
inc
movsl
cmp
lcall
cmpsb
cld
pop
dec
inc
jns
sub
push
lret
das
das
clc
mov
jns
mov
sbb
pop
or
xorl
into
mov
and
enter
sbb
push
push
lcall
imul
xlat
gs
js
xchg
ret
out
subb
push
sbb
jmp
lock
push
dec
insb
std
sub
xor
fwait
outsl
pop
xor
lret
bound
hlt
push
or
js
lcall
pop
mov
mov
add
xchg
jb
or
push
jb
adc
add
enter
xchg
pop
lret
fstps
adc
cwtl
pop
jae
xor
divb
out
pop
mov
and
and
mov
cmpsl
imul
pop
and
dec
xor
xor
into
inc
shrb
les
sbb
cmp
push
adc
xor
addl
xor
push
stos
adc
xor
daa
push
das
add
cmp
cmp
cmp
xlat
adc
aaa
cltd
stc
std
inc
rcrl
push
adc
rorb
xchg
jbe
daa
ret
test
pop
adc
cld
and
aas
pop
mov
jae
adc
scas
pop
pop
jne
movsb
ja
std
repnz
aas
dec
mov
cmpsb
jae
sub
repnz
cmp
fs
push
dec
jo
cmp
mov
out
xor
popf
sub
cli
leave
adc
mov
or
xchg
call
mov
jg
adc
out
xchg
sub
dec
imul
cmpsb
push
jge
es
lret
xchg
jae
xchg
xchg
push
fildll
aad
cmp
dec
jl
mov
fwait
js
daa
lds
or
test
dec
dec
dec
mov
cltd
xlat
pushw
cli
pop
sti
inc
cld
and
xor
mov
mov
js
les
ljmp
dec
adc
and
sti
jno
xchg
daa
xchg
and
rcrb
out
in
mov
inc
jb
shrb
in
mov
pop
sbb
addb
nop
insb
push
push
loope
scas
scas
inc
xor
icebp
loop
rorb
mov
dec
mov
and
test
js
push
or
js
nop
push
gs
push
mov
std
push
sbb
bound
addr16
fcom
mov
lea
nop
xchg
pop
cmp
push
pop
dec
loope
out
jb
inc
xchg
ret
mov
std
test
imul
xlat
push
push
ljmp
lods
pop
arpl
cmpsl
cmc
jb
sub
shl
outsb
aad
push
lret
into
pop
sarl
sbb
push
je
int
cmpsb
add
sub
call
or
loop
cli
xchg
iret
cmc
shlb
jnp
and
mov
or
cmp
push
mov
js
mov
inc
dec
subl
ret
adc
pushf
nop
xchg
shll
inc
lock
xchg
lods
arpl
push
je
lds
adc
xor
jnp
adc
aaa
sub
mov
sub
or
mov
adc
fcmovne
imul
adc
xchg
pop
mov
xchg
lgs
pop
data16
mov
jle
dec
jb
sbb
push
adc
pop
inc
clc
cli
and
pop
lods
cmp
sub
pushf
insl
jg
int3
imul
pop
adc
test
fwait
dec
fmuls
mov
std
out
cmp
push
psllw
or
aad
and
inc
addb
or
push
mov
xor
jecxz
sahf
mov
or
push
dec
add
loope
rclb
sbb
das
and
xchg
adc
ja
aas
adc
jge
aad
mov
adc
iret
xchg
out
sub
pop
lods
mov
stos
cmp
inc
inc
std
cmp
cs
lahf
jnp
mov
dec
pushf
or
hlt
insl
xor
cli
negb
mov
and
dec
sahf
sub
repz
and
lahf
test
xacquire
mov
daa
js
sbb
xor
xchg
popf
mov
cs
mov
test
out
nop
jne
mov
inc
mov
mov
xchg
scas
mov
fsubrl
jne
outsl
lahf
pushw
roll
cs
and
pop
inc
mov
lea
cmp
repz
in
mov
mov
or
adc
int
repnz
add
xor
ret
add
sahf
cmpsb
imul
das
enter
fisttpll
jb
xchg
insb
test
testb
sti
ds
xchg
push
inc
js
stc
in
sbbl
daa
sub
lret
mov
xlat
movsl
sbb
or
repnz
in
into
pop
aam
push
dec
inc
and
jecxz
ret
lock
jae
loope
daa
push
lcall
hlt
dec
in
xlat
jl
push
dec
jp
aad
fnsave
insb
cmp
dec
clc
pop
sub
adc
movsl
inc
shl
test
cwtl
jbe
and
aaa
push
fwait
mov
pop
arpl
aas
dec
jmp
jp
add
xchg
outsl
mov
decb
adc
movsb
insl
or
and
xchg
jecxz
mov
mov
int3
loopne
pop
push
mov
leave
and
adc
js
push
sti
xchg
clc
outsl
sub
xchg
push
xor
out
ret
pop
cli
cmpsl
test
mov
ficoml
call
adc
andb
leave
leave
xchg
mov
inc
lods
mov
test
add
imul
cld
cmp
sbb
insl
repz
jecxz
fwait
in
inc
fistpll
les
ret
outsl
or
add
jl
lods
ret
movsb
mov
pop
push
push
pop
dec
mov
dec
test
sub
mov
rorl
push
jb
pop
cmp
in
mov
rolb
dec
addl
push
and
fldenv
sahf
xchg
mov
notb
fists
and
ds
jle
scas
out
mov
daa
add
lds
dec
mov
jae
lcall
mov
dec
xchg
in
scas
cmp
or
xchg
int3
in
ret
sbb
fsubs
xor
mov
mov
add
stos
lret
scas
or
rcll
and
mov
xchg
int
pop
mov
stos
sub
nop
cmp
xchg
pop
out
das
pushf
fstps
push
push
sbb
loope
stc
leave
add
je
aas
xor
movl
orb
xor
jge
add
in
into
push
mov
in
or
xchg
mov
adc
xchg
repnz
fdivrs
fsubrl
bound
sbb
je
pushf
dec
lods
jl
inc
dec
sbb
mov
outsb
inc
mov
pop
sahf
jno
xchg
dec
scas
mov
loopne
and
mov
out
cmp
xor
repnz
daa
sub
xchg
and
mov
cmp
jae
xor
inc
sub
out
push
outsb
adc
add
inc
test
push
ja
out
pop
shlb
sti
mov
push
pop
sub
jae
outsl
push
xor
lds
rolb
iret
push
cmp
push
push
rorb
mov
cld
aaa
or
test
aam
repz
add
push
addr16
cld
sar
push
scas
push
or
jne
jmp
mov
cs
popa
xchg
add
subb
xcrypt-ecb
cmpsl
or
sub
div
pop
cld
ljmp
adc
movsl
imul
lret
dec
xlat
test
arpl
lahf
outsl
test
sbb
mov
and
mov
int3
mov
pop
dec
xorb
scas
ljmp
and
inc
cmpsl
aad
jmp
pop
push
mov
lcall
lahf
or
stos
sub
gs
mov
lods
rolb
std
sub
sub
cmc
sbb
add
fisubs
outsb
lds
sti
or
inc
or
xor
pop
sbb
arpl
jb
add
mov
and
pop
loope
mov
lahf
call
in
mov
inc
xchg
out
stos
jne
lods
adc
dec
shrb
outsl
lret
fwait
pushf
out
sbb
daa
fs
out
push
adc
add
pop
xchg
jns
cli
dec
and
pushf
icebp
pusha
inc
sub
pusha
fldenv
pop
xchg
xchg
fcmovb
fwait
test
jge
xor
xchg
push
arpl
loop
sbb
cmpsl
test
cmp
roll
loopne
sarb
xchg
shrb
sarb
cmc
push
std
ja
mov
lret
mov
pop
mov
movsl
add
mov
fsub
jmp
out
repnz
shrb
mov
xchg
mov
sub
add
xor
pop
in
xchg
insl
inc
mov
mov
fmuls
frstor
cmpsb
inc
push
mov
xor
lahf
dec
rcl
pop
mov
leave
and
aas
inc
dec
or
fsubrs
jmp
xor
imul
xchg
shll
or
andb
decl
jmp
outsb
cmp
or
dec
fcoml
or
cmpsl
outsl
push
movq
sarl
icebp
mov
push
decl
jnp
push
cltd
mov
push
jl
stos
test
sahf
sbb
imulb
xchg
ret
cmp
inc
aas
repz
push
cli
aam
push
sti
adc
imulb
ret
push
flds
pop
sub
out
push
cmp
push
fwait
adc
jl
aaa
pop
mov
arpl
push
sahf
mov
in
outsl
imul
or
xchg
push
loopne
mov
pushf
xor
fisttps
loopne
inc
in
xchg
es
adc
dec
mov
xchg
jecxz
mov
fmull
push
test
jno
or
enter
scas
lds
sti
add
iret
adc
and
lcall
mov
jg
cltd
stc
jo
mov
mov
shll
cmp
inc
push
loopne
cs
cmpsl
push
enter
movsl
mov
or
or
add
es
test
and
mov
stc
int3
or
lahf
push
in
sbb
mov
out
std
out
enter
or
ja
loope
push
sti
adc
dec
jns
in
xor
inc
mov
pop
fiadds
bound
out
pop
mov
nop
fsts
fsts
pop
out
test
or
cli
push
inc
xchg
inc
and
mov
fwait
ss
xor
pop
test
cmp
dec
sbb
or
sub
mov
iret
dec
pop
sar
mov
in
movsl
add
cmp
out
enter
jge
mov
mov
mov
and
ss
ljmp
push
repz
mov
subb
jno
xchg
cmc
add
mulb
hlt
cmpb
std
sbbb
fisttps
dec
sahf
je
cmp
bound
dec
sub
cs
dec
xchg
test
push
ds
mov
pop
outsb
aam
xlat
sbb
sti
push
mov
bound
sahf
mov
repnz
insl
je
sbb
sub
pop
rorb
arpl
mov
mov
shr
xor
call
sub
in
sub
or
and
xor
jp
xor
cwtl
outsb
mov
insb
in
push
scas
sub
xlat
sti
lcall
les
inc
or
or
or
push
adc
repz
xchg
mov
aad
incl
inc
jmp
fiaddl
mov
sub
hlt
ret
adc
add
int
add
sbb
mov
dec
sti
fisubrl
imul
sbb
push
in
repnz
ret
das
fidivs
iret
test
push
cmp
into
imul
add
nop
mov
in
jb
popa
mov
es
cmp
shlb
inc
push
cmpsl
je
and
test
dec
pop
jg
pushf
sub
jns
jmp
imul
dec
cmp
ja
addr16
add
in
cs
jmp
clc
adc
push
jge
adc
ss
jp
or
pusha
push
bound
add
adc
inc
ljmp
jle
pushf
xchg
pop
lret
jo
iret
sub
jb
add
push
add
movsl
int3
call
in
daa
xchg
pop
das
gs
xor
inc
jno
push
aam
jo
mov
out
mov
cld
test
insl
es
out
nop
pcmpgtb
shll
std
in
pop
scas
loope
test
repz
jno
push
or
mov
sbb
push
cld
adc
sub
repz
movsb
mov
mulb
jge
jo
inc
stos
mov
gs
dec
roll
lods
push
imul
fimuls
and
xchg
push
in
mov
or
jne
fiaddl
xchg
or
mulb
pop
mov
lods
mov
pop
outsl
mov
mov
jno
inc
iret
clc
and
in
pop
hlt
and
push
mov
mov
xor
call
xchg
bound
mov
lock
movsl
jmp
adc
push
in
jns
es
xchg
push
in
push
in
sbb
jbe
aas
or
mov
or
mov
pop
lods
pop
iret
jl
adc
stos
cmp
xor
cmp
lds
sti
sahf
and
push
dec
hlt
sbbb
mov
pop
xchg
shl
or
into
pushf
stos
pop
adc
push
stos
adc
sub
sub
inc
rorb
jo
movl
lcall
xchg
iret
les
adc
jle
dec
gs
call
fdivrl
arpl
notl
mov
mov
sbb
xor
popf
jmp
adc
hlt
jl
idivl
jns
cs
sub
lds
aad
adc
or
out
and
sub
jae
inc
iret
adc
cli
xchg
in
cmp
jl
and
inc
mov
xchg
sbb
mov
jmp
cmp
lock
push
jb
push
cmp
lds
ficomps
push
fsubl
inc
dec
aad
loop
jg
or
lret
xor
sbb
jp
pop
add
or
mov
test
mov
jecxz
mov
aam
sbb
sar
add
pop
sub
sbb
popa
mov
xchg
push
mov
out
mov
call
pop
xchg
xchg
pop
test
xchg
stos
mov
inc
int3
lret
insl
loope
mov
and
je
insb
pop
fmulp
cwtl
cmp
lods
mov
sub
mov
hlt
stc
mov
mov
fs
jnp
out
add
popf
lock
cmc
fninit
leave
testb
scas
imul
fs
adc
cmc
sub
into
int3
mov
hlt
xchg
and
cltd
or
lods
xchg
xor
mov
xor
push
xchg
jnp
push
shll
adc
pop
mulb
inc
add
fldt
push
inc
lret
adc
mov
cmpsl
scas
orb
gs
hlt
dec
push
dec
repz
and
cs
jbe
add
call
repnz
dec
pop
jmp
nop
inc
xchg
inc
filds
push
or
jb
mov
in
sub
mov
xor
pop
subb
pop
pop
decb
hlt
push
mov
dec
cmpsl
out
ja
jmp
dec
leave
insb
fstpt
subb
test
mov
xchg
cwtl
lock
add
push
cmc
movsb
cwtl
in
xor
adc
je
fistl
inc
sbb
adc
int3
enter
add
inc
in
inc
clc
and
pushf
fcmovu
inc
arpl
sarl
cmpsb
arpl
adc
jmp
test
in
pop
shlb
sbb
mov
lret
sub
jg
inc
jae
out
add
add
ljmp
mov
pop
out
call
and
or
jmp
xchg
cmp
in
pop
les
xchg
or
insb
pop
xchg
xchg
mov
fs
add
pop
dec
inc
in
int
icebp
and
bound
scas
cmp
bound
mov
dec
es
lock
leave
cmp
mov
mov
cmp
mov
leave
popf
adc
fists
das
sub
dec
or
push
xchg
aas
jb
xchg
pop
jne
movsl
pop
cli
cmp
dec
in
sbb
jb
inc
add
test
push
push
out
jns
sbb
fcom
stos
push
mov
xor
loop
mov
sbb
cs
jecxz
mov
jmp
cwtl
xor
imul
int
scas
xor
pop
sbb
xor
cmp
ficoms
pop
mov
je
xchg
cltd
scas
icebp
test
mov
inc
loop
daa
sbb
xor
inc
push
pop
in
bound
mov
scas
iret
ret
push
xorb
aaa
aas
adc
jne
ljmp
movsb
shrl
push
push
mov
idivb
mov
cmc
andl
mull
inc
test
dec
cs
cltd
mov
popa
inc
pop
wrmsr
jno
in
stos
hlt
push
jecxz
sarb
fs
ss
push
push
fidivl
ficomps
sahf
shl
or
popa
jo
ja
and
adc
out
pop
mov
xchg
push
mov
jmp
mov
out
fs
aad
arpl
dec
icebp
aam
aam
outsb
jnp
pop
pop
mov
pop
sub
mov
xchg
das
sub
push
mov
movsl
in
mov
inc
rcll
pop
sub
clc
dec
jp
or
data16
mov
mov
sub
out
xlat
jp
mov
call
adc
cs
out
add
call
in
dec
test
dec
test
ljmp
dec
int
mov
rcr
sub
lods
notb
cmpsl
les
jnp
sbb
adcb
push
ficompl
nop
jmp
jg
fdivrp
dec
sbb
stc
jmp
sub
add
xor
xchg
les
dec
push
inc
xchg
or
in
jns
shlb
adc
jle
pushf
jno
xlat
add
cmpsl
popf
es
lods
jl
fimull
into
sub
pop
imul
push
add
cmc
or
mov
or
xchg
inc
or
fisubrl
xor
push
jbe
dec
test
inc
or
sub
mov
inc
in
push
ds
scas
jl
outsl
and
lahf
insl
jg
or
xor
repz
dec
lock
cli
jno
in
and
mov
cld
pop
push
mov
jne
mov
mov
push
sbb
adc
lds
paddusb
xchg
jno
adc
adc
push
push
pop
jne
fildll
xchg
icebp
pop
cmp
lods
lahf
ljmp
loopne
mov
inc
cs
pop
add
lds
sbb
fists
leave
movsb
push
into
mov
or
inc
mov
icebp
and
rol
or
pop
push
pop
hlt
out
in
dec
aam
push
js
add
scas
inc
dec
cmp
imul
xchg
and
pop
jl
mov
into
jmp
lret
and
cmc
ljmp
les
cwtl
pusha
shlb
pop
cmp
mov
in
dec
pop
push
push
cmpsb
xlat
jp
sbbl
inc
mov
xchg
pop
dec
hlt
out
fs
insb
jecxz
out
es
test
rorl
das
jmp
xchg
data16
aas
xor
hlt
sub
cld
push
xor
loopne
mov
push
xchg
test
cltd
push
imul
inc
rcrl
push
shrb
aas
push
jb
out
cmp
or
and
data16
into
pushf
inc
insl
addr16
jecxz
lods
mov
cmp
mov
and
push
pop
iret
stos
dec
std
cltd
in
mov
movsl
imul
fwait
pop
adc
jmp
pop
std
popl
dec
xchg
push
das
mov
sub
addr16
shlb
ljmp
adc
mov
adc
and
insl
pop
push
lods
inc
inc
sub
cmp
cmp
ret
dec
inc
pop
outsl
cmp
mov
imul
sahf
movsl
fisttpl
sub
out
sbb
pushf
mov
leave
sub
push
fwait
test
cmp
sbb
adc
mov
xchg
jb
lsl
mov
jns
mov
or
js
arpl
pop
popf
add
inc
lcall
pop
inc
scas
sbb
stos
push
adc
ds
fidivrl
std
pop
mov
std
mov
cwtl
push
fldl
pushf
push
cmp
push
pop
std
mov
fidivs
pop
imul
add
sahf
push
cltd
sub
mov
cmc
push
scas
add
outsl
or
pop
out
add
xlat
sub
outsl
adc
inc
push
mov
idivl
insl
jns
xor
cmpsb
jecxz
cwtl
and
and
in
xor
pop
lret
inc
fsts
mov
lret
or
pop
adc
je
scas
sub
jnp
push
ljmp
mov
loop
cli
sbb
sbb
pop
outsb
inc
fs
jmp
mov
jno
mov
mov
sbb
insb
sbb
mov
sub
cltd
add
int3
ret
les
adc
test
iret
mov
dec
and
loopne
test
movl
rcr
out
call
push
lods
ficomps
xchg
enter
in
std
xchg
adc
mov
sahf
pop
mov
adc
mov
sbb
out
push
aad
rcl
mov
inc
fs
push
xchg
and
mov
sbb
mov
sbb
and
add
jmp
cmp
sar
pushf
inc
add
push
fcompl
push
cmpsl
cmp
outsb
and
push
mov
xor
leave
sbb
mov
adc
add
mov
inc
in
stos
sub
cwtl
in
sbb
insb
pop
out
add
inc
sbb
into
pop
inc
int
inc
mov
lret
cwtl
aad
jge
fucomip
inc
into
sarb
adc
outsb
add
movsl
in
mov
pop
test
outsb
pop
jg
loope
jbe
mov
xchg
jg
andl
cmpb
jo
jo
and
lcall
sub
movsb
bound
bound
xor
push
jmp
pop
idiv
hlt
and
mov
sahf
lret
and
pop
or
push
cmpsb
out
push
cltd
xchg
aad
mov
sar
pop
cmpsl
inc
pusha
js
xor
mov
out
mov
xchg
sbb
mov
out
mulb
or
dec
add
addl
mov
sbb
bound
push
std
je
sub
ret
or
movsl
rclb
xchg
jnp
stos
fcmovbe
adc
xor
shll
int3
and
add
in
dec
pop
inc
insl
inc
ljmp
ret
push
pop
xchg
stos
cmp
arpl
test
ss
pop
dec
add
hlt
push
dec
push
ret
lret
push
push
push
jecxz
inc
loopne
jae
or
test
xchg
stc
and
push
addr16
ret
and
fld
jno
popf
popf
pop
pop
ret
imul
xchg
mov
lea
ret
scas
je
ja
sbb
xor
hlt
bnd
jnp
add
mov
inc
in
and
sbb
pop
ret
fmul
mov
sub
inc
cmp
mov
popa
mov
fdivs
adc
push
clc
arpl
repnz
cwtl
pushf
bound
mov
jl
mov
fwait
call
ja
or
dec
jno
ljmp
lahf
cmp
repz
and
push
mov
movsb
and
push
or
aas
ret
push
movsl
jmp
stos
shl
xlat
std
stos
inc
in
out
out
push
xchg
mov
pop
or
inc
or
jp
loope
sbb
mov
cli
sub
fisttps
aaa
scas
ret
cwtl
add
mov
in
cmp
adc
sub
mov
jb
mov
adc
mov
fsubs
lahf
add
movsl
push
aas
aas
mov
dec
rclb
nop
pop
xchg
push
andb
mov
add
jg
pusha
jb
hlt
xchg
cmpsl
dec
into
sarb
jno
jge
mov
sub
sub
popf
pusha
cli
jae
jl
add
call
pop
push
out
push
mul
aas
inc
mov
fimuls
repz
insl
out
enter
aam
shl
fnstenv
mov
sub
sbb
andb
pop
out
jns
sub
rolb
jecxz
and
mov
bswap
test
es
std
jb
addr16
or
sub
mov
xchg
nop
inc
pop
je
xchg
push
cmpsb
mov
lcall
in
rclb
inc
std
push
icebp
or
xchg
stos
mov
daa
int
pop
addr16
jne
fldl
mov
pop
inc
push
inc
call
ret
push
jge
cmp
sub
jmp
aas
lods
pop
adc
push
sub
jl
jbe
mov
and
shll
sbb
xlat
shlb
gs
insb
in
sub
pop
scas
sbb
iret
shlb
push
push
cwtl
test
push
sbb
jmp
or
int3
stos
inc
adc
das
jno
jp
adc
pop
loop
cmp
movsb
imul
mov
mov
jno
adc
mov
jae
or
enter
aam
mov
xchg
push
idivl
pop
adc
je
sbb
jecxz
icebp
mov
out
mov
lahf
mul
or
pop
xchg
pusha
movsl
cmp
add
or
sub
adc
hlt
sub
sbb
push
in
mov
into
jg
daa
xchg
mov
add
cmp
outsb
stos
xor
in
xchg
dec
mov
in
imul
mov
outsb
push
push
adcl
cmp
jae
xchg
push
rcr
mov
push
and
add
nop
jmp
test
push
in
mov
jb
shlb
outsb
jbe
or
xchg
leave
jnp
and
out
pop
xchg
cmp
jbe
sbb
push
xor
dec
jl
mov
mov
sbb
ss
pop
mov
sbb
pcmpeqd
xchg
adc
push
in
repnz
pop
pop
pop
push
dec
lock
subl
test
in
adc
dec
aad
das
lock
and
ret
push
push
dec
sbb
scas
scas
mov
mov
test
mov
xchg
mov
dec
popf
push
jmp
repz
rorb
push
mov
out
nop
jo
dec
xor
incl
add
push
adc
adc
xor
mov
jl
jg
lods
xor
push
test
sub
xchg
jae
jecxz
mov
je
jl
add
cmp
inc
ss
jae
xchg
lret
inc
jo
cmp
pop
fldl
mov
sahf
hlt
adc
test
or
call
jg
insb
fildl
jmp
adc
in
sarl
mov
push
lahf
jmp
dec
rcrb
sub
jge
cltd
lret
xchg
mov
imul
fucom
xchg
inc
and
repnz
inc
push
jnp
xchg
and
mov
in
pop
inc
xchg
jge
xchg
dec
andl
enter
mov
xor
xchg
sbb
xor
int3
cwtl
js
addr16
bound
lahf
push
cli
pop
dec
insb
mov
or
or
xchg
mov
xor
cmp
jle
mov
inc
sub
arpl
or
push
mov
xchg
lcall
mov
idivb
pop
out
mov
cmp
sub
push
out
push
dec
popa
jp
fidivrl
test
loope
cmp
and
pop
cld
and
out
fdiv
sub
xchg
xchg
pop
into
jg
xchg
and
jmp
and
and
fcmove
shll
push
aas
cmp
in
mov
mov
cmp
insb
outsl
ss
shrl
or
inc
and
test
popf
rorb
ret
movsl
cmp
sahf
nop
das
test
mov
mov
adc
mov
aas
inc
sub
adc
enter
stos
dec
mov
movsl
sub
mov
cmpsb
sarb
sbb
lret
sbb
repnz
xchg
mov
sub
pop
xor
pop
iret
adc
lret
outsb
lcall
loop
inc
push
cmpb
stos
test
and
mov
fcoml
in
sbb
and
inc
in
cmpsl
add
jmp
iret
mov
idivl
fiadds
mov
rolb
andb
stos
das
rorl
mov
mov
and
inc
aam
dec
xchg
int3
jns
push
mov
gs
aaa
mov
arpl
mov
out
or
xchg
mov
cld
mov
outsl
mov
in
adc
pop
xchg
in
mov
cmp
shrb
stc
pop
mov
enter
lods
aam
and
sub
pop
mov
lret
les
cmpsb
jg
out
jb
fxch
cmp
icebp
pushf
pop
fsubs
nop
mov
fisubs
fldcw
jae
les
push
fstps
pop
push
imul
divl
push
out
xor
test
sub
mov
cld
pop
imul
stos
mov
mov
add
hlt
push
rorl
xchg
dec
out
jle
jne
pop
test
xor
add
cmpsb
clc
lods
aam
jns
daa
xor
pop
mov
fcmovne
out
cltd
inc
inc
out
sbb
cmp
mov
or
std
insb
ret
gs
in
adcl
cltd
jb
inc
pop
and
pop
or
idivl
jae
dec
cmpsl
sub
imul
movsb
bound
mov
jl
aad
sbb
imul
xorl
aaa
jecxz
adc
cs
adc
sub
or
and
and
sbb
sbb
out
jbe
push
dec
mov
and
pop
mov
add
pop
push
mov
in
lock
fldl
shl
xlat
js
addr16
fwait
lret
outsb
sub
mov
cld
sbb
jo
call
ret
scas
imul
jge
mov
pop
push
addr16
and
dec
pop
or
lret
cmp
fdiv
jp
or
xchg
rclb
inc
into
push
xchg
aas
push
jmp
stos
icebp
or
enter
outsb
ds
xchg
or
bound
push
iret
test
hlt
ret
outsb
rolb
xor
lahf
loop
ja
popf
pop
pop
sub
pop
jle
arpl
sbb
shl
stos
xchg
sarb
add
jnp
mov
leave
xchg
push
pushf
jnp
mov
movsl
ds
mov
jbe
xlat
fmuls
and
aas
int3
sub
aas
jno
sbb
lods
jo
push
xchg
add
xorl
cmpsb
add
xchg
xchg
dec
popa
xor
outsb
jno
mov
sub
das
sub
loopne
dec
dec
push
mov
inc
dec
or
loope
stc
inc
sbb
push
xchg
les
jb
pop
xor
outsb
mov
nop
or
xor
cmp
ljmp
dec
xchg
xchg
ljmp
add
aaa
mov
aam
ja
loop
cld
or
or
in
pop
cmp
repnz
jge
add
xor
clc
xlat
sbb
test
cmp
inc
inc
daa
fbstp
imul
pop
pushf
adc
or
addr16
xor
xor
xchg
aam
push
dec
dec
ficoml
sub
fwait
add
je
mov
xchg
pop
movsb
lret
mov
dec
hlt
jo
sub
cmp
dec
add
inc
and
xchg
jmp
push
mov
add
dec
cwtl
inc
pop
bound
push
xor
sub
fs
lods
daa
pop
ja
arpl
or
mov
mov
cld
mov
loop
imul
scas
inc
sbb
fsubrs
dec
sub
ljmp
or
or
xchg
das
std
sti
push
cmp
dec
adc
adc
mov
push
mov
pop
dec
ds
clc
jbe
or
inc
jge
xor
adc
mov
lahf
mov
inc
adc
sarl
andb
cmp
cmp
cmp
icebp
ret
mov
cmp
push
pop
dec
xchg
fs
jbe
add
mov
adc
xchg
or
cmp
adc
insb
call
jb
loope
pop
sbb
stos
dec
push
std
dec
jbe
out
inc
cld
cmp
outsb
ljmp
test
js
jmp
xor
fsts
inc
mov
notl
gs
fs
push
or
sub
ret
pushf
jge
mov
push
fimuls
ret
iret
rcrl
pushf
sbb
daa
mov
movsb
in
jne
jecxz
or
rclb
adc
pop
jnp
jae
in
popf
xor
jb
sub
out
mov
sbb
mov
jle
push
lret
sbbb
add
das
sub
push
call
dec
xorb
stc
imul
test
or
daa
mov
nop
pop
jae
stos
outsl
enter
jne
inc
inc
lret
das
rol
fwait
rcrl
ds
movl
pushf
daa
arpl
jbe
sub
daa
sti
aaa
and
mov
imul
jo
jg
adc
xor
outsl
call
dec
jne,pt
pop
jg
xchg
mov
mov
cmpsl
dec
mov
xor
adc
sub
push
cmp
pop
das
test
sar
popa
outsl
xchg
movsb
xor
jbe
inc
rcll
gs
xor
rorl
mov
xor
hlt
fdivrs
stc
iret
fnstenv
test
push
sarb
jnp
mov
pop
jp
pop
mov
mulb
sub
ss
inc
decb
or
movswl
dec
lahf
pop
lcall
jne
xlat
icebp
loopne
repnz
popf
pop
mov
xchg
dec
dec
push
std
shll
cltd
mov
mov
mov
push
jecxz
jbe
xchg
jbe
and
or
xchg
mov
mov
jnp
ret
and
mov
test
pop
arpl
inc
roll
mov
dec
xor
pop
aam
inc
xchg
jb
cs
sbb
fstp
es
push
cli
shr
mov
lods
lock
inc
mov
and
cs
or
mov
cmp
loop
mov
push
mov
aad
ljmp
mov
mov
push
push
adc
jne
or
addb
dec
cmp
jge
cltd
popa
cwtl
fnsetpm(287
clc
mov
xor
jo
xor
adc
int3
inc
or
shrb
cmp
dec
dec
lret
lods
js
pop
stc
push
push
repz
add
xor
adc
cmp
sbb
icebp
dec
sub
call
mov
push
xchg
sarb
subb
jbe
movsb
aaa
ds
mov
ret
outsl
ret
push
loope
cld
js
lret
adc
std
cmp
push
mov
scas
inc
cltd
popa
adc
adc
hlt
cmp
pop
inc
mov
fdivrs
or
jne
and
lods
inc
addr16
xorb
cmp
add
mov
pop
imul
mov
dec
pop
jae
mov
popf
add
adc
fcomps
test
dec
imulb
repz
xchg
fdivs
addr16
out
fistl
pushf
lahf
jno
dec
sub
subb
and
cs
ficoml
mov
pushf
push
mov
cmpsl
js
push
mov
adc
cmp
sahf
dec
dec
adc
clc
test
xlat
push
sbb
lret
loope
push
jnp
sarb
imul
inc
lret
push
jne
xor
out
stc
fwait
cltd
push
push
roll
mov
xor
mov
xchg
pop
popf
add
lret
insb
xchg
cmp
stc
xor
ret
les
xor
add
arpl
mov
pop
cmc
push
push
lret
xchg
std
or
sub
mov
loop
sub
test
mov
dec
fmuls
sbb
cli
fiadds
insl
stos
add
pop
daa
mov
jns
insl
and
jo
pushf
pop
roll
sub
pop
call
ja
mov
int3
dec
pusha
xchg
cs
jno
push
mov
cld
scas
sub
jbe
push
test
and
in
add
movsb
and
das
fstpl
push
out
jne
out
jo
ss
scas
lret
aad
pop
rorb
pop
and
inc
ffree
repnz
out
jb
scas
jmp
sbb
or
and
or
sub
subl
ss
rclb
push
sbb
out
inc
pop
negb
jge
arpl
cmp
int3
or
iret
aaa
or
js
sub
mov
jmp
jo
ret
sbb
sub
in
mov
fisubl
adc
adc
push
sti
push
inc
xchg
lret
mov
pushf
mov
sar
cmp
inc
jns
jbe
ret
je
pop
out
sbb
outsl
lret
lock
mov
lahf
ljmp
adc
movsb
out
repz
repnz
les
sub
cmp
dec
adc
xchg
dec
mov
push
pop
rorl
scas
imul
rclb
push
out
shl
mov
cmpsb
push
movsl
mov
push
xchg
and
mov
je
mov
loop
nop
data16
sub
scas
and
sub
sub
inc
push
pusha
inc
add
movsl
addr16
call
sbb
rcrb
aas
flds
sbb
imul
pop
cmp
mov
push
mov
mov
cmc
es
pop
mov
pop
bound
sti
lret
cmp
sbb
cltd
aad
aam
fistl
ficoms
arpl
vcvtps2dq
adc
xor
mov
push
aad
pop
das
jne
xor
addl
pusha
inc
je
cmp
outsb
xchg
clc
and
xor
or
aas
xchg
cmp
mov
xorb
xor
inc
jno
cvtpi2ps
rcr
sysenter
jnp
call
je
and
inc
add
lcall
insb
lea
aam
mov
inc
cli
jae
rorl
jmp
ss
ljmp
es
mov
xchg
xchg
repz
mov
sbb
int3
fs
adc
pop
push
cmp
mov
popa
in
cmpsb
test
adc
and
in
push
pop
in
rcll
inc
mov
into
rcl
je
xchg
not
and
mov
cmp
mov
sbb
nop
sub
fwait
adc
adc
dec
dec
add
sbb
adc
loopne,pt
cld
mov
push
xchg
adc
sbb
push
pusha
rolb
negb
sti
mov
aas
adc
dec
lret
leave
pop
jecxz
sbb
mov
sbb
aaa
mov
and
es
dec
adc
cli
ret
xor
dec
int
std
stc
mov
in
push
adc
aaa
inc
loop
call
dec
fstps
dec
decb
mov
mov
adc
jp
mov
and
mov
popf
leave
addr16
aas
sub
nop
and
sub
notb
push
jge
ret
inc
and
pop
push
loop
xor
repz
fnstcw
bound
xlat
stos
stc
push
testb
adc
cs
aaa
pop
sub
or
ds
loopne
mov
daa
jne
les
jae
jno
aaa
inc
sub
jns
jns
ret
and
popa
movsl
clc
jle
dec
add
adc
inc
ljmp
gs
adc
das
fnstsw
das
fwait
les
mov
sahf
out
fs
adc
mov
sub
jo
adc
je
bound
aaa
pop
stos
pusha
jbe
incl
dec
fstpl
push
fwait
test
lret
das
enter
shll
cld
adc
pop
movsl
mov
mov
mov
sub
push
mov
insl
sbb
xor
mov
or
stos
dec
sub
mov
fldenv
pop
and
sub
xchg
xor
inc
pop
add
mov
pop
not
and
std
leave
out
cmp
rcll
stc
cmp
pop
jg
dec
movsb
icebp
cmp
mov
das
pop
and
clc
jbe
ds
jb
outsb
scas
test
pop
or
xor
sahf
fldt
sbb
mov
pop
ret
shrl
dec
movsl
adc
hlt
mov
cmpsl
dec
adc
or
cmpsb
sbb
pusha
pop
daa
cs
sarb
sbb
cmc
mov
cwtl
in
fwait
fs
enter
push
ljmp
and
pop
loop
lock
pop
push
inc
jb
cmovl
cmp
adc
adc
aad
inc
cwtl
rol
into
fidivrs
out
pop
xchg
and
push
mov
loop
mov
mov
lahf
jo
std
sub
repz
sub
jbe
je
movsl
rcll
les
loopne
xor
mov
mov
je
pop
sub
mov
cmp
cli
or
mov
xchg
in
sub
or
shl
push
lret
scas
clc
jle
test
push
dec
int
negb
movsb
call
sbb
lods
pop
push
popa
mov
nop
jle
and
adcl
cmpsl
xchg
xchg
cmpb
jns
mov
cltd
outsb
mov
sti
inc
outsl
add
arpl
xchg
pop
cwtl
loop
push
jnp
mov
pop
sbb
ret
rcll
out
push
push
aad
xchg
fldl
rcrl
add
out
ror
cmp
push
stos
data16
push
adc
mov
and
test
adc
push
xchg
stos
sbb
dec
xor
in
inc
add
icebp
xor
sub
sbb
loope
adc
out
push
jo
xchg
jge
out
sub
mov
stc
sbb
push
lcall
xchg
outsl
cmpsb
ljmp
lret
ficoml
xchg
mov
jecxz
cmpb
dec
and
xlat
mov
pop
mov
dec
pop
dec
dec
mov
jo
out
xlat
loopne
jo
arpl
gs
mov
clc
inc
jb
dec
clc
ficoms
mov
or
pop
jnp
les
popa
and
inc
aam
jns
addr16
mov
loope
ret
pop
push
jge
adc
aas
jmp
push
mov
cmpl
ljmp
pop
sbb
mov
push
mov
mov
pop
xchg
rorb
aad
xchg
xorl
sbb
or
inc
je
shlw
negw
pop
test
adc
loopne
cli
sub
in
sbb
inc
adc
mov
push
jmp
fnstsw
sti
push
test
stos
cld
fldl
sbb
ret
dec
aas
xchg
int
or
sub
xor
idivl
inc
or
pop
push
and
aam
cmpsb
mov
pop
push
cli
mov
xchg
jmp
pushf
push
sub
pop
jns
jg
push
inc
test
nop
add
jcxz
xchg
or
daa
mov
xchg
or
xchg
xlat
scas
shr
jge
ret
pop
loope
push
adc
test
ss
roll
cltd
shr
push
gs
ja
push
int3
daa
rcll
mov
mov
fsubl
push
repz
inc
mov
cltd
mov
rcr
pop
mov
stos
cmp
decb
scas
into
mov
das
ja
mov
loopne
push
in
mov
mov
idiv
mov
pop
sub
in
xor
inc
cmc
sub
sub
dec
jecxz
subl
or
mov
jne
jg
xor
cmpsl
rolb
push
mov
out
or
pushf
jno
dec
ja
xor
mov
jae
ret
fsts
mov
jecxz
inc
sbb
mov
mov
inc
jo
call
fstps
and
pop
aad
in
adc
sar
xlat
out
pop
mov
lods
mov
and
add
xor
pop
sub
xchg
xchg
mov
push
pop
dec
dec
or
mov
or
xor
out
lahf
aam
inc
cmp
xor
pusha
xchg
movsl
push
scas
xchg
std
add
sub
shrl
cmp
shlb
rclb
clc
push
mov
repz
pop
sbb
bound
mov
inc
pushl
int3
aas
imul
pop
mov
and
lahf
cmp
das
cmpsl
data16
sti
lret
fs
and
loope
jmp
push
loopne
inc
in
imul
xor
cmp
and
fsts
movsb
jb
push
mov
push
cmpsl
mov
dec
adc
in
and
aaa
sbb
jb
xor
into
hlt
enter
xchg
mov
icebp
fs
jns
je
sub
xchg
and
mov
sti
aaa
and
dec
mov
xlat
pop
sbb
dec
cmpsb
test
cmc
movb
cs
iret
mov
mov
mov
es
addr16
jle
bound
inc
inc
ret
divl
out
push
mov
addr16
sar
jns
call
subb
aaa
repz
cmp
cmpsb
lcall
sbb
das
push
and
cmc
sbb
loop
inc
hlt
mov
cmpsl
aaa
or
ja
push
aaa
les
adc
pop
adc
or
sarb
les
xchg
rorl
scas
inc
dec
cld
data16
out
jecxz
repnz
mov
fsubrs
in
xchg
pop
xor
es
mov
xchg
mov
hlt
adc
push
stc
xlat
inc
subb
cli
mov
dec
popa
xor
das
out
sub
pop
int3
sbb
xchg
frstpm(287
lock
sbb
pop
loopne
and
das
push
xchg
dec
bound
xchg
pushf
xlat
out
inc
out
jmp
xchg
sbb
inc
jne
fldt
or
ret
test
add
xchg
aaa
mov
test
paddsb
jns
jmp
lret
jae
push
out
sahf
in
or
jge
inc
xchg
test
push
mov
movsl
pop
jns
lcall
popf
xchg
loope
fcoml
mov
lcall
xchg
mov
aad
mov
mov
cli
pop
pop
dec
gs
pop
test
enter
shlb
mov
cmp
mov
insl
jbe
mov
push
sbb
lahf
loop
fimull
add
jp
stos
icebp
pop
mov
dec
leave
pop
inc
mov
daa
fsubl
push
mov
pop
dec
es
cmpsb
push
movsb
decl
fcomps
jp
mov
mov
xor
fildl
leave
mov
mov
je
xor
xorb
xor
lea
sub
fldt
out
lcall
or
add
push
es
lods
dec
cld
ret
mov
clc
dec
sbb
lods
outsw
add
push
cmp
adc
out
sbb
sti
insl
adc
int
push
fldl
popa
jbe
repnz
dec
in
testb
ja
push
add
dec
cli
stos
mov
xchg
scas
mov
dec
test
lret
nop
arpl
sbb
sub
adc
cwtl
jae
sar
jae
cltd
aam
adc
imul
adc
ljmp
jne
and
ljmp
xchg
stos
mov
in
xor
addr16
shr
aaa
pop
sub
adc
cmc
mov
add
lret
lcall
fildll
ret
mov
and
test
call
and
fnstsw
icebp
pop
add
pop
mov
jmp
mov
add
shll
test
orl
sbb
and
test
shll
nop
push
xchg
cmp
inc
pop
in
cmpsb
mov
pop
mov
shll
lods
xchg
out
xchg
and
add
fwait
dec
add
fnstsw
xchg
ret
cmpl
arpl
test
dec
xchg
shll
lods
leave
inc
lcall
daa
cli
dec
iret
inc
pop
iret
cmp
inc
push
aas
jmp
push
cltd
mov
aam
mov
incb
lods
adc
hlt
lea
cmpb
dec
out
cmp
add
lret
cli
arpl
push
mov
movsl
jb
loopne
mov
loope
dec
mov
mov
shlb
icebp
dec
mov
mov
dec
scas
xor
jmp
xchg
add
jmp
sbb
clc
pop
mov
movsl
pusha
stos
mov
adc
adc
ljmp
bound
nop
movsb
push
fstps
movsl
dec
add
loope
lret
scas
jns
arpl
out
add
lock
out
mov
fs
mov
jbe
sti
ret
pop
repnz
fistps
inc
stos
lds
push
and
dec
push
inc
mov
jae
xor
pop
into
aaa
lods
sub
xchg
xor
mov
aaa
insb
les
dec
mov
movsb
dec
xor
mov
ljmp
push
int3
sahf
pop
lea
pop
mov
fisubrl
not
mov
std
imul
dec
sub
movsb
mov
xor
lods
rcll
enter
push
fs
cltd
iret
dec
test
lods
xchg
lret
imul
mov
mov
incl
inc
das
mov
xor
cmc
fisubrl
xchg
imul
repz
sbb
inc
jp
push
rol
sub
adc
jns
ficoml
cmp
aas
cmp
bound
adc
icebp
mov
push
push
ds
fcomp
sahf
shrb
dec
into
jmp
cli
lock
sub
jne
mov
cmp
mov
loope
scas
les
mov
data16
jne
lds
and
xor
aad
add
push
push
out
out
sub
movsb
outsb
jecxz
mov
popa
scas
mov
rcr
and
jae
adc
and
push
adc
fidivs
pop
push
or
mov
push
add
movl
xchg
in
jns
sbb
dec
movb
inc
and
jb
xor
sbb
fcomi
xchg
push
hlt
xor
sti
dec
xchg
cld
mov
gs
push
xchg
push
arpl
les
push
push
and
add
test
sbb
negb
inc
xchg
mov
pop
mov
lret
aad
mov
mov
mov
shlb
movsl
nop
ret
sub
jae
xor
popf
movsl
pushf
add
cld
add
pop
fcomps
xor
ds
sbb
hlt
dec
arpl
jo
sub
push
push
xchg
popl
aam
stc
rolb
ror
pop
xlat
lcall
cld
shlb
outsb
sbb
jae
fsubrp
shrl
pop
test
neg
pop
xor
aas
mov
inc
imul
mov
dec
dec
and
jmp
pop
inc
mov
fwait
lds
mov
outsl
xchg
adc
and
pop
cmp
pop
popa
pop
rcll
scas
dec
dec
xor
pop
cmp
andb
mov
xchg
sub
adc
xchg
divl
cmp
pop
test
scas
insl
cmpsl
int
mov
mov
mov
loope
sub
inc
sbb
out
jge
xchg
push
stc
xor
push
pop
in
add
xchg
fwait
aaa
fdivs
sbb
lret
rol
fnsave
into
adc
repnz
fs
pop
xchg
mov
pop
test
sbb
imull
pop
negl
pop
imul
sbb
sub
leave
repnz
cld
fstpt
in
mov
mov
out
mov
xor
iret
dec
clc
jp
dec
mov
and
pop
andl
sahf
mov
rcl
enter
mov
mov
arpl
inc
imul
mov
lret
rclb
mov
mov
cwtl
add
or
add
lock
xor
test
cltd
mov
cmp
dec
add
and
or
cmpsb
cwtl
sub
pop
dec
outsl
pop
gs
lcall
pop
mov
push
js
adc
or
sub
mov
hlt
daa
jmp
lds
dec
iret
add
xorl
xchg
lahf
data16
movsb
pop
adc
aaa
add
in
and
test
push
adc
mov
xchg
and
es
popf
pushf
ds
xor
xlat
cmp
test
aas
lcall
enter
cltd
cmp
mov
jne
jmp
add
cmp
pushf
and
test
fldt
or
shl
jnp
or
ljmp
add
popa
push
mov
cmp
jg
js
xor
dec
or
inc
mov
mov
jg
sub
cmpsb
scas
pop
push
cmpsb
push
lret
mov
das
adc
push
push
sub
sub
push
hlt
cli
push
inc
je
inc
adc
sbb
pop
jo
popa
fisttps
xchg
xchg
inc
and
adcl
js
int3
dec
sbb
mov
imul
aas
inc
sbb
or
add
orl
cmp
mov
lret
sti
daa
subb
aam
lret
fdivp
sbb
jg
sbb
lods
pop
loop
dec
insb
jp
adc
mov
mov
push
adc
xchg
or
xor
dec
push
std
xchg
imul
dec
xor
add
push
lods
ret
pop
inc
mov
popf
ret
enter
push
jmp
out
stos
cmc
xchg
ficoms
mov
cltd
jo
fistpll
jne
add
cltd
dec
sbb
and
xchg
jae
xorl
les
bswap
jle
bound
dec
mov
jno
jb
daa
out
cltd
gs
mov
sar
fildll
mov
nop
mov
dec
in
xchg
add
xchg
sbb
imul
or
jmp
ret
das
pop
pop
push
pushf
imul
popf
xlat
fwait
repz
or
mov
pop
pop
mov
test
sub
out
xor
setno
ljmp
pop
xor
pushf
xchg
pop
sbb
scas
in
shrb
test
rcl
push
push
jnp
in
sub
or
cmc
adc
filds
sti
pop
sub
xchg
lods
subl
jmp
inc
js
mov
test
and
lds
ret
sti
popf
shrl
pop
mov
mov
cmpsb
sbb
jo
sbb
and
xchg
mov
cmpsb
in
stos
lock
cmp
aad
sub
xor
scas
and
inc
insl
mov
cld
push
cmp
ja
pop
cli
lock
adc
sub
into
lret
push
nop
repnz
pusha
popa
out
fiadds
xchg
and
pop
jge
sti
cmp
jge
add
mov
std
les
ja
inc
mov
popf
clc
jl
add
xor
leave
insl
xchg
or
adc
js
hlt
shll
lods
pusha
dec
cwtl
dec
add
loopne
stos
out
aam
mov
xchg
insl
ss
push
sbb
ret
xor
mov
shlb
and
sub
add
xchg
shll
nop
movd
pop
insl
notl
mov
out
pop
push
out
arpl
mov
test
fcompl
into
xor
push
jo
jo
push
loope
stc
lds
adc
loopne
lret
xor
aad
xor
cltd
movsb
dec
inc
or
mov
inc
prefetchw
int
cmpsb
xor
xchg
lret
js
inc
add
jne
je
mov
loope
es
scas
imul
loope
xor
pop
push
pop
pop
dec
add
dec
sbb
dec
mov
add
cmp
std
in
fs
clc
dec
in
sbb
data16
inc
jmp
sub
fsubl
mov
mov
and
mov
mov
je
aas
mov
xchg
mov
xchg
mov
adc
mov
jp
ret
sub
and
fsub
add
outsl
mov
lret
mov
jecxz
xor
dec
mov
inc
lcall
xchg
jg
xchg
mov
add
mov
or
inc
mov
shlb
push
test
stos
ja
fld
in
ficoms
mov
outsb
push
ficoms
cmc
daa
adc
or
and
push
add
bound
and
xor
add
mov
xor
or
jno
rol
dec
fstl
in
mov
xor
xor
cltd
leave
pop
jns
repz
add
mov
jbe
not
arpl
xchg
inc
stos
lods
dec
lahf
and
testl
imul
out
push
call
in
xchg
popf
xor
insl
jg
jno
jl
fcomps
sub
mov
rcl
bnd
lock
cmp
iret
sbb
push
out
push
push
std
std
sub
xchg
test
lods
adcb
icebp
xor
je
dec
xchg
sti
jge
jge
jbe
add
jae
xchg
mov
and
and
ja
add
mov
movsl
pop
ss
inc
ja
dec
mov
test
cli
push
test
xchg
dec
pop
ret
loop
sbb
addr16
push
in
push
mov
mov
mov
pop
push
xor
int3
mov
test
jl
push
xor
xchg
popa
in
mov
stos
xchg
iret
inc
je
jno
inc
stc
and
sarl
test
cmp
sub
pop
and
cmp
rolb
mov
movsl
pop
lahf
sub
addr16
jmp
lock
push
mov
xorb
xchg
and
inc
pop
add
mov
mov
aas
je
adc
mov
hlt
and
pop
mov
leave
leave
sub
ljmp
jl
mov
jno
xlat
pop
mov
lret
rcrl
mov
scas
movl
aad
or
mov
dec
jp
xorl
and
sbb
data16
mov
push
mov
pop
sbb
insl
movsb
ja
fidivrl
out
inc
test
mov
xor
pushf
xchg
xchg
loope
int
addr16
jge
cmp
movsl
repnz
or
sub
cmc
test
jmp
inc
testb
adc
adc
add
mov
jp
jmp
mov
dec
call
xor
mov
rclb
out
sub
sub
mov
mov
jo
xlat
ljmp
mov
adc
and
mov
mov
mov
fiadds
stos
ss
lock
addr16
fcmovnb
fidivrs
sbb
insl
and
loope
std
cmc
loopne
add
ret
daa
xchg
outsl
pushf
jmp
sbb
or
fs
in
pop
test
jmp
loopne
ljmp
mov
sub
mov
jb
push
mov
sub
in
mov
gs
ret
xor
mov
push
jbe
aad
or
gs
xchg
and
sbb
cmp
sub
xchg
test
jge
adc
scas
xor
add
mov
out
push
aam
addl
fidivl
fucom
cmp
jmp
dec
imul
imull
mov
pushf
pop
outsl
mov
push
sbb
mov
ja
add
jl
xor
adc
sti
adc
out
push
out
xchg
enter
pop
push
jno
aaa
xchg
cltd
pop
push
jle
sbb
xor
lods
mov
es
in
jge
xchg
jmp
popa
sbb
repnz
mov
lock
arpl
mov
dec
ret
jb
cs
les
xchg
ds
aam
push
or
lcall
add
add
mov
xchg
sub
cmpsl
fiaddl
fstl
adc
andl
inc
mov
mov
jl
scas
pushf
mull
jno
mov
iret
mov
adc
test
jmp
sbb
or
dec
pop
scas
cmp
xor
clc
inc
cwtl
scas
dec
repnz
push
sub
mov
rorb
dec
pop
and
fisubrs
mov
fwait
push
lcall
icebp
insb
roll
mov
shlb
pop
jmp
mov
push
lret
and
call
shlb
test
sti
cmpsl
mov
pop
or
in
sahf
imul
sub
sub
mov
and
movsb
outsb
push
pushf
fdivrl
fimuls
cmp
dec
mov
jecxz
jb
scas
aad
inc
adc
cmp
mov
mov
test
test
cmp
repnz
add
sub
ret
adcb
push
dec
sub
cmp
aas
mov
je
pop
inc
xchg
ds
lds
je
inc
xchg
push
popf
shll
push
out
fs
adcl
and
sub
fldenv
loope
inc
pop
aaa
out
cmpsb
imul
push
push
mov
cmp
adc
in
mov
xor
adc
shlb
fadds
jl
arpl
mov
cmpl
xor
push
addr16
push
mov
mov
ret
jo
mov
and
cmpsb
fdivrp
mov
inc
repz
jle
xchg
ficoms
dec
fnstsw
xchg
or
jo
sbb
jne
dec
jl
jmp
loop
insl
pop
mov
pop
xor
adc
idiv
fidivrl
jne
fdivl
and
testb
xchg
push
dec
pusha
mov
lods
lahf
jns
jbe
or
or
mov
mov
adc
ret
jno
or
jle
sub
xor
jns
inc
dec
push
push
data16
stos
mov
push
pop
lcall
repz
mov
stc
adc
cmpsb
iret
insb
int
and
cmp
popf
mov
into
mov
cmc
out
jne
dec
imul
mov
mov
js
test
mov
std
or
je
ret
sti
add
js
call
lret
insl
data16
mov
mov
loop
jle
mov
lds
lods
sarl
push
and
mov
mov
ret
imul
rolb
rcrl
out
cmc
add
and
rolb
mov
cmp
test
mov
mov
fldl2e
inc
outsb
mov
js
cmp
mull
ds
enter
out
ds
and
call
test
fstps
in
fcoms
mov
test
inc
xor
xor
or
subb
imulb
sar
fsubrp
xor
xchg
fiadds
jbe
stc
mov
jmp
or
cmp
inc
pop
push
lahf
je
cltd
mov
mov
pop
out
mov
cmp
push
sahf
fstps
inc
push
pushf
aad
mov
fldl
popa
jbe
inc
mov
rclb
inc
pusha
dec
sbb
stc
out
and
lret
xchg
shlb
lahf
inc
push
sbb
sbb
dec
jmp
mov
mov
dec
mov
mov
stos
push
lcall
mov
mov
rcr
les
push
sbb
nop
and
xor
into
fs
das
int
repnz
int
sbb
add
and
sbb
jmp
inc
jnp
lret
mov
loope
scas
cmp
flds
hlt
cld
sub
push
pop
push
inc
fnsave
repnz
lds
pop
sbb
mov
adc
call
ss
pop
push
mov
mulb
cmp
mov
loop
jnp
xchg
inc
jae
shll
mov
mov
fldenv
cmp
mov
jge
and
or
pop
fisubrl
xor
ror
jg
aaa
orl
inc
adc
sahf
sbb
jg
jnp
clc
and
jnp
fwait
xor
fdivrl
test
stos
push
movsb
adc
jl
xchg
xchg
subb
sbb
das
jo
fs
mov
sbb
sub
inc
push
out
sub
adc
add
lea
or
mov
inc
pop
jae
les
or
lret
cmpb
and
cmpsl
adc
int3
pop
pusha
push
mov
fmull
insl
pop
mov
cmpl
stos
or
dec
fildl
dec
stos
sbb
adc
js
push
mov
popf
mov
sub
mov
int
lds
sub
jae
cmp
stc
iret
test
jne
insb
push
popf
icebp
imul
cmpb
mov
pop
es
mov
pop
cmpsl
inc
das
mov
pushf
xor
mov
js
xorb
xchg
jae
in
stc
out
sarl
mov
cmpsb
sbb
xor
or
incb
stos
push
push
mov
cmp
pop
or
gs
mov
adcl
pop
push
jo
push
xchg
lock
push
inc
dec
xor
emms
ljmp
or
inc
and
sbb
out
popf
sbb
and
push
pop
imul
cmp
mov
inc
ficompl
addr16
cwtl
rolb
pop
or
nop
cmp
fs
jge
inc
and
pop
add
fidivs
mov
test
hlt
and
bound
and
mov
cwtl
addl
test
enter
les
in
xchg
rorl
out
repnz
out
jp
into
and
sub
nop
gs
fidivrs
and
lcall
iret
jl
hlt
loopne
lods
mov
sbb
or
xor
ss
cwtl
add
ss
jmp
fistpll
into
or
fmulp
mov
mov
std
inc
adc
add
aad
cs
jle
inc
aas
rclb
ret
push
ljmp
or
and
test
inc
popf
lret
sbb
xchg
inc
push
mov
adc
aaa
in
inc
push
roll
ficoml
andb
imul
lcall
movsl
sub
mov
dec
hlt
jge
push
aaa
and
sub
adc
mov
xchg
sub
mov
std
mov
pop
lods
sbb
add
xor
jns
pop
xor
stc
push
jp
aam
push
push
lret
lret
xor
mov
push
ja
in
mov
cmp
das
push
pop
scas
mov
fsub
fidivl
push
add
dec
mov
iret
mov
pop
outsl
btr
not
mov
push
jns
mov
mov
dec
sahf
arpl
cmp
inc
cmpsb
sub
jp
sub
jmp
dec
dec
aas
push
inc
dec
ljmp
hlt
jmp
icebp
inc
idivl
lahf
xor
xchg
jmp
lods
in
cmpsl
aas
dec
or
xor
inc
sbb
and
mov
or
jecxz
push
add
mov
mov
pop
push
sbb
dec
xchg
clc
push
mov
fcmovnbe
mov
mov
mov
imulb
enter
clc
loope
mov
das
pop
jl
add
xor
xchg
push
cs
hlt
push
lea
psllw
sahf
test
mov
add
das
in
loopne
fildll
dec
out
xchg
pop
jl
mov
xchg
dec
outsl
sti
add
stos
es
out
or
rcrb
or
mov
leave
xchg
mov
sbb
xchg
jg
mov
cmp
adc
cmp
incl
cmp
scas
jl
xor
xchg
and
les
lds
pop
pop
adc
push
dec
fisubrs
push
rcll
lods
call
xor
dec
xor
ss
nop
jle
lret
dec
out
xchg
mov
add
or
ret
inc
packuswb
mov
fstpl
inc
xchg
cmpsb
sub
add
inc
cmp
push
lods
das
pop
xor
ds
or
xor
ljmp
and
les
xor
cwtl
lods
mov
in
sub
xchg
fadds
jge
pop
int
xlat
ficompl
jbe
cmpsl
movsl
shll
or
sub
cmpl
ljmp
aaa
jb
jmp
fxch
jecxz
push
pop
cmp
stc
test
add
inc
dec
or
xor
je
jmp
xor
or
fmull
push
cmp
outsb
in
gs
shl
into
sub
add
aaa
filds
mov
loop
push
mov
sbb
aad
fdiv
adc
or
cmpsl
lea
fdivs
out
dec
xor
dec
movsl
shll
dec
adc
into
ds
adc
gs
out
xor
inc
ja
xor
sub
ja
leave
xchg
push
add
xor
mov
gs
mov
frstor
shll
outsb
mov
pop
pop
and
pop
jmp
mov
fidivrl
pop
test
outsb
notl
mov
xor
int
jle
cs
in
lahf
out
arpl
adc
in
pusha
xchg
nop
cltd
orb
xor
inc
or
and
jp
xor
mov
arpl
lea
cwtl
fcmovu
cld
arpl
pop
jno
subb
imul
pop
enter
int
repnz
push
push
gs
push
xchg
mov
inc
sbb
sub
sbb
je
xor
out
pop
ss
jmp
gs
mov
mov
repnz
mov
push
sub
sbb
loop
outsl
mov
subb
fisubs
push
jne
sbb
fistl
mov
pop
pushf
add
xchg
inc
cbtw
out
pop
or
scas
jecxz
mov
lds
push
clc
add
sbb
addr16
mov
cmpsl
jge,pn
pop
push
cltd
sub
lods
xorl
push
mov
ss
dec
pusha
test
ja
rcrb
add
cwtl
mov
pop
js
loopne
mov
sub
call
pushf
gs
mov
out
call
leave
jnp
sbb
frstor
inc
push
dec
cs
lret
notb
adc
in
out
fs
dec
mov
sbb
mov
dec
cmp
mov
test
and
push
adc
sbb
out
push
js
jns
jmp
ds
cmp
mov
adc
add
jno
push
les
iret
xchg
repz
and
jns
mov
loopne
push
jp
xchg
fstpt
and
sbb
pop
add
sbb
in
dec
xor
xchg
orl
jb
cmp
lock
cli
sub
mov
mov
gs
xor
out
out
lret
push
pushf
cwtl
mov
arpl
es
int
mov
inc
iret
jb
rorl
adc
push
xor
or
add
repz
roll
cli
enter
lcall
into
inc
and
scas
cmp
mov
pop
lcall
mov
arpl
sbb
and
int3
test
xchg
outsl
cltd
pop
cmpl
pop
mov
push
shr
imul
pcmpgtd
pop
fisttpl
sbb
mov
or
xchg
xor
lahf
les
push
test
mov
test
sub
aad
arpl
ja
sub
frstor
scas
repnz
sahf
jl
xchg
repz
data16
or
mov
adc
gs
lret
adc
shrl
dec
or
cmp
pop
addr16
test
out
cmpl
inc
inc
push
sub
or
push
lcall
xlat
cmp
push
nop
dec
or
pop
xlat
adc
jge
add
fs
push
or
sub
faddl
and
add
xchg
mov
sub
pop
lret
sub
rcrl
movsl
testb
jp
adc
inc
sub
rcrl
scas
xor
and
adcl
gs
into
pop
mov
int
sub
sbb
dec
rcrl
xchg
and
das
jp
mov
pop
xchg
imul
add
outsl
mov
or
lcall
cmp
jb
mov
mov
and
sti
lcall
test
fidivl
rol
out
dec
mov
test
sub
fildll
jns
push
adc
mov
dec
inc
imul
std
xchg
push
cli
movl
dec
sahf
xchg
or
aad
loop
movzbl
jl
orb
fildl
inc
jbe
addr16
es
push
xchg
or
cwtl
jmp
xchg
jg
stos
jle
dec
ljmp
mov
outsl
out
cmp
in
rclb
lock
in
push
stc
jo
in
mov
cld
adc
call
push
insb
dec
bound
fistps
jecxz
sbb
js
jnp
sbb
sbb
xchg
xchg
movsl
sti
sbb
adc
rolb
fsubl
sbb
pop
jle
or
mov
jae
lock
dec
in
cli
dec
xor
lret
stos
cmpsb
sub
lds
mov
mov
in
pop
inc
mov
into
movsb
cld
cwtl
xchg
pop
gs
cli
movsb
sbb
ss
jl
push
inc
sahf
jnp
pop
rorl
xor
sti
xor
or
jno
std
dec
out
push
cld
xor
out
sti
jge
popl
pushf
mov
or
std
pop
mov
call
ds
fistps
loopne
push
add
mov
imul
adc
aad
sti
jno
mov
iret
stos
popf
sarb
and
clc
cmc
shl
loop
bound
jo
ljmp
push
ficomps
js
xlat
mov
je
ret
pop
shrl
into
pop
dec
mov
pop
popf
jae
loop
xchg
out
mov
out
fs
sti
sbb
or
pop
orb
inc
push
fstpt
sub
dec
cltd
dec
mov
xorb
cli
push
mov
lret
lock
iret
jle
xor
cwtl
lea
mov
push
xlat
sub
scas
lds
arpl
mov
jns
dec
jmp
arpl
stos
sbb
dec
and
jnp
xchg
push
fistl
dec
fdivrl
loope
repnz
bound
dec
fisubrl
or
cwtl
mov
adc
int
insl
in
addr16
mov
test
in
mov
push
xchg
lret
fstpl
adc
icebp
adc
lods
fwait
es
dec
inc
mov
fldt
and
pushf
mov
or
loopne
mov
adc
fs
inc
xchg
outsb
dec
lods
insl
out
sahf
inc
insl
or
add
fs
ljmp
stos
stc
cmovge
aam
xchg
jno
test
ja
int3
movsl
fldl
sti
stos
jbe
movsl
push
cmp
outsb
fistps
dec
je
sub
jl
mov
cli
push
mov
push
test
or
cmpsl
dec
fbld
sti
rcl
inc
test
popf
cmp
clc
int3
movsl
xlat
fisttpll
inc
cmp
les
enter
and
or
dec
ljmp
rcrl
mov
jmp
notl
xchg
adc
movsl
xchg
mov
imul
insl
mov
inc
out
pop
jmp
lret
dec
fidivl
dec
inc
fildll
fwait
movsb
push
mov
and
sub
sub
rcrl
lods
call
aad
jmp
mov
icebp
push
xor
ljmp
pop
dec
xchg
xchg
cmp
sub
jg
loope
loopne
dec
movsb
dec
pop
mov
test
pushf
push
add
push
inc
xchg
push
ja
cmp
dec
sub
lret
dec
leave
or
in
dec
test
push
lock
loopne
roll
xlat
pop
aaa
dec
jae
mov
pushf
je
enter
loopne
jbe
lea
mov
sub
pushf
pop
jl
out
xchg
or
subl
in
pop
add
push
inc
cli
xchg
mov
ja
cwtl
push
add
jle
pop
addr16
jmp
stos
addb
jo
adc
push
int
cmpb
pop
sub
jle
je
mov
lds
push
pushf
xchg
and
mov
bound
or
lock
xlat
lahf
in
das
shll
adc
aam
cmp
push
loopne
or
cmc
addr16
push
sbb
daa
mov
xchg
into
xor
inc
cli
loope
sahf
fwait
mov
dec
pop
sti
ss
mov
adc
shl
add
xadd
inc
les
js
jecxz
or
lods
inc
or
scas
das
mov
adc
arpl
ds
ret
xor
dec
int3
jl
js
ds
dec
stc
js
or
inc
ret
xor
adc
mov
sub
or
pop
xchg
ss
inc
fldcw
mov
lahf
cmp
push
data16
sbb
popf
negb
loope
clc
sub
int3
shl
mov
push
adc
or
in
cmpsb
sub
or
faddp
shlb
or
test
inc
les
mov
jmp
push
iret
mov
push
shll
movsb
iret
inc
lods
or
pop
cmp
xchg
out
xor
jnp
xor
inc
mov
out
les
sarb
xor
xchg
pusha
pop
out
jmp
xchg
xor
push
push
cmp
mul
in
jb
das
outsl
bound
sub
das
shll
aaa
push
inc
test
lods
aad
out
mov
inc
inc
cs
in
cwtl
mov
in
inc
mov
sbb
nop
lock
inc
out
mov
call
inc
lods
mov
pop
test
mov
xchg
ss
mov
mov
pop
sbb
add
cs
jg
jle
dec
xor
in
mov
xor
push
and
adc
xor
fimull
and
in
mov
xor
sub
xchg
xor
scas
add
add
shl
fldt
div
daa
xor
push
push
jne
xchg
sub
in
rclb
mov
xlat
shlb
imul
popf
test
sbb
sti
xchg
test
sub
inc
xlat
mov
in
dec
sarb
in
out
sbb
pop
fisubs
mov
cmpb
std
out
fldenv
cwtl
subb
out
xchg
inc
push
or
mov
pop
dec
inc
leave
pop
enter
jge
adc
xchg
mov
add
xlat
cmpsl
shll
loope
mov
stos
push
push
xor
mov
outsl
mov
push
push
test
mov
xor
mov
js
xor
jns
loope
outsl
jge
or
mull
mov
sti
xor
mov
sub
or
fistpl
lret
xchg
cmc
xor
pop
mov
popf
dec
fisttpl
mov
mov
jg
push
ss
mov
dec
pop
cmp
jo
loope
cmpsl
mov
ffree
nop
mov
jno
add
pop
mulb
sub
sbb
clc
pop
xchg
bound
cmc
insl
lret
push
shrl
addr16
sub
push
stc
jl
test
bound
sbb
and
inc
cmp
and
push
fistl
xchg
sub
cmpsb
jae
cmp
repz
and
push
or
popf
jge
pop
scas
insl
clc
call
fcoms
dec
pop
cmp
lods
cld
ret
or
repnz
aaa
xor
pushf
fisubs
repnz
fisttps
cld
mov
imul
xchg
out
fstp
icebp
jge
popa
inc
xchg
lahf
leave
and
inc
mov
fiaddl
cmpsb
outsb
pusha
shl
xchg
cli
shll
outsb
dec
and
mov
sarb
int
mov
mov
jmp
lods
fistpl
mov
and
jp
fwait
movsb
xchg
dec
push
repnz
movsb
push
iret
mov
and
insl
pop
mov
sub
repz
std
push
aaa
out
notl
jp
fiadds
mov
adc
or
mov
mov
jo
enter
das
cmp
pop
fcoml
jle
dec
add
stos
cmc
cmp
mov
outsb
stos
cmp
cli
int3
lods
mov
lret
popf
sub
add
jno
call
pop
fistpll
cwtl
push
lds
lock
cmp
pop
xchg
jnp
test
loop
movsb
and
jo
in
inc
jp
lret
push
sarb
lods
mov
leave
pop
incl
mov
call
loop
outsl
push
sub
outsl
into
ficomps
jp
or
int
fsts
adc
mov
xor
lahf
jl
push
sbb
scas
mov
inc
mov
mov
loop
push
mov
add
mull
scas
mov
and
loop
xor
movsl
jae
dec
mov
loopne
jb
sarl
xor
ljmp
imul
orl
into
fcmove
and
add
mov
inc
mov
adc
pop
popf
adc
scas
sbb
mov
in
sub
mov
iret
jp
sbb
out
push
xchg
add
cltd
in
loope
inc
call
inc
js
pusha
pop
lret
insb
add
icebp
frstor
nop
push
xor
stos
fldcw
add
aas
xor
jge
push
das
xchg
call
mov
in
lret
lds
mov
fsubr
fidivrl
test
xchg
movsb
push
sub
andl
jg
jg
mov
cmc
and
inc
mov
in
dec
and
dec
pushf
xor
add
push
pusha
xor
aas
xchg
scas
inc
hlt
imul
sbb
mov
lea
push
fidivrl
and
js,pt
push
push
cmpsb
data16
pushf
sub
loop
or
pop
cmp
mov
out
cs
push
iret
mov
push
pop
ret
push
pop
dec
mov
lods
push
das
pusha
stos
rcll
adc
fiaddl
mov
fistps
pop
sub
mov
xor
dec
mov
xor
xorb
fimuls
jbe
repz
inc
pop
xchg
push
add
cli
shll
jb
insl
out
mov
rolb
push
or
sub
std
xor
call
out
out
decb
jb
cmp
ds
and
fwait
dec
pop
daa
pop
mov
mov
inc
int
push
mov
push
mov
test
in
pop
jmp
xchg
lea
jno
sub
dec
or
iret
sbb
aam
sub
dec
inc
xor
mov
jb
scas
adc
dec
dec
outsl
mov
inc
movsl
shrb
and
push
pop
imul
pushf
or
sub
loope
cli
cmp
inc
bound
into
movd
cs
jge
or
fst
shlb
subb
jecxz
mov
push
mov
es
pop
jmp
out
xchg
nop
movsb
jne
xchg
int3
pop
adc
pop
mov
stc
push
add
inc
rorb
dec
pop
inc
sbb
cmpsl
aad
mov
pop
frstor
push
lcall
in
pop
faddl
push
dec
inc
mov
sahf
pushf
mov
and
ret
cvtpi2ps
push
cmpsl
cmp
mov
call
ljmp
mov
pop
daa
pop
lods
push
and
stos
add
lret
adc
sub
jns
cmp
inc
movsb
and
pop
and
call
inc
fadd
sub
leave
mov
fsubrp
push
loopne
hlt
fidivs
ret
lret
outsl
iret
sub
outsl
rcll
jmp
push
push
ffree
popa
sbb
cmp
aas
aas
leave
jp
mov
scas
sub
std
push
nop
sub
xchg
nop
ss
pop
aam
nop
in
cltd
lods
cli
imul
rolb
into
inc
sub
xchg
xchg
jecxz
mov
movsb
and
sti
ljmp
mov
ficompl
push
xchg
inc
dec
mov
popf
cltd
jb
inc
mov
fs
leave
ss
jge
xchg
jo
pop
cmp
jae
js,pt
mov
in
jecxz
fwait
andl
inc
add
xor
sti
enter
xlat
dec
jns
inc
jecxz
stc
fsubl
mov
in
xchg
sbb
jo
int
xor
sbb
xchg
nop
std
adc
ss
dec
mov
xor
lahf
test
xor
popa
cld
pop
xchg
mov
test
jl
push
xchg
mov
pusha
lahf
hlt
inc
call
mov
ror
inc
pop
push
add
mov
es
cs
shlb
push
cmp
rep
les
in
inc
movsb
mov
dec
fucompp
mov
sti
aaa
cmp
mov
subl
inc
lock
pop
xchg
lahf
xor
pop
addb
mov
loope
cld
or
insb
arpl
inc
jle
or
xor
inc
adc
repz
push
push
rorl
xor
mov
pop
pop
fwait
add
mov
sbb
aaa
jge
ljmp
clc
test
jmp
stos
xchg
sub
ret
ficoms
cmp
sarl
mov
sub
push
mov
mov
jge
inc
outsb
adc
adc
sub
mov
mov
subl
adc
push
xchg
popf
or
addr16
jmp
int
pop
sub
cwtl
mov
xchg
push
add
mov
in
in
jl
ljmp
cmp
inc
rcll
lods
push
shl
push
call
rcl
mov
inc
xchg
clc
inc
scas
mov
out
loope
and
test
insb
xchg
loop
scas
and
into
fldcw
aas
adc
sarl
mov
subl
popf
adc
cmpsb
add
mov
stos
xor
sbb
cmp
cmp
nop
adc
jle
test
outsb
cmpsl
pusha
jns
mov
out
out
xor
dec
xchg
test
ss
inc
loop
and
gs
mov
andb
sahf
filds
xor
adc
into
push
ret
mov
mov
ljmp
out
ret
shll
ret
cmp
mov
sub
fsubrl
test
je
loopne
mov
xor
lahf
shrb
into
pop
push
xchg
mov
mov
xlat
int
shrb
cmp
push
mov
js
data16
outsl
nop
jno
int3
insl
imul
sbb
fdiv
rolb
dec
xor
dec
mov
jecxz
push
pop
jmp
out
and
mov
mov
add
call
cmp
repnz
cmpsl
mov
mov
rolb
push
insl
fmull
data16
push
daa
adcl
or
or
jne
cmp
test
pop
icebp
mov
pop
negl
es
ret
xchg
push
inc
cld
or
or
mov
lods
cltd
inc
push
push
fmull
cs
push
je
test
js
mull
jp
bound
mov
xor
mov
shll
aas
xor
stos
xor
mov
rclb
push
ja
sbbl
cltd
pop
in
test
loop
movsl
inc
cmp
dec
jge
pop
or
xor
jae
sahf
js
mov
mov
adc
add
cmpsl
xchg
in
sahf
dec
popa
pop
push
loop
add
push
es
or
test
or
adc
jb
mov
es
and
fwait
push
mov
mov
and
fisttps
rcrb
aam
inc
mov
and
fsubrs
sub
xchg
pop
es
cwtl
ja
arpl
jb
or
cmp
into
mov
insb
xchg
popf
imulw
push
cmp
in
popa
mov
aam
shlb
js
mov
rclb
scas
mov
ret
or
mov
lods
mov
xor
add
cld
imul
dec
and
cmp
arpl
imul
rolb
push
mov
xchg
cmp
jecxz
jge
pop
pop
cmc
sub
test
or
pop
cmc
mov
lret
sti
mov
inc
add
pop
ja
fmul
adc
daa
sub
mov
mov
jmp
jns
mov
nop
xor
xchg
xor
dec
jbe
stos
xchg
jl
out
adcl
aas
out
inc
adc
in
mov
fisttps
jbe
in
mov
dec
ja
sbb
jne
mov
adc
inc
out
ds
pop
fst
jl
inc
and
sbb
jmp
cmc
lret
sub
fmull
in
push
jle
inc
rcrl
outsb
iret
loop
inc
mov
sbb
cmp
cmp
and
mov
shl
pop
dec
inc
pop
cwtl
mov
lahf
or
jge
mov
cmp
dec
push
sahf
jne
sub
push
scas
cmp
cmp
pop
push
push
aam
mov
imul
mov
pushf
adc
fidivrl
pop
es
inc
push
mov
mov
les
sub
pop
mov
xor
pmulhuw
mov
jbe
fiaddl
daa
push
lret
inc
sub
xchg
lods
rorl
mov
addr16
out
scas
dec
and
inc
daa
dec
adc
sub
jb
pusha
xor
sub
and
in
ss
aas
fcompl
arpl
cmpsl
jns
orb
jg
cld
or
imul
ret
xchg
inc
adc
xor
popa
mov
mov
jmp
push
xchg
inc
out
test
or
jmp
dec
adc
push
or
aas
mov
push
test
mov
scas
mov
bound
jl
lea
mov
inc
xor
add
inc
cmpb
sbb
rol
aad
xor
pop
popa
add
lret
fs
lea
sub
in
push
xor
inc
repz
jno
or
hlt
or
aad
mov
jecxz
mov
cmp
xor
mov
cmc
dec
add
or
enter
xlat
fdivrl
pushf
std
jle
sar
adc
mov
jno
incb
faddl
cmpl
lret
pop
push
out
divb
out
mov
rorb
or
cmp
fnstenv
push
and
jg
adc
cmpsb
stc
testb
popl
push
inc
push
and
and
or
xor
imul
test
ss
xor
add
icebp
out
mov
ret
shlb
stc
test
xchg
fdivs
repz
mov
incb
pop
popa
xor
js
mov
xor
xorl
cs
push
cmp
inc
aam
ljmp
lods
jns
in
out
add
jecxz
mov
jbe
push
lcall
lea
push
in
pushf
mov
ret
scas
test
xchg
pop
shrl
es
cli
cmp
lret
repnz
sub
sbb
xchg
arpl
popa
rcrb
pop
aaa
xchg
cltd
adc
out
leave
pop
cwtl
xchg
pushf
sbb
dec
sbb
mov
rcrl
fwait
jno
push
es
mov
jae
jb
sbb
pop
mov
test
stos
jb
inc
or
icebp
aaa
sub
push
dec
roll
insb
mov
int3
sbb
ja
imul
push
cmp
comiss
test
les
push
sbb
or
jecxz
xor
dec
or
pop
jnp
pop
dec
test
stos
cwtl
inc
inc
jp
test
adc
push
daa
gs
xor
mov
jo
pop
fs
adc
aam
mov
adc
fstps
lret
out
push
add
test
mov
ret
adc
cmpsb
int
scas
lret
mov
mov
adc
addb
daa
sbb
pusha
sub
jle
cltd
pusha
pop
cmp
jae
mov
jae
into
es
ret
orb
xchg
sbb
dec
sbb
lret
push
out
cmpsl
lods
cmpsb
adc
xchg
cmpsl
mov
xchg
mov
enter
clc
and
in
push
orb
mov
add
add
add
sbb
mov
mov
bound
push
jno
out
clc
fisubrl
add
out
into
lds
sub
push
xchg
shll
mov
push
xor
or
jns
adc
mov
push
pushf
jl
lods
mov
shr
cmp
scas
lcall
mov
fs
cmp
aad
lea
repnz
fistpll
xchg
pushf
add
lcall
sub
dec
fwait
mov
push
rcll
cmp
pop
and
push
xor
mov
fsubl
outsb
cmp
jno
xchg
mov
cmc
jp
arpl
cmc
inc
mov
inc
mov
mov
pop
ljmp
mov
pop
xor
sarb
sub
mov
aas
jb
sti
shlb
adc
test
popf
xor
rolb
xor
xor
shlb
nop
xor
jmp
fdivs
icebp
mov
lods
jg
jle
test
out
mov
out
xchg
pop
mov
mov
test
iret
push
icebp
arpl
sbb
jl
movsb
cs
sbb
push
daa
out
xchg
out
mov
jbe
and
lds
mov
out
imul
in
in
push
sbb
inc
dec
cltd
lock
test
mov
dec
xor
fdivrs
and
mov
xchg
ljmp
test
mov
jnp
adc
stc
enter
pop
and
pop
sbb
ret
testl
adc
cmpsl
jge
cmpsl
js
adc
sbb
sub
daa
xchg
adc
stc
stc
sub
xchg
shll
lcall
cmp
inc
es
mov
cli
jne
adc
mov
push
fadds
sbbb
xchg
ror
jmp
cmp
mov
mov
mov
ret
mov
lock
xchg
mov
xchg
imul
lods
xchg
adc
adc
jg
sbb
mov
mov
subl
pop
repnz
xchg
testl
xor
repnz
mov
fsub
rorb
mov
mov
test
cli
lret
jmp
xchg
daa
pushf
fchs
xchg
pop
imul
aad
cwtl
nop
xchg
cmp
xchg
push
mov
push
cmpsl
or
pop
cmpsl
or
adc
rcll
adc
mov
and
or
xlat
inc
addr16
aad
xchg
inc
add
hlt
add
xor
aam
aad
and
and
xor
jns
dec
pop
xchg
jbe
outsb
in
lock
popa
sahf
decl
jbe
clc
pop
mov
repz
mov
imul
pop
mov
mov
and
insl
divl
cmovg
mov
jno
dec
insl
bound
push
dec
inc
mov
and
sahf
movsl
wbinvd
hlt
cli
push
in
push
aam
cmpsb
imul
mov
stos
aam
push
sbb
and
loopne
ret
out
or
jno
jp
popf
cmp
cmc
mov
mov
stos
iret
mov
xchg
mov
sub
popa
pop
repnz
cmc
push
inc
in
outsb
pcmpeqw
aam
divl
test
out
mov
inc
xchg
mov
xor
fcmove
jmp
xchg
cmpb
out
repnz
loopne
inc
leave
rcrl
pop
inc
ljmp
mov
push
mov
jne
jge
vpunpckhqdq
inc
adc
clc
out
xor
dec
enter
ljmp
jl
mov
aam
addr16
mov
mov
into
bound
bound
mov
fcompl
scas
or
xchg
rcr
xchg
std
dec
les
add
into
mov
jecxz
adc
cli
xchg
inc
pop
test
jp
outsb
jne
lret
sbb
inc
jbe
push
mov
lahf
out
mov
mov
dec
std
and
jo
mov
inc
mov
xchg
insl
cmc
call
sbbw
pop
mov
imul
dec
das
andl
test
pop
into
jae
out
jge
xchg
mov
repnz
fwait
cltd
mov
addb
cmc
xchg
in
int3
inc
mov
fildl
icebp
orl
fcoml
aaa
mov
sub
or
aam
leave
jecxz
stos
ds
xchg
bound
aam
mov
and
movsb
loopne
and
push
add
xlat
in
or
iret
enter
ret
movsb
dec
sbb
and
mov
pop
xor
cmp
jg
test
sub
xorb
mov
in
stos
subl
and
test
jp
sbb
push
xor
sub
ds
cmpsb
loop
inc
push
scas
cs
mov
mov
out
adc
lea
add
nop
mov
scas
jp
outsb
jbe
enter
inc
dec
xor
push
mov
icebp
movsb
adc
cmp
sbb
ret
popa
repnz
loop
lcall
push
jae
or
xchg
shrl
in
push
xor
jge
cmp
sub
and
lahf
inc
out
loope
mov
shll
in
and
xor
lods
mov
pusha
loope,pt
inc
mov
push
xchg
mov
inc
leave
std
in
movsl
mov
out
ret
pop
sub
out
lods
adc
jnp
ret
cmpsl
notl
lock
push
and
test
js
or
jl
pop
nop
into
adc
sub
cmp
pushf
sub
test
jp
jmp
outsb
jl
and
cmp
cli
inc
push
insb
add
loopne
loope
mov
movsl
dec
adc
add
idivl
adc
pop
addr16
jg
push
push
dec
mov
gs
inc
sbb
mov
adc
pop
lock
imul
sub
call
mov
cmpsb
imul
mov
ss
or
mov
fistl
in
test
adc
test
test
shl
idivl
mov
sub
rcrb
enter
cltd
shlb
fsubl
int
jmp
and
mov
mov
js
lcall
hlt
jo
test
out
push
pop
sbb
dec
stos
das
lret
out
mov
push
pusha
push
jp
jp
in
loope
xchg
jg
mov
xchg
adc
ret
dec
sbb
or
jp
dec
cmp
mov
xchg
clc
push
lcall
dec
sti
js
push
sub
pushf
add
jno
ficoms
cmpsl
jmp
mov
sbb
pop
out
xlat
pusha
insb
jnp
adc
imul
movsl
rcr
mov
jae
out
aaa
in
leave
sti
cmpsb
rdtsc
addr16
scas
cltd
ja
cmp
push
jne
dec
sar
loopne
je
and
and
addl
xchg
mov
pushl
sub
jne
int
sbb
mov
stos
xchg
insl
pop
and
fwait
out
xor
add
pop
xchg
mov
jo
sti
bound
sbb
xchg
jo
movsl
pop
sub
pop
cmp
xchg
arpl
test
test
pop
sbb
sub
jmp
xchg
mov
mov
cwtl
ror
sub
addb
sub
test
mov
in
lods
scas
in
and
enter
pop
push
loopne
mov
gs
scas
xchg
push
pushl
and
rcll
push
push
call
lahf
std
dec
loopne
scas
xchg
mov
aas
jnp
xor
sbb
icebp
stos
mov
scas
dec
out
subb
gs
jo
orl
xor
and
lods
enter
mov
sub
push
push
xor
fcompl
loopne
push
add
dec
dec
arpl
push
mov
arpl
std
imul
mov
push
xor
incb
insb
lods
inc
xor
cmpsb
repnz
jo
push
mov
xchg
or
leave
jmp
inc
jg
push
add
js
pop
rcll
icebp
inc
insb
imul
mov
push
add
mov
out
fsubrp
push
dec
push
mov
call
sbb
insl
lret
jl
aas
insl
shll
mov
sti
sbb
subl
daa
ret
or
das
fs
enter
xor
pusha
daa
loop
jmp
in
stos
xor
enter
lret
hlt
adc
dec
ds
mov
adcb
popa
lcall
and
jb
into
push
daa
fs
sbb
sahf
xchg
mov
xor
dec
push
mov
rcll
xor
jne
outsl
pop
lea
adc
mov
sbb
arpl
push
dec
paddw
jbe
cli
arpl
mov
addr16
insl
jbe
leave
enter
mov
jl
pop
inc
adcb
popf
or
fld
xor
push
sar
ja
jg
cltd
jo
lahf
test
mov
jle
aam
std
js
or
xor
fsubrl
dec
or
push
ss
loopne
push
fndisi(8087
adc
dec
mov
jp
sub
lods
sbbb
dec
adc
mov
cmp
xor
mov
adc
sbbb
xor
xchg
mov
cmp
fwait
jbe
xchg
push
xor
stc
xor
cmp
xchg
dec
adc
arpl
insl
arpl
xchg
in
adc
mov
mov
sbb
call
mov
mov
aad
scas
jnp
inc
int3
int3
sub
inc
adc
sub
std
das
mov
fsts
dec
mov
mov
xor
iret
filds
xchg
sub
xorb
xchg
addl
mov
mov
push
cld
push
pop
sti
dec
sbb
test
cwtl
adc
dec
cmp
xor
jg
jmp
dec
cld
jb
leave
movsb
sbb
push
movsb
push
adc
or
mov
sbb
mov
sbb
movl
in
push
adc
xchg
cmpsl
inc
push
iret
movsl
stos
xor
neg
rcrb
xchg
and
imul
rclb
adc
lcall
adcb
in
out
jge
sti
mov
adc
outsb
sarb
xor
pop
mov
sbb
leave
repz
push
adc
jne
mov
mov
jo
bound
inc
shl
dec
pop
imul
fdivl
xor
mov
mov
adc
popa
or
push
adc
sub
push
adcb
push
js
mov
xor
mov
es
and
enter
pop
pushf
shrl
into
stc
shl
ja
xchg
pop
cmpsl
pop
pop
push
aam
cltd
out
adc
jmp
mov
shlb
popa
int3
dec
add
mov
andl
addb
dec
test
aad
xchg
mov
imul
ficompl
pop
mov
notl
jnp
push
xor
data16
shll
ret
xchg
call
jecxz
and
xlat
mov
jne
pop
jl
xor
adc
cmpsb
bound
jle
stos
cmpsl
into
popa
or
jnp
mov
hlt
xor
shll
call
cmp
std
in
jge
push
push
fidivs
das
cld
mov
xchg
ss
rcrb
mull
dec
movsb
frstor
push
pop
repz
jbe
ret
outsb
lret
inc
push
test
scas
daa
xchg
dec
push
aad
stos
scas
aam
sti
ror
push
mov
xchg
mov
cwtl
cmpsl
mov
jmp
mov
or
push
dec
push
inc
rorb
jne
inc
dec
add
je
lock
lds
mov
stos
int3
jecxz
lock
hlt
pop
in
cmp
in
hlt
clc
imul
fdivrs
mov
lcall
jae
mov
xchg
ror
adc
mov
lahf
repz
pop
lock
xor
loopne
mov
sbb
jne
mov
ficompl
jo
in
fists
mov
fs
movsb
pop
loopne
inc
cmp
cmp
sbb
xor
sub
ss
xchg
test
push
push
add
jge
mov
out
inc
push
jo
sbb
push
lods
mov
sti
xchg
cmp
js,pn
adc
dec
inc
dec
sbb
xchg
or
leave
hlt
mov
pushf
dec
mov
xchg
jne
std
dec
fistl
lds
or
imul
int
hlt
mov
popf
xchg
jle
and
adc
imul
pop
pushl
and
inc
or
movsl
xchg
in
xor
jb
mov
ds
jns
dec
ja
loop
daa
sbb
test
jp
xor
scas
es
push
cmp
sbb
ret
pop
rorl
movsb
push
jns
lret
adc
inc
cmp
flds
stos
aam
jge
mov
push
fs
out
mov
sub
sar
jecxz
add
pusha
xchg
rolb
push
cmp
ss
mov
flds
cld
cwtl
pop
mov
mov
orl
pop
push
or
dec
xchg
add
sti
pop
cld
dec
js
sub
ror
nop
in
xor
and
stc
mov
lock
dec
adcb
pmaxsw
sub
mov
imul
movsb
jns
adcl
sbb
cli
adc
push
adc
int3
dec
push
repz
xlat
dec
stc
dec
loopne
or
stos
arpl
cltd
stos
jl
mull
jl
outsl
mov
insl
aas
test
out
pop
add
pop
shl
cmc
xlat
or
or
mov
scas
cmp
es
ss
dec
shl
mov
imul
adcl
jg
ror
nop
mov
mov
out
call
es
dec
pop
sub
and
sub
cs
mov
xorl
popa
lret
shrb
pop
stos
dec
inc
or
jnp
int
enter
jmp
pusha
mov
loop
dec
fimull
movsb
fisubrs
imul
ja
pop
sub
lcall
imul
notb
xor
sbb
mov
pop
adc
xor
mov
xchg
sbb
aad
fisttpl
xor
shll
push
int
cltd
push
xchg
inc
mov
std
mov
shll
fstl
mov
lods
insl
xor
cmp
in
or
insl
jne
shll
jnp
gs
popa
dec
rorl
sbb
sbb
or
and
mov
inc
and
imul
testl
or
sbb
movsl
ret
in
cld
data16
sub
imul
mov
lret
fcmovu
xchg
jno
ss
fiaddl
xor
insl
je
imul
jp
movsb
fwait
lret
clc
add
fs
inc
mov
es
fcomip
pop
sahf
jo
scas
mov
pop
xchg
jb
ljmp
in
pop
popf
jns
jnp
jnp
cmpb
fcoms
dec
aad
add
cmp
les
sbb
push
xor
fwait
dec
mov
xchg
mov
shl
lcall
xor
jbe
ret
jae
inc
and
insl
out
pusha
cmp
sarb
cmc
jg
sahf
mov
push
test
mov
xor
mov
sarl
ss
lea
dec
fnsave
add
push
dec
int
repnz
pop
fidivl
repnz
mov
cld
jb
add
cmpsl
test
mov
sub
add
dec
cwtl
popa
addr16
mov
add
and
mov
int
inc
push
sbb
dec
xchg
sbb
les
mov
push
adc
mov
or
imul
mov
jp
in
cltd
mov
mov
call
decl
icebp
push
xchg
sbb
sbb
xchg
es
mov
push
xor
cld
sub
jle
cmpsb
test
jmp
rep
imul
outsb
inc
pop
lret
xchg
mov
popa
xor
icebp
in
insb
idiv
jecxz
or
xor
enter
pop
fsubs
sbb
add
call
cmpsb
fnstsw
or
arpl
xor
xor
rolb
js
inc
cmpsl
js
add
call
cwtl
dec
pop
inc
sub
or
lock
mov
adc
sbb
enter
mov
xor
sbbb
mov
mov
icebp
int
mov
jg
xchg
mov
cltd
push
das
mov
jo
mov
arpl
leave
and
int
add
sti
cmp
stos
sub
bound
push
xor
adc
cmp
lahf
cmpsl
push
mov
daa
or
dec
inc
sub
popf
arpl
xchg
xchg
add
jns
repz
stos
xor
cltd
pop
mov
lcall
jns
adc
and
repz
push
les
push
test
aaa
cmp
test
jp
or
out
fisttpl
mov
out
dec
and
pop
dec
movsl
out
xor
inc
cmp
sahf
pop
subb
in
sbb
insl
incl
or
in
sbb
push
add
mov
push
insl
andps
out
adc
mov
pop
push
js
jnp
add
stos
and
mov
xchg
stos
mov
jecxz
mov
popf
out
ljmp
cs
xor
std
sbb
xchg
inc
iret
inc
pushf
mov
enter
xchg
into
outsb
jb
pop
into
push
jb
push
or
adc
fistps
in
jmp
jmp
repnz
jb
clc
or
hlt
add
lcall
repz
pop
mov
lods
inc
loop
lea
int
out
xorb
jecxz
sub
aas
imul
jo
std
xor
in
add
push
adc
icebp
mov
cmp
cs
xchg
ds
nop
mov
int
dec
loope
pushf
jl
lea
and
cltd
sub
fnsave
sbb
or
nop
xchg
aam
cmp
xchg
push
out
sub
push
loopne
nop
cmp
ljmp
or
rclb
mov
leave
or
aad
push
in
mov
dec
and
scas
stos
out
jmp
or
enter
fldl
pop
sbb
lock
imul
add
cmpsl
ja
data16
inc
xchg
and
and
sbb
add
jecxz
or
dec
xor
lret
scas
enter
push
mov
sub
test
mov
or
pushf
daa
add
outsl
dec
jns
enter
in
xchg
aad
sub
xchg
es
mov
push
push
jae
mov
xor
cld
out
xchg
jb
std
and
pslld
adc
push
dec
nop
push
and
loop
in
add
out
add
lcall
fistpl
pop
mov
sbb
popf
jecxz
sbb
fwait
cmp
nop
ficompl
sahf
fwait
in
jbe
popa
test
je
repz
pop
adc
adc
lahf
inc
gs
mov
or
lods
or
or
pop
mov
dec
loopne
movsl
mov
cmp
and
test
stos
flds
lahf
or
lcall
in
out
das
mov
hlt
mov
mov
inc
mov
jne
mov
cld
das
pop
or
rcrb
and
pop
pop
in
fldenv
lcall
loope
cld
insl
push
fs
scas
cmpb
adc
inc
cmpsl
fsts
add
sbb
jg
mov
pop
mov
fsts
cmp
daa
sbb
fstpt
push
sbb
jle
in
js
scas
dec
lods
xor
aaa
mulb
jg
jmp
mov
add
adcb
mov
add
psubsw
ret
push
or
jno
mov
push
loop
xchg
fisttpll
or
popa
dec
lds
xor
out
outsb
enter
std
mov
iret
fwait
inc
cmp
mov
gs
int3
adc
or
mov
lods
enter
in
sbb
insb
sub
xor
fldenv
cmp
cmp
mov
lea
call
sub
in
insl
in
inc
enter
ja
and
and
test
and
cld
add
pop
inc
xor
packuswb
xchg
mov
pusha
cmp
outsb
inc
push
sub
test
repz
pusha
sub
les
fiaddl
xor
stos
ljmp
inc
les
dec
dec
mov
cwtl
les
icebp
mov
fsubs
push
inc
xor
lods
dec
imul
cmpsl
mov
mov
mov
fdivp
mov
dec
out
xor
pop
cmp
loop
mov
stos
pop
and
aas
sbb
fimull
xor
mov
call
or
xchg
ds
sarl
insb
pop
xchg
pop
lds
and
rcr
addr16
jnp
call
int
sbb
mov
in
push
pop
stc
xchg
pop
mov
inc
and
ljmp
test
lcall
fwait
mov
or
mov
es
sbb
sub
sti
pop
mov
imul
xchg
js
inc
inc
xchg
movsb
xchg
movsb
cmpsl
sub
mov
scas
scas
scas
mov
cmc
mov
cmp
insb
out
or
cmc
aad
push
popa
movb
insb
mov
nop
mov
in
mov
in
inc
repnz
das
test
cmovg
fistpll
ret
frstor
pop
rcrl
testb
adc
mov
or
movsb
xor
mov
popa
cmc
shr
adc
jp
dec
push
and
scas
arpl
dec
mov
lahf
rorb
push
outsl
dec
lcall
and
add
aad
test
mov
ljmp
pushf
je
clc
loop
jbe
das
stos
jne
sub
xchg
mov
mov
and
jo
into
loope
out
xor
pop
cmp
gs
push
sub
outsb
adc
adc
test
inc
icebp
ss
or
or
test
xchg
push
call
or
fnstcw
stc
push
jno
stos
lret
in
inc
adc
mov
das
mov
mov
or
jne
xor
jecxz
cmpsl
sahf
inc
and
push
add
stos
scas
sahf
mov
mov
push
mov
sub
jb
adc
out
jl
dec
insb
mov
popf
test
add
std
scas
ficoms
fiaddl
test
sbb
cmp
leave
mov
icebp
push
jle
mov
pop
mov
dec
insl
dec
arpl
dec
fidivs
lods
in
pushl
imul
mov
aas
add
mov
and
sub
push
push
iret
aas
repnz
mov
sbb
pop
push
push
lcall
sbb
insl
pop
pop
scas
fiadds
inc
push
movsl
ficompl
adc
add
js
outsb
adc
leave
inc
jl
pop
imul
leave
data16
inc
push
rorl
mov
mov
xchg
xchg
mov
mov
push
and
cs
outsl
jge
jne
insb
cvttps2pi
movsb
sub
pop
clc
cwtl
and
aam
push
mov
lods
jecxz
mov
sbb
inc
mov
mov
pushf
lds
sbbb
jbe
out
dec
insl
pop
add
jns
jo
jae
mov
push
sub
push
and
cmp
push
pop
cmp
fidivl
jb
imull
stos
cmp
xchg
popa
in
sbb
xchg
add
mov
mov
xlat
mov
fsubrs
mov
fsubrl
dec
mov
add
fwait
pusha
sbb
inc
fidivrs
xor
and
sub
pop
dec
and
sahf
pop
addr16
test
in
mov
inc
and
leave
fwait
out
shll
pop
je
pop
jle
push
out
mov
scas
aad
lahf
dec
ftst
cwtl
push
iret
sahf
out
out
aaa
repnz
fdivl
aam
xchg
lock
sbb
jne
push
inc
mov
fistpll
and
sbbb
jno
push
imul
pmuludq
fidivl
jecxz
mov
jne
outsl
andl
adc
js
push
mov
dec
adc
scas
gs
scas
stc
aam
xor
fs
mov
arpl
int3
ja
dec
add
sub
fidivrs
mov
ljmp
dec
inc
mov
lret
cmp
jnp
push
pushf
xor
js
mov
jmp
or
mov
push
hlt
in
jns
mov
fsts
sbb
jle
xchg
cs
jnp
sub
xchg
imul
mov
xchg
xor
test
cmp
dec
cmp
in
sub
outsb
dec
dec
loop
push
mov
add
das
xchg
test
adc
jecxz
cmp
xchg
fistl
xchg
imul
jne
jmp
fisttpl
jg
mov
pslld
mul
push
and
lret
xchg
mov
pop
in
mov
mov
pop
icebp
adc
inc
call
lcall
add
subb
lock
add
mov
pushf
xor
xlat
icebp
enter
in
or
add
inc
fisttps
xlat
or
mov
mov
subl
cmc
ljmp
adc
xchg
outsl
xor
shlb
push
mov
push
leave
mov
xor
xor
xchg
js
int3
push
stos
push
in
or
out
xchg
dec
ljmp
inc
sbb
sar
mov
pusha
bnd
fisubs
call
inc
sti
jnp
mov
dec
into
pop
out
lcall
jecxz
addl
icebp
cmp
ror
mov
mov
xor
sbb
shll
lret
mov
sti
jge
leave
mov
push
out
into
add
xor
imul
xorl
clc
fucomp
loop
loopne
aam
dec
push
clc
push
popf
mov
outsb
jg
es
ficoms
aas
aam
or
xchg
dec
mov
and
mov
mov
push
insb
pop
cmp
pusha
jl
dec
lods
mov
icebp
inc
rcr
fadd
pop
aas
in
mov
ret
push
add
lahf
adc
adc
cmp
mov
mov
out
outsb
paddsb
hlt
dec
add
jmp
movntps
test
sbb
cmp
shlb
xor
mov
dec
jnp
out
push
add
add
loop
sahf
out
rorb
inc
out
loopne
add
cmpsl
pop
jo
jne
pop
divb
pusha
stos
sub
nop
out
ljmp
cmp
loope
stc
mov
ss
jmp
imull
mov
dec
stos
xchg
jae
imul
sbb
inc
lret
mov
or
leave
mov
and
mov
pop
cld
jmp
icebp
shl
stos
lods
dec
mov
addr16
xchg
jl
push
and
push
psadbw
sahf
xor
add
inc
cmp
lds
mov
leave
dec
cmpsl
lcall
ss
fiaddl
xchg
add
stos
xchg
jns
inc
jno
and
jle
movsl
push
test
mov
ret
dec
lea
mov
fstp
lods
sub
int
test
cmp
dec
sub
xchg
test
mov
icebp
pushf
mov
mov
xchg
ss
in
add
lods
xor
jg
divb
repnz
ffreep
sbb
mov
imul
pop
pop
dec
aad
push
jg
push
jg
mov
in
pop
scas
sti
subl
int3
ret
jb
in
xor
movsb
call
dec
push
and
std
rorb
leave
push
and
cmp
dec
xchg
lods
stc
cmp
out
subb
test
dec
push
mov
rcrl
movsb
mov
in
lock
call
push
xor
or
and
pop
hlt
cmp
lock
push
pop
dec
mov
jb
or
xchg
arpl
xchg
push
jae
jo
ljmp
lods
push
enter
sbbl
jb
mov
or
out
bound
cmp
ss
pop
jl
ficoms
mov
pusha
mov
fiaddl
adc
nop
shlb
push
int3
leave
in
mov
int
stos
mov
stos
sbb
enter
jle
in
add
mov
cmp
xor
into
xchg
cmp
sbb
mov
dec
imul
push
sbb
aas
das
pop
pop
add
fimuls
mov
sub
or
mov
rcrb
adc
mov
dec
imul
int3
push
int
dec
incb
push
push
out
into
out
std
stos
inc
cmp
mov
jo
xchg
sbb
in
and
jbe
aas
lret
shlb
jbe
lock
add
sbb
jne
adc
push
out
sahf
popf
test
and
call
mov
shlb
sbbb
pushf
pop
pop
sahf
nop
adc
or
jle
mov
or
mov
cmc
push
mov
push
inc
pop
mov
jae
push
mov
add
ja
ret
cmp
imul
or
ret
xchg
adc
ja
insl
cld
shll
test
push
xchg
sbb
subb
fcmovbe
adc
mov
mov
cmp
inc
out
pop
dec
or
filds
fidivl
idivb
sti
scas
outsb
cmp
jmp
push
xchg
bound
pop
xchg
mulb
mov
nop
repnz
dec
popf
add
adc
adc
jb
insl
fistl
pop
andb
movsl
pusha
push
imul
inc
add
aaa
xor
sbbl
fs
mov
popf
negl
mov
addr16
inc
dec
and
jae
mov
and
cld
add
mov
sti
mov
push
mov
pop
add
jns
ja
outsl
lods
stos
ss
aaa
xchg
xchg
lahf
jge
lods
mov
pusha
cmp
testl
andb
cmpsb
sub
jne
adc
stc
xor
jno
push
outsb
imul
call
aad
inc
xor
sbb
je
test
stos
cli
adc
add
movsb
enter
fwait
push
repnz
cld
jle
lahf
test
repnz
aad
roll
adc
ja
sub
lods
push
cmc
adc
cmp
mov
xor
push
mov
cli
push
bswap
xchg
test
add
sub
cs
cmp
sbb
pop
mov
dec
orl
jae
inc
shl
inc
stos
rcrb
lret
fiaddl
cbtw
inc
scas
call
sbb
adc
xchg
xlat
push
stos
push
pop
or
jmp
mov
pusha
sbb
mov
cltd
mov
mov
mov
and
or
mov
add
out
iret
data16
imulb
pop
xchg
enter
cmc
cmp
cmp
sbb
mov
lahf
in
es
jno
jo
push
ja
insb
pushf
enter
repnz
or
ret
mov
sbb
fistl
mov
xor
xchg
fmull
movsl
fwait
mov
inc
fcmovu
mov
xor
mov
ja
cltd
xchg
sti
pop
loope
pop
and
leave
dec
movsl
jo
cwtl
scas
hlt
push
dec
sbb
movsb
movsl
sbb
insb
test
dec
popa
jge
loopne
mov
push
mov
adc
cwtl
xor
add
add
or
les
mov
push
mov
xor
out
cmc
stos
test
fcom
pop
adcl
rorl
mov
push
jecxz
aas
lret
lret
adc
cld
pop
pop
mov
xchg
std
jl
mov
push
movsl
push
outsl
jmp
adc
xor
loop
sbb
sbb
sub
mov
sub
loope
mov
inc
es
popa
or
dec
lods
xchg
dec
push
push
addr16
in
jg
sub
aaa
adc
push
sub
test
aaa
sbb
gs
out
mov
jb
mov
rcrl
inc
mov
cmp
and
or
jmp
testl
fs
sbb
cli
push
arpl
mulb
jg
lock
add
dec
and
inc
test
outsl
jp
shr
add
gs
mov
insb
xor
and
stos
and
sbb
sbb
inc
mov
dec
aaa
int3
ljmp
pop
cmc
push
push
scas
inc
imul
sbb
add
insl
xchg
pop
lret
mov
jns
popf
fisubrs
aam
push
sub
mov
outsb
sub
fidivs
rcrl
push
nop
mov
mov
xchg
rcrl
cwtl
negb
add
lock
and
xor
mov
insl
leave
into
lret
mov
fdivrs
outsl
and
cmp
fcoms
fadds
aas
xchg
jge
mov
inc
bound
movsl
subl
add
xchg
jno
xchg
pop
inc
ret
pop
jb
jnp
loope
xchg
dec
sbb
data16
rorb
cmpxchg
add
pop
mov
or
cmp
vpmaxsw
or
push
in
addb
repz
imul
test
fsubrl
pop
aaa
dec
daa
fisubl
aam
imul
insl
cli
mov
or
and
sbb
xchg
jns
and
mov
add
sti
cwtl
mov
mov
xor
out
aas
jns
sbb
dec
dec
push
test
ljmp
call
push
notb
jno
mov
lods
movsb
sub
nop
dec
jp
int
cmp
inc
pusha
scas
mov
loop
cmp
loop
lock
inc
inc
sub
out
mov
cmpsl
pusha
xchg
dec
cltd
adc
daa
pop
iret
cmp
sbb
iret
sub
gs
pand
add
ss
xor
sub
rol
fsubs
int3
popf
into
and
mov
pop
sbb
sti
mov
loopne
mov
notb
int3
sub
sbb
cmc
ror
jnp
inc
lcall
sbb
fldenv
out
push
inc
roll
mov
aam
cmp
clc
cmpsb
adcb
or
xchg
jnp
jae
or
lock
outsl
cmp
sbb
mov
hlt
cwtl
pop
and
in
cmp
leave
mov
adc
fsubrp
mov
popf
es
enter
xchg
adc
insl
pop
add
pop
adc
mov
jmp
jecxz
mov
scas
std
push
adc
mov
and
or
scas
inc
mov
or
mov
cli
dec
sbb
xchg
pop
mov
je
mov
sbb
jae
repz
pop
fisubrs
push
mov
cmp
ja
or
pop
inc
cwtl
out
jns
mov
in
and
xchg
and
rorl
push
xlat
push
scas
je
cmpsb
mov
sub
pop
xchg
mov
add
loope
fwait
adc
lahf
cmpsl
in
insb
movsl
add
jnp
xor
push
xchg
filds
sub
adc
or
mov
nop
in
cmp
xchg
push
xchg
negb
lret
test
or
push
inc
cwtl
mov
ja
outsl
test
push
gs
es
xchg
mov
loope
clc
notl
mov
popf
inc
lcall
ret
inc
outsb
insl
inc
mov
iret
xor
mov
push
ret
xchg
scas
mov
lds
mov
pop
ja
jl
fincstp
not
je
mov
clc
mov
mov
fwait
dec
adc
mov
sub
lahf
es
inc
lcall
jge
pop
ss
jbe
daa
mov
sbbl
xor
mov
mov
pop
adc
int
or
fdiv
xchg
ret
jmp
out
imul
lds
jle
repz
loope
push
dec
stos
adc
jno
rol
xchg
sub
push
in
push
cmc
sub
gs
ret
pop
sarl
jge
push
enter
call
repz
mov
or
outsl
mov
lcall
xchg
cmp
adc
xor
pop
pop
lods
sbb
cmp
mov
mov
pop
pusha
adc
movsb
adcl
sub
push
dec
pop
cmp
movsb
mov
push
popa
or
outsl
mov
insl
stos
cmpsb
jbe
dec
inc
mov
xchg
jno
arpl
in
or
pop
adc
orl
sbb
xor
in
movsb
mov
jno
sbb
ss
idivb
aaa
nop
dec
popa
ret
les
mov
or
in
inc
orl
jg
enter
mov
cmp
cmp
mov
adc
mov
push
mov
jmp
xchg
std
cmc
pop
cwtl
pop
or
aad
inc
xchg
adc
pushw
ret
jne
mov
fsubrp
dec
pop
aam
gs
andb
movsl
inc
or
cltd
subl
out
xlat
stos
dec
sbb
scas
xchg
or
sbb
jo
test
sbb
mov
loope
lock
jne
adc
test
sub
lcall
inc
push
or
movsb
push
pop
out
es
xorl
mov
call
xchg
call
sbbl
pop
mov
dec
mov
inc
sbb
push
test
push
mov
into
push
and
stc
sbb
sbb
bound
movsl
imul
insb
inc
int3
xor
sub
insl
xor
jl
xchg
cmpsl
jp
aaa
sub
scas
pop
add
mov
sub
or
call
scas
stos
inc
push
mov
mov
aad
jbe
cmp
scas
enter
jecxz
jns
and
jae
sub
ds
adc
inc
pop
xchg
cmp
pop
dec
jmp
dec
jge
lods
mov
mov
pop
mov
subb
les
jle
inc
jecxz
lahf
mov
mov
sbb
mov
jns
and
addl
or
rcl
dec
or
pop
mov
sub
inc
mov
test
stos
xlat
mov
daa
cmp
fldlg2
mov
das
cmp
test
xor
jg
jl
dec
sub
jle
push
decl
xor
js
and
jp
ja
es
sub
lock
push
sti
shll
rcrb
xchg
movsb
add
sub
cmc
xor
jecxz
lea
xchg
xchg
sahf
jmp
jmp
xor
inc
mov
stc
sbb
lds
nop
and
nop
mov
mov
jge
or
rcll
jle
loope
stos
shll
pop
push
lea
lock
in
cs
push
jge
lahf
dec
imul
mov
mov
jp
cwtl
imul
cmpb
setg
ret
jo
pop
xchg
pop
jns
xor
pop
xchg
inc
in
cltd
daa
xchg
fmulp
pop
xchg
and
fisubrl
jb,pn
push
adc
xorb
aas
xor
imul
mov
jecxz
leave
mov
test
mov
push
sahf
inc
out
ljmp
pop
outsb
test
insb
push
xor
cmpsl
scas
inc
stc
repnz
jle
mov
pusha
lock
mov
aam
int3
mov
lods
sarl
dec
mov
sbbl
jnp
xchg
mov
push
jo
jmp
outsb
jns
fdivp
mov
lea
in
mov
jl
adc
in
ja
xchg
fldenv
cwtl
mov
xchg
leave
mov
mov
xchg
sub
leave
stos
test
cmp
jl
pop
loop
xor
lods
clc
xchg
or
jns
mov
jmp
pop
insl
inc
or
cli
lods
and
repnz
push
add
lods
imull
cmp
jl
mov
sbb
cmp
push
scas
mull
inc
xchg
sti
inc
xor
jp
lcall
xchg
mov
mov
or
addr16
sub
cmc
out
pop
sbb
mov
in
pop
in
mov
dec
mov
push
inc
lods
sbbl
dec
cs
pop
imul
sti
ja
fsubr
cmp
mov
stc
cmp
push
sub
mov
mov
mov
out
mov
inc
loop
sbb
or
mov
and
sub
in
dec
pop
cmpsl
xor
and
dec
out
ss
imul
lods
lds
icebp
scas
cs
out
repz
push
dec
xor
jbe
repz
out
push
sbbb
mov
test
xor
sbb
cltd
das
fs
out
push
xchg
pop
scas
lret
add
sbb
add
fistpl
or
rep
pop
gs
les
adc
push
clc
sub
lock
mov
pushf
xchg
jp
xchg
inc
jae
pop
popf
push
imul
inc
cld
dec
push
sub
lock
or
subl
lret
imul
iret
es
or
xor
push
sub
outsb
rcrw
add
jge
in
fildll
out
lea
xchg
je
lret
fs
add
push
or
inc
sub
dec
cli
and
fidivrs
push
sub
adc
xchg
cmp
ja
inc
scas
xchg
mov
push
and
fdivrs
jb
cmpl
je
dec
popf
xor
pop
int3
mov
dec
xchg
pop
add
aad
mov
int
xchg
mov
bound
pushf
inc
mov
ret
push
pop
add
sub
imulb
cli
into
adc
out
sbb
xchg
test
and
xchg
adc
push
push
scas
mov
lret
and
lret
fisubrl
out
mov
stc
out
popf
ss
jae
daa
sbb
test
loope
xchg
push
lahf
push
repnz
roll
ret
insb
scas
cmpsb
mov
cmp
adc
push
mov
inc
inc
cmpsb
icebp
arpl
push
pop
adc
outsl
sbb
ja
fbld
pop
inc
and
push
int3
scas
sti
mov
lret
mov
mov
xchg
pop
dec
xchg
imul
into
and
mov
push
cmc
inc
sbb
jle
push
adc
pop
cmp
dec
mov
xchg
mov
mov
inc
nop
mov
ret
cmc
mov
mov
mov
in
xchg
push
scas
or
sub
cmp
das
aam
jo
sub
xchg
push
dec
out
inc
or
push
dec
ljmp
loope
mov
adc
mov
int3
je
enter
xor
subb
enter
cmp
mov
lret
cmpb
adc
and
and
sub
pop
lahf
xchg
outsl
outsl
cmp
sbb
bound
repnz
mov
xor
out
inc
sbb
xchg
xor
in
jnp
inc
shlb
shr
insl
and
mov
and
mov
mov
or
jl
mov
dec
add
inc
jg
mov
dec
pop
enter
inc
outsb
dec
scas
push
in
popf
inc
pop
lea
dec
inc
negb
rcrl
and
and
xchg
pop
push
pop
repz
add
adc
movsb
popa
adc
push
cmp
data16
icebp
push
inc
xorl
rcrb
js
lea
pop
dec
test
sbb
mov
push
push
out
sti
outsb
sbb
mov
jns
in
sarb
out
mov
mov
add
sub
pop
mov
mov
lock
rcr
ret
je
test
or
jbe
and
mov
cmp
cmp
frstor
nop
mov
test
ret
pop
aas
push
jb
inc
mov
jns
stc
inc
xor
cltd
xchg
lea
stc
arpl
cmp
roll
out
movsb
dec
and
adc
test
xchg
fs
out
push
cwtl
loope
adcl
dec
sub
cmp
testl
loopne
mov
je
mov
and
push
or
subb
nop
imul
stos
pusha
pop
sub
std
insb
mov
mov
lret
scas
pop
lcall
loopne
sub
push
cmpl
leave
mov
mov
sub
pop
mov
fidivrs
push
inc
push
ret
and
int3
ljmp
ret
insb
rcrb
jae
xchg
lods
push
fs
xor
pop
sub
push
cltd
push
mov
cmpsb
andb
sbbb
sub
cmpsb
mov
or
fisubrl
adc
or
jle
add
hlt
adc
xchg
in
addr16
push
cli
sbb
sub
jae
pinsrw
loop
push
iret
xor
dec
jnp
add
adcl
jecxz
xchg
cmc
test
or
cmc
pop
addb
sub
mov
loopne
repnz
sub
add
mov
enter
jne
jno
cwtl
cmpsl
push
push
add
fsubr
xchg
push
cmp
pop
ret
icebp
lcall
in
les
sbb
cmp
lods
push
iret
or
mov
or
cmp
popa
inc
cmp
in
add
in
jb
jbe
in
lcall
dec
cmp
pop
mul
mov
int3
jb
push
cwtl
out
mov
push
mov
rolb
das
pop
push
mov
pop
decb
adc
sbb
inc
and
adc
jbe
adc
xor
pop
xchg
sub
out
xor
jae
and
imulb
dec
push
cmp
sbb
out
push
add
cmp
sbb
aam
pop
movsl
or
shr
jnp
lcall
in
and
and
out
lret
inc
dec
ja
insl
js
ret
or
push
orb
lods
ret
mov
dec
jge
xchg
pop
ja
push
outsb
in
push
and
subb
mov
cmp
ljmp
out
push
sahf
pushf
add
int3
cmpsb
mov
iret
add
leave
enter
push
in
adcl
xchg
rorl
push
test
cmc
xchg
adc
and
push
adc
leave
mov
cwtl
sub
cmpsb
mov
shl
ds
push
sub
xor
cmp
aaa
out
sbb
mov
in
mov
xchg
jne
cmc
addr16
or
test
sub
inc
inc
stos
inc
rcrb
enter
pop
arpl
mov
cmp
sub
jmp
fldl
push
cs
aad
inc
jecxz
fbstp
xchg
stc
mov
lahf
mov
int3
and
movsl
push
pop
imul
lods
in
add
lret
rcrb
in
jp
xchg
inc
xorb
sub
pop
add
jmp
xor
mov
inc
test
nop
mov
ficoms
adc
fwait
int
dec
push
pop
sbb
test
mov
push
ret
add
das
dec
pop
sti
lods
fidivl
pop
xchg
dec
imul
mov
sub
pop
mov
mov
lods
lods
sub
pop
mov
cwtl
aam
mov
xchg
push
dec
in
xchg
nop
cmp
and
cmpl
faddp
jb
adc
mov
cld
pop
sub
sbb
nop
out
repnz
repz
aad
lret
adc
icebp
mov
add
dec
jae
pop
cmp
notb
mov
fsubp
movsb
jge
mov
or
mov
and
adc
push
jno
cmpsb
mov
loopne
mov
mov
xor
pop
xor
push
sahf
cmp
std
jp
aaa
xchg
das
inc
jp
sub
push
add
cltd
clc
jns
movsb
dec
lahf
jnp
sahf
std
add
iret
xchg
imul
sub
add
fstpt
sbb
shrb
sub
or
xchg
push
clc
xor
sub
dec
push
out
push
insb
sbb
mov
test
jl
mov
pop
rcrl
xor
jle
sarl
lahf
adc
add
or
lds
mov
mov
lret
jmp
aas
ja
outsl
sub
sub
fisttps
mov
xchg
xor
fcmovnu
push
leave
dec
hlt
or
mov
mov
gs
pop
test
jge
popa
into
jl
rcll
ss
addr16
in
push
ljmp
sub
mov
push
jno
lahf
xchg
leave
xor
mov
and
addr16
sub
cmp
sbb
inc
out
pushf
imul
jae
push
xchg
add
fcomip
into
jae
fidivrl
push
lock
adc
push
dec
rol
inc
and
jp
jg
xchg
mov
scas
and
xchg
cmp
jb
jl
push
sub
xorb
cwtl
and
insb
int3
push
out
nop
ret
mov
mov
dec
push
jae
dec
aam
lock
and
jne
adc
mov
cmc
inc
xor
or
adc
fists
scas
das
dec
push
adc
lahf
cmp
mov
adc
cmpsb
insl
xchg
adc
push
xor
fdivs
inc
sbb
or
pop
movsb
popf
test
mov
rcll
xchg
test
cmpsb
pop
pop
fwait
lret
mov
mov
jle
stos
xlat
sbb
loopne
cwtl
ds
and
adc
pop
sbb
cs
push
mov
divl
sub
leave
dec
subb
ss
jnp
mov
scas
mov
add
adc
loop
push
bound
sbb
jg
int
repnz
shl
sub
aaa
inc
xchg
lock
pop
pop
daa
mov
mov
xor
lahf
xchg
insb
imul
int
je
cmpsb
lds
daa
icebp
xor
addr16
lock
nop
movsl
jge
enter
lea
or
inc
adc
jns
dec
sub
filds
mov
cmp
mov
fbstp
lds
aad
inc
sti
lcall
aad
pop
cmc
in
push
push
in
into
sar
mov
inc
pop
xor
mov
sub
lahf
push
sub
popa
cmp
shlb
push
pop
mov
push
add
and
iret
xchg
and
cmp
inc
ljmp
dec
push
xchg
popf
jg
outsb
dec
dec
mov
mov
xor
mov
push
sub
rclb
call
popf
add
dec
dec
add
pop
sti
cmpsl
dec
xchg
cs
add
sbb
icebp
test
out
adc
data16
dec
sub
int
enter
xchg
addr16
in
ja
inc
dec
sbb
cltd
xor
cmp
imul
or
in
pushf
cli
lret
cmp
lahf
mov
movsb
inc
xchg
imul
in
xchg
shlb
xchg
adc
daa
cltd
jb
and
movsl
into
shl
cmp
mov
jno
and
jnp
out
out
mov
inc
cltd
lock
mov
cltd
sbb
push
imul
and
or
outsl
fbld
pusha
mov
mov
mov
pop
out
mov
cwtl
sbb
roll
jecxz
int
loop
enter
or
sub
or
cmpsl
mov
lods
xor
sarb
out
or
vmread
cmp
cmp
cltd
shlb
inc
fdivl
jle
and
lret
cmpsb
mov
ja
sub
outsl
xchg
loop
xchg
stc
addr16
std
lahf
or
das
adc
add
sar
es
cs
cmp
xor
xor
stc
rcl
lods
add
aam
dec
jnp
lods
int
popf
sbb
out
scas
push
dec
jge
push
mov
and
out
pusha
or
popf
mov
sbb
in
aas
jg
imul
cmp
fistl
pop
dec
and
addr16
mov
fucom
hlt
push
inc
stc
xorb
dec
inc
push
pop
push
addl
pop
adc
pop
sarl
in
mov
add
js
sbb
sarb
mov
lret
out
cwtl
in
int3
xor
push
push
cmpsb
pushf
xor
or
pop
jae
clc
lahf
call
xchg
addr16
pop
or
add
sub
mov
dec
imul
pop
lods
cmp
mov
cmp
jecxz
sarl
negl
mov
ja
xchg
arpl
adc
push
mov
loope
dec
in
bnd
data16
sub
push
or
or
push
addl
dec
loop
gs
inc
je
scas
lcall
inc
outsb
dec
movsb
sbb
mov
inc
sbb
mov
inc
sub
and
das
inc
and
fwait
xchg
in
lea
fsubs
movsl
dec
cmp
add
imul
mov
add
imul
hlt
mov
mov
xor
push
inc
leavew
xchg
popa
les
mov
sahf
mov
xor
add
and
outsb
cmp
outsl
and
pop
jle
xchg
xchg
out
fucom
sbb
adcl
fistps
sub
cmpsl
jmp
leave
adcb
mov
xchg
fcmovnb
les
addr16
idivl
outsb
mov
pop
inc
jnp
scas
out
ds
loope
jmp
push
mov
lock
or
and
bound
gs
adc
data16
sub
scas
jne
cmp
shll
sub
hlt
mov
fidivrs
lods
pop
dec
stc
pop
adc
fldl
add
in
push
mov
sbb
push
lcall
mov
xor
cmpsl
jge
stc
sub
mov
shll
pop
lcall
push
xlat
mov
mov
mov
rclb
pusha
jl
jbe
rcr
xchg
mov
mov
dec
iret
mov
outsb
cmp
dec
xchg
std
inc
push
fisttpl
xor
dec
cmpsb
jg
xchg
sub
inc
xor
icebp
push
sti
xor
pop
or
jnp
sub
or
pop
loope
push
adc
sbb
inc
loope
mov
or
push
mov
imul
jnp
push
fldl
cmpsl
leave
leave
addr16
xor
jmp
xchg
shll
inc
push
dec
mov
and
test
les
sub
ret
xchg
pop
inc
addr16
test
ja
jmp
jb
push
push
xor
mov
ljmp
imul
mov
mov
out
insl
clc
adc
lock
sbb
mov
loopne
ret
aas
xchg
mov
pop
or
add
push
cmc
xor
xchg
enter
jecxz
scas
out
daa
xchg
imulb
int
cmpsl
push
sar
mov
inc
insl
mov
xchg
adc
mov
xchg
lcall
xchg
dec
push
test
sub
mov
movsb
stos
jecxz
mov
iret
adc
js
pop
push
loop
xor
in
fistl
xor
add
sahf
jae
movsb
mov
sbb
outsb
js
in
dec
jb
daa
mov
gs
inc
push
lods
in
mov
mov
xlat
cli
inc
inc
notb
stc
arpl
push
les
addr16
addr16
fsts
repz
pop
aam
xor
notl
jp
clc
ds
adc
cmpsl
or
xor
and
insl
add
movsl
in
pusha
mov
xchg
jmp
push
cmp
add
es
movsb
repnz
out
adc
out
nop
push
pusha
jae
icebp
jp
add
jo
cli
xchg
push
daa
mov
and
xlat
xchg
pop
dec
arpl
add
lds
pop
gs
in
popf
repz
pop
push
stos
lock
lods
dec
or
stc
mov
mov
mov
mov
and
daa
aaa
cmpsb
adcl
mov
xchg
mov
stc
sub
ret
push
dec
hlt
sbb
xor
imul
gs
iret
sti
cltd
cli
xlat
hlt
or
cwtl
stos
test
rorl
fistl
outsb
fbstp
lods
ds
lahf
jno
int3
adc
xchg
loope
mov
and
sub
inc
movsl
aam
inc
mov
pusha
adc
subb
out
push
adc
stc
fcompl
or
lret
sbb
push
mov
xchg
sbb
mov
dec
cld
jns
pop
mov
or
mov
shl
cltd
xor
mov
and
adc
mov
pushf
sahf
xor
in
rorb
mov
loop
mov
repnz
sbb
add
repz
rcrb
rcl
dec
in
xchg
mov
add
add
adc
or
sbb
sub
add
dec
pop
out
adc
dec
push
neg
mov
aas
outsl
push
push
dec
lret
jecxz
push
pop
inc
lcall
movsb
mov
data16
roll
jecxz
nop
cltd
cmc
or
nop
test
inc
aam
int
jg
insl
mov
mov
jecxz
loope
sub
mov
push
sbb
ja
negb
test
testb
js
mov
sub
xchg
loop
push
push
cmp
cli
cmp
xchg
dec
mov
jl
lcall
out
out
xchg
movsb
xchg
inc
cs
sbb
inc
add
aas
stos
testb
or
adc
mov
int3
sbb
and
test
rcl
sbb
add
adc
out
scas
lret
xor
nop
ss
or
mov
xchg
ja
pop
push
in
movsb
and
inc
ljmp
lea
sub
mov
pop
sti
pushf
xor
mov
cmp
das
andnps
mov
mov
push
mov
js
pop
add
pop
nop
movnti
lods
loope
imul
cmp
js
pop
lds
mov
cmp
push
je
add
sbb
pop
or
jo
xor
pushf
jg
rolb
sbb
and
mov
pop
fcomps
mov
in
push
std
lock
out
ret
in
dec
and
mov
mov
xor
lret
repz
adc
or
insb
and
mov
call
inc
aaa
dec
adc
es
push
iret
vunpcklpd
mov
dec
negl
cmp
push
in
mov
cwtl
ficoms
enter
sbb
in
push
leave
outsl
mov
sbb
mov
jno
loope
es
inc
adc
imul
popf
idiv
scas
aas
add
xorl
or
xchg
testb
pusha
ljmp
xchg
sub
loope
adcb
xchg
push
sahf
repz
inc
out
pop
add
add
adcl
pop
sub
and
jmp
and
push
stc
out
lods
push
jecxz
movsl
int3
xchg
jg
clc
je
ljmp
or
sub
or
xor
jg
adc
arpl
inc
ljmp
xchg
xchg
aaa
test
mov
mov
inc
dec
add
xor
sbb
out
adc
pop
aad
push
popa
add
jae
out
adc
addr16
or
push
lahf
aaa
jns
sbb
rolb
es
cs
or
out
cmp
and
xor
pop
or
mov
fisttps
stos
insl
dec
mov
mov
lahf
pop
sub
push
jp
addb
and
inc
insb
mov
jl
bound
or
jl
push
out
xor
mov
mov
jecxz
pop
mov
rclb
jl
pop
test
push
sbb
pusha
adc
rclb
mov
les
jmp
or
dec
inc
or
hlt
adc
inc
popf
or
sub
adc
cld
xchg
mov
sub
mov
out
outsb
inc
jp
gs
lods
insb
inc
gs
insb
jecxz
xor
ljmp
xor
fbld
inc
in
test
sarl
out
bound
mov
loopne
repz
pop
sbbl
jp
dec
pop
int3
icebp
lcall
jp
sbb
mov
jge
mov
mov
inc
in
aad
inc
nop
icebp
push
lahf
imull
cs
fcomi
inc
xchg
ja
jae
repnz
xor
pop
cmp
fs
icebp
mov
cmp
imul
pop
cmc
adc
fadds
andl
add
push
dec
mov
jb
mov
leave
push
in
dec
fwait
mov
sub
xchg
inc
jae
add
nop
cmp
rorb
in
jmp
test
pop
inc
test
cmp
adc
out
cld
lcall
inc
and
insl
jb
mov
jbe
mov
add
iret
test
sub
xor
das
pop
in
pop
cmpsb
add
cmp
cmp
cmp
std
dec
gs
jmp
mov
dec
and
lret
and
mov
lods
pop
fs
adc
sbbb
test
mov
sub
test
dec
sub
cmp
pop
cmp
jl
pusha
xchg
inc
cmpsb
sbb
xor
js
int
sbb
pusha
ss
mov
gs
cs
mov
jge
lcall
repnz
pop
mov
jb
gs
adc
fwait
xchg
repz
outsl
pop
movsb
lea
or
or
adc
dec
fwait
xchg
outsb
cmpl
mov
inc
insl
xchg
inc
mov
ljmp
mov
dec
and
addl
pop
lahf
scas
clc
imul
jecxz
aaa
int3
cmpsb
inc
mov
pop
sub
mov
jno
enter
or
lahf
add
ja
mov
push
cmc
or
shlb
bound
fs
sbb
je
cmp
cmpsb
mov
test
stos
roll
les
mov
aaa
push
mov
mov
bswap
mov
push
fcmovbe
mov
sbb
xlat
in
inc
test
lcall
cmp
mov
mov
imull
scas
xlat
xchg
inc
cmp
dec
lods
or
imul
or
mov
mov
xlat
int
or
sbb
out
out
dec
inc
sbb
inc
loopne
mov
push
sbb
mov
adc
push
add
rorl
adc
popf
in
inc
cmpsb
cmp
cmp
inc
jnp
rol
cmp
mov
dec
bound
jmp
mov
in
mov
push
inc
inc
dec
jns
sbb
jbe
mov
sub
pop
inc
mov
pop
lahf
gs
pop
sti
insl
out
inc
jle
or
adc
ss
adc
xchg
mov
sub
xchg
inc
cmc
hlt
mov
jge
xchg
lahf
test
pop
fdivs
pusha
scas
sbb
xor
pop
scas
cmp
xchg
dec
and
add
or
cs
mov
push
and
xor
or
push
icebp
aad
mov
hlt
push
sarl
enter
or
adc
shll
test
mov
jp
popf
aad
add
loop
mov
shll
rorb
or
cmpsl
mov
sbb
ljmp
lds
xor
cwtl
inc
aam
push
or
xchg
shrl
loope
and
jl
mov
cs
leave
sub
jp
addl
fdivr
jnp
xchg
fisubrl
or
pop
cltd
mov
dec
and
xor
or
jg
test
xchg
movsb
adc
pop
add
xchg
jne
adcl
sahf
mov
test
outsb
cltd
aad
dec
orb
mov
xor
out
test
popf
jecxz
and
sbb
xor
adc
xor
mov
add
in
dec
jge
pop
sbb
out
pop
push
dec
das
jmp
daa
xchg
add
sub
cmp
adc
inc
xlat
in
outsb
insl
add
or
xlat
out
arpl
mov
into
lea
inc
add
inc
call
mov
fldcw
pop
mov
ljmp
sbb
sbb
dec
lret
lret
or
int
scas
jle
jmp
shrb
jo
jo
cmpl
cwtl
shrb
push
mov
js
cwtl
enter
mov
adc
cmp
movsl
and
pop
mov
fidivrs
mov
lahf
imul
incl
jne
xchg
and
mov
mov
push
xlat
sub
dec
add
icebp
je
data16
lods
or
xlat
rorl
mov
xchg
inc
mov
mov
sbb
sarb
int
shll
into
jbe
sub
and
inc
mov
sti
leave
and
icebp
lahf
adc
fldpi
and
popf
cmpb
movsl
mov
or
mov
jl
mov
push
push
ret
jp
sbb
mov
das
nop
in
pop
into
and
push
sub
xchg
cmpsb
inc
call
lret
inc
bound
mov
shll
sub
cmp
fbld
insl
xchg
loopne
dec
repz
leave
imul
js
push
push
adc
dec
lock
or
ds
cs
aas
ret
in
lea
lock
mov
mov
pop
inc
or
mov
add
icebp
decb
jns
lret
dec
mov
mov
popa
pop
mov
jmp
int3
int
int
gs
add
sqrtps
cli
outsl
or
fucomp
push
pop
test
out
inc
jmp
pop
pop
fsubrp
inc
insb
pop
jge
ja
cmp
xor
jnp
mov
add
xchg
aam
push
sub
vaddsubpd
sub
cld
stc
pop
bound
test
lds
adc
jo
std
xor
sub
addl
ffree
aam
inc
inc
sub
scas
add
shlb
inc
rorb
in
lret
and
test
dec
push
xchg
and
sub
cltd
jne
movsl
sahf
and
mov
loop
aas
lds
mov
jns
sbb
cmp
enter
push
aaa
fiaddl
adc
js
xor
jne
mov
stc
fcom
loope
divl
aas
pop
and
inc
or
sub
xchg
call
rol
sbb
pop
inc
or
mov
out
xchg
lods
or
jp
out
jmp
subl
cmp
out
dec
movl
test
jle
mov
mov
pop
xrelease
inc
mov
and
idiv
fxch
mov
adc
sub
stos
and
in
xor
outsl
xchg
dec
je
lock
sbb
stc
push
mov
sbb
je
int
add
push
xchg
dec
cld
cmp
cmc
jecxz
lea
add
std
fwait
sbb
insl
jle
negl
fiadds
aaa
imull
leave
imul
dec
bound
fisttps
push
int
fwait
mov
aad
xorb
sbb
add
mov
fwait
jmp
sub
loop
mov
xor
js
sbb
adc
mov
xchg
cld
mov
lret
pop
cltd
add
dec
fwait
enter
gs
outsb
aad
mov
ljmp
fistl
dec
fistpll
adc
daa
mov
inc
nop
sub
cmp
cli
inc
shrl
aam
aaa
cld
and
inc
ja
fiaddl
or
cli
bound
jb
sbb
mov
xchg
ret
jns
leave
repz
mov
push
lret
jl
hlt
dec
loopne
cmp
inc
adc
pop
sub
hlt
inc
ja
mov
shrb
jbe
lea
sbb
cmpsb
jno
fistl
sbb
mov
mov
or
mov
shlb
mov
xor
sbb
mov
and
ret
scas
xchg
and
paddq
add
lods
fbstp
pop
mov
imul
std
mov
and
mov
inc
sub
leave
std
xor
adc
cmpl
cmp
add
popfw
and
les
cmp
jecxz
icebp
add
dec
mov
test
jno
xchg
inc
jle
lods
out
lahf
fstp
xchg
adc
jnp
cmp
iret
push
pop
and
adc
sub
es
imul
roll
mov
addr16
rolb
and
pop
insl
push
adcl
out
jp
xor
rcl
bound
add
sbb
sbb
dec
movswl
adc
icebp
lds
xlat
fidivrl
jo
testl
mov
xchg
lcall
xor
loopne
pop
pop
mov
add
sbb
daa
popa
arpl
inc
mov
ljmp
push
movsl
mov
dec
xchg
and
add
mov
push
sub
add
mov
jno
push
push
rol
push
adc
icebp
fcmovbe
dec
addr16
stos
xlat
mov
les
das
dec
sub
ret
loope
int
sarb
adc
xor
mov
test
add
pop
mov
sub
aas
sub
mov
push
shll
icebp
push
addb
or
jp
maskmovq
negl
sbb
jg
cmc
test
and
call
or
test
test
loop
fwait
es
jge
jg
jno
out
inc
mov
jo
and
stc
loopne
and
dec
test
jno
sub
cmp
lods
cli
lds
in
xor
sub
mov
fidivrs
sub
add
cmp
xorl
loopne
enter
scas
dec
sub
out
add
movsb
and
mov
lock
push
pop
xchg
xor
aam
in
fistpll
pusha
inc
push
inc
cmpsl
je
mov
stc
out
cs
mov
add
xchg
aad
jp
dec
int3
sbb
cmp
dec
jle
int3
jns
sub
mov
popa
sub
leave
cwtl
mov
push
dec
sub
jmp
test
scas
or
fnstcw
sahf
in
pop
mov
jno
rolb
adc
cmp
or
push
mov
es
lcall
push
mov
sub
sub
pop
cmp
cmp
xchg
push
cmp
filds
sub
xchg
insl
sbb
or
fs
fiadds
or
cmpsl
xchg
test
inc
mov
pop
jbe
add
xchg
outsl
sbb
in
in
sbb
inc
xor
jnp
jg
int3
jge
aas
push
loopne
sbb
fnstenv
repnz
and
cli
int3
aas
test
outsl
or
mov
mov
ret
jl
and
sub
leave
pop
adc
jnp
aad
fnstsw
lahf
daa
mov
inc
fisttpll
aaa
call
out
stos
add
push
lds
movsb
inc
test
lods
jb
jl
cwtl
mov
pop
xor
movb
lods
mov
jmp
shrb
lret
dec
fnstenv
addr16
in
jle
xor
scas
pop
int3
xchg
fbstp
mov
sub
mov
or
out
pcmpgtw
aaa
xchg
movsl
pop
push
outsb
xchg
xchg
cmp
stc
sub
push
and
loopne
fwait
mov
cmpsb
sbb
pop
inc
jmp
add
adc
jno
xchg
outsl
xchg
mov
cwtl
dec
dec
pop
push
inc
lret
int3
inc
sub
fwait
cmp
cwtl
cmp
cwtl
cmp
js
mov
ja
outsb
adc
iret
test
mov
rcr
ficomps
dec
pop
cmp
cmp
mov
ja
aad
adc
decb
and
out
movsb
fwait
sbb
lret
mov
xchg
mov
mov
fwait
dec
push
adc
xchg
sub
mov
cmp
sarl
inc
jmp
enter
out
cmp
cmpl
testb
or
clc
inc
cmp
cmc
push
lods
fwait
shlb
dec
mov
scas
mov
add
cmp
mov
test
data16
ja
xchg
cmp
out
or
push
adc
icebp
add
in
mov
xchg
xlat
mov
jnp
cli
jnp
test
mov
adc
sar
in
sub
cmpsl
and
into
inc
jb
stos
sbb
pusha
or
fistps
stos
adc
add
test
inc
test
adc
dec
pushf
mov
xor
dec
adc
rcr
mov
sub
icebp
adc
hlt
push
sbb
xlat
rcrl
pop
pop
pop
lahf
mov
shlb
dec
xor
nop
fsubrl
dec
test
lcall
stc
out
mov
xor
lds
mov
mov
aaa
jle
add
jo
es
push
popa
in
cli
lds
andl
daa
fs
lods
ret
mov
sub
or
lret
divl
aam
jmp
sub
mov
repnz
xor
loop
popa
xor
mov
dec
dec
jmp
adc
mov
cmp
out
and
mov
rcrl
inc
and
pop
fmull
push
xchg
jmp
enter
push
mov
xor
sub
mov
adc
rol
testb
repnz
or
popf
mov
je
pop
nop
mov
inc
lret
jnp
nop
stc
cwtl
inc
int3
pop
pop
xor
sbb
lcall
filds
and
add
adc
pop
sti
push
adc
mul
test
sbb
sub
sub
imul
push
and
mov
and
mov
je
xchg
inc
orb
iret
fstl
daa
cs
ds
aas
stos
adcb
adc
idivb
rcrb
add
adc
adc
cltd
xchg
adc
pop
lods
int
insb
popa
sahf
mov
pop
xchg
mov
lods
pop
xor
sub
sbbl
adc
jmp
xchg
adc
cmpb
imul
dec
fs
cmp
sahf
orl
add
sub
push
ljmp
sahf
into
cmp
leave
inc
xor
and
dec
movsl
xor
mov
movsb
or
cld
imul
push
pop
push
cmpsl
sbb
dec
movsb
sub
fs
dec
mov
mov
movsl
mov
cmp
ds
cmp
loop
ret
and
add
jo
and
jg
jmp
mov
dec
test
xor
test
push
jnp
out
cmpsl
cwtl
pop
call
jmp
icebp
pop
xchg
icebp
ljmp
jg
pop
aas
imul
mov
xor
movsl
int3
jns
sbb
mov
and
fldl
hlt
add
mov
add
lods
fcmovnb
lods
sbb
loope
inc
mov
nop
icebp
js
add
push
xlat
pop
icebp
xor
or
cltd
sbb
cmpsl
jae
fisubl
sbb
jmp
pop
pop
js
push
push
mov
adc
push
jbe
xor
mov
cmp
aam
in
mov
cwtl
hlt
push
loop
pop
pop
xlat
fwait
add
mov
jle
mov
shrl
inc
inc
enter
adc
call
fisttpll
test
call
mov
jg
das
lret
shrb
fdiv
data16
push
pop
dec
or
lock
cltd
lea
jb
mov
push
mov
into
inc
and
push
adc
pop
jae
bound
call
pop
push
mov
and
adc
pop
jge
addb
sbb
ja
int
and
mov
mov
lock
cmc
cmp
lods
cmp
mov
push
dec
leave
inc
int3
insb
es
fwait
mov
insl
rcrb
insb
add
mov
or
cmp
add
out
cmp
int3
push
inc
push
jbe
jns
cmpsl
aaa
hlt
dec
cmp
sub
into
inc
xlat
in
add
sub
and
jmp
add
stc
mov
leave
movsb
xchg
ror
les
rcrb
scas
dec
mov
lret
rorl
out
jo
decb
aaa
enterw
mov
sub
aad
data16
sub
or
sub
nop
jmp
out
push
outsb
insl
sbb
mov
sbb
push
xlat
fwait
lahf
inc
in
push
xchg
pop
sbb
int3
mov
xchg
imul
call
push
hlt
aaa
or
adc
lock
adcb
sub
inc
mov
and
and
mov
popa
clc
sbb
stc
push
pop
pusha
jo
loop
xchg
sbb
aas
mov
push
pop
push
arpl
fisubrs
hlt
insb
adc
jnp
and
jbe
mov
ja
outsl
or
loopne
cltd
addr16
subb
lret
cmpsb
pop
cmp
and
call
mov
jae
sub
mov
mov
daa
and
sbb
insl
out
orb
pop
mov
shl
out
or
cld
scas
or
xchg
cltd
push
incb
add
inc
xor
in
push
inc
mov
mov
push
repz
mov
data16
rep
rclb
imul
dec
das
xor
mov
popa
sub
dec
cmc
push
ljmp
push
push
push
lea
pop
jmp
imul
dec
sbb
add
dec
inc
adc
es
rol
jbe
mov
int
cmpsl
mov
mov
sbb
std
pop
js
cmpsl
sbb
mov
xchg
daa
push
inc
test
sub
adc
or
addl
pop
sbb
outsb
pop
insb
decl
pop
pop
out
imul
jecxz
movsb
dec
mull
test
icebp
sub
add
mov
mov
scas
jmp
sahf
cmp
sbb
out
mov
mov
pop
pop
push
xor
fistps
in
hlt
lret
pop
shll
jge
ljmp
stos
out
cmpsb
mov
loope
cs
jge
addr16
pop
mov
sub
daa
aaa
inc
cltd
sub
lds
in
je
mov
dec
jecxz
fs
jmp
jnp
push
and
sbb
fdivrl
es
outsb
leave
hlt
leave
inc
test
inc
push
xchg
test
cmp
fs
xor
enter
mov
push
rolb
dec
mov
push
cwtl
test
or
and
pop
sbb
jge
xchg
add
inc
and
jbe
movsl
sbb
jo
fs
add
fwait
xorl
fiaddl
test
jmp
fisubl
arpl
orb
shl
xor
sbb
es
and
mov
scas
push
mov
mov
and
pop
aaa
mov
pushf
push
jle
call
inc
pop
mov
sbb
pop
decb
sbb
aad
jmp
out
xchg
xor
cmpsb
lea
sbb
cmp
push
inc
adc
or
stc
sub
out
sahf
mov
icebp
out
incl
and
inc
or
nop
and
xor
sub
inc
cltd
ret
push
movsb
fsts
and
cmc
jle
std
shll
add
sbb
pop
mov
lahf
mov
ss
cld
nop
fscale
jge
dec
rclb
push
inc
mov
in
fdivs
jne
push
adc
out
mov
stos
add
pcmpgtb
adc
cld
jmp
popa
add
out
cmp
mov
stos
or
call
ljmp
inc
int3
mov
mov
out
daa
inc
lret
pop
pop
outsl
or
mov
xchg
mov
rcrb
mov
clc
mov
add
inc
loopne
xchg
movsl
mov
mov
icebp
jae
loop
aad
lcall
stos
int
loop
inc
and
push
cmp
xchg
sbb
rorl
insb
arpl
lea
fmul
enter
cmp
aam
arpl
cmp
pop
xchg
les
out
dec
mov
js
shrb
and
and
mov
dec
sbbl
add
daa
fsubs
out
sbb
jmp
xor
pop
mov
push
pop
push
cmp
sbb
adc
leave
stos
pop
mov
sub
cmp
pusha
stos
insb
icebp
in
xlat
int3
sub
in
cld
mov
push
fiaddl
push
outsb
repnz
mov
imul
mov
dec
sbb
or
gs
or
dec
dec
xor
into
xlat
mov
pop
pop
jp
movsb
fisubrl
sarl
int
shlb
in
dec
add
mov
push
sti
cmp
push
arpl
jbe
mov
adc
adc
mov
jl
sti
jp
add
fdivr
ffreep
or
push
movsb
xor
mov
lock
sub
mov
dec
mov
jl
sbb
mov
inc
mov
in
ficoms
rcll
cmp
mov
iret
xchg
cmp
pop
out
mov
stos
cmp
xchg
add
dec
cmp
movsl
ret
mov
loop
test
cmpsl
roll
jecxz
mov
pop
mov
repnz
and
jnp
stos
into
xor
imul
push
mov
insb
inc
push
mov
ret
pop
cs
cmp
sbb
adc
insb
jl
adc
fldenv
jg
inc
inc
or
lods
adc
sub
scas
fdivs
sbb
cmp
push
ja
pop
dec
mov
xchg
popf
pop
jge
das
loop
std
mov
test
inc
out
xchg
mov
push
insb
inc
cltd
dec
fldcw
shr
push
ffree
js
lret
loopne
jnp
jle
adc
rcll
mov
xchg
fcom
call
in
std
stos
sti
add
shll
loope
scas
cmp
push
ror
push
cld
xchg
popf
adc
jmp
pop
jl
push
lahf
mov
sti
xchg
pusha
sti
outsb
mov
lfs
and
mov
push
lret
inc
jns
fldenv
cmp
add
pop
adc
repnz
testb
jecxz
jg
fucomp
sub
aas
fnstenv
fdivrl
cmp
aam
jns
dec
aam
arpl
xor
pusha
mov
sbb
int
outsl
out
daa
cltd
hlt
mov
shlb
jge
jecxz
call
test
xchg
cltd
ja
add
dec
xchg
mov
icebp
pop
inc
mov
in
rorb
and
gs
pop
scas
xor
sub
jl
jo
ja
lods
cmpsl
cli
sbb
js
popf
out
in
addr16
sbb
rorl
cmp
push
ljmp
loop
push
push
xor
add
mov
orl
xchg
lods
divl
xchg
add
pushf
jbe
cmp
les
lret
mov
lcall
cld
mov
push
and
mov
imul
xchg
pop
or
inc
or
adc
adc
or
ljmp
push
xor
add
add
sbb
add
lret
mov
xchg
and
add
imul
push
fdivrs
es
cmpsl
test
inc
mov
pop
adc
xchg
xor
mov
shr
test
in
fldl
faddp
inc
inc
sahf
subl
mov
mov
jns
inc
outsl
jb
hlt
lds
adc
sub
inc
mov
and
jbe
stos
and
pop
shr
xchg
and
and
popa
or
cmc
xchg
sub
sti
out
mov
aam
and
imul
dec
loopne
xchg
add
jge
mov
cwtl
orl
leave
adc
and
outsb
pop
xchg
dec
aaa
test
stos
pop
mov
into
lods
pop
pop
fisubl
into
out
mov
psubusb
cmc
jmp
xor
clc
and
and
pop
mov
test
fwait
push
mov
sub
movsl
ss
mov
shrl
dec
inc
dec
fisttpll
popa
cmpsl
loop
int
adc
daa
inc
stc
push
mov
sti
fcmovb
nop
or
mov
mov
pop
movsb
adc
and
adc
outsl
cld
in
dec
daa
xor
arpl
jge
call
rol
xor
mov
and
push
test
push
outsb
cld
xchg
stos
popf
sarl
jecxz
jb
fcoml
dec
xchg
cwtl
dec
mov
fbstp
out
cli
pop
shrb
into
fimull
daa
xchg
inc
mov
mov
sahf
adc
add
test
cs
pop
or
jmp
sbb
sbb
inc
mov
fistps
xor
jbe
inc
iret
in
aas
fists
dec
pop
std
lods
arpl
dec
cwtl
jb
pop
push
ret
dec
jns
imul
fistps
inc
adc
fidivl
dec
lret
xchg
pcmpeqb
jg
pop
inc
leave
cs
addb
daa
dec
xor
daa
and
xor
add
jg
clc
int
or
add
das
lods
loopne
or
out
ret
xchg
lea
or
loope
and
cmp
dec
mov
cmc
aaa
dec
in
xchg
scas
add
jbe
ficoml
mov
aas
sub
dec
jo
or
mov
mov
pop
lcall
aaa
cli
js
sbb
push
inc
dec
or
add
test
ret
push
lods
cwtl
icebp
inc
inc
push
cmp
cmp
sbb
es
push
rcr
les
pop
rcr
stc
add
cmp
daa
cmp
sbb
sub
jmp
cmpsl
cmpsl
mov
sub
xchg
jmp
fcmovne
gs
dec
cs
jecxz
test
sahf
mov
mov
cld
in
lea
push
dec
xor
lods
cld
fistpll
or
dec
jb
jle
test
adc
out
cmp
cmp
cmpsb
sub
insl
cmp
lods
mov
ja
pop
xchg
hlt
or
vphaddubw
call
std
and
outsl
pop
mov
add
mov
cmp
dec
jae
push
sub
lea
push
into
leave
pop
xchg
frstor
or
push
push
ds
std
jge
test
push
mov
pop
mov
xchg
xchg
ret
jge
mov
dec
xchg
or
iret
mov
push
sub
jp
mov
imul
jecxz
cmp
sbb
dec
jne
xor
test
popf
jg
pusha
sub
push
mov
jmp
inc
ljmp
daa
cltd
cli
mov
add
shll
xor
mov
pop
xlat
ret
out
mov
and
bound
jecxz
rol
rcrl
decb
mov
out
es
int3
sub
rcl
scas
js
inc
cmp
movsl
fwait
popf
or
mov
cmp
pop
outsb
popa
out
mov
adc
test
aas
and
mov
cmpsb
and
jge
pusha
pop
xchg
aas
repnz
scas
in
and
add
sti
cmc
mov
push
mov
int3
mov
jp
gs
stc
fcompl
aaa
xchg
cmp
nop
and
dec
icebp
xchg
or
lret
data16
hlt
aad
inc
pop
jnp
cmpb
fldcw
ret
inc
mov
aam
xchg
jno
jae
or
subl
fbld
jne
cmc
rol
push
inc
rcl
push
aam
lods
addr16
mov
jbe
cmc
rol
pop
add
std
mov
loopne
fcmovu
enter
fucomi
in
and
decl
adc
push
lret
fistpl
pop
enter
xlat
mov
adc
or
adc
cmp
dec
test
popl
fcmove
dec
dec
jae
filds
adc
mov
xchg
or
xchg
repz
movsl
idivb
scas
mov
insl
ja
cli
mov
dec
fs
test
mov
sete
loope
int
adc
hlt
xor
insb
xchg
mov
movsl
in
test
sbb
mov
js
push
sub
cmp
rcrl
sbb
add
lock
xlat
pop
lock
inc
sahf
iret
aad
negl
xor
inc
fistpl
push
shrb
movsl
aaa
and
lret
int
loop
mov
movsl
int
jbe
mov
xor
lods
stos
imul
std
mov
adc
add
xchg
inc
stc
mov
mov
jg
inc
rcll
mov
inc
in
add
sub
daa
inc
popf
sbb
vpavgw
or
jne
mov
sbb
loopne
jl
sub
sbb
push
ja
mov
jo
cmc
xlat
comiss
xor
punpckhwd
push
aas
xor
pop
repnz
decb
pop
dec
push
movzbl
lret
pusha
das
cmp
lods
scas
cmp
sbb
sub
int3
mov
xchg
adc
add
xor
push
insb
fwait
pop
out
rorl
pop
cmpl
jnp
xchg
loopne
xchg
sub
gs
sub
add
imul
push
pop
or
push
xchg
aaa
push
mov
pushf
mov
xchg
pop
and
pusha
mov
loop
into
orl
cwtl
shr
xor
xor
mov
inc
xchg
or
or
repnz
and
add
icebp
sub
xchg
mov
dec
pop
mov
push
lock
mov
pop
ficompl
jnp
jle
mov
add
pop
jne
mov
data16
pop
and
cwtl
cwtl
ror
or
stos
jle
xorb
add
aad
test
mov
and
inc
sub
push
inc
xchg
jmp
adc
inc
cmp
or
mov
fcomi
fstps
adc
pop
mov
sub
addr16
fs
fcoml
les
add
into
mov
cmp
fs
jbe
out
pop
cmp
popa
mov
xchg
outsl
pop
fwait
decb
shlb
inc
imul
sti
xchg
sbb
int
or
repnz
call
shrl
lock
xchg
sti
out
pop
xchg
pop
mov
push
fs
cld
imul
jno
lods
ret
inc
ljmp
aaa
dec
out
or
cmpl
xor
or
jecxz
mov
icebp
in
ret
movsb
cmpb
mov
jge
adc
inc
dec
roll
jmp
jns
sbb
xor
repnz
fs
cmp
jns
mov
jp
ds
jae
mov
cmp
ja
or
mov
xorl
jmp
pop
dec
stc
adc
leave
pop
mov
test
testl
ljmp
fwait
loop
jne
pop
push
xchg
sbb
jnp
int3
ret
ljmp
movsl
pop
mov
sub
pop
dec
sbb
jmp
push
sti
shrl
cs
rolb
movsl
and
pop
inc
rcrb
pop
popa
sub
pop
jne
jge
pop
js
xchg
pop
rclb
lods
dec
ljmp
push
jbe
insb
sub
sbb
cld
shll
rolb
andl
and
mov
fnstenv
xchg
xchg
and
mov
inc
out
test
icebp
loopne
sbb
cmp
cltd
xchg
pushf
jno
jb
lret
shl
lock
rep
bound
popf
rcl
mov
mov
jmp
mov
mov
pop
test
xor
adc
push
sar
dec
cmp
rclb
ret
push
sbb
cmpsl
and
jnp
pushf
xchg
jl
inc
cld
inc
push
xor
xchg
xor
pushf
fistpll
sti
mov
out
inc
pop
mov
pop
xchg
adc
or
test
out
push
xor
cmp
mov
aam
xor
fcmove
jae
testb
dec
call
in
subl
scas
int3
adc
or
ret
xacquire
xor
into
out
imulb
ja
in
movsb
cs
fs
ljmp
xor
sub
addr16
into
inc
pop
sbb
loope
add
insl
sbb
int3
xchg
fmull
push
or
mov
aad
mov
stc
pop
sub
popa
mov
or
or
xor
cwtl
daa
jnp
dec
lret
pushf
pop
fwait
icebp
cli
sbb
jns
inc
dec
test
out
inc
inc
inc
call
jl
inc
dec
mov
movsl
sub
inc
push
mov
jle
clc
pop
dec
mov
add
dec
xor
cmp
ret
ja
daa
lds
adc
les
popa
dec
in
push
add
daa
mov
and
out
imul
stos
and
inc
sbb
fnsave
jb
push
adcl
adc
mov
xor
pop
and
loope
inc
pop
ja
dec
lret
jmp
stc
loope,pn
into
in
repnz
andb
xchg
adcl
jmp
and
mov
sbb
int3
push
out
pop
inc
xlat
hlt
xchg
jecxz
imul
ja
jno
xor
fstpt
inc
jmp
ja
frstor
jmp
inc
and
sbb
cmpsl
insl
mov
call
push
mov
xchg
scas
xor
push
cmpsl
sbb
cmpsb
movsb
scas
xchg
aaa
pop
inc
stos
dec
xlat
gs
lods
jle
mov
lods
out
sub
jl
xor
mov
sub
mov
xchg
sbb
and
mov
clc
sub
les
pop
lea
xor
jp
insl
movsl
out
sti
repz
icebp
insb
fistpl
mov
data16
fisubrl
scas
add
imul
mov
jb
lret
add
xchg
outsb
inc
movsl
cmpl
xor
imul
fdivrs
pop
cmp
out
cld
sbb
ds
stc
adc
xor
mov
fstl
mov
cmc
sbb
jg
fnstsw
or
jmp
mov
adc
in
cmp
xchg
sub
cmp
outsl
push
loop
into
mov
rcr
repnz
push
sub
inc
sti
out
std
divb
les
mov
dec
adc
jae
mov
shll
mov
gs
cs
xor
outsb
cltd
icebp
pop
add
orb
add
aas
mov
ret
scas
pop
cmc
mov
mov
inc
sub
push
jge
js
inc
shlb
les
pop
enter
mov
lock
sbb
or
imul
xchg
out
mov
jbe
jecxz
in
and
aaa
mov
mov
std
lret
fsubrs
xlat
int3
jns
inc
addr16
xchg
adc
fidivs
jle
sub
imul
rorl
fisttpl
test
stc
out
insl
lret
xchg
aaa
sub
jp
jae
insb
movsl
xchg
cmp
cli
mov
mov
or
iret
and
in
aad
imul
pop
lds
lret
sub
cs
gs
cltd
cmc
push
insb
sub
imul
mov
mov
scas
sbb
jo
inc
mov
push
aam
std
ljmp
sti
stc
ja
mov
sbbb
dec
iret
int
bound
fstps
lcall
scas
add
cmpsl
pop
outsl
add
bound
and
stos
mov
cmpb
inc
lahf
jecxz
push
test
mov
movsb
leave
cmpsb
push
cmc
push
push
or
xor
xchg
repz
and
push
pusha
loopne
out
mov
mov
push
jl
cwtl
jge
fldl
pop
xchg
je
gs
es
adc
mov
hlt
je
iret
bound
fwait
push
shll
and
lcall
and
in
lcall
add
and
mov
fadds
inc
push
jno
cld
mov
dec
stc
js
das
leave
ret
xchg
mov
mov
and
push
or
mov
or
and
sbb
je
out
push
inc
xchg
test
push
mov
xchg
push
out
dec
inc
push
aam
outsl
sbb
ljmp
rolb
inc
xor
hlt
push
aad
push
jnp
xor
out
push
movsb
push
adc
add
outsl
sahf
mov
cmp
fisttpll
popf
test
pop
sahf
inc
sti
sbb
cmp
mov
in
inc
sub
dec
fxch
fwait
dec
cwtl
add
mov
loope
mov
or
dec
sbb
in
add
jmp
jle
test
in
not
lock
mov
jbe
incl
add
mov
mov
inc
mov
scas
sub
imul
in
fs
pop
jno
cmp
scas
mov
inc
push
and
insl
repz
movsb
push
mul
adcb
lock
jns
arpl
sub
test
mov
xchg
test
and
cltd
repz
cbtw
fbld
inc
jne
add
ret
daa
jle
add
dec
xor
mov
mov
push
shrd
jae
push
mov
sbbl
lods
icebp
addr16
dec
aad
inc
cmp
adc
sub
fwait
cwtl
adc
mov
pmulhw
fwait
scas
sbb
inc
cmp
les
in
mov
daa
popa
cmova
dec
in
jae
add
and
mov
mov
jae
addl
mov
adc
in
pop
sub
leave
lret
inc
cltd
pop
push
xor
and
xor
test
push
mov
adc
dec
clc
push
outsb
je
divw
fs
into
fxch
bound
jbe
clc
cmp
xor
rolb
adcb
int
cmp
mov
mov
and
movb
inc
sub
repnz
cmp
lcall
pop
add
out
arpl
xorl
mov
mov
stos
dec
sub
adc
sub
adc
filds
dec
idivb
roll
in
add
ret
lcall
mov
jmp
hlt
push
push
stos
iret
stos
push
jl
lods
xchg
xor
scas
push
dec
call
fwait
lahf
push
jno
nop
test
adc
loopne
loope
jge
mul
or
cwtl
add
je
cld
fs
cltd
sub
xchg
or
loopne
mov
js
stos
mov
sbb
xor
jb
test
sahf
cmpb
clc
pusha
cmp
or
repz
adc
ss
rcll
jg
mov
ret
cmpb
gs
stos
testl
fldcw
xchg
sahf
pop
test
cmc
mov
dec
adc
decb
or
lods
xchg
sub
scas
fldenv
aam
mov
push
fisttpll
sbb
inc
nop
dec
in
negl
daa
adc
jnp
nop
stc
es
sub
xor
mov
orb
clc
sbb
jge
cmp
mov
fcomi
iret
movl
pop
test
das
data16
xchg
xchg
add
out
lods
out
mov
xchg
loope
sbb
sbb
xor
lock
iret
repz
dec
mov
je
clc
xor
and
das
das
aad
xchg
cmp
aaa
push
inc
test
je
or
sub
sarl
imul
imul
mov
cmp
pop
cld
cwtl
adc
fcomps
mov
mov
adc
jb
xchg
cld
jno
lahf
sahf
lcall
arpl
mov
push
scas
cli
iret
enter
inc
sub
mov
outsl
sbb
pop
push
fwait
in
or
ror
dec
lock
inc
clc
xchg
and
and
and
or
roll
mov
int
mov
popf
in
pop
xchg
push
imul
xchg
shl
mov
aas
mov
dec
test
jns
jge
lods
jbe
jb
add
mov
pop
cmp
clc
and
cwtl
sub
out
lahf
in
int3
lret
dec
shll
mov
cmpl
pusha
iret
out
stos
xchg
les
int
fwait
xchg
and
aam
mov
lahf
icebp
popa
add
jbe
sbb
in
jo
cmp
mov
xor
mov
stos
mov
mov
or
test
out
icebp
inc
data16
sbb
inc
sbb
cmp
into
mov
and
mov
shl
repnz
cmp
aas
scas
sbb
dec
jno
ficomps
jge
lcall
adc
popa
popf
inc
push
pop
or
mov
andl
cmpb
js
sub
sbb
aam
sub
je
lock
xor
add
call
aas
push
test
cmp
xchg
repnz
inc
mov
mov
fdivr
sub
jne
lea
or
add
in
mov
shrb
sarb
cli
inc
xchg
and
sbb
sub
pusha
add
xchg
pop
jmp
jl
pushf
xchg
pop
mov
fildl
shlb
pop
movsb
mov
mov
mov
xor
test
pop
inc
gs
lret
dec
loop
or
cld
and
jbe
dec
orb
lods
ja
stos
mov
mov
sub
outsb
cmpsl
mov
xlat
std
test
mov
add
es
icebp
cmp
shll
repz
data16
popa
jecxz
fimull
stos
adc
or
cli
aad
cs
bound
loope
cmp
cld
scas
push
adc
imul
fs
xor
nop
inc
ret
inc
cmpsb
sub
add
jle
or
inc
or
data16
xchg
movsb
test
and
adc
xor
in
aaa
cltd
cmpsb
pop
mov
dec
adc
imul
jg
int3
mov
xchg
mov
jmp
fyl2xp1
push
stos
adc
repnz
outsl
add
jb
cmp
out
jno
rcll
push
aaa
int3
sub
testb
lock
mov
fiaddl
inc
ja
data16
idivl
bound
ljmp
mov
cmp
lods
adc
movsb
mov
cld
sti
ds
xor
shrl
add
cmp
and
jp
in
lret
popf
jge
loope
push
jb
mov
ret
lahf
popa
mov
ret
sub
sbb
lcall
inc
ja
icebp
mov
das
fs
jo
fists
enter
dec
or
test
pusha
loop
sub
jae
push
xlat
shrb
leave
cmp
data16
test
push
fdivrs
push
pop
push
addb
iret
add
cmp
push
add
sub
repnz
mov
dec
das
jle
fcomps
push
in
sub
rorl
cmpsl
int3
in
cmpsl
cmpsb
mov
xchg
stos
jmp
pop
stos
popa
xor
or
sub
jae
ljmp
mov
andl
sbb
and
cmp
sar
xchg
pop
es
xor
add
aam
adc
rorb
jns
fisttpl
or
xor
mov
es
lret
inc
push
jns
scas
inc
sub
pop
adc
test
insl
push
push
sub
mov
into
xchg
dec
pop
mov
cli
jg
add
jae
rorb
lahf
cmp
daa
leave
loop
xchg
test
mov
mov
pop
inc
dec
addr16
pop
stos
mov
iret
jae
sbb
test
adc
icebp
mov
insb
in
dec
jge
popa
sbb
sti
icebp
pushf
aaa
xor
int
aam
jns
mov
or
pop
or
xchg
inc
push
stc
xchg
clc
sbb
sub
mov
fdivl
mov
xchg
call
xor
and
push
sbb
orl
outsb
jmp
adc
flds
mov
repz
xor
int
int3
scas
mov
xchg
outsb
inc
pop
push
and
and
mov
shlb
scas
sbb
test
dec
test
push
xchg
cmp
test
movsl
cmpsl
mov
jo
inc
ret
jmp
mov
add
sub
dec
mov
cltd
jne
jnp
dec
or
mov
repz
pop
fdivr
xchg
sub
mov
mov
cltd
xchg
scas
sub
jmp
push
stc
addr16
adc
stc
outsb
inc
xor
or
pushl
sbb
pop
in
lds
aaa
shll
scas
or
mov
xchg
pop
and
dec
jecxz
sbb
pusha
push
lret
dec
sub
pop
lock
in
inc
insb
xchg
cli
test
pop
daa
sbb
clc
xchg
cmpl
dec
repz
test
pop
xchg
sbb
jae
xchg
test
test
mov
insb
movsb
es
push
lret
xchg
adc
adc
pop
xchg
mov
cmpsb
pusha
cmp
into
sub
push
clc
dec
dec
add
jmp
mov
shl
mov
scas
ljmp
push
int
in
xlat
andl
gs
pop
cmpsl
sbb
jg
push
ret
js
repz
inc
out
dec
aam
jmp
fldl
xchg
out
mov
sub
fiaddl
xlat
cltd
ficompl
xor
inc
or
pop
ljmp
mov
das
loop
push
add
mov
dec
inc
dec
movsb
and
mov
push
xchg
notb
sub
aad
test
xchg
mov
lret
adc
vxorpd
fucomip
ffreep
into
or
repnz
in
aaa
repnz
push
fs
or
and
rcrl
pop
lret
jmp
push
dec
mov
popf
std
lock
rorl
ja
imul
ss
nop/reserved
push
push
flds
sbb
jp
lock
fidivrl
bound
lock
repz
jge
arpl
dec
std
mov
mov
inc
adc
mov
add
loope
xchg
and
xchg
cs
xor
jp
xchg
lret
rorl
lahf
jae
pop
scas
scas
or
iret
add
stc
jb
jmp
je
xchg
xchg
xchg
jge
scas
lock
pop
cld
mov
cmpsl
fistl
mov
out
pop
roll
xchg
in
cmp
push
loop
xchg
xchg
cmp
sbb
and
jbe
pop
add
sub
clc
sub
aas
aaa
mov
stos
jae
inc
lods
gs
nop
int3
adc
xchg
js
dec
loopne
mov
mov
sti
add
jno
leave
mov
pop
sbb
pop
mov
and
std
jno
shll
jle
imul
out
fistpll
movsb
pusha
decl
outsl
sub
sub
mov
mov
add
popa
roll
push
enter
loope
in
adc
dec
and
cmp
mov
pop
sbb
stos
lods
inc
ss
lahf
mov
sbb
push
add
jae
orl
stos
mov
jl
inc
call
mov
popa
jne,pt
pop
addb
pop
cmp
pop
cmp
aas
xor
sbb
mov
cmp
scas
dec
adc
xor
inc
int3
idivl
mov
int3
mov
and
shll
aad
sub
inc
mov
sub
mov
enter
sub
mov
std
in
jle
insl
jle
inc
and
leave
in
pop
sbb
add
dec
xchg
cld
cmpsl
push
out
cmc
das
mov
fldenv
mov
and
flds
fbld
sbb
jae
jle
mov
push
hlt
jle
lahf
das
jp
or
mov
jbe
lds
push
nop
pop
jo
jbe
fs
clc
fidivs
xor
rcl
add
sbb
scas
bound
push
aas
sbb
and
dec
adc
shll
or
stc
lcall
mov
fstpt
xor
in
adc
push
loope
add
lods
add
mov
dec
je
mov
xchg
test
shl
paddsw
aam
sub
fwait
shlb
dec
xchg
inc
sti
ss
cmp
pop
mov
scas
xchg
mov
test
cmpsb
daa
pushf
fwait
pop
inc
in
enter
imul
idivb
xchg
dec
xchg
movsb
rorb
fcoml
imul
dec
push
and
sub
pop
xchg
sti
insb
imul
mov
mov
adc
pop
or
outsb
fcomp
inc
popl
rol
pop
es
addr16
jge
push
sbb
cmp
jl
repz
xchg
sub
cli
sub
xor
push
xor
or
xchg
and
inc
pop
bound
mov
and
fcmove
xchg
xchg
mov
mov
xchg
xchg
push
sbb
pop
or
mov
add
lcall
pop
jbe
test
jne
ret
repnz
pop
mov
adc
jge
insb
pop
or
mov
je
dec
cwtl
jne
lea
dec
stos
dec
push
rcrl
inc
push
sub
and
jb
sbbb
orl
sbb
leave
loopne
adc
mov
hlt
dec
mov
sub
ds
jns
ds
push
xchg
pop
inc
and
pop
cmp
gs
setns
dec
fbld
in
test
push
mov
and
jg
divb
pusha
sbb
lods
sbb
push
stos
mov
call
enter
les
outsl
xchg
out
or
sahf
push
mov
xor
jp
lods
cld
and
xchg
enter
mov
adc
jbe
jl
cmovg
inc
adcl
pop
dec
mov
andb
and
dec
jl
jo
mov
adc
adc
mov
sub
mov
inc
test
lret
jbe
inc
lahf
imul
cmpsl
adc
cmp
jbe
movsb
jg
xchg
js
sbbl
mov
test
addb
mov
push
test
sti
lods
test
int
fsub
inc
sub
sbb
jmp
mov
xchg
inc
les
sbb
cmp
add
rcr
fcomps
fisubl
cli
and
fisttpll
pop
fwait
orl
adc
sub
mov
sub
dec
andb
incl
and
cmc
mov
mov
lock
fucomi
mov
cwtl
mov
loopne
cltd
dec
fs
xorl
jns
test
or
shl
dec
sub
repz
lock
push
jo
daa
xchg
ret
sbb
in
push
inc
mov
repnz
add
in
inc
aas
jle
lods
shrl
or
xchg
push
cmp
add
sqrtps
mov
sbb
push
mov
jmp
cmpsb
cmp
jge
movsl
sbb
hlt
repz
in
xchg
fsts
into
xchg
aam
mov
or
inc
mov
lods
pop
nop
mov
aas
pop
ds
mov
mov
adc
std
mov
fldt
adc
push
pop
mov
push
in
xchg
loope
test
add
sarb
das
lcall
aam
in
push
lds
test
xor
sti
es
out
dec
pop
sti
jae
add
jno
cwtl
cli
rolb
dec
scas
fcmovu
pushf
insb
mov
out
rorl
mov
cli
jne
push
into
in
cpuid
sub
hlt
jno
into
popa
push
mov
mov
cmpsl
fs
lock
or
bnd
leave
lods
mov
jecxz
push
ret
ss
in
idivb
test
mov
insb
stos
imul
std
push
popf
das
jp
or
pop
imul
sub
test
or
push
cmp
jne
pusha
ret
int3
and
imul
out
mov
xchg
int
ja
push
mov
xor
push
and
dec
enter
adc
adc
push
add
outsl
cmc
cmc
out
inc
inc
aaa
mov
cmp
addr16
out
adc
into
rcrl
jmp
shl
ss
adc
ret
jle
int
mov
leave
cmp
xchg
outsb
cli
push
inc
nop
test
jge
int
sbb
aas
inc
dec
pop
sahf
insl
lcall
pop
mov
fimuls
clc
jbe
in
mov
xor
lds
shrl
adc
outsl
clc
xor
inc
shrl
mov
std
ss
mov
jge
jb
jg
jo
mov
mov
fcompl
test
push
cmc
data16
inc
jns
mov
cmpsb
xor
mov
pop
enter
pop
and
incb
rorb
jns
hlt
lcall
dec
add
sbbl
jb
adc
mov
inc
mov
lods
insl
xor
jbe
sbb
aaa
push
mov
jmp
ret
imulb
arpl
stos
mov
cmpsb
jnp
adc
sbb
push
xchg
and
jo
pop
cltd
mov
out
cmp
adc
cli
cmp
outsb
lods
adc
cmpsl
jnp
lock
in
fnstcw
inc
aas
push
mov
loope
mov
sub
aaa
bnd
mov
xchg
cltd
jmp
cli
rol
pop
xchg
inc
cmp
xchg
loop
shr
outsb
fstps
lock
mov
inc
mov
push
jg
in
mov
cmp
in
loop
decl
jle
loopne
es
stc
dec
mov
rcll
ret
or
movsb
andl
js
pop
inc
and
add
mov
pop
fs
inc
push
jl
mov
and
out
insl
cmp
ja
dec
insb
test
in
ficoms
repnz
push
icebp
fwait
scas
fs
pop
push
mov
iret
jecxz
movsb
fimull
gs
jle
jl
jmp
push
jle
cmp
cmp
pop
jecxz
xor
enter
sub
