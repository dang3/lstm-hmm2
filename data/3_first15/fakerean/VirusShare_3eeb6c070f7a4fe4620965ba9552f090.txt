sbb
add
mov
sbb
lock
adc
mov
data16
popf
and
jae
mov
test
dec
pop
test
xchg
daa
sbb
and
xor
mov
lret
push
inc
imul
xor
lods
push
ljmp
stos
rcrl
cs
ds
dec
fwait
adcb
or
xor
in
sbb
ljmp
dec
or
sbb
lcall
dec
xchg
arpl
frstor
bound
mov
popf
fsubs
and
sub
lock
jne
test
mov
test
ret
pop
mov
outsl
rorb
adc
push
xor
inc
inc
sub
in
mov
adc
or
rorb
push
testb
lods
pop
dec
lahf
push
fcoml
cmp
jl
mov
jnp
jb
lret
test
add
inc
shlb
dec
outsl
push
or
mov
rorb
mulb
subb
daa
xor
mov
push
decl
in
adc
add
mov
mov
xlat
mov
jl
lods
sub
aas
inc
fadd
or
out
in
add
bound
push
test
jge
in
movsl
test
hlt
mov
test
add
jnp
enter
cmp
push
popa
rolb
mov
or
arpl
clc
or
ss
push
add
pop
lods
sbb
sub
sahf
mov
jg
xchg
aad
rorl
insb
sbb
cld
and
jnp
icebp
jl
cmpsb
cmc
ret
push
jnp
sub
ss
sbb
adc
lods
lods
xchg
cmc
mov
incb
lcall
fstpt
mov
cli
mov
ja
jno
jns
cmp
mov
rorl
xchg
std
dec
shl
into
pop
adc
xor
dec
add
and
xor
pop
pop
pop
mov
adc
data16
inc
fsubr
inc
cmp
ja
fs
push
xchg
int3
test
xor
cwtl
cmp
xchg
lods
inc
sub
fwait
insl
or
fildll
cmpsb
push
lock
into
inc
xchg
push
sub
jge
jmp
insb
popa
jns
rorb
gs
cs
inc
or
add
ss
mov
adcb
push
dec
jle
lcall
sbb
jne
pop
addr16
or
rcr
pop
insb
cli
fnstsw
arpl
lock
ret
sub
lods
jl
mov
insl
lods
lods
cmc
push
and
inc
jnp
push
jbe
dec
xor
inc
cld
into
js
inc
inc
xor
jne
mov
imul
sbb
inc
sti
cli
lret
push
inc
push
push
sbb
pop
cmp
xor
inc
sbb
mov
inc
mov
lahf
inc
add
cmp
in
adc
jmp
mov
and
into
repnz
mov
les
adc
cmp
rol
rcl
sbb
ss
pusha
outsb
inc
sti
mov
add
or
push
lds
lea
in
inc
inc
jge
push
add
sahf
femms
xor
dec
jmp
data16
pop
jge
jmp
in
fistpl
ret
or
insl
cmpsl
outsb
hlt
shlb
jbe
loop
inc
lahf
test
and
sbb
outsb
loop
xor
and
mov
sbb
insl
fistl
cmpsl
dec
stc
stos
or
adc
jmp
lds
inc
adc
clc
push
sub
fildl
mov
je
hlt
sbb
lock
sbb
jo
out
scas
enter
movsb
ja
shl
pop
pop
lock
pusha
push
les
adc
in
jmp
in
pushf
xlat
rcrl
mov
int
nop
in
mov
xchg
mov
leave
out
add
clc
enter
clc
push
xchg
or
stos
add
xor
jmp
fimuls
mov
or
aaa
dec
sbb
xor
mov
pop
or
jno
xchg
or
cmp
in
pop
fcoml
rcll
jmp
pop
in
xor
inc
rcr
sub
jmp
mov
pop
pop
or
jmp
push
sub
mov
add
sti
sub
test
scas
in
push
sahf
mov
sbb
inc
inc
dec
in
sub
add
loop
insl
sahf
push
arpl
and
int
or
loopne
add
js
jnp
mov
adc
push
flds
xlat
mov
int3
stos
adc
pop
cmpb
xchg
icebp
aad
loope
jne
add
inc
loop
ret
or
mov
dec
das
les
jmp
dec
lods
rclb
inc
inc
jmp
fwait
jge
xchg
xor
xchg
sbb
push
ds
dec
jecxz
dec
mov
in
or
nop
jle
hlt
cmp
or
mov
aam
mov
xlat
imul
jmp
cmp
sbb
xor
mov
cld
mov
xor
jmp
cmp
dec
js
adc
push
mov
test
jge
inc
cmp
or
clc
mov
lcall
je
xchg
sub
xor
mov
xor
sub
int
popa
repz
sub
outsl
lock
int3
cmp
ljmp
addr16
and
jns
xchg
mov
push
shlb
and
push
sbb
mov
jb
rolb
cmp
pop
rol
sti
jns
jae
addb
pop
push
jge
inc
push
rolb
outsb
cmpl
xchg
dec
jbe
jns
repz
mov
pop
push
mov
leave
sarb
push
mov
add
das
adc
mov
outsb
clc
sbb
das
push
data16
xchg
mov
jae
and
push
xchg
push
push
push
pop
xchg
sbb
rcrl
mov
sub
jb
sub
adc
dec
dec
mov
testl
xchg
out
outsb
or
aaa
dec
shl
int3
movsb
roll
imul
mov
aas
push
jo
fnsave
or
je
pop
push
rcl
clc
mov
pop
xchg
hlt
lods
xor
insb
push
inc
and
std
add
xorb
mov
in
ja
push
jecxz
stc
sbb
pop
mov
or
xchg
mov
enter
je
pop
cmpb
out
or
cmp
outsl
pop
mov
aaa
int3
jle
into
jns
imul
mov
mov
or
dec
mov
fbstp
fsubr
loope
and
cmp
mov
lahf
jmp
ud2
lahf
mov
inc
dec
adc
xchg
or
jg
insb
jo
iret
adc
fsub
in
cmpsb
sti
popa
aas
aaa
push
leave
movsb
arpl
shll
dec
test
pop
xor
xchg
lods
divb
jecxz
mov
pop
stos
mov
mov
call
scas
out
jb
cmp
neg
insl
popa
cmp
add
cmp
cltd
repnz
loope
shrb
popf
sub
push
xchg
mov
xor
movsl
mov
mov
mov
adc
lret
or
xor
dec
push
add
ss
adcb
adc
and
mov
scas
arpl
pop
and
gs
faddp
sbb
pusha
xchg
push
jbe
outsb
add
xchg
mov
pop
ret
ljmp
mov
jecxz
scas
js
cld
jo
pop
and
insb
mov
out
push
add
mov
or
inc
sar
mov
dec
sub
sub
sbb
insb
sbb
inc
xchg
or
push
push
xor
mov
inc
mov
push
je
jge
adcl
xchg
std
mov
bound
mov
fucomip
sbb
stos
sub
pop
sub
xor
outsl
add
into
and
call
mov
dec
and
xor
cmc
leave
push
idivb
mov
add
mov
int3
pop
jg
lds
fmuls
pusha
enter
cmp
data16
mov
push
sbb
testb
das
pop
int3
add
aaa
loope
imulb
outsb
repnz
cwtl
inc
test
std
mov
push
add
fsubrl
test
movsb
ja
push
sarb
fcmovnu
in
xchg
loope
scas
repz
in
adc
les
push
sbb
xchg
push
jmp
push
or
aaa
or
fs
sbb
outsb
sub
fdivrs
mov
xchg
lds
fisubrs
cli
cltd
mov
stc
xor
adc
inc
dec
loop
jne
adc
or
xchg
pop
rcr
mov
fcomp
insb
je
aas
insb
popa
lret
dec
adc
test
mov
xor
push
pop
cwtl
mov
jmp
fwait
out
divb
pop
xor
stc
out
outsb
inc
add
movb
sbb
cmpsl
fisttpl
cmp
mov
ja
movsb
xor
ficompl
add
and
cmp
js
outsb
adc
jmp
out
cld
in
into
add
test
and
aaa
ficompl
cld
rclb
loop
rcrb
ret
daa
dec
pop
xor
jecxz
xchg
bound
jl
and
bound
imul
out
jns
xlat
and
test
insb
outsb
cwtl
fdivr
pop
mov
out
push
popf
movsb
jns
adc
or
aam
mov
test
cmpsb
daa
dec
andb
dec
cmp
jbe
or
push
mov
xor
and
sub
js
not
cmpsb
out
pop
push
cld
inc
popf
jbe
cld
add
sahf
lret
pop
push
jnp
and
sub
or
sbb
inc
mov
addr16
xchg
pop
mov
cmp
pop
add
sbbl
sbb
fisttpll
xor
mov
das
std
insb
adc
sbb
inc
xlat
inc
add
pop
add
push
sub
and
repz
or
movaps
or
xchg
popf
lea
sbb
sbb
jle
jmp
mov
nop
lret
inc
jns
mov
shll
icebp
add
sbb
or
sub
les
sbb
inc
std
or
jns
ljmp
jmp
xor
push
push
jp
iret
pop
test
popa
mov
dec
cwtl
cld
clc
jmp
pop
loop
add
push
jg
test
pop
mov
pop
jne
xor
jp
cmp
sub
xchg
dec
mov
xchg
mov
dec
out
add
shll
out
mov
dec
test
xchg
push
pop
das
mov
fucompp
push
jo
inc
dec
pop
enter
jge
mov
sub
inc
test
ret
stos
lock
fs
cmp
sub
mov
dec
shll
sbb
cmpb
test
popa
cmpsb
xor
pop
dec
inc
lods
aad
pusha
mov
out
xor
mov
mov
iret
stos
mov
aad
fdivrp
sub
or
mov
scas
fists
and
enter
inc
jp
notb
dec
dec
out
mov
loopne
enter
pop
js
xlat
xchg
mov
jecxz
mov
lret
shrb
push
or
jbe
add
mov
cmp
xor
shl
inc
sub
mov
inc
mov
adc
cltd
add
ds
testl
ret
or
jnp
fimuls
stos
js
nop
sub
out
inc
stos
in
sub
fisttpll
mov
clc
mov
adc
inc
mov
imul
repz
stos
in
push
outsl
mov
aaa
add
cmp
push
cmp
xchg
lcall
ret
les
mov
nop
cmp
jbe
nop
and
lret
adc
mov
sub
dec
out
loope
mov
fmul
pop
add
xorl
scas
mov
xor
dec
jle
fadds
aaa
mov
jo
xor
sbb
dec
shll
mov
fldt
cmp
xor
mov
mov
outsl
mov
inc
or
inc
test
movl
mov
rorb
cmp
mov
jge
cwtl
push
popf
fiaddl
mov
dec
mov
push
mov
push
and
sbb
aas
enter
push
fndisi(8087
sbb
outsl
adc
movsl
fldenv
add
int
push
and
and
shrb
inc
xchg
xchg
mov
mov
stos
dec
clc
adc
or
lcall
stos
lahf
in
dec
je
push
sub
cwtl
xchg
mov
stos
mov
fs
hlt
arpl
dec
jp
cmp
std
in
adc
sbb
iret
push
stos
fldenv
push
push
in
je
xchg
test
or
loopne
dec
ror
lock
cmpb
arpl
aam
ret
nop
inc
add
sbb
jge
mov
jbe
add
pop
lock
or
push
repnz
in
inc
imul
xchg
adc
ret
dec
adc
mov
jae
fsts
jb
repz
inc
xchg
stos
cmp
xor
sar
jns
xor
xlat
cmp
cmc
sbb
add
jp
mov
xchg
push
int
cmp
sub
inc
fcoml
xchg
or
aas
lret
and
mov
icebp
xor
insb
lock
mov
aas
or
or
test
xor
cmpl
xchg
fdivs
lods
xor
ss
sbb
mov
mov
movsl
popf
aad
cld
push
pop
add
loope
sub
mov
es
sub
dec
loopne
sti
xor
rcl
sbb
mov
jge
mov
mov
add
xchg
fstps
jno
xchg
scas
and
pop
bound
inc
push
ljmp
fcompl
jnp
dec
popf
das
inc
inc
mov
sarb
cli
xor
fcoml
int3
loop
shll
cmp
loopne
outsb
call
fildl
push
int3
pop
xchg
mov
gs
dec
xchg
jecxz
cmp
lods
cs
movsb
in
cs
hlt
push
js
in
mov
push
sub
outsb
sarb
push
push
pop
sar
and
scas
pop
aas
stc
shlb
insl
inc
int3
mov
in
pop
jb
xchg
jp
push
nop
mov
mov
or
ljmp
test
pop
nop
xchg
xor
pop
lret
out
les
pop
movntq
out
nop
mov
push
and
mov
shrl
das
hlt
cmp
lods
sub
leave
outsb
xchg
sbb
sub
sub
outsb
test
lods
push
aaa
divb
cld
orb
repz
loop
roll
movsb
and
inc
dec
pushf
ss
sbb
icebp
stc
notl
sahf
stos
mov
adc
repz
push
and
jp
xchg
push
xor
fdivr
dec
aas
or
cmpsl
mov
jl
std
cmpsl
gs
xchg
and
adc
xchg
mov
push
and
xor
into
movsl
in
pop
mov
hlt
lds
or
add
out
jp
pop
int3
cs
xchg
sbb
jle
add
add
cmp
rorb
mov
sub
xchg
mov
mov
mov
sub
adc
mov
jmp
scas
jg
enter
fcmovbe
xchg
cmp
mov
jns,pn
imull
dec
cmp
pop
lea
ss
mov
inc
add
jns
dec
inc
jbe
inc
mov
lcall
mov
aam
or
decl
aad
xchg
or
mov
cmp
call
js
ret
pop
icebp
ss
xchg
dec
aam
bound
inc
mov
lods
shlb
sbb
push
hlt
lea
add
adc
xor
nop
filds
xlat
es
data16
das
push
pusha
mov
adc
pop
push
fistl
adc
push
ja
sbb
hlt
sbb
dec
dec
pushf
fimull
mov
or
inc
mov
mov
cmp
movsl
sbb
dec
sub
push
mov
ds
out
sbb
aaa
pop
loopne
test
fs
pop
movsb
xor
mov
dec
popf
dec
nop
push
mov
adc
int
xchg
cmpsl
fstpt
lods
mov
out
jnp
int3
stos
repz
test
pop
jb
fstl
push
inc
fisubrl
pop
in
loopne
in
or
jecxz
filds
pop
cwtl
loop
sub
scas
jl
push
jecxz
call
lahf
adc
in
roll
jl
cmp
mov
pop
push
aad
adc
jg
add
scas
jno
push
dec
andl
js
mov
rorb
sbb
lcall
daa
add
lret
sbb
push
mov
or
ljmp
xchg
cld
dec
cmc
inc
jecxz
outsb
cld
lahf
push
imul
fs
pop
cltd
dec
iret
imul
es
sbb
mov
gs
jge
jp
jg
fbstp
pop
add
sbb
out
push
out
pop
xchg
movsl
mov
les
dec
dec
stc
adc
movsb
push
gs
fisubrl
clc
xor
pop
int3
ja
mov
inc
cmc
das
lods
dec
jl
inc
mov
cld
dec
lea
or
jo
adc
inc
push
xchg
jnp
fsub
dec
cmc
ret
mov
mov
out
add
jnp
mov
lods
pop
fcmovbe
popl
hlt
daa
jecxz
or
lea
imul
pop
mov
pop
xchg
add
std
pushl
mov
add
in
pop
pop
mov
cmpsl
push
shrl
cltd
int3
sub
or
mov
and
add
mov
inc
mov
lods
das
outsb
push
push
loope
lcall
mov
in
test
cltd
in
adc
or
stos
rcrb
cmpsl
cmpsl
stos
sbb
mov
pop
adc
inc
sub
push
insl
fs
loop
clc
fwait
sbb
aas
fwait
cmpsl
lods
dec
dec
pop
fxch
xchg
xor
pop
dec
mov
mov
roll
mov
xchg
inc
daa
xor
jae
jne
movzwl
stos
cmp
pop
mov
jg
xchg
fmull
jb
dec
push
mov
mov
dec
into
and
mov
loope
cs
insl
pusha
jp
xchg
es
add
dec
fdivs
mov
xor
bnd
fxch
jecxz
xor
scas
mov
in
in
cld
imul
mov
jmp
pop
adc
ret
mov
out
xchg
mov
mov
lea
xor
stos
mov
out
popa
sarb
add
loope
inc
pop
mov
adc
int3
scas
cmc
imul
cmp
test
icebp
cwtl
cmp
mov
xchg
insb
pop
mov
xor
imul
clc
jl
test
punpckhdq
xor
int3
mov
and
pop
pop
js
cmpsb
inc
or
lock
xchg
pop
jmp
popa
inc
mov
add
add
cmp
xchg
iret
nop
imul
add
pop
cwtl
mov
inc
hlt
lcall
jmp
and
hlt
negl
xchg
sbb
mov
std
ja
sub
jl
repnz
jecxz
mov
aad
nop
xchg
in
xchg
cmp
decl
fistl
popf
or
push
pop
mov
adc
push
or
lods
fwait
pop
iret
pop
movsb
fnstcw
add
or
pop
imul
out
lcall
or
out
cmpsb
lods
adcb
jmp
push
clc
pop
cmp
jmp
fimull
push
daa
mov
push
repz
cwtl
jns
xor
cmpl
ret
dec
mov
fst
jo
push
mov
and
mov
or
bnd
push
xor
push
push
lods
sub
rcr
push
icebp
add
out
inc
cmp
insb
notl
mov
mov
ss
sbb
shld
std
pop
xchg
lds
es
cmpsl
xor
repz
sub
repnz
movsl
sti
into
cmp
stos
fidivs
cwtl
xor
pushl
ljmp
xor
xchg
loop
std
mov
test
daa
popf
out
ror
xor
and
jae
push
outsl
jo
insl
cmpsb
mov
jg
jg
mov
sub
jns
jmp
sbb
fiaddl
clc
jns
in
push
arpl
or
sbb
xchg
dec
movsl
fmull
dec
push
cmp
imul
cwtl
lcall
ss
testl
ret
mov
add
jb
out
stc
ret
or
xchg
mov
dec
jmp
rorl
mov
cmpsl
xor
pop
dec
lea
inc
iret
dec
sbb
test
mov
stc
stc
sbb
les
lds
das
insb
mov
mov
mov
pop
mov
adc
cmpsb
lret
dec
push
out
js
popf
fistpll
rclb
scas
cmp
mov
jae
cmp
fdivl
iret
insb
daa
mov
mov
lods
xchg
imull
jp
sub
jle
pop
sti
sbb
lock
xchg
add
std
add
jle
mov
mov
fwait
jns
push
js
dec
jns
xchg
xchg
mov
out
inc
push
dec
mov
sub
sbb
jo
cmp
scas
jle
jg
rclb
push
mov
test
adc
les
ret
jo
ret
jp
pop
mov
and
out
andb
out
sbb
pusha
stos
ja
fwait
xor
adc
lods
cmpsb
and
cltd
iret
cli
sar
xor
cmpsb
clc
push
mov
mov
fdivs
and
jge
jle
mov
push
sti
and
mov
mulb
mov
jmp
push
ret
out
stos
inc
into
das
mov
push
rcll
xor
mov
push
loopne
nop
sub
movsb
arpl
mov
ss
ret
bound
out
xchg
mov
jns
lret
pop
adc
sbb
sti
xchg
mov
lea
jnp
je
aam
std
lock
call
ja
fs
lret
xchg
xchg
fdivp
adc
cmc
jae
dec
sub
jne
mov
pop
add
arpl
lcall
es
aas
jo,pn
mov
cltd
icebp
fdivs
int3
lcall
enter
dec
div
out
imul
vpshlw
xor
pop
sbb
mov
subl
out
xor
sub
push
and
mov
fidivl
lods
jg
out
add
and
mov
mov
dec
ds
add
jl
jle
xchg
std
lret
lret
in
cs
pop
int
and
pop
dec
mov
aad
std
pop
call
dec
pop
lret
outsl
filds
sbb
pushf
lods
iret
inc
call
inc
xchg
mov
dec
stos
and
aas
cmc
iret
nop
pop
icebp
add
lahf
inc
ja
aam
mov
jge
pushf
xchg
out
cmp
mov
push
pop
rcll
das
pop
movsb
mov
xchg
movb
and
mov
mov
stc
aam
aad
pushl
imul
scas
je
push
mov
ss
rcrl
cmpsb
inc
jg
imull
push
cmp
push
xor
mov
and
in
jae
int3
jg
or
insb
aaa
data16
cli
scas
ret
ja
jne
imul
cs
xchg
mov
inc
fisubs
shll
lahf
and
pop
je
pop
push
xchg
aas
repnz
push
or
repz
popf
jne
sbbl
jg
pop
into
and
mov
jb
xor
es
push
add
cmp
je
sbb
cmpsb
pushf
push
adc
cltd
fadds
jo
scas
push
ja
loope
adc
push
lds
aam
push
cmp
xchg
pop
sub
fnstcw
mov
mov
movsb
mov
jl
fldenv
inc
mov
cli
fistpll
mov
push
push
sarl
pop
ljmp
mov
cmp
inc
ss
sub
cmp
push
jb
mov
int
leave
pop
xor
mov
jp
cltd
or
push
scas
adc
jno
jo
xor
rcrl
fwait
mov
xlat
inc
aam
mov
push
mov
jb
fdivs
inc
mov
adc
push
repz
add
cmc
jge
or
ja
and
mov
sub
fmull
mov
insb
cli
hlt
test
dec
push
rol
mov
mov
mov
pop
jge
ljmp
xor
cmpsl
mov
or
jo
imul
sbb
popa
call
test
cmpsl
call
mov
push
scas
lret
cmp
mov
gs
stc
mov
push
lods
nop
mov
push
out
test
sahf
cmp
mov
push
pop
mov
je
nop
stos
adc
into
lret
mov
fneni(8087
pop
xor
andl
push
cmp
aam
shll
push
fists
test
cmp
mov
fwait
sub
adc
rolb
xor
sub
add
lret
xchg
jp
inc
out
lods
imulb
sub
pop
and
pop
inc
sbb
addb
out
fisubrl
lcall
cmp
icebp
jnp
test
xchg
je
stos
jbe
sbb
or
xor
les
push
fadd
adc
ja
sbb
dec
cwtl
jecxz
lret
or
insl
dec
xor
out
inc
mov
adcb
inc
jecxz
mov
jb
inc
or
mov
mov
jae
inc
lods
sub
in
mov
push
mov
cmp
mov
fnsave
loop
ds
negl
jp
mov
lods
jno
out
rol
push
sbbl
mov
inc
mov
inc
mov
jp
pop
cmp
mov
int3
das
jne
repnz
jne
dec
adc
test
or
out
pop
inc
cmp
inc
push
fildll
push
je
jo
jno
stos
sarb
fisttpll
insb
add
pop
jae
fisubrl
xchg
push
sub
idiv
jecxz
dec
paddsb
jecxz
negl
pop
jnp
jo
mov
gs
dec
test
cs
stos
cmp
fs
shll
mov
pusha
loopne
aad
push
and
jmp
in
xor
int3
arpl
outsl
lahf
jmp
call
sub
pop
pop
dec
jne
std
cld
icebp
adc
outsl
mov
cld
cltd
fs
xor
jle
mov
faddl
cltd
stos
dec
mov
jge
jle
call
fistpl
and
adc
mov
int
fdivs
leave
sub
fnstenv
mov
cmpsl
lods
mov
cmc
fidivl
push
mov
ja
push
into
add
ss
jbe
cmp
rolb
test
in
ss
dec
test
and
orb
out
fsts
mov
ss
arpl
and
ret
pop
jmp
test
mov
insb
jne
in
xor
mov
xchg
ret
xchg
xchg
jo
in
mov
bound
data16
jo
mov
cld
insb
jecxz
pop
enter
ljmp
mov
idivb
lods
in
pushf
add
inc
jp
enter
push
xchg
jb
ror
xor
repnz
add
or
adc
sbb
inc
mov
or
lret
bound
cmp
test
sub
sbb
daa
adc
lds
pop
jnp
xchg
add
int3
mov
icebp
insb
adc
repz
or
and
xor
leave
das
imul
in
xlat
xchg
fs
sub
sbb
in
sbb
cmp
loopne
push
ret
jnp
mov
or
mov
out
cli
sbb
imul
pop
bound
inc
pop
loopne
sti
fisubl
adc
dec
std
cmp
lea
pop
dec
leave
and
pop
rolb
push
out
pop
inc
cmp
push
mov
jmp
xlat
cmp
test
sub
jne
js
xlat
jmp
negb
das
push
orb
daa
sbbb
dec
jmp
mov
adc
cwtl
pop
add
repnz
cli
lcall
lock
xchg
sub
fwait
inc
cltd
in
andl
sub
outsl
and
sub
sub
lret
add
mov
lds
sbb
gs
pop
add
int3
fbstp
insl
cmpl
xor
xlat
jnp
fs
iret
inc
push
dec
jae
out
rolb
adc
sbb
daa
sarl
lods
das
pop
aaa
add
fidivrs
pop
fs
out
add
add
dec
and
add
repz
sti
mov
ja
xchg
pop
cld
sarl
mov
push
out
jge
lock
out
sbb
lods
sbb
pop
mov
test
push
cmc
mov
add
aaa
movsl
pop
adc
movsl
inc
mov
mov
stos
cmpl
dec
sub
repnz
and
mov
sarb
push
fnstcw
lds
jb
mov
in
jmp
call
out
movl
jl
imul
test
push
icebp
mov
pop
mov
int
je
mov
insb
mov
aam
fsubs
incb
out
push
jbe
sbb
mov
pop
push
addr16
push
fnsave
insl
call
sbb
xor
mov
imul
stos
sub
jae
lret
pop
mov
dec
sahf
push
push
fsubrp
enter
xchg
jbe
ret
mov
inc
pop
add
je
jns
xor
or
and
sbb
sahf
jmp
es
lcall
xchg
repz
cmpsb
das
cli
pop
push
add
inc
push
out
cmp
dec
jae
lcall
sbb
push
sub
repnz
adc
ret
test
cmc
push
pop
inc
pop
lret
imul
jo
outsb
mov
jne
fnsave
shr
sti
jbe
jns
aaa
dec
adcl
mov
iret
pop
cmp
adc
sbb
and
mov
and
mov
scas
outsl
pop
or
sbb
orl
lret
rcll
aas
stos
inc
jle
inc
jp
jo
inc
leave
insl
inc
sbb
xchg
pop
rolb
xlat
sub
test
cmp
in
fmuls
push
mov
out
add
pop
or
into
dec
call
sti
pusha
jecxz
pop
inc
imul
les
rclb
iret
shr
hlt
ret
mov
pop
notl
int3
negb
outsl
pop
lds
icebp
mov
cs
rclb
jge
sub
mov
xchg
adc
js
enter
loopne
mov
repnz
xor
dec
mov
enter
js
mov
mov
sbb
xchg
mov
repnz
lret
out
lods
xchg
jnp
pusha
leave
dec
addr16
cmp
pop
sub
cs
jle
loopne
pop
sbb
jns
test
dec
xchg
add
aaa
inc
clc
push
push
rclb
idivb
mov
inc
stos
cmp
mov
dec
sbb
test
cmp
pop
pop
aam
ficomps
push
das
mov
cmc
cld
pop
je
fcoml
push
dec
fcmovnb
testb
mov
dec
mov
pop
sahf
jns
mov
out
push
inc
nop
stc
jg
dec
imul
int3
inc
mov
cmp
jnp
xor
mov
leave
adc
fmull
mov
frstor
int
adcb
mov
adc
pop
xorb
scas
pop
in
xchg
lods
mov
es
sub
dec
or
pop
cmp
sub
or
insb
das
cmpsb
or
leave
mov
pop
mov
mov
movsl
arpl
mov
push
aas
aas
mov
adc
and
outsl
mov
movsb
dec
mov
add
lcall
repz
mov
aas
fwait
adc
push
ret
int
xor
xchg
fnstenv
ljmp
xor
mov
mov
rcrl
jg
aam
imul
mov
pop
test
sub
cwtl
xchg
mov
push
mov
sbbl
cmova
pop
pop
arpl
js
fwait
movsl
pop
fcmovu
int3
mov
adc
push
lods
sub
inc
out
mov
icebp
and
pop
jge
jp
xchg
sti
loopne
dec
adc
popf
push
add
jmp
xchg
je
js
xor
xor
mov
cmp
cmpb
jnp
pop
xor
decb
loop
dec
imul
ror
fsub
lcall
dec
call
cmpsl
dec
fstl
mov
sbb
gs
inc
lahf
push
fdivrs
hlt
pop
clc
xchg
outsb
pop
scas
jl
js
dec
xchg
mov
dec
add
cmpsb
lds
jno
and
adc
sbb
pop
adc
ss
clc
jno
cmp
push
ljmp
mov
xchg
xor
mov
jmp
cmp
push
or
xchg
xchg
sbb
stc
int3
stos
push
sbb
in
adc
popa
fprem1
cli
sbb
xchg
inc
es
mov
scas
movsl
movb
sub
mov
push
adc
sti
in
mov
fnstsw
stos
outsb
cmp
xchg
and
rclb
cmp
cmp
fcom
add
in
data16
negb
pop
mov
push
pop
mov
mov
sbb
daa
int
add
mov
lret
ret
cmpsb
pop
lahf
mov
test
pop
stos
jg
les
xor
imul
mov
sbb
mov
leave
faddp
cmp
icebp
outsl
inc
mov
inc
ret
clc
je
xor
shll
rcrb
pushw
js
mov
rcrb
sbb
adc
pop
xlat
inc
testl
mov
lods
add
mov
movsb
mov
loop
mov
cmpsb
shl
and
insl
shlb
and
mov
inc
add
and
pop
ss
and
test
mov
xchg
ss
inc
jae
push
cmp
add
mov
mov
out
adc
and
lret
inc
inc
push
test
adc
mov
sub
sub
lods
push
jmp
js
xor
ljmp
fimull
divb
mov
pop
xchg
mov
push
xchg
fwait
pop
or
mov
pop
test
cs
loop
adcb
or
sbb
jne
stos
or
movsl
adc
outsl
popl
cld
add
mov
xchg
push
and
xchg
andb
jns
pusha
adc
ret
push
arpl
push
xchg
add
or
fcompl
mov
mov
xor
dec
mov
addr16
lea
or
dec
sbb
int3
ficoml
jle
or
and
mov
pop
lock
sbb
int
je
in
out
stc
inc
popf
or
push
and
imul
lret
movsb
mov
inc
out
pushf
out
cwtl
mov
negb
std
dec
xlat
ja
cltd
push
subl
dec
fwait
outsb
jecxz
xchg
mov
sahf
mov
adc
lret
push
jecxz
mov
inc
and
pushf
sbb
jo
push
xchg
inc
push
and
pushf
jne
or
jo
adc
adc
push
dec
or
xchg
push
mov
aad
ret
inc
mov
mov
xchg
in
adc
fisttpl
jb
aaa
cmp
sbb
inc
cltd
stc
jmp
insl
add
push
fwait
call
cwtl
add
call
push
push
xchg
xchg
mov
aad
jns
mov
repnz
and
mov
and
lock
mov
mov
xor
js
mov
insb
mov
fbld
jns
out
push
fwait
sbb
push
movsl
fists
push
push
pop
push
push
add
lcall
mov
daa
cmc
dec
scas
sub
sub
dec
pushf
jnp
test
xlat
insb
arpl
stos
aad
pop
ja
add
xor
pop
and
fsub
pop
jae
mov
scas
jg
add
dec
jb
dec
push
iret
pusha
mov
push
xor
or
push
pop
push
fld
sub
imul
lds
adc
cld
or
jl
dec
mov
dec
dec
cltd
dec
sbb
jns
cmp
mov
sub
mov
pop
loop
sub
cmpsb
fisttps
xor
dec
shlb
nop
jno
test
cmp
jmp
ljmp
pop
in
orb
stos
pop
or
jge
mov
jae
xchg
add
xchg
xchg
cmpsl
cmp
push
and
neg
ret
repnz
mov
mov
mov
outsb
int
out
sbb
jno
out
inc
jmp
push
sub
cmp
dec
js
cli
sbb
fistpll
jns
clc
fstpl
adc
fwait
js
loop
cmpsb
adc
fisttps
ja
push
fidivs
pop
nop
pushf
icebp
inc
sahf
dec
in
js
imul
xchg
ljmp
int
sbb
sbb
mov
push
in
cmp
nop
mov
outsb
inc
sub
insl
add
mov
in
aad
cmp
jns
insb
xchg
pop
inc
pop
mov
movsl
jns
mov
lds
stc
int3
int3
or
pushf
jbe
adc
testl
lds
dec
dec
pop
fxtract
cmp
mov
sub
xchg
jmp
sub
imul
stos
aaa
mov
dec
pop
jnp
orl
outsb
mov
je
sub
dec
inc
in
sbb
jne
les
scas
nop
jae
dec
mov
xchg
and
int
cs
sub
mov
ret
filds
mov
fadd
inc
dec
ss
jno
mov
pop
pop
in
idivl
in
dec
mov
stos
cmp
jno
mov
mov
repnz
push
cmp
ja
inc
mov
into
sbb
mov
xlat
cld
dec
inc
dec
cltd
lods
lcall
int
mov
das
bound
mov
xor
imul
mov
mov
inc
adc
fwait
ret
dec
jo
mov
lods
mov
stos
xchg
out
imul
push
jge
cmpsl
cmp
ret
push
punpckhwd
dec
dec
xchg
sbb
stc
arpl
cmp
jmp
in
clc
jecxz
rcrl
inc
call
cmp
xor
test
push
jns
xchg
imul
gs
cld
icebp
loop
push
imul
ja
add
jmp
mov
mov
jl
mov
mov
sbb
mov
je
jb
das
and
int
enter
and
test
pop
adc
pop
sbb
jg
out
or
insl
ds
insb
mov
outsl
sub
sub
nop
xor
pushf
mov
dec
jb
cmp
insb
dec
jmp
xchg
repnz
lret
cld
test
ret
ljmp
repz
stc
in
dec
adc
and
mov
mov
push
mov
cwtl
pusha
hlt
mov
loopne
lahf
mov
sub
xchg
pop
cmc
push
inc
jg
sbb
pop
xor
rcll
div
sbb
shrb
adc
sub
test
xchg
loope
int3
mov
testl
mov
lock
pop
xchg
outsb
idivb
pop
xlat
dec
inc
xor
ret
call
jbe
dec
pushf
sub
push
push
xor
fstl
cmpsb
xor
mov
sbb
and
rolb
test
lds
out
rep
cltd
shrb
dec
jo,pt
lea
int3
xor
mov
pminsw
adc
push
push
adc
rcll
push
scas
into
mov
in
imul
push
stc
lock
sbb
shll
cltd
mov
xchg
sahf
iret
fsubr
arpl
pop
outsb
xchg
xor
xor
popf
aad
addr16
getsec
or
pop
addb
fldt
rcll
dec
outsl
xchg
sarb
cmpsl
and
add
bound
ret
lahf
fwait
stos
or
push
sbb
xchg
inc
mov
jns,pt
xchg
lret
inc
cmp
iret
xlat
xor
orl
lock
sub
out
jb
and
and
push
in
xor
flds
mov
stos
sahf
ss
cmp
dec
pop
cld
inc
pop
out
lea
scas
outsb
add
addb
in
cmp
bound
mov
xchg
pop
in
data16
xchg
jmp
cmpsb
ficoms
cmc
js
repnz
stos
or
pop
lret
jns
push
lods
das
add
aas
add
jbe
in
pop
mov
out
aam
mov
adc
aas
in
cmp
dec
cmp
addr16
lret
pop
ss
ret
mov
and
lret
andl
jmp
jg
and
add
in
inc
cmp
jne
and
xor
or
out
clc
push
xor
jge
ljmp
sub
ds
add
testl
adc
fst
lock
fdivrl
in
rol
mov
cmp
and
xchg
stc
shl
add
jnp
ret
leave
cltd
adc
push
lock
lods
ja
mov
in
sub
xor
stos
mov
sar
fiaddl
mov
push
and
pushf
or
das
in
sub
jmp
add
add
stos
xor
jle
mov
gs
adc
push
cmp
popa
sub
cli
mov
inc
lock
cmp
pop
fwait
mov
rolb
in
cmc
in
jnp
xchg
jp
jne
pop
std
imul
lret
cmp
popf
mov
push
inc
sub
pop
ja
ret
push
cmp
pushf
jle
push
adcb
mov
outsl
jbe
jp
push
pop
mov
adc
cmp
shl
into
xor
add
push
aam
insl
cmp
cwtl
in
adc
arpl
cmpl
repz
cld
mov
scas
repz
adc
jb
fisttps
outsb
popf
adc
inc
movsl
lahf
aam
dec
mov
ja
inc
or
fistpl
dec
stc
dec
xchg
loope
daa
cmp
add
add
pop
hlt
xchg
stc
cmp
cs
and
enter
imul
popa
addr16
mov
out
add
xchg
jae
test
dec
cwtl
add
lahf
stos
and
pop
mov
mov
adc
idivl
fdivs
std
or
push
xchg
push
xchg
jge
jl
or
repnz
lahf
es
lds
and
jnp
add
aad
push
dec
sti
loope
stc
xor
mov
dec
mov
dec
dec
sub
cmc
shll
and
pop
jle
scas
jge
pminub
cwtl
sub
mov
mov
enter
notb
fst
les
out
jae
dec
dec
repnz
inc
jmp
cmp
lods
push
mov
lea
stc
out
je
lods
and
movsb
lret
clc
pop
addb
mov
and
rcr
cltd
insl
cmp
xorb
cmp
xchg
dec
fisubrl
shrb
lret
jmp
frstpm(287
pop
fwait
jns
inc
cmp
call
ret
neg
fdivrs
add
mov
dec
mov
push
scas
jl
std
ss
jmp
jg
and
out
fimull
pushf
es
mov
dec
lret
xor
in
mov
adc
or
imul
pushf
sbb
mov
cmp
in
fimuls
dec
lahf
mov
call
out
lds
jp
mov
lods
sub
xchg
xor
xor
sub
sub
cmc
fimull
jecxz
iret
nop
xor
mov
xlat
jnp
les
sti
fisubrs
js
shlb
dec
arpl
jg
in
cmp
out
call
pop
sbb
in
and
shr
adc
call
gs
and
in
adc
push
push
jne
sbb
jg
and
in
jns
ja
out
mov
pop
in
call
out
xor
cmpsb
push
pop
jno
jnp
lret
ljmp
jne
cs
xchg
sub
sub
leave
stos
popf
jb
movsb
in
jle
mulb
add
outsb
mov
mov
movsl
out
jo
aaa
sub
mov
jbe
imul
cmp
fdivr
nop
sub
aas
notb
icebp
add
sbb
sbb
aas
jo
sbb
cmp
xor
in
cld
in
ja
sbb
test
into
and
sub
jnp
lret
and
push
mov
movsl
pop
das
scas
jmp
cmp
and
lcall
pusha
out
mov
ljmp
repz
add
mov
leave
xorb
scas
pop
jl
dec
hlt
lret
cmc
pop
bound
xchg
enter
inc
mov
mov
into
mov
in
pusha
or
push
stos
push
mull
stos
xor
xlat
out
jl
adc
testb
mov
loopne
mov
out
insb
xor
cmp
repnz
mov
shrl
mov
sbb
push
mov
gs
in
sbb
cmp
pop
dec
adc
loop
stos
out
inc
add
std
jae
xchg
out
lods
mov
sub
fwait
adc
xor
sub
push
popa
push
cmp
xorl
lods
fdivrl
repz
lods
outsb
pop
xchg
mov
rol
adc
neg
adc
es
pop
jne
ljmp
inc
arpl
popl
or
out
pop
xlat
jo
cmp
shll
pop
cwtl
out
fwait
ss
in
or
gs
cld
shl
mov
addr16
push
lock
hlt
out
inc
sbb
push
and
cmpsb
jbe
dec
push
nop
jno
cmp
call
or
arpl
sbb
pushl
jb
push
stos
movzbl
xor
clc
adcl
lods
or
pop
xor
popf
fs
mov
daa
add
aad
pop
and
xchg
inc
push
adc
sub
sub
jne
mov
rcrb
and
inc
gs
mov
and
mov
xlat
mov
mov
mov
xor
pop
sahf
cld
pusha
loop
or
jne
adc
pop
popl
scas
xchg
mov
mov
pop
call
inc
inc
fidivrs
adc
dec
sbb
add
imul
push
outsb
lock
icebp
decb
rorb
sbb
scas
add
pop
push
cmp
inc
cmp
xchg
es
dec
sub
mov
cwtl
adcl
jmp
lret
in
xor
jp
in
sti
test
mov
pop
add
dec
arpl
jnp
mov
mov
aad
push
and
sbb
sahf
adc
mov
xchg
mov
and
push
int3
lcall
and
rcrl
sub
xchg
xchg
insb
jl
sbb
insl
sti
ds
stos
push
into
lods
aad
sub
push
pop
fsubs
lahf
leave
cmp
jb
xlat
mov
xor
jmp
push
pushf
das
and
movb
test
test
push
loop
outsl
inc
adc
insb
rclb
pop
and
xchg
mov
ds
cmc
gs
mov
data16
jecxz
jge
mov
out
ds
cmp
sub
adcl
out
jbe
out
hlt
subl
sbb
fs
xchg
fwait
mov
xchg
in
sbb
sub
lcall
push
xchg
push
add
or
leave
or
or
notl
fcmovnb
scas
and
mov
subb
fcoms
add
insb
and
jl
sub
sub
dec
and
mov
test
dec
jl
mov
out
sub
mov
cmp
lret
repnz
jnp
imul
inc
outsl
dec
pop
dec
cmp
rclb
and
and
mov
out
xor
ja
rcl
scas
sahf
pop
decl
nop
push
decl
mov
or
insl
repz
imul
xlat
adc
add
push
shl
ss
mov
fldt
pop
test
shll
movsl
dec
and
inc
mov
insb
ret
fbstp
in
adc
gs
mov
mov
jge
inc
enter
xchg
dec
push
dec
ljmp
xchg
out
out
fwait
adc
shrl
into
push
pop
and
enter
sbb
xchg
sbb
pop
cmpl
and
cltd
inc
jg
inc
js
xchg
daa
sbb
xchg
cmp
pop
call
rolb
cmpsl
mov
int3
pop
dec
xorl
mov
mov
loopne
mov
mov
xor
imulb
adc
mov
jmp
xor
out
sub
adc
push
jl
inc
loop
pusha
or
dec
lods
sahf
and
out
add
aad
jmp
dec
mov
push
jne
test
jmp
push
adc
icebp
sub
js
adc
mov
add
mov
cmp
scas
das
jnp
mov
fisubl
pop
dec
enter
dec
xchg
mov
xor
cld
pop
add
push
loop
movsl
lcall
mov
add
orl
fcompl
sbb
in
push
cmpsw
cld
jl
nop
dec
aam
jbe
add
fdiv
mov
repz
inc
mov
loope
fwait
push
sahf
ss
xchg
std
sbb
aad
cmc
sahf
inc
or
mov
and
shll
pop
mov
in
in
and
sbb
sbbl
sti
pop
mov
scas
adc
das
ljmp
addr16
jo
sbb
sub
imul
adc
cmpsb
imul
mov
int
add
rorl
sbb
pop
mov
lock
xor
inc
push
xchg
mov
pop
inc
add
push
ds
or
sbb
sahf
repnz
mov
xchg
add
shrb
jne
inc
jnp
sbb
push
xchg
mov
dec
into
dec
stos
sub
mov
cmp
dec
jo
xchg
jmp
call
ss
pcmpeqb
gs
out
dec
loopw
mov
dec
repz
ss
cmpsl
jae
sbb
test
imul
cltd
jb
push
push
pmullw
lahf
or
in
dec
popf
xor
push
stc
mov
push
test
call
insb
cmp
xchg
ljmp
pop
pop
shrb
mov
stc
lds
aam
arpl
test
int3
or
xchg
xor
and
mov
xchg
loope
pop
cmpl
cli
or
idivl
sti
add
popa
hlt
mov
xorps
shll
sub
fwait
inc
nopl
adc
testl
jno
mov
xor
pushf
xchg
sub
sti
jae
or
gs
les
in
mov
lock
cmp
daa
pop
fcompl
or
sarb
lcall
dec
xor
int3
ret
mov
fmull
loop
mov
pop
mov
loope
rcrl
xor
pop
push
push
or
bswap
and
insb
push
mov
scas
push
test
ds
mov
push
xor
das
or
stc
inc
mov
loope
sub
mov
call
cmp
add
movsl
std
jae
insb
mov
lock
xchg
lcall
bound
mov
fidivrl
cmp
adc
dec
pop
imul
je
cld
stos
sarb
or
call
mov
xorb
sub
sbb
adc
or
popf
mov
jae
lret
mov
mov
push
out
inc
sbb
sbb
inc
adc
mov
aas
adc
test
mov
sub
dec
rcrb
rclb
negb
adc
scas
mov
int
into
movsl
cmovg
push
xchg
add
and
hlt
sub
mov
movsb
fdivrs
int3
ret
hlt
xor
add
jns
leave
test
sbb
mov
inc
cltd
lcall
xchg
ror
xor
movsl
je
into
mov
mov
aas
or
dec
insb
sarl
adc
std
in
enter
push
nop
inc
mov
push
js
sub
pop
cmp
mov
dec
mov
pop
push
sub
pushl
imull
pop
mov
popf
ja
dec
dec
insb
mov
hlt
fisttpll
add
test
cld
xor
out
or
jb
sub
jno
pushl
leave
cs
mov
cmp
pop
push
cli
xor
mov
idivb
pushf
movsl
dec
xor
or
pusha
mov
out
fistps
push
or
xchg
popa
addr16
push
les
out
mov
sub
push
and
std
in
negb
movsl
inc
push
insb
imul
iret
fistpll
scas
jnp
outsl
addl
xchg
mov
das
and
mov
sarl
mov
push
fstl
sti
pop
or
arpl
fs
lock
rorl
sbb
loop
imul
jle
pop
sbb
scas
and
jnp
aas
mov
stos
or
sub
add
pop
or
leave
icebp
push
ret
aad
dec
inc
mov
icebp
rorb
push
push
rorl
roll
aaa
xor
or
add
pop
add
push
sub
scas
in
and
and
sti
pusha
lahf
out
ss
jo
movsl
enter
test
push
jp
loop
das
movsl
mov
dec
insl
hlt
ds
movb
dec
into
xchg
fildll
add
addr16
pop
jp
in
clc
or
int3
ret
xor
addl
hlt
jb
fwait
and
sbb
dec
das
dec
mov
icebp
push
xchg
push
sbb
jmp
inc
fcomps
jp
test
push
or
test
mov
fwait
xchg
cmp
adc
cmc
addb
push
pusha
xchg
and
addr16
jae
lods
int3
adc
ljmp
sub
adc
stc
sub
xchg
sbb
mov
inc
sub
adc
gs
test
stos
orb
data16
movsl
xchg
fidivrs
mov
iret
outsb
jae
movsb
loope
pop
mov
fisubs
insl
dec
pop
xchg
rol
test
sbb
push
bound
cmp
cmpsb
cld
pop
mov
scas
adc
push
jp
stc
fs
adc
sub
emms
hlt
adcb
pop
sub
bound
jno
test
mov
in
testb
push
inc
dec
iret
and
xlat
and
loop
jb
aad
mov
cmp
jno
add
mov
fdecstp
outsl
cmp
add
fidivl
cmp
xlat
sub
pushf
sahf
inc
ret
sti
and
jne
movb
push
adc
cmp
in
bound
gs
add
dec
jo
dec
es
sbbl
nop
cwtl
aam
aad
xor
movsb
std
inc
stc
jns
pop
stos
xor
popl
and
xor
jo
xor
test
stc
aad
hlt
shll
outsb
sub
inc
pop
jmp
aad
mov
in
cs
rolb
gs
xor
jl
mov
insl
mov
fcoml
push
ds
pushf
xchg
pop
push
decb
inc
adc
or
imul
mov
in
jae
adcb
adc
dec
stos
push
cli
stos
ret
or
xor
sbb
dec
mov
fcompl
pop
sarb
sub
sub
pop
insb
or
movsb
stos
inc
add
insl
jno
push
mov
mov
sbb
mov
pop
scas
xorb
push
mov
mov
mov
pop
push
lods
out
mov
push
movsb
hlt
push
lea
xchg
mov
bound
cmp
adc
repnz
pusha
adc
les
or
pop
mov
jp
lcall
add
outsl
sbb
or
aas
fcoml
push
mov
das
ret
and
or
cli
mov
inc
orl
repz
outsb
cmp
lret
popf
mov
mov
push
jne
outsb
sub
adc
shrb
sub
jb
mov
cmp
dec
int3
push
loop
cltd
stos
mov
sbb
out
xor
xchg
push
mov
lcall
icebp
mov
lea
bound
jg
sbb
into
clc
jmp
adc
push
nop
cmp
cld
pop
jg
loope
test
and
call
push
sbb
mov
lret
sbb
cmp
orb
fwait
rcrb
inc
sbb
mov
xchg
and
lret
mov
pop
mov
cmp
bound
mov
test
push
imull
sub
lret
xor
or
movsl
mov
push
pop
test
sub
test
jg
add
dec
hlt
pop
mov
cld
repz
and
jge
inc
cmp
jp
out
mov
sbb
mov
pop
inc
sub
push
or
lds
fstpt
in
and
push
pop
xchg
ja
xchg
and
push
mov
pop
cltd
dec
nop
sbb
cmp
fstpl
sbb
mov
test
push
xchg
xchg
xchg
lock
cld
inc
inc
in
or
lods
add
int3
test
inc
xchg
xchg
fwait
daa
incb
inc
popa
xchg
pop
inc
pop
repnz
lea
arpl
cmpb
mov
xchg
or
in
and
add
and
mov
sbb
and
cmp
add
es
jl
push
popf
lea
mov
pop
in
jae
adc
cmp
xchg
int3
mov
arpl
lods
out
dec
jno
in
into
lahf
andl
add
int
jle
sbb
xor
jnp
push
xor
imul
xchg
jb
xlat
lods
mov
rcrb
xchg
inc
pop
dec
dec
in
mov
sbb
push
pop
adcb
cwtl
xchg
in
daa
jecxz
nop
xchg
nop
jo
lods
or
pop
xor
mov
shl
mov
inc
adc
jno
jns
addr16
es
sbb
sbb
fcomp
xchg
xchg
xchg
pop
loopne
shll
push
repz
aas
test
jne
scas
sahf
xchg
stc
int3
imul
stos
inc
mov
or
cmp
mov
out
adc
in
addl
mov
pop
mov
addl
sbb
sbb
jl
bound
sarl
xchg
stc
pop
or
sbb
pop
sbb
inc
and
int3
mov
mov
push
push
lods
or
mov
lret
jb
movsb
pushf
mov
jle
sub
fsubs
jl
insl
pop
shl
lahf
xchg
push
inc
sahf
jecxz
xchg
xor
mov
xorb
pop
test
pop
and
pop
jns
mov
movsb
std
aam
sahf
leave
int3
pop
xorb
jne
loopne
sbb
or
dec
xchg
jnp
mov
fwait
rolb
lods
inc
sub
xchg
outsb
cmpsl
xchg
jns
fistps
push
incl
mov
add
pop
sbb
mov
mov
fadds
push
dec
cli
xor
je
inc
cmp
scas
push
aad
xchg
ret
js
loope
jo
adc
sarl
dec
jbe
jp
rorb
push
test
pop
mov
setle
pop
pop
repz
xor
and
adc
sti
mov
xchg
orl
shr
ret
aaa
or
lea
out
rorl
testb
mov
outsl
sub
and
aad
mov
dec
fs
xchg
mov
cli
pop
inc
bound
fstps
sti
add
ret
add
cltd
inc
push
cmp
inc
pop
inc
adc
dec
xchg
cltd
arpl
arpl
push
fnstenv
push
mov
add
test
clc
inc
add
jp
push
shlb
mov
dec
lahf
lcall
jo
cld
imul
loopne
aas
jns
pop
adc
hlt
xor
push
flds
push
push
pop
cmp
push
pusha
and
nop
stos
clc
cmp
arpl
dec
pop
imul
test
mov
or
out
imul
xlat
in
je
je
shr
mov
js
push
clc
cmp
xchg
stos
or
lcall
inc
pop
mov
repz
add
add
mov
sub
sbb
push
or
add
jmp
scas
imul
add
call
inc
jae
mov
mov
or
mov
cli
xor
mov
ret
arpl
xor
into
pusha
nop
inc
test
shrl
xor
pop
je
push
xor
cmpsb
add
mov
test
mov
gs
xlat
and
ljmp
ret
or
js
sbbl
stos
idiv
or
mov
jnp
shll
mov
je
pop
outsb
into
bound
push
and
fwait
fwait
xorl
jb
stc
cwtl
push
jp
jp
inc
mov
aam
xchg
arpl
stc
out
xorl
loop
fistl
dec
adc
pop
mov
add
jle
and
jb
data16
aam
sbb
add
and
xor
xor
pop
movsl
rol
jge
dec
sub
shrb
mov
xor
cmp
outsb
rep
repnz
mov
and
cmc
dec
cli
out
ds
imul
add
adc
fwait
inc
sub
pop
jo
and
dec
jmp
dec
push
out
xorb
and
ljmp
cltd
push
or
and
stc
das
fldt
lods
lahf
sbb
aam
mov
fcoml
or
xchg
mov
push
mov
push
inc
dec
push
test
roll
test
out
ret
xchg
in
adc
sbb
lods
shrb
add
iret
imul
scas
cltd
dec
xor
mov
out
xchg
gs
test
in
je
or
aas
xor
shrb
sbb
jge
js
xor
pop
sti
icebp
nop
mov
loop
rorl
or
fsubl
fs
scas
enter
sbb
loope
add
inc
mov
sub
test
mov
xor
iret
lcall
dec
out
cld
mov
mov
stos
cli
xor
popa
inc
and
in
mov
inc
jg
xorl
fildl
add
lret
or
in
mov
dec
xor
enter
cmpsb
dec
pop
pop
xchg
cmp
mov
ret
jno
mov
inc
mov
mov
jl
in
lret
mov
xor
cmp
sbb
cmpsb
jne
add
push
int3
lahf
push
popf
int
lcall
pop
inc
jg
xor
daa
lcall
and
jns
in
loopne
daa
and
imul
lret
jae
ljmp
sub
mov
dec
stos
gs
xchg
pop
fcmovnu
xor
adc
movsl
aam
repnz
outsl
add
jns
sbb
pop
sbb
cmp
push
or
xchg
fwait
inc
int3
out
pop
mov
lods
cld
stc
insb
add
xchg
imul
fisubl
push
rorl
movsl
int3
mov
nop
jmp
xchg
jo
aad
mov
pop
out
bound
cmpsl
push
jg
hlt
xchg
test
iret
sahf
dec
shlb
movsb
and
cmpsl
and
arpl
fs
outsl
mov
mov
iret
xor
push
jl
scas
add
fidivs
pop
fistps
in
add
dec
icebp
jmp
and
in
mov
sub
adc
inc
sbb
out
inc
jbe
sarl
mov
js
inc
out
mov
jp
and
pop
imulb
jg
or
icebp
jo
jne
pop
repnz
jmp
push
dec
add
gs
cmp
mov
pushf
mov
xchg
push
call
jns
lret
add
popa
in
xchg
int
dec
sahf
add
cmp
jae
divl
out
ljmp
movsl
cmpsl
sub
xchg
and
call
out
in
shl
xchg
insl
fisubs
ret
dec
sbb
jne
mov
sub
push
les
lods
cmc
jecxz
mov
adc
jp
mul
cli
pushf
repz
sub
ss
pusha
push
pop
imul
je
xor
out
push
mov
mov
sbb
je
lret
loopne
scas
inc
xchg
xor
cmp
cmp
or
fisubs
in
sarb
sbbl
fcoms
rcrb
lods
xchg
repnz
xchg
cwtl
insb
mov
xor
aas
mov
or
pop
xchg
les
jbe
ja
mov
inc
scas
jo
insl
pop
aad
mov
ret
xchg
jo
adc
cmp
imul
pop
sbb
or
mov
xor
xchg
mov
jp
fwait
cmpsb
xchg
popa
xor
push
pop
add
cwtl
jge
xor
lret
mov
mov
bound
pause
adc
mov
mov
cli
xor
lods
fsubl
mov
cmp
js
insl
and
push
in
mov
inc
sbb
cmp
push
test
push
into
test
lcall
test
sub
fbstp
js
and
aaa
adc
subl
xor
sub
scas
je
jmp
lahf
inc
inc
sub
sbb
mov
loope
arpl
dec
subl
mov
xchg
add
inc
add
sbb
xchg
int3
imulb
mov
call
xchg
adc
mov
pop
jo
in
lock
push
lcall
daa
in
pop
sbb
iret
dec
daa
jae
sbb
insb
jg
sbb
test
mov
lods
aas
sub
loope
sub
inc
nop
lds
inc
cwtl
fbld
push
mov
mov
stos
mov
call
imull
mov
xchg
sub
push
cmp
fisubrl
ds
lcall
mov
ss
stc
loope
jbe
and
and
push
stos
or
nop
out
mov
js
mov
fistpll
jnp
sub
inc
pop
mov
xor
and
mov
les
cmp
sub
xor
add
add
sti
test
mov
bnd
leave
int3
pop
int3
xchg
mov
inc
mov
out
push
out
xorl
out
cltd
into
push
xchg
bound
mov
lahf
jp
xchg
xor
aam
adc
lret
mov
or
cmp
pop
push
insb
and
mov
sub
cmp
loope
mov
adc
pop
add
jbe
insl
mov
ja
mov
push
pop
out
inc
sbb
dec
jge
sub
leave
repnz
push
mov
xchg
push
sbb
sub
or
push
lret
out
in
je
cmpl
push
cmp
inc
jne
fcomp
fstp
fstpt
rcr
outsl
push
outsl
jmp
rolb
fstps
outsl
cli
adc
mov
cmp
roll
dec
xor
jg
adc
mov
scas
mov
lods
popf
mov
lods
fildll
call
sahf
add
cmp
add
fisubs
cmp
pop
fidivrs
fnstenv
lods
pop
aaa
test
and
dec
jge
shll
or
lahf
dec
jno
mov
pop
jp
adc
mov
test
xchg
repnz
dec
mov
in
fsubl
repz
enter
pop
loopne
push
cltd
es
sbb
in
lcall
lret
xor
fsubrl
add
ja
mov
pop
xchg
scas
aas
stos
pop
adc
insb
js
mov
or
pop
mov
mov
lcall
pusha
aas
icebp
ss
je
out
adc
xor
or
clc
dec
lock
inc
adc
ljmp
inc
adc
sbb
pop
or
cmp
popf
fmull
nop
dec
xchg
out
out
sub
xchg
dec
mov
mov
xchg
cmp
push
xlat
insb
cli
sbb
clc
lret
mov
mov
jbe
or
outsl
shl
notl
dec
inc
mov
jbe
dec
mov
xchg
mov
push
jae
nop
cmp
dec
adc
sbb
insb
adc
xor
push
jbe
sbb
jnp
aad
cli
arpl
pusha
dec
push
jae
lahf
sbb
cltd
lret
fiadds
and
stos
pop
push
icebp
daa
push
scas
xchg
in
aam
jb
pop
roll
les
je
xchg
cmp
mov
add
mov
imul
sub
bound
stos
xor
mov
sbb
lock
sbb
ret
mov
and
jp
mov
and
repnz
inc
cmpsb
push
cmpsb
les
push
jmp
push
scas
fisubrl
les
cmpsl
or
push
cltd
inc
loopne
cld
aad
mov
inc
and
pop
shlb
xor
and
mov
test
xchg
add
aam
jl
stc
mov
sub
pop
movsl
nop
push
js
cwtl
repz
js
iret
sub
imul
andb
andl
xchg
sti
dec
mov
sub
or
mov
push
pop
inc
dec
adc
fdivl
mov
leave
fdivr
mov
inc
xchg
std
mov
in
repz
jnp
ljmp
push
and
rcrb
dec
pop
add
ja
nop
sbb
daa
jbe
mov
mov
sbb
push
dec
jne
pop
orb
adc
andl
or
sbb
xchg
lock
int3
pop
js
xor
mov
adc
xor
pop
cld
add
int
add
lcall
mov
std
movl
cld
std
cltd
scas
mov
cmp
add
scas
mov
jnp
xchg
icebp
xor
mov
add
rorb
xor
cmp
mov
ds
in
fs
leave
push
inc
jmp
xor
cli
fbstp
loope
in
int
adc
xlat
dec
and
lret
cmp
imul
mov
or
shrl
fs
jp
notl
ret
hlt
mov
insl
pushf
out
decb
push
bound
xor
and
loope
movsl
jo
sub
fwait
add
mov
jne
jg
or
cltd
cmc
sub
orl
cmpsb
mov
lock
inc
add
and
inc
xchg
test
xchg
push
rcll
and
fldcw
fs
mov
and
cmp
aam
in
cwtl
mov
outsl
hlt
into
cmp
or
cmc
jl
fmull
scas
adc
loop
scas
xor
dec
nop
cmc
mov
dec
bound
push
push
and
cmp
sub
xchg
sbb
cmc
in
lret
mov
testb
aad
dec
popa
in
mov
ds
dec
in
mov
jo
cmpsb
aam
sar
rcrl
push
bound
pop
push
dec
cmc
lret
dec
incl
out
mov
popa
or
call
stos
inc
and
loopne
pusha
pop
dec
movb
ret
adc
jge
dec
fildl
test
sahf
lock
repnz
pop
fcoml
clc
insl
pop
bound
xorb
in
jnp
out
loopne
loop
out
adc
movsl
aam
rorb
nop
push
movsb
inc
xor
lds
xchg
call
jle
inc
movsb
pop
push
sarl
adc
repnz
rclb
pusha
xor
repz
and
pop
pop
and
jmp
mov
aam
cli
out
movsl
inc
pop
and
addr16
mov
subb
mov
push
pop
cmp
mov
fidivl
pop
mov
or
push
movsb
jae
sub
mov
pop
mov
or
das
addb
leave
pop
or
scas
rcrl
rcll
jo
pop
cmp
repz
js
cmp
lcall
sbb
cmc
cmpsb
xor
cmp
aaa
xlat
and
fs
xor
push
je
shl
sub
popa
lret
pop
enter
ds
cwtl
fwait
sti
and
add
mov
fsubr
shll
mov
inc
mov
cmpsl
sub
pop
hlt
sub
mov
mov
cmp
pop
dec
jne
aam
mov
cmpl
rcl
rcrl
sbb
sub
sbb
xlat
dec
dec
addb
sub
int
pop
and
les
jp
test
pop
mov
call
pop
ret
insl
scas
outsl
movl
sub
and
scas
sar
inc
lock
xchg
xor
ja
xor
push
pushl
into
or
mov
fldt
stc
mov
mov
lds
and
repz
jnp
imul
cltd
jg
add
cmp
lods
mov
mov
cmp
mov
insb
mov
mov
sbb
xor
xlat
dec
sbb
lock
push
lret
mov
out
sub
inc
out
pusha
ss
jns
mov
inc
jg
dec
sub
fdivs
ljmp
mov
dec
xor
lods
add
cs
sub
jb
call
popf
add
addl
fs
xchg
in
cmpsb
jmp
xor
fisttpll
cwtl
mov
mov
popf
push
jmp
clc
pop
hlt
std
cmpsl
or
mov
bound
cmp
jge
fs
mov
aam
mov
ss
or
mov
in
fwait
test
das
sbb
call
add
cmp
dec
pop
mov
aas
pusha
and
js
cmp
xchg
jecxz
jecxz
testl
rcrb
sbb
xchg
mov
cmpsl
xor
enter
cmpsl
frstor
lea
rolb
sub
adc
push
ss
ljmp
ljmp
xchg
popa
inc
outsb
and
call
adc
push
adc
pop
arpl
inc
aad
cli
or
pop
cld
lcall
js
pushf
fiaddl
and
sbb
ret
std
xchg
mov
leave
int
jns
nop
dec
jnp
jbe
outsb
jns
or
lea
in
mov
push
pop
aas
sti
jnp
mov
add
jg
mov
mov
dec
mov
add
and
sbb
lcall
lock
xchg
pop
jne
fmul
push
mov
push
dec
in
xor
dec
mov
imul
jmp
jl
bound
outsl
jns
xor
sub
dec
imul
xor
mov
sub
xor
push
jbe
fsubs
or
and
push
adc
add
cmp
dec
leave
js
icebp
hlt
adc
sbb
cmp
arpl
push
sub
pushf
mov
fnstsw
imul
nop
pusha
roll
xor
jnp
add
inc
sbb
stos
adc
sbb
lahf
dec
movb
stos
jp
dec
pushf
ja
mov
inc
lds
jle
cmc
push
fwait
cmc
adc
daa
int
or
loop
es
cmpsb
aam
insl
fistpl
stos
mov
test
lahf
add
push
scas
stos
test
sbb
sbb
mov
call
mov
or
lock
xor
mov
movsl
inc
nop
inc
lock
icebp
mov
push
sti
fidivrs
dec
lahf
rolb
xchg
dec
icebp
add
test
push
imul
imul
sub
mov
iret
pop
push
orl
xchg
dec
loopne
inc
mov
mov
shll
xor
sub
les
into
and
push
lock
inc
and
xor
adc
jle
mov
cmpsb
imul
sub
xchg
pop
mov
out
dec
xchg
sbb
data16
jecxz
sbb
dec
fcmove
cld
fidivl
pusha
movl
push
sbb
mov
mov
add
push
jle
lds
insb
push
mov
push
mov
mov
jmp
fdivrl
sti
mov
sahf
adc
and
dec
sahf
push
add
jg
jno
xor
mov
idivl
mov
xlat
mov
inc
movsb
insb
movsb
xor
jae
out
rcl
sbb
mov
lds
test
lret
adc
dec
ljmp
xchg
push
js
lcall
out
sub
lret
je
cmp
inc
rclb
mov
movsl
sarl
clc
popa
mov
ret
dec
dec
cmc
push
jg
mov
add
push
stc
fucom
decl
adc
pop
movsb
repz
cwtl
in
xor
lret
mov
rorl
ja
sub
testl
or
or
cmp
jmp
shll
fistpll
dec
dec
pop
repnz
rolb
loope
sub
mov
pop
cwtl
mov
std
sub
std
push
and
enter
hlt
push
xor
sub
call
xchg
pop
mov
adc
or
add
rol
jo
adc
jb
jle
inc
xlat
cs
mov
cli
stos
movsl
aaa
inc
mov
lcall
mov
divl
jnp
mov
imul
popf
fdivrs
in
sbb
mov
and
inc
mov
mov
cmpb
push
mov
hlt
lcall
iret
cld
adc
mov
or
pop
mov
ljmp
xchg
fisttpll
imul
ret
mov
sbb
bound
or
pop
jecxz
mov
add
jl
xchg
lods
daa
and
jno
mov
adc
cmp
add
das
push
pop
sub
je
or
mov
push
out
xor
shll
idivl
push
sbb
and
mov
push
pop
push
stos
dec
xchg
cmp
test
cltd
xor
dec
mov
mov
rcr
cs
pop
or
sti
cmp
imul
pop
mov
dec
push
xlat
cmc
mov
cmpsb
imul
mov
notb
cmp
repnz
jae
jne
or
insb
fisubrs
xchg
lret
mov
mov
insl
sub
aaa
outsb
sbb
push
adc
mov
rcrb
xchg
sbb
mov
ds
pop
jae
mov
insl
mov
adc
stc
stos
pop
sub
shrb
rorl
cmpsb
aas
dec
mov
xchg
cli
insl
orl
iret
pop
sbb
out
pop
popl
push
test
sub
in
mov
mov
cmp
fistpl
xchg
addr16
xor
pop
in
testl
xor
ficoml
imul
mov
dec
sub
fmuls
ja
xabort
mov
mov
out
xchg
xchg
repnz
mov
inc
in
hlt
and
das
fbstp
test
mov
sub
xor
jo
push
mov
cltd
push
aaa
fisubs
negb
mov
dec
pushf
and
std
sbb
fnstenv
aad
mov
sub
adc
sbb
pop
arpl
outsl
jae
stc
ds
fdivrp
in
or
cltd
shll
outsb
es
repnz
gs
or
pop
pop
stos
stc
dec
insb
notb
leave
mov
inc
shll
pop
js
into
inc
pop
dec
adc
push
push
xchg
or
cld
pushf
outsl
stc
call
jnp
mov
lret
mov
pushf
inc
cmpsl
cmp
mov
in
mov
clc
xchg
cli
ja
cli
sarb
cmp
pop
lods
cli
mov
jle
fcomps
nop
mov
stc
popf
add
fnstcw
subl
mov
js
out
aam
mov
ljmp
xor
push
and
push
or
test
add
mov
js
jecxz
push
cmp
dec
xor
addl
int
xorb
sbb
in
push
pop
cs
sahf
outsb
test
insb
jb
jecxz
popa
fucom
out
pop
fldl
mov
fsincos
aaa
pop
cmp
lea
dec
rcrb
add
dec
mov
scas
xor
shr
loope
test
sub
sbb
push
or
mov
pop
push
pop
push
add
pushf
mov
in
lods
lock
xor
lock
cltd
imul
push
movsl
pop
aas
pop
insb
scas
adc
scas
aam
xor
push
pop
mov
add
sbb
mov
lret
xchg
jge
call
inc
or
stc
scas
dec
leave
dec
jmp
mov
int3
mov
in
js
lock
arpl
lock
mov
jns
iret
sarb
mov
fs
pop
test
in
stc
idivl
and
jecxz
pusha
mov
sub
push
mov
jno
sbb
pop
jecxz
mov
cmpsl
jp
adc
mov
ret
mov
push
adc
imul
inc
xlat
mov
or
adc
mov
cmp
jno
adcl
add
and
xchg
adc
cmp
and
and
out
pushf
adc
loope
push
inc
ss
cmp
adc
in
int
inc
es
pusha
sub
sbb
cmpsl
inc
sbb
cmpsl
nop
jecxz
inc
mov
mov
fcompl
movsb
cwtl
sbb
mov
mov
xchg
and
pop
or
sub
dec
pop
loope
mov
loopne
pop
or
movsl
inc
aas
pop
xlat
mov
xor
aam
sbb
mov
xlat
push
adc
mov
or
out
sahf
push
mov
out
sbb
jmp
inc
scas
std
pusha
inc
je
push
adc
aad
addr16
sub
mov
rorb
sbb
in
jmp
pop
lcall
idiv
or
mov
pop
adc
pop
inc
fdivp
movl
push
pop
shll
mov
sub
adc
sub
xor
mov
sbb
sub
cmp
mov
pusha
sbb
fcomps
lret
aam
and
mov
push
push
mov
or
push
cmc
mov
insl
adc
mov
roll
sbb
mov
arpl
dec
shl
cmp
and
test
xchg
xor
sub
icebp
daa
pop
in
cmp
pop
dec
rcpps
lret
push
sub
xchg
or
mov
jns
in
jg
jmp
mov
adc
stc
scas
jae
data16
shrl
push
lret
xorb
push
xor
pop
pop
stc
sbb
loopne
in
sarb
jecxz
jg
jo
xchg
sbb
cli
lea
bound
mov
out
mov
xor
xor
jo
mov
cltd
sub
pushf
pop
sub
dec
repz
jno
sti
jg
std
es
dec
stc
or
addl
dec
or
xlat
iret
push
pop
mov
mov
jo
jp
clc
mov
shlb
jmp
es
imul
stos
mov
je
cwtl
pop
sete
loope
and
fmul
xlat
sarl
in
mov
sub
push
cld
mov
insb
or
rorl
lods
cmp
and
mov
add
adc
pop
cmp
xchg
pop
adc
sub
jp
and
daa
sbb
movsb
out
xchg
sub
mov
int
jle
jp
push
fcoms
aad
jp
scas
xchg
add
mov
pop
sbb
jle
xor
xchg
cmp
ja
stos
mov
mov
jl
lods
push
inc
sbb
into
inc
mov
fstps
imul
popl
shr
mov
packssdw
mov
stos
movsb
xor
sub
xchg
xchg
adc
and
ret
cs
sbb
cmc
push
bound
xchg
mov
roll
fwait
daa
jo
dec
hlt
je
ficoml
shlb
lock
dec
mov
into
and
xchg
adc
in
outsb
and
sti
in
and
adc
das
test
pusha
aam
imul
pop
cmpsb
jecxz
je
push
cwtl
jae
movsb
aaa
cmpsl
push
cmp
jmp
test
mov
test
addr16
inc
dec
jge
sub
out
sbb
and
js
fildl
movsb
vcomiss
lds
mov
enter
repz
mov
dec
mov
sbb
mov
mov
inc
cs
or
mov
leave
out
cld
int3
loop
add
xor
cmp
shll
xchg
int3
inc
and
adc
js
lret
movb
push
xchg
jp
sbb
lahf
scas
mov
inc
popf
inc
jp
or
jo
es
pop
lds
or
ds
insl
push
dec
dec
jg
mov
pop
xchg
sti
mov
add
mov
loopne
sti
jns
push
into
scas
in
adc
hlt
mov
push
ja
jno
iret
pop
lahf
test
pop
call
jmp
stos
or
out
outsb
into
enter
pushf
push
or
lret
je
push
rolb
xchg
lock
adc
nop
dec
pop
jo
loop
jmp
shl
inc
cmp
and
push
push
out
jle
ds
jmp
pop
inc
int3
xchg
inc
stos
xchg
aas
fprem1
or
push
dec
gs
lods
pop
andb
lret
xor
add
out
jle
mov
xor
add
ret
pop
popa
or
adc
rorb
dec
into
or
addr16
adc
dec
mov
rolb
enter
push
mov
cltd
stc
jns
leave
pop
out
xchg
test
mov
es
xchg
sub
adc
movsl
and
push
int
jmp
insl
cmp
push
in
ja
out
dec
nop
sbb
add
je
fstpl
and
inc
push
int3
in
repz
mov
xchg
lods
fs
sti
add
ret
ja
sub
push
int
ja
cs
ljmp
mov
xchg
sub
enter
dec
mov
lds
sbb
in
aas
mov
lock
jne
jl
jo
lahf
lahf
aam
pushf
rcll
andl
mov
jmp
mov
sbb
and
pop
xlat
aas
mov
repnz
jmp
in
xchg
ss
mov
stos
outsl
mov
les
mov
add
inc
pushl
xchg
in
inc
fcmovnb
pop
scas
mov
faddp
outsb
pop
adc
pop
or
cmpsl
push
rolb
pop
or
mov
mov
shlb
aaa
push
rolb
jae
push
lock
in
and
push
jmp
dec
arpl
xor
pusha
mov
mov
aaa
les
xor
xor
pop
pop
movsl
sbb
fld
cmp
sbb
or
outsl
or
rcr
jl
cmpsl
sub
inc
loope
sbb
insl
push
lret
in
cltd
aaa
mov
scas
inc
inc
xchg
arpl
inc
pop
pop
xchg
xchg
mov
mov
bound
xlat
lea
sarb
inc
pushf
inc
movsb
lods
movsb
in
test
add
fdiv
pushf
jmp
jns
xorl
cmp
or
cmpsl
outsl
and
or
pop
inc
repz
lock
xchg
mov
std
pop
mov
lods
mov
or
jns
mov
sti
jbe
pop
adc
dec
rolb
sub
adc
push
sub
push
ljmp
xor
mov
popa
adc
dec
sub
mov
sti
pop
pop
test
sti
and
mov
lods
mull
lahf
out
int3
pop
push
ljmp
lods
hlt
and
daa
outsl
in
jo
cmpl
int
ret
gs
nop
jne,pn
pusha
dec
mov
pop
push
add
add
jle
aad
sub
jae
dec
or
or
lods
add
fnstenv
sub
jne
out
jns
or
incb
push
gs
pop
xchg
cld
dec
dec
in
pushf
cmpsb
cmp
stos
mov
jbe
iret
mulb
and
outsl
pusha
vmovmskps
icebp
inc
lahf
add
je
fnstenv
xchg
fidivrs
fiadds
ret
add
addr16
adc
xor
insl
imul
fwait
mov
sub
and
cmp
jo
inc
pop
push
jmp
mov
call
stos
fcmovnu
mov
fs
cli
daa
cwtl
or
insb
js
pop
loope
inc
or
outsl
enter
cmpsb
mov
shll
or
cltd
push
mov
pop
les
mov
ljmp
pop
jmp
jl
xor
mov
xchg
and
pushf
adc
sbb
mov
push
push
add
adc
push
inc
mov
xchg
scas
frstor
push
dec
test
fldcw
dec
cmp
push
xchg
sarb
sbb
notb
adc
lds
ja
outsb
or
push
iret
ljmp
jbe
ds
fwait
inc
xor
dec
add
and
fisttpll
sbb
repz
add
popf
sbb
in
or
sub
push
push
cmp
push
int
and
lods
mov
aam
push
fmull
rorl
roll
or
add
out
jge
testl
sub
aam
cli
outsb
pop
scas
ss
in
sbb
les
adc
push
mov
dec
cltd
xor
jns
push
xor
sub
mov
into
mov
cmp
cmp
pop
in
xlat
dec
jnp
pop
jne
out
xor
in
mov
inc
mov
cs
add
cmp
std
xchg
repz
jl
mov
arpl
push
sbb
xor
ss
stos
fnstcw
jns
test
into
pop
cmp
loopne
fdivrp
mov
adc
push
sbbl
dec
push
pop
les
in
imul
sti
or
iret
mov
aas
pop
mov
pop
bound
lods
mov
sbb
negl
add
ljmp
cmc
stos
std
add
mov
std
clc
sti
rcll
mov
adc
or
push
fistpll
arpl
mov
decb
sub
mov
mov
adc
mov
andl
add
out
int
imul
push
jg
fwait
orl
daa
sub
push
xchg
lds
imulb
jge
int
and
lret
cmp
inc
dec
rcrl
loope
adc
addr16
xchg
addl
mov
ljmp
loop
test
out
pushf
jne
pushf
push
loop
in
xor
imul
cwtl
pop
ret
add
orb
sbb
dec
adc
inc
push
sub
xchg
sub
lock
dec
sub
pushf
out
int3
shl
dec
sar
jne
mov
nop
or
repnz
jg
mov
iret
jle
sbb
push
cmc
add
mov
outsl
push
xchg
addr16
push
outsl
xor
xchg
mov
jle
test
ffreep
dec
fisubs
sarb
dec
cwtl
bound
cmp
pushl
arpl
xchg
pusha
fsub
xor
mov
xchg
lretw
pop
and
lret
clc
inc
pop
or
out
xchg
jecxz
test
cltd
pop
jno
push
pop
nop
ds
jae
xor
mov
pop
xor
or
outsb
push
inc
arpl
bound
jmp
mov
stc
push
mov
jle
div
inc
outsl
out
aad
aad
fstpt
int
inc
cld
push
ja
lret
int
clc
mov
les
aas
inc
movsb
mov
mov
cmpsl
int
push
and
div
xor
xchg
push
cmp
xlat
cmc
lea
in
xlat
les
repnz
xor
icebp
ds
xlat
jnp
ljmp
pop
jae
inc
jp
xor
je
and
pop
cmp
out
push
push
push
mov
xor
in
addb
ret
mov
add
add
push
push
mov
xor
jp
pop
dec
lret
jg
fistpl
or
push
fs
les
push
imul
imul
shlb
adcl
xchg
xchg
testl
inc
or
neg
jno
or
mov
inc
loop
xlat
leave
add
fcmovnbe
add
mov
lods
stos
stos
cwtl
or
jbe
pop
daa
fnclex
pusha
add
in
or
mov
movsb
addl
inc
loop
mov
or
rcr
aam
and
test
outsl
ja
inc
fisubrs
imul
shll
int
pop
int
jg
xor
sbb
push
cmp
mov
rorb
add
sti
cmp
call
jmp
sub
inc
xchg
pop
cmp
leave
sbb
xchg
push
add
icebp
addr16
cltd
fldt
cmp
rol
cmp
mov
sub
pop
xor
lcall
scas
dec
daa
or
xchg
pop
mov
aaa
imul
mov
jp
iret
mov
sub
inc
psubd
mov
lea
sti
testb
jne
mov
mov
test
sahf
add
and
mov
es
inc
dec
cmc
das
sbbb
sub
xchg
arpl
cmp
repz
cltd
test
or
mov
xchg
push
shrb
add
jae
pop
shl
hlt
fwait
rcr
enter
out
pop
jmp
adc
icebp
out
dec
mov
scas
icebp
adc
es
cld
lock
cmp
push
incl
push
repz
or
xchg
scas
dec
mov
pop
fistpl
lret
popf
dec
mov
jb
dec
inc
pop
mov
std
jnp
pop
lret
xchg
test
or
dec
sbb
inc
xchg
fwait
inc
jecxz
cmpb
and
aaa
lds
push
push
test
and
inc
or
lcall
sub
outsl
cmp
sub
mov
mov
mov
bound
mov
mov
or
and
outsb
lret
insl
je
mov
scas
aaa
dec
sbb
xor
das
fs
push
aam
in
xchg
push
pusha
and
mov
cld
mov
decl
scas
or
pop
mov
sbb
sub
stc
mov
dec
fdivl
xor
stos
movb
add
negl
aaa
call
in
incl
jmp
push
lret
xor
insb
dec
xlat
mov
lock
pop
fdivl
je
outsl
cmp
std
int3
int3
loopne
mov
push
or
inc
ljmp
lods
stc
in
mov
pop
xchg
adc
lret
xchg
pop
std
lret
xor
adc
jle
sub
mov
mov
xchg
cmpsb
or
ret
push
mov
cli
jge
test
mov
outsl
fs
mov
lods
fstps
aad
rorb
jbe
jl
push
sub
mov
inc
push
sub
jne
or
push
pop
rolb
cli
mov
jle
inc
cmp
arpl
add
push
xchg
cmp
inc
fiaddl
or
imul
lcall
mov
dec
sub
fiaddl
fs
dec
adc
fwait
ja
fsts
push
xchg
sbb
mov
dec
push
ss
mov
pop
xchg
sub
mov
data16
cld
mov
inc
das
inc
mov
push
imull
arpl
jbe
push
fwait
xorl
out
cmp
xlat
xchg
jo
les
aaa
cs
mov
test
adc
lock
jle
pop
mov
scas
popl
shrl
pop
jns
mov
fistpl
mov
xor
imul
daa
in
jb
leave
jo
je
xor
xchg
mov
xlat
stos
andb
lahf
mov
xchg
cmp
push
repz
xchg
pop
lret
jmp
pop
mov
adc
in
lcall
repnz
add
hlt
test
mov
cmp
daa
pop
jo
add
call
outsb
ret
xchg
in
sbb
and
fldcw
aam
pushf
or
dec
scas
fisubl
sub
cmpsb
xchg
std
sbb
mov
mov
mov
sbb
xchg
inc
or
scas
in
sub
sbb
sbb
and
scas
mov
outsb
dec
pcmpeqb
or
outsb
lret
sbbl
pop
mov
push
add
or
cmp
repz
ret
jp
xchg
test
mov
cs
into
push
and
xchg
imul
mull
cmp
xchg
loop
ret
push
dec
inc
fwait
or
fimull
mov
repz
xchg
mov
les
mov
jg
into
stc
outsb
or
sbb
out
add
mov
stos
setg
add
push
ret
push
xchg
mov
jne
add
mov
mov
or
roll
push
sbb
sahf
jno
movsb
mov
popa
jl
add
loop
std
aas
shll
bound
push
or
push
xchg
popa
das
xor
scas
dec
clc
push
cmpsl
and
xlat
test
jbe
pop
xchg
pop
or
inc
negl
xorl
in
mov
mov
cmp
mov
push
sub
lea
cmp
mov
sub
push
pop
cmpsl
pop
stc
xchg
and
daa
out
mov
inc
inc
cli
rcrb
mov
fwait
xchg
mov
xor
in
mov
imul
mov
pop
mov
stc
ret
pop
pop
gs
aam
aam
cmpsb
enter
sbb
roll
loopne
movsb
jp
push
int
dec
jae
mov
cs
imul
aad
mov
mov
and
icebp
mov
stc
insl
cmp
dec
mov
leave
bound
cld
lock
fisttpll
rolb
shll
inc
int
push
iret
fst
sub
fisubrs
inc
cmp
mov
mov
pop
mov
scas
test
sub
out
outsb
ja
call
xchg
pop
and
or
xchg
dec
adc
xchg
mov
repz
adc
sbb
call
sbb
mov
mov
repz
mov
pop
jecxz
pop
popf
pop
adc
and
push
jbe
nop
icebp
sub
pushf
outsb
ljmp
mov
dec
inc
inc
mov
mov
loope
pop
insl
jae
cld
sti
dec
out
xchg
dec
insb
addr16
stos
xor
mov
decb
push
mov
enter
mov
inc
inc
push
jae
or
cwtl
sub
dec
sbb
fs
cmp
aam
mov
sub
insl
adc
in
or
xor
lock
mov
inc
nop
inc
insb
jl
jl
cs
sbb
ret
lahf
or
mov
mov
push
fisubrl
ja
pop
test
loop
inc
fwait
cmp
xor
movsb
cmp
add
lahf
xor
dec
add
mov
xor
scas
mov
pop
clc
fwait
jbe
xchg
movsb
inc
jle
lret
lods
xchg
fwait
in
add
push
loop
adc
stc
xrelease
push
xor
sub
mov
push
daa
gs
xchg
stc
shll
mov
xor
call
lret
mov
xchg
pop
mov
fucom
adc
gs
jo
testl
mov
fadds
and
mov
mov
sub
aam
sbb
push
add
aas
scas
sarb
jb
push
pop
ss
aad
mov
stos
pop
jns
imul
push
hlt
xor
xchg
xor
cld
pushf
xor
jo
aad
aam
cmc
cmp
mov
mov
cltd
mov
or
inc
ljmp
addl
adc
mov
inc
adc
adc
fsts
aaa
jno
ret
adc
je
jo
movsb
ljmp
inc
loope
adc
mov
fldl
test
adcl
hlt
or
xchg
sahf
or
pushf
in
in
incl
fimuls
test
int
xchg
inc
out
hlt
sub
dec
cmp
shlb
ljmp
adc
or
into
fwait
leave
push
or
dec
dec
pop
test
pop
xchg
inc
mov
mov
jbe
push
sbb
and
and
lods
repz
mov
push
das
rclb
sti
or
xor
enter
inc
fdivp
jecxz
inc
dec
push
pop
inc
iret
mov
adc
in
sbb
js
dec
les
and
dec
stos
jmp
and
cmp
adc
mov
aad
cltd
not
fstpt
fcoml
push
mov
xor
stc
jl
out
dec
jo
daa
cmc
cmpl
test
scas
jmp
jmp
stc
and
lahf
sub
xor
outsb
mov
ret
repnz
lods
sub
xor
xor
xchg
adc
lods
or
mov
in
cmp
pusha
arpl
pop
outsb
cltd
lea
sbb
js
push
lahf
cltd
sub
sbb
data16
ret
out
push
mov
adc
loopne
push
idivb
add
dec
mov
mov
and
push
cli
push
xchg
push
xor
mov
jl
ljmp
cs
loop
xor
cs
dec
lods
or
adcb
inc
das
xchg
inc
shl
pushf
jae
stos
pop
fbld
or
aad
popf
mov
and
cmpsb
dec
iret
daa
push
aad
dec
jne
pop
mov
cmp
or
add
sub
fnstsw
int
or
jne
fstpt
mov
xchg
movsl
sbb
pop
jle
xchg
enter
xor
into
cmp
dec
pop
cmp
int3
fs
or
xchg
in
cmp
divb
jmp
imul
je
out
negl
gs
movb
push
xchg
dec
mov
inc
scas
fwait
ja
pusha
bound
test
xchg
fwait
out
xchg
mov
jo
mov
mov
sub
xchg
aad
jbe
sbb
lds
and
mov
iret
dec
fbld
inc
push
mov
daa
mov
jo
and
mov
dec
sti
aam
push
scas
hlt
lods
adc
pop
cmp
cmpsl
adc
and
scas
in
popf
cld
iret
lea
int
repnz
test
rcrb
adc
loopne
cld
inc
popa
xor
mov
inc
xchg
addps
xchg
fwait
xor
mov
inc
push
sbb
and
mov
mov
ds
cli
movsl
enter
add
pop
mov
int
push
mov
arpl
push
xorb
pop
stos
jb
xor
sti
or
jns
add
mov
mov
flds
add
push
jbe
push
jecxz
push
push
push
adc
hlt
lret
test
push
icebp
jo
out
cmp
jno
mov
sbb
mov
dec
in
std
push
cmp
and
jg
int3
test
pop
push
cmp
push
ja
loop
es
mov
push
movsb
push
xchg
mov
icebp
and
cmp
daa
push
sbb
push
xor
dec
leave
adc
insb
divb
inc
insl
in
xor
cld
and
xchg
mov
and
jp
in
xor
mov
rorl
inc
ljmp
fs
hlt
xor
and
fidivs
out
cmp
xor
fwait
mov
pop
pop
fildl
pop
mov
rcrb
push
jne
ret
lods
and
cmpb
sbb
scas
xchg
inc
mov
scas
mov
inc
std
test
inc
mov
xor
movsb
repnz
push
inc
call
cli
clc
or
or
subb
dec
fiadds
test
aas
mov
push
mov
and
pop
mov
pop
sbb
dec
push
notl
enter
jp
sub
adc
test
ficoml
rcl
std
cmp
push
fcomps
pop
cli
lds
sbb
outsl
xlat
xor
dec
mov
cld
stc
mov
xorl
lea
mul
jle
push
push
ja
pop
lahf
in
loop
mov
cmc
pop
pop
xchg
add
pop
jp
adc
lods
frstor
xlat
or
inc
das
jl
sub
sbb
imul
dec
add
btr
pop
fists
stc
cs
leave
cmpsl
out
push
popl
xor
sub
cmp
in
mov
fwait
lea
pushf
xor
dec
dec
mov
jae
test
or
xor
inc
aas
xor
lcall
clc
lea
ret
cltd
sti
loop
inc
lock
xor
add
es
mov
cmpsl
jnp
test
and
test
pop
xchg
cmp
pop
mov
xchg
mov
aam
mov
sahf
imulb
inc
mov
out
dec
scas
icebp
in
dec
dec
jge
mov
mov
sub
daa
inc
xchg
pop
aaa
mov
loopne
sti
inc
ja
jns
push
sahf
in
daa
lds
test
insl
sub
jp
pushf
jl
dec
out
dec
xlat
cmc
jns
cmpsl
push
inc
push
cwtl
mov
mov
dec
aas
and
lock
add
xchg
out
pop
daa
inc
dec
repz
sbb
fsubs
loope
daa
jle
jmp
xchg
xor
sub
fcomp
cmp
repz
ljmp
dec
inc
rcrb
movsb
ret
and
test
fsubr
outsb
sbb
sbb
sarb
push
iret
ror
push
mov
or
repz
mov
test
add
mov
scas
sub
fidivrl
pop
xchg
pop
sahf
cmc
add
pop
pop
or
mov
xor
dec
jno
jo
mov
mul
pop
jmp
lret
xchg
fwait
mov
stc
bound
mov
sar
repnz
stos
lret
xor
in
push
mov
aas
xchg
push
xchg
fcom
orl
jmp
push
cmpsb
mov
cmovp
push
xor
fdiv
pop
xchg
add
fdiv
fdiv
outsl
pop
out
push
jmp
stos
inc
scas
pop
enter
jge
subl
dec
sub
popa
iret
aas
lret
mov
sub
mov
test
fldl
les
xchg
xchg
std
cmpsl
xchg
or
in
mov
dec
outsl
sbb
mov
aam
and
sahf
xchg
push
jge
inc
int3
pop
mov
mov
mov
stc
insb
ret
and
fnstcw
adc
add
arpl
dec
daa
inc
xchg
movsb
xor
xchg
cs
pusha
mov
fsubrp
pop
xchg
stos
in
sbb
scas
aaa
insl
xor
stc
fistpl
adcl
ljmp
lahf
push
jmp
mov
mov
dec
repnz
test
add
incb
dec
push
mov
mov
push
cmc
scas
mov
pop
fs
add
nop
je
shll
bound
je
std
loope
test
sbb
repnz
cmpsl
lret
in
outsb
sub
add
inc
movsb
mov
and
and
imul
jno
xor
icebp
jl
inc
ljmp
mov
fcoml
aad
jecxz
adc
fwait
jb
and
scas
or
or
mov
scas
shlb
icebp
jno
jns
adc
push
xor
adc
xchg
inc
or
addr16
adc
xlat
sub
into
shrb
and
mov
xchg
pop
flds
nop
stos
sahf
mov
mov
cltd
mov
mov
cmp
mov
pop
fisttps
loope
jae
std
mov
stos
mov
lea
addr16
sti
sbb
outsb
ja
cmp
lods
sub
adc
cld
jnp
enter
dec
inc
cmp
loope
and
or
push
xchg
dec
cmp
sub
sbb
and
jno
xchg
out
mov
dec
or
test
jne
add
mov
xchg
or
push
popf
jecxz
inc
sbb
hlt
xor
int
dec
stos
dec
rcrl
sub
cmpsb
sbb
jae
push
sbb
repnz
out
test
and
jmp
sub
mov
xchg
xchg
out
clc
cmp
clc
cmpsb
in
mov
dec
lock
ja
pop
outsb
sub
loopne
mov
loopne
das
add
stc
push
dec
test
pop
test
test
popf
out
xor
add
jg
jno
cmovge
and
sbb
mov
sbb
rcl
aaa
popl
hlt
sub
adc
outsl
dec
nop
adc
adc
out
cltd
xchg
cwtl
mov
pop
jg
sbbl
cmp
cmpsl
mov
insb
cmpsl
mov
inc
dec
mov
and
repnz
iret
cmpsb
hlt
test
jge
movsl
notb
ret
and
jmp
mov
xchg
imul
ret
or
mov
xor
mov
push
push
push
in
sbb
sub
push
push
pusha
dec
clc
gs
lds
aam
push
insl
inc
adc
pop
mov
jg
into
pop
fsubr
sbb
adc
sub
jne
pop
shl
int3
into
inc
cmp
jo
mov
aaa
fcoms
push
xlat
ficoms
xor
adc
test
mov
fdivrl
inc
movsb
dec
scas
jge
cs
inc
out
test
jle
sbbb
hlt
andb
jecxz
or
leave
sub
aam
sahf
das
cltd
dec
in
pop
popa
and
push
xor
in
mov
js
push
push
test
ret
mov
shll
test
out
cmp
daa
movsl
rcrb
fsubl
pop
mov
stc
mulb
stos
jb
nop
push
stos
mov
inc
divb
nop
test
and
push
orb
int
xchg
and
aas
push
adc
pop
or
cmp
cwtl
push
rol
push
mov
es
dec
test
popa
jb
add
add
jae
dec
mov
daa
push
push
pop
jecxz
lds
insl
sbb
adc
inc
pop
add
and
push
inc
mov
imul
cmpsb
jge
pop
pop
cmp
ljmp
imul
pop
mov
xor
stos
mov
add
scas
mov
mov
pushf
in
std
rcrl
fnstenv
lock
pop
fistpl
inc
std
inc
mov
pop
cmp
mov
sbb
out
push
xor
decb
and
aas
int3
lods
cs
mov
popf
pop
jge
cmp
mov
popf
into
xchg
aam
and
int
fstl
adc
sbb
int
insb
dec
fwait
and
fisubrl
fwait
stc
test
divb
cmp
xchg
movsb
xchg
xor
mov
inc
dec
jnp
fbld
out
inc
cs
fmulp
lods
mov
cmp
mov
in
mov
mov
int
enter
push
or
lret
in
push
lds
into
add
add
or
push
lods
push
enter
adc
mov
repnz
mov
sbb
orb
mov
or
movsl
jp
out
jb
fs
xor
int3
stos
inc
or
test
call
jmp
inc
orl
pop
inc
push
je
test
xchg
push
imul
lods
in
mov
mov
sbb
pop
push
movsl
fwait
jmp
and
mov
cmp
add
add
mov
imul
mov
cmp
pusha
jns
cmp
lea
cwtl
sub
fstpt
fcompl
xchg
dec
and
in
mov
ljmp
cmp
in
clc
into
add
rorl
fwait
or
paddusw
dec
sub
xchg
rcrb
addr16
jg
ds
push
sub
inc
mov
and
rcrl
mov
pop
fidivrs
xor
dec
dec
out
xchg
popf
push
jnp
pop
jbe
stos
fildll
test
jns
and
test
or
std
add
mov
gs
add
jnp
call
loope
pop
dec
fidivl
push
jns
js
xchg
jmp
pop
xor
aaa
pop
pop
push
pop
or
push
push
ret
jae
dec
pop
ljmp
std
lods
inc
int3
incb
pop
data16
sub
subl
imul
stc
arpl
fcmovnu
push
push
mov
push
jne
mov
dec
mov
inc
or
out
sahf
push
clc
scas
iret
sarl
jle
add
xor
aas
dec
push
jno
or
fwait
es
dec
push
in
and
fidivrs
add
scas
dec
mov
das
int
add
sti
sbb
dec
push
sti
iret
jecxz
xchg
xchg
mov
ss
adc
mov
ss
fisttps
pop
jg
jmp
dec
pop
jmp
hlt
test
popa
sub
dec
xchg
dec
lock
pop
xchg
adc
hlt
or
fwait
mov
ret
sti
popa
mov
add
pop
pop
mov
jle
ja
mov
inc
sahf
fmul
mov
xor
xchg
lcall
jp
loop
mov
call
ret
mov
ljmp
jl
movsl
sbb
leave
push
insb
mov
fdivrl
mov
stos
push
ds
dec
push
sbb
dec
in
cmp
int
es
dec
stos
aaa
sub
xor
leave
mov
fisubrs
and
jae
sub
pop
jns
pop
mov
jbe
sub
mov
and
shrb
xor
stos
fsubs
sbb
repz
push
mulb
mov
ret
add
push
xorl
movsl
lret
or
pop
mov
insl
loopne
xchg
cmp
dec
or
xor
dec
rcrl
insb
inc
clc
push
ds
pop
jmp
shr
popf
pop
ljmp
nop
and
cmpsb
cmp
or
arpl
or
bound
ds
frstor
andb
sbb
mov
popa
add
adc
mov
mov
scas
pop
jnp
push
inc
adc
movsb
fpatan
lods
imul
mulb
mov
pop
imul
sahf
or
xchg
js
jno
mov
mov
aam
movsb
shl
subb
mov
lea
pop
call
jecxz
adc
stos
mov
push
shrl
scas
rorb
roll
xchg
pop
lahf
scas
mov
mov
mov
arpl
fs
pop
gs
dec
call
sub
adc
sti
out
mov
test
xchg
flds
add
add
pop
out
sahf
andb
aad
cmc
loop
fmuls
dec
int3
shrl
arpl
mov
mov
push
mov
lea
nop
add
pop
in
lods
push
out
dec
scas
pop
pusha
out
insb
mov
cmp
repz
sbb
lret
dec
arpl
fstps
repnz
jbe
in
dec
loope
es
pop
add
sub
inc
jl
pop
clc
das
xor
mov
push
mov
in
sbb
or
jne
xchg
rorb
jg
xchg
sbb
fs
or
mov
addr16
push
push
pop
and
mov
adc
sbb
movsb
call
add
pop
iret
push
fs
std
pusha
cld
pop
inc
popf
push
dec
in
sbb
xor
mov
inc
pop
aas
push
add
fidivs
out
bound
cwtl
xor
jns
push
cld
mov
daa
in
addb
push
or
dec
or
xchg
jns
mov
out
enter
pop
mov
dec
mov
int
jl
nop
pusha
inc
sahf
cwtl
jae
imul
mov
dec
fcoml
jmp
lret
adc
xchg
scas
cmp
pop
sbb
push
mov
ljmp
testb
fwait
inc
jp
fs
dec
lods
lock
shl
scas
imul
add
pmaddwd
popa
cli
inc
pop
jmp
aas
jl
enter
lods
mov
rolb
cmc
pop
xor
mov
je
int
lcall
popf
pop
mov
mov
pop
outsb
popf
rcrl
jge
pop
cmp
push
adc
loope
xor
cmp
inc
lock
pop
xor
push
jne
xchg
adc
sbb
sbb
push
inc
shl
daa
pop
sub
mov
sahf
mov
pop
mov
nop
mov
scas
xchg
mov
jne
cmp
test
xchg
fiadds
pusha
push
jmp
hlt
adc
pusha
das
xchg
mov
idivb
pop
cmp
mov
pop
pop
pop
out
pusha
and
ret
jle
movsl
add
push
scas
movsb
popf
jns
cmpsb
cli
xchg
pop
cmpsl
adc
cli
sbb
and
xadd
in
out
stc
pop
fsubrp
pop
test
in
bound
pusha
jae
movsl
mov
push
inc
mov
add
loope
ret
inc
test
lods
sbb
sbb
xchg
mov
in
pop
jmp
sar
jns
lods
jns
push
mov
jmp
and
insb
imul
mov
push
pop
or
subl
xchg
mov
push
xchg
xchg
addr16
push
pop
jg
ss
loopne
jnp
popa
jae
xchg
inc
les
xlat
dec
insl
ret
mov
xor
pusha
xlat
xchg
stc
jecxz
push
dec
int
jns
mov
test
jnp
in
jne
xchg
repnz
mov
lock
hlt
sub
aas
pusha
mov
movsl
fldt
xchg
sbb
mov
dec
pop
and
in
inc
mov
sti
ds
jne
adc
cmp
mov
sub
and
xchg
sub
xchg
ja
xor
loope
ds
mov
test
and
lret
xchg
jl
xor
stos
hlt
sub
js
jo
rcl
aaa
pop
push
pop
push
mov
add
rcrb
in
lds
fwait
popf
loop
fcompl
cmp
andl
fimuls
sbb
sahf
fldl
push
pop
leave
daa
aad
mov
push
mov
pop
sub
cld
mov
sbb
jno
mov
pop
jp
arpl
outsl
lret
repz
add
ret
jl
add
adc
and
fimull
punpcklbw
insb
dec
cmp
daa
sbb
cmc
jnp
pop
out
adc
mov
iret
stos
jmp
outsb
decb
repz
test
sbb
mov
test
sub
insl
ljmp
dec
lahf
je
lea
jae
lret
fisttpll
adc
or
mov
add
mov
movsl
jg
xchg
pop
fisttpll
pop
aaa
std
rcll
fcmovu
lds
fnstenv
fidivrs
xchg
lret
xchg
icebp
sub
push
jmp
insb
popf
es
pop
ss
outsb
idivl
dec
fdivl
mov
push
jb
xchg
sbb
jg
jge
shl
in
jge
mov
push
fcomi
pop
inc
push
mov
mov
pushf
fistpll
dec
jmp
cli
pop
nop
push
in
mov
cmp
rep
std
push
outsl
scas
scas
push
lds
push
and
pop
push
push
loopne
cwtl
cmpsl
sti
push
jbe
jbe
and
add
loope
lahf
xor
test
lock
jle
add
jg
cmc
pop
cmp
cmpsb
pop
cmp
jnp
mov
pop
or
jns
mov
lcall
pop
adc
cmc
xorps
sbb
ret
add
and
lock
adcb
adc
jecxz
decb
std
mov
mov
push
and
iret
arpl
lods
lods
jno
aad
jmp
aad
and
std
mov
lcall
push
mov
cmp
lahf
loop
arpl
mov
pusha
out
jge
push
iret
mov
sti
sbb
inc
cltd
imul
mov
add
add
les
dec
cmc
je
clc
mov
mov
sub
loop
jnp
cwtl
lret
fmull
or
dec
pop
push
std
pushf
mov
sbb
lds
xchg
adc
adcl
mov
testl
icebp
dec
xchg
add
jne
fcoms
mov
add
push
fadds
fmull
adc
popf
pop
jne
mov
jnp
jl
aam
js
mov
inc
cmp
mov
jecxz
jno
incl
enter
daa
jmp
ret
xchg
cmp
and
adc
cmp
cmpsb
or
notl
mov
rcrl
fisttpll
loop
out
xor
shlb
xchg
inc
dec
int
jle
push
xchg
mov
or
sub
inc
loope
jp
dec
pop
push
jo
das
inc
dec
andb
jecxz
inc
rorb
fwait
jg
ljmp
mov
mov
cli
les
add
scas
cld
add
xchg
or
jge
xchg
dec
ljmp
push
cmpb
mov
outsl
inc
imul
rcl
adc
xchg
push
fwait
push
jp
cmpsb
lods
fwait
imul
shll
cs
inc
je
aam
xlat
mov
pushf
sbb
shll
lret
jb
sbb
push
adc
dec
test
push
pop
scas
int3
aad
sub
popa
mov
xor
mov
dec
sbb
cmp
jb
stos
punpckhwd
aas
js
jp
leave
scas
pop
adc
in
pop
push
imul
in
sub
xchg
rclb
inc
inc
jne
push
jmp
in
fiadds
cltd
sub
dec
pop
cmpsb
fwait
mov
pop
xchg
and
inc
mov
mov
or
cmc
loop
cmp
xchg
hlt
sub
and
pop
adc
pusha
outsl
arpl
sub
pop
jb
aas
cld
and
incl
sbb
jnp
lods
dec
inc
fwait
jno
mov
pop
test
inc
xchg
loopne
ljmp
sub
dec
jne
cmp
fisubl
incl
nop
jp
or
mov
cmp
sbb
lods
cli
popa
sbb
popf
lcall
mov
or
mov
cs
xchg
or
fistps
jle
pop
rcrl
mov
sti
jecxz
xor
jae
div
call
add
lea
pop
and
pop
std
and
flds
cmp
scas
cltd
scas
sti
and
movsb
or
in
clc
aad
push
ret
dec
adc
mov
fmul
lock
cltd
scas
and
fcmovbe
fldl
add
fsubrl
mov
insl
addr16
adc
add
push
push
add
imul
cmpsb
dec
in
mov
std
pop
mov
cmp
or
push
das
pop
mov
out
jmp
repnz
jmp
aad
inc
negl
out
loopne
data16
jno
xor
mov
lods
lcall
sbb
sbb
lods
pop
mov
data16
cmc
cwtl
jae
sbb
pop
pop
jo
jns
les
inc
xor
inc
sbb
inc
lahf
lea
push
imul
jmp
sti
ror
into
in
movsl
data16
cld
inc
dec
test
xorb
pop
aam
inc
lcall
repz
push
std
mov
roll
xor
xlat
add
jb
and
inc
push
lahf
or
cmp
insl
aam
sub
xchg
shrb
fnstsw
push
lahf
addr16
mov
adc
xchg
in
andl
cmp
fildl
dec
lock
mov
add
rcrl
js
dec
rcr
int
call
dec
jne
cmp
loope
insb
mov
and
adc
and
in
dec
jnp
lock
adc
sbb
mov
leave
xchg
xchg
mov
cmp
dec
mov
dec
das
sub
ret
mov
mov
mov
xchg
rcll
push
je
scas
fldln2
dec
jmp
fnstsw
pop
jo
ljmp
int
jae
lret
mov
clc
mov
aad
cmp
scas
lds
stos
and
stc
outsl
outsb
xchg
orb
jns
fs
cmpsb
mov
lret
xchg
xchg
jge
xor
iret
imul
xor
int3
rol
push
fwait
push
call
ds
sub
aaa
es
mov
pushl
into
pusha
and
xor
dec
cmp
mov
ja
testb
dec
lret
mov
out
mov
sbb
sbb
rorb
sbb
addl
inc
lahf
into
jnp
mov
sahf
aad
rorl
dec
nop
dec
stos
jne
stos
out
push
mov
sbb
loope
jge
fcompl
xchg
sbb
mov
xor
jecxz
shrb
sbb
adc
xlat
xchg
mov
stc
outsb
pop
inc
and
push
test
and
xlat
test
xor
xchg
in
sub
sbb
add
sahf
mov
cmp
sbb
out
sti
je
cmp
aad
lods
xchg
jge
add
add
mov
lods
cli
cmp
in
or
ljmp
popl
or
dec
pop
or
aam
sahf
ljmp
insl
daa
jge
cld
loopne
aas
push
jbe
jae
imul
cmp
pusha
and
jp
roll
sub
pop
sar
repnz
aaa
adc
adc
lret
xor
jo
pop
jbe
xchg
add
mov
aam
repnz
sub
adc
inc
push
jge
nop
xor
test
and
insb
xchg
and
call
mov
rorb
jle
shl
repz
daa
fs
lahf
inc
jge
and
out
es
pop
rorb
and
insb
or
std
arpl
clc
and
inc
fnstsw
mov
in
xor
xchg
inc
inc
sub
idivl
xchg
scas
or
repz
arpl
cmp
sti
stos
mov
int3
je
das
shl
push
jg
mov
test
cwtl
in
dec
int3
mulb
addr16
cmp
jbe
loop
sbb
inc
or
push
cmpb
andb
imul
pop
mov
popf
or
xchg
sub
sbb
add
mov
jg
adc
sbb
pop
test
inc
inc
loopne
dec
jle
idivb
test
sub
adc
fcomp
ljmp
bnd
fistl
out
sbb
cmp
pop
pop
push
pop
jae
lret
jge
or
lss
pop
jp
pop
shr
shrl
pop
faddl
jne
mov
test
mov
stos
mov
and
xchg
hlt
mov
movsl
mov
out
mov
aas
pop
repz
insb
add
sti
pop
pop
push
push
jecxz
aam
popa
cmp
dec
ds
add
scas
mov
mov
sahf
mov
cmpsl
loopne
pop
test
clc
fwait
enter
jmp
dec
jmp
cmp
pop
mov
mov
mov
fwait
jl
mov
push
ljmp
mov
pusha
or
push
addr16
mov
leave
out
jle
sub
pop
jnp
mov
pop
push
inc
inc
cmp
popa
stos
les
push
int3
xor
out
push
out
scas
push
pop
test
mov
ret
iret
js
daa
jle
lcall
jnp
in
pop
notb
mov
lods
scas
jb
or
icebp
in
and
sti
inc
add
or
jp
aam
and
movsb
xor
gs
lea
stc
cmp
aad
adc
mov
and
out
xor
sbb
fucomi
pushf
dec
or
adcb
cmp
pop
lahf
repnz
dec
ja
int
jb
ss
add
or
xor
shlb
sahf
dec
xor
call
mov
mov
adc
in
lods
push
bound
frstor
hlt
insb
mov
xor
xchg
sbb
mov
lock
or
sar
les
sub
rclb
adc
leave
cli
sbb
adc
dec
mov
loop
into
sti
sub
lea
imul
add
enter
insl
int
bound
ja
or
test
in
pop
loope
int
int
adc
jnp,pt
xchg
test
rcr
movsb
xchg
orb
inc
xchg
xor
cmc
pop
xchg
call
jns
imul
mov
pop
cmp
std
xor
enter
test
cwtl
cmp
jbe
push
or
pop
test
das
mov
std
inc
fdivrs
xchg
mov
popa
dec
loope
pop
adc
push
enter
fiadds
cld
addl
sub
mov
ds
mov
mov
mov
mov
insl
fadd
ja
lods
jns
shlb
and
movsb
movsb
mov
mov
rolb
jecxz
test
xor
out
repz
sbb
jg
pushf
jbe
and
adc
arpl
jge
nop
aad
in
mov
jecxz
jb
fdivrs
shll
mov
nop
cli
pop
mov
jl
fsubs
faddl
scas
xor
xchg
iret
aad
aas
xlat
nop
mov
jbe,pn
dec
fldcw
pusha
add
adc
push
std
sbb
inc
cmp
das
lret
jge
push
dec
inc
mov
inc
dec
xchg
paddd
push
cmpsb
jno,pn
daa
inc
cld
mov
mov
je
cmp
pop
test
pop
xchg
cmpsb
dec
aas
sbb
xchg
push
in
icebp
mov
daa
fcompl
jp
imul
jnp
and
test
fistps
inc
mov
shlb
out
repz
aad
fstl
dec
jbe
xchg
xchg
iret
lret
in
sub
jbe
fstl
imul
sub
xchg
xor
push
adc
mov
sbb
and
ret
jg
cs
adc
sbb
add
sbb
test
int
mov
cli
aaa
push
inc
out
out
ljmp
in
enter
jecxz
dec
cmp
cmp
inc
push
pushf
or
mov
mov
pushf
push
int
clc
std
lret
adc
push
lcall
repnz
mov
jo
call
and
subl
data16
xor
rorl
repz
repnz
iret
shlb
xor
mov
and
xchg
enter
xchg
fcmove
adc
insl
or
adc
int3
aad
sub
mov
xor
sbb
or
cmp
mov
mov
mov
hlt
inc
lods
mov
pusha
movsl
xor
lea
cld
into
cwtl
and
shl
test
sub
das
outsl
push
sub
gs
sub
mov
lcall
andl
fwait
mov
aad
sub
addl
mov
fistps
pop
cmc
add
movsb
ljmp
add
aaa
sub
or
mov
scas
jns
lea
in
mov
dec
add
aaa
push
loopne
ret
roll
shll
lea
bswap
adc
xchg
pop
sbb
scas
ja
adc
insl
jecxz
sub
in
push
aam
lea
shll
call
scas
and
test
mov
pop
stos
or
popf
xlat
dec
xlat
insb
nop
es
cmp
and
inc
sbb
jns
sub
out
pushf
fists
lods
jo
sti
insl
push
nop
sbb
js
adc
ror
ljmp
sbb
add
lock
test
jg
sub
sub
test
iret
push
jge
xor
xor
sbb
and
clc
and
ss
lea
xchg
stos
rcrl
outsb
cmp
and
arpl
mov
lds
sub
dec
jmp
sbb
lahf
shlb
shrl
add
pushf
inc
lea
xchg
ffree
or
pop
adc
es
cmp
loopne
rcll
pop
pop
into
xor
mov
mov
and
and
aas
jge
pusha
jbe
arpl
mov
jp
lahf
insb
jae
es
popa
adc
push
and
add
or
outsl
js
push
jae
jge
in
call
push
add
es
pop
pop
push
xchg
leave
mov
xor
repz
movsl
jecxz
mov
cmp
cwtl
ret
sub
pop
and
lahf
clc
dec
pop
or
stos
jne
sbb
out
fstl
sbb
or
sar
mov
stc
adc
cld
lods
movsl
in
push
aaa
jecxz
out
sbb
mov
or
lcall
mov
imulb
shr
mov
in
cmp
adc
mov
xchg
mov
push
data16
data16
inc
mov
in
mov
nop
adc
xchg
add
sbb
xlat
std
jne
outsb
or
add
sub
sub
imul
icebp
jo
add
xchg
inc
outsb
je
and
imul
sbb
dec
insl
ljmp
and
popa
scas
repnz
mov
fs
push
stos
pop
repz
dec
add
cs
mov
mov
pop
and
int
xorb
sbbl
test
out
pushf
aaa
pop
mov
loopne
out
mov
mulb
sbb
bound
sbb
jnp
std
lret
xchg
pop
or
ret
pop
adc
jbe
jmp
adc
sub
jbe
sub
xchg
sbb
outsb
aam
mov
ja
cmpsb
inc
sub
stc
or
xchg
pusha
jno
sarl
push
add
mov
cmp
orl
mov
mov
push
dec
in
repnz
inc
dec
loopne
mov
sti
or
push
ret
dec
pushf
push
arpl
rolb
dec
and
je
aam
cmpsl
push
loope
test
mov
shll
into
or
mov
mov
mulb
jge
aas
in
push
jg
mov
sub
ss
cld
mov
les
das
shrb
repz
lret
inc
jno
xor
pop
ret
call
scas
xlat
les
add
push
inc
cs
push
std
fistpl
mov
test
mov
xchg
add
cltd
dec
mulb
out
jb
std
ljmp
push
stos
orb
dec
xchg
fcmove
mov
and
sbb
dec
jle
pusha
sub
fisubrl
xchg
xor
xor
out
adc
jle
aad
xor
cmp
movl
xchg
ss
gs
pop
test
push
test
adc
or
push
sub
xchg
adc
ljmp
mull
inc
outsl
das
mov
adc
mov
inc
xchg
sub
cmp
sub
in
pop
dec
mov
or
shrb
in
icebp
sub
or
into
test
leave
aad
push
pop
sub
or
mov
sub
jno
jb
inc
dec
insb
stos
xchg
push
dec
outsl
mov
popf
sbb
dec
fwait
add
jb
repnz
jae
sub
cs
mov
push
cwtl
cmpsl
outsl
arpl
adc
js
jae
dec
pop
xor
mov
arpl
icebp
mov
enter
test
xor
jno
into
imul
test
add
fwait
out
xor
fstpl
dec
xor
dec
inc
or
or
movsl
dec
subb
pushf
out
inc
mov
ficomps
int
cmp
mov
mov
sarb
xchg
or
or
xor
push
cltd
popa
dec
out
sbb
cwtl
cmp
pop
mov
mov
scas
je
fwait
push
fldenv
sub
jb
mov
fs
or
ds
mov
mov
ja
mov
arpl
cmp
shl
jle
in
inc
imulb
pop
test
jg
and
bound
mov
xor
test
fisttps
xlat
ljmp
int3
pop
test
scas
pop
push
sbb
add
sbb
mov
lcall
dec
cmp
pop
or
push
ss
in
lods
mov
dec
les
add
fcompl
in
popf
xor
dec
das
push
jge
scas
push
iret
cli
cmc
clc
push
mov
adc
cmp
jecxz
inc
fstl
bnd
add
pushf
imul
dec
cmc
mov
gs
or
pop
push
mov
cld
hlt
jae
sbb
bound
pop
or
daa
in
lcall
dec
fcompl
ja
insl
xchg
mov
cld
mov
sbb
in
xor
jns
sub
es
stos
inc
mov
imul
and
jae
jbe
and
mov
loop
jo
decb
jmp
cmp
sti
rolb
jp
mov
or
push
test
xchg
hlt
popf
movsl
or
aam
cmp
aas
arpl
loopne
scas
rclb
adc
sti
xchg
xchg
ret
imul
std
jne
pop
jnp
sub
cmpb
cltd
push
xchg
and
decb
inc
rcl
cmp
xchg
lea
pop
inc
add
add
sbb
mov
sub
test
aad
mov
test
inc
inc
lods
dec
and
sbb
xlat
outsb
fisubs
int3
nop
fwait
aam
psubq
daa
xchg
out
inc
ljmp
mov
lahf
mov
xchg
insb
push
out
movsl
jg
adc
mov
fidivrs
push
mov
xchg
mov
xlat
lds
rclb
loopne
cs
std
push
and
push
mov
pop
mov
movl
or
pop
cmp
fsubrs
insb
jp
aam
lods
mov
pop
inc
mov
popa
fs
push
xor
das
movsb
dec
sub
cmpsb
mov
lds
mov
or
lea
sub
cmpb
and
test
aam
xor
insb
fsubrl
mov
push
fldt
lret
push
xchg
sbb
dec
retw
xor
je
xchg
jnp
imul
xchg
sahf
js
xchg
cmp
jns
test
cltd
lods
pop
lods
fadd
mov
ret
or
inc
push
sbb
and
mov
cwtl
jnp
sub
fistps
mov
sti
lcall
popa
mov
mov
loopne
loop
push
lods
std
test
or
adc
inc
popf
fidivl
xchg
push
jne
out
fcompl
dec
jno
enter
xchg
add
enter
add
lret
jg
mov
mov
adc
aaa
push
push
test
jg
ljmp
outsl
nop
ljmp
ja
lods
jns
stos
mov
in
mov
add
xor
jno
aas
fidivl
in
ret
sub
pop
or
jnp
scas
xor
dec
loope
cmp
push
sub
xchg
shll
mov
lock
push
push
mov
in
mov
xrelease
jo
shll
ss
cmc
xor
in
loop
std
test
mov
mov
adc
shrl
push
adc
ret
mov
mov
jbe
pop
repz
iret
or
push
xchg
xlat
adc
add
lret
cmp
jns
mov
arpl
sub
nop
mov
push
inc
pop
sub
dec
inc
or
mov
cs
push
insb
xchg
mov
push
jne
sbb
pop
inc
pop
mov
push
fbld
pusha
jbe
test
sub
in
xchg
popf
push
xor
jb
push
xchg
ja
xchg
aad
scas
inc
inc
mov
fwait
adc
adc
lds
fldt
out
or
pop
lods
loopne
es
rolb
out
push
js
add
scas
mov
sub
data16
cmp
push
xchg
adc
add
pop
adc
aaa
xor
sub
scas
shlb
xor
push
test
movsl
jno
pusha
add
push
mov
out
jno
push
imul
pop
add
test
rclb
imul
test
ret
push
out
mov
jnp
fbstp
pusha
mov
sbb
adc
sub
pop
mov
repnz
add
and
cmp
mov
mov
popf
push
inc
cld
ret
add
dec
out
sbb
cltd
pushf
in
push
pusha
fxtract
jecxz
aam
mov
gs
jo
and
pop
loopne
scas
xor
mov
cmpl
test
mov
lahf
inc
xchg
pop
mov
jecxz
mov
inc
add
iret
mov
xchg
orb
in
pop
into
imul
pusha
movsl
addr16
push
repnz
mov
in
fisubs
rdmsr
inc
movsl
outsl
test
sub
testl
roll
outsl
scas
into
and
or
adc
test
mov
xchg
adc
out
pop
fimull
shrb
cmp
sarb
mov
inc
faddp
mov
jo
leave
imul
daa
and
adc
mov
aas
js
xchg
xchg
rcr
arpl
lcall
push
cmp
adc
loope
enter
xor
xor
pushf
adc
out
outsb
bound
sub
je
inc
adc
mov
xor
scas
push
clc
sbb
shrl
mov
mov
xchg
mov
int3
cmp
cltd
xchg
pop
movsb
add
or
sti
sub
lods
add
bound
jo
popa
push
xor
ljmp
pushf
jo
shll
or
or
hlt
mov
test
fmull
mov
sub
ds
out
cld
pop
mov
rcrb
jp
popf
dec
mov
fldt
fists
xor
test
add
lods
ljmp
scas
rcrb
in
out
push
or
cmpsl
lcall
dec
jae
popa
mov
pop
pop
shlb
pop
stos
xchg
and
mov
xchg
jl
jmp
je
aaa
pop
cmc
push
push
jl
outsb
adc
mov
leave
mov
cwtl
imul
push
cmp
cld
sbb
sub
add
mov
sub
test
pushf
jae
xchg
cmpsb
stos
fsubrp
popl
jbe
scas
clc
in
test
push
in
cmp
outsl
cmpsb
mov
nop
repz
or
and
jge
lret
add
or
pushf
jmp
out
cwtl
mov
sti
es
cmpsb
dec
lahf
fcomi
lods
xor
adc
push
inc
add
jno
cmp
xchg
pop
add
fcomps
inc
sub
inc
pop
dec
fdivrs
xor
dec
cmp
ret
mov
adc
pop
rorl
cld
insl
mov
add
imul
fildll
mov
mov
in
jnp
xchg
jns
jg
leave
fcomp
pop
xor
and
pop
and
adc
mov
cmp
insb
or
dec
in
test
pop
leave
aas
orb
mov
xlat
das
jg
push
aad
cli
stc
jne
imul
dec
xorl
xchg
and
cmp
inc
pop
pop
and
hlt
mov
pop
aas
jno
mov
shrl
sub
loopne
iret
xchg
inc
mov
cmpsb
cmpsb
aam
sbb
xchg
inc
movsl
xchg
cmp
andb
inc
negb
leave
sbb
les
inc
out
pop
pop
push
loope
jbe
xor
cmp
jl
xor
adc
fstpt
pop
out
cmpsb
xchg
lods
fsts
je
lahf
test
dec
js
sti
shlb
add
adc
xchg
push
sub
movntps
xchg
mov
sub
add
jne
jp
mov
mov
xor
rolb
xor
lret
adc
cmp
icebp
mov
or
lock
and
in
jns
jp
dec
enter
lock
push
dec
or
push
js
xlat
out
pop
xor
and
stc
add
pop
cmp
adc
and
pop
mov
jbe
mov
aam
and
aas
std
push
xchg
pop
push
xchg
pushf
leave
mov
mov
repz
outsl
aas
fldcw
xor
sbb
inc
dec
mov
xchg
xlat
inc
push
daa
xchg
mov
lret
xorl
jg
bound
xor
mov
ljmp
xchg
in
aad
ss
xlat
push
push
add
jne
roll
divl
push
lock
sub
push
push
lcall
mov
fsubrs
popa
inc
add
inc
dec
mov
fimuls
leave
ffreep
pop
fwait
mov
xchg
fs
push
rcrl
rcl
stos
fcmovbe
int3
popf
xlat
mov
bound
xor
sbb
fs
mov
xchg
xchg
push
in
andl
fstpt
sti
mov
int
jg
mov
aad
xchg
xchg
scas
xor
fsubrs
xchg
ja
adc
jae
in
test
sbb
aas
xor
ret
sub
nop
test
push
and
add
adc
dec
ja
mov
bound
rcl
sbb
inc
dec
jp
add
popa
ds
mov
data16
lahf
addr16
mov
orl
xchg
or
test
xchg
out
xchg
popf
mov
lods
dec
cmp
das
push
sub
imul
int3
xchg
lret
or
and
add
push
xor
aas
in
ja
mov
or
loopne
fucomi
mov
sub
test
es
xlat
in
icebp
and
gs
mov
and
fsts
push
xchg
adc
add
xor
icebp
jecxz
ficompl
call
xor
sbb
aam
out
rcll
jns
xor
fs
push
mov
in
scas
sbb
mov
push
cmp
jecxz
out
sub
sti
xchg
lret
sub
adc
jo
inc
push
aam
xor
xchg
mov
inc
out
stc
xchg
aam
mov
pop
cli
pusha
mov
cli
mov
jge,pt
sbb
scas
jle
fdivr
repz
xchg
add
call
movsl
call
subl
stc
mov
cmp
psubq
fcoml
loopne
mov
aas
hlt
jbe
aam
test
mov
divl
aad
push
inc
sub
pop
mov
and
call
in
push
scas
push
jns
sti
aam
lock
cmp
mov
pop
out
test
outsb
push
pop
bound
jp
aad
fidivl
pop
mov
into
xchg
mov
test
mov
sub
ret
mov
jo
cli
mov
pop
pop
repz
mov
rorb
repnz
mov
call
insl
and
out
mov
das
inc
dec
sbb
hlt
lcall
jmp
icebp
or
popf
push
mov
cwtl
mov
inc
pop
mov
xchg
in
andl
sbb
mov
scas
and
adc
mov
lods
adc
daa
pop
push
js
pop
lods
inc
xchg
pop
lahf
xor
gs
pop
pop
bound
in
repz
mov
adcb
mov
cs
xor
push
mov
mov
lret
or
push
out
fsubs
mov
push
add
outsb
sbb
sbb
pushf
jp
xchg
out
pop
fdivr
mov
insb
mov
pop
sbb
cwtl
fstl
test
data16
in
push
leave
ret
xor
fidivs
jns
xor
mov
out
insb
in
mov
nop
aad
aas
and
mov
and
imul
andl
cmp
pop
imul
xor
jbe
xchg
js
icebp
xor
lods
stos
and
push
mov
xlat
push
push
or
rclb
xor
jnp
out
push
jge
sbb
adc
bound
xor
and
stos
pop
rcrb
sub
push
adc
repz
rclb
jge
imul
adc
sub
jo
les
pop
add
push
xchg
cmp
loop
mov
clc
xor
stos
mov
sbb
jb
push
cmpsb
mov
lods
jl
jno
cmp
mov
xchg
add
fbstp
or
xor
cs
in
or
inc
pop
notl
mov
int3
movsb
jle
add
mov
dec
enter
cli
test
jle
and
cmpsl
xchg
sarb
push
lock
das
cmp
int3
sarl
daa
pop
inc
sti
cmp
ficoms
cs
repz
fidivrs
xchg
mov
mov
sbb
push
es
jnp
xlat
outsb
xorl
mov
jno
les
imul
xchg
push
sub
rclb
adc
fcompl
fidivrs
dec
andb
inc
pop
cli
push
mov
in
push
sbb
addl
into
xchg
sti
lds
inc
xchg
adc
sub
scas
adc
cld
sti
xchg
adc
je
xor
lcall
addr16
lods
scas
fisubrl
xor
add
int3
mov
outsb
push
xor
pusha
loope
pop
add
add
adc
daa
fsubs
mov
dec
mov
mov
lods
mov
popa
lds
xor
mov
or
cltd
mov
repz
mov
mov
sbb
xchg
xchg
cld
and
push
add
sti
and
lahf
leave
decl
mov
push
and
jmp
fcomip
lock
adc
sbb
cmp
dec
mov
fucom
fxch
jle,pt
cli
mov
int
call
mov
inc
mov
stos
adc
jns
xlat
jno
hlt
inc
or
jbe
sbb
stc
mov
pop
pop
push
add
test
inc
mov
mov
rep
mov
mov
sbb
sub
rclb
xchg
jg
ds
in
or
popf
dec
jp
sub
add
insb
xor
cmc
cmp
cmc
xchg
xor
dec
pop
loope
sbb
mov
or
int
je
movsl
adc
into
fiadds
hlt
cwtl
andl
push
or
cli
mov
sub
jae
cmp
cld
or
push
pop
push
push
scas
pop
mov
jbe
aad
sbb
jns
dec
or
and
add
pop
ret
push
dec
add
nop
sub
fstps
add
test
sbb
push
adc
dec
mov
loopne
cwtl
mov
and
or
fisttps
pop
es
aad
into
sub
pop
mov
adc
into
cs
cwtl
dec
jmp
movsb
cmp
xor
adc
adc
cmp
es
push
mov
inc
idivb
pop
pop
cmp
stc
das
sbb
lcall
pop
push
in
notl
hlt
out
xor
dec
shrl
sub
cmc
push
out
notl
dec
mov
cmc
jae
cli
enter
push
icebp
cmpsl
or
dec
or
mov
sbb
insb
mov
pop
push
lret
sbb
ss
cwtl
xor
clc
aam
addr16
and
pop
jecxz
cwtl
push
jg
jge
sub
jl
js
jecxz
je
pop
shlb
xchg
clc
jne
in
adc
mov
mov
jle
cmpsl
lods
outsl
dec
scas
sbb
sub
test
pop
cmpsl
pop
roll
xchg
gs
pushf
push
imul
push
mov
add
add
lds
mov
cs
mov
stos
jbe
repnz
loope
jl
js
dec
mov
lret
ds
xchg
mov
fwait
add
fnstsw
pop
mov
mov
lods
push
xor
adc
inc
jecxz
push
or
shlb
inc
not
fs
mov
ret
sbb
sbb
push
cmp
cmpsl
or
push
jle
or
dec
popf
test
jnp
nop
adc
push
loopne
outsl
hlt
mov
nop
dec
mov
pop
hlt
ret
adcl
mov
push
or
int3
mov
lret
pop
iret
int3
stc
mov
xchg
repnz
fimull
adc
gs
xor
dec
dec
notl
and
fdivr
lds
xchg
ret
and
sub
push
fdiv
or
jge
jge
pop
mov
ret
mov
xor
mov
nop
xchg
pop
push
sti
add
jp
pop
les
in
pop
sub
das
push
popa
hlt
pusha
xlat
mov
lcall
icebp
inc
or
rolb
dec
ljmp
push
jp
or
adc
cmp
fidivrs
push
clc
xor
imul
je
cmp
mov
xor
and
mov
pop
lock
stos
aaa
pusha
pop
cwtl
mov
popf
pop
dec
insb
fwait
mov
sub
les
test
pop
jle
or
adc
jbe
iret
les
adc
lahf
ret
es
dec
pop
inc
in
inc
shr
jae
dec
mov
notl
mov
fisubrs
jne
enter
push
jae
test
sub
fwait
jnp
mov
mov
scas
outsl
repz
test
sbb
int3
cmp
jo
in
cmp
data16
std
sbb
jmp
adcb
cmpsb
dec
hlt
daa
sub
sti
fmuls
xchg
lods
mov
loope
cli
imul
inc
or
mov
pop
push
mov
lcall
or
xchg
das
mov
enter
jb
jns
iret
xor
lret
cmpb
mov
das
and
mov
sub
clc
sub
test
inc
xor
stc
sub
mov
push
push
cmpsb
push
or
stc
cld
lret
or
sub
outsl
fisubrl
adc
out
and
or
rolb
rcll
add
cmp
inc
dec
lret
mov
xor
and
movsl
push
pop
lods
mov
mov
jecxz
or
out
test
adc
fimull
xchg
jns
adc
xchg
fbstp
repz
dec
aaa
loop
sub
dec
or
inc
sub
xor
xor
pop
insb
push
cltd
or
icebp
clc
pop
mov
test
mov
dec
fcomi
cmp
jae
push
pop
mov
dec
xor
fnstenv
inc
repz
test
cmp
xlat
sbb
ja
int3
lock
aaa
pop
jne
insl
mov
cmpsb
mov
leave
mov
pop
out
sbb
pop
enter
leave
std
and
push
pop
sub
sti
dec
jle
scas
cmp
adc
bound
add
and
movsl
jnp
lods
mov
pusha
jnp
mov
int
pop
add
pusha
cmc
into
jecxz
pop
mov
movsb
mov
pop
ficoml
add
dec
loopne
std
out
out
jmp
in
jg
mov
je
sub
cld
and
xchg
sbb
mov
aad
or
es
pushf
xchg
hlt
ret
or
test
mov
mov
std
fildll
inc
loopne
lods
cmp
mov
clc
mov
dec
repz
dec
mov
test
fcoms
cwtl
cmp
loopne
fcompl
jo
jae
pop
mov
cltd
inc
pop
and
dec
fistpl
jbe
imul
mov
and
cmp
xchg
fstl
push
int
sub
sub
adc
nop
sbb
inc
mov
mull
pop
data16
mov
scas
mov
dec
xor
sbb
sahf
sub
fldt
das
shlb
pop
shr
test
pop
jo
push
inc
in
mov
rep
mov
lods
fs
es
cld
jnp
fldt
pop
shr
mov
dec
xchg
inc
cwtl
xor
xor
pop
sub
sahf
adc
dec
mov
jp
jno
jae
in
fmul
cmp
push
xchg
dec
or
aas
ss
cmp
rcrb
and
pop
sub
and
adc
xlat
and
outsl
inc
jbe
push
sti
add
cli
push
enter
xor
push
inc
aaa
shl
jno
ds
inc
aad
repz
pop
int3
xor
pop
jmp
cmc
or
ja
jb
jne
jecxz
inc
ficomps
outsb
out
add
imul
lds
jo
pop
sbbb
mov
sbb
or
test
or
push
outsb
cmc
mov
or
movsl
iret
out
mov
pop
fildll
lea
jb
xor
pop
cmc
fisttpll
dec
mov
fwait
push
loop
pop
cltd
lods
add
adc
fiadds
xor
dec
inc
ret
or
mov
mov
ss
fdivrl
loopne
mov
movsl
dec
outsb
cmp
stc
fs
xchg
movsb
pop
xor
sti
mov
mov
pop
sub
sbb
fildl
mov
sbb
sbb
lods
cld
mov
adc
test
jne
scas
js
push
fmuls
dec
pop
lds
add
negb
aad
push
repz
inc
out
add
cmpsb
push
or
mov
dec
jl
mov
mov
cli
jnp
jmp
xlat
inc
loopne
ret
pusha
cmpl
sub
adc
pop
jg
inc
aad
mov
and
xchg
lds
push
data16
pop
gs
or
jecxz
adc
sub
insb
decb
sbb
fistpl
mov
dec
cltd
stc
xor
mov
roll
cmp
jnp
sub
das
inc
es
pop
cltd
bound
jge
scas
inc
jge
fldt
inc
vmovdqa
jbe
hlt
iret
roll
mov
js
aam
inc
fldenv
btc
dec
mov
fidivs
jl
push
add
pop
int
loop
pushf
and
push
or
enter
pop
addl
sub
jae
sub
movsb
jle
or
clc
in
cmp
pusha
dec
add
push
into
jl
push
ss
xchg
shl
test
imul
stc
sub
mov
add
ficompl
pop
push
sbb
xchg
pushf
rcrb
testl
mov
cltd
cmp
sbb
xchg
add
cwtl
in
mov
jmp
loope
push
pop
pop
sub
lahf
dec
dec
sbb
fiaddl
sbb
sti
lcall
jmp
fisttpl
jp
push
imul
xchg
mov
push
imul
sti
add
mov
test
and
ss
push
loopne
js
mov
mov
pop
xchg
push
adc
xor
push
jb
xchg
push
cmc
push
or
insb
inc
mov
jo
dec
jne
pop
cmc
ja
cmp
hlt
stos
insl
xor
lcall
push
into
dec
push
popa
outsl
push
adc
fnstcw
out
arpl
daa
lock
sub
dec
push
pop
mov
push
int3
xor
inc
rcrb
dec
icebp
popf
mov
pusha
scas
rcrl
or
sub
outsb
outsb
mov
dec
addr16
loopne
pop
int3
add
push
aas
push
int
scas
adc
xchg
mov
cs
xor
aad
sub
mov
or
xchg
dec
inc
push
lods
fs
mov
cmpl
lret
push
lds
sub
add
dec
pcmpeqb
int3
pop
mov
jns
xchg
inc
add
int
add
xchg
mov
sub
xor
pop
ficoms
mov
ret
lods
push
mov
dec
push
mov
and
dec
out
jg
inc
mov
jecxz
cmp
inc
scas
dec
ds
jb
pushf
sub
lock
imul
push
shll
mov
or
sbb
aaa
fistps
loope
push
pop
popf
adc
or
mov
sbb
jns
testl
pop
push
mov
sbb
mov
ret
ficomps
jp
rcll
mov
and
movsb
icebp
outsb
inc
popw
jle
push
mov
pop
addb
je
cmp
loopne
dec
sbb
mov
enter
or
mov
imulb
addl
arpl
mov
push
inc
cmp
fisubrl
and
dec
push
mov
rol
sub
push
test
jno
pushf
jns
and
and
cmpsb
adc
in
ret
and
cmp
mov
jecxz
dec
into
xlat
or
jnp
negb
mov
sbb
lods
bound
or
pop
cld
push
xor
mov
sbb
sub
cmp
lret
lods
sbb
in
in
fs
hlt
jns
and
inc
inc
mov
pop
stos
lods
dec
add
push
inc
inc
mov
xor
jle
and
std
and
xor
or
pop
rorl
out
cmpsb
repnz
sub
mov
push
rep
in
scas
mov
mov
jbe
dec
dec
mov
lods
push
enter
lret
adc
decb
pop
lahf
divb
xchg
mov
int
aam
hlt
test
mulps
fcmovb
jnp
ret
rcl
pop
adc
outsl
adc
mov
std
ja
divb
std
stos
push
or
hlt
cwtl
outsl
imul
popl
data16
into
mov
dec
daa
ret
jl
dec
cmc
hlt
push
push
addr16
cwtl
sbb
bound
jno
lret
cmp
fwait
mov
dec
push
lods
into
or
into
fnsave
mov
push
es
rorl
lahf
sbb
fcomp
cmc
push
incb
or
fistpll
pop
jmp
sub
adc
aad
ss
and
xchg
xchg
ficomps
pop
push
pop
icebp
sub
xchg
xor
jo
sub
hlt
dec
shl
dec
sti
cmc
jnp
and
das
popf
mov
cld
and
icebp
jge
or
aas
pop
ljmp
test
or
sub
std
or
stc
adc
push
sbb
outsb
mov
inc
mov
lds
scas
setae
outsl
ljmp
sahf
pop
pop
imul
xchg
lods
mov
or
push
push
iret
outsl
pop
ja
and
fidivl
popf
std
hlt
xor
jno
push
daa
subb
cmpsl
lds
push
cli
lock
sbb
pop
jg
push
jo
sbb
or
loop
loope
jno
mov
insb
pop
push
xchg
mov
daa
mov
icebp
xchg
mov
gs
pop
adc
mov
movsb
push
addb
mov
sub
mov
fstps
cmp
adcb
mov
lods
andl
pushl
adc
jl
or
int3
shlb
xor
sbb
push
cmp
rolb
xor
test
fcompl
fwait
ret
in
xor
cmp
jg
shrb
add
les
iret
sbb
jbe
rcrb
sub
pop
mov
cmp
loope
fisttps
adc
add
out
xor
ljmp
cmc
les
inc
out
iret
dec
insl
addr16
push
sub
cmc
das
shll
dec
sbb
pop
jnp
fsubp
push
mov
adc
pop
add
cmp
adc
inc
jl
mov
lods
sub
add
sbb
pop
adc
mov
stc
mov
fistps
aam
enter
cmp
loopne
push
fwait
adcl
inc
arpl
mov
cmp
lock
out
push
adc
xchg
xor
push
jno
sahf
mov
add
mov
xlat
mov
loope
jle
iret
jle
cwtl
mov
xchg
xchg
fmuls
push
movsl
push
addr16
adc
inc
sub
mov
xchg
dec
cmp
cwtl
ret
hlt
jo
xchg
sub
inc
mov
in
lods
mov
dec
sub
cmp
outsl
push
fstp
gs
pop
pop
and
adc
outsb
mov
aad
sbb
inc
mov
pop
pop
push
imul
pop
divl
inc
sbb
sti
clc
movb
inc
repz
idivl
ret
mov
push
pop
loop
dec
inc
idivb
repz
sarb
mov
ds
mov
insb
add
pop
rolb
mov
sub
pushf
insb
pushf
scas
cmp
fldenv
dec
ljmp
fistl
cmp
fdivr
fstps
negl
add
inc
scas
sub
pop
addr16
or
mov
cltd
push
mov
mov
loope
lods
push
pop
mov
pushf
setle
dec
movsl
cmpsl
or
push
rol
cmp
popl
fcmovnu
push
jno
ss
iret
jb
mov
ret
iret
out
adc
mov
fwait
repnz
pusha
sbb
outsb
pop
cmpsl
popa
dec
dec
outsb
adcl
jbe
stos
mov
xor
and
mov
push
sub
mov
out
inc
add
rclb
xchg
ja
roll
clc
inc
jo
inc
aam
mov
nop
stc
push
mov
push
movsl
xchg
sarl
pop
mov
fs
lret
outsb
frstor
lret
idiv
in
xchg
scas
call
inc
jmp
ja
sbb
popl
xor
je
push
adcl
or
enter
xor
repz
pop
jno
push
mov
inc
mov
mov
sub
out
std
nop
stos
insl
ficoms
out
ljmp
in
divl
jb
ljmp
mov
push
xchg
lret
push
adc
jl
mov
xabort
pop
loop
pop
mov
xor
inc
xor
sub
jle
les
sbb
insl
sub
mov
sub
sub
pop
or
push
lock
push
push
daa
dec
jne
jg
mov
xlat
jo
mov
inc
push
cltd
js
sub
out
pop
xorb
mov
dec
xchg
pop
jns
push
lds
mov
or
xchg
push
sub
mov
ret
pop
cmp
xor
xor
push
sbb
std
pop
cmp
jae
adc
gs
cmp
push
mov
mov
xchg
xchg
imul
jae
mov
mov
aad
pop
mov
mov
or
fisubrs
inc
jo
and
pop
lock
sbb
into
and
mov
mul
mov
jne
add
push
ficomps
stos
test
mov
cwtl
xor
popf
mov
or
outsl
cli
and
in
test
sub
adc
or
xor
daa
test
xor
dec
sbb
sti
mov
mov
imul
data16
dec
adc
enter
mov
and
rorb
das
sbb
xlat
outsb
cmp
lcall
imul
or
lds
insl
pop
dec
out
mov
push
andl
jnp
lcall
push
imul
jl
mov
adc
pushf
data16
icebp
lods
mov
cmpsl
stc
scas
add
stos
xchg
and
adc
icebp
add
cwtl
inc
ss
clc
and
and
stos
mov
push
sub
gs
jo
mull
or
adc
and
mov
clc
jne
dec
cltd
jbe
mov
mov
cmp
adc
mov
loope
add
stos
adc
xchg
ss
sbb
int3
add
cmp
lret
aaa
mov
insb
fwait
xor
adc
pop
call
or
lods
pop
sub
xchg
lods
mov
mov
fmul
mov
inc
cmpsb
mov
stos
das
icebp
shl
ds
fidivs
xor
ret
inc
xchg
adc
fcom
movsl
mov
push
pusha
jb
cmp
xor
lret
into
sbb
imul
cld
addb
jno
push
fldenv
sbb
add
rolb
inc
fistl
popa
inc
loop
roll
iret
xor
lcall
xchg
or
loopne
in
sbbl
adc
xor
push
cld
scas
ljmp
repz
mov
sar
dec
mov
je
lahf
loop
fsubl
jns
cmp
clc
cmp
inc
call
imul
stos
mov
loope
in
and
add
pop
xchg
daa
pop
data16
pop
mov
lods
sub
mov
imul
repnz
in
rcll
adcb
sbb
rep
lahf
mov
push
jle
cli
js
aam
lcall
stc
adc
mov
xchg
sbb
xchg
and
test
xor
sbbl
fwait
inc
pop
lret
xchg
push
mov
jge
shlb
mov
aad
mov
hlt
fsts
sti
push
cmp
inc
test
and
cmc
aam
sub
push
pop
hlt
and
sarb
mov
xchg
and
fsts
aaa
push
cwtl
je
clc
pop
sti
rorb
adc
jecxz
sahf
stc
idivl
push
mov
cmp
repz
test
pop
sbb
sub
stc
and
scas
xor
mov
jl
mov
negl
cmp
pop
push
or
pop
xlat
jle
xchg
and
mov
fildl
ret
xor
pop
jp
jno
cmp
add
pop
sti
fsubrl
enter
lds
ljmp
les
ja
inc
into
shll
outsl
push
xor
loop
push
and
lahf
push
mov
mov
sahf
arpl
enter
and
loop
sub
add
mov
adc
dec
into
das
fmulp
lret
sbb
dec
dec
fwait
mov
xor
pop
sbb
adc
in
xor
ffree
ret
or
mov
mov
mov
outsb
ja
incl
dec
js
nop
adc
pushl
rcrl
mov
sbb
test
push
clc
ljmp
xor
mov
insl
push
inc
jle
ljmp
xchg
ljmp
fdivrs
rol
es
mov
cmp
fstl
mov
cmp
and
adc
xor
mov
mov
or
jle
push
sbb
add
cwtl
dec
or
out
pop
dec
sbb
daa
dec
pop
out
lret
pushl
data16
sbb
lods
sbb
push
lods
in
sub
loop
popf
test
fwait
out
inc
and
hlt
cwtl
call
out
icebp
mov
adc
divl
lods
addr16
lcall
pop
in
lret
ss
sti
aas
fsubrl
insb
adc
sahf
out
mov
xor
lea
sub
push
inc
dec
sub
and
shlb
sbb
jne
xchg
jae
push
lods
sarl
std
lock
sbb
insb
dec
nop
ljmp
lret
daa
xor
mov
loope
cmp
push
xchg
push
add
mov
test
lea
jns
bound
push
xor
dec
sub
jp
dec
add
mov
cwtl
lret
scas
repnz
lret
pop
mov
shl
inc
inc
fildl
insl
add
dec
mov
call
cld
loop
cmp
insb
push
mov
xor
inc
xor
jl
ficoml
gs
or
or
lock
pop
daa
sub
jbe
test
sbb
cmp
ret
addl
push
es
add
gs
out
popa
or
div
mov
xchg
push
cmp
cmpsb
aas
das
and
sarb
sub
xor
mov
sbb
loopne
mov
cmp
pop
mov
ljmp
imul
cmc
js
inc
les
adc
mov
dec
fildll
xchg
xor
dec
into
cmpsb
in
dec
frstor
gs
repnz
or
add
xor
push
jl
xchg
or
in
mov
mov
ret
push
subl
out
nop
mov
or
inc
or
mov
rcrl
mov
mov
fidivl
movsb
push
rolb
inc
lea
lods
fidivl
dec
lahf
jb
shlb
cmpsl
inc
add
int
mov
cmp
mov
pop
aaa
sti
or
fidivrs
push
imul
lcall
loop
shl
mov
call
cli
pop
test
add
or
cwtl
xor
inc
rorl
pop
ret
xchg
or
add
ret
push
rclb
and
out
jmp
mov
sub
fidivrs
stos
xchg
dec
into
push
adc
cld
sub
and
gs
xchg
adc
outsl
xchg
jle
movsl
jns
mov
mov
mov
mov
ss
int
cld
je
mov
js
jo
sahf
shrl
fiadds
sub
pop
add
pop
bound
cwtl
and
loope
fstpl
sub
insl
sar
inc
loop
ss
call
mov
pop
and
test
mov
mov
jmp
mov
cs
push
add
mov
rorb
leave
pop
fwait
pop
stos
mov
sbb
icebp
fdivs
cmp
test
out
cs
movsb
ss
arpl
cmp
adc
jmp
test
imul
fisubl
arpl
pop
lahf
insb
mov
repz
mov
lods
and
push
lret
push
lret
jg
out
xchg
and
ljmp
out
pusha
in
and
clc
xchg
sub
pop
pushf
sbb
mov
push
push
xchg
add
nop
lahf
pop
xor
fldenv
daa
dec
fcomps
nop
clc
gs
stos
sub
clc
pop
and
dec
add
xchg
mov
popf
shlb
sub
cltd
daa
xchg
roll
pop
in
pop
enter
movsb
das
push
nop
outsb
les
repz
negl
inc
adc
fwait
inc
sarb
jbe
pop
pusha
in
adc
scas
mov
xchg
adcb
cmp
or
push
sbb
fcmovbe
mov
add
adcb
push
sbb
add
jg
jb
hlt
pop
aaa
pusha
pop
es
xlat
pop
add
aaa
in
repz
xlat
sti
or
adcl
mov
lock
bound
jb
sbbl
jp
xor
orl
mov
xchg
sub
mov
xor
enter
test
mov
stc
dec
fcoml
in
scas
mov
or
mov
div
cmpsl
and
andl
jmp
pop
cmc
adc
mov
jp
sub
jmp
test
mov
loop
pop
inc
mov
add
mov
lahf
stos
shll
inc
sbb
std
lds
scas
and
xchg
rcll
dec
ret
mov
mov
rcrb
outsb
insb
adc
xchg
aas
and
aad
addl
sbb
adc
jecxz
rcll
dec
add
fwait
cmp
nop
mov
jno
int
outsb
stos
pop
dec
shr
sub
mov
sub
outsl
dec
divl
shlb
push
rep
lret
sub
insb
les
popf
xor
push
cmpsl
into
imul
xchg
in
jno
lcall
out
cmp
out
daa
lock
pushf
jbe
xor
pusha
je
cmp
jbe
pop
pop
xor
movzwl
mov
bound
call
adc
cwtl
sub
clc
add
or
mov
test
xchg
aam
and
inc
ficompl
imul
insl
mov
push
sti
jp
cmp
add
insl
adc
inc
cmp
rcrb
xchg
mov
sbb
xchg
pop
mov
push
sbb
out
jo
inc
imul
in
vorps
cmp
mov
sti
lea
or
int
sbb
jp
ss
iret
push
loop
lret
xor
pop
cmp
arpl
in
cmp
lcall
cmpsb
adc
mov
loopne
xor
imul
lahf
scas
adc
push
and
xchg
cmp
dec
or
hlt
jle
movsb
pop
push
pop
xor
dec
and
dec
inc
dec
mov
inc
sbb
movsb
pop
cmp
cmp
push
mov
outsl
rolb
std
fsubrs
push
popa
pop
das
loop
insb
testb
jmp
lcall
loop
push
xor
sarl
scas
mov
bound
fisubl
lret
mov
inc
mov
call
pop
test
pop
inc
fisttps
sub
stc
test
jns
jecxz
lret
xchg
jae
fisttpl
daa
and
cmpsl
insb
sub
mov
mov
mov
mov
fwait
sub
or
leave
jle
mov
or
mov
lret
xchg
or
mov
push
fldt
mov
fisttps
cmp
sub
sub
test
stc
push
into
loopne
pop
lret
leave
jae
lds
adc
pop
sti
mov
sub
aam
cmp
fidivl
fisttps
pop
aaa
addb
jle
cmpsl
aad
mov
xchg
pop
sub
cltd
mov
cli
fwait
xchg
xchg
in
daa
lret
mov
incl
js
insl
cmpsb
hlt
loop
inc
popa
or
arpl
pop
jle
popa
adc
or
sbb
or
mov
push
lds
pop
fstpl
shl
inc
fcoms
add
sbb
pop
mov
adc
xchg
cmp
and
cs
iret
or
lock
das
pop
xor
das
lret
mov
in
and
movlps
xchg
cmc
arpl
inc
mov
mov
push
cltd
xchg
movsl
cmp
sbb
sub
loop
mov
mov
lods
push
lock
pop
jge
xchg
dec
jno
push
lods
mov
xor
xchg
xor
lret
mov
into
inc
imul
outsl
push
adc
ja
inc
leave
jle
cmpsl
jnp
mov
lret
inc
xor
scas
ja
fwait
stc
mov
pop
mov
mov
scas
fists
int
mov
sahf
sub
push
adc
cmp
and
cmpsb
mov
and
and
loopne
mov
xchg
xchg
jg
sahf
mov
repz
addr16
sbb
into
push
jnp
mov
mov
mov
cli
xchg
in
and
jmp
jbe
mov
dec
mov
push
xor
clc
mov
sub
cli
mov
or
lret
fldenv
jecxz
dec
sbb
ficoms
and
hlt
ret
aaa
popl
jg
cli
jno
inc
jmp
inc
push
pop
cld
sbb
cmp
sahf
or
xor
sub
cmp
notl
lea
ficomps
sub
sbb
push
adc
jle
lret
jg
xor
mov
aaa
mov
das
fdivrl
mov
popf
fdivrs
xchg
jg
bound
jb
add
sub
xor
nop
shrl
lahf
dec
dec
pop
cwtl
sub
roll
je
notb
les
xor
pop
out
nop
xor
cmp
pop
scas
aam
clc
lea
and
push
sub
push
pop
push
mov
lods
repnz
adc
stos
lock
ds
sub
mov
dec
xchg
jb
out
cmp
lods
dec
sbb
push
or
rolb
mov
add
pop
repnz
mov
push
push
adc
imul
rcrb
pushl
dec
xor
out
int3
sbb
outsb
xor
loop
jno,pt
mov
inc
and
push
jle
adc
hlt
mov
sub
popf
add
cli
lret
decb
test
mov
movsb
push
in
lret
or
xchg
out
dec
aas
roll
dec
sub
lds
lods
dec
push
loope
repnz
mov
cmp
inc
fisubrl
and
or
xchg
neg
dec
mov
imul
dec
mov
hlt
and
xchg
mov
pushf
je
sbb
inc
pop
jne
push
fisttpll
adc
pop
fnsave
mov
and
jns
mov
adc
ljmp
out
sbb
jns
repz
cwtl
out
jmp
jb
cmp
pop
loopne
sub
mov
std
mov
enter
adc
inc
scas
inc
pop
pusha
and
aad
jbe
shll
sbb
ja
jo
dec
sub
lret
jae
xchg
sbb
fisubs
jp
ret
ljmp
popa
jnp
mov
vpavgw
ret
fcom
call
scas
mov
push
lods
lcall
ret
mov
fisttpl
enter
andl
icebp
xor
jbe
inc
sbb
insl
lret
fiaddl
mov
jecxz
sbb
adc
insb
jnp
mov
pop
out
and
dec
mov
lret
shl
mov
fcmovne
repnz
jle
or
pop
xor
mov
sub
mov
scas
mov
sub
lcall
stos
jo
xor
cmp
push
add
mov
rorb
xor
mulb
filds
or
pop
push
inc
fisubrs
bound
stos
fdivl
mov
ss
mov
movsb
test
lds
or
inc
bound
nop
mov
int
scas
mov
int
mov
inc
lock
insb
lods
cmc
cmc
cmp
test
mov
jg
imul
leave
sahf
or
stos
pusha
mov
in
mov
movsl
fistl
aam
jp
hlt
sbb
ljmp
pop
outsl
sti
cld
inc
insl
mov
and
push
pushf
jae
mov
xor
sarb
cmp
imul
loope
loopne
subl
lods
rclb
fisubrl
cmp
enter
hlt
dec
pop
je
sub
ss
in
cmp
xor
bound
mov
lods
adcb
out
je
fyl2x
cmp
xchg
jle
cmp
xor
sbbl
rcl
pop
sub
andl
sub
mov
scas
adc
push
in
decl
movsl
pop
out
insb
and
dec
sbb
inc
adc
pop
sti
jno
jb
xor
sbb
inc
push
decb
fsts
xchg
adc
mov
push
mov
fsubr
das
out
aam
mov
adc
notb
xchg
jmp
adc
das
push
cmp
dec
add
fistpl
mov
mov
sub
push
ss
jmp
pusha
mov
jno
mov
bnd
aad
xchg
fsub
xlat
mov
sub
sub
sysret
pop
pop
pop
adc
cli
loope
insl
shrl
data16
inc
sahf
add
dec
lret
pop
aad
leave
and
mov
lcall
or
jmp
mov
sahf
mov
mov
lods
out
xor
mov
movsl
adc
mov
rcrb
add
hlt
push
adc
inc
xor
popf
shll
gs
sbb
xor
mov
lret
xor
inc
fbld
inc
add
pop
mov
fsts
jle
xor
mov
in
cmc
dec
xor
mov
mov
aad
roll
mov
sbb
push
fidivl
stc
inc
rcrb
test
mov
mov
or
fsubrl
mov
pop
mov
movsb
test
adc
xchg
push
outsb
rclb
jmp
xchg
mov
ficoml
adc
outsb
mov
jl
cli
aad
add
pop
lret
cmp
adc
sub
ret
cld
in
stos
stos
adc
adc
jmp
mov
xor
sub
push
testl
repnz
sbb
jge
es
in
shr
push
xor
punpckhwd
cmp
fadds
mov
and
icebp
ds
loope
lds
sbb
fistl
sarb
in
jne
cmp
testb
loop
outsl
int3
mov
hlt
sub
mov
cld
int3
cmp
xor
sbb
sbb
xor
rol
adc
out
xor
cmp
mov
or
mov
adc
decl
lcall
movsb
outsb
and
push
out
dec
sbb
repz
pop
and
shlb
jg
ret
jmp
sti
cltd
add
xor
ffree
cmp
adc
pushf
addr16
dec
imul
mov
and
jp
pop
sbb
data16
push
aas
fsubs
push
jg
pusha
cmp
mov
inc
bnd
sbb
cmpsl
mov
ja
sbb
dec
sbb
lret
inc
cmc
ss
in
outsb
cwtl
dec
and
lods
mov
push
xchg
sti
out
rorl
movsb
test
fs
sub
dec
lcall
inc
or
jns
inc
lods
dec
jbe
aas
lods
aaa
test
ds
repnz
repz
jne
pop
jo
or
xor
addl
sbb
data16
stc
sbb
add
sbb
mov
gs
stos
xor
cmp
cs
rcrl
sub
aam
jno
movb
and
push
push
test
je
sub
test
imul
add
popf
mov
push
push
push
mov
rolb
sbb
insl
cmp
mov
fwait
or
sub
push
or
loope
and
mov
push
push
mov
icebp
inc
faddl
and
inc
inc
mov
int
cmp
not
pop
int
pushf
add
or
rcrw
xchg
sub
mov
ss
inc
sbb
das
inc
lds
popf
cmpsb
add
jle
cwtl
inc
xchg
insb
push
adc
dec
or
icebp
lret
aad
mov
push
pop
insl
cmpsb
adc
push
sarb
push
mov
xchg
gs
adc
and
jae
mov
push
loope
aas
fidivs
aad
sahf
mov
jno
cmp
add
pop
sbb
repz
pusha
loop
ja
sarb
mov
cli
ss
inc
add
xor
xchg
jbe
mov
xchg
je
mov
cwtl
test
mov
sahf
adc
inc
xor
notl
adc
arpl
adc
mov
cmpsb
mov
icebp
xor
sub
movsb
ret
fidivl
jmp
stos
decb
dec
or
inc
or
cli
or
mov
nop
hlt
mov
test
mov
jecxz
aam
mov
mov
mov
push
pop
test
or
fdiv
xor
push
cmp
inc
push
aad
stos
lcall
mov
inc
ret
xchg
cli
sub
adc
adc
push
sub
dec
mov
rcrl
sbb
mov
loopne
test
pop
add
and
daa
call
xor
sub
pop
hlt
inc
gs
hlt
cli
sbb
shlb
fs
pop
or
jg
cmp
inc
aad
ficoml
cmove
lahf
cmp
sti
test
das
test
inc
jns
or
push
pop
shrb
jo
or
pop
imul
or
dec
pop
mov
mov
es
lahf
inc
xchg
dec
adcl
jne
mov
push
int
lret
adc
mov
xor
cmp
ss
mov
mov
insb
mov
pop
push
xor
cmp
pop
adc
mov
jae
cmpsl
rcll
pop
insb
test
imul
subl
push
xchg
mov
data16
mov
fld
clc
movsb
inc
shrb
stos
out
push
loop
pop
adc
dec
shlb
cld
sub
icebp
sti
and
xor
jo
iret
push
sub
mov
testb
mov
insl
xchg
push
pop
movb
pop
xlat
popf
cmp
vpshab
mov
out
jo
pushf
test
in
lcall
int3
enter
fnsave
mov
mov
sbb
dec
scas
rol
in
movq
push
in
jecxz
loopne
mov
subl
mov
sar
nop
cld
cmp
mov
push
sti
rorb
sub
test
pop
adc
test
loop
push
fnsave
xlat
mov
jne
int
neg
lret
mov
and
sub
lods
push
push
ds
rcrl
xor
rorl
push
sahf
xchg
mov
subl
aad
lcall
mov
arpl
fisttpll
arpl
mov
jne
scas
inc
dec
in
adc
pusha
push
clc
imul
jmp
iret
cmp
aad
sti
xor
jns
xor
arpl
fadds
lahf
cltd
jge
test
lods
lods
repnz
add
mov
ss
lret
or
jle
add
test
mov
xchg
pop
insl
inc
dec
lods
xchg
jl,pt
stc
or
xchg
out
jge
push
jns
getsec
dec
jne
cmpsb
xchg
fstp
jecxz
jbe
push
mov
xor
cmc
xor
mov
pop
inc
pop
shll
adc
movsl
mov
lcall
jmp
cmp
int3
sub
mov
xchg
addr16
in
push
cltd
das
add
subl
mov
or
mov
gs
cmp
push
sub
repnz
jae
andl
mov
cmp
sub
or
insb
popf
mov
jg
xlat
adcb
jle
stc
fwait
loope
cmp
mov
pop
jp
push
add
dec
aam
or
fsubrl
lea
sbb
or
test
jno
movsb
xchg
cmp
adc
xor
insl
pusha
in
pop
jb
sbb
cs
fcomps
add
in
and
mulb
lock
jg
aam
cwtl
mov
push
int
out
daa
or
arpl
jae
outsl
mov
cmp
inc
insb
popa
mov
ja
jg
shrl
pop
ja
mov
dec
inc
out
inc
mov
pop
imul
test
icebp
loopne
cmp
pop
dec
xor
add
lcall
in
adc
xchg
in
scas
dec
pop
xchg
imul
inc
sbb
and
xchg
mov
adc
pushf
popf
loope
fs
xor
out
stc
pop
push
movsb
sbb
mov
rcll
nop
xchg
nop
outsl
sar
loopne
fisubrs
fcoms
loope
das
movsb
insl
add
lods
repz
cltd
ja
sub
mov
fwait
imul
fwait
inc
mov
js
sub
push
inc
dec
push
insl
fstp
add
dec
sti
js
sahf
lahf
rcll
mov
or
mov
xchg
adc
lret
mov
insb
sbb
aas
mov
negl
mov
mov
add
shrb
push
fistpl
int3
and
mov
xchg
fwait
hlt
loope
movsb
pop
adc
imul
sub
pop
rcrb
push
add
mov
out
fadds
jle
xchg
rclb
lock
push
lahf
lahf
movl
sbb
mov
shll
and
sbb
aad
sti
daa
pop
mov
xor
jge
or
or
mov
cmp
push
or
sub
or
andl
call
out
push
shr
out
jl
mov
aad
jg
dec
rclb
or
ja
ss
lods
inc
pop
stc
or
sub
or
cmp
jmp
lds
int
in
mov
sbb
pop
cmp
es
pop
mov
pop
rcr
inc
pushf
adc
div
or
aad
cmpsb
jle
insl
xchg
pushf
shlb
push
scas
dec
ss
xchg
hlt
mov
fs
ja
pop
les
pop
xchg
adc
or
int
push
int3
dec
sub
ret
insl
inc
and
icebp
and
movsl
in
mov
mov
mov
ss
subb
dec
push
outsl
fnstsw
sub
inc
or
mov
xchg
fldenv
sbb
mov
xchg
scas
cmp
imul
sub
arpl
and
repnz
subb
mov
pop
or
adc
or
xor
into
insb
sahf
mov
gs
int3
pop
es
fsts
mov
inc
push
test
jbe
xchg
cld
cmp
inc
ja
mov
push
and
aaa
loop
out
aam
sbb
imul
scas
vcvtpd2ps
call
scas
gs
cmp
or
pop
mov
or
popa
xchg
mov
bound
outsb
mov
in
inc
dec
inc
incb
fistl
xchg
fldenv
pop
cltd
cmp
cmp
aas
lcall
data16
mov
bound
shr
jne
inc
xor
daa
jecxz
mov
inc
push
add
jg
popa
dec
pop
xchg
mov
inc
mov
pop
mov
mulb
lods
jnp
dec
ret
sub
xor
fs
gs
jno
repz
mov
push
or
test
imul
pop
leave
xchg
out
push
imul
inc
testb
pusha
or
mov
fnsave
hlt
loopne
ret
add
jbe
push
repnz
movsb
lea
in
push
sub
icebp
xor
jnp
lods
fists
jno
ds
sahf
pop
jns
clc
dec
ret
adc
or
mov
je
add
jae
pop
sbb
dec
xor
test
mov
push
cmpsb
test
cmp
dec
mov
call
adc
mov
out
xor
push
lahf
pusha
pop
sbb
adc
push
pop
lock
or
pusha
std
lret
hlt
in
adc
jns
mov
pmulhw
adc
xor
pop
addb
lahf
mov
mov
mov
imul
sar
mov
repz
bound
jo
sbb
sahf
adc
mov
sbbl
rcrb
pop
push
pop
push
xchg
add
jne
cmpsb
mov
xor
movsb
fistpl
jno
jmp
xor
je
add
call
mov
adc
jne
scas
sub
and
push
test
shrl
sti
pop
dec
mov
popa
pusha
mov
stc
xchg
das
addb
icebp
stc
loop
ss
lds
adc
cmpsl
add
mov
iret
fnstcw
jge
aad
repnz
test
insb
jge
imul
js
and
cmpsl
adc
cmpsb
xor
outsb
inc
xchg
sbb
dec
outsl
mov
out
sub
pop
mov
fcmovbe
outsl
pop
mov
mov
fs
addr16
sbb
pop
shrl
daa
lock
arpl
test
movsb
cs
aas
sub
push
mov
mov
scas
push
iret
cmpsb
sub
push
loopne
pop
pushf
xchg
jae
lods
es
sub
adc
loop
inc
push
out
adc
inc
rorl
aad
mov
and
mov
push
or
sbb
test
xchg
scas
pop
mov
imul
xor
leave
fdiv
data16
ret
dec
inc
mov
push
mov
mov
mov
push
movntps
popa
scas
orl
pop
test
pop
pop
stos
add
dec
arpl
loopne
popf
xchg
xor
mov
sub
imull
in
jl
rcrb
dec
mov
xchg
mov
or
int3
imul
scas
enter
jb
in
sbbb
adc
push
pop
pop
mov
push
push
sti
sarb
shrl
lret
cmp
inc
xchg
scas
popa
add
jno
push
cmpsl
mov
lds
bound
mov
mov
dec
int3
enter
mov
stc
movsl
test
in
xor
cmpsb
or
imul
fs
dec
inc
dec
jp
mov
cmpsl
xchg
filds
out
in
add
jmp
hlt
push
or
out
dec
mov
jb
lods
lahf
dec
jo
lret
scas
mov
xchg
xor
and
cltd
mov
or
push
sbb
push
jo
adc
ds
or
pop
mov
jnp
add
sub
shl
aad
pop
sub
sahf
and
or
cmc
inc
xchg
mov
add
das
insl
xchg
loop
and
xor
xchg
in
cmp
pop
fildl
decl
sti
lret
lock
jnp
ret
add
testb
scas
xor
out
push
sbb
xchg
jmp
or
adc
fcomp
inc
pop
sbb
js
pusha
scas
movsb
inc
mov
add
jno
or
out
fisubrl
cltd
daa
in
jmp
ret
jns
add
mov
hlt
dec
or
fidivrs
roll
mov
xor
mov
sub
test
xchg
mov
mov
shrl
jbe
fdivr
dec
decl
adc
push
mov
test
adc
mov
cmp
int3
push
mov
jnp
int3
push
jne
mov
pop
fnstcw
arpl
js
out
add
or
lcall
stos
das
push
negl
mov
xchg
jnp
fisttps
cmp
inc
or
sbb
stos
hlt
dec
push
sarb
lret
and
xchg
inc
lahf
xchg
test
mov
push
push
push
mov
mov
lods
add
call
and
mov
ljmp
and
mov
inc
sahf
mov
xor
mov
int
outsb
xlat
xor
out
add
hlt
mov
enter
leave
mov
repz
push
in
jmp
inc
insb
das
scas
hlt
lret
sub
fidivs
cmc
into
xchg
sbb
mov
lea
push
cmp
jmp
out
icebp
pop
int
push
std
aaa
cwtl
pop
lret
jae
fstpt
movsb
jg
scas
stos
adc
xor
or
ljmp
andb
pop
icebp
int3
jbe
add
xchg
ja
dec
pop
incl
push
dec
scas
jnp
xchg
test
enter
aas
fstps
inc
jmp
decl
cmpsb
mov
jbe
inc
subl
rcrl
test
fwait
sbb
add
in
mov
cld
mov
sti
or
aam
es
cmp
lods
dec
dec
imul
mov
sahf
mov
push
jle
movsl
jns
popa
jns
cmp
iret
dec
and
sbb
cwtl
inc
fs
outsl
repz
dec
add
inc
nop
mov
mov
mov
in
jecxz
cmpsl
inc
lea
int
ljmp
xorl
shrl
imul
popf
lcall
sbb
mov
in
lahf
inc
ja
rolb
stc
xchg
cmp
fisttpll
or
hlt
out
ret
enter
arpl
bound
mov
pop
pushl
pop
ljmp
adc
cmp
jmp
jns,pt
cmp
insl
cmp
add
aaa
jp
lahf
and
shlb
push
ljmp
pop
shl
in
pop
jg
push
pop
xchg
jmp
xchg
pop
add
inc
add
ret
cmp
push
cmp
add
fnsave
pop
push
das
xchg
sub
xchg
sti
mov
push
movsb
jmp
bound
lods
and
fwait
enter
fwait
mov
sub
pop
push
mov
in
mov
outsb
ja
or
fisttpll
out
testb
sub
cmp
in
sbb
rcll
nop
mov
add
pop
mov
inc
mov
inc
dec
pop
shrl
icebp
aam
cltd
rorb
mov
icebp
insl
mov
mov
mov
pushf
add
loopne
and
sub
inc
add
sti
loopne
lds
jne
std
inc
jae
pushf
inc
popf
and
add
mov
testl
push
insl
or
mov
js
add
mov
mov
xor
addr16
test
jne
push
call
test
aaa
int3
les
mov
lret
mov
test
lods
stc
stc
xorl
mov
and
mov
clc
sbb
cmp
jb
xchg
add
lahf
fimuls
jl
rcrb
mov
pop
sbb
outsl
inc
std
fdivrs
xor
cmp
jo
sub
outsl
dec
cltd
mov
push
or
adc
inc
jp
cmp
mov
xor
movsb
xchg
cmp
jge
xor
addr16
xchg
xchg
and
mov
cmp
aam
insl
xchg
xchg
push
aad
sarb
xchg
fwait
push
sub
xlat
les
push
imul
sti
jns
lahf
pushf
add
sub
cmp
jge
adc
scas
jo
lods
sbb
mov
cs
mov
mov
out
or
int
ds
xchg
xchg
andb
stos
sub
pop
aad
mov
iret
cmpsb
mov
ret
stos
or
add
popa
call
push
movsl
call
fldenv
mov
mov
test
mov
push
imul
push
inc
xchg
xchg
cwtl
int
popa
xchg
jno
inc
mov
xor
mov
xchg
mov
adc
rol
subb
pop
in
or
cs
push
icebp
shr
out
aam
pop
imulb
xchg
push
or
mov
xchg
out
mov
sbb
and
mov
or
mov
or
aaa
int
mov
cmp
sbb
push
test
or
test
mov
sbb
inc
out
dec
mov
lods
cmp
xchg
xchg
pop
mov
push
ljmp
mov
int3
inc
cmp
sarb
cmp
xorb
mov
xchg
cwtl
jae
outsl
adc
add
popf
jp
inc
int3
pop
push
add
clc
cli
incb
push
insb
mov
mov
fsubs
or
jb
push
adc
mov
mov
outsl
jecxz
inc
pop
or
lret
jecxz
mov
out
into
mov
addr16
push
jno
int3
dec
std
cmp
ficomps
jb
and
fdivp
loope
pop
pusha
leave
scas
pop
arpl
push
popf
test
pop
pop
add
xchg
shld
ss
xlat
mov
addl
nop
mov
inc
stc
and
adc
pop
ljmp
in
add
mov
xor
movsb
std
pop
dec
mov
std
adc
jecxz
adc
mov
push
hlt
mov
jg
lcall
push
popa
shll
inc
xlat
add
int
dec
les
add
stos
mov
rcrl
pop
fwait
push
add
jb
pop
movsl
adc
adc
jae
push
cmpsl
loope
icebp
das
sbb
insb
push
dec
mov
je
popa
mov
lods
push
mov
inc
pusha
cmp
lahf
cs
addr16
lcall
mov
pop
dec
test
sub
xchg
jnp
push
daa
jp
fimull
add
xchg
pop
insb
push
out
cwtl
aam
int
dec
movsl
mov
sahf
or
pop
jecxz
test
dec
cmp
add
cltd
loop
movsl
or
repz
push
mov
xchg
shl
add
mov
outsl
cmpsl
insl
cmovl
test
stos
cli
mov
enter
hlt
pop
mov
loopne
sti
pop
mov
and
sbb
cmp
fsubp
push
cmpsb
sub
jmp
sub
add
outsl
mov
mov
mov
push
hlt
mov
pop
xchg
pop
pop
nop
in
test
mov
in
dec
movsl
dec
inc
cwtl
push
push
adc
insb
mov
in
stos
std
mov
ja
outsb
fimull
mov
mov
into
pushf
loope
cmp
xor
adc
lods
lods
addl
dec
divl
pop
push
enter
push
xlat
inc
loop
mov
cli
xchg
lock
xchg
seto
xchg
sbbb
jle
scas
in
push
gs
call
fldl
insb
jnp
dec
sub
adc
cmc
idivl
gs
push
dec
out
pop
xor
mov
mov
bound
inc
arpl
add
pop
xor
xchg
out
lock
xor
jno
fnstsw
popa
xchg
and
jge
lret
add
adc
fwait
push
jne
adc
or
dec
clc
inc
rolb
clc
and
ja
les
and
es
pop
and
xor
push
jge
xor
dec
loopne
pop
adc
mov
out
dec
pop
cmpsl
jg
lea
lods
pusha
push
mov
rcrb
in
push
jbe
aam
lcall
inc
mov
test
mov
pop
fucomi
js
mov
sub
jnp
mov
mov
mov
mov
mov
imul
jle
movsb
daa
std
mov
mov
pop
ljmp
ja
pop
jl
xchg
rolb
std
mov
in
sbb
in
or
pushf
stos
and
xor
insl
loop
out
in
clc
add
adc
iret
loopne
les
pop
dec
xchg
mov
cmp
cli
hlt
fprem1
lds
dec
int3
jne
in
push
lret
mov
imul
xchg
sbb
scas
xchg
in
shrb
push
sti
cmp
out
fimull
jno
sub
int3
push
add
sub
clc
jb
xchg
mov
xchg
dec
cmc
push
sarl
and
inc
push
nop
fidivrs
jle
xchg
out
ljmp
pop
rclb
push
mov
mov
dec
aas
push
or
xchg
mov
arpl
loopne
mov
sbb
in
js
sbb
in
jmp
mov
stc
cltd
push
add
ss
push
pop
out
dec
nop
notl
or
pop
sub
jp
and
scas
pop
cltd
shlb
pop
cmp
xchg
mov
xchg
xchg
in
xor
sbb
mov
loope
lret
push
xchg
and
clc
push
xorb
jecxz
or
popa
sub
movsb
insl
cmp
pop
push
sahf
fisttpll
sti
sub
cmp
ss
sub
cmp
enter
mov
aam
or
push
dec
int3
adc
popf
cmp
xlat
xchg
andl
cwtl
sub
pop
pop
mov
pop
daa
xchg
imul
xor
lods
inc
faddl
inc
aaa
out
adc
inc
lahf
out
and
xchg
push
or
popa
pop
xchg
scas
lret
test
inc
mov
mov
mov
dec
mov
pop
xchg
dec
fsts
sar
movsb
dec
cmp
mov
jmp
movsb
stos
shll
mov
filds
jns
xchg
dec
cmp
cwtl
sub
push
loopne
and
jecxz
or
arpl
jp
dec
dec
adc
lods
xor
insb
push
das
dec
jecxz
mov
popa
repnz
cmp
movsb
aaa
icebp
jae
fcmove
and
or
adc
xchg
sub
pop
mov
addr16
jle
jl
push
adc
mov
rcr
jle
pusha
xor
adc
aad
aaa
jno
lock
jbe
cs
imul
test
out
and
push
sub
and
lock
and
push
and
shlw
mov
jo
pop
mov
enter
lds
lods
dec
mov
test
push
push
js
lcall
rep
cli
add
out
lds
loopne
lahf
and
popa
inc
ljmp
add
je
into
cld
adc
dec
jnp
jl
hlt
test
jmp
stos
jl
gs
inc
out
add
dec
xchg
bswap
sub
scas
subb
jmp
cwtl
mov
aad
inc
add
sbb
xor
push
mov
or
add
xor
mov
sbb
lret
pop
je
testl
fsubl
adc
xlat
cmp
scas
fcompl
fidivrs
and
push
out
movsb
fistps
cltd
cmp
gs
in
pushf
mov
leave
mov
dec
add
pop
lods
xchg
pop
jge
jp
jecxz
xor
jl
clc
mov
xchg
cmp
fisubrl
pop
aas
gs
jmp
movsl
sbb
mov
out
or
into
xor
mov
inc
jns
xchg
in
lret
fldt
ljmpw
movsl
adc
loope
mov
add
xor
cmp
xor
in
sub
sub
add
pusha
jp
xchg
or
lea
out
enter
sbb
adc
inc
or
inc
sti
xor
insl
or
ror
jmp
inc
cmp
adc
repz
or
pop
jbe
mov
push
mov
fildll
movsl
cwtl
jbe
stos
ljmp
popa
dec
pop
fisubl
fldenv
push
push
addr16
jno
sub
mov
adcb
mov
sub
pop
pop
cmp
ss
mov
leave
adcl
movsl
and
adc
call
emms
cs
loop
cmp
fmuls
sbb
js
and
test
clc
xchg
mov
push
xchg
jl
std
int3
lret
es
movsbl
outsb
mov
and
cltd
negl
addl
cld
insb
xchg
inc
adc
pop
in
mov
repz
jae
mov
inc
cmp
or
imul
ja
cmp
in
stos
dec
frstor
mov
in
push
outsl
jl
xchg
mov
insb
sbb
orl
and
lock
cmp
leave
out
cmp
xchg
jb
jo
xchg
and
push
mov
dec
push
sbb
jmp
dec
add
pop
sbbl
cmp
sbb
das
enter
xchg
add
push
or
aaa
xchg
jb
outsb
xor
in
jge
sahf
push
out
pop
and
movl
sbb
mov
jns
lock
fsubrs
mov
jnp
add
scas
scas
outsl
xchg
gs
and
mov
imul
add
mov
jle
push
leave
sbbl
stos
xchg
or
xor
repnz
imul
cwtl
repz
jmp
ret
loop
jle
in
arpl
outsl
stc
inc
lret
adc
mov
mov
adc
es
cmp
fimull
add
leave
rcll
enter
orb
jge
and
test
enter
mov
lret
aad
dec
dec
jge
xchg
movsb
in
in
xchg
lods
mov
mov
xchg
aam
push
mov
ficompl
icebp
adc
inc
outsb
cwtl
cmpsl
xchg
xchg
and
mov
mov
cmp
lret
lds
into
cmc
aam
daa
cmp
nop
dec
xor
cs
rcrb
cmc
xchg
xor
mov
push
sub
fldenv
int
out
xor
inc
fs
push
mov
je
inc
outsb
loop
and
mov
fiaddl
xor
popf
das
stos
test
jp
les
push
sbb
push
subl
shl
jg
in
pop
jmp
pop
push
or
cld
cmc
lea
or
jge
rolb
shlb
aam
imulb
mov
neg
inc
jne
jmp
jecxz
inc
add
add
cmp
or
jns
sub
repnz
scas
xor
andb
add
and
lcall
pop
dec
imul
dec
sarl
mov
mov
pop
les
mov
mov
sub
mov
pop
xchg
rclb
cmp
ljmp
push
not
and
xchg
lds
sbb
lods
or
sbb
adc
xchg
jno
xchg
xchg
sub
int
daa
mov
outsl
scas
int3
das
add
xor
inc
out
push
xor
jecxz
test
in
in
hlt
xchg
movb
jns
lock
ficompl
inc
dec
cmp
and
in
push
dec
jl
sub
rcl
jge
cmp
mov
in
mov
std
repz
xchg
sahf
mov
test
fisttpll
mov
cmp
mov
pop
lcall
inc
icebp
aas
inc
push
cmc
rcr
test
adc
jecxz
shr
test
adcl
enter
mulb
jns
fisubs
aam
push
cltd
shl
dec
or
test
push
mov
icebp
or
daa
xchg
pop
jnp
ljmp
mov
inc
mov
xor
lahf
fsubrl
add
xor
jp
wbinvd
mov
inc
cmp
inc
push
int
sub
xchg
adc
mov
fwait
jecxz
pop
or
or
mov
mov
adc
notb
push
stc
xor
push
push
aad
pop
cli
lock
xchg
outsb
leave
cmp
pop
mov
enter
inc
jmp
add
out
inc
insb
add
adc
xchg
out
scas
imul
fwait
sub
flds
imull
dec
cli
mov
test
popf
push
lea
aaa
jg
inc
call
shll
into
pop
subl
push
mov
dec
shrb
inc
pop
lret
out
xchg
test
fsubp
pushf
and
xchg
dec
in
jnp
sti
divb
cmp
in
out
add
jo
or
push
sbb
mov
out
sub
std
sbb
mov
rorb
sub
shrl
mov
sub
mov
aad
mov
bound
or
outsl
mov
jnp
enter
loopne
daa
and
and
cmpsl
and
sarb
imul
out
sub
xchg
test
iret
add
mov
lds
arpl
xor
pop
in
gs
stos
cltd
adc
dec
scas
faddl
hlt
xor
js
push
in
push
and
mov
pop
cld
out
push
and
mov
mov
jae
cli
dec
push
xchg
adc
leave
daa
add
std
adc
out
in
xchg
imul
in
xor
mov
or
gs
jl
cmc
push
test
pop
lea
pop
jmp
or
cmp
fsubrl
ljmp
push
mov
cmpsb
daa
lea
and
test
loop
clc
xchg
push
nop
cld
pop
adc
add
fimuls
adc
int3
sub
addr16
jne
sub
push
cmpsb
les
adc
sub
push
pop
fdivr
sahf
into
jnp
jmp
and
ds
test
in
lcall
popl
sbb
add
pushf
in
into
mov
or
cmp
mov
hlt
adc
insl
out
adc
fsts
jb
loopne
xor
cmp
ret
pop
and
andb
or
fldt
dec
mov
xlat
leave
push
jbe
lock
jmp
cltd
mov
andl
xchg
ficoms
sbb
dec
adc
sarl
xchg
nop
enter
imul
mov
push
test
cmp
loop
cwtl
xchg
inc
cli
ret
inc
pop
scas
repz
mov
cmp
outsb
or
mov
inc
mov
sti
mov
fists
xchg
sbb
das
dec
and
jo
adc
sbb
mov
lcall
mov
les
xchg
icebp
fcomip
xor
int
inc
test
cltd
ret
sbb
in
jne
jne
orb
xor
dec
push
rcrl
roll
sub
pop
sbb
pop
sub
sub
in
jnp
cmp
sbb
out
data16
and
cltd
or
sub
and
dec
stc
adc
je
sbb
cmp
mov
xor
push
mov
adc
sub
addr16
testl
inc
and
mov
xor
mov
std
ret
jmp
iret
push
adc
jne
fcompl
push
daa
and
scas
cwtl
int
mov
fnsave
popa
mov
inc
inc
cmp
cld
sti
outsl
in
xor
sahf
fmuls
push
xchg
lods
fistl
or
mov
in
roll
pusha
clc
mov
repz
sbb
mov
inc
lahf
or
lret
clc
mov
lock
jae
adc
mov
pop
add
push
popf
icebp
aaa
add
mov
cmp
push
jg
pop
sbb
imul
scas
int
mov
adc
cmp
jmp
pusha
shrl
test
sbb
cs
push
test
test
inc
sahf
add
pop
lds
inc
insl
gs
inc
mov
add
xor
inc
cmp
cs
mov
test
pop
xchg
call
sub
push
pop
int
in
mov
lcall
lret
inc
or
cmp
mov
mov
pop
adc
aas
xor
push
mov
repz
jbe
dec
loope
xchg
or
mov
mov
xor
dec
mov
shrl
fwait
arpl
add
ss
cwtl
cmc
repz
and
pop
ret
mov
imul
insl
int
pop
mov
add
test
cmpsb
clc
pop
add
pop
pushl
adc
push
xchg
xchg
outsb
cmp
xchg
or
mov
jecxz
inc
fidivrs
leave
dec
jbe
test
mov
cmp
push
es
pop
icebp
pop
push
mov
sbb
add
movsl
aad
mov
pop
cmc
cwtl
dec
in
repz
fbstp
movsb
inc
rcll
std
testb
inc
enter
iret
mov
adc
and
cld
movsb
xlat
lods
repz
adc
cmp
test
in
adc
std
ss
mov
pop
jo
cmc
insb
ret
mov
or
nop
or
pusha
xor
ljmp
in
sar
jns
dec
ret
xor
fstps
and
imul
daa
imull
dec
cwtl
add
mov
xchg
popa
add
andb
push
mov
enter
lea
imul
add
mov
fldt
mov
stos
adc
push
popa
xchg
push
int3
and
mov
mov
ss
push
cmp
call
pop
sbb
inc
xchg
push
iret
fsubl
sub
stos
push
insl
adc
ss
add
ds
addr16
sbb
jp
test
or
icebp
sbb
xor
push
push
aad
outsl
movl
test
or
jo
bound
adc
jg
sbb
push
sti
jo
clc
outsb
pop
pop
push
movsl
ret
lret
inc
mov
inc
push
adc
pop
jns
in
inc
das
imul
mov
mov
inc
xor
andl
push
repz
mov
loop
mov
cmp
xchg
popf
repz
pop
dec
inc
fwait
je
sbbl
and
jnp
jle
jo
sbb
cltd
xchg
fistl
shl
scas
inc
pusha
mov
adc
dec
xchg
mov
mov
rcll
fiaddl
inc
call
xchg
andb
pop
stos
je
xchg
or
push
in
pop
mov
mov
sbb
lahf
push
sub
fldenv
mov
sub
notl
jbe
int
test
pop
cwtl
sub
jb
dec
das
mov
hlt
out
sbb
lock
ljmp
popf
mov
cld
inc
fs
std
mov
jne
adc
mov
adc
pop
adc
fsubr
sbb
xchg
out
mov
inc
add
inc
and
movsb
xchg
push
jmp
sahf
sub
xorb
sbb
sub
mov
mov
inc
int3
lcall
jbe
fidivrl
push
popa
shrl
addr16
lret
scas
sbb
add
ret
or
aaa
rorb
push
mov
xchg
lock
sub
cmp
jl
sub
das
rorl
push
test
hlt
and
push
sub
or
push
das
into
jecxz
sbb
mov
repnz
aam
cmp
mov
pushf
inc
ret
push
ror
mov
cmp
js
pop
popa
dec
fs
jmp
mov
xchg
or
pop
fldenv
mov
mov
cmp
sub
mov
jecxz
lods
mov
xlat
ss
std
mov
js
mov
or
out
mov
ss
rolb
adc
cltd
cmp
in
roll
sahf
pop
add
jnp
inc
adc
cld
fcomip
sbb
rol
stc
inc
mov
jl
mov
mov
jmp
mov
test
xchg
mov
sub
pop
scas
xchg
jge
xchg
test
out
xor
pop
sbb
sbb
lods
aas
xchg
xchg
subl
xchg
push
insb
ds
cwtl
sub
mov
inc
pop
imul
maskmovq
xchg
sbb
loopne
jno
mov
and
decb
push
ljmp
xchg
mov
es
cmp
imul
stos
flds
xchg
dec
ljmp
and
sub
movsb
push
lret
xchg
aaa
adc
mov
lds
ss
add
or
jb
push
out
xor
in
sti
cs
lock
in
adc
xchg
fmull
loop
sti
les
xchg
jb
in
inc
xchg
pop
rorl
adc
mov
cli
in
je
sub
stc
dec
xor
push
pop
inc
or
iret
pop
xor
cmp
inc
add
push
dec
sti
xchg
mov
insb
inc
jo
jle
popa
adc
inc
test
mov
repnz
test
cwtl
mov
sbb
xlat
jl
fwait
sbb
push
mov
mov
xchg
xor
jns
in
stos
test
mov
sbbb
mov
push
adc
sub
push
test
sub
aam
xchg
adc
sti
movsl
in
aaa
addr16
out
add
cltd
mov
sbb
int
addb
shll
adc
push
adc
sub
repz
fldenv
mov
push
outsl
jae
and
sbb
sbb
cmp
inc
push
inc
loope
cwtl
sub
popa
loope
icebp
cmp
mov
mov
mov
adc
push
lods
cmp
pop
imul
gs
add
xlat
addl
sub
push
nopl
jmp
punpckhwd
mov
js
test
sbb
xchg
fbstp
pop
jbe
adc
xor
jb
jg
repz
push
sub
clc
cld
cmp
ja
add
jns
jmp
outsb
sarl
add
jle
fcmove
cmp
xchg
rcll
fcmovbe
imul
or
mov
scas
les
jb
out
lods
popf
inc
lret
jbe
loop
xchg
cmp
lahf
mov
jae
xchg
shlb
cmp
daa
out
cld
or
sbb
arpl
lret
gs
test
pop
mov
push
inc
sub
cmp
adc
pop
jns
mov
ret
fists
dec
int
jge
adc
pop
outsb
out
fadds
add
add
insl
sbb
cmp
mov
push
dec
jmp
cmp
test
pop
inc
movsb
cmp
mov
in
ljmp
sbb
popa
addr16
pop
push
hlt
mov
sub
xor
xor
xor
sar
daa
jnp
inc
mov
adc
pop
jno
sahf
jb
cmp
dec
imul
scas
sbb
loop
sub
fcoml
bound
jle
sub
add
cltd
mov
jo
test
xor
sbb
fisttpll
jnp
sub
and
and
iret
movsl
negl
mov
sub
cld
dec
mov
lock
mov
push
push
movsb
inc
test
mov
subb
or
iret
adc
cs
mov
repnz
and
ja
sbb
test
push
fadds
dec
mov
adc
inc
mov
mov
push
pop
sbb
fxch
xor
adc
lea
mov
aam
pop
jl
mull
inc
std
push
jg
jb
lret
pusha
out
in
test
ret
push
hlt
gs
lods
pop
das
icebp
push
push
push
fld
shll
cmc
aam
test
inc
push
ljmp
rorb
fists
clc
pop
sub
popa
aaa
mov
sbb
test
fmul
pop
mov
out
sbb
sbb
or
or
or
inc
jne
mov
repz
xor
inc
xchg
jl
sub
fcoms
imul
push
loopne
push
xchg
inc
cmp
or
mov
test
inc
jmp
nopl
mov
stos
sbb
jne
jge
jnp
jb
sub
sub
mov
adc
imul
add
sub
add
scas
xchg
out
and
pop
jne
fiaddl
pop
xorl
mov
and
fisttps
mov
js
mov
inc
aad
xchg
test
mov
out
push
or
lret
icebp
jnp
mov
mov
inc
out
ljmp
jbe
test
gs
push
and
xchg
clc
add
xor
cld
shlb
jns
lods
test
mov
sti
in
push
idivb
mov
jmp
or
add
mov
push
shrl
faddl
pop
inc
in
fnstcw
mov
fdivrs
push
sub
push
mov
test
lahf
mov
gs
xor
xchg
jns
test
out
mov
jnp
inc
sbb
sar
push
dec
add
cmp
adcl
mov
test
ret
fadds
shr
dec
es
frstor
into
xchg
pop
xchg
push
mov
stos
lock
movsb
shrb
push
or
enter
cmp
call
shrb
mov
jo
xchg
cltd
sub
mov
inc
jg
gs
jb
xor
xor
mov
push
in
pop
inc
sub
jp
scas
sbbl
ds
enter
pop
lret
xchg
andb
lret
jl
iret
cmc
call
fistpl
mov
mov
cmp
add
shrb
loope
leave
or
insl
adc
cli
or
mov
push
cmp
mov
xor
insb
test
jnp
xchg
adc
cmc
ja
dec
dec
mov
lcall
in
outsb
push
push
lods
dec
jl
mov
or
jne
mov
sub
pop
mov
push
ja
push
cwtl
or
mov
xchg
mov
adc
sbb
lods
push
add
arpl
jo
mov
hlt
xchg
lahf
addr16
xor
test
roll
cs
dec
stos
lahf
popf
push
int3
mov
mov
das
xchg
push
xor
aaa
dec
cli
cmp
je
jle
in
test
mov
data16
loop
sub
or
inc
out
test
dec
dec
or
mov
inc
das
sbb
mov
jle
sarb
lock
int
jae
xor
insl
mov
mov
lcall
lods
das
lds
inc
mov
fnstsw
in
mov
dec
aad
inc
push
sbb
add
mov
xchg
inc
xchg
ret
and
cld
aam
je
and
fdivrs
cltd
mov
in
pop
das
sub
gs
test
pop
jb
scas
lahf
lahf
adc
xchg
outsb
lahf
sub
bound
rolb
ljmp
ja
popa
aam
sti
stc
xor
xorb
sub
js
cwtl
fnstenv
dec
xchg
ret
mov
sbb
pusha
in
fwait
push
add
push
je
add
in
cwtl
lods
xor
movsl
adc
or
xchg
push
fs
sahf
fwait
stc
popf
push
lcall
scas
mov
sub
loop
test
cmp
xchg
pop
xor
xchg
bnd
push
loop
cmp
rolb
mov
inc
cmp
dec
and
test
xor
out
gs
inc
lds
push
fs
or
repz
jg
orl
in
in
add
sarb
jnp
outsl
inc
inc
mov
stc
push
xchg
testb
ret
mov
xor
clc
addr16
ror
push
into
push
xchg
adc
cmpsb
pop
ficompl
arpl
fnstcw
adc
movsb
or
mov
jae
popa
lods
add
xor
loope
test
popa
cmp
not
add
cmp
hlt
sub
insb
cmp
mov
popa
xchg
idiv
dec
popf
jno
pop
out
lret
sbb
xor
lret
dec
rol
dec
or
push
xchg
push
bsr
xchg
insl
xchg
bound
cmp
ljmp
adc
cli
jl
test
insb
jmp
inc
lock
fnstsw
pop
add
iret
loop
mov
test
push
sbb
mov
call
fwait
or
xor
lock
pop
fistl
hlt
push
roll
mov
mov
movsl
lret
fucomip
and
shll
inc
cmc
pop
stos
push
jmp
sahf
adc
inc
mov
sbb
mov
cmp
jmp
xor
ja
mov
nop
xchg
sub
sbb
mov
lahf
ljmp
insl
ret
fs
out
cld
test
inc
mov
push
outsl
sub
sub
fcmovne
insb
ror
sub
inc
shlb
mov
in
sub
mov
stos
xchg
lcall
iret
aad
out
movsb
sbb
leave
insb
movsl
or
push
out
repnz
insl
data16
call
jmp
fisubrl
in
cld
push
into
jle
push
mov
out
aam
int
mov
sub
xor
loopne
add
xchg
jp
xor
dec
push
sbbb
mov
scas
and
out
or
sub
cmp
xchg
out
in
decl
jge
imul
nopl
rorb
sarl
mov
pop
or
loop
pop
sub
jns
mov
in
iret
jp
rorb
mov
sbbl
adc
cmpsl
shl
adc
mov
inc
pop
stc
add
call
xor
xchg
pop
lret
orb
cmp
or
aam
mov
imul
sbb
cld
inc
jae
std
mov
in
int
dec
xor
in
sub
sub
jl
add
add
js
fiaddl
aas
mov
dec
dec
fcoml
dec
inc
pop
xchg
daa
mov
dec
mov
addb
pop
scas
sbb
or
xchg
call
cs
sub
adc
movsl
xchg
hlt
pushf
scas
or
sbb
clc
aaa
es
ja
inc
pop
daa
pusha
xchg
imul
mov
or
inc
cwtl
in
inc
das
mov
pop
mov
pusha
lock
inc
xor
xchg
mov
lds
es
adc
aas
loop
icebp
stc
dec
arpl
test
push
inc
test
pop
sub
cmp
fwait
jg
sbb
dec
out
in
add
out
adc
xchg
mov
ficoml
mov
pushl
cld
iret
xor
popl
jns
ja
xchg
cmp
adc
popa
xchg
js
mov
fisubrs
inc
les
lock
test
rorl
negb
cmc
mov
movsl
cld
ret
or
fisubs
xor
add
icebp
mov
adc
inc
and
test
xchg
xchg
mov
aas
lock
negb
out
ret
and
xor
mov
fwait
sbb
mov
push
cwtl
leave
and
xor
mov
cmp
inc
mov
xor
imul
pop
adc
pop
frstor
adc
icebp
mov
jno
xchg
andb
and
mov
jge
dec
cmp
inc
adc
outsl
int3
dec
stc
aas
aam
mov
push
and
je
sarb
cwtl
mov
lea
test
mov
sbb
test
cld
sbb
nop
sub
dec
movsl
movsb
adc
adc
fstpl
inc
andb
inc
fidivs
adc
jmp
es
and
adc
inc
or
pop
lahf
les
xchg
jae
pop
cmpsl
test
fistps
adc
icebp
imull
mov
jp
jmp
stos
aaa
jmp
insb
stos
mov
jl
and
std
movb
movb
aam
jo
mov
rcrb
cld
jl
mov
fcomps
cmp
in
test
fistpll
jl
ja
jbe
add
push
xlat
out
mov
jge
push
data16
mov
in
pop
inc
leave
fidivs
adc
xchg
xchg
sbb
cmc
push
outsl
jns
mov
fdivs
jns
pmuludq
jp
mov
xor
mov
jg
stos
cmp
movsl
dec
jg
iret
mov
insb
jmp
pop
adc
popf
add
out
push
xchg
mov
imul
push
sahf
jae
or
lods
stos
xchg
gs
pop
mov
jg
dec
sub
sbb
mov
das
mov
and
adc
add
push
pop
in
sub
jge
adc
cmp
fimull
stos
imul
fwait
add
fiadds
mov
lea
and
and
xor
mov
jbe
xor
mov
adc
out
mov
xlat
push
mov
mov
mov
lds
outsb
cltd
dec
ret
push
dec
cltd
pop
dec
mov
dec
call
add
in
mov
repnz
pop
imul
jno
out
fld
loop
bnd
mov
xchg
mull
cmp
lock
cmpsb
clc
push
cmp
lcall
pop
xor
push
mov
mov
mov
aam
shlb
jno
shrl
jecxz
pop
sti
lcall
sub
fs
inc
loop,pt
adc
or
sbb
test
xchg
mov
rol
mov
pop
mov
inc
hlt
push
xor
pop
pop
mov
out
push
or
outsl
outsb
push
sbb
xor
pop
mov
mov
mov
cmp
out
cld
scas
add
adc
mov
pop
sub
jg
out
sub
adc
push
adc
inc
or
cwtl
jae
jmp
sub
sbb
xchg
test
xchg
sbb
cmp
inc
loop
jns
jecxz
stos
pop
cmp
inc
call
out
stc
xchg
mov
cmp
or
and
dec
imul
lods
out
pop
xchg
lods
dec
push
push
sbb
and
adc
dec
lahf
loope
and
and
mov
les
sbb
adc
data16
fcoml
push
mov
ja
dec
or
push
int
insb
das
cmpsl
mov
loopne
cli
jp
gs
rolb
repz
rcrl
xor
mov
push
decb
in
push
aad
and
dec
fiaddl
inc
loop
leave
mov
in
pop
adc
notb
je
pop
cmp
pop
cmpb
jmp
push
lods
pusha
frstor
push
stos
xchg
xchg
adc
test
int
repz
xchg
pop
pop
mov
pop
mov
inc
jl,pn
sti
mov
repz
out
push
insb
repz
pop
daa
imul
inc
xchg
push
fsubr
and
and
or
in
rolb
aad
repnz
cltd
rorb
mov
lds
pop
pushf
sbb
ss
xor
aad
mov
mov
dec
push
addr16
xlat
aam
sti
aas
or
xor
sbb
decl
push
push
xlat
mov
cld
sti
inc
xor
addr16
xchg
jbe
daa
mov
lret
cmp
movups
jo
js
and
insb
jne
xchg
arpl
repnz
inc
sti
gs
fmull
push
push
xchg
inc
inc
addb
mov
popa
fisttps
push
inc
lock
xchg
ret
fildll
call
iret
push
arpl
das
nop
cmc
push
push
add
stc
push
mov
xlat
lock
mov
xchg
stos
lock
sbbb
mov
add
cmp
in
jo
std
add
pop
and
push
insb
aam
aaa
cmovae
push
mov
mov
inc
adc
idivl
push
xchg
sbb
ja
xchg
stos
and
stc
adc
pop
imul
mov
stos
xchg
gs
test
mov
imulb
pusha
iret
mov
jg
xor
cmpsb
bound
or
test
mov
mov
mov
cs
xchg
loopne
mov
imulb
sub
sub
dec
into
out
inc
lcall
pop
add
dec
add
loop
push
push
aam
pushf
push
push
test
xchg
xchg
xor
test
aad
sbb
jns
cmc
jbe
jmp
icebp
addl
push
clc
stos
fsubrs
mov
inc
fisttpll
imulb
or
or
mov
or
cmp
xchg
shr
test
adc
mov
or
test
jmp
mov
scas
mov
mov
adc
jl
cmp
push
ljmp
popf
push
jle
sub
and
adc
in
stc
scas
enter
adc
jae,pt
dec
cltd
lea
push
mov
add
stos
dec
stc
mov
add
cmp
xchg
scas
push
ret
cmp
test
cmpsb
subl
xchg
ret
iret
das
push
lret
push
push
or
std
pushf
xorl
gs
arpl
les
das
pusha
mov
cmp
scas
jecxz
test
adc
cwtl
rclb
in
inc
adc
add
clc
add
aad
inc
loop
or
js
scas
cli
or
fnstenv
ja
repz
add
cwtl
or
xchg
cmp
idivb
scas
iret
leave
pop
lods
add
inc
sbb
andb
clc
test
out
movsl
rcrl
pop
or
ss
jmp
repnz
pop
idivl
lcall
int3
enter
push
mov
and
daa
push
pop
or
icebp
nop
movsb
pop
mov
add
pusha
push
sbb
lret
xchg
out
add
push
mov
jge
imul
and
popf
xchg
xchg
jle
loopne
stos
lcall
inc
pusha
sub
mov
cld
test
idivb
clc
fists
mov
pop
jecxz
cmp
xchg
sub
pop
inc
xchg
stc
cmpb
enter
push
inc
push
ja
roll
pop
xlat
adc
xor
jmp
repz
push
les
push
sbb
inc
and
pop
dec
cmpsl
shlb
pop
call
mov
dec
ljmp
outsb
hlt
dec
mov
jne
int3
mov
fsubrl
sbb
testl
mov
mov
imul
std
roll
mov
xor
int3
pop
imul
and
in
test
or
jno
pop
push
repnz
dec
mov
arpl
mov
into
mov
insb
xchg
jno
cmpb
push
arpl
jp
mov
shrl
fsubp
imul
shll
js
mov
pop
scas
sbb
call
xchg
add
push
jg
stos
pop
and
mov
mov
sub
cmc
push
adc
add
inc
shrl
add
mov
pop
icebp
and
psraw
stos
or
icebp
xor
pop
and
addr16
push
pusha
jo
jmp
test
or
adc
add
adc
pusha
push
push
sbb
inc
leave
push
jnp
test
into
sahf
xchg
xchg
insb
pop
data16
xlat
sbb
add
mov
imul
pop
adc
cs
hlt
popa
lahf
lods
add
jmp
lcall
testb
scas
call
outsb
or
jecxz
dec
inc
dec
lods
pop
shr
test
call
in
adc
insl
ficompl
pop
repz
jb
jmp
out
sub
xchg
movsl
sbb
lret
popa
jbe
dec
inc
push
mov
adc
or
jl
cmp
cmpsl
and
shll
add
loop
into
aad
and
sbb
mov
adc
xlat
rol
mov
fdivl
mov
xor
mov
out
inc
xchg
xor
repz
mov
or
add
cmpsl
add
ret
or
out
xor
arpl
pop
mov
out
pop
mov
rcrb
ljmp
sbb
and
nop
inc
outsl
jo
inc
subb
mov
cmp
push
xchg
in
test
sbb
push
lock
icebp
lret
adc
sub
std
dec
stc
hlt
mov
cmpb
bound
loope
fldt
push
jne
push
mov
cmpsl
cs
adc
xchg
sub
sbb
sbb
cmp
pop
xchg
mov
inc
adc
mov
repz
mov
xor
aaa
stc
and
insl
inc
jbe
dec
sub
std
cs
enter
in
adc
dec
mov
in
lds
inc
lock
and
mov
mov
push
mov
pop
pop
shll
jb
in
test
in
add
adc
mov
aam
pop
call
add
fdivl
test
loopne
pop
xchg
mov
cld
mov
dec
in
fstpt
sbb
loopne
dec
ror
mov
or
pavgb
or
cs
dec
adc
dec
ljmp
jae
pop
push
xor
cmpsb
sahf
mov
and
out
popa
lods
mov
xchg
lcall
mov
loope
pop
shrb
pop
nop
movsl
cmp
aaa
or
dec
adc
lret
dec
pop
clc
mov
jecxz
add
aaa
push
mov
ret
xor
movsb
hlt
es
add
inc
insb
lea
push
pop
xor
xor
mov
clc
mov
popf
xchg
insl
out
mov
pop
sbb
fisubrl
mov
stos
hlt
dec
insb
cli
or
mov
jns
cmp
push
sub
mov
inc
leave
mov
ja
pop
sub
mov
jns
mov
sbb
xchg
lock
jp
int3
push
stc
stos
loopne
cmp
cs
mov
mov
mov
lret
sbb
nop
jne
int3
sbb
sub
and
nop
jnp
jmp
inc
xor
fisttps
mov
les
sbb
mov
cmp
mov
sbb
jns
cmpl
in
pop
sahf
out
cwtl
lret
adc
lcall
xchg
sbb
and
popa
fists
fstp
cmp
add
cmpsl
sbb
dec
mov
jg
jne
es
adc
pop
add
or
and
cmp
jbe
das
in
shrb
mov
jnp
adcl
cld
iret
stos
or
mov
add
dec
push
ret
sub
push
xor
dec
mov
xchg
adc
cld
popf
xlat
mov
pop
or
mov
insl
jmp
sub
insb
stos
push
inc
cmp
pushf
push
xchg
call
cmp
hlt
icebp
mov
pop
inc
and
push
mov
mov
call
aas
in
mov
insl
mov
pop
add
or
adc
jnp
adc
sub
cwtl
add
add
shlb
popf
jae
jg
mov
popa
add
jo
lret
xchg
ficompl
jnp
fnstcw
jnp
adc
cwtl
scas
fcomps
jecxz
cmp
lods
icebp
add
jle
inc
sahf
daa
in
popa
out
rclb
jle
dec
sbb
push
les
add
xchg
icebp
mov
sbb
push
xchg
adc
call
fdivrs
sub
push
lahf
sub
xchg
test
xor
insb
xchg
in
pop
jge
mov
jae
inc
lret
jne
inc
inc
adc
fsubrs
cmp
paddw
cmp
test
imul
stc
stc
pushf
lods
jb
xor
lcall
mov
popf
inc
xor
pop
jmp
mov
in
or
in
scas
push
negb
mov
idivb
mov
add
aam
fadds
mov
cwtl
sub
jecxz
dec
add
mov
sub
pop
add
push
dec
xchg
shr
rol
shrb
aad
push
das
add
push
push
push
or
bound
shl
jl
push
js
je
loope
daa
add
shlb
aad
test
adc
pop
out
push
push
sub
cmpsb
jmp
lret
add
ffreep
mov
dec
ss
mov
mov
shll
aad
leave
mov
push
insl
pop
cmp
cs
loope
xchg
rorb
push
gs
pop
nop
cli
pop
jo
inc
lds
pop
cmc
sarb
push
xchg
jecxz
test
jg
inc
add
mov
xbegin
adc
push
mov
inc
addr16
and
loope
test
lcall
mov
mov
mov
test
adc
aad
enter
icebp
vprotb
bound
push
sub
xlat
adc
popf
cld
sbb
mov
and
cli
jbe
push
fdiv
xchg
xchg
or
cmpsl
lock
imul
sbb
shrl
mov
push
mov
test
fcomi
les
ficoms
inc
pop
jnp
sbb
clc
das
dec
loop
push
repz
pop
ficoml
xor
ror
xor
and
mov
push
inc
mov
ss
cld
das
mov
fidivs
push
jae
jl
dec
mov
je
jge
mov
mov
cltd
sub
mov
inc
mov
mov
push
jbe
aam
pusha
jg
xor
adc
mov
cmpsb
iret
pushf
inc
pop
xchg
testl
mov
push
int3
xchg
ret
repnz
push
adc
into
movsb
subl
dec
pop
js
pop
and
mul
movsb
add
sub
fidivs
fbstp
lret
rcl
int3
stos
dec
popf
sbb
ret
stos
cli
sbb
xor
arpl
cmpb
cmpsb
icebp
lahf
sbb
mov
je
jp
call
add
xchg
jmp
shlb
cs
add
test
xchg
xor
mov
jmp
roll
cmp
cltd
jge
stos
inc
pop
adc
ret
push
shlb
fcos
mov
xchg
push
test
lcall
ficomps
gs
jle
fistpl
das
mov
mov
sub
mov
xchg
mov
add
mov
inc
inc
push
cld
cltd
dec
mov
std
pop
test
repnz
addb
int3
mov
adc
subb
mov
in
scas
cli
jmp
cmp
lea
loopne
or
pop
pop
fcmovnbe
in
sti
sub
mov
repnz
aas
mov
jnp
icebp
or
imul
scas
push
shll
dec
mov
mov
das
cwtl
in
xchg
sub
adc
jl
ja
addr16
pop
dec
mov
cwtl
leave
jle
and
adc
hlt
adc
es
imul
daa
movsl
imul
aas
mov
lds
or
jle
mov
leave
test
ja
xchg
push
mov
outsb
in
mov
bound
loope
pop
mov
stos
sti
nop
out
mov
je
inc
mov
das
lock
dec
sub
xorb
push
lcallw
sti
and
movsl
movsl
mov
mov
xchg
mov
loope
lret
pop
sbb
push
adc
lock
lods
jg
lods
jl
xor
xchg
movsb
testb
popa
pop
pop
stos
inc
add
shrl
jbe
pop
addl
scas
jl
mov
enter
stc
pop
or
mov
imul
fsubl
inc
adc
mov
shlb
clc
adc
mov
loop
and
ror
jnp
mov
ja
rcr
arpl
sbb
icebp
out
cmp
cli
or
popa
mov
jnp
inc
mov
lds
add
push
in
stos
fildl
mov
or
sub
leave
xor
dec
mov
ret
cmp
in
mov
jle
push
add
jo
xchg
jg
je
movsl
test
mov
in
dec
rorl
mov
loop
std
sbb
jmp
push
xchg
mov
push
dec
and
lcall
pop
cmc
into
out
mov
lcall
mov
cli
cli
rolb
inc
cwtl
icebp
mov
add
push
in
out
pop
add
into
das
push
push
jae
cmp
fadds
lea
mov
sub
xor
mov
outsb
jp
add
push
out
xchg
fnstenv
xchg
test
vpmullw
mov
sbb
ficoml
loopne
xchg
inc
or
ljmp
js
test
xor
cltd
in
xchg
sbb
call
jne
jmp
xchg
xor
mov
mov
pop
cmpl
sub
xchg
dec
les
lret
inc
ss
clc
mov
mov
push
sub
lods
jge
jbe
arpl
test
repnz
xor
lcall
xor
fwait
inc
push
movsl
test
cli
mov
xor
mov
sbb
mov
int
jmp
fistpl
sbb
cmp
aas
mov
push
push
rcll
mull
jns
or
stos
mov
sub
jmp
xlat
aaa
icebp
outsb
pop
test
int
jns
mov
call
jle
sbb
leave
jno
mov
mov
add
lcall
mov
aaa
mov
cld
mov
push
jns
inc
addb
ret
fs
sub
dec
out
mov
xchg
pop
jmp
pop
call
lret
std
dec
lea
push
icebp
push
or
or
pop
jp
jge
jp
outsb
pop
mov
pop
imul
aas
xchg
bound
pop
cmp
sub
pop
aam
aad
push
outsb
dec
sbb
cmp
xorb
xchg
xor
pop
mov
out
dec
jl
outsb
int3
jmp
popa
pop
cmp
das
sahf
cmp
and
in
xor
sbb
insl
test
jb
push
movl
jae
test
lahf
ficoms
jbe
inc
inc
mov
mov
bound
gs
lret
gs
enter
arpl
inc
mov
outsl
jmp
mov
pop
push
popl
subb
sti
inc
pop
ljmp
rorl
or
movsl
sbb
mov
int
lds
adc
aad
notb
mov
cmp
mov
stos
pop
imul
scas
mov
xchg
and
fwait
mov
cs
mov
loopne
mov
movsb
jp
mov
cmp
sub
neg
outsl
adc
iret
dec
std
jbe
mov
leave
inc
gs
or
inc
outsl
cltd
leave
hlt
xor
mov
call
cwtl
sbbb
test
push
push
fmuls
dec
jle
into
and
nop
das
mov
lcall
and
push
inc
gs
lret
jg
push
inc
sarb
pop
test
ja
xor
fldcw
out
add
push
and
ret
push
cwtl
sti
mov
jg
jp
ss
out
sub
fnsave
sub
test
dec
rcll
jo
cmc
add
aaa
inc
enter
dec
dec
imul
sbb
xchg
imul
fnstenv
test
popa
adc
xor
in
and
push
xchg
leave
inc
fxch
hlt
repnz
push
and
fwait
inc
insb
xchg
push
inc
jno
in
inc
or
cmp
out
mov
jnp
xchg
mov
mov
rolb
mov
or
repnz
add
imul
sbb
test
or
lahf
dec
dec
push
xlat
icebp
jl
mov
pop
add
arpl
fwait
loopne
inc
mov
push
push
cmpsl
out
adc
push
pop
in
hlt
cmp
xchg
repnz
aas
ljmp
mov
and
add
push
iret
fs
cld
repz
stos
fcom
shll
inc
das
push
mov
mov
lahf
sub
pop
dec
inc
jnp
loope,pn
lret
gs
xor
cmpsb
xchg
jg
je
add
enter
fcoml
fimuls
je
jne
or
mov
clc
pop
ja
mov
pusha
add
inc
xchg
imul
xchg
out
jnp,pt
sbb
xlat
mov
and
sbb
test
test
push
arpl
out
shll
jmp
jns
dec
inc
ljmp
mov
and
gs
stc
mov
movsb
add
mov
or
sbb
scas
movsb
ret
dec
jns
fists
mov
mov
pop
sar
or
or
ljmp
jmp
inc
dec
push
jl
add
cmp
test
inc
mov
lods
not
dec
push
mov
test
cli
andl
out
addr16
movsb
enter
sti
mov
adc
int
ret
push
cmpsl
pop
loopne
mov
cmp
xchg
hlt
loopne
lods
mov
jae
jp
pushf
sub
les
jle
push
ret
cltd
dec
test
and
xor
add
ss
addr16
xchg
mov
aas
lcall
popa
add
or
fnsave
outsb
sub
add
mov
sub
cmp
pop
xor
jge
nop
sub
jmp
mov
cmp
cld
jne
enter
cmpsb
jmp
and
push
les
mov
jp
cmp
in
pop
pop
push
cltd
clc
xchg
mov
roll
lcall
push
mov
stc
test
cmpsl
out
xor
pushf
mov
xor
add
lock
sbb
mov
popa
mov
inc
dec
pop
cmpsl
push
sub
dec
mov
sbb
push
jg
pop
jnp
rol
enter
cmp
cli
leave
jmp
pop
hlt
mov
lock
xchg
cmp
rcrb
sbb
sub
ja
cmp
popa
outsl
stos
push
cltd
mov
push
sbb
dec
lahf
divb
and
pop
dec
push
add
pusha
inc
stc
ljmp
repz
or
mov
flds
pop
ja
sbb
xchg
roll
mov
fcomp
dec
mov
ret
xchg
sahf
inc
push
lods
and
or
inc
mov
test
jl
xor
cltd
xchg
lods
ret
push
dec
or
lods
sub
add
cmp
mov
ja
lods
imul
cmpsl
ficompl
shrb
cmpl
mov
mov
jg
and
or
push
mov
adc
mov
cmpl
mov
js
sbb
cmc
in
adc
rcl
or
ja
inc
jne
push
popf
lods
data16
adc
jl
jne
mov
bnd
jp
or
movq
stos
enter
add
jp,pn
jge
bnd
nop
lock
std
in
mov
sbb
push
dec
mov
xchg
jb
lock
das
push
leave
mov
popf
loop
inc
sbb
dec
xlat
aaa
es
ret
jb
fdivrl
xchg
and
ljmp
outsb
cwtl
js
push
mov
orb
popf
and
pop
dec
inc
es
cli
lret
xchg
es
xchg
call
ret
scas
xchg
mov
leave
test
inc
jo
fnstcw
repnz
shlb
stc
mov
mov
mov
outsb
mov
fwait
loop
mov
cmp
cmp
add
aam
xchg
daa
das
xor
cmc
sbb
fsts
pop
das
adc
dec
adc
movsb
enter
push
stos
mov
push
adcl
mov
sahf
enter
ja
or
sub
imul
iret
movsl
call
mov
scas
loopne
rclb
data16
sbb
addr16
mov
daa
fists
ljmp
fscale
mul
pop
sbbb
leave
shl
push
test
push
insb
stc
adc
or
adc
sub
rcrl
adc
lahf
pop
or
loop
test
daa
ljmp
cmc
mov
enter
xor
mov
jo
jge
xchg
push
imul
ret
push
jge
jne
jne
test
repz
test
pop
sti
je
outsl
andl
pop
out
ljmp
insb
inc
xchg
inc
inc
jbe
into
lcall
aas
cld
add
insl
push
movl
lahf
mov
add
js
loopne
iret
fwait
sub
pop
nop
mov
pusha
mov
iret
hlt
add
pop
jno
inc
xor
divl
mov
jl
mov
loopne
out
inc
test
and
push
jno
sub
out
sbb
daa
ss
adc
aaa
push
lock
sahf
insl
pop
ds
cmp
data16
sti
ja
call
call
adc
mov
mov
cmp
icebp
into
mov
sbb
dec
sarb
cwtl
mov
push
je
jbe
inc
in
sub
das
shll
lcall
mov
idivb
idivl
jle
lds
test
enter
in
cmpsl
cmp
sbb
dec
out
repnz
in
inc
mov
inc
cltd
out
int3
addr16
push
mov
cltd
mov
and
push
pop
or
sub
out
enter
inc
aaa
xor
aas
ljmp
push
dec
cmp
and
ret
mov
test
push
aam
cmc
int3
sub
out
nop
jbe
push
jae
sbb
popf
out
adcl
pop
push
cmp
sub
pop
adc
dec
cmp
inc
cli
xchg
sub
pop
dec
xchg
sub
mov
or
inc
lret
sub
pop
ficomps
je
xchg
lods
push
xchg
and
in
mov
aas
js
add
mov
xchg
fisubl
pop
push
cmpsl
stos
push
dec
mov
fbld
idivl
lcall
into
dec
int
push
lods
adc
and
pop
adc
sbb
data16
sbb
dec
in
shrl
inc
sbb
lods
leave
jo
out
shll
mov
in
daa
jge
adc
adc
mov
out
fcom
out
dec
out
test
and
jo
lea
fnstcw
sahf
xchg
stos
or
subb
mov
pop
and
adc
adc
leave
xor
lock
jmp
pop
in
rolb
movsl
loopne
mov
repnz
lret
cmp
js
loope
mov
in
mov
sub
mov
fstpl
adc
jle
dec
xor
test
data16
cld
and
push
push
fs
mov
sti
jmp
repz
jecxz
imul
xorl
mov
cld
sahf
mov
pusha
ret
push
ror
xor
mov
lahf
jg
jl
add
lods
aaa
cmc
and
std
mov
test
out
or
aam
addr16
cwtl
push
and
lea
pusha
inc
sub
pop
fildl
repz
test
add
and
neg
and
inc
cwtl
pop
icebp
mov
pushf
aas
fidivrs
insb
mov
sti
js
lock
mov
xor
sti
mov
ficoms
sub
add
fs
enter
xchg
jns
adc
push
push
xchg
pop
in
test
mov
push
out
sub
fdivl
sub
push
xor
pop
jns
jmp
mov
xchg
add
pop
outsl
inc
jecxz
out
sbb
movsb
aaa
pop
lock
sub
in
mul
and
sub
popf
mov
imul
insl
inc
aas
ret
pop
mov
mov
jne
pop
or
icebp
filds
xchg
cmp
lret
fsub
cmp
and
xchg
xor
outsl
mov
lea
xor
cmpsl
out
or
mov
mov
mov
jmp
out
cli
mov
jbe
inc
lods
pop
pop
rcrb
repz
pop
pop
incl
scas
stos
icebp
lea
ljmp
idivl
cmp
das
inc
add
mov
pop
mov
jp
push
xchg
in
arpl
mov
popf
outsl
xor
ficompl
out
mov
xor
psrad
sub
pop
aam
dec
gs
mov
mov
mov
stc
mov
inc
jb
shrl
ljmp
xor
outsl
xor
loop
xlat
xor
cwtl
xor
inc
pop
sarl
mov
js
cmpsl
pop
movsl
inc
cmp
rolb
imul
ret
nop
push
cmp
pop
pop
push
xchg
insb
mov
rclb
int
jbe
lds
repnz
dec
or
adc
imul
int3
adc
out
fistps
push
movsb
cmp
sbb
sti
xor
in
xor
pop
add
lods
in
test
jnp
xchg
cmp
fdivrl
pusha
jae
lret
lahf
cli
lock
xorb
xchg
jo
in
lret
push
dec
repnz
mov
dec
fwait
jo
sub
ficoml
call
mov
dec
faddp
bound
xor
subb
jmp
lahf
sub
mov
sbb
and
pusha
and
push
loopne
jmp
int3
or
dec
and
cmc
adc
daa
cmp
sub
add
mov
lods
sbb
adc
inc
movsb
xchg
mov
stc
divb
xor
int
in
je
popa
or
mov
sbb
fisubl
pop
sbb
mov
out
push
mov
out
pop
inc
xor
sub
jecxz
xchg
cmp
push
mov
mov
fbstp
adc
push
gs
out
fucomp
out
decl
xorb
push
lret
sbb
add
sbb
bound
xchg
nop
adc
inc
push
sbb
stos
scas
rcll
pop
lcall
ljmp
cmpsb
push
shll
mov
imul
cmpsl
or
xor
bnd
fcoms
out
push
push
mov
sete
ret
mov
lods
xchg
inc
repz
push
sub
fs
test
fsubrp
test
icebp
lods
sbb
mov
sarb
dec
xor
xor
pop
pop
jne
repnz
cmp
mov
mov
arpl
icebp
icebp
out
pop
mov
cmp
inc
adc
push
movhps
sub
fisubrs
xor
sub
cmpl
mov
mov
xchg
fists
ja
add
or
cmp
stos
in
dec
add
popf
sbb
jg
push
cmpsb
add
sbb
lods
inc
inc
loop
cmp
and
dec
fisubl
push
test
jp
mov
sub
enter
aaa
movsb
sub
popa
icebp
fbld
push
std
rcrl
aam
xchg
test
sbb
subb
cmp
fsubrs
inc
test
and
lret
adcl
fs
cmp
cmp
cwtl
mov
xchg
lret
ficompl
fistps
jb
shrl
mov
fldl
dec
mov
mov
test
push
lahf
std
imulb
std
adc
cmovle
mov
cli
jmp
jg
int3
nop
dec
inc
cli
inc
fbld
adc
inc
fs
add
cld
xor
pop
jo
mov
sbb
lods
dec
adc
lock
mov
vsqrtpd
xchg
stc
rol
xchg
xchg
cmc
scas
cmp
fcomps
mov
lret
mov
sar
repnz
std
out
cli
or
jo
mov
xchg
cmpsl
adc
push
push
loopne
xor
adc
sbb
pop
shr
sub
or
lock
mov
ret
cmpsb
mov
adc
add
xor
or
cmp
call
sub
fsubl
push
jecxz
push
ror
shll
push
mov
pop
dec
lods
adc
sbb
sbb
inc
sub
jmp
xchg
push
ret
dec
mov
pusha
std
lret
sbb
cld
cltd
xor
lods
and
pop
pop
xchg
hlt
jae
inc
loop
add
shll
inc
insb
insl
and
pop
cmpsl
insb
test
cmpsb
repz
xchg
inc
mov
lcall
cmp
aad
or
or
stos
rclb
adc
pop
xor
repz
add
xchg
xchg
mov
pusha
adc
clc
and
jno
arpl
xchg
jle
test
push
xchg
mov
fists
movsl
inc
add
jp
mov
inc
inc
mov
repnz
adc
mov
or
dec
mov
cli
in
sub
inc
lea
mov
pop
pop
aaa
dec
rorl
inc
push
aad
push
cmpsl
dec
outsb
xchg
std
pushf
fcompl
xchg
popa
mov
sbb
aas
jle
sahf
jmp
mov
inc
lds
xchg
mov
adc
xor
jb
mov
test
add
bound
and
adc
imul
outsb
lods
aas
in
ja
mov
inc
lea
ljmp
add
mov
cmp
sbb
loope
xchg
xor
push
xor
sub
cmpsl
sti
js
cwtl
out
pusha
jae
nop
jmp
or
mov
mov
push
sbb
jo
aad
sbb
ljmp
and
dec
sbb
mov
cs
or
lahf
mov
xchg
nop
loopne
adc
mov
sub
adc
mov
dec
fbstp
cwtl
jnp
test
lret
loope
mov
loopne
add
out
mov
cwtl
fs
pushf
movsl
pop
adc
jo
int3
scas
sbb
adc
sub
jo
gs
addr16
inc
pop
push
dec
mov
mov
sub
mov
repnz
das
jmp
popa
mov
dec
bound
or
pusha
stos
jbe
cmp
push
sub
xchg
subb
cmp
in
ljmp
add
and
xchg
aas
xor
push
data16
xlat
xor
sub
leave
fcom
sub
cmp
ret
xchg
popf
push
cltd
sub
jno
stos
push
popa
push
inc
fimuls
lods
stc
jae
rorb
xchg
mov
xor
push
pushf
sub
aas
push
test
sbb
xor
pop
jp
sub
add
int
rclb
dec
pop
pop
pop
add
pop
sub
adc
fwait
xchg
or
int
mov
lahf
push
pop
inc
mov
mov
add
lret
xor
pushf
fsubs
retw
out
xchg
ja
push
pop
enter
mov
gs
xor
xchg
loop
jle
incl
sub
push
inc
loopne
in
test
pop
pusha
das
add
or
cmp
cmp
repnz
das
imul
mov
rclb
dec
xchg
mov
sbb
and
jge
cwtl
xchg
mov
fcoms
fwait
nop
mov
jle
iret
into
movsb
xchg
dec
fbstp
icebp
push
out
pop
adc
mov
or
dec
ja
cli
aad
call
and
movsl
jne
jae
sub
data16
aaa
push
cmp
adc
cmp
dec
lret
xchg
data16
xchg
test
xor
scas
imul
ret
scas
jbe
ret
add
div
or
addr16
cmp
jp
aas
jnp
push
stc
lcall
in
mov
xor
test
cltd
out
mov
mov
sar
cld
out
pop
pop
clc
js
fwait
inc
jnp
sub
xchg
lcall
in
mov
nop
jae
sub
sub
scas
stos
je
in
lock
push
lds
cmp
and
out
in
pop
pop
inc
jb
pop
cmp
loopne
ret
sbb
add
dec
cmp
mov
stos
jne
fdivp
adc
sarb
cmpsb
inc
aas
loop
lret
cmp
pop
and
sub
iret
cs
repnz
out
daa
roll
jo
test
mov
je
and
xlat
mov
sarb
add
mov
in
rcr
js
or
mov
out
mov
sti
int
mov
test
aaa
or
ret
xor
in
dec
lcall
push
pop
sbb
cmp
xor
sbb
nop
dec
shlb
cwtl
cmpsb
mov
xlat
sub
push
fiadds
sbb
jle
insl
popf
add
and
jae
push
out
das
sti
xchg
sbb
icebp
or
dec
or
into
into
sbb
int3
mov
mov
lahf
test
inc
vmovups
mov
sbb
lret
or
mov
enter
leave
push
jecxz
pop
xor
jne
push
cmp
mov
mov
imul
fldenv
addb
mov
out
mov
movsb
xchg
out
xchg
jae
into
out
leave
pop
and
mov
push
lret
fistps
mov
pop
sbb
iret
shrb
cltd
sahf
cmp
fildll
popa
pop
jbe
in
int
out
addr16
adc
das
loopne
push
mov
std
fcoms
sub
mov
xchg
scas
sub
test
or
xchg
sub
mov
or
add
and
pusha
dec
xor
sub
and
pop
mov
in
loope
je
adc
inc
jmp
sub
push
sub
xor
pop
push
push
mov
bound
out
inc
and
pushl
outsb
xchg
addr16
lock
mov
rorb
add
popl
push
push
sahf
or
sub
push
stc
jecxz
arpl
jno
and
incb
push
sbb
out
ret
ljmp
push
stos
outsl
xchg
push
subb
jae
cmp
adc
xchg
inc
fs
jl
imulb
pop
inc
daa
ds
fsubrl
lods
xchg
adc
and
add
arpl
test
stos
mov
in
sbb
sbb
or
faddl
fs
xor
call
mov
ss
mov
mov
out
int3
ret
mov
or
adc
and
pop
jmp
jb
lcall
repz
ja
dec
mov
test
out
and
loopew
pop
mov
test
shll
add
jne
int3
jecxz
fstpl
insb
sub
mov
fmull
jl
iret
jbe
lret
cmp
imul
loope
inc
jns
inc
lock
xchg
subl
pop
mov
mov
movsl
xchg
sbb
or
in
shr
and
cmp
xor
mov
pop
jp
cmp
push
imul
stc
dec
mov
sarb
lods
call
mov
lods
les
push
jb
fwait
mov
cmp
sahf
pop
popf
push
ret
and
int
adc
jae
dec
mov
add
or
adc
daa
push
or
xchg
xor
data16
lahf
fisttpl
and
jnp
loope
test
add
out
dec
push
les
push
or
sub
cmpsl
jno
add
sbb
or
push
xor
xchg
sub
pop
sbb
test
sahf
lock
lds
push
xchg
add
nop
insb
xchg
sbb
dec
lcall
fucomi
in
mov
ss
cwtl
lcall
rorl
xchg
push
mov
pushf
mov
mov
sahf
and
iret
cmp
and
pop
inc
and
ds
jmp
ja
test
mov
cmp
fldenv
mov
adc
mov
mov
div
add
sbb
lods
pop
adc
xor
scas
push
and
dec
push
nop
jmp
movl
test
pop
pop
loope
outsl
popa
push
stc
cmp
sarb
pusha
xchg
js
movsb
gs
adc
cmpl
xchg
out
lds
std
add
push
xor
dec
pop
ja
fstpt
jp
lret
adc
fwait
sub
mov
or
cltd
scas
fsubrs
movsb
mov
push
fcomps
xor
add
push
cmp
jbe
xor
in
jbe
fdiv
sub
jp
gs
je
mov
xlat
and
popfw
add
scas
jge
outsl
lret
jo
lock
mov
jle
ret
test
ss
xchg
outsb
jp
jp
inc
lahf
sbb
or
into
jbe
rorb
jl
sbb
cmp
hlt
jnp
mov
add
sbbl
sbb
inc
loope
pop
jl
push
out
pop
das
mov
xchg
pop
sarb
and
push
sub
paddusb
rcrl
rcl
mov
pop
inc
hlt
jmp
adc
inc
lods
aad
push
cwtl
lds
out
pushf
call
pop
fldcw
imull
dec
jle
sub
movsl
cltd
insb
sbb
into
aad
xchg
inc
xor
cld
add
inc
jmp
push
push
pop
inc
xchg
sub
dec
cmpsl
lret
bound
dec
mov
cmc
sbb
shrb
add
fisttpl
testb
mov
mov
lods
inc
insb
in
mov
pop
xor
ror
pop
jecxz
sub
into
fistpll
mov
out
lea
pusha
fdiv
leave
xor
lods
jmp
jno
in
cmpsb
aam
pop
divb
in
iret
add
inc
popa
sti
loope
mov
out
sti
sub
int
sahf
mov
xchg
dec
xchg
mov
mov
das
or
pop
add
movsb
and
in
fsubp
pusha
mov
push
mov
jmp
cmp
dec
mov
mov
imul
and
lsl
les
or
xor
xchg
sbbl
cmp
outsl
push
jl
js
into
add
push
jg
loopne
xor
jecxz
insb
inc
cli
mov
fcmovnbe
dec
jo
add
jmp
adc
jo
mov
mov
aas
jne
cmpsl
in
xor
notl
fbstp
lret
in
dec
pop
sub
mov
mov
mov
adc
xchg
or
sub
lods
and
push
stc
addb
adc
cmp
shll
cmc
xor
inc
cwtl
jmp
xchg
mov
pop
jle
inc
ret
clc
arpl
rclb
push
rorb
push
lret
xor
xchg
or
push
cmp
dec
out
xchg
adc
xlat
int
rorb
xor
stc
mov
push
xor
push
cmp
je
push
daa
sbb
pusha
aad
fdivs
cmpl
jno
icebp
push
xchg
jl
jg
rcr
out
out
inc
mov
rcrl
aam
xor
cli
int
ret
mov
cmp
loope
xchg
add
mov
aas
inc
loope
outsb
push
inc
popf
dec
inc
sahf
and
out
push
fs
cli
jns
push
stc
jmp
leave
cmp
fwait
jg
movsl
lcall
aad
cmp
ret
scas
cli
aas
popa
mov
es
jge
or
adc
data16
es
mov
jbe
xor
rcrl
inc
out
push
jl
jno
dec
mov
xchg
stc
inc
or
mov
jp
lcall
test
mov
push
push
xchg
pop
jae
cmp
jnp
xchg
sti
stos
pushf
test
aam
test
xchg
testl
cmpb
mov
dec
lock
or
movsl
adc
test
xchg
mov
mov
out
into
xchg
movsw
add
gs
loopne
shlb
rcrl
mov
sub
arpl
outsl
jl
arpl
stc
inc
hlt
push
add
scas
jns
sarb
js
jbe
mov
inc
adc
fdivl
mov
mov
xchg
arpl
test
test
xor
sbb
test
loopne
adc
lret
xor
ljmp
jmp
test
stos
ret
movsl
jo
pop
inc
pusha
sub
adc
imul
sbb
mov
pop
cmp
arpl
xchg
mov
rol
mov
data16
inc
int
jbe
adc
gs
aad
cld
adc
mov
mov
mov
cmp
sbb
test
in
es
mov
negb
inc
pop
mov
out
es
xor
cmp
pop
rcl
cwtl
xlat
stc
mov
movsb
fisubl
dec
xor
sbb
movl
xor
xlat
and
mov
inc
jg
jns
pop
xor
rcl
stos
mov
cli
mov
xchg
loop
jne
xchg
pop
es
mov
mov
pop
mov
cmp
ret
lods
stos
fadd
out
stos
mov
cmp
pop
subl
movntps
sbb
ss
shlb
lret
push
push
xchg
mov
ja
or
mov
mov
sub
or
cmp
xor
xchg
xchg
bound
and
inc
pusha
push
imul
jmp
pusha
aam
cmp
mov
imul
inc
push
pop
cli
mov
fiadds
je
shlb
cmp
fwait
push
lcall
dec
cs
call
pop
mov
jb
jne
bound
rcrl
mov
fidivs
mov
pushl
rcrl
in
sbb
sarb
push
std
mov
dec
jge
ret
das
ret
out
nop
mov
xor
cmp
subl
or
jno
outsl
jecxz
cmp
movsl
fidivl
mov
test
inc
test
test
pop
jo
aaa
ss
mov
push
cmp
pop
mov
test
js
sbb
adc
xchg
int
push
ret
mov
xchg
xor
mov
or
inc
mov
dec
loopne
push
cmp
test
or
mov
jge
and
xor
sbb
xchg
sub
inc
xchg
test
call
pop
pop
test
mov
pop
test
xchg
mov
adc
pop
mov
xlat
into
sub
fstpl
addr16
push
mov
sub
dec
fisttpl
xchg
pop
cmpsl
adc
outsl
cmp
outsb
lods
lahf
push
fnstsw
jno
or
addr16
mov
cmp
out
fwait
adc
lret
lock
and
jge
mov
push
std
add
push
out
pop
jge
mov
mov
or
sub
aas
dec
jecxz
jmp
xchg
sub
cld
dec
ret
aas
adc
int
testl
jle
mov
inc
mov
dec
rorb
sub
rcrb
stos
mov
jecxz
hlt
mov
jb
sub
incl
test
popf
xor
xor
out
rcrb
call
sub
lcall
push
cmp
jne
cld
es
or
mov
mov
lods
data16
int
imul
dec
ror
push
mov
sub
sub
cltd
xchg
mov
rorl
daa
lock
or
mov
xlat
cmp
shl
and
sahf
and
xlat
sahf
into
test
sbb
pushf
out
jl
push
push
inc
pop
push
fidivrs
cltd
or
ljmp
jo
scas
or
cmp
push
push
enter
enter
cmp
or
rolb
xlat
orl
jnp
xor
adc
or
daa
mov
push
hlt
add
leave
dec
sub
insl
and
jbe
sub
push
arpl
incb
repz
jp
in
sub
repnz
pop
sbb
mov
dec
pop
pop
ret
mov
dec
or
pop
inc
fsubrl
and
cmp
dec
testb
and
inc
fwait
daa
push
xchg
sub
add
imul
aas
jge
stos
jmp
inc
or
rcll
je
sar
cmpsb
pop
aad
mov
js
or
leave
dec
pop
int3
or
stc
std
es
aam
inc
mov
cltd
cmpsb
aas
xor
sbbb
jno
lds
jg
push
dec
cmp
mov
unpckhps
push
adc
mov
imul
leave
aam
shlb
lcall
mov
fcom
cwtl
jae
xchg
mov
mov
xchg
popf
or
adc
sub
xchg
stc
pop
in
lods
rolb
mov
bound
pushf
bound
adc
lret
jns
stos
sbb
dec
loopne
pop
ret
xchg
mov
pop
xor
mov
mov
lret
leave
jns
out
lcall
xchg
ds
lods
xor
mov
rorb
int
das
jne
outsl
movsl
mov
push
in
mov
mov
or
jno
test
into
rcll
mov
pop
leave
sub
bound
js
push
sbb
ljmp
add
adcb
inc
sbb
jecxz
scas
repnz
sti
add
int3
movsl
jb
mov
pop
and
sub
dec
mov
jbe
push
cmp
call
sbb
dec
jns
repz
or
xor
push
fistl
jbe
cmp
add
addr16
fisubl
pop
adc
dec
push
clc
mov
into
adc
je
sub
push
das
inc
add
mov
test
pushf
sbb
xor
dec
dec
jmp
xor
movsl
mov
aaa
std
stos
pop
mov
popf
mov
test
je
cmpsb
shrb
stos
sbb
jnp
or
cltd
sub
nop
imul
jbe
cwtl
bound
mov
repz
and
inc
stos
pop
xchg
adc
ret
pusha
or
add
loop
pushf
mov
push
pop
lock
daa
push
aaa
out
loopne
jnp
push
inc
in
les
dec
fistpll
mov
pop
arpl
dec
mov
int
xchg
das
pop
lcall
mov
mov
or
sub
mov
orl
and
xchg
in
sbb
fists
and
movsl
add
sub
jns
jg
bsf
shl
mov
and
xor
imul
mov
mov
aaa
cld
jno,pt
imul
mov
stos
inc
cmp
fs
in
icebp
aas
inc
inc
nop
flds
fldl
std
cwtl
lahf
mov
in
mov
jmp
mov
cwtl
sbbl
fs
mulb
jo
bound
cmp
ss
push
cld
pop
dec
cmp
and
mov
cmp
stos
movsb
lahf
inc
xchg
fucom
or
mov
loope
push
pop
dec
lahf
mov
scas
push
sub
test
add
int
int
psllw
sbb
xchg
fimuls
movsl
xor
lret
and
or
inc
sbb
mov
add
hlt
jno
cmp
mov
lds
cmp
imul
out
sbb
xor
lock
jg
mov
movsb
xorb
or
nop
jle
and
ja
sub
std
mov
nop
xchg
nop
gs
divb
fbld
lret
mov
dec
loopne
fcomip
xchg
test
push
jle
dec
mov
loop
pop
repnz
xchg
jo
repz
xchg
movsb
insb
push
mov
jb
pop
inc
int
aad
xlat
sub
fisubrl
lret
and
mov
jb
jl
push
in
nop
xor
fwait
in
in
bound
jo
out
inc
pop
popa
lahf
mov
mov
sti
jl
shlb
lds
dec
loope
jns
fs
or
add
call
mov
sbb
ds
js
sbb
je
stc
cmp
loop
and
lea
xchg
or
sub
das
popf
or
iret
jb
add
fs
inc
xchg
pop
into
and
sub
dec
sub
arpl
fldenv
dec
pop
imul
ss
pop
ror
int3
fcomps
mov
insb
lds
xor
aam
ss
mov
xchg
pop
and
xchg
push
dec
loope
fxch
cmp
jecxz
mov
jl
ss
add
sub
mov
lock
xor
cmp
jo
xchg
repnz
or
xchg
add
adc
xchg
call
scas
fistps
push
xlat
push
cli
sahf
add
movsb
rclb
adc
aaa
inc
xchg
jmp
in
cmp
fmuls
cmp
outsb
pushf
cmp
jle
imul
subl
mov
gs
bnd
mov
xorb
int
add
mov
cltd
test
subb
in
mov
scas
mov
sub
mov
jns
xchg
jae
cli
or
sbb
xlat
adc
mov
lahf
shr
out
leave
and
les
rcll
sub
xchg
pop
lods
mov
or
lods
incb
push
test
sbb
out
cmp
dec
lahf
ljmp
cmp
sub
mov
lods
cld
bound
cmp
das
pop
aad
mov
repnz
movlps
sbb
jecxz
or
jl
div
shll
mov
jmp
xchg
and
lret
stc
pop
jb
adc
push
mov
loopne
jmp
jecxz
fidivs
clc
cmp
bound
stos
fld
lods
xor
or
or
pop
pop
xor
ret
mov
not
push
mov
stos
mov
cmp
aad
add
imul
rorl
lock
dec
out
pop
inc
cmp
addr16
and
cli
or
scas
loope
dec
inc
jne
and
out
rorb
mov
cmp
push
or
sahf
mov
pushf
lock
push
aam
enter
pop
xchg
sub
xchg
testl
sbb
insl
daa
nop
nop
ss
or
mov
mov
dec
mov
int3
insb
inc
push
shrl
aas
ss
mov
mov
push
adc
scas
shrl
sub
xchg
loop
divb
jnp
push
aas
out
sub
sbb
xchg
pop
adcb
mov
or
rcrb
mov
inc
sub
xchg
mov
add
push
or
sub
push
xchg
ret
jnp
or
pop
push
jo
mov
aam
add
pop
in
out
in
mov
jb
mov
fisttps
push
ucomiss
mov
inc
ljmp
sbb
add
pop
jo
jl
sbb
cmp
cmpsl
imul
jg
sbb
leave
or
ret
mov
fstl
lods
or
cmp
lock
js
insl
movsb
push
sub
mov
add
mov
rorb
push
mov
in
and
insb
dec
xor
mov
adc
push
mov
sub
dec
loope
in
sbb
or
mov
ds
or
ja
and
jp
loope
movsb
sbb
lods
push
push
ss
fs
sbb
xor
sub
cli
inc
cli
mov
movsl
jns
jo
scas
dec
lock
outsb
cmc
jmp
aad
mov
in
pop
jl
add
scas
jo
jo,pt
pushf
inc
aaa
mov
xor
stos
out
shll
mov
jbe
xor
mov
push
cli
adc
mov
add
mov
mov
je
cmpsb
das
mov
sub
mov
dec
inc
cmp
hlt
ja
mov
test
mov
ja
mov
jl
sub
imul
shlb
jmp
fdivrl
sbb
lock
cmpl
mov
or
gs
gs
sbb
lret
xchg
or
addr16
mov
inc
push
call
mov
or
les
or
out
jecxz
mov
dec
js
cmpsb
add
ds
ret
dec
inc
sarl
in
test
adc
cwtl
inc
ficomps
lock
cmp
jmp
outsl
outsl
jmp
sbb
sub
sbb
in
das
inc
ror
out
xchg
out
mov
decl
nop
insb
nop
mov
jns
jo
push
and
aaa
rorl
out
mov
rolb
rorl
test
fwait
das
lahf
sub
fcomps
lret
jecxz
sbb
adc
jb
mov
cli
setp
push
inc
inc
or
xchg
mov
pop
ljmp
inc
movsb
cmc
mov
jae
or
stos
pushf
mov
mov
mov
int3
testb
cmpsb
scas
data16
and
lods
out
mul
into
pop
daa
pop
jmp
lock
test
jno
add
xor
xchg
or
jg
int
aad
pop
insl
mov
aad
addr16
xchg
int
adc
lock
pop
sti
andb
ret
mov
mov
jb
xchg
cmp
out
jge
dec
adc
jle
push
leave
xor
call
xchg
loope
jb
mov
test
fbld
jnp
pop
shrb
incb
jecxz
sbb
mov
pop
inc
arpl
pop
movsl
dec
xor
and
in
xor
insl
test
push
addr16
mov
cltd
ret
popf
lahf
repnz
pop
test
in
out
jmp
out
or
push
fnsave
lret
xor
cmp
mov
or
dec
xchg
xchg
and
sub
jle
pop
xor
shr
mov
or
call
inc
xchg
lods
push
mov
add
and
mov
cli
movq
cs
sbb
in
inc
imulb
inc
and
or
and
xchg
out
cli
dec
jp
push
mov
mov
push
mov
outsl
sbb
nop
mov
orb
fistpl
adc
insl
push
push
sbb
pop
xchg
push
xchg
mov
test
dec
test
mov
ret
cmpsl
mov
pop
mov
pushf
leave
popl
mov
pop
mov
lret
cmpl
or
dec
test
mov
mov
jno
jp
push
imul
xor
and
sbb
in
mov
iret
cmp
jns
jle
nop
jmp
jne
push
clc
and
or
sbb
jle
push
push
lcall
mov
int
std
clc
icebp
cmc
mov
in
add
mov
outsl
outsl
lea
jge
xor
test
out
icebp
cmp
and
sub
mov
mov
mov
insb
outsb
dec
nop
xorl
pop
jecxz
push
leave
daa
cmpsb
pop
dec
sbb
cli
jmp
pop
dec
addr16
ret
cmp
fwait
cmc
leave
push
jg
movsl
iret
cmp
jg
jecxz
cmp
mov
stos
sub
jle
mov
call
mov
sub
outsb
insl
test
iret
mov
jne
inc
add
push
and
jns
aam
mov
cmp
test
jo
add
sbb
and
or
cmc
mov
push
push
push
cmp
adc
push
or
daa
push
nop
cltd
push
fiaddl
pusha
leave
inc
mov
scas
xchg
pop
mov
jne
call
sub
jmp
leave
pop
mov
nop
leave
push
rolb
xor
subb
hlt
mov
add
and
cmp
pop
idivl
into
aas
leave
repnz
xchg
push
jnp
addr16
insb
lret
stos
arpl
jb
lock
dec
add
and
push
das
scas
mov
pop
mov
jbe
sub
std
or
sub
lret
int3
es
mov
loopne
jae
push
mov
lods
mov
inc
pop
inc
rcr
sub
in
lcall
dec
sbb
in
xor
mov
aas
ljmp
or
iret
jb
aas
sub
jnp
imul
dec
xor
cld
dec
es
clc
inc
mov
divb
mov
dec
cltd
fiaddl
test
add
out
xor
stos
movsb
out
mov
test
mov
ret
cmp
dec
xchg
shlb
mov
mov
je
add
inc
int
pop
pop
sbbl
incb
mov
mov
stos
or
stos
es
mov
jl
shl
out
dec
test
sbb
nop
adc
lret
xor
shll
cmp
ss
aas
mov
pushf
push
addr16
insl
mov
add
dec
imul
cld
pushf
sub
ret
push
mov
add
dec
movsl
aas
icebp
or
xor
mov
sbb
outsb
jae
xchg
dec
iret
insl
dec
sahf
and
xlat
xor
ja
cwtl
loopne
mov
xor
pushw
stos
pop
add
scas
push
sbb
push
mov
mov
push
arpl
adcb
jnp
test
outsb
movsl
inc
aas
lahf
aad
lahf
pop
out
pop
movsb
popf
push
out
or
clc
or
cmp
cld
cld
push
pushf
and
jne
dec
xor
dec
lcall
shr
mov
enter
adc
lea
and
arpl
jae
in
cwtl
repz
mov
fstl
pop
cmpsb
mov
mov
add
ds
add
add
in
xor
testl
nop
pop
rcr
push
and
test
or
xchg
mov
hlt
xor
jbe
out
stos
fwait
push
stc
js
inc
in
add
push
lea
pop
xchg
insl
dec
or
or
fiaddl
xor
mov
lret
inc
push
jg
add
sar
and
frstor
lods
mov
mov
test
pop
loopne
inc
jae,pt
push
cmc
test
mov
das
sti
push
cmp
sub
mov
icebp
adc
jge
add
mov
lcall
and
aam
cmc
call
jmp
xchg
pxor
dec
adc
stos
mov
mov
lret
xor
sbb
dec
jne
les
cmp
pop
cmp
cmpsl
out
dec
xchg
fs
aad
pop
dec
rolb
or
cmp
cmp
rcll
push
dec
movsl
stos
aam
mov
sub
jb
xchg
ja
xchg
imul
push
push
inc
dec
or
iret
mov
inc
clc
sbb
dec
pusha
fs
cs
test
jp
mov
and
shll
popf
jg
sbb
xchg
add
jmp
push
aam
jmp
loope
cltd
mov
dec
gs
in
mov
sbb
inc
std
adc
add
adc
push
popf
jge
cmp
pop
inc
jle
push
push
jle
es
inc
jle
xchg
push
jae
daa
lods
push
cmp
icebp
sbb
test
dec
nop
xchg
nop
xor
push
mov
inc
outsl
mov
cmp
gs
test
aas
jae
dec
and
add
nop
dec
in
add
lret
or
sub
shlb
cli
dec
inc
add
jae
out
ret
pop
lret
cltd
push
cltd
dec
sub
in
rclb
and
popa
sbb
stos
sub
and
mov
mov
cmp
imul
fcoms
imul
cli
lods
out
repz
iret
jnp
and
fldl
sub
pop
dec
xor
cmp
fists
nop
push
xor
push
ret
int
test
sbb
aad
xor
fdivrl
fimuls
sub
ret
and
lds
ss
shll
push
push
iret
test
cmp
sahf
sti
xchg
int
mov
adc
sub
enter
cmc
xchg
inc
dec
xor
push
call
ds
scas
mov
jg
sar
sbb
out
rclb
cltd
inc
add
mov
clc
dec
mov
mov
sbb
js
xchg
lcall
mov
mov
lahf
scas
leave
xchg
cmp
stc
outsb
dec
mov
iret
and
ds
push
jp
dec
pop
push
sbb
ret
outsl
and
xor
shlb
shr
or
xor
mov
jecxz
loope
xor
imul
fidivl
push
cmp
mov
cmp
push
mov
inc
pop
jmp
shr
fsubl
test
test
xchg
add
mov
mov
test
loope
sub
dec
imul
jno
addr16
pusha
cmp
or
cmp
sbb
inc
adc
pushf
mov
rorb
inc
cmp
loop
cmc
adc
xchg
or
cli
rcr
adc
fcompl
jmp
mov
add
jg
aad
ret
mov
sti
jne
sub
xor
repz
hlt
aam
stos
in
mov
cltd
xchg
adc
jp
stos
mov
ds
push
dec
out
ja
mov
lea
and
inc
push
fidivs
mov
or
push
in
lock
jo
push
mov
and
rolb
out
xchg
adc
mov
outsl
fwait
jae
adc
sbb
lock
jmp
lahf
jge
cmp
sbb
fwait
or
lods
cld
out
and
adc
fs
push
js
push
cmpsb
sbb
popa
pop
dec
in
jmp
in
xchg
fbstp
call
pusha
or
into
or
jecxz
jns
mov
repz
jb
ja
adc
gs
or
mov
movsl
jecxz
dec
mov
push
lret
push
lret
cltd
addr16
push
enter
enterw
inc
cmpsl
shl
pushf
pop
aad
lcall
pop
aad
test
scas
repnz
fsubp
cmp
sub
or
cmp
ret
mov
mov
xchg
sbb
pop
ss
mov
xchg
call
lock
xchg
dec
es
mov
lret
mov
mov
cmp
fldl
shl
out
ss
incl
scas
xchg
dec
mov
hlt
push
and
cld
fmull
xchg
sahf
adc
dec
mov
adc
mov
jbe
roll
movsb
pop
test
xor
es
xchg
mov
push
fildll
xchg
movnti
hlt
xor
mov
fptan
shll
sti
dec
add
pushf
not
dec
in
test
mov
push
insl
iret
xchg
mov
pop
sarl
es
arpl
push
cltd
adc
sbb
inc
es
mov
jge
xor
fwait
push
nop
dec
adc
fwait
inc
mov
ja
mov
stos
add
imul
stc
pop
mov
scas
and
adc
mov
pusha
hlt
push
jne
fs
jp
push
imul
scas
enter
push
or
test
jb
inc
lcall
and
jbe
jns
mov
mov
mov
inc
mov
int3
sbb
xorb
mov
out
mov
mov
lods
in
inc
ss
addr16
stc
adc
add
mov
stos
scas
jle
dec
sbb
lcall
aas
aad
pop
ss
call
fistpll
arpl
std
sbb
inc
sbb
in
gs
xor
and
pop
sbb
sbb
in
mov
cmpsl
mov
add
and
pop
int
or
mov
cmp
jecxz
push
sbb
inc
sub
cmpl
stos
loopne
dec
and
psllq
sub
je
imul
data16
mov
sahf
cmp
shl
insl
fisubl
mov
stc
mov
mov
mov
in
shl
repz
xchg
add
xor
jg
daa
daa
add
dec
in
sti
dec
clc
aaa
xchg
fdivrl
inc
leave
pop
xorb
or
dec
mov
les
jmp
inc
push
aam
data16
jg
dec
hlt
imul
sub
mov
inc
add
xchg
div
sbb
mov
fst
sahf
sbb
test
les
mov
pusha
or
mov
xor
dec
aad
fbld
jl
testl
lret
das
sbb
pusha
in
push
js
add
cltd
fisubl
ret
cmp
mov
inc
lret
adc
xlat
out
fwait
cld
lods
mov
pop
jl
stos
fnstenv
enter
or
or
cltd
mov
jbe
xor
pop
cld
jae
jno
mov
and
xor
add
rcr
in
inc
jmp
pop
lret
or
movsl
mov
or
pop
out
xchg
sbb
shr
lods
lahf
mov
xchg
lret
mov
repnz
into
mov
xchg
insl
and
icebp
arpl
fisttps
shlb
ss
inc
dec
or
into
add
mov
mov
fs
outsl
gs
pop
fnstsw
es
ficompl
mov
cld
sbb
cmpsl
cmc
mov
das
mov
call
sub
and
call
jnp
inc
sub
and
cmp
push
enter
push
cmpsl
sbb
xchg
pop
or
insb
inc
cmp
sahf
ret
push
push
dec
sub
in
test
adc
dec
xchg
iret
dec
dec
imul
insl
push
jne
xchg
and
ss
mov
mov
jb
jecxz
sti
out
jp
add
sahf
push
push
push
xor
push
pop
xor
pop
or
adc
sbb
ja
leave
mov
or
dec
pop
in
push
hlt
les
out
popa
push
in
outsl
mov
mov
or
inc
dec
bound
hlt
adc
xchg
or
mov
add
shll
loop
popf
push
imul
pusha
inc
ds
insb
sbb
dec
pushf
jae
dec
insb
sbb
ret
cmc
adc
and
and
ret
lret
dec
cmp
call
xchg
icebp
inc
pop
xor
adc
les
cmp
xor
inc
inc
mov
add
jbe
aad
sbb
mov
jns
enter
out
data16
dec
mov
jbe
dec
jle
outsl
lods
clc
mov
fisttpl
icebp
push
jle
jo,pn
cmpl
scas
jmp
sarb
xor
les
pop
mov
jecxz
aad
jae
clc
push
jp
sahf
push
popa
loope
pop
pop
ficoml
push
in
imul
imull
imul
das
inc
xchg
pop
cli
jecxz
push
xor
fbstp
loope
adc
push
aas
shll
sub
push
cmc
aad
push
cmp
fidivs
mov
cmp
jge
dec
pop
add
clc
mov
add
sbb
aam
or
mov
push
sub
enter
dec
jmp
dec
into
add
jl
pusha
popf
adcb
int
rorb
popf
rcrb
pop
or
xchg
dec
loop
ffreep
popa
xor
stos
cmpsb
clc
push
outsb
xchg
sub
sbb
fst
push
pusha
inc
std
adc
mull
jle
mov
sub
sbb
push
nop
jo
stc
repz
jb
fcmovnb
lret
ret
pop
movsl
jns
mov
arpl
aad
xchg
push
roll
fistpll
fldcw
ljmp
add
icebp
cmp
adc
jb
pushf
inc
test
data16
sbb
cwtl
pop
iret
aad
cmp
pop
cltd
mov
lahf
pop
cmpl
adc
fldt
enter
clc
lret
fdivr
jns
test
pop
es
test
pop
inc
push
js
je
rorl
out
push
ja
enter
sahf
and
insb
insb
fdivl
inc
lock
xchg
inc
inc
mov
lahf
inc
mov
add
sub
or
in
cmc
jne
jle
aas
add
mov
fsts
int
mov
mov
dec
cmp
popf
jmp
dec
int3
fcompl
int3
aam
repz
and
xor
pusha
movl
call
push
lcall
or
stos
pop
jge
int3
mov
pop
stos
or
xchg
fstps
adc
pop
mov
push
adc
inc
sahf
int3
inc
mov
or
mov
jle
arpl
cmp
inc
fiadds
jno
inc
pop
out
nop
sub
dec
push
push
ljmp
and
mov
push
inc
into
popa
sti
xchg
call
lock
icebp
add
leave
dec
xchg
lea
andl
hlt
out
outsb
xchg
fs
push
dec
cld
sbb
push
ljmp
dec
push
int
jae
xchg
mov
sub
adc
enter
or
fisttpll
and
outsb
mov
inc
jb
xchg
jne
int
push
or
lds
andl
sub
xchg
lds
aad
mov
adc
or
imul
test
mov
in
std
adc
push
mov
sbb
adcb
dec
out
repnz
push
push
sbb
mov
mov
dec
aaa
popf
testl
adc
or
inc
adc
jae
in
pop
jb
lcall
mulb
pop
mov
xchg
mov
jg
mov
in
out
push
fwait
and
push
dec
fbld
xchg
cmp
pop
imull
ret
sub
push
cmp
and
xor
addr16
inc
jae
sub
dec
or
mov
in
jg
mov
inc
mov
sub
inc
mov
repz
cltd
adc
ljmp
js
push
dec
cmp
hlt
inc
roll
push
mov
push
stc
out
inc
xchg
mov
movsl
rol
and
dec
jne
jl
rcrl
mov
insb
cmp
add
dec
inc
xor
mov
subl
mov
dec
in
mov
or
sub
inc
pop
mov
cmp
sbb
lret
pop
popf
out
or
cmc
and
mov
or
adc
fsubrl
test
faddp
xchg
ja
movsb
daa
cwtl
hlt
popa
aad
shll
mov
sahf
mov
rol
bound
push
jne
mov
and
sarb
es
mov
mov
pushf
or
dec
pop
mov
out
in
inc
cmp
mov
xor
sar
add
addr16
sbb
cmp
pop
push
adc
daa
jno,pn
fsubr
xchg
lahf
fwait
xor
in
scas
fwait
aaa
and
sbbb
mov
cs
add
mov
inc
incb
sub
loope
test
push
mov
push
imul
push
test
shlb
push
jge
or
mov
xor
lock
jmp
out
cld
pop
pop
add
icebp
pusha
insl
sti
xchg
leave
pushf
push
or
test
mov
pushf
mov
pushf
filds
cmpsl
clc
push
in
jl
stc
mull
into
sarb
push
jmp
mov
xchg
nop
pop
inc
test
dec
sahf
inc
mov
sbb
jae
push
enter
add
bound
push
jns
movsl
adcb
add
pop
mov
mov
jae
dec
jecxz
or
mov
hlt
add
adc
roll
push
inc
daa
lcall
aam
repz
mov
ret
pop
mov
loop
ljmp
loop
fs
sarb
dec
nop
insb
jbe
jle
lea
imul
icebp
dec
mov
xchg
jo
lods
lahf
loop
cmp
lea
dec
imul
les
repz
cmp
icebp
cld
sahf
ret
outsl
fbstp
inc
add
out
mov
dec
adc
callw
push
orb
imul
je
lods
mov
xor
or
sbb
loope
sbb
loopne
test
std
pop
ret
mov
or
pusha
or
adc
rcr
sbb
cmp
lcall
adc
out
fs
push
out
sbb
and
ffreep
add
mov
rol
sti
ficoml
sub
dec
iret
adc
xchg
xchg
fimull
lcall
imulb
push
mov
adc
or
mov
mov
jg
xor
daa
push
adc
js,pn
push
mov
test
mov
enter
daa
cmpsb
out
fcomi
mov
cmp
lock
daa
ds
data16
movsl
ljmp
mov
pop
xchg
lahf
xchg
mov
jbe
sbb
fcomps
testl
sbbb
ret
or
test
or
cltd
inc
imull
fidivl
dec
mov
negb
or
or
adc
pusha
scas
in
push
mov
incb
aam
test
cmp
dec
mov
movsl
adc
aaa
add
cmp
lds
cmc
ficoml
icebp
popa
mov
cmp
xor
push
pop
mov
and
ror
arpl
movl
test
adcb
inc
movsb
repz
mov
push
pop
popf
or
cli
cmpsb
les
nop
and
xchg
nop
push
and
loopne
mov
test
xchg
repnz
xor
inc
cld
jl
sbb
lahf
aaa
inc
push
mov
mov
pop
dec
test
inc
stos
in
adc
mov
sbb
adc
lods
mov
push
lods
jecxz
adc
sub
out
pop
inc
sub
mov
aam
test
into
xor
fdivl
xchg
test
in
jo
lret
insb
ret
cmp
fidivs
dec
inc
add
sar
ljmp
mov
movsb
cmpsb
mov
loop
xchg
mov
or
push
or
mov
insb
or
pop
in
lock
push
shll
xchg
xor
cs
icebp
mov
lock
mov
push
clc
xlat
ds
mov
lahf
inc
xchg
xchg
or
fwait
repz
stos
mov
orl
or
cmc
addr16
out
hlt
ret
popa
push
mov
js
lret
loopne
in
cltd
pop
adc
scas
cmp
mov
jns
cmp
xchg
adc
jnp
out
cld
in
movsb
sbb
xor
add
je
mov
jle
push
sub
or
inc
nop
inc
push
mov
pop
dec
testl
fisubs
ficoms
aam
push
iret
and
cmp
scas
fidivrl
inc
mov
xchg
lock
andl
sbb
sahf
in
lahf
dec
push
push
sbb
cmp
int3
pop
popa
add
cs
into
jl
xchg
int3
mov
sbb
or
ja
stos
test
push
xlat
cwtl
cli
cmc
leave
pop
cld
test
dec
xor
adc
cld
shrd
repnz
pushf
add
test
ret
mov
or
sbbl
cmp
imul
clc
scas
and
ss
jmp
arpl
inc
xor
inc
fisubs
in
lret
or
js
and
mov
fdivrl
stos
and
mov
sti
sub
imull
ret
sbb
test
mov
arpl
pop
cmp
faddp
sbb
outsb
int
test
dec
lret
dec
xchg
xchg
mov
int3
dec
scas
dec
push
fdiv
mov
mov
ret
mov
push
sub
mov
xchg
not
iret
lcall
nop
inc
jg
cmpsb
outsb
testb
outsb
sbb
xor
imul
das
sub
seta
stos
xchg
rcl
mov
in
inc
dec
test
movsl
jp
std
pop
fld
sub
xchg
stos
pop
mov
or
cs
add
jl
out
xchg
mov
nop
mov
inc
pop
dec
xorl
dec
les
bound
ret
push
mov
inc
arpl
xor
lds
pop
stos
jb
fdivp
int
fs
sub
inc
ret
lret
out
stos
dec
iret
lods
mov
aas
dec
enter
push
adc
fwait
jne
test
pushw
insb
push
or
add
jge
fldenv
sti
rolb
cmp
sbb
cltd
ret
dec
popa
lret
fsubr
mov
or
mov
jl
lret
sub
mov
loope
xchg
das
std
hlt
lock
xchg
add
imul
div
movl
inc
out
movsb
or
loop
not
dec
push
in
jbe
and
cmpl
out
lahf
js
outsl
incb
xchg
cmp
orb
or
inc
mov
inc
jge
mov
or
rorb
arpl
inc
cmp
and
fmuls
push
das
jo
mov
daa
icebp
out
adc
jnp
mull
lods
les
dec
rclb
jo
mov
sub
push
sub
popaw
das
test
dec
icebp
out
orl
push
sbb
js
mov
pop
adc
sbbl
adc
push
mov
not
jp
jp
arpl
aas
repnz
int3
add
pop
stc
adc
cmc
rorb
cs
mov
sbb
roll
mov
lahf
mov
js
fisubs
and
mov
sub
xor
mov
sbb
adcl
aaa
mov
push
das
iret
outsl
jecxz
dec
add
pusha
pop
addl
fstl
sub
jmp
adc
push
imul
rcll
xlat
or
cltd
pop
fmull
aaa
out
lcall
sub
aam
pushf
sub
pop
mov
jp
scas
out
mov
push
sbb
mov
jecxz
dec
movsb
mov
bound
pop
nop
idiv
adc
aam
test
sti
aas
ret
frstor
hlt
push
out
cmpsb
sbb
push
stos
hlt
pusha
xlat
and
cld
out
enter
xchg
aad
rcrl
aam
icebp
mov
ret
sub
je
inc
js
shlb
pushf
jnp
shrb
movsb
pop
aas
ds
and
in
cmp
das
mov
sub
jge
push
mov
and
movsb
mov
ficoml
int
pop
pop
clc
sbb
cmp
add
outsl
stos
out
cld
insl
sub
dec
inc
xchg
mov
or
out
movsl
pop
xor
cltd
sbb
loopne
pusha
mov
mov
gs
int
aas
int
push
mov
push
subb
nop
pop
or
lret
add
mov
mov
and
gs
jnp
pop
cmp
adc
cmc
mov
lods
push
outsb
imulb
sbb
out
mov
lahf
ret
adc
or
scas
into
mov
push
mov
cmp
outsb
pop
das
inc
mov
cmp
push
pop
push
arpl
xchg
loop
mov
fisubrs
sub
cmp
es
xchg
cld
ljmp
adc
cmp
mov
add
mov
mov
popf
pop
add
std
inc
fwait
stos
arpl
stc
in
iret
ljmp
int
in
cmp
into
out
jns
xor
fucomip
or
or
xor
and
int
int
push
or
or
adc
sbb
bound
sahf
or
jbe
push
add
jbe
sub
mov
dec
jne
inc
xchg
in
lret
push
imul
mov
add
mov
cmp
dec
jp
and
adc
loope
add
out
pop
mov
xchg
push
mov
sahf
inc
xor
adc
mov
cld
add
inc
fimuls
dec
in
inc
daa
xchg
js
inc
push
mov
cmp
adc
and
pusha
aaa
sbb
int
jns
adc
or
insl
mov
push
mov
ret
outsl
fstl
jb
mov
outsl
adc
insb
push
outsb
int
leave
sub
daa
mov
jnp
out
lods
mov
pushf
pop
sub
dec
sbb
push
xor
cld
pop
out
mov
lods
std
idivb
push
loopne
pop
jmp
push
mov
ror
sub
addr16
pop
add
out
lock
pop
inc
sub
mov
imulb
push
test
int
loope
and
rcll
in
fildl
jno
out
sbb
shll
jb
stc
mov
pop
sbb
cmp
cmpb
sarl
xchg
fdivs
push
ret
xor
xchg
mov
gs
push
dec
inc
mov
sub
mov
jecxz
push
adc
xchg
scas
jmp
xchg
or
xor
push
dec
loope
inc
insb
add
jle
in
shlb
imul
jb
mov
sub
and
loopne
and
inc
pop
adc
cmp
or
ret
mov
sbb
jg
lcall
and
iret
inc
int3
push
or
mov
pop
add
sahf
aas
gs
fs
jo
test
jnp
lret
sub
leave
stos
jl
xchg
push
cmp
arpl
test
movsl
cmp
mov
ds
jb
enter
jge
adc
adc
pop
loopne
add
mov
jne
mov
cmp
xchg
cwtl
insb
sti
push
sub
insw
test
pop
jae
push
imul
xchg
js
add
dec
lock
pop
jge
rcr
fcmovbe
mov
in
add
loope
sub
and
ss
adc
call
fdivs
cmc
fists
arpl
and
jge
rorb
mov
std
es
inc
push
loope
repnz
adc
xchg
addr16
xchg
insb
lret
repz
push
lcall
push
test
pop
cmp
xchg
mov
jns
cmp
call
das
mov
jnp
aaa
cmp
xor
sti
fbstp
scas
outsb
cmc
jno
mov
xor
lea
in
mov
push
xchg
lret
int3
and
fldt
addr16
aas
inc
and
xor
mov
inc
sbb
cmp
bound
icebp
out
out
jne
add
sbb
and
dec
xchg
aad
inc
cmpsl
ljmp
fmull
jg
mov
sbb
inc
cmpsb
cld
cld
push
fwait
xchg
notl
xchg
mov
jbe
jne
aam
fisttps
sub
xor
xchg
dec
lods
ficompl
lock
sub
pop
mov
mov
movsl
xor
sbb
cli
sub
neg
sub
cltd
clc
mov
push
lcall
addb
into
cli
jge
sbb
xor
mov
cli
dec
push
or
and
jecxz
je
fnsave
test
mov
rclb
jns
mov
andb
xchg
rcrb
cs
loope
fcompl
ficoms
push
mov
xor
pusha
das
pop
push
inc
xor
adc
out
popf
add
orb
imul
sub
fnstenv
bound
push
lds
les
outsb
enter
loope
sahf
sub
sbb
out
pop
fiaddl
repnz
cmp
movsb
addl
and
scas
cmp
roll
outsb
add
fstpt
add
sarl
sbb
adc
sbb
fst
scas
ficoms
scas
cld
sub
mov
in
mov
mov
mov
jmp
add
sahf
loope
in
cld
loop
call
sbb
adc
in
inc
mov
mov
sbb
ja
pop
dec
sub
dec
cmp
sbb
adc
sub
add
inc
cmp
xor
push
sbb
jge
mov
dec
jg
add
enter
push
ret
cmp
in
mov
cmp
loope
adc
stc
adc
je
pop
sub
ds
imul
mov
and
jge
mov
adc
sub
pop
imul
xchg
mov
sti
pop
mov
mov
cmp
xorb
mov
in
pop
mov
arpl
sub
adc
inc
jnp
test
pushf
shll
sbb
sub
testb
mov
out
cmp
jmp
inc
cmp
jp
pop
and
cs
shll
push
jle
cmp
push
xchg
mov
mov
sbb
mov
xchg
xor
sub
inc
gs
testb
lods
mov
push
mov
jg
mov
mov
push
popa
lods
sbb
cmp
loop
fwait
cmc
pusha
push
sbb
jl
and
xor
push
inc
in
mov
data16
loopne
outsl
mov
shll
idivl
lret
mov
push
sub
in
hlt
cmp
xor
jecxz
sub
inc
sbb
mov
mov
lods
mov
js
orb
icebp
fcom
xlat
add
outsl
jge
outsb
clc
ja
lret
or
jno
daa
push
and
xor
push
adc
mov
in
sbb
hlt
push
and
popa
push
add
cwtl
jge
sahf
fcomi
sbb
rorl
mov
jge
icebp
cmp
xlat
jne
lcall
data16
lock
stc
sub
sbb
dec
shrb
popa
mov
fsubr
cmp
lret
cli
or
dec
scas
push
insl
mov
adc
push
stos
adc
andb
add
xchg
ljmp
mov
xchg
mov
push
jecxz
sahf
pop
pop
sub
loopne
and
call
cmp
fwait
xchg
in
mov
andb
pop
sub
jbe
xchg
xor
xor
sbb
cltd
jns
push
rorb
dec
dec
lcall
das
adc
pop
or
jae
pushf
js
mov
dec
push
dec
push
pushf
insb
mov
lea
mov
icebp
or
lret
popa
aad
sub
je
jnp
or
in
mov
mov
call
dec
sti
fstpl
insb
push
jl
jecxz
int3
inc
mov
sub
lret
mov
pop
cmpsb
sub
push
mov
cmp
insl
sahf
imul
jb
andl
push
jmp
xchg
mov
mov
and
adc
repnz
jo
mov
das
lret
fidivrs
out
div
or
iret
dec
and
mov
sub
test
xorl
jbe
xchg
mov
mov
mov
xor
adc
push
jecxz
push
sbb
pop
cmp
xchg
xchg
dec
ret
sub
shll
add
rolb
pop
mov
insl
push
aam
mov
xor
cmp
cmpsl
xchg
pop
aaa
cmpl
test
mov
insl
adcl
ds
ret
mov
sti
cld
pop
dec
or
in
popf
loopne
push
pop
or
lcall
lea
loop
pop
xchg
sub
popa
sbb
mov
loopne
pop
push
ss
inc
push
xor
rol
aam
bound
cmp
leave
inc
shll
out
jle
stc
fisubl
out
or
negl
jbe
into
call
sbb
shrb
subb
mov
in
mov
imul
shlb
push
aaa
mov
xchg
pop
mov
data16
push
pop
push
frstor
push
xchg
jae
lret
xchg
jo
and
jg
out
cmpsl
push
sbb
cs
xchg
xchg
in
sub
aas
rcrb
mov
xor
lahf
add
cmp
cwtl
push
mov
stos
scas
push
add
into
cmp
jmp
test
sub
fcomps
xchg
cmpsl
and
dec
push
mov
mov
jo
dec
mov
sub
aaa
stos
fisubs
xor
xor
mov
in
fisubl
lcall
push
dec
xor
push
imul
xor
test
push
cltd
mov
test
pushf
or
pop
or
rcrb
jne
xchg
cmc
fistl
mov
rcr
inc
xchg
push
jnp
sbb
sbb
xlat
test
data16
mov
cld
sub
lods
in
add
xor
sti
jo
cmc
insb
mov
int3
or
cmpsb
out
mov
lea
das
xchg
das
stos
sbb
inc
cltd
add
pushf
and
insl
dec
or
outsb
movsb
outsb
out
movsb
arpl
mov
or
pushf
jmp
xlat
clc
cs
jge
scas
push
cmp
int3
adc
sbb
mov
rcrb
jmp
ds
pusha
mov
pop
jecxz
outsb
lods
or
jne
rorb
cmp
cltd
cmp
mov
js
fmull
lahf
popf
stos
pushf
jp
jbe
push
jo
std
sub
cmp
jnp
movsl
mov
mov
out
mov
je
mov
lcall
orb
mov
jnp
mov
pop
fisttpll
mov
pop
insb
arpl
sahf
movsl
popaw
sbb
mov
lock
outsb
bound
test
cmp
in
loopne
and
mov
addr16
or
hlt
mov
mov
xor
js
lret
cmp
sbb
or
cmpl
mov
mov
jae
rol
add
sahf
inc
std
sahf
pop
mov
mov
inc
lock
dec
lcall
loopne
stos
adc
addr16
sub
sarl
push
jp
xchg
jmp
push
mull
dec
and
stos
je
push
adc
aad
stos
out
vandps
rorl
int
pusha
in
jmp
imul
sbb
pop
cmp
xor
frstor
shl
cli
popf
aas
rcrl
or
cmpsb
pop
jmp
addb
fadd
pop
popa
pop
lret
or
sarb
inc
mov
push
push
out
lds
and
pop
xchg
stc
test
xchg
push
sub
sub
sub
cmp
movb
jbe
icebp
adc
mov
cli
test
cltd
push
sub
jecxz
mov
jb
iret
clc
adc
adc
mov
das
push
sub
sub
je
jp
fcoms
out
sub
imul
xchg
addr16
call
sbb
adc
mov
and
mov
cmp
inc
lret
lret
jp
into
push
inc
mov
ljmp
out
dec
mov
mov
or
jecxz
in
jns
int
mov
aas
push
call
cmp
lahf
mov
cltd
cmp
push
jge
dec
aaa
and
insb
mov
roll
sub
xchg
mov
sub
jb
scas
addr16
adc
push
out
mov
int
add
xchg
mov
push
subl
add
mov
clc
sub
loopne
mov
adc
push
and
cmp
stos
mov
push
lea
push
and
push
popa
mov
sbb
out
arpl
pop
sub
fildl
lcall
jbe
in
inc
lea
imul
dec
pop
rcr
mov
cli
cltd
sbb
in
add
or
test
out
xchg
js
sti
fistpll
add
nop
imul
dec
sub
mov
cmpsl
lret
leave
mov
dec
loope
punpcklbw
cltd
repnz
jns
stos
push
pop
sbb
clc
addr16
jmp
xor
push
cmp
pushf
inc
push
push
add
sbb
lock
add
test
rolb
loop
clc
pop
xlat
mov
cmp
jno
xchg
cmpsl
test
adc
jmp
data16
xchg
test
and
mov
add
ss
add
xchg
adc
dec
cmp
cmp
add
inc
pop
lods
stos
mov
adc
or
repz
pop
notb
push
adc
cmpb
into
call
or
jns
je
ret
cltd
sahf
in
adc
repz
daa
dec
enter
lock
or
imul
pop
push
hlt
push
in
loop
lods
je
pop
fcompl
cmp
xor
and
into
pop
dec
inc
stos
in
push
stos
fs
fldenv
shll
rclb
out
cltd
xchg
mov
cmp
pusha
test
popa
aas
out
mov
pop
pop
push
xor
popa
outsl
mov
adc
mov
orl
jmp
jge
add
xorl
cltd
xor
inc
pop
sbb
fdivrp
mov
cmp
orl
shrl
mov
sbb
movsb
ds
shll
mov
add
xchg
sar
filds
mov
sbb
pop
sub
lds
out
outsl
cmpsb
xchg
add
sahf
aad
jb
add
je
xorb
shlb
add
lcall
cmp
cltd
fs
inc
cld
xor
ss
addr16
cmp
aad
push
aas
inc
adc
sbb
pop
and
in
lret
inc
movsl
jns
test
jle
or
in
cmp
bound
mov
mov
inc
mov
mov
movsl
nop
pop
shl
jge
sub
xor
negl
push
lret
pop
adc
add
push
xchg
ret
jmp
cvtps2pd
mov
jb
push
dec
bound
mov
push
xor
dec
xor
imul
push
mov
push
pop
dec
addr16
sbb
lret
or
cmp
nop
fdiv
fstp
cmpsb
xchg
fs
pushf
mov
out
test
mov
loop
jp
sbb
scas
data16
mov
enter
lret
sub
sub
daa
rolb
inc
fldenv
ljmp
xchg
mov
xchg
lea
icebp
in
sub
sub
rcrb
and
fsubrl
stc
clc
push
fwait
pop
sti
pop
xor
sub
mov
inc
aam
mov
pop
or
mov
bound
or
sub
adc
mov
divl
jg
adc
ja
and
fld
sbb
mov
imul
test
ret
adc
mov
test
or
xchg
push
and
lcall
outsl
pop
xchg
jle
adc
iret
pop
mov
pusha
cli
hlt
xchg
in
icebp
test
push
add
cmpsl
cmp
inc
xchg
inc
xchg
je
jmp
das
adc
cmp
movsl
rcrb
push
bound
out
in
push
out
dec
inc
mov
movaps
je
nop
or
repz
stc
popl
jo
jl
out
mov
lret
mov
movsl
dec
or
mov
lock
or
out
mov
xchg
aad
es
pop
iret
cwtl
stos
lods
xor
int3
bound
dec
xor
mov
xchg
addr16
mov
sbb
mov
inc
rclb
push
andl
push
out
jg
add
and
add
jo
lds
lods
gs
int
jae
jo
fsts
jnp
popa
cmc
imul
add
cli
mov
sbbl
inc
xchg
xchg
inc
jbe
push
daa
dec
shll
test
in
in
pushf
ds
mov
mov
mov
dec
testl
or
mov
xchg
je
ficompl
adc
xchg
push
jp
pop
in
xor
daa
lret
jg
or
sub
or
mov
int3
icebp
or
ljmp
lahf
dec
mov
push
and
mov
mov
aam
cmc
or
push
dec
scas
adc
sbb
decb
icebp
inc
pusha
in
iret
mov
sub
lret
lock
push
inc
add
push
ss
cwtl
mov
add
inc
inc
lods
add
mov
sub
lock
int3
inc
daa
imul
insb
fildll
xor
in
cmc
fisubl
and
imul
xchg
push
dec
sbb
icebp
mov
addr16
add
mov
repz
shlb
movsb
arpl
lods
dec
lahf
xor
push
pop
scas
inc
or
inc
cs
mov
xchg
mov
mov
lret
inc
xlat
in
inc
add
xchg
ss
push
fcompl
mov
jg
outsb
test
out
add
jmp
adc
sbb
faddp
adc
inc
lret
fbstp
aaa
add
out
jle
adc
cli
shl
jmp
in
pop
push
daa
lods
pop
addr16
dec
mov
outsl
jb
les
ret
mov
jo
fisubl
jno
test
cmp
inc
mov
mov
pop
inc
mov
fcomip
sbb
insb
sbb
ljmp
outsl
loopne
jns
or
pop
add
out
jmp
mov
pop
mov
popf
sarb
push
andb
add
roll
mov
sub
jmp
mov
mov
xor
aad
xor
and
sbb
jo
les
add
in
addl
or
test
lods
mov
sub
xchg
cmc
jge
and
push
test
dec
cmpsl
and
mov
outsb
pop
aam
in
cmp
push
scas
push
icebp
lahf
fcompl
pop
mov
jmp
fldcw
in
lock
pop
add
out
sbb
fnsave
fidivrl
xchg
push
fwait
jle
rcll
push
jmp
ljmp
das
int3
popl
xchg
andb
mov
pop
stc
pop
push
movsb
mov
add
cmpsb
fstpl
ljmp
bound
adc
out
xchg
xchg
xchg
rorl
jle
popa
mov
rcll
xor
cltd
test
sbb
and
jno
mov
popf
mov
push
sti
and
pop
sbb
lahf
ja
jmp
test
xor
in
mov
pop
int3
dec
dec
mov
ja
sbb
jg
shl
cmp
dec
in
lcall
faddl
xchg
inc
int
push
stos
fnstcw
cltd
stos
pushf
adc
jecxz
adc
push
xor
fadds
lods
rolb
lahf
popa
mov
mov
rorb
adc
bound
insb
push
scas
pusha
movsb
cld
dec
movl
xchg
adc
popf
ss
jmp
out
inc
into
es
dec
into
mov
fwait
data16
mov
adc
iret
pop
pop
pushf
test
sbb
iret
xchg
and
aad
sbb
jge
into
stos
pop
cmp
mov
shlb
pop
int3
cltd
mov
mov
aam
aad
adc
and
dec
or
fwait
lret
inc
cld
out
xchg
xchg
aam
call
xchg
pop
jae
mov
shl
subb
popf
test
jmp
or
jb
repnz
in
cmp
shlb
cmp
add
packuswb
xor
call
vcmpps
arpl
xchg
in
xchg
jle
test
testl
ljmp
test
insl
add
in
add
xchg
test
add
dec
add
add
stc
xchg
mov
mov
gs
and
and
aas
cmp
mov
mov
lea
and
jae
into
sbb
jne
imul
inc
pop
enter
xlat
mov
sub
ss
mov
or
rolb
dec
add
xchg
test
sub
data16
sub
pop
mov
or
mov
je
iret
movsl
sbb
jbe
or
cmpsl
jl
xor
push
cwtl
nop
test
lds
mov
pusha
cmp
mov
jle
xchg
ss
mov
dec
mov
fsubs
bound
pop
roll
or
adc
adc
xor
mov
adc
inc
lods
std
sti
repz
inc
test
fs
jge
and
dec
pop
stos
pop
rclb
mov
cmp
test
clc
sub
rcr
movsl
fidivrl
imul
or
mov
cld
cmpsl
mov
sub
movsl
fsubs
cmpsl
flds
out
mov
lods
cmp
jae
in
imul
inc
int
in
xorl
cmp
loop
cmpsl
stos
adc
out
test
iret
cmpsb
lea
jecxz
add
dec
iret
inc
lret
test
jns
psubq
pop
sub
inc
pop
dec
faddp
notb
lahf
aas
outsb
xchg
inc
outsl
into
hlt
icebp
fmull
cmc
inc
loop
sbb
inc
mov
xor
mov
jns
pavgb
fstpt
cmc
mov
loope
mov
xlat
xor
or
jno
jae
push
sub
aas
mov
jmp
lret
test
pusha
pop
jl
jbe
lret
test
sub
xor
jl
xlat
adc
mov
xchg
and
rcll
cwtl
sub
inc
cltd
sbb
xor
sbb
sbb
ljmp
repnz
push
mov
ret
mov
sub
lds
sub
mov
xor
aaa
lahf
jno
xchg
scas
xor
push
aam
cltd
mov
sub
jmp
les
sub
push
pop
cmpsl
aad
int3
inc
sbb
mov
scas
mov
setp
cwtl
mov
rorl
aas
dec
fstpl
iret
and
push
stos
es
xchg
push
sar
shll
addr16
scas
es
jp
outsl
mov
lods
mov
add
shr
mov
pop
xor
xchg
and
cmp
xchg
xor
nop
repz
std
mov
pop
and
mov
mov
dec
sub
mov
cmp
jmp
or
fsub
inc
ret
outsl
and
adc
inc
sub
addr16
pusha
sbb
lods
cmp
sub
rcl
cs
fs
cmp
in
lret
cmp
lods
fmul
shlb
ror
xchg
jecxz
or
sbb
push
fistps
pop
xchg
mov
jge
push
adc
outsb
mov
or
xor
out
dec
nop
rolb
mov
push
int3
call
outsb
lods
xchg
fst
jo
xlat
lret
sti
repnz
aam
sarb
dec
sub
imul
inc
lea
les
daa
rorl
mov
and
sub
int
jo
lret
jmp
ljmp
movsb
loopne
arpl
ds
hlt
scas
fists
pop
or
xchg
or
mov
test
jl
cmp
cmp
mov
adc
or
mov
int3
mov
fs
xor
pop
mov
jle
js
adc
cmp
inc
dec
cli
or
push
decl
jno
inc
mov
int3
mov
cmp
mov
cwtl
mov
divl
jge
inc
xchg
mov
jmp
add
popa
outsb
pop
fwait
dec
dec
and
sub
bnd
and
mov
and
jne
inc
adc
mov
mov
fdivrs
pop
addr16
push
cli
lods
and
xchg
sbb
leave
dec
pop
and
add
cmp
pushf
mov
stos
add
cmpsb
cmpsb
test
inc
cmp
push
pop
xchg
or
sub
dec
mov
aad
adc
or
arpl
movsl
clc
xchg
iret
xchg
nop
jp
outsb
psubusb
cmp
sbb
ja
ds
aad
push
mov
out
addr16
and
aaa
dec
and
imul
add
movsl
jae
js
jb
clc
shrb
mov
int3
or
pop
hlt
outsb
sub
xor
add
jae
lcall
cld
xor
add
hlt
mov
pusha
aaa
lds
leave
or
je
out
cmp
dec
dec
cmc
inc
out
jno
pop
xor
sbbl
notl
loope
dec
leave
les
cmpsl
mov
mov
mov
add
xor
cltd
push
xchg
push
fdiv
call
cltd
push
inc
pop
adc
ret
add
movsl
mov
lret
dec
pop
adc
movsl
mov
push
fdivs
cs
xchg
ret
xchg
xchg
sub
jbe
jl
out
ret
cs
leave
cs
out
add
pop
xchg
mov
fldl
fistl
jecxz
cli
rolb
mov
jo
imul
sarl
cmc
call
jl
mov
xor
movsl
pop
add
rolb
dec
push
lahf
mov
push
push
push
adc
mov
insb
add
stos
pushl
mov
mov
leave
bound
mov
cltd
pop
das
xchg
cld
lret
rorl
mov
xor
mov
pop
dec
movsb
loope
jae
ficoml
dec
add
arpl
add
add
bound
xor
mov
test
mov
out
push
cli
or
sbb
lret
mov
cltd
dec
pusha
cmp
jae
repz
insl
add
pop
dec
lods
and
js
xchg
popf
add
out
or
mov
dec
sbb
xchg
or
daa
je
xor
mov
shrb
or
xchg
mov
insb
dec
les
cmpb
out
test
adc
push
add
sbb
jne
pop
push
pop
inc
int
dec
sub
mov
mov
mov
pop
jg
nop
test
outsb
js
out
cli
mov
test
aas
scas
mov
aaa
dec
pop
lret
push
popa
push
push
cmp
mov
in
pop
out
add
popa
insl
imul
cltd
add
sbb
test
add
xchg
mov
pop
jecxz
lret
loopne
loopne
xor
ret
lret
xor
jp
decl
mov
out
inc
cmpsl
mov
jae
pop
or
and
add
movsl
sbb
push
int3
loope
cltd
hlt
sub
xor
mov
push
mov
pop
fmull
inc
or
fistpl
sub
repz
iret
jmp
test
and
ds
add
pop
push
lret
test
imul
addl
xchg
xor
popf
pop
dec
fs
insl
jne
mov
mov
sub
fdivrl
sub
lods
stc
sbb
mov
pop
pop
mov
stos
cmp
cmp
push
and
repnz
pop
mov
ret
mov
imul
xchg
in
add
cs
lcall
dec
sub
jae
sbb
jbe
out
xchg
repz
or
stc
icebp
aad
shlb
aas
inc
pop
fs
popa
or
xchg
push
js
movsl
insb
out
or
in
adc
adc
push
jl
repz
pop
fidivrl
push
pop
test
mov
inc
add
inc
scas
pop
test
test
aam
xor
lock
add
negb
loopne
in
or
mov
sub
cmovp
je
xlat
xor
lcall
cli
xor
lea
mov
jecxz
test
xorb
jns
pop
movb
push
push
add
ret
lret
pop
xor
inc
mov
push
addb
lea
mov
fs
daa
icebp
enter
sti
insb
mov
aad
inc
call
mov
add
push
xlat
dec
cld
xchg
lods
nop
inc
sbb
cmp
es
jb
xor
clc
push
sbb
aam
mov
out
adc
out
xorb
pop
jl
jmp
mov
das
cmp
int3
mov
in
and
in
daa
outsb
ret
cmpsb
and
xchg
aad
pushf
cmpsb
or
sahf
fcoml
xchg
je
lcall
pusha
lds
pop
aas
push
mov
push
xor
ficoml
inc
aad
fst
mov
xor
cmp
xchg
cmp
jl
cmp
shlb
adc
jecxz
dec
iret
out
add
inc
aaa
sahf
inc
jbe
add
daa
mov
hlt
dec
pop
aaa
cmc
cmp
loop
addl
mov
jne
sbb
mov
or
lds
hlt
add
rorb
fisubs
jno
cmp
outsb
lret
xchg
gs
imul
xchg
mov
pop
cmpxchg
insl
fstl
sbb
push
or
or
inc
movsl
sbb
push
sarb
add
xchg
mov
sbb
rcr
mov
ljmp
sub
xchg
adc
xor
popa
es
sbb
jp
stc
fldt
dec
shlb
add
cs
shll
popa
xchg
xchg
in
xor
mov
rorb
stos
xor
jl
lret
cmp
xchg
dec
roll
or
mov
rorb
xor
adc
fidivrl
gs
movsl
and
rcl
les
mov
lea
les
cmpsl
lret
and
push
dec
mov
adc
test
cmp
inc
pop
xchg
xlat
jns
std
hlt
pop
push
daa
or
and
jle
mov
mov
lret
fcmovb
sbb
xor
mov
movsl
in
clc
int
or
add
out
fucomi
adc
inc
jae
call
xlat
xor
fldenv
lods
pushf
mov
shrl
xor
push
xor
sub
fisttpll
lods
cmp
xor
cmp
jmp
out
sahf
pop
inc
cli
xchg
pop
jo
pop
mov
std
jne
or
adcl
or
dec
cltd
repz
or
imul
jnp
imul
ja
bound
push
mov
dec
mov
in
cmp
mov
cmp
fdivr
pushf
mov
sbb
scas
pusha
mov
add
pop
mov
mov
or
mov
or
divl
adc
and
popa
sarb
cld
loope
enter
repnz
scas
cmpsb
lds
adc
ss
sar
lahf
addr16
flds
mov
and
mov
or
mov
push
adc
loop
jl
or
sbb
cmp
pop
adc
sbb
jbe
outsl
and
push
fidivrl
xor
push
loop
adc
mov
adc
test
roll
xchg
pop
pushl
shlb
pop
push
lahf
repz
sbb
test
push
cmc
in
lret
lods
mov
xchg
testl
jle
sbb
jae
mov
test
cmp
mov
cmp
cwtl
pop
jns
mov
lock
daa
xchg
arpl
mov
sahf
sets
sahf
std
fnstenv
outsb
jns
lea
and
popa
stos
test
jg
fucomip
or
add
mov
cs
xchg
sub
repnz
pop
pop
and
mov
mov
mov
iret
movsb
push
jo
or
fwait
push
cs
xchg
pop
stos
inc
xor
dec
lret
pushl
rclb
sbbl
test
jnp
pop
push
xor
js
mov
dec
ja
cs
push
mov
mov
fiaddl
mov
push
pop
mov
jnp
or
test
mov
jg
int
sub
rorl
push
shll
adc
dec
jecxz
stos
aas
fldenv
fsubl
pop
inc
adc
das
jno
or
jnp
inc
je
test
xchg
shll
sub
pop
mov
push
adc
mov
mov
inc
sbb
lods
mov
cmpsl
push
xchg
pop
xor
pusha
dec
mov
sub
pop
pop
xor
and
shld
push
jne
test
sbb
mov
inc
pop
shrb
pop
jnp
pop
iret
in
shlb
cwtl
xlat
xchg
inc
shl
rorl
shl
pop
xor
xchg
stc
mov
pop
scas
sbbl
sub
in
jo
movsl
adc
dec
repnz
and
ret
pushf
ret
mov
pop
sbb
add
jnp
divb
mov
testl
and
xchg
jge
sub
repz
pop
pop
push
in
insb
jnp
lcall
test
xor
rcrl
push
push
sub
push
cmp
and
loope
adc
sub
nop
pop
adc
addb
orb
xchg
push
pop
arpl
movsb
xchg
out
flds
lods
xor
xchg
addl
pop
jbe
push
aas
mov
lock
push
stos
dec
int3
inc
inc
pop
xor
add
lret
dec
sub
sbb
and
dec
xchg
pop
out
inc
pop
inc
mov
lods
addr16
jb
fmull
adc
sub
pop
add
or
out
mov
addb
xor
stos
add
xor
mov
mov
sbb
les
mov
rcll
sub
scas
pop
cmp
in
push
test
xor
inc
in
cmp
xchg
popa
sub
cmp
mov
push
pop
add
mov
dec
xorl
pop
enter
fisubrl
insb
cs
addr16
lock
push
in
dec
shrl
dec
lahf
ss
nop
insb
dec
dec
loope
scas
push
xchg
out
cmp
repnz
xor
inc
pop
jnp
jg
sbb
jnp
or
pop
mov
ret
rorl
cmp
lea
mov
idivl
and
add
clc
out
pop
inc
fdivp
inc
scas
test
pusha
dec
ficoms
xchg
jle
add
pop
rcrl
ja
jge
fildl
mov
aaa
les
pop
fidivs
test
mov
leave
clc
adc
jno
inc
js
insl
jbe
cmpsb
push
xor
inc
xorl
ret
xor
fisubl
add
rclb
fstpl
cmp
rolb
addr16
mov
mov
dec
dec
xchg
mov
loopne
int3
popf
xor
outsl
and
xchg
test
rcl
mov
test
test
sub
mov
add
jo
xor
pop
mull
cwtl
or
outsl
adc
or
fld
in
sbb
pop
addr16
stos
enter
pop
mov
out
pop
sub
mov
cmc
shrl
repnz
xchg
lds
repz
mov
dec
mov
and
mov
aad
jne
aaa
cwtl
out
xchg
cmpsb
mov
ret
sbb
pop
push
std
jns
or
push
scas
std
mov
mov
adc
outsb
sbbl
or
mov
push
xor
insl
mov
dec
and
pop
in
and
iret
mov
adc
cli
repnz
ret
arpl
and
loopne
sbb
xor
mov
inc
int
ljmp
lock
push
ret
cli
rclb
pop
out
ds
lea
outsl
sbb
jno
mov
movsl
aaa
outsb
test
cmpsb
sbb
sbb
adc
xchg
bound
sbb
fwait
adc
xor
fimull
cmp
sbb
sub
mov
fstpl
dec
test
data16
push
mov
arpl
adc
je
mov
sub
xor
mov
ljmp
pop
mov
lret
pop
lahf
mov
imul
shlb
jae
fcmovb
hlt
addr16
inc
out
imul
cli
lret
dec
shlb
mov
xchg
and
mov
testb
mov
out
pmaxsw
lods
cmp
and
sub
aam
fimuls
pop
mov
mov
sub
test
movl
test
and
and
shrl
sub
or
das
xor
and
inc
scas
cld
pop
scas
stc
je
dec
stos
push
pop
icebp
bound
nop
xlat
outsl
add
rcll
and
xor
mov
outsb
cld
xor
ret
or
ficoml
jae
cmp
ja
shll
leave
cmp
cmp
mov
sub
outsb
add
mov
push
out
aam
mov
inc
or
mov
psubq
mov
gs
sti
cltd
out
jae
rol
fldcw
ljmp
sbb
cmp
aas
mov
cmpsb
mov
jo
mov
and
and
aaa
cld
xchg
mov
xchg
pop
imul
pop
popaw
xor
jb
mov
int3
mov
rep
popa
stc
sbb
rorb
lea
in
data16
cmp
pop
lods
jl
mov
push
jp
fbld
adc
into
in
push
cmp
sbb
sbb
add
icebp
mov
iret
outsb
ljmp
cmp
inc
pop
mov
jno
sub
sub
loop
add
xor
xchg
lret
movsl
mov
push
mov
shll
or
lock
mov
jg
lretw
arpl
xor
mov
repnz
xchg
popf
dec
rclb
and
and
jg
les
jl
bound
shll
imul
and
sub
test
mov
shrb
hlt
cs
inc
out
orb
pop
mov
ljmp
dec
icebp
icebp
jo
add
cld
push
or
hlt
or
les
xchg
leave
pop
push
push
mov
idivl
dec
sub
out
adcl
pop
outsb
mov
mov
xchg
dec
in
cmpsl
cwtl
inc
je
cmp
push
bound
dec
and
in
cmp
push
rolb
mov
mov
call
ja
mov
insb
inc
int
outsb
aas
adc
sbb
cmc
xor
and
xor
xor
or
sub
xor
mov
stc
seta
ja
dec
mov
mov
out
push
dec
out
daa
clc
add
aas
cmp
push
cwtl
and
dec
push
cld
mov
jno
sbbb
push
xchg
ja
inc
jecxz
cwtl
mov
cmpl
push
pop
lea
push
mov
sub
pop
mov
hlt
jb
repz
mov
in
dec
loope
aam
lcall
scas
rcrb
ja
jnp
cmp
adc
cs
or
test
push
sub
adc
inc
mov
push
mov
mov
int3
daa
fcmovnu
and
mov
sbb
pushf
pop
cmpsl
pop
stos
out
gs
pop
popf
mov
jae
loopne
out
mov
mov
aad
out
mov
mov
fisttpl
cmc
inc
jb
int3
movsb
call
and
mov
xor
sub
push
test
adc
dec
in
fs
sahf
sbb
jnp
out
dec
movsb
aam
sbb
xor
sbb
cli
ret
cmc
pop
pop
add
mov
aam
sbb
sub
jo
repz
fs
xchg
test
cmpsb
xor
jmp
xchg
adc
and
dec
sub
jp
jge
push
lret
cmc
mov
cmc
push
adc
add
ds
aaa
inc
adc
mov
fwait
add
insb
mov
repz
sbb
insb
sbb
dec
pop
or
inc
loopne
fnstsw
test
in
inc
popf
jbe
pop
cmp
cmp
daa
outsl
cmp
in
cltd
movsb
inc
sub
movl
or
das
adc
in
add
sbb
inc
fbstp
arpl
sbb
pop
int3
test
mov
loopne
loop
sar
lret
out
xlat
out
mov
cli
mov
fs
pop
push
xchg
sarl
orl
stc
es
roll
les
adc
hlt
sub
sbb
pop
add
add
aam
outsl
jbe
cmp
cmp
xchg
pushf
enter
scas
outsb
inc
inc
clc
dec
xor
lcall
call
sbb
stc
repnz
sub
xchg
in
push
inc
jp
movsl
mov
pop
xor
outsb
lds
test
lock
jno
xlat
lret
jg
rcrl
xor
aam
cmpsl
in
call
lret
sbb
and
xchg
ficompl
clc
jnp
jecxz
movsb
stc
pop
les
and
mov
inc
sahf
add
js
jne
fnstsw
test
mov
sub
push
dec
lock
add
jmp
inc
pop
xor
shll
daa
aam
icebp
xchg
ficoms
cmp
shl
push
test
popf
dec
sti
negb
leave
adc
scas
ljmp
add
jo
cmp
adc
fwait
rolb
fs
subl
fwait
rolb
mov
scas
pop
pop
repnz
or
popa
add
jmp
jl
ret
rcll
push
imul
and
rorb
pop
insl
lret
sub
or
or
movsb
in
xorl
stos
xchg
inc
repnz
cmp
fisubs
add
in
pop
inc
sti
and
inc
imul
and
mov
xchg
nop
push
xchg
mov
bound
mov
dec
hlt
cmp
push
mov
or
mov
add
push
test
or
or
sub
ja
fisubrs
dec
sbb
mov
mov
cmp
repnz
cmpsb
jge
jnp
into
adc
aad
jg
fwait
xchg
outsl
data16
mov
ljmp
movsl
ljmp
push
sbb
and
jne
mov
popf
and
inc
scas
xchg
mov
leave
fwait
fwait
es
pop
or
sub
lock
inc
or
pop
clc
push
xchg
mov
lock
sub
push
and
cmp
dec
dec
add
cmp
ret
jb
cld
std
leave
lock
mov
jecxz
idiv
leave
sbb
cmpsl
rolb
jg
int
shrl
or
sub
add
pop
in
dec
jle
mov
into
movsl
outsl
repz
stos
dec
pop
pop
lahf
ds
bound
inc
mov
pop
sub
mov
mov
fbld
push
jg
cli
psubb
and
repz
cmp
xchg
nop
cmp
stc
or
testb
roll
push
push
rcrl
sub
jae
addr16
jp
adc
jo
xor
jge
shrl
mov
arpl
fstpl
dec
shlb
push
or
adc
jnp
push
js
addr16
and
gs
mulb
push
jp
jmp
sub
fsts
and
xchg
xchg
inc
mov
ss
mov
inc
cmp
jns
push
test
es
inc
push
js
dec
pop
jmp
fsubrl
outsl
scas
mov
and
sbb
mov
pop
cmp
fwait
divb
rcrb
in
dec
mov
in
pop
jp
fwait
mov
inc
xchg
jne
add
int3
shlb
sti
push
sbb
xchg
or
adc
into
sbb
dec
and
je
or
test
loop
add
adc
insb
lds
dec
sub
xchg
xchg
push
add
pop
lds
out
inc
xchg
hlt
push
ja
push
sarl
pop
cltd
setne
stos
es
cld
mov
iret
aad
push
lock
mov
xchg
or
lods
dec
dec
xor
pop
fwait
repnz
fldcw
mov
jnp
clc
jne
rorb
iret
adc
inc
dec
mov
in
and
lcall
aas
sbb
aam
or
jmp
das
pusha
imul
lods
or
lds
js
add
sbb
fisubrl
mov
rcl
fmulp
inc
lock
int3
fistpl
icebp
mov
jge
clc
test
inc
cwtl
fildll
outsl
rorl
push
inc
cmpsl
adc
imul
lods
add
cmpsl
ja
mov
sbb
mov
out
inc
pushl
mov
adc
jmp
stos
out
sub
cli
add
out
out
sbb
dec
add
cmp
std
add
out
out
and
adc
out
cmp
leave
sahf
gs
outsl
pop
sub
cmp
pop
sbb
mov
pop
data16
sbb
stos
add
in
inc
cmp
test
mov
jo
lret
mov
push
incb
out
mov
xchg
sarl
jle
jbe
stos
inc
mov
ret
icebp
xchg
push
ljmp
pop
mov
loop
sub
xor
sbb
loop
pop
adc
and
les
mov
out
jecxz
add
add
in
iret
cmc
push
ficoms
arpl
xchg
mov
push
daa
rcr
xor
cmpb
push
sbb
and
stos
xchg
sbb
popf
xchg
ja
xchg
push
lret
rcrl
jmp
nop
vprotw
loop
jbe
push
inc
jo
pop
push
and
subl
sub
outsb
ret
fwait
push
cli
mov
sbb
cli
jle
mov
xchg
inc
test
stc
inc
xor
aam
dec
into
iret
xor
adc
sub
xor
jg
xchg
jbe
inc
xchg
mov
sub
pop
or
in
xchg
xlat
shll
lock
dec
or
popf
lret
enter
and
xchg
pushf
out
cli
test
or
jl
mov
jbe
jmp
mov
mov
lret
nop
sub
pop
adc
mov
nop
shl
xorb
xchg
push
int
stos
xor
add
fists
mov
mov
xchg
pop
jecxz
xlat
mov
imul
pushf
fwait
test
mov
data16
mov
les
sub
popa
roll
fwait
test
pop
pop
nop
fwait
nop
mov
loop
loop
lret
loope
jg
in
es
outsb
adc
sahf
jnp
add
stos
out
jno
icebp
adc
mov
iret
and
xor
adc
mov
stc
movq
jp,pn
and
imul
call
sbb
fs
fimull
ds
divb
sub
insb
lea
shrb
sbb
fcomps
push
cmpsb
stos
lret
dec
push
mov
dec
mov
gs
dec
xchg
or
cmp
cmp
inc
xor
and
dec
cmc
pop
div
or
gs
jg
in
sub
sbb
xchg
jecxz
sti
mov
ffree
inc
pusha
fistps
and
fildll
sub
push
mov
mov
add
mov
flds
mov
ljmp
imul
mov
mov
add
jnp
mov
add
inc
stos
faddp
mov
mov
adc
inc
inc
cld
mov
call
mov
mov
mov
lods
add
xchg
mov
ljmp
lock
mov
imul
or
and
xchg
int
sbb
ljmp
rorl
mov
lahf
mov
mov
std
fs
out
loop
jp
mov
imul
xor
dec
nop
orb
adc
adc
shrl
insb
mov
mov
adc
cwtl
fdivrp
outsb
xlat
shl
fs
xchg
sub
inc
lcall
in
sbbl
loop
mull
lret
adc
jg
into
push
lret
and
sbb
sti
pop
cltd
jmp
dec
out
adc
pop
push
dec
xor
mov
dec
pop
mov
jl
pop
pop
stos
jle
fldlg2
jmp
mov
test
pop
ret
sub
cmpsb
test
mov
and
fistl
pop
test
inc
in
outsb
in
mov
cld
mov
xor
test
inc
mov
or
iret
pop
fbstp
popa
movsb
iret
push
pop
push
sbb
in
dec
push
rep
xor
and
test
popa
inc
je
incl
stos
incl
mov
mov
mov
iret
icebp
cmp
add
add
pop
fstpl
cmc
inc
call
add
push
aaa
pop
scas
cld
jb
push
adc
jmp
and
repz
repz
stc
les
mov
and
ficompl
cmc
dec
xchg
jo
imul
inc
jno
and
pop
adc
dec
cmpsl
mov
cltd
xor
rclb
int3
rolb
sub
daa
push
add
ljmp
push
mov
in
inc
pusha
pushf
addr16
ss
lods
xlat
jmp
jmp
ficoms
pop
std
mov
test
scas
xchg
cmp
and
insl
nop
pop
ss
imul
jmp
bound
movsb
mov
lds
icebp
lahf
insb
cmpxchg
inc
fdivp
roll
cmp
mov
mov
push
mov
push
bound
das
jl
jb
data16
add
cld
pop
fs
out
pop
inc
imul
imul
xchg
popa
xchg
cmp
adc
fidivrl
out
mov
xchg
mov
ret
shl
insl
pop
insl
adc
mov
push
outsb
xorl
pushf
lcall
sti
jmp
push
xor
popa
aam
pushf
lea
sti
cmpsb
jae
mov
imul
mov
ds
mov
jl
xor
mov
push
sub
cmp
push
outsl
sbb
pop
scas
jmp
in
into
push
pop
adcl
mov
mov
jecxz
out
mov
or
inc
ljmp
jecxz
mov
out
sbb
mov
out
xchg
adc
in
roll
mov
xor
or
mov
nop
shl
ljmp
inc
or
xor
mov
add
jp
adc
cmc
sub
push
sbb
dec
pop
ret
ds
sub
cmc
jb
or
sbb
out
fs
outsb
adc
in
jnp
movsb
adc
in
mov
scas
lea
push
inc
pop
mov
cli
jns
xchg
lods
mov
sbb
mov
daa
loopne
les
mov
cmpsl
aam
icebp
test
nop
repz
sub
hlt
mov
add
sub
mov
mov
push
cs
mov
push
xchg
rorl
mov
jmp
aad
lahf
sbb
cs
incl
les
test
xchg
out
popl
mov
rclb
mov
push
xor
push
test
lret
std
dec
stos
icebp
push
sub
popa
add
mov
dec
rorl
and
jle
sbb
add
or
push
xor
bound
push
add
push
andl
and
mov
adc
mull
int
test
shll
fprem1
adc
push
mov
sbb
push
rclb
orb
add
fldl
adc
mov
push
repz
aam
pop
das
shlb
mov
test
pop
test
dec
fbstp
xor
adc
mov
push
aam
sbb
jbe
inc
fwait
int3
mov
push
xchg
add
in
push
aam
push
call
loope
add
jmp
cmp
cmp
pop
and
xchg
shrb
mov
aam
pop
lock
xor
pop
dec
push
or
xor
roll
lds
div
rcll
jns
xchg
ljmp
in
addl
and
jb
cld
or
rdtsc
aam
in
movsl
into
sbb
das
lret
or
sub
fwait
xor
mov
mov
rcll
or
repnz
inc
dec
cmp
decl
sbb
scas
mov
sub
cmp
imul
cld
sbb
cmp
sti
sub
insl
lock
shlb
pop
leave
jno,pt
dec
jbe
sti
fists
dec
cmp
filds
cmp
mov
xchg
pop
mov
push
ret
icebp
jl
sbb
dec
test
cli
popf
dec
sub
pop
inc
jle
mov
mulb
aaa
mov
je
mov
mov
loope
pop
out
sbb
lods
lcall
sbb
push
repnz
lcall
jbe
fsub
cmp
js
in
mov
xor
xchg
pop
popf
pop
cwtl
hlt
xchg
xchg
adc
in
and
mov
fcoms
movsl
cs
mov
fidivrl
mov
lret
int
mov
pusha
jo
call
xor
cmpl
jp
cmp
testl
and
popf
and
dec
sbb
mov
enter
imul
add
dec
loope
movsb
popl
lea
lock
jae
outsl
outsb
jge
add
mov
fimull
imul
and
mov
xor
pop
push
xchg
fcompl
jle
mov
ret
cmc
push
add
xchg
pusha
jecxz
add
sub
insl
out
jno
dec
mov
sub
inc
and
or
pop
xchg
or
adc
std
fbstp
adc
lds
sbb
hlt
test
push
jecxz
xor
adc
inc
mov
adc
sub
push
mov
mov
sub
movsl
jmp
lds
dec
or
rcrl
mov
aad
mov
jge
jg
les
in
dec
mov
mov
xlat
push
mov
sub
mov
or
dec
mov
xchg
mov
xlat
cmp
clc
or
lock
sbb
addr16
add
out
pop
neg
push
std
sbb
adc
sub
push
lods
cwtl
dec
mov
mul
js
sub
and
push
xor
adc
pop
mov
lods
test
lods
xchg
lret
sub
xor
xor
ljmp
ss
cmp
and
cmpsl
stos
push
add
mov
push
xchg
xor
mov
mov
imul
add
add
add
dec
pop
ja
out
push
pop
xchg
jbe
imul
ja
dec
push
pop
jns
bound
inc
aas
lcall
fnstenv
pushf
rcrb
push
mov
mov
dec
dec
loope
sar
sub
out
fsubs
lahf
hlt
inc
cwtl
sbb
mov
adc
jmp
xor
adc
inc
dec
cmpsl
mov
adc
xchg
inc
mov
out
push
mov
mov
add
loopne
negb
sbb
cmp
mov
push
sub
pop
xchg
add
sbb
xor
xchg
jl
mov
lods
subl
xlat
xchg
data16
or
xor
sub
dec
enter
ljmp
loopne
loopne
cmp
fimull
out
ficoms
lahf
xor
or
sub
fimull
scas
fldenv
faddp
jge
movhps
add
outsl
inc
mov
pop
sbb
adc
mov
inc
aaa
icebp
xchg
push
popa
mov
push
push
sub
xor
ret
repz
js
shr
js
fldenv
popa
adc
xchg
nop
mov
sub
push
andb
fldenv
movsb
or
and
mov
mov
sahf
imul
sub
xor
inc
pop
pop
jns
mov
and
xor
sbb
roll
xchg
aaa
sbb
adc
add
fwait
aaa
dec
cmp
inc
pop
sbbl
jnp
inc
shl
dec
outsl
fucomi
mov
jno
cld
xor
mov
dec
lods
arpl
test
jge
mov
fnstcw
shlb
sub
mov
int3
ds
hlt
pop
popa
lods
fiaddl
mov
shlb
xor
adcl
lahf
and
mov
sbb
loop
loope
jae
push
lahf
jge
adc
mov
cwtl
mov
cmc
pop
cmp
add
xchg
push
aas
mov
mov
pop
ja
add
insb
push
adcl
add
loope
push
pusha
mov
out
xchg
mov
jo
nop
inc
and
jecxz
sbb
push
push
std
or
scas
loopne
push
data16
xchg
sub
or
xor
out
lret
std
dec
pop
xor
sub
lods
pop
jae
sbb
orl
adc
adc
pusha
std
sarb
loop
xlat
mov
mov
add
mov
rorl
mov
xor
fadds
ss
jg
fadds
sub
add
mov
nop
mov
jecxz
xchg
adc
pop
rsqrtps
push
fwait
xor
adc
roll
sub
mov
add
mov
notb
push
jg
pop
mov
fs
insl
add
sbb
call
mov
mov
pop
mov
test
int3
scas
cmp
add
mov
lds
ja
fucom
insb
out
jmp
mov
inc
ljmp
jecxz
sbb
enter
adc
addr16
movsb
popa
pop
imul
dec
sbb
filds
stc
insb
ljmp
fisubl
jp
fsubs
cltd
mov
movsl
cmp
rcll
decb
lret
or
xchg
add
stos
je
dec
test
mov
xchg
and
mov
push
sbb
jbe
out
sub
pop
mov
pop
mov
icebp
jno
test
cmpsb
in
out
sub
out
negb
cmp
ljmp
pop
repnz
inc
inc
adcb
xchg
lds
sub
xchg
das
repnz
or
in
push
xchg
gs
mov
out
mov
out
insb
testb
mov
mov
out
test
inc
cmp
mov
mov
xchg
outsb
cmp
push
insb
xchg
mov
adcb
mov
lock
jns
mov
rorb
movsb
js
aaa
daa
push
xor
push
fdivl
add
rcr
add
xor
out
pushf
ds
iret
inc
std
inc
cmp
pop
dec
cmp
insb
mov
cs
xor
pop
sarl
enter
lret
fldl
into
sub
test
mov
rcrl
jae
cmpsb
les
pusha
pop
mov
rorb
jb
mov
sti
mov
jo
jecxz
mov
xor
into
adc
sbb
imul
jae
les
mov
call
pop
test
lods
xor
lea
mov
mov
xor
test
pop
popa
and
mov
mov
fucom
pusha
xor
sub
xchg
insl
cmp
sbb
mov
push
mov
mov
shrb
aam
jb
outsl
jecxz
dec
out
outsl
inc
lret
lock
push
adc
imul
sahf
pusha
and
int
xor
jmp
mov
xchg
stos
pop
jae
cmpsb
or
jg
mov
jne
or
inc
dec
sbb
add
faddp
outsl
in
addr16
pop
xor
stos
xchg
mov
out
call
das
loopne
adc
nop
loop
repnz
or
dec
into
mov
push
sbb
mov
cmpb
mov
cmp
push
outsb
stos
ret
push
in
and
insb
push
mov
xor
xchg
and
mov
jg
add
pop
je
lahf
push
sub
jp
adc
pop
xchg
jbe
xor
insl
cli
rorb
sub
adcb
fbstp
sbb
sbb
mov
adc
push
arpl
and
call
je
shll
shll
es
jle
sbb
cltd
testb
pop
add
std
pop
jns
adc
gs
sub
int3
inc
adc
mov
jle
or
fstpl
jbe
loope
addb
shll
dec
cmp
pop
xor
insl
jecxz
imul
stc
mov
andl
cmp
lods
dec
mov
cmpsb
icebp
cmp
adc
repnz
pop
adcb
dec
or
dec
sbb
inc
icebp
icebp
mov
push
std
sbb
int
cwtl
jb
or
lock
inc
add
scas
imul
add
sbb
lea
inc
ljmp
xchg
inc
adc
inc
push
sub
mov
sub
cmp
inc
stos
das
std
cld
fwait
mov
and
inc
dec
add
mov
sub
fbstp
ljmp
aad
imul
xlat
push
rolb
jg
push
fs
xchg
loop
fs
imul
sub
loope
push
xchg
jb
jg
pushf
and
popa
jo
shl
jnp
fsubrl
test
xchg
xchg
adc
add
xlat
xchg
out
add
push
xor
aad
dec
gs
and
gs
test
mov
sbb
xchg
xlat
in
and
inc
ss
and
gs
cwtl
les
mov
dec
add
mov
ret
cld
mov
inc
test
sbb
sahf
insb
lods
test
mov
pop
dec
pop
jnp
sti
dec
xchg
loopne
jg
cwtl
sbb
push
dec
jae
jae
stos
mov
pop
add
push
leave
xchg
add
xchg
lods
adc
sub
fiaddl
mov
icebp
mov
enter
xcrypt-cfb
cmpsl
mov
out
adc
sbbb
out
jl
out
xor
movsb
repnz
xchg
xchg
cmpb
and
mov
scas
xchg
inc
adc
call
cld
addr16
push
fadds
jmp
xorl
sahf
jg
cld
lret
ror
jmp
out
dec
jnp
inc
lods
sub
fiadds
test
incl
mov
xchg
push
add
popa
mov
mov
test
mov
outsl
mov
int
dec
or
gs
inc
push
pop
imul
add
pop
movsb
jp
stos
mov
inc
xchg
lea
leave
inc
fwait
popf
in
cmp
ret
insb
lret
fs
pop
lods
sub
movsb
inc
test
popa
cmp
cmp
imul
rcr
clc
hlt
or
sub
xchg
mov
or
pop
enter
jae
pop
xchg
aaa
push
or
push
cwtl
outsb
cli
or
in
iret
jb
ljmp
mov
pushf
add
movsb
pop
rcll
lds
sbbb
pop
jbe
inc
xchg
repnz
test
cmc
jg
or
mov
and
jle
xchg
lahf
xorl
dec
push
mov
nop
xchg
fcoms
cli
jp
and
lahf
in
fbstp
cmc
out
add
js
pop
ret
nop
push
pop
add
pop
lods
jl
adc
xchg
mov
mov
and
xor
jmp
mov
xchg
jmp
sub
mov
inc
push
inc
jle
inc
lods
mov
xor
pushf
sahf
sti
jbe
jg
jae
mov
push
pop
or
adc
sub
addr16
mov
pop
mov
and
jl
inc
jg
cld
popf
fs
xor
shl
icebp
mov
std
adc
fldt
fistpl
and
aam
dec
push
aas
lahf
push
mov
sbb
pop
mov
sub
jmp
popa
jns
mov
out
notb
xchg
mov
popa
cwtl
insb
and
cmp
sarl
arpl
ja
aad
cltd
in
popf
lcall
jne
shl
mov
jb
out
hlt
dec
jo
ja
leave
das
inc
and
jb
subl
xchg
push
loopne
in
out
or
adc
movsb
scas
sarl
sbb
daa
in
bound
outsb
popa
jmp
mov
xchg
dec
dec
push
outsb
or
stc
xchg
out
and
jne
imul
test
aam
mov
les
add
inc
mov
push
xlat
scas
pop
and
call
imul
cwtl
xchg
push
stos
push
dec
ret
aam
enter
shrb
add
mov
jb
rcrb
outsl
insb
add
mov
dec
inc
and
movsb
addl
leave
dec
add
pop
fmul
inc
inc
subl
pop
jge
sbb
add
sbb
test
mov
and
outsl
pop
mov
ljmp
adc
and
les
mov
test
push
rcl
jnp
in
jmp
pop
push
push
insb
fsubr
dec
adc
clc
rcl
push
mov
or
decl
jno
adc
adc
cwtl
enter
xchg
adc
xchg
lock
stc
xor
cld
faddl
add
add
push
iret
cmp
stos
pop
cmp
push
adc
xor
stc
stc
xor
mov
loopne
sub
mov
adc
data16
inc
fwait
stos
mov
push
mov
test
ja
rol
dec
sbb
and
xor
jns
sub
testl
mov
mov
jle
outsl
jne
and
pop
adc
ds
or
sahf
or
cmp
or
jle
in
hlt
sbb
push
mov
xchg
and
dec
sbb
lds
leave
pop
leave
mov
jecxz
inc
and
mov
mov
push
and
jge
ds
aas
push
mov
sbb
mov
sbb
sub
or
mov
popf
pop
dec
leave
pop
xchg
mov
data16
es
sbb
xor
movsb
mov
dec
jne
in
dec
xor
xlat
mov
lret
inc
pushf
cmpsl
pusha
xor
dec
bound
push
insl
adc
fwait
cli
sub
outsl
and
lret
ret
loope
stc
or
cmpsb
cwtl
lcall
dec
outsb
pop
outsb
xchg
jp
push
test
xchg
out
and
je
scas
loopne
sub
out
or
iret
insl
mov
mov
sbb
data16
enter
imul
xor
dec
mov
dec
cmp
stos
adc
negb
cld
cwtl
pop
mov
ja
movsl
push
mov
andl
fld
cmc
scas
sarl
scas
pop
pop
inc
inc
push
inc
xchg
testb
mov
cld
pop
test
xor
ret
data16
cwtl
push
loope
cmp
test
jo
push
outsb
jo
or
mov
popl
enter
sti
push
mov
sub
popa
jl
faddl
jmp
jns
jns
int3
fwait
test
xor
pop
das
sbb
dec
push
push
jne
sbbl
xchg
or
daa
cmpsb
iret
pop
out
stc
mul
xor
fldenv
mov
jecxz
dec
rclb
sub
push
scas
adc
cmp
sub
xchg
and
and
push
in
sahf
mov
sbb
stos
push
cli
inc
shlb
dec
xchg
repnz
cwtl
sbb
loope
pmaxub
aas
fscale
test
cwtl
lds
jne
xor
lret
inc
inc
test
sub
insb
test
xor
add
add
or
sahf
enter
jnp
lock
add
jns
pop
or
mov
es
outsb
mov
xor
dec
jbe
add
negb
cltd
xor
ja
fistps
ds
test
add
xor
cmc
mov
imul
incb
and
in
mov
mov
push
fstps
les
push
andb
pop
add
lcall
rclb
ret
lds
xchg
mov
negb
xor
pop
fistps
jmp
dec
ds
push
sub
aaa
cli
rcrb
lea
fdivrl
add
jle
fdivr
enter
pop
dec
in
inc
jmp
fstpt
pop
out
insb
iret
cmp
bound
sub
xor
push
test
je
rorb
mov
dec
idivb
mov
pop
sbb
add
out
pop
xchg
add
pop
cmp
mov
out
out
mov
mov
pop
insl
mov
jle
imull
jl
cmp
cmp
ja
in
pushf
mov
push
into
xchg
inc
xor
dec
lock
out
xor
lahf
push
push
test
test
dec
mov
adc
cli
and
cltd
sub
pop
aaa
pop
outsb
ret
lcall
mov
ret
lds
mov
repz
repz
aam
jns
xchg
mov
or
push
inc
mov
inc
mov
aas
dec
mov
movl
cmpsl
imul
jae
aad
or
jno
or
aam
dec
repz
lods
das
movsl
pop
dec
dec
stos
call
add
sub
jns
fwait
pop
sbb
movsb
xorb
push
fistpl
mull
lds
or
test
add
in
out
rolb
and
sbb
mov
inc
adc
sub
test
mov
add
nop
nop
fmuls
shrb
add
push
xchg
mov
lret
jp
fsubrs
mov
mov
scas
test
les
andb
mov
movsb
jne
sub
sub
int3
das
ds
dec
xlat
pop
repnz
add
add
cmp
xchg
jne
and
dec
mov
jb
push
sub
mov
sbb
orl
lahf
cmpsl
sub
jbe
shll
orl
sub
dec
xchg
notl
push
cmp
clc
dec
ja
xchg
and
jecxz
or
ja,pt
push
rcrl
sahf
adc
or
test
jg
lret
clc
add
out
fs
in
iret
in
cmc
scas
fdivrl
mov
test
ljmp
xor
dec
cli
scas
fcmovu
test
sbb
adc
in
test
or
dec
xchg
imul
into
lret
mov
push
cmpl
imul
inc
dec
jns
sbb
mov
fwait
popa
popa
push
mov
sbb
lock
or
jg
inc
xchg
or
xor
mov
pop
ja
push
aaa
xor
sahf
inc
add
jbe
adc
loopne
push
lods
ja
sbb
dec
cmpsl
adc
inc
mov
jmp
lret
inc
roll
sub
cmp
popf
sub
enter
dec
mov
xlat
adc
cli
lret
or
push
sbb
push
inc
pop
or
jp
cmp
fs
sub
shrb
xor
arpl
jnp
rolb
es
cmpb
and
push
sahf
outsb
ret
cmc
popa
pop
pop
pop
inc
out
aas
icebp
xor
inc
pusha
sub
mov
jo
aas
push
pop
xchg
stos
or
mov
mov
mov
fistpl
cmp
mov
mov
pop
es
cwtl
push
dec
sbb
dec
or
mov
pushf
sbb
scas
or
inc
cmp
fadd
add
mov
and
mov
xor
push
outsl
iret
mov
or
repz
enter
in
in
js
sub
sbb
loope
push
pop
cmpsl
add
faddl
popf
mov
loopne
imull
mov
inc
jae
hlt
jmp
roll
cmpl
inc
inc
cmc
addr16
mov
jg
hlt
xchg
andb
shl
fmuls
dec
cmp
lods
hlt
jge
inc
mov
movsl
inc
mov
pop
out
fisubl
xchg
or
popf
xor
cmp
les
sub
call
or
mov
adcl
fdivl
stos
jbe
push
fisttpl
int
in
test
fpatan
ss
mov
or
cmc
dec
filds
gs
adc
scas
mov
and
lds
and
push
das
test
and
ret
pandn
es
pop
fnstcw
cmp
jmp
stc
out
int3
repnz
lea
lds
cs
dec
fstpl
aad
pop
das
mov
or
pop
faddl
stos
or
std
mov
xor
push
cmp
add
sbb
repnz
jg
aam
nop
cs
jae
mov
int3
xor
xchg
enter
or
push
subb
cmp
cmp
aad
adc
lods
pop
stos
enter
mov
out
dec
push
cmp
jns
nop
mov
pusha
repz
lcall
and
clc
mov
and
in
push
mov
xchg
pop
mov
pop
xorl
pop
in
mov
scas
rclb
adc
mov
add
sub
shl
mov
add
xchg
sti
cs
iret
adc
jecxz
orb
je
or
xlat
and
push
jno
fprem
test
ret
jbe
add
sbb
jbe
push
xchg
push
add
out
pop
popf
jo
out
addr16
adc
in
jnp
push
dec
push
xor
jno
mov
shll
outsb
daa
je
sti
lock
mov
dec
imulb
fs
fidivl
in
jl
push
inc
out
fidivl
mov
insl
or
add
push
fistpll
cmp
pop
popf
std
jo
inc
push
adc
jns
push
int3
lods
cmp
imul
pop
pushf
mov
es
ljmp
add
dec
inc
cmp
jbe,pn
shlb
test
ds
arpl
ret
out
shl
xchg
or
repz
mov
ficomps
loope
loop
cmp
push
mov
cmp
scas
icebp
push
clc
cmp
in
loope
sahf
dec
out
xorb
lock
dec
addr16
push
mov
mov
sahf
push
lock
lcall
repnz
sbb
mov
or
test
pushf
jle
shlb
add
push
adc
iret
ret
mov
pop
aas
xchg
lahf
xchg
dec
test
jbe
sub
mov
mov
int
sti
inc
dec
cmpsl
popf
lret
outsb
test
jb
lods
inc
icebp
gs
sub
pop
and
pop
daa
inc
lock
mov
ljmp
fs
xchg
mov
js
test
jmp
push
xor
xor
xchg
leave
enter
push
jnp
stos
pushf
xor
sub
scas
mov
lret
in
push
rcrl
sbb
outsb
mov
hlt
mov
inc
adc
add
push
mov
jmp
push
and
mov
jecxz
pop
insb
jge
pop
pop
fstps
push
lods
push
je
popf
xchg
mov
incb
les
sbb
outsb
push
xor
push
xchg
ljmp
adc
in
shl
jmp
repz
cmp
int
lods
fistps
iret
out
jecxz
lret
enter
js
in
hlt
andl
jmp
pop
sub
jl
mov
ss
push
mov
mov
sub
ljmp
add
cwtl
shr
mov
xor
mov
push
shrb
jl
dec
dec
test
test
mov
adc
or
push
mov
out
sbb
xchg
xor
dec
stc
addr16
mov
stc
inc
outsl
loopne
fisttpl
xchg
es
test
push
test
mov
dec
mov
xlat
mov
daa
cltd
push
out
nop
xchg
add
sarl
cli
roll
lret
pop
popa
stc
stos
dec
call
imul
lods
call
clc
mov
or
and
shlb
imul
sub
fstl
out
mull
shlb
cli
jns
shl
lret
lret
aaa
cltd
shl
sub
testb
test
pop
cmp
xor
imul
mov
xor
inc
mov
dec
mov
dec
adc
push
xchg
and
push
mov
mov
cli
mov
ret
mov
popf
lds
testl
jp
xor
mulb
push
mov
push
sub
shl
call
pop
adc
inc
nop
add
jecxz
lahf
adc
shll
hlt
or
rol
adc
xor
insb
mov
lds
push
push
mov
sahf
popf
push
fdivr
jmp
inc
ljmp
pop
jge
mov
jno
or
in
insb
mov
mov
fimuls
mov
filds
loop
mov
ret
call
cmp
inc
jmp
add
push
jb
dec
aad
push
decb
js
test
inc
popf
gs
mov
mov
call
sbb
xorl
lock
pop
push
push
sbb
repz
lods
mov
std
jge
hlt
jnp
mov
pop
dec
sti
inc
movsl
daa
lcall
outsb
int
clc
add
sbb
sti
lea
mov
xor
add
sbb
or
dec
push
nop
mov
decw
cltd
test
subb
mov
dec
pop
xlat
sub
jb
push
rdpmc
rcll
out
outsb
xor
and
pop
push
mov
pop
iret
outsl
xor
mov
int3
sbb
adc
and
sbb
incb
aam
aad
mov
inc
shr
loopne
inc
mov
mov
inc
das
out
sub
mov
repnz
sti
add
mov
clc
aad
mov
push
loope
sbb
loopne
pusha
out
call
or
test
adc
pop
sub
jbe
sti
ret
fiadds
jbe
popf
add
cmpsl
add
gs
pushf
lods
ds
bound
and
into
filds
pop
push
out
sbbl
ljmp
addl
test
mov
cmpsl
inc
das
addl
cmp
outsl
or
inc
mov
pop
pop
je
idivl
xchg
jo
xchg
mov
cmpsb
fsts
addr16
adc
cmpsb
cmpsb
jb
aad
xor
push
cmpsl
ja
in
inc
add
xlat
and
daa
shlb
push
loopne
mov
out
popf
std
lahf
leave
test
clc
xor
inc
lret
lods
ret
aam
js
in
jb
mov
jns
loopne
in
jg
pop
xchg
xchg
push
aad
adc
movsb
test
cmp
pop
xor
rcrb
and
add
pusha
fdivrs
inc
cmpsl
lods
sbb
fidivrs
fwait
ret
push
test
fwait
jo
add
pop
or
jg
int
aaa
paddq
or
mov
lock
and
scas
cmp
or
loop
xorl
popf
lods
sub
daa
pop
mov
jbe
daa
dec
sub
pop
sar
and
into
sub
dec
and
inc
test
mov
cltd
jo
add
sub
sar
pop
cs
pop
mov
arpl
sarb
aaa
sub
mov
mov
push
fsubrp
out
jle
out
sbb
test
lods
push
dec
cli
mov
popf
mov
aas
lds
loope
add
mov
dec
icebp
pop
sbb
cwtl
insb
mov
fdivrp
pop
xor
pop
icebp
scas
movsl
jl
add
xchg
mov
mov
aad
cmp
jae
lods
cmp
adc
or
xchg
pop
dec
stos
pop
rclb
sbb
cmp
mov
pop
cmp
xor
mov
xor
ljmp
jle
inc
mov
cs
ss
push
adc
jb
or
cmp
fwait
adc
dec
xchg
ret
adc
sbb
mov
inc
xor
push
fs
rol
jecxz
mov
loop
or
pop
sti
mov
in
insl
int
test
dec
stc
int
jb
lods
mov
mov
lahf
adc
mov
popf
xchg
cmc
adc
ret
inc
push
xchg
clc
hlt
push
pushf
sarl
jge
or
mov
je
cmp
shr
fs
and
xchg
add
xor
pop
xor
popf
pop
mov
cli
mov
test
out
dec
mov
jmp
sbb
jecxz,pn
sub
out
scas
icebp
dec
push
js
push
aaa
int3
loope
sub
rcr
add
mov
fistps
cld
cmc
cs
dec
mov
mull
push
inc
and
movsb
das
xchg
hlt
ds
mov
icebp
fisubrl
pop
mov
jno
push
mov
into
ficomps
sbb
cmp
lock
pop
adc
sub
ret
or
xlat
shr
cli
push
daa
mov
cmp
cmp
cli
sahf
shll
cmp
mov
test
adc
subb
mov
cmp
mov
inc
out
outsb
mov
pop
rclb
loop
jne
cmp
out
lcall
jecxz
fld
xor
test
lret
inc
jmp
adc
mov
mov
lods
faddl
out
push
mov
adc
sub
xor
jmp
pop
fwait
or
jecxz
aas
loope
mov
mov
aas
popf
je
jo
hlt
adc
push
fists
daa
setnp
out
jle
adc
xor
faddp
shrb
cmp
fsubrs
jne
sub
dec
insl
aas
sub
lret
xchg
pop
pusha
and
fldcw
lea
or
shlb
mov
cli
sbb
push
cmp
mov
push
pop
cli
inc
ja
mov
jle
loope
mov
popa
xchg
jl
sub
lods
ret
jno
mov
pop
jo
add
sbb
stc
xchg
xchg
mov
push
pop
pop
imulb
popf
inc
or
push
or
ja
xchg
inc
scas
int3
xor
mov
cmp
out
ret
imul
rolb
xchg
jns
jo
popf
mov
stos
adc
test
lea
add
dec
outsb
aad
ret
sbb
mov
ljmp
rolb
ret
iret
pop
push
mov
add
aad
mov
mov
add
push
xchg
rorb
ds
add
int
cmc
sub
sbb
push
lea
xor
mov
out
xchg
cmp
mov
mov
pop
jbe
cmp
add
fstpl
test
pop
aad
jns
ja
inc
pushf
push
icebp
insl
push
mov
adc
dec
lds
loope
ljmp
mov
das
mov
sub
jae
sub
in
pusha
addr16
sub
mov
mov
call
mov
mov
mov
lret
lods
lret
xor
sbb
adc
popa
xchg
jl
inc
sahf
push
mov
xchg
push
pop
pop
cmc
inc
jp
xor
inc
dec
std
or
inc
fisubrl
mov
xchg
mov
dec
or
pop
sub
xchg
loop
push
push
push
mov
shrl
sub
jge
repz
inc
mov
fldt
jnp
jg
push
xlat
mov
into
mov
mov
push
mov
jg
out
movsb
leave
sbb
andl
sahf
mov
xchg
outsl
jecxz
or
push
xor
fisttpl
sar
loopne
xor
jl
sbb
addr16
push
loop
add
push
xlat
mov
add
shr
dec
lahf
outsl
dec
sbb
cmpsb
insl
push
sub
pop
fisttpl
jno
cs
in
lds
and
sar
gs
mov
mov
mov
adc
mov
adc
or
cwtl
shlb
inc
pop
loope
cmp
xchg
xchg
and
pop
lea
addr16
out
enter
cmp
push
push
jae
rcrl
sub
cmp
or
add
int3
mov
inc
lret
xlat
jns
aas
xchg
pushf
mov
push
xor
sub
push
pop
in
jno
retw
pop
push
mov
mov
outsl
xchg
jle
rcrl
mov
insl
mov
fisubrs
jno
inc
mov
arpl
in
mov
popf
jo
sub
ja
incb
cmpsl
sub
push
fcmovnbe
push
aas
insb
pop
cltd
adc
jge
mov
arpl
cli
cwtl
or
mov
test
int
mov
push
pop
mov
dec
outsb
pop
add
shrb
pop
xorb
sbb
jp
inc
dec
inc
subb
push
adc
dec
and
repnz
push
loopne
cli
cmpsl
notb
movsl
mov
cmp
pusha
ud0
ja
lods
flds
sbb
ret
pop
pushf
or
leave
push
lahf
push
sub
in
nop
dec
add
lahf
sub
lods
xchg
cmpsl
mov
cmc
int3
xchg
cwtl
lods
add
xor
int3
aad
add
xor
mov
mov
mov
xchg
fldenv
js
lret
add
push
jne
mov
sub
xchg
shll
xchg
popa
jo
insb
shr
sahf
add
push
arpl
sbb
mov
pop
pop
fisttpl
loope
mov
inc
sahf
cmp
xor
xchg
fcos
or
cmpb
mov
std
imul
stc
jns
rcll
pop
inc
pushw
call
and
out
arpl
ja
or
imul
inc
sub
and
shll
jmp
hlt
mov
mov
lret
jns
fs
dec
out
pop
mov
fdivr
lods
cmpsb
or
sbb
fcmovnbe
inc
jmp
movsb
and
xrelease
sub
adc
cmpsl
mov
sar
cmpsb
adc
jle
dec
push
push
push
in
idivb
jl
xchg
or
or
enter
mov
inc
das
das
jbe
movsl
xchg
lds
call
daa
jo
cmp
mov
xchg
add
call
jle
repz
mov
mov
fists
push
aam
cltd
sub
inc
ljmp
fldl
pop
in
xchg
jg
je
ret
mov
sub
pop
sub
test
je,pn
mov
adc
adcl
clc
dec
add
in
sbb
mov
fistl
mov
out
xchg
pushl
inc
mov
mov
rcll
aaa
enter
mov
push
mov
lret
shlb
and
inc
pop
xchg
inc
mov
inc
shll
jmp
in
out
inc
mov
nop
sub
xlat
mov
jno
pusha
and
pop
add
aam
push
adc
mov
add
imul
push
int
pop
push
add
mov
xchg
fnclex
dec
sub
push
adc
adc
and
lret
cli
cmc
sbb
dec
sbb
std
mov
into
mov
out
pop
ret
push
mov
or
dec
and
das
lret
fldcw
rcrl
rcll
test
leave
mov
push
xchg
mov
mov
mov
imul
neg
xor
cmpsb
cwtl
insl
ds
xchg
push
call
incl
sub
xchg
add
fdivrl
dec
sbb
mov
jl
mov
xchg
roll
or
and
sub
sti
mull
test
cmp
cmp
ss
adc
inc
sub
add
mov
jne
fbstp
or
test
pop
stos
ret
pop
mov
mov
add
xchg
je
push
sarb
inc
iret
jl
cltd
lea
add
ljmp
push
inc
lret
xchg
sbb
push
or
push
in
out
fsts
cld
push
scas
mov
jle
or
and
insb
popf
or
mov
fcompl
stc
jle
or
pop
push
mov
shlb
mov
aam
insb
push
mov
cmpl
rclb
or
fs
xchg
mov
jecxz
popf
adc
stc
cmp
sub
mov
xchg
mov
leave
sub
mov
in
mov
cs
nop
sbb
jb
iret
adc
fs
and
or
or
stos
mov
dec
es
push
push
in
sub
in
pushf
loope
mov
inc
in
dec
mov
pop
mov
mov
andb
out
sub
jo
std
xchg
and
loop
or
cli
xor
xorl
push
xchg
mov
and
adc
xor
das
in
movsl
fisttps
mov
iret
dec
mov
mov
xor
fbld
jae
mov
inc
mov
scas
add
or
and
and
xchg
mov
pop
divb
jle
cmp
or
add
pushf
dec
fistl
add
mulps
js
arpl
iret
das
adc
mov
cli
repz
mov
aam
outsl
mov
add
dec
push
outsl
scas
cld
scas
add
cld
mov
das
adc
ljmp
aam
scas
insl
idivb
jns
mov
push
outsb
jmp
std
pop
and
subl
aas
push
clc
lahf
fs
jne
fucomi
hlt
repz
icebp
push
pushf
inc
addr16
xchg
jnp
sub
and
xor
insb
pop
and
or
xchg
test
cmp
xor
mov
jl
push
lret
inc
cmp
jo
out
sub
mov
inc
outsl
pop
mov
sub
mov
enter
popf
ljmp
scas
shlb
fwait
push
ss
sbb
pop
scas
or
add
adc
or
ja
nop
or
push
cltd
jecxz
pop
push
out
das
and
icebp
sbb
mov
sahf
pop
out
pop
cwtl
mov
jl
add
ds
int3
xor
lock
pop
mov
jle
mov
adc
in
inc
lods
mov
inc
rcrl
push
push
and
scas
push
orb
in
sahf
shlb
jnp
cmp
add
push
cltd
and
addr16
mov
cmp
lret
fsubs
jmp
adc
push
mov
cmp
cmp
xchg
sarl
mov
push
pop
loope
arpl
or
inc
insl
push
jb
cld
outsb
pushf
cmp
into
fidivrl
push
pop
mov
sub
rclb
mov
outsb
fwait
xchg
lods
sub
shll
popf
lret
mov
rorb
push
and
sbb
dec
jmp
add
rclb
xchg
imul
out
ljmp
dec
sahf
arpl
mov
jnp
lods
mov
adc
in
add
xchg
adc
sarl
dec
mov
out
cmp
mov
cltd
ficoms
cmp
dec
mov
je
aas
aas
dec
sbb
aaa
int3
je
or
jecxz
inc
jmp
scas
int
orb
rcl
add
xor
adc
jne
decl
imull
inc
pusha
jp
xor
push
sbb
das
mov
dec
imul
push
push
cli
fs
std
sbb
repz
pop
pop
les
ja,pn
mov
mov
outsb
negb
aad
sub
dec
test
adc
mov
sbb
jecxz
arpl
test
idivl
jno
or
xor
scas
jne
sti
xor
and
push
dec
cmpsb
lods
fnstenv
sub
push
mov
push
aad
loopne
int3
ret
daa
mov
jg
lret
popl
pop
jl
pushf
sub
inc
lds
push
loope
test
and
jo
jg
rcrb
dec
aaa
jge
lcall
push
nop
push
scas
xchg
repz
pop
imul
pop
enter
mov
adc
mov
je
pop
pop
vpsllq
adcl
inc
xchg
mov
ljmp
movsl
rcl
stos
repnz
add
jmp
mov
test
aaa
decb
mov
mov
fisubl
imul
lods
movb
xchg
addr16
test
inc
xchg
fcoml
fxch
call
push
adc
jnp
lahf
mov
mov
fmull
ret
stos
in
jne
mov
stos
mov
mov
pop
mov
pop
jge
inc
insl
inc
mov
or
insb
cmp
mov
jbe
and
fs
mov
fnstenv
test
cwtl
xchg
push
test
in
mov
jmp
loope
les
jmp
ds
sub
or
mov
jmp
dec
push
xchg
fmul
jnp
pop
shll
mov
sbb
push
call
push
xchg
jnp
int3
xlat
daa
jbe
enter
nop
cmp
xor
adc
dec
pop
movb
cmp
xchg
hlt
in
or
lods
xorl
cmp
int
jno
sbb
fsub
xchg
popl
nop
add
sarl
pop
mov
push
push
dec
movsb
aas
push
in
inc
shll
mov
add
xchg
aaa
adc
sbb
test
ficompl
dec
jp
jno
xchg
sarl
cmp
fwait
pop
mov
sbb
pop
cmpsb
sub
sbb
ret
test
cwtl
dec
mov
sub
mov
in
lods
sub
jne
inc
push
mov
ja
das
adc
scas
fs
in
mov
movsb
dec
bound
movsl
jae
jne
arpl
lock
shll
idivl
inc
das
iret
data16
inc
rol
ds
dec
inc
out
js
jmp
fsubrs
test
and
fs
pop
outsb
push
push
gs
shrl
js
ret
loope
cmp
push
jne
mov
mul
repz
fcoml
into
rorl
sub
movsl
jb
xchg
mov
jnp
sahf
mov
xchg
in
fcomps
sub
aaa
cli
test
fbld
push
hlt
into
push
mov
sbb
push
outsb
xor
dec
inc
es
shr
push
jo
out
lods
arpl
lcall
dec
addr16
jno
roll
dec
aad
in
test
jg
push
push
leave
js
hlt
ret
js
jbe
mov
ret
pop
jae
loope
dec
into
and
enter
test
pop
stos
jb
imul
aas
inc
push
xchg
adc
pop
int3
jae
xchg
jns
jb
add
mov
cmc
cltd
mov
int
dec
push
nop
je
xor
adc
pop
sub
notl
insl
cmp
adcb
jl
mov
repnz
push
cmp
mov
dec
imull
ja
lods
and
les
pop
inc
mov
jl
push
loope
in
pop
or
sbb
dec
push
adc
mov
inc
xchg
aas
or
fwait
sub
mov
popa
adc
movq
fnstsw
insb
stc
mov
loopne
sub
mov
call
push
mov
stos
jmp
mov
pushf
repnz
mov
xor
and
fisttps
pop
rcrb
std
mov
push
xlat
add
cld
sahf
into
rcr
mov
or
inc
sbb
push
clts
jne
dec
stc
xchg
call
add
dec
call
cld
sub
por
fnstsw
xchg
dec
test
inc
xor
gs
or
mov
js
or
mov
lods
in
test
jle
mov
ret
xchg
pop
test
mov
pop
inc
dec
scas
or
xor
push
push
mov
adc
testb
lods
inc
movsl
mov
lods
dec
cmp
ljmp
pop
push
cmp
shll
ret
inc
fistl
cmpsl
inc
dec
outsb
test
vfrczps
scas
push
ljmp
inc
cwtl
xor
stc
xchg
jp
cmp
add
jmp
movsb
dec
aam
jo
imul
sbb
roll
xor
lret
push
das
test
repnz
adc
out
sarb
xchg
pop
fwait
addr16
add
jmp
mov
mov
ret
cmp
and
and
xor
movsb
stos
das
call
movsl
sbb
lods
sbb
lods
scas
in
adc
test
out
xor
sbb
lahf
inc
shlb
fidivrs
or
add
jecxz
xchg
pop
sbb
movsl
sbb
leave
popa
jge
xchg
bound
mov
mov
frstor
insb
mov
jo
insl
adc
jge
fwait
mov
xchg
adc
sub
mull
inc
mov
pop
xor
mov
inc
sti
bsf
jae
sbb
mov
or
insl
out
adcb
cld
jbe
cltd
pushf
call
stos
adc
sti
xor
sub
mov
jb
add
push
xchg
xor
cli
sub
jb
sub
outsl
inc
loop
stos
mov
mov
subl
mov
cmpsl
lret
jno
out
cltd
stc
adc
in
xor
or
or
aas
imul
cld
mov
lcall
adc
or
push
xchg
push
mov
shrb
jo
jns
loope
test
rclb
clc
and
mov
test
and
or
mov
out
inc
sub
clc
xchg
pop
mov
add
or
mov
pop
lea
pop
or
and
pop
aaa
jns
sbb
cmpsb
femms
xchg
push
movsl
sub
ret
xor
popa
push
mov
jecxz
mov
mov
lahf
repnz
or
imul
loope
aad
in
dec
pop
cmp
mov
mov
test
test
std
fs
inc
gs
push
lock
scas
shrb
loopne
in
mov
pop
test
lret
add
int
cwtl
mov
stos
push
or
out
mov
cwtl
jne
and
pop
cmpsb
push
movsb
push
or
jp
mov
xor
jge
js
or
scas
cmp
mov
xchg
mov
xchg
xchg
pop
xor
inc
arpl
pop
loopne
or
cmp
pop
pop
sub
push
cmp
cmp
cmpsb
mov
push
cmc
repz
or
lea
cmp
loop
addr16
dec
inc
imul
xchg
pop
dec
push
jg
in
loopne
inc
movsl
lods
or
out
movsl
fists
aam
cmp
adc
outsl
test
sbb
cli
push
xchg
jnp
inc
imul
scas
daa
ficomps
loope
push
and
xor
fucomip
aam
and
and
iret
push
cltd
sub
rcrl
insl
lahf
fimuls
nop
data16
push
xchg
mov
fisttpll
ljmp
and
mov
add
aam
sub
aam
stos
outsl
mov
jmp
imul
push
call
sub
mov
mov
gs
arpl
into
mov
cmp
jns
out
stos
xchg
jns
or
rcr
lea
outsb
stos
ret
xor
xchg
fdivs
stos
in
mov
mov
icebp
in
inc
xor
orb
cmp
xor
stos
dec
dec
jmp
ret
cwtl
fisttpll
xchg
inc
jno
fistps
xchg
scas
lcall
sub
loopne
jne
call
pop
pop
dec
sub
test
pop
inc
popa
test
fwait
xor
rclb
cmpb
sbb
xor
clc
pop
out
sbb
movsl
pop
shrl
sbb
in
jl
sti
mov
xchg
scas
out
aaa
lock
loope
xchg
pop
mov
jno
popa
push
xchg
or
pop
filds
push
mov
dec
fsubrs
add
jg
rclb
or
pusha
clc
mov
jbe
push
mov
mov
jle
dec
ja
push
les
stc
std
cmp
push
push
xchg
lods
push
es
cmp
ret
shlb
inc
jb
iret
lret
jge
sbb
inc
push
adc
sub
pop
adc
jnp
ljmp
mov
shlb
mov
lret
fstpt
fdivs
popa
shlb
testl
aaa
addr16
mov
cmp
mov
mov
push
push
daa
into
xchg
push
ret
mov
lea
fs
arpl
sub
xor
add
mov
cmp
and
cmp
int3
in
das
mov
cld
pop
xchg
test
mov
loopne
lock
shlb
cmp
andb
iret
xchg
mov
test
fnstsw
push
mov
pop
mov
movsl
imul
inc
rcr
mov
lock
pushf
aam
divb
cmp
or
cs
clc
popa
fisubrs
out
addr16
lret
mov
shr
mov
cmp
lods
fwait
cmp
xor
jae
sbb
leave
xchg
negb
cmp
sub
xchg
icebp
sub
js
pop
dec
sbb
or
inc
or
add
and
hlt
mov
int3
push
cli
stc
jns
fsubl
loope
jmp
pop
push
ds
cmp
stos
pusha
les
dec
loop
cmp
pushf
ja
inc
inc
mov
movsb
and
addr16
mov
jle
flds
jmp
add
and
mov
or
int3
aad
dec
aaa
xlat
xor
mov
mov
jge
lret
dec
data16
das
mov
push
mov
jno
push
mov
push
push
mov
adc
je
cmp
jnp
imulb
iret
mov
sahf
inc
sbb
fucomip
shlb
sbb
pushf
aam
cmp
sbb
ljmp
sub
in
or
sbb
ret
gs
push
test
ja
jp
xor
or
jb
or
xchg
add
mov
lock
lret
mov
mov
ret
sub
push
ret
fsin
divb
xor
mov
push
pop
daa
imul
lcall
es
in
mov
mov
shlb
stc
xor
adc
mov
mov
in
push
daa
add
loop
sti
cmp
and
fists
aas
push
pop
sub
push
push
jge
dec
mov
int
mov
stos
xchg
jnp
aam
popa
sub
add
mov
lret
and
sbb
mov
daa
mov
cmp
and
shrl
xor
xor
popf
cmp
add
xchg
mov
lods
dec
pop
jmp
or
int
xchg
lea
shr
adc
rolb
mov
jmp
fdiv
sbb
dec
mov
fisubl
mov
pop
jns
pop
sub
daa
cmp
loop
clc
dec
cmp
xor
lahf
lods
or
push
aam
and
sarl
sub
adc
push
or
mov
cwtl
insl
xchg
shll
mov
cltd
and
xchg
sbbl
sub
inc
push
push
push
in
pop
sbb
mov
lcall
cmpsl
lock
out
sbbb
xchg
popf
popf
or
jbe
jno
cmc
add
xlat
in
test
pop
pop
add
cmp
cli
iret
test
push
xor
cmp
fisubrs
scas
hlt
mov
jbe
or
sub
dec
divb
jns
loopne
pop
imul
sub
push
mov
imul
and
adc
xor
mov
in
jg
aaa
or
test
dec
add
repz
mov
fstpl
js
test
sti
pop
sahf
mov
xor
aas
mov
insb
or
sbb
inc
fstl
mov
add
sbbb
movsb
xchg
push
pop
scas
addr16
scas
icebp
lea
stos
and
daa
mov
adc
inc
push
out
inc
mov
adc
adc
jbe
psrlq
sbb
nop
jno
mov
mov
push
mov
ljmp
fiadds
xor
push
add
hlt
loope
fistpll
je
sub
sbb
inc
add
cmc
jp
nop
push
xor
xor
pop
ja
push
fsub
add
xor
stos
jle
add
jmp
jecxz
das
mov
xorb
push
mov
pop
mov
repz
cltd
xchg
repz
in
xor
mov
nop
mov
cmp
jp
fsubl
jbe
enter
insl
pop
push
addr16
rol
pop
aad
mov
cmpsb
cmp
or
fadd
loop
mov
add
pop
std
pop
cmp
mov
fsub
nop
and
ja
movsl
and
mov
fbstp
call
jmp
movsb
inc
outsb
addr16
ja
dec
push
mov
xchg
stos
test
push
in
bound
in
ds
adcb
inc
cmpsl
out
notl
xchg
shll
or
cmp
dec
dec
test
or
arpl
fisttpll
xchg
dec
sub
mov
mov
out
and
ljmp
pop
cs
outsb
fldlg2
fstps
sbb
idivb
aam
sub
pop
mov
not
pop
cmp
lret
std
aas
mov
pop
and
std
inc
clc
js
mov
les
lock
lcall
sti
and
inc
pop
push
jmp
out
dec
pop
fimull
data16
fs
lock
adc
or
or
push
sbb
xchg
ret
and
pop
insl
ss
out
shrl
pop
mov
push
sub
mov
into
int3
clc
sbb
sbb
dec
inc
inc
mov
imul
jl
cmp
sub
cmp
mov
sbb
and
pop
and
mov
xor
cmp
ret
dec
dec
stos
or
es
das
xor
jno
and
xor
dec
in
push
pop
js
loope
sti
mov
inc
testb
inc
cwtl
dec
mov
push
lea
out
mov
jns
rcrb
cltd
mov
in
rcl
xor
lods
jns
inc
mov
xor
xchg
addr16
fwait
jno
pop
cli
cmp
or
out
sub
jmp
rcrl
clc
inc
mov
jp
ss
subb
rcrb
dec
out
adc
xor
dec
add
xchg
add
fs
nop
test
jmp
test
mov
mov
jmp
dec
lcall
and
inc
mov
fdiv
pop
xadd
pushf
mov
inc
int3
mov
push
or
fidivrl
xorl
jnp
in
shrb
mov
jmp
push
sub
jbe
int3
cmpsl
and
aad
movsb
aad
ret
aas
mov
inc
insl
dec
mov
rep
ret
mov
popa
sbb
mov
inc
xchg
movsl
jo
dec
imul
adc
popa
ss
and
or
push
cmp
lcall
push
mov
outsl
dec
xor
push
insb
filds
mov
jl
and
movsl
xor
sbb
or
xchg
les
int
mov
dec
cli
les
jb
mov
mov
dec
mov
xchg
jae
aam
inc
subb
out
sub
arpl
in
rorl
scas
fucom
dec
dec
pop
imul
mov
lcall
sub
js
jno
xor
lret
pop
pop
adc
stos
mov
xchg
mov
adc
outsl
sbb
lock
lods
enter
stos
adc
xchg
dec
jns
mov
jns
mov
fistl
hlt
push
mov
in
mov
cmp
or
jbe
je
push
ret
dec
pushf
push
repz
int3
dec
push
sbb
jb
insl
js
lcall
push
and
mov
or
insl
test
inc
mull
pop
adc
dec
mov
lret
mov
mov
cmp
mov
sub
mov
js
cmp
dec
ret
xor
pop
and
xor
ja
xor
mov
pop
inc
loope
or
icebp
and
jno
cmc
into
imul
dec
rclb
loop
gs
pop
enter
sub
pop
mov
xchg
subl
push
stos
int
inc
lock
fisubs
mov
out
bound
sbb
and
sbb
cmc
jb
cmp
shll
pop
or
pushf
loop
mov
inc
dec
xchg
dec
stos
inc
ret
in
fwait
out
ficoms
pop
jge
lret
es
and
jg
sub
lcall
jecxz
mov
test
cmp
pop
in
mov
dec
mov
scas
cmpsl
mov
jl
sti
insb
js,pt
mov
pop
mov
mov
shrl
aad
cmp
push
sbb
xchg
outsb
push
mov
clc
mov
cmp
mov
stos
stc
dec
xchg
pop
mov
ret
pop
push
sub
fldl
lahf
inc
add
stc
arpl
aad
cmp
add
mov
adc
sbb
mov
clc
mov
fucomi
or
or
cmp
add
insb
cmp
test
test
ficomps
push
sbb
ds
lcall
cmp
cli
lahf
loopne
add
into
xor
xlat
jo
dec
sub
xor
sub
xlat
xchg
aad
mov
adc
bound
xor
fsts
cwtl
arpl
bound
mov
into
mov
iret
enter
daa
in
dec
and
adc
or
roll
js
push
inc
and
pop
push
or
int3
adc
aad
les
mov
adc
add
fsubr
int3
dec
push
test
sub
sbb
pop
xchg
push
fwait
pop
cwtl
pop
test
in
imul
mov
inc
dec
mov
jge
lds
ret
mov
add
aad
int3
lcall
xchg
les
fdivrl
add
xchg
mov
repz
or
clc
jl
pop
sbb
cmp
and
inc
sahf
or
aas
adc
cld
cltd
jle
dec
cmp
aad
sub
cmpsl
les
enter
cwtl
adc
dec
xlat
dec
test
inc
js
inc
cmc
call
and
pop
sbbl
jae
inc
jle
lds
sbb
das
or
push
pop
jae
out
test
add
xchg
fdiv
test
bound
mov
cltd
jnp
popl
stos
xor
movsb
pop
fwait
push
int
mov
adc
test
mov
js
or
pop
xor
in
pop
pop
jmp
addr16
add
cs
xchg
cmp
cli
sti
int3
adc
into
sub
push
push
roll
jge
mov
lea
lock
xor
jnp
or
jg
icebp
jge
shl
push
xor
lret
or
jmp
push
jo
push
cmp
call
aam
lret
ljmp
shll
in
jmp
stc
mov
ret
nop
lods
xor
ss
je
cmp
ljmp
ljmp
push
mov
ljmp
lods
dec
mov
push
cmp
ret
adc
or
aad
jle
adc
add
into
xchg
into
repnz
flds
lahf
inc
pushf
aas
jmp
inc
ret
imul
or
test
sbb
leave
jg
or
mov
mov
rclb
push
adcb
fwait
cmp
push
inc
scas
fwait
into
dec
subl
or
imul
cmp
adc
cmp
sub
push
ss
mov
adc
je
xchg
js
cld
fisubrs
pop
sti
cltd
push
push
mov
xorl
fbld
mov
mov
xchg
jno
xlat
jno
and
lods
xchg
imul
push
mov
out
cs
popa
iret
inc
adc
xchg
pop
imul
sbbl
cmc
ss
cmc
add
push
mov
test
popa
push
mov
cmp
in
xlat
scas
and
inc
mov
dec
outsl
ret
lahf
pop
or
fadd
push
fsubr
jbe
leave
sbbb
popf
jo
ljmp
dec
jp
xchg
shlb
cmpsb
sub
ljmp
stos
adc
out
xchg
xchg
cmp
mov
popf
adc
lret
add
ud1
loop
repz
ja
mov
cmp
push
and
jp
lods
das
xor
or
lea
push
bound
adc
inc
xor
and
mov
das
jecxz
pop
lret
sbb
sbb
sub
inc
fistl
fcmovnb
cmp
aad
mov
pop
cmp
xor
fistps
inc
out
pop
fcomps
xor
leave
add
loop
scas
movsl
in
mov
lock
dec
pop
rclb
repnz
cmp
xor
insl
jbe
lcall
cmc
inc
pop
fiadds
sbb
mov
sbb
test
imul
sbbb
mov
clc
push
lahf
push
mov
test
sbb
scas
cmpsl
sbb
ljmp
nop
mov
add
popa
movsl
orb
jl
sbb
jo
stos
or
idivb
sti
push
movb
mov
scas
int
aad
stos
popf
test
test
jo
cli
mov
mov
add
mov
push
dec
rorb
bound
push
or
outsl
push
fnstsw
xchg
pop
jge,pt
push
mov
mov
insb
sub
adc
add
pop
test
fnstenv
sahf
test
xchg
sub
dec
mov
mov
jnp
push
dec
loopne
popa
ss
and
adc
cmc
fadds
cwtl
outsl
movb
arpl
cmpsl
shrd
mov
sarl
int
xlat
std
add
test
iret
mov
dec
repz
dec
clc
ja
or
jg
push
sbb
or
push
outsb
cmpsl
aas
fldcw
loop
test
outsl
test
lea
fimull
sbb
int3
cmpsl
test
jns
xor
out
cmp
jae
xchg
clc
dec
dec
fsub
mov
std
sub
iret
push
repnz
mov
fwait
rcrb
insb
loopne
push
test
sbb
cmpsb
int3
outsb
push
jecxz
addr16
and
or
in
iret
and
mov
sub
or
sub
push
cmp
xor
adc
popa
add
hlt
xchg
sbb
jo
xlat
add
pushf
roll
add
adc
jbe
subb
mov
sub
xor
inc
cmp
adc
mov
mov
sub
cmp
sbb
sub
in
xchg
scas
adc
dec
adc
sbb
jb
cmp
jp
pop
dec
lret
pushl
pop
jb
or
cmc
pop
lock
jo
mov
xor
sahf
adc
mov
adc
xor
add
xchg
cmp
mov
mov
and
and
xor
lods
mov
jnp
xlat
mov
or
out
xchg
xlat
insl
push
xchg
movsb
sbb
sub
dec
inc
mov
js
jns
inc
nop
popa
inc
outsb
mov
psrld
and
push
hlt
out
jle
popf
mov
jae
rolb
mov
test
popf
mov
lcall
xor
pushf
mov
cmc
stos
insb
scas
fst
xor
inc
dec
inc
push
jmp
inc
and
and
sti
mov
pop
xor
xchg
data16
pop
mov
insl
sub
mov
xorl
xlat
pop
cmc
repz
insl
cmp
sbb
pop
sbb
pop
movsb
xor
fbstp
dec
pop
ficomps
loopne
jl
ljmp
xchg
adc
mov
lret
jmp
push
mov
mov
into
xchg
lahf
xchg
lret
dec
in
cmpb
lds
add
inc
xchg
sarb
sbbl
inc
out
test
imul
pop
scas
xor
mov
ja
out
inc
aas
and
rcrl
dec
into
cmpsl
dec
and
cmp
push
js
and
pop
js
or
xor
dec
pop
imul
mov
adc
inc
add
xchg
push
fdivrl
rcll
in
sarb
lret
enter
fwait
test
aad
pop
sti
mov
sahf
jae
rcll
in
dec
cmp
fstpl
sub
pop
test
xor
je
sarl
les
andb
cmp
xchg
push
lret
xor
sbb
mov
or
or
stc
mov
pop
aaa
cmp
xchg
xor
mov
jmp
xchg
mov
fidivl
push
push
les
stc
pop
stc
mov
shl
sbb
imul
cli
movsb
or
je
into
test
outsb
add
sub
push
sbb
xchg
push
xor
sub
fstl
xchg
loope
push
imul
fnsave
push
or
bound
jmp
dec
and
negl
je
sub
inc
sbb
call
push
dec
scas
lds
dec
push
push
xor
xlat
add
mov
cmpsl
nop
inc
mov
iret
insb
popa
pop
lcall
add
insb
add
sub
jae
aas
rclb
push
and
cmp
cltd
inc
jno
fs
pop
nop
jmp
xchg
inc
out
or
loope
and
ljmp
push
aam
mov
inc
pop
lcall
cmp
out
push
xor
cs
push
add
xor
cli
aam
pop
dec
add
stos
out
mov
inc
jmp
xor
out
or
clc
push
pop
cs
fstpt
aad
add
mov
popa
xor
data16
jp
cli
add
aam
inc
inc
das
test
pop
fdivl
fists
mov
fstpl
mov
test
out
push
xchg
fs
add
xor
sbb
call
in
xor
scas
addb
adc
sub
repnz
add
sbb
stos
mov
adc
jp
outsl
es
jne
push
sete
cmp
pop
push
mov
add
dec
mov
fidivl
sbb
notl
lea
or
and
loop
out
sub
jno
lods
loop
xor
arpl
fcmovbe
or
mov
push
gs
inc
sub
outsl
sub
inc
lods
xchg
pushl
ss
jbe
jae
pop
shl
decl
mov
or
fistps
cmpsb
cmc
cmpl
lock
cld
ret
jns
ds
outsb
out
movsb
fdivp
jmp
mov
lods
inc
dec
inc
inc
cs
mov
xor
mov
ret
int
jns
ja
xor
push
add
inc
mov
negl
mov
pop
lods
xor
negl
out
jecxz
xchg
pusha
repnz
or
mov
or
aas
dec
cmpsb
out
push
cmp
lods
data16
enter
cld
xor
lret
out
sbb
pop
dec
mov
sbb
nop
jmp
rclb
adc
sbb
std
add
iret
push
mov
data16
in
dec
int
and
in
push
cmp
dec
dec
push
loope
xlat
insl
and
add
mov
dec
mov
xchg
sbb
fwait
mov
shlb
dec
push
xchg
jae
mov
mov
mov
xchg
xchg
scas
ja
shlb
in
mov
scas
pusha
in
cmp
scas
lods
cwtl
pop
mov
lods
adc
sub
pusha
mov
fsts
pop
cwtl
test
test
pop
jg
in
mov
jl
xchg
inc
loopne
sbb
sti
rcl
popl
mov
in
and
popf
fadds
cs
adc
mov
push
sub
daa
call
adc
or
int
sti
adc
xchg
aaa
scas
add
xchg
jg
cmp
jl
push
jge
fldenv
fildll
mov
in
test
ret
cmp
mov
inc
adc
rorb
jb
outsb
std
pusha
test
cmp
mov
test
add
movsb
fcmove
xor
cmp
jge
dec
sbb
jge
and
frstor
test
jecxz
jne
xor
lcall
xchg
cld
add
cmpsl
std
pushf
or
addr16
test
xchg
scas
shrl
cmp
mov
push
pop
xor
cmp
jecxz
jbe
cmp
pop
aad
fcmovbe
cld
call
dec
mov
adc
mov
dec
xor
xchg
fisubrs
das
jmp
adc
and
push
mov
pusha
xor
lahf
mov
jo
lea
jo
popa
xchg
arpl
aam
out
repz
lock
cli
mov
cmp
add
into
mov
pop
sbb
shl
ds
rorb
xor
mov
sub
push
sub
ds
adc
popl
dec
mov
ss
push
dec
adc
add
arpl
shr
xchg
jno
mov
push
pop
nop
fs
adc
notb
mov
mov
push
std
mov
mov
jp
movsl
jns
sub
repnz
lds
inc
mov
dec
gs
push
fmuls
dec
or
orl
sbb
or
pop
aas
addl
fwait
xor
xlat
mov
shlb
pop
das
jns
sbb
sub
mov
cwtl
xchg
ficoml
dec
clc
lods
cmp
lock
lret
dec
adc
cs
mov
mov
ret
popa
or
dec
sbb
lahf
mov
jge
sbb
inc
xor
adc
mov
shl
mov
fwait
mov
cmpsb
and
sbb
data16
or
push
mov
testl
jne
stos
lods
dec
test
pop
or
pop
inc
xor
push
xor
xor
movsb
mov
daa
clc
pushf
and
pop
inc
pop
or
sbb
pop
outsb
add
movsb
pushf
mov
cwtl
jge
mov
cmc
jne
in
xor
xchg
nop
mov
arpl
in
call
roll
out
dec
or
dec
lahf
icebp
push
cmp
or
jno
dec
imul
mov
xor
cmp
cltd
xchg
repz
popf
insl
jmp
and
push
hlt
pop
fidivl
add
cmpsb
jmp
jle
outsl
out
pop
adc
jae
add
gs
repnz
shrb
pushf
sub
mov
pop
xchg
daa
and
repnz
stos
ja
stc
das
std
mov
add
inc
pop
xchg
xlat
and
jno
and
push
dec
inc
inc
sbb
pusha
mov
adc
add
loop
push
dec
mov
add
lret
stc
psllq
loop
rorl
mov
andnps
lds
dec
dec
xchg
sub
insb
mov
fmuls
xchg
sub
jb
aas
in
mov
pusha
xor
mov
add
xor
sbbb
fwait
push
add
dec
js
je
sahf
xor
addr16
inc
fucom
dec
push
and
adc
test
fidivl
imul
xorl
scas
movsl
dec
xor
mov
loop
or
clc
dec
test
and
mov
cwtl
mov
xchg
sub
arpl
mov
xor
in
gs
xchg
push
sbb
inc
les
mov
add
aas
outsb
mov
pop
and
xchg
fsubrl
rorb
push
fmul
cmc
repz
xchg
pop
sarb
jmp
mov
sub
jb
mov
mov
push
and
inc
xchg
adc
pop
out
and
xchg
mov
rcrl
adcb
mov
stos
and
rcl
int
mov
out
xor
push
adc
in
inc
cmpsb
cs
mov
mov
sub
dec
push
cmc
pop
mov
mov
and
stc
sbbl
call
xchg
lock
enter
xchg
inc
and
daa
pop
mov
jmp
or
or
sub
add
mov
add
mov
das
sarl
inc
pop
xchg
jne
mov
mov
inc
sbb
xchg
aaa
jno
mov
sbb
xchg
and
in
into
jne
out
adc
fcmovnbe
outsl
or
add
cltd
cltd
movsl
sub
and
add
pop
pop
push
bound
sbb
mov
add
mov
sub
pop
inc
loop
dec
icebp
mov
enter
test
filds
rclb
mov
push
xchg
es
push
dec
jecxz
int
arpl
jo
cmp
scas
inc
fistps
daa
addps
mov
or
bound
cmp
stc
mov
mov
dec
lcall
push
mov
lea
repz
jno
inc
xchg
movl
inc
js
out
add
dec
add
add
mov
push
mov
in
in
shl
test
icebp
imul
aas
aas
and
ja
push
adc
and
inc
mov
adc
aam
lret
into
pusha
je
ret
imull
add
mov
jge
adc
add
xchg
aas
call
cmp
stc
sub
sbb
and
flds
int3
leave
and
pusha
shll
adc
and
ffreep
push
pop
cmp
pop
cld
outsl
test
into
sub
inc
pop
pop
ud1
push
aam
fstpt
xorb
sub
inc
scas
movsl
ds
jg
sbb
pushf
inc
or
pop
sahf
dec
mov
test
xor
pusha
enterw
lcall
outsb
pop
pop
int
iret
out
jae
xlat
add
lcall
loopne
decb
mov
cli
std
fsubrs
inc
or
pop
inc
or
or
mov
inc
xchg
enter
pop
xchg
mov
sub
cmp
stos
cmp
push
pop
lret
jb
fcmovnb
mov
push
fdivrs
loop
cmp
sbb
movsb
push
dec
inc
sbb
nop
imul
inc
jno
push
sbb
popf
call
test
mov
mov
push
or
pushf
in
sahf
addb
sbb
inc
cmp
push
push
popf
mov
and
xorl
ja
fstl
fs
xor
mov
cltd
push
and
and
leave
jbe
adc
xchg
popf
jl
test
lret
fnstcw
xor
popa
stos
mov
xor
out
test
out
aad
mov
jge
ret
pusha
mov
loop
mov
push
sbb
sub
dec
push
sbb
fsubs
cmp
data16
lea
inc
dec
pop
fadd
les
js
push
shlb
clc
jge
daa
xlat
mov
lahf
lahf
or
jge
in
cmc
pop
push
dec
loopne
aas
repnz
bound
dec
sub
pusha
ja
dec
push
sub
cmp
cs
jge
das
xor
stos
xor
ret
dec
ret
pop
push
pop
mov
cmc
cmpb
faddl
adc
loope
test
xchg
subl
cltd
iret
ficoml
loopne
xor
sahf
sub
xchg
or
cmp
jns
jmp
and
jecxz
out
xchg
xor
pop
imul
in
nop
insb
push
jp
std
iret
int
fs
in
mov
sbb
loope
pusha
addr16
testb
je
jne
pop
xor
outsb
lock
repz
sub
or
insw
push
dec
gs
pop
or
and
outsb
xor
js
pop
pop
js
jne
rcll
fstpl
and
add
movsl
mov
inc
aaa
in
inc
cmp
pop
popa
sbb
xor
in
lret
jnp
mov
fiadds
pushf
into
xor
jecxz
dec
jns
cwtl
test
jle
pushf
pop
cmpsb
stc
mov
stos
shll
insl
mov
je
mov
aad
rorl
test
dec
cmc
imul
nop
cmpsl
sarl
jge
loope
mov
outsl
mov
aas
xchg
xchg
aaa
fs
bound
mov
cmpsl
addb
mov
fists
jecxz
fnsave
mov
punpcklwd
arpl
frstor
lock
js
or
push
mov
cli
xor
mov
push
in
in
out
ds
jmp
in
scas
sub
jbe
xchg
sub
std
mov
icebp
aas
mov
cmp
xor
jbe
pop
dec
push
push
inc
lret
bound
lods
jecxz
mov
pop
pushw
xor
and
push
jp
sub
pop
xchg
into
mov
int3
add
popf
or
sti
in
mov
dec
out
inc
ret
adc
push
ja
repnz
stos
adc
or
mov
call
push
fiadds
xchg
into
ds
ds
xlat
movsb
cmp
cmpsb
lock
mov
dec
and
out
fwait
testl
inc
into
jae
popf
dec
pop
sbb
dec
ret
push
hlt
and
mov
inc
and
xchg
inc
idiv
jns
sbb
lock
jmp
sub
cltd
or
dec
cmp
aam
push
cmp
popa
out
lret
sbb
rcrb
pop
xchg
in
negb
scas
and
mov
jno
pop
pop
ja
stos
fucom
inc
lods
popf
jge
lret
cmp
xor
ret
xorl
pop
xchg
add
loope
in
adc
jb
ds
sub
or
pop
sub
filds
mov
clc
pop
cld
or
pop
pusha
gs
lahf
mov
aas
push
aaa
or
jle
insb
jo
dec
pop
std
out
std
push
jecxz
jecxz
rorb
push
mov
sub
test
insb
rolb
inc
jb
pushf
xor
rclb
mov
mov
into
xor
insb
xor
add
sbb
repz
mov
das
mov
out
mov
xchg
push
ret
or
inc
test
test
jecxz
push
xchg
sub
fildll
outsl
mov
jle,pn
popf
outsb
mov
aam
out
jg
inc
adc
test
pslld
push
int
cmp
popa
xchg
inc
mov
add
adc
jl
ret
jnp
loope
out
cmp
out
inc
scas
or
out
je
xchg
and
mov
gs
sbb
and
jmp
js
arpl
aad
enter
popl
lock
jbe
mov
pop
ljmp
loop
push
pop
jb
jle
in
loopne
sbb
into
in
push
ret
mov
mov
pop
scas
popf
pop
jl
cmp
pop
scas
xchg
std
xor
adc
sarl
mov
fdivs
lock
in
lcall
inc
xor
fdivs
xchg
cltd
fstps
mov
push
add
and
out
pop
out
cmp
das
fidivrl
xchg
sti
xchg
clc
dec
add
addl
outsb
adc
add
inc
loop
or
dec
push
repnz
inc
inc
ret
cld
mov
jmp
lcall
mov
sub
bound
xchg
and
push
aaa
jge
xor
jecxz
imul
lock
ret
ds
xor
ss
mov
push
jmp
push
adc
out
mov
pop
cld
cmp
cmp
push
xchg
mov
push
dec
fs
fisttpll
cwtl
pop
test
fnsave
or
add
xchg
jle
and
ss
sbb
cmp
add
or
add
ljmp
mov
pop
int
fdivr
out
push
aas
mov
fistpl
aaa
loop
mov
push
mov
movsb
push
outsb
mov
sbb
out
mov
jne
ds
jg
gs
inc
popf
out
aam
sub
add
cmp
scas
dec
imul
int3
and
add
xor
and
dec
adcl
pop
inc
xchg
xchg
repnz
imul
sbb
mov
jmp
sub
sub
jbe
fdivr
dec
es
in
dec
push
dec
lods
add
int
xchg
mov
shl
xchg
adc
inc
mov
repz
bound
sub
xor
cwtl
loope
movsl
mov
cmp
pop
jbe
dec
push
mov
push
pop
cmpsb
aaa
pushf
inc
inc
out
add
or
cmp
dec
or
xchg
mov
adc
sbb
push
cltd
dec
push
mov
adcb
xor
or
pop
push
mov
lcall
xor
es
sub
xchg
je
enter
mov
jo
push
mov
jbe
dec
cld
jo
adc
das
and
daa
or
add
fdiv
jne
mov
pop
push
test
lahf
xchg
lea
fwait
jge
stc
das
mov
aas
test
decb
fwait
out
jns
push
xor
aaa
push
xor
dec
gs
cmp
ucomiss
imul
inc
pushf
lret
in
jge
adc
push
push
pop
mov
add
ret
mov
fs
inc
xor
jb
cli
nop
dec
sbb
test
ficoms
push
int3
sbb
ss
add
or
mov
lret
xchg
les
je
ja
hlt
sbb
add
xchg
aas
pusha
in
mov
mov
add
leave
cld
push
mov
mov
dec
addb
jo
mov
xchg
cmp
xchg
mov
fs
cmp
cmp
mov
addr16
jl
mov
mov
mov
jle
add
dec
out
rorl
xchg
and
jp
mov
or
movl
pop
ret
fdivs
enter
inc
jle
mov
std
mov
and
arpl
cmp
jae
mov
dec
xchg
clc
dec
push
sahf
loopne
sti
lret
push
mov
push
mov
mov
and
xchg
push
dec
jno
push
das
ud2
fs
adc
outsl
mov
mov
mov
mov
fwait
pop
jl
cli
pop
call
push
push
cltd
popf
dec
lods
or
mov
xchg
cld
push
std
xchg
insb
lock
faddl
es
cmp
and
mov
shrl
les
addr16
loope
ja
adcb
je
stos
add
cmp
jecxz
ds
bound
rcrb
mov
xlat
mov
neg
imul
lret
repz
test
jmp
movsbl
mov
jo
mov
inc
test
cmp
xchg
dec
push
sti
or
inc
jo
cmpsb
cmpsl
jge
xchg
cmp
add
xchg
xor
mov
inc
es
jne
test
je
cmp
sbbl
les
ficoms
jmp
or
pop
fisubl
mov
in
add
mov
stc
xchg
and
inc
sbb
add
cmp
out
nop
pop
mov
rclb
lock
adc
cmp
sbb
xor
mov
cmc
incl
jo
ds
xchg
and
adc
out
xor
negl
sbb
into
push
and
and
shl
pop
mov
mov
in
inc
push
mov
mov
lcall
lcall
stc
fdivrp
cmp
pop
and
and
inc
pop
mov
mov
icebp
out
pop
push
dec
mov
out
adc
fisubrs
mov
jp
movsl
pop
movsl
or
mov
rcll
mov
push
or
rorl
popf
sbb
dec
loop
xchg
inc
subb
or
les
aam
jge
rcr
cs
int3
add
and
test
xchg
ret
repnz
add
push
stc
push
jp
inc
mov
pop
add
mov
xlat
cmp
push
addr16
aad
fists
andl
adc
es
push
arpl
mov
push
add
add
push
add
popf
subl
cmc
add
addr16
clc
sub
and
and
cmp
or
jns
stos
test
aam
call
outsl
imul
mov
test
out
sarl
add
mov
inc
adc
jle
add
xchg
sbb
cmp
mov
mov
in
out
and
test
jns
cld
cmpsl
lea
mov
push
cld
push
mov
push
fsts
mov
cmp
cmpsb
sbb
and
mov
insl
cmpsl
test
jbe
ficoms
cltd
sbb
jecxz
inc
fildll
sub
add
ss
mov
arpl
imul
hlt
fnstsw
push
je
pop
or
xlat
adc
mov
sub
push
pop
mov
push
imulb
test
stos
stc
inc
jecxz
inc
xor
sub
xlat
daa
sub
sub
jo
dec
mov
imul
xchg
adc
int
in
in
imul
lock
ljmp
pop
scas
adc
stos
js
mov
sub
lahf
pop
xchg
stos
jl
cmp
into
add
sub
loop
jge
dec
in
or
movsb
fbld
pusha
mov
pop
adc
repnz
add
out
into
push
jmp
add
ja
xor
mov
push
push
shll
enter
outsb
cmc
mov
js
cmp
test
push
mov
gs
js
mov
mov
scas
jo
add
and
insl
repnz
mov
sbb
fsubs
push
xlat
mov
and
mov
mov
and
test
mov
mov
pushf
jle
call
add
ja
pop
and
popf
ret
lods
cmpsb
sti
dec
pop
std
cmpb
das
ret
stc
out
mov
pop
pop
inc
pop
cmp
sbb
xor
xorb
inc
adc
inc
or
mov
xor
movsb
push
mov
in
cmpsb
xchg
mov
add
pop
out
jge
mov
mov
lods
xchg
jns
aad
fidivrs
jne
push
insl
or
cltd
xchg
and
rcrl
movsl
jecxz
inc
push
and
sahf
add
pushf
mov
jno
test
or
in
or
int3
pop
scas
mov
jbe
mov
repnz
fcmovbe
or
cli
icebp
test
and
cmp
lods
jbe
or
stc
lods
mov
or
mov
jecxz
xchg
push
in
ror
mov
std
cld
jno
lcall
and
jb
mov
xor
mov
xor
add
cld
aad
jecxz
mov
inc
popf
sahf
mov
std
loopne
jle
mov
mov
lock
or
add
jecxz
and
xlat
pop
jae
pop
dec
jne
adc
xchg
fstl
dec
xchg
ds
ret
int
dec
shrb
mulb
jecxz
mov
popf
dec
movsl
add
jle
xchg
jb
fdivr
hlt
loop
je
cli
ds
in
aad
sarl
mov
push
jecxz
push
sbb
add
mov
pop
dec
push
jle
lret
adc
inc
add
xchg
fsubl
cmp
inc
notb
push
jbe
stc
push
addl
inc
and
mov
pop
pand
mov
pop
lods
xor
stos
fiaddl
adc
xchg
movsl
stos
loopne
out
daa
push
inc
sbb
mov
rcl
dec
loopne
jns
shr
orb
std
rcrl
repz
lret
xor
pop
inc
add
inc
rolb
fidivs
mov
push
popl
jle
adc
jb
push
in
xchg
lcall
xor
and
popa
test
xchg
mov
and
negl
leave
jnp
and
loop
shlb
inc
jns
imul
rolb
sbb
sub
adc
push
jns
jp
ja
inc
adc
aas
repz
outsl
pop
xor
mov
and
fcmove
and
decl
xchg
cmc
mov
xchg
icebp
sarb
int
sub
daa
mov
rcl
je
add
and
dec
push
jnp
lea
xchg
mov
cld
mov
stc
jbe
adc
pop
dec
data16
popa
pop
cmc
ret
and
outsl
cmpsb
pusha
jae
inc
push
dec
xor
adc
ljmp
sub
std
decl
mov
xchg
push
test
mov
dec
jnp
mov
add
repz
mov
iret
xor
dec
xor
jb
out
outsb
mov
shlb
fmull
iret
into
scas
fidivrl
xor
ss
lahf
dec
inc
inc
push
popf
or
adc
inc
pusha
ljmp
sbb
lret
jb
in
or
or
and
and
fmul
jnp,pt
scas
and
xor
adc
dec
fwait
and
jmp
daa
mov
repnz
fisttpl
pop
cmp
es
shlb
inc
and
xor
sbb
sub
das
jbe
mov
cmc
mov
xor
cmp
inc
or
cmpsl
out
sbb
jmp
dec
dec
cli
test
cmpsl
inc
jae
inc
xorl
xchg
and
add
add
and
imul
repnz
sub
xchg
nop
xchg
adc
hlt
int3
sbb
xchg
les
push
dec
sbb
mov
mov
sbb
pop
leave
outsb
out
xchg
add
sub
ds
gs
xor
leave
adc
xor
push
fdivl
mov
aas
mov
mov
int3
lds
xchg
pusha
push
add
cld
sbb
mov
das
adc
add
xchg
das
repnz
xchg
pop
call
mov
nop
push
or
sub
je
cld
sbb
sub
and
mov
out
rclb
or
dec
and
sbb
arpl
sub
mov
dec
add
push
outsl
out
pop
inc
das
scas
sub
sub
fstpl
imul
into
insb
xor
or
popa
cmp
jbe
sbb
int
inc
repnz
popa
cmp
pop
in
lods
stc
sbb
mov
idiv
xchg
ja
mov
test
mov
in
fwait
xchg
das
dec
dec
into
jge
ds
cmpsb
lea
mov
sub
xchg
sub
add
xchg
lods
mov
dec
insb
jne
xchg
insb
es
or
aaa
dec
inc
movsl
push
add
iret
rclb
cmp
outsl
test
mov
inc
pushf
or
and
jmp
xor
adc
ss
lret
xchg
xchg
mov
push
and
inc
mov
push
popa
addl
shll
lcall
jl
rclb
add
js
pop
inc
jnp
push
je
adc
dec
mov
jmp
es
push
xchg
pop
ja
cmpsb
sbbl
push
or
jmp
mov
into
std
sti
push
fcoms
sub
mov
jle
popa
daa
cmp
pop
insl
stos
sbb
inc
into
mov
mov
inc
pop
jmp
pop
mov
call
cmpsb
fisttpl
in
inc
and
je
push
dec
add
add
sarb
sub
stos
icebp
pop
js
add
push
ja
leave
jg
ret
push
xchg
sbb
mov
aaa
push
push
mov
movsl
popa
gs
fdivrp
xor
ljmp
data16
sub
inc
arpl
adc
adcb
cmc
lret
lods
lods
pop
dec
addr16
popf
cld
mov
int
es
sub
into
sahf
pop
cld
push
or
mov
clc
dec
decb
rcll
ss
push
xor
add
mov
sbb
dec
mov
divl
push
ret
jae
sbb
adc
pop
dec
repnz
push
in
cmp
push
jb
mov
sbb
and
push
pop
jbe
cmpsl
push
in
jl
clc
lods
jbe
sti
out
fildl
pusha
xor
gs
lods
addr16
xlat
loop
cmpsl
mov
jb
lahf
sbb
xchg
xor
sub
mov
in
std
jge
outsl
add
and
jne
jmp
add
sahf
mov
dec
jnp
mov
bswap
jns
mov
cmc
push
dec
push
in
test
add
popf
pop
repnz
pusha
inc
sub
jl
or
dec
cwtl
jl
pop
pop
cmpsl
push
test
mov
cmp
cmpsl
std
fcoms
imul
in
sub
sub
mov
sbb
xchg
jl
cmpsb
sub
cmp
lea
pop
push
dec
lcall
je
js
mov
jbe
aam
jns
lods
sub
mov
sti
xchg
mov
cwtl
arpl
adc
xchg
and
mov
add
jp
xchg
push
xchg
push
mov
add
pop
sbb
dec
mov
cli
jo
pop
rcll
ja
sub
fldenv
fsts
lock
cmc
add
call
dec
cli
repz
repnz
jnp
loopne
pop
push
ja
int3
xor
inc
gs
xchg
lods
mov
xor
int3
lcall
roll
mov
daa
push
jecxz
movsl
mov
xchg
lcall
aad
notb
repnz
lret
sbb
xchg
fwait
mov
lods
dec
leave
iret
add
andb
cwtl
jmp
sbb
std
ja
mov
jb
out
xor
jp
stos
mov
sbb
test
dec
push
sahf
add
mov
cld
insl
pop
pop
mov
mov
and
lea
repz
mov
mov
outsb
dec
mov
test
pop
xchg
and
scas
cli
aam
push
popa
fimull
pop
xchg
inc
mov
cltd
xchg
pop
adc
es
lods
dec
mov
add
dec
jmp
cld
jns
lea
fisttpll
jg
xor
jg
jge
push
jb
out
paddsw
sub
stc
mov
loop
nop
dec
xchg
ret
lock
out
call
adc
inc
sub
movsb
sti
sbb
mov
int3
das
imul
mov
dec
fidivrl
js
lret
sbb
jle
pop
sub
sarl
pop
jnp
xor
push
fs
cmpsb
jmp
jmp
mov
popa
aad
xlat
adc
sarl
push
ds
cs
pop
enter
add
fstpl
cwtl
push
pop
xchg
pop
ljmp
mov
push
jg
sahf
lahf
out
outsl
mov
jno
jmp
mov
scas
and
shlb
push
scas
pop
rcl
xor
xor
push
repnz
push
jne
imul
jge
jns
add
sub
lods
in
icebp
pop
adc
nop
out
gs
popa
push
cmc
lock
pop
loope
cmp
cmpsb
into
repz
inc
sbb
rcrl
push
in
add
lds
cmp
cmp
mov
pop
fsubrl
pop
pcmpgtd
mov
xchg
call
mov
push
daa
std
fcoml
testl
mov
xor
sub
jno
jae
fidivl
and
movsb
cmp
into
movsb
dec
xor
push
sub
stc
fsubr
inc
xchg
int3
mov
aam
out
mov
cmp
loop
add
ret
xor
dec
xor
out
mov
in
mov
lods
cmpsb
pop
insb
scas
imul
mov
push
out
enter
movsl
fsubl
push
sub
inc
call
test
mov
mov
adc
mov
out
or
mov
xchg
mov
mov
pop
lods
mov
and
sub
mov
dec
xor
mov
in
xlat
cmp
scas
adc
repnz
mov
jne
ss
lea
in
mov
xor
in
rclb
pop
mov
sti
fwait
rorb
dec
push
arpl
dec
das
stc
in
lahf
mov
icebp
jp
js
or
sbb
cmpsb
mov
fidivrs
test
ljmp
push
xchg
mov
push
xchg
xchg
xor
lods
cmpsl
test
cmpsl
shrb
push
xorl
push
movsb
or
cmp
and
lea
and
outsb
lret
xor
push
rorl
mov
adc
fcoms
pop
mov
dec
movsl
aaa
loope
and
mov
arpl
sbb
sbb
dec
sti
lock
fildll
jns
jnp
add
xchg
in
lods
sbb
xchg
mov
sbb
es
loop
js
insl
push
pop
sub
test
jmp
int
aam
outsb
test
add
out
xchg
sbb
cmp
popa
test
fs
mov
jae
sbbl
adc
and
or
mov
sti
stos
cmp
adc
sbb
insb
sahf
inc
mov
push
or
pop
push
add
scas
cld
clc
or
ficoms
rclb
cld
push
or
jns
pusha
adc
push
movsl
mov
stos
dec
mov
loope
inc
dec
adc
rol
jae
movsl
lds
mov
loopne
pop
ds
outsl
mov
mov
xchg
cmp
js
movsb
call
dec
mov
jae
out
inc
jbe
xchg
mov
pop
jno
jmp
dec
imull
pushf
push
jns
fisubrl
out
sub
arpl
test
cwtl
pop
fbstp
btsl
cs
in
xor
push
lahf
sahf
in
out
sub
cltd
pop
jmp
pop
adcb
sbb
push
inc
cmpb
and
xchg
fildl
inc
out
cwtl
repnz
cs
xor
clc
sub
mov
notl
jle
mov
add
pop
mov
scas
ud2
push
xchg
sub
mov
imul
push
mov
shrl
and
fstps
divl
arpl
cmpsl
mov
sbb
in
in
movsl
adc
stos
jl
jle
jge
inc
test
std
aam
cmpsl
iret
add
dec
or
sub
js
incl
int
leave
push
int
or
js
pop
cmp
fwait
push
xor
movsl
stos
xchg
pusha
fdivrs
adc
xchg
ja
test
test
and
and
mov
jb
lcall
cmc
mov
js
insl
jmp
shrl
fadd
pop
movsl
bound
sub
sbb
cmp
xlat
adc
fmuls
mov
test
or
xor
cmp
cmc
jecxz
repz
cmpb
ror
sbb
aas
jle
arpl
push
icebp
pusha
jp
test
in
xchg
xrelease
cmp
pop
mov
cwtl
inc
adc
inc
std
add
int
xchg
cmpsl
jle
sahf
insl
mov
imul
jle
xchg
jge
and
movsl
and
jnp
pop
lods
or
jb
dec
inc
faddl
loope
fadds
or
insb
rcrl
mov
mov
icebp
pop
lds
mov
add
addb
addr16
inc
scas
not
mov
push
lods
or
loopne
jbe
mov
sahf
sub
or
cltd
add
xchg
insl
loopne
ret
lds
in
inc
mov
stos
push
xchg
pop
outsb
fs
add
xchg
test
fcomip
lock
dec
xchg
push
testb
in
loop
test
stos
mov
sahf
decl
popa
xor
cmp
out
pop
iret
shrb
push
mov
sub
jbe
add
pushf
xchg
or
aas
das
fcmovne
test
mov
dec
adc
mov
mov
adc
sub
mov
xchg
cld
pop
mov
rol
sbb
lods
mulb
xor
xchg
adc
sbb
xchg
push
imulb
outsb
shl
mov
scas
insl
jae
fs
enter
js
cmc
jo
daa
cs
push
or
aad
xor
xchg
scas
xor
lret
mov
jb
jae
and
dec
xchg
lret
push
xor
orb
xchg
jno,pt
aam
into
xor
orl
pop
xor
mov
inc
stos
test
or
lods
arpl
cwtl
xchg
mov
daa
sub
adc
sub
xor
pop
sub
scas
and
in
in
push
push
dec
js
inc
repnz
or
cld
mov
jbe
inc
dec
and
outsl
xchg
movsb
fwait
aad
fcomip
imul
ja
and
jbe
aas
dec
in
mov
test
cmpsl
popf
lods
int
or
popf
cld
fcoml
cmpsl
push
jae
fistl
xlat
pop
fidivrl
addr16
iret
popa
stos
dec
ljmp
xchg
sub
lret
addr16
inc
xor
jecxz
jne
and
mov
push
add
subl
scas
cmp
xchg
mov
and
daa
push
flds
jmp
push
jge
mov
scas
cld
xor
add
jl
sbb
pop
testb
notl
jg
adc
and
pop
xchg
outsb
repz
jle
mov
inc
mov
mov
fiaddl
sbb
adc
std
jmp
xbegin
inc
adc
stc
lret
inc
fstpl
pop
adc
scas
push
xchg
ds
cmp
dec
mov
xor
xchg
add
cmp
out
shll
pop
sub
aaa
inc
incb
arpl
lahf
jne
pop
arpl
jge
mov
add
adc
push
dec
mov
jl
mov
ss
data16
cld
rcr
cmp
or
jbe
cmpsl
clc
std
xor
pop
adc
xchg
mov
pop
out
pop
jle
lods
sbb
aad
push
daa
mov
push
xchg
jae
stos
jle
or
popa
sahf
loope
dec
cmpb
mov
fldenv
lret
nop
jns
jle
ljmp
nop
cltd
popa
mov
mov
mov
cltd
sub
pushaw
add
xor
jmp
and
lret
mov
sub
sbbb
sbb
jecxz
imul
je
pop
out
shll
dec
movsb
sbb
mov
xor
stos
int3
aam
imul
or
cmp
mov
pop
pop
or
cltd
jns
aas
mov
decb
mov
test
push
popa
and
adc
mul
xlat
add
mov
sub
and
dec
out
aas
sub
ret
scas
dec
fdivl
inc
xor
adc
inc
pushf
test
jecxz
mov
aaa
jo
cs
xor
fldl
push
pushf
xor
popf
or
cwtl
sbb
sub
jp
xchg
jne
sub
inc
nop
pop
lret
push
ficoms
aas
dec
pusha
in
dec
jne
sahf
stos
int
mov
cmovp
add
aaa
jg
fwait
push
imul
mov
add
add
mov
and
cmpsb
or
dec
aam
mov
adc
fistps
xor
dec
push
dec
jle
in
mov
out
repz
or
bound
add
scas
arpl
test
mov
dec
out
ror
or
es
lcall
push
mov
dec
stc
xchg
sbb
or
push
jle
mov
dec
add
insl
cld
lea
lret
pop
idivl
lcall
cltd
mov
insb
mov
dec
fs
ja
pop
jbe
xchg
lahf
mov
push
cmp
icebp
pop
jno
lret
test
jae
stos
mov
popf
jns
dec
add
imul
fistpl
xor
pop
lea
or
xchg
and
cmp
rorl
in
and
jnp
add
cmp
das
push
sahf
popa
scas
pop
add
fnstsw
fwait
mov
rclb
jle
push
inc
xchg
and
outsb
rcrb
cmp
in
mov
lds
jl
mov
pop
inc
lock
lods
out
idivb
cld
push
rcrb
in
jbe
iret
movsb
dec
mov
repnz
negl
mov
push
mov
out
xor
dec
dec
xor
mov
nop
repnz
iret
xor
mov
xor
inc
aam
dec
inc
fsubrl
or
fmull
icebp
xor
xchg
ror
push
jg
mov
adc
sbb
mov
repz
xlat
mov
aaa
out
push
ss
mov
repz
xchg
scas
dec
push
movsb
icebp
nop
jl
nopl
dec
mov
test
xor
test
mov
scas
adc
icebp
scas
adc
mov
mov
stos
pop
xchg
ret
and
push
fists
mov
stc
mov
jo
je
or
cmp
fidivl
jg
in
push
cmp
xchg
push
mov
iret
lock
outsb
jne
sbb
insb
insb
pop
addr16
sub
shl
xorl
test
addb
test
mov
data16
inc
pop
mov
adc
or
mov
pop
pop
xchg
or
xchg
xchg
arpl
add
add
sti
loope
or
shlb
aad
jmp
sub
gs
repz
dec
mov
cld
jecxz
adc
push
daa
and
es
or
jp
xchg
cmc
xchg
mov
aaa
mov
dec
push
mov
outsb
scas
pushf
adc
int
xchg
leave
das
repz
sbb
ds
inc
mov
push
sbb
xchg
mov
lods
sbb
xor
jg
pop
lahf
dec
ds
repz
adc
cltd
jecxz
scas
pop
arpl
and
mov
lcall
hlt
xor
push
daa
js
ljmp
adc
int3
pop
aad
repnz
push
cmp
rclb
ficomps
outsb
shlb
jae
xor
hlt
insb
mov
out
add
jno
sub
cmp
inc
pop
inc
xchg
cmpb
jl
stos
dec
jne
xchg
inc
call
pop
xchg
pop
ds
mov
mov
adc
sub
or
test
scas
gs
jl
out
dec
push
insl
xorb
jne
es
aad
daa
add
movsl
ret
xchg
sbb
mov
test
pop
adc
mov
and
cmc
push
inc
out
push
dec
or
add
cmp
sub
push
clc
pop
cmp
sahf
ja
jae
cmp
ret
lcall
pop
ja
mov
jo
sbb
lods
aas
rorb
jns
push
jae
pushf
sub
adc
jbe
pushf
aas
pop
pop
sbb
and
nop
dec
lods
ret
int
pop
mov
sub
in
sbb
loopne
jno
dec
mov
push
bound
daa
sub
xor
sub
cmpsl
xor
test
jo
mov
push
testl
ds
ljmp
ror
mov
mov
fisubl
fwait
jmp
data16
shll
jne
mov
add
and
lret
or
not
add
loopne
in
int3
lea
and
or
pusha
enter
lret
xchg
icebp
xor
imul
scas
xorl
inc
ret
sbb
loope
mov
adc
xor
movsb
push
xchg
xor
sbb
pop
jmp
push
out
rcr
fs
mov
push
test
stc
add
cmp
pop
and
and
fisubs
test
mov
push
lcall
or
inc
ret
pop
dec
fisubrs
xlat
inc
es
stos
dec
fs
xor
and
lea
jo
lock
xor
cltd
push
pop
leave
cmpsb
xor
lock
shrb
sbb
sbb
xorl
out
in
inc
push
data16
add
sti
add
sub
push
rcll
xor
movsb
cltd
xor
jle
xchg
std
testb
push
jl
fcmovnbe
xchg
xor
pop
xchg
adc
lret
xor
push
lret
imul
leave
stos
nop
mov
add
adc
out
cmpsb
inc
ret
pop
jl
aas
fidivl
jle
aas
outsb
sbb
pop
sub
xchg
push
jge
sarb
push
clc
fisttpl
int
inc
fldenv
dec
ret
fstps
cmp
push
es
mov
dec
cmp
push
outsb
mov
and
dec
xchg
ljmp
shrl
ficoms
repnz
repnz
push
mov
stos
sub
push
lods
fcomps
mov
mov
and
push
psrad
mov
xor
lret
push
pop
add
popf
add
push
stc
and
pop
rolb
cs
xchg
xor
inc
test
jns
call
cmp
mov
sub
out
jne
adc
adc
jno
test
aaa
or
jmp
push
test
inc
mov
mov
sbb
test
pop
dec
mov
mov
push
add
fwait
call
subl
fisubs
gs
in
mov
fcoml
pusha
and
dec
lods
mov
mov
push
adc
fcmovne
sub
lods
psubd
into
push
ljmp
add
xor
pop
and
or
sbb
jp
pop
xor
and
jl
ss
and
cmpsb
adc
cmp
xchg
pop
rcrl
mov
loop
cmp
cld
dec
es
aaa
mov
insl
mov
aaa
dec
xchg
mov
pop
xor
stc
sub
pop
clc
mov
dec
and
imulb
repz
fistpll
loop
mov
sbb
push
cwtl
add
popa
scas
xchg
jle
or
add
jbe
xchg
push
or
add
test
fwait
push
aas
sub
mov
daa
xor
fwait
inc
in
lret
jb
adc
push
stos
int3
cmp
xor
pop
fimull
inc
pop
sbb
aaa
imul
pop
ja
fdivrl
jb
mov
and
mov
movsb
leave
mov
xchg
add
mov
scas
hlt
or
adc
push
out
jno
lods
xchg
push
lods
out
inc
ffreep
push
or
das
out
push
andps
cmpsl
out
lock
push
add
cmp
out
xorl
icebp
fistpll
sahf
fisttpll
in
sbbb
lsl
aam
xlat
into
int3
bound
or
js
test
push
in
inc
in
scas
and
out
lods
inc
js
pop
inc
fnsave
adc
pop
mov
pushl
mov
lock
int
cmpb
je
mov
jge
popl
adc
xchg
mov
cs
fisttpl
dec
fldcw
call
or
dec
divps
dec
mov
insl
ret
out
pop
jge
lcall
shrl
add
leave
mov
sbb
xor
lock
xor
dec
adc
adc
data16
in
cmp
outsb
inc
xchg
leave
sti
push
jno
add
dec
cwtl
sahf
xor
out
lret
xchg
lods
lods
xor
arpl
jmp
jb
sub
inc
mov
out
mov
push
or
dec
jl
cli
adcl
push
sti
scas
test
lock
pop
lds
add
lcall
dec
sbbb
or
stc
add
mov
jle
lret
inc
pop
out
cli
cli
outsl
daa
fs
pop
adc
lods
add
ficoml
in
popa
int
fbld
inc
mov
and
xchg
jne
push
or
rcr
mov
sub
cwtl
popa
push
lods
sub
mov
mov
jg
iret
shlb
jl
cmc
sbb
sbb
mov
and
xchg
test
sbb
mov
mov
lret
push
dec
mov
add
clc
jecxz
es
or
fiaddl
or
jbe
int
insl
inc
mov
push
add
out
mov
lcall
push
je
cwtl
lret
ss
ret
sbb
xchg
push
and
rcrl
pop
adc
je
push
je
test
mov
inc
or
mov
in
and
mov
add
outsl
inc
sbb
test
shlb
add
and
in
add
int3
outsb
test
xor
hlt
or
mov
fnstenv
xchg
or
adc
imul
adc
push
mov
js
scas
pop
in
cmp
pushf
jne
iret
sub
xchg
mov
fists
or
cmp
sbb
fs
cld
inc
dec
cmp
repz
jl
std
sahf
push
mov
aam
in
or
cwtl
mov
xlat
dec
pop
jg
xchg
cli
rolb
add
sub
fdivrs
dec
jmp
mov
aam
ret
sbb
out
pop
push
inc
xchg
dec
mov
push
adc
and
in
mov
idivb
orb
and
fimull
negb
adc
push
jmp
push
sti
gs
mov
sbb
dec
out
push
imul
out
out
pop
mov
movsl
adc
mov
cltd
sti
fcoms
shlb
fnstcw
push
fisubrs
lods
jmp
jg
push
fstl
cmp
nop
test
lret
cmp
pushf
leave
ja
lds
mov
lahf
mov
jmp
test
fidivl
cmp
pop
icebp
mov
dec
dec
or
in
into
inc
sub
icebp
mov
cs
insl
push
jp
mov
jne
mov
and
and
stos
das
cmc
inc
adc
stc
test
ljmp
push
fs
push
mov
fdivs
call
push
psllq
sbb
or
sbb
sbb
push
pusha
xchg
mov
jns
jp
jno
mov
loopne
push
lcall
mov
in
loopne,pn
inc
ljmp
mov
xchg
dec
icebp
ffreep
cmpsb
or
jbe
cmpsl
push
adc
je
mov
imul
inc
sbb
sti
popf
mov
sti
stos
dec
cwtl
mov
dec
jle
push
cld
push
adc
mov
adc
inc
pop
std
aam
pop
imul
lcall
rorl
mov
xor
outsb
jno
nop
or
xchg
insl
mov
js
out
push
jg
push
call
add
scas
inc
clc
jno,pt
insl
into
add
dec
repz
mov
int
inc
mov
sub
ljmp
adc
sahf
xor
xor
das
cmpsb
adc
mov
jecxz
pop
ret
pop
adc
icebp
jecxz
int3
shlb
ja
push
adc
test
jo
dec
pop
inc
mov
fsubl
pop
pusha
sub
pop
push
mov
cs
mov
xchg
mov
and
dec
roll
lock
mov
adc
rorl
pop
sub
daa
dec
mov
add
stc
sub
scas
add
test
outsb
adc
lahf
mov
and
popf
andb
inc
push
mov
inc
iret
in
xor
xlat
je
lea
sbbb
dec
xchg
jmp
xor
cltd
pop
mov
addr16
mov
xor
iret
cmpl
cmp
push
xchg
pop
inc
mov
adc
push
inc
pop
dec
rol
mov
stos
scas
shrb
jp
adc
imul
icebp
fwait
inc
sub
cmp
lock
enter
rolb
cmp
mov
sti
add
cli
cs
or
sub
fnsave
mov
and
jne
int3
pop
std
out
js
sarb
dec
gs
pop
cli
add
je
mov
test
jbe
xlat
and
or
popf
movsl
cmp
sub
repz
outsb
aaa
int3
xor
add
lea
jns
icebp
xchg
andl
fdivl
clc
mov
cli
neg
jne
jmp
test
loop
in
mov
mov
pop
ror
clc
push
les
ds
int3
bound
ljmp
and
xor
shrb
add
dec
push
lea
popf
mov
lea
cmp
fcomip
push
loope
lret
testl
fisttpll
clc
movsb
out
fcoms
jbe
jnp
test
push
xor
lods
sarb
shl
lcall
or
rcrl
mov
adc
xchg
add
outsb
jns
push
pop
and
xor
mov
lods
shrb
xchg
jne
mov
cld
testl
lcall
xor
loopne
cmp
insl
pop
lods
repnz
popa
stos
fiaddl
shrb
aas
push
fstl
and
call
push
adc
das
add
adc
fists
aas
mov
outsl
sub
out
jbe
ret
dec
mov
or
push
or
pusha
inc
pop
lods
fbld
or
call
lock
add
ss
inc
lahf
dec
ret
adc
push
fidivrl
jno
faddp
cmpsb
shrl
xchg
fcoml
adcl
cmp
lods
in
push
jns
mov
fbstp
fwait
outsl
out
cmp
leave
ja
dec
sub
push
or
or
imul
dec
sub
inc
or
mov
das
stc
dec
mov
lea
je
adc
lock
cmpsb
sbb
ja
add
mov
stc
in
out
dec
popl
in
imul
dec
mov
std
cmp
cli
lret
outsl
xchg
pop
xlat
gs
jo
xchg
daa
add
inc
mov
call
sbb
dec
subb
hlt
dec
das
mov
cwtl
mov
pop
or
mov
hlt
fistl
dec
mov
test
js
arpl
push
inc
jmp
or
arpl
out
jne
cmp
mov
mov
mov
scas
adc
repz
lock
sbb
bound
fistpll
push
call
add
inc
jecxz
loop
inc
fwait
and
cmp
repz
aas
push
or
je
or
ljmp
sbb
in
xchg
leave
arpl
and
lcall
xor
rcr
pop
xor
repz
sbb
shrl
stc
sarb
sbb
jns
sbb
in
gs
push
sub
repnz
cmc
lcall
push
jns
aas
out
mov
test
es
mov
jnp
mov
test
jle
sti
push
lea
mov
lock
jo
pop
mov
fwait
out
insb
clc
push
sub
dec
aam
dec
shlb
or
and
inc
nop
inc
repz
rcll
or
jbe
lods
xchg
cmp
cs
mov
ss
sub
shl
outsl
push
pop
push
lock
mov
leave
mov
pop
aad
hlt
testl
out
mov
aad
push
fs
add
pop
add
xlat
adc
sbb
sbb
into
ss
lret
rcll
sarb
mov
mov
inc
mov
xchg
outsb
pushf
ret
mov
fwait
int3
push
movsb
inc
jne
hlt
insl
and
fistpll
dec
bound
cltd
adc
mov
incb
xor
nop
loope
out
ret
and
xor
and
jmp
hlt
movsl
fldt
sahf
push
stos
push
cs
rcr
dec
fbld
push
mov
add
mov
pop
int
je
lods
mov
lea
pop
pop
dec
test
pop
lret
xor
shll
cmc
push
add
into
arpl
xchg
cmpsb
or
mov
and
sbb
cmpsl
sub
xchg
rclb
imul
movsb
nop
xchg
fcompl
jno
stos
popa
mov
pushf
adc
xor
and
jne
lods
jge
test
mov
shrb
nop
push
popa
mov
adc
test
xor
xchg
xchg
lcall
lea
xor
ljmp
rorl
mov
mov
stc
je
and
cli
sbb
icebp
je
push
nop
ss
push
cld
bound
add
test
add
movsl
outsb
pop
rcr
call
or
mov
cmpb
lcall
addr16
sub
shl
imul
lds
clc
ja
jno
sub
xor
inc
fcoml
pop
ret
aaa
mov
push
push
mov
addr16
out
dec
pop
mov
insb
pop
jmp
cli
or
jbe
ja
in
sar
mov
mov
add
out
ds
jno
orl
mov
pop
pop
mov
cmp
cmp
sub
stos
in
cmpsl
and
pop
dec
pop
xor
push
push
rorb
ficompl
repz
frstor
js
cmpl
rcrl
mov
repnz
ss
add
cmc
inc
add
add
push
or
xchg
in
sbb
leave
cwtl
adc
xor
jmp
mov
stos
dec
fmuls
mov
lea
pushf
in
pop
jnp
test
xor
sbb
pop
add
mov
mov
lret
cmp
pushf
mov
mov
pop
stos
lret
jae
dec
int
fsubrp
scas
les
pop
lret
lret
jo
mov
data16
push
and
scas
pop
loop
jp
in
add
fwait
imul
scas
insb
fistps
pop
dec
int3
lret
dec
pop
mov
lods
mov
fisubl
push
mov
aas
jmp
cs
dec
lds
sub
and
aas
or
loopne
pop
pushf
mov
jg
lods
ljmp
adc
fstps
scas
mov
outsb
stc
jge
icebp
aas
ds
mov
pushf
mov
pushf
jecxz
adc
subb
popa
testl
jnp
jb
mov
incb
fsubl
imul
push
push
fmulp
vpmuludq
shll
leave
pusha
pop
push
or
jle
bound
sub
cmp
fs
add
hlt
cltd
repz
adc
adc
and
sub
andl
and
ror
xlat
push
testl
mov
mov
cmp
mov
or
inc
or
inc
sahf
mov
add
mov
xchg
add
daa
add
push
fisubrl
sbb
scas
and
or
cmpsl
or
and
rclb
mov
daa
daa
add
ret
dec
lods
andb
adc
test
mov
aas
cmp
mov
or
out
clc
ss
cmpb
pop
fildll
int
jbe
pop
fcoms
stc
mov
jmp
out
ljmp
push
divl
pop
fcmovbe
mov
aam
fnsave
push
sub
adc
mov
mov
aam
fsubp
shlb
mov
or
push
mov
fwait
pusha
incl
imul
aam
movsl
inc
arpl
add
fidivl
das
clc
sti
adc
and
pop
dec
mov
xor
loope
mov
mov
cmpb
mov
rcr
outsb
pop
jb
mov
outsw
jge
mov
cld
pushl
fwait
lcall
dec
jecxz
adc
or
in
sbb
jp
dec
pushf
stc
mov
xchg
inc
add
fsubrp
imul
cmp
xor
or
cmp
fisttps
add
mov
scas
sti
push
das
xor
mov
jl
mov
enter
add
mov
push
mov
ja
mov
adc
jp
ffree
shlb
in
jl
jno
arpl
ljmp
mov
dec
fbld
sub
mov
push
pop
xchg
jp
out
in
iret
push
pop
pop
imul
inc
bound
dec
xchg
jle
testl
push
mov
test
mov
ja
xchg
mov
popa
data16
int
fcomps
dec
stos
int3
inc
dec
push
int3
jnp
adc
lahf
mov
xor
xchg
xchg
jge
dec
mov
xchg
fisubrl
xorl
test
test
movsb
shr
dec
fstpl
int
mov
rcrb
and
mov
sbb
sbb
popf
fistl
pop
mov
popa
addb
aad
int
loope
std
sub
dec
push
dec
xchg
dec
scas
imul
pop
repz
mov
data16
popa
lds
lods
int
sub
jecxz
jno
out
mov
icebp
xchg
lret
dec
push
jne
and
xchg
sarl
out
dec
rorl
adc
stos
addb
dec
cmp
sbb
sbb
es
sub
or
mov
sbb
notl
mov
sub
aad
movsb
inc
scas
cmp
bound
gs
or
and
fcoms
js
push
sub
pop
adc
lds
repz
jmp
fnstcw
int
add
mov
sub
mov
xor
inc
fisubrl
add
push
cmpsb
sbb
ret
orb
es
xor
dec
sbb
dec
mov
sbb
aas
incb
cmp
xchg
cmp
daa
or
and
sub
sbb
dec
sahf
fwait
sahf
insb
mov
pop
jns
xchg
sub
outsb
inc
insb
pop
push
rcrl
out
inc
or
rcl
out
fstpl
adc
jecxz
ljmp
push
test
mov
adc
cmp
js
push
and
cmpb
sbb
js
hlt
ss
adc
outsl
hlt
frstor
jle
mov
add
adc
je
imull
lods
cltd
mov
mov
int
loop
pop
or
add
mov
sub
cmp
call
mov
jne
sub
inc
jge
lahf
push
fisttpl
push
xchg
inc
cmp
mov
and
pop
sbb
jge
pop
pop
cmpsb
sbb
lods
sbb
cmc
jge
push
or
sti
cmp
push
push
clc
dec
outsl
or
jno
std
les
jno
mov
adc
xchg
loope
mov
xchg
fs
cs
daa
in
popa
imul
xchg
jo
xchg
cli
test
jno
mov
bound
add
jne
mov
sti
sub
or
fstpt
fidivrs
dec
or
dec
jns,pt
add
cltd
call
ljmp
jle
test
les
mov
std
pop
aam
fucomp
pop
lcall
mov
push
nop
add
and
pop
pop
pop
cmp
mov
stc
cmp
sbb
sbb
push
cmp
fcomi
jns
les
out
sahf
xor
out
push
call
sbb
pop
icebp
cmp
cmp
repz
jmp
xlat
cmp
jb
mov
jo
popa
inc
faddl
jmp
sub
mov
mov
aam
movsb
addb
mov
pop
jmp
push
int
xchg
xorb
rorb
dec
xchg
jnp
cltd
scas
dec
pusha
or
loopne
jno
js
mov
fistpl
inc
in
mov
sahf
lret
add
roll
orps
or
pop
xchg
and
jb
and
cs
xor
mov
mov
lock
xlat
ret
clc
mov
mov
pop
cmpsb
int
adc
and
mov
add
mov
ja
push
jne
lds
out
xchg
repnz
cmp
les
idivl
jp
xchg
cmp
fldl
and
lret
fldcw
and
sbb
nop
jae
loope
ljmp
and
pop
jge
lea
rorl
out
aaa
mov
dec
mov
in
xor
add
push
xor
dec
sbb
enter
mov
aas
leave
mov
imul
jne
aaa
adc
bt
pop
dec
cmp
sahf
imul
in
daa
test
xlat
aas
jb
xchg
mov
das
bound
mov
hlt
hlt
add
arpl
movsb
or
jbe
mov
cmpsb
mov
add
lret
sbb
xchg
inc
jo
daa
stc
adc
push
icebp
sub
js
pop
lahf
mov
jnp
dec
inc
outsb
pop
push
push
lds
add
mov
fdivr
gs
stc
cwtl
push
adc
cld
xchg
test
jbe
fisttpll
in
leave
in
repnz
out
cld
jne
cmpsb
incb
add
push
pop
fs
data16
push
addl
enter
arpl
and
jge
xor
push
jecxz
divb
aas
fisttpll
push
fwait
push
out
cs
inc
sar
or
or
outsb
add
cmp
lret
jnp
pusha
lods
and
ja
pop
cmp
mov
mov
mov
imul
out
adc
cmp
xchg
or
xchg
repnz
mov
push
mov
fnstcw
ss
cmp
or
push
xchg
imul
mov
fdivr
adc
mov
push
repz
add
sub
dec
gs
xchg
sahf
inc
movsb
fsubrp
fisttps
daa
mov
call
cltd
inc
adc
xchg
outsb
aaa
adc
mov
xor
pop
dec
test
jnp
cmpsb
jl
pop
push
scas
data16
mov
xor
pop
mull
sbb
jbe
xchg
sub
stos
mov
fcmove
dec
cmp
xor
jmp
call
mov
pop
lds
mov
jo
insl
mov
xor
orl
push
add
out
mov
xchg
lret
add
jns
cwtl
clc
popa
xor
in
fsubl
pop
xchg
push
jns
movsl
mov
mov
jmp
imul
jnp
adc
and
aas
pop
push
aas
test
outsl
and
scas
xchg
sahf
adc
pushf
sbbb
mov
and
loopne
pusha
or
cmc
jbe
adc
add
pushf
stos
pop
lock
inc
lock
lods
lock
push
scas
mov
sar
insl
ja
push
jecxz
add
mulb
fisubl
cltd
inc
mov
or
adc
nop
daa
incb
clc
cwtl
inc
cmp
andb
out
int
incb
aas
pop
loope
mov
adc
push
cmp
push
xchg
lods
add
cltd
jl
iret
jbe
call
add
rorb
push
inc
cmp
mov
loop
mov
mov
ja
out
ret
inc
mov
cmc
mov
xchg
test
lea
dec
inc
mov
sbb
stos
test
cltd
andl
jbe
mov
or
outsb
std
scas
xor
loop
add
int3
xor
cmp
test
loope
insb
inc
dec
cmpsb
lret
clc
lods
mov
pop
stos
mov
dec
xchg
scas
movsl
and
xor
fidivrs
sub
faddl
or
dec
dec
das
jge
fimuls
pop
data16
out
ret
cli
mov
adc
jp
aam
data16
lret
insb
jnp
sahf
dec
test
iret
sub
je
repnz
into
aad
mov
inc
mov
mov
mov
outsb
insl
pause
mulb
shlb
fsubs
mov
pop
jmp
and
xor
push
push
jb
jne
mov
clc
inc
dec
and
adc
wrmsr
mov
and
scas
pop
stos
movsl
sbb
inc
sub
cli
pop
int
dec
mov
sti
mov
lods
push
mov
mov
scas
out
cmp
pushf
cmp
xchg
gs
adc
pop
fwait
rcrb
jg
jp
lcall
sub
mov
push
pusha
scas
or
inc
pusha
jns
adc
cmc
dec
sarb
shll
cmpsl
jecxz
lret
rorl
xor
negl
xor
push
or
pop
push
jb
int
push
dec
test
mul
jae
nopl
repz
or
pusha
and
mov
mov
adcb
pop
jmp
aam
stos
fsubrl
inc
sti
out
lahf
xor
jmp
notl
fbstp
test
cld
sub
cmpsb
xor
and
pop
push
dec
in
pop
into
movsl
push
jl
fmuls
mov
iret
cmp
mov
pop
loopne
inc
scas
popf
ljmp
jle
inc
mov
lahf
mov
insb
xor
cmpsb
push
push
pop
scas
jns
outsl
ret
scas
insb
adc
je
js
add
cmp
movsb
nop
dec
stos
insl
stos
pop
inc
cld
popa
xchg
outsl
test
add
lea
sbb
lods
dec
mov
fwait
mov
int3
or
mov
cmc
cmp
enter
and
stos
loope
add
pop
xor
mov
fidivrl
push
dec
or
imul
or
popf
adc
jbe
aas
mov
pop
cmpsb
mov
in
sub
inc
pop
cmp
test
jb
xor
lret
imul
icebp
pop
jg
lret
sar
addb
rcl
mov
xor
pop
inc
out
push
cltd
and
xor
jge
sbb
mov
pop
jbe
dec
int
mov
cmp
fldcw
fiaddl
mov
jbe
test
jb
sbb
imul
sbb
iret
push
in
add
push
jp
mov
sbb
les
and
sub
shll
std
std
pop
pop
fidivl
xchg
lods
nop
adc
add
std
jns
ljmp
mov
jle
fisubl
jne
xchg
dec
or
shrl
test
lods
negl
aas
aaa
int3
or
pop
lret
push
cmp
ljmp
loop
es
jg
add
add
pusha
add
aad
and
push
push
adc
cwtl
stc
clc
jg
jnp
fdivl
out
clc
and
inc
and
mov
xor
pop
sti
inc
outsb
fistps
sahf
gs
es
sbb
roll
imul
add
jg
jmp
mov
psubsb
push
sbb
and
cmp
fsubrs
ds
xchg
aas
pop
xchg
xorb
flds
jmp
sbb
aad
mov
inc
es
xor
stc
mov
pop
loop
adc
das
cltd
pop
shl
jmp
ljmp
dec
lods
enter
sub
popf
cmp
sbb
mov
les
jge
call
ja,pt
icebp
fmul
mov
repnz
dec
ret
test
push
jae
movsb
sub
sub
test
fstpt
shl
pusha
jbe
imul
mov
es
mov
inc
mov
add
pop
or
add
mov
mov
push
sub
xchg
or
mov
adc
cmc
test
or
xor
addl
daa
xchg
push
addr16
pushl
dec
mov
pop
add
aad
out
push
insl
add
fbld
fdiv
cmp
inc
adc
stc
cmp
mov
mov
push
fstpt
das
mov
test
stos
aaa
and
mov
mov
cmp
movsl
jne
lret
addr16
movsl
pop
fsts
lea
xchg
mov
mov
dec
cs
arpl
dec
outsb
lods
fadds
inc
pop
inc
bound
outsb
addr16
rcrb
xor
out
shlb
adc
movsl
push
sbb
push
rorl
inc
cmp
mov
mov
jle
inc
push
mov
je
jge
pop
xor
jp
cmp
xchg
jg
fisubrl
jo
shrb
pop
add
in
loope
inc
mov
add
pop
shlb
mov
xor
scas
aam
imul
stos
ljmp
in
popaw
or
out
arpl
and
add
xor
sahf
pop
mov
lret
cld
insl
scas
mov
test
loopne
call
adc
test
or
mov
jecxz
ret
seta
gs
xor
int3
mov
pop
sbb
ss
push
mov
call
sbb
push
pop
xchg
dec
rorb
xchg
adc
rol
aad
lret
xchg
and
aam
rol
icebp
mov
shrb
mov
xchg
push
add
popa
xorb
out
push
sbb
jno
push
sbb
pop
push
and
mov
out
or
sarb
cld
dec
daa
push
jb
loope
mov
mov
outsl
sbb
mov
sbb
pusha
call
int3
mov
lods
les
fmull
jb
push
in
cmp
sub
lds
xor
mov
push
xor
or
sub
cmp
push
inc
cmp
sti
add
xor
daa
outsb
push
shlb
lcall
sub
cmp
fwait
popf
pop
div
into
add
xchg
int
test
sbb
xor
out
xchg
mov
pop
add
out
or
mov
mov
sub
rcll
pop
mov
pop
in
xlat
aaa
pop
pushl
lret
icebp
mov
gs
jmp
rcrl
aad
icebp
stos
int3
cmc
repz
inc
pop
or
add
out
adc
mov
scas
dec
fwait
mov
faddl
xchg
push
rol
cld
hlt
push
xchg
xchg
mov
repz
and
adc
loope
pop
out
push
andb
add
mov
sub
sbb
adc
mov
cmp
mov
ss
mov
fdivrl
jecxz
adc
orl
sub
paddusb
pop
std
out
dec
out
adc
adc
fmuls
stos
mov
cmp
jno
insl
mov
mov
outsl
mov
fcmovnb
loope
repnz
cmpsl
cmp
cmp
mov
jle
test
pop
xchg
mov
or
ja
les
dec
repz
insl
mov
clc
dec
cwtl
sbb
xchg
mov
add
rcll
jae
movsl
or
and
sbb
cmp
aaa
lods
jecxz
cmc
pop
jg
push
cmp
sub
dec
mov
in
jmp
add
fcomps
xchg
rcrb
xor
mov
xor
mov
call
jl
mov
xchg
and
mov
add
das
mov
rol
sub
cmp
sarb
cmp
mov
int
pop
cmp
aaa
dec
in
insl
fdivr
mov
pushf
push
insl
push
cmp
mov
shlb
inc
pop
push
xor
push
fimuls
jne
and
mov
call
mov
mov
pop
imul
fdivrl
sub
mov
jmp
adc
push
sbb
outsb
inc
in
add
lods
pop
movsb
arpl
fs
dec
cmpsl
fwait
mov
aas
fcompl
jb
or
jp
rorb
repz
mov
std
xor
lret
xchg
in
sbb
addr16
or
mov
rcl
or
roll
iret
leave
mov
js
std
jo
adc
cmpsb
jge
fcomp
mov
cmpsb
jae
and
divb
inc
cltd
sub
clc
dec
movsb
bound
fs
pop
outsl
sbb
pop
jne
das
aam
out
sub
pop
stc
test
sbb
lods
xor
sub
in
enter
mov
mov
xor
xchg
mov
or
dec
int3
shr
or
cwtl
aad
into
adcb
jb
push
cld
mov
push
int
sbb
out
movsl
ds
cltd
mov
cmp
adc
ret
mov
stos
dec
iret
insb
sbb
arpl
adc
mov
push
je
dec
cld
das
mov
popa
jno
push
push
xchg
pushf
xor
and
outsl
jl
push
cltd
pop
gs
cmp
adcl
add
or
out
fstpl
push
xchg
dec
jecxz
js
push
ret
jno
pusha
jbe
ficompl
cmp
xor
test
mov
sbb
jecxz
jo
enter
or
imul
inc
xchg
loopne
cmpsl
out
arpl
pusha
scas
xchg
fildl
movsl
insl
loope
stos
arpl
jge
pushf
adc
mov
je
xlat
lds
je
addr16
and
lret
cmc
call
add
cmpsb
jae
icebp
lods
inc
sbb
or
jnp
adc
mov
jecxz
lahf
scas
outsb
sbb
nop
jo
add
sub
inc
arpl
lds
sbb
xor
add
bound
mov
jmp
fistpll
aaa
mov
push
outsl
lcall
xor
mov
jg
fisttpll
mov
data16
test
iret
adc
push
out
das
test
lret
cli
fisubl
lea
out
ds
cmpsb
mov
cld
xchg
ss
punpcklwd
repnz
fldt
mov
lret
gs
jbe
dec
mov
cs
cmp
jge
add
fbld
adc
int
mov
and
in
in
lcall
jmp
scas
scas
loop
pop
fs
xor
fwait
xchg
jae
xchg
jae
cli
pop
ficompl
xchg
and
cmc
lock
test
sbbb
scas
xor
out
fists
call
loop
arpl
imul
stos
test
or
loopne
test
mov
cmpsb
mov
dec
decb
xchg
call
test
dec
imul
and
lods
adc
mov
mov
rclb
orb
gs
adc
cmc
inc
out
sub
leave
cmpsl
push
cmp
sarl
xchg
mov
push
pop
jecxz
out
cld
scas
inc
jnp
mov
xor
arpl
addl
pop
mov
fildll
push
lds
add
dec
lret
sub
sbb
aad
push
mov
into
mov
pop
pop
fwait
clc
into
ljmp
xchg
cmp
icebp
cwtl
rcr
out
push
cmp
mov
shlb
cwtl
adc
add
sbb
jle
sub
push
cmpsl
iret
mov
sub
pop
out
mov
pop
sbb
clc
test
roll
pop
or
aad
xchg
jmp
dec
icebp
or
fsub
push
push
dec
jp
cmp
lods
mov
loopne
push
dec
loopne
mov
mov
decb
repz
js
or
dec
rcrl
repnz
xchg
mov
ret
loope
pop
pushf
push
enter
lret
jecxz
xchg
aam
std
cmpsb
mov
jle
loopne
xor
or
jno
test
adc
fsubl
fs
xor
in
hlt
inc
jnp
dec
sbb
dec
lea
sub
test
shr
cmp
cmc
jae
js
movsl
or
clc
sbb
dec
into
int3
aaa
loopne
xlat
ja
cmpsl
cmovbe
cmp
cmc
stos
lret
cmpb
lahf
mov
jnp
push
jnp
lods
lret
insl
adc
dec
leave
jp
xchg
inc
pop
mov
ss
jecxz
push
jo
and
add
fs
idivb
cli
shll
pop
subl
outsb
lcall
xor
and
scas
push
fistl
lock
or
cmp
in
sub
sub
lods
popa
lcall
fcmovbe
mov
sbb
aas
mov
sahf
xchg
xchg
push
mov
push
stos
out
in
xor
mov
arpl
cmp
inc
mov
jbe
push
jne
jl
push
lret
sub
inc
mov
das
leave
not
inc
aaa
xor
loop
andb
mov
mov
inc
hlt
jbe
popf
loop
xor
add
mov
dec
mov
and
cmp
cmpsl
test
jo
and
loope
or
jp
push
mov
push
into
stos
sub
test
jecxz
push
xchg
xchg
xchg
pop
sub
and
pop
xchg
stos
test
out
adc
mov
or
or
test
daa
adc
and
daa
push
outsb
xchg
xor
sbb
das
cmp
aaa
les
mov
sub
push
push
inc
jmp
fidivrl
loopne
jmp
and
lods
dec
std
push
fstl
out
sahf
fadd
loope
dec
and
and
mov
cmp
in
ret
pop
push
cwtl
mov
orb
ffreep
jecxz
mov
jb
lahf
push
mov
int
sub
push
sarl
sub
lods
add
mov
mov
loopne
mov
sub
add
xor
add
sbb
pushf
ss
aam
add
adc
test
nop
push
jns
adc
into
test
xchg
shl
bound
cmp
clc
out
pop
and
push
xchg
lods
xchg
rcll
popa
xchg
mov
scas
aam
push
xor
push
jg
pop
pop
and
sbb
sbb
xor
cmpsb
ret
stos
mov
mov
push
sub
ljmp
pop
sti
iret
push
arpl
lock
push
pop
pop
cbtw
adc
clc
test
pop
mov
xor
push
pop
fidivrl
mov
jnp
jno
repnz
inc
roll
sub
xlat
jne
jecxz
ss
mov
cmc
push
call
and
lahf
out
jle
pop
mov
aaa
adc
aam
xlat
inc
add
pusha
adc
mov
test
push
daa
lea
push
pop
xchg
mov
sbb
sub
ret
xchg
lods
jae
xor
shlb
mov
xchg
lods
pop
cmpsl
testb
loop
outsb
sub
push
fs
dec
mov
in
lock
loop
scas
rcrl
in
push
divb
dec
inc
insl
sbb
dec
cli
and
daa
fnstsw
outsb
mov
arpl
cli
mov
pushf
hlt
jge
cmpb
and
jmp
ljmp
cmp
es
lahf
loopne
outsl
dec
push
or
dec
pop
jb
loope
roll
in
sar
mov
xchg
test
insb
icebp
adc
mov
popa
jne
adc
push
jb
stos
dec
pop
std
mov
std
jl
movb
cmpsb
movsl
jecxz
mov
cltd
fnsave
mov
xor
lods
dec
cli
insl
xchg
insl
les
cltd
cli
add
jg
xchg
jmp
cli
test
addr16
lret
out
ja
sub
mov
mov
push
sbb
les
add
xchg
ret
mov
insb
adc
shl
xor
sbb
sub
mov
pop
jg
icebp
mov
ret
and
stos
add
push
adc
pop
inc
dec
fwait
mov
negl
xchg
or
into
inc
aam
icebp
xchg
pop
push
xchg
inc
xchg
cli
jge
insl
int
jge
ljmp
hlt
in
repz
mov
mov
ja
hlt
out
push
addr16
cli
in
fcomps
movsb
int3
sarl
pop
xchg
pusha
repz
add
sbbb
out
in
jg
push
inc
sub
sub
mov
mov
sbb
cmpsl
repz
sahf
out
pushf
xor
jle
scas
xor
or
add
ds
xchg
cmpsb
ret
cmp
dec
mov
fwait
and
dec
jmp
inc
fsubrl
jg
shlb
dec
test
rclb
cld
mov
out
sbb
mov
xchg
mov
clc
outsb
das
add
arpl
push
dec
insl
jp
sbb
sub
or
ja
fdivs
jo
lret
jp
add
rclb
push
dec
jl
adc
out
mov
gs
es
pop
sbb
ret
decl
je
mov
inc
js
sub
stc
clc
xchg
cmp
ja
test
xchg
fadd
test
push
cmp
jl,pt
cwtl
rclb
and
call
xchg
sub
sub
pushf
lea
cli
mov
fdivl
popf
mov
cmp
test
rolb
aam
testl
jne
pop
or
mov
adc
xchg
ss
xchg
push
or
xchg
ljmp
mov
mov
sbb
jne
cmp
jno
xor
add
jbe
in
push
dec
out
mov
adc
lods
lea
lcall
jmp
sub
mov
es
mov
aad
xchg
imull
pop
mov
mov
mov
mov
negl
inc
outsl
fldpi
daa
repnz
jnp
and
call
mov
push
xchg
call
jno
insl
cmp
xor
add
out
sbb
call
jb
mov
mov
gs
in
jge
or
push
je
call
data16
add
aaa
outsl
push
loopne
mov
push
mov
mov
sub
and
push
pop
xlat
and
pushf
movsl
imul
sbb
jl
mov
jbe
outsl
sub
out
mov
add
jp
rorl
arpl
inc
dec
je
in
fidivrl
push
in
in
fadds
cmp
fisubrs
xor
imul
or
dec
jbe
lock
cmp
call
sbb
or
dec
rorl
push
insb
test
push
xchg
sbb
in
fimuls
fcmovnu
iret
lea
mov
xor
inc
or
jbe
cmpsb
repnz
sbb
sub
xlat
mov
nop
aad
push
mov
push
sbb
cmp
fwait
cmp
fisubrl
cmp
xor
dec
push
or
adc
les
sbb
and
add
fistpll
pop
rcrl
frstor
inc
imul
adc
scas
rol
in
jo
loope
cwtl
sbb
outsl
sub
adc
pop
pop
mov
test
inc
js
xchg
nop
cs
sub
xchg
fldl
and
inc
imul
incb
and
test
psubusw
and
mov
and
pop
movsb
adc
psubsb
pushf
es
enter
cmpsb
arpl
mov
int3
cmp
xor
mov
and
adc
jle
out
aaa
lock
popa
or
mov
out
stos
mov
movsl
lcall
jnp
test
xor
mull
sbb
mov
sahf
xor
jbe
das
cltd
mov
stos
jno
and
push
and
sub
ja
xchg
mov
out
pop
cwtl
pusha
add
fmuls
and
rol
mov
mov
pop
fsubl
out
cmc
xchg
andb
js
pop
push
mulb
pop
push
mov
add
adc
xor
jno
adc
mov
ja
jmp
shl
cmp
lds
mov
xchg
cmc
pop
jnp
arpl
je
sub
dec
dec
pop
ffreep
mov
mov
in
jbe
add
nop
scas
in
aad
cmp
rcll
loope
bound
andl
adc
fidivrs
adc
aas
sub
mov
adc
loope
hlt
loope
cmp
sbb
cli
repz
orl
dec
xor
push
stc
movsb
sub
lock
ljmp
test
mov
and
inc
addl
lret
mov
mov
xchg
iret
shlb
pop
es
aas
mov
insl
vmwrite
lret
lcall
mov
or
mov
push
mov
sub
repnz
adc
leave
lret
pop
jl
sub
icebp
dec
mov
cmc
lds
nop
mov
loop
sti
rolb
cmp
test
mov
ss
aas
or
movsb
and
xlat
mov
mov
fistl
push
mov
out
cltd
push
int3
out
cmp
inc
jle
and
mov
add
sbb
repz
enter
inc
mov
imul
jecxz
es
icebp
mov
add
dec
pop
repnz
loop
in
test
push
cwtl
repz
xor
push
inc
scas
pop
movsl
cmp
shlb
inc
push
mov
int
pop
loop
test
ret
jo
gs
in
push
pop
jb
pop
leave
cltd
push
jge
dec
and
mov
mov
clc
faddl
out
lahf
sarl
pop
imul
nop
fcoml
test
or
xorl
add
mov
mov
in
iret
call
aas
adc
adc
xchg
jo
dec
cwtl
sub
xor
sbb
or
cmp
add
mov
xor
sbb
sbb
cmpsb
es
out
xchg
push
pop
int3
leave
inc
xor
jl
inc
imul
jge
in
lret
cmpsb
shrl
xor
xor
fistpll
jecxz
xchg
jmp
sub
fildll
lods
sbb
arpl
or
dec
or
inc
and
cmp
add
popa
and
jg
orl
mov
mov
and
pusha
xorl
pusha
mov
fnstsw
aam
aaa
dec
pushf
xor
jne
jo
xchg
rcr
popa
jmp
push
xor
xchg
hlt
ja
fiaddl
pop
xchg
pop
jmp
sbb
jns
pop
or
addr16
leave
jb
xchg
and
pop
mov
xor
adc
lods
shll
jecxz
das
sub
or
dec
sub
in
cmp
fisttps
inc
push
jnp
or
out
daa
nop
in
pop
dec
add
mov
shll
outsb
imul
lods
dec
mov
insb
push
push
repz
jp
pop
jg
adc
push
cmp
mov
mov
rorb
lret
dec
lea
cltd
push
jle
leave
lods
pop
jle
bound
pop
mov
sub
push
lret
mull
sbb
inc
dec
loop
fcmovnbe
jne
xchg
call
pop
rolb
repnz
gs
push
adc
add
mov
mov
movsb
fisubrl
inc
sub
stc
shll
icebp
stc
stos
stos
sbbl
loope
hlt
insl
add
adc
cli
sahf
imul
mov
mov
sbb
gs
clc
out
dec
xchg
daa
push
movsb
and
ret
cmpl
dec
je
and
test
sub
outsb
bound
inc
xchg
pop
scas
push
and
adc
adc
adc
sbb
std
adc
aaa
push
push
repz
inc
je
push
cmp
mov
lahf
mov
and
dec
pushf
push
xor
inc
xchg
arpl
pop
adc
inc
outsl
loope
xchg
ljmp
inc
push
leave
lret
pop
bound
les
adc
std
test
push
movsl
adc
jb
jmp
jns
and
adc
pop
push
mov
jbe
sub
popa
gs
cmp
ror
push
cmp
xor
ljmp
and
fmuls
push
mov
out
push
popa
fsubr
adc
adc
pop
lods
mov
pop
cmp
mov
push
call
sahf
mov
jbe
inc
and
push
andb
mov
sti
outsb
mov
repnz
pop
lods
sub
xor
insl
mov
cltd
enter
cmp
stos
jg
lahf
cmp
cmp
xor
pop
popf
hlt
cld
scas
and
les
in
cwtl
or
jno
es
jmp
jle
ret
popa
jp
push
faddl
scas
mov
jmp
sbb
int
xor
jecxz
sbb
adc
pushf
jmp
mov
lods
push
into
lahf
sbb
inc
js
lods
add
lcall
jo
cmp
ss
repz
mov
jb
rcrl
shl
mov
popa
test
push
add
lods
in
sub
add
push
popa
lss
and
and
add
dec
jo
pop
jno
mov
mov
pop
out
xchg
frstor
push
cld
mov
aaa
push
gs
cmpsb
xchg
add
outsl
fs
js
data16
shrl
cs
mov
and
add
adc
rorl
lret
loopne
fwait
test
fisttpl
pop
inc
mov
sbb
jno
movsl
les
mov
jp
outsb
push
mov
shll
ret
push
or
movsl
push
xor
dec
testb
fucomp
ja
or
push
mov
pop
mov
test
or
ror
bound
test
int
cmp
sub
rorl
sub
repz
xchg
pop
in
je
sbb
fs
push
insl
bnd
sti
mov
jb
push
cmc
sub
jns
xchg
imul
push
push
popa
cld
cwtl
popa
xor
in
mov
adc
xor
cmpsl
xchg
push
jmp
dec
testb
mov
addr16
aam
adc
add
jg
jnp
mov
insb
cs
add
js
shrl
adc
cmp
addl
add
add
xor
inc
imul
in
in
fcmovu
stc
daa
daa
test
lods
arpl
mov
mov
cli
mov
sub
dec
ja
sti
imul
cmp
pop
cli
bnd
xchg
ret
stos
cmp
add
mov
and
sbbl
push
add
sub
cli
mov
push
cmp
pop
sbb
mov
in
mov
adc
pop
sub
cmp
cli
adc
into
jo
xchg
repnz
jbe
ret
in
xchg
rcl
push
sub
dec
cmp
aad
into
sub
cmp
push
pop
sbb
jmp
popa
aam
mov
pop
out
mov
nop
lea
sbb
and
sub
ss
neg
aaa
fisttpl
fidivrs
sbb
mov
adc
xor
add
push
test
cmpsl
inc
leave
jbe
jns
in
mov
mov
dec
movsb
push
scas
ss
xor
pop
rcrb
sbb
xlat
mov
add
fimuls
mov
sbb
push
hlt
and
sub
lret
sub
add
and
jae
mov
sbbb
je
jnp
shlb
lods
lock
xor
scas
outsl
inc
inc
pop
sub
push
jno
jo
test
out
imul
pop
in
push
fstps
push
testl
das
xchg
jmp
add
mulb
movsb
mov
lcall
push
adc
push
lods
and
push
js
jmp
xor
shr
xchg
mov
push
lahf
sbb
andl
sbb
mov
jecxz
std
leave
push
fxam
in
movsl
icebp
xchg
xchg
ret
inc
add
inc
iret
push
adc
mov
pop
shlb
pop
inc
xchg
xorb
adc
outsl
es
rclb
mov
lret
lods
fisubs
mov
sbb
cmp
mov
sub
pop
mov
mov
stc
cmpsb
dec
cmpsb
outsl
cltd
movl
mov
jno
push
inc
ss
lock
push
mov
ret
leave
test
jns
fldenv
inc
sbb
xor
jae
out
mov
fsub
arpl
popa
mov
mov
or
jbe
mulb
mov
cld
xor
or
lret
sub
in
sub
push
test
mov
adc
push
mov
pop
push
dec
xor
sub
test
ja
rcrb
sbb
sbb
adc
incl
jge
pop
int3
popf
push
sub
inc
push
sbb
pop
fmull
add
ucomiss
fnstsw
aad
sahf
sahf
lret
js
cmc
xor
inc
xor
push
and
sbbb
rcl
in
in
push
shlb
xchg
ljmp
mov
loope
sbb
cwtl
fdivr
addl
insl
mov
pop
dec
int3
pop
jmp
pop
outsb
sbb
mov
repnz
cli
mov
leave
insl
jle
or
dec
ds
xchg
cmp
fwait
cmp
outsb
cmpsb
mov
push
and
xor
dec
aam
add
jno
xchg
add
out
sub
mov
std
loop
cmp
ja
sub
iret
lea
out
push
mov
xor
dec
lods
inc
cmpb
push
loopne
or
in
and
xchg
cmpsl
popf
cmp
xor
cmp
pop
mov
adc
adc
addr16
imul
andb
xchg
data16
test
sti
int3
out
aas
mov
adc
pop
out
inc
inc
mov
cmpsl
sbb
arpl
es
data16
sbb
enter
mov
leave
rcrb
pop
test
xchg
add
mov
das
fidivl
out
mov
out
les
pop
mov
mov
or
fbld
in
pop
and
mov
jae
mov
jns
dec
mov
les
scas
fcmovbe
and
xchg
push
cli
gs
test
xchg
cmp
add
and
je
mov
testb
mov
dec
stos
shll
cmp
jne
jge
out
cmpsb
or
mov
dec
mov
test
mov
data16
xchg
imul
loop
sahf
lods
ret
sbb
arpl
pop
adc
lea
rcr
ja
mov
inc
dec
push
mov
aam
repnz
popa
jno
jg
xchg
mov
pop
and
jae
out
aad
inc
cmp
subb
out
hlt
out
mov
les
ficomps
xor
mov
mov
push
cltd
hlt
mov
cli
adc
mov
push
sbb
out
loop
mov
sbb
sub
mov
jo
or
aas
mov
jle
mov
xor
fstpl
movsl
add
subl
jg
jl
push
pop
pop
sbb
loope
jge
lock
or
xor
enter
aaa
je
mov
stc
pop
push
int3
lods
xor
subb
jo
push
sahf
sub
push
hlt
sbb
adc
fistpl
frstor
pop
sbbl
cltd
mov
movsb
dec
fwait
ret
jnp
sub
adc
arpl
call
ljmp
dec
xchg
test
xor
pop
inc
sahf
stos
adc
aad
jmp
pop
repnz
movsl
push
int3
jmp
adc
fcompl
out
adc
xchg
insb
cmpsb
inc
add
call
xchg
mov
imul
mov
stos
stos
add
and
ja
xor
xchg
adc
cmp
pop
mov
ret
mov
insl
das
in
push
pushf
add
mov
xor
stos
mov
inc
aas
and
xchg
xchg
leave
mov
jl
imul
arpl
pop
repnz
inc
out
shlb
loopne
sub
pop
fdiv
addr16
jae
push
mov
inc
adc
and
mov
mov
cs
test
pop
mov
pop
push
cs
mov
sarb
rol
notb
xor
stos
jnp
dec
mov
mov
repnz
dec
daa
xor
mov
ret
scas
fsts
in
jne
mov
cs
fs
test
xchg
pop
out
jecxz
add
or
cltd
cmpsl
sbb
test
add
arpl
aam
sub
cmp
out
sub
push
dec
pop
or
jp
cmp
subl
fucomip
cmp
xchg
shrl
orl
and
mov
push
xor
and
pop
sbb
out
mov
push
out
std
push
popf
jbe
mulb
outsl
jle
into
xor
jmp
shl
loop
dec
lret
jp
xchg
and
daa
fisttpll
sahf
loopne
and
jg
push
and
cmpsl
mov
cmp
xchg
jns
xor
xchg
out
std
js
add
inc
xchg
aad
mov
je
mov
push
in
pop
jmp
xor
and
in
fdivrp
int3
out
push
dec
outsl
inc
pop
hlt
cmp
and
aam
pushf
pop
das
int
mov
int
dec
pop
sbb
xchg
jg
cmpsl
and
cmpsb
push
mov
bound
xchg
sbbl
sbb
scas
std
jl
sub
push
into
xchg
add
fdivr
jl
rcrb
push
mov
popf
adc
lock
movswl
scas
xor
icebp
mov
dec
lds
imul
xchg
adcb
or
scas
mul
sub
xchg
outsb
jbe
loopne
dec
dec
push
inc
push
jbe
xor
aaa
push
cmp
jmp
pop
jecxz
lock
mov
push
sub
adcl
mov
leave
insl
jge
sub
pop
pop
fs
lea
fldt
mov
mov
xchg
icebp
mov
dec
cmp
outsb
imul
shl
mov
in
jnp
sub
int
mov
ljmp
movsl
dec
out
push
inc
mov
in
sub
dec
add
scas
sbb
test
dec
push
or
ss
mov
or
sub
ljmp
lods
pop
jge
int
inc
scas
in
pop
xchg
dec
rorl
arpl
lcall
mov
mov
pushf
jmp
aad
andl
icebp
mov
or
or
xchg
loop
jg
lods
mov
jne
das
enter
cmc
push
sahf
push
inc
push
mov
mov
sarb
adc
push
adc
les
das
les
fsts
aam
jno
leave
and
movl
push
mov
stos
jge
push
sbb
out
jae
mov
adc
jae
push
cmp
scas
leave
addr16
xchg
pop
or
sub
lret
cwtl
cmp
xchg
incl
or
cld
cmpsl
mov
adc
mov
cmc
and
repnz
xor
nop
fcmovne
rcrl
addb
negl
sahf
in
sbb
daa
dec
sub
je
fwait
add
mov
mov
scas
pusha
pop
stos
jg
pushf
xchg
push
stos
rorb
movsl
and
ss
jo
add
fs
push
jnp
xchg
sub
push
in
mov
call
popa
mov
inc
loop
cmp
cwtl
xorl
sbb
or
cmp
cltd
out
fs
push
xor
mov
rcl
add
insl
jo
dec
arpl
jbe
inc
out
cmp
mul
out
jae
mov
mov
jns
ret
push
dec
xlat
rcrb
xchg
mov
cs
cs
add
pop
icebp
cmp
cmpb
sub
and
pop
cmp
subl
cmpsb
sbb
cmp
cmp
mov
hlt
lods
xchg
sbb
dec
dec
and
fld
or
popf
loope
iret
cs
in
sahf
push
aad
mov
iret
dec
cltd
in
test
pop
faddl
enter
sub
jmp
jne
cmp
popa
and
icebp
or
imul
jmp
insb
arpl
rol
xchg
ficomps
mov
icebp
orb
ss
rcrb
dec
mov
test
push
loope
sti
cmp
sub
test
jns
scas
jge
push
mov
out
adc
cmp
push
popl
jne
ret
repnz
adcb
outsl
jge
xlat
xlat
mov
pushf
cs
shll
pushf
das
pop
idivl
ror
in
leave
mulb
jle
inc
test
ret
les
mov
in
das
sbb
ljmp
mov
dec
lds
movsb
push
xchg
imulb
fcmove
mov
cld
inc
cmp
mov
mov
xchg
fisubrl
jecxz
cs
lret
out
push
sbb
cmp
pop
inc
lcall
mov
jbe
or
xor
dec
adc
imul
mov
cltd
mov
mov
std
xor
int3
es
pusha
mov
mov
ss
xor
mov
inc
in
movsb
xor
es
loop
pusha
cmpsb
cmp
push
mov
in
fs
movsl
movsl
fs
or
addr16
mov
push
movsl
jb
or
mov
filds
bound
add
jbe
ret
shlb
cmp
and
jb
xchg
dec
mov
mov
pop
dec
xchg
movsl
jns
lods
sbb
enter
imull
sti
lods
cmp
mov
nop
call
xor
xchg
movsb
orb
repnz
fdivl
repnz
movsb
inc
xchg
cmp
and
mov
or
mov
psubusw
mov
mov
mov
jl
add
push
idivl
pop
mov
mov
int
mov
lds
adc
cmp
or
add
jle
jle
in
enter
adc
pop
ja
mov
jmp
fistps
aam
jl
jg
lds
into
add
sub
push
ljmp
cmpb
mulb
stc
jmp
push
inc
call
jne
sub
shll
loope
shll
inc
repnz
push
gs
mov
adc
xchg
fs
mov
je
inc
out
lock
inc
and
imul
in
cmp
pop
imull
outsb
xchg
push
aas
adc
ret
xchg
jo
call
dec
mov
outsl
es
lock
mov
adc
loope
fadd
scas
sub
adc
dec
aam
jmp
addl
push
cvttps2pi
push
xor
jl
test
pushf
push
jle
mov
dec
sbb
aad
pushf
xchg
loopne
pop
xor
cmp
lea
mov
outsb
in
div
push
mov
loop
fmull
jae
pop
mov
mov
cmp
xor
or
adc
cld
mov
movsb
push
mov
or
sub
jno
xor
int
or
xor
fwait
lret
mov
pusha
mov
mov
or
and
xchg
or
mov
nop
jg
sbb
clc
ljmp
mov
inc
push
jg
aas
push
adcb
xchg
jge
push
pop
xchg
cld
icebp
and
mov
xchg
je
lret
enter
repz
jns
ds
gs
mov
xor
cmp
adc
loope
cmp
sub
and
out
cwtl
lcall
push
xchg
dec
sub
pop
sarb
outsl
push
push
into
sub
mov
nop
sub
ja
int
jp
mov
cmpl
mulb
pop
insb
jge
xchg
cltd
sbb
mov
std
add
mov
jbe
scas
fwait
iret
int3
xchg
sub
mov
stos
sbb
cmp
sub
and
xor
mov
pop
mov
dec
aad
mov
mov
mov
test
push
jge
jns
push
push
lret
aaa
inc
dec
cs
outsb
aad
insb
xor
jb
xchg
and
xchg
jmp
clc
std
cld
jne
and
push
and
shll
xchg
in
fadds
dec
pop
lods
inc
sub
rcll
cmp
and
mov
int3
fisttps
into
inc
pop
xchg
and
cs
mov
mov
jno
daa
and
mov
dec
add
mov
stc
xchg
dec
xchg
insb
in
popa
bound
adcb
cmpsb
push
mov
mov
int3
stos
sub
imul
mov
push
stos
test
je
shrl
sub
mov
pop
and
jae
add
jns
add
jecxz
add
adc
fcomp
mov
cli
fs
sub
mov
js
aam
leave
movsb
out
dec
loop
sbb
daa
pop
mov
inc
or
scas
xor
adcl
fiaddl
outsb
or
aad
fisubl
mov
repnz
imul
push
xchg
dec
sbb
sub
out
outsl
imul
cmpsl
xchg
iret
sub
inc
mov
sub
xor
sub
add
adc
cmp
sub
sub
inc
mov
leave
js
pop
push
xor
xchg
inc
lcall
ret
inc
gs
jle
out
aaa
ja
mov
and
roll
mov
loop
jp
cmp
in
mov
mov
scas
sbb
das
or
imul
xchg
jge
lahf
adc
sti
sbbb
adc
mov
cmp
add
out
stos
leave
push
mov
idivb
int
dec
lea
stos
mov
push
push
adc
jae
xchg
in
or
cli
sbb
mov
inc
dec
add
sbb
pushf
in
loopne
mov
scas
ret
aaa
adc
hlt
ljmp
pop
push
jle
data16
outsb
pushaw
inc
lahf
outsb
int3
or
ss
leave
or
js
adc
stc
push
fs
in
xor
push
cs
in
xor
mov
sub
sub
sbb
xor
aad
movsl
mov
andb
pop
jmp
icebp
and
mov
jne
push
push
std
int3
psllw
mov
xorb
sbbl
lea
dec
bound
jae
push
pop
adc
push
cmp
loopne
dec
call
mov
orb
jecxz
ret
call
out
adc
leave
shll
pop
cmp
xor
pop
add
jl
fmuls
shrl
jge
ss
shlb
out
mov
pusha
aas
loop
fstl
or
and
shrl
and
js
jbe
dec
outsl
lods
loopne
xchg
mov
push
out
leave
out
or
xchg
and
sbb
sbb
cmp
sbb
jl
cmp
add
xchg
mov
divl
pop
push
lds
sub
rclb
mov
icebp
out
int3
fdivrl
and
push
mov
mov
and
sar
lcall
dec
jnp
repnz
cwtl
data16
xlat
mov
daa
ljmp
gs
lret
std
pusha
inc
sub
cmc
icebp
push
or
fiadds
sub
sbb
arpl
call
int
jb
cltd
scas
xor
out
lret
push
lret
fisttpl
movsb
push
shlb
jge
xchg
popa
cwtl
cmp
int
fistpll
mov
in
push
orb
jmp
sbb
popl
push
and
push
inc
es
into
ret
inc
push
aam
dec
stc
aad
inc
stos
out
mov
cmp
bound
mov
inc
aam
in
inc
std
jp
ljmp
jno
xlat
xor
push
jae
push
adc
cwtl
or
mov
jp
mov
cld
pop
pushf
lret
cmpsl
in
fildll
push
push
lcall
inc
test
shrb
or
icebp
inc
add
out
and
jb
bound
fidivrl
cli
mov
sbbl
sub
shl
mov
outsl
xor
test
mov
cmp
std
scas
popa
pop
push
fsubrp
pop
popf
cmp
js
dec
stc
xor
aad
pop
in
mov
mov
or
add
imul
mov
in
push
out
call
mov
adc
out
xor
out
dec
scas
pusha
popa
adc
adc
leave
fcoml
add
es
outsb
add
xor
aaa
ficompl
pop
or
push
jp
lret
inc
cli
call
sahf
lcall
rclb
jmp
dec
dec
insb
xchg
or
cmp
mov
mov
fdiv
sub
mov
inc
ds
mov
push
aad
pop
mul
fucom
in
mov
push
and
sbb
jo
mov
ret
or
insb
xchg
in
dec
push
cmp
ret
mov
rcrb
outsb
jbe
call
mov
test
fneni(8087
roll
pusha
fcomi
test
pop
out
xchg
imul
rorl
mov
and
xchg
and
or
xchg
xchg
in
mov
push
cld
cmpsb
dec
jg
popa
les
adc
add
push
adc
movsl
push
leave
dec
add
nop
arpl
sub
shlb
sti
loopne
adc
adc
sub
testb
pop
xchg
popa
mov
lahf
add
fmulp
test
sbb
test
or
outsl
push
jecxz
xchg
push
sbb
sub
mov
pop
mov
lock
scas
pushl
push
inc
mov
push
enter
clc
hlt
pop
lret
outsl
push
or
sub
sub
xor
movsl
push
inc
jl
mov
push
xor
je
push
xor
sub
sbb
popa
stos
leave
arpl
sbb
mov
jecxz
xor
ja
pop
test
popf
mov
push
sbb
out
adc
int
push
mov
leave
pop
out
dec
pop
add
rcrl
shrb
adc
xchg
imul
xchg
aad
cmp
mov
xor
dec
das
xchg
cmp
xor
push
xor
xchg
fwait
sahf
or
push
out
jg
push
and
pop
loope
sbb
jno
inc
adc
out
test
sub
lret
or
out
fadd
xlat
fsts
inc
dec
push
jb
outsl
push
aas
push
cmp
iret
sub
lret
cltd
mov
test
cwtl
jmp
mov
mov
push
mov
or
enter
dec
test
lcall
pop
shlb
mov
lea
mov
movsb
insb
inc
dec
or
sbb
xor
mov
les
movsl
test
lret
pop
fyl2x
cmpl
mov
xchg
nop
adc
push
clc
popa
ljmp
and
shrl
shlb
push
lock
pop
mov
in
fwait
sbb
lret
sub
xchg
pusha
incb
aam
mov
mov
das
enter
iret
sub
jb
pop
add
rolb
and
xor
out
outsb
inc
out
or
push
mov
jo
push
out
ja
jecxz
push
push
jmp
in
sbb
dec
aaa
inc
and
push
imul
loopne
cmp
push
sub
xchg
dec
sbbl
test
cmp
mov
fnstcw
adc
imul
std
out
das
aas
into
test
xchg
pop
pop
stos
out
xchg
inc
mov
icebp
sbb
dec
bound
shll
scas
ljmp
int3
lea
add
pop
stc
ret
mov
mov
test
lods
repnz
jne
jp
mov
dec
loopne
cmp
cmp
mov
sahf
push
jp
je
and
and
or
inc
lea
fcoms
sub
sbb
jge
loope
inc
cmpsb
xchg
fldl
add
adc
sub
pop
mov
loopne
mov
jae
jae
jge
in
xchg
jmp
js
daa
dec
shl
jo
and
dec
sbb
mov
dec
jp
mov
call
sub
daa
cmp
pop
in
sbb
and
mov
aas
xchg
sahf
cmp
cmp
mov
mov
push
adc
sbb
cmp
or
or
insl
push
adc
mov
add
or
sarl
adc
pop
fsubl
cmc
mov
ret
outsl
or
mov
lret
call
inc
sbb
push
xchg
ljmp
adc
jb
pop
pop
xchg
pop
xchg
inc
clc
sub
pop
lahf
outsl
das
rcrb
fcom
das
lcall
and
lret
inc
mov
jne
mov
clc
mov
jnp
jbe
sahf
dec
iret
xchg
sub
pop
dec
adcb
and
popl
cmp
cmp
movsl
dec
lcall
aas
add
js
xor
dec
jno
or
stos
pop
sbb
in
jb
popa
cmp
data16
sbb
lods
xchg
cmpsb
icebp
mov
adc
sbb
fs
in
fdivr
das
push
or
inc
inc
fucom
rcr
imul
sbb
sub
cwtl
insl
shll
xchg
mov
lahf
std
cmc
movsb
sub
mov
loop
fnstcw
ja
push
leave
mov
aam
mov
dec
jecxz
pop
xchg
out
adc
aaa
cmpsl
ss
mov
mov
sbb
iret
mov
addb
add
mov
add
cmpsb
fimull
mov
fisubl
fstl
jae
adc
sub
fistpll
xor
aad
sub
into
pop
and
pop
push
pop
outsb
add
shll
popf
inc
ljmp
cs
pop
icebp
cmc
mov
cs
or
pop
mov
jnp
inc
arpl
add
testl
sahf
add
mov
cmp
jecxz
scas
lds
lahf
out
add
push
xchg
cmp
fisubrs
xchg
cwtl
mov
mov
pop
int3
inc
xor
inc
sub
and
and
and
adc
cmp
insb
xchg
adc
pushf
jbe
xchg
cmc
or
cmp
lahf
lock
stos
xchg
popa
insb
and
testb
ret
or
cmp
mov
add
mov
jl
sub
cmpsl
iret
fisubs
stos
mov
pop
fsubs
insb
popa
daa
inc
add
hlt
add
add
in
xor
mov
cmp
div
outsb
icebp
rorb
push
or
pop
pop
xor
sahf
inc
xorl
fiaddl
sbb
int
jae
std
xchg
lcall
repz
xchg
subl
lock
outsl
in
pop
jecxz
aam
aam
icebp
adc
dec
arpl
inc
mov
lea
fmuls
ror
pop
jge
push
cmp
sub
sar
ficomps
mov
shll
xchg
adc
xor
sbb
jge
scas
push
js
mov
xchg
callw
push
fcompl
jb
adc
pop
daa
andl
imul
inc
mov
cmp
and
inc
stos
lods
push
test
daa
jge
clc
adc
xor
sub
mov
out
push
mov
jecxz
loopne
or
test
movsb
sub
push
xchg
mov
or
out
rolb
xchg
jno
xor
test
mov
jp
daa
imul
dec
dec
jo
cmc
dec
cmp
daa
cmp
add
mov
rorb
fmuls
dec
addb
xchg
adc
jo
fwait
cmp
xchg
decl
movsl
out
jp
cmc
mov
fnstenv
dec
cld
push
test
mov
loopne
fisubs
xchg
or
dec
in
imul
addr16
jle
mov
out
ja
es
outsl
fdivs
insb
loope
sahf
cmp
enter
fstp
fisubrl
cs
pop
out
fcmovnu
orl
clc
sbb
aas
mov
scas
fcomps
cwtl
out
dec
mov
daa
mov
clc
outsb
int
pop
lsl
repnz
mov
test
mov
int
and
mov
mov
stc
mov
popf
lds
xchg
mov
lock
lret
jle
cmp
icebp
inc
jae
sbb
and
shll
in
ret
sub
cmp
je
sbb
lea
cwtl
add
adc
xor
ficompl
or
jmp
cwtl
xchg
xchg
scas
fcomip
stos
mov
ljmp
push
inc
lods
dec
das
xor
jbe
mov
in
ljmp
jnp
pop
ret
mov
sub
cwtl
lods
mov
or
push
jns
pushf
stos
xor
dec
or
or
jae
cs
pop
dec
cmp
sub
sub
aam
out
mov
pop
ret
fs
fidivrl
mov
push
sub
xor
xor
lods
lock
push
adc
jo
inc
cmc
notb
iret
gs
shlb
lods
cmc
pop
addr16
or
inc
add
mov
push
jle
mov
jmp
cli
mov
mov
mov
push
sbb
mov
out
ficomps
push
mov
xchg
mov
add
test
out
in
adc
flds
sub
dec
mov
test
pop
pop
fs
mov
ljmp
xor
test
mov
pop
sti
lret
out
sti
test
sub
ljmp
and
cmp
inc
xor
sbb
hlt
dec
xor
movsl
sbb
pop
mov
mov
mov
push
aad
fmul
pop
push
movsb
pop
jne
bound
icebp
push
loopne
xchg
adc
mov
cwtl
xor
dec
icebp
pusha
push
mov
rclb
inc
jge
pop
in
jecxz
cmpsb
arpl
test
movsb
adc
inc
loope
hlt
and
adc
repz
jmp
sbb
rcr
sbb
cmp
les
fsubrl
daa
add
daa
mov
mov
daa
add
dec
adc
push
movsb
push
jp
mov
ja
add
aam
int
ficoms
outsl
gs
mov
push
into
ja
popa
loope
mov
clc
rcll
dec
push
rorl
sahf
lea
jb
pop
fstp
and
das
push
mov
lret
cmp
lcall
inc
inc
lret
xchg
add
inc
pop
sti
or
jle
mov
add
ja
push
or
ss
dec
test
xchg
ds
mov
out
daa
cmp
xor
in
jo
lea
pop
icebp
in
sub
sbb
jne
sti
pop
frstor
notl
imul
ret
xor
push
mov
mov
push
pop
and
and
pushl
scas
cwtl
cmpl
mov
push
xchg
clc
mov
idivl
fcomip
jle
push
mov
mov
rcl
mov
jmp
sbb
enter
lds
jge
pop
cmp
dec
daa
lcall
test
sub
mov
mov
push
popf
enter
xchg
fstpl
mov
lds
popa
sbbl
outsb
ljmp
aam
bound
xchg
dec
adcl
cmpsl
jnp
inc
out
cmpsl
mov
fcompp
sti
int
mov
into
out
ja
mov
mov
xchg
das
fdivp
jae
sub
repnz
mov
aaa
inc
inc
adc
outsb
ljmp
es
dec
mov
or
scas
test
fsubl
jae
cli
inc
pop
lahf
mov
cmp
repnz
sub
add
xchg
xor
dec
pop
pop
loop
das
sub
pop
pop
stos
or
icebp
lcall
dec
shrb
pop
and
mov
and
inc
xlat
ror
pop
fldl
and
jne
dec
cmp
test
stc
mov
out
ss
in
jge
mov
jle
pause
ss
sbb
jbe
pop
xchg
add
sub
insb
pop
dec
dec
out
adc
fsubl
lcall
andl
aam
inc
int3
cmpsl
mov
test
sbb
lods
test
hlt
inc
lret
imul
pop
popa
and
and
gs
andl
std
mov
imul
sub
out
pop
aad
nop
mov
pop
mov
movl
or
in
test
add
hlt
pushf
aas
add
push
faddl
lret
and
push
push
jo
ljmp
jno
jmp
cmova
scas
das
mov
fs
stos
mov
mov
pusha
add
pop
or
lock
fs
pop
jae
pusha
jge
xchg
shrb
pop
ja
aas
pushf
mov
imul
jns
jge
jecxz
loopne
pop
adc
pop
lcall
add
int
pusha
sbb
cmp
xchg
subl
arpl
mov
lahf
loopne
pop
pop
jge
out
lds
idivl
mov
adc
xor
pop
mov
pop
and
dec
mov
sbb
cld
cwtl
push
cld
pop
sbb
fistps
nop
and
mov
test
mov
and
fxch
je
pop
mov
or
mov
inc
mov
xchg
push
jnp
sbb
mov
cltd
mov
sub
loopne
movsl
push
pop
ret
mov
mov
sub
and
add
or
xchg
adc
mov
lods
mov
lods
fldenv
jns
xor
out
sahf
mov
popf
mov
jae
xor
gs
pop
xchg
ljmp
inc
cltd
popa
js
repz
arpl
cmc
jl
xchg
aas
clc
jge
in
xchg
mov
rcrl
shrl
jmp
das
out
add
sbb
imul
inc
mov
mov
mov
jbe
inc
mov
sub
sahf
lahf
shll
insb
pusha
push
jmp
pop
arpl
push
mov
je
mov
outsl
push
lcall
jl
mov
out
es
pop
jnp
pop
sti
push
pop
lds
lods
cli
fnstsw
sub
fldenv
std
shrl
sub
incl
popf
lcall
jmp
add
cmpsb
rcrl
je
lock
pop
sub
adcb
mov
inc
outsb
clc
adc
rcl
add
push
or
sub
dec
jl
jnp
fstps
lds
push
xchg
cli
cmp
pop
popa
shrb
xchg
adc
jge
and
pop
and
jg
js
testl
out
test
aam
sbb
mov
pop
fsubrs
sahf
stos
xchg
test
sti
andb
dec
fistpll
stos
mov
fidivl
dec
cmpsb
push
lds
mov
dec
leave
addr16
jno
ret
std
gs
push
and
jle
fnsave
pushf
fnsave
pop
or
clc
aas
dec
pop
addr16
out
test
mov
aaa
jbe
mov
call
or
dec
mov
pop
aad
cmp
pop
cld
fidivrl
iret
fnstcw
adc
shlb
dec
pop
ds
daa
push
shll
pop
pop
cmp
sub
mov
ss
scas
stos
loope
push
repnz
stc
jbe
fistpl
push
xchg
and
push
scas
je
fidivrl
outsl
and
xor
in
inc
cmp
jmp
int3
adc
repnz
cmp
outsl
cmp
mov
pop
mov
pop
popa
sub
gs
hlt
jns
sarb
jmp
mov
in
inc
test
sbb
insl
jne
push
dec
cmpl
mov
jnp
pop
fdivr
cmp
pop
push
jge
inc
or
es
fiadds
push
orl
mov
pop
andb
push
fwait
sarb
sub
dec
popl
cwtl
fs
out
in
sub
les
sbb
push
cld
push
test
shlb
int3
shlb
frstor
shlb
sahf
mov
rcrl
sub
mov
xor
jmp
push
enter
in
fs
pushf
adc
sub
push
mov
xor
inc
adc
dec
pop
movsb
push
insl
cwtl
not
out
dec
mov
or
adc
or
xchg
pop
jge
mov
out
xor
mov
scas
test
inc
mov
loop
mov
push
lahf
mov
ficoml
ds
add
mov
aaa
jecxz
rcrb
jns
dec
pop
arpl
sahf
mov
add
cs
sti
adc
and
mov
hlt
sub
ljmp
lods
addr16
inc
jae
or
push
aad
push
insb
test
js
dec
fcomi
aad
in
adcl
repnz
push
cmp
fisubrl
jge
out
mov
das
or
scas
mov
bound
rorl
test
insb
mov
cltd
scas
xchg
test
push
dec
loop
ret
sbb
lods
jnp
cmp
dec
jl
clc
loope
jne
jbe
jb
add
sbb
stos
add
mov
ljmp
push
jle
pop
and
jns
fnstsw
push
push
xor
orb
mov
shlb
loop
jne
negb
in
in
hlt
xchg
mov
outsb
adc
pop
aam
dec
mov
and
test
xchg
idiv
jecxz
mov
fs
enter
imul
jl
mov
jo
je
loop
das
fisubs
enter
cmp
add
fnstsw
sbb
ret
dec
into
dec
pop
movsl
jge
mov
mov
aas
jno
aad
jp
pop
sub
sub
imul
pusha
push
mov
mov
sbb
movb
js
andb
mov
fildl
mov
int
es
mov
and
cmp
int
cmp
add
mov
xor
icebp
sub
mov
int3
cmc
test
add
fadds
or
xlat
and
or
xchg
mov
pop
mov
idivl
push
rorb
stos
cmpsl
jb
lock
cmp
loopne
in
pop
mov
inc
stos
stc
push
outsb
sub
push
inc
sub
pop
add
lret
ret
lods
lods
jne
adc
ljmp
mov
repnz
fdiv
xor
jo
fisubrs
cmpsl
repnz
jns
std
xor
jae
decl
test
mov
jl
mov
mov
or
scas
push
mov
adc
push
sub
mov
dec
ficoml
add
test
int3
xor
mov
push
mov
or
js
popf
daa
repz
dec
adc
in
inc
je
dec
sbb
fists
or
iret
lods
imul
or
cmc
or
test
shrb
sub
or
imul
inc
dec
push
sti
mov
push
push
ficomps
out
daa
popf
lahf
pop
xor
je
aad
sbb
mov
ret
inc
mov
inc
frndint
cmp
cmp
mov
push
test
adc
jnp
jae
dec
mov
mov
sub
clc
ds
popf
mov
pop
inc
cs
xchg
inc
clc
leave
pop
fsubrs
pop
aas
in
popa
sahf
jecxz
push
mov
cmp
inc
push
jo
push
fsubl
push
inc
pop
cmc
sub
movsb
mov
dec
js
jmp
lds
jnp
sbb
xchg
cmp
ja
fld1
rorb
aaa
or
mov
jnp
popf
aas
popa
push
aas
jne
fildll
shlb
xchg
ja
test
jmp
idiv
add
fmulp
imul
aas
cld
push
mov
jg
and
adc
sbb
sub
sbb
xchg
pop
out
mov
jg
repz
nop
mov
andb
xor
cltd
xchg
or
cli
mov
addb
and
stc
push
and
xchg
lret
push
rcrb
shll
or
add
aaa
pop
pop
mov
adcl
xlat
jecxz
cmp
cmp
cltd
pop
mov
sbb
icebp
je
stos
fsubrs
add
pop
pop
rclb
push
bound
sub
jb
sub
movsl
popf
xlat
stos
in
jns
ss
outsb
dec
push
jmp
jne
data16
jge
xor
sbb
pusha
mov
pop
jne
mov
enter
insl
popf
insb
xchg
adc
movsl
mov
rolb
pop
insl
lods
jb
loop
jnp
jge
fcmovne
notb
xchg
push
rcll
movsb
xor
arpl
push
xor
jne
inc
bound
jnp
icebp
xchg
jg
aam
scas
add
push
dec
pop
pop
lds
sbb
xor
push
cmpsb
aad
dec
cld
fldl
mov
push
cmp
das
in
andb
mov
fnstenv
fisttpll
and
sub
jno
cmp
fldcw
data16
xor
lret
rcrl
cmp
add
add
js
sbb
scas
mov
mov
mov
cltd
mov
enter
pop
pop
adc
dec
outsl
adc
shrl
adc
cltd
aas
stc
mov
dec
js
push
clc
stos
popa
pop
inc
mov
lret
and
mov
int
pushl
insl
pop
cmp
inc
rorl
mov
push
in
pushf
or
pop
adc
jae
cmpsl
add
popa
outsb
and
stos
dec
insl
enter
orb
nop
and
adcb
fnstenv
cld
jnp
std
fstpt
in
iret
cmp
ja
hlt
inc
adc
xchg
fwait
test
mov
aaa
movsl
stos
test
inc
shrl
adc
and
mov
mov
xor
rorb
or
mov
jle
dec
enter
cltd
push
sub
scas
pop
sbb
arpl
cmp
jo
ret
fcomip
popf
in
shlb
jmp
in
sbb
inc
sub
xchg
stc
fbld
inc
test
cmp
sbb
cmp
aad
push
inc
sbb
iret
nop
dec
mov
movsl
popf
and
nop
pusha
pushf
xchg
mov
rol
outsl
outsl
cmp
adc
je
fisttpll
insl
jp
ret
test
ret
mov
push
jae
aas
scas
out
and
add
js
int3
cs
xor
sbb
add
push
dec
mov
out
sbb
ret
repnz
stc
mov
push
add
aas
pusha
jle
adc
aaa
lret
scas
xchg
popf
mov
mov
out
add
jge
push
lock
fdivrs
mov
inc
dec
fcmovnb
je
cmp
dec
add
sbb
cmp
fcoms
fistl
cltd
dec
rcrb
mov
cmp
and
repz
data16
xor
aas
jns
ljmp
inc
scas
mov
dec
lahf
push
repnz
dec
inc
mov
add
push
cmp
in
call
xlat
scas
mov
push
mov
mov
popw
jmp
outsl
xchg
cmpsb
stos
dec
out
dec
rclb
fisubs
cmp
xchg
in
add
arpl
in
or
jg
or
sbb
out
inc
dec
xchg
clc
push
sub
in
dec
inc
xchg
pop
sub
sub
fs
mov
call
sbb
jmp
rcr
adc
ret
mov
pop
js
icebp
mov
lret
adc
sub
pop
dec
iret
in
jl
dec
icebp
js
lret
mov
outsl
call
xchg
dec
cs
inc
xchg
sub
jmp
push
test
fldl
lods
pop
inc
xchg
stc
int3
jb
add
hlt
arpl
outsb
arpl
xchg
add
testl
clc
xor
divl
imul
jns
fcmovnb
es
sarb
test
imul
es
pop
insb
inc
jmp
push
ss
test
rorl
jns
pop
xchg
sub
arpl
fs
movsl
jbe
scas
outsb
jl
lret
adcl
daa
enter
icebp
and
in
out
xchg
mov
dec
dec
xchg
mov
mov
iret
jle
aad
fimull
or
xchg
push
cmp
mov
ljmp
fcmovnu
shrl
loop
clc
lcall
mov
add
daa
in
jb
test
mov
stos
push
xor
fmuls
aad
sub
mov
mov
hlt
add
test
sbb
sbb
jmp
xchg
ret
pop
loope
pop
sub
icebp
clc
in
shlb
sub
data16
adc
xchg
jmp
notl
js
sar
pop
cmp
ret
mov
sub
out
mov
inc
outsl
inc
xchg
test
flds
mov
jge
aam
int3
shr
enter
jo
insb
addl
inc
xor
sbb
decb
and
jg
jecxz
mov
add
pushf
in
mov
pop
mov
mov
push
pop
dec
jno
fiadds
add
imul
ss
cmc
xchg
push
fwait
pop
mov
scas
loop
push
addr16
inc
inc
bound
jl
in
adc
movsl
cmpsb
inc
jno
icebp
dec
xchg
add
je
jle
and
outsl
nop
sub
test
pop
int3
or
pop
std
dec
test
test
sub
add
adc
outsl
mov
sub
mov
loope
movsb
lock
or
loop
add
adc
scas
inc
ror
into
push
aaa
popf
jb
adc
cmp
pop
push
or
pop
int3
pop
sub
daa
mov
pop
cmpsl
or
into
sbb
call
pop
push
mov
xlat
cld
pusha
das
pop
lahf
test
test
mov
or
leave
sbb
pop
aad
imul
js
int3
popf
mov
insb
sbb
xor
loope
cmp
mov
fsubs
cmp
pop
notb
add
or
mov
div
or
in
mov
negl
movsb
jecxz
stos
ds
rcll
loopne
push
jge
dec
dec
fcmovbe
cmp
xchg
jmp
push
mov
lret
sbb
and
and
push
addl
push
ds
daa
mov
or
iret
push
int
lahf
clc
jns
shrb
dec
pop
ss
add
dec
pop
daa
mov
insb
fistl
xchg
popf
and
lret
dec
in
fistps
inc
xchg
xor
mov
cld
ret
aas
pop
lret
push
pop
enter
sarb
clc
sub
push
popf
and
stos
lock
cmc
inc
scas
cmp
test
pusha
jl
cmp
popa
mov
mov
mov
lds
or
push
push
movsl
pop
xchg
inc
daa
add
fwait
inc
sbb
int
or
cmp
mov
sbb
and
ds
sub
insl
jns
in
test
push
hlt
inc
rcll
stos
mov
push
dec
aam
andb
ss
imul
inc
mov
adc
pop
dec
ss
into
jnp
jge
outsb
push
lea
imul
pop
cwtl
shr
mov
cmp
addr16
imulb
dec
or
xchg
ret
in
sub
js
inc
pusha
and
fsubrl
shll
or
add
add
or
rclb
gs
xchg
setle
add
xchg
icebp
push
addr16
cltd
push
push
mov
pop
mov
push
jg
pop
adc
mov
pop
repnz
scas
pusha
test
pop
sub
mov
dec
pop
popf
jge
ret
sub
in
push
add
mov
sbb
mov
mov
xchg
inc
mov
adc
dec
test
or
push
stos
jbe
jb
xor
mov
loopne
scas
or
inc
push
popa
jle
push
xchg
push
stc
and
xor
or
ja
xchg
pop
scas
cld
fisttpl
push
lock
scas
inc
cltd
mov
cltd
ret
pop
push
cmp
xlat
test
cmovl
xchg
jge
adc
dec
push
xor
inc
adc
xchg
and
add
xchg
push
cmpsb
cmc
xchg
movsb
inc
adc
push
in
xchg
inc
lret
pop
fsts
xchg
jp
fistl
dec
xchg
inc
inc
sub
sub
outsb
les
std
xchg
inc
aaa
mov
lahf
popf
add
or
jecxz
subb
pop
in
loopne
inc
inc
inc
ja
mov
sbb
repz
sub
jp
xor
aaa
insl
push
cmp
cmc
push
imul
cs
mov
sbb
mov
sub
mov
dec
sbb
add
addl
daa
xlat
dec
mov
mov
mov
pusha
sbbl
adc
shll
adc
mov
add
lret
in
mov
ja
xor
sub
rorb
push
xchg
pusha
int
add
sbb
lods
imul
jmp
outsb
in
call
arpl
scas
sbb
and
cltd
sarb
sub
enter
data16
sub
les
arpl
cwtl
push
pop
js
dec
es
shlb
insl
fwait
lods
fcoms
lock
mov
inc
stos
jno
addb
popf
jle
inc
mov
mov
push
mov
std
sbbb
mov
pop
movsl
xor
push
mov
in
out
mov
ret
stos
jmp
push
sub
hlt
clc
jno
fimull
cmp
lods
pop
pop
jne
cmc
fs
add
or
insb
ret
js
adc
add
les
mull
cmp
inc
add
mov
clc
inc
call
jmp
adc
xchg
jnp
sbb
das
in
cs
jle
movsb
xchg
mov
sub
lods
call
cmpl
cmpb
cli
sub
ficoml
imul
int3
call
sbb
daa
out
and
aad
dec
xor
inc
cmp
shrb
popf
jmp
xchg
mov
fcoms
addl
jle
jno
ljmp
adc
adc
push
or
mov
pop
inc
add
repnz
je
or
push
cmpsb
fwait
adc
cs
push
mov
sbb
add
lods
dec
loop
stos
dec
mov
cmp
mov
scas
subps
outsb
add
les
push
sti
repnz
popf
dec
mov
les
popa
or
dec
inc
sub
pop
mov
push
movsl
xchg
nop
in
mov
add
push
fmulp
mov
xor
ljmp
lea
sbb
stc
adc
call
ret
push
dec
sbb
addl
stos
xchg
pusha
iret
push
xchg
mov
adc
outsb
xchg
daa
adc
int3
pop
pop
mov
push
sbb
ljmp
outsb
push
xor
xchg
clc
mov
stc
cmpsb
mov
dec
leave
dec
lret
inc
rcl
jno
push
jecxz
sub
mov
ds
lahf
mov
and
enter
cs
sbb
insl
gs
xor
adcb
jne
sub
sub
test
addr16
jmp
lods
or
adcb
mov
xor
popf
xor
pop
mov
push
data16
push
pop
xor
fstpt
nop
popf
and
icebp
test
lret
mov
xchg
xor
out
fbld
mull
cmpsl
arpl
xchg
jbe
adc
pop
sbb
jb
test
xchg
scas
test
nop
add
mov
jno
sbb
mov
push
outsl
sbb
lahf
lock
sbb
fs
and
pop
lock
mov
cmc
inc
xchg
int3
in
sub
adc
outsl
dec
lret
into
out
lds
mov
push
lds
pop
arpl
les
pop
mov
das
psubd
mov
lds
cmp
adc
imul
xchg
sub
sub
insb
push
out
adc
push
push
test
dec
fildll
call
enter
lods
and
sub
call
sub
lret
and
stos
cli
xor
movsb
cs
scas
lahf
push
orb
mov
jb
mov
cmp
repz
sti
jne
push
push
clc
mull
xchg
add
arpl
les
sarb
sub
mov
fsubrs
das
sahf
cmp
xchg
int
xor
mov
push
cs
push
mov
add
jnp
jae
ret
fsubrs
mov
xor
jmp
dec
outsl
xchg
jns
pop
arpl
or
xchg
rolb
pop
es
adc
mov
fiadds
fsub
mov
dec
or
jge
daa
loop
or
stc
or
mov
mov
aad
add
out
cmp
and
rolb
cwtl
cld
jae
hlt
fistpl
shlb
mov
out
mov
cmpsl
push
aam
mov
mov
aas
cld
xor
jmp
push
mov
pmaxsw
mov
adc
negb
sbb
ret
push
xchg
jnp
xchg
mov
lods
cld
inc
into
xor
sub
lock
mov
lods
dec
aaa
out
jle
jbe
divl
xchg
inc
clc
inc
xchg
push
dec
loopne
mov
lret
cmp
lret
outsl
jmp
in
sbbb
jecxz
dec
jl
adc
add
scas
xor
jp
es
jne
push
and
push
dec
sarl
push
cmp
test
dec
mov
push
dec
mov
cmp
xor
and
out
xor
jne
mov
sub
mov
lods
jp
clc
cmpsb
cmp
jecxz
inc
adc
lods
inc
cmp
stos
push
add
roll
ror
mov
sub
inc
cmpsb
sub
sub
stos
pop
imul
stc
std
cmp
negb
test
mov
pop
cmp
shrb
xor
outsb
shlb
xchg
xchg
popa
pop
and
mov
inc
and
mov
and
ljmp
in
jmp
insb
or
push
jmp
xor
sub
or
outsb
out
inc
mov
adc
divl
xor
pop
sub
cs
xchg
ja
out
mov
jmp
incl
cmpsb
sub
call
jno
dec
nop
sarl
mov
iret
sbb
hlt
mov
movsb
loope
pop
pop
pop
mov
pop
xor
lods
repnz
pop
lods
jns
std
or
iret
aas
insb
test
mov
test
shlb
mov
rorb
xchg
test
sarb
fnstenv
and
test
ds
mov
pop
lret
cld
sub
mov
or
push
pusha
add
repz
cltd
sub
adc
cmc
gs
mov
xchg
inc
ret
jne
push
leave
dec
sbb
into
cmp
ds
lcall
mov
test
out
cmp
mov
mov
add
sahf
push
aaa
lcall
add
enter
test
leave
mov
std
iret
iret
jle
jno
out
pop
xchg
sbb
dec
call
addr16
das
adc
push
and
xor
push
pop
mov
lods
add
xchg
ffreep
xor
pushf
jbe
mov
ds
movl
test
fsubrs
sub
pop
inc
fcomp
or
and
dec
mov
sbb
ret
lea
shll
inc
cli
arpl
lock
cmp
inc
out
or
jl
shl
mov
iret
mov
mov
jmp
dec
sbb
xchg
sub
pop
jns
pop
lock
loope
xor
popf
xor
cmp
sbb
mov
and
sahf
nop
push
cmp
in
js
sarl
mov
xor
popl
jle
inc
add
pop
adc
loopne
mov
movl
pop
subl
xchg
sbb
and
xor
cmp
mov
aam
xchg
mov
test
fadd
xchg
mov
xchg
cmpsl
xchg
adc
iret
push
inc
test
lcall
pop
icebp
jmp
cmpsl
popa
jle
int3
rorb
mov
jnp
mov
mov
xchg
inc
add
xchg
cmp
test
mov
in
enter
cltd
je
mov
js
pop
fnstenv
jae
stos
add
or
stos
adc
mov
mov
sbb
in
push
aam
fistpl
scas
dec
dec
mov
out
mov
es
pusha
hlt
dec
jg
je
mov
lcall
adc
mov
xor
dec
mov
negb
xchg
push
push
mov
insl
ds
mov
lock
adc
and
imul
and
add
xchg
dec
fadds
jne
sti
je
cmc
aam
xchg
cmpsb
push
xor
adc
je
stc
pop
jno
rcll
xchg
notl
dec
mov
scas
push
test
stos
test
fmuls
add
pop
leave
stc
mov
fcompl
mov
pop
cmp
push
iret
mov
jg
jb
addl
jnp
movsl
xor
push
aas
aam
jmp
jb
shll
rcrb
jnp
addr16
pop
pop
add
inc
xor
scas
xor
es
cmp
adc
push
pusha
stos
rcr
cmp
vmaxps
lcall
pushf
or
repz
pop
js
jno
ret
in
jp
push
lret
gs
sbb
mov
add
xor
lods
test
sbb
out
pop
lret
or
call
mulps
inc
inc
dec
sbb
scas
mov
push
adc
ss
sub
cmp
adc
leave
xchg
insl
icebp
xchg
xor
fdivs
jmp
test
andb
fistps
mov
dec
cs
jbe
lret
mov
ljmp
sahf
jae
sbb
ljmp
or
add
test
into
adc
out
fcmovbe
sbb
bound
adc
xlat
mov
pop
rorl
sti
inc
dec
and
add
sub
sbbb
jb
push
mov
add
in
or
and
mov
pop
pop
xor
jle
pop
pop
dec
popa
xchg
and
mov
ds
or
jge
sbb
sbb
js
mov
xlat
xor
loopne
jmp
mov
xor
sarl
aad
adc
into
inc
cmpsl
push
inc
inc
xchg
ret
sahf
mov
fisubrl
or
add
sub
mov
rorl
out
inc
jnp
dec
and
adc
aas
mov
add
neg
mov
pop
mov
std
leave
jmp
cld
aas
jae
rclb
and
dec
adc
xchg
fadd
cmc
leave
sub
sub
int3
sahf
inc
shlb
lea
adc
test
fsubrs
xor
daa
ss
add
jle
aas
dec
jae
rclb
clc
xchg
dec
sub
in
cmp
push
in
ljmp
idivb
xor
mov
fsubrl
mov
xchg
mov
cmp
mov
jle
pop
enter
shll
out
in
sub
push
dec
sub
add
aaa
fldl
hlt
or
hlt
ljmp
xor
icebp
pusha
jmp
xchg
or
outsb
imul
cmpl
pop
sub
dec
inc
mov
test
pusha
in
out
adc
pop
sub
mov
aam
pop
iret
mov
nop
lock
popf
les
ljmp
nop
mov
and
stos
jb
pushf
scas
fcmovu
adc
adc
mov
mov
aaa
xchg
cmp
push
pop
je
sub
sbb
imul
leave
cmpsl
push
fidivl
popa
jnp
stos
lods
or
sbb
in
orb
rcrb
aam
adc
loopne
xlat
mov
cmpsb
jmp
aad
dec
stos
in
int3
mov
push
dec
and
mov
ja
ljmp
jae
xor
or
sbb
xchg
lret
lahf
icebp
fdivs
lret
mov
aas
roll
or
jle
xchg
dec
rcrl
out
push
leave
jbe
fwait
cmc
mov
jne
sub
lret
in
clc
xchg
test
stc
xchg
insb
sti
lea
mov
fcoms
pop
mov
lret
sub
into
pop
mov
ret
je
mov
cmp
je
roll
lret
cwtl
int
xchg
xor
xchg
jae
and
test
mov
sbb
shrl
insb
sarl
lds
adc
xor
pushf
add
mov
inc
pop
jne
push
ficoms
adc
fs
add
sub
dec
mov
inc
out
mov
lods
aam
fmuls
pop
inc
pop
idivb
aad
je
mov
outsl
cltd
mov
jp
xor
repnz
fcoms
loope
pop
enter
push
repnz
mov
pop
pop
in
call
rclb
jno
xlat
inc
xchg
push
sahf
xchg
mov
inc
inc
inc
test
out
mov
jge
clc
add
xor
push
clc
jmp
inc
sub
jns
xchg
outsl
mov
jecxz
sbb
cltd
push
cld
cmp
xor
daa
ds
dec
int
out
pop
cmp
adc
jmp
ljmp
xor
mov
ss
mov
cwtl
inc
leave
fcompl
add
push
js
cwtl
ret
sbb
fistpl
fmul
or
jmp
scas
aam
inc
sbbb
mov
mov
dec
or
sarb
xchg
cmpsl
cs
xor
pop
pop
icebp
jecxz
pushf
dec
dec
rcl
dec
sub
loopne
dec
add
cld
fucomip
cmp
adc
int
sbb
subl
shl
js
scas
gs
inc
sub
mov
xchg
cld
sbb
mov
mov
add
in
inc
rcr
pop
dec
call
dec
hlt
imul
imul
test
mov
imul
popa
daa
push
cmp
ret
dec
fs
in
mov
lock
ficoms
jns
in
jnp
imull
ficoml
icebp
sahf
cmp
das
fidivs
lcall
test
push
addr16
cmpsb
fcomps
movsb
flds
imul
lret
testl
inc
loopne
inc
xchg
cmp
pop
pop
in
cmp
mul
aam
push
or
ficoms
fdiv
pushl
push
jle
inc
sahf
in
mov
pushf
inc
shl
stos
test
adc
insb
pop
push
xor
inc
lahf
mov
adc
jmp
cmp
jb
sti
les
add
dec
sub
push
jno
iret
cltd
imul
jno
xchg
out
dec
dec
pop
call
mov
push
enter
xchg
xchg
dec
mov
pop
icebp
lret
insb
shll
sbb
inc
push
test
push
call
jnp
in
xor
pop
sub
test
xchg
and
or
in
push
adc
mov
pop
sbb
mov
adc
repnz
movsb
add
jbe
iret
sbb
mov
or
outsl
or
mov
adc
fs
fwait
bound
lcall
fnsave
jp
mov
jne
and
out
xlat
mov
ds
pop
cmc
inc
rcrb
lods
sub
inc
adc
inc
aas
call
ret
xchg
ja
sub
mov
inc
andl
ds
rclb
imul
push
sub
or
js
pop
pop
stos
leave
add
inc
push
out
outsl
push
mov
clc
popf
call
aaa
push
mov
into
cmpsl
mov
push
mov
dec
pop
xchg
jns
mov
mov
xor
int
mov
and
mov
push
stos
nop
leave
xor
mov
lds
popf
jmp
cmp
out
jae
clc
out
sub
out
xchg
adc
ja
scas
and
or
xor
cmp
lds
inc
push
in
xor
jne
or
sbb
in
mov
sti
clc
mov
xor
fwait
dec
jmp
popa
stos
adc
jg
or
add
xor
movl
mov
mov
fbld
subl
rol
imul
fucomip
mov
jnp
pusha
mov
xchg
pop
jae
sub
sub
hlt
dec
adc
enter
outsb
mov
movsb
push
movsl
jo
add
adc
pop
int
test
or
aam
pusha
adc
adc
adc
mov
out
insl
sub
fwait
pop
negb
cmpsb
ss
add
dec
adc
mov
mov
mov
mov
imul
addr16
dec
xor
call
outsl
out
dec
dec
jmp
les
aas
lcall
jae
xor
xor
sub
push
lret
xor
rcr
shl
sarb
dec
test
sarb
mov
dec
arpl
xchg
inc
lahf
adcb
test
pop
roll
sbb
ja
cmp
test
clc
push
cld
addr16
loope
inc
shll
enter
xor
fcmovne
sbb
pop
imul
push
adcb
popa
mov
mov
iret
lret
movb
rol
inc
popf
sahf
movsl
scas
cmp
rolb
cmpsl
push
jp
xor
adc
lret
sub
adc
das
mov
cmpl
clc
sbb
xor
out
ljmp
pop
leave
insl
fcomps
xor
loop
or
arpl
lcall
mov
inc
in
mov
roll
lods
jecxz
sub
pop
insl
dec
dec
mov
push
ret
lret
std
das
pop
sbb
lret
sub
fldln2
push
adc
adc
lret
testb
stos
pop
xchg
bound
add
cmp
faddl
scas
xchg
ds
stos
dec
jae
mov
sub
jle
mov
dec
cmp
inc
fistpll
out
ror
test
adc
adc
rcl
add
push
pop
sbb
das
dec
idivb
loopne
outsb
mov
in
adc
jp
jnp
sbb
jne
loopne
lret
jp
mov
cltd
jp
repnz
push
movsb
or
cmp
mov
stos
shll
mov
cld
inc
cs
clc
mov
daa
insl
dec
aad
add
xor
add
dec
inc
pushf
out
shlb
mov
pop
jl
fsubrs
or
xor
pushf
mov
mov
push
sbb
or
fldlg2
and
sti
out
sub
rol
movsb
cmp
mov
xor
sbb
adc
mov
sub
rcrb
clc
imul
notl
mov
lcall
rcrl
fdivs
rcll
loop
out
ja
xor
cmpsl
dec
out
adc
rclb
stos
mov
inc
sub
mov
inc
dec
xchg
fnsave
ret
pop
das
cwtl
pop
shll
xor
push
mov
pop
push
push
adc
and
jno
bound
nop
mov
jp
ljmp
sbb
sub
test
hlt
jecxz
xchg
clc
cs
push
test
push
xchg
xchg
or
loopne
adc
and
fisttps
pushf
adc
xchg
pop
int3
stos
mov
cltd
pop
cmpl
lahf
mov
mov
outsl
jmp
dec
cwtl
movsl
add
fcomps
stos
popa
sub
sbb
dec
and
jae
out
in
les
testl
lret
outsl
shll
je
and
fmul
xor
mov
cmp
aam
shrl
push
push
mov
adc
or
aaa
and
imul
push
pop
cmp
ja
stos
mov
cmp
jp
stos
repnz
jb
rcr
pop
adc
and
insl
clc
into
orl
or
lea
out
insl
adc
js
mov
divl
fbld
das
fdivl
push
xchg
mov
push
adc
adc
mov
in
and
fldt
in
or
dec
inc
cltd
push
cmp
fisubs
icebp
mov
in
mov
jp
popa
rcll
aam
daa
jecxz
jg
sahf
outsb
je
cmpsb
mov
loope
sbb
int
jns
mov
xchg
shrl
xchg
icebp
xor
push
mov
in
out
clc
loopne
mov
gs
pusha
daa
out
test
pop
jbe
sub
pop
jp
shll
popl
pop
mov
mov
lods
fdivs
test
scas
push
mov
leave
sbb
sbb
pop
dec
pop
pop
adc
test
cmp
xor
lods
add
cli
add
dec
pusha
bound
shll
jg
sbb
jle
mov
sahf
xchg
mov
ljmp
fs
repnz
pop
dec
or
xchg
adc
outsb
in
jns
inc
scas
mov
xor
xchg
mov
mov
std
loopne
cmp
pushf
cmp
int3
inc
pop
sub
mov
fiaddl
and
add
das
int
loope
ja
lea
ljmp
roll
loope
loope
xor
jecxz
xchg
xorb
out
rcll
add
adc
and
addl
or
imul
aas
cltd
sbb
mov
outsl
ret
dec
outsl
test
call
pop
or
adc
cld
js
push
fcoms
dec
mov
icebp
testb
adc
lret
jl
sbb
movsb
rolb
insl
cwtl
mov
mov
cmp
cmp
incb
dec
cs
mov
and
or
mov
or
mov
xchg
cmpsb
in
jae
cmpsb
sub
cmc
test
icebp
mov
push
xchg
pop
mov
mov
arpl
mov
leave
aad
mov
mov
mov
inc
sub
pop
push
shll
mov
in
jmp
xchg
adc
fisttpl
in
jecxz
fbld
sub
sti
push
push
xchg
in
and
pop
or
lods
mov
or
push
xor
push
inc
outsl
cmpsb
bound
xor
add
xchg
or
add
stos
ret
xchg
xchg
sub
jmp
jmp
out
cmp
iret
ljmp
push
pop
mov
mov
mov
adc
xchg
pop
je
movsb
adc
fisttpl
rorb
enter
xchg
imul
pop
int
jbe
mov
push
jb
push
les
into
scas
or
fwait
cmp
stos
aam
pusha
stc
aam
add
pushf
jo
sbb
sbbb
jmp
and
mov
push
test
inc
imul
aaa
push
inc
test
imulb
add
pop
mov
xor
aam
xor
popa
add
outsl
aam
sub
xor
std
mov
ljmp
add
sub
imul
jno
jle
pusha
scas
xor
mov
or
roll
mov
data16
stos
imul
xlat
and
jle
lods
movsb
push
mov
inc
popf
xor
jmp
not
cmp
inc
adc
sahf
fsubrl
inc
mov
xchg
lods
jbe
movsb
or
movsl
outsl
idivl
mov
sub
cmpsl
roll
in
decl
cmc
ljmp
xchg
clc
repnz
add
mov
test
stos
jp
ret
ret
cmp
aas
ds
xchg
enter
mov
or
dec
ja
ja
mov
mov
mov
fistpll
and
adc
in
push
aas
repnz
jmp
jg
pop
out
mov
mov
mov
mov
mov
or
push
inc
in
test
sahf
scas
ds
clc
cmp
ss
stc
sbb
inc
sub
mov
or
iret
cmpsb
repnz
pop
jge
pushf
fimull
and
xchg
add
and
js
mov
inc
jmp
cmp
and
mov
dec
insb
stos
cs
push
nop
popa
xor
dec
jmp
cmpsl
jb
jns
sub
mov
and
jecxz,pn
sub
imul
and
ret
jg
dec
subl
cs
mov
pushf
decb
out
and
fs
shlb
aad
mov
inc
adcl
add
loope
jmp
mov
inc
or
insb
aam
sti
les
test
loop
push
sub
lcall
mov
jnp
lahf
aaa
xlat
flds
shll
xor
int
push
shlb
xchg
data16
hlt
or
lret
inc
and
arpl
adc
pop
jo
xor
inc
int
sub
jp
xor
fistps
int
sbb
mov
call
idivb
dec
push
test
inc
rclb
sti
adc
push
cmp
mov
iret
ret
and
repz
fstl
shl
lret
pop
imul
sub
sarb
inc
imul
pop
inc
push
jge
jno
cmp
lock
and
mov
or
out
mov
leave
xchg
mov
jne
xchg
or
mov
dec
xor
jnp
add
push
imul
and
test
pop
xchg
mov
movsb
fldl
cmp
lcall
imul
push
pop
in
adc
mov
mov
inc
ret
push
add
or
ds
adc
pop
inc
int
movl
lretw
dec
fnstenv
cld
scas
mov
pop
hlt
and
jmp
dec
push
dec
test
adc
or
in
push
mov
cltd
push
inc
adc
or
mov
mov
out
sbb
lahf
mov
inc
pop
in
jbe
aad
stc
xchg
adc
xchg
int3
out
or
jne
movsb
lods
out
stc
into
xchg
out
sub
ljmp
mov
fs
push
inc
sub
sbb
cmp
mov
add
and
fistl
testl
push
iret
xor
push
sub
test
fbstp
lock
lea
movsb
out
sub
inc
lcall
fldl
pop
out
ds
fdivrs
sbb
sbb
mov
mov
xor
lock
inc
mov
mov
call
or
jl
inc
pop
in
dec
or
test
xchg
xor
or
iret
in
sbb
xor
fistps
jl
mov
nop
lods
test
pop
cmp
pop
cmc
pusha
hlt
dec
repz
lea
testb
xchg
xchg
stos
addr16
and
js
stos
incl
mov
push
adc
xchg
sbb
pop
pop
mov
push
jl
ret
xor
cmc
pop
and
clc
ret
pop
aaa
cmp
mov
jle
in
push
sahf
and
in
pop
jle
shl
mov
insl
rolb
lret
add
and
lret
nop
inc
lret
ja
or
xor
cmpb
pop
mov
rcr
icebp
inc
jnp
mov
jl
or
popl
jo
inc
adc
rolb
sub
xchg
sbb
sbb
cmp
and
dec
repnz
push
adc
push
push
inc
push
and
dec
rcr
sbb
cs
push
subb
rcr
xchg
stos
jne
sahf
test
pop
jnp
andl
je
jno
dec
pop
iret
mov
sub
sbb
movsl
xor
xor
xchg
int3
aaa
adc
or
test
enter
add
pop
jns
lret
xor
pop
mov
jne
adc
negl
fldenv
pop
jg
lret
or
aad
dec
xor
dec
outsb
sub
iret
and
leave
mov
or
loopne
mov
jg
or
push
sub
sarb
cltd
or
xlat
inc
lret
fistpl
nop
popa
fldcw
push
fdivs
jae
jo
js
into
dec
popa
or
loopne
pop
js
mov
test
fisubrl
cmpsl
outsl
push
rcll
fcmovne
sbb
fs
fmull
dec
dec
mov
cmpsl
stc
dec
dec
xchg
mov
loop
cmp
mov
xchg
jb
je
mov
xchg
popa
ficoms
lcall
imul
aas
mov
cli
pop
dec
xor
out
push
aad
ds
popf
imul
add
xchg
scas
clc
push
clc
shll
pop
lcall
adc
xchg
adcl
inc
mov
in
mov
cmpsl
in
inc
and
jge
xchg
adc
or
rcrb
fistps
aaa
loop
push
and
cmp
aas
outsl
sub
cld
ss
jae
idivb
jge
jg
repnz
cld
aad
into
jo
mov
jle
and
and
cltd
fdivrp
inc
dec
jp
add
push
in
sbb
dec
lods
iret
or
into
mov
daa
je
scas
or
mov
bound
pop
outsb
cmpsl
sbb
or
pop
iret
jnp
pop
int
jo
sub
mov
mov
xor
rolb
dec
push
loope
movsl
mov
addr16
jnp
jle
add
sub
mov
xchg
fcoml
jl
inc
sbb
in
idivl
pop
shrl
cwtl
lret
pop
insb
jno
mov
inc
arpl
jnp
outsb
fdivrp
mov
call
xchg
cmp
xor
inc
dec
fwait
jl
js
or
mov
stos
mov
mov
shlb
mov
mov
mov
mov
leave
test
rep
jo
ja
cmp
mov
outsb
mov
loop
cs
js
pusha
pop
test
fsubrs
mov
sahf
pop
push
scas
xor
hlt
mov
add
push
data16
in
jmp
fwait
enter
and
xor
jg
pop
sbb
ret
and
enter
insl
sub
push
xor
lods
into
icebp
add
jg
sub
add
test
out
aas
cmp
stos
push
je
push
aas
mov
xor
mov
sbb
add
jae
inc
xor
orb
cltd
ss
scas
test
shl
movsl
imulb
nop
fnstenv
lock
pop
out
sub
in
jne,pt
nop
inc
lock
js
insl
lret
or
ja
xor
shll
pop
pop
sub
inc
mov
jge
clc
xchg
add
stc
and
sub
mov
popf
pop
sub
repz
sub
push
xor
lock
add
icebp
test
es
push
out
testl
stos
mov
dec
cmp
fwait
xchg
pop
rolb
mov
testb
jns
add
ret
jg
loopne
xchg
ljmp
mov
repnz
dec
nop
or
mov
cwtl
mov
mov
and
fdivrs
adc
cwtl
dec
pop
fcomps
cwtl
test
jl
mov
fisttpll
dec
and
mov
aas
iret
and
xchg
fisttpl
int3
add
out
shll
pushf
js
add
sub
sub
shll
mov
incl
mov
pop
loop
push
lahf
inc
loop
pop
or
xor
in
push
enter
jmp
imul
loope
movsl
aad
or
inc
fcmovnbe
pushf
ljmp
mov
lods
enter
cmp
jle,pt
jle
jp
jge
push
inc
fisttps
pushl
pop
roll
pop
cwtl
add
imul
or
add
lods
leave
in
push
add
cmpsl
ret
xchg
jb
mov
mov
les
loopne
push
dec
divb
adc
frstor
fwait
les
sti
jno
sub
mov
aas
ja
hlt
adc
rcrl
sbb
stos
xchg
addr16
inc
or
call
ret
out
cmp
scas
mov
mov
and
mov
ret
dec
rcll
sub
ficomps
xchg
sbb
arpl
inc
or
cli
shll
test
adc
bound
iret
push
or
mov
pop
mov
dec
push
lods
sub
sub
xchg
xor
cmp
enter
inc
stc
jl
dec
loop
push
pushf
cmpsb
xchg
mov
sbb
mov
mov
sub
xchg
adc
test
imul
mov
iret
mov
mov
jnp,pt
mov
push
xor
jp
loope
push
pushl
addr16
jns
pop
push
cs
mov
pop
sbb
sti
add
xchg
cmpsb
xchg
mov
pop
ds
jns
scas
mov
jl
scas
xchg
add
test
dec
mov
mov
push
mov
cmpsl
add
shrb
les
push
ror
call
decb
dec
push
ljmp
sub
sub
adc
fiadds
pop
dec
xchg
push
cmp
data16
jp
sbb
jmp
or
push
push
adc
jmp
push
stc
mov
dec
mov
push
jmp
xchg
adc
pop
movsl
pop
xchg
cltd
mov
mov
adc
rcrl
mov
jmp
jb
jle
adc
mov
xor
cmp
lahf
outsb
outsb
add
fisubrs
das
xchg
pop
aam
jle
mov
rcl
xor
unpckhps
sti
subb
sub
push
mov
pop
popa
push
or
pop
hlt
cltd
imul
or
and
xor
addb
call
mul
or
shl
jmp
cmp
ds
std
call
shrb
shrl
in
wbinvd
cmpsl
scas
dec
test
xorb
out
pop
inc
mov
sub
in
mov
pop
pop
movl
adc
cltd
js
mov
cli
int3
pop
adc
mov
cli
mov
rol
ss
add
repz
push
pop
adc
pop
push
mov
fimuls
xchg
aas
mov
and
lahf
xor
inc
repz
sub
imul
mov
cmpsl
push
xchg
inc
fisttpl
inc
movsl
pop
cmp
or
inc
data16
add
sbbb
mov
or
pop
mov
jb
xchg
aaa
dec
gs
or
aad
es
add
sbb
mov
fistpl
mov
jno
pop
sub
loopne
rorl
stos
and
pop
scas
jae
stos
out
jno
dec
out
pop
adc
mul
push
mov
cwtl
pushf
sbb
clc
cmc
xchg
xor
xor
xchg
lds
js
mov
dec
pop
ret
cmp
jp
push
jae
jno
push
stos
xorl
xor
cli
jbe
in
sbb
mov
cmp
push
lds
sub
jb
cmp
jge
mov
adc
mov
cli
jbe
dec
test
imul
or
mov
lret
sbb
cmpsl
imul
jge
or
and
jb
xchg
ja
daa
xor
ljmp
push
and
das
pop
js
cmp
inc
je
push
push
iret
and
repz
jecxz
push
mov
mov
aad
test
jle
out
xor
lret
fnstsw
xor
cmp
lock
jle
add
ds
aas
push
xchg
jmp
cltd
aad
cmpsb
jl
stc
jns
mov
or
cs
push
mov
xchg
pop
dec
enter
in
int3
push
stos
cwtl
jo
movsl
or
cmp
mov
pop
cld
lock
mov
adc
out
or
insb
mov
je,pt
negb
ja
inc
lea
xchg
xor
bound
cld
sbb
and
jae
into
jae
jg
in
bound
or
and
sbb
movsb
jmp
mov
fdivp
rol
repnz
jnp
repnz
shrl
jge
neg
out
repnz
cmp
das
or
sti
sti
pop
inc
shl
xor
fs
lcall
lods
push
jbe
outsl
ret
mov
sbb
cmp
push
and
or
jb
lock
leave
dec
ja
gs
repz
pushf
inc
mov
fwait
or
push
fucomip
xor
jl
adc
jno
in
or
imul
pop
pop
mov
mov
mov
pop
xorl
push
repz
jecxz
add
ja
inc
pop
mov
inc
push
xor
cmp
dec
je
or
cmc
dec
popa
shll
or
in
and
mov
iret
dec
mov
pop
test
jb
lea
fucomi
pop
dec
fsubl
jmp
jae
pop
cmp
or
adc
fucom
lds
pop
leave
cmp
mov
lahf
mov
aad
ret
fyl2xp1
jmpw
xchg
xchg
stos
std
pop
jno
or
into
pop
push
pop
sbb
mov
popa
xchg
or
inc
push
jo
jbe
cmp
mov
mov
testb
adc
scas
mov
add
loope
aas
and
mov
imul
add
into
xchg
mov
test
jae
push
rorl
das
cmp
gs
test
stc
pushf
shlb
cmp
or
and
ljmp
jmp
pop
and
mov
fisttpl
rcrb
cmp
or
lret
push
es
jno
or
sbb
int3
out
dec
inc
pop
fs
or
bound
add
push
loopw
dec
cmp
hlt
mov
jmp
scas
mov
cmp
pop
pop
xor
jo
mov
and
mov
cwtl
mov
pop
lcall
inc
jbe
push
scas
pop
mov
xor
xchg
into
pop
mov
jl
sarl
movsl
dec
adcb
and
pusha
xorb
call
aam
gs
xlat
outsl
idivl
dec
out
mov
leave
push
jge
push
ret
lahf
cmp
test
add
sub
jbe
stos
mov
sti
shlb
jbe
sbb
xchg
sbb
stc
ret
in
int3
test
int3
sub
xchg
dec
adc
dec
popf
shlb
sub
add
sbb
mov
jbe
mov
and
notb
out
and
mov
fistl
sbb
div
dec
gs
push
xchg
mov
test
sti
icebp
lcall
stos
xchg
mov
xchg
in
cmc
dec
xchg
xchg
stos
lods
lcall
or
jmp
hlt
inc
icebp
sbb
jns
leave
add
xchg
sbb
add
inc
xor
js
rorl
cltd
inc
popf
jae
xor
in
xor
in
adc
fsubs
pop
pop
sbb
or
daa
cwtl
xor
daa
mov
mov
frstor
push
clc
inc
jo
lret
into
fstpt
pop
inc
pop
adc
jle
xorb
mov
shlb
push
pop
add
addr16
inc
popf
dec
or
or
dec
in
xchg
repnz
fidivrs
aam
xchg
loopne
das
fcom
inc
push
mov
push
xchg
mov
mov
out
adc
cs
aam
out
shrl
xchg
jnp
fldt
nop
sarb
dec
pop
mov
sbb
rcrl
sbb
lahf
sbb
sub
and
ret
and
or
xchg
add
aam
pop
add
jmp
test
divl
pop
dec
lds
movsb
mov
popa
add
cmp
push
pop
lock
inc
adc
and
xchg
aad
xchg
xorb
jp
test
aas
in
jo
cmpl
cmpsb
popa
jg
adc
mov
add
popa
jb
pop
bnd
test
rol
add
rcl
mov
mov
pop
nop
dec
outsl
jl
jns
stc
sub
cwtl
or
xlat
adc
pop
ds
mov
jo
inc
inc
jp
insl
inc
stc
sbb
mov
cltd
loopne
xchg
xchg
mov
add
mov
rcll
lock
sbb
and
stc
xor
ljmp
fisubs
aaa
or
mov
push
or
push
iret
adc
and
cld
loope
les
push
lock
sub
ja
cli
hlt
jmp
cld
add
or
dec
sti
dec
clc
ret
in
ret
fsubr
xor
sbb
sbb
shl
sbb
sub
cli
push
ss
xchg
loopne
js
mov
lahf
das
sub
inc
xor
jbe
adc
aam
bound
sarb
scas
xchg
das
loopne
iret
or
dec
orl
test
inc
test
inc
filds
into
mov
loope
scas
add
rcl
data16
sub
pushf
xor
push
mov
mov
xchg
ffreep
inc
cmpsb
add
mov
fsubs
xchg
lock
test
mov
cltd
adc
cld
stc
std
lods
inc
ds
mov
out
cwtl
add
push
push
jno
fbstp
pushl
cmp
loopne
push
sub
fsubrs
test
jae
mov
iret
xchg
xchg
adc
adc
inc
out
mov
xor
ret
jp
fwait
cmp
cmp
fs
adc
mov
sti
jns
cmc
xchg
jge
adc
push
pop
inc
cwtl
dec
xlat
imul
out
cld
lds
fwait
imul
xor
pop
sbb
cmp
stos
xchg
pushf
in
cltd
push
test
adc
pop
popa
std
pop
pop
popf
xchg
inc
das
dec
loope
sbbl
lcall
mov
stos
movsl
and
test
dec
call
outsb
mov
fstl
je
test
addr16
out
jae
std
adc
clc
stc
dec
mov
lock
add
jl
cmp
inc
or
mov
shll
and
cmp
repnz
xlat
pushw
aaa
xchg
xchg
xor
je
into
mov
lret
adcl
ds
scas
imul
adc
mov
jo
ret
dec
ds
stos
jp
cmp
das
mov
cwtl
daa
dec
call
push
or
jecxz
test
jl
inc
jne
adc
pop
add
ret
shlb
imul
xchg
sti
call
in
je
inc
cmpb
sub
push
and
repnz
pop
int3
insb
push
xor
xchg
xchg
jo
mov
icebp
inc
js
ja
ret
leave
fs
cmpsb
jae
popl
addb
inc
pop
add
pop
push
xchg
jns
xor
and
nop
insb
and
cmp
sub
mov
push
dec
add
add
add
push
push
mov
push
pop
jge
mov
shrb
jp
jns
inc
in
lods
jae
push
in
jl
mov
inc
lahf
je
jle
sbb
xor
push
mov
lock
xchg
lcall
mov
sub
lahf
xor
add
gs
push
dec
xchg
xchg
ljmp
fcmovbe
arpl
aas
inc
jp
fsts
push
mov
dec
gs
jg
adc
mov
xor
idiv
popf
pop
lds
cmp
fmull
xchg
jb
int3
aaa
aaa
xchg
sub
fcompl
cs
test
cmp
and
mov
pop
int
in
pop
xor
in
pushf
push
hlt
mov
inc
rorb
in
fsubrs
or
xchg
mov
in
pop
sbb
ds
cmp
sub
idiv
rcrb
cmpsb
inc
stos
mov
xor
dec
ret
mov
bound
out
mov
mov
or
divb
and
push
jo
andl
push
dec
ja
jns
inc
mov
ret
push
xor
cmp
rcrl
loopne
jns
aad
cmp
repnz
dec
subb
xchg
ffree
jl
lods
jge
fstps
rcl
es
mov
inc
scas
data16
push
mov
adc
outsl
pop
ds
sbbb
push
ss
fs
adc
in
aam
loope
std
push
frstor
xor
aaa
push
iret
dec
mov
adc
jmp
je
les
shll
add
enter
mov
scas
adc
jmp
mov
shrl
in
sub
bound
pop
dec
jnp
test
xor
mov
or
jnp
cs
dec
icebp
jg
xchg
mov
repnz
add
inc
mov
jmp
mov
inc
jg
arpl
orl
mov
xor
xlat
shrl
movl
jb
mov
jne
movsl
cwtl
mov
rorl
jns
adc
mov
pop
inc
daa
sub
popf
cmc
pop
mov
and
mov
or
lods
into
inc
push
xor
add
mov
imul
mov
cmp
sti
sar
lret
lcall
add
mov
cmp
insb
notb
adc
test
xor
test
xorl
loope
hlt
dec
test
call
dec
add
cmp
popa
pop
push
mov
jno
push
int3
ret
bound
pop
xor
test
adc
daa
cli
jmp
add
jnp
enter
inc
push
inc
cltd
push
or
push
inc
ljmp
and
call
sub
sahf
or
movsl
or
enter
nop
adc
xor
xchg
test
jnp
cmp
les
jg
loopne
addb
jb
pushf
xor
pop
xor
add
xor
jmp
and
push
addr16
fs
or
sbb
adcl
por
pop
sbb
lcall
test
ds
push
add
add
sbb
mov
pop
xor
sahf
ja
push
arpl
jl
in
test
rorb
xor
lret
sbb
dec
ret
lret
push
frstor
lods
xor
pop
cli
repz
jnp
mov
fstpt
test
ds
scas
je
push
das
pushf
jb
dec
pop
mov
je
xchg
push
lret
adc
pop
cs
stc
adc
pop
mov
mov
mov
hlt
jl
pop
das
ds
pop
sub
xchg
out
repz
and
daa
sub
loopne
aaa
addr16
adc
loope
out
xor
lods
insb
and
push
mov
mov
lods
mov
decb
push
fs
adc
std
jle
push
stos
imul
sahf
addb
cmpsb
icebp
int
stc
mov
pop
enter
pop
push
xorb
and
lods
mov
iret
outsl
mov
cmp
add
cmpsl
and
test
adc
mov
jmp
mov
sub
out
push
sbb
add
sbb
cmp
pop
mov
ret
mov
xchg
in
idivb
jbe
sub
es
les
jmp
outsl
cmp
or
cmp
jl
test
cli
or
call
popf
add
lret
push
cmp
cmp
out
and
cmp
cld
shll
xchg
or
cmpsb
icebp
inc
call
sbb
add
cmpsb
adc
int
mov
bound
dec
or
mov
pop
shr
xor
pop
sbb
pop
mov
ljmp
out
jo
es
jecxz
outsl
fdivrl
les
push
cwtl
inc
loope
adc
lods
mov
or
fldt
mov
stos
dec
sub
js
mov
xor
sbb
lcall
jp
mov
data16
cmp
or
inc
imul
jo
push
sbb
ficompl
add
jno
push
lods
mov
cmp
and
and
out
xchg
inc
and
movsl
stos
mov
mov
xor
loopne
push
jmp
int3
dec
jae
mov
mov
mov
fistpll
mov
in
test
add
out
cmp
insb
ljmp
notb
xchg
sbb
out
mov
and
fs
mov
in
cmpsb
xor
jae
aad
jbe
adc
cmp
cmp
clc
addr16
and
mov
pop
mov
sbb
add
loope
daa
imulb
int3
push
aas
jae
sbb
add
jecxz
mov
dec
dec
je
repz
roll
mov
lea
mov
daa
dec
xor
mov
jno
ret
pusha
ret
lcall
addr16
adc
xor
mov
in
sbb
or
mov
cs
push
pop
sbb
or
fcmovnbe
test
add
pop
repnz
mov
rorl
mov
hlt
outsl
aas
rorb
icebp
xor
js
sub
imul
rcrb
nop
add
mov
daa
shrb
outsl
imul
adc
cmp
jb
out
popa
cwtl
pop
adc
sub
int3
xlat
pop
jl
inc
cld
or
cli
cmpb
push
stc
insl
cmpsl
jle
nop
adc
or
pop
leave
aad
adc
cmpsl
loope
inc
pop
add
mov
push
jo
not
fmul
mov
roll
imul
jmp
cmp
dec
push
fsubs
shl
adc
jp
xor
cltd
inc
pop
in
outsl
push
push
pop
scas
addr16
pop
and
xchg
jle
data16
pop
pop
sbb
fmull
into
pop
push
sbb
mov
mov
pop
sub
xchg
sahf
adc
jb
adc
fwait
scas
push
mov
sbb
pop
insb
fldcw
pop
test
mov
js
cmp
aas
sub
bnd
in
jno
lret
js
shrb
fadds
jmp
cmp
imul
out
mov
stos
sbb
test
aad
bound
jnp
mov
mov
add
pop
outsb
mov
je
ja
or
pop
pusha
mov
fisubl
addr16
push
test
sarl
lods
mov
clc
lret
mov
nop
mov
subb
popa
loopne
cmp
dec
adc
push
mov
shr
jge
imul
outsl
and
dec
arpl
mov
je
inc
dec
dec
cli
fwait
sahf
mov
popa
mov
xlat
push
xor
or
jmp
dec
int3
leave
aam
add
jo
xchg
sahf
xchg
rcr
std
mov
adc
mov
add
push
es
cmc
xor
mov
dec
xchg
jg
dec
sbb
xor
push
aad
lret
dec
mov
or
mov
pushf
mov
adc
std
int
rclb
cltd
jne
mov
mov
stos
mov
ljmp
push
into
dec
mov
adc
outsb
xchg
je
cld
clc
out
jno
icebp
test
sbb
das
imul
mov
adc
repz
movsb
mov
add
mov
add
xlat
mov
stos
fcom
jl
cmc
aas
lret
scas
and
mov
or
lret
jb
gs
push
ja
xor
pop
je
xchg
xor
and
loope
and
or
or
xchg
push
faddp
mov
popa
mov
mov
pop
fsubl
xchg
jb
push
dec
in
xlat
cltd
jb
jbe
sbb
xor
addr16
push
movsl
test
hlt
cmc
out
mov
iret
adc
xor
subl
sbb
or
hlt
inc
nop
pop
push
jno
notb
mov
push
cmpsl
icebp
cmp
lahf
andl
xor
add
mov
sbb
pushf
or
pop
popf
jne
xchg
cmp
add
inc
mov
jmp
dec
cwtl
add
and
push
add
sbb
aam
jae
test
mov
jge
cmp
sahf
fs
in
push
mov
cld
push
and
cmp
scas
mov
mov
mov
cmp
repz
dec
ja
or
mov
xor
in
sub
ljmp
into
stos
call
pop
inc
push
push
loopne
mov
call
stos
xchg
cld
mov
inc
jbe
push
mov
je
mov
mov
repnz
mov
mov
sbb
add
enter
adc
or
jmp
pop
testl
push
je
fwait
sbb
cld
fistl
mov
cmpsb
push
outsb
lret
es
and
push
lcall
push
cmp
out
push
or
setns
int3
nop
mov
in
mov
sbb
stos
test
adc
mov
sub
pop
sub
cmp
mov
mov
je
mov
sub
test
push
and
adc
adc
and
call
pop
jp
ret
jl
xor
sbb
mov
jp
in
inc
mov
in
sub
cli
popf
shufps
dec
mov
pop
xchg
or
jae
mov
pop
cmp
push
ja
data16
lods
pusha
and
inc
mov
dec
or
sub
xor
bswap
lods
and
xchg
dec
hlt
sub
xor
pop
xchg
imul
cld
pop
inc
cmpsl
or
fbstp
mov
xchg
xchg
push
jae
and
xor
jns
cmpsb
pop
pushf
adc
addb
add
cmpb
fwait
jge
dec
adc
adc
push
je
lds
mov
cmpsb
sbb
cs
fimull
add
add
out
xchg
fdivs
stos
sarb
in
cmp
sahf
and
and
or
das
mov
fidivrs
popf
ljmp
and
mov
shlb
push
repnz
mov
sbb
sub
test
icebp
cmp
cli
inc
push
clc
adc
lcall
shll
pop
popf
je
lock
popa
pop
pop
ret
cmp
mov
cmp
out
lahf
inc
cmp
mov
into
mov
cwtl
ds
xchg
icebp
inc
lcall
test
outsl
scas
cmpsl
ja
jecxz
xchg
out
in
jecxz
mov
sbb
rcrb
mov
cmp
rcl
xor
sub
hlt
sahf
insl
jecxz
int3
sbb
sub
adc
jg
push
daa
xor
mov
mov
test
popf
lods
or
aaa
sbb
cmp
das
add
fimull
inc
sbbb
adc
or
or
mov
push
or
rcr
mov
leave
aad
rcrl
mov
add
jbe
data16
jl
push
push
popf
jecxz
mov
sbb
adc
cmpsl
inc
mov
pop
mov
imul
in
mov
sub
imulb
loope
jbe
lcall
dec
imul
imul
dec
clc
arpl
aad
pop
or
pop
mov
outsl
fnstenv
inc
and
add
data16
push
jns
test
sti
fisubrl
jl
push
jns
and
sbb
dec
sub
mov
sbbl
psllq
fucomp
imul
sub
jnp
push
lret
adc
mov
out
push
je
sub
ss
out
dec
or
sbb
mov
jp
aaa
push
mov
lret
dec
stos
aaa
pop
add
mov
insb
sbb
test
bound
pop
jb
pushl
lea
cmpsl
dec
and
fnsave
mov
jbe
mov
outsl
movsl
loopne
xchg
pusha
insl
jmp
frstor
fidivs
leave
mov
cmpsl
mov
pop
fdivl
sub
mov
cwtl
mov
mov
mov
inc
ror
stc
test
das
sub
inc
loop
adc
or
call
lods
inc
rcrl
mov
insl
jnp
mov
ret
inc
add
movsb
lahf
push
sub
push
cmp
mov
jnp
xchg
subl
and
jge
nop
out
jg
mov
popa
mov
jecxz
jg
and
call
adc
and
in
and
mov
dec
stc
mov
cmp
sub
adc
mov
stos
lock
pop
dec
xchg
ds
movsl
pop
jmp
add
dec
or
mov
push
add
pusha
jmp
mov
or
mov
fs
add
and
test
inc
and
pop
push
inc
sbb
pop
scas
mov
sbb
fimuls
cmp
inc
movsb
arpl
or
xlat
lret
sub
push
add
nop
xor
outsl
cmp
fsubl
dec
jecxz
mov
jl
test
sub
stos
test
stos
adc
ja
lods
mov
jns
add
out
dec
jle
inc
shl
movb
in
negl
scas
jg
or
inc
cmp
lcall
sbb
mov
das
cmp
lahf
dec
add
add
add
idiv
dec
ss
xor
jo
cwtl
repnz
dec
sbb
xchg
mov
out
mov
imul
repnz
cmp
push
les
inc
test
lret
cmp
insb
push
xor
flds
shlb
jae
sub
push
sbb
sbb
imul
mov
addl
jmp
les
fiadds
out
inc
mov
pop
jnp
in
andl
jmp
imul
push
popw
leave
inc
idivb
imul
dec
or
pop
test
or
dec
scas
cmp
dec
mov
test
pop
ljmp
xchg
mov
adc
adc
cmpsl
stc
sbb
sub
push
loopne
lea
orb
mov
dec
sbb
push
mov
push
dec
ficoml
idivb
fwait
jb
test
scas
jecxz
scas
out
adc
stos
push
sbb
dec
scas
iret
bound
mov
sub
push
mov
out
xchg
je
fs
sbb
popf
dec
mov
dec
jp
cmpsb
cltd
inc
push
ja
aas
push
js
push
leave
pop
mov
sahf
push
ss
lock
adc
xor
lock
lods
sarl
push
insb
imul
cli
sub
xchg
mov
js
mov
cs
imul
pop
lea
lea
mov
ss
add
add
into
mov
faddl
fcomp
enter
cli
pop
daa
enter
xchg
xchg
xchg
inc
jne
pop
inc
mov
call
rorb
lods
in
test
push
push
inc
jmp
out
cmp
loopne
jbe
inc
out
sbb
fnstsw
mov
out
sbb
out
sahf
fwait
xorl
std
fwait
push
inc
enter
shr
mov
out
xchg
pop
ja
cmp
jno
test
sbb
andb
jne
fadds
sbb
ficoms
sahf
pushf
jae
push
int3
int
test
call
es
das
or
divb
inc
stc
or
jne
mov
call
mov
cmp
xor
mov
xchg
jge
lods
ja
es
xchg
out
insb
cmpsl
inc
inc
test
mov
imul
mov
enter
cmpsb
mov
adc
xchg
sbbl
popa
icebp
out
cli
mov
dec
std
or
mulb
es
icebp
sub
pop
das
ja
push
xor
mov
aad
fcomps
adc
shll
xor
fucom
icebp
cmpsl
add
pop
das
mov
aad
add
cmc
es
imul
vcvttps2dq
loopne
pop
pop
xor
enter
hlt
jecxz
in
jbe
cltd
mov
sub
stos
ss
aas
out
loope
add
adc
xor
fs
push
cmp
fwait
and
popa
testb
insb
sahf
shl
sbb
inc
mov
lret
mov
dec
rorb
in
mov
jae
pusha
xor
rcr
aam
cmp
mov
or
movsb
add
mov
xor
mov
push
mov
std
pushf
add
pop
mov
lret
jbe
mov
cmp
sub
push
adcb
daa
loope
popf
xchg
popf
in
push
fmul
mov
pop
mov
jle
les
lret
sub
cmp
es
push
mov
xor
jbe
cmp
imul
icebp
shlb
pop
movsl
ss
std
xchg
push
lahf
jp
xchg
adc
loopne
mov
lds
pop
loop
inc
js
inc
scas
add
pop
aam
js
loopne
inc
or
sbb
or
jbe
fidivrs
sub
add
cmp
pop
adcl
testl
sub
push
pop
or
ja
mov
add
inc
add
into
mov
sub
pop
fildl
push
inc
adc
cmp
cmpsl
sti
imul
arpl
aam
out
add
out
adc
cmp
sub
aad
scas
aas
jle
cmpsb
cmpsl
js,pn
pop
cwtl
push
mov
pop
je
cmp
push
mov
mov
mov
enter
nop
sub
dec
mov
or
fildl
imul
pushf
or
or
outsb
xchg
shrl
push
sbb
stos
sti
sub
jp
jg
jge
mov
push
add
xchg
js
and
les
xor
or
loopne
jge
xchg
dec
roll
or
es
in
cmp
or
mov
shl
sub
mov
xor
pop
outsl
call
sbb
mov
jg
inc
jecxz
in
ds
jno
dec
mov
add
out
jb
jl
dec
adc
sub
jmp
cld
pop
sbb
in
out
lods
sub
mov
inc
lock
push
or
addb
cmpsb
outsb
subl
and
xchg
mov
push
inc
jbe
fcmovnbe
push
dec
dec
cmp
push
ret
maskmovq
notl
dec
cld
jbe
mov
jl
rcr
and
jp
outsl
sbb
into
sub
hlt
cmp
cmp
add
mov
hlt
fists
sub
dec
or
lret
movsl
testb
loop
push
push
cmp
lahf
push
in
lcall
insb
je
int3
push
jo
fbstp
ss
sub
xchg
jae
mov
jae
enter
les
push
jne
xchg
mov
nop
inc
and
adc
pop
push
mov
leave
dec
in
out
mov
xchg
cmp
sarb
leave
mov
xchg
xchg
loopne
xor
pop
and
es
loopne
push
xchg
and
push
fnstsw
mov
lcall
mov
cmpsb
scas
inc
adc
adc
push
mov
mov
cs
les
dec
stos
pop
lds
jl
subb
dec
dec
out
or
test
cmp
int
jnp
lahf
add
or
fisubrl
pandn
cmp
dec
dec
jo
xor
es
imul
add
adc
xchg
jno
mov
gs
mov
add
add
enter
jmp
jle
loopne,pt
shrb
aaa
fidivrs
sub
adc
inc
and
inc
daa
test
rcll
jmp
mov
mov
lods
and
js
je
cmp
aas
sahf
jmp
ja
popa
mov
inc
jecxz
xor
mov
mov
dec
sbb
fwait
push
fstpl
imul
push
jo
idivb
fcomi
shlb
lods
lock
sbb
push
add
lods
dec
int3
xchg
xchg
cwtl
lds
stc
xor
sub
cmp
sub
outsb
ret
sahf
movsb
and
movl
scas
pop
aas
fwait
add
js
inc
jg
cmpsb
shlb
iret
mov
jecxz
shlb
lods
stos
xor
mov
or
test
or
cmp
out
mov
xor
jo
in
insb
inc
outsb
je
cmc
xchg
lret
push
in
mov
aad
es
dec
xchg
fstpl
mov
imul
add
and
or
pop
stc
hlt
test
repnz
mov
xchg
flds
pusha
lret
mov
dec
loope
xchg
stos
insl
aas
pop
mov
pusha
lcall
fidivrl
mov
sbb
es
xchg
mov
or
cmp
and
push
mov
xor
inc
lea
jne
mov
inc
mov
mov
push
mov
push
push
pushf
cld
int3
cs
pop
cmpsl
push
cmp
les
dec
das
ja
dec
adc
dec
rcl
aaa
lret
jmp
push
testl
shl
fimull
xchg
inc
jp
mov
aaa
cld
nop
sbb
inc
push
jb,pn
call
sub
mov
out
ret
pop
movsb
and
in
mov
popa
inc
aaa
rorl
ret
ficoml
rcrb
push
cwtl
adc
sbb
iret
pushf
mov
sub
imul
jns
orl
inc
inc
push
push
loopne
dec
mov
xchg
mov
mov
fcoml
es
stc
int3
in
neg
add
test
mov
je
push
andl
sbb
out
insl
int3
push
lahf
popa
loope
fwait
xchg
out
ret
or
testb
fucomip
jge
rcr
repz
movsb
lret
sub
movsl
xor
fcom
sub
cmpsb
pushf
out
out
jg
imul
add
mov
lods
or
int
mov
jp
aas
adc
dec
add
cld
jmp
mov
pop
xchg
mov
and
and
lock
push
aam
xor
push
outsb
aad
add
xchg
rol
mov
test
lods
into
jne
cmp
jl
leave
rcrl
iret
popa
pop
pusha
xor
lea
out
add
pop
push
js
push
cwtl
mov
imul
leave
aaa
xor
fdivrl
call
or
jbe
push
das
scas
jle
jg
repz
call
mov
jbe
rol
mov
cmpsb
jb
and
shrb
lods
lea
adc
dec
mov
or
imul
es
inc
pop
in
mov
cli
cli
outsb
popa
pop
rorl
rorb
sub
mov
sbb
shlw
lods
xchg
imulb
mov
or
push
jecxz
mov
das
xor
mov
test
add
addr16
mov
pushf
shrl
add
lcall
xor
pop
out
and
inc
jo
sub
push
fwait
pop
pop
test
dec
andl
cmc
mov
and
sub
shrl
inc
xlat
sbb
and
imul
int3
stos
and
xor
cmp
adc
or
icebp
pop
sahf
mov
xchg
iret
sbb
rdmsr
mov
loopne
stos
xor
sbb
jle
out
pop
bound
jmp
mov
dec
rcrb
sbb
aas
mov
push
push
pop
add
roll
lock
jmp
int
push
mov
into
sbb
cmpsb
jl
jae
cmp
out
pop
xchg
xchg
subl
xchg
leave
inc
insl
nop
les
popf
mov
jb
loopne
push
das
ret
ret
rol
sarb
cltd
cmp
cmpsb
xchg
out
addr16
xlat
lret
mov
test
mov
jnp
sti
loopne
adc
cmc
lcall
int
jg
cmp
pop
scas
adc
imul
daa
add
int
and
mov
dec
mov
add
cmpsb
fsubrs
adcl
xchg
stc
ret
xlat
hlt
sub
mov
sbb
cmp
lods
pop
lahf
out
mov
in
in
jns
mov
or
mov
loope
add
icebp
and
and
pop
lahf
and
mov
pop
sub
add
aad
adc
imul
fcomi
dec
push
iret
mov
xor
and
cmpsb
adc
mov
mov
aad
sbb
movsb
xlat
mov
bound
cmp
cmp
adc
out
push
and
inc
pop
bound
jb
arpl
xchg
nop
test
jge
mov
scas
aad
aad
cmp
xor
insl
ret
scas
pop
pusha
das
mov
hlt
cmp
xor
mov
lahf
and
mov
dec
sbbb
or
jmp
out
jbe
inc
pop
push
scas
outsb
push
arpl
dec
add
sbb
popa
outsl
ja
orl
out
imulb
sbb
shlb
mov
imul
mov
xor
stos
pop
fbstp
jbe
push
inc
jns
icebp
cmp
test
rcl
movsb
jl
xor
mov
lcall
dec
xlat
jl
add
test
dec
xor
xchg
mov
xor
rcll
repz
out
mov
sub
mov
mov
leave
outsl
mov
and
aaa
adcl
sbb
cli
mov
lahf
inc
call
imul
pusha
sub
pushf
js
sub
idivb
insb
jmp
and
push
fiaddl
jg
aad
test
int3
mov
xchg
push
test
gs
movsl
mov
imul
jl
inc
mov
sbb
call
dec
push
dec
pop
sub
jmp
mov
pop
xchg
xchg
jns
out
xorl
in
lods
filds
call
daa
fucomp
jecxz
popa
mov
int
std
mov
mov
test
stos
mov
adc
sub
cmp
imul
sub
cmp
sub
push
pop
jnp
mov
lds
cs
jae
push
scas
mov
fidivl
sti
aam
popa
in
cmc
or
lret
ss
or
dec
lcall
shlb
mov
sub
and
hlt
sbb
movsb
mov
ret
cmp
or
add
pusha
jge
call
jecxz
mov
fsubl
inc
sar
orb
daa
cmp
insl
sbb
in
pushf
adc
cmp
int3
xlat
aam
cwtl
add
hlt
cld
push
cld
loopne
cmp
jb
push
adc
cltd
int3
fs
data16
sti
ss
shrb
je
daa
cmp
outsl
sbb
test
loope
xor
adc
mov
subl
shl
imul
out
adc
xchg
mov
std
loope
push
inc
xor
xlat
add
aaa
push
or
scas
xchg
mov
or
push
cmp
push
fdivs
lea
pop
fstpt
mov
nop
ret
jno
mov
stos
inc
add
cmpl
push
sub
pushf
sbb
cmp
repnz
push
adc
ja
dec
data16
lret
daa
push
test
jmp
push
inc
sti
call
jecxz
aad
stos
daa
inc
sbb
outsb
jp
or
stos
dec
cli
clc
cmp
jnp
adc
enter
je
inc
addr16
sti
ss
test
pop
bound
cmp
arpl
dec
mov
mov
mov
mov
daa
jmp
cmp
les
dec
ja
jmp
shlb
outsb
mov
clc
pop
or
bound
loop
mov
rcrb
fmull
mov
mov
je
lds
dec
mov
add
in
loope
test
cmc
cli
or
mov
or
in
jae
push
lret
jge
ds
lret
std
inc
fcompl
push
jb
mov
dec
jne
jecxz
dec
push
add
and
adc
mov
mov
in
pop
jmp
lods
push
std
int3
je
test
push
add
popa
ds
xor
xor
cmpsl
mov
lret
inc
sub
cmp
xchg
dec
dec
in
out
jle
cmpsl
stos
repnz
das
push
cmp
popa
scas
fcompl
loopne,pn
xlat
arpl
add
mov
pop
mov
insl
and
ja
add
aaa
and
cmpb
mov
scas
push
stc
and
sbb
testb
dec
sbb
sub
call
ja
mov
xchg
cwtl
sub
adc
mov
int
cltd
mov
outsb
andb
sbbl
loop
and
dec
rolb
add
lods
cmp
mov
adc
mov
cs
icebp
sub
push
rolb
mov
lret
xor
xchg
jmp
out
loop
push
popf
ss
add
add
sbb
mov
mov
mov
inc
mov
mov
pusha
iret
std
mov
das
adc
fsubl
sarb
shlb
bound
shr
jp
cmp
xchg
mov
inc
cmpsl
mov
into
lods
inc
iret
pop
movsb
pop
push
jecxz
test
dec
lds
jno
ds
popa
xor
testb
fnstcw
insl
push
je
jmp
pushf
out
jge
inc
xchg
test
enter
sti
mov
daa
xorb
inc
insb
adc
repnz
out
lret
inc
lcall
es
lea
sbb
sar
adc
lods
mov
mov
and
jnp
fstl
add
jge
fcmovb
sahf
push
insl
cltd
sbb
cmp
push
ret
push
divl
xor
mov
cmp
sbb
xor
js
jns
or
lcall
jns
fst
fdivrs
jle
es
ret
dec
lods
into
jnp
pop
mov
jl
cwtl
sahf
xchg
cmpb
add
xor
mov
out
mov
push
xchg
push
add
push
pop
jne
into
mov
mov
dec
stos
sub
call
adc
in
sub
lods
push
cmc
sarl
mov
sbb
push
push
imul
int
pop
call
popa
cwtl
dec
rcl
and
cs
jecxz
cmc
dec
ja
push
loop
out
int3
insb
mov
mov
shrl
out
out
imul
push
es
dec
pop
addr16
enter
mov
mov
rorb
jno
xchg
push
pop
pop
mov
xchg
cli
test
insb
mov
movsb
int3
cmp
dec
das
or
sub
push
sbb
outsl
arpl
outsb
mov
lret
dec
push
cltd
in
cmp
ss
ds
mov
pop
dec
shrl
in
pusha
mov
shr
hlt
test
cmp
outsl
out
xchg
mov
mov
into
pop
mov
ret
push
out
add
pop
dec
stc
mov
sub
pop
jne
jg
inc
int
cltd
mov
pop
xchg
dec
icebp
lret
and
cwtl
adc
push
aad
sub
je
icebp
movsl
jg
pop
lret
inc
pop
rorb
aaa
fsubl
rcll
repz
or
lock
cltd
cmc
add
or
xor
pop
fmulp
jmpw
cli
call
lahf
lahf
mov
mov
out
fldl
int
aad
movsl
xor
adc
sbb
jns
shl
bound
pop
sbb
and
in
fildll
inc
dec
cwtl
int
push
sbb
ljmp
insl
decb
jne
adc
in
lret
dec
mov
lock
or
mov
ret
mov
jns
aaa
mov
lea
imul
push
jb
and
pop
rcll
pop
mov
jle
mov
push
xor
xchg
add
cmp
xor
ljmp
xor
mov
ss
popa
andb
fsubs
jnp
mov
sti
fildll
jmp
inc
mov
sti
lea
test
lcall
pop
shll
pop
test
dec
hlt
fstps
xor
mov
pop
sub
and
subb
jg
sbb
pop
jl
pop
mov
jbe
dec
scas
loope
sub
sbb
pushf
punpckhwd
mov
cs
xchg
mov
adc
test
cmpsb
push
dec
lea
cmpsb
jbe
add
lods
rolb
adc
mov
xor
leave
push
cmp
shr
xchg
xor
xchg
dec
push
ljmp
int3
sbbl
imul
push
or
lcall
or
jmp
ljmp
loope
in
daa
loopne
xlat
dec
push
jae
pop
dec
jmp
stos
cmp
stc
mov
pop
sbb
jbe
sub
push
lahf
sbb
in
push
bound
pop
cmp
pusha
mov
push
pop
in
popa
aam
inc
xchg
clc
pop
cmp
cmp
adc
cmp
xor
lahf
pop
xchg
xchg
mov
mov
in
into
mov
inc
mov
or
mov
pop
jp
dec
add
pop
add
cmc
or
mov
imull
jae
pop
hlt
lret
out
push
cmp
pop
enterw
ret
out
pusha
mov
pop
lret
mov
sahf
enter
adc
lcall
and
in
cmp
lds
push
test
or
and
jns
mov
push
out
jne
pop
movsb
orb
and
mov
cmp
push
inc
clc
lcall
and
jle
jno
loop
cmp
mov
and
xchg
cmp
and
dec
and
push
sbb
loop
mov
loop
or
sub
mov
mov
mov
ja
dec
mov
aas
icebp
mov
sub
push
push
fiaddl
cli
mov
test
sub
add
sub
dec
push
mov
paddusb
mov
mov
out
add
fcmovu
mov
pop
xchg
and
out
xchg
fnsave
jno
divb
push
add
mov
loop
aaa
repz
stos
cltd
sub
aam
ja
mov
xor
jno
iret
push
push
inc
pop
mov
inc
call
lds
and
fwait
mov
mov
lds
cmp
ja,pt
sbb
pop
sub
sub
add
fcmovne
xchg
dec
cmp
outsl
loop
pop
cmp
jno
xor
ja
mov
xor
xor
add
pop
jecxz
adc
lods
out
dec
jmp
xor
sub
sti
aad
loopne
push
jmp
ja
fimuls
push
and
fldcw
or
push
int3
loope
xchg
loop
hlt
lcall
in
mov
je
mov
in
mov
pusha
xor
pop
out
icebp
hlt
xor
hlt
sub
or
jae
push
outsl
add
xchg
cmpsl
mov
pushf
mov
je
popf
movsb
cmp
or
mov
xchg
std
jl
jg
aad
dec
xor
popf
mov
dec
arpl
xchg
inc
dec
arpl
movsb
xor
or
cmpsl
push
clc
jp
xchg
dec
test
xor
sar
sbb
mov
add
dec
inc
push
jns
push
cmpsl
or
dec
push
jnp
xchg
incb
dec
mov
add
ss
jmp
in
push
aas
mov
pop
or
inc
test
cmp
and
mov
cmp
xchg
or
cmp
aad
cmp
push
add
cmc
mov
ds
pop
sti
int3
mov
cmp
icebp
sub
jo
add
out
call
sarb
push
inc
negl
es
nop
daa
lcall
daa
lret
dec
inc
or
clc
sub
adc
or
cltd
vpcmpgtb
jno
popl
sbb
xchg
repnz
mov
popa
dec
sub
incb
pop
test
adcb
push
mov
imul
add
ljmp
fsubs
scas
push
jne
icebp
aaa
std
lock
adc
add
rorl
pop
xor
xchg
jbe
mov
dec
dec
push
incb
lahf
push
mov
push
inc
pop
add
sub
test
arpl
shlb
adc
stc
pop
scas
push
enter
stc
cmc
dec
ret
cwtl
inc
lods
jnp
pop
dec
fbstp
and
dec
sub
das
stc
adc
mov
cmp
or
mov
cmpsl
movsl
mov
xchg
sub
ljmp
shr
pop
mov
ja
adc
arpl
addb
sub
test
push
and
push
outsl
mov
inc
bound
xor
popf
cmp
lods
dec
xor
adc
sti
repz
push
mov
inc
or
sub
mov
clc
push
insl
cltd
test
add
in
fisubrs
insl
xchg
sub
fs
ja
and
dec
dec
test
int
clc
xchg
das
loop
mov
jmp
or
dec
pop
push
xchg
pop
and
addr16
mov
js
hlt
int
mov
sub
arpl
fs
je
stos
pop
fdivrs
pop
sbb
dec
lds
push
lcall
scas
imul
jg
sub
lods
cltd
dec
out
sahf
cltd
loopne
xchg
roll
js
mov
pop
xor
mov
mov
push
ds
mov
or
sahf
fisubrl
and
cmp
icebp
sbb
out
jl
cmp
cmpl
data16
jge
xchg
imul
in
aaa
add
packuswb
loope
pop
stos
fnstenv
rorb
outsb
dec
test
and
lret
jne
push
push
outsb
repnz
fwait
dec
cmpxchg
sti
mov
adcb
xchg
sub
test
outsl
jo
push
repnz
pop
mov
xor
stos
inc
pop
jl
cmp
cmpsb
adc
in
enter
lret
cmp
fnsave
call
outsl
cmp
notl
xor
repnz
add
or
sarb
mov
sbb
mov
js
adc
ja
call
xor
mov
cmpsb
lock
mov
xchg
aam
xchg
fs
lods
imul
shlb
xor
mov
push
lahf
adcl
outsl
jecxz
dec
pop
xchg
je
dec
ficompl
loopne
jo
add
popf
mov
mov
sbb
outsl
test
enter
and
mov
arpl
push
fcmovnbe
outsl
jnp
cmpsb
sub
lret
lea
subl
cltd
mov
push
nop
cld
or
insl
or
sahf
out
je
cmp
mov
std
int
mov
push
hlt
add
mov
push
mov
push
mov
inc
xor
mov
and
push
fldl
mov
cwtl
jo
xchg
mov
in
jne
test
pop
xchg
lcall
push
adc
gs
mov
shll
out
inc
std
pop
rcrb
cmp
sarb
sbb
out
mov
pop
loop
inc
enter
cmp
ss
adc
inc
cwtl
fisubs
mov
mov
xchg
loop
ret
ja
movsl
pop
repz
jp
pushf
insl
jg
adc
cmpsl
icebp
jb
cmp
movsl
fstpt
jecxz
jg
mov
mov
push
aam
mov
mov
sbb
icebp
data16
and
test
dec
dec
jle
sti
adcb
pop
jmp
dec
sbb
jnp
dec
pushf
mov
loope
mulb
sbb
push
cmp
ret
push
rclb
orl
xor
jbe
mov
lea
xchg
test
sbbl
popa
jb
push
or
cmc
and
arpl
sbb
ja
into
adc
mov
sbb
scas
cmp
and
inc
push
mov
into
and
jae
or
ss
sbb
das
scas
repnz
adc
orb
mov
rcrb
sub
push
repnz
jecxz
incl
mov
push
inc
cmp
push
cmp
inc
aad
test
push
xchg
add
xchg
rorb
daa
xlat
shll
mov
scas
pop
std
inc
cmpsb
add
pop
pop
fwait
test
ret
inc
inc
cmp
stos
or
iret
aaa
fs
mov
mov
mov
xor
pusha
jne
sbb
enter
and
js
add
mov
cli
push
or
xchg
cmp
stc
test
fisubrs
fdivrl
clc
pop
shll
mov
push
jbe
repz
orb
pop
mov
mov
add
dec
add
inc
mov
or
fcmovu
aas
pop
popf
jecxz
xchg
dec
jl
add
pop
push
cmp
add
popf
jmp
xor
sub
jno
mov
xor
pop
je
inc
nop
jmp
into
pop
jne
sub
aaa
and
and
and
inc
or
mov
lods
jl
orb
std
add
pusha
mov
inc
cmp
pop
out
hlt
iret
pop
pop
ficomps
sahf
sbb
cltd
insl
or
inc
jbe
lods
dec
push
push
lds
and
repnz
popa
outsb
xor
cmpsl
sub
test
fcmovnu
xchg
fcom
cmp
push
inc
fdivs
fcomps
pop
loop
test
push
insb
and
mov
lods
aam
outsb
loope
add
cli
icebp
mov
sbb
push
clc
testb
popa
sub
dec
mov
js
adc
pop
mov
mov
adc
pop
bound
pop
push
inc
xchg
sbb
call
shll
add
mov
inc
popf
or
bound
pop
fistpll
push
cmc
xorb
movsb
jns
test
push
movsb
inc
lock
adc
jns
mov
dec
pushf
ss
leave
jle
adc
sbb
push
js
icebp
or
mov
repnz
sbbb
or
push
das
nop
mov
mov
pop
das
data16
fucomi
xor
stc
inc
sub
rclb
adc
dec
imul
pop
mov
push
dec
pop
jp
lahf
icebp
hlt
push
fsubs
push
xor
cmp
addr16
jae
lea
into
push
ds
loop
movsl
aam
inc
mov
adc
jae
leave
sub
repz
mov
xorb
adc
sub
xor
inc
push
addr16
push
shrl
movsl
xchg
mov
jge
mov
fsts
sbb
adc
cli
ljmp
into
xchg
outsl
xchg
mov
mov
and
jae
push
sub
add
mov
mov
fwait
jne
and
je
adc
int3
data16
cs
mov
test
out
cld
les
jnp
sbb
xchg
sbb
jno
push
add
out
jns
push
mov
mov
sbb
pop
int
cld
shrl
cld
lcall
fisttpll
inc
add
inc
out
sub
sub
dec
ret
lods
and
outsb
fisubrl
mov
std
testl
dec
push
popa
hlt
mov
mov
sti
or
dec
daa
cld
jbe
adc
in
in
mov
inc
mov
dec
popa
loope
sub
ljmp
mov
fsubrl
call
jge
insl
out
lock
stos
mov
dec
sub
push
pop
mov
cmpl
rclb
pop
nop
jmp
cmp
adc
cmc
or
popf
or
js
es
sbb
pusha
inc
xor
xor
cmp
stc
add
movsb
aad
mov
lock
mov
push
mov
outsl
test
and
iret
in
or
inc
cmp
fnstenv
repz
inc
int3
or
fdivs
add
cmp
rcll
xchg
add
xor
push
cmpsb
das
das
jp
mov
iret
leave
std
es
push
xchg
pop
pop
cmpsb
and
pop
mov
cmp
loop
rclb
push
cmp
add
xchg
sub
loop
clc
gs
imul
cwtl
stos
dec
add
icebp
out
pushf
incb
sti
fildll
sub
jp
push
dec
xor
push
adc
mov
sahf
and
xchg
pop
xchg
rorb
cmp
fdivrs
mov
les
roll
dec
rorl
cmp
xchg
adcb
sbb
ja
aas
ret
or
test
aas
xchg
and
addr16
mov
sbb
stos
push
mov
fs
das
sub
adc
mov
adc
loopne
sub
lds
test
lds
sub
xchg
xchg
mov
imul
dec
mov
mov
in
adc
sbbb
ja
push
mov
mov
jl
adc
sahf
lcall
sar
fldl
fs
dec
jno
dec
xor
or
arpl
and
sub
dec
pop
pop
xor
mov
push
cli
cmp
movsb
icebp
cs
pop
and
sub
adc
insl
mov
jmp
repnz
lret
gs
mov
cli
or
inc
mov
adc
xor
enter
adc
mov
sbb
fstpl
arpl
push
xor
lret
push
add
mov
jecxz
enter
int
mov
pop
fidivrl
ja
mov
scas
movsb
addb
dec
cld
xor
insl
outsb
inc
in
push
cmp
mov
mov
dec
or
sub
add
adc
int3
sbb
sbb
or
mov
jl
jl
mov
dec
dec
jno
cmp
push
loop
xchg
aaa
adc
mov
mov
push
xchg
leave
lahf
fs
data16
fwait
les
inc
leave
cmc
inc
mov
or
sbb
xor
jp
std
xchg
iret
adc
fnstsw
imul
std
mov
xor
fsub
lea
arpl
mov
ficompl
movsl
out
je
repz
mov
cs
push
addr16
xor
popa
xchg
mov
xor
shlb
push
sub
adc
clc
nop
sbb
mov
cs
shll
pop
iret
cmc
mov
in
call
std
js
lcall
sub
sbb
xchg
incl
dec
test
in
testl
stos
pop
call
icebp
cmpsb
or
jbe
xchg
popa
movsb
jne
mov
sbb
sbb
push
add
pop
sub
rorl
addl
push
sarb
add
nop
cmp
xchg
fists
fsts
dec
mov
jecxz
dec
in
xor
sbb
clc
mov
int
xchg
cmc
int
fcomps
adc
shll
data16
cld
insb
stc
sub
psubusw
push
lock
add
cld
jl
push
enter
inc
ljmp
aam
xchg
pop
dec
sbb
dec
adc
idivb
jmp
adc
push
dec
int
mov
adc
add
inc
dec
cwtl
clc
movsl
sbb
hlt
mov
mov
popa
fisttpl
push
jge
cmp
and
jb
imul
add
dec
stos
mov
data16
sti
rcl
push
rolb
mov
mov
jo
and
gs
jnp
cmp
andl
gs
lahf
movsl
cmpb
jg
fisttpl
cs
nop
rclb
sti
cwtd
cmpsb
leave
fsubrl
in
mov
jmp
dec
jecxz
ret
ret
mov
aad
pop
push
jno
dec
ds
in
push
sbb
loop
fs
fildll
jp
mov
in
shlb
iret
fcmovnb
shr
movsb
push
cmp
lahf
outsl
pop
das
nop
jb
jne
iret
fldcw
inc
xor
sub
jp
fistps
adc
ss
xor
ret
fsubs
mov
addr16
pop
xchg
jb
fucom
xchg
shrl
mov
popfw
cmovno
sti
add
arpl
sbb
cwtl
mov
add
outsl
jl
arpl
enter
mov
xchg
out
mov
xchg
fadd
ret
subl
lods
in
xchg
lods
push
fsts
xor
pop
xor
dec
cmp
sub
push
pusha
jecxz
push
and
sti
add
decb
mov
xor
xchg
mov
cwtl
movsl
pushf
adc
sub
and
xchg
outsb
cmpl
nop
sub
in
jns
bound
cmp
pop
cmp
ret
imul
rorl
mov
xor
fstp
mov
cld
sub
jmp
ja
mov
add
scas
es
mov
mov
fildl
in
js
fwait
inc
inc
aam
in
movsb
test
pop
data16
add
ds
call
fistpll
fcmovbe
inc
xorl
push
dec
xchg
add
cmc
fwait
lret
and
lds
and
loopne
dec
mov
pop
xchg
ss
pop
cwtl
sbb
dec
jbe
and
or
pushf
dec
or
mov
out
mov
jbe
shlb
jmp
shl
mov
xchg
loope
mov
jne
jecxz
xchg
pop
std
lret
rorb
pop
jg
or
call
imul
enter
aad
pop
mov
xchg
add
repz
push
pop
iret
fdivs
cmpsb
dec
rolb
inc
xchg
adc
mov
push
and
mov
movsl
pop
aam
mov
add
ss
arpl
xchg
mov
push
jmp
xchg
cmpsw
insl
mov
mov
mov
sub
out
mov
xchg
fcmovb
test
and
clc
cmp
xor
xchg
sbb
repz
lods
add
stos
loope
mov
dec
sbb
pop
inc
pop
bound
mov
cmp
loop
ret
mov
decb
add
adc
push
sub
jmp
mov
and
add
add
cmp
inc
cmp
movsb
mov
pusha
ret
hlt
push
enter
jae
mov
movsb
jae
fldcw
mov
pop
shrb
dec
jb
daa
pop
popa
gs
divl
stos
in
dec
add
inc
sub
cmp
sbb
arpl
testl
mov
xchg
test
lods
cs
xor
mov
outsb
xor
rcrb
sub
icebp
add
jnp
push
xchg
jo
aad
cmpsl
xor
sbb
lds
je
nop
mov
xchg
mov
outsb
popf
mov
lock
sti
jmp
xor
stc
dec
adcl
pop
xchg
subb
adc
add
fidivrs
outsb
sbb
filds
loope
inc
hlt
fnstcw
sub
repz
cmp
and
dec
mov
mov
or
jecxz
inc
add
aas
in
je
mov
daa
nop
push
pushf
ja
and
sub
fcomi
or
push
add
jne
inc
mov
outsl
and
xchg
push
loope
jmp
pop
adc
jne
xchg
stos
or
adc
mov
push
fcoms
mov
push
add
push
cmp
mov
cmc
xchg
pop
xlat
xchg
pop
loopne
aas
sub
and
das
mov
hlt
cltd
mov
sbb
and
imul
sub
mov
aad
push
movsb
cmp
jno
inc
pop
sbb
addr16
push
inc
xchg
mov
xor
lret
aad
jecxz
lods
xchg
pop
aas
push
insl
inc
fcoml
xchg
lcall
push
pop
test
adc
repnz
cli
out
pop
push
imul
xor
xchg
mov
pop
lods
or
dec
test
loop
repnz
outsl
sub
scas
mov
sahf
lds
in
repnz
or
cmp
fsts
push
xchg
sarb
and
repz
pop
xchg
insl
cmp
jg
sbb
inc
loopne
fidivrl
mov
into
and
cs
add
dec
add
sub
ret
scas
scas
out
rclb
rolb
aad
and
pop
ss
scas
inc
shl
fmull
sub
push
loope
xor
lods
leave
sbb
dec
movsb
bound
fsubrl
add
lret
lret
fimuls
mov
dec
sbb
daa
mov
aaa
fisttpll
pop
push
push
decl
fwait
jmp
pop
test
push
sub
mov
in
inc
cli
push
xor
cmp
stos
mov
out
add
jge
rorl
in
jb
lret
clc
xlat
cmp
popa
cmpsb
mov
testl
lods
imul
aam
mov
call
fildll
lods
xor
inc
mov
jb
hlt
mov
or
and
syscall
mov
in
pusha
jno
in
xchg
lods
addb
pop
pop
arpl
mov
mov
jae
int
mov
dec
test
cli
jbe
cmp
scas
jns
shrd
bnd
ja
idiv
xchg
lahf
lea
inc
sub
imul
pop
inc
sbb
lods
pop
test
insb
arpl
out
or
xorb
mov
fisubrs
test
imul
je
jle
dec
pop
fidivrs
mov
out
out
push
xor
stos
or
das
out
dec
sti
push
sub
adc
cmpsl
call
lret
jl
cmp
xchg
cld
pop
jnp
mov
shl
and
pop
mov
std
dec
mov
mov
dec
adc
mov
xchg
lret
sub
push
add
fimuls
rcr
sti
add
jle
inc
and
in
sub
test
jo
and
xor
iret
outsl
mov
pop
arpl
mov
mov
out
int
inc
shrb
call
out
or
cld
cmp
pop
rcrb
arpl
mov
std
iret
cs
mov
xor
xchg
xchg
test
mov
dec
sub
fidivs
xchg
fildll
or
or
mov
pusha
dec
dec
cmpsl
jl
incl
out
mov
inc
cwtl
mov
push
sub
arpl
or
movsl
mov
dec
cltd
pop
push
or
mov
inc
pop
popf
xchg
fwait
movsl
jae
sub
add
push
data16
jge
int
sbb
addr16
les
filds
add
push
add
dec
faddl
pop
leave
das
daa
sub
clc
xchg
mov
lret
push
es
into
test
and
push
out
jnp
aaa
ret
sbb
cltd
mov
in
ds
pushl
cs
dec
xor
ret
and
cmp
mov
push
mov
cmp
mov
popf
std
inc
xchg
cmpl
lahf
in
nopl
fsubr
test
pop
lea
and
ret
inc
rolb
lret
lea
dec
negl
hlt
scas
inc
cmp
rcll
rcrl
dec
cltd
cmp
insb
out
xor
shll
mov
and
jl
iret
inc
dec
aas
mov
mov
or
push
push
js
fisubrs
or
and
js
jp
dec
cmp
ljmp
xchg
lods
enter
cmp
or
mov
inc
imul
or
cmc
xchg
and
int3
jbe
or
mov
aam
out
mov
push
pop
cs
sbb
xor
xor
cmp
jg
sbb
sub
or
arpl
das
fbstp
cmpsb
or
je
das
ficoml
arpl
lcall
in
popf
push
lret
xchg
xor
xchg
jbe
jo
sti
sub
data16
ss
jb
and
bound
xchg
mov
sarb
sti
mov
adc
inc
sub
cmc
cmp
jg
ret
inc
add
loopne
push
fsubrl
pop
stos
sub
mov
or
sub
push
add
fistps
cmpsb
pop
test
adc
mov
or
pop
test
mov
test
into
cwtl
sar
mov
rorb
mov
fsubrs
or
mov
cmpsb
fadd
bnd
mov
cmp
stc
aam
or
lret
das
lods
roll
loope
aaa
or
mov
adc
imul
mov
push
jne
xor
cmp
pop
lea
cmc
xchg
or
mov
ret
jae
mov
cmp
xchg
mov
dec
and
dec
cmpsl
jo
fldl
cltd
insb
mov
mov
popf
push
inc
outsb
ljmp
mov
cli
and
insl
sub
push
bound
jg
add
imul
scas
and
lock
jp
sahf
and
outsb
push
movsb
aas
dec
sbb
arpl
mov
inc
mov
pop
cld
xlat
sahf
movsl
or
push
push
or
daa
addb
les
outsb
inc
jmp
and
push
mov
and
mov
ss
lock
daa
adc
cwtl
mov
cmp
into
aaa
pop
lret
inc
dec
or
xchg
roll
pop
ret
out
ljmp
jmp
inc
jl
mov
xchg
mov
aaa
sbb
loopne
loope
cmp
cmp
adc
pop
js
lds
loopne
jb
jnp
mov
mov
out
leave
jg
jne
mov
lahf
scas
jg
pop
lahf
xor
enter
mov
rcrl
fs
icebp
sub
shlb
or
mov
push
fisttps
shll
sub
cwtl
ljmp
xor
dec
mov
and
rcl
jne
and
dec
pop
sub
or
mov
pextrw
or
adc
fadds
cld
sub
insl
pop
mov
dec
pusha
in
push
iret
xor
scas
cmpsb
icebp
jb
fisubl
test
out
or
out
int3
sbb
mov
insb
cmp
sti
insb
push
mov
aam
mov
xchg
mov
cs
test
imul
inc
xor
mov
fildl
pop
movsl
sub
mov
lcall
sarl
xchg
mov
out
xor
dec
mov
cmp
pop
scas
loope
adcb
out
aas
fidivrl
dec
mov
sub
jne
jo
mov
xor
push
mov
or
cwtl
add
mov
cmp
in
bound
ljmp
insl
xchg
lahf
sar
sub
push
fs
mov
push
in
jmp
dec
cmp
push
pop
sbb
and
std
push
jmp
jo
ss
xlat
push
gs
pop
xchg
faddl
xor
imul
xor
inc
test
lret
mov
push
inc
orb
adc
mov
fcomp
push
xchg
ja
addr16
mov
imul
out
ret
dec
mov
inc
jp
shlb
hlt
mov
pusha
cmp
fnstsw
xor
push
pop
inc
jle
xor
stos
imul
call
sti
lea
and
in
sub
push
iret
cltd
or
pop
mov
std
subl
scas
inc
and
jns
push
jl
idivb
dec
adc
adc
mov
shrb
ret
mov
push
in
push
test
xchg
mov
aas
lea
sub
jns
dec
jns
sbb
jb
lods
stos
test
test
push
cmp
cld
aam
mov
mov
xchg
mov
test
mov
lds
fcmove
mov
or
mov
xor
negl
fldenv
popa
in
xor
lcall
mov
lock
stc
iret
movsb
outsb
gs
xor
mov
ljmp
or
and
sub
hlt
lret
addr16
scas
jns
push
mov
pop
iret
cmp
out
fdivr
push
jp
rorl
loop
push
aad
pop
sbb
bound
mov
imul
loope,pn
mov
stos
mov
aad
cmp
mov
pop
pop
mov
mov
adc
cmp
push
xchg
sti
mov
pop
mov
scas
idivb
sub
adc
cwtl
je
and
std
inc
outsb
out
or
pop
push
xchg
mov
rcll
in
rcrb
push
pop
fcmovne
jns
xchg
insb
sti
cmp
cmp
lret
scas
dec
or
fs
jl
sub
mov
setbe
fchs
insl
aas
and
mov
lds
rorl
or
adc
arpl
sbb
out
lea
or
insl
mov
fwait
cmp
push
sub
ret
sub
inc
xchg
or
pusha
cmc
adc
scas
bound
jo
push
ljmp
fsubp
xchg
ljmp
imul
lret
call
divb
sbb
mov
repnz
add
push
push
outsb
adc
add
jae
xchg
cmp
mov
pop
sbb
jl
add
js
cltd
es
and
push
rcl
mov
sub
mov
addr16
out
add
fs
lea
adc
pop
dec
cmovle
mov
xchg
imul
mov
sbb
pop
pop
icebp
cmc
jnp
push
movsl
inc
push
dec
ss
xor
stos
test
loope
jl
dec
mov
xor
setge
ret
mov
sub
adc
xchg
loopne
cwtl
movsb
cmp
mov
test
cwtl
and
ss
and
ret
inc
fxch
std
pop
sub
sbb
ret
or
test
pop
or
sbb
rorb
xor
addr16
lods
add
mov
sub
cli
lcall
icebp
push
out
mov
pop
dec
push
xchg
mov
aas
xor
pop
sbb
and
xlat
mov
outsl
jmp
mov
jb
sbb
cs
inc
xchg
mov
cs
pinsrw
data16
mov
mov
cmpl
inc
push
gs
dec
out
cmpsl
pop
or
push
pop
loopne
imul
out
add
jno
mov
in
or
cmp
push
js
rorb
scas
fs
in
jecxz
cmpsb
idivl
push
adc
push
cwtl
inc
std
mov
jmp
in
fcoms
cmpsb
jae
xor
aad
push
pop
and
push
push
loopne
enter
jb
std
std
cmp
pop
mov
imul
lret
out
fbstp
or
sti
loopne
sbb
xor
mov
pop
sub
pop
push
dec
leave
sbb
inc
int
data16
jecxz
loop
test
pop
pop
icebp
jl
imull
inc
jae
inc
xor
test
movl
and
fisubl
in
jg
push
in
shl
add
outsb
jmp
cmp
repz
sub
jno
or
mov
test
gs
xlat
pushf
icebp
pusha
jo
inc
and
sbb
fs
or
lock
sub
sbb
add
adcb
dec
xor
in
sub
xchg
inc
cld
sub
cmp
pusha
ss
mov
iret
cmp
xor
inc
pop
sbb
pop
pop
out
js
popf
cmp
sbb
push
mov
jns
cmpsb
in
and
xor
xchg
push
sbb
adc
ret
inc
in
cwtl
lret
adc
jmp
scas
lahf
jecxz
xchg
inc
clc
xor
jae
int3
out
add
and
add
mov
push
negl
pop
jno
lret
fnstenv
jg
push
cmp
ja
mov
pop
mov
repz
test
int3
inc
or
sbb
aam
nop
sbb
imul
enter
cs
cmp
mov
cli
jle
repnz
mov
test
push
jge
add
pusha
scas
xchg
inc
dec
mov
hlt
lahf
iret
dec
in
jnp
and
mov
call
std
test
mov
xlat
outsb
ds
lret
fmul
shlb
xor
and
xchg
jp
mov
jmp
popa
pop
ret
pop
sti
in
mov
dec
mov
out
mov
std
out
xor
lcall
icebp
adc
testb
adc
add
lcall
iret
xchg
inc
or
pushf
or
sbb
sub
sahf
xor
andb
xor
data16
leave
push
fstpl
add
adc
mov
and
push
push
xor
xchg
shl
out
lods
imul
mov
fdivs
insl
xor
lock
repnz
and
xchg
inc
into
dec
inc
mov
pop
xor
inc
and
out
addb
cwtl
aas
inc
std
jge
pop
add
adc
mov
adc
popf
fisttpl
push
jnp
fwait
mov
jle
xor
adc
fisubrs
mov
jae
add
jecxz
pop
xchg
push
insl
ljmp
aad
push
fisubrl
in
xchg
sbb
shlb
cmp
or
xor
outsl
mov
vmovmskps
es
sarl
int3
dec
sub
aas
xchg
add
inc
icebp
push
add
int
ror
mov
mov
dec
adc
pop
testb
insl
js
jo
dec
loope
arpl
mov
ret
mov
xor
in
pop
jmp
std
test
imul
sbb
sar
mov
xor
fcmove
rcl
sub
les
jg
fmull
adc
mov
inc
mov
sbb
pop
lods
add
mov
aaa
adc
fisttpll
or
ret
xor
inc
data16
mov
lods
xor
loopne
cmpsb
push
sbb
into
push
and
xchg
adcl
push
sbb
lret
ja
out
dec
stos
aaa
nop
cmp
std
stos
fistps
aaa
jo
add
shll
dec
adc
in
sbb
adc
pop
repnz
lds
mov
dec
fstpt
dec
adc
repz
ss
fcmovnu
aas
sbb
rorl
mov
cmp
jns
or
sub
push
sti
adc
lea
sub
filds
sub
mov
pop
bound
push
sarb
pushf
daa
cld
cmp
push
xor
jo
inc
ret
out
jae
stos
lea
add
cld
movsb
jg
mov
pop
mov
in
xchg
enter
mov
movsl
xchg
jo
xor
test
cmpsl
sub
loopne
in
sbbb
push
pop
jmp
cmp
rclb
mov
sbb
shl
lock
pop
adc
insl
clc
pop
or
in
pop
jecxz
adc
or
dec
cwtl
pop
fldl
xor
mov
push
pop
add
inc
and
inc
daa
or
psrld
fnstsw
sbb
enter
add
icebp
int
adc
xchg
ss
xchg
mov
inc
xor
imul
mov
out
jp
add
add
cmpsl
lret
pop
hlt
xor
jl
in
adc
sub
imul
out
sbbl
out
std
inc
les
push
scas
call
mov
sub
add
in
dec
rorb
jp
mov
mov
xchg
loop
and
neg
not
mov
inc
in
dec
jecxz
push
das
and
lret
mov
adc
orl
inc
into
jae
mov
add
pop
mov
sbb
sbb
sub
out
out
mov
add
dec
jo
addr16
es
xchg
test
dec
sub
out
int
daa
push
jecxz
rorl
push
xor
ret
mov
repz
mov
test
lahf
lret
push
cmc
nop
inc
int
sub
dec
scas
clc
lods
pop
xor
cs
mov
je
stos
push
and
inc
dec
mov
aaa
push
mov
stc
fidivrl
push
pop
fstpt
mov
rclb
nop
pop
out
iret
leave
in
xor
shrl
or
enter
in
psrlw
mov
mov
sub
repz
pop
cmp
sub
in
aaa
cmpsl
cmp
xchg
xlat
shr
inc
xchg
ja
mov
mov
arpl
dec
and
gs
lods
push
insb
push
aas
mov
mov
out
je
popa
aad
xchg
cmp
call
add
mov
dec
xor
and
cmp
xlat
imulb
push
mov
lret
es
fucomip
add
in
xchg
xchg
xchg
xor
jns
xchg
pop
std
js
imul
fnstenv
cmp
out
insl
pop
fiaddl
inc
mov
enter
es
jb
and
sbb
imul
inc
adc
call
lcall
repz
les
xchg
xlat
mov
incl
adc
pop
xor
movnti
into
mov
loop
in
pop
adc
sbbl
jle
loopne
mov
jl
clc
push
lret
aad
cmp
inc
movsl
ret
push
dec
dec
xchg
hlt
push
pop
and
or
xchg
pop
out
and
je
push
mov
sub
xlat
push
out
fwait
mov
push
pop
jns
loopne
arpl
pop
lret
divb
std
ret
sub
add
mov
cmp
mov
in
jne
push
in
mov
mov
xlat
sbb
test
mov
xor
pop
mov
insb
ja
push
add
xor
notl
xchg
add
daa
xor
push
outsl
xor
mov
xchg
lcall
in
stos
bound
add
ret
dec
sarl
ret
inc
fldpi
int
jno
rcrb
icebp
bound
cmp
mov
sahf
sub
dec
mov
fistpll
sahf
inc
xor
adc
sub
lret
mov
jecxz
jbe
pushf
loopne
mov
scas
lods
push
loop
pop
fadds
cld
icebp
stos
out
in
ljmp
test
push
or
mov
stos
push
jg
adc
ficompl
sub
or
lods
imul
popf
and
lcall
mov
cli
loop
xchg
mov
mul
movsl
cmp
dec
stos
stos
jg
cmp
test
outsl
inc
jb
xchg
push
and
popa
std
pop
cmp
shrb
xchg
dec
jne
xor
xor
and
enter
adcb
cltd
bound
hlt
or
test
inc
iret
mov
orl
fs
mov
adc
push
xchg
and
cmp
inc
cmp
movsl
adc
xor
repnz
das
shll
in
out
adc
repz
xorl
inc
xor
rclb
fcmovu
gs
mov
es
into
xor
jmp
dec
dec
lcall
ss
jmp
add
cmp
call
jne
sbb
xor
loop
pop
fs
loop
or
ds
add
xor
std
cmp
cmp
popf
call
jb
das
mov
popa
negl
jle
rol
mov
les
sub
cmp
shll
jb
sahf
jecxz
dec
xor
sbb
repnz
xchg
push
inc
xchg
jbe
or
dec
xchg
rolb
add
lds
jp
idivl
push
bnd
hlt
movsb
jmp
or
pushf
rcl
mov
mov
int
mov
jo
shr
dec
xor
xchg
mov
fwait
dec
test
outsb
jae
daa
add
dec
pop
or
xchg
cltd
faddp
dec
jmp
incl
loope
push
push
or
xor
push
inc
dec
jnp
or
add
and
pop
outsb
inc
dec
pusha
adc
das
cmp
movsb
bound
mov
xorb
fbld
sub
jecxz
mov
leave
std
jnp
or
jno
lods
ja
ficoml
aad
loop
in
enter
push
sub
push
jns
out
dec
int
vpackssdw
push
or
ljmp
in
add
mov
cmc
inc
adc
or
lahf
cmp
test
in
cmp
mov
dec
cmp
add
sahf
adc
mov
or
lock
inc
in
sbb
add
mov
add
or
jo
bound
push
in
in
fisubs
inc
aam
mov
or
jne
aam
bnd
hlt
dec
mov
jecxz
inc
insl
inc
clc
jbe
rorl
mov
push
dec
mov
cmp
in
jp
adc
push
pop
cmp
dec
cltd
cmp
fisttpll
sbb
lret
jno
push
into
ret
cli
and
lcall
and
jne
push
sbb
popa
push
das
xchg
mov
fstpt
mov
xchg
inc
rorb
mov
mov
mov
fistps
mov
aam
cmp
loope
fs
dec
sub
jp
mov
xchg
loop
dec
dec
leave
hlt
xchg
pop
pop
lea
mov
xor
add
clc
fcompl
jecxz
xor
nop
mov
testl
loop
jmp
adc
cli
out
mov
out
cmpsb
aam
pop
push
int3
mov
inc
les
repz
jmp
jge
imull
push
push
imulb
adc
test
or
mov
push
pop
adcl
js
xor
fwait
ret
mov
xor
or
mov
rorl
insl
mov
sub
add
into
mov
xor
lcall
xchg
push
aad
fsubs
and
sub
lods
cmpsl
shll
push
dec
add
shlb
inc
jl
or
xor
movsl
jmp
push
aam
xchg
cli
inc
loop
outsl
fnsave
shr
inc
stos
js
jae
dec
adcl
lea
xchg
adc
mov
pusha
data16
imulb
scas
push
jle
mov
dec
pop
push
sbb
jmp
repnz
rcll
mov
adc
lea
lock
sub
jmp
mov
enter
mov
repnz
inc
sbb
js
in
lods
nop
loope
dec
fadd
adc
shl
sbb
mov
or
pop
je
hlt
jge
stos
jne
mov
lea
jg
mov
mov
lock
push
enter
loop
pop
adc
fdivrl
push
or
add
mov
mov
push
cmp
pushf
dec
cs
out
cmp
jb
ljmp
cltd
les
jg
scas
inc
add
aam
es
add
or
rolb
jne
and
push
inc
int3
xor
nop
or
cmpsl
dec
test
iret
ja
pop
fidivrl
fldenv
mov
out
jae
mov
xchg
jne
mov
cltd
fisttps
pop
fldt
add
jle
mov
jecxz
jne
enter
pop
jb
mov
and
lock
sti
and
fnstcw
inc
mov
rcr
repz
dec
lcall
inc
mov
loop
push
fsubrl
pop
popf
mov
call
jbe
mov
mov
out
es
jb
and
mov
push
jl
fbld
mull
ret
xor
push
adc
bound
cli
lods
loope
cwtl
cld
xchg
mov
mov
sub
stos
cmp
and
pop
sahf
shl
into
xchg
daa
into
lds
sbb
xor
fistl
dec
adc
arpl
mov
inc
push
mov
int3
movsb
sub
mov
and
cmp
and
in
lret
movsl
xlat
jg
je
cmp
jbe
and
mov
xchg
scas
in
xor
ja
mov
sbb
xchg
inc
aas
push
ret
mov
pop
pop
jo
xor
pusha
imul
add
fnstenv
hlt
aas
xor
cmp
cmpsb
jae
mov
sbb
test
test
lret
xchg
jmp
pop
inc
mov
sbb
adc
and
sub
xor
fcoml
jb
adc
sub
lods
push
cwtl
mov
scas
cld
mov
or
cltd
iret
dec
mov
pop
adc
iret
xchg
cmc
mov
clc
pop
push
inc
das
cmc
push
mov
lock
out
bound
pusha
push
aad
xor
in
inc
into
pop
or
lods
movsl
nop
or
sbb
dec
cmp
test
and
jecxz
xchg
push
dec
mov
fwait
fwait
mov
sbb
adc
mov
rcrl
dec
ds
inc
jnp
inc
rcr
pop
jle
push
add
add
push
mov
popf
dec
mov
mov
pusha
int
fs
pop
pushf
insb
into
or
cld
ja
jnp
xchg
adc
inc
aas
sbb
push
xor
repz
dec
test
mov
jo
iret
xor
sti
mov
sahf
mov
lret
and
in
daa
push
mov
cmc
in
test
and
push
rolb
jle
stos
loop
pop
daa
add
lret
jl
mov
jge
lds
dec
in
arpl
and
cmpsb
inc
movsl
in
add
xchg
std
and
cmp
or
xchg
and
inc
jbe
pop
icebp
xchg
leave
loopne
subb
mov
test
push
dec
pextrw
dec
lret
lods
iret
inc
pop
cmp
or
push
push
in
and
fstl
addr16
pop
fsubrs
cmp
pop
fbstp
mov
insl
and
jge
jae
imulb
test
std
popf
or
leave
enter
daa
test
xchg
cmpsb
imulb
and
inc
or
xor
jnp
and
xor
cwtl
push
pop
mov
adc
insb
ja
insl
out
inc
mov
out
add
inc
push
pop
or
mov
repz
adc
pop
nop
pop
dec
lods
cmp
sub
mov
add
or
into
addr16
adcb
pop
cli
dec
in
jbe
leave
loop
popf
and
fsubp
mov
cmp
and
aaa
jbe
nop
jo
and
rolb
sub
shlb
push
push
mov
mov
movsl
insl
lret
and
std
add
dec
push
fwait
in
mov
sbb
pop
sbb
nop
add
mov
mov
sbb
add
icebp
cltd
jns
mov
inc
pop
or
sahf
stos
out
fs
ret
lods
jbe
pop
popa
jg
jle
mov
add
add
mov
flds
or
dec
mov
mov
cmp
aas
insl
das
sub
sub
aas
jmp
sbb
and
jnp
push
mov
call
test
pop
push
dec
or
stos
bound
enter
jae
clc
xor
cs
pop
fwait
jne
scas
movsl
test
out
sub
add
mov
cmp
adc
xchg
mov
pop
pop
dec
sub
lds
pusha
into
pop
mov
sahf
mov
ljmp
fwait
sub
stc
aaa
daa
adc
add
pop
pop
jp
imul
or
sub
push
outsb
push
or
sub
cmp
leave
cld
gs
lods
sbbl
sbb
cmp
xor
mov
lret
outsl
scas
lcall
pusha
xor
repz
sub
out
data16
jge
jno
adc
inc
sub
push
ds
insb
inc
lret
imul
shrl
pushf
outsb
fcoml
enter
sbb
push
mov
scas
and
cmp
leave
mov
jmp
movsl
mov
icebp
adc
push
pop
jmp
sti
inc
scas
dec
add
sub
and
aad
inc
mov
dec
stos
push
sbb
in
out
insb
aam
es
stos
fstl
mov
adc
cmp
and
in
jmp
daa
inc
ljmp
bound
sub
xchg
mov
jp,pn
dec
rcrl
jns
inc
loopne
aam
int
cli
enter
cltd
int3
push
dec
popa
mov
repnz
xchg
out
sub
xorl
jne
jmp
xlat
inc
test
mov
mov
enter
sbb
cmp
xchg
jge
xor
sbb
sahf
sarl
lcall
fstpt
aam
mov
lods
bound
dec
push
sub
push
ss
inc
cmp
dec
xor
sub
lret
mov
pop
push
shlb
repz
mov
jg
popa
sub
shrb
or
ficoms
dec
roll
xchg
jnp
js
jae
or
adc
add
sub
mov
jle
mov
cmp
lds
inc
pop
mov
cmp
sbb
mov
xchg
sbb
dec
xchg
cwtl
ja
push
cld
repz
xchg
mov
popa
push
test
cli
movsb
fs
pop
push
sbb
into
movsb
stc
nop
xorb
sahf
sbb
lret
jmp
ret
fdivs
test
std
dec
test
xchg
sbb
pop
jle
mov
test
sbb
movsb
sbb
xchg
push
sbb
jp
imul
pop
sti
mov
sbb
add
insl
mov
push
jns
iret
lret
mov
pop
sub
pushf
aam
jae
mov
jae
xor
push
pop
rcl
jecxz
jae
cmp
push
pop
mov
cmp
sbb
push
add
fs
out
lcall
xlat
mov
outsl
inc
incl
push
insb
stos
mov
mov
out
mov
push
pop
mov
data16
add
nop
mov
mov
mov
add
or
cmp
cmpb
fimull
pop
xlat
and
fadd
mov
les
lret
out
mov
lret
cmp
test
push
pop
jg
loop,pt
and
test
cmp
lret
cwtl
roll
lods
push
sbb
je
jne
fwait
data16
adc
adc
dec
jge
cmp
shlb
dec
nop
mov
and
int3
sarb
cwtl
mov
cld
push
popa
gs
pop
lret
clc
and
roll
mov
in
pop
insl
mov
in
lcall
and
iret
adc
mov
scas
aam
fs
les
add
mov
fsubrl
rclb
cmpsl
imul
pop
rcrl
mov
xor
cli
fwait
add
pushl
cs
jne
nop
mov
cmp
push
pop
lods
inc
daa
mov
outsb
cmpsl
or
push
sub
movsb
testl
pop
aas
dec
dec
leave
pop
ret
in
add
xor
divb
xor
cli
das
in
inc
xchg
in
loop
icebp
push
hlt
ret
or
sbb
nop
push
push
or
test
add
sub
pop
call
ss
aas
xchg
push
and
mov
movsl
outsb
rcll
sub
add
mov
and
cmp
inc
mov
imul
xor
mov
xor
jo
xchg
xchg
xor
adc
pop
pop
icebp
aad
call
out
imul
rcrb
adc
cli
adc
mov
outsl
add
addr16
mov
scas
pop
xor
push
sub
rolb
aaa
push
mov
int
sbb
andl
fnop
shll
mov
sub
adc
sbb
or
dec
mov
dec
imull
cmp
or
jnp
xchg
aam
lret
stos
dec
enter
fdivl
xchg
out
fcompl
add
inc
jmp
add
inc
or
xchg
dec
fnstsw
push
adc
outsl
lock
bound
jns
jbe
sub
sub
jno
and
push
aaa
stos
cwtl
frstor
sub
sbb
jo
jno
int
mov
push
mov
outsb
fwait
ds
or
add
cmp
jecxz
sub
repnz
pop
icebp
or
out
sub
xchg
aad
ds
xchg
push
loope
pop
dec
sbb
shlb
call
loope
cmp
adc
and
in
repz
push
add
and
xlat
movsl
fisubl
mov
jmp
scas
mov
sti
leave
rorl
out
fnstsw
movsl
idiv
dec
test
xchg
sbb
lea
scas
mov
sub
and
cmc
push
mov
jecxz
push
dec
test
dec
adc
andl
fsubr
jl
mov
push
arpl
sub
mov
js,pn
in
dec
cmc
sbb
lcall
pop
ret
repz
dec
fcoml
inc
mov
es
xchg
sub
mov
pop
push
xorb
or
mov
std
ror
imul
and
jne
xchg
loop
add
sahf
iret
imul
inc
sbb
lcall
pop
fisubrl
sbb
or
std
xchg
or
sbb
std
pop
pop
test
add
cltd
jle
loopne
ja
iret
aam
xchg
add
sub
gs
ja
jl
test
lret
rcrb
testb
or
stc
bound
inc
movsl
movsb
adc
push
adc
sbb
shr
dec
xchg
iret
push
shl
aaa
lock
add
call
mov
pushf
add
xchg
ja
adc
lret
sarb
ljmp
inc
jle
push
lcall
hlt
es
pushf
data16
mov
ficoms
in
lahf
and
dec
push
fwait
nop
loope
adc
pop
imul
dec
inc
dec
push
jne
adc
fldl
mov
lret
int
in
cltd
test
push
fnstenv
dec
je
sarl
xchg
leave
adc
lcall
add
mov
mov
fdivs
inc
xor
jle
sub
insb
xlat
jge
inc
ret
dec
sub
jb
pop
cli
insl
mov
mov
xchg
mov
push
or
sub
rcrb
sub
sarl
sbb
movsb
cmpsl
cli
ret
push
inc
cmp
dec
sbb
add
andb
xor
push
fiaddl
jecxz
xor
daa
sti
sub
mov
or
push
mov
rorb
sbb
adc
incb
js
insb
push
or
push
lds
adc
xchg
and
idivb
sub
jmp
xor
rep
xlat
mov
and
and
mov
arpl
mov
xchg
inc
sti
mov
sub
xchg
push
mov
pusha
inc
mov
sub
pop
popf
mov
test
mov
sub
xor
and
stc
jle
mov
imul
add
adc
cmpsl
lret
loope
or
inc
mov
pushf
fiaddl
cmp
inc
xchg
jb
dec
jb
fisttpll
repz
xor
cld
inc
stos
lea
cs
and
in
fucomi
ret
scas
mov
xor
push
aas
add
std
push
cmp
xor
nop
in
aaa
subb
xor
mov
mov
jmp
data16
rcrl
xchg
ficomps
dec
dec
adc
sbb
mov
fisubrl
mov
popa
fistpl
roll
jb
cmp
adc
inc
cmp
add
sbb
dec
xor
fstps
pushf
mov
cmc
jae
in
dec
xchg
clc
jnp
cs
cmp
movsb
add
in
hlt
cltd
xor
sbb
sbb
jne
lret
sub
mov
mov
sub
mov
out
std
fdivl
fldl
pop
adc
pop
pop
mov
mov
or
add
xor
jnp
loopne
mov
in
xor
mov
and
cmp
jno
enter
movsl
in
shr
mov
sub
cmpsb
bound
jns
js
loope
repz
mov
push
dec
stos
out
mov
test
mov
or
mov
sbb
fistps
cmp
inc
push
popf
xor
adc
lock
mov
imul
cli
je
or
mov
test
hlt
stos
adc
mov
ljmp
insb
dec
sub
mov
add
stos
jp
iret
lcall
cmp
pop
jge
cmp
insl
filds
jno
or
in
in
cld
fmul
xor
data16
stos
rcr
dec
pop
ret
sub
mov
fiaddl
add
jbe
mov
cld
in
popa
fwait
imul
es
es
push
add
stc
jb
sub
sub
std
aas
and
mov
dec
clc
dec
inc
je
or
cld
jae
push
mov
cs
dec
sti
mov
xor
int
and
mov
imul
lods
sbb
cmc
xchg
decl
aas
pushf
cs
or
add
lea
test
pop
test
call
pushl
scas
jmp
dec
jle
and
xor
aaa
popf
and
push
mov
push
mov
mov
int
jmp
push
xor
cli
inc
dec
push
fs
stc
cmpsl
xlat
mov
orb
cmpsl
cltd
xchg
sub
and
call
mov
add
mov
hlt
aaa
sub
loope
inc
mov
mov
sub
arpl
shlb
rcll
dec
add
cli
test
mov
sahf
mov
sbb
cli
mov
dec
cmpsb
lahf
push
or
push
dec
call
jge
testb
nop
fwait
jp
and
sahf
sub
dec
xor
inc
add
jl
or
addr16
mov
dec
push
dec
nop
push
cmpsb
clc
rol
push
data16
jb
or
jecxz
cmp
lock
dec
lods
fisubrs
nop
mov
add
imul
sar
sbb
movsb
pop
cmp
xor
cmp
xchg
psrlq
imul
ror
mov
cmp
out
lcall
add
xchg
call
adc
xchg
or
andb
cmc
add
jle
xchg
into
or
cmp
jl
mov
stc
and
inc
push
stos
out
fstpt
out
loopne
mov
sbb
cmp
mov
movsl
ret
pushf
and
xor
pop
loop
add
out
jae
push
cmc
divb
jb
out
sar
push
push
inc
add
jge
mov
xor
dec
fdivrl
cmc
test
xlat
outsl
sub
rcrl
mov
bound
cmp
in
mov
shlb
xor
mov
xor
xor
ret
fcomps
stos
cmp
and
sub
jg
jmp
jnp
nop
in
pop
or
adcl
xor
scas
xor
cmp
fisttpl
pusha
out
push
jl
jp
pop
pop
je
fucom
jge
and
loopne
int3
ret
mov
mov
xor
pop
and
add
popa
lea
add
jle
cmp
adc
xor
hlt
cli
sub
add
xor
loope
sahf
daa
dec
cmp
mov
shll
and
cs
pop
sub
loope
mov
ja
cmp
mov
out
xchg
pop
add
shlb
add
lret
mov
mov
mov
adc
jecxz
push
cmp
packssdw
push
sahf
stc
mov
loopne
addr16
mov
or
stos
add
pushf
add
add
mov
pop
push
aam
mov
shlb
enter
pop
sahf
xchg
inc
cmc
jb
adc
jmp
aam
mov
mov
mov
loope
sub
outsl
fbstp
cwtl
es
mov
inc
dec
pop
mov
and
or
in
xchg
inc
xlat
push
and
imul
pop
aaa
xrelease
inc
test
or
mov
inc
cli
addl
out
ret
and
jne
pop
lods
xlat
fadd
jbe
mov
test
in
test
add
test
mov
ret
or
int3
or
push
out
testl
loopne
and
xchg
mov
xor
add
das
mov
retw
jo
int
iret
sbb
pushl
cmp
shrl
add
or
xor
mov
xchg
sub
mov
push
es
push
sbb
inc
sub
sub
pop
mov
daa
jmp
jl
cld
xlat
bound
pop
das
imul
insl
mov
adc
stos
outsb
adc
jne
jmp
fsubs
adc
xchg
test
stos
inc
push
incl
loope
mov
push
test
or
cwtl
mov
stos
push
cmc
aam
xor
cmpsb
sub
test
test
pop
inc
adc
push
test
orl
inc
int3
in
xchg
cmp
or
in
mov
sub
jle
out
fwait
push
aad
in
leave
sub
xchg
mov
out
xchg
test
outsl
fwait
jecxz
rcrl
cwtl
out
mov
mov
cld
popa
inc
push
loop
into
xlat
sti
ret
dec
ss
push
or
insb
je
in
icebp
xchg
ss
push
fidivrl
push
das
ja
mov
cld
mov
sub
sub
jbe
les
dec
inc
mov
scas
dec
in
test
or
lds
add
lret
fsubl
xor
lea
sub
jb
add
loope
jns
icebp
mov
das
inc
fsts
pop
jae
test
pop
jnp
repz
lahf
jns
push
pop
xlat
xchg
pop
mov
movsb
call
xlat
or
adc
sbbl
sahf
push
sbb
lods
int3
rcll
jmp
jl
loopne
lret
js
or
ja
mov
fsubs
lock
push
les
xchg
icebp
je
test
std
cmc
outsb
and
dec
jae
lret
inc
sbb
xchg
or
hlt
stc
pop
pop
xor
cmp
jne
lea
mov
frstor
jnp
ret
jae
add
jae
mov
sbb
sbb
es
cld
inc
addr16
add
pop
inc
iret
sub
in
pop
push
pop
addb
inc
mov
lahf
push
int
enter
dec
pushf
fisttpl
addr16
jne
adc
and
dec
ljmp
jbe
divb
jnp
add
fisubl
in
jo
shrb
push
mov
add
cmp
hlt
mov
imul
mov
fnstenv
xchg
ret
aad
sbb
inc
aam
jl
lock
fs
fcomps
mov
add
rcll
dec
fwait
cmp
stos
insb
ljmp
lret
push
test
fs
pusha
scas
dec
in
mov
andl
push
ret
nop
jbe
lcall
sub
lea
mov
roll
xchg
aas
movsl
dec
daa
cld
stos
cmc
shrl
enter
jns
aad
ficoms
xchg
sbb
ja
dec
xor
mov
lods
sahf
xor
push
adc
roll
cmpsb
sbb
add
jnp
cmp
nop
sbb
xchg
mov
jg
pushf
or
outsl
mov
sti
push
lret
dec
jne
mov
mov
insb
cmp
les
mov
mov
pop
adc
inc
add
inc
outsl
std
dec
nop
mov
adc
jge
inc
in
mov
xor
mov
sub
les
enter
mov
out
test
dec
push
and
hlt
and
adc
jp
stos
popf
dec
stc
pop
or
lret
dec
inc
popa
jae
pop
push
push
in
ljmp
mov
xchg
or
frstor
pop
and
xchg
jle
dec
jl
pushf
mov
dec
lret
scas
shr
loope
outsb
push
scas
pusha
dec
jl
push
mov
sub
or
out
fists
rol
adc
shl
cmp
and
push
lcall
aas
cwtl
mov
icebp
lcall
mov
push
push
jecxz
loop
add
xor
sbbl
cmpsb
xchg
cmp
ffreep
insl
int3
sub
lods
xchg
add
and
ds
sbb
jns
movsl
cltd
cmp
mov
stc
sti
xor
out
lahf
pop
arpl
jae
jge
mov
lret
push
int
or
loopne
loop
dec
xor
out
mov
repz
push
jb
loopne
or
mov
fldl
imul
mov
sub
xchg
jle
aam
xor
in
sub
xchg
pop
fnsave
or
jne
mov
or
cmc
stos
cs
repz
fucom
jae
es
cmp
fmuls
sti
jns
ss
int
mov
loop
push
stos
inc
dec
push
mov
mov
imul
les
sarl
adcb
jae
or
fwait
repz
mov
dec
pop
lret
test
sti
cmp
xor
pop
or
loopew
dec
sbb
or
les
fstps
push
mov
sarb
pop
xlat
cmpsb
out
or
test
fldenv
add
punpcklbw
aam
mov
xchg
jns
hlt
push
sbb
js
jle
dec
outsb
scas
fnstsw
lsl
aas
or
repnz
cmp
push
xor
cmp
inc
or
xor
pop
and
pop
cmpsb
xor
sub
add
pop
fsubrl
movsl
pop
test
lea
gs
pop
test
call
aas
xor
stos
jge
mov
fnsave
data16
cmp
pop
xchg
shrl
cli
icebp
cmp
or
dec
mov
dec
inc
mul
dec
in
in
add
mov
add
sti
add
sbb
ljmp
lcall
test
stos
insb
mov
mov
popf
lock
jo
push
lret
push
mov
outsl
jp
cmp
mov
and
imul
inc
out
mov
punpckhbw
mov
pop
leave
in
adc
out
push
outsb
xchg
jbe
mov
leave
lcall
cmovae
enter
les
inc
sub
fbstp
pop
dec
roll
pop
outsb
jecxz
sbb
sub
cmp
and
cmc
xor
cmp
test
xor
xlat
add
or
test
out
mov
scas
into
fstp
jbe
fcompl
or
test
inc
mov
push
inc
cmpsl
pop
bound
gs
dec
inc
into
sbb
dec
jge
rcr
roll
cmpsb
lret
insl
jbe
out
mov
xchg
push
cs
mov
les
data16
repz
lods
xlat
mov
stos
stc
inc
adc
pop
sbb
ret
lea
push
adc
icebp
fwait
bound
ret
pop
popf
inc
pusha
int
fmull
sbb
arpl
sub
cmp
rolb
jecxz
cmpsb
divb
lock
inc
sbb
clc
jae
insl
rcr
fisttpll
sbbb
adc
rcl
mov
hlt
icebp
xor
add
in
mov
rcll
test
mov
scas
subb
push
dec
ret
outsb
dec
nop
pop
dec
jo,pn
jnp
add
in
cmp
in
aam
xchg
lcall
lock
rcll
jo
inc
mov
mov
pop
jns
mov
insl
sub
je
scas
xor
std
sbb
mov
out
in
scas
mov
stos
mov
out
mov
test
je
test
jnp
dec
outsl
pop
cmp
or
je
sbb
pop
loopne
cmp
and
je
xor
add
dec
or
lret
lret
dec
mov
mov
xor
sbb
inc
dec
mov
mov
lods
add
out
in
push
xor
out
push
adc
pop
xor
cmpsl
push
or
or
fdivs
xor
test
mov
push
cmp
outsl
outsb
imul
daa
loop
in
mov
stos
sub
stc
insb
sub
and
rorb
orb
insl
mov
xor
hlt
sub
push
inc
xor
int3
or
mov
hlt
push
enter
sub
dec
xchg
jne
jp
loope
out
icebp
mov
pop
push
or
out
fsubl
lds
mov
xor
insb
cmpsb
dec
pop
aas
mov
dec
push
cli
xor
cs
pop
push
enter
add
shrl
sub
enter
in
adc
cmp
sbb
add
es
pop
jae
xchg
shrl
sbb
cltd
mov
or
add
pop
xchg
xchg
fbstp
nop
cmc
std
xor
cwtl
mov
inc
push
in
cld
and
inc
mov
sbb
nop
into
js
clc
lock
cmpsb
stos
pop
sbbb
movb
push
aad
or
xor
xchg
in
fwait
movsb
fwait
loop
test
and
cmp
cwtl
add
push
dec
shl
dec
rorb
jp
pusha
fmuls
xlat
xchg
rolb
push
sub
loope
into
lret
shlb
cmpsl
call
and
xorb
jo
xor
or
sbb
sahf
pop
dec
fwait
adc
out
sahf
add
xor
stos
arpl
mov
aam
push
dec
sbb
xchg
and
lret
inc
dec
mov
cmpsl
movsl
mov
ret
lea
push
adc
sub
arpl
add
ljmp
ret
xchg
imul
add
cmp
pusha
in
push
pop
dec
into
lcall
inc
out
neg
scas
cld
jmp
sbb
scas
add
cli
xchg
clc
ror
out
inc
popa
outsb
xlat
xor
xchg
push
xor
jecxz
adc
pop
and
lods
js
into
ja
and
mov
dec
mov
divl
xorl
ss
xlat
xorl
sub
mov
aam
mov
mov
or
divb
sti
jbe
dec
jmp
fcmovbe
outsl
aad
lret
xchg
and
push
enter
in
and
inc
aaa
mov
lcall
fs
pop
cmp
adc
sar
ffreep
daa
or
ficompl
arpl
mov
sbb
jae
sub
int
sbb
xchg
jo
add
fcomp
adc
stos
es
push
and
pusha
out
test
fisttpll
xchg
mov
sub
test
sub
cli
loope
xchg
add
jecxz
mov
popf
into
lods
push
jmp
shlb
in
sub
call
lret
repnz
out
in
push
sub
sub
lahf
ficomps
adc
push
sub
dec
stos
shrl
stc
fcomi
out
fcomp
pop
push
fstp
aas
jecxz
test
sub
adc
pop
xchg
lcall
cmp
xchg
mov
shl
out
xchg
adc
jne
mov
push
lods
iret
xor
pop
andl
sub
fwait
les
fisttpll
aaa
add
mov
adc
daa
stos
cmp
sbb
push
mov
inc
adc
dec
pop
out
loop
das
mov
dec
leave
pop
adc
adc
push
sbb
mov
addr16
mov
cmpsb
nop
aad
ja
mov
xchg
ja
shll
inc
sub
movsb
mov
shrb
push
add
adc
repz
das
popa
push
adc
test
jl
sbb
aad
sbb
out
test
out
add
repz
mov
sbb
ljmp
shlb
mov
jmp
clc
cmpl
daa
xchg
dec
andb
push
push
loop
inc
lahf
imul
jmp
pop
pop
outsb
daa
xor
pop
scas
in
sahf
push
push
shrl
xchg
jmp
jecxz
mov
aam
imul
sbb
test
pop
outsb
pop
cmp
addr16
ja
ljmp
push
cmp
xchg
outsl
mov
out
lds
cmp
int
xchg
adc
pop
nop
pop
insl
lock
int
xor
jp
ficompl
jno
lods
nop
ficompl
cs
scas
xor
push
fldenv
incl
in
fwait
clc
cmc
sbb
jge
pop
jp
leave
out
xor
pop
in
or
shlb
fstl
jecxz
nop
inc
push
cwtl
mov
hlt
jns
mov
xchg
into
mov
ds
int3
pop
icebp
rcl
mov
sbb
adc
pop
fistpll
test
or
leave
arpl
cwtl
dec
test
or
fdivr
mov
add
jmp
sub
push
pop
sbb
aam
pop
dec
bound
daa
add
test
xor
test
movsbl
add
sbb
cld
dec
arpl
mov
mov
shrb
mov
and
xor
in
movsb
arpl
imul
sahf
fs
mov
jb
movsl
pop
add
aas
mov
popa
sub
mov
or
add
ljmp
mov
xchg
jmp
and
movsb
or
add
ja
icebp
stos
xchg
in
nop
out
inc
push
xchg
mov
bound
cmp
adcb
mov
jmp
arpl
mov
and
out
jp
cltd
cmp
mov
push
cwtl
mov
scas
imul
mov
pop
aaa
and
fwait
inc
cmpsb
dec
incb
push
or
leave
push
jne
mov
dec
inc
jbe
outsb
adc
sbb
mov
pop
test
enter
inc
aad
adc
loop
sti
inc
je
add
add
imul
mov
inc
in
pop
scas
push
mov
adc
stos
testb
push
out
loope
and
cli
sbb
or
cmove
out
fistl
push
cmpb
loopne
sbb
ss
out
jl
sbb
testb
in
loope
cs
ficompl
or
lods
mov
jne
popa
aad
and
cs
adc
jnp
in
dec
jns
fbld
pop
xchg
pop
popf
ds
jne
and
subb
adc
fxam
adcl
shll
divb
jg
icebp
push
mov
shll
push
xchg
stc
pop
mov
or
mov
shll
pop
pop
mov
shrb
iret
xor
cmpsb
jg
fdiv
scas
das
mov
xor
std
not
push
mov
add
mov
add
popf
call
mov
out
gs
out
mov
in
mov
xchg
nop
push
push
rcr
bswap
ficompl
dec
out
stc
stos
mov
jbe
enter
enter
mov
jg
jne
idivl
jns
lods
lock
add
sti
inc
xor
pop
mov
pop
pop
sub
xor
sub
mov
or
js
xor
test
sti
jmp
sbb
dec
mov
test
pop
add
imul
jne
mov
xor
and
xlat
lods
mov
mov
cmpsl
vmaxpd
rcrl
jns
leave
sbb
dec
lahf
lcall
outsl
jecxz
xchg
jns
cmpsb
rdtsc
fdivrs
dec
push
pusha
ror
jbe
fisubs
xchg
out
pop
test
mov
pop
scas
pusha
pop
or
mov
stc
jecxz
mov
xchg
add
rclb
daa
xorl
push
out
mov
fadd
aam
sbb
addr16
sar
repz
mov
sti
icebp
repnz
mov
xchg
testl
lret
mov
aam
jl
idiv
sub
outsl
insb
lahf
dec
inc
jb
mov
test
inc
dec
sbb
pop
leave
jbe
ljmp
jns
jg
daa
sub
loopne
mov
sbb
push
andl
sub
mov
popf
and
xor
fstpl
lods
lds
mov
pusha
shlb
push
pushf
data16
bound
sbb
and
jns
jns
push
and
lds
fwait
insl
scas
outsl
add
jae
cli
imul
pop
push
mov
pushf
ja
cwtd
push
pop
pop
out
fstpt
test
fistps
sarb
test
sub
fsubrl
aad
repz
push
in
push
adc
test
push
xorb
inc
scas
in
xlat
sub
mov
pop
movsl
cs
shl
or
mov
push
dec
pop
cwtl
add
mov
xchg
aam
sub
push
test
insl
add
cmp
es
sti
push
mov
mov
and
ficomps
pop
xchg
xchg
lock
lret
cwtl
popf
in
stos
cmp
inc
call
hlt
mov
xor
popf
jmp
dec
mov
mov
push
jge
aad
add
push
and
lods
stos
rclb
push
ja
mov
in
lea
sar
push
sub
cmp
test
ret
in
das
je
andb
jbe
cmp
sub
or
hlt
arpl
incl
cmp
in
out
pop
inc
stos
divl
and
inc
push
out
arpl
xor
mov
sbb
fidivrs
addr16
lea
sahf
ficoml
mov
and
subb
sub
xchg
ljmp
lock
add
dec
inc
add
insb
clc
push
ficoms
pop
push
aad
pop
jo
rcrb
lcall
or
push
pop
insb
imul
sbb
jecxz
xor
icebp
cmp
imul
jns
ljmp
lds
repnz
test
in
cld
sub
jbe
repz
lods
addl
in
daa
pop
lcall
adc
mov
cmp
mov
aas
sti
jge
sub
jl
ret
dec
xchg
movsl
std
rorb
movsb
repnz
sti
adc
rol
xor
das
or
test
in
add
das
and
mov
xchg
push
adc
sbb
cs
push
pop
andb
js
pushf
rcrl
fstl
lods
movsl
jmp
xchg
xor
push
mov
leave
push
mov
call
lcall
movsl
jl
adc
and
adc
setle
xchg
imul
and
imul
cwtl
fdivrl
test
sub
inc
add
cmp
jne
add
cmp
stc
pop
rcr
in
dec
sahf
roll
mov
push
jo
xchg
adc
fcompl
imul
pop
and
ja
jns
pop
fisttps
repnz
push
xchg
cli
pop
sub
sar
test
shld
push
shrl
loopne
arpl
adc
push
or
test
adc
jg
rclb
sti
in
mov
outsl
add
pusha
cmp
nop
sahf
stc
mov
sbb
ss
int3
add
cld
jo
push
cld
std
insb
sti
sarl
lds
filds
xchg
stos
lods
pushf
cmc
or
pop
decl
enter
arpl
push
outsb
pushf
jno
loopne
aad
jmp
mov
fstpt
ret
gs
inc
xor
std
jnp
outsb
idiv
add
repnz
and
inc
imul
cld
sahf
mull
pop
inc
cmc
push
in
xchg
inc
mov
xor
jge
ss
sub
sub
das
sub
js
push
lds
mov
mov
adc
cmp
into
sub
imul
subl
test
push
fcmovne
mov
pop
or
popa
daa
mov
rol
inc
cmp
mov
faddl
rcr
js
jle
outsl
loopne
sub
jmp
sub
add
sbb
enter
push
out
or
fmull
hlt
incl
imul
mov
and
out
mov
test
in
jo
int3
lcall
fsub
lods
lock
shll
pop
outsl
adc
mov
roll
std
in
int
std
mov
or
and
negb
je
pop
fcompp
ret
cmp
xor
call
lea
cmc
inc
mov
adc
pop
imul
push
mov
cmpxchg
xchg
arpl
add
mov
and
add
dec
cmp
add
sub
ret
hlt
in
test
imul
push
pop
arpl
mov
xlat
pusha
pop
mov
cmp
shll
and
and
xchg
mov
xchg
jns
mov
in
mov
in
and
or
cmpsl
mov
mov
ret
nop
sti
add
dec
push
sbb
adc
or
add
fcmovnu
shll
push
push
add
cmpsl
mov
jbe
jmp
jno
add
adc
jle
mov
int3
mov
add
das
adc
push
ja
jle
arpl
ds
jb
pop
daa
fisttps
or
push
mov
das
sbb
pop
push
push
loop
aad
push
test
int
into
ficoml
or
pop
cs
pusha
or
fimuls
call
pop
or
cmp
pop
push
mov
fistps
cli
push
push
pop
push
ja
mov
flds
sbb
mov
cmp
shlb
lahf
pop
lods
outsb
dec
cmpsb
mov
lds
jg
xchg
rcll
cld
bound
imul
loope
inc
popa
insl
aaa
adc
fmul
data16
cmp
mov
inc
test
or
fs
sub
stc
ret
sahf
out
adc
icebp
xchg
aad
scas
nop
jae
pop
xchg
data16
popa
notl
andl
outsl
push
loopne
inc
fisttpl
push
fwait
mov
dec
lods
cmp
ret
clc
or
mov
push
or
mov
cmc
mov
jnp
addl
pop
lea
pop
add
mov
ficompl
cltd
pop
aas
mov
dec
popf
sbb
je
rcrb
fildll
push
xor
dec
push
mov
imul
lds
dec
clc
push
fwait
js
cmp
jnp
jno
xchg
sbb
or
les
les
mov
sub
jae
xor
sub
enter
pop
jg
rcrb
or
sub
insl
xlat
xchg
jne
in
lahf
into
es
xchg
mov
and
jp
xchg
push
pop
pop
pop
jp
shl
adc
sub
dec
xor
jle
xor
add
dec
imul
loop
jbe
mov
pop
ljmp
pop
push
iret
dec
mov
cli
sub
and
lret
push
xchg
or
mov
jo
test
pusha
mov
fcmovu
std
adc
aas
sub
lahf
scas
jo
in
mov
adc
sbb
sahf
popf
or
rclb
jecxz
fwait
mov
js
std
cmpsb
jmp
pop
int3
mov
loope
in
mov
orl
dec
cmp
jno
mov
test
rclb
mov
scas
testb
mov
or
stos
mov
insb
jmp
inc
ss
add
rorb
jns
mov
out
mov
mov
and
adc
ret
cld
inc
sti
and
mov
dec
push
inc
or
pop
imul
lcall
pushf
push
dec
sti
arpl
inc
sarl
bound
jmp
je
push
dec
or
call
xchg
stos
mov
xor
mov
jbe
imul
lcall
xor
adcb
push
xchg
cltd
sub
mov
mov
aas
insl
loope
push
jge
int
leave
xchg
or
add
and
ja
ss
xchg
gs
inc
mov
adc
pop
lahf
inc
mov
out
mov
and
mov
ljmp
or
jbe
roll
into
addl
loope
int
xchg
icebp
jae
repnz
cmp
inc
gs
inc
stc
lahf
popf
out
inc
push
cli
ja
movsb
out
lods
nop
mov
cmpsb
outsb
nop
cs
push
push
out
frstor
ret
shlb
loop
xlat
mov
hlt
sbbl
int3
pop
adc
jecxz
gs
bound
push
or
sub
hlt
jo
add
xchg
call
mov
int3
aad
loopne
sahf
cmp
cmp
or
lods
pusha
sbb
jbe
jge
sub
into
lret
cs
xchg
push
mov
jmp
jb
popa
adc
test
and
xor
pusha
fcompl
pusha
pop
pop
sub
int
sub
inc
nop
xchg
aas
rclb
dec
clc
sbb
mov
shl
mov
movsb
and
imul
xchg
fdivrl
mov
sbbl
and
inc
lock
jecxz
cwtl
xor
ja
cmp
dec
dec
pop
sarb
lcall
dec
inc
lret
lcall
inc
loopne
or
inc
jle
jp
dec
ljmp
dec
loope
xor
dec
loopne
inc
movsl
loop
mov
imul
mov
mov
scas
adc
insl
icebp
jb
jb
sbb
loop
dec
clc
jb
ljmp
xorl
loop
xor
adc
cmp
in
dec
or
cmp
adc
cmp
fsubrs
loopne
mov
fcompl
insl
out
or
lock
mov
sahf
jns
xor
fnstcw
mov
mov
add
cmp
xchg
insb
adcb
cmp
or
push
stos
jns
jecxz
mov
pop
popf
cltd
out
std
sbb
lods
outsb
test
aas
jae
xchg
or
sub
fstl
dec
pop
xchg
push
loop
cmp
xchg
add
loopne
jl
push
adc
cmpsb
mov
stc
lods
les
add
cmp
movsb
pop
pop
pop
xchg
test
push
sbb
not
in
or
jge
loope
fdivrp
sbb
cmp
push
and
jle
out
dec
inc
and
cmp
cwtl
inc
test
xchg
mov
cmp
subl
sub
or
out
sbb
add
and
jmp
in
sbb
jmp
aaa
pop
xor
sbb
aam
repz
mov
jo
test
dec
xlat
cmpsl
add
add
cmpb
incb
sti
mov
mov
inc
stc
movsb
jmp
lock
xor
add
inc
lds
cmc
ret
dec
sub
rol
push
push
dec
in
sub
cmp
cwtl
sub
cmpsl
out
pop
je
push
xor
addr16
roll
sbb
insl
int
mov
sti
push
jl
push
inc
std
push
es
mov
jle
popf
inc
sbb
adc
pop
xchg
int
cmp
mov
and
add
pop
push
sub
and
sahf
xchg
adc
fwait
pop
sub
call
out
add
jge
adc
pop
push
fisttps
addl
rorl
and
jmp
jle
pushw
sbb
clc
adc
test
fisttpll
inc
call
setge
aas
fisubs
cmp
dec
push
loop
fs
push
in
or
jg
inc
mov
sti
xlat
stos
addl
aas
xchg
int3
sar
repnz
dec
jg
test
mov
outsl
lds
push
int
inc
insb
jo
cmp
push
mov
xor
inc
mov
aaa
push
adc
xchg
hlt
cmp
jae
or
lret
jecxz
mov
pop
jb
cli
jns
add
notb
test
pushl
jb
dec
out
int3
fldl
cld
loop
stos
sbbb
push
mov
mov
sub
and
push
sbb
mov
mov
pop
out
mov
mov
and
push
sbb
push
sub
push
ss
xor
sbb
mov
mov
sbb
movb
out
dec
push
lods
pop
and
push
dec
addr16
pop
push
mov
or
mov
cwtl
sub
int3
xchg
lret
test
mov
inc
jne
mov
mov
push
xor
test
adc
and
cmp
inc
and
sbb
cld
inc
inc
xor
sbb
pushf
in
shrl
mov
add
add
cmp
test
xor
or
jo
movsl
arpl
inc
push
push
xor
pop
inc
sub
gs
call
xor
inc
lock
mov
xchg
mov
cmc
adc
cmp
outsb
mov
sarl
dec
jmp
cmpsb
iret
mulb
repnz
aas
inc
les
dec
jns
jno
inc
pop
xor
dec
or
daa
cmp
ss
jne
ret
dec
andl
push
movsl
stos
lods
mov
test
les
sub
and
mov
in
enter
out
jge
test
pusha
dec
cmp
mov
add
test
mov
pop
push
sub
sub
and
adc
mov
mov
loopne
or
pop
inc
inc
push
xlat
xor
or
xchg
pushf
push
inc
stc
xorb
mov
jbe
in
mov
push
outsl
cmp
push
std
insb
cmp
cmp
in
repz
leave
imul
fcoms
mov
pushf
mov
repnz
lock
mov
testl
xchg
cwtl
imul
stos
decb
cld
xchg
ljmp
jecxz
or
lea
movsb
dec
inc
repz
in
loope
sub
adc
or
out
jle
outsb
xchg
daa
or
iret
jae
sbb
cmpsb
pop
xchg
or
lds
fcomps
mov
mov
rcll
inc
jo
pop
xlat
mov
push
jbe
ss
inc
ror
push
adc
fldt
shl
ljmp
daa
lcall
push
push
jmp
popf
loope
test
adc
popf
xchg
mov
outsl
jbe
add
dec
pop
push
shlb
add
push
gs
popa
pop
jns
loope
lret
rorb
loope
adc
or
xchg
xlat
inc
and
mov
mov
adc
or
jb
pop
fimull
ret
mov
cmp
push
into
ret
push
repz
jno
fidivrs
push
push
sarb
sbb
iret
add
sub
mov
dec
inc
xor
xchg
jns
pop
not
add
jle
hlt
and
push
sub
add
loop
jo
cmp
sub
mov
ret
lea
sbb
adc
stos
out
shlb
je
inc
mov
rcrl
jns
add
cltd
rcrb
js
push
mov
movsl
gs
cmp
cmp
js
stos
addr16
or
xlat
test
sbb
pop
movb
cmp
pop
lret
pusha
nop
jne
push
inc
and
ljmp
mov
jmp
cmp
ret
xchg
pusha
sbb
pop
arpl
pop
sti
mov
subb
mov
cmpl
xchg
mov
jns
cmp
lret
mov
xchg
sbb
ss
xor
lret
mov
aaa
jle
jbe
adc
cmp
nop
cmp
cmpsb
decb
bound
sbb
test
fwait
das
test
cmp
jle
les
add
adc
imul
iret
mov
testl
jg
sbb
jae
jp
adc
subl
sub
cltd
cmc
test
inc
sbb
cmpsb
push
xor
and
out
fcmovne
pop
cs
jecxz
jbe
pop
cmp
aas
popf
or
test
sar
mov
imul
test
fcoml
xor
mov
jns
mov
addr16
popf
xorl
jbe
movsl
jno
bound
sbb
stos
add
movsb
sub
sbb
test
iret
pusha
dec
add
iret
ficoms
jmp
add
jmp
fimull
sub
and
and
mov
add
xchg
out
sbb
sub
sub
sbb
ficomps
lcall
in
inc
mov
rcl
mov
jae
sub
repnz
push
xor
xchg
subb
stos
and
xchg
fdivrl
lods
pusha
sub
pop
cli
std
sub
nop
andb
lret
pop
mov
popa
xchg
fcmovbe
mov
out
out
mov
push
outsl
add
adc
leave
andl
jge
and
pop
xchg
ss
sub
clc
push
daa
mov
int
movsl
push
mov
push
testl
lock
mov
inc
sub
pop
test
mov
cld
int3
cmp
cli
outsb
sub
mov
and
mov
ja
test
or
scas
je
inc
roll
jmp
cs
fsubs
arpl
inc
pop
sub
data16
aam
inc
mov
push
test
mov
mov
push
mov
cltd
add
gs
fdivs
xchg
test
pop
lret
add
cmp
daa
inc
pop
mov
fdivrp
mov
push
mov
dec
inc
in
pushf
and
fwait
mov
push
mov
popa
adc
fisubs
jmp
mov
sbb
into
adc
xchg
lcall
out
cmpsl
inc
roll
push
fnstsw
bound
xchg
test
cmpsb
xchg
xchg
repnz
lds
jb
dec
ja
stos
in
push
add
les
xchg
popa
sub
nop
pop
pusha
fildl
movsb
ss
mov
mov
lea
popa
xchg
cmp
mov
fwait
movsb
mov
cmp
mov
and
adc
into
mov
sbb
jnp
and
ljmp
jmp
pop
mov
and
mov
push
mov
ror
lcall
mov
add
lahf
scas
and
sbb
frstor
or
jmp
push
push
out
pop
mov
std
sbb
rcll
lcall
push
in
inc
ss
jb
push
pushf
out
mov
stos
shr
jg
or
dec
push
hlt
lcall
or
mov
dec
inc
jle
lods
dec
push
lret
add
repz
out
sbb
xlat
jle
std
imul
je
stos
int
ss
inc
and
fsts
jle
pop
push
add
lock
orb
movsl
fcoml
jb
push
data16
inc
popf
inc
and
ret
je
push
jo
aad
es
nop
jnp
shrl
mov
inc
cmpsb
dec
cmp
jecxz
jg
in
push
adcb
xor
xchg
mov
dec
sbb
aam
shrl
pop
fstpt
cmc
xor
fimull
out
test
mov
inc
je
jo
adc
in
adc
sub
push
xchg
loopne
xchg
das
inc
out
shll
aam
test
lock
jno
loopne
mov
push
jns
adc
in
mov
call
int
sti
push
jge
adc
inc
out
mov
sbb
pop
int
mov
push
hlt
cli
fistps
ss
xor
adc
and
gs
jb
lea
arpl
idiv
fsts
inc
xchg
mov
xor
stos
dec
pop
xchg
jnp
or
jnp
in
push
pop
mov
pop
into
je
xor
gs
adc
and
push
xor
stc
out
xor
je
int3
cltd
add
jge
ret
inc
stos
or
xor
mov
icebp
and
sbb
aas
cwtl
push
xchg
fwait
test
adc
cmp
dec
out
cmpsb
jo
outsl
cli
and
int3
mov
mov
out
pusha
adc
repnz
mov
popa
cltd
push
hlt
adc
movsl
inc
cmp
cmp
jl
dec
mov
pop
mov
pop
cmpsb
subl
shlb
lcall
subl
add
xor
lds
aam
add
dec
mov
push
sbb
aam
jo
in
mov
push
inc
and
nop
mov
and
cs
sub
iret
insb
jge
lret
sbb
sub
and
enter
xor
pop
push
cltd
movsl
cmp
repz
pushf
xchg
jecxz
add
lods
dec
dec
mov
ficoms
and
xor
cmpsl
cmp
push
xor
sbb
flds
mov
repz
sub
mov
add
test
fildl
hlt
cwtl
dec
jg
mov
xchg
push
cmc
sbb
push
in
int
adc
mov
sub
icebp
cmp
test
sub
inc
mov
mov
push
mov
jno
jle
scas
mov
outsb
enter
inc
in
jle
push
jmp
sub
pop
gs
inc
fimuls
add
fcomp
je
xlat
icebp
in
movsb
adc
test
push
lds
sbb
les
scas
in
inc
add
int
mov
mov
daa
outsb
pop
push
mov
shrb
pop
add
sbb
sbb
aas
xchg
jge
mov
test
es
add
xor
lret
je
xor
pmulhuw
mov
mov
fidivs
fldcw
movsl
outsl
into
mov
mov
mov
fsubr
insl
mov
xor
test
sub
xchg
mov
adc
mov
dec
inc
mov
mov
jo
cmpsb
aam
repz
test
push
sub
mov
cmp
lret
cmc
sbb
mov
movsb
ret
xchg
lret
cmp
xor
sbb
cmp
cli
mov
mov
cmp
mov
adc
adc
cmp
mov
cmc
jp
jne
jno
idivb
mov
xchg
push
add
jns
mov
jmp
adc
popfw
outsb
push
cmp
mov
loopne
xchg
push
adc
leave
popf
addr16
into
sbbb
lods
mov
cmp
and
xchg
fs
dec
testb
or
cltd
cmpsl
movsl
hlt
push
sub
sbb
adc
inc
pop
imul
lea
mov
dec
mov
fucomi
popa
adc
test
shrl
negl
xor
and
clc
mov
and
stc
sbb
jmp
test
mov
mov
cs
inc
and
int
add
and
rclb
call
sbb
mov
dec
ret
jns
pop
cli
mov
mov
les
dec
push
in
fsubrl
fildll
push
out
and
mov
popf
add
rcrb
jmp
call
pop
cmpsb
push
inc
xor
xchg
adc
test
adcb
loope
cld
fwait
xchg
pop
test
sbb
adc
in
adc
sahf
inc
scas
mov
out
xchg
in
bound
inc
xor
int
sbb
jmp
stos
mov
dec
inc
aas
xchg
lods
or
vucomisd
mov
xchg
in
and
pop
sbb
dec
mov
jb
fisubrs
xchg
sub
out
push
adc
aad
ljmp
xchg
lock
loop
adc
dec
lahf
adc
insl
inc
xor
lret
movsl
jle
cli
cmpsl
cld
add
notb
lds
mov
popf
idivl
bound
and
pop
lock
incb
mov
rol
aas
inc
or
add
jg
cmp
mov
jbe
push
ret
stc
adc
call
mov
jg
fbstp
mov
pusha
popf
xchg
add
jbe
inc
xchg
cmp
rolb
stos
xor
aad
fdivrl
and
popa
xchg
jmp
insb
mov
dec
pop
cmp
ss
in
hlt
jecxz
movsl
pop
mov
aas
movsb
mov
or
es
add
cltd
stos
add
scas
loopne
sub
push
xlat
lret
ds
mov
rcrl
adc
scas
rorb
stos
adc
adcl
test
sti
aaa
and
mov
fiaddl
enter
jae
mov
mov
inc
or
xchg
pop
sbb
ret
cmp
xlat
mov
clc
test
or
test
or
test
leave
mov
daa
xchg
sub
and
jnp
mov
pop
ret
out
repnz
fldt
push
in
jecxz
sahf
test
pop
ret
andb
or
daa
sub
enter
mov
jb
jmp
xchg
arpl
test
mov
cmp
push
mov
fisttpl
clc
sbb
adcl
cmp
out
cwtl
repz
pop
daa
inc
stc
hlt
rcll
sarb
aas
mov
mov
push
lahf
jge
sbb
in
aad
sub
cld
dec
pop
shll
movsl
call
mov
in
imul
pop
inc
mov
mov
jecxz
sahf
jbe
xchg
imul
ss
scas
push
outsl
or
push
lea
nop
fsubrp
jmp
les
mov
lret
or
rcl
insl
xor
mov
stc
lahf
or
xchg
push
dec
push
pop
inc
sbb
and
jo
cmp
out
test
and
cmp
mov
jno
jae
sub
dec
push
mov
sub
inc
addl
out
subl
insb
cltd
dec
out
xchg
fdivs
add
in
mov
jmp
cmp
fildl
scas
das
push
sarb
setg
and
call
or
cmp
mov
or
mov
aam
cmp
push
out
insl
xor
rcrb
fucomp
mov
cmp
enter
stos
shlb
xchg
fsubp
mov
rcll
sub
add
sub
cld
stos
shlb
push
mov
pop
inc
into
scas
add
pop
push
stc
int
insl
xor
in
mov
stos
jo
ret
adc
cld
push
mov
bound
cmp
or
fimull
sub
lds
cmp
jbe
imulb
cmp
inc
and
mov
out
jecxz
das
outsb
pop
ret
sti
fcompl
push
cld
jge
frstor
sbb
cmp
insb
cmp
pop
sub
add
notb
pop
jno
pop
ret
push
pop
or
aam
fstpl
jecxz
pop
cwtl
jge
or
push
iret
hlt
call
sbb
push
xor
adc
dec
add
mov
cmp
dec
mov
movsl
mov
jae
in
ljmp
outsb
jnp
jge
nop
xor
mov
cld
sub
inc
out
add
mov
fidivl
sbb
je
outsl
negb
cs
mov
dec
scas
loop
pusha
adc
orb
push
and
call
push
pop
ljmp
pushf
loopne
xor
aaa
incl
inc
fwait
mov
mov
mov
mov
lahf
or
xorb
sub
sar
dec
add
xchg
inc
mov
outsb
jecxz
out
mov
jno
jecxz
pushf
and
adc
xchg
pop
and
cmp
xchg
or
push
sub
mov
mov
call
fs
enter
jge
push
add
sbb
push
stc
ret
push
roll
cmp
mov
adc
mov
fnstsw
mov
and
adc
aad
push
dec
test
insl
out
lods
clc
xchg
mov
clc
cmpsl
pop
xor
xchg
mov
inc
rcr
pop
es
cmp
xor
xor
push
cmp
call
sub
out
mov
xchg
lcall
lahf
je
push
clc
fwait
cltd
shl
popf
dec
push
mov
daa
mov
enter
popf
push
emms
ds
push
repnz
pop
shll
sbb
cmp
lcall
fiaddl
xor
into
outsb
enter
icebp
dec
jno
ljmp
mov
mov
testl
pusha
push
xor
lret
stos
and
mov
ljmp
daa
and
or
sub
data16
sbb
adc
dec
inc
xor
ss
lock
ret
inc
iret
and
mov
divb
je
xor
movsb
pop
mov
xchg
lret
mov
xchg
add
jmp
mov
sbb
push
popa
pop
jne
outsb
sar
inc
push
int3
lcall
shl
arpl
mov
pop
decb
mov
or
inc
mov
int3
test
ret
call
pop
test
fnstenv
mov
lcall
out
aas
push
ds
outsl
arpl
xchg
inc
jb
or
es
scas
xchg
xchg
mov
mov
sahf
push
gs
imulb
bound
jno
aaa
shrb
pop
int
aaa
mov
or
pop
je
cwtl
incb
daa
mull
mov
ficomps
outsl
adc
ja
fcom
inc
mov
hlt
ret
sub
insl
pop
addr16
push
sar
push
push
xorl
fistl
cmc
dec
sbb
std
jns
xchg
lds
imul
mov
cmc
fimuls
out
mov
or
mov
xchg
sbb
into
dec
rorl
sub
pop
cmpsb
sub
add
mov
push
push
hlt
adc
inc
stc
test
xor
xchg
mov
dec
lock
or
scas
inc
cmpsb
adc
mov
cmp
add
out
jge
inc
lret
pop
pushf
rcrl
daa
movsb
xchg
push
fsts
cli
cmpsb
aaa
roll
sbb
loope
mov
test
lds
lea
dec
add
mov
roll
mov
scas
inc
imul
mov
jg
pop
roll
jns
outsb
nop
push
pop
add
mov
adc
pop
stos
sbb
movsl
aam
test
aas
xchg
push
and
push
mov
add
out
lret
fdivs
pop
lahf
clc
add
adc
bound
jge
stc
sbb
sub
andl
or
mov
dec
mov
hlt
es
adc
mov
cmp
and
aad
sub
push
ret
jo
negl
lods
movsb
or
add
push
push
jp
push
and
jmp
test
xchg
xor
or
mov
dec
xchg
cwtl
daa
orps
lahf
sbb
add
mov
sub
loope
pop
imul
or
int
dec
ljmp
mov
push
out
hlt
loop
mov
ret
out
ror
in
idivl
dec
fwait
inc
mov
mov
arpl
insb
sub
xchg
addr16
inc
push
daa
adc
insb
cmp
jmp
ss
popf
add
lret
nop
pop
imul
outsb
mov
test
lea
add
fiadds
jo
mov
push
addl
lcall
mov
cmpsl
push
test
cmpsb
mov
sbb
inc
stos
mov
arpl
pop
test
repz
lods
fsubrs
or
imull
shlb
or
xchg
imul
mov
insb
cmp
jg
mov
mov
sahf
dec
xchg
xchg
ds
ss
ja
xchg
imul
mov
mov
fs
pop
divb
cmp
mov
xor
gs
pop
xchg
xor
adc
enter
jp
fmuls
fimuls
in
xor
shl
push
lods
das
popa
leave
in
aad
lret
scas
std
sub
dec
jno
dec
dec
mov
pmulhuw
lods
ret
adc
pop
into
int3
push
jns
js
stos
into
fistl
and
pop
loope
adc
push
fstl
loope
dec
sbb
bound
add
lcall
dec
add
sbb
icebp
add
sub
push
gs
xor
cmc
ret
les
or
in
test
sbb
std
ds
or
hlt
mov
xchg
push
dec
inc
ret
cmp
insl
cmp
or
fcmove
dec
adc
loope
pop
sbb
outsl
shll
shlb
imul
inc
fwait
jbe
or
inc
and
rcll
stc
ret
push
mov
fstl
dec
loope
outsb
pop
sahf
add
cs
shrl
in
mov
int3
mov
xchg
out
mov
add
sbb
xchg
je
rcll
test
jb
jne
stos
cmp
es
push
shrb
bound
add
notl
and
lock
add
sbb
inc
scas
xor
shl
cmp
sub
mov
aam
std
int
stos
sbb
inc
dec
pop
test
push
xchg
insl
sarl
repz
mov
inc
mov
add
outsb
lods
movsb
sbb
outsl
xchg
jb
cltd
xor
ds
cwtl
xor
dec
adc
popf
sub
mov
pop
stos
mov
in
ffree
mov
mov
leave
inc
push
pop
rorb
fnstsw
xchg
pushf
adc
test
sbb
push
out
fnstenv
loope
jo
push
or
lds
filds
je
lret
adc
sub
in
sbb
mov
adc
pop
mov
push
lods
in
xchg
jecxz
les
aad
movsl
sub
data16
mov
mov
push
jnp
jmp
call
dec
xor
pop
xchg
dec
pop
cltd
cmc
push
leave
sub
pop
xchg
dec
jne
mov
push
sub
and
xor
mov
fmull
push
lock
lcall
jne
inc
xorl
lods
mov
inc
test
pop
adc
inc
jge
aaa
test
stc
mov
lret
pop
jmp
jo
popl
insb
jno
insl
cmp
push
jle
mov
in
jae
sbb
fistpl
or
call
mov
sub
loopne
inc
xor
loopne
subl
xor
jp
jl
cltd
insl
add
enter
loop
orb
add
xchg
mov
cmp
xchg
dec
and
xorl
inc
fwait
test
leave
push
jl
scas
push
jo
lods
cli
xchg
sub
shlb
out
inc
dec
outsb
pop
dec
stc
mov
xchg
mov
adc
and
mov
fsubs
sbb
mov
insl
and
loopne
pop
mov
mov
cs
jne
or
es
cwtl
aaa
push
out
push
push
fwait
ret
push
mov
scas
mov
daa
and
mov
movsl
ret
out
dec
lods
mov
xchg
arpl
clc
ljmp
and
test
mov
adc
sub
movsb
jae
jnp
cmp
scas
adc
test
xchg
jno
push
fimull
popf
inc
es
arpl
inc
mov
insb
inc
idivb
inc
cmp
dec
jmp
popl
dec
mov
cltd
scas
mov
inc
cmp
pop
jns
xorb
fmulp
cmp
dec
cmpsb
pop
in
fisubrl
sbb
test
test
rcrb
xchg
ljmp
push
fsubl
jnp,pn
nop
in
mov
sub
pushf
push
call
or
push
mov
leave
xlat
scas
insb
enter
add
pop
nop
mov
in
mov
out
and
xor
adc
andl
push
pop
pop
inc
imul
xorb
scas
jnp
leave
mov
insl
lea
mov
pop
aad
outsb
bound
cwtl
mov
cmp
outsb
in
dec
mov
in
iret
cmp
adc
stos
fs
mov
js
mov
std
sbb
mov
xchg
leave
lods
xorps
xor
mov
adc
test
adc
mov
mov
sarb
push
sbb
sub
jnp
cmpsb
mov
xor
push
xchg
mov
ss
imul
fidivl
test
inc
ret
mov
pushf
xor
pop
pop
push
ds
fldl2e
mov
push
shrb
dec
stos
je
bound
sbb
xchg
sub
ret
ficoms
lock
imul
call
push
add
rcl
test
sysret
xchg
test
mov
xchg
int3
out
movsb
sub
mov
addr16
add
sub
pushf
out
lcall
dec
test
flds
sub
test
mov
mov
lcall
jg
pushf
pop
aam
test
xchg
inc
inc
xchg
sarl
pop
ljmp
shr
mov
adc
push
jno
mov
and
xor
movsl
fs
lods
sbb
xchg
and
xor
testl
jns
or
cmp
xor
fs
loopne
mov
aad
iret
xchg
imul
arpl
shlb
sti
rclb
sub
push
dec
rorl
jo
cmp
fidivrl
jno
stos
out
push
fwait
xor
or
lds
ss
cld
pop
mov
mov
push
adc
outsb
lock
cmp
cs
jl
call
mov
hlt
or
test
fsubp
sub
push
ficomps
ljmp
dec
std
push
adc
dec
adc
rcrb
xor
fcoms
popf
add
ret
in
dec
icebp
mov
or
or
hlt
pushf
xor
xchg
push
mov
clc
rcr
pusha
xchg
imul
out
pop
test
inc
mov
add
js
pinsrw
dec
faddl
pop
cmp
lock
sbb
sub
lret
jno
mov
jb
call
dec
loopne
mov
insb
push
fcmovb
and
xchg
inc
mov
cmpsl
inc
or
aas
sub
mov
cmc
shl
in
scas
sbb
adc
xchg
int
ffreep
insb
ja
dec
das
dec
cmp
lods
ret
pop
scas
lret
cmc
jbe
out
cmp
bound
lahf
adc
test
mov
push
pop
in
in
outsl
jbe
or
out
sbb
mov
adc
pop
in
pop
pushf
xchg
icebp
mov
sbbl
rol
mov
or
pop
mov
test
je
stos
scas
jle
shlb
imul
push
jl
sarl
push
push
adc
xorb
dec
mov
mov
pusha
mov
sbb
cld
mov
pushf
ljmp
fbstp
insl
or
sub
addr16
or
push
add
jg
xchg
out
or
repz
push
pop
lock
add
and
sub
cmp
icebp
lock
aam
pop
xor
push
into
mov
or
frstor
dec
inc
xchg
mov
pop
pop
out
pop
cmp
sub
subl
sbb
es
push
nop
inc
call
or
sub
mov
loopne
mov
ja
xor
iret
mov
das
loope
push
scas
push
cwtl
in
and
add
loope
fistpl
sbb
leave
sbb
cltd
pop
bnd
nop
cltd
push
imul
out
in
es
aaa
cwtl
and
dec
ret
repz
dec
pop
orb
mov
cmpsb
dec
sub
cltd
ficoml
or
sub
imul
sahf
jecxz
dec
and
adc
add
mov
in
into
imul
cmp
in
test
inc
ror
orl
popa
adc
js
mov
pop
mov
jno
ret
jns
loopne
jg
sbb
repnz
movsl
lcall
fnstsw
lret
aam
scas
dec
test
xchg
lock
aam
mull
arpl
jae
inc
jno
das
add
dec
data16
dec
fisttps
mov
ficoml
and
cmp
adc
inc
xor
cmpsl
fdiv
mov
mov
je
sub
add
sbb
rcll
outsl
mov
push
add
cld
cmc
lea
cmp
mov
movsl
int3
jae
mov
icebp
hlt
rorl
aam
xor
mov
cmp
jmp
pushf
cmp
mov
push
mov
popa
pop
mov
dec
imul
out
jmp
lods
js
mov
xchg
jmp
ret
scas
in
lahf
or
orb
inc
add
or
or
mov
inc
cmpsb
add
jmp
jecxz
fs
pop
jae
mov
and
pop
adc
repnz
sub
mov
out
pop
mov
xchg
mov
or
in
sub
shl
popa
push
mov
push
mov
std
push
rcrb
sub
adc
fstp
fcomps
jne
fwait
loope
pop
das
pop
pop
imul
mov
xchg
adc
aad
and
pop
or
push
test
sub
repnz
or
dec
fst
iret
push
dec
mov
jmp
loopne
in
sbb
dec
pop
les
add
mov
xchg
aam
mov
jp
pop
jno
leave
sub
pop
mull
mov
rsm
sahf
sahf
inc
jbe
and
or
ss
test
in
iret
mov
sbb
push
dec
adc
and
filds
loope
cmp
xchg
adc
call
out
dec
dec
xor
push
and
xor
cmp
leave
cmp
inc
hlt
gs
mov
cmp
not
bound
idivl
xor
add
mov
push
cmp
push
push
or
jns
mov
sub
pop
cmp
cmp
xchg
mov
mov
adc
mov
xchg
call
push
sbb
pop
in
mov
mov
xor
cmp
mov
loop
push
pop
sbb
mov
and
jnp
pop
cmpsl
add
insl
fistpll
push
ja
jge
sub
add
aad
addb
or
fstpt
add
mov
scas
mov
adc
arpl
sbb
adc
in
cmpb
lret
xchg
movsl
jp
fiadds
loope
icebp
mov
js
test
xor
fadds
mov
sbbl
setnp
sahf
adc
sahf
enter
aam
or
and
imul
push
xchg
push
xor
jle
mov
gs
add
inc
xor
inc
lods
int
fcomps
mov
test
ljmp
fmul
stos
sti
cmp
cs
nop
and
scas
aad
mov
das
das
stos
stos
add
outsb
mov
out
adc
jne
cmp
bound
jg
sub
or
jmp
jl
fs
or
push
fwait
divl
dec
pop
jle
pop
xchg
stos
shll
pop
nop
mov
cltd
pushf
jo
push
sbb
lret
icebp
cwtl
sbb
xchg
sub
xchg
inc
dec
sbb
xor
into
movsb
cld
hlt
push
adc
inc
leave
add
ss
dec
xor
jmp
stc
inc
data16
aas
push
or
cltd
js
add
mov
lock
mov
sahf
mov
test
clc
or
add
outsb
xor
aam
push
xor
ret
ror
inc
fiadds
pop
aaa
cmpsl
pop
lret
test
popa
cmp
mov
xchg
lock
push
pop
xlat
insb
push
es
loop
scas
jne
addr16
lret
test
in
out
adc
call
enter
scas
mov
imul
or
or
inc
fsubs
jne
add
jg
cmpsl
mov
xchg
adc
iret
subb
negb
test
or
pop
lahf
cmp
dec
lods
mov
in
add
mov
aas
inc
mov
adc
test
sti
adc
nop
mov
outsl
insl
xor
out
dec
xchg
mov
cmp
jae
add
jns
mov
mov
xlat
jne
jb
push
xor
sub
mov
fcomip
popf
cmp
xchg
icebp
incb
inc
mov
movsb
lahf
shl
xor
in
lods
clc
cld
arpl
lods
aad
aad
ds
cmpsb
test
xor
mov
std
and
das
jecxz
cwtl
aad
push
jmp
xor
out
sbb
xchg
push
lea
push
insb
cmp
cmp
adc
xor
push
incl
in
hlt
xchg
mov
std
jns
cwtl
inc
pop
dec
mov
sub
mov
cli
and
sub
or
mov
dec
pop
movb
insb
add
xchg
int3
xor
vpaddusw
xchg
lods
push
jno
sub
test
push
xor
out
imul
ret
stos
stos
pop
jns
int
push
xlat
out
out
push
fidivrl
adc
mov
pusha
arpl
dec
addr16
mov
xchg
call
jae
jp
enter
stos
stc
jge
jne
mov
stos
jp
loop
xchg
mov
aad
dec
add
xlat
out
mov
jb
add
into
and
or
push
pushf
cmpsl
mov
pop
jbe
xor
sbb
push
dec
dec
xchg
sub
pushf
je
push
sbb
and
adc
mov
stc
lods
out
inc
shrb
adcl
loop
fmull
loope
inc
fiaddl
lret
call
push
inc
sub
mov
fsubs
cwtl
cmpsb
mov
cs
or
pop
mov
cmpsl
xor
sbb
rcrb
imul
push
mov
sti
dec
enter
xor
pusha
and
stos
mov
rcr
fwait
arpl
xor
pop
xor
lret
gs
or
add
push
mov
mov
jecxz
push
dec
cmp
popa
adc
lock
inc
repz
xchg
bound
pop
fsubrp
lods
addr16
cmp
mov
mov
fsubp
or
jb
add
mov
push
es
mov
xor
test
add
pop
or
dec
adc
stos
sbb
xor
push
lock
cwtl
fnstcw
test
push
cmpsl
xor
inc
scas
lcall
inc
sub
mov
les
sbb
cwtl
outsb
imul
sti
nop
jnp
cltd
mov
subl
test
add
int3
push
or
pop
dec
mov
mov
mov
push
mov
pop
int3
jne
pop
xchg
or
out
or
push
pop
add
inc
repz
cmp
loopne
mov
or
pop
sahf
daa
push
add
lcall
and
and
popa
xchg
ljmp
cmp
in
and
lea
inc
ljmp
daa
xchg
stos
cmc
loop
roll
push
inc
sbb
out
add
pushf
and
fstpl
out
mov
dec
sub
cmpl
xor
mov
fldl
leave
jle,pt
imul
cmp
dec
sub
mov
dec
jle
in
or
ja
xchg
mov
push
mov
cwtl
mov
repz
mov
outsl
ljmp
jae
inc
fstl
jge
pop
add
or
jnp
sub
adc
fsts
dec
mov
das
inc
loop
or
dec
sbb
fisttpl
push
and
aas
pop
cli
test
adc
jae
or
and
dec
cmp
in
dec
fwait
adc
sarl
inc
rol
mov
jl
inc
cmp
adc
push
cmp
test
mov
mov
addb
xchg
fucomip
jecxz
sbb
mov
sti
stos
loope
dec
aad
or
sub
and
push
adc
sub
fld
movsb
loope
push
push
inc
mov
xchg
inc
pop
mov
mov
pop
fs
js
add
adc
push
movsb
add
fildl
pop
add
insl
mov
test
mov
cltd
hlt
shrb
pop
outsl
das
addb
mov
fimull
sub
stos
fidivl
das
push
icebp
mov
es
test
mov
pop
jmp
add
decb
je
les
dec
xor
stos
or
and
jp
stos
push
mov
mov
mov
jne
and
pop
adc
sahf
adc
jmp
xorb
push
or
pop
jno
out
sbb
cmp
sub
adc
jmp
orb
cmc
and
ret
roll
jge
cmp
inc
sub
sub
mov
mov
add
xchg
popa
xchg
out
adc
mov
inc
mov
lock
sahf
in
iret
jecxz
mov
inc
bound
and
and
leave
jmp
in
int
rcrl
int
jo
movsb
sub
pop
inc
call
test
mov
out
inc
xchg
in
mov
lahf
sub
dec
in
push
mov
lods
ret
decb
fisttps
lea
fcoml
iret
pop
lcall
leave
cmp
push
repz
pop
jge
int
jo
jbe,pt
jle
mov
mov
mov
adc
inc
dec
pusha
std
and
mov
stc
lock
and
mov
mov
popf
cltd
mov
outsl
dec
jb
sbb
dec
shll
out
ljmp
add
and
adc
xchg
stos
cli
aad
out
push
mov
mov
into
ljmp
and
mov
push
mov
sarb
xchg
pop
aaa
hlt
add
test
mov
cmp
movsb
mov
push
out
fs
cmc
pop
popf
push
push
clc
mov
enter
sub
in
xor
cltd
aad
or
je
and
int3
jmp
push
xor
cmp
cmpsb
inc
repnz
xchg
fst
jae
xor
lcall
inc
pop
scas
lea
fsubl
std
cmp
dec
jl
outsb
push
dec
lea
mov
cmp
fbld
or
notl
jbe
mov
out
repnz
cmovnp
adc
mov
fists
test
fdivrl
leave
xchg
stc
dec
mov
adc
sbb
add
pfpnacc
inc
loopne
dec
popf
add
xor
out
jmp
pop
pop
add
ja
loope
mov
mov
mov
sub
xor
test
imulb
js
cmp
mov
dec
mov
push
xchg
mov
incl
and
fwait
cmpsb
push
popa
ja
std
sub
pop
sbb
fwait
int
call
pop
addr16
xor
sub
jmp
add
iret
loop
sbb
inc
xchg
push
popa
push
loopne
imul
fwait
mov
sub
jae
jne
popf
sub
adcl
stos
arpl
push
mov
in
clc
jbe
inc
push
inc
cld
insl
lret
test
sahf
xchg
aas
movsl
pop
push
fdivrs
outsb
mov
fcompl
mov
cmc
stos
enter
fstp
cmp
push
push
lods
push
inc
or
daa
pop
or
or
cld
jnp
and
nop
sysret
jnp
sub
jo
mov
and
and
sub
mov
and
mov
sbb
mov
dec
idivb
and
sub
jno
and
sbb
pop
xchg
cli
adc
push
jmp
sti
lea
cmp
mov
fimuls
shl
push
add
push
mov
jns
lea
jae
test
not
mov
fdivp
or
add
mov
pop
leave
in
mov
mov
imul
push
lods
fadds
jmp
pop
sbb
pop
pop
mov
or
les
pop
push
adc
popf
and
dec
xchg
and
das
push
sub
push
fdiv
and
xchg
pop
mov
mov
jle
notl
xchg
cmp
les
mov
or
movsb
pop
xchg
inc
mov
test
cmp
mov
lcall
jecxz
mov
push
mov
js
inc
push
jecxz
arpl
and
mov
pop
push
ret
aas
push
into
push
shrb
fistpll
mov
xchg
sbb
gs
das
aad
and
subl
aaa
cwtl
cld
add
or
fstp
loop
les
pop
dec
xor
dec
loopne
pop
or
ficoms
xor
pop
or
int3
sub
mov
add
mov
pusha
sahf
dec
test
test
sub
aas
xor
aas
pop
out
xchg
xchg
je
mov
loop
divb
and
aam
ljmp
dec
out
movsl
push
lahf
xlat
lds
push
cld
cld
jle
out
cmp
daa
jg
xor
push
jmp
fldt
inc
int
mov
pushf
inc
xor
sub
jnp
mov
fdivl
push
call
adc
jbe
rcr
jae
movsl
mov
daa
dec
push
fistl
pop
out
push
xor
fidivl
mov
jb
sub
or
outsl
mov
cs
xchg
out
cmp
shl
mov
dec
cmc
add
jp
les
mov
add
mov
arpl
cmovo
imul
sub
pusha
xor
ss
pop
cwtl
jp
inc
inc
xchg
or
push
sub
pop
pop
fisttps
pop
popf
pop
cmp
sub
mov
bound
adc
mov
ljmp
dec
xor
inc
add
and
stos
scas
inc
test
push
xor
jp
xchg
loopne
shrb
cmp
stos
adcb
imul
pop
sub
mov
adc
push
stc
in
insl
sbb
in
inc
pop
mov
push
jno
popf
aam
dec
push
inc
addr16
call
ret
or
les
pop
imul
push
test
ljmp
jne
mov
xor
mov
out
loopne
gs
adc
lock
lcall
test
sub
stos
mov
jp
mov
fisubrs
push
lret
int
cmp
pop
pop
std
mov
dec
clc
ret
fiaddl
mov
adc
mov
mov
loope
les
and
mov
mov
pop
dec
xchg
leave
and
sahf
in
in
pop
imul
pop
jne
js
mov
ds
cli
xchg
sbb
cmc
mov
inc
xor
imul
les
and
or
nop
cmp
aad
jmp
jo
aas
mov
inc
ljmp
xor
xlat
xchg
mov
mov
std
rcr
xchg
mov
lods
mov
sbb
cld
ss
mov
ljmp
call
cs
mov
xor
cmpsb
arpl
icebp
xor
pop
rorl
lods
xor
jnp
lret
mov
lret
fcompl
xchg
loop
je
pop
int
or
mov
shrb
gs
lods
mov
mov
push
mov
movsb
or
xchg
mov
cmc
mov
imul
dec
das
cmpsb
lea
lock
jmp
rcl
mov
mov
mov
aad
mov
mov
aaa
orb
mov
cmpl
dec
ds
mov
in
cwtl
pop
xor
mov
inc
pop
repz
sbb
mov
sti
push
jnp
cmpsb
loop
roll
pop
xor
bound
adc
sub
pusha
sbb
jne
push
bound
ja
jg
push
sub
or
mov
pop
cmpsl
leave
stos
xchg
pop
sub
dec
test
dec
inc
jle
hlt
pop
adc
fimull
aad
xor
push
pop
and
xchg
xchg
mov
mov
out
pushf
push
jle
in
mov
push
stc
stos
into
push
jno
jmp
pop
rcrl
adc
jae
popf
sub
imul
push
adc
pop
jmp
mov
or
xchg
xchg
cld
fimull
stos
cmp
push
add
xor
sti
sub
push
pusha
fistpl
sub
or
cmp
dec
out
push
mov
adc
mov
mov
push
xchg
or
insb
mov
dec
lock
xor
into
adc
and
cmc
outsl
in
enter
loope
jo
mov
mov
xor
out
flds
sbb
sbbl
mov
or
and
out
ret
fwait
ret
jnp
mov
loopne
dec
jno
das
adc
inc
cld
cmp
jo
pusha
insl
fnsave
imul
insb
stos
bound
movsb
jnp
jmp
popf
adc
sti
aaa
xchg
pushf
js
mov
ret
sti
popa
je
loopne
dec
cmp
and
xchg
adc
cmpsb
stc
mov
jecxz
sarl
sahf
adc
inc
aaa
mov
fmul
mov
out
adc
push
add
cltd
xchg
mov
fcoml
std
mov
sti
stos
sub
lahf
addr16
jns
jp
mov
push
data16
dec
fnstsw
add
pop
push
jl
and
das
sti
or
out
out
test
fndisi(8087
jbe
sbb
sti
mov
gs
dec
pop
dec
test
mov
hlt
mov
mov
mov
pushf
adc
xchg
adc
rcll
push
sbb
dec
pop
pop
pop
iret
fstl
dec
push
xlat
dec
adc
mov
and
es
out
pop
fsts
jge
fs
and
mov
jbe
scas
sub
out
andb
aad
dec
lret
mov
dec
mov
es
ret
daa
xor
push
out
enter
scas
xor
sbb
dec
in
jge
xor
mov
cmc
sahf
in
jo
mov
js
or
pop
xchg
lods
xchg
pop
iret
pop
les
inc
outsl
mov
out
jnp
xor
movsb
xchg
out
lahf
sub
les
lcall
xchg
and
sarl
sbb
sbb
int
and
bound
dec
cwtl
xchg
push
mov
push
insl
insb
int3
lods
mov
xchg
stc
mov
inc
imul
lock
xchg
inc
rclb
aas
sub
sub
mov
rorl
xchg
daa
imul
pop
sub
xor
sbb
inc
lock
cmpl
mov
test
mov
sbb
fstl
xchg
fwait
xchg
xchg
and
ret
insl
xchg
enter
jne
arpl
fisttpll
sbb
stos
cwtl
mov
es
aaa
mov
movsb
in
jg
stos
fcomi
cmp
pop
stos
xor
dec
scas
push
add
imul
jnp
xchg
das
imul
divl
xor
pop
int
loop
cli
pop
lcall
icebp
ss
shll
add
gs
jbe
push
xor
inc
pop
call
lcall
push
and
test
flds
xor
xor
lahf
lret
or
sbb
fwait
sub
mov
lea
fcomps
je
fcoml
lahf
push
call
jb
mov
fs
xor
pop
sahf
test
push
jno
add
fnsave
jge
in
mov
lods
push
cmp
jge
cmp
popf
mov
mov
cwtl
jnp
push
push
mov
xchg
mov
jb
int3
sub
push
shlb
add
daa
mov
or
cmp
ss
stos
pop
mov
pop
xor
push
xchg
mov
sbb
call
in
mov
outsl
sub
stc
dec
lods
jns
and
add
stos
adc
jecxz
jmp
or
shlb
sub
ds
pop
in
aas
dec
inc
mov
ljmp
or
push
test
xor
push
xchg
lahf
sub
pop
scas
and
mov
fnsave
popl
pop
js
jbe
in
mov
mov
ret
cmp
sahf
push
fidivrs
jns
out
or
repnz
bound
add
mov
fs
mov
add
out
xchg
lret
mov
int3
adc
xor
mov
stc
sub
mov
push
arpl
mov
inc
xchg
addr16
push
out
jo
push
repz
movsl
scas
or
movsb
cmc
out
into
mov
xchg
fsts
and
out
sub
cmp
lcall
movsl
fs
or
cmp
call
mov
dec
ret
fnsave
push
ficoml
lea
in
inc
lcall
sti
inc
xchg
pushl
scas
sbb
xor
xlat
mov
mov
add
sbb
popa
and
es
lock
loopne
push
imul
inc
sub
sbb
in
pop
and
lods
sub
inc
lret
sub
lcall
add
dec
mov
mov
inc
in
sarl
dec
jg
mov
shl
mov
jl
mov
sarl
inc
inc
aam
cmp
push
std
mov
adc
or
adc
sub
adc
mov
jg
push
sbb
xor
jb
outsl
pop
adcl
jns
push
xchg
inc
mov
pop
es
std
cmc
jnp
mov
shll
inc
repnz
push
pop
mov
cwtl
push
addr16
fmuls
cwtl
xor
ljmp
pop
cmp
in
jnp
cmp
sbb
repz
icebp
jo
fbld
add
aas
cmp
pop
fbld
dec
nop
and
aad
jne
shrb
mov
popl
pop
sbb
daa
sahf
fnsave
sub
fucomp
std
dec
mov
push
xchg
sub
negl
adc
xor
adc
subb
leave
sub
jge
jle
push
push
mov
dec
cmpsb
jmp
in
and
mov
lret
cwtl
lret
push
add
cld
mov
push
mov
push
cmpb
and
inc
sbb
nop
and
xchg
dec
lahf
fdivrs
mov
pop
fmull
push
lahf
dec
sbb
dec
dec
mov
filds
pop
jne
test
int
and
rcrb
into
sub
cwtl
and
lods
cld
lcall
les
mov
jecxz
lret
inc
xchg
repnz
ficompl
in
cmp
push
mov
divl
and
push
mov
xchg
sub
cmpsl
stos
pop
js
sub
xlat
dec
inc
push
loope
call
and
loope
loop
scas
je
std
ret
ret
sub
cs
inc
xor
sub
push
pop
adc
sub
outsl
mov
push
addb
ret
jne
pop
xchg
mov
pop
shr
inc
cltd
adc
std
pop
push
lock
cmp
cmp
sbb
sbb
fisttps
data16
mov
xor
sahf
push
neg
sbb
stos
adc
andps
push
cmc
int
mov
test
subl
out
mov
jae
sbb
arpl
flds
test
into
adc
sbb
stos
cmp
dec
jnp
int3
push
xchg
enter
mov
lcall
fdivs
pop
mov
dec
iret
mov
in
push
jne
pop
sahf
adc
mov
in
xchg
jnp
bound
popf
and
sbb
jnp
xchg
add
cmpsl
jmp
enter
ja
insl
push
loopne
cltd
fstps
mov
jecxz
ret
stos
xchg
out
mov
test
das
mov
js
ss
add
call
scas
notl
std
sbb
into
rcrb
adc
aas
ja
inc
inc
push
xchg
lcall
mov
or
and
adcb
mov
xchg
pop
lcall
outsl
jl
cmp
jl
inc
inc
mov
mov
mov
pusha
xchg
jbe
fimuls
mov
cmpsb
jmp
mov
dec
xor
jecxz
xchg
loopne
movsb
lcall
mov
or
mov
not
dec
out
dec
adc
addb
add
and
fstl
mov
mov
fsubl
jl
add
js
clc
push
jno
inc
mov
pop
cmp
imul
stos
push
fnstsw
mov
leave
lret
push
sub
mov
mov
sar
xchg
pop
mov
xchg
cmp
into
cld
and
cmc
sbb
mov
data16
or
arpl
or
inc
nop
movsb
mov
xchg
fcomps
mov
cs
cmp
adc
push
sbbl
dec
push
in
cltd
sbb
mov
test
pop
outsb
jne
jmp
je
mov
aad
cwtl
xor
cmpxchg
movsl
mov
jle
add
adc
imul
test
out
popf
xor
fwait
into
sbb
mov
ljmp
ja
sbb
cmpsl
cmp
insl
aam
popf
jo
sub
popf
sbb
push
sbb
jb
lret
ret
jno
add
push
cmp
dec
pop
inc
jge
sarb
in
xor
outsb
mov
cmp
lahf
dec
test
cmp
dec
xchg
mov
test
cmpsl
js
roll
repnz
and
repnz
jg
neg
dec
dec
jae
int
loopne
fucomip
dec
and
call
push
mov
xchg
mov
lods
xor
imul
mov
sbb
in
scas
out
cwtl
int
pop
sub
cmp
xlat
xor
dec
jge
fs
ljmp
sub
mov
int3
pop
lcall
cmovno
arpl
xchg
lock
mov
jae
jo
xchg
add
cmp
lcall
xchg
dec
inc
jb
test
and
fidivs
call
es
xchg
and
pop
mov
mov
or
ficoms
fsts
sub
xchg
out
sub
jge
inc
movsb
stos
jg
fs
pop
fistpl
in
adc
jb
pop
xor
xor
ja
push
xchg
and
cmp
cmp
jmp
mov
push
mov
fiaddl
pop
mov
ret
jno
ffree
shlb
fcoms
mov
mov
inc
mov
icebp
js
xchg
out
outsl
out
pop
mull
aas
adc
pop
push
xchg
xchg
mov
pop
cmpsl
push
rcl
cmpsl
enter
or
stos
inc
gs
add
loop
ljmp
dec
es
cmpsl
jmp
adc
pop
call
addr16
addr16
xor
aad
xor
dec
stc
scas
xor
pop
jb
dec
and
int
stos
cmp
into
cwtl
subl
mov
insl
dec
aam
dec
out
gs
mov
test
or
vmovmskps
pop
roll
call
test
movsl
jno
repnz
jecxz
xchg
rcrb
inc
mov
stos
movsl
pop
mov
jle
pusha
xchg
jmp
aas
jmp
xlat
push
push
sub
sbb
and
stos
jl
dec
fmuls
lods
dec
out
mov
sbb
mov
jne
cltd
xchg
mov
or
fs
imul
pop
cmp
xor
push
xchg
fsubrp
cmpsb
or
mov
ljmp
mov
dec
fs
jns
in
scas
mov
dec
jle
dec
outsl
shrb
ds
mov
pop
insl
inc
push
test
mov
insb
jp
or
pop
int
add
push
push
popa
out
in
push
jge
dec
push
push
dec
iret
xchg
sbb
lcall
jns
movsl
xor
loopne
add
xor
jg
imul
or
fstps
in
mov
or
pop
sbb
ret
adc
pusha
pop
mov
fisubrl
std
mov
aad
clc
sbb
jne
in
mov
pop
and
and
pop
shlb
cli
fildll
std
ret
cltd
cmp
mov
loop
out
out
dec
popa
dec
sbb
fcmovnbe
sub
jp
xor
push
orb
shll
ss
dec
push
xchg
lret
mov
mov
fs
mov
lahf
sbb
jb
push
andb
jl
in
adc
mov
lds
sbb
sarl
sub
or
test
mov
pop
jo
sbb
mov
sbb
outsb
mov
hlt
mov
pushf
fsubs
pusha
cmpsl
and
push
mov
and
xchg
or
movntps
lock
in
out
or
pop
pusha
into
dec
inc
sbb
adc
outsl
test
xchg
ret
pop
pop
sub
out
inc
in
pop
and
idiv
add
fucom
or
and
and
dec
cwtl
repnz
sub
in
stos
or
shlb
popl
incb
add
inc
lcall
shll
pop
movsl
int
imul
nop
fwait
add
test
scas
paddsb
outsb
or
cwtl
jle
inc
shrb
inc
cmpl
add
mov
lahf
add
fisubrs
and
mov
jle
push
or
mov
adc
mov
clc
cmp
icebp
or
divl
mov
sbb
dec
fs
cmp
xchg
and
pop
lods
lea
jns
out
xor
lods
ret
rcrl
ss
cmpsl
mov
pop
mov
int
cmc
push
int3
push
es
xchg
lahf
inc
inc
xchg
dec
pop
fdivs
fistl
leave
dec
fs
add
sbb
cmpsl
mov
mov
and
imul
ret
faddl
inc
out
mov
fwait
adc
adc
lahf
sbb
mov
push
mov
outsl
jbe
jecxz
out
add
jmp
cmp
jne
xchg
aas
out
or
sub
cli
mov
lea
dec
js
xchg
mov
inc
pushf
outsb
std
or
cmp
sbbl
fisubl
or
or
cmpsb
mov
in
pop
fcomp
jo
shrb
cmpsl
pop
sahf
insb
pop
jmp
data16
pushf
cwtl
adc
ret
ficomps
mov
adc
push
rcl
adc
jge
or
xor
push
add
in
and
push
pop
mov
sub
popa
mov
cmpsb
aas
ds
movb
push
insb
repnz
lret
imull
push
decb
dec
mov
push
fistpll
jg
sub
fwait
mov
mov
pop
rcrl
popa
and
shll
ss
out
mov
fneni(8087
jne
inc
cmc
pop
xor
enter
jmp
bound
dec
and
out
fstpt
enter
and
popf
adc
stc
test
call
les
pushf
cltd
mov
mov
sbb
inc
shl
rorl
mov
sahf
ret
jl
push
cmp
push
sub
pop
cmp
popa
jmp
out
xor
test
push
repz
xor
pushf
cmp
iret
aaa
pop
fwait
shrl
adc
imul
inc
jge
hlt
dec
mov
mov
pop
je
stos
iret
xor
repnz
ljmp
icebp
das
fstps
inc
clc
and
imul
cwtl
push
in
jno
adc
sbb
dec
dec
sub
mov
cmp
push
mov
pop
push
sahf
dec
daa
cmp
mov
loope
fsubrs
sahf
repnz
es
or
lahf
imul
push
mov
jne
addr16
cmp
xchg
adc
jl
xor
mov
rolb
pop
xchg
adc
negb
add
addl
or
pop
test
repz
lea
sbb
les
sub
cmp
fwait
add
dec
sub
pop
rcll
cmp
adc
or
test
mov
mov
bound
aas
mov
and
lret
jg
xchg
addb
push
cmp
test
jbe
xchg
insb
sbb
xchg
push
inc
and
jb
sbb
sub
or
sbb
pop
xor
and
xchg
ss
pop
dec
mov
mov
push
push
pusha
dec
jge
mov
xchg
fcmovu
sbb
clc
arpl
cmc
inc
in
into
lods
xlat
lock
outsb
adc
ret
xchg
xchg
cld
mov
sub
aas
xorl
cmpsl
and
mov
cmpsl
xchg
jae
inc
dec
pop
jo
scas
nop
stc
and
test
out
shll
mov
adc
xor
mov
cmc
fcmovnbe
popf
enter
or
shl
mov
jae
adc
and
stc
inc
cmp
roll
add
icebp
sbb
xchg
pop
sbb
adc
mov
arpl
rorb
inc
hlt
xor
sbb
push
outsl
test
addr16
into
fninit
fistl
mov
out
test
xor
mov
xchg
ss
cmp
out
and
pop
mov
xor
cwtl
test
int
dec
addr16
ja
outsl
pushf
mov
push
mov
fwait
adc
pop
lods
in
outsl
xchg
lahf
mov
dec
popf
jmp
mov
adc
test
popa
cmc
repz
lock
push
imul
arpl
or
add
mov
or
js
push
dec
aam
pop
mov
pop
pop
test
push
ret
mov
mov
loop
clc
jno
push
jge
test
data16
rcr
inc
in
cmpsb
int3
in
ss
rcl
jmp
mov
lds
aad
mov
lds
stos
add
lcall
dec
sub
sub
movsb
jae
jmp
mov
cmp
stc
dec
add
cmc
in
adc
js
mov
push
xchg
xchg
pop
jb
push
pop
dec
sub
pxor
sbb
inc
mov
dec
xchg
out
popa
ficompl
xchg
fwait
adc
mov
mov
in
xchg
je
out
adc
ret
cmp
cwtl
shll
adc
or
add
jp
push
adc
ret
and
mov
in
xor
loope
xchg
pop
fstl
cmc
or
push
pop
xchg
and
and
rorl
lcall
pop
daa
pop
incb
fcomps
outsl
pop
loope
mov
ljmp
push
insl
xor
mov
fnstsw
lcall
clc
mov
and
rcr
pop
pop
mov
inc
inc
arpl
int
aaa
sub
pop
xor
sbb
jp
fstpt
insb
mov
fcmove
mov
jne
out
pusha
popa
ss
mov
dec
jle
mov
out
xchg
inc
mov
cwtl
rcrl
out
ds
dec
and
cmp
aas
inc
cli
cmc
pop
pop
pop
test
mov
imul
sub
adc
rolb
sbb
add
or
popa
cli
ret
dec
xchg
insb
cmp
jge
xor
mov
shlb
dec
daa
lock
in
divl
and
fcmovb
movsl
xor
adc
jae
cmp
int
pop
mov
xlat
aad
jae
push
imul
and
dec
pop
pop
mov
roll
cltd
sub
add
sti
mov
adc
je
into
insl
pop
push
cs
jecxz
jl
aaa
sbb
push
adc
adc
iret
adc
in
enter
movsb
repnz
in
mov
bnd
cltd
lds
lcall
jo
outsl
cmc
shll
hlt
lret
and
cltd
adc
add
mov
shll
sahf
mov
mov
dec
jle
test
jg
out
push
sbb
dec
xor
or
mov
data16
mov
stos
fs
mov
mov
mulb
lods
push
std
subl
lret
insb
cli
daa
call
ds
in
or
sbb
pushf
sti
xor
in
sbb
fcmovnu
vrsqrtps
dec
sbb
jno
out
imull
add
sbb
movsb
outsl
das
daa
cmc
jbe
popa
sbb
ret
mov
jp
inc
lcall
jle
pop
dec
pop
daa
lods
mov
push
mov
sbb
out
dec
sarb
lods
sbb
dec
jge
imul
push
fcom
jno
adc
inc
sub
test
mov
cmp
mov
stos
lahf
mov
testb
gs
test
fldt
inc
xor
rcrl
lea
mov
fimull
jne
push
cmp
cltd
clc
loope
add
mov
fimull
js
sbb
xchg
cmpsb
lods
xchg
ds
insl
cmp
pop
popf
cwtl
adc
sarl
add
clc
pop
or
arpl
pop
jle
mov
mov
add
jecxz
xchg
and
outsb
out
and
fstps
sbb
rclb
scas
aad
inc
jns
jmp
jns
pop
sti
sbb
xor
xchg
lea
push
and
fisubs
out
out
outsb
mov
addr16
imulb
xchg
jl
jnp
mov
mov
push
xchg
sar
shlb
and
dec
stos
mov
and
sarb
mov
and
sbb
scas
rcl
out
les
cli
test
jle
sarb
pop
insb
call
fldcw
lcall
sbb
insb
rclb
or
mov
push
push
push
mov
fmuls
out
rcrb
fbld
roll
mov
in
mov
jb
ficompl
sbb
orl
mov
cmp
lcall
aaa
jno
jecxz
mov
push
jns
scas
movsb
mov
mov
lret
sub
in
mov
pushf
cmp
xor
mov
pop
pop
jle
sti
mov
adc
mov
push
pop
mov
jbe
mov
dec
xchg
sub
or
add
shrl
shlb
ret
rorl
adc
lahf
xchg
sub
push
mov
add
pop
mov
pop
je
xor
jecxz
add
mov
cmpsb
je
shrl
aas
push
ja
aas
leave
mov
jecxz
daa
push
sbb
ror
mov
scas
cli
add
mov
mov
pop
xor
cmp
mov
pop
cmp
jo
stos
pop
mov
sub
jo
jae
ja
ds
lds
cmp
mov
lods
inc
mov
add
mov
mov
inc
xor
aas
bound
inc
test
sahf
je
xor
arpl
out
xor
lea
pushf
add
sbbb
or
cs
aam
dec
sbb
mov
sbb
or
ud0
outsl
das
ds
add
sarb
outsl
clc
aaa
popa
aas
aaa
dec
pop
inc
pop
xlat
subb
ljmp
es
mov
stc
mov
add
loopne
scas
sahf
xor
mov
mul
push
rcll
scas
xchg
push
sub
xchg
xor
or
pop
cmp
cmp
gs
inc
int
lock
aaa
insl
scas
imul
mov
test
inc
sarl
test
jmp
cmpsl
fdivrl
xor
cmp
out
and
mov
mov
jo
mov
mov
ret
adc
jecxz
ljmp
push
pop
cmp
jmp
mov
and
outsb
sub
xchg
mov
push
xor
inc
scas
leave
fisubl
arpl
les
jg
ljmp
inc
sarb
sbb
push
or
call
movsb
aas
test
pop
lods
sti
pop
fmull
sahf
fs
std
sbb
cltd
filds
icebp
mov
mov
xor
stos
xchg
inc
add
jge
insl
mov
xchg
fwait
scas
lcall
out
adc
out
xor
jno
arpl
pop
lret
mov
idiv
cmp
pushf
repz
mov
sub
dec
fldl
test
cmp
jmp
stos
rcll
or
lods
inc
xchg
dec
hlt
addr16
sub
mov
cmp
insb
lahf
inc
pusha
or
mov
aam
fwait
xchg
or
mov
je
jb
push
fdivrl
es
sbb
mov
push
lods
nop
or
out
lcall
xor
outsb
cs
inc
icebp
shl
sbb
mov
sbb
push
and
sahf
idivl
cmpsl
mov
das
pop
mov
adc
cld
mov
adc
popa
mov
mov
pop
mov
jae
push
lods
pop
seta
bound
pop
cmp
pop
xchg
add
in
call
adc
xchg
or
mov
mov
addr16
jg
stos
arpl
sarl
inc
inc
das
pusha
and
push
fisubrl
movsl
in
adc
shr
push
xor
loopne
ret
repz
in
shl
adc
inc
cmp
jg
dec
xor
cmc
hlt
mov
add
jne
mov
pop
xchg
sahf
call
ljmp
xchg
mov
push
insl
xchg
fisttps
or
inc
repz
pop
jae
inc
enter
popf
sub
jge
jns
cmp
add
ret
and
jno
repnz
mov
and
jp
ret
pushf
mov
lea
jmp
push
notb
dec
jb
xor
sbb
test
mov
push
cmpsl
iret
dec
mov
jne
push
mov
dec
xchg
mov
add
cli
sahf
nop
pop
push
daa
insl
jae
xor
mov
push
daa
addr16
jae
sub
nop
pop
jbe
sbb
mov
mov
dec
pop
fidivrs
add
in
dec
mov
add
fldenv
test
mov
mov
stc
and
adc
pop
inc
aaa
sub
roll
ja
and
ret
gs
dec
push
xchg
pop
sbb
jg
insb
out
jnp
gs
insl
mov
push
sbb
lea
je
mov
dec
leave
ds
or
shll
mov
shrl
pop
inc
add
or
lods
sub
jg
mov
cmp
add
aam
js
jle
int3
sarl
daa
int3
out
xor
aad
sub
or
icebp
mov
jns
jbe
pop
mov
in
cmp
adc
movsl
mov
adcb
hlt
repz
mov
movsb
dec
jecxz
sbb
call
xchg
mov
out
aad
cmc
mov
and
sbb
push
sbb
aad
xchg
push
clc
mov
mov
aas
pop
js
mov
repz
das
mov
push
cmpsl
out
sub
fdivs
jo
inc
or
mov
into
mov
stc
jecxz
jbe
mov
ds
xchg
xchg
popf
loopne
push
imul
xor
xchg
pop
and
xlat
fprem1
lods
xchg
hlt
jno
mov
lock
adc
mov
xlat
sub
xchg
adc
lods
sbb
pop
sahf
xor
push
mov
mov
mov
fldenv
in
fisubrl
jl
sbb
lret
mov
pop
pop
sbb
sub
sub
aaa
repz
repnz
popf
push
out
icebp
in
ror
cmp
testb
pop
mov
or
enter
mov
cmp
js
outsl
std
mov
push
mov
aaa
fwait
js
pop
lcall
inc
int
test
sar
jnp
mov
mov
ja
sahf
push
adc
rcrb
loope
inc
aad
push
mov
push
icebp
adc
pop
xchg
outsb
mov
test
xchg
repz
repnz
dec
loope
gs
add
sub
xchg
sub
subl
fsubrs
mov
rcrb
sub
rclb
dec
dec
aaa
xchg
mov
jle
push
xchg
sbb
or
pop
iret
sub
or
cmp
cltd
add
and
insb
ja
enter
scas
adc
fldt
add
jmp
push
pop
mov
jle
mov
rolb
adc
push
sub
mov
xchg
and
xor
les
mov
cmp
lret
pop
pop
mov
enter
incl
mov
mov
cmp
jnp
jmp
push
mov
adc
add
mov
xor
and
aaa
fucomi
xchg
sbb
fs
xchg
bound
add
lock
adc
mov
cs
stos
lahf
mov
jge
rorl
adc
movl
add
and
mov
push
push
outsl
xchg
mov
pop
adc
test
ret
cld
or
sub
and
mov
rol
pop
fbld
nop
push
notb
aad
leave
adc
xchg
mov
addr16
pop
pop
outsl
fdivrl
jne
fnstcw
xchg
inc
inc
add
loopne
mov
sub
das
rclb
xor
dec
stos
shlb
rcpps
inc
mov
inc
arpl
and
mov
sbb
pop
mov
inc
lret
pop
aam
sbb
mov
mov
scas
fs
addr16
in
inc
sbb
jp
xlat
xchg
jbe
jg
in
or
adc
outsl
fmul
adc
into
jmp
mov
jge,pn
ss
out
pop
loop
jmp
rcll
cli
xor
pusha
ljmp
test
fsubrl
cmp
fildll
xchg
loopne
repnz
lret
xor
pusha
adc
jge
pop
cli
lods
mov
or
lea
mov
pusha
sbb
pop
je
or
std
mov
arpl
repz
out
jle
pop
add
jecxz
mov
push
jnp
push
lret
xor
cmp
sbb
push
jmp
pop
dec
mov
pop
lods
inc
pop
mov
clc
xchg
shrl
loopne
test
jl
subb
cmc
popf
push
adc
ds
xchg
pop
testl
pusha
aad
sub
jmp
xchg
outsb
arpl
pop
arpl
lret
cs
mov
fisttps
popa
xor
inc
mov
fsubrl
and
inc
cli
xchg
mulb
mov
dec
or
xchg
ja
lea
popa
adc
cmp
xlat
jecxz
mov
xor
subb
dec
add
insb
in
ret
sub
shll
pop
lods
scas
dec
scas
roll
mov
sbb
mov
stos
aaa
push
cmp
popa
test
xorb
adc
imul
adc
xchg
cmp
inc
sahf
sub
hlt
dec
push
mov
lret
js
dec
push
cmpb
sbb
rclb
imul
pop
sbb
or
cltd
scas
stos
inc
test
cmp
push
psubsw
dec
rcrb
xor
xor
adc
outsb
jne
repnz
push
sbb
jmp
jg
jns
ret
fsubl
fwait
inc
sub
outsl
iret
aaa
and
leave
inc
lret
dec
imul
movsl
inc
xor
mov
push
imul
xchg
adc
repz
std
cmp
xchg
loopne
repnz
jo
sbb
jo
inc
clc
or
lcall
fdivs
pusha
jnp
add
jle
inc
sub
int
xor
and
and
mov
loop
call
in
out
subl
push
inc
inc
push
push
mov
xchg
fsts
push
movl
stos
pop
mov
lock
xchg
cld
scas
je
jns
dec
or
sub
loope
cwtl
aam
cli
jo
jle
jbe
outsl
xor
pop
xchg
pop
lret
lods
cmp
xchg
js
sbb
fcoms
xor
dec
cmp
inc
imul
cmp
fsubrs
cmp
mov
pop
mov
cld
push
xor
cltd
test
imul
outsb
mov
inc
out
inc
outsl
dec
and
sti
inc
fadd
cltd
mov
cmpsl
inc
mov
xlat
cmp
pop
sbb
push
hlt
incb
adc
dec
xchg
xchg
or
into
mov
pop
pop
mov
std
fildll
rorb
enter
dec
dec
imul
xchg
and
cld
les
adc
pop
sub
lea
cmp
and
xor
add
or
xorl
xchg
imul
push
jno
jge
sub
mov
pop
iret
xcrypt-ofb
cmpsl
stos
subb
imul
gs
test
fcoml
je
aas
mov
and
jb
push
dec
cmc
lock
loop
imul
js
inc
push
lods
jmp
popf
mov
sub
sub
or
pop
adc
and
sub
aam
add
ret
nop
out
add
outsb
jp
cmpb
mov
sub
pop
jbe
add
leave
or
jno
sub
adc
adc
cwtl
xor
or
push
mov
or
or
lret
pop
gs
pop
ja
cmpsb
dec
fstp
xchg
and
shlb
je
jmp
push
ret
inc
jno
adc
mov
outsl
nop
jle
js
jae
xchg
lea
sbb
and
mov
xchg
jne
rol
out
mov
xchg
dec
stc
stc
fmuls
adc
jl
and
inc
aas
mov
sahf
mov
movsl
aam
cwtl
or
mul
mov
xor
shlb
outsb
adc
mov
mov
push
notb
mov
in
sbb
or
pop
sub
jmp
mov
ljmp
orl
jno
push
jmp
mov
int3
push
imul
popa
fwait
jp
ret
jns
arpl
rcrb
sub
xlat
movsl
push
stc
ret
fs
iret
test
mov
push
in
insl
out
push
or
icebp
xor
negb
jmp
std
idivb
xor
leave
xchg
pop
or
es
aam
loop
cli
imul
pop
adc
shrb
lahf
dec
sti
addb
push
jnp
dec
adc
movsb
pop
cmp
cmpsb
jl
cs
mulb
push
sbb
push
mov
jl
outsb
mov
pushf
imul
mull
jo
add
das
jb
push
inc
pop
cmpl
cmpb
cmpsb
mov
xchg
je
jge
test
add
stos
out
inc
sub
cmc
cmp
cmpsb
lcall
sub
insb
cmp
cmc
mov
sub
pop
shll
jo
mov
in
out
bndstx
shll
in
mov
xor
test
idivl
or
mov
jns
xchg
das
push
sti
pop
inc
dec
xchg
aad
inc
mov
jne
lea
movsl
lahf
inc
inc
cmc
xor
dec
std
ret
adc
push
icebp
lea
add
xchg
jge
sub
sar
jns
sti
fidivrs
add
cmpsb
pop
sbb
xor
add
or
bound
ret
in
sbb
add
hlt
add
int3
push
inc
pop
test
andb
cmp
mov
cli
push
jne
cmpsb
jmp
push
les
inc
mov
pop
xchg
js
hlt
mov
icebp
aam
nop
aad
les
add
xor
push
cmc
inc
xchg
ret
sbb
stc
pop
popa
in
and
pop
lret
lds
lahf
aad
jl
ficoms
pop
jno
das
into
sbb
push
aad
enter
add
dec
bound
xchg
arpl
ret
outsb
xchg
xlat
ja
pop
je
mov
and
adc
scas
jb
leave
sbb
das
xchg
test
push
mov
mov
pop
push
notl
ret
xor
pop
out
mov
out
sahf
mov
sbb
inc
in
and
cmp
inc
pusha
test
lods
inc
dec
cwtl
lret
enter
icebp
cld
mov
inc
inc
sbb
int3
aas
push
mov
jnp
in
push
daa
cld
iret
mov
dec
adc
push
pop
jno
test
test
call
shl
xor
fiaddl
cmp
sub
and
jge
prefetch
or
scas
rolb
dec
jmp
test
add
jb
movsb
xchg
or
mov
cmc
and
inc
mov
ja
mov
sbb
or
cmp
jbe
xor
data16
adc
rol
mov
dec
enter
cli
out
jmp
std
inc
pop
jns
pop
decb
push
rol
dec
push
adc
scas
popf
imul
ljmp
mov
enter
xlat
push
popf
push
inc
fidivrs
pop
cmpsb
les
push
lods
scas
arpl
mov
jle
jge
lcall
pop
popa
cltd
repz
into
xorb
mov
enter
aas
repz
subb
add
xlat
lods
add
mov
lret
adc
and
orb
jle
ror
mov
and
mov
pop
loope
out
in
sbb
xor
cmp
ja
sbb
in
dec
out
lods
mov
int
popf
cmpsb
clc
pop
cmpl
stos
pop
mov
test
dec
pop
jge
out
jg
aaa
jbe
push
test
add
dec
push
jg
lret
pop
mov
movsb
xor
inc
pop
inc
arpl
xchg
add
pop
lea
and
dec
add
dec
cmp
mov
jb
dec
push
mov
xor
imul
add
mov
push
cmp
rcrb
fisttpl
pusha
push
adc
shlb
insl
cmp
cmp
or
cmp
pop
popa
cmp
je
xchg
out
pop
xor
pop
jne
mov
and
jl
lret
or
fstpt
adc
pop
subb
sbb
add
dec
inc
xchg
movsb
out
push
cltd
fs
sarb
and
dec
cmc
add
mov
pop
xor
les
xlat
mov
cld
pop
adc
int
xchg
enter
daa
arpl
insl
stos
outsb
jo
lock
jmp
cld
popa
inc
pop
jns
movsl
pushf
mov
pusha
fwait
push
stos
fcmovb
and
movb
dec
xchg
insl
notb
inc
inc
inc
dec
test
in
and
rcrl
push
inc
mov
addr16
mov
jb
je
sbb
pop
mov
inc
popf
popa
mov
jo
gs
xor
aas
adc
xchg
push
mov
lcall
add
dec
lds
add
add
sbb
aam
mov
mov
mov
xchg
sub
xor
inc
xor
push
sub
cmp
mov
fldcw
push
sbb
insb
pusha
or
test
push
inc
sbb
rcrl
sub
mov
lret
sbb
iret
test
sbb
mov
orl
inc
aad
cmp
pusha
xchg
sbb
mov
inc
js
mov
mov
lret
inc
xchg
pop
cmpsb
jge
push
int
mov
push
aad
std
aaa
int
jne
xor
out
dec
sub
sbb
sbb
xchg
arpl
mov
jp
pop
dec
outsl
sub
lock
lcall
dec
aad
xchg
jae
and
pusha
xor
nop
inc
sbbl
aas
inc
push
xchg
xchg
out
jb
pop
test
ficoml
std
popa
hlt
fistl
xor
mov
push
xor
pusha
push
mov
mov
dec
mov
movsb
les
jns
dec
daa
xchg
push
and
nop
push
addr16
xchg
bound
mov
lcall
mov
push
pop
addl
push
jo
outsb
cmp
push
jl
cmpb
or
iret
and
fwait
xchg
cld
aas
dec
je
fldt
movsb
ss
leave
sub
cmp
mov
fs
repnz
pop
adc
and
xchg
sbbl
inc
add
adc
movsb
fs
mov
inc
mov
mov
loopne
lea
cmp
sub
jbe
enter
xchg
sbb
cwtl
add
cltd
pop
arpl
out
sub
pop
stc
mov
mov
dec
hlt
cmp
sahf
push
xor
dec
jno
out
sti
leave
push
xlat
lcall
ret
lcall
sbb
or
imul
mov
mov
mov
mov
and
dec
mov
push
out
bound
jo
jl
jbe
int
inc
loope
ret
cwtl
push
push
test
lret
and
shlb
enter
push
sbb
pop
inc
loop
dec
loope
add
push
lcall
imul
cmp
add
cmc
enter
les
cltd
data16
mov
les
test
sub
push
repz
xor
sbb
adc
mov
test
jmp
mov
test
push
pop
add
mov
shll
jbe
and
pop
cwtl
arpl
jno
cld
rcrb
jns
xchg
jl
sti
jmp
out
mov
and
cmp
repz
fstpl
incl
jp
add
inc
and
xchg
loop
or
in
sub
xchg
fidivrl
cmpsb
std
pop
or
js
cli
lret
push
insb
sbb
insb
sti
inc
into
out
aad
scas
jo
lret
dec
sbb
xlat
or
into
aas
mov
mov
imul
add
faddl
andl
arpl
xchg
cmp
jmp
jae
repz
adc
scas
cmpsb
jg
popf
mov
push
popa
imull
mov
inc
dec
mov
push
xchg
push
cld
push
bound
lret
scas
imul
jae
stos
ret
fwait
cmpsl
xor
mov
adc
out
push
addr16
jbe
xor
jbe
fcmovb
test
nop
cmpsl
xchg
in
jo
or
iret
xor
add
scas
push
jae
pop
sbb
imul
mov
mov
pushf
out
push
xchg
ja
xor
call
cld
jae
pop
sbb
fidivrl
mov
jl
mov
xorb
fldl
mov
cwtl
addr16
dec
aam
or
daa
xor
xchg
std
je
push
addl
int
cmp
sub
mov
jnp
dec
popf
cmp
out
mov
cld
or
hlt
fisttps
insb
mov
fnstsw
add
sahf
cld
adc
push
sbb
xor
mov
jp
lcall
mov
jp
outsb
mov
dec
cmpsb
push
adc
xchg
flds
lcall
cmpsl
aaa
dec
lret
lds
lods
dec
push
mov
xchg
or
sub
mov
aad
fisttps
sub
icebp
jge
xor
xchg
xor
sbb
pushf
push
pop
jl
cmpsl
ret
sti
mov
negb
sahf
mov
xor
roll
int
sbb
cmpsb
mov
inc
jmp
jno
fstps
nop
in
scas
dec
in
inc
dec
jo
mov
das
std
sbb
mov
xor
pop
jns
jmp
xorl
sub
das
xor
mov
sti
jmp
mov
xchg
sbbl
dec
mov
outsb
push
xor
pop
test
jle
sahf
mov
or
test
addl
sub
dec
cmp
icebp
xor
inc
jmp
mov
popf
or
add
rcll
pop
pop
xchg
int
dec
xchg
fldl
iret
or
fcomip
test
aas
mov
jp
xchg
sbb
es
sub
insl
lock
push
push
xchg
daa
into
scas
inc
add
xor
hlt
loopne
fimull
or
aam
data16
ret
jns
pop
das
sahf
mov
jbe
jae
push
inc
adc
dec
push
mov
push
push
sub
mov
cmp
inc
mov
xchg
sbb
sahf
pusha
mov
dec
cs
cmp
dec
mov
inc
adc
cmovo
jg
mov
mov
imul
mov
daa
and
and
adc
cmp
cmc
mov
bound
shr
lock
fcompl
pop
js
clc
cli
jnp
add
sahf
jnp
xchg
incl
push
out
imul
mov
pushf
jp
jp
mov
pop
cmp
fs
adc
xor
bound
arpl
mov
add
repz
cld
add
iret
ja
xor
sub
mov
fwait
jne
mov
dec
scas
repz
lahf
or
in
scas
lahf
dec
xor
xchg
andb
sti
fstl
test
sub
mov
xchg
aad
jge
aas
cmp
xchg
cmp
mov
jecxz
es
jp
nop
test
rol
cmp
mov
sbb
sub
iret
pop
fdivr
jns
mov
lahf
sahf
cli
xchg
or
and
and
push
jbe
cwtl
icebp
aas
fnstcw
push
stos
mov
lret
iret
lcall
scas
js
cld
fldenv
sbb
shr
mov
cmp
mov
int3
es
push
add
dec
data16
xor
mov
cmp
aas
int3
mov
popa
push
sbb
push
inc
out
sub
hlt
jne
cli
or
iret
adc
mov
mov
sub
xorl
xchg
orb
sub
loope
stc
icebp
test
packssdw
stos
gs
data16
ja
mov
js
sbb
cmp
div
jne
lret
sub
adc
daa
daa
sti
inc
repz
jnp
addr16
int3
fdivl
cmc
pop
jge
jnp
out
jnp
jbe
test
mov
movsl
mov
xchg
scas
sbb
pop
jae
or
adc
stos
jmp
xchg
jne
insb
mov
imul
sahf
dec
mov
addr16
sub
pop
daa
loop
mov
add
lret
ret
inc
mov
ds
jmp
push
xor
sub
xchg
cmpsl
mov
aas
mov
cmp
sbb
loop
cld
jmp
out
adc
mov
mov
fildll
fldenv
jb
test
into
jo
push
jle
mov
in
fs
push
out
outsb
scas
adc
dec
push
std
fstps
rol
cmpsl
inc
push
sbb
add
push
stos
out
int
sbb
push
jno
mov
inc
push
lods
sbb
das
cwtl
shr
xchg
mov
fsubr
sbb
bound
pop
and
arpl
jnp
das
push
rcrl
or
shlb
adc
out
push
mov
imul
pop
subl
sub
jmp
popa
pop
sbb
mov
cmp
push
iret
out
sbb
decb
ja
adc
mov
fwait
or
and
and
sub
in
aam
in
imul
cld
leave
repnz
mov
ljmp
test
ret
repz
xchg
aaa
fsubr
xor
int3
push
push
or
fistpl
outsb
xchg
xchg
or
xchg
cs
cltd
push
jb
pop
pusha
imul
dec
aaa
call
mov
data16
adc
in
inc
je
adc
popa
ja
cld
pusha
fsubrl
and
add
cli
addr16
sahf
cmpsb
pop
js
bound
test
xchg
dec
jge
lods
sub
jno
and
mov
imul
pop
xchg
adc
jge
pushf
rcrb
sub
pop
int3
fwait
cmp
or
fwait
xchg
dec
mov
pop
leave
dec
add
cwtl
jb
repz
into
xchg
cwtl
iret
int
fnstsw
scas
cmp
ljmp
xchg
pop
push
mov
jp
push
mov
cwtl
fs
movsl
notl
cmp
rcrl
dec
imul
test
loop
cmpsb
jne
lret
mov
lret
mov
pop
push
jb
mov
sub
and
iret
out
aas
lea
adc
xchg
mov
xor
outsl
cld
jbe
inc
pop
sbb
inc
jnp
loopne
cs
call
out
add
jno
and
mov
loopne
shlb
into
outsb
add
mov
rolb
imul
adc
push
jns
in
mov
and
inc
pop
jle
fsubrp
dec
push
sub
add
jl
cmp
lds
out
arpl
sbb
mov
mov
orb
mov
pxor
pop
cltd
mov
mov
loope
inc
ljmp
fucomi
aad
in
in
mov
pinsrw
mov
sub
adc
fwait
lods
arpl
pop
icebp
inc
js
add
add
fs
rclb
pop
or
popf
push
cmp
add
cltd
pop
jno
push
add
cltd
addr16
pop
in
popa
jno
jns
mov
scas
ljmp
push
dec
mov
sub
or
stos
mov
inc
sub
mov
jmp
out
out
cld
or
mov
sbb
jb
sub
mov
jno
repz
and
cltd
sbb
sub
stc
mov
sbb
sbbl
pop
sub
in
mov
mov
or
jb
lea
mov
out
xchg
xchg
pop
add
mov
cwtl
jbe
loop
mov
leave
mov
fmulp
je
sub
inc
aad
clc
or
xchg
sub
movsb
lods
rolb
and
cmp
mov
push
pop
lock
lds
sbb
enter
xorb
push
xchg
inc
jecxz
xchg
add
cli
hlt
les
or
dec
pushf
mov
adc
push
mov
out
rcrl
mov
inc
cmp
jno
rol
inc
cmp
jnp
add
mov
aaa
cld
addr16
jg
fs
mov
subb
xchg
jbe
es
cmp
cwtl
aam
stos
adc
enter
je
push
lret
or
sub
shll
cmp
mov
xchg
xor
mov
scas
stos
in
dec
test
int3
jecxz
in
sbb
adc
push
mov
cmpsl
add
jns
pushf
dec
pop
sbb
push
rcl
jl
fisubs
adc
and
test
adc
adc
jecxz
sti
imul
pop
imul
pop
adc
ss
cmp
xchg
out
sub
popf
pop
pushf
pop
iret
clc
mov
ret
mov
sub
loopne
sub
add
sti
call
dec
shlb
fucomip
sbb
iret
das
mov
sub
insl
jg
fldenv
pop
sbb
pop
mov
mov
es
push
sub
mov
mov
mov
test
insb
arpl
mov
or
cmc
jecxz
mov
lcall
shlb
and
xchg
mov
daa
mov
imul
test
iret
sbb
sbb
sbb
test
ljmp
jge
xchg
in
daa
shll
ds
ret
movsb
test
sarb
inc
jl
and
pop
dec
loopne
cmpsl
aam
push
popf
decb
push
or
adc
pinsrw
sbb
add
cmp
sbb
mov
dec
sub
mov
cmp
jbe
cmc
xor
outsb
sub
sahf
mov
mov
jno
mov
pop
inc
pusha
xchg
mov
das
xorl
testb
fidivrs
inc
insl
push
cmpsl
movl
movsb
xor
push
mov
pop
xchg
push
mov
sub
cmp
inc
cmp
mov
adc
scas
arpl
or
ret
out
sbb
shll
lret
pop
pop
mov
and
lds
js
mov
int3
hlt
xchg
daa
sbb
lcall
repnz
jmp
cmp
xchg
mov
nop
js
xor
jmp
sbb
in
sbb
sarl
sbb
xchg
and
mov
int3
mov
sbb
test
mov
or
xchg
lret
mov
cwtl
in
sbb
pop
scas
mov
mov
or
sbb
movsl
mov
shl
js
and
mov
mov
inc
and
sar
push
or
mov
inc
fmull
or
push
pop
pop
cmp
mov
arpl
mov
das
dec
pusha
push
xchg
push
or
mov
pop
xchg
sbb
call
arpl
jecxz
pop
mov
sbb
imul
cmpsl
icebp
xchg
xchg
push
lea
add
int
je
pusha
sub
es
ret
mov
inc
outsl
mov
notl
repz
mov
insb
inc
adc
je
clc
das
jne
and
lcall
repz
or
int3
mov
lret
sbb
aaa
push
loopne
pop
mov
xchg
out
mov
into
xor
pop
adc
into
xchg
rolb
stos
std
rorb
imul
cmc
mov
jge
mov
iret
jp
scas
sub
push
xchg
push
and
mov
cmpsl
and
daa
jbe
dec
mov
das
in
mov
pop
push
mov
jg
mov
in
sub
addr16
jns
or
mov
aam
inc
or
inc
fcmovb
sub
mov
bound
mov
lcall
push
adc
mov
insl
inc
jmp
pop
sbb
push
sbbb
jecxz
shr
sbb
cmc
and
add
and
imul
mov
xor
cmpsl
out
scas
in
jg
push
mov
aad
inc
dec
push
mov
incl
cmpl
cmp
insl
rolb
mov
scas
sub
rcrl
mov
sbb
std
movsl
lahf
in
in
inc
out
ret
hlt
mov
push
inc
cltd
pop
popf
incb
sbb
push
inc
test
scas
pop
push
mov
sub
out
adc
cmp
jmp
cld
pop
dec
inc
mov
mov
lret
movntq
inc
xchg
test
movsb
stc
lock
movsl
jo
sbb
sbbl
in
jmp
stc
jnp
out
fldpi
rcr
sub
pushl
sub
pop
test
jl
adc
xor
fsts
call
and
and
adc
xor
fs
cmc
outsb
inc
push
orl
insb
mov
adc
imul
add
sbb
sub
cmp
test
cli
xor
and
pop
mov
movsb
ljmp
or
cmpsb
mov
sbb
pop
adc
loope
jns
loopne
les
xchg
data16
test
ret
repnz
movsl
iret
jo
orl
cmp
fimull
push
jp
mov
rcrl
and
adc
cmovo
imul
mov
cmp
loope
push
mov
sbb
mov
sub
daa
and
scas
xlat
sbb
pusha
sub
sub
ds
adc
pushf
andnps
sbb
ljmp
in
cwtl
mov
cld
lret
push
addl
mov
aaa
push
pop
and
dec
fucomi
loope
jno
xchg
sub
popa
in
cmp
adc
sub
xor
push
cmp
dec
mov
sbbb
pop
xchg
xchg
xlat
inc
pushf
pop
mov
movsl
cmc
fstpl
and
pushl
or
loopne
cmpsb
sub
xchg
mov
adc
std
sbbl
jecxz
loopne
inc
sub
lods
mov
jle
out
xor
call
jp
xor
adc
sbb
iret
sub
daa
mov
xor
aad
dec
sbb
lock
ret
fisubrl
jg
push
push
aas
cmp
xchg
add
dec
and
fdiv
in
xchg
inc
push
jo
inc
cmpl
lea
xor
mov
push
popf
outsb
cmpb
jg
add
inc
adc
xor
jne
popf
insl
or
pop
push
hlt
loopne
or
lea
insl
mov
inc
sub
dec
push
or
stos
outsb
cltd
sbb
or
int
jmp
hlt
push
jbe
in
ftst
sub
movsl
or
outsb
pushf
jns
int
popa
cli
inc
mov
lahf
int
xor
aad
push
xor
sbb
gs
add
xor
and
sbb
jbe
cmp
push
mov
push
jae
test
lsl
mov
push
sbb
dec
imul
and
lret
mov
push
cs
dec
insb
outsl
in
jmp
mov
neg
fstpl
jne
loopne
pop
ret
lret
or
adc
ss
lock
and
ljmp
xor
insb
pop
push
jecxz
insb
jae
test
push
sub
mov
jb
hlt
pop
ds
push
rclb
inc
fdivs
and
fbstp
inc
add
sbb
movsl
and
and
adc
pop
ljmp
loopne
sub
mov
mov
adc
dec
pop
repz
pop
jmp
push
cmp
mov
mov
pop
inc
cmpsl
aam
scas
inc
aaa
js
cltd
jb
and
test
lea
xor
xor
shll
insb
mov
sbb
fmull
fsubs
mov
sub
inc
out
mov
xor
mov
add
sbb
in
cmp
sub
jle
icebp
movsl
push
lret
shrb
insl
mov
xor
out
adc
fidivrs
xchg
xchg
dec
into
and
cmc
or
test
std
int
adc
and
fs
clc
outsb
cmpsb
les
pop
lods
sub
inc
stc
and
aad
adc
mov
xchg
push
adc
xchg
out
mov
add
lea
xchg
outsb
insb
or
cli
mov
cmpsb
aaa
mov
clc
es
movsl
ja
clc
fs
es
dec
sarl
int3
nop
jns
lcall
pop
inc
test
mov
xor
adc
and
adc
push
add
bswap
fstps
divb
lods
aaa
or
push
adc
stos
cmp
sub
mov
sub
adc
dec
lahf
jle
dec
jae
rol
stc
insl
jl
test
lahf
sub
xchg
xchg
jbe
push
sub
pop
adc
cmp
xor
dec
fsubrs
mov
pop
shll
xchg
sbb
dec
rcl
divb
push
mov
sarb
push
mov
fxch
icebp
adc
mov
int
xchg
add
or
lea
aaa
push
clc
loop
in
adc
push
or
mov
es
data16
push
cmp
inc
sbb
dec
xor
pop
jbe
mov
xchg
jae
adc
insb
shll
in
cmpsl
in
xchg
sub
inc
and
sbb
lret
dec
push
mov
and
lds
xor
and
jne
rcr
cmp
lcall
xchg
mov
fiaddl
les
lahf
stc
lods
and
xor
lcallw
mov
aad
gs
pop
inc
mov
cwtl
jno
in
scas
orb
jb
xchg
clc
mov
stc
jge
sbb
cmp
push
test
xor
add
imul
decb
sarb
dec
dec
ljmp
fucomi
outsb
scas
xor
jne
push
push
mov
jp
jnp
clc
adc
jmp
loope
pop
ret
fistpl
jo
std
movb
ret
xchg
pop
mov
leave
cmp
dec
dec
fisttps
xor
mov
mov
inc
inc
pop
popa
pop
mov
mov
pop
call
pushf
mov
insb
cmpsb
movsl
rorl
cmp
jo
jo
cmpsb
pop
cmp
scas
xor
loopne
loope
mov
outsb
sub
and
dec
pushf
inc
sub
scas
ret
pop
jl
decb
cmc
sbb
jbe
leavew
mov
pop
test
inc
in
fwait
and
cmp
jge
mov
dec
and
jl
movsb
sbb
aad
and
sbb
sbb
mov
stos
mov
mov
adcb
faddl
sub
and
cmpsb
leave
fs
ljmp
adc
inc
das
into
xchg
out
repz
out
test
mov
loopne
std
jbe
push
add
push
fs
ret
shrl
mov
lds
cmp
sbb
cwtl
xchg
jae
popa
or
jp
pop
cmp
out
push
pop
mov
lret
mov
gs
mov
jge
lods
mov
out
popa
cmp
fwait
mov
mov
cmp
shll
das
imul
jmp
mov
add
jp
push
adc
cli
and
mov
dec
or
leave
adc
push
es
push
mov
or
jno
leave
adc
sbb
push
sti
pop
loop
xchg
adc
push
into
gs
add
fisubl
fs
add
sub
mov
into
test
and
es
pop
insb
sahf
insb
pop
lret
mov
mov
ljmp
pop
xchg
add
test
mov
mov
fs
and
lock
cmc
out
mov
insb
inc
jae
mov
mov
in
out
cmpsb
xchg
dec
pushf
les
add
in
imul
int3
in
pop
mov
xor
jne
add
push
sbb
or
lahf
or
lea
mov
mov
testb
cmc
pushf
mov
shll
pop
xchg
adc
xor
mov
xlat
dec
push
pop
xor
les
jge
push
das
xchg
push
cmp
test
loopne
leave
in
cld
lret
ret
jns
into
push
and
dec
mov
addl
xchg
and
int3
sbbl
int3
jae
cmp
jb
xchg
sub
xchg
cmp
adc
aaa
and
push
out
adc
mov
xor
fdivrs
mov
shll
clc
dec
cmp
and
aam
or
out
fwait
adc
push
push
mov
mov
loope
ja
push
int
add
outsl
push
adc
inc
ljmp
or
xchg
push
lahf
xor
pop
stos
movsb
enter
mov
cli
scas
ret
outsl
ljmp
adc
inc
jl
in
pop
mov
out
sbb
aad
cmp
cli
loope
xchg
jnp
mov
fcoml
movsl
ds
push
pop
popf
push
cli
fldcw
mov
mov
jb
std
mov
fldcw
cltd
sub
imul
sti
shl
hlt
xchg
aad
add
cmp
and
into
pop
ret
cmp
and
jb
jbe
in
or
xlat
lea
leave
cwtl
loop
jg
xor
loop
push
imul
inc
adc
mov
cli
push
xchg
inc
test
sbb
je
cmp
and
rclb
xchg
mov
ret
imul
xchg
xor
sub
andl
xchg
pop
shrb
fxch
and
fisubl
lods
addl
xor
dec
add
popf
fwait
add
in
xlat
imul
negl
inc
pusha
sub
cmp
mov
fs
out
sub
xchg
jo
mov
sbb
mov
dec
das
js
scas
popa
lock
int
aam
popf
mov
movsl
xor
mov
mov
add
lcall
or
stc
je
add
mov
sahf
data16
sub
cmc
pop
ret
cltd
icebp
lds
cld
xchg
fsubrs
in
hlt
call
mov
jno
pop
lret
inc
jae
jge
and
aaa
cld
xchg
arpl
mov
mov
pop
fistpl
jno
inc
mov
cs
push
or
mov
fcoms
cmpb
mov
daa
sbb
cli
lods
out
imul
mov
stos
loopne
sub
mov
add
and
movsl
loop
out
xor
sub
lods
sub
jno
js
nop
and
ljmp
jecxz
xchg
pushl
iret
xchg
sub
sbb
inc
or
add
test
add
sti
daa
push
sub
data16
icebp
sub
cmc
and
sub
push
fimuls
cmp
inc
ror
xchg
cli
cmpsb
push
std
dec
out
cltd
jo
movsl
xchg
sbb
icebp
insl
fisubl
scas
scas
lahf
inc
push
sahf
fiaddl
jae
movsl
mov
sbb
mov
or
sub
pop
push
out
rcll
ja
mov
shll
pop
imul
test
fstp
push
sahf
lods
ja
pop
movsb
rorl
and
ret
push
xlat
out
mov
sbb
out
lahf
insl
cmp
in
out
sbbb
or
out
cmp
xchg
shl
sub
imul
scas
mov
int3
enter
aas
push
mov
fnsave
add
adc
add
inc
loop
jmp
sub
jp
or
xlat
notb
push
mov
push
pop
inc
jb,pn
cmp
in
jl
mov
fcom
mov
loope
xchg
adc
adc
sahf
mov
sbb
arpl
lret
mov
xchg
inc
add
cmp
stos
mov
pusha
jmp
xor
jp
cltd
das
fcoml
aam
and
mov
cmp
fwait
xchg
mov
mov
lock
mov
fmuls
or
and
and
leave
lcall
cmp
and
lds
mov
lock
filds
in
fwait
daa
inc
cmp
aam
jb
xchg
outsb
gs
jl
sbb
push
adc
pop
mov
fwait
lds
gs
mov
pusha
mov
les
sti
mov
lods
or
dec
fucom
and
aad
xchg
mov
ja
roll
data16
dec
jae
loopne
fs
lock
sub
inc
push
ret
hlt
loopne
pop
pop
cmpsl
xchg
xor
mov
ds
sahf
je
mov
inc
push
push
jp
or
mov
mov
ljmp
into
push
xor
das
outsb
repnz
shrl
pushf
mov
xchg
jbe
jns
in
repnz
jl
and
aas
mov
imul
sbb
mov
push
lock
pop
lahf
or
push
dec
test
fistpll
mov
inc
push
popa
mov
xchg
stc
add
bound
cs
cmp
imul
pop
pop
cmp
test
mov
jnp
ljmp
data16
sub
in
mov
cmp
cwtl
push
cs
pop
cmp
xor
bound
rorl
lahf
outsl
stc
loope
push
jle
inc
inc
sbb
add
cmpsl
pusha
mov
sbb
nop
popf
je
xorl
sub
rcll
sbb
mov
mov
or
dec
and
add
and
aam
loop
and
test
repz
loopne
mov
daa
insl
mov
rcl
lds
inc
sub
into
xor
cmp
cwtl
xchg
and
hlt
and
jl
pop
xchg
orb
mov
sub
xchg
mov
jnp
or
aam
mov
pop
out
cltd
jp
daa
cli
rcrl
hlt
cwtl
push
testb
inc
imul
sub
cwtl
xor
push
out
mov
subl
adc
fistps
jg
mov
mov
jae
outsl
xor
sahf
dec
lods
pusha
fcoms
ljmp
cltd
mov
test
shll
jmp
dec
lret
gs
xchg
enter
jo
mov
sbb
imul
xlat
gs
or
insl
inc
xchg
mov
scas
pop
ficomps
mov
cmp
fucomip
cmp
dec
into
sub
add
mov
leave
sahf
mov
sbb
mov
add
push
xchg
mov
push
cmc
dec
adc
sti
lock
adc
out
mov
and
adc
sub
mov
andl
cmp
adc
movsl
or
lea
pop
adc
fsubl
jnp
out
out
cmp
shr
idivb
push
popa
xor
rorb
jae
and
jecxz
mov
mov
ja
push
jae
push
cmc
add
mov
push
jo
mov
ret
xchg
out
xor
add
push
mov
das
push
loop
push
mov
fscale
cmp
sbb
leave
sbb
pop
or
or
jl
and
mov
cmc
push
sbb
mov
mov
sub
sbb
mov
andb
leave
dec
mov
pop
mov
mov
pop
cmp
add
loopne
loop
loop
inc
inc
insb
sub
cltd
cwtl
cwtl
sbb
cmp
loope
call
add
int
aam
jg
jmp
test
fwait
xchg
inc
stos
faddp
cmp
jbe
or
insb
fsubs
icebp
test
sbb
xor
or
mov
dec
dec
mov
sbb
xchg
jns
rorb
pop
cmp
imul
or
xor
movsl
xor
mov
test
call
mov
jg
in
ljmp
cli
mov
jae
pop
cmpsl
scas
and
test
and
pop
sub
stos
mov
jb
mov
and
jb
xlat
mov
cld
les
and
pop
jno
push
fstpt
push
push
js
cltd
jle
imul
xchg
adc
pop
mov
mov
cli
mov
loope
inc
sbb
lds
les
nop
mov
shlb
mov
mov
test
cmp
in
pushl
lods
enter
out
insl
rorb
fpatan
jne
and
jne
adc
mov
push
pop
cmp
jmp
out
ret
inc
stos
add
mov
imul
jbe
ror
jo
dec
dec
or
xchg
ret
and
mov
out
sub
xchg
lret
outsb
test
test
in
pop
cmp
pop
lds
add
inc
mov
jmp
add
sbb
js
cmc
adc
and
jo
adc
push
pop
je
mov
aam
dec
push
inc
mov
push
lcall
push
in
xchg
leave
sub
icebp
outsl
mov
mov
adc
in
mov
shrl
xchg
lcall
mov
push
pop
sbb
pop
xlat
inc
test
hlt
mov
or
sub
sub
push
mov
aaa
les
sahf
sub
jmp
leave
pop
call
ljmp
pop
nop
pushf
pop
dec
daa
dec
adc
push
pop
outsl
sarl
stos
adc
sahf
repz
adc
sbb
jns
jno
decb
cmp
push
sbb
ss
inc
mov
cld
or
movsb
sbb
pop
dec
out
pusha
cmp
add
das
popa
pushf
cmp
push
push
cld
sbb
jecxz
xchg
jge
popf
popl
std
cmp
negb
lods
xchg
cld
scas
loope
xchg
enter
mov
setp
xchg
sti
aaa
xor
mov
jge
mov
jb
add
mov
inc
mov
cmpsb
ljmp
jg
cmp
fcompl
lcall
sub
xchg
push
out
dec
mov
push
test
push
out
lds
xchg
push
int3
pop
fs
inc
adc
shll
mov
and
and
mov
xor
std
ret
movsl
rclb
push
imul
fisubs
sbb
push
iret
decb
mov
xor
loop
orl
cmp
adc
out
jbe
frstor
xchg
ret
popf
in
sbb
leave
mov
in
mov
inc
gs
rcr
xchg
sub
fsubrs
jle
stos
push
jg
xor
loop
out
ret
into
push
sub
xchg
pop
stos
jp
sbb
data16
mov
insl
cmp
inc
dec
lods
and
jle
mov
adc
mov
test
fistpll
xor
push
out
inc
cmp
fmuls
xor
pop
mov
mov
addl
mov
mov
and
outsb
xor
mov
mov
adc
jb
xchg
scas
xchg
xchg
add
fwait
aas
inc
loop
arpl
je
sub
fstpl
jecxz
bound
not
adc
push
inc
icebp
cli
adc
pop
enter
loop
and
xlat
add
sti
lcall
stos
jecxz
mov
xchg
pop
arpl
subl
push
sub
mov
xchg
dec
inc
push
or
pushf
dec
addr16
cmp
inc
fistps
addb
fsubrs
pusha
int3
xor
loop
or
xorl
pushf
mov
jne
out
bound
adc
pop
pop
popf
lret
mov
xor
scas
int
dec
subb
adc
int3
add
pop
imul
fldcw
mov
cmp
iret
sbbb
hlt
cli
push
adc
cltd
or
xor
fbstp
das
subps
jp
mov
cltd
loop
lcall
sti
jno
mov
dec
cld
add
mov
arpl
sti
xchg
fisubrs
call
mov
repnz
xor
add
sbb
subb
lea
stos
cmpsb
je
out
fwait
jns
test
icebp
hlt
mov
jge
dec
fwait
rcl
sbb
out
cmp
adc
xor
xor
push
pusha
adc
or
cmp
mov
sub
cvtps2pi
aam
cmp
and
and
pop
jecxz
out
std
cmpsb
mov
fidivrs
add
fildll
sub
xchg
cltd
fistps
cmpsl
add
adc
jnp
xchg
push
mov
add
fsubl
xor
cli
sub
mov
and
push
in
test
es
outsb
xor
and
repz
mov
inc
movhps
cmpsb
pop
lods
adc
push
imul
and
clc
outsl
mov
jecxz
cmp
or
pop
jecxz
stc
rcll
cmpsb
add
lock
lods
cld
xor
cld
call
fwait
out
leave
jbe
xor
push
add
and
mov
dec
fisubrs
sbb
xchg
bound
adc
pop
xor
dec
sub
jge
push
add
repz
in
dec
and
es
popa
fldln2
stos
cltd
loopne
pop
add
lahf
and
jge
sbb
bound
or
rcrb
xor
sub
sub
add
in
and
movsb
loope
test
insb
jmp
mov
test
push
mov
jb
nop
sub
push
xor
lea
aad
inc
out
sub
call
scas
xor
mov
jne
dec
dec
xchg
inc
std
dec
sub
int3
inc
jo
push
and
into
push
and
out
ds
fldenv
jle
mov
aas
hlt
or
sub
cmp
icebp
clc
or
es
pop
xor
or
dec
jecxz
push
data16
hlt
push
mov
dec
repnz
xchg
pop
sti
sbb
mov
jmp
cld
and
cltd
sub
nop
mov
test
ret
dec
sub
mov
lret
xchg
test
fiaddl
cmc
adc
jno
sub
xchg
inc
push
sub
and
sub
insb
enter
orb
jae
inc
scas
out
mov
push
iret
xchg
mov
fstps
imul
out
jl
jo
dec
cmp
lods
stos
fimull
mov
lret
lock
jnp
pushf
xchg
jo
cmp
hlt
enter
arpl
and
add
sub
das
out
sub
stos
push
sub
scas
lret
xlat
decb
stc
jb
movsb
mov
dec
out
cmpsb
xchg
xchg
and
cmp
vdivpd
jno
insb
pop
and
cld
clc
enter
adc
bound
lret
cltd
or
jne
fwait
sbb
aam
adc
shrb
in
mov
pop
dec
add
jno
xor
xor
das
mov
sbb
xor
pop
adc
cmp
push
out
sbb
pop
xlat
ret
imul
push
nop
pop
sbb
test
ds
aad
je
shll
xorl
mov
mov
inc
cmpsl
cmp
jg
xor
jmp
insl
stc
gs
in
sub
pop
in
shrb
pop
mov
sarb
xor
lcall
sub
adc
inc
nop
cmpsb
sub
lods
aas
mov
pop
jp
aam
sbb
lret
mov
mov
mov
lcall
mov
push
mov
or
or
das
imul
xor
push
les
adcl
cld
ret
les
inc
test
aam
arpl
inc
cmp
sbb
adc
int
in
cwtl
sbb
xchg
sub
mov
cwtl
pop
popa
ds
mov
in
cwtl
ss
loopne
lea
loop
addr16
lock
jns
repnz
shrl
es
bound
cmpb
lea
add
mov
gs
inc
ficomps
cmp
pop
push
dec
ja
hlt
jnp
inc
inc
sahf
xchg
ret
cmp
mov
inc
sub
andb
dec
or
or
ret
les
int
add
sahf
pop
pop
shrl
push
jb
popa
push
fisttps
sbb
mov
xchg
sbb
repnz
xor
sub
hlt
call
mov
sub
mov
and
pop
sahf
dec
jecxz
mov
pushf
xor
filds
mov
jno
cmpl
inc
ds
nop
sbbb
loop
movsb
ret
into
sub
sbb
mov
sub
inc
xor
jb
jo
cmp
cmpsl
lahf
jnp
int
mov
scas
mov
mov
add
add
add
jns
lods
add
insb
xor
adc
or
push
cmp
dec
jo
leave
fcomps
out
cmpsl
sub
and
popf
out
imul
push
sbb
adc
mov
iret
inc
js
mov
mov
jo
jl
push
bound
leave
int
repz
insb
aas
repz
cmp
movsl
or
xchg
push
sub
call
mov
aam
repz
xor
ret
test
cltd
mov
sbb
or
and
jne
adcl
dec
dec
xor
hlt
lahf
pop
movsb
imul
inc
and
sub
inc
addr16
ds
inc
sbb
pop
int
and
pop
dec
sahf
mov
push
mov
in
sti
xor
ja
sti
sub
mov
jno
gs
stc
jp
stc
leave
stos
neg
sbb
xor
enter
test
inc
lret
sub
jge
jge
mov
and
adc
es
repz
jmp
cltd
pop
in
popa
jbe
loop
in
lock
adc
xchg
shlb
mov
inc
pop
xchg
test
addl
ljmp
pop
or
das
xor
adc
inc
fbstp
arpl
mov
jecxz
addr16
stc
sarb
jmp
fsubp
roll
ss
add
fstpl
and
and
nop
mov
fnsave
xor
jg
lahf
mov
in
mov
icebp
es
sti
imul
addr16
mov
inc
ret
pop
mov
lret
icebp
jl
rcll
ds
xor
xchg
rorb
into
in
cmpsl
lock
push
mov
dec
test
inc
mov
or
stos
inc
cmp
jae
dec
mov
jecxz
add
ffree
sahf
xor
xorb
loop
inc
pusha
lahf
add
mov
inc
fs
fimuls
mov
dec
dec
mov
dec
cmp
ret
repz
mov
pop
pavgw
cli
pop
in
iret
pop
ja
dec
cli
pusha
lahf
imul
or
std
movsb
testb
lcall
inc
or
or
jns
dec
clc
pop
ret
xor
in
pop
adc
and
loope
lock
adc
sahf
sub
les
mov
in
fmul
inc
dec
aas
mov
xchg
jecxz
xchg
in
jge
out
out
cmpsl
mov
mov
mov
cmp
or
fs
daa
push
or
shlb
popa
dec
sbb
xor
ds
jp
outsb
pop
sti
mov
out
mov
cmp
fidivrs
int
int3
adc
and
call
xchg
pop
lret
sbb
movsl
mov
inc
testl
shlb
mov
cltd
mov
psubd
dec
mov
fcompl
vaddsubps
test
lods
add
xor
jb
adc
push
stos
jmp
add
lcall
rcl
and
dec
test
lds
hlt
dec
movsl
scas
movsb
mov
mov
adc
mov
jnp
xchg
xchg
std
aaa
sbb
bound
das
lahf
repz
mov
cmp
push
idivb
cmpsl
cltd
mov
cmp
scas
lods
push
dec
data16
xchg
xor
pop
mov
stc
movsl
inc
insb
pop
xchg
push
int3
mov
rorl
ja
roll
jb
xor
xchg
ret
inc
cmp
push
jae
insl
dec
jbe
xchg
in
idiv
das
pop
or
jae
mov
and
or
dec
negb
sbb
lret
and
add
and
sub
dec
fcmovnb
sti
call
fs
ret
xor
jno
mov
xlat
stc
imul
pop
push
xchg
loop
in
sub
into
mov
mov
aad
fsubp
xchg
repnz
jg
pop
mov
les
stc
or
mov
outsb
call
mov
cmc
fnstcw
int3
jle
sbb
sahf
adc
xchg
cmp
ljmp
adc
mov
aad
ja
ficompl
loope
rolb
test
mov
pop
and
int
and
jb
mov
jns
inc
mov
xlat
adc
loope
add
in
ja
xor
xchg
xchg
icebp
and
out
inc
dec
inc
sbb
mov
gs
xchg
jg
jg
pop
aas
and
cs
mov
jo
aad
cmpsl
mov
mov
xchg
int
push
jge
jp
lods
popa
lock
cltd
les
mov
pop
call
jmp
daa
es
jge
test
in
outsl
imul
sti
adc
fmuls
jmp
jno
jno
fimuls
addr16
pop
sub
loop
bound
leave
gs
int3
mov
and
push
adc
cmp
fistps
ljmp
scas
out
sbb
or
into
mov
mov
sbb
mov
and
rol
pop
ja
movzwl
dec
pushf
jb
pop
pop
xchg
roll
sub
test
loop
pop
sbb
mov
pop
or
sub
filds
pusha
fsubp
adc
mov
mov
arpl
mov
out
mov
dec
pop
dec
movsl
aam
push
cmpsb
and
shll
cmp
das
inc
cli
movsb
fcmove
cmpsl
orb
dec
mov
mov
nop
sbb
pop
mov
movb
data16
aad
mov
stos
cltd
data16
push
rcll
or
push
xor
push
add
pop
fnstcw
adc
jo
fnsave
mov
push
jb
sahf
xor
faddl
out
xor
sub
call
xor
sbb
pop
into
jae
ja
lret
call
mov
pop
and
fstpl
lret
enter
in
cmp
in
mov
jp
pop
sub
push
pop
cld
jl
test
test
fs
es
pop
lcall
push
mov
mov
jge
ret
sub
popa
clc
jecxz
mov
ds
test
mov
xchg
fbld
cmp
dec
sbb
dec
test
push
xchg
dec
fcompl
cmc
jg
push
out
pop
in
das
sar
adc
and
jecxz
pop
jge
inc
ret
mov
mov
repz
push
jl
pop
add
xchg
xchg
aaa
push
stc
addb
out
test
sbb
jmp
jmp
leave
dec
mov
and
mov
fcompl
lods
cwtl
test
cmp
mov
loopne
sub
pushf
pop
push
mov
dec
xchg
lcall
xor
imul
fstpl
mov
lods
sbb
sbb
iret
push
adc
jns
ds
push
fildl
mov
scas
dec
ss
pop
add
mov
int3
lds
push
clc
cltd
and
lcall
xchg
push
neg
inc
movsb
push
outsb
sahf
push
fmul
sbb
pop
jmp
push
cmp
xchg
icebp
out
ja
pop
bound
loop
sti
lahf
loope
sbb
fiaddl
filds
ret
aas
repnz
test
imul
scas
inc
insl
mov
push
iret
loopne
gs
loop
sar
negb
inc
inc
ss
dec
pop
xor
pop
and
fdivp
push
fisubs
stos
adc
rorb
mov
aaa
aas
push
stos
dec
imul
in
jg
xchg
orl
push
imul
ss
in
test
xchg
inc
out
mov
cmpsl
xorl
cmp
les
cmpsl
mov
addr16
gs
xor
mov
pushw
dec
jbe
mov
nop
movsl
or
je
xchg
cli
add
sub
idivl
and
dec
in
cwtl
cltd
dec
mov
mov
sub
outsl
cmp
fwait
out
in
fldl
aam
pop
push
fdivrs
xor
inc
je
fstpt
hlt
adc
mov
xor
and
insl
sbb
mov
loop
cmp
jmp
sub
sti
rcrl
jns
xor
cmpsb
cmp
pop
test
gs
pop
fstl
in
sarl
jge
cmp
push
cmp
inc
js
pop
mov
jne
push
and
mov
pop
and
cs
inc
dec
in
cld
test
mov
and
daa
test
push
aam
sahf
sub
mov
sub
add
or
das
push
dec
sahf
lds
int
xchg
push
sbb
hlt
xlat
inc
ds
jmp
inc
mov
jge
pop
push
xor
lret
stos
xor
adc
fnsetpm(287
push
dec
jne
pop
mov
jns
icebp
jmp
push
fildl
repnz
lock
hlt
out
xor
cmpsb
scas
push
sub
lds
incb
lea
push
push
xor
icebp
ret
andb
outsl
das
sub
pop
or
lcall
cltd
xchg
xor
pop
fwait
stos
sar
pop
call
insb
jp
add
mov
pop
mov
clc
and
and
xor
and
pop
cli
xchg
jae
jo
ljmp
cs
inc
dec
sbb
gs
xor
js
inc
jnp
push
ljmp
lret
iret
inc
in
cmp
add
sub
sahf
mov
pop
pusha
mov
cmp
xorb
iret
lods
imul
ss
mov
push
dec
pop
and
mov
iret
inc
push
stc
dec
inc
and
or
add
xchg
repz
fidivs
lahf
das
clc
or
pop
xchg
cmc
testb
insb
imul
inc
jp
mov
call
mov
dec
arpl
and
jp
jo
or
enter
xchg
sar
fisubl
pop
mov
inc
jne
fnsave
xlat
in
dec
push
test
popa
cmp
sbb
repz
or
jb
and
lret
dec
cmc
xor
pop
aam
add
int
inc
push
subb
in
push
rorl
mov
mov
xor
lret
sbb
enter
xchg
jno
adc
inc
shll
mov
dec
mov
ds
jae
ja
outsb
cmp
lret
enter
iret
jmp
jbe
sahf
dec
insb
xchg
push
jno
push
inc
push
cmpsb
pusha
gs
loop
pop
cmc
in
pop
adc
fcompl
sarl
call
add
mov
pop
das
in
pop
or
testl
inc
adc
jg
mov
shlb
cmp
or
jge
popf
inc
ljmp
mov
push
add
cmpsl
adc
fildl
aaa
clc
imul
adc
adc
pop
scas
pushl
push
popf
xor
in
stos
xor
lds
scas
repz
xor
and
mov
dec
lret
mov
push
gs
stos
inc
incl
xchg
rolb
fisttps
xor
push
in
pusha
and
sbb
stos
dec
jb
jmp
js
decl
xchg
fmuls
push
das
imul
sbb
stos
pop
add
dec
cwtl
cmp
lret
jg
mov
sbb
ret
bound
dec
movsb
scas
and
addb
popf
mov
loop
jo
jmp
stos
adc
pop
stos
mov
insl
inc
mov
popf
mov
pushf
push
xor
lahf
cmp
add
mov
bound
in
bound
imul
std
mov
pop
adc
jo
adc
push
nop
jge
js
pop
icebp
rclb
pop
pushf
int3
push
test
cmp
fcmovnu
xor
lahf
xor
or
and
mov
addr16
adc
movsb
rclb
shlb
add
jmp
nop
repnz
imul
pop
cmp
add
mov
repnz
dec
les
xchg
hlt
lock
cmp
fldenv
mov
cmp
inc
xchg
popa
xchg
cmpsl
sbb
dec
jbe
lcall
ret
cmp
add
lret
shrb
and
lahf
addr16
nop
pushf
xchg
sub
jl
inc
outsb
jg
ficomps
nop
sbb
jo
xor
aam
cli
rorl
add
push
jb
call
inc
sub
negl
imul
inc
aad
aas
cmp
test
jecxz
inc
jne
mov
ds
mov
das
aad
in
mov
adc
add
jbe
sbb
sbb
enter
inc
inc
cmp
lock
jp
popf
ja
push
xchg
outsb
ret
pop
sbb
mov
aaa
and
pop
push
pop
rolb
js
mov
shll
loope
push
and
push
mov
mov
test
push
adc
add
bound
inc
cwtl
cmp
repnz
xchg
test
aam
cmpsl
cmp
cmp
add
aaa
movsl
inc
jmp
xlat
jle
rcrl
aam
pop
add
scas
icebp
call
mov
sbb
daa
dec
and
dec
push
dec
gs
cltd
inc
movsb
cmpb
pop
add
and
das
lea
add
lret
dec
sahf
mov
dec
into
cmp
test
imul
mov
movsb
js
loopne
les
mov
add
mov
jl
sbb
cmp
mov
outsb
dec
add
push
mov
loope
leave
stos
inc
sub
mov
push
aam
pop
jp
push
xor
add
insb
jnp
subl
jb
add
test
add
loope
mov
test
sbb
loopne
aas
mov
stc
ss
call
leave
and
das
and
popf
leave
repnz
push
cmp
fists
dec
insb
pop
push
es
pop
cmp
mov
outsb
rclb
mov
inc
dec
pop
aam
mov
mov
cmp
adc
sub
call
jle
aam
pop
bnd
adc
ljmp
dec
sti
sub
push
inc
stos
cmpsb
mov
rep
sub
jge
out
jg
cmp
pop
mov
call
sahf
pop
rolb
cmp
sub
mov
popa
aad
mov
dec
mov
fistl
loope
cs
mov
outsb
fidivs
data16
scas
lahf
mov
inc
add
xlat
and
dec
outsl
fisubs
loop
data16
mov
dec
and
xor
or
push
jmp
stc
mov
jae
xor
cltd
inc
add
pushf
test
mov
rol
cli
call
mov
dec
ds
push
pop
xor
jns
push
add
push
push
outsb
movlhps
mov
push
or
sbb
test
fstpt
test
fisubrl
xlat
mov
outsl
shrl
out
lea
cs
mov
sbb
mov
arpl
mov
xchg
mov
xor
xchg
push
cmc
jle
sub
or
pop
cmp
xor
dec
push
in
cmpsb
rcll
sahf
mov
js
xchg
shll
movsb
push
add
sbb
add
or
dec
inc
or
xchg
fidivrl
xchg
xchg
adc
mov
lahf
and
stos
mov
pop
inc
jnp
jl
adc
ss
imul
repnz
arpl
jae
sub
mov
inc
jne
outsb
pop
imul
and
cmp
into
rorl
adc
loopne
mov
sub
push
cmp
mov
push
das
push
movsl
pextrw
pop
adc
xor
loop
pop
pop
popl
test
mov
mov
push
adc
pop
xor
jecxz
adc
push
mov
mov
mov
stos
mov
mov
push
das
mov
push
ja
cs
fadd
push
int3
les
mov
cmpb
lcall
loop
xor
add
flds
xor
int3
cmp
xchg
and
shrl
xor
fdivl
dec
cmp
mov
aad
shlb
push
mov
int
cmpsb
scas
dec
inc
sub
jl
das
loop
enter
lret
and
cmp
loope
sub
mov
sahf
mov
adc
pop
jno
lock
out
pushf
jno
cmp
fnstsw
enter
cmp
dec
je
cli
xor
hlt
into
sub
ja
aaa
sub
jnp
loop
lret
test
pop
je
hlt
rcl
adc
out
mov
sti
pop
test
sti
pop
inc
mul
int
adc
ss
sbb
add
daa
mov
repz
xchg
jno
inc
xchg
int3
sbb
push
insl
jno
dec
adc
lods
addr16
gs
test
hlt
test
lcall
stos
fisttpl
addr16
out
or
lea
inc
adc
jb
sahf
push
cli
inc
mov
lea
sbb
loopne
ja
mov
xor
int3
mov
ss
ds
je
inc
xchg
xlat
imul
mov
mov
inc
or
push
mov
arpl
fsqrt
mov
daa
push
or
xlat
and
jmp
arpl
out
adc
scas
cmp
mov
ret
dec
pop
sbb
das
sub
cmp
popa
jecxz
fiaddl
popl
ds
mov
cmp
pop
jmp
aaa
dec
out
xlat
pop
lcall
and
lods
in
fistpl
cmp
in
popa
or
add
pusha
mov
jmp
lret
js
push
cmc
gs
das
or
stos
mov
pop
jo
std
fisttpll
outsl
addr16
scas
pop
sti
lret
dec
ret
sub
mov
scas
les
inc
cs
mov
in
jno
xlat
int
pushf
mov
add
jnp
mov
ret
jae
testw
sub
push
adc
movsb
dec
in
iret
pusha
mov
inc
mov
nop
fisubs
shlb
das
mov
hlt
or
mov
aaa
add
icebp
sbb
sti
fdivrs
ret
nop
dec
jle
iret
pop
and
sarb
pop
and
push
pop
int
or
mov
pop
xchg
or
dec
sub
push
sbb
aas
and
aad
movsb
jecxz
sub
xlat
jl
repnz
cmp
dec
cmp
outsb
mov
inc
movsl
mov
lods
dec
mov
inc
adc
mov
ja
out
out
jb
daa
addr16
pop
ss
mov
jne
xchg
test
cmp
or
inc
or
cmp
add
stc
popf
repnz
adc
nop
fdivs
inc
xchg
xor
sar
cs
mov
aam
fs
or
push
jno
lret
jbe
xchg
sub
dec
fimull
mov
lret
jns
decb
or
in
pop
push
pop
test
lret
sbb
cwtl
mov
jp
cmp
shlb
inc
or
jo
pop
cmp
xrstors
jmp
mov
scas
jmp
jbe
rcr
fmul
cmp
iret
mov
inc
insb
and
jbe
add
dec
mov
leave
fnstsw
dec
inc
pop
imul
cmpb
and
or
loope
mov
sub
cmp
cld
fdivl
movb
cmpsb
sub
enter
out
xchg
dec
movsl
dec
jecxz
push
or
mov
insl
in
mov
xchg
cmp
mov
xchg
mov
mov
and
jl
dec
into
xchg
loope
cmp
mov
cld
sub
mov
xor
sti
and
fsubrs
iret
cmp
mov
cmp
push
mov
pop
xchg
aaa
push
jge
mov
mov
pop
mov
and
cmpb
fisubrs
adcl
xchg
or
das
insl
loope
xchg
insl
lock
push
loopne
scas
jno
pop
xor
add
lock
pop
out
stc
xchg
in
sub
shrl
and
jmp
lods
or
adcb
mulb
test
das
sti
pop
push
js
inc
js
push
into
lods
xorl
adc
je
shlb
shll
inc
xchg
cs
mov
mov
scas
cmp
mov
mov
jnp
push
cltd
mov
lods
jp
push
dec
inc
subl
push
mov
push
jmp
outsl
mov
loop
push
aas
ja
mov
xchg
inc
ret
je
cmp
xor
mov
dec
mov
sbb
inc
lods
and
dec
out
sub
xor
repnz
rcrb
aam
mov
mov
fnstcw
pop
fcmove
pusha
mov
aam
mov
or
fsubrs
jb
fnstsw
inc
jb
daa
xor
lret
pushl
or
mov
movsl
pushf
push
inc
out
cmp
push
push
push
les
pusha
mov
bts
icebp
push
push
js
or
inc
test
push
dec
xor
in
data16
movsl
loop
int
adc
in
addr16
and
movsb
out
mov
loope
int
pop
mov
cltd
inc
stos
xor
outsb
sub
inc
push
add
pop
andl
pushf
inc
cmpsl
pop
inc
gs
fisubl
ja
aaa
scas
jno
les
mov
add
mov
data16
in
pop
inc
mov
dec
pop
fcompl
rcrl
stos
or
les
xlat
or
jo
je
xchg
jle
repnz
xlat
aam
inc
xchg
test
add
mov
or
lock
or
adc
push
leave
pop
ja
fs
mov
std
cmp
les
das
fisttps
test
loop
pop
int
sub
jne
sub
jle
push
push
xchg
cltd
push
cmp
outsb
shlb
sbb
jae
and
mov
xor
out
cltd
les
xor
push
mov
mov
and
scas
mov
jle
int3
sub
pop
cli
cmp
out
loop
addb
nop
aas
push
out
add
mov
fisubl
aad
jae
add
push
enter
pop
mov
or
dec
and
xchg
pop
fwait
sbb
mov
adc
jnp
arpl
inc
scas
adc
jno
add
test
cmpsl
jo
aam
mov
enter
mov
jg
insb
lret
jns
dec
mov
xchg
mov
inc
or
nop
dec
cli
test
in
dec
test
clc
add
xchg
add
repz
xor
daa
add
cmc
inc
inc
xchg
fadds
stos
sbb
lret
arpl
mov
dec
sub
push
fimuls
rorb
fcoms
add
out
xor
repnz
and
lcall
lcall
push
lahf
lods
inc
popa
add
xchg
ja
sbb
push
mov
push
scas
mov
dec
mov
test
cmpsl
sbb
fisttpl
sub
jp
jg
outsb
out
repnz
ljmp
push
addr16
jg
scas
push
mov
popf
aad
rcl
bound
movaps
pop
stos
push
int
arpl
mov
cmp
clc
scas
aaa
pop
pop
add
jb
sahf
fwait
sub
stos
and
jno
je
sti
or
pop
jo
cld
inc
out
wrmsr
cld
mov
mov
test
loopne
out
and
mov
iret
insb
fsubrs
aad
outsl
imul
xchg
rcrb
shrb
movsl
xor
ret
push
test
aad
fs
scas
jne
xor
cld
inc
xchg
and
and
out
jno
add
push
outsl
idivl
insb
testb
xchg
add
xor
pop
xchg
and
sbb
mov
das
hlt
scas
jo
scas
push
cwtl
cmp
cmp
out
xchg
mov
cltd
pusha
cld
xor
sti
jne
sub
lods
dec
es
adc
fsubrp
out
xor
or
adcb
xchg
fdivr
push
xor
movsb
enter
dec
mov
add
shlb
or
mov
dec
jmp
repz
cli
mov
outsb
xor
xor
pushf
out
pushf
xor
in
mov
push
loope
in
jo
mov
icebp
aaa
xchg
aam
xor
jae
and
in
or
jmp
nop
addr16
mov
inc
shll
cmp
add
imul
pop
fcoml
ja
pop
cli
push
arpl
lret
frndint
push
sub
ds
out
mov
pop
fmull
mov
add
loope
xor
mov
inc
rorl
add
out
pushl
mov
cli
fsubrs
popa
sub
sub
xchg
ficompl
std
push
jae
out
into
jge
mov
cld
rcrb
push
scas
sbb
adc
ror
push
adc
mov
or
cltd
icebp
les
subl
mov
and
push
insb
sti
push
lock
outsb
mov
outsb
dec
les
adc
mov
mov
sbb
out
mov
or
fstps
cmc
mov
test
jns
xchg
paddd
out
and
test
mov
call
out
cwtl
sub
mov
mov
and
pop
push
push
rcrl
imul
negl
out
jne
push
scas
fsubs
and
movsb
xor
add
arpl
out
sbb
xchg
jne
mov
jbe
imul
jae
repnz
lahf
xchg
mov
cwtl
or
mov
std
in
pop
xchg
pop
inc
lods
icebp
pop
pop
xor
icebp
or
les
mov
outsb
ss
add
mov
imul
or
sbb
aam
test
mov
cmpl
push
lock
jmp
shrb
push
pop
xor
adc
push
xchg
mov
aam
add
movsb
jb
jo
ret
sbb
add
lret
addr16
pop
add
mov
or
ja
push
push
add
ret
mov
jne
movsl
xor
and
not
mov
push
test
cltd
adc
subb
fisubs
es
mov
pop
add
mov
jnp
mov
rorl
and
inc
sbb
mov
rcrb
xchg
enter
ljmp
push
cmp
and
pop
sahf
imul
xor
mov
xlat
push
jo
call
inc
aad
inc
xchg
es
outsl
ss
push
sarb
mov
std
xor
js
insb
mov
push
mov
push
pop
ss
dec
jle
je
xchg
add
hlt
push
jecxz
jbe
sub
xchg
or
mov
add
or
or
dec
addr16
lret
js
loope
shr
push
test
pslld
mov
in
out
jmp
lahf
aad
outsl
adc
iret
loop
imul
cmp
jb
pop
ret
jmp
xor
in
movsl
xor
xlat
sub
pop
les
sbb
dec
std
mov
lcall
mov
mov
dec
push
cmp
inc
xchg
cwtl
loop
cwtl
out
and
daa
pop
adc
inc
pusha
roll
icebp
mov
cmp
and
push
inc
pop
adc
fs
mov
add
lods
mov
iret
ja
aas
jnp
orb
push
jecxz
jl
xchg
nop
adc
dec
mov
xchg
out
popa
cmpb
cmp
add
mov
jno
adc
add
into
dec
cltd
faddl
sti
arpl
jg
dec
ret
fisubrl
movsl
out
aad
push
dec
mov
adc
jmp
ret
mov
push
sbb
mov
loop
sub
sbb
iret
cltd
pusha
pop
cmp
adc
xchg
outsb
andb
addl
ds
lahf
cmp
pushf
fidivs
sub
in
jl
or
xlat
push
mov
repnz
shl
dec
mov
mov
scas
rorl
mov
xor
and
and
xchg
jecxz
cmp
add
js
push
in
insb
dec
addb
movsb
sar
addr16
scas
loop
rorl
mov
stos
xlat
xchg
sub
mov
add
cmp
push
xchg
or
push
pop
inc
mov
mov
push
mov
das
stos
mov
mov
add
lea
jge
cmpsl
movsb
test
push
push
popf
pop
orb
xchg
adc
movaps
shlb
out
inc
movsb
fists
push
or
into
and
dec
das
mov
testb
jp
dec
xor
scas
xchg
andb
mov
frstor
out
fstl
add
mov
add
xchg
sbb
mov
sbb
mov
mov
insw
mov
jnp
roll
push
es
dec
andl
sub
mov
sahf
adc
xchg
addr16
and
scas
sbb
mov
or
aad
and
pop
ds
cli
xchg
jns
repnz
loope
push
repz
int
jp
pop
dec
out
orl
xchg
iret
adc
inc
mov
rclb
sahf
ret
push
or
test
xchg
or
xchg
dec
and
and
pop
jo
sbbl
mov
add
sub
mov
pop
popf
dec
rcr
adc
adc
popf
lods
out
fadds
in
xchg
mov
jmp
push
push
cmc
or
es
and
test
jno
mov
mov
inc
mov
hlt
cmp
xchg
sbb
das
xor
adc
jecxz
movsb
repnz
bound
cmp
loop
andb
fidivs
ret
lock
lahf
cmc
pop
out
jns
xchg
cmp
xchg
iret
jp
shlb
xchg
xchg
in
dec
mov
jo
rcrb
test
loope
mov
cmp
rcll
push
and
test
shl
push
mov
rclb
jnp
xor
fildl
in
or
aam
jo
test
sub
sub
ja
adc
bound
mov
mov
cmpsl
adc
jmp
mov
fcmovbe
lods
lret
add
adc
mov
out
pop
pop
lock
or
ret
push
add
out
jp
pop
js
out
je
outsl
enter
inc
push
add
mov
xchg
ret
pop
ficoml
and
pop
gs
jl
sbb
fldcw
cmp
adc
inc
jno
insl
stc
outsb
jle
jl
into
xchg
inc
shl
pop
shr
mov
inc
in
test
add
in
dec
aam
test
sub
add
clts
or
data16
mov
mov
xchg
sbb
or
jnp
inc
out
jge
ret
push
dec
lea
inc
rcr
fs
mov
jo
or
mov
mov
jnp
dec
cmp
jbe
shl
and
fs
mov
out
lea
das
ficoml
adc
out
scas
in
cmp
and
loop
rorb
mov
mov
add
popf
lret
mov
push
xor
das
push
lret
mov
ret
mov
shrl
arpl
imul
aaa
mov
aam
xlat
sbb
test
aam
lahf
or
mov
jns
adc
sarl
dec
aad
into
pushf
pop
ret
js
out
sbb
inc
shlb
ljmp
stos
jmp
push
dec
sub
dec
iret
or
jnp
fstl
pcmpeqw
fisttps
addr16
cmp
test
testb
and
mov
icebp
test
push
int3
mov
pop
cmc
inc
scas
adc
cld
in
dec
push
int3
and
push
xchg
cmp
push
shll
sub
push
xchg
enter
outsb
xor
cltd
push
or
popa
xor
xchg
lret
mov
aaa
sbb
add
xchg
outsl
movsl
xlat
addr16
test
out
sub
imul
cs
or
dec
leavew
stos
adc
dec
inc
inc
push
mov
dec
xchg
and
jl
lea
cmp
pushw
arpl
sbb
dec
jmp
movsb
insb
in
lods
jl
inc
mov
pop
negb
insl
cmp
int3
sarb
aad
xor
ja
in
xor
mov
mov
mov
xchg
sbb
mov
push
jo
repnz
mov
push
test
pop
fcmovnbe
rcll
imul
adcb
cmp
shl
cld
sub
repz
orb
arpl
xlat
xor
adc
test
sub
jmp
repz
adc
sbb
mov
cwtl
std
jns
adc
push
cmp
sbb
jmp
cmpsb
lret
xor
add
or
cmp
inc
les
scas
pop
add
mov
add
js
mov
inc
mov
mov
pushf
inc
push
sbb
lock
adc
pop
pop
in
xchg
mov
pop
mov
arpl
sub
test
sub
popf
mov
push
cmc
push
cli
imul
push
dec
in
pop
xchg
fcoms
pop
xchg
pop
test
and
vxorpd
aaa
jnp
or
daa
inc
test
rolb
fstl
cmp
in
sbb
lea
test
lret
inc
das
jb
and
xor
mov
inc
stc
dec
call
mov
ror
movsb
addl
push
and
jmp
and
addr16
sbb
cs
jne
shrl
and
sarl
pop
cmp
dec
jbe
xchg
fisttpl
cmp
mov
inc
orl
cmp
dec
add
pop
cmp
loope
js
mov
flds
cmp
mov
fwait
cmp
adc
push
push
dec
mov
clc
or
sbb
sub
push
lock
fcomi
pop
popf
xchg
outsb
and
stos
stc
adc
or
lods
pop
pop
movsb
test
xchg
pop
push
lret
jle
jnp
pop
mov
and
iret
mov
adc
pop
sub
mov
lods
mov
pusha
scas
or
in
xchg
dec
pop
mov
sbb
jl
out
lock
push
mov
ret
jp
push
inc
adc
cwtl
test
fldenv
jp
push
pop
movsb
dec
jl
mov
push
sbb
add
dec
stos
and
daa
pop
dec
and
mov
fnstcw
xchg
lahf
mov
mov
imul
push
dec
ja
and
stos
push
sahf
xchg
or
sbb
cmc
dec
cmpsb
xlat
popf
cmc
clc
push
lret
or
inc
popf
int
hlt
push
out
sbb
sar
mov
add
pop
mov
dec
push
mov
loope
xchg
sub
push
in
addr16
push
push
stos
and
pusha
mov
xor
in
out
jbe
data16
adc
fmuls
cmp
cwtl
int
hlt
das
and
sub
push
mov
fstps
lcall
xor
aad
in
scas
push
and
mov
mov
fimuls
scas
pop
push
cmp
addb
lret
fdiv
subl
jne
push
push
sub
xchg
testl
rcrl
mov
adc
repz
cmc
mov
les
mov
xchg
push
ret
iret
lcall
pop
in
mov
popa
repz
loopne
add
das
dec
ret
out
aam
enter
xorl
xchg
mov
mov
stos
lea
xor
mov
or
test
cmp
sti
adc
mov
in
add
pusha
lahf
loopne
cmp
fdivs
mov
inc
jge
enter
inc
sbb
fsts
pushf
push
sbb
idivl
inc
mov
xor
add
push
loopne
mov
mov
or
fwait
test
fistl
lcall
sub
out
adc
call
mov
push
and
loop
movsl
cmp
cli
out
jg
cmp
sbb
stc
js
arpl
or
xor
adc
push
ror
mov
mov
mov
sarl
std
pop
das
fdivs
cld
inc
in
push
mov
aaa
add
jl
fistps
iret
inc
add
cs
pop
bswap
out
fs
xchg
rep
jmp
xor
aam
iret
push
adc
ret
movsl
push
push
push
push
jle
in
dec
pop
fsub
push
and
lods
pop
xchg
loop
movsb
sti
push
ficoms
adc
fldt
test
imul
es
popa
dec
adc
pop
dec
mov
xchg
xor
lods
mov
lahf
jns
arpl
push
fisttpl
mov
dec
inc
and
mov
dec
dec
fstp
andb
sbb
fimuls
ljmp
adc
sbb
aas
pop
js
inc
ja
mov
sub
adc
sub
jecxz
xchg
inc
push
loope
pop
lea
and
mov
cmp
out
fbld
add
lcall
jmp
clc
xor
xorb
cld
cmp
imul
movsl
mov
push
mov
lret
jbe
movsb
jecxz
movsb
add
aam
add
stos
enter
fistps
xchg
dec
sub
jmp
dec
fisubrs
pop
and
int
scas
xor
aam
std
insl
sbb
add
jle
adc
pop
vpaddsw
loope
xchg
fs
popa
test
repz
mov
xchg
stc
mov
iret
into
or
roll
pop
sbb
movsb
sbbb
and
addr16
clc
cmp
iret
jns
fnstenv
jno
dec
sbb
sbb
and
jno
cmpl
fimull
lcall
push
aad
sub
push
mov
jbe
ja
cmpsl
pop
cmp
inc
add
cmp
negb
in
sub
dec
movsb
addr16
out
xchg
bound
sbb
ficoms
xchg
xchg
adc
add
push
nop
xor
mov
adc
push
jne
ret
ret
cmpsb
cmp
leave
test
pop
push
xor
pop
mov
fisubrl
mov
stos
dec
push
sub
movsl
mov
mov
mov
adc
cmp
mov
int
in
xchg
pop
mov
mov
mov
jo
jb
sub
inc
js
adc
or
nop
mov
adc
cmp
push
outsl
or
xor
lgs
scas
or
jg
pop
das
adc
aas
jnp
push
dec
hlt
aad
xor
test
pop
xor
mov
jo
mov
cmp
stos
mov
adc
out
dec
cmpsl
ret
test
sbb
addb
lret
lret
out
popf
dec
pop
adc
mov
jp
add
ficoml
test
inc
xor
xchg
es
bound
enter
adc
or
fiadds
pop
jo
xlat
imul
sbb
aad
inc
or
dec
js
cmp
shll
xor
pusha
sub
xor
outsb
push
xchg
mov
aaa
sbb
loope
dec
mov
rorb
into
mov
adc
cmp
jae
and
cmc
pushf
aaa
add
push
call
gs
jns
push
into
sahf
mov
jg
adc
in
mov
sub
dec
decl
cmp
pop
shrb
mov
pop
dec
jp
enter
sarb
dec
test
sti
sarb
push
and
imul
mov
das
iret
pop
aaa
lock
fs
push
std
in
pop
inc
jbe
jae
addr16
ss
xchg
and
repz
test
inc
imul
pop
cs
paddusb
pop
cmp
xchg
cmp
push
mov
sub
aas
daa
out
addb
sbb
sbb
pop
sub
add
adc
mov
or
cli
push
pop
ds
sahf
dec
aam
push
sbbl
push
or
or
aaa
hlt
sarl
faddl
mov
bound
xchg
lds
xor
xor
lea
pop
mov
insl
imul
int3
ret
lcall
out
fcomps
iret
or
mov
subb
pop
test
pusha
adc
lods
es
cmp
mov
mov
popa
pop
insl
stc
add
inc
out
adc
mov
inc
inc
pop
js
xchg
clc
lds
es
adc
inc
lahf
scas
cmp
xorl
js
jnp
lahf
fadds
jbe
pop
jb
and
mov
mov
and
push
bound
inc
lcall
mov
cmpsb
iret
dec
mov
mov
dec
or
test
pushf
mov
or
dec
lret
sub
dec
xchg
or
fsubs
jb
inc
stc
loopne
lea
xchg
inc
pop
jno
lret
or
push
pop
rolb
xor
in
orb
sub
dec
dec
cmp
insl
fidivs
dec
jp
cwtl
inc
imul
jecxz
and
xchg
xchg
or
mov
cmpsl
outsl
mov
inc
mov
in
jo
jg
push
dec
adc
dec
inc
jnp
xchg
jo
xchg
mov
sub
add
push
cld
test
cmp
push
enter
push
xor
sbb
cmp
mov
push
sbb
mov
imul
cmpsl
not
pop
movsb
aas
mov
sub
pop
adc
pop
fcmovbe
fisttpll
ljmp
cltd
jg
outsl
rep
dec
push
fstps
pop
mov
aad
sub
jnp
dec
call
jge
xor
add
mov
dec
inc
or
cli
inc
mov
fsubrl
test
add
and
jl
outsb
and
add
mov
mov
push
neg
and
and
lds
inc
or
jg
scas
sub
daa
test
mov
push
jg
fiadds
subl
ja
icebp
shl
popl
dec
adc
cmpsb
sbb
gs
xchg
int
pushf
xchg
push
insb
mov
pop
xchg
xchg
mov
in
mov
cmc
inc
push
in
mov
loopne
dec
in
push
in
cmp
and
sar
mov
sbb
jae
jbe
adc
and
cmp
mov
mov
lock
jnp
sbbb
loope
jg
sbb
lods
adc
push
pop
cmp
mov
mov
pop
in
faddp
leave
cwtl
cwtl
xor
fdivp
sub
push
add
push
cwtl
jl
push
sub
lret
cs
xchg
es
cmp
sub
xchg
jle
push
mov
mov
pop
mov
aad
and
mov
mov
repnz
pop
jecxz
mov
add
imul
mov
lods
sub
xor
sbb
jae
mov
rcll
pop
xchg
xchg
lret
in
cmc
out
mov
sahf
pop
lds
fsubrs
lret
jmp
dec
mov
shll
dec
dec
fistps
pop
sub
add
mov
outsl
xorb
push
call
cmp
pop
or
in
pop
int3
xchg
sub
daa
push
out
xor
lods
ficompl
pushf
lahf
adc
jge
loop
shrl
push
xor
cmpsl
xchg
lahf
xchg
outsl
nop
loop
ljmp
adc
pushf
push
pop
inc
sahf
daa
push
add
cmp
mov
dec
cli
and
dec
xor
out
in
mov
pop
push
xchg
clc
jl
cmpsl
dec
xlat
pop
jne
cltd
push
fcoml
test
or
jmp
mov
adc
iret
rclb
stos
pop
outsl
push
fidivl
mov
add
ss
and
loopne
shll
xchg
pop
pop
pop
xlat
xlat
test
fldenv
gs
mov
cld
cmp
cmpb
push
ret
iret
inc
js
cs
lods
orb
icebp
rolb
out
loopne
mov
aad
imul
jge
mov
mov
movsl
pop
test
push
pusha
sbb
lahf
xchg
mov
int3
pop
orl
fcmovnb
adc
cmp
mov
jmp
and
out
sbb
ret
mov
pusha
inc
lock
out
sub
cmp
push
popf
bound
jns
lock
xchg
xchg
scas
repz
addr16
bound
addr16
mov
out
lcall
mov
jne
lret
in
lcall
adc
fcoml
pop
adc
xchg
xchg
aaa
dec
outsb
js
adc
aas
rclb
xchg
pop
data16
data16
mov
mov
push
and
push
shlb
xchg
outsb
pop
push
or
cmp
mov
fsubr
repz
sub
mov
arpl
xchg
jmp
lea
and
shrb
jmp
in
xchg
and
stc
sarb
push
and
xor
sub
mov
adc
pop
sahf
jp
sar
or
pusha
lods
clc
mov
cmp
popf
push
jae
shll
adc
mov
sbb
in
int
add
xchg
test
pop
and
add
xchg
sbb
add
scas
push
testl
push
sbb
aam
mov
aas
add
pop
outsb
mov
scas
insl
or
push
fistps
mov
xlat
out
stos
and
aam
jg
sarl
dec
outsb
cltd
sub
jo
mul
sbb
mov
in
sahf
sbb
pop
inc
jbe
in
push
xchg
popa
inc
imul
mov
repz
loopne
lea
push
add
adc
sarb
fcompl
mov
in
lock
ror
leave
sbb
mov
pop
jne
pop
outsb
adc
cmp
add
lods
push
add
lret
cli
mov
test
loop
add
lret
int
lahf
inc
ja
in
mov
fistps
inc
in
lret
mov
push
jp
stos
xchg
in
xchg
imulb
fcomi
dec
pop
cmp
pop
cltd
jb
hlt
jb
jne
mov
cs
mov
lret
je
mov
fldenv
and
jmp
out
adc
xchg
mov
add
pop
mov
jg
call
pop
fbld
and
das
push
lock
sub
or
lret
push
pop
push
outsl
aad
push
testb
adc
imul
arpl
popa
mov
je
pop
xorl
dec
cmp
rorl
and
test
xchg
leave
cmp
adc
cld
inc
add
testb
pop
jne
jae
imul
cmp
cld
mov
inc
lret
adcb
call
push
mov
mov
sbbb
fs
sti
mulb
cwtl
mov
imul
into
pop
mov
and
popf
std
testl
mov
aam
shl
pop
push
lahf
xchg
mov
or
popl
fsubrs
push
in
data16
jp
dec
jmp
scas
mov
mov
mov
mov
xor
outsb
stc
cmp
push
ljmp
sbb
rorb
in
adc
jno
add
pop
jbe
in
dec
inc
add
xor
lret
xor
movsl
xchg
ljmp
sub
xchg
insb
gs
push
xchg
mov
mov
popa
out
cmpsb
push
sub
jnp
mov
mov
sub
fdivrs
bound
in
dec
jbe
or
inc
cmp
inc
out
or
test
or
push
jge
test
sub
mov
and
mov
in
jne
in
orl
or
cmp
or
gs
test
out
shl
pushf
jbe
or
movsb
daa
jp
std
loope
test
mov
xor
aam
xchg
leave
add
mov
leave
lahf
lds
push
inc
pop
int3
inc
dec
in
or
sti
insl
sbb
mov
ret
sub
pop
pop
sub
sti
cs
fstps
scas
sahf
or
dec
inc
data16
clc
aas
dec
sbb
jmp
add
inc
mov
inc
imul
rolb
pop
test
mov
dec
pop
dec
decb
cwtl
push
js
mov
leave
cld
add
jo
aaa
movsb
push
fmull
int3
mov
outsl
jecxz
cltd
das
inc
jno
rcrb
icebp
das
jge
rcrl
pop
clc
push
jbe
xchg
pushf
xchg
xor
incl
std
adc
nop
cmp
sbb
cmp
test
pop
pop
sbbb
push
add
push
imul
cmp
or
lock
sbb
sub
sar
andl
pop
cmp
pop
or
pop
xchg
loopne
rclb
mov
sti
push
add
jge
adc
inc
adc
pop
stos
or
pop
ffree
push
mov
addr16
or
xbegin
or
clc
sub
adc
mov
out
sub
adc
leave
sub
mov
mov
or
sub
xor
test
xchg
dec
fdivs
into
ret
jno
xor
leave
inc
mov
xchg
into
jb
mov
outsb
out
add
in
lds
dec
stc
pop
decl
imul
lds
pop
add
call
popf
stos
repz
jmp
mov
ret
enter
dec
lret
loope
jb
aaa
or
jle
fldt
adc
testl
xor
insl
mov
mov
stc
lds
shll
jmp
push
jnp
or
pop
shrl
cvtpi2ps
inc
aaa
xchg
sti
xchg
pop
inc
shr
andl
aam
sub
xor
ds
inc
mov
divl
ds
orb
xchg
dec
mov
adcl
xor
repz
xchg
pop
mov
loop
lret
sarl
add
inc
xchg
cltd
jl
lods
xchg
adc
sahf
fiaddl
and
subb
sub
loope
cwtl
push
sub
mov
pushf
pop
lea
enter
lret
mov
sti
jae
sysenter
mov
flds
int3
inc
out
mov
push
std
cld
ds
cld
or
cwtl
aam
and
cwtl
add
clc
cmp
in
ficoms
sbb
mov
cmpsl
hlt
mov
lods
jnp
pop
loopne
aas
ja
repz
std
push
cmc
sbb
sbb
mov
call
inc
and
and
push
mov
push
dec
push
pop
add
adc
shll
ss
jmp
pop
sbb
fwait
xchg
inc
sub
iret
mov
add
movsl
inc
clc
test
jg
lods
sbb
xor
pop
in
imul
mov
push
sbb
push
sbb
mov
jle
and
lods
xchg
test
sub
mov
dec
mov
jns
std
jmp
stos
mov
mov
aaa
stos
pop
add
das
cmp
out
dec
or
inc
mov
and
sarl
ret
push
stc
aas
enter
cmpsb
mov
std
repz
jge
jno
or
adc
mov
dec
inc
lock
add
jmp
inc
fnstsw
cmpsb
not
xor
cmp
ljmp
popf
insl
ret
cld
outsl
cmp
jnp
repnz
jbe
mov
sahf
cld
subl
xor
mov
mov
imul
mov
scas
out
repnz
cwtl
sti
push
sbbb
push
push
insl
jno
movsl
rorl
push
idivb
test
test
xchg
mov
das
fmul
ds
into
xlat
dec
push
pop
mov
jae
mov
mov
fstpl
adc
adc
cld
add
out
dec
push
lahf
mov
xchg
popf
lods
mov
lcall
pop
sbb
dec
mov
mov
lea
scas
push
cmpsb
jno
mov
in
sub
test
xchg
fbstp
lods
xchg
mov
js
shlb
aam
jnp
subb
sbb
xchg
mov
inc
call
dec
ret
dec
fcoml
sbb
rorl
or
shl
inc
pop
fdivrl
xchg
fnstenv
push
sbb
and
xor
aam
add
inc
call
enter
decb
dec
xchg
mov
adc
in
mov
jge
push
pop
std
xor
stos
les
mov
mov
adc
rcrl
jae
push
pop
inc
lret
push
outsl
add
and
sbb
inc
xchg
xchg
aaa
and
cmp
fsts
out
cmp
dec
aaa
out
mov
mov
jae
dec
jns
xchg
aam
lcall
stos
jge
insl
inc
mov
cltd
ds
lret
movsl
sbb
push
jmp
ds
fnclex
cwtl
lcall
push
cmp
pop
roll
pop
mov
or
fstps
pop
or
sub
mov
aam
les
cmp
jo
jl
call
dec
lcall
ret
mov
stc
in
pop
and
jo
cmpsl
xchg
insl
jl
mov
and
sub
add
add
bnd
js
mov
inc
scas
sarb
or
repz
ss
daa
shlb
iret
pop
inc
ret
mov
scas
push
sbb
inc
outsl
add
dec
mov
pop
mov
xchg
dec
pop
pop
or
fdivrl
leave
push
push
sahf
sbb
mov
sub
inc
mov
insl
lea
xor
mov
and
out
test
or
pop
dec
lcall
jbe
push
jle
fbld
dec
adc
fnstcw
sbb
ja
cmp
rorb
shrb
sarl
lret
fiadds
pop
ds
es
push
inc
lds
sub
dec
lods
cmp
pop
xchg
push
push
out
sbb
cmp
cmp
push
mov
mov
adc
mov
jne
test
or
pop
adcl
dec
aaa
mov
inc
movsb
mov
adc
stos
adc
inc
mov
dec
stos
and
mov
inc
lods
mov
test
out
mov
pop
jb
addr16
and
inc
sbb
idiv
push
pop
xor
out
mov
test
and
cs
icebp
or
gs
mov
xor
cli
pop
hlt
mov
pop
sub
inc
pop
lds
add
fucomp
xchg
adc
inc
into
mov
cwtl
add
push
push
sbb
jecxz
sbb
scas
fisubl
add
pop
sahf
sbb
pop
sub
fwait
ret
add
inc
cmc
aas
loopne
lret
shrb
imulb
popa
mov
andps
adc
imul
sub
jne
xor
imul
into
or
dec
in
inc
arpl
aad
subb
adc
in
mov
xchg
adc
dec
test
inc
push
pushf
pop
out
jl
and
xor
and
xor
xor
icebp
loop
pusha
pop
jge
xchg
and
clc
insl
int
fcmovnb
repz
dec
icebp
cli
cmp
test
imul
test
adc
out
mov
test
loope
pop
mov
lahf
add
nop
mov
cmp
dec
aad
loope
je
imul
lahf
movsl
pop
popl
cvtdq2ps
les
push
jne
les
pop
xor
jle
add
neg
xor
add
mov
imul
sub
pop
les
je
fcompl
mov
ret
pop
push
nop
mov
jecxz
sub
pop
jns
insb
lret
dec
mov
sbbb
test
ja
jb
arpl
mov
jecxz
cs
out
xor
mov
and
or
cmp
dec
dec
imul
jo
push
lock
xor
and
nop
jl
push
clc
leave
ja
push
iret
xchg
repnz
dec
xchg
fucomip
pop
adc
jae
push
adc
sbb
add
dec
xchg
lds
push
das
xor
movb
sub
jbe
push
sub
pop
addr16
je
xchg
mov
mov
sbb
jle
lahf
xor
mov
enter
outsb
dec
add
test
xor
out
js
cmpsl
cmp
popa
lods
cmpsb
mov
pushf
inc
xchg
pop
call
lret
push
sti
sub
shrl
out
mov
data16
xlat
test
add
push
mov
sbb
or
lods
mov
fwait
adc
fnstsw
dec
jb
pop
push
sbb
add
jne
mov
add
dec
jp
xchg
pop
cltd
or
filds
dec
sbb
sub
imul
push
cmp
fsubrs
aaa
jle
cld
dec
ffree
movsl
cmc
imul
xor
dec
hlt
cs
and
xchg
or
addr16
lock
mov
lcall
stc
incb
fbstp
add
add
pop
or
ljmp
inc
inc
test
and
mov
pop
and
pop
cmp
add
fwait
sub
or
dec
cmp
adc
mov
cli
pop
pop
ss
xor
pop
adc
sbb
pop
dec
push
ja
jg
scas
lods
daa
pop
xlat
fidivrl
gs
and
xorb
xchg
out
mov
pushf
or
push
jge
test
shlb
cmpsb
int
push
sub
sub
xchg
mov
xchg
aam
push
dec
add
dec
dec
cmp
sbb
imul
les
xlat
xor
cmp
outsl
pop
mov
dec
daa
popa
call
push
pop
xorl
push
js
stos
jmp
xchg
mov
add
fbld
aaa
inc
sub
mov
mov
lahf
sub
xchg
mov
shrl
add
xor
xchg
cmp
mov
mov
push
shll
insb
in
cwtl
pop
mov
lock
les
jecxz
and
aaa
sub
call
cli
adc
pushf
mov
sub
cmp
mov
mov
adc
das
adc
mov
popf
mov
insl
cli
dec
inc
xor
sub
and
pop
ja
mov
jne
ficoms
xchg
dec
sub
adc
lret
and
dec
pop
filds
xchg
into
negl
and
xchg
cmp
into
cmpsb
mov
outsb
add
pop
hlt
lret
dec
pop
jbe
sub
and
dec
in
adc
mov
jo
sub
jae
add
xor
xchg
stc
inc
fidivs
mov
jnp
arpl
loopne
lret
add
mov
fcomps
add
ja
push
sbb
mov
push
fsubrs
pop
jnp
jge
xorb
in
add
addr16
mov
pop
inc
push
outsb
dec
pushf
push
xchg
cmc
clc
adc
pop
stos
sub
push
push
dec
and
jl
call
arpl
daa
int
pushf
nop
push
mov
cli
sahf
sbb
fucomp
movsl
divl
lds
push
inc
ficompl
repz
stos
jge
iret
dec
ja
jge
shll
movsb
out
and
cli
sarl
faddl
adc
inc
insl
repnz
lods
cmp
push
pop
pop
ret
xchg
or
inc
or
or
imul
loope
cmc
cmp
adc
push
das
xchg
push
push
pop
mov
pop
inc
sub
dec
aaa
fmull
test
insb
inc
repnz
pop
mov
ja
xor
mov
loopne
or
jo
test
mov
popw
sbb
ljmp
jns
or
xlat
nop
xor
jge
adc
std
lds
mov
bnd
xor
inc
faddp
aas
mov
pop
les
add
fstl
loop
out
dec
add
cmp
repz
sbb
stos
adc
push
es
lahf
adc
sbb
push
mov
xchg
inc
mov
cmp
pop
jp
cmp
dec
mov
xor
push
jo
pop
mov
punpckhdq
or
insb
ret
mov
inc
sub
in
mov
int3
and
out
es
xchg
hlt
xor
mov
jae
add
pop
cmp
imull
mov
icebp
xchg
mov
mov
add
les
loop
xchg
lcall
push
pop
mov
mov
jg
mov
movl
push
mov
adc
sti
fisubl
pmullw
stc
fcmovne
push
and
leave
adc
loop
or
jae
and
incl
xchg
mov
addb
mov
call
adc
ret
xor
jge
and
movsb
loope
cmp
mov
popf
xlat
push
pop
fldl
aad
add
push
in
negb
cltd
mov
data16
push
fstl
sbb
mov
hlt
and
xchg
adc
test
orb
call
jecxz
test
cmp
and
push
xor
js
xor
adc
mov
xchg
or
out
incl
aas
int3
lods
push
sbb
subb
and
ss
addr16
dec
xchg
sbb
ret
xor
sub
dec
fcom
push
mov
push
mov
push
mov
stos
push
lods
push
scas
cli
mov
push
aas
lods
jae
pop
out
mov
jne
rclb
lds
lock
mov
xor
jae
out
mov
push
out
adc
adc
or
pop
mov
jmp
sbb
mov
test
mov
iret
dec
mov
int3
roll
cmp
je
mov
ret
mov
iret
and
pushf
cmp
imull
dec
mov
add
jnp
ret
jno
dec
push
xchg
fsin
mov
jae
mov
sbb
push
and
cld
dec
push
mov
ja
repz
push
pop
icebp
mov
dec
lahf
jmp
shll
rcrl
imul
shlb
inc
mov
push
xchg
repz
mov
ficompl
adc
stc
and
mov
cli
mov
ljmp
mov
xchg
bound
and
mov
push
xor
mov
mov
mov
loope
out
jnp
inc
sbbb
mov
xchg
xchg
cmp
mov
cmp
jl
lret
and
scas
cwtl
jb
mov
shrl
jne
stos
rcl
test
lcall
mov
mov
push
mov
hlt
mov
xor
lret
in
push
jmp
pop
push
pusha
cmp
stc
mov
mov
aad
push
fistpll
shll
imul
xor
test
scas
or
mov
lods
lea
mov
std
enter
sbb
clc
inc
shlb
lret
daa
add
push
jo
mov
pusha
mov
inc
mov
xor
xor
lret
xchg
dec
jg
lahf
xor
xchg
mov
adc
inc
or
push
or
cmpsb
fprem
sbb
test
outsl
pusha
lock
lret
test
sbb
or
jge
outsl
sbb
fnstenv
push
out
xchg
xlat
cmc
push
mov
int3
ljmp
ret
pop
repz
hlt
daa
xchg
imul
xchg
in
pop
sti
pop
adc
js
rcrb
arpl
inc
dec
adc
insl
mov
cmp
ja
xchg
ljmp
mov
shll
mov
mov
loopne
inc
mov
into
ret
cmp
lret
sub
add
repz
push
inc
xlat
clc
xorl
arpl
adc
cli
mov
addl
fdivs
jns
loope
andl
std
push
ret
dec
test
pusha
ss
inc
cmp
xor
cmp
sub
loope
dec
ja
das
inc
stos
lea
out
mov
lcall
iret
mov
adc
scas
hlt
scas
lea
push
mov
pop
lea
insb
fistpl
sahf
mov
sub
mov
add
mov
nop
dec
push
in
and
iret
pop
jnp
fistps
sarb
sbb
sub
inc
dec
cli
popa
aam
adc
fbld
push
dec
test
dec
test
xor
pop
cld
mov
fs
jmp
pop
and
fidivs
aam
movsl
cmp
insb
aam
push
pop
scas
inc
stos
lahf
xor
add
imul
adc
mov
ss
mov
pop
stos
aad
jmp
lret
pusha
jl
add
shll
xor
sub
ds
fistps
inc
xchg
into
mul
dec
cmpsl
xchg
or
cmp
jbe
hlt
int
cmp
inc
imul
sub
rol
fs
mov
mov
sub
sbb
xchg
cmc
lock
insl
std
cld
add
sub
in
in
jae
rcrl
out
lea
into
repz
pop
insb
loop
or
call
sub
inc
cmp
dec
xchg
ss
ficoml
push
popf
pop
insl
cmp
jbe
aas
mov
adc
hlt
mov
ret
or
and
outsl
bound
xlat
cmpsl
in
lahf
or
pop
in
repnz
out
test
sub
out
dec
cld
cltd
pop
scas
shlb
mov
leave
cld
lds
xchg
sbb
loope
push
out
jmp
mov
mov
iretw
test
inc
mov
addr16
cmp
rorb
xor
sub
sub
incl
arpl
or
push
mov
insl
xchg
mov
mov
popf
enter
lret
imul
xor
jo
aam
dec
flds
testl
jno
rcll
pop
xchg
ds
movsl
push
pushf
mov
mov
enter
pop
pop
mov
pop
add
lds
fidivl
mov
pop
imul
stc
jo
in
xchg
adc
add
scas
out
std
cld
fs
fcmovnu
pop
ljmp
add
test
mov
fwait
xorb
or
in
push
lods
addb
xor
push
inc
mov
and
imull
dec
inc
movsl
repnz
adc
push
repz
imul
mov
sbb
jmp
sub
mov
sub
imulb
sub
loope
push
out
shll
cmpsl
cmpsb
add
lods
mov
sbb
xchg
pop
push
rcrl
arpl
and
negl
stos
cmp
or
cwtl
add
test
mov
cltd
push
je
or
test
movsb
imul
js
js
stc
testl
stos
jns
mov
int3
out
loop
fsubrs
sti
push
adc
adcl
pop
iret
out
jno
xchg
outsl
js
xchg
push
inc
ss
decb
pop
mov
pop
xchg
mov
lods
movzwl
fst
aaa
mov
jecxz
add
jle
xor
cs
loop
xchg
dec
push
push
ljmp
imul
xchg
xchg
xor
dec
int
fdivrs
xor
popf
divb
dec
les
fcmovbe
mov
scas
mov
fisttpll
sbb
in
push
and
hlt
test
negb
je
jae
mov
mov
testl
jle
movsb
pop
dec
fcoml
les
push
sbb
stos
sahf
xlat
cmpsl
jl
scas
not
test
pop
popf
int3
clc
in
out
lods
xor
jnp
test
add
lods
inc
cld
pushf
push
scas
xchg
and
inc
imul
mov
jne
insl
ret
and
lock
leave
pop
pop
push
rclb
stos
dec
fstpl
popf
push
lds
test
imul
mov
fdivl
and
pop
fdivl
mov
adcb
mov
sub
test
ja
js
adc
jl
push
outsb
dec
mov
push
xchg
add
sbb
scas
decl
inc
loopne
fstl
dec
imul
fldt
lahf
pop
cmp
aad
rep
dec
stos
arpl
mov
add
sahf
cmp
outsb
lock
push
jne
fcomps
iret
rclb
push
cmp
push
fimull
aam
inc
mov
js
insb
and
jecxz
dec
cmp
push
into
cmp
icebp
adc
in
into
adc
dec
les
jo
pushf
loopne
and
cmpb
fmul
pop
outsb
ss
sub
cmp
cld
dec
lods
jmp
or
fnstcw
fnstenv
lds
mov
sub
cld
jno
cmc
bound
fldcw
push
cmp
fsubp
mov
jae
outsl
jo,pn
adc
enter
and
jmp
add
fnstcw
ljmp
gs
pop
mov
push
adc
rorb
add
mov
pop
call
outsb
in
push
jo
push
outsb
or
jge
stos
dec
jmp
sbb
fwait
pop
sub
and
inc
ja
cmp
push
imul
outsb
pop
sbb
pusha
je
out
int
aas
aam
outsb
inc
popl
mov
cmc
mov
push
mov
cli
pop
inc
dec
push
test
leave
out
fcoml
test
mov
inc
adc
andb
mov
inc
sub
stc
push
cmp
dec
push
mov
push
or
dec
inc
or
xor
xor
jge
xchg
loopne
js
rep
push
outsl
ds
xor
inc
call
aad
pop
add
outsl
js
loop
cmp
and
sbb
sub
movsl
add
mov
pop
or
mov
jo
jecxz
es
imul
pusha
mov
cmp
mov
cmp
jle
std
cmp
lcall
leave
dec
push
jle
adc
fldenv
xorl
ljmp
sbb
inc
xchg
dec
pop
roll
xor
mov
lods
fwait
pop
lods
std
cmp
rcrb
insl
dec
push
xchg
adc
addr16
sub
push
sub
mov
mov
mov
adc
mov
mov
lcall
rorb
fidivs
pop
outsb
sub
adc
add
push
outsl
test
arpl
pop
push
stos
loop
mov
sbb
sub
js
or
mov
pop
mov
mov
and
xchg
inc
test
stos
int3
or
pusha
adc
sahf
dec
push
test
jmp
mov
and
mov
and
lahf
xlat
insb
popa
lods
jae
sbb
xor
jns
out
mov
xor
cld
push
pop
mov
xchg
cmp
adc
jecxz
ljmp
add
pop
mov
sbb
imul
sbb
mov
ljmp
mov
dec
repnz
rcll
in
ljmp
popa
xchg
mov
in
push
scas
mov
and
dec
jle
pop
cmp
push
inc
hlt
mov
push
mov
xchg
popa
ret
add
sbb
push
int
in
imul
or
cmpsl
xor
int3
mov
pop
imul
cmpsb
lds
test
fisttpl
jge
mov
pop
inc
push
sbb
inc
sub
loope
out
call
or
mull
push
sub
pop
dec
test
adc
sbb
leave
add
pop
inc
shrl
daa
xor
rclb
xor
xchg
adc
fcmovne
mov
lods
jp
mov
testb
leave
mov
jl
jl
movsl
cltd
mov
bound
sbb
jle
loopne
mov
lea
pop
pop
shrb
xchg
lds
mov
xor
add
pop
pavgb
jecxz
or
ret
adc
or
gs
repnz
cli
add
pcmpgtw
fwait
cmp
mov
aas
pushf
rolb
ss
jecxz
inc
dec
mov
and
push
cmp
mov
sub
scas
cld
lods
xchg
xchg
inc
test
inc
xlat
fistpll
shld
mov
enter
cmp
das
mov
mov
pushf
inc
clc
fiaddl
divb
cmp
inc
dec
push
lds
mov
mov
xor
das
lcall
jle
pop
or
rcrb
ret
push
cwtl
cmp
xchg
adc
dec
adc
mov
scas
mov
pop
pop
mov
xor
mov
and
insb
jmp
adc
xchg
xchg
mov
adc
ss
push
out
std
sahf
loop
lock
mov
lret
sbb
fwait
dec
jp
ficoml
adc
push
inc
ret
ds
stos
cmpsb
sub
mov
mov
mov
inc
xchg
push
fdivrl
cmc
repnz
daa
or
inc
inc
cmc
fdivl
pop
out
and
or
aas
inc
in
sbb
pop
sbb
hlt
mov
aad
sub
jns
cmp
or
je
jecxz
out
cmp
roll
push
pop
ja
int3
ret
lcall
incb
push
popf
push
data16
pop
mov
icebp
ret
cmpl
lods
filds
bound
test
push
adc
and
inc
gs
idivl
lret
enter
cs
jb
sub
out
repz
loope
call
mov
jae
jge
or
cs
into
in
out
cmp
xor
fwait
push
jecxz
push
sub
inc
in
push
lods
imull
or
ret
dec
push
push
out
std
addr16
mov
push
shlb
int
adc
pop
cmc
mov
mov
data16
inc
fwait
pushf
cmpsb
xchg
mov
mov
sub
fisubs
adc
mov
pop
mov
add
gs
call
add
inc
sti
dec
and
inc
hlt
cmp
sarl
dec
sub
pop
mov
sbb
data16
mov
sbb
pop
and
xchg
push
pop
nop
cmp
insl
jecxz
jnp
out
in
negb
test
stc
popa
push
lea
xchg
je
gs
iret
aaa
pop
xlat
scas
add
mov
insb
subb
negl
jbe
popa
mov
inc
loope
push
or
sbbl
xchg
rcrb
ret
aam
cmp
dec
xor
mov
adc
mov
mov
xor
cwtl
xor
std
cltd
mov
pop
jmp
dec
sbb
adc
dec
std
fcmovu
adc
sahf
mov
mov
sbb
push
cmp
add
ljmp
and
xor
mov
into
sbb
jns
mov
jecxz
mov
hlt
cmpsb
cmpsl
pop
mov
add
push
push
jae
outsb
mov
ja
aam
addb
sbb
inc
test
mov
jle
fbstp
jns
stc
nop
add
mov
sub
rorl
in
xor
push
stos
or
mov
fwait
xlat
jmp
fnsave
dec
into
mov
cwtl
mov
cmp
lret
pop
or
addl
clc
inc
fnstsw
push
adc
pop
cmpb
lock
jne
ret
pop
add
rcll
insl
imul
jae
add
out
iret
push
mov
and
mov
add
movq
push
jp
and
or
xor
cmp
add
shrl
mov
pusha
inc
cmpsb
mov
dec
xchg
sarb
adcl
cmp
pop
nop
add
data16
xchg
xor
cmc
loope
inc
cmp
fwait
out
das
mov
sahf
xor
daa
inc
lds
push
or
sub
sbb
push
add
or
xchg
adc
pop
cmp
xor
push
mov
mov
inc
fbstp
add
jnp
xchg
dec
add
mov
pop
scas
push
mov
cwtl
enter
jns
test
stos
xor
sub
push
mov
adc
dec
sub
inc
mov
fmul
paddusw
out
inc
mov
js
ljmp
xchg
jg
xchg
lods
add
popl
mov
negl
ret
dec
rol
movsb
clc
addb
ss
stc
add
aam
push
jmp
jno
sti
mov
outsb
sbb
add
pop
in
and
inc
sub
jg
ret
call
push
out
repz
adc
stc
push
rcrl
out
jg
lret
mov
adc
adc
fisubs
fldt
aam
arpl
xor
push
sbb
jle
popf
sti
cmp
cltd
arpl
lods
hlt
mov
andl
and
and
and
mov
mov
lock
xchg
adc
cmp
movsb
adc
cmp
jle
es
cmpsl
mov
test
cmp
test
add
mov
mov
and
sub
mov
cmp
mov
addr16
imul
popa
pop
push
sbb
daa
cmp
imul
pop
cmp
pop
rep
ds
dec
pushf
mov
cwtl
adc
ret
loop
es
test
outsl
ljmp
sti
in
loop
xchg
dec
sti
js
insb
add
jp
xchg
sub
stos
scas
mov
xchg
xchg
mov
dec
test
or
sbb
cmpl
and
dec
add
repz
ds
in
std
and
mov
nop
and
iret
sar
sub
sbb
aas
jns
sbb
aaa
mov
xor
adc
cwtl
xor
or
arpl
xlat
sub
pop
or
sub
xchg
mov
lahf
mulb
cld
jne
sbb
ret
imul
jo
cs
mov
sbb
jecxz
push
fs
test
sti
fmul
dec
mov
shll
dec
shld
or
ds
sbb
add
jge
mov
add
sbb
fcoms
or
inc
ficompl
push
fisubrs
add
adc
mov
pushf
pop
je
aas
icebp
addr16
mov
pop
ljmp
js
in
xchg
or
and
xor
adc
dec
adc
movsb
movsb
pop
adc
mov
stos
out
adc
insl
dec
rorl
loope
mov
cli
test
xchg
fcmovnu
out
pushf
ja
sahf
push
or
sub
cmpsl
pop
or
adc
div
dec
dec
jg
test
mov
adc
cmp
daa
mov
insb
rclb
insl
mov
jl
aad
imul
loopne
sub
ds
sbb
cli
call
push
dec
sarl
arpl
ret
mov
push
cmp
daa
fcmovnu
clc
jne
je
mov
subl
ret
test
fldl
mov
sbb
ss
push
test
dec
addb
inc
pop
ficompl
je
push
fcompl
cmpsl
or
fists
dec
pusha
inc
jbe
dec
arpl
mov
imul
movsl
jae
insb
rcrl
mov
stos
xchg
cmp
jp
fcmovne
sbb
stos
push
pushf
and
cli
push
push
ss
mov
popf
mov
imul
mov
mov
cld
adc
stos
xor
rol
cmp
idivl
xor
out
jnp
push
in
or
xorb
xchg
or
ss
imul
cmp
shrl
add
xchg
popf
adc
repnz
std
jmp
xchg
dec
adc
scas
in
sub
out
pop
push
es
dec
push
repnz
add
aam
or
sub
cmp
lcall
notl
lret
xor
mov
loopne
aaa
push
jecxz
fwait
xchg
vcvtusi2sd
sarl
pop
sbb
js
rol
xor
cmp
mov
movsb
xor
ret
xchg
xchg
xchg
ret
dec
orb
fs
rolb
cmp
mov
cmp
sbb
jo
outsl
push
sarl
mov
mov
js
sbb
fwait
pop
mov
and
cmp
loopne
sbb
jmp
fs
scas
lds
push
cmp
ljmp
add
sub
ja
dec
dec
xchg
into
icebp
outsb
fwait
out
loop
cmpsb
leave
xor
pop
lcall
scas
cmc
out
push
adc
aam
sbb
cmp
fisttps
add
lahf
in
mov
push
adc
pop
rorb
push
cmc
test
sub
into
insl
mov
mov
inc
adc
iret
addr16
shl
mov
test
mov
xor
or
cmp
fs
ret
outsb
divb
pop
stos
ret
mov
mov
dec
sbb
jle
adc
inc
mov
adc
fdivrs
mov
inc
lock
sub
jge
decl
dec
jno
add
fldl
fsub
enter
lahf
sti
or
loop
lahf
sahf
pop
mov
data16
icebp
fcoml
jmp
in
hlt
lret
adc
mov
fbld
and
imul
cmpsl
fisttpl
sub
rorb
rcrb
push
dec
jb
test
pop
arpl
adc
das
stos
gs
mov
dec
outsb
push
lods
inc
insl
je
in
pop
inc
cltd
iret
jns
xor
xor
push
ljmp
cmp
fs
pop
int
std
mov
aad
fdivl
add
and
sarb
cwtl
fiadds
frstor
movsl
iret
je
subb
aam
adc
cwtl
jp
jne
sbb
dec
push
or
test
xlat
cmp
adc
adc
or
pause
in
clc
sub
daa
aas
outsb
filds
xor
and
sub
imul
pop
ret
xor
enter
and
xor
xchg
mov
iret
int
mov
icebp
cmp
sbb
stos
rcrl
insl
inc
jb
xor
xor
sbb
adc
sbb
dec
in
push
or
insb
mov
pop
jne
dec
scas
mov
add
sub
mov
outsb
xchg
xor
imul
mov
lcall
or
bound
jecxz
lcall
shrb
scas
or
aaa
popa
in
sahf
dec
enter
int
jecxz
sahf
je
sbb
stos
pop
cltd
pop
rorb
xchg
mov
jne
nop
xchg
je
lea
push
xchg
fidivrl
and
in
pop
pop
aaa
incl
addr16
out
sahf
and
sub
es
mov
or
xor
loope
mov
adc
mov
aas
aam
andb
push
pop
cmp
orb
imulb
and
mov
scas
ljmp
test
fsubrl
jno
test
insl
cmp
lcall
or
mov
adc
pop
sbb
xchg
jnp
stc
das
rclb
das
cmp
stc
daa
test
ret
adc
repnz
pop
cmpsl
jbe
lahf
mov
in
sub
fs
dec
mov
mov
test
mov
add
or
gs
repnz
stc
lret
movsb
xchg
cwtl
mov
ret
shlb
xor
mov
jp
mov
roll
pusha
add
inc
lds
sub
out
and
nop
mov
shll
inc
outsl
pop
ret
xor
or
sarl
out
cmp
xchg
fwait
push
xchg
mov
cmpsl
xchg
add
mov
inc
mov
test
mov
mov
xor
pusha
push
cld
sbb
sub
insb
mov
mov
sbb
sbb
sub
xor
xchg
dec
in
push
out
jb
jl
xlat
shlb
clc
push
test
or
push
lods
mov
push
fisubs
sub
scas
leave
adc
cmp
dec
xchg
pop
jg
out
adc
nop
out
and
add
fidivl
in
iret
das
lods
adc
jno
cwtl
fs
je
xor
sar
jl
xchg
insb
movsb
pop
mov
xlat
inc
cmp
pusha
push
push
into
mov
loopne
push
inc
push
push
adc
jae
cmpsl
outsb
add
add
jl
lds
nop
fstpt
repz
in
inc
movsl
sub
mov
std
aad
js
sub
dec
jno
leave
outsb
jns
in
ja
loop
ret
fisttpll
shll
add
andb
cmpl
int3
cmpsl
xlat
popa
pop
test
adc
mov
sbb
sbb
xchg
xchg
lds
mov
icebp
pop
jnp
sub
addl
movsl
cmp
in
sub
js
lea
or
movsb
inc
push
clc
out
mov
jno
les
cmp
aas
and
ficompl
bound
xchg
or
lret
sahf
divl
cmpsl
dec
sub
fs
jge
in
pop
adc
push
push
and
add
lods
sbb
pushf
and
fisubl
adc
xor
cmp
xchg
nop
fucomi
stos
ret
stos
jp
push
clc
mov
ss
xor
loope
jecxz
sbb
sbb
stc
cmp
jnp
dec
sub
sub
mov
mov
daa
mov
aam
jbe
mov
pop
sbb
ljmp
rcr
daa
arpl
lahf
and
les
jae
add
inc
adcl
sbb
lret
and
pop
pop
push
hlt
fistps
and
adc
ljmp
and
or
adc
add
and
mov
or
cmc
mov
test
xchg
insb
int
sbb
mov
jb
in
movsb
xor
ljmp
lret
dec
lret
mov
adcb
aas
cmp
jl
mov
xor
push
cmpsl
add
xchg
out
loope
lods
popa
stos
mov
sbb
dec
notb
pop
mov
inc
into
and
cltd
lret
dec
and
pop
lods
cmp
outsl
xchg
rclb
xchg
outsb
cmp
stos
scas
out
ja
dec
leave
mov
mov
ljmp
xchg
mov
ljmp
xchg
imull
jne
fstpt
das
cs
push
cmp
pop
into
add
andl
push
loopne
push
xor
xchg
subb
xchg
fnstsw
int3
inc
sub
in
add
adc
jbe
sbb
dec
mov
cs
xorl
fmulp
jb
and
mov
test
les
shrb
pushw
aad
lahf
xchg
popf
xlat
xor
push
fisubrl
adc
inc
push
cld
enter
fldenv
or
cmp
clc
jmp
arpl
leave
xlat
mov
addr16
scas
std
lcall
xor
les
cli
call
std
fdivrp
mov
aaa
mov
lock
dec
lock
pop
and
mov
xor
cmp
movsl
adc
push
leave
std
scas
mov
jo
pop
test
mov
hlt
pop
in
fdivrs
sub
mov
xchg
push
xor
mov
xchg
or
pop
loope
jo
and
je
sbb
lods
adc
and
sub
outsb
sub
ret
cmp
dec
in
add
in
in
xchg
cmp
sub
pop
push
call
insb
jle
outsb
scas
fwait
dec
jae
adc
fsubl
xor
arpl
ljmp
inc
arpl
cli
xor
xchg
sbb
test
xor
es
lret
cmp
xchg
dec
call
pop
cmp
rolb
cs
or
les
xor
rcr
add
cmpsb
outsl
cmp
mov
jo
dec
mov
or
mov
idivb
insl
scas
push
inc
mov
xlat
push
adc
push
cld
xor
or
jecxz
lcall
test
fwait
mov
fstps
lret
fildll
or
cmp
xchg
sbb
sbb
sbb
xchg
jp
pop
inc
push
jne
and
adc
adc
lock
and
xor
mov
mov
imul
inc
xor
pop
in
mov
or
jb
popf
xor
pop
in
and
ret
jge
xchg
sub
rolb
adc
mov
pushf
jmp
pop
faddl
dec
mov
cmp
pop
sub
shrb
in
mov
adc
outsb
ret
out
mov
lds
imul
stos
rolb
jnp
xor
leave
cmp
out
mov
sub
lods
push
out
dec
sub
cltd
ficomps
or
sub
adc
dec
loopne,pn
fwait
and
add
push
test
fdiv
lods
rclb
jl
mov
push
sub
jo
lods
es
inc
or
outsl
inc
outsb
dec
dec
int
mov
out
sub
scas
xor
jmp
mov
femms
cmp
shl
and
xchg
pop
addr16
jl
decl
outsb
sub
pop
js
fsub
push
mov
insl
inc
jl
std
dec
fnsave
test
sti
and
mov
inc
push
add
mov
sbb
lahf
mov
shl
pop
fldenv
out
daa
sub
hlt
hlt
sbb
mov
outsb
mov
jbe
enterw
add
repnz
mov
dec
pop
aaa
xchg
mov
pop
inc
push
sub
sub
imul
pop
outsb
xchg
dec
std
iret
mov
push
sub
pop
cmp
xchg
loop
mov
aas
movsb
imulb
rolb
clc
sarb
jl
fisttps
adc
or
pop
bswap
andb
push
cwtl
flds
fsts
popa
or
lods
gs
and
xchg
push
xor
add
test
dec
loope
sub
pop
es
push
jne
xchg
pop
in
rol
std
mov
daa
jbe
iret
fucomi
test
lods
cmp
addr16
and
test
faddl
ljmp
push
xchg
loop
cltd
mov
in
adc
movsl
scas
scas
cs
add
add
lret
fwait
push
outsb
or
stos
cmpsb
adc
rcll
push
in
add
push
std
push
sbb
rcrb
es
dec
icebp
push
pop
shlb
movb
lods
jg
sub
mov
cmp
gs
xchg
mov
mov
jo
ljmp
mov
in
jmp
test
aam
adc
sbb
or
push
and
jns
xlat
jl
jmp
adc
or
rorb
insl
adc
sub
cmpsl
fnstsw
mov
lods
test
mov
jg
sbb
or
ret
mov
shlb
add
roll
lahf
xor
jle
xor
mov
push
cmp
lahf
cmp
mov
mov
das
enter
mov
stos
insl
mov
cmp
inc
hlt
sbb
mov
mov
inc
daa
inc
test
fisttpll
jl
sbb
pop
shrb
mov
pushaw
push
mov
jae
inc
addr16
jo
imul
xchg
xor
js
shlb
pop
inc
iret
push
sub
mov
pop
xchg
mov
insb
and
xchg
fadds
pop
aad
lret
jb
or
pop
jmp
or
dec
mull
jle
mov
nop
movsb
mov
nop
lret
shll
jno
jb
sbb
xor
push
cmpsl
cld
adc
xlat
inc
movsl
je
mov
pop
lock
and
daa
xor
mov
xchg
mov
pop
jnp
aad
je
or
cmp
adc
sub
sahf
das
int
dec
aam
in
das
xor
loopne
out
aaa
les
out
les
cmp
pop
pop
xor
cmp
xchg
sub
mov
push
arpl
jnp
in
or
xor
imul
repnz
xchg
push
sbb
xchg
push
cmc
outsl
or
push
adcl
and
pop
lods
mov
mov
xor
imul
adc
jo
dec
js
pop
mov
mov
aaa
mov
stc
sbb
ficompl
mov
repz
fcompl
sbb
jg
push
sub
xchg
mov
mov
je
leave
les
sub
jmp
jo
pop
ds
inc
divb
fdivl
push
pop
or
aad
fwait
xchg
in
fcoml
je
push
fisttps
jmp
add
repnz
loopne
out
push
mov
push
pop
arpl
adc
or
mov
and
or
xor
divl
cmpsb
pop
and
lahf
and
std
mov
clc
cli
out
fadds
clc
mov
adc
xchg
mov
into
mov
movsl
daa
loop
and
add
test
lcall
cli
in
ljmp
jo
lods
xor
pop
inc
fistpl
adc
repnz
outsb
push
daa
mov
dec
enter
xchg
mov
in
dec
popf
sbb
jnp
push
or
adc
mov
jbe
out
fs
inc
daa
in
out
ficomps
sbb
aam
sbb
outsb
and
push
jmp
mov
shl
mov
pushf
stos
xor
arpl
pop
adcb
sahf
jl
add
and
adc
test
dec
lcall
mov
test
aas
or
fldenv
imul
cmc
lahf
mov
lcall
xchg
hlt
popa
push
xor
sub
popa
leave
addr16
mov
fs
xor
lds
mov
out
insb
add
int
jnp
inc
das
test
xor
add
jl
and
xor
loop
roll
add
push
sub
push
orb
mov
fwait
sub
test
xchg
push
popa
call
adc
jge
jae
xchg
jle
push
mov
imulb
sub
insl
mov
repnz
mov
sbbl
into
push
cli
jne
je
inc
inc
movsb
popa
movsb
out
nop
dec
scas
sbb
lcall
cmp
and
sarl
lea
jnp
push
cmpsl
stos
jle
jbe
dec
lods
fnsave
push
leave
xchg
sahf
test
pop
xchg
pop
cmp
les
int3
arpl
or
pop
ss
cltd
movsl
xor
aas
mov
dec
lcall
xor
dec
jo
adc
stos
pop
daa
cmp
test
aas
lods
and
push
scas
shl
mov
and
leave
loope
jl
lret
mov
in
bound
int
push
andb
mov
fidivl
ret
dec
sbb
mov
dec
movsl
int
pop
or
inc
fucomip
dec
sahf
popf
pushf
dec
std
stos
iret
in
dec
cmp
ret
daa
mov
cmc
shlb
mov
cltd
outsb
xchg
dec
insb
sub
inc
or
rolb
int
adc
ja
jb
ja
out
pop
insb
push
outsl
cs
rorb
push
and
rclb
cwtl
lock
notb
sbb
mov
mov
cs
push
jg
fdiv
xchg
xorl
gs
and
mov
jbe
add
mov
and
notb
ss
out
xchg
push
pop
and
jg
stos
xor
sub
cmp
xor
in
mov
dec
adc
imul
sbb
dec
stc
push
js
cmpb
daa
xchg
jg
xor
ds
inc
filds
filds
call
xchg
jns
mov
push
sub
cmc
out
jae
mov
addr16
fs
cld
add
arpl
mov
insb
pop
adc
clc
fstl
adcl
add
xor
es
add
daa
js
pop
ja
shll
inc
sbb
cmp
leave
stc
mov
repz
jp
lret
les
and
sahf
mov
hlt
pop
cmp
in
dec
cmp
aas
xor
nop
inc
sti
arpl
mov
and
arpl
sub
push
and
fmul
push
test
inc
decb
fcmovb
test
mov
adc
push
xchg
mov
mov
sahf
jne
arpl
cmp
mov
adc
cli
fsubrl
int3
stos
adc
mov
out
sub
jo
xor
aad
pusha
aad
xor
lods
inc
fsubrl
das
lahf
mov
lods
out
scas
loop
leave
adc
loopne
notl
push
iret
shr
movsb
pop
imulb
mov
test
jge
lret
xor
pop
mov
mov
aas
out
inc
and
lods
jle
cmc
push
pusha
fmull
adc
out
sub
push
mov
mov
pop
mov
pop
mov
test
iret
movsb
lea
lahf
popf
adc
mov
pop
pop
push
adc
test
cmp
mov
sbb
jae
mov
push
xchg
xchg
sbb
inc
push
and
xchg
lret
jnp
lret
cmp
push
sbb
lret
bound
xor
or
std
sbb
mov
jae
dec
jecxz
mov
insl
ret
imul
cs
lret
mov
sub
in
sub
cmpsl
rcll
repnz
mov
sahf
insl
and
or
aaa
pop
adc
sub
lods
movsl
faddl
inc
push
in
das
ret
lods
mov
cmp
xor
fnstenv
mov
test
icebp
rcrl
cmp
mov
fcoml
jecxz
push
les
cltd
xor
mov
lock
pusha
lcall
xchg
imul
lahf
rorb
movsb
jno
iret
dec
jmp
sbb
movsw
roll
lret
and
mov
jge
fs
enter
cmp
push
jo
xor
push
push
es
es
cmp
loopne
inc
out
mov
lds
xor
sub
stos
push
pop
push
fadd
xor
push
subb
shlb
stos
lock
xor
sub
jno
mov
xchg
mov
dec
fistpl
add
aaa
push
decb
aam
mov
shll
ds
inc
scas
mov
out
mov
pop
inc
imul
adc
pop
jmp
sbb
pop
inc
cmpsb
lods
dec
jecxz
test
jmp
xor
and
add
ljmp
xchg
sahf
push
inc
std
nop
cmpsl
mov
mov
dec
iret
push
test
adc
shrb
iret
jb
call
sbb
jle
xor
push
ret
sbb
repnz
xchg
idiv
dec
cmp
lahf
xchg
xchg
and
jmp
mov
mov
lahf
mov
dec
std
add
jo
sbb
push
cmpsl
sub
mov
js
jns
cmp
fs
call
cmp
sbb
aas
ret
popa
inc
jge
mov
push
and
std
fiadds
adc
inc
outsb
cmpsb
xor
inc
jae
jmp
neg
add
lds
nop
in
mov
shlb
push
pop
fcmovbe
jp
test
cmp
pop
jb
sahf
pusha
xchg
divb
sarb
push
xchg
in
inc
fsubrl
mov
or
cmpb
int3
popa
int3
sbb
lock
fs
xor
cmp
mov
lea
cmpsl
sbb
cmp
scas
pop
mov
shlb
or
push
dec
xor
xlat
adc
push
and
shlb
pop
sbb
pop
int3
hlt
les
mov
add
popa
ljmp
add
push
inc
test
mov
pop
nop
dec
cmp
jno
clc
mov
arpl
jle
repz
sarb
dec
lea
adc
popf
je
in
xlat
imul
cltd
inc
mov
sub
ds
dec
int
inc
cmp
fmull
scas
cld
or
mov
lcall
sbb
jecxz
push
fistps
cmp
push
sbb
sbb
scas
mov
nop
pop
cmpsl
push
push
mov
adc
cmp
int3
jle
or
push
push
rcrl
gs
sbb
cmpsl
pop
test
inc
add
mov
adc
lret
ljmp
sub
fwait
mov
ret
inc
js
add
jl
out
mov
push
outsb
shrb
popa
add
and
lahf
jl
jg
xor
push
pop
sub
jle
sti
mov
sub
loopne
cli
jo
xor
and
and
pop
adc
movl
mov
adc
pop
cmp
sbb
pop
adc
add
push
push
xor
xchg
dec
or
mov
sbb
fstpt
inc
pop
and
call
xor
enter
in
lods
enter
pusha
cmpsb
bound
aas
jno
adc
pop
pop
pop
enter
xchg
jno
testb
dec
movsb
jl
jmp
jg
push
fadds
xchg
iret
cmc
ret
test
jmp
push
xlat
xlat
js
adcl
popa
mov
and
aam
test
jo
add
mov
jecxz
dec
sub
add
idivl
xor
push
lds
mov
xchg
push
aam
and
daa
rolb
push
pop
cwtl
xchg
push
bound
mov
test
mov
hlt
mov
mov
add
sub
lret
outsl
and
sarb
loopne
inc
cmp
push
cmpsl
movsl
xor
dec
rcll
mov
or
inc
xchg
cmpb
jns
cmpsl
lahf
arpl
loopne
mov
aas
mov
pop
cltd
lret
lahf
and
lds
outsb
subb
rorl
ss
dec
les
mov
xlat
dec
ficomps
ret
mov
shlb
push
outsl
lret
frstor
push
test
loop
clts
cs
mov
cld
or
fdivs
xor
clc
std
jbe
push
arpl
push
imul
xchg
pushl
inc
test
shll
or
testl
jmp
add
in
xchg
leave
mov
cmp
push
call
xchg
xor
lods
clc
dec
adc
inc
push
popf
aam
ja
xor
mov
sub
xchg
orb
jecxz
roll
and
rorb
mov
leave
sbbb
lea
sub
js
fimull
mov
mov
inc
cltd
pop
pop
xchg
xchg
mov
lds
and
and
mov
xor
mov
push
incb
adc
ss
scas
pop
daa
outsb
xchg
push
mov
out
es
sub
inc
fdivrs
and
js
mov
mov
pop
cmp
xor
push
clc
insl
push
aas
xchg
push
inc
jbe
aad
jb
ja
movsb
add
into
test
dec
and
dec
dec
cmp
loop
sub
jle,pt
mov
std
dec
pop
and
repz
scas
movsl
xchg
cld
fs
jg
shlb
das
mov
mov
lcall
jmp
mov
add
jp
jg
arpl
ret
loopne
nop
mov
jnp
dec
pushf
and
lgs
arpl
sub
or
pop
adc
adc
add
ficoml
xchg
sbb
push
cmpsb
adc
test
ljmp
add
int3
shlb
sub
adc
daa
scas
adc
cmp
nop
jg
mov
lock
adc
xchg
adc
lods
and
lret
pop
xor
inc
cmpsl
addr16
movsl
test
mov
sbb
mov
push
and
inc
inc
inc
xlat
inc
fcmovne
les
xchg
dec
sub
out
stc
aad
popf
ret
pushf
inc
les
pushf
sbb
xor
repnz
pop
aad
mov
je
mov
enter
decb
stos
das
jbe
sbb
sub
add
sub
fcomip
dec
push
repnz
dec
push
pop
out
bound
adcb
pop
loope
add
fucomp
sub
jbe
push
ficoms
loop
xor
cli
sbb
push
lret
dec
movsl
xchg
xor
xchg
xor
lret
dec
das
in
mov
xchg
jp
aam
inc
or
sbb
je
mov
cmp
sarl
repnz
dec
xchg
cmc
add
inc
dec
ficomps
push
mov
add
cwtl
xchg
subl
in
push
addl
pushf
ljmp
ds
popa
lock
cwtl
cmp
dec
jae
pusha
pushf
cltd
xchg
xor
test
pushf
fisttpl
mov
or
test
out
jmp
cli
imul
mov
nop
or
inc
mov
pushl
add
inc
rclb
enter
adc
inc
in
push
lcall
adc
mov
fisubs
sbb
or
cmp
mov
mov
popa
test
mov
sarb
imul
test
push
orl
imul
out
jae
bound
in
sahf
lret
mov
loop
stc
sbb
je
push
push
aaa
pop
mov
mov
cmp
clc
stos
loope
paddsw
push
popf
pop
pop
push
outsl
cmc
fidivrl
stc
and
scas
mul
fstpl
cld
sub
xor
insb
repz
xchg
add
les
outsl
fcoms
ficoml
stos
fsubs
inc
fstl
pushf
std
dec
test
pushf
cwtl
loopne
adc
aas
jl
dec
pop
sbb
push
cltd
ja
lock
rcrb
jo
and
mov
iret
mov
je
jno
mov
jmp
xor
push
push
push
push
rorl
mov
xchg
outsb
and
repnz
pop
mov
outsl
pop
fwait
xor
xor
stos
jle
cmp
arpl
cwtl
and
inc
lcall
mov
dec
jnp
adc
cmpsl
fcompl
mov
int3
pop
mov
and
movsl
popf
aas
mov
lods
movsl
stos
pop
in
pushf
mov
aaa
loopne
push
sbb
pop
add
cmp
outsl
test
es
out
data16
ss
andb
addb
inc
mov
daa
movsb
loopne
or
loope
and
sbb
jae
in
sbb
mov
and
jmp
addr16
mov
out
xor
xor
cld
aas
ficoms
add
mov
cmpsb
shll
push
cmp
ss
inc
mov
mov
and
testb
rorb
mov
adc
subb
pop
push
std
fmul
out
adc
cs
xor
jno
xchg
xchg
mov
add
mov
dec
mul
add
add
test
xchg
es
outsl
addr16
or
int
imul
adc
xor
xor
nop
mov
sbb
in
push
sbb
mov
ja
add
pop
inc
or
mov
push
out
mov
insl
push
ds
cwtl
mov
mov
das
jecxz
cs
push
in
ret
pop
rcrl
mov
cwtl
mov
mov
dec
add
xor
jp
je
movsb
hlt
popf
insl
pusha
mov
dec
jle
push
jl
dec
cmp
inc
std
aaa
ret
pop
jg
xchg
fcmove
test
mov
and
adc
sub
inc
and
push
ja
loope
cmpsl
sbb
pop
lock
or
hlt
mov
out
jg
das
and
pusha
ds
inc
push
pop
in
mov
mov
stos
adc
shlb
jmp
in
insb
fisubl
adc
sub
ljmp
fs
popf
lahf
mov
dec
lahf
jle
in
das
xor
add
imul
in
popf
jne
jp
mov
mov
adc
inc
sub
pop
xchg
enter
and
daa
xchg
ljmp
push
add
mov
sbb
sbb
cmp
out
flds
cld
push
dec
mov
lds
iret
mov
insb
jno
xor
cltd
mov
pop
loopne
sbb
hlt
cmp
test
mov
xchg
pop
iret
xor
mov
cwtl
dec
jnp
or
fsubl
xchg
and
enter
mov
popa
call
xor
pop
jmp
call
inc
dec
jne
and
jbe
ret
mov
inc
js
push
pusha
mov
pop
call
sub
les
sub
into
je
fstl
fsubrl
fs
aam
stos
out
je
sub
push
xrelease
data16
aad
push
inc
fwait
pop
xchg
jne
iret
sahf
mov
pop
nop
rclb
inc
scas
pushf
ret
stos
inc
lcall
sbb
sbb
inc
push
jns
mov
add
mov
dec
aad
fdivr
in
xchg
sub
pop
xchg
mov
xchg
xor
jno
rcll
sub
pop
mov
jnp
push
pop
sbb
insb
adc
cmp
cs
lret
inc
push
jecxz
xchg
jg
dec
push
stc
adc
cmpsb
das
xchg
fadd
jle
hlt
loope
jmp
in
shl
xchg
push
ficoml
or
rolb
leave
hlt
sub
push
sbb
dec
xor
jbe
test
mov
jg
mov
lret
lahf
aas
aaa
sarb
imul
push
xchg
fidivl
in
test
out
mov
xor
enter
popf
sub
imul
out
pop
je
or
data16
jo
out
cmp
cli
xchg
fwait
adc
cmpsl
enter
lret
lret
clc
sub
cltd
add
stos
inc
mov
fcom
sub
jnp
push
push
std
mov
pop
sub
fsubp
loop
movl
ret
adc
lea
cmp
adc
fisubrl
pop
xchg
cmp
inc
out
les
mov
xlat
push
pop
pusha
mov
aad
jb
xchg
in
mov
dec
add
test
sub
test
mov
mov
test
and
mov
clc
and
and
mov
sub
sbb
jg
push
push
or
pop
cmpsl
jo
clc
bound
test
out
es
mov
add
dec
sti
es
aaa
sub
add
inc
pop
and
push
lret
inc
xor
fistpll
icebp
xchg
cs
add
push
je
js
jb
lcall
push
fcoml
sbb
inc
jne
add
push
push
out
mov
and
repz
sub
mov
repnz
ret
enter
mov
es
inc
inc
repnz
and
mov
in
stos
ljmp
xchg
mov
sbb
mov
xor
mov
adc
std
add
pop
popa
fwait
pop
or
sub
cmp
pop
pop
and
jmp
fsubp
mov
inc
lret
out
rcr
sbb
mov
cld
pop
and
outsl
lret
in
xadd
int3
mov
jne
icebp
xchg
jle
pop
jecxz
insb
inc
stos
lcall
push
das
jge
stos
cltd
lret
xlat
test
rcrb
inc
cs
xchg
mov
ret
or
cld
push
addb
push
lahf
int
in
dec
and
inc
push
insb
gs
mov
daa
mov
jl
and
ds
xor
fldcw
imul
or
push
adc
scas
js
cs
pop
subl
ret
mov
es
mov
std
shl
push
fidivrl
dec
sbb
fcomps
sbb
and
adcl
xchg
dec
pop
jmp
xchg
pusha
dec
cld
sar
add
cmp
popl
shrl
addr16
push
or
je
jnp
sbb
pop
fdivrl
nop
inc
inc
mov
mov
insl
jle
test
push
jecxz
xorw
dec
test
fidivrs
push
insb
aad
inc
pop
je
mov
and
mov
ret
sub
aad
jb
push
into
fsub
mov
lret
cmp
cmc
insl
adc
aad
movsl
repz
shlb
mov
imul
push
sub
mov
xchg
dec
out
xor
loope
xor
sbb
mov
loop
sub
mov
cmp
cmp
jmp
icebp
cmc
insl
xchg
mov
cli
xchg
into
shl
xchg
mov
cmp
add
xor
xchg
add
rep
mov
or
mov
cli
in
mov
cltd
aam
mov
push
test
les
fs
xor
add
adc
xor
fsubrl
pusha
push
pop
push
pop
inc
inc
subl
mov
sub
inc
jne
sahf
xor
daa
call
pop
insl
pop
mov
mov
sub
push
dec
sbb
fsubp
movsl
dec
das
icebp
sbb
arpl
lahf
addl
idivb
mov
hlt
ss
and
in
pop
inc
fstl
loopne
mov
fdivr
pusha
lahf
sub
int3
cmp
sub
mov
xchg
sbb
mov
mov
push
cmp
cmc
imul
and
cmp
jp
data16
add
movsb
loopne
rol
push
mov
mov
gs
dec
out
popf
cs
pusha
iret
sub
xor
pop
mov
and
mov
jp
call
push
xlat
adc
out
rolb
inc
or
out
movsb
or
inc
fcmovb
and
sbb
adc
iret
shll
out
and
push
stc
inc
leave
fwait
lret
lea
mov
inc
test
imul
adc
mov
outsb
lods
adc
push
outsl
ds
sub
clc
adcb
decb
shll
test
imul
cmp
mov
mov
outsl
xchg
dec
lods
sbb
enter
and
and
sbb
xor
adc
inc
push
dec
xor
jns
xlat
xchg
arpl
push
into
add
out
mov
fs
sbb
cmp
mov
jae
add
fiadds
lods
inc
push
push
es
mov
sbb
push
insl
pop
popf
dec
js
mov
mov
pop
orb
leave
lock
imul
out
into
mov
dec
leave
repz
pop
hlt
push
dec
xor
jge
push
cmp
sub
rcl
dec
fstp
scas
inc
scas
jmp
xor
leave
dec
inc
push
and
xchg
fadds
push
jno
ffreep
add
arpl
jl
test
int
mov
rolb
push
and
inc
icebp
cmpsl
or
mov
stos
xchg
inc
mov
insl
shlb
jecxz
test
jmp
push
neg
xchg
jge
adc
mov
bound
sub
mov
rcl
xor
sbb
dec
or
mov
xchg
in
xlat
sub
pop
shll
int
and
add
cmp
imul
mov
popf
ds
jle
addr16
adc
fsubrl
fistl
fbld
jno
and
loope
lock
mov
ds
adc
push
push
mov
cmpsl
dec
popa
add
in
loopne
leave
in
ljmp
fst
int3
jmp
or
test
outsb
sbb
xlat
xchg
cmp
mov
cli
aaa
push
jge
xchg
loop
incl
cmpsl
call
or
sub
ds
sub
jb
fisubl
jg
scas
jmp
ja
push
insl
scas
mov
jns
push
inc
sbb
jp
aad
pop
sbb
push
pop
popa
hlt
adc
ret
pushf
js
adc
scas
push
loop
push
cmp
push
sub
lods
push
shl
insl
hlt
int
xchg
incb
out
lahf
cs
mov
pop
adc
push
sarb
imul
mov
cli
or
aas
inc
xchg
and
or
test
cmp
lahf
jo
mov
cmp
sbb
cli
ljmp
cwtl
aas
xchg
imul
mov
dec
fildl
enter
jns
dec
jo
sub
cwtl
pop
pop
mov
xorl
pop
add
movsb
dec
fsubr
ficoml
aaa
push
cmp
mov
add
js
loope
rcrb
rorl
cltd
sbb
loop
jg
mov
aas
sbb
dec
cmp
pop
dec
pop
push
js
cld
nop
and
xorb
cmp
pushf
mul
mov
fcmovu
mov
and
push
adc
sub
sub
sbb
enter
jo
daa
outsl
leave
cwtl
or
jae
test
nop
xor
cmc
xor
fstps
lret
adc
push
add
mov
add
inc
inc
mov
push
test
clc
sti
movsb
mov
sahf
and
mov
bswap
sub
mov
xor
and
hlt
mov
or
push
sahf
insb
dec
ss
push
lahf
je
ss
icebp
je
and
jo
rcll
aam
cmp
ret
cld
xchg
cwtl
nop
mov
mov
and
out
cmpsb
cmp
cmp
cltd
icebp
js
in
test
in
add
adc
xchg
out
aas
push
xchg
sub
cld
xchg
jg
cwtl
xorb
inc
pop
fcom
repnz
jg
mov
sbbb
aaa
out
loopne
or
daa
imul
das
cmp
fmul
jmp
and
cld
xor
lock
inc
mov
cltd
dec
lock
jo
fldcw
cmp
leave
js
insl
xor
iret
jo
add
mov
xor
xor
repz
cltd
fwait
into
insl
je
movl
stos
add
or
xchg
cli
or
je,pn
je
out
inc
emms
pop
aam
dec
sti
jp
mov
fsubr
add
inc
repnz
push
pushf
push
insl
mov
dec
xchg
mov
cld
dec
cltd
jns
stos
push
and
add
cltd
and
pop
es
clc
cmp
mov
mov
and
mov
cmp
mov
repz
mov
mov
jno
and
popa
loopne
sarb
sbb
pop
iret
lods
call
mov
add
mov
les
mov
mov
sub
cs
shr
adc
xchg
data16
aam
inc
popa
insb
xchg
scas
or
dec
push
cmc
pusha
mov
pop
cmp
ss
cmp
inc
fs
xchg
aas
dec
and
leave
hlt
jne
push
push
and
sub
sarb
dec
xor
xor
dec
lret
mov
jmp
hlt
hlt
lods
mov
inc
dec
pop
xlat
cmc
icebp
adc
pop
and
and
nop
xor
mov
in
ja
arpl
in
arpl
jle
insl
sbb
rorl
popa
jnp
mov
sbb
or
inc
int3
out
pop
ds
add
mov
pop
and
mov
xchg
outsl
dec
mov
or
andl
add
call
movsb
mov
and
stos
inc
jbe
or
add
jl
pop
xor
push
cmp
outsb
add
cmp
adc
iret
cmp
or
sub
xor
dec
imul
aaa
in
mov
push
sti
loopne
mov
int
les
andl
faddl
subl
xchg
mov
inc
xchg
add
xor
mov
pop
mov
andb
sbb
jp
enter
jbe
lods
sub
fidivrs
pop
sub
dec
dec
dec
push
pop
push
in
dec
jbe
and
cld
aaa
fxch
fmull
imul
shlb
cmp
cmc
hlt
sbb
popf
pop
mov
mov
jo
loop
sub
and
int3
push
push
fxtract
sbb
push
xor
mov
mov
fistpll
pop
popf
int3
fisttpl
arpl
xchg
aad
stos
xchg
jmp
insl
mov
subb
sub
sub
inc
andb
pop
mov
mov
xchg
sub
cltd
pop
call
loope
xor
scas
cld
stc
jns
cmp
jne
int3
out
or
jae
andb
insb
gs
outsl
cmp
mov
pop
popa
mov
cmp
in
je
into
scas
mov
lds
mov
test
aas
ret
xor
dec
mov
jp
scas
jnp
ret
mov
xor
lds
push
imul
in
dec
subb
mov
and
add
stos
repnz
jnp
jno
insb
xor
fdivrp
pop
fistpl
mov
mov
push
inc
test
jae
loopne
push
std
rolb
or
adc
in
and
mov
fs
fnstsw
mov
mov
int3
cmp
mov
mov
icebp
push
pushf
pop
pushf
inc
or
clc
mov
les
fidivs
adc
cmp
mov
ss
dec
sti
mov
jno
pop
cld
jnp
data16
cmpsl
ljmp
cmpsb
adcb
in
add
stos
sub
add
cmp
pop
xchg
in
mov
xchg
xorb
ds
push
push
push
xchg
inc
mov
xchg
fnstenv
mov
adc
int3
fisttpl
xlat
add
sbb
or
or
push
push
stc
cltd
inc
test
pushf
lahf
and
adc
xor
pop
sbb
loop
jno
dec
mov
lret
cmp
arpl
sbb
xchg
jg
ret
xor
xor
jno
out
mov
dec
push
mov
pop
jne
arpl
sti
inc
jmp
or
pop
mov
inc
mov
fisubrs
out
std
fmul
in
lds
xchg
je
jmp
shll
sub
pusha
pop
mov
jg
inc
and
inc
sbb
xor
cmp
xlat
and
adc
outsb
fs
popf
sbb
mov
ja
jl
or
movsb
stc
pop
in
cmpsb
out
lds
sbb
loope
pop
add
cmp
test
data16
inc
jle
movsl
sbb
or
xchg
out
mov
jo
cmp
daa
pop
and
es
ss
cs
xor
adc
adc
popa
mov
cmp
xchg
adc
pop
inc
xchg
jg
xlat
mov
scas
rorb
lea
cs
sti
cmp
loop
fisubrl
gs
mov
jmp
and
push
pop
out
test
out
jno
cs
jg
push
add
xchg
dec
outsl
mov
jae
mov
xchg
fs
cwtl
xchg
bnd
insl
inc
nop
jp
insb
and
push
cmpsb
lods
mov
mov
lcall
lcall
sbb
inc
jge
cltd
out
pop
adc
push
fsubrp
aam
jp
das
std
andl
push
js
imul
loope,pt
pop
xor
add
jbe
dec
hlt
mov
push
or
lods
mov
cmpsb
fs
xor
int3
xor
sti
int3
push
loop
push
ljmp
pop
inc
lds
fcoml
or
sahf
pop
xor
jns
faddl
scas
xor
testl
inc
cli
lods
push
xor
cmp
in
adc
lcall
and
push
push
gs
or
xor
fisubs
sbb
add
popa
dec
stc
add
add
push
rcrb
mov
icebp
int3
in
jg
jno
pushf
dec
fdivs
dec
iret
in
sbb
shll
cmovae
dec
adc
dec
outsl
mov
fldcw
mov
daa
psubsb
fs
outsb
mov
dec
fimull
dec
test
adc
insl
jae
fst
inc
jo
xchg
push
test
adc
fistpll
pop
fwait
clc
cmp
jge
movsb
pop
lcall
int3
fdiv
out
or
bound
mov
cmpsb
stos
shlb
xor
cmp
xchg
loope
int
lret
js
mov
sbb
insl
dec
jnp
and
jb
ljmp
sbb
push
in
lcall
pusha
mov
cmp
test
frstpm(287
jmp
xchg
repz
mov
inc
xchg
jp
fs
adc
lret
xor
pop
mov
out
test
out
inc
jp
add
ja
inc
jne
fisttpl
xchg
xchg
sub
je
mov
adc
adc
jmp
jmp
lea
out
sbb
mov
add
outsl
pand
stos
xor
repnz
lds
inc
mov
mov
xor
lock
or
jmp
jg
jns
mov
push
int
dec
sbb
popa
in
out
sbb
test
add
pop
xlat
fwait
push
sbb
movb
adc
cmp
test
rcll
push
enter
shrb
xchg
scas
test
shll
pop
jb
inc
sub
pusha
iret
dec
je
idivl
push
inc
iret
enter
mov
pop
cmp
dec
test
mov
inc
out
rcrl
mov
cmpsl
lock
cmpl
mov
xchg
fnstsw
xchg
outsl
push
mov
sbb
in
mov
mov
in
lods
int3
fcompp
jecxz
dec
xchg
test
loop
call
lods
roll
xor
mov
adc
fmull
stos
fiaddl
dec
dec
or
or
jmp
fs
dec
add
pop
jbe
fneni(8087
scas
shrl
arpl
or
push
sub
lods
adc
mov
popf
jecxz
lcall
int3
lds
and
pop
out
xchg
lret
sub
mov
popa
pop
push
cld
xor
sahf
inc
subb
mov
xor
out
push
stos
cs
dec
xor
test
inc
adc
ljmp
bound
push
cmp
push
cmp
or
js
cli
adc
pop
xor
jbe
into
insl
cmpsl
xor
adc
push
das
out
xor
daa
add
scas
jp
and
shrl
add
push
add
out
leave
push
sub
push
add
xor
lods
cli
pop
push
fbstp
stos
es
push
pop
jno
sbb
icebp
sub
lahf
sbb
sbb
jmp
inc
lea
push
leave
pop
test
addr16
inc
mov
mov
mov
outsl
xchg
pop
mov
cmpsl
scas
fiaddl
push
pop
mov
es
sarl
xor
push
pop
and
lods
inc
fldcw
scas
jns
sub
das
lods
stos
mov
add
xchg
repz
mov
and
inc
add
dec
ret
lds
or
inc
and
ficoml
roll
fs
fcmovu
and
dec
and
fwait
sbb
sbb
add
cmc
mov
mov
arpl
dec
cmp
sub
test
int
out
es
hlt
jg
sbb
je
es
icebp
xor
sahf
imul
in
and
pop
jae
lock
xchg
addr16
add
push
dec
sar
mov
pop
data16
stos
push
iret
lea
jno
push
mov
mov
mov
fnsave
xchg
sbb
sbb
xchg
loopne
inc
push
dec
lret
mov
inc
cmp
add
das
out
aaa
out
mov
sbb
cmp
das
mov
roll
cmp
rcll
pop
leave
xchg
into
push
cmp
pop
outsb
or
loope
in
sub
push
std
pusha
lock
cmp
jno
in
inc
jb
cltd
movsb
push
mov
lock
flds
lcall
repz
mov
out
out
gs
adc
add
xor
popf
stos
lods
mov
dec
sub
sbb
addl
cmp
push
dec
mov
cmp
out
cli
repnz
addr16
shlb
jae
adc
lods
jmp
or
cmpsb
int3
mov
add
lea
mov
fldenv
sti
imulb
or
mov
pop
cwtl
jl
and
push
sbb
xor
sub
inc
xor
pop
and
into
mull
inc
push
loopne
mov
mov
and
cmp
add
movsb
adc
ljmp
scas
push
inc
mov
cmp
add
stc
dec
dec
dec
pushf
hlt
pop
xchg
sbb
add
lock
loop
mov
push
push
dec
xor
scas
ss
mov
outsl
pop
leave
sub
repz
outsb
mov
mov
arpl
and
jae
in
out
mov
lahf
jle
into
sbb
mulb
iret
adc
lahf
cld
sbb
mov
mov
lcall
inc
into
repz
mov
or
push
rcl
je
push
pop
cmp
movsl
hlt
lahf
daa
adc
arpl
adc
inc
jbe
cmp
dec
pop
out
roll
aas
adc
pop
mov
xchg
icebp
pop
push
mov
outsl
pop
jne
xchg
mov
lock
xorl
ret
hlt
mov
clc
into
pop
out
stos
mov
jno
stos
ds
mov
dec
inc
pop
in
dec
daa
or
dec
push
adc
repnz
dec
inc
jbe
xor
mov
dec
fstp
test
pop
rcrl
add
or
jb,pn
sub
mov
clc
mov
icebp
imul
fnstsw
mov
hlt
out
push
push
lea
adc
imul
cmp
add
roll
inc
or
outsb
int
inc
add
dec
mov
sar
ss
xor
mov
jmp
xchg
pop
sub
jle
cmc
lods
cmc
lcall
inc
inc
pop
std
sbb
sbb
and
lcall
xchg
jne
repz
jne
loope
dec
movsb
pushf
sbb
dec
je
add
pop
aad
sbbb
pop
lcall
dec
dec
pop
ret
shrl
imull
adc
xchg
pop
cs
leave
and
jb
cs
adc
or
or
aam
pop
dec
pop
imul
scas
pop
fbld
fisttps
in
fwait
popl
push
fidivrl
aas
jne
mov
mov
mov
lahf
iret
mov
inc
or
gs
out
cmp
notb
mov
daa
stc
testl
xor
jo
in
mov
imulb
jge
cmpsb
ret
push
leave
jbe
or
add
mov
jmp
fidivl
adc
pop
leave
outsl
mov
fiaddl
add
imul
push
xchg
or
subb
push
adc
mov
lret
or
sub
aas
push
cmp
and
daa
xor
cmp
fmuls
and
sti
mov
mov
iret
shlb
enter
sub
push
mov
cmc
sahf
xchg
inc
pop
addr16
out
mov
loopne
dec
loop
test
xchg
in
or
sbb
lods
pop
jo
add
push
jecxz
mov
leave
sub
sti
lea
fisubl
jl
and
ja
dec
sti
dec
movsb
xor
and
xor
add
lods
scas
cmp
mov
insb
inc
notb
ficoml
fidivrs
cmp
jae
jns
dec
test
jae
adc
cli
leave
push
inc
mov
add
repz
mov
cmp
imul
jmp
and
lret
cmpsl
adc
jle
cli
jmp
pop
arpl
sub
cli
fwait
inc
jl
mov
test
fs
xchg
gs
mov
pop
pop
int3
nop
jne
icebp
les
in
or
jecxz
jae
pop
js
es
pop
dec
or
mov
inc
pop
test
sbb
scas
fistpll
xchg
jecxz
cltd
xchg
jae
adc
frstor
cmc
inc
shlb
push
in
das
inc
or
or
jae
jl
popf
add
or
aaa
mov
sbb
xor
inc
lret
jne
pop
js
test
call
dec
xchg
and
inc
sub
add
fisubs
xchg
dec
sbb
aam
pop
mov
and
adc
mov
jb
mov
movsb
push
xor
jg
xchg
cs
pop
test
stc
notl
scas
fbld
sbb
sub
loopne
jns
arpl
mov
cld
jne
mov
pop
addr16
mov
add
push
cltd
mov
cmp
jns
inc
clc
std
es
int3
rcr
insl
insb
jno
push
inc
and
in
idiv
mov
push
push
filds
lods
jb
and
int
push
push
sahf
and
pushf
subl
popf
push
test
push
aam
and
sub
push
pushw
imul
ror
and
js
pushw
in
sahf
mov
pop
sarb
arpl
cld
test
cmp
int
test
xchg
iret
add
xor
mov
dec
push
cmovns
cwtl
lea
mov
negb
test
sbb
arpl
call
xchg
mov
add
push
mov
lcall
imul
repz
jmp
pop
mov
gs
aam
cmp
loopne
push
loopne
sbb
pop
test
sar
jmp
add
aaa
insb
ret
scas
orl
sub
cmp
mov
std
push
push
pop
xchg
jp
push
mov
pusha
fst
aad
mov
sbb
mov
rorl
inc
mov
and
inc
fisttpll
add
and
shll
jmp
xor
xchg
cmp
sub
xchg
outsl
daa
pop
push
jle
pop
pop
hlt
cld
push
scas
sub
js
fbstp
mov
ficomps
pop
sub
pop
mov
cwtl
repz
arpl
test
push
flds
inc
imul
mov
arpl
xchg
fnstsw
sub
dec
loopne
hlt
jbe
je
mov
xor
out
arpl
shlb
aas
push
pop
outsb
sub
aad
sbb
outsb
ja
scas
xchg
outsl
fsubl
sbb
xor
aad
mov
ror
jnp
fdivrs
aas
xorl
sbb
sbb
push
pusha
subb
aas
inc
leave
xor
leave
mov
push
jmp
test
or
ret
jno
dec
out
push
lds
cmp
out
aas
subl
cmc
mov
cltd
andb
inc
idiv
fmul
lcall
push
jbe
test
pop
mov
stc
push
lret
enter
cmpsb
and
mov
mulb
fcompl
and
outsb
push
xor
sub
sbb
mov
mov
es
stos
adc
dec
lcall
and
vunpckhpd
movsl
lret
lea
repz
out
xor
test
gs
outsl
in
add
lea
jo
cmpsl
pop
dec
jo
fisttps
jmp
adc
test
adc
dec
sbb
test
mov
js
lcall
fcomi
test
jg
cmc
pop
and
loop
jl
mov
xlat
test
adc
arpl
mov
sbb
lcall
les
mov
xchg
fucomip
popa
jo
inc
ficompl
mov
jne
leave
pop
xor
jae
sahf
int3
lock
cmp
es
cli
xchg
fisttps
sub
add
adc
lret
or
mov
sbb
inc
or
out
lock
fnstcw
lods
push
mov
push
pop
dec
loop
xchg
insl
mov
cmpl
pop
lret
es
stos
jns
leave
add
add
je
push
lcall
inc
pop
mov
and
pop
insb
mov
cs
jae
or
dec
push
mov
fwait
insl
imul
jne
jp
adc
into
notl
test
js
push
pop
sbb
loopne
xchg
rcll
jle
jb
xchg
mov
xor
dec
push
mov
icebp
out
push
mov
je
lea
or
add
mov
shl
mov
mov
add
test
dec
fbstp
mov
js
lret
aas
sahf
jnp
inc
push
insb
mov
mov
in
and
je
in
and
or
sbbb
hlt
cli
fisubrs
lahf
push
cmp
cli
jns
dec
push
pop
cmp
fcoml
pop
push
fdivrs
iret
mov
out
inc
add
rorl
dec
xchg
sub
std
sbb
lahf
mov
leave
pop
pop
insb
push
push
andl
mov
aaa
notb
add
cwtl
pushf
test
sahf
inc
inc
adc
in
cld
cwtl
repz
add
and
sub
jmp
pushl
test
movsb
add
pop
xlat
mov
push
lods
xchg
aad
sub
mov
outsl
push
xchg
and
adc
sbb
mov
inc
pop
data16
pop
movsl
push
mov
aaa
jmp
aad
dec
cmp
pop
test
dec
mov
mov
mov
inc
mov
cmp
repz
pop
fadds
outsl
cli
bound
xlat
es
popf
mov
fdivs
sbb
lds
cmp
jns,pt
pop
pop
out
add
xlat
rcll
inc
mov
pop
out
sub
scas
lea
pop
loop
mov
jmp
push
loopne
add
imulb
and
negb
pop
sti
mov
sti
mov
push
pop
add
add
inc
arpl
in
push
xchg
stos
notb
popa
pop
std
divl
mov
cmp
in
jnp
jb
pop
das
movsb
out
jp
xchg
stos
sbb
ret
sub
mov
fistl
mov
ficoml
loope
rorb
mov
mov
es
sti
test
movl
jne
ret
cmp
xor
xchg
xchg
mov
imul
dec
or
sbb
mov
cmpsb
adc
adc
pusha
arpl
aas
popa
jne
pop
enter
cmp
cmp
mov
insb
out
cltd
ja
das
jecxz
je
sub
inc
ffree
test
daa
dec
js
das
sub
fisttps
mov
sbb
sub
pop
aad
enter
jmp
sbb
hlt
subl
je
xor
out
adc
and
cmp
jbe
lds
mov
fists
faddl
push
jbe
cli
xchg
movb
mov
out
xor
dec
cmc
mov
sbb
add
adc
sahf
dec
movsb
or
lock
mov
sarl
jnp
lods
xlat
es
dec
add
sub
repz
nop
jecxz
lret
jae
js
xchg
mov
pop
sahf
push
mov
sarl
jg
adc
push
sbb
dec
pop
dec
jne
testb
icebp
jle
cmpsl
addb
sbb
out
into
test
mov
insb
xor
jmp
movsb
out
dec
clc
test
inc
xor
dec
xchg
ss
mov
add
sahf
lret
adcl
cmpsl
or
lret
and
mov
fs
int3
loope
mov
gs
cmpsl
leave
lds
cmpsb
fistpl
mov
mov
xchg
jnp
inc
mov
cmc
fs
and
repz
daa
cmp
push
int3
int
mov
cmp
out
pop
jno
enter
xor
cmp
mov
lods
xchg
add
mov
xor
std
xchg
jbe
xor
out
push
or
cld
push
xor
repnz
pop
pop
jnp
cltd
dec
adc
fcmovne
jp
aas
cmp
jp
pop
shll
push
xchg
pop
sub
jp
pop
lcall
pop
fsubs
jge
enter
cmc
inc
lock
mov
outsl
mov
shll
mov
psubb
adc
mov
cltd
pop
out
mov
jmp
mov
add
sbb
mov
and
xor
rorb
push
pusha
pusha
mov
add
xchg
or
mov
pop
xchg
ret
cld
push
dec
jp
dec
push
mov
ds
or
mov
aas
jle
push
xchg
and
mov
enter
dec
inc
dec
outsb
xor
pusha
les
mov
lahf
mov
push
nop
std
mov
jl
xchg
lock
xchg
pop
popf
cmpsb
mov
cwtl
sub
push
xorl
mov
jns
test
xor
push
add
pop
jmp
imul
imul
faddl
sbb
sbb
mov
mov
rolb
mov
cmpsb
bound
dec
inc
jecxz
or
xor
into
test
adc
ss
mov
es
popa
jno
mov
fidivs
negl
mov
xchg
cmp
icebp
jl
fcompp
rcl
mov
sub
lret
lcall
or
loope
mov
sbb
in
js
mov
fwait
add
xor
imul
mov
frstor
push
aam
mov
push
cmp
xor
das
pop
insl
inc
mov
mov
mov
mov
ljmp
xchg
test
jle
jge
and
data16
lahf
std
mov
xchg
lret
lods
and
xor
mov
bound
xor
mov
into
loopne
outsl
mov
mov
sar
aaa
les
hlt
aaa
fldt
sbb
push
fldenv
movsl
bound
flds
movsb
dec
insb
out
fcmovbe
pushf
xor
rcll
aam
and
icebp
mov
xchg
gs
call
xchg
pop
add
shl
insb
ret
cwtl
mov
and
in
inc
push
inc
jg
je
clc
rcrl
xor
mov
jl
sbb
daa
arpl
and
std
mov
ljmp
adc
cld
push
outsb
rclb
fidivrs
and
sub
out
cmpsl
aas
adc
aaa
lods
xchg
out
cmovp
cmc
fwait
xor
mov
push
repnz
andl
jl
sbb
mov
adc
lds
mov
pop
out
fnsave
cwtl
mov
fs
fdivrl
jb
sbb
cmc
out
sub
cmpsl
push
in
mov
out
pusha
test
push
fwait
outsb
scas
and
stos
sti
push
and
mov
pop
repz
imul
and
iret
mov
jns
test
xchg
jae
cmpsb
je
xchg
dec
lods
test
adcb
sbb
aam
push
stos
shrl
lock
add
inc
lea
cli
gs
add
xor
mov
add
cmp
inc
iret
sub
dec
daa
arpl
and
daa
mov
adc
int
mov
xor
mov
dec
sbb
dec
lret
iret
je
shll
push
push
jne
mov
inc
push
or
adc
or
scas
addr16
lahf
sahf
mov
lret
push
icebp
in
pushf
cmp
cmpsl
and
cmp
aam
pop
jno
mov
aas
push
fisubl
arpl
jge
mov
adc
cmp
test
mov
jecxz
stos
pusha
in
adc
push
xorl
fcomps
pop
scas
sti
call
pop
cmp
lea
mov
cmpsb
cmp
pop
mov
sub
pop
push
cmp
es
pop
in
pop
dec
int
fimull
out
inc
jnp
sbb
mov
mov
mov
mov
jl
and
sbb
and
pop
xchg
movsl
push
sti
xchg
std
rorb
sti
or
xchg
dec
outsb
pop
mov
dec
xchg
jecxz
push
iret
rclb
jns
popa
fs
shlb
inc
dec
lods
stc
data16
pushf
lahf
pop
aad
psadbw
mov
mov
pop
out
dec
lea
aad
inc
or
in
push
int3
popf
add
mov
sbb
or
lea
je
inc
inc
sbb
cltd
pusha
int3
sbb
add
push
adc
mov
jge
mov
push
pop
lods
xor
mov
xchg
pop
sub
out
adc
add
stos
inc
adc
xor
jb
aam
jecxz
cwtl
in
fmulp
add
inc
loopne
xchg
inc
mov
movsl
and
stos
dec
daa
scas
jbe
cmpsl
lcall
dec
xor
icebp
inc
cwtl
dec
inc
int3
das
lahf
pop
aad
sub
adc
icebp
mov
int3
shll
leave
or
mov
gs
or
leave
jb
adc
pushf
pop
in
xchg
and
lahf
sbb
popf
enter
add
lret
test
rcl
in
icebp
pause
pop
lret
sub
mov
mov
cltd
or
sub
ficomps
inc
js
add
dec
sbb
sbb
ret
jmp
add
pop
xorb
inc
jp
sub
addb
push
loope
mov
inc
out
dec
and
sbb
sbb
pop
int3
divl
imul
xchg
clc
xchg
sub
push
cld
pop
pop
stc
and
pandn
pusha
jge
mov
xor
add
mov
mov
leave
outsl
and
jo
aaa
scas
jno
mov
or
pop
pop
push
push
movsl
cmp
inc
les
adc
inc
add
in
jne
mov
dec
icebp
mov
in
aad
sub
xchg
sbb
into
stos
dec
inc
sbb
pusha
popf
loope
dec
xor
mov
insb
sbb
sub
popa
xchg
cmp
aam
sub
jg
lcall
aam
sub
hlt
inc
sub
or
xor
daa
jmp
std
imul
cmp
pop
pop
es
add
je
pop
mov
dec
xchg
or
scas
pop
mov
das
jbe
mov
test
lret
mov
fs
mov
jns
test
dec
ret
xor
ljmp
mov
movzbl
aaa
push
std
xchg
stc
ds
mov
sbb
mov
imulb
subl
adc
inc
inc
jb
arpl
stc
mov
mov
mov
out
imul
stc
cmpsb
icebp
jl
lahf
scas
cmpsb
into
add
inc
pop
push
test
repz
mov
inc
inc
cli
std
pop
mov
inc
add
push
mov
jne
mov
shlb
add
lock
sbb
inc
pop
mov
into
mov
xchg
and
adc
aam
inc
or
mov
adc
repnz
subb
or
pop
sbb
jns
mov
add
movsb
ror
fwait
mov
xchg
dec
pushf
sti
xchg
test
mov
sbb
mull
push
lret
push
adc
loopne
aam
cwtl
test
jne
mov
fsubr
jge
rolb
js
or
or
lret
sbb
and
test
fsubrp
sub
je
gs
out
movsb
out
mov
clc
sub
pop
xor
jle
mov
mov
rcrb
mov
mov
dec
push
dec
xchg
int3
es
iret
cmp
inc
and
mov
add
mov
cmp
out
adc
add
mov
bound
jns
cmp
fmul
push
cmp
test
jl
les
lds
aad
pop
icebp
sti
shlb
adc
sahf
cmp
mov
xor
cmpsb
push
push
lahf
lret
std
jmp
sub
call
mov
pop
dec
and
arpl
push
aas
add
xchg
xor
cmc
cli
inc
pop
out
dec
mov
push
sarb
cmc
out
in
daa
inc
testl
cld
mov
and
inc
jb
mov
scas
outsb
negl
or
inc
jbe
push
pop
jmp
jge
lods
add
jmp
div
cmpsb
push
push
movsb
movsb
dec
mov
push
mov
and
sub
xchg
jb
adc
lcall
dec
les
pop
dec
fidivs
sti
fwait
in
xchg
jg
pushf
cmpl
js
outsl
sub
leave
dec
xor
imul
mull
sbb
and
push
ret
mov
cmp
xchg
das
jno
lea
mov
shlb
mov
insb
add
enter
stos
stos
test
daa
cld
ds
xor
cmp
loope
shll
imul
arpl
and
xor
sbb
lahf
sbb
leave
in
add
pop
mov
dec
outsb
push
daa
rcll
push
mov
lods
cmp
in
je
pusha
mov
inc
sub
and
xchg
jnp
add
mov
and
fcmovnb
mov
call
clc
or
pop
mov
mov
sahf
popa
sarb
sti
dec
das
lea
xor
popf
xchg
sarl
add
fisubs
jo
mov
mov
cmpl
jmp
jns
roll
stos
jo
xor
pop
add
adc
mov
cmp
mov
xchg
jbe
cmc
in
outsl
pop
bound
mov
dec
test
inc
popf
adc
pop
and
lret
add
pop
fmuls
js
scas
inc
addr16
add
out
mov
adc
cwtl
repnz
into
repz
mov
mov
sti
inc
mov
lret
jp
inc
imul
or
mov
xchg
lea
addr16
cmp
xchg
int3
push
out
jne
sub
cli
sbb
lahf
stos
scas
scas
insl
stos
imul
pop
imul
dec
inc
jns
jae
clc
lret
cld
ja
xor
ljmp
jg
mov
pop
daa
adc
xchg
movhlps
fnstcw
jne
push
mov
mov
adc
mov
adc
adc
fdivrl
insb
jp
adc
mov
fisubs
xor
jno
jge
push
and
push
sbb
lods
cltd
and
fsubrl
inc
sbb
mov
jl
movsb
push
scas
push
jmp
out
add
cmp
mov
xchg
jmp
push
fisubrl
sbb
adc
xor
sti
inc
mov
sbb
adc
pop
add
scas
iret
cmp
adc
pop
inc
mov
ljmp
fwait
sub
lock
flds
cmpsb
iret
push
subb
or
stos
adc
sub
rclb
shrb
and
pop
cmp
lds
mov
js
lahf
push
pushf
scas
xor
test
loop
arpl
xchg
pop
popa
mov
das
mov
pop
ljmp
test
ror
mov
pop
clc
or
push
xchg
add
je
fcoml
psubw
sarl
dec
cmp
push
js
xchg
sub
stos
sbb
out
or
cmp
int
pop
jle
incl
pop
mov
in
pushf
push
fcmovnb
and
adc
cmp
out
mov
ds
popf
movsl
shr
pop
or
or
orl
mov
pop
mov
mulb
inc
pop
lret
sbb
sbb
jp
movsl
adc
std
cltd
sahf
test
data16
and
imul
pop
test
outsb
adcb
mov
push
lods
dec
in
xchg
inc
dec
stos
inc
in
in
jl
hlt
out
in
pushf
add
rol
ja
mov
inc
mov
imul
mov
push
pop
pop
mov
sub
cwtl
xchg
mov
int3
movsl
test
call
push
test
sbbb
sub
nop
add
push
pusha
arpl
pop
outsl
pop
fimull
xchg
repz
dec
hlt
lods
cli
xor
jl
in
lret
sbb
in
xchg
cs
xor
lods
adc
jo
incb
adc
dec
test
rorb
push
ljmp
mov
xchg
mov
mov
jns
sbbl
add
sbb
push
test
xchg
add
les
and
jb
cs
jg
or
xor
cltd
xchg
out
inc
cmc
les
xchg
sub
jge
dec
aad
lret
call
iret
ljmp
sbb
aas
test
push
sbb
cmp
xchg
pop
lahf
mov
pushf
add
jb
and
mov
iret
rcrl
adc
rcl
stos
jo
mov
popa
xor
jo
scas
cli
push
dec
pop
jl
pop
test
push
pop
push
loope,pn
cmp
sar
sub
mov
icebp
or
add
lahf
test
cmp
jp
fs
and
push
adc
es
sbb
jecxz
adc
dec
sbbb
cwtl
jae
andl
mov
mov
push
je
lods
stos
fimull
subb
push
pop
jne
dec
inc
adc
xchg
and
cli
insl
dec
mov
sahf
push
sbb
xor
mov
cmp
lods
gs
cltd
leave
adc
js
cltd
dec
sub
cltd
outsl
adc
sbb
lds
addr16
mov
ds
jle
in
test
pop
xchg
daa
pop
lea
sub
orl
mov
int3
push
jo
push
loopne
sbb
mov
mov
popf
fisubrs
push
test
hlt
std
xchg
add
xchg
lea
fstps
movl
scas
mov
js
add
and
stos
call
inc
sbb
jg
mov
testb
jle
push
jnp
inc
out
inc
call
xchg
test
mov
sbb
mov
nop
and
fnstcw
or
push
add
ret
scas
xchg
in
lahf
xor
lcall
mov
pop
aad
sahf
lds
xchg
stos
sub
fcmovne
shr
cmpsl
sahf
lret
adc
notb
fisubrs
insb
scas
push
sbb
stos
push
inc
loopne
mov
repnz
je
pop
sti
scas
ljmp
arpl
add
cmp
aam
push
in
dec
outsl
in
or
lret
and
inc
int
je
cwtl
sbb
sub
and
dec
aaa
lds
cmp
fimull
sahf
shll
mov
dec
mov
mov
lods
pop
repz
lds
mov
outsb
adc
push
adc
mov
out
sub
sbbl
sbb
fadd
add
adc
dec
inc
pop
mov
ljmp
fwait
push
iret
mov
nop
sets
enter
aad
cmp
mov
push
lock
push
inc
daa
int3
cwtl
adc
pop
dec
mov
inc
sub
mov
or
add
decb
sbb
fildl
add
rcl
lahf
test
roll
dec
push
lahf
movsb
sbb
or
rol
nop
inc
int
pop
mov
push
lds
aas
incb
negb
loope
mov
adc
iret
mov
pop
ret
repnz
or
push
repz
mov
sub
jmp
xlat
dec
daa
sti
inc
xchg
sub
in
cld
mov
mov
movsl
sbb
cmp
mov
inc
fldt
add
adc
rorl
cli
mov
or
and
xchg
pop
xchg
add
and
pushf
shlb
or
push
add
fsubrp
sub
xchg
fdivr
pop
mov
clc
lods
xchg
fildll
test
xchg
xor
fnstcw
clc
vmwrite
xor
or
add
push
out
inc
xor
xchg
fsubrl
pop
cmc
xchg
and
mov
dec
push
push
sbb
sbb
out
mov
mov
fcomps
push
push
mov
sub
lea
adc
sbb
gs
shr
addb
inc
inc
pop
jae
daa
or
popf
jo
and
in
out
mov
mov
in
fcmove
cmp
idiv
sbb
push
in
mov
lods
js
insb
divb
pop
add
add
pusha
ret
fst
test
dec
or
ja
mov
sbb
fsts
pop
xchg
sbb
scas
fs
mov
pop
dec
pop
dec
mov
cwtl
out
cmpsl
pop
push
push
int
xchg
jne
xchg
cltd
push
mov
fimuls
or
ja
mov
roll
push
cli
inc
dec
lahf
cmp
cmp
sbb
fsubl
mov
in
addr16
jns
cmp
jne
fs
adc
xchg
inc
mov
iret
jo
push
out
out
mov
jp
push
push
ja
out
lahf
fstl
pop
jo
cmp
out
and
xchg
aad
push
nop
mov
add
xchg
out
and
cmp
insl
xlat
sbbl
mov
sbbb
or
sub
testl
and
adc
dec
add
and
xchg
mov
inc
fs
cmpsl
dec
mov
pop
push
sarb
mov
scas
xor
jbe
lock
push
jnp
mov
ljmp
mov
xor
add
shlb
fsts
fadds
ss
xchg
sarb
xchg
lods
aam
xor
push
in
xchg
mov
scas
mov
jo
roll
pop
pushf
in
xchg
adc
test
inc
mov
test
mov
pop
in
push
pop
jecxz
or
mov
lods
iret
pop
adc
mov
jno
inc
js
fcomps
sub
mov
inc
jecxz
andb
or
adc
add
inc
rcrl
idivb
push
rcll
mov
aaa
xchg
dec
or
xchg
outsb
hlt
dec
imul
aad
add
push
jecxz
xchg
xchg
shll
dec
cmp
xor
xor
insl
jb
js
ret
sbb
sub
pop
test
lods
arpl
iret
cmp
push
mov
popa
les
cs
dec
dec
xor
sbb
or
leave
dec
mov
mov
push
cmp
push
bound
cmpsb
push
adc
pop
cmp
pop
clc
scas
sbb
lods
iret
es
xor
je
cmp
add
and
mov
rol
movsl
fsubs
shlb
mov
mul
sub
dec
jmp
mov
in
cmp
jae
mov
lcall
call
std
push
jge
add
clc
mov
mov
and
cmpsl
mov
dec
push
adc
cli
popf
push
adc
mov
adc
imulb
insl
mov
pushl
rcr
inc
fs
addr16
dec
and
mov
ds
pop
ja
stc
and
push
add
jmp
inc
rcr
pop
mov
enter
test
pop
ret
or
cmp
push
add
jmp
enter
add
aaa
nop
jecxz
int3
movsb
sub
ja
sbb
test
jae
repnz
cmp
repz
in
jnp
mov
std
dec
int
mov
js
icebp
and
clc
das
stos
xchg
jl
or
insl
xor
jbe
ja
dec
pop
test
push
lods
das
icebp
std
out
test
mov
gs
inc
mov
mov
dec
sbb
xor
mov
aad
int3
pop
out
mov
and
imul
sldt
cld
ljmp
aaa
iret
enter
pop
in
paddsw
xchg
pop
adc
aaa
dec
in
or
ds
aas
outsl
push
leave
cmp
arpl
fdivl
or
mov
cmp
add
jno
movsl
sarb
mov
imul
push
push
cltd
out
scas
fisubrl
cmpps
jg
add
mov
jl
gs
lock
push
dec
repz
push
and
push
sbb
fidivrl
je
push
pop
mov
fs
and
xchg
divb
adc
inc
dec
in
adc
sub
out
lods
cltd
sub
sub
cmpsl
push
leave
ljmp
or
push
shrb
xchg
push
test
outsl
mov
mov
jo
test
jae
inc
mov
js
mov
imul
push
aam
pop
and
lahf
jo
sbbb
sub
movsb
roll
rcl
mov
push
mov
scas
inc
xchg
push
mov
adc
fucomi
add
out
sub
sbb
sar
jecxz
jnp
adcl
push
loope
mov
repnz
add
cmc
popl
out
xor
out
or
daa
mov
popf
pusha
in
loop
pop
push
add
into
mov
sub
lods
cltd
cmpsb
mov
or
pusha
test
cli
sbb
in
out
hlt
lock
dec
and
xchg
ret
lock
aam
jne
clc
mov
scas
fildll
add
push
sbb
and
nop
or
xchg
mov
sbb
fnsave
xchg
std
xor
int3
push
rorb
test
int3
or
or
inc
out
cltd
cli
cmp
inc
popa
aas
aam
push
mov
stos
sub
dec
sub
mov
cmp
or
stc
sbb
or
jp
xchg
ds
in
xchg
push
shl
xchg
out
adc
testl
shlb
lret
lods
nop
shrb
jne
adc
pop
xor
xor
xorl
aas
js
sahf
aas
test
cld
push
inc
repnz
shlb
inc
pop
xchg
xor
movsb
clc
dec
jp
add
out
mov
decl
pop
jmp
pop
jmp
mov
lea
xor
inc
mov
pop
sbb
cmp
cli
sahf
xchg
inc
mov
insb
shr
rcrl
jns
ja
and
xlat
adc
js
mov
pop
fmul
lcall
push
mov
mov
out
xor
jge
enter
pop
pop
xchg
ja
or
loop
push
dec
xor
xchg
push
mov
mov
push
scas
repz
pusha
inc
stc
xlat
lods
sub
mov
xor
ret
add
push
inc
fucomp
mov
pop
shl
sub
inc
inc
cmpsb
jno
fdivl
fdivrs
gs
jp
and
int
lret
push
pop
popf
test
or
and
lds
dec
mov
in
adc
addb
mov
test
pop
insl
lret
test
sub
mov
cltd
dec
xor
in
xor
adc
loopne
test
inc
es
loopne
ja
jb
sub
xchg
xchg
js
fnstenv
and
dec
jg
mov
adc
out
add
lds
xchg
ss
lret
cmp
mov
sub
xchg
cltd
mov
xchg
pop
stos
jbe
test
stos
rorb
cmp
push
jg
cmpsb
mov
arpl
mov
mov
imul
repz
daa
out
pop
mov
sbb
dec
pop
aam
mov
push
mov
out
jmp
jge
lret
scas
nop
mov
push
xchg
stos
jne
leave
pop
mov
jne
pop
push
add
ja
push
aad
push
mov
lahf
dec
jecxz
out
pop
mov
loope
leave
cltd
inc
mov
xchg
push
and
or
test
adc
xchg
jp
jne
xchg
icebp
mov
cmc
lods
push
stos
test
popa
push
dec
xor
ss
stos
insb
lahf
shlb
inc
xor
jge
adc
jns
test
divb
pop
movsb
or
push
shl
cmp
or
rorl
je
test
hlt
jmp
pushf
push
adc
sbb
xchg
xchg
shlb
das
test
add
int
fisubs
xor
aaa
into
popa
aad
xchg
enter
sub
or
adc
xchg
or
testb
mov
test
lret
aad
cmp
sbb
xchg
xchg
mov
std
cmp
insb
pop
sub
xchg
sub
xchg
jns
lret
mov
ljmp
pop
and
mov
cmp
imul
or
mov
push
sbb
jge
inc
stos
stos
push
test
or
mov
insb
arpl
pop
or
clc
scas
mulb
pop
adc
filds
add
sub
mov
cli
stos
test
out
xchg
jo
inc
call
in
pushf
sub
clc
mov
add
cltd
je
inc
shl
pop
jo
sub
sub
outsl
mov
sbb
cltd
mov
adc
inc
jb
inc
or
das
mov
sbb
test
mov
inc
and
xchg
mov
xor
in
into
mov
iret
mov
lock
aam
test
ljmp
out
cmp
add
scas
pop
inc
out
cwtl
pop
sub
pop
fimull
stos
jp
xchg
cltd
fs
cltd
push
sub
pop
jecxz
rclb
scas
cwtl
xchg
fsubr
inc
aas
mov
fistl
push
sbb
cmp
mov
mov
lds
add
andb
cmp
sahf
leave
adcb
add
imul
outsl
inc
cmp
repz
pop
push
imul
or
xor
cltd
xchg
pop
mov
lock
mov
dec
in
ficoms
sbb
inc
mov
in
xchg
xchg
mov
cmpsb
xchg
mov
outsb
xchg
push
sbb
scas
repz
inc
xor
loope
add
aad
jns
addr16
aas
test
inc
pushf
into
fildl
notb
pop
adc
sub
aas
sub
jb
adc
mov
xchg
or
in
mov
mov
xor
dec
mov
andb
inc
xor
lahf
andl
out
icebp
loope
pop
xor
ss
call
lds
jno
xchg
pusha
inc
inc
xor
rolb
cmp
mov
lcall
sub
cmp
imul
das
mov
test
ret
aas
sbb
jb
dec
or
pop
mov
jg
leave
dec
bound
cmpsb
decb
call
xchg
xchg
or
scas
adc
mov
pop
mov
or
cmpsl
in
jle
mov
jl
mov
ret
lcall
popa
mov
mov
mov
lods
push
pop
in
mov
fldcw
sbb
or
aad
push
fisubl
push
or
fbstp
jmp
pop
pusha
out
mov
and
adc
int
lods
fldenv
ds
scas
lods
out
pop
bnd
mov
xlat
lock
mov
push
mov
shrb
stos
mov
sbb
cwtl
stos
mov
mov
lods
sub
ret
stos
mov
xchg
psubb
push
cld
inc
imul
repz
ja
pop
adc
add
pop
dec
push
sub
xchg
outsb
ret
xlat
mov
adc
mov
sbb
fwait
and
ljmp
orb
mov
packssdw
fisttpll
dec
jecxz
rcrb
jae
in
js
clc
mov
xchg
mov
mov
mov
push
cli
lret
outsb
push
jp
mov
pop
jmp
cli
scas
sbb
mov
add
in
add
insl
adc
sub
into
inc
adc
jp
xorl
fs
pop
push
mov
in
dec
lea
mov
mulb
add
xchg
inc
push
xor
xor
jo
sbb
mov
bound
icebp
adc
fidivs
frstor
das
xchg
sub
and
sbb
fisttpl
inc
nop
fadds
mov
xchg
inc
loop
repz
pop
xchg
jbe
in
adc
es
fcompl
push
and
outsb
testl
push
lods
xor
mov
movb
jecxz
sub
xor
and
push
xchg
int
xchg
cmp
xchg
mov
sti
stos
fwait
mov
pop
pop
loop
lcall
add
fcoms
movsl
out
idiv
add
dec
sbb
arpl
mov
inc
fcomp
out
dec
lahf
dec
ror
cltd
mov
call
jae
cmpsl
push
dec
mov
mov
clc
outsl
outsb
mov
rcr
sbb
les
push
rclb
or
jle
sub
and
fs
push
dec
push
mov
lahf
outsl
dec
int
jnp
cli
ja
mov
pop
imul
cmp
pop
push
lret
adc
ss
lret
gs
imul
loopne
pop
movsb
mov
popf
xor
and
pusha
es
in
into
mov
inc
enter
lahf
push
out
mov
or
js
lds
mov
mov
idivb
aaa
add
std
push
lret
data16
and
aad
mov
nop
ret
idivb
movsl
loop
adc
jns
repz
push
test
xchg
fidivs
mov
scas
clc
and
xchg
cmpb
mov
imul
inc
xchg
jmp
into
push
sbb
loop
mov
xchg
outsl
jle
add
push
xchg
sub
bound
pop
inc
push
out
jns
sti
inc
sub
push
cltd
ret
jl
or
pop
sbb
xorw
sarb
mov
cmp
bound
out
out
outsb
xchg
fcomps
xchg
dec
dec
jne
cmp
notb
mov
push
pop
mov
ss
dec
fbld
push
jno
sub
push
xor
push
popf
pop
push
add
addb
aad
call
insl
mov
dec
cmp
popf
xor
mov
mov
add
mov
sub
pop
adc
lea
inc
pushf
test
xchg
sub
daa
aas
cmc
jge
adcl
dec
js
mov
pop
insb
add
cmp
fs
cmp
testl
out
in
es
test
hlt
or
xor
lcall
movsb
pop
lea
popf
inc
decb
inc
mov
xchg
add
nop
push
in
dec
in
mov
dec
sbb
fisubrl
sbb
and
lcall
shr
cmpsl
movsb
or
jmp
roll
fldcw
lret
adcb
mov
movsb
push
push
push
sbb
xchg
mov
push
cld
aas
pop
call
test
clc
mov
dec
and
xor
push
sub
pop
dec
sbb
mov
pushf
push
clc
or
xchg
pop
fldl
inc
push
xchg
xlat
pop
into
jge
js
add
inc
mov
adc
lods
into
jne
das
xchg
adc
into
inc
or
loope
fsubs
cmp
jae
xchg
add
add
arpl
mov
mov
cmp
outsl
cmpsb
nop
clc
cmp
pusha
xchg
out
inc
mov
xlat
sbb
fisttpl
cwtl
cmpxchg
mov
fucomi
outsl
movsl
ret
inc
jbe
cmpsl
clc
fadd
gs
mov
iret
add
xor
sbb
bound
stos
pop
mov
dec
or
dec
or
push
int3
int3
pop
rcrb
cli
cmpsb
xchg
sub
lea
sbb
push
or
pop
cmc
mov
adc
mov
xor
pop
mov
mov
adc
cmpsb
or
adc
and
inc
jo
push
and
call
hlt
rcrb
cmpsl
in
mov
pcmpeqb
decl
add
adc
mov
hlt
mov
popf
sbb
jno
insl
xchg
pushf
jae
sbb
xchg
mov
mov
out
addr16
insb
test
arpl
push
lock
pop
sarl
push
mov
repnz
mov
jle
fsubl
dec
mov
icebp
cmpsb
push
jmp
rolb
xor
add
push
stc
push
cli
aam
enter
cmp
lods
loope
bound
pusha
inc
ljmp
imul
bound
xorl
mov
dec
cli
imul
jg
pop
cli
rol
cmpb
dec
lret
and
addr16
es
jno
je
mov
fnstcw
imul
lock
subl
xchg
mov
jecxz
dec
cli
push
repnz
imul
mov
shr
adc
adc
mov
push
int
push
outsl
xchg
fidivs
mov
mov
lds
les
test
jo
xchg
or
push
pop
push
inc
fildl
lcall
xchg
pop
cmpsb
xchg
add
out
and
pop
adc
push
sub
or
fisubrl
or
xor
adc
push
popf
jne
push
xor
ljmp
cmpsl
loop
jp
mov
cmpl
dec
inc
fs
pushf
mov
push
cmpsb
inc
push
jb
mov
ret
pop
cmp
addr16
and
ficoms
push
nop
mov
or
dec
cli
cmc
xor
and
lea
adc
fcmovnbe
xchg
xor
sbb
les
cmp
lahf
ljmp
lahf
and
xchg
cmpl
push
xchg
add
or
jmp
mov
mov
cmp
enter
and
push
lds
push
scas
and
jbe
fbstp
enter
jg
jmp
leavew
dec
loopne
dec
insb
push
xchg
or
adc
push
mov
dec
outsl
xchg
inc
cmp
pop
aas
outsb
pop
inc
jae
into
popa
loope
fsubrl
insb
leave
or
and
cmp
cmc
add
sarl
loope
sub
mov
pop
fs
hlt
movsb
push
jnp
fstps
inc
fildl
xor
add
cli
ret
and
mov
or
mov
sbb
ds
inc
fmuls
icebp
das
fst
mov
mov
add
roll
sbb
mov
and
repz
jle
cmp
lahf
sub
push
xchg
cli
dec
cmp
sbb
mov
cwtl
adc
scas
cltd
bound
cmp
push
xor
cld
push
pop
orl
pop
push
mov
out
xor
clc
mov
insb
cmp
stc
test
push
push
dec
xlat
jnp
push
outsl
gs
test
xchg
pop
jns
cwtl
mov
fs
gs
les
lahf
rcr
jge
insl
xor
inc
dec
xor
jl
hlt
inc
fdivs
test
jbe
clc
or
add
add
or
add
sbb
mov
pop
cmp
dec
insl
mov
mov
cwtl
cltd
mov
fcoml
jmp
hlt
sbb
push
add
test
loope
cmpsl
movsb
xchg
in
cmp
repnz
jns
fisubrl
or
push
ds
xor
stc
xor
inc
shll
dec
dec
movsl
movsl
test
iret
ljmp
mov
out
lds
jno
aas
sahf
aas
pop
jo
xor
rol
ret
jge
adc
ljmp
in
jmp
sarl
sti
mov
xlat
adc
and
sub
sub
aam
add
cmp
cmpb
mov
mov
lret
fcomps
inc
lret
les
inc
cmp
mov
lea
mov
sub
dec
in
pop
dec
test
sbb
popa
fs
in
popa
arpl
sub
shr
mov
mov
mov
push
mov
cltd
push
inc
ja
in
rcrl
mov
stc
push
bound
push
and
and
data16
imul
xchg
movsl
mov
mov
xchg
into
ja
xor
scas
push
or
mov
adc
test
jl
jg
add
fs
adc
jg
sub
subl
pop
lcall
pop
xchg
or
out
mov
mov
add
ret
dec
sub
mov
ret
ret
cltd
out
xchg
xlat
cltd
pop
rcl
or
sbb
jg
add
xor
fisubrl
test
mov
cld
or
aaa
stos
and
sbb
push
mov
or
and
ja
enter
mov
sub
sub
and
push
aaa
lret
cs
movsl
gs
test
cld
sbb
fsts
mov
jmp
popa
xor
inc
andb
jmp
int
and
dec
mov
adc
cli
ret
jecxz
push
sub
jbe
mov
mov
jecxz
rcll
dec
nop
lock
fnstsw
push
in
fsubs
pop
fidivl
push
mov
mov
dec
jg
flds
fs
mov
enter
movsl
inc
out
pusha
jne
jae
pop
fs
jb
call
xor
sbb
hlt
adc
aas
ljmp
stos
rorb
in
cld
pop
cmp
and
ljmp
sti
shlb
xchg
outsb
cmc
addr16
fldl2e
adc
loopne
mull
cli
loope
cmpsb
sbb
sbb
jl
pop
sbb
pop
mov
cmp
xor
add
addr16
jmp
add
xor
dec
popa
dec
or
pop
aas
fildl
mov
int
lret
sub
push
add
dec
push
sub
pop
xchg
xor
std
rcll
xor
imul
lods
std
mov
fidivrs
sbb
inc
cmpb
out
fs
dec
in
xor
ret
adc
mov
push
fsubs
mov
dec
mov
sub
sti
call
out
pop
and
dec
add
and
ds
fs
rcrl
lahf
setl
aam
mov
aad
cwtl
std
jne
sub
sub
jo
add
mov
call
pop
daa
sub
scas
inc
fstpt
mov
mov
fdivrl
or
jmp
cld
rolb
cmpsb
int3
push
cmp
xchg
xor
sub
mov
pushf
and
dec
out
scas
fwait
and
insb
test
push
dec
lret
loope
ret
aad
inc
xor
ret
push
out
sti
cmp
iret
test
push
cmpl
js
add
inc
mov
shll
cltd
xchg
or
gs
lret
dec
push
or
mov
or
aas
mov
mov
mov
insb
mov
mov
ret
pop
sbb
or
rcll
jl
mov
stos
add
scas
out
pop
add
jno
and
inc
insl
scas
inc
pcmpgtb
xchg
aad
and
sbb
mov
mov
push
rcrb
fsub
dec
or
push
push
inc
scas
xchg
cli
jp
out
push
mov
push
sbb
sti
or
out
add
mov
jbe
pop
adc
xchg
test
xchg
xor
mov
pop
add
jp
lcall
sti
pop
mov
cmc
lock
outsb
icebp
imul
xchg
popl
push
or
push
adc
jno
arpl
ss
mov
inc
add
push
sub
and
xor
dec
scas
and
jb
cmp
shr
jno
xchg
sbb
xchg
clc
push
js
mov
mov
fildl
sbb
cmpsl
fs
pop
nop
pusha
sub
das
rcl
ja
or
push
int
cmpb
lock
adc
xor
jl
mov
xchg
cmp
add
mov
xor
nop
test
xchg
roll
fisttpl
push
jnp
fldenv
and
dec
cwtl
jg
mov
insl
mov
jmp
push
jge
lea
rcr
xchg
je
imul
inc
cltd
in
jae
inc
enter
in
testb
mov
aaa
and
popaw
mov
fstps
sub
leave
or
sti
es
movsl
dec
out
add
mov
iret
jmp
push
add
jae
mov
cli
pop
popa
enter
mov
mov
pop
xchg
loopne
sbb
mov
mov
push
cwtl
cmp
xacquire
inc
mov
inc
and
adc
test
mov
and
jae
fidivrs
addr16
sub
adc
mov
inc
xor
mov
mov
imul
jo
loope
dec
push
sbb
jns
sub
adc
cmp
adc
das
sub
fst
insl
cmp
add
aaa
mov
lret
insl
mov
mov
xchg
movb
loope
loope
dec
push
mov
pop
mov
in
lods
stos
jo
cmovne
daa
out
cmp
loop
jne
rclb
and
std
xchg
js
jge
pop
dec
shlb
push
push
dec
fdivp
adc
mov
jmp
push
fmuls
movb
push
fsubs
cmp
dec
cmp
push
mov
out
mov
loope
out
pop
clc
enter
lock
pop
dec
xchg
mov
ja
sub
loopne
cwtl
in
lret
xlat
movzbl
xorb
icebp
mov
je
sbb
aam
adc
incl
vpmacsdqh
cmp
sbb
js
fcomps
and
xchg
mov
dec
and
data16
rep
push
push
mov
insb
inc
loop
lock
ss
fcomps
pop
shll
and
hlt
daa
add
lahf
in
call
rcr
ss
jnp
jne
sub
stos
outsl
or
pop
ss
mov
cmp
stos
lods
cmp
xchg
adc
popf
mov
ret
fisttpl
incb
mov
ss
cld
in
xor
in
sub
jae
cmp
jle
aad
inc
cltd
jno
pop
das
cmpsl
cmp
add
fnstcw
dec
into
iret
pop
fcom
sub
repnz
xorl
jno
xchg
xor
outsl
lock
fcoms
add
test
jb
jo
pop
int3
add
stos
lret
xchg
lds
xor
pop
xchg
sarb
roll
sub
out
and
jbe
vmaxsd
sbb
cmp
fdivr
dec
dec
hlt
pop
aad
pushf
ja
dec
and
aad
ret
es
add
cmpsb
jmp
movsb
mov
mov
jne
adc
enter
loopne
inc
jne
mov
scas
mov
pop
xlat
mov
repz
loop
and
and
mov
inc
mov
add
pop
mov
pusha
rclb
mov
lret
out
lods
in
loope
add
pop
aad
and
mov
jmp
int3
pop
or
pop
outsl
out
xchg
push
mov
test
and
sub
divb
test
pmaxsw
arpl
dec
test
mov
test
fcomp
push
pushl
cmp
inc
dec
iret
or
daa
sbbl
mov
out
jne
mov
pop
lds
xchg
or
inc
roll
dec
jecxz
addr16
mov
mov
sbb
push
xchg
lsl
mov
and
mov
xchg
add
sub
dec
gs
fcmove
stc
pushf
out
xchg
pop
sub
mov
and
nop
lahf
repz
and
push
cmp
push
dec
mov
fs
pop
pop
mov
outsl
in
shlb
mov
jns
enter
push
cwtl
aam
pushf
sub
shll
xchg
loop
aam
pop
pop
dec
sub
loopne
cmpsb
xchg
dec
nop
add
mov
adc
jbe
mov
aaa
adc
jo
mov
int
mov
ret
popa
mov
mov
adc
pop
out
fs
and
int
mov
sti
push
add
inc
mov
jle
or
leave
dec
pop
mov
xchg
or
and
ljmp
push
lds
or
out
pop
sbb
jb
xchg
cmp
pop
cltd
or
into
insl
sub
pusha
cmp
push
ret
sbb
add
sub
hlt
xor
mov
adc
dec
lds
sbb
insl
daa
mov
pop
clc
rcrl
cmp
in
fidivrs
lds
inc
in
scas
shlb
xor
cltd
test
xchg
inc
pop
divb
cmp
jne
mov
mov
cli
dec
xchg
mov
mov
popf
add
sub
mov
dec
dec
jg
pop
movb
jae
dec
inc
xor
jns
fcom
and
shlb
aam
inc
sub
test
cvtdq2ps
sbb
and
cmp
pop
fnstenv
es
mov
and
cmp
mov
xchg
aam
mov
lret
jle
addr16
jecxz
jmp
scas
mov
pushf
mul
mov
fisttpll
lds
cltd
pusha
inc
mov
xchg
jno
stos
or
dec
push
sub
adc
negl
inc
pop
cmp
xor
lds
ror
inc
add
inc
push
xlat
mov
push
pop
addr16
sbb
in
je
push
ret
iret
sti
inc
mov
or
mov
frstor
lea
mov
sub
sub
rorl
jnp
cwtl
push
into
and
jnp
mov
pop
je
mov
mov
jno
lahf
fmuls
ret
gs
mov
cmc
andl
adc
scas
push
pop
push
filds
xchg
xorl
jnp
test
lock
mov
add
pushf
xor
adcl
sub
jle
pop
movaps
add
fdiv
inc
test
sub
and
lret
add
popl
pop
lds
hlt
mov
cwtl
icebp
loop
cld
adc
pop
jns
push
mov
out
scas
or
mov
pop
xchg
inc
pop
xchg
lahf
jl
and
call
jge
mov
mov
fs
mov
push
inc
cmpl
mov
dec
push
enter
fdiv
arpl
push
cwtl
popa
cltd
xchg
sahf
icebp
mov
jle
and
test
shrl
jecxz
imul
scas
aaa
lock
test
or
mov
test
je
in
or
ret
dec
xor
push
icebp
outsb
pop
push
in
fscale
mov
sub
sbb
adc
shlb
and
out
inc
fs
loope
test
popa
jne
lcall
inc
adc
sahf
mov
test
nop
rorb
add
stos
xlat
fstl
lcall
push
xchg
fs
push
adc
rcr
sbb
das
aad
sbb
inc
das
inc
pop
xchg
jnp
pop
ds
imull
out
or
test
lods
cs
les
cmp
xchg
sbb
outsl
out
pop
xor
jmp
pop
sub
outsb
test
sub
popa
mov
xchg
cmpsb
pop
arpl
jl
inc
jne
or
mov
jg
insl
push
push
mov
xchg
xchg
xor
sbbl
mov
inc
xor
adc
gs
imul
pop
jae
in
jge
cmpl
or
xor
std
hlt
test
pusha
mov
mov
push
outsl
lods
imul
and
fwait
pop
xor
xchg
pop
jle
jne
cmpl
hlt
mov
and
aaa
mov
loope
jp
xchg
push
lcall
js
sar
outsb
and
xor
or
test
push
out
push
dec
ss
push
lds
loop
int3
fmuls
dec
dec
lds
push
and
inc
movsl
xor
fnstsw
cmpsb
xor
sbb
pop
fstpl
mov
roll
add
loope
clc
push
cmp
pop
pop
je
insb
lods
outsb
imul
insb
adcl
daa
movsb
xorl
movsl
cmp
push
notl
test
push
and
or
cmp
fildl
add
out
sbbl
xchg
or
mov
sbb
addr16
imul
xchg
pop
outsb
lret
lcall
pop
mov
fstpl
int3
push
mul
call
dec
add
dec
jp
sub
mov
jmp
xlat
aas
sub
out
jl
scas
sbb
stc
dec
pop
fldt
mov
fimuls
mov
xchg
lcall
mov
adc
out
mov
pop
jne
cmpsb
mov
pop
lock
clc
dec
fstpt
das
cmp
mov
adc
movl
lea
sub
shrl
jns
dec
sbb
xchg
lea
in
adc
sbb
hlt
push
xor
xor
jg
pop
pop
dec
xor
arpl
movswl
xlat
adc
sbb
xor
mov
orl
insl
or
sbb
cmp
dec
pop
addl
insb
out
inc
ret
pop
jl
xor
test
and
and
sub
or
test
insb
popa
adc
dec
repnz
setge
pop
ret
and
popa
mov
xchg
push
dec
xchg
jle
ja
xor
mov
mov
push
fildll
sbb
or
cmpsl
and
dec
mov
call
jp
cmp
xor
mov
mov
pop
jle
xchg
inc
cmc
idiv
movsl
pop
shrb
insl
popa
xor
jl
shll
fmuls
cmp
cmp
adc
test
and
je
repz
push
dec
adc
je
or
jg
cld
xor
pop
or
pop
jns
rcr
and
loopne
in
pushf
xor
cmp
pop
jae
jl
push
call
jg
mov
hlt
cli
or
and
pop
xor
hlt
lcall
push
fidivrl
dec
push
or
jnp
inc
aaa
dec
fwait
into
sub
mov
or
add
or
mov
gs
jp
cli
push
rolb
jno
cld
mov
out
sbb
lods
cli
sti
std
dec
pop
bound
sbb
popf
in
add
dec
stos
iret
jb
jg
push
mov
xor
insl
mov
pop
push
lods
scas
in
sbb
call
xchg
push
out
ret
mov
adc
data16
push
jbe
inc
repz
cmp
out
in
jle
das
movsb
lcall
cmp
lret
mov
sub
or
gs
xor
pop
mov
insb
jo
insb
ljmp
jb
push
hlt
push
jo
out
and
or
add
add
idiv
shlb
leave
cmp
mov
add
lret
shll
sub
shlb
mov
cmp
pop
fcmovu
lret
gs
inc
pop
add
mov
cli
subl
xchg
sbb
cmpsb
paddsb
in
and
shl
mov
cmc
cmp
sub
dec
cmpsl
push
ror
push
cmp
int
test
push
mov
pop
fwait
adcl
xor
jbe
loop
lret
or
je
stos
xor
push
jb
push
mov
js
pop
data16
or
popf
xchg
bound
pop
pop
sbb
xchg
mov
ja
fs
inc
sbb
lds
xor
xlat
fidivl
mov
loopne
cmpsl
iret
les
popa
mov
sub
repnz
movb
mov
mov
ljmp
xchg
das
imul
repz
shr
add
or
cli
lcall
repnz
mov
rorb
mov
ret
dec
repz
int
inc
dec
repz
sub
push
div
rol
loope
sbb
jbe
test
ja
mov
mov
xchg
xor
xor
nop
cs
mov
push
scas
out
xchg
into
mov
fcomi
movsb
adc
setnp
dec
cmpsl
mov
leave
cmp
xchg
mov
orl
xchg
mov
push
aam
xor
mov
lods
push
push
test
add
cwtl
subb
sub
xor
sbb
lret
sbb
int3
outsl
mov
mov
stc
cld
sub
out
or
test
es
addb
or
mov
js
dec
and
add
out
jecxz
fimuls
mov
out
inc
inc
js
iret
stos
pop
dec
cmp
jecxz
inc
inc
imul
test
std
into
xlat
ja
sub
sub
mov
mov
sub
and
cmp
inc
das
dec
mov
adc
insb
and
push
adc
jae
neg
dec
xchg
jl
mov
jbe
fsincos
hlt
jnp
or
sub
arpl
testb
xchg
or
push
imul
arpl
sarb
ret
out
stos
leave
sbb
or
andl
gs
push
iret
pop
mov
lods
adc
xor
jp
and
dec
cmp
out
dec
xchg
inc
mov
ret
mov
xchg
sub
imul
mov
cwtl
sbb
jb
daa
ret
mov
adc
popa
data16
shlb
insl
ret
mov
push
add
or
cmc
mov
push
iret
lret
stos
or
decl
out
push
pop
xchg
sub
dec
cmp
xchg
jae
cmp
shr
mov
mov
dec
sub
gs
subl
jecxz
out
push
push
hlt
test
xor
lret
xor
lahf
das
inc
js
jbe
inc
dec
test
or
push
lret
push
nop
lret
out
xor
fdiv
mov
or
lods
mov
and
repz
test
fdivrs
movsl
jmp
push
pop
xor
inc
in
fistl
mov
idivb
pop
push
jmp
popf
inc
shl
mov
adcb
in
jecxz
in
test
repnz
inc
outsl
cs
mov
fisttps
mov
pop
mov
pop
mov
mov
lahf
mov
cld
sbb
icebp
push
inc
xchg
xchg
cmp
ds
xor
sbbl
enter
gs
mul
in
adc
xor
mov
gs
pop
ficomps
xchg
and
sub
daa
mov
fnstenv
xchg
xor
push
enter
mov
push
pop
test
js
fidivrl
or
scas
mov
jecxz
daa
cmpsb
movsb
inc
mov
lods
xor
add
lret
lds
jnp
subps
mov
push
mov
and
inc
shl
xchg
add
lret
mov
mov
cmpsb
xlat
dec
jae
pop
pop
imul
lds
in
jne
cmp
icebp
gs
sahf
arpl
aam
push
and
and
dec
sbb
iret
ds
test
mov
jbe
sub
or
sti
mov
push
xchg
out
jae
ret
jmp
fsts
ror
and
push
lock
xchg
jl
scas
pop
xor
sbb
icebp
data16
aas
dec
jle
scas
push
and
fistpll
sub
jae
and
imul
in
movsl
daa
jl
add
insb
pop
ret
lcall
fidivrl
add
cld
pop
push
pushf
cmpsl
lret
jae
xor
push
and
sahf
and
outsl
sub
dec
stc
or
cli
jg,pt
psubusw
jne
repz
sub
adc
enter
cld
frstor
out
in
inc
cltd
dec
lahf
stos
adc
push
xor
jp
jecxz
jne
and
adc
mov
add
ja
fstpt
aad
mov
or
out
sbbl
iret
les
sub
scas
push
xchg
shlb
int
hlt
mov
push
ret
insb
adc
fcmovu
cs
adc
push
mov
or
hlt
push
adc
mov
cmc
add
jo
insl
xchg
xchg
repnz
ss
imul
or
xchg
sub
adc
pop
mov
call
imul
dec
pusha
out
mov
push
test
xchg
push
jo
mov
popf
mov
mov
addr16
push
sahf
lahf
jle
cmpsl
xchg
pop
movsl
adc
mov
and
stc
jne
scas
mov
pop
shrl
shll
and
mov
dec
movsb
cwtl
sub
hlt
adc
pop
lar
sub
es
and
std
xchg
outsb
sahf
bndstx
scas
rorl
in
repnz
lret
push
mov
mov
and
aam
jl
jecxz
test
int3
stos
sahf
dec
cmpsb
or
mov
hlt
das
stc
cmp
mov
es
add
cmpsb
and
les
clc
jmp
mov
pop
call
inc
dec
inc
addr16
pop
loop
lea
scas
or
insl
insb
push
mov
pop
aas
lahf
int3
int
sbb
adc
adc
xor
fcompl
dec
sub
xor
int3
clc
sahf
or
out
mov
insb
inc
cwtl
clc
or
test
jne
jnp
cmpsb
jge
leave
adc
mov
mov
cmp
stc
mov
pop
mov
xor
mov
ljmp
flds
das
inc
ds
imul
fnstenv
jg
jp
scas
test
in
cmc
je
or
data16
loope
add
xor
and
jbe
shl
add
push
int
mov
lcall
fistl
or
cmp
insl
inc
mov
clc
bsr
xor
inc
sub
mov
cmp
mov
fbstp
jle
cmc
out
icebp
pop
jnp
xlat
xor
dec
jle
jnp
sub
mov
sarl
mov
pop
and
push
or
loopne
imul
pop
mov
ret
jp
xchg
repz
push
stos
add
mov
in
jb
pop
jno
xlat
out
jo
jno
jno
daa
xchg
mov
inc
in
fwait
leave
xor
push
lds
cmp
inc
sbb
pop
imul
mov
dec
sbb
mov
sarl
test
aaa
pop
xor
sti
mov
std
lds
mov
int
loope
test
jbe
ucomiss
jbe
mov
test
ljmp
test
inc
add
mov
and
je
inc
les
dec
dec
lea
sarb
add
movsb
mov
mov
loop
pop
sbb
inc
in
out
xchg
enter
es
push
adc
insl
daa
mov
scas
lea
fisubs
mov
test
and
pop
rcll
inc
add
negb
xor
push
push
out
pop
mov
cmpsl
sbb
cmp
jle
or
jecxz
loopne
pushf
sub
int
fildll
inc
mov
fmull
fcoml
mov
xor
push
fisubl
mov
jg
xor
jo
mov
cmp
xor
or
insb
add
cmp
sub
int
addb
jmp
cwtl
lcall
mov
popf
lods
addr16
stos
lcall
inc
cmp
cmp
std
sbb
iret
int
lret
lret
push
sti
cmp
dec
inc
sub
inc
push
lock
xchg
sarb
fcom
fcmovnbe
add
xchg
sbb
mov
repz
test
icebp
push
fidivl
adc
inc
lds
mov
push
faddl
add
mov
bnd
jge
loope
push
repnz
lahf
fisubrl
sub
lret
sub
and
xor
sub
aad
negb
cmp
test
ret
in
ja
sub
cwtl
pop
or
enter
sbb
mov
push
jmp
repz
dec
mov
in
inc
jns
notb
in
xor
fsubl
mov
lret
mov
popf
popf
jle
imul
test
popa
fisubrs
mov
lods
int3
mov
sahf
out
xchg
xchg
add
sahf
jle
pop
cld
test
negb
jo
roll
sbb
or
mov
das
adc
xchg
int
jp
adc
pop
inc
addr16
lea
fdivrs
call
sub
cli
mulb
or
push
inc
popf
mov
andb
sub
cld
mov
pop
jns
adc
sbb
xor
insl
aad
sub
mov
jno
cmp
add
repz
jb
inc
rcrb
pushf
sbb
movsb
mov
push
movsb
mov
xor
es
sbb
push
out
adc
sbb
fsubl
aaa
push
jmp
add
pop
dec
pop
andl
les
lea
cmpsb
or
pop
popf
insl
push
mov
rcr
out
push
cmc
int
std
fidivrs
in
stos
lret
or
icebp
test
out
xchg
inc
hlt
ds
call
lock
jl
cmp
aad
call
add
aad
push
iret
mov
loopne
cld
adc
push
mov
outsl
mov
jecxz
cltd
sbb
pop
ljmp
mov
xor
push
or
or
imul
call
push
jns
add
mul
scas
pop
int
pop
add
loopne
lock
sub
mov
xor
dec
enter
cmp
mov
jge
and
dec
add
sub
dec
cmpsl
test
jo
xchg
decl
lock
jnp
aaa
xor
aas
push
mov
adc
add
ljmp
push
add
xchg
push
repnz
mov
ficomps
test
and
push
loopne
subb
ret
xor
jbe
aas
add
xchg
cld
jle
mov
xchg
push
add
mov
fldl2t
adc
add
jae
sbb
add
js,pn
cli
roll
rolb
push
lret
sub
negl
in
xchg
and
jbe
test
mov
std
stos
into
loopne
subl
mov
mov
dec
mov
fwait
cmc
dec
push
pop
call
stc
dec
test
lea
pop
fistpl
negl
outsl
sbb
inc
out
leave
push
lcall
dec
inc
in
test
in
daa
sbb
test
mov
xlat
xor
mov
mov
pop
push
rclb
jno
inc
pop
cli
sub
mov
call
adc
jae
test
sbb
in
lods
out
inc
outsl
hlt
int
test
xchg
stos
fdivrs
repz
scas
jmp
and
push
ja
push
jmp
and
add
shrb
xchg
in
into
stos
imul
shl
pop
jg
addr16
fcoms
dec
imul
xor
cwtl
xchg
xlat
jp
ret
loopne
ficompl
mov
adc
xlat
nop
push
xchg
pushf
mov
lcall
xor
repz
cmpsb
push
xchg
in
push
mov
fdiv
pop
test
xchg
into
sub
cmp
rcll
and
xor
mov
popa
jle
push
mov
dec
and
add
fdivrl
shr
adc
pop
cs
fcmovnu
mov
fidivl
push
xor
xchg
shrb
lods
xchg
aaa
pushf
xchg
das
in
mov
xor
xchg
sub
mov
enter
test
test
pop
jnp
xchg
movsb
mov
pop
hlt
xchg
cmp
cmp
leave
adcb
in
das
add
push
pop
jns
aaa
jns
add
adc
xchg
push
push
arpl
xchg
pop
push
push
adc
in
test
jle
aad
push
jg
push
jns
and
mov
jo
push
mov
xor
repz
movsb
mov
pop
lods
sub
inc
xchg
fldt
cmc
jmp
jg
data16
xchg
push
cmp
add
jb
push
popa
fisttpl
push
jge
adc
xlat
sbb
cmpsb
xor
das
jno
out
lret
movl
mov
mov
sbb
mov
lret
inc
inc
rcrl
or
roll
jno
aaa
or
lods
aam
mov
mov
mov
cmc
or
inc
sahf
push
or
cli
jne
push
pshufw
sub
xchg
loope
push
iret
push
adc
and
inc
insl
movsb
testb
pop
lods
xor
and
xchg
mov
int
testb
adc
cld
call
xor
xor
shll
out
push
int
dec
mov
test
int
jbe
mov
sub
rorl
mov
lds
data16
adc
sbb
push
mov
adc
push
dec
mov
jmp
xor
call
xchg
inc
push
inc
std
xor
xor
push
dec
xchg
and
insl
test
adc
mov
lcall
imul
repnz
sub
inc
pusha
pop
in
inc
inc
inc
movsl
jmp
mov
push
push
cmp
or
cmc
out
jb
mov
pop
jle
sub
test
or
xchg
lret
jmp
hlt
or
xchg
sub
outsb
imul
dec
jge
lcall
stc
mov
dec
shrb
xor
adc
xor
add
adc
mov
inc
ja
adcl
std
idivb
shlb
cmp
sti
lret
jns
in
mov
fcomps
icebp
and
imulb
call
push
xchg
mov
add
jae
cmp
clc
sti
xchg
rcrl
mov
bound
lahf
xchg
ret
adc
sub
stos
cmp
xrelease
or
push
mov
lods
jae
aam
inc
imul
call
and
dec
xchg
mov
lods
fdivs
push
test
cmpl
inc
mov
and
mov
jo
outsl
bound
push
das
push
inc
push
rclb
or
mov
ret
rcrl
nop
popf
lods
stos
mull
ret
data16
mov
stos
sub
mov
push
mov
dec
and
xlat
dec
cmc
shr
dec
jle
pop
gs
cmp
scas
mulb
mov
data16
or
sbb
add
add
filds
ret
cld
lods
xchg
repz
adc
xchg
fs
lea
pop
and
jmp
jb
cmpsl
addl
sti
in
push
insl
nop
add
jb
pop
jl
lahf
pop
lcall
rep
jae
push
sub
and
fnstcw
unpckhps
mov
movsl
ficomps
pop
iret
cmpsb
pushf
adc
out
mov
ss
cld
mov
sub
mov
push
bound
push
mov
jecxz
jge
rolb
fsubrp
daa
lods
lret
sbb
push
jp
pop
or
into
stos
sarb
inc
or
fiaddl
test
pop
cmc
sbb
outsl
jg
fnsave
xchg
popa
xchg
je
fwait
xchg
mov
sbb
jmp
mov
cmpsl
cmp
out
cmpsl
es
dec
pop
xchg
lock
aas
in
lods
push
mov
xchg
pop
dec
push
mov
xchg
fsts
jge
add
sbb
mov
mov
call
insl
dec
imull
repnz
scas
imul
or
mov
and
movl
lcall
data16
mov
mov
xor
movsl
cld
or
cmp
sbb
out
imull
filds
sbb
out
mov
mov
add
in
data16
sbb
mov
mov
push
outsl
lods
scas
outsl
or
push
iret
sbb
or
adc
jle
mov
xor
dec
addr16
push
pop
fildl
xchg
sub
rorb
push
lahf
gs
xchg
pop
adc
imul
mov
sbb
mov
dec
cmp
imul
ljmp
aaa
ds
adc
das
push
cli
and
fisubrl
push
push
stc
sub
stos
cwtl
add
insl
inc
sarb
jp
push
fisubs
sbb
lods
dec
mov
mov
stos
dec
pusha
ret
or
jae
push
dec
xchg
push
popa
mov
lret
xchg
shl
iret
xor
push
xor
mov
sbb
in
stos
jmp
adc
mov
mov
xchg
mov
das
inc
subb
mov
pop
aad
jne
movsl
lods
inc
dec
gs
mov
xchg
mov
outsb
add
pop
imul
pop
xchg
imul
rcr
add
lea
pusha
mov
ljmp
repnz
faddl
jle
mov
mov
cmp
adc
jb
or
xor
jg
mov
testb
stc
cmp
push
cwtl
or
in
aas
stos
xbegin
fs
or
stc
inc
aaa
ret
sbb
lret
stos
dec
or
cmp
hlt
test
jecxz
out
xchg
push
cmp
mov
imul
in
in
xchg
fdivrl
dec
mov
jbe
ret
jbe
js
data16
inc
not
mov
cltd
out
add
push
movsb
mov
jp
mulb
or
mov
into
vandps
mov
dec
jne
xor
add
lea
xchg
sub
jmp
sub
cmp
or
push
mov
push
cmp
push
or
clc
jbe
adcl
pop
sub
scas
dec
and
mov
inc
jp
testb
fsubs
outsb
add
loope
mov
fbld
fs
std
test
jno
shlb
adc
push
push
or
pcmpeqw
adc
dec
rorl
xchg
cmp
js,pt
lods
lods
ds
adc
mov
jle
pop
or
mov
popf
inc
stos
pop
insb
mov
outsb
jl
sti
inc
dec
shlb
rcll
jl
sub
xchg
push
das
xchg
xlat
adc
mov
sub
xlat
movsb
cmp
add
outsb
mov
jb
mov
nop
jmp
aad
test
rclb
push
inc
mov
lea
or
push
ljmp
out
pop
cli
jo
in
xlat
mov
je
cmpb
push
lret
daa
out
pop
xor
jl
cmpl
adc
scas
add
mov
sar
cmc
mov
scas
push
add
mov
push
xor
xlat
inc
and
and
cmp
fdivrs
ss
inc
out
push
cltd
scas
in
test
lock
lcall
jmp
lock
mov
mov
lret
push
insb
adc
xchg
xchg
fcmovnb
iret
cmp
out
loop
call
add
add
ds
popa
test
dec
jno
jnp
cmovbe
xor
icebp
movsl
into
leave
push
outsl
outsl
into
push
dec
xchg
lret
jno
test
xor
mov
sub
cli
popa
jae
jge
pop
lretw
mov
lret
rcrb
popa
rclb
sti
pushf
les
dec
sbb
and
jge
xor
jno
or
aam
ds
roll
mov
and
fnstenv
mov
jae
pop
jne
aas
xor
dec
sub
iret
inc
mov
mov
pop
add
repnz
dec
sbb
aaa
repz
inc
scas
aaa
cmp
je
ret
cmpsb
push
dec
or
jp
sub
xor
jecxz
out
subl
shrb
notb
pop
jo
xchg
jne
outsl
mov
arpl
outsl
push
mov
cmp
test
cltd
inc
stc
dec
enter
in
loopne
inc
stc
ja
enter
nop
shrl
addl
dec
push
in
jmp
adc
popa
fs
pop
push
pop
outsb
inc
call
aad
jns
ret
and
jecxz
xchg
mov
xor
clc
insl
mov
mov
sbb
pop
lcall
adc
xor
into
subb
mov
mov
fwait
int
in
push
test
xor
test
test
jge
xlat
jnp
js
dec
icebp
aaa
mov
outsb
imul
jmp
pop
jbe
popf
xchg
in
mov
jle
inc
sahf
orl
xor
add
sub
push
lock
pop
adc
mov
pop
cwtl
add
adc
jecxz
push
push
xor
add
call
sub
mov
inc
scas
mov
mov
or
data16
stc
mov
rolb
stos
lds
dec
imul
addr16
cmpsb
test
mov
lret
push
inc
notb
sbb
push
pushf
inc
add
and
inc
adc
sbb
xor
and
mov
adc
dec
fmul
ja
shrl
dec
xor
mov
ret
stos
pop
jb
adc
js
lods
xchg
leave
sub
pop
insl
xlat
add
push
shl
leave
jbe
push
scas
mov
add
out
or
scas
inc
clc
fisubrs
cmp
add
rcll
mov
xchg
sub
and
orb
aas
leave
pop
aas
das
mov
mov
testb
imull
jp
test
add
xchg
and
pop
in
lods
insl
mull
xchg
mov
add
and
mov
adc
cmpb
out
or
test
jbe
pusha
or
enter
cli
or
sbb
dec
and
pop
in
fwait
addr16
inc
es
je
aas
push
and
loope
xchg
mov
pop
xor
out
ljmp
incl
jne
std
xor
sbb
in
inc
mov
and
into
int3
cmovle
popl
cmp
out
pusha
push
loop
and
mov
cmpsb
dec
test
add
sub
lret
jecxz
lods
cld
repz
pop
pop
dec
cli
cmpsb
sub
testl
repz
xchg
mov
ret
push
jp
pop
mov
stc
jne
dec
push
test
push
jmp
adc
mov
sbb
dec
subb
rdmsr
leave
add
jbe
or
adc
outsl
jae
fsubp
push
mov
mov
arpl
test
push
adc
jp
jne
aam
add
ljmp
iret
roll
pop
mov
inc
ss
xchg
push
es
push
mov
xchg
test
ret
and
adcl
gs
jbe
fs
das
decb
adc
jg
cmpsb
fs
loope
pop
mov
add
and
jl
push
loopne
jp
jns
cmp
cltd
cmp
cmp
add
cmp
pop
inc
jle
sarb
and
cmp
cld
bound
mov
push
pop
lret
dec
jno
dec
mov
int
xchg
jmp
pop
jmp
or
loopne
cmp
rcll
ss
jl
mov
push
shr
pushf
jne
mov
out
sarl
cmp
push
subl
cmc
xchg
sub
dec
mov
rcr
inc
mov
out
cmp
in
ds
lret
in
inc
in
xchg
sub
jnp
das
xor
dec
inc
sbb
fidivrl
mov
scas
sbb
fists
pop
in
mov
fs
jns
int3
inc
xlat
push
aaa
popf
adc
hlt
iret
sti
and
stos
sub
sbb
and
movsb
lds
addr16
aas
pop
fwait
out
das
mov
jg
adc
orb
or
pop
jecxz
test
cmp
cmc
sbb
pop
icebp
xchg
lret
js
jnp
jo
orl
es
sub
in
scas
jne
push
lea
push
aaa
sbb
cmp
ds
jns
cmp
pop
jns
test
dec
mov
sub
mov
vsqrtsd
pop
mov
incb
sub
dec
pusha
inc
out
sub
xchg
and
iret
into
bound
or
int3
xchg
sbb
mov
jle
adc
xchg
mov
xorb
jle
faddl
shr
cli
enter
sub
dec
and
iret
jne
rcrl
hlt
cld
fcomip
mov
add
ss
inc
mov
pop
movsl
dec
in
ret
cmpsb
xchg
sti
test
cmp
pop
jl
fistpl
jecxz
aas
push
cli
mov
inc
jnp
xor
rcl
or
test
inc
and
aad
xor
fsubrl
lahf
loopne
std
or
fs
stos
stos
pop
je
sarb
pop
mov
ja
jmp
add
cmpsb
mov
lcall
jg,pt
das
out
mov
jg
xchg
sbb
test
lods
loopne
inc
lret
and
mov
dec
lods
mov
mov
out
fwait
dec
iret
jne
lods
fisttpll
xchg
sbb
adc
bound
adc
inc
push
adc
fsubr
pop
pop
scas
lds
popa
out
jae
push
sbb
sbb
out
mov
scas
and
pop
or
add
mov
movsl
and
mov
pop
or
add
sub
ret
mov
mov
jg
adc
xchg
ret
stos
xchg
dec
pusha
ja
add
lods
loope
mov
cmpl
or
fdivl
pop
inc
adc
jb
cmp
dec
sbb
shrb
mov
in
bound
adcb
pop
arpl
pop
dec
push
jl
cmp
ret
and
xchg
push
mov
push
fldt
icebp
ret
lahf
and
pop
sub
pop
pop
xor
out
and
arpl
cli
push
aad
icebp
addr16
or
sub
mov
lea
test
dec
xor
mov
in
cli
gs
adc
mov
xchg
dec
cmp
push
movd
mov
mov
fbstp
jbe
in
out
out
mov
push
stos
loope
mov
mov
and
sbb
ja
pop
cmpl
fisubrl
test
pushf
dec
stos
xor
rcrb
pop
push
jbe
pop
xor
shl
hlt
cwtl
pop
inc
xchg
je
pushf
pushf
push
adcb
inc
cltd
loopne
sub
into
mov
jnp
xchg
jp
leave
ljmp
sti
jg
jno
rcrl
sub
ds
call
outsw
pop
mov
xchg
cmp
adc
lea
mov
or
mul
sbb
gs
dec
jle
pop
mov
jo
push
test
mov
stos
and
sub
sahf
test
mov
lret
je
shll
sbb
add
pop
push
push
ja
ds
loope
mov
loop
sub
lds
mov
ljmp
mov
test
xchg
mov
xchg
mov
inc
jb
dec
decb
fiaddl
adc
sbb
js
pop
sub
out
mov
mov
mov
push
jge
orl
sub
xchg
cmp
xchg
pop
shl
not
sahf
mov
mov
gs
fldt
push
aas
int
popl
sub
mov
jl
push
xchg
add
or
cmp
xchg
scas
and
xchg
dec
jbe
or
lea
dec
cmp
pop
ds
add
pushf
bound
rolb
lret
clc
jg
lods
gs
and
push
mov
fcoms
enter
negb
out
xlat
push
mov
setp
mov
push
and
xchg
sub
push
or
mov
cmpsl
dec
sub
mov
nop
fsubs
out
ret
sub
ljmp
push
jge
adcl
pusha
mov
push
fdivr
mov
les
pop
push
sbb
xor
call
push
sub
jb
or
fsubr
push
xchg
stos
xchg
cmp
shlb
ret
pusha
xor
jne
mov
inc
mov
xchg
mov
cmp
xor
insl
mov
daa
cmp
mov
add
push
dec
out
test
popf
inc
into
pop
repz
clc
add
sbb
push
inc
add
jg
mov
or
push
out
test
shlb
rcrl
inc
xor
push
jecxz
jle
mov
popf
sub
iret
xor
push
arpl
and
icebp
iret
jo
les
sub
pusha
ss
jns
inc
dec
repz
xchg
xchg
cmp
iret
jne
out
mov
cltd
xchg
fidivl
fdivr
fnstenv
push
xor
mov
subl
inc
fiaddl
vmovupd
inc
or
dec
pushf
lahf
insb
and
push
inc
push
nop
pop
sub
cmc
loope
aad
ret
jge
push
mov
movsl
jnp
mov
mov
xor
push
mov
dec
xchg
aaa
xor
mov
dec
rcrl
adcl
sbb
mov
jne
add
imul
daa
mov
and
xor
or
scas
popa
mov
jo
mov
jle
nopl
lods
out
out
nop
ret
mov
push
jae
call
push
lods
mov
sub
out
filds
test
sar
sbb
into
sub
jg
mov
adc
rolb
or
aaa
or
test
cli
and
jno
shlb
fistpl
nop
dec
inc
inc
faddl
sbb
xchg
test
repz
aaa
mov
lods
cmp
sbb
les
pushf
pop
mov
pop
dec
dec
mov
sub
xchg
dec
add
aam
mov
cs
out
jmp
xchg
sub
push
imul
push
xor
xor
pop
lcall
cltd
push
push
adc
mov
adc
std
js
addl
shlb
fimuls
jo
push
jle
cmpsl
fbld
or
mov
push
out
xor
icebp
addr16
int3
pop
pop
ja
push
adc
sbbb
push
fwait
adc
roll
jae
in
cli
xchg
movsl
mov
jmp
mov
and
xchg
test
ds
insl
jo
mov
push
or
inc
mov
negb
xchg
arpl
inc
in
stos
push
push
jl
sti
mov
jo
jns
pushf
jno
inc
dec
or
sarb
jle
sti
push
mov
mov
mov
jecxz
push
inc
jl
imul
pop
mov
fistps
add
lret
adc
arpl
shl
xlat
mov
repnz
xor
and
jge
sub
lahf
mov
adc
mov
clc
in
sarl
fwait
ds
icebp
imul
xchg
pop
dec
add
mov
mov
or
sub
and
push
mov
add
mov
mov
mov
insl
loope
popl
lock
icebp
pop
push
aad
cmpb
xchg
mov
mov
pop
or
dec
clc
cmp
jno
pusha
pushf
pop
dec
push
mov
adc
sbbl
es
pop
inc
sahf
shll
jl
cwtl
push
fsubrl
mov
mov
mov
int3
fcompl
sub
mov
adc
stc
pop
mov
cltd
mov
arpl
aad
int3
out
roll
fdivs
cmp
loope
mov
jge
or
xchg
mov
push
into
xchg
mov
mov
cmpsb
popf
cmp
mov
push
repz
xorl
sbb
pop
repz
sub
mov
xorb
les
add
ss
add
pop
sahf
lahf
xor
mov
or
jle
jns
mov
scas
push
mov
cld
fsub
repnz
cmp
pusha
cld
dec
mov
mov
jp
fisttps
xor
dec
ret
jo
jbe
jmp
sbb
shl
decb
pop
pop
and
push
call
and
stos
fldt
gs
jo
xchg
popa
mov
es
push
xchg
mov
loop
lahf
inc
stos
dec
lock
flds
cmc
jmp
hlt
or
movsl
dec
aas
pop
loopne
mov
push
rcrb
jmp
test
punpckhwd
adc
sub
int3
mov
jp
out
pop
mov
mov
out
hlt
loope
jecxz
or
push
inc
movsl
xor
add
stos
adc
xchg
fimuls
cwtl
ja
inc
pop
cli
mov
mov
xchg
jbe
lea
push
scas
int3
inc
or
cmp
cltd
push
sub
lcall
enter
pop
dec
outsb
movsb
out
lret
dec
aaa
pusha
pop
icebp
and
enter
pop
cmp
lcall
dec
out
lods
mov
xor
clc
push
push
jle
inc
push
pop
lock
adc
das
inc
hlt
fs
jae
scas
inc
cli
dec
and
mov
aad
pop
adc
jg
hlt
cmp
roll
lret
in
jbe
push
lcall
mov
inc
push
jge
mov
rcr
cltd
pop
or
ficomps
or
idivb
sbb
mov
ret
sar
adc
cmp
fistpll
in
sbb
shll
repz
inc
aaa
mov
push
enter
lods
pop
lods
inc
mov
jb
test
and
gs
js
inc
out
or
fdivr
push
dec
pop
roll
adc
sahf
cmpsl
lods
js
or
icebp
mov
mov
movsb
dec
and
stos
inc
fistpl
sbb
push
hlt
aas
pop
pop
cwtl
mov
xor
sub
cmp
ljmp
orb
pop
cmp
xor
jmp
outsb
out
adc
mov
mov
push
dec
pop
push
sub
cmp
mov
pop
jge
loope
clc
sub
clc
pusha
pusha
lods
cli
cmp
mov
icebp
inc
jg
popa
stc
xor
rcl
sub
add
xor
out
sbb
mov
and
mov
rcrb
xchg
sarb
enter
jns
sbb
dec
inc
push
pushf
test
push
mov
dec
push
pusha
mov
int3
ljmp
or
int
sub
clc
fscale
cmp
fxch
and
shr
mov
leave
mov
pop
xchg
lock
stos
scas
mov
mov
aaa
popa
pop
add
sub
pop
or
out
outsb
imul
push
pop
adc
filds
sub
cmp
jne
push
arpl
shlb
cmp
outsl
pop
bound
adcb
cltd
ret
xchg
out
icebp
out
mov
jne
test
inc
aad
test
or
leave
inc
in
mov
cmp
xchg
icebp
xor
jne
cmpsl
negb
fildll
xchg
test
mov
test
cs
icebp
jne
mov
mov
pop
cmp
dec
in
int
cltd
jp
cmp
imull
sub
or
test
mov
arpl
sbb
cmp
das
mov
cmp
push
add
mov
dec
xor
and
sarb
ja
scas
and
or
insl
and
test
ljmp
dec
jecxz
adc
jg
js
testb
push
jecxz
pop
cmp
mov
iret
pop
inc
jae
lcall
xchg
cmp
lcall
sbb
jp
xor
lcall
mov
test
cmpsl
in
and
jo
inc
pusha
sub
lods
cltd
insb
jg
sbb
out
popf
lcall
cli
and
xor
pop
xchg
hlt
mov
out
rorb
pop
insb
roll
movsb
stc
ret
fidivl
arpl
aas
lods
dec
push
aas
jnp
xlat
adc
lcall
xor
inc
mov
add
xor
jp
or
imul
cmp
adc
call
mov
outsl
neg
sbb
or
nop
and
in
lods
aad
jb
out
and
adc
imul
mov
push
sub
rcrb
iret
xor
outsb
outsl
pop
jns
jp
fldcw
lahf
shrb
or
js
sub
sub
and
xor
mov
jge
cwtl
dec
jae
xchg
imul
pop
sub
push
mov
aam
adc
mov
lret
pop
xlat
enter
push
lret
cmp
lcall
imulb
cs
and
cltd
dec
subl
test
cli
inc
clc
daa
out
jle
dec
ljmp
out
jnp
jns
push
out
sarl
lcall
data16
xor
lcall
sti
daa
mov
inc
imul
add
cmpsl
mov
mov
fstl
sbb
pushfw
test
pop
or
bound
sub
ds
dec
xchg
in
fucomip
in
xor
shrl
inc
inc
xor
cmpsb
inc
test
push
jp
push
imul
test
push
icebp
jecxz
movsl
xchg
add
clc
shl
es
stos
cmp
mov
add
leave
iret
jle,pt
xchg
or
xor
test
enter
xchg
xchg
jp
je
jmp
pop
inc
call
or
imul
lock
mov
dec
sbb
rdtsc
inc
ljmp
lret
sbb
clc
pop
pop
push
loop
pop
out
lods
icebp
xchg
mov
addr16
pushf
xor
inc
cmpl
fidivl
ret
cmp
push
xchg
or
aam
jns
cld
scas
push
stos
ljmp
dec
es
cmp
dec
cmp
sbb
add
pop
fiadds
cmc
pop
int
add
pop
dec
fdiv
in
adc
pop
sub
and
fdivs
mov
sti
out
lcall
xor
xchg
adc
jmp
mov
xor
imul
repz
std
mov
sbb
xchg
loop
sbb
xchg
dec
jmp
xlat
std
push
into
and
popa
daa
jp
aaa
ss
cmpsb
or
mov
fisttpll
and
and
pop
int3
xor
adc
cmp
sahf
adcb
jb
jae
sti
push
sbb
mov
cmp
push
mov
mov
rolb
fsubs
ret
lahf
inc
and
rcl
jne
notl
adc
ret
mov
and
inc
and
pop
mov
outsb
fldt
dec
setnp
sbb
gs
xor
aaa
iret
loop
and
icebp
sahf
fdivr
std
xor
or
pop
xchg
mov
fisubrl
or
dec
xchg
mov
sbb
push
orl
data16
inc
mov
arpl
gs
daa
das
mov
mov
xchg
hlt
sub
xor
jae
movsl
ds
pop
iret
and
fst
call
mov
cmp
sahf
fstl
dec
cmp
xlat
xchg
mov
out
push
dec
add
push
stos
push
bound
adc
loopne
cmp
cmp
sbb
xor
pop
xor
aad
loope
sub
call
inc
push
xor
jno
loope
adc
stos
xchg
lret
clc
xchg
adcl
pop
push
inc
push
out
and
dec
insb
mov
or
fdiv
in
rclb
or
and
cmpsb
cmp
or
loope
mov
dec
les
fldl
jb
inc
sub
aaa
out
cmpsb
int3
add
insb
lods
cmpb
daa
addr16
aas
xor
je
jbe
jl
nop
and
popa
fbld
int3
inc
pop
sbb
outsl
es
pusha
mov
enter
jns
push
xor
mov
sbb
out
sub
sbb
nop
jle
outsl
xchg
jae
sub
mov
push
movsl
or
sub
mov
pop
sub
fimull
sbb
js
mov
out
jae
push
add
jge
addr16
popl
rorl
je
in
add
mov
adc
shlb
adc
cmc
pop
inc
je
stos
in
and
in
xor
add
sbb
lods
cmp
mov
lcall
cs
jnp
mov
shll
cld
fs
mov
adc
test
push
orb
sbb
mov
cmp
imul
mov
push
mov
sbb
and
mov
adc
fistl
push
dec
fwait
mov
inc
mov
stos
jp
pop
movsl
jl
mov
cmp
or
and
pop
mov
cmp
inc
lret
fldcw
push
sbb
xchg
pop
cmp
adc
bound
adcb
enter
sbb
jmp
in
dec
inc
and
jo
aaa
int3
cmp
btcl
aad
inc
pop
hlt
in
sub
loopne,pt
stc
or
into
cwtl
xor
mov
xchg
xor
push
xor
push
fadds
pop
dec
jb
add
or
leave
dec
addl
test
enter
xorb
jbe
push
insb
leave
jle
sbb
sbb
movsb
inc
mov
push
lahf
loope
pop
jns
mov
in
fcompl
jnp
cmp
dec
mov
in
xor
roll
adc
jg
outsb
ljmp
jecxz
repz
push
inc
pop
popa
push
lret
sub
and
adc
fisubl
and
sub
test
cs
pop
test
xchg
aad
test
lods
loop
push
and
dec
jne
inc
mov
push
mov
cld
xlat
icebp
nop
mov
fdivrs
repnz
cld
fs
lret
ja
pop
test
aam
push
pop
jge
sbb
jmp
ror
jnp
add
push
fstps
dec
or
sbb
aam
and
jp
mov
cmc
sahf
movsl
adcb
and
inc
inc
sub
cmpsl
fcoms
adc
mov
cltd
dec
lcall
rcll
movsb
xor
sar
test
out
ds
loope
data16
shlb
pusha
mov
in
in
sub
jl
jg
mov
inc
mov
lock
orl
pop
stc
fbld
jp
ds
fsubp
fmuls
and
lret
mov
daa
aad
xor
pop
xchg
es
mov
sbb
jno
sub
aas
stos
scas
fidivrs
adc
das
int
cwtl
pop
jge
and
xchg
xor
cli
push
scas
movsb
iret
pusha
out
ljmp
imul
sbb
adc
adc
bound
mov
cmp
mov
mov
lahf
enter
sub
push
pop
movsb
add
je
add
xor
jmp
sub
jle
mov
pop
inc
pop
andb
ss
inc
stos
aam
outsb
leave
repnz
cld
pop
sbb
pop
mov
out
sbb
jb
test
xchg
pushf
lock
lock
mov
aad
push
int3
repz
int3
test
push
sub
addr16
cmpsl
inc
fidivrl
popa
loope
dec
into
int3
adc
sub
ret
imul
sbb
or
xchg
jp
out
or
jle
xchg
mov
adc
shlb
lret
pop
jo
in
aas
and
addr16
movsb
push
push
inc
add
and
mov
push
cs
movsb
call
sbb
popa
rorb
movsb
and
ret
pushf
repnz
push
in
outsb
sbb
idivl
in
movntq
jecxz
popa
jl
jg
dec
mov
loope
jp
inc
pop
or
shll
fwait
movsl
cmp
push
sub
jb
ja
jge
ss
add
add
fs
push
push
cld
or
sub
jge
nop
push
mov
ret
cmc
or
pop
or
mov
js
mov
hlt
dec
cmp
inc
lods
pop
pop
add
repz
je
scas
test
lea
int3
and
ret
cmp
inc
shlb
sbb
pop
sbb
sub
popf
push
call
jae
mov
adc
dec
cmpsb
push
mov
mov
mov
dec
jae
and
mov
and
repz
inc
xchg
aaa
jb
mov
aas
add
aam
xchg
repnz
inc
jo
adc
xchg
andl
pop
adc
or
mov
push
sbb
xlat
iret
fstpt
adc
jmp
hlt
bound
pop
outsl
sbb
push
insb
repz
inc
adc
stc
dec
jns
scas
and
aad
into
js
insl
nop
fstp
pop
loop
repnz
sbb
shlb
ficoml
mov
dec
cmp
xchg
or
xchg
test
sbbb
mov
add
lret
imul
sti
push
xchg
les
mov
imul
xchg
fdivrl
lock
cmp
div
scas
lods
imul
xlat
xchg
std
dec
lcall
pop
xlat
call
jmp
aam
ja
pop
jbe
lret
insb
adc
scas
ret
jno
int3
in
pop
nopl
fwait
sub
loopne
arpl
in
stc
lock
push
adc
pop
sbb
jle
pop
adc
and
inc
sbb
dec
sub
cmpsl
inc
mov
jns
repz
lea
outsl
mov
mov
dec
daa
mov
out
add
xchg
sub
dec
jns
and
fmul
cld
and
jl
mov
rcl
xlat
mov
fdivl
adc
jno
test
add
cmp
outsb
sub
mov
fcom
mov
or
imul
cmp
push
cs
clc
pop
jmp
stc
lret
or
movsb
mov
enter
pusha
out
and
mov
mov
xchg
mov
jne
pop
lret
repnz
pop
xchg
lock
sbb
nop
cltd
xchg
mov
repnz
xchg
and
popf
addr16
sar
dec
lock
or
popa
mov
fildl
add
xchg
mov
pop
icebp
rorl
into
jns
mov
arpl
mov
fadds
jl
decb
test
jp
icebp
adc
repz
pop
fsubl
repnz
mov
lods
push
shlb
fistpll
jbe
fistpll
push
mov
roll
mov
mov
and
cmp
mov
out
xor
dec
or
push
movsl
das
or
lods
addr16
add
roll
lods
xchg
xchg
shlb
sub
call
jne
add
data16
in
push
jae
jne
into
lods
mov
push
lods
mov
roll
jecxz
test
rclb
xchg
arpl
push
cmp
orb
mov
loopne
add
repz
cld
into
and
lea
push
xor
dec
fistl
inc
sbb
or
fs
and
ljmp
lret
stos
mov
pusha
push
or
mov
insl
in
add
or
arpl
sbb
fldl
sbb
cli
pop
inc
es
pop
jb
mov
sbb
shll
or
in
lret
jp
aad
jp
iret
cmp
jge
shrl
adc
cmp
mov
gs
aaa
push
push
xor
pop
es
outsl
jge
inc
mov
pop
mov
sbb
fsts
and
adc
pushf
mov
fwait
xchg
pop
in
shll
and
cld
aas
jl
and
pushf
inc
and
shlb
sub
ja
mov
outsl
pop
repz
scas
lahf
mov
test
hlt
add
das
in
in
pop
mov
ror
inc
shr
sub
aaa
push
mull
xchg
jp
and
fnstsw
xor
or
mov
popf
add
push
inc
vdivps
mov
sub
cwtl
mov
loope
cmp
mov
daa
pop
lcall
mov
pop
inc
pop
inc
and
fwait
andl
lds
pop
pushf
repnz
jnp
push
outsb
imul
pop
shrb
xor
movsl
out
xchg
ljmp
jno
repnz
stc
dec
sbb
push
jne
test
cmc
stos
mov
stos
int3
jo
sub
cld
sub
aad
in
mov
adc
sbb
mov
sbb
rorl
loop
xchg
sahf
rcl
mov
push
dec
test
lods
mov
lahf
push
out
dec
insb
in
pushf
mov
pop
or
lock
mov
dec
shll
adc
pop
inc
mov
mov
ficoms
out
mov
dec
xchg
xor
and
in
sbb
inc
sarl
in
ljmp
repz
sub
xchg
fwait
sahf
imul
inc
dec
and
test
stc
aam
enter
push
add
xchg
lahf
xchg
cmp
mov
push
lahf
sbb
fadds
mov
mov
fidivrs
jle
dec
pop
jmp
orl
nop
pop
dec
lret
push
aad
adcl
jp
data16
inc
mov
mov
int
sbb
addr16
push
rcrb
pop
jecxz
rclb
pop
fidivrl
sub
daa
add
in
cmpsb
pop
inc
jg
or
sbb
pop
in
dec
cmpsl
fsubs
fwait
add
shl
sbb
jb
sbb
popf
dec
mov
adc
loope
mov
test
lea
repz
in
icebp
pop
and
dec
mov
mov
in
data16
adc
dec
xor
mov
loope
dec
mov
mov
xchg
inc
cmc
gs
roll
xchg
dec
mov
sub
mov
pop
add
mov
jnp
les
pop
push
popa
test
pop
loope
mov
add
hlt
inc
adcb
movb
adc
imul
add
mov
add
ds
arpl
insb
mov
lahf
add
jl
and
mov
xor
or
push
cmp
dec
icebp
fldcw
pop
enter
call
inc
push
leave
loop
jnp
sbb
lods
push
xchg
inc
sub
mov
shll
xor
bound
xchg
pause
cmp
push
js
pop
or
je
int3
inc
and
into
pop
mov
out
fwait
ret
sbb
jno
cmc
xor
outsl
add
inc
pop
hlt
mov
dec
sub
and
jecxz
jb
xor
cmp
cltd
xor
lock
and
lahf
lret
xchg
mov
hlt
jmp
rcll
std
mov
popf
sub
cmp
lret
add
xlat
fisttps
int
dec
or
push
sbb
dec
add
xchg
mov
aad
paddusw
xor
popf
mov
push
into
ds
lcall
jg
adc
push
iret
fmuls
out
adc
cmp
in
adc
lea
pop
mov
lock
mov
cmp
adc
add
lea
test
shll
add
xchg
pop
cli
das
hlt
jge
ret
mov
inc
inc
mov
inc
ss
pop
add
mov
insl
inc
loop
adc
fdivl
ss
xor
aas
dec
mov
cmp
sbb
push
or
adc
cmp
cwtl
sub
xchg
pusha
ljmp
sahf
ret
mov
xor
inc
fisubrs
pusha
jb
scas
cld
mov
adc
xchg
jp
jg
lret
pusha
fdivs
pop
push
jbe
in
std
push
jge
out
js
imul
xor
add
jle
ret
ret
mov
in
sub
jbe
fwait
cli
inc
jle
mov
and
lock
inc
sbb
dec
inc
mov
inc
pop
outsl
mov
andl
and
push
inc
xchg
mov
movsl
test
je
pop
rcll
jnp
mov
xlat
push
and
lret
test
lock
aaa
add
add
icebp
mov
ret
xchg
add
push
clc
cld
dec
leave
pop
sbb
push
or
xchg
stc
incb
xor
push
ret
mov
cmp
push
cmp
inc
xchg
outsb
ss
mov
sbb
je
xchg
nop
or
loop
andb
mov
lret
jge
dec
aad
rorl
loop
int3
xchg
std
sbb
fisttpl
sub
cld
lret
movl
push
arpl
push
in
cltd
mov
dec
int3
fnstenv
movsl
js
sar
in
push
adc
push
icebp
xor
test
jbe
fstps
lcall
jle
rorb
mov
imulb
scas
int
iret
adc
adc
iret
cwtl
daa
xlat
inc
ds
sti
sti
mov
call
pop
lods
cld
mov
xchg
ja
mov
inc
rolb
sub
pop
fmuls
mov
out
cmp
dec
mov
rcrl
leave
in
scas
cmp
sub
int3
pop
cltd
js
push
test
or
jmp
push
mov
sbb
or
pop
aas
add
xor
shl
jecxz
push
fwait
test
jbe
cmp
mov
fwait
adc
int
xor
sbb
rorb
imul
jns
fwait
sbb
inc
scas
sbb
sbb
xchg
jp
lock
mov
cwtl
enter
jno
mov
sbb
je
daa
or
ljmp
movsl
cmp
idivl
cmpsb
mov
pusha
mov
repnz
dec
adc
fistps
mov
push
push
or
data16
orl
rcrb
jns
sti
jns
stos
or
jns
ljmp
sti
gs
pop
xchg
aaa
enter
jns
cmp
pop
jbe
shlb
pop
pop
xchg
ljmp
ljmp
adc
pushf
hlt
pop
test
mov
out
jo
jmp
pop
and
add
pop
inc
sarl
xchg
pop
nop
mov
cmp
imul
pop
jl
outsb
imul
jnp
adc
lock
sub
jecxz
mov
mov
mov
aas
sbb
dec
mov
xor
hlt
add
sbb
jb
cmpsl
mov
mov
subl
add
sub
xor
popa
push
dec
dec
je
mov
mov
in
sub
jnp
push
and
cmp
push
lea
cmc
or
bound
cli
sbb
add
push
sub
fs
and
jmp
and
inc
fstl
mov
mov
jecxz
mov
loopne
dec
dec
in
scas
psubsb
adc
lret
pushf
cmp
mov
ficoms
adc
ret
sub
add
jne
sub
dec
push
stos
cmp
sahf
out
and
add
filds
pop
pop
sbb
mov
xor
icebp
inc
cld
fstp
inc
xchg
cwtl
imul
and
inc
shl
jp
jno
sbb
push
mov
push
loopne
stc
sub
sbb
and
pop
sbb
lret
scas
mov
clc
pop
cmp
shrl
add
and
sub
cmp
adc
cmp
addr16
repnz
fnstsw
add
ja
mov
sub
jl
pop
movsl
dec
xchg
pop
cld
stos
xor
es
mov
mov
sti
roll
outsl
push
and
pop
sbb
std
lods
test
imul
andl
in
mov
into
xor
imul
jl
mov
mul
aas
fldl
rorl
es
mov
xor
pop
popa
imul
adc
movsl
test
and
jb
or
mov
jmp
push
test
push
xor
add
and
dec
dec
mov
xchg
mov
sub
push
imul
pop
push
mov
mov
sarl
mov
leave
in
enter
xchg
ret
popa
mov
push
repnz
or
out
push
mov
mov
pop
es
in
das
rcll
loopne
pop
leave
sbb
fcomp
xchg
cmp
inc
mov
std
dec
sti
mov
les
and
in
gs
adc
mov
xchg
test
jp
add
fwait
mov
xor
adc
out
lcall
adc
aas
shll
cmpsb
sub
inc
std
add
ss
xor
outsb
jmp
imul
push
addr16
xlat
roll
inc
mov
push
mov
mov
add
cmc
and
insb
pushl
loop
leave
repz
out
lods
shlb
push
push
xor
push
movsl
fsts
dec
adc
mov
nop
push
je
pop
xor
fbld
jmp
pop
stos
inc
roll
xor
imul
push
stos
mov
inc
xchg
fidivl
ret
test
lahf
mov
xchg
xchg
jno
les
or
cmpsl
imul
xchg
popf
mov
and
call
mov
inc
mov
sbb
rcll
pop
inc
in
adc
mull
mov
int
aam
jp
sub
je
inc
pusha
ss
mov
xchg
xor
xor
ss
cwtl
mov
cmp
xchg
jle
ja
mov
xor
xor
mov
sub
cmp
in
xchg
push
aas
lret
mov
cs
and
dec
adc
out
cvtpi2ps
stos
inc
pop
scas
pop
hlt
neg
sarl
dec
mov
shrd
mov
dec
jns
push
fildll
cmc
mov
push
sbb
cmpsb
imul
lcall
push
in
fstpt
pushl
mov
xchg
xchg
sub
je
push
mov
lcall
aaa
aaa
pop
add
jns
in
adc
sbb
or
imul
add
inc
pop
movq
nop
das
cmpsl
mov
xor
push
mov
adc
outsl
adc
cmc
dec
push
dec
push
xor
int
fbstp
dec
cmp
mov
scas
and
pop
out
int
sbb
and
jle
and
lods
stos
jne
mov
ficoml
xor
mov
lods
lea
mov
fbld
rclb
aas
pop
les
or
dec
inc
mov
cld
testl
jb
outsb
push
clc
es
pop
push
dec
mov
repnz
add
in
sti
mov
movsl
pop
push
call
into
fwait
push
ds
icebp
add
sti
cmp
dec
rolb
clc
out
pop
cwtl
into
outsb
xor
lock
hlt
and
xor
fidivrs
imul
imul
call
movl
call
imul
jnp
cmp
and
ss
pop
lea
add
mov
adc
and
xchg
lods
ljmp
adc
rolb
jmp
jmp
inc
rcrb
inc
call
pop
xchg
pop
push
loopne
jnp
jge
pop
in
fcmovne
push
outsb
xchg
out
mov
sbb
mov
shll
jecxz
jmp
push
and
pop
jge
dec
shr
stos
and
dec
mov
mov
hlt
aad
mov
ds
outsl
add
fldl
leave
popa
jl
xchg
lods
jae
add
add
sub
jecxz
pop
dec
leave
jns
lods
sub
in
jl
dec
insl
mov
outsl
aam
repnz
push
cmpsl
dec
hlt
fadds
cld
cmp
fmull
pop
mov
dec
or
mov
dec
cmpl
jne
sub
push
mov
inc
iret
loop
movsl
mov
mov
dec
and
mov
xor
dec
push
push
ror
pop
mov
pop
cmp
clc
jmp
and
lcall
ds
movsb
xchg
test
dec
mov
push
pop
lds
gs
add
push
and
inc
mov
cmp
xlat
mov
shll
or
aad
loop,pn
or
fistl
jae
push
jns
cmpsb
and
mov
aam
pop
int
jp
mov
loopne
push
popf
adc
xchg
push
fsubrl
lret
cs
pop
mov
jno
add
jecxz
stos
ss
cwtl
mov
jb
adc
stos
push
xchg
jae
je
xchg
inc
xchg
imul
sub
ficompl
mov
pop
mov
scas
fwait
jmp
clc
shlb
inc
ja
push
mov
fisttpll
dec
out
lahf
jecxz
adcl
in
popa
dec
push
pop
cmp
mov
popa
inc
inc
out
mov
lahf
outsb
mov
inc
pusha
mov
jp
pop
jno
divl
add
test
cli
iret
push
xor
cmp
pushl
or
rcrb
mov
xor
jp
lret
push
sub
lea
xor
fmull
jnp
mov
cmp
movsb
or
push
mov
mov
imul
aad
add
bound
in
mov
fs
pop
shrb
xchg
bound
cmp
out
mov
lret
sbb
xchg
std
mov
pop
and
fldt
int
jp
fldt
push
in
pop
test
gs
leave
nop
mov
sub
sbb
inc
ret
cmpsl
in
arpl
mov
mov
add
xor
jle
xchg
sub
pop
adc
outsb
cmp
mov
inc
insb
sahf
fstps
je
in
mov
dec
xchg
je
dec
jnp
xor
ljmp
je
call
pushf
dec
pushf
sbb
lcall
rol
adc
adc
repnz
shl
inc
pop
mov
sub
mov
xlat
loop
jo
shrb
add
outsb
ret
sub
mov
insl
arpl
sar
mov
js
mov
inc
mov
or
sub
clc
pop
lods
movsb
inc
add
fcmovnu
and
push
push
push
in
out
dec
gs
ja
push
cwtl
jmp
and
add
fsts
rclb
addr16
add
stos
iret
ja
int
fcmovb
movsl
cmc
fnstsw
adc
push
inc
addr16
push
push
xor
leave
sbb
mov
arpl
pusha
xchg
scas
pop
addl
pusha
test
mov
adc
lea
mov
std
dec
mov
fnsave
cmpsb
scas
jle
push
scas
mov
out
popf
push
int3
inc
or
sti
cmp
stos
mov
test
sbb
and
inc
xchg
dec
push
shlb
fidivs
or
inc
mov
sar
imul
xchg
ss
int
jb,pn
push
mov
cmp
mov
test
pop
jbe
iret
sbb
jg
cmp
mov
aam
mov
js
nop
add
pop
push
cmp
shrb
push
fsubs
jb
stos
lds
test
les
add
pop
pop
ret
and
push
and
jle
fsubrs
js
mov
insb
add
out
mov
mov
mov
pop
xor
les
mov
push
mov
mov
xchg
stc
or
das
call
or
xor
sub
inc
loopne
insl
dec
jae
sbb
out
in
aad
xor
shrb
jl
push
sbb
int
call
xor
stc
loope
mov
cs
push
loopne
add
popf
stos
lods
xchg
push
sahf
or
dec
mov
je
pop
enter
leave
in
mov
pavgw
loope
loop
sti
cltd
and
movl
mov
test
adc
aas
bound
inc
mov
ss
neg
adc
fcom
enter
push
or
xor
push
mov
add
sbb
ret
xchg
rorl
adc
cli
dec
mov
pop
outsl
test
pop
outsb
sbb
dec
push
inc
sbb
imul
fcomp
repz
int
and
cld
push
dec
out
fwait
data16
sub
inc
xor
push
mov
ret
sbb
inc
fdivrl
sbb
or
xorl
ljmp
gs
sbb
mov
xchg
arpl
out
into
mov
jl
insl
cmpsl
lods
pop
dec
xor
mov
imul
popf
test
std
out
mov
cmpl
shl
mov
push
lods
adc
jno
mov
pusha
mov
jmp
sbb
shlb
loopne
pop
cld
mov
add
sbb
movl
xchg
push
insb
jbe
arpl
add
xor
lods
out
int3
mov
or
xor
hlt
xchg
dec
es
movsb
pusha
pop
and
bound
idivb
cmp
mov
imul
test
repnz
pop
decb
pushf
ret
jmp
cmp
ds
jnp
jge
and
fadds
mov
mov
int
movsl
pushf
call
push
inc
add
adc
dec
adc
je
cmp
icebp
stos
repnz
xchg
int3
outsl
push
xchg
jmp
mov
fldt
mov
dec
nop
iret
in
xlat
fidivl
rclb
sti
loopne
cwtl
movsb
mov
aaa
sbb
stos
les
jmp
xchg
cmp
pop
imul
cwtl
add
cltd
loopne
push
hlt
sbb
icebp
push
daa
push
cmpsl
or
movsb
add
aaa
or
in
dec
outsl
outsl
mov
loopne
and
addl
pop
xchg
lcall
imul
xchg
popa
pop
jmp
jb
mov
shr
or
and
fnsave
adc
scas
inc
xchg
fnstcw
inc
roll
xchg
mov
sahf
adc
mov
push
addl
nop
and
dec
add
dec
movsb
arpl
sub
imulb
dec
mov
sub
xchg
or
sbb
movsl
jmp
lds
bound
out
mov
inc
lea
add
jecxz
sub
xchg
sar
dec
out
dec
ret
and
dec
outsb
inc
mov
xor
fisubrl
mov
jns
cmpsb
xor
gs
lods
adc
into
mov
rcll
cmp
dec
mov
test
sarb
jns
or
in
inc
sub
imul
int
sub
mov
call
xchg
pop
or
xchg
clc
push
pop
aas
adc
test
insb
add
movsb
xchg
cmp
insl
push
sahf
inc
mov
movsb
jb
dec
jno
mov
fwait
sbb
pop
mov
xchg
in
mov
inc
mov
test
pop
leave
pop
push
add
bound
aam
and
and
adc
test
mov
jo
sahf
sub
pop
dec
out
aas
in
lods
sub
mov
dec
sahf
jl
add
mov
and
xor
addl
sub
xchg
adc
jns
jmp
mov
ja
push
aam
fisubrl
push
test
lret
std
movsl
sti
mov
push
shr
popf
sub
outsb
in
mulb
and
mov
jecxz
or
mov
js
int3
cltd
nop
mov
mov
mov
adc
sbb
push
cmp
iret
ret
pushf
xor
cmpsb
je
lods
jo
addr16
ficoml
pop
repnz
xchg
insb
fistpl
mov
xchg
pop
cmp
aas
add
mov
ljmp
adc
cmp
hlt
xor
add
adc
jecxz
sbb
pop
sbb
jle
scas
jnp
test
lahf
xor
mov
inc
and
pop
bnd
hlt
mov
pushf
sbb
shrl
sub
jns
fld
cld
sbb
cmpsl
not
xchg
or
in
std
sub
cmp
inc
lea
sbb
ljmp
fsubs
pop
dec
stos
dec
and
popf
adc
pop
arpl
mov
test
push
adc
cmp
out
mov
mov
mov
leave
xchg
cmp
cmp
fdivr
inc
push
xchg
push
add
fists
movsl
push
test
lret
mov
or
mov
jno
mov
mov
push
sbb
call
jo
jl
xor
push
lcall
lcall
mov
fcmovne
cld
and
or
and
scas
lods
ja
mov
aam
xchg
xchg
and
jo
pop
fsubl
inc
cmp
mov
stc
xchg
loop
cltd
je
xchg
js
clc
ret
adc
dec
mov
loopne
fistps
scas
cs
jg
mov
pop
fsubrs
out
inc
pop
aaa
cld
inc
fs
mov
add
push
inc
push
xlat
fidivrl
sarb
in
fbld
push
lea
jmp
int
int3
mov
sub
into
fstl
mov
nop
xchg
pop
addr16
in
iret
jp
rcrl
aad
push
repnz
mov
jno
lea
push
fsubrs
push
mov
lret
inc
or
movsl
sbb
loopne
xchg
outsl
jg
fistps
test
adc
push
hlt
int
push
and
xor
xor
xor
in
push
loope
cmp
mov
xor
dec
mov
dec
rclb
and
xorb
xchg
xor
cli
dec
mov
js
ret
aaa
or
xchg
sbb
outsb
int3
or
sbb
add
cld
pop
xor
xchg
subl
imul
mov
out
mov
xchg
or
popa
and
dec
jmp
inc
pushf
mov
mov
sub
push
xchg
push
popa
xor
inc
mov
xor
xlat
in
clc
aas
cmp
sub
ss
jae
mov
outsl
mov
mov
les
scas
jecxz
xor
rorl
add
xor
stos
cmp
int
push
xor
es
or
sbb
jmp
mov
mov
test
shlb
mov
imul
mov
sbb
imul
jo
push
pop
sub
int
jge
dec
sbb
sub
repnz
or
lgs
push
xor
add
enter
imul
cmc
leave
lods
nop
loope
cwtl
addr16
dec
mov
mov
repnz
sahf
outsb
mov
addl
push
fwait
fwait
out
and
cmp
or
xor
lret
loope
add
jle
push
add
repz
dec
or
faddl
mov
pop
mov
sbb
rorl
sub
jnp
out
out
and
push
xchg
insl
inc
sti
sub
lret
fisttpll
pop
and
mov
fldl
outsb
fwait
inc
mov
mov
scas
push
inc
loop
test
xor
push
add
pop
inc
or
fwait
or
fists
cmp
mov
mov
push
push
or
lret
loopne
fcom
in
xchg
xchg
or
xchg
mov
fiadds
out
fisubs
push
lock
les
add
imul
inc
ret
hlt
adc
fisubl
cmpsl
jmp
dec
push
jle
fs
adc
in
and
xchg
sbb
sub
lea
push
push
sbb
pop
push
dec
or
xchg
push
jo
sbb
lahf
in
push
jae
in
add
pop
push
js
jl
mull
pop
pop
enter
cltd
in
adc
mov
dec
clc
xchg
test
jno
outsb
dec
cmpsl
ljmp
jmp
and
cld
into
sbb
mov
test
mov
fildl
pop
jl
sub
jmp
sbb
sbb
push
insb
pop
add
arpl
dec
pop
aad
je
lcall
daa
gs
pop
add
inc
and
ljmp
lods
ret
mov
test
push
leave
rcrl
dec
fmulp
ds
mov
pop
push
xor
mov
sbb
push
xchg
loopne
pop
dec
mov
mov
dec
mov
loopne
outsb
dec
mov
iret
sub
sub
pushf
lods
xor
sbb
lret
add
sahf
jp
jns
int
pusha
push
out
lods
gs
lea
sbb
jecxz
mov
adc
xchg
into
sub
mov
arpl
mov
pop
loop
adc
in
xchg
lds
sub
rorl
lods
sbb
lods
mov
setne
xor
sarl
fsubs
jno
cltd
sub
push
scas
pop
dec
push
add
clc
and
push
enter
insb
stc
mov
stos
bound
aas
icebp
in
aam
pop
sub
xor
jl
push
cmovb
adc
xor
sub
xchg
mov
fmuls
cs
imul
xorb
jnp
or
mov
dec
es
jne
dec
mull
pop
xlat
test
push
out
imul
jne
adc
ljmp
mov
lret
or
es
loopne
aad
mov
gs
dec
repnz
jbe
push
cmc
xchg
or
aam
add
push
push
pop
outsl
test
jl
andb
inc
jbe
cmp
inc
xchg
xchg
int
call
fldl
inc
push
inc
out
jns
push
pop
not
cs
sub
xchg
sub
movsl
mov
pushl
idivb
bswap
dec
daa
sub
repnz
sbb
mov
imul
dec
lret
pop
xor
sbb
inc
movsb
mov
xchg
leave
ficoms
jmp
mov
dec
ret
lahf
mov
inc
add
dec
push
sub
xor
pop
adc
in
addr16
xchg
pop
cmpsl
dec
int3
insb
pop
mov
mov
fwait
mov
icebp
xchg
data16
out
outsb
xlat
or
sbb
and
mov
jbe
in
lret
sub
jne
movsb
int3
dec
inc
adc
aam
and
sub
rolb
orb
hlt
mov
and
jo
lret
in
in
cltd
loop
cmc
cmp
xor
mov
sbb
aam
mov
xchg
pop
pop
mov
test
pop
xchg
cmc
xchg
mov
popw
pop
dec
out
int
inc
pushf
aam
mov
out
arpl
scas
cmpsb
dec
xchg
addr16
jnp
mov
add
test
or
adc
data16
enter
mov
imul
das
pop
mov
js
aaa
cmp
or
adc
add
hlt
xchg
push
leave
rolb
fadd
ljmp
and
dec
int
push
push
gs
dec
lcall
sbb
jnp
push
xor
sbb
arpl
sub
mov
adc
int3
pop
pop
inc
stos
outsl
popf
push
loop
shll
movsl
mov
cmpsl
push
push
mov
daa
insl
or
lahf
jg
push
out
add
jmp
add
xchg
sub
fwait
addr16
or
aas
nop
mov
movsl
mov
ja
pop
imul
sub
out
loopne
sbb
loope
out
sahf
and
inc
cltd
mov
je
jo
dec
and
lret
add
hlt
and
dec
cmpsl
adc
mov
pushf
nop
or
int3
pop
rorb
pop
cmp
mov
popf
es
cmp
pusha
cmp
mov
out
pop
push
cmp
jmp
push
sbb
sub
lock
das
hlt
push
and
loop
adc
pop
dec
movsl
sbb
or
jo
shr
xchg
mov
sarl
and
lret
dec
push
mov
adc
ret
cld
mov
xchg
add
mov
dec
aas
lods
aad
aaa
imul
sub
xchg
movsl
sahf
into
adc
sub
mov
dec
ret
cmpb
mov
push
dec
or
pop
fiadds
adc
cmp
ja
jp
fmul
xchg
scas
push
lahf
scas
aaa
cmp
xchg
inc
dec
ret
in
push
mov
aas
bound
inc
mov
sbb
loopne
and
jbe
lods
fisubs
sarb
pop
rcrl
sbb
addl
sub
fdivl
ja
mov
lods
xchg
rclb
inc
adc
add
pushf
iret
test
xor
lock
adc
repz
push
sti
mull
call
flds
sar
pop
pop
mov
or
adc
jbe
into
jbe
fidivl
mov
mov
arpl
leave
lret
xchg
mov
lea
push
xchg
pop
sbb
insl
lods
test
mov
ret
jnp
xchg
jne
mov
push
fistpll
mov
mov
xchg
popl
jl
fcom
fisttpl
int3
dec
jmp
and
out
scas
dec
fisubrs
pop
mov
add
cli
inc
lcall
adc
lret
dec
cmp
cli
lods
mov
push
loopne
bound
cs
mov
dec
xchg
scas
xor
cltd
pop
and
cmp
repnz
mov
mov
loopne
and
test
shrb
cltd
jbe
or
xchg
xor
mov
cmc
fcmovnbe
inc
pop
sbb
jge
sbb
fildl
sub
add
xor
loope
xchg
cld
xlat
es
sub
sbb
inc
push
adc
mov
sbb
sub
sbbb
cmc
fstp
sahf
fsub
mov
push
jl
jo
sbb
inc
ret
or
lock
inc
xlat
in
mov
xor
pop
pop
mov
iret
add
push
mov
rolb
push
mov
cmpsb
push
lret
or
sub
jle
sbb
mov
in
icebp
ficoms
jg
cmp
xlat
sarl
push
sub
je
mov
mov
mov
mov
sbb
add
sbb
imul
mov
hlt
cmp
ljmp
adc
fildl
rorl
inc
dec
and
mov
lds
mov
cmp
lock
pop
xchg
push
add
mov
sub
je
rorl
xchg
loopne
sbb
fsubr
mov
inc
andl
fnsave
jb
lcall
lods
push
push
orl
jg
adc
mov
push
pop
iret
outsb
out
sub
sub
test
mov
imul
aad
push
stc
add
pop
push
mov
test
insl
shll
std
inc
sbb
aas
push
mov
xchg
pop
mov
and
cmp
movsl
xor
int3
outsb
shrl
pop
mov
addr16
nop
jae
mov
xlat
jb
les
ret
pop
cli
pop
cmp
lahf
xorb
movsl
cld
mov
pop
fildll
sbb
or
call
mov
insb
pop
subl
adc
sahf
enter
and
sbb
sarb
pop
xor
xchg
outsb
push
insl
mov
mov
push
outsb
es
mull
mov
sub
pushw
cmp
icebp
int3
push
push
sahf
sub
rcll
ss
push
bound
sub
lods
push
or
or
push
lods
cld
rolb
repz
out
out
push
xchg
call
jg
mov
roll
idivb
fbld
and
lcall
cmp
xchg
repz
push
mov
addb
jb
push
sub
dec
mov
xor
mov
cltd
mov
fstpl
repz
inc
pop
fcomps
cld
inc
push
dec
cmp
addr16
push
ljmp
ljmp
mov
mov
cld
fsts
sarb
cmpsl
cmp
shll
sub
scas
stos
ret
gs
stc
test
shrb
arpl
jae
and
adcl
or
pop
rol
lods
stos
and
cmc
xor
inc
ss
cli
jle
and
inc
xor
shlb
push
and
jb
jo
push
jbe
mov
sahf
cld
mov
call
cmp
sbb
aaa
xchg
gs
insb
xchg
dec
xchg
imul
add
dec
sub
sahf
imul
mov
xchg
shll
out
hlt
lock
add
hlt
imul
fsubr
pushf
jo
pop
repnz
push
add
mov
daa
pushf
sbb
nop
stos
roll
cwtl
inc
fsubs
sbb
sub
dec
sbb
cmp
sti
mov
dec
lods
lds
lret
push
cmp
or
lods
sub
add
lahf
lret
pop
ss
mov
xchg
xchg
add
fxam
fiaddl
or
sahf
aad
mov
jb
mov
das
stos
jns
mov
xchg
leave
jp
out
jl
lea
cmc
insb
stos
std
mov
dec
fcoml
push
aaa
dec
mov
mov
in
push
loopne
lret
nop
loop
adc
cld
xchg
cmp
and
adc
lret
mov
out
cmp
dec
sub
mov
adc
lcall
sbb
mov
icebp
dec
mov
push
pop
insl
les
xchg
test
dec
ss
xor
sub
cltd
or
notl
out
aad
and
les
push
mov
or
and
repz
test
adc
movsl
stos
les
sahf
sbb
arpl
cmp
and
psadbw
push
daa
cmp
and
fmull
pop
mov
push
call
std
add
add
fld1
aad
lcall
jmp
icebp
jnp
or
in
lahf
shll
jmp
fdivrs
in
std
ficoms
filds
enter
dec
cmp
and
xchg
lret
scas
push
jg
cmp
sub
xchg
cmp
xor
push
sub
hlt
and
mov
mov
in
imul
mov
bound
push
xor
rorl
lods
inc
arpl
repz
jae
aam
mov
imul
pop
and
xchg
lahf
cmp
pop
fs
subb
movsb
jns
addl
jo
inc
jecxz
pop
adc
popf
popf
loop
add
rclb
imul
in
rol
data16
xor
out
mov
gs
jle
inc
jl
pop
pop
mov
pop
in
rorb
push
adc
mov
jae
fsubr
and
dec
bnd
cmpsl
mov
rorb
cmp
or
mov
mov
mov
jno
mov
push
clc
daa
aad
lds
xchg
xchg
iret
int3
loop
adc
push
and
pusha
icebp
lock
mov
int
xchg
incl
jno
or
cltd
pushf
jmp
testb
cmp
pop
xchg
dec
jp
mov
cltd
into
mov
in
dec
adc
sbb
xchg
popf
adc
dec
xlat
adc
insl
scas
pop
scas
and
xchg
mov
mov
mov
push
loope
into
adc
pusha
ljmp
ss
sbb
cmp
mov
mov
mov
push
push
adc
pop
loop
sahf
mov
lahf
loope
lods
pop
sub
and
sub
cmpsb
sbb
adc
popf
js
xor
dec
lods
inc
sbb
das
scas
and
jp
jmp
and
stos
xor
and
cmpsb
dec
push
pop
sbb
outsb
dec
push
or
les
sbb
imul
mov
push
mov
pop
xor
xchg
xor
arpl
sbb
test
es
xchg
push
xlat
lcall
xchg
mov
jmp
test
mov
imulb
jg
test
out
dec
pop
adc
mov
sarl
rcrb
mov
inc
push
testl
shlb
push
push
mov
rcr
jb
pusha
mov
fwait
out
xor
rol
aam
jge
xchg
mov
jb
dec
iret
mov
add
jecxz
push
std
sub
cwtl
and
or
stos
mov
mov
stc
filds
xchg
mov
pop
rorl
inc
adc
sbb
sub
shlb
mov
jno
and
mov
ret
jae
int
mov
add
dec
lret
dec
aaa
andb
xor
cmc
into
jp
pushf
pop
xchg
lcall
outsb
fcmovnb
sarb
jno
mov
mov
sti
jb
or
adc
stos
and
pop
ficompl
jne
pop
lret
icebp
adc
ficoml
cmpsb
sbb
push
inc
push
xchg
xor
adc
jl
shlb
mov
mov
sub
cmpsb
cli
jbe
aad
and
adc
pop
into
mov
pop
push
or
mov
adc
jno
lahf
hlt
push
sbb
repnz
je
push
test
add
jle
mov
clc
popf
fisttpl
push
sub
leave
mov
rolb
dec
and
inc
xchg
jecxz
out
call
cmp
repnz
cli
or
hlt
ljmp
xlat
bound
cmp
test
jl
sti
xchg
mov
or
out
je
int3
lds
jno
dec
jp
clc
or
pop
adcb
jbe
stos
and
sub
ret
shl
fisubrs
sub
push
pop
in
insb
int3
pop
sbb
lock
fiadds
pop
movaps
add
decb
stos
andl
rol
inc
xor
xchg
loop
call
mov
mov
aas
clc
subl
inc
lds
addr16
or
xor
pop
fldl
pop
xor
sub
inc
jne,pn
ljmp
mov
les
outsb
insb
loopne
push
rcrl
xor
xor
pop
jae
sbb
cmp
push
pushf
test
jecxz
je
movsl
call
out
jle
dec
jl
fs
das
pop
shrl
mov
dec
mov
jecxz
das
stos
mov
pop
xor
dec
outsl
lods
mov
ret
inc
sahf
repz
dec
fnsave
in
cmp
mov
adc
jg
inc
and
insb
lcall
or
xchg
shll
adc
xchg
cwtl
data16
fwait
dec
stc
mov
or
lcall
insl
je
mov
and
fwait
repz
push
mov
in
stos
pop
sub
lahf
mov
jnp
bound
xor
sub
int
mov
cmp
jno
insb
repnz
pop
jae
stc
lahf
xor
add
pop
sub
es
mov
iret
js
pop
mov
cmp
jg
push
fwait
lods
ss
sarl
loope
inc
in
call
dec
jb
shl
stc
repz
pop
icebp
or
lahf
sbb
iret
jp
add
add
mov
ret
mov
push
xor
jae
jmp
mov
sahf
push
jae
push
loope
scas
sbb
call
mov
xor
dec
test
sbb
in
das
push
notl
jmp
es
pop
fadds
fnstsw
rcrb
rolb
sbb
sub
xor
jb
out
lods
xchg
sbb
test
test
mov
lahf
es
sbb
mov
filds
push
adc
sub
andb
dec
scas
jle
jbe
les
cmpsb
or
sbb
mov
fs
sar
flds
out
inc
pop
ja
in
mov
shr
icebp
jo
cmpb
outsb
mov
movsl
mov
dec
xor
shrl
push
mov
lock
into
bound
test
ss
jl
xchg
push
add
shl
adc
dec
xor
dec
mov
pop
pop
jle
pop
xor
pushl
mov
std
stc
in
xchg
insl
scas
mov
das
sbb
or
or
fdivr
clc
pop
inc
and
mov
pop
pusha
cmp
je
nop
mov
adc
std
mov
ret
sbb
clc
enter
sub
aad
iret
mov
repnz
mov
lret
cltd
mov
pop
sub
rolb
outsb
pop
sbb
scas
cld
mov
inc
pop
and
rclb
pop
sahf
xor
jp
dec
or
push
xlat
pop
movsl
movsl
lea
cwtl
adc
and
and
dec
mov
jbe
movsb
adc
repz
mov
call
aam
add
push
push
sbb
adc
cmp
adcb
sahf
cmpsl
mov
sub
jle
push
jge
out
pop
les
mov
loope
jbe
les
idivl
mov
pop
xor
in
mov
cli
dec
sub
or
xchg
loope
in
outsb
jbe
dec
shrl
std
push
or
adc
inc
aad
mov
mov
jno
dec
mov
lcall
testb
mov
stos
adc
into
ds
ficompl
int
ret
ret
cmpb
fs
cmp
pop
fadd
sahf
sbb
cmp
inc
xlat
ds
sbb
mov
sub
mov
imull
ljmp
jecxz
aad
push
int
mov
mov
pop
mov
in
push
adc
pop
rclb
cmc
int
imul
jmp
cmp
xor
pop
daa
test
and
ja
mov
sbb
or
jbe
mov
pop
jno,pn
cmp
ss
stos
rcl
dec
scas
adc
jp
add
data16
xor
orl
xor
mov
or
dec
lods
push
mov
fdivs
xor
je
jnp
rcrl
push
mov
mov
fildl
popa
das
pop
shrb
mov
aaa
dec
add
les
in
push
out
clc
fchs
lcall
aaa
sub
test
lds
fs
add
mov
mov
jae
cli
test
out
and
mov
or
mov
xor
dec
jbe
sub
mov
jb
cs
pop
out
cmp
mov
cmp
mov
and
adc
mov
and
stos
pop
and
add
mov
adc
push
imul
fwait
sub
mov
mov
and
push
lcall
stc
out
inc
enter
xor
cmc
cmp
xor
sub
in
mov
dec
cmpsl
pop
mov
inc
mov
shlb
inc
rorb
push
in
movsl
daa
cmp
aad
int
cmp
push
mov
scas
xchg
movsb
adc
adc
mov
imul
repnz
movsl
repnz
lret
inc
jmp
rcll
out
xor
imul
out
mov
sar
mov
xchg
and
and
cmp
mov
adc
loop
push
jae
loop
adc
cmpsb
clc
mov
dec
push
adc
mov
ficomps
ret
add
push
in
add
jo
fimull
inc
ret
stos
decl
aaa
jne
add
imul
or
mov
add
lret
dec
data16
pop
mov
mov
loope
aam
jae
inc
out
mov
mov
repnz
dec
push
cltd
pop
andl
or
xorl
cmp
jp,pn
aaa
add
mov
sub
jl
pop
aad
xchg
jns
and
jmp
imul
fmul
inc
add
cli
lcall
inc
mov
xlat
adcb
into
mov
jp
push
jmp
testb
or
inc
cltd
pop
inc
dec
je
test
dec
fwait
outsb
adc
inc
cmp
int
ljmp
lock
push
nop
mov
lahf
arpl
xchg
scas
jmp
mov
das
jp
in
rorl
xor
rorb
cmp
mov
mov
cmpsl
ret
jae
ret
jbe
mov
mov
shrl
nop
dec
fistpl
xchg
push
clc
lahf
add
add
nop
fsubrp
pushf
imul
sub
movsb
mov
cltd
cmp
inc
add
adc
inc
xchg
jp
movsl
jmp
cmp
insb
dec
add
cltd
mov
insl
jb
mov
push
cs
aas
pop
int3
push
jno
rclb
mov
ja,pt
or
inc
dec
les
gs
imulb
xor
movsl
dec
mov
hlt
sbb
add
hlt
sub
sahf
insl
or
sbb
xor
ret
mov
jl
or
push
dec
stos
jo
das
adc
cwtl
repnz
mov
sbb
testl
and
iret
mov
bound
fs
lahf
mov
repnz
int
mov
jo
int
hlt
xor
push
push
pop
xor
jmp
shrb
pop
and
sahf
sub
sub
push
ja
sti
add
adc
ficomps
push
addr16
mov
adc
ret
mov
nop
xchg
mov
aam
test
dec
mov
inc
sbb
cmp
rcl
inc
fmul
mov
mov
shlb
mov
push
cs
mov
push
and
inc
sarb
sub
pop
add
rolb
loop
pop
in
pop
adc
in
xchg
push
pop
lods
xchg
xor
dec
mov
out
std
cmp
cmp
sbb
inc
in
stos
mov
cwtl
in
int3
and
push
push
lock
xchg
mov
stc
xor
xchg
jg
call
inc
xor
cwtl
int3
insl
mov
xchg
mov
and
xchg
add
pop
cwtl
pop
fwait
push
inc
bound
or
ret
mov
inc
sti
pop
add
test
outsl
jg
ret
ja
adc
test
dec
cmp
out
lock
mov
xchg
jp
or
xor
pop
ror
push
push
mov
scas
dec
pop
mov
xor
repnz
test
jecxz
pushf
jle
std
mov
imulw
and
aaa
lea
pop
ljmp
xchg
or
dec
mov
mov
cli
jg
cmc
movsl
jnp
push
xchg
add
or
cltd
mov
arpl
and
pusha
in
inc
lods
push
mov
lods
je
push
mov
dec
mov
std
inc
or
xchg
sbb
fadds
sbb
in
or
popf
dec
jae
cmp
xor
lds
scas
adc
lods
jns
out
mov
sar
or
cmp
insl
jnp
fisubl
dec
incb
pop
sub
push
push
adcb
add
sbb
in
fwait
and
push
insb
or
jns
dec
cs
sbb
sub
sub
xchg
sub
jecxz
lea
mov
sbb
stos
pusha
jecxz
pop
js
mov
adc
jle
pop
and
push
repz
mov
popf
mov
mov
fsts
shr
or
ret
mov
xchg
popf
rcrl
push
adcb
cmp
mov
ret
aas
jns
repz
sub
adc
outsl
popl
cs
out
inc
xor
xchg
aad
lea
mov
push
mov
cmpsb
rorl
mov
into
pcmpeqd
jb
icebp
movsbl
outsl
cmp
adc
pop
push
push
jno
arpl
and
mov
and
fwait
insl
add
in
repnz
xor
pop
fdiv
cltd
cld
or
pop
loope
neg
jg
mov
popa
ret
ss
icebp
cmp
push
fwait
imul
xchg
mov
andb
push
xor
ljmp
jmp
pushf
test
and
cmp
xchg
or
jno
inc
addr16
loop
loop
mov
pop
push
adc
dec
int3
mov
xchg
ficoms
fsubl
dec
gs
stos
rcl
mov
pop
push
fadds
adc
repz
loop
mov
push
sub
mov
mov
test
inc
gs
lods
cltd
dec
and
outsl
add
pop
push
pushf
jg
div
rclb
icebp
inc
nop
pop
xor
sbb
adc
outsl
in
inc
lds
test
insl
or
sbb
outsb
ds
adc
push
sbb
shrl
dec
imul
xchg
mov
lds
xchg
ja
pop
push
and
test
sbb
ss
gs
arpl
aas
fdivs
pop
dec
sub
int
cmp
loope
ficomps
jmp
add
inc
jo
mov
sarb
aad
fwait
mov
pop
cmc
sbb
daa
adc
or
sahf
testl
hlt
pop
jae
mov
jo
cli
pushl
mov
stos
sbb
inc
ljmp
in
pop
imul
mov
xchg
adc
in
push
rcll
or
lcall
push
add
cld
mov
cwtl
push
lods
ljmp
daa
out
das
jno
inc
push
notb
sub
dec
lods
bound
and
rol
lds
mov
arpl
fmull
push
xchg
cmpsl
cmpsb
mov
mov
aaa
add
lock
jge
lea
rorb
inc
fstpt
cmp
stos
pop
lahf
mov
mov
dec
mov
push
push
fidivrl
mov
outsb
adc
pushf
in
sbb
les
sbb
dec
adc
je
push
repnz
lods
and
xor
pop
xchg
cwtl
fildl
lods
cwtl
sub
mulb
test
pop
sbb
aam
mov
jns
or
or
jno
in
imul
inc
lcall
xor
sbbb
inc
loop
cltd
testb
pushf
xchg
push
jne
sub
je
push
into
into
outsb
and
es
loope
popf
fsubr
xor
mov
in
jecxz
and
stos
inc
jg
outsb
ljmp
xor
lret
push
ja
pop
xchg
addr16
and
lret
cli
out
incb
or
enter
cmp
jg
push
in
xor
push
test
jae
std
cmp
add
mov
pop
sub
fmuls
imul
xchg
dec
cwtl
sbb
and
sti
jno
shrl
inc
movsl
mov
or
js
pop
sub
sub
mov
popa
push
sti
sub
std
fcmovnb
mov
test
inc
mov
jecxz
shl
test
cld
mov
jae
add
and
outsb
sub
push
lods
popa
fstpt
stc
inc
stos
stos
cmp
nop
loope
mov
xchg
ljmp
mov
xchg
sbb
sahf
pop
out
mov
mov
add
add
outsb
fldcw
in
mov
test
mov
xor
jno
mov
jecxz
fcmovbe
push
or
sub
aam
lcall
out
or
ret
inc
xchg
pop
jecxz
mov
pop
sub
add
xchg
fnstsw
outsb
fbstp
adc
adc
cmpsb
es
mov
mov
fdivs
jno
shrl
rcrb
mov
sbb
or
lcall
xor
push
and
cmp
test
xchg
arpl
xchg
sbb
call
adc
fdivrp
push
jp
pop
loopne
or
daa
and
xchg
lods
inc
outsl
push
rolb
sub
add
fld
stc
and
in
sahf
rcll
iret
ljmp
and
shrb
sti
dec
or
sub
push
sarb
les
push
dec
mov
js
push
daa
repz
adc
push
out
bound
lret
ret
scas
jnp
or
or
ja
int3
push
jae
mov
xor
cmp
bound
in
repnz
xchg
ret
ret
mov
bound
mov
mov
outsl
and
pshufw
mov
add
jbe
test
ljmp
nop
sub
add
sub
incl
or
cmova
sub
inc
cmpsb
sub
jb
xchg
fsubrl
int
adc
iret
mov
or
mov
mov
pop
in
sbb
or
mov
push
fucomi
fnstsw
pop
cmp
add
mov
cwtl
dec
lods
into
scas
add
adc
pop
in
addl
push
mov
mov
sbb
dec
mov
lahf
test
cmp
push
in
mov
fisubl
sbb
popa
idivb
imul
std
inc
sub
rcll
sub
roll
jo
pop
push
add
mov
jb
sarb
aas
sbb
cmp
xor
fld
push
das
dec
stc
dec
sbb
cmp
fs
jbe
lock
push
imul
cltd
mov
sbb
cmp
lret
bound
stc
or
jae
sbb
loop
sbb
cs
adc
dec
aad
stos
dec
out
or
dec
and
push
and
arpl
and
out
fs
mov
idivl
loop
sbbl
xchg
ret
xor
hlt
imull
lods
data16
ror
mov
lds
sub
cmp
outsb
xchg
add
cmp
cwtl
int3
sub
es
cld
lcall
mov
js
js
gs
mull
rcr
pop
leave
jmp
in
adc
pushf
lahf
pop
rcrb
lock
lock
sbb
mov
loop
incl
pop
push
pop
dec
sti
sahf
in
mov
pop
dec
fwait
scas
fcomps
inc
les
dec
call
les
roll
xchg
mov
mov
aas
add
push
mov
dec
inc
inc
arpl
or
cmp
and
scas
std
jnp
scas
push
inc
mov
je
int
fisttpll
in
pop
mov
add
xor
test
sub
int3
shrl
jmp
in
push
pop
out
lods
mov
lcall
int
insb
jnp
mov
daa
xchg
dec
mov
fwait
insl
mov
adc
icebp
sub
cwtl
notb
dec
adc
push
mov
test
add
adc
out
cmpsb
enter
insb
negl
push
fwait
stos
les
pop
mov
and
sahf
in
adc
mov
pop
xorb
jbe
lds
stos
das
xchg
aad
sub
xor
das
leave
orb
fistl
out
sub
aam
sbb
ret
cmp
mov
add
int
adc
std
xor
xchg
and
nop
cli
sub
mov
in
mov
filds
jno
pop
pushf
mov
inc
sub
imul
or
loop
je
jmp
enter
pop
jne
jmp
loop
cld
fbstp
stos
xchg
sbb
mov
popf
sti
and
inc
stos
xlat
popf
fsub
sbb
mov
pop
add
mov
mov
sub
lahf
mov
lahf
push
xchg
js
insb
arpl
fdivrs
fiaddl
pop
inc
inc
xor
mov
in
pop
stos
add
icebp
dec
xor
insl
out
dec
je
pop
add
dec
mov
xor
repnz
push
sub
inc
mov
and
xchg
mov
xchg
sarb
cmc
dec
out
aam
test
adc
adc
jg
and
xor
jae
test
bound
testl
mov
and
sbb
sbb
add
cmp
jg
aaa
jno
movl
inc
hlt
or
dec
xchg
jmp
sub
cmpsb
out
lret
in
nop
scas
jnp
mov
int
fstpl
jo
dec
mov
xor
fstpt
loope
movsb
repz
and
xchg
inc
outsb
mov
xchg
add
xchg
xchg
jo
or
stc
push
cld
pop
cmpl
pop
sub
nop
mov
mov
scas
cmp
and
rolb
ljmp
loop
xchg
jo
in
outsb
aas
xchg
jmp
add
test
scas
jns
dec
ret
movsl
int
gs
inc
lods
aas
les
and
in
xor
ret
fsubl
popa
add
jno
pop
cmpsl
add
jecxz
mov
cmp
xchg
std
roll
adc
mov
loop
inc
xchg
mov
or
adc
dec
jo
dec
imul
xchg
jne
jmp
and
pop
fsts
sub
call
sbb
dec
inc
subb
cmp
xor
test
das
stos
hlt
pushw
fwait
cmp
pop
inc
call
add
mov
rorb
cli
or
xor
mov
push
hlt
jmp
fisttpl
add
inc
sub
dec
notl
hlt
sti
add
pop
daa
or
lret
or
outsl
mov
lahf
lock
insl
in
xchg
mov
sbb
imul
lods
mov
cmp
jp
and
out
push
or
test
test
testb
popa
out
loopne
mov
movsb
test
xor
and
mov
mov
inc
jnp
ret
fnstcw
push
mov
jns
pushf
xor
lods
push
loope
dec
div
push
rorb
mov
adc
jne
aam
or
daa
dec
xor
dec
pop
mov
sarb
nop
aam
cmp
sbb
lods
in
orb
fisttpll
push
ljmp
sub
pop
push
fimuls
test
loope
dec
dec
mov
into
imul
cs
call
or
xchg
lea
lcall
jb
dec
cmp
popf
dec
pushf
xchg
stos
mov
push
mov
mov
lret
lea
push
lcall
mov
lret
mov
cs
dec
ljmp
jne
fildl
push
sub
shrl
in
stos
or
shl
mov
inc
ret
push
xor
pusha
sbb
mov
pop
sar
dec
pusha
pop
std
dec
shr
cmp
test
pop
xor
stc
adc
or
xchg
push
nop
jecxz
out
add
and
clc
mov
sub
push
mov
and
mov
scas
int
cwtl
call
cmp
push
fcomp
xor
dec
das
fists
lahf
pop
mov
pop
cltd
jge
or
lods
into
mov
test
rol
out
adc
push
out
test
test
out
jno
dec
sti
lret
pop
pop
sbb
adc
cmp
mov
jp
cmp
fdivl
pop
cmp
inc
xchg
jle
push
pusha
xchg
pop
lret
jl
outsl
and
jne
xlat
mov
adcl
cmp
in
push
adc
outsb
fs
pop
lahf
xor
dec
insb
out
cmovp
rorb
push
pushf
int
jbe
data16
or
push
push
inc
jne
stc
mov
fldcw
fldt
fiadds
or
lods
jnp
outsl
add
sbb
lahf
fadds
mov
sar
cmpb
sbb
jae
roll
popa
mov
ljmp
pusha
or
fidivrs
rol
faddl
out
or
and
pop
xorb
mov
mov
repnz
and
in
jae
and
jecxz
cli
dec
cmp
mov
in
add
insb
fists
and
or
or
leave
fsts
xor
sbb
and
sbb
test
push
sub
or
std
fcomip
mov
jmp
cli
aas
movsb
push
scas
bound
jl
js
cwtl
mov
adc
xor
mov
push
sub
into
int3
test
and
in
scas
jae
cmpsl
arpl
mov
lock
push
add
jg
push
adc
push
mov
sbb
stos
pop
sbb
daa
and
add
inc
sysenter
push
dec
mov
mov
pop
aaa
notb
jp
popa
cmp
repnz
mov
pop
fmuls
mov
mov
andl
mov
inc
mov
push
ds
movsb
sbb
add
mov
call
daa
popf
cmpsb
mov
xor
lahf
cld
andb
fs
pushf
xor
xlat
test
scas
popa
aam
test
out
mov
stos
inc
cwtl
int
jg
insl
fstps
xchg
and
imul
mov
mov
scas
and
cltd
adc
mov
adc
std
shrb
lods
xlat
cli
test
ret
mov
push
sbb
jne
out
ss
js
xchg
cwtl
add
xchg
enter
push
adc
js
jns
adcl
xor
mov
pushf
neg
adc
repz
cld
xor
jl
ljmp
in
insl
or
add
sub
sub
pushf
jmp
sub
mov
test
les
mov
test
repnz
fsubs
cmc
lcall
adcl
jne
stos
push
sbb
push
sub
mull
shlb
rcrl
inc
pushf
in
imul
stos
sahf
test
mov
add
jbe
dec
mov
mov
jne
sahf
mov
hlt
pop
fbld
add
or
sbb
sbb
sbb
pop
fdivs
ss
into
out
or
jmp
mov
test
jne
outsb
inc
xchg
in
pop
daa
xchg
mov
ja
xor
inc
in
pop
ss
pop
push
insl
insl
mov
adc
sbb
cmp
xchg
sarb
loop
das
insb
test
fiaddl
vandpd
mov
push
adc
xchg
stos
scas
mov
and
push
les
xchg
int3
loope
ja
movsl
lods
push
test
loopne
pop
jg
aas
lods
popf
adc
addl
rcrl
aas
pop
sbb
xchg
cwtl
cltd
leave
jnp
in
adc
and
xor
push
or
hlt
out
sub
shll
mov
jbe
gs
shr
aas
xor
dec
cwtl
stos
or
pop
add
push
mov
sbb
pop
mov
push
insl
adc
and
cmpsl
jmp
dec
xor
push
cmp
hlt
scas
enter
es
sbb
pop
pop
je
movsl
fsub
movsl
xchg
adc
maxps
cmp
sub
repnz
repnz
jns
imul
bound
ss
cwtl
pop
adc
aaa
jp
dec
inc
pop
dec
push
dec
fadds
les
stos
stc
icebp
push
aam
fcompl
adc
aad
pop
jle
out
lods
xchg
jge
dec
fldcw
pop
xchg
fsubrl
xor
addl
jbe
adc
push
stos
jl
insl
sbb
add
cli
and
icebp
popl
dec
pop
aad
pop
dec
or
sub
in
mov
test
cmpsl
add
aad
xchg
mov
or
test
pushf
ret
mov
push
out
cmc
in
xchg
jb
mov
jmp
or
int
xor
daa
outsb
adc
add
sub
push
in
cltd
sar
je
mov
fildll
out
adc
sub
push
stc
psrld
jmp
loop
mov
int
pop
xchg
jmp
inc
movsb
and
or
add
fdivrl
sub
inc
or
pop
adc
sub
clc
jns
movsl
sarl
sub
lods
adc
in
xor
jnp
hlt
fnstsw
dec
pop
scas
pop
push
iret
rorl
sbb
xlat
in
and
xchg
call
adc
sbb
lods
dec
gs
jecxz
enter
mov
xchg
repz
imul
sbb
push
jp
leave
pushf
add
test
in
mov
adc
mov
mov
cmp
cmpsb
cmpb
enter
pop
jns
and
aaa
sub
xchg
inc
je
imul
xchg
jbe
rcr
scas
rorb
mov
in
mov
pop
arpl
dec
mov
xor
shlb
int3
scas
movaps
lods
sbb
adc
lods
test
sub
sbb
push
filds
inc
movsl
pop
aam
sbb
cmp
int
xchg
shl
gs
ds
sbb
in
mov
adc
call
or
fiadds
stos
adc
pusha
mov
inc
in
pushl
and
pop
sti
mov
xor
outsl
push
dec
lods
push
scas
lods
lea
adc
pop
out
add
sti
je
rolb
scas
mov
jbe
push
ret
in
jp
out
and
cmp
mov
cltd
cs
test
mov
mov
or
and
out
addb
inc
pop
cmp
addr16
orl
in
shl
xor
mov
xor
pop
sbb
mov
int3
stos
das
mov
loopne
ret
cmp
fidivs
out
dec
rcrb
xchg
jge
imul
xchg
dec
scas
arpl
add
push
ja
pop
mov
or
add
jbe
xchg
xchg
icebp
dec
add
adc
sub
sub
push
shl
imulb
test
add
pop
pop
cs
hlt
and
mov
stos
dec
mov
in
dec
pop
add
out
aad
clc
cmp
mov
jle
push
fwait
xlat
xchg
loope
inc
jmp
pop
mov
repnz
stos
push
js
scas
sbb
push
inc
xor
stos
add
pop
sti
pop
test
cmc
lar
mov
in
rol
xchg
inc
sub
idivl
push
testl
sbb
mov
jge
bound
mov
test
xchg
cmp
jmp
dec
inc
push
arpl
jl
arpl
jecxz
cmpsb
push
hlt
movb
mov
fldenv
or
mov
rorl
adc
dec
mov
nop
add
loop
scas
mov
imul
in
enter
push
and
lahf
push
bound
or
ret
int
sahf
lods
shll
sbb
aas
cli
pop
out
dec
cmp
dec
push
aad
adc
dec
mov
inc
jne
fs
or
pop
fwait
sti
mov
call
js
xchg
je
cmp
jae
stos
mov
sub
in
in
repz
sbb
jecxz
lods
rcrl
cmpsl
call
enter
mov
pop
sarl
fs
out
cmp
aas
lret
insb
sbb
or
or
and
cmp
cmp
fildll
adc
test
sbb
hlt
push
mov
dec
inc
fstp
ret
fnstsw
pop
xchg
or
fucomp
movsb
mov
push
enter
mov
leave
iret
stos
cltd
pop
ficoml
les
arpl
call
cmp
cwtl
fisubl
dec
xchg
mov
and
and
pop
xchg
sub
sbb
sbb
adc
mov
mov
iret
addl
cmpsl
sahf
loopne
xchg
rorb
hlt
idiv
fwait
push
push
loopne
cli
or
jg
push
stos
inc
adc
mov
fstpl
or
rcr
jns,pn
iret
lock
test
mov
adc
cmpsb
xchg
and
mov
cltd
xchg
or
nop
mov
nop
cmp
adc
stos
aas
fld
mov
jmp
mov
xlat
out
and
call
push
push
mov
mov
icebp
push
repz
aad
inc
cli
andl
add
cs
cmp
pop
mov
popa
fdivrs
jno
jmp
jne
arpl
outsb
insb
cmpsb
xor
sahf
cmpsl
jo
scas
inc
pop
xchg
adc
pop
js
clc
pop
inc
icebp
mov
xchg
pop
push
pusha
inc
push
psrlw
cmp
cmp
nop
xchg
adc
push
sbb
fsubr
cmc
test
lcall
dec
in
adc
cwtl
lods
movsl
mov
lods
sub
pop
mov
nop
adc
push
je
es
xchg
leave
sbb
mov
movsb
loop
pavgw
pop
cmp
dec
sub
fs
sub
push
out
rcr
mov
lea
jp
push
adc
sahf
das
scas
pop
shlw
xor
decb
aaa
pop
ja
push
sbb
jb
cs
add
push
pop
pusha
xor
lds
push
adc
mov
cld
xchg
inc
adc
mov
pop
cld
mov
mov
leave
push
or
scas
add
sub
jle
jbe
scas
lret
sub
cmpsl
xchg
mov
int3
ds
pop
stos
imull
pop
inc
xor
insl
cpuid
jle
pop
and
xchg
mov
add
imul
test
mov
stc
rcrb
outsb
mov
mov
adc
shr
xchg
imul
sbb
call
cli
mov
lahf
les
stc
inc
mov
fbld
pop
into
pop
mov
cltd
jno
pop
pop
loopne
xor
or
add
pushf
sbb
ljmp
xchg
xor
xchg
std
mov
ret
fistpll
outsl
gs
sbb
mov
ret
mov
push
fcoml
lods
outsb
mov
inc
pop
sub
fisubs
push
bound
mov
popa
into
lsl
and
adc
dec
icebp
xor
loope
and
add
pop
and
or
jecxz
rorb
push
and
cmp
jb
loopne
jp
sub
mov
mov
jns
jbe
sbb
sub
adc
dec
dec
ss
lods
lods
jmp
mov
in
int3
xor
test
je
and
jg
shlb
add
rorl
test
add
xchg
or
pop
push
bound
and
ficomps
les
shlb
scas
pushl
stc
jns
fwait
jl
lea
cld
int3
jnp
cmp
dec
add
inc
sub
in
push
out
in
cmpsl
and
std
sti
pop
incl
cmpb
rclb
negl
or
and
ret
pop
negb
movsb
push
out
xchg
clc
push
pusha
adc
sub
xchg
lret
pop
lret
pop
or
mov
jp
ljmp
inc
push
xchg
jb
mov
scas
sar
das
cmp
cmc
out
push
cmc
call
xor
outsb
jl
adc
xor
mov
daa
push
xlat
adc
and
shlb
xor
pop
mov
jg
arpl
cmp
sarl
mov
jno
ret
sub
addr16
adc
jb
outsb
mov
ljmp
add
dec
inc
aas
fs
pop
outsb
jl
xchg
sub
mov
jge
inc
adc
xor
fsubrp
jge
adc
in
fmull
xchg
adc
sbb
push
pushf
mov
push
stos
sub
xor
nop
jl
mov
test
jmp
add
push
fists
leave
push
pop
xor
test
loopne
in
jo
sbb
movsb
out
daa
fcoml
cmp
fdivl
leave
inc
cmp
addr16
in
imul
test
in
push
ficompl
addb
out
in
add
adc
inc
fwait
out
mov
fs
pop
sub
outsl
icebp
ss
push
sub
ret
cwtl
push
add
outsl
fs
xchg
cmpsl
mov
sub
cmpsb
sbb
or
leave
push
dec
or
jae
xchg
jns
add
movsl
cli
cmp
outsl
addl
mov
push
add
popa
push
or
jp
std
scas
cmpsb
sbb
fwait
dec
add
pop
dec
les
test
pop
movsl
call
mov
or
mov
inc
xchg
mov
mov
cmp
int
cwtl
popf
sub
cltd
inc
lret
lods
pusha
jl
popa
cwtl
ja
xor
lds
mov
or
pop
pop
int3
jno
mov
xchg
mov
test
mov
lods
out
cmp
fnsave
jp
pop
rolb
push
push
pop
mov
cmp
and
aas
sub
xchg
jl
mov
icebp
mov
push
pop
in
inc
fcoml
cmp
sub
aaa
sub
cmp
sub
push
fnsave
dec
loop
jnp
lock
in
push
xor
repz
mov
adc
mov
xchg
mov
aad
repz
cld
push
mov
fwait
lods
or
imul
stos
shlb
ret
nop
add
sub
iret
aam
inc
cs
jbe
jb
mov
std
das
addr16
movsl
sbb
sbb
dec
daa
mov
mov
popa
scas
dec
jbe
add
fs
or
lahf
cmp
add
xchg
je
rcl
sahf
dec
aad
mov
arpl
dec
cli
mov
or
cli
in
test
cmp
ja
and
or
jmp
push
repz
jge
loope
sub
jae
gs
push
xor
and
lds
inc
push
sti
sahf
ficoms
test
bound
insb
psubusb
sahf
xor
adc
adc
inc
hlt
mov
lds
popa
inc
adc
inc
movsb
xchg
mov
popf
filds
mov
xor
mov
test
fisubrs
jecxz
adc
mov
pop
lods
cld
push
pop
int3
adc
xor
pop
push
inc
inc
imul
addr16
divl
je
out
jge
inc
in
dec
xchg
xor
cmp
inc
insb
cmpsl
shlb
mov
sti
and
jle
filds
pop
sbb
sbb
mov
xchg
cmpsl
jmp
xor
push
movsl
jg
and
dec
movsb
mov
jbe
mov
jno
cmc
das
xchg
pop
cmp
incb
out
adc
mov
pop
pop
push
in
loope
movsb
lods
negb
sbb
lds
sbb
cmp
gs
sub
fstps
xor
mov
jp
imul
or
xchg
xor
jle
lcall
rcrl
xchg
nop
mov
mov
dec
lock
and
aaa
cmp
xchg
and
jbe
out
inc
inc
pop
jo
lahf
and
sbb
inc
dec
std
or
inc
je
mov
mov
test
xchg
daa
push
push
push
push
cmp
adc
stos
push
inc
out
mov
pop
int3
out
fidivl
insl
push
mov
aas
jne
and
into
add
inc
mov
in
mov
push
insl
int
leave
fs
mov
add
fxch
xchg
xor
idivb
and
jb
pusha
sahf
inc
pushf
jge
mov
sub
adc
jb
adc
adcb
xchg
jo
rcrb
xor
aaa
test
pop
inc
or
mov
jle
imul
negl
rclb
aas
xchg
push
mov
movsl
mov
pushl
xchg
adc
ljmp
jbe
in
xchg
and
jmp
insl
imul
cli
cmp
push
aad
andb
addps
mov
divl
or
shlb
std
mov
xchg
mov
pushf
je
jno
daa
mov
lds
jns
negb
fistpl
xor
push
cs
inc
dec
nop
movsl
aam
cli
insb
popa
les
nop
lods
in
dec
test
add
test
dec
fs
cmp
jp
push
push
and
dec
cmp
pop
divl
cmp
test
xor
jle
adc
outsl
aas
aam
mov
mov
mov
repz
cld
repz
push
popf
shlb
popa
xor
inc
inc
xor
dec
inc
pop
push
stc
add
into
movsl
mov
loope
xor
lret
ljmp
shr
jg,pt
jl
out
cmc
and
add
inc
sbb
call
pop
adc
into
faddp
xor
inc
push
gs
call
or
in
sub
mov
mov
les
mov
daa
out
mov
mov
lods
loopne
fmull
int
lea
ja
lea
sbb
rclb
dec
jmp
pop
cmp
push
sbb
xor
sahf
add
cmpsl
aam
xchg
and
mov
ds
cwtl
sbb
mov
sub
mov
sub
je
jb
out
cmp
jne
xchg
mov
pop
sarl
jmp
jecxz
fsubl
iret
push
or
pushf
repz
add
out
mov
fnstsw
and
jno
mov
in
and
sti
adc
std
push
fwait
cli
pop
xchg
pop
ds
push
adc
mov
jg
adc
mov
int
add
repnz
insl
push
mov
pop
je
fsubrl
or
cli
cmp
adc
fcompl
pop
andb
push
pop
sub
cli
in
inc
int3
inc
push
add
hlt
pop
inc
sub
out
aas
sbb
cmp
push
xchg
push
inc
hlt
sbb
push
rcr
push
add
test
adc
sbb
andl
fmull
push
sbb
mov
jmp
cmpsl
test
imul
adc
adc
sbb
les
ja
pop
lcall
xchg
lock
fnstsw
add
addr16
mov
cs
pop
subl
mov
and
dec
lret
loope
add
sbb
ret
out
xchg
xor
mov
lods
cmpb
jae
jns
in
pushf
mov
das
add
add
cltd
push
cmpsl
clc
push
pop
hlt
int
jmp
outsl
mov
insl
cmp
stc
mov
lds
pop
add
mov
aas
out
mov
adc
dec
in
mov
mov
inc
jne
add
lret
jecxz
xor
in
mov
xor
or
fwait
stc
dec
out
push
rcll
repnz
in
fldcw
dec
loope
cli
dec
fidivrl
cmpsl
add
clc
loop
cmp
jmp
sbb
xor
js
jg
pop
mov
mov
lods
in
nop
outsl
jne
das
ljmp
add
cmpsb
mov
and
test
sbb
dec
gs
sub
adc
cmp
nop
dec
mov
std
sub
mov
dec
repz
movsl
out
sbb
push
xor
bnd
mov
sar
cmp
jmp
adc
pop
sub
mov
and
xor
dec
cld
sbb
mov
js
fdivr
cs
addl
popf
lcall
pop
xchg
enter
sbb
rclb
into
mov
lret
out
mov
loope
or
push
mov
add
out
push
inc
nop
adc
filds
fwait
or
and
bnd
push
dec
inc
xor
in
push
xchg
imul
pushf
jnp
inc
mov
sub
test
into
scas
sub
sub
lods
xchg
pop
push
dec
jbe
inc
int
adc
push
cmp
jo
push
mov
adc
sbb
sub
imul
pop
daa
aad
in
ja
and
pop
pop
sti
aam
insl
sbb
dec
xchg
popa
scas
scas
xor
mov
mov
fidivs
int
dec
jl
and
dec
movsl
push
jmp
jg
mov
add
jns
pusha
mov
mov
sti
loopne
or
sub
aas
mov
mov
add
aad
repz
aas
lods
notl
adc
cmp
sbb
or
sub
pop
shlb
loope
pop
push
jns
or
pop
and
add
push
pop
mov
rorb
fiadds
lods
bound
call
and
out
int
nop
clc
mov
dec
jno
fsubs
dec
out
mov
sub
in
dec
int3
or
fnstenv
cmp
mov
stos
idivl
mov
fstpl
inc
imul
mov
mov
add
ret
jle
mov
pop
xchg
xor
loop
in
xchg
push
mulb
cli
xchg
jb
inc
repnz
or
xchg
sub
cld
mov
movsb
mov
cmp
dec
add
xchg
in
inc
mov
xor
sub
pop
stc
ret
stos
push
xchg
not
negl
test
fistps
das
or
insl
pop
xchg
mov
mov
repz
aad
int
pop
fsubs
movl
lret
ja
cmp
lea
adc
inc
add
pop
mov
cld
fcompl
js
mov
fcmove
stos
or
lahf
jns
leave
dec
fsts
and
adc
cmc
inc
pushf
mov
and
decb
int
ret
or
mov
cmp
test
dec
ljmp
mov
or
je
out
lcall
mov
addr16
mov
ficoms
xchg
bound
inc
jae
push
mov
imul
pop
test
fsts
stc
fidivrs
jl
das
push
jno
jno
test
in
sarl
call
repz
mov
mov
lods
dec
or
adc
out
stos
add
pop
sub
out
outsb
jp
stc
inc
call
jne
add
xor
add
iret
inc
push
fcomps
lock
pop
xor
jl
shrb
fs
gs
outsb
ficoml
addr16
sub
fistps
lods
rol
rcll
cvtdq2ps
dec
jp
jns
pusha
mov
fmull
add
repz
mov
mov
lea
scas
subb
mov
ss
in
and
dec
pop
mov
dec
jnp
out
push
stos
jae
inc
fs
xchg
scas
sub
push
dec
jmp
mov
cwtl
and
inc
xchg
roll
insl
test
inc
outsl
cltd
sub
lret
sbb
jae
or
scas
sbb
cmpsl
incb
push
inc
pop
or
into
xlat
mov
mov
pop
aam
sbb
cmpsb
arpl
aad
jg
scas
adc
pop
add
mov
lock
sub
or
sbb
movsb
jo
out
add
outsl
jo
aad
sbb
bound
fwait
shl
repnz
pop
fbld
subl
ret
dec
pop
inc
fldcw
out
loope
xchg
aaa
pop
adc
std
jo
mov
dec
adc
pop
out
jno
mov
push
imul
pushf
dec
push
in
and
or
arpl
adc
mov
push
mov
cmp
dec
inc
sub
pause
filds
sub
lods
adc
insb
leave
movsb
sub
stc
mov
hlt
adcl
imul
xchg
inc
loopne
lret
fiadds
fucomp
mov
idivl
flds
ret
cli
popa
imul
movsb
out
adc
pop
in
push
dec
fisubrs
bound
add
inc
jle
lret
or
movsl
lds
cmpsb
adc
sub
ret
push
adc
sub
ds
push
adc
sbb
in
jb
fidivl
mov
stc
bswap
cmp
inc
jmp
inc
imul
and
mov
cmp
aas
icebp
sahf
jle
cmc
ds
cltd
xchg
fisubrs
add
inc
cmp
or
je
shll
sarl
dec
cltd
lods
insl
imul
fwait
call
out
sub
push
lret
daa
fs
pop
sub
xor
or
jle
jge
inc
and
std
jne
int
fnstenv
pop
pop
out
stos
popf
xlat
imul
cmp
dec
in
sub
arpl
xlat
push
aam
jb,pt
mov
mov
fucompp
mov
orb
mov
pop
sub
sub
aas
adc
mov
dec
inc
gs
fnsave
orl
xchg
mov
ficomps
sbb
jmp
jecxz
enter
push
pop
push
inc
mov
add
es
mov
mulb
jb
mov
les
mov
fsubrs
and
mov
adc
bound
inc
and
in
dec
inc
decb
call
cmpsb
mov
iret
stos
dec
dec
cli
cmp
jne
or
loop
clc
push
ljmp
jno
stc
scas
adc
xchg
cs
xchg
repnz
out
loopne
loope
and
and
imul
inc
pop
out
scas
cmpsb
clc
mov
mov
mov
jb
pop
xor
push
mov
lahf
mov
push
or
xchg
icebp
sbbb
pop
adc
cmc
lea
sbb
mov
in
stos
mov
pop
mov
and
repz
dec
js
out
push
mov
aaa
mov
std
fisubl
lds
ljmp
jg
cmp
push
lret
pushf
pusha
pushf
xchg
setno
and
xchg
movsw
dec
push
inc
loope
sub
mov
in
dec
lahf
add
lock
sbb
mov
in
push
out
cld
or
popa
test
hlt
pop
mov
cmpsb
popl
cmp
pop
mov
aam
fstl
push
jbe
cmc
addr16
jbe
testl
pop
int
lds
inc
cmpsl
insl
push
mov
sub
lods
je
xchg
cld
fnsave
pusha
xor
cmc
add
dec
pop
cmp
ljmp
rolb
out
or
adcb
out
fs
fistps
repnz
xchg
pushf
mov
test
mov
test
push
repnz
pop
iret
fucom
stos
in
and
cmpl
dec
stos
or
adc
jg
cmp
xlat
leave
xor
outsl
jbe
ret
inc
lods
int3
push
cwtl
cmp
inc
dec
gs
jg
rorb
aaa
xlat
sub
xor
cmpsb
int3
sbb
fsubs
lods
clc
adc
sub
pop
dec
jbe
fistl
scas
daa
adc
inc
cmp
pop
cmp
jecxz
das
in
stos
push
ljmp
les
mov
jo
add
sbb
insl
fstl
lock
mov
mov
loop
mov
xchg
push
mov
and
fs
outsl
adc
mov
jo
clc
jle
sub
movsb
sbb
addl
jmp
mov
cs
aad
inc
cmpsb
adc
movsb
gs
pop
insb
cld
test
mov
pop
fwait
aad
mov
or
js
xchg
sbbl
sub
sub
jl
push
in
mov
les
scas
ret
cmpsb
mov
xor
loop
jp
xchg
pop
fcom
jp
bsf
daa
xor
fnstenv
xor
pop
pushf
ficoml
sbb
adc
fidivrl
mov
inc
sbb
out
sbb
call
outsl
jp
or
fsubs
or
xor
jg
repz
ret
pop
dec
inc
lret
mov
inc
lock
icebp
xlat
mov
xor
adc
pop
adc
stos
push
push
jp
push
xchg
in
sbb
ficoml
orl
add
pop
jp
fists
icebp
fistl
pop
sub
nop
adc
sarb
jnp
jns
test
sbb
cli
adc
imul
and
xorl
in
cmp
xor
sbb
sbb
cwtl
push
push
fmul
idivl
push
mov
lret
dec
fnsave
das
xchg
mov
xchg
mov
xchg
push
imul
jae
cmp
jno
icebp
xchg
mov
loopne
add
mov
int3
push
lock
xor
sub
jge
stc
or
adc
lods
cmp
dec
inc
jbe
fmull
and
push
jns
pushf
mov
push
mov
mov
and
gs
jno
jnp
sub
sub
outsl
xchg
inc
pop
jl
out
ljmp
lcall
sub
push
push
xchg
dec
cmpsb
insb
push
cmp
pop
jae
sub
fmull
xor
inc
adc
jne
fwait
je
mov
outsb
in
sbb
xor
sbb
stc
dec
insl
pushf
cmp
adc
push
jmp
mov
imulb
sub
ret
mov
jne
mov
mov
or
and
dec
sbb
subb
mov
cmp
mov
out
adc
pop
pop
xchg
xor
cmp
test
dec
clc
adc
daa
mov
and
adc
mov
dec
lods
dec
enter
stos
filds
or
clc
jecxz
arpl
in
fcompl
ljmp
mov
and
dec
iret
ds
in
gs
loop
daa
cld
or
add
mov
cmp
movb
mov
ficoml
movsl
push
cmp
pop
sbbb
inc
out
roll
arpl
push
orl
outsl
iret
fiadds
push
push
ss
pusha
imul
adcb
call
sub
xorb
pushf
adc
stc
xor
adc
adc
lods
mov
jge
rcll
arpl
mov
mov
push
lret
shll
and
mov
cmc
sahf
fisubrl
inc
lds
aaa
das
data16
popf
jbe
push
mov
cmc
dec
cmp
and
dec
enter
js
mov
mov
mov
sbb
inc
data16
jae
loope
les
jge
out
and
movsl
pusha
xor
les
xchg
sub
pop
fisubrl
daa
rorl
mov
jg
sar
jb
cmp
fisubrl
cmp
and
jecxz
mov
rolb
xor
or
iret
stos
es
fidivrs
or
mov
cmp
and
shlb
cmp
push
jns
sbb
gs
icebp
test
mov
push
mov
dec
out
jb
repnz
test
or
mov
cwtl
ja
pop
pop
faddl
pop
movnti
mov
mov
mov
xchg
aas
lea
pushf
mov
ds
aaa
dec
and
call
mov
xor
mov
arpl
push
in
add
or
jne
pop
and
int
scas
cmc
lahf
lods
outsl
dec
or
outsb
or
iret
in
shl
into
xchg
mov
shrb
orb
gs
push
out
pop
lds
add
push
lods
cs
popf
fisttpll
add
pop
shll
sub
pop
cmp
xlat
adc
mov
test
inc
cmp
jno
fnstcw
fsubl
cli
pushf
test
xchg
movsl
push
cmp
mov
movsb
sub
mov
lret
inc
pop
add
loope
mov
jecxz
cltd
loop
xchg
sub
xor
inc
push
out
or
into
out
mov
cmc
hlt
pop
js
dec
daa
dec
iret
adcl
cltd
jae
and
fisubl
fisttpl
jne
jnp
mov
popf
jbe
int3
das
fmul
pop
cmp
and
sbb
les
ret
inc
test
aaa
cmp
les
and
lods
sbb
xlat
mov
jmp
sahf
add
lret
adc
stc
adc
sahf
xchg
jne
pavgw
jb
aad
int3
ficomps
mov
in
or
xchg
enter
push
std
xchg
sub
out
jmp
dec
and
adc
insb
outsb
in
add
push
data16
ja
lret
fistps
jnp
push
xlat
movsb
in
ret
push
cld
sub
pop
mov
test
mov
repnz
fcmovu
andl
out
sub
orps
std
out
scas
sahf
pop
movsl
fnstenv
jge
push
xor
push
xor
push
in
in
ret
inc
xchg
mov
xchg
icebp
sti
shl
sarb
fstps
les
test
aas
adc
jl
push
or
imul
stos
jmp
inc
jb
cmp
out
dec
adc
pop
jae
insl
add
popf
ljmp
or
jae
aam
mov
in
adc
push
xchg
sub
mov
clc
cli
ja
in
popf
int
sub
fnstsw
pushf
jge
sarl
mov
cmp
orl
pop
xchg
pusha
mov
mov
je
addb
dec
lcall
push
xor
xchg
lds
mov
sub
stc
cld
mov
lods
daa
add
or
and
jecxz
push
mov
insl
mov
and
xor
insb
mov
ljmpw
ret
mov
sub
mov
inc
in
dec
adc
orl
lea
pop
adc
and
pop
xor
jp
dec
cmp
jnp
pop
mov
into
xor
loop
sbb
jnp
popf
add
mov
je
pop
mov
movb
lods
push
lahf
push
push
movsl
test
cmovns
lret
cwtl
mov
jmp
push
adc
xchg
ficomps
loopne
repnz
jl
push
lock
shl
adc
push
jp
test
xchg
mov
add
sbb
push
sub
mov
out
stos
xor
popf
jbe
mov
ljmp
stos
mov
aaa
xchg
pop
jmp
mov
or
jo
addr16
nop
jmp
call
push
inc
mov
mov
loop
stos
out
mov
jno
aas
cmp
mov
inc
mov
add
mov
mov
inc
arpl
pop
aam
ljmp
cmpsl
in
xlat
mov
pop
test
lahf
lods
adc
sbb
sbbb
and
add
push
mov
add
movsb
cwtl
pop
in
arpl
mov
subb
inc
icebp
lods
lods
dec
cmp
rcrb
pushf
add
rclb
jl
pop
cmpsl
dec
dec
cmp
jbe
fnstenv
xor
movsl
stos
push
push
xor
xlat
movsl
jno
push
mov
jns
jo
and
into
push
mov
xor
cltd
or
scas
aas
frstor
push
int
and
dec
ss
in
lret
pop
pop
sbb
in
and
mov
ja
ficoms
inc
out
out
repnz
xchg
xchg
mov
mov
xchg
out
xor
sbb
in
xchg
mov
cmc
mov
repz
sub
cli
sub
mov
inc
aaa
into
test
mov
push
ficoml
adc
aas
mov
push
mov
stc
dec
clc
push
inc
lods
out
stos
hlt
outsl
stos
cmp
add
sub
mov
into
popf
inc
adc
push
sub
lods
inc
dec
out
leave
je
movsb
jno
sbb
jb
add
sbbb
pop
dec
jg
mov
fs
roll
pop
pop
clc
xchg
dec
ljmpw
ss
dec
cmp
cmp
stos
imul
insl
mov
shll
xor
ja
xchg
xchg
jge
sbb
adc
inc
add
add
incl
fs
xchg
imul
mov
cwtl
es
sbb
orl
add
sbb
call
fdiv
arpl
dec
test
in
mov
push
and
push
add
jle
sbb
push
jbe
push
jbe
adc
mov
test
sbb
push
movsb
sbb
loop
xchg
mov
inc
pop
cs
incl
iret
or
jmp
lret
aad
iret
movsl
clc
xor
jecxz
in
mov
pushf
in
cmp
mov
sub
jecxz
sbbl
fcoml
or
jb
push
xor
fstpl
repnz
and
roll
repnz
and
jbe
cmpl
xor
pop
add
adc
std
xor
add
inc
lret
and
inc
stos
cwtl
movlps
ljmp
imul
popf
fdivs
stc
rorb
ficoml
xor
aaa
mov
dec
push
imul
mov
cmp
scas
fwait
sub
aas
pop
mov
xlat
cmpsl
mov
cmpsl
iret
incl
mov
lock
sbb
loop
pop
push
mov
cltd
js
stos
in
test
fs
jb
sahf
cmp
jnp
push
fistpll
mov
mov
in
add
push
xor
outsb
lret
inc
arpl
pop
sbb
mov
inc
cmp
add
mov
jmp
mov
jnp
and
sbb
push
jbe
and
sub
std
xchg
adc
shrb
pop
push
sub
sub
inc
inc
mov
sbb
push
add
repz
and
into
mov
pop
or
fimuls
das
daa
xchg
xchg
lcall
dec
push
add
add
sbb
add
pop
dec
add
cli
std
xor
scas
out
jb
fwait
cwtl
pop
xor
in
pop
cmp
mov
mul
cld
cmc
popa
pusha
out
stc
mov
aad
pop
rcll
insb
pop
push
pop
xchg
or
push
pop
pop
sahf
cmp
rclb
insb
mov
xchg
add
inc
lea
cwtl
mov
cli
rcl
mov
fstps
cmp
das
inc
int
stc
out
cmp
adc
call
test
out
mov
pop
and
out
shll
test
je
push
cmp
and
cmp
sar
and
loope
shrl
div
jae
sub
mov
out
fildll
fwait
xchg
pop
sbbl
pop
pushf
out
xor
sahf
sbb
in
test
fwait
dec
es
mov
mov
mov
mov
cmp
xchg
sub
mov
push
xchg
int3
cmp
out
in
lea
and
dec
xchg
jo
pop
lods
mov
jb
dec
subb
xlat
decb
and
pop
push
je
add
stos
icebp
xchg
ljmp
mov
aaa
sbb
sarl
or
hlt
jl
mov
shr
rorl
add
inc
push
xchg
rcl
dec
mov
push
sbb
in
pop
push
adc
xchg
cwtl
or
loopne
add
enter
mov
xor
nop
cli
cltd
sahf
mov
loop
inc
stos
xor
outsb
rcr
nop
test
fldenv
pushf
inc
icebp
bound
xor
std
jne
mov
roll
jp
xor
in
sbb
push
xchg
cmp
inc
out
mov
sub
cmp
pop
xchg
out
decl
lahf
push
test
cmp
push
mov
lods
rol
fstl
sbb
xchg
inc
test
sub
pop
out
sbb
loop
sbb
jb
jl
sub
push
gs
pop
rclb
inc
mov
xlat
std
push
and
push
dec
rorl
push
jmp
and
jge
mov
jle
lods
mov
std
insb
add
and
jmp
aad
fsubrs
mov
outsb
push
pushf
and
test
inc
pshufw
sbb
xchg
pushf
hlt
sbb
stc
fisubrl
adc
call
xor
mov
enter
ret
sub
push
pop
sahf
or
or
in
dec
imul
and
dec
cmp
loop
mov
cmp
call
adc
jne
pop
dec
insl
mov
mov
mov
add
or
jge
mov
add
mov
ss
inc
dec
int3
xor
ja
dec
sbb
mov
addr16
in
xchg
fcmove
out
sbb
xchg
nop
and
push
jp
mov
je
xchg
push
insb
cmp
bswap
ljmp
mov
mov
sbb
dec
stos
sub
jge
and
push
inc
inc
xor
add
xchg
scas
sbb
adcb
les
push
or
pop
inc
add
pop
cmpsb
jmp
inc
lret
pop
and
dec
into
or
and
stc
cmp
inc
mov
fidivrl
enter
arpl
out
mov
and
fs
jle
orl
sti
jnp
inc
and
cmpl
jne
mov
and
xchg
rcl
jno
jecxz
push
mov
scas
roll
sbb
cmpsb
sub
loopne
inc
sbb
xchg
scas
int3
cmp
sbb
add
loopne
out
orb
jmp
in
mov
jmp
fchs
out
lds
or
ficompl
pop
js
imul
mov
lds
das
pop
ljmp
rol
xor
add
cmp
clc
sub
popa
mov
insb
dec
insl
jg
ret
sbb
clc
cmp
fidivrs
cmpb
fisttpl
lock
test
mov
ret
fwait
test
jnp
sahf
mov
mov
mov
inc
jecxz
cmp
fwait
testb
andb
xor
xchg
jl
add
cmpl
lock
lds
lcall
loopne
lods
imul
xor
orl
ficoms
jecxz
mov
bswap
aaa
adc
or
arpl
outsl
and
cld
imul
into
push
inc
adc
in
js
and
sbb
int
bound
adc
lret
pop
pop
into
leave
adc
into
mov
xor
inc
lahf
sbb
xchg
mov
mov
ret
mov
psrld
inc
cli
shlb
xor
pop
out
push
mov
push
imul
test
push
in
add
lea
push
repz
pushf
movsl
cmp
xor
pop
xchg
jae
add
pop
bound
pop
fisttps
xchg
mov
testl
mov
sbb
and
jnp
outsl
fwait
in
aad
jp
fs
stos
push
dec
mov
xor
test
int
push
fistps
in
nop
movsl
repz
jne
cmp
mov
cmpsl
pop
mov
pop
push
sub
out
lahf
cmp
stc
je
ret
and
int
jg
adc
hlt
push
leave
movl
cmp
lods
mov
fidivrl
sbb
or
std
add
lds
iret
push
test
xor
cs
pop
int
inc
imul
lcall
lahf
or
xchg
bound
sub
cmpb
stos
mov
sahf
mov
jne
aas
mov
test
mov
lahf
leave
in
mov
nop
jle
mov
xor
out
cmpsb
aam
inc
mov
or
add
lret
add
mov
mov
arpl
push
icebp
sahf
addr16
ja
sarb
mov
lea
loop
stc
hlt
cmpsb
pop
test
mov
add
pop
sub
push
adc
sbb
fptan
jle
mov
push
idivl
scas
and
mov
jnp
mov
cmp
cld
xchg
stos
mov
js
aaa
je
sub
in
lock
and
lds
cltd
sub
or
mov
and
ss
shlb
iret
inc
in
int
pop
mov
aad
and
push
fsubs
xchg
imul
jae
cs
sbb
lds
call
sub
cld
and
cld
adc
mov
xor
jmp
repz
ss
or
shlb
adc
push
stc
add
push
out
sti
push
cmp
inc
in
cmpsb
sarb
cmp
out
test
jo
mov
in
or
lcall
and
clc
sbb
in
mov
cmp
repz
cs
pop
push
std
xor
roll
pop
pop
sahf
xlat
push
clc
dec
mov
inc
and
inc
hlt
pop
data16
mov
rcr
aas
mov
jp
jecxz
test
mov
jge
push
pop
in
movsw
testb
pop
jecxz
test
pop
lret
push
loop
into
test
pop
jo
mov
scas
push
insb
xor
jl
jne
in
jg
sbb
ljmp
popa
jecxz
jbe
xchg
dec
dec
movsb
mov
mov
xor
mov
sub
aaa
dec
fs
inc
cmp
cli
adc
mov
add
jp
pop
inc
and
push
inc
sbbb
adc
clc
call
lods
xor
sub
cmp
das
out
jle
aad
mov
inc
jne
xor
in
adc
icebp
push
ss
test
xchg
divl
jb
jp
dec
mov
push
lds
jb
lret
jo
rcrb
dec
xchg
and
dec
cld
push
mov
and
jbe
hlt
sahf
push
rolb
add
xchg
into
es
stos
xchg
mov
jcxz
dec
mov
pusha
test
push
out
pop
cmp
adc
notb
inc
out
jmp
repnz
movb
scas
in
out
cli
sub
jl
lret
cltd
mov
push
outsl
fcmove
pop
or
cmpsl
xor
xor
orb
addl
jb
mov
sub
mov
adc
lds
jbe
mov
lods
add
mov
xchg
aas
xchg
xchg
sbb
add
cmp
mov
push
xor
es
push
jns
pop
mov
cmp
arpl
test
inc
cld
jmp
dec
jne
insb
aam
pop
adc
cmpsl
fcomps
nop
bound
inc
pop
mov
mov
and
mov
pop
fldenv
jp
in
mov
cwtl
aaa
sbb
sub
cmp
fdiv
fcom
stc
xor
xchg
xchg
push
sbb
dec
icebp
es
addr16
add
dec
lods
stc
xor
pop
jne
sub
push
dec
or
pop
test
sbb
adc
and
mov
mov
cmp
insl
int
roll
or
cmp
movsb
push
add
cli
jo
xchg
es
pop
stc
ret
ds
fwait
xchg
test
movsl
ljmp
or
test
jne
xchg
sbb
mov
adc
daa
sbb
mov
fiaddl
sub
sub
sahf
sub
push
int3
aas
fistpl
stc
gs
int3
jne
lock
or
xchg
xlat
or
mov
inc
dec
dec
lcall
xchg
ja
inc
or
adc
lahf
subl
ss
cltd
or
jns
sub
mov
fsubr
xor
sbb
cmpsl
xor
roll
std
bnd
ret
cmp
daa
push
pop
mov
test
popa
into
insl
cs
fstpt
gs
aas
outsl
loop
adc
lahf
mov
popf
loope
aas
mov
imul
mov
testb
jmp
mov
pop
mov
dec
jae
adc
pop
fwait
pop
sbbb
lods
int3
mov
fcmovb
das
sbb
icebp
cmp
cmpsl
jg
mov
das
scas
jle
cmp
movsb
inc
mov
repnz
cmc
push
mov
push
addr16
sub
les
imul
and
adc
sub
daa
loope
outsb
lds
clc
adc
push
xchg
andl
insb
mov
inc
inc
cltd
imul
xor
dec
mov
jecxz
push
sbb
xchg
outsb
fistps
fwait
sub
call
lock
mov
sahf
sti
icebp
fcomp
pop
jae
jl
je
sub
jecxz
out
jbe
sbb
jo
and
out
mov
shl
inc
cmp
ret
rolb
xchg
cmp
lods
dec
dec
xchg
or
pop
jl
aaa
sti
dec
imul
lcall
sbb
inc
js
mov
push
movsl
mov
mov
sarl
lds
push
adc
js
cli
loopne
leave
push
fcomp
test
lock
cld
inc
loopne
sbb
insb
sub
jmp
sbb
cld
fsubl
or
popf
cmp
fstl
or
mov
jae
les
sub
and
sub
ss
icebp
shrb
and
adc
cld
lahf
push
mov
push
sbb
mov
mov
and
ficompl
cmp
pop
outsb
jecxz
pop
jb
adc
sbb
fstpl
mov
sub
popa
aas
daa
xchg
decb
ficomps
pop
jmp
mov
or
mov
cld
aaa
push
pop
mov
lock
mov
syscall
or
iret
sar
pop
imul
mov
pusha
inc
aas
jmp
sahf
outsl
dec
ror
enter
cs
ja
lds
mov
mov
insb
mov
fdivr
pop
jl
xor
mov
cs
push
daa
mov
sub
jo
shr
mov
push
or
adc
xchg
add
push
inc
dec
or
repnz
or
pop
jmp
xchg
fiaddl
and
test
in
enter
adcl
cltd
aaa
mov
mov
imul
mov
lcall
mov
icebp
add
scas
rcll
jo
repz
pop
xchg
push
fs
test
fcompl
jnp
adc
xor
aad
pop
fistpll
jno
dec
sahf
pop
mov
ret
scas
adcb
and
das
sub
fnsave
mov
pushf
nop
add
bound
push
sub
ja
test
push
pop
mov
mov
xchg
scas
xor
aas
pop
call
mov
lret
xchg
xor
cmp
mov
pop
sahf
loopne
jecxz
je
enter
lret
mov
int
mov
push
jge
stos
mov
sub
into
cmp
sub
mov
cmp
lock
addr16
bound
adc
xor
xlat
mov
push
mov
xor
xor
adc
ret
notb
cmpsb
scas
aaa
sti
cli
mov
jmp
into
mov
int3
sub
or
and
xchg
es
xchg
ja
mov
addb
addr16
jl
mov
mov
fidivrl
pop
or
out
sub
mov
ljmp
aaa
imul
add
sbb
jle
mov
movsl
and
mov
pop
and
xchg
xchg
shl
and
enter
inc
and
mulb
sub
cmp
push
push
ret
inc
popf
nop
xchg
jbe
adc
outsl
pop
sbb
adc
subb
dec
arpl
dec
cmpsl
dec
fwait
cmp
insb
aas
inc
cmpsl
sahf
mov
iret
mov
mov
sarl
xchg
adc
xor
ret
in
cld
scas
jo
jecxz
mov
cmp
pusha
mov
and
or
imul
aaa
es
pop
pop
mov
scas
inc
ljmp
mov
js
jecxz
loope
jecxz
popa
cmpsl
jl
and
sub
arpl
fcmovu
jp
inc
scas
inc
jne
mov
xor
insb
jmp
fcomi
dec
sbb
sub
leave
or
mov
push
sbb
aas
imul
icebp
dec
daa
jl
sub
jle
or
xor
test
aas
sbb
pop
movsl
adc
leave
bound
in
es
movsl
test
fbstp
fdivr
scas
push
jo
pusha
insb
jg
leave
imul
sbb
mov
mov
scas
les
int
push
loopne
testb
shl
les
pop
in
jge
iret
repz
pop
adc
outsl
pop
out
out
add
inc
mov
cmp
js
adc
mov
out
ret
jle
aam
scas
jge
mov
cltd
jbe
iret
ret
lods
mov
cltd
lds
je
loop
fdivr
pushf
andb
pop
int
fwait
aad
mov
enter
push
add
mov
cwtl
mov
ss
out
ret
adc
outsb
xor
dec
push
push
cmp
push
mov
into
and
push
ror
shl
test
push
push
cmp
add
jb
jnp
repz
add
sub
inc
adc
cltd
push
jno
shll
fwait
out
xlat
mov
dec
cld
fists
mov
or
inc
cmc
je
cmp
cltd
cmp
cwtl
push
cmp
and
dec
incl
xorl
jg
popa
mov
sub
sub
idiv
cmpsb
pop
std
jns
xor
inc
ds
cmp
repnz
push
adc
fmuls
or
ficomps
divl
hlt
ja
clc
aad
xchg
or
not
sbb
adc
aam
fistps
std
aaa
jge
iret
in
movsl
popf
cmpsl
mov
pop
adc
test
dec
lcall
xrelease
inc
vandps
cmp
cmp
lea
scas
push
mov
mov
mov
and
popa
repz
addr16
adc
jl
cltd
inc
push
inc
fadds
xchg
movsb
adc
movsl
jp
call
cmp
push
push
jnp
test
insb
and
add
xor
jae
repz
jl
fisubl
movsl
mov
sbb
adc
filds
xchg
arpl
jmp
xchg
aad
dec
xchg
xor
mov
xchg
xabort
adc
ljmp
arpl
jl
scas
stos
pop
pusha
sti
xchg
mov
lods
or
pop
mov
xchg
mov
mov
in
jnp
clc
lcall
xchg
sub
cmpsb
dec
ds
pop
mov
xlat
ficoms
sub
test
jns
in
jnp
push
adcb
hlt
and
mov
mov
push
sub
push
cwtl
jne
cmp
sbb
xor
movsb
int
dec
add
repz
adc
xchg
xchg
cs
ficoml
and
pop
mov
subl
gs
inc
mov
mov
mov
cmovae
and
or
sbb
jmp
stos
sub
cmp
imul
or
ds
scas
or
pop
mov
adcb
mov
sbb
mov
push
jns
or
das
mov
pop
inc
es
and
cs
mov
jns
sub
inc
call
fdivs
push
je
lret
jp
out
inc
push
xor
sbb
sub
and
xchg
and
das
add
ret
mov
xor
xor
test
repz
mov
bound
fcmovb
adc
push
adc
int3
hlt
out
mov
mov
test
adc
test
out
jmp
push
mov
out
sahf
mov
dec
pop
xchg
popf
and
call
fdivs
sub
sahf
cmp
inc
das
inc
pusha
stos
pop
cmpsb
mov
sub
add
pop
sub
and
adc
pop
add
push
divl
insl
jae
popa
mov
shl
into
out
adc
shl
pop
test
daa
aas
movsl
and
xor
jb
pushl
inc
xchg
pop
pop
cmc
inc
ljmp
lea
mov
pop
popa
das
inc
mov
scas
mov
mov
stos
jae
adc
rcrl
shll
das
scas
sub
sbb
clc
lods
mov
dec
adc
mov
xchg
cmp
mov
es
aaa
adc
pop
loopne
cli
iret
lcall
add
ljmp
cmp
data16
repz
mov
and
push
cs
bound
inc
push
cmp
cli
fists
sub
jo
xlat
lret
fimull
jnp
call
jmp
ljmp
sbb
xchg
mov
les
xor
and
fmull
add
sub
add
rcrl
pop
orl
ficoml
mov
pop
adc
mov
int3
jmp
cmpb
outsb
pop
scas
and
jae
cmp
int
leave
dec
fcmovne
mov
push
addr16
xchg
je
imul
cld
adc
lock
lods
push
xor
out
cwtl
mov
mov
jg
pop
cmpsb
rorb
nop
sub
sbb
ja
imul
mov
je
cmp
dec
shll
test
push
loopne
pop
jae
and
add
mov
movsl
fbld
mov
out
xchg
aam
addl
pop
cmp
ss
cli
cmp
lret
xor
push
mov
std
add
pop
fcompl
mov
ret
sbb
rcl
dec
sti
xchg
mov
adc
xchg
pop
enter
mov
mov
mov
negl
xchg
js
dec
hlt
ljmp
push
lret
sub
mov
pop
jo
shrb
sbb
js
and
ja
pushf
outsl
adc
mov
out
fidivs
test
daa
inc
cwtl
mov
cwtl
cwtl
ja
dec
cs
xor
stos
xor
inc
gs
cmpsb
mov
ret
or
addr16
push
inc
sbb
ss
pop
leave
sahf
scas
lret
test
int3
xor
ds
push
stc
add
sub
fcoms
inc
les
push
push
loopne
adcb
inc
sub
add
dec
push
xchg
loope
jg
pop
jo
stos
jg
xor
jecxz
lods
sub
fistps
fcmovne
adc
jne
fisubrl
push
arpl
cld
jb
sub
es
push
inc
sbb
aaa
xchg
dec
sub
mov
adc
add
mov
jne
mov
ret
enter
scas
jecxz
cmp
jnp
shlb
in
xor
loopne
adc
xor
mov
push
scas
jmp
fsubl
jge
mov
clc
adc
test
dec
pop
add
xchg
mov
daa
dec
mov
and
js
std
push
or
mov
ja
ja
xchg
hlt
rol
push
or
xchg
pop
adc
outsb
cmpsl
push
pop
lret
dec
aaa
aad
push
push
sahf
test
and
popf
or
fisttps
outsb
jns
nop
and
cmp
push
orl
jno
and
jo
scas
in
add
sub
inc
es
xor
outsb
xor
subl
data16
rcrl
repnz
mov
mov
push
fstpt
and
push
lret
sub
mov
lcall
dec
or
and
xor
or
adc
fs
lods
popa
pop
lock
add
jns
out
push
imull
jp,pn
mov
test
movsb
xchg
push
pop
in
lds
subb
clc
xor
pop
and
clc
addr16
cmp
outsl
shll
cs
and
imul
loope
in
jbe
adcl
mov
rcr
cmp
or
add
bound
and
mov
in
jb
jp
je
xchg
movhlps
nop
mov
or
fwait
sub
sub
pop
popa
bound
jns
out
mov
adc
es
shr
push
sbb
cli
js
cmp
les
movsb
xor
xchg
cld
xor
dec
nop
mov
cmp
and
pop
jmp
pop
jb
out
shl
fucomi
out
jecxz
loope
jae
test
adcl
gs
es
adc
sbb
fisubs
iret
in
mov
jg
shrb
xchg
cmp
or
sbb
adc
sarb
add
or
sbb
js
xchg
insb
aam
neg
mov
mov
or
sbb
push
pop
stc
sarl
sbb
push
jne
inc
into
lods
jl
aad
repz
int3
das
movsl
sub
les
jnp
and
sbb
lds
mov
push
sub
inc
loop
stos
clc
mov
nop
outsb
loopne
push
pop
push
data16
lods
mov
pop
in
js
mov
push
pop
roll
out
xchg
subl
aam
sub
inc
and
ljmp
pushf
add
adc
aad
fwait
and
dec
lret
push
loopew
popa
dec
hlt
pop
dec
xchg
lea
and
and
addl
imul
jae
xor
xor
repz
dec
fstl
orl
gs
cli
dec
add
cmp
jmp
les
shlb
push
test
push
and
aaa
mov
aas
in
mov
cltd
stc
das
jnp
loopne
andb
mov
add
and
ds
lret
ss
jbe,pt
jne
mov
sbb
imul
and
nop
xchg
aam
stc
add
xor
mov
clc
outsb
outsl
sbb
mov
in
cmc
mov
jecxz
fmuls
aad
jg
mov
pop
add
aas
or
orl
and
js
hlt
sbb
in
mov
cmp
dec
not
xlat
mov
add
ss
xchg
fcmovnu
inc
and
stos
push
sbb
cs
std
jnp
rcll
pop
fwait
and
stos
and
cmp
lods
sub
loope
or
pop
insl
in
clc
shll
nop
orl
scas
cmp
movsb
int3
pop
mov
mov
push
or
jmp
sub
xor
int3
push
adc
fmull
scas
adc
popa
out
lea
mov
addb
out
lods
inc
mov
adc
sub
clc
xchg
test
es
push
cmc
jno
loope
lahf
cmp
lret
xchg
cmc
mov
mov
test
sar
mov
xchg
call
cmp
call
into
out
push
je
rcll
add
lret
jge
pop
icebp
mov
or
dec
or
and
and
dec
out
in
test
push
pop
jnp
gs
add
xlat
and
and
lahf
xchg
adc
pop
inc
addb
pop
mov
adc
aam
mov
pop
push
and
add
data16
adc
cmp
pusha
into
mov
sbb
movsl
aam
push
jno
popf
or
sbb
jnp
push
inc
mov
xchg
jg
push
sub
mov
jnp
stc
adc
je
xlat
data16
pop
push
jns
inc
iret
xchg
pop
sbb
int
push
cmpsl
push
nop
scas
movl
pop
or
cmpsl
test
xchg
jne
lret
pop
xor
pop
mov
out
xchg
iret
adc
cmp
add
stc
pop
popa
push
jo
popf
ficoms
jns
jb
adc
into
xor
mov
cltd
mov
jb
add
stc
and
call
mov
and
into
xchg
icebp
mov
imul
adc
jle
adc
fnsave
sahf
cmp
xlat
sbb
pop
scas
stos
cmpsl
mov
push
cld
fwait
into
xor
fwait
daa
lods
sub
outsb
xlat
rorb
nop
ss
scas
sub
mov
push
nop
repnz
int
mov
jbe
and
cli
cld
pop
arpl
mov
push
daa
test
bound
cmpsb
add
add
dec
pop
sbb
pushf
pop
pop
fwait
inc
inc
pop
std
cli
pop
xchg
mov
xor
dec
push
pop
pop
mov
mov
dec
cmp
xor
cmp
jle
scas
xchg
sbb
lock
adc
sbb
sbb
and
negl
fnstcw
or
test
xchg
xadd
in
mov
leave
add
cld
scas
insl
and
pop
or
xor
pushf
push
dec
dec
mov
inc
cmpb
cli
pop
movsb
mov
cmp
push
in
pop
push
add
pushf
lods
inc
jle
dec
pop
cmpsb
mov
mov
stos
inc
lds
fnsave
shll
clc
out
push
xor
sub
pop
in
xchg
xchg
mov
mov
xchg
dec
pop
jmp
xchg
jge
xchg
add
sub
inc
mov
add
or
sbb
fwait
outsl
loope
jmp
xchg
or
ljmp
mov
xchg
negl
out
cmp
dec
jle
push
add
jg
mov
lock
shrl
adc
sti
push
movsb
rcrb
addl
pop
fisttpll
sub
daa
into
jnp
adc
push
fstl
cs
pusha
pop
push
mov
mov
sub
es
rolb
xor
mov
jne
fldt
mov
gs
popa
movsl
sarl
push
int
sar
jg
sahf
test
sarb
dec
iret
jle
insb
sahf
sbb
pop
pop
xchg
or
and
outsb
popa
xor
jmp
dec
push
lret
xor
outsb
add
ds
jmp
ret
jl
lods
adc
iret
or
pop
and
push
sub
mov
shll
mov
fiaddl
cmp
mov
jae
inc
cmp
bound
push
lods
test
daa
cltd
mov
or
stos
cli
jg
jl
icebp
in
pushf
das
mov
cmpsl
cmp
imul
or
sbb
cltd
dec
dec
xor
xrelease
jecxz
lds
or
and
dec
out
imul
cmp
into
xchg
sbb
or
rcll
imul
and
enter
cmp
repnz
ja
imul
xor
sbb
pop
leave
push
mov
cwtl
mov
pop
roll
pushf
cmp
scas
push
inc
dec
mov
ljmp
pushf
sub
sarl
inc
cmp
mov
mov
push
hlt
div
dec
lods
lds
in
xchg
or
popf
jo
outsb
or
jp
xor
dec
lret
cmpsb
rorl
mov
in
mov
adc
lds
out
push
outsb
int3
loopne
test
imul
adc
stos
jnp
and
ljmp
add
mov
mov
iret
sub
loopne
movsb
pop
outsb
jb
pop
mov
dec
cmp
mov
movsb
test
ja
arpl
cs
or
jno
ds
lods
pop
leave
xor
insl
xchg
and
rorl
push
cmc
mov
je
mov
pop
jmp
inc
repz
lods
fstpl
add
mov
jecxz
jae
mov
ja
mov
es
xor
out
adc
push
sub
cli
imul
jmp
inc
ficoml
aaa
jp
aas
test
test
push
push
sahf
ljmp
je
jns
and
add
pop
dec
adcb
adc
scas
dec
leave
ljmp
sub
mov
mov
pusha
es
pop
adc
outsb
mov
lock
dec
outsl
xchg
jl
xchg
daa
iret
push
xchg
fcomi
sbb
lret
mov
dec
dec
test
mov
sub
adc
addl
push
shrl
push
test
push
mov
push
jno
shl
or
pusha
jae
pop
sbb
cwtl
lods
sti
sub
stos
pop
sti
pop
mov
jns
or
or
jb
pop
out
cmp
xchg
push
inc
add
ret
and
inc
int
adc
mov
aam
repnz
fisubrs
outsl
push
xchg
rep
cmp
sbb
and
adc
jae
sub
sub
jns
outsl
es
sbb
sub
inc
mov
out
jmp
mov
inc
scas
into
jg
cld
dec
fsubl
xchg
add
gs
or
jno
pop
jns
mov
cld
and
notb
in
fldenv
or
cmp
sub
icebp
cld
inc
ja
xchg
es
pop
or
lds
adc
or
iret
xor
sub
dec
jmp
clc
mov
fstps
jge
sahf
test
xchg
cmp
pop
mov
insl
in
sbb
pop
lret
cld
movlhps
jg
mov
mov
repnz
fildl
cmp
pop
mov
sbbb
lcall
nop
sbb
or
sar
scas
cmpsl
popa
aaa
out
mov
push
xor
and
cmc
enter
sbb
adc
or
mov
jbe
push
test
sti
mov
outsb
rcrl
and
jnp
mov
inc
sbb
dec
add
sarl
cmc
outsb
into
and
xchg
enter
xchg
repnz
gs
andb
pop
adc
jmp
push
cwtl
das
jp
add
xor
popf
outsb
idivl
pusha
fildl
bnd
pop
stc
pushf
jp
and
xor
jne
or
push
fstp
add
loop
mov
inc
push
pop
fwait
stc
mov
xchg
pop
movsl
je
push
jge
jns
lahf
movsb
sbb
insl
jge
sbb
sub
imul
clc
cs
sbb
push
ja
jbe
jns
xor
pusha
repz
movsl
xchg
ljmp
cwtl
lds
rcrl
sbb
pop
int3
adc
stos
and
mov
idiv
add
pop
leave
xchg
clc
mov
and
adc
cmp
xchg
push
jnp
ljmp
mov
xchg
mov
dec
cmp
cmpsb
test
fists
in
or
sbb
js
dec
enter
xor
mov
mov
dec
negl
mov
mov
push
scas
push
mov
cmpsl
popa
shl
mov
je
xchg
mov
jmp
daa
data16
decb
sbb
xchg
testb
push
push
push
outsl
outsb
inc
cs
add
xchg
gs
add
out
xchg
pop
insl
xchg
int3
rcr
arpl
pop
jno,pn
pop
push
sbb
sub
and
pop
sub
xor
lods
xorb
xor
lds
lret
dec
out
add
ss
and
enter
int
mov
mov
ds
test
push
loope
das
mov
gs
int3
out
sub
fsubrl
pop
dec
ror
lret
mov
sahf
std
cmp
arpl
repnz
lods
xchg
mul
pop
cwtl
add
sbb
aas
add
push
fnstenv
jno
bound
in
gs
mov
dec
enter
popf
loop
or
ret
or
lea
fcomi
xchg
fnsave
ror
push
and
mov
out
int3
push
imul
jo
out
push
mov
add
out
push
stos
ss
add
fistps
or
and
pop
call
out
ss
cmp
je
cmp
roll
arpl
and
sub
sub
xchg
cmpb
or
je
cli
push
stos
daa
push
enter
inc
ss
fwait
sbb
out
rcl
xor
cli
rolb
pushf
dec
dec
push
insb
stos
cmp
pop
mov
xchg
adc
je
cli
frstor
lret
or
test
mov
xchg
mov
ja
dec
xchg
ss
or
cmc
jae
inc
test
lods
movsb
fcompl
std
lods
jle
sub
sbb
push
iret
sbb
jno
std
clc
pushf
imull
sbb
xor
insb
fcmovbe
aaa
xchg
pop
sahf
dec
push
sarl
js
mov
pop
or
faddl
movsl
adc
dec
xor
xor
les
jecxz
lcall
xchg
dec
lods
jge,pn
pop
sbb
pop
aas
cmpsl
xchg
push
cmp
test
fdivs
out
xchg
test
push
sub
jge
pushf
cltd
push
cmp
pushf
daa
xor
test
pop
rclb
test
mov
jl
mov
dec
insl
dec
mov
inc
cmp
daa
add
sbb
add
lcall
xchg
and
shll
mov
mov
adc
xchg
cmpsb
cmpsb
jle
push
mov
inc
cmp
xchg
shlb
aam
hlt
push
or
sbb
addr16
in
fisubl
mov
xor
dec
or
orl
clc
pop
insb
insb
cmp
cmp
stos
andl
xor
pop
ficomps
imul
xor
add
test
xchg
fs
pop
push
mov
je
inc
sbb
fld1
push
xchg
lods
daa
loopne
sub
xor
ja
mov
xchg
xrelease
loope
pop
scas
adc
add
lret
xlat
xor
out
cltd
pop
add
scas
ret
xor
popa
loope
cmp
jmp
add
push
and
mov
adc
inc
mov
fwait
gs
les
sbb
mov
dec
cmp
loopne
subl
testl
nop
xchg
and
les
test
fistl
nop
repz
jne
jecxz
push
mov
push
in
daa
pop
and
or
xchg
repnz
sub
pushf
mov
add
roll
lcall
imull
pop
jge
imull
fs
test
xor
and
mov
fdivl
int
das
cwtl
adc
jae
outsl
dec
enter
push
stos
inc
lahf
pop
sarb
lds
std
mov
iret
out
ffreep
jo
push
xor
aas
popf
rcrb
ret
push
out
mov
xor
sub
mov
jg
jb,pt
mov
xor
pop
data16
leave
or
mov
insb
mov
bnd
cmp
jnp
movl
cmp
mul
hlt
jle
subl
lret
paddw
stc
jmp
jb
cmc
cmpsb
mov
int
cmc
mov
push
and
dec
push
das
loopne
fwait
fwait
mov
outsb
push
push
inc
push
nop
pushf
dec
rol
cmp
int3
mov
cmp
sbb
addr16
push
orl
arpl
lods
fisttpl
inc
mov
or
jno
enter
pop
jl
aaa
inc
enter
cmpsl
out
push
scas
movsb
lret
sbb
and
mov
and
ror
scas
xchg
lds
aad
movsb
and
push
out
dec
jmp
cmp
jle
xorl
nop
xchg
out
rorb
mov
into
jb
das
and
pop
imul
jns
cmp
push
pusha
adc
xor
dec
lods
test
mov
int
inc
xchg
ljmp
hlt
inc
stos
sbbb
and
subl
cmp
mov
arpl
daa
xchg
jg
xchg
sbb
dec
bound
and
movsl
dec
ficoml
imul
leave
clc
lea
movsl
je
pop
cltd
test
push
mov
idivb
faddl
and
iret
push
pop
add
and
add
sbb
sbb
mov
pop
or
push
stc
lcall
xlat
lea
sub
mov
gs
add
lods
dec
aad
dec
cmp
stos
or
lcall
arpl
pop
popa
inc
push
popa
rcll
inc
pop
xchg
or
sbb
sar
dec
mov
dec
outsl
cmp
popa
mov
add
cs
dec
sti
insl
or
filds
and
cwtl
imul
addl
xlat
out
int
cwtl
dec
fadd
pop
jl
mov
xchg
lock
outsb
push
and
push
jl
imul
push
inc
add
sub
fldpi
lods
jnp
aad
stos
push
sbb
stos
in
pop
mov
dec
add
loopne
aas
adc
or
jmp
rcrl
jecxz
aam
dec
mov
fldcw
inc
adc
shrl
mov
ret
sub
pop
pop
pop
sbb
sub
ret
jnp
enter
lock
call
popf
and
mov
enter
xor
push
scas
mov
push
outsb
cs
jno
test
test
xchg
loop
xor
cmpsl
pusha
xchg
pop
cmp
addr16
sbb
xchg
xor
jno
push
or
mov
lahf
mov
pop
fincstp
mov
xlat
dec
add
call
dec
pop
shll
inc
std
and
mov
adc
fwait
or
push
push
sub
lods
xchg
mov
cs
test
cmp
cmp
in
xor
jbe
sub
adc
mov
dec
mov
and
cmp
arpl
scas
mov
loop
xor
push
addr16
sbb
or
cmp
in
or
push
add
addl
mov
les
jo
or
lea
inc
add
mov
icebp
out
leave
scas
cmc
pop
add
loopne
cmp
or
sbb
ss
jno
loopne
fnsave
push
pop
xchg
scas
mov
repnz
sbb
js
inc
stos
add
dec
mov
jbe
shll
sbb
push
pop
cld
imul
adc
in
sarl
imul
fildll
add
test
mov
out
repz
lods
jbe
sub
loope
cli
sbb
daa
mov
rcll
lock
push
lock
dec
mov
sub
sub
sbb
es
cmp
fs
xchg
insb
or
ja
mov
xor
std
xchg
or
jle
bound
fwait
dec
aam
gs
pop
push
andl
les
mov
ret
cmp
ret
bound
imul
dec
pop
cmp
aas
mov
orb
mov
mov
lock
xchg
push
inc
push
rol
rcrl
std
xor
scas
or
push
les
aam
lmsw
cmp
push
adc
adc
mov
and
dec
nop
cmp
dec
je
loope
imul
int
loop
mov
mov
xor
das
hlt
test
xor
cmc
inc
mov
push
jo
push
fisubs
adc
dec
jne
mov
xor
pop
cs
pop
adc
sbb
inc
sbbb
dec
xchg
sbb
xor
jge
push
roll
cmc
dec
mov
inc
cltd
mov
movsl
xor
mov
push
mov
cmpsl
push
adc
sbb
aad
xor
pushf
mov
imul
inc
mov
lcall
mov
hlt
shrb
sub
ret
icebp
mov
out
jnp
pop
jbe
sbb
out
les
shrb
clc
in
dec
sub
out
imul
popa
xchg
dec
adc
add
addr16
in
imul
inc
sbb
mov
or
dec
sub
cld
pop
cli
lcall
jo
cmpsb
or
push
mov
stos
inc
jne
rolb
xchg
jl
cltd
mov
jb
addr16
data16
mov
aas
sub
cmp
mov
je
ss
add
mov
fwait
cmpb
sti
cmp
insb
fsub
scas
in
add
add
leave
jmp
insl
cmp
cmp
xor
cltd
or
pop
sub
cwtl
xchg
mov
pop
icebp
mov
jecxz
je
insb
xchg
es
mov
js
adc
inc
sub
out
push
jno
jmp
mov
mov
inc
push
stos
aas
movsl
divl
cltd
jbe
push
fildll
push
mov
xor
dec
inc
sbb
jp
push
addr16
inc
push
loope
jnp
imul
enter
or
ret
and
mov
cmovnp
or
dec
xchg
sub
mov
mov
push
repz
scas
aad
cltd
add
adc
add
rcl
aad
mov
in
int3
sub
bound
stos
sub
je
dec
xchg
adc
push
push
fistpll
iret
mov
in
push
mov
push
adc
lods
push
cmpb
jp
repnz
in
sbb
mov
push
add
xchg
push
xchg
inc
cld
or
std
lcall
lds
mov
inc
ds
pop
outsl
xor
and
sbb
push
rcl
je
push
inc
sbb
ret
adc
dec
jl
aaa
lret
ret
sti
jns
stos
xchg
xchg
adc
mov
aad
push
add
mov
push
rcrb
idivb
jnp
jle
xchg
mov
outsb
stos
insl
ss
push
adc
dec
xchg
dec
push
adc
addl
jbe
int3
jl
inc
sub
icebp
lock
push
ret
lods
cmp
cmp
sbb
ror
xchg
add
std
call
dec
out
push
sbb
adc
xchg
and
pop
sbb
popa
stc
cltd
jne
dec
xor
rcl
sub
test
ficompl
xchg
mov
into
and
mov
in
or
sbb
xor
icebp
adc
sub
and
sbb
dec
addr16
add
shl
rcrl
gs
imul
push
iret
jbe
mov
nop
xor
xor
popa
jge
data16
sahf
test
and
sti
jnp
sbb
or
and
mov
or
fadds
mov
mov
xor
sti
icebp
pop
add
subl
pop
mov
push
popw
loop
notb
cmc
out
mov
aaa
mov
pop
mov
sbb
test
pop
mov
mov
push
mov
cmp
xchg
fisttpll
inc
dec
lret
adc
jecxz
mov
mov
dec
jp
cld
xor
popf
out
out
icebp
test
sub
cli
jbe
jg
mov
mov
je
mov
xor
mov
mov
test
and
rorl
dec
data16
shlb
in
shll
sbb
iret
sub
push
fldenv
cmp
stc
out
mov
push
je
jns
mov
fwait
jne
cli
sbbb
xchg
loopne
or
xlat
scas
ret
test
push
mov
mov
lods
xor
lock
xchg
ret
cmp
or
in
mov
incb
enter
pushf
mov
cmp
push
fcomp
stos
shl
sahf
and
lahf
pop
xchg
push
pop
or
xor
push
push
dec
test
in
xor
lahf
aas
sahf
call
inc
jg
mov
jecxz
daa
popa
mov
outsb
out
lods
xchg
push
cld
leave
aaa
sub
hlt
bound
sub
add
mov
pusha
in
out
jne
andl
mov
xor
fwait
sbb
dec
and
mov
sti
hlt
das
pop
and
xor
xor
sbb
leave
les
adcb
pusha
mov
mov
addr16
jb
push
ja
repz
dec
jp
sub
lcall
mov
int
jl
push
cmp
dec
sub
xchg
iret
mov
repnz
mov
cmpsb
js
loop
dec
gs
and
pop
mov
outsb
test
loope
push
mov
pushf
jae
sub
rcrl
cmpsb
insl
adc
push
or
sti
xchg
bound
push
in
pop
inc
dec
inc
mov
jno
sub
ljmp
xor
sbb
in
ljmp
imul
into
jg
aam
scas
xchg
adc
sbb
popf
mov
add
xor
sbb
shrb
daa
adcl
mov
shl
mov
inc
aas
jle
popa
xor
jecxz
test
sbbl
shll
aad
sbb
and
pushf
cmp
jbe
mov
or
stc
xchg
insl
imulb
cmp
jb
jl
dec
xchg
sub
fldt
or
jb
sar
sub
roll
cmp
js
sbb
push
mov
sbb
fisubl
xlat
xchg
imul
test
push
and
ljmp
fnstenv
adcl
mov
push
jne
mov
xchg
xchg
jb
fadds
lret
or
jle
test
nop
push
cmp
or
inc
shlb
or
je
cmpsl
gs
xchg
test
daa
and
lods
jae
push
xchg
jno
lea
les
xorb
repz
scas
sbb
inc
imul
fwait
packsswb
push
cld
xchg
xor
enter
subl
xor
daa
cld
movsb
cld
or
mov
gs
lods
dec
js
pop
inc
std
pop
popa
inc
sub
mov
popf
jle
xchg
mov
fmull
xchg
mov
cmpsb
faddl
lds
cmp
add
push
stc
lret
jle
mov
cltd
jbe
lret
push
dec
dec
jecxz
dec
aaa
jle
mov
addr16
jns
enter
decl
push
fs
mov
fnstenv
sti
sub
lcall
xchg
or
jmp
and
nop
xor
mov
addb
cmp
pushf
and
or
jno
mov
cmp
and
and
mov
adc
jnp
cmc
cld
fldt
adc
mov
test
sub
and
adcl
insl
xor
mov
adc
or
mov
push
add
loope
in
movb
lock
ficomps
data16
mov
mov
inc
mov
fwait
pop
mov
jp
ret
add
stos
repnz
jnp
sahf
mov
cmpsb
mov
jmp
popl
xor
insl
fwait
inc
adc
dec
xor
in
or
xchg
cld
dec
nop
adc
xorl
std
mov
cmp
sbb
or
cmpsb
jno
mov
cmp
pop
cmp
sti
push
iret
xchg
jae
into
pop
mov
jle
sbb
into
inc
and
xchg
negb
fs
les
imul
int
push
enter
lock
fcoml
js
es
inc
fisubl
fisubrs
aam
or
jp
pop
cmp
adc
xor
adcl
loopne
pandn
cmp
jo
imul
in
test
inc
arpl
cmpsl
mov
popa
sub
or
cmc
and
js
hlt
push
xchg
push
icebp
adc
xor
xlat
jge
sbb
outsl
cmp
insb
scas
push
and
mov
jnp
inc
mov
mov
dec
push
cmpsb
inc
ja
sbb
and
ds
nop
xchg
out
mov
dec
dec
pop
mov
mov
pop
shll
push
sbb
and
jmp
fmull
jecxz
push
pop
lea
lret
je
mov
adcl
mov
mov
gs
inc
jne
das
xor
push
push
outsb
push
shll
paddw
jg
sub
sbb
inc
jne
cmp
jae
ljmp
aas
out
test
ds
clc
fdivrl
addr16
pop
adc
test
add
mov
mov
jecxz
xchg
insb
loopne
and
mov
mull
mov
rorb
inc
mov
not
test
jbe
insb
mov
cmp
test
mov
fimuls
call
add
mov
jmp
xor
jle
out
addr16
xor
fdivs
cwtl
ret
push
jecxz
push
lret
setno
fisubrl
mov
or
rcl
cmc
movsb
aaa
add
dec
mov
adc
add
andl
jns
prefetchwt1
or
aaa
lret
cs
mov
les
pop
dec
sub
lods
fwait
jo
jno
insb
mov
mov
inc
es
inc
scas
mov
or
test
sub
das
dec
stos
test
adc
scas
push
pusha
cmpsl
arpl
sub
imul
inc
movsb
gs
add
push
xchg
and
aaa
sub
icebp
xchg
mov
nop
or
adc
daa
mov
mov
add
mov
adc
push
int
push
or
iret
dec
js
dec
push
jge
push
fucomi
roll
mov
cmpsl
jl
or
sub
xor
cld
inc
sbb
jp
loop
repz
jge
insb
insl
test
loope
std
call
push
dec
sub
add
lds
stos
jecxz
lds
and
cmpb
or
mov
stos
das
popl
and
and
sub
push
jl
push
repnz
lret
pop
lds
sub
movsl
ret
cmp
push
pop
es
andw
push
std
orb
mov
insl
hlt
lret
add
fsubp
add
mov
fiadds
xchg
in
jo
int
mov
clc
mov
pushf
es
xor
stos
test
cmp
mov
cld
mov
sahf
cmp
ret
cltd
xlat
inc
ja
inc
and
testb
cmp
mov
sub
pop
jl
mov
leave
push
mov
sbb
pop
inc
mov
sbb
fcmove
cld
mov
sti
scas
sbb
jnp
es
dec
data16
xor
push
aad
inc
rcrb
or
aas
aam
jbe
lret
dec
jle
rcll
pushf
cmpsl
pop
aas
mov
and
icebp
cmp
xchg
sysret
in
mov
inc
add
popf
mov
std
xlat
mov
mov
aas
out
int3
inc
xor
mov
nop
sbb
pop
add
mov
xchg
mov
mov
aad
adc
sub
xor
dec
jmp
xlat
shrl
cld
in
xchg
sub
leave
mov
add
sbb
mov
push
push
jbe
daa
mov
sub
aas
bound
and
jg
fwait
out
aas
cmp
cld
js
test
or
in
lret
cmpsb
pop
xchg
cmp
arpl
inc
call
pop
pop
mul
dec
push
push
insb
mov
stos
ds
mov
mov
xchg
dec
jecxz
xchg
mov
out
fcomip
pushf
lea
stos
imul
fmull
or
add
xchg
dec
popf
daa
dec
and
movsl
jo
mov
mov
loopne
bound
and
not
sbb
add
xchg
sbb
repz
jge
fimull
add
sub
test
mov
popf
test
sbb
and
and
data16
jp
test
cltd
and
lret
incb
std
lds
mov
rcrb
rcll
add
mov
cs
jmp
dec
insb
shrl
sbb
sbb
jle
dec
icebp
cmp
ja
insl
cmp
and
testl
xor
cmpsl
das
sbb
add
jne
mov
push
and
das
inc
ljmp
jecxz
movsb
push
shrb
negb
inc
adc
or
jg
aaa
into
sbb
in
xor
dec
or
dec
fcmovnbe
mov
inc
outsl
sbb
out
mov
inc
xor
or
fs
jg
add
jbe,pt
xor
fistpl
sub
or
leave
sub
jns
cli
cltd
xchg
fxam
dec
sub
cli
les
stos
icebp
lcall
mov
mov
shl
das
jnp
stc
sbb
xor
mov
xchg
mov
cmp
loop
xchg
xchg
add
ds
mov
fisttpll
arpl
push
sub
sub
mov
ficoml
push
mov
mov
jmp
daa
pusha
sub
cmp
movb
sysenter
sub
mov
pop
push
lret
sarl
dec
ja
mov
sbb
cmp
nop
cmp
adc
es
xor
sbb
lahf
dec
mov
pop
jno
mov
pusha
cmp
pusha
jmp
repnz
popa
or
dec
ror
pop
xlat
jge
int
cmp
leave
mov
mov
adc
lods
cs
add
lds
in
ret
and
int
nop
dec
cmpsb
push
jle
insb
jns
test
flds
push
cmp
pop
cmc
cmp
xor
in
fists
mov
shl
sarl
bound
cld
movsl
dec
sti
push
push
sahf
cld
mov
cmp
in
cmp
data16
adc
es
gs
xchg
xor
fdivrl
add
stc
test
das
leave
mov
jmp
jecxz
push
mov
sahf
mov
mov
mov
push
push
or
pop
cmp
out
add
jns
insb
insb
sbbb
movsb
pop
je
adc
gs
cmp
dec
cmpl
sub
lahf
cmpsl
in
mov
shrb
lea
sbb
and
pop
add
ss
push
or
icebp
sti
jbe
jecxz
int3
ja
lcall
arpl
inc
xchg
push
pop
nop
pop
daa
data16
adc
pop
push
and
data16
shr
bound
mov
mov
js
iret
jmp
je
adc
mov
incb
push
xchg
das
popl
std
fwait
push
inc
stos
sbbb
mov
mov
hlt
mov
inc
int
out
ljmp
cwtl
dec
in
in
nop
imul
loopne
in
jle
aaa
hlt
push
push
add
dec
loop
stc
xor
sbb
adc
or
adc
inc
sub
adc
and
dec
aas
mov
sbbl
aaa
in
gs
jbe
pushf
pushf
insb
les
jbe
ds
add
mov
mov
popf
jl
sbb
lods
loopne
mov
clc
repz
sbb
inc
add
cmp
xchg
lahf
mov
jae
or
icebp
sub
sahf
cmpsb
push
add
lock
inc
inc
mov
cmpw
leave
jle
ficoms
jb
or
adcb
sbb
aam
out
xor
push
dec
dec
out
dec
je
in
xchg
ret
repnz
in
hlt
aaa
lods
pop
dec
sbb
in
pop
lock
in
jae
aad
mov
outsl
clc
test
nop
std
mov
in
jno
push
cmc
lods
mov
sbb
mov
test
mov
pop
das
gs
jns
push
popa
hlt
and
pushf
jns
xchg
mov
push
jecxz
jb
lret
xchg
jo
test
mov
dec
rcl
fxch
aam
sub
mov
and
and
xor
and
pop
fwait
mov
cmc
pop
je
pusha
popl
lds
cmp
adc
gs
fiaddl
ret
cltd
push
outsl
push
sarb
or
repz
mov
pushf
pop
mov
jl
jle
aas
push
cmp
nop
jecxz
fiadds
out
add
imul
mov
push
add
mov
cmp
xor
or
mov
sbb
xchg
push
mov
cltd
test
rolb
push
incb
cmp
xchg
jns
adc
push
mov
jb
sub
mov
or
and
or
out
dec
push
shll
inc
xor
pop
push
push
loope
sub
addl
dec
ljmp
lret
call
cltd
das
jb
int
cwtl
add
sahf
in
adc
and
loopne
push
das
mov
ret
add
testb
shr
in
bound
fstpl
dec
les
mov
add
add
rolb
adc
inc
outsl
cwtl
dec
and
jmp
sub
add
js
fdivrs
sub
lret
or
jns
mov
fcoml
int
jmp
pop
std
mov
xor
mov
xchg
add
ret
je
out
mov
insl
inc
sub
das
fidivl
mov
inc
ret
sub
jbe
es
shll
xchg
adc
inc
fwait
add
mov
and
add
or
sbb
jb
xor
dec
insl
sub
xor
and
xor
xchg
mov
in
stos
movsb
sub
xchg
adc
adc
rorl
sub
dec
jbe
stos
aad
ret
rcll
into
or
mov
movsl
xor
fstps
push
push
xchg
lea
mov
testb
mov
popf
sub
or
rolb
mov
adcl
es
xor
in
lahf
lahf
cmp
jl
jge
xchg
pusha
idiv
xchg
lret
idivl
popa
sbb
mov
sbb
sub
push
mov
adc
mov
insb
jg
mov
xor
ja
loopne
mov
sub
je
pop
mov
loopne
fnsave
rcrb
add
xor
mov
sbb
add
rclb
xchg
out
hlt
and
sti
test
xchg
insb
sbb
cmp
mov
mov
pop
loopne
movsb
int3
inc
int
je
aas
int
test
lods
jl
cmpsl
stos
lea
mov
xor
ljmp
test
sbb
adc
ret
mov
ret
cmc
mov
xlat
mov
mov
xor
mov
pop
rcl
enter
xor
adc
mov
pop
into
mov
mov
mov
insb
adc
xchg
cmp
inc
cltd
jl
lahf
jb
fwait
dec
or
xchg
inc
inc
data16
push
xchg
add
rorl
cmp
aad
inc
lsl
sbb
cs
push
mov
sbb
xor
movsl
lock
test
mov
jp
adc
inc
daa
push
inc
lock
xor
out
ss
cmpsb
xor
add
inc
ret
mov
push
shl
or
dec
xor
jle
ss
popf
jns
ja
fisttpl
pusha
pop
cs
push
jg
mov
mov
xlat
or
pushf
ss
mov
mov
daa
inc
std
les
jge
int
test
aad
jns
sbb
fimuls
mov
dec
sbb
popa
xchg
push
pop
gs
idiv
sub
daa
and
call
insl
jge
xor
push
or
ss
and
push
bound
jae
push
dec
bound
fmuls
add
or
push
mov
inc
jo
rorl
mov
mov
sub
icebp
fwait
test
mov
mov
incl
jmp
test
sub
push
pusha
loope
push
cmpsb
jmp
test
lret
pop
inc
cmp
or
adc
jnp
pusha
jmp
or
imul
js
and
pop
cmp
inc
inc
xor
bound
mov
adc
or
add
cmpsb
mov
mov
loop
call
pop
rcr
sbb
xchg
or
aam
xchg
inc
cmpsb
sahf
in
aas
push
ja
out
ja
sar
or
movsb
dec
loopne
sti
dec
and
sarl
out
pop
cmp
into
sub
xchg
pop
jmp
pop
imul
jo
fdivs
add
int
and
dec
notl
rcll
pop
xor
js
adc
lods
xor
loopne
or
push
or
pop
cs
aad
out
jno
das
push
xchg
dec
pop
neg
outsb
sub
scas
insb
inc
adc
inc
xor
outsb
xchg
mov
shll
sbb
test
xchg
mov
fldl
in
stos
out
mov
iret
shl
cmpsb
daa
cmp
iret
sbb
dec
fs
add
mov
stc
sbb
clc
lds
inc
adc
fucom
jbe
call
shlb
or
out
and
push
pop
sti
lahf
mov
cmpb
sub
mov
push
mov
mov
and
ds
lret
andb
cwtl
out
sub
and
cmpsb
cmpsb
dec
jmp
test
in
lods
xchg
mov
sbb
fs
adc
insb
dec
push
pop
roll
call
fistl
inc
jl
testl
fimull
mov
push
and
bound
call
sbb
cli
imul
testl
xlat
stc
cmp
xor
lret
cs
inc
aas
daa
or
cwtl
lock
das
hlt
fiaddl
sahf
arpl
jl
bound
loop
mov
xchg
jp
inc
sbb
xchg
shrl
aad
jl
push
xlat
dec
mov
sbb
sbb
adc
test
pop
jp
adc
lret
sub
inc
dec
push
lods
add
cli
and
jnp
cmp
mov
mov
out
dec
fcmovb
jecxz
outsl
adc
sub
pop
sti
inc
lea
mov
insl
mov
cmpsb
push
loope
cltd
pop
mov
insb
shrl
pop
in
sbb
std
jl
stc
stos
mov
xor
xchg
loope
jno
xlat
jne
aas
cmp
sbb
xor
pop
std
push
pusha
adc
cmpsl
push
fsubrs
sub
scas
adc
jp
fimull
jmp
sbb
inc
xor
jg
xor
out
arpl
push
pop
std
je
dec
outsl
pop
sar
sbb
gs
shll
insb
cwtl
sbb
setle
stc
into
dec
xchg
fdivl
ljmp
mov
and
or
ficoms
sub
out
pusha
pushf
ja
mov
test
and
pop
cli
aaa
and
xchg
mov
mov
mov
sbb
lret
and
imul
js
mov
outsb
fistl
xchg
dec
xchg
les
xchg
lods
push
adc
fcoml
cmp
sbb
mov
orb
cli
and
add
mov
cmc
jns
pop
shrl
std
sbbl
and
push
xor
jnp
shr
lods
dec
xor
mov
pop
stos
sub
sub
dec
mov
xlat
cmp
arpl
fimull
rorl
sbb
xor
jle
jmp
enter
lods
cs
popf
xchg
int3
xor
setge
test
mov
jae
jb
cmp
aad
and
arpl
dec
push
push
and
std
in
jo
into
mov
dec
ret
cld
notb
jle
scas
lock
scas
aad
jmp
add
js
xchg
pusha
mov
shrb
jmp
lret
add
ds
xor
push
xchg
add
mov
cs
pop
sub
sahf
pop
int3
je
cmc
out
inc
popa
or
inc
fbld
adc
and
cli
inc
jbe
cmovo
shrb
imulb
mov
mov
lea
scas
cmp
add
orl
jg
mov
pop
pusha
lret
lret
push
sarl
mov
test
mov
sub
imul
adc
faddp
sub
push
fmull
or
movsl
sahf
mov
std
pusha
movsb
add
mov
loop
mov
sbb
hlt
cs
inc
xchg
shlb
int3
and
out
push
jbe
xchg
mov
insl
dec
stc
lret
jnp
testb
push
hlt
sub
add
arpl
lds
fcompp
adc
fwait
sbb
fldl2t
pop
sub
mov
and
cltd
jp
jl
mov
pop
mov
in
ja
data16
aam
data16
mov
dec
push
jg
sbb
rsm
push
mov
incl
je
bound
fwait
lds
lods
push
mov
les
repz
cwtl
cmpsl
mov
xchg
sub
dec
add
les
lret
xor
jb,pn
adc
mov
cmp
sbb
shlb
xor
js
mov
shll
pop
lods
push
lret
sbb
xchg
xchg
std
xchg
sbb
andb
js
stos
shrb
and
int
inc
aas
sub
lret
jno
adc
push
push
iret
jnp
xchg
mov
sahf
xchg
cmp
jle
ret
xor
xchg
aas
ja
pushf
jb
sub
in
js
adc
sub
aas
lea
push
bound
leave
mov
outsb
xlat
roll
pushf
fwait
aas
pop
mov
mov
adc
jno
lret
sbb
fldenv
ljmp
ljmp
jp
cli
popa
les
scas
jmp
loopne
pop
xor
test
pop
outsb
jl
aam
mov
mov
add
cmp
lret
stos
push
cld
push
add
jb
push
xor
sub
in
mov
sbb
push
mull
insl
xchg
cltd
loope
xor
xor
push
in
popf
jno
jns
xor
sub
mov
sar
xchg
mov
push
sbb
hlt
rcrw
cmp
scas
into
cmp
xor
daa
sub
rcl
aaa
sub
and
sub
xchg
jo
enter
jo
aaa
xor
and
rcr
and
push
mov
jbe
std
cmpsb
jb
mov
push
xchg
aam
aad
aam
jb
jecxz
and
cs
xchg
xor
jl
jno
sub
or
stc
insl
mov
addl
arpl
test
xorl
push
xor
fiaddl
push
pop
cmp
test
clc
jp
mov
push
stos
jo
jg
outsb
mov
ficoms
xchg
fldcw
lret
lods
mov
test
mov
xor
dec
mov
jno
mov
cmovne
test
loope
xchg
cmc
shld
repnz
adc
inc
aas
jae
sub
sbbl
sub
cwtl
js
in
cmp
inc
repz
cs
push
addl
fsubl
xchg
in
repnz
push
jns
or
push
outsl
xchg
mov
scas
jecxz
ja
ret
sbb
out
nop
mov
mov
stos
imul
in
cmp
sub
inc
add
pop
lret
rorb
pop
unpcklps
shlb
cmp
leave
movsl
push
hlt
mov
inc
cmc
xchg
push
lds
arpl
sub
and
mov
ljmp
adc
jnp
mov
pop
jae
sbb
test
sub
mov
xor
jno
and
mov
cmc
xchg
or
pop
lcall
cltd
mov
clc
mov
ret
hlt
lcall
ret
push
adc
or
sbb
cs
subl
push
cmpl
pop
or
mov
inc
addb
jnp
cmpsb
aas
lcall
pop
jmp
ds
xchg
inc
mov
inc
or
mov
xor
enter
xchg
cmp
popa
hlt
pop
stc
cmp
fcoml
inc
mov
xor
xchg
mov
out
ficoms
xchg
popa
push
dec
adc
data16
lods
in
pop
mov
add
test
jle
lcall
and
scas
out
out
rcr
sub
int
and
mov
shll
add
or
in
movsl
int3
xchg
jmp
xchg
lcall
lea
cmp
jle
cmp
inc
lret
sarb
pusha
xchg
inc
fimuls
test
orb
jg
mul
jp
pop
sub
mov
data16
fld
nop
movsb
enter
addr16
shl
cwtl
cltd
loop
push
adc
push
jo
pop
iret
test
mov
dec
movsb
or
jne
ret
inc
data16
push
add
sarl
jnp
adc
out
mov
enter
in
pop
les
push
imul
mov
fidivs
pop
cmc
clc
jnp
jl
das
insl
outsb
in
jmp
fs
arpl
je
outsb
lods
inc
xor
stos
push
or
scas
in
push
xchg
ljmp
inc
push
icebp
in
test
pop
andb
dec
mov
mov
jle
in
aas
push
dec
pushf
fs
fdivl
aad
and
lret
cli
inc
pop
mov
cmpsb
fstp
leave
inc
mov
jp
popf
je
sbb
mov
add
pop
push
adc
repnz
sub
adc
inc
jo
stos
addr16
fs
jge
mov
lock
pop
sbb
xchg
data16
loopne
mov
outsb
orl
pop
mov
xor
test
in
fdivrp
sub
jbe
fiadds
adc
mov
xchg
push
lret
xchg
inc
mov
lods
aam
and
jecxz
mov
icebp
div
xchg
inc
js
rcrl
sub
cmpsb
push
pusha
std
sbb
nop
lret
mov
and
dec
shl
add
and
sbb
cs
aaa
jb
xlat
sti
gs
sub
sbb
mov
and
test
outsl
mov
in
shll
cs
push
mov
int3
jge
dec
rcrb
push
out
loopne
fbld
inc
je
sti
mov
push
shr
test
std
mov
add
pop
loop
rcrb
jp
pop
or
mov
sbb
adc
jbe
dec
mov
call
and
or
add
fidivrs
ja
sahf
test
outsb
fwait
cmp
mov
cmp
out
cmp
push
mov
xor
lcall
xchg
and
jbe
cmc
jo
hlt
mov
shlb
std
jg
int3
and
repnz
insb
pop
add
ja
cmp
xor
pusha
sbb
inc
imul
adc
fistps
jge
ljmp
push
or
mov
xchg
cmpl
sbb
adc
sbb
pop
aam
stos
loop
fwait
negb
xor
and
push
jmp
adc
sub
fst
push
mov
xchg
jae
aas
into
mov
sahf
dec
loope
add
or
les
sbb
pop
and
mov
cmpsl
out
or
insl
adc
push
pop
iret
dec
mov
ds
jecxz
lea
scas
into
jns
push
or
mov
pop
xchg
test
rclb
aaa
jle
dec
cli
xchg
pushf
ret
adc
xor
movsl
push
shl
jmp
loope
dec
test
dec
lret
fstl
xor
cmpsl
xorb
nop
cmpsl
nop
sti
in
mov
pop
add
pop
xchg
and
add
jb
adc
push
js
adcl
rorl
inc
push
fs
pop
dec
add
mov
cld
mov
arpl
inc
xchg
in
mov
sub
mov
and
push
mov
out
xor
xor
imul
or
pusha
and
jp
int
xchg
rorl
xlat
into
std
mov
ret
add
mov
stos
add
in
mov
bound
fnstsw
stos
out
mov
movsb
shll
mov
fcmovne
pop
sub
push
into
or
sbb
xchg
aaa
iret
xchg
stos
sahf
adc
loop
fmuls
out
inc
and
outsl
mov
xchg
xchg
inc
lods
into
lcall
mov
sbb
push
pop
insl
mov
sbb
xor
subb
lret
adc
sbb
orl
xor
stos
push
sbb
adc
mov
lret
push
sub
push
lock
fwait
adc
outsl
or
mov
fldenv
inc
icebp
inc
test
pop
loopne
rcl
sbb
ljmp
adc
stc
shll
jo
lsl
jo
ja
mov
push
sbb
leave
adc
and
pop
xor
sub
pusha
inc
cld
fmuls
insb
dec
mov
inc
fincstp
adcb
cld
outsl
mov
mov
adc
adc
sbb
dec
mov
outsl
das
fwait
in
int
pop
leave
cld
sti
push
adcl
lock
cvtpi2ps
enter
fstp
mov
xor
fstpl
lret
cli
cwtl
ret
jle
pop
push
sub
mov
adc
lock
dec
sbb
adc
psubusb
and
dec
push
pop
push
push
stos
jbe
hlt
je
sbb
sbb
push
mov
pop
adc
inc
ret
repnz
mov
popa
xchg
sahf
jo
xchg
jecxz
lea
outsb
xor
inc
aad
jge
mov
mov
inc
daa
mov
jb
pop
mul
mov
sbb
mov
popa
mov
loopne
mov
mov
lds
fsubrs
jnp
inc
inc
mov
xlat
dec
outsl
in
adc
add
loop
int
push
adc
cmp
and
addr16
and
inc
mov
je
and
fs
in
jae
ljmp
dec
outsl
push
xchg
xlat
andl
sahf
jns
fisttpl
sbb
add
cmp
js
push
or
lcall
mov
in
pop
jae
inc
mov
xchg
sbbb
bsr
add
sahf
push
dec
outsl
lods
pop
mov
fstpl
imul
dec
push
ja
xchg
out
xchg
adc
jp
inc
mov
push
cltd
push
pop
jg
pop
dec
fnstenv
cwtl
js
push
aaa
out
mov
rcrb
aaa
adc
lock
out
data16
push
mov
popa
inc
lea
popa
sub
jle
cwtl
out
mov
sub
or
loope
cmp
inc
ss
ja
or
jb
mov
inc
pushf
add
mov
in
ds
idivl
dec
mov
leave
cmp
int
sub
push
loopne
pop
leave
scas
jo
js
lea
into
mov
pop
dec
dec
fimull
lods
int
mov
push
push
scas
mov
sub
sti
sub
add
cs
jbe
orb
and
nop
or
hlt
loop
cmpsl
push
lods
and
arpl
pusha
adc
xchg
mov
not
xor
jb
jne
cmp
sub
negb
in
jae
sub
ds
jecxz
lods
or
jb
addb
dec
fcomps
cmp
shrl
dec
pop
push
lods
outsl
sbb
shrl
leave
mov
shlb
shrl
cli
adc
jl
call
mov
aad
in
icebp
in
add
inc
mov
cld
divl
sbb
hlt
fwait
adc
aad
pop
pop
lods
pop
test
mov
fstpl
int3
dec
cmpsb
dec
clc
mov
test
mov
xor
iret
lret
inc
gs
mov
push
inc
mov
fwait
jnp
jge
insb
into
pop
xlat
dec
shl
mov
inc
cmp
or
sub
pop
iret
sub
jmp
in
popa
add
stos
lret
fnstcw
nopl
jmp
out
shrb
xchg
mov
cld
mov
gs
testb
out
lods
add
and
xchg
inc
idivl
mov
mov
rcrl
mov
inc
jno
filds
xor
xor
jns
setbe
lcall
add
or
fs
dec
inc
adc
movsl
dec
pushf
adc
jnp
shlb
jmp
mov
cmp
or
lea
cltd
pop
notb
stc
lods
sbb
aaa
and
les
cmp
sbbl
repz
mov
dec
shll
mov
mov
std
lahf
movsb
addr16
les
mov
rcrl
gs
subb
lret
stc
mov
xchg
cmpsb
dec
lret
psubb
sub
loop
repz
cmpb
fimull
mov
loopne
dec
and
mov
pop
xchg
pop
xchg
pop
outsl
adc
jle
insl
aad
aam
mov
mov
or
add
lret
mov
mov
dec
ret
insb
fsubrs
fsubs
not
mov
in
outsl
sub
testb
sub
jne
or
test
mov
mov
in
jl
imul
inc
inc
push
lret
mov
xchg
neg
xor
bound
out
addr16
arpl
dec
ljmp
mov
sbb
sbb
int3
bound
sub
pop
cmpsl
push
stos
push
repnz
ss
sbb
mov
int
pop
and
je
jnp
jl
inc
xor
stos
mov
and
pop
pop
push
mov
test
pop
add
pop
xchg
mov
mov
or
mov
xchg
or
les
or
add
pop
imul
outsl
daa
pop
repnz
lea
cmp
movsb
pop
out
jbe
pop
fnstenv
add
shr
adc
cwtl
out
loope
int
mov
imul
scas
jl
push
mov
jl
mov
pop
loop
dec
test
mov
ss
scas
push
aas
test
into
hlt
addr16
mov
mov
scas
fsubs
in
repz
cmpl
cmpsl
rcr
push
dec
ds
sub
push
ret
cmp
mov
mov
pop
push
lea
mov
in
cli
push
repz
adcb
pop
cmp
xor
jns
jg
test
out
fs
nop
test
sbb
cmpsl
out
pop
movsb
push
inc
cmp
sub
jmp
popf
fldl
xchg
mov
adc
mov
sbb
into
aaa
dec
push
cmp
nop/reserved
push
loop
lea
idiv
fisttpll
and
jl
imul
aad
fwait
mul
jns
xchg
jns
faddl
insb
push
lds
pop
insb
adc
mov
dec
pop
mov
fcoms
sbb
lahf
inc
test
or
adc
shlb
test
mov
xchg
stc
mov
movsl
movsl
roll
mov
cmp
stos
fs
iret
adc
in
xchg
rcll
push
and
jmp
cmpsb
pusha
clc
hlt
mov
stos
daa
es
std
loopne
push
shll
inc
out
push
fwait
scas
add
jge
cmpsb
insb
mov
shrl
xor
mov
dec
cmc
das
mov
or
loope
push
or
test
sub
adcb
pop
jne
sub
or
mov
movb
rcll
jp
in
mov
ljmp
loopne
or
sti
push
cli
jns
xchg
jp
xor
xchg
bound
adc
movsl
cmp
pop
mov
cmp
jl
cli
mov
in
fcomps
cltd
mov
fistpll
ds
sbb
movsl
stc
imul
sbb
mov
ja
mov
xchg
push
xchg
pop
mov
inc
inc
test
pop
mov
mov
test
andl
ds
movsl
xchg
ljmp
scas
and
mov
arpl
push
out
sub
jnp
xor
xor
push
inc
icebp
in
scas
std
insl
add
js
idivb
loopne
pop
pop
outsb
rclb
cmp
nop
mov
sub
and
mov
cmp
orps
pop
cld
in
cwtl
mov
lret
cmp
inc
sub
bound
ret
sbb
lea
inc
ffree
out
mov
xchg
push
cmp
addr16
xor
cmp
and
xor
pusha
fsubl
rorb
mov
push
mov
dec
outsb
mov
cmp
icebp
lea
mov
cmpsb
push
cli
push
nop
dec
or
fsubrl
movsb
xchg
sti
sbb
mov
hlt
xchg
xor
jge
cmp
jae
or
mov
cmp
lods
outsb
imul
cmp
fsubrl
int3
inc
movsb
sti
sahf
mov
inc
fwait
mov
jl
arpl
adc
insl
sahf
sub
popa
leave
shrl
ja
shlb
outsb
sub
add
jmp
push
push
xorl
outsl
fnstsw
pushf
mov
call
pop
fcmovne
pop
ds
enter
xchg
xchg
cmp
in
dec
cmp
rcr
mov
or
call
rcll
sub
negb
mov
or
mov
sub
mov
inc
dec
sub
fucomip
pmaxub
pusha
adc
mov
mov
ret
xchg
fbstp
imul
or
pop
sbb
or
in
fsts
fsubl
and
pmaddwd
mov
in
pop
stos
xlat
add
clc
stos
repz
push
dec
xchg
call
jo
add
popl
mov
stc
mov
xchg
sbb
xor
jge
test
aas
push
xchg
push
add
sbb
mov
movsb
movsb
das
push
das
outsb
mov
ret
inc
jmp
mov
mov
inc
adc
xchg
lret
pusha
fsubs
std
repz
mov
adc
jo
pop
lods
jl
or
and
and
inc
xchg
adcb
cmp
stos
bound
jbe
pusha
mov
mov
adc
xor
fidivl
sbb
add
hlt
and
test
xor
push
outsl
inc
mov
adc
andb
xchg
mov
add
xor
dec
pop
pop
or
xorb
movb
mov
addl
push
mov
pop
add
leave
sub
aaa
sub
xchg
jle
nop
pop
dec
mov
ljmp
mov
inc
sub
movsl
out
mov
inc
mov
sub
pop
or
aaa
mov
lods
jno
xorl
push
sarl
sub
leave
pop
cmp
inc
jmp
and
rcrl
mov
jne
or
and
outsl
stc
sar
mov
or
push
int
mov
mov
leave
cmp
lds
jns
ret
adc
fucomip
out
jbe
ret
inc
cmc
push
mov
pop
mov
ja
stos
jne
push
xor
xchg
test
je
xchg
iret
xchg
negl
mov
test
jb
int
xchg
or
pop
xlat
cs
pop
xor
dec
sahf
mov
cli
push
ljmp
mov
jp
add
add
popa
sbb
out
pop
pop
cmp
sahf
adc
or
pop
cmp
and
repz
add
sub
data16
mov
clc
addps
fcoml
movsl
xchg
mov
and
fdivl
mov
mov
push
pop
inc
mov
xchg
fld
push
xlat
das
mov
inc
cmpl
or
sbb
aaa
repnz
out
mov
out
jmp
cld
push
enter
xor
jnp
iret
or
push
dec
pop
xor
mov
push
cli
es
test
cmpsl
ret
andl
mov
clc
popf
loope,pn
push
or
into
lock
clc
pop
or
imul
jne
addr16
arpl
xchg
pop
mov
rcrb
jg
iret
call
ja
push
sbb
or
lahf
dec
inc
jbe
jl,pn
mov
pop
out
mov
mov
lea
sbb
jge
mov
iret
push
ficompl
fsubr
xlat
dec
xor
fwait
pop
in
xor
lods
mov
aam
mov
mov
sbb
sbb
repz
inc
enter
std
in
mov
mov
fnstcw
stos
and
psubb
test
mov
push
xchg
rclb
sub
bound
out
sahf
arpl
stos
mov
mov
cwtl
lret
icebp
outsl
xchg
push
pop
hlt
push
sub
call
sbb
int
push
les
popa
mov
sbb
pop
std
ljmp
addr16
es
or
cwtl
xchg
xchg
mov
subb
test
pop
xorl
mov
lods
mov
xchg
jbe
int
xor
cltd
mov
lock
popa
xor
js
je
pop
lret
xlat
dec
cli
inc
and
mov
xchg
mov
mov
dec
xchg
xlat
mov
ljmp
into
aas
enter
aad
or
pop
pop
jbe
dec
paddb
sbb
sbb
dec
mov
fcom
fisubrs
setb
imul
out
add
dec
push
jp
cmp
neg
int3
test
adcl
and
jmp
rorb
idivb
cmpsb
ret
xor
push
push
xor
and
mov
imul
push
sub
imul
push
pop
fldt
sub
fs
sbb
mov
out
test
cmp
or
or
sub
sub
cmpsb
dec
ds
sub
fstps
sub
or
orb
ljmp
mov
xorb
ja
push
or
mov
cltd
fs
call
jl
push
sbb
dec
push
xor
loope
push
xchg
pop
pop
fnstsw
and
es
loopne
mov
pop
test
decb
loope
aaa
fwait
push
dec
xorb
xchg
xchg
push
xor
adc
mov
fucomip
sbb
divl
add
cmp
sahf
push
jns
mov
ss
gs
shlb
jle
test
in
inc
iret
push
dec
insl
add
pop
rclb
adc
fists
setp
add
sbb
inc
cld
imul
cmc
fcoml
push
es
adc
das
xchg
pop
cmp
xchg
adc
push
cmp
dec
pop
cmp
xchg
push
push
aad
add
push
wbinvd
adc
nop
in
dec
cltd
scas
mov
and
cld
push
inc
xchg
jns
mov
mov
mov
sbb
je
icebp
mov
pop
dec
shr
sub
xchg
jnp
or
test
aam
mov
add
ja
movsl
dec
jle
popf
shrl
push
xor
pop
and
xor
arpl
xchg
pop
xor
out
ret
stc
fs
lods
fwait
jmp
push
and
popa
mov
inc
ja
pop
xor
or
push
test
adc
sti
inc
sarb
mov
jno
lds
or
mov
int
movsl
jno
mov
add
push
and
push
fdiv
sub
push
mov
mov
ja
loopne
mov
out
cs
lods
add
mov
jno
push
xlat
lods
test
fcoms
stos
jns
das
jo
jge
jbe
dec
pop
xlat
mov
aam
jne
dec
cmp
ljmp
nop
or
ret
fadds
lock
or
stos
negl
sbb
fmull
pop
pop
loop
jmp
inc
add
and
out
mov
mov
xor
jecxz
inc
les
pushf
pusha
mov
mov
movsb
bound
xchg
sbb
call
test
test
inc
xor
lods
insl
mov
jmp
pop
imul
mov
xchg
mov
pop
jl
inc
loope
into
aaa
inc
ss
push
mov
icebp
stos
in
imul
mov
sbb
xchg
call
subl
scas
mov
les
xchg
movsl
adc
stos
jmp
mov
out
xchg
inc
enter
test
in
jns
adc
fwait
popf
jb
xor
inc
sub
push
push
xor
mov
inc
add
add
jecxz
lcall
xor
aam
out
jnp
in
inc
pop
shrl
xor
xchg
add
ret
push
jb
negb
mov
pop
xchg
jnp
adc
jae
mov
cmpsb
inc
adc
outsl
inc
jmp
int
cmpsl
das
rorl
int3
push
jno
adc
sub
xchg
sti
sti
dec
scas
cli
push
mov
push
shlb
push
push
pop
js
cli
lea
in
rcl
xchg
clc
into
xor
repnz
loopne
popa
std
repz
int3
sbb
fdivrl
daa
test
lret
ret
xchg
pushf
cmp
out
mov
adc
clc
in
in
loope
jo
in
out
add
cld
xor
xchg
inc
xchg
cmpsb
ret
loopne
outsl
sbb
leave
das
inc
and
stc
aam
push
scas
out
inc
cld
neg
adc
ret
in
cmp
adc
movsl
bound
xor
in
mov
pop
aad
pop
push
mov
pop
fstps
push
test
and
push
mov
sti
pushw
xor
pusha
pop
fucomp
out
or
aad
push
out
out
in
stc
in
mov
insl
cld
punpckldq
int3
or
popf
sub
ja
flds
stos
imul
divl
sub
inc
cmp
xchg
mov
out
lds
std
cli
and
lret
xchg
popa
sbb
fisubl
xor
push
cmp
divl
sub
pop
test
aam
mov
pop
addr16
cmp
cld
stc
xchg
sub
jno
push
imul
dec
and
pop
mov
adc
jge
pop
rcll
mov
or
inc
out
lods
arpl
out
cltd
lcall
jae
sbb
xchg
cmp
imul
lcall
push
mov
and
divl
insl
stc
lea
cmp
fs
sub
notl
pop
fldcw
sbb
lock
fwait
inc
shl
xchg
fldenv
cmp
lret
shlb
lcall
adc
push
cmp
hlt
lahf
jnp
cli
jge
lret
dec
test
lahf
test
mov
dec
aas
push
test
mov
or
push
mov
add
pop
es
test
inc
lock
movsb
stos
mov
fistpl
dec
shr
jecxz
fwait
iret
scas
cmp
es
leave
cltd
mov
lods
jb
ficoms
in
and
enter
mov
xor
xor
dec
and
and
mull
lock
fs
and
add
pop
xchg
addr16
lds
test
xor
adc
pop
push
adcl
fwait
cli
loope
mov
std
rcr
test
and
or
cmp
stc
insb
mov
in
push
aam
mov
adc
adc
mov
pusha
adc
ja
push
add
sbb
dec
test
dec
pop
sub
out
jge
inc
lds
push
ret
mov
icebp
cmpb
and
jb
and
mov
lods
push
aas
fadds
xchg
pextrw
mov
mov
insb
pop
scas
in
rorb
mov
and
dec
rolb
mov
xor
add
sbb
sbb
test
cli
push
xchg
cmp
daa
sbb
test
lret
stos
jbe
nop
imul
aad
aas
je
and
pop
mov
cmpsb
adc
and
aam
ljmp
fcoms
pushf
in
fists
cmp
addr16
loopne
std
cmp
adc
nop
mov
lods
clc
lds
ret
out
dec
push
das
jae
cld
pop
cli
cmp
pusha
push
xchg
jno
testl
loop
xor
pop
daa
and
aaa
inc
movl
shll
inc
scas
cmp
loopne
xor
sar
adc
adc
cmc
cmpsb
sub
add
mov
xorl
popf
mov
push
sub
dec
and
and
mov
dec
packssdw
inc
adc
push
dec
xchg
rcll
pop
lods
xchg
mov
shr
jl
add
imul
and
mov
jae
icebp
lret
addr16
dec
je
js
push
xchg
mov
pop
add
lret
incl
cli
sbb
outsb
dec
sahf
sub
jle
scas
cld
sbb
enter
cmpsb
push
arpl
pop
jno
leave
je
loope
aaa
sub
int3
fnstcw
inc
inc
daa
sub
jmp
jecxz
pop
fmull
mov
imul
xor
loopne
add
stc
pop
aas
inc
adc
fiadds
cs
fcoms
outsl
mov
xchg
push
cmp
ficompl
mov
mov
and
mov
push
pop
push
mov
daa
andb
call
mov
in
je
mov
cmp
or
decl
test
idiv
aam
mov
loopne
or
lcall
outsl
dec
or
fsubl
sbb
aaa
pop
idiv
jno
xchg
clc
mov
scas
packuswb
stos
pusha
xchg
push
jmp
into
push
lea
sbb
mov
inc
popa
gs
movsb
ss
out
mov
mov
pop
lahf
mov
sub
loopne
insl
dec
mov
vshufps
cltd
shlb
popf
out
pushf
lcall
mov
les
xchg
scas
fidivrl
mov
inc
and
push
cmpl
dec
fadds
adc
mov
lods
and
pop
xlat
jge
add
arpl
push
pop
inc
inc
inc
xor
je
rcll
ss
mov
fiaddl
mov
cmp
psrlw
test
xchg
xchg
hlt
adc
in
sbb
dec
mov
xchg
movl
xchg
popf
mov
shl
ja
data16
add
cmp
out
js
lods
or
push
xchg
push
insl
es
les
mov
imul
scas
imul
xor
xchg
mov
rclb
push
xchg
dec
mov
and
sub
js
jnp
sbb
test
sbb
cmpsl
pop
outsb
sbb
shlb
movsl
decl
aam
cmc
inc
add
roll
imulb
fistps
cmp
popf
aad
pop
mov
adc
test
mov
inc
fstl
mov
pop
frndint
mov
xchg
pop
clc
mov
aas
lcall
sbb
inc
in
popf
push
sti
cmp
pusha
mov
mov
aam
loop
int
icebp
les
js
shrl
xchg
stc
add
cmp
push
js
cwtl
inc
xor
mov
fs
xchg
ljmp
rcl
jae
cmp
mov
sub
lods
notb
sti
imul
stos
dec
call
mov
gs
jns
pop
cmp
inc
sahf
pop
mov
popa
add
sbb
fildl
stos
jno
xchg
push
insl
jge
inc
inc
sarb
push
loopne
repz
icebp
das
sti
out
sti
inc
div
movsb
ja
jns
mov
ficompl
stc
xor
add
mov
add
dec
cmp
gs
jge
scas
cmc
or
mov
std
js
pop
push
aaa
and
pop
sarb
dec
xlat
arpl
inc
fbstp
add
push
pop
sti
pop
or
or
mov
mov
and
cmp
xchg
movsl
xchg
mov
daa
sub
mov
and
mov
aas
jp
je
mov
push
scas
out
jecxz
jg
aaa
int
test
xchg
cltd
mov
pop
cmp
cmp
dec
or
dec
add
loop
pop
mov
std
cwtl
mull
gs
sbb
test
push
inc
test
sti
call
sbb
popf
insb
out
shlb
mov
sbbb
int3
push
fistps
xor
out
pop
push
and
mov
cltd
ljmp
sbb
outsb
mov
shlb
mov
push
and
adc
mov
mov
inc
mov
mov
jg
dec
daa
sub
lcall
adcb
jne
xchg
sub
nop
test
xor
sbb
jg
testb
idivl
push
push
pop
xchg
jb
xor
inc
hlt
jle
hlt
cmp
pusha
pop
repz
mov
lret
out
repz
mov
mov
in
cmp
jnp
ret
sbb
cltd
aad
aaa
jb
in
cmp
inc
add
pushf
jmp
je
insl
cmp
add
jae
repz
sbb
and
sub
movsl
inc
in
in
jp
jp
mov
lahf
push
mov
and
pusha
insb
arpl
cmp
jo
nop
lods
out
sbb
xchg
mov
mov
pop
arpl
mov
push
mov
pop
push
out
xor
add
test
jbe
ret
sub
stc
call
adc
mov
ret
mov
ret
mov
lcall
and
je
and
jge
aad
add
pop
jns
jb
sub
xor
dec
push
dec
loopne
cmp
testl
sahf
xchg
dec
and
inc
jl
xchg
or
je
add
and
push
jnp
dec
jno
out
divl
pop
fld
dec
push
sub
jg
or
mov
or
and
add
sti
in
loope
xor
test
cwtl
es
les
lods
nop
enter
push
std
cmp
inc
xorb
mov
pusha
mov
or
cli
sub
push
pushl
ljmp
test
push
insl
push
popf
ds
mov
mov
and
cmpsl
lds
in
ja
sub
arpl
add
data16
mov
insb
pop
es
cmc
in
out
jo
xchg
inc
push
das
ljmp
push
cmp
nop
mov
mov
cs
fsubrs
and
xlat
add
inc
ret
mov
mov
insl
sahf
ljmp
sbb
scas
adc
adc
dec
or
mov
lock
add
fwait
push
mov
pop
cmpsb
pusha
cmp
mov
ret
sbb
std
popf
pop
div
xor
les
mov
in
jmp
jb
outsb
popa
mov
adc
js
js
inc
aas
xlat
movl
push
ds
push
sti
call
std
xor
divl
jnp
mov
pop
jbe
in
int3
ja
mov
push
xor
aas
sub
movsl
xor
js
mov
jl
int
pop
or
mov
xchg
scas
xor
into
xchg
jmp
mov
cmpsb
pop
sub
push
mov
sub
in
cld
add
xor
rcrl
push
repnz
jne
fcoml
and
or
fimull
and
outsl
xchg
shrl
and
in
cwtl
sub
jns
xchg
adc
ret
out
into
negb
jae
add
int
adc
inc
sti
ret
in
ss
int3
jae
daa
mov
mov
sub
pop
mov
cmpsb
insb
jb
stos
add
inc
adcb
orb
mov
dec
pop
jge
shll
mov
inc
loop
nop
insl
cs
jne
das
xchg
jno
sarl
jg
push
gs
iret
loop
pop
icebp
and
mov
lods
push
mov
mov
sub
leave
adc
mov
arpl
add
xchg
fdivrp
push
cmpsb
mov
fldt
cltd
jnp
enter
fildl
mov
sbb
fisttps
mov
out
adc
mov
cld
out
mov
movsb
cmc
push
add
shl
jo
adc
sub
lahf
add
pop
lods
mov
outsl
or
daa
xchg
or
fistps
xor
sbb
cmp
int3
popf
mov
ljmp
test
sub
popa
cmp
pushf
mov
ret
fmuls
mov
jo
xchg
sahf
inc
data16
roll
dec
dec
mov
lahf
divl
xchg
jae
movsb
adc
ds
pop
seto
sub
fistl
icebp
cmp
xorb
sbbb
fwait
js
pusha
push
shrl
fdiv
std
sub
scas
xchg
push
cmp
ret
addl
push
mov
add
cmp
push
movsb
in
jmp
xchg
inc
notl
adc
or
int
dec
lret
jge
adc
cli
das
pop
out
inc
js
jbe
push
dec
out
ror
and
and
adc
and
clc
jno
int
scas
jnp
jge
aam
mov
add
pop
sbb
mulb
fcoms
adc
lock
jge
and
xchg
inc
leave
in
mov
cwtl
mov
xchg
dec
cmp
dec
mov
hlt
xchg
cmp
adc
orl
pop
fmul
std
inc
xor
sub
pusha
das
mov
mov
out
fsubr
push
adc
push
adc
mov
clc
je
aam
test
mov
sbb
jnp
add
clc
jno
cmp
bnd
in
pop
js
sub
repz
bnd
add
sbb
aaa
inc
lahf
adc
add
jno
ss
jecxz
mov
mov
inc
jns
pop
movsb
lret
repz
xchg
cltd
jnp
xchg
xchg
dec
adc
out
xchg
rorb
popf
mov
pop
fucom
or
mov
mov
mov
cli
in
bound
xor
arpl
push
leave
push
mov
lret
rol
addb
cmc
jmp
sti
cmpsb
jmp
or
stos
mov
sbb
dec
push
ret
or
shrb
sub
in
jne
cld
cmp
je
lds
dec
enter
and
imul
lods
pop
das
inc
xchg
jl
sahf
xchg
rcl
in
and
addr16
idivl
ljmp
sub
jne
fidivrl
cwtl
xchg
ss
add
ja
cmc
add
lahf
push
cmpsb
mov
lds
lea
pusha
ljmp
sti
mov
clc
loop,pt
iret
jp
test
dec
fwait
aaa
cmp
outsl
in
loop
mov
nop
adc
mov
dec
push
pushl
pop
jne
xchg
jmp
adc
fwait
pop
push
fisubs
pop
push
scas
sub
into
xor
das
test
cmpsb
scas
pop
clc
idivb
push
fs
jl
andb
std
stos
icebp
cs
and
mov
hlt
and
push
call
fldl
push
push
test
sub
aam
and
cmc
push
and
or
test
push
out
loope
cmpsb
fwait
dec
mov
mov
lea
xor
xchg
add
sbb
popf
test
shlb
fdivrl
rcrl
stos
inc
leave
cmovno
push
lahf
inc
mov
insb
jnp
test
mov
push
test
lock
inc
push
sbb
jg
bnd
adc
pop
ficomps
sbb
or
jmp
add
int
push
push
int3
push
popa
sbb
fidivrs
jmp
pushf
push
lods
pop
xchg
fisubs
or
dec
jb
cmp
xor
nop
aaa
lock
sbb
jl
bound
xor
in
add
stos
mov
xchg
xchg
outsb
cli
jbe
pop
add
roll
mov
shrl
and
jae
mov
jecxz
xor
daa
pop
lcall
add
pop
fadds
andl
imull
push
inc
subb
xchg
clc
lcall
subl
mov
cmp
lret
ja
sub
je
jb
aad
inc
cmp
pop
lcall
jo
roll
loopne
xchg
push
jnp
pop
shrb
xor
jae
and
subb
sarl
jp
and
add
lret
pop
scas
pop
mov
inc
out
outsl
mov
negl
mov
lds
shll
mov
sbb
lret
adc
aad
lret
sub
jnp
pop
ret
mov
aam
dec
in
sub
mov
push
sub
loope
xor
inc
shrl
xchg
jmp
mov
shl
lods
xor
pop
mov
fldenv
jo
fnstcw
int
push
shl
push
lret
ja
ss
sbbb
pop
arpl
cwtl
mov
mov
pop
dec
cs
pop
addr16
push
sti
jnp
enter
jbe
mov
aam
mov
lea
test
je
movsb
xor
adc
mov
fwait
pop
mov
mov
adc
lcall
out
mov
xchg
cs
cmp
xchg
or
test
insl
xor
push
loop
xchg
mov
es
sbb
xlat
and
ret
push
mov
loopne
into
push
ds
movsl
push
xor
xchg
push
enter
mov
ljmp
mov
test
or
clc
out
jns
xor
lret
rcrb
mov
fdivrl
daa
adc
scas
add
pop
mov
or
push
adc
mov
adc
loope
add
ficomps
mov
hlt
adc
lcall
outsb
loop
sub
fisubrl
icebp
push
cmc
or
and
mov
ret
repnz
ljmp
imulb
push
xchg
inc
mov
inc
shlb
outsb
fwait
ss
bound
adc
xchg
mov
xor
popf
test
pop
add
mov
xchg
jbe
or
out
ret
jno
out
cmovp
jo
movsl
fucomp
in
test
jecxz
mov
xchg
inc
jmp
out
dec
xlat
dec
push
pop
pop
sub
pop
sub
inc
loop
cmpsb
and
pop
rcr
aaa
sbb
pushf
je
sbb
fidivrs
dec
mov
lods
xchg
rcr
jg
int
call
daa
and
or
mov
sahf
leave
out
int
inc
ljmp
and
cli
test
cmp
cmpsb
jecxz
ret
push
add
inc
hlt
int
fnsave
xor
adc
or
and
sahf
add
cmp
arpl
mov
movsb
icebp
into
cwtl
je
xchg
sbb
div
mov
js
inc
pop
mov
fwait
lods
mov
stos
add
mov
mov
xchg
lret
enter
jmp
in
sbb
push
dec
sbb
loope
aaa
shll
push
fsts
enter
into
adc
lds
jae
stos
push
add
or
mov
imulb
aaa
int
cmpsb
push
mov
mov
ljmp
cli
adc
mov
and
dec
ret
clc
jns
adc
inc
push
and
lret
shll
cmpb
mov
jmp
test
mov
xor
jl
cld
mov
mulb
pop
mov
cld
fidivl
lea
dec
outsl
cmpsl
and
mov
rolb
mov
xchg
popf
xlat
or
loope
fnstcw
movsb
push
and
jo
add
cmp
insb
dec
mov
push
nop
int
test
xchg
test
jmp
jle
lods
mov
pop
mov
cmp
test
js
pop
movsl
rcl
jg
and
cmp
mov
push
fcompl
jne
cwtl
sbb
insb
and
cwtl
imul
add
jne
xchg
xchg
pop
int3
lock
push
cmpb
sbb
data16
iret
mov
cltd
dec
out
mov
mov
lcall
cli
es
pop
push
push
ds
js
adc
dec
cmp
cmp
stos
jmp
sarl
and
mov
out
dec
or
int
mov
jmp
cmp
in
aad
pop
cltd
in
mov
ljmp
dec
pop
fmuls
mov
adc
inc
es
pusha
and
lcall
push
sub
push
mov
jp
push
rorl
inc
push
and
test
dec
lcall
xchg
movsl
dec
insl
bound
push
in
sahf
aam
sub
jp
orl
dec
add
cmc
jns
in
mov
mov
add
fs
and
rcll
jmp
sub
fwait
mov
push
inc
or
pop
das
cmp
imul
clc
out
clc
and
add
and
fwait
dec
inc
adc
push
or
dec
mov
sub
ljmp
loope
dec
flds
aaa
sahf
sbb
jns
and
nop
scas
mov
pusha
cmpb
cmp
mov
push
xchg
loop
popa
iret
add
xchg
push
mov
push
cmpsb
mov
pop
hlt
cmp
scas
xor
subb
and
and
je
xorl
inc
jo
movsb
dec
movsl
jo
mov
pop
adc
mov
aad
xchg
dec
xchg
test
mov
inc
lods
cmp
hlt
or
nop
cmpsb
jp
loope
cs
cmp
inc
repnz
inc
push
mov
cmp
pop
out
inc
xor
pop
mov
sbb
or
cmc
cltd
loopne
sub
int
ja
push
ja
mov
jnp
push
lods
or
push
out
stc
pushf
xor
pop
lret
das
mov
shl
repnz
xor
repnz
xor
jg
fdiv
movsl
xchg
fnstcw
sbb
dec
sti
es
push
push
test
aam
add
test
mov
xor
xchg
adc
inc
clc
repnz
lret
fbld
pop
mov
pop
orl
push
mov
aas
push
stos
je
and
jmp
xlat
or
sahf
popf
cld
mov
aad
lahf
add
and
shlb
stc
xchg
mov
inc
mov
fisttpll
cmp
pop
jl
repz
jne
bound
fwait
imul
push
out
cmp
xor
sbb
dec
repz
shl
sbb
lods
pusha
bound
out
jo
ja
jno
out
and
jb
lds
inc
dec
les
xor
lahf
bnd
adc
push
pop
mov
and
and
lahf
xor
mov
insb
jo
subb
mov
lds
shlb
xchg
sahf
push
in
mov
stos
pop
das
into
inc
popf
fstps
test
pop
push
cwtl
addr16
inc
pop
sti
cli
mov
jecxz
stos
cmpsb
xchg
adc
mov
sbb
pop
mov
jo
lds
pushf
sarb
mov
pop
sub
ja
subl
and
pop
stos
dec
aam
mov
sbb
jo
movsb
je
cmpl
je
mov
mov
ljmp
jb
mov
out
loope
pop
lcall
int3
jb
repnz
adc
loop
stos
lret
fimull
ja
fprem1
jae
sti
xor
fnstenv
in
jne
aam
or
sti
mov
mov
jmp
cmp
ret
add
pop
daa
jae
and
add
imul
dec
jge
jecxz
add
hlt
ffree
fdivrp
adc
push
out
out
xor
mov
fnstenv
xor
rorl
adc
loopne
gs
repnz
out
mov
push
mov
pop
jnp
call
cwtl
mov
push
xchg
pop
and
push
mov
pop
mov
inc
sbb
and
addl
inc
leave
push
dec
test
mov
jo
and
sub
addr16
cs
xor
int
movl
subb
dec
cltd
add
sub
fisubs
ret
lods
shll
mov
test
mov
ljmp
in
out
js
fistl
mov
inc
aam
aad
pushf
pop
sbb
orb
and
mov
cli
pop
cwtl
aad
iret
pop
pop
sub
outsl
mov
dec
sub
jmp
jnp
or
lds
roll
sub
pop
popf
jp
mov
and
lock
pop
aad
mov
mov
inc
loop
aas
cwtl
repz
xchg
or
jo
push
pop
sub
jle
xchg
fstpt
prefetch
or
fcomps
inc
cltd
mov
loop
loope
mov
je
inc
cltd
dec
imull
mov
dec
pop
jb
cmp
out
in
lods
outsl
sti
push
std
jge
mov
xor
adc
lods
push
push
scas
loope
popf
sahf
out
jne
dec
stc
andb
sbb
clc
cmc
scas
test
jne
repz
loope
inc
add
mov
shll
in
in
shl
jbe
stos
cltd
adc
outsb
outsl
in
jp
xor
or
push
test
out
jno
dec
fwait
mov
jl
lret
jo
cs
xor
faddl
imul
jl
xchg
testb
lret
push
test
flds
dec
mov
dec
mov
les
mov
push
push
dec
pop
jns
jle
ficompl
adc
jnp
mov
inc
loope
movsl
fwait
xor
xchg
sbb
mov
push
jns
push
inc
ja
scas
inc
and
dec
adc
arpl
pusha
aad
outsl
imul
jl
fists
or
imul
add
outsb
ljmp
sub
mov
dec
pop
mov
add
fdivrp
lret
sub
jle
and
jmp
in
loope
mov
xchg
sub
cmp
mov
dec
imul
pop
das
insl
and
loop
sbb
sbb
test
mov
mov
test
pop
jecxz
lret
cwtl
pop
add
mov
les
inc
movb
pop
call
lea
or
jbe
subl
cld
add
jns
pop
movsl
ja
jge
pop
xor
add
adcl
mov
xchg
loope
xor
dec
cld
in
mov
mov
pop
xchg
out
imul
cmp
lods
and
mov
mov
mov
mov
addb
ja
inc
dec
cwtl
js
or
rol
mov
iret
les
push
xor
add
pop
dec
sbb
jae
in
mov
fsubs
divl
sub
dec
ljmp
cmpsl
pop
add
jge
lea
rorl
sbbb
rorl
ucomiss
sub
mov
repnz
push
push
outsl
loopne
andl
gs
decb
repnz
dec
xchg
xchg
push
pop
push
sahf
ret
clc
inc
cmp
std
gs
or
or
rcrl
xchg
and
leave
sahf
cwtl
out
shll
xchg
xchg
lods
nop
out
jp
mov
push
mov
and
add
loop
xchg
push
ret
sub
pop
xlat
popa
es
jne
sahf
test
or
bound
sbb
sahf
push
loop
jbe
test
stos
ss
int
pop
std
ja
add
sti
sub
push
cmp
cmpb
mov
mov
data16
testl
les
rcrl
in
cmp
fsubs
pop
sub
ds
fwait
nop
rclb
adc
shrl
jmp
adc
aam
cmp
push
inc
xor
cld
movb
lret
dec
testl
movsl
loope
mov
mov
lods
sbb
push
imul
mov
add
cmp
call
sub
add
xchg
fsubl
iret
out
lcall
iret
psllw
or
test
dec
sbb
dec
and
or
mov
and
xor
or
mov
sub
jnp
mov
pop
clc
pushf
cwtl
dec
inc
cmc
movsb
aam
rorl
push
shlb
push
mov
fstps
xor
dec
neg
mov
pop
sahf
jns
loope
or
jmp
cltd
add
mov
sbb
dec
cmc
push
aad
jg
mov
ljmp
cmp
sahf
jle
push
in
cmpsb
jb
sbb
repnz
inc
sub
pop
or
push
stc
pop
lret
add
cmpsb
push
scas
push
imulb
jo
pop
stc
sbb
push
xchg
pusha
aad
lcall
push
lahf
push
jo
mov
in
scas
test
cmpsb
lock
push
imul
aad
cmovl
outsl
leave
in
dec
pushf
out
push
jl
loop
movsl
jne
ljmp
out
pushf
push
dec
ror
int3
mov
dec
bound
cltd
sub
mov
mov
pop
nop
xor
add
inc
out
adc
lock
call
push
push
seta
xor
stc
adc
mov
add
pop
divb
popa
lcall
mov
mov
inc
cld
cmp
vpminsw
call
cli
fbld
inc
sbb
sub
scas
inc
cli
adc
nop
or
scas
sub
xor
out
cmp
xor
in
inc
mov
stos
ds
cmp
sbb
push
aam
mov
pop
fists
jns
or
in
lock
lods
in
mov
loop
call
jo
pop
mov
shl
add
out
movsl
pushl
or
xlat
shll
jge
xrelease
sub
lods
cmp
iret
in
in
lahf
dec
push
xorl
jge
pusha
imul
bound
ret
repnz
ret
dec
fsts
jl
mov
bound
and
jp
out
shll
dec
nop
dec
and
gs
mov
repnz
jnp
push
lods
test
int
out
jle
xlat
adc
into
sbb
insl
sub
and
int3
pop
jnp
out
stos
xchg
dec
jo
cmc
sub
push
mov
mov
mov
mov
add
or
outsb
mov
stos
aaa
dec
add
sbb
ss
int3
mov
stc
fmuls
xlat
movl
jecxz
jle
pop
cmc
jg
outsb
inc
inc
test
dec
fsubrl
dec
lret
loopne
loop
xor
mov
mov
icebp
std
fsubs
xchg
iret
jne
js
xchg
dec
push
std
lret
out
imul
sub
pusha
dec
mov
dec
loope
fmul
ss
mov
inc
and
stc
flds
scas
mov
insb
mov
lock
stos
scas
cmpsb
dec
add
sarl
pop
push
or
int
inc
out
sub
mulb
mov
inc
vpminub
lock
inc
aas
ss
in
cmp
add
add
mov
outsb
in
sbb
sub
mov
and
ret
mov
cmpl
adc
in
subl
mov
sub
in
jnp
out
push
adc
gs
push
or
jl
xor
jp
mov
enter
cld
out
les
loop
xor
inc
xchg
stos
or
push
test
jecxz
mov
push
or
adc
inc
addr16
mov
mov
gs
and
cmp
pop
inc
xchg
push
add
or
iret
dec
lret
or
arpl
push
add
loop
insl
imulb
popf
fcompl
sarb
hlt
xor
inc
loop
ss
fcomps
add
jbe
in
das
xchg
arpl
jae
hlt
push
stc
mov
aam
add
adc
pop
insb
mov
inc
cmp
inc
adc
out
out
xor
cli
or
icebp
in
mov
int3
sbb
add
and
xchg
mov
adc
add
dec
enter
push
cld
xchg
lret
xor
sbb
cmp
or
pop
dec
or
xchg
and
cwtl
jbe
fs
fistps
and
push
xor
orb
mov
arpl
jg
dec
jp
roll
fcompl
push
adc
cmp
adc
les
mov
mov
dec
xchg
bound
std
mov
in
jnp
loop
push
cmpsl
jmp
repnz
movsb
pop
testb
repz
ret
jns
xlat
popa
and
idivl
in
outsb
dec
cmp
and
fisttpl
pop
jp
xor
pushf
lock
inc
add
mov
cmpsl
in
inc
push
mov
lds
mov
xchg
mov
sbb
pop
cmp
push
mov
jg
adc
or
xchg
push
mov
and
jecxz
and
mov
inc
hlt
adc
xchg
mov
jb
jmp
mov
jno
ret
and
pextrw
pop
or
pop
jbe
mov
push
mov
jne
std
dec
xor
dec
out
lahf
pop
fsts
xor
int3
cmp
lods
insl
xchg
stos
cmp
shrb
fsubrs
mov
cld
call
jne
loope
mov
fmul
and
cmpsb
sbbb
push
icebp
std
dec
rclb
incb
fsubs
lea
mov
std
arpl
xchg
ss
xor
pop
insb
mov
fwait
sub
xchg
out
inc
rcrb
mov
das
mov
jae
dec
jmp
mov
shll
adc
sbb
stc
outsl
ret
bnd
jne
pop
repz
xor
outsb
mov
push
mov
add
imul
push
adc
push
and
sub
adc
lret
mov
inc
es
or
sahf
cmp
test
jb
loope
add
add
int3
mov
dec
nop
movsb
jae
pushf
mov
or
jmp
mov
dec
jns
shlb
adc
hlt
mov
movsl
std
stos
pop
jmp
lock
jg
adc
add
and
jg
repnz
into
cmp
daa
lcall
in
das
out
mov
nop
cmc
mov
mov
popf
and
jl
push
and
sbb
mov
scas
jae
stc
insl
push
add
sub
sbb
pop
int3
movsb
jo
sub
cmp
loope
loop
das
sti
sbb
jmp
sbb
mov
pop
sub
sbb
lea
cmc
cwtl
loop
xchg
cmovge
lcall
pop
orb
push
xor
cmp
add
inc
mov
or
mov
xor
loop
out
les
and
leave
bound
push
ds
push
xor
std
fisubrl
cmp
dec
mov
pop
jp
xor
nop
adc
addl
dec
rcrl
loopne
mov
ljmp
fldenv
lea
lret
xor
or
mov
sub
adc
mov
adc
lods
and
leave
bound
push
jle
ljmp
inc
adc
push
or
rol
jo
mov
in
adc
xchg
push
mov
cs
mov
fildll
addr16
dec
in
dec
out
mov
xchg
std
fiadds
in
out
and
or
icebp
mov
or
insl
mov
inc
out
xorl
xor
or
fwait
xchg
adc
fsubrl
adc
and
out
ds
push
popf
adc
ljmp
cmpsb
mov
loop
xor
and
pop
filds
les
pop
push
add
xor
in
decb
sub
cmp
dec
int
nop
mov
iret
into
mov
jb
add
push
cmp
das
fwait
sbb
fbstp
adcb
pusha
adc
stc
int3
ljmp
xor
repnz
pushw
lods
add
adc
xchg
adc
aas
mov
mulb
stos
jl
rcrb
jbe
xchg
dec
xchg
movb
sub
jmp
into
pop
lods
adc
pop
insb
pop
push
jbe
ret
add
push
int3
cmp
movhps
aas
mov
dec
cmc
mov
movsb
lods
out
and
pop
fdiv
dec
push
fsub
mov
shrl
inc
sub
mov
into
adc
push
ror
daa
inc
lods
into
push
sbb
fldcw
hlt
xor
xlat
js
iret
mov
xlat
jle
xchg
mov
push
shll
scas
in
lods
mov
or
cmp
hlt
dec
xchg
cld
mov
dec
notl
jmp
mov
mov
push
pop
loop
jb
rorl
push
out
jl
xchg
dec
or
loope
jbe
fcmovnu
add
xor
pop
jp
mov
dec
ljmp
sub
das
jmp
imul
jbe
in
call
hlt
in
outsl
adc
push
push
and
sbb
pop
jle
push
imul
jp
std
mov
jb
mov
inc
push
clc
xor
mov
cld
dec
lods
or
and
mov
jnp
out
mov
fnsave
stos
adc
adc
or
lea
repz
enter
xor
in
into
jmp
lahf
push
fistpl
inc
inc
mov
xchg
test
mov
fisttps
in
pop
les
jmp
mov
loope
sub
dec
pusha
push
pop
jb
loope
out
sub
insl
jnp
or
dec
hlt
lahf
mov
insb
daa
cmpsl
mov
add
adc
sbb
popa
cwtl
xchg
negl
addr16
mov
mov
inc
shr
add
sbb
cmp
cli
add
out
xchg
lea
jge
inc
mov
fmuls
push
into
or
xchg
push
add
jnp
leave
scas
push
popa
push
sub
outsl
fidivl
jnp
push
and
cmp
xchg
inc
and
xor
adc
addb
xchg
or
stos
or
outsl
and
subb
sahf
jge
or
xor
or
pusha
out
repz
push
sbb
mov
push
iret
push
or
addr16
mov
pop
xchg
push
push
mov
ja
fidivrl
test
sar
dec
jl
cld
jge
add
cmp
shrb
xlat
mov
jno
push
loopne
out
pop
adcl
movb
xorb
jne
mov
add
aas
push
out
push
sub
add
jb
shl
fsubrs
jmp
js
xor
mov
adc
data16
add
add
adc
and
aas
cwtl
push
jmp
sbb
push
loop
das
mov
andb
jl
mov
cltd
or
xchg
xlat
decb
notb
out
in
mov
and
cmpsl
in
fcom
sub
jb
fldt
sub
lods
ror
adc
push
cs
in
incl
fmuls
pop
shll
cmp
lahf
flds
cltd
cmp
cmp
sahf
loop
in
mov
sbb
lods
lea
xor
add
fildll
popa
or
xchg
adc
std
or
insb
ficompl
sub
or
sbb
aad
xchg
cmpsb
mov
lret
mov
mov
or
pop
pop
pop
jb
and
frstor
xchg
std
ficoms
sub
iret
roll
cmpsb
pop
or
pusha
icebp
das
into
mov
add
or
sbb
bound
xor
xlat
repnz
jno
mov
sbb
test
xor
push
cmc
xor
out
xchg
leave
mov
sbb
ljmp
xchg
or
fimuls
aaa
pop
hlt
dec
inc
loope
cmp
outsl
jne
xlat
adc
insb
fcompl
xchg
movsb
loop
and
push
inc
stos
lods
cmp
jle
xor
adc
outsb
loop
mov
cmp
cmp
mov
mov
scas
cmp
xchg
dec
push
cmp
aad
scas
jno
xor
int3
push
scas
sub
or
pushf
rcrb
cltd
repz
out
fidivl
sbb
adc
enter
mov
dec
cmc
pop
jnp
xchg
das
mov
sub
aaa
test
mov
add
mov
xor
inc
pop
cmp
lret
in
in
and
push
das
mov
sub
andps
mov
or
call
add
mov
pop
mov
push
pop
xchg
ret
push
idivl
mov
in
xlat
add
outsl
cld
push
shll
ss
mov
cld
insl
nop
repz
sbb
and
std
in
hlt
or
inc
mov
mov
jo
fsubrs
or
xchg
add
mov
mov
mov
in
popf
adc
lret
ror
sti
pop
dec
pusha
xchg
ds
add
sti
lahf
push
dec
cmp
and
fbstp
inc
jo
pushf
push
aas
sub
xchg
sahf
xchg
pop
in
jle
jmp
xor
lods
fnstsw
pop
lret
xchg
jmp
ss
adc
test
outsb
add
mov
mov
and
imul
fs
sahf
pop
les
mov
mov
mov
in
jno
adc
xchg
fsubrs
and
addb
add
mov
fisubl
mov
scas
movsl
cmpsb
ret
mov
mov
dec
or
inc
jne
lea
xchg
or
sub
fwait
mov
movsl
jo
out
aam
sbb
fnstsw
inc
mov
cmp
out
jnp
xchg
xor
outsb
dec
nop
cwtl
xor
and
psubusb
sbb
lcall
pop
mov
add
test
es
das
in
loop
xor
and
insb
ja
jns
pop
mov
mov
test
data16
rep
pop
and
sahf
pop
mov
xchg
cwtl
add
xchg
push
xor
aaa
add
or
cs
pop
lcall
testl
cmc
or
cli
or
movsb
sub
push
adc
mov
or
xor
js
stos
sti
push
mov
inc
cmp
addr16
divb
sbb
mov
jae
arpl
mov
or
cs
jl
jae
sahf
push
and
hlt
adc
xchg
push
sub
sbb
cmp
sbb
shl
int
mov
fcompl
and
pop
sub
xor
cld
jae
or
dec
xchg
outsb
outsb
xchg
data16
sbb
out
cmp
fldenv
mov
gs
mov
in
xchg
cld
out
shll
push
xchg
rolb
inc
cld
xchg
ss
add
test
jo
pop
cs
out
adc
or
xchg
and
mov
or
stos
xor
mov
pop
bound
loopne
je
imul
cmpb
push
out
mov
ljmp
xor
lods
jae
sub
cmp
dec
mov
mov
and
or
mov
add
mov
sub
stc
sub
outsb
pop
add
leave
ja
gs
jnp
nop
inc
gs
pop
mov
out
mov
outsb
cmpsb
std
or
sub
mov
lods
mov
inc
pop
jp
hlt
xchg
jmp
fstps
movsl
sub
add
pop
cmp
xor
mov
cmp
lods
daa
sbb
aad
bound
push
lds
mov
mov
test
mov
frstor
and
cwtl
outsb
and
xlat
rorl
fwait
shlb
mov
mov
mov
push
xchg
in
aam
sub
ret
add
pop
jns
pop
sbb
adc
xchg
addb
inc
mov
mov
push
sbb
xor
outsb
out
fmull
and
pop
inc
sub
xchg
repnz
cwtl
sti
cmp
xchg
movsb
mov
add
popa
sbb
fisttpl
xchg
orb
mov
ss
test
sti
dec
popa
repz
loopne
sbb
icebp
insb
dec
pop
pop
pop
mov
mov
and
mov
rorl
jecxz
dec
rcrb
mov
xor
loop
jl
addl
movups
add
jnp
jb
dec
fisttpl
stc
and
sub
or
in
shrb
or
imul
data16
outsb
adc
ret
and
xrelease
or
jecxz
or
test
push
mov
sub
cli
pop
pop
ljmp
pusha
mov
push
pop
daa
xchg
and
inc
fwait
sbb
dec
mov
mov
fimull
mov
imul
and
jno
pop
nop
divb
jno
inc
jbe
adc
and
mov
pop
test
mov
ficoms
sub
dec
pop
pop
cld
rcr
push
add
adc
xchg
pop
sub
fwait
loopne
inc
dec
mov
mov
enter
cmpl
mov
stc
in
inc
xor
addl
mov
or
in
pop
lahf
and
in
mov
in
xor
lods
mov
push
add
mov
cmp
push
data16
mov
mov
pop
ret
dec
out
das
cs
jl
pop
xchg
dec
orb
dec
fcoms
scas
scas
jns
mov
add
dec
push
jg
sbb
inc
enter
mov
fprem1
cwtl
jmp
mov
aas
int
or
jle
lods
pop
jo
push
cli
and
cmc
mov
pop
insb
and
addr16
bound
jge
jnp
push
add
push
mov
int3
add
ja
add
mov
inc
mov
loopne,pt
jne
dec
inc
xlat
lods
mov
lds
xchg
mov
mov
xor
lea
push
cltd
stos
mov
adc
pop
sti
push
cli
in
add
or
int3
lret
clc
clc
unpcklps
add
and
cmpsb
sbbl
test
imul
xchg
notl
std
sbb
adc
addr16
idiv
loop
push
lock
inc
cmp
lea
int3
pop
pop
cmp
call
jae
dec
or
mov
push
pop
cwtl
xchg
sahf
mov
test
loopne
aad
sub
fdiv
ret
movsb
push
dec
adc
xor
lock
insb
into
or
push
mov
or
std
insl
sub
cwtl
lds
pusha
xrelease
mov
outsb
pushf
shrl
js
pusha
add
adcl
mov
rorb
xchg
mov
lods
xor
pusha
or
jns
popa
cmp
dec
aam
sbb
cld
adcb
dec
jecxz
jmp
iret
and
mov
in
pushf
aas
mov
out
mov
aas
sub
push
loopne
mov
outsl
fnstsw
je
push
outsl
push
sbbb
scas
mov
ret
movsb
push
insl
dec
mov
es
imul
popa
and
mov
loope
imul
cmp
loope
enter
mov
jne
push
out
adc
std
cmp
adc
xor
cmp
das
or
or
inc
mov
inc
pop
negb
popa
mov
fcoml
adc
inc
inc
push
jecxz
cltd
addr16
lock
mov
mov
adc
add
xchg
sub
mov
inc
clc
sub
jno
stos
sub
mov
out
lods
fs
movl
pop
mov
cmp
mov
sbb
mov
into
inc
dec
sub
adc
das
idiv
mov
push
neg
dec
mov
notb
fistpl
cwtl
jns
lret
inc
out
aas
ds
adc
pop
push
or
xor
sub
fnstenv
call
loopne
mov
idiv
push
das
mov
sbb
into
sahf
pop
call
imul
popf
scas
js
ljmp
add
ljmp
int
mov
ds
loop
mov
pop
sti
cmpsb
sub
xlat
test
dec
inc
shr
cwtl
fsts
jmp
push
and
sub
xchg
xchg
and
mov
cmpb
int
lret
jle
fs
aaa
push
nop
mov
and
popa
adc
in
push
cwtl
sbb
add
sbb
push
icebp
loope
test
adc
lcall
je
cmp
icebp
movsl
insb
xchg
jae
je
or
out
jecxz
push
leave
or
test
stos
xchg
dec
daa
jnp
pop
out
add
xor
jge
mov
rorl
lret
frstor
jmp
fs
adc
arpl
mov
push
and
shlb
adc
xorb
add
sbb
lea
ficoml
cmp
pop
test
or
mov
sbb
push
pop
out
outsl
fwait
popf
jbe
jne
rorl
push
je
fdivs
inc
sbb
and
ret
imul
push
jo
stos
inc
lcall
mov
int
adc
cmpsb
mov
imul
pop
stos
je
out
ja
in
cwtl
push
cltd
idivb
es
or
popa
jno
push
adc
fwait
leave
ja
mov
xchg
inc
mov
rcll
mov
cld
xchg
dec
cmc
test
mov
imul
cmpsl
xor
inc
int
movsl
adc
add
sub
sbb
out
test
jp
inc
ja
in
int
cmp
mov
jne
adc
push
pop
fstps
out
pop
inc
dec
test
mov
push
test
std
push
or
mov
imul
outsb
movsb
stc
jae
sub
push
pop
cmpsb
mov
repz
add
fsubrs
and
add
into
and
mov
xchg
add
pushf
cwtl
roll
out
decb
push
dec
jae
sub
sub
and
and
clc
sub
arpl
loope
push
hlt
adc
pushf
xchg
inc
out
fwait
ret
mov
or
pop
adc
cmp
ss
dec
push
jbe
loop
push
jl
sbb
or
ja
xchg
adc
cmp
mov
rorb
mov
sahf
test
mov
pop
ljmp
add
mov
or
xchg
sub
xor
loopne
push
popa
inc
rorl
repz
mov
add
lods
push
nop
gs
popa
inc
mov
ja
cld
outsl
xchg
push
lahf
pop
jle
push
pop
xchg
adc
sbb
hlt
add
insb
cltd
add
jne
ret
and
sub
ret
in
mov
dec
jg
clc
jno
xchg
aam
xchg
js
and
pop
adc
imul
rcrl
je
pop
sti
dec
add
je
mov
orl
adc
pushf
sbb
mov
adc
xor
outsl
shll
pushf
xchg
test
frstor
mull
pop
rcll
rcrl
imul
adc
push
icebp
stc
pop
cs
push
xor
negl
enter
xchg
fimull
dec
mov
mov
fbstp
xor
xchg
push
mov
mov
adc
call
into
push
in
das
push
call
pop
sbb
imul
lods
popa
mov
xchg
scas
cmp
jno
xor
dec
icebp
punpckhbw
inc
mov
andb
subb
mov
mov
jecxz
jp
pop
fsub
add
xchg
sahf
aaa
xor
cli
pop
adc
mov
xchg
hlt
mov
sub
and
xor
inc
sahf
clc
push
mov
popf
sub
push
sbb
pop
cmc
adc
pop
jecxz
mov
xchg
fwait
nop
shll
gs
je
enter
cmp
cmp
sub
imul
ret
das
andl
sbb
dec
and
js
sbb
ret
sahf
xor
mov
and
ja
fstl
pushf
pop
sub
shll
test
add
sub
push
je
in
das
pop
cltd
shr
popa
in
xchg
out
test
inc
iret
fnstenv
test
add
adc
popf
ss
jl
push
push
in
mov
mov
mov
cmp
cmpsb
mov
jae
xchg
cli
dec
test
into
jns
sub
icebp
jle
xor
push
clc
faddl
push
ds
push
cmp
dec
clc
cmpxchg
push
js
xchg
lea
dec
mov
fldl
ficoms
popa
inc
push
fucom
shll
aam
stos
les
test
xchg
dec
push
sbb
xor
test
and
rorb
or
add
add
xchg
les
addl
inc
test
xor
int
xchg
jnp
pop
ret
cmc
add
pop
into
out
adc
mov
es
rolb
cli
push
xlat
sbb
dec
stos
addr16
sub
cmp
out
ret
pop
push
shlb
fcompl
mov
sub
add
das
ret
sbbb
adc
dec
insl
shll
and
shlb
shll
mov
sbb
rcr
out
loopne
ficomps
sub
pusha
daa
movsb
or
jmp
js
notl
cmc
or
out
jge
fistpll
adc
xchg
xchg
fidivl
insb
movsl
sti
inc
mov
xchg
das
xlat
jnp
outsb
pop
or
inc
push
in
imul
cmpsl
dec
into
or
or
push
scas
add
jae
cmpsb
repz
inc
js
and
incb
push
pop
pop
in
mov
inc
nop
push
pop
orl
popl
movsl
cmc
icebp
push
cld
sub
jae
mov
pop
std
mov
inc
mov
jle
xchg
lcall
cmp
fisttpll
stos
xchg
mov
cld
or
pushf
stos
outsb
xlat
cmp
lods
jbe
push
pop
add
ljmp
add
mov
lods
das
sbb
mov
or
cmpsb
orb
sbb
shrb
adc
adc
pop
pop
sub
nop
mov
lods
mov
sbb
mov
sar
inc
outsb
call
add
lret
xor
mov
add
shr
leave
mov
mov
dec
dec
add
das
fwait
dec
aas
mov
fwait
sub
jp
jb
rolb
push
mov
xor
aas
sbb
out
inc
scas
lret
mov
push
push
xchg
cmpsl
fxch
inc
lret
ret
fmuls
pop
pop
scas
loope
std
aas
rcr
out
pop
lea
push
pop
mov
hlt
pop
hlt
mov
dec
js
inc
test
adc
cmp
push
dec
mov
stc
mov
je
ret
leave
sub
inc
push
ljmp
sbb
xorb
xchg
lods
mov
imul
adc
inc
inc
push
mov
cmp
mov
mov
mov
je
shll
cli
dec
pushf
aam
jg
adc
xchg
shlb
sub
ss
lods
fldenv
add
ds
popf
mov
repnz
cwtl
ss
js
mov
and
dec
fisttpll
stc
scas
and
mov
push
adc
xchg
jo
pop
fcoms
ds
mov
ret
std
jp
adc
push
xor
cmpsb
test
scas
in
rcr
add
sub
sbb
pop
inc
or
mov
jns
or
leave
dec
mov
out
les
push
or
xchg
mov
repz
lods
xchg
lock
pop
movsb
out
clc
lods
adc
dec
mov
mov
pop
push
cmp
fmul
mov
and
adc
mov
push
mov
out
fsubs
test
popf
sti
mov
mov
lods
jp
pop
and
sub
ret
mov
pop
stos
cmp
stos
mov
cld
andl
sbb
notl
lea
es
js
mov
push
add
xchg
mov
bnd
fwait
aad
push
push
lahf
subl
fmull
cmp
insl
shll
sub
or
mov
xor
sbb
pop
lret
push
pusha
lods
xchg
push
ljmp
aas
cmp
xchg
cmpsl
in
cs
pop
pop
out
pop
movups
aad
dec
jmp
mov
imul
sbb
aam
sbb
jbe
pop
ljmp
data16
add
movsb
cvtpi2ps
add
popf
stc
rcll
mov
jecxz
pop
push
jge
push
push
lret
push
fiaddl
stos
ss
fsubrl
inc
cmp
sbb
inc
xor
adc
xor
xor
xchg
test
add
mov
jmp
lcall
add
test
std
outsb
push
rcl
xchg
rcrl
jg
ljmp
leave
dec
cmc
std
repz
and
jp
sar
push
lret
xchg
or
call
sbb
es
iret
mov
jno
repnz
repnz
pop
push
into
pop
inc
cld
dec
jo
fistl
or
lahf
mov
ss
add
fisttps
arpl
mov
push
sub
ds
sub
push
push
pop
mov
faddl
mov
dec
inc
insl
fsubp
mov
mov
jae
lock
add
sbb
jnp
lret
and
jnp
movsb
jo
imul
int
mov
lea
inc
add
cmp
sbb
outsb
add
in
inc
and
xchg
jo
rorb
and
sub
outsl
push
out
in
mov
lods
cmp
xchg
jnp
mov
stos
aad
popa
add
pop
or
dec
jmp
idiv
rorb
icebp
jp
addr16
fstl
rorb
jns
xchg
xlat
subl
icebp
fs
in
lret
jmp
cli
mov
and
and
or
ja
push
filds
aam
inc
lods
xchg
js
addr16
mov
aam
push
in
aam
sub
xchg
xorl
inc
scas
pop
xchg
pop
mov
push
push
xchg
jae
dec
sbb
fildll
shrb
loope
nop
pop
cmp
fimull
dec
jmp
mov
fcmovu
movsb
push
sbb
fistl
lahf
adc
in
add
clc
mov
hlt
add
das
ret
hlt
repz
lock
out
std
jne
bound
cmc
out
adc
divb
mov
rolb
repnz
xchg
lock
call
pushf
or
loope
dec
push
xor
fs
mov
test
out
lds
jle
jae
imul
xchg
xor
movsl
dec
jl
in
or
jg
sbb
es
dec
icebp
adc
pop
xor
jmp
cmp
icebp
jmp
outsl
subb
lods
inc
dec
aas
mov
or
std
fsub
out
adc
lods
adc
in
sub
in
jne
fbld
jne
jns
jb
sahf
or
inc
pushf
sbb
jg
cwtl
push
test
lcall
mov
inc
test
push
bound
cs
add
cmp
and
mov
push
fcomps
and
int
enter
mov
jno
popa
dec
popf
sarb
dec
adc
outsb
in
cmp
bound
pop
rcl
dec
cmp
fidivrl
repz
into
lods
nop
or
out
sti
inc
repz
and
push
inc
rol
mov
fstps
dec
sbbl
adcb
lock
pop
pop
xchg
test
inc
and
jecxz
add
pop
add
shlb
mov
sub
cmp
icebp
adc
in
inc
nop
jnp
mov
mov
push
sbb
xchg
or
sub
add
rcrl
and
cmc
xchg
sarl
xor
pop
pop
sub
mov
fisubs
sti
int3
enter
je
cmp
add
int
mov
push
add
loop
lcall
bound
xchg
push
sbb
into
call
andl
push
pop
push
ja
les
movsl
mov
cli
outsl
adc
add
xchg
adc
sbb
push
test
mov
dec
jne
outsl
nop
mov
and
fbstp
sub
pop
movsb
xor
xchg
in
scas
push
sahf
dec
adc
ret
ret
pushf
add
movsb
and
lret
movsl
adc
mov
mov
pop
lret
in
mov
ds
add
jecxz
adc
jo
push
addr16
adc
jo
lret
in
sub
pop
mov
dec
pop
mov
adc
inc
inc
pop
test
fstpl
inc
dec
push
or
mov
out
pop
dec
mov
xor
dec
mov
repz
rorl
cwtl
and
push
shll
mov
std
std
pop
add
cltd
push
inc
cld
mov
shl
sub
inc
les
or
aad
js
into
orl
leave
cmp
or
les
aaa
sti
lret
push
inc
fwait
inc
jne
mov
jge
frstor
fs
push
repz
mov
enter
dec
pop
movl
sti
enter
dec
in
fidivl
ljmp
adc
lea
subl
jne
imul
insb
orl
cmpsl
mov
dec
mov
stos
mov
mov
bnd
jp
mov
leave
push
cmp
xor
mov
mov
xor
dec
rcll
gs
int3
loope
xchg
cmp
add
jns
sbb
mov
xorb
bound
insl
xlat
movsb
or
or
stc
fildl
mull
sbb
std
fimull
adc
bnd
jle
sub
shlb
ds
and
loope
std
test
mov
pop
jge
ret
jo
jge
fcoml
jne
add
imul
subb
mov
out
ret
pop
mov
cwtl
les
mov
aas
jmp
pop
imul
xchg
push
popf
sub
mov
nop
bound
xor
mov
inc
mov
aas
out
pop
es
inc
mov
jp
popa
mov
rorl
test
mov
daa
jmp
addr16
and
xchg
ss
adc
sub
mov
add
dec
dec
cmp
push
daa
enter
lds
pop
pop
loopne
xchg
cltd
cmpsl
xorl
in
out
mov
out
jns
dec
inc
ficoml
test
adc
sbb
add
jnp
sbb
out
popa
pop
mov
je
cwtl
hlt
jb
je
nop
in
call
push
jge
xchg
xlat
jno
mov
in
subb
xor
push
or
sub
jmp
arpl
jbe
xchg
les
in
jmp
out
fistps
decl
dec
inc
add
popf
xor
mov
mov
pop
addr16
mov
lds
fwait
add
clc
or
mov
cmc
pop
divl
xchg
add
add
scas
inc
in
aaa
xor
add
xor
xchg
lock
push
fnstenv
xor
adc
fidivl
xchg
insl
outsb
xlat
jle
call
mov
jnp
jns
jl
xor
lahf
sbb
dec
lods
or
mov
mov
popf
adc
adc
je
ret
addr16
inc
lcall
ret
fldcw
dec
popf
movsb
aad
adc
and
sti
sarl
in
mov
clc
sub
movsb
lcall
test
mov
mov
mov
xor
xchg
jb
or
sbb
xor
stc
lea
loop
icebp
subb
inc
js
pop
lea
addr16
clc
je
pop
sbb
or
xchg
stos
jne
repz
or
mov
imul
rclb
loopne
mov
sarl
inc
add
pcmpgtw
sbb
mov
cltd
push
scas
sbb
loopne
aaa
pop
fisttpll
lahf
adc
and
sub
pusha
pop
aaa
sub
imul
pop
int
call
jle
dec
jl
pusha
and
sub
sub
xor
clc
cmpsb
inc
mulb
aam
popa
sub
mov
int
cmp
adc
in
testb
rclb
imul
add
push
jns
sub
adc
stos
cwtl
test
insb
arpl
push
push
mov
cmp
pop
test
ficompl
inc
sub
xor
push
cmp
or
stos
fcoms
outsb
xchg
into
lods
out
mov
dec
bound
mov
mov
std
inc
adc
dec
and
imul
outsb
iret
bound
test
je
push
cmpsl
lret
or
je
dec
fs
and
int
cmp
jno
orl
mov
jge
dec
iret
mov
pop
outsl
dec
addr16
out
jns
dec
cmp
add
mov
mov
inc
subl
mulb
orl
push
dec
scas
adc
push
lods
mov
movsb
je
cmp
sahf
adc
xchg
int3
std
mov
add
adc
and
pop
outsl
add
xor
mov
fbld
aas
andb
mov
cli
cwtl
cmp
dec
orb
sbb
cmpsb
mov
in
dec
push
dec
loopne
movsl
jecxz
test
fcmovnb
push
scas
cwtl
mov
fldl
mov
lds
in
test
loop
sarb
pop
notb
enter
mov
dec
insb
mov
push
outsb
jne
fwait
aad
and
inc
data16
adc
in
in
dec
sub
cmp
lret
stc
mov
fimuls
bound
mov
push
sete
inc
setl
mov
bound
lea
imul
xor
pop
xchg
enter
mov
xchg
test
dec
movsl
stos
push
mov
loopne
inc
mov
out
or
cmc
ja
jae
or
mov
dec
iret
add
pop
jp
out
mov
xchg
sbb
imul
mov
sbb
enter
lods
inc
bound
or
sbb
out
fwait
xchg
loopne
sub
xchg
mov
mov
scas
bound
push
push
decb
add
push
dec
push
and
stos
sti
sub
cmc
daa
and
cmpsl
jno
and
pushf
mov
lock
sub
daa
jg
ljmp
repz
out
mov
xchg
das
sbb
lret
dec
stos
mov
mov
aaa
imulb
jne
cmpsl
test
adc
or
cmpsl
xchg
pop
dec
lea
idiv
mov
jbe
out
js
push
ficompl
nop
push
ret
xchg
jnp
fstpl
lods
ret
arpl
movsl
iret
repnz
jecxz
sbbb
jmp
xchg
mov
mov
fildl
push
jg
mov
mov
stc
and
shl
xchg
jo
ljmp
xor
pop
and
xor
mov
adc
or
adc
or
jmp
test
push
xor
mov
bound
ja
push
jle
cltd
pop
jg
rcl
out
aas
cltd
dec
dec
add
adc
push
outsb
aad
cmp
jo
fmull
jg
stos
mov
or
xor
or
inc
in
insb
test
addr16
add
pop
loope
jo
test
push
jge
repz
pop
or
mov
daa
inc
mov
add
fsubrl
sub
vandnps
jne
mov
and
xchg
push
fldl
jge
fnstenv
enter
push
and
or
fbld
loop
sarl
xchg
fwait
adc
lods
add
ret
pop
xchg
xor
xorl
jbe
xchg
shl
stc
inc
push
test
jle
mov
jb
adc
lret
cwtl
cli
add
xor
fsts
scas
add
popa
sub
bound
adc
push
sub
orl
mov
mov
out
inc
mov
add
ror
dec
add
enter
mov
pop
dec
loopne
mov
ss
pop
jb
mov
add
xchg
adc
mov
xchg
push
data16
and
mov
nop
mov
adc
jecxz
sub
iret
fwait
arpl
cmc
out
or
mov
add
add
cld
insb
jbe
inc
loopne
scas
aaa
ja
js
pop
sbb
icebp
xor
std
mov
inc
and
ljmp
popa
ffree
pop
cmp
xchg
push
sbb
dec
pop
mov
jnp
mov
aad
inc
std
subb
dec
ja
pop
fbld
cmc
push
jnp
std
mov
pop
mov
mov
add
mov
mov
imul
test
addb
test
dec
stos
cmpsb
cmpsb
inc
movsb
shr
mov
xchg
or
fwait
movsb
in
mov
jo
lret
dec
pop
jl
out
mov
inc
mov
inc
add
mov
stos
push
pusha
xchg
or
cmp
dec
insb
sarl
stos
adc
jp
fbld
lods
jge
add
divps
das
loopne
and
push
stc
aaa
mov
gs
test
lods
in
es
icebp
fsubs
push
xchg
cmp
call
clc
xchg
push
jne
sub
outsb
ss
mov
push
add
cmp
test
jge
mov
push
lock
std
cwtl
mov
ds
pop
in
jns
out
test
popl
in
in
js
adc
jae
aaa
and
pop
xor
dec
push
sub
loopne
push
pop
ljmp
repnz
int3
orl
cmpsl
jmp
fcomps
and
add
out
xchg
push
adc
push
pop
pop
rol
sbb
jg
into
shlb
fisubl
pop
ret
sub
xchg
mov
cmp
int3
cmpsl
pop
adc
cltd
ljmp
ss
call
notb
movsb
jl
clc
xor
andb
out
into
xchg
mov
ja
jnp
bound
je
loope
sub
cld
mov
mov
mov
push
aaa
push
xchg
pop
lret
jns
mov
mov
sbb
lock
arpl
sahf
and
jge
adc
xlat
cmp
add
inc
fucomp
out
test
mov
fucomp
adc
mov
mov
es
ret
inc
sbb
sbb
cmpsb
jbe
rol
inc
ret
push
jae
add
jne
rcll
and
les
mov
lret
movl
push
push
mov
xor
sbbb
lock
das
xchg
jl
mov
sarl
int
test
iret
loop
cmp
mov
push
or
out
mov
xor
push
mov
add
mov
lods
shrl
xchg
lahf
int
add
rorb
pushf
add
or
adc
addr16
push
mov
inc
insl
xchg
jge
aaa
xchg
add
jno
xchg
and
mov
pushf
mov
sti
add
jb
pop
xor
pop
mov
movsb
xor
push
aaa
inc
imul
bound
sub
fstps
in
cmp
mov
xor
and
adc
sti
cmp
xchg
dec
jae
in
movsl
mov
gs
push
mov
push
add
lds
call
js
jmp
jge
pop
fwait
dec
test
lock
inc
inc
add
sbb
stos
xchg
xchg
in
xorb
xor
lods
call
dec
mov
mov
push
and
stos
push
cmpsl
mov
lgs
push
cwtl
xchg
push
test
pop
add
ja
xor
sbb
imulb
pop
mov
adc
cld
cmp
dec
sarb
pop
and
mov
pop
pop
jnp
xchg
jo
aas
jge
dec
xchg
enter
push
mov
xchg
cli
dec
pop
inc
gs
aam
leave
dec
clc
pop
int
cwtl
cmp
out
sti
jno
jno
jbe
dec
sbb
ror
lds
mov
and
shrb
push
mov
sbb
out
sbb
cwtl
mov
lcall
fists
dec
stc
and
mov
addl
in
rolb
inc
shrl
inc
and
mov
dec
data16
test
ret
mov
pushf
aas
push
lahf
inc
xor
repz
sub
daa
fdiv
lods
cmp
lods
inc
enter
cmp
dec
pop
sbbl
xor
push
xchg
cmp
push
add
jnp
mov
pop
mov
enter
jb
mov
ss
rcll
sahf
mov
or
nop
sbb
pop
movaps
mov
ss
add
insl
cmpsb
subl
mov
movsb
adc
cld
les
xchg
decb
pop
pop
adc
pop
dec
mov
cbtw
loop
es
lahf
mov
dec
mov
shrb
cmpsl
xchg
cwtl
sbb
pop
xchg
push
movsl
shrl
dec
imull
lods
or
add
out
mov
sbb
sbb
fldt
mov
jbe
push
sbb
je
mov
jle
lret
pop
sub
jae
aas
scas
xchg
daa
sbb
pop
xor
cmp
sbb
jmp
sub
xchg
mov
mov
testl
pop
popl
je
add
jnp
mov
fdivs
in
jo
pop
adc
ljmp
xlat
out
jl
dec
mov
sbb
dec
push
gs
dec
mov
out
and
sbb
es
ds
loopne
jmp
push
jno
dec
mov
jno
xchg
cmp
xor
push
inc
xchg
shrb
lcall
jmp
mov
and
or
std
cmpsl
adc
fsubs
push
inc
inc
cs
imul
cld
rorl
shrl
adc
je
add
mov
xor
iret
jbe
in
or
sub
fsubr
loop
sbb
mov
int
xchg
pslld
mov
mov
fstpl
push
sbb
out
clc
sbb
je
sbb
test
pop
mov
xor
bound
sahf
pop
jne
imul
cmp
sbb
add
clc
call
pop
lds
sbb
pop
push
fisubrl
sbb
pop
sbb
hlt
ss
dec
inc
popf
daa
dec
mov
aas
pop
pop
loope
subb
mov
test
inc
pop
je
aam
rcll
jmp
sub
jbe
nop
je
insb
inc
push
cli
int3
mov
cli
sbb
popf
lods
dec
ljmp
or
nop
mov
sbb
stos
push
adc
repz
and
aas
call
ss
push
jg
imul
es
sub
leave
pop
lahf
fldt
in
jo
shrb
lds
shlb
subl
and
sub
std
push
push
test
mov
rolb
insl
xor
lock
jb
add
push
out
shrl
mov
daa
not
popa
jl
xchg
sub
imulb
mov
jns
or
jo
mov
imul
mov
pop
sahf
jmp
repz
adc
fldl
jecxz
xor
movsb
ret
out
sub
inc
jo
out
jae
call
dec
mov
clc
add
push
les
push
leave
jbe
or
loope
cmp
sub
mov
pusha
push
push
jno
sti
mov
adc
jno
xlat
or
ret
or
sub
pushf
repnz
mov
subb
rorl
mov
lds
icebp
shrb
mov
xchg
or
aam
mov
sub
fadds
loopne
sub
in
adc
cltd
dec
mov
es
pop
xor
ss
and
xchg
popa
popf
test
xor
jecxz
xor
cmp
and
aaa
cmp
or
insb
pusha
fnstsw
add
mov
xchg
rcrb
pop
push
mov
movsl
xlat
pop
cld
lret
leave
das
lds
jge
shl
add
mov
xlat
and
test
mov
lods
fsubl
imul
xchg
sti
arpl
icebp
xor
cld
push
cmp
insb
mov
repnz
je
mov
or
call
loopne
adc
ja
cmp
mov
push
mov
xchg
cltd
cltd
sub
cwtl
cmc
inc
sub
loopne
adc
test
sahf
mov
pushf
xor
pushf
push
out
inc
or
mov
out
pop
out
jb
dec
imul
lods
mov
sbb
mov
push
jno
push
and
mov
dec
mov
in
test
sti
sahf
jge
out
fwait
mov
loope
and
mov
jae,pn
jp
jo
loop
int
mov
sti
push
sbb
das
call
hlt
cmc
test
sbbl
sbb
mov
push
adcb
pop
pop
xor
nop
stos
inc
lods
inc
aam
mov
push
fwait
aaa
cwtl
ret
das
ret
movsb
fwait
jmp
ret
sbbl
push
pop
iret
test
sbb
mov
lret
aam
inc
cwtl
jae
cwtl
pop
mov
ret
ret
xchg
outsb
mov
push
inc
repnz
gs
dec
rclb
mov
sbb
les
cld
mov
imulb
pop
maxps
negl
in
call
test
adc
jns
imull
psubsw
ret
push
adc
mov
movsl
into
inc
push
loope
mov
popl
pop
aaa
xor
mov
xlat
sbb
xor
nopl
mov
and
aad
jg
aaa
jb
push
addr16
push
push
or
push
mov
inc
data16
jnp
call
lods
out
xor
pusha
lock
fnsave
and
popf
mov
je
aaa
aam
cmp
or
dec
xchg
inc
mov
pop
popa
enter
shrl
inc
stc
outsl
lret
mov
push
loopne
jmp
pop
mov
nop
pop
push
aad
xchg
sub
nop
aam
inc
xor
aad
ficoml
ret
pop
rolb
dec
rorl
js
mov
test
sti
pusha
push
push
jne
stc
xor
cmpsb
fs
add
fsts
rcrb
xor
popf
mov
popf
or
xchg
or
leave
loop
cmp
push
jo
pop
test
mov
push
andb
lock
inc
cs
test
lock
imul
cmpsl
pop
dec
repnz
dec
pop
and
imul
scas
into
push
jp
and
jl
xor
sbb
out
dec
jne
rcll
jle
adc
or
jp
mov
rolb
adc
push
xchg
jo
movsb
jo
js
push
insb
push
outsb
sbb
lods
pop
imul
int3
pop
addl
push
jge
mov
jp
and
push
lahf
ror
imul
out
das
or
push
or
dec
cmc
les
ja
cmp
rolb
cmpl
stos
or
push
add
aam
mov
or
mov
sbb
sub
popf
jne
and
pushl
mov
lea
lret
ret
adc
jmp
neg
cmp
addr16
popf
cmpl
sub
sub
sub
mov
rol
into
mov
in
lods
push
mov
cmpb
in
mov
xor
jg
jg
mov
mov
push
and
in
popl
lock
aad
movsl
jnp
sarb
and
add
outsb
fwait
jp
jge
fisubs
mov
push
das
cli
aam
nop
xchg
cmp
out
jmp
icebp
xchg
jne
ljmp
jbe
mov
cwtl
add
mov
push
mov
ss
or
mov
jbe
mov
push
sub
test
xor
aam
push
push
and
mov
inc
jle
or
xchg
insl
lahf
sahf
sbb
mov
mov
or
gs
stc
xor
mov
movsl
cmp
mov
cmpsl
push
xchg
imul
sbb
das
xor
popa
jo
test
and
je
incl
fadds
mov
sbb
leave
loopne
or
push
mov
sbb
shrb
arpl
sbb
int3
mov
loopne,pn
cmp
push
lcall
jl
adc
leave
adc
orl
inc
sub
sub
bound
testl
adc
addr16
jmp
jo
sub
and
or
shrl
jle
sub
ja
or
add
cmp
mov
movb
rorb
push
out
shll
xchg
or
xor
xchg
cli
mov
and
pop
xor
xchg
call
mov
adc
pop
push
and
ljmp
jbe
add
jl
cmp
mov
lods
xor
adcl
movsb
cmpb
out
lds
xchg
lahf
jae
les
insb
in
xor
pusha
mov
iret
aas
cmp
cmpsb
ficoml
adc
lahf
add
sbb
mov
jno
in
mov
sub
mov
dec
adc
loopne
xchg
xor
sub
and
aaa
mov
mov
repnz
int
mov
adc
or
jns
sbb
std
xchg
stc
mov
les
nop
jle
les
aaa
push
push
xlat
stc
outsb
xlat
dec
add
jnp
pop
in
mov
inc
aad
sbb
scas
loopne
mov
and
xchg
dec
sub
cmc
outsb
adc
cmp
inc
sbb
sub
inc
sub
movsb
push
mov
xchg
rcr
or
xchg
cmc
xor
test
sbb
mov
adc
aam
xchg
movsl
stos
mov
mov
xlat
jae
sub
arpl
repnz
lock
push
test
lds
push
pop
push
xor
and
jmp
sbb
mov
xchg
inc
loop
sti
pop
inc
push
aas
inc
mov
std
dec
mov
jge
cmp
or
das
movsb
and
sti
leave
fwait
inc
fcomps
ljmp
sub
sahf
and
push
xchg
pop
test
push
mov
mov
jl
outsl
sarl
fnstsw
rcrl
sbb
inc
xlat
or
dec
testl
scas
xor
loope
mov
subb
mov
mov
jl
ljmp
stc
adc
xor
pop
lock
mov
repnz
pop
mov
push
push
mov
fst
mov
fwait
dec
aam
pop
je
test
sub
mov
iret
mov
mov
popa
and
adc
xchg
cmp
bswap
mov
jnp
jb
das
addr16
add
or
sbbl
shll
sbb
dec
sahf
fs
ljmp
scas
das
fwait
pop
cmp
add
jmp
jne
pop
jo
shl
outsb
imul
into
aaa
or
push
push
jbe
loop
arpl
mov
ljmp
jns
cmp
sub
inc
jecxz
loope
jp
shlb
dec
test
xor
cmpxchg
dec
cmp
pushf
clc
xor
push
fcmovu
or
ret
sahf
inc
les
sub
repz
jmp
mov
xchg
or
movsl
fimuls
mov
out
mov
je
sbb
fwait
xlat
sub
test
jbe
push
enter
in
stos
daa
int
dec
mov
and
test
les
xchg
fcompl
or
mov
call
sbb
icebp
fcompl
or
mov
pop
mov
pop
test
int
sbb
sub
test
xor
cmp
mov
cmp
xor
xorb
in
gs
ud2
xchg
jecxz
mov
je
dec
mov
shrb
or
stc
arpl
dec
mov
and
sub
leave
dec
outsb
out
gs
adc
movsl
push
iret
pop
adc
sub
sub
rorb
mov
mov
movsb
faddp
fmull
inc
fwait
jmp
aad
pop
in
ljmp
fnstenv
js
jmp
rclb
xlat
rcl
das
jbe
jmp
fs
xchg
mov
adc
ret
jne
xchg
les
retw
xlat
mov
jne
add
pop
ret
repnz
inc
adc
cmc
popf
mov
les
ja
sbb
movsb
ret
scas
cmp
int
pop
lcall
xor
jbe
pop
in
in
push
mov
mov
data16
sbb
adc
push
orl
or
sbb
add
insb
jbe
ret
in
repz
jmp
push
jp
push
inc
push
in
mov
iret
hlt
popa
mov
outsl
scas
jbe
cld
ficoms
popf
pop
sbb
inc
aaa
pop
pop
pop
adc
es
jecxz
push
shr
loopne
adc
or
shl
and
pop
mov
inc
fcmovnb
mov
cld
add
cmp
push
inc
les
jb
push
pop
adc
test
int3
mov
cld
stc
pop
lock
test
adc
lcall
cmpsb
xlat
lods
sub
sbb
daa
rcrb
mov
insl
mov
test
pusha
jbe
test
cmp
hlt
xchg
rcrl
adc
dec
ret
enter
fwait
mov
push
pushf
cltd
add
or
mov
mov
cmpsl
fs
add
arpl
pop
filds
out
rcll
lods
ja
out
iret
or
dec
xchg
mov
or
add
push
cmp
fidivrl
xchg
rolb
jbe
xor
xor
push
jge
xor
test
insl
incb
pop
in
cmp
lods
rolb
mov
pusha
movsb
pop
rclb
cld
jnp
mov
or
loop
in
loop
or
loopne
ss
mov
fwait
jmp
enter
xor
cli
loopew
out
add
es
adc
popf
adc
cmp
in
inc
lods
jne
imul
loopne
es
add
or
add
pop
inc
jp
jo
fsubl
xchg
adc
or
inc
andb
out
push
xchg
icebp
fnstenv
xchg
loop
lock
pop
sub
sub
es
nop
add
xchg
mov
aas
xor
mov
test
cmp
xchg
and
mov
push
rcll
and
or
mov
mov
sbb
mov
ss
push
es
js
pop
push
mov
mov
ljmp
insl
das
or
sub
lods
fistps
nop
lret
mov
push
or
rorb
mov
push
mov
jnp
in
loop
rorl
xchg
inc
in
mov
pop
scas
imul
ljmp
mov
or
sbb
aaa
xchg
fistpl
xchg
rol
dec
mov
add
nop
sbb
xor
push
cmc
je
pop
jbe,pn
shll
divb
out
adc
inc
and
fwait
ljmp
sti
inc
dec
les
mov
orl
in
push
jns
xor
or
cmp
das
ficoms
push
xor
outsl
cmpsb
pop
mov
cmc
add
sbb
adc
ret
jbe
add
fstpl
jnp
mov
das
in
in
fiaddl
dec
js
xlat
pop
mov
stos
testl
ljmp
xor
dec
xor
mov
and
and
adc
or
movsb
jo
push
xchg
ret
or
call
das
popa
movsl
outsb
shll
inc
lret
xchg
test
enter
ja
mov
push
mov
cmp
pushf
mov
rcl
sahf
shll
fsubrl
into
mov
jg
mov
mov
xchg
popa
mov
or
push
int
push
or
sbb
xor
imul
inc
cmp
scas
sub
mov
js
aad
mov
aas
jecxz
pusha
aaa
xchg
or
mov
jo
cmp
xor
cwtl
sub
fdivr
jmp
mov
sub
mov
push
pop
rcrb
pop
mov
xchg
enter
jg
sub
pop
jno,pt
push
cmc
out
std
imul
push
lea
pushf
jb
icebp
stc
icebp
sub
popa
mov
imul
rcrb
testb
loopne
es
fildll
clc
pop
jbe
jg
loopne
stos
int
repnz
lods
inc
xchg
in
mov
cmp
call
inc
xor
daa
in
pop
xor
addb
js
mov
test
cli
divl
shll
aas
shl
stc
es
xorb
pusha
hlt
cmp
inc
in
mov
dec
shll
test
insb
js
test
shll
adc
test
cmpsb
cmp
out
subps
sbb
mov
dec
mov
dec
dec
mov
mov
sub
popl
cmpsl
sub
bound
mov
inc
fisubrl
or
ja
push
inc
inc
sbb
mov
call
cmp
dec
sbb
fldcw
push
xchg
dec
js
pop
cld
xchg
mov
fcomps
push
pop
push
stos
js
ror
pop
inc
clc
xchg
sbb
in
mov
jo
push
mov
cmpsl
inc
xlat
movb
cltd
mov
pop
or
imul
popa
adc
sarl
testb
movsb
pop
shrb
repnz
into
filds
cli
test
iret
and
daa
sbb
xorl
pop
popf
rolb
ja
push
xchg
out
adcl
cltd
add
xor
xor
fcmovne
pop
lds
ficoml
insb
and
jg
push
adc
addr16
out
inc
test
xor
popa
and
dec
or
insb
lret
dec
and
xor
mov
mov
push
pop
lock
mov
movb
sub
sub
sbb
add
mov
out
add
fucompp
call
icebp
and
dec
push
push
mov
mov
pop
sub
add
sbb
icebp
ret
dec
add
scas
insb
xchg
call
nop
sub
jae
add
mov
mov
scas
arpl
in
jmp
mov
inc
insb
jg
dec
and
in
insl
dec
or
add
sub
int
push
repz
repnz
push
inc
dec
daa
sahf
mov
xchg
shll
fwait
mov
outsl
sbb
pushf
sbb
pusha
xor
xor
lock
mov
mov
gs
mov
jnp
ljmp
fmulp
add
fwait
push
mov
mov
cltd
in
push
dec
js
iret
pusha
cmp
fdivrl
incl
repz
ja
xchg
scas
inc
aas
nop
cltd
pop
jnp
push
out
in
push
sbb
dec
out
aad
lock
adc
pop
loopne
das
or
flds
pop
mov
push
lret
nop
fisubs
xchg
push
xchg
mov
or
mov
fcomip
dec
cltd
cmp
sbb
xchg
pop
xchg
add
push
cmp
mov
push
imul
or
push
dec
xor
int3
xor
mov
add
xor
outsb
push
or
adc
mov
enter
xor
stos
in
lcall
xchg
cltd
adc
popa
adc
lret
lds
or
inc
mov
mov
pop
push
xchg
pop
mov
out
jbe
xor
dec
pop
pop
out
pop
push
fldl
icebp
stc
mov
mov
mov
mov
out
insl
cmp
sarl
fmul
sub
cmp
and
into
xor
stos
jle
popa
loopne
push
mov
mov
test
cld
jne
lock
fbstp
jge
test
movsl
aaa
inc
xchg
insb
flds
pop
sbb
jmp
dec
jg
mov
adc
mov
xor
pop
push
mov
into
mov
mov
and
test
stc
or
cmp
and
lret
inc
jmp
pop
in
test
inc
mov
stc
jbe
loop
mov
sahf
ds
jp
push
mov
dec
jmp
dec
inc
inc
dec
mov
daa
out
sub
leave
jecxz
ret
mov
lcallw
xor
pop
push
xchg
inc
iret
mov
fadds
lret
cmpsl
setne
out
pop
pop
psadbw
add
cmp
fidivrl
ss
pop
repz
lcall
lcall
pop
sarb
jle
test
dec
xchg
fimull
pop
sub
test
xchg
loop
and
inc
xor
xor
int3
adc
mov
sub
jmp
repnz
outsb
cli
mov
jb
outsb
xor
dec
mov
pop
or
rclb
mov
push
int
or
int3
mov
fnstenv
jle
and
call
js
and
dec
xchg
sbb
mov
pusha
push
xor
aam
push
stos
xor
mov
xor
and
pop
push
xchg
fdivr
into
nop
mov
dec
imul
cmpsb
pop
ret
negb
xor
mov
es
popa
ljmp
and
inc
sbb
sarl
pop
addr16
adc
xchg
lret
dec
cwtl
movsl
dec
cld
jg
cmp
mov
sub
stc
data16
scas
and
jns
mov
test
leave
dec
xorl
test
adc
ljmp
mov
mov
add
add
loopne
xchg
outsl
insb
cmp
xor
sarl
orl
les
add
pushl
ja
or
xor
or
push
test
scas
into
mov
push
dec
mov
js
pop
sbb
jae
pop
push
repnz
push
sbb
sub
xchg
sub
inc
in
mov
andb
lea
out
fs
cmp
cwtl
xlat
movsl
and
pop
loope
add
add
mov
jb
je
fsub
pop
lahf
cmp
push
add
xor
sbb
inc
stos
nop
gs
in
scas
pop
sbb
dec
push
divb
addl
add
aas
sub
lock
sub
push
dec
les
shll
mov
and
out
mov
jg
adc
test
mov
repz
pop
mov
mov
leave
dec
fcos
or
insl
sub
pop
aas
js
in
fs
pop
loop
outsb
push
aas
jnp
sar
dec
pop
cwtl
push
mov
push
push
test
sub
push
inc
mov
out
jb
jmp
sarl
pop
stos
lea
scas
js
inc
jg
sbb
adc
imulb
pusha
test
inc
xchg
les
jno
inc
jbe
ret
stos
sub
stos
sti
dec
dec
pusha
int3
mov
adc
mov
dec
push
aad
nop
repnz
or
and
jno
leave
and
iret
pusha
jns
xor
scas
xor
cmp
imul
into
cmp
and
lods
jo
inc
lods
pop
jae
iret
and
ljmp
stos
mov
mov
fidivl
cmp
popa
popf
pop
out
ror
push
scas
and
int
jle
test
jno
test
add
fidivs
sbb
pop
adc
je
and
push
ds
addr16
jl
sti
cwtl
jecxz
pop
adc
aam
iret
repnz
cmp
mov
and
scas
xchg
mov
mov
pop
popf
imul
and
add
mov
loopne
int
pusha
pop
adc
leave
inc
jmp
mov
adc
jb
shrb
jae
je
leave
dec
pushf
test
xchg
cmp
loopne
cmp
jge
sbbb
xor
jge
inc
loope
lods
and
push
sbb
mov
aam
mov
addl
jae
cmp
popa
mov
mov
stos
lret
add
in
mov
pop
xchg
repnz
aas
aaa
push
sub
cli
adc
mov
int3
repnz
pop
xchg
jbe
cmp
xchg
dec
inc
adcb
lahf
add
mov
iret
xchg
fcoms
mov
fistps
lods
add
push
dec
push
adc
cmc
repz
ret
hlt
test
pop
xchg
in
daa
mov
sbb
rcll
rcr
push
mov
lahf
or
in
ds
cmpsb
call
cmpsb
xchg
mov
or
js
inc
rorb
jle
jle
ja
or
js
mov
movsb
int
aam
testb
cmc
ljmp
adc
mov
push
and
aas
pop
stos
fcomip
loope
repnz
fcompl
adc
jne
mov
push
enter
loopne
inc
or
and
int
out
mov
and
fstpt
out
mov
xchg
ds
in
shll
lret
in
pop
mov
jge
ljmp
xlat
out
or
add
sub
jge
mov
ds
sub
loop
lea
imul
lods
dec
fmul
dec
jbe
cmp
sub
data16
aad
cwtl
push
xchg
fsts
aad
jbe
push
mov
jmp
and
mov
mov
fsubs
loop
movsb
jae
loope
lods
js
cmc
out
shrl
sbb
ficoms
fiadds
adc
xchg
cmpsb
fsubp
or
out
push
pop
fs
dec
sub
fcmove
shll
gs
aas
cmp
xchg
aaa
insl
loope
mov
aam
sbb
insb
lret
pushf
mov
decb
stos
pop
mov
ja
or
cwtl
adc
jmp
sti
cs
nop
orb
clc
mov
jl
and
addr16
out
jo
pop
lea
sub
mov
or
nop
mov
and
not
push
mov
aas
push
or
lret
fs
mull
add
push
mov
adc
inc
lock
std
outsb
fdivs
xchg
push
push
and
ret
pop
insb
jl
push
test
sbb
or
adc
xor
dec
sti
fadds
mov
roll
xchg
jg
sub
andl
cwtl
lret
insl
fistpl
jns
std
outsl
lea
add
rcr
icebp
sbb
cld
xor
xchg
xchg
nop
js
mov
decl
enter
xchg
out
out
js
or
jo
fs
jecxz
sbb
sub
jmp
notl
iret
je
push
cmp
push
into
movsb
or
andb
mov
mov
arpl
and
fs
out
pushf
lcall
or
mov
je
and
into
stc
addr16
xchg
push
xlat
jmp
adc
mov
xlat
lahf
je
xchg
outsb
imul
mov
in
addb
or
imul
inc
fisubrs
sti
test
fcmove
ds
fildll
fsubrp
mov
add
jecxz
mov
xor
jno
mov
inc
mov
stos
push
jo
lret
popf
jmp
mov
leave
add
sub
xchg
in
cmpsl
mov
es
push
xor
cs
imul
jnp
mov
bound
inc
addb
hlt
test
stos
and
xor
jne
pop
inc
dec
xor
loop
fstpl
mov
mov
xlat
idiv
jno
cli
adc
mov
xor
std
xchg
or
popa
adc
movhlps
xchg
fidivrs
push
ja
adc
jle
cmp
push
rcll
lret
aam
xchg
xchg
pushf
leave
xchg
jbe
lcall
out
setns
mov
ror
out
lahf
aam
les
out
add
out
push
pop
sti
mov
xor
and
xor
xchg
inc
mov
iret
add
dec
cmp
sbb
pop
dec
xor
mov
pusha
mov
fnstsw
icebp
push
dec
mov
pop
push
ret
pop
lds
lods
jae
jnp
pop
sbb
cs
stos
inc
lds
jp
lahf
lcall
jl
adc
adc
das
dec
arpl
cmc
lock
test
int3
in
cmp
fists
mov
fscale
inc
or
inc
jle
aam
jo
es
inc
out
loopne
nop
test
int3
leave
jns
lahf
inc
jne
sti
push
into
mov
mov
fwait
nop
and
push
out
xchg
das
sub
mov
xlat
inc
daa
dec
xchg
popf
or
add
ret
cmp
movsl
stc
jg
push
xchg
in
mov
jbe
jp
jne
mov
pushf
and
pop
cmp
out
push
xor
sbb
aas
imul
xchg
pop
or
sub
cmpsb
dec
or
int
inc
xchg
ljmp
sbb
dec
jecxz
dec
add
adc
out
je
mov
mov
sbb
into
xlat
and
xchg
repz
lds
fcoml
orb
cltd
add
ds
mov
scas
adc
into
jl
jg
scas
push
cmp
mov
or
in
ret
adc
imul
xchg
mov
or
dec
movsb
sbb
jnp
movsb
push
mov
rcrb
cmp
jmp
int3
add
adc
imul
jno
in
pushf
jno
lds
mov
addr16
add
and
decb
adc
cmp
push
lock
inc
sbb
lcall
mov
pushf
and
mov
fldenv
nop
fiaddl
enter
push
movnti
mov
mov
data16
fisttpl
sub
inc
lret
scas
scas
push
stc
mov
jnp
arpl
jp
nop
mov
sbb
xor
jecxz
fisubl
push
lea
loopne
hlt
push
dec
leave
mov
out
sub
mov
and
call
push
mov
jae
cmp
mov
ljmp
or
out
sub
and
lahf
or
jnp,pn
xlat
daa
mov
out
hlt
inc
rclb
and
or
cld
mov
pushf
sti
jae
push
sub
in
adc
mov
push
mull
popf
or
xor
xchg
imul
sti
push
or
pop
cmp
shll
shl
inc
daa
lcall
mov
dec
mov
xor
and
adc
pop
jmp
mov
cli
jmp
test
push
ja
pop
cwtl
jg
lret
mov
dec
popa
dec
test
jo
xchg
add
lds
lods
pop
cmp
sub
loope
add
mov
lock
pusha
les
icebp
cmp
into
into
xor
or
sbb
rol
add
mov
sarb
mov
daa
shr
movsl
mov
xchg
cmpsb
inc
shrb
mov
inc
adc
scas
inc
and
loopne
and
je
mov
data16
arpl
test
jno
in
inc
push
nop
rcll
inc
add
fs
cli
fisubl
push
push
jno
adc
mov
pop
ja
push
inc
in
shll
xchg
into
fsubrp
out
mov
sbbb
dec
cmp
mov
stos
adc
fcoml
mov
mov
das
test
pop
ljmp
push
fidivs
mov
cmp
cwtl
ror
xor
das
push
jge
mov
leave
sbb
std
inc
xchg
nop
xchg
rorl
out
dec
ja
xor
clc
and
xor
jns
mov
inc
das
sub
adc
lahf
lods
push
and
scas
into
push
sbb
jecxz
pushf
cmp
outsl
orl
xor
movsl
repnz
rcl
jmp
jmp
sub
adc
mov
leave
lea
pop
outsb
xchg
and
mov
ret
js
movsb
mov
push
cwtl
inc
data16
mov
notb
cmp
test
dec
rcr
imulb
cwtl
mov
pop
movsl
mov
xor
jg
addps
push
push
push
dec
mov
lahf
lcall
jl
push
mov
scas
test
jmp
mov
and
lret
popa
xchg
fsubrs
loop
xor
dec
lcall
jb
sub
bound
add
ret
or
lods
mulb
sbb
add
cmp
lock
mov
adc
adcl
mov
inc
jge
mov
mov
cmovs
sub
aam
sysexit
test
pushf
imul
inc
in
and
push
xor
mov
stos
mov
in
js
cmp
call
sbb
xchg
fidivs
mov
add
jmp
xor
repnz
jae
mov
jp
push
mov
lock
in
jo
mov
outsb
lahf
sbb
outsb
push
xchg
ljmp
mov
stc
std
push
addr16
push
push
movsl
pop
mov
pop
dec
sub
mov
ljmp
dec
adc
in
insl
loop
xorl
aas
sub
and
in
sub
cwtl
xchg
aam
fsubl
test
adc
rcrb
add
xor
xchg
adc
push
daa
aad
sub
movsl
sbb
or
shll
cmp
add
clc
jns
jbe
push
cmp
test
scas
pop
pop
cli
pop
int3
outsb
inc
out
jl
dec
arpl
outsb
sbb
ret
movsb
adc
fadds
or
aad
pop
sub
scas
add
pop
mov
lret
addb
sbb
pop
mov
fs
frstor
jae
loope
pop
push
stos
sti
test
lds
fsubl
cmp
cs
mov
imul
mov
mov
mov
pop
es
cs
stc
call
sti
cmpsl
xchg
jmp
rcrl
mov
xchg
es
dec
inc
repnz
sub
lods
lods
outsb
push
fdivs
pop
mov
test
pop
adc
adc
jnp
push
pop
cld
testl
fisttps
push
sti
add
sarl
mov
add
stos
idiv
mov
cmpsl
xor
adc
lret
insl
rcl
dec
mov
mov
pop
add
jp
adc
shlb
mov
int
ds
push
cld
jmp
xorb
ds
or
or
fdivrs
xchg
sbb
mov
lret
push
shll
daa
xchg
paddd
cs
fucomi
int3
adc
xor
jns
aad
fucomip
stos
xlat
mov
lds
test
sbbb
ds
inc
cmp
pop
ret
nop
jl
mov
pop
aad
pop
movl
fnstcw
popf
mov
movsb
xchg
addr16
inc
adc
aad
loopne
cs
mov
xchg
leave
imul
pop
dec
repnz
pop
mov
shlb
dec
leave
and
pop
mov
or
mov
cmp
fs
jne
aaa
lret
mov
lret
popf
dec
aas
adc
negb
popa
inc
sti
lfs
sbb
insb
mov
fwait
cmp
jge
adc
sbb
mov
pop
and
fisubrs
stos
ja
adc
pop
or
mov
inc
insl
mov
js
add
pop
xor
push
jb
ret
outsl
les
cmp
inc
inc
stos
lahf
dec
scas
into
test
pushf
pushl
in
repnz
pushf
and
xchg
and
lret
ret
loop
sbb
add
popa
lcall
test
lret
xchg
mov
aaa
std
fistl
test
or
aas
std
and
and
dec
popa
cltd
pop
adcl
stc
ljmp
aas
call
or
test
sbb
jb
or
push
or
jnp
xchg
stos
movsl
cli
mov
mov
and
std
data16
xchg
in
ficoml
and
leave
cmpsl
cmp
adc
pop
cmp
pop
and
out
xlat
push
pop
fdivr
mov
jb
xor
adc
dec
ja
push
pop
pop
sub
lock
sub
cmpsb
jl
push
and
stos
jmp
mov
add
fdiv
in
jl
loope
test
mov
or
mov
pop
adc
ss
loope
movsl
add
push
ljmp
xlat
inc
pushf
rorb
shlb
mov
shrl
loope
mov
pop
aam
arpl
ja
mov
push
subl
ja
rcll
jecxz
aam
fucomip
rorl
jmp
pop
xor
add
sub
push
dec
mov
mov
xchg
std
jbe
or
mov
and
xchg
imul
inc
adc
or
mov
xor
clc
mov
push
cwtl
xor
xor
push
iret
xchg
mov
xchg
jmp
lods
inc
daa
mov
in
rcr
xor
popa
movsl
xor
sbb
pop
push
xor
sbb
popa
dec
lods
cmpsl
imul
iret
xlat
fdivs
imul
lods
ret
pop
nop
ficoms
mov
cmpsb
xor
pushf
ja
nop
stos
andl
test
jae
into
cwtl
mov
pop
mov
adc
push
push
and
adc
inc
push
dec
cmpsl
icebp
dec
fimull
inc
push
dec
add
xchg
fadds
xor
push
fdivrp
xor
lods
mul
pop
pop
xorl
sbbb
les
or
jecxz
ds
cmpsb
cld
add
imul
out
mov
lret
sti
rorl
mov
popa
jbe
xchg
lods
mov
jecxz
pushf
popf
lahf
insb
and
cs
adc
bound
mov
adc
sub
push
addr16
sbb
loopne
jle
jl
pop
inc
cld
inc
mov
nop
ds
in
mov
jg
cld
std
dec
sbbl
aad
jbe
add
mov
xchg
arpl
push
or
jmp
insl
stc
imul
inc
sahf
push
inc
sub
dec
jae
loope
loope
mov
push
xorl
push
xchg
add
sub
or
inc
daa
pusha
xor
jno
or
in
jle
nop
add
or
fsubrl
xor
mov
das
sbbb
lahf
lret
popf
inc
push
neg
push
lock
out
sbb
dec
sbb
mov
movsl
xor
fdivs
add
fwait
dec
lcall
xchg
sub
jo
iret
jbe
pop
mov
push
aam
and
adc
inc
mov
scas
lds
mov
xor
sub
jmp
loop
cs
and
clc
mov
or
insl
adc
mov
imul
shll
lods
js
mov
ficoml
cmc
ret
hlt
imul
repz
test
shrb
jmp
xlat
cmp
mov
cmp
push
test
xchg
test
cmpsl
adc
leave
add
jg
ret
es
push
pop
pop
sub
xlat
sahf
mov
subl
stos
addr16
icebp
xchg
fdivl
lcall
rorl
inc
mov
lahf
movsl
scas
adc
xor
cmpsb
adc
mov
mov
iret
shlb
cwtl
into
out
fiaddl
pop
outsl
aaa
das
push
mov
push
pushf
and
cld
daa
push
add
adc
mov
out
push
in
ffreep
pop
push
add
mov
fisttps
mulb
inc
mov
pop
popa
sbb
shr
test
call
pop
sbb
mov
add
xor
mov
cmp
adc
pop
jle
cmc
stos
sub
xchg
mov
jne
inc
mov
jnp
add
ss
enter
sbb
cmp
inc
mov
xchg
dec
mov
sbb
mov
sbb
popa
notb
scas
shll
imul
jb
mov
jne
mov
mov
and
dec
push
adc
mov
aas
mov
aaa
inc
inc
add
inc
add
call
push
cmpsb
and
popf
mov
imul
adc
xchg
push
insl
aad
xlat
jl
jno
subl
movsl
mov
jns
or
xor
xchg
popf
into
sub
cmp
ds
popf
mov
popf
xor
cmp
mov
or
test
popa
das
and
mov
fdiv
cs
pop
xor
lds
inc
ret
imul
dec
ret
push
stos
int
insb
sti
subl
leave
les
fcmove
sarl
sub
sub
pop
mov
xchg
add
xor
int
ds
adc
js
xchg
add
out
sub
loopne
dec
in
jl
dec
or
insl
xorb
out
test
xchg
aam
test
pop
dec
cld
mov
mov
add
in
sbb
xlat
xchg
cmpl
insl
sbb
hlt
pop
fisttpll
mov
daa
cmc
push
and
pop
sub
out
cmpsb
movsl
fcmovne
inc
jns
test
push
hlt
imul
aad
outsb
in
inc
test
mov
mov
cld
fdivr
subl
sub
sbb
frstor
loop
sbb
stos
andb
xchg
in
jge
pop
xor
inc
pop
pop
adc
xchg
inc
inc
cld
sti
movsl
push
xchg
or
jbe
iret
int3
jns
fisttpll
cwtl
cld
xchg
je
pop
in
in
mov
fcompl
pop
loopne
mov
inc
rep
sub
pop
mov
test
imul
adc
adc
repz
adc
or
push
fwait
stos
loopne
ret
pop
stos
imul
loope
mulb
dec
mov
xor
jge
add
mov
dec
js
jns
mov
in
inc
jmp
and
loope
mov
test
jge
stc
fidivrs
pop
push
jge
lds
jno
sbb
test
inc
scas
push
aad
xchg
pop
fldl
fnstcw
out
fdivrs
lods
xlat
xchg
lret
mov
rorl
cmp
adc
mov
jecxz
mov
shrl
call
mov
mov
lock
sbb
lock
pop
and
iret
and
fdivl
fiadds
pop
adc
pop
ret
mov
cmp
add
dec
out
test
push
sub
popa
sub
dec
mov
push
std
mov
or
jge
push
jne
test
sub
cmpsb
nop
adc
mov
ss
sub
jns
add
sbb
test
jae
xchg
pusha
cmp
sbb
pop
sub
ret
sahf
xor
int
mov
push
jno
adc
xchg
rolb
jns
sub
mov
daa
sbb
and
jnp
xchg
or
mov
aas
fimull
es
xorb
aad
mov
ret
leave
fisttpll
inc
cld
int3
adc
xor
push
fiaddl
mov
js
fstpt
leave
pushf
mov
stos
ljmp
fcmovbe
sbb
fnstcw
lods
mov
mov
pop
adc
cltd
lret
rolb
inc
js
mov
pop
call
stos
push
fnstsw
push
int3
adc
adc
lret
jge
data16
add
inc
scas
iret
cmp
mov
mov
mov
cmp
add
or
scas
scas
out
add
jbe
add
inc
test
mov
and
push
xchg
adc
ret
ja
adc
xchg
push
fisttpll
ljmp
and
js
sub
shll
push
xor
test
popf
and
mov
ret
pop
ret
loop
arpl
xlat
jl
out
inc
rolb
jp
hlt
enter
add
fnstenv
jle
arpl
mov
add
mov
adc
aad
imul
out
cwtl
adcl
out
mov
ja
outsb
adc
test
repnz
dec
cmp
in
add
subl
add
sbb
mov
cmp
je
mov
insl
fnstsw
mov
stos
fwait
out
cwtl
jbe
cmp
xor
adc
out
shll
cmpsb
dec
clc
test
and
rcrl
loopne
lea
fninit
push
enter
inc
aaa
out
jg
sbb
jne
jne
mov
loopne
or
call
xor
enter
aas
jne
push
sub
cs
gs
sti
mov
jecxz
fdivs
daa
arpl
sbb
jle
test
lods
je
dec
push
insl
test
hlt
out
xchg
nop
jne
push
mov
gs
rolb
sti
inc
add
mov
test
xor
xchg
mov
push
repz
lret
sub
cmpsl
xchg
add
divl
imul
test
mov
xlat
and
outsb
pop
mov
and
bound
mov
dec
lret
fisubrl
fnsave
test
cmp
add
push
mov
mov
or
adc
adc
mov
push
aaa
sahf
cmpsb
mov
lea
mov
jl
pop
dec
jb
dec
sub
addr16
add
push
out
mov
mov
fdivp
out
stos
iret
push
dec
mov
fnsave
cmc
testb
or
mov
cli
movsl
sub
sub
jbe
or
sbb
sub
ss
cltd
mov
sbb
les
scas
pop
jno
pop
xorl
mov
cmp
push
sub
cmp
inc
sub
std
pop
add
push
rcl
test
in
pop
inc
adc
mov
pusha
push
jg
enter
inc
fildl
xchg
out
movsb
mov
xchg
out
cmc
mov
mov
xchg
add
inc
test
inc
imul
fistpll
pop
push
cltd
pop
inc
stos
sbb
sub
inc
rcll
xchg
cmpsl
jae
dec
sar
int3
scas
lods
sub
into
xchg
arpl
xor
sub
inc
aad
out
or
push
jbe
sbb
pop
lods
jle
popa
mov
jg
cltd
int3
xchg
mov
cmp
hlt
jo
pop
cmp
xchg
and
mov
jns
loope
cmp
subl
push
push
mov
push
sahf
push
jb
das
jne
daa
push
xor
adc
lret
aam
xchg
pop
icebp
movb
mov
cmp
pop
lds
outsb
push
jae
lcall
mov
xor
adc
sahf
outsl
mov
sbb
jg
and
adc
pop
in
mov
stos
mov
sub
out
xchg
jl
inc
lock
sub
push
push
jge
movsb
aaa
movsl
out
cmpsb
ss
inc
mov
sahf
mov
mov
loopne
dec
sti
mov
dec
cmpsl
and
sub
incb
loope
out
mov
test
xchg
lret
or
mov
insl
or
push
add
test
addr16
add
jno
lods
jge
dec
out
pop
movsb
adc
or
shll
int3
std
pusha
fdivl
jg
lret
pop
sub
xchg
dec
push
outsl
mov
pop
cli
cwtl
popl
add
xor
shlb
daa
shr
push
jp
xchg
push
pop
pop
ror
inc
xor
add
inc
mov
pop
enter
add
sahf
xchg
in
dec
test
add
lahf
in
aaa
fstpl
stos
jecxz
jo
adc
fwait
sub
popa
dec
or
repz
add
es
std
mov
dec
add
js
movsl
jmp
sbb
push
out
aaa
shrb
xor
push
mov
pop
xchg
dec
testb
jp
jo
ret
jns
int3
xchg
push
lret
mov
sub
movsb
mov
inc
push
out
enter
jne
add
scas
pop
push
push
mov
loopne
cmc
sbb
cwtl
push
fwait
cld
mov
lds
mov
dec
jbe
inc
adc
fnsave
xchg
pusha
in
ljmp
loopne
mov
and
mov
mov
inc
push
js
push
mov
jmp
pop
mov
ljmp
shrl
es
mov
repz
xlat
out
or
xchg
jb
dec
subb
push
ret
mov
mov
jl
inc
mov
mov
sbb
and
das
sbb
xor
insl
stc
jmp
sub
imul
or
in
mov
xchg
aam
pop
inc
push
ja
jnp
notl
adc
flds
xchg
decl
mov
or
inc
cs
divl
out
inc
sbb
jb
sub
and
jl
mov
mov
mov
cmpsb
shrl
pop
push
aad
xchg
int3
test
push
mull
scas
jae
cli
and
mov
pop
mov
pop
adc
mov
push
leave
push
pop
mov
sbbb
pusha
fists
push
xor
rol
sahf
aaa
push
lock
ds
fisttpll
inc
push
pcmpgtd
daa
ret
pop
popa
fs
lock
jge
aas
fnstsw
add
sbb
mov
or
jae
repnz
xor
push
js
repnz
mov
push
iret
je
mov
dec
test
jns
mov
add
or
mov
inc
scas
test
shll
scas
mov
fsub
hlt
push
sahf
dec
fisttpl
bound
jbe
jecxz
pop
scas
fcmovu
sub
fwait
repnz
rol
mov
xor
in
pop
cltd
rorb
adc
add
movsl
add
lods
jo
mov
sub
cmpsl
je
stc
out
lea
cmp
imul
adc
lock
enter
stos
jg
pop
adc
push
rcl
rcl
sbb
add
or
aaa
inc
lock
mov
enter
sbb
popf
mov
out
or
lret
sbb
pop
cmp
inc
mov
movsb
inc
xchg
push
sub
xchg
lcall
and
inc
and
push
jbe
sbb
ljmp
mov
push
xchg
movb
in
mov
movsb
lret
inc
subps
xor
push
adc
insb
int3
ret
fwait
test
pusha
xor
xor
xlat
or
sbbl
imul
jae
aas
mov
and
sbb
jecxz
lods
pop
fwait
xor
xchg
dec
sbb
sbb
out
rolb
mov
push
jg
push
loope
mov
outsl
cmp
adc
test
fists
xchg
loope
loope
jmp
bound
and
rcll
xor
jmp
repz
cmp
jmp
or
dec
inc
add
pop
mov
sub
push
sub
mov
dec
adc
cltd
adc
clc
std
loope
jle
addr16
ret
sti
push
sub
jmp
sub
lcall
inc
mulb
pop
xchg
pop
in
scas
jp,pn
adc
fwait
in
sub
mov
repnz
cmc
or
into
je
aad
in
dec
mov
je
and
sbb
sbb
daa
hlt
shl
and
pushf
inc
rorb
inc
ss
mov
dec
xor
into
lret
or
scas
add
fs
inc
jge
xchg
clc
outsb
mov
xlat
sahf
mov
cmpsb
das
mov
sbb
ds
push
push
std
push
xor
mov
jp
mov
int3
jle
and
jnp
cmp
pop
cmp
popf
lfs
pop
shr
popf
in
jb
jns
pop
mov
mov
negl
cs
test
jmp
imul
add
xor
call
jp
mov
test
xor
fldt
inc
jo
in
fwait
es
pop
and
ds
adc
mov
and
and
cmpsl
add
cmp
inc
jb
and
pop
and
pop
push
and
jns
loop
mov
ljmp
xchg
inc
stos
push
mov
inc
dec
or
js
push
insl
int
sbb
inc
sbb
jne
fdivl
jle
jne
fcomp
mov
pushf
lods
adc
imul
dec
push
cmpb
clc
imul
std
dec
mov
lods
push
mov
popf
mov
sarb
xchg
ret
adc
cmpsl
and
cmp
scas
lea
adc
sbb
push
pop
push
sub
jnp
insb
lcall
and
jae
rcrl
mov
lods
push
mov
push
iret
adc
std
or
mov
hlt
dec
fucomip
xor
mov
or
inc
push
popa
aas
sbb
xor
cmpsl
push
push
inc
incb
arpl
mov
xchg
pusha
mov
fiaddl
iret
cmc
lcall
push
aas
cmp
lcall
jecxz
outsl
mov
aas
jne
cmp
adc
aas
jge
test
cmc
je
sbb
cmp
lods
cmp
scas
sahf
jnp
mov
nop
scas
lds
shl
fisubl
leave
fiadds
lret
jg
push
in
xor
cmc
arpl
imul
pop
test
cmpsb
lods
js
push
lods
xor
jno
std
out
or
sar
xor
std
scas
cltd
daa
adc
out
mov
push
dec
inc
test
xor
movsl
paddsw
mov
mov
pushf
das
aas
lock
in
gs
bound
push
pop
sbb
or
and
mov
pop
dec
popa
dec
add
mov
and
pop
and
mov
leave
sub
add
push
out
inc
cmp
dec
test
insl
adc
mov
adc
repz
out
adc
pop
and
data16
add
cmp
and
mov
jecxz
adc
sbb
xchg
adc
and
adc
stos
fisubrl
sbb
or
adc
pusha
and
push
int
xorl
push
pusha
sbb
mov
jmp
inc
pusha
pop
inc
xchg
imul
mov
imul
inc
sub
xor
xor
jmp
lret
je
push
xor
movsl
xor
dec
or
movsl
sti
adc
ds
lret
xor
loopne
add
push
lds
mov
mov
push
pop
push
loope
loopne
sbb
or
mov
enter
pop
shl
gs
pushf
orl
jbe
sahf
shrl
jp
fmul
push
sbb
jnp
pop
jmp
mov
inc
cmpsl
arpl
cmp
push
inc
or
jo
or
sub
test
and
test
inc
loop
ss
mov
dec
out
loopne
dec
mov
out
arpl
jle,pn
jo
dec
pop
int
jbe
and
pop
fucompp
insl
inc
out
aam
in
in
out
and
sti
mov
pushf
mov
cmp
jecxz
orl
sbb
mov
rcrl
shll
pop
xor
mov
imul
and
lea
mov
add
gs
pop
adc
mov
mov
sbb
out
push
out
cmp
lahf
mov
dec
xor
or
cmpl
add
mulb
mov
pop
fwait
popf
sub
fcmovb
jmp
idivb
inc
rorb
dec
pop
hlt
arpl
push
inc
cmp
mov
dec
mov
push
lea
int3
mov
push
inc
push
sub
lods
xor
xchg
in
mov
cmp
lea
test
insb
shrl
pop
out
cwtl
sub
in
decl
or
inc
xor
cmc
sbbb
mov
shll
push
enter
sub
jmp
adc
xchg
iret
aam
or
push
inc
cmpb
dec
adc
std
xor
inc
dec
test
jmp
pop
cmpsb
xchg
push
fnstsw
mov
pop
xchg
cmp
push
push
adc
jl
aas
dec
imul
in
dec
add
orb
cld
outsb
xchg
mov
mov
aad
loope
aas
enter
sbb
rcl
mov
add
into
pop
mov
mov
jns
int
dec
aam
lds
dec
je
into
repnz
inc
mov
movsb
fwait
jle
test
push
rol
mov
or
fildl
aaa
push
lods
lcall
or
movsb
insb
jns
andl
pop
mov
push
push
cld
and
out
orb
mov
adc
stc
sbb
cltd
mov
scas
inc
xchg
inc
sub
or
push
fidivl
and
mov
outsl
push
xchg
cli
mov
ds
push
inc
js
xor
xchg
pushf
or
push
jo
sbb
jecxz
xor
hlt
xor
or
inc
out
push
fs
cld
rorl
imul
mov
mov
cli
push
or
sbb
scas
mov
and
jne
push
add
dec
outsl
jnp
fsubp
dec
lret
mov
mov
addr16
cmp
clc
cmc
arpl
mov
cwtl
movsb
push
enter
xchg
cmp
mov
push
sub
xlat
push
addr16
mov
test
mov
rorb
popa
mov
push
jo
sbb
sbb
test
push
ja
mov
xor
pop
movsb
idivb
clc
sub
ss
sbb
fldcw
pop
xchg
dec
pop
pop
out
insb
scas
int
add
sbb
fwait
mov
lods
cwtl
xor
insb
push
push
into
out
fistps
lods
pop
push
lock
push
jp
adc
rcrl
insb
adcb
stos
outsb
xlat
aaa
inc
enter
mov
jl
sbb
insl
pop
fsubrs
xchg
lret
pushf
ds
or
push
or
je
add
notl
sub
je
pop
mov
addr16
fmull
dec
int
jmp
mov
inc
not
lods
lea
and
mov
sahf
cmp
pop
pushf
faddp
mov
xchg
pop
popa
pushf
add
divb
jle
repnz
mov
pavgb
jl
fyl2x
mov
mov
mov
mov
xchg
mov
push
lret
into
and
lret
and
add
das
lea
sbb
jp
xor
sbb
mov
scas
inc
int
popf
ret
rclb
insl
mov
mov
repz
jle
add
das
cltd
pop
sbb
cmp
fists
fsubl
sub
lds
push
inc
cmp
push
in
sub
xchg
jo
loop
addb
jl
inc
outsb
popa
outsl
fistps
pop
cwtl
dec
jnp
repnz
fwait
in
mov
lret
xchg
sbb
jnp
mov
lods
jl
jle
fidivs
adc
mov
fnsave
jge
mul
pushf
xchg
sbb
rcrl
mov
pop
add
jle
mov
jmp
or
fisttpll
lret
xor
popa
lcall
stos
mov
test
mov
clc
roll
stos
outsl
pop
stos
fwait
stos
add
mov
dec
or
and
push
scas
lahf
aad
std
push
jmp
das
push
insb
ret
inc
cmp
jle
lds
mov
jnp
pop
aas
loope
pop
clc
xchg
loop
xorb
mov
mov
sub
push
stos
les
cmp
sub
lods
outsl
aad
sub
jne
xor
cmpsb
and
mov
push
push
push
repz
jo
jecxz
mov
dec
jle
xchg
xchg
data16
lods
and
mov
sub
jp
sti
dec
call
add
pop
inc
aam
mov
lea
ljmp
lret
adc
sahf
add
xchg
inc
add
and
insl
aam
call
data16
sub
mov
pop
sahf
mov
ror
cmp
xchg
mov
adc
test
cwtl
xchg
iret
repnz
ret
iret
arpl
add
stos
pop
lret
js
test
add
cmp
and
push
mov
mov
cld
loopne
in
shrb
pop
ret
pop
popf
mov
push
jns
std
mov
ja
and
mov
scas
push
jno
push
mov
outsl
rcrl
lret
jo
add
mov
mov
les
dec
mov
les
inc
push
test
cmp
cmp
push
xchg
jno
sbb
mov
mov
aas
mov
push
mov
push
and
std
sbb
dec
mov
leave
pop
sarb
or
mov
test
mov
push
push
jbe
mov
ret
jl
fmul
out
clc
out
push
and
push
mov
jmp
mov
mov
test
lret
adc
and
fldt
sub
notl
std
sbb
mov
test
or
sti
add
mov
pop
mov
cmp
pop
int
jae
shrl
shll
cmp
das
call
and
and
pushf
xor
nop
xchg
cs
rcrl
jp
xor
pop
in
mov
jae
icebp
inc
out
dec
neg
pop
out
into
dec
fiadds
filds
fcoms
mov
jmp
pop
fsubrs
incl
sti
inc
stos
xchg
add
xor
movsb
outsl
jnp
sbb
xchg
scas
and
ds
adc
pushf
inc
or
fildl
push
rcrb
xchg
aad
int
incl
fmuls
dec
lock
fistl
iret
aaa
outsb
ds
push
dec
inc
lret
xchg
inc
out
in
mov
push
aaa
jae
test
add
int
xchg
outsl
add
popa
clc
sub
cwtl
insl
js
cmp
push
and
shll
shl
inc
subb
inc
and
fisubl
mov
popf
rclb
movsl
cmp
add
pop
mov
cltd
xor
push
fidivrl
aas
sbb
xchg
and
mov
aad
notl
aam
cli
out
outsl
xchg
dec
mov
xchg
loope
popa
xor
jae
das
outsb
jmp
dec
mov
outsb
clc
sbb
stos
call
push
cltd
fisttps
jmp
pushf
cmp
mov
inc
and
push
mov
jns
cmp
insb
push
xor
mov
cmp
mov
sbb
loopne
pop
xchg
cltd
dec
pop
sub
inc
stos
shlb
cmp
cwtl
lcall
cmp
pusha
jg
test
aam
ds
shll
dec
cli
adc
ficoms
mov
test
sbb
sbb
frstor
pop
hlt
test
cltd
fcomps
cltd
cmp
mov
out
sub
mov
outsb
jp
lret
adc
cld
push
pushf
cmp
mov
mov
or
fdivrs
add
aas
mov
sbb
outsl
sub
sbb
adc
dec
fs
xor
push
push
movsl
js
popa
mov
fxch
inc
push
nop
dec
cld
xchg
pop
adc
xor
sbb
xchg
loopne
sub
jmp
dec
sub
movsl
ficoml
add
into
ljmp
mov
sbb
js
fwait
mov
jae
fcoms
leave
pushaw
ret
insb
jp
inc
arpl
into
testl
out
bound
xor
xchg
or
dec
insl
sub
mov
push
dec
jne
pop
mov
leave
xor
aam
cli
movsb
and
adc
lods
push
gs
notb
call
sub
dec
loopne
jmp
arpl
sbb
cld
push
js
mov
pop
inc
mov
in
sub
outsb
testl
jns
xor
push
inc
nop
ss
enter
adc
hlt
dec
pop
adcl
lcall
ret
rcl
int
adc
xor
sbb
mov
sub
mov
fucom
push
xchg
faddl
ljmp
xchg
sahf
das
shl
xor
jg
pop
push
sub
inc
loop
call
sub
sub
cmpl
xchg
rclb
inc
jmp
mov
idivl
incb
and
out
jmp
lea
gs
jns
xor
xchg
mov
push
and
mov
fsubrp
repz
mov
xorl
mov
out
lods
jns
das
out
sub
clc
pushf
jno
mov
cmc
mov
pop
jmp
out
outsl
cmp
cmp
lea
xor
lods
cmp
leave
pop
outsl
or
andl
pop
cmpsl
cld
bnd
call
ja
rcll
rol
outsb
addl
psubd
stos
test
jno
in
dec
cmp
repnz
mov
aad
movsl
dec
lea
mov
adc
lods
popa
cmpsl
mov
mov
sub
mov
xchg
test
sub
inc
mov
mov
add
rorl
push
xchg
push
sub
mov
into
jae
push
jge
imull
adc
lcall
cmp
insb
rolb
loope
cmpsb
fisubl
mov
shlb
leave
cld
imul
sbb
nop
lcall
dec
movsl
iret
push
insl
jnp
or
cwtl
aad
pop
mov
push
cltd
cmpsl
decl
mov
fsubs
cmp
push
loopne
xor
sbb
xchg
sbb
cmp
adc
in
sub
data16
or
mov
mov
loope
bound
jle
adc
stos
jb
cmpsl
aaa
sbb
mov
pop
pop
sbb
jle
out
push
imul
inc
adc
mov
pop
aam
adc
ret
xor
inc
and
lock
btr
jge
notb
xchg
adcb
fadds
push
cmp
data16
dec
inc
inc
fldcw
pop
adc
into
insl
jo
mov
jns
sarb
sarb
pop
les
xchg
jb
xor
rorl
add
clc
or
mov
xchg
test
into
lcall
and
jb
rclb
lds
push
push
ror
xor
mov
nop
aas
pop
nop
test
loopne
and
inc
vdivps
sti
rcrl
xchg
xor
gs
xlat
testl
imul
dec
aaa
push
adc
std
xor
pop
popf
loopne
xchg
shrb
mov
lcall
cmp
cmp
sti
js
mov
and
xor
das
or
xor
mov
pushw
mov
lea
cwtl
push
sub
sbb
xchg
loope
mov
call
repnz
xor
push
repz
inc
add
insl
ljmp
mov
mov
jns
jge
and
mull
cmp
push
pop
inc
inc
lods
dec
mov
add
sahf
dec
fildll
clc
ror
sub
jno
sub
les
add
orb
into
cmpsb
ljmp
cmp
inc
js
cmp
rcrb
mov
mov
loop
and
jg
mov
enter
fsub
push
lds
pushf
mov
mov
inc
movsb
lret
repnz
in
push
dec
cmp
pop
cmpsb
aaa
inc
lods
dec
daa
pop
fldl
or
or
faddl
icebp
or
cli
ds
xchg
aad
icebp
mov
data16
out
ja
dec
clc
in
mov
pusha
pop
in
push
push
push
add
push
cmp
lock
xor
sub
sub
rcrl
xor
inc
ficompl
mov
test
mov
call
sub
mov
loopne
rcrl
subl
xor
mov
xor
shrb
mov
xor
and
mov
mov
imul
jnp
or
mov
pop
xchg
push
imul
inc
ja
mov
seto
jge
test
mov
push
gs
sub
gs
in
mov
jnp
mov
fisubrl
insl
dec
fbld
mov
hlt
xchg
push
or
shr
pusha
jno
dec
inc
cli
sub
in
cmc
lret
xor
nop
pop
inc
icebp
sbb
push
jmp
pop
mov
and
int
push
movsb
repz
imul
popf
add
into
test
add
or
outsl
or
out
in
repnz
frstor
lret
inc
cmc
dec
sub
ret
mov
aas
lcall
mov
nop
push
xor
xor
sbb
pushf
push
lret
rcr
icebp
push
or
dec
pop
pop
cmc
cmc
cmp
fidivs
push
push
dec
adc
mov
mov
out
pop
mov
out
adc
push
xchg
add
dec
cmp
std
push
dec
dec
jno
fadds
push
inc
pushw
stos
jbe
pop
dec
cmp
mov
or
inc
in
xchg
ljmp
pop
imul
inc
pop
xorl
sub
add
mov
mov
in
movsl
call
faddl
pop
lods
push
outsb
cmpsl
lea
mov
xchg
js
fstps
in
and
lahf
adc
les
fdivrl
pop
shll
push
rclb
inc
out
fisttpl
orb
addb
lahf
dec
push
cmp
imul
int
imul
test
cmp
aaa
enter
cmpsl
push
xor
and
pop
mov
sub
jmp
repnz
lret
leave
dec
je
mov
mov
jecxz
sbb
adc
cmpsb
xchg
arpl
mov
in
push
or
ja
mov
mov
loop
sub
scas
fistps
xor
or
jnp
push
xchg
push
push
jmp
mov
pop
mov
jp
xlat
aaa
cltd
aad
jecxz
data16
scas
cwtl
dec
mov
pcmpgtd
mov
mov
sbb
push
lods
shlb
inc
icebp
in
lahf
test
dec
dec
mov
push
mov
cmp
adc
imul
cmp
call
lea
test
in
sub
insb
shlb
rcrl
inc
pushl
jne
and
xchg
cmp
sbb
mov
push
mov
dec
mov
mov
lret
sub
xor
movsl
fisttps
lock
inc
sub
push
jecxz
je
inc
out
adc
xor
sti
les
fidivl
movsb
pop
lods
inc
es
mov
mov
fimull
dec
pushf
fmull
test
pop
dec
xor
dec
sbb
cmpsl
xchg
add
mov
adc
cmc
jge
mov
cmc
push
or
int
push
and
aad
lods
or
fst
fwait
aam
mov
cwtl
push
jns
jp
xchg
and
and
xchg
sub
mov
jge
push
fs
cmp
in
dec
lahf
daa
cld
pop
and
mov
xor
aam
mov
jne
andl
cld
in
in
and
dec
dec
fwait
negb
mov
xchg
shl
xchg
or
es
fnstenv
xchg
mov
cmp
add
lods
les
pop
adc
pop
add
or
fisubrl
sbb
pop
std
popa
xchg
mov
jge
or
push
data16
cmp
out
adc
jns
and
sbb
test
mov
push
stos
stc
aas
pop
lds
sbb
fnstenv
cmpsb
add
mov
arpl
jl
jo
lds
cltd
add
sbb
fisubs
addr16
push
ret
add
mov
jge
push
les
popa
sbb
pop
or
pop
pop
xchg
fldz
fstpt
outsb
sub
cwtl
out
pop
mov
adc
mov
push
int
sbb
lods
dec
icebp
lock
lret
pop
pop
scas
xchg
mov
jp
outsl
xchg
cld
mov
xor
adc
and
dec
pushf
fcoml
adc
pusha
iret
xor
sbb
int3
stc
mov
sbb
movsb
inc
and
xor
jae
mov
sbb
mull
std
test
fcmovu
jmp
jle
and
mov
sub
xor
sub
mov
int
cmp
and
add
dec
insb
rolb
jae
lret
mov
das
lcall
cmp
shr
inc
add
dec
insl
fdivrs
adc
sub
cmp
push
loopne
lret
outsb
aas
dec
and
push
out
and
frstor
cli
adc
cli
je
dec
sahf
mov
movsl
sbb
in
jno
ja
xchg
push
sub
add
sbb
ja
mov
inc
dec
dec
popw
adc
lret
pusha
inc
sbbl
pop
and
pop
leave
jns
imul
lods
out
add
mov
push
stc
in
not
mov
aam
mov
insb
movsb
inc
mov
iret
cld
inc
adc
mov
fs
sub
cltd
add
daa
out
or
pop
movsl
mov
pushf
into
adc
nop
mov
mov
xor
xor
pop
lea
and
jmp
and
mov
pop
xchg
inc
mov
cmp
fisttpl
adc
pushf
jo
das
ficompl
icebp
imul
add
aad
cmp
dec
mov
repz
fldcw
repnz
fcmovnb
pop
adc
jno
loope
std
adc
mov
mov
jle
mov
xchg
incb
call
cli
cli
imul
mov
mov
sbb
jmp
rolb
mov
addr16
popw
add
test
cmp
ja
rcl
xchg
ja
testb
mov
in
mov
into
dec
and
jns
sub
cmp
mov
mov
scas
loop
je
pop
xor
rol
repnz
das
scas
stos
ss
test
pop
lret
mov
iret
or
insl
lock
jb
lret
dec
loopne
iret
stos
lret
into
cmp
push
xor
and
inc
repnz
xchg
xchg
lret
test
jo
pop
pop
ss
xchg
mov
sti
cs
adc
call
lcall
jb
sahf
out
dec
arpl
or
pop
dec
jg
std
add
popf
icebp
adc
lds
xchg
js
inc
jg
imul
leave
add
add
sahf
movsb
int3
adc
and
dec
pop
test
ljmp
aas
shll
jmp
aad
mov
xor
jge
and
test
push
stc
jnp
mov
mov
ror
or
aas
dec
xchg
push
add
daa
mov
mov
pop
cmp
adc
loope
or
xchg
push
xor
pop
dec
pop
mov
shl
xorl
push
sub
pop
in
mov
xlat
call
jmp
lret
mov
pop
aas
in
push
push
fsubl
sub
jae
in
jne
xchg
pushf
dec
jb
and
jne
pop
into
hlt
and
mov
dec
jns
sub
dec
call
ja
pop
sub
enter
jb
test
cmp
les
mov
ljmp
scas
jp
sub
insb
or
jbe
cmp
add
movsl
mov
pop
sbb
out
cmpsl
repz
cwtl
fwait
loop
idivl
sub
out
mov
daa
dec
mov
andb
mov
pop
xor
push
gs
cmpsb
jecxz
or
addr16
xchg
and
push
xchg
repz
mov
mov
sbb
cmp
loope
cmpsb
mov
loopne
fisubl
stos
imul
daa
xchg
in
inc
mov
sbb
and
pop
mulb
mov
or
lret
fsubs
pop
push
int3
jp
pop
adc
movsl
jmp
and
mov
fmull
lods
ret
push
scas
aad
es
nop
cmpsl
sbb
subb
inc
outsb
or
stc
orl
lods
movsl
add
shlb
or
pop
push
dec
dec
lret
xor
add
xor
add
lcall
fwait
mov
inc
faddl
ret
or
push
test
aas
jle
enter
out
sbb
mov
inc
sub
loop
push
lods
push
push
arpl
lret
out
ret
scas
pop
mov
jns
icebp
hlt
pop
mov
leave
in
enter
stos
xor
and
mov
imul
jnp
jg
mov
mov
ss
lret
in
xchg
loope
hlt
shrb
xchg
sbb
jl
pop
cmpsl
cwtl
pusha
push
ss
xchg
pop
mov
movl
add
shlb
fwait
or
jmp
dec
mov
fdivrp
fdivl
pop
mov
inc
pop
scas
stc
data16
mov
dec
into
push
loopne,pt
dec
add
or
paddsb
add
fwait
push
pop
pop
pop
push
add
hlt
aas
push
add
sbb
sub
mov
test
mov
mov
icebp
rclb
test
shl
dec
jo
sbb
cmpsb
popa
cltd
jp
sub
adc
out
loopne
aas
push
xor
dec
push
and
cmp
rcll
cmp
inc
lds
out
or
cwtl
imul
repz
scas
inc
js
out
dec
in
outsb
popf
mov
inc
sub
movl
xchg
xlat
and
add
sbb
sarb
loopne
pop
xor
mov
inc
sub
jmp
or
or
mov
cmp
popa
rcll
pop
subb
insl
push
test
push
xchg
notl
dec
insb
loopne
pop
int
pop
cmpl
inc
jae
outsb
mov
in
cmp
repnz
dec
in
test
pop
xor
stc
repnz
mov
xchg
dec
cmpsl
mov
shrl
pop
jb
cltd
je
and
add
pusha
xchg
inc
cld
mov
pop
or
lods
lods
popa
and
and
or
push
sub
jge
sar
adc
sub
xor
add
inc
repz
jne
ret
arpl
shlb
out
mov
sahf
out
adc
pop
push
sarl
dec
das
dec
enter
lock
pop
jb
dec
adc
icebp
sub
fadd
sbb
inc
pop
jae
dec
jno
pop
jno
sbb
hlt
fcomps
cmp
add
xor
pop
push
pop
mov
and
rcll
cltd
scas
mov
mov
pop
loope
andb
xchg
in
inc
mov
stc
cmpl
sub
adc
inc
test
jbe
das
rorb
push
fmuls
into
shll
stos
jg
jo
test
into
lds
adc
sbb
sub
and
mov
push
push
insl
adc
push
bndldx
sbb
in
repnz
dec
js
sahf
sub
mov
xchg
pop
stc
pop
mov
pop
dec
stc
div
imul
push
sub
mov
mov
mov
jl
and
aaa
push
dec
mov
cmp
imulb
mov
lret
lds
xchg
repz
mov
jae
fs
mov
in
insb
inc
lds
test
cmp
adc
push
push
push
sahf
cmc
aas
and
xchg
pop
pop
pop
mov
in
xchg
jno
jmp
pop
xchg
js
pop
inc
clc
insl
jmp
xor
xchg
mov
and
clc
fsts
iret
call
mov
sbb
popa
xchg
cmp
fmull
inc
xor
adc
mov
dec
mov
mov
sbb
pop
pop
adc
aaa
fstpl
js
fiaddl
xor
sbb
jl
xchg
mov
sub
fnsave
xchg
in
mov
pop
dec
jmp
xchg
outsb
sub
cmp
in
scas
cmc
in
jl
push
sub
sub
and
push
cmp
jns
mov
pop
aaa
aad
xor
fldt
stos
je
push
cmp
mov
cwtl
cmpsb
xchg
repnz
loopne
inc
cli
addr16
aam
ja
nop
push
bound
sbb
imul
stos
dec
test
call
sbb
sub
sbb
xor
mov
loope
dec
adc
aas
sbb
and
sahf
add
outsl
mov
fstp
mov
andb
pop
push
mov
xor
addr16
mov
xchg
fs
add
fisubrs
inc
xor
adc
lcall
cmp
mov
outsb
mov
pop
push
aad
shrb
cmpsl
push
inc
cltd
lret
and
dec
loop
pop
movsb
dec
clc
xchg
dec
gs
fincstp
jae
pusha
jbe
add
adc
jg
loop
xor
pop
mov
xor
add
test
inc
pop
jle
push
addr16
cld
mov
int3
xchg
jne
mov
popa
cmp
or
xchg
lea
shll
cmp
cmpl
sbb
insl
adc
and
jo
inc
mov
ljmp
dec
testl
sub
leave
adc
data16
sti
insl
xchg
push
gs
mov
pop
jnp
shll
jo
mov
ret
mov
pop
mov
je
mov
xchg
aas
or
and
xor
into
ljmp
fldl
cmpsl
rorb
lock
xor
sbb
xor
jl
aas
mov
jno
fldl
lock
add
dec
leave
add
fs
aad
mov
cli
sub
clc
pop
adc
out
dec
mov
adc
mov
mov
sbb
pop
pushf
int
sbb
outsl
lea
nop
adc
out
inc
xor
aaa
rol
xchg
mov
sahf
leave
fldl
lea
pop
add
cmp
in
outsl
fildll
or
ja
aaa
call
cwtl
rorl
lahf
inc
cmc
js
or
ret
bound
xchg
pop
push
pop
mov
imul
mov
enter
xchg
test
sbb
aad
sahf
daa
xchg
out
ficompl
sbb
inc
push
mov
aad
fadds
xchg
push
inc
mov
add
jno
cli
in
cmpsl
jnp
sbb
push
mov
pop
and
xchg
and
lcall
xchg
repnz
push
ret
mov
fbld
dec
pop
fistl
sub
mov
testl
dec
inc
int
leave
adc
ss
daa
jg
out
in
lea
test
push
orb
push
add
mov
push
mov
xchg
jmp
jns
insl
repz
rorb
cmpsb
leave
fwait
dec
sbb
sub
xor
mov
sub
mov
shl
sbb
dec
orb
movsl
mov
push
subb
sbb
divl
aam
push
pop
mov
cmpsb
cli
orb
loopne
jno
mov
push
cmp
or
pop
pop
sahf
or
call
stc
cmpsb
mov
pop
inc
bound
cmc
cld
inc
insb
jg
sub
jne
mov
adcl
aam
xor
sbb
loopne
pop
sub
mov
xchg
mov
push
cmp
fcmovnbe
stos
adc
xor
jno
adc
imul
mov
mov
aas
les
in
xchg
idivl
jo
out
imulb
fildll
cmp
pop
iret
dec
loopne
sub
int3
xor
lock
scas
jnp
and
scas
mov
imul
imull
cs
pop
and
stc
jl
jg
dec
je
pop
sub
sub
mov
inc
nop
jns
xchg
dec
jmp
fsub
outsl
xor
dec
push
mov
jb
cmp
pusha
jne
or
push
test
out
loope
mov
add
test
dec
add
add
adc
pop
mov
or
mov
andb
jg
sbb
les
fldenv
xor
xchg
ljmp
test
dec
loop
repz
inc
pop
mov
loopne
dec
or
xor
cld
xchg
ret
cmp
inc
push
add
mov
popa
fcoms
pop
mov
sarb
adc
into
push
cmp
sbb
int3
sbbb
loope
push
cmpb
xchg
pop
push
or
add
push
jae
push
cmp
push
popa
pop
and
add
fcmovnbe
shl
movq
add
cmp
aad
jb
jge
pusha
lret
xchg
add
daa
sbb
addr16
mov
bound
pop
xor
xor
pop
dec
cmp
pxor
call
push
push
shrl
fwait
mov
outsb
insl
adcb
mov
nop
adc
xor
mov
inc
jb
int3
mov
pusha
aas
test
std
mov
mov
mov
pop
lret
nop
iret
cmc
clc
jb
pop
pushf
mov
xchg
mov
add
jo
dec
fucomp
pop
test
ret
sub
cmpsl
cmp
std
mov
jnp
stos
dec
xchg
addr16
loopne
outsb
sbb
js
cmpsb
loopne
push
sbb
mov
dec
in
and
aaa
icebp
divb
dec
aam
insb
stc
mov
pop
mov
mov
sub
les
jno
fidivrl
sbb
xor
rcrl
movsl
xchg
aas
jno
mov
push
iret
divw
mov
xor
xchg
addl
fdivs
add
les
lret
stos
mov
jno
cmp
pop
pop
add
imul
add
les
in
pushf
sub
iret
ja
insb
leave
mov
push
mov
cwtl
das
or
mov
imul
jmp
or
fstpl
adc
xlat
adc
cmpb
in
out
cmp
enter
sbb
dec
and
sar
add
fildl
cmpsl
mov
pop
sbb
cmp
lcall
push
lcall
shrb
push
cltd
pop
fcmovnb
jbe
ds
or
repz
lea
in
mov
push
inc
mov
out
pop
mov
push
test
lret
rcrb
inc
pop
jno
test
dec
out
or
lods
mov
ficompl
mov
cli
pop
in
mov
sahf
in
outsl
insl
daa
or
sub
lods
lret
jns
push
and
jbe
aam
push
xchg
xchg
and
push
inc
lahf
sbb
mov
xchg
mov
or
aas
or
hlt
sub
sbb
or
ret
cmpsb
loope
rcrl
int3
fdivl
dec
mov
and
loop
and
js
or
in
xchg
shlb
push
sub
jmp
loop
inc
add
in
sub
jmp
loopne
repnz
and
sbb
mov
mov
or
addr16
je
xor
out
sbb
inc
or
loope
into
or
fwait
aam
sub
inc
jb
xchg
jb
inc
sub
and
lods
movsl
xchg
jp
inc
bound
loope
hlt
sub
repnz
dec
sahf
movsb
loopne
in
jo
jge
ss
adc
dec
push
pop
push
push
or
push
stos
insl
dec
sub
subb
loope
push
inc
sub
stos
and
lods
movsb
lret
push
and
insl
pusha
lods
pop
xchg
insb
lea
mov
ds
lret
sarl
lock
inc
decb
push
pop
clc
aam
push
movsbl
mov
into
add
out
add
lods
jmp
mov
or
push
or
inc
test
repz
mov
stc
mov
mov
stos
lods
ja
jle
bnd
cmp
mov
pushf
daa
jmp
ficoml
mov
cmpsl
dec
jle
or
shlb
out
dec
sub
add
push
pop
mov
cmp
rorb
jmp
cs
sbb
arpl
push
movsb
ja
jmp
mov
fistpll
lahf
call
fnstenv
dec
xor
inc
mov
in
mov
adc
cmp
inc
jle
jecxz
jns
loopne
loope
into
into
mov
push
cmp
imul
pop
cmp
and
hlt
sub
or
pop
xor
and
mov
sbbb
adc
inc
cltd
nop
ffreep
test
or
jno
mov
dec
sahf
imul
push
clc
popf
mov
mov
enter
mov
loop
jmp
sub
dec
daa
enter
and
dec
xchg
fdivs
inc
mov
ja
test
mov
les
fildll
jle
lea
or
mov
add
insb
sahf
stos
push
fs
push
sbb
cltd
lock
sbb
outsw
or
faddl
push
jle
imul
loop
pop
xor
jl
push
inc
adc
sub
sbb
lds
push
fistpll
cs
insb
jmp
mov
mov
dec
lcall
pop
jns
pop
leave
sbb
jmp
pop
add
xchg
pop
xchg
enter
push
mov
xchg
test
and
movsl
scas
cmpsb
cmp
sub
insb
out
jp
pop
xchg
fldenv
sub
or
add
in
int
jmp
fsts
inc
dec
adc
or
dec
mov
push
mov
inc
xor
sub
mov
adc
ret
pushf
ss
sbb
cmpsb
div
or
sub
xchg
lods
xor
js
push
je
stos
mov
xchg
add
pop
xor
ret
dec
ss
push
cmp
cmp
push
in
inc
mov
pop
or
mov
ja
mov
jge
push
ret
loop
int
test
xor
mov
jnp
les
xchg
add
data16
sbb
ja
inc
jne
in
ja
mov
in
jmp
fadd
das
cld
out
repz
in
lret
add
inc
lcall
popa
fisubl
imul
fcomps
sbb
add
mov
repz
or
fstpl
cmpsb
addr16
push
lcall
lcall
icebp
jb
daa
xchg
mov
popa
push
mov
xor
outsl
cld
test
aam
insl
stc
aam
les
jae
imul
push
stos
movsb
and
addr16
jo
int3
sahf
outsl
xchg
loopne
mov
les
inc
jnp
pop
insl
jbe
iret
jno
adc
mov
into
test
scas
adc
sbb
in
push
test
pop
lods
dec
pop
mov
mov
std
sbbl
push
aaa
popa
in
sub
inc
cmp
pop
cltd
cmp
pusha
push
jge
jne
pop
fwait
data16
dec
mull
jnp
sbb
cld
sbbl
shl
xlat
jne
fcoms
push
xchg
test
imulb
pusha
adc
mov
push
shrl
mov
fs
mov
jnp
sub
mov
cld
test
inc
pop
cmp
mov
ret
cmpsb
les
cld
cmp
add
fsubrs
jmp
shl
andl
mov
sub
shrb
or
movsb
or
pop
and
je
cld
cltd
bound
scas
fdivr
adc
cmp
fldl
leave
mov
cmp
push
jp
test
dec
sub
daa
dec
jns
mov
arpl
jle
and
push
inc
xchg
or
sti
lea
roll
sub
adc
jno
sub
inc
xchg
lock
and
sub
add
cltd
mov
stos
addl
enter
xchg
push
fdivrp
sbb
add
lods
push
rcrl
jmp
mov
cmpsl
inc
add
add
pusha
cwtl
ret
and
cs
add
stos
movb
mov
cmp
fcoml
mov
jne
pop
mov
inc
sub
or
repnz
mov
mov
daa
movsl
aad
sub
in
jl
dec
or
imul
jp
out
or
jg
or
pop
or
push
aad
repnz
fwait
sub
test
mov
xor
and
pop
jnp
adc
repz
and
cmc
push
aad
call
js
pop
lcall
add
movsb
jge
test
cmc
cltd
cwtl
sbb
pop
inc
out
jp
cmp
mov
sbb
inc
cmc
mov
in
popf
xchg
or
pop
adc
inc
add
dec
dec
mov
dec
sbb
mov
cmpsl
push
loope
fidivrs
sbb
xor
pusha
push
fisttpll
xlat
inc
hlt
cld
pushf
fwait
dec
pusha
mov
and
cmovb
sub
mov
repnz
test
in
mov
repnz
leave
dec
inc
jns
lcall
adc
mov
mov
enter
sbb
iret
dec
adc
pop
lea
mov
shlb
sub
into
repz
adc
xchg
add
sub
outsb
mov
je
push
daa
jb
sub
lahf
mov
ror
or
ljmp
rorl
movsl
pop
jmp
jb
sbb
dec
lods
les
and
inc
cmpsb
faddl
sbb
add
adc
cltd
hlt
movsl
call
mov
or
push
popa
test
push
jns
mov
inc
or
loopne
and
sub
and
xor
iret
push
inc
xor
testl
pop
or
mov
inc
stos
push
jmp
out
div
mov
fmul
insl
in
jo
xchg
ret
xchg
add
fistpl
adc
hlt
jo
ficoms
imul
push
movsl
fdivrp
pop
ss
shll
jge
inc
out
dec
andl
sub
shlb
mov
jmp
mov
jle
mov
stc
sbbb
rclb
popf
jp
add
cmc
gs
push
push
stos
hlt
pushl
sub
incb
outsl
pop
mov
outsb
lret
fwait
decb
mov
ja
test
push
adcl
ss
dec
cs
rcll
sbb
and
pop
and
lcall
xor
fadds
pop
pop
ds
and
cmpsb
insb
add
test
lea
xchg
or
jbe
and
aas
scas
inc
xchg
insl
add
outsb
in
retw
inc
sbb
jb
loop
xor
jne
ja
inc
sub
mov
fwait
pusha
xlat
inc
movsl
inc
icebp
rclb
jle
xchg
push
mov
adc
dec
jbe
call
pop
ja
lahf
mov
jae
scas
in
jecxz
fsubl
sarb
push
jmp
xor
mov
jmp
loop
sub
and
ss
inc
push
or
and
mov
jg
insb
cmpsb
inc
pusha
pop
push
ror
idivl
rcl
std
nop
pop
pop
cs
sbb
insl
inc
ret
fs
js
into
icebp
decb
repnz
add
clc
test
sub
mov
or
fstpl
fisttpl
test
faddl
mov
es
add
mov
loop
xor
daa
mov
xchg
dec
subb
mov
adc
rcr
fimull
sahf
jmp
les
mov
sbb
mov
std
arpl
sarl
mov
xchg
pop
xor
test
fnop
call
mov
dec
cltd
cmpsl
int3
daa
cmp
xchg
jmp
out
rcll
inc
cmp
xchg
mov
jno
in
push
xor
fidivrl
jecxz
mov
xor
dec
rorl
jne
push
add
in
xchg
sti
ja
pop
hlt
jmp
insl
mov
jnp
lea
jno
rolb
cwtl
ljmp
jb
jb
pop
pushf
jbe
pop
ret
cwtl
jp
jp
mov
inc
xchg
pop
test
mov
call
jge
inc
xchg
jge
and
xor
mov
mov
mov
jg
sbb
stc
pusha
add
xchg
stos
out
adc
mov
pop
pop
arpl
fisubrl
cwtl
jae
movsb
adc
mov
inc
lods
dec
and
lods
dec
ljmp
out
mov
movsb
outsl
sub
or
in
insb
out
push
ss
jmp
stos
fidivrl
dec
and
xor
outsl
or
movsb
add
adc
and
std
sub
call
pop
dec
add
sbb
mov
inc
daa
into
ud2
popl
mov
mov
or
and
pop
fnstcw
loop
int
jg
outsl
mov
mov
mov
dec
inc
rclb
pop
and
adc
fs
les
addr16
inc
xchg
sahf
pop
cmp
loope
sub
mov
icebp
movsb
push
hlt
push
adc
popf
cmp
pop
loope
lcall
mov
add
sub
fwait
sub
xor
push
cmp
repnz
iret
ljmp
xor
pop
std
jl
les
add
sbb
out
cmpsb
mov
jns
pushf
adc
std
push
adcl
jb
jo
addb
cmc
mov
fs
sahf
repnz
test
mov
sbb
or
imul
dec
push
mov
sar
stos
sti
out
shll
xor
dec
xchg
popa
out
adc
or
or
outsl
es
cmp
mov
inc
clc
fldenv
push
mov
pop
cmp
mov
push
movsb
jae
mov
pop
xor
aam
mov
dec
mov
jbe
lds
mov
push
dec
mov
mov
xchg
addr16
or
incb
jge
dec
mov
loop
sti
shl
call
loope
cmp
shlb
lock
inc
lock
cmp
inc
jl
scas
push
mov
pop
dec
fisubs
mov
iret
inc
jecxz
int
data16
fwait
lods
inc
mov
add
std
push
pusha
mov
pop
inc
push
lds
sbb
pop
cwtl
mov
cmp
leave
xchg
mov
ja
xor
cli
or
test
cmp
cmp
xlat
ret
ss
jp
lret
and
xchg
rorb
mov
cmp
push
int3
mov
mov
fwait
aam
inc
aaa
lods
nop
sbb
mov
mov
xchg
mov
int3
sbb
out
mov
or
sub
jnp,pt
addl
lock
imul
adc
daa
cltd
add
xchg
ljmp
cmp
jns
imul
xchg
xor
xor
outsb
ret
push
pop
jnp
divl
inc
out
cwtl
or
pusha
fisubl
xchg
cs
sub
addl
fcoml
push
and
cmc
cli
cltd
cld
sbb
enter
sub
mov
sahf
xchg
xor
idiv
gs
cmp
sub
pusha
imul
xchg
fidivs
push
xor
dec
das
out
test
xor
xor
sbb
xlat
sti
mov
loope
mov
loop
or
outsl
xchg
ret
shlb
sti
cmc
jne
cli
aas
sbbl
shll
sbb
mov
enter
or
pop
cmpl
adc
fmul
rcrl
daa
jmp
int
fcoms
xchg
ja
mov
daa
cli
cltd
sub
sarl
push
das
push
hlt
push
lea
jne
test
dec
jge
scas
adc
lcall
xchg
insb
lock
test
jge
in
mov
add
cld
inc
inc
fchs
mov
into
mov
mov
or
push
pop
es
push
fildll
lods
inc
sub
mov
scas
mov
cmp
or
ret
cld
scas
imulb
dec
add
jns
push
outsb
inc
cmp
gs
lret
lret
dec
push
cs
add
loope
stos
and
add
pop
lcall
inc
scas
xor
popa
jle
lcall
adc
mov
fnstenv
arpl
pop
adc
jge
sub
int
jb
ret
or
enter
aas
rcrl
lahf
popa
adc
or
jnp
or
in
shl
inc
inc
loope
fsubl
lret
pop
or
pop
mov
jg
in
js
sbbl
fnstcw
push
mov
add
loop
pop
sahf
in
inc
xlat
mov
adc
popa
pop
mov
int
out
adc
ja
jns
add
out
push
scas
sub
int
or
bound
add
ljmp
es
test
mov
or
mov
sahf
push
xchg
mov
xlat
addr16
jbe
cmp
fldpi
cmp
add
fnstenv
push
inc
jp
aas
mov
sbb
repz
ss
mulb
jb
pop
jecxz
rcr
loope
cmp
jg
hlt
fwait
dec
push
ja
push
ret
xchg
adc
xchg
add
addr16
and
sbb
cli
pop
jge
gs
shll
dec
jns
loope
cltd
nop
sbb
mov
sahf
adc
inc
or
ss
cmc
mov
adc
cs
ret
cmp
cmpl
cmp
mov
int3
lods
movsl
inc
adc
and
mov
and
aam
call
jge
movsb
ficomps
pop
fxam
pop
lods
xorl
adc
adc
daa
in
push
mulb
inc
pop
lcall
xor
push
test
jg
and
or
cmc
cmp
jge
cmc
rolb
faddl
popa
leave
outsl
pop
xor
xor
dec
imul
inc
movsl
sub
cmp
stos
mov
repz
pop
push
rclb
mov
int
imul
adc
push
adc
jmp
adc
lods
in
push
fisubrl
jle
clc
loope
ss
sbbb
loope
adc
xlat
sbb
lods
xor
shrl
test
data16
and
pop
adc
dec
lret
jmp
pop
dec
jg
lcall
scas
mov
mov
xchg
clc
mov
insb
inc
adc
mov
mov
ja
mov
mov
test
nop
mov
iret
je
fcomps
inc
xchg
das
test
ficoml
push
inc
mov
pop
lock
and
stc
mov
sbb
push
mov
jmp
fsubrp
jle
add
in
cmp
inc
leave
pop
sub
adcb
rcr
adc
mov
sub
push
sarb
cmp
fsubs
sub
sbb
test
adc
adc
pushf
mov
addr16
dec
jo
pop
fwait
push
iret
add
push
sbb
and
mov
cmp
out
jecxz
dec
sbb
push
out
sti
push
fldenv
js
pusha
fdiv
ja
mov
xchg
ljmp
out
fimull
inc
lsl
insb
rcl
xor
popf
mov
iret
ljmp
ljmp
mulb
push
call
dec
test
pop
mov
and
cmp
movsl
rorb
add
mov
sahf
mov
cwtl
jns
mov
xor
mov
cmp
pop
mov
mov
out
fmuls
enter
scas
scas
mov
ret
xorl
xchg
jmp
sub
add
push
scas
jns
scas
mov
adc
xchg
repnz
call
or
js
icebp
repz
dec
sub
mov
pusha
test
cmp
mov
sbb
push
jo
sub
pop
add
pop
call
pop
bound
push
adc
dec
or
test
imull
lcall
aas
movsb
push
push
pop
jmp
xor
jp
jp
ret
lahf
pop
mov
mov
jle
jg
jecxz
mov
sbb
or
inc
mov
or
mov
or
es
mov
add
lods
rcrl
pop
xchg
in
or
mov
ficoml
cld
mov
jp
lret
loope
ss
shlb
fldenv
movl
xor
lret
test
jnp
fnstcw
out
pop
dec
push
gs
xchg
sbb
les
lock
mov
sub
jno
add
sbb
adc
movl
ja
adc
mov
repnz
daa
je
or
test
or
jb
ret
test
and
push
xchg
xchg
jmp
shrb
pushf
std
cmpsl
loopne
jp
dec
dec
adc
sbbl
loopne
mov
adcb
mov
xor
cld
stc
dec
mov
rclb
inc
fistps
rorb
sbb
aaa
and
jnp
pusha
mov
fs
cmp
add
pop
movsb
in
jmp
enter
nop
xlat
pop
cmpsl
xor
jbe
ljmp
ret
pop
xchg
jmp
fisubl
pop
jmp
ja
lods
aas
jbe
orw
in
mov
push
xchg
out
fistps
jecxz
stc
ret
pop
lahf
fsubrl
fadds
ret
outsl
fidivs
loop
lea
xor
mov
repz
cmp
shrb
jbe
mov
daa
or
lahf
sub
xchg
or
add
daa
cmpsl
mov
push
js
insl
jmp
sbb
adc
cli
bound
movsl
fmuls
decl
lods
rorb
cmpsb
loope
dec
adc
xchg
sahf
daa
data16
scas
out
mov
lods
adc
cmpb
sbb
inc
pushf
pop
mov
dec
dec
lock
mov
leave
fistpll
xchg
xlat
scas
decb
frstor
mov
dec
mov
test
es
es
sarb
inc
outsb
jmp
hlt
xchg
fdivs
dec
test
xor
iret
or
cs
cld
cmp
aam
in
sbb
xlat
pminsw
arpl
ljmp
xor
push
test
adc
pop
fcmove
cmp
ficomps
lds
lds
xor
fisttps
or
inc
inc
sub
xchg
pop
sbb
push
xchg
xor
notb
mov
aad
sbb
sarl
mov
int3
sub
mov
jno
xor
mov
adcl
cli
pop
adcl
testl
sbb
jne
cmp
push
gs
jno
outsb
rcrb
das
lret
add
inc
arpl
dec
scas
movsb
xor
je
mov
sbb
in
mov
popf
stos
adc
rorl
or
xlat
pop
pop
jo
mov
lcall
dec
out
cmp
inc
push
fsts
jbe
mov
dec
pop
sar
and
test
push
rolb
mov
xor
dec
ficompl
insl
lahf
jae
cmp
pop
xchg
push
push
jno
push
nop
insl
dec
cmp
leave
dec
sub
imulb
cmp
jle
jge
cmp
mov
mov
int
std
and
arpl
mov
aaa
pop
jmp
cli
aaa
xchg
xchg
and
addr16
mov
dec
push
xchg
push
xchg
data16
mov
add
fs
mov
sub
push
sub
test
lods
cmp
out
sub
sub
push
std
clc
xor
adc
enter
lret
int3
sti
push
test
ror
pushf
out
pop
jns
int
inc
pop
scas
sbb
mov
test
mov
addr16
mov
pop
shrl
xlat
movsl
shrb
or
fisubrs
les
inc
lahf
sti
fmul
aam
xor
lret
inc
mov
iret
repnz
xchg
aam
push
adc
dec
scas
and
imul
in
jmp
int3
lret
repz
fdivl
cmp
sbb
dec
mov
ja
push
stos
inc
popl
test
mov
mov
inc
pop
xchg
push
cmp
arpl
push
or
sub
in
xchg
test
adc
add
outsb
shl
inc
mov
xchg
sbb
sub
cmp
xchg
stos
or
sbbb
dec
insl
mov
sub
xor
xchg
icebp
mov
pop
int3
jle
cmp
or
jo
stos
sbb
push
movsl
leave
pop
add
lcall
cli
xchg
iret
inc
sbb
fs
mov
fs
lcall
scas
pop
scas
dec
fstps
mov
test
mov
sub
shrl
mov
movsb
mov
cli
xchg
pop
imul
div
incb
push
xchg
jmp
pop
mov
fimull
push
and
adc
jmp
cmpsl
pop
pop
ljmp
out
mov
movsb
outsb
jae
dec
mov
imul
xor
ljmp
xchg
jmp
adc
out
enter
push
pop
cs
test
xchg
jnp
mov
push
pop
mov
pop
lcall
fstps
movsb
mov
jg
mov
mov
fucom
inc
cmpsb
hlt
xchg
cmp
leave
adc
pop
mov
inc
stos
xor
xor
mov
ds
popa
mov
jo
mov
test
mov
jb
pop
in
pop
fsubl
fstl
sub
jno
mov
xor
xor
dec
nop
add
push
xor
push
pop
test
lret
iret
cmp
jbe
xor
jae
mov
jmp
pop
xchg
mov
in
jno
dec
ds
inc
mov
mov
or
mov
ret
and
mov
or
in
lcall
ds
into
dec
sub
and
imul
lods
mov
sub
jmp
cmp
dec
adc
ficomps
xchg
outsl
cmp
mov
dec
jecxz
fisttps
popf
fidivl
sahf
push
incb
std
pop
sub
mov
jmp
test
jae
xor
pop
pop
and
xchg
sub
and
push
dec
mov
ljmp
je
xor
imul
js
jnp
xor
jmp
sarl
or
add
sub
adc
cmp
lods
mov
loope
imul
mov
lods
out
ljmp
hlt
mov
xchg
jecxz
xor
push
xchg
fnstenv
adc
ret
cmp
xchg
mov
push
sti
adc
mov
fstpt
jecxz
subl
push
cmc
pop
cmpsl
int
out
and
jae
idivl
push
mov
add
jne
sti
adc
shr
pop
push
pop
sub
sub
pop
mov
shr
mov
rorb
repz
stos
ret
xlat
decl
jo
leave
scas
push
pushf
scas
dec
pop
sub
pop
cli
lds
add
sub
int
cmp
es
and
inc
add
mov
enter
mov
cwtl
pop
mov
pop
movsl
cmp
jb
leave
pop
arpl
inc
mov
inc
cmp
pop
out
push
xor
ret
fisubl
lret
fdivrl
mov
sbbl
hlt
fisttpl
adc
aam
xchg
pop
sub
inc
dec
or
sbb
mov
mov
mov
cwtl
sub
jge
cmp
rclb
ret
je
pop
lods
dec
call
sub
fldenv
movsl
mov
mul
frstor
pop
lcall
dec
mov
xchg
nop
sbb
lret
xchg
mov
mov
inc
mov
js
inc
mov
lret
xchg
pop
enter
leave
sbbb
repnz
mov
xor
jo
mov
clc
stc
scas
jmp
and
mov
cmp
jmp
movsl
push
jno
cmp
push
mov
inc
add
outsb
sbb
stos
js
add
and
ss
mov
movsl
pushf
push
movsl
adc
sub
push
xor
mov
mov
div
jae
sub
add
mov
int
aam
and
mov
and
add
pop
jle
call
rolb
and
sub
pop
in
inc
adc
clc
mov
pop
gs
lea
jl
test
ljmp
push
std
xchg
ljmp
dec
mov
les
outsl
aam
test
xor
gs
inc
adcb
pop
adc
cmpsb
push
not
xchg
test
adc
out
inc
sti
push
pop
xchg
or
mov
cs
mov
fsubs
int3
dec
popf
and
inc
call
call
in
xchg
js
stc
cmp
pop
into
sub
add
xor
mov
das
in
inc
aam
adc
sbb
lcall
sbb
pop
les
insb
sub
xchg
pop
mov
dec
mov
sub
pop
xchg
inc
push
dec
fsubs
stos
sbb
jmp
or
jno
pop
pop
or
movsl
pop
push
repz
insb
cld
and
sub
inc
push
xor
fsts
add
xor
and
call
inc
xor
inc
mov
sub
mov
jg
popa
cmpsb
cmp
fimull
sbb
lock
pushf
push
ret
mov
xchg
mov
roll
inc
fstps
mov
lods
mov
add
jg
out
cmp
lahf
ret
push
orl
dec
pop
push
xchg
lds
lods
shl
loop
xchg
popa
inc
pop
movsl
dec
scas
cmp
inc
lahf
xor
mov
or
add
out
mov
iret
cmp
xor
mov
mov
pop
jnp
or
xchg
hlt
inc
aas
popl
scas
pop
call
push
addl
gs
mov
test
or
add
hlt
and
pop
scas
out
jmp
int
xor
and
push
push
dec
mov
jge
mov
addr16
push
imul
adc
out
int3
jmp
mov
mov
sbb
cwtl
mov
andb
xor
xor
ss
cmp
test
lahf
cmp
sbb
sbb
or
mov
push
cmp
or
ret
lods
or
push
mul
hlt
out
mov
cmp
mov
cmpsb
out
cmpsl
add
mov
pop
push
xchg
xchg
sub
leave
mov
pop
add
sarb
loope
andl
push
jnp
lcall
dec
and
addr16
mov
mov
push
sarb
mov
stos
outsb
jmp
xchg
push
pop
arpl
mov
data16
jb
hlt
push
xor
fnstenv
jmp
arpl
mov
or
xchg
idivb
xor
clc
je
popf
cld
imul
mov
in
xchg
inc
mov
adc
push
stc
add
cmp
fimull
insb
push
je
push
adcl
inc
shrl
je
sub
inc
sbb
add
adc
je
mov
pop
mov
dec
stc
or
jmp
mov
add
adc
cs
dec
fs
mov
mov
sarl
add
push
xchg
pop
xchg
xor
arpl
pop
je
mov
clc
movsl
jne
scas
push
movsb
leave
xchg
dec
popl
jns
outsl
cmpsb
mov
arpl
mov
pop
adc
mov
sub
gs
push
mov
cmpsb
jnp
aad
test
jae
xor
popa
fwait
mov
es
adc
ret
fcomi
and
ss
add
jno
push
ficoml
cmp
jp
jae
leave
fdivrs
scas
dec
in
cli
adc
ficomps
fadds
cmp
xchg
pop
fnstsw
add
fsubrs
mov
or
pop
sub
test
mov
jmp
je
mov
pop
mov
lcall
cmp
push
cltd
sub
xor
jb
movsl
fbld
out
lret
pop
adc
cmp
mov
ljmp
sti
inc
xchg
pop
movsl
cld
cld
jne
mov
cld
lret
addr16
jg
mov
pop
roll
scas
stos
dec
lahf
stos
push
cmp
mov
inc
push
xor
jmp
adc
cwtl
loop
fistl
push
in
mov
add
dec
cld
repnz
leave
xchg
push
rclb
mov
xchg
mov
scas
or
xchg
mov
jge
ljmp
xchg
aaa
jp
outsb
push
fnstenv
in
sbb
mov
pop
rorl
scas
fiaddl
push
cmpsl
rcr
inc
xor
adc
hlt
sbb
stos
cmpsb
pop
das
out
mov
xchg
cmp
test
lods
mov
sahf
dec
mov
adc
gs
fnstsw
jl
rcrl
sahf
sahf
push
stc
test
aas
mov
add
or
xchg
stos
sbb
pop
adc
dec
cltd
in
xor
jnp
je
cmpsl
pop
jge
movsl
xchg
lds
sub
les
stc
jle
out
sbb
dec
jp
push
cmp
ficoms
imulb
add
into
xchg
dec
or
add
or
test
fisubl
sbb
adc
push
pop
mov
pop
ret
jp
jle
arpl
lds
or
mov
lock
movsl
mov
hlt
dec
shll
pop
pop
and
addr16
mov
and
fisubrs
push
jns
insb
or
movsb
jg
xor
jae
insb
adc
je
sbb
mov
push
xchg
inc
push
les
fstp
pop
and
in
enter
in
filds
ret
xor
xor
out
xor
out
mov
push
add
lea
inc
or
repnz
stc
xchg
pop
adc
aam
jmp
and
fdivs
mov
aas
bound
jle
xor
cmp
add
mov
xchg
jno
or
mov
cld
or
mov
gs
int
pushf
cmp
mov
sar
cld
out
adc
sbb
xchg
int
cli
std
out
addr16
adc
inc
lret
das
xchg
push
dec
sub
add
cltd
mov
pop
inc
sarl
cmp
lret
shll
dec
loop
test
mov
sbb
fs
jg
fmulp
das
and
and
cld
add
mov
sahf
cmp
les
js
dec
jnp
int3
or
push
xor
outsl
mov
fiadds
xor
jmp
out
lods
adc
imul
fbld
mov
outsb
test
or
xor
scas
mov
pop
pop
out
roll
ud1
inc
and
cmpsl
mov
nop
xor
sbb
pop
dec
loopw
scas
pop
sub
daa
scas
sti
xor
jle
cwtl
dec
push
sahf
pop
mov
xchg
cs
test
test
cmp
add
push
in
js
in
popf
mov
jo
xchg
cmpsb
int3
addr16
sub
add
dec
adc
pop
push
cmp
out
push
xor
add
or
mov
jne
lret
test
cmp
cmp
fwait
push
outsl
out
dec
mov
xchg
lods
arpl
push
mov
mov
loopne
adc
mov
into
in
es
dec
mov
mov
pop
lret
mov
or
sbb
enter
mov
sbb
pop
push
stc
jp
and
imul
mov
add
clc
or
sarb
push
out
mov
fsubrs
push
jbe
scas
mov
daa
jns
cmpsb
mov
inc
sub
jmp
xchg
fcmovbe
jle
jg
jne
repz
xor
jp
cmp
dec
mov
out
out
dec
loop
test
pusha
push
gs
repnz
data16
ret
hlt
xor
outsb
daa
dec
adc
add
lret
mov
pop
sbb
mov
mov
push
and
cli
or
mov
cmp
fld
lcall
mov
scas
xchg
pop
jle
jle
mov
xchg
rcrb
cmpsl
mov
mov
imul
xchg
cmp
and
popa
fsubrs
adc
inc
cmc
jmp
mov
aas
ficomps
pop
idivl
out
stos
je
sbb
sub
pop
mov
notl
add
pop
add
das
adc
mov
or
shlb
add
inc
xchg
repz
xor
mov
push
outsb
rcrb
test
outsl
mov
add
mov
jecxz
xchg
inc
mov
aam
inc
add
jb
fdivs
pop
les
loopne
lret
nop
aad
ret
sub
inc
inc
mov
add
pop
aaa
xor
fmul
out
push
je
inc
addr16
adc
and
mov
int3
iret
stos
int
dec
aaa
push
les
ljmp
roll
sbbb
inc
jns
xlat
or
cltd
fidivs
adc
jg
mov
mov
mov
xchg
adc
es
shrl
or
jecxz
mov
jns
ja
aad
xor
in
push
xchg
sbb
cmp
pop
in
sub
jmp
stc
sti
insb
push
push
pop
mov
xchg
push
push
stos
pop
scas
mov
mov
push
mov
xchg
movsl
xor
in
mov
dec
das
xchg
dec
push
fstpl
aaa
aam
add
push
xor
jecxz
push
bnd
inc
inc
push
cmp
or
je
adc
cs
pop
movsb
loopne
ret
dec
test
lock
xlat
jmp
popf
jno
pop
mov
jbe
stos
cli
loopne
arpl
xor
dec
les
cmp
out
js
clc
arpl
lds
hlt
xlat
sbb
lret
negb
add
sub
mov
sub
push
inc
sub
stos
rcl
and
jo
sub
mov
aas
test
rol
jne
adc
ja
cwtl
adc
loope
std
cmp
mov
pop
fsts
jle
jecxz
inc
mov
test
enter
and
decb
push
iret
mov
adc
test
pushf
outsb
pop
lret
dec
sbb
add
js
or
leave
dec
add
mov
dec
mov
fwait
subl
dec
cmp
xchg
fisttpl
push
insl
insl
in
push
es
daa
test
dec
mov
sbb
jae
xchg
sbb
out
sbb
inc
fsts
or
xorb
cmp
loop
jno
push
je
jmp
push
imul
lea
xchg
inc
pop
push
maxps
outsl
fcmovu
popf
nop
into
ds
fs
movsl
fs
dec
inc
imul
lret
test
fildl
hlt
or
ss
ja
rcll
out
add
mov
xchg
gs
js
lea
jmp
testl
sbb
fbld
adcl
enter
push
lock
sbb
subl
icebp
cbtw
stos
mov
jmp
add
add
inc
fsts
jns
and
jns
repnz
jo
push
inc
push
and
xchg
daa
lahf
data16
nop
lods
mov
icebp
cmpsb
ljmp
adc
clc
mov
pop
pop
cmp
add
pop
inc
inc
xchg
add
int3
adc
jp
pop
and
xchg
xor
xor
mov
lea
in
in
sti
rolb
sbb
notb
es
movsb
repz
jle
or
stc
lods
les
fsts
jnp
fists
cmp
sub
fs
mulb
ljmp
sbb
stos
jp
nop
ficoml
mov
fdivr
fisttpl
inc
sbb
push
bound
cmp
push
mov
nop
push
aas
xchg
jo
cmp
repz
rcrl
rol
subl
mov
inc
bound
cmp
hlt
es
pop
icebp
mov
insb
sbb
in
fcoml
mov
xor
inc
xchg
jle
adc
out
cmp
mov
test
pop
mov
fincstp
mov
flds
fidivrs
inc
xchg
push
aam
sub
mov
enter
cwtl
aam
or
addr16
pop
out
dec
ja
pop
push
stc
pop
mov
xlat
adcb
nop
enter
testb
rol
add
xlat
push
fimull
cmpsb
into
arpl
fdiv
mov
jmp
lret
mov
mov
or
ret
hlt
cmp
ret
orl
lods
inc
pop
icebp
lods
cmc
pop
cmp
xchg
adc
jp
jecxz
leave
pop
push
shll
movsl
mov
push
mov
ret
mov
ror
cs
push
or
xchg
insb
sub
inc
xor
scas
gs
xchg
cmp
pop
xor
bound
push
cmc
jae
push
dec
sti
gs
dec
sahf
push
fmuls
fnsave
fsubl
or
jl
cld
push
dec
pop
inc
or
pusha
mov
clc
jmp
dec
ds
out
cwtl
inc
iret
push
pop
jmp
outsl
nop
push
enter
lret
rol
outsb
lods
lahf
push
pop
mov
or
into
insl
aam
outsb
adc
rcrb
pop
aaa
cmp
pop
ss
sub
fbld
out
jle
dec
jns
sub
mov
jmp
js
jmp
xchg
shll
mov
mov
ss
xor
insb
aas
je
jmp
rclb
lods
jge
dec
mov
das
xchg
sahf
data16
sub
mov
push
pushf
and
pop
ret
xchg
jnp
lahf
paddq
cs
mov
sti
dec
mov
mov
lret
adcl
out
shlb
ds
lea
in
iret
lds
xchg
hlt
xor
adc
jge
sbb
lods
push
jns
mov
out
fisttpl
pop
sbb
pop
push
mov
pop
rorl
cs
push
aaa
jl
mov
pop
dec
mov
es
leave
movsb
cli
mov
adc
pop
in
xlat
lds
mov
sbb
enter
sti
mov
jmp
outsb
ret
mov
loop
xrelease
and
xchg
lret
pop
lret
int
mov
sub
xchg
inc
pushl
fldl
loop
add
mov
jne
testl
inc
pop
sbb
add
cmpsb
outsl
int3
mov
or
or
jbe
icebp
es
shl
inc
mov
xor
or
enter
cmp
dec
out
js
add
push
enter
rcrl
outsl
add
or
das
subl
outsl
iret
dec
ror
sahf
test
sahf
bound
mov
xchg
icebp
and
pushl
push
insl
add
shll
mov
mov
cmp
mov
enter
pop
sahf
add
daa
mov
shlb
xor
inc
stos
nop
mov
or
pop
and
stos
push
cmp
sahf
out
add
nop
in
add
push
test
push
sub
ss
popa
iret
adc
xlat
pop
add
insb
movsb
cld
addr16
aad
das
fdivp
lock
lret
mov
loope
jge
push
or
inc
push
dec
sub
imul
popf
cmp
push
gs
inc
rcrl
aam
stos
lahf
nop
cmp
xchg
mov
push
nop
or
mov
test
xorb
adc
cs
mov
inc
pop
dec
cltd
cld
pop
adc
sub
loope
repnz
ficoms
inc
dec
jns
or
push
popf
push
pop
xchg
xchg
inc
test
inc
test
sub
cwtl
roll
test
leave
adcb
push
and
inc
and
mov
and
int
push
mov
icebp
cmp
ds
inc
sbb
sbb
ljmp
mov
sbb
pop
xchg
adc
pushf
add
outsb
push
and
lret
shll
dec
lcall
jbe
dec
jne
movsb
or
and
xchg
hlt
pop
xchg
inc
rorl
xchg
cli
sbb
nop
out
shll
or
dec
imull
jge
or
loop
push
jmp
sbb
inc
mov
jae
scas
pop
ss
js
dec
fsubrl
outsb
xchg
lock
mov
push
lods
pop
fnstenv
loop
or
cltd
mov
sbb
in
push
scas
je
mov
jb
in
repz
xor
dec
out
in
fdivrl
repnz
lods
xlat
or
sub
push
push
mov
and
enter
xor
out
les
shlb
std
xchg
data16
shrb
in
mov
addr16
out
out
les
insb
pop
aam
jp
or
cs
xchg
sarl
out
jne
mov
pop
ret
test
xor
xchg
rcrl
sub
test
stos
and
sbb
lret
mov
inc
pop
jl
xchg
notb
enter
decb
je
pop
test
lds
mov
clc
mov
insb
and
test
fwait
lock
sub
or
leave
adc
test
adc
pop
push
mov
loop
or
insl
sbb
push
pop
inc
test
jae
js
and
dec
adc
pop
jns
cmp
imul
mov
push
mov
jmp
iret
jg
mov
pushf
fsubrl
dec
gs
testb
push
outsb
pop
cmp
aas
jno
mov
cmc
arpl
js
jmp
fcmovb
rcrl
movsl
pop
pcmpeqd
shr
mov
ret
add
sbbl
inc
jp
adcb
fucom
xchg
outsl
xchg
mov
adc
daa
sub
mov
out
repz
pop
cmp
xchg
stc
adc
cmc
ret
lahf
lret
inc
out
sub
cmp
mov
gs
rclb
icebp
fsubrl
shlb
or
xor
mov
push
lret
sbb
cltd
cwtl
fistps
mov
nop
sub
xlat
loopne
inc
dec
lar
repz
mov
inc
jns
jbe
inc
pop
sub
flds
pop
xor
or
jns
movsb
test
mov
sti
call
orb
in
dec
icebp
cmc
xchg
pop
rorl
cltd
loopne
pop
jle
cmp
dec
loop
test
mov
xor
jb
roll
cmp
mov
shl
ja
jge
mov
rcl
jle
test
inc
lods
and
add
cld
mov
fdivp
and
sub
pop
mov
cmpsl
sti
mov
outsl
add
inc
cmp
pop
add
out
mov
jno
mov
cltd
dec
xor
aas
push
mov
fwait
jge
das
enter
sub
xchg
cs
pop
xchg
mov
adc
fsub
test
xlat
setl
push
push
pop
jmp
lea
push
push
pop
mov
loop
jns
jne
mov
sarl
adc
loopne
pop
mov
inc
fildl
add
leave
pop
dec
xchg
xor
lods
mov
mov
lods
mov
cwtl
xor
adc
in
push
push
push
add
ja
push
and
scas
push
dec
pop
mov
inc
sahf
add
xor
push
xchg
or
stos
stos
jno
scas
aaa
or
push
fcmovnb
idiv
mov
xchg
push
mov
mov
aas
xchg
out
je
xlat
add
cmp
daa
dec
push
fiaddl
aam
inc
ror
xorb
in
test
enter
inc
mov
pop
cmc
adc
icebp
insl
gs
dec
icebp
mov
fdivrl
mov
call
dec
fs
add
int3
popf
and
xchg
std
ret
ret
andb
xchg
and
rorl
xchg
lock
add
bound
movsl
xor
rolb
add
lods
pop
lcall
inc
js
gs
mov
xorb
pusha
xor
sahf
int3
out
dec
xor
mov
inc
lret
scas
int3
rcr
ret
pop
dec
cmc
mov
jo
ljmp
xchg
adc
out
adc
insl
xchg
fcoml
cmp
fstps
mov
fldl
jg
in
enter
inc
mov
cmp
jl
jmp
cs
mov
xor
mov
mov
cmp
cmpsl
push
repnz
inc
xor
mov
fdivrp
add
inc
jle
hlt
jmp
movl
cltd
imul
pushf
mov
test
push
sub
push
push
js
repnz
in
and
cmc
jbe
sub
adc
loopne
mov
jnp
nop
xor
inc
xchg
cmp
lahf
pop
stc
cli
mov
sbb
dec
add
pop
xlat
or
les
sbb
mov
sti
mov
ds
jbe
add
jmp
and
mov
mov
xor
jns
xchg
subb
jmp
aad
lcall
fisttpll
je
in
mov
jbe
sbb
inc
addb
notb
add
dec
sub
and
int
out
popf
add
adc
dec
mov
outsb
fadds
adc
sbb
les
add
pop
jg
scas
mov
push
mov
lods
and
push
adc
addb
lret
lea
arpl
inc
jbe
sub
gs
adc
jg
mov
loope
hlt
push
sahf
aaa
cmp
xchg
pop
les
sbb
je
mov
jno
adc
push
and
sub
lea
xor
mov
iret
mov
jns
je
fsub
add
add
jmp
push
int3
xchg
cmp
mov
push
mov
jbe
les
cld
mov
mov
hlt
sahf
xor
and
jne
ja
sbb
popf
repnz
cmpsl
jnp
mov
xchg
lods
int
imul
pusha
fstps
and
repnz
in
xor
aas
adc
cmp
push
inc
not
fisttpll
lahf
or
out
and
in
adc
add
adc
jnp
stc
ret
pop
fs
in
ds
dec
push
mov
xor
scas
ret
icebp
dec
jns
xchg
orb
movsb
dec
mov
inc
aam
mov
and
into
shll
lds
adc
fbld
es
mov
dec
stc
pop
subl
je
clc
repnz
or
test
clc
dec
adc
popf
ds
mov
outsb
jg
xlat
inc
mov
inc
rep
inc
loopne
mov
jl
aaa
pop
iret
mulps
arpl
sti
or
and
xlat
ret
cmp
test
ss
or
gs
das
pop
mov
sub
jecxz
cltd
mov
pushl
mov
subl
std
lahf
insb
xchg
out
add
mov
pop
into
xor
or
fimull
daa
cmp
mov
jno
aam
ret
and
xchg
shll
icebp
aad
jge
mov
nop
cmp
ss
cwtl
mov
adc
jp
mov
push
loop
mov
int
repnz
mov
pop
mov
lock
sbb
rcrb
les
leave
popa
push
ds
mov
xchg
adc
lods
mov
and
pusha
popa
pop
out
nop
mov
cld
mov
repnz
rolb
movsl
es
in
add
sub
xchg
je
stos
mov
and
add
xchg
pop
aaa
ja
xor
cmp
out
mov
mov
outsb
push
jo
aam
ljmp
addr16
fs
imul
aam
iret
xchg
dec
cmp
push
adc
rcll
jbe
in
add
push
out
repnz
mov
ret
stc
xorl
jmp
jno
push
adc
mov
arpl
mov
scas
and
adc
mov
xchg
or
jb
repz
fcomps
push
xchg
and
stos
add
push
sarl
pop
mov
nop
js
and
or
pusha
jae
fadds
adc
lods
mov
out
nop
fidivl
cmpl
negl
sub
shll
gs
mov
sahf
add
or
pop
xlat
and
xchg
scas
dec
dec
push
icebp
dec
sub
les
sub
jmp
icebp
lahf
add
adc
mov
sub
add
lods
int3
push
adc
mov
fidivrl
fldenv
popf
lds
push
cmp
pop
mov
jge
pusha
fstl
sub
mov
ret
cmp
sahf
sub
cmp
or
test
mov
or
add
mov
pop
into
mov
pop
out
int
jns
and
or
addr16
pushf
push
sahf
mov
mov
adc
lcall
insl
xchg
mov
outsl
mov
sbb
jmp
xorb
stc
fisubs
cs
push
andb
pop
mov
repnz
mov
push
fistps
push
mov
in
and
push
imul
into
sub
push
mov
jo
mov
add
ret
out
push
jno
mov
enter
dec
add
mov
push
daa
in
cmp
rorl
lahf
add
push
jno
push
push
xchg
rolb
cmpsb
lret
outsl
hlt
and
aam
push
test
jmp
cwtl
cltd
xor
or
cli
sarl
xchg
repnz
cltd
in
ja
xchg
imul
movsl
pusha
xorl
aaa
mov
cmp
in
add
loope
sarl
sbb
sbb
iret
inc
sbb
clc
aad
stos
popa
aas
loope
ss
and
mov
scas
mov
sysenter
xor
or
sar
fwait
mov
fs
and
add
sti
fs
repnz
mov
mov
fnsave
test
inc
mov
jmp
repz
sub
bound
and
add
push
in
xlat
cmp
out
enter
inc
and
inc
ss
jecxz
jne
sub
pop
and
mov
loopne
loop
outsl
imul
xor
scas
lret
jle
push
sub
mov
mov
test
sbb
test
mov
cmp
pop
sub
add
addr16
xor
push
scas
push
pop
xchg
test
sbb
mov
cmp
loope
iret
mov
or
xchg
adc
addr16
mov
outsl
xlat
inc
cmpsl
jge
jmp
xchg
in
stos
cmp
sub
xor
jbe
adc
dec
sub
mov
sar
or
bound
aas
imul
ret
cmp
pop
lea
data16
fs
mov
lcall
aam
xlat
mov
aad
or
cmpsl
jnp
ret
aaa
retw
sbb
sub
dec
in
loop
nop
aam
clc
incb
daa
xchg
mov
jb
orl
pusha
jno
dec
popf
int
scas
mov
push
or
daa
mov
fadds
cmc
pop
enterw
in
mov
test
cltd
js
xor
fadd
std
push
je
rclb
sbb
test
jne
mov
add
pop
add
or
scas
pop
xor
enter
pusha
mov
push
ss
rorb
sbb
cmp
mov
and
inc
ja
mov
or
lret
adc
sub
es
adc
xchg
jbe
xor
pop
lea
cmp
popf
fdivrs
movsb
test
cmpsb
js
jg
jb
addr16
cmp
out
cmp
fisubl
dec
add
andb
and
or
add
push
dec
fcoml
pop
push
out
inc
cld
repz
mov
insb
pop
cld
xchg
lock
je
sbb
push
dec
push
test
cmp
scas
gs
ja
cmpsb
aaa
jle
mov
bound
bound
stos
bound
xchg
xor
dec
in
push
movsb
daa
testl
sub
fidivl
ret
shrl
mov
push
jp
pop
push
test
pop
popf
sub
xchg
mov
cmp
hlt
aad
xor
sti
lock
pop
lcall
enter
iret
xchg
lods
ss
adc
orl
sbb
cmp
cmpsl
mov
rorb
fdivrp
pop
sub
fnstsw
dec
jns
cli
jg
push
jne
negb
push
pop
add
inc
jmp
inc
ljmp
hlt
inc
imul
outsl
push
adc
or
out
cmp
cmp
and
mov
rcrl
adc
xchg
sub
ret
scas
push
popf
imul
jmp
imul
int3
jbe
outsl
aas
and
fcomps
cltd
adc
cmp
mov
or
mov
cmp
sub
and
outsb
mov
int3
pop
sub
xchg
jmp
adc
push
negl
test
fcompl
pop
push
mov
imul
pop
notb
xchg
adc
mov
daa
inc
leave
cmp
push
or
fbld
lahf
sbb
into
lock
int3
push
lds
test
dec
mov
and
movl
cwtl
cmc
inc
push
fucomi
xchg
aas
dec
adc
inc
inc
fadd
pop
cmpb
int
cmp
sub
cmp
out
stc
push
outsl
outsb
push
into
scas
inc
in
je
clc
sahf
ficoml
inc
cmp
and
jl
imul
jno
cwtl
xor
out
jle
ret
lcall
add
scas
mov
xchg
xchg
sub
fstpl
daa
mull
loop
jmp
imul
sub
xor
lcall
jg
rcr
inc
cmc
decb
and
stc
cmc
sbb
dec
rol
imul
sub
xlat
mov
out
lock
cltd
aaa
shll
xchg
jo
adc
clc
pop
in
push
cmp
mov
or
push
xor
outsl
dec
dec
lods
mov
jne
cmp
push
les
ss
adc
push
ss
pop
dec
sub
out
call
ds
pusha
sbb
mov
cs
push
iret
in
ljmp
jg
xchg
into
outsl
and
pop
push
dec
fincstp
shl
mov
and
add
arpl
push
int
aad
jae
std
inc
les
jl
nop
or
shlb
loopne
cld
mov
or
lock
loope
pop
xchg
fbld
ret
mov
iret
stc
test
mov
xchg
jnp
adc
cmp
aaa
or
aas
in
pop
loopne
jb
shll
sub
testb
pop
xor
aad
inc
dec
sahf
outsl
pop
mov
das
pop
movsl
add
fs
imul
enter
dec
or
adc
loop
ds
out
loop
icebp
cmpsb
movsb
bound
jecxz
xor
out
sub
popf
and
fldenv
pop
pop
sbb
mov
dec
pop
cmp
xor
push
push
adc
pushf
xchg
jl
fnstcw
sub
je
cli
jl
popa
arpl
pop
nop
inc
nop
imul
push
inc
xor
imul
xchg
sti
add
rorl
push
sbb
or
or
outsl
adc
ret
pop
jns
mov
mov
push
mov
outsl
pop
xor
jmp
xor
pop
mov
adcb
mov
push
mov
inc
jnp
or
jmp
add
push
ret
dec
xor
scas
push
sub
leave
cmc
loop
outsl
out
adc
pushf
mov
popf
lods
ret
jl
xor
jnp
rolb
je
or
rcrb
jbe
sub
pop
xorb
sbb
es
in
sub
dec
cmpsl
inc
or
push
mov
cmp
sbb
sahf
sub
xor
jne
dec
imul
ret
dec
push
xchg
lea
pop
repnz
stos
sub
xchg
jns
lods
push
lahf
nop
push
adc
xchg
leave
out
jecxz
fs
jnp
xor
iret
call
cmp
add
divl
and
push
mov
sub
jl
rolb
mov
imul
rclb
adc
rcl
push
jle
xchg
xor
adc
ret
xor
adc
je
mov
cmp
in
or
es
test
pop
into
adc
push
cmc
pop
or
movntq
xchg
arpl
stos
mov
mov
sub
std
inc
push
push
sbb
inc
add
cmp
dec
out
cmp
jno
fidivs
stos
cwtl
pop
adc
sbb
sbb
pop
sub
cmp
inc
xlat
loop
mov
fistl
or
jb
inc
arpl
shrb
fists
loopne
data16
and
loopne
and
loope
out
xor
mov
jp
add
lock
push
in
xchg
push
sbb
xchg
mov
scas
daa
mov
cmc
fadd
pop
outsb
cmpsb
cli
cmp
out
adc
pop
pop
out
cltd
pushf
fadds
pop
jns
jle
sbb
add
subb
std
out
add
xor
cld
pop
repnz
xchg
je
dec
and
lret
xchg
cmp
sbb
int3
sub
js
bound
shl
inc
jo
mov
mov
les
xlat
cmp
add
jae
jae
xor
out
pop
or
sub
dec
imul
mov
adc
sbb
adc
mov
cmp
xor
imul
int
aas
lahf
out
xor
cmp
fs
ds
sarl
and
push
into
sbb
sub
jl
xor
data16
push
int3
sbbb
je
inc
out
and
stc
outsl
test
or
fisttpl
xchg
daa
adcl
lcall
sbbb
xor
ljmp
sbb
dec
jae
pop
pusha
data16
popa
mov
adc
loopne
cmp
insb
cltd
sub
push
dec
hlt
sbb
dec
cld
in
jecxz
out
or
xchg
and
in
arpl
int3
stc
add
pushf
fdivl
xlat
imul
bound
stc
mov
outsb
push
xor
pop
pop
mov
push
cmpsb
pop
dec
popa
mov
mov
lret
mov
push
mov
pusha
in
fs
std
in
data16
roll
lret
xchg
lret
add
add
sub
sub
mov
enter
ss
adc
cmp
ds
adc
jo
in
sahf
stos
dec
nop
jb
movsb
sub
ds
sub
push
call
testb
lret
pop
loop
insb
inc
cld
int
and
cmpsb
xor
pop
idivb
add
xor
ljmp
insb
dec
jb
loope
add
ja
inc
icebp
mov
pushf
add
jns
std
xchg
shr
cld
jmp
mov
aam
mov
xor
fadds
jae
fs
lods
dec
insb
mov
out
and
lods
and
mov
es
pop
test
jno
sub
mov
pop
je
fisubl
fldt
imul
xchg
out
sub
add
sbb
xchg
mov
scas
repz
jns
jne
fstps
std
int3
incb
dec
addb
rcrb
loopne
xor
sbb
mov
ds
or
int3
popa
cmp
cmp
imul
xor
xor
or
lea
inc
hlt
rorb
adc
fcom
or
or
adc
pop
gs
loope
int
ja
dec
push
mov
inc
outsb
sbb
jle
push
lret
roll
mov
enter
pop
ds
or
mov
into
scas
sub
adc
ret
dec
cmp
or
je
cltd
xorb
and
sbb
in
sbb
lock
imul
loope
pop
lahf
push
nop
call
push
and
es
adc
stos
aaa
fsubp
push
lea
sbb
jnp
ljmp
mov
xor
sarl
in
and
imul
mov
sbb
cmp
ja
mov
or
testl
xor
adc
lods
ds
adc
pop
popf
inc
daa
mov
aaa
xor
lds
sub
jl
clc
out
mov
repz
loope
xchg
fsubr
inc
or
push
in
imul
insb
cmp
loope
cmp
push
mov
lret
data16
sub
add
push
mov
push
and
mov
addr16
aas
dec
fs
stos
sbbb
adc
hlt
mov
test
adc
pop
aaa
xchg
lcall
or
int3
jbe
pop
sub
and
cmp
and
push
xchg
mov
scas
fbld
xor
or
cmpl
mov
mov
inc
rcrb
outsl
fwait
pop
sahf
adc
sub
popf
mov
sti
nop
aas
cmp
testb
ret
dec
dec
pop
xor
lea
inc
jmp
std
sub
sbb
push
xchg
loop
inc
jp
jb
push
and
stos
dec
andl
jno
les
mov
push
sbb
push
xchg
in
pop
xlat
mull
stos
xor
jns
inc
pop
xchg
decl
jp
out
dec
mov
adc
clc
test
mov
test
addr16
scas
subb
xchg
jge
mov
mov
les
fucom
jnp
cmp
mov
add
rcll
sbbb
insl
popa
pop
or
test
xor
jecxz
cmp
and
jns
pop
cwtl
stos
xchg
inc
adc
daa
dec
add
mov
cld
dec
jle
arpl
dec
add
sub
subb
aam
mov
es
and
adc
pop
inc
jnp
jmp
call
jmp
jl
roll
mov
psllw
xor
lret
mov
pop
mov
ficoms
lods
push
pop
enter
fldcw
mov
lods
clc
mov
cli
movsl
mov
rorl
dec
in
mov
mov
roll
orl
imul
jb
push
mov
add
xchg
dec
jnp
cmc
adc
test
inc
shll
test
ret
sbb
shl
sbb
xchg
shr
movsb
or
mov
mov
andl
fwait
adc
jns
dec
shlb
hlt
int
or
js
lods
in
mov
cmpsb
mov
jecxz
mov
imul
lret
leave
adc
adc
test
push
insl
addr16
pop
jae
repnz
pop
int
hlt
test
inc
lret
nop
scas
jmp
sti
push
cmp
sub
mov
movsl
mov
sub
jle
out
ret
sbb
pop
inc
lods
out
jne
sbb
test
xchg
enter
ss
ja
lret
ja
dec
jmp
bound
stos
xchg
lds
ss
mov
lock
popa
pop
xor
or
in
jp
stos
xchg
mov
scas
cmc
lret
rcrb
in
fdivrl
push
clc
sub
add
add
lar
inc
ret
sub
push
cmp
mov
loopne
inc
les
or
sbb
aam
pop
loope
dec
xchg
jae
inc
dec
jo
mov
stos
jecxz
aam
jecxz
adc
inc
mov
add
and
jmp
mov
dec
add
jmp
mov
or
test
sub
aam
and
lcall
subl
ds
movsl
in
mov
das
xor
mov
mov
fmuls
arpl
scas
es
push
loopne
mov
cld
repz
sbb
xor
mov
cwtl
gs
lds
in
push
mov
push
xor
adc
int
xor
pop
xchg
pop
dec
mov
ffreep
sub
push
cltd
stos
movsl
push
jns
or
pop
mov
jb
jnp
es
je
scas
pop
sti
leave
cmpsl
mov
test
or
adc
sahf
incl
sbb
cld
jle
stos
xlat
out
sbb
pop
fnstsw
mov
fwait
jp
add
cmp
std
sbb
arpl
sbb
loop
xchg
jecxz
cmpl
cld
aam
testl
mov
popa
jg
jmp
js
out
stc
loope
enter
jo
jp
add
lcall
fsubr
push
fwait
mov
sub
fcomps
fisubrs
inc
adc
sbb
loop
test
test
repnz
lds
cmpsb
adc
push
nop
mov
sarb
mov
xchg
hlt
pop
icebp
cmc
imul
repnz
addr16
test
jmp
iret
add
inc
inc
daa
inc
outsl
lea
mov
insl
leave
inc
pushf
lds
mov
mov
pop
faddl
out
push
int3
add
cmp
mov
ljmp
pop
aam
add
js
push
mov
inc
ds
and
mov
movl
pop
xchg
insb
mov
jp
adc
clc
outsl
hlt
sub
and
and
adc
mov
jae
movsb
xlat
pop
inc
inc
mov
fidivrs
sub
mov
sbb
cwtl
mov
fdivrs
inc
sub
lock
in
lods
outsb
pop
out
mov
int
adc
cwtl
ret
pop
pop
sub
sahf
and
lock
push
jle
aaa
inc
or
cmp
inc
dec
xchg
pop
lahf
adc
aad
negl
hlt
hlt
out
dec
mov
popl
sub
mov
mov
adcb
pop
jge
out
sub
inc
inc
cmp
add
rcl
dec
xor
inc
cmp
pop
mov
jmp
xchg
mov
lock
jno
cmp
push
ljmpw
lods
inc
rdtsc
shl
mov
mov
imul
or
cli
jle
cld
test
xor
adc
xor
cmpsb
ret
cmp
outsl
push
jge
frstor
js
loope
adc
add
or
in
mov
push
xor
jns
inc
mov
mov
into
test
mov
xor
int
mov
das
gs
mov
test
dec
loop
xchg
push
push
ds
mov
and
inc
push
and
jmp
jnp
or
test
inc
lcall
sbb
jns
sub
dec
adc
test
lock
add
les
mov
and
and
sub
pop
ljmp
add
xchg
cmpsb
hlt
mov
mov
jp
cwtl
rcll
ret
out
sbb
push
add
test
sub
sub
pop
jbe
jb
sub
pop
js
jmp
outsb
jp
xor
dec
cmpsl
add
xor
inc
adc
push
jne
or
cwtl
cmp
xchg
stos
frstor
fldl
adc
jae
imull
pop
hlt
jo
out
lods
xorb
scas
cmp
mov
int
mov
ficoml
loope
dec
and
and
stc
out
ss
push
gs
sub
pop
cs
jnp
std
push
es
cmc
jge
mov
adc
pop
mov
loopne
mov
aad
dec
std
adcb
xor
fistpl
outsl
shrb
push
cmp
scas
sbb
push
mov
hlt
xor
pop
inc
pop
sarb
xor
movsl
push
jle
jns
arpl
lret
mov
cmp
mov
call
push
out
or
xchg
outsb
mov
push
je
into
ja
lods
adc
xchg
xchg
pushf
sub
push
testb
or
and
mov
es
jne
xor
iret
dec
pop
aad
cmp
push
or
sar
gs
in
jge
xchg
push
jge
mov
inc
or
or
insl
push
inc
stos
jle
sub
adc
xor
xchg
cmp
mov
rcll
std
add
rcll
cmp
int3
sub
pop
sti
cld
les
decb
enter
sbb
rcrb
nop
sbb
dec
and
insl
inc
clc
call
sub
cltd
movsl
mov
ficompl
into
cmpsl
rorb
xor
sub
lock
cltd
jne
hlt
mov
cmp
mov
mov
mov
iret
insb
mov
push
std
push
push
in
xchg
nop
imul
mov
jmp
or
cmpsl
fldl
fstp
pop
inc
out
movsb
gs
push
mov
sbb
lods
push
and
cltd
adc
fwait
push
xchg
mov
rolb
mov
iret
imul
dec
fidivl
leave
push
cmc
flds
orb
inc
je
xchg
into
jno
inc
sub
xchg
sbb
dec
push
pop
pop
dec
adc
inc
hlt
ja
jg
mov
cmpsb
jle
scas
repnz
push
pusha
scas
testl
inc
in
jbe
test
cmp
or
negb
fldenv
sbb
inc
jecxz
mov
loope
fbld
mov
test
clc
fwait
cmp
pop
shl
xlat
insb
scas
jne
addr16
cmpsb
fldl
push
hlt
lahf
add
dec
and
rolb
mov
inc
in
or
pop
inc
sbb
cmp
jg
repz
mov
mov
loopne
xchg
adc
lret
js
call
jne
pop
sahf
sub
je
fsub
in
lea
orl
andps
jae
push
jp
or
rorb
andl
sub
mov
xchg
mov
aas
push
loopne
adc
pop
dec
adc
mov
cmp
ret
pop
ss
ret
bound
jle
icebp
pop
dec
adc
in
push
pop
aad
stc
outsl
wbinvd
push
mov
add
jmp
xlat
lea
lret
pop
dec
mov
add
inc
cmpsb
push
xor
pop
fildl
or
adc
sub
cmp
out
dec
dec
mov
cli
sahf
jmp
adc
icebp
jnp
sti
adc
lcall
pushl
jmp
arpl
mov
adc
and
outsl
or
rcrb
dec
push
pop
xor
fwait
push
das
shll
pop
add
cmp
movsl
mov
dec
mov
pop
xlat
popf
push
vshufps
fistpll
adc
jns
jle
cltd
clc
jmp
fildl
mov
sbbl
jae
mov
jae
mov
and
fucomi
pop
popa
popa
pop
sti
movsb
scas
dec
scas
mov
fwait
mov
ja
cmp
or
mov
xor
int
jae
or
mov
mov
xchg
xchg
mov
xor
and
ds
xor
adc
inc
push
ss
mov
lods
adc
pusha
rcrl
xor
push
xchg
jae
jecxz
mov
stos
pop
cmp
sub
sbb
leave
call
cmp
js
mov
cmpsl
fsincos
loop
inc
xchg
jl
xchg
pop
repnz
jp
jne
push
cmp
les
movsl
imull
fisttpll
lods
push
repnz
call
icebp
leave
xchg
mov
inc
jno
ret
movl
xchg
mov
push
inc
push
inc
es
adc
cmp
dec
out
push
push
jo
out
xchg
pop
imul
xchg
cmp
jp
push
les
push
mov
loope
or
cmp
mov
and
or
je
add
sbb
push
lods
pop
shll
jmp
pop
jg
out
sub
sub
mov
pushf
xchg
gs
in
jb
je
addr16
jo
test
movsl
test
cltd
loopne
jg
add
mov
cmpsl
cmp
fwait
bound
int
push
leave
data16
push
sbb
out
aad
xor
pop
stc
int3
dec
jg
add
hlt
dec
cwtl
testb
insl
mov
mov
mov
sbb
push
iret
mov
sub
out
gs
in
mov
adc
scas
pop
pop
cmpsl
das
fs
mov
cmp
in
pop
aas
int
pop
fnstenv
push
ret
fcmove
adc
inc
loop
stos
jg
add
xor
xchg
inc
push
jbe
or
hlt
pushf
insb
rclb
test
icebp
out
insb
add
lret
or
les
les
dec
mov
call
jno
les
dec
idivl
inc
dec
push
into
repnz
fists
cs
outsl
dec
lret
and
sbb
call
push
pop
cltd
or
mov
add
ss
mov
ret
lahf
imul
cmp
out
lahf
mov
call
or
mov
testl
xor
mov
loop
out
dec
inc
cmpsb
cmp
int
mov
mov
les
das
addr16
push
clc
sub
loop
add
ret
ret
push
repnz
xchg
mov
or
shrb
add
loopne
push
ljmp
data16
lcall
sarb
dec
and
ret
addr16
int3
mov
mov
add
push
shlb
pop
ficomps
jecxz
xchg
cli
xor
xor
nop
mov
inc
jecxz
stos
aad
pop
ljmp
mov
sbb
lock
dec
insl
das
inc
lods
adc
cmpsl
cmp
ds
in
mov
test
pushl
loopne
aam
stc
pop
xchg
hlt
cmpsl
fwait
insb
cmp
adc
les
cmp
aas
clc
pop
test
mov
sbb
getsec
out
sub
loope
aad
aaa
out
lahf
xchg
jns
stos
adc
pop
dec
call
test
jle
test
imul
test
or
in
push
pop
mov
push
iret
xor
mov
pop
dec
pusha
and
imul
ret
add
imul
or
mov
subb
lea
and
cli
xlat
filds
inc
fldl
pop
push
xchg
mov
shlb
mov
push
mov
inc
jecxz
filds
inc
in
mov
in
xchg
shrb
xor
dec
add
outsb
bound
xchg
mov
add
ret
bound
das
imul
or
in
xchg
xchg
sbb
push
imul
pop
xor
mov
mov
dec
jg
adc
std
dec
insb
push
and
xchg
dec
sub
inc
fnstenv
xor
mov
xor
fisttpll
scas
xor
or
das
in
mov
loope
jmp
je
mov
ljmp
fiadds
cli
push
add
jbe
sahf
arpl
fwait
mov
or
fsubr
ss
ja
repnz
mov
inc
push
or
mov
dec
xchg
insl
sbb
mov
lret
xchg
xchg
cmp
lods
sbb
data16
addr16
mov
mov
or
fidivl
lods
sub
mov
pop
jbe
mov
adc
lods
inc
mov
popa
mov
sbb
cld
lods
mov
mov
stc
sub
repz
sbb
jb
faddp
cmp
and
mov
mov
jmp
adcb
mov
dec
lds
in
xor
ret
call
out
mov
ss
push
into
out
xchg
sarb
std
les
movsb
fwait
xchg
out
dec
lods
push
push
outsl
stc
sbb
fcoml
jecxz
jge
pushf
sbb
mov
cmp
incl
pop
dec
xchg
pop
cmpsb
inc
ss
push
mov
inc
xchg
stc
nop
mov
pop
and
mov
and
stos
sahf
rcr
addb
in
push
pop
bound
ljmp
in
gs
hlt
loop
or
inc
pushw
pop
lods
bound
fsub
movsb
out
out
jae
jo
xchg
dec
jl
xchg
test
fistl
pop
jnp
pusha
xor
mov
xchg
cmp
xor
dec
and
adc
add
jecxz
push
ret
cmp
dec
in
add
cmp
mov
cmp
jns
pop
mov
xor
ss
jg
icebp
pop
ljmp
jns
push
pop
adc
push
sbb
addr16
pop
push
cltd
pop
subb
cmp
int3
jle
aad
leave
aas
mov
nop
jle
jle
adc
add
scas
fcompl
std
adc
cmp
loop
outsb
fbstp
das
dec
in
pop
lcall
push
repnz
scas
lock
pop
popa
jno
xlat
or
in
jecxz
xchg
aas
mov
aaa
mov
mov
add
fsubrs
stc
sbb
mov
inc
cmp
dec
ror
mov
enter
iret
lock
ficompl
out
pop
cmp
jns
test
idivl
adc
rcrl
jo
cmpsb
jne
cs
pop
mov
scas
pop
es
ss
rcrb
mov
mov
ret
jl
out
rorl
sub
adc
xchg
xchg
dec
dec
inc
negb
loop
or
shl
xchg
les
jae
testl
rolb
pop
cmpsl
bound
insb
leave
or
adc
mov
mov
pop
sbbl
adc
inc
imul
push
fimull
out
std
push
lcall
mov
cmpsb
mov
test
push
dec
mov
stc
xor
jp
test
mov
cmp
data16
pop
sti
adc
adc
sub
pop
bound
lahf
in
test
lods
bound
call
pop
xor
movsl
push
test
mov
outsb
fwait
push
inc
sub
sbb
jns
adc
pop
push
into
nop
lds
hlt
sbb
mov
iret
outsl
imul
mov
ficoml
mov
dec
mov
sbb
aaa
test
frstor
and
movsb
test
repz
popa
cs
dec
addr16
xor
push
fsubrs
outsl
add
test
pushf
jne
pop
inc
test
xor
int3
inc
dec
idiv
push
sub
insb
adc
pop
adc
and
clc
icebp
outsl
push
xlat
ljmp
jns
ljmp
sbb
ret
xchg
push
push
faddp
lds
adc
inc
xchg
add
lcall
pop
scas
sub
jg
pusha
xchg
popl
ja
or
pop
sbb
clc
insb
mov
jge
out
push
enter
test
ds
push
aas
nop
lret
jne
mov
lods
cld
mov
dec
test
enter
movsl
jecxz
jg
test
add
out
xchg
filds
in
xchg
dec
sub
push
dec
repz
pop
insl
add
and
mov
xchg
inc
add
mov
stos
filds
mov
ror
lret
fldenv
cs
xchg
out
jo
mov
jb
pop
cs
jl
inc
or
mov
out
push
call
icebp
test
pusha
jle
addr16
das
push
ljmp
fdivrs
in
fnstsw
mov
lods
les
inc
xchg
jns
and
jl
mov
pop
mov
pushl
and
mov
or
pop
and
push
push
push
cmc
cmpsb
xor
fwait
mov
fwait
cmp
mov
mov
mov
mov
push
jle
add
mov
xchg
sbb
inc
push
mov
stc
mov
sub
scas
xor
aaa
sbb
xor
jmp
outsb
lea
xchg
cmp
add
rolb
pop
and
jnp
mov
test
gs
mov
insl
xorb
xchg
cltd
sbb
mov
test
add
xchg
push
mov
lods
outsb
mov
sub
or
xchg
lcall
add
and
lods
out
dec
pop
andl
add
push
mov
jle
in
es
lret
in
push
fadd
push
xor
xchg
sti
dec
dec
dec
push
imul
mov
repz
js
divl
sbb
push
stos
jmp
push
scas
movsl
lods
out
cmp
mov
in
push
push
adc
push
xor
push
and
lods
push
or
aam
sub
cmp
fisubrs
jnp
ljmp
int3
roll
mov
aaa
dec
mov
cmp
hlt
call
push
jle
call
daa
mov
decb
lret
jle
test
push
sub
xorl
cwtl
or
lcall
je
int
unpcklps
pop
adc
push
hlt
lods
lods
aam
and
push
sbbb
enter
nop
mov
cltd
or
out
mov
push
pop
jb
sbb
dec
pop
fmuls
sub
pop
enter
mov
mov
sub
jge
insb
sar
ret
pop
inc
mov
aas
dec
insl
scas
and
fadd
repz
pusha
mov
and
push
cmp
mov
aaa
bound
add
outsl
lret
xchg
sbb
jbe
push
lahf
xchg
and
sbb
aam
add
xchg
sbb
push
lock
leave
in
cmpsl
pop
sbb
inc
mov
std
rcrb
iret
adc
aas
out
dec
decb
rolb
mov
pop
out
into
andl
test
cmp
pop
dec
cmp
dec
int
loop
and
xchg
daa
dec
add
add
mov
mov
dec
faddl
mov
out
mov
cmpsl
mov
sub
pop
inc
and
mov
pop
adc
and
mov
add
adc
fisubrl
push
xchg
cmp
movsl
push
pusha
mov
enter
sti
lock
iret
and
jmp
mov
cmpl
lods
jg
xchg
repnz
mov
scas
mov
loope
stc
sub
insb
dec
push
jle
jns
sbb
outsb
jp
xchg
sub
adc
sbb
dec
xor
lods
cmp
and
mov
das
sbb
adc
pop
jmp
jge
lods
fwait
add
stc
mov
jg
and
fs
mov
mov
gs
cmpsb
or
cmc
push
jmp
lods
mov
pop
mov
ljmp
out
xchg
data16
xor
dec
inc
scas
add
sbb
in
je
cmpsl
mov
pop
mov
jb
or
ja
cmp
and
adc
incl
xor
lds
xlat
xor
or
jo
sbb
cltd
inc
jp
scas
fisttpll
movsb
cs
jmp
hlt
sbb
push
mov
and
pop
jle
loope
xor
jbe
les
xchg
ds
int
bound
std
decb
std
out
lret
loop
test
data16
imul
mov
sub
xchg
lods
pusha
pop
jg
loope
mov
xchg
inc
add
push
push
leave
push
xchg
loop
sahf
ja
mov
jecxz
shr
cmpsb
in
dec
xor
pop
nop
fs
mov
push
addr16
fcmovnu
mov
sbb
cs
cmp
xchg
inc
testb
add
fnstsw
cmp
fcmovbe
mov
inc
and
jmp
dec
pusha
and
sahf
shll
out
or
rorl
fwait
lahf
xlat
pop
test
or
add
push
cltd
loope
into
or
clc
lods
jo
pop
add
xor
inc
cmpsb
mov
pop
push
push
repz
std
mov
test
pop
sbb
out
xor
push
lock
pop
or
jb
or
xchg
jae
sbb
push
or
xor
ret
or
fmull
xchg
mov
ljmp
push
in
jb
bound
adc
data16
cld
movsb
movsb
mov
loopne
push
movsl
mov
arpl
jmp
loop
push
mov
adc
xor
or
mov
add
test
dec
rcll
pop
lret
sti
push
daa
fistl
std
or
xlat
test
stos
xor
je
jno
test
inc
mov
test
sar
mov
pusha
pop
mov
fisubrs
pop
dec
adc
in
mov
negb
test
fsubs
out
nop
mov
hlt
pushf
cmp
mov
dec
mov
xchg
mov
cmp
pop
mov
and
add
stos
fiaddl
jmp
out
xor
and
xor
into
sar
sub
or
outsb
mov
cs
pop
aam
jb
enter
or
call
sub
or
ja
cmp
inc
sbb
out
movsb
cld
xchg
mov
repnz
jge
xchg
adc
sarl
xchg
dec
xor
daa
mov
fidivs
in
pusha
jbe
cwtl
ljmp
xlat
sub
cmp
out
and
repz
cwtl
mov
xlat
and
dec
mov
dec
outsl
nop
and
pop
jne
adc
test
dec
nop
popf
pushf
cmpsl
loop
pop
ja
xchg
jecxz
fisubl
push
and
enter
dec
jne
xlat
addl
sbb
cmp
repz
cli
cmc
insl
mov
jbe
dec
orb
mulb
jge
and
lods
imul
ret
or
or
xchg
icebp
mov
or
mov
sbb
jge
mov
push
lea
in
and
xchg
xchg
jns
push
cwtl
loope
xchg
or
fnstenv
push
mov
mov
xor
ds
lods
out
repnz
aam
lods
push
sub
xor
jmp
inc
imul
or
fwait
addl
cmpsl
pop
pop
rcrb
sti
push
out
and
scas
push
mov
daa
xchg
ds
cmp
aaa
lahf
loopne
test
push
sub
int3
imul
pop
cld
pop
imul
xor
cmp
les
out
xchg
addr16
cltd
pop
pop
mov
fwait
addb
xchg
loopne
add
out
outsb
lret
scas
xchg
loop
mov
subb
ror
mov
cmp
movsl
ds
pop
mov
sub
adc
daa
add
out
adc
sub
jge
jmp
in
xchg
out
fcoml
lea
mov
dec
dec
aas
cmc
lret
sbb
scas
gs
dec
in
clc
mov
xchg
dec
mov
jge
and
xor
stc
pop
loopne
dec
inc
jno
out
sub
mov
ret
mov
outsb
add
xlat
inc
data16
xchg
pusha
cld
lret
jle
add
leave
push
stc
push
sub
xchg
adc
in
push
sahf
jmp
mov
mov
xor
ja
xchg
inc
dec
arpl
push
jnp
xchg
out
js
sbb
in
and
sbb
fwait
push
push
out
lods
cld
scas
insb
jae
mov
pop
push
les
pop
xchg
sbb
movsb
xor
ucomiss
lods
jmp
scas
ret
mov
rcl
lcall
pop
sub
jp
pop
pop
mov
mov
pushf
push
cld
int
xor
data16
test
mov
xchg
rorb
test
int
std
xchg
pop
pop
pop
push
sbb
push
repz
jp
leave
pop
stc
ret
xor
jo
mov
pop
mov
lods
cmp
jne
pop
cmp
fdiv
test
mov
bound
jb
mov
add
dec
inc
and
xchg
jne,pn
jp
call
sub
cmp
jo,pn
xor
sub
negl
icebp
push
test
dec
scas
lods
leave
add
cltd
adc
icebp
pop
rorb
ror
inc
jge
into
lret
xchg
dec
push
adcl
jmp
dec
cld
jg
push
lods
hlt
and
xchg
test
ret
cmp
hlt
xchg
arpl
divl
cli
enter
test
sub
in
lcall
lea
lock
cmpsl
adc
mov
xor
and
enter
int3
push
dec
mov
sbb
push
push
fisubrl
out
addr16
inc
ds
dec
mov
push
mov
sbb
jae
adc
mov
xchg
lea
call
jmp
repz
inc
sub
jb
imull
movsl
sar
mov
ffree
insb
xchg
jg
push
xchg
push
jno
movsb
add
stos
mov
je
pop
jl
and
dec
insl
mov
loopne
and
mov
mov
pop
sub
mov
sbb
lret
dec
lds
test
imul
jo
xchg
or
outsl
insl
xor
add
in
mov
hlt
push
dec
scas
adc
imul
sbb
push
loop
xor
outsl
inc
dec
ja
lret
push
scas
out
das
push
sub
add
js
nop
gs
aaa
test
stc
sahf
loop
out
mov
dec
aas
jb
cwtl
lea
int
ja
sub
cli
or
mov
pop
pop
xchg
sbb
and
push
adc
ja
pusha
sahf
push
or
lret
xor
shl
shl
pop
mov
cmp
inc
mov
pop
cmp
mov
loop
scas
bnd
jnp
lods
js
sbb
pusha
mov
cmp
roll
fisubrs
push
xor
and
fs
sub
ret
adc
test
lock
mov
add
pop
pusha
sbb
mov
xlat
inc
insl
sbb
xor
out
fwait
add
cmp
movb
rorl
sbb
lret
add
and
add
mov
xchg
das
repnz
sbb
add
dec
sbb
pop
lcall
xchg
lods
outsb
adc
jnp
or
push
das
cmp
test
mov
pushw
adc
int
adc
or
insb
inc
xor
insb
xchg
cld
fwait
adc
push
test
mov
fsubl
jne
scas
cmp
add
pop
adc
es
icebp
ljmp
jne
in
jl
sub
stos
xor
or
or
pusha
cwtl
or
jns
mov
lret
dec
inc
adc
mov
and
movsl
scas
dec
pop
imul
pop
lret
out
mov
addr16
mov
ljmp
sub
daa
nop
out
cmp
push
add
cmp
sub
jecxz
mov
mov
mov
lock
sahf
push
jle
in
cmp
mov
outsb
dec
out
mov
or
jno
xorps
roll
test
jns
out
sub
inc
xchg
jge
pop
adc
stc
xor
rcrb
loope
sub
nop
arpl
sub
dec
sbb
inc
lret
je
push
jo
add
clc
fisttps
xchg
test
outsb
ret
pop
add
leave
inc
ja
nop
in
sub
pop
inc
sbb
movsbl
cmc
out
push
mov
xor
pop
shrl
push
xchg
inc
inc
sbb
mov
jmp
rorl
hlt
add
dec
sahf
lock
aad
sti
test
fdivr
jbe
lret
loopne
iret
mov
test
mov
xor
push
repz
and
xor
mov
stos
jp
mov
add
or
shrb
sbb
mov
adc
mov
movl
out
daa
in
je
dec
push
cwtl
stos
mov
sub
shrl
push
mov
xchg
mov
jle
rcl
ljmp
je
stc
and
movsl
nop
addr16
mov
xor
pop
jns
cmp
sub
sarb
lock
je
iret
ljmp
rcl
cli
push
iret
pop
adcl
push
and
mov
dec
add
jp
cmp
cmpsb
mov
dec
ret
jmp
jne
in
or
jbe
push
cmp
dec
in
push
fsts
js
subb
imul
dec
adcl
inc
cmove
shrl
jo
mov
stos
pop
xchg
xchg
add
jno
popa
outsl
pusha
shr
das
inc
iret
shrl
jo
xor
addr16
mov
shlb
inc
pop
imul
fcoms
daa
xor
into
test
rcl
rcrb
rcrl
sbb
jmp
out
testb
sub
jno
sbb
mov
negb
insb
iret
dec
aad
loope
imul
je
divb
mov
and
mov
ds
mov
movsl
sar
fabs
jns
xchg
loope
enter
cmp
xor
outsb
inc
pushf
mov
xor
sub
dec
pop
movsb
insb
cld
lods
adc
adc
mov
in
dec
mov
jne
fst
int3
stc
jmp
mov
ja
lahf
sbb
mov
inc
fs
add
dec
call
jns
push
lret
add
nop
outsb
xlat
sub
cmp
fstps
imul
cmc
outsl
pop
and
push
add
inc
mov
xchg
in
inc
les
testl
jmp
jno
pop
mov
loope
lret
sbb
jo
movb
arpl
mov
sbb
ret
shll
inc
roll
sub
movb
and
pop
or
inc
rorb
mov
andps
mov
stc
test
lods
test
mov
in
lock
sbb
mov
pusha
lret
cmp
sub
iret
fnsave
xor
div
clc
pop
jo
cmp
dec
xorb
add
cld
pop
bnd
gs
js
adc
push
pop
call
mov
and
ret
sti
cmp
pop
fstpt
mov
outsl
ror
inc
popa
or
je
out
ds
sub
dec
scas
xor
sbb
jmp
ret
add
push
test
imul
mov
or
mov
iret
jmp
int
movsb
ljmp
cmp
test
stc
loop
mov
popa
cmp
jne
xchg
or
mov
mov
je
in
jnp
push
mov
ret
insl
stc
xchg
in
xchg
mov
js
out
jae
push
ja
pop
out
lcall
mov
or
or
add
sbb
dec
es
pop
mov
adc
add
and
stos
cmp
push
pop
sarl
push
sub
popf
imull
ljmp
adcl
push
aas
ret
push
clc
iret
dec
sbb
add
mov
sub
fidivs
inc
ss
mov
mov
jge
adc
movsl
shl
ljmp
xor
pop
lcall
mov
cmp
mov
in
cmpsl
mov
out
hlt
sbb
push
jne
cmc
lret
gs
mov
cmp
rorl
add
sbbb
inc
lea
push
shrb
sbb
push
pop
or
xor
add
scas
sub
and
cmpsl
dec
push
lret
addl
mov
cld
inc
fwait
add
sub
mov
sub
cmp
and
addr16
imul
hlt
mov
inc
fldcw
dec
int
sub
mov
and
insl
add
gs
pop
mov
jne
cmpsl
out
push
cmp
scas
xchg
inc
inc
xchg
lods
mov
test
fwait
jae
das
mov
push
dec
add
nop
pusha
dec
paddd
daa
aaa
inc
cmpsl
mov
or
mov
add
test
out
pop
lcall
sbb
imul
je
mov
arpl
lods
inc
fadds
popf
call
mov
adcl
mov
push
and
shll
mov
fisubrl
lret
imul
cltd
int3
xchg
jne
mov
add
or
and
mov
pop
repnz
imul
fnstcw
pop
int3
and
shll
dec
in
mov
lods
xchg
addr16
sar
pop
in
cltd
arpl
mov
xor
decl
hlt
or
inc
mov
and
aaa
jb
lret
push
ret
std
fisttpl
icebp
adc
icebp
jg
mov
xor
daa
pop
jns
mov
pop
sbb
pushf
mov
lahf
test
sar
mov
sbb
fnstenv
jb
push
nop
xchg
aaa
xchg
aaa
pusha
xchg
and
movsl
icebp
xor
jae
push
and
and
popa
lret
icebp
in
xor
divb
push
icebp
fstpt
ret
sub
out
ja
fwait
das
shlb
xchg
and
xchg
sbb
mov
gs
or
shlb
fs
xor
clc
pop
push
ret
std
mov
and
add
into
les
add
push
sub
adc
fbld
sub
xor
push
cmp
sbbb
jle
mov
mov
cmp
mov
inc
or
pop
xor
es
xchg
xchg
shl
push
or
cmp
out
ret
dec
in
testl
and
xlat
inc
adc
out
mov
pop
mov
fidivrl
je
out
not
pushf
pop
arpl
out
jns
cmc
jne
fisttpl
or
jne
mov
mov
xor
loopne
jbe
adc
lds
or
aas
mov
sbb
mov
and
pop
pop
jne
mov
int3
xchg
mov
jge
ja
and
sub
xor
jl
jmp
jmp
shlb
test
jne
cmp
mov
test
sub
pop
mov
inc
jge
mov
xorb
int
mov
lds
out
test
jns
mulb
sub
sbb
hlt
out
push
push
adc
dec
cmpsl
mov
cs
flds
cmc
into
test
mov
fisubrl
sbb
mov
inc
or
add
xor
arpl
stos
mov
sub
ljmp
ret
sub
inc
jle
jecxz
pusha
mov
insb
int3
mov
pop
add
xchg
ret
data16
xchg
mull
mov
inc
das
inc
arpl
psubsw
mov
fstps
xchg
daa
mov
sbb
ja
iret
rcrb
es
pop
adc
nop
clc
xlat
mov
ljmp
in
push
pusha
repnz
std
dec
pop
adc
inc
xor
adc
mov
in
push
sbb
and
js
jecxz
popa
mov
repz
enter
jmp
jbe
int
lret
rcl
enter
mov
loop
aaa
ljmp
mov
scas
movsl
lcall
push
mov
cltd
shl
xchg
inc
jge
faddl
lods
add
shll
mov
ret
sub
jb
fwait
sar
fcmovu
lods
sahf
out
lcall
test
dec
jae
mov
xchg
pop
push
sub
dec
test
sub
or
inc
push
jns
sub
test
loop
mov
nop
jbe
push
and
xchg
repnz
enter
and
hlt
jo
mov
cmp
dec
ret
les
stos
adc
jmp
negl
fsubrs
out
loopne
mov
enter
dec
imul
pop
dec
outsl
jbe
jmp
ds
fildll
testb
xchg
nop
mov
fstps
mov
repnz
adc
cmp
pop
faddl
xor
or
cmp
rclb
das
loope
imull
mov
sar
stos
das
daa
mov
pusha
aad
sub
test
sahf
out
mov
ret
push
xor
aad
xor
cwtl
in
sbb
push
jae
push
xchg
sub
or
mov
cmp
cmp
lods
jne
ss
dec
jp
loope
fildl
cmpsb
in
ret
fstl
mov
xchg
sub
sbb
push
and
popa
int
fistpll
fildll
mov
in
cmpsb
lret
fcmove
push
testb
mov
scas
imull
xchg
gs
lahf
pop
jae
cmp
push
shll
pop
xchg
outsw
jno
notl
js
mov
shl
sub
pop
daa
imul
cwtl
rclb
lods
mov
fwait
int3
or
dec
jp
xor
sbb
jnp
fnstsw
fdivl
mov
out
popl
cmp
sub
mov
repz
inc
mov
movsb
aam
lock
mov
leave
stos
dec
adc
cmpb
jbe
or
bound
insl
sub
lcall
dec
in
xchg
jno
fmuls
pop
or
fs
adc
imul
add
xchg
mov
dec
mull
cmpl
stos
mov
pop
outsb
xor
mov
and
mov
sub
jmp
pop
push
mov
dec
mov
pushf
cs
pusha
dec
or
sbb
sub
mov
test
adc
inc
in
pop
out
inc
sbb
sbb
adc
leave
lret
cli
and
pop
bswap
test
mov
cmp
rorl
stc
sbb
sub
mov
fs
inc
sub
push
mov
lods
icebp
out
das
jb
pop
adc
pop
mov
pop
nop
dec
mov
sub
jl
cmp
cld
mov
jp
and
testb
adc
dec
mov
notb
ret
cmp
xorb
and
mov
push
popa
int
scas
jle
push
data16
pop
sub
inc
or
jne
cld
das
je
mov
inc
dec
cmpsl
imul
add
jns
push
sub
sar
int3
in
aad
out
into
mov
jns
inc
mov
or
out
push
mov
mov
add
xchg
aas
mov
dec
imul
cltd
addr16
xchg
aaa
mov
jmp
addr16
scas
pop
filds
adc
gs
dec
repnz
or
daa
lahf
das
std
fists
rorl
daa
aaa
sbb
pop
fld
mov
leave
out
pop
ret
push
lret
cmp
or
xchg
xchg
and
jns
scas
ret
xor
sbb
insl
inc
push
dec
pop
jbe
jl
pop
stc
or
jne
dec
mov
mov
cwtl
lock
xorl
in
cld
popf
ja
movsb
movsb
dec
imul
std
xchg
xor
enter
inc
mov
jbe
sbb
aad
jl
out
cli
popa
adc
loope
pop
stc
out
es
sti
test
pop
call
cs
repz
xchg
cmc
inc
clc
mov
scas
inc
inc
lret
notl
sahf
inc
pop
push
hlt
and
arpl
jmp
sarb
addb
sbb
pop
mov
add
push
and
stc
scas
and
push
mov
loop,pt
cmp
xorl
mov
loope
dec
out
aaa
lods
lret
lock
push
leave
adc
lahf
insb
in
invd
jb
push
dec
mov
sbb
add
in
rorb
mov
dec
aad
lcall
sbb
loop
popf
in
adc
jle
and
jnp
push
sti
and
lock
imul
or
loope
and
sti
gs
mov
popl
pop
push
jg
sbb
jl
xor
mov
push
int3
mov
adc
dec
sub
js
cwtl
or
gs
sbb
pop
lahf
stos
shll
out
ret
mov
xchg
push
jae
mov
xor
outsb
test
jmp
adc
adc
movsb
and
inc
rorb
and
mov
ss
cmp
and
inc
sbb
test
rcrl
pop
cmp
aas
negb
lods
jle
lret
addr16
ret
pusha
and
inc
xchg
mov
mov
fistpll
adc
and
mov
pop
xor
stc
xor
pop
fcom
jb
shl
aaa
iret
divl
imul
int
jne
pop
and
or
jl
push
cmpb
fisubrl
pop
je
xchg
inc
cmpsl
ficomps
jg
data16
mov
sbb
inc
in
or
adc
cld
scas
sub
repz
enter
pop
sub
push
arpl
inc
sti
push
lcall
andl
xor
and
adc
outsl
or
jg
aaa
movsb
inc
enter
mov
pop
insb
mov
mov
int
sahf
cmpsl
inc
jns
jns
sahf
mov
sub
adc
arpl
inc
int3
lods
jecxz
inc
popf
jbe
frstor
push
int
mov
xor
or
inc
sub
cmp
in
and
imul
xchg
stos
ja
mov
adc
adc
lcall
jge
popf
jg
lea
nop
cmp
cmp
jnp
inc
in
inc
sbb
and
jle
xor
xor
addr16
stos
push
push
mov
inc
repnz
in
leave
cmpsl
push
fadds
icebp
xor
push
rclb
dec
sub
cmc
jge
xchg
imul
scas
fisubs
and
xchg
mov
pop
nop
fwait
lret
xlat
lds
out
jecxz
or
adc
sahf
lret
push
mov
jp
imul
adc
jl
xor
push
nop
loop
hlt
xchg
xchg
dec
andb
add
push
sub
and
push
mov
movsb
cmc
sbb
scas
push
push
xchg
mov
push
iret
jbe
shlb
fwait
out
fstl
iret
mov
cltd
mov
jne
insb
mov
jo
std
ljmp
shl
test
jo
add
fucomp
mov
cwtl
inc
stos
shrl
add
or
or
jecxz
add
int3
cmpsb
push
mov
stos
rorl
inc
and
call
xchg
or
scas
or
cli
and
ja
add
test
das
unpckhps
xchg
out
or
mov
sbb
xor
pop
add
cs
cwtl
push
pop
jae
mov
lahf
test
rcl
fsub
gs
jp
push
insb
clc
mov
dec
pop
fstps
add
sub
mov
cltd
mov
insl
bound
push
stos
cmp
push
push
jbe
clc
dec
xor
fmuls
aad
scas
xor
add
cmpsb
jg
insb
mov
call
push
addr16
jbe
mov
loopne
outsl
fdivrl
mov
popa
cltd
mov
inc
mov
mov
faddl
or
in
insb
push
fcompl
jo
jnp
sahf
mov
add
pop
std
mov
mov
in
adc
popa
fistpl
pusha
xchg
ret
pop
out
in
xor
mov
pushf
cmp
xchg
lds
push
inc
push
or
repz
inc
call
fs
clc
cmc
add
sbb
popf
lods
fiadds
adc
loop
scas
inc
push
popf
mov
jns
popa
cs
bound
stos
cmp
aad
in
lods
enter
cmp
aas
popf
mov
jnp
movsb
and
push
popf
shrl
stos
dec
mov
push
call
iret
in
addr16
pusha
cvttps2pi
jne
enter
mov
add
push
lahf
mov
fs
mov
and
movsl
jns
dec
xor
push
in
into
ja
imul
add
das
and
cld
inc
mov
outsb
adc
sbb
adc
loope
add
adc
and
or
or
mull
dec
test
sarl
mov
icebp
xchg
xchg
std
pop
push
pop
pop
rcrb
or
xor
bound
xchg
scas
movsb
jno
in
daa
scas
repnz
dec
scas
push
je
loop
dec
ljmp
test
cmpl
mov
pop
cmp
pop
push
mov
and
adc
mov
cmp
or
jl
icebp
mov
ficoml
pop
cmp
insl
cld
fwait
pop
xor
mov
test
add
enter
loopne
fildll
iret
jbe
mov
popf
cmp
xchg
fstpl
data16
lret
clc
addr16
and
lahf
sahf
lcall
and
test
fwait
add
push
test
adc
iret
adc
jp
mov
insl
sahf
enter
in
jnp
inc
lds
push
ret
mov
int3
xor
xor
pushf
outsl
pusha
inc
xchg
push
fidivs
sub
push
sbb
inc
and
xchg
mov
test
push
adc
sbb
icebp
push
adc
dec
lret
js
cli
dec
inc
sbb
push
mov
mov
lret
xchg
jg
pop
mov
xchg
mov
mov
inc
sbb
pop
sub
mov
xor
sbb
jle
dec
sbb
lock
xor
out
or
jbe
scas
orb
out
or
ret
or
push
cmpsl
fs
arpl
insb
and
pusha
inc
sub
push
shll
mov
add
dec
jns
pop
shrl
mov
sub
jbe
mov
fildll
call
fmulp
mov
lock
push
ljmp
ret
ljmp
mov
push
lret
adc
and
jbe
pusha
mov
ret
icebp
loopne
adc
int
std
imul
fldenv
xor
and
mov
mov
sbb
into
push
cmp
cmp
loop
add
pop
std
push
in
mov
jp
das
daa
jecxz
ljmp
repnz
mov
cmpsl
xchg
mov
js
cmp
mov
test
lret
faddp
in
mov
ret
imul
loopne
pop
lret
jg
popf
push
xchg
daa
mov
mov
cmp
mov
inc
inc
adc
xor
iret
pop
aam
icebp
cmp
mull
push
jg
ret
fldt
push
or
push
xchg
lods
stos
mov
iret
scas
insl
xor
jno
mov
aaa
mov
scas
xchg
sub
inc
pop
push
jo
or
cli
push
mov
mov
nop
xchg
outsl
adc
mov
dec
and
jnp
and
sbb
fistl
js
xor
ds
cmpsl
inc
repz
fadds
scas
cmpsl
not
orb
xchg
inc
fcoml
mov
mov
std
shl
push
cwtl
test
jecxz
ret
cmpb
mov
rcrb
jle
fnsave
jg
int3
xor
xchg
ljmp
mov
movsb
pop
sbb
pop
test
and
lods
dec
xlat
push
mov
xor
inc
das
sub
jge
mov
rol
mov
les
dec
add
in
push
mov
xchg
daa
nop
mov
sub
mov
jo
jnp
shll
or
push
push
inc
arpl
clc
xor
or
cmp
pop
repz
into
fs
ret
xor
mov
fxch
and
cmpb
fsubrl
pop
popa
dec
imul
arpl
xlat
mov
adc
pop
fcoml
fcomps
lahf
lea
mov
adc
les
iret
enter
hlt
xchg
xlat
mov
imulb
lods
outsb
stos
enter
inc
or
sbb
inc
aas
lods
lret
cmp
mov
leave
cwtl
mov
mov
mov
cmc
pop
inc
rorb
scas
mov
fdivl
sbb
jecxz
popl
inc
inc
sub
loopne
and
mov
loopne
fisttpll
sbb
roll
shlb
mov
repz
das
sahf
cmp
sti
mov
out
mov
xorb
xchg
cld
xor
push
repnz
sbb
adc
mov
faddp
lret
cmp
xlat
inc
or
test
mov
inc
mov
ret
andb
add
loope
xlat
iret
mov
adc
xor
aaa
icebp
and
stos
jb
adc
xor
fisttpll
std
ja
lods
loope
arpl
cmp
xorb
push
inc
and
push
xlat
mov
pop
xorb
mov
cmp
push
testl
dec
insb
cmp
sbb
inc
shlb
xchg
in
shr
xchg
clc
add
popf
dec
cmp
mov
push
into
call
inc
cmp
jns
rcrl
xchg
mov
pop
push
add
aaa
nop
sbb
in
or
ret
cmp
sub
mov
in
fcmovnu
loopne
fsubrs
mov
jo
ja
push
cmc
idivb
lods
add
lcall
inc
movb
and
fcompl
out
xchg
aas
data16
xchg
jbe
pop
xchg
pop
fs
sub
xor
popf
hlt
or
push
sub
lahf
push
out
jb
stos
pop
push
stc
and
out
int3
aad
outsl
cmp
jo
in
adc
arpl
push
call
sub
dec
gs
jo
cs
inc
dec
gs
jae
cs
cmp
adc
aaa
mov
aaa
shl
mov
mov
sub
fsub
adc
jne
fcomps
insl
adcb
gs
fistl
pop
jmp
mov
arpl
mov
das
inc
ret
outsb
cmp
stos
inc
jbe
jnp
fwait
push
push
sub
pop
adc
in
addr16
jge
repz
mov
std
xor
pusha
push
push
pop
sub
rorb
out
mov
daa
xchg
dec
mov
pop
xchg
jl
pop
mov
int
test
insl
je
sub
iret
aam
outsl
push
into
push
push
xchg
jno
fidivrs
xor
sahf
push
push
fldz
or
and
lahf
dec
cs
dec
add
fbstp
dec
or
or
lcall
jne
out
test
in
pop
ljmp
clc
sbb
mov
sub
or
ret
mov
xchg
call
call
test
add
leave
popf
in
or
paddw
and
inc
das
hlt
jno
mov
stc
mov
mov
filds
or
pop
cmp
inc
jmp
pop
data16
xchg
xor
test
adcb
mov
repnz
push
repnz
jp
and
mov
popa
icebp
jp
push
sahf
pop
jmp
pop
jmp
stos
scas
orl
stos
pop
adc
lahf
lret
repnz
dec
xchg
jne
fadd
jg
testb
jmp
inc
pop
jns
mov
rcll
iret
arpl
shrb
xchg
adc
imul
lret
mov
jae
jecxz
sub
icebp
dec
mov
loop
cmp
pop
popf
out
sarb
sbb
ss
jnp
lret
inc
sub
call
and
bound
xor
inc
sbb
push
or
jo
or
sbbl
xchg
clc
in
adc
adc
xchg
xor
in
mov
cmp
nop
in
aaa
scas
jle
jecxz
jle
jo
push
lods
dec
aaa
in
mov
clc
pushf
push
pop
in
out
andb
lret
movsl
sub
dec
js
imul
jb
outsb
insb
adc
test
jecxz
or
mov
pusha
sub
jp
bound
xchg
push
scas
int
jp
mov
jecxz
add
pop
xchg
inc
arpl
mov
insl
and
push
dec
jg
push
cmc
out
incb
adc
push
in
dec
in
or
dec
cwtl
xor
push
or
xlat
xor
daa
pop
hlt
cmp
sub
push
jl
jno
scas
cmp
in
lret
fucomip
mov
out
sub
mov
rcl
push
mov
jmp
pop
lods
cmpsl
xchg
jo
fcomps
pop
rcrl
ss
into
ficomps
or
jle
xchg
insb
cmpsl
sbb
mov
dec
mov
jb
mov
mov
iret
add
xor
scas
clc
sub
popa
jge
mov
pop
cltd
mov
sbb
mov
shld
ds
mov
in
dec
call
aam
fidivrl
aad
mov
jnp
ds
sub
gs
rcll
lock
xchg
in
inc
les
sbb
fmuls
cmp
test
dec
out
mov
adc
ja
xorl
xchg
enter
push
leave
das
mov
add
lret
pop
cmp
lds
int3
dec
imul
xor
pop
mov
lods
ret
mov
inc
repnz
mov
rcr
adc
add
mov
pop
mov
shl
mov
cmp
mov
jae
cmp
ret
lds
pop
mov
sbb
push
hlt
stos
jno
dec
sub
fstpt
mov
pop
lods
push
sbb
sarl
sbb
xchg
imul
push
cld
cmc
bound
imul
fnstcw
mov
decl
sub
in
icebp
jecxz
mov
cmp
jg
dec
int
sbbb
rorb
imul
jae
push
jmp
aad
jg
mov
sahf
xlat
pop
scas
mov
lcall
rcr
mov
xor
sub
dec
push
divb
and
repnz
std
stc
lods
xchg
enter
add
mov
pop
pop
loop
mov
test
mov
cld
dec
es
sbb
int3
rcrb
out
out
inc
lods
and
pop
in
sbb
cld
ret
int
push
icebp
popa
mov
fdivl
mov
lods
cmc
push
jmp
adc
out
arpl
pop
fadd
dec
add
pop
pop
cmp
das
int3
push
sahf
dec
jnp
ret
int
aas
mov
or
shll
out
cmpsb
add
jns
lods
js
lds
push
dec
push
jo
out
ja
mov
in
sbb
sbb
push
xchg
insb
addr16
sahf
add
loop
into
jb
popa
adc
daa
je
cmp
xchg
roll
lea
mov
aam
sub
data16
sub
push
dec
jg
jg
in
out
ss
testb
enter
cmp
das
out
dec
and
dec
lods
mov
shll
nop
stc
jmp
fdivs
xchg
jbe
xchg
mov
push
fwait
ret
in
in
add
jg
dec
dec
out
push
subl
xor
adc
scas
movsb
repnz
mov
xchg
gs
daa
pop
gs
lods
repnz
popa
jno
inc
pushf
or
adc
xor
sbb
mov
mov
pop
jb
aad
icebp
lods
gs
in
add
inc
xchg
stos
vmread
cmc
lret
cmc
xchg
xor
out
mov
stc
sub
lahf
repnz
jl
cmc
enter
xchg
mov
notb
sub
stos
dec
jns
in
add
daa
jle
jae
dec
call
ret
popf
mov
mov
add
lahf
xchg
jle
inc
jo
mov
mov
popf
pop
shlb
lret
mov
out
pop
scas
fmul
fcompl
addr16
sub
push
mov
cltd
enter
mov
mov
xor
mov
mov
imul
pop
testb
shl
into
or
add
popf
adc
mov
sub
pushf
add
je
jmp
mov
mov
mov
sarb
push
insb
pushf
lods
pusha
das
or
sbb
fsubrl
cmpsl
cmp
aam
sarb
das
mov
mov
xor
xor
daa
hlt
cmp
out
jne
and
mov
jle
pop
scas
mov
jns
cmpsl
andl
out
ret
imul
hlt
push
add
dec
fcmovbe
cmp
pop
cld
rcrb
dec
in
cmp
fmull
adc
adc
fistpl
xor
push
xchg
imul
dec
stc
loope
cld
jb
ds
out
dec
cli
mov
push
cmp
cli
imul
pop
sbb
nop
add
cli
xchg
sti
cmp
int3
mov
push
lcall
add
adc
cli
pop
push
cltd
inc
cltd
out
xor
aas
incl
icebp
popf
inc
les
arpl
imul
pushf
and
inc
cmp
cld
mov
cs
jmp
adc
jp
shlb
test
add
dec
lock
or
mov
cld
shrd
cmp
jne
movsl
fbstp
incl
fidivrs
div
dec
fwait
push
push
xchg
add
jo
imul
insl
mov
test
fsubs
ret
jmp
imul
push
xor
jl
int3
or
jecxz
shll
cmp
mov
dec
pop
lds
inc
fcoms
out
dec
sbb
mov
popa
xor
inc
fidivl
xchg
ficoms
decb
adc
cmpsb
pop
dec
xchg
loopne
sbb
xchg
push
xchg
fs
or
xor
into
outsl
add
jae
push
push
and
mov
movsl
add
xor
outsb
sub
xchg
jmp
addl
push
lret
movsl
ja
sti
iret
shlb
test
imul
cmp
dec
xorl
dec
xor
in
fsubs
adc
mov
push
fst
lret
pop
mov
xchg
outsl
inc
mov
pushf
call
or
sbb
xchg
ja
cmp
dec
jp
and
inc
out
sub
stos
xor
push
sbbl
inc
jb
inc
bnd
sub
xchg
push
imul
std
push
dec
scas
xchg
mov
pop
out
sub
loopne
sti
push
add
jb
push
sahf
mov
mov
cmpsb
sbb
or
push
out
fnsave
outsb
insl
cmp
sbb
insl
adc
leave
or
stos
mov
cmc
jae
mov
dec
or
and
mov
pop
dec
nop
adc
xor
sahf
mov
push
int3
iret
sahf
mov
sti
and
leave
add
mov
dec
or
sub
popf
call
adc
add
push
test
mov
push
ss
xchg
in
mov
int3
mov
dec
and
cltd
jae
or
lcall
icebp
jecxz
stc
icebp
pop
pop
sbb
nop
les
dec
cmpsl
sbb
add
test
add
sar
sbb
and
pop
fmuls
cmp
leave
sub
ja
std
xor
movsb
jge
in
hlt
test
test
enter
leave
loop
sbb
mov
negb
sbb
outsl
aam
int3
adc
inc
push
iret
in
aas
lods
int
bound
add
or
inc
pop
rcrl
push
jg
lret
std
daa
mov
xchg
std
sub
in
inc
xlat
xchg
mov
adc
cmp
jnp
pop
xchg
push
lds
bound
je
inc
lret
and
orl
fimuls
dec
bound
shlb
lds
fdivs
or
das
sub
test
enter
inc
and
jne
outsl
shll
sub
xchg
cmpsb
dec
dec
dec
scas
mov
repnz
sbb
xchg
jmp
mov
mov
dec
sbb
lea
adc
mov
add
sub
loope
jnp
pop
push
xchg
in
mov
loope
pusha
in
daa
ss
xor
add
iret
outsl
mov
fdivl
push
clc
out
xchg
das
dec
cmpsb
jmp
inc
inc
mov
mov
inc
adc
fcoms
popa
cmp
jl
push
fcom
and
insl
ret
cmc
inc
inc
and
aad
sub
cmpl
mov
sbb
or
adc
addr16
adc
int3
leave
inc
fs
inc
cmpsb
fucomp
idivl
or
mov
xchg
push
xchg
add
add
sbb
mov
add
mov
shrl
push
aad
hlt
mov
push
in
push
dec
add
faddl
movsl
pop
jno
repz
and
iret
pop
call
pop
and
mov
and
leave
pusha
in
ss
xchg
push
cs
push
dec
andl
or
cmc
fadd
movsl
popa
in
inc
and
lahf
decb
sbb
mov
sbb
scas
mov
fldcw
fiadds
sub
ficoms
repz
out
jp
adc
xchg
mov
clc
push
and
dec
sub
push
push
xchg
inc
hlt
push
cmp
ljmp
sbb
xchg
hlt
push
insb
sub
arpl
push
xchg
jp
jbe
xor
fs
pop
or
jae
mov
rol
inc
sub
lret
cmp
arpl
inc
fwait
insb
cmp
jl
aam
pop
xchg
pop
pop
fmuls
and
inc
jmp
fdivrl
mov
sbb
xlat
popf
imul
into
dec
mov
stos
jl
out
bound
sbb
lds
addr16
push
cmpsl
aas
jge
mov
loop
lock
or
movsl
xor
loopne
stos
jb
aad
aam
das
pop
lar
sbbl
inc
outsb
stc
pop
mov
lock
inc
daa
jl
shrl
cmp
xchg
bsf
stos
lea
sub
push
xchg
sbb
ret
in
jae
fs
sahf
gs
popf
mov
inc
scas
cld
lret
out
sbb
and
add
aas
popa
mov
adc
xor
leave
outsl
arpl
xlat
mov
mov
xchg
dec
xor
jae
daa
out
and
xlat
mov
push
lret
cmp
lcall
inc
in
in
xchg
jmp
inc
add
scas
jb
xchg
jo
add
mov
in
push
dec
pushf
cmp
mov
mov
pop
xlat
jns
push
sub
sbbl
jno
pop
fcmove
pop
jnp
sub
addr16
sub
hlt
lds
in
jne
testb
imul
les
insb
pop
ja
xor
js
sub
mov
aam
dec
lret
lcall
js
cmp
cli
mov
sbbb
je
stos
outsb
sbb
movsl
cmpsl
or
sarl
pop
in
pop
xchg
cli
xor
movsl
adc
add
xchg
add
lods
outsl
dec
enter
xchg
out
mov
in
push
shlb
int
pop
int3
xchg
jbe
loope
imul
cwtl
jo
roll
les
fsubp
int3
mov
mov
out
ret
pop
leave
loopne
pop
xchg
loope
inc
jg
inc
aam
lock
mov
shlb
stc
cmc
bound
adc
push
and
lret
outsb
fwait
lea
adc
sbbb
es
lret
in
dec
add
pop
test
push
out
jae
mov
fbld
daa
enter
int3
lds
in
out
sbb
int3
scas
xlat
push
and
ja
jb
mov
test
cmp
xlat
imul
js
popf
je
and
pop
cmpsb
push
dec
sbb
insb
xchg
jl
pop
xchg
xchg
mov
gs
pop
jl
movsl
or
mov
pop
push
xchg
stos
sbb
jnp
sub
add
mov
imul
rcrb
or
and
loop
push
dec
imul
fldenv
roll
add
scas
sbb
outsb
dec
decb
mov
xchg
scas
xor
push
stos
mov
push
xchg
iret
rcrb
jmp
loop
sbb
hlt
repnz
jb
fs
mov
popa
in
sub
push
push
or
mov
mov
out
sub
add
pop
ljmp
push
jo
jmp
lods
sub
mov
test
lret
sub
or
in
in
pop
push
fisubl
call
add
xchg
cwtl
fwait
cmpsb
sub
xor
lret
mov
loop
sub
pop
mov
pusha
test
adc
insb
aas
push
aas
dec
lods
loopne
dec
adc
pop
dec
mov
mov
daa
dec
and
jmp
jmp
jno
cld
fcmovnbe
js
xlat
cmp
mov
jns
loope
push
pushf
das
jmp
inc
and
sub
addr16
mov
js
fwait
scas
stos
jecxz
jle
stc
jp
into
arpl
sbb
jge
loop
std
add
bound
cmp
in
jae
scas
leave
sarl
out
mov
rcrl
notb
nop
pop
adc
lock
mov
cwtl
ja
ret
test
std
or
test
jl
lea
push
aaa
add
inc
lds
lock
je
push
je
and
sbb
mov
dec
cs
add
aad
mov
das
ret
test
mov
lods
enter
out
xchg
neg
je
outsb
cmpsb
out
inc
sub
pop
call
repz
add
fistl
repnz
jp
fs
and
aaa
mov
lahf
pop
mov
out
arpl
jns
cmp
jae
mov
and
or
inc
imul
cmp
in
rclb
mov
inc
inc
push
fwait
xlat
xor
mov
adc
iret
test
in
stc
dec
cmp
scas
out
pop
out
fwait
xchg
xor
popf
adc
fwait
jo
xorb
cmp
pop
push
xchg
sbb
pop
sbb
test
imul
in
lret
or
or
out
enter
sbb
and
add
jecxz
xchg
bound
cwtl
aaa
fnstenv
sbb
add
imul
or
jge
xchg
sbb
subps
and
pushf
test
push
fstps
jnp
add
into
fsubrl
mov
repnz
fildl
xchg
or
mov
lds
sub
push
dec
scas
jnp
rorb
aas
fisttpl
mov
adc
or
fstps
gs
sbb
sbb
cwtl
outsl
call
hlt
rolb
enter
sub
sub
adc
cmc
popa
and
lds
leave
lahf
pop
or
stos
cmp
mov
notl
loopne
cmp
mov
mov
pop
inc
pop
pop
sub
adc
arpl
shll
cmc
push
xor
pop
stos
adc
inc
sarl
pop
jge
mov
jecxz
test
inc
and
es
in
push
sub
loope
stos
mov
and
mov
jecxz
leave
stos
sub
dec
frstor
inc
and
sqrtps
adc
lods
xor
clc
in
mov
push
dec
mov
inc
add
mov
jae
add
mov
lods
inc
cli
and
or
mov
movsb
xlat
sub
mov
xchg
and
and
cmp
jl
cmp
loope
mov
sbb
rclb
cmpsb
test
testb
and
rorl
popf
mov
push
into
push
xor
ficompl
cli
or
jg
in
mov
inc
pop
dec
aas
and
push
lcall
xor
push
push
jmp
cmp
mov
inc
add
or
test
xor
jp
clc
jae
sarb
mov
outsl
sub
mov
ucomiss
jecxz
popf
pop
push
jbe
mov
push
inc
pop
mov
xchg
sahf
sti
jmp
inc
sub
js
fidivl
jp
push
dec
and
dec
adc
imul
or
mov
sahf
mov
inc
push
mov
pushf
jns
mov
xchg
or
scas
add
jno
push
push
in
call
mov
outsb
jo
fwait
add
pop
dec
enter
sbb
jmp
dec
mov
and
xchg
js
add
rcll
fildl
nop
popf
lea
jmp
sub
xor
inc
dec
cmc
rcrl
je
mov
push
pop
mov
or
jne
sub
mov
xor
or
adc
xor
sub
xchg
xor
pop
cmp
or
sbb
popf
add
dec
adc
xor
push
int3
mov
outsl
loop
mov
mov
insl
mov
push
cmpsl
ds
enter
popa
xchg
or
negb
mov
mov
mov
mov
jp
std
sub
in
in
push
push
mov
cli
pop
cld
or
enter
dec
and
divb
jg
or
mov
imul
pop
test
cmp
arpl
cmp
lods
data16
loopne
sub
xor
jno
ret
cmp
ret
cmc
jo
jp
adc
stc
jle
out
lret
ja
jns
hlt
mov
pop
fwait
jnp
adc
jae
stc
sub
dec
mov
filds
xor
jns
adc
sti
mov
add
popf
mov
mov
xchg
cli
jg
aam
sbb
mov
cmpsb
and
iret
sub
sbbl
repz
or
lods
fwait
xor
mull
push
scas
inc
mov
daa
inc
pop
xchg
testl
rsqrtps
push
inc
push
cmp
xor
or
sarl
mov
shl
mov
lret
lods
arpl
leave
insl
dec
adcb
mov
mov
fbld
loopne
icebp
test
inc
and
push
sahf
adc
adc
iret
mov
or
sahf
stc
inc
scas
rep
movsb
ljmp
push
rclb
enter
push
or
shrl
or
out
movsb
cmp
pop
jb
push
and
int
cmpl
das
test
add
dec
es
je
inc
mov
add
mov
sub
jno
jnp
dec
popa
jecxz
lds
pusha
lea
ljmp
cmp
jge
xchg
xchg
inc
iret
scas
pop
mov
scas
add
sbb
movsl
inc
test
cmp
inc
outsl
or
xchg
and
mov
divl
pop
add
mov
push
xor
push
pop
outsl
imull
mov
lret
jns
jbe
xor
stc
lds
shlb
cmp
out
lret
dec
aas
pushf
cli
sar
loopne
mov
xchg
lahf
pop
cli
loop
sbb
ds
fldenv
lods
andl
jge
sbb
sti
mov
push
pinsrw
repz
cli
add
and
mov
shlb
rorl
sub
lret
addr16
lahf
push
cmp
sbb
mov
popf
jecxz
or
pop
xchg
dec
jle
dec
repz
sub
pop
mov
les
jne
movb
mov
decl
daa
xor
xor
aam
adc
clc
out
mov
sub
lock
xlat
sub
aaa
dec
into
and
lret
jmp
push
shrl
ret
mov
xor
and
scas
fwait
outsl
xor
loope
inc
mov
stos
and
fidivrl
loope
stos
push
inc
aam
shlb
inc
jb
btc
push
fisttps
cld
mov
xchg
or
adcb
push
dec
cs
xchg
sbb
push
add
negl
test
in
lods
aam
or
lods
fstpl
xlat
ret
add
test
mov
ds
and
adc
popf
pop
dec
push
loop
pop
sub
loop
push
ret
and
testb
subb
aam
lret
jmp
enter
or
ljmp
pop
lock
jle
out
rcll
insl
in
aaa
imul
or
mov
icebp
xchg
add
push
into
push
sub
cmc
adc
xlat
mov
cmp
shrb
pop
or
dec
sbb
pop
dec
icebp
popa
mov
into
faddl
mov
mov
cmp
sbb
ljmp
fsubrs
push
xchg
decb
sti
mov
lods
mov
sub
cmp
imul
sbb
mov
add
ds
clc
xor
loopne
sti
jecxz
mov
sub
rcll
and
fisttpl
ret
rolb
lds
add
sub
mov
pop
bound
lcall
ljmp
push
mov
mov
xor
dec
in
xchg
lcall
push
jle
dec
push
bound
push
xchg
xor
push
imul
jb
mov
aam
and
jnp
pop
inc
pop
dec
mov
dec
cltd
and
inc
jno
jp
dec
scas
xchg
xor
mov
rclb
ljmp
mov
and
push
call
andl
dec
sub
mov
cmpsl
ds
call
das
jg
cs
add
add
outsl
mov
andl
insb
sub
mov
lock
mov
fistpll
rcll
test
jge
enter
add
bound
xor
pop
jns
push
int3
or
push
in
adc
js
dec
int3
hlt
push
pop
mov
in
lock
xor
ljmp
push
mov
add
leave
sarb
sub
int3
js
out
movsb
jmp
push
lods
xorl
mov
and
jo
jle
lea
mov
aam
test
adc
call
mov
popa
in
test
pop
sub
add
dec
adc
ffreep
xchg
je
mov
lds
jl
scas
fisubs
mov
sahf
icebp
jbe
mov
fildl
mov
fdivrs
in
sub
mov
push
sbb
lahf
push
jmp
sub
dec
sub
in
repnz
mov
fcmovu
addr16
in
jecxz
call
jecxz
jg
inc
jg
xchg
inc
jecxz
push
mov
daa
fs
roll
xchg
es
flds
mov
jne
repz
loopne
inc
push
xchg
sbb
ja
mov
xchg
loope
and
in
pop
mov
ds
ficomps
inc
hlt
shll
jl
xchg
mov
push
cwtl
add
pushl
call
hlt
pop
inc
loope
inc
enter
clc
jg
fdivrs
cmp
sbb
cli
mov
mov
lahf
inc
repnz
in
xchg
in
test
jp
dec
sbb
outsb
in
cs
sbb
and
lcallw
pop
xchg
xor
negl
xchg
inc
gs
xchg
std
cmp
sarb
dec
jns
sbb
and
mov
jmp
cltd
pusha
cli
push
push
call
fdivrs
fcmovb
imul
push
pop
dec
and
adc
jecxz
out
mov
adc
cmp
or
in
stos
adc
adc
in
push
push
cwtl
subb
xorl
dec
push
cmpsb
stos
dec
jno
movsb
jmp
daa
les
mov
mov
dec
mov
mov
bound
jle
or
ja
jnp
mov
notb
xchg
ret
inc
cmp
cmp
and
push
pop
fisubl
repnz
push
add
enter
data16
nop
inc
mov
das
dec
test
mov
pop
sbb
sbb
pop
pop
pop
adc
mov
inc
cmc
jne
push
jmp
out
mov
jmp
cmpsb
cmpsb
out
lods
and
mov
xor
mov
push
test
in
ret
cmpsb
sbbl
mov
out
movsb
sti
lods
neg
mov
dec
icebp
test
push
jb
jecxz
fisubrs
and
jle
or
call
sub
ss
jbe
rcrl
mov
int3
loope
mov
aad
push
ret
outsb
inc
cmp
add
xchg
lcall
push
pop
dec
push
push
mov
inc
mov
test
fnsave
add
add
sahf
jo
and
inc
inc
insl
mov
adc
lock
jp
mov
out
loop
push
shll
loop
dec
mov
imul
xchg
imul
seto
cmp
mov
mov
sbb
ljmp
js
add
sbb
lds
add
push
add
xchg
arpl
jae
xchg
xchg
addr16
cli
xor
dec
pushf
xor
adc
sahf
imul
js
mov
adcl
push
or
fneni(8087
sbb
adc
mov
or
jo
and
jmp
imul
adc
inc
imul
fnstenv
xor
stos
dec
loopne
es
aaa
in
negb
rol
jae
xor
sbb
push
sub
lods
xor
sub
pop
loope,pn
push
into
cmp
test
testl
mov
aas
pop
sbb
je
ljmp
dec
scas
or
fildl
mov
sarb
dec
mov
push
pop
cmp
adc
icebp
mov
add
pop
fadds
cmp
popa
mov
popa
mov
lea
adcl
sbb
movsl
stos
imul
adc
or
xchg
jp
ret
adc
aas
fists
outsb
fwait
add
mov
scas
dec
mov
and
mov
push
mov
xchg
adc
fbld
pop
lcall
popa
jo
lret
xchg
xor
cmp
pusha
cmpsb
fcomp
imul
dec
cmp
sub
leave
addr16
jne
decl
vmovaps
stos
dec
std
sbb
xchg
imul
test
mov
je
jae
fwait
test
repz
in
dec
push
inc
xchg
repz
pop
loopne
push
dec
in
loope
andl
sbb
pop
adc
push
push
dec
xchg
add
xchg
fidivl
lock
inc
inc
out
mov
sub
mov
pop
xor
mov
jecxz
sbb
push
cmp
rolb
movsb
in
xchg
mov
aam
xchg
sub
adc
dec
xor
jmp
fs
sbb
inc
ret
sbb
adc
sub
and
pop
ror
arpl
cmpsl
xchg
dec
xor
jge
xor
adc
ret
pop
sti
cmc
pop
xchg
adc
xchg
push
insl
pop
mov
inc
xchg
xchg
test
inc
dec
push
inc
jge
lods
outsl
lea
mov
aam
psubusw
shrl
pop
push
aaa
in
popa
repz
jo
in
setg
push
sets
add
fldl
and
and
or
in
mov
rorb
dec
xchg
imul
popf
data16
pop
sub
push
mov
sbb
xchg
ja
mov
or
sarb
cli
rcrl
inc
lock
lret
cli
cmp
jnp,pn
ss
hlt
jl
sahf
std
out
sbb
test
xchg
stos
xchg
mov
pop
mov
daa
sahf
scas
mov
faddl
sbb
mov
sub
mov
gs
push
mov
dec
ds
test
add
insb
data16
inc
mov
aam
pop
das
mov
loop
mov
cmpsl
fcomps
sub
xchg
test
sub
pop
sbb
pushf
adc
push
popf
sub
cs
xor
xchg
adc
outsb
lret
push
imul
cmp
sti
lods
lret
push
dec
pop
and
mov
movsb
outsl
mov
jecxz
lods
xor
into
test
pop
dec
lret
scas
sub
movsb
dec
leave
jo
jp
xchg
push
add
mov
lock
pop
sub
jecxz
cmpsl
arpl
cmpl
or
addb
lods
ss
pop
fimull
mov
cmc
rcrb
cmpsb
xor
and
mov
adc
cwtl
and
fs
jecxz
xor
mov
test
rorb
lods
pop
outsl
cltd
add
lret
popa
lds
mov
fs
add
xchg
test
negb
mov
mov
hlt
insb
xchg
pop
mov
jne
scas
mov
test
push
inc
addb
lock
ljmp
mov
xchg
mov
ret
or
rclb
idivb
cli
and
add
icebp
std
aam
jmp
into
xchg
mov
xor
fiaddl
mov
add
fsubrl
push
xchg
and
xor
dec
jns
push
sarl
xchg
pusha
or
pop
mov
xor
fisubs
jg
lcall
and
imul
jne
repnz
jo
rcrl
mov
cmp
fdivs
daa
ljmp
iret
hlt
aaa
add
lcall
sbb
cltd
sahf
push
dec
std
inc
fwait
insl
jmp
call
inc
xchg
dec
or
movsl
outsb
sub
insl
push
popa
ds
mov
jecxz
cli
cmp
test
into
fsubrp
mov
out
mov
aas
dec
push
ljmp
xor
daa
jo
push
adc
in
test
das
jmp
mov
xchg
fld
mov
mov
rolb
daa
push
pop
out
mov
jbe
ficoml
stos
push
push
dec
sti
inc
jnp
mov
scas
adc
inc
adc
mov
repz
mov
ljmp
fxam
pop
dec
enter
mov
std
push
inc
or
xchg
push
inc
adc
xchg
pop
cld
loope
cltd
xor
arpl
mov
xor
lahf
mov
lea
lret
push
add
xorl
cld
jnp
xchg
mov
jmp
and
repz
into
xor
data16
shrl
js
jb
fiadds
mov
out
mov
out
fnstenv
or
out
sub
lea
cmp
and
test
and
mov
cmpb
ret
lret
cmc
push
les
popa
insb
dec
cmpsl
push
cmp
xchg
ds
popf
dec
push
pop
cmp
xor
out
aaa
mov
adc
mov
push
icebp
scas
cmpsl
inc
adc
je
pop
sub
repz
sub
adc
jb
imulb
cmp
or
inc
jns
add
push
push
loopne
in
or
decb
lret
popa
pop
dec
cmp
mov
prefetcht0
pop
sub
sbb
xchg
fcomps
pop
rcrl
sarb
mov
stos
es
ficompl
mov
je
push
test
gs
mov
mov
adcb
sub
jecxz
lret
dec
movsl
flds
inc
mov
arpl
notl
int3
adc
mull
add
in
xor
xchg
xor
push
push
mov
mov
fisubs
lcall
xor
gs
sbb
xchg
push
test
pop
in
add
fdivrl
mov
js
sbb
jecxz
popl
sahf
je
mov
dec
cwtl
push
movsl
sbb
inc
inc
repnz
sub
push
push
jno
pop
pop
and
test
pop
rorl
dec
movsl
xor
scas
push
sbb
cmpsb
outsb
sbb
dec
inc
xchg
fmull
jg
pop
adc
insl
popf
testb
xchg
sub
cs
sbb
fwait
sarb
inc
sbb
xor
lds
cld
lods
mov
out
sub
cwtl
int
push
cs
jmp
xchg
sub
dec
mov
adc
fmuls
movsb
ret
movsw
xor
add
mov
mov
add
out
xchg
jmp
lcall
mov
jmp
mov
cmp
xchg
in
daa
mov
sbb
mov
or
pop
dec
or
repnz
xor
data16
adc
xchg
mov
adc
lcall
inc
xchg
pushf
lahf
data16
cmp
in
adc
mov
jmp
sub
sbbb
aaa
leave
pusha
lea
mov
jge
sub
xor
cs
insb
pop
repnz
xchg
xchg
aas
cmp
cmp
jp
jecxz
xor
mov
aas
lds
cmp
push
lret
out
cmp
cmp
dec
jle
fstpt
dec
sub
adc
xchg
and
ds
shll
jno
in
leave
push
jnp
stos
pcmpeqb
pop
jno
roll
or
mov
or
jmp
lods
or
dec
sbb
add
jl
les
test
jge
hlt
mov
pop
ss
out
mov
sbb
pop
iret
mov
pop
das
xor
xor
or
movntq
test
idiv
movsb
xor
lret
xchg
loope
rorl
popf
pop
iret
inc
arpl
imul
add
pop
jle
cmp
loope
pop
mov
xchg
jmp
ds
mov
in
jge
movl
imul
ds
mov
lret
and
scas
and
mov
test
jne
sarb
lret
mov
push
add
ja
gs
pause
dec
dec
hlt
and
fdivrp
jb
pusha
add
mull
lods
lods
out
xlat
sbb
or
push
stos
mov
xor
stos
in
jae
and
xlat
dec
mov
je
imul
icebp
mov
mov
stc
xchg
mov
mov
add
or
push
lret
add
test
sarb
cmpsb
and
mov
js
inc
in
inc
add
popa
sub
add
call
nop
je
or
fimuls
mov
stc
push
pop
stc
xor
lret
pop
push
leave
dec
mov
cmpsl
popa
sub
dec
jg
cmpl
loop
xor
out
dec
int3
or
stc
daa
or
cmpsb
or
jb
pushf
add
lret
cmp
aaa
jo
sbb
pop
rolb
mov
sbb
repnz
jo
out
clc
xchg
mov
and
pop
fwait
rol
dec
and
clc
mov
or
mov
subl
mov
ja
lahf
aam
pop
jnp
mov
xchg
orl
pop
call
stc
shr
in
rol
xchg
pop
pusha
jl
addb
in
mov
adc
lock
cmp
inc
mov
gs
sbb
test
mov
iret
cmp
pop
xchg
ret
movsl
push
jl
or
pop
dec
scas
or
aas
and
mov
std
call
insb
cs
arpl
sbb
stos
mov
repz
fmuls
sahf
lds
add
pop
inc
movsb
rep
repz
fldt
cmp
xchg
or
pop
iret
jnp
imul
dec
add
inc
in
lret
lods
into
es
jecxz
sbb
xor
je
shll
mov
dec
pop
add
add
loop
cmp
fstpl
bound
jo
in
int3
pop
movsb
dec
dec
addr16
fidivrl
test
or
in
daa
jo
es
mov
int
clc
or
and
aam
xchg
sbb
sbb
dec
and
pushl
sbb
push
mov
in
lahf
ds
stc
in
iret
push
cs
es
fs
fisttpll
mov
mov
fbld
repnz
sahf
jo
push
outsl
inc
mov
lahf
imul
mov
inc
js
add
lods
ss
dec
add
stc
icebp
in
dec
mov
add
mov
hlt
mov
cli
aas
jp
mov
rcrb
mov
lods
or
inc
cmp
cmp
scas
aad
shrb
adc
stc
lahf
ds
iret
xchg
cmpsb
mov
cmp
pop
xlat
pop
pushf
pop
out
lcall
fs
xchg
test
js
adc
hlt
and
xchg
mov
sbb
test
lahf
test
out
xchg
lds
nop
jge
lea
js
and
loope
add
pop
push
dec
aam
lcall
pop
xchg
mov
pop
das
push
aam
repz
jno
out
icebp
sub
fsub
inc
sbb
jo
leave
lods
mov
xor
out
les
inc
in
mov
jns
add
shrb
imul
mov
testb
mov
stc
fcoms
loope
add
add
fistpll
mov
dec
leave
addb
dec
aam
stos
dec
push
fisttpl
repz
aad
push
xorb
mov
ror
inc
popf
fdivrl
jg
jecxz
dec
mov
shl
push
fwait
add
in
pop
xchg
pusha
imul
iret
mov
test
jbe
push
icebp
sub
lcall
add
stos
mov
clc
add
push
aam
shll
sbb
lods
insl
push
popa
xchg
fisubs
xor
push
pushf
mov
jne
mov
fdivs
mov
add
push
mov
les
sbb
iret
and
jbe
mov
gs
pusha
rorb
push
jae
cs
cli
insb
or
lea
mov
ss
outsl
cmp
sub
mov
inc
fmuls
mov
cmp
fsubrs
xor
xchg
jae
shl
and
sub
dec
sbb
lock
add
pop
xor
mov
sbb
into
je
adc
lret
aam
adc
jbe
inc
clc
inc
int3
mov
or
cmpsb
repnz
inc
gs
loop
and
fstps
call
lahf
sbb
add
call
popf
jl
adc
cmp
push
mov
outsl
pop
into
push
lcall
mov
shrb
mov
dec
ds
cs
dec
fsubr
iret
ljmp
stc
test
orb
xchg
ja
call
popa
mov
iret
pop
cmp
xor
and
stos
dec
dec
sbb
fstl
pop
icebp
lcall
or
cmp
pop
xchg
dec
iret
adc
jno
jno
pop
pop
xchg
cld
addr16
pushf
ja
mov
lcall
xchg
filds
push
call
aaa
ss
insb
aad
test
out
jmp
lahf
add
mov
xor
sub
popl
lods
lcall
jmp
jb
loope
dec
cmpsl
addr16
ret
mov
adc
cs
das
data16
lret
mov
sub
pusha
lods
fsub
movsb
or
scas
popa
call
push
xchg
fsubp
add
fidivrl
jae
sahf
les
cmp
addl
xchg
scas
shlb
add
adc
test
and
pop
ss
inc
xchg
push
out
jecxz
mov
imul
dec
in
and
inc
repz
xchg
leave
mov
cs
xchg
lcall
mov
vcvtsd2si
mov
jno
hlt
and
clc
int
jns,pt
cmc
fisttpll
mov
mov
mov
divl
js
fs
pusha
mov
xchg
aas
repnz
rcrl
cmp
xchg
sbb
sti
cli
imul
cld
test
sbb
add
push
lahf
xor
push
sub
xchg
push
scas
cmp
adc
dec
aam
imul
pop
mov
pop
and
inc
add
std
cmp
push
push
xchg
pop
sbb
add
xor
xorl
inc
int
repnz
mov
xchg
in
pop
int3
dec
stc
mov
std
les
outsb
mov
stos
out
incl
data16
jnp
lods
jg
sub
fldl
ja
mov
cmp
xor
lods
adc
rolb
das
icebp
shll
mov
stc
sbb
xor
int
fildl
das
sbb
pop
enter
je
cmp
fisubl
xchg
push
addr16
adc
ret
popf
cmp
lods
lret
sti
adc
cmpsb
sahf
mov
aaa
dec
sbb
adc
mov
iret
cmp
xor
xor
stos
leave
mov
loop
je
cwtl
frstor
push
scas
in
out
xchg
inc
scas
std
lods
shl
xor
xor
fisttps
cmp
pop
pop
and
or
mov
or
fcomps
mov
test
shlb
enter
in
movl
mov
mov
pusha
into
lcall
out
mov
nop
and
shr
mov
and
repnz
in
adcb
xchg
pop
xor
aad
loopne
push
popa
mov
mov
or
ficompl
arpl
xchg
sbb
mov
ja
sub
adc
mov
sub
negb
and
add
xor
popf
daa
test
mov
into
mov
cli
mov
xchg
sub
add
push
pop
add
inc
mov
loopne
mov
outsb
pushf
lahf
les
lret
mov
pushf
outsl
add
lret
xor
fs
mov
fldenv
scas
or
push
outsl
imull
mov
cmp
and
jle
add
pop
icebp
mov
cs
jecxz
es
lretw
fdivl
add
fs
or
mov
inc
cmpsl
not
stos
or
lds
xchg
mov
out
fidivs
mov
insl
fdivs
push
pop
je
inc
sahf
arpl
push
mov
mov
in
mov
std
mov
shr
outsl
cmpl
xor
test
lret
sbb
pop
js
xor
test
or
movl
pushf
mov
and
cmpsl
lret
scas
into
inc
push
mov
xchg
hlt
sub
inc
xchg
inc
insl
shll
aad
xchg
mov
pop
sub
and
push
fisttps
mov
sub
jp
push
pushf
mov
mov
sub
fnstsw
into
pop
pop
xchg
push
cmp
pop
push
inc
mov
mov
mov
xchg
and
cmp
loope
enter
inc
test
test
jp
lcall
out
jnp
xchg
and
std
inc
call
xor
ds
cmp
in
movsb
out
sbb
xchg
rcll
aad
push
call
cmpsb
das
adc
dec
daa
jl
pop
icebp
in
int3
sbb
addr16
repz
lock
push
popa
dec
and
or
cmp
leave
flds
mov
xchg
sahf
dec
outsb
and
lret
loopne
lret
out
pop
lods
sahf
jmpw
clc
fcomps
cmc
xchg
outsb
pop
scas
clc
push
or
xor
jns
test
enter
jg
push
pop
jle
cmp
jbe
jmp
xchg
adc
cmp
adc
out
and
sbb
addb
bound
rcrl
jnp
dec
movsb
add
cmc
and
xchg
aas
gs
lds
pop
pop
push
test
or
mov
lret
in
das
inc
stc
lret
push
rcrl
cmpsl
sbb
jo
mov
in
sbb
inc
sarl
sahf
test
pop
out
iret
mov
xor
in
pop
mov
pushf
mov
or
insb
push
js
and
fcmovb
les
outsl
add
cmc
roll
mov
mov
icebp
add
cmpsl
xor
fmull
cmp
gs
jb
dec
lds
cmp
or
cmpsb
push
lds
adc
xor
pop
insb
lea
xor
lea
jp
bound
addr16
cmp
in
push
mov
stc
fwait
add
jno
bound
xor
or
imul
int
mov
adc
dec
add
rcr
cmp
push
jno,pn
rcl
mov
push
xor
and
std
mov
push
xlat
sub
lahf
enter
jbe
mov
mov
popa
les
pop
fsub
dec
movl
inc
push
push
test
or
mov
arpl
xor
or
or
pop
cwtl
jns
mov
test
mov
push
mov
push
ret
sub
dec
cmp
ljmp
shll
push
xorb
ds
cmp
rcr
out
pusha
mov
xorl
jo
lret
and
cwtl
push
sbb
inc
jecxz
mov
mov
sbb
xor
cmp
test
loope
sti
pop
imul
clc
add
insb
adc
insb
mov
ss
dec
fimuls
sbb
push
sub
stos
sub
test
jne
or
add
imul
mov
inc
sahf
cmpsb
icebp
push
mov
mov
daa
cmpl
xorl
fistps
sub
repnz
out
fidivl
loope
dec
inc
sub
push
cmp
lret
in
rep
dec
mov
cmp
iret
cmp
push
xchg
push
fsubl
leave
or
out
jl
adc
mov
ds
in
xchg
pop
scas
mov
push
inc
daa
adc
push
sarb
scas
fcmove
mov
sahf
xchg
or
dec
bound
daa
add
jae
lds
out
dec
push
or
sbb
add
push
xchg
movsb
cmp
cmpsb
aaa
add
push
adc
divl
jnp
push
sbb
jns
mov
mov
movsb
enter
xor
cmpsl
lret
pop
adc
adc
jne
fldenv
sbb
cmc
daa
sub
xchg
mov
lahf
mov
repnz
inc
jae
outsb
mov
stc
addl
paddw
arpl
push
xor
adc
xor
shl
add
orb
testl
and
adc
inc
mov
pop
pop
xchg
sti
negb
in
pop
xchg
dec
cld
in
pop
iret
ss
adc
insl
push
xor
scas
mov
lock
data16
ret
sub
and
cmp
add
or
sub
mov
mov
fistps
test
adc
jle
sbb
data16
js
dec
sub
pop
adc
test
mov
mov
jae
xor
mov
mov
cli
add
pop
daa
sbb
nop
pop
mov
mov
test
cmc
adc
neg
push
and
push
cmp
xor
cs
in
push
sti
cmp
cmp
lret
call
dec
sub
loope
adc
mov
js
mov
push
call
decl
jo
sbb
test
pop
fstps
xchg
popa
stos
shl
jl
cmp
nop
loop
mov
jp
fisttpll
cld
xlat
push
mov
enter
repz
lds
pop
imul
push
cmp
dec
sti
dec
lods
sub
stos
push
hlt
cmp
je
jo
cmc
or
jae
lahf
shrl
std
inc
arpl
jae
clc
lock
jns
or
adc
add
add
ljmp
push
icebp
and
sti
inc
cwtl
test
xor
xchg
cs
pop
fs
sub
push
mov
cmp
iret
cmp
mov
xchg
and
add
mov
cli
jbe
aam
jp
aaa
xor
push
push
mov
out
fmuls
jmp
and
repz
and
xchg
shrb
out
stos
icebp
mov
into
or
shr
movsl
mov
sub
cli
roll
ds
jns
and
xor
inc
xlat
mov
add
lret
push
jge
or
push
sub
jmp
mov
or
iret
mov
xchg
or
addr16
and
sti
fstl
mov
mov
jge
and
ret
stos
jge
inc
add
mov
std
jnp
test
xchg
xchg
sahf
adc
inc
dec
gs
orb
mov
mov
sbbb
and
ret
mov
sarb
mov
mov
dec
mov
or
push
jnp
out
cmc
or
add
sub
aas
lods
cvtps2pd
mov
addr16
cmp
insb
mov
sbb
fstps
or
cmpb
xchg
mov
pop
mov
mov
cmp
adc
inc
jae
movsb
scas
mov
push
popf
mov
ficoms
neg
sub
loop
add
mov
fldenv
repnz
sub
in
cltd
loopne
mov
lods
mov
rolb
or
outsl
sbb
mov
add
fwait
push
je
jmp
ret
mov
outsl
cmp
push
test
and
adc
popa
aad
mov
pop
loop
xorb
and
adc
mov
repnz
aam
xchg
lret
add
pop
push
jmp
cld
leave
icebp
add
int3
je
orl
das
mov
aad
rcrb
cmp
cld
xchg
xor
cmpsb
jge
loope
addr16
repnz
daa
idiv
fwait
sbb
outsl
dec
mov
inc
cwtl
bts
dec
mull
repz
ds
adc
punpckldq
mov
movsl
cmp
jb
loopne
cli
mov
sahf
push
pusha
int3
xor
inc
orl
mov
pop
jl
mov
add
dec
xor
cmp
lcall
imul
sahf
test
pop
lock
pop
xchg
pop
rcll
stc
and
add
ss
and
data16
mov
mov
aaa
pushf
lahf
cmp
jbe
fisttps
daa
aam
mov
and
addr16
shl
and
pop
push
rorl
test
jle
arpl
sbb
xchg
test
inc
icebp
pop
mov
adcl
lock
lret
cs
ret
add
push
cmc
cli
into
lea
jb
test
arpl
xlat
mov
sub
or
notb
dec
mov
add
faddl
pop
mov
pop
scas
out
repz
cmp
xor
or
xchg
mov
sbb
ja
cmp
inc
pop
ja
mov
mov
adc
push
jge
icebp
add
lahf
push
sub
mov
jmp
lret
inc
lods
jbe
xor
clc
bound
mov
xchg
imul
xchg
jg
in
repnz
ljmp
and
jbe
je
imul
insb
xchg
out
ja
mov
cmp
test
sbb
test
out
add
jmp
and
ficomps
addr16
mov
push
xchg
dec
sub
leave
dec
jbe
sub
mov
fidivrl
sbb
xchg
call
push
icebp
test
out
xchg
adcl
gs
inc
mul
sbb
sbb
lret
cmp
lea
test
insl
inc
imul
dec
pop
sbb
push
stos
js
lcall
inc
xchg
stos
ss
mov
aam
push
pushf
jmp
add
mov
xchg
arpl
xor
jnp
pop
pop
fs
adc
pop
pop
loope
sbb
mov
and
aas
out
dec
and
push
jno
in
cmpsl
scas
pop
dec
push
rcll
mov
mov
pop
loopne
inc
jne
mov
loope
out
cwtl
out
and
and
orl
pop
xor
add
test
outsl
je
add
imul
hlt
xchg
sahf
scas
jp
pop
pop
xor
test
or
or
mov
and
lret
xor
arpl
push
loopne
stos
imul
lret
ds
jnp
xchg
sub
out
xor
lahf
xor
lret
test
mov
ljmp
pushf
adc
jmp
jno
fistpll
mov
mov
pop
mov
imul
scas
dec
push
jae
movsl
dec
adc
push
idivl
sub
push
sbb
in
jp
pop
and
test
xchg
dec
fadd
orl
xchg
sarb
scas
sub
outsb
push
movsl
inc
sahf
xor
lret
jbe
test
mov
mov
dec
jnp
sahf
incl
insl
pop
or
jns
into
cmp
ja
test
pop
or
insl
sbb
lret
les
add
lock
std
xor
mov
mov
fisttpl
pushf
lods
xor
push
lds
push
push
mov
pop
fcomp
cmc
push
sbb
pop
es
test
lods
pop
mov
iret
lods
pop
sub
add
insl
jmp
scas
and
push
push
xchg
ja
sbb
mov
shl
out
and
lds
jnp
pop
insl
mov
jle
fstl
mov
mov
and
pushf
adc
movsb
add
fcom
lds
orb
aad
iret
cli
repz
mov
aas
sub
int3
push
sbb
and
pop
ja
mov
pop
pop
and
mov
nop
pop
xor
lea
jmp
sbb
adc
insl
sub
xlat
mov
push
sbbb
mov
pop
sbb
loopne
subb
mov
imul
sub
loope
mov
mov
and
pop
sbb
leave
cs
mov
or
lock
sbb
jmp
push
cmc
nop
push
xchg
or
sbb
fsubl
insl
xchg
test
sub
mov
int3
dec
call
cmpsl
loop
cmp
shl
pop
sub
xchg
add
pop
pop
pop
loopne
jo
loopne
sub
sbb
xchg
pop
mov
jb
xchg
fs
int
lock
and
adc
test
std
pop
sbb
into
add
lahf
jg
adc
sub
sub
xchg
hlt
inc
bound
mov
adc
in
nop
scas
sub
call
xchg
push
sarb
xchg
outsl
ror
in
pop
and
addb
and
stos
add
popa
cmp
dec
sub
test
jnp
xchg
jne
pop
ljmp
add
xchg
loop
push
popa
int
fnstenv
cmc
sub
or
mov
sbb
fs
mov
rcll
push
mov
sub
inc
xor
or
mov
push
xchg
cmpsl
out
lcall
nop
sti
jp
les
jo
lret
xorl
insl
adcb
imull
mov
xchg
aam
outsl
xchg
inc
ret
out
test
fists
imul
xor
and
jp
xlat
and
dec
jne
sub
repz
pusha
sti
push
xor
cmp
insl
in
add
mov
shrl
rol
clc
std
add
mov
out
or
adc
mov
lahf
mov
sub
dec
icebp
scas
push
cmpsb
xor
adc
sub
dec
pop
fisubrs
mov
hlt
int
shr
orl
inc
pop
sbb
repnz
test
or
add
add
mov
pop
jecxz
int
and
adc
mov
ret
add
ret
out
mov
in
xor
xor
jne
fsubr
xlat
pop
jg
sub
inc
aas
and
je
leave
ljmp
std
test
mov
jg
test
add
add
jecxz
mov
scas
push
int3
add
pop
sub
loop
mov
xor
inc
insb
lock
popa
sbb
dec
xor
dec
mov
fwait
xor
push
pmulhw
xchg
xchg
out
lods
adc
dec
jge
out
dec
mov
cmp
popa
sbb
pop
and
xor
mov
add
add
jbe
aam
xor
sarb
loop
add
cmp
scas
ret
shr
push
sbb
cmp
stos
movsl
ror
lea
xchg
pop
jmp
mov
loopne
mov
mov
jp
inc
ljmp
pop
imul
js
xchg
or
outsb
mov
das
rorb
pop
pop
pop
je
mov
data16
mov
cmp
add
add
lcall
jmp
and
mov
xchg
and
sar
add
sbb
mov
jle
or
mov
out
sbbb
int
int
aas
add
mov
ds
outsl
add
inc
push
sarb
xchg
jl
repz
pop
loopne
fstps
pop
out
pushf
add
addr16
insl
aad
loopne
mov
jne
out
push
stos
out
xlat
arpl
ret
xchg
clc
int
jns
ret
or
mov
push
sub
jmp
js
bound
sbb
push
repz
scas
mov
jp
mov
mulb
mov
call
cltd
enter
mov
mov
out
xor
pop
adc
adc
inc
add
ss
xchg
dec
xchg
mov
jecxz
or
int3
cltd
outsl
mov
jle
cmpsl
nop
popf
push
sbb
fldt
mov
int
mov
nop
xchg
lcall
cmpsb
add
inc
inc
popa
add
dec
mov
inc
or
int
repnz
add
and
sub
jnp
add
fimull
pop
inc
test
aas
jb
loop,pn
insb
xchg
aas
dec
pop
inc
aas
xchg
repnz
das
ljmp
mov
or
pop
sub
test
insl
xor
mov
adc
pop
data16
mov
cmpsl
cmc
ret
sub
mov
shr
xorb
adc
lock
movsb
adcl
jle
shll
dec
jge
aaa
js
je
lods
and
push
jle
cmpsb
push
lret
ljmp
lock
test
sub
icebp
push
aad
or
xchg
mov
sub
gs
jmp
mov
movsb
xchg
mov
scas
fs
dec
std
in
push
sti
das
sbb
pop
popa
ss
dec
ret
or
cwtl
popf
add
sbb
add
mov
int
push
fs
ja
cmp
mul
in
pop
imul
pop
pusha
loop
push
xchg
outsl
sbb
mov
xlat
loop
sbbb
fisttpll
mov
sbb
in
cmp
adc
jle
pop
popf
out
dec
mov
xor
outsb
pop
orb
jecxz
cmp
repz
aas
dec
cld
ja
fdivrs
sub
shll
and
sbb
ja
test
mov
ds
mov
jns
loop
rcll
push
dec
fisttps
icebp
mov
and
bsr
add
cmp
ud1
xor
inc
out
insl
fwait
xor
cwtl
and
jecxz
mov
push
out
jae
rolb
movb
adcb
test
cmpsb
outsl
shr
pop
daa
les
inc
sbb
jb
bound
mov
daa
pop
icebp
jns
or
cmp
nop
xorl
sbb
sarl
outsl
lret
push
mov
jbe
push
add
jb
xchg
xchg
push
xchg
cmp
outsl
ret
mov
mov
mov
out
sti
in
fmull
repz
push
in
jno
xchg
repz
pop
add
xchg
pop
jmp
xrelease
test
pop
in
sbbb
lahf
gs
adc
ret
push
mov
js
or
push
in
adc
mov
les
cmpsl
pop
mov
lods
push
pop
unpcklps
xchg
jle
push
outsb
push
into
cmp
add
dec
test
sbb
pop
pusha
jmp
test
mov
mov
repz
lds
loope
push
enter
or
fxch
cli
leave
mov
push
push
lret
out
cmp
in
addr16
adc
fsubp
jne
pop
fstpl
or
push
adc
cmp
ja
add
in
dec
jb
and
stos
mov
add
arpl
pop
in
add
add
cld
lock
and
xor
test
out
sahf
adc
pop
push
push
in
cld
inc
cmp
sbb
cmc
jbe
shll
negb
fucomip
push
jne
dec
xchg
jmp
mov
mov
add
xlat
jmp
lret
jbe
cmp
cs
lods
jnp
cli
cs
aas
inc
and
dec
ffreep
or
out
mov
in
mov
xor
rclb
mov
js
pushf
mov
push
mov
mov
popf
gs
test
iret
jo
lret
dec
mov
ja
mov
dec
test
add
mov
std
dec
jne
jmp
ja
outsl
pop
jg
mov
mov
jge
addr16
out
add
fisttpll
push
lret
jp
dec
data16
data16
dec
into
push
fnstcw
out
es
jo
loope
xor
and
fcoml
bound
repz
dec
cmpsb
mov
add
or
sbb
and
cmp
cmpsb
clc
out
inc
adc
pop
jne
in
out
sub
inc
mov
jecxz
mov
mov
sub
fnsave
cmp
lret
aad
mov
sbb
dec
and
mov
pop
mov
testl
cmpsb
sbb
mov
sahf
aaa
mov
push
sbb
cmp
inc
out
cmp
cmpsb
icebp
push
shl
stos
neg
xor
test
outsl
jle
jbe
mov
mov
push
pop
movsl
mov
scas
jns
clc
or
jmp
neg
jmp
scas
jge
add
mov
jp
add
push
mov
sbb
xor
test
cmp
mov
push
adc
ljmp
push
cmc
cs
roll
xor
lock
inc
sbb
push
jp
addr16
pop
or
push
or
lods
mov
inc
or
xlat
ja
push
cmp
and
add
push
or
fwait
repz
out
or
mov
out
mov
pop
ficomps
popa
inc
xchg
fs
push
cli
lock
push
ljmp
mov
jb
daa
inc
lret
mov
mov
cld
xor
jbe
cmp
sub
mov
mov
xchg
mov
mov
into
fs
repz
mov
xchg
adc
push
loopne
lret
ret
adc
add
push
mov
and
cli
loope
fdiv
mov
aam
sahf
ror
add
xchg
lret
or
fs
mov
add
mov
jp
fs
and
mov
add
pushf
cwtl
mov
out
repz
or
insb
jmp
inc
insl
aam
sahf
add
dec
outsb
rcr
xchg
gs
divb
imul
stc
push
loop
push
call
xchg
dec
xchg
push
add
fwait
out
cmp
bound
adc
mov
or
lret
frstor
leave
xchg
mov
adc
pusha
jecxz
mov
scas
addr16
sbb
mov
mov
incb
test
ja
mov
pop
add
inc
adcb
popf
mov
mov
cmp
js
mov
adc
push
cltd
movsl
mov
sub
fstps
xor
test
mov
clc
add
xor
mov
push
insl
lods
aam
lret
das
dec
inc
mov
jle
flds
xor
adc
adc
xchg
iret
aam
ret
cmp
mov
adc
inc
popf
aaa
bswap
enter
xchg
xor
mov
push
out
cwtl
movsl
cmp
pop
cmp
mov
hlt
sar
ja
cmp
movsb
push
insb
xchg
pop
stos
jnp
je
jno
imul
stos
jb
inc
into
aad
xchg
movsb
and
push
cmp
mov
add
mov
ret
ficoml
fildl
ds
aaa
pusha
fwait
cli
cli
or
xchg
cltd
stos
jbe
xorb
jmp
mov
or
lahf
inc
scas
scas
cmp
add
push
sub
gs
enter
mov
mov
jg
sub
inc
sti
push
fistpll
fwait
mov
dec
pop
sbb
mov
jb
inc
sbb
out
insl
jg
in
jne
popa
insl
nop
ret
lahf
addl
popa
cs
jbe
movsb
sub
fisubrs
shll
out
sub
push
in
xchg
add
out
fsubs
shrl
std
int
pop
hlt
daa
je
aaa
or
add
adc
jb
xor
aaa
jnp
cs
jge
and
cli
fisttps
test
pushf
add
int3
mov
mov
mov
mov
mov
pushf
jmp
imul
jnp
shlb
sbb
mov
xor
cmpsl
or
lds
lods
lcall
fisubrs
mov
mov
enter
dec
push
test
mov
shll
inc
xor
xchg
pop
inc
fildl
cli
jle
cmc
ss
cld
loop
nop
fcoml
loope
mov
xor
sbb
jae
pop
inc
push
imul
add
outsb
xchg
sub
xor
mov
cmp
add
dec
ljmp
mov
jne
dec
movsb
cmp
jle
or
mov
dec
rclb
loopne
inc
ret
pop
jae
dec
xor
mov
add
inc
ret
push
lea
xor
lods
xor
int
jb
ret
mov
in
sub
mov
scas
out
sub
adc
and
add
ljmp
jg
cmp
sti
lret
out
daa
in
jl
cmp
pushw
shll
imul
in
fwait
jmp
adc
push
icebp
adc
loop
xor
sbb
push
lcall
or
fs
mov
push
es
movsl
les
sbb
push
sbb
mov
out
out
inc
jne
das
or
addr16
outsb
mov
cmp
add
div
push
ret
cmp
mov
mov
and
cmp
cmp
fadds
push
outsb
jle
fs
lret
sub
jle
mov
xor
jl
lds
insl
cmp
jge
imul
xchg
xorl
push
and
mov
mov
ss
cld
adc
inc
mov
insl
xor
mov
adc
xor
incb
jb
push
fsubrs
dec
fdiv
stos
adc
and
xchg
pushf
fdivl
cmpsb
cmc
pop
in
mov
cmpsl
out
jbe
shrb
aam
xchg
sub
sub
xor
sbb
push
lret
pop
call
andl
sub
lret
adc
cmp
adc
es
das
pop
iret
sarb
jns
iret
ret
pusha
loope
or
fimuls
es
enter
add
movsb
xchg
je
movsl
mov
and
sarl
mov
xor
add
jne
push
sbb
fsts
movsb
push
divps
cmpl
dec
pop
rcrl
mov
in
or
mov
xchg
add
mov
shr
data16
jne
ror
aad
int
or
mov
inc
or
inc
mov
mov
stos
mov
mov
das
les
xor
fists
aad
in
mov
popf
add
stos
sbb
arpl
jp
mov
pop
fstl
xor
push
subl
mov
insb
jl
mov
mov
icebp
dec
sti
mov
mov
cmp
packuswb
push
jge
test
xchg
shlb
cmp
jne
fcompl
mov
test
les
gs
or
rcr
cld
sbb
je
mov
add
cmp
jmp
lahf
jb
sahf
push
fxch
out
or
bound
test
test
add
jbe
push
mov
test
aas
cmp
cld
divl
movsl
dec
jbe
mov
mov
push
lret
jg
addr16
popf
push
mov
xor
popa
jmp
fidivl
mov
sub
cmp
in
adc
or
arpl
fidivrs
fcom
pusha
rcl
pop
addr16
mov
mov
daa
xchg
mov
lods
mov
mov
imul
in
sub
imul
lcall
pop
rcr
sti
dec
cs
mov
aaa
push
sub
mov
imul
and
jg
and
mov
mov
loop
or
jne
xlat
fists
mov
jecxz
xor
outsl
pusha
das
frstpm(287
pushf
push
sub
dec
cmp
adc
out
mov
insl
push
mov
mov
jmp
cmp
mov
out
pop
out
add
lret
clc
sbb
inc
loope
and
jecxz
dec
movsl
fisubl
in
dec
inc
aaa
mov
mov
add
int3
enter
mov
sbb
add
dec
scas
push
push
les
and
xor
xor
mov
ja
adc
xor
xchg
fstl
add
adc
jno
mov
adc
mov
scas
mov
lret
mov
lds
pop
mov
in
out
shll
ret
mov
mov
test
xchg
leave
sbb
and
rcl
mov
sub
test
or
mov
jns
sub
std
loop
xorb
adc
setbe
and
mov
xor
mov
pop
xchg
sub
pop
std
mov
jns
inc
jo
xchg
jg
out
add
out
lods
outsl
js
cmc
pop
and
add
stos
xchg
loopne
add
repnz
fst
es
inc
inc
adc
aaa
or
out
stc
loope
push
repnz
shlb
pop
aam
outsb
jno
cwtl
add
mov
xchg
push
jge
sbb
adc
shlb
js
fsubl
lods
test
or
push
push
mov
fistl
rcl
push
gs
out
je
mov
or
cli
adc
lcall
aaa
mov
cmpl
mov
add
rcll
enter
xor
stc
pusha
adc
es
daa
test
dec
dec
in
test
stc
xchg
mov
loop
or
push
or
mov
sub
in
popa
fsts
rorb
and
dec
ret
fbld
pop
mov
fdivrs
mov
bound
mov
lds
decl
notl
mov
bound
cmc
in
addr16
movsb
dec
sbb
sub
loope
cmp
mov
mov
dec
cmp
rcrb
mov
mov
jecxz
loope
pop
in
xor
decl
sbb
pop
mov
shrl
inc
sub
insb
push
idiv
xor
dec
aad
xor
pop
in
pop
pop
ss
movsl
cmp
lret
xor
sbb
mov
rol
in
jb
loop
dec
xchg
je
mov
jbe
jns
out
je
lahf
cltd
orl
push
nop
call
popa
divb
mov
jg
xchg
rclb
outsb
mov
int3
enter
cmp
push
and
mov
cmpl
loop
loop
test
mov
dec
xor
add
add
gs
repnz
sub
sub
jp
in
jo,pt
or
mov
in
push
mov
lods
pop
pop
cli
mov
sub
mov
dec
jmp
lods
mov
in
cs
shl
pop
mov
frstor
push
insb
xlat
mov
sbb
stc
mov
pop
in
outsl
mov
and
add
and
orl
je
ja
addr16
lahf
mov
insl
ja
mov
into
pop
sbb
fs
sbb
in
sub
cmp
iret
jns
cmp
daa
data16
inc
sub
fwait
xor
mov
xor
movsl
test
out
and
cmc
fwait
test
mov
cli
cmc
xchg
push
rcl
and
add
andb
das
xchg
jno
mov
scas
pushl
addb
insl
mov
add
and
nop
mov
sbb
cld
jne
mov
adc
cmp
add
scas
sti
aaa
scas
and
int
test
std
inc
push
adc
in
or
enter
in
mov
scas
dec
push
in
push
bound
rclb
xchg
add
inc
aas
mov
outsb
fbld
jbe
loop
mov
imul
adc
mov
pop
jg
fadd
sub
jo
sub
test
loope
mov
cmpsl
movsl
shrl
scas
pop
cli
jb
fcomip
mov
xchg
cmp
sbbb
insb
dec
inc
inc
imul
or
xorl
pop
ss
shr
test
bound
nop
stc
orl
push
fwait
cmova
test
aad
orb
add
push
clc
fmull
pop
loope
jg
pop
adcl
mov
in
cmpsl
jge
ljmp
push
in
jnp
lret
ss
divb
lret
call
nop
pusha
push
mov
xor
mov
pop
outsb
mov
or
stos
jo
ss
sub
or
or
rorl
jge
pushf
cli
xchg
dec
jo
pushf
mov
mov
jmp
mov
out
cs
mov
or
cmpsb
popa
aaa
mov
sub
sbb
subl
aaa
xor
filds
ja
insb
add
dec
inc
pop
mov
inc
andl
or
xchg
sub
adc
cmpsl
mov
jne
and
jbe
out
mov
push
sbbl
imul
jb
adc
push
int
vpsraw
adc
push
sub
pop
insb
daa
scas
inc
jnp
pop
pop
adcl
test
jmp
ds
jno
mov
pop
fwait
sbb
cmpsb
mov
outsb
int
mov
and
mov
data16
xchg
xor
sbbl
loop
test
in
cmp
xor
mov
ss
pushf
mov
mov
out
adc
pop
aaa
push
je
lret
gs
xor
popa
mov
imul
lds
xchg
aad
or
rolb
jg
sbb
lock
cmpl
dec
fdivrs
mov
sbbb
repnz
imul
mov
and
jg
cmp
lret
push
jae
mov
push
pop
fcoms
push
xor
jae
aad
cli
sbb
lock
push
jecxz
push
jns
inc
push
xor
xchg
stc
fdivr
sbb
and
out
sub
mov
sub
mov
nop
jl
mov
mov
xchg
cmp
ret
and
cmp
fwait
pusha
push
push
and
mov
xor
out
mov
pop
dec
add
dec
pusha
or
xchg
or
inc
xor
sub
aam
push
push
test
stc
inc
jno
cmp
sub
jno
out
mulb
push
enter
xchg
lahf
pop
arpl
xor
dec
and
push
lret
insl
mov
sbb
add
lcall
dec
stos
mov
or
mov
pop
inc
mov
bound
test
push
cwtl
jg
push
pop
xor
xchg
sbb
push
out
out
xchg
pop
xchg
scas
push
sahf
add
pop
pusha
notl
jns
aas
mov
push
hlt
mov
jecxz
xchg
mov
test
xor
decb
mov
call
or
xchg
jl
and
dec
inc
ret
pushf
addr16
xor
pop
mov
jge
push
std
out
sahf
enter
sub
ror
rol
cmp
mov
mov
dec
dec
enter
jne
add
aad
mov
test
cmc
mov
addl
lret
stos
loop
cld
stos
and
mov
xchg
test
loope
sub
dec
and
call
push
cli
in
insl
subb
cltd
xor
ja
xchg
pop
mov
loop
cmp
mov
lret
fisttps
sti
jmp
sub
or
xchg
sahf
inc
xorl
fwait
test
rorb
push
into
push
adc
fwait
scas
fcmovnbe
es
sbb
filds
shlb
xor
faddp
addb
push
mov
bound
mov
popa
das
popf
sub
adc
addr16
add
push
movsl
sbb
push
mov
xor
pop
in
cwtl
add
in
and
mov
xchg
stos
sbb
pop
hlt
adc
lcall
cs
leave
add
push
xchg
out
inc
xchg
sub
pop
aaa
cltd
and
out
pop
addl
scas
mov
inc
aaa
mov
es
loope
xchg
fsubs
mov
jge
js
test
lcall
scas
mov
pop
test
outsl
lret
jge
jbe
cmpsb
lock
in
jns
push
pop
mov
scas
xor
fmul
jno
shll
jecxz
jno
sub
jp
mov
xchg
mov
popa
lcall
mov
jmp
xchg
or
and
adc
cmovg
je
clc
pop
inc
push
pusha
loope
xchg
mov
mov
hlt
pop
mov
cmp
gs
push
mov
add
in
pusha
test
sub
adc
inc
pop
imul
or
icebp
jo
inc
jb
and
cmp
mov
js
jne
jl
ret
icebp
fs
mov
stc
jbe
arpl
xchg
data16
jo
or
mov
rclb
lcall
jnp
adcb
push
outsl
nop
pop
out
xlat
dec
out
xchg
xor
dec
rcrl
mov
jecxz
xlat
and
xchg
fdiv
mov
mov
push
mov
cwtl
inc
or
pop
jle
aaa
jge
or
pop
adc
call
dec
gs
pop
adc
insl
gs
sbb
in
loop
cmp
sarb
mov
repz
shrb
nop
rorb
mov
sbb
mov
dec
cmpsl
sbb
lods
insb
inc
cmp
inc
scas
repz
addb
mov
add
and
call
lea
push
fwait
jle
fnsave
sub
push
mov
jb
gs
in
dec
test
cmp
pop
add
jo
push
cwtl
mov
push
push
cmp
rcrb
filds
outsl
test
sbb
cmp
stos
mov
and
inc
pop
mov
inc
ret
loop
cmp
stc
loope
f2xm1
sub
inc
sarl
loop
mov
pop
repnz
test
std
lret
pop
push
mov
je
cmpb
xorb
cwtl
mov
inc
inc
mov
je
mov
icebp
rorb
inc
loope
lods
inc
ss
sahf
or
sub
cwtl
popf
addr16
nop
adc
addb
and
idivb
jle
js
sbb
shlb
jge
cmpsl
adc
mov
xor
pop
in
dec
pop
lahf
sub
sbb
lcall
dec
mov
testl
ja
pushf
stos
or
pop
je
movsl
test
mov
kmovb
outsb
cld
imul
jns
xchg
pop
out
cmp
mov
arpl
push
jnp
or
and
cmp
orl
divb
ja
ljmp
mov
mov
sti
aas
fs
xor
in
jmp
loope
out
push
cmpsl
or
inc
int
add
jmp
imul
iret
cmp
roll
sub
mov
mov
push
movsl
aaa
test
dec
movsb
scas
lods
mov
sub
mov
in
into
repnz
daa
sbbl
fimuls
and
dec
jle
or
xor
sub
loop
shrd
sub
out
sarb
push
mov
pop
xlat
xor
dec
adc
inc
je
jp,pt
test
ja
sub
rcll
lcall
push
fstpl
or
je
jecxz
inc
aas
mov
gs
lea
push
cwtl
sub
in
in
cltd
mov
fninit
push
and
sbb
pop
outsl
enter
xor
testb
sub
hlt
aad
mov
inc
enter
lret
sbb
add
jnp
cmp
sbb
andb
out
cmp
les
sti
xlat
in
aas
or
cmpl
push
lock
push
movsb
outsl
adc
lods
fisubrl
inc
insb
push
cld
or
adc
frstor
ret
cmpsb
add
ret
out
aad
push
inc
into
push
cmpsb
pop
push
in
adc
add
mov
fisubrs
sbb
test
mov
clc
push
and
mov
lods
outsl
mov
outsb
push
adc
pushf
push
xchg
dec
mov
dec
lcall
lock
cmpb
mov
sbb
push
pop
jmp
pushf
sub
mov
mov
icebp
in
add
sbb
jae
inc
xchg
daa
mov
pop
xor
pushf
inc
dec
ret
jns
scas
in
mov
shr
mov
or
xor
jae
adc
imul
adc
xlat
shl
ss
add
xchg
sbb
mov
scas
mov
movsb
inc
mov
sub
ds
push
mov
push
add
test
sub
fnsave
in
pop
mov
das
mov
push
pushf
xchg
inc
push
mov
or
fsubl
rcl
lret
jmp
out
jecxz
mov
jne
out
push
aam
imul
testl
jo
jnp,pt
fs
popf
mov
pop
imull
loope
jns
loopne
sbb
outsb
adc
ljmp
loop
into
mov
push
xchg
out
ja
mov
sub
jge
movb
fld
jns
pop
pop
divl
iret
jmp
iret
sub
or
mov
push
ret
pop
cmpsb
and
xchg
sarl
cmc
arpl
and
add
std
sbb
mov
shl
stos
cmp
or
pop
cmp
icebp
nop
cli
mov
incb
aas
add
push
call
mov
mov
jae
dec
push
fwait
leave
mov
dec
enter
sub
popl
ret
inc
jg
jl
sub
cwtl
or
mov
mov
aas
popl
movsb
scas
lock
xchg
int3
dec
cmp
or
jo
push
lahf
lcall
dec
or
orb
lea
ret
or
into
xchg
dec
popa
sbb
dec
sub
pop
xor
and
cs
data16
addr16
es
or
xchg
in
pop
call
fst
cmp
sbb
jae
fld
nop
dec
push
fdivrs
jbe
icebp
pop
jb
jns
adc
sbb
or
sub
and
lods
push
jbe
int3
cmp
adc
in
roll
sbb
and
jno
in
xchg
inc
mov
push
in
stc
cmp
shll
or
dec
xor
dec
xchg
push
out
je
mov
mov
sbb
sbb
pop
push
jb
push
test
xor
outsb
xchg
inc
mov
mov
hlt
mov
jns
pushf
stc
push
pusha
je
and
bound
ss
fwait
jge
test
test
fdivs
and
dec
faddl
jnp
dec
ds
pushf
xchg
mov
ror
push
xor
les
stc
or
inc
adc
sbb
sbb
jne
inc
adc
and
or
sbb
push
daa
dec
leave
fnstsw
push
xchg
lds
shl
jo
xorl
lcall
sti
cmpsb
mov
jmp
inc
sti
sbb
xor
pop
nop
add
fldl
fistps
mov
sahf
push
pop
xor
rorl
xor
dec
xor
mov
fnsetpm(287
neg
push
in
out
push
xor
mov
movb
out
jns
and
int3
scas
aad
rclb
hlt
lods
mov
pop
insl
xor
sbb
imul
testb
sub
ljmp
mov
pop
lea
xor
repz
xchg
adc
divb
imul
sub
popa
fs
push
pop
cmp
ficoms
lods
lar
data16
adc
fiaddl
aad
fcom
lcall
inc
subb
fadds
movsl
jmp
fstpt
daa
gs
ds
adc
mov
push
ds
adc
xlat
repnz
mov
leave
aaa
xchg
lds
test
stos
dec
out
repnz
in
mov
cwtl
std
aad
cwtl
cmp
mov
add
or
jle
sub
in
inc
decl
mov
je
insl
shll
lock
dec
mov
cltd
fadds
pop
std
cmp
mov
aam
aaa
jbe
cmpsl
add
inc
xchg
loop
imull
decb
mov
iret
rcl
addr16
inc
mov
stc
push
lret
aaa
insl
mov
jg
cmc
into
inc
lods
ss
mov
push
fnop
mov
or
pop
sbb
mov
jl
pop
aam
sbb
ret
insb
push
into
lret
out
jo
fidivrl
mov
adc
fs
in
les
jae
cmp
pop
lret
je
loop
jbe
sub
aad
stc
out
xchg
and
stos
mov
repz
mov
flds
movsb
popf
dec
adc
xor
jecxz
cmp
xchg
mov
mov
jge
testb
clc
mov
adc
mov
inc
cmp
sbb
leave
mov
fidivrl
imulb
lea
jp
aas
es
es
sbb
xchg
mov
lods
scas
fists
lcall
push
add
les
dec
int3
lea
repz
adc
cmc
popf
mov
jne
movsb
lods
cld
repz
movb
mov
dec
insl
sub
or
and
scas
add
sti
mov
cmpsl
popf
inc
pop
ftst
popa
pop
neg
mov
jge
jne
stos
fstpl
movsl
mov
jp
push
or
leave
in
jns
add
test
push
jge
adc
or
testl
xor
push
fsubs
jae
idivb
sbb
dec
bound
mov
nop
mov
cmpsl
cmp
jno
or
out
jmp
sub
xchg
sbb
mov
fcompl
push
jg
and
test
subb
imul
pusha
aam
lods
and
push
aaa
or
loop
and
lods
push
imul
nop
xor
es
test
mov
int3
mov
adc
adc
mov
and
int3
jg
xchg
cmpsl
sub
mov
dec
cli
fdivs
outsb
aaa
sub
lahf
adc
inc
adcb
and
pop
adc
jno
mov
and
into
movsb
sti
into
cwtl
lret
mov
mov
outsb
cmp
mov
gs
nop
iret
popa
int
ss
sub
jmp
add
rdtsc
add
inc
test
cmovae
pusha
loope
addr16
popf
pop
mov
and
push
push
test
mov
mov
mov
aad
jl
arpl
cld
jae
inc
adcl
sub
dec
xor
sbb
fisubrs
aam
insb
addr16
pop
sub
pop
sub
mov
les
dec
pop
mov
pop
addr16
fwait
mov
push
call
je
or
aam
xchg
mov
jns
sahf
cmp
lret
jmp
ficoms
insl
mov
push
and
bound
mov
test
or
mov
mov
sbb
int3
and
pop
dec
lahf
shl
lods
popf
xlat
aaa
fdivs
sbb
cmpsl
popa
jge
pop
inc
outsb
xchg
adc
add
in
or
lret
lret
inc
rep
fidivs
scas
sub
pop
ds
mov
jno
sub
sbbb
dec
mov
loope
jns
xor
jne
or
hlt
push
pusha
test
jg
pushf
inc
xor
gs
daa
je
jno
mov
mov
dec
push
push
push
sbb
mov
sbb
xor
mov
xor
lods
testl
jg
das
inc
add
cmp
or
mov
inc
outsl
hlt
rolb
jae
repz
jecxz
xor
lock
push
std
cmp
xchg
cli
cs
cs
pop
aam
ss
add
sub
cmpsl
pusha
insl
ljmp
xchg
daa
mov
shlb
jne
les
sub
je
fs
mov
xor
mov
and
sbb
cmp
lods
scas
aad
or
mov
and
xor
jle
hlt
pop
fsts
mov
xchg
addr16
lret
and
push
add
je
mov
inc
pushf
xchg
cmp
add
subb
fimuls
xchg
mov
inc
pop
jnp
mov
and
lret
sub
or
aas
mov
ret
test
adc
push
cmp
call
push
test
sbb
mov
adc
jnp
repz
jg
fisubrl
mul
mov
cmp
scas
out
pop
ss
mov
scas
dec
pushf
xor
or
jp
stc
lahf
cmp
lock
lahf
ja
inc
popf
push
mov
scas
pop
and
gs
xchg
jle
mov
push
into
dec
stos
dec
ds
les
and
mov
sbb
arpl
and
testl
rolb
or
mov
pop
pop
test
push
stos
inc
int
lea
outsl
addr16
jge
inc
adc
aaa
cmpsb
loop
adc
push
xchg
pop
mov
jmp
mov
or
imul
xor
stc
inc
jg
push
xchg
mov
out
and
xlat
js
sub
ficomps
xchg
ja
or
in
pop
ret
push
pop
push
shlb
dec
ljmp
inc
lock
push
js
cli
sub
pop
shlb
add
stos
dec
and
mov
repnz
xchg
ds
adc
roll
pop
sbb
in
sar
mov
sbb
and
ret
sbb
arpl
xor
sbb
stos
jbe
cmp
scas
loop
cmp
sbb
xor
lds
mov
inc
das
mov
scas
cmp
mov
pop
sbb
stos
dec
pop
lds
ret
sarb
push
or
xor
std
jmp
push
mov
inc
xor
je
lcall
sbb
lods
das
aad
mov
mov
and
jmp
loope
xor
cwtl
loop
cwtl
jmp
mov
mov
ret
pop
or
rorb
pop
cmp
xchg
out
or
icebp
pusha
pusha
mov
xor
rorl
in
sub
or
dec
xchg
lods
fwait
bound
test
aas
jle
dec
fs
sub
jb
or
mov
je
xchg
fadds
int3
lcall
cld
push
pusha
xchg
and
add
jp
test
mov
outsl
in
in
adc
fisubl
imul
shl
sbb
test
adc
jmp
ret
jbe
jmp
fildl
bound
and
and
movl
mov
pop
idivb
mov
jnp
aam
pop
icebp
jp
mov
aad
pop
cmpsb
sub
xchg
out
dec
mov
pop
sub
movsb
fistpl
leave
je
daa
repz
lret
mov
repz
jmp
mov
jge
das
push
aas
outsb
leave
adc
push
outsb
or
jle
aad
mov
sub
roll
sbb
inc
loope
loop
es
scas
daa
scas
mov
dec
cmp
sahf
ss
xchg
pop
inc
cmpsl
xchg
ret
subb
lds
aam
stos
sbb
rep
adc
es
lcall
mov
mov
xchg
jg
mov
xorb
addl
test
lea
lret
sahf
mov
sub
mov
mov
sub
inc
pop
add
int3
mov
aad
pop
fcoms
lock
popa
ss
pushf
xor
dec
je
js
cltd
ds
sub
fbld
hlt
sbb
jp
int3
ret
mov
dec
push
inc
leave
lret
sub
adc
mov
int3
xchg
jae
roll
add
cmpl
fisttpll
fwait
cmp
mov
rcl
stos
pushf
shlb
inc
sub
imul
daa
inc
mov
push
jb
outsb
ljmp
cli
xchg
and
mov
mov
stos
jnp
cmp
loopne
sti
mov
xchg
jle
and
scas
stos
add
dec
lcall
les
call
pushl
scas
mov
fldl2t
xor
test
sbb
push
ficompl
fcmovnb
dec
shl
fs
negb
lods
lret
int3
shl
pop
fisubrl
mov
sbb
cmp
jmp
mov
fs
jmp
lcall
mov
pushf
lds
add
push
mov
loope
call
rorl
stos
pop
sbb
or
xchg
pop
push
cltd
sub
pop
test
fucom
scas
testb
fs
adc
inc
bnd
fiadds
lcall
xchg
andb
mov
mov
sbb
mov
or
ret
jo
cmp
jns
cltd
xlat
dec
or
rcrb
incb
shlb
and
and
inc
or
dec
mov
sti
rcrb
sub
ficoml
ds
jg
xchg
repz
ret
sahf
adc
ret
lret
insl
es
test
jne
stos
push
push
and
fs
mov
or
lea
in
stos
xchg
xlat
repz
sbb
sbb
push
inc
mov
sub
movsb
mov
sub
and
ret
in
fistpl
out
push
stos
enter
outsl
int
sahf
ja
leave
lea
pop
rorb
dec
dec
sbb
loopne
aas
lret
cmpsl
popf
int3
sbb
sub
inc
xchg
lods
lret
leave
inc
xchg
outsl
mov
mov
lods
add
fisubrs
jle
push
xchg
mov
dec
lods
cmp
or
mov
jns
cmp
xlat
pop
hlt
repnz
lea
jl
hlt
mov
aam
je
adc
enter
or
nop
inc
es
inc
push
lods
repnz
test
add
ds
adc
insl
xorb
enter
mov
add
or
decb
stc
xor
cmp
dec
pop
add
repnz
ss
mov
aad
test
hlt
and
jge
xchg
adc
fistpl
cmpsb
push
lock
lds
pop
xchg
mov
pop
jp
push
mov
pusha
andl
cmpb
lods
xor
push
sbb
icebp
push
lds
aad
push
jb
ljmp
mov
or
ljmp
movsb
js
clc
jl
insl
mov
adc
xor
xor
ja
mov
jle
js
push
mov
std
test
add
in
popa
inc
ror
and
push
out
dec
mov
mov
xchg
push
lret
pop
dec
mov
lods
out
pop
pop
add
addl
jp
popa
and
repz
mov
cwtl
cmp
mov
iret
sahf
push
in
into
sbb
xchg
lds
sbb
daa
das
xor
jp
xor
cs
mov
xchg
adc
jmp
test
or
push
pop
ret
mov
leave
and
dec
scas
mov
fisttpll
sbbl
rclb
ljmp
pop
fsub
test
loope
jo
mov
adc
xor
jne
je
mov
xchg
or
dec
xor
sub
lds
jmp
or
xchg
mov
mov
gs
adc
mov
pop
and
adc
loop
jge
adc
sti
mov
push
dec
add
adc
cmpl
pop
adc
or
aas
lahf
stos
imul
sub
jb
and
lods
out
ljmp
xor
mov
das
inc
sti
je
fidivs
std
sbb
mov
fwait
cwtl
add
lods
adc
or
das
mov
add
xor
mov
fidivl
rorb
roll
hlt
mov
mov
mov
mov
jp
rcll
lds
sbb
xor
mov
or
dec
sub
adc
xor
call
add
stos
push
add
loopne
lods
and
popl
out
mov
xchg
cmp
stos
ja
fstpl
cmp
dec
jl
or
daa
or
aam
pushf
notl
ret
mov
lcall
pop
cmp
and
pop
aas
pop
push
jae
inc
lea
xorl
bound
addb
mov
shrb
adc
stos
add
insb
aad
or
dec
lret
sub
pop
clc
test
loopne
leave
fucomip
sub
mov
inc
inc
cmp
das
nop
mov
sarl
push
das
orb
and
ret
call
ror
orl
ds
and
pslld
sti
pop
addr16
push
lahf
inc
imul
insl
stos
mov
sahf
xorb
pop
and
aaa
or
stos
xchg
push
insb
das
stc
or
jmp
mov
pushf
pusha
jno
cli
clc
movsb
and
or
mov
dec
fnstenv
push
mov
mov
lcall
mov
adc
faddl
idivb
loopne
pop
jle
adc
shll
mov
push
jbe
jns
out
gs
cmpsl
shll
xor
gs
push
in
fs
loope
add
idiv
hlt
xchg
pop
ds
jns
shrb
idivb
jbe
call
xor
lea
inc
cmpsl
mov
xor
dec
cs
insl
mov
mov
es
mov
std
rcrl
andb
xor
mov
dec
or
in
cmp
cmc
fistps
mov
hlt
dec
inc
sub
add
cmpsb
imulb
stc
mov
negl
pop
idiv
call
bound
enter
std
push
adc
adc
js
lock
mov
cmpl
inc
jecxz
mov
jnp
fcomps
pop
in
fiaddl
add
loop
or
clc
jnp
sbb
out
mov
lods
fmull
loopne
push
xor
mov
pop
mov
roll
lret
push
xchg
rclb
cwtl
ss
add
test
jb
dec
dec
test
ret
and
mov
pushf
xchg
cmpb
mov
push
and
jae
lcall
xchg
scas
cmp
imul
inc
dec
xor
and
push
cmp
ret
xor
xchg
ret
sbb
sbb
icebp
and
mov
aad
push
cmpsb
sahf
js
inc
cmp
and
enter
and
test
out
dec
sbb
mov
xchg
sbb
call
scas
ret
and
cmp
and
mov
in
ljmp
imul
unpckhps
stc
gs
popa
movb
add
in
mov
mov
xor
adc
je
and
and
flds
push
mov
cmp
dec
push
add
jmp
jl
adc
testb
push
fildll
pop
cs
sbb
aaa
xchg
cmp
xchg
ret
test
stos
adc
imul
jg
inc
loop
popa
imul
rolb
push
aaa
sub
jb
adc
jge
push
mov
xorl
inc
out
fisttpll
cmc
mov
mov
xor
rcll
ljmp
mov
add
inc
lcall
inc
adc
mov
pop
dec
cmp
sbb
or
xchg
push
cwtl
in
pop
clc
repz
pop
mov
gs
scas
ret
mov
inc
push
lods
lods
pop
fadds
movsl
popf
mov
xchg
rcrb
jg
jecxz
mov
add
cmpsb
mov
push
push
test
dec
or
enter
jg
subl
clc
imul
push
or
jl
scas
call
test
sub
jmp
push
cmpsb
inc
and
pop
xchg
enter
sub
mov
pop
xchg
out
sub
and
inc
sahf
push
out
or
mov
out
ss
and
movsl
psubb
ljmp
out
ss
int
and
add
xorb
inc
popf
mov
mov
push
push
mov
jo
adc
jo
shll
add
test
pcmpgtw
nop
sub
jp
mov
cmp
mov
ficoms
int3
xchg
jge
loopne
pop
push
mov
adc
ljmp
lea
dec
cmp
fcom
cltd
shlb
cwtl
fcompl
data16
adc
lahf
int3
jno
dec
lods
push
fstpl
adc
dec
dec
adc
enter
dec
fwait
add
xor
mov
xor
inc
mov
or
pop
mov
jge
ds
punpckhbw
mov
sub
add
push
inc
in
jp
outsb
aad
movsb
fildl
loopne
ja
fistps
or
clc
jmp
std
dec
inc
nop
mov
clc
jecxz
je
jne
call
dec
fadd
movsl
xchg
xchg
out
imul
pop
mov
int
jmp
mov
sub
movsl
stos
inc
jle
fistl
lods
xchg
mov
add
cmp
and
ss
fisubs
mov
mov
pop
imul
outsb
movsb
sbb
xchg
and
test
movsb
xchg
cmc
clc
adc
ret
inc
jmp
mov
mov
or
gs
lea
les
frstors
scas
cmpsl
and
jle
sub
jge
aas
popf
fmuls
ret
jle
xorb
sub
sub
ss
fisttps
sub
dec
xchg
sarb
outsb
cwtl
cmp
lret
push
pop
adc
loopne
arpl
add
int3
add
pop
test
mov
push
push
mov
in
call
dec
pop
call
daa
cmp
xchg
das
lcall
xor
sub
cmp
loope
inc
aad
test
push
dec
lcall
mov
les
cld
xor
sub
rcrb
push
push
cltd
mov
mov
inc
push
xchg
nop
add
pop
push
pop
sub
in
xor
mov
adc
ss
xor
xor
fisubrs
sbb
cmpsb
xor
pop
pop
test
stc
mov
jns
push
cmpsl
add
push
in
xchg
mov
mov
inc
pop
fnstcw
cmp
add
movsl
pop
or
or
adc
dec
fndisi(8087
or
or
cmp
lods
popf
mov
repnz
lds
jae
pop
and
jmp
lea
mov
fwait
inc
ss
jge
or
xor
ljmp
sub
mov
push
ret
inc
fisttpll
push
mov
lea
mov
or
sub
push
outsb
inc
fwait
ss
dec
in
das
icebp
repnz
sub
lea
xor
dec
test
xchg
push
inc
and
push
out
loop
fimull
cmp
push
or
cwtl
insb
mov
mov
decb
orl
cmp
push
lock
clc
add
aam
ret
fsubl
imul
add
add
add
pop
dec
mov
ret
out
mov
mov
xchg
ss
xchg
imul
mov
insl
mov
dec
and
pop
es
cltd
lahf
lret
rcrb
jae
and
sarl
fldcw
lret
add
cmc
adc
sbb
xor
loop
bound
cmp
cmc
mov
push
xchg
outsb
xor
lds
outsl
sub
sbb
mov
stos
int3
mov
enter
mov
mov
xchg
divl
shlb
add
imul
clc
push
jnp
scas
push
cmp
adc
lcall
jo
dec
jg
cmpsb
add
in
scas
push
in
or
sub
or
xchg
mov
mov
and
insl
sub
jnp
lcall
dec
mov
inc
inc
out
test
jb
mov
dec
xchg
popa
pop
loopne
imul
in
xor
cmp
inc
in
jbe
fwait
cmp
shll
out
sti
push
pop
dec
pop
roll
rcr
xchg
mov
jb
xlat
pop
sub
or
fnstcw
jecxz
sbb
lods
fcoms
rolb
cmp
arpl
and
jo
sub
or
ficompl
sahf
icebp
stos
jne
loop
cs
xor
mov
popa
sbb
in
sbb
out
xchg
adc
in
lret
push
add
int
jbe
xchg
lock
xor
mov
mov
lret
test
and
xor
lahf
xorb
mov
mov
cmp
mov
xor
sbb
add
pushf
cmp
xchg
sub
test
fcmovb
std
repz
iret
leave
cli
ret
cmp
daa
lods
cmpsl
and
js
dec
xchg
pop
std
jl
jne
sbb
pop
jns
lea
adc
repnz
lds
ret
pop
addr16
push
add
mov
cmpsl
cwtl
and
pop
clc
adc
cmc
cmp
imul
fisttpl
fnstcw
xlat
ficomps
rorb
dec
out
out
cs
mov
in
call
add
mov
xchg
inc
adc
test
les
pop
fisttpll
jnp
in
push
icebp
in
mov
addr16
test
mov
pusha
sub
fadds
sub
xor
fadds
notl
pop
popa
cmpsl
or
rol
add
lods
data16
rcrb
add
outsl
mov
fstps
sub
sbb
lds
pop
sti
popa
mov
loop
mov
pop
xor
clc
fidivrs
cwtl
lret
xchg
iret
test
sbb
notl
mov
pushf
mov
sbb
adc
stc
lods
mov
test
xor
jbe
sbb
stos
stos
and
ss
addr16
outsl
sbb
popf
call
mov
push
pop
mov
adc
cld
cltd
xlat
inc
xchg
mov
insl
in
frndint
lds
ret
push
sbb
dec
fldcw
hlt
lods
stos
icebp
aam
push
arpl
scas
lock
jne
push
int
xchg
aas
cmp
pusha
fdiv
enter
lods
pop
popf
in
daa
sbb
enter
outsb
lock
lahf
cmp
and
add
push
arpl
pop
push
cmp
jmp
outsl
sub
stos
mov
pop
cltd
cmpsl
xchg
push
fidivrs
pop
xorb
jl
jbe
arpl
into
nop
jns
mov
mov
fs
dec
clc
dec
adc
das
imul
pop
xchg
shlb
enter
jbe
dec
lods
add
sub
stos
sub
nop
sbb
fdivs
mov
dec
or
pop
jge
xchg
pop
pop
sub
lret
adc
test
cmp
xor
push
xlat
sbb
cwtl
xchg
xor
nop
inc
mov
jmp
pop
mov
lods
and
lods
mov
aaa
popf
cwtl
sbb
idiv
xor
adc
xor
mov
xor
lret
mov
push
rdmsr
adc
fs
sbb
loopne
jns
jp
mov
jae
mov
cmp
pop
or
cmpsb
mov
lea
mov
jmp
out
lahf
negl
divl
fistpll
push
scas
xchg
xchg
fxch
sbb
lret
mov
in
push
pop
mov
lods
aas
mov
mov
xor
mov
push
cmpsl
mov
jne
add
popf
test
or
cld
movsbl
jo
jnp
mov
cmpsb
push
mov
inc
inc
lods
iret
add
cwtl
mov
pop
leave
cs
xchg
push
xor
mov
lds
pop
sbb
faddl
add
pop
mov
mov
andb
shll
adc
ljmp
push
xchg
push
cltd
lret
xor
test
pop
add
test
insl
sub
mov
dec
in
mov
pop
dec
sti
shll
mov
and
gs
in
inc
int
push
ret
aas
in
sub
or
pop
xchg
and
mov
sbb
mov
mov
dec
notb
test
cld
push
das
push
lods
insl
fcompl
or
push
lock
and
push
sbb
lahf
imul
or
jl
addr16
sub
in
fwait
cwtl
lahf
jne
repz
loope
dec
push
push
loope
and
outsb
and
mov
insl
xor
popa
sbb
insl
sub
inc
pop
imul
cld
sbb
into
mov
mov
clc
sub
fisubrl
enter
and
neg
clc
divl
fists
mov
cltd
mov
lods
into
mov
jecxz
scas
sub
add
add
jnp
repz
pop
and
and
enter
neg
sbb
lea
ljmp
sbb
cwtl
lods
fs
sbb
xor
xor
sbb
std
fidivrl
popa
hlt
push
mov
icebp
adc
les
ds
jp
mov
sub
filds
or
mov
sbb
iret
sub
shl
pop
pop
inc
mov
jle
pusha
leave
repnz
push
shrb
gs
push
rcrb
dec
inc
or
sbb
mov
cmp
shl
add
ficoml
loopne
fisubs
xor
lea
cmpsl
push
mov
and
push
cmp
std
and
pop
sub
cmp
xor
jmp
mov
rcrl
in
xor
enter
repnz
dec
stos
add
fmull
mov
or
cmc
mov
push
in
adc
jle
lret
cmpsl
stc
cli
cmpsb
fs
push
scas
mulb
lods
or
push
push
mov
lods
jnp
fst
xor
int3
push
dec
int
stos
clc
popf
pop
dec
xchg
movsl
dec
nop
cmp
scas
stc
jp
test
add
mov
jp
das
sub
in
sbb
cmpsb
dec
outsl
xchg
addb
mov
push
adc
dec
testl
cs
mov
dec
addb
pop
cmp
fiaddl
push
nop
adc
ljmp
sarl
rcll
and
push
sbb
enter
or
mov
adc
lea
aaa
divb
mov
push
addb
fbld
lds
xor
dec
in
dec
xchg
fwait
push
jp
popa
mov
mov
fs
testb
out
enter
push
aad
shlb
lock
jmp
out
cmp
testl
daa
and
mov
sub
push
sub
test
out
adc
xor
fisttpll
pop
sbb
rorl
sbb
call
and
dec
ds
xor
adc
dec
cmp
call
lods
ss
pop
orl
out
sbb
dec
call
mov
sub
enter
shr
sbbb
sbb
mov
cmpsb
aaa
sbb
inc
out
sti
add
push
andb
mov
movsl
jb
add
pusha
fadd
jmp
sarb
jg
insl
mov
popf
mov
mov
adc
lret
adc
mov
sub
lahf
idivb
sub
seto
sysret
outsb
ficoms
outsb
lods
in
pop
jge
push
stos
mov
ja
push
into
xchg
movsl
stos
and
and
in
es
jnp
enter
or
in
movsb
pop
add
inc
cmp
pop
mov
aaa
imul
int3
inc
inc
pusha
out
arpl
imulb
in
sbb
sub
sbb
mov
insb
dec
mov
lock
xor
xchg
or
mov
cltd
mov
stos
roll
insl
in
xor
insl
sbb
and
mov
andb
or
dec
and
mov
sbb
stos
movsl
cmp
mov
fucomip
jp
cmp
out
das
clc
push
stos
cltd
iret
fstpt
mov
dec
insl
mov
xchg
orb
jnp
sbb
inc
xchg
stc
pushf
gs
push
das
es
jmp
ds
bound
in
jg
inc
cld
ja
outsl
adc
out
test
sbb
adc
mov
dec
mov
mov
mov
mov
jl
lahf
and
insl
mov
das
or
rorl
movb
or
push
pop
int
or
jns
add
push
arpl
jb
mov
popa
rclb
mov
iret
ja
into
add
mov
inc
adc
shl
movsb
mov
push
mov
in
or
negb
je
pop
jmp
in
push
mov
mov
icebp
fwait
subb
les
sbb
bound
out
aas
ljmp
aam
sbb
lea
gs
add
enter
addb
or
push
clc
cwtl
gs
stc
adcl
data16
rol
add
mov
xchg
call
sbb
fidivl
cmp
jle
push
stos
cmp
cmpsb
pop
mov
pop
js
and
fidivs
fisubl
ja
xchg
sbb
mov
sbb
jbe
enter
mov
jns
fistps
inc
xor
insb
or
pop
mov
sub
sub
ds
jmp
xchg
mov
or
adc
xchg
int3
fbstp
sub
stc
dec
pushf
mov
andl
pushl
xor
stos
dec
ficompl
sti
jo
xor
mov
aad
das
xor
test
xor
insb
ds
sti
into
ss
sbb
xchg
xchg
fmull
add
push
push
popf
test
sbb
push
in
cwtl
lret
jg
fimuls
fwait
loopne
jg
inc
cwtl
add
std
xchg
jp
dec
inc
pop
xor
loope
pop
xchg
adc
test
movsl
xlat
pop
iret
adc
aam
ret
fidivl
pop
push
xlat
mov
jae
jl
pop
cld
lcall
push
push
repnz
and
sbb
iret
pop
lock
mov
subb
insl
xorl
and
jmp
add
sbb
pop
jp
sub
mov
dec
lahf
mov
jne
in
adc
daa
pop
testb
jnp
cltd
out
cmp
in
jp
add
mov
pusha
lahf
outsl
fwait
sub
lret
in
ljmp
cmp
sbb
fdivrl
ja
push
push
adcb
cmpxchg
jg
fwait
add
divb
mov
addr16
cwtl
inc
pusha
sbb
imul
xor
decl
mov
flds
or
mov
pushf
mov
dec
nop
cmp
jmp
mov
mov
orl
rcll
jle
mov
push
sbb
inc
mov
lods
inc
mulb
inc
das
inc
fldcw
iret
cmp
lret
incl
out
cmpsw
ret
lods
dec
dec
inc
outsb
inc
xorl
cmc
inc
mov
call
pusha
sti
sub
jle
xchg
out
adc
js
loopne
out
std
fcoms
cld
cld
xchg
lods
mov
mov
inc
shlb
cmp
cs
popa
mov
out
add
fnsave
mov
inc
sarl
sub
arpl
mov
pop
mov
xor
cmp
inc
das
push
jns
loope
mov
pop
pop
fcomps
dec
pop
aam
mov
xlat
stos
mov
and
or
mov
sub
jb
cwtl
mov
jecxz
cld
mov
shrl
testb
stos
and
or
push
das
mov
test
mov
mov
pop
flds
test
cli
outsl
xlat
or
into
test
xor
loop
dec
mov
jmp
push
and
ljmp
repnz
cmp
aaa
stos
xchg
pop
jmp
fmuls
cmp
sbb
cmpsl
es
stos
or
push
push
lret
push
or
adc
xchg
sti
and
lods
push
sbbb
pusha
repz
cmp
int3
xor
stc
cmpsl
dec
int
xchg
add
jns
push
and
call
push
jmp
fisubrl
and
jmp
mov
pop
cwtl
cmp
shlb
or
dec
or
test
out
mov
cmc
clc
dec
test
cltd
pushf
cmpsl
mov
repz
or
xchg
xchg
ja
rorl
adc
mov
push
call
ja
and
xlat
lods
popa
pop
arpl
fwait
xor
repnz
mov
repnz
out
add
push
sbbl
rcr
jl
push
jo
xchg
inc
rorb
and
adc
mov
mov
or
ss
xchg
shl
lret
rorb
lods
clc
dec
leave
mov
jmp
idivl
adc
mov
jl
rcl
mov
mov
ds
stos
push
popl
insb
mov
fisubrl
je
cmpsb
in
mov
cwtl
mov
sub
sub
jne
out
sahf
mov
sub
mov
cmp
lock
das
xchg
into
cmp
fnstcw
addr16
xchg
aas
push
ret
inc
fldcw
lret
jmp
push
ja
out
xchg
pop
insl
adc
add
les
jnp
dec
jo
ljmp
imull
xchg
xor
shll
mov
stc
and
js
xchg
and
ret
mov
lea
mov
js
push
push
pop
inc
sarl
push
in
xchg
daa
mov
inc
xchg
xor
lcall
inc
fsubl
add
xor
xchg
pop
or
inc
add
jo
push
xor
lock
xor
jb
stos
cmp
daa
fildll
jo
cmpb
dec
mov
mov
sbb
pop
cli
mov
mov
aad
test
push
lods
pop
testb
and
pop
or
cmp
adc
ds
call
pop
out
inc
push
inc
jle
cmp
je
adc
lock
lret
push
push
or
sub
mov
pop
ja
push
in
jnp
addl
loopne
and
mov
jmp
lock
mov
mov
movsl
mov
dec
cmc
in
sbb
jbe
add
inc
faddl
gs
lret
fistpll
inc
je
xchg
dec
push
sbb
hlt
mov
sarl
xchg
add
fcmovnb
jl
lea
mov
loopne
cli
cli
mov
cmp
inc
test
sub
rorb
into
imul
mov
je
pop
cmp
outsb
add
pusha
push
cli
jns
test
mov
jle
or
xchg
sub
or
cmp
pushf
or
orl
imul
dec
jl
lods
adc
scas
int3
gs
xlat
inc
dec
jle
or
jb
inc
aam
sbb
cwtl
sub
pop
pavgw
test
dec
push
push
adc
sub
or
or
jbe
inc
in
outsl
shlb
and
jne
insb
mov
in
sarb
mov
sarb
popa
ljmp
mov
sbb
ss
jecxz
lret
sti
popa
in
sbb
cmp
mov
add
xchg
rorb
ret
add
inc
das
cltd
ja
lock
fdivl
and
fld
cmpl
mov
ret
inc
jmp
add
mov
pop
rol
and
dec
daa
fnstenv
fxch
cmc
jb
js
jl
adc
into
cwtl
inc
and
mov
add
imul
int3
and
stos
mov
test
lds
xchg
loope
sub
pop
push
sub
insb
inc
cmp
enter
cltd
jl
outsl
fwait
pop
cmpsb
xchg
popf
lahf
into
out
inc
in
xchg
xchg
cmp
inc
xchg
xchg
push
rorl
cltd
mov
adc
jl
ss
ret
fldl
dec
popa
aad
addb
leave
fists
dec
je
and
ljmp
inc
jb
test
or
mov
into
push
out
adc
stc
rolb
xchg
popf
idivl
sbb
pop
call
pusha
xor
sti
dec
pop
xor
ss
and
push
arpl
testb
jl
pop
xor
adc
push
pop
mov
adc
cmc
pop
cwtl
dec
xorl
xor
rcrb
sti
shrb
das
cmp
es
aaa
out
sti
inc
push
out
dec
and
mov
enter
sub
or
subl
lea
mov
push
push
in
mull
popa
popf
stc
inc
icebp
mov
je
fiadds
ja
pop
mov
mov
mov
out
je
and
ret
push
sbb
sbb
lods
fsubrl
aad
fsubs
lods
xchg
fstps
pushf
cmp
xlat
xchg
daa
mov
in
sub
int
pop
stos
test
push
inc
js
push
sbb
pop
cmp
cmpsl
jmp
scas
imul
movsb
pop
xchg
lahf
jmp
mov
testb
mov
outsb
sub
ss
sbb
mov
aaa
cmpb
sub
lods
jg
inc
and
mov
dec
mov
dec
push
mov
or
ljmp
addr16
mov
movsl
data16
add
mov
adc
pop
in
lods
cs
jl
add
les
mov
mov
in
cmp
outsl
fs
dec
shrl
fs
cmp
lahf
adc
imul
popf
dec
movsb
jge
stos
add
adc
jmp
push
dec
enter
cmp
popf
daa
cmp
dec
xchg
push
pop
test
sbb
push
call
shl
movsl
fists
int3
jecxz
fildl
cld
dec
psubusb
test
dec
pop
mov
xadd
shrb
orl
iret
pop
inc
adc
and
push
rorl
and
aas
jg
mov
push
jbe
jecxz
jl
lods
xchg
and
dec
cld
ja
pop
out
mov
sbb
out
std
or
mov
shrb
sub
stos
mov
sub
mov
cmpsl
out
and
les
jg
mov
lahf
cs
dec
xor
lds
mov
mov
cwtl
mov
jp
xchg
das
mov
sub
andb
adc
mov
or
lret
loop
ljmp
xchg
fcmovnu
jg
mov
pop
stc
test
std
add
cmp
xor
pop
int
daa
xor
mov
outsl
cmpsl
xchg
push
jmp
int
jb
rcrb
aas
dec
stos
dec
adc
insb
cli
push
and
pop
test
jno
aas
pop
inc
daa
push
adc
mov
pop
movsb
sub
rcrb
nop
cmpsb
jns
sub
sbb
sbb
xlat
xlat
mov
in
mov
sahf
test
pop
sbb
cmp
rolb
pop
add
pop
sete
xchg
push
jl
and
ss
mov
out
jo
fisttpl
ret
sti
incl
roll
sub
ljmp
dec
inc
mov
mov
mov
mov
ds
inc
mov
xlat
test
dec
pop
lret
inc
push
cmp
daa
cs
xchg
pop
sub
adc
js
jge,pt
add
mov
mov
or
xor
or
stos
push
clc
mov
adc
ds
shl
xor
sarl
pop
push
pop
in
mov
xchg
xlat
insl
adc
pop
mov
mov
mov
test
mov
out
add
addr16
mov
pusha
xchg
mov
sub
outsb
nop
in
mov
das
xchg
mov
movsl
xor
jns
cmpsb
lock
lret
popf
in
sarb
mov
test
hlt
mov
pushf
push
xchg
cmp
out
rcll
loope
sbb
mov
popf
imul
imul
sarb
dec
mov
inc
lock
sub
add
neg
pop
fisubrl
hlt
push
sub
js
mov
xchg
lods
and
sbb
dec
daa
cmp
rorb
mov
mov
mov
popa
sbb
and
and
mov
cwtl
test
lods
out
or
sti
or
iret
jae
sti
stos
inc
and
popa
jmp
lret
jne
in
enter
sub
test
ret
push
iret
push
outsl
or
in
sti
cs
popa
inc
repz
das
lods
xchg
frstor
mov
jle
insl
out
adc
mov
daa
mov
jne
scas
adc
xchg
clc
mov
out
aaa
jp
nop
inc
inc
mov
lods
xor
mov
mov
and
ljmp
xor
mov
out
add
in
pop
lods
data16
push
fistl
jb
fs
mov
pushf
movsb
cmc
in
dec
pop
mov
test
inc
jmp
test
xchg
stos
push
fs
repnz
pop
mov
push
imul
stos
dec
mov
insb
sub
jne
sbb
int3
arpl
data16
dec
das
jno
incb
call
mov
dec
pop
pop
push
fwait
lea
inc
imul
int3
xor
into
enter
fldcw
lods
push
in
sahf
lock
fisubl
cmc
sbb
add
es
pop
pop
insl
and
cmpsl
xor
leave
dec
in
stc
addr16
jae
sbb
push
stc
iret
loope
lret
pop
adcb
in
das
ret
out
lcall
ficomps
push
mov
lods
add
mov
and
je
imul
divl
out
mov
push
push
stc
movsb
and
pop
add
dec
mov
mov
push
xchg
ds
fistps
lods
inc
insb
pusha
into
cmp
into
push
aaa
jb
imul
test
jg
push
scas
mov
mov
scas
fbstp
xorl
dec
data16
mov
or
outsl
call
out
mov
ffree
lret
xchg
xchg
ret
ja
add
or
mov
cmc
das
or
cs
cmp
outsl
sub
int3
inc
cltd
jnp
es
popa
fucomi
sbb
pop
or
imul
dec
jl
sahf
cmp
rorb
xchg
sub
outsl
out
in
pusha
test
testb
cld
sbb
stc
jno
xor
adc
es
and
stos
out
cmc
mov
flds
or
shl
mov
pop
jmp
cs
fs
push
std
inc
ret
daa
movsl
push
stos
fcmovnb
or
inc
fwait
or
loop
mov
rol
pushf
outsl
adc
xchg
test
fisttps
push
nop
jnp
xchg
dec
jo
fwait
xor
dec
mov
insb
adc
pop
push
rclb
sbb
aad
xor
pop
cmp
pop
and
stc
nop
in
orl
in
jne
out
mov
loop
lahf
mov
fs
jb
in
adc
sbb
mul
aam
jbe
outsl
imul
xchg
push
or
push
mov
push
loop
inc
cmp
add
mov
cmp
mov
loop
xchg
xchg
cltd
out
mov
xor
imul
xor
pop
or
adc
cmc
mov
popf
jne
test
xor
std
sub
loop
fsts
pop
in
jp
xchg
pop
sti
fsubl
insl
xor
dec
mov
mov
fimull
inc
and
fstpl
in
jae
aas
jp
gs
or
add
cs
cld
xor
adc
sbb
rcrb
push
xor
ret
lods
out
fistps
sti
stos
jns
pop
or
xchg
loop
mov
pop
or
lods
fidivrl
iret
lea
pushf
mov
movsb
xor
xchg
imul
jbe
xchg
jl
cmp
push
fildll
sub
test
orb
adc
movsl
sbbb
inc
mov
jmp
push
gs
in
add
or
pop
mov
leave
xorl
sbb
scas
mov
rcl
push
scas
inc
xchg
out
mov
or
xchg
stc
je
push
lret
jle
adc
popa
pminub
or
aas
xchg
mov
sbb
dec
andb
push
fwait
and
gs
push
add
out
int
add
fwait
sti
addr16
in
lods
loop
mov
mov
aam
test
ljmp
insl
fxtract
fdiv
test
imul
adc
push
xorl
scas
inc
pop
xlat
out
ljmp
dec
jns
mov
add
mov
inc
sub
into
loopne
xchg
dec
mov
xchg
mov
jecxz
lock
lahf
cmp
jecxz
aad
sbb
cltd
fbld
insl
shrb
sbb
cs
popa
add
xor
shrb
jo
xchg
jmp
jno
jb
or
es
push
inc
cmc
and
xor
dec
cld
rorl
icebp
mov
sbb
inc
cmp
es
test
jbe
test
popa
repnz
aam
xor
xor
or
pop
fldenv
pushf
fldt
jl
cmp
mov
daa
mov
inc
shll
movsb
xchg
mov
push
inc
xchg
inc
xor
loope
push
into
aam
inc
sbb
int3
jno
cmpsl
les
cmpl
rcl
jecxz
andb
cmp
sbb
add
aad
jge
test
call
jo
call
ljmp
cmp
adc
loopne
movsl
add
add
lahf
es
xchg
cmpb
cltd
lret
imul
xchg
pusha
sbb
lock
fdivrs
jo
loope
dec
mov
push
push
cmc
shlb
mov
cwtl
out
add
jae
add
pusha
xor
in
pop
adc
inc
sbb
arpl
sbb
jne
mov
mov
mov
fidivrs
cmpsl
lods
popa
rolb
push
dec
cmp
push
test
test
push
out
jle
adc
data16
pop
fstpt
xor
sbb
shl
nop
sahf
add
adc
xchg
test
arpl
or
call
push
push
sar
and
andb
cld
call
dec
cltd
jno
das
or
lods
add
adc
dec
test
movsl
aad
icebp
push
mov
mov
lret
aas
push
add
jbe
cltd
iret
scas
pop
mov
gs
cmp
ficompl
jae
cmp
pop
adc
mov
loop
or
hlt
cld
xor
jo
add
xchg
and
mov
cmp
fldenv
mov
sbb
sub
ror
xchg
xchg
xchg
into
icebp
std
mov
or
push
or
mov
data16
and
outsl
add
adcl
insl
mov
dec
addr16
adc
popf
mov
flds
cld
push
pop
jge
fnstenv
xor
add
pop
fnsave
fs
rorl
pop
xchg
pop
and
fimull
mov
jle
push
scas
fadds
sub
dec
or
push
mov
or
repnz
lret
xchg
nop
xlat
mov
shrl
scas
xchg
adc
inc
inc
pop
sub
inc
cmp
es
popa
call
out
cltd
lods
mov
dec
dec
gs
pop
out
sbb
addr16
sbb
lahf
jbe
rolb
push
pop
nop
mov
loope
fidivrl
ljmp
faddl
push
sub
dec
push
sti
inc
or
orl
cmp
add
mov
add
xchg
sub
sbb
insb
jnp
dec
push
dec
fstp
pop
sbb
test
loopne
xor
shll
mov
repnz
rcll
xchg
xor
mov
dec
shr
daa
stos
pop
leavew
in
inc
popa
hlt
sahf
pop
movsl
pop
das
repz
mov
mov
in
adcl
mov
into
sbb
imul
dec
je
push
cltd
jmp
xor
dec
pop
jl
or
xchg
pop
insl
adc
repz
mov
hlt
sub
add
and
out
ljmp
xor
daa
xor
sbb
mov
mov
sahf
rcrl
das
jae
out
adc
ret
cmp
mov
adc
sarl
dec
test
jl
lock
fbstp
imul
inc
data16
cwtl
fs
addr16
cwtl
mov
fwait
or
mov
sbb
call
mov
pop
push
testl
mov
leave
cmp
mov
xchg
pop
hlt
push
dec
and
mov
inc
xchg
pop
nop
pop
jne
sbb
xor
or
push
add
rclb
lods
cltd
popl
push
popf
cmc
add
jp
or
dec
je
jmp
scas
test
ficompl
pop
lock
shr
repnz
mov
lds
dec
data16
ficoml
fdivs
add
adc
fcom
movsl
jecxz
xchg
lods
and
call
sub
insb
out
and
jo
mov
repz
out
sub
ljmp
and
pop
mov
pop
shl
dec
movsl
loope
int
loopne
xorb
lea
mov
fcompl
div
popa
out
jl
mov
clc
cmp
inc
ds
mov
and
andl
mov
pop
dec
in
pop
stc
and
xchg
into
pop
lret
loope
loope
push
shrd
jl
jb
jp
fs
not
scas
dec
cltd
mov
jg
push
sub
test
or
aaa
jp
add
dec
cmpsl
lret
mov
add
cmp
out
cmpsl
fiadds
subb
arpl
mov
add
xor
push
fisttps
leave
push
or
mov
out
and
inc
sbb
pop
dec
xchg
mov
dec
jae
ret
cmp
and
push
push
daa
push
js
mov
in
sti
push
imul
and
popf
ret
inc
inc
mov
inc
xor
cltd
test
cmp
mov
mov
mov
add
pop
lods
sbb
xchg
jmp
jb
sub
sbb
negl
inc
lcall
xchg
aad
out
popf
sti
sub
inc
sbb
arpl
and
aaa
xchg
pop
sub
stos
mov
dec
dec
xchg
shlb
cmp
fsubrs
add
loopne
mov
mov
mov
inc
sub
adc
xor
inc
movsl
inc
clc
sub
sbb
mov
push
test
cmpsb
ljmp
nop
add
out
int3
jbe
adc
dec
scas
xor
xor
stos
test
ds
pop
xchg
pusha
lea
sbb
daa
cmc
js
js
mov
fs
ret
jns
mov
pop
inc
ds
loopne
mov
jg
movsb
cmp
xchg
cmp
pushf
and
xor
jne
pop
sub
cld
lahf
adc
xchg
cmp
inc
jge
mov
sub
sbb
xor
fldenv
cmp
addr16
jne
unpckhps
adc
or
mov
add
stos
int3
push
rclb
fldcw
js
fcoml
lahf
push
and
test
pop
add
ss
fmuls
ja
pop
jno
sbb
push
mov
in
cmpsl
mov
mov
leave
push
push
jecxz
sahf
jl
mov
scas
and
je
sbb
fdivp
xchg
cmc
and
rcrl
test
dec
inc
xchg
shlb
adc
mov
xlat
sbb
push
cmp
addb
pop
sub
ret
imul
jbe
mov
lea
dec
xchg
stos
xchg
mov
imul
les
pushf
mov
sub
inc
jge
or
int3
xor
mov
movsl
fwait
call
je
inc
sub
ljmp
mov
leave
dec
dec
mov
data16
adc
mov
xlat
push
push
in
sbb
clc
pop
popf
cwtl
inc
stos
out
int
mov
push
mov
pop
inc
sub
ljmp
leave
ja
popf
push
mov
and
push
cmpsl
xor
pop
dec
and
push
dec
ja
and
loop
inc
inc
andb
test
daa
xchg
shl
lea
movsb
and
cmp
fcompl
int
jno
imul
xchg
mov
andb
jnp
aas
cmp
sub
cmp
loop
aad
push
mov
pop
mov
lret
movsb
push
fbld
pushf
rcrl
adc
stos
push
ja
and
nop
je
repnz
and
test
mov
dec
shlb
testl
pop
jge
xor
loope
dec
or
rolb
fimuls
into
cmp
idivb
cmp
and
adc
dec
pop
loopne
inc
cmp
insb
pop
jmp
cs
mov
andl
add
sbb
sbb
push
rclb
sbb
xor
push
es
aas
and
cmp
xchg
call
fbld
mov
aaa
mov
cmp
leave
pop
ljmp
push
xchg
imulb
lods
out
aas
popf
jno
out
loop
gs
jg
arpl
jge
insb
in
pop
fimull
pop
dec
dec
dec
test
or
aas
imul
jnp
filds
adcb
aad
stos
inc
jle
nop
stos
int
jg
rcr
sub
jmp
int
add
xchg
cmpsb
add
lret
lea
add
xor
mov
sbb
adcl
adc
ljmp
inc
jne
cmp
jmp
in
dec
pop
lea
push
and
dec
aad
in
inc
inc
fsubs
mov
jle
or
lods
xchg
mov
sub
icebp
mov
add
sub
loop
xor
js
push
popf
pop
mov
fnstcw
arpl
insl
in
dec
cmp
mov
test
cmp
sub
jmp
data16
in
mov
mov
add
push
or
cmp
mov
xchg
cli
mov
or
sub
sub
add
nop
mov
dec
xchg
nop
xor
sbb
mov
sbb
lea
icebp
into
loope
or
pop
popf
mov
lods
push
sti
enter
xchg
aaa
sahf
mov
adc
push
fildl
mov
xlat
xchg
jae
sub
sarb
mov
inc
and
push
in
es
test
lock
ja
inc
mov
push
sub
popfw
xchg
cltd
or
addr16
xchg
cmp
push
or
mov
or
addr16
and
clc
adc
cmp
pop
push
adc
sbb
push
lcall
ss
pop
cmpl
jb
mov
cmp
out
call
add
outsl
in
int
insl
shrb
movsl
pop
or
addr16
xchg
push
iret
inc
in
push
xchg
or
mov
mov
jns
and
xor
xchg
sbb
pop
insl
push
sbb
jnp
mov
sbb
movlps
mov
push
insb
xor
fsts
push
outsb
cmp
jb
mov
test
pop
xchg
jno
lock
mov
cmp
jecxz
pushf
sbb
clc
loopne
push
inc
xchg
fwait
sarl
mov
push
call
je
dec
add
xchg
or
jecxz
adc
adc
out
sub
gs
daa
fcomi
jns
test
insl
xchg
enter
sbbb
cmp
add
pop
dec
inc
cmpsl
add
ljmp
and
cmp
dec
pop
stos
add
iret
int3
mov
dec
movsb
mov
push
dec
stos
stc
int
add
sarl
mov
pause
or
es
jl
es
gs
pop
test
cli
incl
pop
cwtl
push
pusha
pop
sahf
or
outsl
add
out
mov
and
stos
testl
sbb
mov
mov
inc
push
mov
lea
add
mov
push
fldl
sbb
mov
push
cs
mov
aad
or
inc
fsubrl
loopne
pop
push
imul
and
cmp
cmpb
and
adc
lahf
cmp
add
sbb
les
mov
movsb
lock
jne
aam
popa
cmpsl
lahf
and
sub
lds
orl
outsl
lret
add
shll
xchg
dec
aaa
inc
iret
jae
loope
loop
xorb
inc
insb
in
push
or
test
cmp
sbb
cmpsb
mov
ficompl
add
push
div
xor
jp
out
add
push
repnz
es
inc
xchg
outsl
xchg
sahf
lret
pop
sti
cmp
mov
js
in
inc
jl
or
jb
fadd
nop
fs
nop
popa
dec
clc
jg
push
out
lcall
cmc
push
test
out
xchg
popf
jne
movsb
cld
add
fnstenv
add
test
push
mov
push
clc
movntq
pop
stos
in
mov
nop
inc
jge
loop
ljmp
jmp
je
in
repnz
xchg
xchg
jl
loope
jmp
mov
sbb
cltd
sbb
orl
sbb
inc
mov
popf
xor
loope
mov
cwtl
ret
mov
sahf
jp
jnp
sbb
mov
inc
mov
popf
and
push
mov
sub
lods
outsl
push
xchg
adc
cli
mov
inc
jmp
test
push
and
dec
mov
movsb
jo
popl
out
movsb
cli
hlt
lahf
dec
xor
add
rep
sbb
je
call
push
inc
inc
sti
xchg
adc
int
test
inc
push
imul
divb
aaa
shlb
xor
jb
and
jno
push
sti
loope
adc
dec
mov
adc
sbb
jno
xor
clc
lea
je
sbb
mov
adc
cmc
dec
test
ljmp
cld
aad
pushf
push
push
int
mov
xor
gs
add
adc
xchg
add
push
sub
cmp
daa
sarb
stos
out
es
push
xchg
loop
in
add
ja
pushf
test
pop
add
movsl
sub
and
shl
iret
and
popf
mov
add
js
fsts
mov
nop
cmp
leave
arpl
xchg
outsb
int
mov
mov
adc
xchg
lea
fidivl
xor
or
dec
int
into
ret
int
stc
fwait
enter
mov
xchg
add
jecxz
xchg
in
pop
dec
inc
daa
mul
pop
hlt
fisttpll
dec
aam
mov
pop
mov
pop
pop
cltd
xor
aad
incb
or
out
andl
mov
mov
in
aaa
mov
nop
jns
clc
loop
jbe
push
jo
dec
cmp
arpl
adc
into
aaa
cwtl
imulb
jo
out
imul
hlt
les
mov
dec
std
sub
iret
fdivrs
xchg
jae
lods
jge
add
stos
push
ja
cmpsb
in
sub
fidivl
sbb
xor
xchg
xchg
out
pop
popf
sahf
sbb
pop
mov
lea
enter
cmp
int3
sub
xor
sub
aaa
mov
repnz
or
loop
xlat
iret
in
orl
push
aas
dec
mov
ds
sbb
fs
in
in
in
jmp
stc
mov
ret
mov
inc
sub
aam
sbb
movsl
shrl
les
push
pusha
sbbb
mov
lret
mov
ss
cmp
sbb
movsb
jo
imul
push
add
test
cld
ja
mov
in
fcoml
cltd
shrb
movsl
jne
sub
test
movsl
mov
jl
adc
imulb
sub
gs
cmp
pop
xchg
push
imul
and
stos
lods
fisttpl
int
add
cmpsl
inc
and
xchg
mov
fldcw
scas
dec
out
add
mov
and
sub
sbb
insb
lcall
mov
dec
sti
ds
fsts
leave
pop
push
mov
popa
pop
mov
pop
shr
mov
cli
or
or
lret
sbb
sbb
jae
call
inc
mov
cmp
or
fidivs
dec
mov
xchg
mov
sbb
dec
les
and
push
inc
add
xor
push
lahf
mov
icebp
dec
pop
test
or
sbb
mov
int3
imul
add
or
dec
push
mov
leave
mov
test
mov
cmp
pop
inc
add
popl
sub
hlt
dec
call
in
jb
jmp
inc
pop
imul
fsubr
mov
adc
or
adc
loope
push
lds
int3
and
mov
leave
or
xor
push
sahf
lcall
sbb
jne
mov
lds
mov
mov
pop
nop
mov
push
mov
shll
mov
icebp
jne
sub
mov
dec
insb
cmpsb
mov
lock
scas
aad
lods
jbe
lcall
loop
popf
lods
adc
mov
stos
sbb
mov
mov
cmp
add
jnp
fwait
es
xor
adcl
dec
pop
dec
pop
aad
mov
mov
inc
lds
xchg
inc
in
add
call
xor
addr16
inc
sub
mov
out
cmp
fstpl
xor
mov
or
mov
das
and
ja
mov
and
mov
sbb
pusha
pusha
shl
lods
inc
sbb
add
stos
in
cmp
ss
jmp
ds
mov
je
mov
inc
cs
sbb
mov
mov
inc
mov
jle
or
lcall
dec
mov
inc
cmp
fdivrs
clc
sbb
leave
xor
fs
xchg
dec
mov
test
fcomi
jg
fsubs
and
and
sbb
test
enter
aad
dec
loopne
fldt
mov
out
lea
daa
negb
lock
shll
or
repz
ja
addr16
dec
in
ret
adc
xchg
fcomi
ds
in
call
movsl
loopne
std
push
je
xchg
lahf
mov
cs
mov
cmc
arpl
sbb
push
nop
sub
test
movsb
andb
sbb
add
pop
cld
push
xchg
fmuls
push
stos
leave
hlt
adc
jne
repz
mov
popa
sbb
inc
call
pcmpgtw
loope,pt
fwait
adc
xchg
cmp
xor
outsb
xor
xchg
aaa
and
add
xor
aam
jecxz
add
ja
inc
adc
fimull
subl
repz
and
test
mov
push
sbb
mov
movsl
push
push
fwait
test
pop
adc
loopne
andb
ljmp
adc
in
inc
notl
jmp
cmpsb
xchg
mov
xchg
icebp
out
jne
les
fsub
sbb
rcl
sbb
cmpsb
movsl
and
mov
test
mov
fs
mov
fildll
in
jmp
daa
in
cmp
aaa
xchg
ret
out
movhlps
popf
mov
ja
jg
cmpsb
ss
xor
or
jp
cmp
mov
loopne
and
jbe
cmpsl
xor
mov
jns
test
pop
lahf
or
adc
lods
dec
aad
dec
jne
xchg
dec
mov
subb
mov
cwtl
lcall
push
test
add
jb
subl
pusha
fstpt
mov
ja
in
xchg
add
lods
mov
inc
push
iret
pop
out
push
fsubs
jae
jg
push
mov
cmpsb
sbb
aas
arpl
scas
or
ret
loope
add
imul
xor
dec
imulb
mov
stos
fisubrl
xor
fisttpll
or
mov
push
call
repnz
ss
test
push
add
sub
iret
push
dec
rcrb
cmp
js,pn
inc
into
adcl
mov
xchg
cwtl
movsb
adc
push
testb
sub
adc
sub
fstpt
or
mov
inc
dec
xor
mov
push
jecxz
xchg
jae
lds
fstps
test
mov
les
aas
jne
mov
and
stc
out
aas
sub
sarb
into
xchg
adc
and
fwait
dec
into
dec
ror
mov
imul
and
ret
stos
std
fists
pop
call
call
mov
rcll
loope
dec
jns
enter
andl
addr16
lods
out
adc
sub
push
inc
int
out
push
xchg
and
jnp
ljmp
xchg
sub
push
sti
push
shl
cld
hlt
adc
arpl
lret
loope
adcl
movsl
insb
jne
jle
dec
jl
pop
xchg
scas
cmp
push
in
inc
cmp
sbb
bound
sarl
inc
shrb
daa
getsec
adc
into
push
pop
mov
adc
dec
aaa
sub
pop
mov
push
xchg
cmp
xor
or
fsub
mov
iret
mov
xlat
dec
push
test
int3
sbb
jbe
adc
popa
test
in
addr16
mov
insb
das
les
addl
sub
fisubrl
mov
leave
mov
ret
out
bound
or
test
mov
pop
call
and
xor
cmp
sub
push
jmp
cwtl
rcll
dec
xlat
cmp
pop
jecxz
out
cmp
add
mov
test
pushf
popa
dec
or
jo
arpl
sub
ljmp
push
lea
adc
movsb
nop
mov
cmp
das
pop
xchg
das
pop
pushf
jb
test
cltd
ret
std
mov
lods
add
mov
mov
sbb
out
lods
hlt
int
push
movsb
adc
adc
cmp
push
mov
nop
arpl
xor
loopne
jne
mov
lahf
movsl
loope
out
nop
adc
cmp
lcall
ret
jb
pop
inc
imulb
jge
mov
jmp
roll
test
daa
jno
mov
pop
sub
lods
stos
pop
mov
adc
in
sbb
mov
cmp
jp
jmp
xor
shrb
cmc
mov
sbb
stc
xchg
inc
push
repnz
mov
add
movsl
dec
mov
or
push
push
sub
aaa
xchg
mov
xchg
aam
jae
jmp
loope
cmp
lods
sub
fmull
lock
frstor
lahf
ds
adc
xchg
pop
dec
inc
cmpb
jbe
add
movl
add
push
lret
adc
add
sahf
pop
xchg
and
or
mov
lcall
add
mov
out
loop
dec
call
mov
xchg
divb
dec
xorb
rol
lret
jp
std
mov
mov
les
jg
andl
ja
and
inc
sub
ss
mulb
imul
or
mov
adc
sbb
mov
test
mov
fistps
adc
inc
jp
test
sbb
je
pop
mov
or
inc
leave
xchg
push
cli
lea
xchg
pop
push
mov
push
mov
sbb
mov
mov
lahf
jns
jl
xor
stos
je
sbb
mov
push
cmp
test
cmp
repnz
xor
inc
imul
xor
jmp
mov
movl
incb
cmp
fistl
scas
add
xchg
fcom
insl
xor
inc
xchg
lahf
inc
addl
popa
idivl
rcll
xchg
lret
add
cli
inc
pop
cmp
sub
int
dec
call
xchg
hlt
scas
sub
fistpll
mov
xorb
in
incl
decb
loop
dec
out
outsl
mov
sbb
xchg
mov
sahf
iret
lods
and
in
or
pop
aaa
inc
enter
shrl
in
outsb
in
xchg
push
adc
loope
push
cmp
or
rorb
imul
adc
ljmp
cmc
in
nop
imul
cmc
fldl
lea
insl
cmp
enter
xchg
add
push
mov
out
leave
dec
aaa
add
shll
into
adc
jp
movsl
push
out
adc
cmc
movsb
popa
dec
stos
mov
sub
adc
dec
xlat
jnp
mov
inc
vpmacsww
out
scas
mov
sub
mov
mov
std
dec
in
leave
jl
or
enter
arpl
mov
gs
mov
icebp
sbb
sbb
sub
scas
jg
jo
mov
shll
cmp
andl
xor
pop
stos
lods
sar
xor
mov
sub
mov
pop
inc
cmp
out
popf
add
add
popa
sbb
fidivrl
add
rcrb
popa
out
jg
mov
es
pop
jb
cli
xor
test
adc
xchg
js
in
popa
add
dec
jmp
mov
shlb
out
cmp
xor
dec
mov
pop
out
mov
jmp
dec
test
jno
pop
and
outsl
cmp
ja
fadds
pusha
lods
call
aas
mov
iret
dec
mov
comiss
inc
xor
or
sbb
sub
mov
fwait
mov
lock
xchg
push
cmp
jecxz
pushf
mov
call
mov
and
pop
cmc
push
push
int
fcomip
or
push
and
push
movsb
sahf
inc
arpl
loopne
xor
xor
insl
ja
cmp
jns
add
loope
stc
shlb
jbe
mov
faddl
xor
mov
nop
push
push
call
jnp
ja
in
fsts
cmp
pop
pcmpgtd
popa
in
mov
rcll
outsl
pop
add
scas
popa
je
loop
and
mov
pop
movsb
ss
and
sub
adc
adc
xor
divl
dec
movsb
inc
xchg
push
aaa
test
dec
lret
je
mov
call
mov
push
je
cmp
out
jne
mov
dec
push
ljmp
rclb
jbe
sub
or
popa
push
std
in
lret
jecxz
cmpsl
les
inc
hlt
jle
mov
repz
adc
shr
repz
hlt
test
popf
fdivrl
inc
xor
push
mov
mov
sbb
push
std
jnp
sub
shl
push
sub
and
or
mov
mov
int3
xor
dec
pusha
mov
and
iret
lea
inc
xchg
outsl
fldcw
lds
mov
clc
into
js
out
cmc
sar
mov
cmpsl
cld
add
lahf
out
aas
and
rclb
sub
lods
mov
and
lds
cmp
movsl
stos
mov
xchg
xchg
jbe
mov
rorl
or
mov
mov
lret
sub
xchg
jno
dec
shr
or
ja
movsb
xchg
orb
jmp
fs
xor
cmp
test
mov
mov
das
jl
fisubs
adc
sti
lock
in
lcall
mov
fnsave
scas
jge
sub
std
lcall
mov
subb
push
shll
sbb
enter
jae
or
xchg
xchg
cmp
out
ss
andb
xchg
and
mov
and
addb
jb
sub
pusha
jge
add
mov
adc
jecxz
insb
imul
mov
mov
sub
aaa
pop
bnd
add
xchg
xchg
pop
sub
or
cmp
push
iret
test
ljmpw
andb
ret
fidivrs
jno
bound
mov
out
inc
repz
sbb
mov
or
xlat
out
dec
imul
xor
orb
push
sub
int3
bswap
cmp
les
cmp
or
test
or
sub
cmp
lea
fidivs
push
fidivrl
xchg
pop
shll
pop
sub
mov
fcoml
into
popa
sub
adc
imulb
xor
push
xchg
sar
xchg
pop
inc
out
pop
adc
fists
sbb
jbe
inc
jp
dec
fcoml
push
and
cmpsl
xchg
mov
sub
in
mov
scas
lds
and
cli
cmpsl
test
add
shlb
std
dec
enter
adc
pop
out
xchg
lds
inc
mov
fs
mov
push
repnz
repnz
or
push
sahf
ss
dec
xor
cmp
test
dec
loop
int
addr16
pop
std
xchg
jmp
nop
jbe
lret
mov
jp
and
testb
pusha
jg
inc
or
ss
lcall
rcll
ja
sub
daa
es
dec
movl
movsl
repz
dec
fdivrs
test
pop
jns
test
cmc
jne
inc
xor
pop
dec
sbb
add
out
pop
fdivrs
mov
pop
and
inc
and
loope
and
insl
cmp
sub
inc
pop
or
push
push
push
shlb
mov
mov
mov
sub
ficomps
cmp
test
test
cmp
xchg
mov
add
cmp
xchg
aas
xor
xchg
sti
cltd
push
das
shrl
out
push
or
and
xor
test
cmc
stos
cmp
cmpb
add
push
in
xchg
or
inc
inc
popa
cld
lds
lret
dec
mov
rcll
stos
xchg
mov
imul
mov
xor
cmc
data16
stos
mov
mov
sbb
stc
les
xchg
jo
xchg
repnz
les
fldcw
es
aaa
mov
mov
mov
data16
aaa
movsb
rclb
pusha
rorl
mov
loope
mov
pop
mov
xchg
pop
mov
xor
int
or
dec
push
loope
repnz
and
xchg
pop
inc
ret
mov
pop
ffreep
xchg
sbb
push
jb
inc
jecxz
or
mov
jno
cmp
ret
jb
fxam
icebp
xchg
test
cmp
ja
xchg
js
mov
or
pop
ss
lret
jae
int
fmul
sub
imul
stc
sbb
aam
repnz
mov
int
cltd
add
in
sub
aaa
pop
push
cltd
mov
xchg
xor
jo
sub
inc
mov
clc
and
jmp
push
mulb
test
xchg
jl
and
shrb
mov
outsb
rcrb
cwtl
das
cmpsl
mov
xchg
mov
mov
add
jle
adc
and
inc
mov
jmp
popf
lcall
push
jno
mov
nop
movsl
mov
jecxz
push
adc
mov
enter
xchg
out
mov
cltd
jecxz
pop
fs
jns
das
adc
add
inc
iret
lret
mov
mov
cmovae
mov
sbb
mov
insl
mov
ss
adc
adcl
ds
fsubp
adc
cmp
mov
out
lret
dec
add
sbb
rclb
sbb
loopne
push
mov
popl
inc
dec
stos
test
or
inc
es
xchg
pusha
loope
inc
dec
push
adc
cmp
iret
jns
adc
cmp
push
mov
out
sub
dec
scas
popa
add
loope
fwait
mov
bound
fists
out
dec
mov
in
dec
and
fidivrl
sbbb
dec
sbb
repnz
shll
bound
testb
test
addr16
repz
cmp
jp
pop
xchg
cmpsl
test
xchg
sub
incl
mov
insb
xchg
fadd
ret
mov
rcll
addl
icebp
xchg
push
mov
jne
xor
add
fmull
cmpsl
and
adc
sub
loopne
stos
and
nop
push
lret
jmp
push
in
enter
imul
out
xor
test
pop
mov
cmp
mov
mov
sarl
lahf
outsl
adc
rclb
lcall
mov
push
sbbb
bound
fwait
aam
adc
jnp
fstpl
push
scas
jl
jns
decb
test
gs
sarb
es
xor
cltd
lds
sub
gs
pop
xlat
add
lock
popf
movsb
rorl
xchg
es
stos
push
adc
sub
adc
stos
dec
mov
jne
sub
xor
push
test
dec
aad
insl
sti
rol
inc
lock
mov
and
shll
mov
es
jmp
mov
inc
orl
dec
mov
jmp
jmp
add
int
jg
aad
add
push
js
mov
mov
je
in
jge
aam
std
push
push
daa
sub
popa
call
sub
test
lock
cmpsl
mov
icebp
aam
cmp
inc
mov
jae
inc
es
mov
cli
sbb
xchg
lds
jp
dec
inc
shll
push
std
lcall
subl
test
mov
inc
mov
dec
test
jmp
pop
lea
cmp
jb
mov
mov
addr16
mov
test
arpl
push
xor
cli
cltd
jl
jo
mov
xchg
jo
frstor
cwtl
xchg
bound
mov
sub
repz
sub
add
movsb
xlat
popf
cmp
and
sub
adc
popf
cmp
mov
pushf
insl
or
js
rol
jb
aad
mov
jg
scas
std
insl
xchg
je
or
ss
mov
jmp
cld
nop
mov
fisubs
inc
xor
jecxz
pop
dec
pop
sbb
cmp
scas
mov
mov
lcall
leave
push
fsub
hlt
fiadds
stos
jmp
sub
cmpsl
push
ljmp
rcr
push
mov
dec
inc
lcall
das
out
xchg
push
jle
xchg
add
cmpsb
lods
jo
sti
mov
push
ds
xor
das
mov
or
insb
sti
cmp
lods
cmp
xor
inc
and
xlat
int3
aaa
cmp
mov
sahf
mov
das
pop
loopne
and
and
mov
enter
and
rclb
dec
or
rorb
and
xchg
push
xchg
xchg
lock
sub
jmp
cmp
jbe
mov
repz
sarb
outsl
mov
aam
jo
sahf
pop
jne
mull
add
loop
adc
decl
xchg
cmc
ret
fistpll
xchg
les
out
xchg
rcrb
jbe
add
fdivrp
or
jo
sbb
jnp
insl
xor
or
movsb
or
enter
es
sub
inc
adc
adc
or
aas
mov
add
stos
daa
outsl
sti
dec
sbb
pop
ret
inc
ljmp
fadd
inc
adc
jle
icebp
int3
jle
stos
icebp
xchg
fwait
lock
cmc
fisubrl
fists
jmp
sbb
das
adcb
sbb
mov
pslld
dec
lds
inc
dec
rorl
sub
sti
in
mov
pop
imulb
jnp
cmp
fsubrl
in
xor
cmp
cwtl
imul
sbb
test
adc
arpl
xor
jnp
push
out
popa
stos
clc
jp
dec
test
jb
xchg
in
mov
sub
and
movsl
cltd
push
movsb
aas
sbb
pop
mov
mov
in
not
out
insb
mov
xchg
pop
call
and
icebp
cmp
mov
xor
mov
stc
push
jecxz
sbbl
fcomps
mov
cs
push
inc
ljmp
outsl
jae
sbb
std
push
in
stos
sbb
add
fcoms
xchg
dec
dec
jle
ljmp
les
mov
inc
notb
sub
adc
daa
shl
cmc
out
shll
mov
add
fsubs
std
or
xchg
mov
in
mov
jae
fisttpl
xchg
mov
mov
loope
pop
sub
pop
int3
bound
sbb
gs
lods
rolb
xor
mov
dec
std
mov
outsl
leave
sub
inc
adc
inc
mov
xor
mov
pop
mov
shlb
fistpl
lret
sbb
push
and
push
or
mov
imul
xchg
fwait
mov
push
and
mov
ret
in
sub
xchg
xor
jg
sbb
sbb
cmp
in
xor
icebp
test
outsl
pop
cli
inc
xor
jbe
aaa
aas
repnz
jbe
das
testb
jle
mov
lds
push
adc
or
pop
imull
out
or
jl
ss
inc
repz
xor
push
jp
les
xchg
push
xor
incl
stos
pop
add
popa
sub
sub
mov
cwtl
cmc
bound
mov
push
sub
pop
test
xchg
mov
mov
pusha
mov
pop
test
cmp
or
pop
insl
test
and
xchg
mov
aad
adc
fst
shll
lahf
movsb
xor
inc
adc
in
push
paddsw
dec
aad
xchg
adcb
pusha
loop
aam
mov
jno
dec
cmp
mov
lea
cmpsb
pop
cli
inc
mov
insl
push
rcrb
mov
xor
jns
ja
mov
dec
adc
clc
jg,pn
jle
std
pop
xchg
sub
jae
cmp
inc
jb
out
mov
fdiv
sbb
mov
mov
dec
test
mov
sbb
rcrb
outsb
xchg
xor
xchg
sub
jge
fcmovu
push
repnz
pop
test
hlt
add
in
push
lret
addl
loopne
ds
lods
or
inc
lret
cli
xcrypt-cbc
cmpsl
xchg
rcr
repz
xor
roll
stos
std
push
pop
lcall
sub
sysret
scas
mov
icebp
or
sub
add
push
test
mov
mov
mov
ret
dec
cmp
mov
rorl
lret
add
aaa
and
xlat
orl
fs
xchg
out
loopne
aaa
orb
scas
xchg
dec
xchg
aaa
rolb
xchg
fistpll
pop
popf
jae
sub
psubq
popaw
xor
lret
dec
dec
mov
cmp
roll
pop
jo
outsl
dec
push
ja
mov
push
adc
sahf
cmp
test
add
sub
hlt
enter
jae
movsl
pop
sbb
push
scas
inc
out
pop
xor
jno
sub
pop
fldcw
jno
mov
cmp
lock
imul
int3
mov
inc
and
add
push
add
pop
jge
mov
adc
lret
fisubs
and
jbe
adc
push
or
jg
js
test
sub
icebp
mov
imul
loopne
push
mov
insb
lcall
insl
mov
sub
or
lret
sti
mov
mov
xor
sub
or
mov
int3
push
clc
sbb
std
xchg
pop
add
fwait
movzbl
xchg
mov
mov
sbb
test
pop
inc
cmc
and
add
in
push
insb
xor
lcall
outsl
push
mov
in
xchg
adc
mov
inc
mov
sbbb
ja
dec
and
add
cmp
xchg
push
popf
clc
test
push
jmp
xlat
xchg
lret
adc
lret
rolb
cmp
and
xorl
jp
xchg
push
mov
jg
int
popa
jmp
arpl
or
jl
lcall
lcall
ljmp
mov
inc
mov
dec
mov
pushf
sub
pushf
jecxz
xchg
lahf
push
mov
aam
clc
aad
sbb
dec
fadds
fildll
cmp
out
insl
cmp
sbbl
ljmp
jmp
push
push
imul
pop
in
in
add
mov
mov
push
cmp
fsubl
sub
je
sub
inc
cmp
xor
jl
sub
in
aad
sbb
pushf
rorl
sahf
push
stos
mov
stos
pop
test
sub
jle
test
mov
push
lahf
hlt
push
xchg
cltd
add
cmp
stos
xor
aam
arpl
ljmp
fcmovb
clc
adc
xor
sbb
jnp
fyl2xp1
aas
mov
in
test
scas
pop
or
insb
adc
cli
or
roll
mov
clc
mov
push
cli
pop
push
mov
xor
hlt
call
mov
in
mov
push
push
sti
xchg
pop
sarb
ficoms
push
dec
jnp
dec
adc
aaa
cld
push
adc
add
push
stos
xor
mov
pop
push
inc
pxor
ret
xchg
xor
sti
mov
loope
ja
sub
xor
dec
les
and
inc
add
mov
dec
jo
mov
jb
xor
out
loope
push
mov
sbb
loope
data16
pop
push
sub
xor
std
or
pop
into
dec
and
dec
inc
mov
mov
ret
dec
idiv
into
nop
pop
cmp
sahf
jp
mov
cwtl
push
sbb
mov
inc
lret
mov
sbb
shlb
outsl
in
sub
or
out
daa
xchg
scas
aas
cmpsl
xor
in
js
iret
pop
xchg
outsb
addl
mov
push
nop
sub
ret
lret
stos
int3
std
lcall
mov
adc
jae
andb
fsubp
and
sub
adc
mov
jns
addl
dec
adc
jle
and
pusha
std
add
jecxz
pop
dec
lcall
sbb
cli
push
loope
lahf
xchg
cmp
rolb
inc
mov
sbb
cmc
rorl
mov
xchg
sarb
test
sti
rclb
jp
rol
in
xlat
adc
cmpsb
push
mov
mov
xor
fisubrl
lods
push
and
inc
cmpsb
movsb
call
ret
scas
aad
mov
js
fidivs
jmp
jg
xor
scas
push
xor
sbb
repz
arpl
mov
cli
or
fisttps
add
jl
cli
lods
pop
in
cmc
das
mov
ret
xor
mov
and
js
push
jl
mov
stos
iret
cwtl
pop
mov
cmp
cmp
sub
mov
pop
push
ja
fwait
pusha
jmp
notl
mov
rcll
xor
adc
arpl
xchg
jns
jno
jmp
shlb
test
cwtl
xor
fnsave
sbb
push
sahf
scas
dec
sbb
inc
insb
nop
mov
fnstenv
jno
adc
lock
mov
mov
fwait
in
sub
add
adc
pop
shlb
cmp
ret
divb
push
into
loopne
loop
in
stos
xor
outsl
sbb
push
dec
mov
fistps
leave
fucomip
ficomps
jmp
or
lock
push
sbb
mov
mov
push
stos
jns
aas
dec
imul
xchg
jne
jmp
push
pop
rorb
xor
lcall
jb
cmp
jo
ss
mov
xor
mov
mov
ret
add
das
js
push
out
adc
and
int3
movsb
xchg
aas
pushf
pop
sub
sbb
into
xor
mov
popf
mov
adc
mov
test
mov
push
pushf
outsl
dec
mov
push
dec
dec
xchg
inc
or
ret
mov
cs
push
push
cld
icebp
clc
and
push
pushf
push
push
and
or
jmp
dec
ljmp
mov
shrl
lods
mov
mov
or
push
mov
pop
inc
mov
sbb
ljmp
pushf
mov
cmpsb
adc
mov
loop
inc
shr
imulb
push
loop
not
in
sbb
push
and
xchg
sub
jl
xchg
cmpsb
bound
xchg
lret
xchg
cmpb
in
xor
sub
rolb
dec
jp
nop
addr16
push
sbb
sarl
fldcw
das
leave
dec
ret
loope
mov
icebp
in
or
lods
scas
xchg
scas
inc
icebp
or
pop
aad
mov
xor
ss
loopne
rcrl
dec
and
push
sbb
inc
push
les
jge
jl
mov
or
aas
daa
dec
sbb
cmp
movsb
das
idivl
cltd
add
in
or
push
mov
mov
and
dec
push
imul
sbbb
xchg
pop
or
dec
lods
mov
div
adc
sahf
ret
ja
push
xchg
movsl
movb
movsb
add
mov
lods
mov
adc
stos
add
xchg
enter
jne
mov
popa
mov
fs
ret
or
or
dec
push
adc
dec
stc
mov
jns
bound
sbb
stos
mov
cmpsl
cmpsl
mov
pop
icebp
mov
aaa
and
cmp
and
or
add
xor
dec
or
aad
push
sub
push
les
and
dec
fldenv
sub
lea
push
pusha
adc
cmp
ret
rcll
icebp
nop
into
jge
lret
xor
jl
outsl
popf
cs
clc
in
mov
jae
adc
sbb
adc
int3
cltd
repz
cmpsb
dec
mov
jnp
mov
mov
in
sub
cmc
cli
scas
add
pminsw
xor
mov
imul
jae
cmp
lret
cmc
out
rorl
test
mov
jb
lock
ffreep
sbb
mov
pop
fistpll
adc
jb
inc
jg
jno
cmp
mov
inc
outsl
mov
jle
sub
std
cmp
mov
mulb
jmp
in
stos
push
lahf
stos
fs
jo
notl
fdivs
aam
idivb
into
adc
inc
pop
in
mov
shll
jo
repnz
ja
add
xor
mov
test
int
xor
sbb
sbb
subb
xchg
aaa
cmp
xchg
sbb
cmpsb
xor
mov
or
sbb
xchg
cmp
pop
dec
fbstp
or
mov
dec
xor
les
cmp
enter
lcall
es
out
jbe
xorl
adc
jl
lock
out
sub
scas
pop
jp
inc
test
adc
push
xchg
fildll
inc
mov
inc
add
lds
fmuls
adc
ja
xchg
mov
bnd
je
stos
lret
loope
aam
dec
jnp
or
mov
push
je
out
pop
xor
jmp
adc
jle
iret
aaa
or
imul
ljmpw
imul
idiv
sub
jmp
sub
cmpsb
cmp
pop
rcrl
inc
or
repz
sbb
inc
jecxz
popa
jmp
dec
or
std
divb
sar
popl
ss
mov
push
jmp
lods
repnz
push
popf
lret
sbb
cmpsl
inc
stos
cld
aam
mov
leave
add
outsl
sbb
mov
push
pop
xor
out
sbb
popa
mov
dec
jae
and
orl
lcall
pop
popa
jno
dec
sbb
add
subb
les
mulb
repz
and
cli
lock
pop
and
inc
sbb
testb
mov
cld
cli
ror
cmp
pop
fimuls
fimuls
jne
jl
data16
clc
mov
dec
mov
mov
fbstp
dec
pop
mov
mov
popa
xchg
pop
pop
mov
test
sbb
adc
mov
je
aaa
push
ret
add
cmpsl
pop
cmp
sub
sub
sub
das
or
mov
cmp
xlat
outsl
lahf
fsubr
fisttpll
mov
sub
and
mov
adc
stc
jge
rorl
mov
iret
jnp
pushf
aas
shlb
sub
add
xor
dec
and
sbb
mull
push
incl
xchg
jmp
shll
sarb
dec
add
mov
dec
xor
mov
cmpsb
xchg
jge
cmp
icebp
call
push
incl
or
or
aad
inc
and
sub
sub
imul
cmc
nop
rcll
push
sub
loopne
dec
lret
fstps
hlt
rcl
rcl
fmuls
mov
xchg
push
inc
jns
jge
insb
push
and
cld
lock
in
nop
push
push
popa
movsl
and
fstl
mov
out
or
sbb
outsb
pushf
pop
insb
push
sub
jno
pop
mov
lods
cmc
icebp
into
xorl
popf
cmp
insl
adc
xorb
rorl
outsl
sub
test
repnz
add
adc
sahf
mov
lret
sub
and
mov
sub
subb
aad
aam
mov
popa
sub
sub
outsb
cmp
xchg
sahf
mov
imul
add
movsb
outsl
mov
push
in
xor
mov
cmp
xor
xlat
or
fmuls
and
cmpsb
out
mov
rcll
iret
pop
lret
lock
and
or
fdivrs
add
aaa
test
test
lock
test
popf
xchg
fcmovne
inc
fimuls
or
lods
lods
xor
mov
mov
and
into
cmpb
mov
xor
mov
push
out
sbb
sbb
lock
and
popf
stos
dec
hlt
lea
xchg
into
and
jns
xchg
mov
xchg
mov
imul
inc
es
xchg
or
loope
xorl
out
pop
stos
out
fists
in
repz
lret
stos
jle
loop
push
addr16
or
push
mov
mov
sub
or
cltd
loop
jl
adc
imull
inc
pop
lods
sub
mov
popa
cmp
sub
fldenv
inc
stos
outsl
push
sar
mov
ljmp
cltd
insb
xchg
sub
lods
stos
iret
cmp
jl
cmp
xor
fisttps
sarl
daa
cmpl
inc
mov
push
sub
cmpsl
int3
pushf
push
jne
jecxz
pusha
outsl
xor
sti
and
xchg
push
cld
insl
sbb
daa
jne
jge
cmp
ds
pop
pop
popf
stos
jl
loope
mov
inc
fcompl
rcr
sahf
add
dec
ds
mov
daa
mov
lods
ror
inc
pop
mov
loopne
ljmp
push
sbb
or
imull
lahf
push
mov
in
push
xlat
adc
and
addr16
in
sbb
adc
nop
lods
filds
jnp
stc
push
adc
es
cmp
test
mov
add
adc
lret
push
jge
inc
adc
pop
add
aad
dec
add
in
cmpsb
mov
fldl
inc
std
mov
cld
js
fsubrl
mov
sahf
rcrb
test
pushf
inc
les
mov
dec
pop
sti
mov
adc
or
aaa
iretw
dec
lock
adc
mov
lcall
sbb
adc
add
je
adc
arpl
test
pop
pop
mov
add
outsl
adc
clc
jle
mov
pop
push
mov
lods
roll
imul
pop
dec
jne
popa
sbb
lret
inc
pop
mov
popa
mov
sbbl
scas
mov
inc
push
jno
xorb
loop
cli
and
out
jmp
cmp
push
mov
or
push
mov
jge
cmc
and
cmc
cwtl
xorb
sarb
rcrb
or
sub
in
out
xor
jb
xor
push
or
xchg
push
mov
incb
mov
inc
andb
popf
mov
add
inc
adc
push
sub
lods
xlat
arpl
or
pop
add
sbb
mov
mov
jbe
rcrl
jnp
sbb
add
jbe
xchg
fmul
dec
lcall
or
jecxz
pop
int
insl
push
adc
push
xchg
lods
push
push
in
shll
mov
add
dec
xlat
shrb
cmp
mov
lea
aaa
lods
pop
adc
out
and
std
gs
or
data16
xchg
add
or
mov
cwtl
lea
push
std
ljmp
fsubrl
and
xchg
add
sahf
loopne
cmp
lock
xchg
add
dec
cwtl
xchg
jecxz
xchg
pop
xor
cli
lds
cld
dec
or
popa
outsl
leave
mov
pusha
pushf
aam
les
pushf
adcb
push
es
out
cmp
mov
popa
mov
lahf
pop
or
sbb
and
cs
sbb
push
mov
push
mov
mov
mov
mov
inc
xchg
mov
scas
adc
mov
stc
pop
xchg
movl
inc
or
xchg
lret
cmp
inc
mov
and
sahf
mov
pop
xchg
cmp
aam
aas
sbb
lahf
popf
jno,pt
sub
push
int3
imul
sbb
aad
jmp
push
xchg
daa
out
fiadds
aas
adc
and
dec
cli
inc
mov
fldt
popf
bound
xor
fidivrl
mov
push
outsl
jae
pop
mov
sub
int
inc
data16
xlat
es
inc
mov
xor
mov
sbb
sbb
testb
mov
out
into
mov
xchg
pop
rclb
adc
leave
mov
imul
sub
mov
sbb
jno
je
int3
clc
jo
inc
sbb
vxorpd
dec
popa
push
xchg
inc
gs
fidivrs
and
test
push
lds
push
aaa
mov
fiaddl
mov
sub
add
mov
cld
add
or
movsb
ss
imul
stc
les
daa
add
inc
sbb
ffree
shr
stc
inc
out
out
jae
lcall
mov
repz
sahf
test
pop
mov
mov
lret
loop
in
push
xchg
aaa
mov
pop
xor
cmp
push
sbb
push
je
test
jp
mov
sub
cli
add
jnp
sub
pusha
jg
fildll
std
fstps
or
adc
dec
jns
mov
and
or
mov
movsl
sub
push
mov
nop
testl
es
jno
mov
cmp
ret
xchg
pusha
inc
decb
inc
add
push
jl
jno
cmpsl
mov
aaa
ljmp
lods
pushf
imul
xor
sbb
xor
xchg
mov
movsb
scas
add
push
pop
in
test
imul
loope
repz
shrb
clc
or
cld
call
xlat
int3
ror
cli
stos
add
mov
mov
jg
push
jl
ficompl
add
hlt
dec
cmp
ljmp
sarl
aas
scas
in
and
bnd
xchg
aad
ljmp
in
jle
xchg
dec
lret
xchg
inc
inc
jmp
ret
punpckhdq
mov
fnstenv
sti
arpl
insl
inc
and
sbb
sti
xor
jp
pop
pop
popf
xlat
mov
adc
mov
stos
test
xlat
mov
movsb
and
ds
dec
fmull
mov
loopne
dec
addr16
xor
fbstp
push
inc
jp
iret
xchg
lret
pop
mul
mov
mov
dec
pushf
inc
pop
in
lcall
sahf
push
enter
sti
cmp
arpl
sbb
shlb
test
push
pop
and
add
inc
mov
mov
pop
stc
or
cmpsl
or
xchg
cmpsl
jge
out
stc
and
pop
addl
add
or
inc
xor
enter
push
insb
push
lahf
xchg
rclb
divb
mov
cmpl
iret
data16
xorl
inc
mov
push
sub
out
mov
cs
outsl
pop
pop
dec
ljmp
jno
in
adc
movsl
lcall
cmp
mov
loop
je
mov
adc
enter
lds
filds
pop
int3
and
xchg
incl
adc
push
inc
repz
das
test
iret
rcrl
push
das
sub
dec
fs
inc
into
lods
dec
pop
notl
pop
stc
add
pop
cmpsl
jle
sarl
jo
pushf
mov
sub
cmpl
mov
stos
cli
mov
dec
xchg
jnp
bound
mov
xchg
mov
dec
into
cmp
and
movsl
bnd
jnp
call
movsb
fstpl
adc
cmpb
js
or
pop
arpl
iret
outsb
adc
enter
insl
lds
mov
xorb
dec
aaa
clc
stos
mov
dec
in
mov
add
dec
fildll
sub
fwait
xor
push
cmc
scas
jno
idivl
push
ljmp
cld
insl
into
add
imul
push
xor
fadd
jp
add
mov
cltd
call
or
pop
add
push
cmp
jecxz
push
in
mov
setp
fstpt
mov
add
mov
adc
sbb
hlt
ss
repz
jge
jle
sbb
xchg
ret
ret
pop
je
pushf
out
cmc
inc
add
das
mov
xchg
dec
cmc
pop
ja
push
cmp
mov
out
add
leave
popa
cmpl
leave
loop
cmpl
add
pushf
pop
pop
in
mov
jl
ret
xchg
loopne
xchg
push
push
lret
dec
scas
dec
cmc
stos
mov
inc
jbe
or
shl
stc
les
pop
stc
aaa
ffreep
pop
ret
jne
test
fists
add
lods
push
mov
cmp
and
movsl
ret
cmp
push
sub
xchg
mov
mov
inc
or
ljmp
dec
insl
cmc
xchg
inc
xor
dec
fcmovbe
pop
push
or
icebp
push
cmpsb
lock
int3
ja
into
and
popf
lods
div
out
mov
cwtl
mov
mov
inc
rorb
xchg
xor
cld
sub
xlat
fdivl
je
scas
arpl
cs
mov
cmpsb
dec
nop
and
popf
pop
cltd
push
push
dec
and
in
mov
xor
daa
sahf
mov
lret
test
ds
lret
push
or
mov
xchg
sti
stos
jecxz
out
call
ret
sbb
cmp
aam
std
addr16
sbb
sar
stos
sub
push
out
stos
xchg
sahf
lods
lret
sbb
xchg
pop
aaa
mov
add
clc
jl
orl
aaa
ret
loop
aad
push
or
jbe
jbe
jns
insl
imul
movsl
cs
enter
mov
adc
sbb
pop
icebp
and
sbb
lock
iret
enter
mov
ror
jno
pop
jmp
cmc
cmp
and
cmp
mov
pop
iret
fwait
inc
pop
fimuls
les
leave
fisttps
fcmovu
push
repz
rol
js
dec
mov
test
lcall
xor
rcr
into
jbe
lahf
cmpsb
outsl
out
fwait
movsb
cmc
pusha
and
lods
pop
inc
cmpb
mov
adc
in
mov
orb
cmp
mov
rcrl
lods
loop
jg
adc
sahf
popa
popf
imul
inc
repnz
cmc
mov
leave
jbe
dec
sub
in
fistpll
je
sub
out
push
jno
mov
pop
mov
sbbl
shll
cmp
add
les
sub
push
sub
sbb
inc
daa
daa
outsl
mov
mov
jle
lret
push
sbb
arpl
xor
incl
add
mov
inc
outsb
cmpsb
and
pop
lret
ret
mov
inc
mov
xchg
ds
fists
test
insl
pop
inc
push
mov
push
pop
scas
test
lahf
lcall
shlb
fistl
int3
push
call
add
inc
fimull
imul
out
into
jae
push
out
xlat
and
lret
mov
jmp
test
push
mov
fstpt
clc
mov
mov
sbb
data16
inc
outsl
lods
cwtl
mov
sub
cmp
adc
cmc
bnd
and
add
add
loopne
das
pop
jmp
or
clc
jns
fistl
in
repnz
cld
test
adc
outsl
test
aaa
push
sub
cltd
test
frstor
jae
push
jnp
subl
into
xchg
mulps
stos
add
inc
xlat
cmpsb
cmp
cmpsl
dec
insl
mov
mov
nop
mov
mov
inc
mov
gs
cmpsl
lea
shl
js
mov
push
enter
gs
xor
gs
xchg
psubq
push
jo
mov
dec
pop
xchg
mov
or
pop
rcll
and
lods
test
xchg
scas
les
inc
xchg
dec
fcoml
xor
xor
pop
pop
inc
cld
sub
ret
pop
add
push
cs
bound
es
mov
sub
shll
jl
jecxz
je
addr16
into
adc
dec
out
sbb
insl
int3
xchg
lods
push
xchg
jns
mov
dec
adc
leave
ret
mov
mov
add
nop
dec
ja
add
sub
fcomps
jae
add
in
mov
cmpsl
push
lock
inc
cmc
in
shl
rclb
popf
push
mov
orl
imulb
inc
mov
ljmp
aad
inc
jg
dec
rolb
scas
xor
and
xor
ret
mov
mov
addr16
clc
cmpsb
cmp
xor
insb
mov
out
cmpsb
mov
loope
mov
cmp
repz
fsts
aaa
pop
push
out
jl
std
push
negl
data16
pop
adc
movsl
push
adc
dec
cmp
shlb
fdecstp
jae
sbbb
sub
xchg
mov
clc
lods
dec
mov
xor
add
push
in
out
sahf
add
int
xor
loopne
mov
aaa
sub
push
into
dec
divb
lods
pushf
mov
cmpb
lret
inc
jle
cmpsl
pusha
mov
push
mov
insb
enter
adc
mov
push
stos
mov
icebp
xchg
arpl
ss
add
and
lock
aas
and
xchg
push
and
cltd
pop
xchg
mov
xor
int3
movsbl
in
mov
stc
fdivs
out
mov
adc
mov
add
test
fsubrl
out
mov
xor
xor
mov
test
andl
cmpl
out
clc
xchg
push
lock
or
dec
push
mov
mov
jbe
int
out
lcall
in
mov
xor
notb
shrl
inc
mov
aad
fnstenv
cmpl
mov
adc
clc
aaa
pop
loop
mov
cltd
es
pop
xchg
mov
imul
addl
dec
js
int
insb
xchg
or
cmp
sub
xchg
jp
sarb
mov
lcall
pop
ret
cmp
cmp
nop
out
pop
or
xchg
das
add
pop
xchg
dec
sub
movsb
xchg
mov
shlb
mov
and
push
pop
pushf
cmp
sbb
std
cmp
jb
cmp
push
or
clc
jp
dec
mov
mov
je
cwtl
xor
cld
ficoml
mov
push
das
xor
sbb
and
cmpsb
add
cli
fidivs
fidivrl
xchg
fs
insl
mov
xchg
pop
cmpsb
or
mov
dec
loope
iret
nopl
cld
lds
stos
xchg
bound
dec
mov
in
mov
jns
dec
jne
js
or
mov
xlat
jmp
call
xor
out
mov
sbbl
mov
xchg
dec
mov
sub
divb
push
in
rolb
lods
leave
sub
push
ret
dec
inc
mov
ret
es
lret
popa
cmc
mov
in
cmp
jle
dec
jmp
pop
mov
jno
cld
jo
out
mov
ds
enter
xor
inc
mov
cmp
bound
lds
push
mov
repnz
imul
or
sub
mov
jb
push
mov
mov
test
cltd
push
in
mov
loop
push
js
scas
push
mov
rcll
sub
push
mov
rolb
data16
test
xchg
sahf
push
sub
sbb
or
jns
aad
adc
adc
sub
stos
jo
loopne
xor
jg
xor
or
arpl
scas
dec
lret
clc
xor
fstpt
sti
fbld
or
out
add
mov
or
lea
dec
mov
xchg
xchg
shlb
js
rorl
test
lods
mov
push
or
jnp
and
push
dec
dec
test
dec
out
xchg
mov
push
add
testb
test
stos
fwait
scas
ds
xor
in
int3
or
imul
dec
jns
jge
add
push
inc
dec
add
cmp
sti
out
mov
mov
push
sbb
dec
cmp
mov
sti
cmp
cmp
and
movsb
icebp
push
push
out
mov
or
movsl
addr16
iret
sub
sarl
xlat
adc
and
lcall
mov
test
adc
test
fwait
in
jle
ss
loope
jo
mov
sub
push
mov
scas
outsb
push
bound
add
shlb
sbb
jmp
sub
xor
xchg
inc
sarb
ds
push
loopne
aaa
xchg
lret
mov
call
in
adc
sub
mov
and
adc
ds
pop
sbb
fisubrl
mov
pop
xor
roll
in
es
pushf
insl
xor
dec
inc
sub
in
and
inc
mov
scas
out
cmc
dec
xchg
out
xchg
xor
loop
and
ss
xchg
ret
sahf
out
pop
lcall
inc
cmp
jns
roll
adc
ljmp
xor
and
stos
add
fmul
test
add
fcompl
and
cmpsl
hlt
or
jmp
and
lock
mov
cmp
ja
fdivrl
scas
xchg
jp
or
ds
xchg
outsl
cmp
lret
into
shrb
cli
mov
jae
loope
rcrl
fwait
adc
enter
push
sbb
into
fcoms
stos
mov
xchg
mov
js
cmc
inc
add
cmp
pop
and
push
adc
mov
pop
daa
add
jle
imul
push
sub
sub
ja
adc
xor
clc
mov
cs
cmp
xchg
or
push
out
addr16
jae
mov
popa
inc
and
or
fstpt
xchg
cmp
decl
pushf
daa
xchg
sbb
pop
decl
sbb
hlt
cwtl
lret
mov
add
or
imul
lret
lret
or
cmp
in
sub
xlat
cmp
adc
ret
xchg
mov
jg
popa
jns
fisubrl
cmp
sub
aas
popf
mov
add
sbb
cmp
insb
jne,pt
and
iret
out
cmp
shrb
jbe
pop
scas
mov
out
das
ss
fwait
leave
mov
mov
fstpl
or
xor
mov
jge
push
jle
fidivrl
xor
or
adc
movsb
in
out
add
pushf
xor
cmp
shrb
and
jb
repz
dec
movsl
shll
lods
inc
pop
test
push
shlb
std
loopne
cmpsl
imul
mov
inc
mov
dec
xlat
aam
xchg
es
ljmp
xor
mov
xchg
xchg
decb
mov
pop
push
sub
movl
stos
push
push
xor
or
lret
ret
and
push
dec
xlat
into
imul
xor
add
lret
mov
mov
sbb
sbbb
pusha
dec
lahf
addb
mov
mov
sub
cmp
int3
jb
stos
cltd
dec
or
popa
movq
popf
and
jno
inc
rorb
jmp
mov
pop
adc
bound
mov
fcomps
test
and
insb
mov
imul
movsb
or
jns
gs
dec
scas
and
xchg
xor
out
mov
push
jle
xchg
sbbb
inc
dec
lds
mov
add
cld
popf
xchg
fiadds
push
add
or
ret
gs
cli
negl
push
push
mov
ds
jae
mov
add
xor
and
leave
xor
mov
cs
sarb
lret
clc
mov
loop
xchg
jne
lret
jno
jl
jmp
loope
insl
jns
mov
and
mov
outsb
cmpsl
sub
clc
push
pop
gs
fbstp
xchg
nop
inc
pusha
iret
xor
cmpsl
aaa
cmp
lea
inc
cmp
scas
mov
out
sbb
push
mov
cmpsb
test
and
shl
push
pop
lcall
scas
loope
lcall
enter
fcompl
cwtl
mov
ret
push
sub
cltd
push
pop
push
js
jg
pop
scas
out
and
sbb
xchg
leave
inc
ret
sub
ljmp
mov
push
add
shl
jo
popf
add
cwtl
adc
insl
mov
mov
insb
fsubs
xor
fs
sbb
mov
sti
test
cmp
sub
jns
aaa
insl
or
jae
mov
jp
in
dec
fcomps
sahf
test
push
or
xor
xor
movsb
adc
shll
stos
fcoml
out
cmp
imul
jge
mov
adc
jo
iret
adc
pushf
push
or
mov
pusha
lea
js
push
ret
stos
add
xchg
add
imul
cli
sti
cmp
insb
popf
sbbb
dec
cmp
cwtl
mov
lcall
rorl
insl
shl
pop
les
mov
cmp
cmp
mov
push
mov
and
push
xor
dec
loopne
addr16
mov
out
adc
add
jb
sbb
fists
pop
or
xchg
out
ret
icebp
jg
sbb
jl
jno
lds
int
dec
sbbl
push
and
subl
lret
andb
fs
sbb
xor
add
xlat
scas
pusha
push
fdivrl
mov
mov
clc
loope
sbbb
pop
shrb
mov
push
xor
lahf
mov
cmp
xchg
jnp
dec
dec
sbb
mov
hlt
bound
sub
mov
shrl
movzbl
shrb
pop
jbe
ja
jne
sahf
mov
test
mov
add
ljmp
cltd
cli
mov
test
scas
jo
mov
jne
pop
pop
and
sahf
lods
mov
int3
dec
in
push
adc
pop
jae
xchg
int3
jbe
inc
jle
fsubrs
cli
or
rorb
and
mov
in
aad
mov
sub
sub
mov
dec
pop
mov
js
cmp
xchg
jnp
imul
scas
leave
add
jae
pop
dec
inc
adc
or
cltd
scas
cmp
push
push
xor
mov
pop
rcrl
push
xchg
sbb
arpl
fstl
movsb
in
repz
dec
pop
fmuls
adc
scas
pop
mov
xor
insl
scas
mov
dec
jmp
cmp
pop
stos
mov
cli
sti
or
xor
rol
pushf
jb
push
adc
imulb
int3
xor
pop
scas
or
clc
cwtl
stos
mov
xor
adc
jo
jae
mov
inc
and
mov
mov
xor
dec
iret
into
fcomi
dec
das
out
js
cmpsl
scas
adc
sbb
jge
pmuludq
adc
rolb
push
mov
xor
sbb
imul
loop
divl
pop
out
pop
cmpsl
push
sub
sub
sarl
je
call
rol
insl
pop
inc
mov
adc
movsl
lcall
inc
add
clc
sub
aaa
sbb
sbb
dec
or
dec
cmp
shll
jp
hlt
mov
test
sarl
in
ss
jo
dec
cwtl
adc
add
pop
inc
cmp
imul
mov
aam
pusha
xchg
mov
inc
insb
dec
cmp
sahf
xchg
stos
shrl
and
pop
mov
bound
ret
dec
in
mov
cmp
mov
dec
push
out
xchg
aaa
std
push
adc
pushf
xor
loopne
sbb
xor
xchg
pop
adc
icebp
mov
add
fwait
shlb
into
pop
sbbb
jae
pop
je
cs
cltd
adc
add
cs
out
gs
xchg
xchg
jg
cwtl
ljmp
cmp
xor
lahf
lea
aaa
repnz
subl
mov
out
test
cld
xor
scas
ficompl
adc
mov
stos
sbb
add
xor
popa
outsb
inc
loopne
xchg
or
pusha
pop
hlt
jl
or
outsb
mov
jb
push
mov
sti
movsl
sbb
inc
jl
jnp
cld
xlat
ss
lret
push
pop
leave
lock
movsb
dec
mov
mov
dec
int
fwait
cli
dec
jp
mov
mov
and
and
xchg
pop
push
fcompl
mov
xor
add
outsl
inc
mov
dec
inc
rcr
push
mov
shl
add
sbb
or
sbb
call
imul
xchg
jecxz
test
imul
xchg
jmp
dec
and
mov
mov
jns
mov
push
pop
js
sbb
xchg
sbb
adc
enter
bound
jle
fs
cmp
icebp
stos
adc
scas
push
fs
ds
enter
les
shlb
sbb
out
inc
dec
xchg
ljmp
fwait
mov
es
stos
fwait
push
mov
mov
push
mov
mov
xchg
ret
inc
push
aam
aad
xchg
sbb
andb
repnz
dec
mov
and
xchg
arpl
std
adc
and
test
sti
stos
mov
lock
mov
inc
lods
dec
xor
inc
aad
data16
mov
lea
in
outsl
adc
pop
imul
push
movsl
dec
jg
addr16
or
fwait
in
sarl
xor
test
js
jge
mov
rorb
push
mov
jge
mov
pushf
lea
mov
mov
cmp
lea
mov
sub
jge
popf
mov
in
gs
stos
mov
stc
cld
stos
pop
loopne
mov
ds
data16
hlt
fldl
and
scas
js
sub
jo
stc
into
hlt
add
lock
adc
cs
or
xchg
mov
nop
nop
xor
and
mov
into
inc
pop
rorb
pop
or
and
push
push
out
bound
push
xchg
jg
adcb
inc
add
in
adc
pop
xchg
xor
loopne
fcoml
or
loopne
fwait
stc
cmp
dec
sbb
mov
decb
cmpsb
dec
xchg
in
pop
jg
call
cmp
idivl
mov
mov
loop
push
jbe
arpl
jmp
filds
insl
sbb
sahf
shl
pop
mov
jnp
js
bound
mov
and
sbb
xchg
call
sarb
mov
int
jno
pop
sti
lods
loop
mov
push
mov
pop
and
stos
push
cltd
jns
inc
mov
pusha
jb
lds
movb
cmp
shlb
test
jle
cmc
mov
sahf
int3
icebp
xchg
xlat
and
sti
in
fucomip
push
mov
inc
movups
add
aas
xor
daa
fucomip
leave
movsl
cmovs
jp
mov
adc
rorb
dec
dec
fdivrl
lods
add
xchg
loope
lcall
or
jmp
aam
sbb
stos
pop
mov
cmp
stos
dec
enter
jl
lret
cmp
mov
sti
in
data16
pop
inc
int
dec
scas
lock
popa
or
push
jae
mov
jbe
jg
data16
cmc
cs
sbb
or
mov
ss
das
jl
add
sub
outsl
lock
or
insl
mov
and
sub
pop
mov
lods
vprotb
lods
xchg
sub
pushf
stos
dec
dec
xorb
aad
mov
cmpsl
in
dec
mov
shll
sbb
mov
leave
pop
cld
mov
push
hlt
mov
xchg
and
sti
enter
xchg
mov
or
cmp
lret
scas
scas
mov
into
ljmp
sbb
jecxz
jecxz
ss
cs
jmp
call
push
sbb
fstl
stos
mov
loop
stos
mov
sti
add
repnz
enter
fisubl
fstl
or
insl
push
pop
add
out
inc
pop
sub
mov
mov
inc
cmp
stos
loopne
test
movsl
out
popf
lcall
dec
mov
xchg
ret
pop
jl
mov
jb
or
sahf
sub
pop
arpl
arpl
bound
pop
mov
inc
popa
inc
mov
bound
push
ss
and
mov
pop
sub
mov
sbb
or
pop
mov
cmp
xchg
movsl
orb
cmp
sub
cmp
lahf
mov
adc
jle
ret
inc
fstp
or
nop
pop
push
dec
or
sub
cmc
jno
sub
test
push
scas
or
or
lcall
cli
adc
jmp
shlb
movsl
imul
leave
dec
pop
movsl
jg
sub
mov
sub
fcoml
xchg
sbb
lods
out
inc
sbb
pop
mov
fldl
lods
sti
or
gs
xor
add
movsb
je
or
enter
fldenv
repz
add
xor
dec
cmp
add
pop
mov
push
jae
push
pop
mov
in
xor
fcompl
push
lret
lret
pop
push
ds
cmp
in
add
mov
gs
jae
push
dec
xor
ret
push
lods
lret
fistl
ljmp
inc
fldt
dec
push
mov
push
xchg
jge
fcomp
sub
mov
xchg
add
or
mov
fistl
aad
jno
stos
sub
lahf
push
xchg
loope
mov
cmpl
push
push
rcrb
and
loopne
addr16
mov
stc
je
popa
fidivs
ljmp
sbb
mov
jns
and
ljmp
sbb
pop
addb
adc
add
cmp
mov
and
nop
adcb
int3
imul
xchg
inc
push
add
test
push
sub
fnstsw
cmp
mov
or
jbe
repz
outsb
loop
push
sbb
xorl
jbe
insb
popf
js
out
subb
ret
jmp
sbb
mov
jecxz
hlt
inc
mov
and
push
insb
mov
and
jecxz
xor
incb
lods
dec
ds
mov
scas
cwtl
inc
clc
pop
pop
std
add
and
jbe
inc
sub
test
and
jb
dec
inc
jbe
dec
shll
pop
ljmp
xchg
fisttpl
pop
push
push
aas
dec
inc
inc
repz
loop
sbbl
push
pop
popf
loop
stos
loopne
in
cmp
fistpll
push
mov
ja
add
cmpsb
lcall
jo
cmc
add
inc
out
out
cmp
mov
push
psadbw
out
sub
adc
idivb
jp
cmc
fsubs
jbe
cmc
pop
add
dec
jns
push
outsb
inc
ud1
data16
pop
in
pop
in
ror
mov
shll
xlat
out
ret
cwtl
mov
sbb
dec
cmp
jg
push
fwait
es
cmp
icebp
out
sahf
mov
dec
add
cmpsl
adc
xchg
sub
out
push
hlt
out
lret
loope
and
push
dec
clc
and
mov
inc
and
dec
pop
stos
xchg
pop
jl
and
ja
xchg
js
mov
nop
lea
stos
scas
mov
push
js
sbb
ljmp
test
cmp
fwait
mov
inc
push
je
jo
mov
pop
hlt
mov
inc
test
cwtl
hlt
leave
xor
xchg
dec
loop
add
xorb
sbb
cmp
scas
jnp
ficompl
out
jae
cmpsb
push
add
fld
and
ljmp
mov
jg
mov
aaa
xchg
test
adc
lods
add
mov
push
repnz
jb
shrl
ror
and
cmpsb
lret
mov
pop
mov
outsb
aad
xor
jge
cmp
sbb
jbe
sbb
imul
imul
add
adc
fwait
pop
in
push
out
jae
shrb
cmc
out
mov
cli
add
xor
push
cmp
inc
aam
or
push
push
adc
and
nop
jmp
and
aad
not
iret
icebp
mov
xchg
push
cwtl
lods
ret
movsl
call
dec
adc
push
arpl
add
mov
inc
ja,pn
daa
shl
gs
sub
mov
fnstcw
push
sbb
push
jns
cltd
imul
iret
jmp
stos
adc
out
xchg
lds
push
pushf
xchg
jg
scas
mov
inc
jnp
cmp
pmulhw
lock
inc
cltd
push
test
cltd
jnp
fcomip
int
repz
cmc
scas
clc
test
stc
pop
lods
sbb
adc
sbb
mov
movsl
pop
xchg
fisttpl
pushl
xor
sbb
repz
loop
mov
cmc
jnp
xlat
aad
jp
sub
sub
les
repz
inc
jns
add
lahf
jb
mov
movntps
dec
or
mov
mov
xchg
add
popa
inc
and
outsl
loopne
sbb
pop
shlb
adc
jge
mov
fiaddl
outsl
icebp
push
pop
nop
cmp
cmp
or
xor
inc
popf
adc
add
cmp
cmc
adc
aam
cmc
popa
lock
aam
pop
loope
mov
mov
lock
or
mov
insl
fs
lods
ret
jbe
adc
jne
xchg
jp
adc
cmp
lds
in
mov
lret
mov
mov
dec
jb
mov
mov
shlb
sbb
scas
mov
pop
dec
js
sub
dec
jo
add
push
fsubrl
mov
sub
mov
repz
xchg
cmp
or
push
pop
adc
jb,pt
out
test
in
lods
jb
es
xor
and
mov
jl
jp
adc
mov
lock
jae
or
xor
cmpb
dec
jno
push
cmp
stos
pop
movsb
pop
pop
fcmove
lret
sti
mov
push
jb
mov
mov
push
scas
les
xor
cmpsl
or
inc
roll
ds
sub
ss
nop
sbb
xchg
insb
cmp
sub
sbb
cs
inc
andb
div
sahf
mov
sub
fiaddl
add
scas
jg
and
leave
stc
lret
sub
movsb
in
cmpl
adc
repz
mov
adc
add
sbb
aas
stos
and
loopne
jp
pop
sub
jns
cmp
std
push
fidivs
hlt
lret
cwtl
pop
sbb
pushf
scas
xor
test
rcrb
jecxz
arpl
jmp
pop
xchg
hlt
jmp
and
rorl
adc
mulb
push
mov
icebp
adcb
jno
ss
or
mov
sbb
inc
pop
in
jo
test
jecxz
pop
insb
enter
fnstcw
add
test
add
lret
mov
mov
push
test
push
adc
pop
dec
cld
fs
jle
pop
sub
cmp
xor
negb
push
gs
cmpsl
xchg
xchg
std
sbb
jecxz
jnp
insw
insl
dec
mov
cmp
adc
jae
fbstp
sbb
loope
dec
ficoms
notb
mov
mov
or
lret
aam
adc
pop
xor
lcall
sahf
mov
adc
in
add
adc
out
adcl
es
aam
int
dec
test
mov
mov
mov
jbe
push
shr
outsb
aas
push
adc
mov
cmpsb
mov
incb
addr16
mov
push
sub
daa
add
xor
add
sbb
addb
lods
push
mov
xchg
in
sbb
jno
jecxz
sbb
xor
jo
ss
mov
aam
mov
cmp
lods
jl
dec
repnz
mov
fsubr
cmp
nop
fisttps
xchg
xlat
sub
push
andb
push
add
out
stc
mov
jge
adc
add
aas
xchg
fs
dec
divb
jp
xor
pop
mov
ja
mov
dec
testb
adc
adc
xor
dec
or
mov
pop
or
xor
lcall
dec
xor
jne
jmp
xor
dec
dec
or
and
cmp
fs
xor
jle
iret
adc
jg
cmp
mov
outsb
xchg
adc
js
sub
popa
and
fidivrl
jmp
jb
jecxz
sti
jmp
mov
dec
dec
lods
mov
pop
push
adc
xchg
jae
test
leave
mov
mov
jmp
sub
and
adc
je
ss
sbb
xchg
lret
lcall
subb
xor
int
adc
inc
testl
cmp
ja
in
pop
aam
insl
sub
loope
pop
inc
xor
dec
adc
bound
repz
es
out
stc
mov
rcll
adc
or
lock
les
addl
dec
outsb
sub
mov
clc
hlt
lds
and
mov
andl
push
xchg
test
xor
shl
and
and
dec
mov
gs
xchg
cmpl
xchg
push
jp
add
xchg
in
ja
or
cmp
mov
adc
sub
sbb
cmp
stos
lods
std
xchg
push
ficompl
repnz
mov
gs
pop
sub
cld
lret
sub
stos
xor
les
xchg
insb
add
xchg
es
jmp
js
pop
lods
sub
cmc
xorb
aam
aaa
or
xchg
mov
or
pop
test
sbb
jns
or
jbe
sti
xchg
les
sub
pop
sahf
shll
pop
pop
clc
mov
fidivs
aas
mov
mov
mov
data16
and
inc
ss
or
pop
and
daa
mov
in
dec
inc
cmpsb
arpl
stos
icebp
das
subl
jle
pop
push
jno
scas
add
cmpsb
das
loopne
xor
imul
mov
test
std
pop
sbb
dec
hlt
lods
push
clc
dec
xchg
int3
scas
test
shr
mov
jne
out
pushf
out
fcomp
lds
and
lock
dec
or
hlt
in
mov
test
gs
rolb
xor
lret
les
cld
cmp
dec
xchg
pop
mov
adc
inc
out
lcall
mov
adc
cmpsl
xchg
xchg
enter
cmp
mov
inc
sbb
jmp
test
out
gs
cmp
xchg
pop
adc
testb
sbb
adc
in
sub
adc
xchg
xchg
loope
cmp
pushf
ljmp
cmc
movsb
daa
lods
mov
insl
jecxz
xlat
pop
test
popa
ret
pop
das
add
repz
cmp
fwait
nop
and
mov
popa
imul
sbb
sub
pushf
imul
jmp
sub
pop
insb
mov
cmp
fisubl
dec
call
loop
xor
and
push
ret
mov
mov
dec
ljmp
test
push
or
or
mov
and
mov
lcall
es
mov
inc
or
stos
ljmp
addr16
out
movsb
mov
call
shl
data16
or
shlb
fs
mov
pusha
and
fdivrs
mov
mov
mov
lea
cmp
icebp
lret
pop
push
and
lea
pusha
mov
push
adc
jo
cmp
and
outsb
or
dec
imul
mov
xchg
test
cwtl
and
jnp,pn
xchg
pusha
imul
mov
cmp
cmp
cs
pop
fwait
dec
lods
lret
fnsave
sahf
insb
dec
test
or
cmp
and
xchg
popa
jmp
cwtl
push
aas
pop
push
cmc
pop
fcmovb
xchg
add
adc
xor
movsb
dec
adc
in
sub
xchg
lock
pop
inc
roll
cmp
int
orl
das
scas
filds
sbb
pusha
sbb
xlat
sbb
sbb
pop
pop
pusha
outsb
jae
lcall
aaa
lods
stc
sbb
pop
adc
rcr
les
aaa
xchg
hlt
lret
xchg
mov
pop
adc
lcall
dec
push
cmp
xchg
fmul
out
xlat
test
mov
jl
sbb
hlt
ret
mov
or
adc
std
xchg
mov
pop
push
adc
dec
push
add
nop
sbb
sub
cmpsl
sbb
push
push
lock
dec
jl
imul
push
push
imul
fiadds
out
fnstsw
add
sbb
gs
std
shlb
mov
arpl
push
scas
push
mov
movsb
pop
lcall
sub
cmp
cmp
shl
outsl
mov
jb
sub
das
or
rolb
inc
inc
inc
stc
add
dec
and
xrelease
outsb
daa
or
repz
push
sti
popf
cmc
sar
jl
loopne
mov
adc
jae
jecxz
sbb
jecxz
or
inc
xorb
nop
fdiv
in
movsl
push
jl
fisubs
mov
sbb
inc
enter
in
pop
mov
jmp
bnd
lea
in
mov
js
arpl
icebp
ret
xchg
dec
and
push
mov
out
mov
sbbb
and
stos
popf
sbb
cmpb
leave
fwait
movsl
sti
mov
dec
in
mov
fcomps
cwtl
xor
test
js
push
lret
mov
pushf
and
int
fdiv
mov
in
je
jmp
lret
dec
mov
mov
push
mov
subps
scas
popa
jle
sbb
es
inc
pop
lahf
gs
mov
add
push
outsl
sbb
mov
sub
fistl
and
insb
std
fsubp
xor
cmpsl
repnz
pushf
inc
adc
ds
insb
das
lods
xchg
adc
mov
push
stos
mov
pushf
mov
adc
test
sbb
or
xor
push
in
out
out
arpl
loope
enter
sub
movsb
add
sbb
mov
or
xor
lods
xor
int3
in
fcmovnbe
pop
cmc
popf
and
mov
push
xchg
or
mov
jb
fcmovnu
cmp
mov
push
cmp
in
mov
cmp
rolb
outsb
or
and
sbb
mov
mov
jle
mov
sbb
xchg
mov
mov
lcall
add
xlat
mov
pop
popa
scas
mov
xchg
dec
xchg
mov
push
aas
orb
outsb
ds
das
aad
xor
les
jb
pop
sbb
mov
rorl
mov
mul
leave
dec
loope
stos
pop
jb
cmpsb
cmp
jle
pop
xchg
xchg
in
int3
movsl
inc
jg
out
arpl
popf
pop
adc
xorb
dec
movsb
or
in
dec
dec
rclb
mov
push
cwtl
test
mov
push
int3
jo
nop
sub
out
mov
sub
pop
cmp
adc
arpl
out
mov
inc
mov
das
pop
sbb
lock
and
movsl
pop
fistps
xchg
out
jno
jae
dec
add
fists
scas
xchg
orl
xor
adc
cmp
mov
inc
out
stc
sbb
jl
mov
cmpsl
jne
mov
pop
sbb
ret
pop
inc
xor
sbbl
dec
movsb
inc
add
adc
mov
fstl
jo
xor
adc
jo
cmp
out
aad
rcrb
stc
adc
push
ret
dec
or
mov
cwtl
jg
je
add
sbb
lods
push
push
push
push
cmp
cltd
adc
inc
mov
movsb
mov
sbb
push
jo
enter
adc
in
pop
fsubs
fbstp
push
sbb
xor
sub
std
mov
sbb
test
lcall
in
mov
insl
sub
or
jecxz
ret
xchg
push
addb
leave
nop
mov
mov
sbb
push
enter
inc
xor
cmpsb
mov
sub
lcall
jnp
mov
shlb
mov
mov
dec
mov
xchg
add
sub
mov
sbb
jmp
or
jbe
sub
ret
dec
push
jo
test
out
jo
scas
xor
mov
push
jns
ficoms
repnz
icebp
pop
xchg
ucomiss
or
call
ja
inc
pop
jno
pop
sub
mov
popa
lods
xchg
pop
loope
push
and
incl
jmp
pop
fcomps
mov
mov
or
pop
pop
dec
ret
jle
ficomps
jecxz
jl
dec
clc
pushf
mov
insb
movsl
jle
pusha
inc
addl
jo
adc
sub
imul
lahf
lods
outsb
push
les
popf
loope
das
in
add
xchg
or
imul
movsb
out
adc
sub
inc
mov
and
fistl
add
repz
lock
lret
aam
fs
inc
incb
call
cwtl
mov
xchg
sub
xor
std
nop
mov
adc
mov
jns
pop
mov
mov
mov
and
fsub
inc
fstps
ljmp
xchg
xor
cli
cmp
mov
int
gs
pop
fnstsw
clc
in
xchg
pop
add
sbb
stc
xlat
mov
imul
sbbl
dec
scas
pop
stos
cwtl
cmp
scas
jo
pop
adc
popa
mov
pop
mov
adc
inc
sbb
pop
fldt
inc
iret
or
test
pop
jbe
cmpsb
cmp
mov
enter
lret
pop
popa
lret
add
cmc
fstpl
sahf
add
dec
push
inc
pop
jne
imul
sub
sub
movsl
lods
sub
stc
jp
mov
push
loope
mov
rcl
xchg
mov
push
movsl
leave
mov
nop
add
testl
or
ds
gs
pop
lahf
out
xor
sti
cmpsl
inc
push
add
cmp
xchg
cmp
nop
cmc
jmp
in
cwtl
push
mov
add
mov
test
int3
mov
cmp
ror
lock
adc
sbb
inc
adc
ss
outsl
sub
int3
mov
add
clc
push
rorb
sub
daa
or
clc
cmp
adc
adc
xchg
ljmp
stos
push
loop
notl
out
push
sub
mov
iret
add
inc
cmp
xchg
jae
inc
idiv
sbb
dec
out
inc
or
js
dec
fbld
jl
push
and
push
and
xor
ljmp
mov
mov
shll
outsl
push
jno
or
sub
pusha
xor
inc
lcall
leave
cmp
js
fisubrs
add
outsl
and
sub
mov
push
ds
pop
pop
psrlw
sub
sbb
icebp
rolb
cmpsb
mov
push
push
fimull
arpl
mov
sub
sbb
repnz
sbb
je
pop
jg
dec
test
fs
and
jnp
std
fs
mov
in
or
fisubrl
cs
and
out
dec
and
dec
test
mov
stos
jge
fbld
jg
add
repz
jo
pop
scas
pop
jp
mov
mov
fwait
xchg
inc
daa
or
sub
scas
popa
scas
mov
inc
push
mov
mov
insb
imull
arpl
xor
pushf
imul
xchg
dec
mov
test
sub
dec
lea
push
aaa
pop
inc
sub
pop
sti
paddw
push
dec
out
dec
adc
jnp
sbb
ss
pop
clc
in
sti
mov
push
or
aad
out
cmp
sti
ljmp
mov
aas
pop
lcall
sub
mov
je
pop
mov
sarl
pop
inc
int3
clc
adc
inc
dec
pop
jo
dec
data16
adc
fstpt
pop
xchg
and
mov
jge
pop
sub
sbb
lods
mov
ret
add
mov
cwtl
and
adc
or
mov
mov
outsl
mov
pop
adc
stc
jne
push
add
je
mov
lcall
das
loope
in
mov
aas
add
add
cltd
addr16
sbb
sub
or
mov
mov
mov
fstl
lea
mov
and
mov
loope
lods
mov
cmp
cmp
icebp
repz
mov
subb
sti
xor
jne
jle
mov
ljmp
push
call
mov
stc
inc
int
jl
dec
jae
in
mov
enter
or
data16
out
or
mov
popa
sbb
fstl
inc
add
xor
xchg
sarb
frstor
cmc
cmp
or
cli
mov
addr16
testl
clc
lret
jge
lods
test
inc
xchg
pop
push
adc
data16
push
dec
mov
fistpl
inc
cmp
or
testb
mov
cmpl
and
cmpsb
push
cmpsl
aam
dec
movsb
add
xor
adc
insb
cmp
push
pop
sub
adc
xchg
pop
push
inc
inc
xchg
rorb
xor
push
into
adc
negb
out
sub
xor
mov
mov
mov
aaa
add
and
cmp
xchg
jnp
ja
adc
je
dec
cltd
in
sub
fstps
test
and
and
jmp
stos
dec
xchg
fs
mov
xor
aas
aam
pop
sub
aaa
sahf
xchg
popa
int3
fmull
sub
lea
and
push
rcr
or
in
sub
and
movsl
push
enter
loop
ret
stos
test
hlt
pop
les
mov
lret
stc
testl
cmp
fsubrl
pop
adc
pushf
addr16
ret
subl
lock
andl
sub
mov
dec
cmpsl
cmp
push
shl
in
test
ja
loopne
adc
in
mov
lcall
in
loope
push
mov
dec
outsl
sahf
push
hlt
ss
fisttpl
mov
xchg
enter
add
sub
es
push
out
les
jg
aam
pushf
jl
push
xor
push
push
dec
mov
rolb
ljmp
and
xchg
and
loope
jo
xor
orb
int
sub
xchg
xor
pop
movsb
test
mov
fsubrs
cmpb
adc
cmc
xor
out
and
int
in
add
loope
fsubs
jne
cmp
movsl
ljmp
lea
sub
int3
cmpb
faddp
scas
sub
repnz
divl
insl
testl
sbb
adc
pop
xor
sub
push
addl
xchg
ret
test
mov
dec
das
shrl
mov
mov
repnz
fstps
add
xchg
ja
xchg
ja
testb
sub
movb
aas
sbb
jb
daa
divl
xchg
adc
scas
pusha
adc
add
mov
les
aas
test
sbb
lret
push
adc
xchg
aam
jge
in
sbb
pop
push
mov
jae
jle
lret
pushf
fsubs
cmp
jle
in
aas
insl
stos
mov
dec
pop
pop
jo
cmpsb
addr16
jp
idiv
sbb
push
stos
je
andl
adcb
inc
ljmp
cmp
fadd
mov
cmp
into
arpl
adc
jg
lahf
dec
shll
adc
pop
shlb
jno
cli
xchg
iret
sbb
outsl
arpl
movsb
pusha
adc
dec
cmc
divb
and
loope
xchg
insb
adc
push
sbb
mov
shll
mov
and
loop
nop
fmull
mov
and
es
in
lret
fstpl
jmp
pop
mov
mov
pop
inc
pop
adc
mov
jbe
push
cmpsb
out
fmull
xor
adc
push
and
movl
push
push
rcrb
inc
ret
add
ja
ja
mov
and
cmp
imul
adc
or
test
lahf
leave
add
ret
lods
jnp
push
pop
mov
loopne
mov
mov
mov
push
int
xor
outsl
add
and
orb
hlt
add
aas
jge
pop
pop
mov
push
pop
mov
push
in
ret
pop
cmp
clc
movsb
push
and
xchg
in
stos
popa
cmp
int3
mov
stos
push
dec
add
xchg
or
mov
mov
fsubrs
notl
ljmp
lret
pop
test
aas
sub
movsb
subl
test
pusha
mov
mov
daa
add
hlt
jl
sbb
sbbb
outsl
pop
fldenv
ret
mov
inc
in
movl
add
pop
ret
mov
or
adc
repz
pop
dec
push
jns
mov
fnstsw
jle
pop
int3
inc
and
xchg
lds
jge
loop
push
into
daa
inc
int
sbb
and
cmp
insl
in
popf
xchg
mov
cwtl
addr16
dec
mov
push
sbb
and
in
pop
inc
aad
shll
sbb
outsl
mov
xor
mov
or
jno
popf
int3
push
ljmp
or
rorb
mov
push
shl
cli
test
xchg
mov
push
push
dec
sbb
lret
inc
jns
push
add
mov
or
dec
mov
gs
push
cmpb
push
fstl
adc
jns
and
mov
adc
cli
xchg
cli
sbb
in
sub
fucom
outsb
xor
sub
add
into
dec
sarb
rcrl
xor
aaa
xor
mov
mov
mov
jne
push
xchg
sub
nop
subl
push
rclb
std
add
addr16
mov
insl
nop
aaa
mov
or
push
ss
push
xor
pop
inc
hlt
orl
loopne
dec
mov
cmp
stc
pop
sub
dec
aas
xchg
sub
mov
jp
and
rclb
arpl
xchg
pop
cli
inc
add
movsb
pop
pop
shlb
inc
mov
lea
in
insb
push
jbe
mov
test
das
inc
lret
jno
call
loope
andb
aad
pop
das
sub
jecxz
dec
push
jge
fs
mov
xchg
or
or
addl
push
push
ss
adc
adc
roll
and
push
sub
gs
mov
mov
repz
je
mov
adc
int3
std
pop
lret
push
sar
inc
push
int
ds
fildll
in
ret
addr16
xor
in
pop
imul
xor
xor
and
data16
fsubr
mov
cmp
or
adc
push
sbb
or
scas
cmp
cltd
int3
fsubrl
cmpsl
mov
out
in
sbb
add
cmp
aad
cltd
mov
and
add
add
push
cmc
and
ss
cli
push
daa
xchg
movsb
and
dec
push
sub
inc
mov
andb
xchg
mov
cmp
xor
add
xchg
or
sub
adc
pop
fmul
jg
in
pop
fcoml
daa
lds
mov
mov
jno
xchg
dec
shll
adc
pop
inc
fmull
dec
out
cwtl
enter
out
rorb
sub
mov
push
sub
xchg
popf
add
testl
jbe
in
or
icebp
adcb
or
repz
or
inc
pop
pushf
shrb
sub
insl
jmp
or
mov
xchg
ja
aaa
lds
jl
cmp
fstpt
sbb
inc
stos
inc
clc
mul
sbb
cmpsb
cs
fwait
cmc
jnp
xorb
stos
cmp
jecxz
in
push
addl
and
ja
cwtl
inc
xlat
jecxz
sbb
sti
les
mov
inc
les
add
push
push
jle
mov
and
cmp
outsb
inc
push
xor
sarl
dec
in
les
sbb
int3
push
pop
loop
pop
icebp
push
fs
test
gs
and
out
out
inc
addb
pop
xor
std
mov
xchg
adcb
adc
in
push
lahf
pop
jns
repnz
outsl
mov
push
lods
push
fbld
push
clc
mov
loop
enter
inc
xchg
aas
adc
add
cmp
test
pop
imul
inc
fwait
ljmp
iret
gs
sub
mov
fmull
push
test
hlt
push
aam
insb
testl
ljmp
outsl
test
bound
dec
inc
lods
cs
pop
push
push
push
ljmp
or
inc
stos
fs
push
into
pushf
adc
add
push
stos
jg
out
xchg
xchg
mov
test
push
xchg
idivb
xchg
test
xchg
test
lret
xor
mov
ds
nop
inc
jl
xchg
push
hlt
pop
mov
xchg
cltd
push
lcall
repnz
or
ficoml
add
sub
lret
gs
shll
out
aas
pop
adc
dec
hlt
lea
xorb
incb
aam
jmp
pop
imulb
pushf
jl
mov
out
loopne
adc
ja
pusha
pop
repnz
push
inc
rolb
mov
xchg
stc
or
lods
cwtl
adc
cmc
push
ret
sbb
cmp
int
pop
xchg
repnz
jle
add
mov
rol
movsb
adc
or
push
dec
call
mov
xchg
incl
jp
and
sbb
stos
dec
fs
or
cli
loop
xor
enter
cmp
pop
repz
push
xchg
movsb
xchg
mov
scas
dec
std
jo
roll
loop
negl
ret
es
fcomp
push
xchg
dec
or
add
sbb
fistps
add
lcall
sub
in
push
bound
call
scas
imul
jnp
pop
fstp
push
sub
mov
rcll
add
popa
pop
or
jecxz
mov
push
popf
pop
in
mov
jnp
das
ljmp
or
ret
in
pop
dec
xlat
xchg
nop
sub
adc
das
enter
pushf
jmp
insb
lods
testl
stos
mov
in
ss
inc
push
js
daa
outsl
dec
xchg
xor
lea
sbb
loope
repnz
jmp
and
or
arpl
mov
insl
inc
xor
aas
ds
dec
inc
mov
lret
ja
mov
cltd
cmp
push
pop
adc
gs
or
sub
add
push
jne
cmp
ss
pop
ds
cwtl
negl
cmp
cmp
push
mov
cli
loopne
xchg
andb
addr16
fsubs
xchg
mov
js
sub
movb
add
inc
leave
orb
jge
rcrl
sub
fldenv
push
jmp
repnz
popa
adc
je
inc
into
jmp
mov
in
icebp
rolb
sbb
aam
push
fnstsw
lret
gs
shll
rol
add
push
insl
mov
dec
lods
repnz
xor
mov
and
lcall
data16
lcall
jl
andb
leave
pushl
inc
sbb
sub
push
cmp
insl
aam
ret
jl
dec
lods
push
xor
data16
pop
push
sar
dec
jo
cld
fidivrl
loope
sbb
xor
push
dec
lahf
nop
in
rorb
dec
sbb
and
adc
adcl
mov
dec
cmp
xchg
pop
or
stos
inc
call
add
imul
mov
inc
pop
cmp
or
push
icebp
xchg
pop
dec
adc
xchg
loop
icebp
push
mov
mov
sub
jecxz
lret
inc
adc
mov
cs
mov
aad
loopne
jle
cltd
and
filds
pop
sbb
orl
cld
fcoms
aaa
cmp
add
jge
jbe
lods
fistps
xchg
sbb
xchg
or
or
pop
cmp
xor
cli
cmp
sub
cmp
sub
dec
jb
sbb
xchg
pop
push
pop
push
movsb
in
dec
and
xor
jnp
cs
mov
int3
cwtl
jno
dec
mov
dec
and
push
push
aad
stos
push
inc
aad
out
frstor
in
lcall
cmp
cmpb
loop
jne
pop
xor
cs
sub
add
dec
cmpsl
jns
mulb
inc
add
loopne
lahf
jae
leave
pusha
lcall
inc
sbb
mov
cmc
aaa
xchg
mov
in
sti
das
scas
fsub
jnp
mov
sahf
bound
fimuls
rcrb
jae
lahf
stos
pop
mov
sbb
xor
hlt
mov
lock
or
jmp
int
aas
xor
jo
pop
adc
inc
stc
mov
xor
sarl
and
jmp
mov
jne
incl
and
js
lret
fscale
scas
ltr
les
stc
lcall
dec
mov
jo
lods
jge
jp
fbstp
push
xor
lods
xor
cmp
jl
mov
sbb
rcll
out
cmpsl
adc
insb
mov
lret
cmc
dec
addb
mov
popa
xchg
jne
inc
dec
inc
je
inc
mov
and
pusha
cmp
aaa
out
sbb
dec
aad
xor
fsts
xlat
cli
push
push
dec
mov
jg
add
cmpl
push
rorl
mov
lea
jmp
mov
mov
jae
xchg
test
pop
mov
addb
andb
leave
add
push
adc
js
outsb
inc
mov
sbb
pop
aaa
repz
das
sbb
daa
push
ss
ds
mov
ds
jmp
addl
mov
test
fs
movl
daa
fwait
inc
cmp
insb
ror
sub
jnp
rcr
scas
jp
xchg
jl
test
notb
or
pop
andb
out
leave
adc
sbb
pop
ret
clc
xor
mov
push
mov
aam
mov
sbb
rorb
jle
je
scas
loope
call
sub
pushf
mov
enter
lods
hlt
mov
mov
inc
or
inc
mov
imul
adcb
testl
push
xchg
or
mov
cmp
mov
lcall
mov
je
mov
idivl
inc
arpl
mull
lret
sub
or
hlt
or
dec
clc
or
rcll
inc
orl
in
rcrb
shll
xor
push
mov
gs
add
push
loop
jns
adc
sub
or
mov
popa
or
jg
xchg
sub
repnz
mov
sarl
dec
adc
adc
lahf
jbe
and
sbb
mov
push
jecxz
lcall
inc
sub
xchg
lret
popl
jle
mov
mov
jge
loop
lock
xchg
fimuls
faddl
add
jmp
cs
int3
stos
outsl
xor
xchg
mov
jae
fists
jne
mov
fmuls
or
pop
std
ljmp
inc
push
jne
je
cs
out
mov
sti
mov
in
cs
nop
inc
in
push
sbb
jne
stos
pop
pop
adc
sub
popa
lahf
adc
or
hlt
ss
mov
xor
push
std
mov
cwtl
lods
mov
movsl
fcoml
mov
inc
cmc
jns
cmp
xchg
dec
xor
push
pop
mov
jb
addr16
bound
lcall
mov
cltd
stos
adc
push
int3
mov
mov
mov
push
jmp
dec
xchg
cmp
adc
dec
sti
loope
dec
sarb
pop
test
push
in
cmp
sbb
xchg
xchg
mov
mov
adc
lds
add
aaa
push
push
rolb
xchg
mov
push
lods
mov
rolb
pop
pop
inc
pop
ret
sbb
outsb
mov
rol
imul
push
dec
sbb
imul
ficompl
aad
mov
ja
xor
add
mov
sub
xchg
pop
xchg
test
fmull
ljmp
jle
mov
jbe
jecxz
shll
outsb
cwtl
sub
cmpsb
mov
negl
mov
test
adcl
popa
sub
xchg
fcmovb
sub
push
or
bound
in
and
mov
fwait
lea
arpl
inc
mov
lcall
add
fwait
adc
stos
mov
js
fidivl
cmp
jae
push
add
mov
and
not
notl
mov
push
xchg
repnz
jne
vmread
fstp
mov
cmpsl
xor
or
jmp
add
sti
imul
test
addl
mov
pop
push
pop
xchg
sub
jne
and
dec
add
pop
leave
call
scas
out
push
push
pop
mov
mov
mov
xlat
add
mov
shll
push
jl
outsb
fisubs
ret
test
bound
xchg
in
sub
es
pushf
pop
pop
mov
call
outsb
mov
sbb
jb
adc
ds
shl
inc
test
jp
loop
xlat
xchg
popa
or
push
cwtl
lock
lahf
ret
repz
sbb
cmp
jno
sarb
je
lea
sbb
push
sub
fsubrp
int3
nop
ss
pop
push
push
lsl
pop
lahf
sti
adc
xchg
sar
inc
dec
das
repz
dec
jl
push
mov
push
decb
aam
js
fistpll
imul
fimuls
inc
lret
sbb
imul
jmp
inc
stos
rorb
mov
lcall
xor
movsl
lds
inc
sahf
inc
fisttpl
xor
pop
push
pop
xor
in
add
arpl
sbb
push
mov
in
cs
cmp
jg
jle
and
pushf
das
rcrb
mov
jg
aas
sub
insb
decl
arpl
pusha
lods
sub
mov
mov
mov
mov
or
cmpsl
imul
nop
aaa
pop
int
stos
lret
icebp
addb
test
or
push
sahf
mov
push
aad
movsb
or
cmp
movsl
cwtl
dec
jecxz
xchg
jno
dec
xchg
xor
pop
push
add
push
cmp
cld
lcall
lret
jg
mov
jmp
in
popf
mov
sub
nop
or
mov
icebp
leave
xchg
pop
scas
jnp
call
push
mov
inc
dec
ss
shll
sbb
decb
and
call
subb
or
push
jne
pop
notl
xor
and
push
dec
xor
push
push
mov
daa
push
mov
pusha
xor
lods
pop
je
addl
sbb
ljmp
test
jl
inc
mov
iret
adc
sbb
shlb
sub
in
cld
fmul
lock
fidivrl
bound
jl
or
mov
push
mov
jge
push
out
adc
xchg
or
inc
cmc
fdivrs
xlat
cs
das
mov
sub
shll
jmp
loop
mov
xchg
pop
sbb
dec
loop
jge
push
xchg
mov
mov
sahf
lea
mov
push
pop
fsubl
push
jb
and
fidivl
and
in
adc
mov
mov
in
jl
sub
and
mov
jbe
rclb
movsl
cmp
xor
sub
xchg
push
sub
and
insb
push
loope
push
out
push
mov
inc
xchg
or
mov
roll
add
xchg
mov
inc
sbb
ficoms
and
and
push
or
lods
xchg
cltd
mov
ljmp
push
shll
rclb
gs
dec
lock
test
xlat
and
out
pop
inc
add
or
cmp
movsl
xor
pop
sarb
std
shlb
rclb
and
push
push
testl
mov
mov
sbb
mov
cmc
mov
aad
and
jmp
lcall
xchg
loope
in
std
push
enter
lods
xchg
rcl
fmuls
dec
jl
inc
mov
pop
int
rol
pusha
addr16
stos
adc
je
add
jg
cmc
mov
ret
lea
mov
mov
dec
jne
adc
xor
rcl
iret
adc
or
test
push
mov
hlt
flds
daa
hlt
lret
rol
ja
push
pop
mov
daa
je
addl
push
into
leave
wbinvd
dec
subl
or
stc
sbb
cld
pop
mov
fsts
mov
dec
inc
mov
sahf
cmc
xlat
adc
jge
es
stc
sub
rorl
lods
cmp
nop
in
jbe
std
aad
mov
jmp
adc
mov
inc
lret
in
lods
or
xchg
add
adc
inc
shll
or
stos
jo
daa
popf
add
adc
mov
mov
into
in
incl
xchg
xchg
inc
or
fdivrl
inc
imul
add
cltd
addb
testb
call
jp
lea
mov
xor
mov
dec
sub
dec
or
inc
pop
mov
fnstenv
and
jl
iret
mov
pop
subb
jl
sub
ljmp
arpl
in
pop
cmpsb
xchg
mov
add
fldl
sub
mov
sbb
sbb
cmc
out
std
stc
sbb
push
mov
decl
inc
sub
sti
mov
lahf
push
rorb
push
out
cmpsb
inc
fcoms
push
mov
push
cmp
mov
cmp
imul
inc
mov
sbb
xchg
and
iret
adc
fs
ret
repnz
jns
cmp
mov
add
aaa
xor
inc
mov
lahf
pop
or
xchg
leave
outsl
hlt
repz
jmp
cmp
push
dec
fs
cmp
pop
push
push
pop
lea
jge
or
faddl
in
stc
jp
sbb
or
ficompl
pop
sbb
shld
push
fists
imul
mov
cltd
sub
xchg
cld
fcomip
mov
cmp
fcoml
sub
push
sti
js
mov
add
jp
dec
out
in
cmpsl
xchg
test
mov
xor
test
jbe
inc
out
aam
lods
sub
or
add
cmpsb
sub
aas
ljmp
lret
adc
jne
add
adc
ret
sub
xchg
add
iret
xlat
sti
shlb
inc
cmp
ljmp
xchg
pusha
test
lcall
icebp
in
cwtl
mov
xchg
fwait
push
ret
mov
jae
cmp
sub
mov
cmpb
sbb
push
mov
loope
sarb
jno
pop
cmp
sbb
mov
dec
add
scas
fstps
test
fcmovbe
arpl
xchg
leave
adc
in
scas
mov
xlat
in
xchg
or
sbb
sub
push
and
sbb
sub
and
sahf
inc
outsb
or
jle
sub
enter
repz
das
inc
pmaxub
cltd
xor
pushf
inc
jp
int
cmp
dec
dec
mov
add
jge
xor
mov
cmp
and
test
scas
lods
call
nop
dec
std
inc
in
cltd
fiadds
cmpsl
cld
mov
popf
clc
lret
xchg
push
sub
mov
sbb
fst
stos
push
rorl
add
or
mov
push
mov
cmp
or
cld
in
lds
sbb
aas
movsb
fsubl
fidivl
in
shll
fcom
inc
pop
mov
lods
or
sbb
add
fildll
dec
decl
cmpsb
dec
mov
shl
fistpl
add
imul
loop
and
stc
mov
out
jb
push
dec
adc
cmp
pop
lcall
test
clc
and
enter
arpl
test
cmp
hlt
dec
adc
cmp
xor
pop
cmp
mov
sub
jns
iret
pop
lahf
in
mov
imulb
test
pop
nop
push
add
les
dec
adc
pop
pop
or
aam
fistps
loope
lahf
stc
xchg
stos
and
sbb
adc
outsl
ljmp
and
xor
push
or
mov
cmpsb
mov
jne
in
cld
push
mov
mov
sbb
jno
cmp
test
cmp
fs
mov
dec
push
push
rcl
outsb
cmp
jno
inc
mov
mov
enter
jnp
push
fisubrs
inc
loope
mov
fadds
pop
das
imul
lock
in
fistl
ret
hlt
adc
pop
mov
fcomps
movsl
inc
cmp
mov
adc
test
out
popf
mov
cmpl
push
dec
xchg
add
add
sub
mov
mov
jnp
iret
test
ret
cmc
adc
shll
imul
push
xor
jae
icebp
cmpsl
icebp
cmp
mov
jns
fcoms
sbb
pop
out
incl
mov
shlb
cmp
iret
xchg
xchg
cmc
insl
sbb
aad
adc
cmp
scas
ret
pop
les
mov
sbb
fcom
cld
pop
cmp
dec
loope
movsb
pop
insb
adc
mov
sub
mov
movsb
mov
ffree
xchg
shl
movsb
xor
clc
loop
repz
mov
mov
add
jmp
sbb
push
mov
dec
shlb
outsl
xor
daa
sub
js
mov
addr16
mov
push
js
outsl
hlt
cmp
pop
inc
mov
leave
mov
mov
arpl
test
jl
jmp
daa
shl
and
sbb
lret
fstl
into
daa
loopne
mov
movsl
jecxz
mov
stos
sub
cmp
js
mov
mov
mov
sub
rorl
repnz
dec
icebp
in
jo
and
pop
add
es
adc
fiadds
push
sbb
jmp
mov
push
or
and
cmp
fldcw
pop
loopne
fwait
sub
addr16
ss
rcll
add
mov
lods
inc
inc
in
aaa
repz
mov
das
sahf
mov
in
js
mov
xchg
jmp
jmp
jns
add
lds
mov
pushf
xor
ss
jno
test
xor
jo
cmp
and
icebp
sub
jo
xchg
loope
mov
and
cmpsl
sub
or
sub
fidivl
xor
pop
xchg
jae
das
or
les
dec
aad
mov
xor
jge
movsl
into
sub
mov
es
jae
and
in
ss
icebp
sub
or
sti
mov
or
mov
repnz
and
cmp
pop
push
dec
movsb
scas
jecxz
sub
cltd
mov
xor
inc
push
pop
test
xchg
rcrb
xchg
je
xchg
orb
push
lea
xor
jbe
stos
mov
dec
jle
nop
clc
or
xchg
or
jae
call
adc
insl
inc
fbstp
cwtl
ret
loop
ljmp
cmp
roll
cmp
push
jno
jae
or
sub
jp
cmp
xor
mov
arpl
ljmp
pushl
add
pop
and
mov
push
inc
cli
bound
add
jle
out
in
adc
repnz
mov
cmp
xchg
sbb
mov
aaa
jl
lahf
dec
mov
pop
lahf
mov
xchg
flds
cmp
add
cltd
inc
jecxz
xor
xchg
popf
scas
or
and
out
dec
sahf
pushl
mov
mov
adc
mov
cmp
dec
adc
es
adc
mov
adc
mov
jns
test
lods
push
aam
sbb
push
xchg
in
mov
push
pushf
loope
test
dec
aam
test
jae
imul
fsubr
call
mov
or
insl
push
aad
in
imull
xor
add
mov
inc
mov
sub
xorl
loopne
into
psrad
int3
and
aaa
aad
inc
xor
xchg
js
inc
xchg
jmp
dec
dec
push
stos
mov
rcll
inc
test
neg
and
cs
inc
cmp
xchg
mov
in
pop
pop
sub
push
push
in
enter
movb
lret
pop
jmp
dec
fwait
aas
xor
mov
jb
inc
cli
cmpsb
ret
setb
in
in
out
imul
pusha
dec
or
ds
or
sahf
lret
sbb
cmp
push
xor
xchg
cmpl
add
call
lret
call
mov
lret
enter
sbb
add
es
push
loopne
movsl
jmp
ss
in
pop
push
and
cmpb
lods
imul
call
or
xchg
ljmp
xchg
nop
cmp
pushf
push
inc
pop
pushf
lret
test
dec
dec
mov
mov
in
dec
dec
test
pop
add
daa
pusha
cmp
pop
imul
adc
jmp
insl
dec
xchg
pushf
sbb
jno
mov
jae
imulb
mov
out
xchg
inc
sbb
jb
aam
or
es
test
int3
sbb
nop
pop
dec
push
sbb
and
in
popf
mov
out
inc
insl
and
jp
nop
dec
and
xor
test
inc
and
add
inc
pop
and
jecxz
nop
push
mov
mov
sub
mov
jae
jae
mov
cmp
je
iret
loope
inc
mov
repz
jnp
push
test
xchg
data16
lods
outsb
loope
or
fildl
jmp
scas
lcall
jp
outsb
mov
movsb
sarl
mov
notb
or
iret
mov
push
out
mov
in
jb
loopne
xor
lock
jno
lods
add
push
jo
inc
cmp
out
xorl
repnz
mov
mov
sar
jbe
xchg
dec
fst
outsb
ja
sub
push
and
lret
inc
mov
sub
push
xorl
cld
dec
push
push
std
stos
mov
call
cmp
outsb
push
sub
cmpsl
sbb
mov
sbbl
and
jp
mov
jg
aaa
ds
aam
test
mov
aam
mov
jmp
hlt
jo
and
cwtl
dec
xor
xor
pushf
pop
lock
mov
pop
fldenv
mov
shll
cmpsb
mov
nop
add
std
daa
cmp
insl
push
aam
pop
fcompl
lret
mov
xchg
or
push
adc
subl
push
rol
icebp
cld
insb
adc
shll
dec
cs
lods
xchg
and
lret
push
icebp
outsb
add
pop
enter
push
shrb
adc
mov
sub
mov
fidivl
pop
mov
mov
push
insl
gs
movsl
lea
or
imul
shl
mov
hlt
aam
rol
or
or
movsl
jno
jmp
movsb
or
add
outsl
mov
dec
sub
inc
or
xor
shl
dec
fwait
lahf
sub
inc
inc
sbb
lods
push
cmp
and
lcall
into
aad
dec
mov
or
push
push
add
lds
mov
ja
jge
pop
sub
in
mov
mov
pop
ja
inc
fwait
movsl
dec
jne
and
cld
inc
adc
neg
cmpsl
push
lods
jmp
outsb
xor
pop
arpl
das
add
insb
pop
nop
xchg
aad
int
jo
xchg
xchg
jnp
pop
repz
lock
mov
dec
pop
test
or
cmpsl
or
lahf
xor
repnz
mov
mov
bnd
outsb
stc
pop
sahf
mov
in
lahf
xchg
test
and
jnp
jns
and
je
enter
xor
gs
stc
pushaw
shrl
jecxz
pop
or
jle
jle
mov
pmuludq
insb
cli
int3
push
pop
test
dec
pushf
inc
cmp
jle
mov
out
xor
or
mov
int3
cmp
xchg
jnp
cwtl
mov
data16
lds
jbe
insl
in
mov
repnz
or
adc
pop
push
lret
jmp
mov
lds
into
shl
je
scas
pop
ja
inc
popa
popa
test
pop
mov
pusha
mov
sub
and
scas
push
cmp
mov
test
aaa
xchg
mov
test
mov
or
push
popa
pop
cmpsl
cs
movsb
dec
repz
cmpsl
fdecstp
add
in
inc
adc
pop
mov
sbb
aad
aam
insb
sbb
mov
nop
dec
pop
lock
push
into
mov
cli
loope
fcoms
dec
repz
and
xchg
dec
jo
jecxz
test
dec
sub
insl
xor
pushf
add
shlb
xor
cmpb
mov
and
xchg
inc
xchg
pop
stc
jmp
gs
test
cs
js
les
in
cmp
call
repz
out
sbb
sub
lea
pop
and
xchg
in
pop
jge
mov
xchg
addl
cmpsb
into
pop
push
sbb
cmc
ret
in
jnp
add
pusha
mov
mov
lahf
jno
mov
inc
ljmp
test
adc
outsb
ret
sub
add
ljmp
mul
or
or
cwtl
out
xchg
rcl
or
jle
sub
mov
mov
sub
xor
fimull
pop
dec
lcall
mov
shll
push
push
cmp
dec
or
js
xor
ds
cmc
and
stos
hlt
push
cmp
das
lret
loopne
push
shr
pusha
test
mov
and
shr
in
cmp
add
add
rcrb
es
pop
pushl
or
jl
dec
add
xchg
adc
iret
cmpsl
repz
push
rcl
repnz
test
jmp
xlat
data16
jnp
pop
push
mov
xlat
mov
sbb
dec
insl
js
mov
inc
lret
je
sub
mov
jmp
sahf
stos
push
int3
push
pop
cmp
jae
iret
mov
out
jne
adc
movsb
xor
mov
or
inc
xchg
mov
xor
roll
inc
nop
into
movsb
sbb
mov
loope
add
mov
rorl
lods
je
lret
fmuls
test
xor
rcrl
sahf
push
push
shll
push
push
or
inc
jp
xor
mov
ljmp
sbb
fistps
hlt
jno
stc
lock
mov
out
xchg
sub
repnz
xor
fcompl
repnz
and
adc
loope
and
or
jmp
pop
cmp
ja
jbe
dec
or
into
mov
dec
inc
in
scas
push
lea
xor
sahf
ds
sarl
popf
mov
sahf
dec
pop
cmc
push
in
daa
pusha
popa
adc
icebp
or
sbb
scas
xchg
or
inc
andl
gs
cmpl
jb
ret
ss
inc
dec
xlat
pop
pop
dec
cmp
in
jne
inc
add
or
inc
inc
mov
mov
into
addr16
mov
flds
fcmove
sub
cld
faddp
pop
shr
pusha
dec
adc
mov
cmp
repz
aas
sub
xchg
inc
pop
jge
inc
sti
mov
inc
cmp
mov
mov
std
fdivr
loop
pusha
xchg
shll
mov
xor
dec
daa
je
adc
inc
dec
fisubl
ljmp
rcl
jle
fidivl
push
dec
imul
dec
insb
push
leave
sbb
push
test
or
cmp
orb
cmc
adc
dec
mov
cli
jl
repz
mov
push
aam
mov
imul
ss
xchg
jle
addl
je
adc
test
mov
cmp
cld
sub
mov
or
mov
popf
in
jo
lea
ja
std
rolb
jecxz
into
lds
not
ret
jg
jge
cli
fwait
lds
call
mov
in
cs
scas
test
hlt
enter
push
dec
fs
lea
pop
lods
mov
cmp
jecxz
cli
cli
loopne
icebp
mulb
loope
push
out
imul
out
loope
int
popf
out
sub
stos
cmp
imul
scas
and
pop
xchg
mov
pop
mov
pop
lahf
xchg
pusha
xchg
sbb
xlat
insb
out
fldl
and
sar
xadd
pop
sub
push
xchg
insb
and
in
aas
push
mov
jo
insb
add
sbb
inc
es
xchg
inc
add
push
push
mov
dec
push
sbb
push
cmpsl
rolb
pop
sub
mov
add
icebp
sub
popf
ja
cwtl
push
mov
mov
out
pminub
and
add
aad
int
int3
sub
dec
aaa
insb
fsubr
push
pop
pop
jmp
adc
gs
dec
ss
call
xor
aas
adc
push
push
inc
jmp
cs
and
mov
popf
pop
mov
and
sti
testb
jbe
sbb
sti
xlat
clc
pop
xchg
xor
mov
lods
arpl
or
and
faddl
stos
aas
jp
dec
xchg
adc
push
lds
pop
sub
xor
and
jnp
out
jecxz
fidivrl
rcr
movd
mov
sarl
mov
imull
inc
pop
dec
in
jae
int3
cld
mov
add
adcl
or
mov
aad
sbb
adc
cwtl
dec
and
hlt
cld
jo
inc
repz
inc
mov
lods
inc
xor
rcrb
loopne
mov
inc
subb
cmpsb
add
dec
into
test
cmp
mov
add
jge
out
cmp
cltd
adc
pop
dec
stos
fdivp
in
sbb
ljmp
mov
leave
and
clc
mov
mov
xchg
ret
cwtl
lods
xor
ret
aad
ds
shrl
fisttpll
fwait
shll
cli
sti
rorl
in
stos
push
jl
cmp
adc
or
cmp
jg
cmp
shr
mov
cmp
rorl
lods
lea
in
lret
mov
push
popa
es
sbbl
dec
imul
xchg
push
enter
fsub
push
stc
cmpl
sbb
add
cltd
mov
xchg
add
push
data16
pop
mov
popa
jnp
lods
xchg
sbb
adcb
xchg
jp
sub
gs
into
les
sahf
addr16
sub
arpl
dec
cmp
xchg
push
aas
add
stos
sbb
cmp
adc
add
adc
addb
pop
xor
pop
scas
sbb
into
lcall
ret
in
lock
xchg
cmp
inc
lcall
mov
inc
fidivrs
rcrl
and
movsl
sbb
add
sub
pop
rorb
push
test
shlb
cli
lahf
insl
jle
jmp
xchg
inc
popf
pop
inc
cmp
mov
sahf
cmp
movsl
ljmp
std
jg
mov
insb
and
and
inc
mov
cld
xchg
shlb
push
imul
fidivrl
lods
xchg
sbb
and
cmp
push
xor
fsubs
push
loop
loop
xchg
ss
loopne
sub
sbb
enter
sbb
or
mov
mov
adc
das
inc
and
xchg
mov
jg
xor
fcoms
out
mov
fs
lahf
jmp
cmovnp
loopne
inc
and
mov
std
sbb
xchg
ret
add
cmp
sbb
adc
aas
push
sti
pop
xchg
jmp
andl
jbe
mov
inc
dec
out
stos
mov
dec
xchg
sub
push
inc
adc
push
iret
jns
mov
aas
ret
nop
mov
push
jno
icebp
jp
cmpsb
dec
dec
pusha
pop
push
mov
mov
scas
jno
pushf
dec
pop
fmuls
pop
jmp
fstpl
sub
adc
iret
int
dec
push
lods
stos
pop
jge
scas
jge
pusha
hlt
aas
fstpl
or
fwait
ljmp
inc
xorl
cmp
mov
dec
lret
ja
cmp
push
xor
clc
stos
pusha
push
into
popf
jg
out
imul
jbe
sub
xchg
sub
and
lahf
stos
jae
popf
sub
adc
mov
rclb
jbe
enter
mov
inc
xor
cld
mov
xor
adcb
in
mov
fwait
insb
das
fidivs
test
fmul
pop
xor
or
insl
jne
aad
xchg
loop
inc
lahf
xchg
popf
xlat
les
dec
lds
cltd
inc
imul
jp
fldenv
enter
aas
mov
inc
scas
mov
call
mov
mov
pop
and
outsl
pop
add
jno
jg
jge
sbbb
cs
mov
inc
mov
push
mov
mov
jnp
inc
insb
or
mov
push
xchg
sub
push
pop
outsl
mov
pop
ja
mov
xchg
mov
ljmp
cmp
inc
ss
or
push
xor
sub
test
fwait
stc
int
lcall
push
xchg
movsb
inc
or
mov
out
pop
push
sbb
pop
nop
mov
fisubrl
jbe
dec
out
ret
pop
dec
push
scas
sub
or
pushf
cmp
or
nop
pop
push
pop
data16
ret
sub
mov
bound
loope,pn
gs
sub
imul
push
call
jp
jl
adc
adc
hlt
pop
fwait
jo
loop
mov
js
push
movsl
sub
fistpll
out
xor
std
ret
cmc
mov
mov
mov
or
test
push
fcomp
aad
loop
jl
cmp
insb
xor
inc
adc
push
lea
mov
rorl
or
pop
mov
std
stc
mov
and
xor
cmpsl
inc
mov
sub
lods
sbb
inc
daa
push
lahf
xor
push
xchg
gs
not
cmp
cwtl
fdivs
aam
add
cmc
or
and
push
add
rol
pop
dec
lods
cmp
pop
imul
mov
mov
popf
pop
adc
stc
mov
leave
roll
ja
leave
pop
rorb
mov
add
sub
fincstp
pushf
pop
call
mov
push
es
pusha
or
mov
mull
xor
aam
push
cmp
les
in
push
pop
imul
call
sbb
movsb
iret
sub
adc
push
dec
push
sahf
mov
sub
das
sti
mov
inc
sub
scas
xchg
lret
jns
push
ss
cwtl
in
shlb
rorb
jbe
subl
cmpl
loope
shr
scas
mov
or
mov
movsb
mov
and
ds
or
shl
repz
push
movsl
fsubs
scas
adc
enter
stc
and
add
mov
pop
fistpl
cmp
and
and
int3
stos
mov
iret
fiadds
aad
stos
shl
in
push
mov
clc
sahf
inc
dec
jg
jecxz
sbb
cmpsb
sbb
mov
shrb
pop
cltd
adc
mov
icebp
mov
out
fsubrs
dec
movsb
inc
cmp
adc
inc
xor
ror
xchg
mov
adc
ljmp
mov
popa
add
mov
out
mov
mov
jns
insl
mov
cmc
dec
nop
scas
adc
or
enter
pop
lret
out
movsb
inc
rclb
push
jns
mov
rcrb
or
cltd
lcall
mov
jns
test
mov
cmp
cmc
outsl
mov
push
sbb
inc
je
fidivrs
jge
or
jno
jbe
hlt
xorb
inc
ds
push
cwtl
stos
mov
and
cmpsb
and
inc
jmp
cmp
add
or
insb
mov
push
jbe
out
adc
dec
sti
lcall
add
outsl
jns
in
rcrb
mov
ja
cwtl
lods
cmpsb
jp
jae
xchg
mov
push
aaa
aaa
test
mov
jns
outsl
jo
jge
sbbl
xchg
jbe
push
add
cmpsb
mov
pop
inc
inc
leave
and
pop
jne
fcmove
lds
pop
das
ss
jmp
cmp
adc
dec
popa
cli
xchg
ret
enter
loope
out
push
push
push
mov
xchg
mov
add
and
stc
or
or
inc
lea
in
pop
jne
mov
movsb
rorb
test
pop
mov
enter
orb
fildl
adc
xchg
xchg
aad
cltd
cwtl
xchg
stc
lods
mov
fnstcw
daa
mov
push
xchg
mov
mov
mov
out
dec
call
scas
pushf
push
push
call
cmpsb
inc
js,pn
dec
sub
sub
or
dec
push
je
xor
in
movsl
stos
add
aam
adc
imul
fwait
xchg
lods
add
insl
jmp
fdivrs
dec
xor
test
and
push
ds
arpl
vphadduwq
or
orb
dec
jns
jp
pextrw
or
and
jbe
cmp
push
clc
dec
mov
xchg
into
mov
push
xchg
ret
fs
adc
insb
jbe
inc
fsubr
adc
and
mov
and
and
mov
lahf
pop
fldt
ret
test
or
bound
or
mov
les
cmc
sbb
or
and
xlat
lret
gs
push
xor
and
loopne
lock
xor
or
ja
inc
aad
nop
movb
setb
movsb
lcall
jo
inc
popa
call
push
xchg
cmpsb
sbb
dec
mov
sbbb
mov
dec
push
push
adc
ficoms
enter
les
or
xlat
or
insb
xchg
add
jecxz
gs
add
shrb
sbb
xor
ret
ljmp
stos
in
subb
aad
mov
lret
push
xor
and
stos
lods
cld
pop
xor
das
pop
sbb
aad
outsb
fbld
pop
pusha
es
xchg
fistpl
inc
rcll
ret
sub
in
aaa
arpl
push
cmp
xchg
add
iret
das
test
rclb
or
int
aas
sub
pop
rorl
jecxz
mov
jnp
idiv
jmp
sbb
scas
stc
cltd
push
sahf
and
insl
xchg
push
aas
arpl
shlb
cmp
mov
in
xchg
xor
xor
pop
push
in
inc
out
imulb
icebp
mov
mov
jl
hlt
push
or
test
jbe
ja
xchg
add
imul
cmp
out
or
ret
sub
popa
imul
and
xchg
frstor
inc
out
inc
add
mov
mov
pushf
jge
out
pop
jge
inc
mov
and
xchg
lret
scas
or
inc
ss
mov
mov
xor
and
repz
xor
xor
stos
popa
ljmp
mov
push
repnz
jecxz
pop
ret
dec
mov
mov
test
pop
inc
imul
mov
or
sub
aam
jg
inc
jbe
fisubrs
dec
add
cmc
stos
mov
ja
fcoml
jae
or
cld
xchg
mov
and
sbb
push
es
adc
jl
lods
test
pop
shlb
push
push
fcoml
fstps
sbb
dec
jne
sbb
in
mov
sub
push
fstpl
ficomps
in
leave
push
popa
fucomi
jmp
shr
lods
and
rolb
insl
loop
movsb
or
shr
inc
bound
push
fwait
call
mov
sbb
std
lods
pop
jecxz
mov
ficompl
ds
lods
cltd
lahf
pop
outsl
leave
xchg
xor
lret
add
cltd
popa
jnp
rcrb
xchg
shll
jl
pushf
cmp
lods
ds
adc
push
adc
popa
ljmp
and
mov
xchg
dec
mov
out
or
jge
cmp
imul
movsb
ret
pop
add
scas
xchg
fcoms
and
sub
cli
pop
dec
outsl
dec
test
mov
mov
and
jmp
jp
xor
pop
insl
push
mov
sub
mov
jbe
fs
mov
inc
orb
sarb
enter
aaa
aas
stc
das
shll
push
pop
nop
fisubl
inc
lret
imul
cmp
clc
xor
cmp
sub
dec
fdivrl
xchg
test
mov
xchg
mov
sbb
add
cwtl
cs
test
in
orb
jne
adc
pop
std
cwtl
into
out
sbb
pop
bt
les
es
adc
xchg
int
in
or
xor
mov
or
int
add
cmpsl
mov
jmp
popa
dec
movsb
adc
out
sbb
out
xor
sbb
std
ret
cmpl
jno
stos
sbb
cli
mov
ficomps
lods
mov
xchg
add
pop
popa
dec
cmp
sub
in
push
xchg
adc
cmc
lea
mov
or
decb
and
mov
jmp
sbb
std
inc
mulb
inc
mov
cld
pop
clc
adc
outsl
ror
and
add
mov
les
mov
and
jmp
dec
cmp
push
xchg
inc
int3
addr16
in
cmp
lret
xchg
ja
dec
xor
cli
sub
xchg
sub
and
jno
cwtl
jecxz
in
mov
rcrb
or
sub
xor
ds
mov
cmp
data16
sub
add
push
pop
clc
pop
or
jmp
adc
fsub
mov
movsl
call
lcall
stos
shlb
dec
pop
imul
data16
lods
or
cmc
cmpsl
outsb
mov
loope
sti
push
sbb
iret
outsl
es
xchg
enter
repz
aaa
aam
sbb
ds
dec
jl
or
sbb
nop
pop
lahf
add
das
sub
cmp
fucomi
add
mov
shlb
xor
adc
xor
push
popa
add
cmp
mov
dec
insl
mov
inc
jecxz
dec
cmp
push
mov
sub
mov
les
push
lret
call
mov
mov
repz
orl
stc
addr16
int3
lret
lcall
cmc
xchg
push
sub
or
and
aam
mov
mov
lods
jmp
jb
add
mov
int
jno
jnp
or
inc
into
hlt
ret
cltd
hlt
enter
cmpsb
cmp
inc
rclb
incl
pop
sbb
mov
sub
daa
ret
leave
out
ret
out
xor
mov
xchg
lcall
insb
xchg
lret
or
js
pop
add
push
arpl
cmpsl
les
push
mov
in
push
jg
int
mov
cld
aaa
add
scas
mov
pop
stc
xor
fcmovu
mov
imul
or
in
mov
imul
dec
xchg
mov
hlt
xchg
sub
xor
push
in
and
test
scas
stc
cmc
cmpsb
or
std
pop
popf
jno
sahf
adc
xchg
iret
aam
sbb
mov
icebp
negl
xchg
jmp
test
lds
or
sbb
inc
les
add
add
aas
shl
daa
add
adc
xor
pop
fs
out
cmp
mov
fcompl
mov
jle
ds
test
xchg
arpl
xchg
sbb
mov
sbb
jmp
inc
push
fwait
loop
in
ret
dec
pop
push
insl
iret
aam
test
int3
add
insl
sbb
fimuls
js
sti
mov
or
fsub
cmpsl
test
push
jne
loopne
rolb
call
sub
cmp
pop
pop
jbe
stos
shl
adc
out
lret
aaa
sbb
fildl
scas
cltd
pop
fwait
dec
dec
or
lods
or
inc
adc
shll
push
pop
dec
cmp
lahf
fmuls
stc
xchg
and
adc
shlb
inc
add
clc
std
dec
add
or
lret
or
xchg
in
and
sub
xor
adcl
cmp
ss
jmp
inc
mov
andl
xor
iret
mov
repz
stos
iret
fcoms
sub
push
ret
movsl
dec
andps
fistps
int
aaa
push
cli
enter
xor
pop
clc
cmc
or
movsb
out
enter
scas
test
add
dec
sbb
decl
lock
loope
jo
pop
test
cmpsl
out
insb
mov
jne
sar
hlt
int3
mov
movsl
sbb
iret
in
fcomps
mov
into
jae
in
aaa
mov
mov
movsl
mov
cmpl
aaa
or
xlat
push
mov
jnp
aam
sbb
clc
es
test
pop
sub
das
insb
xchg
sbb
mov
rcrl
mov
sahf
test
test
mov
fwait
pop
jmp
cmp
cmp
jle
jge
lret
mov
cmp
inc
pop
inc
cmp
mov
adc
add
ljmp
negb
sub
push
lods
repz
dec
in
das
push
pushf
les
sub
pushf
pusha
inc
shl
push
push
std
sbb
xchg
lahf
mov
ret
cmpsb
ljmp
movsb
mov
ljmp
mov
test
jg
add
sub
pushf
xchg
in
xlat
andl
mov
leave
mov
push
lds
pop
cs
mov
or
repz
mov
pop
ss
aaa
xor
or
xchg
bound
scas
inc
pop
and
hlt
inc
std
lret
nop
outsl
mov
mov
repnz
mov
iret
jmp
frstor
pop
mov
aaa
adc
cmpsl
sub
lock
cs
gs
dec
jle
addl
pop
xor
dec
aaa
mov
mov
and
popl
xor
or
and
pop
fidivl
loopne
in
jb
mov
fidivs
inc
inc
dec
mov
lret
mov
test
stos
movsb
aaa
xchg
xchg
insl
xor
ljmp
int
data16
mov
mov
mov
or
movb
std
jne
inc
jmp
mov
xchg
imul
sub
pop
hlt
pop
scas
mov
gs
fwait
ret
repz
fwait
gs
and
push
pop
loope
mov
clc
or
bound
mov
shrl
jmp
lds
and
pushf
dec
cmp
dec
mov
dec
mov
push
xchg
in
xchg
hlt
or
out
xor
outsb
pop
sbb
pop
pop
movsb
scas
adc
mov
mov
test
inc
and
ss
xor
mov
jmp
jo
sub
test
jg
inc
mov
push
psadbw
push
lods
mov
adc
push
mov
dec
mov
and
pop
rclb
cmpsb
mov
jmp
pusha
mov
cmp
sbb
int
cmc
xchg
dec
add
sbb
lret
xor
and
mov
pusha
dec
ret
outsb
ss
mov
push
ret
ret
inc
or
iret
pop
not
xchg
adc
out
jae
mov
and
cmp
inc
out
ret
mov
lea
out
cmp
adc
mov
push
adc
cld
aam
jb
inc
pop
fsubrs
xchg
in
adc
jmp
lahf
loop
pushf
sbb
jmp
sub
test
iret
cmp
push
mov
pop
xchg
push
shl
push
fistps
popa
pop
xchg
and
pop
rorb
rcr
jp
cltd
mov
push
push
cltd
cs
loopne
and
shll
stos
stc
push
lods
fcomps
push
in
mov
pop
addr16
sub
inc
xchg
leave
adc
jecxz
je
jbe
fidivl
repnz
cltd
add
into
xchg
fsubl
or
loop
jl
mov
fdivl
jge
std
jno
dec
sbb
mov
cld
sub
cmp
dec
mov
push
or
fs
jmp
sbb
xchg
dec
jbe
sbb
hlt
sub
push
push
stos
nop
add
hlt
lahf
mov
sbb
jb
inc
repnz
xor
pop
mov
add
mov
mov
testb
push
in
mov
xor
mov
add
inc
dec
adc
stos
out
out
mov
movsl
test
lahf
iret
mov
adc
ss
pop
push
loop
cs
adc
add
ljmp
fsubl
scas
lods
sub
jp
jns
mov
cmp
jno
mov
jle
daa
inc
ret
pusha
mov
popf
aad
popa
es
adcb
cltd
out
sarb
jl
shr
aam
popf
add
mov
popf
gs
test
dec
lods
mov
aaa
faddl
aam
and
loop
js
push
sbb
inc
xchg
fildl
jge
fdivrl
dec
pop
cmpsl
xchg
cmp
stos
repnz
or
or
decb
scas
adcb
sub
testl
scas
out
adc
repnz
int
pusha
clc
mov
dec
clc
in
push
gs
sbb
xor
add
sbb
js
daa
or
mov
jo
fadds
adc
jge
sbb
push
movsb
test
adc
lret
data16
pop
pop
fcomps
dec
dec
sbb
stos
popl
xor
mov
mov
jo
das
pop
mov
or
add
stos
sar
add
inc
mov
in
imul
imul
leave
orl
lock
dec
sub
outsb
push
mov
out
push
sbb
ja
loopne
jle
jg
sub
adc
mov
repz
cmp
adc
lret
pop
aam
jns
in
add
or
lds
mov
mov
inc
jmp
mov
or
ljmp
pop
dec
inc
or
cmpsb
iret
jecxz
and
repnz
aad
insb
adc
arpl
es
mov
mov
arpl
mov
push
sbb
addr16
xor
neg
stos
jne
sbb
insb
pusha
test
mov
and
imul
mov
sub
test
enter
or
into
dec
inc
ja
and
xchg
cmp
sub
mov
or
sbb
fcmovu
or
lcall
cwtl
inc
and
ret
in
movsb
jbe
push
sub
inc
jge
scas
imul
imul
fwait
cmp
cmpb
mov
xlat
sbb
int
xor
pop
cmpsb
ja
jmp
jecxz
mov
push
mov
cltd
or
dec
lea
test
mov
scas
loopne
repz
imul
lods
pop
mov
xor
xchg
in
jp
cmpsl
xor
bound
lds
inc
orl
push
iret
cltd
sbb
lret
jecxz
aad
jae
inc
clc
inc
mov
test
pop
lcall
fnstsw
loop
jae
adc
adc
scas
dec
mov
push
loopne
int3
jle
add
jg
cmc
dec
xor
push
fsubrl
push
sub
rcll
pop
adc
mov
pop
xor
pop
xchg
jle
dec
jle
sub
popf
dec
in
jmp
push
jae
addr16
mov
push
mov
add
sbb
in
ret
rcr
loopne
dec
lock
adc
jle
movsb
das
jo
rorb
push
mulb
mov
movsl
pop
cmp
frstor
pop
cmp
es
add
dec
jae
jns
movsb
sub
push
sar
push
sub
or
je
shll
lods
mov
sahf
jp
dec
lcall
sbb
loopne
fidivs
xchg
jmp
mov
sbb
into
fcmovb
mov
mov
movsl
jecxz
xchg
pusha
mov
and
pop
inc
mov
cwtl
mov
lcall
jno
or
enter
add
or
cmp
movsl
ret
or
xor
imull
outsb
sub
and
orb
jl
add
shll
das
jbe
pop
fnsave
fidivl
lods
mov
xchg
fmuls
mov
lret
push
test
neg
int3
movsb
xor
imul
mov
rol
mov
ja
into
fcom
push
mov
int
push
nop
stc
xchg
dec
stos
enter
adc
movsb
mov
fsubl
call
inc
fwait
and
xorb
sub
outsl
lahf
idivl
dec
dec
xchg
mov
jae
mov
sub
mov
pop
popf
sahf
pop
cld
mov
scas
inc
loopne,pt
jo
imul
cmpsb
sahf
xor
aam
pop
push
fs
jnp
xchg
ret
sbb
lahf
sbb
mov
out
cmp
bound
shr
or
stos
scas
clc
xlat
bound
xchg
daa
push
fistpl
dec
subl
in
xchg
pop
lret
loopne
push
xor
sbb
jle
adc
popf
sbb
mov
cltd
fdivs
scas
into
sbb
hlt
or
sub
fstpl
lods
push
mov
sbb
mov
scas
mov
jecxz
add
xchg
inc
fimull
xlat
adc
bound
rclb
in
shlb
mov
ja
es
jne
xchg
cmp
add
mov
jo
test
sahf
fwait
sbb
mov
dec
xchg
pushf
mov
sbb
sub
xchg
imulb
lcall
mov
pop
ss
add
or
loope
add
xor
mov
inc
scas
mov
pop
imul
jmp
daa
mov
ja
adc
mov
cmp
jno
push
stos
push
mov
sbb
fstpt
arpl
push
out
adc
xchg
xchg
cmp
sahf
sub
stos
jns
dec
add
sbb
scas
push
adc
xlat
jmp
mov
addl
mov
push
int
fisubrs
aas
mov
xchg
outsb
mov
dec
fiadds
fldt
sub
shlb
ds
pop
rcll
mov
push
addl
mov
stos
popa
idivb
into
xchg
jns
xor
dec
scas
int3
sbb
insb
lcall
ds
out
cmp
scas
pop
push
mov
into
rclb
cmp
test
jmp
dec
notl
shlb
push
lcall
cmp
pop
mov
pop
dec
mov
mov
xor
int
int
mov
mov
sbbb
push
aam
mov
or
aas
sub
andl
and
mov
pop
test
sub
inc
insl
mov
cmp
pop
aad
icebp
xor
mov
inc
mov
xor
push
cwtl
mov
jae
out
cmp
outsl
mov
aad
repnz
lcall
lock
enter
add
gs
sbb
adc
push
iret
push
dec
xchg
mov
sbb
insb
aaa
adc
jge
adc
cmp
aas
ret
pop
mov
jp
cmp
scas
sbb
mov
adc
jne
scas
loop
in
movsl
mov
cltd
aaa
or
insl
test
lods
out
mov
fdivs
xchg
repnz
cwtl
enter
subb
rorl
mov
in
stos
sbb
dec
xchg
int3
repnz
sarl
cmp
xor
mov
leave
not
mov
stos
ds
dec
hlt
xchg
mov
stos
sub
jns
cld
add
xchg
sub
fidivrl
in
jl
adc
mov
mov
xor
jae
pop
cmp
loopne
or
sbb
cwtl
pop
mov
jb
fadds
dec
xor
jno
stos
mov
mov
or
push
mov
lods
mov
ljmp
mov
movsl
inc
mov
fstpt
fs
and
ds
push
mov
adc
cmp
jnp
notb
std
shrb
fcompl
aam
dec
or
testl
das
popl
xchg
outsl
push
je
in
insb
ror
lods
dec
test
xor
fmulp
adc
sbb
jo
mov
insb
test
mov
gs
add
xchg
jnp
and
pop
insb
push
pop
jmp
int
xchg
cmpsl
or
inc
xor
lock
add
push
mov
sub
or
stos
les
cmp
dec
test
mov
aaa
sti
cmp
sbb
pop
ss
lret
bound
pop
es
cwtl
mov
cmpsb
scas
mov
ret
inc
push
pop
jo
fwait
dec
fisttpll
ss
outsb
pop
enter
push
je
pop
mov
push
or
loopne
lret
test
and
insl
lock
lods
sub
insb
mov
pop
aas
inc
pop
fistpl
popa
push
lret
fimuls
imul
dec
das
daa
add
test
shrb
imul
addr16
push
enter
inc
and
fs
sbb
xor
int
aas
lea
jle
sarl
scas
sub
fistpl
test
es
subl
fwait
outsl
sub
jns
or
pop
scas
pop
pop
sti
push
dec
ret
or
mov
rorl
pusha
int
fwait
inc
xchg
aad
in
xchg
push
push
inc
aam
loop
imul
loopne
and
test
jb
lods
jae
inc
pusha
dec
aam
push
add
test
outsb
cmc
pop
loop
sti
cmp
inc
ficoml
cmpb
fwait
push
rorb
rcrb
and
mov
idivl
mov
jp
push
xchg
test
fidivs
aaa
stos
jle
enter
jg
sahf
arpl
dec
mov
imul
mov
xchg
xchg
sub
xchg
jne
add
outsb
xor
rcll
xchg
push
sbb
popf
out
sbb
cwtl
adcb
iret
and
lea
push
in
pop
aad
or
add
cmp
js
lret
jae
aaa
push
ficoms
scas
jg
sub
pop
inc
mov
mov
sbb
sub
into
aas
int
pop
andb
or
inc
sbb
call
push
add
mov
lcall
push
fdivp
repnz
mov
xor
sbb
push
imulb
push
es
sqrtps
push
in
stos
nop
rorl
mov
mov
xor
mov
popa
leave
pusha
lods
pop
lods
es
xchg
arpl
lock
nop
mov
scas
add
mov
adc
in
and
ret
shll
lods
mov
fisubrs
aas
sahf
dec
mov
and
mov
add
pop
fists
in
cmp
inc
fwait
or
cmp
sbb
cmp
orl
add
mov
xor
cmpsl
sub
adcl
testb
pop
xchg
sbbl
push
dec
sbb
shrd
subl
cmp
shll
push
jbe
xchg
xlat
jbe
xchg
mov
mov
jbe
sub
mov
or
cmpb
arpl
inc
and
xor
lret
or
sbb
sub
or
arpl
mov
mov
imul
push
mov
enter
add
sbb
jge
insb
cmpsb
push
insb
lea
cmc
push
inc
movsl
shrl
adc
loopne
pop
out
sarl
fsubrp
sub
sub
xor
sti
mov
jecxz
xchg
jge
icebp
popf
fs
mov
cmp
gs
lods
inc
dec
and
into
mov
cmp
add
jp
fstps
lea
addb
xchg
and
inc
and
nop
jp
mov
push
xchg
and
out
and
and
push
xor
fwait
push
pop
jg
pop
xlat
push
dec
adc
pusha
nop
mov
mov
mov
lcall
mov
bound
adc
aas
imul
add
dec
jecxz
pop
aas
sub
mov
sub
leave
adc
sub
pusha
or
pop
push
push
push
lret
fwait
pop
jnp
dec
gs
mov
pop
addr16
or
jbe
cwtl
mov
jnp
ds
ret
adc
inc
in
jp
daa
mov
mov
outsl
fsubrs
xchg
inc
mov
lahf
sub
out
popf
decl
in
lds
cwtl
js
xor
cmpsb
pop
mov
enter
fsub
ja
add
cli
cmp
or
in
jmp
jne
jecxz
mov
divb
lods
sub
fs
icebp
push
nop
jns
inc
outsl
jl
and
lret
lea
in
and
insb
dec
mov
les
dec
push
mov
iret
sbb
dec
sbb
in
call
lods
loop
pop
push
ja
dec
imul
test
xor
out
xchg
xor
push
sbb
pop
stos
and
add
scas
int3
xor
mov
push
lcall
in
in
sbb
push
dec
aas
sub
in
inc
sbb
pushf
sbb
enter
lods
and
enter
int3
and
je
aaa
or
stc
inc
int3
notl
lcall
xchg
cmpsl
xchg
mov
mov
jmp
pop
add
loopne
jmp
addr16
testl
pop
sbb
mov
cmp
imull
sub
das
and
mov
add
addr16
mov
jo
mov
and
or
cltd
sbb
adcl
inc
add
into
je
mov
add
fisttpl
lcall
insb
scas
jnp
outsb
mov
stos
dec
jge
lods
out
jae
rorl
jno
imul
dec
jnp
dec
inc
push
insb
cld
daa
nop
mov
inc
mov
fucomi
lret
out
fidivrs
movsl
ficompl
loopne
imul
stc
daa
std
ljmp
inc
xor
mov
into
ror
pop
or
pop
jnp
and
mov
push
inc
dec
fiaddl
shll
out
pop
mov
mov
out
mov
dec
lock
repz
jnp
or
pop
mov
inc
lods
sbb
int
mov
cmc
ret
shll
adc
mov
pop
bndldx
aas
adc
pop
jns
xor
xchg
mov
mov
decb
shll
or
inc
scas
stos
mov
sub
sbb
sahf
aad
insb
ja
ss
ret
mov
pushf
adc
mov
dec
in
or
and
js
nop
jne
sbb
push
adc
adc
addr16
leave
loopne
in
jge
lea
pop
xchg
test
outsb
aam
mov
cmp
cmp
push
mov
inc
xor
nop
cld
mov
popf
enter
inc
and
decb
in
mov
push
xchg
dec
test
cmp
ljmp
mov
in
or
int
pop
mov
dec
lock
fistpll
out
push
pop
dec
pop
ret
add
test
ret
leave
outsl
mov
mov
xchg
push
add
lea
and
dec
in
popa
pop
shll
jo
xchg
iret
push
sub
int
add
xor
push
subb
pop
cli
test
iretw
xchg
xchg
pop
clc
mov
xchg
mov
cmpsb
iret
ss
add
jo
scas
sub
icebp
xchg
stc
fidivs
test
sub
xchg
mov
in
mov
and
icebp
add
cwtl
inc
int3
xor
dec
int3
inc
fmull
jnp
int3
dec
xchg
sbb
jge
stos
shrb
adc
sti
test
sbb
jo
ds
rcll
push
cmp
add
xchg
test
into
bound
cltd
imul
fs
mov
add
xor
inc
sbb
shl
jno
sbb
lcall
xchg
das
fidivrl
push
pop
dec
mov
sbb
sbb
aaa
imul
mov
push
mov
aaa
xchg
mov
sbb
je
in
addr16
sbb
sbb
xchg
cwtl
subl
inc
jne
jae
js
and
int3
dec
xchg
fwait
cmp
mov
rcll
jne
mul
xor
jmp
jge
sbb
inc
mov
sub
push
aas
or
sarb
cltd
bound
xchg
mov
sub
add
push
addr16
gs
fisubl
xlat
cmp
andb
ficomps
sbb
pusha
hlt
mov
push
mov
jg
adc
push
pop
xchg
and
inc
repz
rcrl
pminsw
repz
mov
sarl
nop
or
xchg
inc
jno
testl
stos
je
repz
insb
mov
les
test
out
mov
arpl
popa
sub
cmp
or
outsb
fsub
fwait
xor
stos
pop
pushf
js
xor
dec
shr
dec
cmp
lods
add
pop
imul
jecxz
sahf
lods
call
sbb
or
mov
push
or
xor
mov
cmpsb
mov
inc
cmp
sbb
into
mov
add
or
bound
sub
cmpsl
mov
out
sahf
je
neg
add
cs
call
sahf
inc
mov
nop
push
push
nop
lret
loope
shrl
inc
sbb
adc
xor
add
pop
out
ret
insb
std
pop
mov
jmp
push
or
push
rcll
addr16
sbb
mov
sub
push
pop
sub
sub
in
sbb
adc
xchg
add
push
xchg
es
cmc
jo
pop
push
pop
push
cwtl
xchg
leave
pusha
clc
in
pop
pop
mov
or
mov
cmc
cmp
sub
aam
dec
pop
addl
fwait
aas
sbbb
mov
pop
inc
or
jmp
out
mov
jecxz
repz
cmp
sub
inc
mov
lret
mov
pushf
push
add
data16
add
pushf
das
jno
lea
inc
jp
std
cmpsb
imul
cmp
jbe
scas
imul
sub
sti
and
aam
xor
add
imul
aad
test
inc
mov
mov
jo
imul
nop
into
mov
xchg
mov
jl
sub
inc
mov
pop
sub
sbb
jmp
sub
add
sahf
xchg
add
xlat
mov
dec
fistpl
test
sbb
mov
xchg
sbb
mov
push
jb
xor
inc
xchg
test
dec
push
sbb
es
in
pusha
enter
sbb
scas
cwtl
fldln2
aad
sub
cwtl
loope
jns
pop
rcrl
cmp
dec
stos
cmp
test
push
insb
scas
js
gs
leave
sbb
pop
pop
fdivrl
sub
jnp,pn
mull
ret
addb
lcall
and
ret
sub
icebp
repnz
lret
gs
push
jl
shlb
inc
push
sbb
sbb
jle
push
mov
int
lock
sub
lds
mov
mov
mov
push
mov
aas
jp
jge
xor
pop
out
xor
xor
aam
ds
test
push
mov
aad
mov
les
mov
loope
xchg
test
jge
les
cwtl
sub
rcrl
mov
mov
popf
lret
push
in
in
or
lret
fwait
test
jae
dec
mov
sub
fiaddl
xor
xor
push
imul
cmp
lock
or
xchg
fcomi
loop
aaa
or
test
mov
dec
mov
ljmp
mov
popa
sub
mov
sub
mov
sub
inc
cmp
push
and
popl
mov
je
lea
ret
pop
push
mov
jecxz
cli
cld
dec
jb
insb
pop
push
cmc
cmp
icebp
pusha
lret
fmull
xchg
lea
adc
inc
mov
add
neg
cli
loop
arpl
pop
mull
fisttpll
jp
cmc
jb
jge
push
jle
sbb
pop
dec
in
adc
xchg
inc
jno
lcall
or
mov
stc
jae
push
mov
and
mov
cmp
shlb
cmp
push
push
push
push
cltd
test
movsb
cs
jb
jns
and
aaa
push
repz
addr16
ja
mov
jae
clc
and
rclb
pop
popf
mov
xchg
jl
push
rolb
dec
pop
js
femms
dec
mov
hlt
mov
lods
xchg
mov
std
xchg
out
insb
mov
xchg
adc
mov
addr16
lcall
jl
mov
dec
dec
outsb
cmc
fs
mov
sahf
sbbl
pop
sbb
add
sbb
iret
shll
dec
repnz
adc
and
and
mov
iret
cmp
call
loope
ret
sbb
dec
loopne
sbb
dec
and
in
fwait
pushf
pop
xchg
andl
adc
xor
cmc
fwait
adc
or
aam
push
mov
aam
push
lret
mov
xor
sarb
jne
sbb
xor
popf
adc
in
mov
adc
sub
in
add
sub
testb
xor
test
xchg
inc
addl
pop
add
push
rol
lcall
leave
mul
adcb
fsub
outsb
pop
mov
outsl
les
and
jb
xor
pop
pop
fmuls
data16
cmp
repz
fcomp
or
xchg
add
push
movsl
pop
adc
xor
cmp
imul
mov
outsb
not
mov
pop
mov
lods
leave
lods
std
mov
push
cmpsl
iret
js
pop
aam
repnz
addr16
pop
mov
std
out
jp
int3
sub
in
or
addb
aad
inc
push
jnp
sbb
popa
mov
cmpsl
inc
or
mov
add
xor
pusha
iret
pop
add
jbe
mov
or
xor
fs
in
adc
fdiv
or
or
pop
dec
movsl
inc
add
push
into
sub
addr16
shll
adc
mov
mov
cli
xor
push
push
aad
push
nop
stos
or
sbb
push
xchg
js
mov
inc
or
cmpl
xchg
mov
push
adc
pop
in
neg
xor
repnz
ds
nop
stos
jle
xchg
pushf
adcb
lods
test
clc
inc
fbld
push
std
jnp
in
pushf
xor
pop
out
adc
test
scas
push
sbb
gs
mov
xchg
cmp
adc
inc
loop
movsb
lret
push
and
js
jp,pn
mov
mov
pop
mov
jle
aad
and
cwtl
push
xor
daa
and
std
ljmp
std
push
jno
jbe
sub
adc
jbe
jle
adc
in
dec
mov
decl
shrb
cmp
lods
push
and
imul
xlat
xchg
mov
sbb
frstor
lret
and
pop
xorb
and
cmpsl
imul
hlt
sbb
add
push
bound
cmp
dec
xor
mov
popf
in
out
jmp
add
cmc
or
sub
jecxz
adc
mov
pop
sbb
std
fstpt
add
dec
sub
mov
call
lods
enter
push
push
icebp
cmp
js
or
push
push
fbstp
lcall
cmp
scas
sub
dec
jns
inc
pushf
pop
das
fsubs
inc
xchg
pop
push
lret
outsb
pushf
dec
push
loope
lcall
sbbb
popa
inc
popf
fstps
pushl
push
scas
ss
test
xlat
dec
pop
testb
in
mov
sti
pop
add
sbbb
and
jno
or
cvttps2pi
lods
mov
mov
out
inc
pop
push
add
fnstenv
div
cmp
movsl
sbb
out
dec
pop
neg
cli
and
lea
pop
fs
and
loop
ret
push
sub
xchg
je,pt
jle
and
jmp
ret
loope
out
push
rorl
lock
pop
mov
jg
inc
sarb
sub
mov
loope
ficoms
pop
fisubrs
lock
add
je
mov
repnz
add
dec
cmp
or
adc
in
lock
inc
inc
scas
push
cmp
xchg
mov
xor
cmc
pop
shrl
and
mov
jmp
pop
and
jp
rep
inc
or
enter
add
mov
out
or
push
je
clc
addl
scas
ret
sub
mov
in
into
dec
lcall
test
sbb
les
mov
iret
fcmovb
leave
inc
mov
inc
ret
xorb
add
in
fnstenv
mov
inc
xor
and
call
xchg
or
jbe
jg
ljmp
out
jb
push
in
inc
popf
sub
insl
cmpsl
push
jecxz
scas
mov
mov
lret
daa
pop
sbb
les
push
pop
iret
push
xor
aam
cli
mov
push
sbb
out
mov
testb
pop
outsl
xchg
shlb
addl
xor
test
insb
inc
adc
fiadds
adc
inc
sbb
aam
clc
inc
je
mov
pop
xchg
cmp
in
jb
pop
jae
ja
lock
mov
sub
int3
int3
add
add
icebp
cmp
test
scas
mov
and
dec
push
cmp
aam
fcmovne
pushf
inc
inc
sub
adc
push
xor
and
int3
xchg
out
out
nop
dec
daa
mov
and
cs
mov
or
add
iret
mov
es
xchg
mov
outsb
into
fnstenv
sub
cmp
or
mov
adcl
jp
data16
xlat
call
outsb
movsl
in
push
in
imul
jecxz
ficoms
stos
sub
out
popf
sbb
clc
aaa
sub
push
xchg
pushf
mov
out
jbe
ja
scas
dec
ftst
lds
arpl
sti
test
pop
and
loope
jae
and
lea
sub
xchg
aas
mov
cmp
mov
sub
sarl
mov
roll
fnstenv
adc
iret
xchg
jmp
sub
lea
shlb
pop
xor
data16
push
rcll
mov
scas
subb
adc
out
je
sub
pop
mov
push
or
imul
xor
lock
push
dec
add
jmp
mov
std
addr16
xchg
xchg
cmp
and
sbb
repnz
stc
push
addr16
and
xor
cmp
jge
pop
rorl
jmp
js
loope
dec
cmc
push
sub
pop
iret
push
push
sub
jb
aad
sub
inc
push
sahf
testl
pop
xchg
add
cmpsl
rorb
cmp
adc
stc
adc
leave
int
dec
mov
sbb
lods
adc
jo
js
pop
mov
jae
mov
or
inc
int3
push
dec
and
jecxz
out
int3
push
pop
inc
inc
or
dec
mov
dec
and
mov
pop
mov
jle
rcrb
loope
out
push
pop
dec
stos
dec
data16
inc
movsb
mov
add
add
enter
cmc
in
mov
or
add
jno
std
sub
cmp
fildll
inc
test
mov
jnp,pt
mov
insl
and
fldt
or
mov
xchg
ret
js
mov
popa
jecxz
jp
arpl
mov
popf
lods
icebp
test
out
cwtl
dec
sub
rcl
pop
int3
or
jo
mov
jp
mov
aaa
ljmp
test
fistl
add
adc
sub
pop
rorb
sbb
sub
xor
idiv
aaa
imulb
rcl
cmp
xlat
pop
xor
in
icebp
in
int3
out
add
sbb
xchg
xchg
ds
mov
pop
fstpt
mov
pop
xor
cli
ss
xor
dec
xor
fimull
add
mov
adc
sbb
in
jae
aaa
fbstp
jg
mov
sbb
rorl
imul
mov
cmp
inc
int3
in
xchg
mov
jge
fidivrs
fidivs
loope
xor
movsb
out
mov
loope
xchg
pop
or
jnp
and
fbld
out
mov
sbb
add
lahf
daa
push
push
int3
cwtl
inc
push
xchg
cmp
imul
mov
xor
mov
mov
ret
mov
jle
daa
adc
or
adc
xlat
or
in
push
fldt
sbb
sti
in
cld
cs
nop
mov
pop
inc
sub
lcall
inc
ret
in
mov
das
push
and
xor
mov
push
outsb
orb
aaa
xor
lods
iret
js
inc
jno
jno
mov
scas
fs
lcall
cs
dec
lods
dec
push
adc
mov
sbb
je
insl
xor
mov
popa
jmp
test
je
xchg
dec
clc
push
test
mov
movsl
aaa
push
xor
mov
ja
daa
and
rcl
pop
jl
mov
mov
sub
push
pop
pop
add
inc
dec
ja
push
ret
dec
in
xor
pushf
add
inc
pop
inc
push
adc
inc
fadds
lods
mov
dec
dec
jne
inc
mov
stos
out
shrb
dec
nop
cltd
mov
push
fdivrs
stos
fld
cmp
in
or
mov
mov
push
xor
mov
test
dec
fstl
pop
rorl
mov
loopne
xor
mov
mov
cmp
cld
sbb
mov
cltd
push
clc
add
das
movsl
and
mov
stos
add
push
iret
pushf
lahf
imul
xchg
sbb
cmp
repnz
les
dec
mulb
inc
mov
push
scas
push
push
mov
roll
jo
loopne
adc
imul
jne
sbb
repz
popf
mov
scas
push
lret
pushf
push
iret
outsb
dec
clc
orb
or
es
aam
out
in
scas
int3
jg
sbb
cmp
out
mov
mov
in
cmp
mov
ss
xchg
je
sarl
pushf
xchg
imul
jmp
mov
mov
add
hlt
jne
mov
aam
sub
jbe
out
rorb
ljmp
js
xchg
pop
lret
dec
aas
mov
pop
mov
jb
push
out
inc
movsb
daa
pop
mov
sbb
pop
adc
push
mov
inc
inc
repz
lock
xchg
mov
xorb
fimull
loope
lret
mov
hlt
mov
mov
push
int
aam
xchg
mov
sub
jmp
jg
pop
ror
std
push
into
adc
lahf
pop
jnp
sbb
inc
in
call
ss
jnp
push
mov
xor
xchg
aaa
inc
loopne
imul
adc
into
stc
xorb
mov
xchg
dec
das
xlat
sbb
mov
orl
sahf
mov
pop
or
fisttps
or
mov
movsb
pop
mov
xchg
inc
rorb
aaa
mov
cmp
inc
test
push
lahf
popf
sub
add
add
mov
or
cwtl
into
jbe
cwtl
sbb
mov
sub
push
xchg
test
xchg
fwait
cmc
jbe
test
fcoms
jbe
xor
mov
xchg
enter
adcl
sub
jo
aaa
int3
or
pushf
mov
data16
iret
mov
mov
aaa
push
pcmpgtd
xor
fwait
outsb
outsl
test
fldl
test
test
sbb
out
je
fs
lds
xchg
jo
repz
icebp
mov
into
mov
pop
aam
mov
outsl
fisttps
cmpsl
mov
mov
inc
lea
lods
les
gs
ret
cmp
rorl
push
pop
mov
pop
push
sub
lods
dec
adc
movl
mov
push
stos
push
push
icebp
jno
pop
in
outsb
adc
int3
clc
mov
ret
dec
lea
sbb
in
or
cld
mov
ret
out
cmpsl
int3
sbb
js
jl
vdivss
mov
shll
xor
push
fdivr
repz
lock
test
xchg
stos
jmp
jmp
int
fcompl
sti
cli
call
shlb
add
add
xor
xchg
mov
clc
cmpsb
enter
pop
xorb
icebp
fcomip
cmp
das
jbe
test
scas
pushf
pop
push
pop
pop
or
addl
pop
lods
jp
cmp
sbb
inc
dec
rol
in
js
insl
lss
fmul
fdivrl
daa
fsubrs
out
mov
pusha
jecxz
daa
sbb
inc
shl
xchg
dec
in
mov
jmp
dec
ret
and
and
jmp
cmpsb
dec
mov
fbld
push
jbe
js
jl
adc
test
and
mov
repz
icebp
scas
add
push
ljmp
mov
mov
cmp
sbb
add
or
push
pusha
inc
push
les
imul
xchg
xchg
fildl
pop
mov
pop
push
mov
pop
push
xor
insb
mov
dec
adc
add
adc
xchg
or
adc
movntps
nop
das
pop
pop
mov
aas
adcl
sbb
mov
shll
inc
or
jle
or
push
xor
frstor
push
pusha
pop
bound
jmp
mov
pop
sub
add
add
aam
pushf
cbtw
mov
lahf
or
pushf
gs
lcall
jg
fidivl
sbb
sti
insb
dec
cli
dec
lret
cmpsl
adcl
shll
pop
gs
es
cli
sbb
dec
push
dec
mov
mov
imul
bound
pop
or
js
cld
cmp
ror
mov
sub
mov
add
movsl
jmp
out
xor
jae
jp
pop
cmp
fistl
jne
mov
jg
cmp
xchg
inc
inc
jecxz
or
nop
and
pop
and
xchg
jge
hlt
ss
inc
fs
stos
sub
loope
lea
mov
stc
mov
fsts
insl
movb
adc
int
xchg
jne
mov
shll
xorl
pop
mov
add
jmp
jnp
int
inc
add
pop
push
fistps
scas
push
or
enter
adc
stos
mov
jno
mov
movsb
mov
push
sub
sbb
addr16
rclb
push
pop
pop
dec
add
mov
xorl
cld
flds
add
jge
fisttpll
ljmp
gs
movsb
test
rcll
sbb
and
push
pusha
jno
or
mov
mov
mov
or
sbb
dec
cmp
or
fwait
pop
shr
movsl
filds
ret
or
clc
push
adc
aaa
xorb
xor
lret
dec
add
fcomps
adc
rcll
repz
stc
insb
jmp
push
dec
push
mov
push
stc
hlt
js
in
pop
jnp,pt
je
stos
dec
push
sub
scas
stos
jnp
xchg
jl
int3
cwtl
cmpsl
and
mov
popf
std
pop
xchg
dec
adcl
inc
mov
filds
jmp
mov
inc
and
add
pop
imul
xchg
insb
sbb
mov
data16
adcb
ret
or
and
mov
xorl
in
aas
fadds
push
das
test
jo
outsl
cli
jg
shll
pusha
data16
loop
dec
stos
fcomip
rclb
jne
adc
xchg
inc
test
push
es
clc
repz
mov
dec
adc
int
push
imul
fucomp
cltd
dec
sub
test
xchg
pop
xchg
or
mov
and
sbb
dec
and
lods
ret
xchg
jae
mov
mov
cwtl
aas
lods
dec
cmc
mov
outsl
add
jns
jl
push
sti
mov
xor
adc
out
lds
push
mov
xchg
pop
or
mov
out
or
aaa
push
inc
mov
jb
add
mov
pop
sub
xchg
jmp
out
leave
xchg
jnp
xlat
xchg
es
or
dec
and
pusha
pop
hlt
jb
or
mov
and
or
sbb
loopne
lods
nop
pop
fs
hlt
adc
cmp
or
fdivl
and
imul
push
pop
xor
xchg
sbb
fucom
or
mov
inc
push
insb
cmp
loop
sub
and
and
mov
cmpsl
mov
jbe
jle
hlt
sub
and
rol
hlt
loopne
and
jp
xchg
call
sbb
addl
jno
pop
sub
or
out
jp
mov
test
cltd
mov
and
lock
mov
aas
imul
push
jae
xchg
scas
cmp
repnz
hlt
mov
mov
mov
stc
ret
rolb
in
nop
xchg
call
cli
aad
ds
or
push
inc
xrelease
pop
mov
jbe
and
scas
jb
insb
dec
or
add
clc
nop
ret
lret
cmp
or
sarb
sbb
pop
int3
loope
loope
dec
aas
inc
adc
jne
pushf
xchg
out
xor
fs
jbe
andb
xlat
scas
sub
insb
xor
lods
jge
push
add
xor
jmp
fwait
and
stc
jmp
jbe
shll
cmp
xlat
dec
push
xchg
and
ljmp
cmp
test
xor
push
popa
ljmp
add
rorl
pop
mov
dec
dec
orl
cltd
xor
test
ret
mov
jb
jle
aas
xor
inc
test
push
popl
xor
push
in
push
cs
test
jecxz
dec
aam
stos
sbb
mov
pushf
mov
cld
mov
pop
dec
fdivr
lock
negb
mov
fs
bound
push
cwtl
add
je
add
pop
inc
int3
ds
push
push
loopne
insl
arpl
cmpl
cmpl
inc
xor
xor
ja
push
sbb
dec
loop
aam
jge
push
jb
sub
push
mov
and
adc
mov
imul
enter
push
mov
popf
test
push
mov
xor
dec
xchg
faddp
ret
into
mov
jl
movsl
push
xchg
mov
or
insl
jge
insb
out
unpckhps
loope
push
lds
inc
ljmp
fs
ljmp
jns
add
fsubrs
push
test
dec
sbb
push
aad
js
ljmp
dec
inc
xchg
xchg
cld
dec
pop
loope
xor
rep
mov
ds
cmp
jae
ds
mov
test
mov
stos
and
dec
push
in
jle
mov
cmp
mov
std
outsb
js
mov
popf
and
adcb
pop
pop
fisttpl
gs
pop
ja
leave
test
data16
shrb
push
loopne
pop
jne
pop
push
sbb
push
or
pop
addl
into
into
movsl
or
sbb
cwtl
pop
add
pusha
insl
cli
adc
xor
mov
xor
push
sbb
out
fs
adc
sub
ljmp
pop
ret
adc
jl
sub
cmp
cmp
insl
bound
inc
inc
fmull
mov
out
loope
aaa
inc
and
outsl
nop
fcmovnu
ja
xchg
xor
sub
shll
sti
cmp
test
fidivrl
in
mov
arpl
es
jne
jbe
stos
push
push
aaa
and
bound
shll
arpl
jns
jne
loopne
data16
fistps
scas
dec
push
jae
jp
popf
scas
enter
cwtl
sbb
sub
sbb
test
sahf
out
test
fpatan
mov
movl
outsb
mov
mov
ficompl
add
leave
mov
mov
cwtl
add
mov
arpl
cld
add
mov
movsb
ficoms
and
repnz
test
cmc
push
out
int
xchg
mov
ss
push
ljmp
mov
addr16
clc
cmp
cmp
jo
ds
push
loopne
lcall
pop
sub
pop
call
mov
sbbl
push
loopne
out
pop
push
sbb
sub
pop
movsl
mov
repz
dec
and
ja
outsb
mov
add
sbb
scas
mov
or
rolb
mov
cmp
mov
aas
hlt
xor
fsubl
sbb
lods
aaa
inc
push
xor
stos
mov
popf
xor
loopne
adc
sub
pusha
ret
mov
dec
sbb
insl
inc
fs
and
mov
mov
pop
aam
cmp
pop
scas
adc
test
in
stos
cmp
xchg
inc
xchg
and
pushf
mov
pop
adc
sti
into
jb
cli
xchg
cmp
xchg
insl
adc
insb
mov
test
nop
pop
les
dec
popf
arpl
scas
in
outsl
rorb
xchg
divl
fwait
lods
add
clc
dec
inc
xor
jb
std
xchg
data16
jmp
mov
aaa
jb
adc
repz
sbb
clc
and
call
push
xor
mov
mov
mov
pop
popf
pop
push
xchg
scas
fcomp
xor
inc
xor
push
mov
or
or
add
rorb
faddl
arpl
int3
stos
in
cmc
scas
xchg
enter
xor
lcall
xchg
dec
jmp
lcall
mov
mov
mov
add
test
xchg
cmpsl
pop
sbb
push
push
dec
or
fisubrl
cltd
mov
mov
jle
or
les
xchg
cmovl
lea
fisubrl
xor
icebp
and
add
loop
mov
fs
add
out
push
sahf
out
and
subl
push
and
push
out
inc
adc
and
cltd
scas
pop
popf
fsubrp
ljmp
in
cmpb
push
dec
int
push
daa
testl
fimuls
lcall
xchg
xchg
dec
and
inc
add
jmp
stos
or
enter
add
sub
pushf
sub
xchg
mov
xchg
cwtl
mov
aam
fisubrs
popa
imul
fisttps
inc
fistpll
movl
mov
sub
or
inc
out
test
decb
fsqrt
jp
jmp
cmovnp
push
sbb
xor
cltd
xchg
clc
cmp
mov
sahf
iret
push
fmull
dec
cmpsl
sahf
xchg
lcall
in
sbb
fisttps
mov
shlb
xor
pop
call
push
sbb
cmp
xor
fyl2x
fcomps
outsb
xor
jnp
or
xor
mov
jg
inc
adc
sub
pop
pop
mov
dec
sahf
pop
xlat
xsavec
mov
cmc
nop
mov
pop
inc
xchg
cmp
and
shlb
mov
inc
test
cmp
or
pop
push
jl
out
mov
inc
or
xchg
hlt
mov
aam
sbb
mov
jno
jae
call
out
int
mov
pop
repz
rcrl
lret
in
sarl
int
in
pop
int
xorb
add
pushf
aaa
rorb
mov
lds
cmp
mov
lds
insb
repnz
pop
stc
call
mov
out
mov
sahf
lock
fcmovne
out
xlat
or
xor
fldcw
xor
imul
es
daa
aaa
xchg
jp
dec
pop
shlb
xor
push
jb
sbb
pop
je
push
not
call
jl
insl
movl
mov
clc
repz
xchg
stc
inc
imul
int3
lcall
inc
in
adc
mov
loop
dec
xchg
mov
fcoml
push
dec
inc
cmpsl
dec
add
aam
pop
dec
gs
sub
cltd
mov
out
rcrb
mov
dec
xor
mov
cmpl
xor
stc
cmpsl
out
leave
in
jmp
testb
xchg
xchg
sub
outsb
or
outsb
push
daa
scas
scas
fistl
std
mov
rcll
fldl
ficompl
lds
pop
std
popf
sub
mov
cmp
call
inc
mov
shl
adc
outsb
push
pop
lret
inc
fidivs
pop
push
add
add
repnz
ficoms
xlat
cmc
cmp
sarl
and
cltd
iret
lcall
dec
sbbl
inc
gs
add
cmp
jbe
xchg
sub
dec
sub
add
fs
mov
incb
insb
pop
aaa
popa
jnp
loope
js
lret
rcrl
and
add
pushf
pop
and
ret
bound
test
lcall
les
jns
mov
inc
inc
or
push
jne
cmpsb
idivl
sbb
enter
dec
xlat
xchg
arpl
cmp
popa
lret
inc
dec
stos
imul
jecxz
and
xor
inc
mov
pop
pop
pop
mulb
fwait
mov
inc
mov
dec
pop
xchg
jp
int3
in
xchg
imul
js
insl
addb
add
jb,pt
cs
dec
idivl
stos
lcall
popf
pop
and
jb
ljmp
comiss
mov
repnz
shlb
or
jmp
fisttps
xchg
xchg
arpl
mov
in
mov
idivl
mov
pop
jns
mov
xor
mov
push
addr16
lret
and
mov
mov
and
mov
bound
jbe
xchg
xchg
andl
sub
xor
stos
sbb
jmp
jp
lret
pop
ficoms
add
in
test
arpl
iret
mov
or
rcrl
push
std
outsb
inc
mov
sbb
insb
jae
jmp
dec
leave
jecxz
clc
insl
lahf
int
insb
push
iret
rcll
push
jno
clc
loop
imul
mov
cmp
dec
movsl
aam
inc
push
mov
pop
mov
sub
xor
sbb
ss
mov
scas
inc
movsl
out
xor
mov
sub
shll
movsb
push
mov
dec
xchg
inc
test
push
sbb
mov
jb
int
inc
inc
pop
sbb
test
insl
inc
inc
test
mov
dec
push
sub
sbb
in
dec
mov
lret
loop
mov
cmp
sbb
fs
incb
fisubs
mov
push
xor
in
xchg
push
pop
cwtl
sub
shl
jle
push
jns
adc
std
fadds
les
arpl
jmp
add
pop
popl
cmp
cmp
pop
mov
fs
jecxz
push
cwtl
fs
negl
add
jae
dec
ret
inc
insl
jnp
das
mov
shll
insl
jno
inc
jl
mov
ja
stos
sbb
out
mov
sarb
pop
pop
loopne
and
dec
lret
repnz
xchg
fcoml
push
push
jecxz
lahf
lea
xchg
inc
dec
imul
cld
sbb
insl
jge
lcall
add
fimull
fisubl
mov
addr16
cmpsb
negl
sub
and
pop
je
cmp
fldenv
jmp
mov
mov
dec
xchg
or
stos
cmp
pop
int
stc
pop
pop
loop,pt
add
jl
movsl
int
addb
rcll
imul
les
mov
aaa
in
das
dec
dec
and
fmulp
dec
ljmp
imul
sbb
addl
push
adc
pusha
and
sub
inc
pop
cmpsl
sti
push
add
sti
mov
sti
aad
cld
inc
sub
pop
sub
fists
mov
sbb
xchg
call
ja
jns
xchg
push
notb
inc
outsb
pop
rol
cmpsl
xchg
jl
sbb
lds
les
in
fildll
push
xor
jg
pop
outsl
out
ror
sbb
pusha
xchg
lods
les
inc
or
cs
mov
or
pop
repnz
cmp
jne
aas
pop
addr16
out
push
jae
jmp
sbb
das
fwait
je
jo
rolb
inc
inc
ljmp
cli
daa
jl
mov
movsl
icebp
cmp
popf
pop
call
sub
pop
out
sbb
and
mov
mov
lods
rol
jmp
pop
mov
gs
dec
push
or
int
pop
das
fdivrl
mov
push
xor
mov
bound
out
ljmp
mov
dec
shl
pop
mov
out
pop
or
jle
jnp
cmp
popa
in
and
out
xchg
nop
les
cmp
call
cs
pusha
xor
and
adc
mov
xor
lods
dec
into
lret
into
or
fdivs
sub
xchg
or
add
pop
push
mul
xchg
mov
sbb
dec
std
add
leave
int
adc
xchg
push
pop
pop
and
jmp
insb
push
and
mul
in
xchg
mov
jp
push
xor
das
scas
xor
int
xchg
cmp
inc
mov
xor
and
bound
fnstenv
sub
sbb
fwait
jno
popf
inc
cmp
ss
push
inc
push
dec
cmp
rol
xor
cmp
int3
sti
inc
and
push
sub
cwtl
and
jg
mov
xchg
addb
js
mov
push
fisubrl
dec
jl,pt
lods
imul
not
iret
and
adc
inc
loop
int
cmpsb
cmpsl
movsb
sbb
je
mov
sbb
jg
imul
out
shll
mov
shrl
push
xchg
sbb
sub
dec
arpl
sbb
pop
push
jne
hlt
inc
mov
ret
daa
lds
add
je
inc
sub
cmp
repz
xchg
ljmp
rclb
stos
outsl
pushf
aad
push
cltd
out
fwait
sbb
inc
jg
inc
mov
mov
sub
icebp
dec
push
stos
sbb
mov
loope
ret
cmpsl
aaa
fsubrp
jmp
inc
gs
and
das
cmpsl
mov
adc
mov
push
add
sbb
mov
ds
leave
cmp
hlt
jge
cmc
mov
add
psubsw
adc
cld
mov
push
push
jne
aad
push
inc
sbb
cmp
mov
cmpsl
inc
fdivr
mov
jne
fs
nop
repz
test
cld
xlat
je
lods
imul
mov
mov
fists
jge
push
mov
cmp
inc
pushf
in
dec
push
std
or
fnsave
mov
jnp
sub
mov
jbe
add
rcrb
push
addl
fs
adc
ret
js
loop
and
pop
jge
add
mov
mov
and
push
in
cmpsb
xchg
mov
scas
sub
and
cli
sbb
aam
clc
mov
and
lds
jp
push
in
repz
aaa
sub
in
mov
push
xor
mov
fstp
bound
push
insb
mov
fistl
mov
and
lods
adcb
mov
push
add
lods
je
adcl
mov
push
and
mov
dec
dec
subb
xchg
mov
adc
pop
andl
mov
loop
in
js
mov
addr16
out
cmp
arpl
rcrb
xchg
loopne
push
sub
repz
dec
mov
iret
sti
fnstsw
test
enter
and
pop
sbb
rcr
cwtl
mov
mul
jo
stos
adc
add
pop
mov
ds
jecxz
xlat
int
andl
jg
push
sbbb
jl
pop
push
pop
imul
sbb
jnp
cmpsl
and
xchg
sub
js
bound
mov
xchg
mov
call
dec
fldl
std
xor
insl
rol
xor
dec
pop
js
adc
xor
push
adc
fbld
and
sub
or
int
shr
adc
lds
cmp
lods
jmp
or
les
pop
popf
push
inc
jne
sub
test
mov
mov
out
push
xchg
sbb
int3
mov
dec
loop
and
pop
lret
push
imul
jmp
stos
sub
stos
leave
sub
jl
sarl
inc
cmp
jnp
into
inc
xor
pushl
std
sbb
dec
dec
push
xor
xchg
push
fistl
push
mov
inc
pop
cmp
in
inc
sbb
pop
lock
inc
and
mov
dec
in
cltd
scas
outsl
xor
mov
xor
and
or
ss
daa
mov
inc
gs
xor
lock
pop
push
dec
and
stos
xorb
adcb
out
sbb
aam
xor
xchg
pop
jmp
push
xchg
jecxz
mov
mov
pop
out
out
adc
push
repz
push
lods
dec
jns
mov
pop
int3
cs
rolb
add
cli
and
mov
rcl
lea
inc
pop
enter
push
add
leave
scas
xchg
into
push
cli
lock
and
test
adc
leave
cmp
stc
jne
ficoml
xchg
divps
test
dec
rcrl
cld
add
cs
outsl
out
jmp
pop
xor
cmp
adc
adc
pop
and
lea
cmpsb
mov
jecxz
and
push
inc
out
xchg
mov
inc
movsb
ljmp
jmp
mov
jmp
lods
jne
lret
push
loope
add
or
ja
jmp
mov
mov
ljmp
mov
cmp
jne
movsl
cs
pop
push
jo
pop
push
push
das
in
cmp
fs
cwtl
xchg
add
inc
mov
andb
or
inc
in
and
inc
mov
xchg
stc
in
push
mull
cmp
sub
lcall
stc
mov
popf
in
jns
fs
repz
mov
cmpsl
rcll
in
sub
shlb
jae
adc
xchg
popa
jecxz
lock
xor
scas
dec
mov
fidivrs
out
mov
sub
xchg
xor
sbb
cmpsb
repz
outsb
add
push
std
mov
out
cli
int
scas
push
mov
insb
shll
cli
stos
jno
in
push
jg
inc
pop
mov
insb
mov
and
adc
jae
pusha
insl
xor
push
inc
jle
xor
mov
test
loopne
dec
mov
les
andb
mov
pop
adc
inc
push
test
mov
jbe
cli
or
sarl
imul
adc
popf
loope
pop
fldl
mov
nop
leave
push
sbb
mov
and
and
mov
mov
adc
pop
or
inc
push
pop
in
push
push
sub
adc
add
ds
pop
dec
repnz
pop
sub
lahf
ss
jns
jno
xchg
cmp
aad
pop
xchg
nop
mov
andl
push
and
inc
jne
popf
test
mov
dec
pop
popa
mov
lea
add
jp
call
pop
jmp
push
jbe
add
mov
dec
mov
mov
test
fnstenv
fldt
jecxz
mov
dec
shll
inc
ljmp
add
das
repnz
and
push
and
call
jbe
mov
and
imul
sbb
pop
cwtl
orl
add
sub
mov
mov
inc
mov
add
or
mov
leave
out
leave
data16
adc
jno
xor
ds
loopne
add
jl
add
jb
arpl
cmpsl
add
pop
dec
ffreep
add
nop
jmp
dec
jns
cmpsl
stos
xchg
pop
into
xor
dec
daa
add
dec
dec
inc
nop
cwtl
adc
mov
cli
mov
mov
lock
dec
shrl
das
out
rcrl
dec
daa
enter
push
inc
push
mov
mov
int3
cmpsl
pop
repz
jne
call
push
dec
mov
cmp
pop
sub
add
daa
mov
popa
dec
push
fisttpll
sub
xchg
ret
sbb
icebp
pop
das
mov
sub
fistl
add
fcomip
ljmp
and
mov
mov
cmp
rcrl
xor
inc
in
or
inc
pop
mov
mov
push
out
outsl
sbb
out
in
mov
cwtl
faddl
out
push
cmpsb
rcrb
mov
push
fcmovnb
dec
sub
push
jmp
clc
add
ljmp
rcll
push
js
adc
mov
cltd
pop
scas
mov
mov
test
push
push
xor
pop
dec
shlb
pop
test
pop
sbb
je
jns
xor
xor
jo
test
adc
out
sbb
mov
daa
out
pop
mov
inc
or
pop
add
adc
gs
inc
and
shlb
xchg
ret
imul
scas
inc
out
cmp
adc
mov
xchg
add
xor
rcll
pop
dec
lods
addl
test
mov
mov
into
mov
add
loope
mov
inc
sub
scas
in
in
icebp
addr16
lods
xchg
inc
xchg
push
popf
push
inc
jb
inc
pop
fsubrs
push
fwait
addl
push
and
cmp
adc
imul
xchg
jp
xorb
sahf
inc
sbb
adcb
xchg
sbb
popf
scas
dec
mov
mov
nop
jne
jnp
xchg
movsl
and
fcoml
mov
call
fisubs
and
sub
add
mov
test
push
pop
xlat
or
int
aam
loopne
mov
mov
jmp
mov
mov
or
xchg
cs
es
push
cmp
and
sub
sti
dec
or
sbb
xchg
les
sbb
mov
mov
or
pop
test
xor
test
pop
sub
sub
lock
xor
inc
das
dec
popa
lret
cmc
test
cwtl
test
mov
cmp
cmp
test
adc
out
aam
cmp
pop
add
and
cmp
and
bsf
sub
loope
stos
repnz
loopne
gs
ds
out
xchg
push
gs
adc
mov
leave
outsb
pop
dec
lods
imul
repnz
iret
shl
ret
pop
xchg
pop
mov
adc
hlt
add
cmp
push
cmp
pusha
ss
and
test
dec
hlt
mov
in
lahf
inc
xor
fldt
lods
test
shlb
xchg
mov
pop
icebp
xchg
pop
jmp
mov
outsl
ror
xor
pop
lods
insb
push
push
push
icebp
cmp
out
sub
add
mov
jo
xchg
lods
mov
push
daa
insb
push
xorb
push
leave
into
dec
movsb
or
push
and
cltd
dec
out
incb
call
cwtl
pusha
xchg
cli
push
dec
mov
push
in
and
fdivl
dec
jg
fsincos
inc
and
inc
mov
in
ja
xchg
pop
ss
imul
out
and
sub
daa
pop
xchg
xchg
cwtl
cmp
aaa
lret
jp
jmp
in
dec
sbb
decb
daa
sbb
mov
and
mov
test
push
push
js
fildll
pop
fidivs
or
cmp
test
adc
call
fsts
dec
xor
add
pop
cmc
stos
ljmp
data16
cltd
aas
mov
iret
xchg
adc
sbb
and
mov
shl
scas
mov
inc
sub
or
arpl
es
sub
test
pop
lret
mov
jl
pop
add
test
xor
sub
dec
and
mov
mov
cwtl
cmp
stos
addb
loopne
inc
and
xor
addr16
mov
mov
movsl
rcrl
aad
ret
rcl
out
or
movsl
or
and
test
mov
adc
repz
imul
adc
ss
pop
mov
mov
stos
icebp
loope
inc
pop
xor
lcall
hlt
sub
inc
jg
je
xor
cmp
adc
or
je
movsb
sti
sbb
xchg
pop
push
and
cld
stc
arpl
mov
pushf
sub
js
lds
loope
cmc
push
mov
pop
mov
xchg
or
push
sarl
cmp
cmpsl
mov
popa
mov
jne
daa
mov
sbb
shll
jp
jl
jmp
in
add
inc
lret
out
out
daa
in
xor
lret
lods
push
push
mov
aam
mov
arpl
add
rorb
mov
pop
loope,pn
adc
fnstsw
xchg
aad
sbb
add
call
adc
popa
mov
adc
pop
or
and
outsl
fidivrl
jecxz
das
gs
mov
jne
adc
mov
pop
jnp
addr16
cwtl
js
push
and
add
lods
cwtl
inc
fistpl
inc
roll
jb
test
jge
adc
push
loopne
pop
lret
in
push
pop
sub
xchg
push
lods
cs
enter
mul
in
in
xor
cltd
mov
mov
sbb
xchg
dec
xor
cmpsl
lcall
push
pop
cmpsb
and
data16
mov
jo
or
push
jo
stc
adc
andb
push
imul
aam
ljmp
pusha
fldl
cwtl
pop
and
push
popf
push
mov
inc
xor
fdivrs
mov
mov
dec
test
mov
mov
adcb
cmpl
push
rorl
mov
mov
ljmp
popa
xorl
dec
js
popa
movl
pop
dec
dec
lea
pop
aas
xlat
test
jg
aaa
repnz
mov
push
mov
fimull
mov
mov
in
mov
movsl
dec
inc
jb
jg
pop
sbb
cmp
cmp
mov
loopne
pop
mov
fildl
mov
icebp
jp
xchg
sti
jae
jbe
popa
cs
mov
push
cmc
dec
pop
imul
adc
loop
jge
out
vmovaps
les
xchg
and
or
sub
push
pop
inc
cli
mov
pusha
sbb
jmp
incb
mov
or
sub
fcoms
lock
cli
jne
push
lds
cmp
mov
xor
jg
movsl
addr16
xor
repnz
in
ja
in
pop
jb
loopne
fwait
mov
xchg
loopne
in
sti
clc
xchg
stc
out
pop
pop
xchg
loop
int
ret
int3
test
and
jae
scas
jmp
mov
sarb
ja
dec
out
std
ljmp
jb
sbb
fldcw
xchg
outsl
shlb
push
pop
pop
xchg
add
cwtl
dec
push
movsl
cmp
pop
jecxz
mov
les
mov
nop
into
jmp
mov
mov
mov
es
push
sbbl
stos
sub
icebp
jbe
test
jo
adc
fucomi
adc
adc
cmp
fdivr
repz
mov
push
f2xm1
repnz
outsb
rcrl
scas
stos
push
pmaxub
cmp
cmp
adc
sbb
jne
xor
mov
or
fs
in
mov
adc
add
ja
pop
inc
adc
mov
sbb
mov
or
outsl
inc
mov
pop
dec
dec
lret
inc
les
enter
xchg
outsb
imul
imul
pop
mov
es
js
xchg
push
dec
out
or
xor
imul
fcoml
cmp
sub
sub
mov
dec
test
dec
or
hlt
xchg
call
and
inc
cmpsb
nop
xchg
inc
pop
clc
repz
movsl
jmp
pop
mov
and
jmp
mov
lcall
pop
cmp
adc
arpl
xor
lea
inc
lcall
lcall
inc
scas
out
cwtl
mov
icebp
pop
and
inc
cmpsb
jp
call
lods
call
sub
inc
or
sub
dec
into
call
xchg
scas
mov
cltd
lock
ret
and
stc
mov
push
cmp
cmp
xor
push
add
popf
xchg
test
cmp
pop
fsubrl
es
in
test
rol
push
mov
mov
frstor
dec
dec
cmp
dec
sahf
pop
mul
insb
pop
pop
xchg
xchg
into
jl
jg
xor
jns
cmp
das
out
fcoms
fsubrl
popf
sub
inc
sbb
in
jecxz
cmp
xorb
inc
imul
scas
xor
push
cmp
mov
cmpsl
pop
repz
fdivs
or
icebp
sahf
and
inc
inc
and
fisubs
les
movsb
dec
pusha
adc
loope
or
adc
xchg
push
add
insb
pop
pop
sbb
rol
and
aad
and
imul
push
dec
in
add
gs
add
mov
andb
out
mov
mov
and
push
mov
xchg
push
roll
pop
jns
push
xchg
dec
jmp
sbb
push
xlat
add
xchg
js
add
pusha
add
loop
bound
add
push
add
dec
sbb
and
jbe
ds
xchg
jg
sub
ljmp
int3
fwait
xchg
scas
in
shlb
jl
dec
and
dec
mov
adc
push
arpl
xor
mov
mov
mov
push
sahf
aam
cmpsl
daa
lahf
cmpsl
pop
mov
into
imul
pop
add
popa
push
inc
fiadds
lahf
jno
mov
in
test
ror
xchg
jb
or
fs
popf
mov
popf
xchg
sti
and
stc
leave
pop
xor
fs
shrb
xchg
dec
into
or
stos
mov
insb
pop
add
inc
adc
aaa
fildl
in
xchg
jno
cmc
push
jae
mov
mov
clc
in
movb
push
push
test
in
fs
xor
aam
xchg
loop
mov
inc
jno
mov
xchg
out
xor
pop
mov
xor
cmp
int3
movsb
scas
xchg
inc
or
ret
shlb
jl
pop
and
nop
jae
lods
cmp
xor
in
test
mov
in
aaa
xchg
out
pop
lods
int3
cltd
mov
push
in
insl
inc
add
push
sbb
or
sub
cmpb
inc
scas
mov
xorl
idivl
jae
inc
dec
cmp
or
pop
and
test
jae
and
add
push
in
sbb
push
dec
jns
mov
sub
mov
mov
insl
jle
inc
or
xchg
stos
cmc
ret
and
jne
rcr
imul
pop
test
test
push
dec
or
mov
test
jg
xor
add
mov
inc
mov
insb
fisubrs
loopne
inc
cmp
popf
jns
lods
add
lcall
pop
inc
mov
fucom
stos
insl
pop
jns
sbb
jne
imulb
lods
jbe
sbb
mov
or
pop
pop
dec
imull
cltd
pop
push
jl
shr
adc
push
movsl
push
xrelease
arpl
xchg
and
gs
arpl
ljmp
mov
jo
lods
sahf
xlat
std
aas
int
adc
mov
mov
ja
mov
test
les
sti
jl
pop
xchg
mov
fidivl
xlat
fdivl
arpl
rcl
sub
and
mov
mov
mov
jno
adcb
loop
ja
shll
lock
jge
outsb
cli
repnz
adc
notl
mov
jecxz
jecxz
sahf
inc
mov
or
gs
push
aas
gs
inc
cmp
lret
xchg
lods
and
jb
add
xor
push
dec
push
push
aad
stc
dec
adc
js
inc
add
push
and
fadd
mov
stos
pop
inc
movsb
loopne
mov
call
aad
jns
inc
push
pop
jge
mov
mov
sbb
push
int3
dec
hlt
enter
ret
sbb
or
loop
sub
and
insl
push
xchg
adc
movsb
test
pop
pop
xchg
fs
aaa
jno
loopne
aaa
adc
xchg
stos
sub
aam
out
cmp
movsb
into
lock
jne
push
push
mov
aaa
adc
sub
scas
add
add
arpl
leave
sbb
adc
mov
hlt
test
jge
push
lret
jns
add
inc
arpl
dec
lods
cmp
aad
xchg
fiadds
add
aad
dec
or
xchg
aaa
mov
xor
ret
jbe
enterw
insb
in
mov
and
mov
in
xchg
xchg
jb
shll
dec
cmp
cwtl
inc
lods
sbbb
xchg
js
push
scas
inc
jns
or
cmp
cmp
popa
es
cmp
pop
push
nop
push
imul
aad
push
and
test
xchg
in
test
bound
clc
test
sub
testl
loop
clc
cmpsl
out
scas
lahf
in
cltd
nop
push
aas
xor
push
push
in
push
xchg
mov
insb
ret
sbb
mov
popf
je
mov
test
pop
outsl
lea
scas
aad
clc
xor
fildl
xor
out
adc
add
cmp
daa
mov
mov
sub
jp
jle
jns
add
rolb
mov
xchg
push
stos
jne
lret
sub
mov
dec
pslld
sti
dec
push
aam
lods
mov
push
mov
movsl
shll
clc
or
cmp
addl
push
sbb
mov
add
jae
ja
push
inc
daa
push
js
push
sub
imul
mov
mov
movsl
mov
adc
jl
inc
ret
mov
addb
sub
adc
addr16
cli
pop
pop
pop
outsb
int
out
dec
fincstp
data16
xchg
or
xchg
mov
popf
adc
inc
stos
int
iret
xchg
loopne
sbb
ret
push
jae
mov
pop
shrb
lret
subb
lods
cmp
jb
ret
clc
pop
int3
dec
test
adc
push
into
or
xchg
sub
or
push
cltd
push
dec
mov
jg
dec
fcoml
xchg
in
ljmp
and
mov
xchg
imul
mov
push
out
push
rolb
mov
jmp
stos
pause
add
movsb
loop
cmp
imulb
test
int3
mov
addr16
pop
mov
jle
inc
mov
js
inc
jp
mov
jecxz
sub
pop
arpl
push
aaa
cmc
fwait
aas
pop
push
pop
mov
sbb
mov
and
push
adc
movsl
repnz
out
lahf
mov
popf
mov
cwtl
repz
rcll
bound
or
jl
fcmovne
movsb
dec
arpl
and
mov
pop
rcrb
inc
and
test
jne
xchg
mov
imul
std
xor
add
and
mov
mov
cmp
mov
adc
mov
out
xchg
sbb
and
in
jl
test
push
push
outsb
add
mov
and
dec
sbb
adc
testl
mov
adc
push
out
cmp
jb
lds
mov
ds
or
sbb
mov
jp
jb
pop
and
dec
inc
hlt
jp
notb
ja
pop
mov
pop
pop
dec
repnz
icebp
pushf
dec
jno
fwait
ror
mov
push
xchg
xchg
cmpsb
pushf
adc
inc
pop
fistpl
fldlg2
stc
inc
mov
push
mov
push
pop
aam
adc
stos
ja
xor
mov
out
sahf
lahf
dec
sahf
out
mov
mov
xor
subl
cmp
cmpsb
idivb
cwtl
mov
loope
out
fidivl
fiadds
test
inc
loop
arpl
fsubrs
fisttpll
jbe
sub
std
loope
imul
fmul
in
cltd
std
mov
add
imul
mov
inc
dec
pop
hlt
jo
decb
out
call
inc
push
leave
stos
movsb
hlt
inc
movsb
push
xor
pop
pop
clc
das
cmc
inc
mov
lahf
das
inc
imul
jns
mov
inc
es
int
mov
sub
and
inc
pop
pop
fdivr
pop
dec
push
cmp
xchg
test
jns,pt
in
pop
sub
fdivrs
pop
xchg
xor
mov
fstpt
push
pavgb
popf
gs
rcll
cmp
enter
add
into
push
or
and
and
sbb
cmp
fiadds
xlat
mov
sbb
int3
xchg
int3
dec
xlat
fisubrs
cmp
aas
mov
fwait
jle
and
cs
out
in
xchg
sti
xchg
popa
ljmp
push
add
stos
sahf
mov
nop
sub
dec
mov
test
aad
mov
popfw
out
or
add
fbstp
imul
dec
jbe
lret
ror
cltd
sbb
out
sub
cmpl
stos
cmp
ja
lods
xchg
sub
mov
ja
add
fisubl
pop
sbbl
int
sub
and
enter
mov
insb
sti
popa
test
push
mov
outsb
data16
dec
ficoml
addr16
int
ret
lock
or
add
mov
dec
ret
xchg
cwtl
sbb
fisubrl
das
icebp
push
pusha
pop
lods
rcr
ret
test
sbb
aam
mov
es
stos
test
fldl
lret
dec
mov
xorb
shr
sub
push
nop
mov
aam
pop
sbb
dec
bound
test
lahf
adc
ficomps
sahf
pop
and
sbb
push
jae
loopne
fisubrl
bound
and
arpl
rolb
pop
push
adc
pop
lds
mov
movsb
shl
nop
cmp
push
test
xchg
inc
push
repz
xor
mov
pop
xchg
out
outsb
add
and
cmp
lods
stc
loope
dec
push
outsl
mov
addr16
mov
gs
sbb
dec
xchg
cwtl
int
inc
mov
mov
lock
lret
shlb
sbb
pop
iret
lods
hlt
inc
test
xchg
pop
icebp
or
aad
jae
mov
rcrb
xchg
jb
jno
mov
fidivl
cmp
mov
imul
stc
scas
push
and
jmp
outsb
xor
stc
sbb
lock
fldt
in
arpl
xchg
outsl
mov
lret
push
push
fs
adc
inc
add
dec
aas
iret
into
fildl
or
es
mov
add
mov
mov
inc
jmp
int3
pop
adc
or
inc
sbb
mov
mov
das
lret
add
push
fs
ret
mov
sbb
out
stc
sti
add
and
push
lret
mov
xchg
stos
mov
mov
das
repz
inc
movsl
xor
dec
dec
jp
xchg
pushf
inc
ja
sub
fimull
jb
nop
jnp
lret
sbb
in
je
sub
mov
les
pop
into
pop
cli
insl
ds
mov
lret
xor
add
xchg
cmpsl
movsb
mov
clc
daa
add
mov
fsts
rcll
mov
adc
push
and
sbb
cltd
and
es
mov
jae
cmp
jns
cmp
sbb
push
xchg
leave
fstpt
push
insl
mov
push
outsl
xor
cmc
loopne
and
jg
pusha
inc
fimuls
mov
scas
in
loopne
imull
inc
xor
jle
cmp
inc
rol
stc
mov
jno
jl
pop
xor
sbb
mov
popa
cmpsl
dec
mov
pop
fs
pop
les
inc
mov
cmp
jmp
xchg
mov
mov
or
pop
test
and
adc
in
repz
data16
call
or
mov
cmp
fidivrl
std
cmc
cmpsb
sahf
lret
clc
inc
iret
jnp
cmp
adc
insb
scas
pop
and
or
adc
or
xor
mov
sub
repnz
mov
in
ljmp
bound
imul
push
mov
xor
push
imul
andl
in
shll
xor
push
xor
lea
cs
push
movsl
xor
xchg
and
and
mov
lds
call
jl
mulb
into
fcoml
rorb
xchg
test
icebp
jns
pop
push
out
jge
push
ljmp
icebp
sub
inc
cmpsl
mov
cmp
test
cmp
inc
sbbl
loop
inc
dec
imul
xchg
sbb
cs
cmp
gs
std
test
xor
xor
test
pop
icebp
cmp
cmc
cli
fsubl
sub
idivb
push
lds
mov
imul
clc
mov
mov
cmpsb
mov
push
shrb
cmp
add
in
pop
cmp
lea
popf
imul
pushf
mov
movsl
xchg
inc
pop
mov
maxps
aaa
jmp
mov
iret
dec
cli
lock
ficomps
lcall
inc
cmp
out
fs
sbb
popf
sbb
mov
push
dec
lock
add
mov
idivb
cwtl
fadds
or
int3
shll
jae
mov
addb
das
xor
pop
inc
mov
sub
sub
mov
xor
pop
sub
cmp
js
int3
mov
mov
sbb
scas
lds
xlat
rolb
lret
mov
dec
outsl
jecxz
mov
jmp
lcall
mov
sbb
insl
mov
mov
jae
pop
ret
inc
mov
push
sub
mov
jb
and
aad
cwtl
xchg
sbb
and
lea
xchg
cwtl
fwait
mov
push
xchg
push
loop
pop
ja
in
ss
xor
pushw
pop
test
xor
js
dec
fs
cmp
cmp
push
mov
nop
mov
shl
sbb
data16
mov
lahf
mov
xchg
jge
lods
popa
rorb
out
pop
or
jl
orl
lret
dec
mov
imul
repnz
mov
push
mov
or
mov
lahf
push
iret
bound
adc
fdivp
push
lock
shrb
scas
fldenv
inc
lods
dec
sbb
pop
fldlg2
popa
cmp
icebp
outsl
cli
das
aam
jo
es
sub
shl
mov
pop
sub
mov
movsb
jo
fdiv
out
jne
scas
adc
adc
aaa
mov
pop
push
in
mov
int3
stos
mov
movsb
mov
dec
test
scas
push
push
push
lock
pusha
and
rep
mov
lret
mov
adc
out
sub
and
mov
add
mov
insl
test
xchg
aas
adc
out
lret
sbb
pusha
loope
mov
xchg
mov
and
imulb
lahf
dec
ss
divb
jo
je
push
and
mov
insb
jbe
bound
push
inc
sbb
lods
jp
push
mov
int
xchg
nop
sub
and
mov
xchg
cmp
mov
pop
xor
cmp
and
fstps
comiss
popl
shlb
mov
cmp
out
aaa
les
test
xchg
cltd
imul
test
into
loope
cmp
fldl
push
push
xchg
xchg
jns
shrl
int3
mov
xchg
xchg
call
xchg
imul
adc
pop
and
mov
fcmovb
int3
cltd
sub
or
dec
or
add
push
gs
push
dec
stc
in
xchg
mov
lods
bnd
mov
inc
push
mov
movsl
push
inc
out
mov
arpl
pusha
jmp
jb
inc
dec
int3
mov
fmuls
cwtl
jno
data16
push
aaa
aaa
inc
inc
int3
jns
pop
stos
xor
push
inc
call
test
xor
clc
lods
pop
arpl
inc
push
add
xchg
gs
or
int3
mov
mov
into
xor
xor
sbb
daa
mov
cmp
gs
movsb
push
mov
push
push
dec
fnsave
imul
call
xor
in
dec
dec
mov
jnp
and
xorb
add
hlt
or
loope
iret
xor
faddl
int3
lahf
outsb
mov
jl
movsb
and
dec
iret
dec
adc
lock
rcrl
mov
sub
mov
push
xchg
stos
jns
mov
jl
stos
pop
add
enter
stos
or
sahf
fs
and
insl
loopne
or
lock
dec
push
aaa
neg
shll
popa
xchg
mov
jno
call
cmpsb
sbb
mov
inc
ljmp
push
sub
mov
xor
xchg
push
pop
or
mov
loopne
iret
mov
cmpl
xor
adc
sti
and
pop
fnstcw
repz
pop
cmp
xlat
notb
call
push
xchg
in
cmp
outsl
mov
scas
in
mov
pop
lret
mov
jno
sbb
aaa
hlt
imul
dec
add
pop
xchg
and
xor
push
mov
arpl
lds
scas
sbb
pusha
adc
cltd
sub
cmp
and
mov
std
xor
push
popf
sub
or
sbbb
xchg
adc
in
dec
adc
sbb
sbb
jb
mov
inc
addr16
sub
push
shlb
stos
rcll
in
push
bound
jecxz
popa
mov
cwtl
in
aam
je
push
ljmp
fstpl
push
jl
test
push
jecxz
xchg
pop
dec
pop
stos
xchg
daa
out
or
add
jns
mov
cmc
pop
out
push
xchg
inc
cmp
mov
arpl
push
stc
dec
das
pop
push
jg
int3
xor
lods
adc
cmp
xlat
add
inc
pop
mov
fs
adc
stos
lock
push
sbb
repnz
add
push
lret
mov
sub
imul
fimuls
mov
and
mov
cli
mov
push
jns
and
mov
addl
daa
or
cld
mov
jmp
shll
jl
mov
xchg
sbb
pop
cmpl
rcrl
sbb
add
pusha
movsb
mov
fbstp
enter
push
rcl
cli
aad
mov
ss
mov
hlt
add
mov
lea
pop
sbb
stc
arpl
xor
in
pop
mov
dec
mov
dec
sub
push
push
inc
push
je
bound
ljmp
ret
pop
sub
lds
lret
cs
loope
mov
sbb
cmp
call
xchg
insb
stc
xchg
inc
pop
cmp
mov
fmull
loopne
mov
stos
std
imul
dec
cld
push
gs
mov
and
cmp
fcoms
verw
mov
rep
inc
mov
aas
fsubrs
mov
mov
adc
dec
adcl
das
sar
adc
subb
es
fldz
or
cs
mov
jo
mov
push
leave
and
jno
out
cmp
xchg
adc
sub
shrl
mov
add
shrb
lret
push
out
adc
sub
ljmp
add
push
sbb
out
dec
js
idivb
mov
inc
mov
add
daa
mov
filds
hlt
push
lock
cmp
mov
lods
mov
test
test
outsl
int3
inc
stos
xor
aas
sbb
dec
cmpsb
or
pop
mov
dec
repnz
mov
cmc
dec
leave
ss
mov
mov
jnp
out
lret
jo
push
je
push
arpl
or
sahf
pusha
in
popa
test
jl
mov
dec
arpl
int3
push
pop
jmp
imul
pop
xor
inc
xchg
adc
cs
sub
sarl
loop
jg
cmp
out
shlb
xchg
jno
mov
mov
ficoms
cmp
jne
nop
inc
or
jp
mov
adc
lahf
mov
mov
bound
clc
pop
mov
sub
outsl
sub
dec
popl
or
andl
add
sti
jno
lret
dec
add
out
or
xor
sub
inc
add
jbe
int3
or
outsl
add
pop
cli
mov
imul
cltd
loop
notb
push
stos
push
push
mov
dec
stos
fisubl
add
mov
cmp
mov
mov
adcb
jns
or
pushf
push
andl
nop
sahf
add
push
ljmp
and
lea
ret
cmc
sbb
pushf
xchg
out
sub
sub
mov
mov
outsb
adcb
push
int3
cmp
sbb
cli
lds
xchg
fisttpl
xchg
ret
test
add
cs
in
jne
mov
imul
xlat
nop
scas
mov
mov
lahf
xchg
rcll
xor
xorl
lea
addr16
ret
lea
mov
or
dec
push
xchg
xor
mov
cmp
fistpll
dec
cmc
mov
mov
call
nop
into
xchg
cmc
cmp
loopne
test
mov
fidivs
push
pushl
adc
adc
xchg
je
jecxz
data16
cmp
jb
push
mov
ds
aam
aam
fisttps
push
inc
xchg
jns
sbb
dec
mov
cli
pop
xchg
and
fwait
je
ficoml
jecxz
mov
pop
cmp
xchg
jo
and
jmp
in
dec
aam
mov
jns
push
loop
lea
inc
out
sbbb
aam
xor
fisttpl
push
mov
pop
xchg
or
add
jo
adc
adc
pop
dec
xchg
xor
mov
mov
aad
push
cltd
bound
stos
mov
push
iret
jp
vpshuflw
sbbb
jo
addr16
cli
lods
aas
fidivrl
adc
xchg
in
out
mov
inc
fnstcw
jle
jnp
adc
xor
jns
sbb
cmp
mov
push
cmp
lods
sti
or
jl
mov
aaa
fcomps
push
mov
push
sti
out
xchg
test
test
shrb
sub
ds
in
cltd
inc
pop
sbb
xchg
or
fnstsw
data16
clc
push
outsl
mov
jne
fs
mov
sbb
jmp
les
add
mov
mov
lods
shrl
lret
sarb
cmc
cmc
pop
push
or
call
mov
cmp
and
pop
push
jmp
fs
xchg
jg
test
dec
in
in
or
and
xchg
mov
jno
pusha
cmp
ret
cmpsb
cmpb
sub
or
in
popl
mov
cltd
adcb
testl
sub
fdivrs
mov
add
inc
stc
mov
push
inc
dec
clc
xor
sub
in
adc
add
add
dec
cmp
adc
mov
sbb
sub
adc
mov
xor
insb
cmp
xchg
mov
dec
lods
push
icebp
cli
mov
lcall
les
sub
test
lea
repnz
push
fidivrs
sbb
sub
mov
add
lahf
jne
adcl
pop
lcall
in
clc
mov
in
sub
pusha
daa
xchg
pop
mov
cli
xchg
fwait
jo
add
in
xchg
xchg
test
xchg
cmp
xchg
pop
scas
or
sahf
inc
arpl
sbb
mov
mov
and
push
lock
aam
cmp
or
scas
dec
push
or
cli
fucomip
sub
pop
aam
pop
dec
xchg
insb
ss
bound
js
rolb
lcall
jl
adc
ljmp
pop
inc
mov
push
cmp
icebp
cmp
inc
pop
roll
sbb
orb
rorl
jns
inc
mov
jl
test
or
xchg
lret
popf
mov
dec
dec
std
ljmp
cli
js
call
xchg
nop
jecxz
nop
push
loope
xor
push
jnp
and
cmpsl
mov
jp
mov
push
movsb
cltd
aam
and
cld
adc
addr16
outsl
in
add
mov
popf
push
cmp
or
or
mov
das
push
mov
ja
pop
stos
mov
inc
loopne
cmpsb
int
jo
and
in
xor
cmp
pushf
and
jge
cwtl
icebp
in
jb
ror
push
cmp
xor
sub
cld
out
stc
adc
clc
xlat
jl
push
dec
shl
and
sub
push
cmp
adc
clc
push
xor
xchg
push
jge
sbb
sti
fcoml
arpl
push
dec
std
into
jmp
divb
sbb
fwait
mov
ss
loope
mov
fistpll
fists
fimuls
mov
dec
jge
testb
lahf
iret
push
ret
jmp
loop
cmp
fldcw
sbb
movsl
add
loopne
enter
push
add
fistpl
dec
mov
cli
icebp
fs
repnz
mov
into
jb
push
in
xchg
mov
mov
jnp
sti
daa
int
pop
lret
in
xlat
xchg
aam
iret
inc
or
xchg
pop
add
popa
insb
cmc
loopne
ljmp
adc
and
pop
int
sti
addl
adc
ljmp
out
dec
sbb
mov
arpl
add
test
repnz
enter
mov
in
ja
push
cwtl
pop
sbb
jle
les
movsl
push
test
mov
cmp
sbb
cmp
mov
mov
adc
movb
xchg
and
insl
jge
dec
ror
stos
push
or
add
into
dec
fcmovbe
pop
mov
jg
sub
mov
adcb
and
adcl
pop
pop
and
ja
aaa
pop
mov
rcll
sub
int3
mov
icebp
leave
or
in
loopne
test
adc
fbld
mov
fstps
pop
or
adc
dec
cmp
cmpb
jge
popa
or
mov
inc
shll
lock
lahf
imul
jge
sbb
mov
adc
fsts
iret
dec
out
mov
push
inc
adc
subl
sbb
outsb
jecxz
cmp
jg
pop
les
outsl
push
and
scas
insl
pop
mov
test
loope
or
lock
or
shrl
push
sbb
int3
and
mov
push
mov
data16
mov
insb
pop
add
inc
add
jbe
jle
inc
and
ss
sbb
cmpl
fldl
lret
fyl2x
fildl
aad
imul
pop
rcll
arpl
pop
and
faddl
sbb
inc
mov
cli
pop
ja
movsl
dec
ds
pop
int3
mov
sti
sub
jl
adc
jl
and
repnz
outsl
ror
push
stos
call
bnd
pop
stos
cld
repz
sub
push
mov
cvtps2pd
dec
lods
jne
dec
mov
jb
jg
jne
xchg
aad
fldl
sbb
adc
sbb
jmp
ljmp
repnz
lea
or
test
add
addl
add
push
subb
aad
pop
cmpsb
or
pop
jne
push
cmp
clc
ret
xchg
mov
sub
mov
jb
jle
adc
rol
loope
push
and
jo
ret
mov
or
lock
ljmp
inc
push
out
fisubs
cmp
filds
cmc
pop
cwtl
stos
shlb
mov
in
mov
cmpsl
outsb
call
inc
jno
std
mov
outsb
pop
xor
hlt
mov
test
pop
pop
mov
jp
loope
iret
out
movsb
imul
sbb
mov
cltd
or
pop
pop
dec
push
les
mov
sbb
pop
push
xchg
dec
xorb
test
test
out
les
or
add
fstl
aam
jo
shl
sub
lock
adc
test
insl
push
adc
inc
cld
xchg
les
and
popa
or
aaa
jl
xlat
pop
mov
cmp
and
inc
or
das
fisubrs
in
mov
mov
imul
movl
outsl
mov
loope
ja
mul
sbb
sbb
fadd
out
xor
cmp
mov
ret
out
adc
imul
mov
sbb
orb
psubsw
or
movsb
in
shlb
jl
push
push
lret
data16
push
push
jbe
lods
outsl
movsl
scas
cmp
cmp
xchg
push
jp
dec
dec
mov
adcl
int
dec
dec
fwait
shll
sub
or
cmp
xchg
or
and
das
xor
in
iret
addr16
mov
jno
out
cmpsb
popa
pushf
add
mov
fcomps
pop
ficoms
mov
pop
mov
fcomps
mov
sti
fsubs
aaa
loope
jne
sub
jnp
jmp
xchg
mov
fiadds
xchg
imul
dec
cmp
call
repz
test
add
fs
lret
shl
movsl
sbbl
je
movsb
xchg
xchg
jp
fisubrl
movsl
mov
out
xchg
jns
sub
jmp
pop
gs
dec
cwtl
ret
inc
shlb
push
sub
loop
mov
jmp
dec
mov
xorb
mov
pop
mov
loop
sbb
mov
jmp
call
ret
cmp
sub
xor
data16
mov
jg
jne
jne
push
add
lahf
mov
loopne
xchg
out
pop
and
in
out
pop
sbb
aad
xorb
dec
lret
mov
cs
pop
adc
mov
sub
mov
fcmovne
repz
sti
scas
pusha
or
js
lods
popf
dec
mov
adc
scas
fnstenv
jl
daa
push
outsl
dec
fucomi
ret
mov
addr16
lods
push
mov
imul
shl
or
push
and
adc
push
int3
sub
jle
cmp
sub
mov
aad
faddl
lret
sbb
sbb
mov
stos
pop
mov
stc
notb
or
outsl
hlt
in
inc
js
push
addb
add
push
adc
mov
mov
shl
test
sbb
pusha
cmp
sub
cld
movsb
xchg
insb
in
sarl
fsubrl
out
inc
xchg
sub
lds
mov
inc
mov
rclb
test
add
xor
imul
lea
imul
rorl
leave
mov
mov
stc
cmp
pop
lcall
int3
xor
das
mov
fstl
dec
dec
jg
imul
sbb
leave
cmp
mov
xorl
out
pop
bound
xor
cwtl
mov
nop
inc
mov
enter
pop
sbb
movups
mov
stc
mov
jp
in
jo
cmp
cmp
into
push
mov
jg
test
pop
in
pusha
add
mov
lea
les
lret
dec
fcoml
pop
jns
cmp
call
pop
clc
mov
and
pop
jbe
or
jge
pop
pushf
insl
clc
das
das
loope
pop
shll
outsb
scas
call
ds
nop
shrl
cmp
push
stos
mov
cltd
in
pop
mov
rorl
sbbl
and
shlb
sub
scas
adc
pop
mov
int
test
insl
sti
loop,pt
popf
push
cld
sahf
cmp
arpl
iret
in
push
mov
dec
je
push
xchg
js
mov
out
pop
inc
adc
xchg
inc
sbb
daa
stos
mov
repz
data16
mov
movsb
pop
inc
mov
rcl
add
cmp
adc
lods
xor
test
push
adc
int3
add
iret
and
xor
sbb
dec
int3
dec
xor
pop
fsubs
stos
cwtl
mov
fisubrs
xor
mov
add
inc
sub
imul
jbe
pop
xchg
rcr
push
repnz
js
or
or
fwait
das
jmp
xchg
enter
mov
xchg
outsb
sbb
adc
divl
jb
test
add
jmp
adc
sub
in
std
imul
aas
scas
xor
sbb
or
push
repnz
loope
mov
jge
push
repz
aaa
es
inc
sbb
subl
call
popf
rcll
xor
push
lea
cmp
lcall
outsb
cli
sarl
push
pop
roll
xchg
pusha
mov
push
pop
pop
psraw
mov
int3
jbe
ret
cld
mov
sar
jns,pn
nop
cmpsb
adc
ret
test
xchg
add
scas
sbb
xor
in
adc
xorb
sub
loopne
push
int3
int3
cli
scas
dec
inc
fcoml
xor
mov
push
add
sahf
push
rol
and
mov
and
pop
push
push
jecxz
pop
stos
aam
pushf
hlt
jge
mov
subl
iret
ret
pushf
imul
and
ret
push
loope,pn
es
ljmp
inc
lret
inc
xchg
repz
das
dec
lcall
mov
loop
rol
xchg
xor
cmp
mov
test
push
sar
mull
shl
loope
xchg
push
sahf
sbb
jecxz
dec
rcrb
in
lret
inc
loopne
scas
xchg
pusha
out
out
in
mov
push
mov
and
lcall
or
cmp
lret
mov
ja
push
jne
lds
stos
sbb
inc
inc
popa
into
call
xor
maskmovq
testl
int
aas
pop
jecxz
ja
jecxz
adc
xchg
sbb
stos
mov
pop
or
adc
ret
push
mov
cld
ret
imul
and
or
dec
and
jle
lods
ret
dec
and
mov
lret
sbb
cli
sbb
pop
in
xlat
inc
xchg
repz
js
in
lret
mov
mov
add
xor
orl
mov
and
lcall
jmp
out
xor
cltd
mov
push
pushfw
push
in
movsb
test
pushf
in
outsb
mov
jno
test
push
xchg
sbb
loop
or
cmp
ljmp
jb
add
mov
dec
inc
fisubl
dec
cld
in
and
in
cli
lods
in
inc
and
mov
mov
push
pop
cmp
dec
sahf
ret
mov
cltd
and
or
and
stos
inc
push
andb
imull
jmp
xor
cmp
xor
stc
fwait
mov
xlat
xchg
and
popf
mov
or
adc
inc
inc
and
push
lret
add
sub
add
add
test
filds
out
mov
cmp
xchg
or
adc
and
sbb
xor
mov
repz
es
dec
xor
xor
sub
inc
sub
nop
int3
mov
rorl
lods
push
out
mov
push
das
push
ret
sti
push
add
scas
sbb
add
shrb
out
lret
pop
aad
lods
sub
insl
xchg
xor
inc
outsb
cli
push
aam
push
add
sub
mov
and
inc
mov
cli
pop
jae
dec
add
inc
icebp
out
or
add
xor
faddl
sti
loop
in
or
mov
clc
push
or
data16
fcmovne
mov
fldt
inc
insb
lahf
test
cmp
divb
ljmp
jbe
shl
add
aad
cmp
fs
or
in
adc
rcll
rcll
or
mov
push
xchg
fnstsw
xlat
mov
addr16
xchg
inc
mov
xchg
faddl
mov
add
mov
movsb
shl
js
add
dec
xchg
in
pusha
aam
lock
loope
jle
push
inc
push
data16
in
cmp
out
fldenv
add
cmp
mov
xor
add
jnp
add
mov
cwtl
lcall
mov
mov
addr16
imul
dec
faddp
mov
std
sub
test
addr16
sbb
scas
jecxz
lds
movsl
lods
imul
fistl
and
jl
fisubrs
inc
cmp
jno
pop
imul
subl
push
jl
add
dec
mov
jle
faddl
sub
outsl
push
cld
mov
mov
add
xor
fcmovu
sbb
cld
movsl
add
and
lret
popa
test
mov
sub
int
adc
or
sbb
mov
ficoml
cmpl
and
push
dec
or
push
data16
cmp
data16
lock
arpl
sbb
add
sarl
mov
xorl
push
pop
insl
jb
movsb
inc
cmc
add
stc
fidivrs
dec
xor
testl
xorl
or
mov
scas
xchg
mov
bound
inc
xor
xor
das
insl
loop
pop
push
mov
add
mov
dec
xor
jmp
arpl
push
test
lcall
aaa
mov
fs
fnsave
sub
int3
add
dec
in
xchg
mov
out
sub
push
mov
add
adc
push
loopne
in
jb
mov
mov
ja
pop
mov
test
gs
jnp
icebp
jge
cmc
test
aas
inc
loop
pop
xor
out
out
xchg
popf
stos
cmp
inc
pusha
aam
cmp
daa
inc
jge
mov
mov
loope
lds
inc
orb
lds
imul
call
xchg
mul
and
lret
push
pop
dec
test
outsl
push
imul
mov
jnp
add
faddl
xchg
je
mov
adc
dec
pop
js
xor
or
cmpsb
and
aas
aas
sub
mov
jmp
jae
mov
ficoms
mov
xchg
imul
add
dec
lock
cltd
ret
faddp
mov
test
sub
sbb
adc
pop
adc
int
addr16
pop
mov
popa
insb
es
gs
cmp
ja
push
mov
pop
jbe
cwtl
jecxz
jo
mov
out
add
imul
dec
dec
and
sbb
sbb
mov
icebp
mov
jnp
aam
lcall
adc
cmpsl
popf
loopne
push
and
loop
int
inc
cmpsb
lahf
mov
arpl
dec
cs
cmpsb
and
xchg
jae
or
mov
fdivr
xorl
jae
push
sub
jnp
enter
je
add
sbb
loope
aas
xchg
or
mov
pop
mov
bound
xor
outsb
fnstenv
out
pusha
notb
stc
cltd
fucomi
pop
cmpl
fs
sbb
add
cmpb
cmp
negl
cwtl
stos
mov
stc
das
divb
xchg
in
inc
add
adcb
cwtl
shlb
out
push
inc
jno
lcall
sub
xor
push
imul
lods
fwait
std
mov
inc
or
sahf
push
xorb
out
cmpsl
bound
jae
fscale
jb
incb
and
adc
ds
push
fwait
inc
sbb
mov
or
ljmp
dec
gs
lds
test
int3
add
jg
cmpsb
jg
lret
inc
dec
mov
sti
fs
sbb
jecxz
dec
mov
fiaddl
fiadds
xlat
cmp
int
int3
lcall
cmp
call
pop
fmull
insb
dec
xor
cmpsl
or
push
es
add
test
pop
xor
loop
in
and
imul
sbb
mov
mov
mov
sub
xor
mov
lret
and
mov
xor
test
xor
push
sbb
xchg
xlat
loope
imul
ljmp
push
nop
div
xor
cmp
cmp
dec
ja
xchg
test
mov
stos
pop
pop
sub
loope
loopne
stc
iret
cmpsb
nop
rolb
cmc
dec
jecxz
cmp
add
aas
xchg
adc
enter
and
jge
mov
sti
and
je
add
arpl
test
cmp
mov
cmp
fstpt
out
inc
xchg
das
fldl
jae
dec
je
mov
mov
inc
or
sbb
xor
popa
sub
outsl
ffreep
data16
push
int
mov
mov
sbb
add
ja
adc
ficoml
inc
pop
mov
imul
push
fisttps
fistpll
nop
mov
fnstenv
jg
jb
insl
jb
sbb
lods
sbb
pop
sbb
push
lret
add
mov
out
imulb
repnz
cmp
or
adc
push
mov
xor
movsl
pop
xor
out
movsb
inc
adc
andl
push
add
sbb
test
clc
pop
repnz
data16
es
sub
xchg
mov
insb
and
lods
insl
in
xchg
push
test
aad
push
or
movsl
js
jns
icebp
fcom
in
jno
pop
cmp
sar
pop
ja
jl
mov
cmpsb
jae
aaa
or
adc
xor
mov
dec
xchg
or
pop
jns
sti
pop
adc
mov
movsb
mov
sub
dec
insl
mov
dec
jp
mov
push
pop
xchg
mov
xchg
gs
jnp
loop
push
pop
pop
jno
in
das
cmp
mov
add
pop
and
xlat
inc
cmpsb
stc
jl
daa
add
cltd
mov
dec
scas
and
push
mov
insl
dec
jns
es
fistpll
popf
mov
ljmp
out
int3
inc
xchg
aam
jp
ja
adc
pop
mov
sahf
mov
jle
mov
cmp
fildl
repz
sub
xchg
leave
jecxz
sbb
and
out
jmp
or
sbbl
mov
leave
nop
jae
pushf
into
aas
ljmp
gs
xor
inc
and
outsl
sub
fstps
sub
popl
fadd
and
mov
es
js
dec
or
scas
dec
mov
repnz
lcall
les
sarl
divb
jnp
sbb
jns
shlb
les
mov
aad
cmp
xor
sahf
rcrl
mov
cltd
std
in
shrb
jmp
cs
dec
pop
ss
jmp
rcr
dec
test
mov
lock
pusha
stos
adc
movsl
jnp
je
pushf
xchg
xor
mov
sbb
fsubr
sbb
mov
iret
ss
dec
xchg
push
or
call
ret
dec
ja
rcrb
sub
lret
mov
dec
add
sub
rorl
lahf
mov
les
jb,pn
sub
into
lock
loopne
es
insl
es
and
mov
enter
inc
push
test
addr16
add
test
adc
loopne
sbb
jp
aad
pusha
fmuls
aam
ds
xlat
test
jp
and
push
cwtl
ret
mov
push
or
into
outsb
js
lds
xor
repnz
jp
out
pop
add
ss
loope
sub
mov
mov
mov
addl
cmpsl
call
bound
fmuls
leave
xchg
sub
sbb
add
in
and
mov
push
mov
incl
sub
pop
out
hlt
mov
mov
lods
in
sub
je
jnp
stc
aaa
je
icebp
mov
cs
andl
dec
pop
sahf
or
movsb
stos
mov
xor
enter
push
dec
shll
aam
lods
jp
jmp
es
cmp
xchg
sbb
int
leave
aam
inc
pop
mov
es
add
jne
jno
fiaddl
js
imul
test
inc
push
test
arpl
and
mov
or
lret
lock
dec
xor
mov
idiv
pop
xchg
or
ret
push
fs
jae
fcomps
repz
mov
loop
jae
jge
sbb
push
xor
push
push
cmpsl
push
push
inc
inc
mov
outsb
ret
sti
inc
sub
idivl
pop
mov
xchg
and
sub
dec
movb
xor
addr16
je
cs
xor
outsl
push
adc
jo
jnp
cmp
nop
jno
or
fdivr
inc
out
out
aam
xchg
add
or
lahf
fistps
subl
sub
gs
loop
cld
and
in
pop
iret
or
dec
clc
movsb
int
scas
mov
xchg
arpl
fstl
jmp
jae
fcompl
or
out
aam
mov
dec
out
xor
xor
andb
push
dec
sub
loope
aas
jl
cmp
pop
dec
clc
xchg
bound
es
pop
pop
cmp
sub
test
jne
aam
mov
cmpsl
jae
sub
pop
fwait
inc
cmp
add
cmp
call
pop
sti
and
imul
or
pusha
and
push
fcomp
xchg
inc
or
push
cmp
stos
je
repz
inc
dec
jl
clc
lods
mov
lret
xchg
jl,pn
push
xchg
and
mov
lahf
in
pop
and
rcrl
adc
mov
jecxz
ror
xchg
jmp
das
lea
loopne
xchg
jle
jo
push
jns
sub
adc
fldt
push
xchg
sbb
and
cli
shlb
xor
xchg
mov
xor
out
dec
push
mov
add
cwtl
lock
mov
out
stos
mov
lock
pop
inc
mov
pop
aam
sub
das
std
lods
pushf
mov
adc
jb
out
mov
rcll
mov
icebp
out
adc
in
cmp
or
jecxz
xlat
divb
dec
push
into
lods
inc
or
xchg
repz
fnstenv
insb
sub
pushf
mov
pop
mov
and
xor
jg
pop
out
push
fstpl
mov
mov
ljmp
or
push
fdivs
or
fisttpl
shlb
clc
popf
adc
cld
loop
jge
nop
fnstsw
jbe
fimuls
lret
jl
lock
dec
pop
adc
cli
rcrb
mov
pop
pop
xchg
icebp
and
cli
es
jmp
pusha
enter
xor
mov
add
jecxz
int
loopne
les
dec
insb
cmp
cwtl
fistps
push
xchg
imul
jle
jb
enter
mov
lods
or
mov
cs
sbb
dec
xor
sbb
cmp
jecxz
outsl
jmp
push
jmp
fnstcw
mov
xchg
lea
lock
lcall
mov
pop
orl
sbb
fimull
sahf
pop
in
lret
in
pop
andb
dec
orl
ror
push
imul
cmpsl
jno
mov
xchg
test
std
mov
movsl
jg
dec
inc
in
imul
add
roll
mov
mov
scas
xchg
xlat
mov
nop
das
sbb
fldcw
sbb
jge
mov
jb
data16
clc
addr16
add
pop
gs
idivb
mov
and
xor
hlt
fstp
jge
lahf
pop
xor
pop
pop
adc
xchg
test
cmp
test
inc
jae
decl
aas
adc
lcall
inc
fists
out
sub
and
mov
int3
pop
stc
int3
xor
sbb
and
cwtl
subl
mov
push
push
inc
and
mov
push
jge
into
adc
and
test
lods
mov
pop
jl
pop
xchg
popf
ja
push
pop
fistpl
andb
leave
jp
scas
call
out
dec
out
mov
lock
adc
sub
imul
inc
loope
pop
nop
in
sub
call
push
lcall
sub
and
jp
outsl
and
push
inc
in
or
stos
adc
xchg
fnstcw
jbe
sbb
cmp
mov
clc
and
xor
pop
and
mov
imul
iret
pusha
jb
ss
sahf
add
add
xlat
mov
cmp
enter
lods
and
pop
and
xor
xor
arpl
dec
jg
dec
jle
stos
or
iret
cld
insb
adc
xor
dec
add
bound
xor
xchg
push
lods
cld
jl
push
icebp
mov
ret
daa
lock
fwait
stos
stos
test
pop
dec
jp
and
pop
insl
or
adc
mov
pop
mov
shrw
mov
pop
or
mov
xchg
jecxz
shll
popf
adc
dec
xor
xchg
pop
adc
ljmp
sbb
fstps
fwait
mov
mov
das
inc
mov
fidivrs
stos
jb
jnp
out
mov
loopne
mov
les
lea
mov
les
mov
pop
lods
cmpsl
xlat
hlt
imul
int
insb
int
nop
push
stos
ficomps
scas
push
lcall
clc
xorl
jbe
mov
dec
aas
in
movsl
popa
jmp
push
out
mov
das
push
leave
and
add
dec
xlat
jge
mov
iret
les
imul
test
cld
sbb
and
jecxz
or
adc
xchg
mov
pop
out
aas
loop
mov
cltd
loope
push
xchg
mov
outsl
clc
daa
js
ja
inc
sbb
or
imul
les
adc
cmpsb
test
insl
mov
orl
pop
shrb
out
scas
xlat
dec
scas
call
adc
inc
lock
mov
xor
xor
push
push
mov
dec
sbb
out
push
pop
lret
lret
pushf
mov
mov
outsb
loope
dec
xor
cld
pop
mov
outsl
orl
mov
jne
lock
mov
shlb
fldl
in
push
stos
lret
outsl
pop
xchg
dec
ds
pop
vmovq
insl
loop
sbb
icebp
cltd
js
scas
dec
sbb
add
mov
and
or
fwait
jbe
stc
shr
xor
mov
push
popf
inc
jae
sbb
cmpsb
addr16
les
jmp
out
jecxz
cmpsl
cmp
or
leave
rcr
lods
jbe
add
pop
add
popa
mov
fisubrs
pop
repz
jbe
fwait
insl
fisttpl
and
lds
mov
aad
mov
sbb
push
push
sarb
pop
pop
or
icebp
jnp
add
pop
dec
pop
cmp
mov
sub
cli
mov
cmc
add
cmp
sar
sub
lods
mov
and
ss
inc
lcall
cmp
xor
rolb
add
sbb
sub
adc
mov
and
and
add
cld
sarb
adc
in
adc
in
mov
fwait
shll
jecxz
movsb
lock
mov
out
xchg
andb
scas
daa
enter
in
xor
xchg
xchg
fadds
call
gs
loopne
mov
pop
ds
xchg
ja
mov
sub
push
ret
mov
ja
xor
push
sub
push
push
dec
shlb
imulb
popf
xor
push
fnstenv
or
mov
sbb
jmp
jmp
out
sbb
jnp
or
insb
or
sbb
pushf
sub
out
xor
stos
xchg
orb
bound
sbb
sub
in
shll
mov
cwtl
arpl
ret
hlt
sbb
xor
ret
int
mov
leave
and
pop
pop
xor
mov
pop
dec
jno
iret
adc
push
adc
push
push
inc
mov
into
fsubr
nop
and
jns
jns
mov
shl
dec
daa
xlat
jge
fstps
xchg
sub
out
jl
fldt
outsb
push
lret
dec
cltd
add
cmc
jno
je
pusha
sub
out
xchg
sbb
sub
aaa
xor
xchg
cs
mov
loopne
xor
pop
sbbb
add
cmp
adc
bound
xlat
push
mov
pop
jnp
and
lcall
aas
lods
xchg
pop
lock
addr16
and
sahf
das
cs
mov
sbb
push
and
pop
lea
xchg
out
ss
mov
add
and
ja
xor
negl
sbb
sub
into
xor
int3
or
fisttpll
xchg
mov
shl
lret
fdiv
dec
and
fsubr
pop
bound
add
lods
dec
mov
mov
mov
lods
mov
inc
mov
adc
dec
add
pop
paddq
shlb
je
xchg
cmp
push
pushf
add
push
fs
testb
dec
daa
incl
aas
ret
dec
adc
flds
daa
inc
xor
testl
jo
in
pusha
out
pop
sbb
jae
mov
rorl
mov
outsl
addl
add
cmpl
fwait
jb
jl
jnp
loope
ret
andb
add
xchg
adc
push
fwait
push
mov
fucomip
cmp
xor
or
movsb
mov
adc
mov
sub
jp
int
out
mov
mov
in
mov
or
test
imul
mul
cltd
cmp
mov
mov
leave
xor
push
je
add
sub
add
pushf
add
cwtl
sub
mov
orl
adc
fstpt
arpl
mov
push
imul
mov
pop
cmp
inc
inc
or
sub
inc
ljmp
xor
adc
fldl
push
aas
hlt
mov
adc
push
jp
cmp
sub
mov
out
lret
jge
lods
cli
jmp
xchg
sub
cmp
ret
dec
les
mov
lret
ds
arpl
ss
inc
pop
lcall
cli
pop
cmp
es
dec
add
repnz
lret
inc
cmp
stos
loopne
imull
or
mov
xor
lock
in
jb
pop
iret
and
xchg
pushf
jae
mov
adc
fcomp
mov
cmp
jno
xor
jns
mov
movsb
insl
pop
adc
cmp
sub
stos
push
int
inc
shlb
inc
popf
nop
ds
outsb
sbb
sbb
ficoml
add
int3
jbe
push
sbb
push
int3
inc
cmp
jg
sbbl
clc
cs
mov
lcall
mov
xchg
pop
sub
test
mov
minps
loop
xchg
movsl
pushl
sbbb
aad
or
and
jge
icebp
call
stos
es
add
cmp
mov
mov
insb
dec
adc
in
xchg
dec
iret
cmpsb
mov
pop
ficoms
js
adc
std
bound
stc
adc
add
sub
sub
data16
push
push
xchg
cs
mov
mov
xor
xor
test
mov
and
cmp
bsr
lret
mov
les
push
cld
xchg
out
push
aaa
test
lods
icebp
fcmovnb
ret
negb
mov
fcomps
cmp
xor
jo
push
out
dec
or
aam
shlb
cmpb
or
cwtl
notb
push
dec
jnp
add
xchg
adc
xor
jae
add
push
mov
sbb
and
loopne
sbb
ret
in
jmp
enterw
adc
cmp
cmpsb
pushf
into
testb
xor
lods
popa
inc
xor
lahf
xchg
imul
sbb
pop
push
sub
gs
mov
xlat
mov
cmp
jnp
das
xor
scas
lcall
xchg
jmp
notb
fcom
inc
cmc
das
data16
add
xchg
fsubrl
pop
and
das
cmpsb
sbb
cmp
jmp
mov
jmp
icebp
xchg
lds
push
rcll
add
cwtl
add
sub
sub
test
inc
stos
sahf
loop
and
fbld
pop
jnp
stos
pushf
movsb
jb
mov
hlt
rolb
xchg
loopne
sub
sahf
in
push
insb
and
popa
idivl
or
push
adc
rolb
sbb
ret
ret
jg
cmpsb
add
and
jo
mov
dec
add
jbe
mov
cld
xlat
or
mov
popa
xchg
jae
add
imul
outsl
add
mov
sbb
movsb
and
jo
ror
testb
add
mov
movsb
inc
outsl
inc
cmp
xchg
lahf
pushl
mov
sbb
adc
dec
sbb
leave
jb
ds
faddp
insl
je
pop
add
int3
filds
mov
mov
shlb
push
xlat
dec
test
addl
daa
jo
fbstp
xchg
dec
and
ljmp
pop
or
cltd
stc
mov
xchg
lea
pop
fisubl
cmp
sub
push
fnstenv
jns
hlt
adc
sar
daa
es
mov
sbb
mov
sub
fstps
push
push
xchg
and
add
notb
dec
xacquire
lahf
insl
lret
mov
shlb
sub
cwtl
out
or
and
sub
push
ret
push
les
pop
sarb
notl
fucom
mov
mov
pop
jmp
int
xchg
addr16
jp,pt
imul
sbb
fidivl
sbb
mov
popf
and
adc
repnz
cmp
inc
push
js
pop
xchg
add
mov
je
hlt
imul
lds
lahf
mov
pushf
addps
mov
cwtl
test
sbb
lcall
dec
add
mov
call
lods
or
adc
inc
movsl
mov
ss
adc
jb
andb
hlt
sbb
out
pop
sbb
sbb
add
dec
sub
insl
ror
dec
repnz
push
cmp
jge
mov
int3
aas
xchg
aam
test
push
cmp
sarb
repz
adc
rolb
xchg
rol
and
sbb
loop
sti
pushf
nop
mov
rep
in
inc
sub
mov
or
lods
cli
cmpb
inc
shlb
xchg
add
sbb
sar
mov
enter
int
ljmp
xchg
lea
lea
and
hlt
fwait
imul
xor
pusha
mov
xchg
xor
sub
icebp
fnstenv
aas
mov
add
loopne
add
aaa
cmp
lret
jle
ja
lcall
add
int3
pop
inc
icebp
sahf
mov
or
mov
inc
and
mov
gs
cmp
out
scas
call
sub
sub
add
xchg
movsb
scas
sbb
cmc
push
jecxz
adc
mov
mov
sbbl
inc
inc
scas
adc
nop
sub
leave
imul
jl
push
mov
sub
test
cltd
cmpsl
lahf
jmp
lock
mov
into
fwait
jmp
popa
imul
adc
push
sahf
inc
dec
mov
dec
and
fwait
das
ds
sbb
mov
popl
sbb
mov
loopne
dec
add
mov
das
push
lret
push
mov
in
xor
fwait
xchg
push
xchg
or
out
sub
call
int3
push
jnp
leave
xor
dec
pop
adc
je
xchg
pop
xchg
lret
scas
push
icebp
lahf
imul
mov
loope
shlb
jp
testb
and
mov
xor
push
push
dec
negb
out
jl
cmp
inc
and
push
or
aaa
jge
ror
int
xor
sarl
dec
addr16
and
add
dec
in
xchg
mov
in
jbe
push
cmc
pop
mov
mov
mov
mov
decl
or
mov
mov
bound
sti
and
and
push
inc
jecxz
ss
lods
iret
jnp
hlt
xor
into
loope
ret
popa
cmc
insb
ds
push
push
pop
hlt
jmp
mov
cltd
mov
jbe
mov
jnp
inc
pop
test
cli
test
out
jge
mov
add
ss
cmp
xchg
push
or
cmc
and
daa
scas
xchg
push
clc
mov
lea
popf
adc
dec
lock
ret
out
sbbb
lea
mov
xor
sarb
out
fcmove
jo
adc
adc
cmp
fdiv
mov
aam
pop
inc
in
gs
divl
sub
sub
in
cmp
dec
sbbb
jae,pt
mov
push
push
xchg
add
xchg
ficoml
sbb
xor
in
pop
push
mov
cmc
bound
adc
mov
dec
shll
or
repz
gs
out
sub
lods
mov
pop
arpl
sbb
xchg
jmp
cwtl
out
jne
or
inc
mov
je
sbb
push
sbb
jge
push
aam
sti
jae
pop
aad
lret
or
or
xlat
mov
mov
cmp
lcall
push
or
jecxz
sbb
jbe
test
popa
mov
xchg
push
xor
aas
sbb
pushf
jne
movsb
xchg
push
ficomps
mov
and
xchg
adc
jle
lock
nop
pop
lea
cmp
inc
loopne
sahf
call
inc
repnz
jnp
xor
data16
in
cmpsl
mov
in
das
sbb
and
add
fdivrp
jae
cmpsl
sbb
mov
and
fwait
push
xchg
jmp
adc
mov
push
pop
mov
je
cli
jle
mov
fs
sub
inc
xchg
sub
pushf
mov
jle
xor
or
pop
cmp
fdecstp
jo
idivb
or
mov
mov
sbb
and
mov
push
fmulp
adc
jecxz
int
xor
decl
add
sbb
outsb
or
je
stos
bound
mov
push
pop
aad
ds
cmp
xor
and
outsb
cmpsb
popf
hlt
adc
out
lea
cmp
xchg
mov
cmp
mov
pop
push
mov
lahf
repz
inc
mov
mov
xchg
sbb
mov
aaa
inc
imul
dec
jno
and
and
inc
mov
cmp
rol
les
xor
inc
into
push
daa
loop
outsb
ja
es
mov
dec
int3
jl
pusha
rcll
mov
xchg
inc
jge
aas
push
adc
sbb
cld
divl
outsl
mov
in
lret
movsl
inc
test
cmp
stos
inc
jnp
lock
cmp
out
dec
jns
sub
stc
in
adc
movsb
pop
push
rorb
mov
iret
ja
dec
jb
movsl
pop
std
inc
mov
aad
xchg
push
sti
lods
dec
pusha
jb
xor
int3
lds
flds
mov
rcll
jg
mov
stos
inc
mov
icebp
shlb
and
xchg
out
aas
and
arpl
dec
xchg
inc
add
adc
out
sub
inc
jge
pause
imul
fistl
sub
add
out
sub
mov
add
ds
inc
cmpsl
loop
out
sub
or
rolb
jbe
loopne
mov
jmp
xchg
push
mov
insl
adc
sbb
mov
mov
mov
nop
adcb
das
and
push
push
shl
loope
lock
cmp
les
addl
imul
movsb
push
mov
mov
leave
adc
xor
cmpsl
test
shl
push
cmp
add
lods
imul
sarl
mov
aas
loopne,pn
push
loopne
adc
mov
or
mov
xchg
pop
pop
rorl
outsl
jp
xchg
adc
dec
xor
mov
addr16
gs
ljmp
xchg
add
movsb
movl
movsl
scas
mov
sbb
push
jmp
mov
cmpsl
popa
dec
cmp
imul
push
adc
sbb
out
das
sub
sbb
mov
mov
add
stc
push
mov
and
je
icebp
xchg
dec
jle
psrld
imul
cmpsb
cmp
and
sub
xchg
loope
push
push
idivb
or
xchg
add
inc
and
mov
add
scas
jno
dec
hlt
xchg
cmp
mov
cmc
pusha
mov
scas
fnsave
sub
adc
pop
add
pop
add
push
mov
out
ljmp
and
scas
insl
into
sbb
cs
stc
jle
inc
imul
rclb
shl
mov
jb
jmp
mov
inc
loopne
outsb
cs
fsubs
les
icebp
repz
lods
or
ss
scas
inc
push
push
cld
outsb
xor
stos
fadd
test
mov
dec
sarl
aaa
sub
stos
repnz
fildll
cmc
dec
loop
or
sbb
mov
jns
and
jmp
sub
cmp
inc
jo
stos
xor
xor
into
mov
sub
inc
ror
add
xor
sahf
aad
inc
stc
pusha
insl
pop
jl
pop
pop
sarl
dec
xor
or
pop
xchg
ljmp
and
mov
add
shlb
jno
idivl
mov
cmp
jb
cmpsl
lods
cld
lahf
loope
daa
push
dec
insb
out
sbbl
and
xchg
imul
sbb
outsb
lds
shll
push
jb
fidivs
filds
mov
sbb
addb
adc
fwait
or
divb
out
jne
add
cli
push
stc
pop
inc
pop
jno
sbb
mov
stos
insl
and
or
push
mov
mov
push
dec
xor
mov
sub
sbb
mov
push
iret
stos
jle
cmp
in
push
jo
xor
fdivr
fiaddl
lcall
cs
scas
sub
stos
mov
cmpsb
sbb
sub
jae
jno
stos
aaa
test
jle
stos
dec
movsl
sbb
mov
int
arpl
xor
and
pusha
adc
test
pusha
mov
test
daa
fucom
ds
mov
bound
es
daa
push
xchg
mov
mov
dec
cmp
dec
cmpsl
jmp
fiaddl
cltd
jae
xchg
cmc
or
or
scas
pushl
das
mov
ja
lcall
inc
lahf
pop
cmp
outsl
jbe
rclb
clc
and
push
push
mov
fnstenv
fsts
cmp
jo
iret
mov
icebp
dec
mov
jns
insb
setle
lods
fwait
aas
inc
fisubl
les
sbb
test
jbe
loopne
adc
es
adc
dec
dec
inc
jo
push
shlb
push
xchg
mov
addl
xor
mov
mov
test
ds
scas
outsb
push
mov
mov
sar
fmuls
dec
fisttpll
pop
rclb
add
sbb
push
fwait
iret
inc
ud2
mov
sbb
enter
into
mov
and
sbb
sub
add
lret
pop
cld
jmp
insl
repnz
pop
mov
mov
repnz
gs
data16
enter
sbb
scas
push
push
dec
xchg
or
out
pop
stos
inc
movsb
dec
sub
lods
xor
or
jmp
adc
adc
es
dec
int
rcl
in
daa
mov
pushf
cli
xchg
and
dec
mov
outsb
xor
sbb
sti
and
mov
push
pop
cwtl
sti
jle
sbb
add
cwtl
mov
ret
test
icebp
nop
enter
dec
push
inc
lea
jo
sahf
into
add
scas
xchg
addr16
mov
dec
lods
push
subb
mov
add
xchg
sub
arpl
mov
popf
mov
out
mov
push
sub
test
idivb
jnp
ret
xor
scas
mov
insb
xor
adc
les
test
inc
sti
imul
loopne
gs
jnp
push
test
adc
bound
add
sarl
sbb
sahf
jnp
aaa
ret
daa
pop
lret
js
repz
add
test
in
iret
and
movsb
and
pop
push
or
add
into
lcall
es
and
mov
data16
pop
out
mov
sub
mov
push
sarl
mov
mov
rcrl
jno
pop
sahf
cmp
sub
sbb
popa
cld
aad
xor
pop
std
sub
mov
pop
adc
xchg
mov
jmp
loope
jnp
faddl
or
push
cmpsl
xor
push
loope
mov
push
adc
add
cmpsb
and
mov
inc
int3
lds
cwtl
jl
out
std
je
out
push
pop
mov
enter
or
aad
jmp
mov
dec
daa
sarb
test
je
cmp
adcb
adc
adc
add
dec
mov
das
in
inc
mov
mov
scas
mov
gs
iret
pushf
mov
cmpsl
test
ret
fadds
scas
jecxz
addr16
arpl
sub
cmp
or
popf
out
mov
scas
or
pop
and
lods
lahf
mov
sbb
jl
gs
mov
mov
and
mov
cmp
sub
inc
lcall
and
sbb
in
xor
jnp
jno
pusha
mov
push
xor
loop
adc
jno
pop
sbb
popf
int
adc
adc
mov
ja
int3
ja
ja
lods
push
mov
jmp
jo
inc
movsl
lret
outsb
mov
sub
xor
jecxz
jle
andl
mov
icebp
mov
jge
lcall
or
orb
mov
pop
xchg
pop
pushf
ret
pop
ja
cmp
push
orb
pop
jns
jb
xchg
lea
outsb
test
push
movsb
dec
jg
repnz
in
imulb
cmpl
lock
adc
adc
mov
fucomip
sbbl
stc
jns
xlat
xor
lret
decl
shl
pop
test
aad
push
fsubr
mov
cmp
jae
mov
pushf
sbb
aas
sbb
mov
add
mov
in
cmpsb
add
xor
jns
mov
iret
mov
in
inc
ret
or
je
xor
movsb
mov
lret
loope
mov
fs
out
into
out
adc
fstl
aam
inc
dec
addb
mov
mov
enter
or
mulb
push
adc
push
cwtl
stos
out
loope
lods
test
icebp
add
fs
out
mov
fs
inc
or
push
aad
dec
mov
and
inc
jae
adc
mov
sbb
pop
mov
sti
pop
dec
fisubs
hlt
sti
pop
xor
and
cmpsb
subl
sti
jbe
push
lock
jmp
mov
inc
fdivrp
out
cmp
dec
fs
rorl
or
dec
xorb
cld
xchg
xchg
test
adc
xchg
mov
mov
out
mov
sub
adc
insb
into
mov
leave
or
jno
or
into
cld
imul
dec
xchg
fs
roll
pop
inc
jbe
and
cmpb
cmc
sbb
xchg
jns
gs
fcomps
mov
cmp
pop
ljmp
or
sub
sbb
jno
mov
stos
aam
push
cltd
cld
mov
testb
loop
mov
add
jle
in
in
icebp
clc
dec
xchg
inc
mov
cwtl
mov
jl
flds
orl
sbb
sbb
mov
jnp
fdivrl
push
dec
rcr
cli
cmp
stc
and
rcl
push
mov
cmp
mull
int
pop
push
adc
enter
adc
sbb
repz
cmp
fwait
inc
test
out
out
filds
xchg
or
je
out
cmp
repz
data16
cmpsl
push
out
je
mov
push
adc
cmpsl
lcall
rcrb
cmp
jae
dec
add
mov
outsb
or
sbb
leave
jecxz
and
sub
idiv
icebp
in
dec
fsubp
jle
mov
xchg
sbb
inc
fs
movsb
cmp
cmpsb
pop
out
cltd
or
push
sub
or
or
push
adc
roll
in
push
sbb
iret
icebp
enter
adc
sub
adc
mov
shlb
insb
scas
fimull
testb
fsubl
mov
shlb
call
pop
xchg
push
push
mov
das
lods
scas
inc
or
or
jg
in
in
adc
clc
mov
adc
sbb
sti
jmp
les
fiadds
popf
sbb
push
dec
nop
push
rcrl
push
mov
incl
xchg
pop
push
fstpl
mov
mov
cs
sub
rclb
push
add
in
mov
jle
into
pop
mov
mov
enter
push
cmc
sub
add
pop
into
jcxz
clc
push
scas
out
push
xchg
add
shll
mov
leave
shlb
jne
ds
xor
add
mov
xlat
fs
movsl
cmpsb
orl
mov
test
mov
mov
or
insl
in
mov
fsubl
pop
dec
push
mov
roll
mov
sbb
and
adc
xchg
cld
cmp
mov
jge
mov
out
sub
popf
dec
push
mov
test
mov
jp
xor
jne
dec
mov
xor
push
es
mov
cmp
shrb
pop
sbb
bound
inc
movsb
xchg
jmp
test
aaa
inc
outsl
lret
fildl
aas
jae
xchg
adcl
ret
in
lods
jo
or
inc
pop
mov
inc
fidivs
or
xchg
push
ret
lods
fs
xchg
movl
lods
rcl
add
fisubs
repz
stos
inc
std
xchg
add
sub
aam
pop
and
sub
xor
aas
dec
dec
jb
dec
cmp
stos
in
fiadds
shrl
mov
arpl
dec
inc
pop
ror
push
ss
pop
ss
int
cmp
xchg
sbb
push
jge
push
dec
add
or
cwtl
mov
ss
sub
pop
xor
outsb
dec
movsb
jbe
pop
into
cmp
fists
pop
jp
pop
jo
lods
and
push
and
inc
xor
sbb
and
fcompl
dec
sub
and
outsb
fcoml
and
and
imul
sbb
or
lret
das
fnstsw
outsb
xor
cmp
sub
push
inc
inc
fs
dec
mov
jb
or
ret
addr16
mov
xchg
and
loop
sbb
dec
mov
push
test
pushf
subb
lret
jmp
mov
popf
aaa
test
pusha
lds
rolb
out
inc
test
mov
pop
cmc
rcrl
mov
cmovp
push
loop
repnz
jbe
fiadds
in
fs
rcl
hlt
dec
mov
pushf
js
xor
ja
add
xchg
shlb
popf
ret
xor
fadds
inc
fwait
lret
mov
or
xchg
je
ljmp
repz
push
jae
cmp
pop
lahf
mov
test
in
jg
jg
cmpsb
jg
sbb
mov
leave
shlb
jp
xor
cmp
popl
std
jecxz
xchg
cmp
mov
clc
ss
or
pop
xchg
pop
mov
pop
subl
insb
sbb
xchg
data16
xchg
jae
jle
mov
mov
xlat
mov
es
xor
fwait
stos
ss
outsl
pop
and
lahf
test
icebp
and
xchg
nop
mov
loop
lds
xorb
std
and
ja
push
push
add
pushfw
or
mov
xor
add
nop
mov
insl
fists
xchg
mov
cmp
jbe
cmp
cmp
fistpl
or
int
cmp
nop
sti
jp
rcll
test
cmpsb
mov
cmp
clc
mov
icebp
test
pop
pop
fdivrl
rclb
xor
imul
inc
and
mov
clc
divb
pop
pop
push
push
or
jns
adc
mov
fwait
add
lods
fmull
ret
leave
popa
aaa
cld
scas
pusha
fmuls
cmp
mov
xor
nop
into
addr16
xor
add
mov
jnp
pop
jne
loopne
mov
xchg
ljmp
adc
lods
dec
xlat
push
mov
push
in
enter
fwait
shrb
cmp
lret
icebp
test
and
sbb
lock
lea
push
cmp
loopne
or
pop
pusha
and
hlt
leave
push
cmpsb
jmp
dec
push
mov
jle
xchg
xor
cld
sub
dec
in
test
sbb
mov
dec
push
pop
scas
inc
out
mov
adc
push
outsb
daa
dec
lods
sarb
leave
and
sbb
stos
or
dec
into
mov
shll
and
pop
divl
push
pop
and
add
push
sub
mov
dec
push
loope
mov
js
call
rclb
add
inc
stos
mov
cwtl
incb
mov
add
data16
fidivs
rolb
mov
ficoml
aaa
jae
pop
mov
es
sbb
adc
xchg
and
scas
data16
xchg
fcoml
xchg
pop
sbb
dec
aas
mov
pop
clc
sahf
sbb
ret
movsl
cmp
add
jns
out
aad
sub
mov
lods
fbstp
aaa
dec
push
inc
lret
sbb
mov
cmc
mov
push
xchg
lods
cmp
add
dec
xchg
decl
sti
jge
adc
arpl
jbe
jmp
dec
popf
rcll
push
das
int
xorb
xchg
in
sub
dec
fndisi(8087
out
cmpsl
sbb
lret
pop
adc
push
xor
push
scas
dec
leave
add
inc
sbb
xor
fdivrl
aaa
xor
outsb
movsl
add
push
outsb
mov
jmp
sub
adc
dec
add
mov
imul
cmp
movsl
dec
adc
fs
xlat
adc
mov
dec
std
clc
jle
aam
daa
push
cmp
push
int
mov
xor
in
aad
mov
fs
jnp
aam
pop
cs
push
sti
in
insb
enter
movsl
push
sbb
cmp
jno
inc
jbe
ficoml
mov
cltd
or
push
lret
fsubrl
jle
push
out
int3
mov
mov
cltd
shll
outsb
pop
int
or
add
popf
sbb
mov
xor
mov
mov
mov
xchg
ret
xor
jle
ret
or
push
inc
lds
cltd
jp
or
cltd
popf
push
int3
inc
mov
imul
inc
xchg
into
xchg
push
fmull
mov
jns
jne
pop
pop
jecxz
or
sub
testl
inc
cmp
xor
nop
jp
jo
fsubrl
and
sub
or
jo
pop
pushf
shlb
mov
rolb
or
mov
fcompl
adc
xor
xchg
adc
adc
mov
cld
sar
mov
pop
sub
inc
js
mov
dec
or
mov
pop
add
rcrb
fisttpl
repnz
or
adc
jb
fidivl
xor
jbe
mov
or
and
pusha
add
mov
mov
pop
out
enter
adc
mov
mov
push
pop
lret
in
mov
mov
push
xorl
push
popf
jle
jmp
or
shll
jmp
mov
aad
and
idivl
popf
aaa
roll
fwait
std
cld
clc
jle
fnstcw
jbe
cmp
xchg
ss
jg
cmp
fucomi
jl
jne
popa
in
mov
pop
test
out
fwait
dec
stc
lahf
addr16
hlt
pop
pop
mov
faddl
insl
dec
ret
ret
stos
or
push
pushf
push
push
iret
sub
cwtl
arpl
jle
stos
cltd
xchg
adc
fsubl
mov
imul
push
or
mov
data16
inc
xlat
loop
outsb
test
pushf
or
xchg
cs
xchg
mov
dec
cmp
adc
push
cmp
mov
outsb
lcall
jb
shll
jl
ljmp
popa
shr
or
in
sbb
mov
call
mov
push
pop
out
insb
jmp
inc
outsl
testb
test
movsb
les
mov
dec
fsqrt
ret
pop
shlb
inc
jnp
jo
adcb
dec
inc
bound
shrb
or
loope
insl
jmp
mov
jmp
cmpsl
cld
ret
jmp
jg
ret
aad
fs
inc
ss
jle
cmp
jg
sub
jnp
xchg
clc
shr
dec
out
jb
mov
cld
iret
dec
mov
aam
outsb
in
shlb
fwait
push
shl
dec
dec
scas
imul
xor
dec
arpl
dec
pop
pop
int3
das
hlt
popa
mov
sbb
fsubp
orl
mov
add
scas
insb
xor
and
mov
inc
lret
xlat
push
and
gs
xor
xchg
push
popa
mov
jb
mov
jle
imul
sbb
xchg
inc
out
jo
lahf
inc
call
add
xor
jne
adc
iret
add
mov
mov
leave
data16
pop
adc
xchg
jne
cmc
jne
adc
rcll
cmp
mov
lahf
cltd
dec
and
push
insl
mov
lea
xor
fsubl
cltd
repnz
mov
or
fisubs
jmp
mov
in
ds
mov
xchg
or
inc
int
loopne
inc
shrb
aam
jp
je
jl
outsl
insb
mov
loop
push
jns
mov
sbbl
xorb
xor
sbbb
pusha
pop
movsl
sub
test
movsb
mov
mov
mov
nop
dec
add
mov
pop
or
mov
aaa
add
jno
sti
sbb
sbb
scas
xor
fsub
sub
out
mov
dec
sub
push
mov
jae
adc
jae
pop
scas
xchg
mov
adc
imul
xchg
lahf
pop
clc
dec
jle
mov
or
xor
call
push
and
jno
mov
or
inc
imul
dec
jb
lea
aad
and
mov
lds
mov
lahf
pavgw
inc
pop
dec
and
push
add
sbb
les
dec
dec
push
cmpsb
das
repnz
in
imul
test
sbb
and
jno
scas
add
int
adc
jo
scas
pop
imul
add
scas
mov
pop
daa
cmp
in
cmp
push
pop
fcmove
lahf
mov
jb
call
bsr
add
mov
mov
cltd
push
outsb
inc
lods
aas
mov
add
cli
push
jg
and
ss
jbe
push
lret
inc
lret
cmp
stos
and
mov
xchg
scas
enter
or
je
mov
repz
nop
add
add
pushf
ljmp
es
inc
fdivs
cmp
adc
mov
daa
ret
in
int
imul
adc
add
xchg
push
hlt
mov
push
popa
daa
mov
in
and
and
add
jbe
popf
dec
js
jno
push
addr16
les
mov
or
add
push
xchg
xchg
movsb
jnp
fistpl
add
pop
mov
bound
lods
rol
push
cwtl
cmp
inc
movsb
or
adc
or
cmp
stos
xchg
andl
testb
pop
ja
dec
into
mov
xor
dec
jl
lds
pop
loope
cmp
fsubs
mov
loope
stc
mov
ret
inc
addb
inc
repnz
xor
mov
push
in
or
in
into
bound
adc
or
lods
out
mov
js
adc
mov
add
popf
sub
daa
adc
xor
data16
sub
cmpsl
int
jb
push
test
jbe
iret
call
inc
jecxz
out
enter
sbb
stc
dec
xchg
jp
adc
cld
dec
aad
xchg
int
loop
mov
roll
pop
fcmovnbe
inc
jns
lcall
or
pop
aaa
mov
das
in
jnp
aas
and
jo
xchg
insb
or
std
mov
ret
roll
pushf
in
cmp
insl
xchg
cmc
add
xchg
or
mov
jnp
dec
mov
rcrb
lea
sub
pop
sahf
mov
add
inc
push
xchg
add
mov
or
dec
fnstsw
cmp
dec
std
jae
scas
pop
rcr
push
mov
dec
stos
clc
stos
mov
adcb
fdivrp
aam
ss
jbe
mov
mov
jne
mov
pop
mov
nop
cltd
ficomps
mov
sbb
adc
mov
insb
addr16
aaa
daa
push
adcb
movnti
pop
xchg
cmp
push
cmc
sub
imul
pop
adc
imul
adc
pusha
ret
xchg
jmp
jl
insl
sarl
sbb
xchg
into
xor
add
mov
insl
insb
push
cmpsl
xor
xor
out
fdivrs
and
or
xor
or
movb
push
gs
ljmp
or
cmpsl
cld
mov
daa
xchg
aad
cwtl
push
lcall
push
push
cmp
psrld
sub
and
es
lret
sarb
xor
lods
mull
hlt
std
ret
adc
cmc
mov
jecxz
cmovnp
xchg
sub
addb
fmul
hlt
cmp
fdiv
dec
mov
mul
jb
push
aam
sbb
pop
int3
inc
and
pop
lds
lahf
dec
pop
lahf
aam
mov
or
pop
pusha
dec
jne
fdivs
sub
daa
mov
jl
insl
jnp
out
mov
roll
icebp
cmc
in
sbb
iret
mov
test
movsl
or
pop
jo
pop
inc
sbb
jl
push
or
xchg
or
lds
mov
cmpsb
sub
test
ret
push
int
ja
jns
push
sbb
jl
mov
mov
aad
pop
fwait
pop
rclb
pop
movsb
out
mov
jbe
cmp
xchg
xchg
mov
fidivl
sti
call
les
push
xchg
jmp
push
sbb
into
cmp
add
add
or
jle
sbb
xchg
pusha
pop
mov
into
push
repnz
or
fwait
cmp
shll
pop
scas
cli
dec
mov
sbb
sbb
pop
sub
or
jecxz
or
jno
cmc
push
fcompl
jecxz
mov
xor
flds
popf
ret
add
cmpsb
inc
jno
std
mov
lcall
in
hlt
stos
mov
and
bound
or
push
ljmp
sbb
std
int3
sbb
inc
clc
mov
rol
std
and
ja
in
mov
mov
bound
roll
sub
jae
scas
jns
or
mov
mov
hlt
dec
sub
or
cmp
jle
lea
or
pushf
inc
and
inc
in
repnz
mov
xor
out
leave
inc
pop
leave
mov
adc
adc
pop
jne
pop
shll
cmp
fiaddl
rclb
xchg
pop
sbb
loopne
mov
int
pop
and
aaa
arpl
xchg
push
push
iret
pop
xchg
popf
mov
aas
jns
or
in
pop
dec
ret
adc
add
sub
pushf
out
sbb
push
mov
xor
push
in
fs
inc
leave
out
xchg
inc
pop
loop
mov
jge
fsubs
pop
ja
mov
aas
repz
adc
or
xor
mov
adc
xchg
push
ja
inc
jno
lock
mov
jo
add
push
mov
or
shlb
in
jecxz
jo
xchg
cli
mov
mov
jle
cmp
es
and
test
shlb
inc
rcll
jo
sub
lret
sub
ret
out
lahf
mov
and
mov
sub
inc
jns
mov
int3
add
jge
aam
cmp
jecxz
add
sahf
fcoms
mov
es
cltd
push
mov
out
arpl
jno
arpl
pusha
add
cld
pop
jae
int3
adc
mov
inc
enter
sarl
sbb
je
aas
sbb
add
or
fisubl
lahf
stos
imul
or
call
dec
arpl
iret
lar
or
xor
stc
fildll
aaa
rcll
sub
adc
and
sub
add
jne
out
mov
scas
sti
movsl
outsb
adc
push
adc
mov
in
enter
sub
ret
pushf
ljmp
mov
or
imul
sahf
xchg
xlat
add
jae
out
inc
adc
push
dec
pop
mov
pop
xchg
xor
loope
mov
test
mov
ds
out
xchg
das
push
orb
dec
lds
cmp
ficomps
test
dec
rol
lret
xlat
push
or
fldl2t
jo
inc
jl
pop
iret
mov
inc
jno
gs
sbb
inc
gs
fwait
iret
sbb
jl
out
pop
gs
or
call
aad
xor
dec
xchg
push
mov
cmp
pop
pushf
jns
mov
mov
sub
jnp
xor
popf
iret
push
lret
stos
mov
dec
popa
dec
dec
pop
test
push
lods
fs
xchg
popa
fwait
movsb
dec
add
repz
xchg
xchg
sbb
incl
js
ss
push
nop
mov
addr16
int
aaa
jmp
leave
cmp
sbb
mov
ljmp
fldl
insb
fsubrp
xchg
mov
cmpxchg
adc
fwait
clc
and
inc
leave
loop
xchg
mov
orl
stos
jno
mov
pop
push
sub
and
fstl
clc
test
fldcw
dec
in
out
pop
push
loop
pop
inc
outsl
jge
fwait
or
push
xchg
lcall
inc
fdivp
push
adc
push
add
and
mov
nop
push
adc
or
movsb
pushf
fdivrs
pop
cs
jmp
pop
mov
test
into
bswap
das
cmc
fnstsw
test
filds
xor
adc
xor
and
hlt
add
sub
mov
dec
subl
sahf
fisubs
aad
push
mov
push
popf
out
ds
cmp
jg
jle
lock
pop
add
mov
out
sbb
adc
push
cmp
gs
push
sub
test
sti
jb
mov
ret
add
mulb
xchg
sti
dec
stc
mov
jbe
mov
or
sub
or
pop
rcll
call
icebp
adc
repz
xchg
jb
jno
fs
pop
cld
lret
out
or
fs
adc
xor
adc
in
and
sahf
pop
out
dec
in
mov
or
xor
adc
imul
mov
xchg
sbb
push
lcall
dec
jo
add
xor
sahf
rorb
mov
ss
cmpb
push
jp
pushf
pop
roll
sbb
in
inc
jns
lock
mov
xchg
cmp
and
xor
call
mov
mov
out
cmpsb
sub
int
xchg
outsl
lds
sub
xorl
sbb
pushf
dec
out
rcl
mov
pop
gs
mov
cltd
imul
stc
mov
lret
push
cmpb
lea
outsl
mov
xlat
push
xchg
mov
les
mov
leave
lock
push
xchg
xchg
setnp
dec
sub
ss
or
cmp
adc
or
into
pop
push
aad
into
push
or
and
sbb
je
cmp
fldenv
cmp
xchg
or
dec
jmp
fcoms
pushf
dec
stos
mov
ljmp
icebp
xor
mov
push
lcall
mov
loop
aaa
add
inc
mov
xchg
ret
xchg
push
cltd
pushf
mov
pop
mov
fistpl
insl
add
and
mov
pop
jb
fsub
int3
or
cmpsb
je
int
fisubl
push
mov
addr16
pop
clc
cmp
mov
imul
add
sub
or
jecxz
lahf
mov
out
subl
pushf
pop
mov
adc
add
pop
sbb
cld
cmc
inc
nop
ss
jmp
decl
mov
or
jbe
lcall
ficoml
add
cs
das
bound
mov
pop
jge
adc
cmp
or
pop
aad
xlat
push
rorl
call
dec
xchg
sbb
dec
imul
orb
out
cmpsb
dec
iret
out
inc
dec
xchg
aaa
sar
std
xchg
xor
mov
loope
sbb
pop
repz
je
pushf
push
cld
lret
jo
stos
mov
or
aam
xlat
add
imull
push
jge
aam
shl
cs
cmp
fsubrl
loope
lret
inc
stc
jb
ret
dec
je
xchg
xchg
jp
data16
idivb
cmp
data16
sarb
lahf
insb
mov
ret
test
sahf
adc
add
or
cmp
cmp
xchg
lret
mov
push
fstl
sbb
lods
inc
and
test
in
jno
aaa
rcll
pop
sub
lret
xchg
out
and
mov
mov
cmp
bnd
cmc
out
pop
hlt
push
lret
and
pop
pop
pop
loope
hlt
sbb
ja
repnz
cmp
dec
jmp
fwait
rcr
stos
sarl
dec
sbbb
mov
icebp
lods
add
mov
adc
leave
xchg
scas
aam
pushl
cmp
adc
add
orl
call
popa
pop
jnp
add
xchg
cmp
popf
mov
pop
mov
jmp
cmc
int3
outsb
addr16
push
jne
ret
repz
jmp
sub
lock
or
movsb
ffree
sbb
aas
or
cli
xchg
mov
xlat
adc
lcall
jnp
add
arpl
cs
insb
add
mov
mov
dec
lock
pop
cs
mov
push
push
xor
adc
stos
mov
lock
lret
in
push
hlt
push
adc
mov
push
xor
cmc
dec
mov
ss
jge
in
ds
pop
and
into
mov
sub
addb
mov
je
arpl
jp
dec
fcmovbe
push
arpl
pop
add
jnp
mov
insb
test
dec
or
mov
cld
mov
lods
lods
or
rorb
jg
cli
das
jns
xchg
inc
jns
scas
lods
jbe
xor
mov
adc
fistpl
notl
xchg
cmp
aaa
ljmp
fstpl
add
call
fwait
push
mov
jbe
pop
jmp
and
xor
insl
xchg
scas
push
loope
out
fucom
pop
add
push
jmp
pop
push
jo
addl
add
call
negb
adc
ret
js,pn
les
xorl
adc
mov
ficomps
xor
adc
popa
mull
add
in
sbb
pminub
frstor
mov
push
push
out
test
cmp
fsubs
dec
xchg
scas
mov
adc
test
mov
dec
mov
nop
xor
insb
test
sbb
aam
int
out
lahf
repnz
gs
cs
pop
and
sub
mov
push
fldt
mov
aas
cmpsb
or
inc
loopne
push
add
pop
mov
sti
xor
daa
dec
mov
scas
and
dec
lock
and
out
mov
jecxz
es
mov
mov
clts
sbb
cmpsb
ds
xchg
imul
fadds
sub
sub
sub
and
inc
mov
sbb
lret
rcl
add
movsl
mov
iret
scas
int3
negb
or
mov
pop
mov
cmc
mov
clc
mov
xchg
add
add
sarl
pop
push
leave
leave
pop
inc
cmp
mov
fwait
cli
mov
iret
lcall
aam
and
iret
inc
push
pop
call
pop
repz
test
rorl
sarb
lret
and
pop
push
in
cs
mov
mov
inc
dec
out
jp
out
jge
ficomps
adc
dec
or
xchg
mov
mov
add
fwait
pop
loope
xchg
ret
mov
sbb
insb
or
jecxz
es
lods
inc
ss
sbbl
jmp
cmp
mov
dec
push
in
stc
mov
and
aam
adc
cld
cmp
mov
add
dec
std
jno
test
dec
dec
fcmovbe
popa
ja
mov
cmp
push
aad
fdivrl
mov
sub
scas
pop
and
out
lods
jl
inc
mov
xor
add
jo
pop
orl
adc
cmp
test
lods
test
sub
sub
lcall
dec
push
cld
fwait
insl
xchg
xchg
es
or
orl
shrb
push
cwtl
add
adc
lods
fmul
push
mov
push
push
dec
es
push
push
cmp
in
inc
hlt
shlb
lock
aam
ss
dec
arpl
aas
add
enter
aad
mov
sub
xor
jg
adc
sbb
imul
sbb
cmp
stos
flds
fyl2xp1
ds
xor
sub
ds
push
or
dec
test
sbb
ja
clc
push
fs
addb
popa
or
icebp
add
pop
in
xchg
xor
cmc
cli
mov
or
sub
xor
arpl
pop
roll
jns
cmp
mov
lods
and
or
repz
cmpsb
insb
cmp
movsl
dec
ds
mov
out
pop
aas
xor
xchg
fcmove
lods
in
roll
xor
or
pop
cmp
shlb
mov
jne
adc
sub
mov
dec
xor
lahf
fbstp
push
loop
xchg
ret
xchg
cwtl
out
lods
test
and
sbb
lods
sbb
sub
push
in
sbb
shrb
test
aam
or
cmpsl
mov
dec
pushf
xchg
jle
mov
adcb
loope
or
cmp
inc
aad
jl
and
cmp
fisubl
mov
push
xchg
pop
lcall
mov
jl
sbb
mov
gs
adc
pop
ficomps
jo
mov
xor
xchg
xor
mulb
out
clc
inc
jno
testb
xor
outsl
aam
es
stos
adc
aad
sbb
aam
mov
imul
int
fwait
test
int3
icebp
jnp
jns
dec
sbb
dec
shlb
jge
sbb
les
sub
jbe
mov
mov
pop
inc
jp
cmp
ficompl
sbb
ret
pop
in
pusha
sub
loop
mov
sub
push
lock
icebp
push
data16
test
mov
adc
pop
test
sbb
cmpsb
jp
pop
sar
push
sub
test
pop
sbb
enter
loopne
mov
inc
xchg
jbe
pop
xchg
fadds
xor
sbb
loopne
cs
popa
and
mov
xchg
push
sub
cli
lret
outsl
dec
je
mov
daa
ret
loop
dec
and
jae
int3
imul
hlt
inc
push
inc
push
lods
adc
fldcw
stos
sub
and
shrl
jmp
pop
pop
push
das
cmc
insl
dec
push
outsl
dec
add
icebp
push
out
pushw
or
xchg
xchg
pop
sbb
dec
pop
in
mov
outsb
int3
enter
std
add
stos
pop
and
cwtl
pop
cmpsb
aaa
bound
mov
aaa
push
pop
fs
cld
roll
outsl
dec
sub
dec
inc
sbb
adc
mov
sbbb
sbb
orl
dec
mov
rorb
sahf
xor
in
ja
pop
repz
std
ret
inc
push
mov
cmpsb
repnz
jle
aas
jo
adc
lods
in
mov
mov
mov
test
xor
fstpt
or
or
sbbl
pusha
pop
jnp
lcall
clc
cs
sbb
ret
test
mov
mov
nop
jno
lret
xchg
mov
pop
jnp
push
out
xor
jl
inc
in
repnz
dec
push
cmpsb
jnp
push
xor
push
cmpsl
lock
jecxz
int3
test
mov
push
stos
loope
jns
and
xchg
pop
mov
xor
push
pop
dec
insb
inc
into
popf
add
iret
jmp
push
in
dec
ret
jae
cltd
repnz
pushf
out
inc
mov
sahf
leave
je
xor
repnz
or
adc
push
add
sahf
out
adc
sbb
xchg
outsb
test
xor
lock
test
add
dec
sbb
insl
mov
lods
sub
and
pop
out
xchg
pusha
push
daa
das
push
jb
sbb
jge
xor
ja
out
scas
int3
add
cltd
outsl
repnz
ja
aad
or
push
mov
dec
xchg
inc
mov
jmp
pmaxsw
or
jmp
in
pusha
aad
shlb
lahf
popa
jecxz
mov
push
fidivrl
dec
inc
outsl
mov
loopne
pop
out
clc
mov
andb
ss
and
out
push
sti
jge
insb
ja
mov
clc
repz
jnp
das
aam
sbb
orb
imul
xchg
popa
and
stc
std
mov
out
jl
test
push
adc
rcl
push
aad
sti
pop
arpl
inc
lret
jnp
mov
rorl
dec
xchg
subb
xchg
xor
test
xchg
mov
cmc
push
cld
sub
push
mov
xor
and
pop
pop
test
and
jmp
insb
xchg
sbb
call
mov
inc
fwait
stos
xchg
push
push
pop
out
iret
and
dec
ret
dec
ljmp
stos
into
push
inc
add
push
test
ret
jnp
divb
push
lds
ret
jl
cmpb
mov
jmp
mov
mov
int
push
dec
xchg
ror
in
scas
movsb
mov
movsb
out
loop
push
mov
inc
pusha
stc
inc
repz
bound
lds
pop
dec
in
adc
mov
push
sti
dec
pop
sbb
cmpsl
sbb
fsts
js
out
ret
out
popf
mov
imull
ss
push
mov
in
and
aad
cmp
jmp
pop
xlat
loope
adc
sbb
xor
imul
rol
xor
js
cwtl
test
jnp
in
push
xor
test
fyl2x
ret
mov
adc
stos
jb
shrb
cmc
aam
out
mov
ret
fcmovb
sbb
out
adc
xchg
mov
bound
lock
js
cmp
ret
ret
mov
stc
rep
mov
addb
dec
adc
aam
sarb
sub
mov
je
lcall
dec
test
rolb
out
jmp
pusha
dec
dec
mov
mov
pop
pop
mov
pusha
imul
xchg
jae
or
xchg
cmp
sbb
insb
xchg
icebp
in
lock
mov
or
pop
xchg
sub
loopne
xchg
xor
dec
cwtl
mov
lahf
or
hlt
mov
and
pop
mov
sub
pop
in
add
xor
xor
enter
sahf
push
inc
xchg
jmp
dec
mov
sbb
fadd
jl
insb
pop
xchg
add
mov
pop
jnp
xor
dec
out
jns
and
mov
xchg
sbb
lods
mov
in
add
or
xchg
repz
mov
push
out
aas
pop
sub
in
pushf
lods
push
popa
cmp
mov
mov
xchg
jecxz
orl
fimull
cmovge
pop
cld
das
xchg
mov
fsts
jmp
sbb
mov
push
mov
jo
lea
pop
sub
div
incl
cmp
call
fisttpl
mov
xchg
xor
jecxz
jp
cld
ja
adc
cmc
pop
sbb
out
push
push
adcl
cmc
cmp
test
jp
mov
push
lret
jp
incb
test
jb
test
pusha
xchg
or
call
dec
sti
dec
dec
out
mov
das
mov
jns
mov
mov
pop
mov
in
push
js
mov
mov
inc
mov
jle
xor
jmp
fidivl
test
jge
repnz
jne
mov
rcrl
xchg
dec
cmp
test
outsl
cwtl
add
les
jp
xchg
pusha
or
xor
or
fistl
xor
add
insl
or
mov
adc
dec
mov
or
cmp
out
cli
stos
test
in
lret
push
mov
inc
dec
cmc
jg
inc
mov
out
add
xchg
movsl
sub
xor
int3
push
mov
ljmp
pop
push
dec
nop
cli
stos
fidivrl
cli
aad
push
cmpb
mulb
sub
xchg
fdivl
pop
and
ret
fdiv
movsb
fsubl
pop
pop
test
push
xchg
sub
push
outsl
and
dec
jnp
push
repz
pusha
sub
inc
ret
out
sbb
insl
fs
dec
sub
push
inc
push
scas
das
stc
cmp
xor
cmp
xchg
incb
repz
inc
push
jb
stos
mov
cmp
xchg
movsl
mov
shrb
add
fdiv
push
adc
xchg
xchg
jbe
aaa
cld
pop
sbb
push
cmp
pop
ret
or
dec
sub
and
movsl
mov
adc
jb
lcall
xor
adc
cli
cmpsl
xchg
mov
xor
pusha
pusha
aad
xor
mov
ret
ja
loopne
rcrl
sbb
mov
shl
bound
mov
pop
int
and
dec
in
sbb
mov
add
sarl
cld
xchg
dec
xchg
rorl
mov
divl
dec
adc
adc
repnz
mov
jecxz
jg
int
push
xchg
mov
dec
imul
stos
sahf
in
xchg
cmp
cld
push
sub
add
dec
loop
push
xchg
dec
outsb
addr16
lods
mov
xor
subb
outsb
mov
mov
sbb
ja
sub
mov
sub
call
adc
test
imul
std
mov
repnz
sub
jae
mov
nop
adc
xor
enter
cmp
fcoml
cmp
mov
shr
pop
add
btl
mov
push
movb
out
repz
je
pop
jecxz
cmp
jp
adc
lds
and
push
ss
arpl
or
xorl
xor
out
inc
lahf
mov
cmp
dec
push
jo
sbb
adc
roll
call
test
mov
enter
push
int3
testb
cmp
jae
mov
js
int3
push
push
daa
sbb
cs
out
repz
sbb
enter
or
sbbl
adc
andl
xchg
imul
icebp
faddp
or
addl
mov
push
loopne
pop
inc
fwait
pop
pop
or
into
rolb
adc
stc
dec
cmp
sbb
lret
popa
mov
cmp
gs
stos
fwait
icebp
dec
inc
or
dec
dec
sbb
pushf
and
sub
adc
ds
jo
popf
mov
sbb
jge
push
enter
and
shll
stos
pop
ja
dec
or
mov
push
and
mov
addr16
es
cmp
jl
ja
xchg
je
repnz
ss
dec
mov
mov
and
insb
ljmp
pop
cmp
push
shrb
add
add
sbb
das
aad
jg
mov
shlb
addr16
inc
jmp
pop
jecxz
mov
cmp
nop
dec
jge
je
inc
arpl
nop
ljmp
pop
xlat
sub
stos
lret
mov
or
adc
out
pop
das
arpl
sbb
loope
std
aaa
jecxz
fwait
lret
sub
lods
sbb
leave
scas
imul
in
ja
xor
pop
push
sbb
and
popf
movsl
fildl
int
js
loop
gs
xlat
xor
xchg
mov
mov
je
jg
mov
or
xorb
aas
lock
mov
adcl
or
shl
aad
in
jp
pop
test
fmul
nop
test
loope
aaa
add
lods
inc
add
or
loopne
das
fbstp
cltd
jb
lcall
shll
xor
fisttpll
pop
ds
call
jmp
lret
in
push
aad
shlb
hlt
test
lods
pop
stos
lods
inc
dec
out
arpl
ja
leave
aas
cld
sbb
sbb
xor
cmpl
addr16
xchg
cmp
js
xor
in
fs
sti
xchg
rorl
stc
jbe
push
jo
jge
daa
ja
xor
in
cli
or
in
out
xor
cmp
jp
gs
lahf
pop
sub
push
ret
mov
sti
cmovns
mov
mov
inc
push
or
imul
int
pop
in
add
inc
movl
std
cmp
jne
gs
xor
fwait
xor
repz
icebp
inc
lahf
mov
pop
or
fstpl
aaa
push
pop
mov
fcmovu
sbb
fadds
mov
sahf
mov
cmp
push
add
inc
sbb
clc
in
scas
xchg
push
cmp
inc
or
stc
inc
mov
inc
xchg
out
mov
push
or
mov
mov
mov
push
clc
and
push
mov
mov
pop
rol
in
fistps
out
xor
in
adc
xchg
aam
fnstenv
add
into
jb
mov
insb
outsb
jg
xor
scas
arpl
inc
mov
inc
jne
or
loop
cli
imulb
dec
xchg
xor
mov
jne
cs
jno
and
popf
mov
push
daa
sub
faddp
or
xor
cmp
mov
sbb
rorb
imul
lahf
in
testb
push
cwtl
dec
imul
loope
sbb
xchg
lcall
sbb
sub
popa
inc
stos
add
mov
outsl
sbb
repnz
je
mov
mov
mov
imul
addl
jb
cltd
and
add
sti
repz
hlt
cmpsl
lahf
pop
jp
imulb
idivl
movsl
imul
cmp
jno
add
add
mov
notl
jbe
jne
push
push
fcmovu
sub
cmp
xchg
ss
mov
call
mov
mov
insb
das
sahf
push
jmp
cmpsb
fdivl
sub
in
cwtl
xor
ret
push
jnp
xlat
xor
lods
cli
add
mov
add
ret
dec
mov
push
fwait
pop
mov
inc
xchg
roll
adc
adc
push
sbb
jbe
lods
adc
mov
pop
sbb
xchg
loope
sti
sahf
pop
mov
push
cli
mov
fisttpl
jg
inc
mov
mov
cltd
out
adc
frstor
mulb
jecxz
mov
sbbl
sbb
dec
xchg
push
gs
popa
xorb
sti
push
js
mov
pusha
in
in
mov
add
je
sbb
aas
push
iret
sahf
cmp
and
fcoms
daa
movsl
fcoml
push
jbe
sub
clc
enter
and
sbb
aam
pop
lahf
inc
jo
sbb
out
es
lahf
mov
dec
mov
loop
pop
adc
rcrl
xchg
cmp
xchg
pop
mov
adc
xchg
sub
inc
cs
mov
movsl
repz
jne
xor
loope
insb
and
xchg
push
or
sbb
in
addr16
cld
pop
inc
ds
cs
fstl
fdivl
push
nop
nop
pushf
ret
mov
xchg
jp
push
pop
inc
adc
push
shrl
inc
add
test
mov
imul
fmuls
ret
adc
pop
xchg
lcall
push
mov
aad
xor
test
cld
nop
sub
jnp
cmp
aam
add
sub
sub
aad
mov
and
push
mov
xchg
fsubrl
rcrb
mov
sub
sbb
xor
clc
add
pop
push
fidivrs
cmc
cmpsb
out
cmc
mov
sti
push
sti
mov
sarb
cmc
cwtl
es
ja
es
mov
divb
mov
xor
mov
clc
data16
inc
ret
sbb
decb
xchg
std
ret
jne
stos
mov
popa
divb
xchg
and
test
and
fbstp
mov
push
dec
jo
push
mov
pop
and
jmp
mov
stc
xor
jecxz
sbb
pop
js
mov
jg
sti
add
out
aad
sahf
rorb
movsl
cmp
cmpsl
push
mov
mov
mov
inc
insl
imul
pop
mov
inc
adc
addr16
cmp
lret
jecxz
cmp
pop
clc
insb
push
loop
loope
int
clc
jp
ficompl
shr
shlb
mov
leave
inc
dec
add
sub
bound
stc
cmp
call
addr16
cs
repz
jmp
cltd
stos
inc
cmp
and
movsl
mov
sub
mov
cmp
jne
fdivs
sub
out
stc
jle
mov
stos
hlt
call
or
lret
xchg
fnsave
subb
and
lods
jecxz
je
dec
hlt
icebp
ljmp
mov
lea
pop
or
int3
jb
lret
clc
jne
add
adc
les
push
and
jo
pop
sbb
scas
loopne
lock
repnz
imul
repnz
jne
mov
xor
lahf
rorb
mov
ffree
cmp
or
into
leave
push
call
or
pop
dec
mov
mov
push
or
shl
std
add
insb
lahf
and
push
mov
shl
push
jnp
ja
jp
fsubrl
int3
leave
aad
fidivs
mov
push
das
jbe
cwtl
xchg
daa
xchg
and
lahf
add
imul
dec
jo
lods
cmp
inc
out
ret
or
or
xchg
iret
das
mul
movb
out
pop
clc
popf
adc
js
bound
adc
mov
mov
mov
pop
mov
or
add
push
add
fdivp
mov
inc
mul
sub
repnz
stos
pop
cwtl
or
cmp
xchg
imul
shlb
ja
adc
int
jnp
lahf
dec
jmp
mov
add
and
lret
cmp
push
xor
clc
lock
push
outsb
fldl
fidivrl
xchg
cmp
pop
push
cwtl
arpl
push
scas
sbb
and
mov
mov
aad
xchg
xor
addr16
loopne
xor
push
adc
daa
sbb
or
add
sub
jg
sbb
xchg
shl
jge
jge
jae
sub
jae
pop
rclb
add
jmpw
sbbl
push
dec
cmp
iret
push
mul
insl
les
jl
jp
roll
ffree
inc
inc
inc
jo
lret
lods
jno
xchg
push
sbb
inc
jecxz
lcall
add
xor
pop
and
sub
rorl
xchg
lret
mov
mov
xor
mov
sarl
mov
lea
jne
mov
jnp
jae
jle
add
sub
dec
push
mov
cwtl
mov
adc
into
jl
xchg
mov
sub
push
iret
inc
ror
dec
jae
int3
pop
mov
nop
lock
cmp
sahf
out
mov
dec
mov
xor
fdivrl
je
cli
inc
imul
pop
mov
xlat
xchg
add
into
data16
mov
add
mov
inc
pusha
fwait
xlat
add
daa
xlat
mov
mov
xchg
adc
xor
adc
mov
inc
push
pushf
sbb
or
in
jnp
mov
push
mov
mov
cmp
sbb
repz
jmp
daa
movsl
popa
mov
inc
mov
test
xor
lcall
aaa
mov
xchg
ja
fldenv
pop
sahf
cltd
loopne
or
inc
xor
sbb
mov
pop
idiv
inc
inc
iret
sub
loop
adcb
jl
lods
pop
pop
xor
frstor
sub
cmpsl
in
inc
jb
dec
xchg
loope
add
imul
outsb
mov
aaa
pop
std
push
mov
sub
lahf
add
aas
ror
adc
bound
nop
push
pop
jo
dec
xor
fscale
ret
push
xchg
mov
mov
or
pop
out
pop
xchg
push
movsb
arpl
cltd
cmc
add
aaa
mov
pushf
pop
bound
lods
mov
mov
loop
sub
int3
scas
shr
shll
cmc
xor
js
cli
test
shlb
push
and
das
push
push
and
push
movsl
sub
stos
lcall
les
les
lret
inc
shrl
pop
lods
mov
sahf
scas
xchg
xor
xor
jge
and
push
and
adc
lods
mov
aaa
cli
fdivrl
fstpl
inc
in
mov
imul
cmp
lret
loop
dec
sub
adc
mov
or
xor
cmp
mov
jecxz
push
xor
push
ljmp
xchg
bound
pushf
add
inc
faddp
lock
imul
mov
in
ja
fucomip
mov
ror
or
lret
inc
fcomps
lock
mov
repnz
pop
clc
sahf
aad
fnstenv
aam
or
imul
nop
imul
add
add
mov
xchg
lret
fwait
sub
xchg
insb
add
jo
dec
xchg
xchg
pop
push
das
xor
cmp
jno
and
dec
lods
loope
add
stos
push
push
xor
dec
in
mov
mov
push
gs
jmp
push
and
xor
ficomps
lods
icebp
in
inc
mov
add
push
cmc
fisttpll
dec
stos
cmp
push
xor
dec
xchg
mov
loop
xlat
mov
fstps
test
mov
xchg
mov
or
mov
test
mov
test
xor
cmpsl
jbe
xor
xlat
icebp
sub
lcall
loopne
cltd
imul
test
jmp
push
and
pop
xchg
mov
push
ret
in
or
icebp
sti
lret
xchg
push
adc
push
inc
jmp
cli
loope
or
mov
inc
fwait
mov
xor
sbb
fimull
in
xchg
insl
sub
adc
insl
pop
or
add
lods
js
insb
addr16
loop
push
dec
aas
jb
or
mov
fdivr
outsb
imul
or
das
scas
mov
push
ficoml
movsl
stos
loop
and
enter
gs
scas
negb
lds
pop
or
mov
mov
xchg
dec
rcl
xorl
cmp
lods
fadds
imul
and
mov
adc
fwait
and
popf
and
ffree
sbb
jnp
xchg
outsb
dec
inc
and
mov
mov
insl
pop
fidivs
mov
jb
jo
pop
outsb
pop
mov
or
mov
mov
inc
test
mov
loopne
sbb
sub
mov
les
push
int3
jp
insb
xchg
jo
push
lret
js
int3
fs
xor
movsl
inc
mov
leave
adc
in
cli
xor
scas
cmp
fiadds
sub
hlt
sub
jne
imul
jmp
add
test
ljmp
shll
scas
xor
mov
pop
lcall
shlb
outsl
push
cmp
pop
or
push
ljmp
sub
nop
aam
popa
xor
loope
jge
int
sbbb
test
jo
adc
leave
dec
negl
pushf
mov
mov
dec
inc
out
scas
aas
inc
jmp
sub
fidivrl
leave
sbb
lcall
out
sbb
xor
inc
push
push
orb
stos
decb
mov
in
xor
mov
cltd
outsb
cwtl
or
loope
and
cmpsl
insl
xchg
fmull
popf
or
lahf
push
xchg
pop
daa
xor
xchg
xchg
and
mov
xor
add
shll
movsb
push
add
aad
enter
inc
std
shrl
notl
jns
mov
cmc
cmpsl
add
bound
aaa
mov
pushf
subl
stos
mov
stos
int3
inc
push
fdivr
or
push
add
cmp
sub
sbb
dec
popa
outsb
adc
int
dec
loopne
mov
rolb
addl
inc
aas
stos
sub
mov
sbbl
dec
inc
sub
into
ror
jno
add
xlat
mov
and
mov
int
in
lcall
dec
xchg
adc
out
sti
push
xlat
dec
or
push
stos
cmpsb
orb
into
mov
incl
imul
jo
mov
fcmove
test
lods
cmp
stos
outsb
mov
xchg
cmp
cmc
adc
push
jne
loop
orl
lcall
jge
icebp
sbb
andb
movsb
xor
das
rcrl
mov
jbe
insl
cmp
ds
xchg
sub
lods
cmp
sbb
pop
cmp
mov
push
fs
addr16
inc
test
and
stos
or
or
xor
pop
arpl
cli
or
or
sbb
dec
lods
cmp
pop
cmpsb
cli
mov
and
jne
mov
add
adc
or
adc
sbb
inc
or
push
jns
loop
pushl
fstpt
inc
ljmp
lret
lock
push
stos
scas
add
sahf
push
out
outsl
pop
inc
dec
stc
dec
push
inc
xlat
pop
mov
add
mov
jp
cs
sbbb
xchg
mov
mov
outsl
mov
jmp
jmp
aaa
stc
push
mov
insb
jo
mov
pop
jmp
inc
sbb
xchg
fucom
cmp
mov
xchg
sbbb
push
xchg
into
push
test
jecxz
fsubrl
xor
mov
jecxz
add
out
fstpl
and
or
cmpsb
push
inc
mull
xor
ficoms
js
lret
pop
fdivl
fcompl
cmp
push
out
jb
pop
mov
pop
pusha
mov
xor
sub
push
and
cmp
add
or
aad
js
fidivl
lcall
test
add
xor
jmp
sbb
test
push
arpl
dec
push
dec
loop
mov
mov
fidivrs
arpl
push
clc
sub
into
push
push
pop
sub
xchg
call
je
cs
jmp
add
aas
pop
sbb
cmc
icebp
or
push
add
pop
movups
int3
dec
int
sub
and
xchg
xor
jp
subl
xchg
pop
fmuls
notb
or
outsb
test
add
loopne
out
sbb
insb
loopne
mov
jo
mov
jmp
mull
xor
xor
push
je
jne
xchg
add
mov
mov
adcl
bound
push
cld
adc
jle
fdivrs
mov
scas
jmp
icebp
jmp
aaa
cld
test
dec
or
enter
pop
xchg
add
cmpsl
jne
je
lods
inc
fstps
mov
inc
test
out
mov
mov
jbe
cs
sbb
mov
outsb
cld
dec
cmp
mov
rorb
iret
cmp
jnp
repz
subl
test
rcrl
push
sbb
mov
or
ficoms
pop
mov
cld
lcall
xchg
or
jae
rcrb
les
mov
adcl
xor
adc
stos
inc
iret
inc
decb
xlat
add
testl
stos
inc
and
cmp
pop
lret
jmp
insb
scas
dec
xchg
mov
mov
sbb
inc
xor
std
icebp
out
and
in
cmp
into
add
outsl
adc
sbb
mov
and
scas
add
flds
andb
stc
xor
test
xor
jbe
xchg
rolb
test
fdivrl
jle
pop
sbb
cmp
sahf
shlb
xchg
jge
ret
mov
loop
mov
mov
dec
pushf
dec
icebp
out
push
addb
loope
pusha
mov
mov
test
popa
data16
push
sbb
jg
mov
sti
mov
cmc
inc
rcrb
sbb
jno
jmp
xchg
mov
add
xlat
and
popf
enter
shlb
mov
sbb
jecxz
adc
dec
sti
mov
int3
pop
and
and
repz
add
lods
mov
fisubrl
popl
inc
jmp
or
insb
das
cli
rcl
testl
mov
push
ret
sbb
cmpl
adcb
lds
push
mov
pop
imul
in
cld
ds
data16
mov
sub
mov
add
lcall
xor
add
sbbb
das
jnp
inc
aam
sub
movsb
xchg
das
insl
icebp
imul
iret
jecxz
fwait
sti
mov
mov
lahf
pop
pop
mov
faddl
push
insl
adc
and
adc
xor
sub
subl
pop
mov
and
leave
fistpl
dec
mov
mov
call
ds
mov
xor
das
sub
sub
arpl
mov
clc
cmp
leave
xor
nop
fldl
adc
push
mov
adc
mov
test
jge
adc
stos
popf
aas
xor
or
adc
ret
sarb
sub
shr
mov
cmp
pop
scas
mov
pop
mov
or
icebp
das
cmp
add
cmp
xor
sub
in
sub
iret
pop
dec
loopne
mov
mov
jl
rcl
inc
adc
add
or
and
mov
loop
mov
pop
xchg
mov
data16
loope
jae
in
xchg
lcall
xchg
push
mov
icebp
and
mov
xor
loop
lea
js
lock
in
in
pusha
stos
std
inc
pop
iret
fidivrl
mov
push
or
and
movb
imul
enter
sbb
adc
mov
mov
push
pop
adc
ret
out
insb
push
lret
or
daa
mov
cld
mov
xchg
rorl
outsl
xor
test
movl
jbe
jg
add
leave
sub
stos
jnp
aas
cmp
stc
sbb
addr16
xor
movsb
repnz
sahf
cmp
and
repnz
xchg
movsb
jecxz
fstl
xchg
shrb
cmpsl
dec
mov
mov
cmp
mov
cwtl
ss
pop
aad
push
xchg
jle
pusha
jge
imul
lret
aaa
xlat
pop
std
sbb
mov
stos
pop
pushf
leave
cmp
jle
adc
push
nop
outsl
cmp
out
adc
addr16
loopne
test
clc
pusha
xchg
push
mov
push
dec
popf
in
fisttps
mov
loope
ja
push
and
lea
pop
xor
or
stos
cld
icebp
sub
xrelease
clc
iret
add
pop
loopne
add
add
ljmp
hlt
xor
lret
sub
sbb
pop
sysret
add
inc
xchg
dec
sub
sbb
push
xchg
xor
cwtl
das
cmp
dec
iret
movsl
gs
fadd
cmp
movsb
inc
lock
sub
mov
mov
ss
mov
dec
imul
iret
mov
mov
xchg
mov
mov
adc
in
mov
cmc
sti
hlt
xor
clc
mov
mov
mov
lcall
ljmp
sbb
je
dec
into
dec
jp
je
push
sti
cmpsb
mov
pop
jb
rorl
inc
dec
inc
imul
scas
fwait
or
mov
mov
mov
cli
pop
jns
sub
cs
fcmovb
movsl
sbb
aad
dec
ss
sub
push
inc
loop
cmp
dec
push
imul
fs
jbe
leave
cmp
mov
and
xchg
sub
adc
stos
sub
mov
jmp
mov
test
pop
and
and
pop
cwtl
outsb
cltd
insb
imul
jno
sarl
inc
xchg
dec
xchg
out
es
push
jns
fwait
test
mov
jns
adc
ja
shlb
adc
cwtl
mov
xor
rol
adc
mov
push
inc
mov
cltd
xchg
push
test
outsb
mov
cmp
inc
pop
inc
xchg
and
push
xor
pop
in
or
out
repnz
out
and
pushf
insl
pop
dec
xchg
pop
jo
xor
cmp
ficomps
insb
in
xchg
pop
ljmp
or
mov
bnd
add
xchg
inc
add
test
mov
and
pop
popf
pop
or
loop
lret
push
aam
fnstsw
push
test
adc
add
pop
repz
test
jecxz
repz
mov
loopne
sub
lret
xor
decl
mov
je
rolb
pop
test
sbb
ret
cli
inc
push
scas
cmpsb
push
mov
push
mov
loop
dec
pusha
jno
call
push
cld
loopne
daa
cmc
aas
andb
imul
mov
imul
cmc
test
fmulp
cld
arpl
mov
lods
insb
mov
fcoms
outsb
sub
sbb
sub
rcrl
fsubl
push
sub
inc
ret
addl
popf
sub
out
fimuls
sub
loopne
lock
mov
sahf
cmpsb
cltd
jns,pt
daa
dec
mov
sub
fcmovb
pushl
mull
jno
insb
shl
ja
pop
jg
mov
mov
idiv
inc
xor
ret
out
mov
mov
pushf
test
mov
or
push
sub
mov
or
inc
sar
in
out
cmp
mov
push
je
push
outsb
fcoml
movsl
mov
mov
add
mov
repz
mov
adc
sbb
iret
xchg
xor
push
daa
xchg
dec
sbb
nop
mov
shrb
leave
rcr
pusha
inc
loope
push
mov
stos
mov
std
nop
js
dec
hlt
enter
mov
leave
xchg
mov
sub
jl
lock
pop
xchg
pop
mov
jnp
sub
sub
iret
out
popf
aam
fidivrs
jne
jne
and
leave
inc
arpl
aam
ret
pop
jns
rcr
cli
scas
repz
mov
xchg
pop
fcom
cld
or
dec
jg
cmpsl
add
xlat
pop
push
rolb
inc
dec
movsb
aaa
je
ljmp
fsubl
xchg
fcomip
call
pop
loope
ljmp
mov
mov
and
mov
and
mov
subl
sub
andb
ret
int
sbb
in
stos
mov
sti
jo
dec
xchg
lcall
mov
push
bound
ljmp
jne
sub
mov
clc
andb
xor
repnz
mov
out
leave
andl
jne
lcall
jle
popf
fsts
xchg
xchg
sbb
jae
rorb
xchg
dec
mov
cmpb
ds
fsubp
addr16
or
inc
cwtl
imul
jno
dec
pusha
lcall
xchg
and
xor
inc
outsl
dec
add
cmp
or
pop
movsb
inc
out
mov
jge
mov
cs
test
dec
clc
dec
xchg
jbe
mov
subl
sbb
rclb
pushf
sbb
loope
sbb
pop
mov
sub
jns
sub
cltd
lock
and
xchg
scas
roll
stos
xchg
xor
add
rcr
cmp
adc
xchg
cli
nop
xorb
movl
mov
jo
daa
add
bound
fs
insb
test
add
adc
addl
mov
dec
fdivl
aas
pusha
idivb
fwait
mov
outsb
jae
lret
pop
mov
cld
mov
ret
test
dec
sahf
adc
cmc
mov
sub
sub
lret
adc
and
mov
test
mov
lods
test
fwait
ret
imull
dec
mov
daa
loopne
jle
out
icebp
mov
and
and
push
cmpl
loopne
test
cmc
push
sub
fimull
push
cmp
lahf
mov
jo
pusha
dec
shll
stos
adc
lret
data16
sbb
roll
out
ret
mov
insb
jmp
push
xor
mov
add
or
xchg
fnstsw
sub
into
in
fnstcw
mov
jle
into
xchg
or
fldt
pop
idivb
fwait
dec
int
cmp
pop
xchg
flds
mov
mov
test
xchg
inc
xlat
lods
ret
and
imul
cld
sbbl
shrb
sbb
xlat
out
sub
xchg
dec
mov
or
mov
cmpsl
and
lods
clc
mov
push
arpl
mov
mov
out
fcoms
je
cmp
cld
push
inc
sti
stos
jge
mov
fs
out
repnz
in
out
mov
lods
dec
in
sbbb
sahf
mov
or
pushf
outsl
mov
daa
cs
inc
xchg
lahf
adc
jmp
fisubrl
push
cltd
int3
popl
movb
inc
dec
xchg
push
mov
jmp
xlat
sti
pop
xchg
aam
inc
xor
pop
jp
int3
rclb
mov
add
xchg
and
pop
ret
shl
inc
cmp
inc
push
fcmovb
xchg
pop
in
add
fnstenv
sbb
cmp
daa
xor
outsl
lea
mov
inc
mov
pop
mov
scas
and
test
mov
mov
test
lret
repnz
arpl
cmp
fcoms
sub
test
ret
jno
pop
pop
shll
ss
sbb
adc
mov
push
add
inc
movsl
cmp
sqrtps
pop
cmp
sub
test
lret
pop
pop
dec
mov
jnp
mov
loope
jo
mov
pop
jl
sub
jno
dec
ret
gs
mov
inc
jmp
xor
jne
in
loop
xor
dec
iret
leave
cmpsb
lcall
hlt
stos
mov
fwait
imul
mov
inc
jp
ljmp
mov
dec
data16
ret
daa
enter
cmp
push
lods
xchg
popa
mov
pop
or
loopne
add
lret
dec
mov
into
iret
sahf
repnz
shrb
xor
xchg
push
mov
sub
hlt
insb
stos
out
mov
cwtl
sub
mov
fistpl
stos
enter
inc
mov
mov
inc
pop
hlt
es
xchg
inc
fstpl
adc
add
mov
jbe
sar
addr16
or
or
mov
cmp
popa
bound
jnp
pushaw
or
mov
and
jmp
bound
sub
fdivp
dec
pop
xchg
dec
inc
jmp
xor
xlat
push
or
push
icebp
loope
add
or
int3
sarl
xchg
sti
in
stos
cmp
cmp
mov
fldcw
dec
adc
testl
test
or
adc
ja
popa
pop
dec
lock
fnstcw
aaa
lahf
jns
sbb
insl
push
push
cmp
aam
or
jge
es
dec
test
pop
add
and
jnp
inc
loope
out
ja
jae
inc
inc
and
push
push
jecxz
push
inc
adc
mov
popa
in
jle
mov
hlt
fstpt
mov
mov
out
in
mov
cmpsb
mov
fwait
xor
xor
or
inc
pop
cltd
add
or
sbb
mov
mov
pop
aas
sub
cli
test
sbb
push
sub
dec
jecxz
push
fdivrl
arpl
out
in
jmp
stos
andb
mov
loope
jl
fs
sub
xor
inc
addb
pop
test
movsb
mov
add
mov
mov
lahf
imul
insl
mul
nop
fdivl
jle
fmuls
rol
or
mov
adc
adc
mov
or
adc
sub
scas
js
cmp
sbb
imul
nop
dec
mov
rclb
adc
sub
scas
dec
jmp
gs
fcomi
adc
mov
lods
xor
mov
push
les
sbb
mov
in
out
mov
dec
hlt
pop
test
xchg
fbstp
divl
movsl
aam
and
loope
stos
jb
mov
test
in
mov
pop
data16
pop
cmp
push
add
mov
mov
ds
loope
into
cmp
lods
mov
ret
adc
mov
xlat
jl
rcrb
push
lods
lahf
add
bound
push
lcall
mov
fsubrs
rcr
jp
jae
js
adc
fldz
add
cmp
adc
enter
and
mov
fildll
popf
cmp
in
push
push
xor
test
mov
filds
lret
and
or
jno
add
fildll
xor
nop
sbb
or
dec
jne
cs
cli
out
adc
dec
jecxz
jg
or
pop
test
fcomps
movsb
mov
data16
and
cmpsb
cmp
or
xchg
ss
xchg
int
xchg
je
iret
out
sbb
cmc
insl
imull
out
in
int
xchg
sub
loopne
cmpl
idiv
es
jg
dec
dec
inc
xchg
ret
insl
fmull
out
iret
test
sub
push
mov
push
jmp
repz
clc
add
fists
std
cld
pop
ljmp
xchg
sub
loope
popa
xor
es
or
loope
ss
aas
dec
sarl
and
fucom
movsb
mov
lock
jo
xchg
adc
insl
push
in
jl
pop
stos
xchg
movb
cmpsl
jae
jno
clc
sub
pop
mov
pushf
push
add
dec
adc
lds
mov
imul
ds
add
leave
movsb
in
xchg
out
cli
add
mov
mov
push
mov
cmovae
pusha
nop
pop
shr
lods
xchg
ret
lahf
xor
shll
mov
cs
movsb
cwtl
mov
lret
insl
repz
in
pop
shll
out
subb
mov
insl
sub
pop
ja
jae
or
movsb
loope
or
out
mov
mov
sub
lods
stos
jl
imul
fptan
cmp
rcrl
push
orb
loope
mov
xorl
testl
outsl
push
mov
fbstp
or
mov
and
jns
int
inc
out
ret
std
dec
jp
sarb
sti
xor
das
test
sbb
jns
ret
mov
pop
and
push
mov
mov
mov
js
fmull
push
or
arpl
int3
cmpsb
inc
arpl
mov
mov
fldcw
xor
push
xor
push
sti
mov
pop
or
loop
icebp
test
mov
mov
cmp
ret
fxch
mov
movsl
stc
fs
cmp
nop
into
jno
cld
nop
cmpsb
xchg
pop
push
movsb
or
in
in
aaa
in
inc
pop
jno
out
mov
jbe
cwtl
int
out
mov
je
nop
icebp
aaa
add
sbb
sub
rcr
movsl
dec
mov
add
xchg
add
lret
cwtl
mov
fisubl
stc
cmp
xchg
sbb
loopne
aaa
pop
repz
mov
sbb
dec
test
pop
sub
mov
inc
adc
mov
jg
mov
shll
fstpl
mov
sahf
jmp
inc
push
cmp
cli
inc
mov
mov
add
aad
add
cmp
jl
or
arpl
or
addr16
int
inc
lret
lea
inc
cmpsl
outsb
ficoml
clc
mov
and
subb
adc
add
sbbl
xor
mov
sti
shll
mov
icebp
iret
mov
dec
push
shrl
pop
aas
or
js
test
pop
sbb
cmp
notb
test
xchg
pop
mov
fldcw
cmpsl
call
in
mov
cmp
inc
movsb
outsb
dec
mov
lcall
cmc
ss
sbb
pop
xor
mov
add
xor
stos
gs
pop
xchg
or
mov
int3
dec
ret
out
pop
sarl
stc
lcall
jae
cmp
leave
dec
call
rep
outsb
jmp
pop
adc
lahf
or
mov
std
inc
jecxz
or
iret
in
es
idivb
flds
call
dec
enter
mov
fwait
add
dec
xor
pop
movsl
fs
mov
stos
push
aad
pop
xchg
adc
dec
or
jo
xchg
cmc
cmp
pop
xor
lock
dec
push
push
in
daa
shld
mov
scas
movsl
stos
mov
leave
push
dec
cmp
or
out
pop
inc
push
push
rcr
insb
rolb
or
mov
pop
adc
incl
repnz
push
testb
test
pusha
movsb
faddl
das
jl
add
push
loope
push
adc
add
pop
ret
test
shlb
xchg
leave
repz
xchg
push
mov
mov
pop
ficoml
ret
jb
xor
hlt
bound
mov
dec
xor
adc
mov
pop
popf
adc
movsl
lods
cmpsl
sbb
ds
loopne
push
adc
js
ljmp
xchg
mov
js
pushf
data16
mov
xor
adc
push
cld
jns
mov
les
es
push
add
or
inc
icebp
and
fistps
popa
inc
jno
pop
push
pusha
or
div
push
aas
xchg
pop
add
dec
adc
inc
and
lcall
adc
mov
sub
xlat
xchg
les
jmp
push
pop
and
enter
je
mov
int
pop
push
add
fdiv
add
jne
mov
and
jmp
sub
leave
push
inc
out
pop
aaa
push
and
or
mov
in
stos
pusha
inc
pop
mov
xor
int
loop
mov
jbe
mov
mov
rorb
jp
dec
or
mov
inc
stos
into
fwait
movl
test
push
sub
in
pop
inc
shrl
ljmp
das
pop
mov
jns
jge
dec
xor
push
push
into
inc
cwtl
aaa
filds
jl
out
rclb
inc
mov
in
jp
pop
shrl
cs
rcll
into
and
dec
jg
jnp
xchg
mov
fstp
push
or
sbb
cmp
test
adc
add
jp
dec
adc
loopne
xor
stc
pop
les
test
inc
addb
jecxz
orb
es
add
es
popf
cmpsb
fbstp
shld
int
cmp
adc
cwtl
ljmp
jnp
ss
jmp
movsb
mov
lahf
negb
test
cmp
test
push
ss
inc
add
movl
mov
cmp
adc
mov
movsl
xchg
sarb
jecxz
repnz
shrb
mov
nop
imul
imul
jno
insl
imul
cmp
push
push
pop
inc
mov
add
orb
sahf
subl
int
lahf
or
rcr
scas
jg
addr16
iret
add
lcall
mov
addr16
or
and
jg
xchg
loopne
pop
adc
sub
pop
pop
jl
jae
ret
lea
or
ljmp
cs
and
cmp
or
fldenv
leave
cmc
repz
xchg
or
cld
jmp
mov
dec
jnp
add
sub
ja
xchg
dec
mov
inc
test
std
adc
dec
insb
and
sbb
outsl
lea
cld
mov
leave
leave
add
xlat
dec
sbb
jge
inc
jnp
mov
jmp
cld
jmp
mov
cmpsl
das
dec
jmp
pop
rcll
mov
in
loopnew
or
fldt
lret
lods
push
mov
sbb
add
mov
pop
ss
aad
jb
popf
pop
fiaddl
out
rorl
lea
inc
mov
int3
mov
pop
repnz
daa
dec
out
adc
cwtl
jg
arpl
sub
sbb
and
add
add
loopne
and
jp
lcall
mov
xor
dec
pop
inc
sbb
jo
jns
inc
push
adc
mov
inc
lods
lret
cmc
filds
or
mov
clc
ljmp
add
cmp
ljmp
mov
jbe
jns
out
ds
sub
fdivrs
inc
lods
pusha
out
icebp
or
aad
decb
and
jp
jecxz
cmp
mov
test
nop
loopne
inc
lret
add
out
pop
sub
aam
pop
test
insl
sub
mov
mov
stos
addb
jp
ljmp
add
xor
fiaddl
movsb
daa
in
adc
sti
fldcw
mov
stc
cmp
mov
pop
stc
sbb
paddusw
divb
pop
cli
sbb
and
aad
mov
orl
aad
mov
jbe
subl
cltd
xchg
or
jg
pop
add
ret
ds
adc
xchg
lcall
in
in
mov
or
add
ret
add
or
xchg
cs
popa
cs
aam
loopne
xchg
iret
mul
xor
sbb
cli
sub
sub
jecxz
mov
pop
and
adc
jl
mov
int3
jge
clc
inc
mov
dec
sub
sub
and
fs
outsl
xchg
addl
lods
test
adc
adcb
mov
int
dec
shll
pop
adcl
inc
cmp
mov
mov
lret
aam
stos
pusha
cltd
sub
sub
mov
mov
lea
sar
xor
js
jb
jo
icebp
nop
pop
xor
ret
pop
popf
mov
pop
add
inc
clc
cmp
pop
aas
jl
sti
addr16
outsl
fs
popf
cs
pop
fnstenv
je
xchg
jecxz
add
lods
mov
pop
scas
ss
xchg
sub
ret
pop
stc
into
outsb
or
lcall
ficoml
cmp
mov
or
push
pop
add
sbb
aaa
mov
enter
mov
into
daa
and
stc
push
or
mov
jp
xlat
cmp
mov
out
shll
push
pop
addr16
rcll
je
movsl
mov
dec
push
adc
enter
mov
mov
cld
sarb
rcrl
enter
jge
or
out
adcb
cmpsb
pop
inc
into
xchg
mov
push
aas
js
xchg
lret
lods
cmp
xchg
shl
or
fildl
xor
push
test
aas
mov
or
add
push
jle
jno
fwait
mov
and
sub
mov
adcl
push
bswap
pop
adc
pop
mov
sbb
das
popa
xchg
sub
mov
xchg
jmp
insl
inc
cmp
cmpsl
repnz
ret
sub
shrl
out
popf
jge
inc
fnstenv
imul
sarl
out
dec
lea
sahf
xchg
mov
xchg
add
mov
data16
testl
ret
jmp
outsb
inc
ss
stos
insb
cli
inc
pop
sahf
push
mov
fimuls
int3
fcoms
or
aas
push
pushf
icebp
shrb
into
cmp
xor
xor
fnstcw
leave
or
jbe
mov
sti
test
sub
xchg
jb
pop
into
mov
repz
lret
xchg
std
in
jbe
mov
es
mov
sti
mov
inc
mov
inc
mov
sbb
pop
push
iret
xchg
ret
fdivrl
fstpl
hlt
xchg
mov
sti
cmp
cmp
imul
sbb
mull
inc
ja
popf
shr
mov
push
mulb
add
adc
test
xor
adc
daa
dec
mov
cmp
out
and
add
aam
sbb
fisubrs
xlat
mov
je
mov
nop
xsha1
cmpsb
mov
aad
sub
imul
mov
pop
xlat
je
lret
sbb
sub
sub
sbb
inc
mov
mov
addr16
xor
es
test
push
cmp
adc
andl
add
sbb
dec
pop
xchg
sub
sbb
aas
sahf
xchg
push
mov
lea
insl
fdivrl
bsr
pusha
xlat
jg
in
test
sbb
repz
jnp
fisubl
test
jae
or
sub
fiadds
sub
push
add
pop
shl
sahf
cmpb
xlat
pop
and
sbb
mov
and
or
movsl
jp
shl
fistps
stos
add
icebp
adc
lods
or
or
dec
jbe
stos
stos
loop
test
sarb
dec
ret
bswap
sub
sub
fisttps
add
loop
in
inc
dec
mov
cmp
and
sbb
fnsave
jnp
sub
xor
lahf
and
jo
in
xor
push
shll
dec
xchg
adc
mov
call
in
xchg
mov
mov
icebp
mov
jne
out
mov
pop
shr
scas
in
cmp
pop
out
adc
dec
mov
call
fs
inc
jns
and
xchg
cmp
imul
int3
bound
push
push
leave
rcl
inc
mov
xchg
scas
mov
adc
sub
inc
lods
dec
sub
pusha
scas
jp
jge
dec
inc
lcall
fs
incb
mov
test
lock
jno
cmp
fsubr
aad
cwtl
push
aas
cmpsb
in
push
push
inc
add
fildl
pop
pop
jb
aad
push
xor
scas
mov
loope
inc
xor
repnz
outsl
bound
aad
jle
add
nop
popa
in
outsl
mov
iret
mov
rcll
fisubl
subb
mov
enter
or
push
mov
dec
xchg
pop
ficompl
inc
mov
fcomps
xlat
mov
pushf
jb
and
stos
stos
sbb
out
xlat
push
jo
fisttpl
jmp
adc
mov
and
aam
aas
pusha
cmp
mov
adc
sbb
mov
mov
imul
and
cmpsb
test
mov
pushf
jge
lock
sub
dec
dec
jns
adc
movsl
das
lcall
fdivrs
add
or
xchg
shlb
cmc
scas
pop
insl
fmull
sub
shl
repnz
rcrb
les
ret
dec
jg
inc
sub
repz
aas
enter
mov
stc
fdivl
lods
aas
enter
jl
pushf
stc
push
in
pop
ret
sub
jl
out
scas
mov
mov
das
pop
jo
mov
testl
fcomps
sub
adc
xlat
push
mov
lea
nop
fdivrl
push
xchg
or
dec
fisttpll
xchg
test
in
cmc
mov
pop
call
cmp
ja
dec
push
pop
mov
xor
pushw
mov
mov
or
dec
out
mov
mov
or
movsb
xchg
fwait
lods
rorb
mov
mov
add
sbb
ljmp
outsl
out
fistpll
test
scas
call
lahf
sbb
add
xlat
sbb
fs
push
xchg
fdivrs
rcll
dec
and
loop
mov
xor
inc
js
sub
subl
out
mov
daa
and
mov
xor
jmp
fsubrp
insb
cmc
mov
inc
jecxz
sahf
fidivrs
ret
lret
dec
stc
sbb
mov
inc
xor
xor
push
push
clc
sub
test
ret
pop
xor
jl
xchg
call
lcall
push
xor
mov
in
cmp
or
sub
into
ljmp
pop
mov
and
out
std
mov
mov
xor
popf
insl
push
cld
stos
add
int
adc
cli
or
out
inc
cmp
xlat
jb
hlt
xchg
push
jg
ret
mov
jb
bound
test
mov
mov
std
andl
fsub
mov
cmpsl
outsb
or
and
pop
test
sbb
mov
mov
popf
push
adc
pop
jns
aaa
mov
push
push
pop
mov
std
adc
bound
xor
push
imulb
xchg
or
mov
call
pop
dec
popa
mov
popa
or
sbb
mov
xlat
jns
inc
testb
cwtl
sbb
xor
adc
and
mov
fistl
fisubl
into
in
jmp
inc
adc
push
push
jb
inc
cmp
fdivrl
popf
aam
mov
in
call
roll
pop
sbb
push
jbe
fisttps
inc
das
lods
and
popf
cs
outsb
mov
or
fcomps
mov
lcall
mov
or
cmp
mov
jl
pop
cs
jmp
sbb
pushf
adc
aas
inc
aad
mov
xor
sbb
or
gs
xchg
push
and
sbb
mov
inc
test
mov
and
and
mov
sti
gs
push
lret
inc
mov
pop
mov
mov
imul
pusha
xchg
adc
sub
mov
pcmpeqw
jnp
dec
sbb
xor
pop
cmp
lcall
push
cltd
adc
sub
jmp
push
jbe
xor
inc
ds
push
and
lods
jmp
mov
push
je
test
jle
mov
inc
mov
loop
push
aam
dec
cmp
das
sub
pop
mov
bound
in
popf
pop
fiaddl
xchg
inc
fildll
insl
scas
add
xchg
les
push
inc
jns
in
lcall
inc
lock
imul
jp
mov
push
jecxz
push
cs
nop
push
lret
pop
imul
jmp
sub
xchg
mov
sub
jo
dec
mov
aaa
out
popf
xchg
sbb
inc
fdivs
push
aam
leave
insb
mov
jg
in
daa
cmp
mov
dec
arpl
test
xchg
cmp
fcomp
cmc
mov
mov
popa
adc
mov
inc
cs
adc
sbb
popa
js
fsubrp
mov
mov
mov
push
mov
or
ss
idivl
add
mov
push
scas
leave
push
cs
ljmp
adc
jg
xchg
pcmpgtw
mov
sbb
jns
and
xchg
sub
and
rorl
and
sbb
push
pop
mov
push
test
mov
pop
mov
sbb
dec
orl
cltd
pop
imulb
pop
mov
pusha
xchg
fwait
or
dec
pop
fmull
mov
scas
jmp
int3
aad
mov
jne
mov
js
fildll
jge
jmp
pop
add
push
cmp
std
dec
dec
push
pop
dec
pop
mov
mov
mov
dec
mov
mov
xchg
sahf
sbb
xlat
mov
test
jl
movsb
mov
jno
out
jns
pop
ss
daa
sahf
loope
cmp
sarl
pusha
xchg
mov
jmp
stos
in
and
ret
out
mov
xchg
je
xlat
pop
inc
test
call
adcl
nop
sub
mov
lock
add
xchg
jp
mov
pusha
stos
jmp
jno
cmpsb
jecxz
adc
inc
fwait
sahf
div
sbb
lods
xor
out
and
aam
adc
jbe
xor
aam
lds
sbb
mov
frstor
pushl
push
icebp
xchg
jbe
inc
sbbb
inc
cli
inc
testb
jns
push
lds
and
cs
sahf
mov
inc
pop
mov
adc
pop
sbb
idiv
dec
mov
sbb
jo
out
ficompl
or
lret
pop
jge
pop
jns
int
cmp
dec
fiaddl
xor
or
mov
pop
inc
test
mov
pushl
xchg
sbb
sbb
jns
rorl
pop
mov
xor
in
push
add
fsubrp
jo
mov
sbb
mov
and
cmp
sub
cld
fwait
xor
and
push
stos
sbbl
fdivrl
shr
int3
jp
je
push
movsb
mov
inc
push
loopne
adc
gs
add
push
and
loopne
dec
dec
hlt
jle
mov
fnsave
jbe
and
xor
adc
dec
in
push
push
pop
push
jmp
mov
icebp
mov
sub
dec
or
cmp
pop
pop
mov
fstps
cmp
mov
pusha
push
outsb
rcll
lods
jae
mov
xchg
sub
push
hlt
cmp
pop
nop
leave
mov
pushf
mov
mov
mov
add
pop
mov
insb
cmp
outsl
les
push
ss
outsl
cmpsl
pusha
pop
gs
jae
iret
shll
fwait
lods
loopne
inc
lock
jns
pop
bound
dec
jg
shrl
mov
sub
test
leave
add
lods
xchg
xor
sbb
les
test
fdivrs
or
das
je
dec
les
jecxz
jl
mov
pusha
add
mul
or
inc
jle
mov
push
push
rorb
das
sti
xchg
xor
fildll
add
or
jle
data16
mov
pop
insl
push
jmp
test
or
lea
adc
push
loop
dec
cmc
aam
aas
lret
mov
xchg
xlat
and
jns
insb
es
jnp
loope
scas
cmp
ljmp
cmp
mov
cmpsb
push
lahf
filds
loope
imul
rcll
cmp
mov
jne
lock
test
test
lds
outsb
adc
mov
push
add
add
loop
out
ret
leave
jbe
movsb
pop
mov
ficoml
xchg
in
mov
add
add
jmp
lfs
fidivrl
or
out
hlt
add
pop
fstps
cs
addr16
jge
mov
out
jmp
push
sbb
pop
lods
rcl
sti
or
fdivrs
dec
int
mov
jno
mov
lea
inc
les
cmp
cmp
xorl
stos
mov
pop
xor
fstpl
mov
je
dec
push
loope
imul
fdivrs
adc
out
jge
dec
aaa
xlat
in
mov
add
stos
fiaddl
lock
mov
add
je
push
cmp
iret
int
pop
mov
loopne
test
mov
add
jp
or
int
mov
cmp
fcoml
push
adc
push
push
xchg
push
or
nop
movsl
mov
xchg
orb
mov
les
and
mov
mov
cld
notl
out
xchg
push
in
decl
lds
pushf
and
mov
jnp
cmp
sub
add
lcall
push
int3
add
jp
lahf
ljmp
fcoml
rcr
pop
sbb
rcrl
imull
cli
ret
sahf
cwtl
loopne
sub
dec
and
scas
jbe
cmpsb
add
cli
mov
add
lea
call
sub
in
mov
sarb
ja
xor
lahf
adc
mov
xchg
rol
movsl
xor
rcl
push
add
pop
fistps
dec
ficoms
cmp
mov
repnz
cmpsl
pop
dec
popf
xor
int
lahf
arpl
xchg
push
sub
pop
pushf
int
stos
cld
es
pop
daa
lods
add
adc
lock
fcomps
out
push
pop
sbb
xchg
jns
cmp
imul
aam
dec
cmp
pop
in
mov
inc
vminps
fucom
push
push
mov
aas
stos
das
and
sub
fistpl
nop
xchg
rclb
xchg
out
pop
rol
test
mov
inc
add
stos
inc
sub
repz
xchg
pop
pop
je
dec
or
jbe
jmp
imul
pop
and
dec
cld
sti
clc
or
sarl
out
mov
fdivr
cmp
xchg
inc
mov
in
in
jecxz
shrl
outsb
mov
pop
jae
test
and
jb
and
add
sbb
dec
sbb
lds
lret
xchg
scas
adc
cli
loopne,pt
jae
mov
push
mov
jmp
and
out
mov
dec
nop
movsl
sub
mov
insl
stc
mov
ficoml
shrb
cmp
adc
int
xchg
ret
out
push
pop
mov
call
push
pop
shr
gs
aas
mov
fwait
push
data16
cmp
jbe
push
sbb
pop
mov
push
imul
lods
stos
sbb
adc
lock
mov
jl
out
out
ret
aas
std
outsl
into
test
cwtl
mov
jae
pop
stc
div
xchg
inc
dec
pop
pop
mov
push
jle
pop
sbb
inc
cli
out
xchg
mov
xlat
addr16
scas
mov
das
pushf
or
adc
out
pop
adc
cs
mov
das
out
notb
dec
lret
mov
sti
cmp
fisttpll
or
inc
mov
add
xor
aaa
xchg
mov
aad
or
push
sub
xor
xor
dec
cltd
add
ss
fld
test
idivb
sub
adc
mov
daa
mov
pop
les
imul
iret
sbb
xchg
add
fs
pop
movsb
mov
jne
pop
jo
mov
push
xor
sahf
cltd
dec
push
sbb
xor
jmp
rcrb
lock
ss
sub
dec
inc
mov
nop
pop
orl
int
xchg
clc
push
dec
mov
inc
mov
and
test
mov
test
ret
jo,pt
push
iret
mov
jb
or
test
inc
sti
clc
pop
mov
dec
lock
imul
inc
das
mov
pop
add
cmp
jmp
popf
shr
xlat
cmp
and
mov
pop
and
inc
mov
or
jle
fs
je
bound
mov
adc
mov
mov
fwait
cwtl
mov
mov
bound
pop
push
outsl
mov
test
inc
cwtl
mov
mov
nop
repz
mov
pop
loop
mov
mov
sub
or
dec
iret
push
jae
and
sahf
inc
pop
jp
inc
cmpsl
inc
inc
mov
das
notb
ret
sbb
sub
cmpsl
mov
dec
xchg
mov
nop
mov
mov
pop
lods
add
pop
movsl
ja
das
xchg
jle
jns
jbe
add
xchg
dec
mov
sub
jo
rcll
dec
jno
insb
js
cmp
jmp
jmp
and
rep
lea
popf
dec
cmc
push
lret
fucomp
cmp
mov
mov
adc
xchg
xlat
movsl
enter
pop
xchg
pop
jo
shl
and
int3
test
aas
and
xlat
jbe
jp
sbb
stos
jp
mov
mov
loopne
imul
inc
fwait
test
test
arpl
mov
push
or
push
push
lods
nop
aas
loopne
int3
lods
add
jp
imul
mov
bnd
mov
sbb
pop
fstl
pop
dec
lods
push
or
cmp
jg
outsl
sub
mov
mov
jmp
orb
lea
or
inc
inc
xor
mov
and
ret
sub
pop
lea
inc
dec
jne
shll
sahf
stos
dec
std
clc
xchg
fildll
out
sub
mov
cmp
sbbl
bound
add
sbb
rorb
jge
mov
add
les
out
mov
mov
lret
pusha
es
inc
xor
sub
movsl
cmp
lea
cmp
push
arpl
out
into
add
jae
mov
inc
scas
hlt
adc
call
mov
add
cltd
lds
rcrb
popa
adc
push
cli
mov
scas
js
int
jmp
scas
dec
lea
adc
add
leave
out
adc
xor
jb
xchg
lea
jmp
aas
cmp
addr16
std
cmp
xchg
out
insl
inc
arpl
push
ret
lea
cmp
cmpsl
popa
arpl
shlb
and
sbb
jg
dec
repz
pop
inc
incl
jno
arpl
test
pop
aas
lods
push
xor
cmp
mov
nop
push
xchg
mov
hlt
adc
add
adc
out
dec
and
pop
pop
stc
adc
xor
inc
push
pop
out
out
inc
and
cmp
test
ja
mov
jmp
fsin
mov
inc
jmp
popa
es
jmp
xchg
adc
leave
lcall
sub
mov
ror
fcomps
push
mov
jne
sub
in
adc
pop
mov
inc
rorb
jae
rcrl
mov
mov
es
cmp
add
test
dec
pushf
adc
popa
push
mov
mov
js
pop
lock
sbb
xchg
cmpsl
andl
xchg
inc
sti
mov
leave
iret
in
leave
jo
cmp
and
ljmp
push
push
pop
dec
push
pop
xor
xor
jle
ret
mov
testl
jmp
mov
scas
pop
sbb
mulb
test
je
leave
xchg
cmpl
pop
gs
daa
mov
pop
scas
xor
sbb
lds
test
aad
frstor
dec
mov
scas
dec
xchg
or
pusha
mov
mov
push
xchg
inc
jge
push
enter
ret
aad
notl
sbb
ret
icebp
adc
out
in
cmp
iret
lahf
loop
aad
in
push
ss
imull
xlat
repnz
push
sti
inc
mov
stos
sarb
cmp
fwait
or
add
ficomps
sahf
ss
and
dec
mov
cmp
cli
bound
ret
aaa
shrb
jne
addr16
dec
in
mov
fisubrl
mov
ljmp
or
add
loope
popf
aas
scas
mov
xchg
fs
pop
sbb
fidivl
or
jl
jo
into
rorl
imul
adc
adc
aas
mov
jg,pt
test
shlb
push
aas
pop
jbe
mov
loope
in
es
rcll
mov
sub
in
add
fmul
insb
iret
lds
add
rcrb
add
add
xor
push
orb
lret
out
pop
aas
inc
movl
shl
sbb
mov
fisubrl
mov
shll
jno
in
ljmp
in
push
arpl
xchg
subl
popf
push
push
mov
xor
popf
xor
scas
sbb
push
std
sarb
or
aad
fcmovu
pop
scas
ja
dec
push
push
adc
fcom
outsb
addr16
dec
inc
xchg
cs
or
push
dec
cli
rol
pushf
xchg
push
push
and
pop
out
add
test
insl
mov
push
repz
inc
cltd
inc
bound
jecxz
mov
cmp
sbb
jl
sub
ds
pushf
lods
cmpsb
xor
xor
add
dec
fxch
lahf
add
inc
pop
cmp
test
aam
jl
inc
mov
or
push
ret
fwait
mov
mov
xlat
jg
cmp
xor
jecxz
frstor
adc
push
mull
dec
lds
popf
mov
jne
fstpt
push
es
je
aaa
adc
cmpsl
dec
mov
push
mov
jb
test
mov
pop
popa
arpl
mov
dec
iret
inc
xchg
xlat
std
mov
pop
adc
sbb
jle
push
lahf
loope
cmp
iret
inc
sbb
push
push
lea
je
sub
sub
lds
leave
pop
dec
push
sbb
or
daa
int
jecxz
inc
repz
push
sub
cmc
mov
test
and
mov
imul
jbe
jg
xchg
scas
pop
mov
xchg
outsl
dec
test
inc
push
nop
andb
in
jae
push
sti
jg
pop
jmp
add
cld
dec
adc
xchg
push
aad
and
push
dec
dec
and
cmp
sub
xorl
cld
lcall
push
mov
mov
mov
cmp
loope
jb
pop
pop
xchg
cmp
sub
mov
xor
or
push
mov
cltd
insb
mov
cs
dec
cmpb
mov
andb
pop
push
aam
pop
or
jne
dec
and
nop
gs
mov
dec
jns
mov
cli
or
std
and
je
mov
in
cmc
mov
inc
aam
push
mov
out
inc
stc
outsb
or
nop
iret
adc
es
jl
ds
push
cmpsb
lea
hlt
negb
lock
sbb
mov
and
les
mov
iret
jae
negl
push
xor
inc
sub
sbb
adc
push
push
mov
and
iret
rolb
or
mov
stos
cmp
push
push
and
push
das
mov
jbe
aam
stc
xor
adc
jo
mov
push
loop
subl
pop
inc
jae
loopne
enter
mov
xor
jle
lods
hlt
pop
inc
shrb
aam
movb
addr16
test
cmp
pushf
sbb
mov
push
push
imul
and
std
clc
or
sub
sarb
mov
rcll
sbb
dec
mov
leave
fidivl
inc
rcrb
inc
lods
cmpl
mov
dec
ljmp
aad
out
inc
cld
in
not
sbb
lods
test
aad
push
push
mov
sub
hlt
mov
gs
aad
fcoms
pop
mov
xchg
cmp
pop
xor
or
adc
in
inc
cmpb
xor
sahf
xor
mov
or
pusha
mov
mov
sti
mov
mov
fstl
mov
xor
rcrl
jnp
outsl
ja
insl
mov
jge
pop
iret
inc
jp
mov
xor
jb
mov
repz
mov
sbb
xchg
shrl
in
fstps
aam
sbb
inc
jbe
std
xor
inc
jg
aam
dec
xchg
push
sbb
push
cmc
lds
or
sub
xchg
inc
push
pop
aaa
push
push
mov
xor
mov
cmpsl
icebp
in
mov
icebp
in
dec
pop
jge
or
adc
frstor
es
push
push
inc
mov
inc
in
js
mov
mov
add
shlb
mov
lea
cmp
fistpl
push
add
bnd
jmp
test
shll
xchg
jge
jno
loop
cwtl
push
xlat
cmc
add
push
divb
pop
aas
add
pusha
ret
and
pop
xor
xchg
ror
popf
mov
adc
push
mov
xchg
sub
jmp
fcoml
pop
mov
xor
shl
and
fsqrt
mov
enter
pushf
push
adc
jge
icebp
jge
jnp
push
test
sbb
lahf
notl
xchg
mov
fwait
cld
js
sub
imul
push
daa
inc
js
inc
lret
and
jbe
repnz
in
mov
sahf
shr
push
jne
and
iret
xor
arpl
xchg
inc
iret
fwait
cld
inc
pop
cmp
fwait
push
add
test
mov
mov
outsl
xchg
sub
lods
outsb
fnstsw
push
pop
popf
sbb
les
mov
mov
lret
jns
xor
loop
aad
test
xchg
mov
inc
in
stos
loopne
insl
cmpsb
outsb
dec
sub
adc
fnstcw
push
fstl
gs
xchg
pop
mov
or
mov
push
xchg
mov
jecxz
or
daa
das
sbb
pop
or
or
pop
inc
mov
pop
lods
out
push
outsb
sbb
das
ret
mov
add
dec
push
jbe
movsl
in
inc
inc
ficoms
not
jmp
cmp
push
sahf
jl
add
xchg
dec
pusha
and
cmpsb
shlb
sbb
jl
lods
fwait
dec
test
lds
mov
icebp
lahf
mov
cmp
into
pushf
cmp
push
inc
cltd
ds
std
nop
add
cmp
fucom
mov
mov
mov
sub
mov
in
mov
pop
push
push
inc
xlat
decl
mov
or
and
xchg
aad
neg
sarl
pop
pop
jmp
push
insl
lcall
inc
pop
pop
stos
mov
mov
pop
sbb
push
mov
roll
mov
adc
enter
cmpsl
and
decl
and
xor
movb
ret
out
repnz
jb
adc
int
int
jmp
jmp
stc
fdivrl
xor
cmp
inc
sbb
adc
mov
add
in
xchg
and
stc
or
cs
cmc
mov
inc
shlb
inc
scas
dec
fcmovnbe
call
std
xor
or
es
mov
inc
xchg
and
mov
fistl
push
mov
push
aad
pop
push
pop
xchg
hlt
xchg
jmp
test
iret
in
jecxz
lret
filds
rorb
sub
dec
add
or
iret
sarb
inc
xchg
push
cmp
jmp
and
push
xorl
inc
lock
cmp
into
xchg
sbbb
das
popf
fcoms
gs
lock
push
imul
push
push
sarl
cmc
adc
aam
int
mov
insb
cmpsb
jle
or
cli
cmp
push
scas
xor
xchg
push
lods
loop
push
jne
inc
out
pop
xchg
sub
clc
xlat
add
lcall
mov
andb
negl
iret
mov
xchg
jg
jo
das
lds
fwait
push
repz
out
jns
shlb
xchg
outsl
pop
mov
lahf
lret
fistpll
mov
xchg
subl
mov
cmpsb
jl
ret
jb
xchg
cwtl
or
xor
jmp
mov
lcall
push
mov
push
scas
cld
push
test
mov
repz
inc
dec
nop
loope
fistpl
push
push
enter
ret
adc
aam
xor
cmpsl
iret
mov
inc
nop
xchg
imull
lods
in
push
add
xchg
add
lahf
fnstsw
push
in
sbb
div
nop
daa
cmp
dec
cli
push
div
or
cli
adc
das
jecxz
push
pop
loope
fst
in
sbb
sarl
test
icebp
cmpsb
subl
xor
adc
stos
jae
icebp
in
arpl
push
sbb
aaa
repnz
jnp
xor
out
xchg
ljmp
dec
push
add
xchg
inc
xor
dec
xor
addr16
stos
jbe
mov
xchg
pop
cmpl
adc
dec
mov
pushf
pusha
cli
imul
adc
adc
xor
mov
das
xlat
jnp
scas
pop
mov
sub
or
ja
das
js
inc
push
dec
lcall
sbb
je
mov
stc
push
jb
xor
mov
mov
dec
push
fcoms
pop
add
leave
inc
sub
mov
and
cli
fldenv
inc
add
test
or
pop
xchg
sti
cli
mov
push
cmpsb
in
cmpsl
test
sbb
fwait
sub
repnz
adc
add
mov
frstor
cmp
test
xchg
testl
adc
test
mov
xor
ret
sub
into
cmp
mov
pop
mov
daa
cmp
xchg
cmc
jno
and
mov
jno
add
xchg
inc
ds
notb
mov
cli
pop
into
jae
fsub
dec
adc
mov
out
imul
push
push
xor
dec
mov
mov
mov
outsb
sub
loope
loope
dec
pop
call
inc
shr
sbb
movsl
cmpsb
add
cmpsb
clc
into
loop
jae
out
mov
xor
xor
andl
cwtl
ja
mov
adc
mov
and
repz
cmp
rol
pushf
out
popa
jns
pop
es
sahf
lock
sub
or
pop
popf
mov
cmp
xor
xchg
mov
and
push
rclb
mov
lret
std
movsl
js
pop
jecxz
jns
adc
jl
push
in
adc
fimuls
xor
inc
jmp
jle
sbb
push
mov
clc
inc
xor
notl
sbb
das
push
jno
clc
inc
mov
xchg
fmull
iret
rolb
dec
and
jnp
pop
imul
in
mov
mov
xchg
xor
mov
lret
andb
incb
addr16
sub
xchg
and
arpl
dec
bound
xchg
arpl
cltd
adc
jmp
jle
fiaddl
xchg
cli
xchg
daa
scas
sbb
insb
stos
sub
outsl
cmp
mov
arpl
cmp
test
loop
pop
add
xor
dec
xor
xchg
in
pop
ljmp
jnp
xor
movsb
xchg
fcomip
add
jno
mov
sbb
repz
scas
leave
stos
add
leave
nop
inc
add
jb
mov
lret
mov
pop
hlt
mov
orl
add
xchg
outsl
inc
mov
popa
push
out
repz
jge
jnp
mov
loop
into
lcall
inc
sti
jecxz
inc
sbbb
dec
enter
xchg
pop
cmp
cmc
xor
or
mov
test
mov
shll
rclb
into
dec
xor
aam
jecxz
cltd
push
xor
in
fcoms
xchg
sbb
push
fsubrs
mov
jp
divl
scas
das
add
jnp
mov
push
xchg
inc
or
add
pop
gs
out
sbb
mov
lds
cmp
jae
repz
dec
push
pushf
icebp
loop
xor
jae
pop
xchg
pop
out
sub
int3
fwait
loop
pop
dec
jecxz
sbb
cs
fsubs
add
mov
add
jo
add
or
mov
jo
dec
jp
enter
pushw
and
xor
xchg
sub
pop
hlt
mov
jne
in
clc
andl
rclb
mov
out
test
mov
jne
and
and
push
mov
insb
xor
mov
mov
out
add
or
mov
sti
mov
mov
in
aas
repz
cmp
sbbb
adc
xor
pop
dec
into
xchg
loop
dec
pop
push
push
jns
pop
loop
adc
dec
adc
lret
cli
sbb
fyl2xp1
div
mov
push
out
or
add
sbb
sub
pop
pop
sbb
andb
mov
sbb
or
fwait
std
scas
cmp
das
sbb
sbb
fmull
subl
rorb
pop
ret
sub
jmp
ret
enter
push
mov
scas
dec
aas
and
popa
xchg
popa
dec
pop
adc
push
ss
repz
xchg
xlat
mov
mov
bound
pusha
add
jmp
jmp
out
stc
cmp
cmp
mov
aad
btl
fxch
es
dec
fisttps
loope
sbb
lea
sbbb
mov
loopne
sub
enter
xor
dec
xor
xchg
ja
std
jge
adc
xor
idivl
adc
xchg
or
lret
fwait
repz
cmp
aaa
in
xchg
frstor
inc
xchg
inc
ss
int3
dec
icebp
negl
bound
dec
addr16
outsb
mul
cmpsb
sub
pop
dec
push
jmp
repnz
icebp
mov
sub
mov
mov
adc
jle
xlat
insl
pop
dec
daa
jg
push
mov
mov
add
sbb
pop
addr16
popa
fiadds
cwtl
jo
int3
cmp
ljmp
cs
sbb
pop
add
inc
pop
dec
fdivr
mov
sub
int
jecxz
bound
daa
push
sbb
cmp
and
and
mov
gs
adc
xchg
inc
sti
jno
and
ret
add
das
xchg
lods
mov
inc
xchg
mov
and
repnz
sub
lock
lods
scas
aas
adc
xor
pushf
loope
fildll
jns
push
push
adc
fs
jecxz
xor
inc
sub
xchg
or
add
mov
mov
fwait
push
scas
cmpsb
mov
outsl
xor
xchg
mov
sti
je
movsb
jmp
cmp
xorb
jne
sbbl
nop
jb
mov
push
je
cmp
icebp
mov
dec
jle,pt
adc
sbb
xchg
xlat
dec
dec
mov
mov
xor
rcll
inc
xchg
out
sub
icebp
aas
aam
fiadds
mov
jp
and
dec
mov
mov
loop
out
pop
jp
lahf
sahf
dec
cs
stc
xchg
mov
jno
pop
mov
imul
outsl
mov
es
mov
shlb
xchg
orb
mov
ljmp
push
cmp
inc
xor
scas
push
mov
movsb
rol
cmpsl
add
sbb
sar
push
xorb
not
or
push
enter
pop
inc
jo
pushf
insb
mov
push
rclb
jae
adc
or
iret
inc
add
or
clc
cwtl
les
cmp
mov
xor
insl
outsl
sub
cmp
mov
inc
cs
out
aaa
loopne
jle
or
outsl
add
and
pop
popf
loope
lods
loop
aam
enter
lods
mov
push
fsubl
out
call
jno
inc
mov
popf
cmp
or
mov
sbb
insb
mov
fistpl
mov
push
into
faddl
or
mov
jl
shlb
fstp
dec
pop
aad
mov
fwait
test
stos
push
mov
mov
mov
sahf
cmp
repz
lods
cwtl
fwait
loopne
rorl
fdiv
mov
ret
rcll
adc
jl
imul
repnz
cltd
int3
mov
mov
test
es
sub
scas
outsl
or
dec
pop
jbe
add
loopne
xchg
mov
into
jbe
stos
mov
mov
les
push
cli
outsl
in
or
fwait
push
inc
sub
xchg
sub
pop
clc
jecxz
out
or
push
pop
lahf
mov
outsl
ss
xor
outsb
lret
test
mov
subl
add
jae
mov
cmp
out
sub
or
adc
inc
cs
mov
inc
adc
imul
mov
orb
inc
dec
jg
sbb
mov
and
sbb
leave
loop
fdivrl
fwait
in
mov
inc
push
pop
mov
pop
push
xchg
mov
push
mov
scas
cmp
mov
push
jo
dec
pop
lea
sahf
cmp
xor
inc
push
pop
pop
adc
lret
fwait
pop
je
stos
push
dec
mov
mov
cmp
dec
scas
mov
insl
cmp
test
cmpb
movsb
mov
push
push
push
mov
popf
repnz
rclb
pop
fldcw
mov
cmp
cmp
mov
loope
mov
or
shll
or
loope
sub
jnp
dec
test
stos
push
es
adc
sub
negl
and
xchg
mov
es
push
pop
mov
cmc
and
inc
pop
cli
leave
inc
je
scas
push
dec
xor
sub
cmpsl
push
incb
daa
pop
push
dec
clc
shrl
jno
gs
sti
lret
insl
ror
mov
jnp
jle
lcall
int3
ss
jl
cltd
insb
sbb
pop
add
pop
push
fcomps
loop
cwtl
or
fs
adc
sbb
sub
cld
xor
dec
popf
rcrl
pop
mov
push
lea
mov
fcomp
inc
sbb
mov
dec
dec
in
pop
ret
mov
int3
sbb
repnz
mov
push
icebp
jbe
mov
adc
mov
ss
scas
push
lock
mov
test
mov
pop
ret
xchg
sub
jmp
mov
je
cltd
test
add
aaa
hlt
shrl
call
mov
ss
sub
int
inc
hlt
inc
jae
lock
and
mov
dec
mov
pop
xor
jle
into
mov
addr16
push
xchg
shlb
pop
push
stc
iret
jecxz
sbb
dec
mov
add
cltd
cmp
roll
out
sbb
lret
gs
lret
dec
jge
cs
xchg
inc
sti
add
pushf
das
aam
test
fisubrl
lahf
mov
xchg
ret
xlat
loope
daa
aas
or
out
cmp
lds
or
movsb
popf
dec
push
dec
icebp
and
or
push
sub
mov
inc
repz
lock
sub
inc
push
jmp
push
out
adc
mov
jae
mov
fimull
sbb
inc
out
jmp
call
movsl
mov
sub
or
xchg
adc
add
arpl
int
jp
mov
out
or
dec
movsl
dec
sbbl
sahf
cmp
jnp
arpl
test
sahf
faddl
lret
sub
mov
sub
pop
imul
fsub
insl
out
fsubl
dec
pop
push
movsl
rorl
mov
jg
stc
push
or
call
inc
inc
in
imul
push
cmp
or
mov
test
das
mov
imul
test
add
ljmp
jno
mov
inc
add
testb
mov
mov
push
mov
call
fs
push
push
jle
imul
clc
jno
add
or
cmpsb
test
dec
jae
aaa
das
icebp
icebp
ret
rcrb
mov
or
push
paddd
adc
pop
push
andl
xchg
movsl
cmp
sub
mov
cmp
inc
jo
xchg
jne
jns
fcmovu
loope
cwtl
sub
push
pop
hlt
fidivs
ds
pushf
gs
jo
jno
das
and
add
jne
std
stc
dec
sub
xchg
mov
xchg
xchg
mov
push
gs
sarl
xchg
arpl
enter
insb
das
push
add
pop
fldl
sbb
jae
lea
test
lods
or
pop
push
or
icebp
rcr
js
add
mov
scas
bound
inc
pushf
out
pop
dec
jg
xor
mov
sbb
shll
xlat
lods
mov
push
sarb
hlt
inc
lret
pop
les
sub
idiv
jmp
or
scas
mov
jo
leave
adc
rorb
clc
jg
sub
mov
shll
mov
outsl
cli
jle
in
sub
jno
rcrl
mov
divb
cmpsb
sub
mov
data16
mov
pop
movsb
loop
cmp
scas
pop
jge
cltd
repz
es
pop
mov
pop
test
iret
dec
xor
inc
cltd
jmp
jl
repz
scas
or
aaa
sub
mov
mov
push
sbb
mov
testl
ficoml
mov
add
call
daa
out
pop
fsubrs
jb
inc
mov
sub
and
add
dec
insl
out
add
out
ret
add
or
or
das
mov
ret
xlat
fdivrp
jns
jnp
push
addr16
cmpsb
mov
and
cs
sbb
inc
sub
adc
lahf
out
das
lods
adc
inc
inc
fs
xchg
fdivrl
out
scas
add
mov
pop
loope
and
or
pushf
stos
ja
lea
mov
xchg
and
or
adc
in
cmpsb
fs
and
mov
jecxz
fldl
roll
dec
xlat
or
adc
cld
and
sahf
cmp
shlb
imul
sbb
ss
ja
imul
sub
mov
jge
out
xchg
pop
js
loop
cwtl
add
xor
leave
lea
mov
xor
mov
xchg
push
lods
mov
insl
pop
push
aad
pop
sbb
test
pop
outsl
in
js
mov
sbbl
jb
aad
decb
adc
sti
sbb
out
arpl
rorl
ja
scas
mov
cmc
push
jecxz
loop
gs
mov
hlt
adc
lahf
sar
std
std
dec
adc
push
loopne
xchg
js
xchg
inc
shlb
sub
pusha
les
dec
in
pop
push
and
jnp
inc
test
mov
push
loopne
in
jae
rol
push
jp
dec
pop
inc
sub
mov
cmp
popa
xchg
mov
test
mov
dec
in
sbb
pushw
sub
hlt
mov
add
lret
orl
xchg
adc
jbe
and
or
mov
push
pop
das
mov
xlat
outsb
xor
lret
or
sbb
loope
jno
push
sub
int3
ret
sub
mov
or
or
js
add
push
aaa
roll
jecxz
xor
lods
xchg
sub
cmc
ret
and
push
mov
mov
xlat
sub
and
test
cmp
fsubr
cwtl
jp
mov
hlt
popf
nop
cmpl
cmpsl
lods
push
add
adc
es
inc
fldl
inc
test
aam
xor
add
inc
loopne
sub
cs
add
out
jo
lret
rorb
push
fdivs
cmp
fisttpll
cmp
ret
idivb
pop
pop
or
stos
mov
loopne
add
ja
lock
xlat
xchg
inc
lods
cmp
add
je
lret
sub
push
and
rcr
mov
xchg
cmpsb
jecxz
xchg
mov
jnp
xchg
movsl
add
cmp
adc
lods
ffreep
addr16
repnz
pushf
cld
aas
fwait
mov
sbb
mov
adc
push
pop
fwait
pop
cmp
es
dec
xor
js
inc
jae
jle
cmp
jno
adc
jle
sub
imul
or
stos
push
fcmovnu
cmpsb
or
sub
xlat
pop
int
push
js
mov
xor
mov
adc
dec
and
in
gs
fsts
inc
push
ss
cmp
add
in
shlb
adc
jne
insl
int
daa
lods
inc
outsb
fidivl
sub
adc
pop
jmp
test
nop
sahf
inc
cmp
cmc
push
dec
cs
or
inc
push
nopl
add
adc
lcall
arpl
mov
dec
dec
xor
adc
mov
cmp
add
inc
aad
int3
in
sbb
cltd
add
xchg
popf
mov
sub
insl
hlt
call
xchg
test
cmp
aas
cmp
dec
xchg
aas
into
clc
xlat
cmp
add
mov
int
and
xor
ss
jecxz
inc
mov
cs
les
ljmp
mov
jnp
addb
xor
add
in
in
enter
push
lea
pop
jmp
cmpsl
jbe
cmp
mov
and
leave
filds
or
andb
push
add
sub
flds
lds
setge
ds
sbb
insb
add
mov
fstpt
mov
dec
adc
jmp
sar
pop
xchg
roll
dec
rcll
shrb
lret
scas
push
and
mov
mov
test
cmp
pop
mov
rolb
inc
leave
cmp
dec
dec
addb
jb
or
inc
mov
jno
clc
or
xchg
js
mov
jno
or
into
scas
adc
cltd
cltd
mov
lock
in
push
sub
mov
mov
or
add
inc
dec
mov
mov
pop
jl
rcl
xchg
adcl
xor
dec
jbe
jbe
fstpl
xchg
dec
push
das
ss
pop
push
mov
add
cs
or
adc
add
js
push
cmp
dec
sub
or
jge
jmp
jne
subb
push
dec
pop
int3
push
cmp
mov
mov
fcoms
rcrb
test
fld
es
stc
sbb
adc
cmp
daa
jg
adc
nop
ds
mov
loope
es
ss
adc
cmp
xor
rep
stos
cmc
mov
outsb
sbb
out
xor
mov
mov
scas
pop
daa
imul
ds
sbb
mov
popa
dec
test
lret
cmc
insl
pop
push
fs
jno
dec
xlat
dec
cld
xor
mov
mov
pop
xchg
cmp
leave
sbb
not
cmp
add
jecxz
and
jns
testb
in
xchg
mov
adc
ljmp
pop
and
lock
mov
mov
imul
cmp
adcb
data16
cmp
pop
inc
mov
push
insl
cltd
test
inc
popa
test
and
push
popf
sbb
movsl
test
outsl
movsl
pusha
sub
out
frstor
cmpsl
fimull
psubusw
push
inc
lds
mov
pop
loopne
push
adc
sbb
xor
test
xor
dec
cmp
shl
iret
push
ljmp
into
pop
jbe
test
popf
call
test
mov
cmp
jmp
imul
cmp
test
xorb
lea
cmp
jae
subl
jb
fwait
adc
jb
rcrl
add
andb
cld
sub
sub
mov
or
mov
sbb
loope
sub
mov
std
xchg
xor
insb
mov
sbb
xor
and
mov
out
mov
xor
lods
pop
jmp
shll
push
sub
pusha
incb
push
loop
loopne
or
negb
jo
lcall
add
push
cmp
fisubl
orb
out
int3
je
shl
pop
push
dec
mov
ret
cs
das
in
push
pusha
mov
filds
negb
pop
inc
sub
jle
pop
ret
sub
repz
rcll
repnz
pushf
dec
push
or
repz
mov
or
sub
mov
or
leave
or
ja
mov
xor
jo
addl
clc
lods
insb
into
test
inc
mov
jb
fld
stos
jmp
icebp
mov
dec
jg
mov
stos
addr16
xchg
xlat
sbb
cs
pop
jb
dec
stc
fnstcw
out
push
aaa
into
cmp
push
mov
mov
or
and
cmp
inc
jno
or
insb
pop
sahf
faddl
add
adc
fdivs
stos
sbb
push
mov
mov
mov
push
mov
scas
cld
mov
cmp
mov
dec
movsl
arpl
sahf
les
or
and
out
mov
sbbl
sbb
jp
dec
les
push
or
mov
mov
xchg
arpl
aaa
popf
pop
or
adc
ret
lds
gs
lods
in
xlat
xchg
orl
sub
xchg
das
sbb
jno
daa
xchg
rorb
cmp
movsl
cwtl
repz
and
bound
mov
lods
out
mov
mov
repnz
inc
movsb
xor
cmp
gs
and
fistpll
jl
fdivr
lahf
adc
outsb
and
cltd
cmp
pop
xchg
icebp
cwtl
test
xchg
push
mov
fdiv
lods
jmp
adc
or
cltd
outsl
cltd
in
test
andb
xchg
mov
lret
and
rcll
popf
add
fsubp
pop
push
sbb
xchg
mov
xchg
add
pop
jge
addb
inc
pop
push
pop
push
push
mov
popa
xor
xlat
dec
fwait
icebp
xor
and
pusha
scas
leave
mov
mov
imul
inc
imul
push
cld
pop
jmp
mov
mov
mov
add
jmp
cmp
adc
xlat
out
and
stos
clc
jne
push
leave
popf
int
and
aad
adc
ffree
jg
mov
repz
cltd
decb
inc
out
aaa
clc
mov
mov
push
loop
fimull
gs
xchg
xchg
jae
outsb
out
add
aam
pusha
mov
ljmp
add
enter
loopne
push
mov
sbb
movl
dec
push
dec
jmp
xor
lods
out
cmp
or
cltd
loope
sub
and
testl
rclb
dec
mov
push
stos
add
jge
aas
scas
inc
pop
mov
adc
repz
mov
xor
push
add
stc
mov
leave
into
aam
inc
js
hlt
or
push
pop
xor
mov
jbe
push
cli
mov
repnz
in
add
notb
popa
test
mov
leave
push
outsb
call
or
ljmp
xor
scas
je
jnp
mov
xor
int3
leave
lea
mov
fwait
jg
push
movsl
mov
dec
outsb
mov
xor
pushf
mov
bound
fs
cli
jae
gs
sahf
jno
cmc
push
out
das
mov
mov
in
dec
sbb
scas
filds
mov
mov
hlt
cmp
jg
in
or
sub
out
fildll
cmp
xchg
in
pop
jbe
dec
xchg
mov
pop
pop
push
fnstenv
lret
and
loopne
push
pop
lret
push
mov
pop
add
inc
jb
lock
mov
jne
orb
pop
out
fstps
push
lock
out
mov
xor
sbbl
jb
je
add
fidivrs
xchg
pushf
and
out
fistps
xorb
jae
shl
pop
aaa
and
sbb
pop
mov
dec
xor
push
daa
pushf
push
mov
jnp
dec
dec
in
pop
lock
ss
mov
leave
adc
stc
fdivl
dec
jno
mov
clc
push
jo
mov
push
out
aad
mov
mov
fnstenv
jnp
or
push
push
fadds
and
sbb
repz
shll
push
lret
xchg
sbb
jnp
clc
inc
mov
cs
outsl
out
push
mov
aam
mov
clc
xchg
flds
push
add
xchg
repz
fstpl
orl
cwtl
and
insl
fstpt
pop
loopne
jmp
aam
shlb
pop
mov
cli
ret
push
lret
jmp
xchg
dec
adc
dec
adc
lahf
cmovle
std
cmp
mov
in
cmp
add
ret
sti
mov
rorl
push
mov
adc
ja
mov
cmp
popf
mov
lret
and
pop
popa
shlb
iret
cmpl
jno
dec
pop
je
xor
aam
adc
jno
sub
dec
sub
xchg
popf
aam
push
mov
cmpsl
lods
shr
push
jmp
mov
mov
add
sub
dec
jne
imul
enter
pop
xor
mov
pop
hlt
js
fcoms
cmp
xchg
mov
popf
mov
gs
jb
fpatan
pop
mov
mov
rcr
rorb
pushf
sbb
jno
jle
pop
pushf
jg
mov
xor
push
fnstenv
ds
dec
inc
test
xor
popa
or
add
test
inc
xor
cmp
repnz
push
aad
pushf
xchg
mov
pushf
pop
lret
xchg
mov
xchg
and
repz
push
lds
in
in
pop
test
out
repz
or
fs
sti
call
movsl
fs
imul
inc
mov
mov
cwtl
ss
scas
or
fdivrp
push
mov
sbb
pusha
jae
cmp
ret
and
push
mov
sti
or
in
pop
outsl
push
test
jb
jp
or
and
imul
jb
mov
add
and
aad
imul
mov
push
jge
je
pop
jae
outsl
sbb
push
sbbl
push
ja
jp
jp
sub
insl
pusha
lret
jp
add
cld
popf
popa
jb
dec
clc
sbb
dec
repnz
testl
pusha
loope
add
loop
mov
push
or
xchg
fnsave
add
push
data16
jo
inc
jnp
jmp
aas
mov
stos
jb
mov
in
push
arpl
fstps
adc
es
sbb
in
cmp
mov
sahf
scas
or
loop
mov
mov
inc
mov
add
lea
add
cltd
ret
sbb
outsl
or
fstps
adc
jno
or
dec
flds
push
mov
cwtl
sbb
or
stos
shll
cmp
inc
mov
jmp
adc
aas
lods
or
cli
and
mov
sbb
aad
ret
lea
pop
int
push
insb
imul
inc
or
clc
or
loope
or
sub
ret
int3
dec
insl
and
mov
lret
int
leave
jbe
adc
lahf
fnstsw
and
lcall
adcb
sbb
jb
loope
or
popa
into
dec
decl
mov
sub
sti
adc
icebp
sbb
pop
add
xor
sti
subl
sub
mov
cmp
stc
clc
negb
xor
jge
xchg
jo
jnp
incl
cmpsb
adc
hlt
mov
mov
ret
mov
mov
outsl
lret
fs
pop
cmp
inc
inc
andb
inc
xlat
push
gs
hlt
imul
pop
cmp
out
push
xchg
fistpl
fs
sbb
rolb
pop
and
lock
sub
sbb
jae
cmc
testl
sbb
xlat
add
pusha
cmpsb
dec
fsubrl
ja
mov
loope
mov
jnp
mov
pop
or
cltd
bnd
adc
sti
sbb
pop
repz
sahf
mov
arpl
jbe
inc
sub
gs
sub
xchg
or
and
movsl
inc
add
pop
leave
push
out
jp
mov
repz
test
ds
inc
xchg
sti
imul
mov
cmpsl
aaa
add
out
in
dec
cld
xchg
jns
aaa
test
push
push
dec
or
lret
sbb
lret
loop
xchg
sbb
int3
add
mov
mov
in
stos
aaa
aad
sub
in
outsl
mov
aas
outsb
fninit
mov
insl
fnstenv
out
jmp
push
mov
jne
nop
icebp
cld
das
push
mov
mov
push
dec
jecxz
inc
adc
movsb
inc
inc
push
ret
xor
clc
scas
stos
mov
insb
push
xor
mov
aaa
icebp
mov
mov
scas
jl
dec
mov
mov
mov
in
fcoms
jno
sbb
out
push
clc
ds
cmp
das
scas
mov
jmp
repnz
jmp
test
clc
dec
inc
enter
push
pop
mov
mov
test
mov
or
cmpsb
adc
push
mov
jg
mov
out
mov
fistpll
lock
pop
sbb
xlat
ss
fnstsw
xlat
push
int3
dec
rolb
or
pop
inc
cli
clc
xor
xlat
or
leave
inc
xchg
jo
fbstp
push
jecxz
adc
dec
idivl
jb
xchg
mov
fisttpll
pop
cwtl
shrb
adcl
scas
out
push
jae
out
dec
aas
jg
adc
dec
je
in
notl
xchg
fsubs
imul
xchg
and
adcl
pop
or
icebp
push
or
mov
mov
mov
inc
jno
test
mov
cmc
repz
or
cmpsl
add
insl
in
xor
or
xchg
adc
jg
cmpsb
or
mov
xchg
out
enter
push
iret
fiaddl
mov
aam
add
cmp
push
or
add
add
sub
or
push
scas
movsb
movsb
scas
fdivp
cmp
shrb
ret
cmp
jl
cmc
mov
lds
dec
jl
pop
push
cmpsl
push
sub
in
inc
shl
jmp
js
test
pop
adc
orl
pop
lret
aas
leave
pop
or
cmpb
cld
fnstenv
gs
ljmp
cmp
jp
iret
insl
sbb
lret
std
or
sbb
xchg
mov
mov
cmp
push
in
out
sub
ss
jo
push
lahf
and
push
aam
mov
xchg
out
andb
int3
bound
xchg
sbb
lods
inc
push
ja
sub
fdivl
shll
imul
push
lock
dec
push
xor
fnstcw
aad
loope
icebp
out
sbb
leave
in
mov
int3
push
stos
lret
in
sbb
sub
xchg
cmp
sub
pop
mov
icebp
push
mov
das
pusha
xor
call
dec
and
and
dec
daa
loope
stos
mov
cltd
ljmp
or
lcall
and
dec
insb
push
or
and
push
mov
fs
mov
test
ret
mov
lahf
mov
add
sub
lahf
add
jnp
in
push
jno
mov
aas
push
aaa
sbb
jb
inc
pop
jb
ficompl
inc
cmpsb
subb
push
dec
lcall
imul
pusha
inc
cmp
mov
sub
bound
jbe
test
mov
push
filds
cld
out
fdivp
das
lods
jnp
jo
fxam
dec
sbb
loopne
lea
xchg
movsb
aad
dec
arpl
andl
mov
lods
jae
mov
xor
jae
aad
mov
and
daa
jp
mov
out
adc
fists
pop
out
lods
dec
iret
adcb
dec
enter
adc
add
out
into
inc
repnz
xchg
lret
pop
adc
in
and
cmp
icebp
sbb
mov
mov
std
or
pop
repz
out
push
lea
or
sarb
xor
call
add
in
jecxz
mov
xchg
pushf
in
mov
shrb
int
cwtl
xor
movsl
sub
lcall
stos
push
popa
xchg
in
mov
cltd
jl
mov
jge
cmpsb
jnp
int3
pop
rclb
mov
insb
jp
push
inc
hlt
data16
jnp
push
cltd
insl
add
imul
repnz
pushf
sub
adc
xor
daa
push
or
je
test
xor
fldt
adc
sub
jle
fsubr
jecxz
sub
cmp
lahf
or
dec
mov
ret
adc
mov
mov
fsubrp
fs
int3
mov
jns
enter
mov
and
jne
xchg
adc
clc
sub
rcr
jge
jae
jnp
stc
mov
outsb
mov
sahf
cmp
jge
jmp
dec
dec
mov
int
mov
add
or
int3
adc
test
loop
cmp
into
rcl
mov
fimull
push
subl
sub
roll
mov
mov
into
int
pop
mov
cli
clc
cmpsb
mov
mov
inc
dec
xchg
paddq
filds
hlt
cmp
push
js
dec
movsl
push
test
mov
xor
dec
xchg
xchg
xor
mov
imul
fisubs
jg
push
mov
mov
xchg
mov
lea
pushf
dec
enter
mov
push
jge
jecxz
adc
xor
leave
int3
sbb
out
mov
push
xor
cmp
mov
mov
std
push
inc
cld
adc
add
lods
inc
pop
inc
jbe
jmp
jns
mov
mov
test
and
scas
inc
xchg
inc
clc
and
das
cmp
in
jmp
push
sarb
mov
cwtl
std
je
cmp
or
sub
jae
and
or
xchg
nop
push
adc
scas
push
sbb
mov
xchg
push
je
and
cmpsl
ficomps
loopne
lods
andb
xor
ret
xor
dec
icebp
pop
dec
sub
cmp
xor
jbe
test
pop
sbb
jnp
adc
lret
hlt
adc
push
xchg
out
test
or
inc
mov
mov
xor
or
fdivrp
arpl
adc
push
cmp
iret
imul
and
adc
sahf
jle
nop
xchg
push
scas
sub
sub
shrl
inc
lock
jg
and
inc
xor
lds
and
xor
pop
out
push
call
cmp
lret
add
loop
andl
lea
xadd
dec
ficompl
cltd
add
sub
mov
add
and
rol
bound
inc
push
in
movsb
sti
repz
mov
xor
repnz
fdivr
mov
test
xor
add
lock
jns
and
out
push
outsb
pop
mov
data16
test
sbb
and
push
adc
fwait
push
or
mov
fstpl
insl
lahf
addr16
lea
dec
inc
jbe
dec
fcom
pop
shll
repz
out
mov
lahf
loop
fildl
int
lds
je
stc
add
sahf
mov
jo
int
push
mov
insb
cmp
cmpsl
adc
cmp
push
sub
insl
and
popa
push
and
scas
mov
lret
sbb
into
cmp
pushf
cwtl
jecxz
mov
loopne
or
mov
mov
adc
fisttps
mov
fsubrs
lahf
inc
jecxz
mov
bound
icebp
push
or
popa
lea
out
iret
mov
ja
clc
jae
pop
add
int3
xchg
rcll
popf
or
push
sbb
dec
adc
dec
in
inc
out
andl
inc
idivb
test
mov
pop
mov
insl
mov
sub
cmp
andl
sub
sbb
pop
daa
cmc
fs
lret
xor
push
add
int
je
ljmp
popa
mov
pop
lret
lea
fnstsw
and
mov
sbb
xchg
or
aaa
add
pop
into
or
stos
je
xor
push
cld
sahf
mov
rolb
inc
bound
pushf
and
int3
int
push
fists
loopne
mov
dec
or
push
pop
sbb
push
shll
dec
addb
nop
clc
push
xor
and
sbb
push
test
arpl
pop
sahf
or
push
cld
aas
add
xchg
pop
xor
jmp
enter
jne
jne
out
and
call
popw
cltd
sbb
pusha
addr16
fs
push
insl
or
dec
das
jns
test
test
aas
jo
fistl
lret
hlt
loopne
dec
dec
lret
push
sbb
or
scas
ret
inc
xchg
cmp
inc
inc
std
xlat
adc
add
jg
loopne
mov
cmpsb
xchg
and
mov
cvtps2pi
adc
fistl
lock
mov
je
sbb
lods
fistpll
pushf
repnz
jns
sbbb
leave
rorl
loopne
sub
cmp
pushf
orl
adc
jne
out
pop
xorb
pop
in
out
xor
xlat
arpl
enter
xor
pop
scas
jecxz
or
sub
xchg
jge
ja
adc
pop
fcmovb
imul
push
or
dec
mov
icebp
ret
push
shr
mov
cmp
mov
push
stos
popf
adc
xchg
cmp
xchg
aad
mov
lahf
xor
and
mov
int
testl
cmpsb
loope
inc
add
cmpsl
mov
dec
sbb
pop
lds
adc
and
into
testb
mov
lret
int
sbb
imul
inc
sub
insl
xor
enter
not
xor
ja
add
and
iret
jp
loopne
sbb
mov
pushf
sbb
call
push
pop
jp
pop
xor
push
stc
jmp
push
repz
dec
orps
das
xchg
stos
mov
data16
aaa
ret
jecxz
mov
and
cld
pop
roll
aad
rcll
js
inc
ret
push
addr16
push
int
push
cltd
or
daa
test
pop
rcrl
xor
je
cltd
sbb
sti
pop
subl
mov
inc
sbb
mov
sbbb
push
cli
mov
inc
jmp
and
cmp
inc
ficompl
in
sub
dec
xchg
inc
and
mov
sbb
lahf
popa
xchg
sar
scas
je
cmp
add
mov
sub
aaa
shll
lds
and
test
xor
aaa
loop
xchg
test
inc
adc
scas
imul
adc
sbb
xchg
popf
hlt
mov
mov
fmull
jp
xchg
pop
mov
dec
lods
inc
xor
dec
push
orl
push
lret
jae
mov
pop
and
ds
ljmp
or
fs
in
jmp
push
adc
dec
fdivrl
addb
int
jns
jne
lock
and
cmpsb
xlat
mov
mov
or
inc
xor
jl
push
or
xchg
cmp
mov
jmp
add
daa
or
jbe
lods
int3
mov
lahf
aad
cmp
mov
sub
loop
cmpsl
ret
sarl
movsl
pop
fbld
out
jno
je
and
in
push
dec
jp
shlb
add
mov
mov
sub
add
xchg
inc
aam
negl
ja
mov
or
adc
sub
ljmp
sbb
std
push
push
pop
pop
dec
sub
sbb
repnz
mov
jne
bound
mov
xlat
mov
or
dec
dec
sbb
inc
aad
adc
pop
add
jbe
mov
mov
sbb
mov
mov
add
inc
or
fcoml
fs
test
mov
popf
out
loop
cmp
and
dec
pop
mov
adc
cmp
inc
inc
cmp
icebp
lcall
pop
cmp
sti
xorb
lahf
rcrb
inc
clc
xchg
rclb
sub
xchg
lcall
push
out
subl
out
es
adc
push
jno
xchg
xchg
add
shrb
std
inc
mov
cmp
sbb
cmp
hlt
add
fdiv
stos
cmp
aas
add
mov
sub
iret
sarl
mov
jle
and
je
stos
xor
push
push
popf
mov
rcll
popf
fisttps
jae
outsl
fsubrp
cld
inc
ds
inc
xorl
in
out
fildll
addr16
mov
std
inc
das
or
cmp
push
clc
xchg
fs
addl
das
lahf
and
in
sbb
inc
sti
data16
je
icebp
mov
cld
adc
xlat
jmp
jb
jmp
sbb
push
sbb
pop
push
cmpsl
cltd
rcl
jp
jg
xchg
xchg
jg
out
push
std
or
jle
stos
mov
shrl
xor
stos
roll
pop
into
icebp
call
push
fdivrp
push
out
clc
fdivl
clc
xchg
ja,pt
aad
adc
fs
addr16
cmp
cmp
mov
mov
push
icebp
or
mov
xor
mov
mov
inc
push
add
mov
scas
call
xor
ds
mov
out
sbb
pop
inc
xchg
fstps
popa
sti
imul
fsubs
inc
dec
push
aad
mov
xchg
leave
into
jo
sub
and
das
fisttps
push
ljmp
or
sub
int
sub
sub
nop
add
push
or
shll
adc
inc
xlat
repz
push
sub
jg
xchg
and
orl
mov
adc
fwait
imul
adc
pop
xchg
aam
mov
out
repz
orb
ja
sub
xor
push
repz
pop
xchg
pop
in
xor
jno
out
das
mov
loopne
insl
lods
mov
mov
push
xor
insb
movsl
push
cmc
adc
pop
daa
adc
add
fiaddl
inc
enter
jne
inc
inc
popa
or
inc
push
push
xor
incl
out
and
push
movsl
pmaxsw
repz
pop
sbb
mov
enter
movsb
iret
leave
out
dec
mov
insl
subb
fs
pop
roll
ja
xchg
aam
and
and
mov
inc
mov
mov
fmull
push
inc
adc
test
rolb
push
push
pop
sub
sub
adc
mov
pop
and
aas
push
rclb
inc
clc
xor
add
mov
xor
xor
nop
mov
add
jne
push
fcoml
leave
and
imul
adc
xchg
jecxz
jae
xor
sbb
andl
lods
cmp
xchg
orb
fistpll
mov
sbb
or
lock
add
mov
in
push
mov
jg
lods
in
out
push
jne
adc
stc
pop
xchg
ss
jp
push
cmp
xchg
insl
jns
jmp
dec
movsb
mov
mov
adc
sbb
pop
lret
sbb
dec
push
js
lock
notb
repnz
loopne
jb
ja
push
lahf
imul
mov
sahf
test
mov
adc
mov
out
lret
inc
pop
fsubl
stc
jns
cmpsl
pop
add
add
lea
push
jo
hlt
push
mov
outsb
loopne
cmp
cmpsb
cmpb
shrl
leavew
xchg
dec
cld
daa
push
xchg
cwtl
movsl
mov
mov
xchg
pop
xor
loop
mov
or
jnp
jae
movsb
add
ss
xchg
xchg
pop
jo
lods
outsb
mov
daa
xchg
ret
daa
loopne
pop
mov
adc
push
sbb
aad
stos
or
jo
repz
insl
lea
test
push
movsb
jns
ljmp
loopne
lcall
es
jb
add
mov
js
out
sbb
xor
divb
jle
adc
imulb
icebp
pop
sti
cli
pusha
insb
sbb
test
and
pop
subb
push
fimull
pop
movsb
iret
fnstcw
flds
in
add
add
mov
int
shl
lds
xchg
xchg
jb
je
push
xlat
sub
cmc
shrb
sub
push
jbe
xchg
loop
inc
inc
jne
rcrl
ret
lret
push
in
stos
xor
cwtl
sbb
inc
adc
mov
loop
sub
mov
pop
pop
sti
pop
les
cmp
icebp
pusha
adc
mov
lahf
cmp
fdivl
inc
clc
lret
pusha
in
jae
jg
lcall
repz
cmp
sub
pushw
xchg
dec
in
jb
sbb
pop
pop
add
sub
or
inc
test
hlt
jne
in
xchg
stos
out
sub
lcall
repnz
movsl
stos
fsts
cwtl
loop
jnp
jmp
and
incl
push
sahf
mull
or
cmpb
sbb
xchg
imul
xor
repz
iret
sub
loop
pop
cmp
out
lock
lods
inc
mov
je
lret
mov
shl
xchg
jg
xchg
push
push
loopne
pop
sbb
pop
pop
dec
and
mov
inc
fstpt
bound
cmp
ljmp
es
ret
flds
stc
sbb
jb
int3
sbb
icebp
and
popf
jno
and
cmp
shlb
ss
js
sarb
pop
cld
add
stos
fs
adc
jle
mov
lcall
mov
jbe
sub
sub
movsl
popf
xor
popl
bound
xchg
sbb
cmp
fmuls
jno
mov
out
sub
lcall
outsb
lea
adc
cmp
mov
clc
adc
lods
and
ret
ja
cmp
jb
out
negl
into
lds
dec
sbb
cmp
test
mov
xor
call
sbb
cwtl
adc
mov
and
leave
adc
pop
sub
and
or
push
jbe
sbb
push
jl
mov
pusha
inc
lock
lods
outsl
add
ds
mov
fadds
mov
and
xor
adc
subb
push
test
adc
repz
fldl
jb
jns
pop
sbb
mov
lock
or
push
add
inc
push
jae
aam
dec
jmp
cmp
cmp
pop
mov
or
push
xor
sub
ror
push
nop
mov
xor
clc
or
shrb
data16
cmp
dec
stos
pop
push
or
cld
test
test
jbe
mov
push
outsl
mov
mov
pop
pop
mov
out
push
push
dec
adc
mov
xchg
shrl
mov
pusha
testb
mull
pop
cmp
sub
lock
xchg
jmp
push
mov
lcall
cmpsb
xor
adc
jecxz
sub
sbb
xorl
sbb
and
push
xchg
daa
add
xor
dec
adc
lds
inc
cmp
daa
subb
lods
lods
dec
shrb
shll
subb
stos
popf
hlt
iret
cwtl
bound
mov
push
movsl
fimuls
pushf
pop
push
ret
pop
or
imul
pop
mov
sbb
ficoms
verw
je
adc
ss
xor
in
cmpsl
scas
aaa
mov
mov
rolb
pushl
mov
xor
or
mov
xor
cmpsb
stos
mov
out
lock
add
sbb
das
cmc
bound
bound
iret
add
cmp
aam
jae
dec
mov
and
mov
add
push
movsb
mov
ds
sar
loopne
cmp
lret
fstp
aaa
and
mov
and
fbld
dec
push
outsl
in
mov
add
cmpsl
inc
scas
dec
fcompl
das
push
cmc
push
shl
sbb
out
mov
mov
ret
leave
iret
pop
pop
push
sub
icebp
sub
subl
inc
adc
fdiv
insl
mov
out
pop
or
mov
mov
loopne
stos
xor
jbe
fs
stos
notl
dec
sarl
testl
push
dec
push
inc
ret
cmpsb
sbb
cmpsb
popf
jnp
mov
xorb
cmpsl
jne
add
mov
mov
inc
jg
pop
data16
fmul
dec
ja
pop
mov
pop
mov
pop
sbb
arpl
and
inc
lods
pop
outsb
mov
out
inc
fcompl
xchg
arpl
mov
adc
cmp
dec
insl
popf
jmp
push
faddp
and
std
lods
jcxz
pushl
inc
clc
cmpsb
mov
fs
inc
jnp
sub
add
cmp
mov
outsl
xor
imul
fwait
scas
adc
movsb
pushf
pop
pop
adc
cmpsl
push
lahf
sub
daa
and
xor
dec
mov
or
loop
push
repz
sarb
aas
mov
mov
loopne
std
cmp
test
and
mov
sbb
and
loope
addl
cs
idivl
jecxz
js
shlb
aas
cmp
insl
xchg
test
shll
mov
stc
pop
int
inc
sti
pop
mov
stc
push
dec
bound
ljmp
shrl
movsl
imul
xchg
arpl
repz
in
mov
adc
xor
inc
jo
dec
fisubs
lea
ror
lahf
xorl
dec
inc
shll
cs
mov
fsubl
push
in
adc
outsl
add
popa
mov
in
xlat
arpl
cmp
ret
aas
sub
jg
ja
bound
jo
mov
data16
aam
sbb
jne
sub
or
call
jle
test
sbb
dec
pop
mov
stos
mov
push
arpl
push
int
in
xchg
into
mov
sahf
adc
adc
fnstsw
cmc
fdivl
mov
out
andb
and
pop
cmp
mov
dec
xchg
or
xchg
add
pop
enter
popa
or
jecxz
push
fiadds
popf
nop
test
add
ds
push
inc
add
xchg
xchg
jne
fsubs
cmp
fistpl
inc
pop
out
push
shll
repnz
lods
mov
lret
fildl
test
test
imul
mov
test
fwait
mov
xchg
lods
xchg
imul
mov
xchg
stos
enter
sbb
mov
mov
and
into
cs
push
dec
xchg
mov
adc
rolb
jbe
jl
sbb
data16
inc
imul
ds
addl
xchg
mov
les
add
dec
jo
ljmp
enter
pushf
xor
pushf
cmp
out
iret
shl
mov
jmp
jb
mov
shrb
std
sarl
add
cmp
sub
adc
in
pop
jnp
push
mov
iret
test
imul
push
or
sub
lock
mov
fldl
frstor
and
or
imul
pop
jb
lock
dec
js
sub
aam
lret
jns
jae
sbb
cld
imul
adc
test
inc
dec
add
daa
xor
sbb
ret
sarl
mov
inc
pop
sbb
shrd
xor
testb
outsl
std
gs
push
sub
je
mov
call
or
fwait
dec
and
cltd
in
arpl
mov
xor
inc
rcrl
and
sbb
int
cmpsb
xchg
js
fwait
pop
stos
in
and
lods
mov
jae
roll
xchg
jmp
push
adc
arpl
dec
leave
push
push
sub
xor
jmp
jno
cli
jecxz
cmp
ret
lahf
ret
pop
xchg
mov
aaa
mov
mov
pop
mov
enter
pop
inc
jg
inc
test
or
enter
jo
inc
inc
test
dec
dec
data16
cmp
xchg
jge
int
jge
rcrl
inc
pop
mov
mov
lock
insl
dec
ret
in
ret
jae
dec
pop
test
cld
das
inc
repz
jae
mov
cltd
repnz
pop
ss
push
ljmp
lcall
jl
int
jae
add
sbb
ret
adc
pop
outsl
xchg
mov
out
ficoms
mov
mov
sbb
fldt
out
sub
not
sbb
aam
mov
lahf
mov
sbb
mov
js
pusha
push
popf
jae
test
jg
leave
mov
test
add
shlb
push
mov
les
dec
jno
outsl
inc
jge
adc
mov
push
lock
or
test
stos
ljmp
jbe
pushf
out
cmp
dec
int3
inc
adc
mov
jp
je
aas
cmp
nop
cmp
movd
mov
mov
in
shlb
adc
push
push
push
dec
ljmp
cmp
fsubrp
xchg
sub
xchg
jns
aaa
out
mov
or
cmp
cmp
sub
mov
xor
mov
lcall
dec
dec
bound
cmp
in
sahf
shll
or
shrb
shlb
shll
inc
lret
cmpsl
loopne
inc
andl
jmp
jb
inc
idivb
or
cmp
jb
decb
mov
sbb
mov
xor
cmp
insl
loop
out
mov
mov
dec
jb
imulb
test
xor
test
sbb
pop
adc
cmp
and
sub
add
test
pop
sub
std
lock
mov
pop
xchg
and
rolb
cwtl
div
aas
sbb
ss
in
popa
es
rcrl
jae
cmp
cmp
jle
shrb
hlt
mov
insb
jge
jne
ja
repnz
inc
add
jecxz
popa
adc
sub
js
bound
sub
mov
cmpsb
mov
scas
sbb
xchg
out
lcall
rol
lret
xchg
js
dec
jecxz
in
dec
fstpt
adc
sbb
mov
xor
push
lods
mov
in
fcoms
fnstsw
inc
inc
jb
inc
dec
mov
aad
mov
sbb
ret
mov
push
push
rcr
and
cmp
and
mov
pop
fs
cld
sbb
xor
addr16
inc
jb
fmuls
ficompl
xor
ret
lret
and
aaa
xor
dec
sub
hlt
jbe
js
out
jl
loope
pop
adc
mov
fmull
loopne
lret
jle
push
xchg
ficoms
sub
cmpsl
lods
push
xchg
mov
lret
push
scas
and
or
jecxz
enter
lcall
push
push
lret
push
cld
or
fwait
mov
ss
jecxz
sbb
add
xchg
test
mov
gs
jae
lods
mov
jae
xlat
pop
add
sbb
xor
sbb
cld
inc
out
scas
call
scas
insl
push
xor
ret
repz
cwtl
flds
loopne
add
dec
bound
mov
mov
into
dec
aas
dec
pushf
jge
sahf
rcll
lea
movsl
and
and
mov
and
fwait
inc
sub
xchg
mov
loopne
jp
pusha
or
jecxz
cmpsl
xchg
mov
pop
clc
enter
fwait
mov
xor
out
aaa
or
xchg
iret
mov
jg
rorb
mov
bound
gs
pop
adc
daa
inc
xchg
push
jns
and
or
cmp
adc
xor
add
pop
in
stc
rol
xchg
loop,pn
mov
mov
inc
test
xor
cltd
mov
dec
out
repz
iret
aam
in
mov
movsb
lret
rclb
popa
ret
ja
idivb
in
adc
int
fistps
ret
imul
dec
sbbb
dec
cli
mov
dec
dec
jns
xor
mov
vpmulhuw
lods
mov
ljmp
popa
sti
push
sbb
stc
int
dec
xor
jb
jecxz
dec
jg
xchg
xor
lods
xchg
pop
mov
clc
sbbl
fisubrs
adc
loope
out
and
testl
or
mov
jecxz
xor
mov
jg
in
in
sti
mov
xor
xor
notl
das
and
lock
imul
mov
inc
pop
aad
cmp
mov
fistl
lret
repz
sub
mov
repnz
fs
in
cwtl
cmp
push
dec
push
push
mov
es
push
loop
push
cmp
and
inc
jle
lods
ficompl
inc
mov
adc
inc
and
mov
insb
or
test
xchg
push
outsb
mov
mov
xchg
mov
inc
dec
or
test
and
xchg
mov
je
repz
hlt
sbb
adc
iret
pop
es
xorl
mov
mov
mov
and
jne
sub
fcmovnb
add
mov
cmp
adc
cmp
lcall
ss
out
cmp
movsl
lcall
popf
adc
std
cmp
fnstsw
lahf
jmp
pop
xchg
test
into
xchg
adc
mov
das
clc
push
jp
cwtl
cmp
int
imul
aaa
scas
pop
push
andb
popf
pop
or
mov
add
outsb
shrb
and
pop
push
outsb
shlb
outsb
jge
and
xlat
fiadds
pushf
cltd
cltd
fsubl
push
jg
in
xchg
scas
stos
dec
lods
in
dec
std
dec
js
outsl
mov
adc
adc
mov
stc
iret
jb
cwtl
mov
jne
aaa
cmp
arpl
out
cmp
push
mov
push
out
pop
aad
flds
negl
push
ret
rcr
jnp
fsubrl
inc
pop
aad
mov
or
inc
xchg
ret
mov
sub
es
leave
pusha
mov
cld
cmp
rol
fimull
cwtl
cmp
add
push
mov
xor
bound
push
stos
mov
and
jle
sub
mov
cli
cwtl
mov
adcl
cmp
pop
push
imul
cmp
add
and
push
xchg
inc
fidivs
adc
sbbb
adc
xlat
jne
scas
loop
imull
sub
test
sti
addr16
fisttpl
sub
roll
mov
inc
add
pushf
stos
jne
and
repz
cmp
fwait
pop
xor
push
mov
imul
add
cli
mov
sbb
clc
fucomp
xchg
ret
adc
clc
loop
inc
push
xchg
dec
add
icebp
scas
clc
inc
mov
lods
jcxz
mov
dec
xchg
push
jno
inc
pop
dec
fcom
add
xor
popf
dec
insl
lods
or
mov
aam
mov
dec
pushf
gs
ret
test
popf
jne
dec
sarb
aam
xor
xchg
push
aaa
adc
sahf
inc
sbb
xchg
cmp
jmp
push
dec
xor
cmp
out
mov
mov
inc
ds
cld
sub
bound
sbb
arpl
jne
push
pusha
cmpsb
mov
cmpsb
ljmp
add
test
ret
mov
dec
enter
xchg
loop
imul
mov
lods
xchg
mov
pop
cmpb
xor
sub
sub
mov
ficompl
stc
jmp
push
jmp
movsb
xchg
pop
jne,pn
leave
and
mov
xlat
das
out
push
icebp
insl
roll
and
push
pop
ret
add
insl
mov
icebp
jb
pop
mov
dec
xchg
clc
mov
xchg
subl
sub
inc
hlt
cmpsl
push
std
das
je
and
pop
movsl
cmp
cmc
and
sub
ljmp
loopne
jb
jmp
adc
daa
call
inc
sti
aaa
jp
push
mov
push
mov
int
jo
ds
sub
shrb
scas
inc
inc
dec
repnz
daa
rclb
xor
fnsave
adc
adc
dec
mov
in
fldcw
jle
mov
pop
insb
push
jp
movsb
sub
rol
mov
fcmovnbe
popa
cs
push
lods
fs
and
cmp
cmp
pushf
xchg
imul
inc
ficoml
dec
data16
inc
adc
mov
outsl
clc
ljmp
sub
and
ficoms
test
ss
jecxz
cli
daa
inc
hlt
lret
and
out
push
mov
push
ret
dec
sbb
and
jecxz
jl
xor
mov
test
mov
xor
sbbb
fs
and
dec
daa
jle
jecxz
jns
sbb
icebp
mov
pop
lcall
ds
das
jg
int3
loopne
fnstsw
adc
mov
pop
popf
scas
ljmp
or
xchg
xchg
or
fdivl
push
sbb
aad
inc
lret
jge
out
pop
xor
mov
stos
jle
jne
jmp
je
ljmp
sbb
jmp
push
lea
sub
cld
adc
ret
mov
mov
pushf
in
lea
rolb
jbe
or
lahf
adc
sub
cltd
inc
and
fldt
xor
xchg
sbb
shlb
mov
cwtl
fnstcw
push
imul
stc
insl
inc
adc
pop
addr16
jbe
lock
xor
inc
pop
pop
ljmp
xor
fimull
inc
sbb
fwait
or
cli
add
sahf
shl
jns
mov
add
es
imul
xor
lret
dec
les
push
lahf
lret
clc
out
jnp
xor
mov
int
and
fs
and
xchg
das
mov
jle
and
das
movb
das
inc
clc
das
xchg
sbb
cmp
test
adc
and
popa
repnz
pop
pop
sbb
movsb
in
pop
repnz
shr
cmp
fwait
or
jbe
fld
sbb
add
mov
gs
test
mov
clc
mul
dec
pushf
into
adc
sbbb
jbe
movsb
jns
ffreep
enter
inc
ficomps
dec
test
push
jle
jge
cmpsb
je
sbbb
and
xor
mov
mov
xchg
fldt
inc
fucomi
imul
aas
adc
xor
mov
xchg
mov
out
orb
in
test
push
jecxz
add
insl
sbb
aad
pop
mov
loope
fdivrs
lds
pop
cmp
push
xchg
add
push
shll
xor
test
or
push
les
xor
aad
lock
bnd
scas
inc
pop
mov
sbb
fcoms
xchg
mov
xchg
dec
mov
jle
int3
pop
and
fdivl
sbb
add
pusha
pop
add
jl
inc
mov
pop
pop
insb
push
repnz
ret
std
shlb
mov
outsb
out
int3
push
fimull
out
xor
add
mov
imul
mov
xor
rclb
out
xor
fwait
sub
dec
pop
je
call
sbb
sub
out
push
jb
lds
insb
imul
lock
insb
sbb
jbe
bound
rolb
in
lea
popa
mov
idivl
ds
pop
sbb
fsubrs
mov
pop
fldt
aas
xor
mov
test
test
loopne
repz
repnz
push
jle
jmp
ret
jnp
bound
clc
mov
cld
rcr
or
and
arpl
jae
std
add
in
dec
cmpsl
mov
xor
pop
jecxz
add
aas
mov
push
ret
xor
inc
outsl
repz
mov
das
insl
mov
push
leave
pushf
nop
dec
jbe
fs
addb
stos
nop
or
adc
mov
je
repz
pop
ss
inc
cmp
scas
jmp
pop
in
add
out
clc
stos
mov
jo
stc
inc
mov
adc
cmpsl
outsb
pushf
xchg
xchg
xchg
add
xchg
out
pushf
and
inc
dec
or
dec
or
mov
add
popl
xor
mov
add
or
dec
xchg
xchg
pushf
pop
repnz
xchg
adc
or
push
loope
push
aaa
mov
sahf
xor
aas
divb
jge,pn
repnz
sbb
imul
mov
test
popa
mov
cmp
cwtl
je
test
xor
fs
pop
sbb
or
lret
cli
iret
sbb
pop
popa
pop
shrl
push
xchg
mov
divb
repz
mov
add
adc
in
add
fs
gs
mov
fwait
je
mov
int
sub
out
jno
mov
xchg
fxtract
out
stos
movsl
mov
xchg
jno
inc
jo
icebp
movb
push
jmp
in
xchg
inc
sub
pop
sbb
or
inc
xor
leave
pushf
fwait
andb
lods
cmp
cmc
fwait
cmp
das
pop
jg
mov
cmp
xor
jmp
xchg
outsb
loopne
imul
jle
mov
mov
jle
imul
rcr
push
xor
int
mov
movsb
add
mov
sarb
adc
and
sub
mov
cmpsl
enter
mov
and
daa
mov
test
fs
push
stos
in
xlat
test
xchg
cmpl
and
mul
lahf
and
lret
inc
inc
rorb
mov
pop
mov
mov
push
dec
xor
mov
movsb
adc
push
xchg
idivb
cmp
cmp
xchg
add
add
mov
cmp
call
lahf
daa
inc
cld
lahf
scas
mov
movsl
std
xor
mov
popa
daa
add
add
xlat
pushf
cmp
adc
arpl
jne
mov
mov
jno
and
or
decl
cwtl
cmp
adc
cwtl
scas
les
out
adc
aaa
jne
leave
mov
cmp
test
clc
and
adc
out
popf
cli
fiadds
faddp
dec
cwtl
in
scas
lock
push
dec
push
push
cld
ljmp
outsl
lods
cmp
mull
cmp
insl
inc
es
jbe
ljmp
add
push
es
imulb
or
and
mov
movsl
pop
sahf
or
repnz
push
or
xchg
adc
fsubl
pop
stc
push
pop
push
mov
or
add
ret
add
out
push
jo
ror
jne
fcoms
mov
push
popa
jecxz
cmpsb
adc
ja
lock
or
cld
or
jge
inc
push
aaa
lret
stc
mov
or
cmp
outsl
and
mov
pop
push
sub
imul
shr
in
mov
es
cli
lahf
into
xchg
mov
jne
fisubl
mov
ja
pop
daa
fwait
ds
mov
lock
add
and
cld
popf
mov
fsubs
mov
mov
mov
push
mov
lods
jmp
push
mov
in
mov
and
mov
cmp
rcl
rolb
jae
push
pop
cmc
pushf
or
push
inc
gs
das
rcrb
lcallw
mov
std
jmp
lret
cmc
dec
add
mov
sbb
mov
pop
jne,pn
into
inc
bound
fstl
pop
push
pop
scas
add
dec
and
pop
aad
decb
arpl
fists
rcrb
int3
sub
into
cmpsl
dec
mov
push
xchg
push
shll
xchg
lret
inc
out
and
fs
xchg
pop
dec
mov
cmc
jno
cmp
stos
lds
les
or
jbe
mov
cltd
sbb
xor
xor
adc
push
inc
mov
outsl
jbe
lret
mov
shll
add
fadds
js
xchg
mov
lods
out
inc
adc
fmulp
mov
or
ja
or
sub
nop
in
andl
leave
nop
mull
add
sub
fstps
xor
loope
jbe
loopne
jbe
cmp
xchg
scas
dec
sbb
sub
cmp
push
push
pop
or
adcl
test
cmpsb
iret
mov
mov
cli
or
sbb
adc
fcoms
mov
inc
aaa
cmp
mov
neg
es
mov
cld
fwait
inc
ljmp
mov
xor
into
leave
in
movsb
ljmp
cmp
pop
aaa
and
imul
sbb
lds
adc
cld
outsl
push
out
xchg
xchg
jne
and
add
outsl
inc
enter
les
dec
sub
inc
adc
fsubs
cs
popf
jl,pn
das
cmpsl
fisttps
xor
jbe
ret
pop
loopne
push
sbb
loopne
lret
mov
sbbl
push
mov
out
inc
adc
mov
stos
and
xorb
mov
lret
and
xchg
xchg
aaa
and
lahf
out
fstpt
in
pop
xchg
inc
cmp
cmpsl
jo
cmpsl
mov
and
push
and
dec
ja
fiaddl
lods
pop
scas
adc
and
data16
and
pop
xor
push
cmp
pop
adc
in
push
add
movsb
iret
pop
sbb
das
outsl
cwtl
adc
sub
daa
push
mov
xchg
jecxz
jnp
push
dec
adc
pop
push
or
and
scas
aad
out
push
enter
lcall
sbb
sub
data16
adc
xlat
sbb
mov
imul
int
jbe
cmp
mov
or
mov
js
mov
xchg
stc
outsb
aad
movsb
xor
ja
subb
stos
test
mov
int
mov
mov
or
push
dec
cmp
pop
int3
sbb
jb
sarl
cmp
inc
fnstenv
pop
sti
mov
pop
lods
jle
std
mov
icebp
jl
popf
cmp
loop
or
in
mov
sahf
pop
or
xlat
rcrb
xor
je
negl
in
icebp
cltd
dec
mov
outsb
mov
xchg
jno
inc
aad
pop
les
jae
test
sub
imul
sbb
push
shll
mov
test
or
sub
add
pop
rcll
mov
push
test
sub
dec
push
loopne
sbb
test
jmp
mov
sahf
call
movsb
cmp
jb
rorb
jnp
add
cld
jl
pop
jle
add
lods
cmpb
cmpsl
xlat
loopne
imul
shlb
pop
mov
and
fdivl
push
sub
call
mov
scas
and
cltd
in
add
add
fwait
bnd
into
push
mov
mov
nop
adc
sub
mov
inc
dec
push
push
test
xchg
psrld
and
pushf
loope
into
lods
sti
test
jl
cmpsl
pop
add
inc
mov
pusha
out
or
enter
cmp
test
insb
pop
movsb
cmp
push
leave
call
fs
xchg
mov
jle
cld
nop
out
std
cmpsb
jne
push
sub
mov
lahf
xchg
cli
or
xchg
fisubrs
leave
cmp
push
cmpsb
jbe
mov
movsb
xchg
iret
cmp
xchg
insb
push
and
sub
and
mov
int
out
xchg
inc
inc
sbb
xor
ret
mov
imul
jp
and
out
add
call
dec
enter
ffree
inc
xchg
ja
sub
jne
jo
inc
add
jae
or
pop
jmp
stos
mov
pop
cmp
pop
or
xchg
mov
outsb
mov
push
inc
cld
and
xchg
push
out
fwait
mul
pop
lods
leave
jns
fisubrl
lods
fcmovnu
push
lret
mov
cmp
lods
jns
pop
aas
call
stos
jl
pop
pop
mov
push
xchg
xchg
cmc
xor
call
inc
and
mov
mov
jno
scas
fistpl
add
push
add
sbb
mov
push
adc
mov
outsl
pusha
bound
jb
mov
jns
scas
rcll
data16
mov
aad
les
push
sbbl
push
setno
jg
adc
mov
test
sub
ljmp
out
in
dec
adc
add
mov
sbb
jmp
fistl
jo
sub
sbb
mov
enter
aas
ljmp
sbb
movb
ds
cmp
adc
dec
loop
push
out
gs
js
xchg
sahf
jbe
xor
sub
cli
sbb
sti
pop
jbe
inc
fndisi(8087
sbb
inc
test
out
adc
mov
cltd
and
xor
mov
inc
arpl
std
pop
les
jge
add
movsl
scas
pop
fucomp
dec
sbb
push
mov
iret
xchg
jge
js
xchg
xchg
dec
pop
or
lock
ss
cwtl
cli
dec
push
sub
jo
dec
dec
dec
xor
ret
jg
sub
adc
sti
inc
jns
xorb
ret
mov
cmpsl
jmp
or
orl
popf
mov
stos
lret
decl
clc
xor
sbb
sub
mov
mov
int3
clc
pop
pop
cmp
mov
push
mov
lods
cld
pop
clc
jge
loope
or
jne
sbb
out
out
mov
pop
out
jg
add
rcl
sub
call
shlb
xor
in
lods
cmp
xchg
ljmp
lcall
cltd
je
pop
mov
or
shll
fistl
xor
inc
lcall
and
repz
jb
cmp
cwtl
fisubs
loop
mov
adc
lea
insl
dec
jecxz
mov
xchg
pop
lods
xchg
pop
lcall
push
out
xor
jle
mov
mov
inc
xlat
or
cmpsl
xchg
push
xchg
fs
pop
inc
leave
es
daa
daa
xchg
pop
pop
shll
adc
lsl
xchg
add
cmp
jns
jmp
outsl
mov
push
fldcw
into
add
inc
adc
mov
pop
xorl
or
in
mov
or
jle
add
adc
test
xchg
pop
xor
pop
in
arpl
and
xor
add
push
jge
shlb
cli
roll
cmpsl
pop
xchg
fisubrl
sbb
push
aaa
lea
jl
movsb
ss
fisttps
push
adc
jge
cmc
shl
repz
aas
push
xor
ficoms
mov
popa
push
xchg
test
fsts
or
sub
and
dec
gs
push
push
sub
fcoml
clc
add
pushf
mov
out
mov
mov
sub
adc
call
or
push
xlat
push
pop
mov
pusha
jle
jmp
neg
xchg
fidivl
mov
xchg
push
xchg
int
imul
dec
push
rcll
pop
pop
mov
push
out
or
out
lods
or
leave
pop
or
mov
push
or
clc
aas
cwtl
xorl
push
pop
out
iret
out
cmp
idivl
and
mov
pop
adc
sbb
aam
imul
fistpll
lock
mov
jle
sbb
ja
cmp
ret
int3
shll
sub
enter
sarb
outsl
lods
pop
dec
addb
out
sub
fucom
hlt
xor
sub
mov
cmpl
dec
movsb
popf
aas
mov
dec
or
dec
stc
ret
int3
dec
xchg
int3
sbb
imul
xor
xchg
imul
in
mov
xlat
push
xor
arpl
mov
pop
inc
cmp
insl
jae
or
xor
incb
das
insl
pop
arpl
mov
movsl
push
lods
sbb
pop
fwait
dec
fisubs
add
adc
mov
xor
std
lret
cmc
daa
outsl
adc
pop
aaa
sbbb
jbe
arpl
or
enter
or
ret
inc
sub
insb
stc
cmpsb
dec
xchg
in
or
ja
dec
sti
push
orb
mov
cmp
cmp
push
xor
fimuls
ficoms
sbb
repz
pop
mov
mov
mov
ret
mov
pop
inc
ds
xchg
mov
mov
mov
or
mov
sub
pop
movsl
cmp
lret
ds
dec
mov
pop
and
sbb
xor
pusha
sub
adc
adc
sbb
xchg
addr16
hlt
test
arpl
daa
mov
and
dec
mov
sub
insb
jbe
mov
pop
mov
pop
clc
push
mulb
pop
pop
outsl
jg
lret
and
xchg
cwtl
in
mov
fisttpll
push
xchg
repnz
testb
jo
mov
pop
les
xor
insl
cmc
outsl
int
mov
gs
shlb
inc
inc
cmpsl
imul
mov
sbb
je,pt
popa
or
into
jbe
and
cmp
ja
pushf
gs
cmp
popa
cmp
xchg
nop
or
sub
sbb
es
mov
out
mov
inc
or
mov
scas
lods
test
jg
or
mov
pop
and
mov
mov
xor
mov
xor
repnz
cmpsb
insl
jbe
sbb
lock
adc
xchg
in
ret
jae
jbe
iret
adc
test
sahf
imul
dec
xlat
shrb
pop
cmpsb
ret
ret
push
insb
xchg
mov
mov
pushf
dec
outsb
testl
xchg
cmp
bound
mov
jnp
adc
xchg
leave
lcall
fstpl
pop
jmp
stos
cmpb
push
or
imul
mov
repnz
or
fistl
popa
add
pop
and
cwtl
ret
in
sbb
sbb
and
add
dec
cmpsl
in
loope
mov
jmp
sbb
fwait
mov
int3
push
test
or
test
xor
add
sbb
data16
or
inc
repnz
stc
ja
jae
fsubrs
imul
fcoms
dec
scas
cmp
pop
pop
sub
das
out
lock
pop
or
aas
mov
pop
out
repnz
mov
mov
cmp
sub
xchg
jg
mov
insb
loopne
jb
rcrl
or
adc
int3
shl
xor
call
fnsave
test
lods
fnstenv
cltd
sub
std
pushl
adc
push
shll
lods
dec
daa
js
mov
testl
push
dec
push
cmpsl
cs
aaa
pop
jl
mov
out
adc
sub
outsl
aas
imul
jg
rcll
sub
cmp
jp
mov
leave
cli
and
inc
outsl
shll
push
aas
mov
inc
adc
std
cmp
adcb
and
adcb
out
sbb
cs
adc
scas
xor
inc
jmp
lods
sub
jbe
xor
lret
xchg
fidivl
gs
push
out
daa
stos
scas
mov
mov
sbb
mov
dec
gs
int
stc
in
rclb
fimuls
sbb
dec
push
push
jno
inc
loopne
daa
mov
mov
mov
push
pop
hlt
sbb
lret
push
in
inc
test
add
test
loop
mov
mov
or
into
mov
inc
mov
or
sub
idivb
popa
mov
dec
cs
rclb
mov
pop
test
add
jg
xchg
jno
flds
or
pop
jb
or
cli
sub
fisttpll
dec
mov
inc
addr16
sahf
pop
cmp
and
and
roll
inc
scas
cmp
sti
or
pop
ret
xlat
mull
or
icebp
sbb
outsl
test
add
jl
repz
pop
add
xor
inc
add
loopne
sub
and
sub
and
cld
arpl
insb
outsb
cmp
jg
push
adc
popa
pop
push
jns
daa
out
inc
push
mov
in
lods
mov
pop
xor
cmp
mov
sub
cmp
xchg
xlat
fisubl
loop
cld
and
lock
add
sarb
mov
repz
in
icebp
xor
sub
jl
xchg
in
int
inc
ficoms
mov
push
enter
shl
rolb
cmp
mov
and
or
mov
dec
orl
sbb
pop
push
enter
inc
pop
push
adc
scas
decl
cmovg
repz
inc
outsl
push
mov
jg
sub
cwtl
xchg
jecxz
jns
mov
xor
push
lcall
pop
xchg
dec
orl
mov
stc
inc
and
cwtl
mov
imul
out
jne
mov
lods
push
mov
or
sub
cld
loop
imul
fimuls
mov
shlb
popa
mov
mov
mov
push
aam
jbe
int
sbb
inc
adc
lods
outsb
ja
test
jcxz
sub
mov
sub
mov
mov
rcll
mov
stos
inc
or
sub
sub
lea
mov
xor
sbb
mov
push
mov
push
in
sahf
xchg
add
js
cltd
sbb
or
xor
cmc
mov
pop
mov
cmpsb
inc
sbb
shr
lret
sub
dec
xor
scas
or
add
sbb
lock
xchg
sar
test
or
xlat
int
push
jp
xchg
inc
adc
cwtl
fsubs
in
mov
xor
cmp
lock
mov
sbb
adc
int
pop
sub
and
fldenv
and
or
jb
push
fidivrl
sub
mov
jl
pop
iret
push
pop
rcrb
xchg
push
in
mov
dec
stc
cmp
movsl
add
scas
insb
pop
pop
fstpt
jp
sub
pop
adc
popf
jnp
loopne
xor
jae
js
popf
mov
pop
daa
roll
xor
idiv
mov
clc
cmp
pop
and
inc
fwait
mov
popf
mov
popa
bound
mov
push
js
fcoml
mov
xchg
daa
mov
mov
sub
loopne
repz
dec
insb
sub
jno
stos
mov
xor
mov
add
dec
jae
clc
dec
shll
adc
push
cmc
pop
add
cwtl
cmpsb
push
xor
pop
shll
add
dec
mov
push
mov
mov
ljmp
fmul
jmp
add
cli
sub
jmp
xchg
inc
repnz
xchg
and
jbe
clc
or
cld
xchg
in
xor
pop
popf
mov
test
in
popf
add
lea
fisubrs
int3
fsts
inc
add
gs
fnstsw
clc
add
or
mov
mov
sbb
cltd
fs
into
jmp
cmp
jp
adc
mov
xor
enter
xor
cmp
sbb
sar
loope
stos
popa
mov
pop
adc
mov
imul
ja
sub
js
xor
pop
out
fwait
sbb
and
mov
and
push
mov
fs
mulb
sbb
sub
jge
dec
mov
and
cld
lea
icebp
sub
sbb
mov
lahf
sbb
jl
scas
add
xchg
jbe
cmp
xorb
dec
cld
fwait
xor
jbe
mov
rolb
xchg
sub
jb
pop
imul
cli
aaa
xorb
jecxz
inc
ljmp
and
dec
test
add
mov
push
loopne
xchg
in
mov
mov
aad
lret
cs
xor
dec
pop
lock
out
inc
add
xchg
xchg
js
inc
adc
mov
sub
loop
sub
rcl
in
les
sub
add
bound
clc
lea
sub
cli
rcrl
cmp
and
push
test
mov
xor
pushf
scas
jnp
cmp
femms
mov
pushl
test
lahf
mov
mov
pop
scas
pop
ja
movsl
adc
jmp
inc
mov
and
mov
dec
shlb
push
push
jmp
jl
cmp
add
out
mov
add
mov
mov
mov
inc
xchg
out
repz
add
fmull
push
push
fildl
imul
pop
repnz
and
repnz
stos
jne
pop
xor
test
jnp
ja
dec
ja
push
out
insb
loope
mov
sbb
or
mov
int
fcmovnbe
outsl
mov
out
push
outsl
dec
andl
push
push
call
dec
loop
or
inc
cwtl
xor
in
ljmp
aad
pop
inc
imul
sub
sub
mov
jp
aaa
inc
pushl
adc
mov
jmp
pop
dec
or
repnz
insb
clc
jl
sub
in
cmp
lea
pop
fsts
add
aaa
push
jp
stos
popf
fldt
aam
sahf
leave
fidivrs
gs
mov
in
scas
cwtl
nop
lods
dec
movsb
pop
push
int3
mov
adc
scas
jecxz
fcmovnbe
mov
pop
repz
push
aaa
cmp
mov
outsb
movsb
jecxz
add
leave
enter
mov
add
inc
mov
mov
stos
xor
sti
xchg
adc
jnp
cmp
jae
jb
ret
mov
inc
icebp
sbb
popf
out
pop
push
mov
cmp
addr16
lahf
pop
imul
push
shlb
std
insl
jns
jae
inc
test
push
in
out
mov
fcom
adc
enter
enter
dec
xchg
ficoms
rcr
mov
pop
rcrl
cmpsl
dec
ljmp
xchg
jle
mov
pop
mov
mov
dec
imul
push
out
cmpsl
mull
cmp
std
popf
dec
mov
sbb
xor
daa
mov
push
fiaddl
cmp
jmp
in
mov
aas
outsb
sbb
outsb
loopne
lods
jmp
or
gs
shll
add
gs
cwtl
lock
pop
push
insl
cmp
fidivl
and
xorb
arpl
mov
dec
pop
cmp
popf
shll
pop
jb
add
leave
adc
cmp
mov
pushl
jle
cmp
jnp
out
shrl
xor
mov
movsl
inc
jp
push
sti
daa
popa
neg
dec
cmp
xchg
jae
lds
xor
inc
aaa
lret
xchg
into
sub
xor
jecxz
lods
xchg
push
and
push
fldl
in
inc
jl
and
pop
inc
fistl
scas
cmpsb
lock
or
shr
xor
pop
cmpsb
je
push
push
aas
or
sbb
aam
adc
push
jno
add
mov
mov
sbbl
mov
rol
andl
push
dec
pop
cmpsb
sbb
pop
sub
pop
out
inc
pop
add
add
xchg
xlat
xor
stos
xor
xchg
pop
sbb
shll
xchg
lcall
sub
nop
shll
jae
leave
xlat
mov
adc
cmp
cltd
popa
sub
xor
in
leave
mov
inc
mov
outsb
mov
or
sbb
inc
cmp
stc
dec
test
add
mov
jp
insb
fdivrs
mov
and
addr16
xchg
fistl
adc
int
iret
jae
test
cmp
cltd
jno
call
add
out
mul
and
xchg
outsb
shl
hlt
enter
pop
fisubrs
pop
mov
sub
call
lret
pop
pop
push
inc
inc
daa
jle
sub
mov
adc
sub
setne
in
cmpsb
mov
mov
aam
push
pop
and
mov
mov
stos
mov
push
js
pop
add
es
jo
ljmp
loopne
shrb
popf
stos
push
out
pop
shld
xor
call
adc
arpl
das
xchg
test
mov
hlt
xor
mov
pop
mov
rcrl
xor
dec
test
inc
inc
inc
mov
addr16
fsts
sbb
or
out
rcr
add
stos
loope
cs
aas
sahf
mov
and
rcr
or
inc
jns
add
pop
cmc
lock
lea
mov
and
xchg
adc
and
in
dec
outsl
nop
je
ret
loop
or
out
dec
loopne
stc
add
ret
jb
cmp
push
test
cld
xor
jae
test
push
push
push
mov
rcll
outsl
or
fstl
cmc
clc
cmp
sub
sbb
fists
mov
fiaddl
pop
lods
lret
adc
daa
jns
stos
fmull
pop
cmp
xchg
lahf
cmp
inc
cmpsb
adc
dec
cltd
or
sub
jae
in
mov
nop
fldenv
adcb
xor
mov
fldl
xor
loopne
sub
sbb
out
dec
pop
dec
dec
mov
cmpsl
and
dec
adc
add
aad
cmpsl
mov
cmp
negl
mov
dec
in
dec
sbb
dec
arpl
sub
sbb
mov
cmp
xchg
call
cwtl
cmp
lcall
repnz
aad
fidivl
lock
pop
dec
xchg
jmp
dec
xchg
mov
data16
popf
dec
imul
sbb
or
push
xchg
adc
sbb
jae
adc
lods
mov
push
inc
adc
mov
sti
xchg
mov
adc
xchg
scas
fisubs
push
mov
test
dec
xor
incl
xchg
cltd
cld
cmp
stos
insb
notb
iret
lea
scas
mov
lea
mov
and
js
aaa
outsb
vhaddps
lret
mov
push
fdivrl
scas
lds
stos
sub
popf
adc
jge
xor
dec
lahf
cmp
fbstp
push
xor
cmpsb
cltd
daa
cwtl
mov
sub
mov
jge
xor
sbb
pop
or
sub
xor
clc
xchg
adc
cmp
sbb
xchg
or
cmp
jae
ja
out
mov
xor
clc
lea
mov
hlt
push
sub
or
mov
dec
xor
and
sbb
pusha
data16
popa
jge
jmp
jmp
mov
push
fldt
inc
loopne
sti
xchg
and
inc
mov
jb
mov
mov
sarb
insb
mov
jmp
in
sbb
mov
rcr
dec
insb
adc
and
xor
mov
cmp
dec
cmovp
into
push
fistpl
or
fists
and
sarb
test
sub
push
gs
sub
adcb
loop
jge
shll
or
push
hlt
das
cs
adc
pusha
ds
ret
cmpsb
pop
pop
lock
xor
dec
sbb
outsl
xchg
and
jns
sahf
jge
fsubrs
inc
pop
test
lods
jo
fisttpl
add
scas
jnp
nop
je
dec
push
xchg
sub
and
rolb
jbe
mov
testb
mov
pop
mov
inc
sbb
sub
lcall
push
push
loop
scas
test
and
pop
in
and
aad
insl
and
mov
popa
mov
in
or
adc
ja
out
std
sub
js
xchg
pop
fdivs
loopne
pop
lods
mov
popf
or
fdivs
movsl
in
inc
pop
push
stos
mov
cmp
js
mov
sbb
lcall
lods
push
adc
pop
dec
arpl
cmp
icebp
push
adc
xchg
stc
scas
addr16
cmpb
pop
cmpsl
stc
dec
rolb
push
into
push
adc
add
dec
fsubrp
jae
pop
lret
and
lret
cmp
jle
out
repz
fwait
stos
insb
and
sub
pusha
xchg
je
addr16
mov
out
push
lea
out
fwait
push
sti
or
push
test
jnp
repnz
outsb
mov
ss
stos
and
stos
int
cmp
outsb
inc
jae
mov
pop
or
cwtl
orb
fwait
mov
mov
push
inc
out
dec
data16
in
gs
sub
cmpsl
push
addb
iret
mov
insb
cmp
push
mov
nop
mov
rclb
aaa
xchg
mulb
xor
mov
jnp
mov
and
out
mov
popa
push
cltd
mov
pop
ja
xchg
xchg
repz
pop
int3
das
jmp
in
daa
scas
cmp
mov
jbe
into
fwait
clc
lock
fs
rclb
add
dec
push
xlat
pop
call
dec
jne
xor
call
ljmp
fists
mov
mov
clc
ret
fwait
inc
mov
loope
push
cmp
cmp
repnz
xor
out
rorb
int
icebp
stc
scas
inc
cmp
mov
aad
add
mov
stos
repnz
insl
mov
pop
pop
xor
mov
push
push
sbb
or
xchg
idiv
and
shr
jnp
mov
dec
adc
xchg
into
jo
aaa
stos
dec
dec
cmp
sbb
arpl
ds
sub
add
fdivl
mov
lods
push
fiaddl
test
ret
call
test
lds
out
loopne
stos
xor
mov
mov
std
mov
out
sub
loop
out
jg
xor
add
cmp
dec
xchg
loop
xor
dec
jae
xchg
mov
xor
cli
filds
imul
cmp
gs
sti
repnz
imul
movsb
pop
dec
mov
sub
pop
jb
dec
jae
jnp
inc
lret
dec
push
xor
lahf
adc
sub
je
xor
push
or
xchg
xchg
sbb
sub
fdivl
lahf
data16
je
mov
or
sub
out
sub
mov
mov
pop
or
fwait
ja
ss
insl
pop
add
loop
cmc
and
fadds
pop
scas
jne
pop
inc
or
pop
xchg
movsl
xlat
xchg
subb
pop
test
mov
rorl
mov
test
dec
mov
pop
lret
int
cmpl
fsubs
lods
adc
mov
mov
adc
inc
pop
lock
stc
pop
stc
loop
fs
loop
pop
lret
sub
or
dec
gs
shlb
adc
jg
inc
or
clc
pop
stos
jl
push
adc
and
xchg
add
and
lods
push
inc
int
mov
and
dec
aas
jp
mov
sbb
mov
shll
add
mov
mov
in
inc
jne
mov
sbb
das
ja
jae
mov
fnstsw
pop
pop
hlt
sbb
test
sahf
dec
lcall
sbb
cmp
sti
adc
cld
rcrb
add
loop
out
cmp
insb
jp
popa
fcomps
imul
mov
fcmovnu
sarl
push
xchg
lds
aad
pop
mov
xchg
sbb
in
dec
std
pushl
sti
cld
jno
adc
movsb
cmc
test
je
or
lcall
mov
cli
sbb
jge
xchg
jbe
or
pop
fisttps
pop
in
adc
mov
inc
into
pop
lret
sbb
sub
mov
inc
and
fwait
pop
mov
into
jl
js
mov
cmp
lods
xor
out
lret
lock
mov
arpl
xchg
divb
mov
xlat
push
jns
ljmp
push
and
pop
mov
cmp
shll
xor
jg
ret
cld
xchg
cmp
pop
xor
cmp
or
callw
out
sbb
ret
insb
adc
jp
jno
dec
cmp
cmp
sbb
jp
test
mov
or
repnz
and
insb
in
cmpsl
jmp
or
jg
dec
out
loopne
xchg
call
cwtl
jl
pop
rclb
ja
pusha
mov
sub
loopne
mov
inc
in
into
sbb
popl
lock
ljmp
xchg
pop
pop
pop
inc
psubsb
movsb
push
call
inc
clc
or
aas
mov
lods
js
inc
ja
jle
cmp
mov
sti
inc
xlat
mov
aam
and
pusha
xor
rcrb
mov
repnz
scas
mov
sbb
fisubrl
sub
jmp
fisubl
push
xchg
jae
xchg
cmp
xchg
jbe
mov
fidivs
movsb
sbb
pushf
push
in
sbb
add
in
int3
mov
pop
adc
mov
stos
adcb
cmc
out
in
jmp
ficompl
cmp
xchg
pop
orl
push
xchg
jbe
out
into
mov
sub
out
jnp
sub
push
int
aaa
inc
jge
std
push
cmpsb
cmp
push
dec
push
xchg
sbb
fldenv
mov
iret
orl
adc
sub
lods
popl
psubb
mov
nop
std
mov
push
je
sub
test
bnd
mov
fnstsw
push
ret
mov
or
dec
les
cmp
push
je
inc
push
and
mov
push
or
pop
pop
cwtl
push
movsl
fldcw
xor
push
rcll
int
xor
das
sbb
sti
fstl
sub
pushf
out
divb
ret
stos
cwtl
outsl
mulb
mov
nop
mov
dec
fldl
lds
or
jo
mov
jmp
and
insl
mov
adc
or
adc
ds
loope,pt
sahf
mov
hlt
mov
xor
sub
dec
sub
xchg
repnz
xchg
sarl
add
test
andb
test
push
add
pop
insl
xor
call
mov
push
call
pop
and
sbb
adc
adc
je
or
sbb
xchg
jo
pop
in
test
aam
and
and
pop
ja
mov
addl
mov
ret
mov
inc
sub
les
sbb
sub
push
gs
mov
mov
sbb
pop
outsl
cmc
bnd
scas
stc
dec
fisubs
push
mov
mov
popf
test
daa
bound
sar
mov
push
jnp
sbb
jae
es
xchg
dec
sahf
je
jae
stos
mov
jp
xchg
cmp
test
push
adc
test
inc
je
aaa
negl
ljmp
int
sbb
and
imul
addr16
repnz
jnp
stos
adc
push
ffreep
push
aas
test
addr16
popf
insb
push
cmp
mov
jo
sbb
and
sub
push
push
pop
cli
sbb
rorl
pop
mov
xchg
out
adc
push
lret
xchg
fmuls
data16
mov
fisubs
xchg
or
xlat
pop
push
lcall
ret
mov
jbe
inc
out
jo
lahf
decb
mov
cwtl
mov
xchg
and
mov
enter
in
push
in
mov
mov
out
fcmovbe
inc
pop
mov
lret
inc
push
mov
test
mov
cltd
test
lock
lahf
popa
xor
xchg
lods
movsl
jo
add
and
aam
cmpsb
dec
xchg
fdivrl
hlt
or
mov
sbb
fnstcw
and
je
adc
test
aad
and
dec
mov
pop
or
lods
cmp
xor
in
mov
decb
add
cmp
mov
pop
shll
sbb
dec
jbe
subl
lea
jnp
out
add
and
and
call
movsb
stos
loop
outsl
xchg
inc
out
cmc
xor
xchg
jle
jecxz
adc
nop
out
cld
aas
ds
rcrl
sub
shll
outsl
call
js
jb
sbb
popf
xchg
testl
ret
addr16
dec
push
pop
xchg
xor
pop
popa
and
testl
stos
xchg
cwtl
dec
daa
and
sti
fcomps
sti
jno
repz
inc
out
mov
mov
in
test
push
int
aam
fdiv
cld
xchg
and
mov
jle
push
out
lds
add
rcl
pop
xchg
addb
push
fldt
aas
xchg
push
ret
adc
adc
lret
loop
push
lock
jmp
shll
cli
rorl
sbb
xchg
inc
lds
pop
decb
hlt
and
and
mov
pop
mov
out
fs
cld
cmp
mul
insl
insl
fnstenv
rclb
xchg
iret
iret
push
pop
in
or
stos
xchg
daa
mov
jp
sbb
mov
xchg
inc
fmuls
adc
push
jp
aam
lods
sbbl
shlb
pop
nop
mov
lods
jmp
call
jmp
es
fadd
nop
xor
sbb
or
lods
inc
nop
pop
andb
mov
lret
mov
mull
jmpw
sbb
jl
insb
sbb
adc
mov
jae
jp,pt
pusha
xchg
pop
xchg
into
cltd
fwait
stos
lds
pop
lds
in
add
mov
and
test
pop
test
push
scas
shrd
mov
cmp
pop
push
loop
ds
jecxz
mov
cld
cltd
adcl
dec
jno
shl
add
icebp
int
sbbl
mov
push
add
aas
fldt
pop
out
jno
inc
mov
and
dec
shlb
arpl
push
push
cmp
icebp
inc
cmp
mov
cmp
js
stos
out
pop
fildll
cld
aaa
sbb
scas
xchg
add
in
ds
dec
lods
xchg
mov
sub
and
mov
jp
shlb
cmp
xor
mov
jp
push
lea
ja
push
imul
repnz
and
cmp
xorl
xchg
or
add
sbb
repnz
pop
mov
xor
inc
repz
imul
rcr
repz
mov
loop
cwtl
inc
jp
push
cmp
mov
xchg
insb
divl
xchg
xorb
loope
call
inc
sbb
dec
jo
push
pop
push
jecxz
cmp
dec
lea
push
shll
mov
jns
push
mov
dec
jge
sti
xlat
jge
mov
xchg
dec
aad
xchg
insb
call
das
cld
push
cmp
lods
scas
cmc
sub
xchg
mov
sub
mov
es
xor
push
pop
lahf
andb
sub
cmp
cmpsb
mov
aad
sbb
and
cs
cli
cmpb
xor
mov
mov
in
sbb
jmp
pushf
hlt
enter
cmp
and
bound
cs
shl
or
jmp
adc
mov
aam
cmp
lret
imul
or
test
sub
dec
cli
jl
mov
testl
pop
push
ret
push
add
clc
popf
xchg
mov
push
popf
mov
pop
xor
mov
cmc
mov
sub
cmpsb
loope
mov
jno
out
dec
sbb
jl
test
fwait
inc
push
sarl
incl
pop
cli
xchg
xchg
in
sub
scas
mov
test
adc
sbb
les
orl
hlt
out
xchg
push
mov
xchg
and
jbe
fsubl
stc
xchg
mov
es
test
push
pop
xor
adc
push
xchg
mov
sbb
mov
pop
inc
jmp
or
pop
xor
out
cmp
cmp
inc
divl
cmp
fcomp
lcall
and
dec
cmp
jno
aaa
mov
pop
xchg
add
repz
xor
test
push
jae
or
or
mov
bound
and
or
pop
sbb
lahf
xchg
lcall
mov
xchg
mov
sbb
test
cld
testl
insl
cld
pop
or
jbe
stos
fldcw
dec
mov
pop
or
push
push
or
je
sub
out
imul
and
fxtract
adc
outsb
mov
fcompl
add
and
sbb
sbb
adc
out
or
and
adc
push
inc
xor
movsl
mov
and
push
add
push
sbb
cmpsb
decl
dec
push
push
push
pop
js
shll
out
adc
xrelease
ficoms
dec
js
mov
shrl
popf
mov
add
sbb
fwait
inc
inc
xchg
testb
xor
mov
push
repz
cmp
stos
jb
xor
aad
cmpsl
imul
mov
movsb
stos
dec
mov
inc
mov
xchg
adc
mov
imul
add
ljmp
jns
sbb
stos
ret
inc
gs
adc
mov
mov
cltd
test
cwtl
cmpsb
mov
mov
mov
popf
jp
into
jge
fimull
push
dec
or
je
fstpl
cmp
jbe
cmpsb
or
popf
pop
shrl
popa
mov
scas
imul
in
ss
in
stos
dec
in
popf
ds
push
movsb
call
xor
inc
adc
icebp
sbb
sbb
out
fcmove
mov
repnz
sub
jge
add
adc
shll
dec
and
xor
inc
sbb
dec
pop
mov
div
daa
cs
pop
mov
mov
push
jge
xchg
mov
mov
mov
xor
xchg
push
dec
icebp
push
and
stos
push
int3
shlb
xor
push
and
mov
xchg
hlt
sbb
fistpl
push
out
je
in
sub
pop
cld
xchg
lahf
push
test
cmp
sbb
mov
into
imul
jge
and
cwtl
icebp
lods
jp
mov
cwtl
loope
cmpsl
stos
mov
js
or
outsb
ret
out
sbb
and
popf
dec
test
test
cs
lods
xchg
mov
scas
jp
roll
mov
xchg
hlt
repz
or
xchg
xchg
outsb
or
inc
mov
mov
xchg
mov
sub
shlb
cli
es
inc
sarl
inc
leave
in
mov
push
xor
mov
data16
inc
stos
xchg
pop
jge
mov
fs
aad
mov
sahf
das
pushf
leave
xor
das
fistpll
sbb
adc
jno
inc
xchg
push
adc
xor
lret
pop
adc
or
dec
pop
pop
ja
mov
pop
pop
jmp
jae
ficoms
in
pusha
mov
and
mov
mov
xchg
fcompl
aaa
jge
adc
pop
xchg
dec
and
add
popa
insb
test
loopne
xchg
sbb
jo
movsl
and
sbb
mov
fsubl
mov
push
mov
lods
fbld
scas
mov
mov
mov
movq
cld
call
jp
cwtl
xchg
loopne
push
repnz
movsl
push
inc
addr16
xchg
addr16
cli
scas
insl
pop
test
shr
shlb
jle
mov
cmp
in
pop
push
mov
faddp
lds
fildl
and
mov
push
hlt
mov
pop
mov
xchg
and
or
aam
enter
mov
hlt
jge
xor
or
pop
and
mov
rcll
fildll
sbbb
scas
sti
in
mov
popf
dec
and
fdivs
popf
mov
in
sbb
push
imul
and
push
test
ret
lret
pop
dec
push
jmp
sub
icebp
outsl
lods
mov
lcall
adc
int3
cmc
mov
pop
cmpsb
push
xchg
cmp
and
jns
jne
jg
push
xlat
add
imul
push
add
push
cmp
aam
aam
xor
mov
cwtl
cli
ret
jmp
imul
fcmovbe
inc
push
fisubs
pop
jbe
into
pop
sarl
int3
fadds
xchg
push
xor
ret
push
pop
mov
imul
scas
out
ret
pusha
push
lcall
lea
loopne
pop
adcl
sahf
and
subb
sarl
aas
xchg
hlt
popa
ss
enter
mov
arpl
sbb
insb
sub
stc
stos
stos
shrl
icebp
xor
xchg
mov
and
outsl
dec
out
pop
mov
movsb
jl
sarl
push
sbb
sahf
cmp
int
cli
lea
bound
and
stos
sahf
mov
clc
jo
pop
mov
mov
cmp
or
inc
and
mov
mov
ja
out
int
xchg
nop
out
cmp
ja
dec
fstps
shr
int3
js,pt
das
mov
ficompl
loope
adcb
out
adc
movsb
sub
cltd
inc
cli
ret
or
sbbl
mov
repnz
iret
lahf
das
data16
push
or
cmp
sahf
lock
sub
test
mov
jns
mov
jbe
sbb
pop
and
out
ret
daa
out
sub
pop
mov
jnp
mov
aam
pop
filds
mov
cwtl
ja
xor
cmp
les
adc
scas
xchg
loope
dec
dec
test
mov
imul
cmpsl
scas
mov
push
cmpsl
out
sub
lret
mov
in
lods
call
sbb
cmp
adc
mov
push
repnz
jae
mov
jecxz
fistpll
sub
movsb
call
lahf
fcoms
shll
push
enter
push
lret
and
es
int3
sub
cltd
add
mov
test
aad
mov
iret
loop
mov
xchg
and
or
fs
cmpsl
xchg
adc
iret
add
adcb
dec
pop
xor
mov
cmc
jbe
push
jmp
arpl
mov
pop
into
out
xor
push
xchg
test
lods
inc
sahf
sbb
enter
outsl
daa
fisubrs
jbe
jno
push
cmc
lret
or
iret
add
push
push
ja
xor
xor
scas
jbe
popa
or
fsts
jecxz
out
je
xchg
cmp
inc
scas
sub
adc
scas
push
pop
mov
and
in
cmpl
jg
inc
inc
sbb
xchg
lcall
leave
daa
out
adc
xchg
movsl
sbb
in
movsb
je
mov
jp
insb
insl
mov
cmpsl
adc
sub
je
sub
xchg
mov
arpl
imul
fsub
push
sub
sub
dec
mov
sub
jne
cld
or
xor
mov
add
inc
jnp
sti
arpl
inc
add
and
popa
jne
xor
test
movsl
cli
cmp
and
sar
pop
sahf
sub
pop
in
lods
sarb
lret
stos
popl
lret
sbb
leave
dec
les
push
dec
test
xor
test
push
adc
push
rolb
arpl
adcl
sbb
mov
xchg
jo
xor
jp
adc
icebp
stos
jne
sub
jno
pop
jae
outsl
cltd
dec
pop
out
sbb
negl
sbb
subl
and
lods
jbe
cmp
mov
test
pushfw
dec
lret
and
pusha
sbb
xchg
adc
lods
pop
repz
or
mov
scas
fucomip
lret
aaa
pop
aam
or
lret
mov
inc
push
ret
pushf
push
in
in
add
call
fistl
add
or
or
fidivrs
cmp
imul
xor
pop
fnstsw
push
aad
fdivrl
movsb
sub
cmp
dec
add
orb
mov
xor
insl
sub
fabs
cmp
cmp
aad
mov
popf
out
sbb
fdivs
and
ljmp
ss
adc
xor
cmp
cmp
or
stos
sub
in
in
hlt
jge
addr16
sar
or
lods
mov
cmp
aam
pop
xor
mov
sbb
ja
scas
or
repnz
mov
pusha
shll
testl
xor
lea
mov
call
xchg
push
aas
dec
xchg
cmp
pop
lea
aaa
dec
push
pop
jmp
jge
cs
jo
in
lahf
pop
lods
test
push
loopne
loope
or
aad
int
jmp
jae
mov
sbb
lcall
dec
shrl
stc
movsl
adc
adc
sbb
test
lcall
sub
fmull
lahf
mov
mov
xor
sti
adc
lods
les
ss
adc
or
xor
add
adc
scas
es
cmp
add
mov
and
adc
popa
lret
mov
pusha
lcall
add
mov
stos
in
andnps
xor
std
xor
gs
lock
cld
sub
and
loope
and
in
adc
pop
cld
and
les
mov
pop
sbb
xchg
sbb
mov
dec
in
lcall
lcall
insb
mov
dec
cli
push
mov
into
addl
xlat
loope
xchg
push
xor
cmp
pushf
mov
xchg
pushf
ret
lods
jge
pop
movsl
rorl
iret
xor
or
sub
cmp
in
movsl
add
mov
icebp
rcrb
aam
lea
loop
stos
dec
inc
int
jl
outsl
xchg
adc
sbb
cmp
cld
nop
leave
out
jns
outsb
shlb
sub
arpl
ljmp
mov
dec
mov
fs
push
adc
ret
xorl
add
push
or
push
in
bound
test
xor
cmp
fimull
inc
shll
sub
dec
cmp
push
pusha
mov
pusha
out
or
push
stos
pop
inc
sbb
std
scas
xchg
jno
pop
fwait
bnd
out
jb
fistl
and
mov
je
pop
sbb
pop
dec
shl
jmp
jmp
sarb
das
mov
scas
mov
jg
mov
rolb
jno
movsl
in
cmp
into
repz
xchg
push
icebp
xor
pop
in
jl
lods
push
lahf
xor
inc
rol
cmc
jno
adc
fldt
cld
roll
fnsave
imul
fwait
inc
and
xchg
mov
pop
pop
inc
aas
or
xchg
in
push
out
stc
xor
mov
push
adc
loopne
push
jecxz
lods
movswl
dec
subb
sbb
shl
bound
push
sbb
xor
add
sub
sbb
fdivrs
sub
adc
loop
repz
or
xchg
test
out
mov
in
sbb
in
xchg
push
cmp
shlb
lods
mov
add
push
lods
xorb
out
sub
es
inc
dec
and
test
lds
pop
arpl
cli
mov
jnp
idiv
rcl
pop
int3
cld
rcll
fcomps
lcall
adc
aas
mov
xchg
les
sbb
adc
mov
pop
imul
push
aas
nop
enter
and
mov
xor
inc
cmp
fucom
and
sub
mov
subl
jle
add
dec
and
lret
xor
and
push
nop
in
je
orb
data16
mov
pop
enter
hlt
js
rol
add
pop
ds
fistpll
xchg
pusha
adc
testl
aaa
or
rcll
hlt
js
and
cld
inc
enter
add
mov
inc
roll
test
push
negb
push
hlt
je
pop
pop
pop
mov
pusha
xor
rcll
cwtl
insb
sti
adc
add
xor
in
mov
pop
or
lods
adc
push
mov
dec
adc
cmp
fdivs
inc
lcall
pop
mov
lret
enter
push
rol
shll
xchg
mov
das
pop
call
inc
jle
in
push
idivl
jp
fcmovu
fnstcw
dec
or
xchg
sub
shrb
sbb
pusha
push
cwtl
insb
lock
sbb
mov
mov
cmp
fimuls
int
insb
into
ss
sbb
cmpsb
mov
clc
lahf
lods
aaa
xor
popf
jae
outsb
ret
jne
out
mov
pop
inc
sbbl
mov
mov
cmp
das
ret
push
pop
cmp
aas
sub
sbb
sub
push
and
xchg
jmp
dec
in
insb
and
or
adc
xchg
testb
cwtl
insb
out
js
jb
mov
out
fwait
mov
and
daa
and
cmpsb
pop
mov
test
xlat
ss
stc
lcall
pop
xchg
test
cmpsl
jne
jo
mov
int3
mov
adc
in
or
test
mov
mov
jp
sub
and
ds
int
mov
add
cld
pop
pusha
leave
insl
ja
lock
dec
cmc
xlat
inc
mov
xchg
push
add
add
dec
out
stos
inc
and
and
int
jne
add
mov
add
xchg
inc
subl
clc
imul
jl
cmpsb
std
jmp
inc
lret
add
pop
scas
or
dec
aam
xor
stos
aaa
enter
test
jp
hlt
mov
fistl
inc
inc
pop
dec
cmpsl
sahf
dec
in
lea
jle
clc
push
inc
stc
adc
inc
and
loop
sti
sub
imulb
shr
fstpl
jmp
mov
mov
and
xlat
stos
lret
stos
jle
sub
mov
test
sbb
mov
mov
mov
sbb
add
pushf
mov
cmp
or
rorb
dec
insb
mov
mov
push
jo
popa
cmp
pop
jbe
dec
fucompp
or
inc
mov
into
mov
or
xchg
push
icebp
dec
push
int
xchg
divl
pop
dec
inc
xor
inc
pop
pop
out
in
out
popf
femms
jb
addb
xor
sahf
dec
arpl
scas
mov
jle
push
xor
hlt
sarl
arpl
ss
jmp
sub
shl
lret
add
sar
imul
push
pop
rorb
cmpsl
pop
push
aas
mov
fcompl
xor
or
sub
arpl
mov
pop
sub
adc
jbe
divl
xor
fadd
fldl
je
scas
mov
lods
mov
lds
test
pop
jbe
xor
sahf
lods
lods
sub
mov
out
sti
push
lret
int
mov
leave
sub
fdivrp
xor
push
dec
aas
cmc
ss
add
andb
mov
shl
cld
pop
fwait
sub
jnp
pop
cs
cmc
popa
out
cmp
push
jmp
adc
cmpsl
loop
xchg
pop
neg
jno
ret
sbb
jnp
or
jg
cmp
push
cmp
and
dec
test
test
push
push
in
dec
pop
sub
data16
ljmp
xor
out
xor
jno
or
je
aaa
xchg
xor
inc
jnp
ret
dec
and
scas
dec
adc
jge
ljmp
mov
or
mov
mov
and
rorb
ret
out
sub
repz
xchg
pop
mov
pushl
pop
jno
arpl
inc
or
dec
mov
adc
push
or
mov
mov
insb
cwtl
dec
dec
loope
out
jp
mov
inc
push
sbb
and
loope
mov
sbb
adc
xorb
push
or
sub
mov
enter
fnsave
jbe
cmp
xchg
int
cmp
push
sbb
xor
fs
sbb
jge
or
or
xchg
jecxz
push
cmp
inc
mov
pop
mov
mov
jecxz
jbe
idivb
out
xchg
sbb
test
push
push
xor
or
dec
cmpb
roll
inc
shll
mov
addr16
fisttpl
sub
adc
scas
fiadds
add
insl
out
sbb
subb
dec
cmc
or
movsl
test
mov
loope
in
adc
adc
hlt
push
and
push
mov
test
lret
xor
cmp
fcoms
jg
push
dec
jge
push
js
push
mov
mov
arpl
repz
mov
and
call
jecxz
xchg
stos
cmp
mov
lret
loope
sub
jl
faddl
mov
inc
pop
hlt
fsubrs
fs
test
out
jmp
xchg
dec
sub
lahf
mov
lcall
sti
ficompl
jl
pop
out
and
roll
mov
ret
push
jge
mov
mov
out
scas
or
test
or
jl
data16
lret
inc
or
pop
adc
or
loope
sti
mov
mov
push
test
aas
cli
or
jg
push
aas
or
fs
inc
or
xchg
push
addr16
xchg
jge
or
imul
sbb
lods
sbbl
pop
popa
push
stos
repz
push
mov
mov
lret
lods
ds
push
inc
and
pop
dec
shr
mov
sub
mov
andl
jns
pop
std
xor
cmp
shrl
push
sbb
stc
xchg
lret
sbb
outsb
xor
add
add
sahf
push
repz
imul
or
jl
mov
out
in
pusha
mov
adc
push
inc
ret
std
lods
xchg
shl
aas
adc
inc
adc
inc
aaa
jae
or
fstl
xchg
jmp
cltd
in
push
stos
fsubl
push
in
push
out
scas
and
stos
call
sbbl
jo
jnp
mov
xor
loope
int
inc
inc
add
mov
mov
dec
addb
jno
cli
mov
mov
cmp
addr16
adc
cmp
xchg
loop
adc
pop
cmp
jo
sahf
push
inc
push
cwtl
xorl
sbb
ret
push
jecxz
loop
mov
inc
push
mov
shr
ficompl
mov
into
ds
inc
fildl
sahf
lods
cmp
jae
movsl
mov
cmc
push
loopne
cmp
push
scas
sub
pop
cmp
cmp
pushl
ret
xor
lahf
cs
mov
mov
mov
cmp
aas
add
push
lods
pop
daa
fsubl
je
daa
ror
repnz
push
in
fldcw
and
inc
mov
push
mov
and
mov
push
neg
push
cld
pop
js
xchg
outsl
and
icebp
pusha
les
mov
or
inc
cmp
addr16
data16
fwait
push
rolb
sbb
xchg
inc
gs
dec
ja
stos
psubsw
cmp
mov
mov
in
insb
mov
push
repz
push
rcll
int3
pop
adc
shll
sbb
xchg
aam
aad
cmp
cmc
popf
pop
and
insb
cmc
scas
ss
pop
mov
test
shrb
xchg
pushf
cmpsb
imul
add
jbe
inc
addr16
sbb
sbb
lock
inc
lret
dec
push
pusha
inc
lods
lods
fists
xor
jns
jo
push
push
insl
xor
ss
mov
in
aad
jo
lcall
ficoml
mov
test
das
into
inc
xchg
out
push
adc
cmp
das
or
dec
jne
scas
ret
nop
cmpsl
and
std
jns
xor
addb
loopne
pop
call
sub
mov
pop
inc
es
lcall
test
jbe
inc
push
push
adc
add
clc
add
dec
push
scas
test
push
push
inc
incl
gs
inc
shll
gs
ret
lods
test
push
das
jg
and
lods
xor
pop
push
jo
or
sub
jle
pop
mov
stos
push
xor
xchg
icebp
cmpsl
in
mov
push
repnz
jmp
cmp
out
xchg
insl
aaa
pusha
inc
fs
inc
inc
mov
pop
arpl
push
flds
dec
mull
mov
shl
and
add
push
movsl
push
xchg
sbb
lds
dec
jmp
mov
out
adc
fildl
xchg
pop
scas
mov
xor
push
mov
bound
in
sub
bound
sub
cmp
testb
cli
add
adc
lods
xor
sti
push
rorb
add
push
cmpsb
cld
lahf
mov
inc
sti
cmp
push
adc
lds
cmc
add
sbb
pop
movsb
insb
push
jb
out
jae
adc
test
adc
addr16
scas
cmp
xchg
sbb
mov
mov
nop
mov
inc
mov
jno
addb
loope
cmp
aaa
xor
rol
imul
rorl
popf
dec
hlt
inc
sbb
mov
mov
dec
dec
mov
iret
fbstp
jnp
or
in
push
jge
das
fisubrl
adc
aam
lahf
adc
pop
inc
dec
xor
pushf
adc
push
jae
fcmovnu
loope
aad
outsb
fsubrl
loopne
sub
adc
popa
cmp
push
xchg
sbb
adc
test
scas
stc
xchg
push
shl
scas
stos
and
jge,pt
int
mov
pop
pop
inc
sub
ja
pop
or
sbb
frstor
inc
enter
fcoms
das
pop
or
mov
pop
fdivrp
test
jae
cmpsb
int
mov
mov
cmc
jg
rorl
mov
movsl
xchg
lret
jbe
stos
push
dec
sti
pop
popf
int3
ret
sub
and
dec
cmc
sbb
cmp
push
xor
div
dec
inc
mov
push
or
pop
faddl
stc
xchg
jg
adc
mov
pop
sbb
xchg
mov
test
ret
cltd
leave
nop
stc
scas
mov
mov
mov
xor
imul
sti
jno
mov
pop
es
stc
test
shlb
push
pusha
mov
push
idivl
stos
pop
stos
xor
movsl
addr16
out
pop
jns
xchg
cmp
push
fsts
jle
xchg
pop
mov
pop
lret
inc
mov
icebp
fwait
orb
xor
fistpll
stc
les
xchg
movsl
xchg
inc
test
les
ljmp
jne
mov
cwtl
inc
cs
cwtl
pop
mov
sub
shrl
and
mov
cmp
popf
lcall
out
or
adc
rcll
fstp
adc
arpl
sub
cmp
push
jecxz
push
cmc
lret
mov
aas
or
jp
dec
movsl
mov
leave
xchg
movl
pop
and
jne
test
mov
jb
fwait
adc
xchg
fdivr
cwtl
ja
and
imul
aad
pop
inc
pop
sahf
and
cmp
cmp
out
mov
mov
add
cli
shll
lahf
push
test
jge
call
dec
scas
inc
mov
lea
and
inc
idiv
sahf
data16
mov
sub
mov
aaa
inc
es
xor
and
fldl
dec
dec
jmp
mov
in
or
outsl
scas
cmc
xlat
mov
fcmovnbe
data16
xchg
push
jecxz
scas
push
movsb
movsb
adc
out
pop
rcrl
ljmp
loop
cmpb
mov
loopne
push
mov
scas
sub
sti
arpl
cmp
or
lret
cmp
test
pop
rcll
inc
pop
cmp
das
fnstsw
shld
xor
popa
orb
sbb
dec
lret
shl
push
adc
std
arpl
loop,pn
xchg
inc
ja
sbb
inc
pop
or
or
xor
xchg
jg
mov
lret
push
add
add
xchg
divb
mov
mov
sub
add
xor
dec
pop
inc
xchg
in
out
xchg
jge
jle
or
test
testl
leave
hlt
inc
adc
xchg
xlat
adc
lahf
rclb
popf
and
mov
outsl
dec
insl
jp
pop
cmp
and
movsb
mov
neg
xchg
mov
pop
out
inc
aad
sub
xchg
pop
popf
dec
inc
sub
les
rcr
dec
pusha
shll
loop
mov
cmp
xchg
and
jo
sbb
mov
inc
repz
movsb
lds
aam
jno
negl
insl
xlat
subl
sub
mov
fimull
pop
sub
xchg
mov
movsl
dec
mov
jne
stc
mov
fsts
aaa
std
push
push
adc
mov
scas
jo
out
lock
mov
lret
inc
dec
hlt
and
adc
or
inc
dec
imul
lock
nop
mov
xchg
stos
aaa
movsb
lods
mov
cmc
idivl
aas
adc
ss
inc
rep
lea
enter
sti
leave
fcoml
and
in
imul
xchg
mov
xchg
int3
clc
fstps
pop
add
insl
jp
js
test
fs
sbb
in
out
cld
jae
xlat
sub
cmp
jp
mov
cwtl
mov
fsub
jmp
movsl
out
shrb
fld1
cmpsl
pop
adc
loope
das
dec
and
cltd
push
xchg
faddl
adc
mov
xchg
pop
jg
loopne
sahf
jecxz
xchg
push
lahf
push
test
mov
cmp
testb
pop
mov
popa
cs
lods
data16
enter
jo
mov
add
xchg
out
add
js
add
shl
sahf
bound
clc
lock
pop
mov
sbb
mov
lret
fidivrl
mov
stos
mov
sub
clc
inc
push
push
pop
lods
adc
xchg
cli
or
negl
jb
sub
vsubss
in
mov
sbb
cmp
insb
ja
nop
push
dec
sbb
fistps
sub
pop
inc
and
scas
xchg
ja
imul
clc
jge
jmp
ret
nop
test
pop
sahf
orl
dec
sub
and
adc
fadd
lea
inc
sbb
add
push
push
inc
incl
inc
or
xorb
divl
sub
jecxz
repz
xor
push
pop
mov
nop
or
lcall
sbb
nop
mov
mov
mov
insl
inc
jo
cld
mov
add
sarb
push
lea
sbb
das
sub
and
pushf
xchg
jnp
mov
outsl
push
loope
add
rorb
into
jbe
push
push
dec
dec
ja
lock
loopne
je
mov
je
sub
mov
stos
loope
jg
lea
jbe
adc
mov
in
jne
xor
cmpsb
pop
mov
icebp
jle
adc
nop
mov
push
or
mov
xchg
sarl
jp
inc
mov
cld
inc
mov
aaa
ds
in
cmp
dec
clc
push
test
cli
aaa
pop
loopne
and
push
aam
mov
cwtl
rcrb
inc
jb
in
clc
pop
xor
mov
push
into
outsb
mov
pop
push
mov
aaa
ret
and
sub
lcall
push
je
jp
push
rol
and
push
pop
repz
addr16
jecxz
int
push
or
aam
inc
out
pop
popa
inc
dec
testl
aam
loopne
push
das
shl
inc
push
add
xor
or
cli
shrb
scas
and
inc
cltd
inc
push
cld
das
inc
out
sub
cmp
imul
out
xor
das
rclb
addl
push
xchg
mov
cmpsl
dec
rorb
inc
push
or
cs
pop
mov
lods
lods
mov
push
xor
adc
mov
sub
lahf
adc
lret
aaa
shll
inc
pop
jle
out
lods
mov
test
sbb
mov
sahf
or
cmp
mov
add
adc
fs
jne
andl
rorb
popa
or
adc
push
in
dec
ss
mov
jo
sbb
push
adc
lcall
aaa
jle
js
scas
jbe
into
jmp
roll
sbb
inc
stos
andl
jae
daa
and
add
imul
jns
imulb
leave
mov
int
in
add
fs
adc
and
mov
inc
jecxz
sub
or
cmp
movsl
jg
div
inc
leave
xchg
js
and
rolb
or
mov
out
jge
mov
aas
arpl
test
call
std
lods
es
mov
pop
fst
ja
lcall
adc
add
sub
bound
stos
and
dec
mov
jle
psubsb
cwtl
pop
sub
dec
movsl
cmp
mov
inc
mov
cmpb
popa
push
sub
and
fucomi
jecxz
and
mov
aaa
shlb
or
push
mov
mov
xor
rcrb
adc
or
into
push
or
pop
and
jl
fucomip
fisubs
mov
xchg
cmp
push
out
mov
lods
add
call
pop
pop
mov
xorl
lcall
call
xor
mov
inc
jo
xlat
pop
stc
jle
das
jo
insb
scas
add
arpl
ja
cld
imul
out
mov
sbb
lret
cmpsl
sbb
push
iret
dec
and
rolb
into
hlt
or
dec
add
stc
ret
movsb
mov
mov
push
addb
push
test
mov
into
mov
cmpsl
and
ljmp
xchg
xchg
push
cmp
jp
inc
fisubl
sub
inc
lahf
faddl
xchg
cmp
xor
icebp
sti
jo
ret
adc
in
popf
fs
xchg
sbbb
ret
and
push
sub
out
jo
cmp
pop
fstl
xchg
cld
into
and
es
mov
sbb
fimull
add
jbe
jns
outsb
or
ret
mov
xchg
jp
aaa
cmp
jmp
mov
mov
les
mov
lcall
jae
clc
insb
enter
stos
sub
fnstenv
push
jle
inc
imul
ds
test
lock
data16
nop
ret
lock
dec
pushf
fldl
daa
sbb
test
lock
loopne
mov
xchg
pop
push
mov
jg
pusha
pop
movsb
data16
cli
pop
hlt
enter
cmp
loopne
cwtl
aas
test
mov
dec
sub
ret
lcall
xchg
sub
pop
pop
xchg
push
dec
aad
jne
xor
sub
bound
xchg
daa
popa
and
pushf
daa
shrl
sbb
pushf
or
in
jg
sti
xchg
xor
movsl
sbb
sub
popf
aad
scas
into
mov
adc
push
mov
popf
and
xlat
push
mov
mov
inc
jmp
fucomp
xor
inc
sti
repz
jb
shll
pop
dec
nop
cwtl
loopne
frstor
pop
mov
push
push
jle
or
inc
adc
test
lret
mov
push
xchg
mul
sbb
jne
add
inc
xchg
pop
pop
jmp
or
arpl
mov
scas
fs
jle
scas
mov
mov
or
decb
xor
pop
sub
jbe
jns
and
incb
mov
add
aas
pop
hlt
pop
xchg
in
mov
test
mov
xchg
add
add
mov
xchg
pop
xchg
push
adc
inc
iret
mov
out
xchg
pop
cmp
and
lahf
lret
add
dec
mov
xor
in
aaa
iret
mov
cli
adc
es
jle
std
movb
jmp
pop
jne
out
xchg
lret
jbe
ficoms
fxch
mov
in
rorl
sahf
lods
add
jle
pop
fldt
imul
mov
push
pmovmskb
inc
inc
dec
push
xor
addb
xor
xchg
jmp
push
jne
add
or
or
dec
pop
dec
out
outsl
imul
das
stos
repnz
xchg
in
adc
iret
pop
jne
push
movsl
aaa
jp
cmc
push
mov
sbb
pop
mov
sub
mov
xor
hlt
ret
push
pop
or
sub
out
and
mov
outsb
jns
cmp
test
cmc
ficomps
lret
push
mov
in
stos
adc
xchg
jl
nop
cmp
lret
adc
push
cmc
movsb
jmp
xor
pop
xor
mov
lods
sahf
cmp
stc
adc
push
mul
or
pop
ss
jo
mov
fnstenv
xchg
ds
aaa
inc
mov
fsubrl
insl
jns
and
cmp
fstpt
stos
stos
lock
cmpsl
cmc
rcrl
movsl
addr16
in
das
mov
arpl
jb
adc
xchg
lock
in
cmp
cmp
sub
inc
mov
pop
dec
add
ret
repz
sub
xchg
and
pop
sub
fnstenv
movsb
mov
lods
insb
mov
push
out
push
mov
push
jg
pop
in
fsubr
and
stos
pop
arpl
inc
dec
xchg
std
mov
dec
imul
adc
mov
repz
jmp
push
loopne
xchg
adc
imul
sbb
in
mov
push
rorb
cmp
das
dec
sbb
in
or
test
mov
and
ror
cmc
mov
sbb
sub
mov
rcrl
int3
mov
std
out
leave
rolb
movsb
mov
sub
xlat
push
iret
push
into
shrl
dec
js
data16
aas
inc
shl
stos
in
pop
xor
push
jae
loope
mov
jo
ss
cmc
jge
test
mov
cmp
xlat
jbe
cmp
mov
aas
imul
mov
xlat
or
daa
test
int3
adc
lea
call
cmp
or
and
movsl
lahf
add
mov
sahf
cmp
jge
jp
lods
mov
push
and
pop
adc
pop
es
imul
insl
sub
loop
push
and
push
adc
aaa
push
xchg
sbb
xor
insl
push
cwtl
and
cli
push
mov
lods
pop
jo
adc
pop
pop
fiadds
dec
aaa
js
cmovg
std
mov
and
gs
dec
scas
sbb
outsl
in
outsl
cmp
sarb
ret
mov
pop
aam
shrl
push
out
sbb
paddb
hlt
mov
lret
lods
cmp
jg
fldln2
push
cmp
aam
inc
sub
test
push
mov
in
sbb
inc
rclb
loopne
xchg
push
cmp
int
sub
dec
rorl
pusha
push
imul
inc
out
popf
inc
mov
cmp
movsb
sar
flds
adc
or
sub
or
stos
lods
push
cmp
in
and
jo
dec
cmpsl
and
movsl
adc
fiaddl
rcll
scas
loop
adc
pop
stc
lods
mov
das
pop
mov
mov
imul
test
das
sub
repz
daa
or
insb
sub
mov
adc
out
mov
sahf
inc
ret
mov
pusha
daa
adc
xchg
inc
loope
fistpl
sub
pusha
cmpb
add
dec
leave
test
inc
lret
push
xor
jl
pop
sar
mov
dec
xchg
push
mov
sub
es
rorb
mov
jg
sbb
stc
xchg
in
jp
xor
outsl
pop
or
dec
mov
loop
stc
xchg
jp
out
call
pop
cs
addl
mov
push
sub
jg
mov
adc
xchg
sbb
dec
lods
push
sub
shlb
imul
jno
inc
shlb
loope
fisubs
jbe
inc
je
jp
jmp
mov
add
aam
jecxz
scas
cld
mov
lea
or
nop
repnz
mov
mov
xchg
and
lods
push
cwtl
fdivs
je
enter
mov
rclb
adc
out
inc
aad
repnz
outsl
add
scas
jne
push
scas
scas
mov
push
int3
pop
xor
ja
and
shrl
jae
movsl
xor
inc
lods
loopne
popa
xchg
lea
aam
loopne
xor
cld
scas
sarb
bound
hlt
mov
insl
mov
scas
jnp
stos
xor
pop
cmp
cltd
into
lods
or
leave
add
arpl
cmpsb
mov
nop
in
std
or
fisttpll
pop
lds
push
js
sub
push
inc
pop
add
cmp
addl
repnz
inc
out
sub
mov
in
xor
mov
shrb
jne
jg
fisubrs
inc
js
sub
pop
dec
into
pusha
les
pop
dec
push
mov
nop
add
cmp
js
pop
pop
insl
push
sbb
inc
mov
mov
test
add
push
mov
push
loopne
mov
mov
std
insl
inc
stos
cwtl
rcr
pop
pop
fldl
dec
adc
fbstp
cwtl
adc
or
fcoms
cmp
dec
dec
subl
pop
and
and
cmc
jl
adcl
mov
push
push
mov
jecxz
pop
pop
jmp
cmp
xchg
in
push
inc
icebp
mov
xor
mov
sub
adc
push
loopne
adc
test
pop
inc
insb
sub
iret
push
ret
lock
testb
daa
jl
adc
pop
aaa
or
or
stos
aad
rorl
cmpsl
push
mov
xor
js
or
inc
mov
je
pushf
fs
cwtl
mov
jne
mov
cltd
jo
pushf
sbb
inc
or
stos
scas
das
add
lods
cwtl
pop
in
ss
adc
mov
es
sub
add
mov
aam
mov
insl
xchg
test
inc
fs
dec
adc
push
out
jge
out
pop
pop
das
pop
lret
or
das
pop
cmp
xchg
jb
inc
lret
jb
rolb
inc
test
add
sub
and
mov
or
rcll
or
fwait
loope
test
das
adc
mov
mov
test
repnz
add
hlt
insl
or
aad
push
cmp
cmp
pop
arpl
imul
imul
stos
lea
inc
jp
sub
cs
or
ds
je
fisubs
mov
and
lea
outsb
jae,pt
in
popf
jmp
cmpsl
adc
das
add
push
aam
add
mov
rcrb
push
xchg
inc
add
stc
mov
push
pop
and
mov
lcall
mov
je
cld
fistpll
xor
jmp
cld
inc
int3
dec
push
mov
jbe
adc
pop
pushl
pmulhw
and
rcr
cmc
pop
mov
ret
popa
jge
mov
jae
cmp
sti
mov
mov
pavgb
cmp
fstpl
addr16
pop
add
into
push
inc
pop
mov
leave
jb
push
aam
xchg
fstl
xchg
popf
pop
insl
xchg
scas
sahf
and
adc
fiaddl
add
mov
in
fisubrl
mov
stc
jbe
ss
test
int
in
shlb
lcall
mov
dec
aad
adc
xchg
sarl
and
arpl
outsb
or
inc
mov
pop
sbb
cmpsb
jl
jns
mov
inc
mov
in
mov
jg
fwait
jae
add
fcomps
cmpsb
add
js
repnz
or
sub
mov
jecxz
test
jno
adc
scas
mov
out
jecxz
pop
lea
push
push
int
in
aad
inc
es
aaa
pop
inc
jge
adc
shll
ljmp
push
notl
ror
lods
cvtpi2ps
mov
push
lock
add
ret
loopne
into
push
notb
pop
cmp
iret
adc
xchg
ljmp
mov
and
ss
into
hlt
mov
das
inc
adc
xor
xor
popa
pop
insb
in
push
scas
jp
pop
lds
jns
clc
jb
jp
sbb
popl
pop
sub
mov
mov
cmpsl
stc
stos
mov
into
and
cmp
test
out
notb
test
push
jnp
xor
xor
pop
lret
sbb
jmp
into
jnp
icebp
xchg
andb
sti
mov
and
in
les
movsb
and
push
sbb
in
pushf
push
sbb
popf
adc
fnstsw
sbb
push
lock
mov
jp
jae
jne
xchg
push
popa
jl
fstp
dec
mov
xchg
sahf
mov
test
fidivs
mov
gs
ret
cmpsl
xor
cwtl
mov
and
fdivrs
jl
shlb
ret
aaa
mov
clc
pop
and
xchg
xchg
into
rcrl
rclb
dec
or
push
mov
imul
inc
or
shrb
into
ds
jb
imul
xchg
add
dec
adc
jno
add
jnp
lods
xor
dec
xlat
adc
pop
mov
push
adc
xchg
nop
xchg
inc
and
push
loopne
inc
arpl
mov
cmp
out
popf
push
shl
popf
aaa
mov
shrl
jmp
xor
sbb
inc
inc
pop
jae
push
sbb
sub
ss
xchg
push
push
sbb
test
jmp
jmp
loopne
add
mov
add
mov
push
mov
pop
popa
std
fidivrs
mov
mov
mov
les
cmp
jnp
xor
push
mov
jnp
divb
addr16
scas
cmpsb
stc
pop
jo
and
push
fdivp
lahf
enter
imul
jg
test
push
ret
cmp
push
test
stos
mov
popf
sbb
aas
adc
cmp
push
lret
cmp
test
aad
jne
popf
lods
cmp
adc
fsubs
mov
fsubs
pop
sub
dec
mov
sbbb
add
cmp
push
add
mov
mov
adcl
jns
js
mov
push
test
jmp
test
movsb
cmc
fiaddl
lcall
fsub
fldl
jg
jbe
sub
insl
addr16
in
in
add
mov
rcll
scas
orb
std
ret
repz
mov
fisttpll
leave
pop
std
add
mov
ficoms
subl
lds
pushf
test
or
cmc
or
in
imul
out
and
xchg
hlt
test
mov
cld
or
pop
pop
push
ljmp
cmp
xchg
jae
push
hlt
lahf
decl
sbb
arpl
imul
sbb
aaa
in
fildll
stos
mov
push
dec
push
jno
and
leave
lds
sbb
xchg
inc
clc
xchg
sbb
sarl
add
pop
inc
sbb
fs
shll
stc
dec
dec
shll
push
std
dec
mov
sarb
cmp
sbb
mov
addr16
ja
out
inc
jo
jne
mov
xchg
pop
in
adc
push
add
orb
icebp
fbld
jno
es
xlat
test
loop
pop
scas
into
push
sub
mov
mov
jno
dec
pop
loopne
testl
jp
fcmove
fmuls
enter
orl
pop
addl
gs
and
scas
in
and
dec
inc
or
pop
mov
dec
mov
sbb
and
aam
cs
mov
rclb
test
ljmp
insb
mov
mov
out
cmpb
enter
cld
scas
and
cmp
es
cmp
je
and
mov
jge
lock
repz
dec
add
rol
lds
mov
inc
fildll
mov
mov
pushf
fwait
mov
test
xor
lock
cmpsb
xor
imul
mov
cmp
sub
mov
push
popf
sbb
inc
pop
push
and
fldpi
test
cs
sub
push
lods
jle
add
mov
push
xor
mov
dec
insb
jns
push
into
xchg
xchg
test
lcall
adc
xorl
scas
sahf
adc
or
lock
mov
cld
gs
jb
fmul
pop
aad
not
loop
mov
sahf
push
xor
adc
xor
inc
test
or
cwtl
lahf
ljmp
roll
adc
addr16
jge
sbb
scas
loop
pop
add
jmp
shll
adc
pushf
adc
push
pop
add
adcl
mov
jns
out
std
lret
enter
sti
push
test
jg
out
je
xor
inc
jnp
out
xchg
je
ja
xchg
add
xchg
lret
or
movsb
fs
and
in
dec
arpl
iret
shlb
call
stos
and
dec
fwait
adcl
jb
inc
dec
lcall
rol
push
decb
mov
adc
roll
inc
sbb
cmpsl
inc
frstor
or
scas
fs
fidivrs
insl
jmp
pop
fs
mov
sub
sub
cmpsb
mov
or
stos
lds
cli
pop
and
jo
mov
xchg
fbstp
bswap
pop
aas
dec
mov
aad
and
popa
lods
movsl
outsl
std
adc
push
pop
inc
jmp
xor
das
sahf
mov
bound
cmp
rorb
imul
adc
mov
cs
scas
xchg
or
out
aas
mov
and
out
jb
std
sub
out
pushf
adc
ror
icebp
int
push
cmpsl
outsb
xor
cmp
add
jecxz
xchg
lcall
mov
xor
loopne
int
jb
adc
mov
popf
cmp
mov
out
add
add
or
test
pop
testl
enter
sub
mov
fidivrl
mov
and
outsb
add
and
arpl
enter
mov
mov
push
es
add
push
in
cmpl
sub
rcrb
lds
pop
das
pop
jle
aaa
in
jl
push
adc
add
shl
mov
pop
mov
insb
pop
inc
lret
insb
data16
popl
shld
mov
jecxz
mov
daa
cmpl
cmp
out
add
adcb
push
dec
mov
test
push
push
push
fisubs
add
mov
pop
xor
dec
movhps
xchg
xor
ja
sti
enter
mov
test
cld
rorl
ss
sub
push
sbb
cmpsl
lar
mov
push
test
xor
shlb
aaa
cs
mov
shrl
dec
cmpsb
adc
dec
pop
adc
mov
loop
sbb
cmpsb
movsl
insb
mov
out
out
dec
iret
mov
js
push
pop
push
jmp
aad
inc
stc
mov
fcmovb
mov
mov
out
ja
fcompl
and
sub
sbb
je
adc
and
pop
xchg
adc
cmpsb
fs
mov
call
daa
dec
mov
mov
adc
js
imul
movsb
cmp
or
insb
mov
mov
jge
insl
jge
xor
adc
test
pop
sub
nop
pop
xchg
or
cmpsb
jp
aam
popa
push
inc
push
adcl
inc
push
test
arpl
cmc
push
lods
push
mov
mov
ds
or
jb
jnp
dec
sub
jmp
int3
cmp
enter
or
xchg
dec
movsl
mov
push
sbb
sbb
xor
push
add
gs
stc
cli
add
mov
mov
lahf
xchg
mov
cmpsb
jb
push
clc
adc
repnz
fisubrl
xchg
push
inc
rclb
popa
dec
cmp
test
mov
xor
xor
mov
cmpsb
sub
fwait
push
cmp
mov
imul
arpl
xor
xorb
xor
add
pop
pop
mov
dec
cmp
fistpl
imul
and
mov
push
mov
pop
jmp
adc
inc
pop
sarb
data16
lret
pop
movb
jne
lcall
push
jp
rcl
jecxz
cmc
push
pop
or
rorb
sbb
add
aad
pop
loop
gs
pushf
mov
rorl
push
adc
loope
aam
cmp
jb
and
sub
push
inc
jecxz
push
push
push
and
add
pop
in
fstl
xor
lock
pop
sbb
rorl
adc
jecxz
and
mov
add
mov
cmp
fs
mov
dec
sbb
cmpsb
dec
mov
jns
movsl
shrl
bnd
out
xchg
push
lods
fstp
clc
xchg
hlt
sbb
or
fildll
mov
call
in
adc
rolb
cmp
and
std
and
xor
sub
xchg
mov
mov
jnp
loopne
cmp
mov
mov
popa
or
fcompl
loop
jmp
hlt
aam
xor
mov
mov
enter
and
ja
push
addr16
xchg
inc
mov
aaa
and
out
sahf
cmp
mov
lret
pop
inc
orl
adc
jns
sub
dec
and
repnz
push
movsl
adc
aaa
out
fistl
jne
out
pushf
lcall
outsb
or
sub
inc
pop
adc
stos
nop
add
mov
rol
mov
mov
jb
notb
cmp
in
xchg
pop
sbb
out
jbe
xchg
pop
cs
cmpsb
or
dec
ret
mov
outsb
insl
and
inc
dec
bound
push
enter
push
clc
mov
addl
or
and
fldl
test
rcr
out
fwait
inc
gs
dec
sbb
mov
jl
add
cli
shlb
call
xor
xchg
mov
push
xchg
pop
call
inc
sub
sub
call
sete
loope
xor
mov
aas
scas
imulb
dec
pop
sbb
jg
pushf
sub
aad
fwait
nop
dec
clc
adc
sub
mov
mov
rclb
fldcw
addr16
pop
jnp
or
aas
mov
sbb
test
into
cmpsl
insb
xor
jecxz
dec
mov
ffreep
sarl
stos
das
xchg
mov
push
dec
pop
xor
mov
sub
adc
xor
orl
mov
orl
inc
xchg
mov
ficoms
call
shlb
dec
xor
ret
mov
dec
imul
push
mov
adc
cmp
pop
adc
dec
jns
arpl
sbb
ret
xor
imul
or
pop
push
decb
mov
mov
scas
cmp
mov
dec
jge
aaa
mov
rolb
pushf
lods
leave
lcall
or
mov
clc
repnz
popf
test
mov
sub
and
insb
fsubrp
or
pushf
aam
adc
loope
mov
inc
adc
or
push
mov
je
mov
lcall
jo
adc
push
mov
dec
sbb
mov
pop
loop
ret
dec
mov
cmp
xor
and
sbb
movsb
call
add
and
fstpt
stos
int
push
xchg
flds
sub
fs
mov
jge
or
push
add
jge
pop
mov
dec
faddl
pushf
orb
ffree
out
leave
call
cli
sbb
jo
mov
and
pop
xlat
xor
mov
jnp
je
int3
add
test
and
test
cwtl
lahf
pop
scas
sti
incl
cmp
cmp
cs
pop
cwtl
inc
mov
int
dec
fnstenv
jb
arpl
ja
lret
and
inc
mov
cmc
je
jae
mov
fstps
and
and
aas
xchg
rsm
int
test
dec
jbe
dec
loopne
pop
xchg
ret
sub
xchg
cli
aaa
or
xor
and
fdivl
or
int
lods
xor
dec
jl
dec
adc
cli
imul
arpl
fldenv
push
call
adc
dec
jnp
addb
in
xor
mov
xchg
inc
xor
pop
push
int
mov
repz
es
je
aaa
mov
add
nop
scas
adc
adc
jno
aam
loope
insb
sahf
inc
xlat
test
sahf
pop
in
add
pop
in
and
dec
mov
cltd
in
mov
mulb
xor
fs
sub
subl
pop
test
movsl
mov
jecxz
jo
cmp
pop
int
mov
mov
adc
xchg
push
mov
jmp
in
les
fwait
test
mov
imul
pusha
rcrl
in
or
lahf
mov
sub
jne
push
pusha
adc
jmp
xlat
outsl
add
mov
arpl
mov
sbb
mov
jne
fisubl
inc
jp
icebp
lods
loop
daa
adc
in
mov
push
cmc
cmp
and
std
xor
adc
inc
pop
sbb
xor
dec
aam
adc
into
pushl
mov
loopne
test
xor
xchg
insl
dec
mov
lret
gs
nop
pop
sub
xor
cmpsb
mov
outsl
xchg
add
cli
mov
add
sbb
popf
cmp
in
in
mov
or
cmpsb
mov
sub
in
cli
sbb
cmp
sahf
fwait
cmp
dec
xchg
pop
cmp
out
mov
pop
insl
cmp
outsb
cmp
sub
cltd
iret
cwtl
xor
addr16
pushf
xor
data16
scas
movl
or
cmp
lcall
jg
jle
xchg
loope
jp
fistpll
add
and
std
and
insl
ret
xchg
mov
aaa
sbb
xchg
push
int
ja
ljmp
mov
adcl
gs
cli
out
rcrb
adc
xor
jne
ficomps
jnp
cmp
scas
nop
mov
loop
mov
xor
inc
push
xor
das
dec
sub
sbb
sbb
push
jl
sbb
aas
lea
push
into
test
pop
sub
pop
pop
sub
push
mov
jmp
mov
jp
sub
rclb
ljmp
int3
push
or
out
pop
push
sbb
jns
adc
push
mov
int
inc
movsb
xchg
outsb
pop
lret
arpl
adc
lahf
inc
bound
imul
dec
addl
adc
lret
inc
and
sarl
add
repz
push
aas
into
xor
pop
sarl
inc
call
pop
cltd
rcll
inc
jge
push
mov
movsl
adc
data16
out
pop
add
sub
adc
inc
shl
js
xchg
jb
out
cmp
or
roll
ja
lret
imul
stos
mov
dec
into
cmovbe
clc
and
lret
sub
mov
xchg
push
aas
data16
mov
iret
clc
insl
pop
lds
add
jb
mov
stos
adc
mov
adc
stos
and
cmp
loope
ja
ljmp
test
arpl
ret
fmull
pop
stc
cs
out
pop
xchg
dec
fcoml
dec
inc
mov
mov
xchg
jo
lea
sbb
sahf
in
push
cwtl
insl
out
pop
repnz
pop
hlt
jp
and
inc
xchg
inc
xor
inc
inc
cmp
fs
or
mov
enter
lea
mov
punpcklwd
cmp
ljmp
pop
cmpsl
mov
pop
push
fidivrs
ror
outsl
test
jmp
fs
les
xor
mov
sbb
cwtl
sbb
nop
mov
cld
or
dec
mov
sahf
and
cmpsl
js
and
lcall
push
addr16
xchg
cld
iret
mov
insl
xorl
mov
lcall
jno
clc
mov
lret
imul
add
pushf
or
mov
xchg
lods
enter
ficomps
test
jmp
jle
push
les
lods
mov
outsl
lret
adc
leave
lret
repnz
pop
xchg
push
pop
and
cmpsb
dec
and
jle
mov
pop
subl
mov
pop
pop
pushf
popa
data16
mov
mov
cltd
push
jae
push
cmp
in
outsb
xlat
or
push
lds
cmpsl
insb
jbe
test
dec
shrl
leave
sbb
shrb
mov
das
and
shlb
lea
ljmp
cwtl
aas
out
clc
dec
fistpl
popf
and
xor
outsl
xor
jle
adc
sub
lcall
pop
mov
lods
repnz
inc
test
int3
lahf
and
xchg
or
lods
fsts
cmp
ljmp
xchg
repnz
push
sub
std
das
cmp
inc
aam
test
or
adc
and
or
push
aas
push
dec
lock
popa
push
push
negl
inc
test
inc
cmc
aas
push
dec
in
inc
lds
xchg
mov
imul
jle
xchg
xchg
or
jmp
arpl
out
fistl
jno
stos
inc
dec
adc
lret
or
sahf
xchg
daa
and
mov
cld
xor
jl
shrl
push
ret
loopne
mov
jae
int3
pop
mov
jmp
pop
mov
rcrl
push
xchg
xor
pop
pop
mov
je
daa
outsl
jle
iret
xor
adc
adc
jb
out
int
mov
frstor
mov
cmp
lcall
lods
sbb
pop
or
rcrl
leave
push
imul
pop
je
mov
mov
ret
sub
dec
mov
cs
push
jle
adc
outsl
sbb
scas
hlt
add
in
pop
xchg
pop
sbb
inc
sub
dec
mov
outsl
add
mov
out
jmp
mov
into
test
lods
xchg
xchg
mov
pop
fistl
mov
sub
dec
enter
ret
jno
and
bound
mov
jae
loopne
into
sub
xor
xchg
jb
out
mov
lret
xchg
clc
add
in
sbb
insl
in
scas
sbb
push
dec
ds
or
ja
es
cltd
icebp
mov
dec
xchg
mov
mov
icebp
or
mov
add
push
push
mov
sbb
mov
jnp
sub
jp
xchg
mov
dec
outsb
loop
xor
jno
mov
loop
repnz
jg
test
xor
js
and
add
jle
push
scas
add
cmpsl
lret
push
imul
and
push
mov
or
pop
pop
ret
mov
and
loop
push
add
mov
xor
mov
call
push
lea
adc
addr16
orl
cwtl
jnp
mov
hlt
shlb
movsb
insl
pop
cmc
mov
ret
std
sbb
jo
sahf
xlat
stc
jae
adc
push
jbe
mov
pop
cmp
jp
xlat
push
fstl
ds
adc
leave
add
inc
loopne
stos
inc
fistpl
and
cli
lahf
xor
cs
inc
inc
icebp
and
pop
movsl
int3
jl
mov
lock
fwait
lret
out
shr
sub
sub
cli
mov
enter
mov
shll
rorb
loopne
xor
stc
in
xchg
shrl
jno
stos
imul
mov
int3
mov
cld
jnp
in
sarl
faddl
push
ret
jg
mov
leave
pushl
adc
push
leave
les
loop
push
stos
mov
dec
jbe
out
inc
dec
or
mov
ja
shl
push
push
das
adc
or
cltd
js
stos
rclb
cld
mov
aad
stos
aas
dec
cmp
fnstcw
iret
pop
daa
jmp
addr16
shl
jg
roll
and
dec
div
loopne
lods
cmp
gs
sbb
scas
test
addl
or
data16
aaa
sti
cmp
aam
data16
pop
xchg
pop
jnp
adc
enter
pop
inc
cmp
lret
aaa
and
mov
sbb
cmp
rorl
stos
xchg
and
or
pop
sbb
cwtl
mov
fisttps
sbb
push
push
jge
or
jnp
gs
int3
add
or
aad
adc
mov
stos
mov
mov
jae
aam
sbb
or
xchg
dec
test
add
pop
or
add
jo
sbb
out
mov
inc
mov
jo
jb
adc
cmp
call
test
sub
xchg
xchg
jmp
jnp
lds
in
pop
dec
sub
adc
pop
and
mov
mov
popf
cmp
lds
fidivrs
or
cmpsl
sub
adc
ffree
emms
dec
gs
mov
adc
mov
divb
add
mov
cwtl
enter
mov
ja
pushf
sarl
mov
sub
xchg
cli
cmc
test
pushf
mov
inc
or
or
and
fistps
out
shl
or
jo
dec
sub
or
push
xchg
mov
sub
xchg
stc
mov
repnz
mov
movsl
mov
mov
pop
lods
cmp
mov
mov
push
es
arpl
push
lea
mov
push
test
js
fcoms
test
inc
mov
push
jl
sbb
adc
adc
pop
push
movsb
jmp
js
flds
leave
cmp
add
arpl
cmp
sub
subb
stc
jb
sbb
xchg
add
jne
dec
or
in
cmpsl
addr16
xchg
push
idivb
outsb
repz
sbbl
jo
ss
mov
xlat
fidivrs
test
fstp
pop
push
fldt
fists
push
incl
fsubs
test
scas
mov
mov
lret
ja
jnp
add
xchg
cltd
mov
cvtps2pd
add
jbe
xchg
pusha
sub
mov
xor
js
cmp
jno
mov
mov
fcomp
mov
pushf
mov
mov
stos
in
in
call
push
xchg
sahf
jno
push
jmp
mov
loope
inc
popf
xor
and
ss
insl
mov
addr16
arpl
and
cmp
fwait
mov
cwtl
loope
push
pop
rcrl
frstor
stc
cmp
push
lret
sbb
cmp
faddp
icebp
pop
adc
scas
sbb
mov
cmp
or
xor
enter
jnp
push
mov
or
out
dec
xlat
cld
into
mov
cpuid
dec
into
incb
cmp
jle
add
mov
cmp
dec
sub
lret
and
inc
xchg
mov
int3
dec
add
cmp
insb
jbe
js
push
inc
xchg
inc
cmpsb
shrb
fs
jb
and
int
bnd
popa
cmp
stos
mov
jnp
mov
std
and
popf
lods
jg
mov
xchg
push
stos
push
aas
adc
xor
adc
cmp
rcrb
loope
inc
xchg
xchg
sub
add
movsb
add
sub
mov
xor
into
nop
lds
or
orl
jecxz
pusha
pop
scas
sbb
fimuls
lds
sbb
std
push
xchg
pushf
mov
jns
mov
fsub
xor
mov
or
sub
mov
mov
jb
jmp
inc
adcb
adc
pop
xchg
out
xor
cs
clc
add
stc
cwtl
xor
icebp
sti
pop
dec
mov
push
sahf
or
and
in
add
test
movsl
in
outsb
bound
popf
inc
in
ret
cmp
mov
xor
and
lret
pop
cmpsb
pop
mov
leave
cwtl
mov
sub
pop
jb
jmp
add
adc
inc
pop
clc
lock
cmp
mov
in
inc
lret
sbbl
fwait
shlb
push
xchg
mov
xchg
adc
ljmp
cmp
lret
faddp
pop
pop
fadds
lock
lds
dec
mov
xor
sbb
std
inc
cmp
sub
push
add
mov
push
push
jns
outsb
inc
pusha
xchg
imul
bound
mov
test
dec
lods
adc
sbb
adc
jmp
out
js
cmpsl
cs
jmp
push
scas
add
push
fisubs
in
adc
shll
mov
mov
popa
jb
add
repnz
lcall
adc
or
pop
xchg
add
mov
pop
sbb
xor
dec
mov
and
pop
inc
cmp
inc
ss
sarb
lock
mov
xor
pushf
inc
mov
xor
push
enter
xor
lds
xor
ljmp
sub
enter
fsubrs
push
jp
add
xor
ja
xor
fdivl
sub
faddp
fst
xchg
idiv
fnstsw
mov
xor
int3
add
lea
jno
ret
or
ret
jle
enter
mov
pop
stos
mov
inc
orb
push
lds
xlat
mov
cmp
scas
cmc
shrb
push
cli
cmp
out
arpl
xor
and
shlb
loope
in
jp
loope
test
out
ss
int3
es
adc
imul
jl
mov
jb
lds
push
pop
mov
test
sbb
and
and
pop
aad
jns
mov
cmp
mov
push
dec
dec
push
cmp
movsb
jb
sbb
pop
mov
mov
inc
mov
adc
inc
and
inc
or
pop
jb
pop
sbb
adc
cmpsb
lret
scas
push
push
loop
pop
cltd
xchg
pop
loope
cmp
dec
stos
inc
xor
mov
es
stc
aad
mov
out
frstor
adc
push
sarb
push
sub
lds
cmp
inc
adc
xchg
in
pop
hlt
jl
sub
out
loope
shrb
ret
sub
xor
dec
xor
pop
out
inc
jecxz
pop
sar
lods
fdivrs
test
xor
fdecstp
dec
mov
jg
mov
dec
adc
jge
fwait
jo
popf
cli
out
sub
mov
icebp
pop
addr16
pop
lods
dec
stos
leave
and
inc
addr16
fidivs
xor
push
pop
out
push
mov
je
pop
fimull
xor
lahf
lds
stos
push
lret
push
ret
int
lock
aaa
adc
movsb
mov
repz
outsb
insl
in
or
mov
ss
jb
dec
dec
clc
cs
sub
jle
jne
dec
repz
aam
inc
out
les
mov
jae
je
loopw
pop
push
cmp
cwtl
mov
out
ljmp
jbe
loopne
mov
jmp
add
fwait
pop
test
mov
popa
lock
call
sub
add
jl
imul
repnz
adc
push
int
outsb
outsl
xor
in
enter
in
inc
inc
sti
mov
push
mov
fs
sub
push
inc
pop
jnp
movsb
jecxz
xorb
pop
pusha
dec
lret
add
pop
loop
fld
push
lods
iret
mov
mov
inc
jmp
jmp
pop
mov
inc
sbb
rolb
enter
lods
push
jns
dec
stc
cli
or
dec
cltd
mov
daa
mov
dec
xchg
stc
lcall
adc
rcll
stos
mov
sahf
in
xchg
xorl
mov
jae
int
inc
sbb
cmp
ret
int
xchg
inc
mov
movsb
std
xorl
ljmp
les
and
sahf
in
and
mov
xor
sbb
and
mov
xchg
xor
adc
ficomps
clc
jle
push
mull
push
jp
push
int
mov
and
mov
cmp
outsb
mov
mov
insb
push
cmp
mov
movsl
pop
test
out
push
and
add
rolb
cmp
mov
call
and
jo
xchg
pop
jge
inc
ljmp
out
push
ret
xor
fildl
push
and
inc
nop
or
cmp
aas
jl
mov
sub
aaa
or
gs
fsubl
ret
arpl
mov
pop
or
pop
push
push
sub
adc
cld
dec
and
repnz
push
push
mov
xor
popa
mov
mov
add
jl
jno
fwait
jge
jne
dec
jnp
jg
ljmp
cmp
pop
cmp
xchg
imul
jbe
cmp
ja
leave
pop
sbb
cmpsl
mov
test
insl
xor
push
sub
sub
mov
fs
jnp
fistl
hlt
shll
mov
das
inc
das
xchg
in
cmp
push
jecxz
out
ret
ljmp
mov
push
inc
add
rclb
cmp
sub
mov
out
ja
fwait
mov
imul
or
dec
xlat
push
popa
lea
aaa
lock
or
mov
outsb
iret
ret
or
imul
and
popa
push
push
and
fmuls
lock
rorl
pop
cwtl
aas
and
aaa
pop
mov
push
mov
jl
cmp
inc
sahf
xor
mov
fcompl
std
mov
sbb
das
aam
das
mov
or
push
fmulp
pop
push
iret
xorb
jbe
mov
cwtl
inc
dec
or
ret
stc
mov
add
pusha
repz
push
sbb
dec
adc
insb
mov
fcompl
or
fisttps
sbb
adc
jbe
cli
inc
xchg
inc
inc
push
lahf
lcall
in
inc
adc
push
push
pop
sub
mov
jp
out
lret
cli
fwait
push
addb
push
jbe
fidivrl
int3
and
dec
inc
pop
xchg
repnz
xchg
lahf
test
pop
jae
xor
mov
jae
dec
aaa
inc
roll
pop
fists
and
add
mov
xchg
mov
leave
and
mov
sub
jecxz
jb
sbb
and
xor
arpl
in
jg
std
jnp
hlt
idivl
pop
repnz
mov
xchg
push
sub
mov
mov
dec
jle
and
push
out
jecxz
sti
lds
mov
in
pop
movsb
push
jne
lret
fsubs
xchg
jge
cmc
inc
lock
lods
fdivrs
dec
cmp
pop
adc
push
mov
cmp
rcrb
bound
sbb
jge
cmp
repnz
ljmp
aaa
repz
push
enter
lds
lock
push
dec
in
lock
test
lds
and
insl
fnstsw
lea
std
cmp
negl
adc
xchg
imulb
leave
xchg
dec
test
adc
adc
fisttpll
cmp
mov
in
or
dec
mov
dec
mov
aaa
or
fstpl
push
push
mov
xor
not
pop
jp
pop
mov
aas
xor
mov
push
fildll
and
fstpt
mov
lods
in
ret
xchg
mov
pushf
jmp
fistpll
adc
and
cmc
imul
push
into
and
add
jle
orl
pop
ret
add
sahf
icebp
dec
sahf
cli
push
test
push
cwtl
insl
dec
push
cltd
and
push
push
jmp
jecxz
rcrl
and
jp
mov
cmp
negb
inc
xchg
push
sub
and
cmc
cmpb
insb
pop
push
mov
iret
sahf
mov
icebp
mov
aam
inc
xchg
push
or
fs
rcrb
clc
push
test
hlt
xchg
in
insl
add
mov
sub
fiaddl
inc
les
push
pop
shlb
xorb
jmp
notb
arpl
int3
mov
mov
pop
sti
xor
mov
cld
je
lds
jae
ret
pop
movsl
push
std
cli
or
xchg
and
xor
mov
dec
sbb
mov
sbb
jo
xor
pop
arpl
cmpsb
xor
xchg
and
xor
mov
repnz
outsl
dec
js
xor
mov
push
xchg
cs
push
xchg
xor
and
call
imul
das
dec
hlt
ljmp
inc
cmp
aam
testb
jne
jmp
push
aam
mov
mov
sbb
ficoms
mov
dec
mov
hlt
push
and
and
jo
jbe
sub
mov
mov
movsb
aas
js
iret
int3
jl
std
mov
xor
mov
cmpsb
data16
xlat
popf
and
inc
enter
das
hlt
push
mov
and
movsl
test
xor
push
rcll
and
outsl
push
mov
inc
in
jae
jnp
lods
and
int
pop
insl
or
cmp
jp
bound
inc
mov
in
sbb
popa
add
in
fs
or
cmp
sub
cmp
stos
repz
mov
push
outsl
cli
mov
int
inc
push
out
mov
jbe
lret
xor
xchg
dec
sub
mov
pop
jno
mov
fsts
pop
cmp
jbe
push
xor
stos
mov
push
inc
call
outsb
pop
or
daa
in
fadds
lods
out
jge
push
mov
jbe
call
sahf
and
and
leave
adc
mov
sbbl
call
je
ja
xchg
subl
int
ds
xchg
roll
xor
imul
test
or
jo
aad
pop
fnstcw
out
cld
in
lods
add
pushf
int3
rclb
into
in
xchg
push
out
dec
xchg
mov
mov
pop
popf
aam
shlb
xlat
leave
xor
je
test
popf
jp
mov
sub
sub
or
mov
jmp
fwait
jno
lret
lock
jno
mov
js
xchg
add
jb
jg
into
sbb
pop
jmp
xchg
pop
js
jmp
adc
pop
not
dec
push
xor
xchg
in
xchg
or
add
pop
adc
jo
or
cmpsb
scas
sbb
cli
mov
clc
cmp
jne
shll
xor
scas
insl
mov
xor
dec
and
rcl
jge
out
orl
xor
divl
fs
adc
repnz
mov
sti
ret
cwtl
inc
hlt
out
loope
mov
adcl
test
outsb
bound
lea
adc
jecxz
scas
cmpsb
push
lret
sub
pop
fwait
rcl
sub
jecxz
mov
xchg
or
andl
repz
sbb
ds
aas
cmp
push
and
push
adc
mov
imul
xchg
sub
push
cltd
bound
inc
pop
xor
pop
sbb
mov
pop
fs
dec
outsb
sub
out
movsb
adc
lret
cmp
call
push
cs
call
push
loopne
adc
popf
mov
outsb
divb
pop
shlb
mov
mov
mov
mov
in
pushf
pop
dec
add
or
cmp
out
fisttps
roll
cs
outsb
dec
fbld
cmp
cmc
jg
pop
jl
push
scas
repnz
push
push
adc
outsl
mov
push
cltd
addr16
or
add
xchg
push
mov
mov
in
sbb
pop
fidivrs
imul
xchg
and
jmp
mov
ret
pop
fs
inc
cmpsb
xor
cld
mov
dec
mov
aaa
les
int
sti
sbb
add
fcmovnu
in
in
scas
lea
mov
jmp
or
jbe
add
push
fisttps
inc
jg
out
ja
cmpsl
cmc
push
out
sub
push
mov
hlt
lea
decb
or
add
popa
sbb
sti
jno
popa
js
dec
jecxz
xchg
cmp
jp
mov
fistpll
outsb
cmp
xor
push
in
loope
mov
and
shlb
aad
and
in
fisubrs
movsb
lret
jmp
add
add
movsl
lds
pop
dec
repnz
push
shll
aaa
pop
in
cltd
mov
xchg
pop
jb
sbb
mov
jae
lods
lcall
add
lcall
ror
mov
jns
adc
sbb
and
ja
js
lret
inc
outsb
insl
outsb
icebp
pop
sbb
add
addb
adc
in
cmpsb
scas
orl
pusha
pop
or
pop
std
adc
and
adc
ja
arpl
xorb
data16
push
les
out
push
mulb
adc
addb
je
mov
shlb
stos
popf
jecxz
or
sub
aam
out
les
repnz
jne
rcrb
in
stos
dec
and
adc
je
repz
cmpsl
clc
add
add
sub
inc
xor
mov
push
popl
in
add
or
daa
add
xchg
loop
dec
pop
sbb
or
mov
in
push
mov
sbb
inc
stos
mov
pop
xchg
sub
pop
movb
jo
xlat
dec
ret
pushf
xor
aas
mov
nop
jbe
outsb
push
pop
stos
mov
mov
xchg
cmp
or
pop
xor
test
pop
jno
sub
popf
lock
mov
sarb
jbe
mov
lahf
out
push
arpl
xor
das
insb
add
gs
sti
push
cmpsb
jp
cld
add
pop
repz
arpl
aad
fwait
mov
sbb
dec
xchg
lds
cs
jecxz
push
adc
sbb
scas
lcall
jb
in
mov
test
xchg
into
stc
sbb
mov
xchg
test
int3
insb
sbb
cmp
lock
inc
out
jle
mov
pop
inc
lds
jo
aaa
mov
out
data16
dec
sub
dec
stos
jbe
ret
inc
sbb
daa
jae
lock
mov
leave
cmc
cli
dec
stos
addr16
and
inc
les
mov
add
sbb
mov
ret
xchg
scas
add
push
sarb
orb
popf
out
xchg
add
cmpsl
es
test
insb
dec
add
xchg
addr16
jno
daa
call
push
ret
dec
nop
jmp
dec
nop
sbb
cmp
mov
lea
mov
cs
or
or
sbb
fstl
xchg
imul
pop
sbb
scas
insb
iret
stos
push
adc
mov
enter
or
js
xlat
push
loopne
xchg
inc
cld
pop
and
inc
cltd
addl
dec
push
jmp
mov
in
imul
loope
mov
aam
jl
push
insl
pop
je
push
dec
cmp
cli
xor
loope
sub
jp
dec
leave
test
and
and
cwtl
test
and
xchg
in
or
pop
jae
push
bound
in
jbe
cwtl
pop
cs
test
adcl
mov
dec
bound
xchg
cmp
pop
and
xchg
leave
and
mov
mov
out
inc
jb
test
filds
test
neg
xor
ja
add
enter
xchg
arpl
cmp
xchg
jne
or
dec
adc
mov
adc
xchg
mov
mov
dec
xchg
icebp
jns
xchg
stos
pop
sbb
adc
pop
cmp
outsl
mov
mov
jp,pn
filds
jge
fiadds
pop
push
repz
or
pop
or
or
sar
jmp
or
in
fs
fiadds
xchg
or
xor
imul
push
xlat
test
aaa
js
call
jno
popa
imulb
or
int
adc
dec
out
push
pop
js
cmp
aad
inc
gs
lcall
pushf
mov
add
mov
sbbb
addr16
sub
sti
xchg
mov
int
outsb
nop
lods
xchg
outsb
js
sbb
sbb
inc
or
inc
test
mov
cltd
repnz
cmc
cmp
mov
repz
shll
or
and
mov
mov
add
je
test
mov
xor
push
mov
sahf
sub
jmp
shl
fnstsw
push
dec
arpl
pop
pop
sbb
call
xchg
jnp
add
pop
and
xchg
imul
fwait
mov
js
push
xchg
inc
push
mov
lahf
or
adc
and
mov
pop
sbb
lret
xor
iret
shll
aam
mov
out
fld
mov
in
push
cmp
cmp
icebp
shrb
call
mov
dec
mov
scas
and
mov
inc
mov
jnp
jge
jns
pop
pop
loope
mull
dec
jg
pop
mov
mov
out
test
decb
adc
push
mov
jg
repnz
add
loop
and
lock
sbb
push
or
inc
pop
jnp
test
loop
gs
in
cmp
mov
ret
dec
sbb
pop
lds
push
jnp
lods
fiaddl
jb
and
or
dec
fcmovb
cmp
mov
xchg
jno
jbe
mov
daa
fsubl
scas
inc
jge
fnstcw
xor
lock
clc
je
jns,pt
nop
xchg
inc
jecxz
pop
cmp
mov
imul
cs
pop
mov
cmpsb
xor
push
cs
clc
jmp
lock
fwait
nop
test
mov
mov
adc
jno
ljmp
rol
fsts
adc
mov
rcll
lahf
adc
cs
inc
aas
fsubr
push
enter
dec
cmp
jns
sub
push
jae
sub
lahf
xchg
and
in
jl
stos
fwait
jns
mov
pop
jp
fdivl
sbbb
jmp
mov
pop
ljmp
adc
xchg
rcr
xor
mov
mov
mov
sbb
popa
sbb
jbe
insl
jnp
dec
pop
in
pop
dec
or
lahf
mov
fnsave
push
in
imul
outsl
scas
add
aaa
arpl
mov
adc
mov
jb
jno
test
shl
pop
push
ljmp
stos
push
push
jns
lods
fsubl
insl
pop
and
jns
rol
cmc
out
ret
adc
pop
stos
xchg
inc
lahf
int
inc
and
test
out
sub
mov
scas
mov
into
rcl
std
in
inc
and
stos
push
in
imul
lds
in
in
mov
jle
sbbb
or
fldenv
cmp
scas
dec
nop
neg
divl
and
pop
mov
sti
push
in
pop
mov
mov
adc
inc
add
in
rcrb
iret
jecxz
stc
pushf
popa
xchg
push
jo
popa
mov
jae
aas
stc
sbb
xchg
adc
inc
idivb
cmpsb
loop
and
sti
out
icebp
incl
in
and
cmpsb
push
adc
jns
pop
push
cmp
nop
insl
ds
pop
mov
aam
sbb
lcall
aam
xchg
jns
call
scas
sahf
imul
jecxz
jnp
out
test
imul
shr
lods
jle
sub
push
jg
cld
and
mov
lret
xchg
popf
push
fisubrs
repnz
cltd
jb
in
ret
and
and
jns
jecxz
adc
ds
jecxz
iret
push
and
mov
rorb
shrl
pop
push
push
cltd
rorb
jns
adc
movsb
add
sub
push
je
mov
jns
mov
pop
clc
push
adc
inc
repnz
lods
and
xchg
and
push
xchg
mov
fdiv
xor
rclb
sub
shll
in
outsl
add
and
test
inc
ss
in
mov
loopne
lods
arpl
inc
into
ljmp
inc
in
pop
stos
pop
xor
retw
pop
arpl
sub
loope
sahf
inc
stos
ret
jns
mov
addb
or
sbb
stos
cmp
nop
pop
xor
movsl
dec
sub
mov
sarb
ljmp
fcompl
push
daa
cmp
mov
mov
fiaddl
daa
hlt
repz
pop
mov
fs
pop
test
jne
rorl
dec
lods
cmp
nop
in
cs
xor
cld
inc
cld
inc
fadd
insl
ror
pop
xchg
cmpsb
lods
outsl
repnz
inc
jg
scas
cwtl
adc
adcl
xor
push
daa
sahf
jo
in
jmp
shrb
or
adc
outsl
inc
sbb
push
jg
bound
shll
mov
cmc
sub
dec
sub
push
and
mov
inc
mov
lret
add
xor
inc
rcl
sub
inc
out
imul
sahf
mov
jg
repz
dec
out
imul
test
cli
pop
nop
xor
pop
dec
jmp
cld
adc
les
mov
cmpsl
repz
testl
pop
xchg
negl
push
xor
dec
cld
in
pop
sarl
aas
loope
repnz
ljmp
push
ss
test
xchg
nop
xchg
mov
cmpsl
jo
add
fstpt
es
jmp
nop
mov
jnp
enter
and
or
mov
es
int3
frstor
movsl
sbb
and
pop
testb
push
adc
scas
das
lret
mov
push
jnp
in
mov
fxam
mov
sub
and
push
fxch
and
dec
xchg
lods
or
ljmp
out
mov
test
pop
in
fs
dec
mov
jo
clc
xchg
insb
sub
mov
mov
cmpsl
jns
mov
or
mov
adc
push
mov
cltd
mov
mov
lahf
insl
pop
mov
data16
push
gs
jg
int
loop
cwtl
cmp
test
incl
fstl
fisubs
add
mov
inc
aas
push
aaa
mov
cmp
push
bound
pop
xor
mov
mov
cmc
inc
lods
xor
fcmovnbe
cmp
mov
mov
test
test
je
sub
xor
xchg
dec
lret
sub
xor
and
add
pop
cmc
sbb
negl
and
gs
pop
cltd
cmp
mov
sarl
movsl
call
lods
dec
add
push
lods
jge
mov
loop
push
mov
fldcw
jge
mov
jno
cmovbe
jl
icebp
aam
or
add
sbb
es
lea
arpl
dec
jbe
pusha
xchg
ror
je
pop
in
push
push
rolb
cmp
jo
or
mov
jnp
mov
fldenv
fwait
js
leave
std
movsb
add
dec
inc
mov
iret
mov
fbld
outsl
pushf
fcoml
fistl
in
or
movsb
scas
rcll
push
ficoml
addr16
cmp
fadds
cmpb
stc
cmc
push
jb
xchg
es
outsl
pop
sub
inc
lds
xchg
loop
scas
aam
sub
pop
and
test
add
loop
repz
sub
cmp
ss
mov
stos
push
and
cltd
jno
push
adc
fwait
jbe
jno
out
aas
outsb
insl
lret
jmp
inc
mov
pushf
adc
mov
clc
fimull
fs
push
cwtl
outsb
cmp
mov
cmp
push
orl
scas
mov
adc
cmp
pop
mov
dec
andl
vmfunc
ret
dec
outsb
pop
rcrl
loopne
popf
mov
mov
les
ss
test
nop
mov
inc
loopne
push
pop
dec
adc
cmovp
imul
fwait
cs
mov
cmp
in
jb
call
xchg
push
mov
std
mov
or
inc
mov
adc
lds
cmp
fbld
ss
cmp
stos
mov
mov
mov
outsl
imul
out
clc
and
out
xchg
cmp
push
mov
and
shlb
js
mov
cmp
mov
cmpsl
push
ljmp
or
fistl
add
dec
test
pop
fsubr
pushf
xchg
out
cli
mov
lahf
add
out
gs
or
sub
xor
mov
arpl
int3
sbb
jno
jg
add
insl
xchg
dec
dec
jbe
ss
pop
enter
jo
std
lods
pop
js
popa
mov
leave
dec
sub
fcom
pop
jbe
adc
test
nop
xor
inc
xor
lods
add
mov
das
div
test
imul
xchg
dec
aaa
pop
cltd
aas
cmc
pop
loop
xlat
adc
cs
lock
sti
das
or
movl
cmc
xchg
testb
mov
packuswb
ret
sub
sbb
out
xorb
and
and
push
jae
mov
adc
shl
sbb
shr
leave
adc
push
or
dec
sar
mov
mov
inc
xor
xchg
push
jle
cli
out
loop
jg
loopne
jnp
push
jb
mov
jge
add
jmp
jno
stc
lds
aad
sti
loop
mov
cli
push
add
movsb
iret
cld
xchg
or
pop
push
and
lods
mov
lea
push
out
xor
add
fwait
adc
sub
addr16
mov
loop
cmp
or
push
xchg
add
mov
jne
insb
xor
lock
aaa
out
ja
shlb
stc
xchg
jno
fsubrp
fisubrl
dec
mov
loopne
js
jp
mov
pop
xchg
testb
mov
and
cwtl
mov
scas
dec
jbe
push
inc
sub
loop
mov
mov
lea
inc
and
add
neg
jno
push
jb
out
das
pop
lsl
mov
add
sub
pop
mov
adc
or
mov
sub
mov
out
inc
mov
inc
push
xchg
stos
mov
scas
je
popa
inc
lock
stos
cld
movsl
xchg
add
stos
and
pop
xor
std
in
mov
jp
and
fsubrs
sub
xchg
mov
sub
inc
popa
jp
add
xlat
pop
pop
in
and
adc
lcall
jbe
sub
xchg
add
add
lret
popa
in
add
mov
and
sbb
jnp
push
mov
or
rolb
fwait
xlat
into
sbb
or
call
pop
int
push
cwtl
fdecstp
push
push
dec
mov
sub
mov
inc
cwtl
mov
mov
cwtl
pop
cli
lock
xchg
pop
pop
sbb
pop
arpl
push
sti
insl
push
clc
movsl
les
push
divb
or
push
pushf
std
not
aad
jbe
adc
lahf
adc
mov
gs
dec
aaa
jo
cld
pushf
and
int
fldl
sub
sbbl
push
sbb
xchg
sub
sub
lods
int3
das
imul
jno
adc
rcrl
adc
mov
push
dec
pop
pop
mov
cmpsl
lret
jl
cmp
xor
sbb
hlt
xor
xchg
push
scas
xlat
das
xlat
negb
cltd
cmp
sbb
or
xor
in
sbbb
push
sub
dec
cmp
xor
fptan
push
pop
dec
fsts
ret
jg
jbe
dec
dec
jle
cmp
stc
data16
cli
jb
cld
cmp
pop
or
or
insb
cli
cmp
dec
pop
mov
adc
mov
lret
je
sub
adc
in
jne
lcall
push
rorl
pop
outsl
mov
sti
in
cmpsl
in
in
push
orb
mov
xor
hlt
leave
movsb
rcrl
out
enter
add
out
and
and
call
rorb
hlt
call
repnz
clc
or
pop
mov
xor
xor
push
and
inc
mov
adc
cmpb
cmp
adc
sbb
rcll
pop
das
repnz
es
push
cmpsb
and
cltd
cwtl
stos
ja
lea
scas
push
mov
jmp
aad
pop
ja
sti
inc
push
or
inc
aad
sub
push
cmp
sahf
mov
jecxz
dec
sub
les
lods
subl
rcrl
mov
std
mov
repz
movsl
test
inc
adc
mov
push
or
daa
std
es
xchg
push
jns
mov
lock
fxch
nop
repnz
stc
and
orl
dec
stc
dec
mov
mov
mov
movsl
inc
adc
inc
add
mov
sbb
adcl
test
nop
adc
jge
xor
leave
mov
mov
imul
xchg
dec
xchg
insb
in
mov
mul
stos
sbb
aad
dec
shrl
jbe
incb
sahf
repz
xor
ss
mov
shlb
cmp
and
or
jl
icebp
fst
push
mov
xor
stc
or
pop
mov
andl
fdiv
adc
aad
in
and
hlt
pop
stos
xor
ret
add
adc
mov
push
push
out
gs
lret
xor
xchg
mov
outsb
mov
mov
adc
pushf
nop
xor
out
js
inc
lods
mov
add
push
sbbl
inc
inc
push
xchg
hlt
or
inc
xchg
cmp
pusha
dec
jg
sti
mov
and
pop
ret
mov
cltd
xchg
inc
mov
mov
daa
es
pop
iret
std
add
sbb
jecxz
mov
lods
cmp
or
rorb
sub
xchg
lahf
out
pushf
sti
stos
mov
xchg
or
cmp
and
data16
rcrl
dec
pop
aaa
jb
in
cld
sub
xchg
scas
dec
fadds
hlt
cld
jecxz
rorb
subl
popa
scas
std
mov
add
xor
in
xchg
or
add
inc
cld
rcrb
xorb
inc
sahf
ret
pop
fiaddl
mov
xor
and
ret
xchg
loopne
sub
mov
sub
adc
jo
test
push
cmp
cmc
push
cmpsl
nop
mov
repnz
fsub
incl
push
daa
jae
xlat
nop
test
pop
jl
cltd
shr
pop
dec
stos
mov
xchg
test
inc
adc
loope
or
icebp
nop
dec
mov
mov
addr16
add
das
outsb
mov
sbb
loop
dec
sti
pusha
mov
adc
pop
add
out
jns
das
rclb
mov
lret
sbb
and
jne
xchg
decb
add
bound
imul
inc
sub
scas
dec
mov
add
into
mov
sbb
mov
popf
ss
lahf
icebp
mov
btr
aas
imul
mov
or
daa
cmp
adc
fwait
or
arpl
and
testl
call
in
sti
ret
aas
xor
jbe
loop
push
lods
jl
inc
fisubl
jecxz
push
dec
dec
lahf
cld
add
out
adc
in
fildll
add
aaa
pushf
stc
jp
roll
cltd
lods
mov
daa
out
leave
leave
inc
pusha
xor
adc
xor
mov
sarb
and
je
sub
cs
repz
mov
iret
pusha
mul
and
adc
jg
cmp
loope
pop
enter
repz
aam
mov
mov
jno
and
add
add
iret
adc
lods
cld
stc
push
imul
dec
fldcw
lea
pop
lret
es
aaa
add
and
lock
jmp
pop
fadd
push
sbb
shrb
loop
test
scas
push
mov
and
out
mov
cmpsl
aad
lret
movsl
jbe
idivl
dec
arpl
mov
and
push
xor
sti
je
arpl
xchg
cltd
jbe
sbb
addb
mov
ljmp
mov
cmpsl
inc
and
cmp
cli
mov
imul
add
mov
and
and
dec
repnz
lods
enter
sbbl
out
cmpl
leave
addr16
dec
add
ds
mov
test
fstpt
cmp
scas
lret
mov
xor
and
mov
pop
ret
pop
daa
add
adc
xor
cmpsb
push
pandn
lret
imull
or
push
push
cmp
jae
cmc
mov
test
jmp
dec
xchg
add
mov
flds
outsb
and
shrb
mov
xchg
adc
dec
lcall
js
test
mov
lret
dec
dec
sub
mov
enter
addr16
movsl
cmp
addb
mov
pusha
add
mov
les
inc
cmp
andl
es
popa
mov
test
inc
lret
fists
adc
jg
pop
dec
cmc
xlat
inc
mov
mov
xchg
xchg
mov
jmp
cmpsb
pop
inc
ret
add
fldcw
fnstsw
inc
mov
jl
lahf
lods
cmp
fmull
ret
scas
xchg
cmc
ficoms
repnz
std
add
out
xor
popf
mov
dec
mov
pop
nop
cmp
cmp
xor
vhaddpd
add
out
scas
out
jecxz
dec
and
out
add
push
xor
jle
iret
lds
sub
and
scas
es
arpl
jp
imul
sub
jl
cmp
sbb
pop
cmpsb
es
jno
std
push
lods
lea
sbb
int3
push
lcall
in
dec
inc
pop
roll
lods
clc
je
pushf
addb
or
hlt
loopne
jmp
lods
add
in
push
pushf
insl
aam
xchg
xor
mov
adc
fcmovnu
sti
xor
xlat
inc
fadd
xchg
push
and
mov
jmp
push
jge
mov
daa
xchg
dec
xchg
in
jne
xchg
std
xor
mov
fistpl
cmc
sbb
sub
enter
pushf
test
cmp
dec
sbb
push
jae
xor
mov
fs
hlt
mov
movsb
cld
mov
mov
bound
inc
jge
mov
add
dec
mov
stos
addr16
pop
xor
dec
idiv
push
aaa
fnstsw
sbb
jge
xchg
rolb
mov
aad
mov
inc
out
icebp
mov
popf
fidivrl
gs
xchg
fs
sub
std
mov
popa
xlat
mov
pop
push
mov
out
xor
cmpsb
jns
adc
sbb
lea
lods
add
dec
lret
test
cmp
fisttpl
cmp
sbb
mov
inc
push
pop
cwtl
dec
mov
clc
jmp
or
popf
inc
add
stos
add
dec
cmp
inc
scas
shl
or
cwtl
mov
or
rolb
cld
cmp
nop
pop
cmp
das
mov
addb
aam
mov
ret
rcr
aad
xchg
cmp
inc
movsb
jo
jge
add
sbb
lcall
sub
int3
jae
enter
test
dec
testb
jnp
mov
lods
jge
scas
jle
adcl
outsl
add
popf
sub
aaa
fsts
push
jmp
repnz
data16
scas
adc
popa
sub
mull
add
or
jb
xchg
push
subl
jno
shl
dec
push
adc
pusha
xchg
leave
mov
js
add
mov
xchg
push
push
rcrb
aas
lahf
dec
or
out
push
scas
je
test
iret
push
mov
cs
inc
in
push
jmp
imul
jnp
into
out
out
mov
adc
mov
inc
and
movsl
dec
test
mov
mov
pop
call
stc
ret
mov
aaa
and
imul
add
and
fsubr
cmpsb
movsl
in
or
or
dec
int
adc
repnz
out
je
jo
push
shll
movsb
ret
pop
imul
mov
insl
aaa
in
lock
imul
jae
addr16
inc
inc
adcb
dec
jo
lret
mov
jno
std
enter
imul
lds
aam
iret
ja
iret
dec
loopne
filds
xor
mov
jle
fimull
rep
ja
inc
repz
int3
jo
jns
aaa
jmp
call
sub
mov
jl
add
and
decl
scas
out
mov
cmpsl
add
daa
clc
jecxz
pop
mov
rcrl
iret
xchg
shll
inc
push
leave
xchg
mov
bnd
mov
imull
mov
adc
and
imul
xchg
adc
sarl
inc
and
pop
xchg
sbb
sbb
bound
cmpsl
add
fwait
aaa
cli
adc
or
xor
jle
mov
push
push
fbstp
test
movb
loopne
dec
imul
jnp
cbtw
lcall
aaa
inc
push
and
sub
dec
adc
fimull
xor
int
xor
stos
jbe
jbe
cmc
addb
fisttpll
xor
sbb
xchg
test
cli
or
jo
jb
jnp
sbbb
mov
mov
xchg
in
mov
shlb
cmp
xchg
sti
arpl
jb
sbb
pop
shr
mov
inc
stos
out
iret
cmp
mov
xor
dec
mov
cmp
test
adc
idivb
mov
mov
jle
add
in
jmp
jo
orl
mov
or
test
adc
jne
dec
imul
mov
mov
mov
push
pusha
cmp
mov
insl
je
sub
mov
push
loop
dec
sub
leave
in
insl
inc
push
push
mov
inc
inc
adc
xchg
arpl
xchg
fistl
cs
push
push
dec
jno
fs
push
mov
fisubl
add
xor
xchg
stos
mov
clc
ss
loope
dec
xchg
imul
ja
js
scas
mov
lds
clc
inc
roll
xor
inc
adc
jp
roll
and
repz
sub
std
or
int
insl
lret
popa
rcl
in
int3
jg
push
sub
shrl
arpl
stos
inc
add
cs
ficoms
sbb
pminsw
mov
xchg
push
pop
call
fsubr
ja
scas
pop
sti
into
sti
and
pushf
add
pop
sbb
loopne
xor
es
popa
adc
xchg
scas
jecxz
mov
es
mov
sahf
sar
pop
mov
dec
sti
and
lds
pop
lcall
cmpsb
sbb
arpl
aaa
jge
mov
lret
jne
xchg
sbb
cs
push
and
adc
rorb
mov
cmp
stos
adc
dec
lea
loopne
inc
inc
or
add
stos
jp
jmp
add
xchg
jns
lret
or
movzwl
mov
cmpsl
xchg
shlb
in
sar
jmp
leave
mov
push
mov
mov
dec
lds
int
mov
inc
outsl
nop
hlt
xor
mov
pop
lock
dec
inc
shrl
jp
sub
xor
data16
mov
sbb
flds
jae
lods
sti
inc
push
lods
inc
jo
lahf
xchg
jle
xchg
add
in
add
sbb
sub
pop
cmp
inc
adc
add
add
clc
stos
mov
xor
xchg
daa
xor
adc
adcl
adc
inc
fdivrs
add
lret
cs
jno
mov
cmp
pop
pop
test
enter
pusha
mov
inc
mov
outsb
adc
fidivrs
add
jns
fwait
or
push
dec
pop
shrb
mov
sarl
mov
sahf
inc
das
lods
xor
or
ficoml
cmp
ret
pop
xchg
je
and
cmp
into
or
cmp
jp
mov
mov
fnsave
ret
fnstcw
xor
dec
push
in
push
push
hlt
xor
xlat
decl
lahf
loope
sbb
into
sub
mov
gs
lock
lock
imul
pop
add
and
repnz
cs
mov
adc
popf
push
push
fwait
mov
push
pop
dec
js
fs
pop
mov
add
lret
push
sub
xchg
les
jne
scas
popf
dec
test
jmp
ret
andb
andl
imul
aam
jne
sar
scas
icebp
ljmp
xchg
mov
int
mov
or
test
mov
xchg
cmp
push
xchg
mov
aas
cld
xchg
push
inc
jmp
clc
mov
pop
and
psubusb
mov
movsl
in
out
and
ret
pop
or
faddl
jl
jl
decl
xlat
cmp
data16
jmp
xor
stc
adc
and
adc
xchg
pop
mov
leave
in
scas
lcall
out
stos
push
mov
sub
xor
add
push
loopne
cmpsb
rcrl
jge
ljmp
lods
lock
push
push
std
repz
mov
aas
lret
and
or
and
push
inc
cli
jae
lret
pop
lret
outsb
sbb
ror
push
cmc
cld
or
sahf
aaa
inc
xor
mov
push
in
jo
jle
push
lcall
out
int3
fucomip
icebp
mov
stos
mov
lds
mov
ja
pop
enter
out
mov
pop
gs
inc
test
das
mov
aam
mov
jge
in
test
add
mov
fs
sbb
pop
ret
mov
jnp
mov
adc
and
sub
inc
mov
fwait
cmp
mov
mov
rolb
pop
mov
and
in
lods
jne
mov
arpl
inc
cmp
insl
out
dec
mov
xor
push
loope
mov
bound
shll
cmp
sub
in
stc
iret
adc
or
sub
lds
out
lcall
scas
ss
test
sbb
jp
fs
jb
insl
inc
sbb
mov
cli
lods
pop
mov
mov
cwtl
jecxz
aam
nop
inc
sbb
xchg
lea
shld
mov
rcll
sub
sti
out
fwait
out
or
rcll
mov
xchg
stos
sbb
push
lods
aad
xchg
fistpl
jb
pop
sbb
orb
out
in
imul
push
push
xchg
cmp
mov
jle
fsubs
call
cltd
jnp
add
adc
std
fnstsw
ds
pushl
lock
fimuls
lds
dec
xchg
inc
mov
fsubl
ja
cmp
or
repnz
dec
mov
add
jb
pushl
cmpsl
inc
push
adc
clc
dec
mov
cmpsb
cmp
mov
inc
pop
shl
aas
ret
imul
push
clc
xchg
pop
loopne
aad
outsb
cli
or
ljmp
jb
mov
sbb
daa
mov
adc
jl
rolb
push
and
jmp
test
jae
imul
fwait
dec
xor
push
xor
lds
rcrb
bound
movsb
jbe
sbb
mov
cmp
pop
aad
aad
sahf
push
roll
mov
iret
mov
sarb
sub
xchg
jp
push
jnp
cmc
sbb
mov
cmp
adc
inc
stos
imul
dec
xor
sub
shlb
div
adc
pushf
mov
jnp
push
xchg
cmp
cli
inc
and
les
test
cmp
iret
cmc
dec
icebp
ds
mov
mov
adc
negl
push
cmp
scas
sbb
addr16
sub
les
ljmp
push
dec
lea
sub
sub
push
imul
call
xchg
xchg
nop
jo
sbbl
popw
nop
push
in
pop
xchg
aad
hlt
mov
push
roll
sub
scas
jmp
cmp
loopne
and
cmp
xchg
cmp
xor
mov
and
das
jne
sbb
in
cmp
or
mov
shll
inc
fwait
xchg
sub
fimull
xchg
lods
out
jle
lods
cmpsb
and
out
popf
xchg
clc
pop
push
mov
movsl
in
andb
xor
push
sahf
cmp
aas
mov
xchg
gs
cmp
mov
loope
rolb
xchg
pop
push
inc
add
mov
call
or
push
lods
xorl
jae
add
push
fwait
fs
push
mov
cmp
aam
fmull
pop
pusha
aaa
loopne
mov
push
std
mov
cmc
mov
aas
fidivl
jle
push
fcoml
or
cmc
sarl
testl
ja
or
incb
pop
and
xor
sbb
xorl
mov
lock
lcall
add
decl
jle
push
xor
rsm
mov
xchg
lcall
icebp
ds
lcall
in
sub
cli
jb
icebp
pop
shlb
es
and
jg
data16
xchg
in
adc
jg
mov
dec
sub
aaa
mov
mov
lret
mov
pop
jbe
aas
in
imul
dec
aam
adc
jbe
mov
out
dec
inc
bound
std
dec
add
leave
js
and
mov
sub
jne
decb
add
push
stc
push
fistps
mov
jp
jecxz
lods
sub
sbb
insb
pusha
sti
jl
cmp
mov
mov
sbb
mov
adc
iret
mov
xchg
dec
in
mov
sub
scas
rolb
dec
xor
and
gs
into
call
lods
call
xchg
pop
push
or
jl
ret
test
jno
lret
fadds
loope
sbb
loop
adc
inc
movl
mov
icebp
add
fists
mov
das
icebp
or
xor
cmp
inc
testl
xchg
mov
insb
dec
pop
imul
push
iret
ja
mov
jle
cwtl
std
pop
imul
xor
gs
mov
fidivl
cmpb
mov
ss
cmpb
sub
out
cmp
aas
jae
xchg
mov
and
adc
xor
sub
jp
mov
jecxz
in
fsubr
in
int
sbb
jae
out
int3
inc
cmp
outsb
jns
jge
inc
cmp
les
gs
push
daa
in
dec
mov
int
je
mov
push
mov
dec
cmp
lea
cmp
mov
loope
add
push
movsl
icebp
je
movsb
dec
insl
pop
cltd
leave
scas
sub
inc
sti
mov
roll
push
and
add
ja
lahf
popa
lods
btr
xchg
or
mov
sub
imull
cld
pop
mov
ljmp
loopne
stos
decl
sub
inc
mov
into
rcrl
pop
js
push
push
jg
sbb
js,pt
popa
out
fidivl
data16
fistpl
popa
das
in
outsl
sbb
fbstp
dec
int3
sub
fnstcw
fsub
testb
popf
pop
testl
outsb
arpl
pop
in
dec
inc
pop
add
mov
repz
adc
dec
dec
mov
shlb
xlat
leave
outsb
xchg
jge
movsl
add
jge
and
sbb
jge
mov
mov
lahf
out
lea
jmp
mov
and
sub
jne
shl
lods
push
mov
lret
loop
xchg
adcb
or
int3
iret
cmpsl
xorb
popf
sahf
ds
lcall
roll
test
cmp
in
lock
jne
jnp
sbb
adc
popf
clc
fucom
push
mov
jo
or
ljmp
push
push
in
lea
adc
xor
div
jnp
cmp
mov
or
mov
loop
ljmp
ljmp
fimuls
or
out
push
mov
mov
loop
lds
out
mov
xchg
adc
movsl
call
mov
mov
mov
jg
add
add
jmp
das
adc
or
sahf
movsl
jne
sbb
xchg
xchg
jmp
jns
xchg
mov
shll
xchg
cltd
cs
lds
jge
mov
int
mov
push
and
fwait
mov
pop
pushf
loope
rcl
mov
enter
cmp
jge
jae
repz
cltd
jmp
inc
jg
fs
lods
fnstcw
pushf
mov
sub
push
sbb
jle
xchg
mov
dec
leave
jmp
xchg
jnp
sbbl
sub
ljmp
outsb
mov
fsubr
jns
mov
nop
mov
sahf
add
loop
inc
push
cltd
dec
out
ljmp
aad
iret
bound
dec
pop
dec
add
bound
lret
and
inc
scas
pop
dec
and
fdivs
rorl
fisubrs
adc
dec
dec
mulb
dec
xor
dec
dec
mov
addb
dec
repz
popf
push
gs
mov
inc
adc
mov
scas
mov
pop
xor
push
push
sub
aas
add
in
and
fsubrl
dec
out
push
mov
sub
jecxz
pushf
dec
xchg
cltd
jle
xchg
jecxz
mov
push
inc
mov
addr16
jnp
test
rcrl
ret
mov
leave
dec
and
push
and
add
mov
insl
fs
test
and
jno,pn
push
inc
ljmp
shlb
sub
fidivs
sarl
aas
idiv
mov
jbe
sbb
cmp
imul
sub
das
test
xchg
add
jb
test
xchg
test
mov
xlat
push
mov
mov
xchg
lea
sbb
test
in
lods
inc
pop
cmp
shlb
xor
sar
cwtl
or
dec
jnp
jmp
xor
or
test
sbbb
cmp
jl
pop
out
push
data16
out
adc
sub
stc
pop
sbb
icebp
sub
jb
xor
daa
fdivrl
jp
push
pop
fistpll
leave
inc
popa
dec
add
in
orl
sub
scas
stos
int3
dec
into
mov
imul
fisubrl
pop
push
movsl
adc
jl
out
iret
xor
xchg
ljmp
lds
and
js
in
mov
sti
mov
and
xor
cmp
fiadds
jle
out
roll
insl
inc
mov
lret
cmpsb
ret
inc
xchg
cmp
jmp
push
lahf
movsl
adc
pusha
shll
xchg
iret
pop
cli
jp
dec
add
bndstx
adc
fstpt
pop
jae
into
in
lds
jecxz
nop
outsl
inc
cmp
mov
pop
add
mov
jp
mov
push
cmpsl
push
fwait
and
mov
jp
call
and
dec
and
cmp
lahf
rcrl
xchg
inc
cltd
cli
fucomp
push
or
xchg
add
repz
cltd
inc
mov
jo
notb
jae
mov
es
shlb
mov
and
stos
xchg
dec
mov
xor
xor
xchg
clc
stos
repz
pusha
mov
and
sub
xchg
in
cmpsl
lahf
enter
or
aam
ds
sbb
hlt
mov
imul
adc
push
xchg
or
test
xchg
mov
arpl
dec
aaa
xchg
adc
dec
sbb
in
or
and
and
daa
pop
pop
lret
mov
cmp
xchg
add
or
mov
mov
sbb
add
jl
dec
test
jnp
addr16
xor
int3
xor
scas
notb
xor
idivl
add
fwait
imul
je
repnz
pop
mov
jp
shll
adc
stos
aas
jge
leave
repnz
ret
push
aad
js
jecxz
cmp
int3
lahf
shl
adc
icebp
and
dec
lods
pushf
fistpl
mov
inc
and
outsw
test
jp
sub
lea
enter
mov
and
push
rclb
mov
xchg
mov
jecxz
mov
add
mov
in
cs
div
dec
push
fstps
nop
cld
test
in
adc
inc
fwait
mov
or
sub
mov
jge
mov
mov
mov
lods
mov
xor
jge
dec
xchg
inc
fnstenv
add
icebp
jae
jl
ja
clc
js
cltd
out
mov
pushl
testl
testl
inc
adc
jle
adc
push
pop
sbb
in
inc
fmuls
push
ret
inc
cmp
arpl
loope
sarb
jmp
test
dec
insl
data16
aad
gs
int3
push
push
and
mov
adcb
mov
jmp
add
xor
jge
push
testl
pop
mov
push
mov
and
xor
sbb
mov
out
andb
pop
pusha
mov
ret
imul
and
cmp
jns
addr16
mov
daa
scas
sbb
stos
lcall
mov
adc
nop
lret
xchg
sarl
inc
pushl
jne
ss
scas
repnz
xor
scas
inc
inc
or
push
xchg
xorb
cmc
es
js
inc
inc
fisttpll
jbe
fstl
cmc
mov
hlt
stc
rcrb
or
cmp
add
fisubrl
dec
xchg
push
cmp
sub
das
sub
adc
fisubrl
xor
pop
fscale
das
shlb
icebp
add
mov
es
movsb
jle
imul
adc
mov
stos
and
dec
xor
sub
mov
adc
sub
rorb
or
subl
cmp
add
in
fidivl
ret
pop
adc
rorl
popa
jle
xor
stc
and
mov
fs
iret
or
or
inc
out
stos
hlt
push
xchg
std
outsb
dec
jno
inc
xor
mov
xchg
fiadds
insb
scas
es
adc
cmp
xchg
nop
push
cli
andb
data16
xor
ljmp
adc
dec
pop
dec
lret
lcall
sub
mov
cmpsb
sahf
inc
add
andb
or
ds
inc
push
xorb
cmpsb
std
mov
scas
iret
fimull
movsb
xchg
jb
cld
int3
jno
lret
cmp
movsl
mov
xchg
test
aad
mov
scas
sbb
dec
fimuls
adc
inc
inc
mov
xchg
and
mov
andb
stos
xchg
xchg
cmp
pop
push
testb
mul
lods
pushf
mov
dec
rorl
loop
test
shll
xor
aam
inc
lcall
pop
mov
lock
repnz
sub
lret
scas
add
insb
outsl
cmp
aad
or
push
movsl
add
mov
or
out
xor
daa
xor
lahf
stos
sahf
and
sti
les
mov
mov
js
push
fnstcw
push
sub
insl
lahf
fcomi
js
dec
adc
cmc
inc
into
mov
jl
push
pop
cmp
and
sub
test
xchg
adc
ret
cmp
dec
iret
jl
out
fdivl
adc
pop
push
movsb
push
mov
and
mov
xor
cmc
movsb
dec
and
add
les
mov
push
lock
xchg
in
popa
pusha
imul
mov
dec
mov
sub
push
mov
adc
outsl
xor
call
test
cmp
xchg
je
jl
ror
inc
aaa
dec
cmp
sub
xor
leave
sahf
inc
mov
jl
into
aam
inc
popa
int
add
lahf
push
outsb
cmpb
jl
xchg
in
ljmp
push
cmp
icebp
sub
push
rolb
pop
popf
xor
sub
rorb
xor
and
mov
test
nop
push
lcall
adc
sti
sub
mov
xor
add
int
pop
add
scas
loopne
nop
nop
roll
mov
sbb
push
call
cmp
das
in
rorl
incl
fsubs
lock
jp
out
add
ja
std
pop
in
aas
js
add
adc
push
jp
push
sarb
into
insl
sub
clc
mov
aad
xchg
test
mov
mov
jg
addr16
jb
movl
push
sub
dec
clc
sti
fists
xor
cmpsl
rclb
jmp
cli
stc
mov
imul
xchg
in
rcrb
mov
mov
dec
mov
mov
shrl
sarb
rcrb
xor
push
pusha
push
inc
dec
jmp
arpl
pop
lret
inc
inc
rcr
ret
cmp
lds
mov
ja
jns
lcall
cmp
mov
cwtl
in
mov
add
lret
je
cs
in
daa
xchg
mov
in
lcall
fdivl
xor
dec
repz
sahf
and
dec
sub
inc
das
test
push
and
mov
xor
sub
imul
dec
mov
sti
cltd
out
pop
test
mov
cs
int
xchg
lcall
imul
mov
int3
jle
test
mov
es
cmp
dec
push
fiaddl
lock
sti
lea
das
xchg
add
das
lcall
fnstenv
add
push
ret
int3
rorl
pop
loopne
fsubl
mov
cmp
lods
loop
xlat
into
aas
addr16
sbb
add
clc
sti
or
adc
jg
mov
push
lods
pop
inc
daa
ja
fcoml
test
mov
xor
push
das
mov
xchg
adc
xchg
js
add
insb
xchg
addl
or
or
pop
fistps
cli
jmp
mov
jge
out
lret
out
test
cmp
pop
xchg
scas
test
and
jge
add
mov
pop
in
xchg
out
test
push
xchg
lcall
pusha
movsb
fs
bt
arpl
je
mov
nop
fimuls
hlt
testl
ret
inc
loope
add
dec
loop
mov
add
mov
outsb
jbe
add
gs
dec
aam
xor
mov
push
xchg
rclb
scas
push
push
shl
in
dec
mov
push
iret
icebp
test
inc
pop
push
cmp
movsl
in
sub
ds
mov
xorl
ret
jmp
iret
insl
mov
dec
ss
ds
dec
imul
outsb
add
inc
cmp
out
inc
fmul
adc
out
outsl
mov
mov
js
fisttps
mov
pusha
scas
in
rorl
dec
cmp
add
pop
sub
pusha
repnz
insb
jno
jg
repz
push
mov
sbb
pop
outsl
adc
hlt
xchg
and
push
rcr
jge
test
mov
je
jne
pop
xchg
addr16
inc
cmpsl
lahf
aad
or
xor
dec
call
push
push
xor
xchg
cmp
ret
pop
sbb
sti
lds
xchg
outsl
popl
sbb
mov
xor
inc
xchg
inc
jae
cmp
mov
lods
imul
push
outsb
pop
imul
pop
call
fcomps
mov
dec
sbb
pop
imull
mov
pushf
xor
inc
sar
mov
jmp
or
call
cwtl
dec
cmp
push
int
jo
shrb
ficoms
out
mov
test
scas
faddl
gs
push
cltd
cmp
adc
call
rcr
cmp
dec
sbb
sub
shl
hlt
jg
push
popf
xor
sub
xor
cmc
shlb
mov
ljmp
mov
pop
cwtl
out
dec
es
bound
mov
int
gs
mov
mov
push
insb
mov
repz
dec
xor
fnstcw
add
mov
bound
cmpsl
out
push
aam
or
jl
jne
push
jp
sarb
pop
movsb
shrb
xchg
pop
push
jnp
cmc
sub
jle
insb
out
xchg
xchg
mov
sbb
aas
scas
push
dec
jne
mov
loope
xchg
and
shl
mov
lret
xchg
sub
mov
je
inc
inc
call
add
push
pop
outsb
mov
xor
jns
mov
mov
enter
cmpsb
je
add
test
mov
mov
mov
push
stc
das
add
pop
lret
adc
pushf
mov
fwait
xchg
cmp
cwtl
cmp
sub
andb
insb
inc
cmp
ljmp
repz
mov
add
sbb
xchg
jmp
fwait
lods
test
push
sub
daa
mov
xor
push
aaa
stos
aas
fdivr
push
mov
vmaxps
roll
jnp
into
je
les
lea
rolb
scas
ja
jge
insb
jbe
das
mov
ss
jmp
sub
jno
stc
dec
call
stos
cmp
or
push
jle
lea
xor
add
lcall
std
aaa
pusha
push
sub
cs
pop
movsb
adc
mov
adcl
cmp
push
adc
psubq
movsl
dec
pushf
cltd
xor
lcall
test
lock
hlt
pop
cmc
scas
adc
nop
or
das
xor
test
pop
ficoml
jl
jge
out
pop
and
adc
cmc
jl
adc
stc
lods
cmp
je
dec
sbb
jecxz
fs
dec
orl
add
inc
fidivs
shll
adc
dec
dec
mov
fnsave
push
dec
cmp
mov
fildl
and
inc
sbb
xor
sbb
sbb
shrb
in
mov
enter
push
mov
jmp
pop
cmc
nop
mov
incl
arpl
jnp
lock
pop
add
fs
and
out
and
int
int3
les
mov
pop
sbb
sub
pop
pop
cmp
jle
cmp
mov
jmp
adc
adc
repz
cmpsl
inc
mov
lret
stos
leave
mov
add
xor
cmp
pop
imul
je
fldl
push
imul
push
fisttpl
mov
add
arpl
mov
mov
dec
push
or
pop
adc
mov
lcall
xchg
idiv
dec
aas
dec
pushf
jg
inc
xor
xlat
and
xlat
icebp
out
popa
int3
dec
jl
adc
stos
ficompl
cld
fildl
aad
scas
mov
or
imul
sub
jo
sub
ds
pusha
pop
loope
lods
push
jb
dec
mov
and
sub
rolb
cmp
sarl
rorb
dec
pop
cli
xchg
leave
or
fucomi
push
mov
cld
lods
push
or
cmp
pop
push
xchg
mov
cmp
lcall
jae
cmp
xchg
mov
or
clc
dec
mov
fdivrs
cltd
iret
imul
pop
or
stos
lock
mov
rep
lret
lcall
cmp
repz
ja
adc
push
lret
add
sbb
fistpll
test
or
xor
adcb
add
dec
mov
cmp
dec
mov
fwait
jnp
test
out
sahf
cld
or
and
mov
mov
mov
push
in
dec
sahf
leave
outsl
hlt
add
xchg
in
imul
out
lahf
xchg
jle
sahf
xchg
cwtl
and
lret
inc
les
bound
xor
or
xchg
mov
push
fcom
hlt
xchg
jbe
sub
int
add
mov
sahf
leave
cs
ret
mov
ror
aad
std
mov
mov
in
pop
xchg
add
add
adc
pusha
inc
pop
and
bound
jecxz
lret
cmp
pop
lea
sti
sub
in
pop
adc
push
lretw
popa
mov
jnp
or
jbe
mov
jns
adc
std
mov
sbb
sti
lods
jg
mov
data16
in
out
lcall
sysexit
stos
sbb
daa
pop
iret
push
cwtd
xor
mov
divb
shl
aaa
scas
cmpsb
orb
stc
or
and
hlt
lahf
aas
bound
loopne
enter
cmp
push
push
in
aas
xor
fsub
push
test
jmp
push
add
sub
sbb
testb
dec
addb
lahf
or
aas
loopne
sbb
push
mov
sub
bswap
sub
mov
out
sub
inc
cmp
jl
or
sub
xchg
inc
test
sahf
cld
xchg
mov
icebp
inc
imul
sub
into
ret
scas
lret
xor
jp
push
xor
pop
sbb
dec
notl
shlb
inc
lock
sub
arpl
fidivl
lret
push
lods
add
xchg
or
std
rcrb
adc
inc
pop
add
lret
adc
clc
ds
int3
imulb
mov
dec
pushl
cmp
cmp
sbb
sbb
inc
jae
jno
stc
sbb
popf
mov
call
cmpsl
ss
out
push
mov
push
test
push
mov
pop
jnp
lods
and
push
xchg
scas
mov
pop
icebp
sub
ja
pop
out
in
clc
sub
shll
and
mov
imul
sub
push
xor
mov
test
push
fdivs
pop
fcomi
test
ficomps
push
and
xchg
push
cli
inc
aaa
iret
nop
es
or
adc
lret
outsb
addr16
xor
aad
pop
call
adc
xor
jb
jnp
sbb
push
pop
loope
popa
sub
sub
push
fisubs
sub
sbb
sti
fstpl
rol
fs
sub
mov
cli
lds
cmc
push
das
xchg
leave
pshufw
adc
mov
and
dec
mov
add
test
jns
inc
dec
push
repnz
test
lahf
cwtl
rcrl
push
inc
push
stos
addl
retw
inc
aam
cmc
enter
fbstp
frstor
fs
jl
addr16
adc
push
inc
push
fstpt
fwait
xchg
cmpsl
dec
call
out
imul
pop
cmp
jmp
pop
push
or
inc
xor
fwait
jno
mov
sub
jmp
lahf
push
mov
inc
loope
cmc
or
mov
inc
lods
jmp
mov
stc
inc
sahf
rorl
es
aaa
adc
std
sbb
jge
movsb
fistl
inc
fstl
add
sarl
pop
cmp
add
jb
loope
mov
jno
adc
adc
add
int3
data16
jge
push
mov
out
imulb
dec
lret
pop
inc
sub
mov
iret
jae
mov
xor
hlt
in
rorl
push
dec
out
int
dec
push
mov
shlb
cmpsl
bound
adc
addl
insb
mov
or
negb
add
mov
dec
xor
mov
inc
xchg
push
pop
xorl
xor
adc
aam
or
jbe
fisubrs
popf
movsb
push
add
js
mov
sub
loop
add
adc
out
sbb
int
fstpl
pop
ss
pop
repnz
cmovle
dec
sub
jge
aas
das
adc
mov
repz
and
testb
fucomp
in
push
mov
push
shll
push
outsl
mov
xchg
and
dec
mov
dec
push
cwtl
mov
cmp
data16
pop
jg
jge
xchg
imul
and
dec
add
push
xchg
enter
xlat
loope
pop
std
mov
cmc
inc
sbb
mov
pop
jp
or
mov
cmc
xchg
enter
inc
arpl
xor
ds
ret
push
ret
cmpsb
sbbb
jne
in
cmpsl
sbb
cld
jnp
cmp
cwtl
jmp
push
cmpsb
shr
pushf
sbb
bound
inc
and
and
je
sub
xor
fs
push
data16
inc
movsb
lods
sahf
notb
and
lods
add
sar
mov
or
xor
clc
push
clc
in
or
in
adc
add
xchg
fcmovu
andb
sbb
push
jne
adc
xor
sbb
push
dec
pop
scas
in
push
adc
inc
adc
push
lods
test
add
and
adc
fscale
fsubrl
xor
adc
mov
push
jecxz
popa
sbb
ret
xor
repnz
test
push
cmovno
mov
test
ds
insl
adc
ret
push
ds
leave
and
cltd
lret
add
int3
insl
stc
mov
in
int
sbbl
mov
std
dec
or
or
fimull
imul
jp
and
fidivrs
mov
sbb
mov
fwait
and
aam
mov
in
movsb
call
data16
push
enter
outsb
stc
sbb
cs
or
fistps
mov
rolb
jns
stc
xor
jo
and
dec
lret
and
xor
aam
cwtl
xorl
mov
fisubs
inc
int
mov
xchg
insb
xchg
adc
imul
jnp
hlt
sub
mov
dec
xchg
mov
out
loopne
jge
pop
lds
gs
adc
push
sbb
lcall
inc
pop
enter
sbb
and
pop
cmp
dec
sahf
aas
dec
cmpsb
xor
adc
pop
popa
mov
lds
mov
leave
mov
add
das
cltd
add
stos
xchg
xchg
push
sbb
imul
lret
aad
mov
hlt
mov
adc
movsb
outsb
popf
pop
xchg
int
idiv
out
sub
xor
push
mov
sub
inc
test
aad
aaa
cmp
imul
ret
mov
pop
or
inc
jle
pop
dec
dec
and
and
daa
es
aaa
test
or
mov
lods
out
inc
mov
fldcw
ss
push
and
daa
sub
mov
push
mov
shlb
pop
sahf
pop
das
jp
jns
ss
scas
mov
or
mov
fisubrl
sbb
imull
test
jae
mov
jns
lock
in
outsb
lea
addl
adc
xor
scas
fdivrl
sbb
iret
xlat
push
add
je
dec
dec
cmp
movsl
lret
mov
sbb
lods
cmpsb
mov
xchg
ja
sub
std
pop
stc
push
fs
cltd
jns
mov
add
lock
ss
addr16
mov
add
pop
jmp
inc
test
stos
jnp
inc
adc
sbb
pop
push
cmp
inc
push
int3
add
or
popl
xchg
enter
pop
mov
inc
js
pop
lock
lret
add
repnz
inc
xchg
imul
mov
xchg
pop
dec
pop
dec
mov
pop
jb
pop
sub
sub
fbstp
or
xchg
iret
or
sub
testb
pop
inc
adcl
aas
add
fldcw
push
mov
xorb
or
mov
xlat
arpl
and
and
les
shll
add
outsb
cmp
mov
mov
sbb
not
les
pop
pop
sbb
cld
dec
sbb
cmp
lahf
jp
mov
fdivr
push
lcall
mov
jnp
and
mov
mov
in
pushf
fisttpl
cmc
jp
dec
ja
mov
add
mov
push
add
scas
mov
and
fiadds
inc
imul
push
repz
fwait
imul
add
pusha
add
out
jmp
rol
xchg
add
pop
jbe
inc
jmp
dec
add
adc
outsb
lea
outsl
jne
lods
mov
sbb
cmp
and
sbb
mov
sub
rcll
add
fwait
adc
xor
xor
icebp
insl
dec
gs
mov
aad
add
ret
stc
test
or
dec
dec
jg
fdivrs
aad
cs
pop
mov
xchg
sbb
out
cmp
pop
test
xchg
nopl
sub
fsubs
xchg
clc
jno
shl
jmp
inc
idiv
add
jns
jmp
popa
clc
repnz
scas
xorb
xchg
sub
push
add
add
int3
pushf
xchg
dec
aas
fwait
ret
mov
pop
popf
push
xorl
sbb
inc
fldenv
push
stos
fs
jecxz
insb
js
xchg
and
gs
nop
shlb
aam
insb
push
daa
flds
xchg
jo
sub
daa
ret
mulb
mov
push
popf
push
out
fistl
int3
or
cmpsb
mov
dec
repnz
daa
dec
outsb
clc
cmc
inc
mov
shll
lock
test
inc
lahf
fs
xchg
sub
mov
arpl
jae
jne
jne
out
cmp
lret
sarl
orl
pop
sub
divb
mov
inc
cmp
gs
lret
push
add
xchg
lcall
arpl
xor
rcrl
mov
mov
push
xchg
cltd
xchg
sub
sbb
inc
call
fistps
pushf
pop
xor
xor
clc
or
mov
mov
adc
enter
jns
dec
lcall
es
into
sub
jne
mov
jb
sbb
out
cli
repz
pop
lcall
into
mov
sub
lret
mov
mov
and
cmp
add
adc
lock
cmpsl
jle,pt
pushf
xor
push
ja
dec
or
mov
or
mov
push
xor
pop
mov
inc
xchg
add
cs
adc
dec
int3
out
mov
cmp
cwtl
bound
inc
out
mov
xor
loopne
shll
cli
mov
mov
sub
adc
mov
xchg
adc
aad
popf
sbb
mov
inc
mov
sahf
ficoms
fcoms
inc
or
pop
addr16
push
jno
addr16
addr16
popa
int
mov
ret
cmp
cs
or
cs
ja
mov
push
data16
ret
bound
rorl
arpl
mov
add
fstpl
mov
pop
push
fwait
imul
bound
inc
jmp
aam
xor
xlat
mov
fdivrl
mulb
or
xchg
xor
pop
or
mov
pop
jecxz
xor
les
adc
enter
sti
mov
jo
jp
push
popa
mov
or
cmc
cmp
not
xor
fs
cwtl
cmc
arpl
sbb
imul
mov
int3
inc
cmp
pusha
mov
test
je
mov
mov
push
imul
push
jnp
pop
ret
pop
inc
dec
enter
fdecstp
inc
mov
shlb
push
mov
pop
inc
and
mov
in
lret
lea
inc
inc
scas
mov
out
mov
and
cltd
sbb
or
outsl
adc
sub
addr16
mov
std
and
mov
push
add
mov
mov
inc
ljmp
lods
int3
or
xchg
pop
loop
cmp
sub
sbbb
xchg
jae
movhps
pop
gs
dec
cmp
and
popa
lods
negb
lahf
pop
inc
mov
aad
mov
outsb
mov
lret
int3
aam
and
and
xchg
mov
jle
mov
xchg
push
fistpll
cmp
pop
jmp
xchg
pop
pop
fwait
xchg
sub
xor
or
jge
jle
leave
fwait
fwait
rorl
call
mov
jo
lret
rcr
scas
ss
outsb
lahf
jne
push
and
fsubl
cwtl
pop
ret
inc
ret
dec
in
fiadds
pop
mov
imul
inc
cmp
stc
sub
neg
out
xchg
pop
dec
xchg
pop
mov
fidivs
movsl
push
xlat
sbb
xchg
mov
pop
daa
dec
mov
negl
test
out
jecxz
ss
nop
adc
jg
je
mov
sbb
push
adc
insb
or
xchg
xchg
ja
jl
mov
dec
repnz
mov
or
jae
flds
loopne
push
js
movb
xor
gs
sub
xchg
sbb
mov
mov
dec
sub
mov
sbb
pop
cmp
cmp
fxch
test
mov
ja
into
jmp
xor
sbbl
xchg
push
sub
js
push
test
pop
js
mov
sub
mov
ss
movsl
cli
cmp
outsb
outsb
pop
push
lock
inc
xor
sbb
xchg
ror
xchg
sahf
pop
push
cmpsb
pop
push
aas
mov
insb
cwtl
pushf
int
xchg
jg
ficoml
fdivl
movsl
add
mov
outsb
loop
fsubrs
test
cvtps2pd
sahf
mov
jle
mov
sbb
hlt
cmp
dec
fists
dec
es
xlat
mov
cli
popf
out
xchg
mov
mov
fcompl
jb
pop
inc
and
sbb
fidivl
xchg
pop
fwait
icebp
aam
ds
sub
push
aaa
jnp
shrl
push
addr16
ds
xchg
lods
push
je
dec
push
add
and
aaa
push
sti
test
arpl
ja
pop
fildl
xchg
adc
ljmp
jo
ret
jp
inc
xchg
outsb
pop
arpl
sbb
adc
xor
pop
xchg
sbb
rcll
fists
and
dec
and
xchg
cmpsl
dec
pop
scas
out
sahf
push
iret
popaw
jp
insl
and
mull
pop
daa
mov
xchg
sub
movsb
call
xor
sbbb
and
lret
pop
movsb
nop
int
push
or
insl
jmp
imul
push
shll
insl
int3
ror
aaa
call
sbbb
jle
nop
sub
nop
pop
aad
adc
push
jno
mov
cs
lds
push
mov
xlat
imul
xor
cmp
insb
sti
aad
add
out
sti
pop
jae
jbe
dec
test
mov
adc
pop
jle
adc
mov
loop
leave
lret
outsl
push
mov
or
sub
xchg
ljmp
test
scas
loop
pop
aas
xlat
sahf
jb
xor
xorl
xor
imul
loope
sub
fxch
xchg
stc
jno
mov
xor
push
addr16
dec
movsl
and
sub
clc
mov
or
movsl
dec
add
jbe
or
xchg
arpl
adc
inc
pop
dec
rcrl
inc
add
rorb
jae
movsb
pop
mov
pop
fldcw
xchg
je
movsl
add
inc
xchg
nop
jb
push
fsubr
outsl
out
scas
ds
test
testb
adc
pop
sbb
push
lret
lret
iret
sahf
cmp
fld
call
stos
test
cmp
aaa
add
clc
fstpl
lods
jbe
cmp
and
cmpsl
push
adcl
pop
xchg
inc
gs
arpl
pop
lock
insb
sbb
cmp
inc
xor
sbbb
test
cltd
add
add
loop
outsb
lcall
fistpll
insl
arpl
cmp
cli
mov
and
adc
xor
insb
mov
sub
mov
call
imul
sbb
pusha
inc
sbb
enter
shrb
mov
push
xlat
sub
push
pusha
xchg
mov
stos
add
sbb
xchg
sub
sub
insb
jae
fbstp
and
jns
xchg
imul
pop
imulb
xchg
cmpsb
push
movsb
mov
xor
ss
and
shll
jge
sahf
ds
out
lods
icebp
cs
inc
repnz
lea
and
ja
aas
mov
mov
jmp
jmp
clc
and
cmp
les
test
cltd
mov
arpl
push
aaa
lock
adc
mov
scas
out
lret
adc
pop
arpl
jbe
adc
dec
ret
neg
lds
pop
test
popa
movb
ja
pop
int3
jp
enter
sbb
int
lea
add
popa
mov
mov
repnz
jns
jmp
jbe
sbb
sbb
jg
jnp
dec
mov
les
jg
movsb
inc
mov
sbb
enter
dec
aad
xor
out
sbb
test
stc
dec
sti
and
ljmp
popw
dec
jne
sbb
or
sbb
adc
jmp
and
es
shll
pop
and
sbb
cmpsb
lds
mov
xchg
leave
inc
movsl
xor
addr16
lcall
adc
jp
cltd
stos
jae
lock
arpl
mov
jnp
popa
andb
mul
std
dec
sti
int3
addl
or
lods
clc
addr16
xchg
sub
xchg
inc
jle
in
and
cmp
dec
mov
in
data16
adc
hlt
xor
aad
push
xchg
xchg
stos
jl
jmp
jp
cmp
push
xchg
leave
sbb
pop
les
mov
pop
xchg
pop
daa
xorl
int
jp
insb
xchg
sub
sbb
cmp
js
dec
cmp
nop
push
inc
add
outsb
je
lea
adc
out
dec
dec
dec
jnp
add
mov
pop
xor
sub
add
and
xor
enter
add
inc
xchg
icebp
adc
mov
dec
cmpsb
push
sbb
mov
or
xchg
mov
bnd
out
aam
mov
xchg
inc
pop
repz
cwtl
call
add
mov
jl
out
pop
scas
cmc
cmp
ja
mov
fisubrl
xchg
xchg
jmp
into
xchg
adc
arpl
mov
repnz
pop
mov
ret
leave
ss
sub
cmp
xchg
stos
int
cli
and
pop
mov
or
movsb
push
or
frstor
mov
loope
mov
mov
xor
jge
aas
dec
mov
jne
add
es
or
mov
cld
jl
out
out
jb
daa
and
lds
jle
mov
push
cld
and
pop
enter
insb
aad
fs
std
inc
mov
jle
int3
xchg
or
and
jmp
imul
ljmp
jno
xchg
mov
popa
or
bound
andb
rolb
jge
mov
sub
cwtl
and
jns
pop
test
jo
test
jge
shll
jp
int
mov
inc
sti
loope
out
testb
popa
lret
push
ret
add
mov
mov
scas
or
mov
cwtl
mov
stos
mov
and
sbb
adc
inc
sbb
jg
pop
rclb
sbb
inc
bound
ja
rorb
xchg
cmc
ss
add
xchg
jno
gs
mov
fidivrs
xchg
into
fucomi
add
in
dec
mulw
and
xchg
add
xchg
notl
adc
call
scas
xchg
xlat
xor
add
js
gs
mov
outsb
xlat
sbbl
into
cmpb
sub
fnsave
cltd
jbe
xchg
enter
jbe
lret
xchg
jb
aad
xor
lcall
mov
cmp
sbb
es
loope
jno
pop
and
jg
cmpsb
rcrl
mov
mov
push
cmp
add
pop
mov
mov
pushl
loop
repz
out
test
fnop
lret
insb
notb
fdivrs
pop
jg
je
dec
sub
mov
cmp
ja
into
popa
inc
aaa
sbbl
jbe
mov
cmc
cli
and
lods
pop
mov
adc
add
push
mov
push
mov
gs
lods
pop
mov
xor
mov
sbbl
or
dec
movsl
xchg
pusha
je
inc
or
mov
mov
jne
lods
dec
fimull
sub
or
xchg
das
int
push
pop
sbb
or
and
sarl
xchg
testb
outsb
mov
fdivrs
pusha
sub
das
jmp
int
push
cmp
insl
xchg
iret
adc
sub
repz
ret
pop
popa
fsubp
lcall
stc
pop
cli
xlat
hlt
add
mov
jp
xorl
lds
mov
in
sbb
mov
lahf
jg
or
cmp
cltd
lcall
and
test
xor
rep
jb
add
test
xchg
mov
mov
xlat
idivl
daa
psrad
jle
xorl
in
fidivs
cmpsl
rol
inc
cmp
out
dec
sbb
ds
pop
cmp
leave
pop
xchg
ret
xor
aas
jno
xor
push
stos
mov
or
adc
fistpll
lea
js
ret
inc
out
mov
insb
xor
inc
imul
dec
xor
add
inc
mov
mov
fwait
shll
pop
mov
insl
cmpsb
add
mov
cmpsb
mov
cmp
les
fildll
sahf
jb
fdivs
mov
mov
lods
sub
rclb
orl
ja
push
sbb
sarl
ss
pushf
pop
les
stc
pop
push
nop
stos
int3
scas
xor
negl
sti
xor
xor
stc
pop
fcoml
ret
inc
dec
scas
mov
mov
testl
cmpsb
pop
push
push
or
cmp
test
pop
and
mov
daa
add
cld
jge
mov
or
out
aad
cltd
fists
shlb
int3
ret
cmp
test
cmp
loop
mov
add
sbb
mov
pusha
aam
inc
into
mov
sub
jp
mov
push
fs
cmp
imul
lahf
outsb
dec
out
outsl
test
or
shll
call
stos
lock
mov
cmp
out
dec
xor
push
lods
push
mov
and
add
into
xor
xlat
xor
jns
cs
mov
inc
insb
addl
or
test
or
mov
or
cmc
sub
push
jns
xor
cwtl
mov
inc
fnstsw
xor
or
jno
sub
push
lret
out
popf
pop
jno
sub
pop
cmp
inc
lock
sbb
movsl
ret
rorl
icebp
int
sbb
mov
adc
iret
pop
popa
inc
push
push
int3
bound
repnz
fistl
out
mov
sub
xchg
leave
and
sbb
inc
xchg
int
not
xlat
movsb
mov
sub
xchg
test
pop
fs
aad
push
outsl
jmp
std
mov
sub
inc
xchg
cmc
inc
test
mov
lret
addr16
in
into
and
cmp
and
or
adc
out
xor
test
dec
mov
lods
fwait
cmp
pop
pop
push
adc
lods
in
inc
jle
push
iret
aas
mov
faddl
int3
jecxz
jp
repnz
movl
in
mov
adc
and
sbb
pop
fimuls
jnp
jmp
pop
cmc
arpl
xor
icebp
push
adc
aad
in
lcall
sbbb
int3
shl
xchg
and
sub
xchg
rcl
rcll
sub
cs
not
loop
shl
pop
add
sbb
aad
in
jae
mov
inc
pop
mov
movsl
mul
popf
jns
leave
adc
pop
mov
push
js
shrb
push
mov
jb
mov
out
outsb
out
ja
pop
lret
dec
xchg
sub
lcall
lods
fldl
and
xchg
ja
push
mov
lret
es
mov
rcll
pop
mov
mov
inc
or
mov
stc
aaa
jmp
adc
lods
lahf
push
cmc
sar
ds
adc
addr16
sub
mov
lcall
cld
cli
shrb
and
aaa
mov
adc
stos
add
in
sbb
adc
in
pop
daa
shlb
inc
dec
mov
insb
js
aad
test
ret
mov
ljmp
test
xchg
fdivrl
cs
addr16
mov
dec
adc
inc
rorl
iret
pushf
push
test
test
pop
sub
xchg
int3
push
mov
adc
test
xor
and
out
icebp
clc
out
xchg
and
inc
push
jo
stos
sbb
inc
jno
sbb
jg
sbb
lods
out
mov
cmc
test
popa
sahf
mov
pop
es
daa
pop
dec
outsl
mov
out
push
xchg
mov
inc
xor
xchg
mov
mov
jp
ja
pop
add
addr16
pop
or
pop
mov
ljmp
cwtl
push
lret
adc
cmp
call
push
mov
je
scas
or
insl
inc
fisttpl
cmp
fs
outsb
pop
sub
mov
rcrb
xchg
mov
stc
aas
push
imul
mov
dec
jle
fsubl
add
rorb
sbb
dec
sbb
or
neg
outsb
pop
addr16
dec
iret
and
nop
mov
xor
adc
loop
sub
jecxz
ret
mov
shlb
nop
mov
lcall
cmp
mov
sbb
push
pop
mov
insb
movsb
mov
std
jo
popa
js
test
inc
test
jle
rclb
add
jb
adc
lods
cmpsl
repz
icebp
push
pop
rclb
push
addb
mov
cmc
pop
xchg
stos
fcmove
cmp
push
inc
inc
gs
dec
or
push
imul
mov
push
adc
leave
lods
xchg
test
lcall
xchg
js
sub
mov
sbb
and
or
jns
xor
cs
dec
or
scas
inc
loope
mov
xchg
mov
ds
sbb
lds
inc
lahf
movsb
add
ss
and
call
pop
fcoms
push
shrb
mov
jns
sub
enter
push
outsb
sub
ret
push
push
xchg
and
es
mov
popf
shlb
fidivl
scas
and
inc
adc
out
mov
jbe
enter
mov
icebp
pusha
inc
xchg
testl
xchg
icebp
adc
call
leave
mov
cmp
clc
in
test
mov
lahf
cwtl
inc
shrl
call
xor
jg
push
jmp
add
clc
jl
adc
xor
pushf
repz
out
mov
nop
pop
outsb
rcrb
mov
roll
les
jo
cli
in
inc
xchg
cmp
mov
cmp
sbb
xor
aam
sbb
cmp
js
pop
fistps
mov
jb
dec
fs
sub
fs
and
test
popa
cmpsl
sahf
xor
shlb
nop
sti
cmp
test
das
pop
push
shlb
mov
lea
pop
or
adc
sbb
sub
jmp
test
dec
out
ja
adc
addl
lcall
cmp
sub
pop
shll
ja
xor
fisubl
rolb
cmpl
sub
gs
xchg
addb
xor
movsl
int
sti
movsb
ret
pop
mov
gs
pop
pusha
cmp
inc
fistl
into
dec
and
std
enter
rorl
lds
xor
jge
inc
cmpsl
dec
pop
pop
fcomp
movsl
lock
jo
mov
dec
adc
ret
cmp
pop
sbb
mov
jne
push
inc
in
jne
loopne
iret
xchg
jmp
in
es
sbb
in
test
les
jmp
cmp
decb
push
sbb
mov
inc
cli
mov
push
repnz
out
add
int
mov
fwait
das
pop
out
shr
push
sarb
pop
sub
aas
pop
out
lea
rclb
ret
xchg
sbb
iret
cmp
push
sub
ds
rcrl
sbb
data16
mov
or
test
negb
mov
and
mov
xor
ret
push
stos
aam
or
pop
test
cmp
in
or
shl
shlb
sub
mov
pop
je
hlt
xor
fs
push
loopw
and
inc
adc
mov
stos
jl
cwtl
into
jecxz
imul
or
in
xor
mov
scas
mov
xchg
movb
sar
outsl
push
rorl
neg
inc
adcb
loopne
mov
add
adc
es
aam
add
out
lcall
test
inc
cmp
jl
push
gs
pop
and
pop
sbb
xchg
xlat
pop
es
inc
imul
sar
scas
dec
sub
sub
insl
test
aaa
push
fldt
inc
int
ret
xor
ss
dec
inc
jbe
mov
jmp
mov
enter
sub
jns
cmp
das
mov
push
subl
insb
bound
jg
or
mov
mov
fs
std
xor
mov
xchg
leave
fisttps
adc
sub
sub
movsb
mov
adc
loope
xlat
clc
mov
jg
sti
hlt
or
dec
cmp
mov
pop
sbb
lss
in
mov
ja
xchg
lock
mov
jb
sbb
push
dec
and
loopne
aam
lahf
cmpl
dec
dec
and
cs
add
lcall
sub
xchg
ja
pushf
sbbb
push
add
test
jo
imul
push
loopne
aad
pop
stos
aad
sbbb
gs
loop
mov
mov
jo
mov
sub
into
lds
push
iret
add
fistpl
sbb
or
cmp
pushf
daa
ja
daa
dec
outsl
pop
scas
dec
jnp
hlt
dec
lods
and
dec
sub
out
push
stos
adc
push
lods
out
dec
pop
fcmovu
xchg
pop
mov
sarb
leave
xchg
je
rorl
mov
dec
hlt
cmpsb
jmp
sub
stos
subl
scas
adc
addr16
push
dec
adc
sub
inc
or
fiadds
cld
fdivp
jnp
fsubs
push
jmp
mov
pop
mov
rorb
addl
dec
mov
xlat
lds
ja
or
push
jno
xchg
or
inc
es
stos
pop
out
fldenv
inc
jle
inc
push
stc
mov
in
add
and
push
xor
push
dec
mov
nop
outsb
dec
outsb
inc
es
inc
sti
scas
enter
mov
arpl
cltd
push
repz
das
dec
cwtl
push
adc
dec
aas
daa
enter
ljmp
jmp
add
xchg
loopne
mov
xor
fimull
jb
push
fidivrs
xorb
stos
call
jnp
lods
adc
rclb
inc
pop
out
and
cmpsw
je
xchg
mov
push
mov
pcmpgtd
adc
sub
sub
daa
sbbb
xor
lods
sub
lea
popa
push
mov
push
add
addr16
mov
loope
mov
pusha
movsl
dec
cmp
push
pop
sti
xchg
xor
loop
or
ja
lods
fs
rclb
mov
jb
inc
outsl
and
inc
mov
adc
aad
outsl
pop
sar
xor
push
test
je
aas
push
push
je
popa
lods
movsb
push
jecxz
cmp
fnstenv
xor
sub
xor
lret
inc
loop
in
dec
dec
loope
adc
clc
and
mov
pop
subl
fldt
movb
xlat
or
pop
inc
jb
mov
xor
enter
fsubr
inc
jp
mov
sub
xor
frstor
pop
cmp
mov
out
inc
enter
pop
int3
or
imul
jmp
hlt
xchg
mov
jb
sbb
es
ds
inc
push
rolb
aaa
and
mov
adc
xchg
icebp
or
mov
cmp
push
dec
adc
push
into
loope,pn
movsb
mov
lea
pushf
pop
xchg
cltd
xchg
scas
mov
ret
in
out
mov
add
popf
test
dec
cmpsb
cmp
mov
jne
jb
adc
pop
mov
leave
lods
pop
filds
dec
mov
cmp
jge
push
jnp
gs
cmp
out
testl
orl
or
jecxz
in
cld
imul
es
out
push
inc
lods
arpl
scas
scas
or
out
in
cmpsb
dec
popf
subb
xchg
mov
popa
loopne
and
stos
repnz
in
mov
sahf
or
jp
pop
iret
imul
sub
xor
js
cmp
packsswb
das
xor
sahf
icebp
lods
mov
inc
lcall
arpl
push
fcompl
int3
cmpsl
negb
ljmp
sbb
fs
inc
icebp
pop
fildll
push
xchg
dec
and
xchg
lock
push
xor
int3
xlat
shrl
dec
or
pop
repnz
into
testb
inc
inc
out
pop
mov
jmp
and
adc
out
lcall
imul
loope
sbb
sbb
stos
add
negb
das
sbb
xor
lea
inc
sarl
adc
add
xorl
insl
push
mov
stos
out
jge
dec
push
das
ds
lods
scas
mov
push
imul
mov
dec
cltd
pop
stos
or
fidivrs
mov
jne
push
dec
testl
dec
lock
xchg
incl
inc
int
imul
adc
push
add
incb
fwait
jns
imul
bound
add
sbb
xchg
fwait
jb
sbb
negl
or
xchg
das
push
fists
rolb
mov
stos
jo
push
mov
jl
seto
dec
in
pusha
popf
jnp
ds
push
mov
fsubrp
dec
test
mov
dec
fistpll
push
rclb
cwtl
cs
vmread
fwait
xchg
mov
nop
test
fwait
mov
lods
jbe
xchg
add
sub
or
push
xor
dec
sbb
jbe
mov
stos
adc
cmp
pop
sbb
mov
loopne
loope
xor
jecxz
repz
popa
shlb
iret
lahf
imul
fmul
aas
nop
add
lock
aaa
or
xlat
or
cmp
dec
xor
test
sbb
sbb
push
cmp
es
ds
sbb
xchg
mov
lahf
in
fdivl
fcomps
push
mov
scas
or
xchg
pusha
xchg
call
stc
mov
sbb
mov
mov
add
insb
cmpsl
jg
adc
add
sub
das
mov
push
in
mov
sub
push
mov
ljmp
stc
bound
cld
sub
sub
or
cltd
adc
mov
fdivrs
jge
les
std
xchg
mov
mov
dec
mov
popa
xchg
and
or
outsb
call
loop
into
dec
std
mov
ret
shrb
out
dec
mov
ret
push
popf
ret
or
push
push
movsb
or
sbb
testl
mov
rcl
push
mov
or
je
dec
push
inc
mov
or
mov
fldenv
push
mov
jnp
shll
ljmp
mov
jns
popf
pop
shrl
sub
daa
fmull
fnstsw
adcb
sbb
test
mov
leave
shll
cmpsb
fdivl
mov
mov
xchg
mov
cmp
test
je
shlb
and
mov
nop
xchg
pop
iret
cwtl
sub
or
out
push
mov
call
sub
insl
push
in
out
stos
imul
or
stc
shl
shrb
mov
cmp
jge
and
or
out
or
stos
sub
test
aam
gs
popf
clc
cmp
add
xor
lods
or
fidivl
mov
mov
dec
insl
sti
push
stc
mul
lock
cld
xor
or
test
test
lahf
out
jae
loope
xchg
cltd
dec
loope
sahf
out
aas
enter
leave
xchg
sub
out
xchg
loop
sbb
xor
and
dec
fimull
and
jne
xchg
int
cmc
or
dec
pop
dec
push
xchg
aam
dec
jb
nop
lcall
sbbl
jmp
imul
sbb
push
std
mov
pop
adc
or
inc
jecxz
inc
cmp
fwait
repz
and
sbb
stos
popf
mov
mov
xchg
mov
mov
popf
xchg
repnz
cmp
daa
or
cmpsl
pop
icebp
testb
jb
mov
aas
fld
xchg
ror
sub
mov
ja
jns
xlat
dec
sbbl
xor
add
add
mov
movsb
lock
mov
jl
sub
stos
sar
inc
pop
ljmp
xchg
cmc
gs
mov
or
fwait
pusha
add
mov
aaa
loopne
pop
push
mov
mov
jle
xlat
xchg
xchg
xchg
mov
rcrb
mov
clc
dec
in
out
test
xchg
add
fisubrl
stc
into
xor
cmpsb
nop
adc
inc
push
jo
in
pop
jne
bnd
in
xchg
int3
pop
pusha
xchg
out
scas
es
mov
push
jmp
sti
mov
fs
xor
in
bound
dec
sbb
and
stos
sbb
inc
cmc
and
inc
fcmovne
out
sub
roll
js
test
aam
mov
dec
push
aad
lods
fucomi
jns
stos
mov
jnp
in
jo
loopne
push
mov
xchg
add
in
andl
and
hlt
rcrl
shll
mov
ret
ss
imul
stos
divl
mov
int
es
inc
mov
fnstenv
pop
aam
loop
xorl
mov
xlat
mov
pop
sub
mov
lret
add
fsubrl
jnp
and
xlat
sbb
pop
sahf
sub
popa
or
das
cltd
lret
xchg
sub
pop
pmulhw
add
out
mov
pop
pop
pop
pop
push
lcall
xchg
in
cmp
sub
dec
adc
mov
sbb
negb
or
movsb
inc
imul
movsl
iret
fisubs
fadd
addr16
outsl
or
adcl
xor
add
push
addb
dec
pop
lcall
andb
cltd
sti
sub
insl
xchg
or
mov
add
out
jmp
aad
sub
jmp
cmpb
mov
push
lods
xchg
daa
jne
hlt
outsl
xchg
sti
stc
cmp
mov
mov
sti
mov
lods
and
xchg
mov
leave
aam
mov
adc
jl
mov
mov
popf
fisubl
jns
call
sub
and
mov
jl
jl
test
fwait
pop
add
out
fnsave
fimuls
test
stos
or
shl
xor
jge
mov
sti
in
pop
push
sbb
xchg
mov
mov
iret
or
adc
cs
bound
push
aad
mov
or
call
ja
and
adcb
out
or
pusha
mov
dec
sub
bound
pop
mov
jge
dec
test
sub
stc
imul
xchg
rorb
sbb
xchg
shlb
shlb
pop
mov
jno
lret
hlt
test
add
inc
leave
jae
mov
subb
stc
fcoml
lock
jmp
dec
xor
imul
or
dec
jbe
test
scas
adc
ljmp
jns
mov
add
pop
jg
fs
orb
mov
mov
les
orl
mov
sbb
add
bnd
xchg
hlt
stos
sub
das
xor
adc
jnp
popf
pushf
imul
repz
std
out
loop
inc
cltd
adc
test
into
adc
cmp
enter
cmp
mov
cmp
hlt
std
jne
xor
sub
and
pop
test
cld
aad
mov
inc
jns
imul
cmp
int3
pushf
fstl
je
ljmp
mov
cmp
add
sub
xchg
mov
xlat
sub
dec
pop
sbb
pop
je
imulb
dec
gs
icebp
shll
inc
and
xchg
and
outsb
dec
ret
sbb
out
lcall
ficompl
fimull
xchg
inc
jo
lcall
xchg
addr16
loope
je
sbb
pop
sahf
loope
mov
mov
int
mov
in
fisttpl
xchg
out
or
push
in
xchg
mov
insb
xchg
xchg
add
mov
inc
pushf
mov
rorl
or
mov
xchg
pop
and
sbb
or
jmp
mov
jmp
popf
lahf
mov
dec
lds
lahf
mov
xor
sbb
out
mov
adc
or
pop
aad
aad
dec
int
test
ljmp
and
mov
jb
mov
dec
inc
xor
and
fdivl
aas
popa
and
xor
insl
push
lods
xchg
and
pop
fidivs
xchg
enter
loopne
das
imul
loop
or
cwtl
sbb
and
sbb
mov
sub
push
jo
rorl
and
pop
jecxz
fxch
mov
shll
lret
pop
mov
fcmovne
out
adc
xor
imul
lea
stc
cmp
call
arpl
pop
sub
imul
aaa
test
adc
xor
ljmp
xor
mov
movsl
ss
adc
outsl
xor
dec
lods
aaa
in
mov
out
cmpsb
inc
test
insl
scas
jge
mov
inc
fbld
jecxz
clc
xchg
popf
sub
pop
or
popa
and
stos
mov
push
and
mov
sbb
in
jbe
add
push
in
and
negb
std
dec
push
dec
out
scas
dec
xlat
test
mov
insb
not
loopne
ja
ljmp
fs
cmpsb
pop
jl
loop
inc
add
ss
lret
lea
data16
mov
adc
in
out
xchg
std
repz
xor
jmp
adc
xchg
xchg
cmpsl
xor
aad
xchg
js
sub
mov
out
sar
cmp
adc
mov
sub
jno
test
js
daa
lods
test
mov
leave
test
push
add
pop
insl
adc
mov
and
lret
scas
cmp
lea
or
sub
inc
out
add
leave
stc
jnp
fnstenv
xchg
ja
or
dec
cmp
mov
out
pusha
lods
pop
sbb
fdivrl
sti
push
movsl
or
cmpsb
cmovle
addb
nop
test
int3
rcrl
cli
sarb
inc
sub
adc
push
popf
sbb
xchg
decl
fldenv
pop
jmp
xchg
stos
lods
sbb
lahf
mov
fcompl
sbb
ja
lea
inc
xchg
pop
repnz
jp
push
jb
fdivr
cmp
jp
inc
xor
cmp
mov
and
lods
aaa
aaa
insl
mov
mov
test
inc
inc
mov
and
std
aas
sub
ljmp
dec
dec
lret
popa
scas
mov
test
xchg
dec
mov
dec
adc
jno
jmp
inc
inc
inc
mov
fsubrl
and
daa
ficomps
jne
clc
and
pop
stos
decl
or
subb
fnstcw
pop
stos
or
push
bound
aam
dec
pop
xor
int
shlb
xor
xchg
mov
movsl
add
pop
scas
cltd
mov
sbb
cs
pop
mov
push
fstl
cmp
and
in
jl
mov
push
mov
add
jno
xchg
xor
cwtl
dec
dec
sbb
int3
inc
inc
mov
add
sbb
mov
pop
cmp
or
push
mov
test
xorb
ffree
lds
jecxz
stos
fbstp
cs
data16
add
and
mov
jbe
mov
dec
out
ljmp
lods
mov
xor
iret
cli
aaa
mov
das
mov
add
jmp
in
xor
ret
pop
out
sahf
jns
mov
pop
or
mov
pop
pusha
enter
in
js
iret
lock
aad
je
adc
sbb
sbb
lods
sub
xor
push
and
mov
inc
inc
jmp
push
inc
ss
daa
aaa
decl
add
jns,pn
pop
cmp
mov
sbb
insl
pop
call
cmpsl
lret
sub
daa
mov
leave
sub
jge
jb
mov
cmpsb
inc
das
inc
andb
inc
js
test
mov
lret
ret
xor
js
inc
inc
sbb
push
inc
xchg
adc
inc
in
cltd
mov
addr16
mov
dec
mov
mov
lods
and
pop
test
popf
mov
clc
push
add
out
or
out
adc
test
sub
sarb
into
or
and
call
sbb
insb
sarb
mov
lcall
arpl
sub
mov
mov
xchg
adc
fwait
push
mov
push
and
add
test
xchg
js
jne
subb
inc
jo
pop
mov
jp
inc
and
push
xchg
jmp
loopne
inc
mov
imulb
adc
inc
shlb
in
jmp
push
inc
jge
insl
adc
mov
test
in
hlt
das
lret
jp
xor
enter
lahf
mov
fisubrs
mov
decl
mov
pop
jno
push
sahf
rcrb
and
stc
mov
add
adcb
mov
insl
mov
bound
xchg
test
xor
push
mov
sub
mov
fs
adc
mov
cmp
in
scas
mov
or
outsb
push
cld
lahf
loopne
cmp
cli
int3
daa
cmp
dec
in
shrb
xor
int
adc
ss
sbb
call
jg
rcl
pop
pop
rclb
inc
add
sub
ljmp
mov
dec
push
sub
mov
jg
sub
hlt
test
std
int3
mov
ljmp
mov
jle
enter
jno
bound
add
mov
cmpsb
mov
sbb
jne
push
addr16
mov
inc
cmpsl
lods
pop
out
icebp
sub
and
leave
xchg
mov
inc
in
hlt
inc
xchg
fidivs
xlat
mul
cmc
fsubs
xor
out
jg
mov
test
jle
fists
les
mov
xlat
je
rcrl
mov
mov
lahf
call
notb
into
cmp
movhps
xor
ret
and
out
stos
xchg
dec
mov
pusha
push
shll
aaa
dec
dec
jge
add
xor
inc
stos
sahf
jg
jb
in
lret
fisubs
iret
enter
xchg
adc
movsl
fucom
ret
xchg
scas
call
xchg
dec
out
js
mov
pop
and
jbe
xlat
shlb
pop
jbe
mov
lock
in
adc
xchg
leave
pop
cmc
das
dec
add
dec
xchg
jmp
adc
cmp
sbb
jge
xor
or
and
pusha
insl
dec
jmp
ret
call
add
xor
pop
adc
outsl
insl
add
shlb
xchg
dec
lock
dec
pop
inc
test
add
jg
ja
inc
push
mov
lea
pop
add
clc
outsl
ret
repz
aam
cmp
push
jle
loopne
or
movsl
xchg
mov
inc
cmp
push
pop
shlb
lods
pop
pop
movsb
in
push
sub
lods
or
inc
xchg
daa
jno
ss
mov
repz
xlat
add
call
jo
cmp
jg
xor
fcomps
xor
insl
sbb
movsl
cli
daa
xor
aas
je
lods
cmp
cmpsl
lods
cld
adc
out
add
je
out
xchg
add
sti
in
xchg
or
out
rolb
pusha
iret
shr
jns
fldt
push
cmp
or
mov
ljmp
mov
fidivrs
sbb
and
push
xchg
data16
and
mov
dec
xor
xor
out
lock
je
pop
inc
pop
jmp
scas
pop
imul
bound
or
mov
cmpl
inc
jbe
fists
imul
jecxz
mov
sub
out
sti
cmp
xor
lock
mov
fisubl
test
ret
sar
daa
test
xchg
add
cwtl
fisttps
push
call
mov
sbb
xchg
cmp
sahf
or
std
inc
cmp
lahf
jl
cmpsb
mov
xlat
jecxz
mov
xchg
cmp
jb
mov
cmpsb
inc
in
test
shl
xchg
or
addr16
repnz
out
add
enterw
cs
pop
iret
leave
jb
or
mov
jle
pop
push
jne
arpl
adc
iret
lret
out
push
enter
push
adc
mov
mov
icebp
cmp
push
arpl
cmp
or
and
pop
cmp
sahf
sub
in
ja
sahf
stc
out
pop
and
xchg
sbb
iret
pop
dec
cmp
adc
inc
cld
outsb
lret
insl
jns
incb
mov
push
lock
pop
dec
or
fimull
js
fdivr
gs
sbb
or
hlt
loopne
sub
negl
scas
cli
ss
ja
fstps
inc
fs
cmp
ret
jnp
in
xchg
mov
sub
ljmp
cmp
and
scas
mov
add
sub
insb
mov
cmp
xchg
pop
mov
addb
call
pop
mov
insl
nop
into
sti
shll
adc
xlat
leave
fwait
cmpl
xor
aad
movsb
xchg
insb
popf
add
cltd
xchg
fisubrs
pop
lret
call
out
cmp
out
mov
fisttpl
cmp
jg
rcrl
cmp
shl
mov
mov
xor
loop
mov
nop
add
inc
repnz
scas
xlat
push
fildll
jl
es
insl
cs
lods
add
les
enter
mov
pop
adc
sub
push
dec
in
stos
add
sbb
daa
lods
sub
mov
into
adc
push
mov
movsb
sbb
mov
lret
xchg
xor
fisubrl
jl
cmc
adc
js
lcall
ds
and
ja
sbb
cs
into
out
das
notl
sbb
fisttpl
out
lea
clc
jmp
insb
testb
das
xor
fiaddl
cmp
jl
mov
push
insl
test
push
mov
cmc
and
lds
mov
add
xchg
addr16
cli
mov
movsb
hlt
loopne
imulb
pusha
cmp
push
mov
jle
lcall
adc
sub
les
cmpsb
mov
stos
jb
inc
scas
movb
lret
sub
lds
lret
xchg
add
push
jb
loopne
cmp
adc
into
adc
lea
jecxz,pn
in
pop
insl
xor
rclb
stos
mov
and
repz
pop
xchg
mov
shl
mov
xor
js
mov
scas
and
mov
jle
aaa
push
xchg
out
mov
xor
shll
ja
jle
cmp
pop
sbb
cmp
stos
dec
lock
ret
or
xor
xchg
jecxz
jmp
jecxz
inc
arpl
out
mov
ret
lock
in
sub
lret
xchg
inc
or
daa
fcompl
div
jns
pop
push
out
or
outsl
out
out
loop
leave
dec
xlat
jecxz
and
and
mov
sbb
jo
xchg
movsb
xlat
mov
jl
int3
leave
pop
mov
insb
xchg
dec
jp
jl
lahf
stos
ss
leave
jle
ret
das
pop
ficoml
or
ret
cltd
inc
sub
fs
adc
xchg
sbb
add
pop
xchg
add
jle
pop
andl
pusha
sub
imul
mov
xchg
addr16
sub
sub
sti
jne
test
dec
ret
cmp
mov
dec
jns
testl
sarb
cmp
fsubr
popa
xor
mov
mov
js
xchg
sbb
mov
shlb
push
rcl
mov
decb
dec
and
fwait
inc
push
cmpsb
cmp
cmp
cmpsl
stos
ret
mov
add
outsb
sbb
mov
pop
movsb
xor
mov
enter
aam
xchg
jl
adc
push
test
mov
xchg
mov
andl
dec
ss
and
rcrl
sub
add
lock
mov
fstps
aam
lcall
fs
out
adc
xor
mov
adc
xor
and
dec
adc
cmpsb
add
mov
int3
push
loope
adc
add
pop
inc
mov
test
cli
xchg
mov
inc
dec
and
rcll
fcmovnbe
cmc
xchg
cmc
mov
or
fidivs
repnz
jb
int
mov
mov
mov
mov
or
push
in
and
stc
add
je
add
dec
outsl
jecxz
scas
mov
adc
push
xchg
imulb
rol
and
je
mov
inc
jnp
sbb
mov
outsl
sbb
sub
mov
mov
pop
dec
ljmp
imul
push
dec
adc
adcb
cmp
sub
push
mov
subl
inc
xor
pop
aad
loope
add
data16
outsl
addl
cmp
push
in
push
add
sbb
sahf
popa
mov
sbb
in
cmc
mov
jae
test
push
iret
fwait
jecxz
add
fwait
adc
fidivrl
add
mov
fiaddl
mov
pop
inc
sbb
pop
ficoms
cmp
sub
xchg
jmp
pop
dec
rcl
pop
in
cltd
cli
pop
ret
or
and
ss
jg
fsubp
push
xchg
stos
sbb
cwtl
in
jns
adc
and
sahf
and
mov
sti
pop
inc
xor
xor
mov
stc
pop
pop
xchg
rcl
fwait
mov
aaa
cmc
loope
xchg
xchg
cmp
imul
pop
push
rcl
or
xor
js
sbb
pop
fnsave
ss
loope
push
lods
fucomi
aam
mov
leave
xchg
mov
xor
daa
mov
and
es
addr16
insb
lods
sbb
sub
fcoms
xor
xor
lcall
adc
int
fmuls
mov
cwtl
pop
mov
insl
sahf
hlt
lea
daa
ret
gs
mov
adc
cmp
movsb
outsl
mov
xor
ljmp
xor
loopne
sbb
push
xchg
out
aaa
xchg
jecxz
sub
aam
inc
mov
mov
lea
jno
jle
add
sbb
ficompl
insb
push
dec
xchg
popf
pop
leave
fistpl
in
cmp
daa
ror
mov
repnz
lods
repnz
push
push
or
scas
add
dec
lret
rcl
cmpl
testb
daa
dec
mov
negl
add
and
fisubl
xlat
push
movsl
mov
arpl
jp
mov
jae
call
ljmp
mov
enter
ret
push
cmpsl
xchg
daa
sbb
pop
mov
mov
std
adc
inc
add
adc
xchg
jns
sbb
out
je
dec
leave
push
pop
adc
pop
jnp
mov
jp
pop
inc
subb
and
jmp
ret
movsb
bnd
push
push
loopne
pop
push
call
lcall
mov
pop
fstpl
mov
clc
aam
and
mov
lock
cmc
xlat
testb
iret
in
in
push
in
rcll
test
add
int3
fstps
adc
jmp
adc
adc
sti
sbb
push
push
jb
dec
or
je
dec
add
mov
xor
cmc
movsl
in
and
ret
pop
daa
or
mov
xor
pop
ljmp
cmp
mov
mov
and
ret
shll
cmc
sub
ja
cmp
dec
mov
into
and
cmpsl
mov
and
push
or
fldl2t
xchg
jbe
jae
xor
sbb
cmp
ret
push
mov
mov
decb
cs
mov
dec
insl
fiadds
xchg
inc
add
mov
add
leave
sub
mov
sub
rorb
mul
call
push
mov
mov
mov
sbb
movsb
add
insb
nop
je
mov
outsb
dec
inc
add
push
rorl
sahf
dec
dec
testb
in
push
pop
test
xchg
cltd
mov
lret
test
roll
push
xchg
mov
mov
jae
inc
dec
fisubs
into
pop
hlt
pop
mov
mov
into
nop
out
push
testb
cmpsl
mov
and
shlb
push
sbb
sbb
xchg
sub
cmpl
cltd
imull
ret
cwtl
test
inc
pop
mov
adc
mov
mov
dec
in
inc
mov
arpl
pushl
pop
repnz
pop
icebp
cli
dec
inc
int3
subl
fistpll
mov
int
shll
incl
in
les
icebp
push
cmp
das
mov
jg
jo
pop
insb
cld
xchg
lds
jno
jo
ret
test
imul
iret
mov
popa
imul
mov
test
shl
stc
push
das
mov
iret
inc
lret
mov
cmc
sub
das
push
sub
std
mov
and
jmp
add
jnp
xchg
cmp
js
icebp
inc
jnp
outsb
inc
outsl
xchg
bound
data16
clc
cmpsl
sub
xor
pop
mov
add
jno
outsb
imul
das
mov
sub
jns
mov
cmp
cmpsb
popf
mov
add
dec
jae
push
loopne
cmc
and
sub
jne
ljmp
shlb
ja
xchg
dec
ret
push
and
repz
hlt
ret
call
and
roll
and
pushf
or
push
mov
imul
jb
repz
mov
mov
xchg
das
lods
sbb
sbb
mov
jmp
outsb
jp
push
xchg
inc
pop
repnz
test
sbb
or
and
push
ret
mov
mov
adc
inc
fidivs
jns
scas
mov
pushf
jp
or
adc
pushf
and
pop
imul
ss
outsl
cmpsb
xor
xchg
mov
sub
push
fldcw
mov
and
sub
cmc
cmp
push
addr16
adc
jg
cmp
outsl
gs
push
je
mov
je
daa
cmp
xchg
lret
and
inc
popf
fwait
sahf
gs
push
insl
stos
lods
ret
push
lock
lcall
sbb
fcomps
dec
jo
and
sub
pop
jo
data16
or
fdivl
test
pop
mov
stc
ret
mov
in
stos
inc
jge
mov
ljmp
cmp
addl
cmpsl
icebp
jg
jl
je
mov
pop
jno
icebp
mov
jmp
cmp
add
ljmp
add
insl
push
cli
icebp
adc
enter
ret
adc
jns
int
and
sbb
pop
jl
mov
in
jnp
push
jb
sub
push
push
sub
xchg
arpl
dec
cmp
orb
std
dec
repnz
lahf
sbb
or
cwtl
lock
adc
and
or
add
push
sbb
add
fisubrs
ret
jle
outsb
inc
test
adcb
rcrb
out
mov
scas
and
sub
lret
lods
add
adc
mov
inc
rorl
mov
mov
dec
fstpt
sbb
out
sub
scas
jae
pushf
cmpsb
mov
test
and
adc
ljmp
mov
xchg
push
mov
nop
cmp
mov
jle
std
jg
xchg
popf
sbb
jmp
pop
dec
ret
loopne
and
mov
frstor
fsts
xchg
lock
stc
fxch
std
mov
xor
push
aad
sbb
add
dec
sub
or
jg
mov
or
aam
inc
dec
cmp
cmp
mov
and
push
icebp
add
xor
sbb
and
ftst
imul
dec
push
rcl
dec
fidivl
mov
xor
aad
inc
xchg
pop
cmpsl
fbstp
and
cs
mov
fsts
jmp
lods
add
mov
push
sar
jne
mov
inc
subb
mov
fs
xor
ret
outsl
pmulhuw
mov
call
sub
popa
test
cmp
add
call
mov
arpl
mov
mov
mov
sarl
addr16
fbstp
fs
fistpll
mov
lock
lcall
cmpsl
and
sub
jo
inc
inc
inc
xor
out
cmpsb
pop
push
outsl
scas
pop
dec
out
pop
add
outsl
mov
das
jmp
push
cli
sbbb
nop
mov
push
xlat
dec
testl
jmp
sti
insb
push
pop
inc
or
lods
sarl
aas
addr16
fiadds
cmp
mov
jne
and
jmp
push
lds
sahf
idivb
add
fbstp
pop
and
or
stos
arpl
fs
gs
jnp
cld
sahf
aam
sub
push
lods
sbb
dec
int
cli
sbb
out
dec
imul
mov
loope
mov
and
sbb
add
mov
shlb
cmc
push
jl
andb
lret
or
decl
jge
out
dec
mov
adc
es
or
bound
fisttpl
aas
jp
repnz
in
ret
outsb
sub
add
add
insl
add
outsb
pusha
cs
push
sbb
sbb
test
or
pop
dec
mov
add
xchg
add
mov
out
cmp
push
in
adc
in
popf
sub
test
mov
out
jb
mov
push
iret
popa
mov
pop
xorl
stos
lods
je
xor
xchg
sti
cwtl
jnp
rclb
testl
imul
enter
pop
add
dec
loopne
ss
adc
xor
es
jmp
mov
pop
jge
shll
cli
addr16
jle
xchg
jp
mov
dec
pop
cmp
jno
pop
xor
or
xor
mov
xchg
loope,pt
add
jl
fstl
jb
mov
xchg
and
cltd
roll
dec
push
popf
inc
les
loopne
insl
mov
adc
stos
mov
add
cmp
and
lea
mov
lock
leave
pop
inc
out
push
inc
xor
sub
push
cwtl
adc
sbb
jnp
or
dec
xchg
rorl
xor
xchg
int
sbb
nop
rcll
adc
orl
jno
insl
call
push
hlt
cmp
push
mov
mov
pushf
or
pop
pusha
push
bound
jg
mov
cmpsb
sub
into
push
mov
add
test
or
mov
adc
loope
test
jns
and
pop
dec
mov
and
xchg
dec
cltd
xchg
imul
dec
mov
icebp
sub
mov
jle
xor
cmp
sbb
jmp
push
insb
push
jecxz
add
dec
push
stos
lahf
iret
pop
push
sbb
adc
out
cld
imul
sbbl
jbe
jne
icebp
dec
orb
les
cmp
jp
repz
loope
fs
inc
add
lret
in
sarb
jge
ja
aad
adc
out
mov
jb
lea
cmpsb
push
lret
loopne
hlt
jp
in
fidivrl
dec
adc
jp
jmp
cmp
lret
jmp
sub
adc
xchg
loope
pop
and
dec
dec
jmp
inc
ss
fstpl
mov
lcall
ds
push
out
xchg
push
ljmp
std
shrl
test
pop
mov
jns
clc
rcrb
jp
out
and
jns
push
jns
xchg
cltd
mov
push
mov
pop
sub
daa
loopne
xor
cmp
das
je
scas
leave
int
inc
test
or
out
sub
and
adc
and
popa
std
xchg
xlat
add
fstl
pushf
xchg
xor
dec
dec
loopne
out
iret
push
adc
adc
mov
idivb
xor
out
xchg
test
mov
in
and
pop
pop
cmp
flds
sbb
cwtl
inc
lcall
fisttpl
dec
dec
dec
cmc
dec
or
popa
movsl
add
push
mov
pop
in
dec
sbb
dec
cmp
daa
jp
pop
je
into
aam
mov
fcom
jo,pt
ss
add
pusha
push
arpl
inc
push
push
fidivrl
insb
xchg
xchg
mov
loope
push
mov
xor
cmpsl
fadds
sub
cwtl
imul
popa
lcall
push
std
mov
popf
insl
test
xchg
sub
pop
mov
jg
int3
inc
inc
mov
xchg
hlt
dec
mov
cmp
fisubrl
ret
fdivrl
mov
in
loope
mov
sarb
push
adc
jmp
inc
fpatan
mov
lock
cwtl
jp
lret
movsb
outsl
fwait
movsb
or
les
xchg
stos
add
cltd
inc
into
sbb
cmp
jp
adc
dec
mov
out
push
dec
pusha
call
or
test
fadd
lea
push
cwtl
outsb
enter
adc
fistpl
arpl
fs
pop
jns
jnp
test
or
int3
out
test
sbb
xchg
pop
pand
inc
mov
cli
xor
mov
cmp
mov
jnp
and
sbb
cmc
mov
mov
xchg
dec
and
dec
sahf
cmp
push
inc
sti
xchg
cli
dec
sbb
and
adc
add
lea
movsb
pop
adcl
add
lds
push
push
rol
fidivrs
sbb
repnz
roll
and
pop
repz
jmp
mov
mov
mov
xchg
cmpsb
adcl
popa
aas
iret
push
cmc
loope
dec
es
sbb
loop
adc
pop
sbb
cltd
push
or
pop
pop
fidivs
repnz
popf
inc
sub
fidivrl
sarb
mov
pop
bound
icebp
repnz
push
lret
jg
scas
insl
lahf
jg
mov
cwtl
add
test
stc
nop
mov
mov
rol
inc
push
mov
mov
dec
shrl
lods
cmpb
loopne
fstps
xor
aad
in
testb
cltd
ljmp
out
or
mov
jne
sarb
and
pop
outsl
icebp
movsl
lods
jae
push
popa
in
icebp
les
add
shrl
fldln2
jns
iret
xor
jge
sub
dec
pop
jbe
pop
jp
cld
fwait
divb
dec
daa
mov
in
test
js
mov
mov
dec
sub
es
icebp
daa
mov
cmc
inc
add
js,pt
sub
mov
dec
inc
jge
adc
ds
fdiv
lods
inc
fldcw
mov
xchg
insb
popa
sub
imul
pop
cmp
xor
push
mov
dec
jns
loop
cmp
rcr
xchg
pop
jge
shll
mov
mov
aad
mov
mov
jp
nop
xchg
call
push
bound
repz
jbe
pop
add
sub
in
out
pushf
gs
sub
push
pop
negl
pop
and
xchg
aam
icebp
sahf
mov
repnz
push
gs
ss
fisttpll
push
mov
jg
sub
mov
call
clc
jnp
sbb
jno
xor
fcmove
lret
aas
out
dec
fsts
vmovdqu
mov
push
movsb
test
aam
imul
pop
jbe
cmc
xchg
flds
or
cmc
sbb
mov
clc
mov
movsl
ds
enter
leave
rcrl
and
pop
mov
loopne
test
add
stos
add
mov
pop
out
inc
cld
add
jbe
sbbb
sbb
cmpl
jecxz
sub
and
xor
pop
inc
movsl
or
jmp
cmp
movsb
pop
sbb
cmp
add
punpcklwd
push
push
push
fidivs
cmp
add
addr16
jb
xchg
push
inc
outsb
lcall
pop
loop
dec
push
clc
fwait
push
repnz
andb
nop
nop
jle
arpl
jne
inc
mov
pop
dec
push
lods
rol
cli
add
shll
jnp
cmpsb
jbe
test
inc
testl
cli
out
insb
ret
push
int
pop
mov
push
push
cmp
cwtl
jbe
cmc
aaa
and
dec
mov
mov
jbe
shl
push
adc
cmp
cmp
mov
and
push
leave
lock
cmc
sti
dec
test
loop
jb
fwait
pop
pop
in
into
add
test
adc
xchg
daa
gs
mov
and
or
shrl
je
sbb
stos
js
inc
lods
mov
jp
sub
loopne
int
iret
sahf
pop
out
and
das
test
stc
add
neg
mov
dec
mov
xor
shlb
out
test
mov
cmp
mov
aad
and
mov
xchg
jae
xchg
inc
aas
jl
arpl
mov
dec
pop
mov
lret
or
rolb
sbb
mov
push
imul
iret
call
sbb
xor
push
xchg
or
add
pop
aaa
loop
bound
ret
lahf
jg
iret
ss
mov
and
cmc
arpl
arpl
mov
pop
jae
dec
inc
loopne
fldenv
lret
imul
fst
sbb
jno
and
dec
out
out
mov
std
mov
popf
es
adc
add
pop
sahf
ja
pop
cli
fcomps
je
adcb
imul
xchg
cmp
insb
sub
sub
mov
and
test
dec
pop
loope
inc
rcrb
sar
pop
jbe
data16
fadds
jp
jmp
nop
mov
pusha
getsec
jb
notb
dec
loopne
mov
outsb
push
xor
je
mov
mov
mov
push
pop
jne
dec
or
aad
adc
xchg
hlt
inc
imul
in
pop
dec
lcall
mov
inc
xor
jbe
mov
xchg
hlt
push
ljmp
int3
aam
sbb
mov
inc
mov
shl
push
inc
fimull
push
adc
xor
xor
add
dec
dec
out
testb
sub
jo
mov
inc
popf
lock
dec
je
xor
dec
and
cmc
lahf
adc
and
insb
mov
add
ja
scas
mov
mov
into
aas
pop
stc
jmp
and
mov
mov
mov
sbb
mov
mov
leave
xchg
es
orl
cwtl
insl
inc
push
or
pop
je
mov
dec
dec
push
lds
lea
aam
or
in
cwtl
mov
mov
mov
cmp
iret
push
mov
arpl
dec
cmp
in
push
ret
cwtl
sbb
xchg
lds
addr16
add
inc
movsl
ret
cmp
lcall
dec
repnz
clc
sbb
nop
fwait
mov
push
xor
orb
xor
enter
fdecstp
aam
shlb
stos
pop
push
imul
or
jbe
mov
cli
test
mov
sbb
fdivs
fsub
xor
or
rep
push
dec
adc
add
ljmp
and
xlat
sub
test
inc
sbb
sub
xchg
insl
orb
adc
push
outsl
xorb
mov
test
stc
clc
add
gs
in
sub
xchg
int
fisubrl
dec
lret
loope
lea
sti
jns
sub
jp
ljmp
xchg
dec
or
fwait
lea
mov
ficompl
and
jg
icebp
ljmp
sub
mov
shl
imul
je
or
pop
xchg
mov
test
lods
and
js
sub
pop
add
inc
dec
mov
incb
aas
push
repnz
xchg
out
loopne
aam
and
mov
in
arpl
fimuls
and
std
add
cmp
mov
mov
popf
addr16
aas
nop
adc
jnp
clc
fsubrs
add
jmp
mov
loope
stc
or
dec
sub
sahf
dec
popa
arpl
pop
in
jmp
imul
std
mov
in
pop
lcall
out
testb
sbb
lds
into
or
jae
cmpsl
jns
mov
ja
push
fisubrl
or
dec
js
in
sbb
mov
or
push
cmpsb
sarl
push
jne
adc
sub
dec
push
and
test
shrb
int3
test
nop
pusha
rcrl
leave
sub
pushl
dec
ss
mov
aam
shll
lcall
cld
add
roll
mov
jae
mov
repnz
inc
out
fistl
jle
arpl
adc
insb
test
lods
sbb
dec
pusha
jbe
fimuls
xchg
mov
pop
mov
xchg
lret
out
pop
mov
push
shl
fdivl
mov
mov
xchg
test
push
int
in
xchg
subb
dec
xchg
mov
push
mov
in
in
in
aam
xchg
in
dec
and
das
jecxz
imul
push
adc
or
ret
imul
cwtl
pop
fistps
shll
sub
outsl
scas
mov
fisubrs
icebp
ficomps
ds
std
adc
sub
dec
mov
push
mov
sub
jp
imul
adc
xor
add
scas
sbb
bound
xor
push
test
in
shrl
jmp
xchg
stos
stos
mov
mov
pop
mov
push
mov
xor
cmpsl
inc
out
or
outsl
js
pusha
insl
inc
pop
cld
mov
popa
push
adc
lret
ss
call
pop
out
mov
dec
mov
int
in
lods
push
test
arpl
outsl
jne
fwait
inc
pushf
push
clc
mov
jno
lock
adc
xor
xor
mov
pop
lods
or
call
inc
jecxz
enter
outsl
jp
lods
sbb
test
pop
lds
xchg
aam
aam
pop
out
xchg
xchg
push
lahf
dec
sbb
incb
iret
sub
push
rol
pop
fadds
xchg
insb
or
outsl
dec
stos
cmp
and
jns
bound
loope
or
out
lahf
dec
shr
int3
cmp
out
mov
sti
dec
mov
push
dec
repz
xor
add
jae
sbb
stos
xor
test
popa
nop
cmp
mov
arpl
sbb
sbbl
out
sub
mov
mov
jecxz
or
cmp
cli
xor
dec
insl
dec
sub
mov
push
adc
fwait
out
imul
jmp
push
dec
dec
and
pop
sub
push
mov
inc
pop
es
test
movsb
xchg
lret
sbb
test
push
xchg
nop
dec
lods
ud0
repnz
lea
int3
outsl
loope
pushf
cli
out
dec
xchg
gs
xchg
popf
sub
insl
mov
out
dec
ret
aas
xchg
mov
insl
add
mov
push
in
test
in
mov
xor
pop
sti
inc
jp
shlb
mov
jae
cmpsb
out
mov
movsb
mov
out
out
sbb
pusha
outsb
pop
es
rcrl
or
imul
cltd
scas
aas
lock
mov
add
sub
in
push
out
jg
mov
mov
jmp
push
pop
ret
sbb
sub
jbe
inc
pcmpeqw
pop
push
ficomps
call
push
fldenv
mov
fisubs
pushf
xchg
xor
or
fistl
pop
xor
sbb
dec
lcall
or
ja
ja
mov
sbb
push
js
xlat
cmpsb
inc
pushf
lock
enter
mov
jecxz
dec
subb
cmp
push
pop
lds
inc
and
mov
jne
or
call
cli
mov
jns
pusha
add
sbb
xlat
int
pop
push
ficompl
pop
jmp
test
shrl
sub
xor
andl
and
dec
jg
mov
add
or
pop
mov
loopne
aaa
jae
movb
cld
pop
inc
dec
incb
add
les
aaa
lock
mov
sbb
or
stos
mov
jg
in
cs
imul
in
lock
inc
pop
and
inc
inc
jecxz
ljmp
out
movl
dec
pop
and
push
outsl
push
lock
jecxz
repnz
fcmovnbe
mov
movsb
and
into
inc
out
cmp
js
cmp
out
and
insb
imul
fcomi
das
cmp
in
dec
pop
adc
rclb
or
dec
inc
jp
ljmp
mov
ljmp
mov
pushf
push
ds
aas
and
sahf
adc
mov
nop
dec
sti
outsb
call
jp
xor
mov
shll
push
xor
pop
cmc
shll
lahf
or
xor
pop
sarb
ja
pushf
das
or
or
pop
dec
sahf
sbb
iret
sub
call
add
fcom
loop
sub
out
push
and
push
and
or
in
sahf
fs
out
mov
mov
cltd
cmp
aaa
jb
jnp
xchg
push
int
inc
cmp
push
mov
adc
adc
loopne
inc
push
lcall
icebp
sub
std
push
mov
sub
mov
xor
stc
lock
out
test
push
jo
mov
clc
xor
and
int
pop
pusha
sub
dec
push
jno
jmp
dec
jp
test
xor
dec
jne
jne
xor
mov
inc
lret
pop
mov
cs
lods
pop
sbb
scas
lods
push
jb
jmp
fstps
std
and
sti
out
push
bound
jle
jns
hlt
or
cmpsl
iret
dec
mov
jecxz
aad
jp
leave
jns
xorb
fidivl
xlat
movsb
loope
mov
mov
sar
or
push
clc
fistps
mov
inc
gs
pop
into
push
sub
sbb
inc
mov
popa
pop
iret
cmp
js
in
imulb
int
cld
test
jno
int
jb
mov
test
mov
std
loop
sbbl
rcl
andb
mov
pop
lahf
xor
fpatan
in
push
or
and
aas
pop
je
mov
or
inc
ror
inc
rolb
dec
lods
mov
in
add
xor
out
jb
cltd
lret
out
rclb
shr
mov
lods
imul
adc
mov
movq
sbb
xor
lods
pop
mov
pop
popa
xor
cmp
pop
mov
repnz
clc
and
mov
in
gs
clc
call
sbb
sub
sub
jnp
push
test
test
enter
aas
repnz
pop
jbe
out
xchg
mov
rcrb
jmp
inc
jno
cmc
mov
stos
orl
fwait
pop
clc
das
cmp
mov
add
fdivrl
pop
xor
jge
add
lods
inc
rclb
xchg
aas
adc
fldl
push
sarb
push
mov
int
test
stc
mov
sbb
mov
dec
mov
data16
add
push
sbb
mov
xor
lret
fstps
mov
adc
mov
in
adc
ficoml
loopne
hlt
mov
leave
ret
pop
popf
nop
adc
stos
xor
sti
xor
and
cmp
or
pop
outsl
fcmove
sub
test
pushf
or
jno
clc
insb
push
mov
inc
fs
mov
fcmovu
jbe
sbb
imul
repnz
rolb
sarl
xlat
mov
sub
jg
mov
cmp
lods
aaa
pop
sti
test
into
fldenv
pop
cltd
or
popf
repnz
daa
xchg
push
jl
repz
jg
test
decb
xchg
push
pop
xor
pop
cmpsb
fsub
rcll
pop
lods
sbb
push
cld
inc
mov
scas
jbe
dec
sub
add
fwait
xchg
push
jnp
aas
hlt
xchg
pop
lds
mov
pop
xchg
mov
jl
fisubrl
xchg
xchg
mov
mov
lret
xor
fs
je
xor
mov
rcll
sbb
jae
inc
inc
adc
xchg
mov
popl
sti
pop
xchg
pop
jno
lea
fcmovne
pop
out
das
popa
mov
mov
push
das
fsub
daa
cli
call
dec
add
nop
and
in
arpl
bound
dec
loopne
jbe
mulb
fisubrl
sar
and
pop
in
add
mov
xor
pop
add
outsl
js
ljmp
mov
jbe
jle
jle
test
arpl
pusha
out
stc
mov
cmc
and
pushf
ret
or
and
add
push
and
adc
out
mov
in
xchg
not
or
and
lea
mov
mov
stos
or
pop
fisubl
dec
sti
or
mov
fdivrs
cld
testb
dec
or
push
imul
jne
cwtl
leave
icebp
aaa
mov
test
mov
dec
rolb
inc
test
int
adc
stos
and
cmp
dec
out
cli
jp
test
sti
xor
pop
cwtl
xchg
and
sbb
jo
jo
push
arpl
notb
cli
xor
cs
push
or
lahf
rcl
xor
stos
dec
in
xor
es
jbe
pusha
dec
xlat
pusha
sub
addr16
daa
push
inc
mov
aam
repz
fisttpl
and
dec
or
es
sub
mov
add
cs
and
pusha
cmpsl
mov
lret
cmp
sbb
dec
pop
mov
or
inc
lret
jg
jae
call
push
ficoml
ja
test
shlb
dec
loope
sarb
jp
add
aad
insb
ret
mov
iret
fsub
repnz
ret
jle
sub
int
fdiv
sub
adc
pop
stos
call
int
ljmp
movsl
insl
add
loopne
mov
std
xchg
push
inc
fmul
cmpsl
inc
scas
pop
movsl
cmpsb
roll
test
fdivrl
mov
xchg
mov
pushf
mov
push
xor
mov
and
loopne
inc
insl
dec
cmc
outsb
scas
cmp
or
mov
push
cmp
push
repnz
popf
sub
jp
dec
xchg
lret
xor
adc
mov
dec
mov
push
add
popf
xchg
lods
pop
pushf
out
frstor
dec
imul
fdiv
cs
push
and
mov
rcrb
js
lods
mov
mov
leave
das
ljmp
scas
xchg
xchg
stos
xor
dec
test
mov
sbb
bound
mov
add
jle
nopl
negb
into
cld
daa
lahf
inc
jb
testb
je
loope
push
mov
int3
out
pop
cs
push
pop
mov
dec
daa
aad
xchg
imul
cli
xchg
shrl
cmp
clc
mov
jg
xor
mov
pushf
div
cmp
push
push
ja
cli
push
cld
push
dec
push
jo
sbb
add
ret
arpl
cmpsl
faddp
cwtl
mov
and
call
push
and
stc
fdivrl
popa
lods
popf
ret
inc
and
adc
iret
adc
cmpsb
sub
ret
jne
stos
stos
outsl
dec
cli
add
fwait
lods
in
test
jb
inc
stc
das
dec
xchg
push
inc
sub
sub
sahf
cld
add
subl
dec
jo
jb
inc
push
pop
push
call
xor
and
inc
sbb
add
inc
dec
and
mov
hlt
and
push
pop
pop
call
out
mov
sti
movsb
add
sbb
push
pop
in
xchg
lods
jecxz
dec
cli
or
mov
int3
adc
clc
mov
repz
inc
loopne
shlb
xchg
enter
loope
lret
in
fidivs
int3
and
adc
aaa
xchg
push
stos
jecxz
bound
and
add
and
popf
cmp
insb
popa
fmuls
mov
aas
sahf
cmp
popf
pushf
imul
mov
mov
cltd
jle
and
dec
test
in
ret
rcrl
and
jnp
je
mov
mov
pop
or
pop
push
fimuls
ror
xor
lock
dec
sbb
notl
jae,pn
jle
mov
rcll
lea
ja
adc
push
pusha
fstl
push
loop
imul
sbb
or
cmp
sub
pop
test
pop
lea
pop
fdivrp
in
repz
inc
adc
pop
aam
rol
hlt
aaa
adc
adc
cltd
in
and
out
xor
lock
cmpsb
dec
imul
cmp
jno
repz
jle
pop
adc
xchg
imul
mov
and
inc
inc
hlt
stos
mov
outsb
push
push
leave
pop
adc
jl
movsl
insb
jl
mov
hlt
xor
mov
out
je
mov
fiaddl
dec
and
or
mov
dec
xchg
adc
dec
fmull
add
scas
rol
fsubs
outsl
and
arpl
mov
sahf
mov
ds
es
add
mov
dec
mov
dec
adc
mov
mov
stc
cmc
mov
xchg
adc
ljmp
jge
pop
out
sub
aaa
sub
arpl
pushf
xchg
popa
mov
dec
int
outsl
stc
sbb
mov
les
stc
xor
cmp
jmp
or
loope,pt
sahf
aaa
ret
pop
add
xor
xchg
addl
out
pop
and
movsl
pop
sahf
sbb
repnz
and
jmp
mov
jge
out
andb
pop
sub
jmp
sti
je
sub
lret
in
bound
out
xchg
aam
fwait
cmovl
jb
stos
mov
xchg
scas
stc
sub
stos
xchg
idiv
les
jne
ss
in
fs
jnp
cmp
inc
push
jg
es
fcmove
in
inc
aad
push
lcall
lock
adc
mov
pusha
test
mov
cmp
rorb
dec
xchg
cltd
ret
es
stos
cld
sbb
insl
pusha
jnp
mov
je
movsb
jnp
push
and
clc
insb
cltd
sbb
mov
pop
dec
test
enter
enter
hlt
decl
lcall
cmpsb
mov
lods
jl
mov
pop
xor
outsl
arpl
xchg
pop
or
movsb
adcl
add
jae,pt
sub
dec
incb
enter
fmul
inc
cmp
mov
int3
out
ror
jbe
jp
push
arpl
xor
inc
std
mov
mov
movsl
jg
insb
test
or
xorb
pop
pop
sub
icebp
out
stos
rolb
loope
lods
dec
inc
lods
ret
insl
sarl
mov
mov
popf
das
call
fcoml
push
out
lds
jl
lcall
jg
roll
sbb
testl
cli
orb
jle
push
ficompl
pop
test
xchg
ss
mov
mov
adcb
fstps
lret
mov
mov
sub
out
dec
push
mov
out
inc
or
add
adc
and
jp
mov
leave
lods
xor
mov
and
fimull
stos
mov
fbld
cmpsl
xor
clc
mov
and
fistpll
ret
sahf
adc
jo
and
mov
adc
jno
pusha
mov
dec
sbb
fildl
mov
mov
jns
imul
pop
xor
fsubrs
mov
sbb
aaa
cmp
aaa
push
mov
xor
cs
xchg
out
mov
imull
sub
in
movsb
xchg
mov
and
call
push
arpl
and
sub
imull
and
mov
mov
inc
xor
adc
popa
aam
mov
inc
adc
jbe
sub
and
sub
mov
xor
call
sahf
inc
es
gs
ficomps
mov
sti
test
mov
pop
push
fbstp
dec
cltd
mov
loope
ret
shll
stos
sbb
ret
movsb
adc
fildll
in
push
jbe
out
inc
and
inc
pop
sub
fdivrs
lods
and
out
lock
sub
sahf
push
loopne,pn
pop
cmpb
cmpl
nop
rol
or
insl
andps
repnz
decb
test
mov
jge
xor
mov
jb
and
xor
loop
xchg
cmpsl
outsb
mov
dec
inc
cmp
pop
inc
movsl
loopne
aam
push
bound
or
bound
inc
fisubrl
xchg
cli
out
shl
adc
andl
nop
fwait
repz
nop
mov
adc
push
test
cmpb
test
jae
cmp
jge
in
std
scas
ret
mov
icebp
out
and
sbb
inc
ret
mov
xor
pop
nop
sub
dec
outsb
test
scas
lahf
sbb
xor
pop
mov
mov
hlt
js
idivl
pop
icebp
das
popf
cmp
mov
cmp
mov
jmp
aam
loopne
ret
sbb
popl
test
cmpsb
fidivl
push
pop
pushf
cmp
add
mov
inc
pop
int3
and
jns
lret
sub
xchg
sub
sbb
ljmp
pop
fsubr
scas
mov
stc
inc
push
stc
push
jge
es
inc
inc
dec
cs
pop
cmp
dec
sub
pop
push
xor
jle
xor
adc
popf
jne
mov
out
dec
xchg
in
mov
sbb
jle
in
mov
sbb
xor
ja
mov
push
jnp
icebp
into
std
icebp
adc
arpl
aas
push
jbe
or
jno
pop
pop
jae
or
negl
pushf
movsb
orl
push
dec
push
nop
pop
test
cmc
cmpsl
jecxz
ljmp
stc
mov
fwait
add
int3
fwait
or
sar
xchg
sahf
pop
aaa
jbe
fcmovnbe
stc
fmul
jp
out
xor
cltd
xchg
cmp
lods
dec
dec
pop
mov
jae
jne
data16
xchg
scas
jb
add
hlt
into
sbb
mov
rcr
and
stos
pop
push
mov
xlat
dec
adc
out
cmc
testb
mov
and
add
pop
xor
fldt
sub
or
test
adc
ja
in
push
daa
test
movsb
pop
sbb
jg
decw
inc
inc
shrl
ds
test
push
pop
lcall
cmp
pop
data16
cmc
adc
xorb
push
xchg
or
int
push
sub
cmp
mov
arpl
xor
add
pop
out
add
scas
outsb
or
out
rcr
mov
xchg
repz
fistl
mov
enter
push
jge
pop
sbb
sarl
mov
xchg
pop
cmp
inc
js
mov
fs
std
call
repz
xchg
add
pop
mov
cwtl
js
inc
addr16
adc
lcall
addr16
push
mov
ret
out
inc
push
dec
pop
push
fmul
dec
gs
cmpsl
and
imul
jecxz
jbe
jb
pusha
clc
stc
sub
nop
push
ds
in
dec
jp
push
dec
dec
ja
je
push
pop
push
sub
add
rorl
dec
add
mov
das
xchg
pushf
add
sub
movsb
push
mov
rcr
adc
movsl
jo
pop
jo
stos
add
out
push
mov
and
jp
or
stos
sub
and
scas
stos
jg
xor
and
xor
cmp
jl
mov
sub
hlt
mov
pusha
mov
jae
dec
stos
sub
inc
sbb
mov
mov
popa
mov
inc
stos
cmp
xchg
xor
std
rolb
inc
mov
dec
cmpsl
shlb
pop
popf
cmp
push
negl
test
stos
xchg
sub
adc
fdiv
lods
mov
mov
pop
xlat
cmp
push
fiadds
pop
andl
cmp
call
pop
lea
jnp
xor
sbb
in
adc
fisubs
jmp
js
outsl
jo
xor
mov
push
jbe
push
mov
push
push
test
cmp
pop
lret
divb
call
pop
sbb
in
mov
push
scas
pop
sahf
cli
jo
pop
jecxz
je
sub
cmp
je
imul
aam
pop
je
mov
lock
int3
xchg
and
pushf
jae
lea
int
sub
xchg
xchg
daa
gs
sub
movsb
jbe
movsl
popf
aam
inc
les
xor
cltd
jb
idiv
mov
push
daa
insb
and
and
cwtl
mov
push
dec
xlat
cmc
imul
es
sarl
cmp
cmp
xchg
popa
les
sub
sbb
lcall
mov
push
fcmovu
mov
iret
leave
xchg
movsl
pop
sub
mov
xchg
pop
mov
mov
xor
lock
adc
sub
mov
out
dec
dec
gs
pushf
outsl
push
data16
pop
insb
cs
dec
push
in
jecxz
mov
jmp
outsl
sbb
push
dec
push
aam
xor
or
xchg
fsubrl
or
adc
inc
cmpsl
in
and
popa
bnd
or
mov
clc
sub
cmpsl
test
sbb
insl
repz
popl
iret
add
clc
xchg
pop
mov
mov
bound
sub
scas
mov
add
dec
sahf
cmpsb
rorb
lock
les
mov
je
or
mov
jne
mov
les
or
ret
ret
test
xchg
das
or
pop
insb
adc
mov
lods
xchg
fdivrl
xchg
add
aaa
inc
mov
ljmp
lds
imul
pop
or
mov
push
inc
pop
inc
mov
ljmp
das
imul
stc
repz
rorl
aad
rolb
sub
jle
loopne
leave
add
fcomps
fcmovnbe
in
sbb
cmpsb
outsl
jmp
scas
xor
add
pusha
shrl
sub
lea
mov
mov
imulb
leave
test
bound
or
pusha
in
jno
sub
and
testl
and
sbb
push
scas
je
add
xor
das
sub
outsb
jae
mov
inc
mov
cmc
mov
cmc
xorb
imul
and
inc
or
sahf
shl
outsl
xchg
cmpsl
pop
mov
mov
push
mov
pop
lods
jle
loopne
subl
jo
cmp
jmp
mov
sahf
cld
pop
mov
outsl
lock
sbb
jo
sbb
popf
add
xchg
into
rorb
cwtl
mov
lcall
imul
mov
xor
mov
sbb
cli
imul
scas
popf
xchg
mov
dec
jnp
daa
lahf
push
ljmp
out
pop
pop
or
jns
jno
mov
pop
cwtl
cltd
pop
fstps
dec
xchg
fsubs
aad
inc
aam
pop
fwait
mov
ja
movsb
out
xchg
mov
cmpsl
xorl
inc
pop
popa
pop
clc
adc
out
jge
jb
pop
addr16
in
lret
ljmp
scas
push
xchg
cmp
pop
scas
lret
test
std
aaa
inc
xchg
shrl
decl
in
dec
lods
out
outsb
movsb
ds
inc
mov
in
xchg
mov
or
clc
dec
jg
mov
aas
xor
jp
out
push
cli
je
lcall
inc
popf
in
loope
cmp
add
inc
sbb
xchg
and
in
push
xchg
cmc
cmp
dec
daa
daa
fsubrs
lods
inc
push
mov
int
xchg
aam
push
test
mov
mov
cmp
cmpsb
dec
fstps
sub
fwait
shll
in
xor
push
into
jns
in
cmp
mov
inc
jnp
mov
loopne
in
and
xchg
jge
das
test
adc
andb
xchg
jp
jmp
cmp
test
jbe
sub
xchg
rcrb
lahf
jl
adc
sub
adc
mov
aam
in
xchg
lahf
jl
pusha
sub
adc
dec
and
sbb
test
rcr
inc
sub
jae
adc
mov
fs
inc
sbb
sub
lds
outsl
mov
scas
sbb
xchg
adcb
mov
mov
push
cld
or
shrb
icebp
push
cmc
push
mov
cmp
xchg
dec
sbb
pop
fcoml
cmp
ds
inc
in
mov
inc
inc
mov
pop
out
mov
jecxz
inc
jecxz
adc
mov
stc
idivl
test
mov
addb
sbb
jo
insb
mov
shr
add
ja
sub
insl
jno
dec
sbb
out
jbe
cmp
clc
xchg
mov
lea
mov
les
push
outsl
xor
mov
outsl
addr16
cmpsl
icebp
and
das
in
mov
sete
xor
mov
lock
mov
xchg
jb
lret
pop
dec
aaa
out
enter
adc
mov
rorl
push
sub
adc
insl
jb
jno
test
push
dec
pop
xchg
sub
mov
das
jecxz
push
xchg
mov
mov
and
lds
das
in
test
pop
jnp
movl
shrl
sub
or
lar
adc
add
adc
adc
int3
fwait
and
lret
and
push
mov
fwait
icebp
ret
aas
ljmp
stos
xchg
push
pushf
lea
loope
hlt
aam
jg
shlb
sub
push
scas
into
jecxz
xchg
mov
ss
sub
mov
rorl
adc
jns
clc
sub
sbb
or
mov
in
pop
push
push
daa
xchg
mov
inc
hlt
fs
pop
gs
sti
stos
and
lds
push
xchg
pop
gs
aaa
fldcw
gs
xlat
fisubrl
xchg
insl
out
repz
fadd
fistpll
in
cmp
adc
sub
popf
divb
enter
popa
scas
cmc
test
shl
shlb
mov
mov
int3
and
ret
inc
sarl
test
lods
enter
xor
mov
iret
mov
adc
adc
sbb
clc
aad
push
push
adcl
pop
es
pusha
call
icebp
and
jae
mov
jae
add
mov
sbb
or
sbb
inc
mov
pop
inc
ja
pushf
xor
test
incl
loop
add
sbb
jno
lcall
dec
dec
add
inc
test
pop
out
dec
aaa
in
xchg
xorl
aaa
test
in
jno
and
or
loop
adc
mov
xlat
out
jp
gs
lret
mov
out
jo
add
roll
sbbb
in
insb
mov
out
sti
pop
mov
insl
ds
sub
inc
movsl
stos
sub
mov
sub
push
xchg
jno
xor
sbb
hlt
jle
je
and
addr16
movsl
dec
inc
cmp
inc
insl
inc
push
xor
mov
mov
add
inc
ds
sbb
xor
mov
nop
dec
roll
jecxz
cmp
inc
mov
scas
adcb
mov
lods
mov
clc
mov
stc
or
dec
cmp
jae
ret
sbb
gs
test
out
aam
xor
fimuls
mov
inc
pop
popf
dec
adc
or
jb
mov
enter
sbb
ret
mov
pushl
adc
push
mov
xchg
mov
movl
mov
icebp
and
mov
sub
inc
xchg
cmpsl
jge
dec
imul
mov
pop
jb
inc
dec
push
jae
call
mov
fsubr
dec
and
aam
data16
iret
or
fcmovbe
xchg
mov
xchg
loop
or
ffreep
fistps
lods
inc
lods
imul
dec
adc
hlt
sub
sti
dec
or
pop
xor
call
mov
pop
into
mov
scas
in
xchg
ja
pop
shll
stc
push
xor
popa
js
sbb
lods
leave
mov
push
pop
mov
add
adc
pop
push
cmpsl
imul
movsl
fadds
ret
shll
pop
mov
lahf
mov
loopne
push
lods
shlb
lret
jp
fdivrs
fs
jae
adc
mov
lods
fwait
idivl
xchg
fstpl
jae
jbe
test
popf
push
lea
mov
gs
jle
fbstp
fisttps
jne
mov
in
sbb
shlb
orb
aas
hlt
orb
bnd
jno
push
jp
sar
mov
movsb
inc
and
push
add
pop
cmp
rcl
mov
fsubs
inc
idivl
dec
mov
and
je
shl
inc
addr16
jb
outsl
mull
or
xor
int
iret
jnp
xchg
cli
aas
jno
sub
or
pop
subb
and
adc
xchg
mov
scas
mov
loopne
pusha
leave
xor
insl
push
jge
adc
lcall
push
fisubs
dec
fsubrl
incl
test
sbb
sub
ss
xor
and
jecxz
or
testl
fimull
inc
jmp
xor
icebp
lret
mov
mov
aam
cmpsb
fiaddl
in
or
imul
push
or
jae
rolb
cmpl
jb
stos
mov
cmp
popa
popf
sahf
mov
jns
ret
xlat
jecxz
pop
lret
dec
repz
imul
lret
or
xor
adc
cmp
mov
pop
xchg
add
ss
loop
and
rolb
arpl
xchg
popa
fldt
jae
popf
pushl
pop
fidivrs
jmp
pop
into
add
push
inc
mov
pop
mov
mov
jecxz
icebp
ret
daa
stc
js
loopne
sti
lret
in
loope
pop
sub
inc
std
loopne
jp
xlat
imul
rcrb
fsubr
lret
lock
mov
jnp
push
jae
data16
or
jo
mov
lock
sbb
lods
jo
lret
inc
movsb
push
shrb
dec
sub
stc
mov
out
mov
je
repz
aam
sbbb
out
or
ret
mov
xor
jne
rorl
xchg
out
xor
testl
aam
and
ss
and
xchg
outsb
dec
lahf
pop
xlat
pop
jle
cmc
xchg
ja
sahf
dec
mov
push
sub
add
into
popf
adc
pop
xchg
jmp
xchg
pop
into
pop
pop
mov
outsl
movsb
push
jmp
mov
in
jnp
outsl
and
and
inc
or
rol
aad
push
incl
cmpb
push
sub
loop
dec
mov
sub
bound
and
inc
xchg
lock
xor
mov
jo
push
dec
dec
ret
loope
sti
stos
dec
dec
pop
addr16
mov
incb
mov
les
cmp
shlb
inc
pushf
loope
test
add
sub
inc
sub
or
mov
push
mov
mov
or
dec
cmpsb
sbb
mov
jp
les
mov
lea
push
mov
lds
xor
dec
lret
mov
decl
test
sbb
ljmp
loopne
add
xchg
je
lret
es
pop
mov
ret
mov
lcall
push
ds
pop
imulb
ljmp
nop
sbb
pop
mov
lea
mov
ss
jle
lahf
cwtl
pop
pop
or
pop
sti
out
xor
ret
dec
in
cltd
test
popf
dec
lea
out
add
hlt
dec
loopne
in
xchg
sub
adc
decl
inc
js
xor
std
fnstsw
es
and
test
jbe
xchg
out
iret
inc
adc
insb
cmc
iret
cmp
sub
cltd
jb
movsb
cmc
mov
rorl
sub
inc
xchg
or
outsl
push
mov
faddl
movsl
pusha
lea
jmp
jo
jns
adcb
fstl
and
sub
or
xorb
cld
mov
jns
ss
leave
popa
adc
mov
xor
mov
adc
dec
sbb
mov
daa
sbb
sub
sbb
add
shrl
cmp
iret
jbe
lds
fisubl
inc
fcompl
shlb
lock
movsb
sbb
dec
sahf
ds
xchg
xor
pop
cwtl
stc
aad
js
pop
nop
xor
xchg
insb
adc
lret
xor
jae
push
mov
dec
out
sbb
adc
mov
jne
incl
xchg
push
adc
inc
add
push
xor
inc
dec
cmp
repz
adc
loope
pushf
mov
lahf
lock
les
mov
sub
jo
mov
hlt
lods
shlb
cmpsb
xchg
inc
cwtl
or
and
insb
push
mov
add
shrl
dec
into
rcrl
jno
push
or
dec
or
xor
mov
fxch
xchg
inc
loop
xchg
daa
sbb
imul
push
mov
dec
loopne
add
jo
into
push
fdivl
fwait
ljmp
xchg
jae
rol
sbb
ja
pop
sar
notl
xchg
xchg
cmpsl
das
icebp
sbb
aam
mov
fs
mov
or
stos
add
xor
dec
or
iret
xchg
sbb
push
inc
push
pushf
js
jmp
pop
add
cld
stos
test
lcall
inc
test
mov
cmp
mov
add
push
aad
arpl
ret
and
dec
adc
out
addb
test
out
stc
into
clc
cwtl
mov
add
xchg
xchg
xchg
sub
dec
daa
loopne
inc
mov
sub
push
push
enter
std
pop
jge
sbb
add
js
cld
orb
and
and
incb
mov
insb
pop
out
push
mov
call
hlt
inc
push
leave
movsl
jge
dec
push
mov
popf
xchg
cwtl
pop
cmp
inc
jl
fadds
mov
sahf
daa
psubd
out
mov
dec
lea
jp
in
push
movsl
and
ljmp
js
loopne
push
cmp
scas
mov
jb
jmp
mov
lret
sub
mov
mov
gs
push
xchg
xlat
lods
xchg
cmpsl
mov
sbb
sbb
sub
in
insl
push
xchg
and
fidivl
mov
jp
sbb
shrl
ljmp
xlat
mov
decb
adc
lods
jl
dec
mov
in
dec
das
aam
andl
sbb
sub
push
clc
cmp
add
mov
fmull
push
arpl
jecxz
outsl
icebp
inc
in
lods
mov
movsb
jmp
stos
lods
ret
into
ja
stos
out
xchg
arpl
or
jne
sarb
adcb
push
add
pop
cltd
lods
push
mov
stc
sub
pop
dec
insl
inc
ret
stos
inc
xchg
adc
popf
roll
jno
inc
orl
add
jg
das
mov
lret
adc
jg
mov
jl
syscall
cmp
dec
mov
fcmovnbe
inc
aas
daa
xor
jp
lret
pminub
or
fmuls
fmuls
and
jmp
sbb
xor
sbb
push
in
push
xor
pop
sarl
cli
lods
adc
das
sbb
push
adc
adc
pop
or
dec
das
xchg
imul
adc
movsl
inc
outsb
movsb
imul
test
sub
andl
push
pop
xor
in
xchg
xchg
lods
in
add
ret
mov
pusha
xchg
bound
sbb
dec
lret
cmp
mov
push
cmp
fsubrs
inc
mov
dec
in
addr16
aam
xchg
call
bound
sbb
repnz
das
add
xlat
jne
and
dec
mov
adc
outsl
lds
enter
fwait
mov
xchg
mov
sub
mov
dec
jne
les
sbb
xor
ljmp
notl
xor
inc
or
in
test
jl
cmp
cmp
push
mov
or
push
scas
les
and
in
cmpl
dec
scas
xchg
or
mov
sub
or
adc
and
decb
out
mov
in
mov
pop
and
mov
jle
sbb
data16
fs
pop
mov
in
xor
test
bound
daa
nop
sti
icebp
pusha
into
push
jmp
repz
dec
les
mov
jnp
stos
cli
dec
cmp
lret
jmp
push
jp
ds
rclb
cmp
inc
pop
popf
cmp
test
xchg
pop
lods
mov
dec
loope
inc
out
repnz
in
int3
jo
movsl
push
mov
sbb
pop
lcall
imul
shrl
jo
out
adc
js
cli
dec
enter
sbb
mov
fwait
sub
jbe
rcll
sbb
faddl
pop
cmp
mov
sub
data16
push
inc
and
push
insb
xchg
and
in
or
cmp
into
mov
jo
push
dec
lret
xchg
mov
cmp
sub
inc
rclb
and
inc
xchg
sarb
lret
hlt
cs
cmp
inc
inc
cmc
pop
jbe
faddp
test
cmp
lods
add
cltd
jns
xor
jne
inc
out
lret
pop
les
inc
sub
xlat
popa
and
loope
outsl
xchg
xchg
mov
adc
jmp
pop
push
pop
stos
std
push
add
fiadds
pushl
ja
xchg
mov
insl
dec
jle
sbb
jne
int3
sbb
fcoms
or
les
mov
es
pop
lahf
popl
mov
pop
in
mov
imull
in
push
xchg
das
push
out
rclb
stc
jp
or
daa
inc
movsb
mov
lret
sbbb
dec
xchg
in
aad
je
test
dec
jmp
add
cmc
inc
mov
cmp
int3
push
pop
add
iret
dec
pop
in
xor
push
pushf
hlt
lds
lret
add
jg
in
mov
adc
dec
pop
or
fisubrl
push
shll
shlb
and
cmp
cltd
dec
ret
sub
or
sbb
call
push
or
xor
hlt
dec
popl
push
push
mov
sub
xchg
lods
add
fcompl
mov
sbb
std
jecxz
dec
clc
in
cmpsb
lods
mov
jp
adc
lcall
inc
negb
jbe
xor
jbe
pop
push
or
dec
xchg
and
and
js
loopne
int
mov
aam
movsb
std
addr16
mov
das
rol
cli
ds
je
mov
dec
adc
add
or
sub
jno
mov
inc
cmp
out
dec
test
jge
pop
jg
xchg
mov
rcrw
mov
ja
xor
add
jl
mov
icebp
lahf
or
push
jns
cmp
sahf
or
fidivrl
mov
sahf
outsl
xchg
and
xor
in
lret
dec
cmp
pop
pop
fmuls
shr
and
pop
fnstcw
movsb
or
cmp
add
xor
add
dec
enter
mov
int3
mov
mov
mov
adc
adc
std
dec
lds
imul
push
callw
xor
jns
call
inc
xchg
in
mov
fcoms
addr16
test
push
in
cmpsl
mov
and
sub
dec
loope
xor
cmc
mov
repz
out
pop
fldcw
es
jo
mov
cmp
bnd
jbe
inc
lds
mov
push
incl
repnz
xchg
sbb
sarb
mov
cmpsb
mov
sbb
mov
rolb
mov
adc
fisubrl
sub
mov
mov
push
jl
mov
mov
bound
or
and
fcompl
jo
or
mov
mov
pop
inc
jge
pop
jg
in
fisubs
dec
fsubrl
mov
sti
or
leave
mov
fstl
pslld
ret
in
fdiv
cmp
xor
lds
in
adc
xchg
rol
and
mov
lcall
pop
jmp
movsb
out
or
data16
ret
jl
adc
inc
fistpl
fdiv
lahf
fs
repz
pop
cmpsl
and
inc
rcr
and
lcall
mov
bound
dec
ret
ds
mov
mov
mov
sbb
aaa
shrb
in
or
dec
cmp
or
sbb
aam
add
aam
rorl
fistps
mov
rcrb
and
fisubs
pusha
mov
in
and
push
sub
xor
icebp
or
adc
and
sub
js
into
in
inc
movsb
inc
fcomp
divb
adc
push
into
aas
pop
mov
inc
in
sbbl
arpl
xlat
aaa
mov
xor
inc
test
fsubrs
popf
faddl
jmp
mov
cmp
cmp
sbb
pushf
loopne
icebp
shl
test
sub
cmp
push
lods
push
mov
xor
sub
stc
fistpl
adc
xchg
mov
dec
idivb
jo
test
mov
out
dec
mov
mov
xchg
lret
and
xor
dec
jnp
sbb
xor
daa
js
push
xchg
test
test
shlb
mov
in
xor
shrl
iret
cmc
push
lret
and
dec
lock
test
repnz
lahf
jp
adc
outsb
xor
mov
push
sub
mov
fcompl
cmp
out
js
orl
ss
mov
push
adc
test
js
xor
add
aam
and
sarb
or
scas
sahf
inc
dec
or
or
or
sbb
sbb
rep
push
and
mov
jae
mov
mov
xor
in
shrd
sarb
daa
sahf
sub
inc
call
add
bound
mov
in
push
push
and
mov
rolb
cwtl
into
popa
pop
adc
insb
fiaddl
mov
into
lock
xor
jb
dec
ljmp
ret
mov
xor
cmp
aas
cli
inc
ficomps
mov
dec
jmp
push
ret
out
fildl
je
cs
mov
push
mov
cmpsb
jnp
ds
xchg
sbb
adc
cld
adc
push
shrl
xchg
inc
pop
outsb
push
push
push
fs
faddl
push
stc
push
push
imul
in
add
pusha
fcmovbe
je
mov
jo
dec
stos
fcmove
and
cmpb
es
pushf
jecxz
stos
imul
stos
inc
repz
out
push
lret
push
xchg
out
mov
test
setg
scas
pushf
dec
mov
xchg
push
inc
xchg
push
out
negb
inc
sbbl
sub
sti
dec
dec
or
lods
mov
stos
cmp
test
jmp
mov
pop
jmp
inc
and
xchg
ror
dec
xor
mov
push
mov
incb
xchg
loopne
xor
add
movsl
pop
sub
xchg
jmp
ds
sbb
shl
or
xor
mov
pop
sub
xor
nop
in
icebp
inc
adc
cmp
sbb
or
in
cmc
mov
push
push
jl
or
mov
adc
jg
out
cltd
outsb
std
push
xchg
xchg
xchg
and
shr
inc
xor
dec
inc
out
aad
leave
jge
pop
sbb
pop
jbe
pop
fidivrs
out
pop
dec
je
mov
fbld
jbe
psllq
call
jge
ror
das
cwtl
hlt
or
mov
mov
cs
lds
mov
lret
je
bound
jne
outsb
fcoms
inc
cmove
cmc
pop
lcall
sbb
jne
jl,pn
push
ficoms
sub
sbb
cmp
mov
jge
pop
jae
lret
xchg
repnz
add
xchg
jnp
jb,pt
add
and
sub
or
jnp
cltd
lret
sbb
sub
stos
insb
std
lret
and
cs
orl
mov
shll
arpl
rcll
scas
jmp
cmpsb
sbb
stos
stc
lret
dec
addr16
mov
out
stos
add
mov
mov
jae
addr16
inc
inc
or
inc
rcrb
ja
add
sti
cmp
leave
jne
nop
loop
dec
ret
pop
pop
loope
fs
push
sub
push
dec
jp
hlt
pop
pusha
fwait
loopne
mov
sbb
mov
and
cmp
jb
pusha
sub
pop
push
dec
pop
dec
jnp
mov
fisubrs
lahf
fcmovu
rcrl
and
incb
iret
jge
xor
adc
sahf
pop
mov
mov
push
cli
and
xor
arpl
xor
push
jae
xor
stos
cmp
push
clc
push
and
fadds
dec
dec
push
mov
xor
stc
jp
pop
jle
fistl
out
cwtl
ret
push
gs
ds
sub
or
pop
adc
xor
push
lods
ljmp
fidivl
jne
fwait
jbe
mov
mov
stos
rcrl
les
cmp
pop
xchg
dec
dec
adc
dec
shl
or
fimull
rclb
mov
cmp
lock
jo
pop
xchg
add
pop
dec
add
ja
fldcw
lret
aam
subb
mov
adc
aam
pop
lds
cwtl
mov
int
cmp
adc
inc
cmc
out
sbbl
sbb
out
jle
pusha
pushf
jle
jnp
cmp
mov
pusha
cmp
jnp
fucomi
sub
xchg
and
adc
xchg
ljmp
mov
imul
mov
xchg
push
jle
inc
jge
popa
jg
add
inc
mov
push
fstpt
xor
mov
daa
stos
jl
or
jne
fcomps
mov
push
rcrb
mov
sbbb
sub
and
lret
outsb
adc
cmc
mov
ds
scas
mov
add
pop
xchg
cs
xor
push
fsts
inc
mov
fisubs
push
jno
jecxz
pop
popa
inc
cmpsl
cmp
mov
arpl
imul
jp
mull
insl
mov
sub
insb
cltd
jg
iret
push
sub
int
sub
pop
inc
mov
sub
divl
sti
cltd
test
aas
lods
dec
sub
xor
jle
mov
repnz
sub
dec
add
xchg
hlt
shll
rorl
fwait
pop
pop
xorl
jecxz
mov
jbe
push
adc
in
ds
xlat
mov
das
imul
adc
mov
lock
inc
xor
xor
shlb
adcb
hlt
lcall
push
push
lret
xchg
movsb
adc
faddl
dec
jno
loope
out
lock
dec
popa
push
mov
jno
cli
clc
ret
pushf
mov
and
xchg
iret
fnstenv
movsb
push
and
pop
or
into
out
pop
addps
xlat
jnp
add
jns
ljmp
mov
pop
fimull
loopne
jb
lods
test
std
cmp
test
addr16
push
or
jnp
mov
shrb
mov
mov
mov
test
into
and
sahf
rcrl
adc
hlt
mov
xchg
in
insb
sub
mov
movsl
pop
xchg
scas
test
imul
jne
ljmp
pop
dec
xor
rorl
jbe
push
or
ret
dec
or
jp
xor
pop
xchg
sbb
fmuls
insl
push
mov
jne
out
ja
jnp
movsl
add
and
cmpb
mov
jne
movsb
pop
pop
lret
mov
out
mov
fldcw
mov
push
pop
movsl
in
adc
subl
clc
leave
fistps
or
outsb
mov
sub
and
sbb
imul
adc
ja
aas
jo
jns
mov
adc
and
lock
pop
enter
xchg
and
mov
push
rcrb
adc
mov
lcall
dec
and
and
in
hlt
outsb
and
mov
nop
daa
ret
and
xchg
push
sbb
dec
xchg
push
mov
arpl
jae
in
cmpsb
adc
insl
cmc
movsb
fldt
or
rorl
mov
xor
jb
lret
nop
test
repnz
pop
jae
sbb
clc
pop
pop
mov
sbbl
out
fs
mov
jb
mov
stos
inc
adc
add
popf
cmp
ret
popa
fcmovb
inc
add
mov
test
cli
shrb
add
jge
test
push
add
neg
or
and
ret
mov
xor
iret
fcomi
mov
xchg
mov
leave
sarb
fwait
mov
cmc
mov
pop
out
shlb
sub
add
adc
cmp
cmpsb
jns
ss
pop
fbld
es
cmp
insb
lahf
xchg
xchg
push
mov
add
pop
or
test
fnstenv
fstpl
cmp
mov
dec
aad
fnstcw
jl
add
jmp
cmpsl
dec
cld
xchg
and
mov
js
addr16
decl
mov
sub
and
out
jle
sbb
mov
lahf
push
negb
or
pop
mov
cwtl
adcb
dec
sbb
cmp
jns
std
xor
rcll
add
and
test
mov
in
mov
int3
popa
mov
sbb
cwtl
out
jp
fs
sbb
xchg
fmull
ror
test
icebp
jnp
and
push
cmpsl
sbb
mov
stos
mov
testb
push
mov
fstl
pop
or
cmovno
mov
inc
adc
lcall
cmp
adc
and
inc
push
cltd
dec
cmp
shlb
stos
xor
or
hlt
icebp
daa
pop
imul
outsb
cmp
adc
push
push
xchg
fs
sub
sbb
mov
shrb
scas
cmp
add
loop,pt
adc
filds
mov
sub
dec
std
into
inc
pop
test
pop
adc
adc
xor
mov
fstpl
je
loope
nop
cs
xor
out
pop
mov
lods
sub
cld
and
out
jne
or
cmp
xchg
orl
dec
pop
stos
push
adc
inc
inc
stos
jne
dec
adc
in
mov
cmpsl
mov
xor
rorb
pushf
inc
push
aad
mov
jg
sarb
mov
xor
out
bound
or
shrl
rolb
pop
mov
inc
fnstcw
sbb
test
fidivl
mov
mov
sub
sahf
jns
out
std
adc
jo
add
push
loop
test
fcoms
xor
xchg
inc
pop
add
rorb
cmp
mov
jg
mov
ljmp
mov
pop
je
shl
cmp
insl
cwtl
mov
mov
test
mov
mov
sbb
addl
push
sub
pusha
mov
js
in
xchg
cs
and
ds
xchg
and
cmp
mov
ljmp
in
jb
psadbw
mov
je
push
and
ret
jbe
pop
jp
addr16
movsl
bound
shrl
fistps
shlb
xor
popf
movsl
mov
or
das
mov
fdivrs
dec
mov
jae
sub
mov
xchg
daa
or
sbb
pop
je
mov
and
or
xor
addr16
or
cmp
sbb
xchg
push
addl
sbb
dec
mov
cli
xor
mov
push
aaa
jge
or
or
xor
or
pushf
fndisi(8087
jmp
xor
fcomps
adc
arpl
pop
push
sub
rcrb
or
rol
xchg
push
bound
adc
xor
icebp
push
sub
adc
push
xchg
popf
insb
aas
imul
mov
test
mov
pop
dec
std
int
jg
idivl
mov
add
aaa
repz
push
push
cmp
jne
mov
out
adc
mov
jo
xchg
inc
enter
lds
mov
ss
xchg
xor
shrl
subb
xor
jge
cld
mov
aam
dec
xor
push
lea
out
jns
inc
insl
stos
lahf
fbstp
clc
and
sbbb
add
sub
add
or
inc
ja
inc
cli
clc
cmp
lea
and
jae
push
outsl
orb
cs
gs
add
push
movsb
cmp
mov
test
leave
lods
add
cmp
push
sarl
jp
inc
mov
scas
inc
int
jge
push
rcll
sbb
xchg
nop
xor
test
ljmp
lret
sub
leave
movsl
xchg
add
and
dec
inc
cmpsb
push
cld
xchg
xor
pop
or
rolw
shrb
jl
sub
lea
jno
inc
lret
nop
adc
lahf
jbe
fisttps
inc
jg
or
mov
or
push
repnz
sub
push
mov
lods
lods
repnz
sub
adc
popa
jb
in
or
loop
push
lahf
daa
test
mov
cmp
in
push
outsb
stc
mov
cli
aad
sti
test
outsb
aam
mov
inc
pop
ficompl
mov
mov
add
faddl
shr
cmp
mov
push
push
jl
pushf
push
jnp
call
lods
rorl
hlt
fwait
and
mov
add
daa
data16
push
push
leave
addl
les
rorl
out
ds
add
xor
xor
jno
jmp
push
jbe
and
jb
popa
pop
pushf
or
push
sbb
loope
inc
jo
pop
pusha
mov
movsl
jge
and
ror
cmpsb
iret
jle
popa
and
cmpsb
arpl
inc
icebp
jecxz
cmp
sub
fdivs
lds
lret
jp
lret
mov
out
sub
aad
inc
inc
adc
cmp
xchg
mov
incb
xor
mov
fcoms
lds
mov
dec
test
fwait
mov
fisubl
mov
subb
push
dec
mov
xchg
in
bound
iret
pop
sbb
stos
push
aaa
adc
cmp
jp
aaa
xor
mov
fstpt
nop
jb
mov
mov
mov
mov
aam
lock
dec
mov
movsb
xorb
addr16
push
push
icebp
sub
and
aad
daa
sbb
xor
fwait
or
mov
cltd
faddl
xorb
mov
in
xor
jnp
testl
mov
enter
adc
fld
stc
mov
mov
mov
cmp
fnsave
fs
inc
test
lds
pop
push
es
pop
xor
cmpsl
test
mov
dec
lds
pop
arpl
jmp
xor
pop
ja
xor
add
xchg
sbb
push
pop
ja
loope
and
lret
rcrb
jns
mov
xchg
fstps
sub
pusha
mov
push
fs
ja
js
mov
test
loopne
scas
xchg
inc
inc
jmp
push
fcomps
jge
test
and
enter
rcr
iret
insb
lret
aas
xorl
and
sbb
int
sub
mov
xor
adc
repnz
shlb
fdivs
jns
popa
cmp
cwtl
mov
cs
and
mov
cld
sbb
nop
das
mov
or
jnp
sbb
push
stos
lret
mov
mov
mov
pop
push
or
mov
mov
enter
xor
cmp
testl
xorb
inc
popa
cmpsb
sub
cmp
repz
add
out
add
sarl
das
out
lret
shl
jge
out
es
push
sbb
or
negb
jne
sub
addr16
fwait
call
inc
push
out
mov
sti
fcmove
inc
fwait
mov
jl
outsl
xchg
negb
mov
or
sbbl
adc
movsl
inc
lret
ret
ja
sbb
pusha
or
cmp
fstpt
mov
cmc
and
outsb
push
fs
mov
add
inc
mov
mov
push
not
pop
js
and
cld
lods
inc
ds
sub
xchg
imulb
push
or
data16
push
je
dec
stos
stos
fs
fldt
xorl
test
sysexit
shll
xor
mov
call
jb
sbb
in
ret
imul
dec
sbb
jns
and
push
jno
adc
test
push
and
jmp
lods
xchg
or
adc
jns
adc
xchg
mov
icebp
add
xor
shl
xor
and
cmpsb
push
push
and
and
mov
lods
xor
xor
cmp
mov
imul
inc
and
xchg
mov
dec
mov
lret
in
xor
adc
cld
sub
sbb
and
push
push
outsb
leave
lret
and
jle
mov
mov
xchg
in
adc
xor
push
cmp
fwait
cmp
mov
nop
mov
sahf
stos
or
subb
sti
cmp
mov
sbb
push
lret
cmp
cld
cmp
push
pop
sbb
sub
adc
sub
xchg
and
sub
push
add
or
jmp
mov
pop
jno
push
inc
adc
pop
hlt
pushl
loopne
push
mov
testb
les
sbb
pop
jo
mov
jecxz
aad
push
je
fdivrp
mov
scas
movsl
cmp
arpl
mov
out
jl
call
aas
dec
adc
push
std
arpl
pop
mov
add
xchg
cmp
cmpsl
adc
mov
xor
out
mov
mov
jns
inc
nopl
movsb
xor
call
push
xlat
enter
cmp
loop
enter
push
xchg
repz
cmc
dec
sbb
inc
sbb
scas
xchg
bound
mov
sbb
insl
cmc
adc
dec
mov
imul
stc
xor
jl
in
hlt
data16
movsl
jnp
mov
pop
adc
stos
jno
mov
xchg
pop
inc
mov
fs
adc
add
pop
and
push
test
in
lahf
loopne
mov
add
lcall
mov
sub
inc
push
fdivs
add
mov
or
out
test
or
mov
enter
jl
sub
loop
xor
fbstp
jecxz
int3
push
jne
jns
dec
and
pop
pop
cmp
sub
stos
or
dec
iret
cmp
lret
cmpsb
xchg
inc
cli
xor
rolb
test
stc
iret
jno
cmp
or
adc
mov
mov
or
fmuls
dec
or
cmp
fisttps
sbb
insb
cltd
das
and
imul
pop
lock
inc
inc
data16
shlb
dec
push
pop
out
or
ret
lcall
mov
sub
jmp
outsl
insb
dec
xor
cmpsb
mov
xor
or
imul
pop
cwtl
popa
loopne
and
xor
scas
xor
fcmovne
pop
fld1
rolb
loop
sbb
cs
pop
lret
mov
mov
pop
andl
dec
cmp
inc
call
imul
inc
lods
rorl
push
xchg
mov
push
fsubrl
cmp
and
pop
push
sti
out
cmp
jno
jne
loop
sbb
push
inc
adc
fcom
push
int
push
cmp
or
lock
mov
mov
cli
iret
repz
and
lcall
sub
sbb
xchg
popa
mov
fs
mov
xor
mov
dec
or
icebp
jns
lods
das
mov
and
xchg
sub
in
xlat
fadds
out
sti
cli
sub
push
cwtl
int
cmc
ds
jne
popf
xor
mov
pop
ret
jno
cmpsl
pop
mov
pop
push
cmp
add
inc
aam
cwtl
adc
das
xchg
scas
cmp
cmp
sub
sbb
sub
jecxz
xchg
jno
das
fistpll
inc
add
shlb
out
push
mov
pop
jecxz
pop
jnp
sub
inc
xor
sti
dec
dec
lds
das
xchg
jg
jns
add
inc
lods
mov
push
ljmp
lds
dec
sahf
fists
or
clc
mov
dec
mov
fwait
sbb
cmp
notl
pop
jle
pop
xor
push
out
test
pushf
mov
pushf
iret
flds
fs
call
bound
adc
xchg
lods
or
jnp
push
inc
mov
pop
jle
sti
ja
gs
test
in
jne
mov
repnz
aaa
cmc
lods
rcrb
or
out
inc
loop
loop
cld
outsb
fs
mov
inc
mov
incl
lds
scas
repz
outsl
xchg
iret
xchg
mov
cwtl
lods
ret
popf
clc
lods
xchg
sub
dec
or
scas
shll
popa
aam
clc
fldcw
pop
inc
inc
repnz
jnp
adc
stos
insl
stos
in
movsl
jno
sub
fdivrp
pop
fwait
push
loope
aas
sbb
negw
mov
jg
outsl
dec
je
rorl
movsl
pop
bound
adc
dec
xchg
push
mov
fnsave
mov
loop
add
add
pop
mov
xchg
loope
jp
pop
jae
adcb
je
adc
cmp
push
ja
inc
sahf
cltd
sub
sub
dec
xor
pop
mov
nop
mov
popa
xchg
xchg
jae
addr16
rorw
or
pop
out
call
ds
add
fcoml
sub
out
mov
mov
pusha
rorb
mov
shr
out
xchg
and
mov
jp
and
imul
es
andl
lods
add
push
decl
aaa
iret
pop
ror
iret
push
xlat
jbe
in
adc
mov
aas
mov
insb
mov
cli
aad
mov
xor
fs
cli
pop
or
jnp
je
xchg
mov
or
movsb
scas
movsb
ja
sbb
incb
test
in
ds
push
sub
mov
cltd
incb
and
sub
fnstenv
gs
and
push
cs
mov
fs
out
insb
add
add
jg
add
push
icebp
mov
js
mov
sbb
je
push
cwtl
push
testl
inc
cmp
mov
stc
pop
adc
js
jo
pop
pop
insl
mov
pop
call
cmp
pop
es
rolb
sbb
test
xorb
cmp
movzwl
or
mov
or
fwait
push
cmp
ljmp
fdivr
cmp
test
cltd
cmp
or
stos
lds
push
pop
jmp
aas
inc
into
dec
push
mov
sbbl
mov
or
shlb
or
cmp
jmp
mov
xchg
ffree
push
test
cmp
xor
mov
push
fdivr
rcrb
inc
js
sbb
dec
scas
inc
xchg
mov
out
cmp
jmp
nop
in
push
jmp
push
sub
mov
cli
addr16
into
imul
mov
push
test
xor
pop
mov
mov
jne
and
ss
sbb
enter
iret
int
aas
mov
sarl
faddl
inc
rep
mov
jp
inc
lods
test
mov
and
dec
jecxz
mov
int
inc
xor
test
aas
dec
lods
cmp
lea
sub
arpl
fsubs
mov
jo
mov
ljmp
inc
mov
sahf
shrb
mov
sub
pusha
testl
pop
xor
shrl
or
leave
rol
adc
xor
or
dec
jno
push
cmp
sbb
daa
fdivl
dec
cmpb
xor
jno
scas
lods
out
rcrl
decb
mul
fs
fldl
jl
in
pop
jle
mov
aam
dec
xor
adc
mov
stos
fiaddl
hlt
imull
call
rdtsc
shl
push
cmpsb
jno
jmp
sbb
imul
aaa
jno
std
sbb
cmp
push
push
adc
inc
movsb
lea
xchg
cmc
ror
cmp
mov
scas
cmp
std
ja
xor
xchg
cli
call
mov
out
jb
push
imul
fiaddl
in
dec
fxch
adc
shll
das
pop
lock
cmpsl
xchg
mov
scas
fwait
dec
or
ds
xchg
jbe
rclb
fistpll
push
push
jecxz
pusha
loop
shlb
and
insl
mov
or
pop
ss
les
mov
movsl
fsts
ss
adc
add
inc
les
add
ds
js
push
lock
add
std
les
dec
mov
adc
dec
adc
ret
push
mov
in
loopne
xor
mov
fcomip
stc
sub
inc
mov
jb
mov
cmp
test
fistpl
jnp
add
int
scas
insb
pmulhw
inc
std
loop
daa
cmc
out
int
xlat
cmp
int
pop
xchg
insb
sbb
mov
sbb
jnp
and
jbe
out
das
mov
xor
imul
mov
div
out
lcall
inc
mull
mov
mov
shrl
push
aam
iret
test
pop
jl
add
xlat
lret
jb
xchg
adc
inc
mov
fstl
rolb
ss
icebp
fcompl
lahf
xor
cmpsb
xchg
and
push
rol
lcall
lods
popf
pop
inc
cmp
inc
pushf
in
leave
pop
jle
xchg
mulb
enter
je
arpl
adc
xor
stos
aad
xor
mov
and
testb
mov
push
loopne
div
sbb
dec
addb
sbb
inc
adc
xor
mov
mov
ja
js
aas
call
movsl
cli
dec
push
les
pop
push
aad
fisttpl
pop
or
adc
inc
jecxz
lods
sub
and
xor
das
arpl
mov
mov
lds
pop
mov
xor
lea
sub
xchg
scas
jne
xchg
lret
das
loope
sbb
movsb
adc
hlt
je
sub
mov
lahf
bswap
adc
pop
adc
mov
loop
cmp
push
insl
cltd
adc
pusha
mov
clc
xor
or
xchg
xchg
adc
cli
mov
mov
cs
in
xor
lret
test
loop
mov
xchg
and
setae
jbe
sub
pop
xchg
and
ret
jg
xor
pop
dec
xor
das
scas
pushf
les
mov
push
mov
and
push
jno
xchg
mov
or
push
stc
fstpl
cmp
inc
sub
adc
pushf
movl
push
cmpsl
nop
or
sub
insb
ret
shrb
inc
and
sbb
test
adc
lahf
mov
stos
dec
mov
lret
mov
xchg
pop
ja
sbb
dec
dec
mov
mov
call
lods
jmpw
mov
pop
pusha
jns
mov
mov
shlb
std
xchg
enter
and
inc
sub
cmpb
adcb
mov
sti
fcmove
aas
test
out
repz
cmp
mov
cwtl
mov
aas
icebp
push
inc
xchg
cli
mov
inc
lods
fldl
sub
push
movsb
adc
mov
sub
xchg
cld
mov
xchg
push
sub
push
push
xchg
rclb
push
out
mov
es
jmp
mov
enter
mov
jb
push
mov
dec
outsl
in
cmp
outsb
mov
and
aaa
jb
push
push
mov
mov
add
cmp
rcr
imul
push
xor
push
adc
cmpsl
and
and
iret
fwait
mov
pop
adc
add
movsl
andl
mov
repnz
add
and
add
mov
popa
pop
push
sbb
cmpsb
shrl
jbe
pop
imul
sahf
dec
pop
mov
fidivrl
fcmovnbe
dec
xchg
jmp
filds
arpl
lcall
pop
ss
lcall
or
jecxz
jp
popa
or
sub
imul
dec
cld
add
push
xlat
sbbl
push
add
jnp
loopne
mov
ficoms
out
xor
shll
aas
lods
push
dec
sub
ljmp
es
xor
push
xchg
fcompl
call
daa
test
fwait
sbb
fsubp
jno
mov
shll
push
mov
test
insb
int3
push
std
test
adc
mov
repz
mov
je
testl
pop
mov
lret
mov
scas
lahf
mov
xchg
int3
leave
iret
xorl
arpl
mov
ljmp
push
in
jmp
gs
arpl
mov
mov
cmp
dec
or
je
add
add
jns
outsb
or
push
adc
pop
cmp
in
sbb
lret
scas
xor
or
nop
xchg
mov
loop
adc
lods
mov
scas
dec
jne
fs
insb
jb
dec
fmull
dec
push
daa
das
inc
popa
imul
mov
aaa
adc
int
mov
ret
daa
lods
insb
adc
sbb
mov
lret
xchg
stos
cmp
mov
mov
out
dec
call
or
mov
and
jo
pop
jae
stos
in
stos
jl
sub
lods
ret
mov
cmpsl
imul
lcall
add
xchg
scas
mov
sbb
test
scas
fcmove
add
les
cli
mov
cmpb
add
loopne
ror
scas
fistpl
clc
jmp
das
scas
aas
push
mov
mov
xchg
insl
lret
sarb
jmp
inc
popa
xor
mov
fucomp
mov
and
mov
mov
mov
mov
adc
push
jp
push
in
xor
leave
data16
mov
call
jge
lret
es
sti
aad
in
cmp
sbb
sub
dec
ljmp
xchg
cmp
cmpsb
adc
mov
sti
xorl
xchg
cld
cmp
sarl
jmp
imul
dec
xor
jbe
lods
icebp
sarl
dec
lock
pop
call
jmp
insl
xor
fnstsw
push
pusha
std
loope
ss
out
fwait
xlat
aad
or
scas
jle
lret
dec
outsl
sub
cmp
add
cmp
mov
dec
enter
inc
mov
push
pop
dec
jmp
adc
jecxz
push
mov
in
push
or
fstps
outsb
fnstcw
shl
cmp
inc
or
or
pop
pushf
push
ret
lods
cwtl
xorb
dec
fwait
adc
insl
push
fwait
mov
mov
in
sub
cmc
and
add
aaa
ss
insb
aam
rcr
lds
xor
cmp
int3
stc
jae
subb
inc
jle
adc
xchg
sbb
push
inc
sbb
jmp
stos
xchg
addr16
aas
xlat
mov
mov
insb
lds
stos
inc
xor
adc
xchg
push
and
cli
pop
xchg
inc
roll
icebp
sub
xlat
out
cmp
mov
rcll
sub
cltd
cmp
aaa
jmp
xchg
xchg
repz
jmp
pop
dec
loop
xchg
cld
push
inc
in
frstor
sub
movsl
xor
aam
xchg
jb
in
add
call
pop
dec
jno
idivb
cmp
das
jl
test
nop
inc
or
xor
cs
jae
stos
sbb
mov
pushf
sbb
loope
call
push
xlat
enter
pop
das
stc
insl
push
mov
mov
lods
jmp
jno
sbb
cmp
sub
jno
mov
pushf
call
push
iret
fldenv
outsb
xor
orb
in
loope
fwait
cmp
mov
aad
mov
fsubrs
fnstcw
ss
dec
push
pushf
sbb
jo
les
out
out
or
pop
call
ss
cmp
mov
mov
add
loopne
cmp
pop
or
ret
or
es
lahf
movsl
xchg
fbstp
in
pop
enter
xchg
outsl
sbb
pop
xor
jns
adc
jg
call
sti
cs
bnd
mov
fs
adc
or
fcmovu
mov
mov
outsl
add
shl
jge
pop
fisubs
daa
dec
inc
addr16
jge
fwait
or
pop
mov
pop
inc
lock
add
out
fs
sub
test
sbb
je
adc
add
push
dec
rorl
andl
push
add
das
xchg
jae
xchg
pop
sahf
jae
xchg
inc
adc
lea
popa
mov
and
push
std
pop
xorl
mov
sbb
jmp
sub
pop
push
in
cltd
movsl
inc
xchg
aaa
xchg
ds
lret
sbb
addl
inc
insb
sbb
push
jl
ss
mov
rorb
xchg
shl
mov
bound
repz
mov
push
inc
iret
insl
imul
mov
lret
mov
enter
fs
mov
and
outsb
aas
mov
pushw
test
jne
pop
jmp
push
lcall
out
sti
jl
shrl
rorb
push
into
test
es
or
cltd
int3
lock
mov
jg
dec
xlat
push
aas
lret
jp
or
test
lret
fcompl
inc
xor
dec
ret
enter
sti
sub
jmp
mov
jo
out
dec
lret
pop
lcall
mov
daa
sbbb
mov
sub
clc
push
call
outsl
add
adc
lcall
leave
inc
hlt
jge
xor
sub
add
stos
data16
mov
lcall
popf
aas
adc
mov
inc
sub
in
jne
repz
in
push
push
addl
sbb
add
rcll
icebp
std
imul
rclb
xchg
or
jae
jne
push
push
pop
sahf
xor
mov
adc
xchg
cmc
mov
push
imul
jge
ss
les
adc
jmp
hlt
add
xchg
fsubl
xor
out
dec
out
sbb
das
jecxz
out
lret
jo
cmp
test
sarl
aas
sbb
sub
or
insl
mov
test
push
mov
psadbw
dec
js
mov
or
xor
sbb
outsb
and
xchg
inc
in
push
cs
and
call
test
adc
jno
and
mov
jae
or
ret
jae
cli
imul
jnp
enter
int
test
push
mov
add
out
lret
fs
test
test
add
sti
mov
pop
cmp
stos
xor
sbb
pop
or
ja
push
sti
mov
mov
rclb
fists
jbe
sub
xchg
stos
cli
xchg
mov
pop
test
aam
or
outsl
arpl
and
jecxz
out
lahf
mov
cwtl
into
xchg
dec
cmp
push
mov
or
sub
sti
mov
jge
pop
aad
ss
ljmp
outsb
adc
lods
sti
jae
insb
fdivrs
ja
pop
cmp
mov
push
jnp
pop
jne
fnstsw
pusha
mov
mov
aas
cmp
lret
xlat
jge
add
jbe
out
xchg
lcall
int3
sbb
inc
ret
mov
test
or
jbe
inc
std
mov
pusha
cmp
push
pop
mov
dec
dec
cwtl
fwait
sbb
lods
fs
push
add
cmp
jnp
xchg
cmp
add
mov
pop
int
dec
pop
dec
and
js
jle
jmp
test
fs
insl
bound
mov
xchg
mov
cltd
enter
mov
shrl
and
pop
sub
hlt
out
mov
cmp
xchg
fsubl
and
das
or
fldcw
je
ja
cltd
icebp
lret
leave
jnp
jl
daa
imul
shlb
cmp
or
fisubrl
test
pop
inc
ljmp
cmp
jmp
xchg
insb
sti
or
and
rcrl
inc
add
out
nop
lods
jp
pop
inc
mov
pop
jmp
cli
frstor
mov
call
int3
jbe
fmul
push
mov
out
aad
jo
and
mov
test
mov
or
mov
fs
fistpl
mov
iret
xor
cmp
and
loope
dec
pushl
mov
cs
movsl
inc
push
lock
or
cmp
lods
mov
cmp
dec
add
in
sbb
int
out
adc
std
push
adc
adc
lods
pop
jg
pop
out
pusha
movl
jecxz
cmc
stos
lds
pop
xchg
ds
psubusw
outsb
add
add
mov
inc
push
mov
jp
mov
test
cld
ret
xchg
stos
inc
sbb
sub
cltd
scas
jecxz
orb
outsb
pushl
les
test
icebp
xchg
clc
repnz
cli
into
lret
xchg
jl
repz
in
ss
sub
push
or
lcall
setg
sub
mov
sbb
xchg
xchg
notb
mov
dec
test
cmp
lret
mov
dec
jmp
daa
pop
int
pop
pop
sbb
jae
out
add
xlat
mov
pop
mov
bound
inc
fsub
pop
scas
movsl
lret
movsl
mov
cmp
xlat
cmc
dec
jl
lds
cld
xor
fidivl
aas
dec
jne
stc
cmpsb
pop
inc
ss
jbe
cmp
push
jecxz
dec
xorl
pop
aam
cmp
daa
lods
xor
data16
lea
hlt
xchg
lret
adc
mov
sbb
out
and
dec
lret
adc
xchg
shrb
push
fmull
daa
mov
inc
nop
sbb
sbb
mov
xchg
int3
subl
and
jns
pop
repnz
mov
pop
adc
push
sub
mov
xlat
repnz
xchg
andl
jb
cmp
push
data16
mov
iret
xor
loope
js
pusha
mov
cmp
lock
popf
ja
pop
cmp
pushf
mov
xchg
xchg
test
xchg
mov
inc
inc
push
mov
jbe
je
xchg
sub
mov
xor
test
jl
lret
scas
jno
nop
mov
sbb
loopne
adc
out
fimuls
imul
xchg
or
fs
fcomp
js
lods
ljmp
lcall
and
jge
mov
xor
filds
cmp
push
pop
scas
ds
pop
cmp
fldt
jle
sti
and
dec
adc
xlat
out
ficomps
sub
sbb
fsubs
pop
in
outsl
mov
mov
mov
jae
movsb
xchg
test
stos
dec
mov
mov
int
push
inc
jbe
push
cmp
xor
pop
fiaddl
pop
or
out
aas
xchg
mull
push
in
arpl
aas
cmovl
cmp
iret
out
in
cmp
sahf
sub
push
jb
loop
daa
mov
dec
lock
fisubl
outsb
lock
loopne
pop
inc
sub
outsl
sub
sbb
mov
inc
test
daa
outsl
pop
ret
sahf
dec
mov
xchg
mov
push
xchg
push
sub
mov
rol
leave
test
or
test
jnp
rolb
stos
push
sub
xchg
dec
dec
adc
mov
jg
daa
xor
cmp
jle
jbe
js
pop
inc
mov
outsl
or
imul
inc
popa
insl
jns
sub
sub
lret
stos
xlat
lock
sub
cmp
push
dec
mov
or
flds
loop
aad
mov
xchg
enter
loop
xor
jmp
push
sbb
jg
xchg
in
dec
scas
sbb
jo
lea
xor
loopne
mov
cmc
xorb
push
test
push
lret
pop
shlb
out
xorb
jl
mov
imul
pop
mov
xor
pop
xchg
loop
call
shll
xchg
rcr
inc
xlat
movups
inc
adc
xchg
or
icebp
dec
daa
sbb
pop
cmc
test
xchg
stos
sub
mov
jg
mov
push
mov
ret
call
add
jmp
aas
jg
ret
out
and
pop
rorb
into
dec
aad
sbbl
leave
ret
cmp
lock
jp
pop
sub
js
or
xor
cmp
cmp
rorl
nop
das
add
jns
fisttps
addr16
cwtl
inc
adc
push
push
mov
rorl
cmp
add
inc
pop
fimuls
loop
loopne
sub
xor
in
scas
mov
sahf
lds
mov
xor
sub
ret
lret
xchg
jae
clc
fcmovnbe
fistpll
push
ss
mov
jp
mov
cmpsl
mov
loope
addr16
adc
add
pop
shll
rcrb
xchg
inc
icebp
dec
dec
inc
shufps
lcall
pop
fisubrl
ja
xor
pushw
mov
xor
pop
mov
xchg
fldl
out
roll
or
and
cmp
cmp
push
push
iret
js
mov
sub
push
sub
iret
imul
inc
test
adc
scas
jp
loope
mov
mov
orb
sub
addr16
jmp
fadds
das
lods
popf
repz
cld
mov
xchg
repnz
imul
popa
inc
divl
jge
pop
push
in
add
xor
loopne
data16
ret
cmp
sub
sbb
jp
sub
inc
cmc
mov
not
clc
jno
lcall
and
and
inc
add
mov
repnz
mull
sbb
shl
push
inc
sbb
dec
mov
dec
sub
in
stos
stc
repz
pop
inc
add
lahf
leave
mov
xchg
add
xor
and
aaa
repnz
fdivrp
pushf
lods
sub
push
repz
pop
dec
ds
and
jmp
or
ret
dec
and
cmp
lret
jg
lds
mov
cmp
cmpsl
pop
enter
sub
inc
sti
hlt
bound
and
sarl
test
push
sub
inc
pop
mov
jl
icebp
inc
lret
sub
mov
decb
or
jns
mov
xchg
adc
je
sbb
and
ljmp
and
or
mov
ret
or
stc
cmp
jbe
incb
ja
int
mov
adc
mov
lahf
loopne
sub
sub
adc
aad
xchg
push
popa
sahf
lea
inc
inc
les
mov
aas
rclb
jnp
js
push
test
mov
push
popf
nop
pop
es
push
stos
jl
sub
mov
push
adc
sub
jo
gs
arpl
rclb
fisubl
and
shrb
ret
push
in
or
in
mov
mov
push
ja
lods
dec
les
mov
sbb
fisubl
cmp
dec
clc
mov
mov
roll
pop
xlat
push
bound
fmull
mov
ret
jecxz
int
cs
mov
xchg
data16
loopne
cmp
fs
dec
pusha
or
push
and
pop
pushf
adc
outsb
outsb
mov
sub
cmp
je
cmpl
and
sbb
and
xchg
push
andl
lock
sub
sbb
sbb
mov
jge
mov
push
dec
push
pop
clc
xchg
int
sub
lds
outsb
nop
add
or
sub
jle
push
or
lahf
aad
mov
push
sub
ja
inc
sbb
pop
scas
lods
out
mov
or
lret
jecxz
adc
push
sti
test
mov
sahf
mov
lcall
popf
xlat
popf
sti
cwtl
lret
mov
adc
push
fs
xor
dec
mov
adc
fsubl
jmp
out
cwtl
pop
pop
arpl
cmp
xchg
adc
rorl
mov
xchg
push
lock
in
or
mov
loope
es
and
xchg
lret
nop
mov
sbb
cmpsl
mov
movsl
sub
push
int
xchg
cmp
pop
test
pop
repnz
inc
and
stc
xchg
mov
mov
js
ret
scas
fs
push
leave
popa
adc
gs
cmp
cltd
lahf
shlb
mov
jne
int
pushw
cmp
sub
fstl
hlt
sbb
mov
lcall
fidivs
or
xchg
pop
out
pushf
pop
dec
out
fldenv
addr16
clc
in
cld
add
cmovo
stos
push
pop
enter
enter
adc
xchg
adc
daa
decl
sub
into
arpl
movsb
push
add
ss
loopne
divb
or
in
mov
jecxz
in
outsl
mov
repz
mov
inc
pop
out
sahf
jge
sub
xor
cld
inc
mov
jb
push
fistpll
adc
sub
or
jmp
xchg
out
je
addb
test
loopne
test
addr16
dec
mov
and
shll
stos
and
bound
dec
ret
stc
pop
push
or
xchg
pop
jno
or
sbb
es
call
ja
scas
das
mov
mov
imul
fldenv
adc
adc
movsl
cmp
jle
pop
rclb
inc
les
pushf
push
mov
and
in
cmpsb
jmp
bswap
data16
push
jl
daa
dec
mov
and
stos
pop
clc
xor
xchg
jp
jle
subl
sarl
jmp
ss
or
sti
ret
test
sub
adc
fbstp
pop
mov
cmpsl
xlat
jl
mov
js
fldl
lock
mov
add
cmpsb
pop
int3
mov
sahf
inc
or
and
ror
mov
cmp
jne
mov
popf
leave
lcall
mov
fisubrl
push
leave
jae
rcrb
or
push
inc
pop
xchg
test
aam
cld
push
jge
pop
mov
and
pop
or
imul
popf
jb
lods
loop
adc
ljmp
lds
out
mov
mov
out
mov
sbb
inc
out
xchg
xor
test
repnz
lods
rcrl
xchg
mov
popa
mov
test
adc
mov
push
out
test
test
jmp
sbb
in
pop
add
inc
out
mov
add
dec
fisttps
push
mov
shrb
call
inc
movsl
xor
inc
repz
cmpsl
xchg
jno
pushf
je
sahf
into
daa
inc
add
or
loopew
pop
mov
push
jo
or
fistps
out
aaa
inc
add
pop
or
mov
fs
jmp
add
subb
push
xor
pop
inc
sbb
call
movsb
ret
xchg
into
sub
inc
inc
and
das
sahf
dec
addr16
fistpl
data16
pop
cwtl
push
pop
dec
gs
ja
aas
fsubl
inc
mov
stc
data16
outsb
pop
cwtl
inc
adc
or
icebp
mov
cmp
test
xor
jmp
iret
jecxz
push
sub
sbb
pop
push
popf
or
jne
lahf
mov
mov
mov
stos
fistl
pop
push
lea
lahf
mov
outsl
xchg
ffreep
enter
insl
push
lea
fimull
sub
and
outsb
push
sub
in
pop
pusha
out
dec
test
cmp
xlat
mov
push
inc
mov
imulb
and
or
fcoml
sub
lret
mov
mov
mov
imul
cld
adc
sbb
repnz
xchg
mov
iret
dec
dec
fldenv
adc
or
or
mov
jmp
mov
popa
mov
adc
jae
push
and
mov
add
in
pop
int3
mov
and
inc
loopne
mov
jae
cmp
fmull
pop
cs
pop
cmp
mov
out
mov
sub
pop
mov
int
xchg
mov
or
scas
dec
mov
fnstsw
push
dec
jmp
cltd
stos
nop
sub
or
movsb
xor
adc
push
cmp
cmp
mull
stc
orb
dec
fistps
mov
jp
les
push
adc
push
push
jb
push
sub
adc
imulb
ljmp
jmp
sub
jmp
and
or
loopne
repnz
push
mov
fwait
cmp
inc
scas
insb
lahf
jnp
or
add
push
movsl
inc
push
sub
cmp
or
adc
fildll
in
jle
mov
mov
cmp
cli
xor
jnp
cli
ja
mov
repnz
mov
dec
sub
xchg
lret
mov
cmp
ficomps
test
xchg
jne
xor
clc
lea
push
ret
fdivrs
pop
push
adc
in
scas
xlat
fstpt
icebp
add
pop
push
mov
orb
mov
stc
sub
push
call
xrelease
ret
pop
push
sub
insl
scas
mov
rcrb
and
jbe
jns
lods
sbb
jb
fnstcw
sbb
popa
test
imul
push
cmp
and
mov
fistps
leave
inc
fistl
jns
les
pop
xchg
jecxz
inc
loop
jb
arpl
dec
push
test
sub
sbb
ret
aaa
xchg
mov
into
adc
mov
scas
or
cmp
aam
sti
movsl
and
mov
push
imul
fwait
daa
in
hlt
gs
in
xorl
call
int3
lret
lods
cmp
inc
cmp
movsl
test
ljmp
jg
push
test
push
xchg
jae
jecxz
mov
cmpsb
shrb
ja
inc
outsl
fidivl
sbb
jge
outsb
iret
jle
sub
push
daa
scas
pusha
cli
inc
adc
lods
popa
out
je
inc
xchg
jmp
mov
sti
fisubrl
aad
push
sub
lods
cli
icebp
outsl
or
call
mov
shlb
ss
xor
xorl
lods
in
adc
xor
cmp
pop
push
push
imulb
mov
jle
hlt
mov
push
jmp
pop
xor
push
icebp
sub
cmp
mov
dec
push
dec
cmp
out
xchg
stc
pop
xor
fsubrs
jmp
xchg
dec
mov
insl
bound
andl
mov
push
outsb
xchg
int3
out
sbb
out
add
mov
sbb
fs
and
adcl
push
and
call
jmp
cltd
into
mov
leave
lock
les
aas
das
imul
push
or
inc
lds
xchg
mov
ficoml
stc
xchg
test
lock
inc
jbe
and
in
adc
push
cmpsl
or
adc
adcb
push
sbb
sub
lea
lahf
pushf
xchg
fldcw
nop
xor
int
jle
adc
xchg
enter
jae
mov
mov
in
gs
mov
xor
pop
icebp
jge
rcrb
xchg
xorl
mov
mov
incl
push
enter
fldl
mov
clc
mov
lahf
mov
mov
adc
pop
dec
xor
xchg
stc
daa
mov
mov
and
xchg
ds
test
lret
fwait
mov
in
push
outsb
int3
out
ficoms
sti
popa
adc
cld
sub
add
les
movsb
mov
xor
cmc
inc
fwait
cli
nop
pop
adc
push
lea
aas
int3
popa
mov
movsb
fildl
mov
pop
inc
leave
dec
aaa
daa
cmpl
std
mov
inc
xchg
mov
rolb
les
insl
jecxz
mov
sub
aas
adc
mov
jmp
cmp
xchg
imul
xchg
in
jb
cltd
jmp
wbinvd
and
rcl
loopne
dec
cld
fimull
xor
rorl
jecxz
roll
jae
dec
adc
fisttps
push
insb
cmp
or
or
lds
shrb
xchg
pusha
add
loop
pop
inc
jb
shr
add
addr16
dec
jle
cltd
or
xor
outsl
aad
lea
ds
cld
cmpl
jae
dec
cmp
xchg
imul
dec
scas
in
push
xchg
add
xchg
mov
fidivrs
imul
xchg
in
sub
es
stos
je
fdivl
daa
nop
in
loope
test
sub
inc
sub
cmp
arpl
cmp
pop
mov
out
loop
popa
stos
sub
inc
add
inc
jmp
jmp
test
dec
je
inc
bound
jle
int3
inc
ret
aam
stos
inc
sbb
shll
repz
je
inc
mov
lret
pop
inc
popf
xchg
inc
scas
ret
movsl
inc
add
mov
jmp
jo
or
mov
dec
int3
adc
mov
dec
jmp
jecxz
adc
ret
out
jo
pop
mov
cld
mov
xchg
js
mov
cltd
lea
enter
add
and
cwtl
jg
pop
mov
pop
in
bound
push
notb
cs
lcall
dec
or
pop
jo
mov
mov
add
in
push
rorl
push
stc
iret
out
mov
or
add
out
into
or
in
lea
xchg
add
push
cwtl
int
pop
out
mov
add
rcrl
fwait
stc
nop
mov
lret
mov
inc
repz
add
andl
inc
and
fsubrs
pop
dec
jle
mov
push
cmp
sbb
add
jmp
shll
dec
nop
adc
mov
and
test
ljmp
dec
es
insb
cmp
inc
add
sub
push
in
inc
sbb
lret
aaa
xor
loopne
in
mov
aas
sub
in
and
add
orb
push
int
imul
sbb
fisttps
xor
out
xchg
pushf
push
pop
sbb
daa
dec
fldl
or
in
nop
out
cmpsl
lods
fisubl
mov
test
fldcw
xor
cld
mov
xchg
int
fisubs
pop
inc
cmp
push
lahf
sbb
mov
shr
and
pop
xlat
fidivrs
sbbl
cmpsb
sbb
shlb
push
xchg
repz
test
mov
mov
adc
shlb
mov
dec
push
pop
cmc
cmc
shll
mov
jbe
dec
sub
shrl
mov
outsb
sub
jl
cs
adc
cmp
jo
ss
dec
mov
or
dec
clc
add
or
push
adc
inc
lret
xor
ljmp
jle
mov
mov
cmc
mov
jg
loopne
loop
xchg
mov
sbb
mov
jmp
test
xchg
fwait
maskmovq
negl
loop
fidivl
or
setbe
lods
and
push
mov
das
or
dec
push
pusha
iret
add
cmpsl
inc
cmp
mov
xor
fisttpll
call
add
test
rcrb
fsubs
filds
xor
sti
mov
ss
fsub
push
sub
xor
cli
lds
inc
jg
aad
daa
mov
clc
adc
xor
jecxz
aas
cltd
dec
pop
adc
in
stos
repnz
or
ret
ss
int
mov
add
adc
andl
arpl
pop
outsb
fwait
add
adc
movsl
and
inc
mov
ret
pop
test
and
or
xor
sbb
stos
push
pop
add
dec
aas
dec
mov
sbb
mov
xor
loopne
aam
lahf
jl
push
mov
in
leave
mov
cmp
cltd
cwtl
add
push
add
xchg
adc
lret
pushf
cltd
daa
pop
mov
dec
inc
sahf
lret
dec
sahf
jl
dec
dec
rep
rcrb
push
pop
or
inc
jle
add
es
dec
adc
jo
sub
shrl
sub
adc
jne
push
push
not
in
sti
inc
inc
add
adc
adc
test
or
sub
push
mov
xlat
cmpsb
cli
popf
bound
add
dec
movsl
daa
jl
idivl
lods
stc
and
sbb
mov
and
lahf
int3
inc
jecxz
mov
xor
xchg
fsub
jns
push
je
inc
mov
out
in
dec
jbe
fwait
or
fildll
arpl
bound
mov
js
mov
dec
outsb
ja
or
xchg
insl
rorl
repnz
jae
and
mov
cmp
mov
mov
inc
pop
or
pop
jp
pop
and
jno
push
xor
not
xor
and
imul
jb
xchg
or
jecxz
inc
loop
jno
mov
out
jecxz
pop
faddp
notl
adc
mov
push
sub
add
loopne
test
outsb
repz
andl
xchg
out
xchg
aaa
pusha
sbb
or
add
fstpt
xlat
push
repz
lds
andb
sub
pop
in
cli
add
mov
sbb
lret
loope
repz
sub
xor
dec
pop
mov
push
cltd
aad
push
sub
push
lahf
xor
or
xchg
xor
std
sub
dec
xor
add
lds
jmp
test
sub
test
mov
insb
add
add
fldl
std
pop
dec
leave
mov
or
xchg
xchg
lds
xchg
cs
pushf
mov
test
cli
movsl
or
test
lds
xchg
into
sbb
js
aas
inc
sbb
and
xchg
lea
mov
push
push
ja
int
lods
pop
pop
pushf
jecxz
jae
jnp
mov
call
mov
faddl
mov
sbb
mov
call
xchg
lahf
jmp
call
or
pop
dec
mov
mov
or
jg
rclb
mov
jns
ja
les
jmp
loopne
mov
mov
fldl2t
filds
push
or
and
mov
sti
xchg
push
sub
std
outsb
and
stc
lret
jl
push
lret
dec
pop
loope
xchg
imul
or
sub
push
pop
sub
loop
sbb
jg
test
ret
pop
cs
push
add
out
jge
cmp
xchg
lods
or
and
xchg
popf
ja
push
pop
dec
mov
call
leave
cmp
or
daa
enter
mov
nop
xchg
mov
lods
pop
movsl
lock
jb
loop
mov
lds
and
int
add
scas
mov
dec
ret
xor
mov
sbb
xchg
cmp
jbe
xor
xlat
mov
dec
in
les
mov
xor
adc
pushf
out
lods
call
cmpsb
pop
aas
les
push
insl
bound
jbe
mov
rcrl
pop
jle
shl
or
lret
xchg
gs
xchg
aaa
and
sahf
xchg
add
cmp
sub
push
push
mov
cs
pusha
dec
out
jbe
xchg
cmp
cmp
in
mov
mov
movsb
add
mov
or
dec
cltd
cmp
mov
data16
fidivrs
cwtl
sbb
sti
mov
add
and
sub
jnp
sub
or
mov
mov
jnp
or
addl
cmp
cmp
lea
daa
jp
arpl
add
into
dec
outsl
int
lcall
ret
cmp
lret
das
stos
pop
jp
sbb
imull
mov
xchg
icebp
lcall
shlb
rcrb
in
icebp
jl
sbb
lcall
cmp
aam
push
adc
push
cmc
mov
lds
add
add
add
adc
dec
add
and
push
inc
iret
add
jns
dec
jae
jmp
and
call
sub
xchg
pop
or
enter
cmp
int3
jno
sub
pop
push
sbb
mov
outsl
fwait
pop
mov
enter
into
push
jae
test
cmc
cltd
rcl
mov
mov
sbb
mov
mov
sub
fwait
or
xor
xchg
dec
push
pop
push
ja
cmp
jae
pop
adc
lret
and
mov
addr16
ret
pop
enter
pop
lret
xor
sbb
jno
xor
icebp
das
or
dec
add
fsubp
inc
test
or
and
sbb
jp
insl
shr
loop
and
repz
pop
xchg
sbb
cs
xor
jmp
and
pop
into
cmp
int3
lea
adc
xchg
push
adc
out
mov
je
xchg
dec
push
sbbl
sub
xor
jne
sbb
movsl
adc
lret
ja
aad
lret
sti
out
and
mov
pusha
add
stos
mov
adc
jb
sahf
lock
and
push
in
sub
and
jp
ss
push
scas
cmc
test
xorl
icebp
mov
cltd
pop
add
dec
xchg
fiadds
jae
xchg
mov
cmc
aas
shrl
xlat
mov
addr16
mov
adcb
cli
inc
jne
inc
inc
xchg
call
dec
addb
andb
sbb
xchg
push
daa
cmp
loopne
bound
ret
int
fs
push
xchg
inc
mov
dec
inc
daa
int3
dec
loop
push
insb
mov
sub
mov
mov
js
call
mov
xlat
jecxz
dec
cld
ljmp
adc
jge
cmc
cld
mov
orb
or
mull
jle
out
sub
mov
cltd
xor
das
xor
xorl
icebp
xor
into
scas
dec
jecxz
mov
dec
or
jns
inc
shll
repnz
pop
mov
loopne
dec
push
popf
push
popf
add
test
sti
imull
add
sub
mov
movsb
pop
lret
inc
inc
test
push
xchg
fists
mov
and
fnstcw
mov
mov
cmp
xchg
pop
mov
pop
sar
bound
mov
jne
or
cld
aaa
mov
xchg
add
jmp
push
gs
gs
jp
in
mov
adc
adc
gs
push
jge
xor
cs
jg
test
adc
popa
pop
in
inc
and
shlb
mov
push
mov
sahf
idivb
add
push
js
shrl
cmp
add
xlat
cmc
cmc
int3
sub
lcall
jne
xchg
fldcw
sahf
inc
fldcw
out
arpl
cmp
stos
imul
repz
pop
movb
les
imul
jo
test
and
jg
cmc
xchg
dec
out
loop
aam
inc
sbb
or
gs
xor
mov
imul
pop
aad
mov
jno
or
outsl
shlb
out
add
loope
movsl
mov
sub
fdiv
loop
das
jae
push
xchg
and
int
je
lret
nop
mov
add
movsl
sbb
xor
sbb
fs
cltd
jnp
cli
mov
jns
sub
push
push
enter
adc
add
lret
cmp
std
iret
out
pop
mov
dec
scas
mov
sahf
dec
fs
mov
insb
fdivrp
fldl
leave
js
inc
cmpsl
lods
xor
dec
std
subl
mov
int3
sub
dec
cltd
movsb
pop
pushf
cmpsb
mov
jne
ljmp
test
xor
clc
xchg
notb
or
dec
sarl
lcall
js
lods
push
pop
push
mov
push
jmp
movsl
push
loop
nop
adc
jg
int3
aad
fdiv
loope
dec
mov
add
dec
ret
or
mov
xchg
daa
and
mov
divb
fidivrs
mov
inc
jecxz
dec
movsb
vmread
fmulp
rep
mov
sbb
adc
scas
push
lret
ljmp
cld
movaps
inc
pop
cs
mov
and
cmp
aas
lods
out
out
inc
mov
lret
dec
fdiv
repnz
sbb
push
repz
ret
rol
and
lods
lahf
rorb
mov
sbb
add
stc
xor
xchg
rcll
push
ret
mull
and
repnz
fsubrl
ljmp
fiadds
add
cmp
out
mov
std
cmp
lods
or
mov
sbb
imul
inc
sub
dec
lret
push
dec
xchg
pop
mov
adc
fcoml
sahf
jo
xchg
cmp
outsb
add
jmp
iret
mov
push
lods
into
sbb
fs
lret
pop
pop
inc
mov
test
or
xchg
inc
jmp
mov
xchg
xchg
push
cmp
push
addr16
aas
out
or
mov
xchg
cmp
pop
cli
adc
inc
cmp
popf
mov
adc
sub
loop
dec
in
sbbb
mov
imul
dec
gs
lret
stos
sbb
stc
int
add
cmp
adc
push
and
mov
sub
ds
push
test
cmpsb
sbb
jecxz
xchg
leave
test
lahf
ljmp
dec
cs
mov
rorl
adc
std
pop
loop
xor
dec
mov
add
mov
xor
cli
mov
sbb
out
lret
jmp
inc
push
jb
push
mov
cmp
and
push
mov
aas
adc
std
xchg
popa
push
sub
sub
mov
adc
imul
dec
xchg
dec
je
arpl
xor
orl
vunpcklpd
jns,pn
pop
loop
lcall
lret
jle
aad
add
cmpsb
and
lds
shrb
js
dec
lds
xchg
hlt
and
fidivrs
cmpsl
mov
stc
xchg
test
in
fists
dec
icebp
shl
sbb
fcomp
ja
fs
stos
incb
pop
shll
or
imul
add
stos
icebp
aam
and
cld
jbe
jmp
rorb
xchg
jo
fdivs
in
cmp
adcl
lods
pop
xor
xchg
xchg
loopne
xchg
push
or
xchg
mov
mov
loop
push
inc
repnz
cmp
test
pop
int
clc
push
jmp
imulb
lret
and
shll
pop
mov
ret
and
mov
jl
repnz
out
cmpb
out
rcr
jg
dec
cmp
in
out
leave
movsb
call
jns
aam
call
mov
fsubs
mov
cli
mov
push
pop
mov
cmpsb
inc
sbb
mov
sbb
sub
test
xor
cmp
cmpsb
cwtl
pushw
jbe
jno
mov
stos
push
mov
mov
es
sbb
or
ljmp
mulb
test
push
or
and
mov
push
mov
fstl
out
or
xchg
inc
push
das
xor
pop
sbb
xchg
scas
lea
into
test
push
pop
inc
stos
adc
jp
lock
daa
sahf
dec
pop
rolb
push
push
mov
ja
pop
cld
adc
cmp
cli
xchg
mov
mov
jns
nop
dec
stc
out
jge
cmpsl
test
mov
shrb
sbb
ret
cmp
xchg
lcall
hlt
leave
sbb
ret
jp
jnp
nop
adc
pop
pop
sahf
int3
sbb
test
test
nop
push
fsubs
jbe
sar
ss
fsubrl
out
ret
js
pop
sbb
repnz
push
loopne
and
and
iret
rcr
imul
mov
xchg
int
test
inc
lock
pop
out
lock
insl
xor
jg
mov
jmp
mov
push
mov
fprem
clc
add
test
stos
into
xchg
and
pop
push
cltd
cs
shrb
jmp
lods
add
nop
adc
xchg
int
xchg
push
lahf
inc
jbe
jmp
repnz
cmp
cmpsl
mov
cwtl
xor
popf
sbb
jo
dec
mov
mov
int
mov
cmpsb
call
pop
adc
or
mov
mov
inc
sub
or
push
mov
stc
add
xchg
xor
int3
sbb
ljmp
xchg
loopne
jge
cs
stc
mov
les
jo
vpcmpgtw
lahf
and
jmp
mov
sub
jecxz
aam
sub
pusha
pushf
jns
sbb
pushf
imul
adc
aas
xchg
push
add
scas
rcl
xor
popf
leave
pushw
int
jg
and
shlb
push
cmp
xchg
jg
dec
outsb
lock
inc
in
ret
insb
fldcw
add
into
pusha
mov
adc
int
sub
sti
int
sbb
add
jg
inc
sbb
in
lret
cltd
push
je
cmp
jae
dec
jl
cwtl
mov
lcall
cmc
out
mov
out
sarl
cwtl
repnz
fwait
sub
and
push
mov
xor
icebp
push
pop
adc
xor
lods
inc
pop
call
mov
dec
push
dec
arpl
ds
sub
std
nop
and
adc
sti
xor
fstp
cwtl
in
xor
daa
adc
sub
fdivl
loopne
dec
addr16
jg
mov
cwtl
scas
punpckhwd
sbb
fmuls
adc
fst
cmpsl
ror
popf
rol
sbb
or
mov
inc
push
out
je
cmp
add
in
pop
jl
adc
mov
incl
stos
popl
ja
push
in
lea
pushf
push
lds
jl
add
xor
decb
jmp
out
pushf
xchg
inc
lcall
hlt
or
pop
bound
int3
cli
sub
std
push
aaa
jno
mulb
loop
adc
cs
pop
or
repz
adc
pushf
cmp
add
pop
mov
cmpsl
pop
sbb
cltd
cmpsl
sbb
ja
icebp
sbb
insb
mov
fistps
scas
stos
sbb
in
xchg
insb
ret
mov
jmp
xor
test
shlb
repnz
cmpsl
push
test
and
popf
cmp
loopne
sarl
fwait
gs
ss
ret
xlat
ja
test
mov
push
xor
arpl
mov
lret
adc
lahf
sub
mov
jae
test
rcrl
stos
xchg
adc
mov
call
mov
aaa
cltd
ret
inc
int
lock
bound
mov
sahf
inc
adc
or
nop
cmc
push
fstpl
adc
add
int3
mov
jo
jno
lods
ret
test
adc
dec
push
dec
jnp
loope
insl
cmpsl
sub
adc
jmp
adc
ljmp
push
sub
mov
pop
in
repz
inc
jae
or
in
inc
mov
dec
or
mov
jo
fldl
adc
enter
pushf
lahf
xchg
pop
mov
cmpsl
ror
jae
daa
sti
push
jecxz
pop
loope
mov
mov
pop
sahf
jnp
test
sbb
fs
emms
mov
jle
adc
insb
fimuls
push
xor
add
cwtl
push
mov
pop
or
clc
and
adcb
pop
mov
mov
in
lret
push
les
cmp
and
pop
xchg
enter
out
inc
fsubrs
scas
cmp
out
push
pop
jp
repz
movsl
fstpt
scas
fdivl
xor
xor
push
jo
cmp
push
jo
ds
cmp
fisubrl
fildl
mov
pop
aad
nopl
mov
dec
cli
jns
test
cmpsl
mov
jne
or
or
inc
add
inc
mov
in
push
cmp
and
dec
pushf
jb
push
fistpl
jge,pt
mov
jo
xor
fidivrs
loope
popa
jno
or
jb
push
pop
dec
sbb
mov
shlb
mov
adc
dec
scas
jno
orb
test
xor
mov
stc
and
jae
sbb
shlb
mov
pop
rorl
xchg
mov
jp
xchg
sbb
push
inc
into
mov
push
and
mov
push
adc
xor
loope
inc
inc
repz
in
or
mov
jnp
push
mov
cs
and
pop
fisttps
mov
jne
es
and
dec
movsb
aad
dec
push
push
pop
filds
mov
ret
andl
push
pop
mov
or
pop
cmp
jmp
stos
das
mov
jne
lret
rcl
add
fisubrs
icebp
mov
sub
cmp
subb
inc
cmp
dec
loope
cmp
ret
pushf
mov
push
cmp
fsubrl
lock
dec
cmp
scas
in
or
jecxz
enter
ret
loope
cmc
test
f2xm1
sub
sar
jo
or
fsubl
into
jns
inc
test
addr16
push
jb
or
cli
mov
rcr
adcb
popf
adc
into
adc
insl
add
mov
push
je
idiv
scas
fnstenv
mov
sbb
push
arpl
cld
and
in
repz
test
aas
dec
movsb
sub
jb
mov
std
push
xchg
popa
xor
inc
add
cmovg
and
pushf
pop
mov
mov
loopne
shlb
ljmp
jle
add
mov
xchg
sahf
in
bound
fcmovne
pop
pop
xorb
xchg
jg
xchg
jl
in
jge
mov
daa
dec
ss
inc
dec
in
dec
mov
push
sbb
imul
and
and
mov
inc
inc
test
pop
adc
sbb
fcmovbe
add
lea
adcl
mov
push
je
fs
ds
mov
adc
mov
pusha
insl
adc
pop
daa
gs
addr16
in
test
out
insl
sub
dec
sub
in
jo
push
jge
popa
pop
inc
sahf
sarb
hlt
mov
cmp
mov
shll
cmp
jl
sbb
jb
ljmp
jecxz
bound
pop
mov
repnz
mov
jno
mov
xor
xchg
nop
and
lea
icebp
mov
in
mov
insb
push
cmp
jns
mov
mov
lock
dec
outsl
addr16
and
clc
sub
mov
dec
sbbl
jo
jbe
dec
sub
pop
bound
scas
add
lahf
jle
ja
repz
fimull
lcall
mov
outsl
ret
jnp
pop
popa
in
stos
cmc
adc
test
psrlw
jnp
push
ja
sbb
mov
popa
inc
dec
jae
fcompl
lea
stos
cs
jne
xchg
adc
jo
imul
imul
fiaddl
or
mov
popa
sub
add
mov
sarb
cmc
call
daa
xchg
xor
xchg
sarb
rclb
sub
push
cmp
int
sub
ret
adc
outsb
in
cmp
setb
pusha
icebp
je
in
dec
xchg
es
cmp
jmp
fwait
mov
pop
sub
int
sbb
fisttpll
stos
cmp
adc
push
and
repnz
movsl
test
and
aam
lods
frstor
ljmp
mov
dec
xor
jg
mov
gs
repnz
loope
les
xchg
xor
push
loop
sub
pushf
adc
dec
lods
enter
fistl
fsubl
add
data16
sbb
bound
add
frstpm(287
mov
dec
pop
imul
adc
push
movsl
test
popf
dec
scas
xor
and
inc
je
xor
sub
cmpsb
aad
insb
pop
push
xor
repnz
inc
cmp
xor
inc
lds
dec
out
idivb
xor
cmp
adc
cmpsb
pop
xchg
sub
or
ss
out
xor
sahf
fisttpll
aaa
popf
add
adc
lcall
int3
andb
mov
shll
dec
fcompl
sub
adc
dec
adc
adc
stc
outsl
or
cmc
jns
jg
xlat
in
loopne
sbb
dec
nop
xor
add
loop
in
or
imul
clc
xor
or
cld
fwait
and
cs
cmp
dec
outsb
mov
dec
add
or
repz
adc
leave
fwait
out
repnz
fdivp
fiaddl
subl
int
cmp
xchg
jmp
sub
or
sub
fsub
mov
pusha
jo
popa
lods
or
push
dec
test
andl
adc
jmp
idivl
clc
jne
lahf
and
mov
add
adc
lods
push
test
and
arpl
adc
inc
mov
push
scas
iret
dec
in
aas
ljmp
xchg
aaa
dec
dec
jbe
pop
mov
bound
inc
inc
inc
inc
push
hlt
data16
push
push
int3
ljmp
xchg
jp
add
sub
aas
pusha
cmp
es
sub
outsl
sub
lds
cli
jne
repnz
mov
adc
cltd
dec
pop
cwtl
add
push
jmp
pop
jns
out
inc
cltd
movsb
mov
addr16
in
xchg
push
je
in
shll
adc
or
adc
sbb
fisubrs
lock
cwtl
shrl
dec
sub
push
cli
ret
loop
pop
fsubrl
data16
inc
repz
xbegin
mov
push
fwait
notrack
mov
ret
les
inc
push
push
add
notb
das
jecxz
dec
push
lcall
into
push
adc
lret
cmpsb
in
or
mov
clc
mov
or
mov
inc
addr16
or
icebp
sub
arpl
jo
into
pushf
push
in
call
subl
sbbl
lret
mov
jnp
mov
out
dec
int
xchg
ds
add
test
fdivrs
out
out
pusha
inc
cltd
imul
push
jp
mov
pop
add
jnp
add
adc
nop
cmp
jo
icebp
mov
sbb
sbb
dec
mov
ljmp
dec
imull
sahf
pop
outsb
sub
mov
mov
fs
mov
jle
lea
and
cmp
std
int3
loop
mov
js
fisttps
ja
lret
push
inc
addr16
dec
xchg
clc
inc
mov
add
pop
pop
mov
cmc
rcrl
mov
fcmovnu
lock
int
add
mov
sub
aam
or
imulb
jne
mov
push
lock
add
mov
jb
cmp
mov
loopne
push
mov
lods
fmuls
ds
stos
xchg
mov
jmp
sub
or
loope
addr16
clc
push
fldt
or
dec
mov
loopne
pop
xchg
and
xchg
mov
mov
add
xor
cmpl
lret
or
out
pop
stos
in
int3
fs
lcall
mov
insb
inc
cmp
into
lds
pop
jne
pusha
adc
ficompl
pop
push
iret
cmp
mov
lods
fwait
push
mov
outsb
or
sbb
sbb
and
xchg
dec
shrl
sbbl
mov
and
enter
push
lock
ss
mov
mov
int3
jnp
inc
das
xchg
fbld
pop
add
out
lods
xor
fldl
cmpl
or
jle
lock
pop
adc
mov
insb
inc
inc
out
rcl
add
outsl
std
ret
aas
jmp
or
ja
jg
pushl
jecxz
jno
sbb
or
cld
idivl
jae
push
xchg
aaa
fcoml
scas
mov
fcoml
xchg
cmp
lods
popf
xor
pop
mov
fsts
dec
add
dec
out
jp
dec
aas
pop
lret
mov
inc
dec
cmp
outsl
in
movsl
jmp
mov
dec
stos
notb
insl
ret
out
jle
or
xchg
lock
movsb
ss
sub
sarl
in
in
mov
stc
pop
out
push
cmc
jecxz
lret
mov
push
and
div
xchg
cmp
inc
and
loope
fldl
popf
lcall
push
pop
inc
jo
mov
int
adc
add
ret
xchg
and
mov
jg
lods
xchg
test
inc
cmp
addl
pop
fdivr
mov
inc
sub
mov
jo
inc
jne
scas
push
jle
cld
out
dec
frstor
cmpsl
stos
pop
faddl
sub
test
ds
or
mov
xor
fistpl
loopne
xor
loope
insb
incl
std
cmp
xchg
cmpl
jne
stos
hlt
lea
mov
push
cmp
rorl
das
repnz
jae
outsl
and
lsl
pop
aas
dec
fwait
stc
push
mov
in
sbbl
mov
aam
mov
cmp
call
js
fistpl
pop
mov
sbb
xor
out
jmp
enter
je
bound
or
push
pushl
enter
xlat
or
mov
addr16
sti
pop
test
mov
jno
jb
push
mov
fidivrs
orl
addr16
int
int
jg
or
dec
fidivs
out
inc
sub
xchg
adc
jns
jo
mov
dec
cmpsb
pop
hlt
js
mov
lds
sbb
add
ret
lahf
cmp
repz
fidivl
stos
fs
xlat
mov
pop
jl
mov
mov
mov
jl
inc
data16
ds
daa
adc
in
mov
pop
cwtl
testb
dec
inc
inc
xchg
jnp
std
cmp
lahf
outsl
pop
or
xor
daa
jle
stos
divb
cwtl
mov
push
lcall
stc
popf
inc
and
add
psubw
lods
or
push
ss
gs
das
test
lods
test
cmpsl
dec
or
es
rcll
and
nop
jg
and
cltd
jae
scas
push
dec
jbe
and
xor
insl
subl
mov
cmp
push
pop
loop
mov
xchg
xor
sbb
pushf
pop
pop
xchg
loope
mov
adc
mov
sub
cltd
mov
roll
xchg
lods
and
push
mov
jp
push
xchg
xchg
sub
mov
mov
sysenter
movsl
inc
mov
pop
push
jb
in
lods
jne
xchg
repz
shr
icebp
pop
mov
mov
std
repnz
xor
int
test
cli
addl
or
pushf
pop
pop
aam
and
out
push
in
inc
movsl
xchg
add
sub
jecxz
sbb
out
mov
adc
dec
enter
in
jp
test
daa
enter
test
fwait
sub
adc
scas
xor
xchg
push
jmp
pop
mov
outsb
jg
sub
in
stc
jae
rorb
jbe
dec
bound
push
cmpsl
lahf
int3
dec
add
jb
loopne
in
stc
das
int3
lcall
cmpsb
dec
scas
adc
arpl
repz
sahf
or
sahf
xlat
xchg
inc
repz
aam
daa
and
xchg
jo
xorb
xchg
das
inc
pop
sahf
jmp
pop
cmp
push
nop
sbb
lret
jge
cmpsb
mov
shl
adc
adc
insb
mov
fwait
sub
jl
or
mov
fisubrl
out
push
adc
dec
mov
vshufps
ficoml
movsb
outsl
mov
faddp
stos
js
cmpsl
jp
or
jecxz
add
lea
sub
icebp
jbe
cmc
or
cmp
xchg
xor
lods
arpl
shll
sbb
out
stos
jnp
jmp
repz
sub
cli
push
jmp
jns
in
dec
sahf
inc
decl
and
stc
jmp
mov
adc
jg
mov
mov
dec
out
lahf
sbb
ss
and
icebp
mov
scas
inc
add
dec
imul
adc
test
scas
sbb
xor
cmp
dec
ljmp
adc
pop
lods
dec
mov
sahf
mov
cmpsb
clc
sarl
das
jno
dec
cmpsl
bound
loop
and
cli
icebp
cltd
repz
lahf
out
in
ret
cmpsl
mov
imul
pop
fsubr
inc
clc
outsb
and
out
jle
mov
addr16
nop
push
inc
add
fs
sub
push
rorl
mov
shll
scas
lods
mov
mov
pop
sbbb
gs
cmp
mov
xchg
aaa
daa
sub
shrl
xchg
les
xlat
movsl
jg
lock
or
xchg
and
inc
pop
push
jl
mov
mov
jbe
xor
or
and
lcall
push
lds
adc
orl
into
mov
faddp
in
add
push
jge
dec
lods
inc
mov
call
pop
fs
stos
cmp
outsl
lahf
inc
sbb
push
xchg
push
pop
jge
jnp
iret
sbb
in
mov
fimull
push
subb
pop
roll
xchg
xchg
ljmp
movb
cmp
out
xchg
ret
outsb
cmp
pop
push
test
sarl
movsl
dec
adc
push
add
ret
aam
test
inc
push
shr
push
faddp
andl
pop
pop
cld
xchg
in
imul
nop
in
xchg
shl
sbb
or
lcall
jbe
aaa
add
aad
sub
int
jecxz
in
pop
aaa
pop
scas
ds
addl
sarl
mov
and
and
mov
stos
dec
aas
and
je
fldenv
jecxz
outsl
mov
stos
test
and
jb
out
jg
popa
pop
rorb
add
mov
bswap
push
les
fld1
add
scas
jnp
fiadds
mov
outsb
sub
inc
jbe
stos
inc
xchg
cld
outsb
mov
jb
push
cs
int
cwtl
push
jl
and
inc
pop
pop
repz
ficoms
clc
mov
arpl
js
push
jns
jecxz
mov
pusha
lds
pusha
imul
pop
jb
inc
js
in
pop
ret
jl
or
mov
or
inc
mov
scas
cmpsl
ret
mov
push
rorl
add
mov
shll
add
outsl
stc
in
dec
adc
sub
push
push
rorb
ret
addr16
mov
stos
shl
cwtl
lret
das
sub
scas
and
jno
lods
jmp
mov
pop
and
inc
mov
insb
push
fisttpl
mov
add
adc
pop
lods
clc
fbld
popf
or
mov
imul
test
test
or
sbb
outsl
sub
es
or
mov
xor
mov
imul
int3
or
mov
pop
pop
and
out
leave
or
fsubrl
pop
mov
cmp
push
insl
cmp
jb
cmp
inc
adc
aaa
and
test
movsl
sbb
outsl
shll
into
cwtl
lods
pop
test
and
pop
mov
out
in
es
inc
int3
add
xor
add
pop
shl
clc
stos
xor
xor
loopne
cli
arpl
fildll
sub
cmp
stos
or
dec
pop
and
pop
xor
xchg
or
ret
xchg
ss
inc
pop
add
pop
sbbb
imul
lods
pushl
jmp
dec
cs
jnp
jp
rcll
pop
out
sbb
push
and
add
mov
fsub
add
orb
fcomp
lock
sub
push
dec
push
loope
cld
out
push
outsb
pop
jge
push
ss
and
popf
decl
and
hlt
aaa
imul
lds
push
mulb
outsb
jbe
cmpsb
jnp
cmpb
je
mov
sbb
adc
fsubrs
hlt
dec
inc
mov
mov
cmp
test
and
dec
imul
js
xchg
jb
ror
lahf
mov
sbb
xchg
and
xor
loop
pop
aad
inc
pop
int
mov
call
mov
push
aad
sbb
dec
das
cmp
dec
aam
lea
push
dec
outsb
addl
or
jns
loope
xor
fsubl
pop
cmp
adc
mov
add
xchg
ret
pop
nop
mov
or
out
cmp
in
mov
test
sub
lods
xchg
call
inc
jo
add
dec
les
and
and
push
add
mov
xlat
jg
in
ds
pop
cmp
and
jp
dec
test
cmc
sub
pop
jne
sahf
xchg
adc
out
xchg
mov
cmpsl
cs
mov
and
sub
call
fadd
lahf
sub
inc
gs
rorl
fbstp
push
popf
push
insb
jmp
dec
dec
cmp
rcr
fstps
cmc
pusha
lret
jns
sbb
cmp
and
dec
cmp
mov
cmp
mov
mov
xchg
cwtl
cltd
or
dec
cli
push
xchg
stc
mov
data16
xor
or
adc
orb
mov
cmp
popf
mov
or
mov
sbb
cmpsl
and
jae
adc
pop
filds
in
mov
dec
sub
push
xor
or
cmc
mov
xor
scas
sub
jle
in
ljmp
lahf
and
push
out
add
inc
je
inc
hlt
xor
jg
fbstp
xchg
test
rorl
xchg
ret
out
clc
push
cmpl
inc
push
lcall
shll
jne
roll
mov
inc
iret
rcrb
ret
adc
xchg
out
js
dec
dec
push
xchg
rcrb
test
test
lret
or
scas
aaa
loope
imul
push
dec
les
iret
pop
orl
cli
rcrb
cmp
popa
icebp
mov
jle
js
push
shr
pop
es
pop
iret
notb
mov
outsl
fs
scas
je
clc
jae
mov
mov
inc
je
push
mov
mov
mov
xchg
jnp
mov
mov
cli
iret
fs
out
lret
mov
aaa
jb
bound
push
inc
in
imul
pop
or
loopne
shr
jle
lcall
and
jb
out
add
cltd
mov
jb
mov
fstl
jecxz
and
cmp
pushf
sub
in
or
into
mov
out
stos
sub
mov
ficomps
and
cwtl
xlat
arpl
fildll
pop
inc
fisttps
xchg
mov
xchg
roll
push
mov
xor
shr
mov
je
icebp
jecxz
les
scas
add
mov
jmp
aam
pop
sub
dec
and
jne
sbb
test
popf
mov
or
or
inc
jmp
test
jns
and
adc
dec
adc
lea
xor
mov
sti
in
je
cli
loop
xor
mov
testl
adc
jle
sbb
add
push
outsb
or
int
and
arpl
adc
xchg
fisubl
inc
cmp
sub
out
add
jmp
adc
adc
cmp
xchg
inc
mov
jmp
xor
jg
repnz
sahf
push
dec
mov
in
jmp
pusha
iret
nop
daa
movsl
ds
adc
jle
aad
jp
add
or
lcall
mov
sahf
push
xchg
pop
mov
lds
lds
int3
ljmp
add
rorb
push
outsl
rorl
jne
dec
popa
jo
mov
pop
pop
pop
aas
pop
xchg
jecxz
adc
loope
add
sbb
movsb
xlat
pusha
arpl
jo
mov
js
dec
jno
arpl
cmp
add
shrl
jg
mov
std
enter
pushf
ret
xor
jle
stos
iret
adc
and
cmpsb
addb
andnps
mov
inc
loopne
xor
and
shl
cli
or
mov
or
loop
enter
sbb
mov
rcl
mov
ds
icebp
hlt
and
or
push
cmpsb
xlat
jns
xor
fcmovbe
stos
fcmovnbe
loop
cmc
xchg
ljmp
and
out
in
mov
xchg
in
fsincos
fst
icebp
add
mov
ficoms
inc
jle
rol
mov
mov
mov
and
loopne
addr16
xlat
jnp
sbb
xchg
and
rcrl
sbb
xchg
mov
cmp
addb
cwtl
aaa
pushf
in
fcomip
aaa
mov
xchg
ss
jl
cli
sbb
push
pop
xor
mov
out
and
orb
rcl
addr16
popa
inc
xor
outsl
fldenv
mov
push
dec
movsb
inc
sub
or
push
ds
sti
ret
enter
aad
inc
or
jb
jns
rolb
add
fistpl
inc
lret
imul
fcompl
jne
jbe
daa
ret
mov
cmc
pop
adc
out
jb
jmp
cmp
push
negl
popa
int
mov
test
mov
dec
negl
cwtl
lahf
jnp
into
mov
inc
jp
lea
pop
into
lods
adc
ret
add
mov
push
jecxz
sub
movsl
sbb
push
cmp
mov
or
sahf
pop
mov
adc
dec
inc
and
adcb
adc
jbe
jmp
mov
adc
sahf
stos
lock
adcb
cmpsb
xor
mov
outsb
add
and
out
add
or
fnstsw
stos
sub
or
movsb
jns
in
mull
or
or
nop
cmp
cmp
lret
pushf
pop
cltd
adcl
sub
je
cwtl
push
or
push
sub
fcomps
loope
adc
push
lods
dec
sub
mov
pop
and
icebp
subb
xchg
adc
xchg
mov
jns
lret
lret
dec
sbb
fstps
cli
adc
rorb
rcll
inc
pop
sub
mov
shl
imul
daa
cwtl
or
stc
rorb
mov
push
cmp
filds
push
inc
lds
jecxz
pop
fisttpll
mov
enter
add
outsl
push
enter
shll
inc
push
and
xchg
nop
push
fcmovu
xchg
jmp
cmp
pop
lret
frstor
push
outsb
jno
pop
and
stos
fdivl
scas
mov
cmp
pop
adc
mov
pusha
aas
mov
jae
add
mov
ret
xchg
ja
sub
jnp
ficompl
jmp
leave
cmp
sbb
dec
aam
or
inc
mov
xchg
std
dec
xchg
orl
repnz
jae
out
sub
adc
out
or
pusha
gs
lahf
subb
pushf
imul
inc
jg
mov
add
mov
jnp
mov
jp
inc
mulb
inc
lcall
lock
mov
jp
xor
pusha
pop
dec
in
push
lea
mov
pop
in
pop
les
roll
cwtl
pop
in
lods
ffreep
outsl
repz
cmp
cmp
bound
or
push
dec
push
gs
enter
sub
repz
leave
and
or
pop
sbb
mov
jmp
test
adc
loopne
js
xor
out
add
add
and
mov
sti
test
ja
inc
jb
pop
and
mov
cmpxchg
enter
xchg
cld
icebp
mov
dec
mov
imul
and
insb
in
stos
std
enter
mov
testl
pushf
and
dec
xchg
sub
pusha
xchg
mov
xchg
movsb
pop
or
inc
pop
add
mov
push
push
or
lret
lea
cmp
adc
dec
jne
dec
fwait
int
scas
scas
mov
movl
ficoms
sub
cli
and
arpl
icebp
or
sub
add
cmpsl
hlt
dec
push
invd
xlat
loopew,pt
push
lahf
push
adc
mov
repnz
pop
and
repnz
fdivrs
ds
add
in
std
fs
mov
adc
xchg
sbb
mov
ja
inc
sub
sub
jae
mov
add
and
xchg
push
adc
lret
push
xchg
jmp
insl
mov
pop
lea
mov
jnp
mov
out
push
lret
add
adc
in
mov
sahf
mov
mov
imul
xchg
xchg
mov
xchg
ficoml
adc
mov
jo
gs
shl
mov
lcall
mov
mov
cmp
adc
imul
xchg
mov
arpl
stos
sbb
pop
mov
cmp
mov
or
dec
in
mov
paddsw
mov
mov
mov
pop
sub
adc
jmp
cli
daa
push
cli
push
sbb
pushf
mov
sub
lret
sub
out
mov
pop
movsl
aaa
adc
xor
add
mov
shrb
inc
test
gs
jl
test
mov
lds
pop
je
push
cmp
sbb
mov
push
cld
cmpsl
mov
decl
cmp
cmp
push
inc
xor
and
out
push
jmp
and
lret
pop
ja
test
imul
fldt
cltd
arpl
rep
inc
fisttps
mov
sbbl
xchg
fsubl
repnz
and
mov
cmp
jecxz
and
xchg
push
dec
inc
dec
adc
ret
xchg
mov
in
gs
pop
fisttpl
push
nop
lahf
mov
xor
xchg
ja
adc
ds
stos
and
out
negb
inc
and
push
stos
hlt
test
or
adc
add
jo
push
les
lods
enter
bound
bound
jge
rcrb
sbb
sbb
mov
pusha
out
gs
mov
leave
aad
xchg
jae
iret
push
hlt
sbb
mov
and
push
sub
inc
nop
bound
sbbl
lods
cmpsl
cwtl
or
jmp
jno
pop
jg
leave
pop
push
jb
sub
pusha
xchg
jl
or
adc
mov
fistl
les
add
daa
sbb
jo
into
cmpsb
fwait
add
cltd
mov
fdiv
mov
pop
push
or
mov
aam
neg
out
orl
cmp
ffree
sub
adc
push
jp
cmpsl
test
aas
sarb
push
test
popa
push
fisubrl
inc
imul
insb
movsl
lahf
in
push
add
test
or
cmpb
mov
push
insb
cmpsb
sbb
or
cld
mov
push
lods
jne
push
lock
xchg
pop
or
test
inc
cmpsb
xorl
sbb
push
pop
pop
loopne
cmpb
cmc
pop
repz
dec
not
dec
cmp
jmp
jbe
jnp
xor
mov
mov
pop
xor
xchg
push
int
js
cmp
xlat
xor
addb
popf
jmp
jl
jg
cltd
push
icebp
inc
jmp
push
push
mov
leave
stos
int3
movsb
aam
leave
pop
test
divl
popf
inc
arpl
cmp
ror
movsb
mov
sub
add
mov
inc
in
xchg
lret
sarl
dec
jns
xchg
pop
mov
insb
test
mov
adc
mov
out
sub
mov
mov
fnsetpm(287
mov
sub
data16
jp
or
and
cmpsb
xchg
lods
cmp
push
sub
fwait
cmp
push
out
sti
and
cmp
stc
inc
loop
and
les
xchg
ss
and
add
mov
adc
cmc
cli
inc
repnz
test
sub
sub
cli
loopne
mov
or
cmc
add
mov
xlat
mov
jb
cmpsl
dec
sbb
sub
testb
sbb
xlat
jge
mov
cmp
fs
lods
pop
dec
leave
mov
imul
xor
xchg
arpl
je
mov
cld
cltd
dec
and
insb
mov
int
inc
push
jp
jecxz
dec
imull
mov
rorb
xor
out
insb
int3
fsubrl
lock
push
test
inc
movsl
andb
in
out
mov
cmpsb
test
cmp
dec
xor
icebp
repz
stos
jbe
in
enter
sbb
outsl
imul
inc
pop
es
ss
in
lock
push
xchg
cmc
mov
jb
jl
decb
loop
xor
cltd
jne
mov
je
push
sbb
add
ds
insb
pop
cli
sbb
fadd
or
jno
pop
popa
jae
fcomps
dec
addr16
fucomi
dec
xchg
sub
ja
xor
movsl
nop
and
cmp
push
out
jge
ret
aas
mov
mov
lods
fnstcw
clc
mov
jle
dec
mov
pop
scas
push
push
daa
stc
and
add
out
sub
sbb
shlb
leave
or
ljmp
sub
dec
push
mov
js
cmp
sub
pop
repz
and
pop
xchg
mov
adc
add
and
sti
clc
fisubs
jbe
test
add
sti
mov
jbe
dec
xor
add
cld
iret
fdivrs
push
movsl
cmc
and
mov
inc
and
cltd
aam
add
jl
out
andl
sbb
lret
cs
xchg
lds
fsubp
aas
sbb
pop
push
push
imul
push
add
outsb
divb
rol
andl
mov
jecxz
jp
mov
adc
adc
lret
jg
add
add
sbb
adc
and
and
inc
cmp
mov
push
jge
icebp
push
mov
js
dec
inc
jns
inc
or
dec
mov
rcrb
fisubs
arpl
lea
xchg
xchg
dec
roll
repnz
sbb
imul
rcrb
jl
aad
cltd
cld
dec
dec
pushf
add
dec
stos
insb
jge
mov
hlt
xchg
cs
or
mov
adc
in
inc
fwait
xor
mov
mull
insb
xor
clc
insl
jne
outsl
stc
imul
sbb
dec
movsb
les
ss
cmpsb
jno
push
push
sub
add
xlat
adc
fldenv
sbb
jge
scas
aam
daa
stc
sti
aad
cmp
sbb
mov
dec
mov
pop
lods
sbb
xlat
mov
loopne
mov
stc
xchg
cmp
into
xchg
je
loope
push
in
mov
jge
xorb
es
push
jb
pop
inc
or
iret
flds
nop
test
lcall
int
ret
loop
adc
push
mov
repnz
es
inc
or
jnp
scas
pop
ja
xchg
mov
lret
fstp
inc
pushf
mov
xor
rcll
jg
push
dec
adc
mov
in
jl
icebp
dec
outsb
insl
mov
out
out
jnp
sahf
ret
sbb
pop
inc
rcl
dec
xchg
push
arpl
subb
xchg
sub
aas
stos
mov
pop
stc
mov
lret
pusha
test
cmp
shrl
xchg
mov
push
jg
decb
ds
and
stc
push
jb
xchg
and
pop
sub
and
sub
push
jp
lock
lock
in
pop
dec
lcall
mov
cmp
inc
sub
mov
push
cmp
aam
xor
addb
loop
and
rorl
jmp
sbb
lret
dec
push
repz
jbe
divl
outsb
sar
leave
loopne
nop
cld
scas
scas
stc
jne
fcomps
into
insb
pop
ja
pushf
inc
inc
mul
call
test
push
fcoml
test
cmp
push
fsubrs
sub
xchg
data16
mov
mov
push
or
push
pop
or
mov
pop
pop
sbb
hlt
push
iret
mov
movsb
xlat
arpl
mov
fbstp
adc
pop
mov
sub
mov
imul
xchg
xorl
cli
or
in
push
adc
dec
lods
les
lret
pop
outsl
xor
mov
jbe
sub
and
or
shlb
stc
test
insl
ror
movsb
cmp
shrl
jno
sti
or
jmp
dec
std
xchg
push
out
inc
stos
xchg
push
stos
jmp
cmp
loop
xlat
mov
in
enter
movsb
stos
sbb
enter
jp
xorl
adc
jbe
loope
sub
and
inc
cmp
stos
outsb
cmp
aam
mov
push
xchg
dec
add
repz
movsb
sub
fidivrl
xor
nop
inc
mov
movsl
and
scas
jg
jmp
in
cmp
cmp
out
test
insl
jns
pushf
lret
jno
add
stos
hlt
addr16
imul
adc
inc
cs
sub
rolb
or
add
inc
adcb
push
jge
or
cs
pusha
std
jbe
data16
pop
xor
cli
into
xor
jmp
mov
hlt
roll
scas
cmc
inc
lcall
in
and
fsubrl
dec
pop
jg
inc
cld
jmp
in
call
jge
adc
js
sahf
adc
cmp
stos
fistpl
fisubs
sti
shrl
cmp
xchg
std
es
push
cmp
cmp
lds
push
cli
jle
stos
fsts
push
xorl
outsb
loopne
rolw
xchg
movsb
dec
mulb
out
cs
mov
add
jae
mov
push
cld
jmp
sub
repz
mov
add
leave
shr
mov
inc
inc
data16
es
popf
inc
and
add
mov
dec
lahf
cld
stos
ss
mov
add
sbbb
sub
xor
xchg
out
push
mov
jae
pop
push
xchg
in
es
cmp
push
mov
leave
xlat
cwtl
mov
loope
cmp
lret
xchg
cmpsb
scas
repnz
sbb
cmpsb
sub
shrb
lods
rclb
cmc
rcrl
cmpsb
xchg
lret
and
aaa
mov
push
mov
out
stos
xchg
dec
test
pop
xorb
ja
push
cld
push
jnp
and
sub
shrb
xchg
push
adc
enter
cltd
push
cmp
fwait
data16
js
mov
mov
or
fucom
mov
dec
movl
lret
mov
add
xor
mov
pop
pushf
jns
mov
icebp
mov
mov
lods
aaa
sub
sti
xchg
push
cmp
sbbb
out
int
daa
lock
scas
decl
cmp
inc
and
inc
mov
mov
js
pop
pop
jae
fwait
jo
jle
pop
xor
xor
rolb
or
or
pop
dec
loope
mov
data16
mov
mov
test
sub
call
or
fsubr
inc
in
pop
enter
repnz
pop
jo
push
sbb
rolb
out
bound
xchg
or
sub
inc
pusha
inc
outsl
mov
jmp
inc
xchg
sub
imul
in
das
cmp
popl
sub
dec
xchg
dec
sbb
add
mov
xor
aad
rcll
push
lret
xchg
nop
dec
sbb
icebp
call
xlat
pusha
int
add
cltd
add
dec
or
sbb
or
and
mov
add
daa
cli
dec
xor
popa
push
sbb
push
daa
fidivrs
filds
mov
mov
inc
das
out
sarb
lods
iret
jo
xchg
aaa
adc
push
je
stos
imul
aam
inc
mov
xlat
mov
js
xor
aad
and
call
mov
mov
sbb
push
mov
mov
int3
imul
add
outsl
xor
inc
jns
mov
repz
sbb
or
push
fimuls
mov
fistps
iret
fldt
stos
popa
xchg
sub
scas
call
jp
aam
inc
cmpsb
mov
mov
scas
aam
pop
orb
mov
js
jg
fwait
sub
shr
dec
insl
andb
fsts
jmp
js
stos
jne
or
jle
jle
loopne
stc
mov
pop
fistps
cmp
sti
mov
lcall
sahf
mov
and
loopne
ja
pop
push
mov
xor
in
shrb
out
pop
sub
adc
add
jmp
or
jae
addb
andb
sbb
enter
adc
sub
out
ss
pop
inc
sbb
in
sub
sub
js
je
aad
push
sub
or
and
addl
jo
pop
mov
arpl
sub
test
jg
outsl
cli
icebp
cmp
pop
sub
ja
ja
mov
jg
or
testl
cmpsb
stos
int
mov
pop
dec
dec
adc
pop
add
ja
mov
popa
insb
div
sub
cld
aaa
pop
mov
jae
jmp
jge
mov
sbb
jns
cld
loope
fimull
test
xorl
xor
and
int
xor
adc
stos
mov
roll
xchg
addr16
sbb
inc
loop
and
frstor
xchg
flds
xchg
pop
lcall
cld
sahf
mov
xchg
cmp
in
fdivr
push
mov
jns
pop
cld
cmpb
cmp
sbb
shlb
jl
inc
sub
push
cs
nop
popa
mov
mov
xor
fnstcw
in
inc
xor
or
mov
out
jl
mov
push
js
pop
and
adc
push
mov
mov
pop
add
inc
pop
mov
sbb
mov
adc
and
push
push
push
xchg
push
mov
mov
icebp
negl
dec
push
xor
xor
cmpsl
inc
cld
and
sbb
iret
pushf
xchg
sub
xchg
sbb
or
mov
jg
daa
xor
cmp
sbb
mov
loop
movsb
pop
mov
scas
push
movsl
lret
and
xor
aas
movsb
inc
outsb
repnz
xchg
sub
ja
inc
movsl
imul
cmp
dec
xchg
and
add
cmpsl
imul
sbb
adc
fcomi
cmp
lahf
aad
dec
jb
shlb
add
mov
lret
ds
pop
cli
addr16
orb
fsubr
add
dec
orb
sbb
mov
and
enter
cmpsb
xor
push
push
mov
xchg
xchg
dec
push
movsb
pop
stc
cli
and
add
shll
mov
and
cmc
test
xor
mov
nop
movsb
jne
jp
aad
lahf
add
push
push
or
movsl
gs
fbld
in
je
inc
fdivr
mov
js
adc
sub
dec
mov
stos
mov
xchg
mov
cmp
sti
sub
sbb
mov
xlat
or
xor
inc
sub
lods
jmp
lahf
xchg
loop
bound
xor
or
sub
iret
push
mov
enter
enter
es
aas
mov
das
bound
or
xor
push
mov
xacquire
mov
push
int3
jecxz
pop
inc
sbbb
in
aam
pusha
ror
xchg
addl
push
je
mulb
pop
int3
mov
cmc
sti
xchg
int3
mov
mov
dec
sbb
xor
xchg
push
mov
add
cmp
testb
fidivs
subl
dec
push
add
rcrl
fdivl
mov
mov
int
sub
jo
mov
scas
mov
ret
or
push
add
mov
dec
mov
mov
ja
mulb
inc
movsb
aad
jp,pn
sbb
pop
ret
int
out
cmp
jl
mov
xor
les
dec
dec
inc
repz
mov
sub
fists
in
or
adc
test
and
je
add
sub
ret
adc
in
adc
pop
mov
lcall
imull
fsubs
or
orl
jns
cmpsl
aas
sub
and
clc
push
hlt
xor
call
inc
sub
faddp
std
shr
cmp
sub
pop
sahf
sti
mov
or
adc
cmpsl
rorb
jne
jne
scas
aad
dec
imul
jle
out
in
or
mov
outsl
rol
adc
jnp
xor
fisttpll
test
push
fists
hlt
mov
scas
gs
adc
xchg
int3
dec
jge
fdiv
mov
sub
cmc
outsb
mov
lret
outsl
cmp
incl
push
xor
push
mov
outsb
xchg
lahf
es
cld
pop
jecxz
inc
outsl
push
push
jae
xchg
cmpsb
mov
push
idivb
lock
adc
mov
loopne
jmp
rcrb
sub
cli
cwtl
and
mov
or
ret
jmp
mov
int3
ret
xrelease
leave
into
dec
jnp
sub
imul
aaa
or
push
je
cwtl
pop
cld
jecxz
push
cmp
out
jmp
dec
or
dec
mov
push
xor
add
aaa
stos
hlt
add
cmp
mov
sbb
inc
je
push
insl
jecxz,pn
jmp
jg
sti
pop
nop
cmc
fsubrl
fwait
xchg
push
inc
inc
sbb
cmp
insl
mov
sub
out
lcall
outsl
mov
pushf
or
cmovs
or
fnstenv
mov
mov
inc
jle
hlt
popf
dec
mov
push
xchg
fwait
ss
je
ljmp
sbb
outsb
mov
pop
pop
enter
lcall
jns
sbb
sbb
mov
insl
cmp
pop
jb
adc
mov
icebp
leave
sbb
mov
add
push
stc
pop
mov
dec
mov
lret
je
xor
mov
lcall
and
push
jne
icebp
addb
pop
xchg
xlat
add
sarb
adc
sub
add
xchg
sbb
jg
push
mov
add
add
mov
daa
adc
inc
mov
fsubr
lea
sub
fidivs
adc
in
adcb
insl
dec
aam
insl
push
nop
test
rcr
or
jle
test
dec
lods
rcrl
pop
and
jo
xlat
and
xchg
mov
popf
pop
dec
rorb
sbb
cltd
scas
xchg
in
cmp
lret
sub
dec
pop
andl
xchg
cmp
inc
push
fwait
cs
jge
fucomip
ss
mov
pop
xchg
icebp
fistpl
xchg
pop
iret
loopne
add
iret
lods
stos
movsl
pop
loope
inc
jmp
sbb
mov
leave
sbb
or
das
adc
cmc
out
jno
in
lods
push
or
dec
xor
test
jge
mov
sti
lcall
mov
mov
dec
push
sub
fucomp
jg
ret
inc
call
ret
leave
and
test
jmp
pop
mov
mov
push
imul
pop
sub
rorb
pop
test
daa
addr16
icebp
pop
cmp
vpmulhw
mov
sub
mov
mov
rorl
and
inc
fisubl
pop
movsb
sub
outsl
cmp
or
jno
call
push
pusha
cmpsl
enter
in
dec
test
not
repnz
push
mov
mulb
mov
cmpsl
jmp
push
xchg
mov
scas
rcrb
xor
insl
xchg
lods
fldcw
decl
mov
cli
xlat
inc
jl
jnp
lea
ljmp
cwtl
jmp
adc
cmp
cwtl
arpl
mov
scas
test
lods
ss
lea
inc
adc
cmpsl
adc
aad
pop
imul
add
and
mov
stos
test
ficompl
and
adc
movsl
popa
jne
inc
xchg
adc
lock
cmp
lcall
push
add
inc
sbb
dec
aam
iret
icebp
vfrczps
cmpsl
or
mov
mov
xchg
dec
lret
mov
sub
jb
mov
jnp
jge
testl
in
andb
mov
in
cltd
out
loopne
outsb
fadds
and
lcall
pushf
aam
scas
mov
cmp
add
or
pushf
inc
dec
jae
cmp
cwtl
mov
push
jb
mov
push
stos
jecxz
loopne
dec
lea
mov
add
xchg
std
push
fstps
int
shl
pop
mov
fs
mov
sbb
mov
sti
loop
xchg
push
lds
push
test
insb
popf
adc
mov
sub
add
lret
cli
inc
mov
cli
dec
push
nop
dec
mov
mov
fdivl
adc
cmp
repz
not
mov
mov
test
out
mov
xor
inc
cmpb
lods
sbb
xchg
idivl
mov
and
mov
cs
or
jo
sub
sbb
test
push
jo
xchg
push
pop
mov
inc
pop
dec
push
xchg
lock
shl
mov
ss
imul
xchg
cwtl
cli
mulb
and
call
adc
int3
lods
mov
test
adc
mov
xlat
stc
push
inc
repz
mov
jmp
sbb
dec
ficomps
cs
push
ficoms
cmp
cmc
out
push
lea
fsubs
sub
movsb
lods
outsb
mov
and
inc
pop
in
push
inc
pop
jl
mov
popa
dec
adc
pop
inc
mov
lock
mov
mov
fsub
addb
data16
jb
sub
out
negb
mov
ret
gs
pop
sbb
and
push
iret
loop
adc
push
xchg
in
and
mov
movsl
adc
mov
add
outsl
dec
cmpsl
and
inc
cmpsb
pop
sub
scas
rol
test
stc
push
mov
call
jecxz
xchg
jge
test
aad
pop
ror
mov
fisttpl
insl
mov
mov
mov
subl
stos
jno
out
fimull
xor
or
or
or
mov
jae
inc
jbe
add
clc
sti
cmp
sub
xlat
icebp
inc
in
mov
and
or
mov
cmpl
jp
xchg
ror
test
jns
repz
cmp
jb
or
xchg
and
sub
xor
cltd
ds
or
fisttps
cli
shrl
pop
lods
dec
test
dec
in
mov
mov
sub
jb
cmpsb
mov
lahf
clc
into
dec
xchg
cmpps
pusha
adc
insb
cwtl
int3
pop
out
into
jne
movsb
mov
lods
daa
loop
lock
pop
dec
loopne
cmpsl
lret
adc
clc
imul
xchg
add
dec
mov
inc
sub
into
insl
mov
ret
in
sub
test
or
mov
dec
hlt
mov
cmp
inc
mov
jo
jns
loope
loopne
sub
cltd
push
mov
into
ljmp
cmp
push
cmp
lods
or
push
dec
lcall
add
outsb
dec
in
rol
mov
add
add
and
jp
into
xor
cmpb
dec
mov
cltd
lds
mov
mov
cmpsb
std
or
add
lds
mov
cmp
repnz
arpl
fmulp
push
jb
xchg
iret
pop
mov
cmp
add
aad
xchg
test
xchg
mov
push
xchg
or
xchg
add
dec
leave
sub
mov
fwait
pop
js
mov
shll
and
or
jl
sub
cmpsw
xchg
fstp
cmp
ss
xor
in
clc
fistpl
push
mov
and
fstl
push
or
cli
ret
push
leave
out
or
cltd
imul
cwtl
push
les
add
mov
mov
xchg
nop
xchg
xchg
rolb
into
push
insb
jmp
mov
jl
jecxz
push
stos
and
testb
push
lret
xchg
imul
movsl
icebp
xlat
pop
lods
cmpsl
lcall
and
mov
into
add
xchg
daa
loopne
out
adc
mov
cli
imul
cwtl
test
sub
scas
inc
mov
fldl2e
daa
sarb
stc
push
or
or
push
scas
jecxz
mov
addl
insl
imul
fcom
cmp
add
shll
mov
out
bound
subb
sbb
ffree
adc
mov
call
mov
and
gs
hlt
cmpsl
xchg
es
mov
jl
in
mov
je
out
mov
jo
mov
cmp
ret
inc
inc
in
in
jp
ja
mov
lret
mov
pop
mov
leave
push
adc
inc
dec
aad
adc
jecxz
xor
lods
adc
loop
xor
cmp
xchg
cmpb
jo
mov
push
stos
mov
dec
fisubrs
sub
cmp
fnsave
cmp
iret
cmp
pusha
lods
mov
xor
and
mov
insl
xchg
adc
shrb
xchg
lods
sbb
and
aad
or
pop
imul
fisubrs
mov
aaa
addr16
adc
push
jae
xchg
std
push
sbb
add
fdivr
pop
mov
xchg
iret
pop
out
or
inc
push
orl
call
cmp
push
add
iret
fcmovbe
push
ret
inc
and
jecxz
dec
aam
lock
roll
cmp
ljmp
in
stc
pushf
mov
xor
fstpt
jmp
iret
mov
adc
out
sti
inc
ja
repnz
test
ficoms
rol
pop
mov
xchg
or
cld
lea
adc
mov
outsl
mov
ret
mov
push
sub
adc
fimull
pop
push
cmp
rorb
popf
push
pop
aaa
sub
push
scas
mov
cli
repnz
mov
jmp
inc
jg
add
fstpl
cwtl
xor
stc
fistpll
das
fstpl
inc
inc
sbb
mov
and
xor
jb
xchg
jne
aas
sbb
imul
sbb
sahf
or
subl
scas
jno
mov
push
aaa
cmp
mov
pop
pop
in
pop
cmpl
insb
or
iret
sub
mov
out
fisubl
and
xor
sbb
pop
iret
gs
cs
leave
xchg
push
stos
mov
shll
insl
cs
lret
mov
nop
pop
pushl
ss
push
rcrb
out
sbb
adc
mov
jl
or
les
xchg
xor
test
pop
movsb
pop
imul
test
frndint
test
aad
inc
cmpsb
or
xchg
imul
clc
add
shufps
pop
test
cmpsl
test
movsl
std
movsb
out
sub
cwtl
mov
lcall
ja
sarl
sbb
lods
repz
or
test
pop
dec
xchg
lods
or
inc
jg
sbb
divb
leave
les
cmp
cmp
mov
and
mov
xchg
inc
out
cmp
sahf
cmp
rcll
pop
pop
sti
stc
mov
jb
rorl
sbb
add
pop
xchg
mov
sbb
mov
push
mov
cmp
cmp
fwait
jle
jo
int
inc
lea
lcall
xchg
adc
jge
sbb
repnz
sbb
cmp
mov
adc
fmulp
out
mov
xchg
push
cwtl
cld
pop
cwtl
lds
and
adc
clc
cs
ret
lcall
xchg
jb
fists
xor
jae
out
jecxz
fiaddl
in
push
data16
jno
scas
jb
enter
dec
in
mov
xlat
xchg
pop
mov
aaa
mov
nop
inc
inc
push
test
shl
push
cmc
push
fcomp
xor
cmp
jo
stos
or
xchg
add
sub
mov
dec
loope
stos
arpl
adc
xor
lods
cmp
dec
add
adc
jne
in
sbb
enter
lret
fdiv
push
or
sub
push
mov
popa
imulb
mov
mov
movsb
sub
xor
inc
outsb
and
sbb
lahf
and
sbb
adc
aam
pop
dec
add
cmp
push
lods
jmp
js
in
lcall
sti
popa
out
and
sbb
fcmovbe
or
test
pusha
aam
jns
push
iret
orb
jo
ficoms
shl
loopne
push
push
pop
lcall
out
popf
mov
cmc
repz
divb
into
cmpsb
sub
scas
sub
or
loop
sarl
xchg
mov
pop
fwait
mov
cs
push
mov
and
cwtl
stos
or
or
in
popa
jns
cli
test
push
movsb
sub
fxch
or
pop
push
push
std
push
and
cs
imul
icebp
push
pop
sbb
sub
dec
lods
mov
mov
sub
loopne
xlat
fidivrl
hlt
jnp
and
mov
cwtl
and
lcall
incl
cmp
push
out
iret
clc
push
and
out
xor
insb
jge
mov
jae
jb
cmp
or
sub
daa
gs
shrl
lea
xchg
sub
or
mov
jp
push
call
std
repz
sub
mov
sbb
dec
fisubrl
mov
js
sbb
dec
imul
jl,pn
cwtl
and
cmpsl
fdivl
imul
and
mov
insb
mov
imul
popa
mov
sub
gs
xchg
jb
inc
cmp
cld
hlt
dec
cwtl
cwtl
cmc
out
loopne
fisttps
scas
lods
jae
in
pop
and
lret
nop
popa
popf
mov
and
int3
shrl
in
xor
in
mov
mov
pop
jg
mov
addr16
andl
pop
es
add
or
lds
rolb
js
jbe
out
clc
adcb
and
shrb
dec
std
les
push
dec
cld
mov
or
ficomps
jl
test
hlt
stos
adc
inc
insl
outsb
push
lcall
add
and
mov
dec
mov
jb
pusha
popf
jmp
adc
repnz
movsb
mov
sub
loope
addr16
shrb
push
daa
and
stos
popa
je
movsl
cmpsl
lret
push
shlb
add
adc
jl
mov
mov
je
xchg
out
or
pop
push
lods
fwait
xor
ljmp
jp
mov
push
and
out
daa
adc
enter
repz
imul
aam
test
mov
add
pop
mov
clc
adc
adc
cmp
sub
sti
out
mov
xor
shll
stos
jo
leave
fwait
daa
and
out
push
fimuls
hlt
jo
fidivs
leave
push
pop
pusha
lds
dec
sbb
fdiv
pop
pusha
or
jmp
push
std
push
jge
jl
xchg
dec
xlat
in
cli
aaa
fcmovnb
aaa
jno
xor
test
xchg
mov
in
stc
push
cld
stc
jae
repz
cltd
xchg
push
or
push
mov
lods
int
mov
or
std
cmc
and
repnz
cmp
add
mov
bnd
mov
jmp
push
mov
dec
pop
adc
fstps
mov
lods
ja
aad
fistpll
testb
inc
mov
lcall
cmp
push
fs
roll
dec
fstpl
jp
and
rep
jp
or
pusha
dec
out
inc
pop
cmpsl
and
test
or
jae
sbb
mov
out
shll
or
mov
or
pop
add
push
sub
lock
outsb
xor
sbb
sbb
pusha
cltd
into
out
and
lahf
sarl
fst
fs
das
or
or
push
mov
mov
out
rcll
std
cmp
ss
jnp
inc
or
jae
mov
sub
pop
dec
mov
pop
or
ljmp
and
dec
cmp
repnz
in
cmc
movsl
or
aam
push
lds
test
cld
push
pushf
and
jp
setl
mov
outsb
push
and
clc
into
scas
mov
add
addl
iret
jae
mov
out
xor
gs
sub
and
stc
pop
jno
pop
pop
pop
pushf
shl
add
push
std
std
je
stos
imul
add
sbb
ja
and
mov
sub
stos
or
loopne
push
mov
adc
stos
mov
out
adc
dec
jmp
or
ss
cmpsl
cmp
push
dec
cld
out
push
mov
ds
xchg
in
cmpsl
pop
loopne
xor
and
mov
cld
decb
into
adc
ds
out
call
cmc
outsb
pop
and
ja
or
dec
out
push
sbb
out
sahf
imul
aaa
pop
mov
and
adc
xor
inc
add
mov
cwtl
je
data16
adc
inc
pop
xchg
cld
aad
incl
clc
in
mov
sbb
ja
lea
ljmp
nop
add
xor
push
ficomps
pavgw
lods
outsb
and
js,pn
cltd
jnp
mov
cmp
lock
fnstcw
fisubl
pop
pop
dec
test
cmp
sub
jmp
mov
mov
xchg
or
mov
cmp
das
and
ret
push
xchg
out
xor
add
xchg
jb
push
xchg
negl
mov
adc
or
out
and
hlt
add
mov
xlat
stos
lods
cmc
test
cmp
xchg
push
stos
outsb
mov
mov
into
ret
sbb
js
lret
fisttps
pop
adc
jns
xor
add
popa
sbb
push
sbb
mov
push
leave
xchg
sub
es
loope
std
or
imul
mov
sbb
xlat
mov
push
insl
lcall
test
pop
push
dec
loopne
push
sbbb
add
inc
out
not
and
push
push
ds
lods
xchg
jbe
inc
sub
cmp
sbb
and
dec
mov
or
and
insb
rorl
pop
mov
and
jge
cli
ret
dec
out
jle
sbb
test
dec
dec
in
xor
jbe
jno
jmp
movsl
xchg
xchg
add
mov
cmc
inc
jo
push
and
push
mov
popa
sbb
loopne
lahf
jae
gs
or
pop
xor
and
mov
leave
negb
ljmp
push
mov
ss
xor
jp
je
dec
lock
jmp
outsb
and
mov
sub
jp
jns
pop
pop
repnz
aas
rolb
mov
enter
mov
jns
ror
cmp
test
les
xchg
xor
adc
mov
lret
add
int3
mov
js
fisttpl
fsubr
pop
and
mov
adc
jmp
shlb
cmpsb
js
dec
inc
fxch
popf
xchg
jge
mov
adc
mov
push
fdivs
aaa
or
rol
xchg
adc
xchg
dec
aam
cmc
mov
cmp
mov
and
pushf
pop
add
ss
lahf
push
mov
sbb
lcall
test
jmp
popa
into
jecxz
mov
or
repnz
int
xchg
sbb
ficoml
cmc
xchg
pushf
xchg
pop
aaa
push
pop
jb
xchg
in
sbb
sbb
cltd
cs
push
sahf
gs
sub
inc
nop
stos
ret
adc
dec
xchg
push
inc
mov
adc
mov
les
push
repnz
gs
mov
dec
scas
mov
push
out
lea
inc
rcll
inc
jns
xchg
aaa
sbb
inc
or
jb
mov
xor
out
ret
push
jbe
cmp
xor
sub
sub
jl
pop
jnp
inc
push
lock
pusha
lret
or
hlt
xor
and
pop
popf
dec
jae
jmp
adc
rcrl
call
rorb
nop
jnp
jae
pop
inc
lret
add
mov
mov
aad
mov
jo
div
push
clc
clc
dec
ficoms
or
push
rol
adc
mov
loope
xor
jg
pop
in
jg
stos
push
fs
pop
adc
rcrb
mov
test
lret
adc
jle
xlat
mov
xchg
or
lock
xchg
clc
push
stos
mov
je
in
mov
cmp
add
std
mov
sbb
outsl
fisttpl
adc
push
repz
push
cwtl
in
and
or
mov
inc
xchg
aas
xor
clc
or
repz
cwtl
inc
xor
scas
pushf
push
pusha
shrl
jg
ret
dec
lret
addl
xorl
cld
arpl
push
cmp
ss
push
push
cmc
xor
pop
test
cmp
sbb
pop
lock
stc
pop
mov
jle
pop
lcall
xchg
sbb
out
cmpsb
or
mov
pop
aaa
adc
xor
mov
mov
dec
ret
xchg
test
dec
xor
cltd
addr16
or
mov
mov
push
push
sbb
and
cmc
into
jmp
fsub
fwait
mov
cmpsl
mov
dec
sbbb
inc
pushf
out
mov
sub
or
sti
jno
stos
jmp
testl
out
jnp
inc
icebp
add
mov
sbbb
loope
push
incb
ljmp
cmp
adcl
lods
and
out
fdivr
ret
push
out
push
dec
arpl
mov
cmc
bound
stos
lcall
xchg
cmp
shl
je
mov
xchg
add
xchg
xchg
aaa
mov
cmpsb
fcomps
inc
push
fisubl
mov
mov
sub
cmp
cs
pop
push
push
mov
movsl
mov
repz
fwait
pop
call
ljmp
mov
outsb
push
je
sub
stc
lret
cmp
sbb
lret
mov
xchg
test
out
call
stos
popa
and
int3
mov
stc
in
mov
popw
push
pushl
inc
testb
inc
pop
mov
popf
push
xor
out
pop
push
outsb
out
dec
jb
mov
nop
pop
pop
inc
inc
int
adcl
aaa
adc
loope
aas
push
pop
insb
push
jne
or
subps
imul
or
scas
xor
jno
xchg
sti
mov
xchg
test
sti
mov
and
mov
jge
push
mov
push
adc
jnp
inc
push
mov
in
mov
sbb
dec
push
pop
ret
mov
jno
cmpsb
inc
lock
cmpsl
rorl
leave
rorl
pop
repnz
bsf
mov
xchg
data16
sub
jp
in
lcall
xchg
or
xlat
fwait
pop
negb
push
jnp
cmp
adc
cmp
pop
sub
mov
mov
aam
sahf
jmp
loope
leave
pop
or
icebp
icebp
ja
push
pusha
test
insl
andb
sbb
push
cmp
repz
dec
inc
inc
inc
pop
repz
cwtl
xor
add
lcall
bound
pushf
fdivs
push
sub
pop
mov
call
xlat
jecxz
sbb
dec
push
aaa
mov
jbe
pop
adc
sbb
push
add
mov
fdivs
xchg
loope
pop
insb
push
das
das
das
mov
dec
add
arpl
jae
mov
push
clc
std
pop
mov
add
fisttpll
int3
in
shl
enterw
int3
inc
and
ficoml
stos
dec
cmc
mov
push
test
fstpt
xchg
test
repnz
addr16
lea
int
adc
push
dec
mov
push
sub
adc
outsb
cmpl
bound
adc
rcl
or
ret
int3
fisttpll
lcall
imul
fs
or
xchg
mov
xor
push
lds
add
mov
mov
test
pop
cwtl
xchg
out
movsl
pop
mov
sub
mov
rclb
add
repz
mov
add
or
div
scas
in
fsubr
jo
es
mov
rcl
incb
fsts
xchg
mov
subl
pop
inc
into
inc
pop
outsb
fstps
cli
icebp
arpl
fstpt
dec
ja
push
pop
out
mov
iret
ret
sub
shr
js
fnstsw
adc
or
xor
les
insl
pop
loopne
lahf
je
or
mov
out
fldl
and
fcomps
push
mov
cs
fdivl
data16
or
fisttps
xor
in
loop
icebp
xchg
pcmpgtd
sub
out
mov
xchg
push
jbe
lahf
gs
jnp
packuswb
imul
xor
fdiv
adc
js
and
jnp
dec
mov
jmp
xchg
pop
icebp
jo
sbb
mov
icebp
jmp
inc
dec
lea
cmp
xor
mov
mov
pop
sbbb
test
ret
cmp
or
fadd
adcl
push
int3
outsl
push
mov
enter
mov
pop
pop
bound
test
insb
cmc
mov
or
addl
into
repz
mov
jb
sbb
das
nop
filds
xor
in
fucomp
fcmovne
sub
sbb
fsubrl
andl
rolb
xchg
in
out
repnz
mov
dec
mov
pop
out
mov
or
dec
jnp
movsl
repnz
subl
es
ja
inc
scas
inc
movsb
mov
or
shrb
cltd
orb
add
int3
mov
addr16
gs
nop
inc
pop
mov
push
mov
mov
mov
push
mov
clc
sbb
and
aas
xor
fnsave
lcall
ret
pop
lea
dec
mov
xor
inc
enter
idivb
dec
xor
inc
sbb
fdivr
into
dec
jne
cmp
or
cwtl
dec
aam
pop
enter
cmp
push
mov
inc
sbb
out
cwtl
or
sti
or
sub
xchg
fs
xor
popf
xchg
dec
jp
inc
je
imul
loopne
enter
cmp
aas
inc
mov
test
sarb
je
jnp
mov
rcl
push
mov
ja
adc
push
iret
test
ret
sti
xor
xor
or
or
push
mov
inc
cmp
mov
stos
stc
cmp
mov
lret
push
and
out
mov
ss
andl
sbb
adc
or
fcomp
push
cmp
fbld
pop
xchg
addr16
lods
push
out
fistpl
das
xchg
dec
in
push
push
out
test
dec
sbb
dec
pop
call
pop
cmp
lods
pop
ret
mov
popf
xchg
popa
mov
shll
fs
repz
xorl
dec
cmp
jo
scas
ficoms
adc
fdiv
and
fldenv
andl
hlt
or
fmuls
xchg
loop
stc
pop
pop
push
dec
mov
lock
jne
insb
mov
call
hlt
pop
aam
dec
std
insb
inc
cmp
mov
popa
add
cld
add
mov
mov
dec
data16
xor
arpl
dec
xor
adc
sub
cltd
ret
xor
or
sbb
fstl
push
xlat
imul
pop
mov
daa
aas
in
test
inc
add
inc
pop
insl
cmp
pusha
push
loopne
in
add
sbb
nop
out
js
jbe
imul
mov
push
int3
mov
cltd
dec
mov
sbb
add
xchg
xchg
loopne
popf
pop
dec
xor
jmp
cwtl
dec
push
ss
insl
push
or
dec
imul
stos
flds
push
leave
stos
out
mov
push
xor
fimuls
notl
xchg
cmp
lret
mov
cmp
mov
pop
scas
push
mov
jb
mov
fstpt
push
pop
cwtl
mov
mov
mov
mov
pop
je
sub
hlt
and
jns
lods
sbb
call
mov
cmpsl
mov
jne
push
pop
enter
shlb
das
movsl
repnz
mov
clc
pop
sub
and
xor
ror
or
lods
ds
sar
fmull
lock
lret
adc
repnz
jg
icebp
mov
pop
sub
xor
std
jge
xor
shlb
cmp
push
lods
testb
andb
ret
pop
out
aam
and
dec
fs
popf
gs
xor
mov
fisubl
jp
popa
out
out
cmpsb
push
mov
test
cmc
mov
jg
ret
hlt
ljmp
xchg
or
in
mov
in
pop
out
mov
icebp
mov
adc
scas
mov
inc
fisubs
imul
xchg
lcall
orl
in
xchg
mov
insl
lods
xor
sbb
push
mov
add
loop
lcall
psubq
sbb
pop
dec
ja
inc
cmp
out
shrb
outsb
leave
cmp
ss
adc
cli
imul
xchg
sub
mov
ficoml
in
jecxz
and
movsb
sahf
push
push
idiv
or
xchg
inc
aas
mov
pop
test
adc
push
xor
inc
xchg
imul
jecxz
ja
mov
call
loope
insb
and
fistl
push
pop
or
jl
ljmp
aaa
mov
fidivrs
movsb
xor
test
dec
mov
int3
adc
ficomps
or
test
inc
cwtl
and
cwtl
aaa
add
or
and
xor
cmp
and
shrl
sbb
jb
adc
stos
scas
pop
add
add
sub
or
shlb
sti
add
sarl
adc
lret
mov
sahf
push
ds
fdiv
movsb
mov
fwait
mov
mov
gs
pop
pushf
mov
xor
pusha
add
in
frstor
and
fdivrp
aad
test
sbb
dec
dec
insl
lods
xchg
sub
push
aas
mov
das
test
add
pop
ss
lds
adc
xchg
jnp
sub
adc
sbb
pop
fldcw
rcr
dec
loopne
pusha
xor
lock
xor
or
decl
dec
aad
push
sahf
aad
xchg
mov
ljmp
and
imul
iret
push
outsl
adc
shrb
push
pop
daa
das
std
sar
popa
jmp
int3
cmp
sbb
negl
adc
enter
cmp
testb
aas
mov
out
mov
dec
loope
fisubrl
sbb
cmp
cmpsl
andl
adc
data16
inc
inc
jle
kmovw
stos
inc
pop
pop
mov
pusha
andl
fwait
cmp
push
dec
lods
push
ret
out
mov
cli
mov
xor
mov
bound
jne
cwtl
popa
or
frstpm(287
js
jge
or
inc
dec
cmpsb
int
cmp
pop
out
lahf
xchg
mov
scas
in
mov
and
xlat
pop
ret
sbb
fwait
fwait
jmp
cmp
sbbl
into
cmc
or
sbb
scas
or
in
mov
cmp
pop
mov
pop
fcom
imul
mov
sbb
cld
mov
fcomps
inc
stos
push
push
mov
scas
xchg
mov
lea
mov
sar
mov
gs
popf
in
cmc
cwtl
aam
mov
mov
sarl
cld
xlat
popf
inc
jg
lea
aaa
sti
jp
jmp
call
add
sbb
incb
jg
add
or
add
cli
mov
addr16
sarl
and
add
test
mov
stos
pop
pop
sub
in
mov
mov
cmpsb
xchg
push
jg
xor
int
hlt
cld
push
xor
fmull
xor
jle
mov
xor
dec
imul
lcall
lret
inc
xchg
js
dec
lahf
inc
jg
int
inc
cmp
cmp
sti
add
adc
jnp
xchg
and
jle
sbb
sub
add
fistps
add
add
out
mov
push
dec
xchg
adc
call
pusha
add
daa
xchg
push
cmp
bound
xchg
cs
repnz
mov
jbe
pop
cmc
adc
push
mov
les
mov
shl
psubq
xchg
stos
dec
and
fimull
inc
lea
imul
cwtl
dec
imulb
push
push
js
or
andl
mov
cmp
stos
xchg
add
xlat
jp
testb
push
rol
inc
xchg
sbb
imul
pop
push
or
jb
repnz
push
inc
in
addr16
jbe
out
xor
and
lea
and
rorb
xor
ja
shlb
xchg
adc
pop
scas
sub
cmpb
rorl
mov
inc
add
mov
or
je
test
pop
pop
enter
test
cmp
int3
jae
push
test
sbb
add
xchg
aas
nop
call
xchg
ja
pop
jne
inc
and
push
in
test
leave
int
cmp
pop
adc
ss
cmp
adc
shr
aaa
add
out
aad
pop
add
sbb
mov
mov
jmp
icebp
inc
pusha
jmp
push
mov
push
lahf
push
adc
and
faddl
push
inc
les
or
pop
lds
sbb
mov
xlat
clc
jecxz
and
daa
cmc
popa
xchg
movsl
out
imul
push
loopne
mov
leave
scas
out
dec
mov
pop
and
push
addr16
je
cmp
mov
xlat
rcll
inc
fstps
insl
jnp
lcall
das
adc
mov
mov
jecxz
xor
mov
shlb
sbb
pop
loop
mov
rorl
movsl
add
pop
pop
and
jle
enter
and
pop
test
sahf
jo
rcrl
inc
pop
mov
idiv
cltd
inc
imul
sub
mov
pop
lock
sahf
fldcw
mov
bound
push
pop
adc
sub
and
in
dec
add
xor
daa
adc
pop
or
xchg
mov
mov
iret
pop
pop
iret
and
fisubs
jecxz
test
push
leave
shll
mov
mov
shrb
mov
sub
ret
xlat
jmp
dec
mov
subl
subl
test
cli
addr16
or
shlb
jae
lea
push
xchg
add
addr16
xor
stc
add
enter
mov
inc
and
xor
or
dec
cs
mov
push
mov
push
dec
or
loop
mov
mov
int
xlat
xchg
mov
dec
push
mov
mov
loope
mov
test
sbbl
inc
push
and
shll
xor
imull
arpl
test
pop
jae
lahf
insb
cmp
dec
sbb
icebp
sbbl
inc
xchg
std
imul
pop
sub
jb
or
push
fstpl
sub
aam
fiaddl
jae
push
loop
xchg
dec
test
or
sub
sub
xor
mov
xor
ja
or
dec
dec
dec
adc
lock
mov
xchg
out
and
add
sub
mov
cmp
push
adc
cwtl
jbe
mov
and
xor
xchg
sahf
fsubs
mov
rorb
push
or
xor
add
fdivl
ds
pop
cmc
outsl
adc
ljmp
push
stc
jnp
aas
inc
int
cltd
inc
scas
mov
push
inc
push
enter
inc
adc
movsl
rol
aas
popa
dec
sub
std
out
pop
adc
push
in
jo
xchg
stos
andnps
xchg
xchg
mov
push
into
adc
loope
pop
pop
ret
jns
pusha
cmpsb
push
mov
cmp
das
mov
insl
sub
in
mov
jecxz
test
cmc
test
lahf
inc
test
mov
mov
pop
ds
rorl
ficoml
or
xchg
dec
push
js
cmp
xchg
pop
jb
adc
aad
fnop
jnp
jno
add
imul
mov
insw
adc
lcall
or
aas
pusha
xorl
mov
insb
push
mov
jg
add
xor
and
add
mov
xchg
icebp
fiaddl
cmp
dec
test
leave
mov
add
pusha
jns
or
inc
inc
inc
enter
and
lahf
je
jle
cmp
and
gs
sub
test
rol
in
mov
inc
into
and
mov
and
popa
mov
inc
dec
xor
in
cmpsl
add
xchg
cmc
sar
leave
xchg
insb
jmp
cs
inc
push
out
leave
cwtl
stc
out
mov
cwtl
mov
daa
adc
xchg
cmpsb
daa
ljmp
scas
movsb
es
jmp
add
push
test
lea
cmp
jmp
pushf
xor
divb
in
dec
out
cmp
inc
hlt
add
jb
orb
jmp
inc
mov
adc
aam
aaa
jp
pop
jb
push
cmpsl
call
sbb
dec
sbb
mov
dec
add
or
cltd
mov
inc
xorb
xchg
and
adc
mov
jbe
push
or
mov
outsb
stos
mov
movsb
cs
aas
mov
loopne
sbb
movsb
jp
out
jecxz
imul
cmp
mov
aas
jecxz
cmp
xor
aas
fisubs
sbb
mov
and
jecxz
outsl
out
insb
pop
jecxz
shlb
sub
jmp
fmulp
mov
push
mov
icebp
and
mov
add
jmp
cmp
mov
ss
lret
xor
outsb
mov
aam
push
add
pop
aam
adc
cmc
sub
jb
fimuls
cmp
loope
es
pop
push
scas
add
push
loop
jne
cmp
popf
in
mov
jle
fadds
adcl
in
jl
and
jb
cmpsb
sbb
gs
fisttps
cmp
jg
ret
cltd
jg
js
push
scas
vmovhps
test
add
je
push
jecxz
test
dec
xlat
jg
add
adc
imul
or
adc
ja
ss
mov
jno
pop
and
inc
pop
cmp
loop
jmp
pop
jmp
stc
pop
imul
push
mov
mov
and
jp
adc
mov
pushf
or
fldl
mov
add
aad
xor
shrl
push
sbb
sbbl
mov
cmp
pop
outsb
xchg
pushf
mov
adc
cli
inc
sti
jns
es
adc
jmp
call
dec
pop
outsb
cld
xor
mov
xor
xchg
push
cmp
testb
outsl
jb
ret
pop
imul
jne
paddb
mov
or
xchg
les
jl
pop
movsb
xchg
sub
sbb
addr16
insl
cld
lcall
stos
lahf
push
movsb
ss
mov
pop
int3
mov
cmpl
out
lds
sbb
pusha
push
xlat
adc
push
inc
xor
stos
add
jb
pop
jge
out
or
push
das
test
mov
add
sbb
iret
jl
repz
mov
outsl
out
das
rolb
dec
fdivl
fsubr
mov
mov
pop
mov
int3
enter
mov
adc
jl
mov
shr
fstl
rclb
ret
les
in
push
push
mov
notb
clc
mov
adc
in
pop
pop
lret
addl
xchg
pop
clc
ljmp
out
jns
ret
pop
clc
pop
fdivrs
stos
loopne
outsl
add
jns
sub
es
bswap
outsb
cltd
lods
add
aad
test
inc
shr
pop
out
lds
sbb
push
or
dec
in
adc
cli
or
and
or
lock
pop
pushf
sub
cmp
mov
insb
pop
insl
test
inc
incb
fidivrl
add
fwait
into
sar
jae
mov
lret
pop
loope
enter
cmc
mov
jnp
xor
and
int3
inc
jnp
xorb
cmp
orb
xchg
dec
lds
pop
add
in
mov
outsb
sahf
dec
mov
cmpsl
stc
and
ror
mov
outsl
xchg
imul
xor
and
scas
mov
push
into
cmp
stos
rolb
in
xchg
sbb
stos
add
and
ja
and
adc
clc
outsb
dec
ret
rclb
mov
mov
sbb
mov
rorl
lods
jle
sbb
push
inc
dec
cltd
xchg
cwtl
sbb
xchg
mov
out
repnz
stos
sbb
pop
xlat
jns
pop
in
push
sti
jb
jp
mov
sahf
in
add
sbb
cli
psubusb
sbb
pop
arpl
fdivl
xor
adc
pop
sub
out
cmp
popf
ss
sub
mov
add
xchg
popa
shll
popa
mov
dec
add
popf
shlb
test
sub
adc
add
inc
lret
dec
sub
inc
push
mov
sub
fldlg2
sub
arpl
std
pushl
out
and
dec
inc
rolb
adcb
test
insl
inc
lods
sbb
add
push
pop
and
push
adc
int3
stos
sbb
mov
mov
cmp
mov
out
inc
cmpsl
cld
cld
inc
shlb
dec
rcrl
jno
fdivl
mov
popf
aad
dec
loopne
imul
das
mov
fs
les
sub
and
mov
lods
mov
adc
sbb
in
sbb
jns
pushf
xchg
sbb
fnsave
movsl
xor
stc
xchg
jge
call
mov
repnz
pop
test
ror
andl
adcb
loop
fldcw
inc
out
mov
sub
adc
push
rol
xor
or
lods
cld
inc
pop
mov
and
inc
outsl
mov
sbb
xchg
call
pop
mov
rorl
mov
fstpt
adc
pop
mov
sbbl
dec
push
fnstsw
pop
lcall
enter
cmp
mov
inc
not
mov
ss
fstpt
jae
mov
add
mov
pop
cmp
pop
aas
aaa
stos
test
out
or
andl
and
leave
popa
in
ljmp
iret
or
cmpsb
cmp
jle
ficoml
mov
daa
sti
or
push
es
comiss
lods
cltd
mov
sub
les
jmp
je
and
aaa
sub
rclb
mov
mov
insl
and
jno
inc
lods
gs
out
sbb
push
scas
je
mov
lock
mov
push
sub
icebp
push
enter
lods
adc
sub
testb
movsb
movsb
push
cwtl
adc
andb
add
sub
sub
or
mov
aam
jge
out
cli
outsb
leave
xor
mov
sub
cmp
cmp
xchg
mov
cmc
and
movsb
jmp
push
pop
xchg
test
repz
inc
pop
or
push
or
pop
cmp
xor
mov
cltd
xor
jecxz
xchg
mov
lea
ds
rolb
xchg
andl
jns
aas
push
repz
test
mov
clc
jno
inc
mov
pop
inc
sahf
out
jp
stc
mov
lods
pop
leave
scas
imul
adc
add
repnz
es
mov
cmc
mov
xchg
xchg
enter
add
jnp
mov
or
jl
cmc
lcall
cmp
mov
orb
lret
call
scas
jmp
inc
lret
ds
adc
push
pop
jl
lock
xchg
push
sbb
push
sbb
jbe
sub
mov
mov
pop
pusha
aad
nop
push
jo
adc
pop
mov
sbb
dec
loopne
mov
out
xchg
xor
mov
or
lds
orl
push
xor
mov
loopne
out
mov
mov
notb
push
ljmp
inc
pop
and
in
inc
inc
cmp
add
cld
mov
jnp
insb
cld
fwait
and
fcmove
lds
push
push
imul
and
jns
inc
icebp
ja
bound
stos
cmp
pusha
ss
icebp
mov
sarb
imul
mul
aad
in
shlb
insl
fnstenv
insb
pop
jnp
or
loop
push
lahf
std
or
mov
dec
cmp
into
jbe
mov
xor
addr16
pop
add
cs
dec
cmpsl
pop
cmp
leave
dec
and
cltd
ja
xor
movsl
jno
int
or
add
mov
pop
sbb
xchg
inc
test
jecxz
outsb
not
sti
imul
cld
add
rorb
xchg
ret
je
jb
sub
fistpll
add
xor
das
pop
fldcw
cmpsl
pusha
xor
dec
aad
push
pop
fwait
xchg
jb
pusha
xchg
xlat
repnz
fs
out
and
add
push
sbb
cmp
shrb
lret
movsb
mov
arpl
mov
mov
lock
in
sub
and
sbb
sbb
repz
mov
fisubrs
jle
notl
daa
jb
mov
js
jg
in
cmp
xchg
sbb
push
orb
jge
jb
arpl
imul
fisubl
out
addr16
shl
shll
aad
js
out
mov
ret
push
xchg
cmp
adc
cmpsb
repz
mov
imul
mov
adc
push
push
xor
lret
xchg
lea
xchg
fldcw
imul
pop
std
mov
mov
dec
add
movsb
mov
pusha
and
cmp
neg
pop
inc
stos
test
sub
sbb
aad
lock
mov
imul
clc
pop
jno
sarl
ret
mov
push
jmp
sahf
pop
insl
pop
cwtl
out
fisubrs
inc
push
lahf
sub
and
push
shl
mov
std
inc
sub
cmp
mov
push
mov
iret
aaa
pop
pop
cltd
lret
testb
or
mov
push
sub
out
pop
sub
scas
jns
adc
jp
into
sub
jl
pop
imul
cld
push
btl
je
pushf
sbb
dec
enter
movsb
repnz
movsb
test
fldl
mov
call
cmp
mov
push
test
jbe
adcb
test
sbb
jns
or
dec
ret
and
add
xchg
fs
shrl
mov
mov
cmp
mov
mov
push
ja
mov
jo
test
and
cmp
push
sbb
xchg
je
aas
mov
dec
fsubp
mov
inc
xor
insb
ljmp
rcll
xchg
cmpsl
popf
add
mov
or
popf
repnz
and
aam
adc
test
repnz
push
xchg
shr
cli
mov
je
xchg
dec
jl
inc
pusha
fwait
xor
jno
mov
mov
adc
test
loopne
lods
lret
jb
sbb
adc
pop
inc
inc
inc
testl
adc
scas
pusha
pop
dec
jo
mov
cmp
ljmp
shlb
cmp
adc
test
push
repz
repnz
imul
mov
xor
sbb
decl
sbb
dec
sub
aad
cmp
pop
sbb
push
sub
pop
adc
push
int
movsl
xlat
loopne
js
fcmovnu
push
mov
mov
test
stc
pop
jb
fstpt
pop
pop
and
imul
pop
push
imul
and
mov
or
notl
outsl
mov
shll
mov
push
xchg
insl
mov
rcll
xor
pop
or
popf
pop
leave
test
adc
mov
push
nop
and
clc
xlat
xor
xchg
jecxz
lret
pop
mov
je
pop
dec
cmp
cld
push
ja
jmp
xchg
jl
and
inc
cmp
call
pop
xchg
test
stos
pop
js
les
push
mov
push
cmc
icebp
cmp
mov
test
cwtl
clc
push
outsl
outsl
repnz
mov
add
add
arpl
push
xchg
pop
int
and
mov
in
les
jecxz
add
or
shll
xchg
cmpsl
jle
jno
jnp
push
mov
scas
into
ljmp
cmp
mov
sbb
sbbb
rorb
xor
out
adc
sub
pusha
mov
xchg
xor
ret
jle
lahf
sbb
jg
add
testl
popa
add
xchg
ficomps
cmpsb
xchg
and
mov
lret
lods
cltd
loopne
dec
insb
sub
fsub
inc
sub
imul
rcrl
xor
out
out
cld
subl
pusha
sbb
lock
adc
fcompl
add
sbbl
cli
pop
inc
sarl
aad
stc
jae
push
shll
cmp
inc
andl
jae
xor
add
xchg
jg
or
and
sahf
jg
sarl
dec
mov
andb
jmp
inc
cmp
jle
lret
in
sub
notb
mov
pop
inc
sbbl
not
xchg
or
ret
xchg
and
int3
sarl
sbb
and
inc
dec
jbe
test
mov
aad
in
mov
cmp
int
aas
adcb
sbb
mov
add
lds
sarl
call
inc
nop
sub
mov
idivb
jp
sub
sub
cltd
mov
aaa
push
iret
sti
adc
dec
rorl
in
mov
mov
aam
or
jae
hlt
pop
mov
xchg
dec
and
out
xchg
stos
imul
add
or
ret
cmpsl
out
push
jg
and
hlt
aaa
daa
push
fsubl
and
daa
addr16
sarb
dec
sbb
sarl
inc
adc
mov
inc
sahf
aas
inc
pop
xchg
mov
jg
std
xlat
andb
fcoms
ljmp
faddp
jne
xchg
and
xchg
pop
mov
daa
into
fs
adcb
in
cltd
decl
mov
outsl
test
aam
or
dec
ds
dec
test
lret
pop
mov
cli
mov
push
xchg
js
pusha
sub
ret
and
fldt
cmp
sbb
fidivs
js
in
push
mov
push
jle
mov
cs
xchg
cmp
fisttpll
and
imul
ffreep
or
imul
cmpsb
add
xor
xchg
adc
mov
stos
jmp
bound
jae
cli
ret
xchg
frstor
loop
mov
mov
sti
test
inc
add
push
je
inc
arpl
or
sbb
cmp
mov
or
outsb
and
jle
aas
popa
mov
sub
push
mov
bound
jl
jbe
imul
mov
mov
jno
add
fs
bound
lret
push
fdivl
add
scas
nop
movsl
ret
mull
mov
inc
rol
rorb
sbb
adc
dec
stos
dec
pop
ffree
popa
pop
in
dec
fisubrs
and
daa
push
sbb
lock
test
lock
fnstcw
dec
cmp
add
roll
adc
int
jnp
add
inc
and
mov
inc
jne
mov
repnz
cltd
mov
jle
popf
cmp
fwait
sub
add
push
mov
clc
xchg
outsb
rolb
and
fdivrl
fwait
lahf
pop
loop
mov
push
sar
inc
mov
test
rcrb
jle
lahf
out
or
pushf
stos
fnstcw
jg
xor
shrl
lcall
stos
fisubrl
js
xor
sbb
xor
sbb
push
ret
rol
pop
test
fstp
xchg
repz
mov
pop
insl
add
push
jl
xor
jnp
or
push
aam
movsl
call
call
inc
or
and
mov
dec
sub
in
or
shrl
sbb
aam
add
movl
jbe,pn
xchg
stc
lcall
ljmp
xchg
jecxz
xor
jl
cltd
jne
cmp
sub
clc
mov
out
and
loope
iret
jbe,pn
adc
jo
xor
dec
ljmp
dec
dec
xchg
and
xchg
mov
imul
sbb
mov
jb
popa
cmp
insl
dec
popa
push
dec
and
mov
dec
bound
cmpsb
fsubr
inc
lock
cwtl
and
insb
leave
add
mov
pop
or
jmp
cwtl
jmp
lcall
cmpsb
test
lock
aam
test
add
test
arpl
xor
gs
and
pushf
into
mov
push
push
xchg
ljmp
cwtl
das
sbb
sub
sahf
and
xor
imul
fidivrs
rolb
pop
inc
sub
mov
inc
dec
call
loopne
std
xor
dec
addl
arpl
and
cld
icebp
clc
and
mov
cmp
mov
sahf
test
xchg
mov
shrl
fdivr
push
dec
lea
add
xchg
idiv
add
orl
mov
js
push
xor
jmp
xchg
movsb
push
add
inc
lds
in
jae
dec
aas
fcoml
lock
hlt
pop
aas
stc
pop
or
push
pop
cs
xor
xor
mov
je
call
xor
ret
dec
ljmp
or
xchg
in
push
mov
aas
jl
and
ret
and
mov
mov
popf
scas
sbb
arpl
mov
mov
in
cmpsl
mov
ljmp
cld
or
xor
outsb
aas
mov
push
icebp
fists
rorl
pop
mov
or
xchg
orb
push
push
push
mov
icebp
sub
fwait
lods
xchg
xchg
fisubrl
aas
lahf
xchg
dec
pop
and
stos
pop
scas
or
insl
push
or
daa
insl
mov
cmpsb
mov
mov
add
mov
mov
add
cmp
cmpsl
outsl
xor
sbb
sbb
jae
hlt
iret
add
mov
out
mov
je
mov
jge
lcall
cwtl
sub
xchg
outsb
popa
je
dec
pop
icebp
cmp
out
lret
xchg
movsb
xor
pop
mov
dec
cmpsl
cwtl
mov
sbb
lret
pusha
dec
cmp
ret
mov
push
fdiv
jae
jns
mov
les
cmpl
aad
and
out
push
fs
mov
scas
pop
jmp
arpl
inc
mov
ds
ss
imul
int3
pop
lea
mov
xchg
cmp
pop
mov
cmc
sub
negb
xchg
pop
jnp
arpl
movsl
mov
push
dec
ljmp
iret
bound
in
mov
rolb
add
mov
ret
addr16
outsl
rol
inc
loopne
push
push
lea
sbb
loope
call
enter
or
test
enter
add
in
data16
fsubr
rol
jb
cltd
mov
and
mov
xchg
fdivrs
mov
je
xor
jge
jle
in
loop
int
mov
sub
in
sbb
sub
push
mov
imul
dec
mov
je
add
jp
cmp
dec
sbb
idiv
push
mov
out
xor
jo
xchg
leave
mov
stos
testl
js
cld
sbb
outsb
je
push
jno
enter
scas
clc
ret
in
pushf
cld
ret
xor
js
rorl
fstl
push
loopne
stc
xor
call
sbb
out
xchg
int
clc
in
jmp
cwtl
mov
fadd
arpl
gs
pop
popa
pop
scas
inc
xchg
idiv
out
xchg
dec
lret
cmp
inc
popa
push
repnz
out
push
pusha
imul
fsub
addl
mov
mov
ljmp
popa
roll
mov
mov
cmpsl
xor
aad
loop
and
dec
es
push
mov
shlb
or
pop
push
inc
xor
xchg
test
out
test
sbb
enter
out
outsb
add
shlb
cmp
mov
mov
xchg
std
adc
mov
aad
hlt
or
test
repz
aad
lea
add
rcrb
aas
mov
mov
adc
scas
cwtl
popf
mov
adc
cmp
es
push
mov
pusha
cmc
ss
into
mov
fsubrl
ja
mov
fdivp
add
and
enter
imul
pop
repz
in
mov
jg
in
jns
xchg
repz
rcrb
les
xchg
out
push
xchg
push
out
add
jno
lea
outsb
and
mov
and
cli
sub
out
das
cmp
cli
push
fmull
cltd
pop
test
fsin
les
stc
test
push
les
leave
inc
leave
jge
in
or
cs
ss
mov
enter
and
hlt
popf
sbb
lea
out
fstps
jb
sahf
jbe
push
loop
es
xor
testl
dec
sarb
pop
xchg
sbb
inc
sub
int3
and
cmpsb
pop
jle
cmp
lock
sbb
cmp
js
outsl
push
das
inc
icebp
int3
jbe
add
cmp
insb
adc
inc
mov
xor
mov
mov
ljmp
movb
lcall
mov
ljmp
fistps
push
sub
int3
lea
shl
xchg
sub
add
push
inc
leave
mov
sahf
inc
xor
xor
ficoms
ss
into
in
fwait
dec
es
imul
mov
xchg
cmp
es
jl
jmp
xlat
test
jb
sbb
cmp
mov
jb
outsb
in
sahf
and
sub
push
jecxz
rcr
cld
fs
fstpl
adc
outsl
mov
jno
fcoms
dec
sbb
pop
cmpsb
inc
push
cld
cmp
cltd
sarb
or
lret
out
mov
lock
dec
fwait
pop
add
mov
inc
xor
lcall
or
mov
sub
mov
je
xchg
outsb
mov
add
je
cmp
dec
sbb
int
aaa
repnz
xlat
inc
dec
flds
popa
pop
push
pop
imul
daa
shr
adc
or
ret
js
clc
jle
outsb
lock
dec
or
pop
cmpsb
push
enter
and
xchg
xchg
push
push
ret
cmp
inc
repz
arpl
cmp
xchg
shr
and
test
inc
cld
insl
mov
xchg
in
pop
cltd
mov
out
mov
shr
int3
out
push
jge
or
push
ret
pop
jne
out
pop
push
cmpsl
or
mov
inc
mov
cmp
shl
inc
push
inc
or
mov
mov
rorb
mov
pusha
fdiv
jle
ret
ljmp
daa
lods
push
loope
or
call
roll
mov
pushf
dec
jmp
aam
xchg
ret
sar
mov
push
add
xor
push
mov
ss
or
push
ret
fstpl
sub
cli
int3
fwait
adcl
mov
xchg
fistpll
inc
dec
addl
out
ja
pop
lock
cmp
mov
dec
cmp
mov
jl
and
mov
pushf
cmpsb
test
stos
insb
ljmp
std
cwtl
or
fucomi
xchg
fbstp
lea
data16
iret
xor
cmpsl
pushf
xchg
movsb
adc
push
mov
mov
in
fst
xchg
lret
jg
jge
mov
xor
shr
xchg
scas
icebp
add
lret
fs
xchg
pextrw
mov
pop
js
jg
xchg
loop
testb
icebp
push
pop
adc
lods
shll
orb
inc
or
pop
cltd
dec
scas
ret
popf
cmc
fs
test
fmulp
cmp
mov
mov
testl
popa
pusha
jo
and
in
lock
scas
jg
pop
ret
adc
jecxz
fdivrl
xchg
xchg
jle
mov
mov
out
jp
mov
fidivs
add
dec
in
push
xor
pop
push
ds
shl
lahf
push
mov
mov
and
or
inc
or
ds
insb
dec
mov
out
mov
push
jg
jns
mov
stos
jg
add
xchg
jnp
sbb
or
testb
mov
repnz
adc
mov
loope
sbb
jae
lock
ret
add
inc
stos
lea
inc
jge
enter
push
xchg
adc
lods
pop
or
andb
mov
and
leave
ljmp
sbb
jnp
sub
or
xchg
fisubrl
mov
subb
mov
pop
lock
sub
jmp
and
push
add
repnz
dec
fcomps
mov
and
test
push
xchg
das
icebp
sbb
inc
les
mov
mov
jp
in
xchg
jbe
sbb
push
push
pop
or
jnp
insb
call
fists
push
jle
mov
and
jbe
ljmp
in
jl
ljmp
mov
xchg
movsl
lret
mov
fldcw
sbb
dec
push
mov
mov
inc
sub
ret
neg
pop
sub
push
sbb
push
mov
adcb
jecxz
jmp
scas
mov
add
lods
pop
cmp
xchg
addr16
jne
std
push
arpl
mov
or
inc
loope
xor
xchg
inc
movsb
sarl
sbb
scas
ss
mov
scas
push
clc
mov
adc
rcll
cltd
or
xor
dec
pop
pop
adc
cmp
push
aas
leave
pop
inc
aas
mov
dec
push
and
enter
mov
push
jle
sub
xlat
test
adc
lea
inc
cltd
dec
sahf
sub
in
sub
in
jnp
lods
lcall
pop
xchg
xlat
jecxz
fsubrs
xor
push
xor
push
inc
mov
mov
cs
in
mov
insl
popf
lcall
rolb
push
loope
repnz
cli
icebp
or
mov
dec
jbe
cmp
xor
jp
movsb
mov
mov
dec
fstps
jecxz
dec
jbe
std
fnstcw
popa
lods
mov
insb
inc
movsb
fisttpl
mov
dec
adc
sahf
out
sti
int3
xor
jl
xchg
fwait
inc
adc
stos
test
add
stos
xchg
ss
cmp
cmp
pop
adc
pop
in
je
xor
xor
adc
outsl
push
int
fsubl
dec
mull
push
imul
push
fcoml
sarb
dec
or
cmp
mov
imul
inc
dec
or
xor
inc
loopne
add
cmpl
mov
mov
es
push
sarl
and
adc
scas
add
pop
dec
inc
add
adc
ret
mov
mov
or
pop
pop
jge
addr16
mov
or
dec
mov
repz
dec
or
cs
pop
push
aam
add
jge
insl
cmp
pop
call
shl
and
pop
push
pop
push
idivl
and
outsl
push
outsl
into
dec
mov
test
fwait
adc
notb
mov
pop
and
je
jb
and
rcr
sub
fstpl
lret
daa
enter
cltd
sbb
jp
ja
testl
push
aaa
cld
xchg
sub
sbb
iret
mov
popf
jge
jbe
daa
jbe
jmp
mov
jmp
inc
jb
inc
push
mov
imul
xchg
fsubp
pop
sub
push
mov
mov
mov
int3
mov
sbb
and
or
mov
pop
icebp
jl
pop
and
ja
jns
pop
lret
sbb
cld
xlat
cmp
cmpsb
xbegin
jb,pn
movsl
dec
aad
add
cmp
pop
xor
jne
pop
mov
push
adcl
inc
jecxz
sbbl
arpl
push
jne
sub
out
lahf
cmpsl
aas
cmp
cmpsl
fistl
lret
cmp
dec
jne
out
or
jp
pop
ss
lods
jae
pop
movsb
lds
adc
popa
xor
mov
adc
insl
dec
cli
leave
or
sbb
jae
into
inc
mov
cmp
stc
sub
add
add
testb
sbb
fcoml
jae
lock
pop
ret
adc
mov
add
jmp
std
or
add
xchg
mov
cmpsl
xchg
cmp
mov
shll
fsubr
jge
inc
mov
add
xchg
mov
mov
sarl
cmc
lea
int3
and
iret
cltd
xor
mov
jl
mov
fs
push
xchg
pop
xchg
into
iret
mov
arpl
out
fisttpll
rcl
call
push
gs
repnz
daa
insl
sbb
cmpsl
movsl
lret
in
jecxz
outsl
ljmp
and
mov
pop
pop
push
decl
cmp
lret
jo
push
mov
push
xor
daa
inc
pop
adc
sbb
rcll
adc
jno
in
fdivrp
dec
inc
scas
adc
ljmp
lock
sti
mov
mov
mov
jecxz
repnz
repz
shlb
adc
dec
sbb
sbb
push
pop
outsl
or
imul
in
adc
sub
pop
sub
or
call
cwtl
insb
jl
dec
lods
fidivrl
shll
xchg
filds
or
sbb
cmp
test
lahf
addb
jnp
jle
mov
std
arpl
xor
rorb
out
push
std
cmp
loop
dec
cmc
mov
xor
mov
sbb
aad
into
bound
sub
inc
fimuls
ds
xorb
xor
sbb
iret
sub
stos
xchg
jmp
or
push
pop
dec
fucomi
xchg
fnstsw
sbb
sbb
sub
mov
mov
mov
ja
iret
orl
adc
jg
xor
call
jbe
sbb
fcmovnb
cmc
outsb
outsb
mov
loopne
test
jns
cmp
mov
sub
arpl
pop
iret
mov
ds
cmpsb
mov
mov
pop
sbb
mov
mov
xchg
sub
pop
orl
push
jmp
mov
jno
inc
out
in
add
ret
push
mov
scas
popa
in
in
lahf
sub
mov
dec
dec
or
loop
xor
stos
pop
stos
rorl
das
orb
orl
lea
jnp
push
ja
sarl
push
filds
filds
or
jg
push
xor
add
sbb
jbe
jno
aam
mov
sub
push
sbbl
in
je
pop
fiaddl
jl
xchg
mov
sub
outsb
mov
scas
sbb
lret
xchg
imul
fildll
fdivrs
clc
push
jl
mov
sub
and
sbb
ret
and
dec
xchg
adc
adc
fisubrl
mov
mov
repz
dec
mov
mov
jle
pop
cmp
push
jnp
rorl
shl
pop
xchg
mov
push
pop
outsl
push
jns
int3
shlb
push
shlb
outsb
sbbl
mov
xor
test
movsl
insl
nop
and
je
xor
or
jne
gs
ljmp
push
mov
inc
repz
stos
imul
out
popf
lret
push
adc
popa
push
negb
in
movsl
mov
es
or
sbb
shrl
outsl
mov
les
cld
mov
xchg
mov
aad
popa
jnp
inc
clc
iret
rorb
popf
dec
sahf
testl
aaa
in
repz
and
aad
mov
cmpsb
js
std
ja
popf
cmp
or
out
pop
out
std
nop
mov
jp
call
mov
stc
loop
sub
aam
sub
hlt
lcall
daa
fs
shlb
test
xor
add
lock
cs
mov
inc
xor
test
andb
aad
je
sub
push
stos
mov
icebp
subb
jle
xchg
bound
in
push
jne
cmp
xchg
push
sbb
fwait
loope
and
pop
or
push
icebp
jge
cmp
data16
mov
mov
jmp
mov
mov
lret
push
loope
test
aad
shl
jmp
dec
stc
xchg
jo
xchg
add
jmp
int3
or
mov
dec
imul
mov
mov
int3
jbe
lods
mov
pushf
into
sbb
std
loop
jb
popa
ds
fadds
loope
lret
mov
aaa
dec
xchg
pop
adc
aaa
ret
loop
sbb
cmp
adc
out
xchg
mov
mov
jnp
arpl
outsb
popa
imul
loope
mov
push
rcrb
inc
scas
iret
cvtps2pi
test
or
lret
adc
mov
mov
arpl
pop
cmovne
je
jmp
cli
dec
pop
out
mov
mov
sub
leave
shrl
cld
jl
pop
es
add
in
out
scas
cld
pop
loopne
frstor
cmp
subb
fs
mov
out
pusha
aam
mov
cmp
adc
insl
cmp
sbb
xchg
push
sub
jns
out
idivl
repz
out
out
push
add
mov
outsb
cmp
call
xor
jne
jo
cmp
adc
dec
out
push
sub
mov
adc
popf
sub
aam
aaa
movb
movsb
aad
je
jo
pop
movsb
jb
mov
aas
int
cwtl
cwtl
mov
push
and
cmp
outsl
int
mov
popf
int3
fistpll
popf
das
mov
andl
pop
pop
popf
xchg
or
stos
jae
cmpsb
and
lret
lods
sbb
adc
sbb
test
clc
test
js
mov
push
rcrl
je
hlt
dec
cmp
and
ss
popa
aam
fnsave
xchg
xchg
addb
mov
rcrl
pop
sti
jae
enter
iret
ret
xchg
jb
and
repnz
xor
clc
lds
push
mov
pop
inc
lret
cmp
adc
lods
cmpb
imul
cld
fisubrs
in
out
inc
push
xchg
xchg
outsb
cmc
stc
imul
jl
push
xchg
dec
insb
loop
scas
pushf
incb
sbb
es
mov
in
jo
and
lret
pop
in
mov
rclb
sbb
xchg
mov
cltd
inc
and
mov
loopne
std
or
fidivs
sub
sbb
out
loopne
jp
outsl
push
les
sbb
std
xchg
mov
jge
adc
das
cltd
test
xor
mov
aam
mov
loopne
imul
jp
test
hlt
addr16
or
mov
and
aam
nop
fsubrl
dec
mov
sbb
pop
or
data16
mov
mov
mov
sbb
fsubs
inc
movsl
pop
mov
mov
scas
jp
cmp
cwtl
cmp
cmp
pop
xorl
roll
jno
into
movsl
ja
ljmp
ljmp
scas
in
fimull
jmp
imul
imul
stc
dec
hlt
xchg
test
dec
xor
and
add
xor
pop
js
push
shll
dec
cs
jo
in
add
mov
dec
test
and
inc
xchg
xor
xchg
fisubl
movsb
mov
mov
lahf
fisttpll
mov
and
and
fstps
lds
add
fisubrl
cs
add
lods
mov
lahf
mov
out
movsl
inc
aam
sub
sbbl
cmc
adc
or
sub
inc
add
jo
hlt
xor
fstps
sbb
pop
mov
das
lret
mov
and
jl
pop
sub
dec
or
scas
fst
or
jo
pop
jmp
or
das
mov
loope
arpl
adc
mov
push
loop
mov
xor
mov
iret
push
lahf
jbe
cmp
mov
or
movsb
pop
fldt
dec
sarb
sub
and
mov
addr16
or
push
insb
add
stos
or
in
pop
rorl
insl
cltd
pop
aaa
rorb
cmpl
push
lret
into
push
dec
pushf
mov
loop
mov
jo
or
ss
jbe
ss
std
jmp
sbb
sub
les
xlat
rorb
sub
sbbb
xchg
fs
movaps
and
lcall
mov
dec
jnp
pop
js
and
aas
ja
je
movsb
pop
fs
xchg
sbb
fistpl
jmp
inc
inc
scas
pop
rol
sbb
aaa
xchg
scas
mov
sub
enter
adc
mov
ret
movsb
repz
jae
pop
pop
or
mov
scas
xchg
aaa
cli
popa
lea
mov
mov
xor
in
push
adc
adc
add
mov
sub
rolb
loop
and
fmulp
ffreep
cwtl
xchg
pop
in
rol
sub
mov
lahf
add
stos
arpl
lar
loope
inc
in
loopne
addr16
in
jnp
add
jge
test
and
pop
gs
push
test
pop
rorb
dec
scas
cmp
jnp
dec
hlt
bound
or
xlat
xchg
push
sub
jecxz
add
mov
loopne
inc
fnsave
js
sub
fcmovnb
mov
rorl
pop
push
mov
adc
mov
mov
mov
pop
mov
push
test
int
mov
ret
xchg
testb
pop
adc
jg,pt
mov
rolb
ds
pop
cmpsb
mov
dec
in
adc
jo
xchg
lret
decl
jb
negl
imul
mov
or
jnp
xor
andb
or
mov
mov
lret
fdivp
pop
jmp
push
mov
aam
add
mov
fstps
mov
sub
fwait
movsb
das
xchg
jnp
pushf
jb
ret
enter
pop
cmp
pop
xchg
mov
mov
mov
xor
lods
and
adc
fsubr
in
add
int3
dec
lds
mov
mul
pop
add
pusha
or
mov
xor
mov
push
pop
jl
mov
mov
dec
pop
jne
rcrl
cmpsb
push
in
mov
loopne
daa
into
sub
sub
or
mov
jp
dec
mov
mov
mov
test
mov
out
mov
out
cld
dec
in
in
in
pop
lods
mov
fcomp
into
push
xor
xor
mov
add
rcrl
fdivr
sub
mov
sahf
mov
and
mov
sub
xlat
pusha
jns
push
adc
mov
fs
divl
xor
mov
fidivl
mov
jp
inc
stc
mov
into
pop
icebp
mov
pop
sbb
mov
lods
out
push
mov
ffreep
sbb
mov
fwait
mov
dec
pop
mov
sbb
jp
shll
lods
and
ret
pop
jns
push
pop
jno
pop
inc
cwtl
jmp
xor
xchg
nop
fildl
daa
jbe
in
icebp
icebp
fildll
inc
or
pop
xchg
out
mov
test
lods
cmp
inc
push
pushf
push
push
pop
lcall
xchg
mov
out
faddp
clc
sbb
push
mov
inc
jp
out
scas
aam
nop
jns
dec
dec
rcl
ds
add
mov
xchg
adc
dec
lods
pop
pusha
ds
imul
dec
sbb
xchg
or
aad
hlt
dec
outsl
mov
je
mov
repnz
nop
push
cmovno
test
andl
sbb
loopne
xchg
pop
sbb
jnp
mov
xchg
lahf
and
ret
pop
test
dec
sbb
lds
mov
lahf
inc
loop
push
mov
jmp
add
dec
lahf
addr16
jne
xor
pushf
sub
xchg
data16
xchg
xchg
and
scas
loope
mov
push
popf
xor
adc
sbb
sbb
or
push
and
add
test
add
add
lods
xchg
scas
std
fsubs
jno
arpl
cmc
mov
sub
jnp
cmp
mov
mov
nop
xlat
adc
or
push
xchg
push
lock
pop
in
jnp
jo
arpl
push
dec
icebp
aaa
jo
stc
mov
add
sbb
mov
fdiv
fiaddl
sahf
cmp
jne
cli
jae
add
and
clc
cmc
cmc
add
lock
jle
cmpsb
jp
pusha
pusha
push
xor
stos
lods
mov
or
les
push
push
mov
sarb
adc
imul
out
dec
cltd
and
xchg
and
mov
enter
stc
pusha
mov
aaa
cs
adc
xchg
cmp
cmp
jmp
movsb
xchg
xchg
push
in
mov
shlb
xor
adc
fistpl
outsl
jecxz
add
mov
or
orb
jb
idiv
icebp
adc
rorl
aaa
out
xor
sbb
and
xchg
sub
in
pop
sub
jge
add
pop
sub
sub
in
jns
rorb
or
add
mov
mov
shlb
cli
add
cld
outsb
mov
lret
push
je
mov
nopl
mov
mov
pop
add
fnstenv
pop
mov
ds
adcb
popa
ret
add
outsl
fucomp
adc
cmp
jae
sbb
or
pop
cmp
insl
sbb
cmp
mov
ficomps
cmp
cmp
add
xchg
fucomi
cwtl
shlb
jnp
fs
sub
sbb
lcall
jae
jb
push
outsl
jne
lcall
add
dec
cwtl
ljmp
pop
mov
push
mov
jle
cmp
mov
mov
add
push
enter
fwait
repz
dec
push
cld
push
in
shlb
dec
es
cmp
lea
jp
fidivrs
test
xor
and
sbb
xor
inc
jge
dec
jle
les
orl
cmp
fwait
sbb
cmp
inc
es
mov
out
imul
dec
inc
jmp
fwait
mul
adc
shrb
add
fnsave
lahf
loop
inc
enter
push
pop
test
test
and
pop
test
cmpsb
adc
jae
cmpsb
sbb
cld
mov
fwait
xchg
push
adc
sbb
or
gs
mov
cld
push
mov
ds
cltd
gs
enter
adcb
cmp
cwtl
in
push
lods
and
arpl
nop
lcall
movsb
sub
ss
scas
sbb
arpl
decl
out
std
pushf
in
jecxz
popf
stc
fstps
push
rcl
ds
and
dec
cltd
mov
cmp
sbb
inc
nop
out
mov
push
xchg
mov
and
pop
cmp
jno
sbb
mov
add
out
mov
mov
aam
jmp
inc
mov
xchg
jmp
cmp
xor
sbb
push
int3
aaa
pop
ss
lock
cmp
push
add
shl
stc
pop
jns
xchg
repz
mov
rcll
pop
std
mov
pop
jo
pusha
fisubs
adc
cmp
addr16
hlt
bound
push
push
aas
repnz
cmp
push
sar
lea
mov
cli
inc
mov
ret
mov
xor
in
outsb
dec
test
sbb
cld
in
add
movsb
dec
repnz
js
gs
hlt
push
inc
xchg
and
cwtl
fildll
pop
pop
lea
jg
loop
decl
insl
sub
inc
and
pop
push
and
aaa
cmpl
jge
fs
mov
dec
jns
or
popa
cmpsl
sbb
insl
inc
enter
aam
int
stc
ds
cmpsb
jb
scas
out
xchg
pusha
jns
mov
cwtl
or
xchg
bswap
mov
call
inc
ss
rcrb
icebp
add
mov
xchg
add
cmp
in
in
imul
movsl
testb
daa
std
xchg
jbe
dec
pop
pop
xor
pop
and
and
ret
add
mov
and
bound
repnz
xchg
in
nop
roll
repnz
nop
mov
dec
cmp
cli
xchg
jle
jne
ret
cmp
es
mov
jmp
pop
and
movsl
cs
pop
aaa
dec
push
xor
aad
mov
loope
push
cwtl
sub
adcb
xchg
daa
daa
push
jg
dec
dec
imulb
data16
je
dec
push
inc
cmp
pusha
xor
jnp,pn
stos
or
adc
in
xorb
das
pop
jmp
jae
jnp
lods
xlat
mov
mov
lods
sbb
cmc
mov
mov
movsl
mov
and
sub
sbb
cmp
sbb
dec
ficomps
loope
cmp
lcall
sbb
sbb
aad
pop
stos
stos
fbstp
mov
and
cmp
fwait
ret
les
mov
cmp
cmpsl
cmp
mov
je
out
mov
int3
mov
rcr
js
aam
mov
fnsave
leave
inc
imul
push
pop
hlt
lea
rol
jb
inc
inc
fsincos
hlt
out
pusha
jnp
jg
jo
lea
add
leave
shll
clc
adcl
cwtl
add
mov
arpl
cld
cmp
xor
out
xlat
into
jae
loope
enter
sbb
nop
push
out
dec
push
mov
loopne,pt
xlat
inc
rcll
adc
int
out
sbb
fbld
mov
shrb
dec
pop
or
mov
mov
into
or
mov
inc
add
aas
popa
xorb
cwtl
lods
add
cmp
xchg
and
cmc
dec
push
pushf
push
dec
shlb
aam
rclw
fcomip
push
clc
flds
hlt
mov
add
or
es
movsb
aad
cmp
inc
fists
lea
lahf
mov
add
push
mov
test
jnp
adc
ss
dec
insb
repnz
inc
cmp
jb
cld
scas
out
add
dec
fiadds
rorl
js
outsl
arpl
mov
mov
inc
mov
or
cmp
lret
dec
xor
imul
sbb
push
sub
stos
movsw
rol
notb
jmp
mov
sbb
or
inc
pop
push
repz
cmc
xchg
mov
sub
pop
fadd
inc
pop
cmp
jp
adc
mov
jmp
mov
arpl
shlb
fsts
stos
outsl
mov
mov
stos
sub
jbe
data16
ret
popa
mov
ljmp
mov
inc
cmp
cs
fimull
push
mov
mov
cwtl
jecxz
jo
and
inc
jbe
mov
mov
nop
js
xchg
xor
fistps
mov
jnp
clc
iret
pop
dec
xchg
xchg
inc
lret
test
pop
bound
repnz
mov
xchg
mov
jae
cli
push
sub
dec
call
loop
repz
dec
sarb
pop
mov
lds
pop
cli
cltd
cmp
mov
lods
sub
jl
scas
cs
sub
aam
rorl
push
cmp
mov
and
mov
pushl
dec
das
das
or
add
enter
call
push
roll
into
pop
add
or
add
shr
insl
filds
add
repz
popf
cmp
ficoms
jb
sbb
pop
cmpsl
sbb
cltd
fdivl
or
aam
sahf
nop
cmc
sub
clc
jl
add
shlb
imul
ja
repnz
jb
lods
fcoml
lock
or
jbe
cmp
bnd
insb
cmpsb
mov
add
clc
mov
idiv
inc
call
ss
out
ds
cmpsl
add
xlat
and
cwtl
add
popa
push
xchg
sahf
in
pop
sti
les
testb
iret
idivl
pop
scas
test
fnstcw
insl
addb
movsl
push
in
dec
mov
shll
jp
sub
jne
mov
sub
pop
cmpsb
dec
stos
scas
in
jne
popf
jne
push
cli
mov
js
jnp
pop
push
dec
fiadds
inc
adc
fldt
jl
dec
xor
jle
out
iret
lahf
and
inc
mov
adc
push
arpl
loope
lods
imull
aam
pusha
xorl
dec
lahf
ljmp
test
dec
jo
sbb
dec
cltd
xchg
into
mov
cmp
inc
xchg
xchg
enter
out
lret
fnstcw
shlb
sbb
push
neg
out
jle
test
scas
or
or
popf
push
mov
or
mov
mov
mov
loope
popf
rdmsr
jo
int
mulb
enter
lods
scas
cmpsl
gs
stc
or
in
push
lods
and
je
and
in
mov
jne
outsb
pop
push
inc
sti
dec
dec
sub
cld
xchg
pop
pop
dec
jmp
or
and
jb
cmp
out
ja
push
mov
jg
pop
add
aam
adc
test
push
xor
stos
dec
inc
xchg
xchg
mov
xchg
pop
xor
lods
vmulsd
jge
mov
ficoms
popa
arpl
or
jae
push
lods
gs
or
cmp
into
sbb
xchg
scas
mov
adc
xor
pushf
outsl
xchg
inc
ss
lock
into
aam
adc
clc
rclb
jecxz
push
xchg
mov
sbb
aas
dec
sub
idivb
outsl
xchg
mov
or
fildl
rorl
mov
jo,pn
and
fdivs
hlt
adc
mov
pop
xchg
mov
mov
sbb
xchg
aas
repnz
test
orb
cmp
dec
pop
out
jnp
fadds
cld
arpl
out
jns
out
frstor
adc
jle
jle
or
adc
repz
loopne
mov
mov
push
mov
jl
outsl
arpl
push
mov
inc
adc
addr16
fstpl
and
mov
inc
outsb
enter
pop
push
orl
cld
rorb
or
xchg
push
orl
add
shl
mov
call
aam
movsl
mov
aam
les
adc
lods
add
jno
push
pop
int3
and
fsubrl
dec
adc
jge
inc
into
mov
sbbl
sbb
test
addr16
mov
cmp
daa
popa
sarb
mull
xchg
in
popa
inc
jmp
cwtl
cmpsb
sbb
es
int3
jl
ficoms
pop
add
cli
mov
out
push
scas
mov
push
mov
shll
push
scas
xor
dec
push
lret
jae
mov
cld
iret
pop
mov
xor
jae
adc
dec
sub
lcall
test
aad
mov
mov
sbb
lahf
xor
inc
sti
fisubs
rcr
cltd
lea
push
decl
mov
inc
jb
test
idivb
int3
mov
outsl
inc
push
xchg
cwtl
testl
pop
in
cmc
and
mov
or
xorb
ja
cmp
jmp
mov
add
sub
loopne
add
mov
scas
xlat
adc
push
sbb
adc
xor
mov
adc
pop
aam
out
push
outsb
xchg
mov
push
rorl
imul
xchg
insb
jns
mov
loope
push
or
daa
lcall
lods
enter
add
out
dec
adc
lods
xor
push
leave
lahf
iret
outsb
pop
inc
daa
sti
mov
cmp
sarl
sbb
inc
lahf
fadds
adc
mov
push
push
cmp
inc
add
aas
jge
mov
in
mov
repnz
xchg
dec
cmpsl
mov
dec
push
sbb
adc
idiv
dec
push
inc
sub
dec
fisttps
aas
dec
adc
jne
push
cmpsb
xor
fnsave
and
test
fisubrs
and
mov
xchg
insb
call
cmpsb
js
jmp
mov
insb
out
push
stos
leave
jle
pop
sub
movups
inc
andl
xor
test
mov
std
lret
and
stos
bound
loop
sarb
jmp
xorb
jbe
cwtl
into
xchg
sti
xchg
cld
cmpsl
pop
sahf
adc
test
je
cmpsb
xchg
xchg
and
into
xor
sahf
loop
inc
repz
mov
not
pop
sbb
sbb
jle
sub
gs
mov
xor
pop
cli
in
cli
das
mov
xchg
pop
push
aaa
fdivl
daa
repz
out
std
sub
sbb
xor
sub
push
outsl
add
lods
and
adc
in
mov
pusha
out
nop
adc
iret
enter
pop
in
and
pop
or
sbb
aas
add
mov
ss
movsb
imul
push
sbbb
in
jp
sbb
jo
les
rolb
loop
add
push
adc
mov
test
mov
cli
cmp
or
pop
aam
leave
dec
or
cltd
pop
sub
insl
movsl
push
lcall
push
jmp
mov
lret
cmp
dec
popa
jle
push
inc
mov
mov
imul
fwait
mov
or
sbb
dec
lahf
jb
aad
int
or
pusha
repnz
xchg
adc
inc
lcall
outsb
mov
mov
lds
dec
or
add
out
mov
and
cmp
stos
xlat
enter
sti
and
mov
jge
pop
fstps
mov
xchg
faddl
mov
adcl
push
jmp
popl
and
test
dec
lods
mov
mov
xchg
je
mov
repz
adc
aas
cli
stc
movsl
inc
mov
cli
inc
sbb
lea
lods
fmull
push
xchg
cmp
inc
push
into
jg
xor
adc
pop
js
xchg
dec
push
push
andb
jno
stc
mov
xchg
js
or
icebp
imul
fldt
pop
cli
adc
ss
outsb
out
std
fsubr
test
push
cmp
jge
and
mov
mov
stc
int
sbb
mov
imul
lds
fstl
ja
adc
dec
rorl
and
push
inc
and
pop
adc
mov
add
imul
out
iret
jbe
test
leave
jae
sbb
loopne
lret
jnp
pushf
mov
imul
fs
aam
mov
push
inc
mov
sahf
jecxz
icebp
mov
lret
xchg
stos
mov
js
mov
xchg
and
into
mov
or
cmp
push
mov
dec
push
lret
movsl
mov
call
mov
popl
dec
mov
push
jnp
test
cs
sti
xchg
pop
stos
outsl
push
add
lret
mov
dec
outsl
adc
loope
scas
xchg
jge
imul
cs
std
out
jle
sub
mov
sbb
push
adc
sub
in
mov
jecxz
rcl
mov
loopne
nop
push
sbb
add
pop
jle
adc
nop
cmc
lea
sbb
out
popf
inc
cmp
push
inc
in
mov
jno
imul
jl
lcall
es
xor
shll
sbb
gs
and
or
iret
push
test
push
fldl
rcr
mov
lods
pop
jae
jle
add
movsl
xor
nop
pop
push
mov
shlb
push
test
imul
xchg
dec
push
mov
adc
or
out
or
int
js
jl
std
mov
add
inc
lret
mov
lret
mov
add
mov
xor
mov
or
data16
add
ljmp
ljmp
jne
insb
in
hlt
daa
add
pop
pop
mov
int3
inc
dec
clc
mov
hlt
into
stos
mov
movsb
sub
add
test
mov
jns
ljmp
stos
sub
jb
sub
add
mov
xchg
sub
mov
sbb
dec
jnp
and
cs
lcall
std
xchg
es
push
aad
sbb
les
add
rcrl
mov
jl
mov
sub
cmp
adc
jg
mov
pop
xlat
mov
pop
aas
cld
les
jbe
mov
or
push
fists
dec
jecxz
sbb
lock
dec
js
sbb
and
and
xor
in
ljmp
in
adc
xor
dec
inc
cmpsl
clc
jns
or
inc
mov
aam
ret
loopne
xchg
cltd
mov
in
or
mov
lock
lahf
push
aas
push
imul
and
in
loope
sbb
cmp
pop
out
adc
dec
or
in
push
test
shll
out
stos
xchg
jne
sub
enter
sub
xor
add
pop
les
aam
mov
sub
jmp
mov
test
das
xor
and
dec
call
dec
ret
movsl
mov
xor
subl
xor
ds
jne
mov
gs
sarl
es
cmpsl
jb
mov
mov
mov
lahf
pop
and
loop
nop
and
or
jae
cmpsl
lods
cmc
cli
sbb
mov
pusha
mov
aaa
pop
lret
and
pop
insl
cmp
dec
xchg
outsl
out
pop
mov
push
fidivs
mov
inc
clc
pop
mov
adc
call
push
inc
pop
and
rcrb
outsb
add
iret
adc
ds
lods
push
iret
stos
repz
xchg
sub
loop
stc
mov
jge
jge
mov
ret
jno
cld
push
in
push
lcall
cmp
mov
xchg
and
les
mov
and
pop
pop
push
int
cwtl
jl
push
insb
daa
xor
mov
xor
cmpsb
jbe
mov
cmp
cmp
or
jecxz
jmp
inc
mov
adc
inc
pop
push
mov
mov
shl
movsl
pop
stc
or
sbb
popf
scas
pop
sbb
xchg
push
xchg
or
cld
mov
jnp
jnp
pop
push
fistpl
out
inc
sub
and
shrb
sti
testl
xor
inc
mov
rcl
jmp
je
ds
daa
cwtl
adc
mov
imul
mov
lahf
inc
mov
aas
push
dec
add
cld
and
subl
or
xchg
in
filds
xlat
sbb
fld
dec
xor
mov
mov
push
imul
movsb
cwtl
jmp
push
push
shl
sarl
cli
pop
in
jns
sbb
mov
out
je
add
je
inc
pop
xchg
loope
and
arpl
jno
fadds
pop
mov
adc
icebp
jne
jb
mov
lahf
cmc
cmpsl
mov
jns
sahf
stos
pop
jb
push
push
fisubl
popf
orb
es
cli
mov
popf
jle
pop
rclb
js
call
pop
idivl
and
jmp
push
iret
adc
pop
dec
xchg
test
addr16
shll
push
jp
fcompl
stos
jle
push
pop
dec
test
xchg
cmp
daa
fmuls
xchg
inc
repz
or
fsubrs
lret
adc
jae
stc
sbb
mov
inc
sti
sbb
lods
mov
sub
popf
mov
dec
adc
inc
stos
mov
add
inc
mov
leave
das
stos
enter
and
xor
in
mov
cmp
sub
decl
js
adc
pop
xor
pop
jne
sarb
fsts
push
push
pop
push
mov
jp
testb
xchg
nop
sub
ret
jbe
cmp
gs
jae
pop
xchg
sbb
pop
xchg
or
in
ror
flds
inc
loopne
mov
mov
dec
js
nop
xor
lds
mov
push
scas
mov
inc
aam
bound
stos
cld
pop
in
cmp
push
ds
xchg
mov
hlt
in
dec
cmp
xchg
in
es
xchg
dec
mov
pop
inc
fmull
leave
fwait
pop
call
clc
cmpsl
cmpsb
loope
mov
xchg
imul
or
testb
inc
shll
lock
insb
inc
dec
stos
negb
sub
aas
fisubl
cmp
insl
mulb
out
fnstenv
sub
push
dec
add
mov
inc
imul
xchg
scas
or
imul
jge
mov
movsb
dec
test
shr
aam
sub
jg
daa
pop
aam
inc
add
hlt
mov
adc
aad
lods
lea
pop
inc
lcall
push
repnz
mov
jp
enter
imul
mov
aam
jne
push
push
dec
imul
push
stos
pusha
xor
sub
jb
outsl
and
lods
pop
mov
lock
xor
aaa
or
bswap
jb
call
ljmp
ret
cmc
cmp
insb
adc
xchg
xor
adc
mov
ficoml
cli
push
jg
lea
or
lahf
add
pop
lods
fisttpl
sub
movl
test
and
cmpb
inc
xchg
loop
in
cld
insl
mov
lahf
sub
pop
jbe
add
mov
imul
dec
neg
jge
mov
std
es
push
in
cmp
repnz
jns
jmp
jl
pop
gs
rorl
data16
dec
push
add
inc
or
clc
sbb
push
test
sub
in
mov
jg
jnp
lahf
pop
mov
mov
and
lods
pop
imul
dec
icebp
or
stos
mov
push
jecxz
daa
fsts
jnp
lea
push
or
adc
mov
pop
dec
stos
int
jl
pop
cltd
xchg
mov
mov
test
mov
mov
sbb
popf
jno
or
repnz
repz
push
fimull
pop
into
lock
cmc
clc
test
xor
xor
push
adc
dec
jp
in
mov
or
xlat
incl
in
aas
dec
nop
push
std
mov
imul
popf
mov
in
out
mov
leave
push
and
in
movsl
pop
into
mov
xor
movsl
xchg
pop
mov
push
and
fidivrs
in
in
je
sbb
sbb
adc
push
mov
test
fcmovb
js
jl
pop
out
or
ret
sub
cmpsb
pop
cwtl
dec
inc
mov
sti
arpl
popa
xchg
lock
pop
sub
xchg
ljmp
add
fwait
sub
insb
or
cmp
iret
outsl
push
iret
js
dec
xchg
sub
or
loopne
pop
dec
ficomps
jne
aad
mov
inc
mov
lcall
xchg
adc
mov
push
mov
das
push
daa
mov
loopne
pop
nop
cli
outsl
xorb
inc
fadds
sarl
aas
xor
xor
cmc
push
mov
les
gs
mov
sbb
das
xchg
mov
push
scas
sti
pop
sti
or
push
bound
sbb
shrl
xchg
aad
in
push
lea
dec
adc
add
dec
popa
mov
in
or
pusha
dec
and
pop
push
cmp
inc
sub
pop
mov
fnstenv
fldcw
insb
or
out
arpl
add
mov
cmp
je
int3
lods
xchg
push
js
add
jp
cmp
mov
scas
loope
test
xchg
pop
or
movsl
xchg
shl
cmpsb
pop
xchg
xchg
xchg
leave
in
cmp
jge
popf
pop
sbb
imul
xor
inc
sbb
jnp
inc
mov
leave
jge
decb
lahf
repz
jle
repz
out
mov
and
dec
cmp
jb
std
fstp
xor
inc
mov
push
mov
push
loopne
dec
add
cmpsb
dec
xchg
mov
int
adc
aad
aam
or
adc
sbb
sub
mov
clc
out
mov
roll
stos
fcompl
cwtl
div
jle,pn
jno
scas
xchg
push
jne
push
loopne
ror
dec
mov
call
test
stos
jmp
sub
sub
xor
int
mov
or
and
and
sbb
mov
inc
enter
pop
mov
cmp
test
xchg
and
lea
jle
cli
arpl
inc
mov
add
aam
shll
arpl
dec
in
pop
loop
push
adc
push
inc
stc
jg
bound
mov
jns
pop
xchg
les
push
and
push
sbb
test
mov
enter
jae
mov
push
outsb
popa
fdivr
and
mov
jns
cmp
dec
lret
pop
mov
rcrl
cltd
add
in
inc
out
enter
mov
dec
push
xor
pusha
repnz
stos
aad
sub
pop
fincstp
testb
jmp
jg,pt
decb
lea
sbb
call
adc
inc
enter
pop
cmp
jg
jnp
xor
lret
xor
sub
sbb
pop
mov
push
sbb
call
mov
add
outsb
pop
arpl
jmp
cmp
sbb
testl
lods
mov
aad
ret
ljmp
in
cmp
ror
test
cmp
inc
push
lahf
add
cmpsb
dec
cmpsl
call
popf
movsb
sub
ss
fiadds
aas
xor
jmp
push
arpl
adc
push
outsl
pusha
shrb
rorl
jne
pop
iret
or
mov
push
dec
sub
push
pop
sub
adc
or
adc
sahf
mov
in
lcall
xchg
mov
fstps
aas
inc
cmp
aad
push
lea
add
pop
leave
mov
push
in
cmp
pop
or
and
inc
cmp
es
push
ss
test
dec
mov
popf
sti
add
js
mov
mov
aaa
push
mov
scas
mov
cmp
or
outsb
and
dec
pushl
pushf
cmp
enter
cmc
add
int3
lock
loopne
mov
cmpsb
mov
repnz
xor
lea
enter
aaa
jae
in
mov
push
or
dec
mov
sahf
xchg
lret
jnp
sbb
adc
in
sbb
fsubrl
fldz
test
pop
popa
cmp
subl
mov
insb
jb
jne
in
lods
sbb
mov
test
out
out
ficoms
xlat
inc
jbe
jo
sbb
stos
cmp
gs
add
out
push
mov
movb
aaa
iret
hlt
gs
addb
cmp
sbb
sub
test
repz
into
add
mov
or
ret
dec
pushf
test
xchg
stos
ret
lret
ret
mov
xchg
fistpll
cmpsl
data16
js
or
push
roll
addr16
mov
test
pop
sbb
sbbb
gs
push
sub
outsb
inc
stc
lock
and
mov
and
adcl
mov
dec
test
popa
xchg
mov
mov
mov
xchg
add
in
les
jb
xchg
mov
outsb
imul
repnz
test
dec
dec
inc
lods
repz
adc
mov
fldl
icebp
decl
or
mov
cs
mov
fdivp
mov
or
cwtl
xchg
xchg
mov
adc
pop
or
xchg
fimuls
mov
adc
cmpsb
idivl
clc
cmpsl
ret
dec
test
add
popa
test
shlb
dec
dec
lods
dec
mov
gs
cmp
sbb
jo
movsl
cmc
mov
mov
or
xchg
sbb
jne
out
insl
add
es
arpl
cwtl
test
test
in
out
or
jecxz
and
xchg
sub
ja
mov
enter
iret
xlat
inc
sbb
push
pop
push
pop
call
notb
mov
jo
divb
call
rclb
sbb
xchg
push
bnd
mov
dec
xchg
ja
cld
mov
hlt
xchg
push
ds
movsl
push
mov
mov
pusha
outsb
fsubs
test
dec
jge
test
or
clc
cmc
jb
out
cmp
into
xchg
ljmp
je
mov
push
jge
xchg
jl
repz
push
mov
xchg
out
loopne
push
fimull
out
pop
call
or
mov
cmp
lret
stc
pop
or
call
outsl
jecxz
aas
mov
sbb
es
fldcw
push
push
adc
scas
cmpsl
jb
mov
leave
push
xor
cwtl
push
icebp
insb
inc
fdivs
jmp
push
mov
mov
fwait
adc
pop
and
out
adc
sub
in
or
inc
push
inc
mov
fldenv
dec
mov
jne
rorl
cmp
cld
sub
into
mov
adc
jno
aas
mov
xchg
or
and
scas
mov
outsb
dec
iret
scas
les
lahf
pop
jne
push
test
insl
in
jge
xor
das
xchg
dec
and
xor
add
std
sbb
mov
lahf
movsl
mov
es
or
mov
push
dec
sbb
sub
cmove
mov
and
orl
xchg
int
cltd
lock
jns
enter
std
mov
aas
adc
aam
pop
lahf
cmp
cmp
jae
in
sbb
daa
imul
adc
xor
test
push
lock
mov
dec
pop
fcompp
sahf
or
iret
out
cs
lea
inc
and
popf
add
sbbb
dec
fdivl
lock
pop
sub
mov
add
mov
sbb
int
les
cli
aas
adcl
inc
inc
clc
mov
in
scas
sub
stos
fistl
ret
cmp
into
add
sbb
mov
or
popf
jae
in
lret
pop
lret
mov
mov
mov
test
jmp
xchg
mov
inc
jno
pop
mov
jl
popf
fdivl
add
loope
outsl
dec
inc
test
arpl
mov
and
in
xorl
subl
xchg
loop
shrb
jnp
hlt
or
dec
ljmp
push
das
enter
lcall
sbb
bound
insl
icebp
sbbb
xchg
xchg
mov
or
cmpsb
call
push
adc
movsl
sahf
ret
aas
mov
pusha
cmp
or
sbbl
mov
dec
imul
or
push
push
aad
jp
repz
add
fisubs
jge,pn
shrb
pop
orl
stc
add
pop
popa
dec
dec
sti
push
jmp
cld
jmp
xchg
pop
dec
mov
jmp
hlt
mov
movsb
ret
jp
pop
ds
cmp
pop
pushf
ja
xchg
mov
mov
cmp
pop
stos
mov
sbb
adc
addr16
insb
and
std
js
mov
mov
add
mov
ds
cmp
push
cmp
cmpb
lret
cmp
sbb
jo
arpl
cwtl
fildl
push
dec
aas
mov
cmpl
sbb
xchg
inc
sbb
pop
pop
cwtl
push
inc
aaa
sub
hlt
xor
cmpb
add
repnz
rolb
and
inc
shr
pop
test
cmp
and
add
daa
rorl
stos
jge
inc
sbb
mov
push
mov
hlt
dec
out
jecxz
jns
lcall
repnz
in
neg
mov
je
dec
jp
xlat
sub
or
jp
xor
push
lock
mov
mov
inc
push
pop
addr16
shlb
iret
iret
push
ljmp
sub
outsb
aam
mov
fucom
ret
pusha
sahf
add
nop
lret
jne
imul
mov
sub
scas
push
mov
dec
pop
std
rorb
loop
stos
in
add
in
mov
lea
rcrb
gs
dec
jb
test
iret
push
clc
insl
shlb
adcb
cmp
lret
sbb
cmc
clc
xor
mov
sub
ret
push
data16
xor
ljmp
sbb
cmpsb
inc
and
ds
fcoms
pop
fwait
jle
jl
arpl
inc
dec
lods
insl
js,pn
xorb
enter
sub
in
xor
dec
fwait
xor
ret
cmp
jb
mov
jg
adc
push
push
bound
loopne
fsubrl
rorl
sbb
jno
add
mov
ja
mov
outsb
sub
jmp
or
mov
clc
push
jle
inc
es
pop
xchg
and
test
popa
enter
push
jle
inc
inc
into
out
and
cmpsl
sbb
and
div
rep
gs
inc
mov
aad
xlat
xchg
ja
in
imul
sub
ret
jle
fisubs
cmpsl
movsl
addb
push
data16
pop
jl
in
jmp
mov
and
inc
add
test
xchg
pop
xchg
pop
in
jns
and
mov
ficomps
insb
or
jns
mov
sub
mov
aad
addl
bound
mov
addl
repnz
stc
das
jmp
ret
std
jo
movsb
push
add
outsl
mov
pop
cmpsl
insl
lds
push
mov
push
outsb
int3
mov
lret
sbb
inc
inc
iret
rorl
pop
inc
and
aas
bound
add
cmp
jns
lahf
int3
sbb
inc
jbe
imul
mov
lret
mov
jle
ret
mov
imul
mov
jg
test
je
clc
inc
mov
subl
sbb
leave
movsl
aaa
aaa
mov
imul
sbbb
pop
shr
data16
in
cmp
das
cmp
jge
in
outsb
dec
inc
sti
cmpsl
add
lods
cmc
push
stos
cmp
fcoms
daa
xor
mov
inc
cmp
rcrl
xor
mov
enter
or
mov
push
loope
sub
mov
out
pop
mul
push
cmp
das
mov
ret
dec
cld
adcl
add
dec
sarb
push
inc
test
inc
dec
mov
or
push
mov
inc
out
jp
stc
jae
vlddqu
addr16
pop
pop
int3
pop
fs
imul
out
inc
and
mov
sbb
xchg
adc
or
pop
dec
xor
shl
shll
or
ret
into
pop
xchg
fisttpll
inc
outsb
fldenv
xlat
xchg
mov
dec
dec
insl
clc
dec
jno
lods
adc
and
leave
inc
jl
or
sbb
imul
jl
and
mov
and
sti
cmpsl
mov
outsl
mov
adc
movsl
mov
rcrb
enter
push
adc
sbb
daa
jp
mov
push
fld
int
push
sti
jmp
ljmp
scas
adc
out
jl
xor
mov
dec
lret
xchg
enter
and
jne
dec
jns
cmp
pop
cwtl
aad
jmp
sbb
roll
cmpsb
mov
mov
xchg
mov
xor
push
pop
pop
inc
mov
mov
imul
outsb
jns
pop
mov
add
jae
jle
adc
outsb
jecxz
inc
loope
push
xlat
int3
jbe
xor
and
mov
bound
stos
cld
dec
in
push
cld
es
cltd
mov
pop
lcall
pop
ljmp
sbb
jno
and
xchg
fisubrs
clc
jb
cltd
push
dec
or
fistl
lods
push
sub
hlt
aam
mov
and
add
fnstcw
shlb
repnz
add
cmpsl
lock
je
cmp
pop
fucomi
les
add
cmp
mov
sbb
cli
dec
cmp
das
hlt
sbb
or
pop
stos
or
and
xor
test
add
scas
adc
es
es
or
adc
addr16
jnp
out
lahf
or
xchg
cmc
ret
leave
popa
js
lods
add
rolb
rcll
sbb
testb
popf
mov
fs
in
pop
mov
inc
hlt
leave
out
xor
and
outsb
jge
movb
lahf
or
int
dec
subb
cltd
loopne
and
push
push
push
push
aaa
in
mov
cmp
sub
sarb
or
push
int3
stos
outsb
adc
mov
pop
imul
addl
dec
add
adc
call
sbb
mov
adc
cs
ljmp
mov
and
and
arpl
jl
lock
aas
mull
pop
lcall
aaa
cmp
lahf
pop
iret
push
push
xor
pop
aaa
ljmp
test
in
sbbb
dec
sti
dec
int3
add
stos
movsb
rolb
inc
cltd
sbb
mull
add
out
insl
aad
sub
ret
lock
mov
mov
aas
ret
mov
mov
mov
cltd
or
jl
dec
sub
adc
jecxz
mov
lods
add
repz
mov
adc
adc
call
ds
inc
pushf
es
push
out
add
rcrl
xor
mov
mov
xor
sbbb
aaa
mov
cmp
arpl
shlb
roll
int3
daa
stos
cmp
jnp
push
pop
lahf
cmp
push
rolb
mov
xor
mov
sbb
fmull
cmp
data16
or
fdivrs
pop
xor
mov
imul
mov
fistpl
adc
xor
mov
in
pushf
popa
xor
scas
sub
adc
xchg
and
je
lea
sub
repnz
add
testl
sbb
mov
daa
sbb
arpl
mov
dec
mov
mov
sti
pop
dec
jmp
jae
rorl
lret
es
mov
pop
in
cld
jns
gs
jno
pop
sub
cwtl
rcl
mov
push
cmpl
jge
push
cmpb
fcomps
cmpsl
icebp
sbb
mov
lods
and
mov
out
cmp
sub
add
pop
orl
xchg
fs
inc
dec
js
aam
leave
and
inc
lahf
inc
leave
sub
fdivr
dec
and
jge
sub
enter
loopne
pop
aas
imul
or
std
sub
das
xor
mov
cmpsl
addl
ljmp
jno
scas
adc
xchg
jb
idivl
inc
test
sti
xchg
dec
and
mov
and
jae
inc
push
pusha
outsb
mov
jmp
outsb
jg
jae
sahf
ret
jo
push
rclb
xchg
mov
test
cltd
js
iret
add
orl
or
mov
negl
out
or
les
adc
test
dec
cld
icebp
movl
push
jno
sahf
lods
or
imul
aad
or
outsb
arpl
stos
xchg
orl
ja
clc
imulb
add
sub
xor
in
les
xlat
ds
sub
cmp
gs
xor
ud1
xchg
xor
inc
in
sahf
outsl
mov
pop
sbb
pmaxub
pop
popa
jge
cmp
lods
loop
es
push
sub
lea
fucom
mov
fnstcw
sub
sub
ds
mov
mov
out
xchg
sbb
decl
cmp
lods
je
inc
mov
xlat
mov
mov
repz
in
das
scas
es
icebp
push
je
les
in
fidivrl
mov
outsb
pop
lcall
pop
or
inc
sbb
stos
jns
push
sbb
test
fmull
outsl
call
sbb
dec
mov
js
bound
mov
xor
push
pop
push
fisttpl
and
nop
je
das
divl
sub
in
out
sub
mov
inc
sti
cwtl
mov
sbbb
xlat
xchg
rolb
lods
pop
loop
stos
test
popf
sub
cmp
cld
ret
and
gs
sbb
mov
inc
mov
jae
divl
push
cwtl
shr
jecxz
dec
jecxz
mov
mov
rcr
mov
ret
mov
jecxz
les
lods
push
cmp
sbb
pop
ret
fsubl
rep
cwtl
jecxz
test
cmp
inc
xchg
mov
mov
push
sub
ret
popf
test
xchg
out
mov
test
enter
jge
loop
imul
repz
sbb
sub
mov
aaa
outsb
popf
out
loope
je
jb
pop
and
or
fcompl
sbb
rorb
push
les
shll
fstp
mov
cmp
not
into
fistpl
add
in
lret
out
jle
test
insl
sti
cmp
repz
mov
mov
push
popf
cs
sub
les
adc
shll
mov
push
in
fisttpll
lock
fwait
mov
movsb
mov
invlpg
push
mov
and
fistpl
add
jg
pop
iret
into
into
jae
jg
fs
pop
or
mov
jo
cli
nop
mov
push
scas
push
je
cmpsb
sub
xchg
lret
and
stc
cmpl
int
lods
lcall
pop
sub
cld
jecxz
test
inc
ret
js
lds
or
jb
nop
lahf
cld
lock
incb
aaa
in
dec
rclb
xor
insb
cmp
mov
jmp
dec
mov
mov
out
mov
push
cmpsb
add
fstpl
pop
imul
cmc
mov
jno
arpl
cli
cmp
ja
das
scas
das
nop
dec
int3
mov
fisubrl
dec
imul
add
cmpb
mov
add
rclb
nop
dec
jl
bound
insb
pop
shl
aas
sub
adc
push
decb
jb
sbb
inc
outsl
aad
fucom
inc
cld
jge
enter
out
mov
aad
add
or
testb
add
lea
loopne
jne
cli
push
sbb
loop
fldln2
pushf
pop
shll
xchg
mov
fisttpll
call
add
jg
xor
or
sahf
mov
ds
xchg
es
adc
inc
mov
popf
xchg
cwtl
dec
mov
mov
xchg
or
pop
sbb
inc
adc
mov
scas
dec
jle
cmp
es
jle
fs
mov
ss
dec
jmp
adc
insb
loopne
dec
push
int
cmp
adc
xchg
and
aas
mov
lds
or
lcall
jl
push
pop
pop
es
sub
cmp
test
in
fs
jge
add
stos
ret
xchg
mov
inc
dec
dec
or
fnstsw
jae
ret
mov
mov
jmp
fld
pop
ret
push
sar
push
out
loopne
mov
lods
push
shll
das
mov
xor
cmp
and
sub
cmp
pop
xchg
inc
in
inc
mov
mov
andl
push
lret
ds
repnz
jg
les
push
movsl
sahf
jp
add
xchg
fsubrs
mov
out
loope
nop
push
shlb
dec
shrb
push
xchg
push
mov
bswap
aam
jecxz
adc
push
orb
xor
lahf
ljmp
xchg
mov
sbb
adc
dec
sub
mov
cltd
stos
in
xor
repz
fwait
add
fildll
clc
cmp
or
inc
inc
mov
cmp
ja
mov
jo
add
imul
test
push
mov
cltd
push
fdiv
sub
inc
mov
in
out
aad
nop
fimuls
popa
sbb
test
sub
and
add
stc
pop
pusha
stc
fs
sbb
outsl
lahf
ds
pop
bound
ret
stc
and
dec
cmp
pop
fsubp
mov
sub
adc
push
inc
pop
sbb
int
in
push
jp,pn
mov
or
nop
sarl
sarb
dec
inc
jbe
mov
mov
dec
pop
or
test
xor
or
pushl
xor
push
out
repnz
pushf
push
xchg
pop
sbb
out
adc
xor
inc
adc
jbe
cmpsb
inc
inc
mov
push
jl
out
ss
cwtl
jae
pusha
push
xlat
test
cltd
scas
fstl
out
imul
mov
adc
enter
mov
into
cmp
xor
jecxz
loopne
cmp
test
popa
inc
ja
jl
sub
les
jecxz,pt
xchg
fadd
lock
xor
and
push
arpl
and
xchg
jb
sub
xchg
in
sbbb
and
jne
jno
pop
add
mov
mov
push
mov
push
cmpsb
sub
sbb
insb
popf
mov
pop
sub
jge
pop
outsb
pop
and
shrl
jge
mov
inc
jae
mov
pop
call
inc
imul
cli
mov
fbstp
cs
push
mov
mov
jecxz
lret
mov
sub
cwtl
jne
test
shll
cmp
out
mov
mov
negl
cli
add
xor
xor
test
jne
jb
js
or
ljmp
incl
push
std
es
jp
mov
and
mov
and
fisttpll
jae
nop
fnstcw
adc
clc
repnz
add
cmp
mov
out
dec
push
xor
shll
lods
lods
dec
or
mov
shld
aaa
cltd
imul
cmp
daa
xchg
lods
jmp
mov
xchg
inc
mov
mov
insb
push
jg
xchg
sbb
repnz
insb
call
push
dec
ret
mov
cmp
lods
add
xor
mov
add
test
cli
aaa
cmc
cmp
xchg
push
sahf
dec
pop
pop
sbb
std
jle,pn
lods
cmp
stc
bound
push
sbb
insl
test
and
sub
lcall
xchg
add
cmp
nop
cmp
adc
nop
fildll
xorl
xor
out
xchg
smsw
arpl
fcoms
xchg
std
arpl
dec
pop
cmp
mov
test
data16
aaa
mov
out
xchg
lahf
push
mov
scas
fucomip
push
ret
fwait
adc
call
scas
adc
rol
sti
mov
push
jno
push
sarb
sbb
mov
sbb
test
xchg
xchg
lock
je
mov
shrl
push
movsl
jae
pop
xor
mov
movsb
mov
aad
or
sub
pop
push
fidivl
xor
adc
and
das
iret
lods
fnstcw
ljmp
sar
and
das
push
jle
sub
xchg
push
jne
cmp
les
jp
movsb
lea
and
sahf
pop
scas
in
jecxz
pop
shlb
xchg
add
and
sub
scas
add
lds
out
adc
mov
shlb
loopne
jecxz
loop
jae
cld
fwait
add
cli
push
insl
add
ljmp
pop
popf
mov
rorb
pushf
mov
sarb
xchg
xor
xchg
maxps
cmp
fdivs
push
lods
or
cmp
sbb
dec
inc
xor
lds
pop
lock
sub
inc
scas
xchg
imul
push
dec
mov
push
sbb
clc
ret
jl
push
cmp
mov
outsl
sar
pop
xchg
adc
mov
ss
movsl
aad
jge
sub
jne
ljmp
inc
imul
icebp
dec
das
dec
loope
test
scas
in
je
mul
add
je
add
sub
lret
sbb
insl
mov
xor
hlt
push
mov
cmp
aaa
pop
nop
dec
adc
or
push
xchg
cmp
scas
js
push
repz
nop
cli
ss
into
ret
aaa
cmpsb
jns
aaa
enter
test
lods
test
jbe
rolb
inc
leave
xor
push
sbb
push
icebp
sti
std
add
add
fwait
ds
outsl
fisttpll
mov
xor
jp
or
pop
sbb
clc
mov
pop
jnp
mov
pop
shl
jp
and
andb
out
not
daa
divb
out
test
push
data16
mov
jb
push
mov
mov
hlt
xor
xor
in
aaa
dec
imul
dec
arpl
outsl
test
pop
ljmp
xchg
out
and
int
cld
inc
xchg
bound
ss
inc
aaa
and
scas
mov
rclb
jmp
adc
es
xor
ret
jge
loope
jg
hlt
xchg
aas
mov
filds
in
sbb
out
shr
push
xor
xor
sub
pop
bound
cmpsl
mov
divb
and
and
aad
mov
insl
dec
and
cmp
pop
fsubp
out
cmp
jnp
lock
mov
cmpsl
adc
push
call
pusha
enter
loop
jle
clc
dec
xor
adc
mov
push
les
adc
push
addr16
fwait
ret
enter
in
dec
xchg
pop
test
or
insl
cmp
pop
pushf
mov
xchg
sarl
and
dec
cltd
jle
cmp
sbb
rorb
insl
push
mov
push
cmp
pop
jp
cs
pop
icebp
cmp
inc
mov
push
subb
repz
mov
sti
xor
and
test
imul
inc
fimull
loopne
loope
xchg
cwtl
andl
add
ds
sti
mov
cmpsb
fistps
or
mov
ljmp
mov
mov
imul
fcomps
icebp
dec
push
scas
push
inc
idiv
inc
mov
sahf
push
loope
xor
loop
dec
enter
jge
xor
cmp
jle
loopne
sbb
push
mov
jb
mov
nop
aad
test
jb
mov
adc
cmp
repz
jnp
in
lods
push
std
scas
outsb
movsl
scas
lahf
push
or
and
fsubrl
imul
inc
add
div
mov
shll
xchg
pop
add
aam
ja
fsts
jl
sub
out
lods
push
stos
mov
push
in
add
jne
or
or
xor
pop
pop
nop
push
mov
or
sub
xchg
testb
stos
jle
mov
addb
hlt
enter
imul
gs
call
push
fsubr
adc
jl
shll
stos
jecxz
add
orb
cs
arpl
sahf
xlat
out
and
xlat
xchg
les
or
dec
movsl
lret
loopne
push
iret
push
sbb
roll
fwait
mov
sbb
loope
push
xchg
jmp
sbb
sbb
inc
mov
neg
dec
add
push
add
xchg
stos
fsubl
mov
lods
ds
repz
nop
outsl
int
cmc
adc
dec
ljmp
jnp
pusha
lods
jg
xor
push
sub
xchg
gs
adc
jle
and
nop
aad
and
nop
insb
fnstcw
fiadds
daa
int
add
inc
cmp
roll
push
jo
test
sbb
shlb
fisttpl
sahf
rclb
orb
hlt
inc
adc
in
sbb
rcl
loope
or
scas
cs
push
adc
sarb
or
out
jmp
pop
fcomi
push
jg
add
js
mov
add
leave
imul
xchg
sub
inc
xor
jge
sbb
add
daa
cmc
inc
pop
xor
push
sub
jecxz
cmp
cld
push
mov
xor
inc
push
cli
cmp
in
xorb
sub
sub
imul
mov
popa
les
inc
pop
or
dec
jbe
mov
mov
hlt
lahf
je
sub
push
or
popf
enter
adc
lods
xor
jecxz
push
daa
ds
mov
movsb
or
or
lret
inc
imul
mov
push
shlb
gs
mov
pop
push
loopne
aas
dec
ret
or
lret
jnp
jb
test
arpl
stc
or
sub
push
repnz
jle
out
repz
or
loopne
or
push
cmp
jbe
adc
ljmp
lds
mov
into
loope
movsb
add
push
dec
inc
inc
mov
jae
inc
adcl
inc
call
lock
sbb
dec
pop
xor
rolb
aam
xchg
in
ret
aaa
or
outsb
jb
into
sbb
xor
inc
push
dec
inc
and
cmp
jg
inc
xor
ss
jp
pop
adc
jnp
adc
jae
mov
push
and
jl
fisubl
fwait
jl
jle
inc
insl
lret
mov
mov
jle
sbb
mov
push
lods
xor
add
jmp
loopne
call
incb
sbb
and
in
dec
push
nop
push
iret
sbb
es
mov
lcall
rcll
mov
rolb
or
pushf
pop
loopne
mov
jae
lds
cmp
cwtl
and
test
push
mov
clc
cmp
mov
sub
sbb
fwait
sbb
loopne
push
fcmovb
inc
scas
mov
sub
pop
xchg
cmp
xor
call
inc
outsl
pushf
add
scas
test
push
inc
aas
adc
pop
repnz
rorb
dec
mov
mov
shlb
aad
leave
movsl
pop
push
sub
adc
rorl
adc
in
sub
xor
jmp
sbb
sub
sub
jo
mov
push
jp
mov
sti
or
jo
aas
push
mov
xchg
mov
pop
stos
sub
sbb
pop
faddl
iret
mov
call
fldl
cmpb
mov
rolb
inc
sbb
mov
adc
mov
addr16
inc
clc
or
adc
jbe
icebp
insb
fwait
xor
push
ljmp
leave
shlb
jns
sub
mov
inc
push
add
inc
sub
es
pushf
mov
sahf
cltd
insb
cmpb
rolb
push
sub
popa
xor
jge
mov
xor
pop
and
push
cmp
sub
inc
xchg
frstor
pusha
lahf
jno
pop
cli
cli
xor
sbb
in
add
xchg
adc
xlat
mov
jp
inc
stos
fdivrl
dec
cmpsb
dec
sbb
pusha
and
sahf
stos
ss
sub
cwtl
into
cltd
pop
add
mov
push
jno
paddq
pop
out
pop
cmp
cmp
xor
jmp
lods
scas
mov
adc
add
adc
inc
test
pop
adc
adc
fmuls
cli
mulb
ss
lahf
into
dec
cli
ds
cwtl
fisttpll
pop
mov
sbb
in
push
add
xchg
jnp
mov
sbb
enter
test
fmull
cmp
loope
into
shlb
aas
jecxz
call
add
ds
inc
jle
scas
mov
icebp
xchg
rcr
insb
into
mov
out
dec
std
and
ret
or
xchg
testl
xchg
sbb
out
sub
push
mov
clc
gs
fdivrp
push
cmpl
push
movb
gs
fimuls
lret
push
adc
cmp
pop
xchg
lret
inc
pop
and
stc
nop
fbstp
xor
pop
movsl
push
std
lcall
xor
lcall
insl
rclb
bound
stos
test
scas
dec
xchg
imul
roll
fsubrs
rclb
sub
sbb
push
fisubrl
xor
push
stc
mov
cmpsb
stos
and
jns
scas
shlb
movsl
push
in
imul
out
lret
dec
ja
dec
sahf
cmp
mov
push
dec
xlat
xchg
dec
xchg
jns
xchg
pop
sbb
xchg
loope
mov
divb
adc
in
imul
pinsrw
dec
sub
dec
loope
iret
xchg
mov
popa
and
mov
adc
pop
arpl
mov
pushf
cmp
pop
repz
add
pop
scas
jmp
das
ret
cmp
imulb
fldcw
sub
outsl
dec
mov
sbb
sub
push
sbb
add
stc
es
cmp
fwait
jecxz
mov
sub
bound
pop
ljmp
xchg
and
or
cmp
pop
sbb
int
loope
je
mov
jg
sbb
jnp
scas
inc
sub
jl
inc
mull
jne
icebp
xor
fldt
dec
push
pushf
test
cmp
stc
lock
adc
sarb
jno
or
dec
int3
dec
push
lret
jge
shll
fidivrs
mov
xchg
fcomps
pop
jl
fwait
lahf
push
lock
mov
cli
xchg
lea
enter
test
sbb
stc
insb
cmp
dec
ja
imul
cli
lea
testb
xor
loopne
or
shlb
mov
stos
aaa
mov
push
inc
mov
mov
aad
in
cwtl
lahf
xor
into
arpl
fistpl
jecxz
insl
xor
test
push
cmc
or
jns
sbb
shrb
mov
pushf
sar
sbb
jle
adc
mov
mov
testl
or
je
push
push
add
cmpsl
inc
std
imul
mov
sub
outsb
add
mov
inc
xchg
mov
mov
mov
xchg
lods
adcl
iret
jo
mov
sub
scas
sub
xchg
push
adc
imul
fildl
out
add
lahf
dec
xchg
std
icebp
cmp
sbb
add
or
add
sub
xchg
movsb
leave
sbb
push
push
adc
ret
or
nop
fistpl
cmp
mov
aaa
pop
sub
mov
and
push
lods
add
dec
jle
push
aas
stos
into
insl
int
cmp
mov
pop
mov
push
out
pop
xchg
xor
xchg
push
pop
adc
jg
adc
mov
leave
adc
push
movsl
into
sub
lret
arpl
cmp
stos
pop
mov
xchg
lcall
mov
cmp
repnz
xor
cmpsl
je
jg
lock
pop
push
jae
insl
jp
ljmp
add
mov
out
je
dec
inc
mov
jge
jnp
mov
cmp
or
xor
iret
sbb
divb
and
divl
or
dec
inc
call
mov
andb
stc
cli
xchg
fsubs
mov
aas
daa
push
inc
jo
dec
mov
ss
sub
movsb
adc
bound
das
nop
xor
pop
xchg
aaa
in
sub
out
dec
shlb
repnz
jl
lahf
sbb
adc
dec
jo
subl
adc
adc
inc
sub
pop
jg
adc
mov
jae
cwtl
sti
and
inc
sub
stos
nop
aas
daa
inc
fcomip
xchg
dec
push
cli
add
sahf
lcall
iret
popa
and
daa
fmull
inc
stos
jb
cwtl
repz
in
rcll
cmp
icebp
fldl2t
and
inc
fs
push
sub
inc
jmp
lods
mov
xchg
hlt
jno
jge
hlt
cmpb
test
add
aam
pop
jae
stos
push
xchg
das
mov
addr16
and
popa
fdivrp
cltd
data16
xor
or
mov
pop
xchg
mov
loopne
testl
loopne
decl
das
cs
ja
sti
xchg
popa
int
call
dec
aad
adc
add
sbb
dec
lock
popf
dec
clc
jno
mov
sub
pushf
cmp
fwait
sub
fs
iret
pop
movb
addr16
xor
mov
js
and
pop
cmp
call
cmp
sub
sbb
or
lcall
rorb
stos
mov
out
cld
xchg
cli
adc
lods
pop
in
aaa
jnp
sbb
aad
sbb
cltd
lods
mov
stc
mov
dec
xchg
stos
jae
add
movsb
or
rorl
dec
xor
mov
push
mov
in
push
out
arpl
dec
xor
mov
mov
cmp
fs
dec
mov
add
sbb
call
pop
pop
mov
addb
xchg
in
cmp
shl
testb
jns
arpl
out
or
adc
shlb
mov
mov
popa
adc
in
loop
add
in
inc
lods
and
dec
ret
cmpsl
loopne
les
or
lods
sub
mov
icebp
nop
outsb
lret
sub
jmp
fldl
or
inc
inc
mov
sbb
fisubl
std
insb
mov
cmp
dec
xor
comiss
dec
push
mov
dec
imul
mov
xchg
dec
sbb
in
call
and
jb
xor
fdivl
lods
add
in
adc
clc
mov
add
sbb
popf
fadds
repz
movsb
cmp
xchg
xor
mov
stos
mov
cmp
push
aas
sbb
sbb
add
fdivrs
push
outsl
mov
inc
sbb
shrb
dec
jecxz
adc
adc
fdivr
xorb
push
scas
repz
cmpl
popf
push
dec
into
popa
popl
sahf
icebp
mov
sahf
out
cmp
mull
int
ja
dec
xorl
and
test
push
cld
jne
push
iret
jecxz
sti
sub
add
push
cmp
add
fiadds
test
inc
mov
inc
je
movsb
movsb
push
fiaddl
mov
cmp
fdivrs
push
push
xchg
inc
std
xor
cwtl
addr16
mov
push
mov
lahf
cmp
cmp
inc
push
sbb
xor
xor
stos
inc
addl
inc
xchg
pusha
nop
adc
ja
das
bound
dec
mov
pop
mov
fwait
mov
adc
imul
mov
gs
leave
push
out
jge
cwtl
jb
mov
xor
clc
aam
arpl
fbstp
fstl
test
mov
fsts
cmpsb
aam
xchg
dec
dec
lods
and
xor
mov
jne
or
leave
push
cmp
or
in
sbb
jo
in
xor
cmp
mov
pop
push
sbb
mov
push
mov
adc
mov
mov
sahf
dec
inc
addr16
cmp
pusha
sbb
std
mov
mov
loope
in
call
mov
in
js
nop
fistpl
mov
jae
fs
sbb
pop
fists
jg
mov
push
loop
loope
shll
loopne
sub
into
enter
sub
clc
xor
stos
pop
xor
and
or
xchg
inc
xchg
or
mov
mov
mov
popa
add
xchg
mov
pusha
aaa
cmpsb
pop
ficoms
mov
or
cmc
pushf
outsl
int
imul
lahf
fsubr
lods
shrl
pop
mov
cmp
shr
lea
mov
cmpsb
dec
mov
loope
inc
aam
mov
mov
xorb
shll
stc
test
add
dec
cmp
stos
cmpsb
clc
ljmp
fcomi
cmpl
mov
pop
enter
push
aas
inc
push
flds
mov
push
mov
push
dec
aaa
shl
pop
mov
das
dec
sub
and
push
cld
xor
xor
ss
pop
jecxz
and
jge
int
in
jo
aas
cmpsl
add
popf
xor
repnz
lods
sbb
mov
or
ficomps
inc
jge
push
pop
testl
int
jmp
xchg
fwait
stc
mov
loopne
mov
or
sbb
jmp
sbb
scas
cmpsl
es
enter
jge
movb
daa
jmp
cmpsb
into
mov
push
dec
ljmp
popa
cli
jnp
daa
cmpsb
in
push
xor
test
dec
add
cmc
sbb
hlt
adc
mov
test
cmp
sub
loop
sbb
icebp
mov
bound
jnp
mov
fs
std
xchg
mov
test
fcompl
fiaddl
xlat
jecxz
in
stc
xchg
test
mov
outsb
arpl
icebp
jmp
mov
mov
or
arpl
iret
dec
out
aas
stc
pop
shlb
jno
and
pop
test
inc
jecxz
lcall
or
mov
in
lock
or
mov
sar
mov
mov
and
add
mov
mov
adc
repnz
sub
js
sbb
jge
scas
and
adc
outsl
lret
insl
cmpsl
fmull
add
cmp
mov
mov
mov
push
xorb
mov
addb
mov
jle
sub
ljmp
dec
lahf
fwait
scas
dec
les
sbb
ljmp
rcll
push
sub
imul
cmp
sub
add
inc
mov
lret
popa
push
cmc
sbb
jp
xchg
shrl
xchg
aaa
test
in
sbb
mov
and
stos
scas
fsubrl
daa
test
ret
ror
pop
sbb
lock
in
or
ja
int3
xchg
lods
aaa
pop
imul
dec
frstor
or
pushf
cmp
sbb
in
repz
mov
xchg
ljmp
cmp
rcrb
jb
stos
out
les
push
int
and
mov
aad
jp
out
ss
imul
dec
mov
mov
jecxz
ficomps
int3
shlb
lret
je
scas
lcall
push
std
in
or
push
and
xchg
imull
mov
mov
movsb
mov
pop
mov
sub
adc
fiadds
mov
les
cli
orb
scas
mulb
clc
testb
dec
xor
sbb
jae
adc
inc
ficoml
add
shrl
nop
jno
add
push
int
stos
dec
jle
loope
add
stc
adc
sbb
xchg
mov
inc
mov
ss
fcmovb
aas
imul
adc
pusha
dec
inc
das
aad
out
xchg
push
xchg
sub
js
jne
push
mov
push
cmp
sbbb
or
pop
in
mov
mov
add
mov
adc
outsb
or
push
sbb
lods
xchg
xchg
mov
add
or
out
ljmp
mull
mov
in
sbb
jp
gs
jle
xor
sbb
push
out
or
shlb
sti
jo
sbb
gs
push
pop
pop
cwtl
test
in
jg
clc
repz
nop
cmpsl
loopne
inc
push
jns
mov
jbe
mov
push
lcall
mov
enter
sub
or
inc
aas
rol
aas
arpl
jecxz
cmp
or
sub
lds
loope
lock
sbb
jmp
add
jmp
mov
ficoms
gs
push
loope
out
out
lea
jne
out
adc
add
cmpsl
leave
lahf
dec
jg
xchg
push
mov
cmpsb
scas
pcmpeqd
in
jns
adc
jp
xor
test
push
push
fimull
scas
bound
add
pop
cmp
sub
adc
xchg
and
sbb
lds
cli
loope
sub
test
sbb
xchg
jb
pop
es
push
add
mov
jg
cmp
test
cli
xchg
arpl
cmpsl
or
push
test
mov
sub
pop
in
pop
and
addb
data16
out
cmp
xor
dec
test
dec
and
sbb
adc
adc
lods
movsl
cmp
sub
xlat
shl
push
cltd
xor
adc
stc
push
fldt
in
mov
mov
sub
sbb
xor
and
pusha
rorb
in
data16
or
jne
sub
scas
push
mov
or
cmc
xorl
mov
iret
rorb
pop
pop
lcall
jo
push
loop
and
insb
push
mov
jo
push
push
sbb
mov
jmp
xorb
or
es
loope
repnz
sub
cmpb
dec
popf
std
in
jle
lods
and
sub
xchg
cltd
pop
push
push
mov
mov
movsb
leave
push
pop
daa
movl
jno
fs
fnstenv
mov
lea
push
shrb
xor
cmp
xchg
lds
out
or
sub
adc
mov
in
decb
xchg
add
fdivrl
jne
jnp
pop
ja
jns
dec
adc
pop
mov
sub
rcl
cmp
scas
pop
in
shll
lods
mov
xchg
pop
loop
in
ret
pop
and
mov
rcll
mov
jge
mov
xchg
push
test
pop
popf
and
stos
jns
dec
das
jg
xchg
outsl
das
cs
pop
sbb
inc
lret
mov
cmp
xor
add
pop
inc
mov
mov
inc
inc
js
cmpsl
idivb
sbbb
sbb
mov
cmpsl
xchg
mov
push
inc
and
pop
inc
dec
in
mov
or
lds
cmpsl
lahf
or
repnz
leave
jae
xor
or
adc
dec
or
sub
cmp
jge
hlt
add
pop
lock
mov
cwtl
aas
add
adc
lea
sbb
out
jo
adc
aam
fwait
adc
and
add
mov
pop
inc
lea
arpl
arpl
add
pop
mov
arpl
lods
out
inc
cmp
in
adc
aas
fisttps
add
adc
in
mov
lret
fimull
insl
push
insb
daa
lea
mov
iret
xor
mov
pop
cmp
js
inc
lods
mov
loopne
mov
mov
push
adc
and
je
pop
mov
sbb
das
pushf
and
mov
fstpl
loopne
lret
cld
mov
cli
xor
out
iret
inc
sub
mov
inc
mov
into
loope
mov
adc
fimull
cmp
sub
sbb
xchg
or
lods
jae
sub
xor
push
xchg
adc
mov
add
test
scas
mov
gs
cmp
xor
lret
into
pop
ficoml
xchg
fcomip
aas
mov
aad
pop
stos
mov
shufps
inc
jb
xchg
rolb
aas
cmc
les
imul
mov
jb
adc
repnz
sbb
mov
add
sub
cmp
aas
imul
dec
and
in
push
dec
pop
ret
sub
jl
ljmp
mov
jle
sar
and
or
inc
sahf
jecxz
pop
push
pop
push
cmp
sahf
pop
js
out
push
popf
rorb
xor
imul
test
lea
rclb
add
shrl
push
mov
pop
cmp
pop
cltd
in
xlat
rcll
adc
cmp
into
and
jmp
cmp
in
jecxz
ds
mov
mov
gs
inc
sub
jle
insb
cmpl
xor
aaa
gs
sbb
mov
push
and
faddl
lret
rorb
sub
fs
xchg
fcom
pushf
push
dec
rcl
repz
mov
dec
inc
jb
jne
mov
aad
leave
push
test
int3
push
scas
cmpsl
adc
sub
jle
das
mov
and
xor
mov
fcomps
test
test
andb
fidivs
mov
stc
sub
mov
stos
xor
mov
mov
adcl
xchg
and
adc
pop
mov
clc
inc
push
rolb
or
xchg
sbb
mov
and
mov
inc
idivb
xchg
pop
or
rorb
sub
sbb
lds
push
add
pushf
test
xchg
loop
dec
cmp
dec
and
hlt
cmp
je
cs
xor
add
sub
fisubl
loope
out
pop
mov
icebp
mov
cmp
add
rcll
push
dec
arpl
pop
mov
mov
adc
mov
int
arpl
pop
mull
jae
mov
sti
bound
sbb
insb
out
dec
adc
lret
lea
xchg
and
dec
mov
adc
imul
mov
dec
lea
stos
lret
flds
out
pop
ljmp
cmc
cld
add
ljmp
sbb
mov
andb
xor
stc
fiaddl
cmp
jbe
lods
cmp
les
mov
push
push
std
cltd
movsl
ds
adc
adc
aam
in
xchg
js
in
js
dec
das
fnstcw
mov
xchg
jp
jo
mov
out
in
rorb
in
mov
pop
mov
push
inc
sub
mulb
xor
cmpsb
fld
ret
lahf
inc
xchg
test
ss
dec
adc
test
xchg
sbb
sub
add
mov
ret
add
cmpsb
stos
add
jp
imul
push
lea
shrl
or
dec
pop
mov
sbb
addr16
mov
enter
rorb
mov
mov
in
add
les
test
xchg
push
cmpsb
xor
mov
mov
cmp
mul
dec
or
dec
adc
inc
dec
icebp
inc
cs
out
hlt
out
pop
test
adc
pop
imul
scas
adc
movsb
and
and
push
mov
jmp
sbb
insl
lret
mov
mov
test
jmp
pop
js
or
ret
gs
sbb
jo
pop
sub
enter
push
mov
xlat
xchg
jns
push
jb
pop
jmp
std
cmp
div
jno
sub
rclb
rorb
fmull
dec
mov
sub
jnp
das
out
sbb
outsl
fwait
mov
mov
das
push
mov
insl
sbb
adc
push
xorl
dec
into
push
xor
sbb
inc
inc
fistpll
lcall
pop
mov
mov
adc
cwtl
popf
pop
cwtl
push
mov
fsub
pusha
mov
inc
imul
outsl
xchg
cwtl
and
cmpsb
mov
push
scas
mov
call
adc
mov
add
lahf
add
js
mov
imul
inc
xor
das
shrl
xor
imul
xor
in
cmpb
mov
adc
xor
outsb
dec
jne
sbb
jae
insl
sbb
loope
ss
rcrl
xchg
cli
and
xchg
inc
adc
jo
js
ja
dec
fisubrs
ss
ja
inc
ja
pop
out
push
cli
ret
cmp
fbstp
scas
pop
notb
xchg
mov
xor
or
out
dec
into
stc
pop
add
repz
cli
mov
rcll
out
insl
ffreep
and
test
sub
or
je
std
or
mov
xor
test
cmpsl
or
stc
data16
push
fwait
mov
ja
jmp
inc
push
xchg
std
or
add
popa
es
fdivl
cmc
xchg
xor
and
test
daa
outsb
insb
loop
ret
dec
mov
cli
stos
test
jne
ret
stos
push
sahf
lret
jno
add
aas
scas
lret
rcr
push
jo
into
adc
jo
adc
adc
xor
dec
push
sbb
sbb
lret
mov
insb
hlt
pop
fists
adc
out
out
jmp
pop
test
pop
ror
dec
mov
test
lock
cmp
pop
call
loope
cli
sbb
popa
imul
sbb
push
cltd
dec
nop
sub
subl
icebp
xlat
insl
outsl
inc
outsb
test
pop
pop
ret
lods
repz
out
xor
lea
cmp
push
sti
or
in
mov
jnp
addr16
ficomps
dec
leave
mov
dec
sub
dec
repnz
adc
stc
add
xchg
lds
jge
push
xchg
and
cmp
fdivr
lcall
dec
sub
xor
or
dec
addl
stc
stos
cmpsb
popf
or
outsb
push
stos
inc
sahf
jmp
push
dec
push
lock
pop
hlt
aas
or
adc
xchg
mov
fwait
inc
pop
es
mov
xchg
fisubrs
andb
lds
push
test
jecxz
and
cld
mov
push
ret
sub
cmpsb
xor
adc
jecxz
xchg
add
mov
outsb
jb
notl
pop
mov
jl
ret
test
jns
mov
cmpsb
jp
and
imul
aaa
jo
fsub
adc
imul
cmpsl
lods
fidivrs
sub
jecxz
cmpsb
or
stc
pop
stos
pop
dec
out
fcomps
shrl
or
push
fsubrl
nop
aaa
mov
sti
xor
push
jnp
call
enter
inc
std
std
and
ljmp
jmp
into
mov
dec
movsb
ja
jnp
mov
cmp
and
test
arpl
aaa
stc
sahf
mov
inc
push
pop
clc
cmp
lret
in
pop
inc
dec
inc
loopne
out
inc
std
lcall
dec
adc
sub
adc
sub
popf
aad
aad
adc
xchg
lahf
adc
xchg
je
fisttps
xor
push
lods
fnstsw
adc
mov
nop
push
lahf
inc
sub
mov
outsb
xchg
cs
outsb
adc
mov
xor
sub
pop
fsubrs
data16
idiv
loopne
push
dec
add
in
iret
pop
or
fs
test
pop
dec
fs
pop
cmpl
aaa
sub
and
es
xchg
sub
jne
jmp
data16
mov
push
mov
ret
pop
cmp
hlt
xchg
aad
jne
cmp
adc
xchg
sub
fbstp
int3
cs
xor
imull
in
jecxz
mov
rorl
push
push
loope
pop
cmp
adc
adc
nop
daa
jg
jg
lcall
sbbb
cmc
jp
stc
mov
rcrb
or
rcr
push
mov
or
faddl
cmpsb
jecxz
jl
lock
int
sub
add
sub
mov
and
dec
mov
xchg
mov
ret
fcom
lock
loope
fcmovu
xchg
loopne
mov
clc
aam
jbe
mov
leave
mov
lret
adc
xchg
ret
inc
mov
mov
nop
pop
fldln2
fimull
add
mov
jle
jecxz
insb
sbb
inc
dec
xorb
pop
dec
and
push
mov
fsubr
aad
js
ljmp
fs
fidivrl
aad
inc
negl
shrb
jecxz
pop
push
dec
xor
inc
rorb
or
mov
fdivs
cmp
mov
fidivs
jg
pop
out
jae
fnstsw
frstor
shlb
cmc
nop
xor
mov
pop
push
dec
scas
icebp
or
cwtl
or
jecxz
sahf
or
je
daa
sbb
stc
scas
imull
call
add
repz
test
arpl
ss
fsubr
cmp
and
ss
movsl
or
add
mov
inc
push
cmp
sbb
dec
add
xchg
jne
sbb
sahf
jecxz
sub
inc
push
jns
sub
dec
and
into
pop
adc
jb
xchg
hlt
jmp
insb
cmc
test
je
mov
mov
int3
scas
jl
add
out
lods
jbe
lret
and
add
out
push
test
adc
jno
adc
or
cmpsb
pop
dec
cmp
pop
lods
fcoml
sbb
scas
push
xchg
xlat
enter
mov
or
ret
scas
jmp
mov
and
in
mov
mov
loope
xchg
popa
pusha
cmp
rorb
pop
add
xor
repnz
pop
dec
scas
ret
repnz
dec
enter
loop
arpl
mov
cld
aam
and
outsl
sub
lods
dec
test
and
std
cmp
pop
das
xor
fdivl
mov
cmpsb
jge
xor
loope
orl
xor
mov
inc
cmp
or
cmpsl
jmp
in
mov
cmp
fsubr
pop
sbb
sti
sub
mov
fimuls
cmp
hlt
pop
adc
adc
jecxz
jg
cmpsb
cmc
adc
movb
push
and
cmc
ds
jmp
and
fdivr
dec
ret
xchg
jge
insl
stos
mov
int
jno
adc
push
mov
inc
mov
rcrl
incl
scas
and
jbe
cmpsl
add
add
and
divl
addl
or
ret
mov
mov
cmpsb
xchg
outsl
ljmp
es
pushf
sti
cmp
cmp
fincstp
in
dec
into
in
xor
or
dec
jns
push
mov
popf
clc
jle
jns
bound
pushl
mov
call
mov
jp
mov
push
stos
xchg
add
mov
sub
arpl
xor
push
out
sub
fsts
pop
in
or
pop
subl
dec
pop
cli
push
or
dec
les
insb
fldl
jp
test
sub
mov
mov
and
insl
mov
mov
inc
dec
dec
mov
roll
cld
in
ret
scas
lods
push
cmp
cmp
mov
or
loop
mov
xor
jl
jb
imul
in
ds
outsl
xchg
sbb
lods
in
inc
inc
sub
xlat
es
imul
push
movsb
mov
push
leave
xchg
popf
mov
popf
lock
test
lcall
push
test
push
adc
push
shlb
dec
aaa
loopne
js
xor
test
nop
lcall
mov
daa
sub
fistps
test
and
fistpl
jg
fcoml
das
mov
icebp
dec
lods
or
mov
xlat
dec
ss
cs
mov
xchg
push
jl
mov
jecxz
and
stos
push
xorps
test
adc
adc
out
rorl
shll
addr16
popa
push
aas
or
push
rorl
imul
decb
jecxz
xlat
xor
sahf
cltd
adc
add
mov
inc
mov
and
out
mov
or
shrl
push
stos
inc
sub
roll
inc
add
call
std
nop
mov
and
adc
aam
lds
fcmovne
inc
imul
inc
pmullw
push
pop
jns
enter
mov
scas
mov
test
mov
jecxz
ret
loop
dec
stos
push
push
pop
mov
js
scas
sbb
out
mov
out
add
push
jb
sbb
or
pusha
mov
sub
mov
ret
pop
repz
xchg
es
clc
std
inc
imul
dec
jnp
push
movsl
xchg
push
shrl
or
add
ret
pushf
jmp
jno
inc
adc
outsb
out
or
sub
scas
pop
imul
icebp
mov
jle
out
scas
cmpsb
push
add
rorb
sub
dec
mov
rorl
outsb
add
bswap
roll
xor
push
arpl
cmp
push
sarb
pop
sbbl
xor
xchg
sarl
push
outsb
jo
push
push
dec
nop
xchg
mov
pop
arpl
arpl
hlt
jge
mov
xor
popa
test
inc
add
cmc
jp
nop
stc
lahf
mov
cli
jmp
and
add
scas
imul
mov
pusha
fiadds
mov
mov
cmp
xchg
jnp
inc
daa
fdivl
sub
arpl
pop
pop
dec
test
jae
fs
call
rclb
out
shl
outsb
fcompl
push
xchg
jl
push
fisttpll
mov
mov
cli
xor
push
mov
jmp
inc
hlt
mov
lds
jo
in
iret
clc
call
xchg
add
scas
push
mov
mov
repnz
fwait
mov
imul
stc
dec
push
cmp
fstpl
aad
clc
in
cmc
jge
jne
push
ret
mov
fstpt
mov
add
mov
popl
dec
push
shlb
mov
push
xchg
and
stc
movsb
jmp
mov
mov
gs
or
insb
insl
jp
shl
test
mov
movl
jmp
push
leave
xchg
push
and
sbb
js
and
sbb
jns
aaa
pushf
sbb
mov
fs
int3
iret
mov
mov
mov
mov
xchg
cmp
popa
fst
sub
or
popa
out
loop
sub
insb
adc
sbb
mov
adc
lret
add
sub
push
pusha
or
hlt
sti
mov
pop
scas
dec
and
pop
cmpsl
xor
ret
sahf
and
mov
mov
add
cs
test
nop
popa
aas
push
rep
pop
cwtl
lret
pop
movsl
cmp
cwtl
lcall
decb
xor
sub
in
cmp
jns
sbb
movsb
hlt
jb
mov
test
fisubl
bnd
je
ljmp
xchg
sub
mov
mov
or
push
cvtdq2ps
inc
adc
test
or
cmpsb
xchg
or
xor
test
or
fdivs
gs
mov
mov
cltd
test
pop
loopne
push
aas
popa
sub
mov
or
andl
sti
push
pop
aaa
popf
sbb
xchg
push
rclb
les
sbb
inc
mov
shlb
and
leave
testl
cmp
and
aad
cmp
jne
fstpt
mov
cmp
aas
dec
rcl
mov
push
popa
nop
subl
mov
mov
mov
cmp
push
imul
das
in
or
and
jb
gs
call
sbb
pop
adc
cs
inc
imul
out
pop
mov
and
aaa
mov
cmp
je
pusha
shll
outsb
mov
loopne
es
mov
and
adc
das
add
ror
test
dec
mov
lock
mov
ss
mov
ja
pop
enter
jge
lcall
mov
sub
fistps
je
sbb
fildll
jnp
inc
ja
faddl
push
add
sub
stos
nop
sub
sub
ja
jae
jno
dec
xor
je
stc
xor
jecxz
xlat
mov
icebp
prefetchw
popf
mov
dec
xor
stc
cmc
stos
add
mov
stos
test
jmp
jp
shrb
std
inc
pop
mov
cmc
addb
jl
xor
lock
jle
outsl
jge
inc
pop
or
xor
mov
in
imul
ja
rolb
jae
mov
xor
or
test
es
adc
jl
mov
jb
mov
xor
push
addb
mov
les
bound
shll
repnz
pop
adc
lds
or
nop
xchg
xchg
and
or
dec
loop
test
insb
add
ret
fcomip
repz
lahf
and
jmp
push
mov
add
data16
mov
mov
into
enter
inc
push
rcl
mov
adc
xchg
xchg
mov
xor
mov
and
sbb
or
arpl
std
jno
or
mov
aaa
adc
bound
into
aas
or
pop
xchg
xchg
bound
imul
test
jp
inc
inc
mov
in
out
inc
das
mov
and
lcall
psllq
xlat
push
int
enter
cwtl
sbb
out
lods
dec
adc
xchg
mov
mov
lahf
pushf
dec
test
test
je
cs
clc
xor
js
dec
or
int
popf
ret
and
mov
inc
mov
inc
inc
lret
es
sub
mov
mov
or
and
mov
inc
pop
jecxz
or
pop
inc
or
test
icebp
xlat
nop
cli
sti
sub
xchg
mov
outsl
push
aad
mov
dec
scas
movsl
mov
out
ja
add
sarb
adc
std
xchg
andl
aaa
dec
in
xchg
jecxz
orb
and
in
fsubr
or
lods
mov
cmp
test
loop
test
mov
jecxz
fwait
jmp
jle
ljmp
jg
cmp
jp
pushf
jo
sub
fstl
cld
test
or
fmul
dec
enter
inc
cmp
lods
pop
ja
or
pop
outsb
int
lcall
fiaddl
jae
pop
outsb
adc
mov
mov
inc
dec
xor
int
push
addps
ds
pop
add
pop
je
xor
jnp
xchg
push
jmp
dec
push
adc
and
pusha
adcb
sub
jle
negb
ljmp
xor
xchg
rcrl
outsb
stos
push
xchg
pop
stc
outsb
or
sbb
addl
movsl
add
incl
sti
fnsave
bound
mov
imulb
mov
les
add
enter
dec
pop
mov
sub
cmp
out
adc
sub
cs
jbe
xor
loope
filds
xchg
test
cmpsl
xchg
xor
outsl
das
inc
insb
ja
sub
into
daa
stos
cld
cmp
add
xchg
dec
jle
dec
fcmove
add
callw
dec
and
push
push
jb
out
test
pop
cli
sbb
notb
fsubs
call
inc
dec
sahf
lods
rcll
ret
int3
cmp
push
push
lcall
cmp
std
fs
xchg
hlt
inc
mov
leave
pushf
outsl
movsl
add
ljmp
subb
pop
or
nop
push
jno
ja
pop
or
inc
inc
xor
sbb
outsb
fimull
push
rcl
sti
mov
add
xor
cmc
loopne
jno
xchg
fldl
popa
iret
fadds
pop
sbb
out
mov
xor
push
push
xor
push
jae
in
fs
sbb
fnstcw
mov
xchg
nopl
jg
mov
lea
mov
fsubrl
xor
xchg
dec
out
pushl
jbe
jge
js
das
xor
jg
fcompl
push
lret
imul
sahf
aam
mov
arpl
xor
adc
or
rcrb
not
sbbb
movsl
xchg
inc
outsb
shlb
cmp
sub
das
iret
mov
lods
clc
loop
mov
sar
xor
andl
xchg
and
push
rorb
lahf
shrl
xchg
cli
mov
mov
and
sub
add
mov
gs
ss
into
mov
lret
insl
pusha
dec
push
inc
in
push
inc
mov
popa
addr16
mov
push
pop
mov
mov
out
sub
out
sbb
pop
imul
add
lcall
xchg
xchg
jmp
cmp
xchg
pop
mov
cmp
das
pop
icebp
or
lret
iretw
jbe
add
adc
push
xorl
inc
out
jp
mov
sub
mov
ret
jge
aam
loop
mov
test
cwtl
mov
out
stc
imul
pop
lds
jmp
sub
clc
lcall
pusha
fildll
adc
loopne
insl
ret
inc
and
push
lods
xlat
add
js
sbb
pusha
test
insl
push
in
je
xor
mov
lcall
test
mov
movsb
in
outsb
scas
dec
push
jle
dec
jecxz
sub
jnp
mov
mov
faddp
mov
divb
fmuls
inc
sti
lahf
cs
inc
pop
imul
dec
enter
cmp
into
mov
jo
lods
shlb
dec
jo
in
push
aam
mov
mov
pop
fwait
cmp
dec
inc
sbb
push
jge
es
fcoms
mov
ljmp
js
mov
cmp
push
lods
pop
out
push
mov
int3
lds
mov
add
aad
out
or
test
and
scas
cmp
push
adc
cwtl
data16
lcall
sbb
mov
mov
sbb
cli
ret
cmp
mov
daa
shll
inc
insb
mulb
xchg
cwtl
ljmp
jnp
stc
ljmp
xchg
les
stos
jle
js
mov
lock
movsl
add
adc
lcall
jecxz
add
jg
inc
sar
push
lods
outsl
pop
adc
shrb
sti
lcall
jno
lods
pop
fwait
scas
push
enter
loope
mov
fldl
outsl
mov
push
push
add
sub
cmpsl
push
cmp
pop
inc
out
mov
stos
or
push
or
clc
outsb
xchg
cltd
lcall
adc
jns
negl
jb
adc
cwtl
push
lret
bound
gs
mov
fwait
cmp
fidivl
xchg
movsb
icebp
jp
push
push
std
dec
jb
mov
insb
mov
pop
jnp
sub
lds
xlat
rcrl
or
adc
sub
lret
pop
dec
cmp
jmp
xchg
test
jl
dec
jmp
repz
clc
and
mov
jg
jbe
lods
xor
add
sub
jl
test
outsl
scas
test
stos
lea
js
fists
xchg
push
mov
sahf
gs
test
push
add
inc
popa
call
mov
enter
inc
dec
xchg
and
ret
mov
push
pop
jnp
jns
jle
mov
ret
xchg
ficoms
lcall
and
aad
shlb
fcompl
jg
out
mov
lods
adc
test
xchg
flds
test
mov
bound
testb
repnz
mov
sahf
lret
hlt
std
push
cmp
sbb
jae
fldt
fmuls
ss
cmp
jb
mov
std
les
add
insb
xchg
push
xor
call
cmc
sbb
cs
dec
sahf
sahf
sbb
or
jb
inc
inc
ds
nop
out
test
adc
enter
push
arpl
fcoms
mov
inc
aaa
mov
sbb
insb
movsl
mov
xor
imul
xchg
in
dec
jmp
xor
inc
into
arpl
add
cmp
ret
sub
aaa
out
pop
mov
jge
shl
call
inc
mov
mov
and
js
hlt
adc
gs
ljmp
es
testb
and
and
cmpsb
mov
iret
adc
mov
aad
cmp
xchg
loopne
cmp
pop
test
in
mov
xchg
mov
inc
ljmp
pop
pop
inc
add
push
or
rcl
push
aas
mul
fnstsw
xor
outsb
push
mov
add
inc
mov
push
arpl
add
jns
cmp
mov
data16
ret
add
cmp
out
stc
ret
lahf
pop
iret
aas
adc
sub
fs
in
pop
loop
out
arpl
mov
mov
add
xor
clc
push
dec
add
xor
adc
rorl
mov
push
push
pcmpeqw
lret
pop
lret
pop
pop
outsb
cmp
jecxz
lahf
mov
sbb
cmp
mov
push
icebp
movsb
repnz
sbb
lods
fimuls
ficomps
xor
orb
clc
clc
test
stos
inc
xor
arpl
xor
out
cltd
dec
in
jns
outsb
aam
movsl
pop
stc
mov
mov
adc
xor
push
pop
outsl
mov
or
popf
das
cmp
pop
stos
mov
sub
sbb
dec
fistpll
insb
dec
hlt
mov
pop
fstpl
andl
test
jecxz
push
mov
inc
repz
imul
dec
enter
ljmp
shrb
and
jnp
mov
pusha
sub
inc
cmp
jge
sub
jp
xor
push
daa
stc
out
ja
xor
sti
movsl
stc
ds
enter
fwait
rcr
test
and
jnp
fwait
mov
inc
and
outsb
test
das
ja
int
mov
cli
lods
into
dec
enter
jecxz
hlt
or
lock
inc
jp
icebp
shr
in
scas
mov
insl
push
es
xor
xchg
loope
int3
inc
pushf
dec
sbb
or
inc
dec
jecxz
cmc
shl
out
lods
inc
pop
mov
push
shrl
repz
sbbl
push
push
mov
dec
je
fsubs
fwait
xlat
cmp
test
scas
sbb
mov
jl
mov
adc
lret
clc
sahf
mov
jle
xor
int3
mov
adc
jb
mov
mov
sub
dec
jno
popf
mov
mov
mov
dec
sbb
push
test
push
enter
mov
xor
mov
rcl
hlt
xor
jb
outsb
lret
adc
jnp
fdivrl
adc
add
imul
cmpsb
pop
mov
push
add
rol
mov
sbb
fiaddl
jbe
push
out
fsubrl
and
decb
push
sbb
adc
jge
xchg
xor
int
push
call
inc
jg
xor
xchg
push
sahf
int
push
sbb
push
mov
cmc
jmp
sub
repnz
scas
xchg
imul
cmp
or
or
mov
mov
dec
mov
sbb
fmul
cmp
sarb
stos
inc
das
aaa
cmc
jno
push
fstpt
push
mov
push
das
mov
popa
sbb
iret
inc
add
mov
in
imul
mov
xchg
add
shl
out
repz
hlt
sub
fcomp
outsb
sbb
jb
shlb
out
inc
push
xchg
sub
dec
sub
jns
or
decl
sub
cs
mov
cmpsb
jnp
sub
jg
push
adc
shrb
fildll
xchg
or
pushf
jnp
sub
push
ret
xor
dec
or
adc
data16
ds
add
sbb
testb
sbb
insl
xor
cld
aas
mov
rcrl
ja
int3
or
jb
mov
sar
cli
or
fistl
lcall
dec
cmp
add
jecxz
mov
xor
pop
adc
xchg
pop
jne
inc
rcll
inc
and
rorl
inc
jbe
aaa
shl
sub
jns
sbb
ret
add
pushf
pop
jae
xchg
in
push
sbb
imul
push
popa
cwtl
mov
je
movsl
jbe
and
or
popf
jno
and
loope
cmp
push
sbb
lds
lods
push
or
insl
inc
shl
cwtl
xchg
jl
ret
ss
nop
addl
xor
inc
scas
test
xchg
sbb
dec
loopne
pop
xor
into
outsb
sub
mov
cwtl
fldt
pop
imul
or
dec
lock
push
daa
daa
and
xchg
lds
inc
dec
movsl
mov
mov
sarb
xchg
js
xchg
insb
mov
fiaddl
outsb
movsb
call
cmpsl
lcall
cld
inc
sub
add
ffree
sbb
mov
mov
negb
dec
loop
push
int3
cltd
loopne
mov
sub
loopne
lds
cmc
inc
mov
mov
lds
xor
xor
add
test
pop
push
divb
pop
jbe
sar
cli
data16
bound
dec
dec
orb
dec
lret
and
movsl
pop
in
loope
jle
xchg
addr16
cmp
out
mov
imul
hlt
xor
pop
outsb
or
sbb
imul
push
rcl
jp
sub
or
add
in
bound
jno
inc
subb
rcll
xor
xorb
jecxz
inc
adc
arpl
pop
out
sarl
cmp
mov
into
les
imull
push
dec
test
mov
lret
pop
iret
sbb
adc
add
push
idivb
leave
in
arpl
cmpsb
xchg
popf
sarb
fs
or
shll
and
push
cwtl
adc
jnp
push
xchg
or
test
leave
dec
jmp
xchg
push
ss
push
das
push
dec
jb
pop
scas
test
mov
xor
pop
jo
sbb
loope
xlat
add
cltd
ljmp
rorb
js
xchg
imul
and
mov
dec
jg
loopne
je
movb
jecxz
nop
fnstenv
cs
loop
sbb
or
addr16
pop
pop
not
ja
xchg
in
xor
lea
sbb
mov
mov
push
ret
inc
dec
push
cmpsb
lahf
mov
xor
rclb
movsl
cmpb
mov
shll
cwtl
les
rcrb
lods
fldl
ret
repnz
jge
cmp
mov
push
icebp
adc
xor
sub
fildl
aas
movsl
jae
jle
jae
or
rcll
icebp
in
push
mov
mov
mov
je
and
add
outsb
jo
scas
or
pop
mov
xor
inc
add
loopne
mov
add
fbstp
in
scas
aam
add
jae
adc
scas
dec
or
les
jp
push
into
jne
xor
int
fwait
test
enter
pop
js
pop
xor
fstp
xchg
pushf
idivl
mov
inc
sbb
dec
pop
cs
outsl
js
mov
mov
in
scas
push
mov
mov
call
sbb
mov
push
push
jnp
repz
dec
and
lds
pop
shll
dec
mov
and
mov
pop
jno
shlb
mov
lahf
mov
inc
js
cwtl
fsubrs
enter
sbb
shrl
push
test
fldcw
lods
dec
sbb
mov
push
jmp
jecxz
repz
insb
in
pop
leave
fidivs
arpl
and
inc
iret
push
popf
cli
inc
jne
pop
ja
dec
fcmove
in
xchg
mov
cmp
out
int3
sbb
cmpb
jg
scas
ficompl
imul
aas
popa
xor
pop
add
mov
mulb
rcrb
mov
enter
andl
push
pop
push
popf
cmp
mov
in
mov
mov
insb
loop
movsb
inc
outsl
sub
pop
stc
es
insb
xor
jo
adc
jp
pop
enter
aaa
add
xor
cmp
mov
loop
dec
lods
dec
mov
rcrl
inc
ret
xchg
xchg
inc
divb
xchg
fistl
clc
aad
nop
jae
push
popf
rorl
loop
fildl
jmp
mov
out
minps
out
cltd
xor
cmpsl
les
jbe
xlat
out
nop
gs
adc
mov
mov
fs
fwait
js
push
inc
mov
inc
das
sub
scas
popf
push
xchg
mov
xchg
push
pop
pop
sub
mov
mov
imul
mov
inc
js
pushf
arpl
cli
cmp
data16
cmpsb
jno
jle
dec
fldcw
fsubl
mov
lahf
sub
ljmp
out
push
dec
hlt
aad
and
repnz
std
cwtl
test
fidivrs
scas
sub
loop
cmp
imul
cmp
mov
arpl
mov
imul
inc
jbe
imul
push
dec
jl
pop
adc
cli
ret
sub
mov
shr
nop
daa
push
mov
nop
setp
push
test
and
js
mov
jne
xor
test
call
lods
cmc
in
imul
in
je
adc
in
arpl
insb
aam
and
out
sbb
lret
lods
inc
xor
fildll
mov
mov
repnz
sbb
rorb
cld
lfs
test
mov
ror
insb
outsl
and
test
test
mov
xor
push
cmp
enter
jmp
lods
cmpsl
sti
mov
shrl
and
or
push
mov
sub
dec
inc
sbb
ljmp
aaa
sbb
pop
popf
mov
stc
mov
stos
push
sti
push
clc
xchg
and
xlat
cmp
rolb
icebp
or
loopne
lahf
or
aad
leave
pop
push
shrb
sub
pop
inc
or
dec
dec
mov
sbb
push
js
add
adc
lods
ficomps
mov
imul
jg
fstpt
adc
ds
popf
pop
loopne
jmp
es
push
adc
faddp
mov
pop
es
sub
lahf
jecxz
lods
adcl
xchg
rorl
jbe
and
sub
adc
fdivr
lods
int
cmpsl
add
cltd
aaa
and
push
pop
push
lods
cmpsl
test
shl
mov
shll
pop
and
lahf
mov
add
mov
adc
jge
cli
test
xor
sub
rclb
into
std
or
cld
ljmp
pop
pop
lretw
mov
dec
add
xchg
pop
push
and
mov
mov
xor
mov
dec
push
xchg
stos
inc
and
aam
mov
test
or
mov
insl
mov
inc
out
mov
aas
and
adc
add
xor
and
test
mov
les
fs
loop
push
faddl
jecxz
mov
lret
and
sub
mov
popf
lret
sub
outsl
into
mov
fcomip
outsb
jge
mov
les
pop
icebp
mov
inc
cld
sbb
inc
insl
mov
sbb
xlat
jnp
fistpll
xor
cmp
adc
outsb
inc
lahf
add
shrb
sub
jg
push
jb
cmpsb
ljmp
mov
and
adc
inc
and
or
jg
aas
idivb
xchg
imul
or
sbb
jno
loopne
add
out
sbb
int
shll
mov
sub
add
aaa
sub
loope
loop
pop
mov
js
push
sahf
mov
sub
mov
sbb
int
shr
jns
mov
sti
jge
in
add
std
fbld
dec
inc
adc
outsb
mov
imul
xor
adc
scas
add
and
xchg
xchg
xor
fiadds
ret
push
inc
out
andb
xorb
add
out
jb
fsubs
push
pop
push
add
jmp
clc
push
cli
mov
fcmovu
fwait
sahf
into
mov
push
imul
lds
movsb
clc
das
push
push
sbb
pop
lret
add
pop
or
out
movsl
mov
jno
xchg
popa
das
dec
dec
adc
sbb
ljmp
xor
cmp
push
lods
test
cmp
fbstp
gs
push
cmp
ss
mov
mov
add
cwtl
cmp
les
insb
cmp
cmpsl
mov
push
mov
xorb
sbb
in
popf
cmp
stos
mov
xor
outsb
adc
or
sub
xchg
adc
cmp
mov
fstpt
pop
imul
push
sbb
movb
push
jo
clc
fnsave
push
xor
ja
jp
pop
adc
sub
pushf
stc
iret
pop
movsb
inc
test
inc
nopl
orl
gs
mul
hlt
rolb
bswap
cmpxchg
push
jmp
in
sbb
stos
fadd
xchg
scas
mov
mov
negb
je
xor
xlat
jb
lock
adc
out
mov
cmpsb
ret
adc
xorl
pop
xchg
and
sub
int3
nop
in
orl
icebp
inc
test
loope
pop
adc
xchg
mov
lahf
rolb
mov
xor
je
fwait
sbb
fisttpl
or
pop
mov
fildll
adc
sub
or
lds
imul
inc
imul
pop
bound
aam
mov
jmp
gs
adc
aaa
xor
dec
es
repz
outsb
jnp
call
test
in
adc
divl
mov
aam
and
push
adc
aad
call
or
cld
sub
jbe
push
mov
cltd
jbe
jne
movsl
gs
mov
nop
outsb
testb
iret
inc
fsubrl
pop
arpl
push
push
inc
out
xor
mov
add
add
in
add
sbb
stc
aaa
xor
push
in
pop
loope
adc
or
loope
fucomp
pop
dec
cmpsb
xchg
add
dec
dec
cltd
mov
in
outsb
cmpl
or
es
in
inc
stos
pop
imul
je
fstpt
jge
cmpsl
xchg
subb
fwait
arpl
fdivp
dec
or
filds
and
ljmp
out
xor
xchg
and
fldt
arpl
cmp
outsl
stos
cmp
test
aaa
xor
push
mov
or
in
push
daa
and
pop
or
mov
scas
loope
mov
inc
test
push
push
nop
aaa
bound
mov
popa
repnz
xchg
push
inc
popf
fs
shll
movsl
pop
enter
hlt
test
jl
dec
scas
inc
dec
sbb
pop
sub
adc
xor
bswap
xchg
add
test
add
aam
outsb
mov
in
sub
aas
imul
aam
push
pop
and
sub
add
mov
repz
sbb
loope
incb
and
push
or
mov
cld
push
movsl
xlat
cmpsl
outsb
repz
pop
push
ljmp
cmpsb
shl
aam
ss
in
out
xor
loop
sahf
jnp
push
and
sbb
int
aaa
scas
lods
in
jmp
test
lret
fwait
xlat
add
aaa
fistpll
adc
shlb
js
loop
sbb
dec
dec
sub
ret
adc
cmp
fwait
bound
das
inc
xchg
test
dec
mov
jns
jns
dec
mov
loopne
or
dec
jmp
cli
lods
jbe
cltd
cmpsb
jno
pop
dec
sub
or
test
mov
push
jmp
stos
shlb
cmp
and
mov
pushf
std
fwait
cmpsl
or
cmp
or
cltd
mov
push
cmp
mov
jae
in
mov
xchg
pop
test
into
mov
loop
xchg
fstpt
imul
pop
dec
xor
pushf
fidivs
pushl
jecxz
in
decl
mov
fiaddl
out
mov
cld
xchg
sbb
xchg
mov
push
inc
das
pop
shlb
sbb
adcb
dec
or
stos
pop
push
sub
dec
cs
and
mov
popf
imul
divb
lahf
shr
or
orl
and
not
arpl
xchg
popa
fimull
fcoml
iret
clc
dec
pop
nop
sub
mov
lods
stc
fisubl
push
mov
pop
dec
mov
stc
movsl
out
das
outsl
mov
jle
mov
es
mov
sysenter
mov
divb
adc
sti
rorb
stos
cmp
loope
insb
jge
lret
stos
inc
sahf
call
jmp
xlat
ja
jecxz
cwtl
movsl
movsb
push
dec
data16
aaa
jg
push
mov
or
test
sbb
inc
jo
or
fwait
push
scas
push
adc
aaa
inc
fwait
pop
inc
cmp
sbb
mov
adc
lret
mov
cmp
sbb
adc
push
jb
pop
jmp
add
aad
xchg
push
inc
cmova
dec
push
test
rcrb
test
stc
mov
mov
iret
and
xchg
popf
leave
mov
test
jle
scas
into
in
adc
and
cmp
xorb
arpl
adc
or
loope
imul
jmp
pushf
jns
std
aad
ret
jmp
sbb
and
mov
outsb
aam
mov
out
push
mov
or
aas
push
cmp
mov
or
dec
imul
adc
or
jbe
jbe
mov
cmp
mov
mov
pop
or
sbb
sarl
mov
sub
ds
rorb
mov
fdivr
mov
fstpt
pusha
divl
jbe
in
scas
xor
arpl
mov
lods
cli
pop
ja
call
dec
in
inc
mov
jnp
popf
dec
pushf
fisttpl
push
inc
lret
push
popf
in
mov
mov
push
inc
in
adc
icebp
scas
mov
xchg
lock
gs
lods
push
mov
pop
cmp
cmp
notl
repz
test
jmp
call
inc
lea
push
mov
push
sub
test
mov
clc
inc
push
push
shrl
rcrb
and
push
mov
out
xchg
sbb
jno
cmpb
adc
inc
in
mov
xchg
or
loope
push
xor
mov
pop
push
mov
sbb
dec
xor
adc
inc
and
js
and
scas
dec
cmc
jnp
dec
stc
pop
fsubrs
rclb
add
stos
out
mov
lret
push
repnz
sub
xlat
dec
jnp
cwtl
les
inc
icebp
imul
inc
out
mov
movsl
insb
loopne
daa
lret
mov
mov
repz
loopne
adcb
cmpsl
push
or
es
fimull
mov
sub
pop
faddp
xor
pushf
dec
flds
lahf
sbb
cld
and
mov
sbbb
jne
ljmp
das
pop
sbb
inc
sbb
out
outsb
pop
popf
insb
imul
sub
adc
push
dec
dec
fsts
xorb
or
imul
es
mov
add
push
jge
mov
cmp
clc
imul
sahf
inc
mov
std
ljmp
jo
sub
fsubs
jnp
pop
in
jmp
rolb
mov
lods
xchg
fcoms
lds
xchg
jno
adc
or
xor
push
ret
push
or
xchg
insb
adc
and
pop
pop
xchg
clc
mov
sahf
popa
adc
daa
cwtl
sub
adc
stc
jne
adc
xchg
shrl
gs
add
nop
xor
xchg
addr16
imul
add
cmp
aas
loop
sub
push
dec
cmp
inc
dec
loop
pop
dec
pop
lcall
shrb
pop
cwtl
das
or
test
insb
sub
daa
fsts
out
ficomps
inc
push
adc
cmp
cmp
shll
push
jecxz
mov
push
iret
add
jge
aam
sbb
lock
xchg
xor
mov
push
clc
add
lahf
sbb
push
je
mov
push
enter
test
jp
pusha
rep
lds
jns
jb
out
pop
arpl
jo
std
aas
xor
mov
inc
jmp
popf
fs
fwait
mov
sub
mov
adc
into
adc
repz
sbb
pslld
sbb
xor
cwtl
fs
jno
mov
repz
and
lret
pop
test
and
mov
pop
cmp
out
stos
inc
mov
mov
inc
loopne
test
in
xchg
jnp
jp
inc
cmpsb
xchg
adc
xchg
or
outsb
push
add
out
xor
sahf
jne,pt
fildll
in
dec
aad
xor
rolb
mov
or
xbegin
cmp
imul
sar
adc
sarb
xchg
aam
js
lds
stos
fldcw
jnp
aam
jae
lret
push
outsl
mov
out
push
push
xor
inc
out
jb
inc
xor
jo
lret
int
movsb
insb
xor
push
and
and
and
pop
iret
int
lds
sbb
push
mov
mov
sub
movsb
inc
je
and
test
aas
fidivrl
test
sbb
divl
test
cs
hlt
xor
lea
in
dec
xchg
jno
adc
jns
mov
mov
mov
flds
sub
cmpl
mov
andl
add
adc
shll
xchg
pop
cltd
das
divps
push
mov
or
inc
xchg
mov
xor
imul
adc
inc
jmp
pop
and
je
rcl
loop
int3
jns
mov
scas
stos
jo
loopne
hlt
mov
lahf
mov
mov
mov
cmp
sbb
sub
xchg
add
pop
in
jmp
push
push
dec
and
and
adcl
jo
cmc
dec
pusha
je
aam
daa
pop
pop
push
xor
movl
loopne
cmpsl
mov
ljmp
push
sarb
or
loope
and
mov
push
sbb
xchg
push
pop
aam
dec
cmp
fcompl
sbbb
stos
xchg
arpl
mov
iret
dec
leave
cmp
jl
icebp
sbb
and
mov
pop
popa
fwait
sub
pop
loopne
push
or
jmp
mov
mov
out
sbb
imul
insl
sbb
lock
inc
sub
ja
ja
ficomps
mov
fs
pop
pushf
ret
cld
or
ss
mov
rolb
cld
test
xchg
repz
xor
out
das
ljmp
imul
dec
into
out
xlat
fs
push
jns
aad
xor
outsb
sti
aad
ret
loope
jecxz
mov
outsb
xchg
xor
mov
scas
sbb
movsb
push
xor
jmp
sbb
shll
repnz
sti
inc
jg
add
cmp
loopne
jg
mov
popa
jnp
dec
orl
mov
sbb
movsb
mov
test
arpl
mov
es
dec
rolb
mov
out
in
fcomps
pop
dec
push
mull
sbb
inc
insb
or
aaa
push
xchg
adc
mov
inc
jb
xchg
adc
movsl
iret
ds
pop
ss
lret
and
pop
inc
cmc
scas
add
adc
cmp
sbb
sub
or
shll
xor
xor
cmp
les
lea
mov
ret
dec
or
rclb
dec
repz
cmp
lods
scas
and
inc
xchg
xchg
clc
sub
in
jno
jns
jg
leave
xchg
mov
in
xchg
inc
cmp
lcall
cmp
pop
xor
mov
and
cmp
xor
cld
mov
sub
push
dec
sarl
outsb
dec
jle
adc
test
sub
mov
dec
mov
adc
and
sbb
inc
pusha
push
mov
inc
xorl
icebp
shll
pop
popa
lret
aad
push
mov
sbb
push
mov
or
bound
into
xchg
and
cwtl
out
enter
cld
movsb
mov
inc
dec
mov
jbe
dec
scas
rclb
mov
test
call
leave
pop
inc
hlt
mov
lods
andl
cmp
push
mov
int3
pusha
add
loopne
stos
fisubs
leave
add
xchg
pop
movl
mov
rcrb
bound
mov
test
sarb
push
das
addb
hlt
mov
movsl
imul
jg
repz
jb
movl
addr16
sub
out
sbb
js
mov
inc
icebp
or
and
xor
fdivl
lock
sbb
and
lods
xchg
jo
lods
insb
imul
bound
stc
inc
mov
push
shlb
sti
xchg
add
scas
lea
repnz
add
loope
aas
outsb
mov
add
decb
jle
dec
sbb
lds
mov
add
cmpsb
fiaddl
pop
push
mov
into
xchg
mov
dec
js
cltd
je
enter
int
cmc
mov
lret
mov
sbb
fwait
cmc
xchg
push
mov
aad
mov
xor
push
jne
xchg
cld
and
lods
fwait
pop
or
cmpsl
pop
and
mov
adc
insb
les
stos
push
jg
or
and
lea
adc
scas
out
xchg
or
sub
inc
mov
sahf
jecxz
sbb
mov
jg
mov
push
jge
xchg
stc
lods
xchg
idivl
add
ficomps
scas
shrl
or
xchg
cmp
fistpll
inc
xchg
lcall
jp
jns
jae
adc
mov
adc
lods
into
cld
lock
lods
cmp
adc
lock
cmpsl
shlb
loope
adc
mov
adc
aad
adc
add
incb
ja
test
adc
dec
imul
add
sbb
hlt
jb
loop
mov
xchg
repz
xlat
sub
dec
and
insl
mov
pop
inc
cmp
aam
cmpsl
sub
mov
sbb
inc
lock
push
pop
lods
jecxz
add
cwtl
imul
mov
jbe
add
cmp
adcl
mov
push
mov
in
int
idivl
jae
inc
add
cmp
fwait
jl
and
pop
add
jo
xlat
dec
rcll
shll
jecxz
in
ret
mov
sub
fnstcw
das
inc
xchg
push
in
in
mov
movsl
xor
and
mov
sahf
lcall
mov
das
mov
test
xchg
aaa
or
fmulp
inc
pop
pusha
push
stos
outsl
add
inc
sbb
cli
stos
stc
and
adc
clc
fs
rcll
aad
shll
lret
movsb
cmp
test
out
in
cltd
icebp
mov
adc
sbb
xchg
frstor
push
push
int
in
mov
rcl
sbb
insb
xchg
xor
xchg
sbb
xor
movsb
or
into
xchg
lods
les
pop
fldcw
pop
mov
xor
mov
sub
jbe
out
shrb
mov
dec
pop
xchg
fstl
inc
push
jbe
fstpl
out
adc
arpl
push
jecxz
int3
jge
and
repz
lods
mov
dec
mov
sahf
in
mov
cmp
in
cld
mov
fcoms
cmp
cmp
dec
sbb
add
into
push
mov
jecxz
data16
or
xchg
jo
lcall
out
ljmp
pop
pushf
jge
xor
fsubs
pop
cmp
ror
mov
mov
ds
and
push
sub
aad
push
lret
mov
in
and
push
pop
test
andl
cmc
dec
mov
sbb
dec
jne
in
pop
in
enter
lock
icebp
mov
jg
es
sub
js
ljmp
loope
jne
test
out
pop
cmp
xor
xchg
dec
xchg
sahf
out
mov
aas
fs
jne
add
sbb
fsubrl
repnz
iret
enter
push
dec
mov
mov
cmp
cltd
ss
xchg
push
cmpsb
enter
cwtl
sar
inc
sbb
incl
pop
stos
jb
outsl
sarl
sbb
jle
dec
cmp
pushl
push
xor
pop
mov
and
cmp
or
mov
xchg
arpl
in
jo
and
inc
rorl
ja
pop
push
push
mov
xchg
pusha
ret
sbbl
aas
test
cs
push
ss
ss
int
aam
in
das
mov
call
jp
movsb
jp
add
pop
stos
pop
outsb
xchg
mov
mov
jmp
std
sub
ljmp
scas
mov
and
es
fwait
sahf
pop
aaa
mov
sub
fs
or
mov
xor
fcomps
push
mov
dec
push
cmc
out
add
rcr
jg
ret
ret
cmp
pop
lds
shrb
push
aaa
cmp
pop
pop
es
adc
dec
das
dec
stc
lock
punpcklwd
sbb
add
jno
cmp
or
push
pop
xor
push
jb
stc
mov
push
lret
mov
out
push
pop
bound
jp
lret
sarl
repz
jnp
add
fisttpll
scas
jecxz
arpl
xor
insl
pslld
lock
ss
repnz
shrb
jb
mov
movsb
outsb
mov
xor
xchg
cmp
jbe
scas
iret
fisubs
pop
adc
scas
sub
lahf
rclb
outsb
call
add
cmp
xor
outsl
mov
xchg
std
sub
sarb
movsb
cltd
fs
mov
dec
pushf
mov
mov
out
push
sbbl
sbb
arpl
mov
pusha
mov
lods
jmp
add
dec
add
hlt
mov
xchg
adc
jnp
mov
adc
pusha
jg
push
lcall
mov
and
outsb
push
ret
out
mov
pop
idivb
push
xorb
subl
ret
cmpsb
pop
dec
jecxz
sti
xor
lods
aad
daa
int
dec
loop
scas
mov
loope
loop
add
dec
add
xor
add
into
out
test
out
mov
cmp
jo
sub
aad
pop
ret
mov
or
cltd
pusha
xchg
mov
outsb
mov
mov
adc
fwait
ret
push
icebp
aas
inc
or
outsb
and
adc
rcll
mov
dec
pavgw
inc
stc
insl
cwtl
or
in
nop
repz
scas
sub
sahf
lret
subb
cwtl
xor
mov
fbld
xchg
sahf
lret
push
mov
test
cli
lret
xchg
mov
or
inc
inc
icebp
lock
cmp
loop
lods
sti
push
jl
push
scas
sbb
and
push
imul
sbb
inc
dec
xor
adc
jmp
icebp
sahf
mov
sub
jnp
mov
push
xor
in
xchg
jb
ret
xlat
ja
mov
jmp
daa
cs
push
jmp
das
jns
jo
pop
jno
cmp
xor
xor
push
mov
lea
and
jl
jae
push
stos
bound
jo
rcrl
popf
jg
rcrb
adc
add
sbb
sbbl
dec
pop
out
sbb
pop
or
aas
sub
mov
jo
std
dec
push
xor
push
lahf
push
push
cli
mov
cmpb
loope
add
in
and
stc
xlat
adcb
jbe
jns
or
jge
mov
inc
adc
rolb
add
xor
test
jecxz
lret
and
dec
sahf
pop
iret
out
and
push
repz
jp
and
mov
xchg
cmp
das
xlat
sar
xor
cs
test
lret
sub
fs
inc
mov
test
mov
loope
call
mov
and
sub
pop
or
jg
jl
xor
mov
mov
cwtl
mov
test
jmp
mov
jne
cld
jp
mov
pop
mov
cmpsl
sub
inc
in
or
data16
push
push
scas
imul
add
push
xchg
sbb
cs
sub
mov
dec
mov
mov
js
ret
fsub
popf
pop
pop
adc
adc
inc
test
imul
cmpsb
insl
sbb
pop
outsb
orb
call
repz
dec
andl
mov
sub
std
les
lahf
xor
sbb
mov
and
inc
jnp
mov
aas
sub
and
push
ret
sub
mov
cli
add
xor
inc
mov
sub
and
push
cmp
ret
cmp
jmp
sub
sub
push
lahf
std
sbb
add
mov
ret
add
pop
daa
inc
cmpl
sub
jo
dec
scas
scas
push
lret
cmp
xchg
mov
fst
inc
call
sub
addr16
xor
pusha
jle
fcompl
pushl
and
mov
push
into
aad
push
adc
pop
pushf
xor
mov
mov
cmpsb
pop
lret
dec
jmp
inc
das
sub
stos
inc
sbb
inc
sbb
mov
and
mov
stc
xchg
insb
mov
xor
addr16
fldenv
fisubrs
repnz
loopne
lods
js
and
add
ljmp
fistpll
scas
xchg
fmuls
cmp
icebp
adc
clc
and
lods
mov
push
pop
data16
hlt
push
mov
and
sti
xor
jge
mov
lahf
and
inc
xlat
in
sbb
xchg
fstps
add
xchg
lcall
pop
add
push
adc
pop
and
xor
and
pop
pop
sbb
outsl
mov
jno
or
jge
into
cmpb
sbb
inc
test
stc
and
daa
aam
mov
adc
inc
outsb
add
iret
adc
shr
push
leave
mov
inc
out
xchg
lds
cmpsl
repz
adc
pop
or
loop
shrb
mov
imul
leave
pop
and
push
dec
dec
ret
lret
mov
fadds
test
inc
test
dec
jbe
sbb
lahf
cmc
std
popa
popa
frstor
js
push
mov
stos
pop
sbb
stc
cli
inc
cs
addl
pop
and
negl
stc
or
fs
cs
cmp
pop
mov
cmp
insl
loop
repz
mov
pop
in
xorb
negb
lock
mov
test
repz
lock
xor
lock
xor
jae
push
cmpsb
sbb
add
add
lret
push
xchg
push
aaa
or
arpl
sbb
mov
repz
dec
mov
icebp
mov
adc
mov
push
stc
rorb
insl
jmp
adc
push
repnz
mov
xor
fcompl
inc
or
rclb
ds
pop
ja
mov
fmulp
ljmp
mov
gs
sbb
mov
push
jle
sbb
jmp
jg
dec
sbb
out
in
out
sbb
pusha
add
shr
mov
es
outsl
push
sub
aas
cmp
pop
cmpsb
ds
push
xchg
mov
imul
and
clc
cmp
sahf
cmp
out
rcr
mov
shl
xchg
outsb
adc
in
das
inc
sahf
xchg
fcomp
leave
fldt
in
lock
loop
push
sub
test
clc
dec
out
cltd
mov
jge
mov
push
movsl
adc
outsb
pop
inc
pop
iret
out
aas
lods
mov
dec
cmp
fdivrs
test
cwtl
gs
nop
mov
fisttps
and
cwtl
inc
out
out
shlb
jmp
cmp
pop
push
lret
add
shrb
xor
xor
and
mov
jmp
stc
int
sbb
cltd
pushf
out
aas
nop
or
cmp
and
cmp
sar
xchg
stc
ret
icebp
lcall
xchg
pop
mov
jns
cmp
dec
aaa
inc
and
ja
pop
sbb
mov
sbbl
cmpb
adc
push
jbe
xor
pop
push
vmovupd
roll
in
scas
pop
movsb
dec
adc
cmpsb
imul
or
adc
push
cmpsl
fadd
out
dec
or
imul
mov
adc
mov
jp
outsb
mov
push
xlat
pop
mov
add
xlat
call
rorb
jne
mov
mov
jle
leave
lcall
lods
ljmp
outsl
sahf
pop
ljmp
loopne
ss
out
pop
mov
sbb
lods
aad
sbb
in
pop
jns
mov
push
lret
jge
cs
lret
dec
mov
lods
pop
xor
add
push
imul
dec
inc
in
jmp
iret
lcall
inc
daa
push
cmp
pop
ror
cld
pop
adc
pusha
ret
lahf
jns
pop
mov
mov
nop
loopne
test
flds
xchg
adc
aad
mov
cmp
out
push
mov
aad
fidivrs
into
and
or
mov
mov
call
pop
lock
push
out
inc
add
mov
dec
mov
xor
jns
stos
and
push
popf
aas
dec
inc
mov
xchg
jbe
xchg
cmp
aad
push
rcll
inc
dec
and
adc
lret
sub
das
fidivrs
ret
jle
or
shlb
jb
mov
dec
mov
cmp
pop
sbb
out
out
dec
insb
cmp
cmp
sub
out
add
mov
fildl
sub
fwait
sbb
les
push
repnz
dec
inc
pop
mov
mov
sbb
mov
inc
hlt
pop
cmpsb
popf
cmc
xchg
notl
jge
or
add
mov
fldcw
aad
pop
ret
roll
jne
push
jnp
mov
lods
jge
pop
adc
inc
cmpsb
push
push
lods
mov
imul
es
flds
mov
shlb
sub
stos
inc
cltd
ljmp
add
cmp
lea
cmp
mov
movsl
xchg
pop
movl
mov
push
cmc
pop
leavew
mov
lock
cmpsl
adc
and
scas
mov
xor
mov
rol
mov
jge
ret
jns
insl
push
jae
test
out
mov
fs
clc
jo
fildll
mov
in
jge
in
fiadds
fs
jno
add
push
icebp
stos
ss
je
cltd
popf
fcomps
sbb
insl
push
fwait
sub
mov
sbb
outsb
or
arpl
hlt
test
cmpsl
bound
cmp
pop
ja
ljmp
fwait
sbb
dec
rcll
enter
out
mov
push
aaa
into
pop
cmc
mov
sbb
inc
call
push
rcrl
push
add
jge
pusha
lods
int3
in
dec
test
je
mov
out
mov
jns
xor
mov
je
fiadds
jne
add
fidivs
fbld
and
cld
pop
int
sub
add
sarl
cwtl
jmp
aad
out
cmp
fsubl
movsb
std
and
imul
movsb
mov
in
jg
mov
mov
dec
xchg
call
and
sub
sub
dec
loop
daa
stc
push
mov
imul
xlat
sbb
lret
jg
pop
dec
movsl
ss
clc
sub
mov
fiaddl
push
pop
int3
mov
sahf
lea
jbe
test
cld
jg
sub
xlat
sub
adc
push
and
mov
lock
outsl
out
out
fs
mov
fisubs
lods
sub
lods
xchg
addb
rcrb
pop
rcll
lock
pop
cmp
insl
rorb
pushl
out
cmp
xor
in
mov
mov
out
add
frstor
and
js
fstps
sub
xor
cmp
ds
cmp
xchg
cld
mov
jo
rcr
lods
add
test
mov
pop
or
fimull
cmpsb
add
adc
aad
pop
push
push
xchg
in
push
mov
sbb
xchg
bndldx
dec
mov
add
cmp
shll
mov
dec
rolb
push
inc
pop
inc
jb
mov
add
push
add
scas
nop
test
outsl
adc
mov
es
dec
xchg
lret
add
in
jecxz
push
test
pop
adc
fxch
dec
sbb
sbbl
loop
dec
je
dec
xorl
xlat
cld
cs
sbb
jg
push
inc
sbb
sbb
or
fdivrl
pop
jbe
jmp
sub
rcr
fstp
imul
jo
xor
push
jp
xchg
cmp
cmp
push
cmpsb
cmp
sbb
push
jg
mov
dec
inc
or
int3
pop
mov
push
push
or
cs
dec
dec
mov
adc
popf
push
fs
xor
xor
sub
mov
int3
mov
daa
sub
and
add
lock
xchg
fcomps
sbb
movsb
fldl
xor
lods
sahf
cltd
cltd
mov
add
add
stc
push
xchg
daa
cmp
frstor
jbe
jl
push
test
je
push
stc
and
sbb
xor
fimuls
xlat
pop
fisubrl
cmpsb
aam
lock
shl
out
xchg
or
or
rcrl
adc
pop
loopne
jbe
jg
outsb
jl
xchg
inc
adc
cltd
mov
outsb
test
lds
shlb
jecxz
inc
out
stos
cmp
loop
jb
hlt
and
andb
pop
jle
lock
stc
mov
stc
inc
xchg
mov
movsb
in
idivl
sbbb
cmp
pop
lds
cmpsl
addr16
inc
pop
jl
inc
dec
imul
loop
std
test
cmp
out
cmp
movsb
stc
cmp
mov
dec
inc
cmp
mov
rorb
icebp
gs
gs
or
mov
fildl
aam
jecxz
test
cmpl
mov
push
add
arpl
fcoml
mov
adc
push
outsl
mov
mov
das
xchg
pop
mov
mov
frstor
mov
pop
insl
mov
ret
stos
cmc
out
dec
adc
lock
fimull
mov
lret
sbb
dec
out
std
cli
inc
jp
dec
jne
jmp
bound
fcoms
cmpsb
mov
fwait
inc
nop
ljmp
mov
lret
jp
mov
push
mov
popf
fsubrs
cmp
notl
cli
sbb
ja
push
sbb
fdivrs
shl
and
mov
pop
dec
jle
div
pop
jg
fucom
lret
jne
popa
mov
and
mov
aam
mov
adc
fnstenv
adc
inc
xor
jno
cwtl
imul
jle
mov
lds
mov
addr16
loop
out
cmp
mov
jp
lcall
push
pop
adcl
insb
xchg
push
ljmp
sub
pop
lret
cmpsb
jg
fcomi
push
push
xchg
not
cmpb
mov
leave
xlat
in
jae
mov
xor
jp
push
add
mov
out
arpl
sub
add
mov
fdivp
stos
sub
fsubrl
jl
fmull
mov
aam
push
sbb
push
add
jmp
xor
repnz
push
push
call
xchg
lcall
cmp
jmp
outsb
adc
lahf
in
dec
jl
push
lcall
and
adc
add
sbb
ljmp
push
mov
add
or
mov
int
outsb
imul
add
jo
mov
das
pushf
and
repnz
outsb
pop
jg
xor
pop
or
jbe
and
adc
cmp
or
inc
mov
aaa
roll
sbb
ret
mov
inc
fwait
sbb
lahf
in
cmp
insb
insl
jle
jecxz
cmp
jb
into
adc
mov
mov
aas
bnd
cmp
lret
daa
pop
cmc
xchg
lret
test
sarl
fwait
xor
jae
leave
ds
jne
cmp
mov
push
ror
push
mov
add
mov
sti
jno
lret
mov
or
bnd
rcrb
mov
cmp
mov
out
jmp
xchg
inc
testl
stc
popf
push
sub
fdivrp
lea
ret
inc
mov
jle
jnp
dec
shl
adc
cmpsl
or
jg
jmp
dec
stos
add
lret
into
xchg
add
addr16
jge
sahf
mull
mov
xlat
mov
shl
in
adc
data16
loop
cmp
mov
mov
mov
jmp
dec
cmpsb
test
or
push
mov
in
lcall
rcrl
cli
shlb
sub
rorl
iret
jae
pop
cmpsb
js
mov
repnz
dec
aam
xchg
jmp
sbb
nop
popa
dec
les
push
test
jae
std
fistl
hlt
cli
jmp
lret
ficoms
ljmp
imul
les
daa
outsb
arpl
and
xchg
scas
mov
mov
add
pop
lret
sbb
icebp
mov
repz
push
jo
xchg
mov
sub
or
or
stc
notl
into
std
mov
cmp
lret
jne
adc
fisubl
adc
jns
std
arpl
push
add
stos
mov
push
aad
dec
lock
je
enter
call
ss
mov
pop
mov
push
ja
xor
in
mov
rorl
push
mov
ljmp
repz
stc
cmpsl
sub
jge
shr
mov
ljmp
cmc
outsb
pop
enter
ret
insl
mov
iret
add
sbb
call
mov
cmp
adc
ja
dec
adc
jbe
mov
cmp
insl
ljmp
rolb
pop
jmp
inc
push
sbb
jmp
adc
xor
call
add
addb
mov
mov
push
test
out
pop
addr16
call
cmpsw
or
test
test
or
cmp
scas
or
cltd
push
mov
inc
or
mov
pushf
mov
lods
jno
in
fldenv
cmpsb
cwtl
mov
bound
call
pusha
ret
sub
mov
push
mov
pushf
pop
std
adc
dec
pop
idiv
mov
and
pop
adc
mov
cmp
fbld
xor
push
sbb
xor
gs
mov
mov
mov
dec
or
fs
ljmp
aam
clc
jmp
movsl
or
daa
gs
test
sbb
movsl
and
or
mov
scas
sbb
mov
xor
jo
inc
cs
movsb
xor
mov
aas
cs
movsb
insl
cld
test
adc
pop
adc
inc
xchg
xor
push
pusha
and
cmp
in
and
out
mov
mov
dec
cmp
outsl
pushf
test
xor
add
imul
sahf
and
mov
icebp
mov
dec
je
cmp
out
test
les
xchg
rcr
bound
arpl
mov
lcall
jle
sub
mov
xchg
mov
xchg
enter
loopne
out
inc
jmp
adc
jns
aad
in
les
jnp
and
dec
or
add
mov
aam
mov
ret
mov
test
ljmp
rclb
sarb
push
ss
or
sub
or
mov
sub
sbbl
pop
pop
or
push
rclb
cmc
mov
movsl
fyl2x
ja
lds
cmpsl
test
fsubrp
icebp
std
pop
or
hlt
ss
in
lcall
mov
and
and
jae
test
dec
ret
fsubrs
jp
das
insl
xchg
push
add
jb
aad
jne
in
sbb
popf
lock
fisttps
xchg
nop
inc
push
ja
xor
subl
lock
loop
sbb
insb
push
aas
inc
ds
mov
in
push
js
pop
std
mov
and
arpl
xor
jmp
shll
adc
push
pop
dec
cmp
ret
push
mov
ret
push
lods
inc
loope
fwait
lea
add
arpl
lods
xchg
int3
push
in
and
or
out
or
push
jle
stos
inc
mov
push
mov
pop
pop
and
std
dec
cs
aam
shlb
movl
pop
subb
mov
jg
xor
js
stos
xchg
jle
xchg
mov
int3
jns
dec
movsl
hlt
or
mov
mov
push
lock
mulb
cmpsb
icebp
pop
lods
in
incb
sbb
addb
xlat
movsb
lock
inc
adc
fisubrl
fwait
xchg
ljmp
movsl
shll
pusha
ja
push
mov
js
outsl
pop
js
pop
test
sub
fdivrp
addr16
bound
push
sbb
mov
xchg
repz
pop
jp
adc
dec
fwait
std
faddl
cmpsl
inc
repz
xchg
in
inc
adc
daa
out
mov
loope
add
push
lods
push
cmp
inc
dec
gs
inc
add
inc
fcoml
mov
lock
int
pusha
pop
inc
inc
dec
lds
fs
pop
pop
push
push
es
ret
ja
fmul
loop
dec
jae
pop
or
popa
fwait
ret
cmp
jl
adc
push
loopne
mov
push
push
sbb
imul
fsts
jne
jns
add
aaa
cli
shl
jbe
or
dec
sbb
cmp
mov
aam
or
mov
mov
gs
mov
or
ljmp
xchg
adc
mov
movsb
inc
xchg
xor
clc
mov
jg
loop
mov
xor
xchg
testb
sahf
and
xor
add
xchg
cmc
out
pop
in
gs
mov
pop
push
lods
cmp
das
stc
aas
lods
sti
dec
mov
adcb
lret
std
adc
or
or
pop
js
cmp
sbb
xchg
cmp
decb
mov
cmp
mov
mov
mov
insb
ds
sbb
aad
sarl
jnp
rorb
jo
cwtl
inc
mov
data16
popf
lock
mov
xchg
cmc
and
cld
jo
adcb
cld
ficoms
adc
pop
jp
clc
decb
jo
or
push
sbb
or
pop
daa
icebp
das
push
insl
cmp
jae
movsl
cmpl
pushf
in
mov
pop
adc
fs
aam
mov
loop
mov
mov
sub
xchg
push
movsb
dec
inc
and
cs
das
cmpsl
icebp
stos
jp
aad
inc
add
sub
or
or
cmp
test
popa
add
les
or
cwtd
jbe
sbb
push
fwait
out
pop
sti
movsl
dec
or
adc
mov
mov
rol
cmpsb
push
pop
sahf
out
mov
adcl
mov
cmp
push
add
inc
mov
cmp
shl
sub
shlb
and
inc
push
loopne
gs
adc
mov
pop
push
jp
loopne
shr
mov
mov
pushf
xlat
cmp
pop
pop
mov
mov
cmp
jae
dec
inc
add
int
movsl
push
push
push
and
loope
out
and
sbb
sbb
sub
movsl
cmpsl
imul
push
push
push
mov
sub
arpl
jae
xor
inc
mov
sti
scas
dec
lret
mov
pop
shlb
dec
ret
sbb
add
mov
in
pop
in
loop
pusha
xor
cs
mov
lds
lds
aad
push
fldl
jle
idivb
outsl
mov
lret
int
outsl
pop
push
rolb
stc
movhps
es
xor
leave
je
jge
cmp
pop
mov
and
mov
push
aas
jecxz
enter
loopne
addr16
add
sub
fldl
pusha
in
dec
fidivs
ss
sar
sub
mov
inc
cmp
repz
ljmp
jl
lcall
aam
push
cmp
pushf
jg
pop
push
jne
sbb
push
add
dec
ret
das
ss
shrl
jp
popa
call
mov
dec
sarl
into
pop
cmp
sub
ret
xor
mov
scas
or
pop
push
iret
add
out
stos
jg
lahf
bound
pop
hlt
xchg
mov
and
or
sbb
mov
shll
cli
xor
mov
cmp
inc
stc
jp
mov
loop
add
pop
mov
add
je
push
mov
push
pop
adc
mov
bound
xchg
sub
cmp
aas
inc
mov
inc
cmp
mov
rcrb
stc
imul
sub
push
sub
or
sub
mov
mov
movsl
sbb
jbe
mov
fistps
fisttpl
ja
pop
fisttpll
cmpsb
adc
repz
insl
notl
or
les
fucomip
les
daa
mov
jnp
sbb
or
mov
scas
dec
cmp
in
push
jnp
aas
out
in
and
jbe,pn
mov
push
psubusb
scas
mov
ljmp
fldl
mov
aas
leave
in
aas
aam
mov
cmp
aas
xor
lret
pop
fstpl
or
cmp
jle
repnz
test
icebp
mov
popa
fiadds
jae
test
push
xor
jge
mov
adc
push
cmp
pop
push
jno
ret
leave
cwtl
pop
jle
icebp
fimuls
mov
inc
mov
roll
test
mov
arpl
dec
pop
mov
mov
jp
repnz
xchg
testl
hlt
jg
jno
testl
push
jns
add
loope
repz
test
pop
loopne
add
int3
hlt
xchg
sub
fidivs
xor
lock
das
adc
mov
push
es
push
in
cmpb
xor
stos
lods
push
pop
mov
jg
push
jp
push
cld
mov
xchg
iret
adcb
inc
or
popf
dec
rcll
scas
jmp
movsl
xor
jns
cmc
mov
push
mov
cli
pushf
jns
xorb
xchg
enter
jmp
out
add
and
cmp
aas
or
sar
xlat
jno
pop
bswap
jmp
xor
xchg
das
orb
jbe
inc
leave
cmp
movsb
pushf
divl
add
xchg
or
ret
cltd
xor
cmpsl
pop
arpl
xor
loope
adc
push
cltd
dec
into
fcomps
add
or
sti
cmp
in
lcall
jecxz
test
dec
faddl
dec
lock
adc
cmp
add
dec
add
xorl
rcrl
jp
jae
push
xor
adc
adc
mov
and
gs
xor
imul
mov
leave
data16
insb
adc
js
cmp
loope
sub
xor
lret
or
fidivs
cltd
and
stos
add
xchg
jae
cld
mov
pushf
fcompl
and
aad
fwait
adc
push
repnz
or
fmul
inc
mov
lcall
mov
imul
loopne
insl
les
cmp
out
test
jb
out
sub
jnp
add
hlt
sub
loopne
out
xchg
std
push
xchg
sub
insl
cmp
xchg
inc
jp
test
jmp
imul
insb
in
nop
cmp
cmc
sub
sbb
pop
push
fisubl
fldenv
js
repz
loopne
mov
ret
cs
jge
inc
sub
stos
xchg
xor
stos
shrb
ss
outsb
pop
dec
lret
add
push
std
enter
js
pop
inc
sbbb
push
inc
jmp
xor
dec
mov
mov
mov
mov
adcb
pop
mov
cwtl
mov
test
push
push
jle
cmp
push
xchg
push
data16
lods
lea
int3
adc
jl
stos
sub
movsl
mov
flds
imul
xchg
frstor
or
xor
mov
or
lock
xchg
jmp
mov
sub
in
and
inc
pushf
das
cmp
imul
pop
loopne
leave
stos
xchg
sbbl
xchg
ss
pop
mov
jno
fstl
adc
xchg
ss
std
jl
lds
xchg
test
jne
jge
sbb
or
lahf
mov
pop
cmp
lods
lahf
ret
fmull
jbe
lret
sbb
mov
fnstenv
cwtl
repz
cli
movswl
push
cli
and
fistps
leave
inc
mov
xchg
sub
xchg
xchg
out
leave
pop
cmc
push
fsts
cmpsl
frstor
cltd
rorb
mov
dec
loopne
movsl
jecxz
cmp
dec
shrb
dec
dec
ljmp
sub
adc
call
sub
and
data16
xorl
or
add
pop
ds
cmp
leave
push
mov
add
adc
adc
xchg
movsl
mov
dec
roll
loopne
in
mov
adc
mov
in
mov
mov
mov
push
xchg
stos
add
xor
je
lahf
pop
icebp
push
cmp
xor
mov
mov
movsl
adc
mov
call
and
leavew
orb
cmpsl
int
std
push
cmc
push
cmp
dec
mov
mov
mov
ljmp
aas
leave
xor
add
loop,pn
inc
in
adc
push
leave
jae
cmp
mov
adc
cmp
cmpsl
cmc
inc
pop
lds
popf
sbb
xor
shlb
pop
movsb
sahf
pop
xchg
sbb
pop
sub
subl
decb
sub
rorb
jns
dec
ret
sbb
loope
addl
xchg
add
das
aas
mov
push
or
les
mov
jmp
or
and
shl
pusha
jmp
cmp
push
mov
mov
add
push
mov
test
ja
add
scas
fcmovb
iret
sbb
xor
push
or
bound
xor
repz
fildl
add
pop
mov
xor
rol
or
sbb
stos
imul
adc
lods
in
push
ret
mov
in
cmc
mov
into
mov
xor
scas
cmp
mov
aam
xor
pop
pop
dec
dec
mov
lock
idivl
pop
push
out
adc
pop
scas
cli
ds
cmp
and
data16
jb
es
mov
sbb
push
out
insl
outsb
inc
pop
sub
in
xchg
test
clc
xor
mov
fs
mov
sbbb
scas
insl
xlat
pushw
or
xor
shll
mov
or
jmp
add
jnp
call
jge
and
sub
stos
push
les
out
cmp
adc
push
push
sub
cmp
jne
inc
cmp
js
mov
enter
jno
adc
pop
scas
cmovo
into
xlat
inc
gs
dec
in
mov
test
loope
mov
lods
rolb
loop
outsl
nop
xor
into
jl
pop
lods
sti
adc
imul
push
inc
lds
sbb
outsl
leave
outsb
fimuls
js
inc
shrb
jl
sbb
inc
into
sub
add
push
dec
mov
subl
pusha
xlat
mov
ljmp
loope
mov
cli
cmp
pop
pop
xchg
inc
bound
cltd
sub
adc
dec
repz
repnz
cmp
lds
lods
ss
mov
pop
inc
test
mov
sub
xchg
sub
mov
mov
sub
mov
jbe
pop
lcall
gs
test
dec
cmp
repnz
fisttpl
sub
push
lock
pusha
aas
shl
jl
fistl
mov
push
ret
daa
jl
pop
cmp
fnsetpm(287
pop
daa
scas
adc
mov
mov
sbb
push
and
loope
adc
or
aaa
mov
jbe
and
sub
jae
popa
mov
xor
xchg
jno
movsl
in
jns
push
outsl
dec
mov
sbb
xor
repnz
pop
cmovl
add
aad
hlt
stos
cmpsb
test
adc
pop
jbe
aad
mov
jne
mov
pusha
xchg
shlb
xlat
mov
dec
cs
call
daa
adc
popa
insl
lahf
ja
jb
mov
pop
shll
jns
cli
jmp
mov
les
xor
or
sahf
movsb
imul
xor
push
in
lahf
mov
push
aas
jne
leave
call
push
pop
aas
aam
dec
cmpb
lcall
mov
addr16
movsl
xchg
pop
cmp
incl
xchg
dec
pop
fmull
mov
and
pop
fwait
adc
iret
cmpsb
mov
enter
mov
shl
jns
lods
in
dec
rorl
shll
ret
mov
leave
xor
push
aad
push
mov
mov
cmpsl
sbb
jmp
mov
and
into
push
addr16
inc
js
and
inc
decl
sub
mov
sub
push
movsl
jmp
adc
adc
inc
gs
xchg
add
insl
and
mov
sbb
pop
jnp
stc
xchg
aaa
adc
mov
xor
jae
add
mov
mov
push
xor
mov
fistps
and
push
fistpll
mov
cmp
sub
and
or
pop
imul
inc
insb
adc
and
cltd
movsb
jl
push
sbb
aaa
jecxz
push
insb
cwtd
ficompl
mov
add
mov
dec
jge
sub
pop
push
mov
mov
lret
rolb
adc
or
push
adc
test
aam
mov
dec
jb
push
pop
lea
pop
and
les
jb
xchg
mov
movsb
pop
sbb
mov
mov
add
in
inc
fcompl
cmp
xchg
aam
enter
mov
mov
js
xor
cmp
jmp
icebp
popa
js
sbb
adc
shll
sbb
xchg
jnp
or
mov
ret
scas
into
cmp
je
scas
xor
adcl
or
dec
fs
js
lea
in
stc
mov
pop
jno
test
fsts
mov
xor
mov
pop
mov
nop
ficoms
lods
das
sti
fsubp
cmpsl
movsl
mov
push
or
fisttpl
or
mov
iret
or
dec
cmc
lahf
cwtl
push
mov
les
adc
mov
shrl
jne
ss
cmpsl
stos
push
addb
or
xchg
mov
add
pop
push
out
pushl
xchg
jecxz
push
dec
add
fwait
inc
inc
and
push
pop
ja
dec
sbb
sti
push
clc
inc
daa
icebp
dec
inc
loop
rcr
outsl
nop
push
data16
mov
sbb
nop
cmp
sub
mov
dec
sbb
mov
ret
cmp
or
fsubs
mov
pop
push
push
lds
ss
mov
mov
mov
jecxz
je
inc
adc
sub
fs
inc
xor
push
aas
int3
lahf
lods
mov
jnp
mov
push
mov
and
xchg
push
lcall
jge
mov
jl
cvtdq2ps
insb
xchg
jmp
mov
mov
pop
loope
xchg
jmp
stos
mov
and
ret
mov
adc
je
mov
jo
call
leave
push
jo
ss
mov
and
xchg
das
hlt
and
jge
int
jnp
cmpsb
pminsw
pop
ret
inc
ss
test
jp
sbb
jb
cwtl
addl
push
cwtl
dec
daa
sbb
sub
jmp
push
andb
dec
jp
pop
test
test
ret
in
mov
and
decl
ds
inc
mov
or
and
out
ficoml
pop
ss
or
push
popa
sub
dec
roll
inc
pushl
test
sub
fildll
cmp
mov
pushf
enter
rcrl
rcrb
pop
call
stos
imul
subb
mov
sbb
arpl
ror
jmp
pop
dec
ret
lock
sbb
lods
xor
mov
bound
mov
sbb
addl
and
nop
xor
fstpt
xchg
sar
rcll
stos
jmp
xor
add
stos
in
mov
pushf
outsl
sbb
sbb
xchg
dec
push
loop
jne
rcr
add
sbb
fimull
daa
push
inc
out
cmpsl
test
aad
cld
in
and
adc
jo
aam
push
add
pushf
mov
push
stc
ret
ljmp
loopne
xor
loopne
pop
adc
or
xorl
mov
xchg
dec
ret
movsb
adc
inc
lea
mov
inc
es
jnp
or
popf
mov
dec
xor
sub
ret
push
mov
insb
mov
mov
ljmp
aas
lock
iret
jae
loope
daa
loope
cwtl
popa
aad
xchg
xchg
or
lods
xchg
scas
sub
mov
ds
add
inc
push
pusha
push
stc
inc
gs
jne
add
addr16
xor
pop
lea
shr
dec
xorl
jle
mov
xor
mov
hlt
dec
cmp
jae
or
lods
sbb
or
lea
or
int3
xlat
push
dec
sub
popa
mov
dec
test
mov
push
out
int3
test
sub
pop
popa
xlat
jecxz
cli
inc
stos
stc
out
stos
sbb
lods
pop
loop
push
mov
mov
aad
cwtl
leave
in
push
cmp
in
scas
inc
sti
push
mov
mov
jne
inc
cmpb
and
ljmp
gs
call
push
int3
sahf
xchg
notl
pop
push
dec
inc
stos
inc
sub
daa
sub
push
dec
cmc
ds
dec
mov
inc
jle
sbb
mov
jns
shlb
into
xor
jae
pusha
arpl
sahf
push
clc
lock
nop
push
shl
pop
lods
ds
mov
lds
inc
sbb
ljmp
fisubl
test
test
push
sbb
pop
xor
and
hlt
dec
fisubl
shlb
cmp
push
inc
rcl
fimull
pusha
movsb
and
inc
push
xrelease
das
popf
mov
pop
ss
push
sub
daa
mov
and
xchg
pop
push
lahf
sti
cltd
scas
mov
and
mov
out
and
push
andb
push
imul
out
sbb
stos
fidivrl
sub
enter
orb
rol
gs
pop
gs
dec
mov
mov
arpl
mov
int3
rcr
lods
test
into
sub
in
aad
jg
aas
shlb
dec
out
jmp
jnp
cwtl
sub
stos
repnz
cmp
jae
je
movsl
negl
lds
incb
or
mov
mov
cmc
out
sbb
sbb
mov
add
ds
pop
push
cld
mov
sbb
ret
jecxz
insb
rep
adc
cwtl
cmp
imul
lret
cmp
daa
test
pop
cmp
jo
psubw
fimuls
fdivl
pop
stos
insl
push
pop
mov
mov
inc
cmpsb
outsb
sbb
or
or
ljmp
loope
and
imul
je
push
and
jb
fiaddl
fstp
js
mov
jmp
adc
cmp
pop
mov
scas
cwtl
decb
xor
mov
mov
call
xchg
jb
nop
aaa
rcrl
push
outsl
aaa
inc
ljmp
arpl
sbb
dec
mov
add
test
in
mov
inc
xchg
jp
sti
cmp
ret
cmp
out
xchg
mov
inc
mov
es
mov
jo
push
sysret
and
jg
mov
lds
sti
rcrb
mov
gs
ret
lds
adc
cmp
xor
mov
cmpsl
fmul
imul
in
xlat
pop
and
add
mov
mov
addr16
or
std
fadd
lcall
xor
cltd
xor
and
jns
jns
addb
xchg
aad
sub
popa
xchg
insb
inc
imul
daa
xor
divb
test
hlt
xchg
sub
add
imul
adc
ret
mov
lret
cmc
insl
pusha
push
scas
lcall
inc
rcrl
mov
jo
mov
test
sahf
pop
inc
xor
lods
adc
dec
pop
dec
outsb
sbb
dec
mov
push
gs
jnp
sub
sub
pop
jbe
xor
mul
mov
out
movsl
xor
mov
mov
mov
and
idivb
jg
xchg
jnp
sbb
cwtl
mov
adcl
cmp
mov
push
je
fists
mov
insl
jb
mov
movsl
in
insb
adc
in
daa
test
loope
jbe
scas
sarb
das
rorb
fstpl
stos
rcll
call
inc
mov
lahf
push
add
repnz
mov
adc
daa
inc
adc
adc
jmp
stc
push
ljmp
push
or
cwtl
lock
outsb
xchg
test
es
xor
sub
addr16
in
mov
pop
mov
loopne
sbb
iret
xchg
iret
pop
ret
push
mov
jg
pop
or
dec
aad
add
or
adc
mov
icebp
jno
mov
fsubrs
mov
push
int
jecxz
jg
repnz
fisttps
cltd
dec
jb
insb
arpl
mov
xor
sub
imul
outsl
out
sahf
lds
ret
out
rcl
and
xchg
pop
fistps
cs
aaa
pusha
mov
jnp
jno
je
jne
and
pushf
sub
in
loop
pop
mov
lahf
push
add
mov
sub
scas
lds
add
xchg
pop
mov
loopne
fucom
push
daa
loopne
loopne
sahf
mov
out
push
mov
mov
xchg
adc
stos
pop
mov
mov
inc
and
out
in
insb
mov
add
je
sub
sub
mov
xchg
testb
pop
aas
test
int3
in
xchg
mov
xchg
xchg
clc
popf
out
outsl
mov
cmc
js
xchg
push
ss
sti
xchg
int3
xchg
jl
outsl
ret
inc
dec
bound
lret
push
xchg
push
cmp
and
inc
mov
mov
fs
xlat
mov
sub
pop
adc
mov
pop
sub
insl
daa
in
push
mov
sub
push
cmp
popf
fiadds
mov
cltd
cld
scas
movsl
loopne
jbe
call
fucomp
pusha
adc
lret
cmpsl
frstor
fadd
ja
and
arpl
adc
push
or
test
sarl
dec
jns
add
dec
inc
int
clc
ret
xlat
sbb
pushf
cmp
adc
cltd
pop
add
lret
repz
jge
mov
pop
mov
add
sbb
jl
movsl
dec
ds
push
divl
jecxz
cmp
out
xlat
out
add
jae
or
popa
cwtl
mov
jmp
sbb
shll
mov
out
pop
pop
push
or
mov
cmc
cmp
inc
jno
mov
pop
repnz
mov
push
aas
mov
scas
lods
pop
aaa
popf
mov
cmp
xchg
movl
outsl
add
and
filds
mov
add
mov
ret
imul
rorl
cs
pop
in
out
js
test
scas
sahf
pusha
cmp
mov
insl
xchg
dec
mov
mov
mov
jbe
dec
scas
add
xchg
es
fmuls
and
enter
mov
push
cmp
das
cli
aaa
or
push
and
hlt
xor
ss
jle
cmp
mov
leave
jnp
or
fmuls
mov
imul
fbld
rorb
idivb
jne
or
das
push
addl
shlb
cmc
not
jmp
outsb
cli
jno
outsl
xor
mov
loopne
cmp
mov
mov
xor
jb
nop
push
inc
xchg
dec
xchg
cmpsl
xchg
cltd
mov
pop
push
dec
je
or
dec
testl
pop
lods
inc
or
outsl
mov
mov
aas
or
cmpsb
pop
pop
adc
sub
rcrl
xorl
rol
push
daa
hlt
lret
movsb
and
adc
dec
and
dec
cltd
cltd
das
fisttps
fnstcw
fcoml
cli
ljmp
xor
lock
mov
rolb
xor
inc
mov
mov
or
cmp
mov
push
cmp
and
xchg
fcmovu
mov
test
mov
pop
rclb
xorl
push
mov
out
mov
mov
repnz
movsl
mov
ret
lock
mov
mov
movsl
mov
xchg
nop
gs
mov
jl
in
mov
movsl
xlat
iret
daa
mov
push
xchg
sbb
sahf
pop
insb
cmp
les
mov
aad
dec
mov
sarl
leave
sbb
pop
jp
imul
jmp
inc
or
or
lods
push
idiv
inc
xchg
and
out
cld
ja
jl
and
loop
sub
mov
mov
xchg
cmp
stos
jb
sbb
aad
dec
mov
cmp
and
inc
adc
cmp
mov
jnp
in
retw
mov
xlat
lea
xchg
xlat
cmp
jne
inc
cld
push
push
xor
int
fstp
xchg
cmpl
mov
sub
sti
xchg
ja
lea
jae
lcall
call
in
sbb
test
enter
out
popa
pushf
arpl
out
shrb
and
adc
cmp
int
in
fcmovbe
mov
imulb
mov
loopne
or
fmuls
dec
mov
jecxz
sbb
rolb
jnp
mov
xor
lods
and
sbbl
add
lret
mov
xor
loope
xchg
movsl
jecxz
lcall
ret
cmpl
repz
jmp
cmpsl
or
xor
hlt
int3
or
outsb
fsubs
xor
mov
fs
shr
mov
inc
mov
jg
jmp
pop
test
dec
ss
jnp
sub
js
jb
lcall
jb
pop
inc
jmp
jne
xor
mov
jo
jbe
xchg
outsl
je
insl
out
sbb
sti
sahf
loopne
loopne
cwtl
jnp
insl
lods
jno
out
fwait
cld
les
inc
dec
das
jmp
in
cmp
in
or
lock
xchg
push
cmp
lods
mov
outsb
lods
shll
sbb
movnti
push
push
lret
mov
xor
inc
mov
scas
xchg
xchg
pushf
add
or
in
lahf
in
je
imul
pop
popf
je
pop
inc
mov
arpl
test
push
pop
push
and
enter
lcall
jmp
lods
push
and
ljmp
aam
mov
in
add
pop
xchg
out
mov
test
in
shlb
aas
mov
ror
arpl
mov
push
dec
adc
xchg
bnd
daa
shll
aad
inc
jl
je,pt
loopne
jmp
sbb
mov
cmp
mov
loope
dec
aam
adc
jg
cltd
dec
pop
jge
mov
adc
popa
std
pop
push
adcl
in
mov
sub
mov
fdivp
scas
mov
mov
adc
lahf
add
cmp
addr16
mov
sub
push
imul
mov
lahf
mov
jmp
xchg
sbb
cmp
xchg
pop
testl
add
xchg
mov
push
push
inc
mov
or
push
pop
sahf
pop
xlat
sahf
rorl
or
sub
pop
out
and
or
movsb
daa
leave
xor
cmc
add
push
mov
dec
dec
stos
adc
rorb
sbb
pushf
data16
push
adc
jl
repz
stos
lret
jmp
lcall
xchg
xchg
mov
and
lock
loopne
inc
shlb
pusha
mov
ret
iret
data16
lock
arpl
aaa
out
push
dec
mov
and
hlt
arpl
mov
sub
or
dec
data16
pop
pusha
insb
fdivr
xchg
dec
pop
xchg
or
push
sub
andb
inc
inc
add
add
adc
xor
xchg
pop
mov
jae
imul
jge
out
inc
or
std
mov
scas
pop
xor
fdivr
push
int3
push
std
lods
lret
push
dec
inc
mov
xchg
push
jmp
pushf
mov
lret
shlb
ret
push
pop
fisttpll
int3
cwtl
push
mov
mov
mov
push
xchg
cltd
inc
push
lock
mov
mov
adc
add
sbb
ljmp
int
shrb
fidivrl
popf
lock
insl
cmp
xchg
lods
enter
xchg
mov
movsl
mov
subb
push
xchg
out
js
fs
test
and
cmp
mov
or
mov
dec
int
xchg
loop
shl
fldl
nop
mov
add
pop
or
inc
test
cs
aaa
push
cli
pusha
adc
jo
lcall
mov
dec
scas
xchg
xchg
test
in
jnp
mov
sbb
jg
and
xchg
out
shll
adc
sarb
test
rolb
xor
scas
testb
rcrl
sahf
jbe
xor
mov
mov
mov
pop
lock
cmc
jbe
inc
fsubrl
ds
and
inc
sarl
push
testl
push
test
dec
subb
and
pop
pop
lods
sarl
ljmp
aaa
jns
lea
jns
and
cwtl
sbb
add
add
push
jbe
mov
pop
pop
lods
fildl
mov
adcl
jp
test
inc
das
lahf
stc
loope
repnz
sub
repnz
adc
jnp
in
push
push
sahf
loop
pusha
test
mov
xor
nop
hlt
in
fistpll
loope
mov
pop
pop
jp
xor
pop
sub
pop
imul
jb
ds
jno
jp
adc
ds
xchg
lahf
xor
movsb
stc
dec
lock
sbb
iret
xchg
mov
mov
cmp
fsubrp
inc
mov
int3
push
lea
dec
mov
sti
fiaddl
mov
dec
insb
adc
and
leave
popa
sbbl
in
dec
dec
mov
xor
mov
inc
lahf
movsb
cmp
pop
push
imul
std
mov
out
xchg
loop
push
jns
leave
aas
addr16
shl
in
mov
sub
pop
add
cmp
enter
arpl
lret
xchg
loop
sbb
loope
or
gs
test
sti
rcll
sbb
inc
sbb
stos
hlt
and
cli
dec
js
push
and
sahf
ja
cld
cmpb
pop
adc
sub
mov
arpl
lods
sahf
call
lock
add
jno
in
movsl
repz
loopne
lret
push
jecxz
mov
imul
outsb
insl
add
test
sbb
or
mov
sub
inc
nop
pop
jg
bound
leave
loopne
cmpsb
nop
add
or
pop
sub
call
nop
filds
adc
xor
xchg
mov
call
test
shlb
jo
lcall
dec
xchg
sbb
and
mov
xchg
in
pop
rol
dec
into
pop
sti
lcall
push
sub
and
scas
fdivl
sub
in
pop
addl
jp
mov
and
daa
push
data16
xchg
stos
fdivrl
les
jne
int3
fsubr
enter
rorb
in
sbb
imul
pop
leave
call
or
push
mov
cli
xchg
outsb
nop
lods
pop
mov
out
stc
in
aaa
jne
and
cmp
jl
shrb
ficoml
pusha
divb
fldenv
dec
gs
cs
test
dec
outsl
inc
adc
rdmsr
data16
mov
jle
push
dec
lret
xor
sub
jbe
inc
fwait
outsb
repnz
adc
sti
or
xchg
mov
xchg
sbb
ret
cmpb
and
mov
leave
mov
inc
test
pop
dec
xchg
cwtl
xchg
mov
movsb
fistl
xchg
jnp
adc
in
push
out
insl
jl
mov
ret
or
cmp
scas
scas
fisubrs
inc
in
nop
and
incb
jg
out
rcrl
inc
pop
jecxz
arpl
jmp
sbb
cmpsl
sti
inc
sub
call
sub
sub
fildll
pusha
imul
lock
sbb
jae
mov
xorb
stc
cmp
adc
clc
jns
mov
mov
cmp
das
dec
sbb
jmp
aaa
lret
pop
and
push
mov
mov
ret
xchg
ljmp
xchg
sub
ds
sbb
dec
shrl
push
mov
fists
mov
or
fwait
lods
cmp
mov
mov
arpl
mov
fstpt
or
shrl
out
imul
mov
fnsave
add
and
ss
add
faddl
sarb
dec
pop
and
loope
cmpsl
cli
loope
mov
push
mov
cltd
mov
insb
cmp
js
js
mov
hlt
or
jne
insl
aad
jb
or
hlt
pop
sbb
int
jecxz
cmc
movsb
in
sti
mov
cmp
out
je
and
inc
aaa
cs
add
stos
or
test
mov
add
aas
fimuls
ret
cmp
ficompl
jne
test
xor
fsubrl
mov
mov
in
xor
ja
xor
rclb
inc
je
add
xor
xor
pop
xchg
mov
fidivs
fsubl
ljmp
sbb
mov
dec
mov
push
test
pop
pushl
adc
call
addb
out
mov
enter
into
ucomiss
adc
lods
gs
out
and
sub
sbb
aam
sub
and
pusha
push
inc
pop
cmc
mov
clc
es
add
inc
idivb
jge
mov
outsl
sub
add
fwait
aas
dec
insb
das
or
xchg
or
push
mov
popf
call
jbe
xor
popf
mov
out
test
adcl
mov
cltd
and
stc
or
pop
movsl
je
mov
out
inc
pushf
push
fwait
xor
or
jno
pushl
cltd
js
cmp
mov
fisubl
arpl
fwait
push
loopne
dec
pop
cmp
test
jb
mov
sub
mov
fistpl
inc
clc
or
cmp
lret
out
scas
mov
dec
cmp
fildl
into
xchg
test
and
or
add
pop
pop
in
inc
push
ret
insb
mov
ja
add
mov
iret
fucom
out
push
repz
jmp
lock
push
out
mov
inc
data16
jl
dec
fidivrl
lods
mov
imul
les
or
std
idivl
roll
lret
sbb
cltd
popa
push
xor
ds
mov
repz
cmp
pushf
enter
repnz
insl
inc
imul
test
nop
orb
loopne
dec
pop
cmp
addb
popf
cli
inc
mov
cld
pushf
inc
jmp
mov
xchg
jne
jp
out
jg
pop
or
es
fcompl
add
je
stos
stc
adc
cltd
fisubs
sub
or
sti
add
dec
push
dec
mov
jl
call
lcall
pop
mov
repz
fs
and
inc
mov
lods
test
popf
mov
mov
fistps
roll
fwait
xlat
push
mov
xchg
outsl
nop
fdivrs
or
daa
xlat
jne
in
add
dec
sub
into
push
lret
sbb
mov
adc
sbb
push
es
cmp
push
je
lods
lret
fstp
adc
and
in
nop
subb
jo
iret
mov
mov
ss
mov
sub
pushf
sbb
sbb
in
mov
pop
mov
pop
shlb
in
xor
jecxz
movsb
dec
aaa
lea
ficoml
rcr
and
cmpsl
and
das
loope
aam
dec
std
stc
jmp
mov
scas
xchg
inc
jmp
fnsave
call
mov
cli
hlt
bound
jnp
cmp
add
xchg
cmp
cld
test
hlt
add
bound
fisubl
xchg
cmp
inc
adc
lcall
out
jge
mov
stos
cld
shl
and
or
xchg
je
repz
inc
mov
lock
lea
and
nop
mov
mov
inc
testl
inc
mov
ss
in
mov
xor
arpl
rcrb
cmpsb
pop
mov
mov
xchg
adc
cltd
sbb
mov
xlat
in
and
cmpsb
pop
push
sbb
inc
sti
sbb
movsb
cmp
xorl
stos
pop
mov
movsl
aaa
scas
scas
enter
jle
clc
je
imul
insb
adc
out
push
inc
sahf
lcall
and
in
mov
pop
dec
test
arpl
jnp
repz
fdivrs
das
pop
fdivrl
fdivl
cmpsl
add
mov
push
push
sub
mov
add
mov
jle
lcall
ja
outsl
adc
lock
adcl
into
xchg
decb
aad
mov
fadd
repz
sub
xor
fwait
lods
jmp
pushl
jg
mov
fimuls
push
cmpsl
jns
xchg
sub
sub
ljmp
pop
adc
stos
inc
pusha
lods
mov
cwtl
jns
sti
lods
movl
out
mull
mov
shl
js
repz
push
rcrb
and
lahf
lret
sub
adc
adc
mov
ret
xlat
mov
mov
mov
clc
mov
out
mov
dec
add
jne
pop
dec
popf
xchg
mov
dec
xchg
dec
mov
in
in
andl
mov
ds
popa
test
pushf
lods
dec
hlt
mov
test
enter
out
in
sub
sub
int
shr
lahf
mov
shlb
rolb
pop
mov
push
mov
push
xchg
test
ds
pop
mov
mov
loope
notb
dec
iret
adc
stos
mov
push
xor
xchg
jg
and
cmpsl
dec
mull
lret
pop
and
les
xor
cmp
in
fistpll
movsb
lock
mov
aas
push
pop
push
fmuls
adc
cli
fdivrs
adc
test
xchg
jmp
pushl
inc
jmp
gs
pop
notl
in
jmp
repz
jbe
cs
mov
mov
test
pop
xor
dec
jbe
lahf
mov
mov
loopne
out
in
shll
add
xchg
jmp
hlt
mov
mov
mov
pop
fwait
pusha
cmp
push
mov
out
mov
push
mov
js
xchg
sub
mov
nop
je
jl
iret
int3
sbb
adc
and
fdiv
push
mov
mov
je
lods
cmpsl
pop
xchg
pop
shl
inc
pop
push
fisttpll
in
ljmp
test
push
and
or
xchg
shlb
cld
jecxz
std
movsl
jmp
out
aam
outsl
inc
dec
jmp
xor
inc
adc
xor
push
inc
ss
imul
xchg
mov
lea
sub
sbb
loope
enter
xor
or
xor
xor
sub
add
out
and
insb
mov
ss
mov
mov
inc
dec
aas
lahf
shl
ret
orb
cmp
sbb
pop
pop
xchg
lret
mov
pop
mul
jo
sbb
cmp
out
jnp
xchg
ja
movl
ss
aas
push
or
jp
imul
push
fildl
mov
fbstp
fisttpl
inc
jle
pop
vmwrite
cmp
xor
cld
hlt
mov
out
pop
sbb
outsb
dec
lret
repz
das
mov
pop
push
sbb
adc
pop
xchg
cmp
jg
scas
sub
ja
mov
inc
mov
cmpl
sbb
fisubrs
dec
jno
dec
inc
pop
jge
and
mov
scas
pop
jno
push
sbb
add
inc
push
and
popl
cltd
loop
icebp
jno
jne
addr16
into
pop
pop
aaa
pop
cs
xor
mov
xor
lock
xchg
icebp
in
add
xchg
add
or
pop
lds
inc
pusha
gs
mov
loopne
xor
jecxz
inc
fisubrl
adc
lret
push
ss
mov
xchg
jp
loope
sub
mov
rol
lahf
xor
xor
jne
fsts
js
cli
shll
rcrl
sub
outsb
adc
jp
mov
enter
sarb
ljmp
push
mov
lcallw
ljmp
outsb
sub
ficoms
pop
jbe
mov
jmp
push
js
addr16
pop
fdivp
fnsave
sub
xchg
neg
mov
fnsave
push
pop
jmp
lock
or
add
int
out
popf
test
mov
cmp
adc
ret
mov
and
ds
lahf
sbb
outsl
and
arpl
andl
inc
adcb
in
xor
das
aaa
push
mov
lret
mov
sbb
sbb
iret
outsl
jnp
les
in
dec
jg
mov
leave
xor
fldl
loope
jno
sahf
out
mov
idivb
cmp
cltd
mov
push
adc
lcall
decl
push
push
mov
or
pop
es
jo
js
bnd
xchg
gs
mov
ja
or
fcomi
mov
lods
xor
push
lahf
dec
data16
push
lods
or
repz
fs
push
or
inc
or
cmp
insl
lret
ja
xor
mov
add
fildll
fiaddl
iret
addr16
and
data16
sarb
int3
and
pop
push
adc
insb
jge
vmovntdq
lds
repnz
arpl
mov
push
test
loope
notb
out
add
pop
cmp
push
and
loope
adc
test
jle
in
push
pop
data16
enter
cmpsl
subl
inc
sub
sub
pop
or
and
popf
jbe
xor
mov
cld
lahf
es
xor
cmp
add
push
sti
lds
das
lods
cltd
js
adc
loop
es
xlat
or
push
add
jp
inc
ja
mov
repnz
add
mov
and
scas
mov
mov
mov
out
dec
insb
rorb
dec
add
xchg
dec
jb
cmp
stos
cwtl
mov
movsb
repz
inc
mov
cmc
std
mov
notb
outsl
pop
adc
push
cltd
stos
icebp
outsl
jb
mov
mul
data16
out
jmp
sbb
dec
mov
ljmp
mov
test
pop
loop
add
out
testl
push
or
lcall
cs
jae
out
jae
dec
test
add
mov
leave
add
jbe
push
ja
cld
dec
nop
sbb
sub
sti
and
push
nop
dec
pop
clc
adc
jno
jns
imul
repz
nop
mov
arpl
fmull
int
jb
dec
lock
mov
and
mov
adc
and
inc
lcall
sub
das
stc
pop
loopne
shrw
call
insb
xchg
popl
jp
jae
jns
sub
ret
jae
je
pop
shrl
or
andb
cmc
pop
mov
fsubp
inc
sbb
int3
xor
out
outsb
jne
subl
sbb
and
test
nop
push
push
jae
cmpsb
fwait
mov
xchg
inc
inc
es
xlat
icebp
cmp
cmpl
mov
and
std
push
add
xchg
fisttps
inc
xchg
and
lock
mov
xchg
cltd
jb
sbb
daa
fildl
fidivs
sub
cmp
mov
push
arpl
dec
inc
cmpsl
cmpsl
mov
and
adc
xor
out
mov
in
hlt
scas
mov
repz
stc
cwtl
xchg
sbb
int3
pop
mov
adc
add
pop
outsb
pop
repz
mov
repz
arpl
pop
sarb
ds
dec
push
jle
leave
fsubrl
push
jo
pop
push
das
lret
mov
xor
jecxz
cmp
fisttps
mov
fldenv
hlt
push
bound
cmpsl
test
mov
adc
jno
pop
arpl
dec
out
ret
push
scas
cmp
stos
pop
sbb
push
mov
jo
es
cmp
mov
pop
sbb
in
in
ret
shlb
jo
mov
les
les
mov
cmp
insb
jnp
ljmp
dec
outsb
push
faddp
push
fcoms
xchg
in
inc
cmp
clc
lods
lahf
sub
out
fisttpl
add
in
and
sarl
and
cmp
push
sbb
mov
hlt
imull
fildl
mov
xchg
mov
mov
push
lret
jb
push
mov
mov
cli
ret
mov
jg
add
mov
or
std
je
aaa
adc
cmp
add
imul
cmp
xor
movsb
push
in
dec
add
adc
sar
adc
dec
out
cmpsb
or
cltd
jp
ret
adc
andb
or
mov
dec
add
inc
lcall
sbb
test
fistpll
xor
add
xchg
mov
pop
inc
cmc
ret
mov
add
or
ss
mov
test
js
xchg
pop
mov
shll
leave
and
cwtl
addl
orl
test
and
das
insb
jb
icebp
mov
mov
ja
pushf
pop
outsb
sbbb
and
lock
sbb
out
jo
imul
push
push
popa
adc
cmc
arpl
pop
in
das
call
sbb
sbb
push
sbb
and
lea
repz
xorb
push
sbb
jle
xor
loopne
repnz
cmc
int
xchg
xchg
add
inc
test
sbb
ja
xlat
out
enter
scas
fistpl
mov
jmp
sub
loop
xchg
lahf
ret
push
pop
lds
mov
adc
stos
shlb
icebp
divl
out
xchg
insl
mov
push
in
xchg
js
xchg
movsb
ljmp
dec
xchg
cmpsb
repnz
cld
xlat
sbb
mov
mov
mull
in
rcrl
xor
mov
test
out
cmpsl
cltd
dec
shrb
out
mov
xlat
adc
fistpl
loop
pushf
js
aaa
popa
mov
insl
mov
aam
sahf
xor
vmovshdup
enter
sbb
and
push
bound
cmp
sbb
push
dec
call
push
call
loop
ljmp
jmp
inc
pop
mov
repnz
sub
mov
adc
cmp
mov
cmc
xlat
mov
rorb
sbb
ret
cli
mov
testb
out
inc
xchg
cmp
mov
subl
sub
hlt
xchg
xor
push
mov
fbld
aad
jns
in
iret
sbb
loop
jle
divb
push
push
icebp
adc
ror
xor
jl
into
repz
add
jnp
jnp
pop
xchg
sbb
push
lret
div
push
mov
test
mov
push
aas
pop
dec
pop
pop
jg
pop
aad
ja
addr16
loop
popa
stos
stos
cmp
pusha
hlt
gs
mov
data16
push
pop
insl
and
cwtl
pop
or
lahf
push
mov
in
inc
or
ja
push
pushf
out
insl
cmc
push
mov
and
and
sbb
loop
xlat
ds
xchg
sbb
js
arpl
xor
sub
add
and
icebp
xor
sbb
adcl
popf
jmp
jae
loope
pop
cld
cmp
int
dec
push
xor
fldcw
pushl
mov
gs
icebp
out
repz
push
and
and
fistpl
movsl
jns
insb
mov
jo
pop
mov
xchg
cli
push
fiaddl
rol
pop
xchg
push
inc
xor
insb
fwait
popa
add
mov
jg
lock
lods
mov
stos
rolb
fcompl
test
sbb
pop
or
idiv
outsb
int3
mov
mov
sbb
jmp
fdivl
sbb
mov
cs
pop
testb
push
into
stc
or
imul
in
and
shlb
outsl
mov
dec
dec
lock
mov
cmpsl
xor
sbb
or
or
mov
inc
scas
mov
inc
in
aas
es
jns
sub
fisttps
cmp
movsl
je
js
inc
mov
jae
jle
or
mov
cs
jo
les
xor
packssdw
lret
lahf
or
or
dec
xor
lcall
cmp
pop
xorb
pop
xor
lea
jg
loop
mov
data16
out
sub
mov
fwait
in
fprem
dec
lcall
dec
dec
sahf
pop
outsl
mov
popf
pop
add
mov
clc
push
jne
push
sbb
jnp
sub
pop
daa
pop
push
pop
lock
pop
loop
mov
sub
arpl
pop
loopne
dec
xchg
cmp
mov
add
movsl
mov
cmp
ds
push
or
inc
mov
xlat
je
fwait
movsb
aaa
mov
pop
dec
mov
sbb
hlt
lods
sarl
fldl
ss
push
xor
mov
dec
mov
and
add
orl
jb
iret
cli
cmp
xchg
mov
push
loope
jbe
xchg
insl
or
mov
stos
out
cli
mov
arpl
ficompl
mov
cmp
iret
xlat
stc
lcall
pop
adc
adc
rorb
repnz
je
dec
daa
gs
inc
inc
xor
push
mov
jnp
das
rcrb
imul
stos
sbb
pop
inc
mov
stos
inc
mov
mov
push
adc
hlt
mov
sbb
jbe
call
inc
imul
mov
jne
mov
and
bound
stos
nop
rcll
aaa
repz
scas
dec
loope
mov
push
adc
fisubrs
dec
repz
jp
movsl
dec
add
jne
sahf
sti
cwtl
or
or
push
dec
shl
in
rcll
es
mov
inc
sbb
test
mov
pop
cmp
and
loopne
dec
pop
and
inc
int3
das
xchg
shll
sub
cwtl
push
mov
push
dec
hlt
push
hlt
sbb
xlat
inc
call
push
xor
push
adc
idivb
iret
inc
decb
fstps
xchg
mov
fistpll
sar
add
lods
or
ret
dec
add
sbb
mov
push
add
lahf
add
mov
inc
outsb
dec
jle
out
mov
cmc
push
inc
lods
inc
data16
jo
or
imul
cld
shll
movsb
xchg
xor
adc
sub
aad
cmp
mov
xchg
pop
setnp
add
push
dec
dec
lods
leave
cwtl
push
std
js
xchg
or
push
sbb
sbb
mov
xchg
mov
stos
in
mov
sub
cmp
mov
xchg
push
icebp
push
or
and
xor
ja
xor
int
rol
insb
je
lahf
cmp
popf
negl
inc
rep
push
lea
mov
std
ret
xor
and
inc
movsl
mov
sbb
out
or
cltd
call
xchg
aam
ljmp
pop
cld
lds
addr16
adc
stos
cltd
pop
incb
pop
fbstp
ljmp
and
mov
cmp
divb
rcll
mov
lock
jo
push
xchg
or
mov
rol
pop
jg
xchg
jo
stc
inc
lret
mov
xchg
push
je
or
jne
cld
leave
dec
dec
hlt
adc
mov
sarl
jecxz
inc
xor
popa
jb
fdivrl
cli
pushl
and
xor
bound
std
add
pusha
xorb
mov
icebp
mov
dec
pop
jnp
mov
or
stos
daa
pop
jae
inc
push
das
loop
stos
xor
in
fidivrs
jbe
xor
and
test
push
dec
xor
lret
sub
lahf
xchg
stos
popl
mov
loope
and
ljmp
and
aas
cmp
out
push
jb
out
hlt
adc
add
mov
scas
xor
movsl
adc
out
cmpsl
jns
bound
adc
test
cmpsl
test
pop
imul
mov
xchg
inc
pop
inc
mov
dec
nop
sub
dec
stos
mov
push
push
sub
lock
push
sar
in
jo
lock
mov
xchg
imul
fisttpl
daa
adc
mov
lea
or
cmp
jnp
clc
in
fs
or
nop
cmp
mov
test
inc
gs
cs
js
sbb
mov
push
and
insl
or
or
popf
mov
cmc
outsb
imul
or
mov
nop
add
call
mov
push
sahf
sahf
das
test
movsb
push
pop
int
sahf
push
jo
dec
ret
int
int
dec
pop
mov
sbb
fxch
cmpsl
movsb
push
or
jnp
push
popa
repnz
dec
mov
push
push
dec
jb
ret
dec
mov
adcl
das
inc
pop
xor
mov
repnz
int3
scas
xchg
jnp
cmp
xor
sar
xchg
push
loope
and
fidivl
pop
xor
insb
js
scas
inc
es
xchg
fnstenv
mov
xchg
push
loopne
xor
fdivrs
xor
ss
inc
lea
xlat
lods
cmp
sahf
test
and
sub
sbb
add
sbb
xor
sbb
insl
iret
lock
xchg
xor
arpl
mov
dec
scas
mov
cli
cmp
popa
in
mov
rorb
pop
scas
sti
or
loopw
cwtl
mov
mov
popf
aas
xchg
stos
push
or
mov
test
mov
lods
nop
test
addl
dec
cli
add
stos
es
cltd
repz
dec
aam
jbe
adc
and
jne
and
lods
ret
and
jle
rol
lahf
stos
add
mov
in
mov
or
adc
es
push
mov
inc
mov
inc
mov
out
mov
insb
sbb
lret
mov
stc
bound
fmuls
cwtl
xor
cltd
lret
cwtl
rcrb
icebp
cmp
xor
insl
in
jmp
sub
mov
inc
inc
pop
mov
cld
shlb
mov
out
xchg
sar
cmp
add
cmp
stos
sub
jge
aaa
testl
cmc
call
xor
stos
or
dec
movsb
fucomip
mov
xorl
lahf
and
pop
mov
mov
test
jae
mov
adc
lds
jmp
or
jnp
test
shl
and
cltd
lds
test
aad
pop
jge
push
add
push
adc
cmp
inc
dec
dec
frstor
popf
imul
push
push
adc
mov
xchg
les
ds
jo
adc
and
lds
sub
cmpsl
or
xor
inc
cmp
or
scas
lods
fwait
sbb
push
sub
xor
mov
movsb
fst
jg
test
sub
shrb
add
and
in
leave
test
jmp
push
xlat
sub
enter
mov
mov
js
xchg
cmp
mov
mov
std
pusha
pop
dec
out
xor
add
cmp
out
and
test
aam
mov
stc
cwtl
fcoms
cs
sbb
xlat
adc
sarl
push
iret
lock
lcall
mov
cmp
int3
push
stos
stc
mov
xchg
pop
and
ss
inc
rclb
aad
mov
and
mov
adc
repnz
inc
dec
sbb
jnp
fiaddl
mov
and
fmuls
fsubr
xchg
in
xchg
mov
in
xor
push
dec
pop
mov
subl
mov
filds
push
inc
jg
inc
ret
das
and
fildl
mov
data16
fcmovne
cltd
test
fs
data16
mov
or
xchg
aam
fldenv
repz
mov
or
fwait
xchg
in
in
lahf
inc
mov
rolb
icebp
pop
hlt
xor
mov
outsl
jmp
sbb
orb
mov
jp
sbb
fisubs
bnd
lods
mov
mov
fwait
push
push
pushl
fs
mov
pop
pop
mov
test
bound
add
adc
cmp
movsb
in
xchg
sub
lods
pop
mov
stos
cs
push
dec
scas
mov
xorl
adc
ja
call
cmp
mov
and
cmp
ret
sbb
xlat
xchg
mov
jmp
imul
int
insl
ss
mov
addr16
adc
mov
leave
push
mov
jno
fisubl
pop
test
sahf
mov
imul
lret
push
mov
sub
mov
test
out
jno
faddp
and
push
sar
inc
jb
in
xchg
nop
and
pop
addr16
push
test
mov
jmp
mov
cltd
cwtl
inc
imull
mov
popf
stc
aas
stos
mov
sbb
pop
jno
jle,pt
clc
fsubl
sub
dec
pop
test
arpl
sbb
cmp
lret
gs
mov
test
sbb
test
sub
mov
arpl
arpl
cwtl
or
imul
jg
jne
inc
add
arpl
push
out
cmc
dec
sbb
xlat
or
add
jmp
dec
add
xor
lcall
js
push
push
mov
call
add
lret
push
out
cmpb
mov
mov
sub
adc
lahf
sub
sbb
add
loopne,pt
inc
jnp
out
pop
lods
mov
push
dec
out
jne
xchg
movsl
divl
test
mov
pop
out
pop
sbbl
std
fnsave
lret
xor
jbe
sar
scas
clc
or
pusha
jmp
sahf
int
sbb
jle
xchg
and
xor
dec
movsb
xorb
pop
sub
shr
mov
sub
xor
lret
mov
das
shrb
punpcklbw
idivb
sti
lcall
in
adc
hlt
subl
xchg
imul
jb
xor
or
fstpt
dec
mov
fcomps
push
inc
lret
cld
out
cs
xchg
xchg
xchg
hlt
mov
xchg
xchg
and
popa
sub
ds
out
inc
lcall
shl
inc
std
scas
mov
xchg
xor
out
pop
movsb
addr16
xchg
cmp
popa
in
mov
dec
iret
ds
add
jecxz
jmp
insl
mov
or
frstor
add
add
mov
sarl
and
movsb
and
addr16
arpl
cwtl
pmulhuw
pop
mov
pop
leave
test
dec
push
xor
fstpl
repnz
and
fists
jns
cmp
mov
cs
insl
test
popa
xor
ja
cmpsb
shufps
cmp
mov
adc
test
mov
jne
popa
sahf
test
and
mov
pushf
jmp
push
insb
insl
mov
lods
push
push
hlt
xlat
push
mov
mov
sbb
mov
push
lods
and
stos
aaa
sahf
mov
mov
cli
mov
cmp
daa
lret
add
adc
sub
or
in
mov
imul
lock
mov
cmpsb
lods
outsb
hlt
mov
rolb
and
iret
sub
mov
xchg
js
and
test
insl
shrb
ret
loope
ret
pop
loop
push
dec
outsb
xlat
xlat
cmpxchg
jge
cmp
in
jmp
lock
and
sub
adc
xchg
dec
mov
pop
clc
in
adc
in
insl
sbb
ss
cs
xchg
es
xchg
lods
add
mov
pushf
cltd
and
jne
mov
ds
test
insl
subl
cmp
aad
clc
sbb
scas
mov
dec
fsubs
std
decl
shrl
je
mov
sub
sub
cltd
clc
pop
and
hlt
jl
sbb
mov
dec
jge
xchg
xchg
fs
inc
jb
xor
int
dec
std
jnp
push
fmuls
stos
leave
push
cs
into
lcall
pop
push
jecxz
jbe
mov
out
dec
add
sarl
push
and
cmc
repz
pushf
sub
fs
lods
les
xor
mov
sti
cmp
jb
or
or
data16
js
push
dec
rorl
jl
sbb
lret
test
mov
inc
stc
aaa
xchg
sub
je
mov
ljmp
xor
outsl
in
jp
outsb
sbb
sbb
lcall
add
pop
fistpl
jl
movsl
arpl
pop
cmp
sbb
jo
mov
adc
jecxz
scas
push
xor
jg
dec
cmp
adc
cmovo
jl
adc
fldt
sbb
cmp
jae
cmpsb
dec
adc
push
pop
stos
pusha
inc
or
out
mov
rcl
rcr
scas
subl
out
sbb
push
fstl
negl
mov
test
pop
fdivrs
mov
jmp
and
leave
ja
fistps
ficomps
xor
jg
call
push
jnp
jne
fsub
dec
gs
and
shll
pop
jbe
add
test
je
xor
mov
inc
fsubrs
xchg
aam
test
mov
mov
or
ss
mov
adc
movsl
repz
xor
icebp
pop
jae
push
cli
inc
les
test
test
rcrl
adc
inc
mov
or
mov
fadds
in
mov
sbbb
in
aaa
mov
notb
cwtl
cwtl
sbb
jb
outsl
clc
dec
push
xchg
push
into
addb
dec
jb
push
pop
aaa
ja
inc
in
fdivrp
scas
xor
fimull
scas
pop
call
jp
repz
pusha
aaa
jne
or
pop
iret
dec
jle
in
cwtl
and
pop
arpl
in
xchg
int3
outsl
fsubrl
adc
ds
es
lret
pop
mov
or
call
xchg
cmp
popa
out
roll
pop
push
daa
popa
xor
cmp
add
icebp
mov
push
test
cmp
and
pop
pop
ljmp
in
jb
sbb
cmp
cld
aad
dec
sub
lret
jno
mov
shr
and
test
popa
cmp
jbe
stc
mov
cltd
push
sbb
xlat
xchg
sub
add
hlt
dec
cmp
push
xchg
pop
jns
out
ljmp
jp
cmpl
stc
repz
into
lret
fnstsw
and
rclb
stos
push
ds
cmp
mov
push
mov
pop
int3
add
inc
xorb
inc
mov
jp
mov
out
scas
dec
push
pop
imul
pop
jp
icebp
out
es
lret
rcll
lds
jl
jmp
aas
je
cmpsl
mov
mov
mov
test
xor
sub
sbb
scas
inc
imulb
lcall
lcall
jge
mov
nop
adc
cld
inc
sub
push
mov
loope
pop
cmp
out
aam
mov
out
adc
sbb
mov
cmpsl
adc
movsb
sbb
adc
out
insb
mov
call
xchg
outsl
lds
inc
ds
dec
out
testl
js
push
sub
jnp
mov
jecxz
add
inc
xlat
fisttps
lret
and
pop
sub
orl
fists
frstor
pushl
lahf
mov
adc
and
push
outsb
arpl
mov
clc
push
les
jp
lret
jl
dec
lock
decb
int
aam
movsb
pop
dec
orl
andl
sbb
sub
jb
leave
mov
stc
add
xchg
xchg
xchg
pop
add
ss
pop
inc
cmp
mov
movsl
fdivl
add
lret
and
insb
push
scas
rcrl
data16
inc
mov
mov
test
jg
popf
mov
inc
mov
mov
sbb
and
test
cmp
inc
out
negb
dec
outsl
dec
xchg
out
inc
push
test
xchg
cmp
mov
movsl
pop
outsl
das
orb
xlat
pop
cmp
dec
loopne
pop
push
es
and
test
push
shlb
mov
inc
icebp
dec
mov
add
adc
movsl
test
cmc
popf
pop
mov
into
fdivl
lret
fdivrp
pusha
dec
jg
ljmp
adc
fisubs
mov
sbb
fstps
sti
lahf
psrld
pop
mov
jecxz
sub
jmp
xlat
pop
test
pop
shlb
jmp
jo
lret
popf
dec
in
pop
xchg
xchg
push
pop
insb
int
cld
xchg
add
push
lea
cltd
push
test
insl
outsb
cmp
or
jae
cs
jge
and
add
scas
fildll
int3
loop
cmpsl
test
mov
push
and
stos
rcrl
mov
sub
push
fsubrs
push
and
jne
pop
pop
gs
jmp
or
pop
loope
insl
lea
outsb
cs
clc
cmp
dec
dec
inc
xor
aam
push
jbe
adc
push
jmp
lcall
orl
into
imul
cmp
das
sub
insl
lods
in
pop
mov
sub
jae
adc
call
push
icebp
ds
movsw
jmp
call
cli
fmuls
fimull
adcl
pusha
mov
sbb
pop
shlb
lahf
and
es
and
jnp
loop
iret
or
popf
adc
cmc
jae
lock
lret
inc
ds
dec
stos
push
ret
leave
test
pop
mov
add
sbb
ss
sahf
mov
inc
mov
and
adc
jbe
xchg
jnp
shrl
roll
xor
jnp
cwtl
add
and
rcrb
jbe
cwtl
pushw
movsl
test
dec
jmp
insl
add
jae
xchg
pop
mov
mov
inc
pop
inc
into
pusha
pop
xchg
shr
repnz
xor
dec
ss
dec
fidivrl
out
ret
enter
add
out
mov
dec
pop
mov
sub
adc
cmp
jne
xchg
pop
loope
in
xchg
inc
pop
mov
sbb
pushf
insl
jmp
pop
shl
jnp
push
add
adc
stos
cmc
test
mov
aas
repnz
and
push
loope
cmpsb
std
out
mov
fcompl
scas
xchg
call
jb
mov
popa
clc
xlat
mov
imul
dec
sbb
outsb
cmpl
imul
pushf
loop
inc
inc
ret
sbb
xchg
xchg
dec
mov
icebp
loopne
xor
jne
or
push
lock
pop
push
adc
mov
movsl
add
inc
pop
jno
push
imul
mov
rol
into
pop
in
add
jl
xchg
mov
mul
push
hlt
aad
fmull
cmp
addl
xor
push
mov
dec
push
sbb
scas
cli
cli
lret
stos
mov
jmp
aas
cmp
daa
movsl
ffreep
xchg
cltd
lcall
aad
push
sub
shl
and
dec
lcall
pop
stos
dec
pushl
fistpl
push
push
or
adc
outsb
xchg
pop
les
fcomip
dec
push
push
cmp
and
scas
push
adc
xor
ss
adc
pop
pop
hlt
push
lcall
fidivrs
shl
lods
adc
inc
adc
pop
clc
mov
stc
cmp
mov
rcll
push
ret
lcall
push
dec
addr16
aam
mov
dec
inc
test
sbbl
pushf
sub
and
jnp
das
and
fldcw
and
mov
inc
jecxz
enter
repz
xlat
insb
mov
test
adc
sti
scas
jne
xchg
rolb
aad
lods
or
jmp
add
movsb
mov
mov
dec
fisubrl
or
push
into
xchg
and
jb
ret
mov
adc
dec
and
cmp
mov
imul
adc
cli
iret
jmp
out
xchg
push
push
and
mov
adc
jne
or
pushf
or
sub
push
outsb
add
sti
jno
jp
fisttpll
stos
or
test
sub
cmp
sbb
sub
lods
or
mov
sub
cmpsl
push
enter
ds
das
sub
jmp
lret
psubd
mov
aad
jl
fisubrs
addr16
inc
aad
nop
push
test
inc
mov
xchg
cmp
aam
fwait
popf
aad
fbstp
xchg
jmp
mov
stos
push
mov
repnz
dec
lret
xor
movd
shrb
jg
inc
daa
test
push
dec
push
xchg
fists
es
or
loop
cmp
and
push
jl
lods
sbbb
je
lods
and
cmp
xor
pop
and
mov
jp
rcrb
pop
cmp
jns
mov
imul
stos
out
korb
je
scas
sbb
sub
push
jnp
incb
jmp
and
push
inc
dec
int
xchg
jge
or
adc
mov
or
cld
dec
fisttps
movl
mov
decb
jno
dec
fcoms
mul
fs
pop
lea
aaa
scas
cld
and
fstpl
xchg
jge
xor
xchg
jbe
ja
push
daa
jo
add
call
jge
rcrl
scas
stos
push
loopne
inc
sbb
popa
fdivs
outsb
adc
or
mov
or
jno
jns
cmpb
aam
rcrl
or
sub
jecxz
gs
add
cmp
sbb
lds
lret
movsl
cltd
jno
and
sub
xor
sub
dec
mov
add
xchg
loop
and
push
adc
std
mov
sarl
or
xchg
sbb
push
jg
gs
int3
add
jae
test
dec
repnz
sarl
inc
dec
xchg
sbb
push
pusha
arpl
es
push
clc
leave
pop
into
mov
ret
js
jl
pushf
xor
pop
mov
fidivs
outsl
pop
jge
add
push
lret
adc
lret
lock
mov
cmp
cmc
iret
cmp
mov
lods
xchg
sub
sbb
push
call
push
push
lods
adc
or
push
loope
js
push
mov
xchg
cwtl
rcr
mov
nop
inc
out
bound
jmp
push
movsl
les
lods
jmp
sbb
push
and
push
insb
mov
mov
sarb
sahf
sbb
loope
inc
scas
subb
nop
xchg
pop
add
stos
pusha
cs
xlat
cltd
insl
mov
xchg
add
loopne
fiadds
scas
mov
sbb
lret
or
adc
scas
push
jb
pop
sub
lahf
dec
enter
xor
popa
push
or
fcompl
aam
movsl
mov
sbb
pop
loop
out
xchg
push
fists
roll
jo
jmp
hlt
xor
mov
push
andl
push
addr16
xor
jp
inc
insb
jmp
xchg
test
lds
into
mov
xor
sbb
cmpsb
xchg
pusha
dec
test
notb
jge
addl
test
mov
call
push
jge
push
add
jl
xchg
movsl
stc
xlat
jmp
gs
xlat
pop
or
arpl
or
repnz
in
push
sbb
jl
sbb
cmp
dec
daa
xchg
sub
movsb
rorl
popf
or
jb
xlat
push
fwait
pop
or
cmp
push
or
dec
xchg
xchg
xor
cwtl
mov
inc
cld
push
cmp
nop
mov
pop
xor
xor
cltd
xlat
stos
dec
cmp
negb
pop
mov
bound
je
imul
out
and
jb
add
add
xchg
mov
mov
xchg
scas
in
fwait
sub
pop
test
inc
out
cwtl
mov
xor
daa
cwtl
add
lea
sbb
or
add
lahf
in
out
hlt
aas
lock
push
shr
mov
pushl
inc
pop
fstps
and
cmp
xchg
fucomi
jl
or
test
adc
insb
push
inc
push
loopne
enter
cmpsb
xchg
sub
push
add
push
ljmpw
ljmp
jno
xchg
cwtl
rcll
hlt
lcall
xchg
ljmp
cmpsl
add
mov
rolb
mov
lahf
rcl
cmp
lea
cmpsb
sub
add
and
and
add
leave
mov
ret
or
arpl
mov
fnstsw
out
dec
jecxz
jle
add
xor
xchg
jne
or
outsl
sbb
jbe
fldl
ja
popf
fildl
aad
fwait
cli
and
mov
push
imul
out
mov
sbb
mov
add
movsl
ss
mov
ret
lds
mov
push
sub
loop
sti
outsb
gs
mov
mov
ds
insl
or
push
ja
pop
jb
xchg
or
cmp
adc
mov
pop
or
cltd
or
outsl
fldz
pop
ss
cmpsl
dec
inc
dec
fstpt
cli
xor
mov
mov
fisubrs
dec
xor
and
mov
cmp
xchg
cmp
dec
adc
out
invd
out
jne
xor
test
inc
or
adc
or
aad
pop
dec
nop
bound
pop
mov
fnsave
ljmp
pushf
icebp
call
loopne
mov
mov
pop
popa
adc
pop
xchg
xor
push
or
mov
shll
add
es
inc
fwait
sub
xchg
or
xor
fistl
or
je
or
pop
insb
push
scas
test
pop
pop
mov
dec
ret
cli
pop
jno
jne
ds
sub
frstor
ljmp
sbb
fwait
push
arpl
cli
push
cld
sbb
push
jb
addr16
cmp
xor
pop
shlb
mov
jmp
add
jmp
mov
mov
loop
mov
or
or
fmull
lds
test
adc
scas
push
ja
fmul
mov
aas
insl
xchg
cld
dec
dec
pop
add
push
push
in
add
jp
dec
out
adc
int
xor
mov
push
add
jno
cmc
xor
dec
jae
push
cmpsl
outsb
aas
cmp
pop
shlb
sub
pusha
fimuls
inc
inc
es
aaa
jne
cltd
mov
jecxz
push
xchg
lea
and
push
loopw
dec
push
xor
sub
pusha
jmp
mov
test
repz
and
xchg
sbb
aaa
in
push
or
xor
dec
mov
inc
cs
and
add
scas
out
fstps
nop
jmp
adc
scas
aaa
movsl
push
int
lcall
adcl
sub
sbb
sub
sahf
insl
xor
stos
stos
fisubrl
add
mov
jae
loop
pop
ljmp
sub
test
xchg
mov
repz
les
sub
aaa
repnz
scas
xor
mov
sar
notl
pop
arpl
loopne
movsb
xchg
clc
js
ss
mov
push
fcompl
test
negb
fs
mov
mov
cmp
pop
int3
dec
test
adc
sub
mov
mov
rcr
outsb
jp
and
das
nop
push
sub
aas
lods
xor
in
xor
xor
xchg
das
addr16
jno
adc
xchg
dec
pop
dec
aaa
mov
popa
jne
addr16
ja
cwtl
icebp
xor
out
call
out
gs
xchg
and
jl
sbb
mov
mov
xchg
das
in
mov
sbb
add
adc
push
lods
mov
push
mov
mov
leave
sbb
imul
sub
aas
outsl
leave
xchg
cmp
xchg
inc
mov
sub
aas
dec
add
ret
xlat
cmpl
sbb
xor
cwtl
xchg
dec
dec
xor
xchg
inc
push
mov
cmp
leave
mov
arpl
adc
bound
xchg
shrb
and
jle
dec
pop
mov
cmp
pop
icebp
pop
jl
cmp
mov
scas
mov
lcall
inc
insl
adc
mov
or
push
loope
or
jbe
or
stos
adc
imul
pop
mov
fistps
mov
das
xor
pop
clc
cmpsb
sub
rcl
out
mov
cmp
xchg
inc
xchg
push
dec
in
popf
fstpt
mov
jmp
ds
fldcw
adc
loopne
rorb
mov
dec
cwtl
idivl
leave
adcl
dec
mov
cld
mov
push
std
mov
cltd
cwtl
xchg
sbb
jg
jp
in
and
ficomps
dec
mov
je
dec
jns
jl
xchg
mov
xchg
fsubrp
sbb
mov
iret
add
mov
mov
scas
push
or
out
test
bound
pop
in
mov
dec
sbb
xchg
daa
stc
out
add
pop
jne
mov
push
sahf
jae
sbb
movb
imul
xchg
in
mov
jno
pushf
shld
jecxz
sub
negb
lds
xor
cwtl
test
imul
xor
and
add
cmp
scas
repz
lahf
sbb
pop
and
lock
outsb
mov
mov
mov
cli
mov
sub
jae
add
push
xchg
jge
aam
pushf
repnz
xchg
negb
loopne
mov
adc
out
and
xchg
add
push
or
jb
iret
add
mov
lcall
enter
scas
jne
roll
cmp
xor
lret
dec
mov
mov
cmp
clc
popf
jl
out
sbb
inc
and
jb
and
or
jb
enter
sub
fbstp
xor
imul
mov
int3
xchg
xor
ds
xchg
cmp
lods
xchg
cmpsl
push
xor
shlb
sar
out
push
mov
jmp
arpl
repz
subl
loope
iret
mov
pop
shr
scas
pop
cwtl
mov
push
loope
mov
add
jae
push
adc
sub
lcall
addl
mov
inc
les
cmc
lods
lahf
fcomip
sbb
adc
sbb
push
dec
das
push
push
xor
add
add
add
mov
cmpsl
lahf
push
jns
mov
out
or
outsb
dec
fistl
fisttpll
loop
test
cmp
int
cmpsl
popf
loopne
add
movsl
or
leave
es
ret
inc
mov
ljmp
or
fisubrl
sub
push
in
dec
jo
pop
loopne
push
ds
in
mov
cs
xor
lret
adc
dec
xlat
push
mov
leave
out
mulb
inc
xor
sub
ret
sbb
pop
test
out
jne
iret
and
jns
mov
cmp
les
into
inc
push
shll
jle
aad
mov
dec
int3
rorl
aas
lods
fucomi
scas
dec
push
or
mov
jmp
in
pop
cwtl
addr16
jno
aad
ret
push
push
fbld
dec
sbb
mov
mov
lods
int
ret
dec
xlat
jnp
mov
pop
dec
push
jecxz
dec
pop
mov
pop
cmp
inc
dec
push
das
lods
mov
pop
sarb
inc
xchg
push
psrld
ljmp
les
adc
cmp
mov
sbb
mov
rol
jmp
push
repnz
mov
cwtl
out
push
stos
ss
sub
mov
ret
jb
xchg
js
sub
nop
out
addb
pop
xchg
add
rol
cmp
sub
dec
xlat
repnz
adc
fsub
loopne
dec
imul
xchg
sub
repz
outsl
push
xor
inc
in
jmp
xor
add
cmp
into
dec
cmp
outsl
loope
repnz
js
xchg
xor
pop
add
jp
add
gs
dec
dec
jns
fs
mov
adc
sub
sbbl
lods
dec
pop
xchg
jg
out
xchg
xchg
sti
bound
subl
loope
ret
fdivs
mov
sub
inc
fnstcw
pop
or
xor
pop
adc
jg
jl
fadd
or
aam
nop
jl
add
jge
lret
jg
inc
xchg
push
int
inc
mov
addr16
adc
push
jae
adc
push
mov
adc
mov
loope
inc
sbb
jp
jns
into
xlat
mov
dec
dec
outsb
pop
dec
outsb
dec
sbb
mov
push
mov
cmp
pop
jmp
push
sbb
in
out
mov
add
sti
mull
movsl
mov
sbb
xor
fnstcw
add
push
sub
xor
sbb
jb
or
xchg
xor
sahf
cmpsl
cwtl
js
mov
popf
leave
jae
jge
mov
movsl
mov
cmp
jo
je
lods
xor
in
lock
fsubrp
out
xchg
jbe
shrb
mov
scas
pop
xchg
dec
mov
pop
iret
aam
mov
cmc
imul
mov
int
pop
shll
outsl
mov
xchg
dec
sbb
lock
pop
sbb
clc
mov
mov
hlt
cmovno
cmp
xor
inc
dec
je
and
dec
stos
or
int3
dec
popf
jl
mov
cwtl
add
test
enter
loope
xchg
push
movsl
push
insb
stos
mov
xchg
xchg
jg
pop
cmp
cmc
es
in
shll
dec
jae
insl
inc
fs
mov
scas
test
adc
cmc
mov
or
test
test
jbe
std
sub
or
pop
add
out
sbb
fucomi
out
data16
sub
push
int3
pop
inc
jmp
pop
xor
add
add
outsl
clc
rcrb
stc
shlb
fnstcw
pop
push
aam
cli
pop
dec
mov
in
inc
jo
inc
loop
mov
icebp
lock
mov
mov
mov
jb
pop
and
add
jg
cmp
gs
mov
dec
insl
mov
imul
loop
ret
mov
pop
xchg
fistpl
lock
cli
dec
xor
mov
xor
insb
jbe
jl
mov
callw
in
push
int3
fistl
stos
fldcw
push
bound
ret
out
adc
jge
jecxz
sarl
inc
ljmp
lock
shrb
pop
rolb
mov
imul
sub
pop
fnstcw
das
and
std
mov
test
cli
adc
cmp
lahf
add
cmpsb
xor
test
mov
pushf
cmp
pusha
mov
or
sbb
dec
dec
push
dec
pop
push
mov
fldt
ds
jbe
jns
pushf
dec
jl
add
sbb
mov
stc
jno
mov
clc
dec
stos
std
mov
mov
mov
sbb
test
gs
add
mov
and
xchg
or
lret
ljmp
adc
mov
or
inc
dec
xchg
sahf
mov
pop
cmp
add
cmp
adc
stc
mov
push
adc
xorb
jmp
xchg
pop
popa
mov
xchg
sub
dec
imul
rcrb
ret
xor
roll
mov
jne
push
push
out
push
push
push
cwtl
loopne
xchg
flds
ljmp
jnp
ret
cmc
les
pop
add
jecxz
in
mov
dec
stos
jo
imul
out
push
sbb
hlt
mov
addr16
sbb
mov
push
insb
arpl
push
loopne
out
pop
out
out
out
cwtl
add
les
sarl
and
repz
pop
adc
mov
cltd
jo
aaa
xchg
push
lret
mov
xchg
mov
and
sti
sbb
xor
jbe
jge
sbb
dec
jge
xchg
inc
and
add
cmp
xchg
dec
outsl
sbb
xor
jge
mulb
or
out
dec
jge
imul
mov
lcall
test
inc
pop
cmpsl
outsb
mov
adc
xchg
xor
test
arpl
mov
inc
xchg
xchg
mov
sarb
mov
lret
push
popf
sbb
xlat
rolb
hlt
cmp
jns
pushf
and
adc
cmpxchg
and
stc
add
rcll
insb
xchg
dec
das
leave
pop
icebp
sub
inc
icebp
cmp
lret
inc
fmulp
jle
or
aam
int3
jge
mov
push
inc
add
mov
fsubs
mov
push
outsb
mov
push
aaa
inc
lods
xchg
pop
inc
pop
xchg
push
inc
inc
lret
sahf
cld
adc
add
mov
jae
shr
cmp
adc
repnz
test
inc
lea
dec
and
pusha
mov
inc
adc
adc
and
inc
in
dec
repz
adc
mov
fbld
les
cmp
leave
mov
cmp
sbbl
jecxz
push
jle
aaa
or
sub
and
push
fsubrl
mov
test
or
mov
pop
mov
dec
mov
push
or
adc
mov
adc
sub
sub
sub
sti
rolb
and
cmp
mov
adcb
pusha
push
ss
and
cwtl
inc
roll
cmp
cs
imulb
xchg
mov
pop
ja
mov
push
xor
aad
or
and
and
push
add
inc
ret
ljmp
repnz
xor
test
pop
mov
and
jmp
pop
iret
ljmp
mov
mov
xchg
cmp
mov
adc
aaa
outsb
lret
icebp
leave
movsb
xor
jl
bound
test
ljmp
sbb
adc
dec
push
test
sti
movsl
mov
pop
cmpsl
push
outsb
stos
fsubr
xchg
inc
testl
sbb
loope
sarb
and
push
cmc
push
roll
ret
jle
into
jecxz
repz
stos
push
adc
mov
clc
es
scas
xchg
push
mov
lret
pop
std
xchg
jmp
fsubrl
popa
das
adc
mov
jbe
int3
mov
mov
mov
adc
outsl
fmuls
mov
jmp
ljmp
xchg
mov
dec
fldl
mov
lods
movsb
dec
rol
outsl
jo
dec
shlb
enter
mov
pop
or
aad
mov
cmp
mov
addb
lahf
out
inc
ds
mov
and
shlb
push
mov
mov
add
das
call
insl
mov
scas
mov
or
or
mov
cmp
and
xchg
idivl
int
pop
cmp
sbb
push
push
pop
inc
out
jp
test
add
dec
mov
shrl
insl
jnp
das
fcoms
pop
pop
adc
xor
and
sbb
js
mov
stc
jno
jmp
cmpsl
pop
or
sub
xlat
xor
jb
inc
xchg
out
iret
push
dec
adc
cld
movsb
imul
sti
jo
mov
push
mov
aas
in
push
pop
mov
inc
cmc
loopne
adc
sub
rcrl
cmp
stc
arpl
sti
xor
xor
divb
dec
addr16
sub
mov
bound
sbb
adc
loopne
mov
add
out
les
pushf
cmp
lods
cltd
xchg
mov
bound
jmp
dec
and
into
inc
xchg
lahf
clc
mov
mov
cmp
lcall
mov
dec
sbb
jae
cmp
inc
xor
popa
jo
int3
push
or
or
arpl
aaa
or
pop
repz
mov
mov
loope
test
pop
fcompl
adc
dec
mov
jmp
and
imul
les
xlat
jp
add
sti
jo
lcall
cmp
adc
fidivs
push
les
push
sbb
mov
xor
scas
sahf
or
insl
out
into
dec
xchg
pop
jge
mov
cmpsb
dec
std
aaa
sub
stos
lods
ljmp
push
pop
loopne
aaa
mov
and
in
outsl
mov
jno
cltd
lock
sub
das
and
pop
lret
xor
or
sbb
jle
ss
sub
adc
xchg
nop
and
dec
ret
std
pop
inc
outsl
in
mov
mov
loope
popf
dec
addr16
lcall
aas
sub
cmp
and
les
jo
jmp
pop
pop
mov
mov
mov
push
mov
loopne
pop
inc
pushf
inc
push
outsb
aas
push
aaa
push
jbe
cwtl
cmp
imul
aas
sarb
mov
das
clc
mov
stos
loop
aaa
leave
outsl
jg
cwtl
and
lcall
adcb
push
push
mov
lahf
mov
pop
fnsave
int
sub
loopne
push
movb
sbb
hlt
and
and
and
std
add
push
sti
movntps
das
inc
mov
xor
in
or
and
insl
adc
mov
add
sub
das
addl
movsl
adc
icebp
adcb
inc
xchg
cs
mov
je
outsl
nop
outsl
pop
clc
inc
and
je
or
xchg
and
cmc
test
add
add
jnp
ss
cli
scas
pop
xlat
andl
lock
xchg
inc
clc
test
mov
add
outsl
test
xchg
pop
ret
mov
ret
sub
xchg
hlt
mov
sti
jp
mov
sbb
mov
or
or
inc
sbb
xchg
push
mov
loop
and
test
mov
dec
in
ret
je
fdivs
cmp
cmpsl
push
scas
sbb
xlat
jle
addr16
in
mov
xor
lret
sbb
pusha
loop
jb
xchg
xor
fwait
dec
aad
mov
adc
cwtl
adc
inc
roll
stos
rclb
add
lds
daa
cmc
push
sahf
inc
fildl
jecxz
inc
fdivr
adc
dec
xor
cmp
sbb
and
cmp
sbb
lds
clc
xchg
inc
mov
fs
pop
es
test
pop
icebp
cmp
push
pop
xor
push
stc
jp
fnstenv
xchg
inc
test
dec
fidivs
mov
push
imull
aaa
push
fstpl
ficomps
jne
fcmovbe
adc
jne
pop
repz
addr16
in
leave
and
lods
xor
and
mov
inc
nop
mov
jle
jne
dec
sbb
mov
dec
mov
stos
and
xor
inc
jmp
mov
pop
mov
outsl
mov
push
xor
shrl
mov
xchg
imul
xchg
add
or
cs
cmp
mov
cmp
and
cwtl
sbb
aad
push
cmpsb
inc
aaa
adc
jp
mov
clc
mov
nop
cwtl
sub
jmp
mov
pop
pop
cmc
jb
or
cmpsl
mov
jno
xor
mov
jne
pop
rorb
or
out
fdivs
cmp
push
rcll
fmuls
cmp
js
in
cmp
jb
int
testl
fucomi
jmp
cmp
out
lea
gs
test
daa
dec
mov
sub
imul
push
pop
mov
push
aam
cmp
vmovlps
add
sub
sbb
popf
jb
mov
adc
int
cmc
orl
cmpsb
leave
loopne
xor
cmc
cmp
jecxz
rcll
mov
mov
cmp
mov
outsl
fdivrp
inc
cmpsl
add
outsl
das
lods
call
enter
lret
pop
sbb
cmp
insl
fsts
adc
and
nop
add
jne
daa
mov
jno
testl
dec
fwait
pushf
mov
push
jle
jge
inc
stc
mov
sub
int
ss
push
stos
push
fsubrs
sarl
jmp
test
hlt
ret
aam
jbe
popa
test
rcll
pop
loope
es
sbb
es
inc
popf
cmpsl
leave
and
cli
out
sbb
cmp
pop
shrb
daa
cmc
fsub
cmp
sub
mov
popf
push
xor
fnstenv
out
xor
push
or
into
sbb
xchg
ret
cld
movl
divb
push
dec
stos
clc
inc
sub
dec
cltd
push
sub
sub
xchg
mov
mov
in
add
das
pop
cwtl
std
lods
sahf
jge
in
xchg
mov
rorb
fists
adc
pop
push
out
sub
test
jecxz
mov
subl
mov
xlat
aaa
sbb
ds
cmp
mov
pushl
fsubrl
test
jnp
or
pushf
fwait
or
jle
out
cmc
xor
call
cmpsb
push
dec
mov
push
lret
cmpsb
inc
into
cld
int
dec
aas
fcoml
pop
cmp
in
xor
cmpsb
sub
mov
aad
xchg
addr16
daa
inc
repnz
inc
lods
and
fldt
into
lds
sarl
std
jns
daa
sbb
sahf
dec
leave
mov
jae
scas
push
imul
subl
cmpsb
cltd
push
movsb
fmuls
leave
mov
fwait
jns
mov
leave
test
mov
mov
add
jge
dec
scas
mov
cmp
inc
adc
mov
sbb
fldl
add
add
lret
out
mov
adc
loop
test
stc
pop
cwtl
pop
mov
xor
push
mov
mov
pushl
cmpsl
cmp
adc
mov
cld
and
or
scas
lods
fisttpll
in
or
sarl
mov
jp
push
outsb
clc
pop
pushf
dec
lods
xor
out
addl
ss
shll
jo
enter
mov
jno
arpl
out
in
and
stos
stos
hlt
call
mov
sbb
mov
or
outsl
mov
stos
xchg
pushl
arpl
mov
pop
add
inc
add
jo
mov
jbe
sbb
ljmp
and
sub
xor
pop
pop
outsb
ljmp
add
inc
and
test
jno
inc
loop
pop
mov
aaa
dec
xchg
dec
sub
popf
fs
mov
xor
loope
lods
js,pn
shrb
sarb
mov
xchg
xchg
inc
sbb
fstl
push
aam
sahf
pop
std
pusha
jecxz
movsl
daa
lds
xchg
xchg
loopne
push
aam
or
jns
mov
inc
inc
sbb
cwtl
je
xchg
aam
pushf
pop
das
mov
xor
mov
call
adc
test
insb
shlb
std
mov
jg
es
scas
xchg
pop
scas
es
mov
push
add
lahf
dec
bts
mov
les
cs
mov
mov
mov
nop
dec
push
fists
cmc
imul
lock
shl
in
data16
imul
pop
sub
mov
pop
mov
or
mov
int
aam
cltd
or
pop
sbb
imul
outsl
inc
adc
or
sar
loopne
scas
cmp
movb
xor
ja
fsts
jl
shlb
jno
mov
adc
stc
mov
roll
mov
loopne
out
adc
xor
pop
push
cltd
mov
xor
push
fwait
mov
ficoml
cwtl
cmc
lret
ret
insb
in
sbb
dec
fnstsw
ss
stos
sub
adc
mov
cwtl
mov
push
jae
arpl
cmc
out
pop
mov
inc
push
aas
cmpsb
pop
mov
sub
es
mov
repnz
addr16
enter
cmc
cmc
xor
or
cmpsb
call
or
add
adc
cld
aas
or
or
pop
dec
mov
pushf
insl
jl
leave
mov
adc
scas
lods
es
out
lods
hlt
cli
out
popf
stc
dec
js,pt
rol
mov
or
push
les
arpl
ss
dec
loop
ret
push
fwait
daa
nop
incl
jbe
scas
cs
lret
inc
push
add
movsl
xor
sarl
mov
cli
test
cltd
xchg
iret
sub
aad
std
pop
jmp
lret
lcall
adcl
or
add
add
js
aam
sbb
lock
das
dec
popa
pop
enter
dec
cmp
pushl
scas
icebp
js
lahf
popf
ficomps
sub
aad
sbbb
fwait
jae
xor
pop
jns
scas
inc
gs
and
bound
xchg
cli
add
add
sub
xchg
sub
xor
outsl
sbbl
aaa
daa
push
aas
or
lds
std
dec
or
jnp
adc
scas
jae
ds
into
repz
push
pop
int
nop
add
push
jg
dec
imul
jne
dec
jb
imull
mov
fdivrl
aad
in
out
xor
mov
rcr
cmc
pusha
lods
lret
dec
pop
inc
mov
mov
mov
in
push
ret
ljmp
icebp
stos
jmp
push
and
aam
fs
lds
aam
or
jb
icebp
dec
dec
lock
sbb
adc
jp
push
pusha
jge
xor
pop
js
int3
jecxz
loopne
sbb
in
push
std
into
adc
cmp
dec
dec
xchg
mov
and
arpl
sub
mov
ljmp
pop
push
mov
xchg
add
insb
inc
jne
fs
icebp
gs
hlt
data16
call
or
repz
sub
or
push
cmp
xchg
in
movsl
or
and
sbb
lds
xor
cmp
mov
pop
lock
jno
outsl
mov
enter
jecxz
pop
lds
je
dec
inc
dec
dec
test
xor
aas
inc
mov
sub
dec
adc
sub
lock
sbb
and
fwait
mov
pop
pusha
lock
andb
pop
sbb
nop
js
dec
sbbl
loopne
nop
cwtl
mov
cld
addr16
or
scas
call
add
lods
mov
add
outsl
and
aam
jp
add
out
shrb
or
fcmovbe
and
ljmp
xchg
jp
ret
sbb
xor
popf
mov
fcomp
pop
mov
adc
dec
lock
insl
test
add
push
popf
mov
mov
sbb
cmp
sahf
xchg
mov
dec
jnp
push
mov
jb
test
sbb
mov
lock
je
mov
dec
popa
xor
dec
and
dec
push
and
inc
xchg
adc
cmpsl
cmp
dec
jne
scas
mov
or
dec
inc
test
mov
les
dec
aam
in
cmp
cltd
adc
dec
lahf
sbb
lret
xchg
fists
rcl
gs
mull
jo
mov
mov
mov
pop
and
in
and
dec
ljmp
bound
inc
xor
rorb
imul
js
int3
jo
fisubs
push
and
scas
out
shrb
dec
sub
sbb
jns
and
sub
dec
xor
xlat
test
mov
je
xor
into
sarb
mov
sbb
rorl
scas
inc
test
pop
fs
mov
jbe
lret
adc
popf
dec
test
repnz
fsubs
mov
inc
xchg
movsb
lods
and
cmpsl
push
popa
sarb
cmpsb
inc
mov
xchg
ja
scas
flds
cld
push
adc
xchg
mov
and
enter
cltd
shlb
mov
push
jecxz
sbb
jmp
les
fdiv
dec
loop
sub
js
movsl
mov
shll
inc
repnz
popa
mov
sbb
ss
cmp
shrb
push
es
and
int3
in
push
dec
std
ja
pop
xchg
adc
and
sub
push
mov
jp
ret
add
repz
ds
fstps
sbb
cld
cmpl
mov
mov
lock
jae
add
shrl
je
ss
xor
movsl
push
je
cmp
add
mov
rorl
fs
std
xchg
aad
in
push
mov
add
mov
call
mov
hlt
pop
mov
adc
mov
or
push
cmp
adc
and
cmp
rcrl
push
or
adc
sub
sub
pop
cmp
and
cmp
andb
test
repz
aad
xchg
mov
or
frstor
jbe
push
pop
fstp
mov
jge
packssdw
push
jecxz
jae
cmpsb
mov
nop
pop
je
cmp
push
sahf
cs
mov
dec
data16
sbbb
loope
rcr
nop
mov
mov
pop
adc
int
fsubl
hlt
ret
pop
xchg
pop
les
leave
movl
rolb
js
xor
std
mov
mov
push
ret
cmp
shl
adc
fisttpll
jl
data16
sub
inc
inc
mov
das
jnp
xchg
stos
xor
outsl
or
fidivrl
cmp
out
sbb
xor
mov
cmp
aaa
sbbb
fistpll
jle
xlat
mull
fidivl
xchg
cwtl
test
xor
repz
jp
mov
or
xchg
popf
or
sbb
inc
out
movb
xchg
clc
add
xlat
aaa
roll
loop
insl
mov
aam
pop
sahf
ret
stos
xor
pop
outsb
add
imul
mov
xorb
dec
data16
dec
mov
dec
mov
and
xlat
mov
mov
or
rcll
mov
out
lock
and
add
adc
pop
aam
loope
mov
fcoml
loopne
jg
mov
mov
lock
jmp
push
sbb
sub
lods
test
jecxz
sub
loopne
test
or
add
mov
sub
decl
xchg
stc
dec
stc
aad
mov
bnd
inc
cmp
inc
test
testl
shlb
cmpsl
aas
xchg
pushf
jnp
lcall
jmp
fbld
in
mov
mov
add
mov
lock
push
xor
mov
out
loope
cmp
into
shl
and
add
ja
jle
mov
mov
or
pusha
sbb
xchg
xor
gs
clts
xor
test
jne
jnp
sbb
jle
popf
add
jne
pushf
inc
jecxz
ret
xchg
stos
lahf
into
out
pop
pop
lds
mov
lods
cmpsb
or
ficoms
jo
loopne
in
test
jne
ds
push
jo
xlat
popa
inc
out
xchg
push
mov
mov
mov
jnp
jecxz
rcl
arpl
insb
and
push
push
push
cmpsb
xor
mov
mov
dec
leave
movsb
push
addb
or
bound
ficompl
mov
sub
call
mov
in
cmc
xor
fs
cwtl
lods
xchg
pop
sub
jbe
lods
mov
and
jb
fldt
stos
sub
sti
cmp
sbb
mul
cmc
xchg
in
sub
dec
pop
cmp
jb
in
fcmove
mov
dec
inc
bound
pop
mov
cs
cmp
frstpm(287
jo
dec
adc
xchg
adc
jmp
xor
push
pop
mov
or
jp
lret
outsl
cmp
cs
jmp
arpl
push
cmp
push
out
xlat
adc
jb
mov
or
jmp
aas
mov
arpl
lret
mov
rorb
inc
add
and
or
cmp
pushf
jo
gs
inc
mov
test
mov
add
sub
mov
dec
add
jp
dec
ret
inc
sub
cltd
xor
int
jne
push
insb
movsl
scas
push
xor
mov
fdiv
adc
cwtl
mov
inc
iret
rcll
mov
insl
add
or
pop
sbb
or
ss
xor
ror
loopne
sahf
fnstenv
loope
fdivr
mov
ds
cmpsl
push
and
and
mov
cmp
fdivrl
inc
jecxz
xor
outsb
or
dec
loope
pop
sbb
pop
cmc
daa
pop
dec
in
or
adc
jl
adc
data16
in
fs
add
and
or
fs
mov
and
jns
inc
fisubl
and
andb
and
data16
and
iret
or
sub
mov
cmp
and
push
mov
jae
loop
test
xor
pop
inc
cmc
mov
test
in
int3
imul
mov
cwtl
mov
movsl
lret
idivl
xor
xchg
fcoms
sub
cmpsl
sahf
pop
ret
andb
movsl
ret
subb
movsb
mov
outsb
rclb
cmp
addr16
imul
sub
loope
loopne
mov
mov
cwtl
sub
push
popa
sbb
xchg
lea
ds
in
sub
mov
stos
test
push
hlt
push
call
popf
loope
mov
mov
mov
dec
push
jmp
mov
je
repnz
sti
dec
sarb
stos
lods
outsb
add
sub
pusha
lock
aad
cltd
mov
push
mov
cmpb
dec
jnp
shl
je
pop
bound
fiaddl
ret
add
int3
ljmp
popf
mov
jns
dec
hlt
pop
add
xor
and
lods
or
imul
ffree
push
inc
in
mov
sub
dec
fldt
sbb
cli
push
xchg
xorl
ja
cmp
loop
jge
mov
call
dec
test
inc
jle
jo
pop
mov
lret
cld
pop
dec
push
std
stc
sub
fwait
vmread
clc
repz
adc
repnz
fadd
aam
push
popf
or
je
lcall
mov
adc
pop
xchg
inc
push
insb
es
or
fst
sub
cltd
sbb
jnp
inc
cmpsb
xchg
or
arpl
jmp
je
das
adc
push
in
dec
adc
lahf
cmp
pop
lods
aad
sub
iret
out
jne
int3
es
outsl
lret
loop
adc
dec
lock
pop
adc
jns
add
inc
movsl
mov
cmp
testb
divb
lods
push
lcall
or
div
daa
xor
arpl
sub
inc
lods
xsaves
mov
mov
lock
popf
jnp
jmp
aas
rcrb
fisttps
push
clc
push
jae
push
sti
push
add
jbe
mov
scas
inc
sbb
pop
push
js
pop
fs
jp
xchg
and
in
xchg
jmp
es
insb
divl
mov
in
mov
inc
jle
dec
or
mov
cmpsb
mov
xchg
lock
outsb
push
roll
mov
lods
mov
es
lret
jae
scas
add
sub
rcll
xchg
lret
and
xchg
scas
imul
mov
xchg
sub
mov
std
sbb
gs
hlt
enter
shrb
fucom
enter
testb
sub
lock
int
jmp
int3
aas
xlat
lods
sbb
nop
mov
sub
jo
jp
addr16
push
cli
add
and
test
data16
push
jne
sub
sub
aam
push
ret
loopne
inc
sbb
or
negb
adc
fcom
test
pop
ret
or
mov
sbb
outsb
or
xchg
dec
outsb
imul
rcrl
es
int3
jmp
xchg
mov
test
ds
jne
add
mov
cld
mov
mov
fistpll
push
jbe
lods
xchg
jle
js
push
mov
jg
sub
xchg
adc
bound
sbbb
mov
or
sahf
jp
sub
aad
test
mov
mov
or
cmpl
scas
jecxz
mov
jl
lds
negb
insb
clc
xchg
mov
inc
test
jle
pop
cmpsl
cmp
rorb
or
ds
fstpl
dec
mov
cli
mov
inc
push
nop
cmpsb
sbb
mov
movsb
leave
or
lret
cwtl
mov
out
rorl
push
cmpsl
sub
test
adc
or
mov
movsb
add
out
mov
out
mov
dec
mov
mov
out
or
xchg
sbb
aaa
pop
cmpsb
sbb
adc
adc
mov
push
xor
int
inc
inc
pop
and
faddl
sbbl
mov
adc
jbe
cmp
add
lahf
and
push
dec
idivb
lret
inc
fstl
mov
arpl
xchg
insb
cmpsl
cwtl
arpl
enter
dec
mov
inc
push
pop
pop
xchg
push
jg
negl
push
or
iret
pop
fs
fldt
mov
fiaddl
roll
cwtl
enter
cmp
and
push
fdivs
pop
stos
pop
fcmove
mov
fwait
inc
xchg
pop
out
cmp
subl
dec
call
push
fcmovnb
and
rolb
mov
clc
add
jns
push
test
lahf
pop
cmp
mov
push
cmp
adc
fnstcw
xor
cbtw
adc
cmc
cmc
dec
dec
int
mov
jecxz
or
sub
add
xchg
push
shll
xchg
test
add
pop
rorl
adc
enter
fnsave
xchg
jo
das
icebp
subl
ss
pushf
nop
jbe
movsl
ds
xchg
and
inc
adc
mov
lret
or
push
shrl
leave
pop
imull
cli
jo
push
aam
je
fists
popa
push
mov
ja
mov
lea
xlat
sub
mov
shl
je
mov
jle
push
or
or
fwait
sbb
sub
mov
inc
jp
ret
imul
add
dec
cmp
std
into
push
lds
ss
sub
inc
add
mov
mov
or
loopne
movsl
mov
das
inc
cltd
jbe
add
les
inc
js
ret
push
jl
add
mov
mov
push
jg
jnp
xor
inc
stos
pop
lea
push
xlat
notb
mov
mov
xchg
fldt
lahf
addr16
cmp
mov
cmpb
cli
mov
jge
aam
or
and
adc
stc
aas
mov
dec
stos
inc
and
in
sahf
bound
xchg
aam
mov
mov
or
dec
pop
or
popa
sub
cmp
or
hlt
mov
push
inc
mov
sahf
pop
insb
adc
das
pop
lret
cmp
add
sub
test
xchg
in
pop
popa
stos
aam
push
sub
rcrl
mov
call
faddl
xlat
pop
inc
rolb
sub
xchg
pop
jnp
pusha
cmpb
test
je
xor
iret
hlt
mov
mov
or
cmpsb
and
imul
rolb
mov
sbb
cmp
dec
xor
jle
lods
adc
sub
xchg
pop
push
fcomip
pop
rclb
sub
outsb
xchg
xor
in
sub
mov
jp
dec
lods
inc
mov
imul
mov
daa
lds
mov
cmp
and
popf
pop
mov
cmp
enter
cld
lahf
dec
add
dec
cmpsl
imul
into
in
dec
rcrl
jl
subb
sbb
push
cmp
xor
ror
push
inc
push
jne
push
mov
or
test
sbb
arpl
insb
xchg
shl
faddl
lcall
and
mov
inc
int
mov
int3
inc
out
jmp
out
pop
lea
push
bound
js
fcoms
pop
cmp
xchg
sbb
sbb
pop
xchg
mov
in
pop
jo
sbb
cmpsb
movsb
mov
lods
in
sbb
inc
push
cwtl
sbb
and
add
das
add
ret
psubd
push
mov
push
push
inc
add
cmp
or
jle
loope
addr16
inc
cmp
ret
xchg
aaa
push
leave
inc
enter
inc
push
pop
add
xor
loop
fnsave
xor
xchg
test
lahf
lods
xor
sbb
pop
in
out
lds
push
mov
xor
adc
xor
mov
jle
movsb
addr16
in
mov
sbb
jne
rcrb
pop
sub
dec
ds
cli
pop
test
inc
imulb
shr
insl
jmp
imul
stos
cmpsl
sbb
outsb
or
adc
cmp
frstor
mov
pop
adc
sbb
ffree
popl
fdivrl
pop
cmp
out
xchg
fs
push
or
movsb
sti
iret
pop
mov
outsl
movsb
xor
lods
mov
push
inc
and
leave
jbe
add
divl
and
mov
addr16
dec
cmpsl
shrb
pop
clc
inc
and
mov
jo
popa
xorb
shll
sub
xchg
pop
popf
arpl
xchg
xchg
mov
jmp
cli
out
cmp
mov
call
ljmp
mov
scas
call
fsubs
arpl
cld
daa
mov
fmulp
dec
sbb
adc
adc
outsb
insl
pop
inc
or
call
sbb
sub
test
ret
dec
jecxz
xchg
cmpsl
sub
cld
insl
lahf
mov
mov
xchg
rep
daa
mov
icebp
adc
push
insb
xchg
imul
push
mov
stos
call
xor
or
imul
and
mov
scas
les
sbb
adc
repz
adc
ret
loopne
jle
and
mov
push
dec
and
jecxz
sub
pop
dec
push
sub
ror
lds
lods
popf
mov
sti
shrl
mov
push
sbb
pop
test
in
pop
idivb
mov
fxch
pusha
imul
and
stc
sbb
xor
in
popa
mov
pop
push
or
in
inc
cmpsb
mov
in
loopne
in
js
addl
and
pop
pop
fwait
push
add
sarb
jl
imul
movb
pop
xor
ds
push
sub
xor
jl
out
mov
repnz
inc
push
js
lods
adc
dec
mov
loop
jne
int
or
mov
gs
inc
xor
add
sub
jo
lahf
dec
test
mov
in
loope
dec
inc
test
sar
rcrb
loopne
iret
adc
sub
sbb
mov
jb
lods
mov
loope
inc
mov
sbb
pop
aas
nop
aas
fstpl
fidivrl
mov
xchg
xchg
loopne
clc
outsb
outsl
adc
int
cmp
arpl
or
repz
cmp
scas
mov
jmp
pop
pop
mov
adc
sbb
or
mov
out
fwait
mov
idiv
mov
ficoml
rolb
popf
and
aas
jp
mov
and
mov
loop
es
sarl
mov
mov
cs
pushw
xchg
cmp
mov
mov
scas
lret
mov
jge
rorl
sub
lea
cmpsb
movsb
aam
mov
jae
mov
jle
mov
mov
mov
repz
cmp
mov
mov
add
fisubl
sbb
pop
pop
mov
pop
ja
outsb
sbb
mov
push
jp
jecxz
fdiv
mov
mov
js
je
aam
das
cmpsl
xchg
mov
ljmp
mov
orl
aad
cmp
shr
jnp
push
mov
push
in
insb
test
leave
push
insb
mov
jmp
inc
sub
repnz
nop
rorb
pop
int3
jb
jl
xchg
fs
xor
push
sbb
cmc
movsb
leave
test
push
and
xlat
jae
mov
cltd
sub
movsl
lcall
mov
and
mov
roll
cmp
xor
add
scas
shlb
lods
mov
mov
mov
fstpt
xor
sbb
mov
push
lea
inc
push
xchg
je
lods
or
jne
pop
in
pusha
mov
aas
sub
jns
jle
fisubrl
add
dec
cmpsl
ss
mov
rclb
int
add
sbb
lret
dec
std
xor
xor
out
mov
fimull
push
aad
js
adc
popf
add
jnp
pop
mov
xchg
sbbl
add
cmp
jp
das
sti
add
outsl
cmp
xchg
addr16
lret
and
jge
push
inc
and
xchg
dec
xlat
aad
dec
cltd
add
adc
xchg
insb
inc
lcall
xchg
fwait
sahf
inc
jne
cmp
or
jge
mov
lock
xchg
aam
shl
ljmp
dec
pop
jle
hlt
movsb
cmpsb
jnp
xor
ret
mov
into
or
repnz
xchg
imull
movsb
xchg
loope
mov
inc
sbb
jg
mov
cmp
add
je
jns
push
inc
xor
mov
call
negb
cmp
or
in
dec
mull
mov
or
mov
shlb
cmp
push
ss
mov
loopne
nop
ret
fwait
or
jnp
dec
dec
fimull
bound
jecxz
mov
xor
xchg
sbb
and
lret
cs
push
cmp
les
nop
aad
xchg
in
or
mov
mov
pop
les
sbb
xchg
adc
sbbl
mov
add
scas
xchg
mov
pop
test
leave
sub
and
jmp
adc
aaa
iret
mov
ss
popa
and
add
cmp
jge
daa
add
mov
test
mov
cmpps
inc
cmpsl
jp
mov
push
test
aam
bswap
and
mov
mov
icebp
bound
or
sub
cltd
dec
inc
and
sub
push
jnp
fdivs
negl
inc
mov
xchg
sbbb
scas
xchg
sbb
lods
in
fistl
test
mov
pop
dec
in
pop
ret
sarb
xorb
mov
lods
gs
sub
clc
out
inc
into
add
incb
add
xchg
inc
jnp
or
rep
cmp
adc
dec
xchg
sub
pop
daa
adc
mov
bound
daa
adc
mov
mov
sbb
movsl
push
pop
into
les
mov
xor
xor
push
mov
jns
mov
mov
mov
sbb
lea
inc
adc
in
and
mov
add
or
or
lea
fdivl
test
shll
std
mov
sbb
dec
imul
fsubrl
jp
loope
xor
dec
and
ror
aam
jl
scas
mov
lret
jge
roll
fisttps
jecxz
insb
xor
jne
jmp
outsb
sub
out
mov
aaa
or
aas
aam
xor
test
lods
jno
push
jno
mov
cmp
jb
inc
push
mov
pop
subl
inc
dec
sub
push
inc
or
into
mov
sub
sti
mov
cwtl
mov
mov
push
lret
xchg
outsb
push
pusha
lds
cmp
bound
cmp
push
jno
mov
inc
leave
test
mov
daa
jo
sub
shrb
and
stos
mov
mov
in
mov
adc
sub
push
cmp
sahf
sbb
xchg
jge
add
popf
bound
std
or
daa
int3
jo
enter
pop
cmpsb
fcmovbe
lret
cli
add
lea
xor
jo
into
adc
xchg
jmp
js
add
insl
and
adc
push
xchg
mov
enter
scas
aam
push
push
mov
push
sub
xchg
pop
mov
jle
shr
and
pop
push
rcrl
out
xchg
fistl
out
int3
mov
daa
jno
pop
daa
rclb
adc
inc
jae
imul
mov
inc
je
movsl
xchg
dec
inc
les
jb
repnz
cmpsl
fstpt
mov
cld
mov
push
cltd
push
jnp
push
adc
xor
inc
inc
in
mov
pop
inc
ret
inc
cli
mov
filds
or
push
repnz
shrb
add
dec
inc
stos
push
mov
clc
nop
sarb
dec
into
jnp
dec
ss
je
in
inc
out
das
iret
jbe
mov
jno
xchg
adc
pop
lods
mov
pop
flds
aas
dec
and
sub
dec
pusha
pop
addb
xor
xor
dec
push
push
int3
insb
imul
fstl
fimull
fdivrp
pop
mov
inc
cmc
jbe
sub
push
inc
pop
pop
repz
in
push
cwtl
pop
mov
mov
lahf
popa
cmc
mull
inc
or
add
and
mov
test
sahf
imul
sbb
dec
add
inc
clc
mov
repz
xlat
sbb
cld
dec
mov
add
aam
mov
ret
add
inc
cs
push
push
inc
xor
adc
push
jl
mov
xor
call
cmpsl
push
mov
mov
mov
and
pop
xor
dec
mov
xchg
xchg
and
mov
insl
adc
or
clc
fimuls
cmpsb
push
nop
push
pop
std
imul
mov
mov
xchg
add
movsb
in
mov
incb
mov
in
jmp
adc
mov
sbb
jg
adc
adc
fdivrl
pushf
sbb
pop
shll
std
adc
dec
mov
adc
jp
loope
mov
in
and
out
mov
loope
fsubrl
out
dec
fists
sub
mov
mov
sub
mov
leave
mov
fistpll
add
or
mov
popa
stc
jbe
cmp
xchg
inc
cwtl
enter
jl
stos
jbe
jno
jl
mov
inc
mov
cltd
in
sbb
adc
mov
adc
or
jb
jge
push
xchg
mov
fidivl
frstor
imul
lret
and
sub
mov
and
imul
cwtl
mov
faddp
push
cmpsb
sbb
mov
addr16
call
push
nop
lock
ret
xlat
les
mov
shll
outsl
xor
cwtl
push
js
roll
shrl
out
xchg
dec
xor
mov
movzbl
in
xor
jns
pop
popf
in
mov
add
rolb
cmpsb
into
int3
jns
stos
frstor
ja
or
outsb
mov
cld
add
lahf
sbb
push
stc
push
test
xchg
std
push
notl
cwtl
xchg
adc
call
mov
push
mov
mov
xchg
repnz
and
div
test
repz
scas
insb
cmp
xchg
cmpsb
ds
lods
paddw
push
and
xlat
out
testb
push
in
dec
imul
ja
push
in
xor
loope
cmp
call
das
ja
js
mov
iret
fs
mov
subl
jns
fs
insb
pop
add
push
in
sub
fisttpl
pop
aam
mov
xchg
push
xchg
scas
cmp
iret
jbe
dec
dec
sbbb
cmp
dec
sti
mov
mov
insl
mov
cmpsb
pop
push
add
dec
mov
jmp
enter
jno
outsb
inc
push
cmp
rcrl
popf
mov
or
adc
es
mov
push
add
or
das
lret
fcomi
or
pop
pop
in
pusha
adcb
inc
ljmp
or
fxam
call
push
adcb
push
movsb
xor
adc
mov
imul
push
lcall
sbb
rcrb
pop
jg
outsb
fisubs
loop
fmulp
ret
mov
or
jnp
es
xchg
clc
in
dec
adc
and
cmc
out
push
cmc
pop
les
stc
ja
jmp
lahf
mov
xlat
mov
ss
jne
out
and
test
adc
int3
xor
adc
outsl
cmc
push
cli
jp
push
ret
sub
out
stos
mov
mov
pushf
cld
cwtl
outsl
pop
mov
mov
add
cs
loopne
mov
cld
pop
or
mov
sbb
and
jo
mov
lahf
push
imul
stos
inc
bound
dec
pushf
ss
inc
test
repz
inc
mov
jbe
sbb
dec
cld
idiv
xchg
andb
fucomp
dec
cmpb
loop
dec
arpl
or
mov
incb
sbb
fadd
xchg
mov
or
push
test
xchg
jecxz
cmp
sub
pop
out
rclb
repnz
addr16
inc
cltd
cmp
inc
mov
push
add
push
mov
aas
sti
arpl
mov
and
pop
push
ret
cltd
insb
lret
bound
cmp
sbb
imul
push
mov
subl
leave
movsb
scas
pushf
fbstp
icebp
cmp
vmovhps
xor
enter
in
ljmp
jno
imul
xchg
mov
mov
les
jmp
push
mov
mov
pop
inc
out
sbb
scas
fsubr
mov
xchg
fdiv
arpl
jmp
sbb
ss
fadds
push
push
cmp
or
imul
lret
sbb
lods
gs
mov
jbe
nop
sub
jae
xor
pop
fcompl
mov
xor
stc
jecxz
repz
jb
ljmp
test
arpl
out
hlt
jmp
movsl
dec
inc
imul
add
sub
cwtl
iret
inc
mov
andl
scas
xchg
mov
shrl
push
inc
js
mov
out
adc
ja
pop
jmp
cmp
jmp
lods
push
sub
lret
dec
arpl
sbb
andb
icebp
mov
xchg
inc
rorb
cs
xchg
mov
jnp
adc
out
sbb
xchg
test
and
hlt
inc
fimuls
jl
inc
cmc
push
inc
and
or
mov
lock
xchg
loope
js
sbb
out
sbb
add
out
mov
enter
jg
add
loope
sbb
or
cld
pop
cmp
lcall
popa
xor
ret
push
push
mov
icebp
sbb
cmpsl
add
cmp
inc
sbb
iret
cltd
cmp
sbb
ret
cmpsb
daa
push
adc
cmp
rolb
and
clc
rcl
jnp
lods
jns
mov
mov
and
push
sbb
jno
rcrb
adc
test
jmp
data16
out
idivb
push
into
fdivrp
ljmp
cmpsl
mov
push
ret
dec
sti
xchg
clc
std
test
loope
loop
pop
mov
pushl
xor
sbb
mov
and
cmp
mov
out
sbb
sbb
sub
jl
into
int3
push
stos
hlt
and
adc
cli
call
mov
pop
fildl
push
cltd
inc
mov
adc
repnz
push
or
insl
jmp
testl
xlat
test
xchg
pushf
inc
jnp
xor
cmp
adc
jbe
sub
fbstp
jmp
push
xchg
sti
lret
test
jae
sahf
lahf
cwtl
sub
xor
mov
call
sbbb
inc
xor
jge
inc
xchg
mov
xor
mov
and
lock
mov
testb
movsl
inc
mov
sarb
xor
fs
pop
insl
xchg
les
popa
fildl
cld
add
pop
andb
aam
loope
mov
and
daa
jg
add
xchg
cmpsb
sbb
sub
std
add
fstpl
cmp
inc
adc
repnz
pop
fistl
push
in
pop
ds
fistpll
inc
lods
fwait
xor
mov
xchg
jno
add
fcoms
in
xor
lods
dec
cmc
fcmovnbe
int3
push
icebp
jo
aaa
sbb
mov
jne
movsl
mov
dec
and
repz
cmp
sbb
jnp
outsl
ret
aaa
inc
cmp
gs
lock
aad
cmp
mov
jmp
or
xchg
cs
xchg
fldenv
mov
lock
repz
xchg
dec
out
in
stos
ret
ja
jo
pop
jge
dec
jae
xor
sbb
sub
cmp
inc
cmp
dec
sub
sub
add
cmc
outsl
sub
push
and
popf
pop
loop
or
mov
lahf
sbb
test
cli
icebp
cmp
adc
pop
ret
ja
mov
push
mov
int3
fwait
int3
dec
mov
dec
loop
clc
fistps
adc
cmpsb
imul
and
sbb
fidivl
addr16
mov
nop
xor
rorb
je
pop
in
or
ja
fimuls
loopne
xor
inc
mov
and
ret
frstor
adc
es
test
push
dec
mov
loopne
call
movsl
jmp
or
inc
pop
mov
fdivrl
mov
sbb
mov
dec
insb
aas
mov
cmpsb
pusha
push
pusha
jp
sub
in
dec
cmp
push
jge
push
loope
or
dec
iret
push
jmp
hlt
sub
cmc
sahf
rcrb
xchg
lods
enter
in
mov
pop
and
into
jle
xor
cmp
or
sbb
jae
cmp
repz
or
lcall
ret
fists
push
jo
orl
movsl
jle
sbb
out
stos
xor
lds
and
mov
sar
jl
hlt
pop
out
lahf
pop
mull
push
dec
test
or
jae
fdivrs
jne
pop
shl
aaa
cwtl
daa
sbb
test
push
in
movsl
and
xchg
cmp
into
dec
jnp
mov
popf
or
and
xchg
jp
cmpsl
pop
sub
addr16
pop
scas
rolb
sbbb
jno
and
add
lea
and
int
arpl
repz
clc
and
idivb
fisubrs
shl
lods
sub
aad
sub
test
pushf
in
inc
cmpsb
dec
mov
xor
inc
sahf
popf
mov
fs
cltd
imul
iret
pop
jno
lahf
xchg
addr16
pop
in
jmp
out
in
bnd
mov
xor
daa
scas
fwait
adc
cmp
xchg
jo
xchg
sbb
dec
and
xor
cmpsb
inc
jmp
adc
mov
mov
cmp
mov
xor
mov
inc
xchg
jle
cmp
into
rorl
mov
fidivrl
jne
andb
pop
or
sub
in
aam
arpl
cwtl
xorb
push
add
mov
insb
out
into
push
rcll
stos
ljmp
dec
push
jle
lock
cmpl
and
push
stc
mov
adc
push
and
jnp
ret
ljmp
mov
sbb
movsb
mov
adc
xchg
or
mov
movsb
outsl
dec
xchg
insl
js
scas
xor
jge
das
ret
ljmp
dec
jmp
sbb
mov
mov
mov
xchg
cwtl
lret
adc
pop
adc
icebp
push
popf
xor
cmp
lds
jecxz
mov
sub
loopne
xchg
call
push
leave
xor
xor
sbb
in
xchg
icebp
cmp
and
adc
mov
jnp
mov
lea
push
fnstcw
xchg
jne
stos
lods
pop
testl
inc
xor
stos
cmp
hlt
icebp
loopne
or
jb
jecxz
popa
inc
arpl
inc
lahf
sbb
jno
inc
push
pop
jmpw
test
jecxz
aam
sbbb
dec
jl
jne
inc
mov
shl
int
negb
popw
lea
pop
sub
inc
lcall
inc
sub
add
jge
sbb
sub
int3
mov
out
pop
test
test
pcmpeqb
jmp
mov
pop
and
jns
nop
out
xor
lock
ret
out
cmc
sub
jmp
mov
clc
and
fcmovnbe
mov
rolb
mov
mov
and
ret
repz
shll
xchg
sbb
push
jae
dec
aaa
jecxz
cld
pop
push
jno
xor
scas
test
fists
sbb
push
incl
es
push
jmp
aaa
mov
adc
mov
xor
filds
mov
xchg
xlat
lds
xchg
mov
adc
mov
xor
adc
mov
icebp
idivb
jmp
sbb
shlb
jno
sub
cmpsb
fs
mov
mov
aaa
mov
mov
cmp
fs
jmp
or
xchg
push
cli
sarl
lahf
mov
jns
push
clc
fisttpl
inc
push
loop
clc
cmp
push
cltd
jno
and
lock
lret
int3
dec
cmp
fldl
xchg
sub
adc
dec
cmc
xor
push
rcrb
cmpl
cwtl
fidivrs
cmpsl
repnz
call
fsub
popf
push
inc
or
xchg
jecxz
jo
pop
sub
inc
mov
xchg
mov
test
testb
rclb
xor
add
lcall
jmp
ficomps
xchg
mov
xchg
mov
push
inc
pop
lock
leave
cmp
ret
fstpl
repz
shlb
add
and
rorl
test
daa
pop
aad
cmp
push
mov
test
mov
xchg
xchg
ret
sbb
lods
jmp
divl
xchg
lock
jmp
insl
pop
pop
pop
or
insl
in
inc
dec
stos
ja
push
scas
hlt
insl
mov
gs
cmpsl
loope
mov
sub
movsb
pop
mov
push
pop
and
mov
push
in
dec
adc
aas
aam
test
or
ds
dec
arpl
mov
repz
cmc
mov
inc
cmp
rcll
aam
sti
sub
and
stos
inc
pop
fsubr
or
nop
push
dec
jbe
push
pop
push
pop
cmp
mov
xchg
sub
out
push
js
push
sub
int3
push
out
mov
adc
test
mov
or
dec
push
jbe
ja
sbb
ret
ljmp
cli
cwtl
inc
pop
and
testb
cwtl
mov
pop
out
mov
mov
xor
add
insb
inc
mov
cmp
sbb
xorl
xchg
pop
sbb
xchg
mov
lock
pop
jl
lods
dec
jp
mov
ret
cmpsl
mov
lea
sbb
lcall
std
int3
cmp
ljmp
leave
push
cld
fcmovb
ror
inc
add
pop
mov
movsl
mov
mov
or
inc
icebp
adc
xor
stc
insl
int3
ficoms
sarb
xor
andl
ljmp
pop
inc
jo
jmp
ficoms
jle
roll
cmp
sbb
xor
call
lcall
mov
pop
shl
pop
mov
mov
sbb
aas
das
outsl
cmpsl
xlat
ljmp
fdivp
push
imul
out
sahf
mov
popa
mov
mov
and
jno
cmp
mov
into
mov
xor
inc
test
sbbl
mov
loop
mov
jo
shlb
je
popf
mov
and
mov
mov
and
lock
xor
arpl
xchg
xchg
lahf
fsubrl
cwtl
sbb
and
push
xchg
mov
push
lods
and
xor
and
add
add
jp
nop
leave
imul
pop
pop
andl
jne
push
test
aaa
imul
ret
icebp
out
lcall
test
xchg
pop
rclb
inc
mov
add
mov
jno
mov
xor
outsb
jo
push
cmp
add
or
fstp
and
into
repz
lods
in
test
xchg
adcl
ss
sbb
and
jae
add
movsb
inc
roll
pop
fwait
imul
je
in
divb
imul
mov
dec
mov
hlt
adc
das
add
repz
jge
in
ds
and
negl
mov
and
pusha
dec
sahf
cmpsl
call
dec
test
mov
or
rcr
dec
test
test
fiaddl
xor
pushf
push
or
jbe
jmp
hlt
sub
loope
push
mov
xor
pusha
xchg
push
pop
shlb
inc
mov
jecxz
pop
cmp
jmp
mov
sub
and
jmp
rcl
xchg
cltd
adc
or
sub
xor
aad
cs
xchg
xor
mov
test
rcrb
cmp
test
or
test
pop
sub
jg
lret
enter
push
cmpsb
ja
pop
or
xchg
sub
mov
mov
mov
add
mov
adc
mov
in
xchg
add
push
fnstenv
jnp
hlt
scas
sub
lods
mov
in
popa
imul
daa
dec
fcomps
and
addr16
mov
cwtl
rclb
or
lahf
adc
popf
out
add
adc
jbe
lods
cmpsb
mov
dec
inc
sahf
mov
bound
ret
xor
push
push
div
daa
push
inc
jae
push
xchg
cmp
jp
outsb
imul
push
mov
pop
pop
dec
roll
inc
adc
adc
out
sbb
inc
mov
xchg
imul
dec
sbb
cmc
xchg
rclb
cwtl
xchg
movsl
test
rorb
sub
xchg
sub
test
hlt
andl
xchg
fmul
pushl
xor
scas
dec
jns
les
lods
sbb
xchg
sbb
fnstenv
jae
adcb
xchg
scas
jmp
pop
sbb
mov
dec
shlb
nop
cwtl
or
fcompl
cli
push
push
scas
mov
xor
mov
out
lcall
loope
sbb
ds
adc
xor
jns
into
pop
xor
scas
pop
pop
xchg
dec
xchg
mov
push
iret
jns
push
cs
mov
dec
aam
mov
mov
idivb
cmp
cmpsl
jmp
out
sub
mov
ret
dec
es
mov
daa
sbb
leave
sbb
div
out
xor
push
into
pop
gs
mov
fs
mov
mov
leave
fcmovne
iret
arpl
cs
fs
pop
aad
mov
inc
adc
adc
dec
repnz
pop
xchg
jecxz
or
ret
jl
jge
pop
mov
loope
push
fstl
int3
jnp
mov
in
daa
pusha
out
movsl
sub
jno
cmp
aam
xor
cmp
pop
dec
imul
pop
add
gs
mov
add
frstor
pop
inc
testb
loop
xchg
xor
mov
and
adc
mov
jmp
inc
pop
cmpsb
pop
mov
inc
adc
shrl
pop
jecxz
in
pop
cmp
loopne
mov
adc
aaa
lea
sub
lods
ss
lock
out
js
out
das
lods
inc
inc
sbb
jno
jo
pushf
ret
enter
addr16
jne
and
cmp
gs
mov
jp
push
lods
iret
fstl
mov
pop
out
sub
adc
fistps
sub
inc
jecxz
icebp
push
push
fimuls
aad
fisttps
mov
inc
or
mov
std
mov
pop
jbe,pn
jnp
iret
jae
cmp
mov
adc
lods
mov
hlt
arpl
clc
out
xlat
jnp
sbb
repz
idiv
call
fistpll
mov
mov
arpl
and
popa
xchg
aam
or
les
xor
popa
and
dec
mov
mov
xchg
mov
data16
xchg
adc
xor
xor
loope
push
adc
aas
sbb
inc
mov
jnp
jp
lcall
pop
push
adc
mov
cmp
xor
xor
popf
jns
shr
mov
das
jle
std
or
add
pop
sbb
flds
lock
dec
cmp
test
xchg
dec
mov
int
mov
or
bound
sbbl
cmp
jb
and
test
dec
mov
arpl
fisubrs
xchg
fidivs
push
bound
pop
push
rcll
loopne
push
insl
ret
jge
xchg
push
clc
cld
int
jge
add
cmp
push
int3
mov
lock
jae
inc
mov
cvtdq2ps
mov
or
mov
pop
out
int3
popf
inc
shrb
jp
jle,pn
and
movsl
nop
jno
cmp
in
mov
sub
jl
movsl
int
fistl
mov
iret
xor
lea
xchg
push
lea
ret
inc
ja
fsubl
dec
aam
mov
sbb
mov
pushf
stc
arpl
int
mov
lret
adc
jno
add
cmp
inc
inc
inc
bound
test
push
push
pop
lea
fwait
sti
jns
in
leave
scas
adc
sti
inc
pop
lods
mov
mov
imul
xchg
mov
idivl
js
ret
sar
dec
mov
jne
lock
pop
mov
xor
sahf
in
sub
jge
pop
mov
lcall
sti
faddl
mov
rol
mov
add
cld
pop
and
adc
test
icebp
mov
or
dec
daa
mov
aam
sbb
adc
pop
out
test
or
or
movsl
push
mov
in
cmpsl
add
addb
sbb
jae
mov
jbe
enter
je
xor
aas
cmp
fidivrs
dec
sbb
orb
lods
jbe
out
dec
jo
sub
and
repnz
mov
or
cld
repnz
imul
inc
add
lods
test
inc
add
pop
stos
adc
mov
incl
mov
mov
mov
test
iret
lea
aas
xlat
lock
jg
int3
clc
mov
mulb
ljmp
xor
ret
leave
jo
movsl
das
cli
lods
jno
stos
or
das
aad
pop
jae
xor
adc
clc
lret
and
lock
mov
jns
xor
inc
add
stos
sbb
andl
ret
mov
addr16
mov
in
rclb
in
push
mov
mov
mov
rolb
sbb
out
jg
jg
fmuls
or
fstl
inc
ret
into
test
lcall
loope
repnz
jno
arpl
and
inc
jle
xor
fwait
icebp
mov
cmp
lcall
dec
mov
push
fsub
dec
cmp
icebp
inc
pop
aam
or
dec
dec
test
arpl
lock
dec
cwtl
movsb
dec
fs
push
jo
data16
jnp
mov
mov
push
sub
sub
push
add
out
sub
ss
es
data16
cld
insl
mov
push
adc
mov
movsl
mov
fwait
adc
push
push
or
ljmp
dec
sbb
cld
jmp
xchg
or
shl
sbb
mov
cli
mov
orps
sub
adcl
fbstp
insl
in
mov
imul
add
pushf
gs
xchg
push
add
dec
loop
bound
push
jbe
inc
jne
lods
sub
mov
ja
xor
rolb
mov
icebp
das
push
cmp
in
sub
dec
insl
adc
ficomps
pop
rsm
xchg
std
and
scas
addr16
fidivs
stos
cmpsb
inc
rorb
sub
pusha
and
enter
or
jle
call
mov
push
jns
and
int3
lcall
sarb
or
mov
jge
jle
js
mov
in
jbe
js
adc
mov
push
dec
jmp
sub
mov
lahf
filds
repz
mov
sbb
xchg
lahf
out
jmp
inc
or
fisubl
pop
mov
push
sub
mov
scas
mov
lretw
shlb
inc
add
inc
push
xchg
ss
pop
pushf
push
add
mov
jnp
roll
out
add
mov
push
pop
movsl
lcall
bound
ret
fstps
and
cmp
pop
mov
or
imul
xlat
xchg
dec
mov
dec
push
pop
sbb
jne
mov
pop
adc
cmp
leave
arpl
mov
mov
aaa
scas
mov
imul
adc
test
jmp
cld
das
aaa
or
jp
outsb
dec
xchg
cli
dec
cmpsl
jae
ja
xchg
mov
jns
repz
mov
out
hlt
fs
dec
add
jecxz
mov
push
mov
xor
xchg
enter
pop
and
adc
sbb
sub
std
scas
fxch
repz
lahf
mov
ljmp
jns
dec
sub
subb
sub
xchg
push
push
sbb
aaa
mov
mov
int3
push
xchg
cld
sbbb
push
addb
xor
pop
sbb
outsb
inc
pusha
pop
insb
pop
cmp
mov
sti
and
mov
fldt
inc
pop
jb
add
jge
pop
aas
mov
xchg
fcomp
arpl
pop
push
dec
xchg
xor
mov
mov
add
lods
fidivrs
mov
out
push
and
mov
pop
sbb
aaa
jns
je
add
movsl
jbe
clc
and
push
lahf
int3
inc
adc
and
popf
sub
das
lret
jne
pop
repz
lock
iret
pop
mov
les
push
xchg
add
popa
scas
aaa
test
cmp
dec
lahf
fsts
inc
jecxz
inc
jecxz
fmull
ds
jne
jns
jo
cmp
mov
push
popf
pop
mov
int3
fbld
jle
call
je
ret
leave
popa
push
enter
push
incb
dec
cmovge
jmp
int3
loop
jmp
cmp
mov
mov
push
aam
sbb
xchg
lahf
mov
ja
jl
vunpcklps
cld
sbb
lret
mov
dec
xchg
push
mov
mov
mov
jecxz
xchg
add
sbb
pop
int3
jo
jne
xchg
cmc
call
cmp
jnp
dec
xchg
inc
jmp
fst
mov
xchg
mov
mov
lcall
jmp
mov
mov
push
dec
and
testb
imul
ds
lret
sbb
mov
stos
jbe
sub
xor
jl
jp
stc
aas
and
mov
mov
sub
shlb
loopne
bound
cmp
pop
xor
jg
and
ds
dec
in
sbb
sbb
cmp
movsb
cmp
ja
loope
sbb
int
and
jecxz
fs
stc
outsb
jle
mull
mov
adc
inc
pop
jo
fnsave
dec
mov
clc
rolb
xor
rorb
mov
out
adc
jle
push
push
cli
xchg
xchg
cmpsl
pusha
rorl
dec
pop
adc
dec
aaa
pop
mov
inc
cmp
adc
jb
push
jns
pop
stc
pop
mov
mov
xchg
les
jmp
and
ja
add
insl
adcl
or
daa
aaa
cmp
lods
or
fcomps
sahf
push
xchg
push
fwait
sti
pop
pop
cltd
or
mov
lods
ljmp
movsb
mov
adc
mov
lret
rcrb
cli
pop
xor
mov
mov
adc
push
mov
inc
and
add
nop
jns
sbb
fmul
mov
mov
inc
add
loope
leave
pop
ret
or
ret
adc
imul
dec
loopne
scas
stos
pop
ror
popa
repnz
push
cmp
adc
insb
mov
andl
out
mov
pusha
inc
cli
mov
push
addr16
popa
scas
ja
adc
lret
jo
push
cmpsb
mov
mov
inc
movsl
pop
inc
es
adc
and
xchg
mov
cli
fsubrl
dec
leave
mov
push
inc
sbb
jns
mov
xor
and
das
popa
ds
cwtl
dec
ret
out
mov
add
mov
test
mov
test
dec
inc
pop
outsb
pop
adcb
cmpsb
fpatan
inc
dec
lret
das
out
dec
xchg
sub
lods
add
in
popa
xor
shlb
repz
in
xor
xchg
loope
mulb
sub
xor
rcll
cmp
loop
or
clc
stos
lahf
xchg
cltd
out
xor
mov
push
add
pop
es
dec
les
mov
data16
add
push
cmpsl
sub
or
add
in
mov
jge
shlb
xor
fimuls
push
push
int3
jns
idivb
jmp
nop
in
adc
rcl
xlat
in
dec
adc
cld
pop
jmp
cltd
and
mov
lds
jge
shll
shrb
push
fcoms
push
push
push
inc
add
scas
mov
jo
daa
mov
andb
xchg
cld
sti
jl
jne
sub
leave
mov
mov
inc
and
hlt
push
out
stc
mov
dec
insb
cmp
cmp
arpl
ja
int3
aam
iret
add
pop
fldt
cltd
out
xor
pop
aaa
lods
pop
add
outsb
xor
into
std
repnz
xor
enter
jbe
dec
jae
addb
aas
sub
xchg
sbb
mov
or
xor
sbb
outsb
aaa
jecxz
dec
in
dec
rcll
xor
adc
mov
or
push
cmp
test
adcl
sbb
sub
repnz
push
mov
and
mov
aam
add
imul
push
leave
jecxz
jg
and
fstpl
es
cli
cmpsb
inc
shl
mov
fdivl
into
out
in
cltd
shll
add
xchg
adc
repnz
adc
imul
dec
lods
fcompl
jb
test
imul
lds
xorl
cmc
xchg
or
mov
push
lds
int
cmc
pmaxub
xchg
push
test
cld
repnz
sbb
iret
jg
inc
push
pop
mov
out
daa
ret
or
push
inc
lcall
bound
nop
xor
in
fsin
pop
sbb
dec
rolb
lods
adc
sub
adc
lahf
test
popa
or
std
movsl
lret
loopne
pop
lock
mov
mov
adc
cmp
scas
rcl
icebp
test
cmpb
xor
pop
inc
nop
dec
push
pop
mov
sbb
xchg
mov
mov
lahf
xchg
mov
xor
mov
ror
test
js
shrb
fucomp
into
dec
mov
lret
aaa
fcoms
or
push
push
jb
cltd
sbb
sti
lcall
push
arpl
jo
lds
pop
sub
jecxz
sub
scas
insb
cs
scas
lods
nop
movups
dec
pop
pop
pop
mov
jae
dec
jnp
stc
into
dec
cmp
xorl
aad
fstpt
out
sbbl
push
push
mov
fidivrs
clc
inc
aad
clc
lock
in
movsl
mov
pop
pop
sub
and
pusha
cmp
notb
adc
xor
outsb
jp
mov
repz
sti
sub
lret
sbb
adc
adc
sti
or
mov
das
addl
push
lock
stc
iret
dec
xor
scas
inc
mov
test
cmp
cltd
xchg
push
dec
and
jg
sub
insl
mov
pop
push
cmp
mov
movsl
push
dec
fildll
inc
les
push
add
cmp
mov
or
mov
lock
shlb
ret
jns
insl
push
mov
jl
insl
adcl
aaa
outsb
and
or
imul
icebp
loope
fwait
cmp
ss
pop
mov
and
outsb
je
cli
or
lret
push
outsb
addr16
add
movsl
and
mov
mov
ffree
sbb
lcall
cmp
lea
scas
add
int
clflush
push
div
je
mov
movb
adc
icebp
mull
mov
loop
shll
cmp
push
stc
inc
loop
pusha
sbb
out
mov
jae
adc
rol
fldt
leave
and
nop
ficoms
iret
jns
jle
pop
push
push
or
clc
adc
flds
xchg
or
lods
popf
fwait
mov
pop
push
shrl
fcompl
testb
roll
add
sbb
jnp
jl
out
mov
mov
hlt
cltd
xchg
jp
scas
pop
call
sarb
fs
pop
lds
jl
les
out
sub
push
sbb
xor
push
int3
xlat
dec
and
movsb
dec
int3
rol
mov
jg
in
dec
fmulp
sub
dec
testb
jmp
pop
sbb
out
add
pop
cmp
mov
xchg
cmpsl
adc
adc
dec
add
jg
sub
add
shrb
in
inc
jg
cltd
cs
call
aaa
inc
ret
pop
aad
pop
push
pop
jge
mov
xchg
repnz
int3
fnstcw
out
jge
push
jecxz
outsb
inc
mov
repz
aas
lods
loope
pushf
mov
in
sub
mov
popa
iret
xlat
xchg
dec
push
cmp
cmp
mov
in
in
pop
jnp
fildll
cwtl
in
cltd
sub
xchg
pop
mov
cmpsb
push
xchg
imul
pop
xchg
cmpsb
cltd
dec
push
rcrb
shrl
cltd
xchg
mov
sti
icebp
cmpsb
std
test
jae
lock
fs
push
inc
in
dec
sub
insl
mov
adc
pushf
xchg
inc
addr16
fadd
test
int3
mov
and
push
sti
push
push
sahf
jle
or
cwtl
jmp
xchg
out
insb
stc
cmp
xor
stos
jno
movsl
test
scas
pop
xchg
decl
add
sbb
mov
cmc
cs
sahf
addr16
cmpsl
xchg
lret
cltd
and
clc
call
repz
ja
movsb
push
pop
inc
and
fildll
movsl
fnstcw
dec
int3
stos
mov
jb
add
and
out
jne
lea
setae
and
mov
jmp
in
test
or
leave
sti
jmp
rorb
add
push
dec
insl
enter
andl
cmp
mov
and
or
enter
loopne
jl
cmc
lret
push
stos
push
push
push
push
es
and
rolb
iret
xor
and
mov
and
sbb
xor
ljmp
pusha
pop
mov
pop
ret
scas
cmp
arpl
mov
jne
shlb
orl
add
hlt
lods
add
xchg
cmpsb
stos
cmc
push
addr16
inc
lea
call
shll
lahf
mov
add
fmull
pop
in
pshufw
inc
push
jge
mov
nop
mov
xor
pop
jge
add
std
cmpsb
cmc
mov
outsl
shl
xor
mov
dec
popa
call
aaa
inc
pop
lock
lods
imul
lret
xor
cmp
push
das
mov
fstps
mov
inc
into
dec
adc
xchg
jno
movsb
sub
jno
cmpsb
add
mov
stc
or
aam
clc
stos
xorl
and
mov
or
push
ds
stc
and
mov
aas
sbb
dec
sub
adc
jbe
into
xor
jge
imul
cmpsl
xchg
and
mov
popl
test
jnp
dec
mov
pushl
and
jbe
xor
lahf
jnp
push
inc
jne
shl
dec
pop
jns
es
cmp
movq
and
test
repz
out
in
and
xor
adc
icebp
jp
pop
scas
rclb
or
push
bound
jg
mov
popa
les
xor
cmpl
pop
pop
push
xchg
fists
add
xor
push
cwtl
cmp
or
and
shrb
and
fcompl
jmp
outsl
cmp
pop
lcall
mov
cmp
pop
and
outsl
jecxz
mov
fisttpl
aaa
sbb
decb
dec
dec
and
rep
sbb
loop
stos
mov
pop
push
rorl
jle
fisttps
subb
sbb
xchg
xor
push
and
and
lret
jae
mov
dec
shlb
dec
add
push
je
aaa
shll
mov
mov
push
ret
or
pop
inc
imul
add
repz
sub
pop
leave
fimuls
nop
jl
inc
inc
adc
dec
lret
jo
push
pop
mov
insl
aam
pop
mov
jns
mov
push
ret
enter
into
push
xchg
push
data16
sbb
leave
icebp
shl
hlt
inc
in
or
dec
fmul
gs
fcoms
adc
rcr
push
cmpsb
xor
cmp
in
mov
test
int
out
mov
xchg
jae
jnp
or
sbb
and
add
rolb
inc
ret
lret
sarl
decb
pop
mov
enter
lds
roll
popf
testl
jo
push
pop
mov
sub
ret
rcr
test
mov
mov
sbb
sbb
jp
or
or
mov
arpl
fmuls
ds
xchg
sbbb
addr16
loopne
inc
and
push
mov
bound
sahf
jb
push
dec
xor
ret
sbb
push
push
push
or
fwait
xchg
int3
inc
loopne
std
insl
cmp
sub
test
ds
gs
mov
es
je
mov
pop
loope
nop
js
imul
test
out
ljmp
cmp
into
inc
and
ss
icebp
stc
adc
jmp
lea
sub
les
dec
dec
in
cmp
mov
xchg
sbb
sub
aad
aad
and
jne
cmp
movsl
sbbl
xchg
fisttps
lea
fildl
add
push
and
jo
fucomip
cwtl
xlat
loop
xchg
icebp
adc
lret
shl
cmpb
ret
add
push
ljmp
sbb
lret
mov
ja
loop
cli
test
nop
out
lds
clc
pop
dec
mov
lret
and
mov
stc
adcb
rclb
fs
ljmp
rcr
fisttpll
hlt
add
mov
push
lods
ljmp
xlat
or
and
je
or
out
jmp
sub
xor
lret
mov
push
or
mov
ja
lods
dec
mov
lcall
lcall
dec
loope
hlt
fiadds
rcll
mov
roll
incl
idivl
mov
imul
or
int3
daa
mov
loop
mov
int
sysenter
inc
sti
hlt
xchg
add
fiadds
test
ret
popa
test
xor
pop
and
js
cltd
popa
stc
push
jmp
hlt
xchg
dec
xor
jne
cmc
div
cmp
sub
outsl
cld
add
mov
addr16
fadd
icebp
mov
push
insb
push
loope
mov
shl
outsl
movsb
cmp
shlb
pop
fwait
in
push
loopne
push
sub
cli
jmp
adc
sub
out
cli
call
jae
jle
and
xchg
jbe
jge
push
test
sub
jb
jecxz
push
ds
sub
mov
shlb
stc
inc
mov
mov
sub
push
aam
jo
push
cmp
xchg
jge
mov
sbb
rcrl
ds
inc
mov
pop
jmp
outsb
xchg
rcl
loope
jae
push
ficompl
lea
xchg
jnp
mov
inc
adc
stc
shl
mov
jge
fmul
aaa
inc
mov
jge
xchg
sbb
pop
dec
pop
outsb
mov
or
fwait
sbb
cwtl
movsb
rcll
xchg
pop
js
xor
cmpsb
jo
cltd
shlb
or
icebp
shrb
mov
jbe
cmp
je
xchg
jo
adc
mov
arpl
jge
inc
mov
leave
test
or
sub
sub
adc
enter
stc
push
mov
xchg
ljmp
xor
dec
push
in
rcr
push
stos
and
cwtl
ljmp
in
and
sub
sbb
negl
jno
call
mov
cmp
int
out
lret
xchg
mov
sub
push
ficompl
jg
push
pop
mov
push
dec
mov
jbe
imulb
push
mov
cmc
sub
adc
insb
cmp
sub
lcall
cwtl
enter
mul
xor
add
sub
aas
in
jns
and
pop
ret
mov
ret
mov
add
in
aaa
stos
dec
mov
sub
cltd
je
lahf
mov
push
mov
push
sub
das
fldl
fisubrl
adc
les
fildl
in
movsl
insl
sahf
sub
arpl
mov
fstps
mov
xchg
int3
out
sbb
ljmp
fimull
loopne
pop
in
pushl
xchg
addr16
xchg
mov
or
and
sub
and
mov
movsb
adc
mov
mov
push
and
xor
cmp
mov
jbe
lea
add
push
insl
fcmovnbe
andb
mov
sub
mov
push
cmp
cmpsl
test
xchg
gs
inc
test
inc
xchg
xchg
add
xchg
jge
push
mov
bound
mov
xorl
pop
cmp
sbb
mov
inc
inc
jmp
fisttps
xchg
testb
push
scas
pop
cmp
xchg
movsb
aad
loope
xchg
mov
mov
mov
ljmp
mov
fiadds
fldenv
fldl
je
ds
sub
ljmp
push
mov
inc
mov
sub
into
stos
int3
ret
popa
jmp
fwait
push
rcll
pop
int3
imulb
shrl
mov
push
mov
jbe
sbb
jbe
lods
lret
fdivrl
lret
mov
push
int3
and
or
scas
inc
setae
adc
fldt
jecxz
push
outsb
rcrb
les
or
mov
xchg
je
fadds
lcall
jb
jne
pop
test
cltd
lock
sub
sub
jp
jp
enter
push
fisubs
notl
and
inc
cmp
pop
cmc
dec
jp
mov
jp
xchg
loope
in
nop
inc
out
dec
sbb
sub
cmp
mov
shll
adc
mov
jo
std
loopne
and
pop
ficompl
inc
movsl
stos
add
orb
jmp
mov
cmp
lret
jbe
enter
cmp
fsubr
hlt
adc
cmpl
or
sub
cld
jnp
add
hlt
adc
xlat
rorl
out
add
cltd
adc
hlt
sbb
divb
sub
push
xor
xor
xor
xchg
xchg
adc
xchg
sub
cmp
int
sub
in
das
or
popf
insl
add
mov
sub
addb
fcoms
aas
cmc
sub
xor
inc
inc
sub
inc
inc
add
out
nop
add
xchg
cmp
pusha
ja
cmp
pop
inc
imul
test
pop
mov
movsb
outsb
cwtl
cmp
push
cli
cs
into
cmp
mov
jl
and
lods
cmp
dec
pop
aaa
ss
into
xchg
outsl
mov
mov
adc
je
mov
imulb
sbb
pop
mov
pop
dec
ret
test
xchg
leave
les
int3
imulb
jl
int
lcall
or
or
inc
mov
idivl
push
outsb
ret
jmp
sub
loop
push
sub
frstor
sbb
mov
in
dec
fcom
push
jns
sbb
das
rcll
xchg
lahf
dec
add
les
aaa
pop
fidivl
mov
icebp
or
push
stc
push
cbtw
and
sbbl
cmpsb
jns
lahf
pop
mov
ss
int3
and
addr16
xlat
sarl
cld
call
mov
inc
add
mov
jp
test
push
clc
inc
int
cmp
sbb
ret
jnp
stos
repz
lret
adcb
jle
movb
mov
xor
xchg
and
and
fs
dec
xor
mov
fidivrs
xor
call
xor
mov
jae
mov
push
and
xor
xor
test
imul
xor
cld
or
call
into
imul
add
inc
adc
loop
rcr
add
pop
and
dec
icebp
lret
pop
xchg
ljmp
dec
out
movb
jg
push
push
das
scas
fmul
mov
cmp
les
mov
mov
loopne
int
add
inc
pop
icebp
test
lock
sti
sub
push
outsl
add
pop
repnz
or
or
xchg
xchg
push
sbb
adc
push
dec
orl
adc
daa
loopne
out
call
xor
in
mov
data16
sub
mov
pop
mov
sbb
test
mov
jecxz
sub
int
aam
aad
in
inc
psubsw
enter
in
and
xchg
xor
test
mov
fidivs
mov
xchg
fs
mov
addr16
dec
repnz
dec
nop
lods
dec
test
cmc
popf
rolb
xchg
and
and
add
in
scas
push
idivl
sub
xchg
xor
outsl
dec
add
int3
inc
adc
dec
les
mov
aaa
fs
call
cmp
shrb
mov
jge
lds
jl,pt
xchg
or
std
pop
push
mul
out
pop
std
fists
mov
jl
fcompp
insb
xor
cmpsb
sub
dec
outsl
repz
fs
mov
mov
icebp
or
and
pop
sbb
push
sbb
adc
adc
shl
pop
pop
jbe
sbb
push
int
mov
out
pop
lcall
sahf
jno
push
inc
dec
shlb
xor
sbb
adc
adc
sub
jg
xor
mov
jg
jbe
cmp
and
sahf
sar
das
shrb
pop
fdivrl
mov
outsl
outsb
xchg
add
jl
sub
bound
rcrb
call
in
add
cltd
fidivl
xor
add
pop
pushf
cmp
cmpsl
push
cmc
push
push
insl
push
add
les
sbb
xlat
mov
fidivrl
popf
movsl
jne
call
sbb
pusha
or
fwait
or
sbb
xchg
inc
outsl
sub
pop
arpl
arpl
je
shr
sub
insl
and
std
xor
and
mov
adc
push
or
mov
sbb
fistpll
xchg
lret
mov
xor
lods
scas
cwtl
mov
jne
popa
loopne
adc
jo
add
dec
in
push
dec
fnsave
jecxz
and
lahf
out
mov
loope
jge
call
popf
mov
outsl
cmpsb
arpl
adc
popa
pop
inc
mov
inc
cs
jbe
push
adc
shl
mov
sbb
adc
push
repz
cmc
mov
aas
jl
fisubrl
jecxz
push
mov
sbb
mov
ret
jns
xlat
inc
push
adc
sub
pop
cmpsb
ljmp
jg
push
bound
subps
aaa
imul
push
adc
call
pop
or
lods
imul
lcall
scas
pop
add
mov
lock
lock
test
shll
gs
out
mov
es
leave
jno
xlat
or
imul
fsubs
xchg
xchg
lcall
xchg
mov
imul
xor
xchg
aam
add
clc
sub
les
insb
jle
int
push
xchg
in
mov
xchg
scas
or
shlb
es
push
and
xor
push
das
mov
addr16
sub
sbb
fdivr
xor
sub
ljmp
ljmp
test
pop
inc
xchg
aas
lods
lock
cwtl
xchg
stos
mov
insl
aaa
cwtl
add
adc
fadds
xchg
sub
jns
fcmovnb
cmp
push
lods
and
push
or
mov
sbb
or
and
adc
fidivl
loopne
ds
popf
sbb
sbb
jnp
push
and
out
adc
daa
jmp
fnstsw
lods
int3
cld
xor
jmp
mov
add
je
movsl
push
lea
in
orb
add
pop
mov
aas
adc
ret
std
xor
mov
push
enter
in
and
cmpsl
sbb
lcall
fs
jns
dec
ret
daa
sub
les
add
xor
inc
sbb
or
jg
adc
pop
into
dec
fcoml
movb
scas
mov
mov
jnp
into
addb
std
jo
rorl
dec
xchg
scas
repz
fldl
scas
xchg
aaa
mov
lea
aam
jbe
adc
dec
jmp
pop
lds
mov
fidivrl
gs
jne
fstl
pop
sub
add
xchg
dec
movsl
xchg
aaa
stos
xchg
mov
mov
jle
jbe
cmpsl
or
aas
jle
popa
incl
sbb
call
fstps
enter
xor
jno
jbe
xchg
mov
stc
and
pop
les
fldenv
cmp
and
cmp
ret
mov
out
mov
out
mov
mov
lret
sbb
sti
test
push
sub
std
pop
pushf
mov
sbb
inc
jg
outsl
mov
jle
int3
daa
pop
jne
xchg
inc
ljmp
movsl
push
lret
or
xchg
mov
mov
lds
cwtl
stos
adc
outsb
push
dec
stos
push
or
cmp
sbb
nop
aaa
mov
aam
sbb
adc
iret
dec
jecxz
stos
mov
rcll
cmp
int
shr
stc
stos
cmp
cltd
fdivrl
lock
aas
addr16
and
xchg
sbb
data16
adc
mov
aam
xlat
cmpsl
hlt
pop
hlt
and
mov
sub
testb
jae
mov
iret
and
mov
xor
scas
imull
xor
mov
dec
cmp
or
fcmovu
mov
iret
add
add
pop
and
in
cli
push
movsb
int3
xchg
mov
xor
lea
adc
xor
fmuls
fbld
unpcklps
mov
nop
xor
sahf
in
adc
adc
hlt
xchg
cmp
lods
ljmp
imul
sbb
dec
jns
stc
pop
in
test
fmulp
mov
pop
inc
les
and
fsubl
imul
cli
movsb
lret
les
ret
xchg
lahf
sub
xor
and
imul
xor
fdivrs
in
les
dec
insb
cli
pop
inc
mov
xchg
outsl
scas
sbb
jb
scas
data16
cld
ja
or
cmp
out
fpatan
push
push
push
fsubs
mov
icebp
in
in
sub
and
xor
mov
aam
sbb
jbe
test
or
int
inc
cmp
adc
mov
out
popf
pop
push
sahf
imul
mov
int
xchg
or
js
ds
push
jl
cwtl
adc
sbb
mov
xor
adc
test
push
sub
xchg
cs
lcall
add
aad
fsubp
imul
mov
in
adc
jae
pop
jl
dec
xchg
dec
leave
test
andl
push
inc
testb
mov
xor
xchg
aas
mov
andl
mov
mov
add
mov
mov
add
jg
clc
mov
or
stc
pop
cltd
js
out
pop
or
mov
ret
inc
push
jmp
fbstp
mov
sbb
cmp
jl
adc
xchg
icebp
mov
xchg
dec
xchg
sub
outsl
and
loope
or
lret
in
xlat
lds
cmpsl
ds
and
inc
cmp
lea
cmp
stos
lahf
lods
xchg
pop
dec
sbb
sub
xor
aad
xchg
push
in
aam
lcall
lds
dec
movsb
sub
loop
push
stc
cmp
shll
sti
ror
jne
rol
jns
push
adc
lds
sbb
outsl
adc
test
jg
int3
dec
xor
jge
mov
mov
outsb
xor
js
adc
std
cli
arpl
mov
cmp
pop
pop
or
and
movups
jecxz
xor
jge
jnp
jp
cmpsl
enter
in
lret
icebp
jae
icebp
cwtl
or
fldt
lret
sti
mov
sbb
push
xlat
lock
in
mov
ja
inc
ljmp
mov
loop
popa
in
das
outsl
dec
cmp
dec
cltd
jge
notb
test
or
push
cwtl
pop
mov
or
and
cmp
jns
out
mov
cltd
outsb
cmp
mov
sbbl
add
in
scas
add
lods
lcall
shrl
jmp
jne
bsf
loope
and
xchg
xor
mov
jns
sbb
add
pusha
cwtl
lahf
push
and
test
jae
aas
cmc
jnp
mov
sub
xor
fcoml
mov
mov
mov
fsts
out
cli
dec
xor
enter
icebp
mov
orl
mov
jmp
fs
daa
lahf
jae
inc
outsb
jae
add
dec
fisttpl
cmpsl
outsl
test
icebp
mov
push
aam
ror
xchg
das
insl
imul
pop
push
insl
data16
dec
shl
lods
xor
push
or
mov
stc
jg
mov
cld
sub
xor
inc
pop
xchg
lea
pop
add
sub
xchg
vcvtps2dq
xchg
cmp
mov
push
mov
jp
outsb
cmp
or
dec
add
or
cwtl
dec
or
xor
mov
jo
mov
test
mov
cld
outsb
ja
in
rorb
adc
fmul
popf
mov
inc
fdivrs
loopne
lods
lcall
sbb
mov
cltd
dec
lcall
test
push
imul
push
sbb
sbb
or
mov
sub
movsl
adc
mov
repnz
pop
pop
jne
jne
or
inc
and
jno
adc
imul
out
arpl
sahf
movsl
add
jno
insl
inc
add
enter
sbb
inc
sti
leave
mov
mov
pusha
xchg
dec
pusha
jp
sbb
mov
or
cmp
inc
imul
aaa
pop
rcll
sbb
dec
mov
and
test
sti
dec
dec
mov
jno
aam
icebp
loopne
mov
pop
or
mov
out
push
imul
scas
loopne
adc
sub
addb
movsb
dec
aad
mov
repnz
orb
xchg
xchg
sub
fucomip
stos
xor
add
sub
scas
aas
cli
mov
xchg
cltd
out
icebp
clc
sahf
outsb
adc
jo
aam
clc
cmc
jg
mov
ror
pop
jne
pop
sub
lahf
xlat
sahf
xlat
cmp
rcl
iret
push
lea
add
pop
int3
pop
xchg
xchg
mov
bndstx
sbb
mov
jle
jbe
outsb
test
adc
punpckhwd
dec
jecxz
int3
fdivs
loopne
jmp
insl
rorb
push
jbe
mov
xchg
sub
loop
dec
xchg
rorb
pop
add
jge
mov
cmp
inc
jne
jnp
into
fadds
call
pop
stc
rcrl
es
test
pop
xor
cld
sub
out
jge
xor
push
jecxz
xchg
lods
dec
mov
add
add
fiaddl
jae
jb
or
fldl
sbb
mov
add
dec
lahf
es
adc
sbb
push
aad
push
loope
gs
cmp
or
and
sbbl
das
test
shrb
js
push
add
push
popa
addr16
sti
sub
js
sub
fsubrs
push
push
xchg
inc
adc
pop
aas
inc
jo
and
adc
xchg
addr16
push
daa
mov
push
add
aaa
es
fs
es
std
xchg
dec
sub
int3
mov
subb
xchg
js
jne
inc
mov
nop
inc
push
jp
add
int
push
xchg
mov
fs
mov
dec
push
mov
test
cwtl
cs
add
xorb
inc
pop
and
fsubrs
fs
fisubrs
inc
mov
fwait
imul
outsl
les
imull
in
mov
sti
jmp
jnp
adcb
out
jno
push
leave
dec
das
jnp
cmp
dec
sti
xor
mov
test
fldenv
lea
mov
insb
imul
sar
or
push
outsl
or
out
cld
sub
add
loope
dec
dec
mov
push
das
mov
xlat
mov
sbb
add
ljmp
stos
push
mov
scas
cmc
jl
out
cmp
push
and
or
push
and
mov
xchg
insl
jl
movsb
cmpsl
repnz
mov
jo
xor
sbb
in
lret
xor
icebp
out
add
pop
in
add
das
int
lods
je
je
xchg
test
xor
pop
decl
push
lret
dec
cmp
and
test
pop
iret
cld
sbb
test
popf
xchg
and
jb
jno
clc
movsl
fsts
sbb
mov
stos
add
out
nop
lock
data16
scas
push
push
das
sub
sti
loop
cli
push
sbb
mov
add
push
hlt
dec
bound
push
ds
adc
dec
jbe,pt
push
adc
mov
xchg
push
pop
and
fdivs
dec
mov
pop
cmp
in
jp
sti
insb
pop
fs
cmpsl
shlb
xor
out
test
cmpsb
dec
lods
push
loopne
test
in
out
movsb
out
or
pusha
inc
stos
sbb
adc
mov
dec
lock
jg
fidivl
and
lock
xchg
sub
je
rorb
aaa
sub
mov
mov
ss
mov
and
sbb
push
dec
sub
push
push
adc
mov
xor
jne
inc
fcmovne
aas
mov
add
mov
sub
inc
mov
xlat
mov
inc
lahf
arpl
xchg
rcrl
mov
pop
cmp
ss
jbe
push
mov
fildl
in
rcl
enter
xchg
outsl
inc
push
sub
pop
push
shl
and
and
and
ret
mov
ja
sbb
mov
xor
negl
inc
jle
pop
inc
dec
push
mov
addr16
cmpsb
mov
mov
add
outsl
enter
xchg
jno
xor
stc
fsubs
and
std
movsb
dec
sbb
loop
into
pop
xlat
pop
loope
out
and
sub
xchg
shl
lret
fdiv
and
pop
nop
pop
pusha
psubusw
aam
pop
xchg
sub
pop
pop
mov
cmpsb
repz
insl
lods
pop
xchg
ss
les
mov
adc
or
sbb
rcrb
xchg
pop
pop
pop
andb
cmc
stc
in
mulb
dec
push
mov
or
xchg
mov
sub
ret
es
dec
aam
xor
dec
add
cmp
jmp
lcall
stos
fidivs
int
repz
subl
or
test
jmp
pop
loopne
jno
xor
aad
jge
leave
aad
int
nop
jmp
inc
mov
cmp
mov
add
fcomi
cld
mov
adc
jmp
lods
mov
outsl
mov
popa
movsb
mov
lea
fwait
out
dec
sbb
mov
push
outsl
sub
out
jg
adc
sbb
mov
push
mov
dec
mov
push
insb
scas
mov
fbstp
sti
mov
call
and
pop
xor
dec
jmp
int3
sbb
imul
fsts
adc
or
sbb
jns
fistpll
xor
sbb
or
into
dec
and
inc
jne
dec
out
fmuls
mov
stc
mov
call
repnz
mov
scas
add
add
bnd
mov
popa
mov
or
sbb
jo
nop
les
icebp
push
jmp
or
es
outsl
push
sbb
dec
jl
aam
dec
inc
call
js
xchg
mov
negl
jl
in
fidivs
pushl
int
jmp
ja
cmp
mov
repnz
sub
sbb
pusha
adc
gs
jl
stos
mov
inc
inc
shll
out
push
push
stos
ret
xchg
lret
mov
imul
fnstcw
xchg
mov
dec
jae
cmpsb
cmpsb
jb
daa
adc
sti
cld
cwtl
popa
imull
pop
sbbl
cmp
dec
in
insb
xor
cmovg
inc
cli
mov
ret
lock
mov
pushf
or
push
in
lcall
dec
aam
nop
mov
dec
and
xor
mov
dec
call
mov
cmpsl
push
sub
sub
sub
and
and
fisubrs
dec
adc
jnp
jne
cmp
aas
data16
dec
jle
xchg
test
push
and
cmovno
outsl
xor
int
lock
mov
clc
lock
ret
sti
mov
xchg
fs
outsb
shrl
pop
jnp
cmc
or
mov
jge
fwait
mov
arpl
cmp
pop
push
sub
sub
lret
push
das
lock
or
ja
mov
mov
jl
bound
pusha
nop
cld
gs
sbb
std
add
xlat
pop
or
jg
pop
mov
xchg
cmp
jmp
shlb
xchg
xorb
jne
jno
idivb
mov
sub
push
in
sbbl
mov
mov
inc
or
inc
rcl
and
sub
xchg
test
lret
pop
gs
std
cmpsb
push
inc
mov
mov
sub
popf
fiaddl
aam
and
adc
lret
mov
leave
ja
cld
in
insb
pop
lods
mov
adc
and
dec
push
cld
in
movsl
mov
sahf
jmp
fwait
mov
dec
sahf
cmp
addb
sub
sahf
add
jmp
enter
pushf
jno
dec
popf
pop
add
xchg
mov
or
or
jb
xlat
dec
pusha
fwait
popf
jg
sub
repz
dec
lods
out
cli
out
dec
lcall
fwait
sub
loop
mov
or
xchg
or
mov
cld
pop
push
stos
push
dec
jg
fstp
les
dec
or
aaa
imul
sti
std
fwait
or
push
rclb
iret
or
jne
adcb
jmp
dec
cs
inc
test
daa
push
jbe
out
cmp
dec
into
sub
mov
cli
mov
repz
xchg
xchg
call
cmp
rcl
pop
rclb
mov
int
push
cwtl
inc
mov
out
or
mov
ss
jmp
mov
out
push
add
lea
mov
push
rcrl
sbb
adc
hlt
pop
inc
xor
aaa
cs
sbb
mov
xchg
movsl
mov
jecxz
insb
in
jle
nop
or
xor
cmp
stos
adc
xor
xchg
add
scas
xorb
fdiv
push
inc
std
clc
push
mov
xchg
mov
mov
and
xchg
arpl
test
test
aam
in
sub
mov
inc
inc
mov
popf
sbb
int3
dec
les
dec
mov
dec
add
lcall
jge
fisttps
cltd
clc
aas
movsl
or
aad
dec
ds
inc
xchg
and
lods
fistpl
adc
xchg
mov
lods
xchg
mov
xchg
mov
sub
out
outsb
push
js
fistps
pusha
outsb
jno
scas
mov
mov
mov
nop
mov
mov
or
or
adc
fbld
or
stos
scas
pop
jo
cld
sub
lock
lods
adc
lret
or
cmpsl
jo
add
movsl
push
into
test
cmp
test
jmp
dec
mov
jae
test
aas
fldl2e
adcl
cmpsl
stos
test
sbb
xor
mov
into
movsb
movsb
dec
sub
mov
or
mov
and
test
in
and
iret
enter
mov
das
clc
sbb
sbb
in
mov
push
lahf
fsubr
xchg
inc
repz
sbb
sub
dec
pop
out
mov
stc
fcomi
lds
cld
push
jle
and
xor
bound
xor
jecxz
push
push
mov
and
leave
addr16
std
test
or
pop
cld
mov
fs
xlat
sbb
gs
test
test
jg
das
sbb
mov
xor
mov
cltd
sub
xor
loop
mov
xchg
int3
add
addr16
in
push
fs
inc
movsl
dec
and
add
bound
push
mov
inc
sarb
nop
xchg
fbld
xchg
xor
iret
ret
adcl
jns
daa
inc
push
mov
inc
pop
and
and
movsl
testl
sbb
inc
cmc
sti
lds
mov
popa
and
cmp
push
push
jb
mov
leave
cmp
inc
push
jno
es
pop
out
mov
adc
aad
insl
je
notl
xchg
xchg
leave
and
lods
add
mov
in
or
imul
movsb
or
inc
sarl
xor
mov
pusha
popa
cmpsl
aad
daa
icebp
pop
xor
adc
dec
dec
fcoms
and
adc
sub
out
adc
jle
imul
adc
add
dec
andl
mov
push
mov
repz
inc
shll
jmp
push
dec
inc
popf
stos
pop
add
mov
outsb
jge
divl
movsl
xor
cmp
and
imul
loope
ror
arpl
cli
ss
sub
cld
inc
enter
xchg
into
xor
lods
sbb
mov
negl
jl
mov
fucompp
pusha
jecxz
leave
fcoml
mov
addr16
or
shl
jnp
fucomp
pop
ljmp
xor
pop
jmp
jbe
xor
jnp
in
pop
sahf
sub
xchg
fiadds
arpl
dec
repz
hlt
std
lret
lret
jb
inc
jle
xchg
les
testl
sbb
imul
mov
aas
pop
jae
mov
fdivrs
inc
push
shrl
mov
adc
mov
pop
jns
cmp
lea
add
cmp
or
aam
cmpsb
push
jp
mov
mov
sbb
dec
insl
test
sub
dec
hlt
mov
mov
cmp
aas
mov
adc
enter
mov
rclb
adc
jge
leave
in
adc
ljmp
push
jge
add
xor
mov
mov
in
shl
mov
mov
outsl
adcl
mov
sub
adc
fs
mov
aad
loopne
dec
xorl
cli
pop
gs
mov
js
adc
or
lret
push
and
loope
add
jae
inc
insb
addr16
repnz
lds
xchg
push
mov
xchg
xchg
mov
out
xor
xor
pop
mov
pop
in
adcb
ljmp
test
lret
cmc
mov
dec
mov
pop
or
push
lods
in
ja
leave
jnp
fisubs
imul
sbb
mov
stc
shr
loopne
and
lcall
xchg
cmpsl
xchg
add
in
das
nop
add
cmp
and
shll
push
xchg
pusha
jbe
ja
mov
roll
cmp
lret
add
in
aas
mov
pop
sub
and
flds
pop
or
add
hlt
pushf
mov
and
push
push
leave
mov
or
mov
pop
xor
in
xor
jno
lret
add
sub
push
mov
mov
stos
in
push
sbb
lret
jo
mov
stos
cmp
and
mov
ds
cmc
out
xlat
push
fmuls
mov
push
pop
sub
cli
rorb
sub
enter
aaa
fldcw
int3
jl
or
adc
leave
mov
or
sub
movsl
xchg
lea
mov
pop
pop
or
fs
movsl
mov
ljmp
xchg
xchg
bound
mov
data16
mov
rolb
aad
bound
pop
or
movsl
push
popa
xchg
dec
sbb
mov
adc
add
adc
adc
mov
add
into
adc
mov
insb
adc
mov
loope
jb
loopne
imul
pop
xchg
jle
and
clc
in
das
xchg
sub
xchg
pop
xchg
negl
clc
loope
jl
dec
ljmp
cmp
testl
push
loope
sbb
xchg
ret
pop
xchg
setae
inc
insb
lds
addl
xchg
ret
xchg
jae
sbb
cmp
and
jle
ds
and
scas
icebp
and
pop
inc
jo
cmpsb
xchg
sbb
jbe
or
sub
and
xchg
pop
jne
jmp
lea
jns
jmp
cwtl
fisubrs
mov
es
cmp
xchg
hlt
mul
out
xor
jl
mov
shrl
cmp
mov
sbb
dec
sbb
mov
and
aas
cs
pushf
aad
aas
aas
mov
fldl
sub
adc
popa
push
xor
jp
loope
mov
sbb
xor
clc
imul
jecxz
xchg
je
out
cld
popf
dec
jmp
pop
or
and
dec
add
ret
pop
dec
loope
test
mov
xchg
mov
xor
adc
addr16
popf
icebp
cld
std
das
push
jns
je
xchg
cmp
pop
rcrl
lret
add
or
repnz
mov
mov
push
and
aas
push
loop
dec
imul
pusha
add
xchg
dec
rorl
xor
clc
and
jg
aad
xchg
mov
mov
movsl
insb
into
in
stc
adc
mov
xlat
push
out
pop
dec
icebp
inc
mov
jge
dec
inc
push
iret
xor
pop
fnstenv
cmc
jp
or
out
icebp
add
pop
lds
ljmp
popf
gs
sub
in
into
push
lods
mov
mov
mov
jo
shr
iret
inc
add
inc
cwtl
push
out
sti
xlat
out
das
add
loop
sbb
pop
stc
aam
lds
mov
cmp
cmpsb
inc
inc
ljmp
les
push
fildll
nop
xchg
hlt
adc
aad
inc
mov
jg
out
lahf
mov
jecxz
lods
jno
xchg
lds
adc
xor
inc
sub
jg
pop
sbb
leave
insl
jne
xor
lahf
mov
dec
inc
push
sbb
cltd
aaa
hlt
and
shl
inc
add
push
sub
lods
popa
push
inc
cltd
dec
push
iret
movsb
sub
out
aaa
or
mov
xchg
xchg
mov
sbb
shr
jo
int
adc
mov
lods
mov
outsl
cmp
jp
add
mov
outsl
mov
ud0
add
jnp
mov
rcl
ret
pop
fldcw
pushf
dec
sbb
xor
lds
sbb
lahf
cmpsl
aam
lret
repnz
inc
and
or
fdivl
inc
xor
push
jge
leave
cmp
xor
out
aas
es
mov
or
fstpt
es
loop
loop
movsb
ja
out
das
xchg
pop
outsl
mov
push
pop
or
mov
fdivrs
daa
ret
ss
push
mov
push
rolb
xor
out
gs
into
mov
test
daa
sub
sbb
in
shll
jo
es
dec
and
loopne,pt
ret
xchg
pop
add
iret
shl
test
insl
cli
lock
pop
cmpsb
inc
dec
repnz
cmpsl
mov
nop
mov
mov
and
sar
es
inc
in
inc
sbb
std
xchg
cli
mov
mov
pop
cmp
leave
push
push
cmp
jge
push
and
sbb
jl
repz
lods
add
dec
and
or
out
in
fs
cwtl
loope
rol
ss
das
daa
ret
xchg
add
push
test
js
scas
stos
clc
inc
ljmp
aad
cmp
jle
cmp
pop
mov
je
push
push
pop
clc
pop
xchg
jns
or
sub
mov
dec
movsl
adc
fldcw
xchg
neg
jne
and
jl
mov
mov
cmp
pop
lahf
mov
addr16
outsl
pop
addr16
push
push
and
pop
imul
aad
sub
jnp
shrl
jl
jo
stc
inc
xor
mov
rolb
sbb
and
int
js
outsb
mov
incb
push
lret
xor
imul
pop
xor
shll
lea
cld
xor
lahf
hlt
loopne
call
sbb
add
push
mov
in
int3
dec
fistps
cmpsb
lods
imul
jg
test
sti
xchg
mov
inc
mov
addl
cmp
push
jg
test
jecxz
movsb
add
add
lods
push
ss
cmp
loop
jge
fs
or
sub
sbb
fadd
daa
shll
push
out
push
test
mov
adc
mov
push
hlt
xor
jbe
or
xor
xor
jne
xor
test
jp
cmp
jge
cmpsl
jle
ds
out
add
xor
sub
xor
dec
dec
shll
insl
jb
insl
jle
js
mov
cmp
mov
sahf
stos
mov
and
lea
inc
test
inc
dec
ds
outsl
pop
ds
icebp
push
test
and
ret
and
jnp
mov
addr16
add
xor
testb
cmp
adc
test
fwait
sub
test
ss
and
je
mov
add
imull
mov
in
add
pop
int3
js
pusha
sub
mulb
add
mov
push
outsb
xchg
aaa
pop
std
inc
bound
sarl
sarb
out
scas
scas
in
test
or
movsb
mov
sub
mov
ljmp
leave
pop
dec
inc
cmp
sub
inc
mov
imul
movsb
pop
push
in
adc
jmp
jmp
sbb
push
mov
jl
inc
xchg
scas
sub
popf
inc
jno
in
test
test
blcmsk
inc
test
cmp
popf
mov
pop
roll
sahf
outsb
dec
mov
cmp
in
cmp
push
pop
ds
push
mulb
inc
orl
fcmovu
dec
imul
lahf
mov
or
fs
adc
lds
ljmp
xchg
xor
mov
sub
adc
mov
daa
push
mov
popf
push
adc
mov
cmp
sarb
cwtl
ds
mov
cmc
daa
add
fldenv
fisubrl
sarb
adc
pop
pusha
push
sbb
jl
sub
or
push
stos
test
pushf
cmpsb
daa
std
adc
ficompl
popa
jo
cmp
fldcw
pop
sbb
mov
xlat
int
mov
roll
or
insl
xor
data16
jno
add
test
or
push
mov
movsl
ljmp
movsb
mov
cltd
sbb
in
jno
imul
xchg
mov
mov
push
aad
jmp
mov
dec
adcl
shlb
ja
push
stc
or
addr16
les
xor
sbb
cmp
jl
in
subb
push
test
fildll
out
mov
aad
mov
or
aas
jae
ljmp
std
repz
je
stos
cmp
iret
cmpsl
jl
fsubp
adc
mov
jg
shl
fadd
and
mov
mov
loope
xor
jmp
fwait
lret
outsl
shrb
cmpsl
sbb
rcrl
lock
lea
mov
xor
xor
mov
jae
out
or
shr
pop
das
add
mov
cmp
scas
popf
xchg
aad
outsl
hlt
add
push
cmp
fsubrl
imul
mov
cli
cli
out
hlt
dec
scas
mov
jg
cmc
push
outsl
jbe
xchg
pop
mov
loope
pusha
mov
scas
outsl
pop
mov
dec
cltd
mov
pop
adcb
imul
jmp
push
xchg
and
push
pusha
push
in
xchg
cltd
cmp
push
sub
push
mov
in
jnp
dec
add
or
xor
pop
das
or
cmp
mov
add
repnz
loopne
cmc
addb
xchg
ret
pop
push
pop
sbb
rcl
out
pop
jmp
in
pop
jle
out
insb
int3
pop
jae
fdivrp
push
cs
stos
inc
stos
scas
pusha
test
inc
and
pop
ss
push
mov
fcmovu
fimuls
sub
adc
inc
sbb
adc
jns
jmp
jge
mov
cmp
inc
adc
int3
shrl
gs
fildll
adc
addr16
pop
mov
mov
jp
jno
mov
les
lds
mov
loop
out
sahf
sahf
pop
loopne
int3
lret
shrb
addr16
xchg
push
daa
xor
pop
or
popf
fcmovnbe
lock
sbb
ja
movb
or
adc
cmpb
or
ret
mov
xor
xchg
loop
mov
dec
cmpsb
inc
sbb
jle
dec
test
imul
stos
pop
filds
je
pop
aaa
fcomip
scas
roll
jbe
loop
mov
jae
jmp
inc
pop
xchg
lret
push
fldenv
imul
negl
pop
add
loopne
add
shrb
les
push
push
int
in
outsb
mov
enter
jp
lods
pop
mov
fnsave
cmp
sbb
in
sarl
stos
shr
insb
mov
jp
mov
jp
jne,pt
sbb
xchg
loope
cmpsb
jp
stos
inc
call
xadd
cmp
add
push
pop
mov
xchg
in
jo
xor
or
shll
xor
fs
mov
push
inc
inc
push
mov
inc
push
dec
ficompl
loop
push
xchg
loope
stos
loopne
mov
cli
sti
mov
jbe
sbbb
test
or
cmp
mov
and
ljmp
test
xor
ja
out
jo
cmp
std
stos
addr16
pop
mov
push
in
mov
xor
lret
imul
jnp
pop
push
pop
rorl
cwtl
clc
outsl
out
lret
fs
push
pushf
daa
fists
sbb
iret
sub
popf
hlt
std
sti
add
and
mov
adc
outsl
mov
add
mov
clc
push
jae
mov
enter
cmp
pop
mov
pop
cli
out
fucomip
xchg
ljmp
push
fstpt
es
cwtl
insb
aad
ss
pop
negl
test
jle
mov
scas
push
inc
ss
les
sub
bound
loopne
xchg
mov
inc
sub
adc
xchg
mov
cli
and
jbe
cld
ss
dec
rorl
into
inc
mov
andb
jbe
es
aam
les
cmp
pop
push
lds
or
jbe
in
or
loopne
xor
test
imul
xor
mov
jae
call
jne
mov
jle
inc
aaa
loopne
call
fmuls
aaa
lods
jmp
jge
mov
sbb
xor
ss
pushf
lahf
out
xlat
divl
fwait
sub
shl
mov
cmpsb
roll
xchg
mov
pop
fcompp
mov
push
fs
jbe
outsb
imul
mov
mov
or
rcr
in
or
cmp
sbb
mov
xorb
push
in
ret
lds
outsl
dec
adc
imul
insl
pop
scas
adc
sahf
mov
cwtl
xor
dec
jp
and
fs
jb
sbb
popf
pop
sub
mov
ss
push
fcom
jg
call
sbb
movsb
dec
jle
sbb
xorl
mov
and
iret
push
cmp
lock
lret
fadds
cltd
mov
mov
and
loope
lods
pop
fsubr
mov
inc
lock
sbb
push
lahf
in
xchg
int
mov
in
repz
push
insb
pop
mull
jl
mov
clc
sbb
ds
pop
jg
out
push
sub
inc
sbb
insl
mov
push
adc
out
mov
jne
out
mov
mov
jo
shrb
or
rclb
enter
ljmp
push
pop
push
or
cmp
push
mov
scas
xchg
shrl
enter
jmp
sbb
and
lret
mov
mov
dec
jno
shl
inc
std
movsb
and
adc
arpl
or
fimull
out
xchg
xchg
mov
pushf
je
lods
test
lret
jnp
nop
dec
xor
dec
arpl
inc
sbb
or
or
xchg
mov
xor
stos
pop
pop
lods
xor
dec
add
std
aaa
aam
pop
adc
sbb
sbb
fdivs
jmp
mov
incb
jae
outsb
mov
sahf
test
cmp
jnp
ds
outsl
fstps
lods
stc
push
jno
out
loop
inc
mov
testl
es
push
push
cs
push
jge
enter
sub
andb
sub
jge
xor
sub
bound
push
dec
ret
in
ds
xchg
fsts
sub
movsl
xchg
add
sbb
pusha
cld
xlat
fsubr
mov
adcb
sub
sub
lret
out
jne
call
sbb
repz
ja
hlt
xchg
or
inc
cli
adc
mov
push
mov
and
in
clc
mov
mov
jo
adc
cmc
lea
cmp
push
sub
cltd
int3
sbb
cwtl
sub
cmc
jno
pop
xor
jno
mov
adc
xorl
leave
fistl
in
jl
leave
movsb
fdivs
inc
sub
int3
sub
push
repz
scas
sbb
cmp
clc
imul
rorb
dec
mov
int3
pushf
addb
out
push
xor
sbb
jmp
movsl
sbb
dec
cli
and
sub
xchg
cwtl
or
add
xor
adc
test
mov
repnz
es
mov
mov
test
push
xor
mov
aam
xchg
outsl
add
mov
dec
divb
xlat
mov
xor
rorl
jo
push
mov
dec
add
in
jno
pop
pop
xchg
mov
sub
xchg
das
fstpl
loopne
lahf
idivb
insl
data16
mov
push
rcrl
dec
push
pusha
sbb
fisttpl
jne
inc
and
push
jecxz
cmp
fcmovnb
rclb
cmpsl
sarb
mov
push
insl
jnp
pop
sbb
adc
or
popa
mov
popf
sbb
jb
insb
shrb
jl
sbb
adc
push
push
mov
insl
adc
sbb
sub
mov
iret
mov
sub
stos
jp
out
sub
jge
push
daa
dec
add
out
je
mov
push
lods
sub
fadd
xor
jbe
test
bound
mov
pop
shlb
xchg
movsl
into
and
sbb
outsl
ljmp
ljmp
loopne
scas
out
mov
bnd
or
rcr
pop
pop
rcrb
loop
mov
in
out
out
sub
mov
jno
xor
in
and
push
or
popa
and
sub
cmp
inc
popa
dec
jge
cld
sub
int3
stc
std
pop
fucom
mov
in
das
pusha
push
fdivrl
out
in
test
gs
stc
mov
js
ret
icebp
lods
sti
rorb
jnp
test
xor
push
xchg
pop
data16
sbb
inc
in
jle
cmp
daa
cli
adc
or
add
das
jle
mov
push
or
movl
rolb
dec
aam
dec
mov
addb
add
nop
data16
mov
inc
in
dec
ret
cmp
loopne
xor
add
movsb
clc
and
fadds
clc
gs
pushf
cmp
mov
mov
xor
dec
mov
ljmp
testl
mov
pop
daa
pop
nop
cmp
repnz
divl
lcall
and
cli
clc
pop
sub
sti
adc
and
add
mov
popa
xchg
and
adcl
adc
inc
fistpll
jno
pop
shlb
adc
mov
je
daa
sbb
push
push
jle
xchg
adc
jle
xor
lahf
call
cmp
xor
pop
pusha
jmp
aas
mov
adc
cs
gs
jo
add
adc
in
das
jo
sbb
push
jns
xor
pop
sub
mov
fdivl
mov
fstps
inc
push
sbb
push
jns
and
mov
mov
gs
mov
push
repz
sahf
icebp
cmpb
or
pop
pop
fdiv
adc
xor
jae
lahf
jg
mov
mov
andb
push
mov
data16
sbb
jno
dec
popa
mov
add
xchg
mov
sub
iret
cmp
cmc
aaa
adc
lret
mov
dec
ss
mov
mov
nop
lods
sbb
push
adc
imull
pop
or
les
push
adc
pop
insl
mov
jnp
push
push
mov
mov
adc
cli
lret
aaa
mov
out
jae
pop
mov
inc
mov
add
repnz
adc
outsb
jns
lahf
lea
aas
adc
into
cmp
fwait
stos
loope
fisttps
add
imul
repz
xchg
in
push
inc
push
test
mov
push
ret
lret
repnz
mov
sbb
jg
fsubr
and
hlt
aaa
ds
xor
into
icebp
xchg
xor
nop/reserved
ficomps
fcoml
int
hlt
pop
dec
and
sub
cmp
imull
shl
out
loope
sti
add
imul
out
add
xchg
jo
inc
add
push
adc
cmpsb
lods
add
cmp
push
adc
xchg
mov
push
daa
or
dec
push
jmp
mov
in
adc
gs
bnd
mov
in
lock
dec
adc
fucom
icebp
les
mov
push
pop
mov
subl
les
adc
jl
clc
ret
mov
loope
push
shlb
or
sub
add
negl
fsubrs
pushf
mov
mov
xor
pop
stc
push
push
and
mov
ljmp
and
add
mov
xor
lods
lea
lods
jbe
lds
hlt
faddl
pop
push
mov
cli
and
les
je
and
fsubp
rorb
test
mov
bndldx
pop
add
mov
mov
sub
pop
subl
sbbl
sbb
adc
lea
adc
ss
pop
pop
cmc
bound
cmp
lods
jns
nop
loope
dec
int
xchg
add
ljmp
inc
mov
pop
pop
scas
popa
popf
adc
mov
push
mov
pavgb
mov
outsb
mov
mov
jle
daa
pop
xchg
sbbb
outsb
mov
cmc
push
or
mov
shrb
aam
das
hlt
xchg
or
cmpsl
xchg
push
mov
cli
adc
stos
xor
pop
movsl
xor
cmp
and
lds
pop
test
sub
cmpsl
sub
fs
ss
push
adc
inc
sbb
inc
and
leave
pop
adc
jp
or
cmp
sub
notl
test
push
addr16
out
mov
cli
jnp
inc
cmpsb
jo
push
and
pop
daa
mov
jge
lahf
add
pop
cmp
ret
les
mov
dec
movsl
fidivs
xchg
test
inc
jge
jae
mov
inc
jcxz
rcr
sbb
push
fldt
les
cmp
or
movsb
sarb
das
js
sbb
pop
stos
mov
and
cs
sti
and
aad
push
pop
adc
add
pop
sbb
sbb
mov
push
fdivr
mov
mov
movsl
sbb
test
mov
xadd
xchg
push
mov
inc
fnstenv
mov
mov
leave
dec
jmp
test
adc
and
cmp
cmp
test
or
ficoms
hlt
or
cld
xor
xor
in
push
mov
mov
xor
cmp
jo
and
imull
xor
mov
lods
sbb
lcall
mov
lods
mov
jns
mov
movsl
push
adc
xor
jp
cmp
jmp
xchg
jmp
cs
and
cmp
dec
jne
fwait
pop
dec
jae
jle
and
shlb
jno
push
test
push
insl
test
mov
mov
lods
push
loope
and
cld
stc
hlt
ja
jecxz
shlb
pushf
outsl
pop
push
in
cmp
movsbl
lahf
test
adc
mov
cli
sahf
jp
out
pop
cmp
mov
or
mov
es
in
push
outsl
imul
scas
and
in
movsl
aaa
adc
shrb
test
or
movb
sbbl
or
pop
jnp
or
and
push
pop
lcall
shlb
add
cltd
pop
pop
aad
lret
sub
arpl
lock
in
popa
mov
add
ret
and
mov
iret
imul
push
ret
cmp
clc
outsb
cli
lea
jge
aad
inc
jl
xchg
xchg
cmp
cmpsl
push
inc
daa
dec
into
xchg
dec
stc
push
mov
int
and
mov
test
call
mov
movsb
aas
sub
xchg
out
ss
in
lcall
repnz
repz
inc
fcoml
rclb
sbb
stos
pop
clc
mov
mov
sahf
flds
sub
aad
mov
lods
xor
lock
fsts
and
data16
jle
sarb
jl
mov
sub
daa
lret
add
mov
les
or
cmpsb
rcr
shr
jae
aad
sti
imul
push
cld
mov
lods
add
cmp
inc
and
push
testb
jne
pop
imul
fcomps
idivl
inc
repz
call
int
xor
cmp
lcall
mov
fwait
inc
insl
out
mov
hlt
pop
femms
dec
rorl
fimull
arpl
inc
in
jecxz
cli
outsb
cmp
dec
adc
inc
pop
ljmp
cmp
cs
call
scas
inc
cmp
out
mov
mov
push
or
hlt
insl
andl
sub
or
in
das
pop
inc
loope
sbb
push
sub
push
fwait
jns
cmpsb
bound
cs
cmp
cs
mov
pop
pusha
cmp
and
enter
iret
sbb
and
loop
stos
jg
int3
cmpsl
sbb
rcr
mov
lcall
gs
lods
test
jecxz
lret
dec
sub
fsubrs
ljmp
mov
mov
lcall
jmp
push
mov
mov
push
inc
mov
in
jns
inc
inc
push
push
mov
adc
adc
adc
rorl
cmp
sbb
jne
inc
jge
xchg
and
xor
mov
mov
cmp
push
or
and
sub
jle
int3
xor
inc
rol
xchg
xor
lahf
sbb
push
pop
add
xchg
arpl
fistpll
in
inc
jl
sbb
into
sahf
pop
mov
mov
xchg
mov
addr16
pop
jecxz
inc
lahf
cmc
dec
lea
pop
fwait
fwait
xchg
sbb
stc
lcall
push
mov
dec
test
outsb
mov
xchg
mov
rcr
mov
dec
and
jecxz
daa
xor
mov
mov
ret
movhps
push
add
push
fwait
test
sub
dec
and
push
pop
bound
push
mov
fcompl
push
xor
sub
adc
cmpsb
lock
xchg
jo
popf
or
adc
sub
out
gs
xchg
adc
shl
pop
dec
add
mov
fisubl
out
mul
bound
xor
inc
dec
lock
dec
mov
out
loop
test
addb
mov
inc
push
fistl
adc
pop
adc
in
cmp
sub
sub
adc
mov
jle
push
pop
negl
pop
adc
push
push
push
lds
mov
jle
jae
mov
mov
and
mov
lar
cmp
mov
enter
mov
sub
lds
dec
cwtl
fdivrl
mov
aaa
jle
push
dec
sbb
daa
jp
imul
xchg
das
dec
loopne
in
movsb
repnz
aaa
aam
rcrl
adc
repz
scas
or
mov
jbe
add
insl
test
sub
into
ret
mov
and
cmpb
jle
inc
pop
add
sahf
sbb
aad
jnp
pushw
mov
xor
sbb
fstl
das
insl
jno
loop
mov
int3
push
pop
mov
pop
mov
push
mov
les
fwait
dec
push
adc
mov
xorps
mov
out
and
in
fwait
dec
daa
lret
dec
push
loop
and
mov
jnp
xlat
in
lods
test
jo
adc
push
fxch
roll
inc
mov
rcrl
dec
cld
decb
rolb
xchg
repz
xchg
and
test
insl
mov
dec
mov
dec
fadd
mov
sbb
int
icebp
mov
push
jl
or
xor
test
push
lret
fisttpl
popf
xor
adc
dec
mul
mov
mov
out
lds
cmp
and
orl
mov
dec
enter
fcom
inc
loope
sbb
or
sub
test
test
in
fwait
imul
pop
jb
xchg
mov
push
popa
test
mov
stos
push
inc
xchg
xchg
cmp
data16
clc
jns
sub
sbb
push
add
es
mov
popf
int
enter
or
sub
push
je
cmp
mov
inc
cmp
jle
daa
push
movsl
jne
cmpsb
fdivrs
adc
mov
fstps
cmp
movsb
js
js
dec
mov
mov
mov
sub
dec
arpl
sarb
sub
and
jo
in
cmpsl
arpl
icebp
mov
bound
cmp
es
or
stos
sub
cmpsb
or
push
je
div
or
ja
and
inc
jmp
ret
mov
sbb
sub
mov
fdivp
int3
fisubs
clc
aas
jnp
xor
sub
sub
int
dec
in
mov
inc
in
jg
lret
shlb
outsl
andl
lds
cmp
pop
pop
out
loop
xor
lret
faddp
mov
insb
negl
ret
shlb
xchg
in
ljmp
daa
sbb
lret
jge
inc
mov
cmp
cmp
popf
mov
mov
bound
push
das
pop
jmp
pop
pop
sub
cmp
es
ret
dec
cmp
inc
lds
pop
fwait
pop
cmp
pop
loop
jb
loop
rolb
fs
rcll
jg
popf
ret
lcall
mov
imul
addr16
push
adc
imul
in
xchg
mov
adcb
mov
push
mov
or
and
mov
pop
jl
dec
or
or
lea
mov
push
movsl
sub
fs
or
das
push
xlat
push
xor
pop
inc
ljmp
xor
xchg
cmp
into
inc
mov
mov
mov
frstor
movsl
fisttpll
mov
sbb
stc
pop
fcoml
sbb
sbbl
add
shlb
stos
mov
add
xchg
xchg
outsb
sub
aam
and
leave
jns
dec
call
pop
out
pop
adc
inc
pop
outsb
cmp
bound
cli
sbb
loopne
mov
movl
lret
xor
pop
push
mov
into
jmp
push
xchg
mov
out
cs
push
push
mov
push
sahf
imul
pop
fwait
gs
push
daa
mov
pop
add
adc
jbe
insl
xlat
push
scas
adc
out
sub
mov
dec
add
push
jmp
fadds
jl
ja
sbb
in
jp
mov
xchg
jge
mov
push
mov
xchg
adc
mull
std
sbb
sub
mov
std
adc
les
imul
push
aas
sub
pop
cbtw
js
cltd
incb
mov
pop
sub
mov
adc
pop
fisubrl
lock
cli
mov
andl
or
mov
xchg
fcomps
mov
je
imul
lock
push
xchg
cmpb
stc
out
mov
and
push
pushf
shl
push
lods
xlat
or
jo
add
dec
push
outsb
or
push
pushf
fwait
out
mov
xchg
sbb
xchg
in
iret
into
cmp
pop
cmp
mov
cmp
insb
stos
mov
scas
fwait
imul
mov
mov
cld
sbb
cmc
dec
stc
repnz
mov
or
ret
pop
clc
jge
add
or
out
aaa
jbe
xor
xchg
pop
pop
test
pop
fcmovnb
sahf
add
ds
lock
outsl
test
jmp
dec
pop
or
add
mov
mov
scas
imul
push
scas
gs
mov
and
arpl
ja
repnz
sbb
fnstsw
roll
push
repnz
fldl
mov
in
ja
pop
test
push
icebp
lcall
ss
mov
lcall
test
inc
outsl
sahf
fldcw
cmp
fucomip
lock
lret
sahf
cmpsl
sbb
cmp
repnz
out
sub
fistl
xchg
mov
mov
push
jp
hlt
jl
mov
subb
stos
loope
adc
sbb
mov
cld
movsb
sub
or
roll
dec
ret
or
aas
xchg
jae
mov
rclb
and
cmp
test
insb
pop
mov
std
dec
int
sete
mov
cmp
inc
xchg
xchg
in
mov
in
shrb
inc
dec
cld
addr16
cmp
push
popa
btc
cmpsl
test
xchg
adc
cs
jbe
mov
jnp
xchg
dec
cmp
push
sti
cmpsl
andl
and
and
pop
mov
in
loopne
loope
fsubrl
push
daa
sub
mov
pusha
cmp
loope
stc
scas
rcr
mov
xor
or
orb
fwait
pop
cli
jmp
mov
dec
rcrb
and
cmp
pop
push
push
adc
xchg
ret
pop
push
xchg
cmc
je
arpl
js
add
iret
enter
jnp
rclb
push
fsubrs
mov
imul
ss
mov
imul
and
loopne
stos
push
scas
stos
sbb
mov
fisttpll
sbb
mov
ss
in
push
sbb
ss
push
and
lret
mov
orl
cmp
lock
mov
in
pop
enter
das
sbb
mov
test
adc
cmc
pop
dec
lods
insl
frstor
mov
ja
cvtps2pi
insb
jno
inc
sbb
or
cmc
mov
jo
arpl
push
and
movsb
push
sbb
pop
mov
mov
inc
fidivrl
shr
adc
cli
std
fistpl
and
cltd
adc
xchg
fs
mov
loop
es
sahf
mov
add
adc
jns
pop
dec
xor
aaa
xor
dec
fisubrl
or
xchg
mov
iret
sub
adc
pop
push
pop
cltd
pop
xchg
mull
data16
and
mov
cmp
dec
loopne
aaa
icebp
shll
stos
jbe
inc
xchg
sahf
loope
shll
push
aaa
xor
xchg
sub
push
jae
hlt
push
jl
mov
sub
or
ret
test
adc
sar
aam
sub
add
mov
lahf
and
ljmp
ret
fwait
test
or
dec
push
cmp
xchg
imulb
jecxz
clc
mov
mov
into
xchg
jmp
mov
daa
mov
push
cmp
pop
shl
xchg
fwait
aam
das
cmc
out
and
add
dec
jno
imul
mov
pushf
icebp
or
adc
pop
cmpsb
sahf
or
mov
push
test
xchg
dec
cmp
cld
daa
sub
dec
lock
push
jae
mov
fstps
sub
test
fwait
push
dec
sti
adc
gs
dec
mov
in
xor
fidivrl
aas
nop
js
call
jne
sti
jmp
inc
hlt
xor
xor
sub
mov
sub
push
fstps
into
movsb
ret
cmp
scas
aas
or
or
int3
xor
call
dec
push
mov
cmp
mov
ja
into
dec
out
mov
pop
jecxz
xchg
xor
cmp
sub
icebp
nop
sub
repnz
mov
jae
idivl
push
pop
fwait
test
add
cmpsl
push
push
dec
aam
divl
mov
orb
sti
aas
fnstenv
mov
push
popa
fidivl
push
aam
dec
movsb
jecxz
xchg
sub
push
push
lret
test
xchg
and
cmpsl
sbb
stc
jne
std
out
fisttps
es
push
pop
sahf
pusha
and
mov
dec
repz
jp
ja
out
cltd
in
scas
imul
push
pop
push
mov
inc
cwtl
outsl
mov
scas
jae
and
add
imulb
jl
adc
pop
fsubrp
outsb
ret
jmp
into
pusha
decb
negb
push
add
lcall
sbbl
jecxz
clc
mov
cwtl
scas
shrl
dec
add
leave
and
je
imul
adc
sbb
push
stc
inc
adc
mov
inc
push
lea
into
adc
mov
das
mov
mov
lea
lret
outsl
xchg
adc
sbb
fwait
pop
push
xchg
je
cltd
cmp
pusha
mov
push
lock
and
call
xor
pop
mov
adc
rcrb
push
mov
jmp
dec
lock
adc
data16
es
test
cmpsb
fwait
add
lcall
sbb
sbb
xor
jns
add
xor
pusha
or
scas
mov
mov
sbb
push
into
iret
cld
xor
push
test
mov
sub
test
loopne
push
cmpsl
inc
pop
cld
dec
xchg
push
cmpsl
into
repnz
fprem
push
push
dec
mov
dec
les
and
ljmp
cltd
inc
jecxz
jl
nop
jmp
dec
jno
jns
fimull
in
andb
mov
pop
mov
cmpsb
cmc
cmc
push
adc
add
in
mov
xor
lods
movsl
add
pop
jno
push
xor
outsl
sub
push
rol
mov
sbb
jg
mov
push
cmc
fildl
int
and
cs
js
sub
and
inc
lahf
movsb
dec
or
out
and
cmp
adc
pop
push
shrl
mov
fcmovb
mov
call
xchg
xchg
loop
out
mov
adc
ja
push
test
stos
nop
mov
and
popf
divb
movsb
jno
mov
mov
push
leave
push
in
cmpsb
in
add
scas
jno
adc
iret
xchg
sahf
pop
inc
stc
sub
sti
loope
fs
das
fistpll
add
mov
icebp
inc
inc
scas
popa
xor
xor
add
pop
xchg
mov
push
loopne
pop
cwtl
dec
pop
dec
mov
fdivr
nop
pop
subb
xchg
je
mov
ret
ja
arpl
xor
les
arpl
outsb
inc
lahf
cmp
lahf
mov
ss
into
ret
stc
add
lock
pop
shlb
cli
mov
cld
inc
fldt
xchg
and
push
js
sbb
js
out
ret
mov
aaa
lea
jno
pop
push
arpl
adc
inc
dec
inc
sbb
stc
mov
cwtl
mov
cli
jbe
scas
cmp
cmc
icebp
loope
popa
inc
jae
cmp
xlat
adc
out
sub
and
adc
mov
ja
fbld
add
test
cltd
lcall
adc
repnz
jnp
sahf
add
push
pop
scas
pop
mov
pop
push
cmpsl
jb
sub
inc
or
es
idivl
ss
shr
call
insl
jmp
or
loop
sbb
pop
idivl
icebp
jo
scas
push
push
cltd
cmpsb
sti
mov
xchg
fiaddl
rcrl
xchg
adc
gs
repnz
pushf
int
adc
fstp
mov
xchg
aaa
push
scas
push
lcall
mov
and
lahf
and
pop
ret
aas
shr
mov
sar
jge
icebp
push
add
cmp
ja
pop
lret
or
aas
sbb
inc
pop
mov
pop
mov
ret
add
jp
or
stos
rol
ret
pop
jl
and
mov
xorl
test
cmc
outsl
jecxz
adc
sti
cmc
cmp
xchg
jb
lods
fcomps
es
push
cmp
out
jnp
adcb
lret
pop
mov
shrl
lock
loop
push
cmp
cmp
mov
in
mov
daa
in
push
jmp
cmpsb
sarb
push
xchg
mov
inc
inc
push
mov
mov
sbbl
jl
in
lahf
mov
dec
das
rcl
ds
or
cmp
dec
pop
adc
mov
rorb
fcoms
hlt
and
push
mov
xchg
adc
jg
xchg
pop
push
lret
test
out
les
or
inc
mov
inc
test
sub
into
xchg
loop
rcrb
mov
xor
fwait
sbbb
fsubr
adc
addr16
insl
add
outsb
inc
mov
outsb
iret
cli
lret
ss
push
lahf
aad
push
sbb
inc
clc
xchg
xor
xchg
mov
lea
aad
inc
dec
mov
call
lahf
xor
push
test
sti
pop
add
in
sub
rol
in
inc
or
mov
add
add
roll
xchg
leave
in
outsb
shlb
mov
lcall
jmp
push
arpl
mov
push
and
lds
sahf
push
data16
dec
mov
roll
test
ja
pop
fnstsw
lret
negl
push
dec
cld
inc
lahf
in
adc
cmpsl
clc
icebp
cmp
pop
dec
dec
insb
call
mov
call
dec
int
add
dec
lret
mov
repz
inc
ljmp
aam
mov
ss
mov
ljmp
jl
scas
mov
mov
popf
scas
aaa
mov
repnz
outsb
xor
scas
mov
adc
dec
xor
orb
inc
insl
ljmp
mov
inc
and
repnz
enter
aad
jns
xor
adc
movsb
ljmp
icebp
xor
sbbb
cmp
shlb
pop
add
fnsave
hlt
or
lods
faddl
pop
gs
push
mov
add
mov
xchg
fistl
in
stos
push
popa
cli
xchg
xlat
out
ljmp
jl
je
mov
xchg
xor
mov
sbb
push
inc
cmp
jecxz
dec
test
int
cmp
sbb
ficomps
mov
xor
std
lahf
or
cmp
jno
xchg
inc
jno
pop
sub
nop
sahf
insl
xchg
orl
mov
cmp
mov
pop
fidivrs
stos
pop
pushf
or
adc
loopne
subl
lods
adc
imul
rcr
addr16
faddl
fbld
test
dec
out
js
and
jb
mov
cmpsl
pop
jp
mov
add
gs
cld
fsubrl
inc
shl
mov
mov
jnp
and
mov
push
gs
pop
inc
cltd
lahf
daa
push
pop
dec
or
cmp
or
mov
xor
dec
inc
out
add
jl
mov
std
mov
lahf
push
pop
int3
sub
lret
in
test
pop
gs
sbb
ss
push
lods
and
xchg
lret
and
stos
fstp
fmul
mov
in
xchg
cld
cmp
inc
test
dec
dec
push
sub
mov
jno
adc
inc
jle
inc
and
pop
cmpsb
jns
inc
imul
jno
outsb
mov
test
rol
test
xchg
push
jae
sub
or
mov
out
mov
pusha
mov
pop
std
adc
out
mov
mov
sub
outsl
cld
xor
mov
lcall
out
sbb
cld
fdiv
insl
bound
inc
inc
lds
enter
mov
mov
jle
push
dec
cmp
daa
stos
lock
dec
mov
test
loopne
jp
negl
gs
stc
sub
and
pushf
mov
sbb
lcall
in
cmc
mov
jmp
cltd
movsb
inc
fst
cmp
push
pop
push
cmp
ja
mov
jnp
cs
clc
cmp
cmc
fcoms
sub
movb
icebp
ret
lea
pop
add
imul
shrb
jp
stos
mov
pop
mov
out
ljmp
daa
mov
jno
int3
test
and
pop
jp
jge
cmp
cmpsl
inc
and
je
or
mov
std
push
scas
lret
imul
jns
out
jo
pop
arpl
loop
andl
adc
jle
fsubl
cmpsl
aam
or
jne
aad
imul
outsl
ja
xchg
imul
repz
aas
xchg
push
cmp
scas
sub
add
ja
mov
mov
cmpsl
mov
je
insb
dec
loope
test
adc
scas
sbb
in
and
icebp
xchg
arpl
add
out
push
push
jnp
push
imul
and
push
outsb
xchg
jbe
call
clc
adc
mov
add
push
pop
out
not
xchg
sub
mov
xor
pop
pop
add
js
xor
addl
or
sub
sbb
aam
shl
lahf
mov
adc
lods
pop
movsl
xor
cmp
mov
sbb
mov
push
cmc
mov
repz
cmp
sbb
cmp
insb
pop
test
sbb
xlat
dec
ficompl
cmpb
xor
ljmp
push
jp
and
mov
arpl
imul
dec
mov
adc
loop
push
dec
inc
into
dec
inc
test
lock
je
aad
in
cmpxchg
dec
je
jne
mov
push
sbb
out
sbb
cmp
dec
fs
pop
add
loope
sub
es
jmp
fwait
dec
int3
ds
sarb
pushf
loope
lds
pop
pop
adc
popf
mov
ret
push
aad
lret
pushf
jnp
ss
insl
rclb
cmp
and
pop
cmpsb
ds
jle
mov
daa
ss
out
xchg
in
mov
cli
xor
xor
int
in
sbb
aad
loop
pop
lock
in
pop
jl
ficomps
and
js
xor
ror
imul
push
ror
int
ret
push
fidivrl
inc
cmc
popa
xchg
cltd
pop
sub
popf
fildl
movsb
test
sbb
ja
stc
add
pushf
das
leave
loope
ficompl
add
push
out
fstp
and
sub
fisubrl
call
shlb
sbb
repz
popf
adcl
test
inc
add
xlat
xchg
cmp
push
mov
xchg
sub
dec
dec
rorl
es
test
insl
scas
jb
jbe
dec
xchg
aas
imull
cmp
cmpsb
pop
xchg
push
dec
jo
jno
jbe
pop
dec
inc
dec
std
push
or
mov
mov
dec
in
mov
add
add
lds
cs
aas
add
cmpsb
repz
adc
out
fcmovb
jmp
lcall
in
hlt
xor
icebp
mov
xchg
pmaxub
add
xchg
inc
jmp
cld
and
dec
pop
xlat
ljmp
cltd
inc
mov
dec
fimull
push
pop
cs
dec
push
mov
mov
int3
inc
mov
cmpl
dec
jns
or
dec
enter
jns
push
cmp
movsb
ljmp
mov
push
cmp
mov
insl
sbb
movsl
pop
mov
es
stos
loopne
std
sub
dec
rorl
popf
sub
sbb
insl
cmc
adc
dec
and
cwtl
jnp
les
and
mov
pushw
fs
sbb
es
cmc
lret
stc
out
push
mov
jo
lods
and
rcrl
test
loop
sbb
sbb
aaa
inc
xchg
lret
mov
in
fistpl
mov
jbe
stc
stc
nop
inc
imul
add
fs
das
and
movsb
sahf
outsb
inc
mov
mov
mov
xchg
sbb
mov
sahf
aas
inc
xor
and
sbb
mov
mov
jl
xchg
mov
fidivs
daa
ficompl
jno
fbstp
bound
push
or
fsubl
jbe
and
sub
gs
out
call
or
std
in
lea
arpl
nop
pop
sbb
mov
sbb
js
call
xchg
in
lret
push
sti
out
dec
xchg
hlt
xor
rcr
mov
adc
out
inc
xor
aam
hlt
fldenv
mov
call
inc
push
adc
mov
jl
bound
adc
daa
mov
lods
int
cmp
stos
fldl2e
aas
repnz
xchg
fdivrs
aad
lea
cmp
inc
into
stc
outsl
shrb
rcrb
fs
sbb
push
fwait
and
mov
add
aam
pop
repnz
test
mov
xor
xchg
imul
call
fsts
pop
dec
fstl
xchg
pop
lret
sbb
inc
in
lcall
stc
ret
xor
loop
inc
clc
icebp
adc
xchg
fdiv
dec
cmp
mov
jno
jp
mov
lcall
aad
subb
aas
mov
or
int
lock
sbb
or
sbb
push
movsb
jnp
lds
inc
mov
shrb
push
xor
mov
lock
and
jge
pop
nop
sub
stos
jl
add
mov
fidivrl
xor
notl
lret
xchg
xor
scas
stos
mov
cli
hlt
test
test
pop
out
pop
shll
mov
pop
lods
ja
test
int
xlat
cli
xchg
mov
lds
in
mov
pushf
pop
push
popf
inc
jae
shrb
clc
imul
jno
sbb
not
daa
pop
pop
int
and
mov
mov
jb
test
outsb
xor
fs
jne
mov
push
sub
js
mov
xchg
sub
push
mov
das
or
bound
push
mov
push
ret
xor
test
je
in
mov
mov
lret
push
cmp
stos
repz
ljmp
xor
mov
fdivrl
addr16
ja
push
jbe
mov
mov
rcl
test
mov
data16
jge
dec
lock
imul
scas
mov
dec
push
in
in
mov
notl
inc
lods
mov
cmp
aam
jae
jns
jg
sub
mov
jl
push
outsb
sub
cmp
js
mov
test
dec
adc
adc
mov
or
sti
gs
ret
jnp
movsb
rcrb
jecxz
mov
cld
and
fisttpl
mov
enter
js
dec
or
inc
add
xorl
sarb
mov
cmpb
les
movsl
xchg
xorl
cmpsl
xor
in
nop
add
sti
inc
mov
lds
pop
xorb
pop
rclb
mov
sbb
out
xchg
insl
adc
scas
shrl
nop
lea
dec
out
mov
xchg
push
jecxz
jno
add
fldt
push
rcll
stos
fwait
jecxz
jecxz
dec
add
test
dec
in
cmovb
imul
inc
mov
daa
jne
lcall
or
repz
or
xor
and
or
adc
not
mov
pop
fcoml
dec
mov
inc
mov
pop
les
popf
cmp
inc
aam
or
xchg
push
insb
adc
adc
movsl
xchg
or
notl
inc
xchg
sarl
test
jb
xchg
test
jmp
jecxz
and
popf
outsb
mov
outsl
fdivp
sbb
or
dec
loope
mov
inc
arpl
jmp
fimull
adc
imul
lret
cwtl
sahf
jnp
and
mov
movsb
icebp
in
dec
fsubl
jl
cld
sbb
sbb
sbb
jecxz
rcll
jns
aaa
mov
sti
dec
sbb
and
in
pop
insl
jbe
subb
xor
loopne
mov
icebp
clc
dec
mov
jo
test
dec
xchg
or
xchg
add
imul
sbb
mov
in
inc
je
ljmp
dec
fdivr
mov
es
das
sahf
pop
inc
sub
ret
jecxz
scas
addr16
cmp
rorb
jnp
dec
cltd
mov
mov
inc
or
arpl
add
shll
adc
call
lahf
and
pop
mov
mov
push
repnz
jp
ret
pusha
int
pop
daa
push
fisttpll
xlat
aas
mov
mov
mov
shll
cmp
filds
sbb
xchg
fldenv
inc
dec
scas
sub
clc
inc
xchg
sub
jns
xlat
adc
sbb
xchg
sbb
shlb
push
jg
or
jecxz
sbb
push
xchg
fdivs
lods
pop
jae
lock
movsb
adc
sti
cmp
dec
in
inc
jno
pop
add
adc
pop
and
lock
hlt
mov
cmp
sahf
xor
dec
push
or
mov
dec
pusha
pop
jno
xchg
mov
pop
lds
sub
or
std
xorb
jnp
loope
push
and
xor
jge
movsl
ds
fisttpll
inc
jmp
cmp
mov
pusha
ret
mov
imul
movsb
mov
xor
jle
jmp
mov
dec
std
sub
in
into
stc
sub
pop
mov
nop
scas
pop
adc
jns
mov
int3
or
clc
mov
lock
xor
shll
movsl
push
ror
lock
hlt
bound
outsb
ss
filds
cmc
push
add
adc
cmp
jl
dec
push
scas
mov
cli
mov
cmp
push
lret
stos
pop
lret
idivl
xchg
stos
xor
or
sub
cmpb
inc
mov
fcmovbe
sbb
ret
inc
cmp
mov
int3
sub
mov
push
xor
push
es
repnz
std
jmp
xorl
xlat
add
je
jle
cmpsb
cld
sarl
int
jae
jns
ret
or
jo
jl
adc
pop
xor
or
sub
popf
fnsave
pushf
dec
adc
jb
mov
dec
divl
cmp
xchg
mov
inc
or
xchg
mov
addr16
jg
or
sub
shll
rolb
sarb
fldt
mov
fwait
or
xor
xor
and
cmpsb
push
lcall
neg
cmp
or
xchg
decl
adc
mov
iret
dec
fisttps
int
rcrl
cmp
lahf
push
push
pop
xchg
or
sbb
mov
mov
mov
adc
add
in
es
data16
sub
int
xchg
inc
cld
pushl
sub
xor
lock
fsubrl
shr
cmp
fs
ja
mov
out
inc
add
std
shrl
dec
inc
jle
mov
dec
shl
xchg
shrl
int3
sbb
mov
mov
dec
je
scas
loopne
dec
push
mov
test
pusha
out
sub
out
dec
mov
setl
sbb
test
xor
bound
addr16
mov
cmp
or
sub
fwait
pop
cmp
out
data16
scas
push
xor
je
jns
xchg
pop
jbe
inc
pop
xchg
mov
and
call
cli
pop
repz
jne
and
adc
test
and
sub
std
adc
jp
push
add
pop
imul
int
aas
sahf
in
out
test
add
or
xchg
stos
mov
sub
cwtl
jne
xchg
loope
pop
aad
mov
sbb
fcoml
cmp
cmp
jl
dec
scas
in
sbb
loop
cmp
xchg
lret
mov
or
cmp
popf
push
leave
mov
test
cmp
stc
inc
add
push
mov
sbb
mov
mov
pop
push
xor
sbb
data16
call
and
xor
xchg
jmp
xor
sub
cli
popa
jmp
pop
fldcw
loopne
fidivrs
mov
jmp
mov
and
or
jo
repz
negb
mov
xor
mov
outsl
es
dec
cltd
or
ljmp
push
js
push
ret
dec
mov
and
mov
repz
ficomps
jnp
scas
sarb
aas
or
dec
push
jecxz
ja
shl
icebp
movsl
or
int
mov
pop
dec
dec
shlb
pop
or
dec
xor
shr
add
cwtl
jp
lret
imulb
push
sbb
pop
and
cmp
aad
in
dec
lret
movsb
jnp
push
iret
fadd
rcll
das
repz
nop
jp
daa
ds
jbe
les
scas
mov
in
into
mov
or
mov
and
dec
out
loope
dec
or
mov
or
mov
flds
xchg
jge
lret
repz
repnz
les
sbb
cmp
cmp
inc
inc
sahf
jns
scas
xchg
jl
dec
add
std
arpl
movsl
xchg
ret
cltd
jno
scas
lcall
mov
jns
sbbb
imul
jecxz
jecxz
aaa
mov
mov
dec
jg
loopne
adc
xchg
int3
shlb
and
lock
mov
push
mov
hlt
or
dec
orb
cli
xchg
ds
adc
nop
cmp
orl
push
sub
push
shll
add
mov
xchg
cmpsl
sbb
jo
xor
mov
shrl
dec
fbld
pop
mov
cld
mov
and
add
pusha
sti
es
inc
xor
stos
lods
or
pop
sbb
dec
jbe
xchg
or
mov
mov
and
addr16
dec
adc
xchg
ja
xor
leave
stos
int
ret
adc
popa
lods
jmp
cs
cmp
jnp
pop
and
jle
movsb
push
popf
inc
cmp
call
mov
ds
pop
xor
stos
and
stc
adcb
mov
cmp
fwait
adcl
inc
out
mov
lcall
cwtl
mov
or
mov
adc
fistl
mov
dec
jle
mov
add
pop
dec
cmp
or
xor
mov
shll
jmp
jnp
dec
pushl
outsl
inc
pushf
outsl
out
pop
out
fistps
leave
push
add
xor
jo
mov
cmc
xchg
add
push
mov
inc
lret
or
mov
dec
and
add
shlb
push
push
das
clc
insb
int
adc
hlt
and
cltd
xchg
push
aad
mov
mov
xlat
add
lods
sbb
je
fmull
push
jns
mov
pop
int3
aas
xor
gs
std
xchg
pushf
jno
int
cs
dec
add
mov
clc
mov
pop
or
leave
outsb
inc
ror
stos
xor
popa
ja
or
faddl
roll
aaa
pop
inc
push
ret
in
add
aas
sbb
sub
dec
jge
aas
dec
adc
jecxz
inc
push
stos
inc
push
icebp
testb
mov
cltd
scas
push
je
das
add
cs
addr16
out
pop
stos
movsl
cmp
lods
iret
out
push
into
icebp
cmc
int3
scas
imul
mov
mov
loope
cmpsb
fcomip
jmp
fwait
adc
adc
flds
je
pop
fldenv
lcall
mov
addb
ret
xor
jg
scas
in
daa
js
test
sub
cwtl
dec
mov
xor
jle,pt
loopne
jns
push
cwtl
mov
dec
cmpsb
movsl
out
rcll
aad
sub
push
fistpl
rcrb
push
dec
into
enter
dec
inc
loopne,pt
adc
les
js
cmpsl
rorb
imul
jecxz
fwait
mov
aad
jo
mov
inc
push
ret
mov
ret
icebp
sti
or
xlat
aas
aaa
adc
xor
fs
sub
subb
mov
add
or
fnstenv
inc
add
insl
movsb
mov
lret
stos
stos
adc
sub
jae
mov
cmp
add
fs
inc
ret
daa
icebp
jae
jle
fwait
xchg
lret
adc
sub
insb
adc
mov
dec
adc
rorl
flds
movsb
pop
lret
mov
add
push
out
into
movsl
sub
mov
sti
leave
jmp
dec
add
mov
push
cld
sbb
sub
lods
jae
jle
cwtl
cmpsl
pop
or
add
mov
mov
iret
aad
aad
iretw
shll
lahf
rclb
dec
mov
xlat
xor
imul
pop
push
cmp
mov
sbb
jns
push
shr
fistps
add
lea
je
scas
fmull
int
jno
inc
dec
int
scas
enter
adc
cmp
cwtl
stos
lret
push
in
mov
rolb
pop
pop
mov
mov
fsubl
inc
loop
push
xor
mov
sub
jae
scas
push
mov
pop
jle
sbb
jns
xlat
mov
into
sbb
test
and
inc
xchg
pop
push
loope
test
lods
fcoml
or
mov
loop
push
sti
add
lock
jne
mov
xchg
loop
int3
jmp
pop
pop
xchg
ret
pop
and
pop
pop
cld
test
out
inc
inc
fisttps
flds
mov
mov
xor
pop
push
mov
jecxz
popa
pop
mov
and
stos
aas
mov
cli
nop
push
jge
test
lea
jge
out
aam
mov
pop
mov
shlb
cli
inc
test
push
out
int3
movsl
xor
fs
hlt
test
sbb
cmp
mov
addr16
ljmp
fdivrp
sub
pop
addr16
push
mov
in
popa
addr16
xor
pop
addr16
and
pop
inc
fcompl
inc
ljmp
int
mov
jno
dec
sub
sbb
mov
and
xchg
or
ljmp
pop
scas
mov
or
mov
mov
or
arpl
jmp
push
pop
arpl
inc
push
popf
pop
add
pop
icebp
repnz
jae
shll
stos
push
push
icebp
sahf
cmpsb
add
jb
sahf
jmp
gs
fisubrs
and
adc
cmp
rclb
dec
inc
arpl
mov
jae
in
fstpl
cs
mov
or
sub
leave
icebp
in
aam
mov
pop
loope
out
test
fdiv
xor
adc
jne
push
out
xor
lods
push
fbld
or
imul
mov
xor
sbb
mov
pop
aas
out
scas
fsubp
pop
push
mov
or
lds
sti
adc
js
pop
mov
int
fisubrs
aad
xor
mov
mov
adc
cmp
fstpl
add
imul
clc
enter
sbb
hlt
stc
cwtl
lret
sbb
jbe
sti
lahf
mov
es
inc
rorl
cltd
mov
jb
dec
cmpsl
inc
mov
sub
inc
pop
jmp
add
mov
pop
sbb
cs
into
sar
push
popa
jne
fidivl
and
es
ljmp
cmp
loopne
popf
sub
mov
jno
mov
sbb
add
jno
call
add
cltd
lds
xchg
divl
iret
xchg
sbb
add
pop
out
aas
arpl
call
aas
movsb
dec
jge
xchg
add
xchg
pop
rolb
aas
mov
fiaddl
mov
jle
xchg
rolb
pop
test
das
push
add
add
insl
setl
cmp
aas
inc
adc
jb
cmpsl
cltd
jmp
outsl
outsl
jbe
dec
or
clc
imul
mov
xor
xor
insb
outsb
jo
test
imul
pop
xchg
stos
push
rcrb
test
xchg
add
addl
dec
add
inc
mov
lea
dec
mov
push
xlat
mov
mov
das
jge
mov
in
lcall
mov
xor
pop
mov
mov
mov
sbb
fsubrl
lods
shrb
test
xchg
iret
mov
adc
pop
add
adc
mov
outsl
sbb
xor
xor
mov
cmp
pop
mov
stos
test
inc
push
jecxz
hlt
push
inc
les
dec
pop
scas
jge
aas
lcall
dec
in
mov
pop
pop
jl
sbb
dec
push
adc
sahf
mov
jp
in
out
repnz
dec
jp
arpl
clc
pop
hlt
mov
sub
adcl
lods
and
pushf
scas
leave
cld
lods
arpl
adc
xor
sub
lock
or
rorb
mov
shl
mov
sbb
loop
sbb
mov
es
outsb
call
mov
outsb
stos
arpl
mov
mov
xor
pop
inc
pop
sarl
or
gs
mov
outsb
cmpsb
adc
ljmp
xchg
push
push
mov
or
pop
xor
je
pop
push
sahf
stos
test
push
sbb
sbb
mov
or
neg
outsb
and
jbe
mov
cmp
out
ljmp
cli
mov
testl
xchg
push
jecxz
add
xor
mov
rcl
jmp
jle
jg
mov
mov
shll
sbb
lods
mov
lea
out
sub
add
movsb
push
test
icebp
into
int3
cmp
andb
fcmovb
gs
jle
fdivrs
gs
cld
jl
push
xchg
push
ds
inc
ss
cmp
inc
jg
lock
inc
xchg
jae
inc
adc
in
ss
jbe
inc
sub
push
lcall
and
hlt
fxch
xchg
clc
or
scas
std
cmp
xor
push
add
fisubrs
and
hlt
mov
cmp
in
jle
inc
lds
jnp
aaa
lds
push
lret
mov
mov
mov
push
mov
add
scas
mov
or
jb
dec
or
nop
cmpsl
cmp
mov
test
dec
jmp
mov
mov
or
nop
pop
cltd
sbb
insl
es
mov
je
jg
clc
mov
sarl
mov
pop
aas
arpl
loop
dec
dec
push
pop
es
mov
pushf
pusha
xor
cmp
out
repnz
xor
xchg
add
pusha
test
push
iret
xor
xchg
cmp
cmp
jb
sbb
test
loop
lcall
xchg
in
pop
push
or
repz
push
or
mov
inc
rol
loop
and
frstor
aam
out
lahf
std
cmpsb
inc
mov
sub
push
cmp
push
or
loopne
sbb
jg
movsl
jne
test
in
mul
movlhps
adc
jae
push
aas
popf
cs
dec
jmp
or
xchg
cmp
fldl
dec
xchg
out
movsl
jmp
sub
or
shll
je
test
mov
push
jnp
shlb
pop
jle
add
fldt
adc
jnp
daa
inc
jmp
test
bnd
and
hlt
push
inc
popf
mov
push
mov
in
push
fsubs
mov
adc
lcall
xchg
sub
pop
push
adc
mov
inc
dec
cmpsl
pop
test
mov
mov
dec
lea
add
or
sbb
data16
popa
mov
xchg
lock
inc
adc
mov
addr16
pop
sbb
fldcw
imul
ja
into
ficompl
dec
sbb
mov
mov
ds
test
mov
fidivs
push
adc
lods
inc
data16
in
in
test
dec
daa
jle
xchg
in
xor
sbb
xchg
cmp
dec
int
and
mov
into
fdivrs
lds
sbb
cli
mov
mov
mov
push
adc
sbb
cmpsb
mov
pusha
sbb
mov
and
and
rcr
adc
inc
fsubrs
jl
dec
out
or
fistpl
xor
or
loopne
mov
adc
nop
fsubrp
xchg
ds
sbb
sti
lea
outsl
in
jl
neg
not
sahf
mov
leave
and
insb
aas
jno
cmp
jo
dec
mov
out
cmpl
lea
test
imul
cmpsl
push
imul
mov
int
es
sar
ss
out
pop
mov
add
lea
pushf
or
push
sbb
rorb
inc
adc
xchg
or
xor
in
mov
outsl
mov
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
dec
std
jb
mov
loope
dec
jb
aas
cltd
fwait
mov
and
test
mov
out
jae
mov
mov
jp
jno
leave
pop
mov
ds
jns
or
int
loop
pop
add
leave
out
mov
lods
shr
ja
enter
and
mov
stos
mov
cmp
mov
stos
test
jae
push
rcll
out
es
push
out
loopne
lret
lea
add
add
xchg
add
aaa
fwait
outsb
in
xchg
aad
dec
inc
jecxz
repz
aad
sbb
mov
and
and
mov
add
jb
out
icebp
cmc
mov
and
xchg
adc
or
mov
xor
sub
jb
mov
mov
xchg
imul
adc
out
imul
mull
cmp
xor
xlat
pop
sbb
rolb
int
xchg
call
jb
add
aaa
lods
cld
xlat
out
and
pop
pop
mov
mov
pop
fwait
and
mov
enter
inc
or
inc
push
mov
sbb
test
adc
pop
fbld
push
insb
and
xchg
mov
xchg
pop
pusha
sbb
iret
mov
lret
dec
and
in
xchg
loop
shll
call
or
push
pop
lods
xchg
out
rolb
fwait
outsb
adc
pop
addb
mov
sti
or
movsl
push
jg
and
add
push
mov
insl
dec
aas
inc
mov
adc
es
or
out
sub
nop
and
pop
xor
in
adc
movsb
pusha
fisubrl
out
cvttps2pi
shr
push
pop
in
gs
sub
movb
pushf
cwtl
repnz
in
testb
jmp
test
add
jl
xchg
lcall
outsb
and
add
add
pop
jp
jp
sarl
dec
into
inc
sti
pop
shl
jmp
jge
dec
and
insb
ret
std
jge
jl
hlt
gs
fiadds
xchg
xorb
xor
mov
pop
sbb
or
adc
jne
addr16
add
fisubs
ja
sub
sbb
leave
out
sub
mov
aas
int
out
inc
sub
addr16
js
and
fwait
push
mov
idivb
loopne
mov
jmp
sbb
sub
push
mov
xchg
cmp
cmp
scas
push
iret
mov
pop
dec
popf
xor
int
push
jl
jecxz
xchg
scas
out
in
sahf
xor
enter
data16
fcmovnb
fimull
jns
pop
fidivs
sbb
iret
add
bswap
stc
sbb
push
addr16
roll
pop
int3
mov
mov
add
inc
lcall
mov
leave
mov
subl
icebp
mov
sbbb
in
pusha
or
lret
and
xor
out
push
cmpb
mov
int
adc
addr16
xor
hlt
inc
inc
jmp
dec
mov
sub
pop
sti
pop
sub
and
adc
mov
xchg
sbb
scas
pop
xchg
jg
stos
popf
mov
push
inc
push
jmp
mov
sbb
adc
push
push
and
dec
and
push
lods
cmpsb
or
inc
les
aam
int
cltd
sbb
xor
stos
mov
lods
mov
add
cld
lahf
addr16
sbb
aad
dec
jg
inc
lock
shlb
cmp
and
fildl
and
sub
inc
leave
mov
sbb
pop
pop
adc
icebp
add
nop
arpl
dec
and
mov
sbb
into
loop
outsl
xchg
enter
je
out
and
pop
loop
inc
ret
pop
adc
xor
es
cmp
mov
mov
sbb
mov
cmc
arpl
and
shll
stc
mov
loop
gs
dec
iret
mov
mov
dec
lods
jl
add
cmp
ret
std
sbbb
mov
loope
mov
cmpsb
cmp
inc
aas
js
sbb
mov
icebp
stos
xchg
push
imul
pusha
dec
rcrb
das
ljmp
xlat
mov
divb
pop
mov
sbb
sbb
mov
lods
jmp
pop
mov
xchg
jb
stos
cmp
aad
cltd
xor
out
adc
pop
sar
insb
int3
popf
movsl
les
lods
xor
add
flds
jb
or
test
cwtl
dec
mov
std
mov
test
and
test
cmpsb
inc
stos
and
jb
lods
adc
pusha
lods
cmpsl
mov
adc
mov
ffreep
sub
mov
test
xor
sbb
lds
sahf
imul
jne
jo
sub
call
sahf
fwait
jb
mov
sub
nop
out
mov
sub
push
cmp
repnz
mov
gs
inc
jge
adc
jns
repnz
jg
clc
daa
mov
outsb
in
inc
icebp
test
loop
xchg
sbb
scas
mov
mov
loopne
and
add
sbb
fwait
xchg
sbb
and
pop
aad
orl
push
scas
xchg
test
fisubl
cmpsb
xchg
es
xlat
idivb
scas
outsb
jge
outsl
dec
sub
out
or
xchg
mov
das
cmpsl
cltd
push
dec
adc
pop
adc
xchg
and
push
mov
mov
sbb
mov
inc
mull
cmp
xor
sub
cmp
adc
jle
popf
mov
push
test
es
int
addr16
pop
cli
in
cmp
enter
in
sub
or
ds
jbe
mov
pop
mov
in
dec
push
jg
loope
sbb
int3
mov
lock
scas
call
addr16
popa
test
adc
mov
jbe
ds
lock
or
push
jbe
xlat
cmp
pop
fidivl
sub
pop
leave
dec
imulb
push
xor
imul
push
insb
sbb
mov
sarl
int
cmpsb
push
fst
add
inc
sbb
imul
xchg
sub
and
push
aaa
daa
jno
daa
repz
ret
fistl
mov
mov
jp
cmpsl
rep
mov
out
and
adc
dec
push
mov
enter
xor
insl
icebp
xor
add
push
xchg
mov
imul
addr16
dec
mov
test
push
xchg
out
jle
or
fstpl
int
jno
add
xchg
cmp
test
cs
mov
imul
aad
iret
cmp
dec
fwait
outsl
mov
setbe
push
sub
scas
sub
mov
mov
sbb
or
push
adc
dec
data16
sbb
aaa
xchg
sbb
lahf
test
rorb
or
fwait
sbb
out
insb
in
sub
lea
cmc
popf
lods
cs
addl
out
jl
inc
mov
sbb
movsb
stos
mov
adc
fwait
push
xchg
cli
ret
stos
xchg
xchg
sbb
cmp
pop
mov
dec
mov
xchg
dec
cmp
aaa
aaa
xor
cmp
outsl
mov
jns
call
test
cmpsb
or
mov
or
push
jle
cmpsl
addr16
xchg
xchg
addr16
aas
and
in
or
lods
dec
add
xor
xchg
fisubs
into
xor
mov
cmovle
push
sbb
sbb
mov
push
dec
aam
ds
inc
sarb
xchg
jns
adcb
push
mov
pop
test
or
jl
iret
ret
sub
add
lock
ret
lods
mov
out
mov
rclb
cwtl
sbb
sub
ds
lds
pop
or
jno
dec
insl
popf
jg
lret
pop
jp
sbb
addr16
aad
bound
sbb
int3
push
fdivl
mov
xchg
ss
and
data16
or
pop
out
mov
mov
icebp
sahf
adc
lret
hlt
inc
jl
push
rolb
nop
jmp
dec
pop
add
in
std
push
add
inc
dec
inc
imul
sub
pop
pop
inc
or
cmp
pop
dec
mov
dec
mov
fisubrs
les
scas
into
cmp
mov
scas
sbb
pop
mov
sar
and
call
or
into
lret
out
bound
jmp
jp
fistps
mov
shrl
arpl
cmp
mov
ds
or
fisttpl
jmp
mov
dec
mov
push
cli
stc
cld
repz
add
adc
ja
mov
nop
push
andb
sbb
mov
scas
stos
pop
addb
popa
xchg
rol
or
nop
push
repnz
xor
xor
aaa
test
add
add
xor
lods
mov
imul
jns
fsubrs
notb
je
lcall
rcrb
push
mov
out
fildll
fiadds
and
mov
lcall
push
das
inc
in
jb
push
cmc
xor
xchg
mov
insb
xlat
jae
fnstsw
and
sbb
inc
mov
lcall
sbb
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
