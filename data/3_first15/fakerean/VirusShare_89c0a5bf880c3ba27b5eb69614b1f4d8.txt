add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
daa
adc
dec
adc
insl
adc
jl
shlb
test
test
and
adc
push
adc
and
and
shlb
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
mov
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
movl
mov
mov
mov
je
mov
cmpw
jne
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
push
push
push
call
mov
push
push
call
mov
add
cmp
jae
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
push
push
call
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
push
push
push
xor
call
mov
push
push
call
mov
add
cmp
jae
mov
mov
lea
push
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
inc
push
push
add
call
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
cmp
je
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
ret
sub
sar
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
mov
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
test
jne
pop
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
mov
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
push
push
call
mov
add
add
fcom
add
movsl
add
add
add
add
mov
mov
in
add
rcl
add
scas
push
arpl
in
add
add
add
add
mov
add
addl
add
in
add
push
push
push
push
push
push
call
addr16
addl
ja
add
jae
ljmp
mov
mov
mov
add
mov
mov
cmpsb
push
add
jae
mov
cwtl
mov
lods
mov
in
add
xchg
mov
mov
movsl
add
pop
xchg
add
add
clc
add
add
inc
in
push
push
push
push
push
push
push
push
push
call
scas
out
push
jne
add
mov
push
pop
add
add
lret
pop
add
xchg
jnp
push
add
add
lea
add
jbe
add
fadds
roll
add
loop
insb
add
test
stc
sbb
fadds
xchg
rcll
sub
pop
push
push
push
lea
push
lea
push
push
call
add
push
movsl
mov
test
add
add
jb
mov
mov
add
jmp
pop
push
push
push
lea
push
push
push
push
call
add
in
add
bound
jnp
fadds
add
add
int3
add
andl
in
add
add
subb
in
loop
jbe
je
add
add
pop
lock
add
movsb
add
xlat
out
sub
pop
call
call
push
push
call
fildl
test
add
loope
xchg
add
xchg
arpl
add
add
lahf
add
add
popa
add
push
out
imul
insb
lcall
lcall
add
fwait
pop
add
push
lea
push
push
push
push
push
push
call
clc
xchg
add
add
addl
addb
xchg
loop
add
loope
add
mov
add
pushf
test
arpl
add
addl
xchg
add
fxch
mov
add
xchg
add
pop
add
test
lock
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
push
lea
push
call
pop
jge
ljmp
lret
hlt
add
add
add
mov
outsl
addr16
add
addr16
add
js
enter
add
scas
add
add
add
mov
jns
push
jne
sub
pop
ret
push
push
push
lea
push
push
push
push
call
stc
jne
xchg
test
loopne
pop
jmp
lret
add
out
add
add
sarl
jp
fbld
mov
mov
scas
fcmovnu
pop
in
cltd
add
mov
js
mov
xchg
xor
out
pop
icebp
aam
ljmp
jmp
lret
jle
add
add
xchg
sahf
mov
mov
mov
push
push
push
push
push
call
jecxz
mov
add
jno
loop
add
loop
in
add
add
mov
push
fiadds
addr16
stos
add
xchg
mov
add
cltd
mov
add
mov
test
mov
pop
lahf
mov
mov
add
add
pop
leave
add
add
sub
pop
add
add
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
pop
mov
mov
jmp
icebp
xorl
faddl
mov
aam
imul
add
push
jl
add
add
ficoms
add
mov
addr16
add
in
fdivr
lcall
ret
push
inc
add
push
lea
push
lea
push
push
push
push
push
call
add
out
add
cld
xchg
mov
add
stc
filds
std
add
add
imulb
cld
nop
add
push
add
xchg
add
arpl
arpl
scas
lock
add
aam
fadds
jb
mov
scas
jle
divl
jl
fistl
add
arpl
xchg
loope
push
add
jae
call
pop
cmc
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
pop
jne
lods
add
mov
pop
add
add
mov
add
add
jnp
jmp
add
lcall
jp
popf
lret
mov
pop
add
add
add
add
in
add
jge
add
pushf
iret
pop
add
add
in
loopne
xor
push
push
push
push
call
imul
cli
cmc
aam
popa
add
add
negb
add
rolb
out
shlb
iret
add
cli
pop
aam
std
stos
lea
xchg
xchg
fistpll
movb
add
mov
incb
les
dec
gs
lods
push
dec
lea
sub
push
xor
add
sub
rol
sub
shl
sub
pop
ror
pop
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
rclb
add
mov
mov
std
addl
add
notb
add
lods
mov
int
hlt
add
push
add
mov
pop
jp
add
pop
add
pusha
mov
add
jb
add
add
add
jne
push
lea
push
push
push
call
add
out
lret
pop
mov
jecxz
gs
jge
out
add
stc
jne
add
bound
add
add
push
js
add
icebp
add
mov
in
add
add
add
aad
jl
add
add
bound
sub
pop
call
push
push
push
push
push
call
add
fisubs
add
add
mov
pop
les
xor
data16
rcr
fwait
add
add
add
mov
movl
push
push
push
call
add
ret
ret
notb
icebp
jne
lock
add
mov
cmc
add
pop
add
push
add
fs
add
popa
cwtl
mov
scas
add
add
popa
add
jae
add
jne
in
out
push
xlat
pushf
push
bound
lret
cmpsl
int
add
hlt
pop
lea
push
push
lea
push
push
lea
push
push
call
fildl
add
push
add
jle
jp
cmpsb
push
add
add
mov
xchg
add
fdivrp
test
jo
lods
ret
add
mov
aam
imul
jo
fiaddl
add
add
lcall
push
push
push
push
lea
push
call
add
sti
sti
fcompl
add
mov
add
ja
icebp
les
mov
addb
aam
fsubr
add
movsl
xchg
sub
pop
pushl
pushl
push
push
push
push
push
push
call
add
add
fldl
add
loop
add
jp
test
add
aad
mov
jle
mov
mov
lock
test
aam
movsl
gs
add
test
mov
add
mov
icebp
add
xchg
lock
add
jmp
test
call
add
pushl
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
aam
add
pop
add
mov
ja
pushf
add
in
movl
add
xchg
cmpsl
add
jecxz
add
negl
test
add
movsb
mov
lods
mov
add
xchg
add
mov
aam
popa
mov
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
popf
incb
popa
pushf
pop
add
add
je
cltd
add
pop
out
lret
add
mov
xlat
push
cmpsb
call
mov
add
lock
xchg
je
mov
add
add
add
out
add
add
aam
jecxz
out
mov
jo
push
add
sub
pop
call
push
push
add
push
push
pop
add
inc
sub
ror
lea
pop
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
lods
shrl
xchg
jno
outsl
jmp
jbe
mov
add
add
xchg
add
pop
filds
jle
lods
pop
add
mov
pop
imul
add
sub
pop
pushl
push
push
push
call
add
mov
add
xchg
jno
add
lcall
pop
icebp
lret
movb
add
enter
mov
pop
mov
add
push
add
add
mov
outsl
add
add
addr16
jo
xchg
cmpb
add
rolb
add
add
add
xchg
sub
pop
call
push
push
push
rol
rol
push
and
add
shr
add
sub
xor
shl
pop
sub
lea
lea
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
fadds
arpl
sti
outsl
mov
outsl
add
mov
addl
flds
lahf
xchg
jae
lds
sar
scas
mov
add
add
push
push
push
lea
push
lea
push
push
push
push
push
call
xlat
sarb
enter
ret
mov
xlat
lds
mov
push
add
std
arpl
push
gs
mov
fisubrs
jmp
lock
add
xchg
jb
cwtl
ljmp
out
lea
add
jg
push
lea
push
lea
push
push
push
push
push
call
add
jl
nop
lahf
rclb
push
jne
fcoms
loopne
add
fmulp
insb
mov
add
fldenv
std
xchg
mov
in
loopne
lcall
rorb
lahf
mov
xchg
push
push
push
call
add
mov
jns
sahf
add
add
jge
add
pusha
add
js
cwtl
xchg
rcrb
in
xchg
add
addl
add
add
add
into
jo
push
pop
roll
add
xlat
add
mov
sti
fs
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
addl
pop
pop
add
nop
add
mov
mov
jmp
add
add
clc
pop
jae
cmpsb
add
pop
popf
scas
leave
flds
add
aad
mov
rcl
lahf
rolb
stos
imul
imul
jmp
push
add
sub
pop
push
push
lea
push
push
push
call
add
add
cmc
leave
xchg
add
xchg
icebp
js
push
xchg
and
scas
add
mov
add
xchg
mov
add
jno
rolb
pop
mov
sub
pop
mov
push
push
lea
push
push
push
call
add
add
lret
add
insb
mov
popa
push
cld
add
in
leave
jmp
xchg
rcl
jmp
jno
add
xchg
out
in
in
lcall
pop
in
push
push
call
add
int
imul
add
push
pop
mov
ficoml
add
cwtl
add
pusha
popf
mov
aam
mov
add
out
add
nop
lock
int
jns
mov
pop
add
int3
sub
pop
add
add
push
lea
push
push
call
je
test
sahf
int3
loop
add
jmp
add
addb
mov
xchg
lods
pop
add
add
addb
in
hlt
lcall
xor
adc
jl
xchg
push
push
push
lea
push
lea
push
push
lea
push
push
call
jno
mov
jns
mov
out
add
movb
mov
je
mov
add
cld
cmpsl
int
jl
imul
add
out
popf
loopne
add
xchg
mov
arpl
leave
add
in
fdivr
lcall
jne
push
push
lea
push
push
lea
push
push
lea
push
call
cld
pusha
push
hlt
jno
add
jmp
add
xchg
pop
add
add
arpl
add
add
pushf
bound
lret
add
xchg
fwait
add
sahf
repnz
lret
add
jl
out
fwait
push
pop
push
push
push
push
push
push
push
push
lea
push
call
rolb
mov
iret
lret
add
add
mov
jnp
jmp
jb
into
rolb
xchg
jp
in
push
stos
pop
jno
add
push
add
xchg
xchg
push
add
lcall
inc
or
jno
adc
loope
mov
lea
push
push
lea
push
push
call
add
loopne
rolb
test
add
out
pop
ljmp
nop
mov
cmpsl
push
add
mov
add
rcrl
ljmp
imul
fs
mov
in
loopne
xor
push
push
push
lea
push
push
push
push
call
push
add
scas
stos
fsubl
add
nop
stc
add
in
mov
push
add
pop
add
add
data16
add
add
add
lret
repnz
fldl
movsl
lods
add
add
addr16
add
arpl
aad
fistpll
jne
call
ror
loop
add
add
les
push
call
flds
clc
mov
in
outsl
movsl
add
push
mov
add
roll
je
loope
add
lds
in
clc
pop
add
pop
push
push
lea
push
push
push
push
call
add
add
mov
mov
lock
add
add
jns
push
jmp
mov
fsubr
add
xchg
in
ja
in
testb
movsl
in
popf
rorl
add
stos
add
out
add
aam
add
jbe
add
mov
add
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
lahf
repnz
push
pop
add
fdivl
jle
add
add
scas
add
add
pop
xchg
in
add
stos
push
sub
lcall
push
lea
push
push
push
push
push
push
call
jmp
add
pop
add
fwait
addb
cli
fwait
xorb
add
add
test
push
add
xchg
add
mov
pop
pushf
fsubl
xchg
add
scas
add
push
arpl
add
imul
add
add
add
add
andb
imul
add
mov
mov
xor
push
push
push
push
push
call
add
add
js
fldt
mov
fcompl
add
enter
add
into
add
add
test
ja
sahf
add
add
mov
les
in
in
pop
sub
pop
push
push
push
push
call
pop
pop
add
in
add
out
outsl
jecxz
outsl
cwtl
add
add
fdiv
repnz
stos
jmp
loopne
int
add
int3
add
ljmp
movsb
add
test
add
jbe
fiaddl
movsb
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
subb
add
xchg
std
mov
arpl
loope
out
loop
xchg
xchg
jp
add
loop
inc
jbe
add
cmc
jl
mov
add
xchg
add
fiaddl
lahf
add
add
cwtl
add
add
add
les
cwtl
lds
mov
loopne
pop
push
push
call
faddl
popf
mov
pop
cld
add
add
add
push
jne
test
add
pop
out
clc
add
add
fiaddl
mov
add
mov
add
add
icebp
fwait
jl
add
leave
add
jmp
in
movsb
sti
add
mov
clc
mov
mov
addb
lahf
xchg
movsb
xchg
pop
hlt
push
push
lea
push
push
push
push
push
call
mov
pop
add
mov
je
test
filds
out
xchg
add
aam
add
shl
add
add
test
js
add
push
mov
stos
jns
fldenv
loop
mov
mov
scas
in
add
mov
cmpsb
mov
mov
lcall
pop
in
add
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
cmc
test
push
lret
in
add
push
push
add
out
add
pop
add
mov
pop
into
mov
enter
pop
roll
ja
icebp
in
mov
xlat
jmp
bnd
pop
addl
push
add
add
mov
lcall
ret
push
inc
add
push
push
push
call
test
scas
std
roll
mov
add
mov
xchg
shlb
scas
roll
in
scas
jle
add
imul
cmpsb
cltd
add
xchg
add
sub
pop
mov
xor
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
data16
mov
imul
push
add
add
add
adcw
add
mov
jo
test
jecxz
xchg
add
push
cwtl
add
add
cli
jo
jmp
out
mov
add
aad
icebp
jae
add
sub
pop
mov
push
push
push
push
push
call
lahf
int
lock
add
jno
mov
mov
xchg
in
iret
add
add
pop
fstl
add
lock
lcall
adc
push
push
call
pushf
add
les
nop
into
test
lret
add
add
push
loope
stos
add
jl
jno
add
xchg
mov
add
add
int3
add
add
imul
mov
mov
in
add
add
add
add
add
sti
movsb
jle
sub
pop
add
push
add
pop
mov
push
push
push
push
call
add
add
add
add
enter
rcrl
roll
mov
add
iret
add
add
pop
add
add
add
gs
add
icebp
jmp
add
mov
add
xchg
roll
add
mov
flds
orb
in
hlt
pop
xor
push
lea
push
push
push
call
mov
fsubrs
aam
cmc
add
lcall
mov
icebp
fdivrp
jle
fldl
add
add
call
movl
sbbb
testb
aad
add
test
xchg
cmpsb
faddl
add
add
add
repnz
add
add
imul
mov
in
lock
add
push
push
push
call
add
add
jecxz
sahf
add
aam
stc
mov
loop
outsl
add
jno
lret
push
mov
xchg
mov
add
mov
jo
push
stc
cli
xorb
add
add
sub
pop
add
add
push
push
push
call
add
scas
xchg
add
pushf
jl
add
add
add
add
popf
add
push
scas
shr
add
faddl
fsubrs
cli
mov
shr
push
sub
add
rol
rol
sub
add
ror
inc
pop
rol
rol
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
push
enter
testl
add
fildl
cld
into
scas
cmc
jb
lds
lock
pop
push
lock
bound
lea
add
rolb
mov
lahf
add
add
movsb
test
add
add
jmp
add
movsl
movl
jnp
mov
add
xchg
pop
add
iret
int3
testb
mov
mov
in
fcomps
jne
push
push
push
push
push
call
stos
insb
out
pop
iret
mov
mov
jb
lret
mov
enter
add
push
fldl
mov
add
sahf
filds
repnz
push
andb
negb
mov
pop
testl
sub
pop
call
push
push
push
inc
add
sub
push
push
pop
add
sub
sub
sub
sub
pop
ror
sub
inc
xor
pop
push
lea
push
call
add
add
js
add
sarb
test
lea
sti
cwtl
add
cld
add
add
add
add
jbe
testb
ret
sub
pop
push
push
add
pop
push
call
push
rol
lea
sub
pop
mov
push
push
lea
not
pop
push
mov
push
push
push
push
push
push
push
push
call
push
add
add
loope
popf
add
add
push
outsl
add
add
mov
xchg
mov
add
xchg
jae
mov
popf
incb
mov
js
fsubl
jmp
add
imul
add
add
scas
add
add
hlt
addb
pop
add
push
push
push
push
lea
push
call
pop
imul
add
add
jp
std
xchg
add
add
add
push
jp
jae
gs
mov
ja
mov
add
filds
add
fwait
mov
xchg
add
jmp
leave
cld
cmc
add
add
iret
jbe
push
add
lcall
add
add
add
push
lea
dec
not
pop
mov
xor
push
push
push
push
call
mov
mov
add
push
pop
jecxz
add
popa
xchg
add
fstl
cmpsl
loop
add
movsb
sub
pop
add
push
add
pop
push
push
lea
push
lea
push
push
push
call
popl
sahf
add
shr
jecxz
mov
mov
sahf
mov
add
mov
mov
add
and
add
push
fucomip
cli
aam
mov
stc
out
add
les
lea
sub
pop
mov
xor
push
shl
not
pop
add
push
push
lea
push
push
push
push
push
push
call
mov
fildl
add
rolb
jnp
add
add
sarl
add
stos
add
add
mov
lock
stos
loopne
mov
cld
nop
add
mov
out
out
sub
pop
pop
mov
xor
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
outsl
add
mov
lock
xchg
add
add
xchg
add
add
push
add
push
scas
mov
out
push
out
add
add
add
add
add
popa
imul
in
fcompl
movsb
push
push
call
add
lods
js
mov
popl
add
mov
add
jp
jnp
cli
mov
repnz
add
les
add
into
lock
lods
sar
add
std
fidivl
add
out
jge
add
scas
add
add
jge
push
push
ljmp
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
push
fistl
cld
add
loope
fwait
stos
add
addb
sbbl
add
lods
add
in
xchg
add
filds
in
repnz
add
xchg
xchg
add
testl
mov
into
ror
out
fistl
cmc
add
xchg
jp
mov
fdivr
lcall
or
push
push
push
push
push
call
add
add
pusha
add
mov
pop
add
test
pop
add
sbbl
in
lcall
les
shl
pop
or
je
push
push
push
push
push
lea
push
push
call
add
add
add
mov
add
pop
mov
xchg
addb
add
add
add
mov
mov
out
fwait
mov
xchg
add
add
fistl
into
notb
aad
test
arpl
add
add
jmp
shlb
add
fbstp
gs
roll
mov
xor
push
lea
shr
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
jp
mov
bound
repnz
addl
add
fwait
lcall
add
push
xchg
fstpt
sarl
int
fst
add
add
mov
pop
ja
lret
icebp
add
add
jmp
mov
js
outsl
add
add
lock
add
mov
adc
push
push
push
push
call
fildl
mov
add
mov
pusha
add
add
push
add
lock
out
add
mov
mov
into
cmpsb
add
mov
in
lock
add
push
push
push
push
push
lea
push
push
push
push
call
xchg
jnp
clc
mov
fstl
int3
out
hlt
mov
add
mull
out
mov
push
pusha
push
aam
push
add
add
mov
jb
mov
mov
cli
add
add
stc
cltd
add
repnz
push
rol
pop
push
push
ror
dec
not
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
push
call
cmc
stos
popa
add
mov
lret
movl
mov
shlb
mov
xchg
in
rorb
add
fwait
jecxz
notb
push
mov
add
std
mov
enter
add
lods
sub
pop
add
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
imul
lcall
xchg
add
cmpsl
fistpl
add
outsl
push
std
add
xchg
mov
loope
sbb
push
mov
cld
push
add
add
in
mov
add
scas
add
add
je
addr16
add
pop
add
cld
imul
mov
push
call
add
iret
mov
add
push
repnz
add
add
gs
add
add
ja
push
add
mov
xchg
push
icebp
add
addl
add
enter
sub
pop
mov
push
push
lea
push
call
lods
jae
add
stos
jnp
xchg
add
mov
aam
les
iret
stos
fsts
add
jecxz
jge
ficoms
add
cli
push
fidivl
in
clc
lcall
or
push
push
push
call
xchg
push
gs
subl
add
cmc
add
jecxz
add
add
mov
add
iret
sub
pop
add
push
rol
rol
dec
xor
pop
or
je
push
not
pop
mov
push
push
push
push
call
lods
mov
add
aad
imul
mov
add
push
stc
pop
add
add
mov
add
add
pop
add
add
movsl
add
add
mov
mov
mov
jo
ret
test
pushf
addl
lock
fucom
fwait
insb
sub
pop
add
push
push
lea
push
lea
push
call
arpl
mov
push
add
add
sti
pusha
add
add
add
test
outsl
ror
sar
into
add
repnz
leave
add
add
jl
add
sahf
mov
lock
add
rep
push
push
push
call
add
add
add
scas
add
add
xchg
add
in
stos
fadds
lds
xchg
into
add
mov
movsl
xchg
mov
mov
add
stc
add
push
add
lock
mov
addl
stc
mov
hlt
lcall
push
push
sub
push
sub
add
rol
sub
xor
sub
sub
dec
pop
pop
push
sub
pop
pop
push
push
lea
push
call
jne
xchg
xchg
add
cld
icebp
popf
mul
xchg
push
add
out
push
movl
stos
add
jmp
out
movb
ror
add
jb
xchg
cmpsb
add
clc
add
add
jl
test
push
pop
in
pop
cwtl
stos
add
in
add
int3
arpl
add
ficomps
mov
cwtl
ret
hlt
lcall
jne
mov
push
shl
pop
mov
push
inc
sub
sub
sub
pop
jmp
push
push
push
push
call
arpl
add
mov
mov
add
fldt
jecxz
scas
mov
rorl
add
xlat
faddl
or
loopne
jmp
push
add
test
push
out
cmpsb
add
add
mov
js
mov
xchg
roll
jge
mov
add
mov
incb
jmp
add
lcall
in
add
push
inc
xor
pop
push
push
push
push
push
push
call
test
bound
bound
xchg
add
cmpsl
fwait
std
les
mov
add
add
pop
add
mov
xchg
lock
add
addr16
cli
mov
pop
add
mov
mov
in
lcall
push
push
push
push
push
push
push
push
push
call
jnp
mov
add
add
ja
fcoml
fldl
add
call
push
add
add
pushf
mov
add
imul
addr16
rclb
push
push
push
push
lea
push
push
push
push
push
call
lcall
push
add
xchg
in
std
add
xchg
add
add
add
mov
add
xchg
in
add
add
lods
rolb
add
flds
rolb
shll
add
pop
xchg
push
add
loop
add
mov
nop
add
jnp
add
mov
add
sub
pop
pop
push
push
lea
push
push
push
call
call
iret
jo
add
out
icebp
aad
jbe
cmc
add
jecxz
mov
add
shl
jne
add
leave
add
add
lahf
lds
add
pop
add
out
adc
add
fucom
add
add
push
add
dec
ror
pop
pop
push
push
lea
push
push
push
push
push
push
call
add
cmp
add
jmp
add
add
out
add
xchg
xchg
andb
test
sub
pop
leave
push
rol
xor
sub
pop
ret
push
push
push
push
lea
push
call
scas
imul
iret
add
add
popf
test
add
scas
add
add
lret
xlat
clc
add
mov
decb
add
popa
add
xorl
push
loopne
add
add
addb
pop
push
push
shl
not
pop
mov
push
push
call
mov
loop
add
add
add
jnp
xchg
mov
bound
mov
add
lcall
add
push
add
add
xchg
add
lods
iret
add
add
jmp
add
add
arpl
in
mov
add
add
xchg
fiaddl
pop
lcall
lcall
clc
push
lea
push
call
push
cmc
push
add
add
cld
add
lock
mov
pusha
in
into
jge
mov
loop
out
cmc
add
movsb
pop
push
sbb
add
add
add
add
add
pop
add
les
add
out
faddl
add
jae
cwtl
clc
lods
data16
cwtl
add
lods
in
int
aam
add
sub
pop
push
push
push
dec
shl
dec
pop
push
push
push
lea
pop
movl
push
push
lea
push
call
add
add
shr
out
xchg
add
add
lea
add
test
add
lret
add
fsubrs
mov
add
jbe
movl
in
add
add
add
add
fcoms
add
add
lcall
inc
clc
call
hlt
add
dec
pop
test
je
push
push
lea
push
lea
push
push
lea
push
call
pop
mov
xchg
add
xchg
xchg
add
add
pop
mov
ja
insb
nop
out
push
add
add
jl
push
add
add
add
popf
add
ja
add
sub
pop
mov
push
lea
ror
pop
pop
push
sub
pop
pop
pop
push
lea
push
call
push
addl
push
add
je
cmpsl
fnstsw
add
mov
gs
pop
bound
fidivl
add
fsubrs
movb
rcrb
movsb
jecxz
shl
call
pop
add
in
clc
pop
pop
leave
push
inc
pop
ret
push
lea
push
push
push
lea
push
call
mov
cld
add
pop
add
mov
push
jo
ljmp
ljmp
jno
xlat
test
add
add
ror
out
les
xchg
lea
mov
int3
add
mov
xchg
stos
stos
add
jo
add
pop
sub
pop
push
push
push
call
add
jae
add
pop
add
leave
add
xchg
add
xchg
add
addb
mov
add
std
add
mov
add
lcall
add
in
in
fiadds
add
add
add
add
sti
add
in
test
lcall
in
push
push
push
push
call
mov
add
add
add
clc
test
add
add
add
jnp
add
add
sub
pop
add
push
push
shl
shl
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
xchg
outsl
add
pop
add
jae
xchg
in
pop
sbbl
add
add
add
bound
push
not
pop
push
push
add
sub
not
pop
testl
push
inc
sub
sub
pop
addl
push
ror
shl
pop
push
push
sub
inc
not
sub
pop
call
push
add
add
xor
pop
mov
push
sub
pop
pushl
push
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
mov
aam
push
mov
add
xchg
add
pusha
add
test
mov
popa
test
mov
mov
mov
fnstcw
add
rorb
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
ljmp
int
xchg
jge
movsl
add
clc
mov
add
mov
fdivl
fiaddl
add
jno
data16
add
aas
clc
incl
test
call
loop
add
sub
pop
pop
push
lea
inc
not
pop
pop
push
shl
add
pop
pop
push
push
push
push
push
call
pop
lahf
add
add
add
add
loop
fadds
xchg
add
pushf
mov
add
cli
imul
mov
add
add
pop
fcomip
cld
add
add
mov
add
xchg
clc
call
addl
mov
in
enter
add
add
jbe
mov
add
in
in
pop
pop
leave
push
sub
dec
pop
ret
push
push
lea
push
lea
push
lea
push
call
add
rcrl
je
sub
shll
xlat
sahf
sbb
loopne
add
cmpsb
xchg
mov
add
cmpsb
cli
aam
in
in
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
fs
cli
jo
add
test
movsl
add
lret
fildl
jns
lret
jl
lret
lods
jno
ljmp
lret
sahf
mov
lods
repnz
add
push
add
fistpl
fcomps
in
push
xor
sub
pop
add
push
lea
push
push
push
call
add
add
push
jl
add
mov
add
pop
fs
add
mov
fwait
add
call
add
xchg
add
rolb
iret
add
xchg
jmp
add
int3
stos
add
jp
add
add
lahf
xchg
enter
cmpsb
add
sub
pop
push
push
sub
sub
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
fidivl
nop
enter
xchg
out
mov
mov
shrb
rolb
xchg
add
add
lcall
sahf
add
add
push
add
add
push
faddp
movsb
out
stc
fiadds
cld
jb
sub
pop
push
push
pop
movl
push
add
lea
pop
push
call
push
push
push
push
push
lea
push
push
call
add
imul
add
pop
mov
add
mulb
add
add
add
xchg
add
lcall
or
rcrl
sti
call
popf
ss
pop
push
push
push
push
push
call
add
add
add
mov
add
call
mov
add
lods
mov
hlt
cmpsl
mov
jl
add
add
pop
scas
pop
addr16
cmpsl
add
addb
nop
add
jns
add
nop
add
xchg
mov
add
js
nop
add
int
iret
test
test
xchg
sub
pop
subl
push
rol
pop
cmpl
jne
pop
push
shr
add
add
pop
pop
pop
push
push
push
push
call
add
fs
add
jl
jo
xchg
add
arpl
jge
filds
lea
test
cmpsl
add
push
gs
add
pop
mov
add
add
add
je
aad
push
add
insb
sub
pop
pop
push
push
push
lea
push
call
movsl
add
mov
mov
repnz
mov
add
add
mov
fcmovnbe
push
loope
fs
mov
movl
add
cmc
pop
ljmp
lock
lcall
push
push
push
push
call
mov
out
cmc
scas
testb
pop
add
add
add
add
mov
add
pop
push
imul
mov
mov
shlb
add
push
mov
pop
push
lock
repnz
fiadds
jmp
add
pop
ret
push
dec
dec
pop
push
mov
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
imul
movsb
add
add
xchg
addr16
add
aam
add
neg
add
cwtl
rolb
xchg
test
jbe
add
out
xchg
add
fiaddl
cli
arpl
add
add
add
loope
sti
roll
add
std
add
shll
roll
add
add
add
test
pop
add
push
shl
ror
lea
pop
push
push
lea
push
push
push
push
push
push
call
add
lock
ja
mov
popf
lcall
add
add
push
add
test
add
add
in
add
add
shr
add
int3
insb
mov
mov
in
clc
popa
ljmp
xchg
add
add
add
add
in
in
lcall
push
push
push
lea
push
lea
push
push
call
push
call
nop
pop
fcompl
add
subl
into
add
in
xchg
bound
rorb
rolb
lret
scas
sti
rolb
add
nop
add
stc
or
add
mov
in
in
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
mov
lods
jb
sti
add
fcmovnb
add
mov
jmp
add
add
test
imul
xchg
add
add
add
add
add
testb
test
add
lcall
inc
or
add
lea
shr
rol
pop
lea
sub
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
outsl
add
add
les
mov
add
pop
jl
add
add
pushf
fsubrp
add
sahf
add
shl
in
in
pusha
jbe
aad
testb
loop
sub
pop
mov
shr
push
push
push
push
push
push
push
call
push
loope
lods
pop
cmc
push
mov
mov
addr16
movl
push
testb
mov
mov
add
mov
in
add
add
add
xlat
add
add
lcall
inc
or
inc
cld
push
push
push
push
call
movl
cmpsb
add
xchg
sbbb
add
add
out
add
jae
test
xchg
xchg
in
add
add
add
mov
add
pop
fwait
stc
cwtl
add
push
add
int
movsl
add
add
add
mov
jae
sub
pop
mov
add
push
rol
rol
xor
pop
add
mov
push
add
lea
pop
mov
cmp
jne
push
rol
pop
cmp
jne
mov
push
push
lea
push
lea
push
call
addr16
mov
stc
add
pop
stc
iret
mov
add
xchg
testl
sti
rolb
sti
out
lret
add
xchg
rcrl
popf
movsl
mov
stos
cmc
in
idiv
pop
add
pop
fcoml
add
jne
mov
add
add
add
push
push
push
push
call
add
add
stos
add
add
sahf
mov
mov
fisubrl
add
jns
lahf
add
push
mov
in
call
add
push
push
lea
push
push
push
lea
push
push
call
lret
add
jne
mov
jae
add
add
add
add
insb
mov
mov
add
add
mov
mov
imul
add
jp
pusha
in
mov
mov
sub
pop
mov
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
xlat
add
int3
nop
add
push
out
enter
xchg
in
add
imul
addb
xchg
lret
mov
mov
jmp
pop
sub
jne
mov
push
dec
shl
shl
pop
movl
push
push
lea
push
push
push
push
push
push
push
call
aad
add
loopne
add
test
push
jnp
mov
add
add
loop
filds
add
fldl
mov
add
add
add
scas
nop
out
leave
mov
pop
add
into
in
in
cwtl
add
bound
in
test
test
lret
lret
aad
rorb
bound
scas
add
sub
pop
jmp
push
lea
push
call
push
mov
addl
movb
shrb
add
xchg
fcmovnu
add
add
vhaddps
add
mov
add
lds
add
push
pop
lea
add
add
push
out
add
add
add
add
mov
add
add
add
jb
add
mov
push
ror
pop
mov
push
sub
sub
add
add
pop
cmp
jne
push
lea
push
lea
push
lea
push
push
push
call
mov
fucomi
mov
add
add
fwait
iret
repnz
aad
add
ret
data16
add
jno
loope
cmpsl
jno
add
fisttpl
add
scas
mov
fdivrl
lcall
jae
hlt
pop
imul
fs
in
int
mov
cltd
add
lcall
inc
adc
iret
or
xchg
mov
stc
pop
movl
push
push
push
push
lea
push
lea
push
call
add
mov
into
bound
je
lods
pusha
add
add
xchg
xlat
add
fistpll
popa
add
fsubr
les
add
repnz
add
add
mov
lcall
xor
add
push
rol
shl
lea
pop
mov
cmpw
jne
push
lea
push
push
call
push
mov
add
add
mov
fadds
fiadds
lahf
arpl
add
add
push
fidivrl
add
jnp
add
mov
add
pop
add
pop
addl
push
add
fcomps
insb
add
hlt
in
jno
into
rcll
mov
sub
pop
mov
movl
push
not
pop
jmp
pushl
push
shl
inc
pop
pop
push
shr
inc
add
pop
mov
mov
push
shr
rol
ror
pop
mov
push
push
shl
add
push
push
pop
add
sub
shl
sub
sub
sub
not
add
pop
inc
pop
push
lea
push
push
call
add
add
addb
pop
shlb
mov
loop
add
pop
add
add
add
into
push
add
add
fwait
into
mov
add
push
push
add
ljmp
add
clc
add
add
test
push
push
push
push
push
push
call
add
into
mov
imul
jae
sti
add
shrl
add
cmpsl
mov
data16
jnp
add
add
out
movsl
add
mov
mov
add
sti
add
add
add
testl
call
push
lea
push
push
lea
push
lea
push
push
push
push
call
imul
scas
push
filds
mov
fwait
scas
add
add
cmc
add
jne
cmc
add
add
shr
mov
fldt
add
out
je
ficomps
mov
add
sub
pop
cmpl
je
push
push
xor
xor
not
push
push
pop
add
add
sub
rol
dec
rol
sub
pop
inc
pop
push
pop
push
call
push
lea
pop
cmpl
je
push
push
dec
push
push
pop
add
lea
not
rol
sub
shl
rol
shl
pop
add
pop
push
lea
push
push
push
push
push
lea
push
call
les
les
jno
jp
add
cmpl
mov
jo
add
jecxz
data16
add
add
add
add
lods
js
add
add
sahf
add
stos
push
jne
leave
repnz
xchg
jge
in
add
xchg
sub
pop
push
push
push
call
mov
lahf
pop
xchg
jns
pop
mov
mov
add
add
add
cltd
add
call
add
add
call
push
lea
push
push
push
call
mov
cwtl
in
nop
test
mov
mov
pop
add
push
mov
fucomip
sbbl
fildl
add
insb
rorb
cli
add
lret
in
mov
test
add
lcall
cmp
add
int3
je
push
push
add
rol
push
push
pop
add
xor
xor
dec
sub
rol
rol
pop
add
add
sub
lea
pop
push
ror
xor
shl
pop
push
call
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
add
cwtl
add
mov
push
mov
add
scas
jnp
xchg
filds
add
push
xchg
aad
ja
xchg
jb
popa
add
cmp
rol
je
push
push
add
xor
shl
push
push
pop
add
sub
sub
dec
pop
rol
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
pop
mov
fdivl
add
add
icebp
add
add
push
insb
add
add
add
in
fcomps
push
shl
sub
pop
call
push
dec
pop
cmpl
je
push
push
add
shr
push
sub
add
xor
ror
sub
shl
pop
shr
inc
pop
push
push
push
lea
push
lea
push
push
call
push
pop
aam
push
clc
add
jnp
pop
mov
nop
pop
arpl
add
ret
add
leave
cmpsb
jno
xchg
jae
add
pop
lea
sahf
add
cltd
add
jnp
rolb
jno
jo
jno
add
mov
lahf
sub
pop
push
push
shl
dec
shr
sub
pop
call
push
push
lea
push
lea
push
call
add
stos
icebp
in
subl
add
add
stos
lret
clc
fidivs
add
xchg
fsubp
add
add
sahf
add
add
sub
lcall
cmp
or
int3
je
push
push
rol
ror
push
xor
add
not
lea
sub
add
sub
dec
pop
sub
pop
push
not
pop
push
push
inc
add
pop
call
push
push
push
lea
push
call
jmp
out
add
add
aam
ljmp
scas
ja
les
add
add
add
mov
add
aad
cmpsl
leave
imul
lds
adcb
jb
add
sub
pop
cmpl
je
push
push
shl
push
or
not
add
add
sub
add
pop
not
dec
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
lahf
pop
int3
mov
pop
add
mov
rclb
add
lea
clc
in
push
push
lcall
gs
incb
add
mov
cmc
add
loopne
sub
pop
push
call
push
add
pop
cmpl
je
push
push
shl
sub
xor
ror
push
or
not
add
add
sub
sub
add
pop
pop
push
lea
shl
add
pop
push
call
push
push
push
push
push
push
push
lea
push
call
add
movsl
pop
add
addb
out
test
ljmp
cmpsb
xchg
add
xchg
add
add
nop
sub
pop
cmpl
je
push
push
inc
push
or
not
add
sub
shl
dec
pop
shl
rol
sub
pop
push
shl
xor
xor
lea
pop
push
push
push
push
call
add
add
stc
bound
popf
add
cmpsl
push
cltd
addl
mov
add
push
add
mov
add
add
add
ljmp
mov
jle
add
add
popl
insb
iret
add
add
in
push
repnz
xchg
mov
pop
xchg
divb
hlt
lcall
cld
xor
add
addr16
xchg
and
bound
xor
call
movsl
add
add
add
mov
add
ret
and
add
aad
add
add
mov
pop
xchg
add
in
add
add
pushf
mov
shll
shl
xchg
pushf
jno
mov
in
add
pop
imull
mov
mov
in
loopne
lcall
cmp
test
add
add
fildll
push
inc
push
or
inc
add
shr
shr
sub
rol
pop
shl
sub
rol
dec
pop
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
pop
aam
add
add
mov
mov
add
add
add
aad
add
je
mov
add
add
andl
add
test
add
add
add
mov
add
add
add
fadds
jge
cld
in
add
add
push
add
jge
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
ror
shl
lea
push
or
inc
add
ror
sub
pop
add
ror
ror
pop
push
xor
pop
push
push
shr
rol
not
rol
pop
call
push
ror
pop
cmpl
je
push
push
add
push
sub
add
shr
ror
shl
sub
inc
ror
shl
pop
shr
inc
pop
push
add
add
sub
not
pop
push
call
push
lea
push
call
add
add
sti
add
fs
push
testl
in
add
add
mov
cwtl
add
add
add
add
mov
jbe
repnz
nop
pop
mov
icebp
add
add
sub
pop
cmpl
jne
push
shl
shr
inc
pop
mov
push
push
push
push
push
push
call
add
add
int3
add
add
add
add
add
ja
std
popl
movsl
add
out
mov
add
scas
add
cwtl
add
add
pop
push
push
test
fdivrl
add
lds
pop
movl
push
lea
push
push
push
push
call
add
mov
add
add
add
add
mov
rorl
add
mov
lea
bnd
add
jne
add
shl
pop
movsb
mov
lcall
push
add
add
call
cmc
lea
pop
xor
push
push
lea
push
lea
push
call
scas
jbe
add
add
add
out
mov
aad
add
into
pop
mov
arpl
sub
pop
pop
push
push
push
call
add
stc
pop
addb
add
add
add
idiv
add
jmp
icebp
loopne
in
add
mov
add
jle
stc
push
mov
addl
rolb
iret
add
cltd
add
mov
add
stos
pop
add
out
sub
pop
pop
pop
push
sub
dec
inc
add
pop
pop
push
inc
lea
pop
leave
push
push
push
call
add
clc
stos
mov
addb
mov
filds
rolb
mov
xchg
push
add
pop
test
shlb
roll
pusha
sub
pop
ret
push
ror
add
pop
push
mov
push
push
push
push
push
call
add
mov
flds
imul
movl
icebp
push
add
pop
add
xchg
add
mov
loopne
push
add
add
fdivl
xchg
add
add
neg
add
add
subl
popa
lods
stos
mov
faddl
fwait
movsb
rcrb
add
leave
test
repnz
pop
add
cmpl
jne
push
push
sub
add
rol
push
and
add
add
add
inc
sub
shr
pop
dec
pop
push
shl
pop
pushl
push
push
push
push
push
push
call
add
shll
add
in
lea
mov
add
cld
ficomps
test
loopnew
add
ljmp
add
leave
divl
test
bound
add
mov
lds
call
call
push
push
push
push
push
push
call
pop
add
add
stos
mov
add
add
add
test
add
test
add
jnp
mov
call
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
cmpsl
add
add
mov
add
cwtl
sahf
add
pop
imul
loopne
arpl
les
lea
into
add
in
fcompl
sub
add
and
rcl
loopne
xor
pop
cmpl
je
cmpl
jne
push
sub
pop
mov
push
lea
pop
call
push
push
not
sub
lea
push
and
add
not
sub
sub
not
sub
pop
xor
pop
push
push
push
push
push
push
call
out
add
add
insb
enter
cmpsl
data16
popa
add
jle
mov
mov
xchg
push
fsubr
add
mov
imul
fimull
add
push
jmp
add
add
lcall
jne
push
lea
push
push
push
lea
push
push
push
call
add
imul
cld
mov
aad
lock
call
roll
data16
add
cltd
arpl
sub
pop
call
push
lea
pop
lea
push
push
push
call
push
in
add
mov
stc
add
mov
imul
jae
mov
clc
xlat
lcall
add
add
push
into
shl
add
add
xlat
add
jge
call
add
out
push
xchg
mov
lcall
push
push
push
push
call
add
add
cmc
mov
jle
into
lods
add
mov
mov
data16
aam
add
add
popa
xchg
cmc
gs
add
loopne
je
adc
xchg
mov
lcall
add
not
pop
push
push
push
lea
push
lea
push
push
push
call
add
mov
cld
add
add
fiadds
cli
ja
fldl
add
out
sarl
out
mov
loopne
push
add
add
stos
sti
mov
in
call
push
call
push
xor
pop
ret
push
add
add
shr
pop
jmp
cmpl
jne
push
push
inc
add
rol
push
xor
add
sub
rol
sub
sub
pop
ror
inc
lea
pop
push
lea
push
push
push
lea
push
call
sbb
add
mov
push
xchg
add
xchg
out
lods
add
enter
add
add
cwtl
mov
ret
xchg
mov
add
add
in
pop
pushl
push
dec
shl
inc
not
pop
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
popa
add
call
cld
add
add
mov
stc
shrb
ja
add
leave
add
add
push
jl
in
fcompl
rclb
ret
call
add
sti
gs
faddl
cld
add
xlat
bound
pusha
out
fildll
js
add
shrl
add
add
stc
mov
xor
xchg
mov
shll
popa
add
xchg
push
add
bnd
xlat
outsl
fadds
nop
add
in
test
add
push
flds
gs
push
icebp
sub
lcall
jl
add
push
push
push
lea
push
call
xchg
add
add
enter
add
jge
mov
xchg
shlb
jbe
shl
add
add
int
add
add
add
test
mov
jge
cmpsb
add
roll
add
mov
mov
lods
add
add
rolb
push
sub
pop
cmpl
jne
push
lea
push
push
push
push
push
push
push
push
push
call
jns
mov
mov
add
movsl
pop
icebp
pop
add
mov
add
add
bound
pop
add
clc
lcall
ret
add
mov
push
add
add
mov
jp
add
fwait
pop
mov
lods
add
pop
lock
add
add
in
fdivr
lcall
add
add
mov
push
lea
push
push
push
call
movsl
imul
add
stc
lret
add
push
mov
push
add
aam
add
faddl
lock
pop
leave
popa
mov
in
pop
add
add
add
push
mov
icebp
test
out
in
sahf
scas
filds
pop
jmp
push
shl
pop
push
push
push
add
push
or
not
add
inc
xor
sub
add
pop
shr
ror
pop
push
pop
pushl
push
lea
push
push
lea
push
push
call
add
mov
je
push
cld
add
in
add
add
in
mov
mov
add
sub
pop
call
push
lea
not
rol
add
pop
call
push
push
xor
sub
push
or
not
add
sub
sub
add
shl
sub
pop
inc
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
nop
xchg
ret
addl
lahf
add
cmc
jge
add
xchg
push
mov
roll
lret
mov
repnz
out
add
add
lods
nop
add
add
rorb
test
jmp
scas
fisubrs
mov
sub
pop
pushl
push
not
sub
pop
call
push
dec
sub
pop
call
push
push
shr
shr
not
push
or
inc
add
sub
shl
sub
inc
shr
shl
sub
pop
lea
pop
push
shl
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
call
add
add
ret
add
mov
mov
add
add
add
pop
mov
test
mov
add
mov
testb
push
hlt
mov
clc
add
add
add
out
ficompl
sub
pop
call
push
dec
pop
call
push
push
push
and
add
ror
lea
shl
sub
pop
sub
xor
pop
push
lea
push
push
call
rcrb
loope
fmul
add
add
mov
jl
mov
add
mov
add
mov
fldl
add
jle
out
add
xchg
add
add
addb
std
stos
jne
mov
add
jne
push
not
add
xor
pop
call
push
push
lea
push
push
push
push
call
add
popf
pop
mov
rol
mov
add
icebp
add
add
arpl
mov
add
add
ljmp
call
call
push
push
ror
push
sub
add
sub
sub
sub
not
add
pop
add
lea
pop
push
shr
ror
shl
pop
pushl
push
ror
shr
pop
call
call
push
push
add
sub
shl
xor
push
sub
add
inc
sub
sub
pop
sub
pop
push
lea
push
call
bound
stos
xchg
call
mov
add
cli
cmp
xchg
add
mov
add
sahf
aam
add
jmp
add
add
in
pop
lahf
in
pushf
mov
loop
add
add
sub
pop
pushl
push
inc
shl
pop
call
push
add
not
pop
call
push
push
lea
ror
push
and
add
xor
sub
add
pop
sub
rol
inc
lea
pop
push
shr
rol
dec
pop
pushl
call
push
push
push
lea
push
push
call
jo
gs
mov
add
stos
cwtl
mov
add
pop
cwtl
mov
divl
add
xor
push
pop
test
mov
add
xchg
mov
add
add
imul
push
push
xor
push
and
add
ror
shr
sub
sub
shr
pop
not
rol
sub
lea
pop
push
sub
not
ror
pop
pushl
call
push
dec
inc
pop
call
push
push
rol
inc
push
sub
add
not
sub
add
rol
pop
sub
pop
push
dec
xor
pop
pushl
call
push
lea
pop
call
push
push
rol
dec
push
or
inc
add
dec
ror
shr
sub
ror
lea
pop
shl
pop
push
shl
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
cmpsl
mov
shr
movsl
sti
add
add
lret
lret
in
hlt
add
add
sti
add
add
add
mov
push
mov
fdivr
lcall
pushf
and
call
push
push
push
push
push
call
popf
mov
add
test
movsl
add
add
mov
add
mov
xchg
add
data16
xchg
add
mov
imul
out
mov
js
nop
cld
mov
fcmove
les
add
mov
scas
fcomp
cld
test
add
lcall
shrb
push
test
jmp
push
xor
add
not
sub
shr
ror
add
not
pop
shr
shl
pop
push
ror
lea
lea
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
test
lret
mov
add
lret
mov
jo
in
add
add
mov
pop
pushf
add
add
add
add
add
addr16
enter
add
jecxz
pop
add
add
mov
fdivr
lcall
add
add
call
push
push
sub
xor
add
push
or
inc
add
not
add
sub
ror
dec
pop
dec
add
inc
pop
push
lea
push
lea
push
push
push
push
call
push
cmpsl
enter
lds
xchg
cli
pop
int
cmpsb
pop
sti
add
mov
add
repnz
movb
mov
in
lds
in
pop
add
mov
nop
addb
add
jge
mov
add
jmp
push
shl
aad
mov
call
push
push
push
push
lea
push
call
add
xchg
jge
add
lret
add
add
add
pop
xchg
add
xchg
cmpsb
add
pop
cmpsb
out
add
sahf
fisubs
sub
pop
call
push
push
push
call
add
pop
add
add
popf
mov
pop
f2xm1
imul
add
add
subb
add
shr
add
xchg
add
popa
movsl
xchg
faddl
flds
pop
lret
mov
out
pop
add
movsl
test
fildl
add
shll
mov
stc
int3
sub
pop
call
push
push
xor
sub
sub
sub
push
push
pop
add
lea
sub
sub
add
shl
ror
pop
dec
dec
pop
push
add
pop
pushl
push
push
push
lea
push
call
add
push
out
mov
lahf
in
std
nop
add
push
lcall
loop
jnp
add
add
add
mov
imul
pop
mov
in
add
fwait
add
int3
pop
add
rcr
lcall
cmc
jge
sahf
add
add
bound
add
xchg
scas
cmpsb
incb
clc
popl
fstps
add
rclb
popa
hlt
xchg
mov
leave
push
sarl
mov
lret
jge
push
call
cld
mov
jle
add
lods
add
add
iret
cmpsl
test
mov
mov
stc
add
mov
movsl
add
into
add
mov
add
lods
stos
les
out
aad
mov
in
lods
sub
pop
call
push
not
pop
pop
dec
jne
push
lea
push
push
call
add
add
xchg
jnp
jnp
lahf
add
add
jmp
xchg
cmpsb
rcr
add
incb
add
add
lock
mov
add
sbbb
add
add
add
mov
add
hlt
lahf
arpl
add
in
hlt
pop
jmp
push
push
inc
add
push
or
not
add
xor
shr
sub
rol
pop
add
pop
push
lea
push
push
call
addl
xchg
add
lahf
lea
push
jnp
in
add
jae
jae
loop
add
out
add
add
add
jge
pop
add
add
leave
pop
pop
cwtl
fldcw
add
test
add
pop
jb
ret
mov
add
mov
clc
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
dec
add
repnz
add
jp
push
jnp
xchg
jmp
roll
pop
jle
fwait
jae
lcall
jbe
add
cld
out
add
mov
xchg
sub
pop
call
push
lea
push
push
lea
push
call
pop
mov
add
add
rolb
push
stos
lret
iret
add
add
test
add
scas
ljmp
pop
mov
cmpl
mov
sub
pop
lea
push
rol
pop
push
push
push
ror
pop
push
push
not
pop
push
push
lea
dec
dec
pop
call
push
push
push
lea
push
push
push
call
mov
add
jo
push
cmc
add
scas
scas
mov
cld
add
pop
jns
jl
jne
fildl
add
add
pop
add
push
je
add
add
test
scas
add
enter
mov
add
call
add
push
push
add
rol
shr
push
xor
add
add
ror
sub
lea
inc
pop
dec
ror
pop
push
push
push
lea
push
push
lea
push
push
call
fsubl
addb
pop
add
mov
lods
pop
jge
loopne
addl
hlt
mov
add
fcmovne
enter
add
mov
xchg
loopne
jbe
jo
loopne
add
test
aad
add
iret
push
addb
roll
jno
int
movsl
fsubs
pop
sub
pop
pushl
call
push
xor
pop
push
call
push
ror
sub
lea
pop
mov
push
push
sub
not
sub
push
push
pop
add
lea
sub
inc
sub
sub
pop
xor
pop
push
push
lea
push
push
push
push
push
call
popf
lcall
loopne
flds
push
jecxz
movb
pop
add
xchg
cmpsl
ja
gs
fildl
jp
pop
sub
pop
pushl
push
push
push
push
lea
push
push
push
call
add
add
mov
into
ljmp
faddl
lds
aad
sar
add
add
push
add
faddl
add
lret
add
add
pop
mov
in
add
hlt
ret
hlt
iret
movl
repnz
popf
sub
pop
call
push
pop
lea
push
push
push
call
cltd
mov
in
imul
sahf
add
add
add
push
add
add
xchg
test
add
mov
addb
ret
jbe
push
mov
jbe
pop
jb
jno
push
add
call
push
mov
clc
add
in
clc
lcall
add
push
push
push
push
call
add
add
add
js
js
test
push
add
push
int3
mov
add
test
roll
pop
fdivs
add
fldl
shl
lret
loop
add
insb
add
add
add
add
sti
add
test
in
lock
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
lret
movsb
pop
add
add
mov
mov
add
scas
addr16
add
push
add
hlt
filds
int3
stos
add
sub
pop
call
push
push
push
lea
push
call
add
mov
add
push
add
fadds
add
add
data16
xchg
add
xchg
pop
mov
sub
pop
lea
push
push
inc
dec
inc
dec
push
sub
add
rol
sub
sub
pop
add
not
ror
pop
push
dec
add
shr
pop
pushl
push
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
mov
out
add
add
xchg
mov
add
add
add
add
add
add
add
jge
add
rolb
mov
rcr
add
mov
add
fs
xchg
in
fcomps
call
push
push
rol
add
shl
push
and
add
xor
rol
sub
shr
pop
add
lea
ror
pop
push
push
push
push
push
push
push
lea
push
call
arpl
js
mov
add
fstpl
add
fdivrs
add
negb
push
roll
in
loopne
pushl
push
push
call
into
push
mov
and
add
mov
jb
aam
insb
add
mov
add
xchg
add
jbe
sahf
sahf
mov
std
pop
int
add
addb
xlat
add
jl
add
add
jbe
add
add
lcall
add
icebp
pop
fs
add
jp
in
clc
lcall
cmp
out
dec
ror
rol
pop
call
mov
push
sub
not
pop
lea
push
push
rol
add
ror
push
xor
add
sub
sub
inc
pop
add
inc
ror
shl
pop
push
push
push
call
mov
mov
jp
loop
add
xchg
xchg
in
cli
in
hlt
stos
test
pushf
pop
add
pop
add
cmpsl
outsl
mov
add
add
nop
add
pop
pushl
push
ror
sub
xor
add
pop
call
lea
push
push
push
push
push
push
call
add
add
add
in
mov
ret
int
outsl
int3
jae
ret
mov
add
add
add
addl
add
mov
shll
test
add
add
push
push
rcll
jp
pop
jno
add
add
popl
add
lcall
push
push
inc
sub
dec
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
iret
add
add
add
jmp
mov
add
add
jae
mov
ror
add
add
fiaddl
lcall
jne
push
push
rol
not
push
or
inc
add
sub
sub
add
sub
rol
pop
add
pop
push
shl
add
pop
push
push
shl
shr
rol
add
pop
call
push
push
xor
xor
lea
inc
push
or
inc
add
dec
xor
sub
ror
pop
not
xor
pop
push
dec
shl
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
lret
js
add
fldl
mov
add
mov
js
call
negb
add
add
sub
pop
call
push
push
shl
dec
lea
sub
pop
call
push
push
shl
shl
push
xor
add
inc
sub
lea
sub
sub
pop
rol
inc
not
not
pop
push
push
call
add
mov
add
mov
rol
mov
add
rcll
add
add
mov
outsl
hlt
xlat
push
add
mov
mov
mov
add
in
add
xchg
jl
sub
pop
pushl
push
pop
call
push
push
lea
push
call
lcall
mov
rcrb
add
jbe
add
mov
add
add
add
nop
mov
add
add
add
sbbb
add
add
push
hlt
add
lcall
shr
push
add
add
pop
pushl
push
lea
push
push
lea
push
push
call
add
ja
incb
add
aam
jge
add
add
add
jnp
add
push
scas
add
jecxz
add
out
jbe
add
jae
add
add
jae
add
add
icebp
aam
ljmp
pop
addb
sub
pop
mov
jmp
push
push
rol
add
push
and
add
shr
shr
sub
sub
lea
rol
pop
sub
pop
push
dec
shl
not
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
push
add
add
add
add
add
ljmp
enter
lret
push
incb
add
in
in
call
push
dec
shr
shl
pop
push
call
push
push
sub
ror
push
or
not
add
sub
pop
inc
sub
sub
lea
pop
push
add
ror
shl
pop
pushl
push
lea
push
push
lea
push
push
push
push
call
xchg
scas
xlat
lret
movsb
movsb
add
stos
mov
mov
js
mov
leave
frstor
add
add
add
addb
mov
add
jno
in
in
lcall
cmp
add
push
push
lea
push
push
push
push
push
push
push
call
add
push
jecxz
add
add
jae
add
add
push
roll
mov
outsl
push
fadds
push
xchg
stos
flds
xchg
cwtl
add
add
add
add
add
add
pop
lret
movb
loop
add
lcall
ror
push
push
push
push
lea
push
push
push
call
mov
mov
add
lret
jl
add
add
loopne
jae
icebp
rorl
xchg
add
iret
bound
les
add
jb
add
xchg
in
jp
lret
add
add
push
rol
add
add
sub
pop
add
push
sub
xor
xor
pop
pop
push
pop
pop
push
ror
shl
pop
pop
push
pop
xor
push
shr
shl
not
pop
inc
push
shl
inc
sub
pop
ret
push
push
push
call
xlat
jbe
sar
add
into
mov
push
jp
jno
add
fs
mov
add
add
data16
rolb
pushf
mov
repnz
add
add
add
enter
add
sub
pop
leave
push
sub
lea
pop
ret
push
push
lea
push
push
push
push
push
call
clc
std
add
add
jmp
mov
lods
mov
mov
add
add
add
xchg
jo
add
mov
add
repnz
scas
jge
bound
add
fdivrs
fwait
xlat
add
outsl
add
hlt
add
mov
add
mov
lcall
push
sub
pop
mov
push
lea
push
push
push
lea
push
call
popa
jbe
nop
xchg
lcall
mov
add
mov
add
mov
clc
jb
mov
testl
jp
faddl
add
pop
push
in
imul
add
add
in
in
lcall
jge
add
test
add
push
inc
shl
ror
pop
mov
push
xor
shr
shr
pop
jmp
push
inc
inc
add
lea
pop
mov
push
dec
sub
pop
and
push
dec
xor
pop
xor
push
lea
lea
ror
not
pop
xor
add
push
push
call
mov
int
js
mov
stos
rcll
mov
add
jp
nop
add
jns
add
add
cmpsl
xchg
pop
add
in
clc
lcall
dec
call
sbb
pop
shll
push
lea
push
push
push
lea
push
push
push
call
xchg
lock
jp
ljmp
jb
stos
jmp
popl
fistl
add
add
in
cwtl
leave
movsl
stos
add
push
pop
add
sti
loopne
sti
mov
ret
je
mov
add
pop
add
add
push
add
aad
add
repnz
hlt
fildl
jle
pop
lret
jl
popf
push
mov
in
fcomps
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jl
test
mov
mov
xorb
add
add
add
mov
je
lods
add
add
mov
sahf
add
add
cli
les
add
add
add
lcall
jmp
jmp
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
pop
push
add
add
add
in
mov
add
movsb
push
add
lds
mov
add
add
add
push
sub
pop
pushl
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
pushf
add
xchg
add
int3
pusha
add
fwait
scas
gs
cld
add
cld
add
rcl
mov
mov
loopne
push
cwtl
add
bound
add
add
popf
add
add
add
ja
iret
add
sub
pop
sub
cmp
jne
push
push
lea
push
push
push
lea
push
lea
push
push
call
in
outsl
add
add
mov
fmul
add
int3
jo
movsl
shl
in
pop
arpl
in
mov
enter
out
add
add
mov
add
add
loope
mov
jae
fidivl
add
loopne
lcall
enter
xor
dec
pop
lea
push
lea
push
push
push
push
push
call
add
add
add
add
rolb
cmpl
stos
jnp
add
in
add
mov
sub
pop
sub
mov
push
pop
shr
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mull
out
fwait
call
test
add
add
jmp
push
test
mov
repnz
mov
push
fsubrs
add
sbb
rcll
into
add
mov
add
int3
test
mov
add
add
enter
push
sub
xor
add
lea
pop
pushl
push
push
lea
push
push
push
push
call
add
loop
push
add
rclb
jmp
add
fldl
ret
stos
add
pop
xchg
out
add
push
mov
add
add
arpl
lock
add
add
in
add
ret
mov
add
popa
jo
add
cmpsb
add
mov
mov
nop
push
mov
sub
pop
pop
push
shl
pop
shr
and
push
shl
pop
sub
push
sub
pop
cmp
jne
leave
push
add
xor
pop
ret
push
xor
shr
shl
dec
pop
push
mov
push
sub
shr
pop
add
push
push
xor
shl
pop
push
push
add
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
push
ror
jmp
clc
add
pop
xlat
add
add
add
mov
lahf
into
add
add
add
movsb
add
sub
pop
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
ret
ljmp
test
add
add
lods
add
out
xlat
pushf
pop
mov
ja
add
fildl
cwtl
stos
push
in
nop
add
mov
rol
pop
les
hlt
mov
in
loopne
mov
lea
push
add
pop
sub
push
lea
ror
sub
pop
mov
shr
push
push
lea
push
push
call
xchg
mov
add
loope
fldl
add
add
add
add
mov
cmpsb
pop
data16
push
add
mov
cmpsb
jle
in
lcall
jb
insb
jne
mov
out
arpl
mov
add
add
data16
lcall
ficoml
lret
dec
sub
shl
add
pop
mov
push
push
push
lea
push
push
push
call
pop
bnd
lds
shlb
loopew
add
int3
xchg
jnp
hlt
add
mov
add
mov
in
call
add
push
push
lea
push
push
call
add
mov
xlat
add
pop
pop
add
add
add
add
add
add
add
add
scas
into
repnz
add
xchg
add
enter
add
mov
stc
std
xchg
loop
mov
add
imul
add
add
mov
lcall
jnp
push
sub
sub
pop
add
xor
push
lea
push
push
push
push
lea
push
call
add
addl
fldl
ja
imul
add
add
jbe
add
add
mov
out
add
push
pop
subb
mov
mov
add
outsl
mov
mov
mov
add
mov
sub
pop
mov
and
push
xor
shl
add
pop
rol
push
push
lea
push
push
push
lea
push
call
shlb
lahf
int
mov
add
add
push
or
pop
bound
iret
negl
pop
add
add
add
mov
out
fstl
add
xchg
add
lcall
rolb
pop
xor
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
out
pop
jmp
test
lret
mov
test
mov
push
rcl
gs
add
push
add
outsl
add
add
add
stc
push
addl
add
add
add
add
add
negb
out
add
test
fadds
pop
add
jecxz
popf
push
add
lcall
push
push
call
jne
clc
add
out
jl
out
add
addb
add
incb
add
jnp
aad
mov
shlb
aad
cli
pop
cli
fwait
add
in
jns
popl
ror
cmpsl
add
add
mov
add
add
stos
pop
mov
add
push
mov
lods
pop
add
outsl
sahf
sub
pop
cmpb
jne
push
shr
shl
pop
add
push
push
push
push
push
push
push
call
add
mov
mov
enter
push
sar
hlt
add
push
roll
jge
add
fcomps
fldl
sti
faddp
je
jp
test
xchg
push
add
jns
mov
fnsetpm(287
add
leave
mov
ja
mov
sub
pop
cmp
je
push
push
lea
push
call
arpl
mov
push
add
aam
loope
add
push
bound
cltd
pop
add
loope
add
add
add
add
pop
roll
loopne
lret
pushf
add
add
lcall
ret
adc
jnp
add
test
std
call
imull
testb
pop
push
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
loope
add
add
outsl
gs
mov
mov
add
imul
add
test
add
popf
pushf
add
mov
jge
fiadds
add
test
add
loopne
mov
mov
mov
mov
cmpsb
add
std
mov
sub
pop
pop
push
lea
push
push
lea
push
push
call
outsl
add
add
hlt
add
add
add
jo
mov
xchg
arpl
mov
nop
push
shlb
add
add
imul
add
test
sub
pop
pop
leave
push
add
shr
pop
ret
push
rol
pop
mov
push
push
push
push
push
push
call
gs
enter
mov
rcr
mov
add
add
add
loop
leave
add
jnp
mov
xchg
pushf
add
scas
jno
xchg
outsl
add
mov
int
jnp
movsb
pop
add
gs
add
add
add
call
push
rol
pop
mov
push
push
push
push
push
push
lea
push
lea
push
call
add
lahf
add
push
add
add
call
add
add
test
xchg
mov
add
out
add
xchg
repnz
jns
add
xchg
loope
ja
add
add
add
push
out
add
js
add
add
add
mov
into
mov
mov
add
lcall
push
lea
push
call
mov
fucomi
add
addb
add
add
pop
lods
add
add
add
add
add
loope
add
roll
addl
scas
mov
stc
jmp
scas
add
add
xchg
mov
add
sub
pop
testb
push
add
pop
pop
push
push
call
add
popf
add
add
add
js
jns
scas
add
mov
int
jb
add
mov
scas
sub
pop
call
push
push
push
push
push
push
push
lea
push
call
aam
roll
add
in
popa
cmpsb
pusha
add
insb
in
mov
add
ljmp
jno
movsb
loope
stos
mov
add
add
lods
jmp
add
push
add
mov
outsl
push
add
aam
call
sbb
push
push
lea
push
call
add
add
push
fldl
push
add
stos
mov
loopne
jle
pop
add
ja
xlat
add
mov
aam
lahf
mov
cli
xchg
jo
test
mov
addb
add
pushf
mov
add
mov
add
std
mov
fisubrs
add
jp
mov
push
mov
add
sbbl
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
jge
mov
jns
mov
in
add
add
add
add
data16
sahf
mov
add
bound
test
lods
mov
xchg
je
mov
add
lcall
push
rol
shr
lea
pop
pop
push
xor
lea
pop
pop
push
shr
pop
pop
push
sub
pop
pop
push
lea
pop
leave
push
xor
sub
shl
pop
ret
push
add
pop
push
mov
push
lea
push
push
push
lea
push
push
lea
push
call
add
push
lea
js
aam
add
jne
out
push
loope
add
add
in
add
push
dec
pop
push
push
push
push
push
push
push
lea
push
push
call
cmc
jno
add
add
popf
repnz
add
icebp
add
add
bound
call
add
loopne
popa
add
pusha
add
out
pop
add
push
arpl
add
push
add
mov
in
in
push
push
shl
xor
sub
sub
pop
push
push
add
pop
mov
push
sub
rol
ror
add
pop
push
push
lea
push
call
fbld
cmpsb
cld
loop
add
add
shr
in
jbe
xlat
pop
repnz
add
fucomp
jbe
add
lds
test
mov
nop
mov
in
bound
out
mov
stos
iret
fwait
add
loop
add
add
add
jnp
xlat
push
fiaddl
enter
sub
pop
pop
lea
push
sub
inc
xor
shr
pop
sub
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
cmpsb
out
lods
add
fistl
add
add
lods
add
lods
mov
lahf
xchg
cld
lcall
shll
sub
pop
mov
shr
push
not
pop
add
push
push
push
push
push
push
call
lods
add
out
push
rolb
js
add
add
in
mov
pushf
into
call
add
add
add
add
xlat
xlat
add
lahf
xchg
hlt
sub
pop
mov
add
push
push
push
push
call
iret
add
mov
mov
stc
xchg
add
add
add
add
xchg
je
add
enter
add
rorb
lcall
jae
push
push
lea
push
push
call
add
test
out
movsl
jecxz
jb
rolb
add
mov
aam
add
add
add
xchg
roll
mov
cltd
fisubs
xchg
jle
xchg
sti
sub
pop
popl
push
ror
pop
mov
push
push
lea
push
lea
push
push
call
push
call
add
out
add
jp
push
andb
imull
fcoms
add
add
add
mov
add
add
pop
mov
mov
add
mov
outsl
add
xchg
movsl
mov
add
les
add
add
add
lcall
stc
xor
push
push
push
push
lea
push
push
call
lea
lock
jp
repnz
test
add
loopne
loop
jbe
test
hlt
jge
add
mov
xchg
jno
mov
add
out
add
mov
add
mov
add
in
jb
add
add
call
push
inc
sub
pop
mov
add
push
lea
push
push
push
lea
push
push
push
push
push
push
call
in
mov
sahf
ffree
aam
add
mov
gs
cld
fcomps
cmpsl
mov
pop
add
hlt
in
divl
add
scas
pop
add
add
mov
fdivr
lcall
rol
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
jne
mov
loopne
scas
xchg
mov
repnz
mov
add
addb
fcoms
repnz
add
push
icebp
add
add
add
add
out
clc
add
add
pop
nop
push
push
push
push
call
push
fwait
lahf
jl
add
lock
add
mov
gs
in
jge
mov
xchg
out
push
mov
call
add
add
mov
add
add
add
repnz
push
mov
icebp
js
jo
add
add
add
lcall
push
add
not
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
jl
jae
add
outsl
stc
hlt
push
push
add
imul
add
add
add
add
test
test
pop
jmp
incb
add
push
pop
add
addl
push
stos
fmulp
add
call
xchg
add
fwait
sub
pop
nop
nop
push
push
push
push
push
push
push
lea
push
push
call
add
add
enter
add
stos
add
pop
add
add
add
mov
sahf
add
add
test
push
idivl
pop
add
lcall
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
movsb
add
stc
push
ret
test
leave
add
jmp
add
push
add
add
fsubrl
add
les
mov
add
add
fists
mov
push
add
xlat
pop
jle
xchg
lods
add
pop
nop
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
int3
ljmp
add
aam
fsub
fldl
sbb
add
in
push
faddl
out
add
add
mov
ljmp
push
inc
shr
pop
cmpb
jne
add
push
add
sub
shl
pop
nop
nop
push
lea
push
push
push
lea
push
push
call
pushf
add
add
push
test
call
mov
mov
cli
jnp
rcrl
movsb
add
add
xchg
insb
add
add
pop
xchg
cwtl
add
stc
add
mov
in
add
loope
add
mov
sub
pop
cmp
je
push
push
lea
push
push
push
call
outsl
add
add
mov
addr16
jmp
add
add
push
jmp
add
gs
addr16
add
pop
rclb
test
pop
clc
add
aam
add
fwait
add
add
add
jp
lock
xchg
add
add
add
pop
mov
add
call
mov
nop
push
lea
push
lea
push
push
lea
push
push
call
mov
enter
sbbl
add
lods
add
mov
leave
int3
add
jbe
jp
mov
cmc
out
lea
popf
lret
jge
add
in
add
add
push
enter
add
add
sub
pop
nop
push
add
sub
pop
inc
nop
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
loop
xchg
add
jmp
hlt
push
push
xlat
test
push
neg
add
loope
out
push
int3
add
add
aam
add
add
add
nop
stos
popf
sahf
add
add
sub
pop
nop
cmp
jb
push
xor
inc
lea
pop
xor
push
lea
pop
jmp
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
movb
lods
mov
push
roll
add
popa
pop
cli
xchg
add
add
subl
loop
add
add
out
mov
mov
add
sub
pop
add
movzwl
push
push
push
push
push
push
push
lea
push
call
push
add
add
add
popl
mov
lahf
add
imul
loopne
lcall
inc
sbb
push
lea
push
call
pop
add
push
mov
add
mov
aad
movl
add
pop
add
leave
add
xchg
jne
mov
add
rcll
inc
add
add
add
jl
pop
mov
add
add
bound
add
fstpl
pop
iret
outsl
in
add
stc
add
fldt
add
add
loope
add
clc
pop
mov
push
push
push
push
push
push
push
lea
push
call
cmc
fld
add
mov
add
pop
add
lods
add
push
fnstenv
jle
nop
add
add
add
nop
in
leave
test
mov
jo
add
cwtl
fs
mov
imul
ret
push
stos
add
pop
mov
fiaddl
lcall
leave
push
ror
ror
sub
pop
xor
shl
push
push
call
add
call
add
fs
add
std
add
add
fs
test
add
popf
xchg
jo
out
mov
loopne
in
clc
lcall
dec
nop
add
loope
push
not
pop
xor
shl
push
shr
pop
xor
push
ror
lea
inc
pop
mov
push
push
push
push
push
call
add
imul
add
jns
mov
add
aad
xchg
lds
int
cld
int
add
data16
mov
xchg
fisubs
add
loope
push
add
add
add
ror
mov
orb
out
jo
add
xchg
mov
pop
add
fldcw
roll
add
sub
pop
add
pop
push
xor
pop
pop
push
inc
pop
pop
push
push
push
push
call
addb
ret
add
lock
mov
int
push
movsl
add
filds
mov
adc
add
jp
add
mov
cld
jp
add
stos
shrb
in
lock
pop
push
push
push
push
push
call
enter
cli
mov
push
icebp
jp
mov
ja
fistps
loopne
add
add
add
imul
insb
lret
out
mov
fiadds
lret
add
add
add
add
lcall
jle
mov
push
jle
cmpb
add
pop
leave
ret
push
push
call
in
jmp
jne
roll
jmp
add
xchg
into
jo
popf
add
out
add
add
jmp
data16
out
push
xchg
add
imul
in
add
clc
lcall
push
push
push
push
push
push
push
push
call
lock
add
fwait
pop
test
loop
add
scas
scas
jns
add
out
cld
add
in
bound
bound
imul
add
in
push
push
push
push
push
push
push
push
call
add
jmp
mov
add
mov
test
fwait
testb
je
add
push
je
outsl
cmpsb
add
add
lods
data16
add
add
orl
lcall
push
push
call
clc
push
jl
add
push
add
add
loopne
pop
subl
lock
add
gs
add
push
jnp
add
pop
push
add
bound
add
add
sub
pop
push
push
push
sub
shl
pop
mov
mov
push
push
lea
push
push
push
lea
push
push
call
add
mov
negb
add
jns
push
add
les
xchg
xchg
fildl
add
js
add
pop
mov
mov
in
mov
add
jge
push
push
lea
push
lea
push
push
call
mov
xchg
add
aad
rolb
addb
add
add
mov
add
add
jbe
cmpsl
mov
mov
push
imul
in
data16
add
add
sub
js
add
add
rorb
test
shl
inc
pop
mov
test
je
push
rol
sub
pop
mov
push
lea
push
push
call
shlb
je
mov
in
add
add
add
add
imul
out
add
cmc
test
sub
pop
mov
mov
push
lea
shl
rol
pop
inc
push
add
pop
cmp
je
push
shr
pop
test
je
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
pop
nop
loop
add
leave
add
add
test
add
mov
pop
add
pop
add
xchg
loope
mov
cltd
push
cltd
repnz
add
call
add
scas
sub
pop
mov
push
dec
lea
sub
pop
inc
push
dec
pop
cmp
je
push
inc
sub
pop
test
jne
xor
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
mov
aad
add
jno
mov
add
xchg
idivl
rcr
add
add
mov
repnz
jmp
mov
add
test
add
loop
sub
pop
pop
push
sub
lea
add
pop
pop
pop
push
push
push
push
push
call
add
add
lahf
add
jnp
add
in
add
nop
popf
add
xchg
jle
add
pushf
jge
fcmovu
mov
add
add
jle
add
add
add
flds
xchg
add
mov
fcompl
movb
hlt
lea
lcall
leave
push
dec
shr
xor
inc
pop
ret
mov
push
add
ror
inc
xor
pop
inc
push
pop
cmp
jne
lea
push
sub
inc
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
roll
add
add
add
add
ljmp
add
lock
fidivs
add
xchg
add
add
test
filds
mov
add
sahf
mov
lcall
in
test
add
add
lds
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
add
add
mov
add
push
sti
jl
fcmovu
insb
movsl
add
add
lret
add
jmp
push
cld
add
lcall
movb
lea
push
push
lea
push
push
push
push
push
call
cmc
jp
add
mov
add
lcall
arpl
add
or
cmpsb
add
add
in
loopne
cmp
jne
push
sub
ror
rol
pop
mov
push
pop
test
je
push
not
shr
pop
mov
push
add
ror
pop
add
push
rol
dec
pop
cmp
je
push
lea
push
push
push
call
bound
jecxz
rcll
vcvtsd2ss
add
icebp
mov
add
fildll
pop
push
outsl
test
pusha
push
jns
in
lock
lcall
or
pushl
rclb
add
daa
lea
push
push
push
push
lea
push
push
push
push
call
push
jno
out
push
xchg
add
jmp
je
fiadds
lods
add
mov
in
mov
push
add
add
add
add
add
jmp
mov
jo
mov
in
add
loop
outsl
mov
add
xchg
adcb
add
fadds
add
stos
jmp
in
fdivr
lcall
push
push
lea
push
push
push
call
add
add
cwtl
repnz
addb
add
rolb
add
add
gs
add
outsl
hlt
lods
cmc
add
add
pop
aad
fbld
push
sub
pop
pop
push
add
pop
pop
pop
push
push
push
lea
push
call
push
mov
call
jmp
out
roll
data16
add
faddl
mov
add
jge
add
add
add
jmp
add
icebp
push
fldl
idivl
lock
lcall
ret
push
push
push
push
lea
push
call
push
lods
arpl
xorb
lods
jmp
shlb
add
pop
lods
mov
arpl
add
fucomip
icebp
testb
pop
in
add
nop
push
mov
shrb
scas
outsl
ja
add
add
sub
pop
lea
pop
push
push
push
push
push
push
call
push
add
add
add
push
imul
fs
add
add
test
pushf
add
mov
xchg
add
call
add
push
lahf
stc
lahf
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
push
add
loop
ror
movsb
jnp
scas
add
add
testb
clc
mov
push
xchg
data16
push
xchg
mov
in
fcompl
push
push
push
push
push
lea
push
call
stos
xchg
loopne
jmp
mov
iret
add
push
shlb
int3
add
add
add
xchg
add
jge
add
add
out
jns
jp
clc
add
stos
mov
imul
add
cld
add
cmpsl
add
add
fmulp
movsb
sub
pop
pop
push
add
not
pop
leave
ret
push
shr
pop
mov
pop
push
sub
sub
pop
pop
pop
push
pop
pop
leave
push
inc
sub
add
add
pop
ret
xor
cmp
cmc
xor
adc
icebp
adc
and
adc
inc
cmp
fimull
cmp
add
cmp
xor
adc
jb
adc
mov
add
cmp
aad
sub
xchg
xchg
and
cmp
jnp
pop
ret
inc
mov
cmp
es
push
jns
sub
sbb
lods
imul
xorb
mov
pop
pop
or
mov
jp
imul
fucom
inc
mov
push
lock
and
das
notl
rcrl
jnp
mov
cmp
das
mov
mov
aad
push
icebp
xor
mov
fdivs
cmp
ds
sbb
jle
inc
fmul
shrl
std
push
inc
xor
adc
daa
mov
jb
pop
insl
data16
in
cmpsl
mov
ret
int3
sbb
dec
and
ds
pop
inc
pop
sbb
xchg
jb
add
int
push
jecxz
push
adc
mov
loopne
lcall
and
sub
jo
and
lods
arpl
repz
arpl
jl
push
dec
mov
fldenv
xchg
outsb
xor
inc
fsubp
push
pop
fidivs
lock
mov
pop
xor
cmpsl
rcr
adc
ret
jnp
xchg
mov
push
ret
ucomiss
fiadds
push
xor
push
or
mov
iret
adc
cwtl
cmc
cmp
imull
imul
mov
repnz
nop
aad
adc
sbb
cmp
sub
dec
or
xor
push
imul
dec
sub
cli
testl
dec
pushf
xlat
into
mov
bound
pop
mov
pop
mov
bound
or
aad
add
xchg
movsb
mov
test
out
arpl
daa
ljmp
gs
push
aam
or
xchg
and
in
cmc
jnp
inc
das
sub
sti
or
inc
in
fstp
faddl
test
lea
call
les
adc
mov
shl
mov
mov
mov
dec
sub
inc
cmpl
or
jl
icebp
pop
test
adc
jle
out
inc
pusha
mov
pop
out
mov
bound
sbb
int3
adc
inc
stos
mov
xchg
fwait
and
dec
std
jp
ret
sub
outsb
aam
lret
add
xchg
or
sub
ljmp
std
sbb
js
cli
fistps
add
adc
cmp
push
jg
stc
pop
sbb
sub
sub
sahf
mov
sbb
fs
cmc
mov
ja
mov
addr16
lret
cwtl
inc
fmull
dec
jle
xchg
dec
test
fs
out
outsb
push
nop
mov
ret
cs
inc
in
dec
daa
imul
xor
jno
sar
out
loop
std
xor
filds
adc
addb
jno
loop
imul
int3
and
xor
test
scas
fsubrl
dec
sbb
inc
les
loop
pop
int
in
xchg
inc
mov
in
and
dec
xor
stc
sahf
pop
stos
bound
jl
mov
lods
or
in
subb
inc
xchg
pop
enter
sbb
pop
pop
arpl
mov
dec
popl
pmuludq
into
test
mov
cmpsb
sub
mov
mov
push
aad
int3
test
mov
adc
mov
and
adc
cmp
ret
sub
cmp
dec
adc
inc
xor
shrl
adcl
xchg
add
fldl
push
loope
stos
push
in
mov
lret
mov
imul
push
cmp
dec
lret
sbb
das
xchg
mov
hlt
inc
xchg
cld
sub
or
sub
rclb
scas
leave
rcrb
push
movsl
xlat
xchg
adc
push
subb
add
cmpsl
in
aad
les
mov
jns
fisubl
sub
or
add
das
sbb
pop
sar
inc
add
xor
or
popf
xor
xchg
mulb
and
rcr
cmp
int3
jno
pop
xchg
std
push
ret
mov
sub
fisttps
xlat
mov
mov
cmpl
mov
insl
sahf
jl
mov
inc
ss
shll
sub
mov
or
in
iret
xchg
in
lret
loopne
pop
popa
fisubrs
cmpsl
data16
clc
cwtl
sub
scas
mov
inc
sbb
in
push
inc
mov
popa
mov
jl
test
xchg
in
adc
movsb
add
or
mov
sarl
cmp
fldlg2
mov
rcll
aam
cs
stos
pop
sub
jbe
popa
aam
inc
mov
fcomps
in
movsl
mov
stos
jge
mov
loop
xchg
jns
nop
xor
inc
inc
pop
pushf
shl
dec
loopne
push
pushf
mov
dec
sub
jbe
dec
dec
lods
outsb
cmp
fs
ret
push
mov
test
pop
fwait
mov
aad
leave
and
push
imul
mov
movl
xchg
cmc
fcomps
cwtl
in
int3
push
lds
push
clc
js
cmp
imul
imul
in
mov
fidivl
add
lods
dec
push
test
lret
std
inc
inc
jne
xor
enter
ret
clc
lret
scas
sbb
sub
daa
das
bound
in
push
cmp
mov
movsb
adc
cwtl
and
movl
mov
loope
adc
cmc
aas
or
and
and
mov
jbe
dec
imul
imul
sub
mov
xor
aas
jge
outsl
mov
shrb
xor
push
into
push
push
xchg
xchg
adc
cwtl
fstpl
loopne
sbb
mov
inc
clc
inc
pop
dec
push
mov
or
call
pop
jp
in
sub
out
fwait
test
sti
sub
pop
pop
xchg
jne
cmp
aad
jns
pop
rcl
pop
mov
mov
push
sbb
in
mov
sub
test
mov
pop
insb
mov
pop
cmp
adc
data16
cmp
popf
and
mov
pop
lods
cmpl
mov
xchg
mov
push
add
leave
xchg
push
lahf
mov
inc
and
push
or
xchg
pop
jnp
icebp
dec
jns
adc
popf
ja
cltd
repz
out
pop
mov
and
call
mov
and
add
mov
rolb
popf
inc
hlt
flds
call
int
adc
jecxz
fucom
jns
fwait
mov
inc
sbb
in
mov
lret
call
xchg
cmp
cmp
out
test
lea
repz
mov
rorb
movl
add
add
sbb
sub
mov
dec
rclb
dec
pop
test
cwtl
and
push
adc
fisubs
testb
fcomps
clc
sub
xchg
and
sub
inc
pop
idivb
sub
jecxz
leave
sahf
push
ss
mulb
sbb
lock
jns
inc
divl
out
dec
push
inc
and
ret
scas
popf
and
mov
das
push
loopne
mov
es
repz
notl
adc
lret
fwait
ret
sarb
nop
in
inc
push
sbb
or
mov
or
popf
repnz
inc
pop
or
jns
pushl
pusha
lds
mov
and
clc
ds
iret
xchg
notl
dec
gs
xor
rcl
pop
sarl
sbb
movsl
mov
sahf
adc
movl
push
daa
push
pop
loop
mov
jecxz
lock
push
fsubrl
fcoml
push
jnp
pop
adc
psubd
mov
out
xor
jle
in
sub
fcoms
jl
pop
in
push
xchg
rcl
stos
push
push
aam
xor
int
daa
sahf
cmp
add
jns
cmp
movsb
mov
jnp
adc
test
rcrb
das
mov
arpl
mov
out
dec
jnp
inc
pushf
insb
sbb
or
insl
sbb
mov
inc
or
xor
mov
iret
xchg
pop
sbb
std
int3
mov
jo
loopne
pop
mov
inc
jb
xchg
xchg
push
pop
add
xchg
jnp
clc
addl
or
gs
cmp
adc
out
adc
cs
sbb
push
repz
lods
scas
in
into
insl
pop
repz
ret
jmp
and
bound
push
mov
and
xor
or
push
push
mov
mov
rclb
mov
popf
add
xor
xchg
dec
push
enter
pop
add
sti
jecxz
je
stc
test
lods
xchg
push
stos
in
and
arpl
cmpsb
pop
or
pop
sub
div
lock
pop
repnz
adc
pop
xchg
ljmp
inc
mov
scas
xor
inc
iret
pop
repnz
mov
test
nop
push
idivl
mov
scas
dec
cmp
xchg
or
scas
sbb
cmp
outsb
or
inc
jecxz
negl
pop
mov
fimuls
jmp
fs
fildll
xchg
inc
mov
pusha
sbb
xor
xor
stos
push
push
cltd
int3
sbb
leave
dec
add
push
addr16
mov
jno
ror
int3
int
cmc
es
shrb
or
cmp
jb
int3
ds
add
pop
or
std
lcall
test
mov
stc
push
mov
push
sub
rorb
test
mov
pop
jmp
inc
outsb
push
and
inc
jecxz
xchg
and
movsb
add
cli
xchg
xor
cmp
xlat
inc
xor
mov
sub
dec
mov
add
sub
add
test
ljmp
rcrl
push
das
leave
fcompl
popf
jno
inc
xchg
sbb
nop
xchg
pushf
sbb
push
ret
pushf
sub
jns
int
out
adc
xchg
aas
cmp
and
lret
push
nop
jle
das
lahf
popf
int3
jl
cmc
pop
cmpsb
cmpsl
jmp
lcall
out
or
stos
cmp
fcoms
into
cmp
arpl
enter
cmp
lds
pop
jb
inc
jnp
pushl
cli
and
aaa
repnz
ficompl
lds
adc
imul
popa
bound
sar
out
adc
push
in
mov
jne
sahf
popa
rcrl
push
and
push
jecxz
cmpsl
push
inc
sbb
pop
sahf
daa
sbb
or
mov
loop
pop
fs
imul
mov
xchg
notb
mov
pop
inc
and
cltd
out
lahf
inc
sub
jmp
dec
rcl
xor
mov
sti
dec
mov
sub
xchg
js
out
or
je
cmp
inc
push
push
out
cli
xor
rorl
xchg
cmp
xor
cwtl
test
aas
sub
pop
mov
mov
or
cwtl
call
dec
ficompl
iret
daa
fcoml
dec
sbb
out
js
dec
mov
pop
cmp
push
bnd
mov
hlt
xchg
lock
stos
lock
pop
cli
dec
cmp
or
xchg
pop
mov
hlt
addr16
push
sbb
sbb
dec
adc
roll
jnp
push
pop
push
daa
inc
mov
je
add
pop
daa
fldenv
cmp
dec
sbbl
dec
dec
pop
repz
out
std
cmp
fistpll
sti
sub
rorl
out
xor
aaa
loopne
cmp
repz
or
and
push
outsl
cmc
jmp
outsl
out
mov
stc
fs
add
rorb
jns
cmp
inc
sub
out
cs
xchg
cwtl
jnp
inc
sti
in
shll
aad
lods
adc
pop
mov
push
mov
mov
stos
jp
or
add
xchg
sub
inc
inc
ja
ss
mov
shll
je
mov
iret
inc
mov
pusha
in
test
add
pop
pushf
push
push
psraw
ret
cmp
lahf
mov
pop
dec
sbb
fs
xchg
inc
ss
pop
sub
pop
sbb
pop
loope
fcoml
xor
sbb
icebp
jp
movsl
or
repnz
je
pop
mov
jns
pop
dec
in
hlt
and
mov
shll
or
cmp
imul
dec
fiadds
lods
fwait
cmp
cmp
fs
xor
mov
or
xor
push
std
rol
mov
hlt
inc
stos
test
inc
xchg
lret
inc
and
push
in
imul
mov
dec
out
popf
es
dec
shll
out
stos
cmpsl
inc
jo
pop
fiadds
or
or
pop
push
orb
or
leave
jb
icebp
jbe
cwtl
divl
or
sbb
pop
and
sub
rcrb
or
jmp
repnz
clc
jbe
inc
sub
sub
test
shl
popa
sbb
inc
xchg
out
xor
fnop
xor
pop
pop
cltd
cmc
cmp
lods
jae
mov
shlb
aad
incb
loop
xor
shll
xchg
mov
xor
popf
rep
stc
stos
icebp
ret
lods
lods
mov
mov
xchg
testl
ret
lcall
repnz
pop
or
rcl
and
add
adc
fiadds
decb
idivl
mov
hlt
mov
and
dec
mov
repz
test
sbb
cli
rclb
loopne
lds
mov
in
lock
add
gs
xor
fmul
popa
mov
cwtl
dec
push
addr16
adc
mov
rcr
sub
push
xchg
push
add
cmpsb
ja
mov
outsl
das
arpl
mov
jmp
outsb
leave
xchg
inc
popa
shlb
movsb
push
lods
mov
lret
pop
pop
mov
xor
aad
cmpsl
mov
lret
adc
rcrl
push
pop
jl
sbb
call
xchg
rorb
pop
xor
xchg
xchg
push
pop
out
mov
jmp
jnp
dec
cmp
aad
pop
scas
cmc
add
dec
sbb
sbb
stos
rorl
popa
mov
stos
mov
ror
add
cmp
push
mov
ret
and
clc
xlat
pop
sub
loope
jmp
fisubrs
pop
xor
insl
cmp
ja
dec
imul
jns
sbb
imul
stos
sub
lea
scas
out
mov
jae
negb
dec
cmp
jae
cmpsl
ror
ret
scas
popa
negl
stc
sub
push
stos
jnp
cld
test
sub
imul
lods
mov
cwtl
mov
jne
pushf
push
push
or
inc
dec
jns
stos
js
inc
inc
jecxz
lods
daa
addl
mov
xchg
xchg
dec
mov
mov
mov
cltd
ret
cmp
jl
pop
jo
mov
std
xchg
jle
in
push
stc
test
sahf
lock
mov
cwtl
lret
xchg
sbb
mov
inc
loop
sub
inc
and
adc
and
xor
xchg
lock
inc
add
sub
std
mov
test
inc
dec
movsb
dec
fimuls
daa
or
iret
inc
mov
jbe
adc
pop
inc
and
add
stc
adc
fcmovnb
jl
push
and
lock
aad
pop
imul
pop
add
jmp
jnp
testl
jb
push
gs
sbb
cmp
pop
push
jns
in
out
or
hlt
imul
les
sub
push
and
out
cmpl
xchg
cld
mov
add
nop
aas
mov
xor
xor
repnz
inc
cmc
mov
xchg
stc
outsl
push
xor
ja
xchg
inc
push
jb
les
sub
sar
pop
xchg
shll
subb
fsubrs
fucomip
pop
dec
fsubs
int3
push
pushl
stos
inc
push
jg
ret
or
mov
jae
ficomps
or
push
push
je
imul
dec
pusha
pushf
push
push
or
fwait
imul
add
orb
pop
sbb
jnp
xor
xchg
and
clc
shlb
mov
and
repnz
outsb
or
cmp
or
in
js
mov
pop
pop
inc
jns
jbe
loopne
mov
push
pop
cs
xlat
mov
cmp
popw
pop
in
jb
jb
mov
xchg
adc
mov
mov
fldl
je
das
dec
pusha
xor
inc
mov
pop
push
jle
push
rcll
mov
je
int3
les
or
into
pop
fwait
and
add
fwait
adc
repnz
sub
inc
and
mov
jp
mov
loop
xchg
and
jo
insl
out
jle
sbb
pop
adc
push
nop
inc
test
fmul
xchg
roll
xchg
rclb
ljmp
push
inc
fucom
mov
dec
mov
jg
push
icebp
mov
std
scas
sub
lods
cltd
and
aaa
or
movsb
jno
jbe
repz
inc
or
outsb
xchg
and
cmp
loopne
movsb
push
stc
xor
pop
mov
call
push
dec
in
bound
or
pusha
ss
dec
dec
mov
cmp
shrb
jo
jp
mov
dec
add
sub
adc
mov
jae
mov
jge
out
push
pop
mov
test
arpl
inc
ja
add
add
mov
pop
push
mov
popf
add
jmp
ljmp
aaa
jecxz
ss
into
negl
mov
and
xor
fisubl
mov
sar
and
mov
and
push
or
into
dec
jns
mov
in
mov
cmpsb
cmp
push
pop
mov
mov
pop
push
insb
mov
dec
insb
inc
or
and
in
or
xor
xchg
sub
sbb
fisttpl
icebp
sbb
sbb
pop
clc
dec
lahf
inc
ds
sub
xor
stos
int
jl
mov
call
pop
add
fsts
data16
mov
cmp
mov
and
jbe
push
subl
push
stos
mov
xor
fimuls
xchg
adc
test
push
jne
scas
mov
and
adc
sbb
dec
push
sub
and
fnstsw
dec
out
nop
ljmp
ljmp
mov
dec
jo
in
inc
xchg
and
sbb
lds
cmc
adc
inc
cli
fsts
pop
cmp
jle
mov
xor
mov
stc
test
scas
fidivs
adc
push
and
pop
fcmovu
jle
cs
fadds
mov
pop
pop
pusha
iret
hlt
enter
dec
shlb
fsubl
in
subb
push
push
lcall
sub
popa
faddl
gs
sbb
inc
out
or
sbb
and
stos
out
xor
sub
cmpsb
rcrl
lret
nop
bnd
int3
push
dec
cmpsb
jns
xchg
fwait
mov
mov
pop
out
push
push
jo
sub
pop
loope
xchg
inc
enter
mov
data16
xor
sahf
cld
sub
dec
mov
scas
icebp
pop
mov
mov
mov
daa
nop
jl
and
scas
fildl
incl
je
arpl
sbb
xor
adc
and
mov
push
addr16
stos
rcll
sbb
leave
adc
sbb
leave
imul
add
push
pop
sub
mov
jne
adc
in
inc
sbb
sbb
scas
fs
or
pop
int3
push
hlt
adc
gs
in
jns
cmp
fwait
push
imul
fdivs
inc
idiv
nop
enter
mov
icebp
and
test
and
fsubr
adc
inc
cmpsl
arpl
pusha
adc
dec
stos
jp
lahf
inc
or
jno
sbb
aaa
push
faddp
out
sub
sbb
cltd
mov
icebp
gs
xchg
adc
cmpb
cmp
loopne
mov
adc
cmc
cmc
ficompl
jne
arpl
cmpsl
out
cmp
ret
lret
in
pusha
daa
lock
mov
dec
sbb
mov
add
push
push
mov
movsl
je
cs
adc
cmpsl
lods
clc
adc
sub
inc
test
sub
scas
addr16
cmpsb
jp
adc
adc
in
jl
push
ret
cmp
cltd
xchg
mov
arpl
mov
xchg
cmc
rorb
adc
insb
fs
jae
dec
mov
sbb
mov
pop
ds
in
icebp
jne
leave
out
lcall
fistpl
movsl
stos
and
mov
xlat
popf
and
rcl
pop
dec
xchg
addr16
push
imul
popf
mov
push
adc
das
nop
jg
pushf
call
scas
xchg
mov
push
dec
xlat
cmp
xchg
adc
cmpsl
js
sbb
cmp
cmp
clc
icebp
sbb
les
mov
mov
xor
mov
enter
jbe
stc
mov
out
mov
adc
lea
jno
inc
pop
fnstsw
cmp
fsubl
int3
fmull
lahf
dec
sbb
mov
sti
push
mov
dec
repnz
sub
push
mov
ljmp
mov
repz
mov
mov
mov
mov
jns
push
jb
in
mov
ss
lods
test
fs
dec
add
scas
aaa
ja
xor
test
cmp
inc
mov
mov
inc
ss
push
mov
fsubrs
bound
gs
add
xchg
fs
fdiv
mov
cmpsb
add
mov
lcall
into
mov
addr16
inc
loopne
loope
shrl
enter
stc
pop
inc
sti
test
push
ret
xor
fisttps
sub
gs
dec
xchg
sbb
orb
aas
sbb
test
repnz
pop
mov
hlt
mov
sub
pop
insb
sub
sbb
lcall
mov
stos
retw
loopne
test
xlat
dec
fisttpl
out
xchg
lods
mov
andb
imul
int3
les
mov
pop
push
aas
stos
and
shrb
movsb
rcrl
push
jg
mov
dec
test
and
mov
lea
addr16
adcb
push
test
cmpsl
mov
push
lret
add
psubsw
mov
add
fwait
xor
push
insb
and
push
ror
fsub
jp
xchg
and
mov
sbb
sahf
dec
mov
jle
stos
sbb
sbb
rcl
adc
daa
lds
aam
or
sahf
jp
mov
ret
xor
inc
xchg
jbe
and
movsb
test
nop
les
js
adc
inc
repz
dec
int
add
aad
popa
rcrb
cmp
lcall
test
push
in
ljmp
cld
out
dec
dec
and
mov
mov
mov
imull
lods
ret
scas
jbe
and
push
dec
jge
jg
dec
pop
fistl
or
add
push
movl
outsb
daa
pop
imul
cmp
push
rorl
add
loop
hlt
ds
ja
mov
xchg
test
movsl
sbb
movsb
call
daa
mov
push
xchg
out
xor
nop
xor
add
cmp
mov
mov
dec
add
pop
aas
cli
cmpsb
pushf
mov
mov
jmp
loope
jns
lds
adc
pop
pop
add
js
mov
mov
sub
xchg
es
movsl
dec
out
popa
les
in
movsl
insb
add
mov
add
scas
or
xchg
out
loope
sarl
mov
sbb
cmp
push
movsl
mov
dec
dec
and
data16
adc
fwait
add
mov
mov
fwait
jb
xor
sti
xor
mov
jle
stc
sub
rol
lcall
push
stos
cmp
mov
fldl
mov
jmp
sbb
adcb
jo
inc
inc
cli
mov
pop
lods
lods
dec
or
pushf
testb
jg
stos
out
adc
js
mov
sub
jno
mov
popf
add
aam
mov
mov
or
js
sbb
jne
jle
bound
loopne
and
roll
jnp
cltd
mov
call
insl
repz
push
or
pop
jge
and
adc
mov
ret
push
loopne
pop
jne
mov
pop
adc
add
mov
sbb
fcompl
and
mov
ss
xchg
add
call
lock
sbb
xchg
pop
mov
nop
call
sub
in
push
pushl
mov
cmp
lahf
in
jle
es
sbb
xor
sti
adcb
inc
xchg
mov
or
into
not
xchg
rorb
adc
outsb
out
jmp
loope
push
cmpsl
inc
nop
mov
dec
mov
scas
dec
lea
jge
loopne
jae
ret
lods
nop
xorb
and
add
popf
mov
adc
rcrb
lret
hlt
inc
cli
jae
icebp
sub
adc
mov
cli
cmp
lods
and
mov
test
sti
xchg
fdivl
sbb
in
jp
mov
add
outsb
xchg
scas
in
add
fistpl
jmp
add
shl
cltd
aad
cli
hlt
mov
movsb
inc
push
fimull
dec
adc
pop
mov
filds
or
mov
cwtl
or
jg
pop
cmp
xchg
push
in
fistl
scas
push
scas
ret
adc
ss
out
add
outsb
int
out
xchg
out
outsb
jecxz
add
push
jne
sub
mov
pushf
push
cltd
fisubl
add
lea
subl
adc
sub
insb
ss
xor
xor
int
push
xchg
or
imul
cmp
push
jnp
fsubrs
mov
push
outsl
adc
sti
xchg
sbb
mov
mov
add
lods
fcomip
push
sbb
xchg
mov
xor
adcl
pop
test
iret
dec
int
rorl
fwait
mov
sub
push
icebp
jns
dec
fdivrs
cmc
in
sbb
sub
out
out
jp
rcrb
xor
push
pushf
enter
movsl
idivl
mov
jecxz
push
les
inc
sub
std
jo
xchg
fucomp
cmp
int
mov
mov
aam
in
sahf
mov
jae
out
adc
cmp
sub
dec
into
cmp
jl
inc
ljmp
cmpsb
and
add
lds
pushf
mov
ja
push
ljmp
adc
popf
jno
xchg
in
loope
lahf
sarl
orl
enter
ret
in
jae
lret
xor
pop
dec
stos
push
fsubrl
push
mov
out
movsl
inc
cmc
lret
fidivs
push
adc
inc
imul
stc
mov
add
push
push
mov
cmp
movsb
popf
push
pop
ljmp
std
loope
fbstp
push
ds
stc
inc
repnz
out
pop
in
sbb
iret
xor
cmp
imull
push
fidivrl
into
xchg
adc
insl
jmp
sbb
lods
call
mov
xchg
add
jl
stc
loop
sbb
or
xor
push
test
pusha
aaa
fstl
popf
adc
sbb
cmc
test
je
fimull
lods
mov
jmp
jp
adc
inc
mov
jbe
xchg
mov
scas
jmp
loopne
arpl
lahf
sub
inc
fwait
mov
mov
inc
daa
or
push
inc
insb
add
test
lock
loop
push
jge
out
cmpsl
nop
xchg
cmp
hlt
fidivl
cli
out
pop
mov
mov
push
dec
add
push
xchg
cmc
pushf
stos
aad
pop
push
rclb
mov
sub
mov
cmp
in
scas
das
shrl
sub
inc
sbb
loope
std
mov
loope
lret
dec
xlat
inc
or
add
into
icebp
push
lds
mov
adc
mov
jg
add
cmp
cmp
jle
add
iret
jp
daa
and
dec
lock
pop
push
jg
and
ljmp
adc
inc
mov
pop
xor
add
sarl
adc
call
pop
cmp
gs
int3
es
imul
invd
sbb
addr16
mov
sbb
jge
or
jns
lock
or
dec
sbb
aas
xchg
xchg
sub
and
lahf
dec
xor
les
dec
test
addr16
cmc
leave
shrl
aas
sbb
add
xchg
dec
sub
idivb
or
dec
popf
mov
pop
add
lcall
popf
fs
sub
jmp
add
sub
jns
dec
mov
xor
movsl
pop
adc
arpl
jo
cmpsl
dec
shl
inc
outsl
push
sti
jge
push
mov
nop
mov
xchg
outsb
dec
arpl
mov
imul
mov
xchg
imul
in
vsqrtss
sti
or
gs
test
xchg
sahf
mov
data16
hlt
int
sub
popa
aad
dec
add
sbb
mov
cmpsl
push
sub
dec
xor
pop
cmpsb
mov
push
rcrl
rorl
pop
cmpsl
hlt
cmpsb
jecxz
push
mov
mov
mov
rcrl
std
sahf
movsb
add
call
bound
clc
test
orb
sbb
outsb
sub
pusha
push
mov
mov
scas
out
mov
cltd
ret
xchg
xchg
das
imul
xor
mov
sub
outsb
loopne
sub
repnz
loopne
repz
inc
add
mov
ret
pop
dec
ficoml
pop
inc
clc
mov
and
inc
and
mov
and
hlt
jne
outsl
iret
mov
pop
testb
out
lea
int
mov
aad
inc
in
push
fdiv
and
sub
fidivl
ss
pop
push
es
daa
bound
dec
mov
out
cmp
add
adc
pusha
mov
fs
subb
pushf
stos
add
cmp
cmpsl
adc
mov
or
push
inc
sub
scas
xor
scas
xchg
xor
decl
aam
fidivrs
fistps
sets
test
push
js
mov
or
adc
mov
sbb
loope
ret
mov
pushf
rol
aam
push
jnp
or
jg
fsubp
mov
push
dec
mov
stos
cs
xor
cmc
push
aaa
push
in
pop
ret
cwtl
test
xor
orb
sti
pop
fbld
int
cmp
shlb
mov
cmpsl
imul
add
mov
inc
xchg
jae
subb
inc
mov
dec
inc
jno
inc
movsb
xchg
loopne
ss
dec
test
pop
outsl
jp
dec
cmp
aas
sbb
gs
inc
xchg
cli
jmp
hlt
mov
sbb
outsl
adc
aaa
divb
fdivr
mov
mov
fwait
cld
mov
xchg
pop
scas
cmp
loopne
jo
push
rcll
sub
pop
mov
pop
xchg
and
lret
scas
ds
adc
cwtl
push
dec
mov
mov
addr16
push
hlt
jmp
scas
in
mov
test
ljmp
rolb
mov
aas
andl
ljmp
mov
mov
rol
add
test
cwtl
pusha
dec
pop
cmp
cmp
test
xchg
scas
mov
loop
sub
push
pop
js
or
lret
mov
in
daa
data16
out
pop
xor
or
out
and
scas
xchg
dec
pushw
clc
es
rcrl
stc
adc
test
in
sub
stc
scas
xlat
aam
add
add
movl
and
shrb
mov
mov
aas
repz
push
sbb
addr16
cmp
mov
iret
mov
or
cs
shr
loopne
clc
enter
adc
jge
xor
loopne
loopne
mov
cwtl
jg
inc
lock
jo
add
ljmp
push
cmc
dec
pop
insl
int3
cmp
dec
fisttps
in
push
test
rorl
jl
xor
outsl
dec
out
int3
add
aas
add
shlb
das
js
xor
ds
mov
pop
popa
adc
das
mov
pop
push
mov
mov
ds
jmp
subb
aas
bound
mov
jp
mov
mov
and
mov
and
or
mov
shll
pushf
and
cmp
popa
adc
shll
add
mov
aad
xor
cmpsl
pop
cmc
ficoml
shrl
inc
xchg
minps
adc
jmp
sarl
push
int
sbb
ds
call
dec
jns
hlt
xor
ret
je
out
or
dec
rolb
int3
inc
subl
lret
mov
cmp
fsubrs
ss
mov
and
test
repnz
pop
or
and
adc
and
cwtl
aad
xor
cli
sbb
inc
sbb
push
push
addr16
daa
xor
fnstsw
out
fistpl
add
sbbl
call
mov
aad
int
cltd
popa
lea
and
dec
out
in
gs
inc
scas
mov
decb
mov
fs
bound
into
mov
inc
out
call
nop
out
pop
cwtl
sub
hlt
arpl
aaa
xchg
push
xor
pop
and
mov
ret
mov
stos
and
fstpt
ljmp
in
cmp
test
outsl
aad
int3
jg
jo
cmp
pop
test
mov
lahf
add
test
adc
and
pushfw
xchg
es
jbe
and
pop
sub
imul
loopne
jae
jmp
call
or
xchg
cli
sbb
aad
mov
inc
daa
divl
and
lods
loope
jns
jns
sub
in
mov
jmp
mov
loopne
sbb
scas
outsl
xor
cmp
jmp
bound
fldt
test
pop
sub
rcll
adc
mov
push
mov
sub
imul
dec
xchg
add
sbb
xor
in
jg
xor
loop
ret
lahf
mov
jp
jmp
pop
or
sti
int3
out
call
pop
push
pushf
dec
lea
push
xchg
mov
test
jg
sbb
dec
dec
fstps
mov
jecxz
push
jb
xlat
sub
leave
mov
hlt
mov
push
mov
jno
aas
push
adc
inc
cmp
inc
lahf
cmp
cwtl
sub
inc
cmp
mov
sti
rolb
push
fsubrl
push
and
shrb
ss
cmp
adc
pop
and
or
or
mov
adc
loop
and
and
into
jo
mov
scas
pop
outsb
movsb
movaps
fcmovnbe
jg
decl
pop
pop
sbb
and
mov
or
ja
mov
sbb
and
push
mov
into
test
mov
mov
out
repnz
lahf
xlat
jmp
adc
gs
cmpsl
mov
add
frstor
add
inc
dec
push
xor
fs
xchg
pop
xorb
jmp
dec
lods
inc
sbb
dec
gs
and
mov
mov
xchg
mov
shlb
outsb
aaa
xor
xor
dec
sub
jne
addr16
mov
lret
mov
xor
dec
negl
mov
push
mov
mov
stos
int3
test
insl
subl
idiv
and
dec
mov
mov
xchg
call
xlat
or
jecxz
xor
xchg
shll
out
xor
add
sub
movsl
les
cmpsb
sub
push
mov
pop
pop
loope
mov
dec
jo
pop
jb
mov
stos
es
fs
stos
stos
out
shll
push
out
sarb
sub
add
hlt
jmp
dec
push
rclb
inc
cld
and
sub
push
ja
and
mov
in
ret
mov
mov
cltd
mov
jnp
popf
push
loopne
push
das
aam
insb
dec
xor
sbb
enter
loop
sub
scas
lret
daa
aaa
pushf
nop
loop
fistps
lea
sub
lods
mov
mov
insl
jae
or
movsb
out
imul
rcr
call
lods
sbb
cmpsb
sbb
decb
enter
lds
push
pop
lret
adc
or
cmc
movsl
sbb
dec
jae,pt
pop
sahf
movsl
add
data16
fcoml
ljmp
ret
loopne
movsl
lods
adc
inc
cmc
pop
ja
push
push
fdiv
add
push
mov
in
cmpsb
cmp
lret
scas
mov
xchg
lods
lret
jne
in
add
jge
sub
pop
imul
sbb
fldcw
fs
pop
repnz
inc
xchg
push
sbb
lds
add
sbb
cltd
jle
test
fs
lods
das
aad
xchg
enter
and
adc
push
push
imul
push
mov
cmp
push
mov
stc
sbb
les
call
pop
movsl
std
jns
out
dec
test
dec
push
xchg
jb
iret
jno
cmp
dec
xchg
adc
psubd
inc
mov
lock
adc
sbb
adc
es
xor
push
mov
shlb
lret
fwait
je
cmpsl
jns
push
pop
jg
inc
inc
adc
push
scas
mov
sbb
notl
or
xchg
xor
leave
xor
xchg
das
mov
aas
hlt
dec
jne
lea
jns
lds
ds
out
xchg
pop
xor
sbb
cmc
dec
div
mov
mov
or
push
mov
in
push
push
sti
lods
shl
jnp
adc
daa
cmc
dec
jecxz
fildl
xchg
enter
cmp
sbb
xchg
cmp
xlat
pusha
arpl
hlt
mov
outsb
xor
enter
sbb
dec
pop
icebp
in
jge
jmp
push
dec
jns
adc
cmp
or
mov
and
mov
mov
mov
inc
cmp
sbb
sub
fildll
rcrb
lds
daa
or
stc
pop
out
pop
adc
incl
pusha
nop
push
ljmp
inc
cmp
out
test
inc
xchg
pop
jno
shrb
adc
mov
dec
in
ret
push
inc
stos
fcom
mov
scas
pop
sbb
fs
mov
xor
xor
iret
in
lret
adc
sub
in
push
hlt
fcomp
daa
or
adc
mov
jns
mov
movsl
cli
fnstsw
lret
fwait
inc
inc
and
adc
fucomip
daa
lds
es
arpl
cld
cmp
pop
mov
cld
dec
std
sub
sbb
fdivs
imul
mov
loopne
sbb
cltd
shlb
inc
add
cmpsb
movsb
sub
inc
add
andl
std
jae
dec
or
aam
push
pop
loop
je
movsb
movsb
call
jge
push
inc
cmp
push
inc
adc
mov
cmc
loope
jae
jg
repz
pop
mov
fwait
rcll
outsb
push
addr16
and
in
ficomps
adc
leave
es
clc
in
hlt
into
pop
pop
and
fisubrl
fs
inc
xchg
aad
lds
fisubs
aas
mov
scas
cli
mov
sub
orl
cmp
sub
dec
iret
call
inc
loope
pop
les
ss
cmc
mov
loope
aad
arpl
mov
rcrl
jl
int3
lock
sbb
shll
dec
push
out
arpl
aad
cmp
lret
mov
mov
adc
subl
cwtl
inc
jmp
or
call
iret
jbe
dec
or
or
add
xlat
fidivrs
cltd
sub
push
sub
dec
cmp
fwait
jg
xlat
sar
dec
in
jge
cmp
repz
lea
and
mov
dec
add
js
xchg
popa
scas
or
mov
in
add
out
setb
and
sbb
dec
stc
movsb
divb
pop
vandnps
arpl
pop
xlat
sti
xchg
pop
popa
cld
inc
mov
mov
frstpm(287
dec
xchg
fimuls
xor
inc
cmpsb
push
push
into
ljmp
ss
into
inc
pop
loope
pop
leave
add
in
aad
sbb
lods
lods
pop
jl
mov
ljmp
push
add
jle
mov
xor
call
nop
ja
test
je
int
scas
mov
movsl
cmp
or
mov
int3
adcl
insb
test
movsl
cmpsb
into
test
cmp
xchg
dec
jo
jl
lods
jbe
daa
call
scas
fildl
fidivrl
push
daa
inc
jo
or
jno
rorl
fidivl
mov
iret
xchg
lods
lret
sbb
cli
cmpsl
cmp
lock
add
jnp
xor
cmp
xchg
inc
aad
mov
inc
adc
mov
dec
mov
xor
scas
mov
stc
adc
or
js
adc
or
jecxz
pop
fcmovnu
mov
and
mov
inc
mov
push
lret
add
adc
or
pop
sbbl
popa
rolb
clc
cmp
sti
loopne
mov
push
sub
add
push
icebp
jge
inc
pushf
ds
fdivr
cs
rclb
lcall
dec
mov
mov
xchg
aas
sbb
loopne
lods
and
loopne
leave
out
das
popf
pushf
adc
sub
js
mov
mov
in
and
es
imul
sbb
rolb
shl
stos
push
repz
leave
cli
js
sub
rorl
sub
or
dec
cmp
sbb
mov
or
mov
lret
js
cmp
mov
xor
nop
sbb
inc
mov
aas
push
das
adc
test
repz
out
cs
fcomip
fucom
js
ljmp
je
ljmp
add
fwait
add
mov
inc
cmp
loope
pushf
and
js
dec
xchg
leave
cmpb
ljmp
adc
icebp
hlt
cli
or
fldl
jb
movsb
mov
rolb
es
stos
mov
int3
sbb
inc
or
and
sbb
pop
popf
cmp
dec
or
scas
mov
out
mov
lahf
xchg
xchg
xchg
cmp
mov
adc
xor
jb
aas
xlat
inc
das
mov
pop
loopne
shrb
lock
cmp
orl
iret
ret
subb
imul
jo
call
dec
jg
je
outsl
mov
mov
mov
call
loopne
cmp
bound
or
fidivs
in
mov
jp
cltd
into
movsb
jmp
push
pop
lock
bound
ficoms
sbb
imul
mov
inc
xor
add
cs
pushf
int
cmc
cld
icebp
and
lock
stos
dec
and
das
push
jge
loope
xchg
mov
add
frstor
mov
fstpt
inc
cmpsb
ja
mov
lret
inc
xchg
loopne
fistpll
mov
push
jl
push
adc
out
mov
push
jbe
and
jb
mov
mov
pushf
pop
sarl
lcall
push
cmpsb
sub
mov
fldl
sbb
sbb
ret
jo
adc
add
mov
jno
pop
dec
cwtl
mov
hlt
sbb
adc
inc
mov
mov
gs
fbstp
outsb
adc
mov
outsb
sahf
pop
aam
xor
popf
es
or
push
int
mov
mov
test
sbb
out
test
cltd
xor
cmc
mov
add
sub
je
int
cmp
mov
ss
stos
cmp
push
mov
sarb
shll
adc
repz
outsl
int
jbe
scas
mov
dec
sub
mov
addr16
jno
cmp
stc
iret
ret
movsb
lret
js
adc
mov
outsb
aaa
xchg
ds
mov
or
add
loop
push
arpl
repnz
call
push
sbb
je
scas
into
jg
call
daa
in
mov
stos
mov
mov
sub
mov
push
out
mov
xchg
in
nop
and
xchg
push
loope
or
inc
xor
je
xor
popa
aas
repz
push
push
bound
stos
and
and
rcrl
pusha
and
and
sub
fmuls
mov
test
xchg
mov
repz
sub
es
push
fyl2xp1
std
arpl
mov
push
mov
adc
mov
jae
cltd
sub
test
jmp
cli
aad
lds
cmpsb
cmc
mov
sub
inc
jae
mov
sbb
loope
mov
into
clc
and
mov
or
inc
push
mov
sbb
movl
fisubrs
ja
sub
or
daa
xor
pop
mov
mov
jo
data16
xchg
pop
sti
aaa
cmp
outsb
mov
les
leave
mov
idivb
fs
ret
aaa
stos
mov
push
pop
pop
jp
ror
and
aad
in
loopne
fscale
cltd
ja
gs
xlat
pop
dec
stos
ja
sub
sarb
xchg
les
movsl
cmc
mov
movsb
daa
push
addr16
xchg
out
test
sbb
mov
cmpl
es
push
sub
jle
pushf
push
push
in
cmp
mov
push
add
or
mov
push
popf
mov
cmc
jle
sub
jae
push
push
lock
and
xchg
pop
adc
sbb
lret
sbb
mov
sbb
lods
loope
les
and
icebp
icebp
pop
shll
and
insb
xchg
ret
or
aas
popf
jmp
mov
sarl
adc
sub
loopne
mov
pop
fdivrl
test
daa
daa
xchg
imul
movsb
fs
or
gs
pop
pop
jno
sbb
push
push
mov
lods
ljmp
pop
and
test
sub
addb
bound
xchg
jno
js
ret
pop
dec
lcall
aaa
sbb
and
lcall
fisubrl
adc
ret
and
fs
pop
movsl
clc
jle
add
movsl
xor
xchg
and
ret
sarl
pop
popf
cwtl
mov
mov
imul
lcall
jl
push
imul
popa
lret
jge
add
add
jecxz
and
inc
xor
sbbl
data16
dec
xchg
mov
sbb
sbb
fnstsw
clc
push
stc
mov
out
lret
cltd
icebp
push
movsl
inc
and
std
adc
cmp
or
cmp
sbb
enter
dec
inc
lret
je
push
push
subl
rcl
rol
inc
or
daa
inc
jp
sbb
jno
sarb
xor
xor
sub
mov
in
mov
xchg
and
shrb
pop
push
cmp
push
xchg
mov
lret
cmp
sarb
loopne
mov
cmp
aas
jecxz
lahf
mov
gs
jmp
or
jnp
fwait
xchg
test
push
shlb
pop
scas
daa
push
add
insb
mov
inc
xor
push
test
dec
dec
sbb
jge
lea
loop
call
bound
adc
xchg
cmp
xchg
or
sbb
pushf
rcll
std
xor
xchg
pop
daa
out
call
xor
pop
mov
clc
jno
pop
inc
scas
flds
push
or
and
pop
jecxz
addl
loopne
mov
mul
mov
roll
dec
lods
xchg
adc
cmp
mov
lds
lods
hlt
fisubrs
int3
sub
cmp
call
out
insb
or
fwait
clc
shr
loope
sub
and
loop
ret
jne
mov
and
mov
fisttpl
mov
cmc
push
inc
ret
inc
sti
sub
sbb
outsl
enter
push
shrb
inc
popa
mov
dec
mov
mov
cs
cmp
jge
sbb
icebp
inc
xorl
repnz
cld
int
cmp
and
push
dec
jmp
in
cmp
scas
and
adc
fistpll
inc
arpl
jo
mov
ret
lea
insl
rorb
gs
les
jno
fsubp
stc
adc
and
movl
sub
jg
mov
cvtdq2ps
into
stos
sti
pop
enter
mov
mov
mov
enter
int
cmp
jns
daa
xchg
std
lods
fdivs
mov
testb
cmc
jecxz
fwait
pop
in
ret
inc
into
roll
movsb
xor
test
push
lcall
lods
pop
pop
daa
jl
xor
inc
push
incl
test
or
int
push
sbb
inc
or
push
mov
push
xchg
notb
in
shlb
mov
sbb
cmpsl
lret
jae
test
sub
orb
aam
inc
test
das
ljmp
sbb
dec
les
or
cmpsl
sar
cwtl
outsb
push
cmp
lret
cmp
sbb
add
xchg
push
push
sub
jge
fwait
xor
xor
gs
lods
inc
popa
lret
xchg
ljmp
mov
and
push
and
addb
pushf
cmp
rolb
adc
xor
and
push
fists
in
jg
sarl
xor
jnp
dec
jg
into
mov
dec
dec
lea
sub
xchg
sub
xor
adc
or
cmp
or
lcall
cmp
pushf
cli
push
mov
iret
push
out
mov
call
sbb
cli
dec
shlb
icebp
mov
mov
insb
rolb
and
and
loop
sbb
lea
push
pop
push
inc
mov
popa
adc
and
loop
or
add
jp
cli
imul
cs
sub
and
clc
loope
xor
mov
repnz
fwait
addb
fisubs
cmpb
xor
ficoms
jb
and
rorb
fisubs
lea
aaa
push
vpinsrw
or
push
call
jo
and
pop
push
sahf
insl
insb
loopne
imul
xor
fistpll
jbe
cli
stos
outsl
loop
and
lret
insb
test
lods
fildll
jp
jecxz
scas
div
adc
out
test
jecxz
js
scas
in
mov
xor
test
aaa
out
push
dec
lock
call
sti
dec
xor
cmp
cwtl
bnd
adc
sbb
imul
add
imul
dec
stc
sbb
cmp
lock
jge
jns
mov
pop
loope
test
popf
jl
xorb
stos
andb
fwait
and
andb
mov
inc
jl
xor
int3
xchg
ss
inc
add
or
sub
mov
stc
add
popa
loope
or
sahf
pop
add
adc
xlat
sarl
xor
roll
inc
aas
out
cli
test
rclb
sbb
lret
pop
es
dec
dec
jg
lret
add
sub
in
pop
out
mov
dec
into
cltd
xchg
lret
jns
adc
pop
adc
clc
insl
jmp
in
sbb
lods
jge
out
xchg
inc
test
addr16
cmp
js
and
push
lcall
ret
mov
xor
lods
inc
mov
adc
pop
xchg
bt
lret
negb
adc
cli
imul
and
into
aaa
sub
negb
ret
out
rcrb
fdivs
in
mov
ljmp
into
in
stos
in
cld
cmpsb
repz
js
insl
es
inc
mov
pop
movsl
xchg
fwait
sbb
aam
pop
inc
mov
out
sbb
adc
jg
mov
movups
dec
stc
jne
loop
jg
add
xor
dec
or
and
mov
stos
pop
int3
pop
rcl
popa
pop
icebp
repnz
adc
cltd
mov
adc
mov
bound
cli
ret
pushf
pusha
mov
notl
mov
jp
imul
lds
xchg
arpl
inc
mov
cmpl
shrl
or
lret
movsl
ja
mov
in
rorb
loop
xchg
jnp
sub
push
xchg
inc
out
or
lret
stos
mov
add
pop
mov
shll
xor
jge
mov
in
sbb
shrl
movsb
jae
cli
div
cmp
jmp
jo
push
subl
aaa
lea
fdivr
pop
sbb
lret
movsl
push
int3
repz
ljmp
and
mov
test
sub
imul
call
mov
les
cmp
hlt
adc
int
add
push
dec
dec
shlb
xor
ds
add
xor
adc
clc
js
pop
mov
push
hlt
rorb
and
stos
and
lret
adc
cmc
mov
outsl
xor
or
mov
mov
mov
mov
xor
insb
hlt
mov
scas
xchg
ss
inc
and
icebp
int3
sbb
inc
out
out
sbb
or
xor
xor
into
and
xchg
adc
arpl
out
push
mov
inc
push
push
mov
loop
testl
pop
aaa
mov
mov
jp
mov
xlat
push
push
pop
and
lds
sub
push
xchg
dec
shrb
lea
loopne
movsl
push
aas
clc
mov
in
push
cmp
xlat
xor
out
cmp
cmp
sbb
mov
dec
mov
lods
add
inc
or
lods
xchg
outsb
pop
pop
mov
bswap
jo
pop
push
ja
fwait
adc
cmpsb
sub
pop
jns
cli
mov
add
pop
lock
mov
push
cmp
imul
jb
mov
out
cmpsb
add
mov
dec
sub
pop
jne
jl
in
xchg
xor
and
inc
enter
call
jge
sbb
mov
imul
fs
xor
or
cli
sub
or
mov
push
push
orb
iret
filds
push
pop
jmp
lods
xor
sub
add
push
mov
or
jecxz
push
xor
and
jno
jb
sahf
dec
jbe
push
jno
adc
xor
xchg
fcomp
or
pop
mov
out
jns
push
sub
lret
fists
add
cmpl
dec
push
in
mov
pop
rcll
leave
dec
xor
fisttps
jno
std
xchg
xlat
push
xchg
jno
ret
dec
in
jo
out
adc
cld
scas
inc
add
cmp
xchg
mov
adc
mov
mov
xchg
ret
andb
mov
push
mov
add
sti
dec
and
gs
cs
cmp
bound
dec
repz
les
pop
dec
pop
test
es
shl
dec
and
lods
dec
jecxz
fstpt
lock
xrelease
add
xor
jnp
std
inc
icebp
push
std
mov
cmc
jp
sub
xlat
jl
mov
inc
dec
pusha
mov
das
test
mov
mov
sub
xchg
roll
and
mov
sbb
aam
imul
sbb
mov
xor
mov
cmp
enter
imul
jmp
push
shrb
call
iret
mov
add
adc
fsubrl
cmc
inc
xor
out
gs
xchg
adc
call
add
aaa
rorb
fisubrl
pop
aas
pop
push
dec
jno
fstpl
xor
mov
mov
push
pop
mov
enter
dec
and
adc
stos
fldenv
mov
mov
out
pop
fcomi
pop
int3
pop
adc
cmp
cs
mov
xor
maskmovq
negl
push
pop
sbb
or
jne
les
mov
inc
ror
and
bound
xor
dec
xor
xchg
cmp
jle
bound
sub
ljmp
jno
mov
mov
repz
aaa
dec
mov
hlt
pop
pop
sbb
cmpsb
popf
or
and
or
xchg
cld
add
fcompl
cmp
mov
add
or
pushl
fidivrl
and
xchg
lcall
rcr
xchg
inc
xchg
lock
lahf
ss
cwtl
test
adc
negl
filds
mov
cmp
notl
mov
repz
mov
call
and
ljmp
into
pop
aad
enter
daa
jbe
es
outsl
xchg
xchg
out
adc
data16
mov
jne
shr
nop
inc
ret
dec
test
lds
push
jns
testb
cwtl
sbbb
bound
push
inc
inc
popa
stos
add
mov
arpl
cltd
pop
push
call
in
xlat
mov
pushf
les
inc
push
insl
loop
rcr
pop
out
inc
or
pushf
add
inc
dec
xchg
popf
test
les
test
popa
sbb
lret
xchg
jp
or
push
inc
lock
mov
icebp
shrl
dec
mov
loop
fcomps
inc
in
push
fldenv
pop
mov
insb
sbb
mov
sbb
fwait
ret
das
push
adc
sub
inc
xor
rcr
jmp
sbb
cli
cmpl
push
jo
repnz
fimull
mov
cmp
adc
pop
cltd
aaa
sbb
mov
jae
and
scas
mov
mov
mov
dec
gs
push
xor
stc
xor
roll
adc
add
add
daa
xorb
aad
repz
sub
lcall
and
mov
pusha
xchg
nop
test
fldenv
stc
pop
adc
sbb
clc
pop
pop
mov
add
xchg
inc
jg
push
inc
dec
push
movsb
mov
pop
and
push
mov
ret
repnz
or
push
cs
push
adc
push
inc
fiaddl
lods
add
and
push
mov
data16
jbe
and
fisubrl
mov
push
jns
scas
movsw
or
aaa
dec
icebp
mov
cld
mov
mov
es
or
data16
mov
xor
dec
push
lea
inc
rolb
cmp
add
mov
lahf
or
xor
sete
popa
addr16
lea
cmp
inc
test
roll
aad
cltd
out
and
mov
das
or
jne
jge
aaa
pop
fildl
or
cmp
pop
xchg
lea
es
add
insl
gs
hlt
das
arpl
xorl
jae
stos
sbb
lahf
je
dec
test
lods
sbb
push
imul
sbbl
nop
jns
or
and
pop
shl
mov
push
mov
xchg
pushl
jbe
mov
cwtl
push
rorb
pop
sbb
pop
xor
test
decl
lods
sub
cmp
lcall
das
lret
pop
push
pop
or
or
movsb
dec
insl
and
dec
cmp
mov
mov
int3
add
mov
ljmp
sub
and
popf
clc
adc
mov
cmpsb
jne
sbb
outsb
mov
clc
cmp
test
add
js
sbb
sti
rcl
jno
xor
into
jo
mov
cmp
data16
push
push
mov
push
arpl
test
and
push
mov
dec
inc
shl
pusha
imul
xor
jle
sub
leave
xchg
xor
push
push
pop
fisttpl
scas
iret
sub
icebp
xchg
dec
ret
mov
clc
dec
loop
lcall
popa
cmpsb
push
inc
shrb
subl
in
push
sub
sub
pop
scas
lahf
mov
xchg
mov
inc
faddl
push
loope
cmpsl
orb
mov
jge
push
sbb
insl
jnp
inc
lods
jp
int
sbb
fidivrs
jmp
andb
adc
inc
xor
add
js
lock
dec
sti
mull
mov
add
mov
sbb
cmp
in
ljmp
xor
push
inc
scas
dec
sbb
sbbb
and
jo
insb
and
movsl
mov
xor
dec
and
adc
mov
xor
mov
mov
cmpsl
addr16
add
pop
shlb
dec
inc
std
push
sub
add
sbb
cmp
mov
es
sarb
cmp
adc
shrl
push
mov
dec
pushf
inc
pop
aam
lahf
mov
sub
mov
js
les
mov
out
inc
mov
fadds
imul
andb
jne
jmp
xchg
sbb
adc
cmpsl
inc
cmpsl
sbb
addb
xchg
dec
popa
cs
or
mov
popf
push
test
sbb
adc
sbb
ret
in
xor
call
aam
repnz
inc
aad
int3
mov
nop
add
adcb
out
imul
lcall
mov
fsubl
pop
cs
arpl
cmpl
nop
enter
and
xor
lcall
push
notl
pop
add
pop
cmp
inc
outsb
gs
mov
adc
adc
jns
xchg
push
rcr
pop
es
sub
int3
jp
inc
xor
mov
fdivl
sub
loopne
js
fiaddl
push
xlat
js
repnz
sub
pop
xlat
rcrl
cmpsl
mov
xchg
lods
adc
push
subl
inc
inc
and
xchg
cs
jge
test
dec
mov
mov
sarl
mov
dec
inc
mov
xor
scas
call
addb
mov
adc
loopne
xchg
shrb
push
icebp
outsb
dec
push
inc
push
aad
lret
xchg
sahf
fincstp
lock
or
push
adc
inc
push
les
sbb
jmp
or
cmpb
and
or
cmc
test
fsubrl
fs
push
sbb
es
fmul
sbb
cmp
movsl
jo
loop
ret
inc
xor
mov
out
icebp
or
mov
adc
mov
dec
mov
jle
cs
pop
inc
jbe
rcrb
fldt
aaa
mov
in
out
xor
mov
orl
div
repz
sub
hlt
xchg
loopne
push
inc
cmc
jp
push
ja
xorb
push
outsb
mov
lret
daa
mov
sarl
test
add
mov
fs
xchg
das
and
pop
sbb
jo
loopne
mov
pusha
cld
xchg
aad
dec
call
mov
pop
or
pop
sub
fcmovnb
and
sub
adc
stos
pusha
ds
sbb
clc
inc
xor
jge
pop
and
cmp
adc
loopne
cmc
mov
add
jecxz
fs
sbb
gs
jns
xchg
sahf
dec
sub
adc
bound
xchg
mov
mov
enter
jbe
cmp
addr16
adc
ljmp
push
adc
in
lea
jl
dec
cmpsb
xor
mov
scas
sbb
in
add
mov
inc
movsl
imul
ljmp
rcrb
fsts
xor
loopne
mov
das
mov
data16
dec
in
xchg
lcall
xchg
xchg
lods
jg
out
pushf
in
sbb
mov
pop
dec
sbb
pop
xor
push
ret
sbb
sub
int
movsb
sbb
fldenv
dec
or
pop
add
shlb
inc
pop
lret
sub
and
fstpt
push
jge
push
add
in
je
jnp
sub
push
sarb
rolb
xor
dec
lods
daa
mov
jno
sub
out
loopne
enter
xchg
push
loop
dec
ret
pop
fdivrs
loopne
sbb
fimull
inc
call
pop
repnz
cmc
int3
cltd
push
outsb
outsb
cmovne
loopne
or
add
lds
xor
mov
or
mov
das
ja
jmp
repz
cs
addr16
loopne
out
lahf
enter
out
aaa
aaa
cmpsb
insb
divl
lcall
paddq
imul
sub
in
adc
clc
das
xchg
pop
sub
mov
mov
int3
and
popf
fidivrs
sbb
xchg
or
mov
push
mov
mov
push
mov
and
xchg
add
popa
sbb
jbe
and
xchg
add
movsb
sbbl
push
and
mov
dec
mov
jp
outsl
adc
inc
outsl
jns
ficoml
or
mov
dec
pop
popa
jo
mov
shl
and
repnz
xor
fldt
mov
and
cmp
shll
jmp
xor
in
sbb
pop
movsl
jb
rcrb
xchg
dec
and
dec
test
push
jg
je
cs
int3
cmp
outsb
int
inc
int3
cmp
inc
cld
cmp
cmp
cmp
mov
ljmp
mov
pop
outsb
ss
in
or
orps
push
dec
das
jb
cs
xor
or
lret
inc
lea
dec
sbb
sub
xchg
sub
pop
dec
into
into
aam
sbb
test
clc
std
test
jmp
mov
jno
fcmovb
int3
std
fcmovnbe
das
and
cmp
xchg
js
and
mov
push
cmp
or
lret
scas
arpl
push
sbb
inc
cmp
out
sbbb
mov
dec
aam
or
int3
push
mov
ret
push
push
push
aad
stos
icebp
das
xchg
pop
mov
int
sbb
lock
lcall
adc
js
xor
imul
pop
orl
iret
mov
xor
push
lods
cmp
jb
mov
lods
or
in
pop
pop
xorl
push
mov
lods
testl
push
pusha
dec
push
pop
xlat
fs
push
jge
mov
push
add
xor
xchg
fs
ljmp
mov
ja
jb
decl
jbe
mov
mov
int
xor
fs
pop
jnp
cltd
imul
and
addr16
ret
xor
mov
mov
adc
pop
jno
mov
and
xor
cmp
xchg
fidivrs
into
pop
jg
fwait
out
cltd
jle
int3
inc
scas
xchg
mov
inc
dec
cli
dec
push
dec
jl
xchg
jge
jg
iret
lret
mov
mov
and
and
out
jg
xchg
or
mov
sub
jecxz
sbb
lods
outsb
stos
nop
ret
push
mov
mov
repnz
xlat
div
out
pop
fwait
xchg
jle
roll
xor
add
cmp
mov
mov
cwtl
cld
xor
out
sti
jnp
push
enter
popf
aad
iret
fiaddl
lock
and
imul
xchg
push
dec
push
dec
fsubp
mull
mov
pusha
add
pop
pushf
pop
cmp
inc
or
sbb
xchg
sti
stos
sub
pop
xor
xor
xor
ja
popa
xor
or
push
aam
in
xor
add
push
fldl
stos
xor
cs
sbb
mov
pop
jae
push
inc
inc
sti
idivb
in
jne
cmp
jecxz
shlb
mov
sbb
ss
hlt
jns
out
sbb
test
mov
test
or
mov
inc
aam
pop
psubusb
ja
ljmp
inc
mov
jmp
aas
mov
jae
nop
xchg
ljmp
insb
pushf
les
out
mov
ljmp
idivb
fldcw
push
pop
sahf
rorl
into
xor
pop
in
xor
pop
mov
xchg
fisttps
pop
xchg
xchg
fmull
push
mov
lret
fldcw
arpl
jb
pop
xchg
test
idivb
pop
xchg
pop
nop
pop
out
cmp
fiaddl
pop
push
add
push
push
mov
lock
shl
pop
je
and
cmpb
jg
xlat
mov
nop
stos
cltd
jmp
adc
add
cmc
int
pop
push
xor
cli
dec
jle
sub
psubsw
rcrb
push
pushl
rol
hlt
ret
fxch
or
push
outsl
cmp
ds
rorl
andb
icebp
enter
cmp
stos
push
fidivrl
iret
in
inc
ss
lahf
int
inc
sar
xor
sbb
test
sar
rcll
lahf
sti
pop
pop
push
push
jne
negl
jbe
int3
mov
cmp
paddd
popl
leave
add
negl
mov
lcall
clc
mov
mov
cld
pop
outsb
mov
dec
mov
call
stc
sub
outsl
lock
fcoms
and
adc
mov
xchg
mov
js
shll
jb
loopne
js
stos
push
mov
sub
add
and
sbbl
jp
dec
sub
push
cli
repz
or
jns
push
fcmovne
adc
aad
xor
xchg
xor
imul
sub
out
lret
cmpsl
xor
inc
push
fisttps
sub
jmp
and
mov
imul
fwait
xlat
cmc
pop
inc
loopne
stos
sbb
xchg
nop
xor
jnp
out
popa
in
fisubrs
add
pop
js
adc
andl
adc
mov
mov
mov
adc
and
xor
inc
stc
push
outsl
popf
dec
mov
inc
jmp
xchg
aaa
add
mov
fstpt
adc
xchg
adc
out
or
cld
or
jb
push
mov
negb
into
push
mov
lret
or
adc
int3
aad
test
xor
and
mov
jecxz
xlat
sub
aad
lret
push
nop
adc
cld
adcl
sti
xchg
fcmovne
xchg
lahf
enter
in
popf
inc
stos
out
dec
pop
fcoml
sbb
sbb
adc
sub
jne
inc
int3
loopne
cmp
shll
aad
fdivs
push
or
mov
inc
pop
shlb
mov
xchg
fcoms
xchg
jl
fs
mov
or
sbb
test
xchg
jae
pop
pop
jmp
sub
pop
stos
imul
cwtl
or
rclb
xchg
cmc
les
push
sbb
movsb
loop
fldt
dec
cmp
cs
xchg
xchg
iret
popa
fistl
xor
scas
jmp
ret
cmp
xor
rcrb
xchg
sub
sub
push
fxch
xchg
dec
insb
push
pop
or
leavew
cld
sub
cmp
cwtl
and
cltd
outsl
movl
sub
leave
and
addr16
imul
loopne
cwtl
sbb
jns
sbb
cmp
hlt
pushf
and
popa
mov
enter
xchg
cwtl
push
scas
lcall
arpl
pushf
cmp
cmc
lock
insb
push
addr16
loopne
cmp
inc
jnp
jnp
mov
mov
andb
ror
inc
stc
shll
daa
in
hlt
icebp
fcomps
mov
cmp
addr16
inc
nop
lret
mov
or
push
iret
cmpsb
mov
icebp
pop
dec
pusha
mov
mov
cmp
inc
shrl
outsb
ljmp
cmpsb
in
adc
push
cli
xchg
pop
shr
icebp
cmp
add
scas
sub
cwtl
jmp
cmp
inc
in
mov
jmp
cmpsb
xchg
aam
stc
xchg
jb
js
xor
add
leave
xchg
xchg
repnz
repnz
scas
xor
xchg
and
in
mov
jae
or
jle
sbb
sub
ficomps
addb
sbb
out
mov
loop
sbb
dec
inc
xlat
lcall
out
stc
sbb
das
clc
hlt
lahf
rcl
sbb
sti
mov
es
inc
in
xchg
sarb
cld
out
mov
jno
rcll
test
push
cld
loope
mov
fadd
pop
mov
test
test
dec
jae
mov
scas
mov
inc
jge
jg
jb
dec
sbb
lds
mov
push
adc
cld
jp
dec
cld
jge
iret
out
jmp
clc
subl
daa
pop
lcall
clc
in
sbbl
inc
out
loop
push
sahf
jbe
sbb
ficoms
aam
mov
xchg
sub
pop
jmp
scas
test
in
test
mov
xor
mov
test
adc
es
dec
sbb
mov
inc
test
cld
push
pop
push
and
push
loope
cmp
sub
push
insb
jg
pop
call
out
jno
stos
xor
mov
push
push
push
xorb
pusha
popa
inc
mov
xchg
xchg
mov
jg
or
in
iret
lret
fsubs
mov
in
shlb
xchg
cmp
add
mov
xchg
or
push
mov
and
addr16
mov
sbb
inc
sub
push
sti
push
mov
je
dec
and
inc
dec
mov
mov
data16
test
dec
leave
cmp
repz
sub
lea
int
xchg
or
mov
ljmp
pop
cltd
popf
pop
mov
cmp
test
sbb
xchg
adc
fs
cmpsl
xor
lahf
movsl
sbb
ds
pop
mov
mov
mov
pop
cltd
leave
inc
loopne
outsb
into
xor
push
mov
call
loop
stos
scas
pop
std
jecxz
popf
mov
out
dec
xchg
in
xchg
jge
dec
mov
loopne
xchg
xlat
or
stos
and
or
push
test
out
call
iret
push
fs
das
movsl
mov
decl
mov
and
jnp,pt
into
idivb
fildll
xchg
mov
shrl
cmp
inc
jae
inc
inc
adc
mov
cmc
rorb
rcrl
movsl
call
mov
sub
enter
aam
int3
cmp
jp
push
push
daa
insl
mulb
popa
xchg
adc
sbb
push
xor
or
push
cltd
mov
orb
add
aaa
aaa
jge
in
add
ficompl
icebp
fdivl
xchg
nop
icebp
xchg
cs
jno
in
cltd
es
xchg
mov
es
xchg
mov
pushf
xor
nop
xor
jnp
push
adc
int
xor
testl
mov
inc
dec
scas
push
push
pop
xchg
or
into
addr16
dec
push
movsb
cmpsl
arpl
in
sub
jnp
pop
cmp
add
sub
or
mov
pop
add
cli
negl
inc
inc
popf
es
sbb
xor
xor
pop
lret
dec
xor
xchg
xor
aam
adc
popa
shl
xor
jns
sahf
sub
cmp
es
sub
test
test
movsl
pop
push
sbb
das
add
push
test
shll
shrb
stos
iret
pop
cs
xchg
sbb
pop
lea
jnp
or
xchg
adc
xchg
call
dec
jge
pushf
bound
mov
jae
cmp
pop
sub
iret
pusha
cmp
sbb
clc
dec
test
mov
js,pn
mov
adc
fwait
imul
mov
lea
repz
into
and
jae
data16
out
jnp
outsl
dec
ds
orb
pop
dec
rclb
clc
cli
xchg
sub
rorl
inc
into
sahf
xlat
mov
test
mov
mov
nop
mov
test
xchg
mov
sbb
lods
sub
cmc
and
sbb
mov
and
aas
mov
lods
pop
lret
movhps
fmull
ret
mov
lret
cld
add
fdivrs
cmpb
daa
int3
cmp
pop
or
in
fstps
stos
cmp
jnp
or
in
ds
xchg
clc
mov
or
sub
outsb
inc
xlat
cmpsb
outsl
dec
or
insb
sbb
add
in
icebp
dec
ficoml
test
pop
in
mov
jnp,pn
push
repz
ret
mov
int
fwait
xchg
jnp
add
cmp
and
fbstp
sub
cmp
fstl
push
fsts
sub
shlb
loopne
cltd
cmp
dec
jbe
stos
inc
and
xorl
ja
mov
add
mov
pop
daa
sbb
adc
rolb
dec
or
and
sbb
push
jecxz
or
pop
loope
pop
js
fiaddl
imul
hlt
adc
scas
mov
gs
fwait
xchg
fisubrl
in
cmpsb
cmp
jg
cli
fsubl
outsl
sbb
loopne
push
push
mov
in
push
dec
pop
out
insl
fs
mov
inc
arpl
rorb
data16
adcl
js
push
loope
shlb
fsts
mov
jl
or
stc
leave
xor
push
arpl
imul
pop
sub
insb
sub
inc
jecxz
pop
insb
sub
xor
mov
fildll
test
cmpsl
les
jecxz
xchg
inc
adc
sti
adc
lahf
loope
shlb
rol
mov
xchg
xor
stos
data16
daa
cltd
cld
test
pop
mov
pop
insb
loopne
push
stos
gs
xor
nop
aad
mov
fxch
sub
jp
xchg
jo
mov
and
sbb
ret
scas
mov
out
mov
jle
in
dec
arpl
mov
dec
mov
or
in
jmp
repnz
jmp
movb
xor
jo
cld
push
lds
jecxz
cmpl
stos
sahf
jno
ret
outsb
fcom
xor
mov
add
out
loop
pop
daa
cld
movsb
ficompl
out
lret
enter
push
mov
leave
and
sbb
xchg
adc
in
out
loopne
inc
mov
mov
inc
das
popf
lock
cmp
xor
popf
dec
ret
scas
data16
stos
lds
leave
pusha
lods
ljmp
mov
pop
cmpsl
adc
call
insl
xlat
mov
cmp
loop
mov
jbe
pushf
jmp
fwait
aaa
add
out
notrack
icebp
push
pusha
jb
lock
jmp
in
mov
addb
test
scas
mov
pop
mov
test
lock
xor
pop
push
jmp
cmp
scas
jbe
lcall
mov
dec
jl
sub
lock
scas
out
and
imul
pop
clc
lret
out
xchg
lea
test
inc
xchg
jp
call
push
dec
xlat
inc
xor
nop
imul
xor
icebp
arpl
mov
int3
push
mov
adc
cmpsb
sbb
ret
insb
mov
sti
cmpsl
sub
pop
in
insb
cmp
inc
fnsave
xchg
mov
push
lods
ret
add
lahf
and
fs
pop
inc
cmp
clc
mov
in
les
cmp
mov
push
cmp
or
insb
inc
std
insl
push
push
cmp
and
mov
lret
sub
cmp
in
jb
jp
mov
gs
mov
inc
xor
mov
mov
ja
loop
cmp
shll
lea
inc
mov
in
or
xor
add
cmp
xor
jne
movsl
scas
pusha
out
je
cmp
in
jp
mov
pop
aaa
mov
and
sub
ret
pop
mov
add
aaa
sti
cltd
es
inc
pop
dec
pop
xor
test
call
xor
sbb
xor
loop
push
es
mov
nop
cmp
out
pop
sti
outsl
push
iret
xchg
mov
in
das
into
add
outsb
inc
mov
jae
repnz
jmp
mov
push
jbe
lock
je
push
dec
inc
adc
push
inc
add
sbb
shrl
sbb
mov
sahf
rorb
test
or
jl
sub
js
inc
out
cltd
jae
int
daa
lds
ja
adc
jbe
push
js
xor
leave
dec
dec
dec
sbb
mov
sahf
ret
lcall
aaa
push
jmp
pop
mov
mov
sbb
in
or
pop
push
loope
adc
sbb
sub
pushf
sarb
std
movsb
cmp
shr
pop
mov
pop
or
das
xchg
ja
int3
mov
and
xor
jo
push
sbb
pop
out
adc
clc
push
pop
dec
arpl
mov
adc
mov
mov
pushf
aam
add
ss
mov
mov
incb
mov
adc
lods
jb
sub
nop
loope
dec
jmp
sbb
outsl
mov
adc
dec
xchg
pop
push
and
cs
test
nop
xor
out
pop
and
sbb
ljmp
adc
pop
test
mov
leave
popf
lret
mov
mov
cmp
mov
lcall
mov
xchg
mov
sbb
cltd
insb
sbb
sbbl
xorl
test
insl
movl
sbb
add
and
out
cli
ljmp
stc
pusha
sbb
pop
fadds
xlat
xchg
xlat
aaa
fldl
clc
pop
and
jb
inc
push
mov
sub
xor
pusha
pop
add
mov
test
xor
jbe
cld
jle
mull
movsl
xchg
or
jbe
js
loopne
xlat
cmpsl
cld
and
insl
ret
fwait
mov
inc
ret
pusha
scas
push
icebp
in
ljmp
rolb
push
lea
addr16
cmp
fildll
loop
adc
cmp
pushf
mov
lcall
xchg
inc
cmp
repz
addb
sar
mov
out
out
fmull
adc
push
dec
jge
push
sub
inc
inc
stc
lret
xor
xchg
dec
repnz
dec
loopne
dec
stos
ret
call
les
pusha
orl
dec
leave
or
push
cmp
or
and
xchg
push
sbb
stos
movsl
mov
call
push
cwtl
das
out
inc
cwtl
std
aaa
or
mov
imul
out
push
rorb
hlt
adc
clc
cld
push
lock
add
scas
aad
sub
insb
sahf
dec
insl
jnp
pop
cmp
stos
sbb
int3
lret
inc
push
lods
cmpsl
in
xchg
sub
or
mov
xchg
enter
push
hlt
push
dec
xchg
ss
xchg
xor
mov
cli
push
jp
in
cld
add
movsl
jae
sbb
mov
sbb
test
jbe
sahf
jle
imul
pushf
js
scas
push
cmp
shlb
ljmp
iret
fimull
movsb
xchg
in
fistpl
push
test
mov
and
dec
mov
push
es
adc
loope
add
sti
and
and
adcl
cltd
fistps
testl
sbb
add
mov
add
pop
imul
mov
pop
in
addr16
mov
orl
push
imul
add
push
inc
xchg
or
jmp
pop
xchg
lret
stos
xor
xor
repz
sub
adc
dec
lcall
pop
out
jns
xlat
sub
stc
das
fstpl
or
aad
scas
cmc
adc
xor
sub
mov
addr16
std
lahf
das
mov
pop
mov
hlt
lds
cli
mov
xchg
repz
fstpl
cwtl
add
add
ja
iret
dec
push
roll
es
mov
fldt
out
mov
mov
inc
xchg
mov
shrl
fwait
ret
cmpsb
das
mov
lret
xchg
sub
rcl
nop
mov
lds
push
mov
mov
ja
or
xchg
mov
sti
ret
loopne
call
adc
into
stc
push
int3
and
call
xchg
scas
les
sahf
mov
jns
loop
fldl
cmpsb
jp
pop
xchg
push
mov
push
or
nop
out
lock
iret
jbe
or
loope
jns
add
dec
push
mov
pop
or
xchg
mov
sub
jg
cmp
adc
pop
mov
data16
cwtl
inc
cli
inc
mov
or
inc
cli
notl
pusha
jo
test
insb
daa
push
rcll
add
aaa
mov
arpl
imul
mov
sbb
cmp
xchg
mov
test
cltd
add
gs
daa
push
ret
les
lea
xlat
pop
sub
in
sub
add
cs
jbe
mov
xchg
fstps
adc
pop
mov
pop
mov
rcl
ja
mov
es
jnp
aas
push
test
push
sarl
and
jp
xchg
push
outsb
popw
push
loope
xlat
jmp
xchg
imul
xor
shrl
mul
push
scas
dec
adc
inc
fsubrp
rcrl
fwait
dec
cmp
inc
add
sub
lret
inc
movsb
push
stos
mov
dec
xor
inc
imul
xor
jmp
rorl
popa
sti
mov
cmp
lods
cmc
faddl
push
add
addl
mov
jge
fildl
adc
jp
fisubrl
outsl
fnstenv
lret
lcall
imul
pop
mov
int3
push
addl
and
jg
imul
mov
push
cmc
dec
jg
filds
hlt
out
push
or
scas
cmp
test
push
add
mulb
ja
xchg
les
xor
in
push
pop
xchg
sub
sti
xor
jge
xor
pop
fs
jp
mov
into
adc
push
rolb
mov
imul
adc
js
movl
jae
push
xor
js
lods
cmpsb
das
dec
cs
rorl
outsb
ja
cli
mov
or
imul
cmova
adc
shlb
xlat
and
orl
es
push
mov
bound
mov
cmp
jnp
mov
add
and
xor
xchg
mov
adc
dec
insb
es
xor
mov
inc
imul
and
cmp
pop
jns
sbb
imul
jmp
xchg
cmp
imulb
xchg
arpl
xor
cmp
rorb
pop
dec
fwait
sub
movsb
xor
enter
inc
sbb
cmp
roll
mov
xchg
imul
test
sbb
dec
mov
or
js
xor
push
jns
ret
out
aas
cmpsl
mov
cmpsl
enter
cmpsl
rcrl
std
mov
sub
out
loopne
cli
jmp
sarl
fucomi
xor
neg
xchg
rcrb
nop
push
jp
add
pop
movzbl
lret
lret
popf
dec
push
ret
shl
xchg
inc
pop
pusha
mov
mov
or
ja
bound
pop
and
inc
rcrb
mov
add
add
jecxz
jge
stos
fadds
mov
xor
xor
jne
push
xchg
shrb
repz
repz
orb
sub
push
add
popa
mov
mov
xor
fisttpll
sub
mov
mov
or
sahf
cmp
int
dec
jg
lds
adc
jne
dec
or
and
imul
or
jb
in
and
fiadds
xchg
rcr
jp
fildll
iret
xchg
in
sahf
xchg
and
aaa
mul
push
jnp
pop
js
loope
sub
or
test
cmpsb
scas
mov
cmpb
and
sahf
test
jmp
repz
adc
jns
and
popa
mov
jne
mov
in
mov
movsl
push
in
repz
cmp
pop
inc
outsb
xor
outsb
mov
push
sub
lcall
adc
mov
popa
sub
mov
xor
pop
cld
adc
xor
push
mov
sbb
test
icebp
xor
push
jmp
ds
push
and
push
data16
cmpsb
xor
daa
lods
adc
jecxz
jo
jmp
inc
mov
cmp
mov
mov
fwait
pop
cmp
mov
dec
pusha
pop
imul
push
ja
les
outsb
in
test
push
adc
push
insl
push
add
xchg
fists
xchg
jle
dec
out
andb
leave
popf
int
adc
inc
movl
pusha
adc
les
pushf
loope
pushf
cmp
int
jl
sarb
enter
addr16
out
cli
jg
mov
adc
roll
mov
push
stos
mov
adc
push
aaa
hlt
mov
dec
ja
mov
and
out
arpl
xchg
jg
pusha
dec
dec
push
and
mov
out
pop
cli
leave
pop
jecxz
xor
test
sub
or
int3
scas
test
jne
cmp
std
mov
mov
pop
mov
or
or
lds
leave
jecxz
pop
js
ret
lahf
iret
enter
mov
mov
hlt
add
sbb
or
ret
mov
jae
enter
stc
fwait
mov
fisttpll
sub
push
xor
fcmovb
sarb
test
inc
cli
lods
fcomi
inc
xchg
xor
repz
lret
and
cwtl
shlb
mov
or
loop
adc
push
or
inc
mov
fucomi
mov
and
out
stos
lahf
orl
cmp
mov
or
loop
in
sub
inc
inc
pop
arpl
arpl
push
add
rcpps
test
inc
sub
test
pop
sbb
cmc
lret
decb
push
cmc
pop
nop
pop
inc
mov
jl
nop
into
add
pop
popf
sub
and
cmp
inc
jmp
cmc
cs
push
sbb
lods
or
outsl
mov
mov
and
xchg
lret
sub
pop
dec
nop
jp
sub
xlat
shll
test
push
add
lret
imul
stc
xchg
aad
adc
sub
cwtl
fistpll
movsl
popl
in
adc
mov
loope
imulb
imul
push
sbb
sub
jg
push
test
pop
int3
jecxz
mov
adc
lods
inc
and
mov
movsb
mov
dec
insl
add
inc
aaa
inc
sarb
movsb
mov
and
sbb
pop
add
cli
and
ds
insb
stc
dec
das
pop
dec
scas
mov
and
push
movsl
or
mov
aam
enter
rcr
jns
xor
insl
sbb
sub
arpl
outsl
mov
insl
pop
pop
sub
lret
sbb
jge
loope,pt
sub
leave
scas
dec
aaa
add
jb
pop
pop
fistpl
push
repnz
and
and
adc
sbb
es
mov
xchg
push
mov
add
imulb
mov
dec
pop
push
ret
fiaddl
push
jp
mov
xlat
adc
or
inc
sbb
std
and
pop
jae
aad
scas
out
or
repnz
pop
jg
jbe
and
pop
push
stos
sub
iret
out
xchg
mov
test
dec
out
and
fsubl
pushf
cmpsb
cmp
inc
cmp
mov
imul
fdivr
cmc
pop
fstps
jmp
sub
pusha
sbb
popl
xchg
rep
ss
pop
and
outsl
mov
and
adc
sbb
push
gs
inc
sbb
nop
jmp
and
rclb
mov
out
pop
das
shr
xor
popa
loopne
cmp
pop
cwtl
outsl
sub
aad
sbb
into
add
mov
fadd
movsb
ljmp
mov
outsl
jns
sub
xor
repz
fucomi
popa
enter
lahf
cltd
inc
imul
push
testl
imul
out
pop
jns
dec
pop
ds
out
dec
mov
iret
scas
loope
add
mov
out
mov
pop
adc
hlt
cmp
cwtl
les
xchg
faddp
dec
push
pop
push
push
pop
movsb
and
in
arpl
ja
andb
arpl
jnp
mov
std
push
lcall
js
js
iret
sti
das
lea
stos
add
adcl
sub
movsb
xor
ja
xchg
push
jle
pop
in
dec
xchg
jge
mov
xchg
stos
lods
cmp
lods
push
inc
popf
pop
jae
mov
pop
sub
mov
das
mov
mov
adc
xchg
xorb
fisubrl
xchg
sbb
les
sub
aaa
xor
lods
add
xchg
repz
jge
mov
mov
sbb
and
jp
and
sub
mov
std
pop
out
push
insb
rcrl
loop
lcall
mov
xor
cmp
data16
pop
jno
pop
jle
out
sbb
enter
sbb
lret
pop
orb
xchg
arpl
test
sub
scas
sub
jl
insb
cmpsl
xchg
adc
inc
or
mov
dec
data16
and
xor
scas
xor
xor
out
cmc
cmp
jno
daa
and
mov
push
jo
stc
cmp
dec
mov
push
pop
adc
and
je
aad
push
jp
cmpsb
popf
rcll
dec
mov
pop
lret
mov
std
out
add
push
push
pop
and
pop
cmp
jge
xchg
xchg
std
jb
cmc
lods
ljmp
popf
adc
cld
inc
mov
repnz
in
dec
js
pop
imul
sbb
stc
ljmp
sbb
add
cmp
sbbb
lock
jg
adc
xor
shlb
pop
orl
pop
adc
mov
rcrl
inc
and
pop
mov
mov
sbb
ljmp
aaa
mov
sbb
subb
stos
sahf
jg
xor
jge
inc
scas
push
jne
push
mov
test
sub
popf
mov
pop
or
mov
xchg
or
pop
popa
push
xchg
dec
add
mov
add
fprem
lcall
cmp
ret
sub
hlt
cmp
cmc
inc
andb
ds
aam
adc
in
or
btr
shlb
pusha
fld
data16
loope
xor
lret
dec
mov
daa
pop
pop
ss
lods
lea
mov
dec
mov
mov
imul
jns
pop
pushf
fwait
pushf
mov
and
adc
adc
jb
out
pop
sarb
arpl
jle
xor
push
inc
leave
and
push
mov
pop
outsb
dec
lea
push
jge
inc
mov
xchg
mov
shl
mov
mov
test
outsl
cmp
lret
sar
enter
pop
repnz
repnz
ja
test
out
push
cmpb
mov
mov
or
lret
push
je
push
aas
mov
pusha
push
ficoml
jbe
pop
dec
lret
push
jnp
xchg
inc
pop
dec
mov
cli
call
cmpsl
sbb
andb
add
jbe
jne
aad
inc
js
add
or
xor
cwtl
pop
aam
xchg
fidivrs
add
addr16
rcr
xor
xchg
cwtl
mov
xchg
sub
mov
pusha
fildl
cli
mov
sti
iret
add
test
sub
xor
repz
add
enter
cmp
xor
push
bound
test
call
adc
xchg
insb
repz
scas
cmpsl
mov
jbe
ljmp
daa
pop
pusha
out
flds
and
mov
mov
and
mov
mov
pop
push
movsl
sti
icebp
dec
xchg
xchg
xchg
add
test
cltd
dec
sub
outsb
jg
sub
in
hlt
les
or
jb
dec
or
jns
and
fwait
mov
leave
pop
repnz
mov
xor
xchg
repz
xor
xor
sbb
push
lock
sub
xchg
iret
pop
adc
lds
div
dec
orl
psubb
and
and
xchg
jbe
mov
inc
mov
inc
sub
outsl
ljmp
clc
mov
xchg
and
xchg
bound
adc
sub
mov
dec
ljmp
dec
je
aas
dec
mov
inc
pop
jb
iret
xchg
sahf
xchg
ds
sub
mov
push
inc
jne
sbb
mov
cmp
fstpt
sti
cmp
xchg
add
out
int3
ljmp
dec
jne
mov
sbb
sub
ds
mov
test
cmp
scas
addr16
sar
mov
lret
push
iret
push
cmpsl
sbbb
inc
stos
in
mov
repnz
loope
ljmp
fwait
lds
repz
mov
jecxz
xor
in
jbe
insb
rclb
mov
push
adc
push
movsb
sub
clc
int3
int
pop
cmp
push
je
gs
pop
dec
or
int3
lcall
mov
sub
cmp
fdivr
cltd
aaa
ss
popa
mov
out
xchg
jnp
enter
movsb
pop
adcl
dec
je
pop
popa
test
adc
adc
lea
dec
movsl
or
cmp
outsb
xchg
push
xchg
jecxz
xchg
pop
aam
adc
mov
push
mov
adc
sbb
fbld
add
or
mov
cmpsl
xor
jp
xchg
mov
test
mov
mov
and
lods
lret
in
movsl
push
push
ds
push
repz
popa
xor
push
stc
xchg
fmul
xchg
iret
movsb
scas
je
adc
pop
dec
fidivrs
aas
enter
mov
fs
cld
cmc
outsl
inc
adc
pop
pop
sbb
cltd
push
add
aaa
mov
xor
seto
push
shrl
popf
xchg
pop
adc
sbb
jmp
fiaddl
and
fisttpl
dec
pop
out
push
push
rorb
stos
bound
aaa
sub
out
mov
mov
push
stos
jae
push
shrl
rcrb
stos
mov
cltd
pusha
push
sub
pusha
push
dec
dec
rolb
push
scas
popa
jg
jp
sub
push
push
es
or
mov
dec
fistpll
and
xchg
fs
clc
pop
imul
jbe
fldl
jp
leave
leave
icebp
push
loop
add
dec
aaa
inc
lds
js
cmp
mov
add
cltd
lahf
jbe
mov
jmp
into
out
inc
mov
dec
fsubrs
and
sub
insl
jns
add
pop
scas
je
xor
sub
mov
out
inc
dec
ja
and
pop
push
loop
mov
mov
fisubl
sub
mov
imul
stos
ret
ffree
scas
mov
cld
lret
lret
sub
stos
bound
xchg
sbb
in
push
cmpsl
das
stos
add
stos
jg
sbb
pop
xor
adc
dec
mov
cmp
leave
inc
cld
mov
pop
sbb
mov
pop
push
hlt
leave
jecxz
imulb
mov
cmp
mov
or
push
inc
testb
cs
mov
dec
push
mov
aam
and
test
xchg
and
mov
pop
imulb
add
dec
xchg
cmpsl
jmp
outsl
adc
adc
mov
pop
in
lods
and
cwtl
jg
xchg
in
pop
push
cmp
flds
push
lods
int3
jne
and
mov
mov
pop
mov
out
dec
pop
repz
aad
iret
leave
fdivrl
and
cwtl
fucomi
ljmp
movsl
sbb
add
mov
cmpb
fwait
bound
filds
mov
inc
jg
repz
push
inc
aaa
xchg
out
pop
scas
outsl
pop
dec
cmpps
inc
and
jnp
inc
cwtl
je
shlb
loopne
xor
mov
aas
js
cmp
xchg
pop
pop
test
mov
lahf
mov
or
btc
mov
adc
dec
push
and
mov
notl
aaa
lea
sub
or
mov
inc
pop
push
cmpsl
cli
aaa
or
sbb
cwtl
mov
push
enter
push
rclb
pop
call
push
imull
pusha
lcall
sub
push
iret
orb
xor
sub
xlat
xchg
xor
ja
aaa
aaa
loop
sti
pop
cmp
mov
fs
pusha
mov
mov
pop
mov
adc
dec
mov
loopne
lds
outsb
test
outsl
inc
hlt
mov
xchg
sub
sub
mov
jecxz
push
dec
adc
and
and
fistpl
lods
mov
add
sub
and
push
add
or
inc
and
insl
pop
inc
arpl
lret
in
out
pop
iret
es
divl
dec
pop
imul
ljmp
bound
lds
sbb
ficompl
fnstsw
add
mov
inc
bound
inc
fnsave
std
dec
daa
lods
push
inc
shlb
jbe
repz
adc
les
push
xor
daa
ud0
cmp
push
add
mov
out
popf
pop
mov
dec
adc
cmp
addr16
xchg
sar
jmp
xlat
idivl
dec
decl
popa
js
decl
xchg
push
sahf
iret
mov
dec
adc
pop
clc
or
jecxz
pop
mov
xor
cmp
hlt
lock
loop
andl
shlb
xchg
mov
rorl
das
out
jo
xlat
ret
xor
loope
mov
fwait
nop
in
lods
push
push
leave
xlat
mov
xor
jecxz
dec
mov
mov
push
xor
pushf
iret
xor
arpl
jecxz
and
sarb
sar
mov
cmc
xchg
push
adc
and
pop
sbb
inc
jecxz
ja
dec
sti
mov
sbb
shrb
pusha
sub
leave
roll
lock
dec
fdivr
push
fiadds
ja
mov
ds
pop
mov
addb
push
scas
jg
stos
pop
push
dec
jmp
cmpsl
mov
xchg
jg
mov
mov
add
xchg
test
inc
xor
icebp
inc
in
popa
adc
push
xchg
pop
stos
xchg
inc
andl
stos
mov
or
cli
sbb
push
dec
and
adc
je
xor
adc
es
mov
mov
push
jbe
and
xor
stos
dec
cmp
and
out
ret
outsb
in
stos
shlb
add
adc
pop
adc
and
pop
and
aaa
mov
push
aad
mov
or
nop
cld
dec
cs
inc
and
in
mov
ljmp
or
mov
mov
add
gs
mov
inc
sub
xchg
push
test
push
gs
mov
filds
icebp
icebp
in
jns
adc
xchg
aaa
push
cs
xor
mov
jae
xor
das
mov
push
mov
xor
repnz
mov
js
inc
aas
enter
addb
adc
movsl
push
fidivs
jo
mov
jbe
push
divl
sbb
jecxz
sti
push
rorb
sbb
outsb
jo
xchg
dec
push
sbb
jmp
icebp
xchg
in
or
xor
into
jo
into
or
push
stos
lret
push
add
xchg
jmp
aas
add
inc
xor
bound
push
xchg
cmpsl
mov
fisubs
filds
mov
xchg
add
lcall
or
dec
cmc
lahf
mov
cmp
outsl
inc
enter
aas
fwait
pop
cmp
dec
pop
ss
lea
outsl
addb
mov
lds
insb
sbb
jb
and
stc
out
jmp
dec
in
mov
jno
xor
mov
mov
shl
test
mov
js
mov
xchg
out
or
add
data16
jge
out
clc
mov
push
push
dec
add
or
ret
cmpb
inc
jmp
push
pop
cmpsb
pushf
jl
scas
repz
rclb
push
xor
push
test
pop
mov
pop
sub
scas
xlat
mov
sbb
iret
je
sub
inc
mov
xor
xchg
push
push
mov
or
sbb
shlb
inc
rolb
dec
ror
jmp
cld
push
dec
shl
cmp
decl
mov
and
sbbb
cmpsl
test
and
inc
fcomi
test
sub
cltd
cld
mov
mov
cmp
inc
xlat
movsl
xor
test
dec
adc
fldl
icebp
push
stos
adc
add
mov
xchg
add
push
or
jb
popf
out
inc
ror
dec
mov
and
push
test
imul
push
adc
cmp
sbb
and
fwait
push
dec
push
std
cld
mov
imul
cmp
rorl
fidivrl
out
dec
dec
scas
inc
movsb
pop
sub
stc
cmp
cwtl
lods
lahf
pop
and
mov
lock
cmp
inc
bound
add
mov
mov
popf
mov
push
test
cmpsl
dec
ficomps
shl
test
fs
and
outsl
jns
cltd
lds
inc
or
pop
mov
pop
mov
fisubl
sbb
stos
shll
jnp
lods
fnstenv
shl
mull
jp
cmp
mov
push
call
fcoml
fbld
rorl
mov
xchg
pushf
xor
adc
adc
or
das
push
add
cmpsb
add
lret
inc
sub
and
add
dec
mov
and
push
inc
rcrl
mov
xor
push
or
xchg
add
xchg
rorb
enter
xchg
cmp
xor
dec
cmpsl
mov
sbb
stc
jnp
dec
in
mov
cmp
sbb
sub
add
jae
xchg
inc
aas
rorb
push
mov
jno
ret
int3
sub
inc
cmp
xorb
pushf
movsb
mov
outsb
jmp
gs
and
xchg
jl
ret
cwtl
fstpl
shlb
imul
cmp
mov
in
inc
add
fnstcw
pop
push
cld
jbe
jge
repnz
push
sub
xor
flds
mulb
xchg
out
in
xchg
es
popa
dec
ss
in
shll
roll
push
or
jne
clc
cmp
pusha
sbb
inc
pop
jno
mov
call
movsl
pop
pop
repnz
lock
push
shlb
sbb
push
mov
push
mov
in
faddl
mov
hlt
in
mov
addb
orl
or
xor
ljmp
xchg
nop
xor
dec
stos
stos
lret
sbb
rcll
inc
test
bound
sbb
pushf
push
push
dec
inc
push
fwait
inc
orb
or
pop
adc
fnstcw
and
jns
ret
cmp
roll
popa
scas
out
lcall
sbb
shl
xchg
xor
aad
aad
shrb
dec
imul
xchg
in
in
jns
inc
push
cmp
or
add
jle
ror
cwtl
dec
jl
test
fnsave
out
pop
cs
lahf
push
cmp
jecxz
add
popl
leave
into
sub
jno
or
aas
jno
std
lds
out
xchg
push
inc
outsb
bswap
lea
adc
sub
js
or
jno
and
or
insb
dec
and
aaa
mov
sub
fmulp
les
push
dec
mov
dec
pop
daa
mov
scas
enter
mov
dec
mov
sbb
icebp
mov
into
adc
or
out
insb
std
pop
adc
add
inc
jnp
imul
decb
divb
roll
movsl
shrb
sub
xchg
outsl
inc
cli
fdivrl
pop
fiaddl
fnstcw
sbb
subb
pop
and
mov
dec
xlat
test
mov
test
jl
inc
xor
pop
sub
push
mov
out
iret
pop
cmp
lea
jp
inc
add
test
mov
and
fcoml
cmpsb
nop
fistps
sbb
or
in
and
mov
andl
push
inc
les
inc
sub
sbb
push
pop
cmp
sarl
bound
add
sbb
cmc
repz
sub
gs
sub
sub
mov
and
jb
mov
popa
mov
push
cmc
push
fwait
mov
mov
sub
lcall
xchg
int3
push
cmpl
xchg
fwait
sbb
jge
push
sbb
lahf
fidivl
sub
into
inc
adc
ret
mov
stos
or
inc
pop
scas
mov
sub
jl
mov
pop
push
aad
and
pop
sbb
das
shrd
pop
xchg
xchg
rcl
cmp
jmp
pop
mov
leave
push
xor
bswap
outsb
sub
test
push
insb
out
data16
pop
mov
mov
pop
xchg
lret
mov
fimull
lods
mov
cmp
push
movsb
cwtl
rol
mov
iret
cmp
jno
lods
test
lea
sbb
mov
jmp
cmpsb
mov
movl
dec
dec
or
cmc
push
stos
jp
mov
popa
leave
cmp
jno
mov
pop
dec
pop
push
gs
or
xchg
xchg
sbb
adc
int3
jecxz
and
inc
sbb
rcl
xchg
repnz
imul
or
lods
scas
cmp
loopne
loop
stos
ss
xor
lret
sbb
divl
sbb
xchg
das
and
xor
incb
rolb
stos
aad
stos
lret
mov
xchg
dec
sub
xchg
mov
inc
test
aad
icebp
bound
loop
cmp
pop
adc
iret
mov
mov
jmp
sbb
mov
inc
pop
push
cmp
sbb
fldenv
outsl
mov
addr16
loop
lret
frstor
push
mov
je
sub
cmp
lahf
enter
ret
out
mov
repz
xchg
iret
dec
xchg
inc
dec
jmp
xlat
or
pusha
xlat
pop
add
sbb
cmp
xor
jae
adc
jl
mov
test
pop
sarl
sbb
fidivs
shlb
add
rcll
push
rorb
stos
cwtl
push
bound
out
adc
imul
mov
and
mov
mov
pop
or
mov
jne
push
jmp
pop
es
test
outsb
clc
mov
sbb
fsubp
jbe
stos
jo
push
insb
cmc
cs
push
jbe
inc
scas
and
dec
xor
fs
jg
sar
lcall
test
push
mov
frstor
outsl
pop
mov
adc
adc
add
inc
aaa
insb
sahf
or
popa
subb
pop
lcall
fldcw
subb
sub
gs
subb
xchg
cmc
fcmovb
pop
movsb
mov
add
sbb
cltd
pop
rcll
into
cs
cmp
add
add
mov
sub
and
icebp
mov
mov
ss
add
outsb
and
nop
fdivrs
pop
out
fxch
int
push
inc
std
mov
add
jb
test
aas
pop
inc
bound
push
dec
movsl
out
or
mov
jae
ret
rolb
aad
sbb
add
mov
imul
dec
aas
sbb
adcl
xchg
test
out
inc
into
xchg
or
pop
faddp
dec
test
inc
pop
mov
ja
dec
dec
xor
and
mov
dec
xlat
jecxz
push
add
cmp
mov
es
test
mov
add
test
cwtl
xchg
inc
lret
shlb
inc
mov
jmp
mov
scas
push
jge
je
mov
popa
hlt
loopne
cwtl
pop
mov
pop
sub
jmp
push
pushf
sub
mov
xchg
jg
push
fiaddl
sub
outsb
in
mov
clc
dec
push
xor
push
in
mov
pop
pop
sub
jbe
ret
fs
jmp
xlat
int3
jmp
stos
add
inc
pop
and
jbe
imul
mov
movsl
pusha
mov
push
out
les
cmp
pop
jle
inc
xchg
movsl
insb
push
rcrb
lods
push
push
cs
cmp
aad
andb
cmp
push
pushf
pop
repnz
imul
sbb
hlt
js
stos
inc
adc
movsl
into
xchg
xchg
mov
out
xor
pop
js
mov
adc
xor
mov
int
sbb
inc
addr16
aad
mov
movsl
mov
jl
mov
repnz
sbb
pop
push
pop
in
test
add
decl
fst
notb
mov
fisttpll
rcr
pop
mov
je
jl
mov
xchg
leave
or
pop
add
fistpll
push
pop
je
fcoms
aaa
gs
mov
mov
repnz
pop
pop
sub
std
add
leave
call
sbbb
icebp
sub
jle
jl
xor
xchg
in
or
jbe
clc
add
sbb
shld
jnp
sbb
add
jp
mov
es
adc
jns
cmp
pop
xor
flds
and
xchg
sub
ja
outsb
in
shrb
xchg
test
mov
orb
jo
aad
pop
std
testb
test
inc
fsubrl
fcoml
jle
or
or
xchg
push
adc
insb
gs
divl
nop
pushf
leave
inc
sahf
stc
dec
fsubs
pop
jecxz
mov
pop
push
incl
sub
aad
fwait
std
xor
push
ret
lahf
daa
xor
inc
lret
lea
aam
scas
inc
dec
add
or
insb
adc
lods
cld
fucomp
dec
fwait
adc
adc
mov
sarl
xchg
sub
test
mov
mov
cltd
inc
cmp
leave
into
or
shll
movsb
pop
cmpsl
mov
ljmp
pop
inc
sub
mov
xchg
movsl
and
pop
mov
cwtl
jmp
xchg
inc
sbb
inc
inc
mov
and
aam
movsb
leave
mov
stos
es
in
fildll
push
andb
gs
cmp
cmp
imul
movsl
mov
sbb
inc
push
jo
jo
fmuls
cmc
vmovhps
xchg
mov
mov
lcall
cmp
jle
inc
push
inc
ret
icebp
xchg
shr
rcr
xchg
sub
pop
pop
pop
in
jp
mov
jo
icebp
xor
or
mov
xlat
jl
and
sub
pop
adc
sbb
ret
mov
out
xchg
cmp
pop
and
enter
mov
je
push
scas
add
push
jbe
jb
ror
jge,pn
mov
xor
mov
mov
psubd
lret
ja
jge
mov
mov
push
xor
xchg
enter
mov
and
dec
xchg
jmp
mov
xor
xchg
sub
pop
add
add
adc
stos
out
pop
cmp
lahf
sub
push
test
mov
mov
push
jo
aam
jbe
adc
iret
push
out
lods
jnp
ret
imul
jp
cmp
sti
sbb
cmpsb
cmp
adc
mov
andl
add
jmp
testb
aaa
and
and
aad
je
inc
std
add
xchg
jg
dec
mov
sbb
xchg
sbb
pop
addr16
xor
fs
movsl
mov
rorl
repz
enter
xchg
testb
jae
movsb
es
inc
xlat
jmp
cmp
sub
sbb
lds
or
jnp
rorb
out
pop
jno
xchg
jmp
pop
stos
pop
jge
out
jmp
lret
mov
dec
add
adc
mov
xor
cmp
aaa
dec
push
icebp
imull
dec
push
mov
outsl
test
lds
pop
dec
cmp
ret
xchg
sbb
mov
fstps
jg
lcall
xor
sub
sti
stc
sahf
cmp
dec
mov
pop
push
dec
pushf
sbb
mov
jmp
icebp
loopne
notl
dec
push
cld
popf
movsl
out
mov
mov
cs
mov
sbb
insl
mov
sub
push
pop
lret
add
mov
adc
pop
push
mov
xor
inc
sbb
rcrl
test
or
push
clc
dec
fcomps
mov
push
das
lods
rcrl
std
lret
pop
repnz
cwtl
jne
xchg
jl
inc
inc
mov
ret
inc
xor
push
cmpsb
dec
jo
roll
lods
mov
push
ss
mov
xchg
or
mov
cs
sahf
cmp
pop
lea
into
pop
dec
and
pop
jg
dec
lret
dec
lds
cmc
xchg
and
aas
sub
aad
dec
fcmovu
xchg
movsl
mov
xchg
pop
ret
mov
daa
fbstp
cwtl
ljmp
data16
dec
or
lahf
jb
mov
and
mov
adc
mov
add
inc
stos
pop
cmp
lret
xlat
leave
sub
int3
arpl
adc
sub
pop
out
jo
xor
sub
xorb
mov
add
out
cmc
incl
loope
repnz
lods
push
insl
mov
icebp
push
sub
mov
clc
pop
and
adc
xor
int3
mov
jecxz
xor
xchg
pop
in
mov
fs
std
push
mov
loop
lock
ja
and
cmp
push
or
fmull
fcoml
sbb
mov
or
push
add
outsl
ds
arpl
stc
cli
mov
mov
sub
jo
mov
pop
popa
push
cmp
jno
inc
insl
int3
scas
push
out
cmp
aaa
xchg
and
jg
xor
push
mov
push
repz
mov
mov
mov
int
stos
push
ljmp
cli
sub
pop
shll
xchg
pop
lock
test
sub
aas
pop
xchg
fdivrs
mov
sbb
dec
les
sub
lahf
xor
cmp
add
inc
mov
ds
mov
fwait
cs
pop
pop
jo
insl
pop
jnp
test
leave
or
fisubs
cmp
mov
sbb
es
lret
mov
ja
and
movsb
ldmxcsr
sbb
lea
sub
pop
orl
movsb
mov
or
enter
jns
mov
and
negl
cli
sub
mov
xlat
imul
idiv
repz
add
sahf
fildl
pop
push
sbb
pop
cs
inc
inc
cltd
repnz
cmp
xor
lret
push
fisubrl
icebp
pop
sti
pop
outsb
mov
scas
mov
sti
mov
or
lods
dec
es
shrd
nop
rol
cli
adc
mov
pushf
sub
mov
inc
mov
mov
xchg
js
movsl
mov
mov
pop
imul
jg
loopne
jns
push
in
stos
sarb
mov
and
hlt
push
out
faddl
mov
dec
out
ret
sahf
xchg
bound
andl
jb
sub
icebp
inc
mov
sbb
push
cmp
jle
jbe
cmpsl
je
lods
inc
sub
je
mov
adc
mov
or
pop
fsubrs
jp
shlb
imul
or
outsl
inc
cmp
fsubs
out
or
dec
pop
ljmp
ret
sbb
out
repnz
aas
in
inc
in
push
and
out
out
jns
push
jecxz
jb
in
mov
push
enter
xor
in
xor
subb
ret
sti
jnp
mov
add
pop
inc
inc
or
insl
mov
push
mov
aas
mov
nop
push
mov
sar
repnz
test
std
cmp
or
push
test
into
push
cmp
dec
popf
rcrl
test
pop
mov
leave
insl
lock
in
add
test
fsubl
xor
jno
inc
je
mov
mov
movb
scas
pop
mov
das
ficompl
adc
es
dec
adc
xchg
cmp
call
lea
push
lcall
cmp
jp
sbb
sub
loopne
mov
mov
mov
cmpsl
or
dec
push
into
mov
dec
ret
into
sbb
pop
push
add
ret
pop
adc
or
shll
cmp
sbb
push
mov
xor
lea
popa
adc
loopne
enter
cltd
stos
cli
and
mov
adc
in
mov
add
pop
cmp
mov
clc
mov
jno
aam
out
fwait
push
aaa
test
xchg
add
pusha
mov
mov
adc
add
adc
add
out
xchg
lods
mov
cmp
in
shll
mov
mov
cmp
push
add
cmp
push
push
jbe
sbb
sbb
arpl
add
lds
mov
pop
jecxz
lock
test
es
xor
jmp
xor
repz
mov
repnz
sub
mov
insb
jbe
lret
mov
pop
xor
in
fsubl
repz
jg
fs
pop
dec
dec
and
into
and
mov
cmp
mov
loope
xor
push
js
xchg
std
pop
jb
inc
js
jmp
outsl
mov
or
test
fcmovnu
in
les
fisubrs
out
sbb
test
pop
pop
dec
into
daa
lahf
data16
cmp
mov
mov
pop
mov
test
dec
mov
pushf
movsb
ja
sbb
jle
pop
in
cmpsl
mov
xchg
pushf
mov
in
lods
and
inc
paddw
add
dec
inc
mov
or
popa
jmp
lock
scas
mov
pop
sub
je
sbb
inc
aas
or
bswap
jno
arpl
shll
mov
and
dec
jnp
jg
xchg
adc
sbb
pop
xchg
dec
inc
cmc
std
push
push
cmp
fadds
int
jmp
dec
mov
int3
out
je
inc
aam
xorb
sub
mov
add
fisttps
shlb
xchg
mov
and
dec
add
aam
enter
frstor
aas
mov
test
or
mov
daa
jb
mov
push
push
out
cmpsl
loopne
fldcw
mov
xchg
sbb
xchg
mov
in
and
hlt
pcmpgtb
sub
fwait
sbb
notb
cld
jl
enter
push
add
add
or
test
sbb
cli
mov
sub
sub
and
sub
cmpsb
cmp
mov
rorb
loop
iret
push
mov
out
enter
popa
test
mov
pop
and
sbb
sub
pop
jle
int3
shlb
popa
sub
xchg
repnz
imul
adc
test
sbb
movl
add
jb,pn
xlat
dec
jle
ss
ja
jmp
jb
lret
pop
or
loopne
sub
jl
hlt
lea
out
mov
xor
std
jno
hlt
mov
rcrl
repz
push
push
xchg
sti
pop
xor
mov
ret
or
in
addb
xor
or
and
push
lea
sub
psadbw
mulb
mov
push
push
hlt
dec
push
mov
jo
imul
popa
jecxz
ss
mov
cld
lret
negl
dec
sub
mov
dec
lods
jge
in
ja
leave
mov
and
sub
sarb
sub
xor
dec
mov
and
xchg
xchg
in
and
dec
dec
xlat
out
adcl
int3
pop
dec
add
iret
cmp
push
inc
mov
sahf
jp
pop
call
call
inc
incb
jae
jecxz
add
inc
fistpll
xchg
movsl
cmp
sbb
push
out
mov
pop
mov
xlat
mov
cld
subl
inc
aaa
adc
cmp
fucom
adcb
fsubrl
mov
dec
xor
push
loop
cmp
pop
dec
adc
lea
cltd
ss
imul
push
stos
aad
lods
insb
jns
loop
mov
cmc
cmp
imul
inc
pop
sub
jns
jge
mov
lea
leave
mov
pop
pop
push
cmp
ljmp
into
loop
sub
pushw
gs
cmp
lret
inc
inc
daa
lahf
mov
pop
je
inc
jo
daa
cmpb
ss
add
in
xchg
inc
push
call
add
aam
jbe
add
clc
mov
movsb
fcompl
jnp
or
xchg
inc
dec
rorb
decb
jle
dec
jb
outsl
in
dec
xchg
aas
pop
mov
cmpsb
mov
jno
dec
xor
out
sub
mov
dec
iret
mov
clc
leave
jmp
ss
cmpl
or
rorb
fadds
insl
cmc
fstpt
adc
pop
push
push
jecxz
icebp
mov
dec
jae
popf
lahf
cmc
popf
pusha
xchg
sub
dec
mov
add
les
mov
or
pushf
enter
cltd
frstor
push
pop
jle
jp
fwait
sbb
and
clc
xchg
sbb
inc
sbb
roll
inc
repz
mov
pop
ja
inc
mov
cld
insl
xchg
out
jns
mov
push
inc
and
cmpl
loopne
icebp
sbb
movsl
sub
mov
sbb
popf
data16
jg
adc
lds
adc
mov
negb
and
jae
xchg
dec
pop
lea
test
das
mov
cmp
int
mov
jmp
xor
cmp
ss
decb
cmp
pusha
adcl
insl
out
dec
pop
xchg
pop
adc
pop
xchg
in
cmp
mov
out
cld
xchg
mov
ret
popf
adc
xchg
jg
sahf
mov
rcrb
es
scas
out
bnd
lret
stos
scas
pushf
fcomps
js
dec
imul
movsb
std
and
mov
pop
xor
arpl
jecxz
pop
add
jnp
xchg
js
sbb
sub
add
dec
stos
cwtl
mov
xchg
push
pop
pop
sbb
mov
push
insl
push
sbb
inc
test
popf
dec
cwtl
ret
adc
mov
in
mov
pop
adc
fimuls
push
sub
movsb
sub
fcmove
aam
scas
shlb
pop
ja
ss
dec
inc
xchg
xchg
add
int
adc
rep
pop
or
or
rclb
push
andb
inc
test
std
addb
jo
pop
ja
mov
dec
push
mov
cld
int3
xor
or
pop
fs
and
mov
inc
pop
sbb
sbb
adc
mov
sbb
jle
lds
ja
add
js
lods
jmp
scas
mov
sbb
into
jecxz
jecxz
cltd
mov
movsl
dec
pop
ds
push
fdivrp
outsb
inc
mov
repnz
ficoms
mov
stos
out
mov
jbe
mov
mov
pushf
mov
jbe
popf
ret
lds
add
pop
adc
loope
stos
adc
sbb
push
das
int
test
and
adc
jno
xor
jecxz
jle
test
fisttpll
cs
aam
push
inc
mov
xor
sbb
mov
stc
in
or
cmp
inc
int3
fwait
stos
ret
inc
xchg
sbb
sbb
ret
cld
push
adc
cmpsl
adc
pop
mov
jno
xorl
aad
push
iret
xorb
int
xor
xchg
add
out
ret
push
sub
fldenv
in
lahf
aas
cmp
outsl
mov
push
push
sarb
add
mov
cli
cltd
inc
adc
sbb
mov
ss
push
int3
fnsave
jmp
sbb
in
push
repnz
es
fldenv
inc
pop
mov
mov
shl
stos
mov
inc
repz
aas
addb
dec
pop
inc
sbb
mov
fldpi
js
push
cmc
jb
rcr
pushf
lret
mov
test
and
inc
xor
je
sub
negl
shl
leave
fisttpl
pop
push
mov
lahf
aas
jg
aam
xchg
xchg
mov
xchg
cmp
test
ret
in
mov
cld
inc
and
fdivp
ljmp
jns
mov
movswl
mov
cmc
mov
fsubs
push
loopne
loopne
sarl
loop
in
lock
out
sbb
sbb
int
idivl
stos
and
ficompl
scas
rorl
fs
dec
sub
add
xlat
in
popa
push
adc
int
cmp
lods
sub
in
sbbl
leave
call
xor
sbb
pop
clc
daa
repz
xor
xlat
xchg
ds
movsb
in
sbb
popf
lret
jp
cmp
add
sbb
mov
mov
fucomp
repz
cmp
adc
xor
and
and
ret
push
jmp
sbb
cmp
rcrb
push
or
mov
or
std
adc
cmp
xchg
mov
push
nop
jne
out
lods
stos
jmp
les
mov
and
movsb
or
aaa
dec
sub
mov
repnz
push
mov
aam
and
sub
sbbl
jnp
ret
stos
dec
or
and
and
push
push
sbb
test
je,pt
int
and
sbb
add
mov
mov
test
ss
pop
lcall
aaa
dec
loope
inc
xor
jnp
shrl
sbb
push
cmpsb
xchg
dec
add
cmp
mov
add
js
xchg
cltd
notl
loope
xor
dec
sub
outsb
ljmp
insl
jbe
sub
mov
repz
out
movsl
lds
das
ficompl
int
fistpl
sbb
sahf
pop
push
and
xchg
sbb
data16
fcompl
dec
ret
rclb
add
mov
test
shll
sub
aas
test
pushf
cmc
jo
mov
push
lods
jbe
lcall
mov
inc
insl
mov
ret
hlt
pop
imul
out
push
lds
outsb
insl
ret
jmp
cld
add
fstl
mov
ss
lock
cltd
hlt
mov
iret
ficompl
adc
pop
lock
mov
pop
cmc
stos
cmpl
xchg
or
mov
sbb
mov
pushl
pushl
scas
push
add
sub
in
imul
out
mov
jp
fidivrl
loope
and
sbb
and
add
inc
cmp
sub
mov
push
lahf
imull
out
popa
jg
jnp
pusha
stc
adc
and
cli
sbb
pop
or
cmpsb
adc
push
or
jns
mov
xchg
cmpsb
pop
adc
sbb
xchg
enter
jmp
in
cmpsb
cmp
mov
mov
outsb
sub
cmc
inc
lds
subb
ja
or
out
push
cmp
movsl
mov
sar
mov
xchg
jbe
insb
adc
int
sbb
cmpsw
iret
gs
jno
stos
or
lods
or
or
mov
cmp
fmulp
ss
cmp
imul
movsl
mov
aaa
shlb
and
pusha
mov
je
add
add
cmp
mull
xor
test
gs
cwtl
cld
jb
or
inc
in
lret
jo
clc
rolb
dec
loop
ret
cli
adc
cltd
cmp
inc
pop
fdivrl
mov
in
jb
sbb
mov
xchg
idivb
dec
mov
mov
mov
cli
clc
nop
test
cwtl
sub
mov
imul
mov
inc
test
mov
lcall
sub
jmp
xor
xor
mov
push
outsb
nop
dec
xchg
scas
insb
jne
rcl
push
mov
lds
pop
inc
pop
test
adc
mov
mov
xor
adc
xchg
pushf
sub
or
scas
xor
mov
xchg
into
mov
adc
sbb
inc
out
adc
adc
das
test
mov
pop
aaa
js
clc
xor
psraw
push
aaa
inc
arpl
mov
and
pop
dec
jecxz
fisubrl
jl
jecxz
js
outsb
jle
dec
pushf
push
adc
sbb
repz
lret
arpl
add
and
cld
movsb
int3
je
jecxz
in
xchg
push
sub
and
fsub
mov
fldt
mov
cmc
adcl
xchg
xchg
push
xor
inc
xchg
repz
cmp
lcall
rclb
push
movsb
pop
clc
mov
enter
into
addr16
push
in
lret
push
push
push
pop
push
dec
push
pop
les
inc
sbb
mov
push
xlat
sbb
jge
ret
test
pop
push
testl
test
out
dec
sub
xor
mov
in
fisubl
xchg
pop
jns
cli
pop
scas
inc
cmp
pop
test
mov
xchg
das
mov
stos
lret
adc
icebp
popf
shrb
xchg
adc
or
and
push
jge
xchg
rorl
ds
cmp
sbb
adc
xchg
jg
popf
daa
nop
sahf
filds
mov
jl
lret
dec
mov
push
inc
rolb
or
xchg
stos
xchg
ss
push
test
testb
sub
dec
testb
ret
push
pop
sbbb
cmp
add
nop
sbb
insl
cmp
pop
call
mov
lret
sarl
negl
cmp
aam
mov
jle
push
xchg
sub
mov
jns
shll
pushf
insb
mov
ret
fsts
jmp
out
adc
in
pop
addr16
ficoms
popa
and
mov
cld
jbe
jl
insb
xchg
scas
mov
jp
rolb
adc
sbb
cmp
dec
adc
xchg
xchg
pop
int3
push
jb
sbb
inc
lods
xor
and
sbb
sub
lret
dec
mov
or
lret
les
or
cli
daa
lds
jg
sbb
ljmp
in
xchg
inc
popf
in
std
lret
jno
rcrb
stc
xchg
lock
inc
cmpsb
add
lahf
aam
imul
loopne
stos
pop
xchg
dec
fwait
arpl
les
ficompl
xchg
xchg
fisttps
push
mov
pusha
ja
jle
sbb
sti
fsubp
jge
sub
or
adc
std
sbb
fsts
xchg
lret
sbb
or
xor
xchg
idiv
fcoms
pop
in
lret
sub
add
inc
fcompl
xchg
iret
pop
in
mov
add
fbstp
pop
mov
mov
inc
push
xor
and
pushf
xor
fstpt
xor
cmp
adc
cli
insl
shll
xchg
call
sbb
pop
aaa
dec
sub
imul
push
mov
sti
shlb
jmp
xlat
lods
mov
scas
movsb
lahf
xchg
xchg
sbb
dec
notb
mov
pop
or
ja
cmp
or
hlt
jmp
in
stos
add
jle
xchg
cs
addl
test
jp
imul
and
push
mov
cmpsb
lret
fbld
out
loop
xchg
data16
ret
movsl
imul
inc
push
loopne
jge
xchg
and
enter
repnz
jl
mov
mov
lods
lea
call
imul
or
nop
push
sahf
adc
dec
sbb
jb
sub
aad
mov
repnz
push
ret
xchg
rclb
xor
testl
scas
insl
incl
inc
adc
cmpsl
cmpsl
dec
int
pop
in
push
push
insb
sub
orb
or
jl
into
fcmovne
lods
adcl
rcl
pop
data16
aam
inc
push
push
pop
ljmp
repz
ja
sti
xchg
data16
xchg
mov
in
loope
rorb
repnz
xchg
xchg
imul
or
mov
add
test
icebp
aas
fwait
mov
enter
insl
aad
jb
out
mov
adc
mov
inc
aam
push
cmovns
out
dec
cmp
push
inc
xchg
jb
je
inc
push
mov
or
push
adc
fisttpl
lods
pop
call
dec
je
and
sub
mov
jnp
xor
pop
lds
add
and
dec
fcomps
shlb
sub
ja
shrb
out
cld
push
pusha
mov
outsb
cmp
popf
and
cld
xchg
xor
fsubs
mov
and
in
loope
jmp
lods
mov
lods
sbb
stc
shrb
sarl
or
lcall
test
mov
dec
mov
sbb
shl
or
into
aad
cltd
pop
clc
out
popf
fimull
les
les
push
iret
xchg
mov
loopne
jge
pop
pushf
sbbl
aas
in
jae
xchg
add
jg
mov
jecxz
es
cmp
insl
mov
inc
cmp
mov
jae
adc
and
pop
ds
pop
push
pop
sbb
jmp
test
fdivrs
xor
std
mov
xor
pop
mov
mov
add
jo
jne
lea
out
bound
add
push
leave
fwait
imul
xor
insl
inc
jo
sbb
mov
push
cmc
scas
les
and
inc
mov
push
inc
jp
lods
outsb
mov
jbe
mov
push
in
test
inc
add
pushl
test
cmc
mov
outsb
pop
cli
out
shll
xor
and
jnp
mov
scas
movb
repnz
xchg
xor
gs
jb
add
and
mov
or
pop
inc
cwtl
push
pop
enter
pop
pop
xchg
in
je
es
mov
add
addr16
add
inc
jnp
jno
adc
imul
iret
sbb
xlat
repz
shlb
add
adc
sbb
incl
mov
cmpl
aad
insl
lods
lahf
shlb
inc
adc
lahf
lret
adc
ds
pop
imul
pop
cmpsb
pop
push
int
fldl
mov
out
lret
mov
fistl
mov
lods
cmp
aaa
sbb
xor
std
adc
lret
push
mov
adc
out
inc
add
push
shlb
pop
mov
push
add
jne
push
loopne
jbe
fistl
fs
mov
sbb
mov
jmp
cs
mov
or
lcall
stos
cmc
jge
mov
jp
pusha
or
xchg
mov
gs
mov
test
push
ret
dec
mov
das
jg
imul
mov
jge
lret
pop
xor
nop
xor
mov
loop
pushf
jae
mov
push
enter
lret
jmp
add
xchg
dec
xchg
je
pop
int3
sub
lret
add
fcoml
fisttpll
dec
xchg
pushf
dec
jo
sub
add
imul
xchg
ror
pop
ljmp
mov
dec
fmull
xchg
adc
xchg
mov
push
rorb
push
test
mov
push
pop
pushf
icebp
loope
xchg
stos
repz
sbb
test
fiaddl
call
mov
inc
inc
dec
pop
fldl
and
in
xor
inc
dec
div
sub
add
out
push
test
xor
adc
push
xchg
lods
or
out
xor
pop
iret
mov
test
andl
addr16
dec
int
mov
fabs
enter
sbb
pop
jnp
outsl
xor
das
mov
push
aam
lret
cmp
dec
push
loop
call
dec
loop
sbb
and
imul
lds
pushl
mov
mov
mov
inc
dec
stos
mov
mov
xchg
shrb
add
dec
loop
out
pop
xor
fisttpl
jnp
pop
movsb
jo
into
mov
jne
pop
sub
fwait
movsb
sub
ficompl
jo
mov
sub
xchg
lea
test
shl
pop
mov
in
jle
or
js
test
adc
sbb
xlat
lahf
iret
mov
sbb
in
dec
cld
cmp
add
std
xor
or
aaa
cmp
loop
sbb
mov
xchg
xchg
stos
mov
stos
lcall
sbb
lods
mov
push
add
mov
lret
int
int
addb
cmp
mov
pusha
fwait
imul
jmp
adc
cltd
inc
xlat
aam
add
sbb
xchg
pop
dec
xor
jmp
test
movsl
gs
or
add
adc
out
push
xor
lret
jmp
test
aad
bnd
nop
fwait
jb
adc
and
adc
mov
notb
outsl
gs
cmp
add
shrl
dec
push
push
nop
cmp
inc
dec
cmpsl
adc
into
dec
std
mov
pop
cld
lcall
cltd
pop
es
add
inc
xlat
inc
inc
rcll
outsb
sub
arpl
jne
push
stc
outsb
iret
xchg
inc
arpl
inc
popa
cmp
cli
repnz
mov
jp
aam
dec
or
cltd
mov
scas
pusha
jp
movsl
int3
shlb
xor
ficoml
or
pop
inc
fistpll
int3
pop
mov
testl
push
adc
fdivrl
subb
mov
inc
sub
in
je
repnz
es
ja
std
mov
ret
or
movsl
xchg
cmpsl
repz
enter
insl
jle
adc
sbb
imul
jge
xchg
lahf
pusha
and
std
out
mov
sub
popa
roll
outsb
scas
inc
addr16
jmp
cmpb
push
clc
rorl
cwtl
insl
stc
subl
aam
adc
jae
jnp
aad
in
pextrw
push
jnp
mov
out
cmp
cmp
xor
sti
or
mov
stos
or
jo
sbb
pop
stos
scas
inc
mov
pop
sahf
into
out
hlt
pushf
pop
arpl
insl
and
xchg
xor
pop
jnp
out
mov
cmp
mov
sub
cmp
sub
dec
push
mulb
add
mov
inc
popa
push
cld
add
inc
leave
shrl
int
inc
in
inc
push
daa
pop
int3
ds
pop
in
gs
cli
dec
je
out
enter
mov
jp
jae
add
imul
dec
dec
xchg
adc
cmp
cs
dec
lret
rclb
mov
mov
cmp
mov
push
inc
mov
xchg
sbb
bound
xchg
in
fdivrs
inc
aam
scas
xor
add
add
pop
or
aam
jo
fwait
sub
and
push
push
jmp
paddsb
out
or
jae
rcrl
popf
ja
xlat
xor
leave
mov
xlat
ja
fmulp
daa
xchg
fwait
xchg
xor
adc
sbb
sbb
mov
leave
inc
loope
outsl
mov
fiaddl
sub
or
or
jo
popa
loope
dec
lcall
inc
jb
mov
jl
lea
mov
jmp
fdiv
add
mov
inc
icebp
and
mov
test
mov
and
cmpsb
popf
aam
dec
pop
mov
out
xchg
and
jnp
pop
loop
inc
outsl
push
xor
dec
jge
loopne
mov
jo
xchg
dec
mov
stos
mov
xchg
adcl
les
out
mov
jl
mov
push
dec
push
es
mov
jge
inc
add
xor
mov
pop
fwait
adc
push
fbstp
outsb
jae
xchg
call
xchg
imul
sub
cmpsl
shl
or
bound
mov
push
and
pop
xchg
jb
cmpsb
outsl
cs
cmp
pop
test
shll
lods
outsb
push
push
inc
insb
sti
xchg
mov
mov
repnz
cmpsl
and
dec
lea
pop
sbb
cmp
pop
rorl
loop
dec
push
dec
cmpsl
stos
adc
add
mov
mov
les
sbb
mov
stc
xchg
and
cltd
push
ljmp
xor
inc
mov
sbb
cmp
cwtl
dec
mov
fistps
bnd
xor
scas
mov
jge
sbb
inc
adc
inc
outsl
jb
xchg
sub
mov
daa
add
jnp
pop
sbb
mov
and
cmp
push
cmp
mov
jle
cmp
and
mov
cltd
adc
xchg
jle
mov
push
sub
cltd
jge
repnz
in
xchg
push
cmp
aas
in
jg
xor
push
sub
in
pop
jle
insb
and
dec
repnz
lret
sarb
add
cmp
sub
add
mov
in
or
adc
insb
ss
or
inc
rcr
data16
xchg
xchg
btr
test
arpl
jbe
into
repnz
sbb
and
stos
into
cmp
shlb
push
xor
mov
xchg
or
sub
ret
repz
mov
aas
into
clc
dec
mov
adc
repnz
dec
push
ret
iret
mov
dec
inc
push
jae
add
mov
testb
or
mov
insb
mov
ss
fwait
inc
ds
or
nop
mov
icebp
out
cmc
add
adc
cmp
outsl
push
cmpsl
or
int
pop
adc
mov
fwait
sbb
mov
ss
ljmp
dec
pushl
mov
outsl
mov
add
mov
jno
jmp
aas
cmpb
fdivrs
dec
mov
jne
enter
es
je
mov
std
or
cli
ds
hlt
stos
les
daa
andnps
mov
vpsrlw
cmp
mov
dec
arpl
xchg
mul
lret
int3
inc
inc
leave
sbb
mov
fwait
jbe
mov
cwtl
leave
mov
cltd
test
das
push
xor
sbb
cli
lea
lahf
mov
sbb
cmp
mov
sbb
mov
xchg
mov
test
out
xchg
das
sar
int3
or
adc
adc
inc
movsl
xorb
je
sahf
aad
stc
dec
push
adc
cmp
add
sub
packssdw
fstpl
adc
je
pop
pop
scas
lahf
loop
shlb
sarl
lock
add
jge
xchg
movsb
mov
les
sahf
je
std
fisttpll
sbbl
inc
imul
dec
push
sbb
mov
xchg
shrl
xchg
and
mov
sti
push
addb
adc
gs
cmp
incl
popa
dec
sbb
jb
stos
rcrl
arpl
mov
mov
push
int
andb
shr
mov
scas
mov
or
pop
aas
scas
jle
lea
lret
outsl
fmulp
push
add
ficompl
xchg
pop
sub
leave
loop
pop
sub
adc
sub
mov
or
rclb
lahf
dec
jl
into
push
insb
push
pop
inc
rcrl
int3
lock
ja
shrb
cmpsl
adc
mov
test
sub
cli
xor
cs
ja
dec
rcrl
adc
pusha
out
xchg
bound
pop
adc
fnstenv
jns
js
dec
jbe
push
cmpsl
inc
addr16
or
popa
mov
cmc
hlt
sbb
sti
data16
pop
shlb
xor
mov
pop
mov
inc
out
pusha
or
cmc
push
clc
flds
lock
fsubrl
test
lcall
push
cmpsl
cli
xchg
jne
and
add
lock
inc
mov
nop
jmp
inc
dec
sub
data16
mov
mov
clc
test
jno,pt
inc
cs
dec
inc
dec
stos
xchg
mov
and
mov
xchg
mov
mov
outsl
cmp
insl
push
imull
lahf
mov
iret
xor
cmp
in
mov
inc
cmc
cmp
aam
push
inc
xchg
popa
sub
imul
inc
rolb
mov
lahf
pushf
mov
mov
and
sbb
push
push
enter
mov
call
mov
test
pusha
subb
les
loop
ljmp
repnz
mov
aad
test
dec
int
fcompl
std
dec
leave
int
nop
sbb
pushf
push
sbb
loope
dec
loop
movsl
cmp
inc
xchg
loope
add
popa
jne
add
imul
ljmp
dec
mov
push
push
into
fstl
rcrb
jge
dec
jo
xchg
xchg
or
xchg
outsb
rorb
andl
push
push
push
popa
dec
fldl
or
lds
jmp
sarl
add
es
mov
xorb
dec
xchg
add
out
jo
jo
push
xchg
aam
popa
adc
mov
pop
jns
jo
jge
push
in
adc
clc
dec
leave
iret
sub
jp
mov
arpl
xchg
and
orl
dec
mov
mov
and
xor
jne
xor
or
push
inc
sahf
jle
mov
jp
push
cmp
xchg
pushf
xchg
lahf
fdivl
mov
cmp
int3
and
ss
sbb
fisttpll
repz
icebp
mov
add
jp
inc
jno
fnstsw
pop
mov
or
sub
lret
jnp
lret
sbbb
sub
add
cmp
lods
xchg
ffree
dec
loop
repz
sbb
xor
mov
mov
cmp
push
insl
aas
xor
xchg
sbb
mov
repz
inc
scas
in
push
inc
push
dec
dec
out
lock
pusha
pop
xor
pusha
loopne
fcoms
arpl
dec
xlat
mov
xchg
adc
or
insl
mov
test
or
negl
push
push
push
dec
inc
add
test
cmc
push
notb
xchg
fdiv
pop
std
push
cmpsb
and
fldcw
sbb
data16
xchg
mov
sbbl
notb
cmp
sub
add
out
pop
in
lret
pop
lret
scas
jb
push
mov
xchg
lret
gs
push
aam
outsl
cld
leave
push
and
outsl
sub
cltd
push
xchg
lret
stos
rcrb
aaa
inc
mov
push
lahf
pop
lds
fs
dec
inc
loope
and
stos
std
pusha
xor
fs
fildll
cltd
ucomiss
dec
je
pop
in
cmp
dec
int3
pop
popl
std
fidivrl
pop
pop
out
insl
cwtl
jl
jge
xchg
jg
xlat
ret
lock
pusha
int3
sub
xchg
inc
push
movsl
data16
xchg
pop
aad
xchg
bound
mov
xchg
out
icebp
ret
lret
jge
pop
nop
test
out
xchg
aad
fsubr
lock
aas
dec
push
hlt
xor
in
push
in
lcall
dec
xchg
ja
ljmp
mov
test
shll
jne
mov
popf
das
jmp
int
mov
mov
add
add
mulb
mov
test
add
nop
dec
pop
fcoms
push
shll
xchg
out
sbb
arpl
mov
sbb
idiv
lret
adc
or
iret
xchg
push
push
int3
fwait
data16
dec
in
in
scas
js
loopne
cmp
jle
cmpb
popa
fsubl
dec
sbb
inc
or
call
push
mov
ljmp
mov
imul
jmp
mov
icebp
stc
insl
xor
push
inc
jns
cmp
fsubs
dec
push
jp
or
in
mov
ret
push
inc
imul
std
mov
sahf
into
mov
repnz
hlt
loopne,pn
shr
movl
int
sbb
pop
clc
out
sbb
xor
rolb
daa
pop
adc
or
sub
mov
mov
pop
add
cmp
dec
inc
shld
popa
cmpb
data16
daa
stos
aas
mov
test
xchg
sbb
rorb
inc
test
cmc
bound
cltd
and
and
add
jno
or
enter
orb
sbb
push
mov
push
int3
push
inc
mov
clc
push
dec
xor
fld
and
jne
in
ret
xchg
aad
fisubrl
js
xchg
jae
sub
mov
ja
clc
mov
lds
mov
idiv
mov
add
pop
popa
push
icebp
jbe
inc
mov
xchg
fnstenv
mov
shll
cmc
jge
arpl
rcrl
iret
fsubrs
mov
es
xchg
rcl
test
mov
mov
mov
pop
outsl
imul
sbb
pop
inc
sbb
xchg
testb
mov
sbb
mov
push
mov
jbe
dec
mov
outsb
outsb
out
mov
adc
rolb
jmp
inc
mov
test
lret
add
sub
lret
lret
inc
or
inc
andl
or
xchg
cmp
fs
not
ficompl
or
pop
xor
adc
cwtl
lahf
movb
pop
test
sbb
inc
xor
sahf
sti
add
mov
mov
sbbb
das
dec
dec
push
int
mov
pop
test
enter
jae
scas
push
pop
add
ds
push
mov
add
cmp
iret
push
aam
or
push
adc
mov
cmc
cmp
mov
inc
jbe
cwtl
jnp
jo
in
scas
fdiv
push
in
icebp
gs
stos
mov
cmpsb
jb
dec
jno
insb
and
jbe
lods
push
mov
cld
push
out
mov
ret
mov
jbe
std
mov
xchg
add
ds
adc
jb
adc
int
test
cmp
xchg
sbb
sbb
inc
add
inc
sbb
sbb
inc
test
dec
stc
aad
ss
and
xor
test
xchg
xor
adc
popa
pop
xor
xchg
adcl
cmp
sbb
nop
ljmp
lret
jae
mov
clc
dec
xchg
jo
mov
in
and
std
jbe
sahf
and
shlb
in
repz
jae
pop
imul
adc
hlt
pusha
jmp
pop
idiv
ret
jmp
enter
add
inc
data16
pop
cli
xchg
inc
cmpsl
cli
pop
dec
dec
mov
pop
jbe
dec
cmp
out
mov
mov
pop
movsb
adc
lret
push
inc
leave
sbbl
xchg
lock
stos
mov
and
mov
push
push
out
mov
mov
shrl
aaa
mov
loopne
lret
mov
mov
outsl
jp
jns
int
xchg
sub
dec
ret
aam
or
inc
cmc
sub
inc
fmulp
adc
pusha
adc
test
aas
insl
repnz
sahf
loopne
insb
pop
and
mov
inc
cwtl
pop
mov
je
mov
repz
jle
push
xor
cmpsb
mov
leave
or
out
push
std
adc
dec
shll
ja
xchg
xchg
pop
xor
dec
push
hlt
or
imul
mov
jno
dec
adc
test
test
outsl
pop
xchg
shl
jnp
add
popf
cltd
std
insb
jns
adcb
jl
inc
cmp
sbb
sub
or
in
add
repnz
sub
lcall
pusha
aas
xor
and
jge
stos
push
aad
jne
pop
rorb
pop
mov
lcall
pop
xor
sub
mov
pop
icebp
or
scas
test
inc
lret
mov
scas
dec
cmp
stos
scas
ret
xchg
cmpw
stos
lea
stos
xor
cmp
inc
sbb
push
test
push
and
adc
pop
pop
repnz
in
fwait
mov
add
sbbb
arpl
dec
sub
leave
jmp
aaa
mov
xor
movl
in
pop
push
mov
flds
adc
push
outsl
out
insb
pop
xor
sub
or
or
fs
ds
lret
mov
iret
mov
lock
bound
sbb
sub
pop
push
shlb
bound
icebp
loope
push
pop
dec
int
addr16
cmc
data16
stc
les
sub
out
jmp
je
stc
fdivrl
and
pop
aam
hlt
out
das
jp
add
std
daa
cmp
das
sub
test
cltd
iret
mov
push
rcr
addl
repz
fprem1
jb
incl
jo
and
test
lock
in
fsubl
das
hlt
adcb
iret
adc
loopne
jnp
inc
xchg
or
negb
stos
add
lcall
pop
inc
out
enter
xor
mov
sub
bound
push
shrb
and
loop
scas
pushf
cmp
je
ret
jle
pop
cmp
cs
jle
clc
out
or
push
mov
jns
fcmovb
fbstp
ljmp
jbe
es
rolb
jmp
jns
ljmp
sub
test
lret
ret
lea
push
pop
std
xchg
shrb
mov
pop
xor
fbld
in
aas
inc
push
in
loope
sbb
mov
jmp
arpl
das
jp
adc
pop
fisubl
fstpt
push
outsb
out
sub
inc
mov
repnz
mov
or
loope
push
lods
lock
xchg
cwtl
sahf
nop
stc
dec
xor
or
cmpl
jge
sub
mov
xor
mov
or
fsubs
pushf
push
and
jmp
clc
inc
push
xor
into
daa
adc
fwait
rolb
in
subb
push
adcl
data16
out
aaa
arpl
in
inc
xchg
daa
push
fidivl
stc
dec
jl
aas
sub
lcall
adc
adc
fmuls
outsb
dec
xor
scas
xchg
xchg
outsb
mov
repz
mov
pop
jnp
pop
sub
add
mov
xor
loop
lcall
mov
or
mov
fidivl
loop
adc
in
cmc
jp
cltd
hlt
fwait
mov
or
int
lahf
stos
gs
or
mov
int
cltd
xor
ret
and
cli
cmp
inc
ficoms
imul
and
cwtl
mov
cmc
js
shll
loopne
xor
dec
sar
std
cmp
aaa
mov
or
iret
inc
fsubs
push
test
jnp
push
sub
enter
lret
rclb
fistpll
cmpsb
pop
pop
shrl
mov
add
cmp
mov
cld
data16
adc
nop
sahf
enter
xchg
cli
fwait
jge
xchg
scas
icebp
inc
daa
jo
int3
xor
pusha
jno
fwait
insl
add
inc
dec
outsl
ret
leave
jmp
sbb
cmpsb
aam
add
call
and
and
pop
xor
js
push
adc
stos
mov
sahf
dec
decb
mov
test
inc
adc
sbbl
movsb
cltd
popa
aas
sub
pusha
fcmovb
pushf
imul
insl
and
cwtl
aad
and
pop
and
icebp
dec
or
cmp
jno
nop
not
jmp
imul
hlt
jae
mov
cmp
ljmp
daa
mov
jbe
mov
repnz
cld
and
fsubr
mov
stos
cmp
add
aam
test
xchg
lds
pushl
rorl
xchg
lret
ja
loope
push
sub
cmc
rol
leave
sbb
sub
and
int
cmp
js
orl
mov
inc
test
jb
push
out
inc
sbb
pop
es
lods
sbb
insb
push
dec
in
mov
mov
dec
adc
mov
xchg
mov
jbe
mov
mov
mov
push
mov
cmp
xor
ficoms
mov
imulb
cli
in
int
out
filds
inc
pop
adc
mov
mov
ljmp
std
ds
shll
nopl
cmc
pop
mov
mov
jnp
test
gs
add
mov
xchg
mov
push
aaa
mov
pop
mov
mov
pop
enter
lahf
fs
or
aaa
fs
cmp
jp
call
add
lcall
pushf
fistpll
lahf
adc
pusha
mov
bound
clc
insl
ss
rcrl
mov
push
xchg
jge
test
push
and
cwtl
ffreep
repnz
scas
fcoml
mov
xchg
mov
cltd
in
sbb
xchg
leave
pop
pop
popa
xor
or
loopne
loopne
in
add
shll
in
repz
push
xor
jg
mov
leave
stc
es
push
xchg
mov
xchg
dec
imul
fmul
cld
mov
icebp
mov
icebp
push
je
and
inc
cltd
in
pushf
push
rolb
fimull
popl
pop
out
aaa
cmc
lret
stc
pusha
sub
or
mov
or
mov
loop
mov
in
adc
fbld
into
adc
clc
ret
or
lret
aad
mov
cmovl
clc
and
imul
imul
adc
pushf
push
adc
xor
in
or
popa
hlt
fidivrs
shlb
jmp
push
test
and
dec
mov
xchg
dec
lods
repnz
pop
jmp
sub
stos
imul
lds
ja
pop
pop
mov
rcr
pop
xchg
pop
adc
push
pop
adc
or
jbe
cli
ds
adc
lahf
pop
cmp
and
mov
add
cmp
imul
pop
dec
or
cmp
mov
pop
mov
cs
icebp
aas
scas
sub
mov
jne
or
cmp
or
sti
mov
mov
popa
sbb
ja
repz
mov
mov
into
aaa
xchg
dec
push
es
call
pop
dec
pop
and
mov
push
mov
push
jno
in
jne
inc
scas
dec
cmpsl
in
xchg
inc
cld
pop
mov
jae
mov
push
rol
mov
jp
data16
xor
movsl
xchg
xchg
jle
shrl
cli
nop
rorb
cmc
add
xor
loopne
shr
mov
stos
stos
pop
pop
sbb
test
stos
dec
pop
xor
lahf
das
jns
loop
ss
cmc
add
neg
xor
test
push
jb
popa
ljmp
pop
cwtl
mov
jbe
addb
cld
mov
jmp
jo
in
mov
sti
shll
lcall
xchg
cli
inc
or
xchg
lds
push
inc
adc
andl
pop
outsl
sub
push
jg
cmpsl
shrb
dec
mov
push
jecxz
movl
in
ss
ds
and
aas
daa
push
hlt
in
sarl
arpl
movsl
or
jmp
push
repnz
sbb
cmp
in
mov
jmp
cmc
lcall
xchg
mov
adc
repnz
dec
jbe
sbb
imul
adc
push
cmc
add
dec
dec
out
jge
inc
xchg
clc
outsb
mov
movsb
repz
out
jae
cmp
stos
dec
pusha
out
add
jbe
xor
mov
dec
repz
jns
ret
fldcw
cmc
inc
cmpsl
je
push
and
jge
fimuls
subb
in
mov
hlt
jo
stos
jbe
mov
cltd
les
pmulhuw
mov
inc
out
jmp
shr
push
cmpsb
jnp
cmpsb
or
jl
adc
adcb
sbb
push
mov
test
or
mov
or
outsb
xchg
adc
clc
scas
aad
add
ror
pop
or
push
and
das
jmp
mov
enter
ret
rcrb
repz
inc
out
fcompl
in
cld
xchg
push
push
xor
js
add
lock
pop
dec
call
pop
dec
lock
inc
inc
loop
sub
dec
test
stos
loop
in
ret
push
push
mov
jmp
push
rcl
pop
test
cmp
mov
pop
jg
sbb
xchg
xchg
mov
dec
jae
ret
lock
adc
iret
fsin
adc
femms
ss
daa
xor
xor
mov
loopne
pop
lock
dec
adc
sti
push
repnz
mov
lods
push
lds
add
in
push
into
ret
cmp
or
pop
nop
sub
nop
jmp
mov
mov
xor
pop
data16
push
and
pusha
rclb
cmp
lahf
add
aad
lret
popa
in
jl
leave
xchg
inc
pop
jns
lahf
mov
cltd
nop
lods
cmp
mov
push
lret
ffree
sti
aaa
loop
cmpsl
jo
fidivrl
or
in
mov
mov
mov
pop
xchg
popa
cmpsl
scas
xchg
cmp
push
sti
dec
inc
push
iret
jo
mov
into
js
popf
lds
push
jl
out
scas
jge
and
shll
pop
mov
pop
lret
sti
enter
out
aad
mov
xchg
add
icebp
lret
sbb
lcall
adc
sahf
outsb
adcl
xchg
fistps
inc
xchg
mov
xchg
lret
xor
scas
hlt
popf
lds
loope
cmp
mov
imul
dec
xor
jo
sbb
arpl
mov
outsl
sub
push
loopne
aas
mov
cltd
push
nop
pop
dec
and
cld
add
ds
mov
in
sahf
dec
sbb
lds
jae
mov
xchg
ror
rol
or
insb
inc
xor
shll
ficomps
lods
dec
xor
cs
xor
mov
rolb
inc
pop
iret
loopne
movsl
mov
push
es
fwait
lods
int3
mov
cmpb
sahf
ds
rcll
adc
sbb
jno
adc
pop
add
imul
and
iret
repz
jbe
push
fwait
or
jbe
or
mov
lret
and
xchg
mov
pop
or
fisttpl
arpl
shlb
ret
scas
sahf
xchg
in
mov
sahf
or
jecxz
dec
bound
ss
pop
xor
jmp
shrb
loop
imul
cmpsb
loopne
cmpsb
shlb
scas
out
cmp
enter
xor
cmpsl
jno
mov
lds
cmp
fs
into
negl
pushf
lock
jns
std
inc
fldcw
dec
out
push
gs
sub
pushl
mov
cwtl
push
push
push
mov
in
xor
adc
popa
aaa
mov
jmp
scas
ucomiss
pusha
into
nop
out
leave
pop
xchg
outsl
cli
fcomp
or
adc
sbb
jp
imul
or
inc
adcl
pop
cmc
lock
movsl
out
popa
cs
adc
lcall
mov
outsl
repnz
adc
call
mov
add
es
push
lcall
js
add
xchg
mov
mov
dec
call
daa
adc
popf
sub
fdivrs
jnp
bound
outsl
mov
into
jbe
mov
adc
movsl
cmp
and
int3
push
ds
lret
add
mov
and
imul
adcl
clc
add
sti
leave
out
xor
rorl
sub
inc
jg
cmp
fldcw
cmp
sar
inc
hlt
pop
cmc
pop
lret
mov
testl
mov
fdiv
inc
or
mov
xchg
out
icebp
jge
pop
and
loop
fcmovnb
lds
ret
leave
lret
arpl
jb
imul
or
mov
add
add
mov
xchg
pop
or
sbb
pushf
rolb
scas
rorb
aam
push
icebp
shll
or
scas
inc
test
cmp
shll
xor
stos
cmc
dec
cltd
movsb
out
mov
cmp
dec
scas
lahf
cmpsb
cmp
lds
iret
or
enter
scas
pushf
mov
sbb
cmp
jp
push
cmp
xlat
jns
addr16
and
and
add
std
mov
addr16
and
push
inc
push
pop
xor
daa
les
cmp
xor
lds
dec
ret
push
push
loop
add
mov
fwait
jns
scas
cmp
or
lods
sbb
push
loop
sbb
sti
dec
aam
je
adc
mov
sahf
dec
mov
push
mov
aam
xor
dec
mov
out
mov
cld
iret
xchg
adc
inc
jg
fcmovne
sahf
int3
sub
je
imull
push
jnp
mov
adc
in
sahf
lods
jns
sub
repnz
cmp
cli
into
xor
out
push
xor
xchg
daa
jmp
xchg
cwtl
pop
fbld
ljmp
or
pop
mov
out
push
mov
xlat
test
sbb
xchg
orb
lods
sti
mov
inc
outsl
or
adc
sub
pop
push
mov
push
pop
js
pop
jecxz
xor
mov
cmp
cmp
adc
aad
mov
push
shll
xchg
dec
jns
cmpsl
add
fidivrl
lods
stos
scas
jnp
or
jmp
mov
ss
in
xchg
arpl
test
push
nop
xchg
and
push
mov
mov
push
iret
loopne
test
push
adc
push
inc
sub
add
cltd
hlt
leave
dec
xorb
xchg
and
inc
xchg
mov
sti
jno
out
mov
pop
test
xchg
mov
fwait
stos
xchg
iret
js
scas
push
rcrb
icebp
cmpsb
ror
jne
adc
mov
pusha
xor
push
push
scas
and
xor
pop
mov
arpl
inc
rorb
aam
push
jmp
hlt
hlt
cld
inc
push
xor
ja
pop
push
pop
pop
inc
inc
or
das
sahf
test
adc
mov
pop
cwtl
outsb
daa
cld
shlb
xchg
jns
std
dec
addr16
test
pop
xchg
hlt
push
sub
jae
sub
xor
ret
loopne
in
sbb
les
adc
lcall
add
mov
test
xchg
jecxz
xor
lret
arpl
ljmp
pop
mov
jb
push
add
pop
pop
addl
fidivl
dec
pop
aad
enter
in
fldenv
and
idiv
add
mov
popf
sub
hlt
mov
cmp
sub
jno
fisubl
sbb
sbb
mov
mov
jg
dec
and
insl
mov
or
xchg
xchg
xor
rdtsc
mov
adc
ss
lcall
ficoms
jle
ss
xchg
je
and
out
jg
movsb
inc
movsb
pop
or
std
pop
ret
push
bound
mov
cmp
stos
shlb
outsl
xor
in
adc
and
int
sub
add
loopne
sub
in
pop
ds
je
adc
mov
aaa
or
popf
xchg
repnz
in
pop
push
mov
popf
lea
enter
xchg
xor
add
jbe
fcoml
inc
stos
scas
and
std
outsb
push
push
push
scas
das
add
mov
lretw
jns
or
out
and
ljmp
fmuls
xor
jp
jno
mov
pop
loop
jp
adc
mov
rcll
mov
test
xchg
pop
fstl
mov
dec
shll
ss
ss
xor
pop
jp
popa
lea
andb
add
add
inc
cmc
push
push
int
and
ror
cwtl
or
lods
jbe
pop
dec
add
jge
mov
mov
xchg
data16
imul
clc
scas
inc
neg
fs
loope
adc
loopne
popa
addr16
sub
inc
add
cmp
cmp
hlt
push
cmp
push
repnz
inc
into
jae
inc
and
lea
add
nop
jae,pt
inc
dec
in
repnz
mov
xchg
xor
cmp
nop
leave
aaa
pop
adcb
scas
cmp
cmp
stc
aad
pop
or
cld
mov
and
scas
insb
mov
pop
imul
fnstcw
pop
cwtl
cmp
sub
dec
jae
push
dec
jo
ret
repnz
sbb
ljmp
in
hlt
aam
xlat
jno
test
jle
xchg
cwtl
arpl
aad
mov
out
mov
inc
cmp
xor
mov
repnz
mov
loopne
cwtl
jl
mov
inc
int3
sub
add
push
dec
incl
sub
mov
int3
and
das
je
pop
inc
je
inc
pop
adc
sti
test
mov
inc
js
pop
hlt
hlt
mov
shl
cld
out
xchg
sti
push
inc
ret
push
push
in
lods
mov
or
cwtl
lods
jmp
push
inc
push
inc
js
push
sahf
jb
dec
xchg
nop
movsl
cmp
jg
sbb
dec
dec
iret
mov
dec
in
jl
cmpsb
push
mov
loop
aam
inc
data16
into
cmp
repnz
and
xchg
jno
or
and
pusha
jae
push
out
xchg
movb
adc
cmp
lods
clc
pop
mov
mov
cmp
xchg
and
sub
movsb
cli
jle
jo
aas
arpl
sub
xchg
ret
xchg
out
lods
mov
std
jl
sub
lea
daa
imul
cld
rcrl
ljmp
mov
inc
test
mov
mov
popf
or
mov
arpl
call
pop
inc
sub
dec
and
jp
xchg
adc
ret
clc
stc
icebp
int3
enter
sarb
cmp
mov
int
daa
shll
push
sbb
jp
pop
mov
pop
sbb
scas
ficomps
loop
stc
ret
ss
and
mov
outsb
test
adc
mov
xor
inc
add
ficoms
mov
mov
sub
ret
add
test
inc
xor
or
data16
or
inc
jb
stos
push
inc
insb
pop
sub
mov
test
pusha
arpl
enter
sbb
in
mov
mov
sti
repz
adc
and
push
xchg
inc
xchg
inc
xchg
sbb
pop
jnp
cmp
mov
imul
xor
add
sarl
enter
test
push
mov
aaa
jp
out
inc
mov
cmpsl
add
lea
daa
dec
negb
in
xor
lea
xchg
repz
and
inc
jle
sbbb
and
jns
xor
and
mov
insl
cmpsb
in
imul
and
inc
out
pop
lods
pop
push
popf
leave
pop
sbb
je
or
push
pop
and
push
dec
je
rcl
mov
add
lock
hlt
movsb
fidivl
shll
in
pop
mov
push
popa
mov
inc
cli
call
mov
cmovb
push
mov
dec
cmc
insl
inc
or
inc
shrb
xor
mov
fdivrs
lret
data16
adc
iret
jg
cwtl
sub
add
adc
sti
xchg
cmp
lret
cmpb
dec
cmp
or
sub
negb
js
add
mov
lods
xchg
cs
xchg
dec
hlt
popf
loopne
jo
inc
ds
xchg
call
out
push
mov
iret
stos
inc
sub
mov
lock
mov
push
jns
xor
pop
mov
ret
int3
icebp
ret
mov
shlb
leave
mov
jns
mov
int3
div
pop
push
sub
stc
mov
inc
loop
pop
test
xchg
or
stc
push
cmp
filds
dec
xchg
jecxz
push
pop
xor
adc
int
sbb
or
xchg
inc
lods
fiaddl
push
shr
mov
inc
lods
outsb
bound
or
xchg
fldenv
pushf
ret
fdivp
scas
sbb
bnd
mov
adc
es
int3
bound
clc
leave
in
fiaddl
adc
lahf
jne
out
mov
or
cmp
ror
adc
lahf
mov
push
in
cs
and
ljmp
div
dec
push
sbb
fnstenv
fildll
stos
push
or
mov
inc
push
imul
int3
add
outsb
mov
push
jno
imul
aas
movsl
jp
fidivrl
lea
stc
pop
add
jae
push
cmp
pop
cmp
or
mov
jp
or
xchg
insb
jbe
mov
xor
sbb
mov
jae
and
dec
xchg
mov
push
leave
pop
mov
cmp
js
test
push
pop
ljmp
xchg
pop
push
cwtl
xchg
in
pop
mov
into
dec
jle
rolb
xor
adc
mov
adc
mov
sub
cmp
aam
adc
ret
mov
and
or
popa
sti
xor
cld
sub
sub
sbb
cmp
mov
mov
xor
push
cmp
je
adc
pop
push
ja
mov
stos
add
and
les
lock
fstps
imul
rcr
xchg
push
dec
lret
outsl
push
jmp
xchg
ljmp
js
pop
pop
xchg
call
dec
mov
fs
mov
pushf
sbb
push
fs
or
fcomps
add
adc
daa
jns
loop
lds
pop
jne
inc
xchg
imul
add
jns
test
ficomps
rorl
out
movsl
cld
mov
faddp
aas
out
adc
mov
rclb
jecxz
xor
mov
adc
push
lcall
jno
int3
jnp
xor
push
jmp
ror
daa
out
mul
xor
std
mov
daa
imul
lcall
push
inc
mov
cwtl
inc
scas
cmp
cltd
gs
les
mov
dec
bnd
inc
nop
lock
outsl
adc
mov
fstps
idivb
stc
mov
pushf
imulb
das
push
mov
movsl
lret
xchg
jl
sbb
mov
loop
cs
in
xor
push
movsl
cmpsb
inc
push
ret
push
shlb
or
mov
lods
movsb
nop
jae
fdiv
inc
jl
pusha
nop
push
lods
cmp
mov
sahf
and
mov
xchg
loop
sbb
mov
ja
adc
xor
daa
fistps
or
scas
or
int
int3
cmp
and
push
sbb
inc
out
jmp
filds
fwait
sub
fidivl
ja
call
movsb
push
cmp
mov
or
int3
loope
pusha
inc
push
sub
jno
aaa
cwtl
ss
jno
out
gs
mov
push
pop
mov
lds
mov
out
pop
mov
xor
das
mov
test
popa
push
int3
es
in
mov
pop
adc
mov
ja
lock
iret
xor
pushf
pop
push
jmp
cmp
fimuls
sti
stos
roll
pushf
loopne
sub
enter
mov
dec
das
xor
mov
push
sbb
clc
sub
call
xchg
ja
mov
icebp
cmp
and
ljmp
inc
mov
ljmp
mov
and
or
and
inc
in
cmp
mov
je
aad
addr16
scas
fwait
cwtl
mov
adc
cli
jecxz
mov
call
lea
test
repnz
in
cmpsb
mov
shll
enter
nop
mov
or
aam
cld
or
aaa
out
inc
dec
ret
stos
cmc
imul
mov
cmp
adc
add
jmp
sub
sahf
lods
mov
push
mov
scas
xchg
pop
call
aam
jnp
sub
push
ret
mov
mov
lret
mov
inc
push
mov
push
stos
sub
jne
icebp
std
cmpsl
fmuls
out
insl
call
or
lods
jns
dec
pushf
pop
roll
sub
sbb
sub
or
mov
cmp
stc
shr
inc
pusha
mov
adc
and
push
xchg
sub
dec
fwait
xor
lahf
dec
xchg
mov
ja
mov
arpl
mov
ret
rcrb
push
out
jmp
dec
jb
jnp
inc
mov
rcll
int
inc
sbb
jnp
fwait
pop
cmp
mov
push
push
add
enter
dec
dec
lahf
dec
inc
sarl
movzwl
jl
jle
sahf
adc
sbb
add
ret
add
dec
fistpl
add
push
pop
movsb
push
iret
into
js
in
shlb
mov
or
push
mov
cmpsb
mov
clc
fwait
sub
xlat
daa
jne
mov
adc
insb
fnstenv
shlb
int
sub
clc
dec
mov
sub
scas
jns
int3
cltd
dec
les
fldcw
loopne
xchg
push
xor
fsts
clc
cmpsl
lea
push
push
lret
cmp
xchg
pop
push
outsl
or
dec
data16
mov
mov
jo
add
mov
jmp
mov
dec
sahf
xchg
sbb
les
add
imul
mov
repz
and
or
iret
or
in
mov
dec
sub
mov
mov
imul
js
push
adc
push
sbb
xchg
pushf
out
mov
pop
mov
es
int
push
xchg
adc
pop
add
pop
addr16
addb
and
es
sbb
daa
enter
loope
leave
outsl
or
inc
add
dec
mov
orl
push
jo
xchg
push
and
insl
sbb
sbb
bound
jecxz
sub
imul
stos
mov
xor
roll
mov
es
loopne
ficomps
sarl
out
mov
sbb
shll
mov
pusha
leave
mov
inc
loope
lds
mov
push
fisttpl
push
push
cmc
lods
pop
or
shlb
enter
push
and
std
push
adc
test
negl
dec
ss
mov
jecxz
loop
repz
adc
lcall
mov
ljmp
fmuls
cmpsl
cli
mov
sbb
int
push
pop
mov
fildl
dec
inc
pushf
push
adc
pop
push
sub
outsb
stos
std
add
push
test
inc
sub
dec
cwtl
inc
mov
xor
xchg
daa
addl
pushf
adc
adc
gs
lret
jl
cmp
push
adcl
cltd
push
mov
mov
cmovge
mov
mov
mov
lret
jp
xor
add
movsb
and
and
jbe
xchg
sub
and
stos
pop
add
ds
nop
xchg
xor
cmovbe
scas
sete
pop
in
loope
insl
inc
add
dec
sbb
add
jne
xor
mov
jmp
in
dec
xchg
xor
jo
nop
mov
sub
scas
fidivs
mov
push
jae
pop
adc
ret
jae
int
cltd
and
mov
movsb
mov
mov
sti
fisubrl
js
inc
add
rclb
mov
mov
hlt
int
sbbb
stos
inc
dec
xor
int
repz
push
inc
and
lahf
and
fs
dec
ret
hlt
pusha
jl
xor
xchg
jnp
les
dec
aad
lds
pop
scas
insb
dec
add
dec
mull
aas
mov
xor
rclb
and
cwtl
call
popa
xor
cmp
mov
call
dec
mov
imul
xchg
lcall
repnz
mov
xchg
add
dec
mov
inc
inc
xchg
lods
cltd
push
xchg
int
das
lods
mov
and
mov
mov
in
mov
add
add
in
lds
mov
xor
aaa
jae
xchg
jb
ds
mov
sbb
xchg
inc
int
xchg
or
enter
jb
mov
leave
sbb
out
addr16
xor
push
test
push
daa
fs
enter
lods
popf
push
mov
or
push
sbb
pop
inc
jmp
push
std
xor
xchg
and
add
cmp
jmp
inc
arpl
cmp
in
adcl
inc
sub
sub
and
repnz
cmpsb
insl
iret
add
insb
mov
icebp
inc
add
sub
xchg
xchg
jecxz
sub
lea
and
aam
mov
or
inc
add
aad
ljmp
mov
jmp
inc
decl
add
clc
sahf
or
ret
ljmp
cmc
rcl
mov
cmpsl
cmp
shll
jns
cs
pop
ja
movsl
push
stos
int
cmp
or
fmul
lahf
loope
mov
jns
js
xor
jg
test
out
dec
xchg
mov
xchg
ss
int3
cmp
jp
cmp
jg
movsl
or
lods
pop
inc
cmp
aad
sahf
xchg
les
sbb
mov
iret
ficomps
push
mov
lods
sub
ds
scas
insl
not
push
sub
mov
scas
push
push
fdivs
arpl
jg
fcoms
push
imul
cmp
dec
leave
pop
cmp
pop
inc
sbb
repz
push
xchg
inc
push
cmpsl
mov
mov
mov
dec
jno
dec
or
push
insb
shll
mull
or
dec
sub
into
mov
int
cltd
jbe
mov
cmp
mov
xchg
jle
xchg
cmp
or
imul
pop
pop
imul
and
ljmp
int
jnp
ret
inc
or
aad
call
mov
or
loope
mov
add
mov
popf
add
movsb
ljmp
es
outsl
sub
sub
jl
pop
mov
mov
mov
mov
jge
lahf
test
adc
ljmp
and
ljmp
mov
in
iret
add
sub
arpl
dec
cmp
cld
sbb
push
xor
dec
dec
xor
push
cwtl
sahf
outsb
mov
jno
gs
lods
into
in
xchg
out
xchg
bound
mov
into
out
dec
shll
enter
or
leave
xchg
mov
xor
mov
push
jne
jecxz
adcl
xor
addr16
mov
cmp
adc
mov
mov
push
dec
testb
movl
push
outsb
out
pop
mov
aas
mov
mov
mov
mov
lods
inc
adc
scas
mov
imul
in
push
mov
sti
dec
stc
je
dec
inc
idiv
xchg
sub
mov
movsb
inc
dec
jb
add
lods
nop
cmpsb
out
mov
cwtl
mov
and
sbb
scas
fs
fs
popa
enter
daa
dec
out
jmp
jecxz
inc
mov
mov
clc
xchg
andl
dec
sbb
push
fs
pop
mov
pop
and
fcmove
xchg
jns
lea
adc
jb
out
sub
dec
sti
arpl
ljmp
int3
xor
xchg
adc
sub
ss
push
jo
stos
mov
rorb
cmpsw
addb
mov
jae
mov
cmpsb
pop
cs
fdivr
push
mov
jne
xor
outsb
fadd
cs
into
xchg
out
outsb
push
je
fwait
push
shrl
sub
cmpb
outsb
sbb
fsubs
mov
call
cmp
ljmp
bound
mov
addb
out
jmp
mov
pusha
cmp
and
xor
test
fucomip
add
das
jo
outsl
sub
jae
fldl
shll
cmp
jle
test
mov
lds
leave
and
outsl
sbb
js
fnsave
mov
cmp
xchg
insl
mov
mov
push
push
test
push
in
int3
clc
inc
pop
lds
jecxz
out
inc
mov
movsl
sub
out
pop
cmp
pushl
popa
aam
add
jmp
and
cmpsl
xlat
stos
adc
add
jno
push
fimuls
das
xchg
repnz
test
rorb
stos
lahf
gs
fadds
jnp
sub
or
mov
or
lcall
cmp
sub
sbb
mov
cltd
adc
out
mov
adc
push
clc
and
in
cmc
idiv
mov
lds
ljmp
push
xchg
add
sbb
loopne
fdivr
pcmpgtb
jb
shrd
sbb
lds
or
int3
fst
insl
add
cli
and
into
dec
cwtl
shr
sarb
add
cmc
xchg
inc
and
clc
xchg
mov
jmp
pop
ja
and
jae
push
out
mov
outsb
dec
enter
pushl
push
gs
dec
in
sub
imul
add
cmpsb
faddp
test
subb
pop
pop
lock
cmpsb
pop
mov
mov
add
or
cmpsb
scas
mov
adc
adc
mov
or
push
ss
scas
cmp
mov
pusha
cli
xchg
cld
ficoml
aam
lock
push
out
rorl
sbb
insb
push
sti
popf
into
dec
ljmp
stos
pop
ja
xchg
sub
adc
clc
mov
mov
and
mov
rcll
adc
lock
out
mov
inc
jnp
xor
jae
jnp
push
insl
mov
mov
xchg
xor
cwtl
xor
xchg
and
jne
jg
sbb
pop
cmp
mov
mov
popf
jg
aam
adc
gs
test
push
xchg
outsl
cmp
pop
jmp
in
xchg
adc
adc
dec
loope
out
in
js
sbb
cmc
sahf
aas
pop
movsb
mov
jge
push
push
test
add
jo
je
xchg
out
scas
adc
test
pushf
lea
cmp
and
clc
cmp
jg
jle
pusha
repnz
jns
dec
aas
nop
daa
daa
fdiv
xchg
mov
mov
and
pop
loop
lock
jl
das
mov
or
jle
out
push
imul
fldcw
dec
push
inc
cmpsl
lret
push
mov
xchg
dec
jno
lret
add
aaa
cmpsl
mov
mov
push
jl
and
test
pop
inc
idiv
add
rorl
aad
loop
loope
mov
sar
and
cmc
bound
popl
cmp
test
adc
inc
jp
loop
adc
inc
ds
rclb
push
pop
addr16
pop
xlat
scas
push
imul
repnz
mov
dec
mov
sti
xchg
imul
push
push
lret
and
push
cld
lret
sbb
cmp
or
fildl
mov
push
adc
sbb
daa
dec
std
mov
pusha
adc
cmp
shl
add
fs
lret
cmp
int3
cwtl
jno
lods
loopne
loopne
xchg
add
sarl
mov
xor
stos
stc
ret
bound
bound
nop
mov
sbb
and
pop
jnp
or
in
pop
test
ljmp
xchg
xchg
dec
enter
call
mov
out
fwait
add
inc
fs
mov
jmp
pushf
mov
sub
int3
scas
push
jmp
add
jmp
int3
or
movsl
insb
aaa
in
dec
xlat
scas
inc
mov
xor
rcrl
and
in
jp
aad
push
ds
xchg
adc
insb
test
or
stc
push
or
inc
or
push
push
mov
sahf
cmp
jp
and
xlat
pop
push
fstl
push
jns
cmp
or
or
rcr
cltd
aam
inc
dec
jne
add
rolb
bnd
repnz
outsl
cmp
loopne
arpl
xadd
data16
mov
sub
repnz
cmc
dec
or
lock
pop
hlt
inc
imul
mov
ds
push
int
lock
cmpsb
xchg
adc
sub
adc
into
ret
nop
adc
dec
inc
dec
xor
pop
popf
iret
cld
adc
rorb
cltd
mov
pop
cs
into
inc
bound
and
rol
aam
push
sbb
cmp
aas
pop
push
push
jle
sbb
idivl
cmp
mov
push
mov
out
lods
cmp
sub
mov
leave
fwait
lahf
iret
and
and
jmp
cmp
mov
hlt
dec
jg
bound
cld
sbb
pop
mov
jecxz
mov
repnz
out
inc
std
xor
hlt
lcall
mov
cli
mov
stos
pop
xchg
or
dec
fcoml
iret
cmp
xor
testl
lret
adc
dec
pop
sub
mov
in
outsl
and
xor
mov
fnstcw
shr
mov
pop
fdivrs
outsl
and
pop
aas
xchg
fs
cmp
fwait
js
out
or
jns
lods
xor
mov
mov
dec
stos
push
adcl
insb
or
ja
lahf
xchg
jmp
pop
ret
test
cmp
sbb
xlat
xchg
aam
jl
ljmp
movsb
push
ds
push
sub
dec
pushl
cld
pop
repnz
call
inc
mov
xlat
and
imul
mov
xor
insb
gs
mov
lcall
insb
mov
lds
adc
pop
or
out
stc
inc
sarl
stos
mov
insl
inc
les
out
xchg
xlat
getsec
sbb
and
imul
scas
jno
sbb
fbld
xlat
push
orl
test
aad
pop
mov
xor
xchg
dec
inc
aas
sahf
int3
mov
cmp
cltd
scas
push
pop
cmp
or
ret
faddl
addr16
cmp
in
mov
add
negb
inc
xor
xor
add
mov
or
dec
mov
jns
jo
ljmp
inc
andl
imul
inc
mov
or
fwait
mov
movsl
sbbb
adc
push
mov
fcomp
insb
js
cmp
test
adc
pop
jl
adc
mov
sub
inc
push
or
and
inc
and
mov
sbb
xor
cmp
adc
and
inc
rorl
sbb
movl
dec
xor
popa
stos
repnz
inc
push
inc
push
xchg
mov
outsl
xorl
sbb
js
sbb
insl
xchg
aaa
pop
call
cmp
sbb
sbb
pop
pop
push
dec
dec
or
jl
push
cmc
gs
test
in
scas
outsb
test
ja
push
jne
sub
add
sbb
sbbl
inc
cmpsb
jne
leave
jne
jl
inc
sub
stos
push
add
cmc
aad
stos
les
xlat
pop
pop
test
std
lds
cmpsb
arpl
xchg
cmp
out
mov
push
jg
pusha
cmpsl
ret
imul
and
ss
loop
lods
fistpl
shlb
push
mov
aam
jecxz
pushf
loopne
imul
xorl
mov
aam
rcrl
fisubl
xchg
sbb
jae
das
ficomps
push
std
sub
add
addr16
fildl
xor
pop
adc
or
mov
out
mov
nop
mov
sbb
jge
mov
stc
mov
push
lcall
enter
pushf
mov
xchg
jge
adc
das
fdiv
in
sbb
in
das
es
push
xor
jge
sub
mov
mov
sbb
mov
jg
aad
inc
dec
xor
fildll
jl
and
adc
rcl
and
and
xchg
xlat
or
mov
loop
mov
jbe
clc
scas
sbb
push
pop
shll
pop
nop
mov
jmp
bound
xor
sub
repz
scas
jg
mov
aam
cmc
dec
jae
js
das
lea
jbe
push
bound
cmc
testw
in
xlat
lcall
cmpsb
push
popa
out
nop
xchg
incb
iret
out
mov
pop
pop
push
push
or
xor
imul
jecxz
push
insb
push
sbbl
sbb
loope
inc
add
icebp
iret
adc
testb
and
movups
pop
insb
mov
je
pop
pop
imul
loop
jnp
sub
sbb
dec
xchg
dec
popa
xor
jae
or
ret
xchg
mov
cmp
push
data16
mov
mov
pop
cld
ss
ficoms
fisubl
data16
xchg
sub
lock
mov
jmp
ja
adc
adc
lods
jo
jbe
pop
fwait
aam
loope
xchg
or
shlb
imull
sbb
cmp
inc
in
add
cmp
pusha
outsl
test
mov
mov
cmpsb
adc
gs
add
push
inc
inc
int3
sbb
dec
flds
sbbl
pushf
jmp
cld
sub
sub
jbe
xchg
mov
lea
sub
dec
inc
inc
mov
jp
fldenv
push
scas
fimull
aaa
scas
fidivrl
sbbb
lock
mov
sub
sub
and
and
iret
lock
arpl
inc
push
in
sub
push
add
jbe
pop
imul
outsb
into
leave
jns
fldl
addb
inc
cwtl
xchg
cmpl
jbe
aas
imull
test
push
test
iret
xchg
mov
and
lcall
or
lea
repz
mull
in
scas
outsb
jmp
pop
jg
fists
xchg
jae
bound
sub
pop
inc
cmp
lahf
pop
stos
ds
jb
pushf
pushf
imulb
pop
or
jle
popa
push
fcom
cmp
aad
push
imul
sbb
or
std
cmpsb
into
inc
out
xorl
jmp
or
outsl
pop
pop
pop
cmp
sub
andl
sub
xchg
mov
gs
pushf
outsb
imul
and
cltd
dec
addr16
stc
decl
aad
xchg
loope
inc
repz
lcall
pop
icebp
xlat
adc
aas
pop
push
movsl
inc
add
pop
mov
mov
in
jecxz
xchg
mov
pusha
cmp
push
outsb
xchg
pusha
sub
jno
push
sti
fldenv
jp
orl
sbb
mov
mov
movsl
ret
das
xor
sub
stos
fadd
jno
sub
repnz
cmpsl
popf
scas
sub
mulb
jp
or
inc
mov
lods
loop
xor
sub
adc
in
jns
ds
inc
test
call
or
add
sub
std
mov
mov
pop
in
inc
jno
mov
pop
and
pop
sub
and
jl
cmp
insb
xchg
arpl
add
adc
xchg
test
iret
aas
inc
imul
push
pop
xchg
mov
xchg
mov
pop
test
sub
xchg
xor
leave
xchg
aad
jmp
or
cld
mov
sti
pop
icebp
pop
push
xchg
insb
mov
push
mov
fidivrl
add
cmovne
pusha
call
movsl
std
daa
les
mov
lea
or
mov
outsl
aam
xchg
xchg
leave
mov
or
fildll
call
inc
sub
stos
push
lods
jne
sbb
and
ljmp
inc
dec
outsb
xor
inc
iret
cmp
lods
lret
cmp
pushl
repz
mov
or
jge
adc
mov
or
filds
jle
fdivr
dec
rcr
es
push
cwtl
mov
call
cmpsl
test
repnz
loope
int
jmp
lods
cmpsl
cmp
test
mov
xchg
pusha
mov
ret
in
or
jg
in
cmp
idiv
mov
or
mov
pop
aam
push
jb
fwait
shl
icebp
pushf
mov
iret
xchg
pop
shlb
lret
es
inc
andl
push
ljmp
insl
out
shl
jle,pt
stc
xor
fimull
pop
push
mov
in
aaa
add
push
jns
test
mov
mov
fs
shlb
pusha
pusha
cli
inc
dec
iret
rcrb
and
loop
stos
inc
push
dec
enter
ja
push
or
jp
push
repnz
fisubs
mov
add
mov
pusha
pop
lods
cmpb
cmpb
aam
cmpsb
or
lods
aam
sbb
shll
aam
bound
fisttpll
push
xorb
repnz
test
movsb
hlt
and
sbb
add
in
mov
inc
data16
es
stc
loopne
jbe
scas
adc
jmp
xchg
mov
movsb
les
scas
push
es
sbb
jne
shll
repz
call
push
xchg
out
jge
sbb
dec
jo
xchg
mov
xorl
xchg
add
scas
inc
mov
xchg
bound
xchg
icebp
and
mov
dec
jg
push
jb
ja
mov
stos
sub
fcmovb
mov
rcl
xchg
mov
mov
dec
out
jbe
rorl
cmpsb
jno
adc
insb
stos
arpl
iret
mov
mov
mov
push
xchg
test
xchg
mov
mov
cmp
mov
xchg
xor
xchg
mov
jge
or
xlat
sahf
sbb
push
mov
mov
das
cltd
lods
in
ds
insb
mov
mov
add
jp
fisttpll
fmul
inc
cli
inc
mov
sahf
xchg
aad
mov
popf
xor
dec
clc
fisubl
dec
out
inc
pop
xor
aad
insl
outsb
das
adc
sbb
in
inc
xchg
jbe
mov
sbb
push
cmpsl
mov
and
xor
call
jb
xchg
call
fstp
pop
arpl
out
psraw
jb
push
es
inc
ja
fimull
push
stos
jnp
cltd
pop
cmp
jmp
hlt
xor
sub
ret
adc
shr
adc
pop
sbb
iret
sub
aaa
adc
rcrl
cltd
out
dec
fcoms
inc
adc
icebp
lahf
shrb
fisttpl
sbb
int3
je
int
and
nop
cmp
outsl
out
adc
addr16
and
outsl
dec
cld
mov
stc
bnd
imul
insl
push
lcall
std
mov
sahf
jne
cltd
cwtl
lods
lock
cwtl
dec
mov
inc
mov
lahf
ja
and
inc
daa
pushf
shlb
roll
add
out
adc
iret
lea
mov
repz
mov
enter
sbbl
test
adc
fdivp
repz
xor
cs
in
mov
aaa
out
cld
or
dec
or
call
iret
les
aad
rorb
jge
fidivs
stos
cmp
ss
in
xor
add
inc
int3
xlat
dec
jecxz
push
push
pop
sbb
mov
xorb
pushf
xchg
cwtl
dec
push
xor
push
fdivr
out
add
mov
and
dec
and
mov
imul
gs
les
je
jecxz
push
ret
and
pop
push
insl
pop
fwait
loope
sbb
out
push
jmp
std
adc
inc
lret
adc
repz
bound
rolb
cltd
in
cmpsl
xchg
or
sti
insb
sahf
inc
setae
shr
mov
push
sub
xor
xchg
mov
test
loopne
insb
jge
cmp
fisubrs
inc
popf
dec
sbb
lahf
cmc
pusha
outsb
int3
aad
mov
das
pop
xchg
adc
imul
inc
fcomps
or
inc
xor
and
ja
cmpsl
mov
xlat
inc
inc
negl
into
add
aas
jnp
dec
mov
mov
arpl
outsl
lods
adc
inc
sbb
in
ljmp
and
jecxz
dec
sbb
xchg
ljmp
sbb
repnz
jp
test
or
push
push
mov
popa
mov
dec
dec
mov
lahf
rclb
jge
push
sub
mov
out
dec
push
and
mov
pop
mov
mov
mov
lahf
mov
dec
fildll
sti
xchg
sbb
int
mov
loop
dec
jle
xchg
adc
pop
test
and
inc
jae
aad
cmp
popf
pushf
jbe
jb
xchg
call
or
cwtl
shrb
push
cli
js
and
aam
xchg
lea
ds
sbb
add
data16
push
sbb
mov
loopne
mov
push
mov
mov
dec
mov
bound
pop
lea
mov
in
add
mov
adc
adc
fbld
add
xor
xor
xlat
or
push
sti
adc
push
test
arpl
hlt
movb
xchg
int
pop
dec
es
ret
cmp
jle
push
int3
scas
rclb
mov
fadds
inc
xor
js
addl
scas
jg
out
stos
jne
sub
dec
sarl
outsl
push
repz
movsl
test
xchg
lret
movsb
jecxz
ja
xchg
outsl
jno
fcmovb
cmp
mov
in
inc
xchg
push
inc
mov
imul
cs
jmp
repnz
lahf
push
add
sub
fnstenv
sti
aaa
mov
cs
xor
lcall
push
iret
cmp
out
test
lods
mov
xchg
lock
mov
push
add
movsb
neg
popa
lret
jb
fbstp
aas
adc
outsb
int
repnz
sbb
ljmp
sti
ds
insb
pop
sub
icebp
scas
xchg
mov
dec
pop
sbbl
xchg
popa
sahf
fimull
mov
jns
xor
imul
and
lahf
fsubs
push
insl
lahf
dec
dec
jnp
std
mov
leave
inc
mov
lret
outsl
mov
jmp
shl
xchg
into
jbe
pop
pop
outsl
lds
insb
aad
repnz
adc
das
cli
mov
mov
mov
or
sbb
jo
push
daa
mov
cmc
je
xor
stc
pop
push
xor
sub
xchg
aad
adc
adc
push
hlt
dec
xchg
int3
mov
leave
subb
out
cmc
cli
inc
cmpsl
dec
nop
push
sub
loop
mov
enter
scas
mov
notb
xor
loop
pushf
gs
out
lods
insl
cmp
dec
xor
lods
out
mov
inc
or
movsb
push
push
cs
jecxz
out
sub
mov
pop
pop
subb
cmc
add
push
sub
je
dec
sbb
push
sarb
inc
cmp
pop
pop
add
enter
sub
push
cmpb
lahf
arpl
push
dec
aad
test
out
push
movsb
incl
outsb
out
ljmp
sbb
mov
lahf
out
xchg
cltd
xchg
adc
inc
ss
adc
js
fistpll
sbb
pop
cmp
ret
jp
lock
dec
mov
std
mov
add
add
mov
iret
lcall
mov
mov
mov
mov
xlat
jae
lret
in
xor
les
lret
fs
cltd
insl
andl
sub
cmp
ss
nop
pop
scas
mov
and
cmp
sbbl
loope
lea
cmp
je
jge
sti
shl
and
push
adc
mov
cmp
mov
je
inc
mov
aam
fcomps
adcb
out
pushf
sub
push
inc
clc
popf
jb
in
jl
jbe
adc
xchg
icebp
mov
pop
iret
mov
js
aam
push
dec
enter
jle
into
outsl
or
lret
push
ss
pop
add
push
mov
xor
scas
lods
hlt
hlt
mov
ja
pop
test
test
fcmovu
das
dec
pop
enter
push
aaa
push
arpl
neg
in
sbb
ss
jle
movl
orl
out
out
fiaddl
rclb
insb
add
insl
or
ljmp
cmp
negb
scas
sbb
xor
mov
push
pop
mov
push
repz
adc
stc
or
cmpsl
ficoml
lods
push
popf
out
sbb
divb
ret
jp
imul
jecxz
xlat
push
mov
cmpl
or
mov
sbb
decb
aam
out
ret
sbb
add
pop
and
add
in
je
adc
loopne
sub
movsl
mov
and
sahf
push
and
sub
imul
je
jp
add
call
ljmp
push
jl
push
pop
mov
es
shll
nop
jnp
fldl
shrb
out
sub
outsb
je
leave
cmc
xchg
lods
ja
cwtl
cmp
and
rol
ljmp
and
mov
rcl
adc
dec
mov
mov
mov
mov
mov
popa
adc
stos
or
ljmp
lods
pop
xor
or
in
inc
mov
push
ret
mov
test
in
push
dec
pop
bound
cld
mov
sbb
inc
mov
int3
push
cwtl
dec
jnp
cs
mov
or
mov
cld
gs
pop
xor
push
xor
adc
push
movsl
mov
cmpsb
js
mov
mov
imulb
fimuls
subb
mov
adcl
add
xorl
jb
jmp
dec
test
and
stc
mov
mov
cmpsl
dec
mov
xchg
sarl
adc
dec
stos
mov
mov
std
mov
or
lds
adc
dec
jae
adc
loope
mov
pop
mov
div
pop
jge
out
push
cmp
call
cmp
adc
push
scas
movsb
xchg
sahf
aaa
loopne
mov
rep
int
clc
popa
notb
cli
dec
xor
push
shrl
test
out
lea
inc
add
cmp
or
test
adc
xchg
inc
call
mov
inc
jns
je
hlt
mov
add
insb
sub
adc
ss
sbb
shr
divl
push
bound
fisttps
test
sub
call
cld
fstps
pop
mov
lea
fstps
push
dec
xchg
cmc
mov
pop
das
iret
lcall
arpl
sbb
call
cmpsl
mov
imul
or
mov
or
int
jl
jp
repz
ja
lock
out
xchg
sub
or
enter
push
jnp
fistl
test
inc
movsl
je
daa
sub
loop
addr16
cs
arpl
repnz
sti
das
in
aaa
jg
outsl
mov
sti
inc
pop
xchg
fbld
jo
shll
pop
push
out
dec
xor
mov
and
mov
xor
jbe
xchg
fimuls
mov
jb
and
adc
addl
adc
cwtl
stc
and
push
addr16
add
leave
icebp
add
ljmp
shlb
daa
sbb
pushf
out
mov
mov
jge
data16
cmp
pop
nop
dec
jns
mov
xlat
test
dec
aas
push
hlt
das
pop
ret
xchg
mov
sbb
push
sub
dec
stc
cmp
sub
scas
push
pop
sbbb
testb
aad
cmpsb
pop
rclb
add
lea
mov
add
ret
or
inc
inc
inc
sbb
mov
mov
insb
push
in
in
loope
aaa
fwait
pop
inc
xchg
mov
xchg
inc
sti
rolb
or
fs
sub
inc
cmp
mov
sbb
add
jne
call
fsubrl
cli
or
ret
mov
and
dec
ret
cmpsl
data16
fildll
jmp
inc
rorl
rorb
sti
inc
pop
dec
mov
pop
dec
gs
jns
cmp
movsb
adc
fcomps
mov
loopne
gs
ja
lahf
jl
pop
cmp
imul
cltd
sub
add
stos
fwait
shll
shrb
pop
mov
nop
frstor
xchg
jmp
movsl
fistps
inc
and
loop
loop,pn
cmpsl
fcomp
adc
lods
xchg
mov
add
add
ss
arpl
ficoms
inc
cmp
loopne
adc
cmc
mov
leave
mov
xchg
add
inc
cli
popa
cmpb
xchg
mov
pop
fcompl
inc
mov
cmp
leave
mov
dec
mov
xchg
lahf
adc
cmp
push
into
bound
in
dec
arpl
fwait
xchg
shrb
pop
mov
sbb
into
sti
xlat
or
nop
mov
push
rorb
sbb
xchg
jge
scas
testb
sahf
or
mov
pop
test
jl
mov
xlat
push
xchg
adc
fcmovbe
rclb
out
sarl
ss
rcll
out
xor
sub
sbb
dec
lcall
jnp
sahf
and
inc
stos
movsl
cli
shl
popf
sbb
lods
sbb
mov
popa
inc
ret
leave
aad
cltd
rorb
scas
insl
cltd
add
xor
jl
inc
jecxz
pop
jp
lahf
xor
xchg
mov
push
xor
std
pusha
adc
subb
daa
ja
xchg
cli
cmp
and
sub
add
daa
rcll
sbb
stos
mov
test
clc
int
add
int3
clc
mov
popa
iret
mov
mov
icebp
ficompl
aaa
hlt
fwait
cmp
mov
pop
sub
cmp
loop
cmpsb
and
in
mov
and
lods
addb
fisubl
mov
cmc
adc
insb
hlt
pop
test
ja
pop
cli
xchg
fcmovu
in
mov
std
jecxz
lods
icebp
clc
inc
mov
outsl
sub
jp
enter
ds
mov
or
sub
add
jo
mov
push
gs
pop
add
and
push
add
jle
sbb
sbb
lahf
mov
nop
mov
mov
rcrl
insb
arpl
xor
stos
dec
test
movsl
adc
iret
jae
scas
xchg
push
negb
movsb
sti
and
rorb
cmp
std
jne
addr16
in
add
insl
sbb
mov
push
daa
pop
sbb
addl
aaa
sbb
and
int
xchg
enter
add
inc
aam
jae
fsubl
scas
cltd
sbb
jge
stos
data16
gs
pop
adc
sbb
xor
adc
jae
xor
add
mov
xchg
fxtract
xor
jl
loope
in
xlat
push
scas
subb
xorl
bnd
jmp
adc
and
push
pop
push
gs
negb
push
xor
ja
jecxz
in
inc
dec
repnz
test
aad
ret
sti
xchg
lret
or
lock
inc
sbb
aad
les
jbe
mov
in
inc
ljmp
insb
push
ljmp
loop
dec
mov
lock
hlt
push
lret
cltd
mov
add
sbb
in
sub
add
in
hlt
and
in
or
sbb
pop
cmp
ficoml
jp
stos
xor
aaa
mov
cli
gs
in
ret
nop
mov
sahf
inc
lds
ror
inc
insl
ss
pop
sbb
add
sti
mov
lods
stos
pop
je
fs
ret
pop
jb
aam
push
mov
and
mov
movsl
daa
mov
ljmp
sbb
aas
adc
sub
insb
xor
std
dec
sub
ljmp
arpl
cmp
push
adc
adc
orl
mov
cmp
fbld
mov
xor
cmp
adc
adc
ss
icebp
sub
cmp
add
mov
imul
jnp
dec
inc
dec
xchg
cmc
cld
lret
lcall
and
mov
sbb
sub
cld
popf
lods
popf
and
call
ret
clc
jnp
adc
out
push
addb
sahf
jnp
bnd
scas
push
rcrb
in
inc
es
xchg
mov
dec
xor
xorb
ret
cwtl
or
into
je
mov
repz
xor
or
call
jne
loop
mov
int3
cmpsb
jmp
outsl
dec
dec
into
cmp
pushf
lret
cmp
lcall
mov
fwait
add
inc
lods
es
subl
incb
cmpsl
cmpsb
ljmp
fadds
loop
popf
mov
or
insb
adc
mov
mov
xchg
mov
and
fld
das
rorb
xchg
int3
pushf
lret
lcall
or
nop
mov
or
stc
add
outsl
xchg
fcom
inc
cmp
jge
jge
pushf
adc
push
mov
adcb
fcmovu
lahf
adc
std
bound
mov
push
push
pop
pop
dec
cwtl
inc
mov
xor
sub
cmp
xchg
or
push
cmc
mov
jnp
pop
xchg
cmp
ret
notb
stos
scas
mov
xor
insb
sub
push
mov
nop
mov
and
cmpsb
es
adc
jcxz
add
push
aas
loopne
dec
das
jnp
inc
cltd
in
lods
mov
or
or
mov
mov
sbb
out
ss
or
cs
lods
and
dec
xchg
dec
cli
xchg
call
adc
jae
pop
ds
xchg
inc
in
pop
adc
sub
and
mov
arpl
add
ficoms
inc
or
mov
sbb
out
and
in
jnp
push
xchg
pushf
lret
fs
dec
invd
cwtl
sbb
je
jne
pop
in
push
dec
sub
lods
inc
ds
xor
rcr
xchg
rolb
cmc
sub
stos
call
mov
jg
pop
movsl
aad
xor
dec
inc
push
cmp
out
pusha
dec
add
lods
cmpsl
dec
sar
ljmp
xchg
jb
in
cmp
push
inc
loop
push
cmp
inc
push
adc
cmp
out
push
jp
cs
fdiv
sub
dec
jp
jnp
mov
hlt
mov
xchg
aaa
xchg
dec
inc
jns
push
adc
clc
xchg
rol
movsb
add
test
dec
mov
loope
jg
adc
xor
pop
jmp
setb
out
addr16
mov
in
out
popa
dec
notl
call
icebp
jge
mov
add
cld
aad
cmpsb
pop
arpl
insb
push
lret
fisubs
mov
jg
scas
push
enter
test
push
insl
lcall
inc
es
adc
dec
jge
lock
mov
adc
das
jmp
push
sbb
sub
mov
jbe
inc
std
xchg
inc
add
repz
movsw
or
sbb
or
fstpt
mov
xor
xchg
cli
jl
popf
jmp
and
adc
sub
pop
aaa
pop
fsubl
pop
cmpsl
add
dec
xchg
push
shll
rol
mov
pushf
push
push
stos
mov
in
add
jl
mov
dec
cmpl
out
dec
pop
xchg
das
xor
es
in
scas
repz
mov
call
dec
xor
inc
inc
mov
jp
inc
mov
rolb
xor
adc
test
roll
call
lret
addr16
scas
jl
das
jg
ror
jb
call
stc
mov
lcall
and
inc
ret
adc
xchg
and
sub
xchg
js
add
outsb
test
jb
sbb
cmp
ja
incl
mov
mov
mov
cs
xchg
sbb
sbb
inc
outsb
test
adc
push
pop
inc
pop
fimuls
mov
cmpsl
jle
sub
insb
out
lret
and
sub
cmpl
xchg
jbe
decl
inc
mov
inc
dec
ret
neg
dec
cmp
aas
mov
mov
sub
or
pushf
cmp
call
aaa
jae
jl
pop
lret
mov
rcrl
inc
mov
jb
insb
push
add
fwait
mov
jno
jmp
jne
int
xor
insb
negl
mov
push
inc
cmp
mov
push
and
sub
adc
test
enter
iret
sti
popf
popa
sbb
or
add
mov
stos
cmp
dec
ljmp
outsb
sub
cmc
shlb
lods
adc
pop
and
popf
ljmp
inc
hlt
das
push
sbb
pop
sub
clc
frstor
nop
push
movsb
loop
pushl
cmp
push
std
iret
add
jp
loope
leave
mov
mov
push
dec
outsl
imul
jbe
test
mov
sbb
ds
mov
cmpl
pop
dec
ljmp
jmp
hlt
adc
lahf
xlat
sarl
in
pop
xchg
push
call
outsl
cmpl
scas
insl
test
pop
mov
mov
sub
pop
mov
cmp
xor
adc
push
sbbb
adc
add
xchg
aad
mov
or
icebp
cmp
add
outsb
mov
test
inc
lock
sub
mov
lea
inc
sahf
cltd
sub
mov
add
jno
sbb
adc
xchg
jnp
cmp
push
les
rcrl
add
xchg
xor
and
jo
enter
lret
into
ljmp
jge
mov
mov
cmp
lret
mov
xchg
fildl
mov
fwait
push
dec
xor
aas
aas
hlt
fisubs
faddl
sub
sti
xchg
dec
xor
mov
cli
repz
ficoms
xor
push
cmp
fisttpl
fisubs
lcall
mov
cmp
adc
je
aaa
push
sub
xor
orb
les
movsb
or
addr16
jge
mov
jno
xchg
pop
adc
es
add
popf
mov
inc
popf
shll
ret
daa
mov
sub
mov
lods
cmp
xchg
lods
sbb
xchg
mov
cltd
mov
sbb
cs
add
mov
movsl
stos
jl
pop
lret
jge
pop
cmp
inc
mov
aaa
inc
xor
and
insl
stos
jmp
adc
sti
pop
xor
pop
shrl
mov
sbbl
mov
or
jge
and
add
cmpsb
mov
xor
jg
ret
test
mov
adc
popa
iret
mov
cs
inc
shlb
push
hlt
lcall
jbe
test
and
lock
and
xor
inc
mov
pusha
repz
sbb
cmp
pop
and
or
or
aam
sub
sub
dec
rolb
gs
shlb
push
gs
outsl
pop
sub
popl
push
pop
jb
aaa
and
inc
js
pop
adc
mov
cmp
out
push
cs
push
mov
movsb
test
pop
movsb
or
aas
or
cmp
add
jns
rcrl
fs
lea
push
mov
mov
mov
sbb
sbb
sbb
cmp
sahf
cld
test
int3
add
mov
cmpsl
dec
cmpsb
push
jne
adc
jno
push
mov
hlt
mov
xor
lcall
test
ds
and
notl
mov
pop
mov
pop
push
sti
out
push
out
pop
lahf
sbb
cs
add
iret
mov
scas
add
pop
pop
xor
xchg
xchg
in
and
jns
or
dec
xor
adc
mov
lret
cmp
lahf
cmc
ret
mov
push
sbb
xchg
fiadds
lock
int3
clc
std
out
cmp
movsb
xchg
adc
jne
add
pop
jl
jmp
mov
out
cmp
mov
jns
add
jb
lret
push
fisttps
xor
mov
insb
loopne
xchg
sub
ret
jp
stos
lret
fstl
lock
mov
sbb
gs
repz
sbb
xchg
add
clc
xchg
sti
or
clc
rorl
mull
aas
jge
in
dec
cmp
xor
xchg
ret
shll
dec
jo
adc
mov
dec
arpl
fcomps
int3
adc
leave
xor
stos
imul
mov
fistpll
ret
jecxz
sbb
incb
sub
incb
dec
mov
push
mov
dec
add
lods
gs
mov
mov
xchg
dec
lahf
in
subb
into
rorl
dec
rcrl
adc
cmp
sub
nop
loop
ss
adc
cmpsl
add
lret
push
sti
dec
inc
test
mov
dec
in
cmp
ret
add
xchg
jmp
cmp
and
lahf
movsl
aam
ljmp
pop
addb
out
or
fcmovu
xlat
out
jo
repnz
loop
dec
mov
aad
lret
daa
sbb
xchg
mov
aad
xchg
jp
add
xchg
xchg
jb
add
add
int
dec
adc
xor
clc
add
ljmp
pop
xchg
js
arpl
add
sbb
push
mul
out
and
push
sar
cmp
sbb
loopne
fs
fwait
leave
test
jmp
pop
xor
push
adcb
cltd
cld
adc
jge
mov
in
mov
mov
push
add
arpl
sbb
push
mov
cbtw
jo
leave
es
mov
dec
jb
xchg
sbb
jp
icebp
cmp
mov
sbb
jmp
les
pop
mov
pop
sbb
testl
das
jb
cmp
sbb
test
mov
mov
loope
lods
xor
in
mov
mov
shlb
shll
aas
sub
mov
add
push
and
sarl
aad
stos
pop
inc
jns
or
call
pop
dec
insl
xor
cmp
fnstcw
dec
movsl
mov
nop
sbb
rclb
aam
mov
pop
xorb
pop
je
add
inc
mov
outsb
pop
fsubl
inc
lods
add
adcl
dec
outsl
mov
aam
cmpsl
lock
and
cmp
in
mov
mov
adc
push
cld
push
fcmovne
inc
aaa
mov
add
icebp
out
jl
adc
xchg
push
mov
dec
sub
orb
outsb
fidivl
xor
push
jecxz
xchg
cltd
dec
or
leave
inc
imul
xor
lods
add
ret
mov
scas
mov
sti
sbb
adc
rcrl
pop
ss
cmp
xorps
mov
mov
or
dec
clc
mov
sub
sbbb
ds
mov
push
jecxz
mov
mov
test
sbb
sub
fcoml
mov
test
or
xor
and
mov
ljmp
int
das
shrb
xchg
add
shl
pusha
mov
cmp
mov
testb
mulb
iret
xchg
inc
out
leave
cmpsb
jnp
add
cmp
stc
mov
inc
dec
loopne
adc
movzwl
inc
push
and
jle
out
sub
ja
insl
and
push
push
jb
mov
pop
mov
fldcw
in
push
push
ret
push
fwait
pop
mov
jne
stos
repz
andb
popf
push
xor
dec
xor
fidivrl
cmp
pop
inc
fldl
ss
jl
fwait
inc
sbb
imul
mov
inc
push
push
inc
mov
in
scas
mov
pop
mov
aad
into
adc
pop
je
cwtl
pop
popa
and
push
rol
push
jnp
inc
cmp
dec
add
dec
loopne
xchg
pushf
add
cmp
inc
pminsw
dec
adc
pop
icebp
pusha
sbb
push
fwait
add
mov
adc
outsb
mov
push
and
jb
lods
dec
xlat
ja
sub
aad
je
insb
push
daa
push
cmp
push
adc
sub
lods
adc
and
or
mov
aad
addb
sbb
ja
test
and
push
jb
adc
xchg
lcall
ljmp
push
int
movsl
rorb
out
push
icebp
sbb
lret
jb
mov
dec
sarl
xlat
add
dec
cmpsl
jmp
call
cltd
adc
push
lods
nop
jo
cmp
push
cwtl
adc
scas
int3
pop
aaa
jecxz
dec
push
xlat
lds
mov
inc
adc
inc
push
ficoml
dec
insb
mov
orl
imul
xor
arpl
in
mov
adc
cld
rcl
cli
movsl
jmp
sahf
repz
inc
test
test
inc
cli
mov
in
test
fwait
test
dec
fstl
sub
je
stc
mov
xchg
adc
scas
mov
mov
mov
sbb
in
nop
into
pop
subl
sbb
xor
push
sub
rclb
xor
push
fsubs
sbb
repz
pop
insl
mov
out
lcall
dec
iret
imul
cs
mov
mov
jne
arpl
addl
push
dec
sbb
les
mov
in
lea
push
cmp
add
add
movsl
int
mov
mov
sarb
fadd
aaa
out
adc
and
jmp
lahf
cmp
dec
negb
jg
dec
outsb
fsub
cmpsb
push
lret
out
jnp
add
imul
out
xor
mov
fs
mov
popl
into
push
xchg
mov
xor
data16
jl
pop
cmp
negl
mov
or
das
mov
cmc
jb
je
dec
mov
inc
and
mov
jne
pop
or
and
mov
cmp
pop
mov
das
jg
mov
xorl
inc
imulb
shr
adc
sbb
cmp
mov
jbe
or
hlt
inc
sbb
push
fists
xchg
cmp
jge
cmpsb
inc
and
lret
hlt
mov
das
cmp
push
xor
or
push
xchg
cs
mov
mov
adc
inc
clc
shrb
and
push
hlt
dec
pop
cmc
ljmp
jbe
dec
cmc
in
cmp
lea
out
mov
sti
xchg
cwtl
push
addr16
push
push
mov
mov
adc
adc
adc
xor
mulb
mov
push
xor
sbb
outsl
popf
or
lock
xor
cld
xlat
push
adcb
xor
or
lcall
subb
lcall
push
and
cmp
dec
jae
mov
or
add
rcrb
jecxz
inc
cmpsb
mov
mov
dec
add
imul
fnstsw
pop
lea
fcoms
xchg
daa
mov
ffreep
mov
jns
sub
call
out
loope
xor
aas
dec
and
cwtl
inc
stos
or
xor
xchg
out
sub
lret
or
out
mov
add
pop
push
cmp
xchg
lods
lret
lds
sbb
rolb
mov
push
xlat
sub
sub
inc
xor
shlb
dec
jmp
pop
dec
push
sbb
sbb
mov
xor
push
adc
sub
stc
test
ss
pop
data16
push
cmpsb
daa
jbe
jno
add
cli
test
pop
add
mov
std
ror
cld
fcmovne
or
mov
sbb
dec
mov
dec
addr16
sbb
adcl
leave
jecxz
sbbb
mov
pop
ret
sbb
aam
ficompl
int3
mov
dec
jle
clc
sbb
and
mov
dec
push
jns
ret
decb
sti
and
dec
mov
int
popl
in
aam
xor
leave
arpl
cmp
or
add
fwait
jbe
or
sbb
sahf
gs
mov
fwait
aam
scas
rcl
lret
adc
sbb
test
mov
sub
sub
mov
and
xor
sbb
data16
pextrw
ss
pop
fcmovnu
jb
shlb
mov
mov
cmp
mov
ret
sbb
dec
sub
dec
cltd
cwtl
sub
in
sub
dec
push
add
hlt
fisubs
cmpsl
sub
loop
sbb
cwtl
int3
int
out
aas
lret
shll
cmp
cmp
rcr
inc
ds
adc
rol
stos
push
cmc
pop
mov
pop
sbb
in
roll
mov
dec
push
pop
rcr
das
call
lahf
cmp
test
in
das
push
ret
pop
cli
sub
pop
add
xchg
dec
jp
adc
lcall
sbb
pop
jmp
ja
push
xchg
or
es
mov
push
lds
xor
inc
es
push
sub
sub
inc
add
repnz
fwait
mov
cli
xchg
lcall
call
sbb
pop
rcrb
mov
push
xchg
pop
mov
imul
dec
repnz
xchg
and
dec
aaa
mov
fidivrs
insb
sti
outsl
clc
mov
mov
push
mov
sub
cmp
lahf
pusha
pusha
adcb
cmp
cmpsl
dec
mov
xchg
icebp
sub
ficompl
push
push
int
nop
subb
ret
lret
repnz
add
push
mov
pop
sub
push
je
das
mov
incb
mov
hlt
jp
push
inc
sub
out
cs
adc
lods
xchg
pop
jge
sbbb
mov
imul
out
xchg
sahf
inc
cmp
call
add
xor
jae
mulb
dec
cli
pop
enter
mov
nop
arpl
nop
jbe
orl
test
adc
aas
or
push
fidivs
mov
pushf
cwtl
push
ss
add
mov
ret
ret
xchg
mov
lret
fwait
fwait
sub
repnz
pop
adc
rol
fsubr
pop
bound
nop
jp
mov
sarb
dec
push
sbb
push
incl
xchg
adc
enter
push
and
push
mov
dec
repz
cmp
or
inc
mov
das
pmuludq
push
mov
roll
mov
mov
push
push
in
xchg
mov
cmp
mov
inc
add
mov
outsl
popf
or
fs
and
insb
xor
movl
inc
cmpsb
cmp
decl
imul
push
xor
mov
sbb
or
out
cmpsl
pop
jg
adc
fsubs
lods
incl
inc
xchg
mov
inc
inc
lcall
jbe
cltd
addr16
cld
mov
sub
mov
test
mov
lock
fcoms
mov
and
nop
ja
adc
pusha
pop
imul
cmp
scas
scas
jg
xorb
test
pop
mov
lcall
dec
sarb
cmp
adc
add
popf
mov
mov
inc
push
ret
push
mov
adc
divl
iret
out
int3
cld
out
pop
lds
mov
js
lret
cmpsl
xor
mov
mov
cmp
test
inc
fiadds
mov
rcrb
fstl
xor
or
or
int3
test
icebp
lods
stos
call
or
adc
jbe
pop
lcall
data16
icebp
out
pop
jge
andb
sbb
mov
jns
inc
xchg
rcrl
enter
je
xor
insl
sub
jbe
inc
push
add
addr16
pop
daa
idivl
test
jmp
insl
rorl
dec
filds
add
pushf
cmpb
sbb
aad
mov
cmp
xlat
test
imul
imul
pop
outsb
test
arpl
imul
jmp
jns
jo
into
addr16
nop
scas
jno
mov
mov
sub
or
andb
sbb
sahf
adc
pop
out
adc
jecxz
ljmp
cmp
sti
adc
push
imul
sbb
cwtl
pushf
xor
gs
scas
addb
push
jno
daa
and
insl
fiaddl
lret
jae
loope
test
test
inc
clc
jo
div
vmwrite
sub
mov
repnz
xchg
and
mov
scas
xlat
or
jp
cmc
rcll
dec
adc
gs
xor
push
push
test
lods
xor
les
dec
lahf
pop
test
xlat
fcoms
scas
pop
lcall
fcompl
pop
rcl
push
cmpsl
aas
jnp
dec
jne
insb
leave
or
xor
mov
test
les
cmpsb
inc
mov
jo
mov
iret
pusha
add
mov
sub
cmpsb
loop
xor
mov
mov
flds
sbb
push
and
mov
cmpsl
movsl
xor
lea
scas
mov
adc
mov
test
sbb
inc
mov
in
push
xor
shrl
imul
or
sbb
shlb
cmp
out
inc
mov
fmuls
sub
mov
cmp
add
mov
std
inc
stc
adc
cmp
and
enter
addb
push
sbb
and
mov
arpl
cltd
jle
mov
enter
fld
jmp
rcrl
repz
ret
addr16
inc
mov
xchg
dec
xchg
cs
adc
dec
xchg
dec
stc
sbb
stos
test
aas
cwtl
popf
sub
xchg
loope
ret
andb
sub
mov
sahf
aaa
hlt
popf
pop
fisttpll
movb
xchg
jg
cmc
xchg
imul
enter
xor
cs
lcall
fwait
inc
dec
xlat
mov
clc
sub
int3
mov
xchg
fcoml
movl
cmpsb
rcl
dec
mov
ss
cli
xchg
jnp
add
dec
xor
jbe
inc
or
and
mov
inc
insl
xor
imul
mov
mov
add
xor
jbe
inc
insb
notl
leave
ja
mov
pop
mov
hlt
pop
stc
sub
xchg
fcompl
mov
cld
stc
cmp
sbb
adc
jae
jb
pop
cmp
dec
cli
lea
dec
out
ret
fldt
xchg
inc
sbbb
pop
sbb
push
test
out
cwtl
inc
jle
mov
add
scas
sub
pop
dec
jle
cmpsl
rclb
pop
fucomip
mov
ficomps
sub
xor
daa
push
in
ljmp
or
ret
sbb
addr16
push
call
loopne
in
sub
jno
pop
xchg
scas
dec
add
inc
add
or
jg
cmp
shlb
adc
rcrl
jae
dec
iret
lods
and
mov
or
cli
pop
in
xor
je
ret
arpl
ret
dec
popf
jle
xor
cltd
xor
xchg
mov
data16
cwtl
fwait
outsl
mov
sub
add
pop
xor
mov
sbb
and
sbb
cli
add
ret
cs
rcl
jmp
push
push
repz
xor
or
insb
enter
cltd
aam
or
push
pop
pop
lods
pushf
pushf
idivl
mov
cli
cld
jl
fdivs
pushl
adcl
pusha
mov
cmp
or
movb
mov
ljmp
shrl
lea
pop
sbb
push
out
loopne
jle
adc
inc
out
inc
mov
cmpsl
pcmpgtd
js
add
pop
inc
repz
inc
mov
jmp
mov
push
loope
pop
xlat
data16
sbb
jl
aas
insl
mov
cmp
xchg
add
push
push
pop
addl
shll
push
jge
or
xchg
jle
or
pop
sbb
cmp
adc
arpl
je
in
mov
orb
clc
addb
shll
insb
dec
jnp
and
or
je
stc
fcoms
xchg
xor
std
inc
testl
stos
xchg
loope
in
push
jle
cmp
push
add
subb
bnd
add
lea
cmc
fs
and
inc
popf
pop
and
repnz
scas
lret
cwtl
xchg
xor
sub
jo
push
clc
arpl
mov
cmp
insb
or
adc
stos
sub
inc
inc
ss
xor
out
test
pop
jmp
push
push
jbe
cwtl
adc
sbb
mov
mov
push
mov
scas
jae
jle
cmp
pop
idiv
push
and
sbb
dec
pop
out
pop
test
ret
pushf
in
insl
cmp
adc
testl
xor
or
das
mov
neg
ja
fs
sbb
sub
sbb
cld
fisttpl
fadd
cmp
stos
scas
je
leave
cmp
pop
cli
aaa
add
or
out
icebp
out
jb
sbb
mov
icebp
add
mov
test
jae
xchg
test
mov
addr16
push
ja
loopne
in
jne
repz
ret
in
lret
test
out
hlt
mov
fwait
inc
jb
xchg
pop
ds
and
xlat
loop
jbe
add
aas
xor
nop
pop
stos
aad
mov
in
rcll
pop
lods
pop
xchg
push
xchg
jecxz
adc
aaa
mov
imul
inc
sbb
inc
ror
scas
mov
xchg
push
shrb
dec
mov
inc
cmc
lcall
mov
scas
lcall
pop
cli
xchg
or
or
mov
jns
pushf
lea
dec
into
js
movsb
jne
arpl
sti
aas
or
cmp
jecxz
aad
and
dec
or
add
fsubr
pop
mov
pop
rcrl
jbe
jnp
sub
mov
js
in
xor
fwait
cmp
mov
jne
jge
fidivrl
jb
aam
addr16
gs
out
fldt
mov
mov
push
sbb
mov
or
pop
inc
sub
nop
mov
fstps
xchg
sub
out
cmpsb
push
adc
add
pop
mov
rcl
mov
nop
lret
imul
push
movsl
push
test
int3
enter
cmpsb
mov
push
cmp
jge
incb
scas
sub
movntq
cmp
or
jmp
into
cltd
testl
inc
mov
loop
jbe
push
jb
enter
sbb
push
ljmp
out
rcrb
popf
pop
cmp
sbb
stc
and
lods
or
pushf
or
mov
add
mov
mov
adc
xchg
mov
or
xor
adc
inc
scas
fidivrl
mov
sbb
sub
cli
dec
daa
sub
addr16
xor
fcomip
and
xchg
repnz
fldcw
cli
arpl
jns
and
hlt
xchg
cltd
enter
mov
mov
push
or
mov
jo
xchg
fwait
mov
jg
pop
mov
rolb
sbb
ss
lret
cwtl
into
icebp
fcoms
and
lock
stos
pusha
pop
inc
add
cmp
or
out
inc
pop
push
dec
fisubrs
cmc
jns
test
rcrl
or
push
aaa
ja
shl
sub
stc
mov
xor
cltd
loope
push
mov
aaa
jb
cld
push
pop
shlb
xor
sbb
stos
daa
lahf
or
stos
std
imull
fsubrs
nop
lret
in
sbb
push
jecxz
dec
lret
or
hlt
fdivs
stc
jb
xor
adc
out
inc
int3
and
dec
nop
bound
stos
sbb
sbb
xor
shlb
lock
in
ja
sarl
mov
lret
ret
lcall
int
push
xchg
xor
fs
shrb
jp
xchg
out
stc
inc
xchg
int
mov
dec
sbb
xor
sub
loope
adc
sti
adc
shll
mov
or
sub
jmp
lods
rol
ljmp
mov
enterw
hlt
cltd
push
lods
in
add
pop
into
movsb
mov
loopne
push
xchg
xor
imul
scas
arpl
mov
stos
lea
mov
dec
mul
gs
repz
cld
mov
mov
hlt
dec
jo
loopne
sub
adc
xchg
es
push
inc
stc
ret
xchg
jo
clc
push
mov
fcmovbe
mov
scas
inc
jb
mov
cli
or
insl
dec
popa
mov
sar
mov
andl
jb
sbb
fpatan
in
push
mov
test
js
mov
lret
and
dec
fildl
ret
stos
or
sbb
sbb
jo
mov
cmp
pop
mov
fwait
dec
sub
inc
movsl
adc
sub
mov
lods
jle
pop
push
lret
cmp
test
dec
mov
popa
gs
pop
mov
icebp
push
or
sub
dec
pushf
or
sub
ds
adc
in
and
out
push
dec
mov
or
cmpsl
xor
mov
out
loope
daa
jle
test
pop
jp
in
jmp
mov
movsb
cmp
insb
cmp
and
icebp
aam
sti
lret
cmp
shrb
adc
subb
clc
inc
xor
push
test
cmp
inc
pop
fs
pop
cmpsb
mov
add
sub
mov
subl
or
test
popa
push
jmp
aad
fs
insl
aam
add
mov
test
or
scas
pop
or
cmp
movsl
test
xchg
test
xchg
pextrw
outsb
or
push
sub
xchg
push
out
mov
outsl
es
push
rcrl
insl
shlb
das
aas
lock
xor
movsl
push
inc
outsb
cmp
fisubrl
cmp
scas
andl
push
jb
lds
xchg
gs
mov
jge
rcll
in
test
xchg
push
clc
daa
lret
inc
fwait
mov
loope
ret
jmp
dec
mov
dec
jmp
and
in
jo
je
sbb
cmc
jp
shl
loop
js
jl
or
icebp
xchg
loop
rolb
rorb
leave
pop
imulb
xor
jl
sahf
inc
stos
loope
ss
dec
shrb
mov
jo
sbb
das
xchg
loope
inc
mov
pop
hlt
mov
jl
mov
or
mov
in
pop
push
xchg
outsb
int3
dec
aam
stc
outsb
jl
jno
std
lea
and
inc
mov
mov
out
xchg
dec
or
outsb
insl
push
inc
into
xchg
ds
or
jno
pop
and
xorl
fwait
mov
leave
pusha
push
and
rolb
mov
mov
ret
sub
xor
sbb
nop
dec
jmp
cmp
pop
test
push
cmc
mov
mov
inc
inc
push
and
mov
fistpll
ret
ss
cmc
xchg
andl
mov
xchg
jecxz
hlt
out
outsb
sub
stc
outsl
test
fwait
add
adc
mov
inc
sub
lods
int3
mulb
xor
in
loope
mov
or
data16
sub
push
shrl
lahf
push
mov
mov
popa
inc
jp
ja
mov
mov
pop
inc
mov
add
andl
dec
cmp
adc
pop
ret
jbe
mov
out
pop
cwtl
and
loopne
shll
imul
mov
inc
iret
inc
mov
lods
sbb
test
mov
sbb
mov
xchg
stos
mov
movsb
insl
jb
lock
shll
ret
dec
sub
xlat
pop
mov
jmp
ljmp
fimuls
stc
jae
adc
pop
add
adc
xlat
nop
mov
test
mov
jb
and
ja
call
jl
sbb
mov
pusha
push
mov
sbb
cld
mull
in
mov
and
adc
xlat
jo
outsl
xchg
xorl
xchg
sbb
add
or
ljmp
mov
mov
adc
and
push
pushl
dec
xchg
fnstsw
bound
sub
cld
jecxz
cld
jno
imul
divl
pushl
cmp
mov
mov
push
fsubl
mov
out
push
add
inc
pop
adc
mov
cmp
mov
mov
lret
es
addr16
sbb
jae
sbb
lcall
in
out
psrad
andb
inc
enter
aaa
in
lods
ret
in
sbb
jg
xchg
pushf
dec
xchg
fnstsw
cltd
movsl
lods
adc
out
mov
iret
pop
mov
and
pop
loope
sbb
xchg
add
cmpsb
and
sub
mov
stc
cmpsb
imul
mov
adc
add
xorb
xor
mov
in
mov
dec
in
or
mov
pop
sub
add
mov
inc
mov
in
stos
std
mov
xchg
push
or
xor
sbb
shl
mov
adc
js
jne
dec
scas
ds
inc
lods
xchg
inc
sub
movl
xor
cli
inc
push
leave
mov
cmp
xor
sub
movsl
pop
fisttps
andl
cmp
xor
cmp
sbb
lahf
orl
mov
push
pop
clc
pop
outsb
push
add
popa
in
movsl
insb
pop
add
add
fucomi
arpl
lret
inc
rorl
lret
and
aas
sbb
jle
ret
rcrl
push
pop
sub
lret
jno
je
and
xchg
fst
mov
and
mov
pop
mov
les
push
mov
add
notl
je
inc
inc
push
jle
mov
sbb
shrl
mov
cmp
icebp
xor
or
mov
popf
or
add
push
pop
pop
stc
mov
lods
xor
cmp
fisttpl
cmp
mov
mov
icebp
out
outsb
cmpsl
xor
mov
xor
jmp
push
or
mov
mov
adcb
aas
dec
fcomps
jb
call
mov
pop
add
filds
fstps
cmp
jns
ljmp
mov
cwtl
or
out
fs
and
mov
jge
mov
fdivl
cmp
mov
jmp
cmovne
xor
scas
adc
jg
xchg
inc
in
cs
cmp
pop
outsl
or
in
lret
outsl
sbb
outsb
push
leave
lea
add
adc
sbbb
pop
into
inc
pop
push
out
jmp
andb
stc
add
add
cmp
jg
cmp
push
push
sub
xchg
test
addl
lahf
mov
push
dec
cmp
xor
push
subl
fldt
enter
push
dec
add
mov
cmp
sbb
mov
sbb
lods
jmp
jecxz
out
and
ljmp
pusha
movsl
mov
xchg
mov
xor
filds
lcall
mov
cld
add
inc
jge
es
xchg
jae
sub
sbb
fcompl
int
jo
fcoml
adc
cmp
mov
sbb
hlt
repnz
sahf
fnstenv
ss
pop
push
xor
jns
mov
inc
mov
mov
or
xchg
pop
dec
iret
sbb
sbb
xchg
pop
mov
jnp
outsb
inc
sti
sbbb
std
lds
xchg
xchg
pop
xor
ja
mov
xchg
ret
mov
cmp
push
cmp
bound
out
daa
add
cld
pop
add
fs
iret
jne
adc
fidivs
mov
cwtl
cmpsb
pop
jns
sbb
mov
mov
sbb
jne
or
fcoml
cmp
lret
dec
imul
add
add
int
jbe
lea
push
dec
lret
int3
pushf
movsb
pop
pop
xchg
inc
in
pop
or
mov
test
outsb
sub
sarb
fimull
xchg
lods
das
aam
pop
sub
dec
jno
adc
dec
sub
cmpl
mov
icebp
test
inc
cmp
pop
mov
add
mov
fidivrl
mov
xchg
rclb
or
pop
clc
mov
push
mov
outsl
das
dec
mov
push
push
icebp
insl
fsubrl
fstps
pop
xlat
push
cltd
mov
inc
lods
mov
in
mov
es
cmpsl
xor
pop
das
xchg
aas
mov
dec
mov
or
lret
test
insb
stc
mov
fdivrs
mov
push
jne
and
mov
cmpsb
je
test
push
push
xchg
rorb
dec
add
push
dec
mov
and
out
sti
xchg
sub
mov
call
mov
dec
mov
inc
sub
mov
mov
jnp
sbb
orb
and
push
loopne
aad
mov
pop
movsb
dec
xor
jg
mov
ljmp
adc
loope
shlb
pop
rcl
ljmp
pop
or
jno
xlat
cmp
xchg
enter
dec
cli
and
jo
cld
repz
lea
sbb
jge
jge
aas
inc
shlb
movsb
test
std
mov
xor
das
xor
pop
xor
shll
xchg
fdiv
mov
loopne
mov
cs
cltd
or
iret
pop
orb
ret
out
push
mov
outsb
mov
jb
dec
int
les
sub
dec
jecxz
andb
adc
mov
mov
xlat
rcl
pusha
fcmovnb
push
adc
mov
dec
rorl
call
cmp
fucomp
nop
test
shrb
xorl
lods
cmp
test
cmp
mov
push
lahf
xchg
xlat
jl
dec
xorb
inc
dec
push
inc
sbb
sarb
jno
les
insl
jge
mov
hlt
inc
pop
sbb
dec
xor
jne
ljmp
dec
mov
ffreep
pop
or
cmp
sti
fisubrl
or
jbe
or
popa
or
outsl
loope
test
shll
sahf
xchg
mov
and
mov
fcompl
jnp
lods
jno
insb
test
daa
lods
and
dec
dec
inc
pop
mov
add
imul
dec
hlt
xchg
push
dec
stos
nop
popa
push
push
adc
jo
daa
sti
scas
jg
inc
xor
xchg
in
ds
sarb
test
push
sahf
xorb
sbb
xor
sahf
pop
rcrb
test
pop
cmp
adc
stos
cmp
sbb
ret
cmpb
push
dec
insb
arpl
mov
xchg
mov
testb
and
test
sub
icebp
aas
orl
fisttpl
pop
gs
cmc
imull
sub
or
adc
cltd
popa
dec
xchg
adc
lret
fsubl
jo
lahf
and
push
mov
decb
cmp
in
cld
sarl
jno
mov
pop
std
xchg
mov
daa
add
push
add
sbb
dec
scas
mov
pushf
stos
leave
push
xchg
dec
nop
lds
mov
and
fildl
push
aas
in
dec
dec
xchg
add
aam
sbb
in
mov
push
adc
lods
popa
icebp
add
nop
insl
mov
pop
cmp
stos
xchg
ret
mov
stc
repz
pop
jb
ss
mov
gs
jae,pt
jle
shll
js
pop
loopne
or
inc
xor
addr16
lret
mov
pop
enter
sub
and
push
cmpsb
sahf
push
or
push
inc
cmp
enter
inc
xchg
cld
xor
sub
out
insl
ds
fwait
push
mov
jl
sahf
scas
mov
mov
cwtl
cmpsl
scas
sbb
cmp
in
lcall
jno
xor
mov
fsubr
int3
add
jno
cli
insb
jns
int
fidivs
xchg
jl
push
or
pop
mov
scas
cmp
gs
jmp
push
frstor
lods
push
or
sub
push
lods
inc
dec
mov
ljmp
xor
gs
iret
push
fxch
popf
push
imul
inc
or
inc
mov
hlt
lea
fdivl
mov
pushl
adcb
mov
mov
leave
popf
mov
sub
jmp
ja
test
rorb
lret
es
sub
js
mov
sahf
out
cmp
in
outsl
gs
xor
dec
push
subb
andb
mov
push
orl
or
jb
ret
add
stc
jne
ret
cltd
lcall
test
test
in
adc
cmpsb
dec
int
outsl
or
dec
xchg
pop
in
sub
popa
inc
cli
xchg
jmp
int3
shlb
iret
jno
mov
adc
xor
mov
inc
add
lret
jge
sti
cmpsb
imul
cltd
mov
jnp
cmp
xchg
fst
out
sbb
mov
jb
push
stos
shll
lds
push
mov
mov
lock
es
add
fwait
inc
out
outsl
imull
ljmp
popf
jbe
lods
mov
lcall
xchg
cld
sub
ss
push
sub
cmpsl
arpl
push
les
cmp
and
ljmp
pop
in
lods
pop
jno
or
shll
push
stos
dec
inc
mov
sbb
push
pop
sub
mov
repz
lret
cmp
cmpsb
jg
clc
test
pop
mov
adc
daa
push
or
or
loopne
pusha
in
push
jno
push
sbbl
scas
ja
inc
inc
cs
jae
sarl
daa
adc
sub
pushf
push
dec
pop
mov
fcomip
out
bts
cmpsl
sub
roll
push
mov
cmpsb
cmpsl
outsb
or
gs
sti
es
mov
add
js
cmp
fwait
test
ret
adc
es
aad
xchg
push
and
adc
daa
mov
cld
and
sbbb
jmp
adc
fiadds
ffree
mov
out
xor
push
pusha
das
inc
push
push
jbe
or
incl
mov
inc
test
fsts
ret
and
add
shll
daa
out
scas
in
insb
movsl
or
jp
push
cs
push
loopne
mov
inc
or
cmpsb
inc
lds
int
push
and
rcrb
xchg
xor
loop
sbb
icebp
outsl
push
movsl
xor
push
sub
pop
xor
xchg
mov
mov
ja
lods
fiaddl
push
aas
adc
push
jae
adc
push
insb
fcmove
ret
fmull
jl
pop
mov
sarb
cmp
iret
push
mov
test
xlat
mov
pop
xor
inc
inc
inc
jg
inc
cmp
mov
pop
jle
mov
fwait
popa
bound
push
inc
xor
add
or
pop
adc
and
dec
fcmove
lds
test
add
dec
cmp
push
or
xor
arpl
lcall
out
mov
jg
cmp
dec
outsb
int3
ljmp
mov
ret
ja
stos
mov
inc
data16
cmp
fsubl
mov
push
decl
subb
fadds
out
xchg
dec
push
test
sbb
xlat
mov
mov
out
cmpsb
xlat
inc
jo
or
ja
inc
pop
sub
and
jo
ja
pop
je
lcall
daa
xchg
cmp
in
outsb
dec
adc
lcall
add
xchg
add
les
mov
pop
xchg
loopne
mov
call
orb
pop
repz
pop
dec
int3
cmp
pop
pop
xchg
sti
jb
jge
aaa
sbb
xchg
stc
imul
inc
es
jb
dec
sbb
and
sub
sub
adc
or
pop
jns
shll
sub
mov
mov
ss
lret
xchg
hlt
fwait
jo
es
sbb
arpl
pop
enter
std
adc
andl
dec
int3
in
xchg
nop
cmpsb
jno
add
lock
push
hlt
push
lret
dec
repnz
mov
jns
mov
or
sbb
scas
data16
ret
cmpsb
orl
addr16
xchg
lods
test
xchg
mov
dec
addr16
lock
testb
arpl
and
out
mov
rol
xchg
pop
add
outsb
mov
sub
inc
cwtl
lds
out
ret
mov
or
cmc
repz
test
jg
mov
xchg
sub
out
lret
mov
pop
imul
jns
leave
add
xchg
push
push
pop
mov
fnstsw
sbb
cmp
test
movsl
loopne
sub
pop
pop
cmp
loope
jo
mov
jmp
mov
test
dec
mov
cmpsb
mov
push
inc
ja
out
dec
inc
push
arpl
dec
sti
fdivrp
or
out
sub
sub
aad
jle
ret
sbb
push
in
leave
add
sti
rcrl
sub
xchg
dec
mov
dec
jle
stos
sbb
jmp
roll
sbb
xchg
rcll
das
test
scas
mov
mov
xchg
sbb
shll
pop
mov
outsb
xor
adc
fcmovnbe
je
loope
jmp
add
movnti
push
jns
imul
cli
xchg
or
js
in
icebp
movq
cmp
jmp
testl
mov
je
ret
hlt
add
xchg
testb
push
stos
insl
stos
mov
fiaddl
daa
in
pop
or
in
jg
sbbb
pop
sbb
jecxz
xor
sar
cmpl
fidivs
xor
fsubs
jle
adc
mov
push
xor
setb
xchg
int3
xchg
dec
push
mov
or
test
cmp
sbb
mov
and
pop
and
test
cmc
pop
fnstcw
cmp
dec
sysenter
sbb
and
outsl
test
insb
xchg
fstpl
cmc
fcoms
andl
cmp
and
dec
into
mov
ret
call
rcr
dec
mov
gs
bound
scas
addl
mov
cs
dec
repnz
mov
and
inc
dec
inc
xor
ficomps
mov
shl
jo
imul
cli
jmp
adc
es
pop
push
test
in
cmp
imul
mov
push
in
mov
insl
fdivrs
pop
push
or
rcll
popf
pop
sub
fidivrs
test
data16
and
pop
iret
loop
cwtl
sub
jecxz
add
push
mov
cld
mov
roll
or
dec
push
fwait
xor
es
loopne
xchg
scas
out
jle
mov
pop
xor
insl
lret
xor
imul
repnz
out
jle
in
lods
pop
mov
push
stos
push
test
push
xor
iret
sbb
cmp
loop
sbb
fwait
idiv
mov
iret
sub
test
mov
cmp
xor
aad
cltd
adc
pop
sub
movsb
div
ret
dec
int
stos
loope
mov
repnz
push
lods
lret
cmp
mov
out
jne
out
sub
int
mov
cmp
jecxz
jnp
popf
lods
jne
inc
sub
andl
and
sbb
mov
adc
insb
loope
jge
rolb
rorb
inc
push
or
hlt
add
leave
clc
jmp
jne
cli
insb
cmpsl
pop
pop
and
insl
xor
repnz
pop
pop
adc
pop
mov
adc
sbb
and
pop
pop
jp
and
adc
and
adc
sbb
xchg
xorl
jmp
xor
adc
mov
mov
or
lods
cmp
mov
adc
push
sti
movsl
movsb
dec
gs
imull
adc
mov
push
pop
rcll
adc
fidivs
or
lock
stc
xorl
cmpsl
rcll
js
sahf
sbb
fisubl
or
pushf
add
xchg
sarb
clc
xchg
cs
jae
das
pushl
lret
rcr
mov
xor
mov
jg
je
xor
inc
shll
outsb
js
ds
and
daa
xchg
orb
push
lret
hlt
gs
inc
lcall
dec
nop
mov
inc
retw
cmp
xchg
popa
and
fidivl
mov
fadd
xchg
xlat
mov
ret
jge
dec
pop
lds
xlat
and
dec
test
je
repnz
jl
fdivrl
inc
and
push
adc
bound
push
mov
cmp
in
repz
mov
adc
jno
lret
in
test
push
push
aam
cmp
xlat
pop
jno
loopne
mov
mov
test
test
mov
mov
in
mov
out
push
mov
js,pt
mov
cmp
xor
pop
fsubs
lahf
std
xchg
dec
and
push
xor
jmp
imul
outsl
roll
mov
mov
loope
icebp
mov
jg
push
add
stos
data16
and
sub
testb
xchg
movsb
js
sub
mov
dec
dec
gs
dec
jne
test
iret
pop
ret
adc
mov
jns
pusha
sbb
dec
rorb
sahf
std
jns
xor
push
push
and
jecxz
lds
loope
movb
notb
pop
sahf
sarl
push
push
arpl
adc
aad
int3
popa
jecxz
mov
std
imul
xchg
sub
and
ds
cmp
pop
dec
add
outsb
cmp
int
add
jecxz
rclb
jne
repnz
push
nop
mov
jae
xchg
or
jmp
mov
test
outsl
jecxz
jmp
into
insl
cltd
and
mov
dec
cmp
mov
xor
repnz
mov
dec
jns
imul
loope
adc
mov
mov
mov
cmpl
repnz
or
ret
sbbb
ret
jge
out
cltd
mov
mov
xchg
sarb
or
stos
jle
sar
jb
mov
int
and
std
mov
sbb
in
push
push
adc
or
scas
jmp
jg
mov
lahf
and
cmp
lods
gs
and
movsl
loope
ja
sub
dec
sub
test
push
insl
cmp
push
and
out
mov
mov
fcmovne
cli
out
ljmp
mov
outsb
dec
sub
test
push
and
lods
ds
out
sbb
test
sub
dec
add
or
xor
sub
inc
test
and
inc
dec
ja
xchg
lahf
call
cmp
cmp
inc
jecxz
mov
shll
bound
mov
mov
cmp
mov
inc
xchg
jne
lods
arpl
mov
sbb
mov
mov
dec
popf
jecxz
js
incl
inc
xchg
xchg
push
mov
push
pop
xor
jmp
neg
xchg
push
popf
mov
push
pop
inc
mov
pop
sub
mov
mov
push
adc
push
mov
ret
pusha
push
dec
mull
jne
adc
int3
test
lods
sbb
and
in
cltd
call
jns
pusha
stc
xchg
pop
xchg
int
push
mov
filds
jnp
loopne
nop
or
or
xor
push
jns
and
mov
sub
clc
dec
bound
orb
and
movsb
mov
xorb
sbb
dec
mov
hlt
test
in
dec
or
inc
or
mov
out
cli
push
push
mov
repnz
xor
ja
jmp
out
cli
xchg
adc
xchg
push
icebp
adc
lahf
ss
cmpsb
cmp
jl
pop
pop
loopne
pop
out
cmp
add
mov
lods
push
mov
or
cmp
aas
outsl
add
push
xchg
les
lret
adc
mull
cmpl
ret
stos
insl
adc
test
das
mov
mov
jbe
sbb
aas
aaa
sbb
ljmp
stos
or
lcall
test
push
push
mov
orb
add
shl
xchg
scas
xchg
ret
fadd
pop
push
inc
xchg
mov
bound
push
out
sbb
aad
addr16
dec
push
loop
cmpsl
mov
jle
mov
std
push
pop
jecxz
out
addl
or
cmp
push
popf
pop
repz
cs
sub
icebp
fld
nopl
mov
add
pop
jmp
push
mov
jg
adc
lods
shlb
inc
mov
push
xchg
push
sub
jmp
loope
loope
cwtl
lahf
iret
movsl
jb
ret
test
and
sarl
xlat
mov
mov
push
into
pop
xchg
cmp
cmp
sbb
sbbl
mov
xchg
movsb
mov
nop
lcall
cli
pop
dec
mov
adc
shll
and
es
mov
bnd
sub
jecxz
push
test
xchg
in
movsl
jecxz
sbb
scas
cli
stos
mov
and
leave
or
xchg
in
adcl
popf
ljmp
sub
and
mov
fmul
and
dec
pop
inc
in
imul
insb
or
sub
repz
lea
stos
mov
iret
out
out
test
ljmp
das
xchg
mov
push
mov
xorl
sub
scas
iret
sbb
leave
in
or
into
sub
lock
sub
ror
negl
dec
mov
sbb
fs
cmpsb
mov
call
les
push
out
test
test
cltd
or
enter
mov
xor
jp
sub
enter
inc
mov
popa
push
inc
jmp
lock
frstor
pop
scas
dec
in
inc
and
xor
xchg
ljmp
jp
pusha
pushf
dec
jle
imul
jae
push
dec
lcall
dec
ljmp
sub
adc
xlat
push
bound
mov
cmp
sub
lahf
shl
cmp
sahf
push
daa
push
dec
add
push
neg
test
inc
mov
xchg
into
mov
cmpsb
rcl
enter
dec
popf
mov
aad
and
jl
sbb
fidivl
lcall
adcb
sti
lds
cmp
subl
push
push
pop
rcl
rcr
jne
ret
repnz
sbb
adc
push
ret
pop
mov
scas
cwtl
es
adc
adc
out
mov
imul
xchg
mov
lahf
inc
and
push
push
pop
out
push
or
xchg
cmpsl
fcomip
arpl
les
jbe
push
iret
jne
and
pop
adc
mov
inc
mov
or
subl
jb
loopne
fisubs
mov
jnp
push
cmpsl
sub
hlt
cmp
push
add
cmp
in
xor
loop
inc
add
pminsw
pushf
int3
fisttpll
insb
std
out
ret
insl
mov
mov
and
arpl
sbb
dec
mov
xor
pop
push
das
lods
push
lcall
int
push
ja
inc
decl
xchg
test
mov
dec
iret
dec
mov
add
mov
aaa
jo
lds
leave
add
pop
adc
inc
sbb
jge
push
push
mov
imul
lahf
cmp
xor
je
cmc
cli
clc
push
out
cmp
sub
inc
push
aad
mov
xchg
mov
or
imul
popf
mov
mov
bnd
jmp
mov
sbb
shrb
jmp
xor
ljmp
push
fnstenv
lods
dec
fistl
out
aaa
pop
push
dec
call
ja
cltd
in
popa
or
rorb
clc
cmp
iret
jbe
add
pop
push
cmpb
fldt
pushf
mov
ds
mulb
mov
push
push
or
sbb
push
subb
test
xchg
ficompl
je
sbb
cmpsl
lret
out
pusha
stos
lods
lock
daa
push
sbb
and
sbb
stc
inc
mov
sub
add
mov
sbb
mov
add
mov
test
jle
cmp
pusha
or
adc
shrb
inc
dec
es
jbe
in
lcall
fadds
fwait
ret
mov
or
inc
push
xchg
incb
adc
xchg
mov
sub
fwait
sti
push
cmc
or
push
lock
mov
pusha
add
push
test
mov
stc
pop
mov
dec
xor
pop
add
mov
andl
pop
out
inc
and
mov
add
clc
add
stc
imul
loopne
decl
fiaddl
sbb
lcall
movsl
loopne
mov
sti
pop
or
xor
je
mov
fisubrl
popa
and
bound
jp
popf
pop
adc
fists
cmc
test
cmp
mov
push
out
scas
cmpb
popa
cmovp
add
pop
cmp
faddl
outsl
hlt
lcall
push
adc
or
push
push
add
push
xchg
cli
pop
les
sbb
pushl
in
xchg
sbb
in
or
jl
mov
popa
iret
out
aas
out
movsl
sti
sbb
into
imulb
push
inc
aad
cs
xor
dec
lcall
jnp
jo
scas
addb
fcmovnb
push
sub
imul
xor
cli
sub
adc
dec
inc
leave
les
pop
into
in
out
cmp
adc
cmc
mov
push
push
daa
into
pxor
or
mov
ficomps
pusha
aad
xchg
xchg
dec
add
movsl
and
hlt
mov
mov
inc
outsl
les
ja
int3
lods
push
and
insb
xchg
imulb
je
mov
lds
negl
icebp
add
add
jo
mov
sub
popf
lock
std
sarl
add
push
sub
jl
bound
fwait
std
aad
aad
xchg
stos
loopne
mov
dec
push
arpl
pushl
and
push
sbb
mov
push
loop
push
mov
adc
push
jb
jo
leave
jle
jecxz
cmp
dec
cmp
mov
inc
fisubrl
or
and
loope
std
sub
mov
scas
imul
inc
jnp
inc
inc
add
test
insl
loope
movsb
dec
jmp
push
mov
push
sub
cmc
daa
movsb
sbb
push
flds
push
jecxz
or
iret
sahf
cltd
aas
addr16
jno
decb
cs
fbstp
lds
adc
push
clc
pop
in
mov
in
mov
xlat
leave
cmp
and
outsl
mov
xor
dec
mov
pop
sbbl
xchg
fsubrp
test
adc
sahf
push
scas
f2xm1
xchg
or
xchg
test
fldt
rcrl
jmp
adc
mov
mov
movl
vmovupd
jbe
sbb
mov
cmp
or
adc
loop
add
test
xorb
push
lods
xchg
mov
pop
fidivrs
into
mov
ja
outsl
sbb
push
jecxz
push
cmp
imul
jl
cmp
xlat
test
adc
cmc
das
nop
xchg
inc
divb
popl
std
clc
cmp
push
test
aad
stos
lods
xor
jg
sub
and
cltd
xchg
mov
call
es
push
pop
in
sub
leave
out
pop
js
mov
sahf
xchg
xchg
jno
and
ja
mov
out
sti
pop
aad
gs
cli
insl
iret
sbb
and
into
xchg
lods
testl
jmp
aaa
cltd
daa
cmpsb
push
adc
sub
jmp
sub
mov
sbb
cmp
mov
jecxz
iret
lahf
xor
lret
mov
test
int3
test
into
fimuls
and
mov
sbb
rcr
inc
test
jne
xor
dec
xchg
xor
dec
dec
jae
or
sti
nop
filds
cltd
lds
mov
hlt
loop
nop
mov
mov
mov
roll
scas
loop
mov
sbb
mov
adc
jmp
leave
clc
sti
stos
popf
push
notl
xchg
add
out
bound
daa
call
lcall
nop
daa
jp
movsl
lahf
xor
in
repnz
aas
adc
adc
xlat
inc
sbb
fstps
sbb
sub
inc
data16
das
rcll
ja
mov
or
adc
pop
mov
cltd
xchg
jo
loope
cltd
sbb
insb
insb
sbb
xchg
and
icebp
movsb
mov
inc
pop
sub
or
cld
mov
push
ss
lods
sqrtps
inc
sub
mov
test
arpl
add
lahf
push
outsb
mov
addr16
or
fdivs
inc
pop
clc
lret
xor
xor
int3
xlat
mov
nop
xchg
loopne
into
dec
fcoms
pop
lods
insb
sub
pop
mov
sub
scas
inc
sbb
stos
fisubrs
fisubl
adc
pop
mov
jno
repnz
sbb
mov
inc
mov
mov
ja
es
dec
mov
push
insb
int3
subb
xor
enter
cmc
les
test
sbb
xchg
xchg
mov
xor
jmp
movsl
mov
or
cmpsl
and
pop
jp
shll
sbb
push
jae
push
sub
adc
or
out
add
sbb
sbb
xor
pop
test
xchg
test
push
or
or
pusha
mov
xchg
clc
add
in
movsb
cs
clc
es
mov
dec
mov
mov
push
push
test
fstpt
jbe
insl
stc
add
jg
cmp
aam
insb
mov
xchg
sti
dec
clc
jno
call
mov
push
insb
mov
icebp
sti
ficompl
jp
orb
pop
jecxz
cmp
and
mov
ret
xlat
movsb
enter
out
dec
loopne
negb
pop
sbb
mov
mov
sub
pop
cmp
movsl
icebp
xlat
hlt
push
dec
jae
or
sub
inc
mov
pop
daa
mov
bound
mov
cli
ds
adc
or
adc
pop
xor
aad
mov
push
jge
ficompl
adc
push
inc
sbb
andb
mov
push
push
into
cmp
outsb
cmpsb
mov
or
pop
adc
add
cltd
sbb
into
repz
push
insb
pop
scas
repnz
xchg
sbb
icebp
pop
nop
mov
gs
roll
outsb
imul
pop
adc
sti
and
call
fucomp
push
jne
pop
dec
sub
addb
push
popa
in
xchg
push
dec
pop
sub
test
sbb
ja
icebp
mov
xlat
xor
movsl
mov
adc
mov
mov
add
jns
jle
cmp
lods
fsub
inc
sahf
push
mov
lcall
cs
int3
stos
gs
cmpsl
xacquire
or
mov
iret
int
aad
inc
xor
lahf
mov
fs
mov
mov
jns
xchg
jae
out
out
sub
jmp
and
mov
sub
sub
and
sbb
orl
in
cmp
xor
sub
daa
pop
jmp
add
daa
jecxz
xor
xchg
mov
adc
sub
shlb
and
mov
xchg
push
loop
xchg
mov
mov
in
ss
push
fidivl
movsb
sub
popa
cmp
sbb
fadd
mov
mov
cmpsl
mov
sbb
lds
pop
cmc
loopne
ret
jg
andl
xchg
mov
sbb
and
fs
bound
decb
xor
jg
jp
out
push
scas
sub
jne
pop
cmp
pop
inc
push
push
mov
pop
pop
out
rcr
popf
icebp
mov
pop
insl
movsb
jb
clc
lods
fcoms
xchg
repnz
ficompl
jne
test
add
jbe
stos
enter
sbb
fildl
inc
std
ficompl
pop
push
mov
sub
in
xlat
shll
mov
add
jmp
mov
test
push
add
dec
sbb
mov
push
adc
lahf
les
sbb
mov
les
fadd
in
dec
repnz
mov
jne
outsl
loop
xor
stc
mov
inc
outsl
mov
aaa
addr16
cmp
repnz
or
mov
int
sbb
jbe
std
xlat
shll
mov
cmpsb
mov
enter
jl
xchg
out
fbstp
jbe
andl
or
into
adc
xorb
in
in
sti
inc
aaa
idivl
adc
dec
loop
pop
xchg
xor
rorl
aad
test
lea
push
icebp
push
or
dec
pop
jae
fisttps
ret
aam
or
xchg
cmp
mov
leave
xor
push
push
cld
shlb
dec
dec
dec
mov
cmp
fists
mov
push
popa
lcall
or
popa
xchg
test
add
xor
aam
out
pop
jecxz
mov
inc
rcr
push
mov
pop
imul
cmc
lcall
aam
mov
cmp
and
mov
cmp
mov
addr16
jmp
sbb
fistpl
inc
insl
add
daa
cmp
fistpl
call
push
aad
fdivr
jno
rolb
jns
adc
pop
inc
cmp
movl
outsl
add
enter
ja
push
dec
cs
loope
mov
loop
add
stos
mov
lock
cli
sub
iret
out
mov
outsl
cld
cmp
jae
aaa
push
insl
out
jno
mov
jbe
fadds
inc
out
repnz
loope
nop
fisubrs
mov
mov
mov
gs
inc
dec
iret
push
outsb
fnstenv
dec
xchg
pop
and
mov
iret
stc
jle
mov
cmpsb
insb
in
pushl
pop
pop
add
inc
xlat
outsb
xchg
pusha
mov
inc
dec
fcompl
insb
mov
inc
inc
xchg
lret
sbb
shlb
adc
aam
add
sahf
push
iret
rorl
pop
cli
pop
push
mov
test
cmp
sti
jae
or
test
xlat
cs
scas
cmpsb
push
mov
cs
cmp
jb
xchg
inc
or
or
inc
popf
sbbb
mov
outsl
cmp
sbb
sbb
lds
cld
dec
ret
lret
or
cwtl
icebp
int3
and
test
pushf
into
outsb
xchg
fwait
pop
cld
dec
push
jns
dec
push
cs
icebp
xor
jbe
pop
lcall
ret
out
dec
pop
cmp
sti
or
dec
punpckhbw
mov
test
push
aam
cmp
loope
or
gs
push
shrb
addb
orb
or
xchg
dec
and
jb
pop
test
sub
std
mov
inc
push
dec
dec
repz
sub
xor
pop
mov
push
or
sti
leave
add
jbe
iret
jns
hlt
xchg
xchg
jo
test
bound
jb
jns
arpl
inc
decb
mov
inc
cmp
jle
inc
adc
lock
sbb
outsb
cmp
and
in
push
pop
mov
add
daa
js
push
inc
sbb
mulb
leave
decb
pop
mov
jmp
enter
dec
pusha
js
inc
fincstp
push
sti
cld
seta
or
fbstp
lcall
lods
pop
cli
and
lahf
push
inc
pop
int
stc
addr16
adc
aaa
aas
sbb
and
pop
repz
sub
mov
adc
mov
mov
cmp
fwait
jns
mov
jg
jae
subl
inc
cmp
popf
pop
pop
test
xchg
sub
stc
loop
mov
addr16
lock
jp
cmpsl
add
les
iret
loopne
in
mull
ds
cs
loope
xlat
mul
nop
hlt
lods
sbb
mov
push
stos
jg
inc
lea
pop
les
sbbb
xchg
adc
mov
ret
scas
lock
or
xor
loopne
cld
cmpsb
dec
sbb
ja
jecxz
out
into
cmpsb
rorb
aam
push
rcll
aad
push
std
fs
push
push
jg
push
pop
cli
mov
dec
mov
add
lods
add
and
stc
faddl
aam
inc
xchg
ffree
adc
sbb
outsl
add
popf
sub
fistpll
pop
sbb
stos
cmpsb
divb
das
std
cmp
lods
sub
push
xor
in
repz
cmp
sbb
lods
mov
and
jns
lods
sarb
das
cltd
das
mov
mov
and
sub
out
loope
subl
dec
lds
mov
ljmp
rcr
sbb
add
mov
cmpsl
mov
sti
push
sbb
fs
shll
stos
inc
push
add
jbe
xlat
mov
dec
cmp
loop
test
clc
pop
and
movsb
faddl
add
in
pop
jbe
dec
jno
ds
push
stos
dec
inc
adc
sbb
movsb
notl
mov
push
scas
mov
adcb
fldl
mov
mov
mov
nop
in
arpl
add
aad
mov
out
subb
mov
xor
outsb
push
mov
ss
mov
ja
test
leave
jns
push
out
call
or
jae
daa
jg
mov
aaa
popa
in
lahf
outsb
inc
scas
cmp
mov
adc
mov
jl
arpl
nop
or
ret
xchg
cmp
imul
mov
enter
stos
mov
mov
mov
ret
cmpb
dec
aas
outsb
hlt
push
mull
pushf
or
xor
jb
fstl
cmp
mov
jge
jp
adc
addr16
call
lret
push
dec
dec
cmc
xchg
add
pushw
pop
adc
orb
lds
leave
pop
jnp
movsb
adc
scas
push
out
cmp
rorl
shrl
inc
push
fstpl
fisubrs
pop
pop
pop
inc
add
mov
fists
ds
jo
push
addl
and
in
sub
call
and
scas
pop
mov
add
imul
pop
cmp
popf
lods
pop
cld
push
adc
adc
cmp
fldt
fcmovnb
pop
ss
ds
cmove
loope
test
nop
test
xor
or
mov
int3
adc
ljmp
in
or
or
add
lock
cmp
xchg
xlat
mov
dec
cli
or
pop
add
or
lods
rcrb
xchg
in
rcr
lock
xchg
mov
mov
lock
and
adc
pop
adc
inc
stos
and
out
add
ja
cltd
ret
in
and
subb
cmpsb
sti
xchg
ljmp
cli
pusha
int3
scas
in
or
or
dec
ja
and
scas
xor
fsubrs
mov
mov
mov
cltd
popf
inc
ljmp
jl
out
outsb
inc
add
aam
xchg
add
push
jbe
mov
int3
push
adc
andl
mov
cwtl
mov
cld
jns
mov
sbb
mov
lret
sahf
pop
xchg
movhps
mov
aaa
inc
popa
outsb
xchg
pop
repz
iret
bound
mov
sahf
cmpsl
in
mov
push
mov
inc
ret
xor
stos
and
aam
xchg
push
in
call
pop
mov
mov
popf
jns
cmp
stos
dec
das
int
cmp
dec
movsb
mov
xchg
mov
dec
mov
cwtl
arpl
scas
iret
adc
cld
cltd
inc
xchg
sbb
cmp
sbb
popf
jne
sti
mov
or
pop
jecxz
mov
out
daa
in
ror
inc
xorb
out
jo
repnz
push
jne
loop
mov
pop
test
icebp
pop
mov
dec
fildl
in
sub
das
cmp
lret
mov
dec
add
jnp
fsts
mov
shll
cs
aam
or
lock
mov
sub
mov
adc
sub
int
sub
lea
mul
xorl
push
lahf
mov
push
dec
mov
std
adcl
outsb
lods
cmp
jecxz
or
mov
xor
push
xchg
push
call
jne
add
sub
xchg
mov
daa
pop
jnp
cmpsb
insb
jo
jne
xchg
sbb
lcall
out
push
pop
inc
stos
mov
jle
sbb
std
inc
stc
cmpsl
and
sarl
divb
decl
lds
xor
ja
push
xchg
ja
fiaddl
mov
sub
xor
sbb
in
stc
sbb
test
jle
stos
xchg
lcall
mov
adcb
jae
pusha
mov
scas
dec
jle
pop
dec
and
pushf
movsl
loop
add
mov
jmp
incb
mov
addr16
mov
mov
rcr
pop
cmp
jae
aad
jmp
js
push
push
push
push
jmp
les
pop
pop
in
cltd
jge
popa
mov
sbb
jo
mov
push
push
mov
test
cmp
sbb
mov
mov
xchg
push
push
mov
cmp
popa
dec
aas
popa
inc
icebp
add
fldcw
and
xchg
dec
notl
mov
jg
test
jge
dec
ret
insb
mov
jmp
jae
pop
ficomps
xchg
and
cmp
jb
imul
pop
xchg
adc
ss
mov
js
in
xchg
xorb
mov
mov
xchg
mov
and
sti
xchg
jne
xor
mov
and
xchg
jo
mov
mov
push
inc
in
call
xchg
aad
push
push
adc
je
mov
hlt
and
jecxz
xchg
icebp
fstps
bound
iret
ret
divl
fistl
ffreep
scas
pop
push
push
nop
test
out
push
hlt
pop
push
add
sub
test
xor
andb
xchg
mov
mov
jbe
pop
lcall
mov
sbb
and
scas
pushf
in
sahf
sbbl
inc
aaa
cltd
push
rolb
push
mov
or
mov
jp
xchg
sti
xchg
push
and
pop
push
mov
fildl
pushaw
xchg
or
out
sbb
decl
xchg
ror
jl
lods
bound
out
dec
jg
adc
sbb
xchg
loope
sbb
lret
xor
filds
popf
lahf
mov
jne
dec
lods
mov
sbb
sub
pop
sbb
aaa
pop
test
fiadds
jg
adc
in
xor
and
outsb
and
xchg
in
mov
cmpsl
clc
cmpsb
jmp
push
call
inc
xor
outsb
or
mov
pop
xchg
push
jae
jge
pop
mov
rol
idivb
ja
add
dec
sub
dec
int3
xor
mov
inc
and
mov
or
cli
pusha
int
mov
loop
xchg
jmp
movsl
outsb
js
lret
lret
iret
movsb
and
jl
mov
rcrb
xor
inc
aas
sbb
std
jb
bound
in
mov
je
sub
call
nop
push
and
les
nop
push
xor
sub
cmc
test
mov
repnz
repz
add
pop
add
add
mov
call
jg
imul
xor
xor
testl
mov
add
dec
leave
test
sahf
dec
ret
testb
mov
push
jno
aas
into
fwait
xchg
mov
fmull
pop
test
andb
adc
mov
inc
add
lods
jmp
adcl
push
mov
jmp
adc
mov
xlat
push
hlt
jecxz
test
sbb
fldenv
subb
pop
shlb
pop
pop
repz
in
push
je
int3
idiv
outsl
mov
sti
scas
testl
and
mov
cli
rorl
jecxz
es
pusha
data16
jl
lcall
fsubl
xchg
data16
mov
in
outsl
je
mov
nop
mov
pop
hlt
cs
and
int
and
inc
iret
xchg
dec
jecxz
cmpsb
scas
test
or
add
mov
xorb
and
cmc
pop
mov
lock
jp
incl
sub
das
sub
adc
inc
pop
sub
mov
ret
dec
aad
mov
and
lea
out
cli
test
rcr
mov
or
mov
rcrb
ss
clc
cmp
mov
in
adc
loopne
arpl
out
cmp
lcall
sbb
popa
cmpsb
cmpsb
lods
xor
imul
dec
xlat
inc
jns
mov
das
mov
imul
pop
inc
loope
dec
and
outsb
push
cmp
out
aas
dec
seto
sahf
xor
lods
roll
push
shrl
aam
sub
cmp
sbb
or
shlb
cli
add
dec
call
jo
rcrb
loope
mov
jg
fidivl
sub
movq
test
ret
inc
mov
fs
mov
push
sbb
or
fsubrs
fsubrs
scas
lods
push
incl
cld
cld
jecxz
pusha
enter
movq
sbb
push
add
int3
popa
xor
mov
stos
sub
stos
xorl
repnz
pushl
clc
daa
jecxz
loop
and
cmp
mov
dec
popa
mov
imull
sbb
pop
dec
sbb
mov
xchg
pop
test
out
and
cmp
mov
sub
inc
das
stos
aaa
fisubl
cmpsb
pop
add
inc
test
test
inc
lock
outsl
add
das
loop
cld
cmp
mov
pop
dec
int
add
daa
sub
lahf
xlat
int3
dec
imul
lret
mov
dec
jl
aam
jno
inc
js
stc
push
ret
push
fidivl
divl
xor
cmpb
mov
adc
ja
push
loop
sbb
mov
arpl
lock
bound
push
adc
inc
push
jno
jmp
pushl
sbb
jne
pop
jne
mov
loop
mov
scas
test
insl
sbb
clc
mov
mov
pop
stc
mov
jbe
fstl
mov
fcoml
pop
mov
sub
jns
sub
daa
jb
push
les
adc
imul
je
add
stos
sbb
stos
pop
into
sub
std
sbbb
jno
mov
and
mov
sub
rolb
pop
jecxz
mov
lock
mov
sti
adc
sbb
cli
rorb
inc
mov
mov
adc
shrl
mov
nop
jno
sub
dec
fisubs
arpl
leave
ljmp
mov
cmp
icebp
fmul
imul
lock
mov
inc
push
add
cmpb
shrl
sbb
sub
cmpsl
in
test
add
jns
fbstp
cmpsl
mov
xor
int3
loop
sar
push
es
daa
jl
cld
jmp
mov
int3
test
ds
adc
jo
mov
jle
loop
and
lock
mov
xchg
sbbl
ss
in
lahf
aad
mov
mov
lret
loop
shrl
add
sub
push
mov
ds
or
lds
adc
fcomp
aad
add
outsl
jle
dec
pop
lahf
push
data16
leave
sub
mov
ffreep
dec
pop
frstor
mov
sub
xchg
cmc
lret
ja
lahf
imul
cmp
mov
push
popa
jge
push
sahf
pop
clc
cld
dec
rorl
add
fistpll
jbe
popa
add
pop
mov
das
sbb
aad
popf
scas
cmc
cmp
inc
pop
push
adc
not
dec
push
fnstcw
ja
jae
sbb
lock
add
push
xor
or
dec
rcr
adc
pop
push
pop
mov
cli
inc
es
or
sub
jno
in
insb
inc
rolb
mov
and
adc
ja
sub
and
mov
into
mov
subl
in
fmul
push
mov
and
dec
nop
loopne
lods
mov
push
cmp
js
push
push
ret
dec
and
in
jo
cmc
leave
jp
icebp
pop
fwait
mov
sbb
sbb
je
mov
mov
fistpll
lock
fsubrs
mov
inc
mov
jmp
push
lods
aas
lret
dec
imul
fdivs
push
pushf
sbb
inc
mov
test
int3
add
arpl
outsb
adc
lock
pop
jg
xorl
sahf
xor
mov
sbb
sub
dec
out
sub
mov
mov
cmp
jecxz
sbb
lods
add
inc
push
sub
jl
push
lret
cltd
loope
cmc
cmp
jge
pop
aas
or
ss
repnz
jl
cmp
push
sahf
xchg
fsubr
and
cwtl
out
jns
jb
mov
ret
into
mov
addb
sub
int3
leave
sahf
int
xchg
or
ss
push
movsb
fcoml
xlat
jb
xor
pop
js
fisttpl
into
loop
popa
jno
sub
pop
mov
lahf
jmp
sub
orl
loop
mov
leave
popa
mov
push
test
hlt
mov
test
mov
jecxz
pop
xchg
lods
sbb
push
icebp
out
push
testl
enter
jmp
es
aad
fisubrl
cmpsb
test
pop
adc
shlb
pop
mov
and
daa
lret
scas
bound
daa
mov
push
push
add
aad
xchg
or
fisubrs
push
pop
dec
data16
push
scas
pop
ret
or
add
xchg
push
add
enter
mov
mov
out
daa
xorb
imul
inc
cmp
xchg
mov
cmp
fimuls
cs
iret
aas
lea
or
pop
insl
ljmp
push
xor
out
dec
xchg
inc
dec
cmp
in
je
pop
mov
or
mov
xchg
je
jnp
arpl
adc
sbb
fs
adc
pop
cmpsb
and
or
mov
jg
mov
mov
adc
popf
movsb
dec
lds
mov
pop
pop
cmp
xchg
and
cwtl
mov
dec
in
adc
pop
fucomp
loopne
push
xor
pop
push
in
mov
xchg
pop
mov
mov
pop
xlat
fs
fbstp
out
push
or
pusha
hlt
js
clc
pop
insl
or
push
xchg
push
in
jnp
enter
add
repz
stos
faddl
test
jb
sbb
or
adc
sbb
fsubl
stc
mov
jp
sahf
adc
out
test
cmp
es
xchg
fcompl
mov
ds
test
lret
notl
mov
xor
stc
and
jl
mov
out
cltd
mov
idiv
sbb
fstl
or
lds
xchg
jns
push
xlat
mov
stc
dec
sub
cwtl
lahf
adc
cmp
pop
lods
or
adc
into
and
adc
popf
jae
xor
fidivs
jp
ja
into
xchg
shr
xchg
fimull
mov
dec
es
hlt
out
stc
lret
lea
cs
jbe
mov
cmc
mov
arpl
testb
out
movsb
mov
sbb
jge
mov
ljmp
insl
bound
aad
fisttpll
arpl
hlt
idivb
loopne
pop
fdivrl
cmp
dec
xchg
jmp
rcrl
xchg
int3
cmp
cmpsl
jo
dec
dec
cmpsl
jle
out
imul
cmc
and
dec
push
push
in
cli
inc
and
xchg
cs
mov
jge
dec
push
cltd
ja
les
or
ss
aas
xchg
cmp
aas
add
enter
inc
inc
sbb
mov
ficoml
int3
aam
mov
sbb
cmp
add
xor
dec
push
mov
decb
push
ficoms
scas
test
fdivp
push
cmpsb
cmpb
enter
and
cld
popa
cltd
nop
int3
adc
push
cld
test
cli
jae
jnp
push
orb
mov
cli
mov
shrb
loopne
sbb
stos
sti
repz
aaa
pop
push
xchg
lock
ds
test
inc
mov
add
cli
les
mov
out
les
dec
fsubl
jp
inc
push
das
shll
jl
icebp
mov
scas
and
sbb
mov
jecxz
imul
stc
xor
pop
mov
ret
add
or
pop
push
mov
repnz
jae
and
xchg
push
fsubl
jnp
dec
mov
adc
xchg
out
dec
loopne
and
and
xchg
subb
aas
adc
fisttpl
xchg
movsb
fistl
mov
movsb
pop
lret
sarl
inc
inc
in
test
clc
sbb
mov
xor
lods
mov
or
iret
dec
xor
mov
xchg
imul
shll
sub
pop
and
add
ret
pusha
push
ja
sub
addb
das
in
push
sbb
inc
mov
outsl
mov
out
xor
test
hlt
in
mov
leave
and
lds
test
hlt
jmp
and
bound
test
fldt
pop
mov
jbe
enter
cs
xchg
mov
das
es
xor
out
xlat
adcl
push
push
mov
fcoms
inc
mov
or
dec
imul
push
das
xchg
je
popf
pusha
pop
xor
int
fistps
push
loop
dec
sub
dec
sub
rdpmc
ret
clc
xlat
fs
or
adc
clc
imul
stos
stc
hlt
lahf
cld
test
push
in
in
xchg
std
and
inc
or
mov
cwtl
das
add
jbe
js
lret
xor
mov
out
mov
mov
jge
inc
fstpt
or
mov
outsb
popa
mov
daa
imul
mov
lahf
push
mov
jns
mov
roll
or
push
in
rcrl
stos
dec
fnstcw
ljmp
cmp
loope
pop
jb
xor
and
loop
push
test
aaa
xor
push
cld
and
cmp
sbb
sub
add
ss
loope
mov
mov
out
test
inc
lods
mov
xchg
rol
add
js
call
and
gs
fwait
jp
mov
jmp
movsl
ja
in
fimuls
aam
fstl
stc
outsl
out
sbb
cmp
daa
insl
jmp
or
xchg
adc
jne,pn
jne
sbb
and
xor
leave
out
inc
xchg
repz
jo
imul
lea
push
or
insb
jl
jmp
scas
push
fadds
ret
sbb
lods
std
mov
xor
jb
sub
cmpsl
outsb
mov
xor
ret
repz
push
dec
lret
mov
addr16
mov
sti
mov
aas
lods
mov
dec
jecxz
fmull
arpl
xchg
ds
push
mov
cmp
lock
mov
jae
adc
addr16
rcrb
lods
cmpl
mov
push
cmc
fmulp
andb
out
push
lcall
pusha
adc
inc
inc
mov
push
notb
pop
sbb
leave
aam
add
int
push
in
dec
cltd
cmp
mov
or
mov
cmp
mov
aam
rclb
jmp
jb
push
adc
stc
mov
mov
imul
cs
daa
in
xchg
inc
and
fnstsw
movsl
adc
pusha
sbb
pop
mov
pop
push
mov
cmpsl
fwait
and
push
mov
loop
pop
add
pop
push
scas
and
imul
insl
push
loope
pop
push
and
loop
inc
filds
jmp
xchg
mov
add
inc
mov
mov
dec
int
shll
xchg
paddq
out
or
outsl
fmull
mov
lcall
loope
mov
insl
or
int
push
aad
lods
inc
fdivl
mov
popa
mov
shrb
pop
push
or
sub
xchg
and
mov
xlat
pop
sbb
xchg
or
cs
add
add
mov
outsb
adc
sbb
idivl
loopne
mov
push
mov
insl
jae
ljmp
fwait
mov
int3
shl
and
or
push
inc
and
xchg
push
ljmp
icebp
sub
xchg
arpl
adc
dec
sbb
loop
mov
aad
mov
mov
in
sti
lock
cmpsb
jne
inc
mov
cwtl
nop
stos
jno
pop
icebp
lahf
out
cs
das
mov
sbbl
pop
sbb
xchg
lret
dec
into
sahf
mov
jge
or
pusha
stc
inc
ljmp
stos
xchg
add
cmpsl
sbb
jg
or
adc
outsb
lea
add
mov
cmp
mov
xchg
lods
xor
js
movsb
orb
test
jl
sub
xchg
test
mov
cs
test
and
and
loop
cwtl
and
jbe
ret
ss
add
push
test
adc
roll
bound
dec
jns
sbbb
fwait
into
cmc
push
xchg
or
aaa
lods
das
loopne
out
and
daa
in
ret
adc
inc
cmpsb
clc
in
aam
loop
push
sbb
or
frstor
std
sbb
fistpll
pop
jae
push
imul
pop
lcall
mov
fstpl
xchg
pop
jge
sbb
and
dec
mov
xchg
mov
pushf
in
ds
mov
xchg
js
push
adc
int
xchg
xchg
push
cmp
xor
pop
push
out
shl
mov
mov
faddl
icebp
xchg
inc
fstpt
fiaddl
fildl
xchg
std
insb
test
inc
sbbb
push
cwtl
in
sahf
jmp
mov
pop
adc
xor
cmpsl
mov
pop
mov
fisubl
int3
cmpsl
sti
clc
fcmovnb
decb
stos
clc
out
insb
incl
adc
fs
dec
add
fldenv
fcomi
jecxz
or
dec
mov
or
dec
mov
jmp
mov
bound
mov
jl
dec
stc
adc
push
or
std
xchg
cmp
or
scas
stc
xor
inc
hlt
in
stc
mov
or
aad
jl
add
jp
flds
push
add
push
imul
rclb
sbb
aam
pop
out
xor
addr16
xchg
fdivs
cmp
and
sub
insb
mov
sar
sbb
insb
lods
sub
lret
arpl
pop
stc
jg,pn
mov
iret
fadd
mul
push
jnp
adc
in
imul
enter
cmpsl
addr16
jae
pop
cltd
dec
lret
inc
rorb
push
xor
add
sub
icebp
or
cmp
xchg
and
cltd
test
sbbl
inc
add
test
cmpsl
xor
push
xor
add
push
and
xchg
jle
mov
std
test
add
xor
testb
add
and
cmp
mov
lds
int
movsl
and
mov
mov
or
loopne
insl
sbb
pop
add
leave
dec
call
iret
popa
cli
imul
jecxz
andl
or
adc
ret
std
mov
sub
test
mov
adc
je
pop
and
or
mov
imul
adcl
popf
cmpsl
mov
fdivr
lods
fiadds
xor
mov
dec
mov
mov
push
fldenv
mov
mov
clc
into
shll
or
sbb
jae
sbb
pop
cmp
pushw
inc
filds
repnz
adc
stos
fnsave
add
jo
mov
in
mov
jnp
and
adc
out
mov
inc
push
cmp
stos
pop
push
pop
mov
cwtl
mov
xchg
push
clc
jmp
cmp
xor
or
mov
test
fnsave
andb
dec
daa
leave
mov
gs
cli
lds
xor
adc
fst
mov
scas
pop
jno
pushf
cmp
int3
cmp
cmpsb
jb
ret
cli
fisttpl
cmp
sub
dec
inc
stc
mov
cmpsb
stos
add
cmpsl
lds
lret
nop
pop
seta
movl
pop
sub
loope
insb
mov
pop
hlt
dec
pop
testl
fisubs
lret
test
mov
cmp
xor
cs
popf
outsb
stos
iret
cmp
xor
rcr
pop
push
icebp
pop
fidivrs
lock
pop
int3
lret
lds
fisttps
cmovns
imul
rclb
jno
int3
adc
jecxz
pusha
scas
fiaddl
cmc
jnp
scas
pop
adc
dec
pop
pop
call
mov
jb
lods
mov
jns
push
dec
push
loope
ret
jbe
cmpsl
xor
mov
into
ds
ds
call
imul
pop
and
repnz
dec
inc
push
sub
dec
pop
xchg
jb
stos
test
repz
pop
mov
add
jp
push
adc
es
cmc
sub
icebp
sub
push
sub
nop
mov
xor
pusha
jae
data16
xchg
mov
xchg
sub
nop
out
jnp
mov
or
sbb
pop
repz
nop
sub
stos
cmc
sub
inc
add
adc
sub
add
mov
mov
loopne
cmp
rcrb
inc
push
cs
xor
inc
rcrl
std
test
push
mov
adc
inc
xlat
sub
lahf
mov
imul
pop
cmpsb
notb
or
adc
xor
push
sub
pusha
xchg
testl
lods
add
stos
je
clc
jle
aaa
or
inc
mov
shl
mov
xorl
pop
mov
mov
in
push
push
adc
rorb
inc
sbb
cmpsb
aam
ss
cmp
lds
in
sbb
out
pop
and
scas
ss
ret
jbe
aaa
lods
inc
sahf
nop
enter
inc
fcmovnb
jno
lods
inc
mov
mov
je
int
test
mov
mov
pop
xchg
fsubl
pushl
cmc
inc
adc
fisubrs
dec
pop
push
mov
push
enter
mov
int3
cmpsl
or
pop
or
jmp
fisttpll
flds
bound
jl
jg
in
into
inc
xchg
xchg
xchg
fwait
sbb
push
pop
dec
das
dec
dec
aaa
pop
pop
mov
daa
sbb
dec
popf
jnp
push
cmp
bound
out
cmpsl
mov
pop
movsb
test
ficomps
mov
jle
push
add
mov
lock
call
mov
jae
mov
cwtl
sar
mov
sub
mov
ljmp
sub
leave
mov
xor
shlb
adc
daa
adc
jg
fnsave
or
and
loopne
push
or
mov
shrl
pop
fimuls
popl
mov
mov
imul
dec
sub
sti
fsubrs
enter
js
lcall
push
mov
sub
mov
sbb
and
idivb
arpl
scas
mov
sbb
push
popf
stc
sub
fs
in
sti
cmp
mov
cmpsb
call
das
out
mov
jns
shlb
xor
pop
mov
mov
flds
mov
fldt
pop
add
lret
notb
pop
mov
sub
cmova
push
sbb
sub
dec
insb
jmp
jle
jmp
xchg
insl
movsl
sub
push
or
stos
ret
adc
xlat
sbb
lods
xor
outsb
scas
hlt
or
fildl
cmp
mov
cmp
push
gs
ljmp
and
cmc
mov
lcall
enter
adc
cmp
adcl
mov
lcall
jnp
add
push
icebp
imul
pop
shl
popf
push
fxam
movsl
addr16
call
cmpsb
call
cltd
fiaddl
fs
shlb
inc
and
jae
int3
std
mov
mov
xchg
cmp
push
nop
sti
rclb
jmp
jmp
ret
xor
mov
and
inc
cmpsl
out
mov
jp
scas
test
and
ret
push
arpl
cmpsb
popa
push
imul
cmovo
sti
xchg
stos
mov
test
les
aam
push
stc
lods
lcall
cmp
shr
nop
out
cmp
repnz
enter
addl
arpl
cmp
xor
loope
test
out
mov
lahf
cmp
ror
adc
insl
iret
movsl
jno
xchg
xchg
aaa
sub
ss
mov
lcall
fs
das
and
xchg
es
pop
imul
xchg
sub
inc
loopne
add
dec
rcrb
sub
xor
fisubrl
sub
jg
es
cmpsb
and
or
sbb
ret
xchg
lahf
test
sub
or
fistl
jno
mov
fsubrl
xor
mov
imul
fwait
jo
hlt
push
push
xchg
mov
inc
pop
dec
jp
cltd
imull
fxch
and
fcoms
pushf
enter
dec
in
inc
xor
lcall
cmp
aad
mov
shlb
push
cld
dec
push
cmp
mov
lret
pop
ds
stos
icebp
sbb
jnp
mov
cltd
cmp
imulb
cmpsb
movsl
sub
insl
add
and
adc
sbb
insb
jmp
add
mov
sbb
dec
addb
stc
pushf
lahf
ss
cmp
mov
lcall
mov
test
jmp
xor
ficomps
jle
xchg
frstpm(287
pop
mov
inc
xor
aad
jmp
adc
jle
in
fxch
xchg
dec
fisttpll
and
inc
cmp
lahf
lods
mov
in
sub
ljmp
jg
mov
sbb
mov
jbe
test
inc
sub
lock
aas
ljmp
subb
leave
sub
adc
mov
popf
jge
or
xor
xchg
xchg
mov
mov
jne
add
ja
pop
pop
or
arpl
jmp
icebp
shrl
push
and
arpl
xor
cltd
js
sti
loope
out
push
push
and
jae
testl
insl
or
pop
mov
push
sahf
dec
or
xor
adc
and
sub
shrl
rolb
int
xlat
cli
sbb
and
push
jae
scas
cmp
ficompl
mov
call
lds
cwtl
mov
and
int
into
add
dec
sbb
into
mov
mov
notb
repz
push
add
sti
add
pop
arpl
aam
aam
sub
adc
je
icebp
xor
mov
movsb
scas
scas
pop
sub
sub
imul
mov
dec
and
push
les
jbe
push
out
aas
mov
popf
fwait
js
lret
scas
lahf
pop
xchg
rcl
sti
or
sub
cld
add
dec
jecxz
xchg
outsl
add
out
inc
sahf
mov
mov
cs
ror
fmull
and
imul
mov
repz
sti
out
movsl
inc
push
xchg
int
sbb
movsl
pop
xchg
xor
inc
push
push
cltd
xor
incl
leave
xchg
lcall
xchg
or
aad
push
loop
push
pop
push
add
pop
shrl
ja
pop
adc
nop
add
les
add
and
es
push
aad
into
mov
pop
push
jno
sub
hlt
aas
sahf
cld
xchg
outsb
movsl
adc
sti
push
dec
lods
cmc
mov
out
cmp
jne
xor
stos
out
or
jbe
imul
and
adc
loop
cmp
sbb
repnz
jbe
dec
jo
ss
add
rcrl
jns
adc
push
in
in
gs
daa
dec
pop
or
lds
xor
test
and
js
jbe
adc
adc
out
cli
xchg
push
push
add
lret
test
xor
es
pusha
mov
out
hlt
ja
insl
pop
lods
ret
adcb
add
cmp
and
loopne
sbb
pushf
mov
and
or
mov
mov
mov
shrb
lcall
pop
imul
jl
lahf
lret
mov
sbb
aas
cmpsl
xlat
ja
fwait
xchg
dec
cmpsb
xchg
mov
mov
cmp
outsl
out
movsb
mov
cmp
int3
jno
ret
and
pop
leave
push
jle
mov
test
in
data16
scas
outsl
pop
bound
xchg
jbe
test
xor
sbb
loope
xor
lock
cli
add
daa
add
push
xchg
dec
inc
filds
rcrl
aaa
inc
test
in
ss
push
int
adc
sarl
mov
push
cmp
adcb
push
xor
inc
sbb
cmp
xor
and
sub
or
jecxz
sbb
fisubrl
jecxz
addr16
dec
jb
pop
jbe
in
and
pop
lret
mov
std
pop
in
cmp
lods
fildll
pop
xchg
jl
cwtl
ret
xchg
out
xchg
sub
lret
push
rorb
pop
inc
adc
out
movsb
dec
jns
mov
clc
adc
sbbl
imul
mov
sbb
scas
add
xor
xor
sarl
sbb
test
sbb
dec
jecxz
inc
jb
or
dec
ffree
jp
in
lods
or
pop
ja
and
stos
call
and
sub
rcrb
or
cmp
and
mov
adc
mov
pop
jecxz
scas
pop
mov
in
out
dec
sbb
aas
lock
add
mov
mov
cmpsl
xor
xor
dec
adc
push
mov
mov
cli
dec
xchg
pop
cld
xor
sbb
maskmovq
imull
mov
arpl
js
adc
mov
inc
mov
or
ja
sub
or
cmp
add
ja
mov
shlb
xorl
jnp
cmpsl
arpl
insl
fs
test
xchg
mov
jnp
and
test
repnz
xchg
pop
dec
jmp
or
je
xor
or
mov
push
ror
mov
test
jle
jmp
push
sbb
je
fildl
add
stos
pop
push
shrl
dec
sbb
xchg
ja
and
mov
mov
out
mov
mov
iret
pop
xor
stos
xor
sti
ret
in
xor
sub
pop
adcb
sbb
stc
jnp
sahf
dec
orb
fwait
cmp
xchg
push
mov
cltd
das
mov
and
loope
js
or
out
shr
or
jp
in
insl
ds
sbb
and
mov
mov
cmp
sbb
sbb
mov
je
out
daa
test
les
jbe
movsl
jbe
or
daa
mov
pop
sbb
repz
xor
add
add
insb
repz
and
xchg
call
stos
push
cltd
rcrl
xchg
jae
inc
cld
dec
push
popf
into
inc
pop
cmp
jg
flds
pop
mov
aad
mov
aam
dec
add
ret
xchg
push
out
xor
xor
sub
fimull
movsb
mov
push
and
mov
and
call
add
mov
cmpb
jecxz
xor
dec
and
ljmp
andl
mov
fnstenv
adc
into
int3
jmp
jne
faddl
cmpsl
scas
jp
ret
dec
push
cld
inc
shll
mov
lahf
mov
mov
ficompl
mov
in
xlat
shl
and
mov
xlat
dec
lret
in
pop
or
mov
xor
jnp
and
inc
push
aaa
xchg
and
int3
cli
mov
mov
jno
movsb
xchg
imul
aad
cs
cmpsb
into
cwtl
jecxz
jns
mov
dec
popf
inc
imul
mov
xor
testb
xchg
leave
cmp
repz
xor
loopne
add
jmp
xchg
shrl
fdivp
lcall
repnz
jb
and
push
jns
sar
decb
sahf
fnstenv
sub
fs
cmpsl
sbb
jne
dec
sub
int
outsl
xchg
add
aas
leave
les
je
cmpsl
xlat
sbb
and
iret
cmpsb
mov
popa
push
cmc
xchg
xor
rcrb
sti
lcall
aam
mov
dec
icebp
lcall
loop
sub
iret
xor
dec
and
dec
inc
scas
test
inc
shrb
adc
lret
dec
mov
sub
jecxz
test
sub
xor
sbb
aad
in
or
nop
sbb
stos
cs
jmp
cli
test
into
adc
or
rolb
inc
push
loopne
outsl
cli
sti
f2xm1
jne
push
out
ret
xchg
jb
icebp
xchg
mov
push
cld
fcompl
pushl
lret
cmpsb
int
mov
mov
test
push
push
outsb
push
stc
xchg
enter
push
std
push
sahf
and
sbb
lret
or
inc
cli
mov
sti
test
inc
or
in
pop
movsl
and
repnz
fisubs
push
fs
xchg
pop
shrb
fcomp
in
lock
test
mov
icebp
notb
data16
arpl
shlb
jle
mov
inc
imul
push
mov
push
iret
sbbb
sub
adc
inc
and
mov
and
pop
adc
nop
clc
mov
add
flds
clc
sti
sub
mov
mov
int3
popf
inc
add
shlb
pusha
adc
es
jle
add
lret
addr16
xor
jns
cli
xchg
lret
adc
lock
push
sub
mov
xchg
push
dec
xor
pop
xchg
jae
sbb
mov
sub
cmp
cmpsl
movl
aad
test
or
jl
movsl
rcll
shl
test
cs
outsb
pop
push
shll
jne
xchg
mov
aaa
fnsave
je
mov
push
shr
and
cmp
dec
inc
loop
testb
int3
push
out
mov
addr16
fwait
jp
add
sbb
push
or
sbb
hlt
movsb
dec
inc
or
pop
pop
jecxz
pop
push
push
cmp
ljmp
xor
popf
and
orl
insb
ret
mov
xor
and
cmc
rcrl
movsb
dec
js
ror
mov
cmp
adc
xchg
stos
xor
sub
ret
ljmp
faddl
or
imulb
out
lock
xchg
cmpsl
pop
xchg
add
or
mov
push
jmp
and
or
iret
fildll
pop
iret
cli
rcll
mov
fstps
xchg
sub
cmp
sub
pop
inc
int
dec
roll
sahf
pop
inc
or
nop
xor
int3
xor
insb
push
jl
cmp
aad
gs
and
dec
scas
xchg
jo
imul
outsb
xor
pop
mov
push
mov
rclb
dec
inc
test
das
je
xchg
bound
mov
sub
movsl
and
inc
mov
pop
sub
ss
pop
popf
xor
and
int
push
in
popf
imul
shlb
fstps
mov
and
xor
repnz
negl
test
and
ja
adc
jbe
filds
lock
jnp
mov
cli
popa
std
fwait
dec
push
push
fnstsw
add
insb
pop
aaa
add
push
inc
insb
push
sbb
add
popa
mov
icebp
jb
xlat
mov
testb
les
andb
nop
das
jo
add
imul
push
loope
dec
jge
scas
jbe
pop
adc
lock
das
mov
xchg
xor
sbb
push
and
jbe
dec
fstps
arpl
cld
icebp
stos
push
dec
and
sbb
ret
push
cltd
dec
and
test
hlt
addb
adc
jg
sub
in
in
and
sahf
adc
push
out
shrl
jl
sub
in
int
xchg
mov
loop
out
aad
inc
pop
gs
dec
std
push
cli
push
xor
int3
dec
nop
hlt
shlb
cs
mov
je
add
fldt
xchg
pushf
pop
je
jne
inc
dec
call
add
jo
jno
or
mov
lcall
inc
and
mov
and
xchg
movsb
pop
fimuls
xchg
in
call
adc
push
pop
mov
inc
fst
pop
mov
outsb
lea
andb
les
lret
jge
mov
ds
sbb
cmp
jp
jnp
icebp
lea
pop
insl
cmpl
sti
pop
lret
mov
int3
mov
or
push
inc
sub
fdivrp
or
iret
inc
add
inc
fsts
ljmp
mov
cmp
pop
icebp
mov
mov
mov
adc
xor
movsb
or
int3
movsl
incb
mov
inc
cwtl
outsb
adc
dec
hlt
rol
xor
inc
jp
data16
or
dec
add
mov
fidivl
and
fistpll
mov
xchg
mov
pop
popf
mov
aad
add
xchg
mov
test
jle
das
mov
sbb
mov
sahf
js
inc
cmpsb
push
pop
loopne
outsl
je
imul
sub
mov
jecxz
xchg
inc
xchg
test
aaa
cmpsl
out
scas
scas
lds
lock
test
in
aad
jb
fistl
mov
jbe
leave
cmpsl
sub
sbb
movsb
pop
jno
sbb
fcmovnbe
push
ss
and
fisttpl
mov
xor
inc
jp
je
xchg
xchg
shrb
ljmp
iret
and
out
jg
fistpll
cmp
dec
add
das
cmp
aas
daa
push
cmp
add
repz
or
inc
dec
push
sub
dec
pop
ss
dec
sub
push
inc
test
bound
iret
outsl
jns
sbb
lods
mov
cmpsb
push
push
mov
lds
gs
fildll
out
cmc
ja
outsl
call
push
int3
arpl
xchg
inc
lgdtl
inc
or
loop
ds
add
sub
cmp
inc
add
cmp
mov
inc
mov
xchg
mov
aam
mov
and
daa
xchg
mov
or
sub
sub
jl
pop
mov
into
sbb
xchg
das
dec
sbb
rclb
xchg
scas
xchg
stos
test
mov
fbld
arpl
es
and
stc
enter
cmpsb
pop
push
inc
loopne
imul
popa
xchg
mov
js
and
in
lret
adc
cld
aaa
mov
mov
push
shrl
subl
in
aad
jl
ja
mov
jbe
pusha
jo
andl
sahf
scas
or
call
ss
cs
mov
pop
xor
ret
push
test
and
dec
jno
or
adcb
cld
pop
fldl
out
pop
or
popf
out
fwait
xor
pop
pop
adc
sbb
xor
pop
pop
iret
je
mov
in
cmpl
sub
and
push
xchg
stc
test
scas
insb
pop
push
faddl
sbb
out
arpl
xor
adc
lods
push
and
pop
popa
sbb
cs
ljmp
ss
clc
gs
iret
lea
es
aad
adc
mov
mov
push
dec
mov
sbb
jns,pt
popf
mov
push
enter
and
mov
adc
movsb
pop
into
inc
addr16
jbe
add
scas
adc
out
shlb
mov
out
jle
ret
int3
pop
stos
sub
mov
add
jl
bound
fdivr
push
jbe
sub
push
pop
cmp
adc
mov
or
aas
test
jmp
mov
push
jne
lods
lds
pop
cmp
cmp
mov
mov
mov
leave
cmp
and
and
mov
sbb
negb
cmp
notb
repz
dec
sbb
lcall
mov
enter
push
shrl
mov
add
xor
lret
icebp
add
xchg
rol
fnstenv
cmc
clc
or
popa
lods
cmpsl
mov
add
fucomi
popa
adc
push
adc
cmpb
cld
sbb
mov
ret
stc
dec
adc
pusha
lds
add
xor
pop
clc
into
movsb
sbb
adc
inc
mov
mulb
test
std
xchg
in
mov
mul
bound
popf
pop
adc
idiv
inc
adc
pop
inc
fwait
loopne
push
or
cmc
xor
int
icebp
sub
sub
std
subb
sub
cmpsl
mov
cli
aas
movsl
push
adc
jae
mov
mov
adc
xor
mov
inc
mov
inc
sbb
mov
lcall
cmp
imul
jb
lods
into
add
sub
jno
scas
push
outsl
jne
dec
or
cmp
pop
pop
push
pop
jb
pop
pop
pop
pop
dec
out
xchg
or
xor
cli
pop
int
sub
filds
mov
jbe
fcmovbe
fstps
icebp
jg
shrb
mov
rcll
cli
sbb
das
test
xchg
push
out
or
xchg
test
sbb
jo
test
xor
js
mov
sub
popf
xchg
sub
scas
mov
imul
iret
pop
pusha
xchg
xor
push
push
xor
xor
dec
push
pop
popa
loop
cmp
push
jmp
nop
test
mov
jnp
and
fs
shrl
push
mov
inc
adc
rclb
push
movsb
out
jge
lahf
jp
in
dec
sbb
xchg
cmp
xor
loopne
inc
add
push
test
inc
stc
xchg
add
mov
outsb
sbb
sbb
add
xchg
sbb
call
rol
pop
jle
push
pop
gs
sub
pop
lods
mov
xchg
pop
orb
lret
and
xchg
pop
orb
and
test
xor
call
int3
inc
clc
in
test
inc
ja
inc
jo
dec
adc
push
push
push
jb
cmp
mov
mov
sub
cli
ret
or
aas
decl
push
not
lds
add
in
mov
push
add
jo
test
push
pop
data16
xchg
aam
push
ss
testb
addr16
outsb
pop
mov
add
dec
repz
lahf
push
lret
mov
lahf
xchg
and
nop
push
dec
mov
aas
insb
dec
sbb
lea
cwtl
in
out
push
out
test
cmpsb
jp
aas
add
std
outsl
mov
bound
mov
neg
out
jo
add
ret
xchg
das
mov
mov
inc
and
cmpsl
or
rorl
dec
mov
dec
sub
push
and
push
dec
lods
jle
mov
and
sub
add
test
sbb
ret
adc
sbb
test
dec
or
xor
movb
push
jp
popa
das
arpl
dec
pop
add
fcmovnb
mov
ja
xlat
jnp
lcall
sub
sub
fildl
xlat
sub
pop
enter
pop
repnz
mov
in
fistps
dec
insl
mov
lock
mov
dec
shlb
loope
jb
dec
adc
and
aam
rcrl
cli
push
outsb
imul
in
mov
mov
pushf
xchg
cmpsl
add
scas
daa
pop
std
shlb
add
sbb
mov
test
test
mov
adc
mov
xchg
out
jns
push
dec
lods
push
push
mov
push
add
neg
pop
or
popa
or
ret
jecxz
add
test
mov
jbe
sbb
push
sub
jne
or
repz
sbb
mov
lock
pop
faddl
push
pop
sub
into
mov
scas
cwtl
cltd
xor
adc
mov
push
das
and
push
outsl
inc
subb
mov
cmc
lret
and
fnstsw
in
jle
pop
ds
imul
nop
bound
xor
jge
sbbl
mov
lcall
push
repnz
sbb
mov
cld
test
rol
into
loope
mov
push
jp
mov
pop
cmc
fwait
jbe
les
cld
test
jl
lret
jns
in
test
xchg
lret
sti
jnp
add
sbb
add
sub
ret
xor
adc
outsl
sub
sbbl
mov
sub
leave
push
adc
pushf
and
jne
frstor
rorb
pop
adc
sub
push
clc
jae
in
cmp
and
sbb
jmp
leave
fnstsw
test
fisttpll
inc
fists
cwtl
xor
aaa
and
negb
pop
sahf
sbb
testl
ret
cwtl
rcll
ss
jmp
movsb
jp
add
out
fidivs
data16
add
lret
xor
out
push
fs
mov
je
es
js
jecxz
adc
cmpsb
or
push
rcll
xlat
jb
pop
sbb
sahf
stos
mov
pop
add
int3
pop
loope
cmp
or
push
mov
add
add
push
cltd
cltd
xchg
mov
cli
fistpl
mov
inc
mov
std
les
rcrl
cwtl
jb
call
imul
jmp
into
jnp
add
icebp
dec
mov
repz
repnz
pop
or
xchg
test
sti
sbb
xor
in
jae
icebp
dec
loopne
cld
sti
jecxz
mov
lock
lea
and
and
in
xor
leave
hlt
add
and
aam
inc
jne
add
pop
shl
sbb
hlt
pushf
lcall
and
adc
jno
out
push
sbb
push
ja
ficoms
jl
pop
add
das
mov
pusha
pop
jno
pop
mov
int3
xor
jne
addl
push
mov
xor
stos
pusha
inc
addr16
cld
cmc
add
pop
rorb
cmp
fwait
mul
bound
jno
rolb
jo
jno
leave
pop
lcall
ret
rcll
mov
and
push
inc
cmp
sahf
adc
mov
aaa
mov
sub
ljmp
inc
outsl
jnp
mov
adcl
andl
cld
adc
pop
lcall
add
add
mov
subl
push
gs
shlb
and
addr16
and
ficomps
or
mov
sub
movsb
fbld
and
mov
sbb
mov
adc
inc
call
sub
jecxz
aam
scas
rcr
sbb
faddl
xor
cltd
dec
shll
xchg
pop
sub
jnp
inc
and
arpl
push
mov
decl
stos
pop
inc
push
jg
or
mov
xchg
mov
jge
sub
call
fwait
and
packuswb
daa
xchg
int3
or
out
cmc
and
stos
gs
and
pop
ja
inc
sub
mov
std
out
mov
mov
nop
rcll
call
and
or
insl
fbstp
cmpsb
iret
add
sub
dec
push
mov
or
out
add
dec
push
mov
mov
shrb
mov
jl
sbbb
adc
or
mov
cmp
fisttpl
aas
xchg
mov
xchg
das
mov
dec
sub
dec
xor
jo
pop
pop
mov
pop
push
pop
sbb
aaa
fucom
ret
cmp
paddsb
or
int3
out
mov
jae
adc
add
loopne
aad
push
sbbl
pop
push
cmp
add
ret
aaa
test
adc
add
in
push
aas
lods
popa
insb
jae
pop
jnp
cmc
mov
shrb
ffree
imul
xchg
ja
pop
jecxz
sbb
push
out
fs
inc
pop
inc
addr16
xchg
dec
in
add
les
pop
add
add
dec
out
mov
movsl
in
mov
jg
call
shll
fwait
push
cmc
sbb
enter
jmp
push
jne
and
arpl
add
aam
insb
nop
test
xor
pop
adc
inc
mov
mov
xor
lret
sbb
cmovo
xor
xchg
jno
pop
sarb
or
mov
push
out
mov
xchg
mov
sqrtps
or
xchg
repnz
mov
cli
push
lretw
xchg
cmp
pop
cli
aam
in
jmp
xchg
std
or
fsubrl
fistpl
insb
cmp
pusha
mull
xchg
and
lcall
lret
pop
aas
fdivr
das
loope
ja
pop
aas
ficoml
cmpl
dec
push
adc
xchg
ds
mov
mov
cmpb
xchg
je
lahf
imul
jl
outsl
mov
adc
jno
idiv
jmp
jge
and
test
push
ss
and
mov
loop
test
ret
fmuls
repnz
call
mov
lock
fmull
lods
mov
mov
cmp
movsl
cmp
inc
in
and
dec
test
push
jge
mov
lret
loopne
test
jnp
sbb
jae
enter
lahf
or
data16
xchg
mov
cmc
sub
add
inc
stc
scas
and
mov
mov
mov
ss
or
test
dec
jbe
mov
xchg
xchg
inc
and
xor
clc
mov
sub
xor
xor
sub
sbb
adc
nop
or
icebp
out
cmp
push
in
les
orl
aaa
sub
mov
mov
push
testl
dec
pushf
shr
scas
fstps
mov
scas
push
sub
dec
xchg
jp
jae
lret
push
insb
lcall
jecxz
jecxz
sahf
sti
and
or
loope
inc
sub
int3
popa
mov
push
clc
cwtl
cld
rolb
jbe
rcr
std
push
sub
aad
inc
addr16
shl
shrl
xlat
ret
out
inc
sbb
cmp
jl
in
cmc
fimull
dec
movsb
sub
dec
into
aas
xlat
push
pop
pop
cmc
in
imul
es
xor
test
pop
rolb
pop
cmp
lds
xor
jl
jnp
jge
sub
mov
icebp
mov
xor
dec
jle
loopne
in
fadds
xor
mov
jo
fcompl
mov
xchg
popf
daa
rcr
test
ss
pop
or
mov
jae
movsb
or
mov
aaa
popa
call
or
lahf
mov
scas
cmp
adc
sub
jge
repnz
jle
cmp
adc
jle
cmp
push
insb
mov
popa
scas
andl
js
out
adc
pop
cwtl
jl
out
mov
arpl
fs
mov
fs
fcompl
or
jle
cwtl
hlt
pop
and
ss
hlt
pushf
in
mov
scas
rorl
and
imul
jb
subb
jg
iret
mov
ds
cmp
rcrl
stos
test
ficompl
fstps
fstp
add
and
mov
xchg
andl
push
mov
subb
push
pop
sti
scas
or
in
insl
mov
cmp
add
dec
or
pop
dec
mov
push
xor
or
in
mov
pop
rcrb
push
mov
insb
enter
or
pop
insl
mov
pop
sbb
push
inc
pop
mov
addr16
test
mov
xchg
std
sbb
inc
pop
inc
sub
pop
lds
jle
cwtl
add
lods
fisttpl
xchg
mov
scas
cwtl
jle
hlt
jo
rolb
or
lsl
das
adc
addr16
lcall
push
push
jmp
scas
xchg
jo
xor
repnz
jmp
jecxz
jmp
inc
dec
cmp
mov
lods
test
add
filds
xchg
ljmp
mov
and
push
lret
aad
fistps
je
xchg
icebp
jmp
cmpsb
push
jmp
shl
push
daa
dec
pop
or
jae
jmp
mov
cmp
adc
lock
shlb
lock
adc
push
lret
popl
adcb
push
cmc
outsl
lahf
movsl
ds
in
addr16
imul
cld
loop
mov
cltd
jg
ja
in
push
mov
xchg
and
push
pop
mov
daa
fwait
pushf
xor
icebp
add
add
stos
jns
adc
ret
aam
fs
addr16
inc
js
jmp
jmp
cmpsb
das
iret
cmp
inc
lahf
jb
movsb
dec
add
fildll
popf
imul
sbbl
pcmpeqd
push
cltd
mov
sarb
sbb
dec
xchg
fucomip
dec
movsb
or
scas
add
movsl
xor
jp
ljmp
cwtl
cmp
pop
xchg
cmp
push
cmp
das
lahf
orb
dec
and
aam
mov
lret
das
stos
in
and
ja
leave
loope
sahf
jecxz
inc
jp
cmp
mov
out
inc
mov
inc
dec
mov
xchg
mov
inc
mov
xor
les
jo
addl
es
imul
lret
test
mov
or
cmp
push
adc
jp
adc
cwtl
jno
cmpsl
push
hlt
push
xor
lret
mov
xor
leave
sbb
mov
fidivrs
ss
dec
cwtl
hlt
cmp
popf
loope
ds
dec
repz
fmuls
and
and
add
inc
add
int
jbe
push
xor
adc
in
mov
sub
ret
setns
mov
xchg
int3
jg
jnp
and
xchg
inc
xor
dec
leave
out
mov
ret
nop
add
addr16
pop
sbb
sbb
test
add
ret
testl
lcall
insl
pusha
dec
mov
sub
stc
mov
or
clc
daa
pop
imul
mov
cmpsb
adc
jmp
mov
cmc
dec
add
popf
popf
pop
les
xlat
jno
xor
mov
jns,pt
jbe
mov
js
sbb
xlat
stc
jg
fcmovu
gs
mov
lods
sub
xchg
fadd
cmc
inc
add
lods
cmc
lea
fbstp
test
sbb
sbb
cwtl
fildll
orb
out
in
ds
das
jmp
loope
or
mov
jae
fwait
xor
sub
pop
jne
pusha
mov
mov
ja
or
adc
cli
nop
mov
push
inc
pop
shrl
mov
cmpsb
lods
in
mov
mov
sbb
rolb
cmp
jb
sahf
bound
push
add
popa
add
add
bound
rcll
push
shrb
enter
add
mov
iret
cli
cli
push
test
push
and
or
push
add
jl
inc
pushf
jle
jmp
inc
xchg
mov
lock
push
mov
mov
xchg
loope
jmp
add
sub
dec
pop
cmpb
arpl
out
fistpll
push
cld
sub
dec
jecxz
test
cwtl
test
xorb
bound
mov
jl
mov
orl
push
or
push
rclb
stc
mov
test
cmp
outsl
in
insb
outsb
int
xchg
xor
stos
and
outsb
xorl
xchg
xor
or
xchg
dec
xor
cld
mov
xor
lods
mov
fidivl
sti
add
inc
movsl
mov
fsub
pop
pop
scas
ljmp
add
xor
mov
ret
cmp
fldenv
lcall
adc
popa
xchg
cmpsl
mov
into
mov
push
xchg
mov
jmp
arpl
faddl
insb
cmp
sub
insb
mov
add
adc
movsb
scas
cltd
repz
jle
and
pop
aas
nop
in
push
cmpsb
hlt
cmp
jle
leave
mov
jp
je
subl
js
cmp
xchg
std
xchg
or
ljmp
dec
test
in
adcl
cmpsb
neg
lcall
popa
dec
fmuls
lahf
adc
cmp
xchg
popf
fldcw
icebp
xorl
call
cmpsb
mov
jle
repz
inc
mov
dec
sub
pusha
fnstcw
xchg
or
mov
xor
outsb
loop
stos
mov
push
mov
jb
mov
insb
lds
fidivrs
inc
call
and
jae
fnstenv
cmp
xchg
pusha
mov
sbb
sti
jne
jmp
mov
or
sbb
ret
adc
xchg
mov
or
lods
addr16
dec
enter
lahf
lea
mov
repz
push
test
shrb
movsl
pusha
jno
lods
addr16
adc
or
fldl
jo
test
insl
inc
shlb
or
cmpsb
adc
in
jae
dec
pushf
icebp
cli
xchg
stc
movb
and
push
or
enter
aas
ret
push
jb
movsl
jb
and
and
cwtl
faddl
sbb
push
out
xor
leave
sahf
mov
lcall
mov
dec
push
mov
add
xchg
xor
repz
or
fstpt
mov
stos
scas
std
inc
arpl
and
sbb
leave
lods
push
mov
push
pop
std
pop
nop
push
jge
mov
je
jns
mov
lods
daa
xchg
rclb
add
inc
and
lds
gs
test
fmul
xor
push
aas
jbe
hlt
sub
and
or
mov
mov
mov
scas
pop
mov
lret
mov
mov
ret
jge
lret
inc
sbb
out
xlat
das
in
jp
daa
int3
jmp
or
ret
add
push
add
ret
cmp
fs
xor
xchg
out
aaa
fmull
jmp
mov
inc
rclb
stc
aam
mov
aaa
lret
xchg
dec
pop
adc
sub
ds
jo
push
push
pop
sbb
in
sub
jge
adc
sbb
jge
daa
sub
enter
lea
out
jl
or
add
and
pusha
lods
pop
loope
jle
sbb
sbb
adc
mov
stc
cmp
fbld
idiv
aad
push
lock
jb
arpl
or
mov
movsl
push
cmp
mov
imul
xor
cmp
push
push
pop
loop
xchg
in
xor
push
clc
add
out
push
pop
scas
ss
jae
mov
lret
push
xchg
pop
ret
into
mov
mov
sub
call
icebp
leave
adc
jl
jbe
icebp
add
fld1
mov
dec
mov
cmp
mov
pop
jo
mov
inc
sbb
push
and
or
outsl
imul
xor
lock
pop
das
cmpl
mov
lods
xchg
int3
mov
int3
sbb
decl
xchg
sub
jge
jge
jecxz
ja
xor
repnz
pop
xor
fiadds
aaa
loope
add
add
jp
inc
adc
dec
inc
jmp
pop
insb
out
aas
mov
rorl
cmc
inc
das
out
jge
hlt
lock
mov
sub
push
adc
dec
xlat
push
adc
repnz
xor
inc
leave
push
xchg
xchg
in
adc
cwtl
inc
dec
movsb
mov
adc
cmp
fsubs
pop
mov
imul
pop
pop
lods
clc
pop
out
aam
jo
out
mov
and
test
sti
repz
sub
in
jp
adc
rolb
dec
in
adc
fs
pusha
aaa
adc
add
jb
jge
mov
fwait
xor
ret
mov
and
popl
nop
loop
mov
orb
add
ret
jp
in
sub
or
mov
cltd
xchg
cmp
mov
xor
test
xchg
mov
pop
lret
outsb
or
jge
mov
fs
mov
repz
idivb
inc
mov
lock
lret
push
push
mov
mov
in
mov
mov
adc
insb
and
in
lods
mov
lea
xor
add
adc
test
and
mov
lds
xor
lock
push
out
mov
popa
mov
lahf
and
jae
push
jl
mov
fstpl
cwtl
nop
test
mov
lds
sbb
or
xor
js
jo
or
xor
xchg
fs
xchg
pop
sub
dec
mov
mov
lock
jno
icebp
mov
sarb
out
cmp
xchg
xchg
mov
push
cmc
test
mov
mov
das
xor
xor
in
mov
push
jne
flds
add
arpl
or
movsb
arpl
ret
sarb
xor
addr16
xor
loope
iret
test
cmp
outsb
pop
arpl
leave
loope
pop
inc
add
bnd
add
imulb
sub
xchg
and
adc
mov
pop
jle
repz
subl
je
and
movb
pop
and
mov
add
aaa
lods
push
adc
mov
int
xor
imul
adc
pop
xchg
pushf
mov
call
jbe
push
mov
or
lds
push
pop
pop
adcl
mov
daa
or
cmc
dec
fwait
mov
cmp
mov
mov
sub
add
lcall
push
mov
sbb
popf
enter
pop
push
sbb
aaa
or
sbb
dec
cmp
inc
lock
mov
inc
cmp
fmulp
xchg
or
lret
pop
push
hlt
lret
mov
xlat
pop
out
dec
iret
dec
aam
out
and
or
mov
pop
pop
and
jecxz,pt
lock
jnp
add
aam
jg
test
shrb
jne
aas
frstor
inc
cld
in
pop
and
xchg
push
clc
sbb
hlt
jecxz
cmp
clc
and
int
dec
sub
jp
std
xlat
shrl
mov
lods
cltd
mov
mov
adc
cmpsb
mov
inc
ret
stos
inc
js
insl
out
xlat
xor
loop
dec
gs
gs
add
cwtl
in
or
pop
jne
or
xchg
aaa
addl
jg
and
in
cmc
je
xchg
jecxz
fwait
mov
sub
xor
bound
adc
mov
cmpsl
lahf
enter
iret
ret
das
or
inc
jge
movsl
insl
je
xchg
pop
lret
stc
int
test
xchg
push
cwtl
add
out
icebp
sarl
repz
repnz
stos
jg
movsl
out
iret
jmp
xchg
jb
lods
add
int
dec
inc
pop
test
jp
dec
pop
dec
jl
mov
dec
std
cmpsb
push
and
mov
sbb
push
outsl
inc
jmp
fnstsw
js
movsl
and
or
sbb
mov
shrb
mov
xor
sbb
call
sbb
in
cld
pop
xlat
test
and
adc
adc
fisttpll
adc
pop
fs
sub
shr
fisttpll
jecxz
scas
in
cwtl
push
sub
jae
fwait
inc
int3
and
xlat
cmp
inc
mov
sub
xlat
add
addr16
xchg
lds
in
cmc
rcrl
sub
xlat
pop
jmp
repnz
jge
lds
jg
movsl
divl
pop
mov
pop
ud0
dec
add
jo
cmp
fs
mov
mov
pop
std
xchg
inc
lcall
dec
push
in
pop
xchg
jmp
mov
clc
fldenv
push
shrb
adc
ss
or
push
push
cli
cmpb
or
push
in
fstpl
les
or
iret
cmc
adc
xor
adc
test
test
lcall
mov
push
scas
dec
xor
dec
pop
inc
mov
in
cld
out
scas
mov
enter
xor
dec
cmp
icebp
aas
push
jmp
cld
mov
mov
push
bound
popa
or
cltd
fsubl
cwtl
stos
nop
sbb
shrl
inc
push
mov
sub
mov
lods
lahf
lods
inc
inc
clc
mov
rolb
and
sbb
cli
ds
jo
dec
js
pop
movsb
rcrl
push
cmpsl
cmpsl
test
mov
sti
mov
jge
aas
or
test
int
cmp
enter
pop
mov
das
in
insl
mov
xchg
jmp
mov
dec
jle
or
jp
push
cmp
cs
repnz
cmpsb
push
test
out
sub
imul
xchg
or
shrb
inc
into
mov
xchg
push
stc
jae
push
fwait
push
ret
icebp
mov
jns
outsl
mov
js
mov
jne
nop
mov
inc
sahf
lret
or
inc
cmpsb
pop
fwait
and
mov
and
hlt
inc
sbb
add
nop
int3
call
mov
ds
mov
inc
dec
ret
push
call
stos
das
repz
mov
lret
fbld
sarb
daa
or
jp
inc
sbb
mov
cli
fs
mov
cmpsl
pop
sub
outsl
sahf
pop
aas
and
jge
lds
jae
mov
pop
daa
mov
lock
nop
enter
mov
and
push
mov
mov
pop
cli
out
and
scas
fcom
shll
ljmp
jo
fsts
bound
xchg
in
enter
ljmp
adc
aad
push
fisubs
aas
sbb
inc
push
hlt
dec
dec
fldl
ja
bndldx
nop
mov
fsub
and
xor
enter
xor
mov
add
orw
mov
test
mov
in
pop
adc
aas
hlt
enter
jg
das
pushf
ret
mov
divl
ljmp
dec
testb
scas
out
fists
sahf
cli
je
or
xor
inc
mov
jmp
or
mov
pop
bound
mov
rolb
xchg
dec
addb
cld
pop
cmp
out
push
xor
cmp
xor
pop
adc
cs
inc
sbb
pop
ljmp
fs
jb
or
je
pusha
shll
scas
sub
xor
pop
loope
lock
sub
jp
dec
mov
data16
into
push
and
cli
cwtl
sbb
hlt
sub
js
pop
mov
daa
adc
sarl
mov
pop
lods
add
aad
add
push
rorb
ret
xor
dec
or
xchg
and
cs
repz
out
or
xchg
stc
pusha
pusha
jbe
cmpsl
adc
cmc
setnp
mov
jge
nop
mov
adc
pop
daa
ljmp
adc
push
push
addr16
and
and
pop
in
subl
fisubrs
sbb
xchg
addr16
popf
sahf
push
ret
mov
pop
cltd
ja
test
cmp
mov
inc
jmp
js
sbb
in
repz
out
xchg
push
sub
insl
jle
imul
jns
sbb
pop
cwtl
aad
push
mov
xlat
stc
fcomps
rorl
jecxz
push
in
or
mov
xchg
jns
jnp
arpl
and
mov
test
mov
lods
into
sub
and
push
addl
sub
jge
dec
les
pop
cmp
push
iret
addr16
lret
push
cmpsl
sarb
push
sub
mov
les
mov
addr16
rolb
mov
add
or
xchg
ret
enter
mov
fnstsw
inc
mov
inc
stos
dec
test
arpl
sbbl
sub
mov
nop
mov
cmp
loope
idivb
int3
add
scas
xchg
loop
fucom
jns
shll
jae
jmp
jg
sub
clc
adc
gs
add
shl
xor
dec
pop
aad
int
and
subl
dec
mov
jp
out
dec
fistps
in
mov
sbb
pushf
or
lods
or
pop
sbb
jnp
sbb
pop
cli
add
negb
out
mov
les
popa
mov
jmp
stos
push
or
movsl
lahf
pushf
fdivrs
inc
addr16
fdivl
cwtl
sbbb
xchg
or
sub
in
inc
xor
inc
jb
and
add
ret
add
jl
cwtl
push
scas
xchg
or
pusha
push
mov
fwait
xor
mov
enter
xchg
out
jg
ljmp
sbb
add
mov
loope
push
adc
push
or
das
outsl
mov
fdivrs
mov
leave
test
xchg
push
cmp
imul
and
add
xor
add
fs
lods
cmp
sbbb
add
add
mov
add
pop
pop
mov
je
add
and
dec
in
jne
popf
mov
inc
inc
adc
lds
test
mov
xor
push
pop
mov
cmp
stos
ds
orb
ds
xor
test
pop
cmp
xor
testb
lock
pop
stos
jne
mov
inc
pop
insb
je
pop
push
cltd
fidivrl
mov
sub
int3
jmp
cmp
jge
cmp
sub
movsl
mov
movsl
mov
mov
push
pop
inc
inc
aam
in
aas
div
or
divb
mov
mov
mov
gs
mov
movsl
mov
out
add
insl
lods
mov
push
push
bound
data16
xlat
stos
xor
push
fldcw
inc
gs
cmp
add
scas
jge
pop
mov
in
sbb
mov
jnp
lock
rcr
mov
fldt
clc
cmpsl
xchg
mov
cltd
mov
mov
ficoml
ljmp
outsb
sub
idivl
das
pop
repnz
jge
xchg
lcall
mov
bound
iret
dec
dec
test
adc
fistpl
cli
jg
call
lcall
mov
jno
cmp
xchg
outsb
sbbl
ret
movsb
xchg
mov
add
push
adc
sbb
fnstsw
hlt
jo
mov
cwtl
in
push
cwtl
jmp
call
hlt
xor
test
jb
jno
push
jbe
mov
movsb
mov
cltd
hlt
fucomip
icebp
fldcw
and
shr
sub
pop
in
inc
mov
xchg
mov
test
mov
push
or
std
insl
add
mull
je
incb
mov
cmp
in
xor
fidivl
pop
or
stc
inc
lret
pushf
fwait
jb
jmp
lret
shl
movb
insb
jbe
pop
fwait
and
out
pop
or
loopne
icebp
add
arpl
jge
aad
fisttpll
and
fisttpll
sub
lret
cs
and
push
repnz
mov
jg
add
push
pop
fcoms
je
fisttps
jne
out
inc
push
pop
hlt
ja
aas
mov
pop
cli
xchg
adc
pop
cmp
mov
jp
push
xchg
jmp
cmpl
sbb
jg
mov
aas
add
mov
dec
push
shlb
mov
xchg
int
dec
inc
cld
xchg
lods
repnz
xor
movsb
mov
jmp
addr16
scas
xor
cmp
push
mov
ljmp
push
sbb
dec
add
mov
mov
adc
cmp
jecxz
cmpsl
and
shr
adc
sbb
subb
iret
idiv
sub
or
adc
jb
xchg
mov
jmp
pop
jg
ljmp
fs
les
rcrl
adc
sti
insb
outsl
dec
push
jae
loopne
test
pushf
cmp
aaa
sub
push
inc
int3
jbe
push
int3
lds
jns
rclb
pop
fisttps
fdivrl
jne
add
cmp
sbb
sahf
jo
repnz
fdivr
into
xor
loop
push
or
cltd
jbe
pop
mov
and
xchg
mov
cmp
xor
sbb
loop
add
cmp
outsb
insb
popa
fisubrs
inc
xchg
adc
dec
das
or
and
push
adc
push
sub
insb
je
adc
adc
mov
imul
cmpb
cmp
loope
loop
and
push
and
mov
test
adc
leave
push
sarb
add
scas
dec
fmull
adc
daa
mov
dec
pop
pop
jnp
or
sbbb
int
inc
mov
xchg
push
push
fadds
or
sub
push
ss
out
pop
repnz
lret
fnstsw
xchg
icebp
imul
stc
push
pcmpgtb
sbbb
add
das
jae
outsb
stos
pushf
sbb
cld
cmp
ret
mov
fwait
mov
pop
pusha
cmp
mov
sbb
mov
bound
sub
mov
scas
adc
ret
mov
jmp
pop
xchg
xor
dec
mov
popf
and
xor
fdivrs
and
lods
add
arpl
mov
rcrb
adc
and
enter
std
pusha
lcall
ret
cltd
mov
fildl
jmp
lods
or
push
ficomps
loop
sbb
das
xchg
je
cmp
jne
fdivs
xor
add
daa
fiaddl
and
inc
sbb
push
sub
jbe
push
jae
cmc
or
xchg
xchg
ret
es
aaa
or
mov
xor
adcb
test
or
push
add
outsb
jle
fbld
mov
out
sti
int3
or
out
imul
lock
cmp
mov
inc
lahf
inc
push
xor
pop
mov
mov
es
adc
jp
adc
xor
mov
in
into
sbb
cmp
fs
mov
in
std
push
out
push
test
lret
xor
es
push
or
xchg
mull
test
bound
jle
les
xor
mov
mulb
call
in
mov
jle
fldl
cmp
nop
push
shr
mov
adc
fimuls
decb
ret
imul
out
push
lea
decl
pop
scas
ret
enter
pop
dec
xchg
insb
add
push
jo
mov
lahf
jl
fmull
mov
jg
scas
push
out
sahf
adc
jmp
sub
dec
or
pushf
test
stos
stc
inc
cmc
sahf
sbb
sbb
add
in
dec
mov
push
push
inc
popf
gs
xchg
fadds
xlat
or
mov
insb
negb
loopne
xor
sub
mov
mov
call
inc
xlat
push
xchg
sub
cmpsb
lock
in
loopne
pop
rcll
aam
incb
out
ret
push
loopne
or
sub
sti
xchg
cli
stos
test
inc
xlat
xor
mov
jbe
mov
lock
ja
ret
lods
xchg
loope
cld
int3
das
mov
mov
pop
mov
lahf
sub
pop
push
repnz
push
fldl
pop
add
inc
pop
cli
outsl
sbb
xchg
jp
sti
xor
shlb
mov
pop
dec
and
clc
stos
subb
shrl
add
adc
icebp
test
sbb
xchg
es
pop
cmpsl
dec
shr
xor
push
xchg
icebp
aam
int
loop
jp
dec
int3
int
and
xor
shr
mov
rcrb
arpl
mov
mov
fidivrs
pushf
push
movsl
dec
aam
inc
stos
cmp
sub
arpl
sbb
push
pop
push
push
jmp
rorb
mov
push
dec
sub
push
loope
loope
out
lea
in
or
push
sub
adc
push
cmp
stos
dec
scas
inc
dec
or
int
push
ja
lret
hlt
pop
or
xor
sbb
ljmp
push
test
or
shll
pop
adc
lcall
push
mov
push
icebp
and
gs
hlt
jnp
gs
leave
mov
aam
das
push
mov
ss
mov
rcrl
mov
pop
lods
xchg
cli
in
xor
push
sbb
stos
push
jecxz
pushf
in
cmp
add
enter
sbb
mov
push
mov
sub
cs
lret
push
test
cli
outsl
jmp
vpcomd
ljmp
out
in
fldl
pop
into
xor
inc
fists
and
ss
cmc
lods
popa
xchg
std
and
fcompl
pop
fsubl
mov
mov
rcrb
dec
add
mov
pop
fldt
push
cmp
jmp
shlb
lcall
andb
lcall
xchg
sub
movb
add
fmull
fdivrl
aas
stos
xor
sahf
adc
popf
test
adc
mov
scas
lahf
add
div
push
and
das
jne
sbb
mov
cmp
mov
adc
ret
dec
xchg
xchg
mov
out
inc
sbb
clc
jb
and
mov
push
je
mov
cmp
mov
sub
cmp
inc
cmc
js
out
jo
cmp
les
push
loope,pn
test
adc
mov
push
mov
push
es
xchg
lds
enter
dec
xchg
loop
jbe
out
repz
out
or
gs
sub
and
loopne
jge
les
dec
sbb
xor
lcall
cmpsb
jmp
lcall
push
jb
mov
mov
mov
mov
and
cli
inc
xchg
pusha
mov
sbb
cmpsl
mov
lds
xor
rclb
lock
cmc
fdiv
lods
jb
sbb
ljmp
dec
je
mov
pop
mov
jb
cwtl
cmp
adc
inc
cli
xchg
push
enter
dec
xchg
mov
jge
mov
cmpsl
incl
pop
sub
movsl
pushf
sbb
push
or
jl
ss
lods
ror
adc
xchg
mov
mov
pop
lret
mov
jge
dec
imul
sub
mov
push
ds
into
push
iret
punpckhwd
mov
aaa
add
pop
lea
push
je
fistps
rolb
outsl
push
fldcw
mov
out
sar
push
lods
ljmp
icebp
push
push
outsl
aas
mov
jbe
pop
mov
sbb
pushf
dec
mov
fsts
js
and
mov
mov
popf
xor
aam
adc
adc
enter
pushf
rorl
mov
mov
dec
repnz
add
test
imul
sbb
in
fistl
add
repz
jne
out
mov
sbb
jno
push
shrb
mov
pop
pop
xor
lods
imul
xlat
fwait
adc
dec
dec
fs
sub
ss
or
or
movsb
pusha
cmp
jns
hlt
movsb
xchg
lods
push
and
imul
subl
enter
sbb
add
mov
pushf
push
testl
fcomps
es
mov
inc
xchg
out
mov
jae
sbb
out
mov
mov
ds
mov
clc
xor
lods
add
repz
outsl
in
mov
pop
sbb
lock
ss
call
sbb
add
jp
xor
outsl
icebp
call
js
pandn
pushf
lds
insb
daa
js
sub
dec
ljmp
mov
imul
adcb
xlat
xchg
push
lea
xor
cmp
or
outsl
mov
sbb
out
jno
jbe
sti
fiaddl
jle
movsb
dec
mov
rcl
and
cmp
mov
push
pop
das
xchg
add
out
or
outsl
pop
sarb
out
sub
cltd
ret
jmp
or
mov
add
lock
mov
mov
popa
loopne
loope
movsb
movsb
loopne
or
jae
mov
jmp
and
subps
scas
jle
inc
frstor
cmpsb
cmc
out
bound
lret
dec
xchg
mov
mov
add
or
fcmovnb
test
add
lds
and
push
cltd
loope
nop
enter
repz
in
stc
fmull
in
lret
lret
cli
jo
add
push
push
shrb
jmp
fists
sub
insb
mov
xor
mov
ja
fs
stc
cld
xor
fldl
out
push
cwtl
inc
add
decb
dec
push
cmc
clc
jl
and
mov
pop
pop
mov
fnstsw
aad
das
icebp
sti
mov
pop
add
cmp
cwtl
jl
jmp
lcall
movsb
pop
imul
dec
and
fbld
xchg
loopne
and
lods
addb
ds
cmp
ljmp
pop
and
hlt
ror
dec
or
and
sub
mov
cmpsl
imul
out
aad
xor
and
cmp
xchg
lods
xchg
push
jno
dec
jo
sub
add
push
ljmp
arpl
cmc
cmp
xor
sbb
push
sbb
pop
xchg
in
inc
push
push
das
cltd
adc
adc
mov
jae
pop
inc
rorl
cmp
mov
xor
mov
test
rol
sub
int3
or
jno
insb
mov
lock
inc
int
lods
add
or
in
negb
js
xchg
flds
and
jns
jmp
es
mov
pop
push
pop
xchg
or
mov
dec
adc
dec
test
mov
fcmove
fdiv
or
sub
jmp
out
adc
pop
add
dec
jae
xor
inc
sbb
rolb
jae
jle
addl
ljmp
mov
dec
lea
cmp
je
repz
jns
aas
cmc
int3
mov
cmpsb
insb
test
xchg
and
mov
or
hlt
xchg
les
cmp
sbb
rol
push
jno
sbb
icebp
pop
and
inc
dec
mov
or
xchg
lret
mov
fs
mov
sbb
add
and
mov
lods
pop
std
test
je
adc
adc
ficoms
out
fdivs
movl
mov
shl
repz
mov
mov
xor
push
xchg
xchg
inc
xor
mov
adc
shll
test
pushf
fcmovnb
out
cmpsl
jl
add
jl
add
shrl
adc
aam
sub
mov
jg
es
in
mov
inc
push
push
xchg
push
push
add
pop
jo
iret
sbb
out
dec
sub
mov
jae
push
mov
lods
and
mov
push
xor
inc
push
jno
dec
out
or
sub
pushf
xor
imulb
xchg
das
add
mov
jns
mov
notl
into
mov
adcb
ror
popa
cli
pop
adc
cwtl
ja
aad
dec
fildll
pop
inc
cmp
mov
push
mov
les
sub
or
dec
fists
lods
jae
mov
nop
push
loope
cmpsl
xchg
in
imul
pop
das
cmpsb
sbb
aas
ss
je
mov
repz
adc
mov
mov
xchg
aas
sbb
add
enter
xor
adc
stc
dec
xchg
mov
stos
idiv
popf
mov
mov
fcomps
fists
lcall
jne
inc
dec
sub
pushf
in
jp
cmp
sub
dec
inc
or
xorb
sbb
inc
fs
xchg
das
mov
gs
subl
repnz
add
jo
jp
fwait
sbb
notl
out
add
mov
xchg
or
out
inc
in
data16
je
rorb
add
clc
push
in
jnp
in
aaa
sub
add
mov
fcmove
je,pn
int3
in
repnz
cli
movsl
outsl
mov
ljmp
mov
xor
sub
das
movsl
sub
inc
fsts
popa
dec
iret
xchg
push
mov
fdivrl
dec
out
repnz
adc
aam
push
arpl
sub
aad
ja
ja
popa
popa
fwait
add
jns
das
xchg
je
sahf
rcll
addb
js
cmp
adc
pop
ds
cmp
fildl
mov
sbb
mov
jbe
lret
xchg
mov
icebp
sarl
or
gs
fnstcw
sahf
xchg
movsl
cmp
dec
adc
rclb
sbb
movb
and
hlt
repz
out
adc
inc
insb
or
cs
imul
test
pop
xor
fsubr
inc
push
out
cmpsb
sbb
jl
gs
dec
sar
jle
pop
push
mov
je
xor
cmp
ja
xor
jl
push
imul
jecxz
mov
cmp
loope
push
sarb
jnp
aad
push
ret
push
sahf
hlt
cmp
mov
jno
insl
pop
mov
pmulhuw
mov
and
or
adc
pop
scas
not
xchg
test
xchg
cmp
test
inc
aas
mov
jle
xchg
push
imul
in
mov
mov
pop
lcall
pop
and
adc
loopne
in
stos
sbb
ja
jg
add
add
and
or
std
stc
arpl
mov
sub
mov
lock
mov
dec
cmp
fs
fmuls
stos
mov
xchg
jnp
sub
fs
adc
imul
push
xor
in
adc
mul
jnp
lcall
jmp
jb
pop
sarl
outsb
cs
push
pusha
mov
xor
sub
or
mov
inc
xchg
or
push
pop
mov
xchg
xor
stc
insl
mov
or
xchg
pop
je
ljmp
lods
movsl
mov
pop
fdivrl
and
push
lods
sbb
jnp
pop
xchg
into
push
shlb
ret
test
fnstcw
addr16
or
adc
pop
sub
fildll
push
scas
mov
sti
cmp
mov
ficompl
bound
or
addl
clc
in
sti
push
or
aad
ret
pushf
das
stos
fisttpll
lea
dec
cmp
push
add
inc
jb
int
pop
ss
std
loop
imulb
jge
les
sub
inc
stc
stos
mov
adc
lcall
xchg
in
xchg
leave
int
lods
dec
addr16
lea
inc
std
mov
icebp
mov
xchg
jns
cli
xchg
fsubrp
cmpsb
inc
iret
jno
xorl
pop
push
call
or
test
ss
cmp
or
xchg
mov
jg
fdivl
lret
loop
sbb
xchg
ja
arpl
xchg
cmp
xchg
adc
push
pop
push
das
inc
out
sub
js
in
sbb
push
xchg
push
ja
inc
stc
icebp
push
pop
cltd
ds
or
imul
ret
pop
push
push
fucom
scas
push
mov
add
jmp
out
fptan
fistl
and
xchg
push
ret
add
xorl
fdivr
xchg
jns
aaa
aad
cmp
pop
pop
and
inc
in
adc
mov
push
jns
add
mov
loopne
fs
gs
jns
ret
jmp
mov
adc
sbbl
mov
mov
cmp
or
sbb
add
add
shr
shrb
dec
outsb
ret
dec
repnz
icebp
push
cmpsl
movsb
sub
push
push
add
cmp
fld
or
daa
test
sub
push
add
mov
fwait
sub
in
aad
hlt
dec
jno
inc
sub
push
fcompl
inc
lret
mov
fcmovnb
insb
test
mov
xchg
xchg
cmp
push
in
cmpb
loope
in
pop
or
fldcw
cld
cld
push
cmp
mov
sbb
pop
adc
mov
sub
pushf
fistpll
jae
cmp
add
mov
xchg
leave
mov
mov
mov
test
mov
fstl
dec
or
cmp
les
ficomps
imulb
cltd
cmp
sahf
pop
out
ja
xchg
test
mov
jmp
imulb
ret
mov
pop
mov
inc
and
mov
dec
es
icebp
in
shll
fdiv
cmc
mov
addr16
into
push
movsb
and
cmpsb
xor
dec
faddl
inc
dec
mov
std
mov
jle
pop
sub
xlat
out
jne
mov
lea
lcall
add
scas
jae
adc
call
rorb
xchg
pop
ret
or
mov
orl
scas
sub
int3
cltd
cmpsl
in
and
pop
lret
jg
fcompl
cwtl
jb
mov
repnz
cmp
fistl
pop
std
repnz
rorb
rol
sti
scas
test
mov
inc
cltd
xor
inc
cmpsl
icebp
cwtl
das
repz
mov
mov
jecxz
test
stc
dec
and
fwait
sbb
out
sti
out
xor
loope
cmpsb
ds
cld
push
cld
outsb
adc
sbb
movsb
mov
mov
imull
jns
xor
pop
movsb
xlat
xchg
mov
jns
fwait
jmp
mov
add
pop
dec
jnp
add
inc
xor
cltd
pop
or
sub
sbb
pop
cmpsb
mov
fnstsw
outsb
subb
stos
and
add
lret
lods
sub
out
cmpb
pop
pop
shl
shrb
cmp
push
mov
mov
int
scas
jg
mov
add
inc
push
inc
aam
cltd
add
cltd
inc
leave
lahf
ljmp
mov
fcomip
mov
mov
mov
pop
cmp
push
inc
push
push
jae
jnp
xor
xchg
sahf
jns
jl
jb
jl
xchg
jbe
jbe
out
test
pop
lock
scas
push
scas
stos
mov
adc
add
lods
stc
xchg
arpl
in
rcrl
and
aam
sbb
jl
je
aam
cltd
mov
sub
loopne
mov
cmp
pop
repnz
data16
repz
pop
repnz
inc
das
nopl
xor
popa
loop
mov
pusha
cmpsl
pop
push
lret
fsubrs
mov
dec
rol
cmp
jle
fistps
sarb
outsb
cmp
adc
sub
fistpll
push
jo
in
aad
xchg
mov
sbb
jno
dec
icebp
pop
lret
out
addr16
push
xchg
dec
pushf
test
cmpsb
andb
jb
arpl
mov
inc
mov
arpl
push
jle
mov
mov
and
and
hlt
jp
xchg
dec
data16
je
sbb
jle
js
xor
shll
and
cltd
movsl
sti
jecxz
bound
jbe
jecxz
stc
aad
push
cmp
adc
mov
add
add
jns
or
inc
dec
mov
mov
jle
imull
and
out
dec
ss
in
cmpsl
in
je
add
mov
or
xchg
inc
sbb
testb
mov
adc
dec
scas
xor
jmp
add
test
nop
pop
pop
push
cmova
cmp
jle
xor
lock
aad
stos
shlb
and
add
jb
or
test
not
stos
test
xor
xorb
mov
pop
sbb
test
lods
es
adc
ljmp
stos
cmp
xor
rcrl
and
test
mov
daa
jno
mov
fs
push
jp
mov
loop
mov
pushf
sbb
sub
imul
out
inc
jmp
pop
daa
mov
xor
lret
out
adc
sbb
adc
inc
fadds
inc
mov
iret
testb
pop
popf
js
pop
mov
bound
sub
lcall
outsb
scas
or
data16
aaa
mov
jecxz
fcomps
in
or
and
xchg
leave
stos
mov
jl
adcb
push
mov
dec
mov
js
xchg
dec
sub
daa
cmp
push
dec
loope
arpl
cmpsb
ds
aaa
stos
xor
les
or
ja
test
cmp
ret
stc
xchg
dec
mov
iret
adc
push
pop
dec
add
xor
fistl
lret
dec
fwait
mov
dec
xor
xor
fisubl
lods
test
insb
nop
xor
jl
inc
aas
in
add
jns
jge
dec
mov
inc
sarl
inc
mov
pop
rcrb
pop
dec
in
popf
fstpl
cltd
mov
ret
cmp
xchg
jo
adc
sub
loope
dec
adc
pop
fst
cltd
jg
popf
ret
fdivp
jle
sub
sub
cs
mov
cli
pushf
shr
cmpsb
addr16
ja
pop
bnd
pusha
push
dec
cmp
test
popa
js
and
ficompl
lahf
out
insl
hlt
or
movsb
adc
xchg
inc
lret
mov
lods
pop
xchg
mov
faddl
fidivs
ja
lret
js
inc
mov
arpl
xchg
jnp
lods
mov
inc
mov
sub
cmpsl
or
jb
jbe
and
loopne
je
jp
arpl
in
and
inc
inc
dec
stos
fistl
add
xor
popf
add
sbb
xchg
mov
jmp
add
xchg
xor
into
sbb
das
and
cmpl
jle
xlat
adc
out
cld
jb
mov
popf
sub
enter
filds
andl
adc
cmp
adc
orl
shl
mov
mov
jecxz
xor
xchg
mov
daa
lds
inc
and
enter
xchg
repz
outsb
iret
sbb
xchg
cmp
into
data16
push
shll
or
dec
repnz
sub
stos
push
enter
cmp
add
pop
dec
ret
ret
lcall
adc
nop
ret
scas
add
push
pushf
dec
sub
sbb
mov
jnp
jge
xor
jae
xchg
ret
dec
or
out
sbb
in
loopne
xor
idivl
pusha
add
sbbl
hlt
and
pop
cmp
pop
int3
or
xchg
movsb
push
jmp
mov
mov
enter
scas
and
push
cltd
leave
outsl
and
pop
addr16
imul
cld
mov
jge
lock
mov
adc
xor
mov
mov
movsl
mov
mov
and
cli
jecxz
or
scas
stc
jns
add
aam
sub
dec
inc
lahf
sbb
pusha
inc
mov
in
adc
push
fwait
adc
jae
xchg
jnp
rcrb
or
test
ret
inc
mov
sbb
nop
and
push
test
rol
jo
or
cmp
mov
add
pushw
adcb
or
insb
adcl
sti
imul
test
cmpsb
cltd
inc
ljmp
or
in
vdivpd
push
insb
xor
cs
test
and
dec
sbb
or
inc
sub
outsb
fs
add
js
in
sub
inc
add
int3
mov
repnz
or
in
daa
xchg
cmp
and
popa
adc
in
cltd
cwtl
inc
mov
stos
jne
jge
js
icebp
std
mov
cmpb
cltd
ja
addl
wbinvd
pop
lds
pop
and
cli
popf
lcall
rcr
cmpl
or
int
sub
push
inc
mov
aaa
xchg
push
dec
lods
cs
dec
adc
jmp
sbb
cmp
pop
sub
sbb
and
cmp
jmp
jg
xor
xor
mov
nop
pushf
or
mov
je
pop
add
mov
in
push
mov
ljmp
imul
in
div
mov
cmp
vaddpd
outsl
cmp
jp
aas
iret
lds
outsl
mov
sbb
aam
daa
stos
ss
pop
xchg
adc
gs
push
imul
arpl
or
add
sub
nop
jae
add
mov
mov
ss
mov
and
push
adc
push
adc
pop
dec
lods
int
and
pop
push
mov
adc
sbb
jp
xor
scas
sub
js
inc
xor
mov
cmc
mov
mov
mov
cmp
and
fstpl
dec
int
aaa
xchg
mov
andl
pop
jl
test
mov
mov
xlat
mov
dec
rcll
or
xor
addb
stos
scas
mov
or
mov
mov
dec
xchg
repz
negb
fcoml
mov
add
add
cmp
mov
xchg
push
mov
mov
adc
sahf
aam
das
add
fsub
cmp
movsl
cmc
daa
popa
sub
push
jl
aas
testb
cli
adc
shlb
push
jge
stc
sbbl
dec
jle
adc
shrb
fdivl
call
inc
ret
cmc
mov
enter
add
cli
or
popa
cmp
pop
jle
mov
push
loop
sub
ror
aad
jle
lret
xchg
cmp
adc
pop
test
test
xor
or
add
inc
or
sbb
dec
jge
lret
xor
pop
ret
pop
add
outsl
push
mov
inc
out
imul
pop
inc
mov
gs
jmp
push
sahf
scas
test
and
cli
dec
loopne
mov
aad
dec
aad
in
push
insb
xorb
and
xlat
popf
pop
sub
shrl
jb
js
mov
div
jne
jmp
or
test
push
arpl
repz
scas
cmpsb
pop
into
mov
aaa
adc
or
int3
addr16
sub
daa
aam
or
add
mov
xor
xchg
jnp,pt
insl
fimuls
push
lods
jo
jae
ja
pop
adc
sub
movsl
stos
xor
roll
ljmp
xor
cmp
andb
jle
in
ljmp
mov
icebp
dec
dec
push
nop
xchg
add
test
cmp
in
je
jo
mov
mul
jo
and
daa
nop
or
jmp
mov
pusha
icebp
dec
xor
add
xchg
nop
xor
cmp
daa
loopne
scas
and
pop
jne
stos
jl
sti
mov
jb
dec
popf
pop
inc
pop
cmpsl
outsb
mov
inc
mov
jne
int3
push
jl
xchg
xlat
std
les
cs
adcl
es
and
push
dec
push
inc
andb
mov
addl
hlt
pushf
popa
push
push
popf
dec
push
rclb
jno
fwait
add
cmp
or
subl
mov
lahf
dec
ret
ss
mov
lds
cltd
fcmovne
lret
xor
out
pop
xchg
add
jb
pop
fiadds
stos
lcall
loope
push
push
mov
inc
mov
clc
jecxz
cmp
test
aad
shrb
imul
js
stos
dec
mov
fs
les
pop
sbb
inc
xlat
nop
aaa
in
xor
lds
fucomip
sub
inc
xor
and
push
movsb
inc
xor
sar
gs
movsb
lcall
mov
sub
ret
cmp
fiaddl
add
mov
xlat
scas
movsl
mov
bound
insb
mov
test
xor
test
iret
mov
lret
lods
ljmp
mov
mov
cmpsl
sub
xchg
mov
add
negb
inc
cltd
or
push
adc
pop
add
lods
cmp
and
mov
push
int3
jo
sbb
ss
pop
mov
test
outsl
clc
mov
lret
sbb
cmp
inc
cmpsb
pushf
mov
sbb
pop
pop
pop
mov
or
lods
loop
and
mov
nop
cmp
xlat
mov
aam
sbb
add
mov
test
jg
mov
fisttpll
xchg
pminub
jbe
mov
pop
sbb
mov
jmp
aad
cmpsb
ss
jne
or
je
xchg
jp
push
pushaw
lods
mov
insb
mov
pop
lahf
mov
mov
jnp
jmp
popa
pushf
pop
icebp
icebp
bound
sbb
cmpsl
addr16
fnstsw
jle
dec
pushf
mov
mov
jmp
popf
xchg
jb
cmc
fwait
sub
adc
mov
dec
fildl
add
mov
xchg
mov
cwtl
jns
mov
loope
out
push
mov
cmc
xchg
and
out
add
push
ret
pop
or
xor
xchg
shlb
xor
mov
les
insb
das
xchg
movsl
pop
mov
push
sbb
sbb
and
cli
mov
ljmp
adc
or
mull
movsb
mov
jl
xchg
jp
or
loope
ds
outsb
fisttpll
into
sub
push
and
imul
xor
leave
out
jno
dec
in
fs
push
mov
sarl
insl
scas
mov
xor
mov
mov
jle
xchg
xchg
cmc
inc
arpl
outsl
and
pusha
testb
test
adc
lret
xchg
or
sub
sub
jge
test
sub
cmpsb
aas
mov
xchg
ret
mov
add
pop
mov
test
xchg
push
fcomps
pushf
insb
mov
cmpsl
vhaddpd
jmp
cmpb
mov
add
xchg
fnsave
iret
andb
fsubl
stos
xor
pop
js
dec
sahf
imul
mov
cli
insl
cmp
push
ja
in
aaa
repnz
ljmp
and
jg
or
sub
lods
shrl
imul
hlt
push
mov
les
pop
xor
mov
shll
adc
xlat
loopne
sbb
stos
pop
xor
outsl
mov
mov
inc
inc
insb
nop
push
mov
and
imul
mov
das
mov
jl
addl
cmc
lea
sub
in
xchg
dec
popf
stos
jnp,pt
inc
and
xchg
out
ror
mov
cmp
mov
mov
push
stc
fdivrs
mov
clc
add
xorb
push
jae
and
push
cli
imul
xor
repz
insl
mov
and
int
pop
pushl
and
adc
cmp
push
mov
test
in
pop
aam
dec
int
or
pop
xchg
jmp
daa
ret
call
adc
dec
cld
inc
inc
inc
mov
lds
jg
or
mov
mov
xor
xchg
jge
xchg
and
cwtl
sbb
pop
add
loop
mov
cmc
out
dec
in
cmp
scas
push
scas
mov
hlt
fbstp
iret
dec
jno
sub
pop
or
pop
jg
push
lods
fbstp
das
inc
push
lock
or
mov
andl
mov
shll
gs
add
gs
mov
cli
push
clc
inc
fstl
xchg
ss
loope
ret
sub
leave
insl
std
and
sbb
xor
jle
daa
rorl
sti
push
mov
int3
inc
movsl
push
push
adc
inc
ror
mov
inc
sub
jge
aaa
decb
mov
inc
call
cmp
push
fdivl
out
pop
mov
jmp
ret
adc
test
popf
int
jmp
repnz
popf
xchg
jl
jae
popa
jae
loope
insl
decl
insl
push
inc
je
add
mov
js
das
es
jo
jl
lahf
or
stos
mov
jns
and
jns
cmp
js
hlt
xchg
inc
and
aas
scas
dec
pop
push
stc
cmp
pop
call
lods
bound
mov
xor
aam
outsb
popa
jle
test
stos
lea
test
mov
les
xor
add
sub
repz
lcall
mov
push
repz
dec
sahf
dec
jne
xchg
sbb
add
inc
sub
inc
push
mov
adc
popa
ret
lcall
or
inc
mov
call
mov
leave
mov
ds
daa
lods
lret
add
sub
int3
nop
xor
pop
push
or
inc
cmc
cmp
lret
push
addr16
sbb
mov
inc
arpl
test
ss
aas
pusha
dec
in
cmp
push
dec
xchg
mov
adc
inc
lea
repnz
in
mov
addb
xchg
inc
mov
or
inc
jno
scas
hlt
sti
xadd
cwtl
subl
lret
insl
push
xchg
adc
mov
sbb
and
test
ror
add
mov
arpl
cmc
iret
fwait
jb
or
divl
in
inc
gs
in
arpl
imul
adc
test
mov
or
aad
mov
cwtl
cmp
dec
fsubs
dec
inc
adc
jae
mov
or
jge
mov
xor
push
or
in
cltd
pushf
stos
mov
mov
jnp
add
add
lods
adc
pop
sbb
push
xchg
push
insl
in
popa
dec
sahf
and
arpl
test
push
lods
lock
int
std
fs
aas
xchg
mov
or
push
cmp
sub
in
sahf
lcall
sub
test
out
mov
push
pop
aaa
fwait
iret
adc
pushf
repz
aad
ljmp
gs
mov
push
aad
mov
sbbb
mov
cmpsb
loop
mov
lret
adc
shl
add
arpl
mov
xbegin
fnstenv
mov
mov
push
cmp
push
mov
in
sub
ljmp
cmp
test
push
lea
cmp
call
and
stc
jae
xor
mov
add
and
pop
out
jne
mov
cld
clc
mov
call
pop
cmp
xor
and
js
xor
push
arpl
inc
in
or
loopne
cmc
mov
or
jmp
in
aam
dec
sar
mov
outsb
push
mov
inc
sub
mov
sbb
rcll
orb
out
mov
in
xchg
sub
pop
mov
jge
mov
push
xchg
lahf
lret
adc
dec
add
adc
insb
sub
in
clc
jne
andl
inc
repz
mov
rorb
das
or
clc
or
sahf
sbb
in
sbb
popa
sbb
shrl
sti
fidivl
mov
xorl
cmp
call
lea
leave
pop
mov
test
lret
xchg
shll
mov
push
mov
cmp
stos
sbb
mov
mov
adc
add
xlat
lahf
push
or
adc
cmp
icebp
data16
out
adc
dec
or
sbb
xlat
paddb
or
sbb
cmp
add
sbbb
jnp
lret
or
xchg
pop
insl
add
xchg
hlt
push
sub
jne
xchg
adc
sbb
push
adc
xchg
mov
push
mov
adc
jno
mov
xchg
icebp
xchg
in
mov
adc
lds
std
fadds
popa
insl
xor
scas
rcrb
jg
dec
scas
orb
cmp
fisubrs
out
dec
or
xchg
test
and
push
add
pop
scas
adc
lds
lods
add
stos
idivb
lods
adc
clc
in
inc
stos
lds
rcrl
divl
pushf
scas
mov
iret
pop
xor
bound
ret
xchg
xor
call
ret
jmp
sub
pop
xor
mov
test
adc
sub
rcrl
mov
or
outsl
dec
mov
out
mov
shl
int3
mov
pop
movsl
jbe
jae
rcll
movsb
stos
jle
jg
repz
and
sub
inc
outsl
outsl
or
popl
inc
push
jno
dec
mov
add
ljmp
data16
shll
jne
push
push
xchg
cmp
and
aas
in
repz
lods
scas
sahf
push
xor
out
pop
xlat
test
int3
jno
lahf
lods
xchg
lods
lea
cmpsl
push
mov
and
fistpll
push
add
test
or
ret
insl
movnti
jl
subl
imul
pop
add
icebp
pop
int3
out
xor
in
pop
lret
jmp
mov
repnz
xchg
stos
mov
nop
stc
and
xchg
push
xor
addr16
dec
inc
in
repnz
push
inc
pop
fildl
mov
push
lret
xor
mov
push
scas
adc
sub
sti
jae
sbb
inc
and
mov
stos
sarl
push
cltd
cltd
mov
movsb
xor
pop
imul
sub
sbb
xor
fs
xor
or
or
pop
xor
mov
jp
repz
dec
popf
xor
jns
div
pop
or
jl
aam
or
gs
iret
mov
pop
jno
stos
test
testb
mov
mov
dec
jle
or
jecxz
and
add
pop
movb
je
daa
stos
mov
mov
mov
adc
pop
insl
into
mov
addr16
out
jae
xchg
cs
in
in
push
jge
mov
push
call
inc
push
ret
fs
jo
ds
dec
adc
xor
pop
push
adc
testb
out
fstpt
loop
mov
xchg
jo
xor
and
push
mov
or
je
inc
orl
jb
cli
dec
dec
mov
pop
jge
xor
push
add
and
sbb
cltd
dec
dec
mov
inc
mov
lds
out
jnp
lods
shrb
push
jp
out
icebp
push
lcall
push
mov
jns
test
jle
fucomip
mov
push
mov
aad
cs
xor
jp
dec
mov
xchg
push
pop
xchg
and
xlat
test
sub
popa
dec
nop
sub
test
push
fucomip
mov
mov
aam
mov
mov
mov
push
mov
xor
fs
jnp
in
btr
rcrl
test
pop
call
or
clc
inc
jns
xor
nop
out
cmp
test
push
int3
pop
lret
push
out
lds
insb
cmpsl
pop
dec
test
push
jae
lods
cmp
and
stos
cwtl
adc
inc
out
and
sbb
das
movsb
inc
inc
mov
loope
sbb
mov
enter
mov
pop
aaa
mov
pop
arpl
cwtl
int3
xchg
std
icebp
daa
mov
adc
jae
incl
insl
gs
lret
fiadds
outsl
sbb
or
mov
pop
push
sbb
jne
sub
push
bound
adc
and
mov
shrl
push
inc
adc
push
sti
aad
fcoms
imulb
jno
xchg
push
aad
and
xchg
decl
mov
lods
out
xchg
fisubl
loope
and
mov
inc
add
cmpsl
xchg
cmp
cwtl
fdivrl
sbb
hlt
or
pop
sbb
dec
fsubl
add
gs
mov
push
xor
or
mov
jle
push
into
lock
ss
outsb
xor
cmp
lock
pusha
shl
dec
pop
lods
xchg
inc
jle
xor
frstor
or
stos
aas
je
mov
or
inc
cld
gs
fistpl
jns
jmp
data16
jmp
scas
xor
and
or
jle
in
push
ret
push
mov
jo
fldenv
cmp
ja
pusha
dec
icebp
stc
cmp
ja
clc
out
sbb
lret
jmp
cmp
mov
or
out
lods
adc
rcrb
adc
jmp
pop
sub
push
mov
xchg
xlat
jmp
daa
adcb
adc
cld
ds
daa
add
movsb
jo
popa
ljmp
push
jmp
or
fs
xchg
das
sbb
stc
pop
adc
je
fdivp
or
xchg
test
fwait
rorb
mov
mov
xchg
xor
sar
loop
and
aas
mov
xor
push
mov
ret
out
lock
mov
lret
js
mov
mov
push
mov
pusha
add
mov
push
icebp
xorb
mov
pop
mov
dec
scas
or
jae
lret
mov
in
stos
int
inc
sbb
into
jne
dec
and
mov
pop
je
mov
xchg
shlb
pop
jmp
pop
jb
cmp
ret
adc
add
jmp
sti
in
rcl
mov
sbb
ja
mov
das
jnp
pop
xchg
mov
mov
xorb
addr16
repnz
mov
enter
dec
jae
pop
rol
je
pushf
loope
add
mov
aas
loope
pop
pop
lods
push
sbb
loop
mov
pop
sbb
daa
pop
xchg
fildl
jecxz
int3
jl
push
in
call
mov
add
sub
adc
sbb
mov
cwtl
mov
dec
ficoml
int3
xchg
sub
jmp
jge
mov
cld
test
int
test
inc
mov
push
out
les
push
push
pop
cmp
sub
ror
cs
and
push
fs
mov
add
push
push
cmpsb
adc
jns
jbe
rcrb
push
cmp
push
mov
fidivl
and
jecxz,pn
out
loop
stc
les
stos
sbb
jl
repnz
aaa
xchg
stos
rorb
adc
leave
mov
xor
popa
out
jle
push
dec
test
mov
popf
mov
mov
mov
sti
test
out
or
stos
mov
mov
jg
xor
in
xor
lock
lock
cli
addr16
js
cmpl
call
in
dec
fucomip
mov
lret
adc
ficomps
or
push
push
add
jnp
gs
js
in
sahf
push
cltd
mov
jecxz
rcll
jb
lret
push
lea
sub
xor
lcall
mov
fdivr
add
iret
push
nop
ljmp
out
inc
dec
jecxz
and
or
stos
addr16
popa
mov
or
pop
pushf
push
testl
inc
lods
outsb
ds
jnp
das
sub
popf
or
inc
adcb
cmp
mov
pavgb
xor
dec
popf
repz
and
shlb
icebp
bnd
scas
ret
mov
and
mov
lcall
jecxz
add
dec
subl
add
and
aas
lods
xor
xchg
or
cmpl
sbb
inc
lock
aam
divl
inc
loopne
cmp
xchg
lcall
hlt
call
sbb
push
xchg
sbb
mov
lock
cs
sar
jmp
popa
in
cltd
movsl
inc
pop
sub
jp
adc
fwait
and
xlat
js
fisubrl
mov
jbe
xchg
roll
and
add
mov
sub
mov
mov
jo
mov
xor
jno
test
jl
bound
ljmp
bound
test
xor
or
xorb
scas
in
pop
ss
xchg
ljmp
or
push
sbb
or
mov
jg
cwtl
movsl
inc
outsl
rol
mov
stc
mov
push
int
into
popf
out
lea
insl
cmpsl
adc
incb
mov
test
mov
mov
int
scas
cmp
imul
and
gs
js
or
cmp
ja
or
sub
imul
push
movsb
daa
mov
xchg
ljmp
cwtl
clc
xor
aas
shlb
xchg
and
adc
or
cmpsl
data16
push
aas
jecxz
xor
jp
sub
mov
xchg
and
mov
cmp
mov
cmpsl
lods
aad
fimull
xchg
int
out
adc
add
adc
shlb
cwtl
cmp
mov
cwtl
sbb
movsb
add
out
mov
aaa
rclb
roll
push
mov
xchg
xor
mov
mov
jns
push
mov
xor
aam
test
dec
sbb
jnp
jbe
mov
xchg
jmp
dec
clc
pop
and
mov
xor
ja
and
es
subl
cltd
addr16
xor
scas
xor
inc
mov
add
fimuls
or
push
push
shr
add
mov
mov
sbb
inc
lcall
sbb
cli
or
je
add
sarl
loop
lahf
xlat
jg
in
in
cmpl
movsl
jb
daa
inc
inc
or
scas
rorb
push
push
aad
stc
push
stc
ss
add
lea
inc
inc
jecxz
fbld
cmp
aad
ja
and
xorb
sub
cltd
jecxz
sbb
push
jp
xchg
pop
adc
lret
push
fsts
fwait
popf
xor
cmp
jne
cs
mov
imul
push
shrl
push
xlat
vmread
addr16
xchg
mov
fstp
gs
pop
cmp
cmp
or
xchg
jmp
jns
xchg
je
mov
pop
mov
das
push
mov
sbb
rorb
les
xchg
movsb
andb
push
sub
xchg
in
add
test
mov
push
aad
imulb
jno
repz
push
dec
add
cs
cmp
shlb
js
xor
push
jp
add
push
add
sbb
inc
loopne
or
das
mov
mov
mov
into
jmp
dec
mov
fwait
pop
sbb
popf
sub
cmc
mov
lds
je
popf
sbb
out
sbb
xchg
jnp
enter
popa
in
icebp
or
mov
ljmp
aas
cmpsl
jne
jno
inc
fidivrs
push
outsl
xchg
push
int3
lret
and
mov
mov
mov
subb
xor
test
fwait
cmp
sub
ret
js
pop
adc
fisubrl
jns
fnstcw
or
xor
mov
ret
mov
je
stc
mov
test
movsl
dec
and
scas
lods
iret
out
mov
sub
lret
not
cmp
addr16
popa
pop
dec
mov
cltd
dec
mov
sbb
xor
and
mov
call
test
adc
mov
testb
insb
mov
mov
sub
outsb
lahf
movsl
sbb
dec
mov
sub
ret
loopne
add
cmp
in
popa
mov
push
jnp
ret
adcl
rcll
psubq
jge
mov
adc
jmp
pop
cmpsl
inc
inc
test
arpl
dec
xchg
and
out
mov
test
mov
sahf
jmp
ja
mov
loop
push
push
jnp
xlat
loop
loopne
cmp
inc
pop
cmpsl
dec
std
or
mov
cmp
mov
je
sbb
dec
loope
ficompl
add
add
ret
xor
adc
sti
aas
inc
pop
and
fwait
sbb
std
sub
je
pusha
pop
mov
sbb
outsb
ljmp
cmp
aad
cmp
out
js
or
inc
jl
in
dec
in
or
in
lret
inc
outsb
ficompl
ja
push
fadds
jmp
int3
icebp
mov
xchg
rcrb
lods
aaa
sbb
push
cmp
jns
out
inc
push
cmp
movsl
push
lods
push
rclb
push
sbb
xchg
es
std
js
add
insb
repnz
push
imul
out
out
xor
cwtl
cld
stos
xor
add
inc
popf
cltd
and
mov
cmpsl
push
mov
cmp
sub
ficompl
cs
movsb
leave
pop
push
mov
divb
mov
shrb
xchg
inc
test
pop
int
or
cmp
js
insl
sub
jle
and
xchg
into
or
add
pop
dec
inc
or
and
jae
sahf
dec
mov
adc
std
rolb
testb
shlb
dec
cmp
lock
mov
movsl
mov
inc
int
mov
and
sbb
pop
mov
shrl
push
cltd
dec
ret
inc
lds
das
mov
popa
jl,pn
inc
xchg
and
or
jae
add
jecxz
fcoms
push
adc
add
pop
or
out
mov
in
cwtl
pop
outsb
hlt
ja
xchg
ret
sub
daa
negl
xchg
jecxz
insb
push
cmp
psrld
in
ljmp
ds
pop
mov
stos
int3
mov
dec
pop
imul
mov
inc
mov
cwtl
mov
mov
lret
dec
and
jne
ds
jle
aas
sub
sarb
add
mov
fcomps
and
call
mov
notl
ret
ret
dec
adc
dec
cld
mulb
xorb
outsb
pop
mov
jl
push
and
sahf
aas
outsb
xor
loope
fwait
stos
pop
addr16
push
idiv
push
cs
subb
or
sbb
out
xchg
test
repnz
hlt
loopne
aam
ficompl
pop
mov
fnstcw
inc
clc
cmc
iret
pop
sub
out
in
ficomps
cmpsl
fstps
out
ret
jle
push
iret
cli
mov
cmp
mov
adc
push
fs
mov
mov
jle
int3
or
ds
jmp
mov
sbb
punpckhbw
cmp
mov
loop
sub
es
out
dec
movsb
jp
fidivrl
shl
out
push
das
std
fwait
and
jns
ss
mov
add
cwtl
inc
jmp
and
sbb
leave
pop
add
jnp
aas
xchg
divb
imul
xchg
inc
or
jns
es
mov
pop
mov
popf
mov
fidivs
pop
push
dec
insl
ds
dec
xchg
insb
inc
inc
jge
jnp
bound
inc
stc
push
int
and
aaa
push
fsubp
cmp
adc
insl
sub
idiv
mov
jecxz
xchg
scas
fs
xchg
and
sahf
divb
out
daa
push
push
cmp
fwait
jno
adc
cmp
or
add
dec
int3
scas
push
aaa
push
shlb
mov
rorb
mov
push
loope
mov
scas
insb
jnp
rorb
lods
push
dec
std
push
pop
loop
jg
int
xorb
sbb
or
cmp
sbb
lods
andb
lss
int3
push
stos
push
negl
sub
and
cmp
add
or
pop
icebp
in
mov
ja
jno
dec
pop
aas
sub
push
dec
mov
and
ja
cmp
hlt
xlat
jne
adc
in
fadd
stc
inc
rcrb
call
xchg
fcmove
lcall
lds
mov
pop
xchg
das
shlb
pop
shl
mov
stc
cmp
popa
mov
push
repnz
pop
xchg
mov
fildll
inc
mov
cmpsl
insb
nop
mov
repz
cli
movl
cli
push
jno
adc
xor
pop
loopne
std
aas
mov
scas
lea
inc
jns
pop
lods
aad
mov
int3
inc
mov
sub
add
and
or
movsl
jl
mov
fstp
mov
sub
inc
xchg
dec
loop
pop
lds
into
es
bound
mov
mov
icebp
popa
outsb
test
call
sbbb
rolb
fbld
push
repz
mov
ljmp
int3
icebp
ja
adc
insl
and
xor
rorl
aas
cmp
jge
sbb
dec
inc
mov
mov
adc
popa
pop
in
out
cmpsb
pop
cmp
adc
repz
rcll
xorb
xchg
fsubl
js
loop
and
sub
lods
repz
xchg
cld
jl
jmp
jno
lret
adc
shlb
mov
adc
and
imul
xchg
fmul
sbb
fmuls
mov
stc
popa
in
outsl
mov
inc
stc
sbb
dec
shrl
dec
mov
sub
xchg
movsb
sti
jle
push
add
xchg
stos
sbb
icebp
jp
ja
cmpb
adc
xchg
xor
clc
repz
es
mov
mov
aad
stos
test
jp
cmp
dec
and
and
jne
mov
sbb
mov
mov
mov
in
lret
push
ss
sbb
mov
mov
mov
ss
ljmp
les
mov
iret
xchg
pushf
lahf
mov
imul
aam
push
fimuls
jmp
jno
scas
pop
ds
ja
fs
sbb
lcall
inc
dec
aad
xchg
fcom
sbb
xorb
rorb
imul
mov
out
aaa
pop
int3
push
adc
jns
pop
mov
inc
adc
mov
mov
sub
jecxz
xchg
out
in
inc
pop
out
repz
add
cmc
pop
hlt
out
inc
loop
mov
xor
stos
pop
imul
xlat
pop
outsb
or
dec
or
jo
mov
push
int3
xchg
mov
cmp
mov
or
rcrb
push
cli
ds
mov
ds
mov
pop
jecxz
mov
mov
adc
or
xor
aam
les
sbb
and
push
cmpsl
dec
and
out
mull
jle
das
addr16
lds
mov
add
push
sti
test
fsts
or
lret
sub
loop
das
or
xchg
mov
leave
icebp
sbb
dec
and
push
jmp
stos
outsl
dec
mov
mov
xor
and
and
sub
push
mov
xchg
xor
es
loope
mov
pop
xlat
mov
jle
push
cmp
push
xchg
or
push
sub
cmp
cmc
and
nop
mov
xchg
mov
xlat
dec
lret
pop
ret
pop
repz
and
inc
adc
daa
fldenv
xchg
insl
push
loope
mov
pushl
xchg
push
xor
imul
add
jp
ja
scas
jb
push
pusha
push
es
dec
pop
pop
jnp
nop
xor
dec
mov
ret
pop
and
sbb
cmc
push
in
jecxz
fs
xchg
shrb
or
xlat
clc
push
stos
sti
leave
ret
aas
stc
pop
sub
das
pop
add
jb
out
cmpsb
and
xor
jo
fmuls
xor
adc
inc
add
xlat
cli
mov
sub
pop
lret
loop
cmc
push
aaa
mov
dec
das
cltd
mov
idivb
or
popf
xor
cltd
mov
mov
cld
jmp
mov
popf
jae
icebp
fwait
andb
xchg
sbb
leave
loope
jl
jb
add
cmpsl
mov
push
nop
clc
lods
rcrb
lds
sub
cmc
pop
imul
mov
scas
adc
inc
jbe
sbb
rorb
push
shrl
das
or
mov
movsb
sbb
test
sub
push
xchg
push
mov
hlt
jb
mulps
popf
ljmp
sbb
in
insl
or
adc
rcrb
sbb
jne
mov
lcall
sbb
xchg
xlat
pop
ret
aas
mov
cmp
jns
inc
std
xor
repz
lret
movsl
and
mov
aaa
mov
mov
lock
pop
xchg
push
add
into
in
mov
or
fdivrl
fimull
xor
pop
insb
xchg
inc
xchg
add
push
loope
pop
inc
mov
in
sub
mov
lret
push
call
and
repz
jmp
sbb
aaa
call
sub
and
loope
cld
add
mov
shrb
movsb
repz
pop
and
push
inc
call
inc
fsubrs
pop
les
pop
mov
outsb
adc
mov
je
outsl
push
cwtl
fldl
outsl
cmp
adc
cmp
test
push
popf
int
movsl
mov
out
repz
pop
ret
aaa
mov
cltd
dec
adc
mov
push
pop
faddl
jo
cmp
sti
aam
das
adc
mov
and
lods
inc
repz
cmp
cmp
sbb
sub
ljmp
in
negl
and
cmp
test
dec
dec
mov
mov
jb
adc
sbb
addr16
das
out
lcall
fidivs
xchg
jl
shrb
aaa
sub
push
pop
sahf
push
jns
iret
xchg
stos
lods
and
test
sarb
and
sub
sub
push
std
mov
dec
fdivrl
add
jg
xchg
rcll
mov
outsl
pop
lret
adc
add
push
pop
push
outsl
adc
pop
sub
daa
xor
jmp
js
dec
cmp
mov
adc
pushf
mov
cmp
test
sbb
vsubss
dec
enter
scas
push
push
xchg
test
mov
enter
mov
and
jle
pop
insb
rcrb
pop
sbb
daa
mov
sti
sub
cmpsb
aad
call
add
sub
dec
mov
mov
add
and
adc
repz
mov
jae
xchg
cmp
sbb
outsb
jmp
inc
pop
jbe
jp
inc
jp
mov
xchg
or
testb
pop
ficompl
fdivrp
sahf
xor
pop
movsl
mov
ret
in
jo
push
outsb
sbb
sub
test
add
xchg
pop
push
inc
js
add
movsb
mov
cmpsb
xchg
mov
cmp
mov
out
or
or
fdiv
scas
mov
mov
ds
lods
in
mov
movsl
lods
lret
sbb
mov
inc
xchg
jae
imul
mov
jae
mov
aam
push
ljmp
inc
inc
out
push
dec
jns
mov
ljmp
and
test
sbbb
push
pop
movsl
jmp
adc
jp
or
ficompl
test
fistpl
mov
hlt
test
cmp
es
xchg
add
scas
push
dec
dec
dec
enter
in
xor
aaa
jmp
xchg
sbb
cmc
ret
fmuls
mov
pop
ret
xchg
inc
mov
aaa
xorl
je
and
jns
sub
aad
pop
les
pop
sarl
sbb
scas
mov
cmp
popf
and
in
sub
or
mov
mov
sub
push
mov
sbbl
mov
mov
sarb
or
sbb
mov
in
mov
lret
cmp
dec
mov
jno
xchg
sub
mov
call
leave
cli
fisubrl
test
pop
movl
ret
out
jo
sub
cmpsl
lahf
mov
pop
incl
jno
outsl
dec
lret
sbb
or
inc
xor
es
sub
or
movsl
ja
xchg
lock
push
sub
mov
das
lea
outsb
push
push
pop
js
push
sahf
jmp
mov
shll
inc
subb
push
mov
sbb
fistl
bound
mov
pop
shr
cmpsl
les
lcall
out
sbb
mov
push
cmc
dec
out
jmp
or
and
imul
ficoms
add
lods
inc
cmp
outsb
xor
cmp
mov
scas
sub
aam
test
stc
pop
add
jecxz
jg
xor
sbb
sbb
push
incl
ret
inc
mov
ret
call
fdivrl
or
jno
mov
clc
arpl
outsl
ret
mov
push
outsl
test
or
push
insl
and
mov
push
imul
hlt
cmp
popa
lret
mov
sub
add
adc
addl
iret
jg
xchg
mov
int
jne
pop
andps
sub
cmp
into
xchg
sbb
sbb
popl
add
ljmp
sbb
mov
cmp
addr16
or
pop
insb
roll
push
push
ss
sbb
cmpsl
out
lret
fs
cmp
sub
push
mov
addr16
call
ljmp
xchg
or
dec
jmp
add
push
pusha
mov
clc
jb
mov
add
ficoml
cld
or
push
add
stos
lret
fsubp
sbb
push
icebp
notl
jge
and
imul
cmp
jb
sub
and
or
sbb
mov
mov
sub
sub
je
sub
scas
cmpsb
dec
xor
testl
pop
pushf
insl
jae
adcb
lock
negb
ret
sets
dec
lret
loop
insb
jp
in
sbb
call
push
loope
push
inc
and
cwtl
sbb
cld
por
cwtl
stos
leave
xchg
scas
xor
cltd
aaa
xor
in
movsb
stos
les
data16
fnstsw
push
push
scas
ja
or
add
shrl
mov
add
inc
dec
xor
cwtl
pop
outsl
jae
inc
add
inc
adc
cmp
push
adc
sub
outsl
mov
pop
ror
mov
or
data16
rcrl
dec
sub
sub
adc
and
sub
rorl
and
cmp
imul
sti
sub
xlat
sbb
inc
or
and
mov
push
mov
repz
mov
nop
cmp
aad
push
std
jno
or
stc
pop
call
sub
jo
cmpsl
pusha
dec
andl
neg
ja
sub
add
push
lods
pop
rol
inc
lret
push
pop
and
pop
and
sbb
movb
addr16
dec
add
push
adc
and
jne,pt
inc
mov
inc
jb
cmp
lcall
hlt
or
sbb
sbb
ret
frstor
insb
jb
test
cwtl
mov
cmpsl
xor
lock
lcall
adc
inc
adc
add
pop
imul
and
je
jne
cmp
ret
mov
push
or
lods
add
insb
cmp
sub
xor
jge
and
imul
test
fists
dec
call
sbb
inc
gs
test
fcoms
mov
test
sbb
bound
loopne
addr16
ret
stos
lods
mov
je
sub
mov
push
test
daa
push
sub
cld
mov
aad
sub
or
int3
mov
or
add
push
xchg
adc
repz
pop
xor
das
xor
pop
push
jl
push
dec
decb
xchg
rorb
fmulp
xchg
sahf
jnp
mov
mov
jl
jnp
add
sarl
stos
pop
mov
mov
sbb
dec
adc
call
addr16
inc
lods
add
and
dec
and
pop
movsl
jae
push
jne
mov
lods
scas
push
test
icebp
mov
fists
out
stos
je
dec
daa
dec
jmp
cmp
cmpsl
sub
in
jns
cmpsl
pop
cmp
outsb
aaa
mov
aad
sub
out
inc
jle
js
and
adc
sub
ret
ja
pushf
nop
mov
adc
jb
mov
cmp
pusha
mov
sbb
aas
jmp
fistps
push
in
pop
adc
scas
push
lcall
or
les
xor
inc
cltd
jmp
mov
mov
shll
cmc
push
shlb
xchg
xchg
nopl
fistps
lcall
andl
out
dec
xor
jae
push
mov
aad
call
icebp
das
ss
faddl
out
xchg
shrb
add
mov
je
sub
mov
addr16
dec
inc
xor
push
xlat
sbb
cli
xchg
in
jno
es
out
iret
push
int3
pop
js
testl
stos
cmp
cli
fsubl
mov
fcmovne
add
out
mov
shll
push
mov
insl
jp
or
imul
pop
cmpsl
cmpsl
out
push
adc
dec
cltd
push
mov
sbb
arpl
in
pop
dec
fbld
push
sbb
xchg
pop
fcomip
jns
push
push
movsl
fldt
and
cli
cmp
into
stc
jbe
push
xor
mov
jp
cli
lods
xchg
cmpsl
lock
lret
xchg
pop
and
adc
enter
je
repnz
push
ror
les
mov
jle
adc
cmc
sbb
sbb
cmp
test
mov
ja
push
xor
dec
sbb
addr16
mov
stos
dec
addl
add
jg
fmul
add
pop
movsl
jmp
sub
jle
fiaddl
fs
sarl
inc
and
ret
pop
mov
and
ss
lods
or
adc
mov
xlat
out
pusha
es
adc
inc
imul
push
test
jle
or
leave
or
cmp
stos
das
mov
ret
rcrl
in
mov
xchg
aam
pop
sub
and
sbb
sub
mov
and
rcll
lds
js
stos
push
push
leave
pop
aam
mov
fisubl
ret
loop
inc
dec
jl
gs
call
jl
out
ret
in
test
and
call
dec
mov
dec
jnp
sti
or
sti
cli
xlat
xchg
ret
jae
je
adc
dec
sbb
and
loopne
sbb
sbb
cmp
fs
or
push
add
repnz
sbb
dec
insl
aas
das
sbbl
push
adc
lret
dec
in
mov
push
movsl
mov
xchg
xor
sbb
mov
xor
jmp
pop
in
lahf
mov
xchg
jp
shl
rcll
test
xchg
je
bound
hlt
push
scas
or
xchg
push
jno
mov
aaa
sub
or
js
imul
jae
add
in
outsl
cld
sahf
mov
push
in
sbb
push
int
sub
les
and
or
xor
scas
sub
lods
fisubrl
faddl
xchg
mov
push
xor
pop
pop
cmpl
add
xor
xor
insb
fidivs
sub
test
mov
jb
mov
sub
icebp
jb
add
and
or
aad
or
ljmp
jmp
push
jecxz
cmp
lret
jb
inc
and
aad
sbb
mov
mov
add
jns
in
pushf
imul
xor
cmc
adc
xchg
sub
dec
adc
cwtl
popf
fwait
and
jmp
pusha
int3
push
cmp
jp
cwtl
outsl
dec
rclb
scas
loope
test
shl
das
mov
repz
lods
xor
mov
jle
inc
or
ljmp
jo
sub
sub
xor
jmp
aad
shrl
stos
out
adc
jae
clc
in
ror
pop
cltd
hlt
enter
mov
mov
dec
data16
sbb
or
into
jo
data16
bound
push
popa
int
jb
insb
pusha
sub
jg
mov
dec
push
inc
jns
faddl
push
xor
dec
outsl
xor
inc
decb
sub
sbb
call
nop
test
dec
sub
ret
mov
rorl
out
enterw
jae
pop
xlat
xor
mov
inc
or
jg
dec
push
sub
test
add
add
cwtl
mov
rorb
sbb
mov
clc
xor
xor
pop
sub
inc
push
stos
daa
out
inc
out
sbb
sar
cmp
test
dec
or
outsl
dec
mov
xor
and
sbb
ljmp
xor
lret
xchg
das
push
popa
xor
pop
sub
pushf
push
xchg
fists
repz
les
aaa
gs
bound
jnp
mov
ss
jns
push
out
aaa
ljmp
ljmp
sbb
mov
push
out
mov
inc
pushf
cmp
loop
data16
stos
inc
repnz
or
add
orl
adc
pop
divl
xchg
push
fsts
fists
cltd
inc
mov
mov
lods
std
mov
jnp
xor
or
pusha
xchg
cmp
pop
inc
push
sarl
in
adc
jge
push
mov
sti
mov
xlat
pusha
jg
add
pop
mov
push
add
xor
mov
dec
push
mov
sbb
add
rorl
xchg
arpl
dec
adc
call
cmp
daa
cmp
je
xor
jp
movsl
lahf
std
jg
out
lcall
mov
mov
fistpll
or
stc
pop
mov
push
pop
xlat
dec
xchg
xchg
mov
adc
push
jle
fldcw
jg
mov
mov
add
jg
cmpsb
lret
ds
out
jg
push
out
and
mov
inc
and
and
sub
and
sub
xchg
xchg
frstor
adc
jae
and
push
enter
adc
inc
pop
add
adc
aaa
enter
in
stos
outsl
popf
dec
pop
and
ret
enter
jl
test
je
dec
jecxz
ds
mov
pop
aam
loope
xchg
jae
xor
sub
fcomps
fdivr
loop
aaa
sub
xchg
inc
cwtl
lds
and
sbb
mov
int
push
adc
cmp
dec
gs
lods
mov
out
lret
iret
sar
pop
cwtl
ret
fimuls
mov
or
cmp
arpl
cmpsl
movsb
movsb
js
mov
iret
out
pop
mov
push
out
xchg
sub
rcl
and
pop
mov
and
inc
fidivs
pushf
in
cmc
mov
push
xchg
ja
testl
and
add
jnp
pop
mov
es
test
sub
lcall
mov
cli
imul
adc
aas
mov
lcall
mov
xchg
adc
in
push
add
call
mov
sahf
daa
leave
mov
dec
jmp
int3
and
lcall
sti
inc
sbb
aas
pop
xor
loope
inc
jge
lahf
pop
cs
jo
jae
je
pop
jge
testl
sub
aam
aaa
imul
out
js
test
xchg
test
adc
fstps
add
mov
addl
or
inc
imul
sub
testb
mov
mov
sbb
scas
pmulhuw
insb
push
cmpsl
mov
fdivl
jge
imul
popa
sbb
data16
mov
in
inc
dec
lea
lock
stos
add
jg
dec
fildl
popa
lahf
pop
es
cmp
inc
pop
int
mov
sub
pop
push
cli
jnp
xchg
jmp
pop
fidivrs
mov
mov
mov
cli
mov
add
pop
lea
arpl
xor
or
int3
sbb
das
mov
xchg
mov
ficomps
stc
xchg
aas
hlt
cmp
icebp
and
fldenv
push
leave
xor
sub
popa
push
jl
and
popa
jo
mov
add
pop
pusha
decb
out
outsb
inc
add
xor
add
sub
arpl
mov
movsb
cmpl
push
push
mov
adc
ret
xor
mov
fstl
sbb
loopne
adc
test
dec
xchg
mov
aas
xchg
mov
push
psrld
bnd
insb
in
jo
loopne
outsl
dec
xor
dec
adc
or
mov
push
push
mov
out
inc
mov
cmp
daa
cmp
daa
jne
cli
imul
fstpt
pop
rcrl
out
dec
popf
out
int3
xchg
lods
out
imul
dec
mov
js
pop
pop
fs
mov
imul
xchg
lds
cld
xchg
xchg
outsb
test
orb
addr16
test
cmp
test
test
sbb
xor
xchg
mov
xchg
mov
std
outsl
push
pop
sbb
xor
inc
into
mov
add
lods
jecxz
std
add
ret
gs
iret
shrb
repz
jb
jge
in
daa
int3
mov
in
in
out
inc
fmul
xchg
jecxz
push
int
mov
lds
or
mov
loope
sbb
xchg
cwtl
dec
jmp
call
addr16
cmpb
popa
mov
xor
fcomps
cs
jg
pop
aas
mov
push
stos
sbb
in
jle
sti
sbb
and
ret
in
mov
dec
ret
adc
loop
add
jns
ja
or
outsb
pop
fisubs
lods
aas
dec
int3
hlt
sbb
lods
call
dec
daa
int3
push
lock
sbb
adc
loope
shll
loop
inc
ja
jg
ficoms
sahf
sub
lret
xchg
mov
mov
mov
out
lret
mov
mov
and
pop
xor
cmpsb
loope
and
nop
gs
es
push
into
ljmp
jl
dec
jl
or
out
inc
addr16
cmp
xor
fadd
sbb
test
jno
dec
lds
xlat
adc
push
xor
decl
dec
loopne
inc
mov
fsubs
pusha
push
subb
ret
mov
out
adc
test
call
pop
sbb
stc
mov
jne
gs
cmp
pop
mov
rcl
sahf
inc
jl
mov
jno
out
pop
leave
ljmp
jae
call
arpl
inc
mov
mov
dec
pop
test
in
mov
add
push
pop
mov
mov
pop
fwait
scas
scas
scas
mov
insl
out
mov
test
pop
arpl
sahf
insl
outsl
jbe
loope
test
and
scas
mov
repz
in
mov
popa
aas
mov
data16
mov
psrlw
hlt
rcrb
mov
pop
push
rolb
lret
in
jge
pop
jno
int
gs
cli
and
push
jnp
push
std
test
lock
mov
dec
jl
pop
arpl
jb
adc
xchg
icebp
fsubr
dec
sbb
popa
xchg
orl
dec
cmp
push
sub
mov
sub
sbb
ja
cmc
cmp
out
xlat
add
xchg
inc
add
jbe
or
cmpsb
int3
jbe
mov
jmp
stos
dec
insb
dec
inc
popf
mov
xchg
cmp
pop
pop
in
xchg
cs
lret
inc
sbb
sub
lcall
int3
fimuls
jns
loop
mov
dec
scas
fiaddl
imul
outsl
sub
cmp
mov
sbb
dec
enter
xchg
in
cmp
add
fldt
je
xor
fdivrp
sub
lret
inc
push
in
lahf
lret
add
push
cltd
sub
inc
pop
mov
dec
mov
and
pushf
inc
cmp
dec
and
push
mov
pop
sub
ds
arpl
pop
sub
xchg
adc
sub
fstpt
xor
xchg
loope
jle
dec
mov
mov
rcrl
ss
mov
sub
xor
xor
mov
insb
or
popf
das
mov
mov
xor
ljmp
repnz
and
push
xor
ret
push
ljmp
pop
hlt
in
jg
fmull
jns
imul
jns
aam
jp
jp
mov
lret
insl
add
or
add
lods
popa
cmp
dec
mov
sahf
add
inc
insb
fildl
ret
xchg
loop
push
stc
inc
scas
mov
adc
orb
cmp
jns
inc
pusha
out
jmp
fsubs
pop
mov
daa
pop
fiadds
xchg
push
inc
rcrb
insl
xchg
cmpsl
stos
add
pop
mov
bswap
hlt
and
mov
imul
jle
xor
sbb
shlb
pop
sarb
push
inc
aas
pop
cmc
cli
sti
mov
jg
iret
movb
sub
pop
pop
inc
fadds
jg
insl
enter
fnstsw
mov
mov
lcall
jne
mov
xchg
dec
cli
mov
stc
in
gs
cmp
std
sahf
mull
imulb
leave
pop
in
hlt
push
lea
sub
icebp
bound
out
shll
mov
into
icebp
pusha
jo
ret
imul
stos
stos
cmp
xchg
jl
movsl
sti
sub
sbb
mov
pop
mov
mov
jbe
sbbl
inc
je
add
xchg
and
adc
mov
out
ret
mov
xor
cmp
sub
out
int
xchg
popl
push
jecxz
icebp
push
push
rcll
iret
cltd
push
stc
mov
hlt
popa
or
mov
or
mov
insb
in
add
pusha
xor
lods
mov
lahf
into
sti
add
in
mov
adcb
jnp
dec
dec
cltd
xor
inc
out
test
inc
in
dec
ss
dec
js
scas
shll
stc
inc
mov
pop
leave
into
jbe
mov
push
fwait
arpl
xor
addr16
or
adc
mov
in
cmp
cmp
add
and
and
sbb
mov
mov
scas
imul
leave
ja
jle
dec
xor
ffree
sub
shll
imul
and
sub
inc
sbbl
fimuls
loopne
data16
mov
and
subl
cmp
pop
jp
pop
cmp
pushf
lret
jne
outsl
or
pop
cmp
mov
leave
pop
fnstenv
pushf
mov
mov
pop
pop
pop
test
sbb
add
lahf
xor
adc
xor
std
or
adc
test
inc
std
bound
inc
shrb
aaa
and
dec
mov
pop
bound
stos
xchg
enter
mov
sub
cmp
dec
mov
push
cwtl
fisubrl
shl
out
mov
sarl
fsts
xchg
lds
jp
lds
imul
cmp
jbe
add
imul
mov
pop
mov
or
inc
xchg
adc
stos
adc
repz
fnstenv
mov
dec
dec
cmp
xchg
lcall
add
imul
cwtl
pop
clc
stos
out
fdivrl
push
xlat
mov
imul
lret
popf
mov
shrb
mov
mov
fimuls
arpl
sub
scas
out
addr16
ljmp
dec
fdivrs
je
popf
cmp
cli
sub
jle
cli
addl
push
sub
ljmp
out
test
xchg
shrb
or
mov
pop
xor
in
xchg
add
pop
popf
fnstenv
or
pop
insl
ret
adc
jo
clc
inc
fstl
mov
mov
enter
sarb
mov
cmc
mov
adc
sub
cmp
fmuls
inc
xchg
mov
les
test
jecxz
jge
sub
iret
push
xor
cmp
xchg
nop
fs
in
cwtl
js
adc
fbstp
in
shlb
mov
cs
xor
arpl
adc
nop
clc
imul
mov
out
pop
mov
cmpsl
adcl
xor
pop
sub
les
repnz
cwtl
inc
hlt
inc
mov
push
shll
lea
xor
push
into
jp
xor
push
and
scas
lds
aaa
arpl
push
leave
push
xor
pushf
dec
mulb
pop
into
mov
pusha
sub
mov
cmp
rorb
inc
jb
cmp
xlat
xchg
enter
in
xor
arpl
test
cltd
aaa
dec
xchg
add
arpl
push
shlb
or
pop
jecxz
push
cs
imul
aaa
repz
push
add
sbb
std
not
stc
mov
cli
fs
jp
aaa
xchg
push
ret
cwtl
dec
dec
mov
mov
aad
fcom
sub
lods
cwtl
pop
int3
xor
lea
mov
imul
xor
in
cmpsb
and
dec
lcall
icebp
outsl
repz
test
data16
cltd
js
pop
add
stc
in
cmpb
aam
push
in
aas
and
pushfw
add
adc
sbb
add
gs
in
test
adc
enter
mul
les
push
and
dec
fnstenv
lock
cmpsb
xchg
mov
pushf
cli
jmp
int3
pop
ja
inc
mov
sub
movl
mov
mov
pop
into
out
xchg
jle
out
lods
cwtl
mov
and
ss
mov
mov
or
aas
or
mov
inc
cld
fdivl
stos
cs
mov
push
pop
adc
cmp
sub
push
or
inc
sub
xchg
movsl
ljmp
ljmp
jp
daa
jmp
mov
pushf
addr16
das
cli
cs
js
bound
stos
push
push
movsl
loop
push
dec
dec
repz
push
pop
pop
xlat
and
enter
mov
shll
inc
push
shrb
xor
mov
jl
and
mov
mov
xor
ja
into
push
scas
pop
mov
lcall
adc
imul
popf
sub
leave
mov
int3
mov
mov
or
mov
inc
inc
xlat
mov
test
inc
push
bsf
xor
cmpsb
jns
aas
pusha
xorb
iret
pusha
cwtl
mov
bound
mov
ret
cmpsb
je
dec
push
lods
out
fs
push
imul
cmp
lret
leave
add
pop
push
add
push
iret
icebp
enter
outsb
cmpsb
or
cmp
out
insb
lret
incl
sub
lret
adc
rolb
shlb
icebp
pop
dec
lcall
sbb
mov
rcrl
push
cmp
in
in
out
fs
dec
xchg
subl
jnp
xor
outsb
xchg
lahf
and
mov
xchg
cltd
arpl
sahf
sub
andl
hlt
insb
ficompl
and
adc
sbb
divl
repnz
xchg
inc
aam
mov
xchg
push
pushf
es
iret
sbb
test
dec
inc
inc
xor
push
jns
add
popf
lods
pop
sbb
mov
xor
jg
jb
pop
sti
loopne
inc
cwtl
fnstsw
mov
mov
jb
sub
subb
sbbl
pusha
sub
jge
sbb
pop
ret
aad
ret
fsubrp
inc
sarl
pop
andb
jmp
mov
lcall
insb
xchg
fwait
daa
xchg
xchg
loopne
jb
out
mov
inc
mov
movsl
stc
stos
xchg
or
shrl
inc
in
xchg
pop
ds
pop
pop
mov
xorb
int3
repnz
dec
ret
aam
inc
lods
adc
pop
pop
mov
icebp
sub
mov
outsl
add
outsl
fcoms
dec
push
sub
and
movsb
in
in
push
mov
ficoml
jae
gs
arpl
pop
popa
outsb
inc
mov
or
fiadds
loope
flds
mov
pushf
sub
mov
mov
outsb
mov
jo
xchg
ss
pusha
mov
dec
aaa
xchg
loopne
xchg
sar
push
sbb
mov
in
data16
sbb
dec
mov
aad
jmp
imul
cli
jns
mov
jb
popf
mov
je
lcall
cmp
sbb
xchg
rcrl
add
data16
jmp
in
inc
mov
das
pop
ljmp
push
mov
sbb
push
mov
sub
and
roll
es
loopne
mov
les
movsl
lret
mov
jl
stos
rcr
pop
cmpsl
shlw
fisubl
lret
test
ret
inc
outsl
cmp
xchg
bound
sbb
mov
outsb
hlt
inc
add
inc
inc
cmp
jbe
xchg
push
cmpsb
cltd
daa
xorb
xor
push
sub
mov
xorl
adc
jo
ds
xchg
call
scas
mov
arpl
push
xchg
push
xchg
mov
or
or
adc
adc
aad
cld
inc
sub
loopne
adcl
in
aaa
jecxz
mov
push
in
scas
jne
fsubl
dec
pop
aam
and
cmc
ret
push
or
jle
out
fcoms
push
ret
decb
shl
lods
adc
sti
cli
xor
addb
lds
and
mov
fisubl
insl
jae
int
pop
sbb
mov
cmp
add
inc
dec
mov
fsubl
shl
hlt
mov
xchg
push
movsl
sbb
sbb
xchg
cmc
test
add
jae
dec
or
mov
sahf
dec
in
lods
dec
dec
divb
mov
or
movsb
ret
jp
xorb
pushf
fcomps
ja
pop
mov
jne
fnstcw
popa
mov
lret
mov
mov
aaa
inc
cltd
dec
aam
jmp
push
pop
dec
and
imul
pop
inc
mov
jo
es
dec
fsts
add
add
jg
jae
scas
xlat
jo
jne
nop
cmc
mov
cmp
mov
cmc
mov
fwait
pop
hlt
mov
gs
inc
test
cmpsb
pop
sub
or
sbbb
adc
clc
push
fldt
add
sub
push
adc
sbb
fisubrl
fwait
mov
dec
mov
pushf
add
add
lahf
ret
stos
adc
ret
push
shr
or
mull
repnz
jnp
std
lods
pop
stc
pop
jbe
sbb
repnz
adc
imul
dec
sbb
xchg
add
push
decl
mov
orb
daa
cmp
repnz
cltd
xlat
js
sti
inc
mov
sub
inc
mov
fwait
rcll
cmp
or
fdivrs
cld
divl
push
in
xchg
and
scas
xchg
aas
shrl
bound
shl
movsb
ja
pop
ficoms
movsb
call
enter
aas
dec
cmp
fstp
lock
popa
or
push
lea
push
cmc
sahf
pop
mov
aaa
dec
mov
test
lret
jmp
insl
cmp
sub
pop
imul
dec
push
pop
or
pop
and
jae
scas
sbb
ds
adc
cmp
mov
cmp
aaa
stos
mov
fisubl
outsb
cwtl
adc
movsb
sbb
popa
scas
rcrl
mov
sub
mov
or
das
aas
sti
jne
dec
mov
pop
jecxz
insb
js
popf
xchg
cld
adc
adc
and
xchg
pop
jp
add
cmpsb
push
mov
xlat
xchg
aas
add
xchg
iret
idivl
mov
clc
inc
jmp
xchg
push
xchg
push
aaa
ja
ja
rolb
fildl
add
orl
testl
subl
daa
lret
dec
aas
in
rcll
sub
lods
gs
test
cmpl
xor
aad
hlt
scas
cmp
add
dec
popf
xchg
mov
push
test
and
jns
ds
pop
xor
clc
int
push
lahf
xchg
mov
mov
aas
fcmovnu
xchg
mov
adc
fbstp
ss
clc
push
fisubrs
popf
sbb
xor
fidivs
cmp
mov
ja
adc
insl
pop
sarl
mov
mov
jns
loope
aad
xor
cld
out
faddl
addr16
cld
push
xchg
hlt
iret
sarb
jns
jns
xor
pop
mov
inc
in
jae
or
pop
and
mov
sub
xchg
mov
pushf
xlat
test
in
lods
mov
arpl
or
lahf
cmovae
inc
popf
js
hlt
jns
in
sbb
inc
aas
cmpsb
stos
outsl
push
jo
sub
stc
repnz
aaa
mov
imul
mov
jg
pop
inc
dec
in
loope
pop
mov
mov
in
and
xlat
ja
cmpsb
jl
daa
xchg
fs
lcall
push
lahf
mov
sbb
into
fnstenvs
push
fnsave
cli
cmove
je
or
ret
mov
sub
mov
in
mov
add
adc
sahf
es
cmp
faddl
mov
push
sub
outsb
jo
loop
adc
call
add
xchg
ljmp
jb
adc
out
add
mov
inc
mov
xor
xchg
loop
imul
push
mulb
push
incb
scas
stc
pop
js
imul
xor
shr
jo
arpl
cmpsl
test
ljmp
and
clc
pop
inc
lahf
cli
and
dec
rorl
dec
jecxz
out
mov
pop
les
subl
daa
add
or
sbb
mov
mov
push
pop
stos
inc
hlt
rcl
mov
push
cmpsb
lods
jle
add
push
test
mov
loopne
mov
mov
cmp
cmp
mov
aaa
adc
sub
push
imul
dec
adc
jp
pop
push
or
sbb
dec
out
sub
mov
adc
dec
mov
rorl
aas
mov
mov
sbb
cmp
hlt
inc
adc
arpl
xorl
push
jnp
jmp
xchg
jl
aam
aaa
inc
push
clc
cmpsb
stc
cmp
aas
test
jl
mov
push
sbb
dec
mov
adc
sbb
sub
addr16
mov
push
add
inc
aam
jae
inc
sub
add
lods
or
dec
cmpsb
fldt
mov
shl
inc
add
mov
dec
fwait
xchg
mov
jecxz
mov
lods
inc
bnd
ds
int
inc
imul
mov
pop
pushf
sub
push
in
loopne
mov
outsl
cli
sbb
into
test
or
add
pop
add
cmp
and
jne
sub
xlat
sub
stos
xor
sbb
inc
and
sub
hlt
test
push
push
mov
in
dec
jns
cld
ds
loopne
divl
negl
jle
inc
int3
addl
pop
mov
int
sbb
push
nop
sub
or
movsl
int3
jne
cmp
mov
dec
int3
inc
sbb
add
es
or
ljmp
fwait
sbb
int
pop
test
jnp
repnz
inc
je
enter
clc
xchg
scas
test
aas
cli
nop
testb
shll
pusha
push
stos
adc
push
test
ds
fsts
lock
outsl
fdecstp
add
fcmovbe
sub
repnz
inc
push
sahf
in
ja
je
mov
or
fwait
cmp
addl
xlat
xchg
mov
movsb
jne
mov
das
jns
fsts
scas
xchg
push
jnp
cmc
push
mov
add
pop
ss
push
clc
dec
cmc
mov
mov
bound
push
rcrb
add
int3
jmp
jp
jno
bound
sbb
jnp
sub
cwtl
pop
scas
rcrb
dec
and
leave
xchg
cmp
ficompl
mov
mov
mov
xadd
sbb
pop
shll
adc
mov
sbbb
fisubs
dec
pop
ljmp
cmp
jge
aad
sbb
xchg
mov
jl
pushf
sub
fprem1
sbb
sbb
sub
stos
lock
hlt
xor
loopne
cmp
aaa
outsl
cld
icebp
sbb
sahf
sbb
aam
ljmp
inc
sub
in
mov
aaa
lret
push
xlat
test
nop
add
movmskps
lods
mov
jno
jno
jb
cmp
dec
sub
xchg
fwait
loopne
je
gs
mov
fsubrs
mov
xchg
xor
call
xchg
rorb
cli
dec
and
mov
push
mov
add
or
and
sti
shrb
dec
pushf
loop
inc
out
insl
xchg
sub
cmc
xchg
nop
ss
sbb
fmuls
push
lods
ja
dec
out
xor
lea
xchg
xchg
cmpsl
mov
mov
sti
testl
and
addps
or
push
sti
or
xchg
jle
cmp
leave
dec
jb
mov
mov
mov
incb
imul
iret
out
das
or
adc
aas
rcr
pop
imul
mov
mov
pop
mov
pusha
pop
icebp
xor
enter
dec
sarl
xor
xchg
out
push
popf
stos
je
jmp
icebp
and
daa
dec
and
fwait
pop
sbb
push
out
add
xor
rcr
jmp
push
fsubrl
repz
mov
addr16
int
sub
and
lcall
or
sar
adc
xchg
and
push
popa
aam
icebp
loop
pop
pop
inc
fnsave
and
ss
dec
add
lods
and
in
push
push
lock
sbb
jbe
jno
inc
lea
sbb
lock
push
mov
lds
xchg
data16
lea
add
sbb
mull
leave
mov
stos
xchg
xchg
pop
inc
add
loope
and
mov
and
movsl
std
mov
dec
dec
jg
or
repz
mov
jge
fsubrl
les
inc
or
mov
xor
sbb
test
cmp
call
push
mov
nop
scas
xchg
cli
mov
lds
add
dec
test
sahf
das
sbb
aad
jge
xchg
insl
testb
jle
dec
pushf
int
jno
pop
add
cmp
dec
xor
and
lret
negb
xor
mov
mov
dec
mov
bound
xor
ret
mov
subb
cmp
les
adcl
lods
xchg
sbb
jae
dec
dec
pop
ret
mov
add
insb
cld
int3
mov
mov
inc
inc
lahf
lahf
imul
push
jne
sub
xchg
xchg
pushf
outsl
xchg
mov
sbb
lahf
movb
jns
arpl
movsl
cmpb
inc
sti
out
and
xor
sub
iret
dec
sbb
or
and
cmpsb
inc
and
mov
sub
xor
mov
loop
pop
xchg
scas
xor
lock
xchg
dec
mov
mov
cs
outsl
cli
icebp
jae
mov
mov
dec
pop
push
cli
scas
cmp
test
cmp
test
and
inc
push
jno,pt
jecxz
pop
push
dec
outsl
cmc
lds
dec
roll
xor
adc
jle
pop
fwait
lret
push
mov
lret
sbb
and
mov
jb
popf
data16
outsl
mov
ss
scas
adc
inc
insl
imul
movb
cs
cmp
lock
jbe
popa
push
movsl
dec
add
lret
cmp
das
sahf
lret
dec
movsb
icebp
cmc
cli
push
inc
sub
pop
dec
fs
push
inc
nop
push
pop
fistpll
dec
roll
pusha
add
jg
std
or
lea
rorb
fwait
leave
mov
mov
icebp
out
xchg
push
mov
push
insb
sahf
lcall
js
cwtl
dec
xor
mov
push
out
pop
jnp
fwait
jmp
test
cltd
loope
xor
les
sbb
imulb
rcll
push
fwait
pop
push
push
inc
popf
dec
mov
popl
mov
ret
divl
imul
fcmovnbe
cmp
stos
jecxz
dec
outsb
xchg
adc
fistps
dec
add
jb,pt
jns
mov
imul
arpl
lahf
decb
test
adc
fisubrs
pop
pop
or
pop
jmp
dec
fimuls
dec
adc
mov
pop
into
mov
insb
pop
mov
test
xlat
and
jae
jle
fs
aam
xchg
jb
sbb
and
or
outsl
hlt
xchg
mov
mov
xchg
push
scas
pop
mov
mov
mov
call
cmp
sbb
cmc
push
aas
adc
pushf
xor
sbb
push
aaa
dec
fadd
push
push
ret
push
inc
sub
xor
mov
add
inc
push
cmp
push
out
fs
cmc
cld
js
lret
loop
out
ss
aas
and
subl
into
imul
movsb
ss
or
mov
fldcw
jbe
cmp
decb
adc
inc
std
lcall
xor
icebp
cmp
mov
cmp
fdivr
cmp
sub
shll
ss
dec
dec
sbb
out
pop
or
test
adc
xchg
test
xchg
subb
ffreep
test
das
pop
repnz
paddb
jb
std
and
cltd
add
xor
add
mov
xchg
pushf
cltd
call
ljmp
xchg
scas
aad
cmp
xor
fnstenv
or
inc
xor
sub
pop
sub
and
pop
jge
mov
inc
addr16
fsubs
add
jo
sub
pop
int3
and
push
push
xor
or
or
xor
clc
cmp
mov
adc
and
jbe
jp
jns
xchg
push
adc
negl
adc
cli
ja
fucomip
in
das
dec
or
and
cmp
repnz
or
cs
addr16
push
loop
sub
leavew
sub
inc
dec
cmp
sbb
inc
xchg
or
addr16
inc
inc
jmp
add
orps
ret
arpl
jle
dec
jecxz
dec
andb
ds
fdivl
push
repz
in
enter
add
xor
push
pop
imul
push
push
or
mov
ja
je
jno
mov
fs
pop
xchg
ss
sbb
sahf
pop
loope
mov
imul
sub
jno
mov
sbb
loop
clc
lahf
rclb
fwait
ds
ret
push
xor
jne
lock
mov
cmp
inc
into
std
mov
inc
lds
xchg
adc
imul
lods
outsl
cli
lcall
ja
shr
sbb
mov
push
jnp
into
test
xorl
loope
dec
and
cmp
test
jl
int3
sub
sub
jmp
outsl
sub
fisttpll
jbe
jae
mov
push
daa
mov
test
push
and
push
fistpl
jle
movsb
pop
test
dec
nop
enter
lcall
movaps
ljmp
les
lret
sbb
punpcklbw
js
inc
adc
js
inc
xchg
cld
dec
outsl
adc
and
jmp
jo
je
faddl
adc
inc
jb,pn
jp
mov
cld
std
dec
add
repnz
jo
or
lahf
push
cmp
xchg
movsl
iret
icebp
addr16
adc
mov
and
sub
loope
out
in
xor
push
dec
xor
clc
inc
lcall
icebp
out
mov
mov
xchg
mov
adc
int3
inc
or
cmp
or
iret
dec
mov
mov
icebp
stos
lock
mov
push
sbb
cwtl
dec
mov
cmc
mov
lods
add
and
xchg
mov
and
frstor
outsb
mov
addb
cld
sahf
mov
pushf
pop
and
jne
pop
ss
jno
lahf
add
shr
ss
rolb
jne
push
and
adc
jnp
loop
inc
popa
pop
cmpsl
xchg
arpl
cltd
xchg
in
std
mov
call
inc
push
jne
mov
repz
into
ja
cmpsb
dec
inc
pop
and
dec
loop
push
sti
les
mov
sbb
mov
in
int3
push
inc
insb
jae
cmp
inc
cltd
ss
jbe
pop
push
das
repnz
cmpsl
dec
movsb
or
idivl
ljmp
and
sahf
xor
add
stos
lcall
mov
jg
sbb
sbb
xor
adc
sahf
or
pusha
adc
shl
mov
inc
push
aaa
aad
dec
jnp
fnstenv
cmp
pop
fldt
loopne
adc
andl
shl
pop
lahf
inc
stc
imul
cmp
mov
nop
mov
leave
ss
push
sub
ds
sub
aam
dec
push
mov
cmp
jg
pushl
stos
es
xchg
sub
pop
test
cld
push
dec
arpl
insb
pop
jle
lret
clc
lock
dec
imul
or
jnp
sbb
push
mov
fsts
cmp
push
inc
lret
decb
cmp
mov
cmc
push
arpl
inc
js
inc
mov
sub
xor
dec
add
es
fmuls
mov
mov
jbe
mov
jmp
insb
xchg
mov
ljmp
popf
mov
fldenv
dec
jle
jb
pop
pop
movsb
pop
sbb
into
call
push
cmp
je
cmp
cmp
fimuls
jmp
sbb
jg
in
and
add
iret
push
fsubs
mov
sarl
movsb
push
mov
stos
xor
sub
inc
jb
cmp
das
mov
pop
mov
lahf
pop
adc
inc
push
sbbb
jae
and
out
push
mov
pop
scas
inc
inc
or
jmp
xor
inc
adc
lea
push
add
mov
shrb
sbb
nop
mov
jle
sub
mov
leave
aam
mov
xchg
clc
sub
loopne
loope
mov
aam
pmulhuw
ret
dec
mov
and
inc
jge
movsb
cmova
inc
pop
inc
or
xchg
fldenv
inc
add
or
jecxz
sahf
mov
jecxz
out
cmp
stos
jl
pop
sahf
fisttps
and
rcrl
fs
xchg
push
push
andl
mov
sarb
jno
inc
dec
jno
pop
xor
cmp
sbb
jp
xor
mov
fiadds
shlb
inc
dec
aam
aam
imul
add
sbb
js
fwait
sub
cmp
adc
jl
test
out
icebp
ds
lahf
pop
lret
adc
jge
or
lcall
out
aam
shrb
lret
mov
fistps
out
out
mov
xor
or
mov
push
ror
hlt
mov
jl
fildl
mov
xor
push
imul
outsl
daa
fldt
jecxz
jecxz
ret
mov
mov
or
pop
adcl
or
and
movsl
outsl
cmpsb
pop
mov
ret
rcrb
dec
mov
in
in
test
or
js
jge
bt
mov
cmp
ret
mov
adc
cltd
cmp
test
xorl
mov
sbb
pop
iret
ret
int3
lcall
pop
ja
aas
sub
dec
push
test
xchg
mov
shll
push
adc
lods
loop
sub
shlb
or
das
or
and
xchg
xchg
mov
jecxz
dec
bound
orl
rcl
mov
les
mov
mov
mov
pop
mov
mov
lret
inc
scas
and
lods
mov
xor
out
pop
mov
adc
pop
aas
les
pop
add
clc
call
sub
push
add
mov
fstpt
int3
push
movsl
das
and
adc
mov
mov
add
cmp
mov
jmp
xchg
xor
pop
insl
xchg
sub
lods
and
push
dec
ljmp
mov
xchg
cwtl
push
cmp
sub
adc
orl
sbb
movsl
or
lcall
jg
jge
les
popf
daa
into
int3
add
repz
stos
popa
cltd
pop
adc
xchg
gs
inc
push
jp
xor
nop
rcl
andl
mov
or
aaa
add
xor
mov
xchg
in
pop
mov
xor
and
adc
hlt
into
lods
out
stos
and
hlt
shll
adc
xor
lret
sub
gs
cwtl
or
mov
es
or
test
test
mov
push
pop
in
std
imulb
scas
pop
mov
mov
inc
scas
adc
jae
push
add
lahf
out
aam
movsb
cli
push
xchg
jecxz
dec
xor
faddl
dec
and
xchg
testl
and
inc
xchg
mov
call
or
inc
insl
jno
dec
and
adc
sub
sbb
xor
sbb
fwait
xchg
shrb
jg
mov
fwait
lea
ror
lock
cmpsb
cld
xlat
xor
xchg
loope
lods
pop
hlt
arpl
inc
pop
fucomip
mov
repz
xchg
pop
fucomip
mov
mov
cmpsl
xchg
arpl
or
jae
int3
leave
stc
jp
outsb
mov
clc
fists
xor
jbe
sbb
scas
adc
mov
shl
test
sbb
lds
stos
inc
adc
in
dec
mov
insb
push
in
mov
xchg
dec
jne
push
into
xchg
icebp
xor
loope
aam
ret
scas
ss
rcr
or
fstpt
shrd
js
out
or
insb
push
popf
shl
jmp
adc
insb
push
xor
imul
lret
mov
mov
mov
sbb
movsl
push
orb
ret
out
sub
or
std
jmp
fldl
insl
aam
jmp
faddl
xchg
sub
out
cmc
fbstp
sbb
outsb
lock
push
add
mov
or
jg
fs
mov
arpl
je
adc
inc
out
inc
mov
scas
repz
pop
faddp
mov
fidivrs
insb
fscale
nop
in
outsl
test
mov
imul
add
insb
or
imul
movsl
stc
stc
add
lahf
dec
bound
jle
adc
mov
push
leave
das
mov
es
xor
insl
out
push
imull
cmpsb
lahf
cmc
ja
aad
push
add
xor
loope
mov
xor
je
hlt
jge
shrb
orl
pusha
cmp
jecxz
outsl
jge
aam
ds
vmovups
xchg
xchg
adcb
notb
ljmp
addr16
popa
lret
leave
adc
push
dec
rclb
or
jp
sbb
jae
pop
imul
cmp
inc
inc
push
mov
dec
aam
inc
aas
jne
adc
mov
xor
dec
in
dec
sub
xchg
jl
insb
lret
dec
int
xchg
push
pop
or
jecxz
fdivl
mov
xchg
mov
cmp
ljmp
ljmp
iret
lcall
adc
jb
xchg
jp
test
addb
test
xchg
inc
inc
rclb
fists
and
outsb
arpl
cltd
add
lahf
mov
loope
gs
stc
sti
xchg
xchg
mov
and
mov
mov
mov
out
mov
mov
mov
mov
jge
mov
dec
ret
xchg
xor
lds
mov
xlat
call
mov
mov
or
adc
adc
adc
clc
mov
rcl
data16
je
popa
sbb
jmp
js
or
ficomps
addr16
test
and
loop
or
pop
pop
in
push
mov
or
sub
sarb
add
imul
xor
sub
orb
add
cmpsb
ror
sbb
bound
ret
xlat
dec
aaa
into
pop
or
and
dec
leave
sbb
jp
and
dec
inc
jecxz
sbb
xor
cmp
fcoms
rorb
loop
push
jmp
mov
or
dec
mov
pop
add
lock
data16
jo
push
clc
popl
pop
mov
sbb
aam
mov
pop
inc
or
rclb
pop
xor
sbb
sub
loopne
test
js
stos
cld
xchg
push
outsb
inc
mov
and
rclb
fs
das
or
pop
push
mov
push
xchg
jge,pt
mov
xor
cltd
stos
test
mov
and
ljmp
scas
push
jae
cmp
and
icebp
or
push
pop
ds
dec
daa
shrl
xlat
ss
sarb
fstp
xor
rcrb
add
add
xor
popf
jp
jg
scas
lock
mov
imul
or
lods
pusha
popa
push
es
xor
inc
out
je
push
mov
sub
mov
leave
mov
cwtl
les
jg
insb
mov
pop
and
mov
and
andl
dec
call
sub
sahf
aaa
jno
mov
in
xchg
cmp
jecxz
xchg
fiaddl
cmp
imull
cwtl
push
push
or
js
sub
je
xor
pop
das
scas
stos
mov
mov
jns
loopne
or
rorb
aaa
mov
mull
outsb
xchg
mov
mov
jle
out
in
pusha
test
xor
xor
dec
testb
inc
jne
mov
cmp
jne
adc
sbb
jecxz
fnstsw
xlat
cmc
push
dec
mov
dec
movnti
imul
imul
adc
push
sub
sbb
je
je
lret
inc
int
mov
xchg
das
dec
jb
jbe
scas
std
dec
dec
mov
pop
dec
sub
cmc
cmc
push
cli
push
inc
push
scas
rcll
mov
cmp
sti
cmc
fidivrs
add
lea
pop
aam
xchg
andl
je
cmp
sbb
daa
movsl
mov
repz
adc
pushf
xchg
sbb
mov
push
mov
movsb
sub
sbb
movb
jnp
dec
pusha
push
xor
xlat
lea
mov
mov
mov
push
inc
xchg
loop
dec
out
push
jb
mulb
dec
hlt
test
mov
scas
shr
ss
push
mov
sub
jne
or
mov
jb
fs
mov
lds
stos
out
push
xor
push
and
andl
faddp
pop
adc
add
test
outsl
test
adc
inc
int
fildl
lcall
inc
cltd
jae
sub
xor
xor
push
mov
bound
adc
mov
repz
out
pop
cmp
pop
cwtl
orl
out
sub
stos
sbb
jnp
js
popa
lret
mov
push
mov
mov
sahf
add
out
xor
stc
call
leave
icebp
xor
test
cmpsb
xchg
xorb
sahf
or
ficoml
pop
sbb
push
shll
cmpsb
ljmp
or
xchg
or
mov
cmp
sbb
sub
inc
jo
rcl
int3
mov
cmp
sbb
in
dec
xor
in
ds
pop
dec
or
stc
not
testl
sbb
lods
jae
loopne
add
imul
pop
add
dec
dec
lcall
mov
mov
dec
inc
mov
jg
cs
xchg
loopne
jp
pop
mov
test
dec
cld
xchg
sub
dec
mov
lock
xchg
fistl
adc
jne
sub
je
sub
lods
mov
mov
mov
stos
xlat
sub
xlat
jne
add
adc
cmpsb
les
add
out
mov
mov
lret
fnstcw
mov
dec
out
jle
xchg
icebp
mov
pop
int3
jbe
xor
aas
out
int
or
es
inc
mov
and
mov
jmp
imulb
sub
mov
gs
and
mov
pop
pop
repnz
inc
arpl
shl
sar
mov
jbe
aaa
loop
in
sub
and
rclb
fsubrl
int
or
adc
cld
cmpsl
jae
lcall
mov
pop
insl
adc
mov
mov
decb
sub
pop
jns
xchg
push
dec
shrl
mov
fucomip
xor
cmpsl
xor
sbb
stos
xor
add
rorb
ljmp
add
hlt
fdivr
sbb
dec
cmc
call
sahf
repz
inc
fstpt
rcrb
cmp
in
in
adc
mov
dec
adc
and
mov
hlt
mov
inc
push
stc
jecxz
mov
xor
xchg
in
int3
sub
push
jo
xchg
push
or
xor
jle
fldl
int
rcll
push
cmpsb
and
mov
push
repz
rcrl
cmp
sub
movsb
push
lock
xchg
push
shl
std
mov
scas
cld
fcoml
pusha
fisttps
mov
lret
scas
cmp
leave
cmp
fs
addr16
dec
out
cli
nop
push
imul
enter
mov
loopne
push
cmp
or
imul
aas
xchg
and
fwait
push
push
or
mov
ja
icebp
faddl
pop
popa
icebp
cmp
xchg
cmp
test
or
push
sub
insb
jge
insl
jbe
push
jne
mov
mov
inc
les
inc
sub
pop
mov
stc
adc
sub
mov
pushl
arpl
cmp
out
jo
cwtl
dec
insl
popf
in
das
adc
rolb
stc
out
mov
pop
push
and
scas
out
hlt
lcall
inc
movsb
testl
lea
pop
call
sub
add
adc
movsl
lock
in
cmc
push
push
out
mov
inc
add
cmp
xor
in
mov
mov
js
daa
dec
mov
loopne
push
jmp
test
and
mov
mov
pushf
pusha
call
movsl
adc
mov
rcr
lock
jecxz
push
ret
leave
movsb
mov
jl
jp
jne
cwtl
popl
sub
jnp
shlb
fisubrl
ret
jae
stos
dec
sbb
push
lds
dec
in
add
mov
jbe
inc
cmp
dec
pop
lcall
push
pop
pop
fidivs
sti
dec
fstps
notl
inc
sbb
dec
sbb
bound
in
sarb
add
adcl
mov
out
push
pop
sbb
cld
sub
push
imul
or
lods
dec
adc
mov
sbb
cmp
jecxz
mov
sbb
adc
mov
push
out
xorb
mov
sub
in
or
popa
fcmovne
inc
aam
xchg
dec
pushf
push
subb
leave
mov
or
mov
dec
lea
lock
push
xor
in
pop
lcall
push
mov
lcall
cmpsb
call
arpl
xchg
pop
mov
lock
mov
xchg
daa
mov
insl
add
dec
ljmp
hlt
shrl
xchg
lods
mov
movsb
repz
and
push
pop
leave
data16
push
lock
iret
mov
and
lcall
pushf
mov
mov
push
and
adc
jle
in
mov
incb
mov
lret
push
sub
rcr
xchg
jae
stos
ds
sbb
ret
cli
icebp
sbb
cmp
aad
addr16
inc
and
test
xchg
mov
cmp
xchg
lret
push
push
adc
jo,pn
xlat
sub
xchg
mov
cmp
popa
pop
xchg
xchg
pop
lods
lret
test
ds
repz
or
pop
add
loop
mov
inc
inc
push
lea
test
sub
dec
in
jno
jecxz
jecxz
aaa
fcoml
add
rcl
aaa
mov
pop
fcomp
hlt
mov
out
push
mov
mov
hlt
adc
xchg
inc
sub
push
mov
stos
xchg
jmp
scas
push
add
pusha
pusha
and
xor
sub
mov
nop
pop
out
cmp
push
push
enter
ret
jl
iret
adc
mov
push
shl
pop
adc
clc
push
dec
lahf
sarb
mov
mov
xchg
push
jbe
movsl
adc
shll
iret
sub
fldenv
dec
xchg
test
movsb
ja
inc
and
jp
inc
pop
adc
ret
mov
cmp
push
mov
mov
pop
xor
stos
push
rcl
inc
dec
stos
xchg
pushf
int
in
fdivrp
mov
iret
mov
mov
sbb
and
mov
sub
jl
add
and
jo
mov
fstpt
jle
dec
xor
fiaddl
in
lret
mov
dec
jg
cld
addr16
dec
outsl
pop
sub
push
xor
loopne
ds
jp
sbb
mov
loope
pop
neg
fists
mov
scas
mov
cmp
jno
ret
hlt
lock
popf
ret
dec
xor
pop
xchg
push
mov
loop
fcomi
fbstp
add
rclb
mov
mov
test
es
xchg
or
dec
ljmp
cmc
fcoml
add
es
scas
inc
sub
dec
icebp
fisttps
stos
mov
jne
xchg
sbb
pop
cltd
lock
call
jp
jae
das
sbb
es
mov
cmp
cmp
mov
cld
mov
and
jno
or
mov
mov
ficoml
lcall
sahf
pop
push
scas
cmc
imul
mov
xlat
cli
cld
in
dec
or
loopne
shrl
mov
push
mov
dec
inc
push
lds
xchg
notb
addr16
inc
enter
inc
dec
mov
jno
sbb
shr
cmpsb
bswap
shll
clc
pop
pusha
aas
sbb
aam
mov
inc
fisubs
mov
ret
push
mov
inc
sbb
outsl
sbb
out
nop
jno
push
nop
jno
gs
dec
jb
lcall
lahf
sbb
add
adc
lret
arpl
push
jnp
xor
pop
pusha
mov
das
push
popa
mov
js
into
jge
flds
cwtl
clc
test
adc
int3
fs
repnz
jmp
fimuls
aad
dec
adc
out
cmc
jne
iret
pop
jo
scas
jne
mov
sub
and
pop
pop
adc
jno
test
test
leave
lcall
sahf
frstor
das
mov
fwait
mov
adc
cwtl
rcl
sub
dec
cld
push
dec
repz
cmp
fidivrs
xlat
lock
add
in
push
pop
iret
sub
ret
cmp
mov
push
jae
or
fldl
gs
adc
imul
adc
pop
push
xor
imulb
mov
cmp
fdiv
mov
push
pop
pop
dec
rcrb
jl
jne
jge
mov
loope
mov
and
sub
lahf
mov
inc
loop
mov
mov
lret
int3
aaa
out
cmc
adc
shrl
dec
jb
mov
enter
hlt
out
add
scas
sbb
mov
sub
lahf
int
mov
xchg
rcll
test
sbb
sbb
mov
pusha
jmp
call
aaa
roll
fimuls
ret
loop
jmp
loope
mov
outsb
sub
cmp
mov
jmp
scas
xchg
xor
lcall
jle
mov
scas
out
cs
mov
cmp
jp
sbbl
daa
stos
cwtl
or
ds
pop
notb
popa
mov
cmp
cmp
lock
fs
fmuls
xchg
jl
dec
movsl
enter
sbb
xor
inc
pushl
ss
bound
mov
inc
test
std
push
lahf
or
popf
inc
pop
cs
xchg
cld
dec
shrb
lcall
lret
out
xor
sub
addb
mov
adc
push
sbb
push
or
fnsave
fmul
push
ljmp
or
or
pop
sbb
test
push
mov
into
or
pop
pop
add
pop
stc
push
inc
jb
scas
aas
cs
add
jmp
or
jecxz
ja
lret
xchg
mov
loopne
sub
lods
gs
cli
fs
popa
fwait
mov
ds
inc
jne
andl
inc
push
jge
leave
cli
mov
push
divb
scas
jmp
adc
sub
imul
mull
mov
lds
add
bound
lret
mov
fwait
mov
jns
xor
cmp
rcl
loopne
inc
or
inc
and
inc
ret
jb
pop
and
pop
cld
jb
jl
mov
sti
push
aas
xchg
testb
adc
ljmp
mov
arpl
testb
xchg
xor
into
mov
xor
popa
xchg
or
inc
cltd
add
test
adc
and
pop
movsl
aas
push
les
push
mov
addr16
dec
pushfw
cmp
cmp
ret
leave
scas
sub
mov
out
push
jmp
loopne
daa
and
sbb
arpl
inc
cld
jmp
std
scas
xor
xchg
aaa
push
movsb
jbe
mov
cmpl
push
and
jg
out
into
jno
test
jns
popf
popf
sub
pop
outsl
mov
mov
mov
push
jbe
mov
in
or
sub
mov
push
iret
fcompl
inc
pop
lods
cld
mov
mov
test
mov
popf
jmp
push
and
cli
mov
dec
fidivrl
out
add
xchg
jle
sarb
xorb
and
mov
cltd
jecxz
cli
xor
cmpb
xor
jp
xor
adc
jnp
aam
popf
aad
repz
jge
notb
lods
lea
sbbl
push
lods
shll
xor
scas
pop
xor
pop
out
insb
mov
push
sbb
xor
xchg
add
push
mov
add
adc
sub
mov
lcall
cmpb
mov
mov
arpl
fldt
nop
pop
in
bound
stos
repz
jae
inc
into
push
adc
lret
dec
aam
add
lret
xchg
nop
dec
pop
and
dec
ds
push
loop
jmp
ja
sbb
das
dec
lds
and
and
cs
pop
stc
pop
rcrl
fcmovbe
sbbl
jnp
rorb
dec
sbb
inc
jmp
mov
cli
xor
sub
pop
scas
lret
lock
scas
popa
lcall
out
out
push
mov
push
adc
inc
xchg
mov
clc
xor
mov
imul
iret
or
mov
pop
mov
jbe
test
inc
arpl
loope
fs
cld
repz
fs
xor
cmp
out
xchg
cmp
or
jecxz
mov
or
out
mov
dec
arpl
inc
andl
cli
inc
aas
push
jmp
repnz
cmpsl
add
movsb
adc
xor
cmp
bound
mov
push
push
pop
inc
mov
movsl
push
stos
dec
and
movsl
and
push
or
xlat
cwtl
cmpb
sub
sub
pop
cmpsb
xchg
fdivrs
mov
cmp
or
xor
je
ss
inc
aad
daa
ret
jg
lds
test
xor
pushf
jnp
push
lods
and
xchg
cmp
jg
jl
and
cmp
jmp
lret
fisttps
enter
repz
jecxz
inc
and
or
sub
mov
sbb
or
sub
sub
int3
leave
inc
lcall
ficompl
sbb
ljmp
fsts
xlat
xchg
lcall
jle
mov
out
adc
jne
pop
sub
or
out
push
cmp
sti
push
test
stos
xchg
ja
and
rcl
subb
into
lods
xchg
idivb
out
das
cmp
sub
fisubl
fs
das
dec
inc
mov
jb
jmp
add
jg
in
jecxz
lret
push
mov
int3
xchg
sbb
lret
fwait
jae
or
arpl
add
mov
cwtl
sbb
mov
push
js
xlat
inc
cmp
jnp
push
cld
mov
lahf
pop
lock
mov
ss
push
adc
or
mov
adc
dec
jae
in
mov
or
pop
ljmp
add
adc
xchg
inc
xor
and
iret
pusha
push
inc
out
out
jmp
push
add
enter
imul
xor
nop
pop
and
pop
dec
and
stos
and
mov
aas
insl
pop
insb
test
idivb
jmp
call
shrl
mov
into
pop
cmp
dec
xchg
std
icebp
or
fisttpl
xor
fdivrp
xor
xor
xchg
ljmp
push
icebp
sub
dec
data16
into
xlat
stos
rcll
out
and
loope
or
dec
sahf
addl
clc
lock
cmp
dec
sub
push
adc
stc
addb
pop
aas
mov
jmp
rorl
dec
xchg
sub
dec
xor
add
fcomps
fldl
push
outsb
and
rorb
popa
push
xor
scas
push
jmp
cmpsl
loopne
sahf
adc
out
pop
movsl
inc
adc
push
and
das
out
mov
hlt
pop
dec
mov
push
and
in
push
inc
pop
xchg
mov
clc
frstor
jo
push
inc
xor
mov
cli
cwtl
dec
rcrb
jo
push
icebp
sub
lret
aas
pop
add
xor
iret
aas
into
lock
addl
std
xor
lds
add
dec
loope
add
pop
xor
jecxz
mov
sbb
xor
adc
or
insb
pop
repnz
add
xchg
daa
mov
mov
or
in
pop
ror
jb
sub
add
rcrb
out
adc
lret
xchg
cwtl
jp
addr16
xchg
and
pop
or
test
lds
add
mov
or
inc
lcall
mov
sbb
call
xchg
sub
jns
mov
push
add
add
pop
mov
mov
out
idiv
arpl
or
and
and
adc
cmp
pop
loopne
sub
mov
sbb
adc
mov
hlt
inc
or
sahf
jge
xchg
jae
or
cmp
dec
dec
icebp
sbbb
dec
pop
mov
ret
push
mov
imul
int3
mov
or
scas
cs
movsl
mov
mov
cmp
mov
enter
subl
notl
adc
sub
aam
push
sbb
cmp
lea
adc
mov
dec
mov
mov
dec
jae
mov
dec
je
repnz
mov
cmp
repz
mov
mov
lret
push
push
loopne
push
imul
out
data16
push
into
aas
insb
mov
loopne
ljmp
mov
add
mov
push
addl
inc
arpl
inc
hlt
leave
mov
loopne
dec
jle
imul
aam
xchg
cmp
call
idivb
pop
loope
mov
xchg
and
adcb
outsl
xor
sbb
js
cmp
sbb
imul
or
enter
mov
jne
sbb
dec
sbb
out
pop
cmp
mov
xor
out
lds
cmp
fimull
into
mov
xchg
jae
divb
jge
jmp
ds
xor
xchg
pop
das
push
gs
cmp
xchg
pop
xchg
cmpsl
popf
imul
inc
mov
insl
popf
cwtl
lret
imul
pop
leave
jns
push
lds
mov
shll
daa
inc
cmp
mov
pop
fldl
lret
push
push
cmc
leave
ja
insl
cld
iret
mov
pop
push
dec
pop
ret
outsl
add
push
push
aas
scas
xchg
adc
mov
flds
pop
es
popa
sub
push
dec
inc
push
inc
jo
adc
sbb
repnz
or
or
shll
adcb
push
in
inc
outsl
sbb
jmp
cli
negb
or
sub
test
and
testl
mov
jbe
cmc
cltd
std
test
aam
and
inc
mov
arpl
cmc
sbb
dec
adc
outsb
inc
sub
sub
cmpsl
test
les
je
sub
mov
bound
pop
adc
cmpsb
add
pop
pop
jae
push
add
inc
ds
inc
dec
fwait
jecxz
fidivs
mov
outsb
mov
xor
stos
inc
scas
shl
sbb
mov
outsb
sbb
xchg
pop
mov
test
pop
lea
fld
lock
dec
and
ss
in
jge
stos
test
fwait
xchg
inc
notl
clc
push
andb
int
jge
call
inc
popa
roll
add
mov
xchg
imul
in
push
fisubrs
adc
nop
pushf
loopne
sti
adc
sarb
mov
outsb
xor
fimuls
cmp
out
fistpll
pushf
faddl
fdiv
mov
dec
push
imul
std
jp
dec
sub
punpckhbw
mov
mov
adc
jae
and
cmp
xchg
repz
movl
lret
es
mov
ja
adc
cli
xchg
popf
lods
pusha
or
lcall
lods
shrb
test
pop
dec
push
pop
and
cld
ljmp
ss
mov
pop
and
daa
fimull
jns
arpl
lret
filds
inc
or
sub
shlb
popl
jecxz
adc
lret
jg
xchg
das
enter
int
out
inc
adc
adc
ja
lcall
fucomip
out
js
scas
adc
inc
mov
sbbl
test
or
xor
xchg
stos
add
push
enter
jmp
cwtl
and
jp
fisttps
push
and
xchg
popf
stos
xchg
mov
sub
lahf
xor
sti
jb
and
repnz
lock
cmp
imul
dec
jge
pushf
cmp
test
mull
divb
or
pop
and
mov
lock
mov
push
dec
xchg
mov
sub
cld
or
insl
sahf
mov
mov
icebp
pop
push
xor
fwait
dec
sbb
test
mov
imul
sub
lea
int
leave
mov
mov
mov
or
fdivrl
daa
shrb
int3
cwtl
icebp
divl
bound
xor
xchg
sub
in
pushf
mov
ja
dec
into
add
test
or
mov
sarb
in
dec
daa
cmpps
popf
stos
push
insb
mov
jg
dec
in
daa
ljmp
xchg
rorb
and
add
movsb
lock
or
imul
adc
cmpb
inc
lcall
mov
or
movups
sbb
cmp
fldenv
popf
mov
sarb
jle
dec
push
dec
aad
inc
push
ja
dec
pop
mov
mov
xchg
in
in
cli
fmull
loop
cmpsb
jecxz
fwait
rcrb
pop
and
sti
outsb
and
ss
roll
shrb
popa
mov
jge
mov
adc
icebp
ds
push
xor
pop
push
jl
test
sti
push
das
pop
sub
mov
mov
jle
dec
ret
add
sub
jns
test
stos
pop
mov
das
lahf
add
pop
and
test
cwtl
ljmp
add
dec
cld
mov
jge
in
inc
aam
add
data16
dec
mov
dec
in
adc
test
lds
mov
sub
and
xchg
les
push
xorb
cltd
push
icebp
xlat
out
loope
ja
or
into
mov
mov
pop
adc
mov
stos
push
mov
into
in
or
orb
stos
fimuls
adc
sub
add
mov
stc
addl
jo
scas
pop
sbb
xchg
test
inc
mov
mov
out
xchg
aad
cld
cmp
mov
xchg
xchg
dec
insb
lds
in
sarl
fprem1
sub
test
lods
mov
loop
adcl
dec
sbb
and
inc
std
and
out
lcall
or
fistpll
shrl
and
cwtl
mov
cli
mov
lds
roll
repz
dec
test
das
in
repz
into
xchg
hlt
push
xchg
stos
cmp
push
jne
pusha
mov
movsb
add
lds
inc
loop
sub
and
fistps
dec
shlb
into
cli
js
sub
cmpsl
fistpll
icebp
jns
jb
outsl
mov
push
sub
fdivs
pop
cmp
push
dec
dec
mov
js
outsl
leave
add
mov
mov
push
mov
cld
add
inc
dec
add
adc
adc
movsb
jl
scas
push
frstor
cmp
addr16
mov
lret
jle
fidivs
lods
stc
pop
std
xlat
push
inc
mov
inc
jnp
cmc
push
dec
sub
or
popf
mov
lods
adc
ffree
cmp
dec
cmp
xor
icebp
dec
shl
cwtl
sub
sahf
push
repnz
add
ljmp
cmp
pop
jecxz
pop
outsb
sbb
and
sub
ljmp
dec
jne
jecxz
xor
test
jno
sbb
lds
loope
mov
neg
xor
xchg
cmp
movsl
sub
inc
fwait
mov
pusha
pop
insb
jne
popa
mov
cmp
ljmp
cmp
sub
mov
push
repz
xor
add
adc
or
cmp
imul
mov
push
mov
push
mov
shlb
push
hlt
add
push
xor
add
cmp
popa
inc
jnp
and
es
sub
lock
add
sbb
jae
xor
jae
rorb
mov
pop
and
loope
mov
shl
int3
jg
lcall
jno
imul
lods
stos
or
cld
fidivrs
popa
push
inc
leave
mov
cmp
je
js
out
imul
adc
and
gs
and
dec
push
mov
xchg
cs
scas
ja
push
push
lret
xor
popf
outsb
or
outsl
adc
jnp
fwait
scas
mov
inc
jl
xchg
xchg
xchg
sub
sbb
out
rorb
mov
movsl
in
ror
ds
inc
test
mov
xchg
pushf
insb
fcompl
inc
jns
sbb
outsl
out
inc
int3
lret
fimuls
jb
lods
test
xor
mov
or
dec
popa
imul
mov
jge
sbb
in
cmp
fldt
mov
scas
inc
push
js
xchg
sub
fwait
lcall
mov
clc
xor
mov
pop
jo
ficomps
mov
out
adc
add
test
and
xchg
mov
iret
mov
jg
mov
in
mov
in
mov
xor
scas
mov
movsb
mov
pusha
pop
jge
popf
mov
lret
into
addb
fidivrs
inc
jmp
pop
das
clc
pop
cmp
and
hlt
adc
aaa
lock
xchg
lea
sbb
sbb
cmc
xchg
repz
iret
test
pop
mov
add
jne
dec
stos
divl
es
aam
dec
aad
adc
nop
sub
mov
sbb
out
ret
add
sbb
bound
pop
cmpsb
cmp
xchg
stc
lds
int
in
ret
add
lcall
fbstp
xorl
inc
jp
push
pop
insl
jp
pop
sub
xor
dec
push
lcall
dec
jecxz
cwtl
mov
or
cmp
xchg
movsb
incl
hlt
xor
xor
in
jecxz
outsl
mov
test
adc
test
stc
xchg
dec
repz
xor
cmp
mov
pushf
lods
push
fwait
ss
gs
jmp
repnz
mov
sti
dec
call
call
lock
stc
dec
add
push
xchg
shlb
aaa
ret
push
lcall
mov
pop
das
stc
cltd
inc
orl
out
xchg
inc
mov
aas
es
cltd
xchg
cmp
mov
clc
jmp
sbb
mov
dec
cli
mov
mov
push
cmpsl
xchg
movsl
jmp
and
jg
pop
pop
and
xchg
divb
mov
xchg
test
push
std
es
les
xor
xchg
or
mov
mov
mov
inc
loopne
js
into
and
sbb
dec
mov
adc
sub
mov
repz
cmp
test
or
mov
mov
sub
outsl
add
cmp
inc
lods
ljmp
std
insb
std
push
fistl
stc
fld
inc
push
push
jl
hlt
iret
adc
push
daa
popa
cmp
je
xchg
mov
inc
push
adc
inc
pop
mov
push
push
adc
loope
add
dec
enter
or
mov
xchg
sub
or
push
push
jmp
mov
aas
and
cli
js
or
shlb
stos
xorb
pop
push
imul
roll
mov
jmp
jb
andb
jp
jl
sub
test
movsl
sti
cmp
push
aam
popf
sbb
repnz
fwait
inc
mov
jl
mov
xchg
jecxz
iret
mov
xchg
in
movsb
cmp
pop
sub
inc
inc
mov
pop
cmp
xchg
stos
add
sbb
or
dec
mov
jp
stc
mov
jo
sti
loop
sbb
sbb
lret
jmp
rcr
popf
and
mov
ljmp
insl
inc
das
lahf
inc
popa
mov
jge
daa
mov
lret
nopl
lds
pop
leave
push
test
int3
jns
mov
jbe
das
dec
inc
repz
mov
inc
dec
es
inc
icebp
dec
mov
lea
pushf
icebp
mov
push
test
inc
cs
aad
mov
or
add
test
adc
int3
loop
pop
scas
xor
cmp
push
jl
dec
out
xchg
lcall
lock
xor
cld
adc
popa
adc
jge
insb
sbb
mov
and
cmp
sbb
mov
xor
cmp
mov
xor
jle
mov
xchg
movsb
and
daa
xchg
scas
fsts
inc
lret
adc
repz
cmp
mov
sub
mov
mov
adc
xlat
ret
scas
jb
movsl
and
mov
stos
adc
fstps
sub
cld
in
jo
pop
and
movb
cmp
movsb
inc
lahf
jp
cld
xchg
inc
test
mov
or
pop
xchg
push
in
or
push
outsl
pop
lock
inc
cmpsb
sub
and
adc
not
and
rcrl
xor
pusha
mov
jp
loope
adc
adc
imul
loopne
pop
jae
sbb
mov
cmp
movsb
and
dec
dec
pop
fiaddl
dec
pop
enter
mov
sub
ljmp
push
gs
test
pop
das
fstpl
and
xlat
mov
sub
pop
or
dec
pop
pop
sbb
daa
inc
lahf
leave
arpl
lods
xchg
sbb
or
sbb
addl
and
lds
sahf
inc
sub
push
popa
jge
xorb
lahf
inc
pop
jg
js
ds
lods
out
jl
push
int
loop
test
shlb
sbb
mov
test
lods
and
jg
insl
push
jle
inc
jge
in
and
pop
or
outsb
popa
xlat
inc
sub
xchg
jl
push
xchg
xor
mov
mov
mov
ret
cmp
jnp
fimull
cmp
ret
int3
sub
mov
add
int
or
pop
aam
nop
add
scas
bound
sarl
dec
lcall
sub
out
sub
stos
xchg
dec
xchg
push
add
ret
and
lods
testb
test
hlt
mov
lock
iret
movsb
mov
sahf
cmp
test
iret
xchg
shl
mov
xchg
adc
fsqrt
ret
test
fwait
sti
popf
sti
ja
sahf
pop
mov
xchg
test
xchg
hlt
call
fsubr
fucomip
push
scas
push
lcall
push
mov
rclb
ljmp
emms
and
icebp
aaa
dec
push
adc
lds
jge
jge
aad
cld
push
dec
inc
sahf
cmp
fistpl
cmp
sahf
hlt
jae
daa
inc
mov
sahf
arpl
test
inc
adc
cmpsb
cli
or
xchg
lret
nop
in
stos
push
out
mov
sbb
addr16
xchg
cmp
jg
ret
arpl
push
xor
out
xlat
or
outsb
arpl
idivb
stos
cmp
mov
dec
dec
shlb
sbb
clc
out
jle
jmp
push
int
fwait
push
and
lock
pop
popf
and
add
push
cmpsl
push
and
cmpsb
mov
pop
lcall
or
dec
mov
sub
pop
fbstp
push
js
xchg
add
cmc
ljmp
pop
pop
jbe,pt
cs
lcall
xchg
cli
movb
jmp
push
fsubl
jge
and
jp
cmc
icebp
aaa
fwait
lret
and
mov
les
sub
jne
push
and
xchg
ficomps
loope
mov
imul
loopne
aad
xor
xchg
mov
das
xchg
icebp
sub
sub
jle
aad
mov
mov
cmp
inc
movsb
or
dec
test
adc
cmc
test
push
cmp
sub
add
addl
push
mov
and
add
ds
adc
test
cmp
aam
pushf
lods
ljmp
cmp
pop
stos
push
dec
and
jle
in
fs
jno
lods
rcll
aad
andb
mov
pushf
rcrb
js
lahf
les
xchg
adc
xor
lahf
push
push
ror
lods
pop
jnp
fwait
mov
testl
mov
xor
imul
fidivl
test
les
stc
and
lock
xor
je
xchg
or
les
jg
inc
ds
stos
sbb
or
or
repnz
popf
je
repnz
pop
dec
ljmp
fucomip
je
fdivr
nop
mov
xor
adc
pop
dec
call
call
bound
mov
cld
or
jecxz
call
inc
sbb
lea
inc
adc
test
push
enter
pop
sbb
xchg
pop
sti
mov
xor
js
imul
fdiv
es
dec
inc
int3
rcrb
shrb
mov
adc
and
aam
dec
jb
add
sub
loopne
mov
mov
adc
dec
fwait
or
mov
sub
cltd
or
xchg
mov
out
notl
mov
arpl
mov
out
ficoms
mov
xor
inc
push
and
xor
cmp
int3
sbb
cwtl
int3
sub
sbb
psubw
scas
push
jb
gs
insl
daa
mov
out
ss
cmp
out
mov
std
cmpl
cmp
in
into
xchg
xor
fldenv
lcall
shl
jno
out
shlb
and
push
xor
cmpsl
js
fwait
cmp
adc
push
xor
mov
enter
aad
xchg
mov
jnp
std
movsb
aad
dec
iret
push
and
jnp
in
xchg
int3
scas
mov
pop
mov
data16
unpcklps
ljmp
pushf
inc
rolb
pop
aam
mov
loop
dec
mov
les
outsl
mov
push
clc
push
lret
rcrl
rcrb
fbstp
movl
movsl
jne
jno
pop
fisubl
push
dec
inc
or
xchg
movl
rcrl
sarl
sbb
adc
pop
add
mov
cwtl
test
mov
jbe
sub
xchg
add
nop
mov
adc
xchg
cltd
cmpsb
testl
repz
mov
sbb
xchg
push
iret
push
jbe
cmp
adcl
pop
in
jg
scas
fadd
scas
nop
push
ret
lcall
stos
ret
jbe
lahf
shrb
add
sub
daa
je
sub
or
ret
pop
jo
jg
sahf
add
push
scas
jle
and
ret
sbb
inc
inc
jno
pusha
mov
and
sbb
xlat
call
in
std
and
je
outsb
jo
cli
aam
and
mov
jno
arpl
inc
iret
clc
daa
shll
jbe
push
fidivl
mov
movsl
mov
dec
xchg
inc
mov
pusha
outsb
sub
sub
bound
out
out
adc
pop
orl
add
push
ljmp
das
and
ret
cmc
mov
sbb
orb
inc
and
mov
push
dec
jg
hlt
loopne
or
mov
insl
pop
xlat
dec
inc
adc
pop
ljmp
hlt
int3
fistps
sbb
pop
lret
popf
cmp
mov
jmp
add
mov
std
mov
aas
test
insb
test
lahf
mov
cmpb
mov
push
call
pop
popf
pop
cmp
mov
and
les
inc
lcall
inc
sbb
out
ficompl
in
adc
add
gs
mov
call
sbb
pushf
sub
xchg
ja
dec
dec
fcmovnbe
rorl
fstpl
xor
jecxz
ja
inc
or
and
adc
xchg
popa
jl
dec
pushf
inc
push
sahf
mov
or
sbb
test
xlat
and
lahf
mov
push
add
sbb
lea
inc
pop
mov
jge
mov
pop
jbe
mov
insb
mov
sbb
cmp
mov
daa
pop
add
mov
push
fisubs
ret
rcr
pop
xor
jmp
pusha
stc
mov
mov
pop
nop
rclb
popa
push
sub
pop
xchg
sub
aas
out
jle
pop
or
sbb
inc
adcl
mov
js
and
mov
xchg
dec
pop
scas
and
in
pop
inc
lock
inc
pop
stos
xchg
xlat
inc
push
repnz
adc
push
dec
jns
insb
imul
ljmp
fbld
aaa
aam
mov
addr16
sub
jbe
sbb
mov
cmp
popa
mov
imul
das
mov
popf
xor
jle
push
cmp
cwtl
gs
adc
lods
test
xor
sti
movsb
dec
cmc
cmc
ss
dec
jl
stos
outsl
dec
xor
shll
pop
ror
or
inc
pushf
lods
cmp
add
leave
cld
popf
test
xchg
mov
dec
jne,pt
in
lock
dec
dec
cmp
cli
push
les
xor
data16
pop
pusha
jmp
xchg
or
dec
lea
mov
fiadds
pop
push
dec
mov
xchg
dec
adc
das
jg
ret
push
push
jge
lock
lods
mov
clc
bound
pop
jmp
or
into
mov
jp
xchg
inc
and
sti
adc
adc
aas
fistpl
in
jl
push
push
insb
inc
pand
pop
cmp
push
ss
shrl
push
xchg
jb
jmp
in
aam
aaa
aad
and
in
pop
sti
xchg
cmp
loop
dec
fstl
in
sub
jb
movsb
iret
enter
push
aam
pop
or
in
lret
fcomip
outsw
sub
adc
and
mov
sbb
test
dec
and
xchg
xor
xchg
xchg
xor
dec
mov
jp
dec
mov
adcb
aas
fs
fsubl
lcall
dec
shrl
bound
push
iret
or
dec
mov
sub
ret
gs
loope
mov
jle
or
sbb
jmp
movb
cmpsl
movsl
sub
js
dec
xchg
pop
mov
adc
xlat
cmp
repnz
xchg
lahf
test
mov
pop
pop
cmp
dec
shrl
scas
rcrb
sub
data16
arpl
ja
pushf
push
stos
data16
xor
insl
add
push
pop
xchg
cmp
jmp
xchg
sub
mov
fisttps
je
cwtl
mov
and
mov
xchg
or
jp
lods
or
mov
and
gs
stc
out
mov
or
jnp
xchg
repz
imul
movsb
aaa
jnp
je
outsl
cmp
and
xchg
insb
sub
mov
movsb
mov
cmp
shl
push
mov
lahf
sbb
loop
add
movsl
and
repnz
xchg
pop
adc
aas
jmp
stc
out
das
ljmp
push
xor
mov
nop
aam
out
aad
lds
jbe
sahf
gs
push
inc
es
and
jge
sbbb
repz
sub
pop
jmp
adc
adc
cmp
jbe
mov
jle
xor
jmp
jnp
ret
dec
xor
cld
push
inc
mov
in
mov
or
push
shrb
mov
adc
in
insb
lahf
mov
cmpsl
pop
mov
ret
jno
cmp
clc
rcrl
jno
xor
pop
ficompl
push
in
ret
ljmp
rcrb
fidivrs
iret
jmp
sti
lret
gs
fldt
ds
xchg
inc
sbb
mov
filds
js
jo
std
sbb
xor
aaa
mov
iret
mov
sub
movsl
inc
dec
inc
shll
pop
inc
clc
filds
pop
sbb
loop
jb
push
sbbl
call
lods
out
in
dec
xchg
mov
and
or
or
xor
push
sti
inc
sti
dec
ret
ljmp
mov
test
add
movsb
cli
addr16
les
mov
sbb
xor
cmp
cmpsl
cmp
hlt
cmpsb
jle
cli
leave
and
out
adc
cltd
and
andl
jg
jns
inc
inc
add
add
pop
mov
mov
enter
xchg
add
inc
jecxz
xor
aas
mov
mov
les
test
lods
dec
add
mov
or
repz
cmp
outsb
shr
sbb
sahf
arpl
pop
sbb
out
scas
add
sub
or
dec
dec
mov
push
fxch
or
fdivs
jle
push
or
out
jno
inc
jmp
out
or
lret
push
mov
into
xchg
sub
incb
jb
mov
fildll
xchg
fisubs
out
outsb
pop
jo
addr16
mov
hlt
or
icebp
jmp
insb
and
daa
inc
repnz
orb
pop
push
mov
pushf
mov
movsl
mov
mov
call
xor
js
pop
xchg
dec
mov
mov
push
movsl
movsl
jl
mov
leave
test
mov
cmp
daa
mov
sti
push
dec
fiaddl
adc
arpl
jo
xchg
mov
add
aaa
push
jl
jbe
subl
pop
out
scas
ret
cld
inc
out
dec
push
cs
adc
insb
clc
cld
fidivrl
ss
pusha
inc
dec
xor
nop
fs
test
test
mov
mov
daa
xor
xchg
jno
test
out
mov
call
aad
jle
les
ror
add
ds
popa
push
push
inc
xchg
mov
inc
mov
mov
into
cmpsl
mov
orb
in
lret
fucomp
jns
mov
mov
push
test
fistpl
pop
subb
sbb
scas
cltd
jae
lcall
imul
mov
in
leave
dec
xchg
clc
es
xchg
cmpsb
ret
add
mulb
lds
jecxz
pop
pop
sbb
cld
je
idivl
push
xchg
js
jbe
inc
scas
cmp
loopne
negb
jge
dec
hlt
sub
mov
xchg
cld
sbb
hlt
cmp
sub
xchg
test
pop
dec
sbb
out
dec
jl
cmpsl
push
lods
loop
cmp
pop
jo
dec
pushf
and
jp
mov
pop
dec
repz
fcoms
dec
movsl
inc
inc
lea
test
mov
ljmp
mov
aad
inc
push
sbb
push
cmpl
inc
arpl
stc
mov
iret
cmp
sub
les
lds
inc
mov
ljmp
in
inc
testl
pop
ds
lock
lods
sub
lock
fldl
fidivs
jo
mov
aaa
mov
sbb
icebp
sub
sbb
pop
jo
inc
mov
xchg
imul
jg
sbb
shrb
mov
pop
xchg
jmp
fsubrl
fs
mov
adc
imul
mov
andl
inc
ret
add
cmp
das
pusha
sarl
aas
testb
xor
roll
xchg
stos
and
imulb
ja
push
push
iret
pop
loopne
scas
lret
xchg
aam
aaa
jnp
fs
cwtl
lock
cmpsl
mov
lock
fmul
mov
mov
roll
jb,pn
jno
jb
push
mov
enter
popf
les
jo
push
jecxz
daa
sbb
loopne
mov
pop
push
push
inc
pop
aad
pusha
bound
mov
dec
adc
inc
popf
and
int3
mov
insl
xchg
ficomps
push
lcall
inc
mov
lods
pop
xor
fsubp
cmc
mov
lea
loop
jg
xchg
sbb
not
pop
sbb
dec
jp
inc
das
clc
lcall
lock
iret
xor
dec
arpl
sti
imul
fldt
inc
sub
or
mov
push
fcmovnbe
inc
dec
gs
jb
push
jle
adc
loope
pushl
fadds
imul
fisttpl
aam
je
ret
inc
jbe
in
fcmove
lea
stc
inc
sbb
jnp
pop
mov
das
jp
adc
and
sti
les
jbe
add
add
insl
push
xor
int
inc
nop
lds
adc
inc
xchg
mov
out
xchg
fwait
aas
and
ds
push
push
out
adc
cwtl
push
mov
adc
mov
test
pop
push
inc
imull
es
in
push
test
in
enter
mov
mov
decb
data16
pop
xor
jns
ss
adc
fcmovb
shrl
and
add
jecxz
pop
loope
out
scas
aaa
adc
inc
inc
iret
push
jl
cld
leave
jecxz
jns
push
or
nop
sti
mov
es
arpl
pop
sbb
push
jecxz
and
mov
pop
lods
push
sub
xlat
inc
ficompl
dec
dec
add
mov
cltd
inc
in
mov
in
stc
test
rolb
pusha
pop
bound
movsl
ret
enter
data16
arpl
mov
pop
imulb
pop
push
push
jne
add
in
xchg
adc
mov
add
dec
xchg
mov
mov
adc
punpckldq
sub
movsb
cmpsb
stos
ss
ds
mov
jns
ret
into
pushf
lods
lock
shll
rorl
jmp
fsubs
adc
emms
int
lods
pop
pop
xor
es
inc
xor
xor
adc
aas
ret
pop
jae
push
add
shll
jb
jg
ljmp
jge
jno
mov
dec
into
or
sub
fistpl
add
in
and
aaa
cli
sub
sub
mov
loopne
and
cmp
cmp
and
sub
or
icebp
adc
inc
icebp
dec
fldcw
cmpsl
data16
fimuls
xchg
int
dec
pushf
mov
xchg
push
adc
popf
sub
dec
nop
or
pushf
insb
mov
dec
les
xchg
shrb
cs
pop
pop
js
shr
or
pop
ss
mov
jne
jae
jle
jle
mov
adc
scas
adc
cs
lret
mov
fisubrl
jge
jae
out
xchg
icebp
scas
mov
add
out
test
aad
pop
rorb
lods
mov
push
icebp
jne
add
loop
mov
inc
mov
add
incl
adc
sub
pop
mull
andl
xor
dec
and
jno
xchg
test
cmpsl
inc
out
popa
jge
lret
push
js
int
mov
aaa
push
fdivl
inc
push
xor
xchg
sbb
cmpsl
or
jno
jmp
sub
pop
mov
and
dec
leave
mov
clc
pushf
stos
ficoml
hlt
mov
sarb
inc
leave
sub
lods
cmp
dec
dec
jmp
fimuls
pop
pop
insb
sbbl
and
pop
jecxz
dec
add
cltd
mov
add
and
lret
hlt
stos
xchg
xchg
sbb
and
sbb
push
mov
or
scas
fwait
mov
je
fistpll
enter
dec
idivl
add
xchg
push
and
add
pusha
push
pop
out
sub
lds
and
and
mov
lods
inc
bound
inc
and
jne
in
or
je
int3
push
jnp
frstor
cmp
xchg
lcall
xchg
pop
stos
sbb
jle
adc
jle
push
sarb
cmpsl
ret
mov
sbb
adc
mov
jo
sub
loope
hlt
lods
xor
lahf
sti
sbb
lock
mov
dec
push
fisttps
xorl
test
sahf
sub
test
mov
add
mov
push
jb
mov
fld
xchg
fisttps
xorb
je
data16
shll
outsb
aaa
mov
pop
lcall
mov
adc
sub
loopne
xchg
xchg
aam
xor
rorb
mov
mov
mov
jo
int3
ret
jb
roll
sti
roll
sti
inc
xchg
mov
fs
je
sahf
add
add
xor
push
sbb
hlt
loop
sti
andb
jmp
stc
loop
out
test
aad
lods
mov
pop
pop
rorl
movsl
in
lahf
movsl
cs
js
test
push
pop
push
stc
mov
cli
xchg
mov
cmp
and
push
loope
jbe
movsb
or
and
push
jb
stc
pop
dec
cmp
dec
ljmp
add
daa
cmp
xchg
in
push
cltd
stc
and
cwtl
mov
sub
sub
outsl
pusha
add
sub
cli
push
mov
xchg
xlat
sub
push
and
add
adc
xor
adc
jle
xor
jmp
mov
mov
ds
mov
subl
jmp
loopw
hlt
sbb
pop
jnp
pop
xchg
outsl
loope
loopne
and
lahf
sbb
jns
adc
push
sub
mov
aas
movsl
cmp
pop
lds
or
pop
mov
fs
adc
cmp
shll
fisubs
inc
lcall
es
cmc
insb
das
add
nop
fists
jae
mov
mov
lods
mov
int
outsb
daa
push
scas
fimull
xchg
sbb
xor
idivl
inc
pop
push
ss
xchg
cmp
add
test
xchg
pop
xlat
add
loope
jg
add
in
push
rcrb
js
mov
pop
nop
jmp
movsl
jl
mov
push
lods
mov
fisttpll
sub
bnd
dec
pop
mov
dec
movsb
xorl
fcoms
cli
sahf
jb
mov
sub
cwtl
inc
daa
or
or
inc
mov
push
in
mov
repz
je
ds
movl
shll
push
std
shrb
pop
or
js
push
dec
add
roll
scas
loop
add
clc
lret
adc
mov
or
divb
dec
push
add
adc
mov
lds
ficomps
mov
pop
ret
add
int
mov
cmc
mov
xchg
out
loopne
fldt
sub
jns
or
sbb
test
popf
mov
dec
in
inc
mov
hlt
pop
push
mov
push
push
aam
mov
cwtl
aas
cmp
pop
mov
xor
or
push
fisttps
pop
mov
leave
pop
aad
jne
stos
dec
pop
or
fsubrl
xchg
pop
in
xchg
icebp
mov
lods
adc
push
cltd
or
sbb
and
mov
and
cmp
push
dec
inc
shlb
mov
mov
xor
stc
push
sub
test
shrl
xchg
sub
sub
xchg
jg
inc
and
jge
jae
lea
mov
int
int
sbb
lret
pop
aam
pop
lds
loopne
adc
mov
les
sub
pushf
lods
mov
sub
inc
jae
push
cmc
shrb
jp
jg
cltd
test
mov
sub
insb
jb
mov
mov
push
push
push
negl
sar
leave
pop
pop
jo
dec
or
es
dec
jp
push
loop
fwait
orb
sbb
aam
lret
jp
daa
cmp
inc
xlat
push
xchg
aad
adc
es
fsubrl
sub
pusha
sub
shll
adc
push
sub
jo
sbb
sbb
notb
sub
cmp
movsb
movsl
ljmp
adc
or
orb
test
xor
sub
daa
dec
and
js
push
mov
test
add
mov
sbb
sahf
dec
pop
xchg
hlt
cld
lea
test
or
inc
add
mov
inc
mov
pushf
inc
jge
adc
movsl
sub
add
loope
cmc
outsl
xor
popf
sti
hlt
fs
imul
or
and
daa
push
sub
rol
ffree
xor
add
pusha
sbb
push
leave
cmp
jne
ss
hlt
xchg
jmp
std
xor
cwtl
jg
out
arpl
dec
adc
sub
mov
test
sub
subl
inc
outsl
insl
inc
lcall
push
xchg
cmp
leave
xchg
stos
cs
and
mov
adc
sbb
dec
adc
sahf
pop
andl
sbb
test
enter
lcall
in
xor
inc
fwait
icebp
xchg
popf
rorb
cmp
xchg
jne
add
xor
ret
or
push
sbb
into
arpl
mov
je
movsl
mov
push
mov
in
xor
push
daa
out
bound
and
push
jmp
adc
jo
aam
negl
push
lcall
sbb
lret
pop
popf
and
lods
and
or
xchg
rolb
mov
xchg
test
jecxz
dec
lcall
scas
adc
pop
mov
xor
ret
pop
cmp
add
clc
movsb
je
mov
and
push
test
in
test
add
cltd
sub
popf
fcomps
and
aas
mov
ret
in
mov
xor
pushf
push
movsb
adc
ret
int
mov
ret
popl
fs
cmc
aas
into
shl
add
shll
mov
mov
lock
xchg
xor
daa
or
pop
cmpsb
and
pop
sub
stos
dec
aam
adcb
mov
cmp
cmp
aas
dec
fdiv
xchg
dec
jl
inc
nop
dec
adc
shlb
out
mov
scas
rorb
cwtl
cs
mov
pop
fisubrs
jns
sub
int
rolb
je
and
fnstcw
pushf
data16
outsb
jecxz
lret
jl
lods
fsubp
xchg
cmp
jecxz
push
cmp
and
jne
lret
dec
push
dec
cmp
sti
and
and
pusha
call
fisubl
bswap
or
daa
shlb
das
aad
sub
or
and
and
in
dec
push
push
add
ljmp
inc
xor
push
arpl
lahf
mov
pop
adc
inc
stc
mov
clc
divb
ss
arpl
scas
mov
in
jl
jg
xchg
jne
js
xchg
scas
pop
sti
arpl
adc
sahf
cmp
inc
dec
jno
mov
add
lds
sub
out
hlt
cltd
jb
scas
dec
and
sarl
mov
push
jns
pop
sub
ret
dec
scas
push
scas
pop
jmp
fldl
adc
les
sub
inc
pusha
mov
popa
mov
xor
adc
push
repz
mov
jp
push
loopne
ja
or
inc
add
jns
fidivrs
out
mov
pop
pop
mov
mov
aas
mov
mov
and
gs
lcall
push
push
pusha
lahf
fbld
ss
jb
pop
outsb
rorb
push
enter
popf
or
sbb
hlt
popa
or
out
pop
pop
push
jb
cmp
fldt
jg
shrl
push
mov
cltd
divb
xor
and
outsl
std
out
inc
dec
lock
push
jo
clc
mov
addr16
dec
notl
mov
lods
scas
xchg
lock
rcrb
call
push
lcall
pop
and
xor
pop
pop
sbb
pop
pop
in
and
out
cmc
mov
mov
mov
shrb
ds
push
rcrb
lcall
inc
pusha
sbb
insb
imul
cwtl
jecxz
stos
xor
daa
aad
pop
lock
cvttps2pi
js
fwait
mov
shrb
pop
adc
mov
dec
pop
movsl
mov
loope
cmp
inc
loope
imul
lret
pop
push
insb
add
cmp
arpl
rcl
imul
push
pop
or
xchg
and
clc
pushf
sahf
jg
jl
jno
or
leave
pop
mov
cmp
int3
lcall
testl
mov
cmp
out
icebp
scas
movsl
mov
adc
or
imul
jno
and
push
testb
shlb
repnz
sub
sahf
scas
stos
and
enter
adc
repnz
push
loopne
push
sbb
leave
pop
sub
push
pop
push
mov
out
add
addr16
test
adc
mov
lahf
and
filds
adc
or
cmp
jns
test
insl
sahf
sbb
mov
sbb
bound
neg
pusha
into
aaa
adc
push
sbb
mov
push
sarb
and
data16
pop
xchg
fcmovnu
mov
jecxz
pop
std
or
dec
jge
jo
sbb
cs
sti
adc
iret
imul
push
out
inc
aad
lods
stos
sbb
push
pop
ljmp
pop
cli
aam
and
divb
out
sbb
daa
rcl
adc
in
jmp
pusha
ss
icebp
and
out
scas
stos
std
sarl
fwait
mov
mov
adc
cmp
dec
sub
pop
cli
jno
jno
adc
hlt
mov
gs
jecxz
ret
add
ss
call
mov
gs
adc
jg
dec
xchg
out
repnz
dec
cmpsl
inc
loopne
sub
int3
mov
and
aad
adc
sbb
or
push
nop
out
mov
test
fwait
push
nop
xor
mov
dec
mov
out
cmp
outsl
add
outsl
dec
xor
icebp
and
xchg
aaa
and
xor
jp
imul
imul
ljmp
idivb
in
pop
movsl
mov
push
fstpt
push
pushl
ja
xchg
adc
ret
push
or
sub
test
and
lahf
stc
adc
test
xor
xorb
dec
ficompl
cmpsl
adc
pop
mov
idiv
aad
clc
sarb
enter
gs
mov
pop
jnp
inc
fiaddl
xchg
cmpsb
dec
arpl
jle
cmp
dec
xchg
lods
xor
sub
mov
mov
push
sbb
mov
cmpsb
sbbb
mov
test
stos
pop
dec
fwait
mov
jecxz
inc
ficoml
test
nop
cmp
data16
sbb
sbb
sbb
mov
mov
shlb
mov
sub
scas
pushl
xchg
mov
push
xchg
data16
cmp
xor
dec
rcrb
pop
mov
arpl
adc
lea
ret
enter
and
dec
inc
js
dec
lret
push
cmpsl
iret
dec
push
jl
push
outsl
cmp
out
shl
mov
out
mov
xor
add
mov
popf
pushl
adc
popa
insb
aaa
dec
or
fadd
cld
inc
xchg
insb
push
jg
mov
ficomps
dec
fwait
mov
push
and
mov
ficomps
adc
das
imul
push
mov
shlb
sti
inc
stc
mov
aam
in
sbb
aad
mov
shl
pop
mov
jne
cmp
inc
fcmovnbe
pushf
insb
dec
xchg
in
call
icebp
mov
jae
xor
cmpsb
cmpl
xor
push
cmc
ret
lds
xor
je
pop
out
sarb
or
shrb
sahf
loop
jo
jb
adc
jns
es
jmp
jle
or
loop
jge
xchg
rcrl
cltd
bound
mov
jg
call
ds
adc
pop
pop
mov
pop
jmp
cmp
daa
sahf
mov
xor
pushl
fistps
gs
ss
and
mov
sub
ljmp
jo
jbe
xor
dec
pop
sub
sub
leave
cmpsb
sbb
mov
and
and
fnstenv
pushl
dec
test
gs
cltd
cld
fstpl
mov
or
movsb
lahf
arpl
push
mov
mov
rcr
mov
enter
in
loop
mov
mov
xor
pop
xor
dec
fcompl
or
sbbl
aad
cltd
stos
dec
inc
mov
out
push
rcl
sbb
cmpsl
pop
xchg
push
mov
add
mov
outsb
call
pushf
movsb
aaa
testl
cmpsl
js
adc
xchg
ljmp
pusha
push
fs
enter
gs
sub
gs
xchg
mov
gs
insb
adc
ja
mov
mov
lea
inc
add
adc
aam
inc
and
sti
and
mov
xchg
mov
mov
cwtl
repz
popa
mull
retw
adc
or
popf
cwtl
data16
xor
jp
push
arpl
shl
in
inc
lcall
sub
ret
out
cld
or
in
movsb
stos
or
xor
fsqrt
movsb
inc
mov
sub
aaa
das
adc
fdivp
lahf
test
test
mov
adc
sarl
inc
out
xchg
xor
loope
mov
mov
lahf
sbb
repz
or
mov
lret
mov
in
shlb
insl
ss
adc
sub
cmp
ss
jl
mov
dec
xchg
mov
mov
lds
inc
push
add
push
push
and
leave
pop
pop
mov
inc
mov
lea
jb
mov
xchg
xchg
fisttpll
adc
bound
call
lahf
push
inc
xchg
aas
test
adcl
movsb
mov
orl
mov
add
mov
popa
fbld
dec
xor
dec
push
cli
sbb
or
pop
roll
or
mov
or
adc
dec
cmp
and
mov
lea
sbb
push
fnstenv
pop
mov
push
pop
push
cmpsb
mov
push
and
jno
inc
repz
aam
imul
pop
add
push
push
mov
push
test
out
pop
pop
loopne
cmp
cld
and
add
mov
xchg
insl
fidivl
lret
hlt
stos
idivb
mov
add
insb
inc
sbb
gs
cmc
sub
gs
aaa
dec
xor
pop
pop
aaa
push
mov
adc
mov
pop
cmpsl
sub
sahf
iret
add
pop
push
xchg
popf
shll
jno
xchg
adc
ret
or
repz
and
xor
je
xor
lcall
loopne
loope
aaa
sbb
test
data16
scas
push
std
jg
test
imul
aas
jg
mov
cs
xor
mov
xchg
xor
sub
add
shrl
sub
scas
andl
loopne
jbe
movsl
scas
cmp
stos
dec
out
mov
repz
iret
sub
push
sub
mov
add
out
stos
sbb
pusha
or
mov
pop
sbb
subl
out
dec
sub
sub
adc
adc
jbe
add
cld
sahf
sub
ja
test
ret
dec
push
ja
jle
movsl
push
push
xchg
dec
fcmovne
jb
jno
sahf
mov
sub
cmpsb
test
sub
xor
jecxz
pop
xor
mov
xchg
sub
jmp
mov
xchg
jle
es
fisttpll
test
mov
test
iret
dec
sub
popf
push
lds
jg
rcrl
sbb
mov
xchg
push
and
mov
mov
fwait
cmp
jbe
mov
or
scas
test
push
es
ret
repnz
fcompl
jne
mov
fsubrs
sbb
loop
mov
lcall
lret
adc
hlt
ss
outsl
fistpll
hlt
xor
pusha
shlb
fmull
lea
divb
movsl
adc
scas
adc
icebp
les
movsb
stos
sahf
loopne
mov
mov
adc
push
leave
xor
jecxz
lahf
test
cltd
push
in
cmp
aam
iret
xchg
adc
scas
shlb
lret
pushf
leave
leave
lret
cmp
gs
or
mov
sub
outsb
xor
xlat
les
dec
das
add
cmp
mov
pop
lahf
lcall
aaa
add
test
sbb
aaa
sub
inc
rcll
imul
cmp
in
mov
and
insb
sub
push
mov
push
sub
push
jne
addr16
and
adc
std
sub
ret
adc
or
arpl
aaa
fs
push
pop
sahf
add
addb
adc
push
inc
stos
inc
cmc
xor
ret
les
divl
jp
adc
cld
or
push
sbb
dec
lods
adc
test
cltd
inc
lahf
xchg
mov
jg
mov
stos
and
shll
mov
inc
sbb
lods
in
sub
sarl
dec
pop
mov
fwait
cmp
lods
std
ret
mov
sub
lock
aas
sub
cltd
popf
stos
push
adc
jnp
ja
mov
pop
sub
fcoml
ja
and
hlt
add
sub
mov
in
ja
push
pop
loope
sbb
aam
add
pop
push
xorb
xor
fwait
add
jecxz
bound
sbb
or
jecxz
jo
testl
out
addr16
shll
xchg
pop
fdivl
test
leave
cs
bound
mov
mov
pop
inc
xor
cvtps2pi
inc
icebp
inc
jge
and
aam
pop
test
pop
sub
jge
sub
jmp
or
xchg
or
adcb
xchg
rorb
roll
pop
sub
dec
clc
mov
pop
dec
mov
out
inc
loopne
mov
ds
jecxz
data16
mov
cmp
subl
jb
repnz
movsl
hlt
mov
movsb
outsb
push
xor
jb
rolb
pop
mov
add
add
aad
dec
rcrb
xor
mov
test
jmp
sbb
gs
sbb
imul
loop
stos
ret
add
dec
hlt
push
inc
add
pusha
xlat
in
push
xor
out
pop
xor
outsl
push
cld
movd
addr16
clc
in
dec
xchg
movsl
clc
jo
out
mov
shl
fisubrl
dec
xchg
int
pop
les
aas
push
xchg
inc
addl
lcall
lret
mov
sub
or
aaa
aaa
test
push
jo
aad
mov
or
mov
cmp
xchg
push
add
addr16
scas
inc
jg
jmp
xorl
pop
and
cltd
outsl
hlt
xchg
jecxz
call
daa
mov
in
adc
pop
push
rcll
push
gs
in
leave
insb
sub
xchg
das
repnz
sti
inc
pop
movsl
stos
xchg
aam
pop
add
add
outsb
addb
jns
mov
test
rcrl
je
lods
ja
inc
adc
or
pop
inc
lahf
jno
out
xchg
mov
jns
push
lahf
or
cmpsb
and
mov
js
nop
fwait
or
je
call
inc
sbb
sub
xor
mov
xor
dec
out
inc
fcmovu
arpl
sbb
dec
mov
rorl
fidivl
sub
mov
roll
mov
cld
addr16
aas
or
jg
dec
cmp
inc
cwtl
mov
jg
repnz
pop
lea
jp
scas
ja
pop
insl
int
aas
lea
inc
jo
xor
cmc
mov
js
mov
sbb
nop
fiadds
ljmp
popf
cmpb
mov
je
sub
bound
mov
aas
xor
cmp
dec
out
mov
mov
pop
addb
sub
insb
or
pop
ds
push
arpl
and
cmpsl
xor
pop
cmpsb
in
xchg
adc
lahf
xchg
shll
scas
or
repz
mov
mov
mov
cmp
xor
je
jbe
xchg
outsl
inc
mov
cmpsl
int3
faddp
jo
xchg
mull
loop
es
pop
subb
mov
pop
fs
sbb
cltd
push
scas
or
mov
add
mov
or
cs
mov
and
cs
dec
push
dec
mov
dec
insb
mov
push
addb
shlb
stos
movsl
mov
jecxz
aas
test
out
jb
test
mov
pop
or
mov
mov
push
pop
into
add
leave
or
lret
add
xor
subl
sbb
mov
inc
loopne
aad
mov
xchg
sub
xchg
sbb
in
rol
or
icebp
or
jae
xor
dec
adc
mov
jae
aas
jno
clc
cmc
push
jl
loop
sub
sahf
cltd
jl
mov
mov
call
mov
sbbb
pushl
outsb
mov
mov
and
popf
mov
pop
mov
inc
leave
leave
jne
jp
lahf
xor
cmp
loope
adc
pop
fstps
mov
push
xchg
ja
add
outsb
imul
je
sbb
popa
pop
push
ds
xchg
jnp
and
cltd
mov
adc
stc
test
mov
clc
jge
xor
push
add
rcl
mov
xchg
or
cmpl
inc
lds
inc
movsb
adc
jae
adc
fsubrp
mov
jp
jmp
sub
fistpl
or
ds
je
inc
push
dec
fucomip
mov
aad
add
push
in
lret
ret
enter
and
jno
dec
and
cwtl
jns
and
ret
dec
mov
dec
in
call
cwtl
shll
std
rorl
icebp
jbe
jb
mov
call
mov
or
sub
and
imul
fiaddl
sub
cmc
add
addl
jmp
jecxz
sbb
xchg
sahf
rcrb
mov
repnz
hlt
lods
inc
fstl
sbb
mov
sub
inc
mov
test
cwtd
push
add
jno
divb
loopne
inc
cltd
lock
mov
sub
arpl
lods
cmp
lock
pop
adcb
and
dec
inc
repnz
jmp
inc
xor
xor
xor
rep
adc
testb
lds
inc
mov
mov
add
sbb
xlat
cmp
jle
movsb
push
movsl
lcall
pop
arpl
pop
xchg
cwtl
aam
in
xchg
jmp
cmp
mov
and
sbb
rol
imul
pop
pop
cmp
jae
adc
mov
cmp
jo
pushf
push
andb
in
mov
xchg
ds
loope
sub
cs
daa
stc
dec
cmp
mov
jae
mov
or
je
or
lcall
lea
and
ds
inc
add
bnd
cwtl
pop
addr16
sub
push
stos
add
in
fdivp
xor
inc
mov
mov
mov
add
lods
arpl
adc
push
test
ret
insb
data16
add
fwait
push
movsb
xchg
addb
scas
mov
mov
mov
or
shlb
lea
lea
test
mov
push
inc
call
mov
test
mov
xor
cld
out
fs
fisubl
in
test
jbe
inc
push
pop
and
idivl
cmpsl
pop
or
outsb
sbb
cwtl
jge
out
or
dec
adc
cwtl
add
mov
add
dec
xchg
outsl
push
sbb
or
jnp
mov
pop
adc
fbld
lods
idivl
out
jge
push
lret
mov
xor
pusha
movsl
out
xor
jp
mov
adcb
scas
add
lock
add
jge
xchg
inc
andl
ss
insl
jnp
xchg
jecxz
or
ss
testb
pop
addb
xor
pop
jg
mov
or
push
jnp
xor
inc
pop
mov
loop
test
cs
out
jb
dec
icebp
int3
out
std
pushw
jle
in
adc
gs
out
xchg
cmpsl
insl
fucom
shrl
js
add
mov
shll
adc
add
xor
je
cmp
test
cmp
pushf
cmp
in
outsb
mov
out
mov
decb
push
in
add
push
push
sbb
jecxz
ljmp
rcrb
mov
xchg
adc
xchg
daa
ljmp
xor
sbb
cwtl
add
test
test
inc
dec
lods
test
cmpsl
ljmp
icebp
lods
mov
and
cmp
loopne
cmp
push
sub
sahf
adc
dec
cs
and
out
pusha
rcll
cmp
add
pop
dec
push
push
jp
dec
pop
loopne
mov
ds
cmp
mov
jg
dec
inc
lods
cmpsb
dec
outsb
inc
push
mov
cli
jnp
arpl
mov
jne
mov
pushf
into
mov
loopne
dec
dec
xchg
jl
inc
pop
leave
mov
xchg
cmpsb
jno
or
in
popf
test
jae
cmpl
movsl
push
out
xor
sbb
dec
mov
add
xchg
inc
or
pusha
inc
fnsave
addb
fdiv
adc
push
es
and
popa
aaa
pop
adc
hlt
jmp
sub
fldenv
subb
pusha
leave
adc
ss
adc
xchg
dec
mov
cmp
and
jns
stc
adc
mov
mov
cmp
jns
mov
xchg
testl
pushf
repnz
pusha
sub
clc
shlb
pusha
test
pushf
pop
push
xchg
aas
sub
mov
inc
jl
nop
jg
push
in
mov
loopne
mov
repnz
xchg
mov
stc
jno
cld
jb
mov
stc
test
hlt
push
movsl
jne
jg
mov
mov
xor
pop
fstl
lcall
lcall
cmp
jnp
shlb
cli
xor
rclb
lock
dec
mov
or
push
inc
xchg
cmp
mov
inc
cmp
sub
fildl
idiv
mov
adc
mov
out
sub
or
std
sub
mov
repz
int
cld
std
jb
xor
jle
sub
xchg
adc
stos
pop
fst
iret
mov
shll
cltd
xchg
jbe
shr
jmp
jns
rorb
ljmp
fmull
test
ljmp
movntq
stos
cmp
shr
fidivs
add
shrl
and
nop
scas
neg
outsb
lcall
pop
jge
leave
cmpsb
xor
push
fmull
xchg
test
call
pop
loop
dec
jo
movq
imul
aaa
cmp
dec
shl
dec
shr
adc
jg
dec
xchg
nop
inc
xor
cmp
jnp
sbb
mov
repz
push
rorb
jbe
sub
cwtl
arpl
sub
cli
repz
push
repnz
jne
daa
adc
xchg
dec
pop
lods
jno
xlat
int
std
shl
mov
mov
add
loop
leave
int3
or
mov
call
cltd
inc
nop
dec
shr
mov
mov
nop
xlat
stos
adc
das
push
push
inc
mov
and
pop
test
push
fs
pop
movsl
lods
cmp
sub
call
dec
outsb
arpl
lock
ljmp
repz
loopne
dec
sti
and
push
and
popf
xchg
xchg
push
js
cld
jp
inc
imul
mov
jmp
test
fmuls
hlt
fwait
push
lret
les
aas
mov
jae
pusha
dec
fsubl
jle
jno
ficoml
xor
inc
jo
or
popf
mov
call
insl
into
cli
das
leave
lret
xchg
fdivrp
mov
add
into
ljmp
push
inc
xchg
shll
mov
mov
push
js
pop
rcrb
aas
xchg
popf
idivb
mov
repnz
mov
cmc
shlb
jnp
nop
mov
mov
lds
cwtl
das
movsb
shrb
ficomps
or
shlb
cmpsb
inc
iret
or
andl
in
cmp
mov
sbb
add
mov
mov
dec
in
cmp
jbe
jg
jbe
rcl
dec
sub
lcall
ljmp
scas
inc
ja
jo
xorb
in
xchg
scas
fldcw
xor
icebp
into
andl
mov
fildl
pusha
fisttps
push
xor
cmpsl
jmp
mov
sub
cmp
cmp
cwtl
scas
leave
sub
xor
add
push
fwait
insl
aad
xchg
mov
pop
das
lret
dec
push
mov
aam
jecxz
xchg
stos
jg
or
lret
add
addr16
fsubrl
lds
mov
pop
fwait
inc
adc
in
cmp
rorb
inc
stos
push
jge
push
sub
mov
jb
sarl
xchg
das
sub
xlat
cs
fstps
push
sub
sub
das
fistpll
movsl
aad
lret
push
aaa
add
mov
push
dec
cmp
outsb
ja
inc
imul
sarl
jae
xchg
test
or
les
jnp
push
out
xchg
adc
stc
int
fsubs
xchg
and
jno
jns
sbb
inc
inc
inc
sahf
std
arpl
inc
mov
jg
pop
dec
mov
xchg
inc
add
xchg
xchg
lods
addr16
ret
test
shlb
sub
aaa
test
scas
mov
jbe
andb
dec
jecxz
jnp
add
repnz
popf
es
xchg
and
cwtl
dec
xchg
or
adc
aam
dec
out
push
push
loopne
xor
lock
ljmp
lds
rcrl
mov
outsb
jle
lock
inc
xor
jne
clc
cmpb
add
mov
push
push
mov
fdivl
jge
cmp
into
mov
and
cmp
push
jbe
les
dec
lock
mov
dec
mov
jns
add
mov
ds
push
jo
and
lret
push
enter
loopne
out
int
and
pop
mov
pop
push
dec
daa
mov
int
xchg
pop
jo
stos
stos
aam
fisttpl
lahf
jl
or
sub
mov
aaa
in
popf
call
lret
jge
shrb
imul
fwait
jbe
popf
ds
and
mov
bound
and
cmp
xchg
jnp
add
inc
dec
push
mov
lret
test
xor
inc
int
jle
out
fwait
add
pop
pop
inc
add
sbb
jo
in
iret
fwait
adc
push
and
sbb
pop
xchg
sbb
inc
notl
cwtl
dec
dec
push
out
lods
fisttps
and
fwait
loop
xor
addr16
dec
push
or
outsl
ds
clc
notb
or
lods
xor
aad
out
stos
data16
xor
inc
jg
fidivrl
imulb
sti
jbe
push
mov
mov
clc
sub
mov
or
mov
mov
dec
pusha
and
or
repz
push
pop
add
push
scas
les
ss
pop
jle
stos
lret
in
ljmp
push
inc
and
mov
pop
fiaddl
addb
mov
jle
rcr
pop
or
jl
aad
pop
lahf
mov
lods
ds
loope
ds
mov
mov
fsts
jecxz
test
xchg
repnz
and
add
push
push
aaa
or
hlt
inc
xchg
xor
mov
lret
dec
add
ret
fcmovnu
mov
xor
movsb
xor
popl
xlat
sahf
pop
aaa
xchg
cmp
int3
mov
fidivrl
push
xchg
rolb
pop
popa
out
xchg
sbb
clc
clc
jbe
fiaddl
pop
or
incb
and
data16
fisubl
cmc
cmp
xor
adcb
imul
shl
test
lahf
fdivrl
out
les
xor
imul
pop
or
lcall
movsl
out
mov
fildll
mov
pop
pop
dec
xor
sti
sub
call
repz
pop
nop
scas
jge
xchg
iret
push
aaa
mov
sub
into
nop
jo
sbb
hlt
aam
xchg
out
pusha
popa
cmc
xchg
mov
jo
pop
dec
loope
dec
rcr
inc
mov
js
pop
shl
mov
xor
jp
pop
test
test
xorb
lret
sbb
jne
or
loopne
dec
insl
fildll
fsubl
enter
mov
and
fildll
ds
mov
jmp
push
gs
mov
xlat
shll
cli
cmp
rcll
push
into
stos
lods
mov
stos
and
sbb
add
xchg
xchg
outsl
das
icebp
test
imul
mov
mov
hlt
aaa
es
and
push
das
scas
jno
mov
inc
data16
push
jg
jg
das
xor
lcall
cmp
sbb
mov
or
mov
cmc
enter
addb
pop
xor
jbe
push
xlat
or
xorl
xchg
sahf
push
xchg
push
pop
mov
xlat
outsl
xor
aaa
pop
int3
ds
xor
xchg
xchg
cmp
inc
stos
mov
std
add
jo
push
mov
and
popa
adc
inc
dec
adc
mov
xchg
push
sub
xlat
mov
jbe
add
add
insb
inc
add
jp
cmc
pop
sub
nop
sti
push
mov
adc
add
js
call
adcl
and
and
jmp
lret
pop
int3
and
xorl
pop
xor
xchg
inc
mov
jp
push
leave
sbb
xor
in
aam
mov
test
test
jge
add
dec
stos
sbb
out
into
das
xor
push
cmp
rcll
sbb
mov
icebp
nop
push
jle
sahf
js
mov
sahf
mov
fsubp
ret
mov
sub
call
sub
loopne
je
enter
fistps
fisubrl
stc
clc
sti
push
in
dec
mov
test
rcrb
idiv
ljmp
call
lods
add
cmp
stos
mov
and
pop
and
pop
and
mov
pop
lock
mov
rol
movsl
jecxz
cmovl
sbb
bound
in
jg
divb
mov
dec
inc
repz
inc
jb
lods
popa
and
xchg
lret
cmp
inc
and
lds
dec
aam
push
push
push
clc
mov
adc
adc
push
jmp
lahf
lods
dec
nop
ljmp
imul
and
ja
loope
sahf
xchg
shlb
cltd
jl
call
jno
dec
mov
cmp
ljmp
cmp
imul
insl
cmpsb
imul
jne
xor
xor
or
out
push
adc
fsubl
pusha
fdivrl
xor
inc
push
fidivrl
iret
lea
cmp
popf
jl
sub
jl
or
dec
and
mov
xchg
add
cmc
int3
pop
mov
aam
rcrl
jo
bound
mov
inc
and
jg
cmp
cmp
mov
push
push
insl
add
sub
mov
jmp
test
cmp
stos
jmp
pop
adc
fcmovnb
sbb
jl
cld
test
cli
pop
or
mov
shrl
je
fwait
ljmp
pop
outsl
pop
or
fs
and
pop
test
xor
lahf
gs
sbb
rcr
lods
shlb
das
sub
movsl
jle
xor
stos
imul
push
cmp
repz
add
push
stc
and
aad
shlb
xor
push
dec
or
mov
mov
or
cmp
clc
cmc
sub
rcrb
hlt
hlt
std
jb
fdivrs
sub
xchg
cmp
andb
dec
ss
lods
dec
jns
fcmovnu
scas
adc
test
pusha
fldenv
cli
fisubs
out
jp
sbb
scas
mov
ret
push
shl
pop
stc
jae
addr16
push
repnz
sub
popa
scas
inc
adc
imul
iret
push
jo
movsb
mov
movsl
xor
aas
idivb
cmpsb
jns
shlb
loope
add
int
jno
pop
push
inc
enter
das
lahf
push
into
push
fwait
nop
cmp
ret
add
daa
push
std
aaa
subl
lahf
or
ds
mov
rcl
mov
cld
xor
push
mov
pop
in
or
inc
mov
lods
mov
stos
testb
xor
mov
jge
pop
fistpl
out
jb
out
fs
les
mov
ret
pop
pop
adc
inc
pushf
xor
cmp
scas
xchg
dec
push
jo
inc
movsl
mov
cld
jne
in
push
stc
fnstenv
in
pop
pusha
mov
hlt
mov
iret
dec
xchg
popa
sub
xchg
push
xchg
inc
jae
pusha
cltd
mov
lahf
adc
popf
dec
shll
cwtl
mov
popf
std
lock
pushf
pop
adc
cmpsb
outsb
and
mov
push
pop
icebp
adc
xchg
lock
inc
pop
jl
inc
scas
adc
pop
mov
jmp
pop
pop
lret
add
data16
and
sbb
loopne
rcl
and
das
adc
ret
pop
rcll
loope
in
and
dec
arpl
fnstsw
jecxz
fstps
jmp
xor
daa
inc
dec
push
sub
jmp
pushf
clc
lea
hlt
add
test
scas
sbb
sub
jno
inc
pop
mov
cli
inc
aam
push
daa
iret
in
std
inc
in
dec
js
rorb
rclb
inc
push
testl
jg
jle
add
les
test
outsl
loope
sbb
add
dec
mov
int3
sub
outsb
push
fsubr
jno
sti
inc
sti
and
dec
adc
mov
lea
cs
sbb
pop
cmp
push
sub
push
clc
jl
divl
scas
aad
ds
shll
imul
mov
rcr
lea
fwait
andl
cmp
mov
dec
addr16
push
inc
sti
add
push
mov
pop
or
inc
cmp
lret
and
movsb
dec
insb
cmp
jnp
sbb
faddl
fwait
cmc
mov
cli
cmc
stos
int3
das
ja
push
or
push
testl
cld
leave
js
inc
xchg
sarb
fucompp
iret
bound
inc
leave
outsb
inc
inc
cmpsb
sar
adc
dec
lds
popf
adc
shrl
sbb
loope
js
bound
sbb
mov
fnstcw
adc
adc
fmuls
or
addr16
gs
pop
dec
mov
dec
inc
dec
sbb
and
stos
jmp
and
dec
iret
andb
sub
rorb
push
mov
idivb
add
xchg
add
decb
mov
out
inc
mov
dec
fisubs
mov
cmp
dec
xchg
sbbb
icebp
or
popf
lock
repz
out
ret
movsb
ret
js
jnp
bound
push
aas
bswap
cs
mov
dec
iret
mov
add
cmpl
stos
mov
push
nop
lods
push
filds
and
mov
mov
jl
xor
push
nop
adc
outsl
xchg
pop
xchg
sub
lods
das
pop
push
loop
movsb
pop
jmp
mov
jnp
in
ret
dec
fdivr
mov
pop
insb
pop
ficoml
add
or
push
popa
jecxz
or
and
incb
mov
push
inc
mov
inc
push
lcall
xlat
lcall
pop
jb
cmp
xchg
negl
out
loopne
push
or
loop
jo
adcb
kmovb
lahf
xor
adc
mov
stc
repnz
jne
imul
adc
pop
pop
pop
xor
xor
aaa
arpl
mov
ret
rcrb
sbb
dec
mov
ss
and
mov
ror
xor
adc
inc
sahf
stc
out
jmp
jno
adc
sbb
xchg
testl
mov
push
lret
mov
repz
add
sbb
and
jp
aam
dec
xor
test
ret
xor
je
insl
cmc
icebp
in
lahf
and
in
xor
loop
push
shr
inc
mov
fbld
cld
or
repz
leave
js
xcrypt-ctr
cmpsl
pop
dec
jg
and
fsubs
dec
cmp
insl
js
jmp
pop
adc
fdivl
push
dec
orb
mov
jecxz
xlat
push
sbb
inc
adc
mov
inc
push
xchg
out
mov
mov
cltd
dec
cmpsl
dec
adc
iret
cmc
xchg
adc
cwtl
xchg
hlt
pop
dec
jg
mov
repz
mov
lcall
aaa
pop
xor
mov
rorb
mov
lods
jbe
cltd
in
jge
inc
cmp
mov
je
and
bound
sbb
stos
cwtl
rcr
jl
mov
dec
lods
ja
pop
iret
sbb
xchg
scas
aaa
dec
mov
int3
fdivs
rcll
in
test
inc
pop
in
xlat
xchg
daa
push
and
jnp
arpl
push
inc
push
iret
imulb
inc
rol
add
push
mov
mov
jg
pop
xchg
fwait
adc
lea
in
cmp
or
arpl
imul
es
or
mov
lods
inc
dec
mov
cmp
bound
aas
mov
nop
mov
pop
dec
roll
lret
jne
out
push
or
andb
fwait
cmp
out
jmp
sti
popa
pop
xor
insl
add
cs
or
icebp
xorl
lods
sahf
cwtl
xorb
das
mov
pop
fnstcw
nop
dec
imul
push
jecxz
or
mov
js
jbe
mov
rorb
add
cmp
loope
in
xor
and
mov
int
mov
mov
pusha
pop
fsts
iret
mov
cld
xchg
mov
adc
pop
sub
push
test
ljmp
iret
pop
jmp
pop
fdivp
jle
fisttpl
lret
inc
jno
in
xchg
sbb
bound
shl
sbb
loopne
jl
pop
mov
aas
shlb
pop
into
out
push
orl
xchg
stos
lret
adcl
push
ja
lret
and
fs
mov
cwtl
cmp
imul
jmp
les
jae
jle
jmp
inc
addr16
test
std
out
cmpb
add
ret
cmc
sbb
popf
mov
je
lods
inc
mov
jmp
add
push
popf
std
sub
xchg
adc
sub
adc
jl
inc
lods
push
shlb
mov
test
test
sahf
cmpsl
lods
pop
push
cld
lds
mov
cmp
fxch
pop
adc
jno
mov
jb
lret
pop
push
sbb
adc
push
mov
repnz
hlt
xchg
xchg
jbe
fwait
idivb
jne
smsw
cmpsl
movl
and
push
repnz
sahf
shr
rorl
jmp
push
adc
inc
and
push
stc
insb
ja
pop
xor
pop
push
fmull
push
test
cmp
repnz
cmp
mov
cmp
adc
jmp
cmp
bnd
pop
arpl
dec
enter
dec
cmp
inc
cwtl
hlt
cli
push
xchg
in
out
xchg
xor
int
and
lret
fwait
js
jnp
cmp
or
xchg
xor
jecxz
cmp
push
xor
push
addl
stos
hlt
pop
mov
insl
mov
loope
mov
cmp
bound
dec
xchg
cs
dec
sti
adc
call
mov
lock
ljmp
mov
jge
test
insl
andb
cmc
hlt
xchg
orl
popf
and
fsub
xchg
cwtl
jp
mov
and
pop
and
cli
mov
sub
pop
arpl
insb
add
sub
call
or
ljmp
test
insl
jne
xor
inc
cmp
lret
xor
xchg
leave
inc
push
int3
mov
imul
inc
adc
pop
xlat
mov
test
daa
jge
out
jne
loopne
and
fidivs
insl
and
in
inc
adc
popf
addl
lahf
aaa
lret
xlat
inc
aad
xchg
lods
les
stos
sub
dec
subl
add
into
inc
pop
cmp
sbb
sub
mov
adc
fiaddl
jno
test
imul
xor
adcb
fsubl
jae
movsb
xor
call
jo
call
adcb
or
cmpsl
pop
jecxz
fimuls
adc
or
outsl
inc
in
lret
jo
xchg
rolb
hlt
test
cmp
cltd
sub
test
sbb
notl
or
popf
fs
add
cltd
jge
or
or
lret
adc
sub
fmul
fucom
mov
lret
mov
daa
sbb
fwait
lock
add
push
stc
insl
pop
insb
loope
jb
dec
mov
cmp
outsl
mov
mov
inc
std
cli
dec
sbb
or
push
std
sahf
xchg
mov
sarl
fmull
xchg
rclb
hlt
test
lock
push
arpl
fnstcw
add
jge
push
adc
ds
add
jge
jno
insb
clc
jmp
xor
pop
mov
test
xchg
in
mov
dec
sti
sahf
push
fstps
xor
xor
addr16
sbb
in
mov
jo
pop
pop
insb
sub
xor
dec
push
test
cmc
xor
mov
jnp
add
das
iret
cld
sahf
incl
jmp
stos
or
or
cmp
mov
pop
sbb
adc
imul
cwtl
ja
pusha
and
xchg
das
adc
js
lret
push
lcall
adc
sarl
lahf
mov
jg
loop
repnz
adc
sub
mov
pop
adc
movsb
mov
call
inc
xchg
test
addr16
lods
sub
loope
xor
cmp
addb
aam
in
jp
mov
sub
les
call
mov
repz
mov
fwait
cmpsb
or
mov
test
pop
add
push
sub
ds
mov
stos
sub
daa
push
jne
mov
sbb
mov
out
dec
xor
jo
inc
outsl
pushf
cmp
pusha
push
loope
fimull
shr
pushf
aam
sahf
das
rcrb
dec
test
subl
adcl
idivb
sbb
inc
pushl
loope
sbb
push
fcomps
int
pop
push
cmpsb
outsb
leave
xchg
cmp
mov
lea
and
sbb
fildl
jecxz
pop
add
push
mov
dec
inc
cltd
sbb
inc
test
xchg
sbb
adc
mov
jnp
jbe
sub
and
out
adc
iret
bound
stos
fstpt
cmpsb
insl
sti
jg
dec
cmp
outsl
aas
add
lea
enter
jne
push
arpl
dec
push
incl
jg
and
test
mov
xchg
sbb
nop
add
lods
jmp
int
cmp
insb
sub
testl
adc
dec
inc
shr
bound
mov
cmp
popa
jg
push
mov
jp
adc
test
leave
popf
mov
push
into
sub
faddl
jno
sbb
inc
mov
push
and
fisubrs
mov
fcmovnb
lea
jle
pop
dec
mov
jmp
mov
cmp
sub
loope
cmp
dec
cltd
add
cmpsb
mov
lret
xchg
rolb
xchg
mov
inc
movsl
out
andb
xchg
je
call
in
stc
shrl
adc
nop
idivb
adc
imul
ret
pop
idivl
push
shrb
mov
xchg
inc
push
aaa
inc
sbb
in
inc
lret
push
ret
das
push
fs
mov
lock
test
jle
movsl
cmp
jle
dec
adc
aas
rorl
push
pop
mov
cmc
and
cld
js
test
imul
in
fidivl
and
sbb
inc
sub
inc
xchg
and
inc
inc
and
cmp
imul
push
sub
cs
mov
adc
out
test
pop
adc
mov
shll
pop
das
pop
daa
dec
xor
rorl
dec
push
pop
cwtl
mov
xchg
lock
adc
sub
pop
xchg
jno
dec
pushf
cmp
inc
xlat
pop
jae
sarb
sub
jg
mov
testb
out
mov
adc
fs
pop
fiadds
in
ja
add
or
scas
js
pop
rolb
cmp
adc
stos
faddl
mov
push
xchg
cmpsb
fsubs
xlat
lods
xchg
test
or
push
add
mov
imul
xor
out
cwtl
mov
je
shlb
mov
push
jmp
pop
jo
jge
stos
lods
xor
lods
xor
push
push
adc
mov
xchg
jmp
mov
push
cs
cmpsl
sub
lahf
and
or
repnz
xchg
inc
cmp
dec
inc
xchg
mov
dec
push
leave
lret
pop
mov
adc
outsb
xchg
fwait
inc
xor
movsl
lcall
inc
fs
adcl
lods
ja
lea
or
mov
push
hlt
sbb
sbb
sbb
rorl
ficoms
and
xchg
dec
sti
jmp
xchg
in
movsl
push
jb
mov
push
lcall
ret
out
fdivs
jp
into
adc
jbe
or
test
push
outsl
lock
js
and
outsl
xlat
jge
mov
dec
mov
xor
stos
aaa
mov
addr16
cli
enter
dec
xchg
fildl
aaa
push
out
lods
pushf
adc
andl
xor
sahf
fwait
mov
cwtl
jge
daa
push
mov
mov
xor
adc
inc
or
aaa
xchg
es
or
lret
lret
lcall
sub
or
in
adc
adc
loopne
leave
cltd
ja
movsb
ss
mov
movsb
xchg
in
pushf
dec
jle
int
push
ds
cli
fxch
fcmovnu
jnp
loope
test
adc
cs
mov
jmp
sahf
or
pop
dec
stos
pop
inc
push
data16
pushf
mov
and
mov
jle
aad
mov
sub
add
cmp
pushl
sub
jbe
test
scas
lea
xor
cmp
loope
rcrl
enter
push
ret
aad
icebp
hlt
hlt
add
or
insb
add
push
fdivrs
rcll
sub
outsl
adc
mov
icebp
mov
sbb
cmovnp
push
test
adc
fs
sbb
repnz
xor
sub
in
inc
cltd
adc
dec
in
jae
push
aaa
fisubrs
aad
pop
pop
incl
adc
inc
shlb
add
aad
popa
inc
lods
mov
and
add
out
inc
xchg
pop
push
popa
mov
popa
imul
aas
xor
push
jns
xor
aas
adc
fcoms
fs
pop
jns
and
scas
or
push
es
xlat
adc
jb
xchg
sbb
repnz
push
sbb
lods
mov
jne
mov
jp
lcall
int3
ret
jp
repz
jb
jp
pop
cmpsl
les
dec
dec
inc
adc
mov
data16
sbb
sti
in
mov
fbstp
push
sub
xor
xchg
jb
sub
add
les
fstp
fstps
mov
or
call
aad
test
jle
mov
jmp
outsb
adcb
clc
test
test
jp
rorl
insb
pop
shrl
lret
sub
cmp
add
aad
or
add
daa
rcl
hlt
mov
sbb
in
mov
cmp
test
jl
inc
and
int3
sahf
or
lret
pushl
mov
xchg
add
or
adcb
sbbb
movsl
popa
sbb
xor
mov
mov
aam
mov
jmp
aaa
mov
mov
pop
cmp
in
lods
xchg
lret
lods
idivl
mov
fwait
mov
mov
loopne
in
mov
out
into
aam
lock
and
fisttps
imul
ffreep
dec
es
ret
fwait
cmp
daa
xchg
fcomps
mov
lock
bound
negl
movsb
xchg
jge
inc
fsubrl
js
xlat
push
aam
in
adc
mov
sbb
jmp
data16
cmp
add
or
stos
jae
xchg
jp
or
push
pop
inc
ss
cld
xor
std
arpl
or
lods
sbb
rorb
sarl
sbb
stc
aas
xor
inc
fisttpll
ficomps
mov
lods
int
cmp
test
cmpsw
stc
loope
mov
pop
call
and
adc
inc
out
mov
out
dec
mov
push
movsb
mov
jo
add
imul
repz
sub
mov
jbe
dec
mov
and
std
cmp
jle
sub
test
aaa
shlb
cld
cld
mov
push
jmp
xchg
insl
ds
add
mov
cmc
cld
andl
in
lods
test
cld
jge
push
push
lock
cmp
lds
mov
mov
xor
out
cmp
jecxz
mov
pop
call
bound
rcll
sbb
sar
mov
or
mov
inc
pop
fdivr
jle
bound
cmpl
lods
daa
pop
sar
inc
test
sub
jg
fidivl
nop
mov
jno
iret
xchg
adc
mov
mov
in
mov
push
enter
aas
lds
inc
lods
sahf
jge
push
inc
insl
aaa
ja
jg
mov
push
aam
flds
dec
jbe
hlt
ja
or
lret
jns
sbb
pop
stc
sub
daa
daa
rolb
jb
xchg
bound
push
pop
imul
js
fistpll
mov
mov
shlb
push
int
push
jmp
sub
loop
je
push
enter
js
in
jp
jb
push
mov
push
mov
sbb
call
jle
popa
adc
mov
leave
pop
shlb
push
xor
cmp
fildl
and
mov
cmp
mov
subb
mov
pop
add
data16
repz
outsb
jo
cmp
adc
data16
or
pop
jmp
cmpsl
out
rclb
aad
dec
leave
mov
pusha
shrb
xor
lock
mov
test
and
imul
icebp
nop
lds
push
or
xchg
mov
sbb
inc
hlt
ss
ja
bound
inc
xchg
test
xlat
int3
xor
dec
ja
add
stos
pop
enter
inc
lret
test
sbb
adc
sbb
fs
out
bndldx
jne
or
les
hlt
outsb
mov
sbbl
xor
scas
dec
dec
repz
clc
mov
lret
vmread
iret
push
rcrl
lret
scas
ret
sahf
sub
ja
adc
jl
ds
cli
sub
test
add
dec
mov
sub
int3
jo
dec
mov
mov
dec
sub
cli
loop
inc
bound
xchg
xor
and
repz
int
ja
test
pop
push
sbb
cmp
dec
and
pushf
mov
leave
cmp
dec
mov
jl
mov
xchg
jg
aas
pusha
imulb
call
fcmovbe
cmp
cmp
roll
adc
or
lahf
sbb
clc
out
icebp
xor
std
lcall
mov
pop
daa
push
lret
mov
fldcw
sub
sbb
pop
lods
jle
xchg
push
mov
data16
out
pop
push
xor
ljmp
pop
out
cs
out
js
mov
cmp
aaa
mov
in
pop
in
mov
and
cwtl
mov
bound
adc
in
fcomi
or
in
mov
mov
arpl
xchg
pop
mov
mov
mov
xor
xor
sbb
int3
arpl
outsb
pop
pop
cmc
mov
out
out
aad
push
adc
mov
dec
testb
or
clc
std
or
ja
push
dec
and
icebp
adc
xlat
xor
push
cmp
push
in
mov
aaa
in
je
xchg
mov
paddusw
enter
out
xchg
mov
ds
notl
sub
sub
aas
testl
add
aad
add
cli
push
pop
and
aas
movsb
lds
cmp
xorb
dec
aam
cmp
arpl
sub
aaa
mov
dec
cmpsb
icebp
addr16
std
pushf
sbb
mov
cmpl
add
fbld
pop
cmp
cmp
push
out
hlt
popa
lods
push
add
sub
cwtl
pop
pop
rcrb
sub
inc
movsl
movsl
imul
cmpsb
lea
inc
adc
or
xor
in
int3
mov
in
ja
mov
inc
sbb
xchg
pop
sti
imul
mov
cmp
push
sti
mov
adc
mov
scas
xor
pop
fnstcw
xchg
loop
xchg
add
cs
lahf
icebp
sub
roll
cmp
ret
mov
adc
aad
in
lret
mov
mov
clts
inc
les
push
cli
jle
pop
out
inc
adc
loope
push
sbb
sahf
lods
sbb
jp
pop
out
inc
xchg
dec
outsl
clc
test
gs
push
ds
icebp
repz
cmc
cltd
mov
cmp
and
sbb
adc
pusha
or
lahf
cltd
mov
dec
dec
stos
loop
lods
push
mov
cmpsb
add
dec
bnd
mov
jmp
xchg
or
lods
mov
insb
les
xchg
pusha
xor
xchg
sub
mov
sbb
jp
out
filds
mov
or
repz
jge
mov
inc
imul
lret
fisubrl
adc
adc
inc
inc
mov
lret
ljmp
xchg
aas
es
mov
inc
dec
bound
rorb
pop
jo
xchg
das
jl
xor
mov
jl
loopne
xor
fwait
jl
dec
inc
ss
jmp
out
xor
xor
adc
icebp
insb
mov
inc
pop
and
jg
xor
in
mov
sbb
out
clc
mov
dec
aas
or
repnz
outsb
cmp
push
jno
adc
lds
jbe
xchg
push
pop
cltd
cmpsb
addr16
and
pop
test
fstp
xchg
and
addl
xor
in
test
scas
mov
pop
dec
push
loop
mov
jg
shlb
sub
sbb
lods
pop
sub
mov
adc
out
xlat
or
ficoms
xchg
in
xor
xchg
dec
mul
mov
add
cs
ss
movsb
jg
aas
gs
cmpsw
or
clc
insb
lods
sbb
inc
std
shrb
in
fcmovnbe
sub
out
or
mov
mov
jno
jecxz
cmp
xchg
inc
adc
xchg
cmp
adcl
in
rcr
repz
gs
xchg
mov
out
pop
dec
cvttps2pi
lretw
pop
mov
cmp
stos
cmc
xor
popa
pusha
push
cmp
adc
inc
inc
test
push
leave
dec
xchg
nop
cmp
lret
lret
fists
dec
pop
jno
cld
adc
jmp
idiv
daa
mov
aas
sub
adc
xchg
test
mov
les
movsl
mov
movsb
xchg
inc
sbb
xchg
mov
andl
cmp
mov
jmp
push
add
mov
push
cmp
enter
test
cs
enter
test
movsb
pop
pop
mov
rolb
or
mov
inc
loop
cmpsl
daa
lcall
int3
mov
jnp
add
shll
xchg
xor
loopne
sub
pop
scas
rolb
jae
mov
testb
stos
bound
rcll
push
out
inc
sbb
jo
mov
jne
pop
xchg
xor
sub
pop
pop
cmp
shlb
and
push
cmp
sub
sbb
call
cmp
shlb
jle
lods
sbb
fcmovu
ljmp
xchg
out
movsb
xchg
js
lods
push
data16
repnz
mov
push
aad
pop
daa
dec
sbb
in
mov
scas
in
push
mov
rorl
fs
negl
aaa
popf
and
std
ret
aam
fsubr
aaa
and
push
sbb
mov
mov
jl
stos
sbb
fists
inc
loop
bt
mov
dec
in
pop
sbb
pop
xchg
adc
mov
add
fcomps
pop
rcll
rcr
inc
insb
adc
mov
mov
popa
jg
jmp
dec
test
in
mov
es
incb
xchg
pop
dec
inc
cmp
or
pop
push
add
mov
jne
bound
mov
out
lret
and
cmp
jo
cld
outsb
jp,pt
je
iret
xchg
fcoms
mov
inc
jle
arpl
in
cs
imul
sarl
inc
jle
sti
push
push
gs
rcrb
fnstenv
iret
sbb
outsb
push
iret
lods
rcrb
cmpsb
inc
les
or
jle
inc
add
fwait
add
inc
hlt
inc
mov
xchg
lods
imul
pop
mov
jl
mov
xchg
imul
out
stos
pusha
add
and
mov
imul
dec
add
or
nop
rclb
push
out
pop
mov
cmp
cmpsl
cmp
mov
or
inc
push
xlat
adc
xchg
popa
mov
xor
inc
cwtl
or
enter
push
push
arpl
mov
test
je
sub
ljmp
sub
mov
outsl
cmp
mull
dec
push
sub
push
das
jle
addr16
lret
cli
fimuls
adc
sbb
es
rclb
mov
icebp
cmc
pop
aaa
movsl
push
enter
sub
or
xchg
jne
popa
mov
lock
and
negb
in
mov
lahf
pop
cli
aam
push
das
sbb
aam
jne
clc
insb
fildl
sbb
push
jmp
and
aam
jecxz
divl
pop
fisttpll
push
int
fisttpll
cmp
xchg
popa
leave
scas
lcall
subl
add
loope
xchg
int3
jnp
fsubr
push
pop
mov
aaa
lock
adc
mov
push
scas
call
arpl
les
shrb
push
dec
sbb
ljmp
pop
and
dec
mov
jecxz
pop
int3
xchg
dec
jno
aad
popa
aad
adc
push
mov
add
aam
mov
xchg
xchg
dec
in
or
outsb
cmp
shr
cmc
in
lods
or
ljmp
xor
inc
in
test
popf
push
push
mov
enter
mov
push
pop
adc
iret
psllq
mov
cs
mov
mov
and
push
xor
push
dec
hlt
loope
push
adc
xor
xchg
popa
push
mov
add
ficomps
out
sbb
call
jns
pop
mov
inc
fcomi
dec
andb
lea
call
sbb
ret
sub
and
xor
push
das
xlat
lds
iret
hlt
jbe
mov
rol
data16
sbb
cmp
fst
jae
jbe
sbb
mov
inc
in
out
movsb
sub
push
in
push
loopne
sub
pop
fwait
mov
sbb
imul
cmp
inc
popf
mov
xchg
xor
lret
inc
pop
out
dec
xchg
cmp
pop
lret
mov
outsl
mov
les
loope
int
pop
adc
stos
negl
sbb
clc
push
add
dec
inc
and
dec
mov
cmp
ret
inc
mov
ret
aam
fsubrs
add
cmp
mov
jo
mov
les
arpl
movsb
add
sbbb
lahf
cmp
mov
popf
loopne
sahf
scas
imul
cmp
inc
xchg
sarb
sbb
dec
mov
mov
lret
sbb
ja
fldl
adc
mov
popa
pop
dec
adc
push
push
clc
mov
dec
filds
in
adc
push
sar
adc
fcoms
out
mov
stos
mov
scas
lock
mov
jmp
cmpsb
sbb
jno
pop
fimuls
xchg
xchg
xor
aas
mov
jae
mov
aam
in
cmp
sahf
movsb
pcmpeqd
cld
mov
inc
sti
loop
jno
gs
or
jmp
cmp
sbbb
push
imul
pop
out
mov
xchg
lahf
push
push
aam
cmp
leave
jae
testl
call
js
xor
test
in
push
lods
popa
jmp
mov
or
push
xchg
jmp
js
or
jmp
adc
in
ds
xchg
roll
nop
inc
xchg
das
mov
fstps
xchg
movsl
lods
or
sub
jbe
stos
aad
inc
xchg
dec
mov
mov
inc
cmpsb
cmp
push
xchg
push
out
or
jmp
jge
sbb
loopne
stc
sub
mov
mov
movsl
add
mov
in
int3
dec
outsb
pop
je
pusha
or
mov
mov
dec
cli
lods
xchg
push
movsl
and
jo
xor
mov
xorb
lahf
sbb
pop
in
fucomi
xchg
or
cmpsl
mov
clc
push
mov
shrl
push
xchg
sub
inc
lret
adc
pop
mov
lds
loopne
mov
sbb
mov
lods
imull
in
adc
sbb
dec
inc
repz
push
dec
das
and
cmp
mov
lock
sub
das
loope
pop
je
mov
pusha
xchg
lcall
dec
test
mov
fcoml
loope
popf
hlt
add
arpl
mov
pusha
std
lahf
pop
jp
add
cmp
test
pushf
imul
sbb
push
xor
adc
dec
loope
cmpsl
and
cmp
aad
push
pop
mov
and
insb
popa
fistpll
jne
xchg
sub
lds
pop
sahf
mov
push
pop
jbe
mov
test
or
inc
push
lcall
scas
pop
adc
fdivs
filds
xlat
xchg
pop
mov
mov
xchg
rorl
test
iret
fs
lcall
dec
es
aaa
sub
jo
call
roll
lods
fs
sar
idivb
dec
rorl
aas
lcall
sar
xor
shl
gs
mov
aam
movb
ret
xchg
jl
and
aam
add
mov
std
cli
adc
pop
cmpsb
ficomps
pop
lods
lahf
adc
inc
and
jnp
cmovne
minps
mov
and
adc
ret
iret
mov
call
setne
fwait
arpl
aaa
mov
sub
fs
js
push
pop
sbb
xlat
fiaddl
aaa
jno
data16
xlat
mov
les
mov
arpl
pop
test
jmp
or
ljmp
inc
cmp
xor
mov
mov
lods
inc
jbe
dec
pop
add
cmp
xor
lcall
je
add
push
divb
and
jns
pop
xchg
ljmp
lods
push
rolb
dec
sub
sbb
adc
adc
out
mov
test
mov
test
mov
arpl
dec
in
pop
xor
es
out
pushf
cmp
enter
ss
fcoms
xlat
sbb
popf
mov
pop
addl
push
inc
jmp
add
bound
pushf
loop
mov
imul
jecxz
int3
pop
cmp
pop
imulb
jae
or
xchg
push
xchg
cmp
outsl
mov
scas
mov
push
and
test
fbstp
xchg
lods
mov
int
and
push
test
or
mov
enter
push
mov
mov
cmp
scas
lock
rolb
inc
sub
out
cmc
call
jp
xor
push
lea
jg
mov
xlat
or
and
repz
mov
xchg
test
rcrb
xchg
pop
xor
sbb
sub
repz
xor
test
mov
out
inc
sbb
jae
adc
jecxz
jmp
pop
inc
cmpsl
int3
mov
and
sub
int3
jle
pop
xchg
dec
fsubl
stos
outsb
sub
rcrb
rorl
sub
ds
inc
or
cltd
jl
lcall
inc
mulb
aaa
loop
mov
in
and
jl
cld
cltd
bound
mov
jb
arpl
mov
faddl
xchg
inc
cs
sarl
scas
subb
and
out
sub
sub
jmp
popf
mov
push
nop
inc
test
and
inc
fs
mov
jmp
dec
out
imul
call
push
stos
jl
in
xchg
mov
or
jmp
icebp
testl
mov
les
enter
popa
fmul
xchg
xor
dec
loope
stos
daa
xchg
sbb
popf
sbb
test
mov
inc
repz
cld
mov
add
clc
call
mov
js
mov
lods
pop
pop
and
stos
pop
jno
add
mov
rcr
mov
add
pop
xor
pusha
rol
inc
add
push
lock
jg
clc
adc
inc
rorl
call
incl
pop
pop
in
lea
or
jmp
rol
jbe
in
inc
jo
fisubs
sbb
push
xchg
pop
rclb
scas
cmp
pop
sub
mov
sbb
inc
xor
jae
shll
dec
push
movsb
push
test
loope
or
mov
lock
mov
push
cli
and
daa
arpl
test
fsts
incb
or
mov
iret
xchg
pop
repnz
jne
push
push
inc
cli
jb
jo
add
lock
mov
add
test
sub
loopne
fmuls
add
rorl
test
es
scas
into
xchg
insb
cld
je
adc
ret
jo
andl
pop
test
int
push
jns
cmpsb
adc
fstpt
fsubrs
inc
dec
nop
pop
leave
mov
fstpt
shl
mov
ret
nop
push
mov
xlat
inc
add
jns
jnp
xorl
andl
mov
push
xor
jle
mov
outsl
leave
ja
pusha
cmp
repnz
lods
es
push
shrb
cwtl
shl
imul
mov
inc
inc
std
dec
inc
jne
subl
xor
incb
icebp
outsb
cmp
fistl
xchg
xlat
sub
inc
testl
xchg
fwait
push
loope
popf
push
aam
add
sbb
lds
adc
pop
dec
jge
and
les
push
push
fsubs
add
arpl
ja
pop
mov
pop
pushf
cmp
jle
sbb
pop
mov
sub
repnz
movsb
cwtl
push
dec
sti
inc
xlat
out
test
sub
sbb
adc
mov
xor
jge
adc
cld
push
fstps
lahf
dec
inc
push
outsb
int
xchg
push
popa
aas
addr16
wrmsr
into
std
adc
sbb
add
repz
test
jecxz
sbb
xchg
jg
jl
or
rolb
loopne
xorl
push
in
pop
xor
popa
clc
sub
out
push
aaa
std
insb
mov
cmpsb
xchg
xchg
imul
outsl
pop
sarl
mov
mov
and
push
sti
adc
cmp
les
mov
mov
xchg
pushf
fistps
into
loop
sub
adc
lock
es
loop
add
push
outsb
das
xchg
seta
xlat
cs
jae
push
jns
mov
xor
xor
pop
or
dec
jl
icebp
sbb
xorb
daa
mov
icebp
mov
lods
xchg
imul
xchg
jb
cmp
jg
iret
xor
pushf
inc
fstpt
out
xchg
xchg
aad
pop
lahf
mov
and
out
mov
or
push
rol
popf
ret
jp
iret
jmp
mov
dec
dec
aas
out
sbb
movsb
es
add
in
pop
cmp
inc
push
push
jg
xor
mov
daa
cmp
xor
xchg
and
push
jle
scas
scas
push
out
mov
xchg
and
stc
xor
ds
iret
sbb
stos
cmp
push
mov
or
pushf
dec
cmp
mov
mov
ja
sub
dec
mov
xor
pop
inc
pusha
test
mov
dec
incl
mov
or
xor
pop
cld
xor
sbb
push
mov
addb
scas
aam
mov
outsl
push
pushf
and
daa
inc
shlb
xchg
imul
cwtl
sbb
dec
or
mov
inc
jmp
arpl
mov
jae
fisttpll
sub
cli
ja
push
pop
sub
adc
cmp
hlt
sub
cmp
inc
int3
jecxz
cmp
jg
ror
rcll
fnsave
mov
fsubp
loop
call
push
xor
fidivrl
jg
or
stos
add
push
aam
mov
scas
in
and
aad
dec
add
mov
fimull
add
inc
in
ja
inc
sbb
clc
cmpsl
xor
cli
iret
xchg
iret
int3
divl
repz
push
inc
dec
xchg
add
addr16
xchg
inc
loopne
je
aas
ljmp
das
iret
cmp
in
cmc
loope
xchg
cmpsl
xchg
cmc
dec
jo
jge
les
cmp
fwait
popl
jg
das
push
nop
jmp
aad
hlt
test
sub
fistpll
es
mov
leave
scas
mov
aam
xchg
dec
jl
xor
ret
fsubrl
push
int
xor
rolb
sub
add
popa
in
push
aam
mov
xchg
ret
or
push
mov
dec
insl
cmpb
pop
mov
push
and
sub
xchg
and
icebp
sbb
pop
sub
ret
jmp
mov
insb
std
mov
sub
outsb
ret
push
inc
cwtl
in
mov
dec
jbe
rol
push
lods
repnz
mov
ss
push
scas
push
js
outsl
mov
bts
xor
fsts
int
fadds
cmp
aad
imul
fwait
cmp
outsb
imul
and
xor
test
dec
addr16
cltd
dec
arpl
lods
mov
push
and
mov
pushf
cmp
out
mov
sbb
cmpsl
pop
jmp
jno
idivl
ret
cwtl
mov
jle
rcrb
clc
in
mov
addr16
sahf
mov
out
mov
aas
les
push
icebp
lock
gs
jge
xlat
dec
pop
movb
inc
pusha
repnz
pop
test
mov
cmc
in
inc
scas
mov
fimull
int3
fs
repnz
cmp
call
mov
outsb
jl
lret
dec
pop
inc
lahf
sti
jmp
dec
lret
lock
int
mov
jae
cmp
sbb
and
dec
jae
mov
inc
mov
test
lods
sbb
xchg
cmc
mov
ds
xor
push
cmp
cmp
int
out
pop
adc
or
out
lret
xchg
or
stos
mov
sar
mov
out
dec
dec
ss
mov
bound
mov
adc
adcb
jmp
sub
push
pop
jp
cltd
imul
daa
mov
rol
push
dec
inc
sub
pop
cmp
mov
pushf
jae
add
xor
in
cmp
in
fistpll
mov
add
sbb
shll
mul
jbe
jg
fstpt
lods
push
shl
sbb
and
mov
frstor
cli
inc
je
mov
pop
pushf
xchg
or
add
icebp
rcll
cmp
lret
cmp
or
xchg
cmp
pop
insb
sub
dec
sarl
dec
inc
xor
mov
hlt
xor
sbb
scas
mov
aas
jne
sub
sub
leave
or
scas
or
stos
movsb
pop
scas
les
add
and
add
mov
lret
flds
stos
mov
dec
jg
mov
mov
adc
inc
dec
jb
jmp
jns
or
add
add
daa
xor
jp
sbb
mov
mov
stos
in
repz
mov
mov
push
sub
or
mov
aad
adc
sub
mov
lods
insl
fistpl
push
mov
lret
out
ret
push
mov
out
add
sub
lret
js
rclb
dec
loopne
int3
cli
lods
push
imul
das
scas
enter
adc
mov
sub
in
mov
stos
mov
stos
sub
adcb
fdecstp
pusha
mov
scas
inc
push
xchg
mov
mov
cld
loopne
cmp
xor
pop
or
fucomp
adc
sub
inc
mov
xchg
cmpsb
test
mov
js
mov
pop
in
dec
xchg
xlat
aam
sub
sbb
jmp
mov
fidivrs
xchg
inc
leave
movsb
in
and
jmp
cmp
movsb
pop
sahf
aas
sti
pop
cmpsl
out
sbb
cmp
imul
sub
subl
int
test
dec
rclb
mov
cwtl
inc
dec
rorl
jne
and
cmp
hlt
push
mov
mov
icebp
enter
scas
xlat
repnz
mov
lcall
push
and
mov
adc
test
cmp
jmp
ja
dec
repz
adc
nop
jge
cmpsb
mov
xchg
add
jmp
ret
mov
cs
out
loopne
sbbl
fidivs
adc
lds
sub
in
ret
fdivl
dec
cmp
mov
mov
cmpsl
mov
jo
mov
lods
sub
dec
and
push
out
adc
rcrl
mov
cmp
inc
in
leave
push
sub
mov
aam
sarb
jmp
add
inc
cmc
aaa
ret
mov
adc
xchg
sub
jmp
test
dec
cmc
out
push
outsl
pop
push
nop
fnsave
enter
inc
pop
cmp
pop
mov
mov
add
out
es
rorb
orb
inc
inc
pushf
stos
xor
jno
sbb
jge
jns
test
lods
stos
or
scas
iret
inc
jmp
xchg
inc
inc
and
xor
iret
lock
int
and
pop
push
ret
push
xchg
push
cmpsl
lahf
jns
xlat
sub
fdiv
lods
jmp
sti
test
mov
stc
shrl
inc
test
adc
or
mov
cmp
sub
ret
cmpsb
xchg
pop
push
orl
jecxz
sub
out
lods
cltd
xchg
push
inc
lahf
call
inc
movsb
sbbb
mov
xor
pop
cmp
dec
int
push
ret
xchg
fisubl
and
mov
pop
adc
fwait
aaa
push
mov
scas
hlt
insb
adcb
add
ret
adc
xor
dec
mov
push
lock
imul
notb
rcl
mov
lret
sub
lret
sbbb
xor
jle
push
fstl
pop
mov
insl
movsl
mov
dec
push
mov
les
test
test
and
adc
jae
cmp
xchg
dec
mov
adc
in
bound
push
mov
inc
mov
pop
add
pop
jbe
or
out
mov
inc
pop
sub
jnp
test
pop
mov
cmp
dec
popaw
jae
sub
push
punpcklwd
cmp
inc
pop
ret
ds
xor
xor
int3
sub
fisubs
push
mov
lahf
jo
iret
je
das
outsl
insl
dec
xchg
ret
xor
xlat
pop
jmp
subb
repz
ds
mov
add
push
xor
push
sub
ja
es
xor
xor
test
movsb
sub
arpl
lods
fcomps
pop
scas
lret
shll
jmp
sbb
jo
mov
lods
jmp
xchg
sub
sbb
sub
subb
sub
mov
lds
mov
xor
mov
mov
sub
sub
push
mov
fadds
add
push
lcall
dec
cmpsb
and
add
dec
cmp
add
inc
das
les
push
bound
push
mov
and
adc
aam
cmpsl
rcrl
cmovge
orl
ret
xorl
leave
das
jecxz
mov
dec
pop
pop
roll
xor
push
mov
add
xchg
test
into
addl
inc
insb
aaa
les
arpl
cmp
pop
xchg
adc
push
pusha
clc
fsubrp
out
cmp
pop
aam
jmp
cmp
or
pop
jb
mov
testb
xchg
jo
mov
adc
inc
das
push
push
jecxz
dec
adcl
test
scas
popa
popf
iret
push
adcl
leave
sub
push
shll
xor
inc
jo
mov
adc
push
jbe
insb
and
add
dec
popa
lcall
jl
iret
fcomps
decb
jb
jno
jb
fsubs
push
mov
pop
xchg
cli
enter
mov
push
aas
mov
xchg
pop
bound
aam
jns
out
push
aam
icebp
in
das
bound
movsl
adc
out
lahf
jae
jne
test
inc
rclb
mov
sbb
sub
jae
mov
sbb
adc
data16
inc
mov
arpl
push
or
out
in
jmp
cmpsl
pop
scas
sbb
orb
jmp
stos
jg
orb
push
dec
fs
xchg
lods
ret
and
jne
test
lds
and
cmp
adc
mov
jb
in
loop
pop
pop
push
mov
cld
xor
adc
sub
int
ret
mov
cmp
jmp
ds
int3
and
clc
cmp
cli
stc
adc
xchg
fnstcw
movsb
cmp
pop
insb
sahf
xor
cltd
scas
imul
lock
xor
add
movsl
je
xchg
std
mov
push
cwtl
les
test
leave
test
push
pop
push
adc
mov
andb
jl
xchg
icebp
or
popa
mov
cmpsb
pushf
fldenv
sahf
add
add
mov
ret
bnd
insl
mov
jg
add
xchg
push
sbb
inc
and
vsqrtss
shlb
stos
insl
rolb
stos
sub
jmp
es
mov
xchg
outsl
sbb
shlb
addr16
imul
int3
ljmp
sti
rclb
add
mov
js
js
movsl
or
mov
and
mov
jns
or
icebp
std
out
rcrb
xor
xchg
push
clc
not
cs
sub
int
jnp
add
sub
xor
call
pop
jmp
or
jns
xchg
movsb
push
mov
mov
gs
lock
loop
ret
dec
js
fldl
xchg
push
fs
inc
pop
pop
pop
jae
cwtl
mov
push
mov
pop
push
xchg
xchg
dec
mov
xlat
mov
repnz
sbb
xorb
push
mov
pop
pop
mov
scas
pop
add
les
and
enter
adc
mov
sarl
addr16
cmp
hlt
sar
sub
jno
mov
xor
outsl
and
mov
loope
shlb
mov
add
scas
mov
sub
inc
and
sbb
fcmovu
cmp
mov
adc
out
jl
imull
pop
aaa
aaa
xor
cwtl
xor
pop
jb,pt
in
aas
push
mov
mov
inc
sbb
add
lret
adc
add
cmpsl
mov
add
sub
mov
mov
push
mov
cmp
scas
and
adc
shll
sub
repnz
add
mov
push
mov
scas
jle
inc
repnz
stos
cmpsb
es
es
test
xchg
mov
jmp
cmp
lret
shl
xchg
push
rcll
push
xchg
leave
ret
push
aad
shll
sahf
mov
pop
push
dec
ljmp
cmp
dec
push
movsb
aad
decb
jle
lcall
dec
nop
mov
mov
pushf
cmc
sub
lret
ja
fisttpl
pop
cmc
cs
jo
mov
fildl
push
arpl
mov
xchg
mov
loopne
nop
xchg
inc
divb
lret
in
xchg
mov
js
or
mov
mov
jo
jle
bound
pop
add
lds
orl
adc
mov
inc
mov
add
icebp
xor
mov
into
inc
mov
daa
add
pop
mov
jl
add
mov
mov
or
cmp
mov
push
and
icebp
shlb
sbb
jbe
movsb
repnz
popa
xor
ret
lds
inc
imul
xchg
or
push
fwait
sbb
repz
mov
and
fmull
dec
sub
and
test
arpl
lcall
inc
mov
mov
inc
and
mov
sub
mov
pop
out
clc
and
mov
dec
fwait
test
sbb
push
push
gs
negb
lret
test
fldl
xchg
add
out
scas
outsl
cmp
dec
insb
fwait
add
test
cli
insl
dec
mov
sub
dec
pop
lret
ret
and
and
cmpsb
cmpsb
inc
je
push
insb
fsubr
popf
adc
ret
and
pop
insl
mov
and
xchg
flds
ficompl
pop
xchg
je
jno
pop
std
mov
pop
mov
mov
mov
fbstp
gs
jae
movsl
push
push
cwtl
mov
push
jnp
add
ljmp
movsb
sub
in
lods
std
sbb
idiv
inc
jle
stos
jecxz
add
xchg
mov
outsb
incb
lock
push
add
adc
mov
jmp
negl
scas
xchg
es
mov
ljmp
jg
push
fdivrl
jle
mov
rorb
and
ljmp
dec
jo
fs
sub
js
mov
in
pushf
fists
mov
inc
xor
xlat
addl
out
lods
dec
lret
dec
leave
jo
fisubs
sub
iret
sub
mov
imul
pop
stos
sbb
add
inc
js
call
dec
int3
pop
lcall
and
addr16
lcall
ss
sbb
int3
add
and
imul
mov
addb
push
iret
hlt
mov
arpl
out
imul
lahf
in
out
jnp
mov
fcomps
inc
sarl
int
add
push
mov
and
rcr
xor
roll
cmp
mov
jno
xor
popa
cmp
and
mov
lahf
fistl
loope
sub
push
add
scas
xorb
pop
mov
mov
std
xchg
ja
fisubrs
fnstcw
mov
rol
mov
xchg
xchg
and
sbb
push
loop
xchg
scas
lods
and
cmovae
add
sub
xor
and
mov
cmpsb
mov
je
jo
test
dec
in
sahf
xchg
jne
popa
popa
mov
xor
scas
mov
repz
add
stos
nop
xor
les
sahf
dec
jle
mov
pop
push
pop
scas
nop
mov
xchg
pop
cltd
push
xor
jno
imull
and
jmp
sarl
aad
push
mov
and
clc
bound
sbb
enter
and
insl
mov
jno
mov
jl
scas
add
pop
dec
sbb
mov
ss
in
jno
or
stos
push
ljmp
psubw
xchg
push
cwtl
stc
lds
sub
imul
fnstcw
mov
fwait
scas
fdivl
rorl
lods
jbe
xchg
hlt
nop
nop
in
fcoms
inc
cmpl
sub
test
loop
int3
out
xor
aam
push
jnp
mov
or
ds
lods
mov
xchg
xlat
iret
popf
push
push
stos
addr16
add
adcb
cli
mov
pushf
lahf
jno
jecxz
mov
fwait
xchg
aas
inc
aas
xchg
mov
mov
dec
icebp
jge
in
xlat
cmp
ds
das
jnp
xor
xlat
push
pop
insb
fistps
es
xor
or
jo
xlat
out
xchg
in
mov
xchg
es
xlat
std
cmp
pop
push
or
adc
orb
sbb
xchg
ss
jle
cmc
mov
xlat
mulb
mov
fs
jmp
scas
push
sub
in
es
push
cld
movsb
jg,pn
inc
or
sub
or
or
das
xor
jb
std
mov
add
dec
cmpb
fistps
popa
sbb
mov
int
cli
arpl
stc
xchg
in
or
daa
daa
loopne
mov
jle
int3
xchg
mov
adc
lods
call
das
or
leave
popa
pusha
imul
aam
push
pop
insl
xchg
fnsave
fistps
lahf
xlat
stc
sub
cwtl
mov
dec
mov
ds
adc
cs
hlt
int3
mov
les
pop
jns
sbb
shl
out
aaa
push
leave
pop
sbb
mov
cmp
jmp
sub
pusha
or
ret
push
push
fmul
lret
mov
push
and
xchg
pop
mov
mov
dec
and
sbb
rorb
addr16
scas
sub
inc
out
icebp
sbb
xor
bound
dec
orl
add
sub
jmp
scas
jp
outsl
cmp
push
cmpsl
cld
lcall
and
jae
cld
xor
imul
xlat
lret
out
mov
fwait
mov
inc
push
lret
push
xchg
jge
popf
imul
mov
sbb
pop
sub
sahf
xlat
dec
mov
push
imul
lods
sar
xor
mov
cmp
jnp
stos
mulb
xchg
push
xchg
xchg
and
jns
inc
sahf
shlb
cmp
jge
jb
pop
dec
lret
icebp
lret
shll
sbb
mov
stc
enter
xor
dec
push
lods
rcrl
mov
adc
ret
inc
rolb
or
inc
scas
mov
mov
push
movsl
xor
or
xor
mov
jge
mov
mov
mov
les
sbb
outsl
shll
cmp
call
jecxz
sbb
cmc
cltd
adc
sub
dec
dec
add
or
fidivrl
sub
push
pop
xchg
cs
cs
arpl
inc
mov
jecxz
inc
sbb
pop
loope
pop
call
sarl
stos
cmpsl
push
dec
fyl2x
std
js
inc
icebp
add
mov
pop
es
adc
push
sbb
scas
addb
adc
cmp
inc
mov
insb
addl
and
jg
ret
xor
push
dec
push
or
xchg
aas
testb
cltd
and
inc
add
mov
in
repnz
faddl
mov
jnp
lret
js
les
fs
je
xor
popf
mov
movsl
int
cs
notl
cmc
inc
xor
fwait
dec
push
pop
movsl
jno
ret
shll
push
jae
jo
pop
dec
pop
xchg
test
sbb
xchg
jecxz
adc
loope
arpl
fwait
jl
pushf
jl
imul
cwtl
cmp
push
sub
mov
stos
xchg
aad
in
cmpsl
hlt
mov
mov
out
ja
pop
adc
out
jmp
shrb
and
pop
mov
subl
push
repz
inc
and
js
pop
jo
cld
mov
sbb
rcl
jne
inc
adc
movsb
es
xor
cmpsb
adc
cmp
and
test
flds
xchg
dec
cmpsb
ljmp
inc
sbb
adc
lret
fs
cmp
sbb
xor
es
and
jle
jmp
in
pop
outsb
xor
or
pop
xorb
or
jne
sub
mov
push
push
jg
or
fadd
jle
imul
mov
ljmp
popa
pushf
sbb
mov
lds
mov
test
aam
daa
jge
ret
ss
sti
movsb
sub
or
ss
lods
jl
jbe
adc
in
sub
mov
xlat
xchg
dec
push
imul
push
jg
adc
xchg
adc
fadd
jl
frstor
ror
test
ja
arpl
out
lret
imul
loop
pop
mov
fsubs
cwtl
stos
mov
imul
xchg
imul
dec
jnp
sbb
xor
sbbl
add
es
shrl
int
push
jp
jge
or
addl
push
mov
sub
int3
fwait
sub
in
test
xor
lret
or
pop
cmp
jp
xchg
sbb
ss
pop
adc
pop
or
dec
pop
adc
jns
mov
ss
lret
add
fistpl
loope,pt
and
repz
ds
lcall
dec
and
mov
mov
add
and
mov
cmp
jae
lahf
roll
jp
xor
jmp
rorb
sbb
push
int
cmp
repz
xchg
call
cmpsb
push
es
xor
mov
test
lret
daa
and
cwtl
jne
popf
fcmovnb
dec
test
xchg
inc
jb
addr16
add
and
push
dec
xchg
test
loope
cmpsb
nop
nop
adc
fwait
sbb
add
sbb
cwtl
sub
or
and
aas
push
std
add
pop
mov
mul
sub
pop
pop
adc
leave
cmp
push
out
push
in
das
leave
dec
lahf
inc
frstor
out
pushf
sub
and
or
mov
adc
jo
push
jnp
out
and
push
or
push
add
or
push
sbb
pop
adc
and
sbb
lcall
xchg
and
loopne
pop
xchg
jnp
adc
nop
mov
sbb
inc
fldcw
xchg
and
cmp
aas
les
sub
cmp
mov
cmp
dec
icebp
lods
adc
push
iret
dec
jne
in
push
rolb
mov
xchg
pop
jl
repnz
inc
aas
arpl
push
sub
xlat
xor
in
sub
pusha
sbb
cmp
sbb
cmp
mov
and
sub
xchg
shll
sbb
sbb
cmp
mov
mov
mov
push
jns
int
pop
fnsave
or
xchg
cld
sbb
jl
pop
lret
aam
mov
add
and
xchg
clc
mov
ja
fisttpll
cwtl
or
sbb
cmpsl
gs
lods
sbb
hlt
xchg
xor
loope
mov
shr
aam
jle
les
fcmovbe
push
dec
data16
les
inc
mov
inc
gs
imul
ja
js
aas
lahf
out
into
or
adc
adcl
cwtl
or
push
cmc
repnz
mov
push
xor
cmp
jno
les
lods
pop
xor
xor
cmpsb
cmp
int3
adc
and
pop
sbb
push
xor
shlb
aas
add
fsubp
pop
and
mov
scas
push
xchg
mov
cmp
and
push
push
mov
imul
iret
cltd
add
std
mov
test
add
or
xchg
out
cld
push
xor
xor
jno
push
dec
repnz
test
xor
and
es
xchg
imul
xor
imulb
mov
adc
ss
mov
outsb
pop
sbb
in
jnp
pusha
xor
inc
dec
addr16
xor
lods
lret
mov
sar
mov
les
sar
fwait
mov
ret
pop
decl
fidivrs
push
xor
ja
mov
cmp
cmpsb
mov
scas
das
or
mov
fs
nop
jne
and
pushf
or
cmp
inc
fwait
mov
aad
mov
and
iret
loop
test
ret
xchg
cmpsl
push
leave
xchg
loop
int3
ja
mov
aad
test
push
jmp
mov
stc
push
and
rcrl
or
mov
es
cmpsb
stc
in
xchg
pop
rorl
imul
cld
or
inc
jns
scas
lea
xor
dec
test
scas
cmp
push
aad
jmp
idivb
add
mov
ja
aam
push
jecxz
push
xchg
xlat
outsl
fs
fbstp
sub
rorl
rolb
iret
or
jl
push
mov
or
add
adc
stos
add
cmp
adc
xchg
ret
setae
into
sub
xchg
loopne
ret
sbb
fcmovne
or
inc
push
fwait
xlat
xlat
inc
xchg
mov
aad
jg
sub
sub
sbb
les
xor
xchg
icebp
sbb
arpl
ss
mov
nop
movsl
sbb
fstp
mov
cmp
fdecstp
out
popf
jmp
mov
cvttps2pi
adc
sub
adc
ljmp
mov
cltd
imul
lods
pusha
xchg
lret
push
mov
loop
mov
dec
lds
push
cmpsb
push
cld
mov
xor
mov
jnp
xor
pushf
mov
js
sbb
sub
sahf
fmulp
push
into
ret
xor
or
cmp
and
xchg
stos
mov
adc
lea
fcmovnu
hlt
pop
push
pop
ss
lret
ss
mov
aas
xchg
xchg
sub
ds
jb
pop
in
sub
or
mov
and
pusha
pop
loop
add
cwtl
insb
test
outsl
gs
add
call
test
fcomps
das
jecxz
mov
xorb
add
scas
into
hlt
sahf
lods
mov
cld
bound
testl
lea
ljmp
cli
cmp
mov
dec
lahf
xorl
repz
mov
push
mov
stc
int
cld
inc
adc
jnp
ljmp
inc
mov
jg
movsl
andb
fiadds
fldln2
subb
pusha
jae
stos
adc
test
in
or
pop
bound
fists
dec
jp
mov
nop
fucomip
push
add
cwtl
pop
adc
add
into
jmp
mov
cwtl
lock
and
lret
data16
je
cltd
rcl
mov
sbb
outsl
inc
or
sbb
inc
or
sub
test
fmull
mov
jg
sbb
pop
lds
mov
iret
pop
nop
rcl
mov
in
inc
cmp
out
xchg
int
adc
cmp
xchg
sbb
add
outsb
outsb
xlat
or
lret
test
outsl
mov
mov
adc
daa
ss
xchg
sbb
cmc
inc
mov
mov
mov
sub
or
outsl
ss
cltd
ret
sbb
dec
push
scas
adc
and
lods
mov
cmpsl
aas
ror
sbb
push
sub
loop
and
mov
mov
insl
test
std
fsubrs
js
lcall
mov
add
or
fistpl
inc
mov
xor
jo
out
add
add
sbb
lea
ja
lahf
ljmp
push
outsl
jno
cmp
in
and
mov
xlat
jnp
dec
xor
stos
sti
mov
dec
add
nop
lock
js
repz
push
mov
sub
lret
pop
imul
xor
iret
std
ret
inc
arpl
mov
add
mov
test
stos
jecxz
cmc
mov
xchg
mov
dec
or
imul
loop
mov
sti
leave
sbb
ret
mov
xor
pop
push
dec
cmc
gs
insl
call
pop
mov
pusha
xchg
out
rcrl
mov
pop
dec
cmp
xor
pop
lods
in
xchg
scas
mov
add
test
cmc
aaa
out
fmuls
pushf
stos
adc
dec
xor
idivb
in
out
jns
out
clc
aam
jg
test
pushf
bsr
fwait
adc
inc
subb
ja
xor
aam
imul
or
imul
and
into
xor
jae
xchg
dec
jp
inc
and
loope
cmp
imull
fwait
in
cmpsb
test
lahf
subl
and
mov
cmp
inc
inc
mov
push
data16
ficomps
jns
fwait
cmp
adcb
pop
adc
dec
push
add
cmc
sbb
pop
xchg
movsb
fimuls
xchg
sti
lcall
mov
cmp
adc
out
dec
adc
stc
cli
stc
repnz
mov
pop
add
in
aam
cltd
out
jbe
js
pop
gs
mov
outsb
fwait
jg
scas
cmp
mulb
cmp
add
orl
mov
scas
lret
xchg
jae
ds
or
xor
addr16
lock
aaa
fstps
or
test
sbb
ja
mov
xor
das
inc
insb
icebp
idivb
loop
lds
movsl
jbe
sbb
daa
je
pop
dec
jnp
jo
xor
mov
mov
fadds
stos
mov
les
dec
shl
mov
xchg
and
outsb
and
cwtl
sub
aas
fistps
pop
loop
fsubl
xchg
xor
adc
int3
add
ffree
sbb
out
lods
mov
es
cwtl
lods
lds
jns
xor
loop
jecxz
push
mov
pop
aas
and
in
mov
lahf
ret
inc
stos
ds
lock
int3
xor
popf
jnp
neg
call
rcr
or
add
ficomps
mov
jp
roll
jmp
pusha
in
xchg
mov
int
icebp
sahf
jne
frstor
fildll
jb
fnstcw
push
mov
cld
sub
and
in
lcall
nop
mov
int
in
sbb
sahf
jne
xor
and
js
popf
rolb
pop
push
jnp
imul
imul
pop
push
mov
in
xor
rorl
enter
xchg
inc
push
xlat
mov
insl
adc
sub
das
outsl
out
data16
dec
ljmp
pop
xlat
lods
and
push
or
pop
or
outsl
aam
mov
fcmovu
adc
mov
pop
repz
sbb
mov
xchg
pop
int3
shll
xor
jb
mov
testb
popf
and
dec
mov
sbb
xchg
leave
jns
adc
test
pop
inc
dec
mov
cmp
jbe
jmp
jg
lahf
daa
mov
hlt
lea
repz
inc
leave
xlat
and
ret
pop
cmp
outsl
pop
push
repnz
leave
cli
decb
jg
xor
lods
loop
cmc
div
push
jl
push
adcl
jg
mov
je
cmpl
aaa
js
sub
pop
adcl
xor
hlt
jbe
movsb
push
iret
clc
cli
inc
push
cmp
push
gs
test
clc
fsubrl
punpckldq
xchg
inc
mov
mov
pop
mov
add
mov
mov
jne
and
outsb
jp
cmpsb
stc
mov
gs
xchg
std
lahf
jle
sub
insl
stos
or
and
add
adc
xor
lods
mov
pop
popf
in
and
aad
cmpsb
inc
lahf
leave
dec
gs
jns
and
lds
adc
lock
arpl
inc
cld
insl
fmul
xchg
cmpl
filds
clc
sbb
sub
xor
mov
adc
lock
jae
aaa
sub
div
sti
pusha
addr16
outsl
int3
cmpl
xor
pop
jae
in
cmp
mov
sub
and
int
or
jmp
push
push
pop
lea
shrl
jmp
into
jmp
shl
adc
sub
out
ficompl
and
movsb
popf
dec
cmp
stos
jl
add
lret
loop
das
xchg
in
aam
mov
dec
mov
xor
add
aaa
xchg
jl
jecxz
mov
bound
add
or
sbb
adc
andb
lret
inc
xchg
movsl
mov
jp
xchg
jmp
and
xorl
fidivs
cmp
inc
lea
shl
data16
lods
inc
push
repnz
fcmovb
xor
insl
inc
or
or
outsb
sub
lea
and
mov
add
mov
mov
pop
mov
adc
or
std
mov
test
lods
or
pop
pop
mov
inc
pop
mov
jne
adc
insb
adc
dec
and
jb
push
jne
sahf
insb
rcrb
jns
mov
sub
daa
mov
or
packsswb
lock
out
adc
cmp
mov
inc
test
popa
mov
repz
js
push
cmp
sarb
pop
test
mov
hlt
shrl
imul
cmp
jne
negb
je
push
adc
push
lea
sub
jnp
mov
dec
jl
adc
fwait
orl
xchg
daa
dec
mov
out
pop
int3
ja
leave
mov
in
aas
jns
push
lea
in
cmp
xor
out
cmc
icebp
repz
icebp
enter
test
push
add
cmp
mov
sti
cmpsb
repnz
js
cmp
sub
test
test
pop
xchg
and
lods
xor
jnp
sbb
xlat
or
xchg
dec
loopne
call
movsb
push
xorb
hlt
divb
es
aad
stc
outsb
cmp
cmpsb
cwtl
je
in
sbbl
out
mov
mov
setg
jmp
xchg
push
fisubl
xchg
jmp
sub
xlat
xchg
out
fidivrs
loope
add
push
jecxz
call
es
popa
repnz
inc
test
jbe
xchg
inc
test
adc
add
enter
loope
js
cmp
cld
aas
mov
inc
outsl
adc
xchg
outsl
mov
sub
je
adc
lret
push
mov
jp
jl
lcall
inc
mov
pop
out
pop
not
test
test
mov
aaa
fdivrl
dec
cmp
lret
lds
das
xchg
inc
cmc
xchg
cmp
xchg
ret
or
mov
push
sub
xchg
in
cli
movsb
fadd
outsb
or
mov
add
arpl
aam
jb
xchg
aas
xchg
into
sub
jecxz
push
jl
movsl
cmp
pusha
jl
xchg
les
dec
jl
add
xor
arpl
cmpsl
and
pop
lret
mov
pop
push
mov
mov
mov
lahf
outsl
jge
daa
dec
idivl
and
jno
dec
and
push
mov
loopne
inc
mov
dec
mov
adc
mov
leave
mov
xor
ja
dec
sarl
add
pop
rcrl
cmp
or
mov
pop
push
cmp
push
add
jecxz
out
inc
fsubrp
arpl
imulb
in
push
inc
pushl
ljmp
cmpsl
lret
fistpll
