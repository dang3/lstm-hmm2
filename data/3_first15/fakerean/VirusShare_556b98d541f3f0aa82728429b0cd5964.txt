sbb
add
mov
mov
xor
pop
xchg
or
shlb
dec
inc
and
lret
xlat
jbe
es
loopne
xor
aam
cmc
scas
inc
adc
and
add
incb
imul
push
fldl
jb
clc
and
pop
dec
les
icebp
or
jo
lret
clc
ds
cmpb
in
loopne
mov
lea
lret
das
insb
enter
jmp
arpl
sbb
loop
movsb
pop
rolb
fcmovbe
pop
ret
inc
ljmp
popf
and
ja
adc
push
cld
inc
pop
mov
in
mov
jne
push
mov
mov
rcl
pop
xor
enter
es
mov
xlat
push
jle
dec
dec
and
pop
jg
ljmp
fisubrs
cli
imul
xor
inc
roll
loop
and
cli
mov
sti
sahf
add
cmp
addr16
fcmovne
in
cmp
mov
xchg
jno
int
pop
outsl
sub
xchg
into
xchg
push
ficoml
adc
add
inc
mulb
jge
ret
imul
leave
pop
sub
add
and
iret
mov
in
adc
or
push
cwtl
ja
ljmp
and
stos
adc
or
mov
cli
into
lods
fbld
das
jge
ficoms
aad
aad
stos
frstor
xchg
inc
in
dec
adc
loopne
les
sbb
xchg
imul
sub
inc
dec
mov
in
mov
popa
popf
fisttpll
mov
sbb
imul
dec
add
les
jp
pusha
and
xor
mov
aaa
daa
clc
lcall
mov
or
xchg
sbb
push
stc
call
xchg
int
out
cs
fucomi
push
sarb
ja
or
in
cld
stos
mov
cwtl
stos
or
insb
fbstp
cs
fldl2t
inc
cld
movsl
imul
popa
lret
sbb
mov
fidivl
stos
sub
leave
out
jecxz
dec
std
sbb
jne,pn
mov
jo
test
jmp
push
insb
movsb
js
adc
cld
cmpb
add
sbbl
push
hlt
mov
je
pushf
imul
inc
dec
mov
icebp
cmp
sub
lods
test
hlt
or
fistl
mov
mov
push
repz
jno
add
inc
adc
dec
jp
imul
imul
cmpsl
fisubrl
jne
sbb
pop
pop
xchg
pop
bound
mov
adc
movsb
cmp
loopne
scas
or
push
pop
sbb
popf
lock
xor
xchg
es
mov
fs
mov
gs
push
daa
mov
loop
jnp
inc
sub
std
jo
sbb
loop
lods
mov
inc
fwait
mov
cmp
std
popf
xor
cmp
jno
iret
shll
or
or
adc
xchg
mov
push
xchg
adc
mov
ljmp
jo
sbb
jecxz
sub
das
mov
xchg
mov
mov
push
gs
cmp
add
pop
adc
gs
pop
dec
cwtl
pop
lock
scas
push
xor
orb
pushf
mov
sbb
inc
out
scas
or
fists
scas
dec
in
jnp
add
push
jae
decl
dec
mov
aam
dec
in
dec
xchg
jl
insl
cmp
into
dec
mov
mov
arpl
sub
mov
mov
mov
aad
sbb
dec
addl
lock
lcall
in
sbbb
imul
stos
inc
mov
sti
or
clc
jns
dec
test
mov
std
mov
es
sti
mov
popf
or
rorb
pop
push
dec
mov
loopne
lock
sub
add
jno
negb
ffreep
aas
or
add
dec
sar
pop
add
mov
dec
inc
mov
mov
jno
push
jae
lods
dec
push
clc
jg
shr
xchg
jge
cmc
push
mov
inc
pusha
dec
xchg
imul
popf
nop
pop
jo
repz
data16
xchg
jae
mov
iret
cmpsl
ja
or
sub
jge
mov
ss
mov
jg
jns
dec
dec
mov
scas
call
iret
xlat
dec
nop
cmpsb
dec
shlb
mov
mov
sub
pop
inc
repz
add
div
pop
movsb
nop
daa
rcll
out
test
push
push
jns
mov
cmp
dec
mov
pop
cwtl
and
jb
cmpb
inc
inc
jp
notb
sub
pop
cwtl
es
out
popa
cmpsl
mov
hlt
ror
mov
dec
mov
push
add
dec
hlt
push
and
and
cmp
sbb
jae
int
xchg
or
xor
lds
mov
or
jb
or
sbb
roll
push
xchg
stos
es
test
xor
pop
inc
sub
pop
and
popaw
rcl
test
ljmp
dec
test
inc
dec
gs
test
inc
xor
add
and
scas
lock
xchg
adc
xchg
call
aad
repz
jle
pop
sbb
and
movsb
xor
neg
faddl
mov
jns
inc
pop
or
sub
or
mov
cwtl
nop
nop
cmp
pop
cmp
sbbl
inc
pop
push
test
lret
fdivrs
outsb
data16
je
iret
dec
loope
test
mov
mov
jbe
subb
lods
lea
aam
sti
push
mov
and
xlat
into
pop
imul
adc
js
dec
js
pop
xlat
aas
jmp
cmpsb
outsl
cmc
idivl
mov
insl
dec
adc
ror
or
inc
mov
notb
mov
cmp
out
lea
xchg
fidivs
jl
les
adc
loop
dec
scas
imul
cmp
dec
ss
dec
repnz
and
mov
dec
and
sub
fimull
arpl
insb
jno
mov
pop
fstps
cmp
cmovne
mov
mov
fisubrs
mull
daa
mov
jno
inc
mov
pop
sbb
loop
fistps
out
mov
fcoml
stos
sub
cmpsb
shl
imul
cmp
sub
inc
leave
addb
stos
lea
xchg
sub
jb
stc
push
rcrl
lods
dec
arpl
scas
mov
lea
aas
inc
adc
mov
in
nop
aas
loopne
push
adc
notl
les
add
je
aaa
mov
pop
in
int3
adc
dec
cmp
and
icebp
sub
sub
out
fisttps
mov
iret
pop
sbb
cmp
int3
jl
clc
push
shl
stos
fcom
mov
xor
bnd
aaa
inc
and
push
adc
adc
jns
test
roll
sti
out
es
adc
lahf
pop
pop
dec
lahf
mov
xchg
imul
mov
push
pop
loop
int3
sbb
push
sbb
xor
or
and
repz
pop
lahf
dec
lods
inc
test
pop
mov
repz
lret
inc
lock
aad
stc
pop
adc
add
xor
mov
cmp
and
lods
leave
cld
sbb
sbb
idivb
or
in
push
or
pop
mov
rolb
lods
mov
xchg
jg
and
jb
lret
sbb
dec
sub
int3
mov
roll
mov
int3
pop
daa
inc
mov
pushf
xchg
shrb
xchg
aam
mov
popf
jle
cmp
ljmp
mov
test
and
push
sbb
push
and
xchg
mov
jmp
cld
push
dec
jmp
push
jmp
stos
das
xor
inc
cs
pop
lahf
mov
mov
push
mov
or
inc
jl
addr16
mov
fsubrl
push
mov
fwait
xchg
push
outsb
into
push
sub
insb
mov
cs
dec
cltd
lcall
pop
push
jmp
mov
loope
jl
adc
add
loopne
inc
mov
push
fwait
stos
sbb
ljmp
pcmpgtd
xchg
xchg
aam
iret
inc
cmp
js
mov
jl
inc
jns
inc
and
dec
shlb
loopne
push
cmpsl
jb
arpl
push
inc
jp
add
mov
xchg
push
pop
dec
sahf
pop
mov
pop
mov
mov
test
mov
xor
pop
lahf
lret
mov
inc
inc
incb
pushf
dec
add
popf
cmp
jno
mov
and
xchg
xrelease
mov
sbb
leave
and
or
popl
stos
sti
xchg
popa
xchg
push
sub
test
les
mov
jbe
ret
dec
xchg
sbb
aaa
and
repz
imul
pushl
dec
jae
stc
add
xor
out
inc
sub
jp
outsl
adc
cmp
mov
out
jp
mov
test
jno
mov
gs
ds
mov
xlat
xlat
push
or
enter
inc
jp
cli
ss
add
pop
jne
push
int
and
inc
and
sbb
mov
in
adc
mov
out
jnp
cmpsb
mov
test
sahf
push
jmp
mov
daa
xor
jnp
push
andb
mov
mov
xor
mov
inc
aam
in
rorl
repz
int3
and
ss
mov
sti
push
mov
mov
jmp
mov
sub
adc
mov
or
inc
iret
mov
or
cmp
xchg
aas
push
mov
sub
mov
mov
cli
mov
ljmp
repz
jns
loopne
and
pop
fcmovbe
jg
inc
push
mov
stos
sub
jg
dec
jnp
lcall
outsb
loope
xor
pop
pushf
popa
cld
daa
lea
jle
adc
js
out
rsm
arpl
negl
dec
sbb
leave
xchg
dec
push
mov
jge
enter
xor
shll
adc
popf
pop
sub
mov
pop
mov
sbb
sbb
bound
mov
jge
sub
push
mov
cmp
and
and
dec
imul
outsb
js
ljmp
std
inc
scas
mov
daa
insb
in
loope
icebp
xchg
ret
cmp
cmp
or
push
aad
andb
ret
rorl
dec
cwtl
mov
jbe
sub
pop
cmp
jge
cmp
xchg
lea
fucom
lcall
add
add
inc
sub
add
xchg
or
push
jns
leave
out
pop
adc
addr16
and
in
sarl
or
in
sub
cs
and
jl
mov
mov
ss
cmp
adc
xor
loopne
fstp
lock
add
insb
into
je
pop
add
adc
mov
das
fsubrs
imul
aad
loop
mov
fnstenv
int
mov
rcrl
inc
push
sub
pop
aaa
pop
sub
jl
addr16
mov
lret
inc
push
or
push
add
test
aaa
test
inc
add
movsl
enter
sub
std
push
jbe
scas
dec
push
mov
inc
popa
xor
jne
sub
cmpsl
jl
loopne
aas
out
pop
ror
adc
sub
xchg
mov
xchg
xchg
mov
mov
sub
sub
gs
pop
pop
jo
movsb
test
ret
scas
sbb
in
pop
shl
add
frstor
cltd
jne
and
mov
stc
mov
or
sbb
inc
xor
mov
push
call
jl
sub
inc
or
add
mov
rcl
lods
dec
mov
push
lret
add
or
jge
cltd
mov
cmp
pop
xchg
or
jp
inc
mov
fsubs
jmp
aam
add
mov
pop
fnsetpm(287
lods
ret
dec
repz
sbb
aad
mov
pusha
out
scas
out
ljmp
jnp
sub
cmpsb
mov
scas
pop
in
gs
pop
hlt
fst
jb
fsts
lret
rcrb
push
inc
or
push
js
dec
jg
xor
je
mov
out
jae
insb
add
nop
jmp
imul
sahf
dec
mov
leave
jge
fbstp
add
lods
rorl
aad
popf
jns
mov
lahf
cltd
push
mov
std
enter
popf
inc
dec
adc
js
or
jp
enter
arpl
fcoml
das
cltd
mov
adcl
shl
and
fisubrs
mov
adc
call
mov
lcall
rol
inc
and
add
std
push
jns
sub
or
pop
scas
sahf
jmp
mov
aas
lods
in
dec
sbb
mov
out
jl
test
jb
fildll
rdpmc
xchg
pop
into
mov
mov
test
hlt
inc
or
in
push
sbb
ffree
repz
adc
adc
xchg
jl
mov
ds
in
aaa
sub
lods
cltd
jle
cmp
cld
ds
jns
cmp
push
jg
xor
clc
mull
xchg
sarl
xchg
fnstsw
mov
jecxz
iret
orl
shl
jae
and
push
cmp
loopne
adc
sub
mov
daa
aad
cmc
ficoms
mov
push
mov
mov
jp
into
jg
fistl
jne
adc
adc
push
mov
adc
in
adc
inc
mov
hlt
test
loop
dec
mov
cmp
and
mov
std
inc
inc
out
clc
enter
addl
mov
les
insb
jg
test
int3
adc
dec
adcb
jle
cmp
dec
aaa
hlt
mov
pop
imul
add
sub
adc
fadd
nop
xchg
add
add
mov
mov
mov
jg
dec
xlat
mov
mov
jl
xor
pop
fcmovne
jb
fcomip
xor
mov
sbbl
rol
inc
test
mov
and
lock
outsl
mov
cmc
and
hlt
out
ret
dec
push
bound
fwait
int
mov
and
mov
lcall
imul
sub
int
adc
fidivl
mov
sahf
adc
insl
ret
test
jne
lret
pop
push
inc
sub
test
adc
add
or
aad
dec
ret
push
fiaddl
fcmovne
xor
jecxz
push
pop
test
and
fcomps
xchg
mov
cmp
arpl
loopne
sbb
jns
mov
fsubrs
jae
mull
hlt
dec
push
sub
das
mov
jg
out
and
and
mov
adc
xchg
in
and
mov
jl
mov
cmp
mov
in
cmp
sbb
pop
gs
xor
pusha
test
pusha
imul
mov
mov
mov
fucomip
test
jp
jo
fisttpl
mov
and
insb
test
cmp
inc
cmpsb
mov
xchg
test
mov
mov
xor
jo
cmp
mov
cmp
cltd
jl
mov
aas
loop
mov
jp
fiadds
xchg
test
and
testb
cmp
repz
movsb
leave
xchg
cmp
pop
and
xor
lret
inc
pushf
adc
icebp
pop
lds
shll
mov
pop
mov
mull
in
out
jb
dec
not
dec
or
lock
jno
mov
insl
adc
add
inc
adc
jecxz
cmc
fdivrs
scas
inc
sub
push
mov
outsb
mov
mov
insl
jmp
mov
jp
adc
cld
cwtl
mov
stos
and
inc
sub
xor
or
xlat
in
das
pop
in
add
mov
lods
imul
and
sub
sbb
add
adc
or
int3
fsubrs
xor
lock
sub
or
aad
lahf
negb
stos
lea
iret
xchg
mov
adc
pop
mov
fstpl
xor
mov
push
pushf
sub
pushl
leave
and
filds
mov
lcall
sti
push
mov
movsb
add
sbb
movsl
fwait
jae
adc
inc
repz
lds
divl
pop
mov
cmp
mov
jge
xchg
hlt
push
dec
mov
adc
popl
mov
in
push
fs
add
dec
jb
cmp
pop
xchg
lret
xor
arpl
sub
outsl
mov
pop
push
mov
xor
push
pop
stos
mov
jl
jge
bound
push
mov
cmp
xchg
or
lret
cltd
in
jbe
jmp
or
scas
call
mov
add
or
loope
sub
inc
mov
nop
adc
fisttpll
repz
inc
jbe
cmp
dec
xor
ja
jmp
cmpsb
jle
xor
in
mov
xor
sub
mov
xchg
shr
mov
push
loopne
mov
addr16
les
jne
mov
ss
cli
sbb
cmpsl
dec
mov
pop
add
jle,pn
ja
jnp
aas
enter
or
fldt
jno
and
test
push
xchg
sbb
push
xor
xchg
push
enter
loop
ss
std
add
lods
mov
xor
lcall
ds
xchg
sti
das
iret
shll
mov
lock
xor
insl
mov
pop
cmp
nop
inc
mov
push
sub
pop
arpl
pop
pop
push
lret
or
ja
jae
stos
adc
pop
pop
icebp
fs
cmc
jecxz
mov
int3
mov
outsb
sub
pusha
mov
inc
pop
sbb
sub
adc
insl
in
data16
lea
shlb
notb
aas
and
shll
add
imul
push
xchg
xchg
clc
sbb
mov
je
dec
clc
xadd
rcll
mov
and
mov
ss
sbb
add
gs
jecxz
mov
inc
add
mov
cmp
or
dec
rolb
imul
mov
xchg
ss
cmp
iret
or
std
mov
mov
inc
xor
push
jbe
inc
cmp
out
orl
int3
add
sbb
sahf
jp
cli
mov
jmp
and
inc
jp
mov
int
push
fwait
add
shlb
js
sbb
out
pop
pop
adc
mov
pop
aas
xchg
stos
dec
or
mov
xlat
lea
insl
sub
push
aad
adc
adc
fs
mov
cmp
rolb
push
mov
mov
mov
xchg
push
es
outsl
aam
sahf
aaa
lret
fwait
or
or
mov
ds
lds
movsb
xchg
mov
cmp
pop
pop
jmp
pop
outsl
mov
push
push
push
scas
addl
bound
es
mov
jge
mov
out
dec
mov
mov
fcompl
dec
je
jnp
jne
sti
adc
jp
push
sbb
jno
lods
push
jmp
enter
inc
mov
and
push
pop
mov
xchg
cmp
mov
jo
or
mull
cmp
xlat
inc
pushf
inc
stos
cs
and
lds
xor
lea
loop
dec
mov
stc
add
mov
xchg
cmp
jle
mov
in
pop
adc
sbb
fwait
in
getsec
in
mov
mov
movsb
ficoml
push
out
stc
jle
lret
int3
lock
sub
enter
rcrl
aam
aaa
mov
adc
out
add
add
and
rolb
sti
xchg
aas
add
dec
xchg
dec
cmc
sub
aaa
cmp
insl
in
add
mov
into
mov
out
aad
sbb
stos
pushf
add
movb
lret
daa
mov
xchg
mov
imul
aad
jb
inc
jb
gs
repz
fs
fimull
sbb
fidivrs
sbb
stos
loope
outsb
maxps
aas
subb
stc
hlt
aas
and
mov
dec
out
dec
and
pusha
scas
mov
test
ljmp
cmp
das
xchg
ljmp
or
inc
ds
lcall
div
call
sbb
stc
jo
dec
int3
or
xor
mov
lahf
in
pop
mov
insl
test
mov
lcall
xchg
push
mov
ja
int
ret
ret
xchg
pcmpgtb
fdivrp
cltd
aaa
dec
cwtl
sbb
add
pop
int
jecxz
jns
and
add
sbb
int3
xchg
mov
cmpsl
aaa
lds
and
fcmove
add
stc
mov
or
sbb
xor
mov
test
cmc
add
pop
fsts
push
fsts
xchg
movsb
jne
xchg
sbb
int3
js
xor
sub
cmp
repz
mov
sub
fs
cmp
fsubl
adc
imul
xlat
jmp
xchg
fidivs
clc
jnp
push
imul
pop
jbe
in
pop
stos
ljmp
push
pop
movb
fidivs
pop
xor
scas
mov
sti
enter
pop
xlat
loope
pusha
pop
imul
or
dec
push
test
xor
inc
push
aaa
js
add
lock
aas
jbe
out
sub
ret
mov
pop
adc
xchg
arpl
sti
inc
xor
pop
ret
test
pop
sbb
imulb
inc
mov
jae
mov
fiaddl
icebp
sahf
aad
add
and
push
sahf
add
push
les
push
add
frstor
or
and
rorl
lahf
jb
mov
std
rolb
inc
popf
sbb
dec
in
add
jbe
mov
imul
inc
mov
mov
not
loopne
pop
pop
rcrl
add
gs
imul
xchg
pop
sbbb
or
ret
xor
cmpl
mov
je
adc
lods
add
push
mov
pusha
push
cld
xchg
into
cmpsl
pop
adc
sub
adc
jmp
scas
xchg
cltd
push
mov
pop
out
frstor
repz
jns
mov
pushaw
mov
or
mov
lcall
lock
stos
cmovle
pop
fnstenv
xchg
icebp
imul
adc
out
arpl
sarl
testl
jle
enter
iret
mov
scas
std
mov
jl
pop
sbb
xchg
iret
add
out
orb
push
add
mov
sub
cmpsl
test
xchg
xchg
mov
and
stos
repz
and
rorb
adc
xor
out
aas
inc
stc
xchg
movnti
push
inc
push
imulb
roll
jmp
sub
scas
imul
mov
loope
lret
aad
outsb
subb
jbe
jb
fs
stos
sub
push
fnstcw
sub
pop
jle
push
outsb
mov
inc
or
add
add
ficomps
mov
adc
sbb
cmc
add
pop
add
gs
in
shl
dec
fstpt
or
mov
or
outsb
add
lcall
fwait
xchg
xchg
popa
dec
ret
dec
add
xchg
push
cmp
das
mov
fs
dec
mov
push
scas
mov
inc
and
dec
jne
insl
ret
test
sti
jle
lret
add
sub
mov
ficompl
dec
push
sbb
jbe
enter
xchg
add
pop
cmpsl
leave
in
mov
xchg
loopne
dec
insl
pop
and
lods
dec
fmulp
push
cld
jmp
xlat
lock
bound
call
xchg
ret
ljmp
add
in
data16
mov
pusha
adc
arpl
mov
xor
repnz
pushf
call
cli
and
push
and
sub
pop
mov
into
mov
shr
adc
mov
lds
mov
push
jno
negb
shlb
test
pop
xlat
dec
hlt
js
mov
sbb
sub
inc
arpl
pop
enter
xlat
jecxz
call
mov
xchg
jbe
mov
ljmp
mov
test
bound
adc
cmp
push
mov
fcmovnu
xchg
mov
arpl
cmpb
cld
inc
jae
cltd
mov
xchg
push
stc
js
clc
shl
ffree
clc
int3
js
fidivrs
xchg
fstpt
jne
adc
out
adc
mov
aam
jnp
cmc
enter
mov
push
in
lret
mov
sbb
mov
pop
sbb
adc
outsb
jno
nop
jmp
mov
xchg
fidivrs
push
out
mov
psrlq
or
les
fdivl
cwtl
pop
mov
pop
add
cmc
fs
incl
adc
divb
stos
cmp
mov
jge
adc
popf
aam
ret
add
orb
pop
lea
es
mov
loopne
mov
int3
clc
pop
cmp
and
decl
mov
rolb
mov
xor
xor
sbb
cmp
dec
mov
and
out
jno
mov
jne
jns
jne
jp
shll
inc
into
outsb
lcall
jecxz
jle
cmp
cmp
dec
call
mov
sbb
mov
pop
fldcw
mov
mov
pop
stos
lods
mov
leave
stos
adc
jg
out
pop
js
fcomps
sub
mov
mov
mov
movsb
nop
and
push
repnz
pop
xchg
shr
dec
ret
lods
inc
pop
add
xchg
fisubs
mov
mov
cld
and
mov
negl
sbb
ds
rclb
jecxz
dec
lahf
inc
adc
or
mov
or
pop
loope
cmpb
data16
stos
adc
sarl
inc
lods
js
cmpsb
aaa
pop
pop
push
push
xor
dec
sbb
push
push
hlt
xchg
movsb
and
sbb
adc
mov
jbe
xchg
dec
xchg
out
sbb
cwtl
ja
adcb
mov
in
gs
adc
outsb
dec
or
inc
lds
es
mov
stc
xlat
cwtl
xchg
jns
mov
fimuls
mov
insb
sahf
or
jp
inc
lods
jmp
push
sar
movsl
inc
jo
and
add
and
sbb
pop
mov
cwtl
cmp
cmp
add
lock
std
push
mov
mov
adc
notl
cwtl
rcrl
mov
inc
push
jns
repz
mov
adc
filds
ficoml
mov
mov
stc
pop
lds
nop
and
jnp
pop
out
lahf
push
int3
in
push
add
lret
xor
or
ffree
filds
and
cmp
ficomps
xchg
cmpsl
movsl
neg
adc
jle
das
faddl
das
xor
and
imul
or
pop
push
pop
test
sbb
add
sbb
dec
out
fucomp
sub
mov
add
cmp
mov
adcl
mov
gs
fcmovb
cld
dec
push
push
push
mov
into
stos
xchg
mov
pusha
add
sbb
xor
add
dec
mov
insb
daa
lods
mov
add
ficoms
jno
mov
iret
mov
pushf
test
stos
cli
rcr
sub
mov
stc
insl
pop
xlat
jns
lock
jo
xor
leave
sub
and
cs
outsb
mov
inc
xchg
lods
repz
mov
xchg
xchg
dec
clc
sahf
int
jae
ja
push
mov
xor
sbb
hlt
imul
aas
shlb
jno
int3
lds
jbe
imul
push
xor
repz
popf
inc
std
in
out
dec
dec
pop
mov
xor
addr16
sar
push
ss
ret
mov
mov
imulb
test
adc
das
fcmovnu
fidivrs
or
mov
xor
adc
nop
int
nop
cmpb
call
cld
jns
fs
popf
mov
sbb
call
pop
cmp
cmpsb
or
xchg
filds
popf
pop
test
in
xor
or
jb
jae
dec
sub
xchg
clc
add
mov
dec
mov
lcall
sub
iret
lret
outsb
adc
arpl
lahf
jmp
pop
and
cmpsw
inc
cmp
test
mov
mov
movsl
jl
les
jnp
mov
mov
mov
or
std
or
inc
mov
jecxz
addr16
movsb
cld
lret
daa
stos
mov
out
stos
shrl
lods
sbb
loope
mov
sbb
sub
cs
cmpsl
shl
shrb
push
mov
cli
push
sub
ss
out
cmp
push
pop
loope
pusha
nop
dec
push
cmp
mov
loopne
testl
or
fdivl
movsb
push
lods
inc
das
enter
jmp
mov
or
adc
sub
push
pushf
dec
shlb
out
in
insl
scas
cs
push
cmc
cmpsl
mov
cld
dec
jle
movsb
int
movb
adc
or
push
jnp
sbb
jbe
leave
cmp
idivl
lea
dec
in
mov
imul
repz
outsb
ja
mov
jae
in
sub
inc
rorl
sub
aaa
cli
sub
test
dec
popa
mov
imul
xchg
jno
test
mov
pop
jo
sub
aaa
aaa
fdivrl
icebp
daa
mov
lods
ret
mov
sbb
mov
enter
stos
ret
test
pop
rcrb
nop
push
repnz
inc
pop
sbb
sbb
push
std
adc
adc
sub
movsb
imul
cltd
xchg
test
mov
xchg
pop
dec
mov
mov
xchg
cmp
pop
jns
and
mov
daa
aam
xchg
fs
pop
inc
push
jmp
mov
or
xchg
xchg
adc
xchg
ror
insb
xor
push
adc
faddp
push
adc
enter
stc
xor
pop
mov
cmp
mov
mov
clc
lea
mov
jnp
mov
add
push
arpl
lcall
aad
cmp
cld
movsb
mov
or
pop
pushf
rcr
lods
push
sbb
and
out
aaa
push
ds
lcall
js
gs
push
fucom
xor
inc
sub
xor
sbb
popa
mov
sbb
sub
jmp
ljmp
dec
adc
or
test
lahf
je
sub
in
push
mov
jns
scas
ja
int3
push
add
lcall
inc
scas
inc
pop
out
movsl
add
xchg
sbb
jecxz
aas
sub
mov
test
lret
mov
mov
dec
xor
lds
lea
fiadds
jle
or
inc
shlb
into
add
rol
test
inc
imul
pop
mov
cmp
cmp
pop
and
shl
cmp
xchg
rclb
sub
jg
jl
bound
mov
add
cmpsb
jp
sub
sbb
sub
orl
push
cli
nop
pushf
pop
pop
les
aam
daa
hlt
sbb
out
or
jbe
push
and
xor
mov
and
jae
jno
pop
daa
ljmp
stos
insb
shlb
loope
andb
popf
mov
jno
test
pop
push
add
or
push
and
mov
insb
repz
inc
aam
ja
mov
loopne
mov
ret
jle
mov
aaa
stc
xor
inc
test
outsl
dec
cld
fldcw
add
or
add
gs
xchg
pop
bound
jns
xor
adc
movsl
pushf
sub
push
jnp
stc
mov
mov
add
push
and
xchg
daa
dec
jno
mov
stos
cli
lock
sub
jne
xor
fwait
mov
cli
data16
inc
xchg
leave
adcb
mov
rcrb
test
xor
mov
add
test
int3
adc
sbbl
mov
xor
or
sbbb
mov
mov
movsl
loope
outsb
jb,pn
in
cmpsl
in
in
sbb
out
fidivs
inc
adc
rolb
lock
cmp
cmpsb
adc
lock
or
cld
mov
inc
sti
push
das
pop
test
pop
push
fsts
into
xchg
dec
xchg
pusha
int
ljmp
mov
imul
and
in
flds
xor
idiv
movsl
xchg
rorb
std
mov
jnp
in
sbb
fbstp
popa
js
sub
ja
xchg
arpl
pop
push
lods
cmp
aad
adc
inc
shll
test
sub
mov
and
and
clc
jmp
out
fstpl
or
ret
je
sub
in
xor
dec
enter
xchg
std
add
aaa
xor
add
push
push
arpl
lods
jne
or
push
ds
adc
fsubl
push
lea
sbbl
sub
mov
pop
sbb
pop
fistpl
push
rolb
and
clc
iret
xchg
lds
out
iret
cmp
in
sarl
sub
mov
and
insl
jecxz
pand
repnz
cmpsb
scas
adc
ret
negb
movsl
fdivl
cmp
movsl
or
popa
mov
je
push
xor
jp
push
loop
pop
loopne
jbe
call
icebp
xchg
pop
cmp
sbb
in
rol
and
xorl
shlb
test
cmp
test
pop
cmp
dec
int3
jp
std
fstl
fsts
cmp
and
push
test
daa
sub
decl
das
pop
js
xor
in
rolb
movsl
mov
sub
into
mov
shrl
daa
pushf
movsl
add
mov
sbb
adc
aaa
pop
adc
mov
shll
lods
dec
std
in
mov
mov
inc
adc
mov
sarb
mov
push
or
mov
es
lret
pop
js
mov
rorb
cmp
pop
jns
cld
pushf
ror
dec
rclb
je
cmp
dec
push
push
std
lock
cmp
insb
ret
cmpsb
pop
xchg
enter
xor
add
or
fidivl
jmp
int3
mov
adc
leave
in
jge
testb
lods
dec
and
fwait
movsl
pop
fnstcw
jg
pushf
pop
lock
aaa
movsl
jns
sub
pop
mov
lds
and
mov
jnp
fs
cld
jl
cmp
movb
inc
rcrb
icebp
dec
sti
imul
pop
std
sbb
sbb
imul
adc
jo
test
cmp
mov
andl
mov
stos
enter
stos
aas
jo
int
and
test
fldt
add
and
fs
jne
repnz
cmc
jg
pop
dec
lahf
pop
test
testb
test
pop
stos
hlt
mul
add
mov
repnz
push
cmp
insl
or
mov
add
call
loop
cld
xor
lds
sub
es
ss
rcrb
mov
roll
xor
rcrb
add
jns
push
sub
sub
add
aaa
cltd
sbb
insl
xchg
sbb
pusha
into
jge
xchg
pusha
mov
sarb
arpl
pop
add
dec
test
leave
jno
ljmp
xchg
cmp
adc
out
lock
xchg
and
sub
jmp
and
mov
cmp
adc
jp
outsl
xor
pop
mov
jp
and
rol
test
lods
aam
leave
push
gs
aas
pop
nop
rorb
xor
dec
push
clc
sub
imull
mov
aam
push
loopne
cmp
mov
xchg
ss
iret
xor
cld
sbb
inc
cmp
iret
pushf
fcoms
adc
sub
push
add
xchg
jno
mov
jnp
sub
test
adc
mov
add
cli
xchg
pushf
mov
sar
pop
daa
jp
sbb
jb
inc
fiaddl
xlat
push
shr
sbb
ljmp
enter
jg
push
stos
jae
sbb
mov
imul
fisubrl
push
lahf
dec
orb
mov
add
sbb
es
xlat
je
repnz
mov
out
jb
divb
push
ljmp
mov
inc
fisubs
xchg
sub
xor
pop
push
push
lret
mov
lds
cmp
pop
inc
dec
dec
dec
mov
xor
outsl
push
push
lret
out
or
xor
or
sbbb
sub
xor
fsubrs
adc
or
pushf
ret
sarb
jne
and
sbb
sub
push
popa
push
jecxz
add
cmp
cmpsb
jle
sub
push
push
imul
cli
xor
pop
xchg
cwtl
pop
adc
lcall
jbe
ficompl
flds
fists
xchg
lods
cmc
mov
outsb
rolb
aas
adc
adc
mov
dec
bound
inc
or
adcb
cs
push
or
out
gs
mov
addb
sub
in
ss
xchg
xchg
rolb
clc
jae
nop
faddl
dec
add
cld
adc
jecxz
pop
adc
jo
adc
jp
mov
xchg
fwait
jne
loope
addr16
xor
sub
icebp
sub
ss
pop
fistpll
inc
mov
leave
loop
fldcw
and
out
out
xchg
inc
mov
and
jno
jb
pushw
cmpsb
xor
pushf
int
ds
add
jp
aaa
ret
movsb
pop
pop
cs
mov
bound
mov
dec
popa
call
cmp
pop
sbb
iret
xor
dec
dec
into
sub
rep
and
lods
cli
pop
cmp
stos
test
scas
out
xchg
jno
outsb
mov
jmp
mov
fdivrs
movb
mov
pop
adc
outsl
ja
subl
outsl
in
cmpsl
fwait
ljmp
icebp
inc
lea
lea
cld
cmp
xchg
enter
lds
dec
addr16
out
push
sub
lods
cmp
inc
mov
ljmp
cmp
repnz
in
sub
push
aas
add
addr16
int3
bound
scas
ja
repnz
icebp
int3
inc
jl
pop
repz
xor
pop
jmp
mov
stos
fdivrs
cmpsb
jp
inc
andb
xorb
jmp
jl
outsb
jno
xchg
xchg
call
cmp
lods
adc
jle
sbb
xor
mov
daa
test
mov
xor
loopne
repnz
mov
das
jbe
ljmpw
jno
mov
cmp
cmp
lahf
ret
fwait
aad
ret
jne
dec
leave
xor
and
xchg
mov
out
ret
pop
lret
out
nop
clc
cltd
dec
mov
mov
jle
scas
stc
ljmp
lock
cmp
push
lock
add
pop
mov
stos
stos
bound
aad
std
xchg
repnz
adc
jo
add
test
arpl
icebp
cmp
pop
pop
sbb
les
xor
ss
movsb
test
stos
push
dec
jecxz
andps
xor
into
cmc
popf
push
das
lcall
dec
push
sub
xor
sahf
test
push
pusha
inc
sahf
inc
xchg
xorl
xorl
dec
lcall
test
in
insb
mov
negb
sti
ljmp
test
or
fdivrl
xchg
in
idivb
mov
shrl
add
or
sbb
jno,pt
sub
jmp
cmc
das
in
pop
pop
lods
popa
dec
mov
int3
cmpsl
pop
ret
ret
mov
dec
jmp
jns
bound
je
pop
and
ret
inc
and
lds
lock
push
stos
pusha
push
pop
mov
mov
cmp
mov
add
ret
dec
jo
ds
inc
mov
jne
sbb
rorb
rorb
inc
push
add
pop
clc
ret
jb
push
pop
inc
bound
inc
mov
jmp
loop
mov
mov
aas
lret
daa
insl
jne
cmp
mov
xchg
fidivrl
out
xchg
insb
mov
lret
jl
bound
and
popa
mov
repz
in
sub
and
inc
xchg
addb
insl
int3
test
pop
pop
out
push
push
sub
jae
dec
mov
pop
jecxz
inc
aad
shrb
mov
inc
cs
xchg
imul
adc
insb
xor
fcompl
cmp
dec
xor
mov
mov
sbb
ret
pop
dec
adc
loope
mov
push
popf
dec
pop
and
mov
xchg
imul
stc
mov
jp
and
add
fwait
addl
scas
fs
dec
inc
mov
out
in
repnz
dec
stc
push
pop
pop
and
iret
int
mov
xlat
or
movsb
mov
lcall
or
inc
shlb
das
stc
xor
xchg
mov
add
fdivrp
out
dec
outsl
mov
xchg
dec
mov
ljmp
inc
cmpsl
data16
inc
les
xor
mov
push
cs
pushf
xchg
jnp
movsb
jo
gs
push
ds
stc
jle
pop
loope
and
sahf
imul
push
adc
js
inc
push
insw
stc
out
pop
loopne
aad
inc
mov
scas
jo
xor
jo
movsb
lock
cltd
stos
jne
mov
inc
jns
daa
dec
into
xchg
jnp
sub
add
push
fwait
cmp
cld
cmpsl
inc
mov
xchg
imul
mov
fs
or
out
imul
xlat
in
xchg
jp
and
jns
inc
fmuls
mov
insb
inc
mov
dec
int3
imul
imul
push
or
cld
push
cmp
inc
adc
mov
xor
fneni(8087
xchg
incb
out
std
inc
rcrl
int3
cs
pop
imul
jo
cmp
add
pop
push
push
int
push
ret
mov
ficompl
or
addb
clc
mov
fs
push
call
int
js
push
mov
fsubs
mov
mov
ja
scas
pop
jg
insb
sbb
or
dec
inc
cwtl
fidivrs
movsb
and
xchg
sub
mov
pushf
stos
leave
xchg
mov
outsl
mov
aad
push
sar
out
sbb
xchg
ja
sbb
xchg
adc
sub
mov
push
sahf
pushf
fmull
ret
push
inc
je
xlat
outsl
das
in
sub
cmp
hlt
jo
imul
cmpsl
pcmpgtw
sub
repnz
shl
or
push
cmc
sub
add
out
leave
xor
or
imul
enter
cmp
pop
lahf
gs
mov
and
or
xchg
jle
mov
ja
mov
aas
lds
loop
push
out
or
aas
push
lahf
shufps
adc
cmp
in
out
dec
jno
es
inc
stc
jecxz
pop
sub
scas
cmc
mov
inc
mov
insb
dec
inc
inc
mov
push
cltd
xor
aas
lock
int
lcall
aam
dec
lret
fidivs
addb
inc
dec
rcrb
or
loop
out
repnz
or
popa
lods
subb
mov
push
ficomps
fxch
add
addr16
pop
fcomps
mov
and
gs
xchg
outsl
sbb
sarb
popf
mov
adc
in
or
pop
pop
xchg
inc
rolb
push
call
popf
cmc
pop
movsl
xchg
dec
cs
jno
dec
or
ffree
movsb
inc
ja
or
fdivr
jo
cltd
mov
pop
xor
addl
pop
lea
loopne
push
test
push
loopne
jne
inc
adc
icebp
and
xchg
xchg
xlat
das
xor
jns
movsb
push
outsl
add
insb
cmp
pop
mov
fsubp
mov
sub
or
test
fwait
pop
out
shll
add
xor
mov
sti
cli
addb
lds
in
mov
and
lret
bound
mov
das
clc
jle
bound
out
sub
sbb
sbb
ret
and
mov
mov
inc
mov
inc
insl
call
jg
rclb
inc
xchg
movsl
push
sub
mov
pop
insl
ljmp
add
adc
out
pushf
cmpsl
pop
inc
insl
fwait
pop
sub
and
int3
pop
fstpl
cltd
push
lock
mov
lods
adc
sub
inc
aad
or
xorb
fs
adc
dec
ljmp
out
mov
addl
loop
fiaddl
daa
push
imul
jl
pop
push
cmp
jns
fucom
adc
in
push
jle
push
lock
test
cmp
pop
mov
ret
jns
add
xor
lods
ljmp
xor
add
add
cmp
in
dec
or
add
cmp
sahf
mov
sbb
xchg
nop
jo
push
mov
cwtl
cli
mov
scas
cs
lcall
scas
fwait
and
mov
mov
jo
ljmp
mov
negl
std
adc
popf
lds
push
jno
add
sbbb
jnp
sub
mov
xor
mov
arpl
and
cmp
loopne
fstpl
cmp
and
rorl
or
fdivrl
sbb
cwtl
in
mov
mov
dec
jecxz
and
or
sbb
rorl
push
movsb
xor
int
test
arpl
sub
inc
mov
push
test
lods
xorb
jl
pop
sti
fnsave
test
xor
jmp
js
or
pusha
fidivl
enter
outsl
pop
push
sbb
push
pop
fdivs
push
push
xchg
jo
cmp
aaa
sub
test
fcomps
sbb
cld
pop
test
sub
push
pop
aad
aad
mov
imul
out
and
rol
mov
adc
jecxz
fcompl
mov
dec
rcrl
jge
loopne
shll
push
in
movsb
lahf
into
stc
inc
fidivs
movsl
in
mov
cld
and
nopl
gs
push
lret
mov
and
mov
xchg
jb
xchg
mov
dec
or
sbb
mov
mov
and
dec
stos
adc
adc
mov
or
out
clc
insb
push
fs
loopne
xchg
imul
add
gs
andb
and
push
jae
xchg
in
pushf
stos
bound
dec
cwtl
repz
push
les
lds
andb
jne
cmc
xchg
imul
stc
xchg
iret
test
in
es
es
jl
push
lcall
bound
pusha
test
and
fimuls
arpl
pusha
pop
mov
mov
pop
imull
mov
add
ss
es
mov
pop
jbe
stc
pop
mov
cmpl
pop
mov
repz
mov
xor
jmp
cmp
xor
loop
xlat
and
iret
cmp
loope
mov
popf
inc
mov
sub
pop
inc
dec
pushl
push
adc
xor
or
push
in
das
xorb
jae
aad
sub
test
ror
cmpb
stc
xchg
jp
pusha
call
filds
sub
and
subb
int3
xchg
rcrl
sub
pop
mov
outsb
lods
mov
xchg
and
xchg
adc
repz
xchg
rolb
push
sarl
and
aas
aam
arpl
jo
mov
pop
gs
addl
dec
sub
cmpsb
cmc
test
push
or
cmc
repz
sub
dec
pop
gs
out
in
outsl
test
jl
dec
fs
shl
add
jbe
dec
pop
dec
push
xchg
add
nop
ss
stos
mov
add
aam
cmp
inc
push
pop
inc
xchg
js
cmp
ja
and
or
sbb
daa
jae
insl
mov
cmp
inc
shlb
insb
push
or
inc
pop
loop
js
stc
mov
icebp
repz
nop
mov
cmpsl
inc
loop
aam
inc
or
loopne
lds
pushf
ret
cwtl
aam
shrl
pop
dec
sub
stos
xchg
bsf
pop
sarl
call
dec
mov
mov
les
pop
mov
js
mov
jb
lea
hlt
loop
sahf
pop
aam
fildll
popa
lds
sub
mov
in
lcall
mov
push
cmp
loopne
ja
sar
fsts
mov
test
inc
mov
sub
inc
imul
inc
jge
inc
push
dec
sbbb
aam
mov
fldcw
cmpsb
ljmp
mov
inc
mov
mov
push
aaa
adc
dec
adc
fidivs
xchg
and
add
pushf
rclb
inc
mov
pop
dec
lock
mov
cwtl
sbb
lock
adcb
sub
call
mov
jb
fmuls
arpl
add
outsb
popa
daa
pop
in
sti
pop
das
sub
adc
and
int3
popa
cmp
sub
ror
fstl
test
mov
add
iret
inc
inc
sub
pushf
call
inc
dec
pop
hlt
sbb
ljmp
lret
jp
sahf
sub
mov
push
fcmovu
scas
icebp
fildll
fidivrl
jns
in
sub
ja
pop
pop
push
mov
cmp
jmp
enter
inc
cmp
lock
inc
mov
push
aam
fisubrl
cltd
inc
mov
cltd
pop
or
mov
mov
inc
add
push
ret
sub
cmpsl
mov
xchg
xchg
ss
mov
jnp
rorl
push
repnz
or
inc
dec
mov
mov
xor
dec
insl
or
mov
das
popf
add
out
and
or
or
push
enter
pop
adc
adc
xchg
scas
pop
pop
cmp
das
mov
in
add
sahf
xchg
out
xor
int
mov
js
cmp
cli
sbb
rolb
mov
add
adc
fmuls
xchg
lret
jb
jl
incl
ja
xchg
inc
ret
inc
lds
pop
pop
xchg
dec
insb
cwtl
cmp
popf
jo
testb
pop
or
xor
sbb
rorb
icebp
or
mov
mov
sbb
aad
les
outsb
dec
and
adc
out
jo
shr
or
mov
ss
rcll
inc
mulps
mov
cld
add
xorb
lock
pop
or
sbb
decb
jle
jmp
stos
rcrb
xchg
add
bound
jg
sub
cld
fwait
mov
imul
xchg
or
add
out
sbb
mov
inc
cmp
sbb
mov
sub
push
ds
fs
mov
pop
dec
and
fdivp
es
adc
jle
mov
and
std
movsl
pop
lock
fmulp
fs
shl
inc
sub
ficoms
mov
ficoms
imul
pop
xor
xchg
jbe
or
push
push
lds
rcl
scas
push
sub
imul
iret
nop
jle
jg
das
xor
lods
cmc
xchg
xchg
icebp
enter
lahf
not
cmpsl
out
push
and
es
pop
rcrb
jecxz
data16
inc
pusha
outsb
sarl
and
add
stos
push
jecxz
sub
push
dec
and
es
ds
ret
mov
push
dec
inc
stos
lods
repz
int
lahf
ss
and
and
jb
les
or
ljmp
clc
xchg
imulb
imul
daa
jge
push
sbb
xchg
sub
mov
adc
pushl
xchg
adc
inc
aas
lret
inc
push
in
push
mov
mov
imul
push
out
cmpsb
lea
out
loope
fs
mov
cli
cmpsl
sbb
inc
xor
and
pop
dec
loope
sar
xchg
inc
idivb
aam
add
mov
inc
and
pop
cmp
into
xor
lahf
aaa
push
ror
fadds
push
sbb
pop
mov
icebp
lcall
jbe
ficompl
outsl
repz
jmp
sbb
xor
pop
rclb
mov
push
sbb
push
test
je
leave
cli
push
fcmovbe
lcall
push
lahf
mov
cmc
jg
jnp
arpl
push
xor
sbb
mov
jns
in
cmp
sub
pop
jno
in
dec
fwait
out
pop
fbld
cmpsl
repnz
xchg
outsb
cmc
push
outsl
ljmp
notl
sbb
outsb
in
push
inc
out
divb
mov
insl
xchg
mov
sbb
rol
shl
cld
mov
shll
out
mov
add
popf
idivb
sbb
dec
xchg
and
add
jne,pn
cmp
lcall
mov
aad
pop
stc
inc
dec
push
insb
mov
mov
pop
fbld
pusha
jl
int3
jae
and
js
sbb
xor
mov
popa
ds
sbb
pushf
jae
out
insl
mulb
push
gs
int
xchg
movsw
mov
dec
imul
mov
cmpsb
xchg
mov
dec
mov
inc
lods
adc
xlat
imul
pop
sti
jg
pop
je
es
lret
jge
loope
pop
ja
pop
mov
fisubrs
adc
xchg
fistl
iret
pop
aas
dec
mov
jmp
arpl
mov
in
sub
push
or
lock
mov
aas
ret
lret
cmp
push
xor
js
push
cmc
adc
lcall
and
sub
mov
pusha
in
fisubrs
ja
cmp
inc
and
out
loopne
in
pop
fs
xchg
sbb
lock
push
and
out
xchg
or
mov
pop
nop
fbstp
adc
cmc
sub
jo
in
cmpsb
addr16
adcb
jecxz
mov
cmpsl
add
jecxz
pop
mov
or
fwait
jns
push
jnp
cmpb
lcall
movsl
clc
repz
jecxz
inc
imul
sti
mov
arpl
movsl
mov
jnp
test
test
xchg
lcall
push
push
inc
add
jg
test
adc
cmp
add
cwtl
inc
in
scas
sub
insl
scas
je
mov
negb
aaa
inc
leave
mov
inc
js
inc
dec
test
out
add
and
gs
sub
add
sbb
push
arpl
add
test
in
vcvtss2sd
pop
outsb
cltd
fnstsw
ja
outsb
sub
testl
xchg
pushf
and
fwait
adc
xor
mov
sbb
jmp
lods
aad
sub
mov
xor
jl
xor
and
or
insb
lods
jmp
test
or
test
mov
dec
ss
dec
fnstcw
push
mov
in
sub
pop
mov
imul
jg
icebp
mov
shl
pop
sub
std
aaa
fwait
sarb
or
sbb
inc
repz
push
push
sub
popf
test
inc
jb
pop
xlat
xchg
mov
stos
aam
in
movsb
xor
pop
push
iret
ret
cmp
inc
loope
push
add
daa
fcom
push
xchg
add
rcr
mov
addb
insl
and
js
sbb
fnsave
xor
xor
pusha
mov
test
mov
iret
aaa
popf
sbbl
mov
mov
mov
cltd
cmp
mov
mov
jp
xchg
pop
xchg
xlat
push
dec
inc
clc
lods
scas
dec
in
jl
in
sbbb
mov
lret
flds
mov
jne
mov
das
loopne
out
clc
sub
shrb
xor
shrl
shrl
cmc
cs
enter
dec
ljmp
or
movsl
add
les
test
lods
shlb
fsubl
fcoml
add
cltd
cmp
adc
test
and
or
xor
mov
xor
nop
adc
xchg
xchg
sub
add
in
popa
and
pop
or
inc
mov
int3
test
jl
cmc
mov
sbb
popa
roll
insl
add
push
nop
mov
sbb
movsb
jmp
pushf
and
movl
nop
xor
in
mov
sbb
inc
pop
dec
mov
and
push
mov
cmp
dec
fdivrp
sbb
aam
std
dec
daa
nop
mov
dec
insl
mov
adc
jmp
pop
cmp
add
cmpsl
sub
xor
xchg
mov
stos
add
xchg
sbb
push
icebp
fisubl
mov
fstp
sub
xchg
call
mov
in
fadds
cld
jge
bound
cmp
add
and
sbb
adc
push
inc
pop
loope
sub
out
push
outsl
xchg
cmp
cmp
call
pop
adc
sbb
dec
xchg
dec
pop
push
sub
add
push
mov
je
std
push
push
sub
sbb
dec
sbb
pop
pop
cmp
cmp
jnp
cmc
cmc
inc
int
cmc
call
adc
aad
mov
mov
movsb
div
or
inc
push
mov
aam
aas
out
pop
outsl
decl
and
int3
adc
pushf
xchg
mov
inc
in
cmpl
cmp
js
bswap
lock
jl
mull
mov
sbb
rcrb
outsl
hlt
int
je
clc
test
sub
aaa
or
pop
movsl
js
test
sub
cld
add
mov
out
sysenter
jg
test
cld
sub
push
in
cld
mov
xchg
xor
lds
push
int3
fucomp
rol
mov
sti
das
ljmp
insb
lea
sahf
cmp
mov
bound
push
xor
jecxz
test
jl
psraw
push
push
jae
sarl
jb
test
dec
jge
inc
ss
push
aas
stos
mov
aaa
push
rcrb
pop
pop
push
scas
cmp
movsl
test
aam
mov
push
push
dec
xchg
ss
xchg
push
cmp
push
cmp
aad
and
jecxz
je
popf
int3
and
sbb
test
cmp
sbb
dec
mov
in
movsl
push
jb
lahf
idivl
cmp
mov
dec
mov
mov
rsm
adc
mov
mov
xor
iret
ja
add
mov
out
cmovbe
jnp
sub
xor
stos
jmp
jb
into
cmp
xor
inc
imul
mov
mov
out
sub
mov
sbb
xchg
inc
pop
mov
push
repnz
add
data16
fisubs
mov
dec
stc
cmp
ss
je
repz
pop
push
push
cmpsb
decb
pop
icebp
mov
cwtl
mov
jns
pop
mov
fldenv
add
shlb
testb
and
jge
in
leave
jle
push
mov
lea
and
xor
xlat
dec
mov
xor
fstl
out
and
nop
lahf
gs
insl
xor
jmp
dec
mov
mov
daa
inc
js
inc
adc
mov
outsb
mov
fucomip
jae
dec
stc
ret
movsl
adc
out
in
mov
ret
test
xor
ret
cmp
push
roll
fldcw
inc
inc
xchg
push
aaa
scas
fsubrs
add
sub
push
js
xlat
lods
popf
pop
mov
push
dec
in
test
adc
sub
cmpsb
mov
decb
sub
lock
gs
mov
fnstcw
jp
repnz
filds
aam
jmp
aam
addl
mov
mov
mov
test
and
xor
popa
cmpsl
pop
jg
clc
fcoms
mov
push
dec
rsm
jns
jg
xor
dec
dec
dec
rcrb
sarb
or
rolb
adc
pop
aas
test
mov
dec
cmpsb
cmp
mov
mov
shlb
mov
imul
test
ficomps
adcb
mov
pop
or
add
pop
int
sahf
jno
clc
ljmp
inc
mov
insl
lds
push
fdivr
mov
aaa
ss
in
mov
sbb
push
pop
lcall
outsl
dec
data16
rcll
ljmp
and
pushf
jge
out
and
mov
lods
dec
adc
in
aas
sub
jne
cltd
test
notb
dec
mov
std
xor
mov
incl
and
push
jbe
adc
mov
inc
clc
or
je
adc
push
test
add
mov
imul
or
mov
sbb
loop
xor
lods
inc
shl
into
mov
stos
scas
fistpl
lods
pop
jp
xchg
sub
cmp
mov
lods
rcll
mov
mov
sub
or
adc
aam
std
and
cli
jmp
call
xchg
out
outsb
in
bts
sub
mov
adc
push
xor
inc
lcall
pop
mov
rcr
and
xor
data16
into
fdivl
and
xor
fisubrs
push
and
mov
inc
cmp
sub
push
or
je
mov
test
cs
sbb
ljmp
movsl
mov
push
jae
ret
push
popf
add
mov
fdivs
jnp
enter
lahf
xchg
jo
gs
shll
int3
stc
nop
adc
loope
aaa
inc
inc
pushf
into
sub
lea
xchg
cltd
stos
cmc
jmp
adc
popa
fstl
scas
dec
jo
jge
cmp
lea
outsl
out
test
mov
adc
push
xlat
push
cli
mov
out
xchg
ljmp
cmp
adc
mov
sub
inc
aaa
or
dec
inc
movsb
loop
call
and
aam
xchg
sub
fcompl
aaa
jecxz
arpl
inc
lcall
cwtl
mov
into
push
inc
xor
daa
sbb
les
push
insl
repz
sbb
sbb
xlat
and
pusha
or
dec
test
fnstcw
and
aam
mov
aaa
inc
fcoml
jp
aaa
popa
pop
or
push
jnp
lret
sarl
pop
dec
ljmp
enter
add
push
xor
iret
adc
sahf
loop
and
jno
lea
pop
pushl
popa
nop
bound
mov
mov
cmpsl
adc
pop
dec
mov
outsl
jne
sarl
push
push
sbb
mov
rorl
mov
sarl
loope
push
jo
cli
sub
push
jl
insb
jg
mov
or
and
or
or
popa
call
pop
push
xor
mov
mov
dec
dec
leave
leave
pop
dec
cli
mov
adc
sbb
test
push
cmp
dec
fdivrs
hlt
cmp
push
imul
rclb
fwait
push
pop
out
xor
loopne
imul
and
xor
push
aaa
xor
or
inc
imull
andb
inc
jae
xchg
ret
outsb
loop
xor
xchg
mov
mov
gs
jecxz
sbb
mov
push
out
and
ret
fisubrl
je
push
and
int
nop
pop
sub
addr16
addr16
scas
mov
cmp
dec
cmp
in
lret
mov
mov
repnz
ror
dec
loope
push
mov
pop
into
out
mov
lock
pusha
inc
ret
push
sub
cmp
jle
dec
adc
push
mov
xchg
push
push
lock
jae
push
pop
xchg
lgs
push
lea
cli
xor
xor
cmpl
sub
int3
inc
sub
loop
sub
test
cld
jno
jmp
arpl
inc
bound
push
orl
mov
inc
out
pop
insb
jae
lock
lret
xchg
je
inc
mov
mov
pop
add
es
jo
in
xor
push
test
sub
mov
fnstcw
incb
jno
cmp
and
addr16
xchg
scas
mov
push
add
fs
jl
jno
cmp
jbe
mov
sbb
or
popf
test
mov
fsubrp
and
jns
pop
fisubrs
out
push
sub
dec
movsb
add
fwait
nop
leave
jmp
and
insl
jo
jle
sbbl
fisubrl
sbb
out
mov
xchg
cmp
and
xchg
sub
push
dec
mov
dec
mov
aas
out
icebp
and
pop
bound
test
cmp
pop
mov
adc
arpl
negb
hlt
test
test
cmpsl
bound
lea
test
sbb
std
jno
lret
or
fwait
popaw
loope
adc
sub
mov
dec
mov
lods
and
mov
out
ja
pop
int
pop
int3
ficomps
das
icebp
fidivs
lock
jae
sbb
sbb
insb
xchg
jb
insb
mov
roll
xor
sbb
xor
movsl
negl
pushf
stos
push
insl
shll
flds
cmp
pop
xchg
add
jae
enter
fiadds
stos
cltd
test
out
mov
les
lcall
lds
fucom
push
push
push
test
cli
mov
icebp
xchg
insl
mov
les
xlat
test
ret
fstl
gs
push
jns
es
mov
and
and
mov
ds
lea
inc
ss
cmp
insb
mov
pusha
fildll
and
mov
dec
jb
repnz
mov
jge
fnsave
mov
sub
and
jb
jnp
ud2
shl
and
sbb
shll
pop
and
dec
jl
fisubrs
push
cwtl
hlt
je
leave
std
xchg
mov
lcall
or
jp
out
push
sbb
movsl
mov
push
daa
sbb
or
mov
sbb
in
dec
sbb
cltd
and
xchg
add
addr16
andl
sbb
icebp
or
sbb
jnp
jmp
or
pop
jae
lods
sub
and
xlat
bound
jne
add
or
imul
cmp
fbld
popa
push
dec
cmpl
adc
jne
enter
movsb
pop
adc
cmp
push
stos
push
pop
xchg
xor
xchg
pop
dec
pop
decb
add
lea
mov
adc
mov
sub
dec
shl
inc
pop
das
mov
inc
inc
cli
jg
adc
add
add
and
adc
lret
push
hlt
xor
mov
jl
xor
jae
mov
xchg
xor
adc
imul
pop
jno
cmp
mov
mov
cmpsl
insl
inc
aad
mov
sub
popa
lock
adc
push
xchg
lahf
mov
stos
clc
pop
test
insl
mov
mov
sub
sub
scas
lret
push
mov
adc
xlat
out
jnp
or
mov
cmp
dec
adc
inc
scas
ss
repz
cmpsb
dec
sub
notb
mov
cmpsb
cmpsl
dec
aaa
push
sbb
lods
mov
mov
outsl
dec
cwtl
call
cmp
mov
enter
test
pushf
scas
int3
es
cmp
mov
iret
mov
popl
cmp
or
push
mov
push
aad
daa
xor
jb
jo
test
inc
or
and
ljmp
std
rcr
cmp
jbe
and
adc
sub
pusha
pop
outsl
pusha
notb
outsb
mov
jnp
adc
lds
mov
add
inc
and
cmp
mulb
or
movsl
divl
leave
adcl
scas
outsl
mov
or
mov
cmp
les
adc
pushf
mov
mov
sbb
pusha
pop
fidivs
sarl
push
xchg
dec
pop
cmp
mov
jb
std
inc
dec
rorl
fidivrl
sub
mov
or
and
fdivl
dec
lret
or
pop
dec
mov
mov
xchg
fisubs
pusha
mov
mov
ljmp
xchg
mov
inc
les
or
cmpsb
pop
mov
cmp
xchg
mov
xorl
fstp
push
sbb
jle
pop
fs
cmp
jp
and
ror
sbb
cmp
cwtl
add
mov
mov
test
inc
pop
xor
jg
or
or
ss
neg
xor
ret
adc
sub
mov
sahf
cmp
xlat
sub
ret
sbb
push
xchg
xor
sbb
xor
hlt
lock
ret
je
insb
rcrb
in
cwtl
jle
cmc
jae
adc
mov
and
mov
cmp
dec
ljmp
pop
lods
daa
xchg
xor
push
xchg
sti
stos
out
hlt
jns
xchg
push
sti
js
in
test
popl
jecxz
add
inc
dec
inc
cmp
mov
jne
dec
mulb
repnz
out
or
inc
or
scas
jmp
das
pushf
inc
movsb
fnstcw
loopne
cmp
cld
and
sar
ficoml
dec
std
jbe
mov
imul
xchg
jge
jnp
lds
mov
lcall
jae
pusha
out
pop
push
sub
mov
inc
xlat
lods
or
scas
mov
mov
or
jb
jle
call
bnd
dec
mov
xlat
push
mov
shlb
mov
and
push
lods
xchg
or
jno
add
push
sbb
lret
adc
loop
jmp
push
mov
adc
cltd
popf
mov
stos
jecxz
hlt
mov
pusha
nop
fucomp
jnp
popa
cmp
addr16
stos
lods
ret
adc
dec
mov
jae
push
jo
mov
sbb
cmpsb
pushf
mov
loopne
sbb
nop
dec
dec
int
mov
rcr
repz
push
adc
test
ja
mov
xlat
int3
push
and
and
or
adc
test
cmpsb
inc
sub
daa
test
mov
sbb
pop
push
loop
push
mov
pusha
xchg
insb
aam
in
adc
hlt
mov
nop
inc
cmpsl
pushf
incb
push
call
test
adc
jmp
cmp
cmp
mov
pop
rorb
gs
mov
or
pushf
int
lcall
fmuls
mull
mov
inc
sbb
movl
out
mov
daa
les
pop
xchg
or
xchg
sub
sub
test
push
or
cld
stos
hlt
jmp
jge
int3
outsl
lea
mov
icebp
sub
dec
xor
mov
dec
xchg
sbb
subb
push
pushf
jno
pop
and
dec
mov
xchg
repz
xor
adc
sub
cmp
ret
push
jge
inc
jl
xlat
imul
jns
adc
cli
je
lods
push
push
jne
lret
int
xor
lret
mov
jnp
pushf
or
cmp
or
sahf
or
shr
imul
mov
pop
and
jge
dec
lods
inc
lea
iret
inc
push
in
cmp
sub
fs
sbb
jecxz
lret
fstp
sbb
popf
fisubs
testl
sbb
sub
xchg
dec
lahf
jo
sbb
xor
mov
xchg
in
out
enter
and
out
mov
movsb
sbb
dec
lods
imul
lret
in
fldlg2
mov
dec
cmp
xor
es
test
mov
fdivr
js
ljmp
lods
popa
cmp
and
sub
subb
cmpsb
xchg
pop
sub
mov
imul
sub
cmp
add
ret
sbb
fs
cltd
lret
lcall
sub
addr16
in
jp
mov
idivb
push
add
sub
leave
jno
adc
pop
push
in
cmpsb
cwtl
movsl
incb
or
pop
je
mov
fists
push
mov
push
pushf
scas
mov
pop
xorl
pop
adc
leave
lods
jne
dec
mov
xchg
mov
adc
int3
repz
and
push
jnp
mov
enter
dec
hlt
inc
sahf
adc
or
aaa
mov
mov
jno
push
ljmp
fwait
clc
xor
mov
movsl
push
xchg
shrb
jno
in
data16
pushf
call
lret
push
add
pop
push
inc
or
je
jecxz
sub
sbb
dec
push
pop
dec
fnstcw
push
jmp
sbb
inc
pop
xorl
iret
fnstcw
frstor
xchg
hlt
jmp
mov
pop
jo
mov
ret
or
pop
into
and
xor
pop
cmp
cmp
xor
dec
sti
xor
cmc
test
mov
out
lret
sub
pop
push
inc
daa
sti
or
mov
jo
adc
aaa
loope
aad
xchg
clc
lods
sti
or
dec
lods
sbb
repnz
xlat
pop
inc
pop
cmpsb
pop
lahf
fwait
stc
cwtl
pusha
lcall
jmp
testl
jnp
cmc
cmpsl
fcmovnbe
xchg
aas
mov
pop
gs
push
aas
add
subb
out
cmp
or
mov
cmp
dec
mov
sub
enter
inc
shll
xchg
add
push
mov
aaa
aas
sub
mov
mov
pop
orb
rcrb
outsb
dec
das
adc
sub
in
or
mov
test
xchg
xor
cld
and
xor
adc
cmc
out
sahf
jnp
aad
and
in
pop
xor
lods
addl
pop
out
lahf
fs
push
stos
mov
nop
mov
jnp
push
dec
repnz
adc
fnstsw
inc
sbb
mov
mov
sub
push
les
repz
xor
lret
xor
mov
sub
jle
leave
clc
mov
lahf
push
jae
jge
lods
mov
mov
adc
add
movsl
xchg
into
scas
push
jne
rcrb
mov
jg
sub
aas
cmc
sti
xchg
ljmp
lea
jb
xchg
loope
add
fnstsw
jmp
pop
dec
mov
addr16
sti
out
pop
ds
scas
push
lods
pop
or
jne
add
dec
insb
lods
push
dec
mov
sbb
cmp
lods
aam
rorb
fisttpl
clc
fwait
push
data16
mov
add
xchg
inc
sub
or
mov
xor
mov
and
lret
add
pop
jecxz
test
inc
popa
and
xor
subl
push
psubsw
or
shl
push
mov
xor
pop
cmp
in
aas
int
xchg
loopne
jno
jne
adc
js
jb
inc
mov
or
fisubs
mov
pushf
stos
sbb
jbe
fsubrs
fidivl
sub
adc
ja
fadd
das
sub
add
cli
or
push
sub
mov
insl
add
fnstsw
fbld
into
fwait
lds
test
or
popa
lea
adc
cld
cmpsl
inc
je
cmpsl
push
int3
int3
lret
pop
cltd
dec
dec
fwait
adc
dec
lret
ds
mov
stc
mov
aad
mov
xchg
fsubl
xchg
cmpl
dec
add
or
cmp
mov
rcr
ljmp
pop
jae
stc
ret
jle
scas
sbb
repz
adc
ret
in
xor
ret
clc
sub
es
sub
xor
stos
es
add
lahf
movsb
lea
cmp
lods
inc
mov
repnz
jmp
pop
add
iret
xor
iret
jne
mov
aas
dec
dec
or
out
test
mov
or
xchg
and
adc
lret
repz
push
ja
and
adc
sub
jge
fcmovnu
das
adc
lcall
push
cld
sub
xchg
push
jp
adc
in
lods
adc
inc
lds
into
fcomip
sbb
mov
sub
and
xor
push
shr
test
int
mov
xchg
xchg
ret
jmp
sahf
push
or
pop
bound
jp
ret
inc
jo
push
and
pop
adc
out
hlt
aad
inc
les
xchg
mov
inc
jne
test
popa
cwtl
jmp
mov
cmp
dec
rcr
push
int3
test
mov
mov
add
cli
or
dec
movsb
mov
mov
push
xchg
cmp
shll
aas
push
and
cli
outsl
push
fbstp
add
mov
sbb
push
fcmove
in
stos
mov
or
cmc
push
test
pop
dec
inc
adc
out
mov
pop
jno,pn
jb
mov
ljmp
mov
outsb
es
xchg
jg
les
fbstp
lds
lret
jg
icebp
push
fcmovb
cmp
jp
aad
jae
setnp
orb
jo
fnstsw
daa
movsl
ficoms
dec
jnp
adc
jnp
out
jmp
adc
pop
cltd
lods
pop
mov
jge
mov
add
sbb
fsubrs
xorl
sub
pop
xchg
scas
pop
adc
outsb
adc
and
xor
adc
arpl
add
sarl
pusha
in
out
movsl
sti
cltd
xlat
pusha
mov
jnp
and
push
push
dec
cld
jne
pop
sub
mov
fsubrs
xchg
dec
test
jb
out
ss
cli
or
pusha
xor
add
lock
dec
das
fcomi
not
into
inc
ret
xor
pop
lods
inc
push
jge
jne
shlb
cmpsb
leave
xchg
mov
cmp
xor
pop
xorl
cli
sbb
gs
jecxz
mov
cs
or
mov
pop
mov
mov
stos
pop
mov
xchg
dec
das
adc
shr
push
jnp
or
fiaddl
fdivrs
ss
out
int
sbb
neg
cmp
fisubs
sbb
jg
jmp
dec
push
decb
mov
call
sbb
fistl
inc
gs
popa
sbb
inc
adc
loop
fcomip
mov
ljmp
mov
addl
iret
push
push
fcmove
fucom
fstps
adc
gs
out
mov
mov
sti
arpl
inc
pop
scas
orl
insb
or
test
or
push
sbb
cmp
shll
cmpsb
bound
test
mov
jecxz
mov
mov
fnstenv
jmp
inc
sbb
insl
pusha
sub
lea
sbb
dec
mov
or
inc
inc
mov
test
in
in
hlt
pop
ljmp
ljmp
xor
gs
out
pop
dec
xchg
cmp
sub
cli
push
pop
and
push
push
jecxz
push
push
stos
rorl
mov
scas
add
fdivs
addr16
imull
push
aas
cld
jns
cmp
jp
cld
into
cltd
outsb
fwait
jbe
push
iret
jg
pusha
sbb
rcrb
add
xchg
add
mov
sbb
das
add
scas
in
sahf
into
mov
mov
adc
shrl
pop
jg
ficompl
rorl
mov
fistl
into
push
ret
out
sub
fiadds
sbb
sub
int3
cmpsl
jo
ficoml
and
in
cmpsb
xor
mov
mov
inc
mov
iret
jl
sbb
push
or
xor
in
mov
pop
popf
sbb
sbb
subb
sub
pop
ficoms
stos
addr16
lock
xchg
jge
add
popa
or
cmpsb
sub
lods
iret
mov
lods
mov
dec
xchg
movsb
testl
push
xchg
pop
cli
cs
mov
pop
cltd
push
mov
inc
sbb
fst
daa
push
add
jno
loope
sbb
js
loope
push
mov
lods
xor
jp
cmp
repnz
movsl
sub
repnz
push
testb
push
or
fs
xchg
xchg
sbb
js
add
in
out
cli
xchg
andb
sub
mov
out
xor
arpl
outsl
aam
dec
inc
cwtl
popf
shlb
sub
push
lret
cld
or
adc
sti
cmp
fst
add
out
add
mov
aam
xor
push
fstl
call
les
incb
adc
mull
xor
repnz
mov
inc
xor
mov
lcall
and
shll
add
movsl
mov
mov
dec
mov
ja
inc
add
cmpsb
shlb
sub
add
push
xchg
mov
scas
gs
push
jns
push
jg
orb
lea
repz
pop
inc
add
jle
adc
es
loope
imul
js
ja
xor
fsubs
add
mov
stos
push
mov
cmp
gs
loope
sbb
stc
lods
jnp
lock
lcall
icebp
pop
xor
ljmp
mov
repz
outsl
pop
dec
pushf
insb
xorb
dec
push
xchg
xlat
in
inc
pop
sub
cmp
popf
mov
gs
mov
data16
sbb
push
mov
aas
pop
pop
add
mov
adc
js
xor
ret
add
sti
jne
fsubl
lcall
xchg
dec
jmp
inc
push
outsb
movb
fistps
jno
jb
fsubrs
and
pusha
imul
subw
sub
out
sbb
mov
je
pop
lahf
inc
paddusw
ret
or
je
xchg
inc
jae
adc
jae
inc
int3
dec
addr16
mov
push
push
lret
les
xchg
xlat
jb
jo
cld
push
in
xor
sbb
push
push
fldenv
test
push
movl
sub
adc
xchg
dec
stc
cltd
js,pn
cltd
add
cmp
xchg
adc
sub
jno
dec
andb
iret
jmpw
lahf
inc
pushf
mul
insl
cmp
aad
xchg
mov
into
add
outsb
daa
bound
les
mov
mov
inc
xchg
popa
add
ja,pt
xchg
cli
stos
mov
pusha
leave
divb
or
cmp
sub
or
xchg
fcoms
ret
stc
fcomps
or
inc
cld
test
mov
test
xchg
pop
scas
repnz
scas
fs
movsl
mov
test
mov
or
in
pop
mov
push
pop
inc
sbb
pop
aas
mov
mov
movsl
movq
cmp
add
testl
push
in
icebp
outsb
fadds
aad
enter
dec
cwtl
sbb
xor
add
jecxz
lret
pop
mov
xor
int3
xor
out
sbb
scas
rcrb
push
rcrb
jbe
push
cmpsl
fstps
jg
push
jbe
shll
imul
add
mov
dec
push
les
jge
xor
push
das
and
sti
jbe,pn
out
xchg
icebp
imul
fidivl
repz
adc
mov
push
data16
aam
cmp
and
out
push
mov
pop
loopne
cs
push
and
mov
subb
xchg
inc
add
inc
lret
push
jle
popa
mov
xchg
or
bound
mov
mov
scas
enter
mov
sahf
cli
mov
sarl
cmp
repnz
fmulp
ljmp
push
jp
mov
sbb
mov
inc
ljmp
int3
xchg
fiaddl
mov
insl
and
xor
sub
mov
negb
xchg
mov
rcll
popf
inc
adc
mov
sti
cmp
mov
ds
bound
jo
fisubl
fadd
pop
sti
mov
jecxz
pop
adc
call
out
mov
inc
ss
mov
lods
andb
les
pop
out
sbb
adc
xchg
jl
cs
sbb
jns
ja
jns
or
sub
js
hlt
xchg
loopne
mov
ljmp
cmp
stos
mov
pop
ret
icebp
inc
push
mov
xchg
jp
push
cld
loop
xchg
pop
pop
cltd
sahf
and
ss
int3
cmp
imul
push
sub
addl
popf
loope
xor
xchg
jp
inc
sub
cmc
sti
pop
mov
hlt
and
movd
xchg
jmp
orb
mov
sub
jle
xchg
movsl
push
push
outsb
cld
sub
xor
test
cmp
adc
xor
cmp
pop
and
lods
scas
scas
std
lahf
pop
mov
push
mov
ds
push
pop
xchg
xchg
and
push
outsb
mov
mov
jp
inc
mov
leave
dec
loopne
inc
bound
cmp
jmp
rcrl
and
pop
adc
in
or
fwait
imul
inc
loopne
cs
dec
pop
or
inc
adc
push
lds
inc
testb
sarb
shl
jne
jge
push
cmp
notb
mov
arpl
mov
daa
dec
leave
add
loop
es
push
inc
xchg
cmp
aam
stos
mulb
sub
sub
mov
lahf
sbbl
fldenv
lods
inc
dec
insb
push
push
xchg
jo
dec
add
sub
mov
or
cmp
imul
sbb
bnd
or
cli
lret
imul
inc
ds
rol
and
test
stc
cltd
sub
cli
cld
cmp
xor
xchg
adc
stos
xchg
bound
jmp
or
fsubrl
fadd
xchg
jecxz
add
cmc
ljmp
aam
jae
jmp
mov
xchg
or
add
xor
mov
outsl
aad
adc
jne
pushf
or
jb
aad
inc
add
adc
lcall
mov
adc
cmp
shr
lods
push
push
loop
jmp
outsb
push
hlt
fpatan
gs
repnz
sbb
push
lods
call
adc
mov
sbb
into
pop
push
jecxz
lahf
mov
xor
aad
mov
adc
in
stc
xchg
dec
inc
les
fs
movsl
mov
mov
hlt
out
jb
ret
push
stos
into
test
nop
mov
push
lods
xor
aas
sti
inc
xlat
sub
aad
xor
out
xchg
fnstenv
push
imul
in
orb
and
mov
cltd
push
loopne
push
pop
das
mov
imul
sahf
mov
pandn
call
xchg
popf
addl
xchg
push
xchg
mov
xor
and
imul
pop
jno
imul
sti
xchg
es
test
xorl
and
jne
sbb
faddl
and
adc
repz
xchg
or
pop
repnz
pop
push
cwtl
mov
mov
jae
mov
push
xor
jbe
or
out
or
jmp
movsb
sbb
jg
push
cltd
jmp
pop
fs
jg
add
insb
fistps
inc
mov
fnstsw
into
push
test
iret
roll
or
sbb
arpl
dec
cmp
add
pusha
pop
cmp
scas
mov
pop
pop
aaa
dec
mov
jge
mov
test
aad
aaa
push
or
icebp
mov
pop
aas
pushf
jp
popa
movl
sbb
dec
lods
stos
jbe
xchg
es
dec
addr16
inc
xchg
inc
test
mov
cmp
mov
add
push
ret
jns
iret
orl
jg
cltd
loopne
adc
sub
in
lock
shll
fdivs
add
movsb
or
pop
orb
popf
xor
or
mov
xchg
xlat
je
int
lea
jo
cmc
into
mov
adc
out
push
adc
std
jp
fyl2x
int3
aas
lods
pop
lock
outsl
xchg
mov
mov
ret
cld
mov
jnp
lock
mov
mov
mulps
rcr
jb
inc
pop
scas
lods
out
mov
jno
cmp
dec
mul
movsl
push
mov
or
push
push
iret
rcl
cmp
sti
insb
mov
cmpsb
mov
sbb
push
cmc
xchg
js
lret
mov
imul
loop
or
test
ret
daa
das
mov
add
idivb
sbb
cmp
es
xchg
rcrb
mov
xor
jp
hlt
movb
xchg
and
jp
or
in
xchg
adc
dec
jl
cmp
dec
outsb
pop
push
rcr
mov
sub
lret
dec
cmp
sub
pop
xor
sub
lods
push
imul
ljmp
iret
sbb
pop
fwait
mov
sbb
sub
push
mov
xchg
je
pop
dec
dec
ljmp
inc
dec
lcall
ret
insb
mov
push
sbb
push
cld
mov
sbb
inc
nop
cltd
jp
iret
adc
jle
mov
dec
inc
cmpsb
ret
mov
stos
dec
push
lcall
lahf
sbb
xchg
imul
inc
lcall
test
sbb
clc
cmp
jecxz
pop
pop
fiadds
or
pop
dec
lods
int
add
mov
xchg
or
push
in
int
mov
jbe
dec
adcl
xchg
add
in
sub
rcr
aaa
stos
mov
bound
sbb
xor
in
out
je
stos
xor
movsb
or
xor
inc
sub
pop
es
in
push
mov
pop
xlat
fimuls
shrb
jbe
pop
cmp
outsl
push
test
movsl
ja
test
jmp
call
in
sub
jnp
mov
mov
js
cwtl
inc
addr16
sbb
je
xchg
clc
add
xor
pop
cmc
cwtl
stos
into
sahf
and
adc
repz
int3
dec
enter
adc
mov
sbb
sbb
add
rcr
push
cmp
adc
loop
add
cmp
fdivrl
sahf
sub
push
pop
push
inc
sub
sarl
pop
lock
jbe
dec
cmp
push
or
add
das
dec
out
xchg
dec
inc
fisubrs
mov
push
dec
imul
cld
enter
push
xchg
fdivrl
dec
pop
fiadds
mov
push
mov
in
jmp
hlt
pop
xchg
out
shr
mov
add
sub
sub
jns
inc
push
jns
leave
pop
inc
iret
add
sbb
dec
mov
mov
push
nop
in
pop
ja
push
outsl
test
add
push
or
mov
mov
sarl
pop
xchg
mov
xor
les
pop
pusha
pop
mov
xor
lods
aad
test
cltd
xchg
fprem1
cmp
leave
rorb
or
jns
stos
xchg
ficoml
mov
clc
in
mov
imul
mov
fwait
movsb
push
xchg
outsb
scas
stos
bnd
pop
sbb
fidivs
pop
fsubr
cld
pusha
mov
out
stc
cs
jo
pop
sub
lds
jp
jb
pop
add
add
arpl
ret
scas
mov
push
jle
xchg
mov
stc
mov
xor
fdivl
pop
repnz
enter
das
int3
xchg
stos
cwtl
clc
add
push
and
mov
pop
lret
add
fisttpl
rol
int3
and
outsb
sub
stos
ss
cwtl
nop
add
mov
das
mov
gs
xchg
pop
cmp
xor
je
aam
out
jmp
mov
pop
cmp
popw
lods
sub
movsl
cmp
push
fsubrl
movsl
sahf
dec
xchg
insl
subb
push
gs
fmull
pop
pop
jnp
les
addb
sub
popf
mov
hlt
push
lds
mov
lock
xchg
lahf
add
or
push
arpl
js
add
loopne
sub
test
stc
sbb
add
mov
xor
ljmp
sahf
push
decb
push
push
inc
in
inc
sub
out
dec
outsb
adc
fbld
jecxz
mov
sahf
xor
mov
add
pusha
shlb
add
cmp
xchg
xor
push
push
adc
pop
jbe
mov
ret
testb
scas
adc
adc
jno
pop
fcmovnb
out
adc
cli
jne
dec
repnz
daa
dec
mov
push
push
daa
stc
mov
movsb
cmp
inc
cmp
and
xchg
ljmp
mov
cmp
shlb
les
insl
pop
sbb
xchg
ljmp
div
sbb
pop
cmp
in
push
and
and
cmpsb
int
and
je
or
pop
sub
pop
add
imul
pop
jns
lea
xchg
es
divb
rcr
push
pushf
test
mov
push
xor
subb
adc
jge
inc
mov
cmp
lds
mov
arpl
call
cmpsb
fisttpll
mov
mov
mov
fwait
pop
sbb
inc
jecxz
das
pop
cmp
fmuls
xchg
nop
loopne
dec
leave
cmp
inc
movsb
lahf
jge
xor
std
dec
adc
les
ss
shll
fiaddl
stc
push
mov
lahf
push
mov
or
ret
jmp
js
push
and
loopne
clc
jne
ljmp
fcmovnu
mov
push
cmpsb
jo
jb
mov
adc
in
test
ljmp
sar
cmp
push
mov
test
sub
push
sbb
adc
popf
data16
jmp
dec
and
mov
cwtl
add
push
fadds
adc
pop
mov
jbe
test
sti
sbb
mov
inc
icebp
stc
pop
adc
or
das
push
add
test
bound
in
push
scas
xor
sub
mov
test
movsb
add
xor
fcomp
and
jae
dec
adc
orl
mov
xorl
xor
dec
mov
add
cld
dec
dec
in
roll
or
mov
mov
stos
loope
add
and
mov
test
xchg
out
mov
mov
push
xchg
sub
in
mov
ja
call
and
sbb
hlt
test
je
push
push
mov
lahf
lds
mov
dec
dec
ljmp
movsb
sbbb
mov
in
xor
faddl
sbb
jge
movsb
sub
fstps
sti
lods
push
and
int3
imul
stos
fidivl
jl
jle
mov
mov
mov
and
nop
stc
sub
scas
iret
hlt
stc
outsb
push
sti
mov
fwait
shl
jmp
in
lock
sub
pop
idiv
repnz
repz
jnp
dec
mov
stos
aad
cwtl
fucomip
inc
cmp
jecxz
inc
lods
scas
cltd
jbe
sbb
add
jl
inc
mov
orl
xlat
fidivrl
ffreep
or
dec
sub
xchg
outsl
subb
jmp
fnstenv
mov
xchg
push
insl
fwait
inc
lret
jne
pushf
ljmp
mov
mov
mov
std
outsb
mov
and
ret
sbbl
mov
outsb
jmp
stos
jb
dec
clc
dec
lea
addr16
mov
mov
sub
sub
jp
and
mov
xor
adc
or
hlt
xlat
mov
insl
clc
je
mov
xlat
push
push
push
jmp
cmp
fldl
sbb
inc
insb
imul
xchg
inc
add
bound
jb
push
xchg
or
inc
pop
jno
jl
rol
and
dec
sti
inc
push
mov
lds
adc
inc
sti
fwait
int
rclb
int
jl
fs
outsl
pop
pop
in
dec
outsb
mov
add
outsb
xchg
scas
pop
mov
testb
inc
adc
pushf
les
sar
or
push
scas
and
or
xchg
and
scas
cmp
xchg
ficoms
stos
add
pop
sbb
xlat
in
adc
mov
int3
stos
mov
pushl
or
ficompl
push
push
pop
fs
fstps
pop
scas
xor
pop
icebp
sbb
cli
das
out
into
gs
mov
push
push
lea
daa
js
or
sub
mov
mov
mov
or
push
cmpsl
andb
inc
push
shll
rcr
adc
stc
into
addr16
in
or
adc
mov
fildl
add
subl
mov
push
mov
out
enter
add
lahf
mov
pop
stos
dec
out
sub
out
and
lahf
test
inc
mov
test
hlt
icebp
stc
sub
icebp
adc
lock
fidivs
in
cmp
or
das
mov
mov
test
lahf
mov
scas
inc
pushf
int3
test
or
mov
mov
movsb
ficoml
jl
pusha
aam
popa
xchg
test
jb
mov
xchg
imul
cmp
test
out
dec
scas
or
and
jle
lahf
cmp
sarl
mov
xchg
lds
inc
mov
xor
aas
scas
or
inc
dec
iret
ror
and
clc
jno
movsb
or
pop
test
pop
adc
pop
mov
and
add
adc
jns
popa
mov
add
jl
js
lea
pop
sbb
ss
xor
cli
or
pop
lds
xor
stc
push
jae
aaa
loop
xor
xchg
test
fcmovu
xchg
inc
cmp
lret
mov
rcrb
and
rorl
add
jp
adcl
stc
xchg
shlb
outsb
xchg
test
fisubrs
cld
repnz
or
xlat
cli
dec
popa
mov
aaa
in
mov
lods
xchg
fisubrs
xor
mov
jmp
repz
mul
jbe
jg
test
shrb
and
es
icebp
add
gs
cltd
inc
or
mov
scas
gs
and
popa
inc
adc
and
cmc
imul
jmp
fisubl
fisubl
sarl
stos
gs
add
addr16
aas
xor
xchg
inc
repz
inc
pushf
insl
mov
jmp
inc
adc
std
sbb
cmp
and
into
and
clc
into
mov
lds
stc
pop
data16
cli
fcoml
xor
inc
or
mov
ret
stc
jmp
cs
sbb
pusha
in
mov
sbb
or
sbb
test
sub
pop
iret
ret
cmp
test
sub
mov
pop
lods
xlat
out
mov
int
sbb
movsb
push
icebp
add
pop
shlb
daa
push
sysexit
sti
addr16
je
mov
mov
cmpb
inc
push
les
loopne
dec
mov
insb
mov
fisttpl
xchg
lret
or
xchg
sti
js
xchg
mov
and
inc
adcl
lahf
push
lock
nop
push
pop
lret
stc
push
jecxz
jnp
mov
inc
xchg
sti
aad
in
xchg
out
jg
mov
adc
dec
in
fnsave
loope
xor
test
js
das
bound
sub
lods
pop
sub
push
jns
dec
push
mov
shlb
test
lcall
enter
mov
in
std
xor
or
sbb
mov
jnp
in
test
jnp
cmp
inc
mov
aad
push
les
sbb
pop
jp
xor
ds
imul
adc
xlat
dec
adc
divb
cmp
cmp
push
dec
lea
stos
pop
mov
ret
out
clc
cmpsb
pop
push
scas
add
sub
outsb
pop
inc
stos
mov
aaa
xchg
inc
sbb
cmpsb
pop
jb
adc
mov
and
xchg
add
push
fisttps
rcrl
andb
jge
lods
loopne
dec
lea
shll
mov
pop
repnz
push
lds
cs
out
js
sahf
enter
cmc
popa
dec
ljmp
frstor
mov
in
mov
daa
mov
push
in
aad
fisttps
test
pop
lahf
in
jae
sete
xor
popf
data16
push
mov
hlt
mov
cs
rcrb
lret
fstpt
inc
test
iret
sub
ss
outsb
shl
dec
mov
pop
pop
test
rorb
rorb
lret
and
out
mov
ret
xor
pop
and
adc
add
jo
ja
push
jecxz
out
pusha
and
mov
jl
xchg
dec
jo
push
andb
test
push
sahf
imul
push
ds
push
xchg
lret
loope
inc
jp
add
ja
cs
xchg
sub
push
xor
xor
cwtl
sub
sbb
mov
arpl
xchg
stc
clc
xor
cmp
subl
jge
adc
imul
push
cmp
adc
ret
test
pop
push
push
push
and
ds
adc
stos
mov
pop
ret
cmp
cs
test
nop
or
push
jg
pusha
push
imul
or
add
push
int
subl
or
adc
mov
xor
test
ss
xor
in
fucomp
mov
push
inc
loop
and
out
pop
xor
aas
mov
in
stos
or
test
outsb
xchg
jns
lods
outsl
xchg
and
and
enter
cwtl
cmp
push
add
jmp
cmp
pop
lret
pop
push
inc
and
shlb
xor
negb
sub
dec
xchg
std
mov
ds
nop
adc
push
push
jge
cmpsb
dec
adc
push
outsb
in
inc
inc
mov
stos
or
xor
push
subl
adc
pop
gs
fucom
sahf
fadds
sbb
ja
lahf
mov
mov
jns
cs
nop
dec
je
adc
dec
or
fldt
lock
mov
pop
jmp
jbe
adc
adcb
adc
nop
movsl
jecxz
iret
sarb
dec
mov
and
fwait
mov
add
sbb
ds
jnp
or
jmp
ret
cs
fnstcw
add
movsl
scas
sbbl
and
std
lods
je
jns
pxor
sbb
jge
into
das
das
and
cmp
sar
mov
pop
pop
test
test
aam
ret
imul
iret
daa
pop
icebp
mov
pushw
clc
inc
mov
sub
sub
push
xchg
mov
cld
hlt
inc
sub
stos
ja
mov
mov
invd
xor
pop
loope
mov
aaa
std
shlb
mov
into
push
das
pop
inc
sbb
add
cmp
xchg
fmuls
cld
inc
cmp
jno
pop
adc
notb
cmp
dec
mov
inc
cmp
pop
int3
imull
idiv
cmpl
pop
mov
out
xchg
sub
dec
jg
roll
pushf
insb
paddb
leave
and
sbb
pop
adc
rcrl
clc
pop
mov
mov
mov
outsl
dec
sbb
jp
sahf
jns
pusha
adc
sbb
inc
inc
mull
cmp
dec
push
pop
xor
inc
xchg
sub
push
clc
aam
int
stc
dec
or
pop
out
stos
icebp
scas
iret
xchg
pusha
cs
push
stos
cmp
inc
adcb
out
das
das
dec
xor
jle
lea
popa
mul
mov
sub
xchg
mov
imul
pop
push
repz
mov
xor
mov
nop
xchg
mov
out
sbb
test
cmc
pop
sbb
pop
mov
cmpsl
mov
xchg
jmp
mov
repz
gs
jo
cmp
insl
in
push
mov
jecxz
mov
scas
jb
cmp
jne
stos
enter
int
ret
scas
imul
sub
icebp
sub
int3
mov
lock
scas
iret
arpl
mov
pop
and
imul
jle
sbbl
pop
jl
dec
mov
dec
loopne
sti
je
loope
mov
stc
dec
fisttpl
mov
sbb
xchg
dec
or
mov
stc
lods
mov
jmp
icebp
imulb
xchg
add
aam
negb
push
push
aam
xorl
mov
popf
xor
pusha
adc
repz
iret
call
mov
sub
mov
jmp
mov
jecxz
inc
xor
and
dec
lods
mov
sbb
inc
dec
mov
in
dec
ljmp
xlat
pop
inc
lret
aas
dec
jno
and
or
add
push
add
loope
cwtl
mov
jl
loope
dec
push
idivb
jno
incl
cmc
mov
mov
pushl
inc
dec
jb
xor
shr
push
xchg
lcall
insl
sub
pop
jle
sub
ret
jo
dec
in
insb
cs
mov
lock
xor
dec
dec
cwtl
repnz
pop
sub
testb
jae
add
pusha
dec
mov
or
mov
sahf
pop
dec
or
lods
iret
stos
sar
add
insb
mov
jl
sbb
andl
jns
pop
je
sub
mov
dec
mov
icebp
repnz
daa
dec
test
stc
mov
ret
add
nop
mov
int3
popf
dec
push
lret
fidivrl
mov
cld
jbe
nop
subb
or
jnp
test
loope
imul
enter
int3
mov
popf
sahf
cltd
xchg
icebp
divb
inc
xchg
jno
adc
push
mov
imul
jo
and
mov
push
leave
pop
rcrb
mov
mov
mov
cmp
adc
jae
cmp
jecxz
fs
pop
mov
push
cli
xchg
mov
outsb
and
xchg
std
push
or
jmp
adc
mov
pop
daa
fisttps
sub
push
cmp
and
out
retw
arpl
jo
inc
lods
inc
jne
sbb
cmp
xor
xchg
loop
dec
outsl
inc
dec
xchg
fxch
mov
cs
out
out
js
dec
repz
sub
xchg
and
adc
jno
popa
pop
hlt
ja
call
insl
xor
repz
push
sub
fnstsw
fs
into
lea
xchg
cwtl
fwait
mov
repnz
jp
rorb
xchg
mov
loopne
mov
ja
push
xchg
daa
xchg
jns
out
ljmp
pop
daa
jbe
push
mov
leave
add
adc
inc
mov
dec
icebp
inc
or
xchg
iret
ret
jnp
adc
sbb
xchg
sbb
jge
pop
jmp
xchg
rcrb
cmp
or
jl
clc
or
jae
repz
push
inc
sbb
sbb
push
adc
stos
dec
dec
push
rcr
cld
icebp
ss
jge
adc
or
inc
cwtl
mov
outsb
pushf
dec
mov
repz
mov
fidivl
mov
sub
fbstp
lea
jno
pop
stos
arpl
jecxz
loopne
inc
je
jmp
mov
dec
xchg
test
loop
imul
jecxz
sbb
lcall
push
inc
inc
inc
sub
fldenv
xchg
ror
hlt
mov
pop
pushf
or
jmp
inc
lea
add
imul
ds
xchg
mov
xchg
jae
cmp
aas
lcall
sbb
dec
ds
xchg
pop
inc
ds
adc
xor
filds
pop
jno
lods
js
push
sahf
cli
loopne
pop
cld
ret
decl
sahf
push
idivl
xor
xchg
jg
popf
mov
roll
dec
std
pop
push
into
add
xchg
mov
ja
xchg
xchg
repnz
stos
add
int3
daa
in
ljmp
test
insl
in
clc
mov
xorb
xorl
subb
xor
cmc
lcall
add
movsl
pop
test
xor
testl
sbb
jle
popa
jo
xor
add
lcall
mov
xor
fs
jns
outsb
mov
jp
adc
sahf
sub
mov
mov
lahf
xchg
hlt
out
fsts
sahf
popf
mov
pop
dec
cwtl
faddl
push
push
push
pop
inc
add
push
in
fstpl
and
mov
jecxz
sbb
pop
cli
test
ret
pop
in
and
andb
repz
int
mov
jno
lret
pop
and
mov
fisubs
ljmp
sbb
fildll
insl
gs
mov
push
movsl
int3
lcall
xlat
mov
je
cltd
dec
push
incb
cmpsl
cli
icebp
dec
mov
inc
daa
mov
nop
cmpsl
rcll
and
sbb
pop
jnp
sbb
lods
out
scas
mov
dec
and
push
xchg
call
das
idivl
imull
test
or
lea
push
add
adc
lock
and
mov
clc
imul
fisubs
adc
fstl
inc
push
out
repz
fidivl
iret
sbb
mov
cld
jge
push
mov
inc
repz
xchg
lret
gs
mov
adc
pshufw
stos
push
jmp
rclb
insl
push
loope
and
pop
cmp
ficompl
fisubs
pop
jg
ss
repnz
inc
or
lods
or
pushf
mov
pop
lods
loopne
push
mov
pop
add
sbb
mov
xor
nop
shrb
in
std
sub
addr16
hlt
sbb
popl
inc
or
aam
jp
gs
in
mov
ret
push
in
pop
mulb
cmp
andb
jp
fstpl
mov
push
jp
inc
xor
sbb
fists
xchg
test
lods
jno
push
push
mov
lock
les
xor
lcall
xlat
mov
fstpt
cltd
jae
adc
arpl
and
in
xor
cltd
jne
push
sbb
push
sarl
nop
xchg
jbe
test
dec
mov
mov
imul
clc
mov
xor
push
loopne
mov
lock
testb
push
inc
aad
pop
hlt
cltd
fisubrs
adc
add
xchg
bound
loopne
insl
out
and
in
out
add
lret
lahf
adc
loop
popf
cs
xchg
fmull
push
xchg
es
sbb
movsb
jge
lret
jae
mov
sub
pop
inc
loop
roll
clc
not
mov
cmp
cmpl
imul
pop
pop
dec
lret
cmp
and
inc
fidivrl
xchg
jge
test
sbb
jge
jno
jne
cmpsb
aaa
push
aaa
pop
out
andb
cltd
mov
dec
stos
stos
dec
rcr
sbb
shll
pop
add
das
clc
inc
xchg
daa
lods
cmp
mov
mov
jae
aad
scas
push
insl
loop
add
sub
push
dec
fsubrl
lds
testb
jnp
mov
mov
arpl
mov
aas
jl
outsb
pop
and
stos
scas
mov
lcall
and
or
push
insb
inc
mov
sub
loopne
fnstenv
mov
cltd
mov
and
sbb
mov
or
iret
jbe
shlb
out
push
lds
dec
andl
adcb
imul
stc
cmp
inc
jo
xor
inc
test
leave
lock
fdivs
fmull
jno
fucom
cmpl
iret
cwtl
das
sub
out
xor
ja
xchg
lret
in
inc
cmpsl
inc
cmp
add
out
mov
mov
into
pop
push
rcll
xor
pop
call
mov
xor
loope
adcl
jmp
in
subl
iret
loope
loope
xchg
arpl
inc
mov
notl
push
cmp
push
das
dec
int3
aaa
inc
adc
test
adc
lea
inc
pusha
loop
lahf
nop
inc
std
xchg
es
xchg
and
hlt
jg
and
int
ljmp
jecxz
xchg
addr16
jbe
mov
xor
dec
mov
push
mov
mov
lea
fdivrl
mov
sbbb
aam
bound
stos
mov
jo
cmp
lods
push
fisttpl
sbb
push
jo
xchg
shlb
pushf
push
pop
jp
popf
repnz
int3
mov
and
sub
jl
lret
mov
xchg
mov
and
push
imul
pop
pop
adc
mov
mov
es
shrb
gs
cmp
sahf
in
push
ja
rol
dec
bound
xor
cmpsl
outsb
inc
inc
shrl
inc
jmp
jp
and
fildll
cmp
cmp
imul
aam
lcall
shrb
aas
ret
and
outsl
outsb
inc
popf
hlt
jg
bound
pushf
movsl
mov
movntps
into
dec
sub
and
inc
mov
or
sub
pop
loop
sub
jg
cmpsb
hlt
and
lods
in
nop
adc
mov
adc
icebp
sub
sub
mov
les
cwtl
cli
mov
rcrb
pop
cltd
cmovg
jns
sbb
shll
add
mov
addr16
cld
and
aas
dec
mov
test
xchg
push
clc
mov
xchg
push
es
or
outsb
out
jmp
push
popf
shll
push
enter
andb
jnp
pop
scas
jne
push
insb
xor
roll
mov
dec
pop
jp
xchg
stos
push
mov
aas
popa
pop
int3
jmp
or
or
enter
cwtl
pop
clc
mov
xchg
push
ret
dec
push
pop
xorb
loope
mov
cs
int
fxch
dec
movsl
and
lcall
jo
inc
outsb
in
je
dec
cmp
movsl
cmpsl
jmp
sbb
mov
and
xchg
pop
int3
jbe
jb
xchg
add
mov
arpl
mov
push
jg
mov
push
mov
xor
sahf
cmp
lods
cld
dec
lock
pusha
pop
inc
leave
push
scas
cmpsl
cmc
cltd
hlt
mov
xor
fstps
jmp
fsts
outsb
mov
and
xor
adc
or
pop
fwait
jb
mov
adc
ror
sub
bound
xor
sar
inc
lock
pop
mov
cmc
mov
add
testl
ret
sbb
aad
pushl
fnstcw
sbb
test
adc
lcall
popa
clc
in
add
xchg
jmp
cmp
ret
mov
jmp
pop
dec
adc
ljmp
andl
ret
push
jo
mov
testl
push
mov
popa
push
addl
imull
rclb
adc
dec
shl
lods
nop
ror
mov
push
jge
and
repnz
push
xor
cltd
scas
ficompl
aam
cltd
cmpsl
dec
cli
dec
rcl
fidivs
cmp
mov
loop
repnz
and
mov
push
xchg
aas
testb
mov
sbb
jnp
mull
lret
push
in
pop
iret
push
mov
bound
push
or
dec
fisubrs
sub
inc
loop
nop
popl
pusha
push
adc
jg
sub
cmp
or
mov
out
in
fstps
cmp
push
cli
mov
addl
or
sbb
shl
test
sub
pop
mov
clc
or
dec
dec
jnp
fwait
mov
xlat
jg
sub
out
shlb
push
or
es
cmc
push
add
aas
or
jo
repz
rcr
mov
into
test
jae
xchg
insl
lret
out
sub
push
ret
add
sub
popf
adc
roll
and
loopne
cmpsl
mov
loopne
xor
inc
jle
mov
jns
mov
pop
ret
out
insl
jnp
sbb
mov
xchg
adc
fcomps
cwtl
add
in
movsl
xlat
lahf
lret
xor
out
fcmovu
inc
js
outsl
dec
scas
add
pop
loope
xchg
xchg
push
xchg
mov
popf
mov
out
sub
xchg
jns
mov
adc
cmp
loop
hlt
or
lahf
adc
mov
pop
ret
mov
mov
pop
pop
pop
dec
insl
icebp
fadds
loope
imul
adc
xor
sub
pop
scas
lds
ret
stos
clc
jp
lret
push
popf
and
mov
push
cmpsl
insl
sub
and
call
sbb
sahf
aaa
xchg
loope
mov
jbe
mov
sahf
addl
add
ss
push
fstl
cmp
xchg
addb
push
push
shl
pop
dec
fadds
mov
mov
jae
mov
ss
pop
repnz
test
jp
cld
jae
fcompl
push
aam
arpl
daa
adc
mov
inc
mov
push
mov
xchg
imul
sub
jmp
lcall
outsl
adc
es
out
repz
out
mov
mov
add
push
push
gs
in
icebp
mov
sub
add
iret
mov
cld
xchg
mov
cmp
in
sub
movsl
sub
movsb
mov
xchg
adc
std
jae
outsb
cmpsl
roll
push
imul
cltd
cli
outsb
adc
push
xor
ret
mov
inc
pop
dec
sbb
cmp
add
pop
bound
les
cmp
stos
mull
push
jecxz
mov
mov
sti
push
sbbl
dec
mov
lret
ret
sti
ss
mov
cmpsb
mov
xchg
cs
gs
mov
cmp
push
xchg
sub
stos
cmc
and
jge
jge
iret
fnsave
mov
fwait
mov
jge
xor
mov
lcall
jecxz
loopne
mov
mov
add
pop
outsl
pop
inc
or
sub
inc
or
add
loope
insl
mov
pop
mov
jo
loop
dec
dec
insb
out
out
cmp
popf
cmpsl
enter
xor
stos
repz
lcall
mov
into
test
repnz
int
jb
std
ficomps
ds
push
fistps
imul
jb
or
and
fdivl
aas
arpl
cmp
pop
inc
mov
push
ds
push
or
pusha
jbe
cld
adc
adc
sbbb
dec
mov
imul
push
and
mov
pop
and
sbb
dec
mov
push
sbb
pushf
ja
push
add
sub
xchg
inc
outsl
popa
mov
add
rolb
les
sbb
or
sub
clc
cltd
cmc
cmp
xor
or
xchg
and
push
insl
cltd
adc
fcoml
pop
ljmp
dec
adc
cmc
pusha
fidivl
sub
adc
sub
fisttpll
add
int
cld
outsl
xchg
outsl
fwait
call
hlt
loopne
fstps
cmp
repz
scas
imul
sbb
add
xlat
lret
cmp
push
lret
mov
push
popf
jae
mov
mov
inc
adcb
es
addr16
push
lret
filds
inc
ss
rcll
lock
pop
mov
repnz
inc
pop
aaa
push
or
stc
jnp
andb
enter
sbb
pop
cld
rclb
xor
jb
cmp
dec
pop
rol
ss
jne
pushf
adc
test
popa
cmpl
aaa
cmp
les
cmp
fldt
push
mov
ret
jo
jb
push
push
inc
stos
push
aas
dec
jbe
loop
push
sbb
lret
push
pop
fcoml
jmp
repnz
mov
data16
sub
mov
in
loope
cmpsb
and
test
les
mov
rorb
mov
add
aam
mov
hlt
ljmp
aaa
dec
loop
out
notb
aad
movsb
icebp
dec
add
mov
adc
sbb
jno
cmovno
jmp
mov
mov
lea
incl
push
xchg
sub
ja
out
lret
aam
or
imul
xor
or
data16
bound
xchg
arpl
xchg
sti
lods
inc
mov
mov
add
adc
sahf
andl
sbb
shl
dec
mov
lcall
or
mov
faddl
sbb
in
mov
and
push
andl
pushf
cltd
nop
movb
push
pop
mov
flds
scas
scas
shl
push
lret
leave
jnp
lret
movsb
mov
mov
leave
jmp
adc
jns
call
shll
fildll
adc
mov
jg
adc
lcall
sub
ret
add
jns
pop
dec
mov
shlb
in
ss
imul
sbb
inc
aas
aaa
ret
popf
jmp
arpl
test
xor
aad
sti
mov
bound
notl
xor
mov
scas
xchg
adc
cltd
inc
cmpsb
add
arpl
jb
cltd
mov
sti
stos
int
adc
and
int3
mov
dec
inc
cltd
or
inc
call
loope
inc
jns
adc
cmp
mov
or
inc
jbe
mov
cmp
jo
inc
fwait
incb
pop
pop
sub
mov
shlb
push
ret
loope
pop
sub
or
call
std
push
gs
xchg
data16
push
sub
gs
mov
jo
inc
pushf
add
jae
stos
into
pusha
jns
adc
add
arpl
push
adc
push
push
and
sub
and
test
adc
jne
loopne
add
cmp
fstpt
adc
mov
fsubr
and
adc
int
xlat
dec
imul
popa
into
shll
rcr
pusha
fldcw
dec
adc
icebp
aad
in
inc
insb
push
and
xor
cwtl
and
push
cli
and
test
dec
std
fldcw
fbstp
sub
popf
sbb
adc
jne
arpl
push
add
mov
int
fstl
jae
mov
mov
cmc
dec
popl
test
mov
add
xchg
shrb
lods
xor
add
bound
fsubrl
adc
aas
add
push
lea
clc
mov
insb
push
add
loopne
xchg
popf
cli
inc
sbb
aas
mov
adc
gs
je
scas
xor
pop
xchg
lods
shlb
mov
and
mov
jns
mov
fcompl
cmpsb
xchg
and
xor
ja
js
push
pop
sbb
or
rep
in
add
mov
mov
mov
into
repnz
push
pop
aam
xor
lcall
dec
jmp
sub
divb
jbe
insl
add
inc
not
test
insb
jae
or
inc
sub
cmpsl
popf
dec
fmul
mov
cmp
jecxz
jb
push
pop
mov
in
adc
popa
push
push
shrl
call
xchg
lock
inc
mov
inc
xor
mov
xchg
filds
pop
lret
xchg
xchg
fists
test
jl
sbb
fcomps
dec
cli
clc
and
lahf
pop
xchg
rcrb
repnz
mov
fdivrs
add
ljmp
or
adc
mov
push
je
xlat
xor
xchg
add
xor
insl
fmuls
fsubs
repnz
xor
jp
sbb
imul
js
pushf
test
clc
sub
or
ljmp
add
cbtw
and
mov
lahf
ljmp
daa
xor
cmpsl
jl
jp
sub
mov
sub
ds
fcoms
sbb
push
movsl
mov
aam
mov
iret
mov
jl
sbb
xchg
sbb
int3
fnstcw
adc
addr16
mov
adc
loopne
lret
js
addr16
push
cmp
pop
mov
mov
adc
mov
push
sbb
shl
dec
and
push
inc
mov
data16
add
inc
pop
xlat
add
call
mov
adc
js
mov
rcll
cmc
shlb
and
nop
cmp
ljmp
mov
jb
mov
ljmp
push
and
mov
jae
sbb
or
out
lea
mov
cmp
pop
cmp
or
fdivrl
add
in
add
mov
insb
mov
scas
lret
mov
adc
test
ljmp
add
mov
mov
xchg
in
loope
test
adc
out
ficoml
in
or
js
and
cmp
mov
out
and
loop
addr16
push
xor
xchg
dec
in
mov
sbb
pop
and
mov
dec
dec
push
dec
push
pop
add
sbb
jns
add
pop
fildl
pop
fwait
cmpsl
and
out
push
mov
shl
xchg
les
jnp
xchg
mov
push
imul
mov
frstor
fldl
cmp
imul
cmpb
ja
cld
add
pushf
cmpsl
dec
xor
mov
cltd
fs
xchg
ret
sub
stos
sbb
xor
movsb
cmp
push
insl
xchg
loope
push
cmc
dec
lods
stos
mov
pop
or
push
xor
cmp
adcb
inc
cli
nop
aad
jno
sub
scas
fxch
fistl
sbb
adc
repz
lret
mov
icebp
lods
dec
pushf
cmc
adc
subb
bswap
adc
mov
test
scas
data16
push
xor
rcrl
jmp
mov
cmc
jnp
out
xor
je
add
inc
fs
stos
push
push
arpl
mov
ret
lret
dec
lods
cmp
jo
mov
sbbb
fsubrl
jae
mov
xor
ficomps
fsubs
fdivs
or
sbb
test
dec
shl
adc
ds
arpl
jg
cmp
cmovns
or
push
push
add
pop
clc
sarl
fs
jo
sbb
lcall
and
mov
ljmp
das
repnz
and
pop
popa
sbb
loopne
popa
inc
ljmp
inc
std
add
lret
je
test
loop
ljmp
clc
fstl
xchg
push
adc
or
inc
push
pop
dec
test
pop
jecxz
fldl
xchg
insb
sbbl
lods
aad
cmp
gs
jmp
dec
fsubrl
mov
fdivp
sub
push
out
call
push
sbb
mov
mov
adc
mov
push
sub
mov
sub
jl
mov
test
in
sti
mov
cmpsb
ret
jmp
mov
fldl
in
addr16
or
pushf
pop
push
cs
inc
xchg
mov
mov
mov
jmp
addr16
jae
lds
cmp
sub
push
fwait
mov
cmpsl
xlat
adc
cmpsl
gs
data16
scas
pusha
sub
add
mov
jl
add
inc
mov
out
mov
pop
daa
mov
insb
cld
sbb
pop
mov
xor
jp
adc
mov
xchg
shrl
cmp
out
mov
push
outsl
sarl
lods
mov
fdiv
mov
ror
stos
hlt
movsl
movsl
fldt
mov
popaw
mov
aam
test
sub
xor
stc
jb
sub
cld
and
dec
dec
dec
add
rcrl
push
pushf
fcomps
inc
movb
psubusw
add
cwtl
addb
and
negb
xlat
jno
clc
testl
scas
addr16
mov
daa
aam
or
pop
dec
addr16
pop
repz
inc
repz
mov
inc
aad
into
jo
fldenv
or
and
push
sub
adc
sub
aas
xor
adc
leave
adc
int
and
movsl
pop
sub
dec
sub
adc
mov
push
scas
loopne
add
or
enter
ja
fwait
adc
or
mov
pop
loopne
mov
or
push
leave
call
xlat
dec
jmp
movsb
xor
lret
cmp
mov
push
mov
mov
mov
int
rclb
push
and
or
push
push
nopw
adcb
pushf
inc
sbb
cld
mov
xor
ret
jp
inc
dec
movsl
add
jle
call
and
stc
push
rcll
inc
aaa
clc
aas
cwtl
sub
mov
xlat
cmp
mov
lds
jmp
mov
dec
add
push
or
push
ret
mov
movsb
mov
xor
outsl
xchg
sbb
xchg
cmpsl
adc
pop
loopne
pushf
jb
push
outsl
xchg
push
mov
in
cmc
dec
imul
out
mov
xor
imul
mov
leave
cmp
js
and
mov
icebp
movsl
or
loopne
adc
stos
or
stos
aaa
push
pop
ret
push
push
fwait
xchg
jmp
and
lea
sbb
dec
ljmp
xor
xchg
or
pop
scas
pop
xchg
sub
inc
lcall
icebp
ja
scas
push
movsb
sub
inc
outsb
and
jae
xor
ds
loop
dec
mov
jecxz,pt
in
stos
popa
adc
jge
and
jne
out
adc
in
testl
movsl
or
mov
mov
add
lock
adc
je
dec
bnd
lods
mov
cmp
push
and
inc
ss
or
in
out
inc
pop
fwait
js
adc
dec
jle
add
stos
pandn
sbb
shlb
bound
popa
xchg
insl
dec
dec
lret
notl
imul
push
leave
int
jo
jno
mov
cs
sub
fwait
test
adc
sub
cli
cmp
add
sti
std
xchg
ljmp
sub
adc
pop
into
adc
cmp
subl
and
stc
mov
inc
inc
icebp
sbb
mov
inc
push
adc
adc
xor
test
data16
orb
bound
and
out
adc
sub
lret
clc
test
out
fs
inc
adc
or
push
xor
fcmovnb
pop
lods
push
addb
sbb
pushf
movl
adcb
xchg
nop
cmp
xor
xchg
xchg
dec
bound
scas
icebp
call
ljmp
les
adc
xor
aas
clc
sbb
cli
dec
xchg
dec
xchg
dec
sbb
nop
add
fcompl
out
subl
jns
lcall
nop
add
lods
xor
dec
lahf
in
cmp
mov
dec
lock
pop
add
or
pop
inc
jae
stc
push
cs
sbb
jbe
enter
mov
cmp
jae
or
ret
aam
stos
fisttps
or
pop
cmp
iret
or
mov
je
out
imull
call
cmp
nop
mov
hlt
das
xchg
cltd
mov
ret
or
dec
xchg
sub
adc
add
mov
enter
jg
mov
dec
cmp
inc
adc
inc
pop
cmpsb
inc
ret
mov
jle
jmp
lret
jecxz
pushf
shrl
dec
popf
adc
icebp
adc
adc
sbb
jo
mov
hlt
arpl
inc
sub
lcall
dec
mov
or
mov
cltd
jecxz
pop
test
inc
inc
mov
xchg
shl
pop
lds
adc
jbe
mov
xor
icebp
mov
jo
mov
jnp
pop
dec
bound
into
xor
pop
mov
sti
decl
inc
add
inc
out
lock
enter
ficoml
mov
cmpsl
callw
testl
push
outsb
out
or
add
mov
sbb
ss
in
je
es
mov
inc
shrb
pushf
test
lods
lcall
int
lret
enter
lods
lods
mov
repnz
fcomps
ficoms
in
jg
jecxz
sub
pop
repnz
mov
std
inc
pop
mov
sbb
faddl
mov
insb
cltd
sub
sub
jge
cmp
jns
std
xchg
xchg
enter
adc
cmpsb
js
push
hlt
xor
test
ret
insb
add
subb
adc
adc
cs
inc
lret
xchg
xor
fildl
sub
in
arpl
sbb
addr16
mulb
or
ss
loopne
jnp
mov
test
mov
mov
aad
jne
sbb
std
pop
gs
pop
out
test
insl
rcl
popf
ret
test
cmpl
ljmp
push
aad
push
or
jbe
int3
movsb
adc
sub
push
mov
lahf
fdiv
push
push
pop
add
push
sub
arpl
dec
rol
pop
push
mov
jo
sbb
inc
popf
sub
int
bound
movsl
or
popl
push
push
add
cli
inc
mov
ss
imul
and
push
outsb
inc
push
fs
mov
push
loopne
repnz
insb
dec
mov
fs
das
dec
sbb
push
das
div
mov
mov
inc
dec
sub
mov
inc
mov
ljmp
xchg
int
lock
xor
push
mov
sti
xor
das
xchg
cltd
inc
adcb
inc
push
aas
xor
jns
ds
scas
pushf
aam
adc
sub
ror
rcll
jbe
in
fsubl
dec
call
sub
ret
jo
sbb
andl
xor
xchg
jecxz
outsb
and
push
inc
inc
mov
out
vmovdqa
or
xor
cwtl
mov
cld
push
js
pop
cli
sti
jbe
fidivs
es
sbb
jle
out
ja
or
test
ret
data16
pop
push
xor
xor
hlt
pop
xor
pop
lods
sarb
and
inc
add
jp
jbe
stc
inc
push
pop
imul
loop
clc
cli
sub
pop
sub
addr16
fdivs
ds
cwtl
iret
inc
cmp
sub
rcr
and
mov
xor
fdivl
mov
shll
add
mov
jg
loop
lcall
and
mov
gs
push
orb
arpl
lock
push
loopne
sub
mov
out
mov
movsbl
mov
ret
xchg
fbstp
or
and
rcl
ds
call
pushf
cmp
rcl
and
and
jmp
pop
enter
mov
fwait
ljmp
xchg
ja
inc
adc
ret
push
lret
int3
cmpsl
pop
jmp
rclb
push
pop
pop
mov
inc
cmpl
dec
and
push
adcb
mov
jecxz
clc
or
mov
inc
clc
cwtl
mov
fiaddl
xchg
out
loope
stos
sub
add
cld
int
xor
push
sub
das
mov
in
pop
pop
dec
and
aam
lods
cmp
dec
stc
stos
cmp
pop
call
mov
sub
push
shrb
sbb
lret
jge
dec
int3
sbb
inc
mov
out
mov
mov
enter
sbb
ss
push
pushf
mov
push
cmc
jmp
enter
leave
fimull
pop
push
iret
sbb
cld
push
or
adc
mov
in
fucomp
jbe
add
adc
out
add
int
push
pop
dec
pop
push
mov
iret
sbb
movsb
mov
stc
pop
call
imul
sub
jmp
nop
out
cmp
adc
mov
mov
dec
mull
push
adc
es
loope
pop
push
mov
jb
adc
mov
push
mov
bound
push
fwait
pop
or
and
ret
lods
test
addb
fnstenv
and
mov
adc
fucomip
mov
imul
aad
in
lret
cmpsl
mov
lods
outsl
ds
jmp
int3
add
mov
fdiv
insl
pop
and
adc
xchg
inc
lds
fildll
xor
addr16
or
negb
xlat
jne
sbb
jle
jmp
nop
cs
add
std
clc
xchg
rclb
inc
add
pminsw
les
movsb
iret
add
inc
or
mov
jnp
dec
push
mov
mov
mov
mov
sub
mov
popa
sbb
inc
xchg
faddl
cmp
js
out
inc
out
push
jge
jb
push
sbb
leave
sti
fs
and
and
mov
int3
cmpsb
add
push
fstpl
jno
int3
cmpsb
jmp
jge
add
mov
add
dec
adc
adc
fcmovu
subb
hlt
sub
repnz
sub
jge
mov
adc
aam
adc
cmp
aaa
lock
imul
push
insb
xor
aad
fwait
int3
out
shll
fadds
in
dec
cmpsl
cmp
mov
dec
lret
stc
ljmp
pusha
sub
mul
push
cmp
jecxz
pushf
cmc
in
jp
sar
or
jmp
into
repnz
mov
mov
xor
fs
inc
sub
fwait
outsb
call
mov
dec
pusha
pop
mov
pop
mov
push
mov
mov
cwtl
fucom
pushf
faddp
push
cltd
scas
pop
pop
jnp
cltd
fs
stos
sub
cli
out
sbb
loop
sbb
fnsave
mov
loop
inc
sahf
xor
insl
mov
push
lods
mov
mov
cmp
inc
shl
mov
cmp
dec
xor
cs
bound
ret
rclb
add
mov
push
stos
cmc
mov
inc
and
and
push
rorl
fsts
lcall
negl
inc
inc
add
out
lcall
sub
sub
cltd
inc
push
cmpsb
cltd
pop
fs
inc
cmpsb
pop
lcall
pop
ficomps
loop
xor
stc
inc
shll
or
loop
subl
insb
sub
daa
or
cmp
cld
in
imul
xchg
das
mov
fidivrl
cmp
jo
push
xchg
dec
std
sub
xchg
in
js
adc
inc
ljmp
adc
jle
fcoml
xor
les
and
jns
test
daa
push
lods
aad
pop
enter
dec
mov
sar
addr16
mov
and
sbb
lret
inc
fisubrs
sarb
scas
hlt
fistl
lods
test
les
out
push
xchg
test
mov
je
mov
lods
lock
call
loope
icebp
hlt
f2xm1
inc
sbb
and
push
push
lret
rclb
lret
cmp
jmp
or
notl
lret
shl
inc
mov
je
outsl
imul
or
out
jge
inc
dec
popa
xor
dec
sbb
daa
lods
xchg
lcall
pop
int3
pop
mov
inc
ja
outsb
push
mov
or
mov
lea
mov
into
xor
int
inc
push
outsb
sub
into
rclb
mov
js
insl
sbb
mov
or
sti
loopne
pop
stos
jg
sub
mov
hlt
mov
sbb
or
mov
aas
das
push
xchg
sahf
dec
push
jle
jp
push
popf
sbb
movsl
or
js
addr16
scas
fsubs
test
fldl
xor
pop
out
mov
pop
inc
adcb
mov
cmp
sti
clc
xchg
add
sbb
cmpsb
js
mov
mov
xchg
scas
sub
movsl
enter
addr16
aam
inc
fisttpl
sub
pop
mov
xor
fisttpll
stos
mov
jg
or
pop
lock
stos
loopne
mov
sar
xchg
jge
fsubr
ljmp
lahf
ret
or
outsb
lea
sbb
ds
mov
cli
icebp
lret
pop
xor
and
bound
movsl
imul
in
jle
xorl
xchg
jle
mov
or
sahf
pusha
fsubrl
les
mov
jbe
push
clc
inc
aaa
arpl
lods
daa
cwtl
aas
xchg
jecxz
mov
and
mov
out
sub
mov
repz
add
push
sbb
sbb
push
shl
arpl
push
adc
loopne
fisttpll
sub
shll
and
or
pop
mov
rcrl
mov
add
outsl
add
or
dec
mov
dec
sub
fwait
xchg
adc
stos
outsb
out
leave
mov
dec
fwait
vminpd
or
ret
add
dec
aaa
mov
test
push
xor
mov
push
sbb
mov
sti
push
mov
sub
pusha
popf
jg
inc
lock
in
dec
test
pop
jg
mov
lods
pop
shlb
paddsb
outsl
xchg
aas
jge
imul
mov
cmp
push
sbbb
xchg
stc
repz
mull
jne
inc
push
jp
psrlw
xor
loope
add
rorl
in
hlt
push
lret
cwtl
int
xor
xchg
xchg
ss
mov
sub
jae
aad
inc
in
push
movsb
push
and
add
movsb
lahf
sub
inc
das
rcrl
jae
pop
sbbb
cmp
lret
or
mov
cmp
shrl
xor
or
xchg
mov
inc
shlb
or
sub
and
xor
repnz
or
lret
test
lret
aam
sbb
rcl
and
mov
xlat
mov
shl
sarb
dec
arpl
lock
jp
jne
rclb
mov
repz
test
jb
pcmpgtd
pop
sar
jmp
inc
xor
fs
addr16
jns
out
and
je
push
inc
dec
add
insb
or
pop
rcl
xor
ljmp
dec
xchg
lea
pop
xor
pop
xor
mov
dec
fcomps
xchg
sbb
xchg
push
jg
stc
push
mov
mov
popf
adc
call
out
mov
pop
sti
sub
dec
sub
fwait
xchg
aam
sbb
xor
xchg
mov
fisubrs
mov
dec
jb
xchg
faddl
xor
jnp
sbb
cld
orl
mov
je
lahf
inc
mov
sahf
clc
jle
push
aaa
jge
shl
mov
cwtl
jecxz
lcall
popf
jbe
lea
cmp
ficoms
pop
cmp
inc
in
sub
jle
fcoml
in
dec
hlt
shlb
cwtl
dec
mov
pop
add
lahf
ss
fbld
int
sub
sub
jne
das
pop
out
xchg
bound
stos
adc
in
in
dec
idivl
xlat
inc
imul
arpl
mov
fs
and
sar
jp
stc
sbb
insl
rcll
sub
sbb
testl
sbb
scas
lods
or
cli
cs
sbb
leave
inc
xchg
retw
pop
or
js
pop
adc
in
mov
ljmp
xor
fdivs
mov
lret
out
lods
cmp
iret
push
aas
ljmp
xchg
mov
cltd
mov
adc
lret
scas
mov
xchg
jns
and
xchg
fs
cli
test
sbb
jl
mov
sub
out
cmpl
cs
movsb
cmp
mov
inc
sub
sub
flds
es
leave
and
pop
lahf
sub
cmp
int3
mov
adc
dec
inc
jnp
subb
inc
push
xor
adc
mov
fldlg2
ret
sarb
sbb
and
mov
in
mov
pop
cmc
pop
mov
aas
push
adc
pop
ss
mov
je
xchg
aas
or
push
sti
repnz
cmp
jb
test
ret
notb
leave
jmp
sub
outsb
mov
popf
mov
mov
mov
pop
aaa
adc
stos
pushf
lret
adc
mov
push
popa
in
jb
jl
adc
pop
pop
jl
xlat
mov
enter
dec
jecxz
dec
mov
out
xor
pop
sub
test
ja
inc
rol
sahf
out
add
and
imul
mov
dec
int3
xchg
iret
or
mov
mov
stc
push
rolb
mov
cmp
sbb
in
xchg
scas
insl
adc
xor
fdivr
pop
out
ss
push
mov
mov
push
sub
jl
or
fisubs
into
xorl
xor
push
loop
mov
cmc
cmp
icebp
pop
lods
test
push
xor
add
sub
fidivrl
ret
dec
nop
imul
mov
add
aas
cmp
movsl
dec
mov
pop
in
adcl
fwait
or
jp
aad
ret
dec
cld
enter
pusha
xchg
test
out
sub
push
inc
push
mov
or
cmp
repnz
lahf
hlt
ljmp
dec
jnp
xor
mov
mov
xorl
fmull
mov
cmpsl
adc
icebp
or
adc
mov
arpl
repnz
notl
lods
cmpsb
lds
add
stc
sar
jl
pushf
clc
add
je
leave
dec
orb
gs
js
fbld
out
nop
adc
jo
push
dec
imul
movb
sub
ja,pn
mov
inc
ljmp
push
ret
sahf
mov
dec
push
xor
aam
add
pop
std
xchg
fstpt
dec
shll
push
or
aad
call
xchg
lods
test
inc
or
loop
add
push
cmp
les
mov
shr
xchg
push
test
negb
into
repz
cmp
scas
or
or
lods
add
add
dec
jle
call
pop
mov
push
cs
sbb
and
mov
and
out
nop
sub
push
mov
js
mov
cmp
xchg
cmp
mov
mov
cli
stc
mov
xor
push
mov
mov
xlat
xchg
adc
mov
or
mov
dec
push
dec
sbb
loop
mov
test
xchg
mov
leave
lds
out
inc
inc
push
xchg
fimuls
fs
andl
mov
sbb
dec
xor
test
outsl
cmpsb
pop
xchg
sbb
pop
dec
lret
stc
lods
xorl
cli
fwait
add
mov
cmp
cli
arpl
dec
mov
pop
loopne
scas
mov
outsb
inc
aam
push
jp
cmpsb
out
pop
outsb
lret
insl
sub
dec
fwait
mov
cld
mov
mov
inc
or
arpl
fwait
cmp
out
mov
and
dec
push
or
push
push
sbb
mov
mov
push
pop
and
xchg
cmc
int
jp
cmc
lcall
mov
je
rorb
call
movsl
push
popl
and
cmp
add
movb
ljmp
sub
sub
adc
or
mov
cmp
or
sub
test
negb
fnstenv
sub
popf
cld
into
xchg
movsl
cmp
pop
js
mov
cmpsb
sbb
push
call
imul
push
ss
and
pop
or
sub
jb
pop
sbb
push
and
imul
imul
jle
cltd
lcall
outsl
lock
je
cld
mov
add
dec
lret
pop
xchg
int3
sub
icebp
xchg
es
sbb
idivl
adcb
xlat
lcall
add
ret
cmpsl
dec
in
mov
pop
jg
loopne
adc
popa
xchg
push
insl
sub
xor
pop
or
lcall
xchg
and
pushf
imul
sbb
push
mov
add
sbb
rcrl
je
repz
lods
test
xchg
xchg
lcall
pop
cmp
scas
cmp
clc
adc
lods
inc
lret
xor
scas
pop
ja
popa
dec
lcall
add
mov
push
gs
cmp
mov
aas
rcr
sahf
out
mov
pushf
jno
cmp
xchg
xor
and
jecxz
enter
rcrb
js
lock
push
pop
das
mov
hlt
mov
mov
pop
dec
push
fidivrl
rcll
jg
mov
mov
jg
push
sti
jecxz
push
in
jbe
or
lret
test
adc
cmp
pop
adc
mov
mov
cmc
pop
add
mov
xchg
sub
and
push
add
mov
pop
das
push
xchg
push
or
dec
push
sbb
icebp
popf
cmp
imul
movsl
adc
xchg
jae
js
or
imul
sarl
in
cmp
xchg
mov
dec
aad
leave
push
cmp
subb
insb
xchg
rcr
push
sub
ret
insb
call
cmpb
aam
push
add
fldcw
bound
jae
pop
inc
lds
shlb
arpl
repnz
mov
or
mov
repnz
jo
cltd
inc
leave
xchg
out
mov
frstor
pop
add
shll
adc
jl
inc
mov
pop
aaa
jno
jns
jle
mov
insb
and
mov
jne
xchg
jle
shlb
mov
sbb
jp
loopne
xor
scas
push
jno
and
add
out
add
push
inc
outsb
lods
cwtl
jbe
xchg
sbb
jns
pop
pop
push
or
or
sub
jle,pt
lea
xchg
scas
dec
fisttps
mov
push
mov
aad
xchg
xchg
rcl
lea
inc
gs
pop
lock
jle
cld
add
jo
mov
push
imul
pop
add
std
fldl
xor
mull
xor
and
clc
mov
sti
inc
fldenv
xchg
pop
lea
js
xlat
jbe
jecxz
jg
pop
lcall
dec
jne
cmc
and
out
outsb
jns
jo
add
mov
cmp
ficomps
loop
mov
std
cwtl
or
dec
cs
mov
mov
aad
inc
push
adc
xorl
cwtl
mov
mov
jbe
pop
call
or
xchg
push
push
sti
mov
dec
out
pushf
stos
adc
cmc
pop
mov
push
fsubp
adc
sbb
push
push
jg
push
andb
pop
call
or
je
aad
lret
aaa
sahf
popa
push
rcrb
jmp
pop
bound
dec
xchg
lods
lods
jae
stos
mov
loop
test
lcall
xchg
add
mov
dec
out
addr16
jge
cmpsl
lret
shrl
bound
lahf
in
lds
lret
test
jle
fisubrl
fistps
clc
aas
lods
scas
cltd
je
cmpl
add
and
bound
and
mov
sub
cmc
cmpsl
addr16
lret
jge
mov
inc
push
test
pusha
imul
sbb
dec
scas
subb
jp
das
inc
jno
push
cmp
bound
repnz
dec
fisttpll
lcall
outsb
test
outsl
imul
xor
mov
xor
aaa
lea
or
xchg
mov
scas
mov
movsb
push
jno
movsb
push
adc
jnp
dec
iret
pop
cltd
cmpsb
dec
add
pop
xchg
jo
adc
lods
and
popa
imul
loope
mov
repz
sti
fwait
adc
inc
inc
adc
fwait
popa
rcrb
mov
or
mov
jmp
sub
in
mov
push
and
sub
lret
les
dec
xchg
push
mov
aad
pop
xchg
sbb
mov
rcrl
pop
mov
daa
movsl
add
dec
insl
lods
leave
push
dec
push
mov
dec
fwait
pop
and
xchg
aaa
insb
movsb
lret
out
dec
ss
fsub
pop
stos
xor
ljmp
dec
mov
lock
cmp
sub
das
xchg
mov
fadds
bound
rcr
adcl
cmc
add
push
es
imul
lea
je
pop
repz
add
jl
push
aam
nop
mov
ret
loop
into
mov
popf
out
dec
push
aas
or
cmpsl
cmpsb
dec
cltd
mov
movsb
or
cli
in
sub
clc
stos
mulb
lret
clc
mov
fwait
and
imul
push
pop
xchg
mov
lea
std
into
addr16
test
lret
cmp
scas
mov
push
lret
or
jp
lahf
mov
xorl
pop
dec
mov
xor
sbb
sti
cltd
gs
jno
jne
mov
xor
cmpb
imul
or
jmp
xchg
adc
push
hlt
mov
ja
mov
adc
cwtl
sbb
ds
fdivl
xor
dec
mov
push
pop
das
mov
lret
nopl
daa
les
push
sahf
ret
jnp
cwtl
add
jl
out
lods
jne
stos
sub
and
jno
out
bound
xorl
mov
mov
nop
xor
adc
loope
call
push
lock
loopne
inc
jno
and
or
insl
in
sub
sbb
popf
sub
inc
cltd
js
ficomps
sub
fnstsw
jle
mov
jge
mov
xor
rol
push
jmp
xlat
mov
aad
sbb
xchg
lea
push
sarl
xor
fdivrp
icebp
push
and
adc
xchg
aas
mov
daa
push
adc
enter
movb
mov
cwtl
lods
xchg
leave
mov
daa
ret
stos
cmp
jl
sbb
out
xor
dec
and
mov
sahf
push
mov
sbb
jge
pop
mov
fcompl
out
push
inc
mov
movzwl
es
jae
mov
pop
jnp
iret
leave
jb
jmp
ljmp
jbe
mov
mov
add
dec
test
addr16
adc
fisubrs
fs
int3
or
cs
std
repnz
push
aad
pop
leave
push
nop
mov
push
pop
sub
xor
clc
jp
jnp
pop
cltd
sbb
mov
movsb
pop
mov
incl
cmpsb
aad
and
daa
mov
int
testb
and
aaa
fwait
jge
loopne
and
je
je
sarl
add
insl
push
lds
int
mov
sbb
push
int
jle
into
aas
add
cmc
jp
and
xchg
xchg
pop
cmc
pop
add
sub
divb
ffreep
subl
mov
nop
or
outsl
gs
sbb
test
aas
add
ss
inc
into
xchg
or
lods
sbb
fmull
stos
test
shl
gs
or
in
bound
repz
pop
adc
mov
dec
test
sbb
or
repz
roll
adc
dec
xor
mov
jp
stc
jbe
push
inc
sbb
xchg
mov
std
and
mov
xchg
in
outsl
mov
fcoml
rol
adcl
mov
test
sbb
xchg
sti
jl
add
imulb
dec
in
in
aam
xchg
sbbl
or
shll
fcmovnbe
outsl
popa
dec
sbb
sub
cmp
xlat
rolb
imul
lahf
mov
and
dec
mov
js
fwait
mov
xchg
in
push
and
pop
stos
xchg
jmp
xchg
jecxz
push
test
or
push
test
cmp
dec
mov
subl
mov
mov
aad
mov
sub
sub
das
and
push
or
mov
pop
idivl
inc
idivl
pop
outsb
cmp
rol
or
sbb
dec
subl
aas
push
and
loopne
inc
dec
addb
dec
pop
sub
pop
xchg
lret
test
mov
and
iret
ret
sahf
dec
and
popa
test
cli
nop
mov
xor
rcrl
inc
repz
repnz
sub
stos
ud2
test
pop
adc
mov
or
mov
jmp
jb
roll
int3
cmp
pushf
icebp
in
or
mov
popa
adc
push
pop
dec
outsl
lret
adc
daa
xlat
dec
jle
test
fbstp
and
adc
jnp
in
or
adc
pop
mov
xchg
inc
jl
aas
jns
call
or
push
push
in
jg
test
mov
in
lock
add
aam
push
in
cmp
loopne
mov
enter
cld
mov
mov
in
clc
xor
out
inc
orl
jmp
fucomi
jmp
pop
push
jb
les
xor
fldcw
testl
xlat
add
std
mov
jb
push
xor
ja
xchg
lock
sbb
daa
sbb
test
sbb
mov
rcll
or
sbb
loopne
out
pop
in
ret
iret
imul
xchg
jns
or
adc
sbb
les
nop
stos
jmp
ljmp
xor
mov
je
loop
mov
push
fwait
dec
dec
pop
ficoml
xchg
sub
in
out
lcall
or
scas
and
mov
jb
lret
push
das
sbb
push
push
adc
mull
nop
or
pop
data16
dec
scas
clc
jnp
jbe
ror
add
push
mov
sbb
outsl
imul
movsl
and
insb
rorl
xor
push
jne
out
addr16
inc
xchg
sti
jmp
loope
and
xchg
push
sub
inc
mov
and
rsm
mov
xor
inc
shll
mov
pop
shll
adc
es
iret
pop
outsb
das
ret
sub
adc
jno
je
bound
sbb
add
cmp
lret
in
hlt
adc
pop
call
mov
mov
inc
sbbb
cli
movsb
push
sub
xchg
pushl
ja
in
add
and
sbb
push
mov
fcomps
inc
push
xchg
test
sarb
mov
pop
out
dec
fwait
insl
and
pop
out
cld
in
ret
call
and
dec
xchg
in
fildl
mov
fdivrl
pop
mov
fstp
xchg
add
adc
dec
sbb
pop
fsub
lock
das
jl
dec
jne
pushf
lret
mov
inc
mov
cmp
dec
stos
imul
mov
fidivs
mov
stos
xorl
outsb
add
out
push
inc
cmp
jp
dec
dec
mov
test
mov
fistpl
sbb
lds
cmp
mov
mov
int3
adc
push
in
dec
add
movsb
add
mov
add
scas
mov
inc
sub
mov
dec
mov
xchg
aam
das
inc
add
leave
ret
movsl
jnp
jo
pusha
jge
cwtl
loop
push
stos
outsl
mov
shll
pop
pop
mov
jp
push
sub
sub
push
xor
jnp
cli
mov
jnp
jne
and
cltd
shlb
xchg
cmpsl
sub
push
lret
in
push
in
int3
scas
test
test
fwait
or
std
notb
xor
popa
mov
sub
sbbl
inc
lcall
aad
mov
jnp
xchg
in
xorb
and
outsl
sub
rorb
push
sbbl
sbb
cmpsl
stos
inc
sbb
dec
push
mov
sbb
mov
stc
jl
leave
movsl
push
xor
fdivr
mov
mov
scas
push
popf
mov
xchg
imul
mov
lcall
ret
ds
inc
jle
call
cmp
and
mov
mov
aaa
ja
inc
jbe
mov
icebp
sbb
outsb
shrl
jne
iret
test
cmp
lahf
sub
clc
fcmove
cli
out
inc
mov
or
loope
call
and
andb
ja
push
xchg
les
or
negb
jmp
jno
cmp
add
push
and
lods
mov
jg
adc
dec
ret
mov
jge
adc
xor
xchg
push
xor
mov
cld
mov
and
jg
outsb
arpl
repnz
and
daa
dec
jge
mov
pop
push
mov
xlat
enter
and
jmp
xchg
fcmovnb
enter
cmp
pop
lock
cmp
sahf
xchg
arpl
dec
pusha
pop
dec
add
inc
out
xchg
test
sub
adc
mov
push
cmp
imul
inc
loop
sbb
movsl
fwait
cmpsl
arpl
test
loopne
sbb
into
and
and
jle
mov
fdivrl
aaa
mov
cmp
pop
sub
into
push
push
fcoml
and
int
adc
aaa
adc
scas
xchg
loop
mov
sbb
jmp
or
repz
jb
dec
sti
dec
cmpsb
adc
jne
ss
mov
jns
frstor
jb
mov
mov
aam
int
sbb
inc
cmp
jge
lcall
stos
sti
jne
push
or
hlt
adcl
mov
mov
add
mov
xor
leave
fcmovnu
outsb
jge
mov
sub
pop
jno
push
cmp
arpl
inc
jle
jb
push
inc
out
jbe
xchg
pop
sub
sarl
mov
jne
jno
sahf
ljmp
xchg
sbb
xor
decl
test
mov
dec
out
push
push
or
sahf
popf
or
cltd
or
addr16
fcomps
fldenv
mov
adc
mov
outsb
mov
sub
jl
mov
mov
mov
dec
add
sbb
loop
into
arpl
push
mov
sbb
jle
cmpb
mov
or
test
jl
cmp
mov
jbe
mov
mov
jo
mov
ja
mov
pushf
pushf
mov
and
mov
cltd
lahf
jnp
and
dec
flds
aaa
pop
sbb
aad
jae
fmull
cwtl
scas
mov
xor
sub
vpmacssdqh
loopne
mov
cmp
loope
xor
jmp
xor
cmp
out
adc
pop
stos
fwait
pop
cmp
ret
rolb
adc
sbb
int3
fbstp
add
movsl
int
jnp
dec
jo
jns
push
jp
lcall
or
inc
and
sub
xchg
mov
mov
push
adc
lret
movsl
mov
andl
add
cmp
or
pop
jecxz
addr16
pop
sar
std
adc
cmp
mov
std
icebp
xchg
aam
aam
dec
stos
jge
int3
icebp
testb
test
mov
mov
subb
nop
popa
movsl
pushf
xchg
std
shll
out
popf
loope
rorb
pusha
xchg
or
push
imul
cmp
push
jmp
push
pop
dec
lahf
in
jmp
inc
and
pop
mov
or
push
xchg
mov
jle
out
lock
stos
and
xor
shr
dec
cltd
sub
jnp
inc
mov
std
cs
or
xchg
inc
rcrl
inc
push
setne
daa
rol
outsl
xlat
test
dec
fs
inc
int3
test
repnz
jl
rclb
mov
cmpl
popf
rol
xlat
outsl
fstl
add
mov
sbb
rolb
xchg
inc
std
sarl
adc
mov
adc
xor
inc
aam
in
ret
rorb
and
aad
outsb
and
mov
push
loope
ds
dec
sub
lcall
mov
push
stos
sbb
jne
inc
jecxz
ret
pop
mov
mov
jno
dec
cmp
fsin
inc
inc
cltd
adcl
jmp
sbb
loopne
outsl
push
notl
mov
les
test
lods
mov
mov
push
push
mov
sub
mov
adc
adc
sti
loope
xor
ret
push
push
icebp
cld
xchg
ss
pop
push
sahf
and
add
sub
fadd
push
outsl
dec
test
js
int3
xchg
sahf
fs
sub
cld
mov
push
sub
ds
mov
lret
dec
jae
mov
imul
ljmp
add
sahf
add
dec
xor
fwait
pushf
xor
aas
sbb
and
mov
cmp
inc
xchg
or
cmpsl
jnp
dec
push
xchg
xchg
mov
xchg
jmp
mov
mov
xor
repz
xchg
cltd
mov
and
mov
or
push
fnstsw
push
repz
sub
adc
inc
mov
mov
mov
ja
and
mov
push
add
jp
sbb
xchg
sub
and
lret
add
mov
mov
outsl
jge
jb
pop
mov
adc
push
mov
inc
rolb
rcrl
fsubs
insl
outsb
je
xchg
dec
je
fwait
ja
mov
mov
aam
rcl
iret
and
addr16
push
dec
lods
lret
pushf
sbb
mov
sahf
adc
dec
aaa
repz
lods
xor
sub
push
push
mov
mov
or
in
mov
push
cmp
rol
int
jne
xor
sub
push
lds
xor
ja
mov
gs
mov
movsl
pop
push
je
sub
out
mov
fcoml
pop
jg
aas
lods
push
pop
jecxz
jns
fsubr
mov
sarl
jmp
aam
scas
out
stos
mov
jmp
sbb
sub
lods
jge
fmuls
and
push
movsl
xchg
or
inc
cld
dec
rclb
ja
mov
mov
jle
jp
jmp
icebp
xor
xchg
icebp
mov
push
cmp
lret
adc
cwtl
jae
cmc
and
les
dec
jae
adc
push
jns
cwtl
pop
imul
mov
inc
push
mov
call
sbb
fwait
pop
pop
in
mov
shrb
les
ljmp
mov
lods
clc
hlt
bound
ds
inc
stos
pop
mov
inc
xchg
jb
movsb
mov
les
enter
or
mov
popa
sbb
lds
out
ret
add
dec
in
lock
inc
inc
jae
xchg
out
dec
outsb
rcr
push
inc
add
jg
mov
cwtl
mov
jmp
in
nop
fs
xor
daa
sbb
mov
xchg
inc
xor
pop
mov
and
sub
ss
jns
and
mov
cmp
andb
jbe
fnstcw
mov
xor
mov
sub
xchg
and
jge
cltd
or
push
repz
shll
sarl
lea
fwait
rolb
jno
xor
xchg
daa
adc
sbb
fisubl
jo
popa
aas
pop
jo
pop
mov
popa
fsts
inc
and
inc
lods
sbb
lods
adc
test
test
mov
cmp
in
xchg
push
stos
mov
or
arpl
je
mov
push
inc
lock
hlt
clc
leave
fwait
addr16
imul
jge
or
jns
scas
roll
push
inc
pop
xchg
lds
sub
stc
aam
push
and
mov
jmp
jo
fs
inc
mov
dec
mov
shll
fcom
std
es
and
cmp
sbb
inc
jo
fdivl
insb
adc
mov
loopne
dec
mov
xor
pop
je
mov
mov
lret
or
jp
push
jmp
mov
mov
mov
popa
in
in
add
push
jl
xor
fucomp
leave
or
lods
mov
mov
jg
sub
xor
cmc
jle
insl
xchg
fistpll
sbb
cmpsb
pop
movsb
lret
sbb
loopne
dec
mov
pop
cmp
pop
xchg
lcall
mov
fdivrl
mov
enter
lea
inc
sbb
in
jl
cs
jno
das
scas
loop
pop
outsl
daa
push
imul
cmp
js
sub
loopne
push
hlt
mov
pop
or
xchg
iret
ds
sub
mov
xor
xchg
mov
inc
xor
stos
movsl
push
inc
dec
adc
call
js
call
test
mov
adc
mov
inc
mov
out
cmp
hlt
sbb
mov
xor
xchg
inc
jecxz
xor
xor
pushf
lods
cld
push
lea
ljmp
sbb
frstor
stos
sub
clc
in
mov
cld
aas
lock
hlt
jle
or
sub
testl
inc
push
setge
mov
and
outsl
iret
and
jl
rorb
xchg
notb
sub
jno
lea
push
nop
mov
adc
lock
sub
pop
pop
push
out
das
add
popa
setne
add
mov
stos
jbe
xor
fnsave
insb
xor
sub
fisubrs
in
call
xor
xlat
rcrb
pop
adcl
lret
scas
mov
mov
data16
outsl
out
test
add
add
fidivs
js
pop
shll
xchg
mov
pop
loope
adc
push
push
push
in
out
jmp
mov
or
mov
sub
or
cld
leave
es
fldl
div
or
cmp
insl
scas
push
mov
or
fbld
mov
fiadds
push
adc
mov
lret
divl
jl
or
mov
jae
test
jle
lods
jp
mov
dec
addr16
imul
int3
dec
pop
xchg
rcrb
add
ret
pusha
in
fcmove
fidivrl
icebp
jl
add
push
adc
ficomps
fstpt
add
popf
insl
popf
adc
fldenv
iret
pop
xor
popa
rcl
and
mov
std
sbb
cltd
xchg
jl
out
inc
popf
sub
pusha
jle
lds
fists
inc
jp
xchg
in
jb
repnz
xchg
rorl
cld
jns
jge
lret
xchg
adc
das
mov
in
stos
sti
cmp
ret
and
arpl
shufps
test
sbb
dec
divb
adc
sub
mov
sub
mov
jno
and
lcall
cld
jg
enter
adc
nop
pop
inc
mov
pop
mov
lcall
popf
xchg
adcl
int3
pop
fwait
sti
daa
in
cltd
insb
jg
addr16
mov
or
push
sbbl
pop
adc
scas
cmp
cli
xor
and
inc
xor
push
xor
int3
pop
ror
ds
mov
ss
jg
pop
test
or
pop
mov
cmp
cmp
and
lods
ficompl
push
mov
outsb
out
or
cli
cmc
leave
sbbl
rol
rorb
xchg
add
jge
std
repz
out
xchg
das
fsubs
sub
fcmovb
test
mov
pop
mov
add
inc
loopne
pop
ljmp
or
mov
add
jnp
push
lock
adcl
mov
leave
imul
push
adc
ss
in
in
das
lods
jge
adc
imul
out
mov
loop
pop
sti
aam
lcall
repz
mov
je
jae
arpl
mov
push
cmp
ds
dec
mov
push
aaa
add
mov
xlat
push
push
orb
add
aad
icebp
stc
in
mov
ficoms
in
arpl
fcoms
in
jle
cmp
ret
add
mov
int3
fwait
out
lret
outsl
fidivrs
sbb
lret
lea
sub
dec
xchg
mov
adc
and
dec
adc
jg
xchg
xchg
push
mov
push
pop
mov
pop
aad
mov
icebp
inc
divb
cwtl
ss
inc
fwait
push
out
lret
stos
popa
cmc
lahf
filds
jmp
jle
cmp
xchg
data16
ss
mov
aas
shl
loop
pop
hlt
mov
movsb
add
push
pop
cli
in
movsl
xor
and
jecxz
fildl
lahf
and
push
repnz
dec
mov
test
dec
and
in
loop
out
clc
jmp
inc
add
hlt
pop
jb
push
scas
adc
xchg
mov
std
ret
mov
je
jno
cmp
lahf
scas
xchg
mov
out
cmpsb
es
and
xor
mov
cmp
cs
xor
sub
xchg
ja
pop
fwait
inc
mov
sbb
in
arpl
dec
loop
sub
jne
mov
in
jle
inc
and
pushf
jg
pop
hlt
pop
jno
and
push
sub
popl
and
test
addl
dec
and
lods
adc
shl
mov
push
aas
push
xchg
cmpsl
insl
sub
push
push
push
or
jb
or
push
cmp
xchg
sub
repz
add
cmpsb
mov
scas
cs
test
addl
or
or
hlt
mov
bnd
dec
outsb
repnz
outsl
cmp
lret
es
imul
pop
daa
push
lahf
inc
lret
leave
push
mov
and
scas
inc
pop
in
jle
loope
ret
loope
jne
or
test
push
mov
mov
cmp
in
or
pop
jne
dec
add
lcall
sti
push
je
loop
add
dec
pop
in
sub
in
mov
xchg
pop
pop
and
or
add
mov
adc
pop
lret
push
test
ja
outsb
fistps
aad
pusha
iret
add
sbb
cwtl
out
outsb
push
divl
or
add
pop
les
push
fcomp
inc
cmp
sub
movsl
mov
loop
xlat
inc
enter
loop
les
push
in
test
xor
mov
orb
sar
add
push
inc
fs
or
adc
jp
mov
loopne
movsb
sub
jecxz
mov
xchg
lret
inc
repnz
sbb
scas
dec
roll
lods
inc
stos
and
enter
xchg
out
cmpsb
lds
outsb
lret
dec
das
imul
adc
nop
cmp
mov
cmp
cli
mov
or
jg
out
xchg
inc
mov
inc
call
pop
xlat
mov
pop
add
fldl
vandnps
sbb
or
dec
mov
faddp
mov
les
loopne
mov
jmp
aaa
pop
push
mov
xchg
cmp
notl
cmp
ljmp
pop
sti
xchg
dec
loope
scas
lds
jecxz
jge
adc
pop
in
mov
cmpsb
xchg
dec
mov
jbe
test
cmpsb
jmp
rol
call
gs
inc
adc
popw
xor
in
mov
call
cmp
jg
push
push
mov
pusha
cmp
or
pop
push
stos
mov
mov
ficompl
mov
sbb
jns
iret
popf
or
mov
sub
enter
insb
xchg
jo,pn
nop
and
jle
mov
jns
xor
mov
push
rcrl
cmp
testl
arpl
xchg
sub
sbb
push
jns
push
gs
addb
mov
pop
test
call
jbe
lods
subb
out
pop
insb
scas
or
mov
mov
leave
sbb
sbb
xor
sbb
lahf
js
mov
js
repnz
test
pusha
adc
mov
mov
fbld
push
cmpsb
sub
cmpsl
loope
sbb
push
movsb
push
xor
sub
aas
nop
movl
adc
fdivr
je
mov
out
sub
jp
add
dec
mov
out
xor
add
xor
out
loopne
jne
mov
pop
sub
ret
xor
insb
pop
xchg
mov
cmp
pop
push
movsb
les
sbb
jnp
fwait
ljmp
das
sub
xlat
mov
pop
fnstcw
inc
push
ret
ja
sbb
jle
sbb
add
test
push
xchg
push
mov
jo
jns
cld
dec
push
out
pop
or
in
arpl
scas
movb
mov
in
adc
push
imull
aas
stc
fidivrl
ficoms
mov
aam
repz
fldenv
loope
dec
sub
inc
pop
cmp
dec
xchg
adc
fisttpl
push
mov
std
ret
jmp
xchg
aam
popa
bound
fdivr
mov
aas
cmp
mov
outsb
fs
enter
or
pop
fisubl
in
sarl
sub
xlat
mov
test
push
add
sbb
jbe
pop
cli
push
fcoms
xor
shlb
pop
ljmp
clc
jnp
lock
xchg
rclb
mov
cli
xchg
and
rorl
push
dec
inc
repz
out
out
inc
cli
int3
sbbb
jns
stc
hlt
or
rclb
fst
ja
mov
sahf
xor
xchg
mov
or
sti
stos
stos
sbb
push
fs
cmp
repz
mov
xorl
push
xor
and
or
or
jae
mov
and
pushf
cmp
and
movsl
push
mov
mov
lea
imul
and
ja
push
lea
jnp
pop
jo
jbe
mov
mov
dec
and
sbb
lcall
test
adcl
jecxz
repnz
adcb
hlt
pop
out
inc
sub
js
scas
sub
outsl
in
add
or
shlb
inc
push
lret
dec
cmpsb
mov
add
movsl
mov
mov
mov
mov
jne
mov
call
push
fisttps
mov
gs
lock
jmp
ficoml
pop
or
mov
jb
iret
insl
xchg
out
cmpsl
ljmp
fldz
push
les
xor
movsb
pusha
xchg
idivl
sbb
test
lcall
je
movsl
imul
and
pop
push
add
out
scas
push
push
xchg
mov
jp
mov
xor
cmp
in
xchg
mov
or
cli
ret
stos
inc
cmp
jl
popf
push
lcall
std
sbb
inc
mov
mov
mov
cmp
xchg
cld
xchg
mov
or
lret
subb
mov
and
sbb
ja
sub
jae
push
push
push
int
jp
adc
lds
mov
push
or
sbb
inc
adc
mov
outsl
pop
add
lea
push
mov
mov
jl
jge
mov
movsl
sub
add
push
ds
mov
rclb
or
in
rcr
sbb
mov
daa
mov
fprem
xlat
test
inc
inc
lahf
or
dec
push
jne
xchg
stc
or
mov
shrb
loop
sub
ss
out
sarb
movb
mov
call
in
sbb
out
xchg
pop
mov
fs
dec
lret
xchg
loop
xor
aaa
mov
incb
lret
jo
inc
push
aaa
pop
or
sbb
cmp
jnp
sub
rcll
jg
lret
xchg
dec
sbb
js
sahf
inc
jecxz
fidivrs
fwait
sub
lods
outsl
sbb
add
jp
rolb
sub
out
mov
aad
into
scas
mov
in
inc
mov
jecxz
les
popf
ficompl
jg
push
jae
sbb
mov
and
or
dec
mov
dec
lret
inc
sti
mov
lods
lods
clc
dec
and
cmp
js
mov
xor
pop
dec
rolb
stc
xchg
imul
mov
jno
cld
xchg
mov
ss
aam
sbb
dec
ljmp
addl
dec
filds
jg
push
push
loopne
sbb
push
cmpsb
add
jae
xchg
jbe
scas
fs
je
roll
adc
stos
jne
test
jae
pop
sbbl
push
or
daa
out
hlt
mov
push
push
imul
imul
inc
pop
and
shl
and
movsl
mov
mov
jns
jle
xchg
mov
push
dec
imul
xlat
mov
cmp
insb
imul
push
mov
fs
shlb
pusha
shlb
insl
xchg
adc
aas
jmp
pusha
jecxz
jl
hlt
dec
daa
and
jae
in
ror
cmp
pushf
adc
ljmp
popa
ss
imulb
or
insl
int
in
shll
inc
push
or
jnp
cmpsb
cmpsl
jbe
lret
jle
stos
mov
mov
cs
push
jo
adc
daa
faddl
jb
push
mov
lret
nop
cmp
cltd
sbb
cmpsb
add
sahf
or
mov
add
hlt
dec
sbb
pop
mov
pop
or
sbb
lret
mov
add
add
mov
dec
cmc
pusha
out
xor
inc
arpl
fmull
ret
mov
jnp
mov
jb
or
mov
dec
stos
mov
scas
cld
and
dec
movsl
cmp
cmp
cmpl
inc
mov
nop
mov
je
aaa
bound
pop
mov
jns
icebp
shrl
adc
lods
dec
mov
mov
test
push
dec
decb
sbb
cmp
pop
cmpb
and
cmc
pop
into
xchg
xor
mov
sbb
jp
jle
lds
insb
cs
es
add
xor
out
mulb
call
imul
pop
jb
mov
in
outsl
imul
sub
cmp
jb
xchg
ret
fwait
mov
test
hlt
fwait
enter
bound
inc
mov
xor
enter
mov
sub
sub
sbbb
dec
or
sbb
outsb
cli
outsb
mov
test
inc
lcall
adc
sbb
xor
ja
jl
sahf
xor
and
or
pop
imul
and
or
fldt
out
xchg
xor
mov
xor
mov
inc
pop
mov
sub
or
sbb
mov
or
test
gs
pop
call
rcll
es
push
push
pop
in
call
pop
push
addr16
lret
loopne
xor
pop
hlt
push
fisubs
imul
xchg
xchg
pop
pop
call
lahf
sbb
movsl
xchg
es
add
mov
cld
incb
push
jmp
aad
jp
add
dec
add
pop
sub
bound
in
push
cmp
imul
test
adc
rcll
in
movsb
dec
aaa
stc
orl
mov
lds
xchg
out
test
dec
aaa
xchg
adc
fwait
sbb
lds
pop
pop
lret
scas
cmpb
adc
pop
mov
cmpsb
fnstsw
and
outsb
cwtl
mov
in
mov
lods
and
xor
fdivrs
xchg
mov
inc
jmp
sbb
cmp
add
out
sbbl
imul
mov
popf
pop
push
mov
pop
push
xchg
rorl
adc
imul
ja
loope
rcll
jae
mov
in
xchg
xorl
xor
lret
and
scas
xorl
jne
sbb
add
mov
xchg
push
mov
jmp
test
imulb
mov
outsb
xorb
lea
lods
mov
xor
std
sub
push
inc
or
adc
ret
hlt
sahf
mov
jmp
stos
or
xorb
inc
fdivs
stos
mov
outsb
cld
push
add
pop
mov
pop
inc
push
sbb
mov
sub
mov
sahf
mov
mov
push
adc
adc
stc
xchg
inc
jecxz
cmpsb
mov
jle
into
xor
mov
and
jbe
insl
mov
inc
fs
daa
pop
or
test
xor
xor
and
add
out
test
mov
jge
sbb
mov
mov
stos
dec
jo
shrb
cmp
mov
push
std
inc
loope
mov
cmp
hlt
add
sub
mov
sub
scas
test
mov
sbb
ljmp
mov
push
jge
jp
inc
cmp
mov
ret
cmp
insl
cmc
mov
mov
jp
push
lods
pop
frstor
shll
ficoml
adc
ret
test
mov
je
adc
push
movsb
fidivl
mov
mov
push
push
sbb
gs
push
mov
lock
jns
lea
sub
adcb
rcr
int3
jns
mov
push
mov
push
push
inc
ret
notb
push
mov
aad
add
pop
nop
ret
je
pushf
jge
push
into
cmpl
cmp
repz
or
into
inc
jae
sub
fcmovb
inc
pushf
fwait
popl
mov
xchg
mov
sub
loopne
pop
leave
call
mov
in
add
dec
cs
pop
jns
xor
aad
xchg
lods
iret
test
ds
stos
inc
mov
lret
push
add
sbb
fiadds
arpl
popa
mov
xchg
cmpsl
ret
adc
cmp
mov
stos
je
or
stos
add
inc
cltd
adc
or
lcall
inc
mov
mov
adc
mov
in
push
or
ds
jb
ds
addr16
sbb
rorl
or
mov
add
jmp
aad
out
jecxz
mov
or
jl
xchg
iret
sub
inc
sbb
pop
out
dec
add
dec
mov
mov
push
mov
rcr
pop
nop
xor
jecxz
gs
inc
inc
or
mov
mov
mov
pop
cmp
popf
repz
push
daa
xor
lea
bound
out
movsl
mov
and
cmp
mov
addr16
shll
ljmp
cmpsb
mov
xchg
and
sbb
int3
xchg
idivb
pop
loope
into
ds
lcall
xchg
mov
movsb
jge
stos
xorl
cmp
mov
push
xlat
call
popf
aam
jb
scas
aaa
jcxz
jge
cmp
push
push
adcb
pop
enter
sbb
jmp
les
cmc
xchg
lcall
mov
fldcw
cmp
in
loope
clc
mov
sbb
nop
mov
and
dec
ss
or
cmpsb
out
mov
jb
sub
shlb
inc
repnz
sarb
ret
stos
push
xor
cs
sub
pop
hlt
adc
and
push
cmp
jge
popa
push
jae
lcall
into
scas
pushf
mov
adc
sbb
or
insb
stos
out
popf
das
aas
or
es
mov
in
sub
fs
cmc
and
cmpsb
push
out
mov
out
or
aad
mov
jmp
clc
call
mov
xchg
xor
in
or
aad
cmpsb
loopne
pop
pusha
and
mov
mov
aad
stos
stos
sbbb
pop
cmp
lods
xor
xor
stos
cmc
mov
cltd
jne
imul
roll
xor
out
mov
adcl
lahf
mov
jle
sahf
int3
sbb
les
jns
add
enter
mov
or
enter
int
hlt
xor
aas
sub
and
xchg
mov
mov
jnp
int
lcall
jns
mov
add
fdivrl
jo
and
push
or
insl
nop
dec
enter
or
dec
sbb
fmuls
jg
enter
jns
cli
movl
addr16
rorl
and
push
imul
mov
cmp
stc
dec
xor
dec
test
mov
movsb
adc
xchg
push
subl
jae
movsl
sete
ljmp
leave
adc
int3
push
sbb
sbb
std
scas
pop
repz
subb
into
lods
scas
adc
inc
lock
xchg
fsubr
outsb
jno
xchg
call
fwait
test
les
or
lods
aad
pop
pop
ds
movsb
sbb
std
int3
sub
mov
push
enter
xlat
rcl
cmpsl
mov
popa
adc
jno
es
loop
js
leave
pushf
gs
lods
sub
dec
jle
lcall
nop
add
push
jbe,pn
push
or
cmp
xchg
cmp
pushf
add
loop
inc
or
scas
fdivs
cli
cmp
dec
mov
push
pop
push
pushf
loope
sbb
outsb
mov
mov
mov
add
mov
cld
mov
mov
test
lret
in
nop
mov
out
push
jmp
leave
jmp
jmp
movsl
and
aam
sbbb
mov
out
xchg
jl
cmpsb
call
or
xor
dec
icebp
jle
dec
ljmp
sub
aam
inc
adc
add
movsb
and
inc
sub
pushf
aad
loopne
sub
in
or
pop
mov
imul
pop
mov
dec
leave
sub
mov
shlb
and
lret
mov
pushf
or
js
repz
mov
jmp
lock
fldl
push
jmp
icebp
add
pop
sub
sub
inc
jle
lea
mov
and
pop
lods
adc
jecxz
std
jge
das
push
icebp
pop
mov
rolb
sub
cmp
push
stc
mov
cmpsl
inc
loope
lcall
jne
sub
dec
shrl
mov
xor
das
dec
dec
and
add
shll
xor
cld
sub
pop
enter
loope
adc
in
pop
mov
fiaddl
addl
in
jecxz
xor
into
xor
ret
mov
jns
push
jle
mov
fucomi
daa
fmull
in
fidivrs
cld
mov
pop
imul
js
cmpsl
aam
adc
push
aaa
pop
sub
jge
fstps
adc
dec
je
add
in
inc
ljmp
pushf
inc
ja
or
add
cld
ret
lea
imul
xor
mov
sbb
xor
sbb
and
add
out
jb
jnp
dec
inc
mov
push
in
push
lds
push
nop
add
shll
test
and
in
inc
sub
in
iret
and
in
je
push
adc
or
and
jle
jne
inc
pop
cmc
mov
push
test
mov
enter
out
mov
test
pushf
pop
jae
daa
inc
mov
jecxz
ja
xchg
nop
sub
mov
add
clc
mov
std
dec
movsl
dec
ds
dec
in
jne
push
lods
dec
mov
aam
rolb
jge
or
sti
or
lods
in
lret
pop
cmp
mov
mov
sbb
pop
sarb
inc
and
test
inc
xchg
pop
xor
pop
das
dec
jle
mov
subb
fistl
dec
in
int
imul
cmp
movsl
cld
adc
add
fidivs
insb
mov
or
scas
push
addr16
clc
fwait
sbb
test
decb
sub
dec
int3
scas
jecxz
cli
mov
pop
clc
dec
xchg
popf
or
push
jp
lcall
sti
js
bound
inc
test
mov
xorl
mov
hlt
jo
jno
push
jno
cmpsb
push
data16
movsl
sub
push
lods
mov
mov
es
sti
sbb
push
push
jae
fisubl
fisubs
shlb
sbb
gs
xor
push
imul
mov
sub
dec
arpl
push
cmp
ffreep
in
ljmp
fnsave
je
xchg
rdmsr
popf
int
inc
test
xchg
cmpl
jbe
inc
loop
les
mov
fwait
push
clc
push
pop
add
lahf
fsubl
jmp
adcb
add
cmc
push
pop
in
adc
xchg
mov
bound
subb
fiaddl
or
mov
divb
in
sar
ds
cmpsl
fsubs
imul
add
rcll
push
push
xor
inc
push
pop
outsl
out
rcrb
mov
and
adc
adc
push
mov
in
or
stc
out
in
insb
lahf
mov
scas
or
or
and
xchg
rol
sub
les
daa
faddl
out
pusha
imul
ss
mov
fdivrl
xchg
or
jg
mov
data16
es
aad
add
mov
pop
pop
loopne
ret
mov
mov
pop
dec
lahf
fs
mov
lret
mov
mov
cmp
add
cmp
ret
sbb
and
arpl
imul
jb
sub
push
mov
mov
push
inc
enter
push
inc
jno
mov
lods
jle
fisubrs
adc
loopne
rorl
sub
arpl
fwait
push
lea
sub
cmp
jmp
lcall
repnz
fcomps
xchg
pusha
rcll
stos
pop
jne
loope
iret
adc
loop
lock
decl
cltd
pop
stos
mov
call
xchg
fwait
ss
outsl
mov
hlt
mov
cs
pusha
xor
outsb
insl
mov
movsb
mov
jns
test
mov
test
mov
sahf
inc
cld
imul
int
hlt
aad
dec
sub
jecxz
xor
out
dec
or
sub
dec
inc
mov
jbe
mov
mov
jecxz
ss
and
xchg
lret
loope
ficompl
mov
imul
in
lods
sub
into
push
lods
rorl
out
mov
lret
cmpsl
sahf
and
aam
or
loope
outsl
and
mov
shll
test
jge
jbe
fwait
and
xchg
jae
ja
sub
rcrb
pop
pop
mov
loope
push
shrl
and
adc
adc
fcomp
imul
sub
repz
sbb
adc
lahf
sahf
les
imul
jo
xchg
mov
or
xlat
clc
in
scas
shrb
cmpsl
movsl
dec
xor
or
or
fsubr
add
xchg
cmpsb
xchg
sbb
pop
fwait
jae
pop
movsl
dec
sbb
into
pop
push
lods
fcmovbe
dec
insb
or
iret
jl
nop
jmp
lret
movsb
fiaddl
xchg
fstpt
jo
push
jno
push
jmp
pop
adc
jle
sub
mov
aad
jl
adc
das
cmpsl
stos
into
lret
mov
inc
pop
es
mov
lahf
das
nop
rorb
push
stos
add
pop
xor
mov
in
icebp
repz
sahf
call
lahf
xor
fdivrp
mov
jnp
ja
add
xchg
hlt
sub
outsb
pop
cmp
push
jb
into
aas
jnp
loope
ffree
dec
ljmp
pop
outsb
sub
sbb
bswap
test
mov
aaa
ret
test
test
mov
into
in
jns
dec
popa
inc
outsb
adc
ret
jp
scas
xchg
insb
in
lods
inc
pop
push
mov
hlt
shll
inc
jb
fcoml
push
xchg
dec
mov
pop
lock
test
cmp
pop
or
cmp
mov
jge
pop
stos
pmulhw
insl
outsl
sbb
sbb
scas
push
addb
mov
jecxz
aad
mov
adc
lock
mov
in
xlat
das
jbe
cwtl
pop
add
push
jg
dec
lock
xchg
jge
fwait
mov
mov
pop
pop
jno
push
cmpsl
stos
mov
cmp
lock
cwtl
loopne
in
adc
ret
rcrl
add
jge
jb
push
pop
jmp
subb
xchg
mov
push
mov
lcall
mov
xchg
repnz
les
mov
icebp
bound
jno
inc
aaa
mov
or
xchg
les
idivb
push
je
cmp
sbb
cmp
lret
adc
push
push
in
aas
fs
or
mul
push
pop
insl
and
ficomps
xchg
mov
mov
cli
in
mov
mul
mov
push
cli
sahf
aam
cmp
mov
push
sub
and
fdivr
lea
adc
test
movsb
cmp
bound
push
mov
fldenv
jo
aam
in
outsb
xlat
clc
mov
inc
mov
shll
dec
nop
xorb
inc
jb
pushf
inc
nop
xchg
mov
data16
lds
test
ficomps
sbb
cmc
mov
ret
and
mov
js
mov
fcomps
ret
adc
mov
leave
jo
imul
jl
jge
and
adc
xchg
je
arpl
push
inc
push
mov
lds
fs
int
ljmp
pop
xor
ret
push
mov
and
mov
xlat
sub
jno
cmp
add
and
dec
xlat
sub
adc
out
pushf
inc
ds
jmp
rol
or
fists
stos
pop
dec
aaa
jb
push
in
mov
arpl
sbb
inc
push
shr
in
cwtl
lret
movsb
add
leave
mov
out
sub
add
pop
inc
js
push
cmp
sti
jbe
fsubrp
nop
imul
ret
shl
insb
inc
mov
mov
inc
aas
or
mov
les
lret
mov
pop
lcall
arpl
sti
imul
andb
dec
movsl
mov
mov
sahf
sbb
jae
cmc
mov
pusha
int3
xor
out
mov
mov
dec
lahf
aad
cmp
jg
loope
testb
movsb
inc
shr
loopne
daa
lock
adc
ja
jnp
jmp
xchg
and
sub
push
lods
or
adc
stos
orb
sbb
shrb
xchg
pop
xlat
movsl
lahf
repnz
add
clc
aas
and
imul
adc
out
inc
cltd
icebp
push
repz
pusha
xor
pop
popf
add
insl
jne
sub
mov
int3
mov
insb
mov
test
mov
pop
dec
jbe
jle
out
inc
jmp
es
lods
dec
std
fstps
nop
push
lock
dec
dec
cmpsl
mov
rorb
xchg
inc
mov
out
into
shrb
inc
imul
insl
mov
aad
adc
fucomi
xchg
in
les
int3
addr16
sub
lahf
xor
xchg
jp
cli
mov
mov
mov
das
je
addr16
mov
jb
lahf
xchg
ds
test
xchg
pusha
or
push
clc
fsubs
outsl
add
out
ret
add
icebp
mov
je
ss
xor
jo
icebp
fdivl
sub
xor
inc
jne
or
daa
ss
and
add
and
xchg
xchg
sti
inc
mov
adc
xor
xchg
mov
push
inc
or
mov
and
xor
pop
insb
and
mov
loopne
rcrb
mov
inc
mov
lea
outsb
xorb
xor
adc
outsb
in
lock
aad
ja
jno
push
ret
xchg
sub
jg
jbe
mov
in
pop
mov
jg
lcall
repnz
jnp
mov
add
dec
popf
xchg
scas
lret
dec
mov
mov
loop
sub
out
subb
fldcw
mov
mov
fcomps
cmp
push
repnz
dec
sbb
inc
sub
out
out
xor
in
dec
cmpsl
jo
repnz
fidivs
mov
outsl
add
nop
sarb
xchg
push
or
xchg
sub
pop
xor
or
rcl
add
icebp
hlt
mov
cmp
add
cmpsl
gs
pop
sbb
xor
mov
adc
mov
rcrl
xor
mov
mov
sub
mov
ret
dec
fldcw
xchg
jmp
jno
dec
std
test
jg
iret
push
jp
fcoms
popf
in
push
jl
pop
in
movsl
scas
leave
dec
mov
in
adc
mov
xchg
jbe
cmc
sub
push
pop
fwait
mov
lret
push
jns
imul
aad
das
mov
daa
cld
dec
xchg
lea
stos
or
mov
and
sub
and
cwtl
les
fwait
mov
cmp
dec
insl
or
mov
cmp
pop
or
clc
push
push
mov
push
outsl
push
lds
aaa
es
add
test
jl
mov
jo
adc
pusha
std
mov
jl
sub
sub
cld
push
or
outsb
test
xor
fnsave
mov
push
or
pop
xor
imul
mov
fs
push
shlb
mov
push
adc
jo
aaa
jb
mov
and
fldt
in
xor
dec
aas
cmp
stc
jl
aad
jns
sbb
dec
xchg
imul
pop
fcoms
xchg
adc
pop
sub
shlb
and
mov
insl
aas
bound
jg,pt
xor
fstps
enter
lret
jl
repnz
and
sub
jg
and
movsl
dec
out
iret
push
in
out
ja
adc
loopne
xchg
add
or
mov
cli
dec
mov
pusha
mov
mov
jp
push
loop
stc
xor
xchg
into
hlt
or
push
fiadds
adc
cmp
jne
inc
jg
pop
in
nop
jnp
dec
data16
out
xchg
xchg
imul
xchg
cmp
dec
mov
and
mov
sbb
rclb
or
mov
repnz
fdivl
ret
inc
add
daa
mov
sahf
ss
dec
cmp
jge
bound
pop
das
icebp
outsl
test
mov
jb
sbb
xor
test
or
lret
and
jl
outsb
fstps
inc
pop
push
sbb
hlt
outsl
push
mov
push
sub
sub
les
pop
data16
in
fbstp
jl
subb
popf
xchg
inc
jb
pop
mov
jo
cli
addr16
xchg
mov
icebp
ret
movsb
dec
or
mov
test
pop
sbb
cmpsb
jp
xchg
xchg
pop
in
and
sbb
insl
ret
add
mov
jne
das
or
mov
jp
fidivrs
aaa
or
imul
icebp
jecxz
jbe
push
mov
jb
jmp
je
sbb
pop
jb
xchg
mov
repz
in
sub
dec
out
push
or
push
mov
push
mov
pushf
arpl
int
mov
ja
adc
lcall
cmp
and
dec
sub
xchg
repnz
in
pop
jnp
xlat
xor
push
mov
jae
mov
mov
cmp
push
enter
cmpsb
cmp
mov
xchg
lcall
jl
ss
adc
sbb
movsl
and
and
add
pop
xlat
or
xor
mov
lock
es
emms
je
mov
push
dec
push
int
add
sti
stos
dec
aam
mov
push
jno
mov
enter
pop
pop
sbb
stos
ss
push
jne
xor
inc
popa
pusha
adc
outsb
jmp
fdivl
sub
aas
in
sarb
cwtl
jg
sub
aas
stos
jl
das
xchg
je
ficoms
jo
and
dec
loope
xchg
movsb
pushf
cmp
imul
in
test
dec
inc
jno
nop
enter
cmp
add
rol
out
pop
xchg
pop
mov
dec
roll
dec
jl
push
sub
loop
mov
lock
adc
or
sub
pop
fdivrs
mov
fildl
out
push
icebp
mov
shll
mov
xchg
fldcw
in
mov
es
mov
scas
movsl
sbb
imul
pop
pop
lcall
xor
push
pop
pushf
fwait
mov
hlt
iret
pusha
cmpsl
jmp
or
push
jl
and
loope
adc
aas
pop
push
cmp
mov
addr16
iret
sub
jmp
sub
test
in
insl
inc
in
ljmp
push
and
xchg
xor
cmp
and
inc
shlb
fsubrl
stos
xchg
sub
mull
hlt
sub
cli
loope
lods
mov
jae
fsubl
in
and
ror
rcrb
xorb
cli
into
roll
fadds
ss
mov
jb
iret
and
xchg
pop
inc
fisttps
adc
xor
cmc
in
and
dec
mov
ret
adc
inc
pop
lods
mov
int3
dec
out
inc
pop
sub
lock
xor
add
sbb
dec
mov
mov
mov
and
and
add
in
mov
push
lods
push
out
push
outsl
js
jge
aad
or
xor
faddp
je
test
pop
sbb
push
jle
loope
cld
loope
icebp
cld
push
mov
dec
xchg
xor
loopne
stos
fisubs
mov
or
inc
xchg
jns
mov
jne
xor
mov
or
xchg
emms
hlt
push
and
jl
xor
sbb
push
leave
arpl
nop
push
inc
mov
cmp
cmp
andl
les
dec
mov
inc
aam
and
int3
sete
sub
and
cs
jae
out
loope
pop
loop
inc
and
andl
inc
mov
or
int3
push
int3
daa
ja
sti
pop
jb
sbb
sub
sub
pop
and
js
inc
cltd
add
cmp
fsubl
jg
mov
push
push
add
repz
fwait
sub
int3
cmpsl
aaa
push
nop
ficomps
cmp
jp
enter
movsb
xor
daa
or
sbb
loopne
and
insl
fnstcw
jp
lahf
adc
add
and
pop
push
stc
shrl
or
stos
dec
dec
scas
and
add
adc
inc
jbe
sbb
push
dec
mov
je
lret
jbe
imul
dec
mov
roll
sub
push
popa
and
jbe
inc
mov
fsubs
push
jp
mov
stc
lret
cld
mov
cvtpi2ps
arpl
inc
sarb
movsl
jmp
imul
stos
pop
mov
leave
ret
sub
test
repz
cmc
pushf
inc
pop
pop
cmc
cmc
jnp
out
ljmp
push
cltd
mov
ret
xchg
bound
daa
jmp
push
or
jp
add
mov
nop
pushf
lods
mov
xchg
sub
dec
popf
incl
cmc
pop
addb
sbb
push
daa
sub
add
out
or
or
cmp
lds
mov
xchg
iret
sub
sub
dec
stos
lods
dec
in
add
ljmp
and
sub
ljmp
pushf
xchg
frstor
stc
fwait
dec
shll
data16
adc
ljmp
mov
shll
jge
and
pop
adc
rep
jl
div
sahf
sbb
ds
adc
enter
out
int
xchg
call
stos
lds
add
insl
lds
fistps
loopne
imul
repnz
arpl
jge
fwait
pop
fnsave
adc
not
cmp
or
test
out
push
outsl
outsl
mul
cmc
inc
xor
adc
or
icebp
cmp
inc
ljmp
lods
rorl
or
sbb
and
add
aas
pop
scas
sub
addl
fstp
aaa
fmuls
pop
dec
pop
lret
jnp
push
add
jne
out
popa
les
dec
sbb
jmp
xor
inc
xor
inc
andb
jne
das
cmp
sar
or
lret
mov
xchg
icebp
sub
js
clc
mov
jne
cmp
lret
dec
fcomps
stos
add
pushf
mov
test
xchg
add
xchg
inc
popf
je
mov
mov
sbb
push
sbb
sbb
xchg
adc
push
fs
pop
mov
push
push
pusha
dec
dec
push
ds
popf
aam
mov
lds
call
push
mov
aaa
dec
imul
sub
xlat
pop
add
das
lock
jecxz
jecxz
pop
pushf
jo
int
cmc
mov
cmp
adc
sbb
mov
mov
mov
mov
loopne
repnz
jo
jecxz
cmp
sub
daa
pop
mov
pop
add
movsl
fstpl
lret
mov
xchg
sub
sbb
clc
aam
lret
push
das
andl
es
test
push
mov
or
push
das
cmc
rorb
rorb
incl
xchg
call
cmp
scas
pop
sbb
xor
sbb
adc
mov
in
and
pushf
cmp
ljmp
sahf
xchg
xchg
pop
outsl
repz
dec
mov
lcall
and
jecxz
in
inc
lret
leave
mov
push
mov
push
ja
or
push
aaa
aaa
aaa
out
xor
test
fldcw
adc
je
mov
lods
out
fildll
scas
je
out
scas
push
sub
iret
cltd
pop
les
push
into
inc
outsl
cwtl
or
pushf
call
mov
pop
xchg
shl
lret
adc
cmp
push
add
test
mov
adc
pop
wbinvd
out
mov
push
scas
jmp
sti
dec
xor
pushf
jl
hlt
inc
iret
adc
jge
mov
pusha
loope
mov
mov
pop
push
push
out
lcall
aas
fisttpll
mov
sbb
add
das
scas
add
jg
sub
mov
mov
add
push
pop
movsb
rcrb
daa
and
addb
inc
shlb
inc
popf
add
nop
jg
xor
nop
cld
dec
pop
loop
sub
scas
popa
mov
cmp
cwtl
jne
pop
arpl
test
shr
leave
add
popl
and
xchg
sub
jmp
xor
popa
or
lods
mov
sub
sbb
addr16
test
or
add
pop
mov
inc
xchg
insb
jns
ss
jo
lods
pop
sub
int
insb
cld
loopne
and
sub
es
pop
xchg
jg
push
xor
xchg
or
test
mov
jle
jp
dec
sub
mov
xor
xor
test
fcmovne
jmp
into
stos
std
ljmp
xorb
add
leave
xchg
out
inc
pop
int
push
jae
jge
rep
pop
dec
loope
sahf
outsb
sub
test
out
push
shl
dec
mov
or
lock
mov
mov
push
jb
jbe
and
mov
sti
sub
pop
xchg
mov
pop
push
jecxz
clc
cli
xchg
loop
iret
jo
sub
ffree
mov
divb
test
test
mov
pop
cwtl
cmpb
fcoms
cld
inc
push
loope
popa
cmp
push
into
add
ficoms
aam
mov
or
mov
mov
xchg
repz
mov
js
outsb
jge
addr16
mov
leave
in
rorl
sti
outsl
adcb
pop
or
int3
or
fstp
mov
mov
lret
xor
inc
ret
fldt
ljmp
pop
add
push
not
clc
mov
push
loopne
dec
gs
pop
push
ss
fistps
mov
imul
xchg
or
pop
add
ds
mov
fnstenv
and
sti
in
xlat
mov
xlat
gs
stos
push
sbb
outsb
shld
fldl
xor
loop
fnstcw
mov
out
and
or
push
mov
push
jge
inc
mov
pop
dec
out
clc
cmp
sbbl
lds
vmovd
sub
ljmp
mov
insl
and
loope
dec
push
or
test
andps
bound
sub
pop
jns
lods
adc
xor
push
mov
lock
popa
mov
dec
cltd
and
adc
lds
xchg
mov
ljmp
jb
repz
mov
push
mov
adc
push
repnz
fiaddl
add
cltd
lcall
out
xchg
cs
arpl
ss
inc
and
mov
mov
fwait
dec
push
xor
xchg
and
mov
dec
sub
mov
test
and
bound
add
inc
push
sti
pusha
aam
jnp
add
mov
add
xchg
rolb
les
or
inc
fmul
popl
mov
push
ss
or
cld
movsb
pop
int3
jno
push
jnp
or
lret
imulb
pushl
out
inc
sub
mov
in
inc
lods
fwait
lret
add
sbb
out
movsb
sti
or
jge
sub
roll
aas
jno
lcall
pop
andb
lea
mov
scas
test
fisttpll
out
data16
gs
xor
lcall
inc
mov
icebp
sub
lret
or
mov
inc
outsb
aam
inc
ret
jmp
dec
adc
out
data16
lds
pop
insl
and
xchg
movsl
mov
adc
movl
cmp
mov
fcoms
movsb
repz
fidivs
fstpl
cmc
sub
push
lea
cmpsb
scas
clc
xor
sahf
idivl
add
or
daa
cmp
jo
rcrl
pop
xor
cmpsl
xor
in
dec
push
adc
sbb
call
sub
cltd
sti
mov
inc
rclb
jns
std
sub
ret
xlat
mov
es
outsl
test
inc
jecxz
mov
nop
fnstcw
jmp
imul
scas
xor
fists
cli
mov
xchg
push
sbb
inc
bound
shrl
mov
mov
push
push
inc
xchg
lcall
inc
mov
out
andb
je
adc
shlb
imul
jle
rorb
nop
icebp
pop
jg
into
cmp
xchg
dec
xchg
std
shll
cmp
xchg
push
adc
push
xlat
dec
sbb
mov
dec
into
xchg
int
mov
ljmp
add
mov
mov
xchg
push
mov
push
lahf
out
adc
cmp
mov
push
jle
jno
cmp
mov
adc
fidivrl
rorl
xor
leave
cli
loope
push
not
fistps
aam
movsb
dec
lea
gs
subl
mov
popa
sbb
or
mov
adc
add
cmpsl
xchg
pop
lock
mov
psubq
mov
adc
lret
orl
nop
xchg
int
add
push
cmp
xchg
xor
adc
in
xor
mov
gs
or
aas
mov
jmp
out
push
and
or
cmp
vminss
mov
lods
mov
call
aam
pop
xlat
incb
ret
dec
push
push
xchg
push
sub
shlb
xlat
pop
pop
movsb
or
je
loope
insl
repz
mov
lods
fcmovnb
push
mov
mov
movl
adc
mov
xchg
ja
sub
mov
into
mov
cmpsl
popa
adc
repz
and
sub
xor
pop
push
test
push
enter
nop
push
sub
cmp
or
or
add
lahf
addb
sub
insb
cmp
xchg
push
in
xor
mov
data16
mov
add
ljmp
push
xor
or
scas
loop
rorl
sub
inc
xor
sarl
inc
push
add
jb
add
jns
push
cmp
rol
cmp
push
mov
sbb
cmp
xchg
jne
jbe
inc
stc
cmc
rcrl
and
add
jge
lret
bswap
jp
push
cmp
mov
mov
cmp
in
xchg
or
mov
sbb
xchg
pop
xchg
imul
pop
repnz
stc
call
push
pop
roll
fistps
frndint
xlat
decl
or
inc
cmp
mov
push
sub
pop
jo
mov
roll
test
lods
jmp
push
out
loope
sbb
lds
xor
out
jg
sbb
xchg
xlat
xor
nop
fwait
sti
repnz
loopne
outsb
adc
fnstenv
and
mov
push
sbb
into
cli
and
jp
int3
sbb
sub
in
je
loop
daa
or
popf
xchg
stc
lea
sbb
push
or
fdivp
push
mov
addl
jl
adc
loope
nop
xchg
dec
xchg
out
cmp
inc
sub
fistpl
jle
rcrl
sahf
fwait
xchg
sbb
dec
clc
jle
les
cmpsb
pop
or
iret
imul
lcall
xor
arpl
ljmp
aad
sub
jnp
push
enter
fcomps
mov
lcall
ja
or
ds
sbb
fimuls
or
xor
mov
cs
lea
cltd
imul
lret
jge
xchg
cld
and
mov
out
cmpsl
xchg
rolb
loope
mov
adc
cmc
repnz
push
xchg
popa
arpl
ds
das
add
push
movsl
sub
call
jle
fsub
mov
cmp
dec
incl
mov
sbb
mov
and
mov
mov
sub
fs
mov
mov
push
push
jb
push
in
lock
cmp
pop
dec
sbb
mov
arpl
enter
ja
pop
sbb
lret
sub
xchg
popa
cmp
cmp
in
xchg
int
mov
test
cmp
scas
je
lock
rorb
js
xchg
mov
mov
sbb
or
fadds
loop
sbb
test
adc
dec
xchg
and
xchg
xchg
aam
push
xchg
sbb
aas
stos
mov
cmp
dec
fnstcw
test
mov
jae
fistpl
loope
clc
jp
ljmp
dec
shll
add
aaa
mov
cli
dec
lods
add
add
jecxz
test
add
sti
out
pop
fcmovne
pop
stos
loope
xor
arpl
fwait
inc
ror
popf
add
data16
sbb
rcrb
popf
cmp
mov
sbb
fld
sub
mov
mov
or
and
sti
lret
lds
loop
add
cmp
xchg
cmp
arpl
mov
call
pop
push
loopne
je
pop
ss
test
xor
dec
loop
pop
inc
dec
xchg
xor
addl
and
fs
stos
mov
jbe
hlt
repz
add
mov
mov
dec
sti
add
call
pushf
push
cmp
sbb
cmp
js
mov
lds
in
aam
cmp
call
and
fs
cmpsl
inc
daa
and
push
imul
or
fs
mov
xchg
cmp
or
dec
popl
nop
dec
js
push
xor
in
jmp
inc
mov
es
test
clc
xchg
aaa
lea
iret
insb
mov
sti
es
inc
fnsave
dec
fistl
push
aam
sub
outsl
inc
mov
pop
mov
imul
jg
dec
sbb
lret
mov
xchg
out
cwtl
inc
push
jnp
xor
enter
push
push
fdecstp
aad
out
divb
hlt
add
pop
dec
dec
test
hlt
and
hlt
mov
cmp
push
loop
or
sub
in
mov
mov
push
dec
sahf
and
pop
and
fldl
stos
pop
mov
inc
add
inc
ja
xor
insl
mov
call
sub
out
dec
pop
xchg
mov
jae
aaa
lcall
ja
mov
push
add
fsubrs
mov
inc
mov
ficoms
mov
sbb
inc
mov
imul
repnz
pop
inc
mov
jno
movsl
mov
test
mov
scas
push
xchg
outsb
les
push
rcrl
popf
jne
mov
inc
xchg
jns
and
je
fmul
movsb
sub
cmpsl
or
inc
lock
dec
cltd
clc
mov
sbb
cli
in
pusha
pushf
aaa
jne
jp
shll
jns
les
enter
fstl
cmp
pop
jo
icebp
shlb
int
incb
bound
loope
lods
or
xor
mov
xor
cmp
cld
out
in
mov
pushf
xor
daa
popf
sbb
test
xlat
fisttps
sbb
shl
xchg
ja
mov
mov
sar
fldcw
in
push
les
mov
sbb
pop
pop
ja
push
out
xchg
mov
mov
arpl
imul
leave
jae
popa
mov
adc
xchg
and
xor
sti
push
fidivs
inc
mov
mov
cmpsb
pop
fsubp
mov
decb
lea
rclb
push
repz
and
xor
sbb
lcall
mov
movsb
mov
insb
fildll
xor
or
dec
mov
mov
xchg
mov
ret
push
ror
xchg
pop
fiadds
aas
int
dec
leave
into
loop
test
test
or
clc
sbb
in
das
lds
clc
loop
cmp
loopne
fcoml
mov
mov
dec
pusha
cs
or
pop
arpl
jle
push
mov
add
dec
jne
xor
cmp
pop
rcrb
cmp
or
aad
cmpsl
sub
push
mov
cmp
orb
sub
ss
fidivrs
jae
dec
shll
mov
mov
or
rclb
daa
and
insb
xchg
adc
and
mov
add
sub
popf
mov
int
xlat
mov
negb
push
dec
scas
in
cmovns
or
xchg
push
xchg
shl
into
lea
test
mov
push
push
orl
sub
mov
cmpsb
xchg
mov
sub
outsb
repnz
cltd
insl
sarl
mov
or
test
adc
push
jge
adc
dec
sbb
insb
mov
test
dec
lods
cmp
mov
jne
or
imul
das
lock
mov
push
fadd
int3
push
mov
sbb
jnp
xchg
fsts
adc
xor
sbb
and
lcall
inc
xlat
adc
movsb
jmp
mov
sub
inc
insl
and
lcall
adc
dec
arpl
icebp
out
scas
jnp
jge
jne
ret
adc
pop
mov
cmpsb
lret
pop
xchg
pop
je
add
jno
and
xchg
mov
addl
addb
inc
add
and
push
lea
fucom
add
sarl
pop
divb
and
clc
add
xchg
repz
xchg
push
mov
and
pop
xchg
mov
dec
mov
jle
ret
scas
xor
jl
push
push
cmp
enter
stc
cmc
in
dec
shlb
jnp
icebp
cmp
dec
xchg
cmp
out
mov
outsl
sub
fstpt
xchg
stos
inc
in
test
add
rclb
enter
ror
js
jp
pushf
les
andw
xor
cwtl
dec
gs
stos
test
ljmp
sub
jge
in
jmp
adc
test
lds
sub
xor
dec
lcall
jmp
sub
scas
lcall
xor
pusha
jnp
adc
pop
xchg
xchg
scas
bound
ljmp
pushaw
push
sbb
or
mov
loope
dec
push
sub
pop
push
push
jl
insb
inc
push
adc
mov
sub
inc
jp
test
mov
repnz
push
test
dec
call
out
bound
fadds
inc
pop
mov
out
addr16
or
mov
jmp
arpl
and
idivb
orb
movsl
ret
aas
cmp
mov
inc
push
setle
cmpsb
jl
lret
sbb
xor
ficompl
jb
test
lea
je
push
dec
scas
inc
enter
int3
ret
fsubrp
jo
push
inc
mov
mov
lret
sbb
int
add
mov
pop
jecxz
jmp
stc
add
mov
pop
out
mov
stos
nop
pop
shll
or
xor
jo
cmp
dec
vhaddpd
mov
aas
mov
mov
push
scas
dec
sub
adc
repnz
mov
xchg
mov
or
sahf
xor
xor
sti
pop
xchg
xchg
movsb
cmpsb
lea
dec
xchg
call
xchg
mov
and
pushf
mov
adc
add
sub
fsts
adc
adcb
pop
bound
mov
iret
subb
pop
dec
aas
icebp
cmc
mov
xchg
jno
xchg
push
xchg
fdivr
xchg
cmp
test
fsubrs
ss
jp
and
rcll
aam
ss
xchg
lcall
pop
push
push
mov
in
or
xchg
pop
jno
cmc
cmpsl
in
fisubrs
lods
ja
sub
lock
jae
fisubrl
scas
add
dec
jmp
cmp
nop
xor
add
leave
lahf
hlt
imul
test
dec
cmp
mov
mov
inc
in
push
mov
xchg
lret
add
shr
cmc
icebp
or
pusha
sub
popf
xchg
in
push
imul
pop
add
pop
call
ret
out
imulb
pop
mov
mull
inc
pop
dec
pop
inc
xchg
dec
bnd
iret
hlt
mov
xchg
lock
xor
aam
movsb
out
pushf
adc
cld
cmpsl
out
mov
leave
decb
sub
mov
idiv
ret
xor
leave
add
xchg
out
out
sub
sar
lea
cwtl
mov
cmp
rcr
mov
and
outsb
arpl
fldcw
mov
add
clc
out
xor
gs
push
push
hlt
ficompl
orb
cmp
push
test
enter
push
and
fcmovb
movl
and
xor
push
dec
dec
stos
mov
cld
pop
dec
cli
shrl
or
mov
pop
pop
dec
xorl
arpl
mov
mov
or
push
pushf
gs
cmpsl
xchg
repnz
call
dec
test
mov
cmp
dec
push
call
repz
or
xchg
and
mov
cwtl
sbb
xor
sub
sub
push
lret
daa
sbb
xor
mov
cltd
mov
cmp
insl
or
or
sub
lcall
repz
xchg
rcrl
in
dec
xlat
sub
add
out
imul
mov
mov
bound
mov
sub
mov
incl
shll
sbb
xchg
ss
cmp
fbstp
mov
repz
shl
fdivs
bound
test
lret
aam
jp
mov
out
mov
dec
rcrb
pop
rcl
jae
mov
scas
clc
into
sbb
mov
and
xchg
mov
adc
lock
pop
xor
push
adc
sub
mov
xor
sub
pop
jb
push
in
sub
imul
jno
jg
pop
ror
mov
pop
xchg
mov
sahf
test
dec
decb
mov
lret
xor
sbb
sbb
xor
addr16
jne
mov
out
fstpl
dec
push
cmp
inc
push
into
out
add
mov
inc
test
cld
sbb
sahf
addr16
push
and
leave
mov
pop
mov
inc
cmc
imul
push
add
pop
and
push
sbb
sbb
push
dec
xor
lds
xchg
lcall
lods
out
les
mov
lods
movsl
out
adc
mov
int3
rorl
fwait
inc
je
push
push
jl
stc
ja
je
xor
test
je
xchg
aad
out
fs
push
insb
aam
hlt
cmpsl
sbb
and
and
sub
dec
sub
pop
cwtl
outsl
jle
add
mov
cmp
stos
inc
test
insb
inc
js
sbb
mov
pusha
cwtl
xchg
xlat
mov
add
jmp
adc
cmp
sti
cmp
in
sub
xchg
add
push
test
jae
inc
and
adc
mov
les
fidivrl
insl
cmpsb
add
xorb
mov
inc
lods
pushf
pop
test
idivb
xor
shll
mov
jno
fisttpll
into
inc
cwtl
pop
es
bound
je
gs
repz
jp
dec
gs
cmp
mov
shlb
loop
mov
mov
mov
xlat
stos
add
ljmp
imul
push
pop
les
into
loop
inc
loopne
xor
roll
pop
sahf
xor
subl
cmpsl
loop
sub
add
repnz
cmc
mov
sbb
pusha
lds
mov
cmp
int
add
adcl
lods
cmpsb
fstpt
adc
jg
in
cmp
inc
cmpsl
xchg
aad
cmp
add
inc
and
jecxz
jge
fistpll
push
sbb
lahf
cmovle
ss
or
mov
and
vunpckhps
push
push
dec
call
push
and
sub
test
out
lds
pop
ret
and
inc
lea
add
mov
sbbb
xchg
mov
rorb
sbb
inc
ljmp
jmp
xorl
es
sahf
daa
lock
dec
xor
xchg
bound
lock
add
sbb
sub
pusha
mov
roll
sub
cld
and
mov
fdivp
adc
ja
push
nop
xor
sub
aam
rcr
pop
lds
pop
lock
sti
sub
mov
int3
mov
imul
movsb
lret
das
pop
and
daa
jbe
sub
ret
fsubrl
cmp
xchg
xchg
adc
rcl
cmpsl
xor
int3
mov
out
push
xchg
jp
mov
testl
mov
xor
stc
xchg
sub
fwait
lahf
insl
imul
cmp
out
push
rolb
into
jb
mov
sub
in
sarb
push
testb
into
jmp
dec
push
ror
push
andb
out
inc
pop
in
push
inc
cmp
xor
and
push
mov
jecxz
mov
mov
push
fstpt
cli
clc
inc
push
imul
dec
cmovl
adc
dec
cmpsb
je
data16
insb
jno
sarb
push
cld
mov
xchg
or
mov
dec
sub
mov
cmpsb
lea
pop
pop
iret
aam
sarl
cltd
xor
add
inc
adc
or
xor
hlt
sahf
jb
lret
mov
stos
js
in
cmpsb
cwtl
xor
data16
lock
mov
add
mov
mov
hlt
out
or
cld
and
in
inc
sub
mov
and
mov
adc
data16
xchg
add
nop
jecxz
aas
dec
rcll
push
and
or
rep
aam
test
xor
inc
dec
xchg
mov
sar
mov
pop
cli
push
sub
rcrb
rolb
fs
rcll
hlt
int
and
bound
push
xchg
xor
sub
cmc
add
pop
fucomip
add
popa
cmp
jl
xchg
roll
inc
nop
cmp
lcall
into
gs
ss
subl
in
xchg
push
sahf
fisttpl
xchg
or
cmpsb
mov
mov
jle
mov
jp
daa
cmp
mov
cmp
jge
icebp
pop
and
inc
pop
dec
mov
jae
sbb
push
aaa
lds
xor
jecxz
ret
push
cmpsl
dec
ljmp
inc
lret
and
sar
rcpps
icebp
dec
int3
das
adc
insb
addl
stos
mov
out
int3
mov
xchg
mov
push
dec
pop
shrl
mov
fwait
pop
inc
leave
adc
pop
lea
incl
and
push
xchg
aas
sub
std
mov
andl
cld
jg
lret
cli
mov
sbb
adc
add
int3
push
cmp
mov
mov
daa
movsl
dec
mov
cltd
sbb
cwtl
mov
cltd
add
dec
orl
ds
fwait
inc
push
mov
enter
lret
adc
out
out
outsl
out
je
popa
out
dec
mov
out
push
and
stos
inc
mov
das
popa
cmp
xchg
add
cmpsl
jnp
fstp
loopne
into
js
lret
ja,pn
loopne
xchg
xchg
in
cmpsl
stc
xchg
shl
inc
into
sub
adc
lret
mov
sub
scas
pop
cmc
add
jne
xchg
fstpl
sbb
push
ret
sub
dec
sbb
push
icebp
pushw
adc
cmpsl
popa
sub
testb
push
mov
push
add
dec
mov
xchg
cmp
mov
jnp
insb
jne
shl
out
or
das
shlb
outsb
and
fcomps
ja
test
daa
jne
dec
insb
scas
cmpb
aaa
test
xchg
mov
movl
dec
push
lahf
mov
jne
pop
outsb
cmp
cwtl
push
bound
outsl
lea
adc
dec
lret
jle
lea
jle
push
repnz
add
sub
cmpsl
cmpsb
lret
mov
inc
iret
cmp
fwait
mov
dec
pop
lock
outsb
into
dec
out
out
clc
aas
loopne
ja
cmp
adc
mov
inc
jl
lods
das
pop
mov
jl
popf
in
xor
scas
add
push
and
inc
sub
sbb
sti
sub
add
jecxz
cmpsl
inc
lret
push
js
xchg
movsl
ss
int3
loopne
push
push
push
imul
cmp
xor
clc
cs
clc
sub
inc
fcoms
add
mov
xor
dec
mov
dec
dec
popf
push
orb
es
sbb
inc
sub
mov
sti
loopne,pt
in
in
push
fstl
inc
or
loopne
mov
sub
sub
call
js
push
adc
push
xchg
aas
sbb
aam
xor
sbb
movsb
loopne
inc
imul
inc
push
lds
int
insb
fisubl
dec
fcmovne
or
imul
cltd
sbb
movb
gs
test
mov
faddl
mov
fstp
ret
mov
or
shrb
mov
imul
adc
js
sarb
and
cmp
fcoms
out
and
out
in
je
sbb
out
fsubl
insl
dec
ja
aas
cld
mov
sub
scas
hlt
sbb
out
and
call
or
inc
push
hlt
xlat
addr16
std
incl
frstor
pusha
fstpt
cmc
xchg
mov
and
mov
pop
push
fidivs
adc
vandps
push
aam
xor
cld
dec
test
add
or
mov
js
lret
fwait
movsl
mov
jo
adc
dec
mov
in
and
fcmovnb
push
adc
xor
movsb
and
mov
mov
adc
mov
xchg
lret
sarb
loopne
push
iret
out
xchg
test
and
cmp
int
or
push
and
dec
mov
mov
or
sbb
fwait
out
out
ds
push
int
pop
mov
xor
mov
lock
mov
xchg
aad
into
jmp
pop
andb
mov
add
mov
int
fisttpll
fcomps
test
std
ss
dec
adc
iret
inc
aad
adc
jp
xor
mov
sahf
mov
adc
setp
hlt
inc
sub
push
and
jl
and
into
add
imul
xor
jb
movsb
out
pop
imul
out
push
and
jne
popl
cwtl
mov
xor
shlb
sbb
dec
flds
nop
cmp
xchg
pop
fcmovnb
add
iret
test
mov
jbe
mov
push
fcompl
mov
dec
imul
cmpl
and
push
in
lods
insl
xor
fs
sbb
in
std
and
push
mov
outsb
testb
fisubrl
aad
adc
mov
filds
test
jmp
dec
mov
mov
hlt
sbb
jnp
gs
icebp
sbb
xor
decb
jmp
cld
adc
pop
mov
ds
lret
aas
xor
notl
divl
out
xchg
arpl
sbb
and
clc
jmp
jns
jne
stc
les
cmp
clc
add
jae
pop
fs
in
cli
dec
mov
cmpsb
add
or
enter
push
push
push
idivl
ds
adc
sahf
xor
shlb
movsb
int3
jne
jecxz
pop
sbbl
std
jl
xchg
mov
lea
mov
enter
nop
sbbl
cmp
inc
fcompl
icebp
mov
mov
popl
scas
xchg
push
in
fisubl
or
pop
jne
ds
fiaddl
cmc
add
dec
js
cmp
std
iret
sbb
jb
pop
clc
jo
stc
pop
lcall
int3
loopw
jae
test
push
adcb
lods
pop
mov
rolb
popf
and
or
or
int3
add
sub
jbe
shlb
lret
adc
dec
mov
or
jnp
repz
dec
push
int3
subl
push
call
faddl
dec
mov
std
pop
pop
pusha
cmp
cmp
jge
shr
or
jnp
inc
scas
jp
fdivrs
outsb
jno
mov
pop
enter
mov
ljmp
or
mov
scas
mov
lret
sbb
aad
and
cwtl
rolb
pop
pop
jg
fiaddl
sub
add
mov
pop
lret
pop
inc
lret
fstp
sbb
add
inc
aad
divl
leave
loope
jno
inc
shll
mov
and
dec
cmpsb
test
lret
adc
jno
cwtl
cli
cmpsl
or
mov
add
xchg
pop
sbb
inc
movsb
insl
fistpll
jbe
loope
aam
xchg
fwait
int3
push
aas
adc
push
xchg
loope
xchg
ds
sti
push
enter
sub
nop
cmpsb
repz
lret
insb
das
jg
jmp
adc
dec
push
daa
sti
dec
fistl
subl
adc
pop
jno
or
push
jg
ds
mov
mov
xlat
int3
test
pop
xchg
fs
cmpsl
out
out
enter
push
clc
sbbl
pslld
ljmp
fs
ja
mov
lret
fnstenv
jle
mov
adc
in
popa
ss
frndint
int3
fildl
pop
notb
inc
jecxz
les
imull
rorl
inc
sub
sti
adc
push
sbb
int3
jno,pn
dec
out
push
add
in
outsb
xchg
mov
add
lock
enter
mov
adc
jmp
mov
lods
fdecstp
ror
jo
push
or
jge
stos
push
ljmp
fwait
or
jmp
les
mov
scas
adc
jae
mov
adc
push
mov
mov
jge
dec
aam
es
add
fmull
es
push
cmp
dec
and
cmp
pop
in
fcoml
shl
pop
sahf
out
ret
fisubrs
pmulhuw
shll
mov
minps
out
cld
mov
jge
or
and
loope
in
dec
mov
add
adc
icebp
fisttpl
in
ds
fs
add
out
mov
aad
inc
cmpsl
lods
add
xchg
test
or
xor
sub
les
pop
les
push
out
xor
adc
lods
test
cmpsl
lods
mov
or
iret
inc
adc
or
clc
inc
dec
das
jns
scas
out
std
and
or
xlat
jne
jmp
xchg
popf
cmc
or
nop
add
imul
add
mov
stos
and
xchg
pop
nop
mov
shrl
sti
lret
adc
insl
je
adc
xor
scas
in
sbb
mov
xor
popa
push
add
lret
popf
sbb
movsl
shlb
xchg
inc
into
sbb
in
dec
out
mov
jb
data16
push
xchg
jp
and
push
or
inc
sbb
xor
sbb
mov
imul
push
vpmacsdql
xor
sbb
stos
xchg
dec
dec
sub
jmp
dec
xchg
cmp
in
mov
cmp
ds
xchg
sbb
out
outsl
jbe
stos
sub
lods
pop
call
add
outsb
lock
jl
mov
pop
and
or
test
cmp
or
sarl
and
repz
nop
int
mov
jb
mov
lds
aam
lods
dec
gs
cmp
mov
ljmp
cmc
adc
cmp
or
or
cli
pop
push
dec
mov
pop
inc
mov
mov
mov
sub
jge
sub
aaa
andl
sar
cmp
insb
mov
mov
dec
mov
fistpll
mov
dec
jb
scas
mov
movsl
pop
lock
inc
push
dec
ds
push
popf
pop
fnstenv
and
push
cltd
xor
test
or
xchg
xchg
shlb
jl
pop
cmp
fisubs
cmp
push
bound
clc
pop
pop
insl
dec
inc
in
xchg
jecxz
decb
mov
cmpsl
add
mov
lea
ljmp
xor
xor
jae
dec
push
pop
loop
lock
xchg
inc
add
dec
ja
mov
or
add
add
jb
idivb
dec
insl
mov
lcall
repz
andb
loop
add
lahf
cmpsb
jns
or
test
add
cmpsb
push
sbb
inc
aas
lcall
sahf
int
ds
xlat
mov
in
stos
cli
lret
jge
dec
popf
imul
clc
adc
hlt
mov
fadds
xor
popf
pusha
fiaddl
pop
pop
std
lret
lock
or
add
sbb
pop
decl
mov
call
nop
or
clc
pop
adc
std
stos
mov
cmp
push
pop
mov
andl
fsubrs
roll
jne
cld
aad
shr
insb
inc
xor
or
and
mov
fistl
or
xchg
dec
call
js
pop
inc
stos
xlat
sti
xor
xor
jne
fimull
scas
adc
push
cmpl
sub
sti
lods
outsb
xlat
sbb
xor
add
mov
or
rcl
lock
inc
sbb
cmp
jns
out
sub
lock
jl
pushf
mov
xchg
cli
into
sbb
popf
adc
inc
aas
sti
pop
fdiv
adc
push
mov
popa
lods
imul
sbb
add
fcoms
cmp
sub
jmp
mov
mov
inc
out
push
fstps
cmp
mov
mov
push
subb
or
out
mov
mov
sbb
aad
inc
roll
sbb
dec
aaa
lock
inc
push
push
cwtl
rorb
jp
mov
mov
adc
sbb
fsts
test
cltd
adc
xchg
enter
jmp
in
lahf
cmpsb
je
scas
pop
cmp
ror
jmp
hlt
loope
xor
sub
push
test
ret
sub
cltd
jl
inc
inc
loope
out
outsb
jnp
adc
in
scas
push
adc
mov
loopne
pop
mov
adc
or
int
xlat
std
and
jmp
fiadds
pop
add
mov
aaa
sub
leave
jo
popa
jo
or
sub
mov
fiadds
je
xchg
xor
daa
ja
fcmovne
pop
xchg
pop
div
mov
jnp
push
addr16
cld
fcoms
inc
cwtl
imul
dec
pop
std
mov
into
inc
inc
cmp
int
pop
mov
jns
rolb
and
mov
and
pop
dec
and
fiadds
ja
mov
mov
lock
or
mov
pop
cltd
jo
loopne
mov
insl
lods
lods
lock
out
nop
orb
mov
bound
pop
mov
mov
jl
ss
mov
xchg
cmp
js
ror
jmp
jo
sub
lods
sahf
gs
fdivs
inc
iret
daa
popf
sub
cld
sbb
xor
inc
and
xchg
pop
jae
lock
fisubrl
sbb
popf
hlt
pop
xchg
adc
rorb
sbb
push
push
in
cmp
push
loope
dec
mov
std
lcall
ret
es
arpl
mov
popa
frstpm(287
sbb
xor
mov
sbb
out
push
repnz
mov
sahf
push
loopne
adc
push
jb
in
inc
add
mull
notl
push
cmp
or
out
push
in
inc
ficoms
stc
jno
inc
xchg
mov
gs
cmpsl
pop
pop
xchg
inc
lahf
fadd
jmp
sbb
inc
pop
loopne
and
mov
hlt
inc
xor
fwait
cmpsb
push
inc
jmp
mov
dec
bound
cmpsb
xor
addr16
adc
xchg
dec
enter
cmp
hlt
mov
andl
les
pushl
ret
or
and
sbbb
mov
leave
out
cmp
or
xor
sbb
repnz
imul
xchg
jle
stos
jmp
cmp
repnz
in
stos
cmp
inc
test
sbb
negb
sbb
movsb
insb
push
push
insl
out
sbb
pop
test
add
inc
and
push
or
in
jle
pop
in
notl
adc
cmp
or
mov
push
cmp
movsb
sbbb
push
in
lret
and
push
mov
fwait
mov
pop
xchg
les
xchg
xchg
insb
inc
cmpl
pushf
mov
inc
jb
mov
pushl
in
std
mov
mov
mov
jno
xlat
cmc
movsb
inc
jg
gs
xor
or
mov
sti
dec
mov
test
cmp
adc
adc
cs
in
xchg
or
loop
sub
out
mov
xor
lea
loope
jbe
mov
mov
scas
mov
add
mov
popa
push
mov
mov
dec
dec
in
shlb
loope
jne
xlat
movsl
mov
dec
dec
pop
mov
xchg
das
jp
sahf
adc
insl
inc
cmp
xlat
fs
and
lcall
jns
test
push
mov
lahf
sub
lds
pop
jge
je
sub
or
adc
mov
jmp
inc
lret
mov
ret
rclb
addr16
cmp
sub
push
xor
dec
ret
xor
mov
add
or
repnz
movsb
xor
out
call
pop
xor
hlt
inc
mov
cmp
pop
jecxz
in
adc
pop
into
adc
inc
pusha
push
lock
mov
jns
inc
fstps
fsubrl
loopne
js
insl
insl
ret
push
pushf
pushl
adc
adcl
mov
push
push
push
add
pop
ret
and
sub
js
mulb
push
out
mov
push
pop
or
idivl
stos
mov
leave
dec
sbb
sub
xchg
sub
or
or
jp
subb
pop
out
inc
mov
das
add
aas
push
mov
dec
cmp
or
int
orl
push
mov
dec
add
imul
push
lock
and
xchg
popl
or
cmpsl
sti
mov
xchg
xchg
or
shlb
test
insb
xor
cmp
repz
mov
mov
out
outsl
in
sahf
pop
push
sub
push
xchg
mov
xor
test
test
cltd
das
subb
rolb
stos
jg
insb
mov
and
negl
mov
inc
and
mov
and
lods
push
adc
mov
jmp
je
aam
mov
sbb
mov
mov
mov
push
lds
sti
and
cmp
push
pop
push
pop
daa
aaa
xchg
in
addl
adc
adc
jnp
sar
mov
pop
push
sbb
js
mov
sub
xchg
or
pop
dec
fidivl
xchg
mov
cmp
sarb
dec
mov
sub
jns
cmp
in
pop
aad
mov
dec
push
test
jl
jge
out
iret
dec
adc
ret
inc
push
sub
pop
mov
inc
pop
call
cmp
mov
popf
jle
jl
or
into
sbbb
mov
pop
aaa
aas
lahf
adc
push
adc
sti
and
cmp
sbb
loope
je
push
loope
jmp
sbb
push
pop
ljmp
lret
out
inc
or
sti
adc
adc
adc
dec
sbb
dec
scas
xlat
fcoms
pop
push
roll
aas
in
ds
push
movsl
and
test
jno
mov
cmp
or
push
inc
dec
fsubl
cmp
or
mov
xor
push
or
mov
or
rol
push
add
and
xor
mov
xchg
add
hlt
mov
rclb
xchg
insb
iret
lret
sbb
mov
inc
jne
loope
lcall
xor
or
add
sti
push
sahf
icebp
imul
and
scas
pusha
shrb
lret
add
les
popf
inc
dec
push
cmpb
and
mov
repnz
push
ret
rcrl
dec
add
fcoml
into
loopne
jns
outsl
lods
xchg
dec
xchg
cmpsl
loopne
add
rep
mov
cmp
das
dec
and
jb
xor
movsl
mov
cs
or
adc
enter
popf
sbbl
xlat
cltd
dec
or
fstpl
arpl
test
xchg
jnp
cmc
mov
mov
rorl
outsl
mov
mov
notb
iret
sbb
rol
inc
add
mov
mov
mov
dec
lret
and
or
fsts
test
cmp
aad
jp
jnp
pop
iret
imul
ss
rcll
ud1
jp
shll
divl
test
mov
push
push
mov
sbb
cwtl
or
notl
loopne
add
int3
xchg
insl
rcr
sub
scas
gs
call
xor
add
sub
mov
pop
mov
sbb
pop
mov
push
xor
mulb
sbb
or
mov
xchg
out
add
mov
lret
mov
cmpsb
popl
inc
cltd
mov
push
dec
shll
add
cmp
adc
adc
imul
xchg
xchg
cmp
insl
inc
adc
aas
mov
push
inc
cmpsb
ret
lret
jecxz
or
aam
pop
xchg
xchg
xchg
and
mov
fstpl
iret
gs
mov
into
rcr
push
cwtl
outsl
sti
pop
rolb
mov
sub
jnp
push
sub
lock
cmpsb
pop
xchg
icebp
pop
xchg
sbb
xor
adc
int3
lahf
inc
mov
scas
test
jmp
mov
in
js
jle
daa
insl
jns
push
adc
or
ds
pop
add
xorb
jno
nop
or
or
cmp
fistps
fnstcw
adc
je
sub
cltd
jb
cld
int
dec
sbb
xor
push
and
imul
into
push
xor
sti
cmpsl
xchg
or
int
mov
push
rcll
aaa
and
clc
pop
out
xchg
mov
sub
fisubs
int3
in
cmp
out
and
push
addr16
icebp
pop
jecxz
stc
addl
xchg
xor
pop
sub
pop
or
or
outsl
mov
push
fidivl
push
scas
cmp
add
jp
mov
stc
ljmp
xor
subb
or
lahf
add
test
mov
dec
test
cmp
addr16
inc
pop
mov
sub
xchg
cmpsb
bound
mov
orb
in
std
into
cli
jmp
filds
jle
pop
cli
mov
push
loopne
hlt
add
and
imul
lret
int3
sub
xchg
or
shrb
outsb
mov
insl
insl
pop
pusha
loop
mov
nop
movl
cmpsb
pop
testl
dec
xor
ret
xchg
sbb
test
jge
ss
pop
or
mov
mov
jg
mov
jbe
xchg
push
pop
jns
inc
nop
lahf
mov
ret
fadd
lods
mov
pop
fmul
or
lods
testb
xchg
inc
mov
lahf
ret
sarb
push
ljmp
adcl
sbb
pop
or
loopne
cmp
lret
mulb
out
cmp
pop
dec
cltd
gs
clc
mov
cli
push
lret
ds
adc
ret
sbbl
movsl
push
std
int
and
int
push
cmpl
sbb
movsl
call
inc
mov
int3
sbb
jo
je
pop
sub
sub
xor
bnd
aad
rcrl
pop
lock
sahf
mov
dec
adc
and
rol
sub
setg
pop
push
or
inc
fisubrl
je
je
mov
fs
in
cwtl
mov
push
lret
add
jecxz
jbe
nop
inc
mov
mov
ss
push
lret
mov
lods
pop
lods
xor
scas
clc
push
movsb
sti
xchg
xor
mov
imul
jg
sbb
es
std
je
pop
cmp
push
inc
push
fwait
pop
adc
add
ficoml
imul
fmuls
sub
mov
sbb
lea
or
cmp
jle
pop
cmpsl
daa
mov
mov
cmp
mov
aam
arpl
mov
movsl
adc
lahf
mov
fcmovnu
dec
or
popf
shl
jae
lds
les
std
iret
jnp
jo
test
lret
lods
roll
sbb
inc
insl
rcr
cwtl
dec
sti
lahf
add
rcll
fwait
mov
leave
push
nop
adc
lds
pop
sbb
fldl
loopne
fisttpll
mov
mov
pop
xor
dec
test
sub
xlat
loop
add
jbe
jnp
andb
push
or
lock
dec
cltd
push
dec
mov
in
test
push
stos
pusha
loopne
in
mov
xor
xchg
jns
shr
mov
add
fnstenv
std
aaa
xchg
out
fidivs
hlt
xor
push
pop
cmp
mov
imul
jbe
mov
inc
lods
xchg
in
movsb
cmpsb
mov
add
xor
cmpsb
stos
loopne
ror
int
mov
add
div
cld
push
int3
mov
cmp
mov
lcall
sbb
xor
bound
jo
mov
ljmp
cs
sub
call
lds
imul
jae
mov
add
test
add
int3
inc
ss
popf
pop
xor
bound
inc
mov
sbb
mov
mov
or
or
pop
es
scas
xchg
inc
xor
imul
notb
adc
ss
xor
jbe
mov
add
negl
mov
in
mov
fld
orl
out
frstor
sbb
jno
sub
and
pop
jns
mov
inc
cmp
lret
lods
add
push
jge
jecxz
dec
das
push
xlat
aas
out
cmp
std
mov
add
nop
frstor
sbbb
xchg
jb
icebp
mov
or
pop
into
test
or
pop
xor
push
imul
es
push
ljmp
xchg
sub
xchg
cmp
or
mov
jp
sti
cmp
std
mov
fidivrl
dec
xor
lods
xor
rorb
or
or
pop
adc
lahf
stc
xor
or
xlat
adc
sbb
aaa
pop
dec
jmp
in
mov
aam
lods
test
loopne
xor
xor
out
test
jae
add
sets
jecxz
cmp
mov
cs
mov
jge
cld
out
out
sub
lods
out
imul
push
push
rcr
sub
add
adc
xor
loop
je
mov
jnp
push
das
lds
mov
cltd
and
lahf
into
and
mov
aaa
in
loopne
dec
jns
int3
xchg
inc
mov
ljmp
in
sbb
ljmp
xor
inc
sbb
mov
and
push
and
inc
cwtl
gs
inc
ds
insl
aad
pop
add
xor
xchg
sbb
rolb
xor
adc
sarb
sbb
inc
add
jle
inc
jge
std
es
loopne
divb
cmp
and
jmp
add
in
add
ss
cmp
mov
xchg
ss
push
mov
add
xor
inc
or
sub
jne
pop
add
sub
xchg
jno
dec
sahf
xlat
xchg
fs
xchg
mov
xchg
push
aad
add
hlt
mov
sub
inc
scas
dec
movsb
fwait
dec
das
mov
mov
dec
fdivr
or
sub
jnp
scas
jmp
and
inc
push
xorb
in
insl
stos
xchg
ffreep
les
inc
xchg
fs
cmp
das
adc
mov
mov
jmp
popf
inc
pop
das
ficoms
or
lret
scas
mov
cmpsb
popa
xor
lcall
xor
jge
inc
cld
cmp
sub
mov
stos
inc
inc
jge
mov
sbb
iret
jecxz
out
sti
mov
and
les
fisttpll
or
cmpsl
pop
out
xchg
ds
add
jg
cmpsb
mov
stos
sbb
out
mov
xchg
repnz
xchg
mov
cli
popa
mov
js
std
sbb
or
mov
nop
inc
or
mov
dec
in
lods
fsubs
repnz
comiss
dec
lret
fdivrs
cmpsl
or
xor
mul
jno
fcmovnu
sbb
int
insb
lret
jb
mov
xchg
and
fbld
imulb
cmp
sub
pusha
ficoms
mov
xchg
dec
cld
or
pop
inc
out
dec
adc
sbbl
adc
inc
in
je
sbb
ljmp
add
sub
add
mov
icebp
bound
cmp
arpl
add
push
lock
mov
dec
pop
push
lock
mov
and
insl
fwait
mov
dec
sbb
sub
pop
out
push
add
push
iret
lods
cmp
test
xchg
and
fcompl
stos
mov
outsl
cmpsl
lcall
popa
daa
sbb
cmp
imul
data16
in
mov
fidivrl
cmp
rcrl
lock
imul
lea
adc
shlb
fmull
sub
das
adc
push
cmp
jbe
sub
in
into
lcall
or
push
fstpl
mov
outsl
mov
pop
pop
xchg
scas
outsl
jecxz
fsubrl
pushf
loope
sbb
adc
or
mov
add
and
insl
leave
outsl
jnp
cli
lret
jae
push
arpl
jns
add
outsb
lods
cmp
sbb
jge
mov
icebp
testb
bound
push
inc
push
daa
mov
pxor
enter
jae
test
insl
cmp
and
mov
loop
dec
cmpsl
xchg
inc
add
jne
jnp,pt
in
push
out
ds
xchg
pop
das
mov
jne
dec
sbb
mov
out
jno
pop
sub
cmp
cmp
mov
cmp
fmull
adc
cmpsb
dec
jnp
jge
mov
inc
mov
pop
jl
mov
ret
testb
mov
fldenv
cmp
xlat
test
push
in
lods
and
and
fwait
jecxz
dec
xchg
notl
nop
inc
fiadds
out
clc
icebp
cli
xchg
mov
out
repnz
mov
xchg
divps
push
jnp
shll
movsb
aam
mov
dec
fistpl
push
inc
pop
lea
inc
sub
paddw
pushf
pushf
xor
jle
cmp
inc
dec
inc
cmp
js
outsb
int3
mov
mov
dec
xchg
shlb
cld
outsb
fistps
aam
cld
pop
sub
inc
cli
pop
xor
ss
pop
cmp
scas
arpl
push
int
in
fistpll
pushf
imul
lds
inc
cmp
xor
push
or
xchg
addr16
xor
icebp
push
xor
mov
in
xor
pop
dec
test
add
push
rolb
push
scas
pop
cmpsb
das
pop
add
fisttpl
arpl
loop
test
lcall
cld
out
sbbl
mov
orl
movsb
idivl
sub
lods
out
sbb
lods
imul
cld
or
movsb
in
or
mov
or
mov
pusha
and
dec
test
test
pop
or
push
in
cmp
jns
xchg
lret
adc
test
cwtl
xchg
scas
or
cwtl
gs
or
lea
xor
jmp
js,pt
neg
sub
sbb
pop
push
adc
pusha
xchg
rcrl
into
outsb
ret
pusha
mov
inc
sbb
push
jo
or
addr16
sar
and
mov
mov
repnz
push
xchg
js
xor
mov
pop
orb
ljmp
jb,pt
inc
inc
pop
insl
sub
ret
mov
stos
dec
imul
mov
test
insl
lock
inc
sbb
mov
dec
shrb
lcall
xchg
aam
sarl
sub
adc
or
dec
sub
flds
scas
js
mov
push
movsl
adc
bound
fcomi
pop
or
popf
movsb
mov
fdivrp
aaa
and
out
test
outsl
or
daa
fsts
into
rcrl
jp
sbb
xchg
loop
rorl
add
lret
inc
fwait
fs
jecxz
mov
in
push
mov
and
adc
andl
cmp
jge
dec
push
cmpl
mov
dec
daa
xor
fbld
lea
pop
mov
jl
lods
addr16
jmp
sub
subl
stos
ja
call
pop
jmp
pop
test
xor
int3
repz
repz
jb
fdivs
add
mov
clc
mov
out
jl
cmpsl
xchg
inc
call
sbb
lret
call
pop
sti
or
sub
test
scas
fstl
cmpsb
pop
xchg
cld
aas
dec
mov
in
and
adc
sarl
jbe
mov
mov
mov
movsb
pop
rorl
das
push
xchg
jle
nop
imul
je
fisubrs
in
cltd
pop
movsb
adc
enter
or
push
sub
out
nop
push
inc
mov
int
in
add
lods
std
dec
movsb
sti
rcl
enter
cmp
cmp
and
or
repz
addb
sbb
test
lock
add
insb
aaa
lahf
out
push
jo
xchg
testl
cmpsl
nop
out
sbb
ret
or
pop
jno
add
call
lods
fisttpll
repnz
repz
pop
mov
cmp
pop
cmpsl
popa
dec
adc
insb
sub
pop
movsl
and
mov
hlt
xor
mov
into
inc
cmpsl
jae
pop
inc
lret
loop
popf
sahf
test
jmp
movsb
adcb
pushl
stc
les
xor
jmp
das
mov
xor
add
bnd
pop
jo
int
add
jo
jae
subb
decb
out
xchg
xchg
and
lods
stos
jmp
push
jg
pop
movsl
out
xchg
mov
jns
loopne
xchg
fldcw
jp
add
cmp
push
lcall
add
enter
pop
and
shrl
dec
push
ja
shl
adcb
ja
inc
repz
outsl
and
rorl
inc
jnp
push
jge
sbb
xor
push
shr
fcomp
enter
and
daa
mov
ret
and
bound
xor
cwtl
pop
repnz
adc
call
or
mov
insb
push
xchg
push
dec
lea
or
mov
sub
subl
jmp
scas
in
or
nop
and
lret
repnz
mov
sub
fmull
xor
xchg
sub
fidivrl
mov
push
sahf
sbb
jge
push
fldcw
sub
push
mov
mov
lds
clc
dec
pop
or
pop
rcr
stc
cmp
ss
rep
rcrl
pusha
pop
lret
or
add
pop
icebp
adc
push
xchg
shll
add
fstpl
push
out
mov
ds
mov
fs
rcr
dec
test
xchg
and
call
or
jp
jp
enter
jmp
jmp
mov
push
fisubrl
pop
out
stos
sub
rcrb
cltd
pop
and
out
inc
push
xchg
hlt
outsb
fidivrs
xchg
imul
push
dec
insb
and
add
test
or
mov
sub
cli
push
or
lea
sub
addl
and
addr16
dec
in
cli
pop
pop
inc
ljmp
popa
cmp
mov
fisubrl
pop
movsb
sbb
scas
mov
mov
mov
adc
xor
pop
jb
cmp
xor
loopne
push
pop
sbb
es
pop
mov
aas
mov
mov
pop
insb
aam
jmp
xchg
aas
pop
jl
jl
mov
push
push
shrb
xchg
adc
nop
pop
test
cmp
xchg
cmpsb
shlb
insl
popa
xchg
or
mov
in
jge
and
xchg
dec
jns
repz
add
mov
dec
and
dec
rorl
or
pop
aaa
adc
adc
xor
addb
repz
mov
insb
shrb
and
jg
sub
out
popa
push
addb
adc
test
movb
je
je
mov
lock
cltd
xchg
ljmp
inc
jmp
int
ljmp
jle
inc
ds
arpl
mov
inc
movsl
scas
ds
lods
movl
fbld
cs
mov
std
dec
mov
test
pop
inc
insb
in
shlb
cmp
cmp
cmp
repnz
lret
sbb
loope
push
in
fistpl
inc
je
ljmp
in
push
repnz
lahf
or
in
push
lahf
in
add
sti
enter
or
pop
cmc
lret
dec
mov
xor
mov
jp
and
insl
iret
lds
rcr
cmp
je
sub
lahf
xchg
mov
fs
test
dec
sub
adc
hlt
xorl
faddl
pushf
jl
stc
pop
shld
sbb
repnz
mov
jg
imul
pusha
push
mov
mov
inc
pushf
fnstenv
inc
mov
je
ljmp
hlt
jecxz
insl
mov
cmc
mov
mov
into
iret
mov
jl
lock
adc
xchg
sti
iret
cmp
call
mov
rcrl
cmp
add
fdivp
fs
jg
call
dec
out
cmp
das
jbe
ret
cmpsb
sahf
lds
jp
ja
fs
aam
xlat
mov
lods
cmp
push
pushf
mov
jge
mov
cltd
adc
fmul
in
mov
push
fstl
sbb
fcoms
aad
mov
in
jg
cmpb
cld
stos
repz
arpl
fdivrs
lea
mov
mov
mov
mov
cmp
mov
je
cmp
in
inc
xchg
bswap
nop
sbb
add
pushf
jecxz
scas
cs
add
pop
mov
icebp
mov
ljmp
imul
and
dec
mov
scas
outsl
push
pop
fwait
add
cmp
addr16
jecxz
push
xchg
push
std
mov
jecxz
sti
fdivs
outsb
addl
jp
popf
mov
push
and
call
fadds
and
and
cmp
mov
mov
js
stos
jno
inc
popf
push
dec
into
mov
xor
test
mov
lea
shll
out
das
movsl
pop
xchg
xlat
xchg
pop
sbb
testb
cwtl
repz
imul
movsb
dec
dec
adc
adc
into
mov
imul
add
adc
shr
cli
cmp
dec
cld
mov
lcall
mov
mov
xor
stos
and
ss
sar
and
xchg
notb
movsb
and
inc
jo
cmc
push
mov
fistps
pop
adc
test
push
fistpl
daa
cmp
dec
cmp
dec
mov
je
fnsave
xchg
sbb
gs
sbb
loopw
es
mov
aaa
mov
cmpb
sbb
shll
mov
inc
pop
fistps
add
lret
add
movsl
ret
jmp
dec
out
fwait
scas
inc
inc
subb
rorl
dec
sub
fsubrl
push
dec
mov
inc
mov
add
sub
add
push
or
pop
fnstenv
out
mov
mov
out
jge
rorl
jne
sbb
por
mov
xor
push
mov
pop
in
push
std
add
xchg
stc
xchg
dec
popa
or
sub
inc
repz
pop
sahf
mov
sub
sub
xchg
push
sbb
push
test
adc
rorb
shlb
int
mov
out
inc
and
dec
cs
xor
jge
or
daa
mov
xchg
or
test
cmp
adc
stos
mov
cmp
push
loopne
sub
xor
pop
out
ljmp
jmp
sub
lock
mov
test
cwtl
inc
cmpsl
frstor
or
sub
lock
stc
sub
mov
pop
cmp
loope,pn
pop
mov
test
sahf
fs
push
mov
lds
es
out
fdivs
inc
mov
jns
add
cmp
push
xchg
sahf
sbb
sti
push
pop
loop
mov
in
dec
inc
add
lret
jmp
cwtl
dec
cmp
and
fldenv
orb
test
iret
mov
test
jl
sar
icebp
lgs
and
divb
fsubrp
push
jb
je
sub
sub
loop
xlat
loop
jne
cmpsb
ja
adc
mov
cmpsb
jb
inc
mov
sub
dec
push
popf
roll
and
orb
pop
mov
and
inc
leave
imul
icebp
bound
push
and
mov
mov
popf
xor
lds
orl
and
inc
fnstcw
mov
gs
lods
xor
test
cltd
hlt
sub
sbb
fstps
lock
pop
cmpb
jne
jb
xchg
or
loopne
mov
cltd
xlat
dec
pcmpgtd
xor
sub
or
xchg
cli
sbb
pop
aaa
sbb
or
and
imul
xchg
cs
mov
std
dec
enter
imul
dec
inc
sti
xor
mov
dec
in
mov
xor
fs
in
add
pop
adc
jno
jne
pop
sub
fwait
inc
push
jns
xchg
mov
addb
xchg
dec
cltd
mov
add
ret
or
mov
xor
fmull
mov
inc
cmp
stos
addr16
popa
lcall
insl
xchg
add
pop
and
bound
and
ret
cltd
fucomip
int
pop
call
fidivs
jo
jmp
imul
outsl
das
nop
stc
adc
jno
les
rclb
mov
jb
cs
xorb
adc
adc
jb
add
mov
push
dec
cwtl
adc
jo
sarb
push
lahf
add
divb
cltd
adc
in
out
mov
cs
inc
aam
mov
sbb
andb
lds
and
test
xor
xchg
ljmp
int
jp
sahf
or
mull
lcall
xchg
add
jp
mov
jae
xor
scas
fstl
xlat
push
push
aas
bound
jmp
xor
inc
dec
ljmp
arpl
movsb
mov
pusha
push
in
insl
push
lea
sub
mov
xor
nop
mov
pop
push
lods
cmp
in
sub
out
xlat
pushf
fdivrl
xor
jle
lods
cwtl
push
xchg
mov
popa
mov
push
dec
xchg
xlat
cld
lock
jp
and
dec
je
int3
sub
out
adc
xchg
xor
jg
in
fbstp
add
rorb
popf
jns
outsl
sbbl
ja
push
data16
in
std
xchg
stos
inc
pop
push
into
adc
ffree
les
sbb
pop
add
push
adc
sub
add
mov
mov
pop
lods
push
inc
fsubr
push
dec
push
cmpsl
xor
adc
mov
scas
imul
sub
push
fwait
dec
xchg
ftst
push
fcmove
cmp
cmp
imul
outsl
lea
mov
jmp
xor
sbb
jp
in
push
mov
cmp
std
mov
mov
dec
stc
and
jns
xlat
scas
sbb
lock
inc
sub
fnstenv
mov
inc
adcl
and
push
fldenv
xchg
lret
aas
stc
push
add
jne
out
icebp
push
jns
mov
cmp
xchg
mov
xor
je
cmp
xchg
or
lods
xor
ret
nop
xchg
mov
int
jne
cmp
test
cmp
scas
push
dec
fidivs
das
iret
rorl
sub
jnp
pushf
xchg
popa
lcall
pop
pop
addl
jg
cmp
cmp
cmp
and
cmp
sbb
cltd
mov
ret
jae
jle
mov
stos
enter
cmp
in
ja
push
adc
sbb
sbb
xor
sbb
cwtl
cld
pop
push
stos
cmpl
cmp
out
jnp
adc
adc
aaa
lea
jbe
or
xchg
dec
jnp
xor
inc
adc
xor
push
lods
lcall
mov
or
xchg
push
lahf
jnp
cmc
imul
sbb
cwtl
xor
pop
cwtl
inc
sub
out
push
pop
in
shlb
inc
jl
frstor
gs
xor
je
into
jnp
xor
loope
or
jns
mov
in
push
adcb
add
inc
adc
lcall
xor
sti
subb
inc
pushf
adc
rcl
rolb
fisttpl
xchg
jl
push
sub
fs
inc
jle
add
mov
mov
outsb
das
ja
leave
call
mov
cs
dec
and
inc
mov
adc
imul
bswap
sbb
adc
aaa
cmp
cmp
stos
cs
sbb
push
fwait
aaa
xchg
aas
and
insb
fwait
mov
add
mov
cmp
mov
fidivrl
pushf
lods
scas
or
xor
xor
xor
and
shlb
lods
mov
leave
popa
sahf
push
scas
mov
pop
inc
testb
out
test
sub
loop
bound
dec
sbb
mov
addr16
loopne
adc
jbe
les
shlb
insb
movsb
push
jg
dec
dec
cmp
dec
sbb
push
pop
aad
lds
fadds
dec
mov
int3
cmp
adc
cmp
cwtl
xchg
mov
xor
call
jno
jbe
test
lods
mov
cmp
test
ror
daa
mov
push
mov
inc
icebp
jae
stc
stos
xor
xor
and
int3
mov
push
jb
mov
inc
scas
ret
addl
pop
sti
sahf
or
mov
loopne
out
test
mov
mov
std
daa
xchg
ss
and
sbb
dec
test
xchg
imul
or
cmc
or
shl
orl
into
fcmovbe
mov
ret
push
sub
imul
mov
or
jmp
xchg
ja
inc
dec
testl
add
or
sbb
fs
xchg
mov
out
les
iret
mov
dec
lds
inc
ja
mov
and
subl
lock
push
cld
daa
and
arpl
loopne
scas
es
or
sub
add
jne
repnz
inc
bound
xorb
in
int3
inc
ret
insl
dec
ret
jb
mov
xor
int3
js
jl
arpl
mov
add
push
aad
jecxz
mov
or
icebp
inc
sub
outsb
jecxz
imul
adc
xor
loop
mov
xor
jg
loop
push
arpl
das
sub
aam
cmpsb
mov
jecxz
les
movsl
xor
mov
xchg
xor
in
or
dec
adc
loope
stc
movups
adc
push
arpl
sub
mov
stos
cmpsl
into
stc
sbb
lods
ss
push
push
and
cmpsl
stos
cs
gs
scas
xor
aam
adc
popa
pop
push
sbb
dec
mov
stc
leave
mov
mov
std
add
aas
sbb
lods
jp
fisubrs
cmpl
rcrb
push
pop
lcall
ljmp
inc
sarl
adcb
outsb
pop
mov
rcll
repnz
ss
cmp
mov
mov
into
aas
popf
xchg
cmp
xchg
xchg
in
scas
jnp
mov
jp
cmp
mov
or
dec
pusha
or
mov
and
fwait
clc
xor
int
push
jb,pt
adc
and
aas
andl
popf
cmp
pop
mov
jbe
xlat
mov
pop
scas
xchg
ret
push
sti
int3
gs
icebp
out
mov
push
shrb
cmp
ja
sbb
js
mov
ss
inc
stc
test
xor
mov
leave
in
cmp
push
push
mov
popf
pusha
jo
test
xor
jnp
idiv
bound
ja
testl
movsb
sub
clc
mov
mov
mov
xor
rcrb
sub
movsb
mov
mov
adc
stos
js
xchg
and
test
push
dec
inc
dec
mov
les
insb
inc
shlb
push
mov
lods
mov
xchg
add
movsb
scas
cltd
sub
dec
mov
adc
loopne
jne
lret
movsb
push
lods
or
cs
ret
movsl
movsb
rcrl
add
jg
xchg
sbb
in
jle
inc
jle
pop
js
stos
pushf
add
mov
out
add
xor
pusha
divb
loop
fdiv
xchg
or
pop
mov
sbb
fists
mov
push
mov
pushf
pop
jnp
sahf
jp
mov
sub
enter
add
scas
mov
sbb
test
ljmp
mov
push
out
adc
jecxz
inc
fistl
nop
dec
rorb
int
lock
and
popa
jmp
jb
adc
hlt
insb
push
jno
jmp
adc
mov
leave
and
shl
adc
jo
lock
int3
imul
fimull
sub
xor
or
mov
add
mov
cmpsl
je
sub
and
or
push
jle
or
dec
add
cmp
fidivrl
mov
push
out
mov
jb
pop
add
ja
inc
inc
mov
mov
jge
sarl
push
push
or
cmp
aam
popa
bound
adc
xlat
mov
sub
lcall
es
jecxz
nop
notl
xor
orl
mov
or
add
fsubrl
scas
test
cmpsb
fmuls
incb
jle
jecxz
jae
xchg
or
push
or
jmp
mov
dec
adc
sub
shl
lds
push
xor
sub
or
and
int3
mov
adc
dec
mov
push
jns
cld
cwtl
inc
sub
jmp
rclb
dec
adc
cld
decb
lock
fcom
cmp
sbb
mov
lret
xor
pop
push
lret
aaa
sti
adc
jge
dec
sbb
add
xor
push
push
outsb
scas
mov
add
dec
adc
lock
test
xchg
jecxz
xor
jp
out
cmpsl
sub
cmp
push
mov
jo
subl
scas
test
scas
lock
imul
jp
inc
inc
setb
mov
enter
andl
adc
cmpsb
pop
jo
icebp
ss
and
pop
dec
sub
lcall
test
and
xor
mov
pushf
test
jmp
outsb
pop
mov
sbb
jno
jns
cmp
cmp
xchg
fdivr
sub
xor
rorb
pop
movsb
push
call
loopne
std
or
aam
push
dec
mov
mov
int3
clc
push
loope
xor
cs
addl
inc
jl
sbbl
gs
dec
fs
mov
aaa
lock
pop
mov
adc
clc
pop
xchg
jl
xbegin
jo
mul
push
cmc
ja
sub
jae
daa
mov
cmpsl
loopne
test
arpl
jne
pop
repz
aam
sub
cli
cmc
lahf
cmp
cmp
loope
lret
push
lret
popf
push
test
xor
out
jl
aaa
ss
sbb
mov
insb
out
cmp
lock
cs
jns
and
pop
sbb
xchg
int3
test
lock
mov
xor
fwait
pop
pop
xorl
jnp
and
cs
xorb
mov
sbb
mov
xchg
jp
andb
mov
jmp
pop
cmp
xor
lahf
mov
and
inc
fstpl
sti
jmp
jp,pt
pushf
xchg
outsl
in
or
aam
cmp
movsb
cltd
sub
jge
sub
pop
cmp
rorl
fwait
push
xor
in
dec
lea
xor
daa
add
in
jge
mov
mov
mov
jae
fs
adc
test
or
lea
dec
outsb
pop
pop
mov
pop
jmp
stc
ds
jne
cltd
lea
cmp
mov
mov
inc
xchg
sub
add
dec
cbtw
mov
and
jae
in
imul
call
loop
pop
push
mov
mov
insl
xlat
xorl
sbb
jnp
mov
imul
xchg
fildll
ficompl
jge
dec
push
push
lcall
jl
add
inc
scas
scas
adc
lock
sub
pop
jbe
add
sub
and
andb
mov
xchg
dec
or
cmp
or
leave
dec
sub
push
sbb
in
push
or
out
or
xchg
inc
mov
cmpsb
orl
ret
inc
or
cmpsb
cld
fsubs
lds
data16
add
xor
pop
and
mov
xor
adc
cmp
sahf
or
cmpsb
hlt
lahf
pop
cmp
pop
and
fcompl
mov
pushf
popf
in
cld
push
test
movsl
jp
adc
xchg
adc
xchg
add
mov
imul
and
inc
stos
movsl
sbb
addr16
pop
lret
sahf
cwtl
outsl
aad
popf
js
mov
xchg
pop
or
mov
pavgw
xchg
iret
jb
aaa
push
push
adc
jb
enter
dec
xchg
jle
in
js
inc
cmpsb
sub
movsl
lret
mov
xchg
movsb
dec
add
fsubl
xchg
into
push
rorb
fmuls
fisttps
add
xchg
shlb
xchg
pop
fists
out
jg
jo
aas
mov
pop
fsubrp
jno
pop
jp
imull
adc
fcmovnbe
dec
pop
lret
cmpsb
sbb
imul
xchg
test
and
pop
push
push
stos
sbb
xchg
xchg
mov
jl
mov
icebp
dec
sbb
in
sub
push
xor
lds
xchg
notl
push
js
ja
clc
rcrb
xorb
add
mov
xor
or
mov
mov
test
pop
or
aas
fisubrs
ljmp
add
ret
sub
daa
stos
pop
jae
ds
pop
sub
mov
xor
add
popf
test
nop
jl
jle
inc
jle
popw
mov
lahf
mov
sub
cwtl
in
mov
cli
mov
and
es
pop
repnz
jg
push
loopne
xchg
inc
sarb
pop
and
gs
shll
sbb
dec
add
cld
xchg
mov
imul
jb
cmp
or
sbb
jbe
cvtpi2ps
cmpl
sub
fwait
les
jo
mov
xor
hlt
je
and
or
addr16
jp
push
lret
mov
mov
jle
push
icebp
push
inc
ret
lods
icebp
sub
xchg
lret
lods
push
pop
imul
sub
cmpsl
dec
cmpsl
pop
inc
movsb
sub
lcall
mov
out
add
imul
mov
inc
mov
push
or
data16
sbb
mov
aam
mov
fcomps
xchg
push
adc
pop
test
adc
sub
jo
xor
cmp
ficoms
daa
leave
shll
fs
cmp
xchg
pop
bound
xor
sti
push
jecxz
mov
inc
sub
movsb
dec
cld
pusha
lds
hlt
mov
push
sahf
les
mov
push
inc
or
jle
pop
pop
jno
cwtl
mov
sahf
mov
xchg
jecxz
xor
push
fmull
jl
xlat
mov
dec
mov
nop
outsb
xchg
pop
push
shl
mov
inc
pop
hlt
aas
lcall
sbb
or
sub
jl
enter
mov
subb
push
daa
orb
adc
jne
jnp
pushf
enter
icebp
jecxz
mov
nop
sub
cmp
fdivrp
out
cmpsl
dec
xor
jge
push
je
lock
jecxz
pop
inc
xchg
das
cli
and
mov
loopne
fstpl
xor
inc
test
lret
xor
push
lcall
fs
or
outsb
repnz
xchg
jle
ljmp
mov
adc
xchg
cwtl
pushf
xor
push
push
mov
mov
lock
and
stos
popa
mov
adc
sbb
test
push
lea
jle
ret
dec
add
ret
push
repz
xor
lcall
test
adcl
insb
sbb
lea
or
cmp
jb
and
add
mov
push
xor
outsl
enter
je
push
sub
cmpsb
bound
test
jle
in
or
mov
adc
jnp
mov
push
xor
jl
or
push
add
mov
pop
std
cmp
sub
and
fcmovnbe
inc
mov
ss
ja
jle
aad
push
jg
gs
pop
dec
xor
mov
pop
es
stos
mov
or
jle
ret
shrb
lock
adc
or
loope
mov
repz
stos
jp
jo
pop
and
adc
jle
and
xorl
test
out
shrl
test
and
push
xor
dec
xor
and
mov
jp
pop
ret
push
mov
js
movsb
and
push
ljmp
aaa
xor
push
dec
inc
cli
sbb
push
xor
jno
or
loope
pop
jno
inc
xorl
cwtl
icebp
pop
jmp
stc
xchg
or
shrl
add
or
push
cld
repnz
adc
xchg
mul
out
lods
lea
or
cmp
inc
or
pop
push
inc
inc
mov
ret
mov
jle
and
idiv
cmp
arpl
ja
xchg
cmpsb
cmp
aaa
daa
jae
insl
push
inc
ss
das
pop
iret
pop
xor
stos
or
jns
adc
fnstcw
into
push
les
or
push
leave
mov
pop
and
jecxz
movsl
es
fdivrs
xchg
out
loopne
sarb
das
pop
call
int
je
movsl
in
shll
sbb
out
add
adc
sbb
mov
test
mov
push
push
ret
xor
add
iret
lret
stos
lock
and
push
aad
rol
gs
aam
lcall
fisttpl
push
je
lret
mov
sarl
sbb
cli
jmp
and
push
aas
pop
push
dec
cmpl
xor
add
pop
xchg
cmp
push
lea
insb
dec
test
repz
shrl
mov
adc
repnz
inc
scas
sarl
adc
sbbl
scas
sahf
xor
jbe
out
nop
ret
das
xor
out
mov
and
fisubrs
lock
cmp
mov
ja
pop
fwait
insl
f2xm1
mov
jecxz
mov
mov
ret
loop
enter
movsl
mov
xchg
bound
pushl
add
bound
xor
pop
bound
ret
pop
stos
xor
pop
call
cmpsl
lods
mov
ret
jo
push
out
sbb
xchg
ret
jb
and
out
cmp
xchg
xor
pop
int
and
adc
negb
xlat
das
pop
cld
aaa
or
mov
fadds
and
mov
mov
xchg
mov
std
mov
pop
shr
scas
add
xchg
xor
sbb
sbb
mov
repz
mov
fxch
push
les
movsl
jmp
inc
jns
lahf
push
and
and
out
lret
rcl
test
in
out
fs
xlat
push
pop
pop
or
pop
pop
jmp
mov
or
loop
es
sbb
mov
push
stc
int3
ret
add
jae
sub
pop
or
adc
stos
mov
inc
test
popa
mov
fildl
mov
inc
and
stc
mov
fucomp
js
outsb
inc
mov
push
lock
xor
adc
mov
mov
mov
pop
ss
addr16
push
fwait
stos
pop
imul
in
dec
xchg
insb
fistl
stos
loopne
in
push
test
pop
bound
push
cmp
pop
arpl
fisttpl
gs
push
xor
pop
pop
aam
jae
addb
push
faddp
adc
mov
add
pop
push
push
shr
jo
mov
xchg
out
fs
inc
xor
int3
or
jecxz
or
lods
movsl
faddl
dec
jnp
sub
lahf
in
mov
cmp
pop
jecxz
in
and
int
insb
filds
std
loop
push
out
cmc
orl
jne
pop
xor
push
adc
fldln2
dec
add
lods
loop
ja
rcl
mov
dec
outsb
dec
loopne
xor
jne
or
call
icebp
pop
cwtl
mov
sub
mov
pop
dec
or
xchg
out
add
inc
adc
dec
pushf
sbb
pushf
and
fsubs
outsl
ret
and
mov
aam
ja
mov
insb
inc
aaa
mov
mov
xchg
pop
and
push
push
aaa
cmp
outsl
es
dec
xchg
adc
je
leave
and
mov
inc
adc
push
xchg
xchg
fistpl
adc
pop
or
mov
popf
cmp
sbb
mov
pop
push
or
mov
imul
sarl
push
push
iret
repnz
xor
mov
frstor
ja
jp
js
vsqrtsd
cli
aas
cmp
dec
popa
in
add
inc
sbbl
mov
mov
mov
scas
sbb
sub
jecxz
dec
jmp
xor
jp
and
or
repz
jecxz
push
dec
sbb
push
repz
xchg
jo
mov
push
jl
insl
or
in
int
shrb
adc
fwait
imul
push
in
movsl
mov
test
out
sahf
push
sub
testb
mov
jb
inc
es
out
bound
sbb
ret
mov
adc
dec
mov
sub
rorb
cld
lods
jecxz
repz
pop
fs
sub
ds
adc
sub
mov
int
pop
lcall
sub
lret
xchg
dec
or
test
mov
call
pop
mov
add
adc
mov
flds
pop
lea
inc
sub
loope
pop
cmp
nopl
fstpt
mov
bound
add
pop
or
movsl
es
cld
push
stc
fstps
adc
adc
test
jnp
call
rclb
sbb
enter
cs
out
ja
scas
adc
lret
mull
loopne
scas
mov
shl
xor
imul
push
js
dec
lahf
mov
inc
in
jns
sub
cltd
jp
adc
ror
sbb
in
movl
lret
ljmp
dec
addr16
pop
mov
mov
dec
out
sub
loopne
jp
push
mov
xchg
mov
or
dec
out
pop
ss
sub
fdivrs
arpl
inc
stc
cmpsl
aas
stc
mov
mov
push
or
pop
and
cmp
jbe
mov
push
cltd
pop
xchg
push
fcomi
xor
bound
daa
in
rcrl
not
xchg
xor
fbstp
shl
aad
sahf
mov
out
pushf
aam
mov
clc
xor
add
shlb
imul
xor
rolb
cld
out
imul
dec
mov
hlt
sbb
adc
xchg
xchg
in
cmp
pushf
pop
sbb
sbb
mov
mov
jnp
dec
xchg
das
or
cltd
dec
ja
jmp
imul
cmp
clc
jp
mov
outsl
out
in
clc
cld
push
test
sbb
cmp
dec
mov
out
test
int
add
scas
jno
cld
mov
nop
sub
jns
mov
aad
xor
push
sahf
std
adc
rorl
jl
cmp
or
adc
xlat
test
dec
shlb
adc
pop
loopne
testb
cmpb
jg
ds
fisubrs
inc
mov
xchg
sub
xlat
les
pushf
xor
scas
jno
mov
cwtl
and
add
push
pop
mov
cli
adc
jle
cmp
rcrl
inc
rorl
call
pop
jo
mov
fldt
push
in
rorb
fisubrl
loope
jbe
das
mov
jne
and
jp
jb
lock
into
push
repz
inc
cmp
jmp
inc
mov
xor
outsl
inc
test
mov
jnp
sub
push
imul
cmp
pop
scas
push
jl
adc
xor
or
fisubrl
cmp
jnp
cmpsl
cmp
dec
xor
cli
repnz
fsubrl
adc
lods
mov
sub
rolb
shlb
pop
icebp
jecxz
pop
push
mov
sub
push
fcompl
sub
addb
adc
xchg
nop
inc
mov
stc
add
sbb
mov
push
sbb
adc
into
test
pop
aas
or
jp
scas
sub
pop
lret
push
sbb
cltd
es
cmpsl
jg
add
stc
das
inc
cmp
xchg
jecxz
and
cmpsl
js
cmp
jbe
and
sbb
xchg
out
call
cld
sub
xchg
mov
sbb
adc
pushf
pop
pop
andl
pop
push
insb
mov
and
jnp
fdivl
or
mov
int
xor
cmp
cmpsb
ss
imulb
jno
or
not
mov
js
mov
shl
adc
lea
cmp
icebp
enter
inc
aas
ljmp
or
adc
lea
pushf
fists
mov
int
sbb
outsb
pusha
into
xchg
mov
aam
cmpsl
and
pop
clc
imul
sbb
cmp
leave
push
mov
out
jo
sti
jl
push
add
xchg
xlat
adc
mov
lods
xor
frstor
jge,pt
pop
add
icebp
sub
mov
and
in
cmpsl
pop
mov
ss
dec
repnz
jnp
hlt
pop
pop
push
ds
jge
sub
or
orl
xchg
sbb
js
xchg
pop
cltd
test
mov
push
aaa
mov
fucomp
jnp
inc
dec
jbe
cmp
and
mov
sbb
es
dec
pop
outsl
mov
insl
fisubl
and
push
ret
cmp
push
cli
jo
jg
mov
add
ja
jnp
aas
test
movsb
popf
test
pusha
jmp
jmp
repz
arpl
stos
inc
mov
jne
in
cld
shlb
mov
sarb
mov
aad
mov
std
xchg
mov
adc
xchg
addb
insl
push
cmp
inc
jns
dec
out
das
ljmp
sub
pop
into
std
jb
mov
push
mov
rcrl
mov
testb
out
or
cmpsl
ds
out
push
sti
add
push
cmp
aad
pop
in
inc
insl
xor
mov
cmp
jp
repz
dec
leave
imulb
jnp
pushf
ficompl
ffree
aad
adc
mov
inc
leave
je
les
pop
inc
adc
dec
lds
cmp
push
adc
jbe
scas
mov
or
push
sbb
xchg
leave
leave
clc
fsubl
or
retw
clc
ds
add
dec
ja
add
pop
mov
sbb
adc
mov
stos
push
push
mov
cwtl
aas
sahf
imul
xor
into
lods
mov
pop
pop
jo
out
mov
fs
lods
lds
loop
imul
imul
pop
pop
rorb
jbe
jmp
addr16
push
jg
lcall
xchg
into
sbbl
pop
mov
adc
call
xchg
testb
xchg
test
or
adc
cmp
aam
jmp
adc
mov
int
push
fiadds
lret
shlb
dec
push
sub
push
jnp
mov
sbb
je
insb
push
mov
sbb
lods
nop
mov
push
clc
test
and
push
loope
jne
lret
pop
xchg
clc
mov
test
outsb
test
test
push
mov
add
scas
fstpl
mov
jp
movsb
scas
xchg
aad
xor
shrb
fmuls
xchg
mov
mov
lock
jg
add
mov
jne
ljmp
fs
div
ss
jecxz
sbb
mov
mov
and
nop
mov
dec
pop
iret
add
or
test
pop
cmp
pop
jnp
or
ljmp
fsubl
adc
leave
xor
push
or
dec
xor
testl
push
sub
dec
aas
out
loopne
sub
dec
out
jcxz
fstl
push
ret
sti
int3
dec
pop
fsubr
das
mov
int3
aas
cmp
or
fnstsw
mov
pop
xchg
dec
addr16
lea
and
ljmp
in
pop
adc
sub
out
loope
xchg
inc
neg
push
dec
jne
xchg
and
mov
mov
cmp
scas
xor
outsb
shl
fisttpl
ljmp
int
movsb
lds
jb
iret
bound
js
cmpsl
and
insb
in
outsl
rol
push
sub
sub
mov
inc
lahf
dec
lret
scas
fdiv
ljmp
pop
leave
fwait
sub
jp
push
outsb
out
and
inc
inc
xchg
jns
jmp
scas
out
xchg
popa
and
fsts
daa
fstpl
es
out
inc
mov
test
xchg
int
ret
sbb
pop
sbb
jg
jg
push
xor
das
out
repz
xchg
jno
mov
jmp
repz
lret
sbbl
shll
and
addr16
stos
inc
inc
int
rorb
ss
pushf
sbb
adc
pop
mov
arpl
int3
dec
mov
out
fidivl
mov
cmp
inc
sub
pop
int3
mull
cltd
or
xor
cli
mov
cs
push
mov
cmc
mov
pop
stc
mov
push
and
fsub
icebp
inc
xchg
add
out
rorl
lahf
sub
xchg
mov
sub
and
adc
push
ja
xchg
je
push
gs
pop
mov
inc
pop
popa
push
stc
repz
out
dec
ret
lods
inc
rcr
or
xor
or
lcall
das
inc
mov
addb
cli
and
stos
lret
xor
xchg
jge
scas
dec
mov
popa
push
push
cli
iret
cmp
push
lock
push
and
sarl
pop
sbb
leave
jnp
or
cmpb
mov
loopne
les
mov
cmp
jnp,pn
sarl
lea
sti
clc
in
cmp
loopne
jo
sti
ss
fsub
adc
push
rcrl
xor
addr16
mov
or
or
sub
sub
popf
adc
xchg
dec
in
repz
icebp
inc
pop
sub
insl
and
jp
mov
fadd
pop
mov
push
sub
jge
fwait
repz
cmc
pop
mov
je
cli
out
inc
push
je
xchg
je
int
or
in
jecxz
push
pop
shll
loope
mov
test
cltd
ds
nop
fldz
loop
imul
mov
xor
stos
lcallw
lret
shrl
test
shl
push
lcall
pop
sbb
inc
pop
or
add
mov
jnp
cli
adc
jmp
ljmp
icebp
imul
mov
js
fisubl
jg
mov
push
lahf
stc
xor
aas
and
imul
cmp
dec
fwait
inc
mov
incl
sti
je
mov
jns
pop
or
test
mov
std
jp
iret
ljmp
jae
fwait
lods
aas
or
cmp
ret
pop
repnz
cmpsb
rorl
push
cli
inc
sub
repz
add
outsb
cmp
pop
or
sub
adc
orb
add
pop
adc
cmp
mov
lret
rorl
test
sahf
mov
scas
sarb
bound
inc
xchg
repz
pop
enter
pop
push
stos
sub
mov
push
ds
aaa
mov
popa
xor
nop
cmp
in
subl
ljmp
das
inc
mov
leave
mov
pop
cwtl
xchg
pop
or
negb
out
xchg
or
jno
movb
and
enter
adc
sbb
pop
mov
ja
imul
mov
mulb
mov
jl
lods
and
jnp
jle
lock
jg
popa
jmp
int
xchg
stos
and
mov
icebp
cwtl
xchg
test
fldl2t
notb
gs
mov
pop
daa
mov
pop
jns
shr
mov
insl
sub
mov
repz
add
fisubrl
nop
jnp
mov
lahf
lods
stos
pop
mov
cmp
xchg
xchg
hlt
ja
fst
adc
inc
shl
es
js
push
aas
clc
fs
cld
orl
inc
push
xor
inc
dec
mov
cmp
aad
and
in
jnp
in
jecxz
pop
xchg
dec
cmpsl
ljmp
push
push
sbb
jb
jecxz
mov
outsl
lock
xor
cmp
and
cmp
pop
xchg
cmc
mov
loop
sub
inc
cmp
mov
fbstp
mov
mov
xorl
jbe
js
mov
mov
xchg
iret
iret
pushf
cmp
or
mov
mov
mov
push
sub
mov
gs
or
sub
pop
fisubs
ficoml
dec
fistpll
popa
mov
add
xchg
xchg
fcoms
dec
inc
mov
cwtl
push
push
cltd
fldl
jnp
mov
outsb
js
xor
call
mov
roll
aaa
xor
pushf
icebp
rclb
das
cs
jg
repnz
ljmp
in
push
mov
shrb
movsb
xor
jp
flds
mov
scas
or
pop
xor
or
lret
enter
movsl
push
mov
ljmp
cltd
fisubrl
in
test
pusha
outsb
jo
pop
jns
inc
stos
in
pop
data16
mov
addr16
lret
cmc
dec
mov
ja
js
seto
xorl
pop
jp
sti
cmp
fwait
outsb
aaa
shrb
and
pop
out
xor
js
pop
jecxz,pn
ds
dec
sarl
sub
mov
dec
sub
sub
push
push
jnp
aad
sbb
xchg
mov
and
and
lock
lahf
js
ljmp
add
nop
stos
xlat
cmp
jnp
js
fildll
adc
loopne
outsl
ljmp
push
cltd
push
lcall
mov
and
mov
mov
movsl
push
and
inc
movsb
dec
bound
in
inc
imul
xor
push
jbe
push
sub
clc
or
sub
sbb
fildl
xchg
push
xchg
out
pop
fs
xor
jb
inc
mov
je
cmpsb
xchg
mov
imul
add
in
jl
xor
lret
scas
sti
sub
mov
or
lods
sahf
push
cli
mov
jecxz
sub
int3
test
xor
mov
mov
cmc
mov
das
fmull
inc
adc
retw
xchg
adc
jge
jmp
dec
clc
pop
xchg
out
jae
add
cmc
jno
fildll
or
mov
mov
enter
pusha
dec
dec
cmp
add
std
push
xchg
nop
jmp
jo
fsubrl
mov
das
dec
cmp
incl
sbb
mov
ja
and
or
jo
cltd
mov
hlt
mov
das
lods
in
mov
jne
xchg
aas
mov
sbb
cld
stos
add
sbb
arpl
jb
sub
icebp
push
mov
inc
test
mov
nop
adc
jg
insb
lcall
and
cmp
dec
sub
int3
dec
test
cmpsb
mov
and
push
xlat
push
cmc
stc
lret
fistpl
cli
mov
nop
mov
sbb
or
push
dec
fcmovnbe
xchg
push
pop
adc
inc
or
mov
loop
jl
insl
fcoms
shll
adc
std
mov
out
inc
cmp
sub
rcrb
and
jns
lods
out
cmp
repz
lock
mov
jp
out
gs
repnz
inc
push
stos
mov
mov
lock
add
xor
adc
xchg
push
stos
jp
stc
sub
loope
stos
xchg
or
push
fadd
or
orb
xadd
pop
nop
mov
test
lods
push
mov
test
sahf
sub
popa
push
push
out
testl
divl
cld
rorb
loope
testl
jg
inc
xor
out
lods
adc
mov
xchg
xchg
out
or
and
dec
fwait
out
xor
and
loop
icebp
cmovp
rcrl
dec
popf
aaa
out
push
jp
xor
inc
ret
bound
rorl
push
or
ja
stos
push
dec
ret
mov
aad
mull
jecxz
add
jb
jae
pop
out
int
stos
cmc
inc
outsb
sti
sbb
and
xlat
sahf
adc
out
cltd
adc
pop
xchg
xor
mov
loop
dec
jmp
idivb
push
mov
dec
into
and
mov
push
je
adc
sar
xor
mov
push
repnz
or
mov
cld
and
das
cmc
xchg
stos
ja
dec
out
push
test
mov
ds
push
bound
cwtl
mov
sub
mov
jg
out
loope
push
mov
mov
mov
aas
cmp
mov
cwtl
lahf
sub
sbb
leave
add
fsubrs
and
movsl
mov
add
xchg
sarb
arpl
ja
dec
call
stc
jno
dec
je
nop
fidivrs
mov
pop
push
in
and
aaa
pushf
mov
fdivr
sarl
pop
fs
scas
int
cmp
push
adc
mov
arpl
fld1
dec
data16
decb
push
aaa
pop
lret
lods
push
ret
lods
xchg
push
fdivrs
rclb
push
into
enter
sub
jb
mov
mov
mov
daa
jmp
fiaddl
ret
jno
sub
xchg
add
cmp
stc
and
fsubs
jp
fistpll
mov
repnz
cmp
popa
cld
sbb
fcomps
into
mov
xchg
mov
xor
xor
mov
test
popa
or
ret
push
nopl
fldenv
mov
and
fwait
lret
ja
xchg
lret
and
xlat
inc
movsl
or
rolb
pop
cmpsl
ljmp
and
jmp
mov
call
idiv
mov
aad
test
xchg
sar
popf
sti
aad
out
jg
push
lock
add
test
sbb
lea
pop
mov
mov
enter
cs
bound
dec
fsubrp
in
in
lock
fimuls
adc
rolb
or
mov
lods
mov
xchg
xchg
das
dec
adc
cmp
inc
lds
js
cmp
ljmp
mov
jmp
pop
push
repz
stos
aam
dec
xchg
xchg
mov
and
jle,pn
imul
pop
or
xor
decl
leave
mov
fadds
orl
pop
xchg
lahf
popf
sub
fistl
daa
data16
lds
lods
imul
scas
sbb
sbb
cmp
pop
scas
rcl
notl
xor
aam
mov
addb
ret
ret
pop
scas
and
pop
shr
cmp
ds
or
mov
loop
or
jbe
test
inc
aam
or
jge
bound
shlb
and
pusha
shlb
sbb
mov
shrb
fdivrl
ss
out
pop
movsb
push
inc
sarb
cmp
or
mov
fisubl
loopne
fistl
not
adc
cmp
adc
cmpsl
or
mov
mov
insb
inc
jbe
mulb
inc
push
xchg
inc
loop
scas
xchg
push
jno
add
scas
bound
xchg
iret
aaa
add
sbb
and
nop
xchg
or
add
push
inc
dec
fisttpl
rolb
pop
aad
xchg
sbb
add
mull
push
push
xor
mov
ljmp
dec
xchg
xchg
lods
fsub
pushf
inc
pop
mov
dec
clc
test
sub
jmp
pop
flds
addr16
jno
scas
dec
cmp
jbe
aad
loop
or
fs
jbe
adc
cmp
pushf
push
inc
imul
mov
jp
cmp
frstor
add
aas
push
pop
mov
outsl
lcall
mov
iret
call
hlt
mov
cmp
jb
push
xor
push
into
pop
cmpsl
mov
sti
mov
inc
adcb
out
ret
icebp
mov
das
xchg
adc
mov
dec
popa
lret
inc
mov
pop
xor
aam
fstl
pop
int3
inc
das
in
xchg
xor
inc
add
sti
jle
std
hlt
cmp
push
pop
push
scas
sbbl
rcl
jnp
mov
sahf
lahf
faddl
xchg
adc
test
or
dec
fimull
popa
mov
cld
pop
rorl
mov
into
xchg
out
shrb
imul
or
adc
sbb
adc
adc
sbb
cli
jge
sbb
dec
sbb
pop
ret
or
pop
mov
lods
sub
sbb
cwtl
adc
adc
jo
mov
add
les
shll
cmp
push
mov
and
mov
loop
in
fistps
lret
sub
mov
movsb
xchg
add
jae
imul
std
mov
or
maskmovq
testl
insb
iret
sub
mov
pusha
ret
push
add
mov
add
mov
mov
sahf
mov
movsl
jecxz
pop
pop
cmpsb
sahf
push
inc
scas
inc
push
imul
test
shll
and
push
pop
in
pop
dec
sbb
mov
test
mov
cmp
mov
adc
mov
mov
jae
mov
mov
insl
ss
or
mov
jecxz
cmc
or
mov
lcall
insb
jmp
mov
jmp
clc
addr16
fadds
arpl
jecxz
lcall
scas
sbbb
or
push
jp
push
cmpsl
pop
dec
pop
cmpsl
insb
fldl
jnp
mov
xor
sahf
sub
js
lret
or
mov
dec
insb
sbb
xchg
cmp
out
mov
and
leave
jnp
out
jg
ds
xor
xchg
mov
test
fsubrs
xlat
dec
and
pop
int3
fnstenv
xchg
sub
ret
pop
icebp
andl
inc
cltd
ds
adc
and
cmp
mov
pop
cwtl
fsts
mov
std
insl
push
push
sub
mov
roll
dec
lock
hlt
fwait
inc
push
push
dec
xchg
cs
push
fisubrs
repnz
mov
sub
mov
imul
cmpsl
sbb
pop
mov
fsqrt
xchg
push
insb
jg
fnsave
push
outsl
xchg
fcoms
and
call
jb
lock
mov
cmp
lods
test
jp
add
test
fidivrl
sub
cmp
imul
jbe
pop
add
xor
mov
add
jne
ja
fcmovbe
lcall
mov
fidivs
adc
iret
in
add
test
mov
in
pop
mov
popf
xor
inc
adc
adc
cs
fidivrs
in
or
sub
or
clc
dec
xor
add
sub
mov
xchg
int3
out
popa
jo
add
orl
sub
xchg
inc
xor
inc
cmp
sbb
cld
pop
jge
mov
xchg
push
in
xor
insl
mov
xchg
lahf
clc
test
je
scas
clc
mov
daa
fnstenv
loopne
xchg
pop
out
and
sub
mov
add
pushf
shl
pop
lretw
loope
shll
cltd
ret
fs
adc
lcall
jecxz
es
push
mov
aas
push
jmp
pop
xor
data16
adc
or
lods
inc
lods
jp
test
fadd
pop
je
cmp
dec
mov
fisttpll
ss
inc
lods
mov
cltd
rorb
add
add
fidivrs
mov
mov
dec
sbb
ja
sbb
cmc
push
cld
push
ror
push
push
xchg
cli
cmp
dec
out
xchg
jl
ljmp
insb
jle
decb
lea
addr16
popw
cmp
popa
pop
push
sbb
jle
push
out
cmp
out
insb
shlb
mov
sbb
xchg
and
push
fstl
cmpsl
sub
and
add
int
xor
pop
lahf
loopne
scas
xchg
imul
push
pop
sub
inc
xchg
push
xor
mov
mov
or
iret
cmp
repz
mov
and
int
and
sti
ja
xor
dec
outsl
mulb
test
fisubrl
sub
fld
daa
or
hlt
xchg
sbb
cmpsl
hlt
mov
rol
cmp
fists
mov
mov
ss
xor
roll
xchg
inc
pop
aad
aas
rorl
aad
lods
push
inc
arpl
imul
push
scas
jl
jl
mov
jle
call
pop
dec
adcl
adc
push
add
pusha
and
add
add
in
push
lret
sahf
cwtl
push
push
and
dec
sarb
and
pusha
mov
leave
fmuls
mov
fld1
stos
pop
sub
and
test
and
sub
iret
mov
add
lods
cmp
jge
jnp
mov
stc
adc
jl
cmpsb
scas
push
jg
test
sbb
inc
ss
fucomp
sub
cmpsb
in
scas
cld
dec
mov
mov
xchg
dec
jp
mov
cmp
ljmp
and
dec
dec
test
test
out
imul
leave
sub
jecxz
cmpsb
filds
mov
pushf
xchg
mov
lds
xchg
lods
pop
out
arpl
test
push
mov
adc
jecxz
add
lds
cmc
test
int
dec
cwtl
cmpsb
push
in
adc
adc
repnz
clc
divb
loop
mov
xchg
mov
mov
jnp
insl
mov
inc
lret
mov
flds
cld
adc
stos
gs
adc
addr16
push
pop
out
arpl
mov
push
daa
iret
imul
sti
outsl
subb
popf
jb
lods
sub
stc
xor
shr
bnd
sub
sub
cld
lcall
cld
push
int
xchg
mov
pop
mov
popf
mov
sbb
fdivrl
adc
inc
fwait
test
in
cs
jne
mov
push
int3
test
sub
mull
adc
shlb
mov
sbb
or
xchg
loope
xor
xchg
movsl
int
in
xor
xchg
cld
fcmovnb
mov
fisubl
out
jecxz
push
outsl
das
test
inc
add
rorb
shlb
push
jnp
jge
cmp
das
outsb
imul
mov
rolb
cld
sbb
pop
mov
nop
sub
or
cmp
pop
or
and
pop
sbb
mov
pop
imulb
add
pop
enter
popa
push
jg
cmp
adc
fimuls
mov
rcrl
popa
or
mov
cwtl
push
or
sub
jl
sub
push
sbb
cmp
cwtl
and
xchg
testl
shl
dec
imul
jo
mov
jg
loope
pop
inc
ficompl
push
orl
mov
adc
jo
aam
and
pop
sub
sbb
outsb
push
fcoms
mov
dec
add
pop
leave
or
mov
ficompl
outsl
xchg
push
mov
pop
lcall
inc
sbb
mov
shl
imul
scas
test
jge
inc
rcrb
sub
cmp
jl
mov
mov
pop
mov
test
add
lahf
mov
aas
fisttpl
sub
jo
pop
mov
fiaddl
lds
and
push
mov
jae
jns
cltd
es
sbb
cmp
jnp
cwtl
mov
hlt
rorb
dec
dec
mov
fists
fnsave
in
dec
mov
xchg
or
pop
in
add
inc
int3
xor
push
test
icebp
addl
jg
or
or
cmp
jbe
sahf
cmp
in
inc
aaa
es
fsubp
dec
arpl
rol
test
add
enter
pop
stc
jb
ret
sub
mov
inc
adc
scas
aaa
nop
lock
insb
cwtl
sbb
sub
das
mov
add
in
mov
xchg
jnp
mov
pop
mov
movsl
test
push
in
sub
daa
enter
push
int3
pop
or
inc
mov
subl
sar
cmp
add
out
mov
ja
cmp
push
mov
add
in
xor
adcl
adc
or
cmp
xchg
arpl
sub
xor
stos
ret
fbld
test
jecxz
lret
in
sti
cmp
cli
dec
lcall
push
mov
movsb
xor
cmpl
cmc
fnstcw
sarl
jge
lahf
jns
cmp
inc
daa
insb
push
dec
call
aam
ds
scas
jnp
or
push
rclb
sbb
xlat
daa
and
and
pop
jno
lods
es
dec
jne
inc
lods
pop
push
mov
nop
les
outsl
aaa
mov
lock
outsl
sahf
icebp
lret
cli
dec
mov
inc
js
je
fnop
push
enter
call
popf
xchg
adc
sahf
inc
xchg
pop
mov
es
hlt
jno
jle
mov
fstps
mov
push
rclb
imul
xchg
sbb
push
jbe
xor
pusha
icebp
test
adc
jo
fbstp
xchg
jge
insl
fidivl
push
adc
bound
lret
mov
and
outsb
rolb
sbb
mov
stc
stc
cmp
and
std
andl
pop
dec
mov
lahf
sbbb
push
jmp
loopne
loop
jns
clc
sahf
fcoms
cmpsb
repz
fwait
mov
mov
stos
cmpsb
pushf
movsb
mov
loope
out
mov
xor
fst
hlt
mov
movsl
mov
add
mov
xor
sahf
jno
adc
add
dec
xor
xchg
fs
push
mov
sub
jo
int
pop
arpl
testb
dec
adcl
xor
and
xor
js
adc
outsb
jns
xor
push
mov
sbb
sub
loop
xchg
mov
std
jle
sub
lahf
cmp
xchg
pop
icebp
add
lock
bound
stc
push
outsl
xor
leave
aas
lock
mulb
pop
add
jp
movhps
test
imul
sub
lock
sbb
lods
lret
pop
test
js,pn
in
pop
fildl
push
pop
pusha
push
aaa
xchg
into
iret
mov
xchg
jno
lea
cs
sbb
push
dec
pop
jp
insl
int3
mov
in
in
iret
aas
cltd
push
pop
lds
fsubl
fstl
mov
or
pop
jecxz
scas
icebp
bound
jae
arpl
aam
jge
sub
xor
sub
stc
aam
mov
push
stos
stos
pusha
pusha
xchg
xchg
inc
pushf
add
dec
sbb
mov
push
pcmpgtb
push
in
scas
mov
sub
jne
icebp
mov
or
push
sub
jecxz
push
incb
or
xlat
ror
aam
mov
mov
cmc
es
xor
mov
push
sub
ret
fucomp
lret
xor
push
sub
mov
subl
call
dec
call
les
repz
jae
inc
popa
pushf
fs
aam
lods
jae
jge
inc
js
popa
dec
mov
jo
and
mov
in
call
loop
jnp
inc
pop
mov
enter
mov
arpl
push
sub
in
pushf
cmp
das
and
jmp
xor
push
add
leave
les
in
sbb
in
mov
xchg
lea
xchg
inc
and
arpl
xchg
hlt
lcall
aad
mov
ror
imul
mov
mov
add
push
mov
das
les
xlat
mulb
arpl
push
adc
loop
jecxz
sbb
adc
mov
sti
scas
mov
push
in
adc
rcl
ja
mov
sbb
sub
pop
add
jbe
rcll
dec
and
pop
pop
pop
xchg
jno
mov
imul
or
into
mov
fnstcw
mov
push
jnp
sbb
mov
outsl
pop
std
pop
in
xchg
enter
jg
jbe
pop
push
cmp
xor
sarb
int3
adc
dec
pushl
test
dec
push
mov
mov
jecxz
xor
xor
pop
push
cmp
loope
ja
rolb
inc
mov
dec
or
andps
sub
push
push
imul
mov
pop
jo
inc
mov
stos
scas
adc
inc
out
iret
mov
sbb
add
out
sbb
es
mov
popa
push
mov
lcall
jno
mov
fsubl
mov
mov
insb
mov
outsb
shll
fsubrl
iret
inc
inc
inc
es
ja
lret
sub
dec
rol
stos
sub
std
out
mov
imul
sub
mov
inc
mov
addb
xor
cmpsb
je
jb
mov
dec
xchg
cwtl
rol
ficompl
sar
mov
dec
or
add
sbb
push
push
adc
popf
jb
icebp
imul
cltd
mov
mov
adc
test
sub
cmc
jcxz
testb
and
and
jo
jbe
mov
sarb
test
loopne
cltd
call
pop
inc
mov
fs
cmp
popa
xchg
cmp
push
movsb
push
cmc
sub
sbb
dec
mov
mov
xor
dec
jbe
sbb
shlb
fdivs
into
xchg
aas
cli
mov
stos
insl
push
sbb
out
addl
add
call
hlt
cmp
cmp
lret
xchg
sub
pop
pop
inc
xchg
xchg
mov
into
lds
jmp
and
and
lcall
decl
scas
sub
xor
mov
sub
shrl
jne
and
sub
jge
add
adcb
das
mov
jle
jl
in
arpl
loop
cmpsb
xchg
xor
roll
xor
fldt
mov
mov
xor
into
mov
xor
mov
pop
inc
sahf
xor
and
dec
inc
dec
jne
incb
xchg
icebp
pusha
add
pop
inc
fisttpl
fcompl
imul
push
daa
adc
mov
loopne
aam
cmp
xchg
rcrb
popf
imul
subl
dec
lods
fists
stc
jnp
push
jecxz
dec
gs
push
jbe
notl
aad
jo
mov
pushf
pop
pop
adc
ljmp
xor
sbb
push
loopne
es
aas
addl
and
xor
lret
jmp
jmp
ret
pushf
push
mov
fists
mov
cmpsb
clc
ret
arpl
jnp
push
mov
mov
out
cmc
out
pop
sti
imul
pop
pop
cli
sbb
push
adc
mov
js
push
dec
ja
inc
cmp
clc
xor
pop
push
push
cmc
fdiv
rclb
and
jno
lods
pop
test
cmp
mov
in
fstpt
data16
xchg
push
fucomp
mov
dec
outsb
pop
pop
jbe
mov
pop
sub
sbb
or
mov
lret
add
lock
add
notb
push
insb
imull
into
gs
sbb
adc
or
jecxz
xchg
mov
dec
fwait
sti
shrb
mov
imul
es
sbb
and
mov
or
pop
inc
xchg
mov
mov
cmp
xchg
dec
lds
dec
xor
sub
sbb
sbb
push
nop
xchg
adc
xlat
in
jne
out
cwtl
out
xchg
mov
int
in
push
mov
sub
hlt
andb
enter
sbb
dec
pop
gs
in
jae
fwait
rorb
fsubr
push
cmp
mov
loope
ficoms
sbb
cmp
je
mov
push
inc
pop
add
movsl
sbb
mov
mov
xchg
call
cltd
push
dec
je
das
mov
addb
mov
xchg
jge
cmp
out
cltd
cmp
add
mov
test
mov
popfw
cmc
cli
push
and
cmpsl
aas
insl
daa
jb
sbb
lods
mov
jne
out
int3
dec
jnp
stos
pop
test
push
add
and
jno
cli
jnp
add
sbb
arpl
push
pop
mov
sub
popa
inc
outsl
xchg
adc
sub
sub
ds
hlt
inc
hlt
outsb
sub
icebp
bnd
adcb
bound
fadd
lret
add
xlat
pop
scas
push
and
xchg
jns
sahf
cs
adc
pop
mov
imul
push
xchg
icebp
inc
in
cmpsb
inc
outsb
inc
ja
push
imul
cmp
add
insl
push
mull
dec
orl
xchg
je
or
enter
es
mov
fcomp
push
ret
inc
pop
xchg
lods
mov
flds
or
pop
and
fistpll
psraw
leave
ror
outsb
mov
sbb
je
push
outsb
sub
xor
adc
dec
and
inc
mov
sbb
or
movsb
and
cli
or
push
int3
movb
mov
dec
cmp
lds
inc
sarl
lds
aas
pop
add
sub
ror
cmc
in
push
gs
insb
or
ja
cltd
notb
and
mov
fcomp
aas
lock
inc
jb
jle
cmp
popf
jecxz
jl
push
ds
addr16
es
fwait
mov
popa
andb
cmp
stos
outsb
fiaddl
jmp
inc
pop
xor
mov
jle
xor
movsb
stos
add
mov
add
adc
cmp
adc
or
sbb
pop
mov
mov
jo
pop
aam
xchg
add
mov
mov
add
scas
icebp
adc
mov
les
roll
pushf
sbb
popf
push
test
iret
jne
fstps
jno
mov
js
jecxz
sub
gs
insb
push
or
pop
sub
xlat
adc
mov
adcl
dec
push
or
movsb
dec
mov
sbb
jnp
mov
lea
rol
pop
insb
sbb
in
or
adc
mov
lock
mov
push
out
rcrl
adc
fcomip
adc
shl
sbb
mov
inc
mov
mov
addr16
in
loop
mov
call
mov
adc
incb
repnz
jno
push
adc
test
adc
cli
lcall
pop
sub
sbb
scas
push
push
data16
mov
mov
adc
insl
fmuls
push
cmp
imul
pop
sti
adc
cld
adc
inc
fwait
pop
movsl
flds
jle
ret
mov
daa
adc
and
dec
xchg
lock
cmp
lret
sbb
push
jecxz
mov
dec
or
or
inc
jp
arpl
xor
fistps
lock
xchg
mov
sbb
in
cmpb
movsl
push
cwtl
xor
pop
inc
push
sub
jp
arpl
loop
or
mov
in
push
sti
and
or
or
lods
popa
pop
movsb
pop
ret
fadd
lds
hlt
lcall
push
mov
push
cmpsb
push
nop
stos
mov
std
inc
mov
adc
sbb
aad
inc
icebp
jbe
sbb
mov
mov
mov
fsubrs
pop
imul
pop
xchg
fidivrs
mov
inc
movsb
movsb
dec
pop
xchg
jp
gs
sahf
mov
jbe
loopne
cs
mov
mov
iret
push
or
mov
xchg
shll
or
test
int3
cmpsb
add
mov
ret
cmp
in
mov
dec
jg
push
repz
sub
lods
jmp
data16
pop
mov
cmpsl
adc
sub
daa
sbb
xlat
jbe
popa
decb
push
push
clc
into
lods
sbb
pop
or
push
fstps
sbb
fnstcw
push
mov
out
je
dec
pop
aad
filds
loop
mov
daa
mov
fs
mulb
jnp
aam
int3
sbb
es
cmp
sub
aad
cs
into
testb
mov
jp
xor
add
repz
xchg
and
xor
cmp
cmc
mov
xor
call
adc
mov
cld
and
xor
cmp
arpl
cltd
mov
outsl
sti
push
mov
ljmp
and
pop
fnstcw
ret
shlb
adc
xor
imul
pop
pop
jae
mov
xor
mov
xor
cmp
gs
loopne
pop
or
sti
scas
es
fs
das
aam
loope
mov
sti
push
popa
and
and
push
lds
add
sbb
mov
ltr
pop
xchg
cs
pop
popa
out
lds
jae
hlt
fcompl
lock
and
sub
lret
lds
mov
adc
xchg
shll
rol
outsb
es
lahf
xchg
and
xchg
xchg
dec
in
cld
fwait
loope
jmp
cmpsb
jne
dec
repz
out
xor
andb
lods
repz
push
rcll
outsl
fnstcw
stos
lds
fsubp
xchg
jl
xor
push
xchg
jbe
fistps
cmpsl
xor
pop
adc
jbe
lods
cmpsl
loope
dec
inc
jno
sub
pop
lock
mov
sub
cmp
pop
xlat
cmp
and
lods
out
cmpsb
mov
negb
orl
mov
cmpsb
push
cmp
mov
xor
sahf
sub
jb
mov
xor
dec
les
in
jg
lret
aad
sbbb
and
cmp
dec
inc
repnz
sti
insb
xchg
mov
aaa
lcall
inc
mov
jp
adc
or
cld
and
lret
or
aaa
xchg
movsb
fistpl
call
push
lods
fsubrl
jmp
or
mov
in
and
mov
mov
sub
cmpsb
aaa
sbb
stc
sub
and
jbe
jle
push
icebp
mov
sbb
xchg
lahf
jb
lock
push
sbb
mov
daa
lahf
push
lahf
loop
ljmp
rolb
lcall
sbb
popa
mov
xchg
cmp
and
in
jmp
cmp
out
out
cmp
lds
xchg
js
sbb
push
repz
lods
popf
jns
mov
jns
out
cmp
jbe
and
mov
xchg
imul
neg
sbb
fdivs
push
pop
or
in
mov
adc
aaa
shlb
or
cltd
sbb
movsb
leave
ret
pop
fcmovnb
pop
cmp
lret
adc
pop
insb
or
xor
movsb
mov
dec
nop
out
es
mov
shrb
in
js
popf
push
nop
inc
repz
xor
cmpsl
mov
clc
mov
jns
pop
add
es
and
xor
mov
sbb
je
push
or
xor
mov
push
stc
std
and
inc
jp
cmp
out
cmpsl
je
scas
push
mov
sbb
dec
ss
xor
adc
sbb
sub
push
shrb
jg
adc
and
pop
mov
cmp
movsb
aaa
and
std
xor
ret
repnz
stos
push
xor
jl
jbe
fwait
xor
lock
imull
xor
inc
jb
push
sub
imul
movb
test
and
je
adc
jge
idiv
and
add
jmp
xchg
test
inc
and
lret
mov
dec
test
ret
mov
cmc
mov
mov
xor
lea
aaa
jl
xor
adc
jg
cmp
or
adc
jge
dec
jmp
cmovs
orl
sbb
mov
pop
aad
jle
int
or
int3
inc
icebp
sbb
push
dec
xor
pop
jmp
fbld
inc
out
mov
xor
or
mov
clc
out
clc
stc
mov
sub
push
mov
ljmp
fcoml
inc
or
out
cltd
adc
xchg
add
and
sarl
clc
xchg
arpl
popf
shll
cmp
movsl
cmp
push
test
add
mov
mov
testl
inc
out
test
jmp
xchg
push
arpl
or
pop
pop
fmulp
cmp
dec
data16
pop
xchg
push
xchg
into
out
xor
mov
das
sbb
pop
mov
xchg
dec
mov
cbtw
insl
data16
pop
rclb
dec
mov
imull
xor
push
cmp
xchg
sbb
popf
and
add
call
pop
push
mov
in
int
push
mov
bound
lods
jns
lcall
cwtl
icebp
jge
dec
push
sbb
sbb
sbb
ror
push
mov
adc
mov
test
mov
test
pop
mov
fidivrl
ret
sahf
aam
push
add
frstor
adc
cmp
dec
or
xchg
xchg
xor
cmp
ds
pop
pop
and
mov
pop
or
mov
sub
cmp
aaa
cli
cmp
jnp
inc
cmc
mov
mov
stos
lret
adc
lods
out
jns
ljmp
cmpsl
cmc
mov
push
mov
pop
outsb
mov
lock
cli
mov
lds
mov
fildl
orl
in
push
push
xchg
cmpl
cmp
dec
arpl
xchg
test
pop
dec
sbb
aaa
cwtl
inc
mov
dec
xor
jl
clc
inc
pop
pcmpgtb
jmp
xchg
jp
push
ss
js
xlat
sub
mov
jmp
mov
scas
dec
mov
mov
adc
shlb
sti
mov
clc
sub
adc
out
adc
adc
xor
jge
xchg
or
push
xor
mov
pusha
clc
and
pop
mov
fcmovb
push
loopne
testl
in
inc
mov
je
call
clc
sub
pop
xorb
inc
mov
out
popa
add
fwait
leave
or
mov
ds
cmp
push
ss
sbb
sbb
fcoms
gs
int
cmp
jbe
repz
xor
fnstcw
insb
lds
xor
enter
adc
or
inc
mov
jg
mov
rolb
shl
cmp
dec
cs
test
cmpsl
xchg
call
mov
fildl
loopne
adc
movsb
inc
or
movsl
sub
jmp
or
cmp
pop
rclb
ret
popf
push
push
jnp
fstps
dec
icebp
xchg
mov
loop
pop
pop
and
or
mov
mov
xchg
mov
pop
repnz
cld
outsb
jns
jns
jnp
pushf
xorb
inc
inc
pop
pusha
fnstsw
lcall
jb
iret
fidivs
aas
gs
sub
scas
mov
cltd
mov
pop
pushf
insl
in
cwtl
or
call
loope
cmpb
mov
pop
cmp
in
mov
mov
xor
sub
pushf
sub
sbb
in
add
imul
pop
les
mov
adc
push
outsb
and
and
inc
jg
fnstcw
inc
out
xchg
dec
mov
jno
movsb
mov
mov
ljmp
stos
std
cli
rolb
xchg
in
adc
fcmovbe
push
mov
sbb
push
dec
mov
cmpsl
aad
pushl
clc
rcl
jge
cmp
sub
ds
add
inc
xor
jle
sarl
cmpsl
daa
repz
jo
mov
mov
jo
fdivrp
stc
jp
lret
pop
ss
iret
pop
dec
outsb
add
push
in
sub
adc
mov
fdivrs
xor
adc
cwtl
mov
push
lcall
arpl
dec
adc
insb
mov
or
andl
lcall
loop
xchg
sub
frstor
test
mov
lret
or
sub
hlt
lock
movsw
inc
test
pop
stc
adc
dec
aam
test
mov
xlat
xchg
je
jmp
mov
push
mov
dec
sbb
mov
push
dec
ds
call
xchg
push
data16
mov
mov
mov
jl
aaa
mov
stos
mov
inc
lds
mov
push
add
push
es
cmp
xchg
mul
xchg
jmp
scas
or
or
jbe
xchg
or
scas
mov
outsw
fdivrl
daa
adc
je
pop
pop
repz
cmpsb
fld
lret
loopne
jmp
pop
sti
dec
notl
lret
dec
cs
jmp
ss
adc
cmc
lea
push
sbb
inc
jno
fdivrp
das
pop
or
mov
pop
or
push
arpl
cmc
xor
clc
mov
jae
orl
jne
movsl
pop
inc
mov
mov
sub
sbb
out
cmp
add
adc
fildll
xor
push
mov
shrl
push
andl
ss
or
enter
jp
or
mov
sub
leave
push
add
and
imul
mov
and
shrl
icebp
cld
pop
cltd
dec
xchg
xchg
and
jns
popa
dec
and
lods
je
fldt
fstps
shl
mov
sub
pop
cmpsl
xchg
pop
mov
bound
pop
push
cli
adc
jg
arpl
jl
sub
jb
mov
test
or
cwtl
in
jl
mov
fs
or
cwtl
in
loope
das
cli
in
mov
cmp
dec
pop
mov
rcrb
jo
int3
int
fbstp
fisttpl
cmp
unpcklps
mov
int
repz
aaa
cmp
lea
cmpl
es
lahf
push
fwait
out
movsl
movsb
push
mov
inc
push
mov
scas
or
lods
xlat
adc
out
sbb
repnz
push
mov
ret
mov
xor
rclb
test
pushf
mov
movsb
call
fcompl
cwtl
pop
dec
add
push
or
or
in
jno
inc
and
cmpsl
mov
mov
xorb
xor
add
push
lea
sti
cmp
pop
xchg
xor
cmpsl
and
je
mov
ljmp
leave
or
cwtl
or
mov
adc
sbb
test
and
cmc
mov
mov
push
jmp
mov
iret
mov
repz
mov
ret
sbbl
sub
push
mov
sbb
daa
imul
mov
dec
adc
ret
mov
push
mov
mov
or
lret
pop
out
fisttpll
adc
adc
leave
xchg
mov
cwtl
adc
into
mov
js
jns
mov
cmp
shr
rcrb
jmp
pusha
rcl
decb
jne
jp
idivl
sbb
int
jbe
shr
sbb
stos
arpl
or
scas
in
xchg
aam
sbb
fwait
jl
mov
fisubrs
in
push
popa
outsb
dec
xor
sub
enter
stc
mov
and
dec
mov
or
mov
xor
dec
popa
pushf
xchg
dec
je
scas
mov
hlt
out
emms
aad
jno
iret
add
cmpsl
add
mov
cli
xchg
div
test
and
cmp
movsb
push
xchg
loope
fnstcw
or
ret
int
loopne
sub
fdivr
andl
sbb
jge
xchg
and
and
adc
insl
fldt
outsb
add
inc
clts
mov
mov
cmpsl
push
aaa
pusha
or
jns
test
inc
lcall
aad
xchg
pushf
or
fidivl
push
into
std
aam
loop
dec
mov
pushf
sbb
insb
roll
pushf
insl
jecxz
outsl
ss
jmp
jne
andb
call
push
jne
lret
in
int3
push
mov
xor
out
xorl
jmp
out
imul
loop
push
jge
xor
sbb
push
lcall
cmpsl
add
mov
mov
hlt
pusha
scas
lcall
cld
neg
popf
push
mov
mov
fcoml
stos
xlat
mov
xor
inc
dec
push
bnd
scas
nop
xchg
ss
popf
sub
test
imul
or
add
popf
iret
aam
add
sbb
cld
int3
jb
int
xor
inc
jge
ret
mov
pop
rcll
das
mov
movsb
dec
mov
mov
cmpsl
loope
outsb
into
cmpsb
mov
xchg
clc
std
jle
stos
mov
stos
xchg
pop
mov
pop
jno,pt
inc
sbbb
sahf
rorl
pop
sub
add
pop
xor
fwait
xorb
jecxz,pt
sbb
rolb
mov
test
into
jmp
add
xor
mov
or
fildl
lcall
push
cs
dec
scas
inc
test
repnz
rcrl
and
xchg
insl
mov
adc
add
lock
cmp
or
into
jo
cmp
sahf
mov
cmpsb
sbb
mov
fwait
push
fs
cmp
mov
cmp
mov
imul
adcl
insl
adcl
push
rcll
mov
xchg
and
test
mov
inc
pop
hlt
jnp
xchg
stos
aam
push
stc
xchg
in
inc
jge
and
and
lret
mov
add
mov
or
iret
jae
xor
inc
pushf
out
je
sub
adc
mov
in
add
dec
jnp,pn
in
push
adc
sbb
mov
sub
mov
jnp
xchg
dec
or
xor
push
mov
bound
jl
mov
xor
orb
mov
mov
jb
inc
movsl
outsb
sti
dec
mov
bound
pop
imul
mov
in
cs
ljmp
xor
sbb
das
aas
push
add
xor
jp
test
mov
insl
mov
pop
rcrb
jbe
mov
or
daa
xor
mov
lea
out
dec
push
in
and
movsb
ficoms
mov
ss
sarb
mov
push
inc
inc
sbb
stos
sbb
cmpsb
sbb
in
jbe
mov
sbb
scas
cmpsb
stos
push
int
in
sbb
jp
lods
push
mov
mov
fnstcw
pushf
mov
adc
cmpb
test
pop
sbb
fisttpl
or
mov
popa
pop
movsl
out
mov
jns
sahf
daa
fisubrl
lods
gs
enter
add
adc
mov
lret
mov
adc
sbb
fnstenv
std
mov
mov
js
sbb
loopne
cmpsl
inc
test
inc
div
rcl
pop
dec
jge
imul
dec
cld
aam
mov
out
sbb
inc
mov
jns
in
cli
add
sbb
ret
lock
dec
mov
rcrl
js
lret
popa
xor
jb
int3
ja
fistl
dec
xchg
jle
inc
xorb
imul
div
add
mov
lock
mov
mov
sub
lcall
inc
mov
cmp
push
shlb
xlat
lock
jp
cmpl
jmp
mov
adc
sbb
test
add
scas
pusha
les
inc
add
push
les
xchg
xor
les
push
shll
imul
aas
jns
mov
out
sahf
es
stos
inc
in
sbb
cmpsb
and
cltd
push
and
pop
popf
popa
adcw
sub
and
loopne
in
inc
icebp
out
ret
xor
orb
xchg
adc
jl
jle
pop
std
nop
jp
imul
or
sahf
jnp
daa
xor
sub
hlt
es
mov
rcrb
notl
and
dec
das
je
in
and
push
daa
and
jb
mov
jecxz
clc
push
fwait
imul
or
or
test
xchg
jecxz
shlb
push
adc
or
push
mov
dec
aas
inc
sbb
xchg
out
aas
stos
xor
jl
mov
fmull
cld
push
xor
out
and
aam
dec
aam
sbb
add
sbb
and
inc
mov
xor
repz
jbe
fwait
jae
push
data16
sbb
inc
out
cmp
xor
push
arpl
inc
lods
mov
mov
ret
cmc
imul
mov
mov
popa
jp
scas
lock
sbb
sbb
int
and
scas
dec
jns
in
lahf
ror
mov
iret
test
stc
mov
aas
jge
xchg
mov
and
dec
iret
jmp
xlat
mov
xor
mov
mov
or
inc
or
shl
pop
mov
sub
outsb
leave
add
sbb
jne
jg
cmp
ficoms
xchg
lods
sahf
xchg
mov
dec
sbb
and
lock
sahf
sarb
imul
mov
out
or
and
sti
cmp
inc
inc
xor
jl
cld
pop
mov
inc
and
sub
cmp
ds
and
aam
dec
pushf
or
push
push
xchg
pop
mov
arpl
and
pop
add
popf
lods
xchg
lds
lock
fcomps
adc
imull
loopne
push
and
fcomps
pop
in
mov
jp
inc
adc
mov
sub
jo
fsubl
push
mov
jecxz
inc
insb
sub
sarl
enter
pusha
fmul
sbb
mov
cmp
jae
sub
cld
pop
call
dec
andl
jl
outsb
inc
les
jbe
xor
cwtl
sbb
jbe
adc
mov
jb
mov
inc
xor
cmc
mov
add
loopne
rclb
lcall
or
mov
lret
ss
jl
imul
mov
test
test
test
push
jmp
shlb
pop
ss
push
mov
sbb
sti
pop
scas
lahf
push
push
push
loop
mov
mov
pop
sub
rorl
scas
and
cmp
mov
push
clc
mov
scas
inc
fbld
ljmp
mov
dec
sbb
out
je
mov
push
repz
sbb
rorl
fwait
stos
fneni(8087
test
dec
fwait
or
js
sub
sub
aas
mov
mov
jmp
mov
sbb
pop
insb
into
xchg
ret
sub
ret
mov
push
mov
pop
jle
lret
imul
decl
and
imul
xor
xchg
xchg
stc
call
pop
hlt
out
lds
test
insb
and
mov
loope
rcr
add
dec
jne
addr16
popa
mov
iret
inc
cmpsl
xor
xchg
ds
nop
aaa
xchg
push
mov
or
mov
or
add
fstl
popa
pop
or
jnp
loope
add
push
outsl
or
scas
mov
scas
mov
pop
xchg
movsl
inc
loop
cs
test
push
and
or
or
gs
pop
add
adc
dec
rorb
insl
mov
mov
hlt
xchg
cwtl
pop
inc
xchg
loopnew
jne
or
or
xor
ret
gs
inc
fisttpl
mov
aad
fs
cld
imull
fwait
insl
imul
or
dec
jle
jo
and
enter
cmp
inc
fsubs
repz
mov
outsb
push
jl
loopne
lods
and
mov
scas
cmp
dec
test
ljmp
inc
stos
push
or
sub
xor
test
and
faddl
xchg
pusha
adc
and
mov
xchg
sub
fcompp
xor
xchg
imul
cld
xorl
mov
fldl
arpl
lcall
pushf
inc
enter
xor
rcr
mov
adc
cli
in
enter
dec
lds
mov
sarb
lret
xchg
bound
popa
and
stos
les
adc
in
addr16
fsubp
dec
inc
cmp
notb
mov
mov
or
lock
sti
push
sbb
scas
sti
mov
loope
lods
dec
mov
notl
mov
imul
mov
or
sti
mov
cmc
clc
andl
sub
insb
mov
scas
in
jecxz
mov
cmp
mov
in
or
mov
inc
hlt
jmp
insl
push
mov
outsb
or
adc
pop
lret
dec
mov
mov
add
loope
mov
or
sahf
xor
and
adc
jl
or
and
xorb
mov
sbb
cmc
je
pop
insl
cs
and
stc
cltd
gs
xchg
sub
popa
dec
sub
sbb
movsl
mov
loop
mov
lahf
xor
daa
inc
js
cmpsb
bound
cmp
in
daa
sbbl
idivl
sahf
aaa
and
xor
fstp
dec
insl
push
jecxz
insb
sti
mov
sbbl
aaa
sahf
xchg
ds
dec
cmp
xor
out
push
add
jmp
test
sbb
jmp
hlt
jns
lock
ret
cmpsb
cltd
add
push
xor
test
in
mov
std
push
int
std
inc
lcall
cltd
mov
xchg
xchg
les
pop
nop
fistl
fdivr
xchg
aas
inc
or
push
sub
xor
cld
sub
adc
fidivs
pop
pop
push
lods
add
les
jo
mov
into
insb
xchg
adc
or
movsb
ss
or
add
adc
ss
mov
pop
add
cmpsl
mov
out
sub
ficompl
xchg
testb
fldl
push
insb
pop
andb
in
outsl
fdivr
jo
in
or
addl
jae
cmp
pop
je
scas
aas
test
xchg
cmpxchg8b
scas
pop
xchg
rcrb
cli
neg
sbb
lret
pop
cmpsl
inc
and
mov
inc
sub
iret
aaa
adc
mov
sbb
mov
outsl
sbb
inc
pop
mov
push
mov
rolb
jb
inc
add
sbb
fists
adc
hlt
ljmp
cmp
jge
xor
push
shrb
lea
pusha
mov
pop
imul
out
pushf
sbb
pop
lahf
or
xor
jns
add
aas
lahf
out
sub
sub
adc
push
xchg
xchg
push
movsl
jo
jbe
int
xchg
push
push
add
ss
jno
push
jg
dec
xor
and
sub
aad
dec
scas
loopne
je
add
inc
outsb
inc
pop
iret
out
mov
pop
mov
push
divb
sbb
add
lea
xchg
iret
lods
lcall
pop
xchg
hlt
sbb
xlat
sarl
dec
das
repz
ja
stc
push
adc
and
pop
push
sub
iret
in
sbb
pop
insb
out
add
dec
xor
addr16
in
enter
add
aaa
pusha
pop
and
xchg
dec
fimuls
stc
out
imul
push
xchg
arpl
js,pn
add
repnz
sbb
xor
lret
inc
adc
ret
in
push
loopne
les
fcom
dec
mov
testb
inc
ljmp
pop
sub
add
outsl
stos
sub
or
pop
testb
std
dec
imul
aad
lret
aad
dec
xchg
mov
cmc
popa
mov
setne
inc
lods
dec
xor
pop
sbb
and
in
jmp
lret
hlt
aas
fs
loop
or
imul
mov
xchg
or
cld
add
sbb
shlb
sti
outsl
std
fwait
movsl
fwait
cwtl
ds
dec
out
in
fstpt
push
mov
or
lods
dec
sub
inc
mov
xchg
and
mov
out
mov
faddl
outsb
imul
cli
insb
movsb
popf
aas
into
sub
inc
or
enter
xor
inc
push
lods
dec
dec
push
aad
or
mov
cmp
ret
out
dec
cmc
scas
ds
int3
xor
mov
push
push
pop
nop
testl
movl
sub
filds
dec
pop
ja
js
or
sub
push
mov
mov
adc
in
loopne
mov
lret
mov
fdivl
dec
and
fwait
into
mov
mov
fwait
in
xlat
mov
pop
sarb
sub
pusha
xchg
cltd
xor
lods
xor
fldenv
lods
dec
xor
and
mov
jnp
push
cld
dec
push
cmc
adc
push
stos
and
xorl
mov
jae
outsl
add
dec
test
inc
push
cmp
jb
jae
pusha
pop
sub
inc
mov
lds
rcr
jg
add
mov
jo
clc
setb
cmc
adc
xor
fnstenv
xchg
jnp
adc
rcl
dec
fst
in
jo
xchg
xchg
mov
incl
clc
cmpsb
rcrb
cs
outsb
xor
repnz
nop
jns
leave
pop
and
push
inc
outsl
push
loope
cmp
adc
clc
dec
fnstenv
fisubs
lock
pushf
and
mov
and
inc
fwait
push
imul
sub
jnp
and
adc
inc
adc
ss
mov
sar
pushf
adc
iret
adc
repnz
nop
push
mov
push
ljmp
xchg
jb
int3
pushf
stc
lods
shrl
push
test
push
pop
fcmove
mov
clc
out
jmp
stc
nop
stos
adcl
cmp
imul
jmp
mov
or
and
push
jno
adc
ficoml
scas
push
mov
push
fildl
xchg
jmp
jl
or
test
adc
nop
jmp
mov
push
mov
cs
push
jo
imul
dec
mov
cmp
xchg
xor
sahf
jo
je
pop
jmp
sbb
mov
or
mov
cltd
sub
pop
inc
sub
test
or
into
sbb
rol
out
sbb
out
mov
jnp
lods
push
mov
mov
mov
movsb
fisubl
jbe
les
and
sbb
pop
inc
xchg
ss
daa
mov
sbb
inc
and
mov
aaa
addr16
ja
pop
mov
repnz
push
fnstsw
xchg
or
jmp
pop
mov
cmpsb
cld
cmp
mov
es
loop
into
push
lcall
ss
lods
pusha
mov
rcll
inc
inc
jo
int
out
bound
jle
pop
mov
clc
sbbb
popf
xchg
in
pop
xor
dec
mov
cmp
push
push
mov
int
sbb
stc
insb
xor
shll
out
out
test
lods
movsb
sub
cmp
or
test
mov
cmp
lret
mov
mov
daa
mov
cmp
pop
and
outsl
jbe
aas
pop
mov
fucom
cmpsl
jl
cli
and
push
jbe
orb
mov
inc
pop
pop
xor
mov
subl
loop
fwait
pop
imul
in
pop
inc
sub
dec
int
adc
cmp
in
push
std
mov
rolb
pushf
adc
incb
stc
fwait
shll
dec
mov
cli
out
add
inc
mov
cmp
add
push
stos
aam
stc
pop
loope
mov
pop
aas
mov
or
je
mov
or
shr
jns
arpl
jno
mov
lods
inc
test
cmpsl
xchg
ds
mov
cld
sub
jne
repz
rcl
xor
ss
into
nop
xchg
pop
movsb
lds
insl
sbb
sbb
lods
stc
or
pop
imul
mov
dec
movsl
inc
pop
mov
fcmovnb
std
dec
pusha
data16
fcoms
test
push
cmp
mov
sub
mov
imul
dec
inc
scas
xchg
adc
gs
leave
aaa
and
push
inc
arpl
fmuls
iret
xchg
add
mov
popf
sbb
test
push
addb
push
xchg
int
mov
lods
push
push
adc
jge
les
add
fucomp
mov
and
cltd
or
jmp
jo
das
in
xor
loope
mov
sbb
lock
fstps
inc
lret
lret
and
mov
and
and
test
push
sbb
sbb
icebp
jg
pop
inc
adc
rol
sbb
in
fninit
mov
dec
xor
mov
loope
lahf
adc
and
mov
jne
imul
das
xor
adcl
stos
sbb
mov
mov
cmpb
and
pop
push
jne
dec
sub
out
nop
sub
cli
out
stos
push
sbb
pop
mov
add
popf
add
ret
push
cld
jno
mov
loop
push
xchg
bound
cmp
shll
cmp
cwtl
cmp
pushl
inc
cmp
sahf
sbb
loopne
mov
mov
dec
add
aas
imul
subb
fistps
imul
inc
or
xor
insb
movsl
sbb
inc
sbb
rcrl
aam
and
mov
ret
int3
sbb
push
pop
add
leave
cmp
mov
xchg
pop
cwtl
frstor
inc
mov
push
push
inc
mov
sbb
sbb
and
jno
and
jno
aaa
mov
jno
movsl
dec
fcmove
stos
sbb
int3
mov
mov
insl
call
mov
daa
dec
jae
add
push
add
xor
sub
bound
pushf
fildl
stc
jbe
jb
xor
outsb
insb
jbe
sbb
jns
and
lods
inc
cli
ficoml
mov
adc
mov
out
xor
movsb
shl
pop
aaa
jno
xor
jle
inc
mov
fnsave
in
mov
mov
sub
iret
aaa
cwtl
sbb
enter
setno
enter
sub
xor
adc
push
adc
leave
cmc
mov
dec
pop
add
aam
fildl
pop
inc
lds
call
pop
loope
fsub
mov
jo
adc
mov
push
push
cs
inc
fstps
and
sbb
inc
shlb
mov
dec
loopne
pushf
jle
icebp
mov
push
rorb
pop
pop
or
pop
mov
out
sub
mov
jnp
add
mov
mov
mov
mov
or
pop
pop
into
in
sbb
les
dec
mov
inc
ja
and
imul
fcomps
mov
xchg
lret
in
fbstp
shrb
popl
scas
cmp
loopne
std
mov
fdivl
pusha
mov
dec
out
mov
cmpl
pop
jno
sbb
cltd
outsb
dec
xor
stc
pop
mov
push
add
inc
xchg
jmp
movsb
add
add
insb
shlb
inc
dec
xlat
mov
adc
jl
xchg
ss
mov
sbb
pop
mov
jg
mov
daa
in
mov
lahf
repz
xchg
testb
in
cmpsl
notb
push
stos
jne
stos
popf
inc
stos
movsb
cs
mov
add
out
int
or
mov
into
cmpsb
out
insl
jne
notb
or
ja
inc
out
and
fnstcw
mov
jecxz
or
into
mov
test
push
pusha
scas
outsb
and
mov
addl
rcrl
xchg
mov
lock
mov
stc
mov
int
pusha
rcll
loop
xchg
loopne
or
pop
lea
int
push
insb
in
cli
popf
cmc
int
add
dec
mov
jmp
jne
mov
and
into
xor
loop
xorb
fnstcw
and
and
sub
mov
add
mov
mov
pop
or
cmpsb
imul
inc
cli
arpl
loope
lahf
push
mov
rcrb
push
js
push
add
popf
cmp
jge
inc
ja
or
mov
jmp
jle
or
loop
pusha
mov
push
mov
or
inc
movsb
sbb
cmpb
call
fisubs
aam
ffree
mov
mov
jle
mov
sbb
xchg
push
sbb
jmp
add
cmp
aaa
xchg
xchg
mov
and
shr
jmp
push
xor
mov
repnz
xchg
cmp
das
xchg
lret
sub
sub
int
sbb
shr
clc
into
fld
mov
push
mov
lods
and
out
mov
adc
mov
enter
fmuls
mov
loop
mov
xlat
mov
orb
cs
cs
orb
mov
xor
rcrl
mov
fstps
out
clc
fstl
pusha
add
adc
jbe
and
xchg
cltd
pop
je
push
adc
mov
xor
call
aam
scas
jl
fcomip
and
dec
subb
rcl
fucomip
mov
mov
push
fs
fidivrs
ljmp
add
dec
fsubr
push
repnz
xor
mov
mov
sbb
rcll
jge
jno,pt
inc
inc
xor
scas
pop
lea
scas
sbb
repnz
mov
sbb
mov
and
lea
or
nop
sub
lods
sbb
cs
cmpsl
inc
in
push
ret
jae
shll
push
mov
sbb
pop
inc
inc
loopne
stos
scas
fcomps
inc
popa
ds
cmpsb
pop
movl
sub
ret
mov
jns
jb
xchg
jbe
mov
aad
nop
pop
cmc
sub
sub
bound
popf
xor
pop
out
adc
lea
or
test
cltd
pop
lods
dec
mov
mov
inc
pop
cmp
lret
lods
or
out
insl
ljmp
fwait
dec
mov
pop
sub
pop
jne
mov
push
dec
lret
cmpsl
mov
es
cmpsl
ficomps
ds
aam
lcall
cmp
insb
rcrl
pop
loopne
lret
jg
or
scas
lods
lret
hlt
fldl
mov
jecxz
pop
pop
stc
xchg
add
cmpsl
bound
jbe
mov
dec
and
sahf
pop
mov
je
and
repnz
inc
mov
push
aad
mov
jl
mov
repz
fxtract
or
std
dec
pop
pop
icebp
jmp
scas
repnz
jne
xor
jle
leave
pop
push
mov
sub
rol
gs
mov
pop
push
psubusb
dec
aaa
out
mov
roll
xlat
sub
fs
jmp
cmpl
loopne
dec
dec
push
and
pop
shll
int
adc
fisubs
mov
daa
scas
ror
int3
fs
lock
out
icebp
adc
adc
adc
nop
mov
inc
sbb
push
insl
mov
int3
sbb
pop
mov
or
mov
in
sub
outsl
push
inc
std
xor
sub
xlat
jge
inc
outsl
jb
std
pop
int
enter
ret
emms
int
aam
cmpsl
cs
sarb
sbb
cmp
aaa
aaa
and
sbb
jb
pop
mov
lcall
ja
cmc
shrb
scas
sarb
movsb
or
daa
nop
loop,pn
pop
dec
mov
mov
movsb
xor
push
popa
cmp
push
cli
xchg
jne
enter
imul
xor
std
sbb
pop
dec
sbb
xchg
push
or
rcll
xor
or
jns
cld
loopne
mov
sbb
pusha
in
sti
push
cld
xor
inc
test
ficoml
adc
inc
push
fwait
inc
in
mov
out
lret
jns
inc
sbb
mov
dec
pop
sahf
pop
clc
add
dec
dec
cltd
ss
cmpsl
daa
rcrb
or
stc
fmull
add
sbb
mov
jmp
dec
imul
sub
push
xor
adc
in
lret
jb
inc
int
mov
or
lret
cmp
xor
shll
popf
rcrb
decl
sbb
sub
std
cmpl
jno
mov
fildll
push
add
xchg
cli
enter
dec
loop
hlt
xor
pop
cs
out
fwait
pushf
dec
nop
pop
shl
repz
gs
scas
cmp
pusha
push
test
mov
mov
das
sub
insb
lds
jl
jle
js
push
adc
arpl
out
lret
call
scas
mov
outsl
bound
push
jae
lret
cld
dec
loopne
jbe
cvttps2pi
jmp
mov
and
ss
and
inc
xchg
mov
add
into
and
cmpsl
xchg
push
push
outsb
scas
arpl
pop
push
add
mov
cmp
rorl
xchg
neg
cmpl
aaa
clc
dec
inc
mov
rolb
das
outsb
outsb
adc
shll
into
pop
insb
fimuls
int3
or
sub
sub
lock
xor
sbb
push
push
aas
lods
add
or
fisubrs
jecxz
cmp
mov
test
icebp
mov
clc
adc
xor
sub
inc
fisttps
test
or
scas
jge
xor
iret
jb
xor
cmp
cs
mov
test
mov
cmc
stos
fiadds
push
movsb
jmp
and
or
jmp
jo
push
xchg
ss
xorl
sbb
mov
ret
insb
pop
mov
mov
inc
ret
sahf
and
and
aam
and
cmc
scas
imul
fidivrl
fcoml
jle
stc
lea
sbb
and
mov
push
sub
out
in
out
repnz
gs
nop
sub
shlb
decl
xor
ja
pop
xor
hlt
fdivs
call
pop
xor
ret
jp
push
inc
xchg
dec
fiaddl
movsl
mov
divb
je
mov
stos
xchg
rolb
je
sbb
xchg
jmp
sbb
das
push
jae
outsb
mov
sbb
scas
xchg
pop
mov
ftst
jnp
xchg
or
adc
mov
add
or
pop
jle
mov
jle
sbb
pop
lods
jne
in
jne
out
fidivrl
lods
test
mov
xchg
scas
inc
mov
test
shll
push
arpl
into
sti
xor
fsubrp
mov
mov
and
in
popf
mov
xchg
cltd
gs
imulb
xor
sub
jg
pop
mov
je
loope
mov
decb
nop
inc
jno
adc
test
mov
cmovp
in
call
gs
shr
xor
ds
test
mov
xlat
je
inc
or
ror
jae
or
cmp
push
mov
cmp
outsl
xor
jle
and
clc
in
out
addl
repnz
xchg
mov
lods
cmp
or
sub
cs
call
popf
out
pusha
das
push
jge
fsts
ljmp
outsb
lcall
jae
lds
lahf
pop
repz
cli
icebp
loope
dec
cmp
fcmovne
cmp
cld
xor
mov
fmulp
bound
and
jo
xchg
mov
sub
fstpt
pop
decl
jmp
mov
pop
sub
jp
stos
jle
es
lock
addb
adc
lret
adc
leave
pop
xor
mov
ret
push
or
xor
sahf
mov
clc
rcl
or
rcr
sbb
jnp
imul
lret
pop
inc
ret
sub
in
outsl
insb
fmull
mov
pop
dec
test
push
rclb
mov
adc
inc
and
negl
sbb
test
shlb
cmp
push
popa
sbb
pop
rep
adc
cltd
mov
andl
addr16
stos
mov
outsl
lods
sub
repz
mov
adc
xchg
aam
pop
mov
lahf
scas
outsl
ss
lret
les
jp
sbb
lods
test
out
lret
mov
movsl
xor
xor
repz
xor
cli
sbb
int3
and
jno
leave
mov
cmc
inc
cmp
mov
push
xchg
pop
mov
fs
xchg
jg
xor
and
mov
sbbb
dec
in
loope
xchg
sbb
call
inc
cmp
mov
cli
push
ja
inc
aad
ror
xchg
add
or
add
inc
daa
mov
xchg
and
data16
jp
dec
cmp
adc
adc
das
iret
jp
push
mov
stc
inc
test
rcrl
mov
loop
mov
mov
jns
fcompl
lock
push
push
pushf
mov
test
lret
movsb
sbb
and
addr16
pop
add
sub
jecxz
lock
xchg
fldenv
mov
pop
lea
sbb
aam
xchg
scas
andb
ret
and
or
cmp
add
jle
mov
mov
inc
int3
cld
sarl
lock
push
add
mov
movsl
pop
cmp
inc
xlat
sub
jg
dec
and
out
add
aam
lahf
sti
xchg
mov
in
orl
jnp
faddl
ljmp
push
stos
jb
dec
jle
sub
sub
cmc
aad
test
or
into
mov
dec
mov
mull
and
cmova
test
sarl
lret
add
fs
pushf
or
jecxz
scas
mov
mov
stos
fnstsw
cmp
loope
pop
movsl
sbb
inc
xchg
int
adc
jb
push
adc
iret
sbb
mov
dec
aad
pop
cmp
loop
aad
pop
xor
jae
pop
inc
adc
gs
test
add
xchg
and
lods
bound
mov
mov
out
mov
add
int3
jno
pop
mov
mov
aaa
cli
out
mov
mov
xlat
xor
add
pop
pop
out
repnz
ljmp
lock
xchg
mov
mov
push
stos
call
cwtl
mov
sub
test
jnp
cmp
cmp
repz
int3
out
lret
hlt
out
mov
mov
mov
sahf
lods
sbb
sbb
dec
cmp
inc
push
cmc
rcl
das
in
in
push
mov
add
pop
pop
sarl
jp
xchg
lea
sub
sub
aam
xor
inc
mov
pop
mov
repnz
mov
leave
repz
in
ljmp
jo
loopne
fs
daa
mov
cli
or
xor
fs
sbb
cltd
fwait
icebp
add
test
or
or
andl
lahf
mov
imul
mov
decl
add
mov
les
sbb
xchg
insb
adc
cs
out
pusha
lret
sub
not
xor
mov
add
pop
dec
push
lods
call
sbb
push
cli
rcll
mov
push
movsl
xchg
xchg
dec
sub
push
add
pop
das
mov
int3
mov
loop
add
lods
push
jne
out
daa
xchg
add
mov
xor
push
pop
add
enter
cmp
cmpl
dec
repz
dec
andl
dec
dec
mov
rol
or
outsl
xchg
rorl
jecxz
xchg
pop
push
jb
mov
mov
mov
in
imul
popf
push
fistl
out
xchg
xchg
inc
and
rcl
add
and
les
mov
ret
jns
pop
jmp
ja
pop
std
scas
in
push
xbegin
cld
jb
inc
jge
out
dec
shll
and
sti
xor
mov
sbb
add
sbb
not
inc
dec
pop
mov
cmp
bnd
arpl
fcmovu
repnz
lock
adc
scas
push
xlat
xor
xor
and
addr16
sbb
jp
cwtl
jp
aad
fmuls
popf
xchg
repz
leave
xchg
xlat
out
or
stc
clc
movsl
call
jne
push
mov
out
arpl
popf
stos
xchg
mov
out
sbb
push
idivl
and
mov
notb
into
aaa
push
pusha
inc
pop
test
lret
pusha
in
je
mov
das
cmp
fistps
dec
addr16
jo
lret
mov
in
pop
pop
pop
jae
inc
push
dec
adc
cli
push
jmp
adc
pop
or
stc
aad
mov
jp
cwtl
aas
into
out
and
bound
mov
pop
cmp
and
inc
fiaddl
fidivl
fsubl
cmc
mov
inc
ds
pop
lea
add
js
inc
jecxz
scas
into
scas
push
scas
popf
inc
sub
cli
ret
inc
cmp
mov
xchg
add
sub
and
mov
lcall
mov
insl
rclb
bound
and
xchg
js
xchg
adc
sub
mov
fadds
inc
fwait
les
insl
test
mov
rolb
mov
mov
jne
mov
movsb
sbb
stos
pop
inc
stc
nop
pushf
lods
xchg
loopew
mov
pop
adc
popf
sti
clc
adc
mov
xchg
jmp
fwait
jns
push
incb
pusha
add
mov
xchg
loop
dec
es
mov
fstpl
loopne
out
repz
and
fiadds
xor
out
aam
adc
test
pop
test
sub
pop
ss
sarb
fldcw
test
into
adc
mov
xchg
mov
popa
cmp
xchg
push
lahf
repnz
mov
jno
or
dec
or
pop
cmpsb
in
test
fnstsw
inc
clc
xchg
xor
lahf
push
adc
movsb
inc
bound
jg
cltd
in
aas
out
rcll
dec
mov
mov
pop
lcall
pop
xchg
jo
sub
adc
in
outsb
mov
and
mov
add
cmpsb
push
mov
imul
push
push
jg
jns
sbb
xchg
movsl
inc
loopne
dec
test
orb
cmp
lret
sti
xor
xchg
call
lock
pop
pushf
pop
shr
mov
lock
movsl
lahf
ss
rclb
push
jbe
sbb
jmp
into
fs
mov
movsb
lods
add
push
push
cli
xor
mov
mov
icebp
js
mov
or
loop
shlb
pop
mov
mov
mov
xor
stc
cwtl
mov
sbb
loop
aaa
in
mov
xchg
jb
test
or
mov
cmp
dec
js
mov
sti
cltd
add
stos
jb
rolb
dec
leave
jae
int3
jnp
pusha
das
jae
dec
cli
push
and
push
add
mov
xchg
xor
push
mov
sub
sbb
shlb
sub
negb
mov
pop
popa
in
or
pop
push
jb
and
pop
cmp
sub
inc
rcrb
sti
negb
jno
test
inc
cwtl
sub
lock
fsubrs
loopne
jp
or
cmpsl
xor
mov
sub
out
jo
mov
enter
popa
jbe
dec
pop
call
dec
enter
jno
fimuls
push
pop
xchg
fisttps
adc
dec
scas
sub
or
test
jae
scas
mov
jmp
push
push
cmc
xchg
sbb
aaa
inc
add
adc
push
xor
arpl
dec
dec
fsubrs
push
gs
pop
xchg
dec
daa
subb
in
adc
push
dec
sub
inc
ret
mull
dec
arpl
adc
cs
jl
pop
lea
add
jl
int3
pop
pop
push
mov
arpl
scas
adc
test
push
cmp
xchg
or
in
shrb
xor
inc
jmp
pop
xchg
test
xlat
std
xchg
xchg
adc
adc
sbb
mov
insl
push
push
shl
or
dec
or
lret
dec
xor
sbb
sub
lret
pop
in
pop
dec
inc
mov
loope
je
mov
pop
xchg
mov
sbb
int3
test
mov
and
cltd
inc
divl
jno
je
clc
sub
lea
clc
mov
and
mov
adc
mov
clc
out
mov
dec
in
lods
push
pop
iret
push
mov
sbb
imul
dec
insl
pop
cltd
push
test
pop
cltd
fs
clc
aam
loope
lea
loop
sub
into
hlt
inc
sub
ja
xchg
sti
sub
sub
xchg
dec
fiaddl
sub
cmpl
and
adc
mov
push
jne
fs
into
in
sub
stc
in
in
cmpsb
pop
adc
or
into
out
inc
not
nop
push
test
imul
push
popf
std
or
adc
inc
out
popf
pavgb
pop
pushf
dec
or
jo
sbb
pop
test
cli
pop
test
arpl
lahf
pop
les
ss
pop
lods
cmp
popf
add
cmp
in
lret
cmpsb
test
je
push
popl
add
shll
and
pop
sub
xchg
jl
divl
sbb
mov
in
or
repz
mov
lds
jl
in
jp
imul
push
mov
insb
adc
cmp
adc
in
ret
arpl
xchg
pop
inc
fldl2t
ret
icebp
adc
inc
inc
ljmp
mov
mov
out
std
mov
xor
pop
mul
test
mull
cmp
xorl
fldenv
mov
enter
and
push
lret
outsb
test
insl
call
pop
mov
xchg
fidivrl
dec
and
adc
mov
inc
sub
push
in
mov
mov
push
push
adc
jno
les
or
mov
test
int3
jg
add
ficoms
ja
jecxz
int3
push
dec
mov
lret
sbb
cs
scas
jns
mov
push
jecxz
jno
aas
shlb
push
outsl
in
test
arpl
cs
cs
insl
mov
add
xchg
push
pop
xchg
or
aaa
xchg
dec
adc
xchg
jl
nop
not
xor
dec
sti
ret
negl
dec
push
mov
mov
int
xchg
rorl
ret
fisubrl
pushf
xor
and
repz
mov
iret
jmp
push
insl
ja
mov
adc
movsl
push
mov
adc
insl
mov
stos
mov
mov
mov
push
or
add
js
push
mov
fmull
jmp
jo
push
test
pop
pop
nop
pop
cs
inc
pop
xchg
jae
jg
sub
mov
push
mov
fwait
push
faddp
mov
ljmp
inc
mov
cwtl
sbb
pushf
inc
pop
das
sar
ja
sbb
popf
std
xchg
dec
imul
sub
xchg
dec
movsl
dec
out
sub
jg
xchg
mov
iret
sbb
xchg
ja
jl
scas
dec
cmp
xchg
jae
adc
xchg
jo
ljmp
imul
and
jl
mov
dec
pushl
clc
sub
ljmp
dec
push
addr16
sbb
data16
addr16
sbb
sbbl
push
in
std
rclb
aas
jne
push
out
sbb
popf
jo
aad
sbb
imul
scas
sbb
push
sbb
mov
dec
mov
and
push
jge
imul
orl
xchg
dec
pop
imul
icebp
std
xchg
pop
pop
popf
loop
in
dec
les
or
in
mov
mov
jge
daa
push
dec
mov
arpl
daa
dec
xchg
mov
in
and
imul
xchg
pop
sub
rclb
xchg
aas
ret
adc
xchg
test
cmp
sbb
rclb
adc
ljmp
or
jae
mov
sub
ficoml
rclb
les
leave
mov
or
cmp
push
movsb
scas
clc
sub
xchg
xlat
mov
jmp
fsubr
mov
mov
je
sub
sbb
add
push
lock
and
loope
sub
in
mov
outsb
mov
jmp
sub
xor
dec
sti
dec
cmp
loopne
and
push
lret
lret
jns
adc
pop
cwtl
dec
and
imulb
and
mov
fnstenv
icebp
push
cmpsb
enter
xchg
sbb
pop
push
lret
call
int
pop
dec
push
mov
pop
int3
fisubl
add
mov
scas
cmpsb
jne
mov
lds
push
mov
xchg
jno
stos
mov
add
test
mov
pop
das
xchg
xor
adc
fsub
sti
pop
sbb
les
repnz
inc
cmp
and
out
mov
mov
movsb
and
sub
repz
xor
addl
push
push
loop
adc
fcmovu
clc
cmpsl
xchg
std
mov
scas
add
movsb
stos
xor
dec
repnz
cmp
popfw
adc
jp
xchg
adc
int3
jmp
cli
lcall
lahf
jne
mov
and
add
popa
in
push
cmp
addr16
jno
xlat
fiaddl
es
and
popa
dec
jae
cmp
int3
xchg
mov
add
rorl
lock
and
pop
pop
scas
cmpsb
ret
push
pop
adc
rcrb
jbe
sti
cmpsb
test
sti
mov
xchg
mov
push
and
jp
push
subl
ja
pushf
xchg
arpl
fsub
lret
or
lock
xchg
mov
popf
cmpsb
sub
movsl
fbld
popf
push
mov
pop
mov
lahf
repnz
outsl
jnp
sbb
in
cmp
stc
fidivl
xchg
push
imul
ljmp
add
popa
movsb
xchg
ret
xchg
outsl
insl
scas
mov
inc
fstl
push
rcrl
test
adc
insb
adc
jns
or
test
inc
faddl
icebp
dec
inc
pusha
fs
mov
sub
cmp
cwtl
xor
dec
push
leave
cmp
pop
dec
adc
rcrl
pop
xor
push
and
and
hlt
jb
outsl
pusha
pop
mov
cmc
loope
popa
mov
mov
mov
jp
stos
dec
inc
ja
ljmp
and
xlat
fucomip
neg
mov
stc
in
cmpb
lret
pop
jbe
daa
lret
in
jae
cwtl
imul
call
fnstsw
pop
fstpt
pushf
xchg
push
fmulp
subl
cmp
out
xor
sub
aaa
dec
mov
aad
push
xor
cwtl
xor
jg
add
out
stos
xchg
arpl
mov
cltd
pop
or
mov
test
jbe
cmp
mov
ja
mov
adc
jbe
mov
cmp
jecxz
xor
sbbb
mov
in
and
pcmpgtb
dec
imul
sbb
in
bound
inc
out
idiv
push
jns
in
sub
in
xchg
cwtl
scas
push
push
lahf
pushf
aad
loop
mov
add
lds
rcrl
sbb
mov
cltd
aaa
mov
enter
push
jno
dec
ficompl
sti
hlt
cld
mov
jl
mov
dec
imul
aaa
pop
fldz
mov
mov
mov
incl
cwtl
push
les
pop
xorl
clc
push
inc
push
stc
stos
pop
mov
clc
add
es
adc
xchg
lcall
push
test
cmpsb
xchg
xor
inc
xchg
lret
or
pop
sbb
jo
dec
xorb
inc
fwait
and
mov
push
pop
adc
data16
mov
pop
mov
repz
cmp
dec
mov
in
fs
cmp
mov
push
ret
es
xchg
icebp
fstps
into
fisubs
add
pop
cmpsb
aaa
test
mov
jle
cmp
adcl
loopne
add
cmp
mov
mov
call
jmp
and
pop
sbb
inc
call
cli
sarb
adc
arpl
jns
dec
in
and
mov
pusha
aam
push
pop
xor
stc
fsubr
sbb
imul
lret
inc
ss
fimuls
push
xchg
out
sub
repz
dec
push
lds
pop
jge
js
and
cmp
iret
mov
cmpsb
rorl
es
sub
in
xchg
inc
inc
int
jg
xor
pop
cmc
sub
lods
xchg
arpl
push
lock
mov
jp
fs
add
pop
mov
int
pop
pop
shrb
sbb
popa
sahf
scas
mov
adc
mov
cmp
mov
mov
xchg
ljmp
scas
dec
jmp
sbb
sbb
les
push
movsb
stos
mov
sub
insb
or
ljmp
push
mov
out
out
mov
orb
push
fmuls
pop
lea
fucomi
gs
xchg
jne
rclb
test
and
xor
or
adcl
movsb
push
fnstcw
ret
xchg
test
imul
xchg
sub
test
lret
mov
loope
das
jl
sar
pop
sub
mov
push
jecxz
fldt
xor
loop
and
cwtl
push
inc
add
cmpsl
test
aaa
push
lock
mov
lret
jo
sub
addb
cmp
xchg
loop
sbb
push
push
sub
and
jg
ret
sub
mov
xor
test
vmovaps
fisubl
pusha
pop
mov
push
orb
push
incb
and
sbb
and
dec
push
insl
ss
inc
mov
jne
repnz
pop
mov
std
pop
cmp
dec
push
cmp
xor
fisttpl
push
ja
jg
ret
mov
data16
pop
popa
imul
ret
test
and
mov
push
jns
cwtl
mov
mov
sub
repnz
movsl
out
fs
or
pop
pop
inc
es
icebp
cmp
insb
jmp
data16
inc
out
insb
jns
add
lahf
js
test
mov
popa
scas
mov
clc
loopne
sbb
fldl
cmp
cmpsl
add
mov
lds
inc
in
or
stos
mov
sub
xchg
sbb
push
push
dec
jns
adc
pop
mov
push
fmul
cmp
imul
enter
sub
subb
lea
adc
mov
in
push
mov
dec
sahf
mov
jnp
sbb
adc
pop
lret
or
push
mov
out
pop
mov
jo
ret
cld
push
or
cs
pop
pusha
test
sub
dec
xor
push
inc
in
repz
ret
inc
jae
cmc
clc
or
call
mov
push
cltd
imul
mov
push
mov
test
and
mov
jns
or
jo
imul
std
sbb
xlat
or
push
add
fidivrs
cmp
mov
push
add
mov
push
popf
ds
lcall
aad
mov
push
fwait
sbb
mov
loopne
pop
xchg
fldcw
fwait
cmpl
js
xchg
daa
data16
imul
inc
test
add
mov
mov
loop
out
mov
sub
es
jno
jg
push
movsl
xchg
mov
dec
push
icebp
out
cs
scas
mov
jo
in
lret
push
loope
push
adc
rorb
rorb
push
jg
iret
mov
rclb
jmp
shlb
sbb
aam
jle
fsubl
pop
in
test
jle
jo
cmp
movsl
mov
ljmp
ficomps
aad
addl
add
test
fldenv
pop
and
cli
sub
or
sub
daa
jno
pop
mov
mov
dec
in
xor
lahf
dec
and
xorl
pop
pop
push
xchg
aaa
jne
sub
sbb
shl
adc
loopne
andl
lods
add
out
xor
out
jbe
or
nop
xchg
out
mov
les
bnd
add
cmp
mov
fdivrs
mov
dec
or
inc
or
icebp
sub
ljmp
jecxz
aad
es
rcll
popf
xchg
xor
ss
es
push
pop
fisubrl
bound
mov
inc
loop
or
popa
push
bound
lahf
out
lea
pop
dec
sub
aad
not
adc
xchg
sbb
in
jl
cmc
fdivr
pop
mov
dec
outsb
lods
loopne
lods
cmp
sbb
or
nop
lcall
sahf
jmp
mov
loope
add
lret
mov
sbb
inc
data16
lret
fninit
faddl
ds
xlat
jbe
inc
test
leave
lahf
mov
jno
data16
aas
out
jge
int
sahf
pop
sbb
mov
jmp
stc
in
insl
xor
xchg
add
roll
imul
xor
hlt
and
mov
pop
sbb
int
ljmp
sbb
enter
test
enter
in
rcrl
or
sbb
jecxz
jg
fdiv
mov
pop
loop
inc
mov
in
push
pop
in
hlt
cwtl
pop
or
xchg
and
test
pop
lret
shlb
mov
fistpll
mov
dec
sub
popf
rcll
add
test
pop
cmc
cmc
icebp
xchg
pushf
jmp
shl
lock
testl
push
xor
das
jle
mov
hlt
jmp
stos
and
xor
aaa
aas
sub
cmpw
call
xchg
push
cmp
mov
insl
aam
outsb
fcomps
cwtl
scas
nop
aam
repz
add
pop
call
add
enter
mov
push
mov
push
xchg
or
aam
xchg
jp
fwait
inc
aaa
add
fsubl
test
addl
int3
hlt
or
push
lcall
xor
stc
mov
rclb
xor
ss
jno
aam
aad
into
mov
adc
mov
push
enter
adc
or
dec
sbb
jp
lock
cmpsl
addr16
orl
frstor
jne
pusha
repz
std
add
movsb
mov
data16
cltd
aaa
fsubp
out
cmpsb
mov
pop
sub
pop
pop
inc
mov
movsl
lcall
xor
fwait
xor
mov
mov
cmp
cwtl
add
movntq
out
loope,pn
stos
mov
mov
sub
jno
mov
shlb
inc
das
out
outsl
add
sbb
call
dec
mov
adc
nop
fcoms
mov
imul
adc
sub
xchg
mov
adc
cld
push
imul
jl
or
push
mov
leave
push
divb
pusha
push
jecxz
ficompl
imul
pop
lcall
mov
out
fcomip
cmpsl
cmpsl
sbb
sti
and
pusha
test
add
add
lock
into
cltd
jge
mov
mov
arpl
lock
or
xor
insl
push
ds
mov
mov
xchg
test
fdiv
push
cmp
adcb
call
cwtl
in
dec
lds
cwtl
lea
and
dec
push
mov
movsb
jecxz
stc
outsb
pop
or
rorl
xor
fldl
jae
lock
sbb
cwtl
adcl
and
add
inc
addl
add
xchg
out
mov
rorb
das
adc
lahf
fisubrl
adc
mov
push
mov
pop
into
mov
jo
push
sub
pop
push
jecxz
out
in
sbb
stc
push
aam
cli
roll
inc
mov
jo
mov
dec
cmpsl
push
mov
aas
or
movsb
imul
mov
adc
adc
fcomps
xchg
enter
dec
and
imul
xor
ret
jae
mov
add
push
fidivs
jo
jp
jno
or
push
jecxz
pop
adc
sahf
sbb
cs
icebp
mov
fnstenv
jl
lret
cmp
scas
cld
xor
cwtl
loope
jmp
pop
xchg
ljmp
xlat
dec
dec
jge
add
scas
pop
pop
adc
pop
shlb
into
sub
mov
ds
xchg
sub
repnz
sbb
push
jno
sbbb
in
add
js
mov
enterw
jb
xchg
xchg
cmpsl
out
xor
mov
rclb
xor
xorl
fsubrs
xchg
push
subb
leave
fldt
sti
sub
into
jmp
and
add
sbb
mov
jp
adc
pop
arpl
fistps
daa
or
mov
lahf
scas
cmp
xchg
and
outsl
cmp
outsb
or
mov
mov
pop
scas
mov
stos
xor
add
lret
add
push
in
repz
pop
xor
cld
divb
data16
cs
adc
dec
jle
movsl
xor
imul
icebp
popa
push
pop
push
sbb
push
jg
cmc
jmp
mov
data16
xchg
movsl
sti
divl
mov
sub
leave
push
das
cwtl
adc
notl
sbb
outsl
mov
cmpsb
rcl
xchg
dec
mov
push
adc
and
iret
xchg
mov
mov
cmpsb
icebp
les
out
icebp
cltd
push
popa
push
test
aam
inc
pushf
mov
xchg
push
mov
push
insb
cmp
out
loopne
into
add
inc
pop
daa
fnstsw
push
iret
cmp
les
sbb
mov
mov
xchg
mov
pop
shrl
ss
adc
in
cmp
jle
mov
loop
mov
fwait
pop
enter
out
insb
pop
mov
fistpll
fisttpll
and
cmp
push
xor
or
mov
push
or
mov
outsl
stos
sub
js
insl
inc
imul
jl
lock
call
xchg
cmpl
and
xor
in
loope
dec
lret
sbb
in
cltd
jmp
and
xchg
jnp
in
pop
adc
neg
mov
fisubrs
lahf
mov
xchg
mov
clc
dec
jno
pop
fstpl
jle
aad
dec
rorl
in
push
mov
sub
jbe
mov
hlt
add
adc
inc
lret
xchg
jg
push
inc
clc
mov
cmp
cmp
mov
loope
inc
lods
adc
lret
test
dec
sub
out
mov
xor
outsb
dec
sbb
sub
xlat
je
leave
and
pop
repz
fwait
pop
cli
add
add
repnz
inc
adc
fstps
add
das
mov
adc
mov
sbb
arpl
sub
add
or
mov
cmpsb
scas
xor
les
fcmovne
inc
fistl
out
lods
cmpsb
aam
fldenv
outsl
outsl
int3
lahf
mov
pop
cmp
pop
sbbl
pop
adc
xchg
fldenv
ds
or
shll
leave
adc
xchg
jg
xchg
inc
pop
stos
pop
popa
adc
push
lret
or
or
repz
jmp
and
push
dec
sub
jp
sbb
sbb
fisubrl
xchg
and
or
dec
inc
sahf
jecxz
mov
test
subb
test
jge
push
mov
xchg
scas
fisubs
pop
jg
iret
dec
xor
mov
jmp
cmp
fwait
or
test
shlb
cmpsb
inc
out
nop
and
shrl
dec
pusha
scas
movsw
sbb
cli
out
mov
dec
lock
dec
mov
mov
add
inc
in
aam
dec
add
shll
mov
mov
fucomi
rcrb
cmp
cld
flds
mov
add
mov
aam
dec
jno
sub
xor
jge
pop
jle
sti
sub
push
fwait
sub
clc
inc
lret
fcmovne
mov
ds
test
pop
push
inc
xor
js
fs
pop
push
loopne
add
int3
arpl
in
cmp
push
scas
sahf
cs
shll
repnz
xchg
gs
lock
es
mov
les
enter
test
pop
lcall
cmp
out
jae
into
mov
fmul
out
ret
mov
out
pop
push
ds
xor
test
cmp
push
push
dec
testb
test
lahf
xchg
sbb
dec
push
aam
mov
and
adc
jge
mov
pop
orl
push
test
imul
jle
inc
loop
shrl
mov
pop
sbb
lods
xchg
les
mov
aad
in
scas
dec
das
iret
cld
jns
lods
jbe
add
mov
sbb
jno
jl
sarl
pop
inc
int
mov
pop
es
test
and
lock
xor
lret
adc
fcompl
cld
and
cli
lock
enter
inc
add
or
mov
stos
insl
jb
ds
mov
aam
xchg
and
push
xor
dec
and
mov
daa
add
lret
daa
mov
sub
sbb
int
mov
loopne
nop
sbb
js
popa
push
jo
les
add
xchg
adc
cmp
mov
pusha
rclb
add
addr16
pop
ljmp
add
xor
scas
scas
jg
push
xlat
shrb
sbb
adc
inc
scas
aad
dec
loopne
aas
mov
stos
mov
cmp
arpl
sti
negb
jb
push
int3
sahf
jae
and
jnp
push
out
jle
in
jns
inc
mov
adcb
sbb
inc
dec
pop
sub
nop
das
push
dec
les
in
dec
inc
aam
mov
and
aaa
out
fucom
test
rorl
jle
lods
or
push
mov
cmc
lahf
loop
pusha
sbb
mov
ja
out
ss
mov
outsl
lret
lock
lahf
ja
pop
sub
sbb
sti
movsb
cltd
std
das
mov
fstps
inc
mov
xchg
repnz
jae
pushl
jo
sbb
pop
xor
nop
adc
cltd
shrb
xchg
mov
cmpsb
xchg
jmp
xchg
xchg
fiaddl
sbb
aam
xchg
test
and
push
popa
adc
shl
push
dec
mov
inc
jb
jmp
jecxz
imul
mov
hlt
mov
loop
and
mov
jp
outsb
ret
es
add
sbb
add
cmp
pop
mov
shl
dec
sahf
test
in
idivb
cmp
scas
xchg
in
inc
pop
cltd
mov
in
fdivs
cld
test
scas
push
cmp
jecxz
iret
sbb
shlb
scas
sub
sbb
ficompl
popf
mov
mov
cmp
fldenv
cmp
aas
dec
add
ljmp
call
gs
inc
fistpl
pop
sub
gs
fwait
divb
jnp
xor
jmp
ficompl
in
std
std
mov
orl
sub
out
test
leave
xchg
pop
inc
addr16
stos
and
popf
adc
test
and
insb
mov
test
jle
femms
inc
mov
jne
sahf
xchg
push
sarb
xor
inc
jne
out
stos
and
jo
fcoms
pop
xchg
call
mov
xor
pop
enter
sub
jns
add
and
pop
or
pop
push
fwait
std
sti
sub
push
bound
fldt
jo
aad
movsl
loope
faddp
and
pminub
jg
ss
sub
mov
and
push
roll
dec
cmpsb
sbb
ret
xchg
stc
lret
out
push
mov
rcr
mov
das
adc
push
aad
lcall
psllq
or
push
mov
cmp
in
sti
loopne
cli
and
mov
lea
mov
jno
in
and
clc
pop
dec
jno
outsb
sbb
inc
push
jmp
outsl
mov
mov
in
enter
or
in
jge
mov
test
pop
cltd
loopne
or
xchg
fsubl
mov
mov
enter
cmp
testb
and
fldcw
cmpsl
fisttps
or
out
sbb
lahf
scas
call
inc
mov
jb,pn
inc
nop
jmp
cmp
out
jae
addps
jnp
mov
mov
xor
sbb
addl
xchg
ror
cmp
ret
mov
cmp
xor
jmp
out
cs
das
xor
popf
andl
pop
mov
lds
int
or
mov
ds
mov
out
and
cmp
and
jge
rorl
pop
xor
pop
mov
icebp
push
mov
scas
mov
push
data16
mov
test
nop
lcall
movsl
inc
adc
xchg
cmp
cmc
enter
addr16
int
pusha
mov
cwtl
insl
xor
pop
fisubrl
lret
mov
iret
insb
js
daa
mov
aas
xchg
cmp
repz
jne
sbb
shlb
sbb
push
add
mov
es
inc
insl
fcompl
cmp
into
adc
int
arpl
or
jp
stc
sbb
pop
jae
pop
mov
push
cmpsl
out
jge
ja
push
lea
arpl
sub
xchg
dec
iret
mov
test
loop
xor
inc
out
sub
sbb
xor
imul
cli
sahf
std
rcrb
stos
dec
or
aam
jecxz
outsl
fdivrl
dec
cmp
sub
cmp
sub
pop
cmp
mov
cltd
iret
jnp
loopne
dec
int3
js
push
les
mov
dec
push
ds
and
and
filds
add
pop
xchg
insl
ds
dec
xchg
mov
add
pop
jge
fisttpll
bswap
pop
jo
les
lods
mov
leave
pusha
inc
insb
icebp
dec
aad
fstpt
mov
mov
mov
or
test
orl
fistpll
sub
xlat
arpl
outsl
test
int3
sbb
cmpsb
repnz
mov
icebp
push
lret
outsb
gs
pop
mov
add
jmp
push
sbb
lods
mov
and
sti
test
jmp
push
sbb
mov
add
rorb
push
sub
dec
fbstp
push
jecxz
mov
sbb
insl
aas
xchg
add
xlat
adc
cwtl
push
xor
or
jb
push
ficompl
shlw
data16
sub
fcompl
outsb
mov
imul
jp
int3
movsb
fimuls
add
cmp
hlt
mov
cmp
std
jmp
fidivl
clc
loope
mov
mov
pusha
and
lock
mov
xor
popf
cmp
push
or
adc
xor
mov
sub
in
es
ret
cli
pop
push
push
cmp
mov
add
pop
mov
mov
pop
popf
icebp
nop
or
sbbb
popl
adc
fdiv
and
jge
or
movsl
mov
sub
scas
leave
mov
add
rcrb
mov
or
xlat
int3
sbb
subl
lock
mov
xchg
jnp
inc
sub
mov
dec
mov
pushf
cmp
iret
popf
dec
add
jno
xorb
jg
frstor
stc
pushf
ss
inc
cmp
jp
adc
rcrl
mov
mov
inc
cld
cltd
add
and
stos
enter
xor
fdivp
mov
or
fsubs
inc
cmp
xor
mov
xchg
pop
xchg
cmpl
arpl
je
pop
or
jae
xor
jb
sti
aad
fcoml
bound
shll
sub
fsubp
mov
test
cmc
roll
cltd
or
xchg
call
test
inc
jle
mov
pop
outsb
in
loope
clc
add
out
lret
popa
ljmp
lret
je
test
adc
jl
mov
add
loop
push
enter
in
and
sub
lcall
ds
fstpl
xor
jp
add
ret
loopne
leave
fwait
push
jbe
push
pushl
fdivr
adc
test
lds
sub
scas
mov
iret
imul
inc
push
and
inc
push
and
popa
sbb
mov
loopne
jge
test
fxch
jl
sahf
cld
mov
pop
jo
or
mov
mov
dec
push
scas
scas
out
mov
lret
inc
push
fwait
cmp
mov
int3
lock
xchg
pusha
or
or
lahf
sub
adc
xchg
stos
mov
jo
inc
jmp
adc
ja
mov
sub
orl
rol
fcom
popf
mov
add
jo
mov
inc
mov
test
int3
cld
cmp
or
pop
mov
dec
jp
mov
xor
cmpsl
cli
dec
pop
lcall
fwait
jg
int
movsb
fs
int3
jmp
loope
pushl
test
int3
inc
icebp
or
pop
sti
sbb
mov
jmp
and
sarb
mov
sub
push
or
daa
outsb
ret
nop
pop
mov
jb
stc
mov
cmp
bound
dec
shll
mov
stos
xor
inc
mov
rcrb
xor
in
pop
loope
sbb
out
xchg
testb
loop
fistps
cltd
test
push
int3
cwtl
ret
jge
and
in
loop
test
add
clc
xchg
xlat
inc
xchg
clc
popa
nop
jmp
sbb
sahf
repnz
jo
push
scas
addr16
pushf
xor
ja
and
pop
sub
add
cmp
xchg
aaa
xor
aas
out
mov
pop
dec
adc
adc
das
mov
lods
xchg
daa
inc
les
or
movsb
js
sub
inc
fists
sarb
int3
xchg
mov
adc
lahf
push
mov
fidivrl
mov
rcrb
push
dec
dec
mov
xchg
sub
mov
xchg
inc
xchg
xor
dec
add
or
pop
push
call
mov
sbb
les
jge
inc
ret
cld
into
sbb
or
mov
mov
push
jle
sahf
xor
inc
dec
inc
adc
push
mov
sbb
iret
push
jae
jbe
mov
jns
popa
inc
jmp
cmc
and
xchg
xchg
jecxz
incl
ja
pop
mov
addb
sub
stos
movb
pop
push
add
adc
pop
loope
fidivrs
sub
inc
add
imul
cs
or
out
xchg
pop
sti
outsb
fdivrp
and
lcall
movsl
add
in
inc
mov
adc
divl
fs
ljmp
and
insb
pop
cmp
xor
xor
mov
mov
inc
jae
jno
xchg
arpl
pop
pop
leave
cmc
loopew
fistps
sub
pop
iret
lret
addr16
xor
xor
mov
sbb
repnz
cld
ljmp
das
mov
dec
dec
push
ret
das
jns
es
notl
push
push
out
mov
arpl
addb
les
pop
lods
xchg
addb
push
mov
push
ret
fistpll
sub
mov
xor
data16
mov
mov
arpl
push
xor
lods
pop
push
scas
pop
cmc
arpl
call
insl
fdivp
jp
popf
xor
je
inc
jno
popa
dec
xor
mov
in
push
cwtl
cmp
and
xchg
or
ret
mov
sub
mov
xor
push
push
int
es
or
rcrl
cmp
ss
pushf
ffreep
int3
std
push
mov
and
iret
outsl
xlat
cs
jl
pop
pop
and
and
jbe
cmp
les
xchg
push
mov
rorb
sub
lds
mov
scas
aas
fcmovu
ds
lahf
andb
pop
div
pusha
xchg
adc
outsb
inc
jns
arpl
push
dec
lock
fcmovnb
out
sub
leave
pop
push
aas
roll
shl
push
push
out
jb
mov
adc
mov
pushf
fistps
dec
ret
jge
mov
add
jno
mov
push
nop
jno
fwait
mov
addb
adc
inc
outsl
pushf
scas
xchg
pop
pushf
test
adc
jae
ja
js
or
jb
xchg
jecxz
nop
dec
and
cmp
fcomps
fstps
adc
jle
insl
ficoml
pop
push
xchg
mov
repnz
lret
cmp
cmp
dec
jp
ret
mov
xchg
in
and
mov
out
push
loope,pn
lahf
push
pushf
pop
rclb
pop
push
call
push
repnz
pop
xchg
shrb
pop
call
lahf
cmpsl
mov
movsl
xor
lods
pop
int3
ds
sbb
sub
ror
push
sbb
add
lds
int3
inc
out
clc
jae
sahf
inc
cmp
cmpsb
xchg
mov
movsl
jmp
stos
sub
mov
mov
add
fldl
cwtl
and
je
push
pop
sub
insl
push
pop
push
call
mov
sub
and
in
imul
fildl
lret
inc
loope
shll
cmc
mov
pop
adc
pop
outsb
inc
mov
dec
jb
adc
sub
ljmp
js
movsl
fcoms
xchg
test
jne
jb
stc
bound
in
das
imul
push
push
enter
ficoml
jo
push
scas
popf
insl
lahf
mov
out
mov
mov
test
movl
jle
pusha
mov
push
mov
add
scas
sub
lods
mov
xor
enter
je
sbb
nop
mov
ret
xchg
mov
cmc
jns
popf
das
fidivs
aaa
sub
and
mov
dec
cmpl
bound
je
aaa
test
adc
pushf
jge
cmp
push
and
incb
and
pushf
xchg
mov
dec
sbb
inc
movsl
test
popl
or
push
dec
adc
mov
sub
mov
sbbl
xchg
aad
clc
stos
mov
pop
add
xchg
lret
mov
push
push
shrb
mov
jmp
in
cmp
cmp
into
sbb
or
push
inc
or
ss
pop
ret
inc
sub
adc
int
mov
push
cld
push
mov
jae
pop
pusha
sub
cmp
movsl
push
mov
ja
add
fistl
negb
mov
popa
add
add
out
divl
fcoml
movsb
xor
push
inc
int
xchg
adc
xor
adc
jnp
pusha
fwait
in
or
loopne
lea
test
sub
mov
lahf
mov
in
add
nop
cld
stos
test
ja
cmp
into
xchg
sbb
pop
mov
mov
divb
repz
sarl
xor
or
jb
inc
icebp
inc
dec
dec
shll
sbb
pop
fs
pop
js
and
mov
stc
sti
xlat
jns
xlat
cltd
sbb
divb
sbb
lcall
cwtl
or
push
cmp
jnp
sahf
roll
mov
ss
push
mov
mov
outsb
inc
xor
hlt
mov
ja
rorl
cltd
jp
std
aaa
test
fs
cmp
cmp
insb
pop
xchg
mov
test
popf
pop
adc
shll
inc
sbb
inc
mov
fsubl
in
xchg
jb
std
imul
jge
mov
inc
ror
mov
test
outsl
into
mov
fisubrs
or
in
mov
mov
sbb
inc
sbbb
out
mov
fwait
inc
inc
jmp
and
xor
sbb
in
push
push
test
dec
cmp
push
sub
std
pop
movl
test
sbb
aaa
lahf
jno
dec
ss
dec
adc
push
xor
jns
subl
loop
ficompl
leave
mov
mov
movsb
mov
jns
stos
mov
pop
and
int3
xchg
xor
cmp
add
shr
xchg
and
frstor
test
mov
in
push
dec
xchg
rclb
fwait
aaa
test
fstpt
in
stos
fisubrs
or
or
cmc
lahf
mov
mov
sbb
push
addr16
or
mov
or
cmpsl
sarl
xor
cwtl
jo
test
sbb
inc
pop
inc
pop
pop
adc
sti
dec
repnz
incb
mov
outsb
and
mov
and
roll
ficoms
pusha
or
int3
pop
pop
mov
std
inc
outsb
pop
pop
arpl
imul
adc
rclb
pop
inc
dec
mov
adcl
jae
dec
test
sbb
and
xor
inc
push
sahf
imul
fldt
mov
fstpl
add
lahf
mov
adc
lcall
jl
sbb
cmp
push
icebp
pushf
lods
je
nop
sbb
icebp
inc
pmuludq
fdiv
xchg
lods
inc
sub
testb
gs
and
nop
sbb
ret
daa
inc
or
insl
push
mov
cmpb
push
xchg
mov
hlt
mov
mov
out
fstl
xchg
aam
cmp
lods
xlat
sbb
rcr
sub
cmp
insb
sbb
cmc
popa
stos
fucomp
into
jb
mov
push
pop
int3
insl
pop
dec
jo
std
lea
clc
orb
fisttpll
pop
inc
call
cltd
out
loopne
dec
xchg
mov
ret
dec
mov
ds
shl
and
fst
pushf
ret
adc
xlat
jo
pop
mov
fnstcw
lea
fstps
cmp
inc
ret
mov
add
mov
das
pop
pop
mov
fstps
pop
int3
sub
cmp
push
add
xchg
ljmp
int3
pop
jl
xchg
out
pop
call
adc
jo
dec
out
lods
sub
hlt
ret
pop
cmp
cmpsl
test
sbb
push
dec
rcrl
movsb
jg
call
pop
sub
int
es
rcrb
inc
mov
cmc
pop
push
mov
mov
pop
pop
stc
sbb
push
xchg
fldl
std
or
cmp
popa
and
movl
outsb
and
in
mov
jge
add
int
sbb
es
or
cmpsb
movsb
xor
das
mov
cmp
jo
push
lahf
movsl
push
test
push
and
stos
jmp
mov
shrl
lret
test
mov
fsubl
nop
cmp
mov
mov
rorl
test
xor
mov
jmp
and
push
mov
xchg
xchg
in
aaa
lcall
sbbb
cwtl
dec
mov
aad
sub
in
into
push
jo
push
cmp
jne
inc
add
pusha
inc
mov
cmp
lret
push
mov
loopne
adc
mov
scas
cltd
sub
test
sbb
push
das
mov
mov
or
mov
mov
lock
sub
cmp
add
jecxz
jg
aaa
cmp
pop
mov
pop
int
les
lret
or
sti
inc
jns
hlt
sub
nop
pop
les
popf
push
rep
adcl
jge
ljmp
jecxz
and
pop
and
cltd
cmp
shlb
and
repnz
inc
mov
pop
in
cmpsl
jmp
push
cmp
fcmovb
bound
jle
xlat
cmp
aaa
ret
flds
mov
cmp
data16
inc
cmp
inc
jne
imul
inc
xchg
add
faddl
push
movsb
sbb
cwtl
and
popl
insl
mov
inc
sbb
int3
into
mov
xchg
jne
mov
mov
mov
cmpsl
hlt
into
cmp
scas
push
shrl
push
movsl
lods
cmc
mov
sub
movsl
pop
sub
test
xor
xchg
divl
pop
cltd
cltd
pop
push
mov
test
ss
add
cmpsl
mov
insl
ficompl
mov
mov
pop
jg
pop
jle
dec
pop
sbb
lahf
cmpsb
xlat
clc
push
out
cs
sbb
addb
xor
and
loop
xchg
fcmovnbe
and
out
mov
lahf
addr16
sub
xor
cmp
lds
sub
insb
mov
pusha
jnp
jbe
add
xor
movsl
dec
mov
cmp
loop
pop
scas
lcall
icebp
sbb
push
ja
jecxz
mov
pushf
xchg
test
mov
jg
repnz
pop
pop
jg
or
sbb
or
and
and
pop
sti
mov
pop
xchg
pop
inc
lcall
push
mov
cmp
and
cmpsb
inc
fisttpll
lock
and
es
lcall
into
mov
imul
insl
imul
cmp
das
into
mov
jp,pt
pop
fdivr
mov
cwtl
mov
cli
sub
lea
loop
pop
movsl
jnp
mov
cmp
or
mov
rorb
mov
jb
int
sub
hlt
pop
cmp
nop
sub
jb
cmp
shll
xlat
sub
or
jp
sub
adc
and
shr
push
cmpsb
insl
xchg
mov
stos
mov
and
jae
jle
inc
outsb
ficompl
test
loop
repnz
fs
or
outsl
rcr
adc
movsb
xchg
push
dec
push
es
sub
xor
addb
mov
ret
das
shl
xor
xchg
sub
push
lret
pop
cld
fidivl
mov
sub
dec
mov
mov
cwtl
cmc
push
dec
lcall
mov
or
ror
and
sub
sub
sbb
in
add
mov
dec
sbb
inc
fmuls
pop
mov
push
and
rcrb
arpl
pop
mov
mov
das
add
pop
dec
fstpl
cmpsl
sbb
fisttpll
cmp
or
out
pop
out
dec
add
in
hlt
jne
dec
add
mov
stos
daa
or
pushf
adc
xchg
clc
loop
inc
outsb
test
or
lods
mov
movsl
adc
push
int3
mull
in
les
sbb
push
add
mov
dec
inc
add
in
sbbl
stos
sub
mov
lret
pusha
in
sub
pop
inc
push
pop
cwtl
inc
cmp
aas
outsl
cmp
mov
and
xchg
jp
xchg
leave
repz
inc
and
mov
and
lods
mov
fwait
insb
daa
sbb
daa
jmp
lcall
xchg
jmp
repnz
nop
lea
imul
and
dec
in
sub
test
inc
movsb
sbb
fnstenv
lock
or
adc
dec
addl
inc
imul
icebp
loope
enter
inc
outsl
subl
sub
imul
fs
stos
xchg
das
xchg
daa
js
add
push
jp
cmp
pop
andb
mov
jge
jb
jecxz
push
xchg
xor
or
mov
xchg
xor
and
insb
stos
arpl
mov
push
sub
xor
test
pusha
sub
pop
scas
aad
lret
ret
mov
clc
call
sbb
push
test
or
adc
negl
mov
mov
sub
insb
enter
mov
pop
sub
push
cld
fadd
sahf
push
cmpsl
xchg
xlat
push
pushf
cmp
mov
push
dec
ret
and
cltd
adc
ret
xor
mov
imul
popf
pop
or
pop
lock
nop
xor
mov
cltd
jae
cmp
aaa
or
in
cmp
fbld
push
or
lea
jne
fadds
xor
enter
push
adc
mov
add
add
or
push
jo
ljmp
lret
mov
std
cmpsb
jae
push
sahf
mov
lcall
xor
adc
mov
mov
or
push
imul
and
mov
xchg
mov
xchg
adc
xor
jmp
jne
inc
rep
test
dec
in
repz
fdivrp
mov
xlat
dec
mov
mov
pop
insl
xor
or
fs
sbb
inc
and
lret
lock
sub
and
jl
jbe
mov
xchg
mov
std
test
nop
jmp
jb
aaa
enter
mov
rclb
jmp
mov
out
pop
testb
dec
add
xchg
push
out
lock
mov
in
inc
push
adc
cmp
xchg
int3
lods
pop
scas
subl
mov
xchg
mov
sbb
lret
lea
ds
sbb
sub
inc
imul
jecxz
push
xor
mov
xchg
sub
orb
stos
jl
aam
scas
outsl
inc
pushf
and
jne
icebp
inc
mov
lock
xchg
sub
and
push
ja
jne
cmp
and
push
mov
pushf
ror
xor
cli
mov
sti
cmp
inc
mov
push
xor
stc
sbb
cmp
cmp
ds
aas
loopne
pushf
js
bound
jns
inc
or
fisubl
pop
and
or
leave
in
push
repz
sbb
fnstsw
adc
fsubp
pop
ret
push
in
ss
fsubr
xlat
or
sets
lcall
bswap
inc
adcb
imul
mov
xor
mov
cmp
sbb
movsl
sub
sbb
jp
test
mov
mov
ja
sub
and
jmp
jmp
aaa
jle
mov
xor
cmp
rcll
repz
cltd
test
xchg
cmp
pushf
test
fwait
pop
std
mov
and
dec
leave
mov
cwtl
fistl
es
pop
stos
mov
leave
xor
lea
out
mov
mov
pop
mov
lret
test
or
or
lcall
inc
insl
cmp
dec
push
sti
add
repz
test
sbb
mov
aas
testb
pusha
cmp
inc
dec
ljmp
mov
cmpsl
pushf
xor
stc
mov
add
sub
fidivrl
cvtdq2ps
inc
repz
push
or
mov
cmp
cmp
cmp
jb
xchg
jge
cmpsb
xchg
inc
sub
sbb
jae
aas
dec
aaa
jmp
lock
arpl
out
xchg
push
push
in
outsl
test
sbb
and
jmp
mov
aas
rorb
insb
lock
or
les
push
fdivl
movsl
popf
pop
das
punpckhbw
push
xchg
push
mov
and
jo
mov
mov
sbb
ret
and
push
clc
xor
frstor
repnz
xor
popf
in
xor
add
xchg
pop
sbb
les
mov
outsb
imul
pushf
push
xor
enter
mov
out
sub
add
jnp
add
imul
or
loope
and
mov
popa
popa
jb
inc
push
nop
and
jecxz
xchg
arpl
pop
lods
inc
ds
push
ljmp
inc
xchg
push
fbld
dec
arpl
repnz
fldt
xor
cmp
sti
xor
bound
sbb
out
idivl
adcb
or
cmp
mov
mov
out
mov
cmp
pop
mov
out
je
mov
test
xchg
or
jno
add
sub
ret
xor
mov
fwait
xchg
xor
pop
hlt
imul
and
inc
xchg
fdivl
inc
sbb
mov
cmpsl
mov
jbe
cmp
mull
negb
cmp
dec
pop
jecxz
inc
inc
jno
jge
insl
hlt
call
or
push
ljmp
sahf
inc
mov
or
stc
pop
inc
cli
hlt
sbb
hlt
imul
and
xchg
cli
ss
out
es
push
int
fisubs
pop
mov
inc
std
inc
rcll
lret
iret
add
jne
add
std
and
enter
addr16
stc
icebp
push
mov
or
iret
push
inc
and
test
cwtl
ja
sbb
subl
pop
loope
jno
dec
add
pushf
pop
clc
adc
push
xchg
cmpsl
sbb
or
in
lcallw
loop
ret
sbb
and
insl
repnz
lock
add
jl
fpatan
stc
dec
jne
or
mov
or
aad
cmp
mov
jns
jo
cmp
rcrl
cs
in
mov
repz
add
sub
ret
les
sarl
inc
pop
insl
ret
dec
jl
dec
lret
mov
and
or
out
mov
mov
mov
mov
jp
insb
ds
cmpsb
cld
or
mov
sahf
in
ret
nop
lahf
cmp
popa
lods
or
shrb
mov
mov
cmp
mov
subl
enter
sbb
inc
cmp
daa
cmp
insb
fisttps
loop
popf
xlat
inc
scas
enter
and
rcr
adc
jno
test
int
cmp
add
fs
push
nop
xor
ret
xor
cmpsl
mov
clc
pop
pop
scas
sbb
scas
push
mov
icebp
xchg
jb
in
out
dec
xor
pop
dec
xchg
sbb
fidivrl
insl
lock
xchg
push
add
mov
lahf
inc
or
loope
or
mulb
cmp
loope
adc
mov
xor
adc
loopne
std
fs
out
gs
jecxz
test
out
xchg
mov
mov
push
insl
scas
cmp
inc
push
add
idivb
xchg
mov
mov
jno
fidivs
mov
mov
mov
jmp
les
lret
nop
rolb
test
push
sbb
mov
mov
ljmp
shlb
push
orl
cmp
pop
cmpsb
mov
cmc
out
cmp
sti
push
inc
out
push
js
rorb
test
xor
test
mov
push
jle
xchg
mov
xor
xor
ja
clc
lahf
mov
and
pop
gs
push
lcall
mov
test
mov
lret
in
fidivl
pop
adc
pop
aam
in
push
or
and
sub
cltd
add
test
stos
jp
push
fstps
stc
mov
cmp
adc
bound
jb
sub
int
sbb
push
pop
out
xor
lahf
cmp
outsb
or
xor
iret
push
inc
pop
aaa
andb
ret
and
pop
sub
mov
pop
cld
add
hlt
pop
lahf
js
in
clc
inc
jo
pop
push
pop
fsubrl
jle
dec
mov
pop
fwait
inc
lcall
push
xor
pop
jl
lods
subb
icebp
inc
pop
enter
pusha
in
test
loope
aad
mov
pop
mov
outsb
mov
aaa
vpsllw
or
inc
movsl
mov
cmp
sub
push
stos
lock
inc
pop
pushf
mov
or
adcb
pop
jecxz
adcl
cltd
add
ds
xchg
fsubl
mov
xchg
xlat
addr16
andb
pop
outsl
shlb
cmpsb
dec
aas
std
dec
lock
scas
mov
test
inc
mov
xchg
mov
test
mov
lds
push
and
daa
dec
add
push
test
jns
jnp
xor
dec
cmpsb
addl
mov
movsb
sti
in
add
jne
ljmp
cmpsb
scas
addr16
mov
dec
cmpsb
loopne
cmc
sbb
inc
sarb
push
xlat
scas
pop
enter
mov
add
inc
call
sub
nop
push
int
inc
dec
cmp
mov
pop
mov
jb
movsl
mov
sub
sub
popa
sub
mov
xchg
in
test
lcall
add
lret
icebp
shrb
outsb
and
or
test
out
add
andb
xchg
and
ficoms
mov
jns
xorl
push
xchg
dec
rorl
push
inc
adc
dec
jnp
into
or
mov
inc
stc
pop
mov
xor
pop
movsl
and
insb
cmp
test
popa
fildll
cmpsl
pop
xchg
js
cmp
sub
jo
int
out
inc
fnstsw
lcall
sbb
int3
and
aam
mov
mov
pushl
jecxz
mov
mov
mov
clc
add
pop
fs
lods
jae
enter
rclb
addl
pop
pop
cmp
xor
out
mov
pop
in
push
add
mov
cwtl
inc
mov
mov
mov
enter
cmp
adc
xchg
aas
mov
fsubrp
mov
fldenv
xchg
cmpsl
xchg
js
push
jb
mov
push
mov
xor
jle
jle
in
push
adc
into
and
mov
xor
filds
mov
pop
stc
notl
inc
into
aas
dec
sbb
sub
cld
push
sub
sub
adc
inc
fisttps
push
mov
fstl
cmp
cmp
cmpsl
inc
notb
cli
mov
jae
stos
dec
clc
arpl
out
push
repz
repnz
aam
mov
sbb
popf
fwait
jmp
and
xor
add
push
in
mov
mov
push
sbb
int3
or
cmp
bound
lret
mov
jl
cs
mov
fsubrs
loope
or
push
loop
daa
and
movsl
pop
mov
sub
popa
fmul
cmp
sbb
or
lock
add
inc
int3
idiv
sub
and
gs
jns
mov
arpl
mov
add
mov
inc
out
sahf
mov
mov
sub
lret
mov
push
mov
icebp
ret
sbb
lret
insb
jne
mov
jg
mov
pop
popa
out
adcl
scas
lods
mov
popa
sub
test
ret
gs
pop
pop
inc
aaa
jae
pop
test
sbbb
fistl
repnz
lock
clc
enter
nop
mov
jecxz
inc
pushf
in
hlt
js
aas
pop
lret
dec
push
mov
xchg
cmp
daa
jae
dec
lds
inc
sub
xchg
nop
xor
aam
loope
daa
aaa
cmp
scas
lahf
andb
dec
lcall
cmp
icebp
dec
push
fwait
sub
hlt
xor
idiv
adc
pop
and
mov
push
scas
js
in
lea
mov
cmc
push
pop
xchg
xchg
loop
sub
adc
movsb
inc
in
sbb
dec
jl
negl
fbld
test
xchg
dec
mov
dec
sti
inc
or
rorl
inc
divb
pop
jbe
push
adc
imul
mov
push
pop
es
insb
mov
cmpl
mov
jmp
pop
adcb
adc
push
pop
test
aam
mov
aaa
jge
jbe
jns
pop
ficoms
adc
jnp
xor
pop
loope
into
adc
pop
insb
les
or
testl
aas
shlb
call
mov
out
mov
imul
sbb
leave
movsb
js
push
lods
ret
or
ja
dec
adc
and
mov
jbe
mov
pop
mov
fdivp
cwtl
loope
ja
cmp
arpl
adc
cmpsl
sub
lods
dec
mov
out
adc
jmp
jmp
enter
inc
pop
dec
cwtl
jbe
xor
cmp
cld
cmp
cmp
mov
adc
or
or
fstps
sbb
or
pop
call
mov
xor
clc
xor
xor
sub
mov
adc
cwtl
inc
mov
aas
mov
enter
jae
hlt
push
pop
lcall
outsb
es
inc
and
mov
cs
ja
fistl
movsb
dec
cmpsb
and
es
aaa
ja
dec
enter
mov
pop
nop
push
dec
xchg
andb
out
out
push
les
cmp
inc
aaa
mov
adc
and
outsb
mov
test
push
movsb
mov
mov
pop
lret
sub
fsubrp
idivb
cmp
inc
outsb
stos
dec
sbb
mov
sbb
negb
mov
jmp
int
bound
mov
jno
cld
mov
mov
fbld
loopne
mov
je
stos
sub
mov
shrl
outsl
stos
mov
shrl
push
mov
addr16
out
add
jne
hlt
push
push
push
insl
cmp
stos
mov
aaa
inc
aas
insb
xor
adcl
sub
push
lds
inc
and
cmpsb
mov
divl
call
or
pop
mov
xchg
lret
xor
popa
sub
dec
push
aas
push
loope
out
mov
hlt
push
sbb
movsb
push
pop
and
sbb
sub
fcompl
cmp
inc
repz
sbb
jbe
nop
mov
pushf
jg
pop
mov
js
popa
sbb
repz
rclb
cmp
aaa
cmpsl
pop
xchg
cs
mov
addr16
pop
test
sub
idivl
outsb
jle
cmp
rorb
jp
inc
in
jle
dec
sub
ljmp
and
jp
or
and
mov
loope
cmp
adc
cwtl
jns
mov
inc
pop
adc
mov
xor
nop
sub
iret
xchg
gs
dec
mov
jbe
inc
test
sbb
outsb
test
fnstsw
stos
iret
xor
imul
inc
cmpsl
cmpsb
pop
mov
xchg
mov
pusha
icebp
sub
insl
cmp
call
sahf
or
icebp
in
pop
stos
mov
xchg
mov
es
push
repnz
repnz
push
cmpsl
cmpsb
add
std
jecxz
cs
shrl
mov
pop
add
and
cmp
xlat
test
jp
mov
or
add
sbb
add
cwtl
or
fisttpl
inc
in
js
mov
loopne
mov
jb
push
add
and
xlat
test
mov
cmp
jno
in
adc
iret
add
out
mov
sub
daa
sub
xchg
add
and
mov
loop
inc
ja
loop
adc
jbe
movsl
add
inc
cli
mov
ljmp
inc
shll
gs
scas
testb
or
das
rcl
lods
adc
icebp
lods
mov
xchg
push
into
or
test
cmp
sbb
std
mov
push
dec
inc
sbb
fs
cli
lods
test
or
adc
xorl
xor
lods
jae
popa
clc
cmpsb
xor
subb
out
mov
fsubrs
jbe
leave
adc
adc
add
pop
jnp
fbstp
lcall
and
xor
out
mov
mov
in
popa
jbe
jmp
incb
nop
inc
fwait
int
dec
fxtract
sub
sbb
xchg
cmp
das
xchg
orb
daa
cld
mov
pop
inc
or
cmp
ret
push
inc
rorb
push
inc
sub
mul
mov
adc
jae
and
movsb
shl
push
or
stc
mov
mov
push
ret
or
popf
inc
xchg
pop
lock
jge
ficoms
icebp
aas
mov
pop
mov
pop
in
ss
adc
and
pop
adc
fisttpll
inc
je
sbb
jecxz
lea
mov
mov
loopne
and
lret
leave
nop
addr16
dec
xchg
test
movsl
add
outsl
xor
push
fwait
cld
mov
cmpsl
xchg
sbb
clflush
ds
mov
incb
add
adc
lcall
lods
xchg
xor
out
call
sbb
xchg
cmc
xchg
mov
jne
jns
adc
lds
dec
addr16
movsb
cmp
arpl
push
ret
push
out
ds
and
fisttps
sub
mov
add
out
int3
test
in
call
mov
pop
stos
or
mov
or
in
shlb
call
push
xchg
dec
and
lcall
inc
fs
adc
jno
hlt
pop
or
icebp
add
cltd
pop
xchg
jp
adc
call
aaa
mov
iret
jl
addr16
incb
mov
mov
lods
xchg
push
pop
gs
frstors
mov
pusha
mov
rcr
test
add
and
shll
sub
dec
pop
xor
stos
dec
pop
jp
push
test
push
add
xchg
lds
inc
xchg
pop
decb
shlb
sub
fisttps
and
out
sahf
cmpl
stc
sub
push
inc
shrb
pop
repz
xchg
mov
rcrb
add
pop
jg
jne
mov
adcb
mov
pop
add
add
das
dec
push
cmpsb
xor
fldt
dec
pop
jns
pusha
iret
cmp
sti
imul
cmc
mov
sbb
in
into
sbbl
adc
push
into
sbb
sub
ret
mov
or
mov
adc
or
mov
movb
fsubs
pop
dec
cmpsb
int
push
xor
stc
arpl
lea
jnp
cmp
xchg
into
push
test
xor
jl
in
insb
push
popf
mov
xor
hlt
test
ss
insl
les
jg
cmp
xchg
adc
out
push
inc
add
mov
sahf
data16
in
push
aam
mov
into
sub
pop
pop
roll
sahf
mov
ja
loope
shl
mov
push
bound
mov
inc
loop
gs
lock
stc
lahf
pushf
aam
data16
pop
mov
je
inc
stos
fisttpl
dec
xor
inc
in
aam
adc
cmp
imul
aaa
fiaddl
dec
data16
loope
fisttpll
adc
xchg
icebp
notl
lea
adc
add
sub
pop
and
inc
pushf
int
nop
adc
sbb
dec
push
aaa
mov
negl
ss
aad
mov
mov
jbe
sarb
lods
xor
mov
sbb
inc
pop
imul
notb
push
ja
rorl
scas
inc
je
arpl
hlt
or
cmpb
dec
xchg
xchg
leave
mov
push
ds
xlat
mov
dec
pop
push
movsb
cmp
loope
in
and
test
ljmp
lahf
out
sbb
je
das
mov
outsl
or
mov
lea
mov
aad
nop
aas
mov
in
daa
dec
clc
sbb
icebp
aam
jae
mov
sahf
aas
push
js
dec
mov
mov
cmp
push
fimull
and
shl
xchg
fiadds
scas
inc
pop
pop
adc
mov
aad
and
fildll
add
cmpl
adc
imul
sahf
push
add
lret
mov
subb
cmp
enter
jmp
jp
push
ss
enter
je
pop
or
mov
fstl
je
aam
popa
pop
bnd
sub
xchg
mov
ret
out
and
pusha
or
xlat
clc
js
xor
add
das
ret
push
out
pusha
xor
and
movsb
notb
lods
fildl
movsb
out
sarl
les
add
xor
scas
lds
bound
and
lcall
ljmp
cmp
mov
movsb
mov
pop
lea
hlt
scas
mov
xorb
or
push
dec
adc
mov
xchg
cmp
scas
xor
mov
fs
push
sub
cmc
idivl
sub
fisubrs
xor
and
jns
xchg
or
loopne
pop
jbe
scas
popl
outsl
loop
cltd
push
or
jns
ret
and
pop
mov
xlat
aas
das
sub
sbbb
into
mov
ljmp
xor
pop
out
arpl
push
and
hlt
cmp
cmpsb
inc
and
xchg
enter
sbb
stc
pop
lcall
cmp
add
fidivrs
gs
lret
jnp
add
jge
sbb
mov
ret
xchg
sti
xchg
cmp
push
in
int
shll
xor
fcmovnb
adc
jmp
xchg
in
popf
test
in
jge
in
and
outsb
xchg
adc
adc
sub
ja,pt
pop
test
fwait
or
sbbl
nop
and
ret
lods
pop
test
call
lds
push
mov
jne
dec
shrl
rcrb
dec
sbb
cmp
push
add
test
sub
sbb
sub
ds
idivl
cwtl
cltd
xchg
aaa
push
inc
std
popa
inc
lahf
mov
ret
mov
fcmovb
mov
inc
sti
inc
lretw
adc
addr16
jecxz
inc
fildll
sub
sub
or
in
sub
int3
xor
sbb
js
rorl
or
dec
inc
pop
stc
fwait
shl
push
and
push
pushf
movsb
xorb
push
fisttps
int3
hlt
jne
jle
test
cmp
push
lret
mov
nop
xchg
mov
xchg
mov
scas
adc
jl
xchg
rcll
or
je
adc
stos
iret
shll
enter
fildl
stc
push
xlat
in
lea
outsl
mov
dec
gs
std
fildl
sub
cmp
lods
push
stc
cmpsb
test
cmp
mov
cwtl
insb
shr
fdivl
push
and
aaa
divb
xor
imulb
add
or
lahf
mov
cmp
mov
jnp
xchg
mov
mov
rorb
mov
sbb
es
push
add
sbbb
loope
sub
pop
xchg
adc
mov
dec
daa
push
adc
int
push
add
out
cs
sub
or
jp
mov
and
scas
pshufw
fwait
iret
adc
push
inc
cli
repnz
pop
jle
pop
push
mov
in
adc
movsl
aad
nop
pop
jns
lock
imul
mov
xchg
jno
bound
push
out
xlat
jnp
cmp
outsb
sbb
call
cmp
push
jle
cwtl
call
add
add
push
stos
scas
mov
pop
add
enter
movsb
pop
sahf
pop
das
roll
stc
enter
cmc
jo
xchg
int
lar
push
orb
push
mov
bound
pop
daa
mov
outsl
mov
xor
sub
mov
push
imul
mov
sbb
cmp
xchg
sbb
sub
pop
sti
mov
sbb
jb
push
mov
fistpl
sbb
cmpxchg
mov
cmp
sub
stos
sbb
ret
mov
enter
jae
cmp
jle
mov
pop
lea
mov
push
mov
push
hlt
aam
test
push
xchg
or
or
sub
popa
sub
mov
jmp
push
pushf
mov
insb
aam
popf
jmp
cs
aad
dec
scas
mov
iret
xchg
add
adc
xor
nop
aad
sub
push
push
jo
dec
xchg
and
mov
ret
cmp
mov
sbb
icebp
mov
call
hlt
pop
sbb
mov
test
divl
aad
in
or
btc
push
jle
cli
insb
stc
adc
out
mov
negb
adc
daa
xor
sub
xor
cld
int
jmp
in
mov
jp
dec
pop
add
jge
pushf
sbb
sub
jno
cmpsb
pop
sbb
inc
popa
int
xchg
ret
mov
mov
jg
xor
jae
adc
dec
insb
push
and
cwtl
cmp
xor
mov
nop
jnp
xor
subb
cwtl
mov
pop
push
test
int
fwait
push
jmp
push
pop
notb
inc
rclb
mov
jne
inc
push
outsb
out
imul
arpl
test
mov
or
out
fnstcw
adc
iret
test
mov
mov
sub
sub
adc
mov
mov
pusha
push
ret
cltd
xchg
loopne
fmull
inc
cmp
cmpsb
cld
lahf
add
lcall
adc
mov
inc
insl
in
fisttpl
sbb
mov
outsl
mov
adc
lods
mov
mov
mov
pop
cs
enter
je
xchg
sub
mov
dec
mov
adc
mov
xor
fwait
sahf
fs
mov
pop
jge
and
push
hlt
inc
hlt
in
mov
and
dec
lret
add
ja
xchg
ds
push
jmp
jnp
mov
and
mov
div
enter
shr
into
mov
lcall
rolb
and
and
dec
dec
xlat
mov
cmp
jae
xchg
insl
das
mov
cli
xchg
pop
mov
pushf
or
call
push
test
cmp
mov
sbb
mov
mov
dec
and
xchg
in
mov
imul
pushf
test
bound
inc
loope
or
sub
mov
mov
adc
dec
int3
ja
movsb
pop
rclb
sub
dec
adc
and
test
xchg
mov
insb
lds
imul
arpl
jge
mulb
stc
out
pop
movsb
int
mov
sub
push
dec
test
mov
fwait
or
popf
subb
aam
xchg
cmp
xchg
cmpsl
jb
icebp
loope
mov
xchg
aad
mov
sahf
pop
popa
les
pop
mov
stos
mov
leave
and
push
push
and
xchg
in
ret
xchg
shlb
jp
into
inc
pop
fsubrs
iret
std
cmp
shrl
cmp
jge
inc
or
adc
push
and
inc
jge
dec
sahf
cmp
sbbl
je
aad
subb
adc
jae
or
movsl
pop
inc
addb
repnz
negl
cmp
lods
in
ror
mov
push
jb
xchg
xlat
or
pop
dec
daa
mov
jmp
and
jp
lock
in
iret
push
insb
or
sub
imul
mov
lds
pusha
inc
push
es
sbb
dec
dec
cmp
and
lcall
jl
andb
leave
shll
mov
sti
bound
mov
mov
mov
cs
std
lahf
sahf
push
pop
mov
mov
iret
in
xor
jb
repnz
xchg
insb
inc
xchg
xchg
repz
ror
mov
mov
and
cld
jle
mov
jle
jo
in
mov
add
mov
in
cmc
outsl
bound
lret
jl
lock
mov
mov
loopne
pop
sbb
inc
push
std
mov
in
popa
mov
fcmovnu
xchg
cmp
mov
scas
filds
in
jne
jl
nop
jbe
dec
xchg
call
jbe
pop
bound
enter
mov
repz
rcrb
sti
push
mov
cli
scas
inc
inc
xor
sub
scas
jo
pop
jb
les
dec
jae
pop
movsl
imul
rorb
bound
mov
hlt
pop
push
mov
jge
fidivl
xchg
push
popf
fdivrl
push
shlb
ja
push
rclb
sub
and
shlb
mov
stos
pop
test
cwtl
sub
jmp
pop
adc
hlt
adc
pop
insl
lret
xchg
or
cld
sbb
hlt
aaa
in
imul
sbbb
dec
cwtl
xchg
dec
cmp
into
enter
xchg
add
js
rcr
jns
lret
pushf
push
cmpsl
jl
and
and
jb
dec
cwtl
enter
pop
mov
sbb
xchg
sbb
pop
jb
rcr
daa
and
cmp
cmpsb
dec
es
aas
cmp
push
not
ret
pop
out
outsl
jbe
shlb
lods
ret
pop
mov
and
or
and
mov
lea
les
push
insl
xlat
xor
stos
xchg
pusha
jg
nop
sub
mov
in
int
stc
and
mov
mov
insb
push
fisttps
lahf
add
popf
out
adc
hlt
loop
pop
cmc
jbe
std
stos
shrl
rorl
call
stc
jb
cltd
pop
push
cmc
jl
test
lcall
shll
test
pminub
shl
push
pop
xlat
mov
loopne
sbbl
pop
cs
add
sbb
inc
adc
loopne
pop
inc
not
mov
orw
jle
xchg
mov
dec
push
push
fcom
ret
pop
rcl
icebp
orb
mov
xor
lcall
lds
sub
pop
lret
cmp
cmpl
bound
push
sub
and
xchg
cmp
dec
dec
mov
outsb
sub
push
mov
push
cmc
in
cld
push
lods
mov
jg
mov
and
cmp
xlat
xchg
lock
mov
and
hlt
test
rcl
xor
outsb
xor
addr16
imull
insl
bndldx
outsb
cmp
sbb
stos
jle
mov
aam
movb
test
or
or
xchg
in
movsb
dec
adc
in
insl
xchg
add
ss
addr16
jns
xchg
nop
imul
popf
mov
ret
xor
ret
nop
mov
adc
mov
dec
mov
push
push
mov
mov
xor
jbe
aaa
test
and
dec
inc
pop
cmp
cli
sahf
inc
aad
jge
push
jp
jne
test
sbb
mov
outsb
mov
mov
fildll
inc
xor
dec
addr16
mov
mov
xlat
dec
inc
scas
jecxz
es
cmpsb
fsubl
loope
mov
out
testb
push
xor
in
inc
iret
push
std
xor
push
imul
push
aam
xor
call
xor
daa
push
cmpsb
mov
dec
test
jle
arpl
pop
lods
xchg
dec
out
push
push
sbb
mov
fwait
lret
in
mov
je
data16
repnz
addl
mov
into
push
xlat
icebp
ret
sbb
ss
rol
and
in
shl
stc
mov
lcall
xor
mov
daa
dec
inc
daa
inc
push
cltd
dec
shll
or
xor
lret
ror
sbb
ret
enter
xchg
mov
popf
repz
push
stos
out
pop
sbb
pop
mov
inc
xchg
pusha
mov
sub
add
sub
gs
xor
add
cmp
popf
lods
pushf
test
test
scas
sbb
insl
repnz
ds
imul
jg
fldenv
mov
andl
lods
je
mov
xchg
or
fstps
pop
pop
fistl
shlb
and
lods
call
inc
in
int
stc
frstor
das
outsl
push
adc
and
hlt
jp
dec
pushf
out
sbb
popf
out
ljmp
test
stos
adc
into
mov
orl
mov
shll
xchg
mov
fsubs
dec
mov
ds
es
add
lds
push
dec
and
fndisi(8087
push
leave
or
inc
push
push
or
jmp
fmuls
dec
arpl
les
xor
aam
insb
sub
sti
movsl
sbb
xor
sub
cmc
and
aad
negb
hlt
mov
idivl
mov
xorb
je
dec
push
lret
pushf
mov
jo
dec
js
jo
xchg
subl
jnp
mov
outsl
lret
push
mov
call
int3
neg
das
rcll
xor
maskmovq
divl
mov
push
jns
mov
pop
scas
fwait
pop
sbb
mov
mov
push
repnz
sub
sub
pusha
push
adc
jmp
jg
inc
inc
push
loop
mov
mov
std
in
fwait
xor
or
setne
gs
repz
stos
into
sub
in
push
and
ds
bound
jle
inc
sti
xor
jns
lock
mov
rorb
jbe
xchg
mov
std
xchg
popf
add
jo
lret
popf
adc
dec
cmp
lcall
ljmp
fwait
repz
lods
stos
mov
jbe
dec
popa
jmp
inc
mov
nop
xchg
xchg
cmp
jns
mov
xorl
call
mov
test
mov
mov
inc
and
xchg
mov
pop
add
mov
lods
sub
mov
dec
dec
add
sbb
or
inc
xchg
lods
pusha
and
test
cmp
cmc
imul
fwait
test
push
cmp
ds
call
mov
std
mov
dec
lret
enter
fimuls
pop
es
mov
out
rol
jno
movsb
adc
cmp
stos
fnsave
push
xchg
pop
or
mov
push
shl
adcl
data16
xchg
imul
int
out
sub
outsb
jl
das
imul
inc
mov
inc
enter
sbb
push
push
add
jle
xchg
fisubrl
xchg
arpl
mov
in
sub
es
sub
mov
mov
and
jnp
fldenv
pop
cwtl
insb
xor
cmp
nop
ss
loope
pop
jg
fwait
stos
sarb
mov
es
dec
nop
mov
xchg
mov
scas
movsb
pop
ret
les
dec
shl
xchg
jns
mov
insl
loop
xchg
adc
sub
jbe
loope
fists
mov
loope
popa
pop
pop
pusha
rol
xchg
lea
das
sbb
ds
ds
insb
movsb
iret
aad
inc
cmp
loopne
mov
andl
fidivrl
jg
psrld
fcmovbe
lret
xchg
mov
add
xchg
jle
mov
pop
sbb
mov
shr
shrl
jae
dec
sub
iret
sbb
mov
mov
aad
dec
dec
or
fisubs
inc
bound
aam
cmc
roll
jno
test
add
dec
xchg
lds
mov
push
andl
pop
mov
jo
in
dec
mov
cmp
hlt
pop
dec
scas
pop
jae
xor
mov
repnz
test
mov
rorl
add
push
or
xor
xor
xorl
aaa
xor
popa
daa
inc
les
sub
sbb
add
jge
lcall
dec
test
stc
nop
popf
addb
pop
mov
mov
mov
in
repnz
or
shl
mov
fucomi
imull
imul
pop
or
lcall
or
dec
pop
push
sbb
adc
jnp
cmpsl
test
imull
clc
out
xchg
pop
in
call
bound
mov
call
inc
sub
xor
jbe
cmp
dec
fsubs
adc
push
or
dec
cmp
sub
or
ret
cltd
pop
jmp
scas
out
pop
pop
push
cld
xor
adc
mov
mov
cmp
push
cmp
adc
faddl
xor
or
fs
shr
pop
xor
inc
xchg
movsl
aas
lret
xlat
shlb
or
and
add
pushf
lret
jo
fisubrs
sub
dec
popf
inc
scas
add
jge
mov
cmc
jmp
sub
inc
clc
int
inc
aam
popf
scas
orb
out
mov
push
and
sub
lds
mov
add
mov
and
loope
shlb
popf
pop
push
lcall
bound
jp
int
bound
mov
mull
repz
in
dec
mov
xchg
lcall
pushl
xchg
out
or
adc
pop
mov
popa
lea
pop
mov
sbb
sub
hlt
push
inc
xchg
dec
or
and
cmp
jmp
mov
or
sbb
std
mov
imul
pop
fidivs
adc
xrelease
movsb
jbe
jge
xlat
dec
rcl
test
push
mov
mov
outsl
inc
inc
aad
jecxz
cmp
xor
fwait
ret
decl
jg
fdivrp
mov
stos
jle
jecxz
cli
pop
jb
cmpsb
dec
mov
xchg
inc
pop
leave
dec
push
adc
cltd
repz
out
lods
jl
stos
mov
add
or
cld
shrb
sub
mov
mov
ret
js
jns
push
cmpsl
es
imul
cwtl
and
shl
stos
pop
shl
pop
outsb
dec
pop
jecxz
xor
xorb
loop
mov
and
enter
popa
stos
aam
mov
mov
stc
inc
out
dec
sahf
mov
out
push
or
sbb
movsb
xor
fstpl
mov
in
push
lea
pop
aam
pusha
xor
mov
sbb
dec
stc
jnp
sub
push
mov
cmp
sbb
push
inc
testb
mov
leave
mov
lahf
aaa
jnp
jb
mov
fs
lea
scas
gs
pop
addr16
cmp
stos
jae
lea
cwtl
mov
lea
sub
insl
mov
cmpsb
xor
add
pop
add
push
dec
inc
imul
int
popf
jno
xchg
popa
sbb
popf
add
pop
add
fcoml
pop
fldenv
pushf
mov
pop
out
loope
push
addr16
xchg
push
dec
mov
lcall
jp
adc
in
push
adc
cmc
shlb
hlt
mov
out
fadd
and
repnz
jg
test
mov
pop
adc
fmulp
xchg
add
leave
push
push
mov
hlt
or
inc
sbb
and
mov
mov
push
in
jae
lock
les
jae
cmp
rcrl
sbb
sahf
imul
out
int
add
dec
je
mov
dec
repnz
cld
lds
into
addr16
push
mov
sub
push
jle
push
sub
mov
push
mov
popf
mov
lcall
data16
int
stos
movsl
pusha
int3
xor
adc
xchg
test
pushf
das
sub
das
mov
cmp
and
out
or
std
leave
push
test
adc
ret
mov
push
loope
dec
rcr
lock
or
pop
xor
sbb
shrl
add
push
jns
mov
aad
lret
pop
lods
in
popa
dec
dec
clc
jo
sti
inc
mov
enter
fdivs
call
or
mov
push
ljmp
and
lcall
call
sub
inc
fcmovu
pop
cmp
inc
stos
enter
jge
xchg
xor
in
adc
aaa
loopne
sbb
push
in
push
fst
mov
mov
mov
add
push
jle
cmp
scas
adc
inc
clc
fidivl
adc
decb
insl
jae
sti
cli
test
pusha
enter
sub
mov
mov
fsts
xor
lcall
mov
mov
xlat
aam
call
lahf
cmp
mov
cmc
stos
xor
loop
sbbb
lea
mov
push
out
lea
mov
mov
lcall
mov
mov
loope
jg
or
leave
mov
inc
jg
push
add
mov
int
xchg
push
push
or
inc
mov
sbb
adc
and
pusha
sub
jbe
testb
adc
cld
jmp
mov
xor
sbbl
and
imul
gs
imul
jne
inc
ds
std
dec
cmpsl
mov
ret
in
add
inc
test
adc
hlt
leave
mov
or
cmp
or
mov
packssdw
into
mov
out
rcl
lret
rcrl
mov
xchg
fldt
subb
fsubr
push
scas
mov
pop
adc
insl
clc
lods
sti
push
fs
add
fcompp
lock
pushf
cmpsb
mov
cmp
test
js
out
ljmp
dec
push
push
mov
shlb
fiadds
jmp
leave
bts
je
jb
mov
xchg
std
push
sbb
test
mov
mov
mov
scas
xchg
iret
fwait
pushf
mov
loop
test
pop
mov
popa
aam
add
push
lcall
xlat
stos
inc
xor
cmp
mov
cld
fs
jno
and
mov
add
add
stos
push
movsl
dec
and
push
dec
push
jecxz
call
fidivs
jmp
pop
xchg
outsb
push
xor
cmpsl
imul
iret
push
imul
ss
hlt
rcr
imul
sub
pop
divl
jmp
test
js
aas
mov
xor
ss
rol
rol
iret
fldl2t
adc
mov
inc
xchg
lret
cli
mov
jns
nop
das
lock
in
out
rcr
adc
xchg
push
decl
lret
cld
sti
mov
jp
add
xchg
sbb
add
jo
jno
sub
imul
xchg
or
xchg
ficoms
mov
xchg
idivb
inc
fistl
stos
mov
xor
add
dec
push
mov
xor
sbb
dec
cmc
and
mov
jno
xlat
jns
cmp
xor
fwait
aad
inc
jns
stc
mov
push
bswap
push
repnz
inc
mov
repz
push
std
jns
inc
cltd
push
push
ja
jecxz
push
je
imul
inc
pop
ljmp
cs
mov
dec
or
ljmp
ljmp
in
imul
insl
fcomip
jecxz
out
adc
xchg
jge
add
dec
jg
dec
stc
int
push
les
add
pop
cmp
xchg
repnz
dec
and
and
je
out
and
movsl
push
sbb
mov
fs
out
sbb
add
pop
mov
inc
push
aad
adc
cld
jl
push
jbe
popa
xchg
or
mov
mov
rcrb
mov
sub
imul
mov
inc
out
mov
scas
dec
repz
mov
pop
dec
xchg
xchg
lcall
dec
inc
ja
jb
dec
xchg
cmp
scas
gs
insb
rolb
pop
xchg
push
sbb
xchg
insb
add
push
mov
repz
lds
jp
ret
popa
and
jbe
pop
pop
sbb
pop
test
rcr
mov
mov
lock
push
inc
mov
ret
stc
decb
ja
loop
in
rorl
sub
fidivrl
xchg
std
inc
in
lods
cwtl
add
and
ret
subb
pop
push
cmp
cwtl
jae
adc
js
xor
ljmp
hlt
in
cmp
push
mov
mov
imul
adc
and
adc
sbb
out
pop
fidivs
inc
call
push
dec
and
xor
addr16
sub
hlt
in
add
fs
and
outsb
xchg
xchg
fs
outsb
mov
mov
push
jle
hlt
cs
in
mov
ds
insb
and
inc
aas
push
imul
shl
sbb
or
inc
sbb
sahf
dec
mov
in
cmp
or
aaa
cmp
mov
lock
leave
fimull
pop
adc
sub
push
fxch
fdivl
int3
sub
and
daa
dec
cmp
jb
inc
push
push
push
rolb
mov
int3
shrb
mov
ret
xor
rolb
roll
repnz
sub
cmp
mov
inc
daa
pushl
repnz
ja
pop
mov
addl
xchg
movsl
inc
shlb
mov
pop
adc
cmpsl
rclb
jl
pop
jo
dec
fldl
add
and
xchg
xchg
push
rcll
pop
jo
lock
mov
push
ss
push
mov
arpl
xor
bound
js
fisttpl
sbb
lcall
mov
popa
imul
jg
mov
mov
pop
fildll
xor
fbld
push
mov
std
dec
jbe
ficoml
ljmp
out
into
xor
bound
das
push
lret
xchg
pop
in
loop
cwtl
outsl
int3
or
lahf
push
add
lret
push
jg
or
mov
ss
or
leave
add
testl
je
shlb
sahf
mov
out
std
cmp
push
or
icebp
sbb
loop
iret
arpl
outsl
in
push
push
in
xchg
daa
pop
xchg
mov
icebp
pop
jae
lret
mov
ja
loop
inc
lret
jb
or
mov
xchg
inc
pop
and
icebp
in
dec
pop
fcmovb
and
cld
push
push
jb
jo
inc
push
mov
outsl
das
idivl
push
lret
sub
mov
pop
mov
andl
mov
fcmovnb
fs
dec
and
or
cmpb
fstpt
xor
ja
das
je
xor
adc
dec
jl
sub
mov
push
fwait
out
fwait
shrb
faddl
sbb
hlt
lret
popa
jmp
stos
sarb
je
fs
arpl
lea
dec
in
lds
jnp
aad
enter
xor
dec
push
ret
xchg
sahf
cld
fistl
add
mov
mov
jl
xchg
outsl
movsb
pop
sar
mov
mov
xchg
sti
xchg
mov
sbb
popl
std
insl
mov
jb
aad
stc
imul
push
jg
lahf
jo
pusha
jecxz,pt
fldcw
lds
xchg
loopne
jne
negl
add
adc
gs
inc
push
sub
pop
or
call
sbb
lret
jo
mov
mov
dec
loope
lret
mov
cmp
arpl
sbb
jbe
fldl
mov
and
jge
outsb
adc
int3
mov
out
mul
mov
rclb
jbe
cwtl
sarl
aas
sbb
negl
add
int3
lret
fwait
out
jp
push
rcr
ja
dec
gs
push
cmc
out
jns
aam
mov
adc
fadds
cli
cmp
insl
jecxz
mov
mov
cmpsl
pop
push
stos
dec
cmp
pop
mov
mov
dec
sbb
sub
push
xor
lock
push
test
jp
roll
lea
daa
xor
insl
pop
dec
negl
jo
inc
mov
pop
sti
push
xchg
xchg
cltd
sub
nop
or
outsb
sarb
sub
push
test
out
mov
mov
insl
sub
fdivr
cmp
hlt
loopne
fsubrl
aam
and
fsubrl
mov
adc
dec
pop
and
sahf
xlat
out
xchg
test
sbb
repnz
lods
out
bnd
jo
jno
pop
fimull
aas
fmuls
mov
in
xchg
fwait
and
xchg
cmp
mov
jns
cwtl
mov
test
cmp
push
cmp
aam
xor
lret
adc
out
icebp
sbb
fwait
shrb
xor
push
test
sbb
aad
shl
push
jmp
daa
iret
pop
pushf
push
add
add
loope
xchg
filds
jnp
aaa
adc
mov
scas
push
inc
push
inc
sti
orl
xchg
sub
mov
enter
jns,pt
jno
shrb
add
addr16
adc
testl
sub
push
cmp
mov
xor
jmp
sarb
je
xor
stos
or
jbe
dec
or
test
xor
sub
add
jb
aad
pushf
mov
and
and
clc
inc
in
xchg
or
bswap
bound
cmpsl
lods
inc
jle
push
and
pop
out
and
incl
jae
in
mov
push
adc
sbb
pop
fs
cli
sub
in
movsb
addl
test
ds
push
ds
fsubrl
pop
les
sbb
popl
or
test
push
cmp
lahf
xor
mov
in
in
out
inc
pop
fwait
xchg
pop
lods
push
loop
pop
shll
or
sub
mov
inc
cmpsb
aas
mov
fs
inc
stos
xor
xor
popa
xchg
xchg
es
adc
add
ret
pop
dec
cmp
das
xchg
jle
inc
shlb
aam
inc
outsl
push
pop
or
outsl
inc
gs
cwtl
xor
jge
mov
fidivrl
icebp
stos
dec
mov
ds
adc
outsb
movb
inc
insb
mov
lock
dec
xchg
add
insb
shll
shlb
in
test
push
push
cmp
jnp
insl
jge
xor
mov
jo
add
push
or
test
adc
mov
repnz
lods
xchg
inc
stc
outsb
sub
and
stos
fistpll
out
loopne
aas
or
add
loopne
scas
dec
mov
xchg
das
push
sub
pop
jge
dec
xchg
xchg
push
sbb
psubsw
xchg
sbb
and
sbb
rcrb
pushf
addr16
daa
inc
xchg
jmp
mov
cwtl
lods
sbb
push
stc
sbbl
loopne
push
push
add
inc
push
jl
and
and
pop
mov
mov
lahf
xchg
mov
mov
mov
insl
test
repz
cmp
mov
xchg
cltd
xchg
lret
or
add
jp
add
add
add
in
sbbl
test
xchg
imul
pop
and
dec
push
pop
dec
jns
addl
aad
sbb
and
mov
sar
repnz
bound
fidivrl
inc
jnp
push
pop
shrb
aam
lock
add
cmp
dec
ljmp
pop
out
stc
sbb
pop
aaa
pop
ja
add
mov
insb
inc
popf
fcoms
jge
push
bound
loop
clc
sbb
mov
shlb
xor
aaa
lods
pop
das
data16
jmp
aam
ret
dec
push
sub
jbe
dec
cmp
dec
mov
pop
int
rcl
adcl
xchg
movsl
cmpb
sbb
int
cmp
adc
pop
lods
push
push
mov
or
sarb
aad
jg
lret
inc
mov
mov
cmp
jnp
lret
fsubs
jne
test
sbb
and
add
addb
inc
xor
in
mov
xlat
push
pop
inc
pop
pusha
insl
out
pop
insl
lahf
pop
repnz
xor
lahf
imul
lahf
and
dec
sub
and
cmpsb
loop
jnp
sti
dec
mov
aaa
mov
mov
and
pop
sub
lret
push
fs
xchg
rep
rcr
cwtl
push
adc
nop
or
sbb
lcall
lea
cwtl
inc
sub
mov
pop
pushf
mov
push
push
in
scas
dec
and
mov
pop
inc
inc
mov
in
addr16
stos
das
pop
mov
or
cmp
dec
cmp
jmp
pop
adc
iret
cli
push
add
sub
mov
cmc
xchg
dec
cmp
mov
jb
repnz
not
fidivs
ret
push
sub
sbb
subb
stc
or
sub
sbb
mov
dec
inc
xchg
cwtl
sub
mov
fidivs
push
dec
inc
loop
sub
xor
jbe
gs
call
pop
loope
popa
dec
or
mov
movl
mov
enter
je
push
or
pop
fsqrt
xor
clc
in
jb
cmp
test
insl
inc
int3
lret
push
in
sbb
jns
xor
mov
insb
jp
jnp
incb
jmp
repz
sub
jmp
movsl
push
mov
mov
lock
inc
aaa
xchg
mov
add
and
imul
dec
add
lahf
push
bsr
and
cmp
mov
lea
mov
clc
jecxz
mull
add
dec
mov
pop
cmp
fstps
fisttpll
jle
cmpsl
call
mov
fwait
jne
dec
das
inc
xchg
rcrb
fisubs
or
std
scas
cmp
lock
mov
pop
addr16
push
fistpll
ljmp
xchg
xchg
sub
jg
mov
in
sbb
mov
mov
sbb
xchg
imul
jns
adc
js
jp
aas
into
cmp
mov
sub
dec
dec
push
mov
data16
sub
sbb
pop
dec
pop
cmpsl
mov
imul
frstpm(287
ja
mov
mov
int
mov
test
orl
dec
insl
lcall
pop
adc
sbb
or
inc
iret
xlat
aam
arpl
test
in
and
rol
out
dec
outsb
insb
push
mov
mov
pop
ret
shlb
jne
pop
push
sbb
ds
sub
gs
jp
xor
and
push
loope
push
cli
dec
cmp
pop
scas
sarb
sub
mov
push
rorl
jle
or
aam
dec
mov
inc
cmp
ds
aad
divl
fidivs
sub
test
lock
call
push
sbb
mov
jbe
aas
addr16
push
pop
and
mov
loope
sub
ret
sahf
repz
push
mov
ljmp
jge
xlat
xchg
scas
mov
popf
pop
hlt
ds
xchg
mov
lret
out
or
xchg
test
jns
cmp
add
ljmp
xor
adc
stos
icebp
fdivl
inc
popa
mov
repnz
aad
xchg
or
dec
and
shlb
xchg
cwtl
mov
push
sti
movsb
adc
lret
mov
in
test
lds
mov
cmpsl
test
insl
mov
lcall
dec
mov
stos
pop
outsl
lret
push
mov
or
pop
pushf
jns
shr
call
push
andl
add
push
dec
mov
ret
jbe
in
fidivrs
test
shll
sbb
or
int
inc
sbb
lret
mov
sbb
jl
push
xchg
pop
xor
push
rorl
mov
dec
idivb
push
imul
pop
xor
rorl
xchg
pop
xlat
jno
lock
js
xchg
pop
aas
mov
or
cmp
push
sbb
fcoms
jb
dec
mov
test
iret
repz
imul
shrl
in
add
cmpsl
sbb
xor
lock
icebp
and
leave
sub
data16
adc
imul
jne
push
xor
mov
or
mov
aaa
cmc
push
jg
cmpsb
xchg
push
sbb
xchg
push
push
or
enter
add
mov
imul
sub
jmp
negb
out
idivl
push
jno
call
push
in
fstl
sub
mov
lret
inc
clc
xchg
mov
and
std
xor
or
xor
jecxz
cmp
jle
mov
jg
xchg
cmpb
pop
clc
sbb
sub
insb
jno
pusha
jno
loopne
xchg
sub
mov
into
pop
sbb
shrl
dec
mov
sbb
mov
add
loop
adc
adc
bound
sub
or
dec
add
adc
in
push
xlat
inc
push
mov
and
aaa
dec
insl
jns
ja
push
je
out
out
cli
push
push
ret
notb
test
mov
cmp
mov
mov
aam
mov
fisttpl
mov
sbb
ret
cltd
sbb
push
repnz
fstl
mov
xor
decb
pop
movsl
push
test
push
xor
jne
push
aad
cld
nop
dec
imul
sar
ret
mov
test
insb
sbb
iret
test
mov
mov
adc
sbb
loopne
cli
mov
scas
push
xor
pand
pop
fsubrp
sub
and
scas
int
out
movsb
lock
mov
mov
xor
enter
scas
imul
scas
mov
xor
ss
sub
loop
cmp
jmp
and
je
or
adc
pusha
mov
cli
or
mov
pop
cmc
mov
divl
test
mov
xchg
fwait
jno
fldl
mov
mov
cmp
or
fistpll
mov
sub
xchg
mov
push
sub
daa
sbb
jbe
test
ljmp
hlt
lea
pop
out
paddsw
scas
stos
inc
pop
test
jecxz
jb
inc
in
sbb
dec
pop
ficoms
push
sub
roll
outsb
mov
adc
movsl
xchg
addr16
call
aaa
xchg
inc
aam
cmpsb
xor
in
out
pop
inc
lret
mov
inc
sub
cmp
leave
inc
dec
loopne
in
int
pop
and
rcl
sahf
rcrb
cwtl
shr
pop
or
mov
daa
lods
sub
pop
es
xchg
mov
jecxz
push
shll
lds
enter
mull
pop
cmp
call
inc
push
and
sub
sub
mov
sub
cmp
cltd
inc
sub
data16
cmp
mov
xchg
pop
adc
hlt
cwtl
sbb
sub
js
nop
xlat
in
or
mov
xchg
enter
popa
aaa
dec
fs
scas
cmpsb
hlt
inc
enter
sahf
cmp
xor
data16
or
int
jg
push
lds
xchg
mov
cld
ja
push
jno
lods
fldl
xchg
mov
orl
sbb
loop
hlt
lahf
and
jl
sub
mov
out
mov
pop
mov
fdivrl
aam
into
outsl
pop
sbb
lret
stc
hlt
aaa
dec
sbb
pop
popa
sbb
mov
pop
jae
mov
mov
outsl
push
ja
add
and
jne
das
shll
and
mov
popa
mov
xchg
pop
shrd
out
ja
stos
sbb
cmp
cli
call
xchg
fsubrs
jecxz
sbb
jl
jne
xor
jns
stos
sub
sahf
xchg
xchg
mov
dec
stos
mov
pop
fmuls
cmp
lods
bound
xchg
adc
jb
mov
xor
sahf
sbb
stc
xchg
inc
ljmp
sbb
sbb
jno
jb
add
jbe
jp
cwtl
pop
in
faddl
jnp
jmp
and
and
mov
repnz
jp
and
sti
inc
jle
cltd
cmp
sahf
rclb
imul
cmp
aas
stos
add
sub
std
lcall
ljmp
ss
jg
sahf
push
lds
or
outsb
shll
sub
rcll
jg
sarl
or
xchg
leave
push
jecxz
out
es
ljmp
ret
ja
iret
enter
sub
push
mov
cmp
mov
mov
arpl
out
leave
dec
stos
xlat
loopne
jl
xchg
loop
dec
repnz
pushf
mov
aam
sub
loope
mov
std
mov
xchg
es
lret
xchg
ds
fmulp
out
jno
leave
ret
jnp
cld
cmp
insl
mov
cmp
outsl
ret
sbb
cmc
in
dec
cld
fisttpll
mov
jbe
push
emms
js
xchg
lahf
les
outsl
mov
mov
jmp
clc
jle
xor
xor
pusha
sub
outsl
arpl
and
sbb
rolb
daa
add
mov
cmpb
inc
sti
mov
stc
jmp
mov
outsl
insl
cmp
inc
dec
sub
cmp
jecxz
and
and
fldenv
out
dec
int
test
sbb
loop
mov
xor
pop
movsl
sub
add
subl
in
fxch
xor
pop
lods
movsb
jnp
test
mov
and
sub
xlat
inc
cmpsb
add
jo
dec
lahf
arpl
lods
fwait
aaa
inc
inc
adc
xchg
std
sub
cmp
popa
test
into
xor
leave
loop
movsl
mov
sti
imul
sbb
fistpl
into
fstps
jo
xor
mov
mov
xchg
incl
xlat
pushf
mov
in
inc
pop
push
adc
loopne
lret
loope
aad
mov
push
ds
out
fldenv
mov
mov
mov
cmp
popa
cmp
notb
repz
xor
aad
pop
xchg
xchg
mov
and
loope
div
in
loope
mov
dec
dec
jb
mov
ficompl
adc
ds
inc
fwait
test
adc
lea
fiaddl
pop
lods
push
mov
add
push
adc
push
pop
xor
xchg
ds
xorb
pop
int
clc
mov
pop
push
mov
push
orl
xchg
sub
or
data16
inc
mov
mov
addr16
scas
or
scas
imul
xorl
jbe
mov
lcall
out
push
push
mov
mov
orl
pop
fdivp
xor
push
sub
pop
mov
negl
out
cmp
outsb
in
inc
jo
inc
loope
mov
cwtl
cmp
pusha
add
adc
ja,pn
shll
stos
jle
mov
test
cmp
imul
or
out
xchg
sub
cmpsb
fdivrl
add
insl
sub
cmp
cld
push
cmp
lret
xchg
ljmp
pushf
ds
xor
jmp
pop
xor
sub
js
in
rorl
daa
psubd
hlt
inc
icebp
mov
jb
dec
mov
fcomp
hlt
mov
xchg
or
adc
cmp
aad
dec
test
xor
lahf
aaa
cld
mov
lock
sti
fs
lcall
stos
fcomp
jb
or
stos
pop
cmp
lret
inc
xchg
mov
mov
mov
loope
popa
ds
lahf
out
push
add
mov
mov
adc
xorl
jl
notb
in
out
inc
rol
adc
mov
mov
shrl
cltd
xchg
jns
daa
inc
fidivl
sub
ss
sbb
lods
adc
or
cmc
mov
clc
insl
jg
int
fimull
and
pushf
cmpsl
pop
adc
adc
jns
xorl
push
xchg
insl
mov
fs
ja
pop
push
shrb
addl
sub
xchg
push
pop
xchg
aad
push
sar
mov
push
loopne
sbb
mov
and
mov
mov
cmp
jg
fimuls
ss
int3
inc
cli
outsb
pop
jge,pt
rorl
dec
xchg
mov
je
scas
lods
fs
mov
push
and
xchg
cmp
jnp
mov
dec
mov
xchg
sub
shll
mov
and
dec
lea
movsb
imul
cmpsl
xchg
das
push
imul
adc
cmp
hlt
xor
adc
inc
aas
cmp
mov
test
jnp
sub
push
jmp
scas
mov
xchg
sbb
mov
pop
rorl
rcr
mov
or
arpl
imul
mov
mov
andl
sti
js
imul
jp
dec
imulb
dec
imul
fmuls
shll
int3
jg
add
inc
jns
mov
outsl
sub
mov
pop
fldt
fisubrs
test
mov
add
scas
jp
add
lret
and
fcmovbe
mov
loope
mov
cmpsb
out
clc
add
shll
int
cs
negb
xchg
sbb
dec
pop
les
mov
fistl
mov
inc
mov
loop
sbb
sarl
les
or
dec
int3
lea
jge
adc
lods
lods
inc
mov
repz
lds
pop
or
sbbb
add
mov
push
lods
add
fcoms
add
and
push
cld
cs
addr16
orl
les
pop
jecxz
mull
in
jg
loope
cmp
mov
pop
mov
add
out
pop
and
cmp
std
sbb
lret
ja
aam
push
sub
repz
xchg
fdivrl
mov
xor
sti
xchg
mov
or
and
int
pop
or
hlt
mov
add
lret
mov
lcall
movsb
push
or
fs
jecxz
cmpsl
out
mov
push
sbb
lret
xchg
dec
add
scas
pushf
aam
adc
fwait
sub
xorl
jne
fidivrl
sbb
rclb
sbb
fwait
xchg
ljmp
es
aad
mov
ficomps
inc
cmp
jg
imul
fldcw
clc
add
jno
sti
rclb
shll
das
cmp
dec
dec
add
and
jno
iret
mov
mov
jbe
cmpsl
movsl
notl
aad
push
or
sahf
arpl
les
dec
ljmp
imul
jg
push
add
pop
jle
jl
into
or
sti
or
jnp
jbe
or
mov
pop
and
xchg
outsl
xor
fistpl
mov
arpl
cmpsb
fidivrs
shlb
sbb
cltd
clc
or
inc
jno
lcall
fwait
dec
adc
arpl
pushf
pop
pop
adc
xchg
dec
sub
mov
add
pop
mov
mov
adc
cmp
mov
repz
xchg
mov
mov
pop
fmuls
jecxz
xchg
or
xchg
stos
mov
mov
fcmove
pusha
bound
cs
push
ret
push
jge
jle
enter
rcll
push
cmp
arpl
popf
lahf
push
mov
sahf
lcall
dec
notl
cmp
lock
addr16
aas
adc
sbb
sar
cld
movl
std
scas
push
push
push
xor
lea
test
sbb
idivb
xchg
jb
lds
js
frstor
sub
pop
enter
cmp
adc
and
das
sti
cs
mov
sub
rol
pop
cmp
xorl
inc
pop
pop
repz
scas
adc
movsl
into
xchg
movsb
xchg
mov
mov
mov
shrl
ja
sbb
jns
lret
mov
add
push
movsb
js
sahf
push
dec
sbb
mov
test
aad
adc
xchg
loopne
dec
stos
dec
cmc
adc
cs
out
inc
xchg
sbb
pop
or
xchg
arpl
and
dec
in
outsb
add
cmpsb
std
jmp
fwait
notb
aaa
pop
push
and
and
dec
dec
out
xchg
jno
mov
movsb
movsb
lret
out
fimull
into
in
mov
movl
push
or
adc
std
ret
xchg
push
pushf
aad
outsb
or
daa
add
inc
inc
gs
pop
and
adcb
sub
cmp
iret
xor
bound
insb
pop
dec
pushf
xor
ss
lea
pop
mov
cwtl
cld
push
push
cmp
inc
sarb
stos
in
add
mov
icebp
xor
popf
cmp
mov
outsl
js
daa
adc
pushf
arpl
mov
inc
sarb
add
add
test
lret
or
or
sub
lret
stos
sbb
pushl
xchg
mov
sbb
loope
scas
mov
mov
sti
mov
test
mov
lea
xorl
inc
cmp
mov
push
push
je
stc
sub
pop
popa
push
mov
std
cmp
cwtl
gs
hlt
scas
cmc
jg
push
test
cmp
push
sub
or
adc
scas
mov
dec
mov
nop
js
dec
push
cmpl
pop
push
data16
cmp
adc
loop
movl
fcoms
push
negl
insl
scas
mov
adc
mov
dec
sub
fsubr
xchg
nop
sub
lds
add
xchg
test
xchg
stos
inc
push
push
hlt
jge
test
push
enter
test
add
push
sahf
jl
xor
mov
rolb
movsb
sahf
jb
sbb
cmpl
push
adc
jl
adcb
add
movsl
or
cltd
inc
sbb
push
stos
mov
in
out
pop
inc
sarb
mov
pop
aam
inc
inc
scas
mov
and
sub
mov
mov
out
out
test
jl
insb
dec
mov
push
mov
fstps
fsubrp
pop
xor
inc
push
repz
or
push
inc
mov
or
inc
imul
out
jno
jne
inc
cs
insl
xor
fisubrs
cmc
xor
xor
mov
outsl
pop
dec
or
fsub
push
pop
gs
idivl
jp
push
data16
inc
sbb
cmp
into
stos
movsl
add
icebp
imul
dec
jge
sub
ror
repnz
enter
negb
mov
or
scas
fs
mov
scas
push
jns
push
xor
inc
sub
or
fsubr
outsb
mov
push
add
cmpsl
sbb
dec
popa
jo
or
sahf
cmp
ds
sbb
pop
mov
pop
insb
ret
mov
sub
sub
mov
sbb
mov
sbb
adc
mov
ret
fstpt
fadd
mov
jle
frstor
sarl
test
xlat
cli
out
inc
dec
add
mov
mov
aas
lds
inc
sbb
inc
mov
daa
mov
cmp
add
jo
imulb
mov
mov
fwait
movsl
jae
cmp
cmp
mov
dec
cmp
leave
jbe
cmc
into
pusha
jp
nop
clc
push
pushf
int3
jno
scas
xor
adc
xchg
mov
cmp
cld
popf
test
pop
xchg
jno
icebp
jmp
jp
dec
or
xor
lret
inc
enter
adc
jb
mov
push
adc
inc
lods
ret
cli
add
xchg
movsl
inc
pop
xchg
mov
lods
dec
movsb
push
shlb
add
xchg
dec
clc
adc
iret
insl
icebp
jne
fwait
lret
insl
idivb
bound
movb
aam
lahf
xor
mov
ds
lret
and
stos
xor
lock
repz
and
sbb
xor
sub
clc
fbstp
sbb
mov
out
fistpl
in
mov
push
stos
mov
loop
popf
mov
add
sbb
roll
xchg
js,pn
fdivrl
loop
sbb
scas
lret
fcompl
pop
jb
in
repz
jno
cmp
jmp
orb
adc
mov
fmuls
xor
sub
addr16
sbb
jmp
sbb
mov
adc
mov
mov
mov
insb
dec
imul
scas
xorl
inc
test
add
dec
scas
and
jns
fistl
int
push
push
cmp
push
iret
sub
popa
or
testl
loope
sub
outsl
cmpl
out
in
jmp
shrb
xchg
imull
jle
popa
or
cmp
pusha
loope
sub
jg
add
popa
ficoml
cmp
dec
jno
dec
xchg
loopne
pop
dec
xor
fnstenv
push
sub
repz
sahf
ds
push
scas
add
cmp
mov
add
push
sarb
bound
test
enter
mov
or
sbb
shrl
jle
lock
dec
adc
adc
xchg
sub
insb
dec
imulb
daa
std
add
cmp
adc
pop
js
jmp
nop
inc
sbb
sti
adc
adc
fnclex
les
cmpsl
push
icebp
inc
xchg
leave
int3
adc
loope
popf
pop
lock
into
data16
std
xchg
xchg
xchg
sbb
or
jno
mov
aaa
inc
jmp
inc
out
mov
cmp
sub
aam
fisttpl
inc
and
mov
mov
adc
mov
dec
negb
lcall
sbb
xor
push
push
popa
jg
addr16
jle
aaa
mov
lcall
inc
in
and
jecxz
push
cmp
dec
sub
inc
push
sbb
inc
lahf
mov
subl
leave
push
xchg
subb
jbe
pop
or
add
add
pop
sbb
xor
xchg
adc
fwait
rcrl
lods
fs
out
dec
push
inc
xchg
das
pop
jp
pop
cld
mov
data16
aas
aaa
sahf
pop
inc
pop
lret
sahf
mov
sub
out
jge
aas
mov
repz
adc
outsb
cmpsb
ljmp
or
andl
add
sti
inc
lods
sub
bound
mov
dec
repz
cli
mov
pop
outsl
or
sub
xchg
mov
clc
scas
xchg
push
insb
mov
hlt
lcall
add
push
push
xorl
pusha
fimuls
sbb
pop
push
into
lods
icebp
outsb
add
gs
out
ret
jmp
jnp
pop
incl
insl
push
arpl
pop
test
xorb
outsb
jge
dec
jnp
cld
loopne
cmpsb
cmp
or
sti
daa
jnp
cmc
bound
add
dec
daa
add
dec
bound
pusha
lea
pop
adc
or
insl
leave
roll
shl
pusha
adc
icebp
lret
jo
je
cld
aad
xor
sbb
jmp
jp
and
daa
cltd
hlt
add
mov
leave
pop
aad
stc
ss
mov
sbb
sub
lds
mov
loop
mov
xchg
jno
and
cmp
xchg
add
idivl
jecxz
pop
stc
addr16
push
sub
push
bound
pushf
lds
pop
fsub
and
sahf
jbe
push
lock
pop
sbb
ret
xor
popa
xor
rcrl
and
cld
shrb
arpl
mov
pop
out
xor
xchg
mov
inc
jae
sbb
insb
repnz
stc
inc
in
fisttpll
sbb
xor
inc
test
dec
shl
into
jbe
add
aas
jge
sbb
lods
xchg
aam
cmp
movsb
xor
sub
jge
mov
add
scas
arpl
add
stos
or
pop
push
sbb
pop
lcall
test
aas
sbb
mov
int
push
ret
xor
add
inc
xlat
or
sti
scas
pop
aaa
xchg
jnp
mov
in
sbb
imul
jecxz
mov
jb
bound
sub
pop
sbbl
movsl
mov
mov
lea
stos
enter
adc
lcall
inc
dec
lods
adc
mov
out
dec
cmp
xchg
adc
insl
mov
gs
mov
aam
or
jl
or
push
fisubrl
scas
mov
imul
or
or
add
mov
mov
mov
stos
in
add
and
je
push
jns
push
movsl
jne
call
mov
adc
arpl
xor
push
dec
arpl
and
in
or
pop
jmp
or
mov
fsubrs
add
aad
sbb
push
shl
loop
mov
call
jns
dec
push
pop
jns
pop
divl
sbb
popf
aam
shlb
lods
popa
loop
test
pusha
or
sarl
lock
test
mov
js
dec
push
xchg
xchg
mov
call
and
push
sub
push
xchg
into
addl
pop
dec
adc
sbb
cwtl
and
addb
pushf
out
insl
aam
or
out
inc
in
lcall
cmp
addb
ret
xchg
mov
cmp
cs
cs
adc
pop
jne
inc
rclb
aad
mov
mov
sahf
js
loope
in
adc
dec
dec
jbe
fisubs
add
push
ds
jnp
cmp
ds
xor
mov
mov
jne
out
mov
xlat
rcll
mov
xchg
mov
xchg
out
sub
or
in
in
adc
and
std
xchg
add
sub
ret
loope
hlt
ret
cmp
and
sbb
mov
xchg
scas
push
cld
subb
lds
incb
inc
sbb
lock
pop
ret
cwtl
bound
sub
adc
cmp
fistps
lds
cmpsl
fists
dec
cmova
sbb
jns
sub
stos
leave
xorl
xchg
mov
xchg
xchg
stos
jg
adc
xchg
stos
dec
pop
fisttps
xchg
pop
mov
sbb
out
jmp
adc
shrl
and
mov
cmp
addl
or
out
and
or
xchg
mov
lea
xchg
jbe
insl
pop
adc
add
pop
add
push
jne
xor
cmpb
repz
pop
xchg
xor
and
pop
inc
or
stos
dec
mov
and
imul
mov
rclb
cmp
mov
call
or
jmp
ror
cmp
cmpb
mov
add
sbb
mov
in
push
jns
xlat
adc
adc
ret
mov
stos
cmp
popf
push
enter
addb
js
push
lahf
repz
fstps
add
mov
push
adc
fbld
sub
popf
lods
cmp
xchg
jno
pop
and
sbb
repnz
xlat
xor
test
insl
lret
outsl
cmp
pusha
faddl
xchg
sub
sub
sub
fdivs
imul
sub
xchg
fsub
xchg
fdivrs
int3
loop
xchg
arpl
pop
xchg
or
cmpsl
sub
mov
daa
mov
fistpll
cwtl
mov
adc
inc
mov
leave
jb
jae
pop
in
sub
repz
jno
lods
pop
and
dec
leave
cmp
rcr
in
cltd
and
jecxz
cmp
pop
fstpl
sub
int3
dec
jae
js
cli
neg
das
cmpsl
lods
sub
mov
jbe
fwait
add
fsincos
and
das
mov
js
or
push
outsb
repnz
lds
in
iret
push
add
pop
fwait
jae
xchg
mov
and
shll
sub
xchg
push
imul
mov
inc
cmpsl
pusha
or
xchg
lret
sub
push
aas
iret
outsb
ds
scas
inc
pop
stos
jle
lret
cmp
pop
in
int3
adc
pop
out
push
iret
pop
enter
mov
in
loope
sub
mov
add
xchg
wrmsr
push
mov
cwtl
stc
dec
lahf
outsb
cli
mov
fwait
in
out
jb,pn
and
rcrl
or
cmp
and
int
arpl
outsl
lods
je
bound
pop
test
test
xchg
and
push
sbb
inc
and
ret
sbb
and
inc
jle
and
scas
jae
jnp
cli
mov
jecxz
adc
ret
enter
je
xor
dec
ja
pop
pushf
add
jge
inc
ficoms
lods
cmpl
nopl
and
pop
cmpsb
push
push
cmp
mov
inc
jecxz
aaa
aas
test
lcall
or
inc
in
aaa
xor
cmpsl
or
xchg
pop
add
aas
out
fs
xchg
adc
add
jns
sub
setne
js
pop
orl
push
into
scas
dec
fstl
fisttpll
inc
cmovle
scas
jns
jecxz
push
arpl
inc
push
ss
aaa
clc
jg
and
sbb
jne
mov
jl
xlat
xlat
or
cltd
mov
xchg
pop
nop
add
inc
fnsave
mov
push
pusha
lret
push
and
mul
in
mov
fimull
mov
movsl
pop
sti
add
and
lret
jp
lret
inc
dec
lret
mov
rorl
fwait
push
sbb
sbb
pop
movsb
cmp
shrb
movl
outsl
out
rcr
mov
bound
xlat
pop
sbb
adc
lock
jp
sub
enter
jnp
mov
adc
psrlw
mov
shlb
repz
stc
scas
xchg
loop
neg
fisubl
sub
jns
push
and
jne
shrb
js
jnp
lock
out
xchg
orb
orl
or
inc
insl
pop
and
mov
sbb
movsb
imul
mov
loope
testl
xor
mov
push
and
icebp
xchg
cli
imul
dec
push
in
shrl
je
or
sub
in
loope
mov
adc
das
fwait
mov
iret
pusha
push
push
mov
xchg
out
mov
xor
aad
pop
or
xor
push
mov
cmc
add
imul
fcomi
fcmove
xchg
lahf
scas
inc
mov
inc
fisubrs
outsl
mov
sub
into
push
das
notl
mov
in
cmpsb
sbb
ss
sbb
sbb
lods
pop
sbb
mov
fsubr
pop
movsl
and
outsl
rcrl
andl
xchg
out
data16
mov
adc
lods
jo
push
leave
push
pop
inc
jae
pop
loope
cmpsl
xor
rcrl
mov
mov
fldcw
xchg
push
int
sbb
fldenv
jbe
xor
in
cmpsb
lret
xor
or
and
sub
insl
inc
pusha
mov
shll
pop
mov
fcom
xchg
sbb
jae
cmc
pop
rcr
add
and
push
jne
cmp
xor
out
enter
les
mov
mov
mov
int
mov
mov
xor
in
mov
arpl
lock
mov
in
pop
dec
sbbl
pop
and
out
stos
cli
inc
inc
sbb
cwtl
push
or
dec
cmp
scas
cmpsb
mov
xchg
insb
aas
adc
push
push
jnp
clc
shll
or
in
sbb
adc
aaa
cmp
pop
or
repz
enter
pop
je
gs
mov
in
aam
pushf
out
dec
inc
aas
pop
dec
cmp
adc
mov
mov
pop
mov
jo
jnp
sbb
pop
dec
dec
sbb
pusha
push
popf
xchg
push
mov
gs
rol
inc
loopne
xchg
push
xlat
adc
mov
inc
sbb
aam
cmp
pushl
mull
cltd
jp
lcall
mov
sub
js
adcl
es
jg
inc
cltd
mull
mov
test
out
fs
pop
ret
xlat
sub
and
mov
push
sbb
jmp
fcomps
and
sbb
and
arpl
call
mov
sahf
out
dec
cld
push
pushf
out
push
xlat
cmp
xchg
lods
fs
mov
xchg
ficoms
shr
outsl
mov
insl
mov
scas
aad
and
pop
sbb
or
or
sahf
aaa
cmp
jl
mov
adc
notb
push
loope
jecxz
lcall
sbbl
mov
adc
mov
cli
inc
mov
test
sbb
ljmp
enter
dec
loopne
shr
mov
dec
jns
sub
push
push
adc
push
sub
mov
andb
in
sub
cmp
je
lock
loop
jl
add
xor
inc
dec
arpl
cwtl
pop
jo
loop
test
inc
sub
das
lds
fisubrl
mov
insl
xor
fcomp
pop
out
or
in
lods
adc
sahf
xchg
xchg
mov
aam
fnstenv
push
and
shl
mov
jns
mov
xchg
imul
or
inc
hlt
sti
mov
enter
gs
pop
xchg
and
push
pop
push
fwait
inc
mov
sub
ror
int
add
les
fbstp
cmovae
lahf
es
pop
adc
push
push
cmp
push
pop
inc
mov
sub
mov
daa
lret
xchg
bswap
in
frstor
outsl
icebp
or
addr16
or
mov
cltd
es
mov
jp
xor
rcrb
fldt
pop
insb
popa
int
pusha
adc
mov
sti
popa
data16
mov
adc
mov
jecxz
adc
sub
les
cmpsb
adc
pop
sub
dec
xchg
xsavec
arpl
sbb
sbb
stos
pushf
rorb
cwtl
jp
xlat
cmp
test
jae
imul
cmp
ffree
movsb
pop
pop
icebp
pop
lea
shrl
mov
jbe
in
pop
and
out
out
int
popa
shll
push
mov
dec
fsub
fldcw
lock
ja
addr16
je
outsl
sub
es
dec
push
mov
sarl
cmc
cltd
iret
xchg
out
ljmp
loop
rorb
cmp
outsb
sti
ljmp
adc
xorl
in
push
xlat
xchg
add
movsb
cs
in
dec
and
xchg
loopne
mov
mov
sarl
or
rclb
cmp
mov
jl
mov
outsl
cmp
fsubr
dec
jno
xor
cmp
mov
add
xor
pushf
add
loop
lret
fsubs
scas
dec
ja
arpl
mov
sahf
in
repnz
inc
scas
loopne
outsb
jno
hlt
adc
and
push
xchg
or
xor
and
int
imul
inc
rcr
nop
fmuls
pop
les
mov
int3
and
data16
and
stc
mov
pop
sbb
daa
inc
insb
push
fstps
dec
out
push
test
dec
cbtw
inc
or
lock
fidivrs
mov
adcb
mulb
and
lret
sti
movsb
sub
jecxz
sbb
imul
push
aas
xchg
ret
mov
mov
gs
adc
loopne
lods
ljmp
mov
mov
or
jb
push
addr16
jo
popf
push
sbb
daa
sub
pusha
xchg
test
pop
testb
mov
xchg
mov
cmc
inc
jp
or
push
cld
push
xchg
mov
stos
mov
adc
test
lods
scas
jno
ja
lret
call
mov
test
call
ljmp
adc
jge
jmp
pop
jmp
inc
xor
gs
daa
cld
or
mov
mov
fxch
scas
push
fdiv
xchg
loope
sahf
sub
push
pop
lods
dec
sbb
jecxz
xchg
mov
push
int3
mov
dec
dec
sbb
dec
mov
lods
or
inc
ret
rol
bound
seto
jg
adc
addb
pop
das
dec
add
ret
push
insl
dec
shlb
mov
and
push
cli
dec
fwait
mov
lods
push
cli
out
push
sbb
xchg
es
jnp
test
add
sarl
fldl
mov
in
mov
aaa
xorl
mov
dec
lea
sub
jnp
cld
sub
rcr
clc
stc
ficoms
inc
outsl
aam
sahf
lods
add
jle
pop
sub
popf
movsb
or
lret
xchg
out
das
cwtl
fstl
loop
and
xchg
jg
inc
mov
negb
cmp
cmp
mov
mov
sbbl
adc
roll
jns
dec
loop
mov
cmp
fiaddl
fwait
mov
add
incl
push
push
cmp
cmp
inc
add
into
mov
push
mov
xchg
ficoml
movsb
ss
das
push
dec
movsb
in
jg
adcb
cmp
mov
fadds
mov
sbb
xorl
adc
lock
adc
and
cmpsb
and
mov
jge
sub
mov
aaa
xchg
push
jmp
mov
insl
sbb
sbb
adc
stos
daa
test
out
fwait
imul
fucom
or
xor
and
mov
push
cmpsl
stos
enter
adc
add
gs
ja
notl
data16
mov
xchg
mov
xor
xor
outsb
into
sbbb
cld
mov
mov
xchg
shrb
add
sub
insl
adcl
jge
mov
rolb
mov
xor
dec
sub
sbb
jo
loopne
lret
inc
mov
dec
mov
and
les
dec
xor
enter
cmp
test
jecxz
and
pop
rorl
cmp
add
test
data16
jp
mov
pop
cmpsl
or
pop
cmpsb
daa
frstor
lcall
inc
mov
cld
out
scas
outsb
pop
fs
mov
shr
insb
jmp
inc
mov
push
xchg
jae
stos
adc
mov
inc
in
jmp
pop
mov
mov
call
lods
stos
incb
sub
xchg
dec
jne
leave
out
jo
xchg
push
pop
mov
popf
rclb
int3
shr
jge
cmp
movsl
sub
sbb
dec
loopne
xor
sbb
rolb
mov
inc
xchg
adc
ret
cltd
mov
push
fwait
rolb
pop
aam
push
dec
jbe
icebp
test
sbb
xor
movsb
outsl
data16
mov
jge
xchg
cmovne
out
mov
pop
cmp
cmc
loop
in
int3
jbe
xlat
xchg
gs
mov
jb
or
pushf
pop
push
inc
addb
mov
lods
in
gs
cltd
pop
loopne
enter
andb
mov
mov
cmpsb
jo
jg
inc
ss
jp
bnd
in
std
xor
push
jo
pop
xchg
scas
xchg
cmp
iret
adc
lahf
pop
mov
dec
mov
and
aad
push
fidivs
sahf
cmp
push
test
jge
sub
fs
pop
mov
lock
jge
stos
aas
push
repz
inc
adc
xchg
push
fldcw
jo
inc
push
mov
out
push
mov
leave
adc
jmp
lea
jecxz
adcb
mov
rcll
fdivrs
cmp
stos
sub
popf
add
xchg
cltd
xor
jbe
test
loope
mov
xchg
mov
xor
int
bound
or
dec
push
stos
and
test
movsl
push
jecxz
mov
dec
jns
aaa
adc
xor
rorb
mov
aam
jo
pop
mov
leave
and
ljmp
push
sbb
cmp
stos
sub
xchg
and
arpl
and
and
shrb
adc
leave
pop
xor
push
orl
or
sbb
push
pop
int
or
popa
mov
and
add
shlb
inc
cmp
rcl
and
fs
and
sbb
mov
dec
sti
faddl
rol
pusha
call
pop
dec
push
in
lret
lds
fcoms
pop
rolb
adc
cmpsb
jle
shll
int3
testb
stos
cmpsl
pop
movsl
test
dec
xchg
jmp
mov
mov
enter
fs
pop
loope
adc
jmp
fwait
xchg
mov
mov
adc
clc
jl
ja
outsl
mov
add
lock
call
call
rolb
adc
xchg
insb
in
xchg
push
les
dec
int3
sub
xchg
repz
inc
call
pop
xor
mov
rclb
cmp
pop
sub
sub
dec
hlt
xchg
pop
pop
mov
subl
enter
rcl
mov
repz
jno
fnstcw
pushf
sbb
pop
nop
mov
into
xchg
and
sbbb
jns,pn
rclb
incb
push
push
sbb
inc
push
jns
cmp
cmp
cwtl
cs
lahf
sbb
out
inc
mov
bound
sti
sub
mov
ljmp
or
sub
scas
add
add
mov
mov
dec
dec
jae
sub
pop
jae
adc
lcall
mov
ret
iret
fcomip
mul
add
in
xchg
cmpsl
pop
out
out
xlat
aam
repnz
mov
loopne
add
adc
jmp
or
bound
dec
jg
sub
lods
push
or
mov
cld
pop
sarb
cld
scas
test
stos
xchg
push
dec
mov
mov
fwait
cmp
iret
or
xorl
movsl
mov
addr16
jo
pusha
int3
push
test
xor
fwait
cmpsl
inc
fwait
aas
mov
ret
mov
call
idiv
cmpsb
repz
inc
adc
or
nop
pushf
pop
or
xor
xor
cmp
fprem
mov
in
pop
sbb
gs
adc
data16
mov
aad
rorb
xor
stos
pusha
xchg
mov
xor
hlt
push
push
jle
or
push
leave
sar
and
hlt
dec
cld
push
aas
dec
idiv
test
loopne
sbb
jg
shll
das
pop
or
scas
mov
ss
jae
into
sub
pushf
aad
inc
js
jb
jmp
mov
fdivrs
or
mov
clc
pop
adc
push
out
push
mov
pop
test
cmc
mov
pop
jno
fwait
stc
in
xor
cli
jge
lret
inc
cmc
or
mov
adc
ja
and
lock
sub
dec
inc
pushf
or
lahf
std
pop
mov
lds
add
ja
popf
stc
mov
adc
repz
jle
cmc
ljmp
shrl
mov
enter
push
scas
insl
flds
addl
adc
or
fdivrl
mov
loope
orl
je
loop
adcl
mov
fisttps
cli
mov
jnp
insb
xor
outsb
mov
mov
stos
call
lock
fldt
pop
sbb
loopne
leave
daa
cmp
pop
and
mov
test
inc
xchg
adc
dec
fs
rep
in
in
push
mov
jge
nop
push
mov
or
adc
jne
mov
cwtl
shrl
enter
mov
cmp
or
fldcw
pop
fst
int
cwtl
sub
or
stc
in
into
dec
sub
xor
xor
jbe
cmc
loop
dec
mov
jmp
sub
mov
cs
pop
aas
pop
mov
lcall
mul
xor
jge
adc
lock
push
push
dec
jmp
mov
fistpll
bound
push
in
cmp
loope
adc
cmp
xchg
and
imul
dec
mov
xchg
xchg
fwait
rep
cmc
adc
sahf
mov
fisubs
lcall
jbe
pop
lods
pop
inc
mov
in
jmp
adc
push
xor
inc
pop
aas
ss
fimuls
xchg
jnp,pt
jne
fwait
adc
pushf
out
scas
inc
loop
lods
sub
xchg
loopne
cmpsl
mov
out
cld
ret
inc
mov
xchg
cli
out
add
rcl
decl
dec
imul
push
sub
cmp
lcall
mov
cmp
mov
ja
lea
fmulp
loope
dec
adcb
sti
aad
mov
push
or
mov
fidivrl
lret
dec
cwtl
pop
sub
stos
pop
fbstp
cmp
or
mov
scas
xchg
mov
xchg
adc
xchg
ja
mov
out
or
push
xchg
int
popf
rcr
lock
inc
jns
test
pop
jle
sub
fwait
movsl
in
adc
addb
sbb
add
push
repnz
cmc
or
test
xor
aad
lods
popf
imul
mov
aas
stos
into
repnz
sub
inc
popa
shl
xor
fmuls
in
add
jecxz
mov
inc
jbe
mov
sub
or
xor
mov
jb
movsl
mov
add
ret
lock
inc
xor
xchg
mov
faddl
rolb
sub
loop
test
add
test
mov
xlat
push
xor
cmp
clc
fwait
rorl
out
pushf
sbb
sub
jae
or
popa
dec
adc
mov
ds
lret
push
dec
dec
cs
mov
repnz
mov
shlb
popf
jnp
lret
das
jle
cmp
adcl
jae
add
pusha
or
push
xchg
mov
mov
std
push
cmpsl
shlb
dec
adc
repnz
and
inc
cmp
fldenv
mov
push
fdiv
rorl
inc
dec
cmp
out
mov
mov
jbe
es
jnp
push
sahf
push
push
or
icebp
mov
std
push
ds
aaa
les
push
in
loop
add
inc
sbb
jb
fsub
push
daa
mov
adc
jb
dec
cli
cs
pop
dec
int3
adc
mov
dec
es
out
les
pop
insl
dec
iret
mov
mov
dec
add
movsb
nopl
sub
sub
adc
xchg
mov
hlt
imul
insb
incl
sub
lock
imul
sub
daa
inc
dec
orb
or
inc
sbb
andb
stos
xchg
xor
movsb
or
pop
add
addb
cs
aam
pop
cwtl
fcoms
push
repz
xchg
push
push
cmp
cs
arpl
stos
mov
jge
jnp
insb
fdivrs
repz
inc
xchg
cmp
inc
leave
adc
ja
xor
sbbl
jns
sub
test
je
lcall
lldt
mov
sub
pop
mov
loop
add
fisttpl
fdivl
cld
mov
hlt
or
push
shlb
les
pop
cmp
jl
inc
arpl
pushf
xor
xchg
hlt
shll
mov
shlb
xor
mov
push
cmp
std
int
dec
les
shrb
mov
sub
jmp
mov
test
in
jge
xchg
scas
lcall
fcmovu
jbe
or
and
mov
pop
jo
mov
sbb
leave
xor
dec
lds
xor
rcll
dec
lea
sub
popa
mov
inc
pop
lahf
dec
out
push
repz
mov
inc
push
add
jp
mov
and
arpl
add
cmpsb
hlt
push
test
ret
sbbl
mov
sti
dec
cmp
mov
and
insl
dec
loop
xorl
dec
mov
ret
jae
push
jnp
xchg
hlt
gs
seta
and
pop
in
push
ret
jge
xchg
pop
or
out
inc
hlt
cld
pushf
mov
cmpsb
sbb
cmp
int
daa
adc
push
pop
shlb
jl
and
repnz
inc
push
jnp
cmpsl
ja
sbb
cs
lds
pop
ja
pop
xor
nop
mov
cmp
stos
pop
pop
cvtdq2ps
mov
inc
xchg
js
in
cmp
inc
out
fstpl
enter
and
cmpsb
mov
xlat
jno
je
inc
bnd
adc
sbb
leave
neg
pop
jb
adc
out
xorb
sub
jp
dec
sbb
mov
xchg
mov
in
xchg
push
inc
dec
movsb
les
mov
in
fwait
insl
mov
and
cwtl
pushf
xchg
fs
push
outsl
inc
out
int
jp
dec
in
inc
pop
pop
out
lret
fsubrs
scas
mov
add
xchg
dec
dec
lret
adc
ds
or
xchg
out
cmp
mov
ljmp
int
ret
out
jb
fcomp
repz
push
lock
sub
or
inc
inc
fs
in
aad
sub
push
dec
rorl
and
sub
xlat
aas
mov
sbb
mov
out
sahf
cmp
inc
aas
in
push
loopne
push
inc
sub
loope
fcmovnu
out
xor
fwait
cltd
jne
mov
stos
dec
sbb
sub
jns
aaa
push
subl
sub
ja
test
inc
add
adc
mov
fisttps
int3
pop
mov
fldcw
lret
lods
popf
add
jb
inc
add
mov
pop
addr16
dec
js
lret
aam
sbb
inc
inc
adcl
mov
cltd
mov
fildll
imul
stos
xchg
jg
dec
push
mov
jge
mov
dec
hlt
push
sub
sahf
scas
imul
push
push
pushf
fstpt
mov
idivb
mov
and
bound
pusha
xor
cltd
mov
xchg
sti
and
lock
xchg
ljmp
icebp
sbb
push
inc
in
cmc
push
rol
mov
cs
cmp
push
jbe
inc
rcll
dec
cmp
insl
and
jb
pop
decb
or
mov
cmp
jp
int3
fsubrs
out
xor
push
mov
lods
mov
jmp
fs
ffree
inc
push
or
push
cld
sub
mov
lret
mov
insl
scas
adc
pop
inc
test
js
imul
inc
subl
mov
mov
fdivrs
inc
std
iret
scas
testl
lds
push
int3
repnz
aad
sti
imul
or
inc
fs
inc
jecxz
adc
js
jne
fsubs
stos
jae
es
sti
sbb
jmp
fisttpll
aas
mov
gs
sbb
repnz
mov
mov
push
xchg
scas
cmp
pop
out
mov
data16
pop
inc
sub
mov
loop
push
dec
sar
dec
cltd
in
loop
lods
push
pop
adc
addb
popa
inc
mov
push
out
pop
sti
inc
psrlw
xchg
ja
clc
lods
mov
stc
jecxz
mov
push
repz
xchg
pop
cld
pop
adcl
jb
mov
shlb
push
push
sub
cwtl
adc
dec
aas
and
icebp
icebp
popf
aad
cmp
cmp
xor
mov
call
cli
mov
pop
loop
adc
int3
arpl
lret
in
jle
aaa
jp
push
mov
cmp
in
xor
mov
into
fwait
cmc
xchg
xor
push
adc
jecxz
aam
rcrl
hlt
inc
int
mov
aad
imul
mov
jae
icebp
mov
xchg
js
jle
es
out
fidivrs
cmp
mov
sub
fcomip
jg
sub
push
xchg
mov
adc
aas
int3
fcmovne
pop
iret
xchg
adc
or
pop
fisttpll
loopne
lds
inc
das
movsb
iret
in
and
enter
sbb
pop
mov
jl
pop
repnz
mov
enter
pop
and
stc
out
int
or
inc
mov
pop
push
cmp
sub
mov
ret
push
or
mov
xchg
mov
xor
inc
mov
pushf
inc
xor
rorb
and
in
dec
xlat
pop
mov
fsts
adcl
imul
xor
mov
sbb
mov
jb
lahf
fisttpll
sbb
adc
aaa
outsb
call
inc
add
sub
int3
pop
xchg
inc
mov
lret
xor
aad
icebp
inc
pushf
aaa
dec
aad
dec
in
jnp
pop
xchg
stc
mov
jmp
inc
loop
std
pop
loopne
iret
adc
daa
pop
push
dec
idiv
shrl
add
pusha
call
repz
cwtl
and
xchg
mov
imul
or
add
cmp
jno
int3
jo
scas
hlt
lcall
adc
into
pushf
ret
mov
push
sub
lret
push
lods
jg
je
push
dec
xor
jnp
loop
push
xor
inc
and
stos
xor
inc
iret
or
sub
ss
cwtl
add
bound
or
mov
dec
and
in
loop
jo
movsl
cmp
dec
jg
and
fdivrl
sbb
clc
inc
add
rcrl
cs
lea
test
ljmp
lds
inc
push
jmp
ds
lahf
out
pop
insl
sub
fwait
outsb
les
fs
fbld
flds
dec
shrb
rcrl
jmp
adc
pop
push
jge
out
fnsave
mov
fdivrs
adc
std
das
add
jbe
sbb
dec
ss
loop
xchg
pop
add
pop
mov
mov
sub
pushl
dec
clc
sub
jle
repnz
test
jo
fstl
setne
jmp
adc
aad
mov
stc
dec
scas
mov
ret
sub
mov
mov
cs
mov
test
js
jecxz
fdivl
test
xchg
jecxz
or
cwtl
cmpb
shrl
push
out
adc
dec
dec
add
add
rorl
and
repz
adc
stc
pop
mov
mov
test
mov
and
push
jge
pop
lds
add
or
xchg
jb
je
les
dec
push
insl
mov
leave
aam
insl
dec
stos
lds
push
add
jmp
sbb
jge
dec
loope
fimull
outsb
push
push
mov
daa
cmpsb
mov
push
jmp
inc
pushf
mov
hlt
mov
push
pusha
loop
sub
add
inc
scas
ljmp
clc
xor
jle
sbb
push
cmp
inc
cmp
out
mov
loop
jns
jb
nop
jnp
test
pop
or
test
test
in
mov
aaa
lahf
mov
pop
stos
bound
jae
and
sarb
fwait
push
aad
cwtl
movsl
jns
or
pop
orb
or
pop
pop
sbb
jmp
jl
ss
std
inc
in
xlat
bndstx
js
push
push
xchg
cs
stc
cmp
arpl
dec
jbe
pusha
jnp
jno
rorb
inc
aam
jecxz
cmp
mov
test
xchg
jno
push
aad
jg
out
sub
push
inc
lds
sbbb
or
dec
je
pushf
popa
add
push
das
adc
jmp
mov
push
xor
push
push
aam
pushf
ss
or
cmp
addr16
ja
rcl
jp
enter
rcr
mov
mov
dec
orb
add
ja
mov
mov
mov
add
inc
or
and
repz
jno
push
push
lods
cmp
pop
mov
push
testb
lcall
adc
mov
ss
sub
daa
lcall
mov
xchg
pop
sbb
popa
icebp
xchg
lahf
jmp
inc
pop
cmpsb
repnz
fstps
xchg
sub
ljmp
jle
push
mov
dec
cmp
sub
scas
pop
push
outsl
mov
ret
and
cmp
out
aaa
repnz
nop
jp
inc
xor
jecxz
dec
jle
bound
nop
loopne
dec
lods
imul
and
lds
xchg
insb
fmuls
dec
jp
call
sbb
cmc
jne
xchg
mov
out
loopne
inc
ds
pop
ror
ret
movsb
xlat
mov
stos
es
mov
in
push
sahf
sbb
sbb
adc
outsb
fcomi
call
xor
adc
adc
mov
xor
js
jle
xor
stc
repnz
jge
fsubr
push
notl
flds
pop
cmp
fcomps
add
in
shll
push
aaa
jne
aas
fcompl
popa
out
adc
mov
jp
jmp
mov
dec
xorl
sub
in
and
jmp
rcll
fnstenv
push
pop
dec
mov
je
adc
mov
rcll
in
push
popf
adc
pop
js
xchg
mov
sub
mov
gs
dec
sbb
repnz
jbe
push
adc
xchg
je
cmc
in
adc
std
mov
andl
loopne
push
loope
repnz
cmpsb
pop
or
hlt
pop
add
int
roll
cmp
mov
aaa
jmp
push
mov
lcall
xchg
mov
jp
fadds
jo
std
into
inc
mov
cmpsl
int3
push
dec
shl
movl
dec
nop
mov
push
push
fsubp
loope
sbb
es
adc
aaa
jle
pop
cs
mov
nop
scas
jo
pushf
mov
push
nop
or
cmpsl
pop
mov
fs
mov
jp
mov
sub
rdtsc
paddusw
stos
mov
xchg
popf
push
test
jp
popf
push
ret
jl
cmp
xlat
xor
dec
ja
push
mov
lcall
add
mov
in
cli
and
xor
jno
adc
sti
rcrb
int
xchg
lods
push
mov
ljmp
shrb
aas
sbb
or
xchg
mov
add
out
dec
mov
xchg
jl
xor
push
jno
rorl
sub
mov
loop
out
out
mov
pop
and
mul
cmp
loopne
insl
test
jb
test
jnp
outsl
daa
mov
fldt
lcall
fcmovnbe
dec
mov
rorb
ja
call
or
jnp
jbe
xorb
mov
sbb
jmp
mov
push
pop
aad
insl
push
pop
add
jne
mov
mov
mov
cmp
sti
cli
mov
rcrl
jno
loop
push
jg
mov
js
push
mov
popa
je
stc
aaa
add
jae
pop
or
stos
and
lcall
ja
xlat
fimuls
movsb
adc
push
xlat
jae
xor
in
ja
ret
rorl
pop
mov
inc
ret
mov
aam
sbb
scas
stos
inc
push
movsb
or
bound
jmp
fcmovnu
xchg
pop
fimull
mov
adc
addb
movsl
loope
int
insl
hlt
push
or
mov
push
xlat
push
fsubrs
ret
lods
arpl
xor
scas
mov
and
xorb
and
fbstp
sbb
push
popf
lahf
mov
lcall
lret
hlt
fcom
movsb
and
cmp
scas
cmpsb
out
sub
outsl
call
push
push
mov
imul
mov
add
aad
movsl
mov
inc
dec
aad
ljmp
mov
cmp
cmp
dec
or
movsb
add
in
lods
mov
loope
sbb
incl
jnp
inc
lea
xor
sbb
mov
inc
ja
pop
and
sbb
imul
xor
movsb
stos
push
sub
adc
adc
jl
add
sub
mov
aas
inc
popl
pop
mov
add
ljmp
fs
cmpsl
fucom
cmpsb
sub
add
test
push
mov
cmp
jbe
mov
pop
shrb
pop
test
loope
test
dec
pop
std
leave
add
xor
mov
icebp
aaa
lods
xchg
outsl
push
or
test
mov
es
roll
in
adc
fcoml
mov
sbb
mov
sub
movsl
add
cmp
xchg
xor
adc
iret
test
lret
pop
mov
test
mov
lret
roll
cli
and
in
roll
jg
das
push
fcomp
and
lods
xchg
mov
ds
fdiv
leave
shrl
dec
sbb
in
push
xor
nop
rorb
test
cmp
cmp
addr16
mov
xchg
cli
jp
mov
addr16
aas
sbb
popa
out
xchg
mov
mov
add
bound
ljmp
inc
fiaddl
test
addr16
and
mov
push
add
cmp
mov
push
bound
xor
mov
mov
xor
or
shl
or
jl
ja
nop
adc
mov
xchg
stos
or
lock
test
dec
clc
add
gs
movsl
jge
inc
lods
cmp
imul
sbb
das
repz
mov
cmp
pop
loop
mov
pop
out
stos
inc
fldl
jg
and
in
mov
popf
add
xlat
out
push
in
clc
and
pop
scas
fcomps
adc
adcl
test
insb
inc
lahf
mov
ljmp
loop
mov
push
xlat
enter
sub
into
xchg
mov
sahf
pop
xor
adc
jb
out
adc
mov
shr
ficoms
cmp
lcall
jno
pop
in
dec
push
sub
loope
pop
lods
lret
jp
movsl
fdivr
pop
orl
jg
sbb
stos
paddusb
fiaddl
or
lock
lcall
xchg
adc
mov
mov
xlat
mov
fistl
test
insl
mov
sub
fdivr
xor
test
jecxz
ret
sub
cltd
shrl
xchg
clc
addl
les
clc
fdivl
jae
fdivrs
sub
mov
pop
push
dec
mov
mov
pop
mov
fs
leave
cwtl
jmp
imul
pop
pop
or
jbe
jne
lahf
imul
cmc
push
pusha
mov
jnp,pn
cmp
add
xor
cltd
scas
out
movsb
shll
adc
add
ja
rcrl
mov
out
inc
into
jno
xor
fdivs
out
loope
gs
jns
in
imulb
xor
test
push
mov
sbb
xor
cmpsl
xor
cmp
mov
push
cwtl
jmp
pop
lods
xchg
add
addl
mov
pop
pop
xacquire
test
lods
fucomi
mov
sbb
mov
push
mov
mov
dec
int3
ffreep
lods
adc
or
popf
inc
shll
xor
inc
mov
rolb
cmp
jecxz
into
mov
cmp
dec
jmp
lret
test
into
ds
jge
shl
mull
xchg
lret
sub
add
shr
ja
in
mov
pop
pop
in
add
inc
repz
test
jecxz
mov
xchg
mov
bound
movsl
jg
pusha
ret
je
mov
leave
out
push
outsb
je
fmul
cmpsl
mov
push
and
mov
dec
fwait
out
inc
mov
mov
loop
movsb
cmp
pop
in
fbstp
shrb
pop
shl
stos
dec
lock
cmp
imul
pop
dec
jmp
adc
jle
fdivl
stos
fnstenv
ja
adc
dec
or
fs
fs
and
jbe
push
mov
jae
mov
cmp
mov
out
and
sahf
xlat
shlb
add
insl
mov
jecxz
mov
pushf
and
add
in
xor
shr
icebp
mov
inc
dec
std
xor
aam
sub
rolb
jae
stos
ret
pop
ljmp
dec
pop
cmpsl
stos
adc
jp
call
dec
mov
xor
mov
stos
or
sbb
aad
lods
mov
and
add
pop
call
xor
pop
and
shlb
cmp
mov
mov
cmp
nop
cs
or
jb
jle
popa
fsubl
fsubrl
mov
xor
xor
sub
lods
outsl
ret
dec
dec
in
sub
repnz
bound
xlat
mov
cltd
stc
adc
push
lea
sarl
mov
mov
pop
inc
mov
and
mov
rcrb
xchg
mov
leave
jge
add
sub
or
or
aaa
pop
xorl
ljmp
fiaddl
hlt
outsl
hlt
addr16
and
inc
es
aad
sbb
ds
mov
pushf
cmp
aas
shlb
xor
imul
add
dec
movsl
loopne
je
outsb
int3
xor
push
nop
pop
push
lods
cwtl
push
rcll
aam
addl
xchg
bound
scas
fnsave
idivl
mov
stos
add
lods
jp
in
sbb
out
inc
sahf
dec
pop
add
xor
mov
pop
fnsave
push
lret
cmp
out
adc
mov
insb
mov
imul
xchg
subl
pop
cmp
fsubrs
add
sub
inc
pop
lret
mov
inc
xchg
cmp
dec
sbb
xor
mov
cmpsl
arpl
jns
push
rcr
lods
xlat
sar
cmp
mov
lods
sub
cmp
das
pop
adc
out
cmp
cli
jnp
xlat
or
loop
int3
movsl
rolb
xchg
sbb
imul
or
xchg
jecxz
lret
cmp
push
sbb
idivl
je
push
sahf
mov
or
scas
mov
push
sub
lock
lock
dec
lea
fcmovu
les
push
pop
es
xchg
stos
icebp
sub
daa
movsl
pop
mov
test
and
dec
test
and
mov
in
sbb
in
popf
clc
ljmp
xchg
mov
adc
in
push
cmpsb
int
nop
int3
cmp
mov
inc
adc
sub
jns
pop
in
sub
into
js
mov
dec
and
jno
les
inc
or
sub
mov
sub
mov
subb
adcb
jae
push
icebp
out
add
popa
adc
ret
loopne
sub
push
jns
js
mov
push
xchg
sub
jecxz
and
enter
push
lahf
repnz
out
adc
aaa
mov
mov
jae
adc
rcr
mov
movb
mul
dec
cmp
inc
lret
std
jge
jae
push
mov
mov
aaa
arpl
out
popa
add
pop
xchg
insl
adcb
stc
lods
adc
shrb
roll
aas
mov
xchg
cli
jg
fmull
dec
popa
sub
cmpsb
fwait
shr
sahf
inc
xor
std
xlat
sar
cmc
scas
addr16
push
arpl
pop
mov
xchg
ret
ret
mov
mov
pop
adcl
jecxz
push
fmulp
loope
mov
jg
mov
shl
repnz
mov
mov
fcomps
mov
test
shll
dec
jg
inc
cli
push
cmp
jno
mov
adc
inc
push
pop
dec
insb
int3
aaa
lahf
jns
sub
xor
or
push
jle
and
test
mov
out
imull
mov
cli
insl
cli
push
imul
sub
sub
int
mov
add
xchg
loop
cmpsb
lds
jne
in
dec
xchg
scas
and
pop
movsl
cmp
jmp
ljmp
or
out
out
jg
push
sub
dec
int3
and
insb
jo
out
iret
ficoml
dec
add
xchg
imul
xchg
out
cmp
fwait
add
std
nop
aam
or
out
mov
mov
add
cld
adc
dec
jne
mov
mov
cli
xor
sub
fstpt
jns
divb
test
rcr
cmc
loope
ret
mov
imul
fsubp
popf
pop
int
pop
pushl
insb
sbb
filds
or
add
das
xchg
lret
dec
mov
testl
rcrl
and
fmul
rcl
clc
cmpl
fs
adc
mov
pop
aad
es
mov
cmp
mov
pop
jo
jecxz
push
pop
cmp
pop
inc
pop
mov
mov
or
dec
fs
sbb
mov
sub
dec
repnz
lahf
in
mov
imul
and
arpl
and
cmpl
nop
mov
aaa
cld
xchg
dec
dec
push
xor
push
mov
inc
popf
xor
push
arpl
sbb
inc
jg
cmpsl
lahf
sbb
push
movsb
int3
rcrb
mov
lea
movsb
test
enter
mov
imul
cmpsb
xor
call
rorl
adc
inc
mov
scas
pushf
or
dec
xor
jl
in
ljmp
cwtl
push
aaa
loopne
fisubl
jb
push
das
repz
sub
jl
sub
cs
xlat
aam
ret
arpl
arpl
adc
out
nop
add
ret
popa
dec
inc
add
scas
pusha
jbe
enter
add
and
sub
loopne
xchg
and
bound
movsl
and
dec
insl
jge
mov
mov
inc
in
decl
clc
pop
stc
outsb
lds
and
sbb
int3
mov
push
out
out
add
rol
cmp
xchg
add
pop
out
aad
xor
and
in
inc
fstpt
dec
out
xchg
add
pop
loopne
mov
xorl
or
jne
std
insl
call
jns
push
xor
shld
add
cmp
pushf
ret
popf
jg
push
lcall
cli
aas
sub
jl
outsb
aas
xchg
mov
popa
lea
pop
outsb
mov
mov
sbbb
jmp
inc
jbe
jmp
frstor
arpl
adc
orl
or
stc
xchg
in
loope
or
out
ret
mov
pushf
sbb
mov
add
jb
and
cltd
xor
add
fsubrl
push
ja
mov
stos
pop
repnz
stos
pop
repz
jp
jbe
xor
jae
lret
lcall
vpminsw
je
insb
das
clc
pushf
pop
xchg
xor
inc
jnp
into
mov
jbe
sti
int3
xor
jle
sub
sub
cmpsl
fldl
push
and
cmpl
sub
adc
outsb
mov
je
stos
pop
dec
cmp
mov
popa
lret
ja
das
shrl
cmp
jp
cld
mov
mov
lcall
pop
outsb
sbb
sahf
mov
push
stc
jbe
jae
rcll
or
inc
movsb
jno
testl
addl
push
lods
pop
addr16
xor
aaa
aad
mov
dec
mov
js
dec
mov
jns
dec
cld
add
hlt
lock
mov
jmp
dec
js
aam
cmp
mov
pop
sahf
cmp
movsl
xchg
aad
add
test
jnp
lea
cmp
fldl
jno
clc
cmp
or
push
push
sbb
cmc
aas
inc
call
sbb
outsb
cld
add
out
cmp
lock
lds
repz
leave
mov
ds
mov
jno
cld
cmpsl
jne
mov
outsb
mov
add
paddusb
adc
out
or
mov
shlb
test
test
and
mov
cli
in
test
adc
adc
cld
add
sbb
scas
lea
dec
das
or
or
adcl
call
pop
dec
mov
add
add
pop
rclb
scas
std
pop
sub
in
subb
pop
or
test
inc
pop
fidivl
and
dec
jp
sub
dec
scas
or
aas
addr16
pop
pop
ja
arpl
push
in
inc
popa
inc
imul
inc
pop
sti
test
out
test
dec
adc
in
cmp
cs
enter
out
stos
pop
movsl
push
ja
mov
mov
jg
jbe
inc
pop
sub
jae
filds
in
mov
pop
pusha
mov
mov
cltd
sahf
jae
icebp
xorb
jecxz
mov
and
and
lods
mov
sbb
icebp
std
jl
rorl
movsb
push
mov
inc
push
adc
add
bt
push
sahf
out
mov
dec
lret
mov
dec
inc
icebp
sbb
jns
inc
out
shll
and
andb
inc
movl
jge
mov
xor
jge
ret
xchg
or
adc
add
cmc
in
and
jb
inc
xor
movsb
cld
pop
mov
dec
xchg
imul
and
jnp
push
push
mov
cwtl
in
dec
arpl
adc
in
sbb
jp
sbb
jl
mov
pusha
mov
into
leave
push
mov
aam
sub
jns
mov
jo
jb
rcrl
xchg
dec
jno
sbb
les
sub
fcmovnu
fld
mov
adc
inc
xlat
shl
into
icebp
adc
xor
add
push
fmul
push
nop
mov
iret
dec
rorl
xchg
cmp
cmc
das
xor
xlat
scas
sti
add
mov
addl
das
inc
xchg
add
insb
mov
stc
mov
loope,pt
or
cmp
pop
cwtl
adc
cmp
and
fiaddl
dec
pop
into
push
ja
jne
mov
or
sbb
add
xchg
jae
out
xchg
jb
je
push
xor
sub
jl
in
add
cld
jo
popf
xor
xchg
scas
fsub
adc
int3
and
inc
popf
jno
add
test
push
call
ljmp
data16
jmp
cmp
dec
hlt
stc
mov
aaa
jb
lret
mov
mov
mov
inc
xor
or
pop
and
ds
mov
repnz
sbb
mov
fistps
fstps
dec
cltd
stc
jns
jmp
jge
inc
or
cmc
and
adc
mov
pop
pop
dec
cld
mov
lock
int
cwtl
pushf
mov
jg
outsb
adc
leave
ja
jb
sub
dec
into
adc
shrl
cld
stos
or
cwtl
push
call
mov
cmpsl
dec
pop
sarl
les
into
mov
push
push
fs
arpl
cmc
orb
fmul
lcall
in
xchg
lods
cmp
cmp
mov
xchg
leave
pop
cmp
int
push
sahf
adc
insl
cmp
adc
call
scas
xchg
outsb
mov
push
jb
pushf
adc
mov
es
adc
das
mov
inc
popa
std
and
xchg
pop
insl
pop
dec
cwtl
loop
jecxz
out
jmp
dec
pop
and
cmc
or
fdivl
pusha
testl
pop
ds
pop
rorb
jp
fidivrl
idivl
xchg
fsubr
stos
sub
cmp
sarl
gs
xchg
bound
fsubs
std
xor
cmpb
out
aad
dec
mov
fistpll
xor
jb
int
dec
add
int
and
add
stos
in
test
popf
int
dec
mov
and
push
in
out
lock
jne
mov
shlb
xor
xchg
scas
fcomp
sub
lock
jle
fildl
imul
popa
sahf
lods
ret
jo
adc
dec
jmp
rcrb
daa
jbe
and
xchg
ss
daa
fcoms
inc
mov
pop
pop
into
in
negl
xchg
das
sbb
jmp
rorb
xor
mov
insb
mov
hlt
mov
in
push
push
inc
movntq
sbb
inc
mov
sbb
mov
mov
arpl
rcr
mov
dec
in
xchg
cwtl
mov
jg
jmp
sbb
dec
push
outsb
cmp
not
dec
xor
inc
in
pop
sahf
push
cltd
and
into
jmp
mov
pop
cmpsl
add
mov
cmpsl
cmc
adc
incl
jo
imull
adcb
lret
pop
dec
mov
cmp
scas
add
xor
inc
jmp
es
adcl
out
mov
dec
or
hlt
ret
test
idiv
adc
test
dec
inc
nop
jnp
out
addr16
decb
in
lods
icebp
sbb
stos
ljmp
test
hlt
aaa
ret
test
dec
jp
jg
sbb
ficompl
daa
xor
sub
lea
addr16
arpl
out
pusha
xor
xor
jmp
xchg
gs
fldt
jmp
or
cld
mov
scas
sarb
fistpl
mov
xor
repnz
iret
sub
mov
dec
and
les
mov
inc
pusha
push
or
popa
fnstsw
mov
cld
decb
xchg
add
mov
sbb
cmp
nop
lahf
fdivrp
clc
mov
xchg
into
out
mov
in
addr16
outsb
add
cs
lahf
sub
outsl
pop
dec
ljmp
jp
in
mov
jecxz
pop
pop
push
aad
sbb
test
jb
sar
out
mov
mov
and
ret
mov
inc
lcall
cs
pop
orb
shll
lcall
out
mov
xlat
jg
sub
loop
or
jp
outsl
pop
jg
sbbb
mov
leave
adc
cmpsb
mov
popa
jae
sbb
mov
xor
lods
je
mov
cmp
mov
jne
stos
push
jno
xor
mov
dec
pop
imul
fnstenv
adc
inc
adc
push
dec
cltd
jg
clc
and
int3
into
push
lcall
int
mov
and
dec
pop
out
pusha
stos
cmp
cmc
sbb
and
xchg
out
fbstp
xchg
pushf
inc
inc
repnz
in
ljmp
adc
sbb
loopne
popf
mov
out
pop
shr
push
or
aas
adc
stos
cwtl
mov
fcmovb
loope
or
repnz
popa
and
push
adc
xchg
out
fwait
push
or
bound
bound
xchg
loop
xchg
add
pop
clc
push
hlt
imul
sbb
adc
scas
out
cmpsb
add
mov
jo
dec
fsubrs
xor
jecxz
cmp
outsb
jge
mov
xchg
popl
hlt
ja
repnz
dec
add
test
addr16
cmp
fs
inc
and
add
repz
test
sbb
out
stos
mov
rol
test
or
fsubs
mov
mov
mov
dec
sahf
cmp
aam
out
fidivrs
xlat
out
stos
nop
dec
mov
pop
cmp
mov
ss
sub
sub
mov
mov
scas
sub
jne
aad
out
lods
inc
cli
and
enter
popa
cmp
cltd
adc
ja
sub
mov
test
cmp
lea
repnz
adc
push
inc
gs
push
nop
add
lcall
out
imul
icebp
popa
mov
das
push
mov
or
fwait
or
inc
hlt
mov
cmp
mov
xchg
mov
ds
inc
orl
sbb
or
fmuls
scas
mov
mov
cmp
pop
fs
psrlq
jle
dec
scas
rol
or
loop
push
xchg
xchg
xor
adc
test
jmp
mov
mov
push
inc
jbe
adc
pusha
in
xor
iret
in
xor
jno
inc
sbb
sub
loopne
mov
push
mov
cmp
mov
test
push
jmp
jns
ja
mov
pop
add
stos
jp
sub
dec
imul
in
leave
jno
lods
pop
push
repnz
jne
fldcw
je
mov
loopne
lahf
nop
insl
cmc
shl
mov
in
dec
pop
and
lea
jae
lcall
js
mov
mov
push
and
mov
aam
mov
data16
imul
and
daa
mov
test
mov
shlb
mov
dec
repz
push
xchg
pusha
lret
mov
pop
lods
jne
pop
ret
sbb
adc
add
mov
jle
dec
fdivrs
and
and
in
add
rcr
sahf
outsb
repnz
mov
xchg
loopne
pop
mov
mov
push
cmp
imul
lcall
sbb
stos
inc
rolb
xor
mov
adc
mov
sub
rolb
mov
and
xchg
add
and
aaa
push
lcall
push
mov
sbb
lcall
mov
ljmp
push
lcall
popa
sbb
jmp
add
cmc
dec
sub
ljmp
clc
and
in
mov
xchg
add
inc
je
xchg
scas
jo
or
xor
cmp
pop
jne,pn
lahf
push
test
stc
pop
test
adc
pushf
xor
push
and
imulb
ret
insb
aaa
pop
push
jnp
cs
add
hlt
sub
jle
xor
pop
es
cmc
cli
adc
sub
add
or
adc
push
sbb
stc
fwait
insb
add
xchg
lret
rorl
fisttpll
push
test
sahf
push
dec
mov
lret
inc
inc
sahf
xor
jecxz
cmpb
inc
mov
adc
test
inc
mov
lods
nop
inc
sub
insl
movsb
rcrb
push
adc
daa
decl
adc
dec
inc
mov
jmp
or
or
cmp
icebp
cli
pop
loope
jmp
inc
mov
icebp
cmpl
fidivrl
xlat
lds
jmp
movsb
es
pushf
leave
pmaxub
mov
int
add
sbb
test
push
mov
imul
repz
cmp
cli
pop
mov
mov
stc
into
push
lret
mov
ret
nop
clc
jne
adc
imul
lock
out
adc
scas
popf
lods
mov
cmc
inc
jb
adc
xor
add
loop
cmp
ficompl
jb
or
enter
out
sar
cmpb
mov
lcall
imul
repz
and
mov
movsl
xlat
inc
adcb
sub
ret
or
lock
dec
pop
sub
jb
jno
popf
aas
inc
aad
push
sbb
pop
mov
inc
clc
inc
leave
jp
push
aas
jl
dec
in
js
les
ret
jne
push
mov
mov
adc
and
out
int3
in
add
rorb
ljmp
xor
in
push
mov
cmovo
shlb
mov
jbe
jecxz
pusha
sub
shrb
lock
ret
movsl
dec
mov
fldenv
fstp
cmpsb
mov
mov
xchg
jmp
cmc
jmp
xor
outsb
inc
js
pop
lret
mov
xchg
insl
gs
in
repz
shl
roll
test
stos
or
lret
sub
addr16
sbb
mov
xor
repz
pop
add
pop
dec
ja
out
adc
xchg
stc
int
movsl
mov
push
sub
das
jbe
xchg
xor
inc
mov
sahf
lcall
lods
loopne
jg,pn
sub
jbe
mov
xchg
jae
fsubl
inc
add
gs
jbe
insl
test
pop
inc
cmpps
push
push
jecxz
sbb
lcall
mov
in
insb
mov
push
cmp
sbb
adc
in
lock
call
jno
mov
pop
mov
xor
mov
aad
fs
add
loopne
inc
stos
push
pop
pop
orl
mov
push
inc
pop
pop
icebp
sbb
mov
jo
jge
into
or
sub
repnz
push
imul
xchg
cmpsb
in
push
notb
ret
cmp
cmc
test
movsl
xchg
xlat
les
mov
movsl
cmp
dec
in
mov
sbb
rcrb
rcrb
ds
aaa
xchg
aas
cmpsb
pop
sbb
insl
insl
pop
xlat
xchg
mov
in
pop
int3
outsl
mov
ljmp
addr16
dec
cmpb
jle
mov
ret
lcall
adcb
lea
scas
adc
mov
aas
into
jmp
cmp
fdivs
leave
jne
in
mov
test
out
sti
inc
stos
inc
shll
shll
daa
repnz
fcoml
cmp
popa
in
cli
and
sbb
inc
ja
stc
cmpsb
addr16
les
mov
pop
jbe
pop
mov
stc
mov
mov
clc
jno
andl
arpl
daa
mov
sahf
inc
inc
mov
cmp
inc
jbe
mov
int3
imul
outsb
repz
fwait
iret
pop
das
mov
jmp
jg
cwtl
mov
mov
and
pop
std
fs
jb
sbb
shrl
fcomps
cltd
jnp
mov
aaa
fnsave
cwtl
xchg
adc
std
or
xchg
repz
xacquire
enter
push
fdivp
movsl
xchg
mov
pop
jne
je
shlb
inc
mov
xlat
enter
mov
repz
cmpsb
popa
addr16
jbe
push
ror
bound
popf
rolb
je
inc
adc
cltd
insl
push
loop
out
xchg
test
insl
movsb
or
or
mov
push
scas
mov
push
push
adc
arpl
repz
ss
lock
dec
dec
cmp
orl
mov
push
enter
adc
fwait
jmp
out
dec
frstor
and
iret
aam
sbb
pushf
aaa
xchg
dec
outsl
insl
subl
fimuls
aas
pop
pop
jp
inc
popf
add
mov
stos
mov
jb
nop
lds
push
mov
mov
sbb
mov
int3
mov
adc
push
clc
jb
or
push
in
popa
and
aam
testb
movsl
sub
pop
nop
add
inc
inc
sahf
scas
jb
lods
add
es
dec
inc
inc
mov
mov
int
sub
xor
xor
movsl
mov
push
cmpl
cmp
cltd
ljmp
repz
jmp
xor
repz
fistpl
push
insl
test
mov
mov
ficoml
pop
sub
mov
stos
push
pop
inc
out
cmpsl
dec
fdivl
xchg
pop
rolb
test
pop
insl
arpl
cmp
in
scas
cmpsl
rcrl
dec
jo
sub
and
push
nop
and
fmull
mov
sti
sub
sbb
lods
mov
cmc
and
out
pop
ljmp
jo
out
sbb
adc
jnp
dec
dec
js
sbb
repz
mov
and
adc
stos
cltd
insl
shlb
call
mov
leave
xchg
inc
mov
nop
sub
stos
imul
mov
jns
cmp
cld
xchg
fisttps
cltd
fs
inc
cs
scas
mov
lcall
in
mov
ret
or
pop
arpl
imul
loop
mov
ret
subb
sbb
and
adc
xor
pop
inc
pop
push
out
repnz
es
xor
pop
scas
sbb
jg
jbe
ljmp
xchg
push
enter
cmp
jp
cld
jg
test
mov
or
fsubs
mov
jbe
and
xchg
or
lds
dec
pop
decb
cmp
test
pop
into
scas
das
sbb
dec
xchg
sahf
add
scas
int3
in
ja
cmc
int3
repnz
lods
inc
bound
shll
aam
ret
shl
das
push
dec
push
xor
fucomi
mov
movsl
xchg
cmpsl
adc
and
push
dec
andl
pop
mov
add
inc
aaa
sbb
dec
jge
inc
xchg
push
lods
mov
pop
lock
aas
and
call
jbe
pop
push
mov
mov
pop
jmp
sbb
sbbl
pop
pop
cmp
adc
outsb
nop
mov
daa
fbld
jo
cmp
addr16
jg
in
mov
es
movsb
pop
mov
xor
and
into
xchg
xor
inc
adc
pushf
mov
cmpsl
push
cmpsl
test
and
cwtl
xchg
sahf
cmpsl
es
cmc
mov
add
lahf
add
jns
lds
sub
hlt
fs
adc
gs
stc
imul
inc
xchg
add
sub
lods
rolb
neg
ret
push
in
outsb
and
adc
ss
push
push
add
inc
mov
popa
lret
push
or
jbe
or
out
push
mov
jp
pusha
in
sub
fcmovb
jbe
cltd
mov
lret
shlb
dec
aam
push
pop
notb
mov
insb
ja
dec
lods
ds
shlb
xchg
sti
iret
dec
push
loopne
sub
xchg
mov
movsb
or
repnz
aaa
lea
jbe
sub
adc
aam
inc
mov
ret
inc
sbb
in
add
sub
add
mov
mov
mov
insb
jle
hlt
cmp
sub
leave
mov
cmp
movsl
mov
sar
negb
pusha
xchg
int3
popf
dec
stc
xlat
pop
out
pop
lods
in
xor
aam
push
jmp
ret
add
lock
in
jae
jae
cld
lret
outsl
ljmp
adc
inc
and
pop
dec
test
jl
scas
or
xor
xor
fbstp
inc
sub
pop
add
imul
movsb
std
mov
maxps
adc
pop
add
adc
addb
ret
pop
xchg
sub
push
mov
cmp
cmpl
mov
ja
mov
dec
stos
push
dec
jb,pt
xchg
xor
xlat
aam
cmp
jp
jg
fimuls
ret
call
test
arpl
stos
test
adc
stos
mov
popa
into
repnz
cmp
ss
iret
int
ret
leave
inc
iret
dec
fstl
in
add
dec
sbb
push
cmp
mov
jmp
dec
cmp
pop
jp
jmp
or
data16
mov
out
pusha
pop
in
push
ljmp
xor
mov
in
cmp
mov
in
inc
idivb
popf
inc
aam
ret
cmp
fidivrl
popf
outsl
jns
jb
stos
sbb
imul
xor
fwait
xchg
jle
je
xor
insl
out
dec
enter
call
jnp
insl
mov
add
pop
cmp
or
pop
sub
cli
roll
sub
insb
cwtl
mov
and
scas
pop
cmpsl
test
arpl
xchg
iret
and
rol
insb
dec
leave
inc
out
pop
cld
mov
addl
sub
ret
movsb
rolb
xlat
stos
in
inc
repz
adc
mulb
sub
mov
mov
push
cmp
rcll
push
mov
testl
rolb
out
movsb
js
loopne
data16
cmp
sub
pop
imul
mov
or
inc
js
push
or
fistpll
je
jno
and
scas
out
sbb
int
fildl
aad
jno
dec
mov
ja
je
mov
insl
out
inc
mov
loopne
or
and
fwait
sub
sahf
test
stc
scas
mov
je
mov
pop
lret
lea
ljmp
mov
inc
bound
test
lds
mov
icebp
dec
xor
xchg
mov
xor
jae
push
clc
scas
sbb
mov
mov
mov
pop
test
dec
push
and
pop
dec
cs
jmp
adc
sarl
sahf
adc
je
mov
mov
add
and
jo
lock
fiadds
jge
pop
out
sub
test
jp
mov
jecxz
adc
scas
movsb
xchg
outsl
sahf
cwtl
mov
jno
adc
jb
xor
fimull
loope
or
movl
mov
mov
cs
nop
jnp
dec
loop
out
mov
and
add
sbb
cmp
sbb
fs
jae
lds
notb
jecxz
push
pop
jmp
or
dec
jle
push
add
addr16
repnz
insl
add
cmp
xlat
push
push
imulb
sbbb
xchg
dec
arpl
std
mov
cmp
jp
dec
sbb
dec
call
js
mov
jb
lods
or
mov
inc
out
mov
cmp
imulb
ret
daa
lds
pop
pop
in
mov
sbb
xor
loop
pusha
cmp
dec
out
fbld
dec
daa
mov
mov
test
pop
sub
popa
test
xorl
jbe
shr
mov
sbbl
stos
sti
aad
inc
out
sub
xor
xorl
sti
ds
jg
xor
xchg
push
enter
movb
and
fidivs
adc
mov
xlat
pop
jnp
mov
jae
dec
push
pushf
jg
aaa
jae
sbb
hlt
inc
lods
sbb
sbb
mov
lea
push
pushf
jecxz
pop
je
fwait
repz
jbe
loopne
adcb
add
xor
pop
lods
mov
mov
jge
mov
push
jmp
push
lahf
pop
aad
adc
into
in
jnp
adc
je
jecxz
ja
jno
add
push
xor
jbe
mov
cltd
push
pushl
and
int3
outsb
clc
pop
cld
pop
sub
leave
or
add
int
jo
jg
div
mov
repnz
dec
repz
pusha
dec
adc
mov
inc
fsubrp
imul
push
daa
out
iret
and
movl
dec
outsb
test
pop
fsts
add
cmp
mov
xchg
adc
sub
pop
or
daa
fiadds
iret
jmp
sub
sub
mov
in
stc
fadd
push
mov
bound
sar
shll
scas
cmp
adc
iret
arpl
pop
shrb
sahf
mov
jl
std
jne
popa
pop
test
ss
mov
and
and
arpl
pop
pop
xor
cmp
mov
mov
adc
mov
push
rclb
les
scas
mov
rol
sti
cld
les
push
in
cmpsb
lret
cmpsl
pop
jmp
inc
cmc
bnd
mov
mov
mov
or
sub
jmp
in
int
cmpb
int
inc
xor
hlt
mov
inc
mov
jmp
imul
jmp
jge
stc
cmp
scas
repnz
std
mov
sarb
or
push
rcll
xor
and
and
in
lods
pusha
mov
out
inc
and
test
inc
lahf
ret
movsl
adc
push
ret
push
xor
mov
cmpsl
in
fucomip
sub
lcall
stos
int
filds
pusha
mov
es
aam
mov
dec
mov
leave
loop
and
push
xchg
leave
sub
data16
sub
inc
fisubs
xor
pushf
push
adc
data16
lds
adcl
or
xor
sbb
aaa
shrb
pop
sbb
mov
pop
adc
jne
jl
rclb
mov
fisubrl
adc
cli
cmp
xor
or
sbb
test
mov
loop
push
cwtl
je
push
jl
push
mov
or
sub
lret
sahf
roll
xchg
mov
dec
lock
sbb
dec
sub
pop
xor
mov
call
mov
xor
xchg
mov
imul
pusha
nop
js
dec
mov
push
subb
out
xor
xor
adc
inc
daa
sub
cmp
ss
cltd
push
xor
mov
in
push
scas
andl
addl
mov
prefetch
or
xchg
inc
push
testb
test
popf
in
test
pop
dec
xchg
dec
add
pop
pop
pop
mov
pop
enter
sbb
dec
lret
sti
int3
cmp
mov
pop
pop
push
lret
movsb
jne
jge
mov
xchg
xchg
lret
xor
dec
pop
out
push
adc
or
movsb
jp
jg
ljmp
jbe
in
push
cltd
int
push
cmp
pop
inc
icebp
mov
loope
sub
lea
add
rcr
dec
ficoms
pop
fisttpll
sbb
sbb
inc
cmp
cmc
xchg
movsb
or
nop
clc
mov
lret
test
gs
gs
lods
push
shlb
cli
leave
es
push
scas
sub
xchg
arpl
push
jle
sub
sub
cli
xchg
add
cmp
aaa
or
lds
out
mov
push
popa
aaa
call
orb
mov
lahf
and
jne
xor
imul
test
xor
out
jl
mov
cmpsb
mov
shrb
jb
rcrl
xor
out
add
xor
int3
cmp
in
loop
xchg
sub
push
aaa
je
rclb
mov
fdivl
xor
bswap
les
mov
jnp
ss
push
mov
dec
pop
sbb
add
adc
push
gs
insb
mov
rclb
mov
cmp
enter
push
scas
pusha
mov
sub
in
add
aas
and
mov
push
stc
cwtl
jg
ret
or
xorb
push
xor
ja
aaa
jo
pop
leave
test
fs
mov
leave
inc
push
pop
or
mov
out
popf
lock
aaa
int3
aaa
push
movsb
cmp
in
lahf
popl
dec
adc
sub
or
and
pop
std
cmp
fsubs
fimull
pop
out
jo
inc
pop
jecxz
sarb
cmp
or
mov
fbstp
in
adc
lds
mov
pop
mov
push
adc
mov
bound
addb
inc
mov
les
xor
ss
jae
mov
jne
leave
fs
adc
dec
lods
out
lea
lahf
mov
vcvtps2dq
lea
mov
std
lds
enter
add
pop
je
hlt
add
ret
sub
fwait
sub
mov
xchg
ds
inc
pop
cmp
shrb
pop
cwtl
in
mov
mov
jl
mov
dec
adc
jle
mov
xor
test
lahf
mov
or
inc
sbb
test
pop
inc
je
pop
lock
iret
push
shll
cmp
fwait
cmp
xor
and
xlat
fcompl
mov
inc
jge
or
popa
xor
lods
rcll
or
jae
adc
loop
and
ss
add
sbb
cltd
testl
mov
mov
testl
scas
mov
add
push
mov
mov
sub
xor
aaa
push
shrl
pushf
into
xchg
and
pop
jnp
ljmp
outsb
leave
bound
or
mov
sbb
push
jae
shl
ret
and
add
xchg
outsl
and
mov
loopne
enter
ds
lahf
xor
add
ret
in
lds
lahf
fcmovnbe
sbb
aam
lea
xorl
ret
jne
outsl
mov
inc
or
and
stos
stos
sarl
jl
insl
roll
iret
jp
xchg
add
add
loop
pop
xchg
sar
scas
arpl
push
repz
pop
cmc
mov
mov
pop
adc
and
push
pushf
hlt
inc
dec
stos
jae
divb
enter
int3
stos
xchg
push
repz
insb
mov
movsl
fadd
jg
repnz
xor
jo
adc
test
add
inc
imul
out
sub
outsb
mov
sub
inc
sahf
jp
dec
daa
packsswb
add
adc
aad
outsb
xchg
fdivs
insb
or
test
sti
scas
mov
bound
adc
clc
das
dec
outsb
popf
xchg
add
out
outsl
addr16
fildl
test
rolb
stos
and
sti
mov
dec
sbbl
jg
out
push
or
ljmp
and
sbb
adc
and
fldcw
out
shrl
test
lcall
jl
mov
cmp
xchg
andl
push
mov
movsb
je
xor
test
lods
sub
pushf
mov
jb
pop
das
in
xor
xchg
xor
sub
mov
fisubrs
or
or
rcrl
push
js
out
insb
cwtl
mov
pop
int
add
mov
push
sub
sub
mov
shll
sbb
ss
clc
rol
int
mov
push
push
pop
add
and
fsts
test
rolb
clc
stc
bound
aad
push
pop
loope
lcall
int3
out
mov
mov
test
or
jae
addr16
xor
jl
test
outsl
push
inc
mov
pop
ret
and
inc
add
inc
push
sub
xchg
jo
nop
ror
adc
jno
sahf
mov
pop
jb
cltd
sbb
mov
and
loope
notb
jo
call
add
mov
arpl
call
ja
mov
mov
movl
and
mov
pop
insl
dec
hlt
div
clc
iret
xchg
testb
jle
cmc
push
in
inc
cmc
push
cs
aad
sub
je
mov
sbb
xor
cmp
jae
imul
popf
enter
cmpsl
mov
sbb
adc
ret
stos
mov
xchg
jle
and
enter
inc
cmp
cmp
mov
mov
cmp
je
mov
xchg
and
std
scas
or
dec
gs
sbb
mov
xor
test
rcr
ret
lcall
daa
insb
inc
ja
outsb
add
add
pop
out
xchg
lcall
test
sbb
cmp
popf
jns
stos
xchg
xor
sub
or
imul
inc
xlat
nop
lods
lods
mulb
mov
xchg
fistpl
xor
pop
pop
test
mov
jle
aas
rcl
lods
outsb
xchg
cwtl
lret
jne
pop
pusha
push
imul
test
lds
jmp
xchg
mov
pop
stc
pop
bound
iret
mov
push
sub
rdtsc
sbb
cmp
or
sub
xorb
in
xchg
gs
das
mov
inc
stc
mov
sbbl
imul
mov
push
pop
inc
pop
push
dec
jno
jecxz
stos
lods
scas
outsb
aad
faddp
xchg
ret
jns
inc
mov
lret
lahf
pop
mov
jbe
pop
mov
iret
pop
cmp
pop
sti
or
stos
and
mov
jmp
dec
arpl
or
xchg
popa
mov
imul
push
mov
add
jb
mov
enter
sbbl
das
mov
push
adc
jge
inc
ds
stc
test
mov
push
and
mov
push
push
enter
fstpl
mov
fcoml
repnz
xor
dec
jne,pt
pop
mov
or
rolb
ss
mov
sub
scas
jno
pop
popf
or
jp
jnp
xchg
push
mov
mov
lcall
out
sub
ja
dec
push
lods
movsl
sub
hlt
sub
cmp
ss
cltd
mov
adc
test
jmp
enter
call
push
incl
andb
mov
fsubrp
cmpsb
dec
inc
mov
pand
sbb
or
mov
mov
ret
xlat
dec
push
aas
dec
insl
jecxz
adc
mov
mov
adc
mov
inc
inc
mov
stos
aas
push
nop
mov
es
or
mov
or
gs
cmp
aas
sub
rol
add
lods
scas
ja
xor
push
test
push
scas
push
mov
scas
fldenv
adc
aas
xor
sub
or
sarl
cmp
adc
xchg
ljmp
es
stc
and
jns
fisubrs
jno
cmp
pop
loop
mov
mov
sahf
pop
mov
inc
jb
sbb
fidivl
jb
jmp
pop
xor
sete
fstps
adc
ljmp
aam
cli
xchg
mov
xor
int
cmp
mov
ds
push
inc
loope
sub
push
and
ja
rcr
xchg
fiaddl
sbb
mov
push
inc
push
xchg
push
cmpsb
pop
cmpsb
mov
push
cmp
out
ss
or
dec
mov
enter
cmp
dec
cmpsl
inc
dec
dec
or
out
bnd
sub
pop
stos
and
nop
pop
pop
cmp
pop
hlt
js
lods
iret
call
push
ja
xor
dec
data16
xor
add
lret
int
in
das
cld
inc
pop
mov
sbb
mov
adc
in
sahf
push
or
xchg
dec
dec
mov
mov
pop
dec
dec
or
rsm
testl
dec
sahf
lret
or
xchg
pop
mov
mov
out
imul
pop
inc
inc
push
aas
inc
inc
jl
sti
rolb
jae
fs
pop
cmp
cmp
dec
insb
ror
adc
movsb
loope
sbb
cmp
mov
cmp
fucomi
add
in
adc
popf
cld
icebp
cli
rcll
push
and
daa
frstor
cli
test
add
pop
shll
push
mov
loopne
jnp
call
adc
nop
mov
call
dec
mov
pop
inc
das
popf
scas
lret
sub
push
mov
sub
test
push
sub
les
xor
repnz
lds
shlb
hlt
icebp
outsl
repnz
andl
lcall
mov
xchg
adc
insb
subl
dec
sarl
cwtl
adc
mov
in
movsl
ds
and
fcmovbe
push
lds
jno
negb
shrb
cld
ret
mov
shr
xchg
cmp
fdivs
pop
into
dec
nop
stos
mov
pop
aas
jns
pusha
jge
shlb
incl
xchg
fstl
dec
fiadds
lcall
jle,pt
into
mov
jns
outsl
jecxz
jmp
pusha
jecxz
repz
frstor
cmp
lret
jno
out
insb
add
and
jno
sub
lods
lea
add
dec
pop
xor
psraw
lea
pushf
mov
aas
jno
and
lahf
cmp
movsl
mov
xorl
fsubrs
aad
arpl
stos
jo
insl
arpl
out
inc
fwait
add
jl
push
push
ja
cmpsl
lahf
popf
test
inc
add
sti
inc
pop
lahf
lret
movsl
push
in
cmpb
cmp
push
mov
jnp
in
sub
pop
insl
and
sub
push
lret
out
xor
jge
adc
daa
fsubrp
dec
sub
rolb
xor
cmp
pop
mov
dec
popa
fcomip
push
enter
xor
repnz
fs
pop
xor
push
lods
xorl
pop
mov
mov
cmpb
iret
stc
sti
loop
mov
xorl
les
mov
mov
ja
bound
popa
mov
push
add
movsl
push
xlat
aas
xor
sub
sub
sbb
mov
rcr
dec
test
lahf
mov
jae
cmpsl
add
cwtl
adc
inc
jnp
fwait
icebp
push
test
popf
and
inc
sub
mov
inc
adc
faddl
sbb
jo
adc
pushf
stc
arpl
je
dec
pushf
imul
out
lock
push
push
sbb
mov
cld
cmpsb
mov
cs
lds
movups
add
mov
data16
sub
push
jle
mov
sahf
cmp
or
add
pop
jmp
std
in
daa
mov
rorl
sbb
inc
pop
repz
movb
xchg
dec
loopne
lahf
rol
shrb
pop
ljmp
iret
inc
xchg
cmp
data16
jge
into
mov
adc
inc
inc
lods
loope
ret
movsb
mov
pop
pop
cwtl
cltd
sbb
mov
std
mov
out
loop
cmc
and
sbbb
je
or
xchg
adc
mov
shrb
cmp
fdivrs
jne
xor
sub
cmc
mov
adc
mov
loop
popl
and
jb
mov
add
pop
or
popf
test
js
cmpl
fstl
pop
fisubl
fsts
mov
adc
mov
scas
stos
fbld
cmp
lcall
fdivr
imul
aad
ljmp
xor
xor
inc
jno
pop
adc
push
adc
lahf
pop
inc
ja
lahf
and
loope
or
arpl
xor
repnz
and
mov
test
movsb
mov
clc
jb
pop
pop
push
xchg
xchg
insb
add
sbb
stos
pop
xchg
lcall
mov
cltd
mov
lods
rcll
test
adc
xchg
push
pop
cmp
test
call
mov
dec
jnp
adc
pop
lds
repnz
sub
cwtl
shlb
ja
in
addr16
lret
imul
scas
addb
ss
test
int
adcl
sub
xor
sahf
mov
mov
xchg
jmp
mov
xchg
into
cmpsl
call
sbb
jecxz
sbb
inc
scas
sub
cld
mov
inc
data16
lock
sbb
test
sar
add
ficompl
sub
mov
fisttpl
sbb
jmp
ss
mov
jbe
jmp
cwtl
shrb
sub
mov
sbb
sbb
xor
insl
sbb
add
imul
cmp
jo
mov
add
hlt
stc
jns
sub
xchg
inc
test
in
push
sbb
adc
mov
cli
lahf
negl
movsl
repz
pop
mov
sub
gs
outsl
adc
out
clc
mov
sbb
cmp
push
mov
mov
ja
adc
mov
es
inc
cs
test
test
adc
mov
inc
clts
call
add
out
out
dec
xor
mov
pop
out
push
stc
push
lods
xlat
movb
mov
push
into
cmp
add
push
push
loop
aas
xor
imul
dec
movsl
subl
loope
push
shlb
push
movsb
fs
jbe
aas
and
leave
xor
aaa
sub
pop
sbb
subb
fwait
movsb
pop
scas
adc
push
sbb
popa
push
stos
mov
sti
push
dec
or
enter
jbe
dec
jg
movsb
fldt
lods
sub
std
pop
xor
sbb
ja
mov
inc
repnz
clc
fs
mov
loopne
testb
cmp
test
dec
aad
pusha
mov
push
ss
insl
cltd
lret
adc
dec
test
roll
js
stos
or
xchg
mov
rorl
xchg
sarl
dec
jecxz
cmp
jmp
in
cmp
cld
in
inc
sbb
fsubr
std
mov
push
inc
lods
stos
dec
mov
je
inc
pop
je
xchg
shrl
add
add
push
inc
mov
push
cmp
jo
cli
or
jns
dec
iret
adc
or
mov
andl
shr
mov
sti
push
mov
sub
push
and
imul
adc
int3
dec
cwtl
aad
jle
arpl
mov
push
popa
outsb
out
jno
push
shl
enter
inc
fwait
xchg
push
or
fwait
jbe
outsl
xchg
mov
jg
sbb
repnz
out
xor
imul
and
stc
aaa
pop
jmp
cmpb
add
inc
push
xor
cmp
inc
mov
int
push
leave
xchg
nop
add
repnz
pop
inc
ds
and
rclb
cli
push
fcoms
jl
leave
adc
cmp
sahf
push
cmc
add
push
ljmp
iret
adc
pop
push
mov
xchg
sbb
add
insl
push
or
clc
cli
repz
pop
dec
push
cmp
push
iret
adcl
push
out
xor
cs
in
dec
mov
mov
sbb
insb
nop
ret
adc
stc
jl
rcr
mov
xchg
dec
and
pop
enter
and
jb
repnz
int
icebp
addb
mov
or
jmp
xchg
shlb
inc
push
dec
and
data16
lea
mov
aas
decl
stos
mov
les
addb
icebp
std
nop
imul
cmpl
ret
loop
jb
mov
scas
and
adc
xor
mov
dec
test
cmp
jno
xor
adc
ret
cltd
or
pop
into
mov
js
addr16
loop
mov
andl
mov
mov
cmc
rolb
outsl
mov
mov
adc
inc
inc
loope
sub
mov
in
inc
jecxz
xor
sub
mov
mov
nop
jle
xchg
dec
int3
data16
mov
pusha
cmp
mov
out
sub
into
xchg
inc
mov
xchg
mov
int3
jl
fiadds
cmpsb
and
leave
in
mov
pop
insb
xor
jbe
in
imul
test
or
pop
mov
out
jns
inc
aaa
pop
jae
lds
jmp
mov
inc
mov
out
pop
popa
daa
cld
test
test
adc
insl
pushf
iret
imul
mov
jle
add
cmpsl
cld
xor
scas
aam
jno
rol
lds
mov
jge
call
jge
aaa
cmpsb
sbb
xor
sbb
jae
lret
mov
xlat
sti
xchg
addr16
mov
shrl
ds
xor
mov
mov
sbb
and
lret
cmp
or
and
popa
inc
or
inc
dec
lahf
inc
hlt
sbb
pop
lret
aas
jae
inc
jp
mov
je
fmulp
mov
mov
cld
mov
pop
push
fwait
mov
sbb
cli
ret
je
inc
jle
cmp
cld
jge
push
test
fdivrs
lret
pop
push
inc
test
ss
cltd
dec
xchg
push
or
inc
jae
sub
out
sbb
dec
push
sub
add
cmp
sub
mov
fistps
mov
fcmovu
push
add
call
jge
xchg
mov
lods
inc
fsubl
lods
or
out
add
fmuls
test
ljmp
sbb
imul
sub
shll
inc
adc
mov
pop
scas
mov
stos
add
sahf
popf
imul
cli
in
mov
sub
outsl
mov
cmp
in
push
arpl
lds
arpl
jns
movsl
pop
xchg
inc
bound
rorb
lods
jmp
mov
loopne
mov
inc
or
xchg
arpl
cmp
pop
pop
xor
xchg
xor
lock
cltd
sbb
enter
mov
pop
xor
insl
nop
xchg
insl
insl
sar
rcll
ljmp
popa
xor
pushf
cmp
pop
loopne
cmp
aad
adc
mov
gs
test
jge
adc
outsb
mov
jnp
clc
aam
pop
inc
xor
pshufw
xor
ret
ds
out
cmpsl
test
sbb
pop
sbb
and
xchg
jl
adc
mov
mov
sahf
jmp
outsb
ljmp
add
and
sub
cmpsl
jne
cwtl
jnp
pop
out
push
je
mov
and
jb
sub
leave
es
das
xchg
jl
mov
jb
and
dec
imul
imul
xchg
or
cmp
imul
xchg
jnp
cmp
pop
jno
enter
cmpsb
mov
es
lret
sub
rclb
lahf
push
pushf
and
cmp
aam
sbb
push
push
sarb
out
aam
or
stc
inc
push
mov
test
jnp
cld
xchg
shl
mov
jns
dec
movsl
mov
lods
sti
cld
inc
inc
and
mov
sub
or
xor
jecxz
fmull
xchg
and
mov
out
add
jnp
pop
jo
mov
pop
imul
add
and
inc
in
flds
jno
inc
movsb
and
sub
cmp
jno
adc
std
sti
or
mov
jnp
or
jbe
imul
sbb
fcoml
inc
push
push
scas
clc
int3
mov
nop
pop
add
xchg
sahf
jb
test
dec
cmp
mov
add
jmp
xchg
fadds
push
mov
and
pop
xchg
jo
mov
lret
xor
jg
and
mov
dec
and
outsl
jb
adc
and
lods
jb
xor
testb
mov
push
imul
cmp
fisubl
insb
cs
pop
mov
insl
into
ror
pusha
xchg
mov
mov
sub
mov
lods
insb
xchg
adcb
fadd
and
shlb
rolb
orb
in
lret
or
and
mov
sbb
jmp
dec
mov
sub
iret
out
addr16
loopne
inc
lds
iret
ss
cmpsb
pop
int
or
and
mov
lcall
xchg
fimull
imul
pop
xchg
push
cmc
dec
shr
mov
ds
xchg
notb
leave
out
cmp
nop
add
sti
adc
ss
xor
fstl
test
add
sarb
jae
cmpsb
or
ss
in
add
ja
or
cli
addr16
sub
pop
lret
stos
xchg
shrl
jmp
cld
leave
jb
nop
xor
push
cmpsl
xchg
lcall
in
mov
int3
xor
sbb
cmp
jge
xchg
std
jnp
push
cltd
cli
aas
cmpsl
cmp
pusha
jge
ret
sub
cmp
dec
adc
fdivrs
cmpsl
repnz
xor
mov
hlt
cs
xchg
in
xchg
jmp
mov
sbb
pop
cmpsb
test
adc
clc
adc
push
sub
mov
push
es
scas
arpl
sbbl
sub
outsl
lods
div
es
data16
adc
mov
inc
push
push
sub
xchg
cmc
xchg
cmpsb
out
rcr
xor
je
cmp
jecxz
dec
push
xor
movsb
cli
push
es
add
pop
int
xor
inc
jno
aam
daa
push
or
fmull
xchg
bound
aas
xchg
mov
mov
and
arpl
adc
cmp
test
push
and
bound
sub
push
mov
fdivr
mov
sbb
jae
out
mov
add
fs
ffreep
cmp
inc
subl
popf
or
pop
inc
push
push
das
sbb
and
lods
mov
int
das
lret
imul
xor
sbb
les
pop
xor
outsl
rorl
pop
sub
cmpsb
mov
sbb
jbe
mov
push
jg
shrb
jge
pushf
cmpsl
sbb
or
and
jnp
xor
loope
sahf
push
mov
cmc
adc
push
fldz
fnstsw
js
add
fistl
or
fildl
rclb
daa
mov
addr16
test
hlt
adc
mov
and
mov
jecxz
pusha
cmp
or
aad
sub
std
and
sbb
imul
mov
or
sbb
lock
shl
jae
jno
das
sub
mov
addr16
test
les
push
cld
enter
push
cmp
xchg
insb
cli
testl
ds
mov
mov
dec
inc
jg
fbstp
or
leave
js
daa
mov
jmp
in
pop
pop
sbb
add
lock
mov
insl
mov
xchg
andps
pop
pop
mov
lock
psrld
sbb
popa
stos
jle
icebp
mov
sub
enter
lret
fadds
fs
adc
pop
sub
repz
adc
jecxz
push
cmc
or
pusha
push
andb
mov
lahf
jl
dec
cmc
cmp
aas
xor
in
sub
dec
push
jne
les
dec
popa
push
hlt
jecxz
out
daa
icebp
cmp
stos
mov
adc
dec
sarl
push
mov
jmp
mov
pop
pop
mov
pop
or
push
imul
push
icebp
and
adc
xchg
mov
stos
rcll
mov
cmp
sbb
ljmp
out
mov
popa
cmpb
cld
iret
mov
je
cmp
in
jae
sub
out
xchg
mov
sbb
add
xchg
add
mov
push
adc
xor
xor
cmp
pcmpgtb
mov
ficoms
pusha
push
jl
push
sarb
aas
pop
mov
imul
xchg
jecxz
mov
add
mov
repz
cwtl
add
xlat
pop
loope
icebp
bound
in
mov
sub
jle
pop
pop
ss
jp
cmp
and
mov
cltd
mov
orps
dec
popa
push
popa
xchg
call
fsubrl
and
push
cld
pop
cmp
icebp
xor
test
pop
sahf
cmp
psubsb
into
into
das
push
test
in
mov
int3
jne
pop
xchg
add
push
mov
push
call
outsl
lock
mov
fwait
or
jmp
mov
stos
sub
inc
enter
mov
cltd
adc
jae
adcb
dec
or
xchg
xchg
and
xlat
mov
mov
pop
jbe
cli
lods
cmp
push
cmp
sahf
in
scas
adc
bound
xor
cmp
in
dec
push
cmp
pop
xor
call
mov
cmp
xor
xchg
leave
xchg
mov
imul
push
adc
mov
mov
xchg
push
xlat
js
push
jno
shll
push
cmc
and
mov
xchg
loop
movsb
pop
lock
insl
arpl
cmp
mov
daa
mov
and
ficoml
pop
push
stos
test
and
or
cmc
add
es
cmp
or
dec
mov
movsb
jmp
and
xchg
mov
push
out
cltd
sub
or
stc
iret
mov
sbb
imul
outsb
mov
fadds
xchg
cld
dec
jns
stos
stos
cli
bound
out
xor
pusha
pop
fmuls
test
shll
adc
lret
push
cmc
mov
lahf
in
ljmp
test
jp
cmpsb
ja
loope
imul
jb
jp
addr16
jbe
sbb
jge
inc
lcall
loopne
ja
mov
loop
aad
push
fidivrl
cld
ss
aad
xor
mov
push
push
ss
movsl
mov
pop
sahf
pop
mov
adc
in
xor
ss
adc
jle
jnp
or
arpl
jge
leave
decl
das
divb
add
sbb
jo
lahf
in
push
mov
cld
dec
inc
push
shrb
pushf
cwtl
mov
stc
enter
decl
andb
filds
cmc
sub
rcrl
jnp
sub
xchg
push
shl
in
xchg
cltd
leave
lock
mov
out
lock
arpl
pop
xor
sub
mov
cmp
add
sub
ret
inc
insb
adc
mov
push
cltd
hlt
sub
and
mov
out
into
xchg
xchg
into
insl
jns
cmpb
ja
add
into
adc
mov
or
and
mov
jae
lods
insb
pop
jnp
lea
push
inc
iret
push
sbb
cmp
or
sub
repz
jne
je
cli
add
jg
fsubp
fldt
ficompl
shrl
pusha
adc
jno
mov
dec
and
addl
cltd
lds
nop
xor
cmp
pop
pop
sbb
inc
inc
pushf
icebp
push
xchg
jg
testl
int3
repz
inc
cmpsb
push
popf
jmp
subl
inc
insl
jnp
stos
hlt
mov
sub
in
xchg
sub
sub
leave
dec
sbb
fnstcw
xchg
jns
test
inc
arpl
stc
fwait
andl
imul
mov
and
addr16
or
je
add
mov
shll
loop
or
gs
test
add
xchg
nop
dec
lods
push
dec
push
and
iret
xorl
out
mov
inc
xor
or
mov
stc
mov
cmp
mov
iret
movsb
hlt
aas
dec
stos
sbb
sub
mov
push
cmp
mov
lds
mov
cltd
clc
lahf
cltd
aas
add
pop
in
daa
movsl
sub
in
flds
sbb
lcall
xor
addl
popa
aam
fbstp
fidivl
fmull
jno
xchg
repz
sbb
out
jge
movsl
jns
in
shll
lahf
push
push
xchg
pop
insb
call
imul
idivb
mov
call
outsl
cli
aaa
pop
hlt
pop
sub
mov
pop
fcoms
int3
sbb
ja
mov
lret
aam
or
jg
xlat
mov
sahf
adc
into
or
cs
test
pop
sub
or
sbb
loop
xchg
mov
mov
adc
jg
not
pop
cmp
push
stos
test
enter
movsl
adc
mov
xchg
insb
test
inc
fidivrs
jnp
bnd
lods
and
push
ret
mov
inc
push
and
cmp
fnstenv
scas
in
sbb
mov
test
push
icebp
jle
stos
push
cmp
sub
push
les
movsl
inc
xchg
xor
in
or
fistpl
push
cld
mov
xor
jecxz
lods
decl
mov
inc
movsb
fwait
mov
mov
loopne
aas
imul
ret
mov
mov
jp,pn
inc
or
ret
iret
pop
insl
sub
and
ficompl
jp
lahf
xor
and
mov
cli
popa
pop
and
pop
into
xchg
imul
or
or
jnp
mov
xlat
sub
sub
aam
push
out
jns
fadds
adc
cld
dec
jb
xchg
das
and
iret
pop
mov
idivl
jae
stos
out
jae
push
pop
lods
adc
add
les
rcll
mov
inc
pop
dec
fsubrl
mov
filds
xchg
mov
subl
mov
xchg
outsb
cmp
lahf
sub
testl
dec
mov
fisubs
dec
xor
sbbb
pop
pop
les
and
sbb
sbb
adc
movsb
pop
inc
push
adc
inc
out
ficompl
ss
mov
sub
out
mov
xor
loopne
add
xor
mov
xor
push
mov
sub
push
testl
adc
sahf
std
adc
mov
lahf
ljmp
jle
fistl
xor
mov
or
mov
xor
mov
or
jecxz
sub
daa
pop
fs
inc
fisttpll
push
inc
xchg
fdivs
icebp
or
in
out
jnp
aad
mov
and
data16
cld
mov
cmp
fnstenv
cmp
jb
leave
out
cmp
repnz
nop
out
nop
in
outsl
xchg
pop
pop
out
outsl
loop
xchg
les
les
cmc
lret
outsb
loopne
pop
ret
jg
repnz
or
xchg
mov
sub
data16
aad
mov
mov
cmc
pop
cmp
sarb
mov
fs
movsb
std
lods
mov
mov
xlat
jecxz
loope
sub
pushf
push
jae
mov
pop
dec
add
ja
pop
mov
std
and
sub
sbb
lods
xor
int
jae
adcl
and
dec
pop
out
sbb
sarl
jnp
xchg
cmpsl
icebp
int
popa
bound
or
xchg
test
stos
jl
leave
rorb
pop
or
or
add
shrl
call
mov
sbb
add
sti
es
cmpsl
and
ljmp
aad
jne
int
incb
neg
cltd
es
mov
out
out
rorl
inc
mov
push
push
dec
push
cmp
push
inc
xchg
and
sub
jb
loop
mov
mov
or
pop
hlt
xchg
imul
les
out
xor
or
iret
lods
adcb
lahf
xchg
sub
out
xor
sbbl
mov
mov
dec
cmp
push
adc
or
mov
aam
roll
sub
mov
mov
xchg
fisttps
lret
cwtl
jmp
mov
mov
inc
mov
daa
xor
sbb
push
imul
into
mov
roll
in
jl
pop
iret
insb
push
pusha
mov
imul
stos
push
dec
push
imul
inc
cwtl
sahf
test
out
iret
sub
repz
fsts
pop
push
ds
xor
daa
shufps
inc
add
jmp
dec
repz
fadd
mov
and
dec
das
sbb
pause
lret
cld
movsb
loop
out
inc
cmp
and
dec
xor
adc
xchg
adc
dec
push
push
xor
adc
and
cmp
stos
test
add
cmp
das
jne
cmp
jae
jmp
jg
dec
mov
mov
mov
jns
pop
rclb
test
xchg
sub
int
pusha
jl
cmp
inc
jg
push
outsb
aad
scas
and
and
call
adc
mov
out
pop
fldt
dec
int3
call
fcoml
xchg
push
and
add
xor
jmp
and
push
jo
xchg
mov
mov
push
insl
sub
movsb
push
sub
xchg
ja
mov
add
icebp
mov
sbb
pop
jg
out
fsubrl
mov
cltd
mull
jp
push
mov
stos
and
sbb
sbb
pushf
test
cmp
mov
ret
jp
push
mov
popa
out
cmpsl
xchg
ret
jnp
std
and
out
push
lods
or
movsl
cmp
mov
iret
rorl
dec
in
mov
outsl
jae
push
hlt
mov
jo
mov
mov
or
cmc
adc
xor
and
fcomps
xor
xchg
cmpb
sbbl
or
shll
popa
jmp
cli
jo
mov
cmpb
jecxz
lds
or
lods
dec
mov
insb
mov
mov
push
outsl
arpl
notl
fstl
jg
mov
cmpsl
stos
and
adc
pushf
popa
psraw
dec
and
xor
xor
push
leave
sbb
imul
out
aaa
gs
movsb
mov
shll
sbb
enter
iret
sub
movsb
pop
push
xchg
pop
or
in
ja
ds
in
dec
test
roll
insl
in
jb
xchg
mov
mov
push
push
shll
push
pop
mov
add
jl
pop
and
cltd
push
or
xorb
addr16
loope
and
scas
dec
loope
out
mov
xchg
addb
repz
jl
rcll
jo
xchg
xor
jbe
daa
in
mov
add
aaa
test
lods
sub
scas
add
xor
loope
mov
mov
sbb
mov
push
lret
enter
mov
jle
out
pop
out
lds
in
loope
adc
outsl
mov
adc
xor
ja
pop
push
mov
lods
lret
add
xor
or
insb
out
sub
mov
xchg
out
bnd
jns
jbe
jecxz
ljmp
stos
test
scas
xchg
jb
aaa
scas
test
jle
scas
roll
lcall
mov
lea
mov
out
dec
out
js
out
push
pop
repz
stc
sub
pop
sahf
push
sub
pop
xor
in
les
xor
in
jl
loope
div
dec
arpl
mov
fdivrl
scas
subb
stos
xchg
jbe
sbb
in
out
test
xor
cmc
adc
mov
aaa
and
mov
stc
ja
jns
int
jno
and
stos
lods
ds
sarl
push
sbb
jge
mov
pusha
orb
fidivrl
sti
adc
adc
das
test
sbb
arpl
add
clc
adc
or
adc
les
pop
out
push
add
test
outsl
jns
ss
ror
xchg
sbb
fnstenv
imul
iret
mov
push
and
sbb
loope
scas
enter
xchg
fldt
mov
pminsw
pop
jns
into
mov
push
dec
lea
sysenter
add
mov
mov
xchg
cmc
test
leave
xchg
fs
push
or
mov
int
jg
jo
test
jmp
ja
cmp
adc
xor
icebp
pop
mov
inc
nop
loop
dec
cmp
fiadds
jle
or
int3
xor
iret
sub
sarb
sub
aaa
or
jo
cmp
sbb
mov
das
imul
or
inc
ficomps
scas
mov
stos
dec
push
cld
sti
popa
xchg
or
inc
dec
iret
push
sub
dec
loopne
cmp
mov
sbb
idivb
arpl
xorl
push
and
insl
int3
test
scas
cwtl
pop
sbb
and
sahf
jno
pop
int3
sbb
inc
mov
movsb
sub
xchg
out
adc
je
loope
or
pushf
push
or
in
jo
loop
decb
jmp
mov
imul
jl
pop
adc
jnp
fs
scas
fdivl
enterw
inc
lcall
mov
repz
in
jb
jle
xor
test
iret
ss
mov
xchg
push
fucomi
or
cs
out
arpl
sbb
jmp
fisubrl
loop
or
test
pop
mov
bound
fcomip
sbb
jmp
imulb
fbstp
jecxz
sti
jl
insb
or
adc
xor
mov
and
test
push
cmpsl
inc
and
cmp
jnp
sub
mov
gs
stos
shr
daa
dec
mov
adc
add
lahf
cmp
mov
nop
js
xor
arpl
add
fnstenv
add
mov
mov
ds
movsb
mov
repz
and
push
jnp
add
mov
ret
popa
je
jne
fldl
in
mov
jmp
lret
test
dec
scas
mov
shrl
sub
cmp
jg
adc
mov
divl
xor
lcall
pusha
test
mov
mov
mov
add
mov
inc
jmp
xor
loopne
push
mov
or
loop
dec
mov
leave
dec
or
test
mov
popf
fcomi
cmc
jbe
ss
jge
arpl
shll
adc
in
loope
xor
and
mov
and
ja
test
fnstcw
mov
push
ds
rcrl
out
cmp
mov
int3
repz
jecxz
test
jo
call
out
fidivs
or
sti
push
rcll
leave
les
and
push
rorb
shlb
stos
divl
jno
mov
sbb
pop
mov
sub
clc
jecxz
icebp
in
les
mov
aaa
or
mov
mov
dec
mov
aam
dec
lods
push
test
divb
mov
push
adc
pop
mov
mov
in
pop
fucomip
mov
push
or
cmp
test
dec
mov
pop
cmp
out
push
adc
mov
sub
outsl
mov
jo
sub
and
or
add
repnz
in
ret
sti
xchg
cwtl
xor
or
cmp
fildl
ja
dec
ja
mov
les
out
int3
repz
xor
pop
out
sub
out
add
cmp
pop
aaa
adcb
lret
out
ds
mov
jo
int
jg
call
repz
mov
in
add
aaa
jnp
inc
enter
or
mov
mov
mov
lods
adc
push
add
or
outsb
or
cmp
xor
add
push
push
stos
movsl
subl
int
fiaddl
mov
push
call
imul
arpl
fildll
adc
clc
dec
mov
enter
stos
push
dec
xchg
push
or
pusha
pop
out
jg
xchg
loopne
int3
push
mov
add
pusha
fadds
mov
popf
cwtl
push
bnd
idivl
rcrb
scas
scas
xchg
pop
ret
lds
sbb
outsb
ret
adc
mov
sub
inc
push
inc
cltd
pop
lock
cmp
jns
xorl
xchg
fucomp
push
dec
dec
mov
pop
sbb
dec
inc
aas
sahf
mov
xchg
ss
xchg
mov
movsb
and
js
mov
mov
lea
push
sub
test
mov
in
mov
addr16
inc
je
inc
stc
mov
mov
fimuls
jge
push
imul
add
mov
out
xchg
mov
fwait
sbb
lcall
and
jmp
aam
mov
mov
mov
cli
cmpsl
push
xor
ss
pop
into
fnstsw
dec
cs
sbb
in
mov
shrl
aad
fwait
or
call
ret
out
rcll
repnz
mov
cmpsb
pop
xchg
out
or
mov
mov
cwtl
jno
lock
fimuls
out
lods
in
dec
scas
aad
dec
ds
scas
mov
add
movsb
in
push
cli
push
and
cs
jbe
xchg
cmp
sbb
cmpl
pop
faddl
or
fldcw
sbb
pop
push
cmp
sbb
xchg
daa
mov
dec
pop
jmp
inc
out
test
negl
or
sbb
xor
xchg
cmp
les
and
adc
adc
stos
andps
push
iret
shl
xor
jmp
push
or
sahf
lcall
bound
mov
add
and
ret
adc
jb
dec
push
cmp
inc
or
mov
fistl
pslld
mov
cld
nop
jno
adc
push
ljmp
xor
stc
xchg
push
xchg
cli
sbb
add
sub
sub
les
ds
stos
repz
dec
int3
mov
fildl
xchg
mov
int
and
stos
stc
fwait
adc
outsb
push
clc
mov
imul
out
cmpsb
xor
nop
mov
xchg
sbb
out
scas
sahf
aaa
pushf
sbb
inc
jne
out
jb
push
cmpsl
hlt
push
js
loop
sub
xchg
into
push
jb
push
test
nop
pop
loope
pop
js
adc
outsl
repnz
pop
adc
aad
dec
and
loope
pop
into
pop
pop
and
in
mov
ja
fnstenv
imul
dec
nop
mov
jmp
push
inc
lds
int
scas
sub
cmp
rorl
jmp
sub
xor
hlt
int3
cmp
xchg
jp
jb
push
scas
mov
fisttpll
cmp
adcb
call
cli
mov
lods
add
cmp
jno
mov
jbe
mov
outsb
mov
pusha
or
and
mov
adc
push
fcomi
dec
sub
mov
addb
mov
jmp
dec
imul
jno
pop
movsb
xor
inc
sahf
cmp
dec
inc
in
pop
push
in
enter
inc
xor
lahf
cmp
sbb
push
xchg
mov
daa
xor
movsb
lcall
xchg
mov
lret
loopne
bound
mov
xchg
and
into
mov
sub
or
xchg
sub
inc
or
sti
jmp
call
daa
sti
xchg
mov
fisubs
stos
int3
mov
xor
sbb
aad
fwait
add
xchg
dec
xchg
clc
or
subl
xchg
mov
mov
shl
jmp
loopne
clc
pop
dec
jp,pt
shlb
sbb
shll
cmc
mov
jle
insb
push
xchg
lret
mov
ffreep
xorb
push
or
lea
inc
xor
out
inc
add
je
xor
mov
ljmp
sub
jbe
ss
ds
int3
lret
xchg
cs
inc
sti
jae
inc
mov
cwtl
cmp
xchg
sti
call
mov
adc
or
mov
sbb
mov
pop
or
xchg
out
mov
jecxz
mov
ret
pushf
xor
mov
cmp
lods
sub
cld
mov
orl
xor
loopne
aam
pop
add
xlat
cmp
push
pop
loopne
lds
jo
or
adc
cmc
pop
lds
jp
lds
adc
adc
in
and
adc
out
test
mov
mov
xlat
cmp
push
mov
sbb
mov
lcall
out
push
and
xchg
and
dec
stos
pusha
out
mov
outsb
dec
add
pop
add
adc
aam
mov
xor
mov
xor
les
lret
aaa
lods
repnz
fwait
jmp
mov
and
and
clc
jo
sbb
push
std
mov
dec
pusha
test
out
push
inc
pop
jo
mov
xor
push
jne
mov
rcl
inc
pop
fs
push
cmp
cmpsl
movsl
push
xor
push
pop
rolb
xor
ds
int
ficomps
into
rcrl
add
jb
sbb
lock
or
or
xor
nop
enter
sbb
xchg
dec
inc
testl
decb
shrl
mov
iret
jo
adc
jae
mov
loope
xchg
lcall
insb
xor
out
out
mov
insb
test
or
mov
add
dec
stos
stc
cli
mov
cmp
ja
sar
mov
icebp
pop
jns
or
sti
fisubl
push
rolb
mov
jno
insb
or
jl
into
in
pop
andl
roll
into
mov
cmp
jne
outsb
das
cmp
mov
mov
mov
sti
nop
in
push
das
sbb
mov
test
sbb
fwait
pop
out
fdivrp
sbb
pop
pop
or
pop
mov
bound
mov
pusha
es
xchg
lds
lret
and
aas
call
and
lcall
in
test
ret
test
jne
adc
pop
insb
sbb
sub
fdivr
rcrl
ljmp
dec
outsl
jne
leave
movsb
popa
scas
cli
repz
das
sub
mov
arpl
std
mov
push
dec
add
lea
push
cmp
lods
int3
loope
xor
jne
or
cmp
push
repz
adc
mov
repnz
pop
leave
jb
adc
xorb
repnz
pop
xchg
iret
rolb
or
cmp
adc
or
push
sub
inc
dec
and
mov
cld
dec
sbb
sub
inc
xor
push
imul
inc
or
fistl
mov
hlt
pusha
je
pushf
jmp
leave
movsb
cmp
inc
sbb
xorb
xor
popa
aas
out
mov
sarl
fisttps
out
dec
fistpll
sub
sbb
std
dec
fcomps
cli
lods
shrl
xchg
lret
xor
mov
or
testb
addr16
pushf
ja
lock
inc
sub
les
sub
jl
hlt
cld
movsl
movsb
sti
xchg
lahf
addl
or
xchg
mov
mov
sbb
dec
lea
mov
lock
mov
and
jae
sarb
les
cmpsb
rcl
mov
push
aas
aam
add
adc
mov
and
adc
sti
inc
leave
int
call
in
mov
repnz
adcb
mov
sub
jnp
aad
jo
sbb
pop
xchg
mov
jmp
xchg
adc
adc
cmp
cmp
int
or
add
and
and
cmp
sti
jne
adc
out
pushf
add
xchg
jae
or
int
incb
jecxz
scas
cmp
mov
in
inc
cmc
scas
mov
jbe
lods
cmp
imul
adc
cs
leave
cmc
pop
popa
mov
test
cltd
jae
loope
icebp
dec
sub
adc
repnz
sbb
sbb
inc
mov
push
xchg
adc
cld
mov
jl
xchg
ja
inc
xlat
dec
cmpsl
dec
lods
push
fcomps
cld
push
out
xchg
inc
aas
dec
lods
jmp
adc
xlat
and
xchg
divl
pop
adc
push
mov
ja
push
mov
cmc
ret
mov
aam
daa
mov
sub
mov
imulb
xchg
xchg
insl
aas
and
and
mov
outsl
jb
aam
je
sub
push
sbb
ficoms
pop
pushf
leave
add
scas
push
into
push
jmp
mov
sbb
adc
adc
or
mov
mov
sbb
cwtl
mov
cmp
arpl
mov
sub
push
add
dec
pusha
lret
shl
sbb
push
lret
imul
adc
adc
cmp
dec
jecxz
pop
or
insl
insb
mov
addb
mov
sbb
dec
or
fisttpll
pop
gs
inc
ds
test
out
push
jb
inc
jmp
sub
pushf
int3
add
jecxz
push
imul
cmp
xor
mov
jae
test
inc
dec
push
mov
out
dec
adc
push
bound
mov
jno
subb
rcll
je
lods
and
adc
cs
call
rorl
andl
mov
and
or
xchg
pop
jl
data16
cmp
push
lret
ret
cli
cmp
repnz
iret
fwait
mov
les
scas
mov
cwtl
and
out
ficomps
cmp
in
inc
pushf
test
xor
dec
or
mov
adc
sbb
xor
inc
inc
push
les
roll
cld
hlt
cwtl
addl
bound
cmp
adc
int3
ficompl
jecxz
lea
xchg
hlt
push
subl
push
pop
xchg
cmp
bound
and
imul
mov
cmc
or
xchg
imul
fs
sbb
in
push
ja
adc
test
nop
mov
cmp
sbb
faddl
fcmovnb
shll
sbb
cmp
push
loope
adc
mov
ljmp
in
cmpsl
orl
fwait
mov
push
shlb
fistps
lea
mov
fwait
subl
bound
test
sub
push
xchg
xlat
lds
sar
hlt
and
mov
loop
pop
xchg
push
pushf
das
and
outsl
pop
inc
sbb
pop
ds
add
repz
push
jl
frstor
cld
add
and
and
adc
fiadds
test
jae
scas
sub
in
fmulp
jg
lods
sub
sbb
sub
cmp
loope
push
mov
xchg
mov
fwait
enter
stos
xorl
add
or
dec
ficomps
mov
imul
or
xor
mov
xor
inc
stos
mov
xchg
pop
je
push
setne
pop
lret
jno
pushf
jo
out
adc
mov
movsl
mul
mov
leave
fstpt
adc
and
ja
jbe
fstpl
enter
jne,pn
repnz
int
out
push
cmpsl
lret
inc
sbb
addb
stos
mov
sbb
pop
fstl
out
testb
xor
sub
stc
jno
mov
loope
daa
dec
mov
jp
add
loop
ja,pn
xor
mov
xor
jb
dec
sub
or
ret
inc
fs
insb
add
fsubrs
mov
je
lret
idivb
jl
test
sub
mov
sbb
or
lea
cmp
jb
imul
popf
lcall
int3
lds
cmp
addb
dec
xor
leave
sbb
es
add
mov
sub
shufps
ja
arpl
jae
dec
test
addr16
subb
mov
xor
lcall
mov
add
call
sarl
into
xchg
inc
shl
stos
shrb
movsb
jge
enter
test
xor
jl
outsb
mov
test
sub
push
mov
mov
data16
out
jne
cmp
std
rolb
scas
fistps
add
mov
cmp
imul
inc
sub
xlat
adcb
and
pop
push
arpl
dec
and
add
cmp
mov
mov
std
jl
testb
dec
push
or
insb
mov
icebp
sub
mov
in
pop
setne
aad
push
or
insb
add
ret
imulb
and
fcom
jno
addr16
xchg
pop
leave
and
add
imul
js
mov
and
push
jl
dec
dec
jns
inc
insl
sbb
mov
cmp
push
jl
push
push
dec
clc
hlt
fildll
ja
mov
fldl
inc
jmp
sbb
mov
sub
dec
popa
inc
pop
iret
ret
lods
cmp
int3
push
nop
cmp
out
cmp
rcll
cmp
jge
dec
enter
or
pop
insl
test
fistpl
mov
cltd
fwait
call
xor
mov
push
push
mov
xchg
cs
sub
push
add
sarl
mov
test
inc
jmp
inc
jne
jbe
in
xor
or
dec
add
push
jb
mov
inc
aas
push
and
sub
sbb
fistpll
sti
into
mov
mov
fnstsw
in
sbb
fst
jbe
fcomi
and
adc
dec
sarb
xor
icebp
add
in
or
lret
or
dec
insl
popa
mov
xor
sbb
jl
insb
divb
daa
out
dec
scas
int
mov
movsb
mov
sbb
and
push
movsl
aam
inc
int
jecxz
scas
int
push
pop
mov
lods
lcall
in
cmpsl
cmp
leave
pop
cmp
jb
dec
js
ficoml
stc
in
and
mov
and
mov
in
xchg
add
enter
inc
mov
sub
and
int
aam
push
mov
cmp
xor
dec
xchg
popf
lcall
das
push
sub
out
fs
dec
call
mov
movsb
scas
shr
ficompl
xor
jl
fidivrs
imul
fcoms
mov
shrl
xor
dec
pop
cmp
outsb
fidivl
outsl
dec
pop
gs
mov
push
mov
push
iret
jp
hlt
in
fcoms
mov
call
pop
rolb
lret
pop
iret
adc
xor
test
enter
jo
out
pop
adc
and
frstor
push
scas
adc
pop
jecxz
mov
into
nop
dec
fcomps
mov
sahf
lods
push
std
pop
stc
xchg
mov
push
inc
notb
imul
add
sahf
push
adc
dec
inc
dec
test
lods
mov
mov
mov
cwtl
call
lret
outsl
xchg
ljmp
mov
cltd
add
sub
call
push
dec
xor
pop
push
jmp
mov
lods
push
test
pop
fisttps
movsl
mov
mov
inc
ds
push
mov
push
jge
stos
inc
xor
scas
dec
mov
cld
in
push
mov
pop
rcl
fbld
lret
mov
adc
push
jmp
es
cmp
fcoml
negb
sahf
aas
xorl
sub
push
addr16
outsb
addb
cltd
mov
popf
fcoml
mov
sbb
mov
mov
pop
sub
movsb
push
inc
stos
mov
movsl
jns
pop
cmpsl
rcrb
in
or
dec
mov
mov
and
push
in
or
scas
pushf
cltd
out
lods
scas
test
jg
cld
outsb
jo
pslld
or
adc
inc
out
shrb
out
inc
and
mov
adc
add
mov
add
shrl
fisttpl
sub
popl
push
mov
pop
and
or
mov
call
jo
cwtl
pop
fidivrl
pop
jns
js
lahf
cmpsb
andl
push
lock
inc
scas
insb
cld
mov
push
push
pop
mov
and
mov
mov
lods
inc
jmp
addr16
sbb
mov
mov
iret
push
sub
aaa
hlt
sub
fs
test
insl
xchg
stos
divb
pop
jg
jb
sbb
insb
sbb
xor
add
cmp
cld
jnp
adcl
addr16
adc
push
jmp
add
ret
pop
add
dec
bound
xor
adc
xchg
mov
ss
imul
jae
mov
or
mov
test
sub
arpl
lods
cltd
push
inc
aad
jp
pop
shlb
out
xchg
jnp
xor
arpl
pop
mov
test
mov
sub
or
orb
lret
mov
lret
in
mov
pop
inc
xor
sarl
jecxz
mov
pop
adc
or
sub
stos
cmp
jle
mov
sub
sbb
mov
push
xchg
fs
mov
mov
lret
jbe
inc
in
ja
or
mov
shrb
cmpsl
subl
jae
mov
std
repnz
mov
aam
fdivs
cmpsb
lods
mov
fsubrl
daa
cmp
jo
dec
das
pop
test
scas
or
pusha
loopne
pop
loope
add
xor
mov
pop
out
adc
iret
dec
repnz
pop
fdivs
call
xor
inc
cld
outsb
cmp
testb
int
jle
clc
cmpsl
adc
inc
inc
mov
jp
or
in
call
aaa
rcl
cmp
add
and
test
lret
jb
cli
cmc
jae
out
and
mov
out
outsb
addr16
cltd
inc
cmpsb
adc
jns
adc
enter
in
leave
scas
cmp
imul
lea
fmulp
repz
cld
neg
insl
pop
mov
cmp
std
dec
dec
push
scas
decl
hlt
rclb
dec
int
push
jp
bswap
ljmp
in
div
pop
cmp
lret
stos
xorb
pop
ror
dec
xchg
mov
fidivrl
mov
sbbl
mov
test
shl
jb
rcll
cmp
or
icebp
push
fisubrl
loope
sti
loopne
movsb
pop
adc
mov
pushf
cmp
jnp
pop
mov
pop
push
insl
adc
push
mov
cmp
outsb
stos
addr16
inc
js
cld
lock
icebp
ljmp
xchg
pop
sbb
fstpt
xchg
rclb
mov
dec
daa
les
xchg
mov
push
dec
dec
sbb
test
test
shrl
lahf
addr16
je
cmpsl
test
mov
sub
std
inc
fsubl
jmp
gs
ficompl
bound
test
dec
std
xchg
gs
dec
scas
rcll
add
push
mov
add
sbb
cmpsb
cmp
or
cmp
sbb
push
xor
cmp
outsb
dec
lret
dec
pusha
xchg
mov
and
mov
outsl
loope
ret
sti
jl
push
jl
add
or
xchg
int3
test
call
outsb
or
pop
movsl
fldcw
jg
bound
bound
mov
mov
fcomip
mov
orb
ficompl
cmp
add
pop
add
pop
out
sbb
clc
add
das
leave
xchg
addb
xchg
jmp
pop
pushf
mov
xchg
pop
mov
sub
out
mov
mov
xor
mov
xchg
cwtl
fcompl
mov
push
jbe
xor
add
leave
push
leave
loopne
cltd
ja
cld
inc
adc
popa
adc
sub
push
add
add
adc
sub
mov
push
sub
mov
fistpll
xor
xchg
mov
leave
popf
lret
dec
lea
and
and
loopne
dec
aaa
aam
daa
call
sbb
mov
enter
test
lahf
addr16
mov
sbb
pop
push
lret
out
or
xchg
jl
push
pop
ljmp
or
sbb
inc
lods
mov
das
fimuls
jno
leave
jg
dec
cmc
xchg
sub
imul
pop
or
popa
cld
jbe
fwait
sbb
inc
adc
mov
cmp
mov
or
or
mov
mov
ret
ret
mov
ret
outsb
repnz
sbb
sbb
stc
xchg
sub
or
test
in
fcom
mov
cmp
cltd
test
ss
in
jp
gs
cmp
mov
sbb
or
loop
lret
push
push
in
sub
jp
adc
ds
mov
push
fnstsw
xor
add
rcrl
jl
lods
jno
jge
mov
jb
xchg
cld
repnz
sub
adc
les
dec
mov
int3
add
fcoml
es
mov
adc
cmc
sbb
cmp
nop
mov
sub
adc
sub
mov
xchg
in
sub
xor
cmp
mov
cmc
rcr
aam
lds
mov
daa
das
add
push
cld
mov
sti
jmp
mov
loopne
stos
dec
and
mov
lahf
sbb
jne
mov
nop
dec
test
loop
jns
mov
mov
inc
arpl
insb
jmp
leave
jns
dec
xchg
stos
push
pop
or
nop
pop
sub
orb
adc
lds
inc
adc
or
inc
xorb
int
jp
sbb
out
imul
out
adc
lcall
and
mov
iret
add
fsubr
or
jl
jmp
jb
mov
dec
xchg
adc
cmpsb
push
mov
xchg
mov
enter
cli
mov
sti
sbb
jp
xchg
fadds
mov
aam
sbb
jge
xchg
in
loop
adc
popf
cmp
push
lods
pop
push
jb
rorb
cld
mov
mov
mov
popf
iret
sbb
in
dec
xor
cltd
push
stos
jnp
lods
inc
xchg
test
mov
lret
pop
push
add
mov
adc
cmp
les
mov
xor
xchg
and
or
xchg
mov
sahf
add
inc
js
mov
push
aam
scas
jge
push
mov
lret
add
sbb
jno
ss
adc
hlt
leave
dec
fisubl
xchg
ret
mov
cmp
jmp
fstl
push
inc
jns
call
in
cld
pop
out
cmp
push
repnz
jb
add
pop
mov
jne
ds
lret
xor
jg
mov
add
or
fmuls
dec
rol
jo
je
scas
lret
adc
push
mov
push
cmp
or
lods
jg
sub
push
push
ja
mov
jnp
push
dec
xlat
cmp
out
mov
adcb
unpcklps
repnz
xchg
xchg
in
mov
pop
lea
mov
ret
adc
push
xlat
movsb
das
stos
loope
shlb
stos
pop
fucom
mov
pop
xor
cmp
outsb
pop
imul
int3
daa
cmc
cmp
sbb
pop
xchg
in
or
or
xchg
in
sub
adcl
lock
sbb
cli
aad
push
aas
into
bound
test
pop
sahf
jo
out
xchg
out
or
jecxz
aam
pop
js
nop
lret
jbe
add
xor
mov
filds
loopne
sub
jmp
xchg
jp
jbe
test
cmpl
pop
add
or
sub
repz
jmp
fnsave
test
jl
fistps
push
adc
lods
pop
dec
fnstsw
sub
jg
dec
jp
mov
cs
sbb
sahf
mov
pop
dec
cs
aam
addb
push
jno
addr16
daa
mov
cmpsl
lock
or
mov
arpl
inc
shlb
mov
daa
cmp
clc
aaa
pop
adc
jbe
mov
les
call
or
adc
xlat
xlat
scas
jp
loope
arpl
push
and
lcall
push
je
or
or
xchg
sbb
gs
xchg
adc
push
mov
inc
insb
call
xchg
sarb
fstps
push
pop
popa
xchg
test
jmp
das
jle
adc
fidivrs
mov
std
mov
call
dec
and
outsl
jge
xor
push
imul
outsb
add
sbbb
push
pop
sub
movb
inc
aad
mov
push
stc
sub
dec
jbe
mov
pop
dec
add
jge
mov
in
test
xor
jae
int
push
in
cmpsl
into
inc
rcl
in
bound
sbb
adc
lods
aaa
mov
mov
mov
xchg
fdivs
fldpi
pop
out
pop
sbb
sub
mov
or
adc
out
fwait
sub
in
outsl
into
fdivrl
mov
loopne
daa
xchg
popa
inc
mov
inc
insl
push
out
bound
mov
adc
insb
jp
repz
fs
lret
ss
into
mov
sbb
jae
mov
pop
lret
mov
pop
icebp
insl
xchg
test
mov
mov
xor
sub
shl
mov
and
push
fwait
and
add
out
xor
add
test
ds
sbb
cli
mov
push
out
loope
in
jp
mov
xchg
mov
faddl
pop
sti
lret
fbld
sbbl
neg
inc
gs
in
dec
scas
push
das
andb
mov
mov
add
insb
jecxz
xchg
mov
outsl
lock
daa
in
or
jecxz
xchg
push
mov
in
bound
jb
xchg
fidivl
and
mov
and
aam
test
clc
imul
popf
and
data16
cmpsb
mov
jle
movsl
das
pop
loope
jle
cmp
scas
lock
xorl
ljmp
push
movsl
cltd
fstl
pusha
and
dec
inc
jp
mov
fcmove
les
rcrl
adc
cld
mov
out
stc
xchg
jnp
mov
mov
push
outsb
sub
mov
pop
mov
leave
mov
add
test
push
push
sbb
xor
add
fucom
mov
fistpll
and
imul
mov
arpl
imul
add
fwait
inc
xchg
movsl
jbe
clc
xchg
inc
xor
outsl
mov
call
outsb
inc
push
pop
shl
push
jp
push
mov
sub
test
imul
adc
imul
mov
dec
fsubl
dec
xor
mov
mov
sub
inc
push
fldcw
es
enter
in
adc
jns
and
jb
xorl
add
xor
mov
pop
fcompl
mov
scas
pushf
mov
idivb
ljmp
push
int
aad
roll
notb
push
mov
dec
outsb
fidivs
mov
negb
movsl
in
mov
ja
inc
sti
push
pop
insl
inc
shr
xchg
ss
jecxz
cld
xchg
stc
lock
mov
loopne
dec
cmpsb
stos
pop
rolb
clc
lods
jmp
cmc
aaa
popa
dec
sahf
push
or
fidivs
les
lods
mov
xchg
mov
lcall
and
dec
pop
sbb
imul
dec
adc
sub
cmc
dec
jno
inc
dec
outsl
orl
loope
repz
enter
inc
xlat
jmp
xchg
adc
cmp
pop
pusha
xor
jns
mov
push
push
sbb
fsub
or
pop
jp
jns
rorb
sub
dec
aam
lods
mov
in
pop
sbb
popf
lret
sahf
repnz
notl
insb
aas
mov
mov
mov
or
add
repz
ss
xchg
xchg
pop
jp
frstor
add
push
xor
lea
stos
inc
fs
xchg
pusha
daa
and
push
int3
push
mov
cmp
out
pusha
ficomps
and
fcoml
icebp
mov
jecxz
movsl
cli
inc
sub
in
enter
mull
and
pop
out
sbb
xchg
lret
imul
sbb
sub
push
jp
aad
dec
add
leave
pop
sub
cmpsb
addr16
and
subb
test
rclb
mov
mov
and
mov
mov
ror
xor
cli
daa
les
fildll
pop
gs
adc
mov
xchg
xor
testb
test
add
inc
mov
mov
mov
sbb
inc
mov
cmp
fstpt
pushf
icebp
ret
pop
or
push
jo
and
fstpl
xor
sbb
mov
add
cltd
pop
repnz
mov
cmc
outsb
xchg
aaa
dec
mov
in
outsb
xchg
fs
mov
cltd
cwtl
insl
adc
jecxz
push
scas
movsb
jle
mov
inc
lds
in
pop
les
jp
scas
mov
js
loopne
pop
leave
insl
fsubrs
and
int3
cmp
insl
xchg
jbe
fiadds
push
rorl
adc
das
inc
repnz
fwait
imul
push
xchg
ret
mov
popa
jle
mov
cmp
pop
push
sbb
inc
push
ljmp
je
fs
popf
cmpsl
cli
mov
insb
sub
mov
std
cmp
dec
out
push
jno
mov
sub
xorl
imul
repnz
mov
add
testl
out
cmc
xlat
push
daa
sub
push
pop
add
push
mov
cmpsl
cld
cld
lret
cmp
xor
jmp
shl
sbb
mov
mov
or
in
rorb
xchg
cltd
mov
stos
jno
pop
jmp
push
imul
into
inc
xor
dec
mov
lods
movb
xchg
stos
rcl
jecxz
test
inc
add
test
jae
int
add
jge
xchg
lret
mov
les
inc
and
iret
fucomip
pop
lahf
inc
imul
mov
cmp
aaa
pop
out
sti
popa
mov
fildll
pop
scas
mov
scas
in
scas
mov
dec
cmpb
add
mov
mov
pushf
mov
sbb
mov
jae
adc
add
fucomi
mov
and
clc
test
or
rolb
xor
mov
lret
and
push
cli
jmp
dec
rcl
or
sbb
daa
xor
aad
enter
out
sub
out
push
outsl
insl
cld
adc
pop
cmpsb
int3
aam
lahf
clc
lcall
xor
in
adc
mov
push
fdivl
inc
idiv
fs
adc
jge
push
lahf
fs
lcall
or
and
enter
ficoms
outsl
sbb
sti
iret
push
push
add
cmp
not
jns
xchg
es
adc
inc
cmp
jno
sbb
loop,pn
mov
pop
dec
mov
mov
dec
data16
in
add
jbe
jle
add
sbb
int3
cwtl
vmwrite
inc
rcll
out
pop
addl
call
sbb
dec
pop
push
mov
hlt
lahf
incb
mov
mov
dec
imul
pop
adc
stos
or
fsub
cmp
mov
sbb
addr16
sbb
sahf
iret
test
jge
cmpsl
cld
lahf
negb
mov
imul
call
andl
aad
movb
dec
movsl
arpl
leave
push
adc
fwait
inc
mov
xchg
cmp
arpl
leave
popf
sahf
pop
test
je
cltd
jnp
and
ret
cli
inc
inc
dec
or
insb
mov
les
jge
push
adc
jg
sbb
sub
mov
std
jnp
dec
xchg
dec
iret
je
testl
jae
popf
shl
inc
mov
sbb
dec
xor
adc
xchg
mov
jg
push
xchg
inc
out
inc
mov
xor
ret
push
xchg
cmp
sub
push
push
xor
clc
adc
mov
mov
push
jno
vphaddwq
mov
in
out
rorb
dec
mov
sbb
out
sbb
xor
loopne
mov
sbb
in
mov
xorb
imul
jae
jg
fcom
push
fidivrl
mov
stos
mov
loopne
cli
das
cmpsb
adc
cltd
xchg
popa
lods
orb
aam
addb
hlt
nop
push
fadds
adcl
cmp
push
or
mov
in
or
ja
daa
jle
xchg
mov
les
jae
scas
stos
and
push
push
lret
jo
cmp
jmp
ss
ljmp
iret
rorl
into
push
mov
cmp
sub
jle
push
fldl
xchg
xchg
les
jp
and
int
adc
cmpl
cli
dec
inc
out
mov
cmc
cmc
lret
notl
pop
push
cmc
or
xchg
pop
lret
aam
jp
shll
mov
sbb
sub
gs
ret
or
mov
mov
and
inc
push
jno
mov
mov
fnstenv
mov
mov
fists
xor
add
xor
sub
push
int3
sbb
cmp
jl
in
or
push
inc
mov
ss
pop
test
jo
mov
push
push
mov
and
xchg
adc
and
stos
mov
stc
aaa
jns
lock
push
popa
or
icebp
sti
int3
ret
add
test
dec
pop
scas
push
lret
jmp
lcall
adc
xchg
fdivl
cmp
divl
cmp
outsl
paddd
push
mov
popf
cwtl
and
xchg
movsl
inc
scas
and
and
ret
inc
push
ds
dec
data16
cs
ss
adc
inc
lods
jbe
or
std
pop
stc
jb
pop
sub
pop
or
inc
fs
addl
fistl
sbb
mov
das
ljmp
mov
or
adc
scas
sub
xchg
mov
in
fwait
inc
add
rorb
fsubs
pushw
jmp
jmp
jmp
pop
adc
rcr
xchg
mov
out
rorl
fldl
dec
mov
and
ret
ret
or
adc
test
sub
outsl
jb
sbb
lods
sub
push
mov
inc
mov
xchg
stos
lahf
test
in
mov
inc
test
add
into
dec
mov
fsubl
jo
insb
inc
sub
push
sub
daa
test
clc
bound
sbb
jb
adc
inc
mov
sti
xchg
xchg
xor
aad
in
shl
fwait
punpckhbw
dec
sahf
xchg
sarl
xchg
idivb
cld
pop
fsubrs
les
movsl
mov
add
scas
push
fimuls
mov
and
mov
sub
push
imul
repz
sub
jne
push
mov
stc
dec
jo
mov
dec
movsb
cld
inc
xchg
adc
hlt
mov
test
pusha
jecxz
sub
mov
dec
mov
mov
mov
dec
out
xchg
arpl
and
repz
cld
call
imul
fucomi
xor
jmp
or
sub
popf
dec
inc
shl
std
hlt
mov
or
push
xchg
mov
sahf
out
int
mov
nop
iret
test
jb
inc
sub
sub
cmpsl
mov
arpl
xchg
sbb
pop
mov
mov
hlt
daa
mov
sub
sub
out
out
xchg
adc
ficompl
jnp
popf
lahf
pop
dec
imul
sar
movsl
das
and
and
in
ja
pop
and
sbb
repnz
push
push
loopne
push
sti
mov
sub
sbb
mov
xor
xor
pop
mov
xchg
je
negl
inc
dec
addl
rorb
fcmove
pop
mov
rorl
outsl
sbb
scas
inc
cmpsb
stos
push
sahf
jecxz
lret
imul
sbb
mov
lret
jbe
addr16
test
imul
pop
pop
das
fiaddl
jno
orl
aas
push
cmp
mov
and
xchg
inc
cltd
imull
ret
lret
rorb
js
aaa
mov
stos
mov
insb
xlat
add
dec
hlt
out
vmovdqa
lcall
push
sub
pop
mov
sub
clc
imul
jg
jecxz
dec
imul
shrb
sahf
xlat
fmulp
test
sbb
push
js
jp
aas
cmc
mov
push
shll
cli
pop
or
shrl
pop
jno
out
add
mov
sub
jb
int
jo
push
xor
inc
es
rorb
aaa
add
dec
cmp
jg
fxch
imul
xor
test
int3
xlat
outsb
push
out
das
jbe
popa
add
pushf
cmc
cmp
pop
sbb
cld
das
popa
lods
adc
aad
mov
mov
gs
jo
push
aaa
dec
stos
rcr
xor
adc
sub
xor
fstps
aaa
pop
add
jmp
hlt
push
sbb
push
call
scas
push
xchg
lahf
push
repnz
or
insl
mov
fwait
cwtl
sbb
test
pop
cmpl
ds
cmpsl
jno
sub
lock
mov
and
xor
push
xlat
inc
mov
mov
ljmp
adcb
sbb
cmc
popf
into
shll
pop
and
imul
mov
add
jnp
pop
pushf
dec
addr16
mov
dec
inc
ret
mov
xchg
mov
jne
stc
lds
jge
orl
jbe
out
pop
sbb
sbb
xlat
mov
add
and
out
xor
push
dec
pop
data16
mov
jmp
in
fcoms
stc
dec
push
xchg
cmpsb
and
or
pop
ja
pop
and
addr16
dec
movsl
add
rcrb
push
fs
adcl
negb
and
mov
je
adc
loopne
mov
int3
add
popf
cli
pop
jg
fs
or
cmp
in
fiaddl
in
pushf
shlb
movnti
pusha
jge
xlat
xchg
and
stos
nop
lock
pusha
loopne
mov
push
mov
insl
cmp
xor
xor
cli
sub
sbb
xor
dec
pop
pop
sti
xchg
jae
sarl
sub
pop
jge
xor
fdivs
jmp
ljmp
dec
cs
jmp
fcmovb
xchg
mov
pop
fwait
inc
adc
dec
cmc
stc
mov
pop
or
xchg
jae
xchg
xor
arpl
pop
shll
xor
sbb
cmc
leave
popa
dec
dec
jmp
xchg
rclb
push
dec
test
mov
ficompl
fistps
test
cmp
clc
mov
insl
and
fdivrs
movsb
pusha
dec
jge
xchg
ret
les
dec
or
mov
pop
push
imul
je
mov
inc
adc
mov
add
inc
out
int
cli
or
scas
imul
les
lahf
dec
jno
and
push
int
inc
mov
and
push
pop
push
cld
inc
adc
out
push
dec
stc
push
imul
orl
cmpsl
mov
js
mov
ljmp
sarl
inc
cwtl
and
loopne,pt
dec
loop
orb
pop
sub
mov
gs
movsl
sub
lcall
mov
movsl
lea
pop
nop
clc
aaa
mov
aam
inc
ss
pop
aaa
sub
dec
jno
ret
push
xchg
xorl
addr16
inc
jmp
cs
das
push
dec
xchg
mov
arpl
push
xor
and
mov
lahf
sub
adc
jge
inc
inc
mov
popa
sub
xchg
loopne
cmpsb
testb
push
into
mov
mov
loope
pushf
cmpsl
push
andl
imul
pop
insb
mov
mov
lcall
hlt
xchg
dec
fdivrp
fmull
xor
ret
test
pop
insb
imul
mov
testl
aam
or
xchg
xor
push
mov
xchg
mov
sahf
je
fdivrp
fadds
je
jnp
push
scas
or
xchg
aas
es
pop
pop
repz
mov
jmp
inc
mov
ffreep
adc
outsb
cmpsb
sbb
mov
bound
adc
imul
inc
xor
jnp
sahf
sub
mov
dec
mov
cli
inc
lock
pop
lock
adc
and
rclb
and
fmul
cmp
push
fsub
adc
fstpt
or
mov
pop
gs
pop
es
jle
fiaddl
inc
adc
push
aaa
lods
and
adc
insl
lock
mov
nop
addb
xchg
sbb
mov
mov
dec
xchg
xor
xchg
scas
cmp
imul
mov
mov
int
xchg
push
mov
push
add
in
mov
dec
and
enter
xchg
inc
loope
fdivrp
out
cli
jne
sub
mov
mov
cmp
lret
ss
mov
mov
das
pop
popa
imul
mov
lock
mov
daa
inc
sti
movsb
jg
add
xor
hlt
scas
stos
jne
aad
dec
push
ljmp
cmpsb
add
data16
cld
push
mov
cwtl
mov
mov
dec
adc
ljmp
mov
into
dec
sbb
aaa
add
push
mov
ret
loop
imul
inc
xor
fimuls
lret
mov
les
subb
mov
ret
sub
scas
push
in
stos
and
in
ds
test
add
mov
test
addr16
aaa
xlat
mov
sub
outsl
imul
out
out
mov
shrl
lret
inc
aaa
lret
push
movsb
inc
mov
mov
jb
pop
lods
sub
add
dec
dec
xchg
andb
pop
xor
xchg
push
scas
mov
sub
pop
loopne
cmpsl
mov
out
jmp
dec
aam
in
call
imul
scas
inc
add
stc
or
mov
popf
push
push
neg
sbb
je
fildl
imul
ficoml
xor
cmp
mov
and
nop
jo
and
dec
cmp
jnp
mov
or
mov
xchg
js
mov
fisubrl
add
scas
push
fisubrl
test
sahf
clc
int3
mov
rolb
std
ss
sarl
mov
les
or
pop
jne
outsb
xor
cmp
xchg
mov
sbbb
xchg
jnp
and
xchg
fbstp
mov
rcl
mov
sub
add
add
mov
push
pop
vcvtss2si
jb
sti
add
mov
pop
bound
fldcw
stc
mov
fisttps
and
push
mov
and
inc
leave
fptan
adc
pop
lea
insl
inc
jecxz
enter
mov
or
cmp
daa
dec
icebp
pop
ret
fst
imul
fwait
popa
xchg
test
rclb
mov
xor
inc
fistl
mov
stos
popa
sbb
jno
imul
and
ja
sbb
cmpsb
ljmp
push
xchg
mov
lods
cwtl
mov
pusha
in
out
cmpsb
jp
mov
push
addb
and
push
sbb
repnz
in
outsl
dec
pop
mov
mov
or
inc
sbb
pusha
stos
cmp
cmp
inc
pusha
jle
into
dec
inc
ret
push
and
xchg
std
ds
mov
das
jne
pop
mov
jns
cmp
out
es
push
mov
test
stos
adc
xor
sbb
outsb
iret
cmp
stc
loop
mov
fcomi
sbb
out
xor
pop
loope,pn
cmc
dec
dec
inc
daa
add
and
xchg
popf
and
xor
add
mov
mov
lret
xchg
jecxz
push
inc
adc
scas
jmp
add
jmp
or
or
lahf
in
es
dec
xchg
shlb
nopl
sbb
scas
xchg
pop
pop
xchg
and
test
out
adc
and
pop
or
scas
mov
add
test
cmp
dec
mov
jp
dec
xor
pop
xchg
pushf
cmpsl
xlat
dec
dec
mov
and
sbb
push
mov
sti
iret
ret
cmp
push
inc
lret
push
imul
nopl
pop
adc
in
sbb
lods
ljmp
inc
ret
nop
xchg
sub
dec
dec
jmp
push
subb
leave
cmp
cltd
cmp
mov
lret
testb
dec
sub
and
sub
xchg
push
pusha
shlb
test
stos
add
ret
dec
lods
flds
sahf
mov
mov
xor
sti
sbbl
inc
xchg
push
and
dec
fsubr
mov
and
mov
movsb
cld
and
adc
add
jle
sbb
cmp
mov
or
mov
movsw
pop
mov
movzbl
movsb
xchg
dec
test
mov
pop
inc
jl
out
repnz
rcll
shlb
push
sti
cmp
mov
push
jg
ror
int3
mov
push
dec
jmp
test
inc
inc
int3
mov
xor
xchg
cmp
scas
fstpt
lea
push
icebp
loop,pn
mov
js
sub
lret
push
repz
addr16
out
std
ret
fidivrs
sbb
int3
arpl
ret
outsb
dec
xor
ja
clc
mov
adc
aad
jmp
fnsave
and
cmp
push
out
imul
mov
insl
cwtl
test
push
loopne
inc
jae
test
and
dec
fbld
xchg
jne
mov
pmullw
pop
mov
cmp
negb
xor
ja
scas
and
mov
fsubs
or
daa
test
xor
jmp
rcrl
int
mov
adc
testb
ss
add
loopne
faddl
fidivrl
mull
xchg
mov
push
push
sbb
cld
lahf
adc
call
mov
or
mov
outsl
cmp
mov
mov
repnz
and
cs
jmp
addr16
sbb
mov
test
aas
ret
cli
add
int3
push
push
fxtract
sarl
mov
jns
lds
jl
xor
cmpsb
out
dec
aaa
dec
enter
pop
pop
int3
xor
mov
out
int3
mov
ret
popa
jg
pop
push
adc
enter
adc
mov
vmwrite
jnp
push
sbb
pop
inc
fs
jo
insb
in
fisttpll
ja
popa
sbb
jle
pop
cmpsb
mov
fsubl
xor
dec
fs
xor
jo
js
mov
jle
sub
xor
sti
test
mov
popf
xchg
shrl
dec
pop
movsl
je
jae
cmp
shl
pop
jbe
out
or
xor
push
push
lret
andl
jp
arpl
fwait
lea
sarb
scas
mov
add
dec
cmp
xchg
call
push
push
mov
or
dec
pop
add
dec
inc
cltd
and
mov
dec
mov
jb
sbb
mov
rclb
push
mov
sbb
das
jmp
xlat
adc
sti
jb
and
sarb
sub
fimull
shrb
push
popf
adcl
rorb
xchg
data16
lahf
gs
cmp
outsl
jnp
shr
mov
int3
loope
jne
call
push
sbb
jge
mov
push
clc
jae
fsubl
pop
cmp
fcmovne
in
add
cmp
loop
stos
sbb
xchg
pop
cs
add
inc
fwait
shlb
jns
ss
cmp
mov
xlat
xchg
repnz
lea
movsl
xchg
jg
mov
int
out
push
xchg
into
xor
and
popa
sub
dec
push
sarb
lahf
ret
ss
lods
sti
int3
dec
sbb
sub
xor
dec
adcl
add
adc
filds
fnstcw
mov
push
cwtl
sub
jae
jge
adc
cltd
icebp
sub
data16
jmp
dec
jge
movl
jbe
or
dec
push
cmp
js
mov
cmpsl
aas
xor
test
pop
cmp
xchg
filds
and
add
fs
ret
sub
or
lret
or
xchg
lahf
or
inc
cmp
aas
pop
or
xor
or
mov
frstor
xorb
ret
shll
pop
loopne
outsb
pop
pop
subl
add
call
ss
pop
clc
sbb
mov
cs
jbe
mov
add
icebp
mov
gs
mov
pop
adc
pandn
jb
dec
shrl
je
lock
int3
shlb
lcall
mov
shrl
sub
ss
jne
sarl
inc
mov
mov
xchg
int3
and
push
or
mov
push
imul
jmp
cmp
jmp
loop
jmp
jnp
dec
loope
cmpsl
pop
test
mov
sarb
movsb
icebp
hlt
fnstenv
fdivrs
out
mov
imul
aam
lods
iret
aaa
pop
mov
stos
in
imul
lcall
or
push
mov
jb
jecxz
or
cltd
inc
sbb
inc
iret
cmp
adc
in
lea
add
cld
add
mov
adc
lcall
pop
adc
cs
lds
enter
out
test
dec
and
push
mov
add
das
mov
or
jecxz
inc
jb
mov
cli
sbb
jno
mov
mov
arpl
fdivr
into
aam
repnz
iret
cmpsb
cli
dec
xchg
push
movsb
out
mov
ja
fs
jge
mov
aam
push
imul
das
fisubrl
adc
es
stc
icebp
push
xor
xor
push
pop
cltd
loopew
mov
cld
mov
out
nop
adc
sbb
out
lds
xor
xor
xor
mov
jle
insl
mov
and
dec
test
or
jbe
stos
lret
stos
xchg
gs
mov
xor
outsl
mov
or
rolb
sar
data16
push
xor
in
adcl
pop
ret
cmpsb
push
mov
js
es
andb
pushf
xchg
jg
mov
sbb
outsl
out
mov
cltd
push
loopne
insb
bnd
int3
mov
cwtl
out
jge
xor
sub
scas
push
pop
stos
lea
lods
sbb
mov
test
jg
push
or
and
pop
outsb
mov
stos
mov
xor
ds
repnz
cmp
lods
xchg
mov
testb
and
sahf
mov
sti
inc
xchg
xchg
mov
xchg
or
push
pop
std
movsl
bound
aam
negb
add
adc
lea
mov
pushf
push
mov
mov
roll
jno
ds
loop
lock
test
jmp
dec
mov
xchg
add
xchg
adc
xchg
call
lahf
jo
cmpsl
out
jg
ret
sub
lret
lret
int3
xchg
xchg
adc
cmp
scas
imul
loopne
jbe
rorl
inc
ljmp
inc
dec
fstpl
inc
loopne
popa
jg
mov
inc
mov
insb
lods
push
aad
out
dec
mov
jg
xchg
xchg
mov
pop
addr16
lret
mov
int3
xlat
add
mov
sbbb
dec
insb
push
ljmp
call
and
inc
sub
cld
rclb
lahf
or
add
mov
pop
mov
or
je
test
mov
repz
cmp
mov
inc
popa
inc
jmp
add
xchg
call
adc
lret
xchg
dec
imul
shlb
sbb
xchg
rorl
dec
leave
xchg
add
ret
inc
add
xor
jnp
fcoml
pop
mov
jg
int3
lret
adc
sub
inc
adc
inc
push
out
pusha
lds
loop
mov
sti
mov
imul
mov
ror
iret
jo
mov
loope
sbb
scas
jl
inc
sbb
push
add
inc
stos
mov
sbb
push
mov
dec
test
pop
pop
out
jo
pop
psllw
stc
stos
scas
or
mov
adc
sbb
dec
or
pop
xchg
xlat
inc
stc
sbb
add
cmp
dec
jl
in
popf
or
fsubs
inc
movsb
std
rcl
or
ret
push
mov
pop
and
cmp
inc
int3
xor
cmpsl
cmp
lahf
xchg
insl
jl
mov
out
xchg
std
cmpsl
cmp
pop
dec
out
push
pop
mov
ljmp
adcl
dec
cmp
pop
scas
xchg
int
pop
add
pop
lahf
and
mov
outsl
fdivl
cmpsl
push
mov
cs
fiaddl
mov
fs
loopne
stc
stos
popf
arpl
push
push
ret
xlat
int
jl
pushl
les
mov
aam
imul
inc
adc
rcrb
rcrb
inc
or
xchg
add
cmp
or
inc
in
lods
pop
mov
les
ja
stc
fwait
cmc
jbe
hlt
xor
das
in
cmpsb
idiv
int3
cmp
mov
pop
sti
mov
pop
jecxz
xchg
lock
xchg
cltd
leave
xor
mov
mov
pop
xor
rorl
inc
xchg
mov
data16
sbb
je
outsb
inc
or
mov
xchg
out
mov
or
cld
std
stc
lods
filds
inc
cmpsl
std
daa
ja
add
jle
aas
pushf
leave
xchg
xor
ficompl
lcall
inc
inc
or
aad
cmpsl
fwait
dec
xchg
mov
sbbl
pop
add
cmc
mov
sbb
sub
enter
outsb
fbstp
leave
movsl
add
nop
cli
and
je
and
xchg
and
pop
pushf
scas
testl
je
js
mov
add
in
data16
ja
xchg
mov
add
push
jg
mov
fisttps
mov
mov
inc
shrb
call
jg
pop
push
daa
xchg
imul
sbb
jnp,pt
inc
nop
mov
mov
mov
ss
stos
jbe
mov
mov
int
sbb
cli
shrl
daa
jg
insb
cmpsb
sbb
inc
testl
sub
rol
loop
add
gs
push
mov
mov
mov
xor
fldcw
jle
sbb
outsl
jg
imul
and
lahf
inc
neg
mov
arpl
fs
jecxz
dec
mov
jne
xchg
pushl
sbb
shrb
ss
shl
push
sbb
sti
push
cwtd
sbb
mov
int
inc
loop,pt
rcrl
loopne
orb
pop
mov
inc
mov
dec
dec
and
pusha
std
mov
sbb
or
sub
ljmp
mov
ret
aam
iret
mov
jl
xchg
mov
pop
sbb
or
in
rolb
scas
roll
fcoms
movsb
jb
notl
sbbl
pushf
cmp
fstpl
jecxz
das
testb
icebp
fmull
inc
dec
fnstcw
popa
rcr
nop
imul
jne
mov
xchg
mov
adc
sahf
add
popf
and
std
jo
and
mov
push
inc
adc
mov
dec
insl
mov
movsl
out
in
inc
mov
lods
add
jns
sbb
data16
add
pop
xor
inc
cltd
lods
testb
subb
repnz
je
dec
hlt
xchg
bound
sbb
in
jno
or
jl
clc
movsl
and
sub
repz
dec
pop
jb
scas
jnp
sbb
push
cs
pop
sub
sti
lds
push
sub
xor
xor
mov
inc
add
popf
outsl
lcall
mov
movb
mov
push
mov
fcmove
xchg
mov
dec
inc
push
push
bound
es
dec
mov
sub
jns
hlt
add
add
lods
sub
fadds
push
jnp
xor
ds
mov
xorl
mov
or
xchg
mov
mov
outsb
movsl
lds
inc
sub
or
cltd
xor
aam
out
xor
pop
push
leave
sbb
nop
cmp
sahf
adc
mov
ja
mov
and
push
jae
add
enter
aaa
jo
push
xchg
lods
rcll
test
arpl
std
jno
or
orl
push
repz
das
sub
sbb
mov
test
fcoml
mov
shrl
cmp
aas
pop
push
mov
and
or
cmp
hlt
scas
dec
mov
push
inc
stos
gs
test
shll
inc
mov
pop
push
scas
xor
shr
int
xor
jnp
out
orb
gs
aaa
leave
sahf
push
das
test
shrl
push
in
repz
pop
sub
xlat
shl
scas
push
push
shll
adc
in
test
dec
ret
shll
into
push
out
jne
cwtl
lock
xor
sbb
jge
xor
mov
lcall
and
je
mov
dec
pop
push
sub
cmp
out
pop
jo
lods
xchg
inc
push
xor
cmp
adc
mov
cwtl
mov
pop
inc
lods
stos
scas
aad
xor
xchg
inc
sub
cwtl
mov
lds
mov
add
enter
out
push
push
jne
adc
inc
pop
js
ror
cmp
jmp
popf
push
popa
dec
mov
pop
lret
xor
inc
test
fcompl
stos
arpl
jns
cltd
xchg
and
add
repnz
js
lcall
mov
sbb
ljmp
hlt
cmp
xchg
jb
ficoml
xchg
sub
mov
adc
pop
pop
sbb
sub
jnp
or
or
or
movsl
or
dec
jmp
push
aas
out
lods
adc
shr
add
jle
fincstp
outsb
inc
cs
push
push
jmp
xor
jb
mov
imul
aam
xchg
mov
xchg
rol
int
xchg
dec
das
dec
jno
loop
and
cs
add
scas
sbb
fstpt
lahf
ret
push
out
xchg
movsb
xor
mov
test
int3
add
sub
jmp
push
aam
or
mov
pop
xchg
insb
cmp
mov
cmpsb
rclb
xchg
xchg
cs
rorb
add
roll
fsubp
inc
add
pop
in
or
aam
pop
fnsave
int3
shll
push
sub
mov
mov
mov
in
dec
jmp
and
and
push
adc
push
pop
cmpsb
jmp
cmp
imul
aas
mov
sub
add
ljmp
ss
test
jo
loope
movsb
mov
icebp
in
fnstsw
cmpsb
scas
ljmp
pop
es
inc
or
mov
xchg
out
test
stc
add
aam
jbe
and
enter
inc
jnp
or
test
into
negl
mov
cmp
out
and
ss
sub
stos
mov
cltd
ret
fstpt
nop
inc
adc
inc
inc
sti
idivl
fs
in
mov
nop
inc
mov
frstor
xchg
outsb
hlt
in
sbb
aam
push
nop
pop
leave
sub
cwtl
scas
inc
fs
ret
pushf
sbb
arpl
shrl
adc
ret
cmp
sub
inc
sbb
fcos
rcrb
fnstenv
outsl
xor
fnstenv
jbe
push
xlat
cmp
jns
lahf
outsl
xor
dec
or
daa
sub
and
push
je
mov
mov
inc
and
cmpsl
cmp
int
test
pop
inc
push
cld
push
add
jp
cmc
xor
mov
ret
jmp
lea
nop
add
ja
xor
sub
das
fwait
inc
add
popf
addr16
or
iret
jb
daa
jo
lcall
pop
int
inc
test
aam
mov
mov
jecxz
push
xchg
jne
xor
fildll
rclb
frstor
test
push
xchg
fidivl
and
jg
jp
das
in
das
or
or
xchg
aas
testl
je
push
into
lock
push
inc
movsl
dec
outsb
loopne
add
cmp
mov
fwait
outsb
in
mov
pusha
inc
mov
or
mov
mov
mov
fcoms
cmp
jl
and
add
dec
idivb
dec
leave
fstpl
fimuls
xor
or
add
in
xchg
sbb
inc
sub
shr
aad
movsb
int3
mov
scas
xchg
ret
lret
xchg
mov
ljmp
push
or
test
pop
xor
test
pushf
scas
sti
enter
jb
cli
loope
jge
push
and
mov
and
rcll
mov
jge
cmp
cmp
test
cmp
inc
scas
sahf
inc
xor
stc
imul
push
inc
cmp
inc
inc
scas
gs
aaa
int3
dec
or
pop
jmp
fcomps
dec
popa
cmpl
xchg
jg
rsqrtps
sub
mov
mov
jnp
movsb
xor
outsb
and
test
lods
mov
push
insb
mov
push
sarl
stc
push
pop
cmp
mov
mov
jp
in
push
jns
sbb
movl
push
loope
in
lock
aam
adc
in
in
aam
lds
popf
mov
mov
dec
pop
or
sub
jecxz
inc
jle
mov
fimull
roll
or
push
cltd
hlt
std
jns
adc
jno
dec
and
in
sbb
ja
inc
hlt
pop
fldt
out
mov
js
rcr
jmp
xchg
lea
dec
add
cmpsl
xchg
pop
enter
inc
loopne
mov
and
lret
stos
or
movb
cmp
mov
jle
cmp
repz
subb
es
push
pushf
pop
sub
lret
ret
bound
jne
push
sub
jle
or
or
pushf
adcl
or
jb
mov
dec
fcomi
inc
lahf
pop
test
shrl
sub
pop
std
fidivs
fsubs
xchg
icebp
mov
pushf
lods
push
push
add
sub
fs
cmp
dec
pushf
xchg
fiaddl
jg
sub
fs
mov
movsb
ret
jg
mov
inc
sub
test
xchg
push
pop
xor
in
pop
mov
add
sbb
and
repnz
xchg
aam
movsl
out
hlt
fmull
cld
sub
jecxz
les
fsubs
loope
clc
or
arpl
jg
bound
add
push
mov
daa
fst
arpl
jnp
mov
dec
rcr
cmp
ss
xchg
out
push
xor
test
in
in
iret
sbb
xlat
cltd
fidivl
xor
inc
dec
and
adc
xchg
pop
adc
fcompl
inc
pop
add
mov
add
call
and
orl
and
sub
ror
sbb
lods
shl
lods
mov
js
stos
fs
test
lcall
jns
out
xchg
hlt
roll
or
sbbb
roll
adc
stos
rolb
pop
push
dec
mov
movsb
ja
push
repz
es
sti
not
lcall
js
ror
stos
pop
mov
pop
xor
xchg
lods
push
and
add
or
pusha
insl
in
lret
or
sbb
mov
es
lret
inc
enter
js
mov
aam
mov
movsl
jecxz
lahf
add
sarl
les
lcall
or
sub
and
insl
cmc
push
out
xor
dec
shl
cmp
inc
rcrl
stos
or
or
pop
ret
mov
xchg
nop
lcall
out
jno
les
inc
idivb
dec
xchg
push
or
dec
scas
mov
dec
icebp
in
jnp
jp
orb
cltd
clc
and
fwait
cli
and
or
fmull
ss
or
push
mov
stc
cmpsb
jns
out
xchg
arpl
jno
jns
mov
lea
fs
out
test
pop
lahf
addr16
inc
in
and
fs
movb
enter
pushl
sub
mov
movsb
xchg
sbb
xlat
dec
arpl
push
cmpsl
insl
int3
loope
ret
push
pop
rclb
rorb
pop
pop
xchg
scas
add
cmpb
or
xor
pop
push
mov
clc
aaa
cwtl
sub
inc
popa
push
rorb
shr
lea
lea
repnz
imull
gs
or
sbb
testb
xor
popa
jle
out
lock
data16
pop
adc
pusha
pop
das
push
or
inc
stos
push
inc
pop
xchg
cmp
dec
lods
scas
subl
cmp
inc
and
sbb
jae
adc
jle
dec
sub
ja
das
push
gs
aam
fdivs
xlat
fsubs
inc
test
pop
nop
cmp
push
pop
lret
push
push
clc
in
decl
scas
repnz
xchg
xchg
dec
mov
lret
inc
cmc
dec
sbb
rcll
rcl
xor
mov
fnstcw
jno
hlt
or
ljmp
sbb
mov
jecxz
jge
sub
in
cwtl
or
cmp
stos
lcall
xor
ljmp
xor
loope
mov
mov
jae
ja
insb
push
adc
mov
stos
pop
mov
movsb
fistps
mov
nop
mov
mov
push
xorb
subb
jmp
cmpsl
insl
cmp
ret
ja,pn
pusha
sbb
adc
in
adc
jecxz
pop
in
push
out
dec
addr16
mov
mov
fwait
inc
movsl
xchg
lret
sub
lds
fisubl
jno
dec
insb
pop
inc
mov
cmovge
sbb
cmp
je
push
fidivs
dec
sub
xor
xlat
pop
cmp
fnsave
test
fdivs
or
inc
push
mov
into
ja
sahf
adc
and
sahf
mov
fs
pop
dec
jae
loope
add
push
cmp
cltd
adc
and
xchg
or
jl
std
adc
mov
jnp
push
cmp
mov
or
into
inc
insb
xor
shl
cs
mov
sti
rol
shlb
ret
xchg
pop
cmp
into
jno
add
gs
mov
jb
fisubrl
data16
inc
frstor
xor
call
cs
es
imul
lret
xor
sbb
inc
push
add
popa
dec
cli
lret
inc
xor
repz
sbb
movsl
filds
mov
mov
jl
mov
stos
arpl
loope
hlt
inc
fisubrs
in
inc
adc
mov
je
inc
das
xchg
mov
call
insl
ljmp
lea
mov
xchg
mov
or
cli
test
test
adc
sub
xorb
fs
ficompl
imul
stos
bound
inc
push
movsl
dec
pusha
mov
aad
inc
mov
mov
sbbl
in
popa
xor
cs
jne
pop
sbb
loope
call
pop
push
rorb
icebp
adc
imul
push
call
xor
test
mov
sbb
or
dec
adc
sub
loopne
in
aaa
pusha
in
andl
decb
lods
xor
fwait
sbb
push
in
test
fnsave
mov
int3
out
dec
add
cmp
mov
subl
divb
xlat
dec
enter
loopne
jo
ljmp
out
les
in
or
test
sub
movsl
js
into
cmp
test
int
pop
out
xlat
rclb
sbb
push
dec
outsl
jns
pusha
xor
adc
push
int3
mov
lods
jnp
roll
push
add
into
insl
push
jnp
mov
mov
fistpll
nop
and
push
sahf
mov
mov
ja
insb
xchg
outsl
aaa
add
cli
out
out
call
add
leave
imul
pop
cmpsl
add
sbb
icebp
cli
iret
ret
scas
sbb
mov
cmc
sbb
mov
inc
out
push
es
ljmp
loopne
call
mov
dec
gs
inc
dec
pop
and
sub
test
stc
sub
pop
pop
inc
loopne
test
push
jae
pop
daa
rcrl
es
xchg
je,pn
pop
add
push
sbb
mov
pop
or
sbb
adc
jl
pop
in
jle
cld
sbb
xor
cmp
lahf
rolb
in
scas
mov
cltd
insl
xor
mov
repz
aad
cmpsb
rclb
jns
inc
push
dec
sbb
sti
mov
cmc
aam
fldt
shl
cwtl
cmp
cmpsb
dec
xchg
inc
jmp
mov
jae
jle
out
xor
dec
lock
divps
xchg
sbb
push
sub
lock
cwtl
or
cs
pop
dec
repnz
sti
insb
shll
mov
and
adc
add
dec
inc
dec
xor
sbb
loope
fs
je
dec
leave
pop
cs
movsl
mov
jg
cmp
push
dec
in
nop
mov
inc
push
lahf
pop
dec
push
mov
scas
push
decb
and
mov
incl
sbb
pop
fucomi
pop
loope
sahf
and
cmp
mov
cmpsw
fcoml
push
in
in
out
sti
push
jo
outsl
xchg
repz
push
pop
dec
mov
movsl
int3
in
mov
fcomps
sbb
inc
jl
testl
bound
sub
mov
icebp
fistl
bound
rorb
push
pusha
out
and
je
dec
inc
test
add
fisttpll
pop
push
sar
push
pop
movl
aam
pop
test
pop
jbe
insl
imull
lret
xchg
rcrb
loope
pop
sarl
out
out
popa
push
jne
lea
andb
repz
mov
ret
shlb
adc
pop
call
insb
push
ss
push
aas
adc
out
js
js
ret
out
cmp
ja
xor
push
out
ds
or
jle
ja
xor
push
jp
mov
pushf
sti
xor
int
mov
in
test
mov
lahf
cltd
and
mov
push
stos
add
cs
shl
jmp
mov
in
mov
adc
push
cmpsb
mov
aam
push
popa
movsb
mov
jmp
mov
out
flds
lods
rclb
loopne
push
sbb
fwait
cmpsb
insl
xchg
icebp
push
test
addr16
rcll
and
or
movsb
or
sbb
out
xchg
push
pop
loope
icebp
push
adc
lods
dec
xchg
test
jae
in
hlt
mov
xor
push
inc
jmp
push
or
cmp
jns
cmp
out
lods
bound
mov
sbb
enter
in
aad
movl
stos
cltd
jg
ss
insb
mov
jno
popf
fists
jp
aas
push
cmp
mov
lahf
pusha
mov
fimull
sub
push
test
rol
sbb
out
sbb
push
inc
inc
pop
xlat
push
pusha
test
stos
mov
mov
inc
push
lret
in
lret
icebp
jg
or
mov
outsb
jae
nop
mov
int3
inc
in
lods
mov
outsb
sbb
mov
test
fisubrl
mov
push
mov
push
out
in
idivb
addl
sbb
push
insb
push
leave
nop
jno
stos
aam
jae
movl
pop
dec
sub
fldt
out
lahf
pop
addl
popa
roll
mov
jae
xor
jmp
mov
mov
inc
mov
sahf
lds
dec
aam
adc
fildll
sbb
negb
xor
loopne
pop
stc
add
cmp
push
xchg
std
mov
push
cmp
pop
in
adc
loope
jnp
sbb
mov
decl
popa
jae
cmp
xlat
jno
test
fisubrl
mov
and
mov
push
adc
adc
xor
neg
lea
jge
sub
sahf
fyl2x
sbb
jb
js
pop
rcll
lcall
lds
mov
stos
add
and
call
jne
pop
stos
mov
and
or
dec
decl
adc
imul
popa
ja
mov
push
addr16
xchg
into
push
sbb
test
xlat
mov
cwtl
in
subl
int
sub
js
mov
fisubl
pop
sbb
lds
stos
aad
es
inc
sub
out
scas
shlb
inc
and
xchg
or
jmp
out
jmp
ss
xor
push
aad
mov
jne
pop
fs
sbb
stos
cmpb
lcall
jl
adc
and
lds
cmp
pop
push
pop
pusha
jne
inc
mov
and
repz
jecxz
fildll
lret
cmc
cmpsl
ret
mov
adc
mov
mov
frstor
in
leave
and
mov
sub
and
xchg
mov
adc
aas
sub
lds
mov
cmp
push
scas
add
out
sub
movsb
je
xchg
xchg
cmpb
add
in
xchg
daa
mov
adc
in
cli
push
or
mov
xor
xorl
xorb
adc
mov
jae
push
jle
add
pop
scas
adc
mov
orb
sbb
test
xor
out
jbe
jb
cs
insl
pusha
xor
sarl
mov
scas
test
cs
ja
and
sarl
fstpt
add
icebp
mov
lods
in
dec
imul
add
insb
mov
and
es
pop
xchg
in
sti
cwtl
addr16
pslld
inc
xchg
clc
scas
aam
call
dec
icebp
gs
cli
dec
out
out
lods
lea
pop
cmp
ljmp
shrb
sbb
sbb
in
mov
mov
adc
repnz
stos
inc
mov
xlat
imul
rolb
pop
mov
cmp
or
pusha
and
inc
insb
pop
cld
inc
xor
push
sbb
xchg
sbb
add
add
sbb
xchg
and
sub
insl
ds
jp
repz
mov
outsb
sar
les
xorl
or
mov
xchg
stos
mov
push
out
sbb
push
inc
mov
mov
ss
cmpsb
dec
mov
cmp
stos
mov
xor
xchg
jge
jge
insb
xor
cmp
shr
into
mov
popf
into
cli
sbb
pop
sub
xor
out
pop
bound
mov
faddp
pop
and
imulb
jmp
stos
and
lods
mov
cmpsl
sahf
lret
fldt
xor
xor
jmp
fiadds
xor
loop
mov
fcompl
movsl
pop
test
jbe
mov
fistps
mov
inc
sbb
outsl
call
push
xlat
shlb
lahf
int3
cmp
lods
imul
pop
dec
in
mov
inc
pushf
outsb
adc
loop
lds
xchg
jno
add
adc
dec
pushf
stc
lods
mov
in
push
cmpsl
xchg
imul
dec
pop
cmpsb
inc
jecxz
xchg
sbb
ja
js
pop
arpl
movsb
nop
jno
lods
jle
push
dec
add
pop
stos
inc
loop
jge
sbb
cld
xchg
sti
test
pop
in
xchg
or
mov
jne
test
leave
jns
fdivp
in
inc
enter
jge
jnp
enter
stos
dec
mov
popf
cmp
imul
pop
adc
jno
mov
mov
data16
insb
xchg
and
push
cltd
pop
jmp
es
jo
cmpl
outsl
mov
lods
jle
sub
popa
sarl
mov
imul
cmp
push
mov
or
jp
fmuls
push
cmp
adc
hlt
pop
pop
daa
fnsave
nop
pop
in
xchg
sbb
rcrb
jnp
mov
into
dec
scas
insb
ret
fs
test
and
pushf
xchg
mov
filds
and
lds
mov
mov
les
xor
cld
mulb
fstpt
cmp
cmp
adc
mov
xchg
mov
pop
xchg
add
inc
sub
cmovs
cmc
mov
jecxz
in
and
cli
leave
adc
fwait
or
sarl
adc
rorb
negb
in
sub
int
jbe
xchg
xor
xchg
sbb
mov
mov
or
sbb
std
dec
popf
mov
inc
push
lcall
mov
xchg
enter
fistpll
pop
jmp
pushf
imul
jp
jae
insl
cmp
lock
shrb
aad
jle
dec
xchg
outsb
stos
cmpsb
add
iret
cmp
inc
movsl
dec
mov
cs
filds
mov
dec
jb
outsl
cmp
sbb
and
mov
mov
int
sub
shl
lds
das
push
dec
je
movsl
adc
int
and
and
sbb
sub
xor
pusha
xchg
xor
xor
sub
lods
xor
inc
je
out
sti
dec
xchg
mov
mov
dec
test
out
or
jmp
pop
jp
sbb
and
jmp
dec
pop
or
pop
shl
shlb
stc
sahf
mov
sbb
lahf
jbe
and
pop
sub
and
push
in
mov
xor
inc
mov
push
insb
fsubs
and
or
lods
add
test
popf
add
push
es
xchg
ljmp
loop
push
jnp
sbb
mov
cmc
inc
push
mov
popa
sbb
fimull
mov
xor
inc
pop
imul
dec
shr
jns
or
lock
cmpb
mov
pop
xlat
jne
mov
xchg
pop
inc
stc
pop
or
loopne
loopne
es
ret
sub
sahf
jae
mov
sub
push
push
bnd
sub
cmpb
es
mov
sub
call
in
inc
cltd
rcll
test
rorb
or
jmp
adcl
xchg
in
jmp
fwait
daa
and
jg
xchg
mov
in
xchg
push
cmp
loop
pop
sub
xchg
shll
and
scas
push
lods
sbb
sbbl
or
push
loope
dec
mov
fstp
cli
adc
dec
loop
cli
sub
cs
pushf
sbb
pop
outsl
clc
out
lock
mov
mov
or
xchg
fwait
xchg
sbb
sbb
sub
lods
pop
mov
cltd
dec
iret
mov
loope
movsb
or
sub
loop
icebp
in
xchg
xorl
je
pop
dec
negl
es
repz
pop
pushf
int3
lret
daa
outsb
push
push
mov
ja
lock
push
jl
inc
outsb
and
jae
mov
fcmovbe
inc
clc
daa
lock
fisttpl
or
sahf
pushf
mov
xchg
push
lock
mov
addl
fnstsw
lods
xchg
fimuls
in
jge
cmp
aaa
jecxz
mov
nop
pop
sbb
xor
inc
pminsw
fsubs
sub
test
add
sahf
inc
fsubs
push
xchg
push
add
jno
mov
push
les
out
mov
or
sbb
nop
mov
add
jnp
xchg
aas
sub
push
movsb
mov
jmp
and
enter
push
mov
rcll
jns
push
cmpsb
add
cld
xor
and
or
jge
pop
pop
sar
jb
mov
cmp
and
xor
push
movsb
pushf
sub
mov
outsb
test
repz
add
lea
jae
jns
inc
adc
mov
lods
and
or
mov
xchg
cmp
cld
jo
or
leave
jg
and
cli
cmpsb
shl
mov
test
or
fisubs
lea
das
rorl
in
cmp
inc
negl
popa
mov
jecxz
test
cmpsl
shl
clc
ss
sbb
cld
loopne
fistps
lods
in
test
out
addr16
and
mov
add
mov
fldz
int3
sbb
xlat
sub
mov
in
or
add
add
mov
ljmp
std
jg
cmp
inc
pmuludq
sbb
pop
les
xor
dec
dec
test
jp
mov
cld
popa
mov
data16
cli
dec
push
jb
xor
jb
int3
lods
push
pop
xor
pop
sbb
cmp
bound
outsb
jg
mov
mov
sarl
enter
leave
out
sbb
mov
mov
fidivrs
pop
xor
xor
add
add
add
in
shlb
std
sbb
fwait
scas
or
inc
mov
int3
insl
lea
andl
jne
xchg
mov
xchg
cmp
test
jge
push
push
dec
jl
jae
cmp
pop
sbb
pop
jmp
xchg
push
cmp
xor
cs
insb
pop
rcr
bound
sbbb
into
jmp
fisubrl
mov
mov
add
xor
fbld
add
push
outsl
xor
push
mov
sub
pusha
popa
enter
test
mov
xor
ror
test
rcrb
es
adc
sub
and
ja
aas
mov
push
xorb
push
dec
repz
push
mov
push
jnp
call
lods
cld
test
enter
adc
cmpsb
adc
jg
stc
ficoml
mov
jns
dec
xor
xchg
xchg
push
push
jecxz
mov
in
call
lea
les
push
insb
inc
and
and
rcll
push
jo
push
jle
cmp
xor
jecxz
mov
mov
imull
and
and
shll
xchg
repnz
xor
call
stc
and
mov
push
notb
loop
subl
pop
cld
sbb
push
fldenv
scas
xchg
enterw
pop
cmp
jo
jp
cs
xchg
call
jmp
aas
mov
out
lods
cwtl
nop
mov
aas
xor
rcr
sbb
pop
push
out
pop
mov
sub
xchg
pop
mov
inc
dec
ljmp
call
sti
push
cmp
inc
push
or
insl
dec
iret
and
mov
popa
xchg
xor
je
mulb
ficoml
cli
sbb
inc
aam
aas
add
pop
loope
xor
pop
or
outsl
push
stos
jns
aas
add
icebp
aam
inc
sbb
inc
or
std
jae
mov
fs
sarb
fcompl
aas
add
daa
add
add
mov
fistl
mov
pop
mov
mov
inc
cmp
jg
cld
or
cmp
mov
loope
cmp
cli
scas
mov
push
clc
sbb
int3
adc
inc
adc
dec
aam
push
ss
clc
or
insl
pusha
mov
fistpl
mov
add
lock
inc
popa
push
rcll
mov
pusha
imul
or
mov
mov
sub
adc
jne
sbb
das
bound
cli
push
lea
in
and
dec
aas
mov
orb
jnp
adc
jmp
fsub
test
shrb
fwait
clc
mov
insl
fimull
js
xor
dec
sbb
cld
loopne
mov
pop
scas
pop
ret
and
sub
mov
cld
mov
mov
fucomi
ret
repz
cmpsb
fstl
cltd
mov
xchg
inc
ss
cmp
xchg
lahf
lcall
dec
dec
out
fildll
out
pusha
cmpsl
sbb
push
in
jne
mov
cmp
mov
push
mov
test
cmp
leave
push
popf
cli
icebp
lahf
rcrl
and
pop
fstpt
ja
xor
dec
lret
jo
and
bound
xchg
aad
mov
adc
xor
mov
nop
dec
lods
and
sbb
push
push
fldenv
add
add
loope
int
in
ret
addb
sahf
in
sub
stos
aas
fs
out
sub
dec
jle
jmp
repz
xor
mov
out
xchg
adc
pop
xor
pop
insb
lods
and
movsl
push
mov
cmpsl
iret
adc
or
movsl
outsb
add
add
rclb
jns
jmp
lock
aam
cld
inc
cmc
js
ds
bound
dec
xor
push
mov
cltd
jb
mov
push
fbld
fbstp
ja
imull
pop
enter
push
cmpsb
mov
jb
mov
pop
jp
fsubl
jbe
addb
mov
sub
jbe
xchg
mov
test
je
and
fidivs
mov
mov
into
imul
sbb
in
push
add
test
jl
push
movsb
jmp
adc
push
pop
push
and
das
xchg
hlt
dec
push
and
adc
jle
jns
pop
out
adc
test
not
adc
jo
out
sub
xor
cld
lods
pop
mov
inc
xor
sar
loop
and
scas
push
jne
xor
mov
loope
loope
loopne
cli
cmc
mov
fnstsw
sbb
jbe
dec
sarb
mov
push
push
mov
std
xchg
add
outsl
adc
mov
add
mov
cmp
lret
sub
jae
jmp
jnp
or
stc
push
mov
push
cmp
push
cli
adc
rcl
add
pop
and
xor
cmc
jns
orb
cmp
pop
addl
cmp
clc
mov
insb
in
in
or
sub
lds
xchg
cmp
dec
jo
mov
sub
cmpsb
adc
scas
xchg
mov
or
js
mov
mov
pop
mov
ret
int
or
inc
xor
loope
stos
xor
rcrl
push
das
add
cmp
loop
sub
inc
xor
loope
push
jecxz
test
sub
sbb
xchg
mov
shrb
dec
stos
cld
inc
push
rcr
pop
xor
xor
mov
adc
add
xchg
out
out
mov
pushf
out
sbb
sar
lock
xchg
dec
sbb
int3
xchg
push
push
dec
daa
sub
push
test
inc
or
mov
pop
enter
mov
jne
adc
cli
sub
mov
fidivl
pop
mov
addl
aam
pop
mov
aaa
dec
add
mov
or
lock
arpl
and
ficoml
adc
xchg
imul
or
in
cmp
arpl
hlt
cwtl
lock
jl
and
inc
addr16
testb
adc
add
sub
pop
dec
das
ja
sub
cmp
ja
popa
int
mov
xchg
out
push
popa
out
xchg
mov
xchg
andb
cli
inc
pop
jae
sub
jle
pusha
pop
add
add
pop
add
cmp
xor
dec
xchg
push
pop
je
nop
scas
sub
xor
mov
adc
call
or
and
sub
mov
lret
dec
data16
nop
aad
pop
push
cli
imul
mov
sub
jb
loopne
out
in
fidivrs
dec
iret
sarb
ret
cmp
push
es
out
sti
sbb
mov
ja
mov
cld
jne
dec
gs
sub
into
mov
mov
inc
jbe
jno
push
pop
xor
test
add
loop
int
stos
rcr
sti
jp
ds
in
adc
pop
cmp
xchg
setne
mov
mov
pop
std
jecxz
je
lods
aad
rorb
rorb
imul
inc
jg
or
xor
pop
mov
sti
or
cwtl
mov
imul
jno
out
jmp
jne
nopl
pop
lret
cmp
push
or
pop
sbb
xchg
dec
sbb
in
pop
out
or
xor
inc
jne
sub
lock
adc
hlt
jl
adc
pop
pop
enter
mov
nop
lret
push
fsubrs
sbb
loop
cmp
push
enter
in
insb
adc
jle
ljmp
out
test
sbb
push
bound
inc
mov
pop
cmp
sub
pop
adc
aad
lods
testl
and
cmp
lret
call
test
mov
test
mov
sub
mov
xchg
xchg
xor
das
add
cwtl
les
jnp
fmuls
xchg
cmpsb
inc
cwtl
inc
movsb
cs
pop
jmp
or
push
jne
jno
addr16
dec
aas
jnp
test
push
push
cli
mov
mov
in
rcrb
mov
into
test
ret
sbb
sahf
int
bound
or
cmp
ljmp
jnp
xchg
shll
and
aad
mov
int3
lcall
lods
or
rcrb
push
into
scas
inc
repz
mov
mov
mov
xchg
cmc
add
mov
test
loop,pn
in
mov
lahf
arpl
fistl
call
mov
push
fidivl
aaa
cmp
fsin
adc
sarl
cwtl
xor
jmp
xchg
jecxz
pop
sbb
cmovno
outsb
push
lds
popf
jbe
adc
xchg
lret
mov
push
lods
jmp
cmp
aaa
dec
jmp
pop
scas
cmpsl
gs
dec
mov
lahf
mov
sbb
cmp
leave
dec
sbb
scas
xor
adc
jp
cmpb
mov
jge
lods
push
mov
outsl
lds
inc
mov
adc
push
rcrb
sbb
sub
and
sbb
cmp
loopne
jge
or
push
testb
or
mov
stos
out
fistps
inc
push
fmull
cmpsl
add
imul
push
sbb
mov
xchg
subl
sub
subb
cmp
jb
dec
sub
or
gs
xchg
shrb
repz
add
push
loopne
das
leave
lahf
pop
das
imul
push
ret
stos
push
adc
or
test
mov
mov
xor
mov
pop
cmp
push
or
mov
ficompl
cmp
fisubrs
lret
sbb
mov
pop
adc
xchg
test
inc
xchg
lock
or
insl
jecxz
and
nop
sub
in
mov
setns
ret
and
stos
out
add
mov
js
dec
mov
lock
xor
pop
push
aam
dec
pop
adc
or
std
lds
movsb
in
mov
dec
stos
fistl
or
addr16
idivb
mov
jg
loopne
pop
mov
ds
sbb
inc
iret
fwait
in
sbb
movsl
jge
pop
pop
push
dec
rorb
sar
ljmp
jae
das
sbbb
ljmp
mov
jns
inc
pop
lret
add
push
insl
jl
pop
xor
lea
and
xlat
add
pop
pop
loopne
int
movl
out
je
out
std
out
out
push
imul
cs
mov
lea
enter
sbb
cmpsb
test
or
mov
cld
mov
aaa
pop
ljmp
push
mov
daa
mov
mov
icebp
mull
push
loope
imul
pusha
lods
and
jo
mov
push
mov
add
dec
jbe
pop
adc
and
test
aad
xchg
xchg
mov
sbb
imul
arpl
loope
adc
fcompl
push
std
pop
sbb
inc
outsl
ret
frstor
push
rcrl
bnd
inc
std
or
je
pop
pop
mov
ds
push
adcb
fildl
jl
xchg
ljmp
jo
je
inc
jae
xchg
repnz
pusha
fcomps
std
test
out
fwait
mov
jns
stos
cmp
dec
aad
fisttpll
push
or
shl
sbb
push
stc
push
xchg
insb
aaa
bound
cltd
scas
outsl
sub
lcall
ja
popa
sbbb
cltd
mov
lahf
sub
icebp
pushf
and
adc
jae
push
push
repz
xchg
push
push
dec
addr16
xchg
pop
xchg
xchg
cld
pop
test
sti
pop
sub
or
cmp
xchg
scas
pop
fisttpl
gs
cmp
test
lods
pop
mov
pop
cmpsl
cmc
shlb
or
push
jmp
jnp
inc
mov
idiv
daa
push
xchg
add
stos
ljmp
scas
imul
sub
mov
xor
insb
push
cmpsl
ret
repz
jns
or
xor
add
push
sbb
push
xchg
dec
shrl
shlb
push
dec
pop
push
sbb
and
rcrb
mov
lods
jp
mov
mov
dec
sar
int
jge
icebp
or
outsl
cmp
sub
into
pop
add
pusha
sub
sub
pushw
ds
mov
sub
mov
push
lods
lea
out
xor
enter
ljmp
mov
sbb
movsl
decb
imul
pop
out
cmp
imul
mov
or
fiaddl
cwtl
aam
sbbb
push
dec
addl
push
pop
or
or
jo
shlb
xlat
int
movsb
nop
cmp
xchg
and
lea
fnstcw
xchg
cli
jle
btcl
outsl
into
jge
sbb
test
or
add
in
lret
mov
stc
pop
mov
orl
jp
add
xchg
jmp
and
imul
les
jo
cmp
mov
mov
pusha
pop
lcall
loopne
add
xor
jae
dec
mov
sub
adc
cld
subw
mov
inc
sub
mov
inc
scas
inc
mov
test
call
roll
dec
pop
mov
xor
ds
hlt
lcall
iret
inc
test
push
daa
add
mov
cwtl
aaa
or
mov
jbe
cli
push
add
jno
sahf
out
mov
or
push
sti
xchg
pusha
jg
xchg
mov
mov
sub
adc
inc
adc
add
pop
jge
sbb
mov
lods
sub
xor
xchg
or
mov
add
sbb
mov
cwtl
adc
lcall
adc
mov
aaa
mov
mov
cmp
ret
mov
push
xor
jecxz
or
fbstp
addl
test
fildl
fists
call
ljmp
fstps
fiadds
iret
pop
test
ds
das
cli
inc
lds
jmp
ds
xchg
adc
mov
and
xchg
jb
jmp
loop
ret
adc
dec
xchg
push
stos
gs
pusha
jno
test
gs
xchg
enter
shlb
lret
dec
push
cmp
arpl
or
inc
ds
cmp
jecxz
sti
popf
mov
cmc
int
popa
les
ss
stc
dec
cltd
inc
mov
xchg
push
pand
cmp
repnz
dec
mov
jns
pushl
jmp
popa
call
dec
jle
int3
es
gs
and
jne
into
xchg
push
dec
mov
and
add
and
dec
cmpsl
sub
and
inc
inc
and
pusha
pop
pop
inc
inc
xor
pop
pop
repnz
inc
pop
xlat
pop
cmc
xor
jg
jle,pn
mov
push
pop
dec
test
or
mov
xor
lret
cs
mov
cli
pop
jmp
mov
call
sub
test
adc
int
in
cmp
add
in
xor
stos
cmp
jge
rcll
enter
lea
mov
xor
mov
mov
cmpsl
scas
cmp
jle
mov
addr16
jno
loope
repz
enter
mov
loopne
and
xchg
aas
outsl
movsl
mov
mov
mov
scas
mov
lea
and
adc
inc
nop
scas
mov
out
sub
popf
fprem1
test
clc
sub
mov
add
into
loop
jae
add
dec
sbb
out
stos
cmpsb
loope
leave
or
cmp
inc
push
iret
dec
pop
pop
or
cmp
jmp
push
push
jo
in
inc
adc
repnz
addr16
and
adc
fsubr
call
cmp
or
leave
gs
push
je
jecxz
xchg
jg
sub
xchg
jl
loope
orb
pop
sub
sub
cwtl
ja
insl
xchg
lods
loopne
mov
dec
nop
jle
sub
fwait
jmp
or
popa
mov
mov
movsl
popa
push
sub
and
ror
insl
cmc
mov
pop
subl
push
xor
xchg
lahf
or
xchg
jnp
mov
shl
mov
test
jg
cli
sbb
das
dec
test
or
or
out
sti
pushf
or
clc
movsb
or
sub
xor
inc
clc
imul
std
andb
push
push
fwait
stos
cwtl
int
cwtl
imul
lret
cmp
mov
push
push
call
pop
in
xchg
test
inc
clc
loop
dec
mov
into
mov
jne
ss
inc
jmp
enter
in
jg
xchg
into
lret
xchg
sub
xorb
xor
dec
adc
xor
mov
jae
inc
xor
sbb
jb
call
sub
pop
inc
mov
mov
aad
xchg
push
xorb
cmpsb
add
popa
sub
add
xchg
lds
mov
cmp
inc
push
mov
lret
or
sti
decb
int3
pop
mov
mov
dec
pop
mov
sub
pop
shr
addr16
sub
jbe
fldcw
xorl
pop
inc
std
mov
jbe
std
push
xor
xchg
and
push
and
mov
stc
mov
or
inc
fimuls
pop
push
loopne
mov
lea
xor
xor
mov
mov
mov
pop
ret
pop
cmpl
lahf
xchg
cmp
dec
xor
cmpsb
mov
and
mov
pop
inc
js
insb
sub
ds
inc
jb
push
aad
jae
jnp
sub
add
ja
xchg
dec
iret
add
push
push
mov
ss
inc
outsl
aaa
lock
mov
xchg
int
fwait
test
push
pop
repz
pusha
mov
pop
mov
int
xor
xor
inc
adc
loop
pushf
rorb
fisttps
push
dec
jb
js
popa
fsubr
fcomp
pop
int
stc
aad
call
jmp
xchg
jecxz
js
cmp
push
and
xor
imul
push
sarb
rcr
shl
fisttps
pop
out
aas
mov
popa
ret
mov
sbb
xchg
xchg
inc
jb
movsb
sub
push
popf
mov
mov
add
call
push
add
sbb
stc
fcomi
xchg
lods
push
adc
stos
mov
adc
int3
fcomi
dec
sub
outsb
xchg
cmpb
sbb
test
pushf
aaa
lods
dec
and
mov
mov
scas
sub
andb
pushf
lahf
mov
cmpl
adc
sub
add
xchg
jl
xchg
push
ret
jle
rorl
and
pop
rcl
cmp
sahf
sbb
xchg
inc
stos
mov
ret
inc
cmc
sub
lods
mov
fnstenv
arpl
sub
push
xor
mov
orl
xor
js
enter
inc
or
call
jmp
icebp
cmp
andl
xor
pushl
dec
dec
mov
push
sbbl
inc
mov
cmc
pop
inc
push
shl
fwait
xchg
movsl
mov
jge
pop
and
xor
test
shrb
sub
jns
sbb
test
sbb
jne
jnp
arpl
out
mov
cmp
mov
fadds
pop
loopne
stc
inc
pop
stc
sbb
lods
add
maskmovq
xchg
push
movsb
in
inc
adc
inc
sub
inc
addl
push
rcrl
adc
scas
inc
mov
mov
dec
inc
mov
into
dec
push
arpl
mov
jge
pop
mov
adc
sbb
lcall
xor
and
in
sub
shrd
xor
sbb
sbb
stc
xchg
gs
and
cmp
lods
ljmp
sbb
insb
push
out
pop
xor
push
push
shll
cmp
scas
sbb
adc
sbb
test
xchg
in
jno
adcb
imul
sub
adc
insb
out
fstl
add
leave
add
mov
repnz
and
push
push
pop
mov
ja
mov
aas
dec
inc
pop
mov
in
std
sbb
xchg
mov
or
mov
inc
jmp
xor
jle
push
adc
iret
leave
xor
pop
cmp
mov
mov
inc
jbe
pop
fldt
cmp
into
idivb
ss
enter
push
loop
or
shr
std
aad
or
or
push
vcmpsd
mov
je
push
sub
pop
inc
iret
rorb
clc
jge
movsb
adc
adc
mov
fdivrl
sub
fcmovnb
roll
in
mov
cmpsb
mov
sbb
ds
or
lods
hlt
negb
xor
fisubrs
pop
jmp
stc
dec
mov
and
loope
out
js
mov
mov
push
mov
fiadds
pop
and
sub
jmp
sbb
pop
and
leave
xchg
inc
in
add
test
and
test
into
push
clc
push
pop
ret
neg
mov
or
subl
scas
loope
adc
imul
cmpsl
es
mov
inc
std
mov
push
imul
test
adc
sub
lret
pop
jge
testl
dec
popl
cmp
jl
mov
hlt
mov
push
and
shrl
dec
popa
and
adc
mov
jae
loopne
sub
shufps
xor
inc
adc
out
loop
rorl
xlat
inc
mov
mov
subl
dec
aas
xchg
push
aam
es
cmpsb
data16
push
fdivl
into
xchg
jecxz
dec
push
pop
aam
inc
adc
fsts
repnz
add
in
andb
push
scas
pop
scas
mov
push
rcl
jo
test
or
test
pop
and
adc
sub
xor
jle
lcall
push
inc
imul
adc
cmpsl
ret
push
inc
jge
stc
gs
cmc
jmp
jo
imul
in
adc
rolb
ljmp
or
push
xchg
mov
bound
loope
sbb
xchg
fcmovnbe
lods
push
test
jb
jge
cmp
pop
pop
xlat
add
ficomps
and
cmp
add
imul
push
daa
dec
shrb
out
out
lock
ret
push
xorb
jno
popf
lahf
xchg
pop
insl
data16
fsubl
xchg
push
adc
mov
dec
mov
cmp
cs
fmuls
andl
mov
sti
adc
sub
lcall
fisubs
outsl
fstpl
xchg
lods
xchg
fidivrl
jnp
into
data16
test
or
aam
iret
inc
push
cltd
fwait
stos
mov
mov
or
sbb
into
out
gs
xor
roll
test
fidivl
pop
imul
sub
xor
test
jecxz
int
test
cmp
jg
inc
dec
aam
in
inc
sbbl
aad
jnp
sbb
loop
cmp
or
mov
push
iret
sbb
push
jbe
adc
pushf
imul
into
dec
test
rolb
aaa
fnstcw
dec
in
mov
add
xor
lea
sub
fwait
cmp
lds
sarl
and
jecxz
loope
outsl
loope
inc
or
addr16
mov
aas
ljmp
push
cmpsl
sbb
jno
adc
inc
mov
inc
mov
cmpsb
das
bound
fnstenv
xchg
sub
add
rcll
sbb
and
cld
psraw
mov
pop
adc
mov
add
ret
xchg
data16
sbb
jecxz
jnp
iret
xor
pop
xor
mov
and
loopne
xchg
lcall
cmp
pushl
pushf
or
aam
mov
sbb
clc
and
es
mov
xchg
pop
jecxz
or
fimull
adcl
shlb
cmpsl
jne
sti
inc
fildll
into
jmp
sti
sbbl
jp
xchg
sbb
cli
sub
je
stc
pop
pop
bnd
ret
xchg
mov
mov
scas
hlt
lock
call
sti
lea
jae
add
cmc
stos
xor
shr
ja
inc
sbb
add
addr16
dec
and
lahf
push
xchg
lods
or
lods
xor
cwtl
mov
push
or
and
aas
push
int3
stos
push
cltd
cmpsl
lret
xor
outsb
mov
add
adc
pop
subl
dec
mov
or
cmp
xchg
in
aam
not
pop
mov
mov
xchg
jno
pop
mov
inc
in
testb
rol
shlb
pop
mov
pop
adc
in
push
pop
fidivrl
push
push
sbb
adc
cmp
inc
mov
jp
cmp
out
jae
add
inc
mov
cmp
fcmovnb
in
xchg
inc
ljmp
scas
ret
scas
xchg
sub
inc
push
dec
lds
cmp
bound
dec
shrb
sub
aad
push
mov
pushf
sarl
dec
les
arpl
mov
dec
gs
jmp
aam
jbe
sbb
ljmp
mov
xchg
xchg
push
rorb
jecxz
outsb
data16
pop
mov
jge
addb
pop
sti
mov
push
add
lahf
popaw
cwtl
or
jo
call
js
pop
mov
inc
mov
mov
mov
xor
in
xchg
dec
inc
or
mov
jecxz
hlt
xor
cli
xchg
dec
mov
cmp
cmp
and
mov
out
mov
mov
scas
sbb
repnz
fstpt
cmp
or
int
repnz
aaa
cmc
inc
xor
mov
les
cmc
shlb
lret
popf
int
push
hlt
jmp
imul
push
push
jae
pop
lea
cld
popf
dec
sbb
data16
mov
cli
pop
rolb
mov
sti
in
rcll
mov
pusha
pop
and
fstps
push
inc
dec
jecxz
cld
and
mov
cmpsl
add
adc
inc
and
movsb
sti
into
push
push
insl
add
or
sahf
and
jge
es
and
fisttpl
cld
stc
loop
sub
dec
adc
jmp
mov
loopne
add
or
push
jbe
lds
push
fcmovbe
call
ds
shll
pushf
or
sub
mov
sbb
iret
mov
popf
push
imul
mov
in
mov
ret
dec
dec
push
xchg
mov
fs
jns
divl
insl
lret
inc
pusha
push
pop
and
jae
push
jle
lods
push
ret
aam
cmp
outsb
fisubrl
push
daa
stc
in
jno
enter
insl
int3
ret
xchg
fidivl
rolb
xchg
mov
les
in
aas
or
add
pop
push
sub
jg
insl
cs
cmp
inc
sub
fstl
lock
and
stos
xor
repnz
cli
jg
stc
push
dec
imul
pop
nop
cmp
sbb
cwtl
adc
xchg
push
scas
aas
loop
xor
dec
pop
int3
mov
mov
mov
ds
test
in
push
imul
xor
out
test
xchg
es
negl
icebp
icebp
lods
out
adc
pop
enter
pop
into
test
lret
mov
scas
push
loopne
mov
test
fbld
fsts
jno
mov
xor
stos
ds
bound
loope
add
ret
xchg
pop
ljmp
jne
sbbb
hlt
adc
jge
lahf
lods
lods
and
mov
pop
sbb
push
les
popa
ficompl
insl
mov
popf
xchg
dec
mov
iret
adc
jno
js
rorl
shl
repz
adc
mov
sbb
stc
push
add
pushf
mov
test
stc
push
pop
add
popa
addr16
lret
daa
add
lret
andb
or
mov
dec
lret
pop
test
mov
cmp
idivb
or
xor
mov
xor
and
test
insl
xor
mov
in
out
push
mov
cld
jmp
add
aad
dec
jg
xchg
lret
push
ret
sbb
sub
or
and
mull
inc
jno
pop
ret
cmp
idivb
bound
and
push
outsl
and
movl
and
das
loop
xchg
in
mov
mov
out
movsb
or
xor
mov
fwait
push
add
jnp
lcall
pop
add
and
shl
push
and
ficoms
psubq
mov
jb
push
int
inc
sar
add
or
cs
pop
adc
cmpsb
lods
sbb
push
out
inc
test
pushf
fistps
jnp
adc
jns
push
int
mov
add
fisubrl
repz
xchg
es
lods
subl
popf
mov
lahf
cmc
out
aas
mov
testl
pop
xchg
sub
out
pushf
ja
lds
stos
lods
dec
mov
fnstcw
dec
add
add
mov
jae
mov
xchg
and
mov
in
mov
inc
js
xchg
loope
xor
stos
sbb
add
clc
mov
lret
mov
or
out
jbe
push
dec
mov
add
aad
or
loop
sub
loop
les
int3
mov
sbb
sbb
imul
fimull
cs
xchg
dec
sti
stos
sub
repz
pop
fcomip
jne
aad
xchg
adc
cbtw
pop
enter
mov
inc
pop
add
mov
popa
push
push
pop
clc
mov
movsb
push
leave
push
int3
repnz
out
stos
sub
leave
into
in
mov
mov
punpckldq
or
xchg
push
sub
pop
dec
mov
inc
cld
cmpsb
leave
les
popa
mov
popf
cltd
aad
repz
sbb
pop
int
lock
clc
cmp
rcrb
inc
sbb
leave
and
js
pop
sahf
cmp
rcrb
mov
ret
push
addr16
adc
stos
sbb
mov
pop
jle
add
out
in
jns
adc
mov
in
xchg
cmp
adc
xor
sbb
or
jg
dec
nop
cmpsl
ds
mov
sahf
cmp
xchg
jmp
xor
xchg
stc
scas
cmp
push
les
push
inc
out
cmp
int3
scas
mov
pop
push
enter
add
mov
gs
xorl
pop
xchg
lds
std
mov
xchg
out
jle
push
inc
xchg
lcall
sub
dec
pop
loop
lret
add
add
jne
loope
jno
ds
imul
les
or
in
add
sbb
daa
outsl
outsb
or
xor
out
cltd
jo
push
xor
cld
mov
jg
cmp
adc
shl
xchg
repz
ss
lahf
cmpsl
mov
loopne
ja
xchg
stos
nop
repnz
mov
fs
arpl
lret
leave
mov
out
and
jle
cld
cmp
pop
and
dec
sbb
xor
xchg
test
aaa
pop
ss
jbe
es
push
bound
lea
stos
xchg
adc
mov
scas
sti
cmp
and
mov
mov
pop
js
sbb
insb
adc
mov
lret
lea
rolb
mov
imul
add
sub
fiaddl
adc
out
popf
or
jnp
in
inc
rcl
add
xchg
outsb
scas
inc
icebp
sbb
enter
push
sub
mov
movsb
shlb
rorl
cmp
addr16
and
sbb
inc
cmp
js
rol
sub
das
pop
mov
les
adc
mov
mov
cltd
adc
dec
push
dec
mov
push
addr16
int
xorb
rol
xor
mov
push
aad
adc
sub
jle
cmpsb
std
fimuls
mov
and
push
adc
into
push
dec
push
movl
pop
out
mov
mov
mov
test
fnstcw
sarb
mov
pop
mov
in
ror
stc
and
cmpsl
xchg
jl
mov
scas
inc
pop
mov
dec
jbe
and
mov
jg
cmp
xchg
cltd
jb
and
push
mov
das
adc
pop
cmp
mov
xor
cltd
mov
sbb
cld
sbb
mov
cmpsl
jp
shl
add
lahf
jb
or
insl
cmp
push
or
arpl
cmp
loopne
cmp
pushf
jnp
fnstenv
pushf
mov
fiaddl
xchg
add
notb
scas
add
clc
cli
enter
sub
pop
sbb
sub
mov
xor
sub
jp
mov
xchg
sub
cltd
addl
subl
sti
lret
mov
call
leave
push
or
out
repnz
sti
add
jae
stos
xchg
jb
into
inc
pushf
sub
mov
fisubs
or
sbb
mov
cmp
jno
je
es
mov
jns
insb
lods
ret
rorb
sbb
cmpsl
iret
mov
je
in
jne
inc
push
in
insl
cmp
cmc
sahf
mov
push
mov
sbb
xlat
int3
pop
dec
cwtl
dec
xchg
adc
xchg
sub
jmp
sub
shlb
or
pop
push
cmpsb
icebp
out
popf
in
mov
sub
xchg
lret
fwait
gs
loope
repz
pop
ds
xchg
in
jl
cmpsb
scas
cmp
jle
mov
xor
mov
mov
inc
xchg
mov
jnp
lahf
test
adc
shl
mov
aaa
movsb
stos
testl
jmp
pop
xlat
pop
cmpsb
or
mov
sub
cmp
mov
or
xchg
mov
push
stos
sbb
dec
in
cld
sbb
icebp
mov
rolb
jge
cs
leave
jge
jp
nop
scas
sub
pop
sbb
mov
jo
out
lods
jno
adc
in
cmp
sbb
fadd
fildl
pop
sbb
insl
hlt
jp
sahf
add
movsb
mov
pop
dec
add
sub
mov
inc
subl
les
sub
sbb
arpl
or
mov
out
fimull
or
cmp
rcrb
into
pop
in
mov
xchg
dec
andb
jne
loop
cmp
inc
enter
frstor
dec
sbbl
pop
mov
sub
mov
add
sbb
lret
push
push
adc
or
and
insl
cmp
repz
in
push
xchg
loope
and
xlat
test
dec
sbb
cwtl
sbb
lret
enter
add
rorb
roll
pop
mov
cltd
pushf
and
xchg
cmp
faddl
inc
or
sub
adc
movsb
pop
dec
inc
cltd
push
jmp
pop
xor
cli
cmp
push
fisttpll
icebp
and
dec
add
jp
rol
loope
xchg
mov
push
lock
inc
jns
ja
aam
jb
loopne
pop
shr
mov
fimuls
push
ljmp
pop
in
imul
icebp
or
dec
repz
pop
les
jmp
push
jno
xor
lods
ljmp
jp
xchg
aad
and
mul
test
lahf
cld
sub
add
mov
adc
xchg
or
sbb
in
and
out
lock
daa
jmp
xor
mov
mov
jne
add
cltd
enter
enter
cli
aaa
mov
imul
xchg
testl
add
jbe
pusha
push
sti
push
sarl
les
cmp
push
xchg
scas
xor
sbb
pop
arpl
sbb
js
and
jmp
mov
cltd
addr16
clc
adc
cmpsb
cld
dec
xlat
adc
or
leave
sbb
jge
aaa
sub
adc
xchg
sahf
sub
cmp
xchg
mov
insl
les
int3
ficompl
sub
inc
pop
in
movsb
outsb
mov
xor
lcall
jno
iret
jl
cltd
call
xor
dec
mov
add
in
xchg
mov
add
cli
fistpll
push
jne,pn
insb
paddsb
jg
or
stos
dec
in
ljmp
out
jo
rcll
jp
sbb
movsb
dec
jnp
ja
mov
pop
hlt
insl
test
pop
pop
into
int3
dec
pop
lods
popa
ficompl
rcrl
loop
arpl
adc
repnz
ja
mov
in
push
pop
cmp
sbb
ljmp
dec
scas
mov
lret
add
dec
repnz
es
mov
xchg
pop
inc
shrb
push
mov
xor
dec
sub
adc
mov
les
pusha
pcmpeqb
dec
pushf
je
sub
jne
adc
push
subb
es
pop
mov
xchg
arpl
inc
mov
cmp
add
adc
mov
dec
inc
add
sti
pop
mov
jno
mov
ljmp
sbb
fs
repz
mov
jl
adc
leave
sbb
add
push
push
inc
pop
popf
daa
cmpsl
mov
and
cltd
fmul
ds
push
bound
out
sbbl
sbb
or
mov
jp
jae
imul
popf
sub
cmp
addb
xlat
arpl
lret
leave
mov
mov
scas
sbb
inc
movsl
in
imul
adc
mov
lods
jge
ss
pavgw
cmpsb
imul
pop
sarl
dec
sub
cmpsb
mov
mov
or
or
leave
imul
sti
pop
int3
movsl
sarb
jmp
sub
sub
or
in
dec
jne
dec
fdivr
out
popa
or
loop
mov
adc
lret
cmp
cmp
jno
sbb
and
shll
adc
mov
ffreep
lcall
or
sbb
cmp
cltd
jp
repnz
jno
aam
fucomp
sbb
xchg
sahf
out
insb
ljmp
sbb
push
pusha
cmp
data16
sbb
das
test
and
fs
dec
loopne
adc
or
insl
push
hlt
dec
and
mov
and
cs
dec
sti
int3
std
and
dec
lea
sub
mov
mov
sti
cwtl
addr16
mov
outsb
adc
pop
pop
das
pusha
test
pop
aad
in
cmpsl
pop
push
mov
sub
jae
add
jecxz
adc
sbb
push
hlt
jmp
outsl
out
scas
xchg
ja
push
orl
pop
add
jle
pop
add
lahf
xlat
sub
arpl
pushf
mov
cs
outsb
add
repz
xor
rorb
outsl
mov
imul
add
inc
es
mov
mov
es
jbe
int
mov
sub
aam
inc
xlat
mov
icebp
notb
add
xchg
xchg
xor
repz
fistpl
cmpsb
xchg
mov
leave
inc
lret
dec
es
addb
mov
xchg
mov
sbb
mov
inc
adc
out
xor
xchg
xchg
push
cmp
jge
loopne
loop
pop
mov
dec
and
aas
mov
or
dec
sbb
xchg
pop
test
ret
add
lea
add
cld
push
aaa
jae
jnp
adc
jecxz
test
sub
rclb
insb
lock
push
popf
movsb
insl
rcll
cmpsb
imul
or
cmpsb
arpl
jg
xchg
mov
fldcw
adc
push
pop
in
sti
push
lods
mov
mov
ljmp
in
pusha
jle
jg
xchg
aam
pop
sbb
adc
stc
push
std
adc
fwait
mov
or
aad
xor
xchg
mov
cmpb
hlt
jb
sub
rcll
mov
sub
mov
sbb
sub
lahf
lret
ljmp
mov
pop
sbb
xchg
sub
jge
scas
mov
inc
scas
outsl
aad
movsb
cmp
cmpsb
pop
mov
scas
icebp
mov
xchg
fyl2xp1
fs
int3
xor
and
pop
mov
shll
adc
xchg
in
adc
inc
pop
fcmovnu
lods
test
mull
jl
ret
xor
xchg
ds
fdivrl
leave
jle
stc
mov
jp
lods
cmp
push
cmp
pop
and
aaa
pop
jge
and
cmp
lret
push
std
xor
jno
adc
jb
push
push
je
imul
sub
cmp
mov
aaa
push
data16
mov
dec
xchg
or
mov
ja
popl
leave
inc
stos
sbb
fisttpll
cmp
aas
lret
pop
add
popl
add
in
fs
das
cli
call
mov
pop
push
lds
add
jecxz
jmp
jno
rclb
xchg
das
mov
and
outsl
std
nop
jnp
push
enter
mov
mov
insl
and
aaa
das
jnp
push
out
xchg
dec
xor
mov
adc
or
repnz
lods
pop
add
ficoms
movsl
jl
int3
jb
lret
lcall
movsl
fstpt
sub
xchg
mov
pop
dec
icebp
dec
lcall
xor
mov
pop
loop
pop
icebp
or
lahf
cmp
cmpsl
cli
mov
cmp
tzcnt
addb
shr
mov
sbb
arpl
mov
cmp
inc
addr16
out
inc
push
int
add
rol
xor
outsl
jae
sub
jbe
popa
mov
loope
push
mov
mulb
adc
pop
dec
cs
insb
lds
mov
subb
stos
jno
inc
mov
jge
imul
stc
xor
inc
enter
and
je
enter
nop
jge
in
mov
pop
xor
test
or
jb
and
out
mov
pop
out
pop
clc
mov
out
or
push
adc
mov
das
xor
lahf
jb
leave
out
push
jecxz
movsb
iret
out
out
push
push
pop
pop
cltd
or
sahf
leave
cs
push
out
mov
mov
cli
pop
dec
jnp
cmp
lret
mov
cmp
daa
jecxz
mov
icebp
dec
or
lods
fildll
cltd
out
lock
push
in
arpl
pop
movsb
out
imul
jmp
mov
mov
lds
sbb
mov
push
pusha
xchg
mov
mov
and
xchg
add
testb
inc
jl
inc
push
add
mov
or
xor
out
add
dec
dec
stos
rol
add
adc
loop
sbb
int
cli
push
fmuls
std
jae
aas
mov
out
out
gs
or
fidivrl
aaa
in
add
pop
jb
inc
add
rcl
jmp
pop
inc
std
inc
in
ljmp
int3
call
stos
xor
push
sbb
dec
repnz
lds
loopne
jl
inc
cmp
pushf
adc
sub
scas
testl
scas
pop
pop
or
and
aam
popf
push
shrl
ret
std
xor
lahf
cmp
inc
cltd
sub
jne
movl
pop
imul
icebp
shr
inc
cmc
adc
incb
leave
sbb
and
jno
in
shl
and
psubb
xorl
fstpt
jmp
or
aad
in
aad
int
jne
test
out
es
cs
les
dec
dec
jne
mov
icebp
out
xor
mov
js
mov
and
sbb
adc
ret
js
in
stos
sub
sbb
in
add
sbb
mov
mov
fbld
shl
sub
jo
cmp
sub
outsl
cmp
adc
mov
sub
pushf
dec
and
push
lock
dec
jb
or
add
jecxz
stos
ss
jno
andb
sbb
lock
out
jge
sbb
xlat
jge
mov
in
jnp
cmpl
icebp
xlat
js
xchg
sbb
daa
dec
aas
test
std
cmp
dec
movsl
call
out
cmpb
scas
fiadds
rclb
mov
sub
inc
dec
bound
std
cmpsl
mov
imul
jmp
rclb
mov
cmp
adc
add
leave
inc
sub
xlat
ja
xchg
mov
mov
mov
iret
inc
ret
push
data16
jge
arpl
sbb
xchg
mov
and
sbbb
and
fldl
test
push
lods
inc
loop
cmpsl
movsl
pop
mov
gs
push
loope
push
sti
addl
pop
testb
stos
fsubl
pop
nop
pop
jmp
cld
fs
xor
test
outsl
push
and
or
mov
and
cli
dec
pop
iret
inc
pop
xchg
sahf
xchg
cmp
sub
push
xchg
jns
sbb
mov
cmp
out
out
mov
loope
cmpsl
cmpsl
inc
movsb
add
add
lcall
push
rcrl
push
popf
push
add
popf
mov
sub
in
push
lds
push
aad
push
lock
add
xchg
and
out
push
sbb
lret
push
and
outsl
xchg
or
cmp
jne
mov
stc
mov
fnstsw
jge
cmp
pop
pop
jns
jp
mov
in
mov
lds
jns
pop
sarl
ss
and
xor
xor
mov
loop
mov
out
movsb
pusha
or
jle
dec
mov
jno
or
cwtl
leave
sbb
aam
and
and
pop
mov
push
jo
sahf
sarb
or
xor
or
pop
xchg
mov
or
push
push
in
in
xor
xchg
cmp
sahf
jne
sub
clc
shrl
inc
mov
adc
pusha
and
fadds
sbb
mov
xlat
push
and
jb
das
push
xchg
in
mov
mov
sti
cld
int
aad
mov
inc
push
mov
enter
ror
sub
mov
subb
jg
jl
mov
int3
push
mov
out
insb
and
or
into
pop
pop
xchg
and
inc
cmp
into
data16
pusha
stc
or
cli
xchg
clc
aam
xchg
mov
mov
inc
or
int
inc
sub
sub
int3
pop
push
fidivrs
orl
loop
out
mov
mov
adc
jmp
pop
pushl
cmpsb
shll
out
xchg
mov
mov
push
mov
out
and
es
or
mov
lock
mov
mov
sbb
push
prefetcht0
and
adc
pop
test
jo
mov
mov
scas
sbb
shll
out
lret
xor
imul
push
in
cmpsb
push
dec
pop
je
pop
gs
imull
push
jp
loopne
pcmpeqd
movsb
out
cmp
test
push
rorl
dec
add
call
or
dec
cld
push
mov
clc
testl
xchg
mov
inc
and
lods
test
testl
push
pop
aaa
mov
addl
ret
mov
and
ja
sub
mov
mov
pop
test
mov
mov
insb
cmp
adc
push
sbb
jle
inc
aam
and
int
fcoml
je
adc
mov
mov
cmpl
pop
dec
add
sub
inc
pop
add
mov
add
ret
jp
mov
insl
xor
pop
cmc
fisttpll
and
and
inc
xchg
and
pop
or
pop
push
insl
addr16
push
mov
inc
std
push
addr16
jmp
jo
addb
sbb
fisubs
add
sbb
and
adc
lcall
insl
jle
sbb
cmpsb
ds
fisttpll
or
xor
sub
dec
jle
mov
mov
sbb
jb
scas
pushf
je
jns
ljmp
dec
ret
dec
nop
cli
hlt
xor
sbb
or
push
mov
jge
movsl
sbb
movsb
insl
mov
dec
outsb
movsl
dec
mov
dec
iret
fwait
cmpsl
mov
std
iret
jae
push
push
mov
mov
mov
cwtl
jno
iret
sub
push
dec
xor
loope
fst
test
inc
popa
out
out
daa
enter
xor
or
out
mov
add
jmp
lcall
mov
or
int3
loopne
mov
add
outsl
adc
xor
lea
ja
jnp
jp
sbb
jge
push
sbb
dec
fwait
nop
cmc
testl
adc
jp
iret
push
shl
adc
jae
and
mov
xchg
rorl
jge
enter
pop
sub
ficomps
pusha
xchg
pop
xor
int
rcrb
adc
dec
pop
xor
add
clc
das
loope
aad
inc
cmp
lock
xor
sarl
sbb
gs
pop
mov
lods
divb
mov
or
aam
pop
mov
fcmovnu
paddd
mov
or
mov
inc
outsb
mov
push
or
adc
mov
and
adc
jle
pop
scas
mov
adc
insl
repnz
inc
mov
sub
mov
test
mov
pop
cmp
mov
cmpsl
inc
and
adc
fisubrl
pop
pop
outsl
addr16
daa
fistpll
sbb
into
jo
mov
and
xchg
loope
or
gs
jns
mov
pop
or
nop
in
daa
pop
pop
pop
or
out
xchg
mov
mov
and
je
and
cmc
movsl
cs
negb
test
scas
repz
mov
mov
dec
push
test
xchg
mov
sbb
pop
xchg
inc
cli
adcb
testb
pop
xor
rcrl
fists
fdivrl
movl
das
mov
jecxz
loopne
mov
orb
or
push
pop
test
lcall
stos
xchg
pop
das
mov
inc
mov
jge
in
movsl
addr16
jb
mov
popf
pop
xor
sbb
ret
and
enter
add
rolb
sub
push
test
cli
outsl
jl
dec
push
fcmovbe
sbb
es
jbe
ds
adc
mov
gs
out
test
in
sbb
push
mov
imul
push
ljmp
mov
fisubs
lahf
add
mov
mov
shll
jg
outsb
sub
loop
sahf
rol
test
in
mov
jp
push
dec
xchg
call
loopne
or
dec
fsubp
pop
inc
scas
jle
fstps
jge
subb
inc
sbb
daa
sub
test
call
loopne
or
ret
xorb
sbb
mov
jno
xchg
aam
xchg
add
mov
xorl
jp
mov
push
mov
hlt
dec
push
and
in
es
mov
cmp
imul
pop
leave
ljmp
shrl
das
adc
rcr
lea
and
sti
jl
and
outsb
and
and
sub
popf
mov
mov
xchg
aas
loope
or
or
cmp
mov
cmp
insl
ss
paddusb
sub
jp
jnp
mov
mov
dec
in
scas
rol
lock
add
pushf
or
popa
dec
out
loopne
aas
push
mov
and
and
cmpsb
jo
sub
mov
call
cmp
mov
lret
jp
and
cmpsb
popa
arpl
sub
stos
hlt
data16
dec
pop
js
inc
inc
das
inc
xor
mov
add
insb
psllw
in
in
adc
dec
and
fisttps
ror
cmp
ss
fistl
dec
imul
adc
imul
jns
std
or
call
inc
scas
and
xchg
cmp
ds
cmp
in
push
dec
xchg
push
std
mov
clc
bnd
lret
or
call
or
js
dec
pop
in
inc
pop
mov
jl
xorl
pop
lret
inc
cld
test
xchg
shrl
cmp
test
hlt
fs
inc
mov
mov
test
jb
xor
out
addr16
dec
sbb
xor
leave
xchg
loop
decb
pop
iret
xor
loopne
test
movsb
adc
mull
or
cmp
out
add
fdivr
xchg
sbb
sub
sbb
lods
popa
dec
push
or
cmc
dec
leave
dec
cmpsb
xchg
fisttpll
mov
adc
pop
scas
repnz
aad
cmp
mov
xor
shlb
ds
mov
ret
orl
push
xor
xor
sbb
mov
adc
xchg
mov
out
mov
in
loop
push
sbb
xchg
movsl
pop
push
mov
sub
push
insb
into
jecxz
jbe
pusha
and
mov
push
fs
pop
iret
fnsave
rorb
mov
daa
int3
popa
push
sub
mov
cli
mov
icebp
pop
lods
and
movsb
mov
adc
mov
popa
shll
movsb
add
inc
aaa
in
addb
dec
mov
and
sub
mov
mov
add
pop
mov
pop
scas
push
cs
ja
fsts
mov
mov
pop
adc
aam
sub
xchg
xchg
loopne
in
fistps
pop
mov
sbb
idivb
lds
cmp
mov
cmp
inc
sbb
jmp
imul
jnp
daa
iret
push
enter
stos
div
or
xlat
jg
inc
stc
xor
mov
aaa
mov
xchg
mov
cmpsl
xchg
outsl
insb
adc
xor
data16
push
jl
imul
cmp
sbb
fstl
cmp
push
lret
mov
dec
or
or
adc
jle
mov
jne
dec
push
lods
lret
xor
xor
xor
xor
sub
xor
dec
sbb
mov
ret
push
lods
lods
push
mov
and
ja
xchg
push
or
sahf
popa
xor
or
scas
dec
in
xchg
sbb
adc
or
rol
and
pop
clc
es
pop
mov
jg,pn
pop
push
pop
inc
jb
aam
fnstsw
rclb
mull
pop
test
sub
mov
jg
xor
test
pop
notl
mov
out
push
xchg
ret
add
insl
insl
test
clc
mov
pop
lcall
adc
sbb
fcomps
aad
and
scas
loope
cmp
std
in
ss
adc
setg
jno
scas
jnp
fnstenv
fwait
mov
xor
push
sub
lods
jg
mov
pop
mov
into
mov
movsl
pop
adc
js,pt
pop
test
push
cmpsb
icebp
jl
jle
popf
and
cmpsb
ss
fs
cmp
push
fwait
scas
pop
push
or
popf
cmpsl
and
push
sahf
mov
inc
sbb
push
fisubl
push
sbb
pop
mov
push
insl
lock
sbb
cmp
mov
stos
jecxz
jge
dec
sub
loopne
call
lahf
fistpll
xchg
in
aam
icebp
mov
lds
add
inc
push
std
pop
aam
sbb
jecxz
icebp
jmp
je
mov
movsb
pop
mov
sub
dec
and
mov
movsl
in
ss
dec
aam
fcomps
mov
adcb
daa
sbb
xor
xor
out
jno
rcrl
ljmp
xchg
xchg
mov
dec
cmpsb
lods
idivl
xchg
leave
dec
das
mov
setle
pop
cmc
cmp
ja
dec
out
inc
out
xor
pop
jb
leave
or
outsb
mov
lock
add
addr16
sbb
fwait
repnz
mov
pop
mov
add
or
cmp
lods
mov
push
mov
or
lock
fsubrs
shll
push
xchg
push
shl
jmp
or
cmp
outsl
insl
inc
cmp
add
adc
mov
stos
daa
int3
rorl
out
mov
movsl
jg
mov
dec
aam
dec
daa
lahf
roll
mov
repnz
les
aam
lret
andb
jle
xchg
stc
adc
dec
hlt
sbb
std
shrl
pop
add
shlb
xchg
fwait
sub
in
sahf
loopne
mov
imul
std
fstpt
enter
adc
mov
pop
sbb
stos
push
push
loopne
xor
sar
and
dec
popa
leave
dec
scas
dec
rcl
clc
out
cmpsb
add
sbb
sahf
xor
das
jns
cltd
cmpb
adc
jmp
xchg
sarl
xchg
lds
xor
inc
adc
mov
lods
push
mov
arpl
fs
sub
xchg
mov
imul
sbb
and
or
pusha
loop
mov
pop
xlat
test
pop
inc
mov
icebp
loopne
fs
inc
xor
lahf
sub
xchg
and
shll
jo
in
jg
les
into
lock
mov
xor
rorl
inc
mov
xchg
mov
cmpsl
xchg
pop
push
jl
pop
jle
dec
out
ljmp
dec
push
test
clc
mov
movsl
mov
fisubs
repnz
out
ret
inc
lods
aas
or
push
fsubr
cmp
jns
mov
test
mov
pusha
cmp
adc
jb
xor
sub
rclb
rolb
add
xor
shrd
imul
stc
std
sub
push
dec
adc
add
in
pop
into
xor
stos
cld
mov
sbb
aad
popa
and
xchg
mov
bound
ret
cmp
in
movsl
xchg
jg
jecxz
and
dec
aam
sbb
imul
jl
add
ja
mov
jmp
or
jl
mov
addr16
inc
jp
inc
add
and
add
clc
fdivs
arpl
add
push
and
mov
add
cmp
bound
and
into
push
iret
xchg
push
add
pop
int3
dec
mov
mov
outsb
mov
mov
cwtl
or
int3
stc
lods
jo
mov
jge
outsl
loopne
push
mov
aad
jge
sahf
leave
mov
pop
jo
into
lret
jge
dec
sub
stc
insb
mov
jp
scas
not
rcll
cmp
xchg
mov
test
call
insb
js
test
lcall
ds
les
add
lahf
fcomp
xchg
dec
test
push
pop
xchg
xor
cmp
popf
addr16
rcrl
sbb
iret
xlat
jmp
xor
inc
jne
mov
mov
mov
je
xchg
sub
ss
jmp
or
jle
rcrb
lcall
jnp
ror
dec
pop
lret
subl
sbb
addr16
stos
popf
shrl
xchg
scas
sub
xor
imul
imul
dec
and
xchg
mov
push
sahf
and
xor
push
sub
xlat
ss
ja
loope
std
push
jb
rcl
ss
sbb
add
cmp
cmpsl
cli
jg
jns
iret
jae
mov
add
inc
sub
scas
out
in
cmc
dec
jno
adc
scas
inc
pop
cmpsl
adc
inc
mov
flds
out
pop
jle
dec
xchg
xchg
dec
gs
inc
test
in
pop
cmp
mov
push
insl
int3
mov
inc
mov
lahf
ret
cld
inc
push
lds
fs
xor
and
push
test
insb
dec
jp
sub
push
mov
adc
in
in
add
mov
shr
mov
mull
aaa
movsb
clc
fisubs
scas
sub
lods
add
xchg
mov
ss
mov
mov
bound
fidivl
pop
scas
dec
mov
cwtl
sbb
mov
lock
test
scas
or
mov
out
and
add
movsb
or
es
lahf
imul
push
jbe
lods
add
jge
xor
repnz
push
add
mov
add
push
or
fnstenv
ss
pop
pop
add
jb
jbe
jbe
outsl
dec
fdivrl
and
cmpsl
xor
push
jecxz
push
jns
jno
add
rcll
dec
inc
mov
jl
pop
jle
int
das
mov
shll
fistpl
outsb
lret
orl
push
cmp
and
dec
and
cmp
shll
or
rorb
jl
sbb
and
lock
data16
dec
test
sahf
inc
pushf
mov
cmpb
adcl
sahf
mov
in
lea
add
push
jb
mov
or
add
sub
jl
clc
fmul
pusha
xor
jae
pop
jno
popf
jnp
aam
adc
clc
sbb
inc
sub
pop
ss
jp
arpl
icebp
xchg
pop
adc
sbb
mov
xchg
lcall
aas
cltd
pusha
push
cmp
xor
test
add
jge
lods
movsb
inc
sbb
xor
pusha
loopne
inc
pop
pop
adc
mulb
clc
dec
jb
inc
xor
ds
pop
adc
clc
adc
jg
movsb
push
roll
mov
out
jl
xor
ds
add
cmc
mov
jge
popa
je
dec
jg
add
data16
mov
leave
xchg
jg
xchg
and
inc
jb
fnstsw
aas
push
rorb
ret
ret
mov
mov
inc
dec
cltd
ret
adc
mov
pop
adc
mov
push
ret
aas
pop
lahf
outsl
cmp
mov
hlt
sti
mov
fdivrl
cli
or
push
xchg
pop
subl
jns
test
or
stc
mov
fildl
fcomps
jno
iret
ror
repnz
iret
push
ja
sub
mov
adc
aam
inc
mov
or
dec
pop
jle
movsl
iret
pop
negb
lahf
or
stc
ds
repz
fdivs
loope
and
outsl
adc
fwait
out
in
data16
xchg
dec
mov
in
imul
test
or
push
loop
push
jl
jbe
cmp
xlat
or
push
mov
push
in
xchg
xchg
jno
mov
cld
jb
push
inc
mov
push
push
fs
pop
add
adc
push
xchg
jp
cmp
icebp
mov
push
cmp
pusha
popf
xchg
fucomi
xchg
xor
dec
rcrl
ficomps
mov
pop
hlt
int
loopne
shrb
xchg
jno
pop
imul
imulb
in
jecxz
shlb
lcall
out
jecxz
sbb
jl
rorb
dec
adc
push
sbb
xor
enter
ljmp
scas
cld
int3
data16
adc
les
and
push
addr16
cmp
sub
cmp
mov
les
cltd
or
and
mov
adcl
test
adc
sbb
test
pop
inc
jg
or
ret
ljmp
cmp
clc
mov
xchg
sarb
dec
das
scas
aaa
aas
fidivrs
int
mov
adcb
or
xchg
hlt
fists
movsl
mov
cwtl
ljmp
shr
xchg
or
stos
std
and
je
or
add
inc
test
lods
pop
aas
lret
cld
and
mov
insb
aaa
addr16
jo
xor
inc
in
cmpl
in
and
arpl
fimull
mov
out
repz
push
mov
and
mov
and
sbb
or
mov
in
std
or
sub
fs
mov
lods
xchg
jg
push
add
mov
enter
and
sbb
jo
es
pop
insb
cld
fdivrp
sbb
pusha
cmpsl
aaa
dec
aam
jbe
xor
sahf
push
insb
dec
or
mov
cmpsb
xchg
push
fidivrs
dec
popa
sub
popf
xchg
xor
out
std
and
inc
stos
push
aaa
push
adc
hlt
and
repnz
push
jno
int
jo
dec
repz
lahf
sbb
sti
cmp
sub
xor
jmp
rol
push
jne
repnz
outsb
inc
and
or
xchg
fldl
push
push
mov
jnp
mov
sub
cmp
in
inc
jns
fiaddl
test
mov
jl
mov
out
dec
lret
test
aaa
lea
pusha
in
scas
outsl
mov
adcb
repz
jle
dec
jb
pop
pop
mov
fs
outsb
jp
ljmp
cs
std
adc
in
or
xor
ljmp
mov
cmp
int
sub
jae
xor
mov
or
outsb
lods
adc
aas
std
xlat
pop
push
pop
dec
xbegin
sub
ds
adc
sahf
mov
push
xor
test
negb
pop
inc
ljmp
dec
xor
loop
adc
mov
inc
xor
insl
mov
xchg
push
popf
pop
cld
int3
fadds
adc
arpl
mov
arpl
adc
pop
loop
divb
and
aaa
fwait
pop
pand
xchg
in
andl
add
nop
sarb
cmpsl
pop
cmpb
sub
js
push
ret
outsb
int
push
xor
out
out
daa
inc
mov
dec
adc
adc
lret
xlat
jp
jecxz
orb
les
dec
dec
out
fsubs
in
mov
out
daa
not
fstps
pop
scas
xor
jbe
cmp
das
sbb
icebp
mov
cwtl
lahf
push
repz
xchg
push
cmp
cli
push
in
sbb
inc
adc
sub
and
xor
push
adc
out
das
lcall
bound
rorl
int3
dec
dec
loope
xchg
fisubl
enter
lock
negb
mov
dec
push
movsl
push
iret
mov
ljmp
test
add
pop
sbb
jne
mov
mov
int
test
mov
push
mov
jno
pop
cmc
fisttpl
jno
jb
inc
test
mov
ja
mov
push
out
sub
and
inc
and
add
addl
jae
es
mov
call
fisubrs
push
mov
das
inc
lods
idiv
fcomp
sbb
jae
fwait
gs
or
in
mov
fidivrs
cmpsl
ljmp
mov
addl
aaa
popf
rolb
and
movsb
add
in
das
fstpt
daa
push
pop
lret
repnz
out
cmp
xchg
clc
orl
imul
jo
adc
or
add
testl
mov
inc
addr16
mov
div
sbb
iret
das
fwait
pop
jg
push
mov
mov
fwait
stos
adc
rolb
outsb
jle
repz
lahf
decl
xor
mov
mov
loop
pop
nop
fs
and
std
lds
ret
bound
out
add
out
or
scas
cmp
repz
stos
ljmp
jge
stc
push
cmp
scas
ljmp
movsl
jecxz
lock
push
xchg
xchg
jp
stos
sbb
leave
clc
shlb
dec
sbb
jb
xchg
mov
cmp
cli
out
adc
sub
jne
mov
adc
aaa
dec
adc
aaa
xchg
mov
rcrb
xor
mov
out
sbbb
mov
push
jns
hlt
push
sti
mov
push
adc
cs
fwait
aad
cmpsl
add
jae
adc
mov
or
xchg
xchg
adc
mov
popf
in
call
or
mov
rclb
loope
ss
cmp
sahf
lock
cmp
negl
adc
xor
cmp
sbb
negb
loope
mov
or
loop
mov
jae
adc
push
xor
lret
insl
outsl
sahf
ss
subb
and
ret
in
dec
loope
cmc
xor
jmp
sbb
iret
xor
arpl
faddl
lods
mov
lret
jbe
js
les
cmp
push
cmp
cmp
sub
gs
xor
xor
loopne
xor
xchg
sbb
cltd
sbb
pop
add
rcl
mov
inc
push
cmp
push
add
test
mov
xorb
stos
add
push
ljmp
cli
inc
cmp
fdivs
in
lods
pushf
andl
insb
and
sub
mov
int3
repnz
inc
icebp
sub
imul
int3
je
sub
and
test
lcall
push
mov
cmc
ss
xor
aas
or
inc
ret
mov
jmp
mov
mov
push
xchg
stos
inc
ret
jmp
out
lret
loope
iret
pushf
aaa
mov
mov
or
dec
jmp
fistpll
xchg
rcll
cs
inc
call
clc
sub
and
sbb
aam
inc
daa
push
mov
adc
pop
jns
js
in
adc
ds
pop
cs
fcmovnbe
mov
dec
add
sub
out
pop
inc
stos
sub
movsl
push
xor
test
sub
icebp
cs
and
dec
add
not
mov
pop
movl
or
fwait
dec
inc
mov
test
fwait
jecxz
shrl
ljmp
imul
xor
mov
cs
xor
lea
test
cmc
add
sbb
clc
fldenv
stos
jmp
or
push
stos
test
andb
dec
jmp
ja
jae
nop
aas
test
mov
and
fldcw
push
mov
add
pop
add
in
faddl
jle
push
mov
ss
mov
add
mov
xor
cmp
mov
cwtl
inc
gs
dec
cmc
or
test
xor
mov
outsl
pop
popa
adc
inc
jge
test
xor
pusha
pop
pop
lods
pushf
and
popa
push
pop
mov
pop
sub
mov
into
mul
cltd
jmp
and
push
mov
and
arpl
dec
popf
sub
xor
mov
subl
out
dec
push
pushf
push
dec
je
gs
sarl
and
pop
adc
sbb
jmp
je
icebp
push
pop
mov
mov
cmpsl
sahf
into
mul
lock
fisubs
xchg
sbb
jb
mov
jl
cmp
in
sub
ljmp
cmc
mov
sbbl
inc
sub
mov
pusha
clc
mov
cmpsb
jp
pop
xor
lret
add
push
arpl
push
inc
jecxz
test
cmp
dec
int
jnp
or
in
sarb
inc
mov
xor
in
jecxz
test
pop
push
cmp
lock
jne
xor
mov
jae
popf
push
shlb
push
mov
jmp
jb
and
push
xor
idivl
arpl
repnz
cli
pop
dec
jl
or
cmp
fsubrs
test
xor
and
bnd
sti
aad
dec
mov
mov
xorb
movsl
aaa
jmp
clc
jmp
addb
icebp
sbb
test
sub
mov
insl
hlt
push
mov
xchg
pop
push
xor
ss
mov
inc
ljmp
sub
jmp
jnp
push
cli
pop
add
add
adc
mov
sbb
cmp
pop
popf
xchg
or
fstpt
fsubrp
and
sub
xchg
fnstsw
inc
clc
jle
stc
push
subb
and
dec
jnp
into
push
sarl
jecxz
sub
outsb
xor
xchg
cmp
imul
push
andl
imul
pusha
xchg
sub
ja,pt
stos
mov
push
mov
aam
mov
aam
rclb
pop
and
movsl
test
adc
add
mov
fstp
sbb
push
std
cmc
mov
push
xchg
dec
xor
cltd
mov
or
mov
inc
mov
xchg
cmc
adc
jle
cld
xor
rorl
dec
push
cmpsl
mov
cli
sbb
int
dec
cltd
cmp
pop
sbb
or
cmp
xchg
outsl
loop
mov
mull
fs
setl
int3
and
jno
xchg
cmp
pop
and
lods
pusha
sub
lods
outsb
and
add
mov
insl
adc
sbb
xchg
jmp
mov
ret
andl
push
jecxz
rcrl
push
adc
mov
dec
in
fstl
mov
and
mov
inc
pop
cmpsl
push
bound
sahf
daa
dec
sahf
jge
jmp
inc
mov
outsb
filds
lahf
mov
jecxz
dec
lea
and
adc
adc
push
mov
pop
and
add
inc
fcompl
mov
test
imul
sbb
mov
xor
adc
shll
ljmp
jo
xchg
les
sbb
push
or
mov
addb
xorb
push
shlb
dec
xor
adc
and
jne
sbb
pop
enter
test
xchg
out
push
cmp
or
xor
cltd
in
outsl
outsb
idivl
cmp
lcall
popa
sbb
or
sbb
repz
lds
jmp
or
sub
push
aaa
cmp
aam
inc
cmp
adc
pop
pushf
inc
fisttpll
faddl
test
dec
data16
add
and
sbb
inc
mov
sbb
adc
push
aam
test
push
das
es
pop
sub
into
lret
inc
insl
cmp
xchg
sub
outsl
and
js
mov
test
jp
fisttpll
div
aam
lods
jnp
dec
xor
repnz
int3
push
int3
or
out
ljmp
aaa
loopne
in
test
mov
cltd
push
sbb
pop
mov
mov
in
roll
popa
push
insb
push
les
daa
ss
adc
clc
sub
cwtl
test
fwait
mov
ss
xchg
cmp
hlt
mov
pop
cmp
push
ds
ja
out
inc
push
xchg
jnp
icebp
jp
push
stos
dec
xchg
pop
push
add
repz
out
xorb
mov
dec
enter
mov
rcrb
test
jnp
dec
imul
in
inc
repz
mov
mov
sti
ret
xchg
fmuls
and
dec
aaa
mov
xor
in
xchg
or
in
xlat
xor
mov
mov
jnp
adc
lock
movsb
std
out
aam
sti
add
jecxz
fmull
cmp
dec
je
imul
lahf
and
addr16
cmp
lea
stc
dec
mov
xor
inc
mov
mov
dec
outsb
inc
lds
cs
or
mov
xchg
xchg
inc
das
pop
add
clc
out
adc
data16
int
jnp
lcall
mov
add
xor
popf
cmp
out
xor
fs
cmp
fwait
push
rclb
adc
mov
mov
mov
aaa
sbb
cmp
dec
mov
cltd
je
dec
inc
pop
cmp
add
dec
push
sub
pop
pop
mov
rcr
jl
cmpsl
sahf
jno
sbb
popa
jo
jmp
push
inc
xor
ljmp
addr16
push
sub
mov
adc
aas
imul
loop
sub
xor
mov
lods
sub
push
addr16
jp
outsl
inc
iret
adc
cltd
push
inc
popa
push
pop
and
loope
out
notl
mov
or
lcall
rcll
cmc
or
jb
sub
cmp
iret
imul
jne
lods
mov
sbb
hlt
mov
data16
movswl
cmp
ret
loop
popf
push
sub
xor
in
sub
pop
loope
inc
add
mov
popa
ja
mov
ret
loope
jle
jbe
sub
pop
lret
mov
push
aad
sub
mov
or
adc
lods
mov
mov
jecxz
jne
xlat
inc
sub
dec
lahf
mov
jl
xor
fdivrs
ret
sarl
stos
xchg
ds
rcll
and
push
imul
outsl
mov
mov
dec
sahf
push
out
push
gs
daa
cmp
jne
push
push
test
das
inc
jne
mov
out
fidivrs
stos
xchg
cmp
cmp
or
xchg
stos
mov
ds
stc
or
or
jge
xchg
inc
inc
xchg
and
inc
enter
stos
hlt
jo
mov
std
xchg
cld
repnz
add
or
mov
and
inc
or
or
subl
dec
push
push
push
icebp
jae
icebp
inc
or
cld
sub
xchg
outsb
and
lret
enter
xor
or
cmc
lods
sbb
inc
les
mov
mov
push
push
or
ror
adc
cmp
out
mov
xchg
sbb
pop
cmp
sub
jb
ficompl
mov
dec
push
dec
in
mov
jmp
out
in
lods
incb
sub
pushf
insb
stos
sub
jns
ss
repnz
jecxz
pop
sbb
or
ret
push
pop
test
inc
leave
pop
hlt
push
mov
adcl
cmpsb
outsl
std
cmpsb
mov
into
cmp
mov
js
clc
repnz
sub
xlat
adc
jns
jo
mov
lahf
loope
dec
adc
dec
push
sub
cmpsl
test
push
inc
movsb
mov
jl
shrb
add
jae
dec
psrlw
jbe
orl
mov
xchg
mov
or
jno
outsl
sbbl
repnz
cmp
pusha
jecxz
add
insb
sbb
stos
or
sub
mov
pop
cmp
fstpl
push
pop
cmc
dec
sub
imul
mov
mov
aaa
adc
xchg
fnsave
mov
jb
jge
or
mov
ljmp
lods
ljmp
push
mov
int
jmp
cmc
iret
mov
test
fdivs
push
ljmp
fdivl
and
or
xchg
outsb
jae
aas
or
stc
sbbb
xor
lret
lds
call
outsb
mov
lea
movsl
sub
test
aas
push
jbe
clc
and
or
pop
pop
inc
arpl
test
cmc
xorl
pop
push
jnp
stos
ljmp
jns
jecxz
outsl
addr16
mov
xor
dec
lret
scas
das
dec
movsl
es
xchg
icebp
mov
mov
cmp
push
sub
cmp
adc
jb
hlt
jp
sar
jecxz
adc
call
in
addb
rolb
mov
imul
xor
xchg
imul
pop
das
dec
popf
outsb
xor
arpl
hlt
mov
lret
dec
xchg
mov
rcrb
xor
aad
sub
sbb
movl
orl
ds
sub
fcompl
sub
fwait
cld
dec
negb
pop
adc
repnz
scas
testl
mov
iret
xchg
or
mov
and
mov
cwtl
jp
jp
repnz
popa
pop
in
xchg
cmp
ds
cmp
mov
xchg
aam
jne
outsb
fistpl
aam
pop
orb
or
or
inc
roll
push
jae
out
mov
mov
jns
sub
inc
jp
add
mov
enter
addl
and
stos
aaa
dec
sbb
push
push
repz
in
dec
imul
shl
loop
rcrb
incl
xchg
shr
iret
sbb
pop
mov
jge
bound
call
sub
test
add
mov
shrl
jne
js
cwtl
gs
inc
js
adc
push
or
push
lcall
insb
or
pop
push
mov
inc
sbb
rclb
cmp
xchg
scas
xor
pop
cmp
hlt
fwait
sbb
sarb
test
sub
ret
fninit
xor
cs
outsb
daa
loope
rcr
sahf
dec
bound
lcall
push
jne
adc
mov
popf
sub
pop
leave
jle
test
jmp
aam
movsb
lods
or
xorb
mov
jp
bound
adc
dec
ljmp
imulb
in
sub
pop
imul
fs
jns
adc
mov
jmp
sub
jmp
ja
sbb
xor
jl
roll
mov
stos
repz
lock
mov
mov
and
fldt
cmpsb
pop
and
mov
lock
jmp
cmpl
jmp
ds
or
xor
mov
repz
stos
sarb
sbb
call
or
jno
cmpsb
stc
mov
clc
daa
xor
into
mov
cs
or
or
repnz
outsl
js
sbb
call
lods
mov
pusha
jne
gs
stc
call
cwtl
sub
pop
stos
arpl
cmp
cmp
shr
mov
dec
mov
mov
cltd
mov
roll
repz
xchg
movsl
pusha
sub
pop
pop
pop
and
cmpsb
push
sbb
add
xor
mov
scas
push
sub
int3
cli
push
adc
sub
cmpl
or
pop
dec
inc
sbb
hlt
sub
mov
push
sbb
pop
arpl
inc
sbb
jge
sbb
leave
adc
jns
cltd
cmpsl
or
rorl
cmp
xchg
mov
movsl
push
push
mov
dec
ret
push
xchg
in
sub
movb
xchg
data16
fldt
adc
push
push
or
arpl
sub
rcrl
cmp
dec
add
scas
sbb
xchg
mov
jle
js
mov
les
movsl
or
fistl
mov
jns
ret
adc
lods
mov
mov
icebp
mov
jo
stos
xchg
fcmovbe
mov
add
push
jb
xchg
mov
cmp
inc
xchg
inc
fisubs
sarl
push
adc
cmc
xchg
imulb
cmp
dec
sbb
mov
jge
lea
push
cli
add
pop
mov
into
mov
cmp
jns
insl
lods
fists
cltd
push
and
pop
push
shl
dec
jmp
push
cmp
popa
jge
fnsave
jecxz
push
sub
jne
lret
sarl
in
outsl
dec
leave
cltd
lods
xorb
in
or
lret
bound
push
jl
test
pop
ljmp
movsb
test
cwtl
xor
std
fildl
cmp
fidivrs
and
dec
lahf
fidivl
repnz
pop
xchg
push
dec
out
das
pop
jl
gs
push
mov
and
xor
aas
push
jbe
add
rolb
movsb
mull
sub
div
xor
mov
adc
fldcw
in
lahf
addr16
imul
data16
shlb
orl
xor
mov
loope
scas
mov
insl
xchg
cmp
xlat
pop
repz
push
add
outsb
adc
add
push
lret
lret
imul
adc
dec
mov
imul
mov
lea
jl
mov
jg
push
jne
ret
out
fistl
lret
hlt
jne
dec
ss
enter
cld
adc
cmp
cmp
sub
lahf
xchg
cltd
pop
mov
aaa
fbstp
adc
push
mov
mov
push
sbb
in
outsb
out
lock
loope
cmp
push
in
mov
xchg
arpl
or
in
fadd
repnz
sub
aas
aam
test
dec
lock
lcall
pushl
pop
test
xor
pop
stos
lods
dec
pop
inc
andl
faddl
push
sahf
inc
ss
test
lea
jecxz
sbb
daa
dec
or
repnz
cli
fisubrs
test
sbb
push
data16
xlat
mov
fnstenv
pop
jns
add
sub
xor
adc
adc
int3
fists
push
mov
push
outsb
test
xlat
ds
pop
add
mov
cmp
sub
pusha
popf
jge
bound
dec
pop
fldl
sahf
imul
jmp
aam
push
sti
stc
cmp
push
push
mov
cs
scas
pop
nop
jne
cmc
in
push
insb
mov
fs
notl
mov
mov
lea
push
jae
or
adc
and
mull
xlat
lret
les
push
and
dec
mov
aad
ret
lret
or
sbb
fstpl
mov
cltd
mov
leave
push
fwait
call
stc
push
and
loope
push
jl
loopne
jmp
cmp
xchg
mov
sub
aaa
outsb
push
or
stos
hlt
inc
stos
mov
adc
dec
lea
lea
jae
xchg
or
out
roll
shl
cs
in
push
push
test
out
hlt
add
inc
push
pop
mov
pop
dec
jno
scas
nop
out
push
push
lock
leave
xchg
pusha
mov
lock
and
xchg
jns
ljmp
shl
int3
sub
mov
dec
pusha
subl
and
ds
loop
or
pop
push
mov
inc
cmc
fcomps
mov
rcrl
jne
xor
or
lahf
test
arpl
xchg
out
mov
dec
jge
mov
jg
loope
xchg
ljmp
insl
scas
cmp
lds
int3
fistpll
push
jb
pusha
popf
shl
push
push
call
test
cmp
or
inc
jbe
sub
xchg
insl
jle
mov
je
dec
pop
sbb
cmp
mov
inc
xchg
mov
hlt
clc
je
mov
mov
movsl
movsl
inc
out
jmp
cmp
or
dec
ret
and
nop
into
pop
ja
push
fsts
sub
jmp
pusha
inc
pop
sbb
pop
rolb
jo
test
push
sahf
jbe
dec
mov
inc
or
fdiv
psraw
outsb
les
ss
xchg
pop
sbb
or
xchg
mov
add
jmp
mov
mov
imul
int
ret
stc
stos
push
inc
jb
mov
loope
das
addr16
aas
xchg
fnstsw
sbb
jns
popf
out
mov
mov
adc
lock
je
sbb
sub
jno
pop
test
gs
add
dec
push
call
push
int
shrl
pushf
jp
mov
add
es
jnp
nop
cmp
push
jbe
jp
sbb
mov
mov
hlt
inc
rcrb
adc
adc
pop
xchg
das
outsl
add
adc
push
mov
movsb
xchg
push
lret
fstpl
lahf
jo
adc
insl
or
mov
stc
jl
cs
pop
loopne
push
lds
cmp
out
into
sbbb
push
sbbl
sub
imul
fisttpll
mov
js
imul
mov
pop
xchg
xor
mov
pusha
and
sbb
sub
sub
sbb
popf
xor
jge
je
jo
test
rep
out
insl
jns
cld
xchg
inc
mov
pop
xchg
icebp
dec
sbb
ljmp
push
testl
sti
sti
mov
mov
pop
out
aam
jns
dec
jl
sbb
dec
cltd
jne
divb
jb
sub
pop
pop
xchg
xchg
shrb
pushf
mov
push
push
lret
push
into
iret
cmp
or
add
shrb
cmp
cwtl
xor
or
xchg
roll
jle
adc
dec
sub
in
hlt
jmp
add
popa
mov
add
pop
push
mov
pushf
mov
jmp
shlb
xchg
jecxz
cs
mov
dec
addr16
testb
push
xchg
negb
mov
out
mov
xchg
outsl
je
outsb
fnstenv
and
mov
test
add
or
dec
mov
les
sti
mov
jecxz
aas
jnp
push
dec
insb
jecxz
cmpsb
insb
adc
jecxz
outsl
in
or
inc
and
mov
dec
adc
cs
cmpsl
pop
cld
push
push
jmp
xor
int
push
lcall
lock
pop
mov
loop
xchg
jnp
decb
mov
xor
mov
dec
scas
stos
shl
pop
sbb
lea
jl
mov
cld
mov
test
jae
jp
sbb
mov
push
cmp
adc
mov
mov
mov
out
xchg
dec
popl
xchg
push
xor
dec
fsubrl
or
or
repnz
std
jmp
aaa
or
and
xchg
add
mov
fnstsw
sete
sub
push
jge
jp
aad
or
insb
shl
sub
mov
adc
data16
push
pop
cmpsb
push
add
jo
or
loopew
sbbl
imul
outsl
adcb
jmp
cmp
rcrb
sub
mov
mov
xchg
sbb
ja
or
jp
decl
mov
jmp
sbb
mov
clc
daa
outsl
call
mov
fwait
cmc
divl
mov
cmpsb
lods
or
xor
fstps
divb
cs
ret
and
in
in
andps
sbb
mov
sbb
lcall
inc
push
cmp
dec
dec
daa
jno
aad
shrl
loopne
shlb
push
cltd
sub
cmp
mov
loop
lds
cmp
in
stc
sarl
sbb
lock
pop
rcrb
out
repz
cmpb
test
sbb
mov
aaa
stos
sbb
fdivrs
mov
dec
imul
movsl
mov
mov
jle
mov
insl
dec
ds
pusha
call
add
xor
ret
xor
add
sbb
stos
inc
jecxz
sub
inc
add
scas
add
lret
stos
fldt
sbb
inc
push
dec
test
jne
into
js
hlt
xor
and
xor
xorl
add
mov
loop
out
dec
or
pop
push
negl
sti
adc
mov
test
scas
xchg
adc
dec
lods
mov
dec
ret
sub
ds
rclb
faddl
std
adc
out
xlat
dec
add
cli
scas
scas
or
mov
shll
sbb
sbbl
js
shll
pop
fsubl
imul
test
fisttpl
jne
fbld
and
xlat
mov
pop
cmp
dec
js
sub
sahf
mov
ficoml
and
out
outsl
lock
adc
jp
dec
in
ficomps
push
inc
out
hlt
sbb
xchg
push
test
lcall
sub
adc
sub
and
cmp
sbb
jnp
cmpsl
aad
stc
mov
fldcw
mov
xchg
test
mov
aam
mov
movsb
push
sbb
adc
xchg
pop
dec
flds
test
or
xchg
jno
inc
popf
cmp
pop
lods
push
mov
mov
ljmp
mov
cmp
jle
xor
add
nop
pop
loope
adc
addr16
int3
fnstcw
imul
push
ja
sahf
lods
dec
mov
pusha
ss
in
imul
movsb
sub
shrl
pop
lret
pushf
pop
dec
xor
mov
dec
adc
mov
lds
mov
adc
dec
or
add
fdivs
sub
popa
mov
test
leave
mov
inc
insb
inc
lods
aaa
or
sub
jp
add
jge
test
les
push
inc
js
test
in
fimuls
aam
jno
pop
lcall
lods
jg
cmp
and
das
jp
and
scas
mov
pop
xlat
jp
mov
xchg
lahf
rol
lock
xor
es
je
mov
cld
pop
or
cmp
in
sub
arpl
jecxz
and
jecxz
push
scas
jnp
sub
jne
aam
cmp
adc
xchg
test
fdiv
cmpsb
push
cmp
cmc
push
cmpsl
test
int
mov
and
xor
cmp
mov
xchg
outsl
inc
xchg
dec
mov
fdivrp
add
mov
ficomps
fs
push
adc
push
orb
dec
ss
jns
pushf
imull
addr16
lahf
jmp
adc
fidivl
into
add
push
xchg
insb
mov
inc
push
push
xchg
cltd
test
mov
xor
mov
push
and
fxam
mov
js
enter
jo
mov
fstl
jmp
mov
add
mov
mov
pop
sub
mov
pop
push
mov
dec
cmp
cs
dec
jle
out
out
jns
push
stos
pop
push
sbb
push
cmc
outsl
shll
and
dec
dec
sub
jb
repnz
xchg
mov
ret
xor
sbb
pop
fldln2
push
stc
sti
mov
ds
mov
sahf
sub
xlat
in
add
imul
push
sbb
mov
popa
test
mov
sub
jmp
fdivs
mov
andl
push
shr
sub
jno
sub
dec
rolb
sahf
sti
insl
out
mov
cmpsb
hlt
popa
xor
mov
xchg
lcall
in
cmc
into
adc
push
xchg
sahf
das
lds
out
sub
inc
xchg
inc
add
iret
pop
push
pop
lods
push
push
dec
shlb
push
dec
mov
je
mov
cmp
add
xor
cmp
je
xlat
xchg
sbb
pop
push
mov
repz
pusha
sub
addb
push
shlb
dec
cmp
ret
out
lret
xchg
pusha
mov
or
roll
outsb
pop
add
sti
dec
popf
ret
jbe
pushf
push
mov
pop
push
lret
jns
or
jp
dec
dec
xor
lds
mov
sbb
enter
aad
xor
gs
std
adc
into
mov
jmp
mov
mov
mulb
test
lea
fstpt
rcrb
rcll
and
cmp
lahf
jb
cmpsb
xlat
loopne
fstpt
in
les
mov
inc
push
or
mov
arpl
mov
mov
adc
cwtl
cmp
cmc
xor
daa
fwait
mov
jecxz
iret
sahf
jp
cwtl
sub
xchg
mov
mov
xchg
test
std
das
cmc
sti
mov
jge
mov
mov
je
aas
clc
push
pop
cmc
out
sub
push
sbb
push
dec
mov
jb
and
fcoms
cmc
xor
jecxz
scas
pop
dec
pop
jnp
cmp
rorb
andb
gs
call
js
sbb
or
ret
add
lods
loopw
adc
pop
arpl
gs
push
sbb
push
sbb
cli
adc
fstps
mov
mov
lcall
mov
ja
out
jge
addb
jl
xchg
sbb
jnp
cmp
insb
mov
pop
mov
pop
sub
fists
ret
test
lea
adc
mov
call
xlat
dec
outsl
lret
mov
inc
aam
cmp
and
sub
sub
add
inc
cli
jo
cld
cmp
push
adc
adc
pop
mov
pop
rorl
jb
push
fwait
jmp
push
clc
scas
lods
lea
jnp
push
pop
or
sbb
gs
push
sbb
jne
js
inc
scas
adc
xchg
xor
insb
and
mov
cli
jge
ljmp
ljmp
shlb
sbb
in
inc
mov
pop
pop
ret
fs
fisttpl
jmp
jecxz
ja
imul
push
mov
jb
sbb
jecxz
pop
jbe
push
inc
mov
mov
or
repz
jbe
sti
push
lahf
jb
pusha
inc
cmp
add
pop
outsb
push
addr16
ljmp
fwait
adc
xor
incl
mov
cmp
inc
pop
hlt
and
pop
sbb
insb
call
or
int
mov
jne
int3
sbb
cmc
push
loope
push
lcall
cmp
sti
or
adc
in
inc
ficompl
fstps
fcmovb
imul
out
push
push
xor
or
push
fs
sub
add
sub
cmpsl
fcoml
clc
mov
cld
ss
sub
cld
sub
and
sub
lret
mov
ret
daa
ljmp
mov
sub
popa
xchg
and
xchg
rol
jo
sbb
adc
or
rcrb
mov
mov
jb
shl
jle
add
adcb
shl
lret
out
test
scas
dec
adc
lcall
jle
test
and
cmp
mov
dec
and
in
mov
testl
xor
jle
push
xchg
jl
push
movsb
inc
adc
push
fsubr
push
icebp
ljmp
cld
and
add
xchg
aam
sub
push
popf
jmp
jecxz
push
xor
int3
insl
mov
cmp
mov
stos
mov
out
pop
inc
xchg
dec
pop
push
aas
or
leave
loopne
push
lcall
xchg
cwtl
xchg
or
adc
mov
mov
inc
xchg
inc
add
pop
jb
xchg
scas
mov
push
in
pop
jmp
add
jb
ljmp
sub
cs
dec
xor
pop
stos
fidivl
aam
inc
or
call
fistps
sar
aam
test
push
lahf
scas
lcall
arpl
dec
jbe
cmp
mov
mov
mov
fdivl
fisubrs
dec
inc
repnz
xor
gs
sub
jp
cld
fldenv
cmc
bound
pushf
sub
adc
push
or
xor
aas
ljmp
cmpsl
hlt
sbb
push
iret
stos
ret
lea
fisttpll
jl
sbb
out
stos
test
lock
cltd
scas
fisubs
fcoml
adc
in
mov
pop
adc
xor
shr
push
jae
imul
inc
movsb
lret
or
fcomps
pop
addb
jl
mov
lret
jne
shlb
sti
stos
push
cmp
mov
icebp
getsec
arpl
stos
cmp
jecxz
cltd
insl
movl
pop
fwait
int
xlat
mov
add
dec
mov
push
add
jnp
lea
iret
jns
or
lods
push
popf
mov
sbb
cltd
stos
cltd
in
mov
rorl
cltd
test
mov
dec
mov
rolb
imul
pop
into
ljmp
popf
sub
pop
outsl
cmp
bound
cmpsb
adc
movsl
addr16
pop
pop
add
testl
lret
je
mov
out
push
lret
aam
add
repnz
cmp
adc
movsb
lea
ficoms
cs
stc
insb
push
mov
pop
mov
push
lret
cld
mov
push
lock
fadd
push
xchg
pop
sbb
movsl
or
lock
pop
sub
inc
cmp
out
xchg
out
mov
out
jno
or
sub
addr16
jp
shr
hlt
push
cli
hlt
or
leave
inc
cltd
mov
sub
sub
addb
lds
lods
imul
inc
movsb
js
cwtl
lds
push
sti
stos
mov
jb
jnp
shl
inc
stos
push
jae
shrb
inc
data16
adc
iret
cli
jmp
shlb
in
sbb
std
xchg
jnp
pop
pop
loopne
and
mov
xchg
cmp
stos
nop
sub
sub
lea
inc
pop
inc
or
dec
push
leave
xchg
adc
popa
push
sbb
sub
outsb
sbb
cmc
js
cmp
fidivrs
and
popf
aas
sub
imul
sbb
testb
cmp
fidivs
insl
mov
cmp
xor
mov
and
or
push
xor
jmp
xchg
std
jg
aam
dec
jle
adc
sub
mov
push
mov
repz
test
sbb
or
xchg
inc
jnp
das
jmp
rcll
cli
rorl
xor
cmp
cmp
inc
fsubrs
sbb
pop
pop
scas
scas
pop
aas
sub
pop
xor
add
and
push
xchg
loop
clc
cwtl
ds
roll
int
mov
sbb
frstor
mov
sub
sub
and
repnz
lahf
lea
icebp
push
sbb
cmp
mov
mov
add
mov
mov
pop
and
adc
adc
in
sbb
or
cld
mov
rorl
mov
adc
jp
outsl
pop
rolb
cmp
sbb
repnz
movsl
add
int3
out
sbb
dec
adc
adc
pop
lahf
xlat
push
jnp
std
insb
mov
add
outsb
xchg
fwait
adc
add
xchg
inc
mov
mov
adc
pop
inc
int
sbb
push
pop
jg
xor
rorl
les
outsb
je
repnz
add
sbb
pop
jb
test
stos
dec
push
cmp
sbb
sbb
or
adc
iret
push
jmp
push
mov
mov
jno
jmp
jo
push
sbb
jae
imul
decl
sbb
and
out
xchg
cld
add
popf
jnp
dec
outsl
mov
and
or
call
jb
xchg
bound
dec
icebp
js
int
sub
inc
push
rolb
insl
inc
stos
mov
push
xchg
pop
data16
inc
and
repnz
stos
ret
jo
popa
popa
inc
adcl
and
xchg
mov
lods
ret
jae
or
data16
fcompl
lea
movsl
dec
push
popa
loopne
sbb
lods
leave
stos
jmp
bound
add
sbb
mov
les
push
mov
cmp
sbb
push
xor
mov
or
js
inc
xchg
or
cmpsb
filds
movsl
push
or
jg
or
and
push
inc
pop
pop
push
jmp
js
or
mov
pop
push
mov
icebp
stc
dec
dec
jbe
adc
int
scas
call
mov
sub
add
loop
cmp
stc
xchg
clc
sbb
cmpsb
pushf
cmp
movsb
das
scas
sbb
push
je
push
push
les
js
clc
xor
xchg
addr16
add
dec
iret
cmp
popf
out
insb
fildl
aad
push
sub
add
cmpsl
dec
pop
imul
push
in
movsb
inc
dec
mov
rorl
xchg
aad
jmp
push
pop
jmp
dec
frstor
push
mov
cmp
mov
or
pop
ret
scas
aad
push
shrl
mov
jle
mov
mov
push
dec
cmp
fcmovbe
roll
jb
lods
pop
ficoml
jge
adc
xlat
xchg
mov
pop
pushf
sbb
push
push
out
mov
loope
shl
jg
jnp
imulb
jl
sti
sbbb
adc
mov
aaa
mov
iret
inc
inc
adc
xor
mov
iret
push
sub
sub
call
shr
ljmp
xchg
mov
adc
mov
or
call
test
rol
loopne
mov
nop
mov
hlt
rol
xchg
pop
inc
adc
sbb
scas
inc
mov
jmp
into
shlb
stos
mov
js
pop
mov
sbb
idivl
test
cltd
clc
dec
add
add
fisttpll
sbbb
cmp
or
jl
xchg
sub
xor
adc
jo
divl
push
dec
test
rol
test
pushf
das
or
cli
cmp
out
movsb
imul
push
add
push
push
mov
pushf
dec
insl
orl
xchg
dec
fidivrl
inc
aas
cmp
call
idivb
and
mov
cmp
outsl
bndstx
mov
push
xchg
sub
fildll
lock
xchg
incl
inc
mov
jb
mov
leave
test
mov
dec
push
cmp
xor
setb
dec
dec
rorb
sbb
jno
mov
xchg
inc
psrlw
push
sub
int
or
adc
pop
in
inc
cmpsb
push
or
ud1
xor
jle
ljmp
inc
lods
shlb
cmp
out
int
xor
jl
icebp
mov
adc
dec
cmp
test
xchg
xchg
cmp
divl
mov
jb
insb
rcll
add
mov
ret
mov
lods
or
sahf
sbb
xor
popf
and
je
fisubrs
mov
shll
loope
mov
mov
sti
sbb
jge
lret
sbb
jecxz
inc
jnp
jecxz
fildl
jo
aad
jo
cmpsb
mov
mov
add
jnp
mov
mov
mov
test
pop
jmp
imul
adc
insb
xor
inc
mov
es
mov
xchg
adcb
or
xchg
adc
stos
fisubs
dec
adc
enter
xchg
lcall
mov
imul
xor
sar
cli
xchg
and
inc
xorl
push
loopne
push
mov
adc
cmpsl
fsubs
jge
mov
xorl
dec
mov
sahf
cmp
or
movsl
sub
movsl
jo
sahf
jge
in
jge
loop
push
jp
push
pushf
idivl
ljmp
xchg
cmp
inc
or
mov
fldt
mov
xor
mov
loop
int3
lret
jle
adc
mov
cltd
cmovs
leave
mov
outsl
lds
pop
std
setno
push
ret
inc
xchg
test
sahf
ss
pop
sub
pop
pop
addr16
adc
outsb
push
cmp
jmp
pop
fs
cmp
lret
push
sbb
cli
xchg
int3
imul
jecxz
jmp
sub
add
fcomps
pop
sbb
pop
jae
das
mov
repnz
mov
push
icebp
in
scas
push
call
aas
icebp
aaa
mov
cld
cltd
xor
sbb
mov
bound
inc
push
inc
dec
lahf
mov
cmp
bound
dec
test
stc
stos
dec
ficoms
cmp
mov
push
jne
xor
mov
pop
ljmp
cmp
pop
push
pop
rolb
loopne
jmp
sbb
cmp
jecxz
xchg
ds
jae
jnp
mov
into
cmpsl
adc
push
pop
mov
jge
inc
or
js
les
pop
adc
xchg
loope
xchg
inc
push
add
int3
lahf
add
cmpsb
stc
xor
clc
loop
rcl
ficoms
add
dec
xor
xor
les
sub
mov
cmp
lcall
mov
cld
cmp
out
clc
dec
repz
mov
and
fwait
mov
mov
cld
daa
mov
adc
inc
adc
mov
mov
adc
ret
repnz
out
shrb
lahf
inc
and
jle
jne
xchg
xchg
js
test
adc
push
dec
xchg
pop
ljmp
mov
and
je
cwtl
lret
push
xor
lret
pop
sub
adc
fnstenv
sbb
shl
enter
rcrb
pop
gs
js
lahf
lahf
push
push
pop
and
pop
stc
fwait
mov
mov
push
mov
add
or
xchg
addr16
out
lock
fcomps
dec
mov
jb
mov
or
sub
nop
mov
or
popa
sti
das
dec
std
cmp
sbb
rolb
adc
jle
xorb
fwait
mov
xor
push
xor
lret
dec
jb
inc
mov
mov
push
or
sbb
mov
idiv
call
and
ds
jmp
push
cmove
adc
push
in
add
cli
cwtl
mov
lock
xor
cmp
push
or
push
cwtl
and
dec
ljmp
mov
push
xchg
stc
into
faddp
push
gs
add
lahf
stos
xchg
push
sbb
adc
and
cld
pop
mov
jo
push
cmp
lock
cli
push
lret
dec
add
lcall
jae
adc
cmp
xchg
mov
push
adc
int3
rolb
insl
imul
in
jl
lods
mov
mov
dec
stos
dec
adc
loopne
mov
pop
dec
pop
pop
sete
std
add
data16
adc
jo
sbb
daa
sub
cs
sbb
jmp
out
sbb
xchg
mov
push
mov
cltd
cs
push
jmp
divb
mov
js
repz
imul
ss
adc
pop
xchg
add
or
adc
loop
dec
xor
xchg
mov
movsb
fadds
test
sub
push
mov
mov
pop
aas
dec
jae
mov
cld
add
xchg
cmp
lret
fs
loopne
cmp
sub
scas
pcmpeqd
mov
pop
sbb
cmp
mov
out
sbb
xor
add
outsb
scas
xorl
inc
dec
data16
cmp
inc
jge
daa
jae
mov
xor
or
push
jmp
xchg
sarb
lods
pop
push
add
fwait
out
aaa
ljmp
add
and
adc
push
in
mov
scas
xchg
inc
cmp
dec
lcall
fisubrs
ss
or
test
or
or
in
sbb
dec
test
push
hlt
push
xchg
add
inc
or
pop
push
aaa
ja
mov
roll
inc
and
mov
or
jecxz
push
sbb
fcmovbe
push
cmp
and
jno
add
sub
jno
cmp
jmp
aas
pop
aam
fs
mov
aad
jbe
movsb
mov
push
mov
clc
and
push
int
jle
insb
ds
ret
imul
nop
enter
xchg
jmp
inc
sbb
sub
fs
mov
ljmp
adc
mov
push
xchg
mov
mov
xor
leave
aam
fs
mov
movsb
xor
xchg
xor
lods
dec
aam
push
cwtl
loope
add
xor
lods
popa
sbbb
sti
jle
ja
jno
mov
jnp
push
jp
add
dec
movsl
cli
addr16
imul
hlt
lods
aaa
aad
imul
adc
ds
pop
jae
push
mov
pop
in
test
mov
lea
jne
scas
xchg
xchg
jmp
in
sbb
pop
fcoml
push
cltd
cmpl
push
test
mov
cmp
xor
lea
and
or
pop
jo
pop
loope
stos
enter
pop
inc
rcrl
addr16
in
fdivl
jge
outsb
xchg
mov
std
and
mov
aad
scas
cld
inc
push
push
popa
les
aad
and
inc
sub
push
je
cmp
sub
cmc
mov
iret
xchg
push
scas
push
sbb
loope
mov
cmp
dec
fcomi
insb
ss
mov
mov
gs
xchg
cmc
test
adc
inc
and
std
test
or
or
dec
cld
imulb
pop
mov
je
cmpsl
lds
xchg
shrb
inc
pop
out
std
sbb
mov
xchg
repz
cmp
xor
mov
imul
push
xchg
mov
outsb
popa
lods
and
cmp
mov
xchg
dec
inc
mul
dec
push
fsubrl
mov
pop
out
and
adc
pop
ds
leave
push
cmp
movsb
fsts
mov
cmp
dec
fld
xorb
cmpsb
data16
std
inc
pop
fldl2t
dec
jmp
and
testl
cmpsb
pop
cmp
xor
inc
rolb
dec
loop
jbe
cmpsl
cli
dec
ja
inc
shlb
dec
xor
nop
dec
notl
sbb
loop
xchg
inc
xchg
mov
jo
add
je
xor
cwtl
into
imul
mov
inc
pusha
dec
int
lcall
xchg
or
pusha
iret
lahf
scas
test
notb
and
fucomi
stc
test
pop
lock
or
inc
fdivrl
sbb
test
aaa
dec
pusha
mull
push
out
pop
push
jbe
rcl
mov
lahf
push
insl
or
mov
push
inc
ret
xor
or
mov
jnp
test
sti
pushf
pop
lds
fmuls
ja
mov
pop
cwtl
das
sbb
testb
sbb
outsb
xor
cmpb
cmpsl
or
push
push
jne
idivl
push
or
xlat
icebp
and
jae
aaa
cltd
test
xchg
subl
mov
jno
faddl
xchg
sub
js
lea
xchg
lea
or
scas
inc
clc
sub
rclb
das
sti
enter
push
sub
dec
dec
loop
or
cli
mov
data16
mov
or
and
rcrl
adc
repnz
stos
inc
or
cwtl
fwait
push
add
in
push
shrl
pop
pop
int3
push
cmp
cmp
fdivs
xchg
push
icebp
lea
mov
xchg
andb
js
ficompl
ret
and
movsl
jno
imul
add
repnz
xchg
jecxz
pop
js
stos
push
std
pop
ret
ljmp
and
jb
cmp
iret
loopne
dec
incl
in
push
jge
mov
mov
mov
arpl
mov
jmp
add
mov
cmp
cmpsl
push
lea
mov
mov
lock
test
cmc
inc
fisttps
adc
xlat
pusha
enter
sahf
pusha
sahf
mov
inc
nop
loopne
out
mov
arpl
and
or
out
mov
and
gs
cmpsb
sub
fsubl
sub
xor
jl
xor
fwait
adc
adc
fadd
sub
or
dec
or
and
jg
fcoms
and
and
bound
xor
popf
xchg
lods
xor
mov
inc
adc
dec
ljmp
xchg
mov
xchg
jae
inc
xchg
pusha
ret
or
cwtl
jmp
lods
adc
or
fnstcw
mov
jecxz
xor
push
or
out
mov
fildll
outsl
add
call
lds
xchg
popf
insl
cmp
adc
lret
sub
jl
inc
and
xor
mov
or
ds
out
mov
push
xor
sbb
into
fcoms
xchg
and
andb
pop
in
ljmp
icebp
lcall
mov
sub
sbb
xor
cmp
pop
pop
pop
test
dec
cmp
aad
lcall
shrb
sub
es
add
lock
mov
fdivr
push
stos
pop
pop
sbb
rcrl
lods
je
outsl
ljmp
mov
xor
cs
fwait
movb
into
jecxz
fildl
lret
add
and
pop
sahf
mov
out
mov
dec
xchg
movsb
ret
adc
jle
subps
rcr
cmp
mov
loopne
push
test
mov
jge
xor
xor
cmc
jnp
sbb
cwtl
cmpsl
or
lahf
dec
out
mov
out
push
sbb
pop
pop
jge
push
dec
pop
mov
or
cmp
fs
test
sbb
inc
sar
inc
push
pop
or
icebp
xor
movsb
pop
inc
mov
pop
aaa
or
inc
xchg
mov
cmp
and
and
xor
dec
loop
dec
mov
inc
sahf
fwait
pop
xchg
push
push
or
int
pop
sti
pushf
loop
mov
lock
dec
mov
js
lods
scas
jne
test
movsb
gs
adc
mov
mov
aaa
int
imul
jb
fcmovnbe
ja
push
das
sahf
dec
jno
bound
xchg
lods
adc
dec
das
sub
push
mov
inc
and
mov
es
dec
xchg
xor
jne
pop
arpl
mov
push
pop
arpl
push
repz
ss
add
scas
jg
jnp
out
shl
ret
mov
cmp
mov
dec
pop
cmp
pop
adc
lret
lret
roll
test
or
into
jbe
or
int
push
ret
iret
pop
push
push
out
xchg
lcall
xchg
lahf
fnstcw
call
cmpsb
subl
mov
aas
fscale
pop
pop
xor
pop
loop
add
out
sti
mov
xchg
jmp
xchg
cmp
add
pop
dec
cwtl
push
pusha
pop
andl
xchg
outsl
sbb
lret
pop
jl
pop
xor
nop
jp
push
into
jnp
cld
lret
xlat
fadds
dec
cmp
and
cmc
and
jbe
adc
ficoms
mov
ljmp
push
js
xchg
mov
dec
dec
mov
and
push
stos
mov
pop
nop
ret
mov
mov
jmp
push
dec
lea
mov
lea
or
fwait
push
xor
add
inc
popa
xchg
add
aad
xchg
mov
int3
inc
jo
loope
cmp
adc
adc
push
fchs
icebp
ret
sbb
fisttps
in
fnstsw
mov
dec
jo
leave
movsl
push
addb
fimuls
inc
incb
addr16
push
lods
addr16
push
cmpsl
push
sti
enter
dec
dec
inc
addl
xchg
mov
movsb
push
test
xchg
cli
aaa
mov
stos
sbb
test
cmpsl
je
int
cmpsl
mov
clc
cmp
mov
mov
xchg
out
fnstenv
incl
cld
movsl
adc
xchg
test
nop
push
gs
jg
movb
pop
xchg
imul
sub
xor
stos
das
pop
and
mov
repz
shll
es
mov
adc
iret
int
rcll
or
sarb
jg
movsb
imulb
into
lock
insl
cmp
jle
insl
hlt
sbb
jle
out
scas
and
sbbl
pop
rorb
inc
cmp
outsl
adc
fs
pop
mov
dec
test
cmc
pop
push
testl
jne
stc
idivb
test
xchg
fnstenv
xchg
lds
mov
push
flds
lods
leave
cmp
aas
imul
sbb
adc
cli
push
add
imul
test
jne
dec
aam
mov
out
sbb
out
push
xchg
arpl
inc
aam
push
test
lahf
pop
mov
pop
sbb
std
imull
iret
ret
inc
pusha
jae
lods
test
movsl
inc
ret
js
das
pop
fsubl
int
popa
pop
adc
insl
cmp
cmpsb
cld
enter
std
lods
mov
cmp
movsl
pop
sbb
and
mov
out
inc
sub
cmc
inc
fwait
sarl
xor
leave
clc
roll
add
rclb
lcall
mov
xchg
push
push
cmp
xor
xlat
outsl
sub
mov
jp
xor
push
sbb
inc
sti
xchg
sbb
or
inc
fwait
sub
into
notl
pop
xchg
or
sub
je
jmp
or
call
pop
out
add
mov
fwait
inc
pop
jge
rcrb
das
fcoms
ljmp
sahf
mov
jp
dec
add
mov
add
clc
orb
push
test
jno
push
push
les
stos
pushf
test
cmc
or
inc
mov
push
cmp
ss
push
jae
xchg
enter
cmc
mov
ret
mov
mov
andps
fidivrs
sub
xchg
sti
mov
outsl
push
fistl
loopne
xchg
xor
sub
stc
sub
mov
mov
cld
xchg
std
dec
mov
jnp
sahf
in
cmp
dec
fisubs
dec
andl
imul
mov
jmp
lret
adc
and
fisubl
cmp
mov
daa
call
aam
xor
add
xchg
pop
fisttps
push
out
icebp
mov
fs
lods
inc
lret
ds
inc
mov
jnp
mov
icebp
mov
dec
std
aaa
or
test
add
xchg
test
ret
stos
cltd
xchg
inc
cld
rcr
mov
pop
in
das
in
outsl
adc
sub
inc
daa
push
lret
cmp
and
xchg
rorl
test
mov
icebp
fcomi
and
jbe
movsl
xlat
sbb
inc
push
mov
frstor
xor
adc
cmp
rclb
movsl
xchg
test
test
xchg
push
add
inc
mov
jns
pushf
and
jp
test
cmp
in
adc
lods
inc
cmp
dec
dec
jno
pop
jl
je
and
mov
cmp
or
sbb
lock
dec
inc
jae
fmulp
or
push
test
loop
push
rcll
sarb
mov
mov
add
jl
in
int3
mov
xchg
pop
rcrl
inc
mov
dec
lret
inc
test
hlt
jecxz
xorb
inc
push
testb
jecxz
lret
mov
mov
cli
xchg
jg
jg
push
add
and
mov
clc
mov
fistpl
jae
clc
cmp
fwait
xchg
cmp
insl
push
leave
add
out
add
mov
pushf
daa
sub
outsb
pop
sub
push
lahf
mov
imul
ss
std
inc
cmc
adc
hlt
cmp
lret
inc
sbb
pop
sahf
add
pop
inc
dec
stc
add
and
cmp
pop
inc
fimull
push
shlb
add
push
and
in
pop
cmpb
sub
cli
dec
test
jecxz
cmp
cwtl
adc
inc
enter
call
sarl
addr16
push
cltd
insb
or
add
mov
lret
pop
test
jge
dec
out
mov
cmp
cwtl
gs
fsubl
shlb
jge
fmul
insl
adc
xor
cwtl
xchg
rcrb
add
cmp
arpl
sahf
cmpl
cmp
push
ljmp
mov
hlt
adc
inc
in
pop
cmp
fninit
xchg
aad
push
pushf
sub
or
cmp
adc
je
jo
push
dec
pop
cli
add
push
fbstp
jae
add
jae
jl
mov
lods
xor
in
sub
jae
loope
icebp
addr16
ljmp
nop
and
push
call
popa
inc
arpl
inc
ret
inc
test
in
fidivs
and
mov
fidivrs
lahf
rolb
lret
mov
cli
pop
call
clc
repnz
adc
cmova
rep
pop
aad
mov
xchg
xor
into
xchg
mov
pusha
mov
out
push
xor
jb
mov
repnz
adc
loop
pop
xchg
rdpmc
sbb
out
pop
sbb
popf
repz
adc
or
add
xchg
add
pop
rolb
xor
imul
xchg
repz
stc
dec
sarl
adc
cmpsb
test
adc
nop
data16
xchg
xor
mov
cmp
clc
aad
mov
dec
lock
cmp
push
enter
stc
popl
xorb
cmp
add
push
sub
fsubp
xchg
add
divl
ljmp
dec
and
sbb
les
cli
ja
push
or
outsb
fwait
mov
loopne
jo
add
pop
sahf
mov
sbb
test
jno
leave
test
and
rclb
mov
fwait
test
in
mov
cmp
mov
clc
imul
fdivrl
mov
pop
stos
pop
push
iret
loop
xchg
sbb
aam
sbb
adc
jg
bound
pop
push
mov
lahf
loopne
shll
lahf
adc
stc
addr16
push
pop
inc
adc
test
idivl
lds
or
aad
mov
push
loop
rcr
jg
dec
jbe
push
negb
add
mov
out
je
pusha
add
cmp
mov
and
fxch
mov
or
daa
fstpl
cltd
imul
rclb
or
xor
jmp
jp
push
mov
push
add
xor
jge
sbb
out
arpl
fmulp
scas
repz
xorl
push
lea
jns,pt
cmpsl
jo
lcall
fsubl
dec
sub
out
fnsave
es
xchg
dec
cmp
dec
rclb
and
les
xor
inc
mov
pushf
xchg
jl
das
jmp
cli
add
dec
fwait
mov
nop
pop
jo
jmp
out
rcr
mov
and
mov
enter
or
mov
mov
mov
cli
mov
add
adc
aas
inc
leave
pop
inc
mov
lcall
sub
jne
xlat
dec
int3
loop
shrb
add
movsl
outsl
pop
js
hlt
jge
test
call
jns
or
popa
push
adc
and
dec
mov
idivb
jo
fists
mov
add
push
ret
ret
cmpb
and
stc
stos
pusha
xchg
pop
ss
xor
push
dec
sub
mov
mov
xchg
je
adc
pop
rcrl
and
out
push
lods
data16
inc
rcll
jmp
inc
dec
mov
sbb
push
adc
mov
faddl
out
mov
cmp
push
xor
enter
arpl
mov
sub
inc
hlt
int3
sbb
les
pop
mov
mov
ficoms
sbb
xchg
push
outsb
jg
es
or
inc
cmp
xchg
or
push
and
daa
mov
or
jno
mov
jne
mov
xchg
stos
push
adc
jae
outsb
mov
ljmp
outsl
out
jmp
rorl
xchg
jnp
or
inc
mov
mov
fnstsw
call
fcmove
xor
cwtl
push
add
shl
notb
adc
je
add
and
stc
mov
outsl
movsl
or
xor
shlb
fmuls
dec
jmp
iret
sbb
jmp
push
push
roll
dec
cmp
shrb
lahf
aas
lods
mov
pop
fildl
pushl
inc
cmp
shrb
in
xor
or
xlat
popa
outsb
mov
pop
insl
out
jle
cwtl
mov
push
lret
inc
hlt
jmp
mov
jmp
or
outsb
leave
adc
cmp
inc
or
subl
jns
adc
dec
mov
inc
test
cs
out
bound
jmp
dec
icebp
push
jo
and
adc
loop
sub
push
aas
aad
lret
adc
xchg
push
mov
movsl
pop
inc
mov
push
in
mov
test
mov
test
lret
and
mov
dec
cld
imul
adc
lahf
ficomps
jp
jbe
inc
push
ja
jb
hlt
in
nop
fldl
xor
sahf
mov
dec
test
xchg
mov
sub
sbb
sbb
jp
das
adc
cs
lret
imulb
dec
lds
lret
inc
sbb
push
fstpl
sbb
std
push
or
mov
mov
sub
call
xchg
pop
dec
lcall
inc
gs
and
sub
shlb
loope
shll
or
subb
mov
aad
add
jl
inc
xor
xchg
mov
push
mov
int3
mov
outsb
daa
out
sti
dec
push
jle
out
push
xchg
mov
sahf
dec
repz
outsb
rcr
rorl
dec
inc
inc
fadds
jo
pop
xor
mov
cwtl
sub
mov
daa
add
jns
mov
les
and
pop
cmp
cmc
les
push
mov
pop
push
dec
in
adc
xchg
sti
ss
jmp
sub
stos
in
test
mov
repz
out
scas
pushf
in
xor
mov
mov
mov
sbb
pop
pop
push
mov
testl
aas
mov
push
adc
inc
call
leave
js
insl
add
leave
cli
xor
rcll
cs
inc
mov
loop
adc
clc
jno
mov
mull
or
fldt
mov
mov
aas
rcr
dec
adc
jmp
addb
sub
aaa
pop
rcr
xchg
loope
jle
scas
mov
adc
mov
jae
leave
ret
jle
ret
mov
daa
adc
push
mov
cmpsl
fs
inc
jp
hlt
aaa
sbb
xchg
sahf
cltd
mov
and
lds
aaa
scas
pop
cmp
mov
dec
inc
xor
dec
das
jge
inc
ret
inc
pusha
pop
pop
jp
scas
mov
sbb
pop
idiv
les
data16
and
sub
aam
dec
call
dec
mov
scas
cld
lahf
out
sub
call
lret
jge
icebp
mov
gs
or
mov
xchg
test
mov
adc
out
mov
bound
sub
sub
and
mov
mov
aaa
mov
es
dec
add
popl
xor
aas
jmp
push
pop
nop
dec
in
dec
pop
stos
inc
fwait
lds
adc
adc
dec
jmp
jne
stos
subb
sub
lea
into
fbstp
int3
pop
xor
adc
cmp
fcompl
out
cmc
imul
loope
je
int
es
call
orb
loopne
add
in
lret
or
sbb
fistl
hlt
insl
cmpsb
mov
sarl
xchg
add
add
icebp
lret
lds
add
sub
aad
repnz
test
lods
das
sub
mov
loope
lahf
push
jno
inc
inc
mulb
shl
sbb
sbb
dec
fs
je
jb
lahf
stc
icebp
inc
jo
xchg
jge
movsb
adc
leave
movsb
push
mov
imul
insl
inc
push
dec
cmpsl
push
xchg
lahf
xchg
out
jae
mov
mov
mov
sub
out
mov
out
je
jg
mov
adc
and
sbb
popa
test
or
mov
dec
shrb
ljmp
xchg
or
enter
mov
pop
ss
sbb
pop
mov
fildl
pop
das
xlat
sbb
push
pop
test
and
mov
mov
imul
dec
stos
mov
jl
and
jge
push
mov
push
lcall
clc
movsb
pop
xchg
in
int3
in
int3
xor
mov
insb
xor
push
inc
dec
int
xchg
mov
leave
ret
cld
lds
mov
inc
aaa
xor
outsl
loope
addr16
aaa
dec
sub
stos
sub
push
sub
push
xchg
or
pop
jl
aaa
xor
mov
cmp
testb
pop
and
pushf
adcl
adc
dec
push
das
or
icebp
cld
lock
arpl
mov
repnz
ds
mov
mov
adc
pop
fwait
add
or
out
test
clc
stos
lock
scas
mov
pop
adc
dec
pusha
inc
sbb
fdiv
inc
movsl
mov
push
push
jnp
mov
stos
push
fdivs
adc
mov
fcomps
mov
out
push
hlt
lcall
rcl
fildl
stos
and
pop
mov
xchg
nop
addl
pusha
sbb
loopne
xchg
dec
loope
add
pop
jecxz
mov
fnstsw
xchg
dec
dec
cmpsl
in
cmp
aad
adc
test
sbb
pop
jmp
addb
arpl
pop
loop
mov
test
jl
adc
mov
dec
push
in
lret
mov
nop
scas
call
inc
jmp
push
xor
mov
das
inc
idivb
mull
adc
fisttpll
jb
inc
pop
xor
repnz
mov
push
mov
mov
stos
jb
ljmp
pop
mov
xor
cld
mov
in
adc
sbb
sbb
clc
mov
rcrl
xor
mov
test
rorb
xor
cmpsb
pop
out
and
cmp
cmc
jne
mov
int
mov
pop
cmpsl
dec
inc
mov
dec
sbb
pop
push
push
outsl
and
gs
inc
adc
cmpl
cmp
jne
xchg
xchg
pushf
push
inc
jo
fcomps
jne
js
inc
pop
or
loope
adc
out
mov
loopne
pop
xor
aad
xor
pop
mov
mov
mov
imul
arpl
adc
add
mov
scas
adc
repz
lret
pop
mov
or
xchg
ret
in
addb
jne
pop
cld
xchg
cwtl
xor
notb
push
outsb
dec
fldl
or
sbb
pop
lahf
aaa
nop
in
repz
add
lahf
push
mov
das
repz
dec
and
test
arpl
dec
rclb
adc
push
fildll
mov
cltd
inc
lcall
dec
sub
scas
shrb
aaa
pop
rol
shrl
mov
mov
aad
cmp
jb
mov
or
sbb
std
insb
inc
dec
jmp
nop
xlat
mov
pop
out
sti
mov
iret
and
lret
push
push
push
pop
sbb
aas
fdivr
out
data16
arpl
push
addr16
mov
lea
cld
sbb
ss
icebp
scas
and
sbb
dec
cs
jge
add
jo
jno
sub
test
movsb
sbb
or
pop
cmp
mov
out
aaa
in
pop
sub
mov
sub
mov
or
int
in
mov
add
dec
scas
jmp
adc
pop
add
or
and
out
lcall
cltd
mov
jne
pop
cmp
dec
inc
lock
lods
or
test
add
xchg
mov
xchg
scas
jo
loopne
sbb
into
xchg
push
cmp
testb
pushf
or
xchg
jns
or
popf
outsl
dec
ljmp
cmpsl
push
aas
call
adc
repnz
scas
mov
or
ds
insb
mov
add
and
sub
sbb
xor
ss
push
jg
add
lods
jg
pusha
sub
mov
and
icebp
adc
shrl
pop
scas
adc
add
aaa
add
enter
mov
into
mov
push
or
push
lret
xchg
imul
loope
gs
push
dec
xor
inc
mov
sub
push
pop
into
push
dec
loope
fdivl
push
xchg
ret
addr16
ficoml
jns
stc
out
inc
xchg
cmpsl
cli
pop
sub
loopne
ret
cmpsl
sub
add
stos
movsl
mov
adc
inc
add
mov
dec
jge
in
clc
fcomp
jg
pop
lock
mov
jbe
add
add
push
imul
pushf
stos
insb
xor
push
xchg
jo
ficomps
sbb
outsl
cwtl
dec
sub
and
xchg
int3
xchg
add
xchg
xchg
mov
in
divb
adc
je
fs
dec
cmp
or
clc
sbb
push
jl,pn
pop
sbb
or
in
mov
test
filds
sub
dec
lods
ljmp
je
and
repz
xor
sub
stos
and
nop
and
fisttps
rolb
pop
in
das
test
test
in
add
scas
stos
mov
sbb
add
dec
popa
lcall
stos
imul
addr16
pop
lcall
jecxz
lret
dec
mov
and
adc
fwait
fwait
pop
pop
lock
push
dec
pop
mov
cmp
movsl
loop
and
adc
add
scas
xchg
clc
mov
sar
and
fadds
ret
fwait
int3
push
cmp
xor
mov
sub
mov
inc
js
pop
call
mov
add
test
fistpl
std
lret
push
push
cmp
clc
sub
jae
dec
pop
cmp
arpl
mov
xor
push
shll
hlt
lahf
cmp
dec
jno
lret
and
inc
push
cmp
mov
mov
push
jge
dec
cld
stos
into
sbb
sub
xor
lock
std
add
pop
and
add
outsb
sar
stos
adc
std
and
clc
js
bound
xor
clc
add
stos
push
fwait
bound
add
jo
lcall
adc
dec
sbb
int3
andl
add
int
jns
sbb
aaa
ret
mov
xchg
cltd
pop
lods
add
mov
inc
mov
out
nop
xor
and
xor
xchg
int
sbb
jmp
add
ds
mov
adcl
sub
add
xlat
xor
and
or
fldl
mov
dec
out
sub
ja
test
inc
fiaddl
arpl
jmp
inc
out
xchg
mov
jo
xor
push
in
out
sub
add
out
push
cmp
fs
cs
mov
mov
dec
jns
jns
xor
fimuls
in
and
popl
fldln2
negb
mov
sbb
xchg
lods
jge
sbb
shrl
stos
movntps
loopne
fadd
insb
fadd
cmp
dec
lea
nop
adc
sub
push
mov
fildl
scas
aam
lds
add
shr
sub
cwtl
jl
push
lahf
push
out
fs
loopne
fdivr
adc
xchg
std
mov
lcall
in
scas
gs
mov
push
rol
dec
lret
scas
into
inc
pop
sub
push
or
sub
pop
test
inc
ficoml
imul
and
lods
jae
fcmovnu
pushf
in
arpl
adc
inc
idivb
sub
jb
add
and
and
dec
in
mov
fistps
inc
and
mov
loope
mov
xchg
mov
sub
pop
dec
and
xor
jmp
xor
mov
or
subb
xchg
cmp
adc
xchg
bswap
push
push
add
ficoml
sbb
in
sti
in
mov
ljmp
jmp
int
cmpsb
jne
cltd
mov
dec
jp
xchg
pop
sbb
lds
outsl
iret
and
push
jbe
test
mov
dec
xchg
mov
and
lahf
into
push
xor
sub
or
xor
movsb
in
imul
inc
jge
ljmp
clc
jb
push
aaa
insb
insl
adc
jb
mov
sub
push
movsl
cmp
pop
mov
jp
jl
xor
cld
imul
mov
fcompl
fdivs
movsb
leave
xchg
iret
jno
loop
or
cs
popa
pop
sub
aad
pop
in
pop
cmpsl
fiadds
pop
jmp
jg
xor
ss
sbb
cmpsl
add
iret
int3
mov
das
in
loop
xor
mov
sub
cmp
lret
or
test
cld
ss
subl
andb
fcmovb
jmp
jno
xchg
mov
jge
and
insl
xchg
add
test
xor
pop
loopne
xchg
int3
mov
jns
pop
push
mov
inc
xchg
xchg
jbe
cli
fwait
inc
rol
inc
jmp
adc
push
repz
push
lods
ret
add
xor
dec
jne
and
daa
inc
mov
pop
xor
lret
xor
push
enter
int3
xchg
sub
loop
in
stos
cli
inc
inc
sbb
sub
aad
push
xchg
push
iret
mov
pop
xchg
mov
mulb
sub
sbb
mov
repz
adcb
daa
dec
jmp
push
mov
adc
je
sahf
out
lea
sub
xor
frstors
scas
jnp
sahf
and
int
popa
or
out
test
pop
jecxz
add
sub
dec
mov
push
jbe
lods
inc
divb
ja
inc
popf
mov
mov
sbb
cmp
adc
mov
ss
xchg
push
gs
int
jnp
xor
das
xchg
mov
cmc
aam
pop
push
out
test
xor
mov
test
push
jg
sarb
and
in
inc
mov
mov
sbb
add
xchg
sti
mov
mov
cltd
cld
mov
pusha
loope
add
inc
and
or
out
mov
push
xchg
repz
aad
nop
push
xchg
mov
fldt
xchg
cwtl
cli
shll
push
stos
mov
loope
and
imul
mov
ja
sbb
out
in
mov
lock
pop
push
sbb
xor
lds
sbb
jno
scas
dec
call
arpl
cmp
mov
mov
cld
loop
mov
jle
mov
jae
aam
fldt
dec
jp
movsb
aam
gs
jne
add
sbb
sub
mov
pop
addr16
rcr
ficomps
pop
add
ljmp
dec
outsb
mov
add
out
mov
shrb
push
inc
imul
jecxz
iret
int3
pop
jg
mov
dec
jge
jns
repnz
cmpsl
inc
leave
ficoml
mov
mov
sbb
pop
push
and
jmp
dec
shlb
aas
fs
maskmovq
notl
inc
inc
fildll
jnp
arpl
js
xchg
pop
call
vmwrite
push
mov
sbb
mov
inc
ffree
sub
xchg
popa
cmpsb
inc
jne
jb
mov
sbb
cmpxchg
dec
mov
xchg
and
or
subl
pop
add
int3
fstpt
inc
add
mov
pop
sub
lcall
add
mov
mov
pop
sub
adc
frstor
jbe
xor
loopne
mov
fdiv
mov
mov
in
aas
mov
inc
push
fidivl
cli
xor
sahf
xchg
push
pop
flds
lret
cmp
push
pop
pop
andb
mov
int3
sarb
call
mov
orl
fdiv
aam
movsb
xchg
in
test
mov
inc
pushf
js
sbb
in
imul
imul
mov
pop
aas
je
std
sbb
mov
pop
je
mov
xorb
push
mov
mov
or
jge
jge
adc
sub
jnp
jno
add
stos
xor
mov
and
cmpsl
xchg
mov
sub
and
in
mov
mov
imul
pushf
cmc
mov
lret
sarl
loope
xchg
enter
int3
mov
sub
inc
imul
out
push
mov
jmp
rclb
mov
nop
mov
stc
add
and
or
loope
es
mov
scas
adc
push
mov
xchg
add
sarl
dec
and
loop
aad
jae
xchg
cmc
inc
addr16
mov
xchg
dec
lods
xlat
scas
inc
sbb
ffree
pop
add
into
jno
ja
mov
inc
arpl
fistps
cltd
jbe
push
or
out
jp
or
and
and
adc
jmp
fs
sbb
xchg
ja
lock
xchg
mov
xchg
in
out
sbbl
test
sub
mov
xchg
jbe
leave
scas
mov
sbb
dec
pop
adc
das
and
mov
cmpb
adc
loope
and
dec
outsl
xchg
in
sub
test
out
mov
mov
stos
jg
jle
mov
add
fsub
pop
out
cmp
ja
or
adc
xor
cs
sub
iret
adc
pop
pop
dec
push
inc
or
jp
sub
xor
or
popf
gs
xchg
cmp
jb
xchg
leave
mov
fwait
mov
aaa
add
adc
ficomps
cmp
push
int
mov
jmp
xor
xchg
lods
out
pop
inc
loope
xchg
xor
adc
cmp
sbb
mov
or
adc
or
jns
xor
or
lods
roll
hlt
push
jle
xor
movsb
pop
fxtract
xor
pop
test
cwtl
push
test
fidivs
cli
adc
loop
rcrb
push
mov
insl
mov
push
pop
icebp
lds
adc
aaa
test
nop
push
jg
xor
dec
xor
cs
cmpsl
ficompl
inc
loopne
or
jle
lods
rolb
adc
jbe
std
cli
lcall
in
pop
mov
rolb
cmp
jp
rcrb
or
and
cmp
fimull
cli
mov
divb
dec
mov
das
lret
scas
mov
in
dec
sub
jne
jmp
pop
neg
sbb
or
pop
mov
int3
pop
and
in
mov
ja
xchg
mov
rorl
movsb
push
adc
cltd
cli
jle
mov
test
push
in
xchg
jmp
mov
xchg
or
inc
cli
pop
sti
int
cmp
pop
add
sti
popa
roll
dec
xor
inc
cld
xorb
in
dec
lea
ror
fwait
ret
call
ljmp
adcb
cld
mov
lea
pop
insl
and
or
pop
ljmp
outsb
icebp
fisubs
adc
mov
in
imul
cmp
pop
movsl
fmuls
orl
inc
lret
sub
movsb
ds
xchg
addr16
arpl
inc
cmp
and
push
int3
pop
mov
nop
jb
xchg
jg
movsb
hlt
int3
mov
cmp
cmp
push
cmp
add
and
pop
stos
hlt
in
mov
fdivl
mov
fmull
jp
daa
xor
pop
iret
xchg
lods
xchg
xchg
lret
push
adc
sbb
sub
out
mov
enter
sti
lods
int3
shrl
cmp
pushf
push
ja
xor
cmp
sti
mov
inc
xlat
loopne
gs
addr16
adc
out
fnstenv
mov
cmpsl
fidivrs
jnp
in
std
mov
in
lock
pop
test
push
cltd
pop
flds
ret
mov
sub
cld
xchg
or
cwtl
mov
test
roll
add
sub
int
cmpsl
daa
out
cmp
loope
mov
ljmp
ljmp
xchg
iret
mov
stos
leave
mov
les
sub
fimuls
je
mull
lahf
pop
jle
das
cltd
and
dec
cmp
push
and
stos
nop
sbb
mov
mov
lahf
push
std
fldenv
movsl
roll
ja
in
shrl
dec
aas
sti
xor
dec
jp
lea
js
mov
jb
jp
pop
jnp
out
mov
inc
or
into
sbb
nop
jbe
mov
aam
cwtl
sub
xchg
adc
mov
add
add
stc
nop
mov
outsl
lahf
cli
out
mov
pop
pop
clc
fisttpll
fildl
je
shlb
mov
sti
stc
and
cli
inc
mov
push
test
adcb
movsb
pop
daa
cli
ficompl
arpl
imul
mov
jns
jp
jae
sub
cmpsb
sub
xchg
or
aaa
imul
xchg
out
lea
stos
push
gs
sbb
sub
jecxz
mov
repnz
inc
aas
cmp
daa
sbb
loop,pn
mov
inc
loopw
clc
inc
cmp
or
fildl
sbb
ss
add
jb
dec
mov
pop
out
and
pop
punpckhdq
push
sbb
outsb
ret
out
add
test
jl
xchg
sub
lock
jno
adc
int
xchg
jmp
adc
push
loopne
in
cmpsl
mov
imul
xor
icebp
sbb
ds
dec
shlb
inc
icebp
push
rolb
adc
loop
insl
pushf
shr
lcall
jge
stos
out
xor
sbb
xor
fnstsw
ret
inc
fwait
jb
aad
sbb
gs
shrl
pop
idiv
lahf
int
testb
mov
mov
addr16
jl
ljmp
xor
mov
mov
in
adc
fiaddl
pusha
jbe
stc
in
shlb
data16
jge,pn
arpl
sti
adc
jp
fistpll
push
fsubrl
mov
stc
and
inc
ja
loope
int3
adc
pop
adc
push
cmp
xor
inc
repz
xchg
push
pop
orb
adc
lcall
insl
lods
popf
xor
ret
mov
xor
pushf
xchg
and
js
dec
pop
sti
inc
or
call
jp
push
data16
adc
add
ret
in
daa
add
dec
mov
mov
jbe
pop
mov
and
fcomp
ficoms
add
dec
rorb
dec
cmpsl
pop
or
adc
dec
pop
leave
int3
iret
in
stos
bswap
mov
pop
mov
sub
xchg
add
mov
arpl
in
popf
mov
imul
lahf
cmp
popa
js
testb
mov
cmpsb
pop
ffreep
inc
sbb
aad
add
add
ss
adc
sbb
lcall
int3
cmp
gs
pop
shrl
aaa
movsb
sub
fstpl
pop
pop
and
insb
sub
push
lods
xchg
fldcw
ds
pop
sarb
and
lock
aad
mov
das
je
lock
inc
xchg
pop
xchg
shrl
adc
shrb
mov
xor
sbb
clc
sbb
sti
rcrl
daa
stos
add
in
nop
push
xchg
aam
loop
loop
mov
dec
rcrb
xchg
dec
je
mov
out
insb
jbe
sbb
mov
rcrl
dec
fs
mov
jle
loopne
mov
in
push
je
adcl
loopne
test
std
or
aaa
movsl
test
xchg
hlt
sbb
pusha
pop
push
dec
out
imul
subps
and
inc
pop
aas
sbb
xchg
filds
mov
mov
jmp
and
jl
sarb
push
mov
cmp
adc
mov
leave
and
mov
bound
fcmovbe
testl
mov
leave
xchg
movsl
jne
jns
icebp
rol
pushf
or
pop
mov
sti
jne
shlb
enter
das
pop
dec
imul
setge
movsb
mov
cmp
and
mov
loope
stos
hlt
fisttps
data16
hlt
aad
and
push
cld
fstps
jp
sub
cwtl
jbe
mov
adc
xchg
mov
push
inc
aaa
ljmp
jne
cmp
scas
inc
ret
sahf
shlb
out
leave
int3
jns
push
divl
jle
push
test
push
mov
pop
out
pop
mov
push
inc
cmp
mov
imul
or
push
popf
int3
lret
mov
cs
mov
jo
pop
cwtl
test
jmpw
fistl
mov
pop
pushw
es
sar
out
sub
mov
adc
jbe
or
out
and
std
leave
loopne
movq
cmp
cmpsl
jo
mov
aaa
mov
sub
aas
into
aad
out
cmp
jp
xor
mov
iret
pop
cmp
int3
enter
xchg
cmc
psubusw
dec
adc
xor
fstpt
adc
js
xchg
xchg
aas
push
out
jl
repnz
add
fcompl
iret
fs
insl
inc
mov
cmp
rcr
push
rorb
sub
testb
or
xchg
and
aam
jbe
insb
jnp
xchg
cmp
adc
ror
andb
cmp
aas
mov
push
inc
aam
scas
mov
cs
inc
call
loop
fcmovu
fucom
xor
xchg
mov
inc
and
loope
dec
push
pusha
push
mov
ja
pop
jnp
cmp
pop
mov
mov
mov
cltd
pop
das
mov
fldcw
mov
xchg
lods
mov
and
test
in
pop
notb
mov
cmp
push
popf
or
xchg
scas
cmc
dec
or
icebp
mov
xor
add
imul
jg
cs
mov
jne
jg
lret
out
mov
test
das
dec
je
cmp
xchg
mov
sub
loopne
fcompl
psrad
adc
iret
push
jecxz
adc
jbe
rolb
or
jnp
shl
adc
pop
nop
xchg
sbbb
xchg
push
add
mov
inc
popf
lret
or
xor
pop
sti
jno
and
cmpsl
ja
sub
cmp
sbb
mov
hlt
sarl
mov
mov
add
jns
sub
push
cltd
dec
rorl
ja
add
fdivrs
enter
hlt
and
ljmp
testb
mov
js
ljmp
sbb
pop
mov
ljmp
push
fildll
cmp
inc
adc
jne
pop
stos
cmpl
nop
or
mov
jnp
in
popa
fwait
pop
sbb
ljmp
xor
cmp
in
fwait
and
fldt
popa
pop
push
fs
cmp
or
subl
xchg
shll
pop
fisttps
popa
sbb
jno
push
sbb
inc
push
call
add
imul
sbbl
push
insb
fldenv
pop
xchg
popf
add
popa
data16
cmp
dec
dec
mov
sub
xor
sahf
aaa
xor
outsl
sub
and
xchg
inc
or
pop
ret
jo
arpl
cmp
pushf
in
popa
insb
mov
mov
loop
or
dec
push
push
lcall
inc
push
jnp
lea
pop
fnsave
and
jge
fists
jns
adc
aas
dec
in
mov
mov
jp
mov
push
xorb
dec
push
dec
pop
ret
sbb
addr16
push
dec
sbb
push
sbbl
push
add
or
es
addr16
and
jae
adc
inc
push
cmp
mov
cmpl
decb
jne
das
push
mov
jg
sar
and
or
xchg
pop
or
inc
add
jnp
pop
roll
les
add
fistpl
mov
roll
icebp
mov
insl
daa
or
punpcklbw
rcll
inc
xor
sbb
xchg
mov
sbb
aam
gs
cmp
jne
push
cmp
mov
ljmp
and
cmpsb
mov
mov
lcall
subl
call
out
dec
mov
sqrtps
adcl
lret
or
push
jecxz
das
bound
pop
sbb
movsl
sub
mov
push
inc
jmp
add
add
ljmp
enter
inc
jb
adc
dec
add
iret
dec
xchg
test
jmp
jg
test
jnp
and
jg
add
loop
lret
inc
mov
add
mov
push
scas
pop
jl
xor
fdivp
pop
pop
sbb
xor
test
test
incl
mov
add
insl
test
inc
out
dec
cmc
xchg
ljmp
loopne
xor
nop
cmc
loop
and
and
add
notl
pop
imul
cmp
add
pop
mov
jbe
push
push
xor
cs
ss
aas
mov
cmp
sarl
in
cwtl
bnd
cmp
in
cmp
filds
or
data16
pop
enter
cltd
jns
xchg
aas
andnps
sbb
data16
cwtl
add
adc
or
and
dec
push
pop
or
inc
ror
subl
inc
lds
outsl
sbb
cmp
arpl
or
pop
ss
sbb
stc
push
add
inc
cmc
add
pushf
in
inc
out
dec
jnp
mov
xchg
mov
fiadds
or
jge
mov
inc
sub
jno
daa
mov
cmp
daa
sub
call
mov
sbb
push
mov
adc
into
popa
arpl
insl
lret
ret
test
dec
fisttps
enter
mov
and
cmp
insb
mov
xchg
xor
pop
jecxz
jge
mov
hlt
or
xchg
cmpsb
push
ds
cmp
inc
fildll
in
inc
sub
sbb
adc
mov
jmp
push
xor
adc
clc
and
mov
jle
sbb
ret
aas
popf
xlat
iret
push
and
xchg
dec
jno
push
and
js
pop
cmpsb
cmp
popa
adc
adc
jecxz
push
orb
push
das
xor
mov
rorl
pushf
dec
or
lods
outsb
int
cmp
inc
in
hlt
inc
lock
int3
scas
mov
iret
dec
and
out
xor
adc
mov
mov
push
in
ret
arpl
cwtl
lcall
or
hlt
in
xor
adc
rorl
push
pusha
and
loop
mov
jb
lock
xchg
jge
push
hlt
stos
sub
sub
xor
icebp
sbb
push
jecxz
outsl
pushf
and
das
into
jle
dec
cwtl
pop
mov
sub
clc
sub
mov
fwait
pop
xchg
adc
jns
xor
je
jnp
push
jae
mov
nop
pop
mov
fdivs
loopne
sbb
cmp
ljmp
dec
or
dec
aad
cmc
pop
scas
mov
dec
sbb
int
or
xchg
cld
daa
imul
hlt
xchg
movsl
fldcw
sub
xchg
or
pop
add
lahf
insb
out
jmp
pop
mov
jb
add
jecxz
cmpsl
fsubrl
and
shl
pop
popa
jbe
addr16
addr16
cs
int
sti
pop
cli
jns
test
rolb
ret
xor
fidivl
and
aas
mov
mov
in
pop
jno
mov
adc
push
and
cmp
outsl
jmp
nop
stc
push
out
jbe
mov
mov
int
pop
aaa
inc
dec
out
movsl
cwtl
jecxz
xchg
sbb
mov
fsubrs
in
mov
inc
and
xor
popa
int
xor
int
jg
mov
mov
push
inc
aad
add
and
arpl
mov
and
repz
jnp
mov
mov
nop
lods
push
cmpsb
adc
adc
insl
xchg
pop
add
xlat
pop
xchg
mov
ljmp
repnz
cwtl
xchg
ret
or
jo
xchg
sti
add
jns
xchg
sti
mov
dec
pop
lds
arpl
cmpsb
mov
out
lret
loop
js
mov
push
add
movsl
jno
lret
lcall
adc
aam
idivb
rorl
dec
dec
cld
shrl
fiaddl
inc
mov
and
dec
mov
xchg
push
ror
xchg
pop
or
add
cmp
mov
cli
repnz
mov
lret
push
in
mov
out
ret
mov
push
sbb
sar
aas
insl
mov
jae
pop
leave
mov
xchg
push
mov
xlat
or
nop
fildl
fstp
lahf
jecxz
jmp
dec
ret
pop
mov
popa
or
xchg
dec
in
call
repnz
sbb
lods
lret
dec
aam
jmp
xchg
cmp
xchg
pop
dec
es
lcall
inc
jle
xor
add
shr
lds
xor
insb
call
inc
add
jp
xor
or
lods
jb
mov
xchg
loop
test
add
les
movsl
rorl
mov
dec
cmpsl
in
and
incb
daa
push
les
movsb
xchg
pusha
push
adc
push
call
push
jle
mov
add
jle
and
data16
pop
mov
xchg
sbb
jmp
icebp
adc
fadds
or
loop
inc
dec
hlt
mov
ja
jge
ret
xor
and
cmp
jns
adc
cmpsb
xchg
mov
add
movsb
ljmp
in
sbb
or
xlat
lods
dec
gs
add
repnz
das
je
mov
sub
sub
aas
les
incb
cmp
dec
ret
add
sub
outsb
popf
dec
or
mov
inc
cmc
adc
jge
leave
repnz
inc
adc
fsubr
clc
fiaddl
mov
push
pop
arpl
ja
imul
jecxz
pop
aam
cltd
push
iret
mov
fwait
idivl
adc
mov
push
nop
hlt
shl
rcrb
das
fdivrp
push
ds
dec
andb
das
xchg
jg
mov
cmp
inc
xor
test
bound
xchg
dec
jns
lret
ficompl
lods
lods
push
push
cmpsl
cmp
cmp
sbb
dec
dec
fdivrl
mov
fwait
ds
cmp
frstor
pushf
dec
stos
out
add
pop
push
stos
mov
cltd
in
cmpsl
scas
xchg
mov
imul
in
pusha
sbb
popf
stos
in
mov
fmul
push
inc
test
jg
lea
outsb
jle
lock
gs
inc
or
xor
imull
add
push
mul
sub
add
or
pop
insb
ljmp
popa
ret
orl
test
add
push
lods
pop
or
jnp
in
cmp
in
pop
ret
rol
sub
adc
and
pop
lret
mov
rorb
mov
divb
or
stc
add
fwait
aaa
rorl
cmp
out
clc
mov
mov
pop
out
mov
repnz
xchg
push
fnstenv
cmp
and
repz
mov
out
inc
imul
fisubs
push
outsl
and
sbb
cli
fisubrl
dec
and
stos
les
jb
mov
aad
mov
aaa
push
lds
hlt
lock
test
jge
cltd
xchg
dec
mov
cmp
insb
in
mov
inc
jle
jp
js
and
xorl
dec
mov
adcl
sahf
ret
and
add
sbb
mov
hlt
repnz
sub
pop
jb
xor
mov
into
test
lock
movsw
dec
and
sahf
mov
imul
xor
inc
sub
push
imul
mov
dec
xchg
test
enter
push
sub
push
push
pop
loopne
jecxz
and
rcl
jo
cmp
add
xchg
xor
lcall
fcomps
mov
pop
push
xrelease
mov
fisttpl
in
push
loopne
inc
pop
xor
push
lock
or
arpl
iret
cmp
addr16
mov
sbb
push
pusha
in
insb
xchg
test
shlb
fs
les
sarl
jmp
and
mov
mov
lods
mov
add
cmc
add
addl
xchg
les
hlt
sbb
out
clc
push
pop
pop
pop
sub
out
into
cmp
push
in
jbe
pop
ljmp
xor
cmp
fnstenv
ret
dec
pusha
or
ja
xchg
fildl
shrl
insb
adc
and
cmpsb
jmp
or
lcall
cld
bnd
imul
out
adc
xchg
jle
add
pop
cmc
adc
clc
sbbl
dec
loope
jno
call
xor
and
outsb
arpl
jl
adc
cltd
popa
push
jb
ret
sub
in
stc
aaa
push
adc
add
stos
test
pop
jns
and
mov
scas
xchg
outsl
adc
sbb
ljmp
xlat
pop
mov
pusha
pop
mov
and
xchg
mov
loopne
in
fisubs
hlt
cmp
xor
shl
mov
cmpsl
cwtl
xchg
shrl
cs
or
xor
enter
jb
mov
mov
decl
mov
add
movsl
add
aam
pop
mov
movsl
lret
xchg
xchg
jae
in
stc
and
std
and
jnp
add
xchg
push
pop
lret
sbb
out
loope
and
lret
xor
push
sbb
push
mov
mov
movsb
jb
add
mov
cmpsl
ret
imul
divl
mov
std
enter
int
aas
push
insb
sub
xchg
fidivs
pop
pop
adc
loopne
add
mov
fimuls
shl
push
adc
xchg
xchg
lret
or
sbb
sti
stos
scas
mov
lahf
and
lock
cmp
adc
dec
jns
mov
inc
lret
sub
sbb
lods
les
jns
dec
or
ret
adc
push
adc
dec
inc
fldcw
call
mov
ret
pop
xor
xor
insl
adc
hlt
fwait
and
and
addr16
cwtl
sbb
icebp
mov
fsubs
insl
xor
adc
mov
out
enter
xchg
jmp
insb
sarl
and
shlb
pop
xchg
popa
sahf
out
push
std
or
jno
sbb
xchg
aaa
cmp
lea
inc
jp
lea
and
push
arpl
pop
inc
mov
sbb
pop
sbb
mov
popa
int3
jle
xor
sub
cmp
je
cmp
or
leave
push
loope
jb
xchg
fdivrs
stos
out
dec
cmp
jns
lret
push
repz
into
pop
loope
das
je
mov
shlb
ja
and
call
fnstsw
lret
jo
not
mov
ljmp
lahf
stos
pushw
lods
lods
lods
lret
arpl
in
inc
or
mov
aad
push
jae
jl
jb
pop
neg
xor
dec
sar
rcrb
jo
cmp
rol
cld
aas
adc
movsb
fbld
adc
test
movsl
test
jle
mov
js
push
dec
fcoms
imul
push
les
and
mov
mov
jle
lcall
xchg
xchg
repz
sbb
mov
lret
mov
inc
inc
mov
push
rcrb
shll
jge
mov
mov
nop
cmc
roll
ja
push
leave
mov
cs
cmc
rol
jns
ret
cmp
lret
mov
or
jo
test
jbe
das
sbbb
sbb
or
rorl
xor
push
cs
mov
jle
xor
pop
xor
test
aad
scas
inc
in
dec
and
push
push
imul
lea
out
mov
fadds
fdivl
pop
add
in
add
arpl
aas
xchg
sbb
imul
idiv
dec
mov
icebp
jne
popa
mov
fwait
sarb
out
sbb
xchg
xor
les
xor
roll
dec
adc
clc
dec
xor
pop
in
add
ret
adc
dec
and
adc
in
sahf
pop
pushf
xor
loope
adc
jle
xchg
lock
repnz
sub
and
adc
xor
inc
inc
nop
je
and
test
xor
out
cmpsb
jg
notb
fldenv
test
fs
jb
pop
cmp
mov
mov
pop
mov
inc
pop
jg
cmc
imul
cld
jecxz
repnz
and
dec
data16
adc
mov
fadds
mulb
mov
lea
jmp
cmp
xchg
lods
adc
cmp
push
dec
push
int3
mov
xchg
in
cwtl
pop
sbb
lea
ss
stos
mov
jg
mov
pop
inc
imul
sub
mov
pushf
test
inc
out
test
and
jne
adc
js
sbb
adcl
sti
add
sbb
stos
sub
outsb
hlt
enter
inc
loope
bound
pop
mov
mov
shrl
push
mul
je
test
imul
into
inc
fdivrl
lahf
imul
sahf
dec
xchg
rorb
movsl
pop
out
xchg
mov
push
jecxz
repz
mov
notl
outsb
mov
les
push
xor
out
mov
sbb
xchg
cmp
dec
idiv
jge
cmp
inc
fcmovnbe
jecxz
push
aad
ret
test
dec
xchg
inc
sahf
add
das
push
mov
mov
cltd
pop
ja
and
sbb
add
insb
enter
mov
in
repz
xchg
incl
xchg
ret
lea
and
fwait
daa
lock
aam
push
inc
gs
jae
push
movsb
xlat
push
jge
aas
push
xlat
out
lcall
xor
clc
push
test
xor
sbb
add
je
cmp
dec
inc
add
push
test
std
insb
pop
into
xchg
punpcklwd
loope
mov
cmpsb
jb
dec
cmpsb
je
shlb
cld
and
cmpsb
outsb
fnstsw
add
mov
ss
push
add
push
loope
xchg
add
jg
adc
andl
jb
jb
sub
mov
insb
sbb
jne
mov
sbb
lret
sahf
imul
jae
sbb
inc
pop
jns
inc
jle
inc
push
aaa
xlat
lods
shll
adc
cli
dec
insl
test
cmpsl
inc
or
jae
dec
lahf
jle
mov
aad
ljmp
cmp
xchg
in
lods
push
in
or
or
sbb
dec
fs
pop
xchg
stc
push
into
sub
jge
stos
arpl
dec
xor
mov
imul
push
inc
cmpsb
sahf
fs
aaa
sbb
add
movsb
pop
jns
mov
xorb
aas
dec
int
mov
into
fbstp
or
push
mov
in
fadds
fmuls
dec
rcl
sbb
mov
test
adc
mov
add
mov
add
push
xchg
mov
push
push
mov
icebp
ljmp
ret
addb
inc
dec
fcomi
jb
incl
adc
xor
jge
jbe
repnz
sub
mov
out
mov
inc
xor
out
jp
movl
cmpl
push
adc
dec
xor
xchg
inc
sbb
cli
pushf
fcoms
mov
mov
and
mov
mov
xchg
cwtl
data16
push
mov
popf
in
sahf
cs
int
push
lahf
inc
clc
arpl
dec
cmp
xchg
sti
lea
mov
or
mov
push
xor
push
fprem1
xchg
cmp
sahf
call
cmp
add
xor
data16
adc
outsl
das
jp
cmp
out
cmpsb
jo
movsl
push
push
mov
movsb
or
dec
mov
ret
jb
pop
shll
add
lea
repnz
test
int3
sub
dec
movsb
dec
lahf
cld
and
pop
cld
adc
cmp
insl
xchg
jle
cli
rorb
push
push
mov
mov
cmp
mov
and
adc
sbb
fisttpll
mul
in
mov
test
call
mov
push
adc
sbb
sub
push
cltd
imull
xorb
jbe
mov
xchg
iret
jo
sbb
insl
arpl
push
sbb
jmp
popf
xchg
out
in
cmpsb
inc
mov
push
jg
adc
arpl
push
ljmp
lcall
dec
gs
ja
jb
jp
stc
int
test
jb
loope
xchg
sub
xor
adc
repz
int
xor
jge
mov
dec
or
ja
xchg
push
mov
cmc
inc
hlt
cld
sbb
mov
jg,pn
fiaddl
fwait
mov
pop
scas
mov
fwait
imull
mov
mov
repz
test
and
fisttpll
jno
gs
cmp
xor
or
mov
addr16
cld
incl
hlt
data16
pop
or
push
and
pop
cltd
sarl
cmp
in
pop
xchg
push
sub
insl
rep
mov
xlat
sub
in
pop
fists
into
and
xchg
pushf
xchg
cmp
pushf
movsl
sbb
ljmp
or
sbb
or
mov
mov
arpl
sahf
in
fwait
mov
std
pop
add
lcall
jmp
sbb
inc
inc
mov
pop
inc
int
sub
movlps
add
icebp
lds
push
icebp
bound
and
lea
scas
stc
adc
mov
bnd
out
cltd
aam
out
push
rclb
lahf
jo
jae
ljmp
cld
lahf
mov
xor
pop
mov
xor
xchg
push
push
push
int
in
mov
sub
mov
xchg
loopne
cmp
sub
pop
mov
aaa
rcr
or
cmpsb
xchg
lret
cli
out
xlat
xchg
jo
push
nop
dec
add
mov
dec
into
sub
mov
or
nop
xchg
inc
and
scas
leave
push
dec
popf
int
or
pop
pop
test
andl
jg
pop
xor
idiv
push
add
and
fnsave
jmp
cmpsl
loopne
or
adc
or
sti
pop
adc
xor
mov
ret
imul
sub
push
sub
xlat
dec
and
cmp
in
and
dec
mov
ret
int
subb
dec
pop
push
mov
pop
stc
inc
stos
or
jmp
dec
sbb
aad
inc
icebp
add
lock
sahf
cmpsl
sub
ss
sub
outsb
lea
cmp
imul
sub
adc
pop
in
xchg
cmpsl
addl
push
dec
cli
fucomp
vmovaps
fldcw
cli
xchg
imul
push
adc
fsubrs
sub
cs
and
add
je
aaa
ljmp
or
and
imul
iret
mov
mov
shll
pop
mov
pop
add
das
daa
cmpsl
aad
sahf
inc
out
cmpsl
mov
push
jb
lret
loopne
std
dec
ja
lcall
jno
ficoml
ficoms
cmp
push
inc
cmpsl
mov
sub
xchg
mov
pop
cmp
movsl
icebp
lahf
or
pop
insb
xchg
ja
adc
std
seta
pop
cmc
cli
inc
adc
sub
push
je
das
mov
cmp
push
lret
or
push
mov
jb
cmc
mov
mov
inc
mov
jmp
sbb
adcl
stos
adc
leave
loopne
lods
inc
sub
add
mov
lcall
in
mov
dec
into
mov
call
cmc
rcrl
mov
adc
jge
in
dec
and
adc
mov
mov
mov
jle
out
loope
push
adc
pop
adc
and
call
clc
jmp
pop
cs
test
inc
lock
inc
mov
push
mov
test
outsl
repz
mov
shlb
popf
or
mov
divb
into
fdivrl
pop
pop
std
and
hlt
push
in
dec
and
repnz
xchg
mov
stos
mov
repz
mov
pop
sub
les
inc
sbb
xor
out
adc
ficomps
or
and
movsl
push
xor
aas
pop
sub
push
fcoms
out
test
jg
mov
push
sub
aad
movsb
xchg
data16
sbb
lret
jmp
xchg
mov
das
push
push
add
dec
cwtl
sub
dec
mov
aaa
mov
pop
xlat
bound
and
nop
lea
in
mov
movsb
mov
push
and
testb
gs
sub
xchg
push
inc
shl
rcrb
cmpsb
cmp
push
cwtl
mov
roll
popf
adc
mov
or
popa
cltd
ljmp
pop
mov
divb
fsubl
insb
add
repz
xchg
stos
mov
jmp
cmc
stc
jno
inc
out
outsb
xchg
or
in
out
iret
fs
sbb
lods
add
lock
test
cmpsl
push
test
pop
into
dec
and
pop
mov
lahf
aad
sti
lret
cmp
sti
inc
inc
mov
test
bound
or
xor
xchg
sti
jbe
stos
in
cltd
mov
cmc
outsl
out
mov
jmp
pop
scas
sub
out
rcrb
cld
sahf
out
scas
pop
cmc
mov
cmp
add
adc
sub
rcrb
mov
adc
add
jecxz
lret
xor
push
sti
cmc
xor
push
dec
xor
enter
push
mov
ret
jb
out
fdivs
outsl
adc
dec
insl
sub
nop
icebp
mov
and
xchg
mov
es
test
and
notb
daa
ss
inc
and
das
int3
out
aad
mov
mov
data16
stc
pop
aad
mov
out
sub
popa
mov
repz
fisubl
fs
popf
cmp
push
pop
and
popa
cld
scas
pop
ljmp
arpl
xchg
in
mov
je
inc
or
ficomps
xchg
mov
stos
add
mov
adc
fwait
pop
mov
and
fstps
mov
pop
xchg
sub
pusha
test
das
sub
frstor
pop
popa
push
hlt
sbb
negb
cmovg
clc
popa
lcall
xor
push
scas
pushf
cwtl
sbb
mov
cmp
mov
jmp
push
mov
adc
inc
repnz
dec
adc
ss
orl
adc
enter
cltd
push
jo
mov
sbb
inc
jl
enter
lret
adc
enter
data16
jno
jg
hlt
cmpsb
mov
lock
fcmovnb
jno
pop
lods
in
xor
out
mov
add
rcr
sbb
test
aam
mov
add
movsb
and
inc
adc
cmp
clc
mov
incb
jb
pop
addr16
or
adc
xchg
negl
mov
pop
inc
shll
icebp
call
and
mov
stos
mov
sbb
roll
iret
cltd
not
cld
xor
imul
cmpsb
mov
jno
jae
xor
test
lods
xchg
inc
add
enter
mov
or
or
mov
add
mov
xor
mov
sub
hlt
mov
addb
jmp
ss
mov
popa
das
cwtl
pop
jno
add
into
lods
and
xor
mov
in
cmp
mov
jae
ret
rorl
testb
or
or
push
lret
in
mov
aaa
or
ja
shll
push
push
aad
sub
fstl
jg
in
pop
mov
mov
adc
pop
cwtl
pop
lods
pop
aas
pop
jae
xor
mov
lret
dec
cmpsl
or
xchg
cwtl
add
lea
cmp
dec
fsubl
jae
xor
push
fxch
sti
loop
lcall
ficoml
jecxz
lods
mov
push
ret
jecxz
xchg
cmc
mov
cmp
sarb
mov
cmp
or
push
xor
aas
lock
in
mov
dec
fldl
mov
cli
fld
leave
mov
and
imul
je
sbb
mov
lods
pop
jb
jnp
popa
xchg
out
movsb
inc
pop
push
aas
loope
call
jp
pushf
jecxz
and
mov
mov
sub
int
pop
aaa
jecxz
push
sub
cwtl
daa
gs
sbb
lds
mov
lock
lods
and
lods
inc
jns
inc
xchg
xchg
jnp
adc
or
dec
into
sub
sub
paddsw
test
mov
jo
inc
jo,pn
std
xor
pop
and
stc
mov
dec
mov
testb
loop
pop
push
int3
pop
stos
pop
push
ds
aaa
cs
fstpl
inc
sub
in
lods
bound
jmp
jbe
cs
sti
sub
scas
jbe
cmpsb
dec
arpl
das
aaa
in
shrb
mov
out
or
cli
lock
inc
into
incl
push
mov
lock
lods
les
sub
push
inc
imul
pop
mov
call
cmpsl
fwait
mov
movsb
jle
int
mov
cmp
sahf
mov
push
mov
inc
mov
pop
fmuls
std
inc
test
sti
mulb
pop
pop
cli
pop
mov
lods
cmp
sbbb
in
and
imul
icebp
xchg
ljmp
subl
aas
xchg
stc
fsts
jne
out
out
adc
xchg
outsl
imul
sahf
pop
test
cmp
imul
inc
jge
and
out
cwtl
loope
jnp
out
pop
jae
cli
imul
bound
push
repz
loope
push
xchg
fmull
jns
inc
loope
cmp
leave
ficompl
sub
shlb
ja
inc
cld
adc
movsb
ja
mov
dec
sbb
or
sbb
xchg
push
pusha
popa
int3
and
lea
pushf
cmp
aas
aas
fdivs
cmpsb
push
or
test
inc
pop
outsl
adc
sbb
in
inc
inc
push
cmp
cmp
and
fisttps
add
nop
adc
stos
js
loop
mov
adc
mov
addr16
mov
cmp
iret
loope
out
or
jb
cmp
test
mov
jmp
or
add
outsl
push
scas
jne
subl
or
ljmp
das
inc
dec
xchg
push
inc
aad
lea
xor
jp
ss
outsb
je
sbb
dec
sub
lock
and
aaa
imul
jl
mov
test
add
ljmp
in
stc
push
sbb
mov
decl
ss
pushf
dec
push
je
data16
jp
loopne
jbe
pushf
fmul
push
cld
mov
je
leave
sub
sub
xor
ficoms
jmp
gs
mov
push
pop
rcrl
test
jp
call
popa
and
and
hlt
mov
add
loop
cmpsb
add
inc
ljmp
das
dec
ss
int3
mov
outsb
dec
les
pop
mov
in
lret
testb
mov
xchg
jb
sbb
xchg
inc
jge
xor
jbe
scas
les
int
rcll
leave
dec
lods
xor
call
cmpsl
mov
stos
or
xor
mov
repz
cs
add
ss
add
mov
loop
cmc
jae
repnz
lock
daa
cmpsl
jp
sbb
and
cmp
stc
aas
xchg
arpl
nop
mov
testl
int
mov
testb
mov
cmp
ret
xor
jbe
mov
sub
mov
or
rorl
out
xchg
add
pop
rcl
loop
cltd
cltd
jns
fwait
popf
repz
jo
ret
xchg
jg
ds
scas
cltd
into
cs
mov
aas
iret
test
jo
fstpl
mov
push
mov
inc
pop
imul
and
push
stos
cwtl
cli
mov
cmp
insb
orl
mov
loopne
add
repnz
push
lfs
loop
add
cmpsl
fninit
cld
cmc
and
cmpb
insb
inc
mov
leave
add
push
xchg
lods
andl
mov
shll
movsl
inc
rep
push
fldt
test
mov
loope
pop
notb
jno
mov
jae
loopne
stos
cltd
adc
xor
push
cmc
fistpl
outsb
enter
mov
mov
inc
mul
jle
mov
fstl
mov
dec
lock
add
and
fs
dec
ret
xchg
adc
pop
mov
icebp
or
mov
jnp
fsubrl
dec
mov
adc
cmpb
push
lret
inc
dec
push
repz
mov
loope
shrl
stos
push
imul
mov
add
inc
inc
mov
in
xchg
cmp
pop
xchg
jnp
mov
shlb
incl
xchg
add
idiv
cmp
xor
dec
cmp
add
mov
cmp
inc
dec
mov
push
xchg
or
sub
stos
xlat
movsb
lods
xchg
stc
xlat
negl
sbbb
inc
xor
stos
push
int
js
test
jmp
sbb
cmc
jnp
and
jg
dec
mov
add
sbb
mov
insb
adc
sub
mov
or
xchg
sbb
clc
sbb
pop
cmc
cmpb
int3
enter
sub
aaa
push
test
xor
cwtl
pusha
inc
push
js
inc
dec
into
push
cltd
xlat
cmp
fidivrs
inc
inc
lahf
in
dec
inc
out
popa
or
mov
dec
lret
push
mov
dec
pop
mov
push
orb
das
ss
cld
push
or
es
fs
push
jb
sahf
mov
jmp
ret
es
mov
in
hlt
or
mov
movsl
aaa
jae
loop
and
aaa
inc
jns
mov
insb
pop
pop
notb
adc
push
jb
dec
add
clc
scas
jnp
out
jae
jnp
mov
cmp
fadds
push
sbb
fisttpll
in
mov
inc
xchg
sar
outsl
sbb
xchg
clc
negb
sbb
mov
jg
aaa
stos
fisttpl
push
gs
jecxz
dec
mov
xchg
pushl
outsb
xchg
test
mov
xchg
jno
xor
movsb
lods
ss
push
stos
mov
mov
pop
add
adc
xchg
lret
ss
sub
in
mov
adc
lret
outsb
fildl
fsubl
xchg
andb
pop
jmp
and
repnz
out
sbb
fisubl
adc
shll
or
rcr
xchg
add
sub
mov
jb
adc
int3
cwtl
iret
pushf
testl
std
cmpsb
int
cmp
push
jle
int3
cmpsl
test
fldenv
hlt
hlt
inc
or
and
push
aad
call
int3
inc
inc
add
sbb
or
enter
push
pop
pop
repnz
outsb
cmc
sub
sbb
nop
push
jae
lret
sub
and
add
xchg
hlt
roll
pusha
xchg
inc
mov
mov
fwait
es
arpl
xchg
mov
cmp
cmp
cmpl
mov
adc
sti
mov
push
jns
aaa
jmp
lret
xchg
jge
mov
cli
js
xlat
xchg
xor
dec
push
pop
dec
dec
cmp
or
pop
ds
insb
cmpb
mov
das
mov
and
or
mov
xor
adc
cld
pop
aas
enter
fildl
xchg
and
std
mov
out
gs
imul
mov
sub
add
popa
into
enter
dec
test
jae
xchg
pop
rolb
jbe
mov
and
rorb
loopne
popa
or
jne
xor
push
ss
and
ja
ja
xchg
rclb
jo
movsb
push
push
dec
jo
daa
pop
ret
in
pop
daa
aad
frstor
xor
add
aaa
or
cmp
shl
scas
iret
clc
in
jne
leave
add
sub
shl
pop
insl
data16
dec
jb
idivl
mov
mov
out
je
loop
hlt
xchg
mov
mov
adc
xor
ret
sub
jbe
lar
shlb
sbb
or
xor
lcall
dec
mov
pop
stc
and
pop
dec
aaa
sarb
push
dec
xor
into
jb
and
mov
xchg
dec
dec
jl
call
xchg
pusha
imul
xor
mov
mov
sub
xor
insl
xchg
bound
lret
ret
cmpsl
cld
sarb
repnz
sub
sub
mov
pop
sti
push
and
cwtl
bound
cs
insl
cli
imul
sti
sbb
test
das
inc
pop
jo
hlt
outsl
out
call
aas
push
test
test
ljmp
pop
dec
js
popa
xor
mov
enter
xchg
mov
arpl
mov
hlt
or
jmp
outsl
shlb
mov
fadd
lods
mov
rolb
in
adc
adc
ret
jnp
out
sub
sbb
push
test
mov
popf
dec
add
mov
mov
dec
iret
fisubs
clc
cmp
sbbb
out
or
jno
add
mov
sbb
adc
js
test
and
add
loope
cwtl
test
lods
in
add
mov
sub
jae
fxch
cmc
sbb
roll
and
push
cmp
lods
int3
dec
movsl
mov
mov
rcrl
out
jo
icebp
jbe
pop
jp
cwtl
ret
filds
stc
movsb
fimuls
dec
arpl
lods
adc
mov
les
mov
fwait
mov
adc
fldt
xor
or
out
or
dec
cmc
mov
and
test
test
cmc
push
adc
mov
aam
loop
je
pop
xlat
data16
fmuls
jle
jns
aam
push
ret
inc
pushf
xlat
test
xchg
sub
sbb
jnp
pop
inc
cmp
std
shlb
cmp
inc
jbe
jge
mov
jo
and
dec
add
fdivl
dec
in
add
lock
pop
dec
cs
lahf
xor
mov
or
stc
cmp
insb
pushf
cmp
add
call
hlt
pushf
xor
pop
push
fistpll
inc
std
xlat
lods
add
push
cmp
loopne
inc
sahf
pushl
dec
dec
mov
sbb
nop
mov
xchg
pushf
das
int3
push
into
bound
lock
divl
or
andl
lock
jg
xlat
mov
and
mov
or
pop
stos
sub
imul
mov
repz
xchg
jns
push
jge
aaa
inc
mov
pop
cpuid
inc
pop
cs
mov
fwait
pop
fsubr
adc
push
pop
inc
mov
jmp
dec
jnp
add
fidivl
jns
pop
dec
dec
jno
pop
push
sti
mov
mov
inc
jb
jmp
inc
adc
lahf
jecxz
push
inc
jae
xorl
dec
sbb
nop
fistpl
hlt
lcall
pop
mov
in
test
ja
fs
stc
sbb
xorl
aaa
cmp
xor
cmp
xchg
mov
orl
mov
xor
jmp
xchg
imul
xor
or
std
pusha
ret
sbb
fadds
popf
add
xor
lods
mov
and
mov
fsubs
out
sbb
mov
bnd
jo
dec
push
ficomps
addb
lret
pop
adc
adc
imul
xchg
in
mov
sbb
nop
mov
iret
into
rolb
movsb
aaa
mov
adc
mov
add
mov
lods
ficoml
xchg
insb
sub
mov
jne
scas
mov
popf
pop
sub
xlat
sahf
mov
cwtl
fwait
jl
lods
push
and
mov
mov
pop
pop
xor
mov
std
inc
cld
jmp
pop
rcrl
rol
dec
out
jnp
mov
and
gs
or
fldenv
cmovle
sub
leave
mov
out
push
mov
add
clc
xchg
push
das
out
inc
adc
aad
push
sbb
mov
out
mov
les
dec
in
or
scas
pop
sub
mov
mov
ret
xorl
pushf
int
pop
jns
add
daa
shl
mov
lock
add
pushf
adc
mov
xchg
mov
xchg
fisubrs
stos
sarl
aam
dec
push
rorl
or
test
xchg
mov
sub
mov
pop
daa
or
add
test
addr16
imul
lods
inc
popf
in
outsl
int
out
lods
sub
ret
push
cmp
mov
dec
sbb
push
insl
cmp
mov
push
cmp
int
les
ss
adc
mov
xor
sti
out
and
cmp
leave
sahf
mov
hlt
mov
jne
xchg
or
mov
test
xchg
and
lret
rol
insb
call
lods
mov
dec
ret
push
ror
dec
pusha
sub
cs
adc
jl
push
xor
push
jge
jnp
add
cmc
gs
mov
aaa
movsb
sti
mov
sbb
arpl
out
andl
cwtl
jp
addr16
sub
sarl
subl
je
test
hlt
jae
sub
shlb
xor
fwait
aas
cmp
pop
es
ja
mov
hlt
cwtl
dec
cmp
push
lea
mov
or
mov
mov
ror
adc
int3
in
fwait
xchg
push
lret
and
popf
andb
xor
repz
sub
mov
dec
leave
sbb
sbb
in
xor
mov
mov
mov
xchg
out
ds
push
adc
xor
rolb
out
pop
sub
clc
cmpsl
jae
ret
setp
mov
sarl
imul
lods
daa
in
xchg
adc
lea
add
ficoms
nop
cmp
stc
mov
mov
mov
xor
sarb
inc
mov
inc
sub
in
and
mov
mov
mov
inc
add
jnp
cmp
and
notb
ret
in
sbb
sub
and
jb
lret
inc
popf
and
mov
xor
pop
les
sub
outsl
add
sub
add
pop
hlt
jle
inc
lea
insb
push
and
push
stos
pushf
push
std
push
jne
pusha
sbb
icebp
je
popf
dec
loop
out
push
stos
outsb
jb
xor
pop
incb
push
bswap
roll
xor
aaa
inc
loop
add
jno
jg
push
cmp
int3
das
decb
leave
add
scas
std
add
sub
sbb
jmp
test
dec
stc
cmpsl
jb
stos
cs
mov
stos
repz
sbb
jmp
lds
dec
rolb
sahf
cli
or
cli
sbb
pop
popa
pop
loopne
dec
insl
iret
adc
hlt
pop
inc
or
dec
jb
inc
test
and
pop
fimuls
pop
sahf
lcall
bnd
sub
xchg
fwait
mov
dec
add
incb
adc
aaa
xchg
push
fdivs
push
xor
adc
mov
mov
fadds
test
sbb
scas
jne
popf
xchg
xor
das
in
cld
imul
push
pop
daa
mov
pcmpeqb
sarb
aas
xor
es
outsl
pop
enter
jne
add
lds
adc
mov
jmp
lret
cmp
int3
mov
stos
mov
dec
dec
cmp
mov
ss
mov
sbb
ja
mov
inc
and
add
je
pop
or
fisttps
jns
outsl
cmp
pop
ret
out
jo
xchg
add
sub
imul
xchg
or
hlt
adc
leave
and
sahf
orl
push
mov
adc
inc
mov
lret
push
cs
out
push
rcll
idivb
pushl
dec
push
subb
inc
std
sbb
jnp
sub
addl
dec
lds
gs
mov
icebp
mov
stos
ret
or
sahf
inc
mov
and
inc
sti
dec
push
and
imul
loop
mov
stos
adc
in
mov
arpl
and
xor
push
xor
mov
jb
pushf
fbstp
push
in
and
les
push
icebp
int
push
cmp
xchg
xchg
subb
mov
jo
dec
int
add
jne
or
js
or
sti
jg
sub
jecxz
mov
iret
ror
cwtl
jae
les
mov
int
loopne
jp
pop
std
out
jp
or
movsl
out
dec
mov
or
test
fstpl
cmc
jbe
inc
es
and
dec
in
or
in
add
fdivrs
popa
jno
call
or
inc
pop
insl
mov
popf
jno
sub
cmp
loope
push
shrb
popa
mov
inc
jo
push
cmpsl
out
mov
sub
test
ficompl
sbbl
stc
imul
dec
cmp
andl
adc
pop
cmp
xchg
lds
mov
pop
in
rorb
ds
cmpsl
into
out
and
pop
mov
pop
push
mov
insl
xchg
xchg
clc
cmp
aas
cmp
hlt
inc
adc
sub
cmp
outsl
mov
inc
out
test
repnz
loope
leave
scas
jae
in
pop
ja
inc
xchg
mov
enter
in
test
pop
dec
ja
cld
outsb
adc
adc
xchg
inc
es
mov
insl
test
and
dec
and
nop
mov
mov
sub
lods
cli
out
lea
cmp
mov
bound
mov
inc
jb
pop
divl
iret
jecxz
test
ss
iret
xor
int3
or
dec
subl
adc
call
cmp
dec
xchg
push
dec
mov
xor
add
mov
cwtl
jns
pop
or
lret
lock
inc
pop
xor
scas
lret
jge
gs
push
jmp
xchg
or
dec
jbe
out
or
sbb
aaa
sub
movsb
outsl
push
lcall
dec
sub
pushl
dec
in
xor
jmp
int3
pop
cmp
mov
cli
xchg
sbb
cld
adc
adc
stos
push
fists
loop
fs
xchg
push
testl
sub
and
push
add
mov
dec
adc
outsl
pop
dec
mov
js
in
xor
lret
negb
add
cmp
arpl
push
dec
das
xchg
je
push
xchg
aas
es
xchg
daa
sar
adcb
in
jle
inc
xchg
cs
mov
out
sahf
and
mov
filds
push
mov
fimull
lock
xchg
test
out
adc
ljmp
aaa
aad
nop
pop
cmpb
mov
repz
int
or
jecxz
or
cmp
ret
mov
repnz
lret
jo
add
pop
pop
popf
mov
mov
popa
adc
lds
mov
mov
iret
mov
mov
outsl
lods
js
push
xchg
add
sub
rcl
inc
adc
ror
adc
dec
scas
push
mov
les
xor
cmp
in
fs
xchg
data16
in
pop
lds
mov
icebp
ds
jae
gs
mov
or
jg
stc
mov
mov
sbb
mov
pop
xchg
mov
inc
jecxz
pop
in
insb
jecxz
cmpb
fldcw
sbb
clc
rclb
push
and
int
ficompl
rorl
mov
iret
mov
mov
push
fistl
pushf
add
cmpsb
inc
add
sbb
cmpsb
lods
xchg
lods
test
nop
mov
sub
enter
cmp
int3
mov
mov
pop
pop
mov
call
inc
out
mov
imul
bound
aam
mov
in
sarl
dec
pop
scas
cmp
lret
test
and
dec
dec
jp
jb
xor
js
pop
mov
dec
mov
push
mov
mov
mov
or
dec
xchg
leave
scas
and
lds
aaa
jae
push
xchg
outsb
pushf
push
fldenv
xor
inc
lret
daa
js
nop
scas
and
and
das
dec
mov
out
cmpsl
xchg
clc
xor
scas
pop
xchg
push
cli
cmpsl
int3
idiv
adc
decl
add
outsl
movsl
cmp
test
sub
xchg
sbb
ret
push
xor
fidivl
imul
mov
dec
pop
jp
fs
mov
xorl
pop
cmp
ret
stc
lods
fimuls
fmul
push
test
cli
jnp
fs
dec
mov
je
jmp
clc
lcall
call
mov
push
sub
rcll
jge
and
movsb
pop
insl
push
pop
shll
mov
fwait
mov
das
jle
ficomps
daa
push
push
pop
xchg
js
mov
pop
je
mov
push
mov
sub
jmp
sbb
mov
jnp
shl
out
inc
mov
imul
xchg
lea
mov
es
sub
stos
adc
pop
jnp
stos
jno
or
inc
adc
lahf
cmp
insl
insb
sub
dec
daa
outsl
inc
jb
xor
adc
push
add
add
mov
xchg
hlt
push
pop
mov
out
fdivs
sub
sub
pop
clc
cmp
cmpsl
pop
fwait
dec
push
dec
mov
xor
adc
cltd
jp
stc
movsl
cli
stos
xchg
lcall
pop
mov
cmpsl
pop
and
push
sub
push
push
push
and
outsb
sub
mov
inc
out
mov
cmp
xchg
sbb
fistpl
ja
xchg
pop
xchg
or
jne
lds
sub
pop
push
ficoml
or
pop
ljmp
test
fwait
in
rorb
inc
and
inc
add
mov
pop
push
or
enter
cmp
fildll
mov
popa
fs
ds
loop
mov
fisttps
and
cld
inc
xchg
lret
sti
fwait
out
loop
inc
sub
aad
push
lock
cmp
shlb
sahf
sarl
stos
aas
repnz
fmul
pop
loope
mov
je
das
jecxz
test
jle
jp
sbb
push
adc
jmp
js
sbb
jnp
aas
jo
into
mov
push
loopne
pusha
dec
jl
movsb
scas
adc
sub
in
sub
mov
add
scas
cmp
repnz
shll
pop
xchg
cld
cmpsl
icebp
mov
xchg
lock
fldt
jbe
daa
js
mov
lahf
sub
xor
icebp
int3
xchg
push
xchg
push
movsb
mov
pop
push
adc
sahf
dec
jnp
mov
xor
cmp
jo
iret
scas
jecxz
bound
inc
dec
mov
mov
pop
ds
mov
loop
sbb
into
mov
idivb
roll
rcl
scas
inc
and
cmpsb
fisubl
repz
inc
popf
xor
xor
stc
pop
push
pop
ljmp
sbb
mov
cmp
mov
mov
lahf
mov
xor
loope
add
in
jns
out
cwtl
lds
lods
add
hlt
imul
scas
lock
div
in
sbbb
dec
xchg
mov
dec
add
xlat
out
popa
pop
pop
dec
cmpsl
dec
dec
mov
inc
loop
test
mov
push
icebp
leave
int
cwtl
xchg
addb
ja
ret
sbb
int
test
fs
movb
mov
sub
push
and
add
cmpsl
xor
sti
mov
mul
pop
fists
cmpsb
push
lcall
jnp
lea
daa
ds
dec
xchg
xlat
mov
push
mov
adc
inc
dec
mov
mov
or
pop
scas
adc
mov
mov
and
push
lahf
mov
aam
lds
lret
sub
push
ret
jne
mov
stos
jnp
mov
out
jb
rcrb
adc
enter
mov
sbb
pop
adc
push
shrl
stos
and
pop
jne
in
inc
or
sti
push
push
fdivl
adc
cld
popf
add
out
push
xor
aam
or
mov
clc
sub
addr16
imulb
mov
negb
dec
xchg
xor
sbb
cmp
mov
rorb
imul
cmpsl
pusha
mov
bound
stos
push
mov
jp
sub
mov
mov
orb
mov
xchg
dec
xchg
cmp
lret
inc
cmc
ret
scas
push
and
jne
mov
lahf
ficomps
les
sahf
pusha
stos
incb
add
or
rorb
mov
pop
push
jno
jo
repnz
out
jno
adc
js
push
cmp
xchg
cmp
pop
out
cmp
pop
addl
orb
ja
dec
int3
mov
mov
stos
rcl
sbb
dec
and
incl
imul
dec
push
pop
push
or
mov
ret
xchg
or
negl
inc
push
jmp
lcall
add
dec
addr16
std
jae
sub
and
nop
das
sbb
adc
lea
cmp
mov
jne
ficomps
rorb
or
lods
pusha
add
and
call
inc
jecxz
out
cmpsb
stos
mov
les
jg
xor
mov
sahf
iret
dec
jl
mov
and
push
loop
mov
xor
pop
add
adc
mov
mov
xor
and
pop
mov
rcl
jae
test
addr16
aam
cmp
lea
arpl
lds
test
or
nop
imul
insl
stos
xlat
push
cmp
mov
xchg
repnz
adc
xor
pop
mulb
xchg
push
push
mov
out
xor
cmp
adc
ja
mov
xchg
mov
std
sti
or
imul
shll
dec
nop
cld
mov
divl
lea
sarb
and
ret
xor
dec
divb
in
or
int3
aas
add
lret
lret
jle
in
mov
adc
inc
xchg
std
loopne
out
jne
fcompl
fstl
scas
cmp
in
jmp
repnz
ljmp
aad
cmpsb
push
mov
in
mov
inc
dec
fidivrs
xor
inc
scas
mov
xor
xchg
and
jecxz
add
into
mov
add
shlb
xchg
sti
or
ds
lahf
jnp
fistps
ss
les
cmp
into
xchg
jmp
cmc
and
and
sub
stos
leave
loopne
ret
sub
out
sub
mov
cld
in
movsl
nop
push
mov
add
nop
cmp
repz
test
sub
adc
jb
pop
inc
or
pop
mov
jl
xchg
pop
mov
ja
xor
sahf
scas
imul
je
inc
clc
or
loopne
pop
xor
sarl
ljmp
pop
add
ljmp
fsubr
call
mov
mov
out
cmc
cmp
mov
fimuls
mov
push
push
inc
xchg
jle
test
insb
imul
jns
xlat
aad
mov
std
cmp
ret
rolb
enter
das
mov
in
inc
xor
loop
add
mov
mov
sub
adc
addr16
jne
or
jl
nop
andl
pop
add
push
adc
mov
rcll
or
mov
push
push
inc
cli
ss
dec
add
lret
ret
shll
movsl
adc
cmp
and
mov
fstps
adc
jno
rcrb
leave
pop
repnz
lahf
call
imulb
jmp
push
or
jbe
jbe
int3
out
or
call
sub
mov
push
jns
arpl
iret
lcall
sbb
mov
or
push
xor
jge
mov
jp
push
mov
pop
fidivs
or
inc
inc
test
inc
sbb
add
popa
push
xor
frstor
jae
xor
pop
and
sbb
xchg
test
jle
mov
push
jle
or
lods
lods
jecxz
dec
mov
in
lds
in
out
fildll
jbe
es
pop
hlt
ret
scas
stos
jecxz
out
int
out
adc
mov
inc
ds
sbb
incl
imulb
pop
push
ret
xchg
iret
cli
les
shrl
faddl
inc
pusha
das
mov
mov
cs
push
or
jne
imul
push
dec
icebp
cmpsb
add
xor
lods
in
sbb
ljmp
roll
xor
pop
repnz
inc
inc
push
arpl
loopne
mov
aad
push
push
call
push
scas
imul
jle
and
ror
lea
jnp
inc
inc
sar
stos
nop
test
adc
mov
cmpsl
out
leave
mov
xor
and
inc
push
popf
adc
push
mov
insb
outsb
enter
movl
push
mov
dec
xchg
inc
jns
out
push
aas
mov
inc
test
fisttpl
mov
jnp
jns
push
xor
imul
and
ds
push
add
in
push
sub
mov
lods
jl
sub
fsub
mov
fmul
scas
adc
cli
adc
sub
in
subb
sub
push
sub
push
cmp
pop
mov
and
mov
jae
shrl
in
mov
subl
imull
fbld
rolb
mov
add
jnp
pop
out
sbb
insl
xor
push
sub
xor
ss
mov
popa
out
pushf
adc
push
push
je
add
ljmp
push
jns
xchg
repz
sti
out
inc
in
or
xchg
cmp
jnp
pop
data16
sarl
xchg
jmp
into
cltd
movsb
mov
ss
shr
shrb
call
push
sbb
mov
mov
mov
test
ret
inc
sub
fs
andb
jns
out
jno
cmpl
imul
insb
sub
das
jne
fisttps
daa
into
xor
cmpb
out
cmp
insl
mov
mov
inc
scas
cmp
test
cli
imul
aas
ret
out
js
xchg
add
cmp
fwait
daa
xor
outsb
movsb
mov
repnz
and
roll
cmp
mov
imul
lea
mov
push
leave
lret
push
dec
xor
rclb
sub
incl
mov
jle
loop
and
mov
int
les
inc
cld
rcl
cmp
jne
pop
adc
xchg
cmp
cmp
fs
and
mov
or
push
adc
add
lahf
test
scas
inc
loop
cmpsl
adc
push
les
aam
gs
inc
loopne
lea
and
xchg
arpl
add
inc
mov
clc
lods
lret
popf
push
in
ror
push
jmp
lock
jno
push
mov
addr16
ret
loope
sub
cmp
and
mov
cmp
jecxz
jle
adcl
mov
mov
and
inc
movsl
add
xchg
int
inc
cmp
aad
bound
pusha
and
rcrb
jp
out
scas
sbb
mov
popa
push
popa
sbb
fnstenv
pop
lods
push
aad
shr
sahf
push
dec
inc
jo
add
jo
xor
and
popa
pusha
stos
dec
mov
xor
mov
out
cltd
jo
out
jg
add
testl
mov
cld
and
pop
mov
dec
or
ja
into
clc
sbb
sbb
push
cmovnp
sahf
ja
dec
pop
mov
mov
xchg
ret
hlt
jmp
cmp
cltd
sbb
xchg
cmp
add
fcmovnbe
pusha
repz
xlat
nop
push
pop
mov
inc
popa
or
sub
aaa
int3
ja
mov
push
cmp
mov
imull
push
out
in
call
xor
insb
insb
cmc
dec
ret
leave
pop
mov
push
fcmovb
cmp
dec
popf
das
jp
inc
sbb
popf
sti
gs
cmp
je
lahf
rcrl
cmpb
andl
aad
nop
jmp
dec
push
pop
scas
fldenv
aad
aad
add
cmpsb
insl
iret
jmp
inc
jns
stos
addr16
mov
fucom
sbbl
xor
cmp
inc
iret
mov
mov
xchg
sub
aas
gs
div
gs
adc
inc
xchg
jmp
adc
xchg
jb
addb
dec
xchg
adc
mov
push
fwait
sub
movsb
inc
jg
add
and
jae
cs
push
ds
mov
jno
cs
int3
hlt
movsb
jl
cld
sarl
into
jl
cli
push
int
xchg
dec
outsb
push
not
cmp
mov
dec
cmp
dec
in
cmpsl
cwtl
adc
fldt
or
fisubs
xorl
subl
cld
and
inc
xchg
adc
add
sub
add
je
mov
dec
and
mov
dec
repnz
out
scas
or
inc
push
xchg
or
sbbb
sti
mov
fisubrl
popa
inc
push
and
outsl
icebp
data16
sbb
cli
pop
sbb
pop
ja
call
test
mov
ss
rcrl
jno
or
mov
clc
lret
scas
sub
cmp
call
rcrb
inc
pop
ffreep
jbe
adc
fs
lahf
mov
sbb
jmp
xchg
sub
stos
gs
sbb
sub
push
sub
inc
iret
jae
cs
mov
pop
sub
cld
cmpsl
sbb
xchg
add
add
bound
scas
and
loopne
adc
and
or
jg
imul
or
or
pop
and
dec
jle
fimull
xor
lret
xchg
fwait
sub
ds
popa
inc
pop
je
and
aad
push
dec
inc
es
inc
jno
push
xchg
sub
mov
dec
shrl
and
inc
fisttpll
inc
adc
pop
ret
test
cmc
fsubrl
subb
fmuls
mov
mov
ret
adc
fstpt
repnz
sbb
not
test
in
inc
imul
aam
jns
ja
pop
pminub
mov
xlat
and
pop
js
lods
test
pop
pop
mov
movl
push
aaa
faddl
lock
mov
lret
dec
out
loopne
sub
icebp
dec
mov
imull
into
add
pop
cmp
adc
add
add
test
outsb
jo
clc
dec
lds
pop
lea
and
adc
cmc
lret
mov
lea
mov
lret
push
out
icebp
sti
aaa
mov
fmuls
dec
mov
int3
out
out
out
orb
push
push
mov
rol
stc
push
cmp
mov
pop
mov
mov
cltd
mov
cld
or
and
mov
stos
add
and
xchg
and
pop
repz
ss
and
mov
cltd
icebp
gs
jae
sbb
jge
sahf
popa
stos
imul
push
jecxz
clc
adc
sti
loop
insb
pop
dec
inc
lahf
fnsave
in
mov
les
or
test
and
xor
pusha
scas
sahf
hlt
mov
push
movsb
icebp
mov
int3
mov
sub
push
pop
mov
mov
jge
jb
jecxz
mov
out
out
cltd
cs
ret
or
fwait
bound
ljmp
and
mov
or
adc
cwtl
add
add
dec
pushf
pusha
mov
out
mov
daa
or
shrl
std
shl
xchg
jae
test
pop
or
mov
or
pop
xchg
add
cmp
inc
mov
cs
sub
pop
sub
andb
test
pushf
xchg
jno
adc
dec
push
ja
adc
adc
int
jle
stc
and
and
dec
lods
mov
cli
mov
mov
push
inc
ret
pop
insb
pushf
adc
scas
dec
sbb
cmp
jmp
xor
cwtl
push
push
push
lds
ljmp
or
mov
inc
mov
or
pop
icebp
xchg
jle
xchg
cmp
aad
adcb
ljmp
jg
add
aaa
rol
js
adc
and
das
stc
pop
or
lcall
sbb
pop
xchg
movsb
push
pop
add
repnz
xor
inc
scas
fidivl
push
lret
xchg
push
mov
xor
push
testl
inc
push
stos
in
cmp
mov
xlat
enter
xchg
scas
ja
cmp
xor
lcall
popa
dec
enter
fcmovnbe
jmp
jl
pop
push
insb
icebp
cs
ds
jbe
adc
mov
xor
nop
sub
sbb
stc
or
xchg
pushf
mov
jle
or
xchg
push
into
cld
les
xchg
aam
arpl
std
fs
dec
and
cmpsb
mov
and
sub
cmp
test
stc
rclb
sbb
notb
mov
xchg
mov
lcall
lea
shl
mov
inc
add
jl
mov
rcr
xchg
and
sub
adc
mov
rclb
sub
lds
push
xor
gs
xor
push
popl
mov
dec
outsl
data16
ja
test
sub
dec
enter
inc
pop
test
fsub
out
mov
and
xor
or
pop
dec
les
adc
jae
or
pop
push
imul
rorb
push
jb
jnp
js
sub
jmp
sub
cwtl
cmp
xor
mov
stos
sbb
mov
add
mov
test
mov
pop
push
pusha
mov
mov
push
mov
pop
pop
mov
stos
lods
sbb
aad
stos
mov
or
aad
lcall
push
movsb
sti
cmp
ljmp
xchg
aaa
loopne
loop
jecxz
xor
inc
ret
jmpw
in
aad
pop
jp
xchg
fidivl
std
push
data16
int3
lret
xor
loop
in
jae
sbb
mov
fistps
lahf
outsl
in
sbb
sbb
sub
lret
sarl
lret
inc
or
aad
imul
rol
and
icebp
mov
sbb
outsl
rcll
jno
imul
and
hlt
jmp
push
inc
or
stc
imul
mov
cmpsl
add
cld
mov
cli
je
jmp
and
dec
dec
push
imul
dec
sub
lahf
add
xchg
repnz
std
push
push
push
andb
shl
loope
mov
jg
mov
sahf
add
sbb
push
in
in
sub
shlb
push
je
mov
push
pop
stc
lds
lret
mov
lcall
aam
pushf
imul
jg
dec
rorb
pop
xor
pop
push
test
imul
test
sbb
push
jl
pop
inc
test
mov
mov
lods
xchg
mov
fmull
jecxz
add
cmp
inc
call
mov
inc
xchg
insl
add
pop
mov
sub
push
nop
push
adc
mov
sahf
push
arpl
scas
and
pop
stc
lods
pop
and
push
jo
xchg
and
clc
pop
dec
dec
or
push
pop
pop
push
push
das
adcl
jmp
push
pop
ret
loope
pop
popf
add
lret
dec
int3
lds
mov
pushf
mov
outsl
and
cvtdq2ps
lods
cli
cld
and
xor
lahf
cmp
lret
add
mov
das
lods
fs
xchg
outsl
in
lock
sahf
xorb
insb
jp
fwait
xor
xchg
repnz
bnd
cmp
sbb
push
fwait
inc
pop
cli
dec
loope
test
jnp
insl
in
lea
and
outsl
fadds
mov
sbb
mov
mov
rol
mov
xlat
xchg
inc
out
iret
mov
cltd
sub
mov
or
repz
sbb
push
push
xchg
xchg
lock
xchg
je
xor
sbb
mov
and
xorl
push
inc
cmc
test
pop
or
xchg
ds
icebp
pop
xor
lods
jb
dec
das
loopne
or
out
ja
sbb
jmp
xor
enter
adc
adc
dec
out
pop
cmp
stos
in
pop
mov
mov
sahf
fidivrl
test
and
push
shlb
js
push
xchg
dec
push
dec
mov
fstp
cmc
das
and
pop
pop
test
std
outsl
xor
cmp
in
lcall
adc
leave
fsubrs
push
inc
scas
lahf
jmp
adc
xor
inc
cmp
xor
imulb
and
or
xchg
push
in
mov
mov
adcl
push
push
jne
pop
pop
mov
addr16
js
inc
movsb
outsl
mov
sub
clc
mov
push
push
lret
mov
adc
jnp
push
xchg
push
or
jne
lock
sub
scas
in
ficoms
mov
dec
add
pop
incb
pop
sub
jp
adc
sahf
or
enter
mov
nop
mov
scas
arpl
scas
push
nop
pushf
mov
adcb
out
pop
out
inc
arpl
rorl
pusha
xchg
aad
shrb
jmp
cmpsb
dec
pusha
and
pop
mov
sahf
mov
pop
sahf
repnz
scas
mov
jbe
lcall
pop
mov
adc
mov
add
fucomip
jno
daa
es
inc
fiaddl
lret
repnz
call
call
addr16
shrb
jge
inc
mov
pop
mov
sub
ret
push
sti
paddsb
pop
dec
lcall
jle
push
iret
iret
imul
das
push
sarl
xor
push
jno
adc
xor
test
clc
dec
jecxz
scas
and
xchg
fs
cwtl
inc
mov
push
fsubrs
fs
xchg
jmp
or
adc
sub
jne
push
lahf
call
mov
sub
lock
je
cmp
mov
jb
mov
sbbl
cmp
inc
mov
dec
push
xor
faddl
lret
iret
cwtl
lods
sbb
cli
gs
int3
xor
rcrl
sbb
mov
mov
mov
stc
repz
inc
mov
mov
lret
fcompl
sub
test
xor
sbb
loope
sub
lea
cmp
imul
shlb
xchg
xor
or
in
je
xlat
push
call
xchg
jae
hlt
mov
pop
adc
dec
xchg
mov
dec
pop
scas
dec
hlt
sbb
fs
jbe
xchg
jno
mov
pop
ret
lret
xchg
data16
or
movsb
xor
daa
dec
orb
add
loope
mov
ljmp
in
mov
and
xchg
cmp
push
cmp
lret
sarb
loopne
scas
ja
sub
out
cmp
mov
stos
pusha
daa
and
or
push
iret
popa
popf
inc
call
pop
lds
and
pop
lahf
fwait
cwtl
ds
pop
or
int3
xchg
scas
dec
push
mov
rorl
or
push
stc
leave
sub
inc
sub
mov
loope
mov
cwtl
xchg
arpl
mov
mov
pop
jb
sbb
in
mov
adc
mov
cmp
mov
dec
mov
nop
cmc
std
mov
sub
int
pop
iret
or
test
outsb
fidivrl
mov
and
icebp
scas
cli
ficompl
xchg
clc
mov
into
mov
mov
popa
mov
mov
push
push
or
rcrl
stc
cmp
cli
jae
pop
fistps
jb
jp
loopne
and
cmp
mov
cmpsl
jno
cmp
jo
cli
jmp
sub
jmp
lea
jecxz
or
xchg
icebp
lea
pusha
iret
cmpsl
jbe
aas
mov
xor
xor
or
adc
andb
cmp
loopne
mov
dec
in
fiadds
ljmp
fsubs
sub
jno
fisubrl
xlat
cmpsb
mov
adc
push
aam
add
pop
xchg
mov
sub
adc
rcrl
ss
das
in
int
mov
nop
push
cs
pushl
insb
and
mov
xor
pop
cs
or
shl
lods
ret
pop
xchg
mov
and
lcall
inc
insb
cltd
lods
shll
sub
jle
neg
jnp
mov
dec
lods
jmp
lahf
add
or
ss
gs
dec
movntq
or
andb
inc
inc
outsb
rcr
scas
lret
mov
fwait
jge
outsb
pop
in
test
dec
push
xchg
jg
mov
imul
cs
inc
xor
lock
insl
xchg
movsb
mov
mov
add
vphaddbw
dec
sbb
push
cmpsb
inc
stc
adc
mov
lret
push
cld
pop
je
cmp
xor
out
cmp
cmc
jp
dec
fisttpll
mov
xor
jg
or
cmp
dec
lret
int3
fistpll
pop
cmc
xchg
lret
dec
inc
popa
fisubl
sahf
jmp
lds
inc
mov
push
cmc
or
cli
mov
ljmp
scas
inc
add
mov
btc
and
adc
outsl
ret
loopne
sub
pop
mov
push
std
dec
jmp
cld
flds
sub
clc
fwait
cmp
push
and
dec
mov
or
out
ss
jg
stos
jle
cmp
dec
mov
dec
insl
fbstp
cwtl
idivl
cmpsl
mov
push
adc
push
mov
xchg
mov
xor
sti
xchg
adc
xor
sbb
ret
aaa
push
mov
cmp
aaa
scas
ljmp
sub
repnz
dec
push
dec
pop
cs
test
gs
push
movsl
xor
inc
faddp
enter
ja
mov
jb
adc
lods
nop
aas
cwtl
jnp
push
cmp
mov
dec
pop
enter
into
mov
push
test
mov
xchg
jmp
scas
ret
mov
jle
xchg
mov
xor
xor
idiv
adc
gs
out
xchg
sbb
add
mov
icebp
xchg
dec
mov
cld
fnsave
inc
adc
popa
hlt
cmp
movl
scas
xor
fiaddl
popa
sub
xlat
push
jmp
outsb
mov
xchg
or
addl
test
mov
icebp
jle
dec
sarl
pop
jns
dec
ljmp
stos
inc
push
jmp
mov
mov
xchg
orb
cmpsl
js
sub
mov
lret
repnz
pop
pop
aas
mov
insb
adc
enter
rolb
xchg
scas
mov
aaa
sub
xlat
dec
iret
testl
mov
or
jbe
sbb
loope
es
daa
add
cmp
xorb
lret
les
xor
imul
lods
mov
addl
scas
or
pop
xor
test
ds
cmp
xor
lock
addr16
xor
mov
and
je
in
and
ja
xchg
ret
rcrl
push
xor
ret
outsb
mov
test
jne
idivb
pop
jo,pn
sub
sbb
dec
xchg
fwait
adc
sub
or
pop
iret
pop
jg
gs
push
add
loope
popa
dec
rcll
pop
pop
push
fidivs
rolb
add
adc
adc
and
mov
stos
sahf
leave
shlb
lahf
pop
mov
mov
in
call
sahf
mov
bound
jae
jmp
icebp
add
jbe
adc
push
and
insb
ss
or
add
movsl
loopne
jbe
xor
jne
ds
js
dec
push
insl
imul
icebp
inc
out
cwtl
sub
push
xchg
cmp
iret
nop
ret
inc
jns
push
pop
mov
data16
add
add
cltd
cmpsb
add
sti
outsb
test
cs
dec
jmp
and
adc
or
sahf
cmp
nop
fcmovbe
js
cli
fistpl
in
push
mov
mov
popa
nop
sbb
daa
insb
xor
or
std
lods
cltd
push
ret
jnp
jle
pop
xchg
outsb
cmp
es
mov
fsub
out
leave
mov
mov
inc
inc
mov
mov
das
mov
or
jo
sub
shl
xchg
psubb
inc
ljmp
gs
aas
or
into
inc
push
add
sub
xchg
jle
sahf
test
ljmp
aam
mov
push
jmp
lea
out
shll
mov
cld
jae
gs
jns
push
lds
rorb
rorl
sbb
xchg
je
fisubs
scas
push
daa
or
lods
push
xor
and
mov
pop
mov
xchg
adc
sbbl
jae
lods
cmpsb
dec
icebp
and
inc
xchg
sbb
imul
in
sub
pop
sbb
push
popf
or
mov
or
aas
xchg
cmpsb
push
inc
nop
lods
jge
outsb
lret
jp
rcrl
test
das
pop
cmc
test
inc
push
sub
mov
sbb
jle
loopne
dec
jo
adc
cs
call
xlat
pop
in
fidivs
fimull
push
push
cmc
jge
lret
jle
jecxz
call
adc
incl
in
jb
push
push
xor
outsl
ja
out
dec
cmp
lods
jecxz
dec
xchg
stc
fsts
xor
cmp
pop
cld
fldl
or
and
sbb
adc
adc
pop
mov
mov
cmp
pop
movsb
dec
mov
sbb
xchg
cmpsl
add
xchg
or
inc
cmpsl
jmp
or
or
fimull
and
cli
sub
add
scas
pop
lods
jae
xchg
sub
mov
lcall
iret
mov
loop
adc
mov
lcall
dec
jge
jae
cld
sbbb
push
xor
pop
lcall
leave
fsubs
in
mov
push
sahf
mov
add
adc
sbb
mov
xrelease
push
ficoml
mov
loop
mov
repz
das
sbb
push
inc
out
jnp
mov
ret
jae
jne
or
shll
push
aad
mov
hlt
out
hlt
imul
adc
fmuls
mov
mov
arpl
jmp
jge
push
not
stc
pushf
add
xlat
inc
inc
jp
pop
jae
push
sbb
aas
jo
pop
inc
xor
insb
sti
add
inc
adc
adc
lods
sbb
lds
addr16
fidivl
aaa
pop
add
cmp
jp
movsb
xchg
repz
pop
jo
mov
jle
jp
push
daa
or
aam
xor
cmp
daa
iret
cmpsl
mov
xor
pop
inc
call
push
rcrb
mov
mov
lahf
sbb
or
fistl
repnz
popf
xorl
lods
jp
movsl
jg
in
movsb
mul
push
push
adc
xchg
mov
xchg
pop
or
cld
pop
jmp
push
leave
xchg
scas
lds
stc
mov
fidivs
sbb
cmpsb
loopne
pushf
addr16
xor
sbb
movsb
sbb
jmp
mov
sti
lds
push
pop
or
mov
dec
or
movsl
cmpsl
loope
mov
mov
bound
insb
ror
fdivp
stos
dec
mov
jecxz
cmpsl
in
scas
add
out
jg
or
ret
mov
ds
mov
pusha
push
js
fdivl
or
fcmovbe
sbb
xor
sbb
cmpsb
hlt
push
xor
cs
loop
ret
into
cmp
ds
repz
lods
fdivrs
jne
sbb
aad
fstpl
dec
cld
pop
push
cli
add
cli
and
inc
cmp
ds
aaa
lret
sbb
or
loope
or
daa
add
insl
xchg
lods
xor
pop
inc
cbtw
push
lods
pop
out
fsub
fnstsw
cli
jo
mov
dec
push
shrl
adc
or
dec
call
mov
test
stos
jnp
sbb
lock
outsl
mov
and
scas
mov
mov
dec
lds
push
xlat
clc
loope
cld
mov
int3
imul
out
pop
inc
es
cli
mov
loop
aaa
cmpsl
mov
mov
mov
jns
adc
mov
divl
and
mov
popa
inc
imul
sbb
emms
and
mov
roll
dec
stc
adc
fdivl
pop
fldt
das
cmp
call
leave
cli
sbb
imul
out
cmp
mov
push
out
aaa
mov
cmc
pop
repz
xchg
scas
addr16
mov
lock
adc
and
dec
sbb
and
jmp
enter
mov
movsb
adc
jle
es
adc
test
repnz
sub
lret
add
int
cwtl
iret
mov
xchg
pop
testb
out
and
mov
or
mov
xlat
data16
inc
mov
mov
pop
lcall
push
fcoms
fistpll
mov
imul
xor
jb
fs
push
add
ret
lahf
aam
xchg
lahf
jg
pusha
test
sbb
pop
inc
sbb
cmpsb
pop
ret
aad
pop
jge
dec
or
mov
mov
inc
stc
pop
mov
xor
jne
fidivs
inc
jno
dec
lods
jb
into
inc
sbb
jp
and
sub
sub
xchg
subb
sub
pusha
mov
mov
mov
xchg
sub
dec
loopne
out
jecxz
push
cmp
mov
fiadds
mov
adc
shrb
orl
pop
or
movsb
dec
imul
cmp
jp
push
xchg
mov
and
pop
test
cld
aas
aad
fadds
stos
sub
js
mov
and
je
stc
sub
jle
xor
sahf
or
fists
and
jmp
or
jp
insb
push
int
mov
pop
insl
xor
int3
dec
fdivrl
mull
xor
push
or
test
sbb
and
sbb
aam
push
cmp
lds
xor
push
cmp
adcb
in
ror
push
addb
shrb
adc
shl
xor
mov
mov
loope
xor
xor
iret
push
inc
popaw
and
ja
cmpl
or
call
dec
out
lock
mov
fwait
jno
jmp
cs
sbb
enter
out
iret
mov
push
mov
sbb
mov
lret
sahf
jno
mov
mov
leave
xchg
jnp
sub
push
cs
or
mov
popf
adc
ss
adc
mov
mov
push
xchg
xchg
gs
jecxz
cmp
mov
mov
fimuls
jnp
inc
dec
pop
addr16
add
mov
sbb
jae
cmp
mov
adc
jne
inc
lock
popf
mov
cmp
lret
push
mov
test
call
lahf
xor
push
mov
mov
mov
scas
dec
ljmp
fld
lock
popf
shl
mov
inc
dec
pop
in
in
mov
ds
cmp
fiaddl
mov
mov
sbb
add
jle
insl
xor
mov
adc
aam
call
scas
cmp
mov
imul
dec
jne
test
daa
mov
cmp
or
and
lds
shll
pop
dec
pop
rcll
out
xchg
and
aad
mov
mov
mov
aaa
ljmp
push
add
stc
push
out
loop
inc
mov
mov
ficomps
cmp
cmp
sub
mov
mov
inc
repz
inc
test
out
mov
jb
mov
es
fmuls
xchg
dec
in
xchg
popl
inc
ss
xchg
out
mov
fnstsw
adc
cli
add
mov
mov
arpl
insl
stos
in
pop
dec
nop
mov
nop
sub
repz
lret
and
in
lahf
stos
imul
sbb
lods
dec
insl
push
test
and
mov
mov
insb
mov
adc
call
jnp
sbb
jnp
loop
jnp
cmp
shr
popa
mov
sti
mov
pop
inc
push
cmp
fwait
push
mov
stos
mov
pushf
aaa
or
les
pushf
push
movsl
fs
test
cmp
or
test
sar
cld
ret
shl
fwait
push
push
cltd
add
cmp
adc
jb
stos
repz
xchg
jle
repz
dec
in
stos
jnp
cmp
les
das
or
mov
jnp
or
popa
repz
lods
mov
iret
aad
push
scas
sbbb
hlt
roll
stc
aas
cmp
fsub
les
dec
mov
aaa
add
fistpll
ljmp
mov
pop
or
fiaddl
cmp
xor
push
xor
lea
sbb
pop
stos
sbb
faddl
inc
sbb
inc
gs
xchg
pushf
js
shr
inc
popf
int3
into
jle
in
in
jmp
push
jnp
inc
mov
orl
call
and
call
aam
pop
or
mov
adc
rorl
test
or
stc
fidivrs
mov
push
xchg
push
jge
dec
and
jecxz
fsubl
cld
rolb
cmpsl
pop
fisttpl
je
sub
nop
inc
cmp
pop
sub
jg
mov
pop
je
sti
outsl
or
les
enter
inc
cmp
imul
adc
daa
xchg
pop
push
mov
pop
sub
mov
xchg
cmp
jle
and
jp
insl
shlb
pop
pop
push
cmpsl
push
push
adc
xor
loop
xor
bound
sbb
jbe
push
push
bound
lock
dec
aas
xor
adc
sbbl
sbb
leave
push
orb
mov
cmp
inc
rclb
test
movb
jnp
mov
neg
dec
cs
add
pop
dec
sbb
and
and
or
in
xorb
outsl
sub
push
das
sub
bound
sbb
pusha
mov
jns
fwait
push
sub
loopne
aas
pop
in
add
and
cmp
ds
pop
jmp
loop
cs
fs
pop
push
aas
adc
sbb
idivb
adc
mov
sbb
pop
xchg
fwait
hlt
les
inc
call
loope
leave
pop
repz
les
sbb
cwtl
sahf
jge
inc
xchg
addl
sarb
cmp
push
jno
pop
repnz
xor
mov
add
daa
dec
cmp
jnp
les
mov
ret
hlt
je
in
mov
int
imul
mov
xor
imull
pop
js
xchg
imul
mov
inc
cmp
cmpsl
mov
pop
std
repnz
push
test
pop
fidivrs
fs
inc
mulb
mov
cmp
shll
ret
fisttpll
sbb
xor
inc
xchg
aas
and
or
xor
push
sub
mov
jo
jecxz
sub
out
daa
aam
rclb
popa
call
sub
insb
mov
into
repz
das
ficomps
setns
push
push
fldcw
ja
ss
ret
mov
cmp
xchg
jbe
sbb
mov
or
xchg
cmc
icebp
mov
leave
dec
sti
jns
incb
xchg
or
addr16
cmp
gs
aam
xchg
popa
lods
loope
mov
adc
lret
imul
ds
jl
jg
gs
jp
jae
mov
ds
cmp
frstor
sub
push
xor
push
lahf
cltd
add
shll
pop
cmp
aas
push
sbb
and
ret
ret
dec
mov
lcall
xchg
fsub
loope
jae
loop
iret
inc
inc
sarl
dec
xchg
add
js
push
xor
stos
inc
jo,pn
mov
adc
mov
movsb
fisubrs
or
daa
idivb
mov
mov
pop
sti
bound
sbb
add
xchg
loop
out
arpl
loop
jbe
pop
xor
push
imull
xchg
je
loopne
mov
xor
pushf
jmp
xchg
push
imul
lds
xchg
insb
sub
mov
dec
dec
arpl
and
ja
fnstenv
add
imul
repnz
add
jbe
sti
out
or
call
pop
arpl
push
cs
xchg
sbb
arpl
jecxz
call
pushf
hlt
cmpsb
data16
xor
xchg
leave
xchg
mov
xor
jae
imul
mov
mov
mov
inc
hlt
mov
push
push
push
cmp
lds
inc
movsb
mov
push
cmp
lock
push
lds
inc
and
mov
sub
addb
mov
sub
ds
loop
shl
add
pushf
pop
loopne
data16
jmp
lods
push
mov
int
dec
stos
dec
push
aam
xor
mov
adc
inc
and
sbb
ds
or
jge
and
leave
pushf
adc
add
pushf
jnp
inc
mov
mov
jb
pop
sti
cmp
stos
xlat
mov
ss
sbb
push
jge
xchg
sub
push
mov
popf
and
cmp
push
add
push
cmp
push
sbb
ret
rolb
xor
add
xor
lret
lret
setbe
dec
or
jl
sub
or
pop
sub
xlat
jl
call
xchg
bound
push
test
rorl
fsub
adc
xchg
fiaddl
pop
in
mov
aad
inc
dec
inc
insb
dec
shl
test
push
aaa
mov
jmp
or
jge
cmp
mov
fimuls
inc
mov
leave
mov
movsl
mov
ja
mov
cmp
das
push
pop
ret
nop
in
sub
lods
dec
lds
sahf
shlb
jbe
cmp
bound
inc
sahf
cld
mov
push
rol
fwait
cltd
or
call
pop
pushf
xor
or
fs
nop
inc
xchg
xchg
scas
dec
push
pop
cmpsb
popf
ljmp
ret
loop
adc
mov
out
mov
and
push
dec
fldl
mov
clc
jae
push
imul
filds
mov
xlat
jo
std
clc
or
sti
mov
pop
sbbb
xor
popf
adc
xor
out
loop
add
das
pop
nop
jl
dec
std
sti
sarl
push
dec
cwtl
add
fs
ret
mov
xchg
xchg
cld
arpl
jp
fadds
divb
mov
jp
push
mov
int
jmp
hlt
in
pop
dec
je
dec
mov
xchg
fistpll
add
or
test
int
lahf
pop
scas
std
popa
push
mov
mov
and
add
sbb
jnp
xchg
shl
mov
addr16
xchg
dec
movsb
lahf
inc
mov
mov
cmc
cmp
lret
pop
inc
mov
lods
fbld
adc
js
inc
in
int3
and
adc
adc
fildl
mov
jne
push
cmp
inc
cmp
fcoml
inc
push
outsb
stc
mov
orb
aam
sarl
add
lock
lret
aas
add
xor
loop
add
inc
and
add
ss
aad
stc
fsqrt
mov
aam
mov
mov
out
sub
jnp
js
lcall
cli
nop
js
dec
fwait
imul
insl
push
cmp
fdivs
xlat
jns
js
mov
mov
decl
enter
ret
fisttpll
pusha
sbb
sbb
ljmp
stc
fidivrs
xchg
fisttps
xor
inc
adc
and
fucomi
dec
cmp
jno
lods
outsl
mov
cmp
mov
xchg
ljmp
jmp
dec
mov
jl
adc
and
in
xchg
call
mov
xchg
sub
inc
cld
notb
cmp
and
jnp
std
sbb
sbb
mov
jecxz
sub
inc
add
inc
mov
ja
popa
add
adc
lea
pop
sbb
std
jns
inc
sahf
inc
test
xor
jb
and
leave
add
aaa
sub
sbb
xorb
mov
leave
icebp
push
iret
ficompl
inc
and
xor
ret
xchg
call
adc
dec
mov
inc
into
sbb
bound
decb
pop
and
std
or
insb
test
sbb
stos
movsl
sbb
and
push
lods
cld
jo
xchg
push
into
repz
in
mov
mov
outsl
rcll
jb
cmp
inc
dec
les
pop
ror
pop
add
push
pushf
imul
into
pop
hlt
out
call
pop
dec
mov
adc
mov
mov
sub
sbb
jg
sub
mov
movsl
fpatan
inc
out
imul
in
out
shl
std
push
jmp
idivb
cmp
jne
je
xor
push
cmpsb
or
push
sbbb
mov
mov
xor
fstps
xorps
in
pop
sti
sub
or
in
ja
repz
es
inc
and
scas
test
dec
xlat
push
in
cmpsb
push
divb
rcl
pop
aam
pop
in
dec
adc
xor
in
loope
cmc
adc
leave
push
clc
inc
std
aam
jecxz
out
rclb
cld
xor
push
icebp
or
mov
lock
insb
mov
xchg
je
js
mov
mov
cld
fadds
ljmp
xor
jecxz
nop
push
jge
xor
insb
sarb
js
loopne
dec
mov
sbb
lret
cld
mov
aam
sub
out
or
cmp
pop
xlat
ds
outsl
push
pop
fwait
stc
jle
mov
sub
and
sub
pop
in
add
fldt
or
fstpl
push
adc
xor
or
jecxz
dec
adc
sbb
adc
imul
test
cmp
js
fadds
jo
xor
add
movsb
jnp
fstpt
arpl
mov
idiv
mov
mov
push
push
sahf
xor
cltd
jno
cmp
sub
clc
mov
rcrl
inc
stos
fs
mov
flds
pop
xor
icebp
cmc
mov
or
cli
cmp
xor
add
fstps
mov
repnz
mov
je
leave
mov
int3
stc
stos
xchg
movsl
fildll
inc
push
xchg
bound
and
or
int3
pop
scas
aam
dec
icebp
adc
xchg
push
xchg
scas
sub
std
dec
or
js
lods
and
and
jb
sub
ret
pop
push
sbb
xor
or
mov
and
cli
mov
fsts
das
test
or
ficoml
mov
push
adc
dec
xchg
push
and
mov
or
add
fs
and
mov
popf
int3
xor
jb
out
cmpsb
or
movsb
pop
outsl
mov
xor
xorl
mov
into
shll
jb
mov
iret
mov
scas
mov
xchg
scas
rolb
stos
cmp
scas
adc
inc
repnz
xor
push
sub
nop
in
push
and
xchg
cltd
push
mov
adc
xchg
and
loop
jmp
gs
lret
xor
cld
scas
loop
inc
repz
add
stos
cmpsb
dec
bound
mov
xorl
cld
jle
push
cmp
lds
lods
mov
pusha
fnstcw
cltd
xor
repnz
mov
xchg
repz
rcll
sbb
das
call
cmpsl
cwtl
push
sub
stc
or
jns
enter
jp
lcall
jmp
cmpsl
mov
or
dec
leave
mov
dec
je
push
ss
jnp
or
data16
mov
mov
xor
lret
inc
pushf
or
xchg
dec
idivl
mov
lret
lea
push
sti
dec
dec
out
push
add
test
add
clc
and
daa
fwait
lods
fwait
add
jmp
pop
fwait
pop
test
push
cmpb
adc
dec
jecxz
jb
leave
or
cmp
adc
cmp
sub
sti
out
mov
cwtl
aam
jecxz
out
push
rcll
jb
stos
leave
mov
pop
sub
pop
jo
cmc
xor
add
cmp
mov
int
jg
fcomi
fimuls
jge
pop
or
mov
imul
jmp
adc
inc
dec
xchg
mov
push
lea
lcall
mov
xor
loopne
repnz
and
push
mov
jno
add
xor
jmp
jmp
or
mov
jg,pt
mov
pop
sbb
in
or
jmp
cmp
or
xchg
push
push
add
je
icebp
xorb
je
push
sub
inc
out
fwait
sbb
setp
adc
stos
push
pop
cmp
sub
jle
mov
leave
jo
pop
or
xchg
out
and
jne
add
imul
aaa
and
push
stc
in
out
ja
adc
mov
out
sub
or
hlt
cmp
pop
xchg
sub
cmp
mov
push
or
xlat
sbbl
fldenv
insl
sbb
fidivrs
push
incb
addr16
mov
xor
add
repz
out
xchg
fisubrs
std
jmp
scas
les
jmp
fucomip
adc
pop
push
push
enter
xor
stos
loopne
mov
int3
xor
pop
sub
jns
inc
dec
or
add
outsb
clc
sbb
push
cli
push
lahf
push
adc
insb
add
inc
in
movsl
jle
hlt
les
in
int
pop
cwtl
xor
pop
jp
push
sub
hlt
lcall
dec
lods
fucom
arpl
cmpsb
xchg
in
mov
or
sahf
sbb
gs
mov
mov
xchg
sar
shl
fcoms
lretw
int
inc
loope
cmpsl
das
mov
rcr
sub
divb
sahf
mov
mov
leave
std
hlt
jl
rcrl
les
cmp
jge
push
inc
mov
dec
or
inc
orb
or
dec
into
fildll
pop
addb
cmp
mov
mov
xlat
and
in
ss
frstor
in
cmp
cmp
shll
mov
movsb
pop
ds
aad
jmp
jnp
mov
sub
or
pop
icebp
subb
and
mov
mov
push
arpl
jb
xchg
popa
or
sti
fs
xchg
addr16
rcrb
or
inc
sahf
jns
out
adc
pop
jl
push
sub
negl
cmp
push
popf
dec
std
ljmp
or
pushf
mov
cmp
rcr
push
mov
xor
dec
es
stos
loope
je
fcoms
jge
push
sbb
jne
and
hlt
arpl
popa
xchg
arpl
mov
sbb
cmc
fcomip
and
sahf
lret
inc
sbb
cmc
cwtl
ss
sbb
inc
ss
in
fidivrl
add
adc
fsubl
cwtl
repz
nop
and
or
scas
xlat
or
or
jbe
push
and
lret
inc
bound
pop
sti
pusha
ljmp
jno
int
mov
shr
push
or
dec
mov
lahf
inc
cltd
lods
push
outsl
jbe
xchg
test
in
scas
xor
mov
aas
lods
lds
cmp
in
adc
mov
and
cmp
lea
insl
aaa
fldz
or
lds
xchg
jns
imul
jns
sarl
xor
das
cld
ret
xchg
sub
or
imull
push
add
push
adc
mov
jge
cmp
xor
xchg
loop
sub
and
aam
std
cli
fdivl
ljmp
js
stos
adc
cmp
and
mov
mov
add
psubsb
divl
nop
cltd
loop
xor
sub
push
in
sbb
xchg
lret
es
push
or
or
jl
mov
dec
and
repz
pop
jo
inc
outsl
mov
cmovs
scas
add
lea
pop
add
pop
vsubps
mov
enter
in
mov
jo
movb
adc
mov
roll
in
dec
test
add
sub
dec
leave
sbb
dec
jae
enter
sub
into
jg
sbb
fnstenvs
je
dec
aam
les
push
faddp
jp
je
and
mov
mov
leave
jno
popa
sub
sahf
push
nop
sahf
ret
outsb
mov
popf
push
test
adc
jl
inc
jg
into
sbb
fimull
jmp
cmpsl
cli
sbb
push
xlat
push
fs
leave
cmc
jbe
sbb
cmp
popf
insb
pushf
loop
outsl
mov
mov
bswap
in
mov
xlat
inc
mov
xor
pop
ror
push
adc
in
sbb
pop
loop
orb
out
jecxz
repz
and
cwtl
out
mov
insl
jns
push
sbb
xchg
addr16
xor
sbb
sbbb
repz
sbb
dec
adc
or
ss
jg
mov
rorl
mov
cmc
pop
jmp
stos
pop
filds
mov
xor
mov
and
mov
add
xorl
pop
and
mov
test
repz
pavgw
sbb
xor
call
daa
adc
xorl
lahf
push
cltd
fldenv
shrl
jae
mov
dec
push
and
insb
cmp
pusha
sbbl
push
pop
push
xor
push
dec
into
mov
dec
xchg
sbb
pushf
fcoms
mov
imul
or
mov
xchg
mov
pop
xor
fnstcw
push
sahf
out
inc
xchg
cmp
inc
adc
and
dec
push
cbtw
pshufw
in
in
mov
test
mov
mull
or
mov
cmp
in
lock
cmc
test
xor
aad
popf
js
ret
mov
mov
add
jmp
inc
loop
cmp
decl
xor
cmp
popf
or
fdivl
mov
xlat
inc
pop
insl
jbe
adc
dec
stc
mov
out
pop
adc
add
aaa
push
test
mov
lahf
sbb
dec
test
fcmovb
pop
loopne
shrl
ret
xchg
aam
mov
push
je
fstps
sbb
call
loope
nop
stos
jecxz
mov
cld
and
bound
or
xor
jle
add
aas
or
mov
push
cmpsl
test
or
mov
leave
adc
add
nop
add
mov
push
outsb
gs
xor
test
and
jns
movsl
or
inc
popa
call
xchg
dec
mov
mov
xchg
xchg
adc
in
jne
cmc
mov
daa
and
jo
mov
mov
sbb
jg
adc
cmp
test
imul
sub
popf
hlt
hlt
mov
cmc
jne
push
stc
jae
xlat
data16
mov
xor
and
jge
jo
ljmp
arpl
cs
push
fstpl
xchg
xor
dec
frstor
sbb
and
dec
nop
push
adc
xchg
clc
notl
addb
mov
mov
test
aaa
or
enter
push
adc
push
push
dec
imul
xor
dec
arpl
mov
mov
xor
mov
jno
mov
ret
jae
cmpsb
ret
dec
adc
dec
push
arpl
xor
pushf
cmp
mov
cld
lcall
lea
and
mov
loopne
fistpll
mov
push
sbb
xchg
or
cmp
mov
lock
fisttpll
inc
cmp
jae
es
rclb
insb
xchg
cmc
scas
imulb
sbb
sbb
adcl
cli
inc
push
and
fwait
mov
jae
fs
and
bound
sub
push
add
in
loopne
call
xchg
movsb
jb
and
jmp
icebp
aam
jg
jg
push
pop
fnsave
lcall
sbb
sub
inc
movsl
dec
loop
mov
add
cmpsl
pop
push
adc
sbb
pop
mov
sbb
lret
jns
push
enter
pop
outsb
mov
inc
in
out
mov
sarb
xchg
jbe
sbb
inc
or
push
mov
fsts
inc
xchg
mov
in
aam
scas
mov
xchg
sbb
pushf
mov
sub
mov
push
add
cmp
xchg
mov
jae
xor
xchg
sub
loopne
mov
mov
jle
or
add
adc
and
xchg
lcall
and
mov
jecxz
loopne
repz
sahf
inc
aad
rorl
add
mov
sub
cmp
inc
daa
dec
push
jb
lcall
sti
sub
mov
jbe
addr16
inc
mov
mov
push
dec
gs
cs
jle
cld
mov
push
imul
lods
push
aad
pop
frstor
add
xchg
and
loopne
call
mov
fdivs
mov
dec
hlt
sbb
imull
repz
sub
and
into
dec
and
popa
mov
leave
fcmove
sti
adc
jne
sbb
psubw
mov
hlt
pop
aam
mov
and
sbb
fisttpl
push
pop
mov
xlat
andb
push
adc
xchg
pop
xor
fmull
dec
add
fldl
leave
mov
pop
cs
adc
fwait
mov
or
aam
cmc
test
xor
mov
outsb
sbb
jg
mov
jne
pop
clc
pop
fidivs
insl
ret
dec
sub
int
fs
sar
pop
ret
or
shr
movsl
jmp
icebp
es
sbb
rcrl
sbb
jno
pop
rcll
or
inc
notl
and
mov
test
sbb
adc
aam
pop
mov
imul
mov
add
cmp
inc
ror
insb
mov
or
aam
sbb
adc
inc
cmp
jae
xor
aam
mov
leave
filds
sbb
mov
imull
idivb
mov
loop
sub
loope
push
mov
aas
aaa
jns
adc
ficompl
jp
sbb
push
push
inc
into
mov
push
repnz
cmp
sub
sub
dec
gs
fistl
mov
ja
jno
add
das
xchg
adc
mov
mov
lds
fistpl
in
inc
xchg
iret
jae
clc
lcall
out
repnz
inc
jg
dec
mov
and
es
inc
movsb
inc
mov
and
data16
jb
jmp
mov
in
xor
mov
leave
aam
xchg
mov
std
lret
pop
adc
and
test
scas
stc
and
cmp
mov
outsl
or
mov
cmpsl
sub
dec
dec
xchg
stos
sbbl
aam
not
jl
enter
pop
fwait
loope
dec
dec
das
pusha
jle
jo
leave
mov
inc
adc
dec
push
push
and
mov
jmp
cmpb
sub
xchg
inc
xchg
roll
push
or
mov
dec
movsl
jno
ret
stc
rcrl
xlat
cmp
repz
sbb
jl
mov
adcl
push
out
imul
int3
test
xor
mov
sbb
inc
fwait
mov
in
aam
mov
fsubl
mov
xchg
in
cld
insb
cs
sbb
add
xchg
lds
cld
enter
jno
js
pop
cmpsb
jae
mov
mov
testb
lret
inc
cmc
xchg
xchg
push
dec
aad
xchg
pop
loope
cmp
jmp
orl
nop
scas
adc
mov
and
sbb
sub
imul
cmc
sbb
jbe
jle
test
outsl
sub
cmp
mov
fdivrl
in
cmp
das
das
lock
adc
push
xor
ljmp
cwtl
dec
stos
inc
adc
ret
mov
sub
movsb
mov
rolb
push
cmc
lret
outsl
mov
pop
add
jae
imul
jno
push
popl
push
mov
jge
cld
arpl
push
push
movsl
sbb
xor
xor
jmp
test
fucomi
push
cltd
xor
sbb
aaa
ja
inc
je
xor
outsl
mov
jae
xchg
lods
rcl
call
sahf
mov
pop
add
sbb
rorl
ljmp
pop
sarb
pop
ds
pop
pop
outsb
and
jg
xchg
int3
mov
sbb
movsb
stos
shll
jae
jl
pop
fildl
mov
dec
xchg
jb
addr16
or
out
daa
arpl
enter
fcomps
mov
mov
outsb
sub
push
inc
movsl
push
mov
ja
outsl
sbb
enter
add
adc
addr16
iret
sub
mov
xchg
int3
and
inc
movsl
cmc
push
test
call
sub
mov
sbb
pop
outsb
sub
add
popa
stos
or
mov
setns
nop
add
push
xlat
pop
mov
sbb
push
dec
mov
scas
jb
je
xchg
in
push
ret
dec
mov
xchg
in
pop
and
xor
das
pop
pop
sbb
inc
pushf
lret
cmp
jnp
shlb
stos
movsl
inc
aaa
loopne
je
ja
ficompl
and
push
daa
movsb
mov
push
mov
in
adc
pop
push
pop
dec
test
jnp
pop
sbb
and
lea
push
inc
lea
pop
in
aaa
adc
fsubrl
dec
jno
sbb
xchg
fdivr
lock
jge
aaa
nop
adc
cmp
movsl
mov
in
loop
icebp
out
rol
mov
push
in
mov
add
sti
mov
dec
push
mov
gs
or
mov
jns
cmpsb
icebp
dec
or
sbb
xlat
dec
push
dec
decl
test
loopne
dec
push
jge
or
imul
pop
push
push
js
cli
inc
xor
mov
ficoml
stos
pop
sarb
xchg
bound
sbb
fsubr
popa
aam
lods
cmp
inc
out
fidivrs
push
faddl
pop
cmp
xor
enter
jns
lock
into
or
pop
push
mull
loopne
xchg
xor
pushl
pop
insb
imul
sbb
shrl
xor
or
mov
and
push
int3
cs
jno
aam
add
scas
and
add
xor
add
jo
xor
cld
inc
sar
inc
cmp
dec
jae
cltd
popa
push
xor
mov
cmp
pop
loopne
cmp
xor
cli
add
mov
imul
sbb
cmp
mov
jge
jbe
out
xchg
cltd
roll
leave
mov
dec
dec
push
pusha
cmp
rclb
lret
test
divb
jge
clc
sahf
pop
cmp
popa
addr16
ret
lods
bound
mov
pavgb
jae
mov
mulb
dec
addl
dec
jne
mov
cmpl
pop
jecxz
scas
mov
mov
fmul
cmp
xchg
sahf
or
ret
inc
mov
and
inc
mov
cmp
mov
scas
xchg
pop
pop
mov
push
push
in
dec
js
ret
sbb
push
fadds
pushf
jl
decb
xchg
das
popf
xchg
mov
cli
xor
lahf
nop
mov
sarb
mov
cmpsl
mov
and
push
or
ss
cmp
out
outsb
dec
cmpb
push
loopne
inc
cmpsb
fimuls
xor
jnp
pusha
pop
pop
add
cmp
cmp
adc
dec
inc
bound
jmp
or
jns
outsl
dec
dec
mov
addr16
inc
je
je
pop
push
les
dec
in
mov
nop
pop
fld
dec
jp
mov
nop
cmc
push
pusha
and
mov
xchg
insl
loopne
insb
rclb
and
out
shl
loop
add
add
test
aaa
fldenv
jg
pop
pushf
dec
mov
sub
inc
xchg
jns
mov
jecxz
mov
int3
add
sbb
out
push
notl
sub
fisttps
loop
mov
sbb
xor
xchg
pusha
xlat
mov
jne
fldl
mul
and
mov
call
mov
push
testl
int
sbb
mov
add
aas
lret
sahf
jmp
and
xchg
xor
xchg
pop
inc
or
and
pop
mov
mov
imul
mov
mov
push
mov
outsb
mov
cltd
fwait
in
jno
sahf
or
and
fldenv
sbbb
daa
sti
into
dec
push
and
cmp
int
mov
mov
xor
jno
ret
notl
push
mov
add
xchg
stos
jmp
xchg
or
mov
jp
cltd
jb
sarb
mov
xchg
lods
pop
dec
add
cmp
icebp
sub
xchg
imul
mov
jns
and
lods
mov
jae
ja
test
sbb
mov
jle
ss
cmc
push
mov
daa
mov
imul
sbb
push
outsb
inc
out
inc
mov
jae
mov
xor
mov
das
mov
in
lods
add
lcall
les
xchg
aam
push
xchg
push
add
and
andb
pop
jns
mov
jno
cmp
xor
out
scas
inc
repnz
in
jmp
loopne
pop
cmp
shll
es
cmp
enter
or
popl
add
jno
popf
sbb
push
xchg
pop
mov
push
and
push
push
andb
cmp
jnp
push
cmpsb
sub
and
enter
fists
je
mov
fistl
and
xor
fwait
test
aad
icebp
scas
xor
adc
xchg
dec
lds
test
mov
sar
jecxz
cmpsb
in
inc
inc
jg,pt
or
iret
inc
fnsave
mov
dec
mov
jb
sub
sbb
pop
sbb
sub
test
xor
jp
sub
scas
in
push
incl
pop
test
push
ficompl
cli
dec
das
sbbl
icebp
out
orb
mov
push
jl
movd
mov
adc
dec
out
push
jb
call
adc
inc
ret
out
nop
mov
xchg
push
testb
stos
aas
ret
dec
push
push
xchg
insb
ror
push
push
sahf
adcl
lret
cmp
shlb
pop
dec
jmp
push
fcmovnbe
pop
xchg
gs
fsubs
int
sbbb
rcrb
or
out
loopne
jne
imul
ror
or
fwait
cli
mov
jge
ja
sub
and
and
sub
cli
dec
add
mov
cmp
jo
ja
mov
and
icebp
rcl
push
fbstp
imul
mov
adcl
cmp
faddl
pop
mov
mov
pop
les
xchg
loope
or
subl
adc
nop
loope
inc
pusha
outsb
mov
outsb
mov
xor
popf
mov
into
orb
aas
and
sbb
movsb
cmp
ret
push
pop
cmp
inc
nop
sbb
testb
ds
lds
xor
mov
outsb
outsl
sub
in
shrl
xchg
add
fnstcw
push
outsl
xor
test
nop
jl
xor
scas
inc
or
out
out
pop
xlat
jnp
and
adc
gs
pop
dec
stc
lret
clc
pop
mov
out
dec
stos
aad
jl
ficompl
inc
xchg
adc
icebp
ja
fcoms
mov
leave
push
mov
or
and
mov
fdivl
add
mov
sub
or
repnz
test
xchg
gs
sbb
and
fs
out
shlb
je
add
and
sbb
add
xchg
cli
and
push
popa
jbe
int3
clc
xchg
stos
fbstp
push
fcompl
inc
inc
xor
into
mov
cltd
adc
push
add
cs
adc
test
mov
insb
mov
cmp
pop
lods
pop
popa
cmpl
out
fcmovnbe
loopne
aam
lcall
and
in
movsb
jno
push
jecxz
ljmp
bound
lods
push
inc
inc
imul
sub
dec
sbb
cmp
js
out
add
in
test
ja
push
push
lock
hlt
jns
add
dec
lods
icebp
fcoms
fdivrs
fidivrl
movsb
ret
dec
pop
shrl
fisttpl
pop
push
mov
jb
jg
out
cmpsb
repnz
push
jnp
push
xor
fmuls
push
push
push
dec
out
xchg
imul
les
jmp
jb
lcall
fstps
lcall
jmp
mov
out
scas
mov
pop
cmp
aad
cmp
lret
jae
mov
inc
jbe
xlat
cld
or
dec
sbb
pusha
pop
out
scas
pop
sub
movsb
lret
and
movsb
adcb
cmpb
stos
cli
inc
add
lret
or
dec
and
push
mov
movsb
xor
shll
sub
xchg
dec
out
push
negl
repz
in
stos
andb
xor
jnp
cmp
jb
cli
push
pop
pushf
call
repnz
fnstsw
setp
ss
push
xchg
pop
stos
mov
cmpl
std
dec
mov
test
jmp
push
lahf
or
sub
xchg
icebp
pop
sub
xor
stos
inc
outsl
pop
mov
push
xor
icebp
das
add
fsubl
pusha
mov
aam
in
sbb
mov
push
das
pop
push
add
mov
clc
dec
mov
cwtl
xchg
mov
jae
mov
xor
cmp
cwtl
adc
sub
add
shr
jnp
sub
mov
mov
xchg
jne
lcall
pop
mov
inc
dec
leave
cs
sub
inc
in
dec
jg
cmp
mov
fnsave
aam
decl
fmuls
mov
xor
lds
push
jae
mov
cmp
sahf
push
movsb
jmp
ret
adc
cmp
clc
pop
sub
and
sub
gs
xchg
ss
sarl
inc
clc
jl
aam
mov
push
dec
push
sub
or
add
pop
jbe
pop
adc
mov
in
and
push
jnp
xor
mov
push
in
jg
pop
sub
loop
push
mov
inc
loopne
add
mov
out
cwtl
stc
inc
clc
inc
lret
jg
roll
outsb
add
lods
notb
mov
dec
ficompl
pop
dec
fbld
pop
xchg
jnp
shlb
lds
inc
shr
and
xchg
jbe
je
sbb
inc
rcrb
js
dec
xchg
jl
test
mov
pop
xchg
xchg
aas
jne
jb
sbbl
ds
sti
mov
call
int
out
les
nop
adc
ret
dec
dec
mov
add
scas
cmpsl
jmp
dec
cmp
sub
sub
aam
sub
jne
cmp
adc
xchg
test
jmp
xorl
fs
pop
test
fadd
lret
iret
pop
pop
and
jnp
ret
pop
into
mov
pop
nop
push
fldt
add
cs
iret
mov
cli
fistpll
add
add
mov
push
test
add
mov
sub
ret
fdivl
push
mov
mov
xchg
xchg
rcrb
mov
and
mov
and
add
jno
mov
ljmp
lahf
push
xchg
popa
sub
jmp
cli
jne
xchg
cltd
mov
scas
hlt
inc
arpl
xor
fistps
mulps
cmp
jle
fwait
int3
loope
and
adcl
pop
aaa
and
das
sbb
dec
fidivrs
xchg
rep
outsl
stos
addl
rolb
push
rolb
testl
add
jge
das
mov
lcall
dec
pop
push
cltd
testl
lock
and
cwtl
sub
mov
dec
xchg
xor
fldlg2
mov
int3
cmp
cmpsl
jl
pushl
mov
in
in
fsubl
or
mov
sbb
mov
ret
sub
mov
pop
or
aad
jbe
into
jp
scas
push
ljmp
int
mov
mov
sbb
sbb
jle
add
xlat
mov
in
mov
int
test
jns
adc
push
scas
add
mov
ret
and
fmulp
es
imul
xor
add
push
sub
ficoms
stos
push
popa
jbe
add
movsl
stos
push
aam
std
xchg
imul
pop
icebp
das
xchg
ljmp
stos
xor
pop
inc
mov
fnsave
enter
dec
stc
and
dec
fmull
in
adc
cmp
pop
cmp
lret
sub
xor
std
xchg
mov
mov
mov
or
lret
pop
scas
test
inc
mov
or
dec
jmp
loop
xor
out
push
rorb
mov
je
fsubs
sbb
inc
xchg
sti
xchg
xor
cmp
testb
pusha
ret
pop
lock
xor
add
xchg
pop
insb
xor
pop
gs
clc
lock
daa
repz
dec
cli
adc
lahf
ds
dec
sti
mov
in
aad
gs
and
cmp
movsl
out
sub
xor
mov
sbb
adc
mov
cmpsb
jecxz
jno
jmp
lock
jmp
inc
push
out
cmpsl
mov
and
sub
dec
pop
repz
sbb
mov
mov
insb
ret
pop
imul
repz
dec
ficoml
xor
adc
fimull
xchg
fimull
cld
out
pop
clc
pop
inc
or
or
or
mov
sub
cli
mov
addb
cmc
inc
cmpl
cmpsl
fldenv
cmp
push
push
pop
mov
push
in
cmp
fcoml
cmp
movsb
sbb
xor
and
cwtl
cld
mov
xor
fstpt
xchg
add
mov
int3
push
in
cmc
cmp
jno
nop
sub
push
mov
lret
scas
adc
dec
rolb
pop
test
mov
cmp
loope
std
stc
jmp
sarl
push
and
add
call
stos
les
lea
mov
or
fwait
ja
push
int
pop
je
jb
rorb
mov
mov
cmp
icebp
mov
adc
add
adc
jns
lret
rcl
adc
inc
inc
rol
sub
pop
fiadds
in
loope
mov
imul
pop
push
push
pop
je
cmpsl
pop
sub
jbe
fucom
lret
arpl
jbe
jns
cmpsb
in
adc
inc
cmp
push
stc
ror
or
cld
and
mov
mov
repz
xchg
cmp
das
pop
mov
mov
mov
pop
test
sub
mov
mov
leave
adc
mov
lfs
jne
imul
pop
cmp
cmp
push
push
clc
scas
mov
into
movsb
ret
sub
pop
push
and
fwait
push
pop
pop
mov
inc
dec
adc
sbb
rorb
aad
xor
iret
shlb
mov
cmp
push
rorl
cmp
mov
pop
dec
enter
sbb
push
xchg
jbe
inc
rcrl
dec
test
pop
out
jmp
int
dec
sbb
mov
in
cmp
jl
cmpl
filds
lds
iret
mov
rcrb
lods
cmp
mov
stc
dec
mov
mov
cli
adc
std
or
xchg
call
add
rcrl
add
fdivl
out
loopne
pop
push
in
stos
fs
xchg
sub
and
inc
fbstp
outsb
pop
in
push
loopne
and
dec
push
das
and
jb
cmp
mov
cs
jg
mov
mulb
je,pn
mov
lcall
hlt
out
in
fs
mov
jl
add
sbb
dec
repz
fldenv
jmp
sub
or
jne
adc
cmpsb
les
jle
add
mov
cmp
into
fwait
inc
andb
scas
pop
xor
ret
jmp
pop
push
test
pop
les
sub
andb
rorb
insl
sub
je
test
loopne
shrl
lret
mov
stc
in
movsb
cs
movsb
mov
add
imull
sub
test
test
mov
pushf
mov
stos
les
stc
mov
hlt
in
mov
add
jg
mov
out
sbb
pop
js
lret
xchg
pusha
dec
in
mov
cmpsb
adc
fiadds
add
test
add
andb
push
pop
int3
testb
sahf
fstp
lock
and
pop
cmpl
lods
enter
inc
pop
sub
inc
inc
xchg
js
push
jecxz
ljmp
data16
mov
dec
adc
jno
dec
mov
adc
outsb
adc
sub
jno
testl
lcall
push
adc
popa
clc
ret
mov
push
inc
fs
push
movq
aaa
insl
mov
test
mov
jbe
jp
xor
cmpsl
sub
add
mov
pop
fcomp
pop
push
xchg
test
lret
mov
mov
repnz
pop
loop
prefetcht1
mov
cmpsb
xchg
repnz
mov
sbbb
es
xor
lds
jecxz
xchg
lea
std
pop
in
mulps
or
mov
push
aam
adc
push
mov
push
push
lods
aad
ss
test
cmp
pop
imul
mov
inc
incl
jbe
sbb
mov
jno
push
dec
mov
scas
mov
mov
bound
push
xchg
hlt
or
fidivl
and
adc
sub
fisttps
inc
sti
push
outsl
mov
push
lretw
aad
lahf
lods
leave
adc
push
sbb
fnstenv
mov
pusha
daa
push
das
jb
hlt
add
mov
or
xchg
call
orb
stos
lea
push
cli
loope
push
jl
mov
aas
dec
mov
loopne
div
mov
out
dec
push
in
cmp
dec
add
jmp
mov
inc
call
jns
jp
mov
in
mov
dec
pop
push
push
aam
push
adc
lds
mov
insb
addr16
or
mov
lods
dec
sbb
or
pop
aas
mov
test
jnp
xchg
lret
jne
mov
out
dec
mov
in
outsl
fs
sbb
test
jno
mov
imul
add
inc
pop
movsl
adc
push
mov
xchg
jb
push
ret
cltd
gs
mov
mov
pop
lods
andl
cmp
fsts
cltd
pushf
xchg
clc
dec
mov
mov
jg
inc
lock
mov
lea
jns
loop
inc
or
inc
xchg
or
rorw
imul
push
call
outsb
std
inc
popf
fistpl
mov
xchg
test
loop
insl
jecxz
add
and
add
push
inc
mov
add
jg
icebp
xchg
pop
and
mov
cltd
xor
aad
bound
gs
xor
lock
dec
int3
sbb
das
into
leave
cmp
or
into
sub
clc
mov
xorl
push
sbb
sub
dec
cmp
testb
aaa
mov
rcr
sub
lock
add
jmp
repnz
mov
push
loope
cmp
mov
arpl
inc
in
jg
or
test
fwait
imulb
cmpsb
jb
dec
ret
clc
jge
or
das
mov
test
fstpl
xchg
mov
push
xor
shr
push
cmp
add
dec
call
mov
mov
cmp
xlat
jns
pop
dec
jmp
daa
test
lret
jo
mov
inc
data16
dec
mov
mov
inc
add
mov
clc
jl
fs
popa
or
push
mov
fistpll
push
fsubr
call
test
add
sbb
mov
test
sub
lret
ret
popf
scas
and
add
stos
pop
les
test
test
mov
fwait
icebp
out
mov
ret
sbb
push
and
popa
cmp
inc
rclb
xchg
pop
xor
imul
or
mov
scas
xor
loope
sahf
or
shrl
pusha
data16
rcll
inc
cmp
into
loopne
xor
int
jno
mov
aad
subl
stc
mov
lcall
mov
cmc
lahf
sbb
sti
sbb
out
cmp
mov
data16
mov
fnsave
pop
pop
in
pop
push
push
or
cmp
jb
ja
cmc
mov
jne
je
jns
xchg
and
and
ljmp
xchg
clc
lea
hlt
aam
adc
es
mov
and
imul
mov
jno
add
pop
jge
mov
lds
or
in
fistpll
mov
es
int3
xor
jmp
ss
push
add
notb
mov
mov
jo
jns
add
sub
je
mov
jne
jmp
xchg
sbb
cmpsb
imul
add
ljmp
and
fwait
cmpsl
mov
test
rcll
xor
fwait
mov
fistpll
mov
jmp
roll
aaa
mov
fistpl
in
stc
xchg
cvtdq2ps
out
iret
add
xor
ret
mov
test
sbb
dec
cmpl
xchg
and
cmp
lret
mov
and
mov
xchg
mov
adc
sub
lret
cli
out
outsb
sbb
sub
out
fnstenv
ds
mov
add
mov
jno
repz
jecxz
pop
cmc
rcll
dec
push
mov
jmp
lods
dec
pop
aaa
hlt
mov
xor
xor
jae
shlb
sub
or
adc
push
clc
popa
aad
pop
cmp
std
enter
mov
fs
or
inc
xchg
jae
xlat
stos
movsl
jmp
sbb
cmp
aam
stc
cld
cmp
mov
lds
dec
jmp
lea
repnz
cmp
pop
rorb
mov
mov
out
ret
push
mov
lock
rorl
inc
addr16
mov
cmp
leave
adc
xor
ret
adc
xchg
jo
xchg
jp
pop
stos
lds
xor
push
xchg
insb
cmp
pop
mov
dec
fmulp
fcmovb
sbb
icebp
pop
icebp
out
int3
lock
lds
aaa
scas
jne
cli
jl
ljmp
les
fsubs
sarl
xchg
cld
cld
rorl
and
cmpsb
imul
inc
into
add
or
loop
insb
sbb
test
adc
cs
sbb
inc
cmp
xchg
xor
out
mov
js
das
dec
mov
fisubs
in
or
jle
mov
loopne
pop
outsl
mov
xor
pop
dec
xor
cmpsb
test
dec
xorb
inc
mov
mov
enter
lock
jge
aaa
sub
xchg
add
hlt
xchg
enter
cmp
pop
sbb
nop
cli
sti
add
and
fwait
daa
inc
pop
add
jle
push
pop
xor
lea
jno
sahf
cmp
sbbl
fildl
and
pop
inc
jle
jl
lahf
mov
sbbb
push
push
cmp
and
cmp
pop
inc
leave
fldcw
out
daa
push
fs
add
jbe
mov
in
dec
xchg
jne
jne
push
xor
dec
dec
xchg
xchg
loope
jge
ljmp
sahf
aaa
iret
dec
and
loope
int
ret
mov
sub
shlb
ljmp
gs
mov
out
dec
dec
and
xor
and
inc
mov
sub
mov
jmp
es
adc
test
mov
and
adc
pusha
popa
push
pop
nop
hlt
inc
xchg
rolb
push
mov
mov
js
add
nop
pushf
loop
jne
pop
mov
fstpl
cmp
movsb
pop
cmp
mov
sub
aaa
idivb
pop
mov
nop
ficomps
xchg
fdivs
cli
testl
pop
scas
push
adc
fsubs
fistl
rolb
or
push
mov
pop
jno
mov
fwait
arpl
and
in
mov
jnp
add
ficoml
lcall
mov
repz
pusha
push
add
into
and
cwtl
ds
fs
loope
iret
xchg
popa
add
cmpsb
movsb
xchg
cmp
mov
mov
and
add
out
mov
sbb
imul
fsub
lock
outsl
call
sub
add
test
cmp
call
and
cmp
in
sub
fdivs
popa
xor
pop
sbb
dec
jecxz
sub
sahf
ja
pushf
sub
jl
ljmp
cmpsl
xchg
aas
xor
stc
push
repz
mov
jns
jge
inc
test
clc
jge
into
cmpsl
and
xchg
outsb
xor
mov
jae
imul
xchg
push
fmul
add
testl
xchg
in
xchg
pop
ss
or
sahf
sarl
mov
add
sbbb
and
loopne
jbe
jne
daa
std
mov
jecxz
dec
sahf
aaa
out
adcb
pop
mov
stos
sbb
xchg
fsubl
push
repnz
out
lea
rolb
push
mov
outsl
mov
push
in
jae
pop
fiadds
push
fisttpl
adc
scas
outsb
stos
icebp
push
push
and
jae
fld1
jge
sub
dec
repnz
jecxz
sub
dec
jle
dec
cld
mov
mov
xchg
sbb
mov
mov
aam
iret
insb
xchg
xor
insl
push
mov
push
fstpl
test
iret
in
mov
push
sahf
add
or
xor
pop
in
xchg
sbb
mov
or
rcrb
pop
loop
or
test
push
jg
mov
insl
push
and
mov
xor
jp
jbe
addr16
movsb
mov
nop
ret
xchg
lret
sahf
sub
fwait
sbb
int3
lock
push
popa
jno
or
mov
add
mov
fcom
pop
add
popl
xor
fistpl
sbb
js
xor
mov
movsl
cmp
jp
mov
or
daa
pop
sbb
adc
std
push
cwtl
les
push
into
ljmp
cli
fisttpll
push
arpl
sbb
repz
inc
push
out
lods
jnp
repnz
out
out
mov
hlt
movsb
or
mov
pusha
mov
xor
sub
push
inc
push
mov
dec
dec
repz
cltd
sub
in
sbb
cmp
test
and
popa
jecxz
fidivs
popl
sub
jne
aad
jns
sbb
aas
xchg
aam
fisubrs
test
int
cmp
mov
or
dec
lret
rcll
popa
inc
sub
imulb
push
insl
pushf
adc
leave
xor
js
inc
fs
cmp
test
lret
outsl
int3
mov
sahf
jle
push
push
in
pop
dec
pushf
xchg
jmp
and
popf
in
cwtl
adc
stos
popf
sub
aad
mov
sbb
push
push
xchg
les
inc
push
pop
add
dec
lock
gs
scas
movsl
aad
jp
ret
mov
sbb
xorb
lahf
mov
ja
xchg
js
ja
xchg
fs
les
invd
clc
cmc
lcall
cmp
into
mov
and
jno
int3
pop
int3
mov
mov
inc
cmp
mov
in
cmp
push
dec
std
aaa
xchg
mov
xor
rorl
push
adc
testb
dec
sbb
ljmp
pop
and
mov
cmpsb
push
pop
mov
cltd
arpl
enter
ja
sub
cwtl
data16
sbb
jg
gs
xchg
int
cmp
or
movsl
imul
dec
test
dec
lahf
dec
inc
ret
stc
inc
mov
jb
pusha
mov
dec
shr
in
sub
test
imul
clc
shlb
cmp
sub
aas
mov
fildll
ss
xor
inc
sbb
cs
add
lds
pop
lds
push
cmp
or
into
sbb
cmp
sbb
mov
sahf
inc
out
outsb
ljmp
jecxz
inc
lods
gs
scas
adc
sub
leave
xchg
mov
testb
fld1
enter
fisubl
gs
stos
and
sub
loopne
mov
shll
hlt
sub
adc
jg
pop
adc
adc
vmovlps
add
rorl
mov
adc
stos
pop
dec
jp
sub
cli
addb
lea
pmulhuw
int3
jecxz
and
repnz
cltd
or
xor
ljmp
adc
andl
mov
jbe
inc
fsts
inc
cld
pop
mov
lahf
push
addr16
sti
sbb
jnp
stos
or
rclb
in
loopne
mov
or
rcrb
lret
xchg
repnz
cpuid
xchg
jns
ret
push
push
mov
mov
mov
nop
mov
add
lahf
fisttpl
and
mov
inc
imul
push
xlat
sbb
and
push
pop
ss
mov
mov
mov
push
inc
adc
mov
add
insb
xchg
dec
movsl
cltd
sub
mov
nop
and
jbe
aaa
and
inc
pushf
xchg
jne
pavgb
sub
das
adc
pop
and
sub
mov
inc
loope
pop
ret
repz
jge
dec
imul
test
jp
rclb
pop
jmp
iret
pushf
jmp
push
adc
xor
jl
les
call
or
sbb
sub
mov
and
repz
mov
cmp
repnz
test
adc
insl
mov
jl
and
push
inc
push
icebp
jge
xchg
sbb
xor
rcll
mov
xor
and
mov
dec
jae
ja
cmpsl
adc
imul
cwtl
nop
lret
or
push
inc
mov
arpl
dec
add
sti
xor
jg
push
push
into
cmc
mov
inc
mov
add
int
bound
jle
enter
aas
push
and
xchg
mov
scas
lcall
mov
popa
cmpsb
dec
mov
call
sbb
je
mov
inc
jecxz
adc
mov
aas
clc
jno
repnz
sub
rcl
jnp
jmp
push
inc
cmp
xchg
mov
or
adc
mov
enter
or
movsb
mov
cmp
pop
xchg
lods
cmp
lods
aaa
mov
xor
loope
dec
cmp
in
aad
mov
out
sahf
outsl
pop
xorb
enter
inc
aaa
cmpsl
cwtl
mov
leave
add
pop
and
sbb
in
mov
mov
sub
cs
cld
adc
leave
aam
and
cmp
shl
adc
and
daa
leave
mov
xor
xchg
and
cmp
paddsb
push
insb
xor
jecxz
mov
imul
sbb
ljmp
inc
je
xchg
mov
inc
sub
outsb
sbbl
sahf
cmpsl
mov
insb
popf
cwtl
sub
aam
adc
pop
xor
xor
in
std
lock
mov
addr16
xor
outsb
push
insb
imul
xor
adc
enter
fdivp
push
dec
jl
push
int
and
add
clc
cwtl
nop
cmp
nop
cmp
pop
push
into
icebp
xor
jnp
dec
jl
outsb
pop
mov
dec
jmp
dec
loope
adcl
std
xchg
inc
mov
cmp
dec
gs
jp
sbb
add
lods
loopne
ficoml
xorb
pushf
pop
clc
popa
sub
dec
jp
xor
and
icebp
fldcw
jb
mov
in
aad
outsb
decb
mov
fwait
cwtl
jp
inc
outsb
sbb
jl
lods
insl
pop
cmp
adc
rcll
xchg
sahf
loope
cli
lcall
es
mov
fcomp
xchg
cli
leave
mov
sbb
lock
enter
sub
mov
shl
fistpl
mov
ficoms
test
fwait
sub
insb
push
sub
inc
xor
bsf
sub
mov
xor
pop
in
inc
pop
lods
gs
pop
adc
sub
jae
add
sbb
and
int3
sub
cmp
in
adc
aaa
insb
test
xchg
mov
rcl
pop
pop
mov
scas
mov
push
cmpsb
xchg
cmp
dec
pop
add
arpl
scas
push
cmp
into
mov
or
test
push
arpl
scas
std
imul
loop
add
aas
xlat
stos
sub
sub
clc
in
jecxz
outsl
or
insb
sti
add
xor
jmp
sbb
push
into
popf
roll
movsb
add
mov
fcoms
jnp
jno
vpshufd
xchg
xor
mov
icebp
push
mov
cs
sarl
inc
add
dec
lret
data16
inc
jle
dec
push
adc
test
jecxz
cltd
lret
mov
jp
jbe
inc
xlat
sub
int3
aam
or
cmpsl
xchg
scas
out
push
mov
insl
xor
jne
popf
fiaddl
loope
adc
push
cld
out
shlb
mov
mov
jno
xor
stos
in
add
jo
data16
jnp
icebp
sub
inc
mulb
insb
push
ds
in
xchg
test
push
pop
lret
cld
mov
fwait
int3
pop
lds
pop
adc
xor
jle
aaa
clc
rorb
sub
cltd
mov
lods
lds
inc
jae
lea
mov
sub
je
insb
jne
shl
in
xlat
cmp
adc
or
lock
add
call
pop
mov
decb
and
aaa
enter
inc
push
xchg
into
iret
andb
or
shrl
fdivr
mov
lds
test
xlat
lods
xor
lcall
test
inc
pop
rorl
insl
pop
jecxz
cmc
shrl
test
lcall
out
imul
icebp
insl
fwait
clc
push
popf
pop
in
xchg
add
inc
lea
mov
mov
push
jns
mov
leave
inc
cs
fs
out
cwtl
cwtl
into
push
pop
cwtl
aaa
mov
loopne
cmc
mov
gs
push
aaa
loopne
repz
and
mov
cmp
ss
pop
ret
stc
adc
fadds
aad
call
dec
cltd
and
dec
ret
xor
lea
lcall
fcomps
push
mov
inc
lret
push
sbb
xchg
lret
cmp
mov
sbb
call
xor
and
js
test
cld
test
rclb
jb
pusha
lcall
xchg
loop
jmp
mov
or
adc
not
testl
adc
xchg
in
jg
mov
movsb
cltd
es
jb
nop
icebp
mov
les
mul
shlb
and
js
movsl
inc
sbb
stos
test
xchg
xor
push
push
fists
push
dec
mov
dec
xlat
sarl
or
leave
mov
rolb
or
std
push
mov
jmp
mull
pusha
add
pop
or
cwtl
sbb
rclb
std
xchg
xlat
pushf
jp
mov
xchg
rcrl
rcrl
lahf
xchg
cltd
xor
xor
popa
mov
ret
call
ja
mov
xor
inc
dec
xor
jl
cmp
and
ret
fidivl
pop
hlt
xor
js
insl
push
testl
inc
mov
pop
popf
outsb
lds
cmc
sub
cmp
mov
mov
push
jbe
andb
sbb
ljmp
mov
icebp
aam
dec
jg
out
iret
jbe
sub
xchg
mov
xchg
cltd
mov
in
fiaddl
fisttps
pushf
push
cmp
inc
rep
je
test
adc
nop
je
lcall
sahf
inc
imul
nop
mov
add
jns
int3
xor
arpl
jb
mov
sar
rcrb
cmc
mov
mov
cli
pop
push
inc
jno
es
imul
push
pop
and
mov
dec
pop
in
stos
mov
push
ss
lret
je
jb
sub
push
lahf
fiadds
or
xchg
jge
call
push
adc
lods
mov
mov
inc
in
leave
test
push
add
icebp
adc
cpuid
dec
or
dec
sbb
mov
rcrl
mov
cmp
lods
adc
enter
mov
pusha
xor
es
mov
mov
punpcklbw
shl
pop
mov
push
cwtl
xor
jge
and
xchg
and
or
pop
push
daa
aad
pop
scas
insb
sahf
testl
push
lret
sahf
hlt
inc
shll
scas
addr16
outsb
fs
inc
push
cltd
rcrl
xor
dec
insb
adc
or
mov
iret
std
adc
mov
in
in
push
rcrb
pop
xchg
js
cld
lock
sub
add
pop
ljmp
shr
xor
adc
out
xor
xchg
cmp
repnz
push
in
es
inc
jb
pcmpeqb
imul
push
push
or
sub
pop
popf
mov
lock
out
ds
lea
or
mov
and
push
dec
insl
mov
pop
mov
dec
ret
push
imul
add
inc
inc
inc
mov
dec
xchg
mov
xor
ret
sbb
mov
mov
pop
xchg
xchg
cmp
dec
fldt
mov
jno
lcall
push
jmp
xchg
jne
lret
and
jne
popf
inc
adc
pop
mov
or
lahf
mov
pusha
stc
xor
jns
push
mov
pusha
cmp
test
sarb
inc
hlt
aam
rcrl
adc
cli
mov
je
pop
lret
mov
pushf
lret
push
xor
mov
shl
pop
mov
pushf
cltd
add
inc
sub
rol
lock
sub
push
pop
out
push
adc
arpl
cmp
scas
push
mov
ss
sarl
insb
jecxz
cmp
fwait
mov
mov
out
inc
ja
out
push
or
insl
enter
xchg
aaa
test
pop
es
push
mov
push
xorb
cmpsl
mov
pushf
inc
xchg
inc
insl
adc
pop
ljmp
xchg
fidivrl
mov
int
adc
xlat
pop
lret
sub
in
js
push
pop
push
shll
push
imul
adc
and
mov
xchg
orb
imul
fbstp
ss
arpl
sub
xlat
outsl
pop
popf
popa
insl
enter
imul
aam
lret
scas
adc
sub
or
sti
push
and
and
cmp
call
fsubrl
mov
dec
xchg
mov
out
shr
cld
pop
mov
aaa
std
fs
stos
subb
div
aaa
jge
test
adc
or
repnz
subl
and
mov
sub
shr
xor
sti
push
adc
js
lea
add
hlt
gs
dec
inc
sahf
pop
out
adc
push
pop
subl
outsb
push
push
dec
sbb
sub
and
jmp
jbe
out
sbb
je
or
add
jle
ret
xor
rcrl
fnstcw
and
mov
inc
aas
push
sub
out
nop
jb
repz
jp
jnp
int3
inc
pop
cmpsb
mov
lret
mov
sarl
mov
hlt
mov
ja
jmp
mov
or
xor
loopne
lock
test
pop
mov
adc
leave
mov
sbb
push
cmc
loop
stos
or
xor
or
flds
dec
sti
sub
jg
mov
or
lods
testb
and
lcall
mov
loop
lret
sub
sub
or
mov
jge
icebp
jecxz
xor
out
lods
in
mov
cli
lcall
mov
fwait
cmp
andb
jecxz
jmp
es
push
jl
jle
cmp
ljmp
cld
mov
out
fadds
pop
mov
sti
add
sarb
mov
adc
or
dec
dec
push
mov
mov
mov
insl
or
xor
out
pushf
inc
mov
dec
xor
and
adc
fistpl
fists
pop
adc
stc
dec
fs
ret
cmp
imul
je
adc
enter
cmp
cmc
lret
fstl
push
lods
mov
int3
cld
cmpsl
in
add
stc
sar
mov
shrb
mov
sub
cmp
shll
pop
loopne
lea
mov
xchg
pop
icebp
xchg
aad
dec
mov
inc
adc
mov
cmp
out
fsts
adc
cmp
out
cli
sti
les
xchg
dec
gs
cmp
mov
clc
pop
mov
dec
mov
subl
jl
cmp
test
jmp
das
sbb
adc
jge
inc
mov
dec
mov
loopne
inc
aas
push
cli
jg
bound
imul
std
push
mov
add
inc
xor
orl
gs
repnz
xchg
add
jb
pop
addl
jno
adc
sbb
cmpsl
mov
add
mov
xor
clc
jno
decb
pop
add
int
nop
pushf
addr16
jae
shrb
pop
inc
hlt
dec
sahf
sti
repz
icebp
mov
cltd
daa
sub
xchg
nop
jle
fnstenv
addr16
sbb
sub
inc
aam
lods
xor
and
fsubrl
out
rcrl
imul
test
lret
mov
lds
loope
cwtl
in
pop
add
test
jmp
outsl
mov
inc
test
cmc
xchg
pusha
sub
daa
jae
or
lahf
std
pop
pop
call
push
push
xor
scas
sub
or
jg
mov
inc
ret
leave
sbb
xor
mov
sahf
push
and
dec
dec
mov
lods
fnstsw
loop
mov
mov
sbb
inc
jo
push
mov
pop
push
pusha
dec
dec
jne
or
in
out
dec
mov
push
rcll
std
mov
fwait
inc
and
popa
cld
fcomi
mov
dec
jne
leave
inc
data16
push
sti
data16
mov
pop
xor
sub
mov
pop
and
pushf
jle
cmc
lock
scas
add
or
arpl
loop
lret
sbb
nop
inc
pop
jno
repz
sub
jns
and
inc
rclb
aaa
das
mov
andl
je
out
je
daa
jns
shl
out
shrl
xor
cmp
bound
into
mov
add
in
je
aas
jae
je
jae
das
mov
cli
jo
movsl
das
mov
add
popf
or
cmp
nop
stc
imul
add
or
sar
push
mov
add
xor
je
jo
iret
or
in
loope
mov
stc
je
mov
dec
push
push
or
inc
sub
rolb
push
dec
std
out
movsl
dec
sbb
sub
repz
and
jecxz
xlat
rcll
mov
arpl
pop
mov
and
nop
sub
mov
xlat
popf
xor
js
pop
sbb
jmp
pusha
iret
pop
in
adc
cwtl
jecxz
pop
lcall
icebp
lea
fiadds
out
jnp
and
mov
push
cmpsb
push
popa
lock
mov
add
dec
lock
push
jp
lock
sub
loopne
pop
jle
and
sub
movsb
and
sbb
fsubrp
jp
mov
pop
jnp
aam
roll
add
sub
sbb
mov
lea
push
pop
fnstenv
shlb
pusha
jmp
xchg
out
mov
pop
subl
inc
pop
pop
jge
cmp
sub
pcmpgtd
pop
hlt
push
and
xlat
andl
scas
mov
jno
jg
and
loope
rolb
xor
mov
subl
push
pop
out
lock
mov
popa
jne
pop
arpl
inc
outsl
sbb
pop
jp
js
icebp
mov
int3
and
pop
mov
jecxz
pop
or
int3
sub
outsb
popa
popf
xchg
cmpsl
jnp
lahf
push
adc
or
hlt
or
shrl
shrb
xchg
xchg
in
loop
xlat
cmp
enter
les
push
sbb
daa
scas
popf
xchg
or
mov
pop
push
gs
nop
lret
sbb
faddl
or
repz
rep
pop
shrb
int3
jae
cmp
lret
xor
mov
out
mov
flds
stos
push
mov
sti
outsl
shr
jge
ja
adc
repnz
repz
imul
in
pop
sub
cwtl
push
scas
int3
and
popf
or
mov
test
fiadds
sub
data16
xor
or
pop
cli
cs
sbb
loope
fadds
mov
xor
xchg
pop
xor
cmpsl
dec
or
xor
xchg
ret
xor
jnp
jb
inc
fs
aaa
mov
pushf
repz
sub
rolb
sbb
xor
loop
inc
mov
mov
push
mov
dec
jno
sarl
shl
pop
cmp
sti
fsubrl
xchg
pop
and
rol
cmc
pop
mov
insb
xchg
bound
fwait
je
in
sub
xchg
inc
movsl
cmp
mov
mov
out
imul
mov
icebp
out
lcall
imul
hlt
outsl
fistpll
dec
mov
shrl
ret
cwtl
jg
and
mov
popf
cmp
insb
jge
movsb
push
mov
pop
jns
sbb
xorl
jg
cmp
lods
push
movsl
sbb
fsubrs
mov
std
dec
ret
out
rcrb
test
aas
adc
jmp
pop
scas
jb
fs
jne
dec
repnz
xor
fnstcw
or
movsl
ss
cmp
sub
ds
idivb
test
pop
mov
jno
mov
out
into
ds
add
mov
rcr
inc
xchg
dec
ljmp
ss
testl
inc
decb
test
cmp
insb
pop
mov
mov
pusha
les
xlat
or
aaa
xchg
fs
xchg
ss
dec
dec
pushf
dec
cmp
or
in
mov
sub
cmc
int
inc
sahf
gs
push
lahf
add
xchg
fs
andl
mov
sahf
test
int3
outsb
jmp
call
jb
pop
push
lret
fadds
sbb
and
inc
orl
mul
ds
ljmp
xchg
cmp
imul
arpl
push
sub
cld
dec
ja
ret
add
push
shrb
call
lock
jecxz
sub
ds
add
sub
push
loope
ss
test
stos
cli
test
mov
xchg
xor
rclb
icebp
fsubr
pop
mov
ret
xchg
sbb
int
pushf
std
outsb
clc
mov
fldenv
outsl
mov
aam
sbb
jb
test
jecxz
pusha
push
xchg
xor
in
jbe
inc
in
data16
negb
sahf
mov
cmp
lds
loop
and
xor
sub
add
ljmp
inc
imul
mov
inc
xchg
inc
push
ret
ljmp
test
jg
daa
sub
hlt
or
outsb
fstl
pop
rolb
push
lods
dec
out
jns
jl
jbe
inc
mov
jne
fdivl
fnstcw
rolb
dec
mov
scas
sahf
stc
inc
push
mov
xchg
in
out
aaa
jge
xchg
or
in
sahf
in
sub
popa
pushf
rclb
pop
cmp
outsb
clc
or
sub
adc
cmp
sbb
or
loop
mov
shlb
sbb
add
dec
into
and
inc
dec
movsb
sti
pop
and
or
cmp
repz
lret
adc
imul
daa
je
inc
aas
jp
cld
lods
stos
or
xchg
stos
xor
icebp
push
lret
or
sub
movsb
sbb
add
push
push
mov
es
xor
ljmp
aad
lcall
cmp
fwait
inc
adc
xor
push
fdivrs
jne
cltd
fnstcw
or
inc
ja
jl
jmp
and
sbb
fwait
mov
bound
mov
jns
xchg
clc
iret
mov
sbb
call
into
sbb
xchg
dec
lods
mov
cmp
call
and
ret
pop
dec
iret
add
call
sub
aam
js
loope
into
or
push
cli
fs
repz
inc
and
mov
jp
in
in
in
or
xchg
popf
notb
jg
push
xor
test
out
mov
jne
mov
sbb
scas
push
shr
aam
fcmovne
inc
mov
int
mov
in
gs
jns
and
sbb
in
sbb
push
xchg
lds
clc
rolb
out
push
ljmp
int
les
frstor
sub
imul
cltd
mov
jmp
stos
ret
les
add
or
inc
sub
sti
addr16
xor
pop
sbb
mov
inc
inc
dec
or
fs
fnsave
sub
popf
in
or
xor
aas
sbb
call
sub
mov
jne
scas
mov
imul
and
mov
pushf
mov
cld
fists
dec
and
out
pop
ret
stos
sbb
mov
xchg
adc
or
imul
push
lahf
xchg
dec
mov
out
xchg
xor
adc
cli
mov
jbe
mov
push
xor
mov
shrl
sub
push
mov
ljmp
fmuls
pop
push
or
push
xchg
mov
fnsave
daa
sub
inc
fwait
je
cmp
inc
mov
lds
and
es
push
and
dec
test
mov
jle
jge
rcll
pop
ljmp
into
pop
jns
inc
sbb
stos
aaa
leave
xchg
hlt
les
dec
ret
or
ja
test
xchg
xchg
lea
cmp
xor
mov
pop
incb
test
add
pop
mov
cld
subb
int
ljmp
int
lea
mov
mov
out
push
scas
pop
mov
jo
lods
pop
ret
jp
inc
pop
repnz
shlb
ds
cmpsb
fidivrs
xchg
mov
mov
adc
testl
es
lret
ret
test
adc
mul
sub
mov
lret
add
or
lcall
add
sbb
mov
xchg
or
pushl
dec
sub
mov
push
scas
ret
sets
sahf
xrelease
out
mov
bnd
out
mov
jae
insb
mov
add
sti
aas
loope
into
pusha
mov
mov
mov
hlt
pop
pop
cmp
insl
leave
cmp
adc
cltd
inc
xor
cmpsb
jnp
popf
inc
out
je
adc
ret
ret
jl
dec
cmpsl
push
in
cmp
out
aaa
lret
out
xchg
sbb
test
push
sbb
les
push
push
popf
mov
outsb
test
sub
inc
pop
out
cmp
dec
int
pushf
sbb
or
cli
mov
test
xlat
fwait
cmp
les
push
mov
and
push
les
mov
lea
adc
inc
push
xlat
cld
psubsb
dec
cltd
cld
add
lock
fnsave
lds
aam
or
je
insb
or
enter
cmp
inc
push
les
imul
pop
pop
mov
push
loopne
cmpsb
sub
add
mov
cli
inc
adc
push
mov
jbe
xchg
loopne
mov
mov
loop
fcoml
clc
and
call
xchg
push
rorl
lahf
ds
xor
and
sub
sub
add
inc
pushf
test
mov
mov
je
inc
or
and
and
pop
or
xchg
lret
inc
pop
inc
outsb
fstpt
sub
jmp
das
repnz
in
adc
adc
adc
xchg
mov
lcall
test
adc
pop
xor
imul
push
test
jg
aam
xor
out
vandnps
icebp
xchg
inc
cld
pop
pop
ret
stos
out
sbb
movsl
fsubrp
gs
roll
sbb
mov
in
pop
iret
lock
add
js
cmp
lcall
scas
jmp
cmp
in
sahf
scas
push
xlat
fcmovnbe
xchg
ds
mov
int
fwait
and
fstl
dec
push
or
addr16
xchg
jbe
rolb
insb
pop
stos
sbb
sahf
leave
sub
sbb
subb
jge
push
les
in
cmp
dec
pusha
insl
rcrl
stc
loope
lcall
shll
test
sarb
inc
pop
dec
pop
jl
cmp
sbb
popa
aas
daa
inc
bswap
adc
out
cld
push
popl
in
scas
fcompl
outsl
mov
mov
inc
push
lea
jne
data16
fbstp
stc
sbb
xlat
mov
push
popf
ret
lahf
mov
mov
push
divl
push
cmpb
test
jmp
cmp
and
out
mov
jno
leave
imul
sahf
mov
mov
jne
fs
test
mov
pop
xor
add
out
repz
or
fadd
push
adc
aas
es
rcrl
add
sub
cmp
lock
out
addr16
mov
mov
push
fildl
mov
adc
mov
pop
inc
mov
xlat
inc
jmp
push
sub
xor
adc
dec
sub
sbb
sbb
enter
jp
xchg
adc
pop
mov
add
push
sbb
ret
decl
sbb
mov
out
mov
mov
jns
or
or
shll
je
mov
mov
adc
dec
inc
adc
cmp
jmp
and
cmp
push
int3
ds
inc
push
pop
push
xor
adc
jo
lods
or
sbb
out
mov
mov
out
mov
xchg
mov
and
push
mov
xor
sbb
leave
sub
jge
inc
jbe
lods
stc
mov
xorb
fildl
imul
cwtl
mov
fbstp
cld
push
vandnps
inc
ljmp
push
pop
popf
mov
lods
add
mov
cmpsl
jbe
xor
cmp
pop
jp
add
movsl
jns
shll
int3
xor
in
dec
js
mov
shl
ljmp
push
xor
or
cmp
cli
lret
cmpsb
pop
loope
daa
pop
push
xchg
mov
pop
enter
pusha
cmpsb
imul
jo
mov
xor
out
push
add
xchg
jp
inc
push
inc
fstp
in
aaa
shl
cmpsl
loopne
fsubrs
icebp
add
jmp
mov
ss
lret
jmp
inc
test
and
test
sbbb
test
inc
hlt
pop
out
cmpsl
xchg
xor
test
dec
mov
lea
aas
adc
jl
xor
jo
push
and
dec
push
xor
jne
add
xchg
adc
in
into
add
loop
dec
rclb
jmp
add
xchg
lret
jns
aam
jne
push
shrb
lret
call
adc
shll
es
in
iret
mov
mov
fistpll
movsb
lcall
das
mov
adc
test
hlt
pushf
inc
leave
fcomps
push
ja
lods
mov
cmp
scas
and
aas
gs
jb
fidivrs
shlb
jo
or
mov
push
sub
out
jg
aas
fnstenv
mov
scas
dec
in
push
xor
dec
xchg
add
sbb
xchg
ja
rcrl
mov
pop
inc
notl
lret
data16
das
mov
and
push
movsl
add
push
fs
cs
mov
movsb
xlat
std
push
popf
imul
jb
jns
loope
mov
jge
cmp
mov
pop
inc
hlt
lret
xor
bound
mov
add
pop
lcall
pop
mov
sahf
jb
popl
hlt
dec
pop
cld
cmp
rorl
sub
jecxz
stc
insb
mov
pop
cld
test
orb
out
enter
loop
sbb
fwait
imul
shrb
adc
aas
test
jp
pop
push
mov
cld
mov
into
or
outsl
ret
pop
shrl
mov
push
lret
fs
push
stos
stc
sub
addr16
xchg
scas
and
and
sbb
fwait
xchg
and
loope
mov
jmp
jl
fld
and
sbb
scas
gs
jno
rolb
popf
cmpsl
inc
push
sub
or
dec
dec
jge
push
sbb
in
dec
dec
outsl
mull
ret
pop
pusha
imul
fwait
shl
cmp
test
sti
cmp
sub
bswap
rol
and
fs
lods
stos
addr16
add
mov
arpl
add
sub
pop
int
sbb
xor
scas
push
and
adc
pop
mov
sub
jecxz
ja
loop
add
out
cmpsb
sti
repz
sahf
stc
xchg
out
movsb
pusha
mov
sarb
rorl
add
add
push
push
mov
jecxz
pushl
fsubrl
dec
les
mov
sub
xchg
adc
ret
inc
mov
aas
cmp
lret
push
pop
rorb
out
push
pop
loop
pop
mov
cld
shl
rol
bound
and
and
lods
fisttpl
pop
inc
aaa
add
nop
loope
mov
adc
push
mov
cld
fs
insb
sbb
inc
imull
add
pop
cld
and
das
js
or
movsl
cmc
mov
jns
push
dec
pop
test
outsb
xchg
xchg
cmpsb
xlat
mov
into
fldl
adc
inc
cmp
insl
mov
mov
rcr
sbb
arpl
push
ss
test
push
jns
int
cs
jae
cmp
andb
push
ret
sub
outsl
imul
into
sti
test
subl
pop
pop
aad
loop
mov
cwtl
push
inc
or
popa
mov
mov
or
daa
add
dec
lcall
movsb
and
cmp
mov
adc
les
stc
push
mov
sbb
dec
stc
repnz
sbb
dec
sbb
xchg
xchg
push
and
jo
mov
cmp
cmp
arpl
dec
imul
jae
dec
lret
rcrb
and
js
mov
aas
insb
and
or
inc
fcoms
fcomi
adc
clc
mov
enter
xchg
mov
into
lret
adc
push
int
shl
pop
jp
cld
outsl
aaa
lds
outsl
push
sub
mov
fsts
fwait
mov
std
inc
pop
or
or
fisubrl
cmc
cmp
cwtl
mov
or
sti
out
push
mov
dec
cmpl
push
mov
jne
inc
cltd
xchg
dec
push
imull
lods
ds
pop
clc
ret
mov
pop
cld
fsub
cld
sbb
adc
shlb
jle
jp
dec
pop
jno
insl
scas
xor
mov
jge
out
adc
adc
add
sarl
mov
xor
jno
cmp
and
pop
sub
lea
punpckhdq
arpl
mov
pop
daa
adc
mov
add
int
stc
pop
lock
adc
dec
mov
cmp
add
imull
stos
cmp
ret
movsb
ja
popa
inc
add
jle
inc
add
mov
add
fcomp
or
cmp
and
int3
mov
mov
dec
mov
test
adc
jp
dec
dec
out
mov
fwait
pusha
dec
test
and
mov
outsb
inc
clc
in
int
cmp
jmp
pop
je
xchg
cmp
push
mov
dec
push
cwtl
test
xchg
push
insb
popa
mov
ss
jp
das
in
aaa
dec
add
aas
mov
andl
sahf
sub
pop
mov
or
mov
mov
xor
and
mov
mov
sbb
sub
hlt
xchg
imul
mov
aaa
mov
pop
mov
jno
jns
lds
cmp
pop
or
pushf
in
xchg
mov
cmpsl
cmp
lods
out
rclb
dec
je
int3
adc
mov
mov
xchg
cmp
sbb
mov
andl
adcb
cli
mov
ss
sub
out
pop
lret
gs
pushf
ljmp
mov
push
jg
sbb
mov
xor
push
xchg
test
mov
sub
cmc
push
push
cwtl
mov
dec
sub
pop
pop
shlb
sub
leave
sahf
pop
mov
xchg
push
sub
inc
jbe
fmul
sti
in
xchg
out
movsl
xor
in
or
sbb
int
sub
add
inc
sub
es
inc
sub
mov
mov
movsb
rolb
and
lahf
and
fs
sub
daa
xchg
jne
xchg
fildl
pop
and
lret
push
xchg
cltd
inc
dec
in
pop
cmp
lcall
sub
test
mov
pop
mov
test
cmp
in
adc
jno
aam
int3
jg
jecxz
jl
jecxz
sbb
pop
sub
fwait
inc
inc
sub
and
xlat
jmp
loop
div
test
fcompl
xor
mov
in
and
cmpsb
pop
enter
sbb
shl
mov
dec
dec
mov
fsubrs
int3
sbb
aam
out
mov
add
sub
shll
div
xchg
push
cmp
adc
fucomip
scas
jno
loope
fwait
inc
lret
stos
pop
and
sbb
ret
incb
aad
fnstcw
cld
call
sbbb
stos
sarb
iret
jo
sub
jg
cmpsb
ja
enter
mov
xchg
xchg
jbe
pop
adcl
add
cmc
mov
in
push
jmp
fnstenv
daa
leave
mov
fisubs
cwtl
xchg
jmp
adc
adc
mov
cmp
jmp
hlt
outsb
fsubrp
xor
sbb
push
push
pop
dec
into
lds
pop
stc
call
dec
pushf
jecxz
popf
push
xor
mov
jae
mov
sub
jge
xchg
imul
imul
sub
push
sbb
xchg
enter
cmpsb
add
mov
loopne
or
jno
fldt
pop
jp
mov
test
pop
dec
push
xchg
dec
xchg
dec
fwait
es
andl
aad
rolb
test
ret
xorl
and
mov
sahf
out
inc
add
fsubrl
out
xchg
xchg
jle
push
mov
sarl
add
pop
cmp
dec
stos
xchg
xlat
shl
shlb
pop
rcr
cwtl
adc
das
popa
fsubrs
mov
aaa
cmpsb
add
jne
cmc
dec
popa
xor
jbe
stos
das
xor
push
ret
aas
add
ror
cwtl
mov
mov
sub
sub
dec
jb
cmpl
sub
sbb
sbb
jg
test
or
or
ror
push
pop
mov
rcrl
pop
shlb
pop
dec
pop
dec
add
push
add
scas
mov
jbe
out
sub
cld
sbb
xchg
and
pusha
data16
sub
push
jmp
xor
pop
xchg
cmp
sub
cmp
sbbb
dec
and
mov
fs
pop
aaa
and
and
jle
das
add
fdivrl
ds
flds
dec
mov
and
pop
xorb
fwait
jne
insl
mov
xor
or
and
hlt
outsb
inc
movsl
lds
clc
pop
pop
push
fs
sar
insb
xchg
push
aam
das
fdivrp
push
lods
aaa
int
pop
dec
jge
push
add
ret
icebp
inc
cmpsb
sub
in
lock
sarl
mov
adc
out
cmc
jge
out
ljmp
std
and
in
mov
add
insb
ss
clc
or
ret
ret
fbstp
lds
push
je
idivl
add
xor
or
jno
enter
adc
mov
shlb
aaa
or
loopne
sarl
add
dec
mov
ja
xchg
test
jo
insb
sub
xchg
inc
in
jle
push
mov
push
mov
cmp
push
or
cmp
fcomi
addr16
cmp
rorl
push
mov
cltd
pop
test
int
jge
das
inc
aaa
mov
cs
push
pop
mov
dec
sbb
dec
push
shlb
insl
mov
test
mov
mov
inc
dec
arpl
or
xchg
mov
pop
mov
stos
cs
aaa
add
and
sub
push
adc
and
xor
xchg
movsb
lret
xor
shl
xor
insl
aas
inc
ret
cwtl
mov
lcall
mov
cmc
ja
aad
decl
xchg
push
mov
aaa
sahf
fidivl
inc
push
pop
ja
inc
aad
inc
sarl
sahf
fs
push
das
push
sub
pop
xchg
sub
pushf
testl
loopne
ja
rclb
stc
cli
fwait
mov
rcr
filds
cmc
cmp
inc
fcomps
xchg
repz
mov
mov
pusha
in
in
cmp
push
rcrl
in
mov
xchg
pop
jne
mov
push
scas
sub
jne
stc
inc
pop
inc
inc
xchg
jae
in
lahf
inc
divb
push
mov
stc
fsubrs
bound
test
sarb
add
jecxz
loopne
std
mulb
jbe
xor
xchg
jg
sbb
mov
fcompl
jge
sbb
lahf
pop
jg
cmp
mov
mov
pop
jmp
mov
out
adc
int3
test
imul
mov
xor
fwait
shlb
mov
mov
test
xchg
cmp
icebp
cwtl
arpl
int3
ficoml
pop
xchg
loope
cmp
or
in
jae
inc
addr16
jne
lahf
pusha
dec
lds
aad
mov
inc
dec
sbb
mov
or
or
pop
adc
push
mov
dec
cmp
movsl
shlb
loope
popa
dec
call
ss
mov
std
jb
sarb
mov
xor
push
mov
js
arpl
and
mov
dec
inc
aad
les
inc
loopne
adcb
pusha
in
cltd
sbb
jbe
sub
int
movsb
mov
cmp
add
lcall
sub
bound
cwtl
pop
ret
adc
inc
lcall
je
sbb
mov
sub
dec
lret
xor
or
imull
lcall
lea
sbb
push
aas
mov
mov
in
loopne
xchg
mov
cmpsl
testb
aaa
lock
pop
xor
sub
movsl
push
into
mov
adc
sub
sti
or
xor
outsl
adc
mov
lret
sbb
xchg
jne
adc
xchg
outsb
ja
imul
test
loopne
and
xor
xchg
insb
add
cs
sbb
movsl
loopne
sub
or
ret
addr16
push
add
push
iret
divb
mov
inc
mov
dec
sti
int
pop
aaa
into
jp
lret
dec
adc
aam
stos
xor
xorl
in
or
shll
push
cmp
test
stos
shll
stos
pop
aam
jnp
cmp
xor
clc
push
add
sub
in
in
nop
or
ss
aas
out
pop
xchg
sbb
dec
daa
aad
leave
ds
add
add
fisubrl
push
bound
or
push
fimull
outsl
cmpsb
roll
sbbb
mov
ss
fstpt
add
testl
les
aad
out
add
xchg
jp
outsl
cmpsl
clc
pop
push
sub
js
outsb
daa
mov
popa
and
xchg
pop
pop
mov
addr16
mov
xor
pmulhuw
out
mov
fmull
mov
scas
pop
or
lock
ficomps
enter
stc
fdivl
mov
or
adc
mov
jnp
cwtl
or
mov
xchg
push
lret
and
jle
movsb
add
inc
addr16
aas
xchg
mov
int3
int3
xchg
pmulhuw
cmpsb
icebp
into
inc
jne
insl
cmp
push
or
mov
mov
or
stos
xor
fs
inc
inc
pop
xor
das
jge
js
push
mov
jp
mov
mov
xchg
gs
outsb
ss
loopne
or
nop
loop
xorl
das
xor
or
stc
mov
out
mov
pusha
fldt
adc
jns
and
inc
xchg
out
and
xor
testb
or
lock
in
and
adc
int
imul
ljmp
lock
dec
jg
enter
in
push
push
adc
push
nop
sbb
cwtl
fs
jne
lds
adcl
ret
repnz
loopne
jl
fs
lahf
jmp
xchg
fwait
pushf
inc
sbb
aam
and
push
push
mov
adc
ljmp
or
iret
lods
clc
add
xor
lock
add
jg
adc
jbe
sbb
sahf
dec
outsl
loopne
call
mov
xchg
adc
mov
and
or
insl
jge
out
test
insb
jo
and
in
fsts
mov
cmp
adc
popf
cmp
mov
and
mov
sub
jmp
add
lock
movsb
aas
stc
xchg
sbb
ret
test
das
faddl
mov
xor
fsubl
arpl
daa
push
add
loop
fstpl
stos
in
mov
imulb
daa
pop
jmp
repnz
mov
les
stc
out
daa
sub
je
scas
in
cmpl
cmp
imul
sub
xor
fistps
adc
fistpl
pushf
out
push
add
stc
jl
lret
xchg
xor
fdivl
push
lods
jb
push
xlat
dec
xchg
sbb
xor
add
sarb
fistpl
pop
xor
imul
sub
jecxz
sbb
pop
std
mov
es
adc
xor
cmc
sub
sub
sbb
or
mov
fildl
dec
rcl
test
adc
sub
negl
loope
gs
je
in
in
jno
jb
fs
lds
ljmp
sub
nop
sbb
dec
sbb
stos
loopne
cmpsl
test
into
add
stos
sti
imul
xchg
jns
sub
push
aaa
sub
mov
push
mov
ss
mov
jae
push
std
xor
xchg
xor
mov
movl
mov
hlt
pushf
mov
and
mov
cwtl
jns
xchg
test
xchg
push
mov
mov
pop
dec
rorb
lea
xchg
push
xor
jl
xlat
arpl
or
jnp
cli
sub
sbb
mov
fs
scas
cld
enter
pop
inc
xor
xchg
and
icebp
xor
aad
and
pop
mov
ljmp
pop
fnstsw
adc
in
jmp
dec
imul
push
fcoml
scas
bound
jmp
push
lahf
repz
mov
and
sub
add
dec
mov
int
mov
push
sub
push
mov
aaa
mov
mov
jo
faddl
dec
shl
mov
ret
jge
shr
ficomps
or
lahf
xchg
or
or
inc
sbb
outsb
mov
sbb
fisubrs
int
scas
ljmp
dec
pop
dec
and
xchg
ror
add
ds
jge
clc
inc
or
mov
mov
shl
pop
outsb
test
cld
or
adc
adc
and
and
lds
pop
push
jbe
cmp
les
sub
fstpl
loope
or
fdivrl
sub
stos
hlt
inc
ret
pop
xor
add
leave
shll
imul
mov
xchg
xchg
fwait
outsl
push
jl
xchg
push
jo
dec
mov
dec
cld
mov
lahf
push
push
popa
insb
pop
inc
sub
mov
xchg
or
xchg
mov
add
pop
je
sub
adc
xchg
dec
pop
xchg
cmp
inc
jbe
mov
cld
inc
les
repz
loop
add
jne
dec
inc
dec
mov
pop
dec
sbb
push
xchg
sbb
clc
and
sub
iret
clc
and
push
mov
lds
or
call
fidivl
mov
aad
mov
mov
sbb
pop
stos
push
mov
movsb
sbb
mov
nop
pop
ja
out
or
movsb
es
cli
dec
ja
test
or
xchg
jns
pop
cmp
dec
inc
cli
fsubrp
lock
jo
pop
adc
gs
jnp
cmp
in
loop
mov
xchg
adc
loope
pushf
pusha
jge
push
cltd
insb
arpl
or
ret
stos
inc
cwtl
testl
push
add
mov
jp
lds
test
dec
out
rcl
enter
test
dec
or
int
and
nop
out
mov
shrb
shrl
xor
mov
test
jns
add
lods
testb
sbbl
lret
mov
add
test
into
fs
sarb
push
mov
nop
lea
jle
daa
orb
sahf
int3
testl
xor
or
sub
adc
cltd
mov
jg
push
inc
imul
mov
and
frndint
shrl
mov
sbb
cwtl
add
shlb
and
xor
rorl
fstps
mov
mov
dec
imul
lret
add
clc
mov
ror
fisubl
and
push
imul
sub
loope
jl
sysexit
jae
jb
sbb
adc
das
cmp
dec
dec
sbb
jle
xchg
lods
xchg
cmp
dec
out
jp
mov
iret
ljmp
mov
add
xchg
sti
or
and
cmp
inc
mov
xor
aam
out
jg
xchg
push
jle
testl
std
loope
sbb
pop
or
lods
dec
ret
push
jmp
pop
mov
add
aaa
iret
xchg
jmp
imul
add
push
cmpsl
mov
jae
addr16
jnp
adc
mov
inc
imul
fwait
sbb
mov
or
out
inc
lahf
decl
xchg
movl
sub
sbb
xchg
adc
es
ret
out
sub
or
jecxz
into
xor
stos
in
jl
ret
push
pop
mov
and
pop
movsl
or
mov
outsb
test
add
fwait
dec
or
ficoml
fiaddl
aad
jp
add
and
popa
adc
jne
xorl
inc
imul
into
pop
jle
or
add
xchg
inc
dec
jns
cmpsl
dec
jns
pop
scas
adc
lds
bound
jmp
or
fmul
xorl
or
das
cmpsb
lret
mov
lret
mov
xchg
sti
cmpb
xor
imul
daa
xchg
rcll
mov
test
or
mov
mov
imul
fsubs
cmp
jae
int3
shrd
jmp
mov
mov
push
outsb
and
ret
or
mov
lods
in
sub
sbb
xor
sub
jns
mov
sbb
mov
jge
xchg
and
pop
cmp
data16
fildll
mov
pushf
and
dec
push
jbe
test
arpl
jle
call
pop
adc
cmp
sbb
out
adc
call
and
sub
js
pop
insl
push
pop
jmp
inc
movsl
xchg
call
stos
rorl
push
mov
aad
jle
xchg
movsl
fildl
sbb
les
loop
pop
cmp
inc
fldt
lahf
mov
data16
jne
and
jb
adc
xor
test
mov
cli
pushf
imul
cli
shrb
dec
pop
and
insb
and
insb
pop
add
xor
add
test
pushf
inc
mov
ja
int
test
xor
cmc
lds
bound
test
hlt
repnz
lahf
pop
push
mov
add
dec
cwtl
insl
sbb
aad
xor
xchg
lret
sbb
mov
lea
cmpsb
test
lret
in
int3
rolb
rorl
fs
xlat
adc
subl
dec
xchg
sahf
pop
and
mov
or
adc
ficoml
fcoml
inc
push
rcll
jl
push
test
and
or
insb
mov
jo
cmp
mov
push
movsl
xchg
mov
aam
lcall
stc
cmp
sahf
lods
sub
mov
cmp
imul
cmpsl
xor
fnsave
cmp
movsb
adc
xchg
sbb
jl
scas
jbe
and
imul
cmp
sbbl
or
out
cmc
popa
gs
mov
and
fcomps
rcll
sub
mov
mov
cmpsb
sub
push
nop
mov
sub
test
ret
loope
fdivl
and
movsb
out
sbb
js
sub
test
mov
sub
sbb
stos
mov
inc
cwtl
pop
repz
lea
out
popa
js
or
or
cwtl
pop
push
mov
mov
pop
xabort
cld
xchg
clc
xor
fs
loope
int
outsl
cmp
push
clc
xchg
mulb
inc
std
jge
out
dec
icebp
test
and
cmpsl
pop
inc
sub
ljmp
mov
cmp
or
mov
and
adc
out
orb
aad
pop
pop
push
add
stc
push
mov
icebp
imul
sub
pop
shrb
cwtl
lods
mov
jae
stc
xchg
mov
cwtl
test
out
iret
cwtl
inc
mov
pop
add
mov
mov
push
fstpt
test
outsb
adc
hlt
adc
jno
pop
pushl
mov
pusha
xchg
jns
fstpl
das
or
imul
adcb
mov
xchg
sbb
pextrw
sbb
lret
movsl
shl
push
push
popa
and
ret
sub
cmpsb
push
add
jo
push
inc
test
jecxz
pop
mov
sbb
inc
xchg
shlb
jb
ljmp
mov
aas
jno
or
cmp
lds
pop
sbbl
mov
scas
push
lcall
cltd
sysenter
sub
jo
push
outsb
mov
and
rol
or
fsubrl
rcrl
mov
xchg
or
jecxz
pusha
ret
aad
sub
fsubrs
fiaddl
shrb
and
xchg
into
add
sarl
loope
sbb
dec
std
loopne
gs
cmpb
int
cmp
jae
movsl
push
adc
inc
cltd
mov
cmc
insb
bound
mov
int3
jp
in
shr
dec
dec
inc
push
inc
sbb
cld
iret
cmp
pop
popa
sub
ds
cmc
xchg
dec
cli
mov
adc
jnp
dec
outsl
std
inc
mov
arpl
std
icebp
push
jmp
push
popa
repz
insb
cld
jg
in
sbb
push
lret
movsl
cmc
sti
sub
sub
lods
mov
test
cs
outsl
imul
outsb
xchg
jmp
inc
in
shlb
lods
aad
cmpsb
mov
fnsave
push
mov
push
mov
shll
add
adc
insb
ds
ret
movsb
add
and
imulb
or
gs
mov
sbb
xchg
in
sub
xchg
or
xor
sbbl
aaa
lea
adc
imul
adc
int
or
cmp
xchg
push
jp
shr
inc
std
cltd
pop
jno
aas
into
shlb
daa
cmp
cmp
mov
loop
mov
repnz
loopne
fxch
jnp
mov
mov
inc
cmp
enter
pop
pop
mov
xor
cld
addr16
inc
mov
push
outsl
push
sub
lret
xor
xor
imull
mov
test
jle
repz
cli
mov
push
fcoml
push
in
fwait
test
xchg
mov
jbe
jecxz
leave
incb
popf
std
iret
insb
cmpb
and
add
add
adc
xorb
lds
lea
bound
sbb
jo
add
popa
or
or
jns
push
ret
add
sbb
mov
mov
mov
rorl
lret
xor
fisubs
xchg
add
push
pop
int
mov
xor
pop
inc
andb
mov
repz
fdivl
and
movsb
das
mov
sti
or
pop
xchg
cmp
outsb
repz
mov
sahf
adc
sub
jb
mov
or
xchg
repz
jmp
jae
nop
cmpsl
scas
aam
adc
mull
rol
ja
arpl
cmp
and
sti
xchg
adc
lea
ss
scas
inc
mov
push
or
dec
loop
out
daa
and
mov
sti
adc
pop
sarl
mov
es
push
sub
push
enter
jns
daa
xor
insl
add
imul
cmp
jge
sub
add
aaa
lea
push
jnp
aaa
ds
sbb
es
je
cmp
inc
sbb
adc
fisubl
jp
aas
xchg
or
mov
test
pop
dec
rcrl
cld
insl
gs
xor
jmp
xor
jae
cmp
and
mov
pop
push
insl
sub
sbb
pop
ja
mov
xchg
fsubr
mov
mov
fimuls
cmpsb
sbb
jne
loopne
clc
in
in
push
sub
stos
mov
sbb
adcb
pop
or
int3
aad
mov
cmp
div
mov
xor
sti
inc
xor
and
xchg
cmp
jl
add
dec
adc
test
pop
mov
inc
outsl
lret
pop
hlt
cltd
push
inc
jae
repnz
fisttpl
mov
pusha
mov
aam
fs
idivl
sbb
pop
pop
mov
mov
xlat
add
or
dec
xchg
and
and
dec
insl
popa
fwait
jb
call
lea
add
test
aas
cmp
in
adc
hlt
test
test
lret
fwait
xor
and
fcom
imul
loope
imul
lahf
stos
adc
shr
mov
pushf
mov
enter
fistps
out
outsb
mov
test
movsl
imul
or
push
adc
inc
inc
std
push
mov
dec
inc
mov
sti
pop
ds
xchg
test
jp
shll
in
adc
adc
mov
pop
data16
repnz
mov
mov
inc
pushf
aas
dec
in
nop
push
fs
icebp
fsubl
cmp
push
loop
cmp
push
dec
jb
push
icebp
scas
xlat
ss
daa
loope
push
loopne
mov
cmc
cmp
call
mov
xchg
sbb
daa
dec
into
loope
xchg
rclb
loope
and
cwtl
jmp
jbe
aad
aad
gs
xchg
out
cmp
dec
leave
pop
cmp
aaa
loopne
cmp
sbb
out
fmull
sub
cmpl
int
mov
ficoms
or
cmp
push
mov
jns
jae
push
fists
sti
or
and
mov
mov
in
push
pushf
pop
and
loope
movsb
test
mov
aas
jecxz
ljmp
mov
pop
sahf
aam
inc
or
sbb
adc
jb
std
out
mov
mov
mov
icebp
mov
and
sbb
xor
xorb
gs
jg
jae
push
fcoms
icebp
movsl
and
fisubrl
lahf
cmp
jae
popf
stos
xchg
xchg
and
sahf
pop
lods
notrack
enter
rorb
cmc
mov
xor
jae
jmp
mov
inc
jl
rorl
or
sub
xorl
fs
aaa
fisttps
hlt
xor
outsb
ret
lret
scas
and
test
mov
pop
jecxz
gs
andb
adcl
data16
dec
sbb
push
call
adc
pushf
mov
jo
sbb
pop
jg
aam
sbb
stos
pop
lods
mov
mov
jge
cmp
cmp
pop
inc
sub
mov
mov
lea
or
imul
mov
and
ljmp
cmp
out
xchg
mov
adc
daa
jmp
aaa
rorl
movsl
test
popa
int3
xchg
das
ss
mov
outsb
push
push
jmp
sbbb
adc
mov
jnp
cmpb
rol
add
inc
inc
lods
pusha
jno
push
fdivrl
sti
mov
push
jns
add
lods
sub
sub
inc
inc
pop
addr16
dec
mov
aam
push
cmpsb
aaa
cmp
or
jl
scas
xor
test
sub
xor
xor
test
push
fisttps
adc
mov
fisttpll
cmp
sub
push
cld
and
nop
pop
aad
jg
lcall
imul
cltd
out
fwait
dec
pop
jecxz
and
adc
sbbl
dec
lods
xchg
adc
add
xorl
in
jmp
scas
je
arpl
mov
and
inc
call
enter
cmp
mull
xchg
xchg
dec
jo
je
popa
fnstcw
lret
in
scas
gs
mov
xor
dec
imul
inc
pop
out
ja
sarb
out
movsw
lahf
lds
ret
fwait
aad
movsl
loopne
inc
xchg
jle
cmp
int
mov
mov
inc
je
cmp
xor
dec
call
xchg
stos
mov
and
outsb
fwait
pop
xchg
mov
movsl
aas
cmp
ds
mov
or
nop
xchg
test
std
push
lahf
cld
dec
add
insl
pop
add
add
inc
rolb
popa
xchg
xchg
dec
mov
lret
xor
mov
std
sub
lret
mov
xor
mov
mov
arpl
jae
imull
je
out
out
fld
into
jnp
sub
pop
push
jmp
push
test
in
push
sbb
mov
dec
push
notl
out
mov
bound
adc
arpl
sub
icebp
and
or
sbb
outsl
es
out
add
data16
push
scas
xchg
outsl
push
dec
imul
bound
ret
mov
xchg
push
xor
jp
pop
in
loop
add
and
xchg
and
mov
add
into
xchg
cmp
push
sbb
mov
xorb
sbb
fnstenv
or
addr16
into
insl
xchg
insb
mov
cmc
xor
jp
mov
adc
enter
xor
lret
pop
hlt
stos
sbb
lret
cmp
fucomi
scas
int
push
pop
in
mov
xor
testb
dec
leave
lahf
add
outsl
popa
mov
sti
inc
insl
pop
fstl
pop
or
add
enter
insl
je
inc
mov
lock
push
dec
jp
pop
mov
sbb
aaa
dec
adc
sbbl
aas
shll
mov
pop
mov
loopne
dec
mov
in
dec
imul
xchg
dec
pop
test
fisubrl
mov
dec
shl
fs
mov
fwait
dec
mov
pop
sub
add
mov
push
adc
insl
or
orl
lds
das
lods
shlb
mov
jne
adc
cli
pushf
adc
push
dec
sub
jns
enter
and
sbb
fxch
mov
enter
add
inc
xchg
iret
mov
imul
mov
pop
push
repz
pop
call
pop
call
negb
jae
xchg
push
sbb
inc
mov
push
sarb
jne
inc
xor
jnp
push
sbb
mov
and
ljmp
sbb
inc
mov
mov
loopne
lahf
fwait
shl
jbe
aas
dec
cli
cmpsl
jecxz
mov
xor
into
scas
into
das
call
jae
outsb
sbb
jmp
mov
and
push
jg
inc
xchg
adc
xlat
pop
xchg
jge
stos
or
mov
push
pop
and
shlb
jns,pn
decl
int
in
rcrl
data16
adc
xchg
or
rolb
cmp
adc
cmp
cmp
in
ja
mov
loopne
ja
and
rcrb
popa
movsl
pop
icebp
in
xchg
jb
out
movsb
dec
ja
pop
fstpl
daa
std
jl
push
xchg
in
jb
jb
fisubl
das
cmpsb
popf
pusha
push
fnstsw
andb
loop
cmpsb
adc
sub
out
dec
enter
mov
adc
rcr
sbb
test
lcall
loopne
lcall
or
ss
fsubr
into
div
js
and
push
in
and
mov
xchg
xor
or
cs
fs
cmp
shll
fcmove
lcall
stos
inc
ss
mov
mov
mov
dec
add
mov
iret
leave
mov
cli
rcrw
add
add
jns
mov
popa
xchg
scas
cmp
dec
ret
mov
pop
in
rol
pop
push
xchg
out
repz
ret
sub
or
cmp
inc
data16
mov
out
loop
mov
or
pop
jns
mov
decb
test
push
shll
jnp,pn
adc
mov
dec
push
mov
shrl
je
xchg
int
out
cmp
test
sub
sub
mov
mov
cmp
aaa
stc
push
mov
popf
or
and
ljmp
andb
pushf
ljmp
inc
scas
scas
inc
pop
mov
subb
push
xchg
xchg
cltd
add
sub
andl
xor
inc
jecxz
nop
les
cmpsl
and
add
out
mov
mov
outsl
rcrb
jge
inc
cmp
jecxz
popa
mov
xor
outsl
jns
imul
add
dec
push
ss
cmp
push
mov
shlb
push
in
cmp
out
inc
push
aas
idivb
jecxz
mov
pop
ret
cmpl
sbb
mov
xor
jnp
out
jo
movb
push
mov
lods
xchg
mov
sbb
jns
mov
dec
sbb
fistps
mov
insb
jp
add
aad
cmp
push
and
stos
and
aas
add
orb
sbb
adc
xchg
lret
push
test
filds
xchg
adc
les
mov
test
mov
mov
cmp
loope
push
pop
cmp
push
cmp
pmuludq
jne
add
scas
adc
xor
lods
adc
stos
jne
xchg
pop
in
mov
int
das
sub
in
hlt
in
fs
rcl
aaa
loop
xchg
imull
cli
fdivl
xchg
dec
mov
fs
je
sub
les
roll
nop
add
loopne
jecxz
sahf
pop
xchg
sub
fimull
push
add
pushf
sbb
jns
arpl
inc
adc
imul
inc
scas
nop
inc
or
sbbb
scas
mov
mov
dec
sbb
xor
adc
jo
mov
mov
idivl
fsubrl
into
shlb
ljmp
mov
mov
jo
xor
mov
hlt
xor
addr16
inc
inc
fbld
enter
ja
sbb
mov
lret
jecxz
fsubs
test
sahf
add
repz
pop
inc
loope
or
ret
jmp
out
cltd
adc
in
leave
mov
push
addr16
dec
sbb
mov
mov
popf
das
test
movsb
aam
xadd
pop
xor
pop
outsb
add
push
mov
int3
popf
std
fsubl
push
cmp
cmp
jmp
mov
in
mov
leave
and
mov
je
adc
sub
arpl
inc
jp
adc
xchg
mov
xor
and
ret
imul
add
sub
into
push
lcall
add
pop
cmc
sbb
in
aad
xchg
xchg
outsl
cltd
mov
mov
inc
lcall
data16
push
mov
pop
dec
mov
push
sub
std
enter
gs
push
shll
cmp
cmp
and
fwait
xchg
push
shl
xor
adc
mov
cmpsl
insb
and
push
out
fistpl
lods
push
sbb
pop
cmpsb
loope
add
mov
in
lds
mov
lock
cmp
cmp
sub
jae
mov
xor
bound
add
xor
xchg
arpl
insb
insl
clc
fidivl
addb
fs
loope
icebp
out
sbb
mov
cld
loop
js
mov
jge
loop
test
mov
add
jae
les
jmp
test
push
out
fisubrl
outsb
mov
push
mov
fisubs
fisttps
fcomps
lahf
push
enter
sbb
jle
sub
lea
mov
dec
sbb
bound
in
loop
jne
cmp
rolb
mov
mov
mov
mov
xor
adcb
fimull
mov
mov
insl
xchg
int3
adc
ljmp
add
mov
not
out
push
arpl
fst
cld
in
pushf
test
push
add
enter
or
or
cmp
cmp
test
imul
mov
push
fs
test
ret
ljmp
popa
add
cmp
pop
sahf
add
xchg
enter
sub
mov
mov
pop
add
push
push
das
dec
in
fwait
xor
jg
xor
ja
mov
data16
test
pop
leave
imul
hlt
out
inc
sbb
lock
cmp
cld
fisubrs
jecxz
or
push
cmpsl
pop
repnz
sub
insl
in
xlat
aas
bound
popf
sahf
mov
jae
add
sub
cwtl
pop
push
hlt
mov
cmp
jns
pop
push
repz
xorb
push
lret
jae
fwait
int3
add
inc
and
mov
aaa
aad
sub
popa
dec
shll
add
xor
pop
aad
test
and
sub
in
out
dec
imul
dec
or
addr16
in
iret
out
fld
pusha
sahf
push
sub
cli
fwait
nop
pop
scas
mov
hlt
pushf
fstpt
fdivrp
ret
mov
in
dec
mulb
sbb
or
cmpsb
sub
mov
xor
or
je
jb
lock
sbb
mov
hlt
push
dec
xchg
loopne
and
nop
lahf
and
sbb
fwait
mov
pop
push
cmpsl
lret
jno
inc
pop
add
loope
enter
cmp
xchg
test
xchg
aad
nop
or
pop
aas
fdiv
sti
sub
adc
xor
cmp
push
and
fldenv
je
aad
in
pop
lods
iret
push
cmp
mov
enter
int3
pusha
inc
and
cmp
jbe
test
mov
addr16
jnp
cmpl
mov
xor
test
imul
lret
dec
addr16
and
dec
outsl
add
push
xor
vpandn
sbb
or
movsb
cmp
dec
shll
shl
dec
enter
pushf
add
lahf
pop
clc
mov
lret
bound
cli
repz
xchg
fildl
stos
pop
jns
cmc
dec
or
dec
xchg
jo
jne
xor
jae
xor
or
lock
inc
shrl
ret
dec
rorl
in
mov
clc
mov
jne
jb
movsl
push
pop
sahf
xchg
and
icebp
roll
sub
adc
mov
neg
bound
cmc
jo
aad
pop
and
dec
mov
xlat
pushf
call
xchg
dec
mov
lret
sahf
das
pop
or
outsl
adc
xor
mov
pop
mov
stos
push
lahf
cltd
cltd
xchg
adc
mov
fidivrs
lods
ret
xor
xchg
iret
inc
jmp
dec
into
int3
dec
push
mov
lret
inc
dec
in
push
hlt
sti
cltd
iret
adc
aas
mov
ja
es
adc
jne
scas
mov
mov
and
lods
fildl
insl
repz
mov
cwtl
sub
fbstp
sti
pop
xor
mov
ror
aas
sbb
gs
test
dec
cwtl
xor
cmp
inc
outsb
cmpsl
test
fildll
push
mov
cmp
xor
iret
cmpsl
mov
cmp
xchg
mov
dec
and
ds
dec
xchg
insb
xor
test
fwait
cmp
adc
sbb
pop
clc
sti
pop
mov
and
movsb
ficomps
fistpll
cmp
adc
inc
pop
xchg
dec
add
sub
dec
adc
in
add
and
pop
les
fiaddl
mov
lea
sub
ds
ja
or
push
js
xchg
out
pop
sti
sti
pushf
popa
cmpsl
pop
out
cmp
pop
push
jbe
ss
dec
or
out
les
in
outsl
jmp
pop
add
mov
xor
popa
mov
dec
xchg
sub
jnp
xor
and
into
sbb
adc
mov
loopne
jno
and
mov
mov
int3
call
std
push
call
repz
out
jae
pop
mov
add
fnsetpm(287
mov
and
sub
and
add
jno
test
cmp
ret
sarb
shll
pop
sub
sbb
mov
sub
adc
mov
xchg
and
mov
mov
inc
dec
inc
ds
mov
std
cmp
dec
pop
sbbb
imul
mov
mov
daa
cmp
inc
pop
lea
mov
lcall
orb
jge
pop
leave
iret
arpl
cmp
xor
jmp
xchg
ja
jne
or
rcrl
repz
test
jmp
add
dec
and
in
divb
and
or
nop
jg
jecxz
and
cmp
jne
mov
mov
mov
dec
or
clc
pop
mov
xchg
adc
repz
and
mov
loop
adc
imul
xchg
mov
ja
xchg
xchg
xor
mov
mov
sub
and
daa
mov
mov
imul
or
nop
mov
pop
movsb
test
xchg
clc
mov
cmc
ljmp
mov
sub
mov
mov
mov
addr16
fwait
fs
or
pop
or
sbb
and
out
and
and
shlb
in
arpl
lods
pop
int
daa
subl
xor
xchg
out
mov
mov
clc
iret
mov
adcb
into
sbb
inc
mov
xor
lods
not
in
iret
decl
push
or
out
mov
xor
cmp
in
cmp
inc
jmp
xchg
lods
jge
mov
add
fsubrs
dec
dec
inc
or
lods
sbb
cmp
hlt
sbb
mov
out
mov
pushf
outsb
mov
imul
cmp
mov
jmp
sar
sub
icebp
enter
add
jo
loop
xchg
push
fwait
outsl
bound
in
iret
loop
jg
je
in
stos
loop
int
scas
or
int
movsl
mov
insb
mov
mov
enter
std
sbb
nop
pop
repnz
ja
movsb
out
cmpl
push
add
cwtl
out
pop
and
pushf
xchg
cli
pop
js
jae
add
test
cmp
popf
jo
and
sahf
add
and
mov
xchg
cwtl
dec
test
xchg
pop
push
out
pushf
cmp
cli
push
mov
push
xchg
lock
outsb
mov
les
lahf
adc
push
mov
into
les
stos
cmp
stc
repnz
or
xor
sahf
das
pop
sbb
xlat
hlt
jg
mov
xchg
mov
imul
lcall
jmp
jl
mov
das
add
lret
xchg
push
rorb
cmp
stc
fistps
repz
out
and
ja
push
lock
adc
xlat
jle
loope
sbb
subb
out
ljmp
sbb
pop
jb
repz
out
mov
test
movsb
dec
push
enter
lods
xchg
fstps
ja
sbb
sbb
adc
out
cmc
out
orb
scas
dec
addr16
lsl
fsubrl
push
divl
lds
fldcw
adc
pop
mov
mov
inc
push
sub
out
inc
andb
imul
pop
mov
cmpsb
fucomp
jne
inc
adc
in
out
xor
dec
aaa
scas
fcompp
or
scas
enter
xchg
je
mov
loope
testb
jge
les
mov
ds
imul
dec
mov
or
cmp
outsl
mov
cs
test
sub
fsubs
xor
loop
push
push
lret
pop
leave
and
stos
cmp
push
dec
je
sahf
lcall
jmp
and
icebp
or
push
lahf
out
jg
hlt
clc
mov
enter
pop
ds
push
std
shll
xorb
push
cmp
insl
int3
loop
je
repnz
insl
xchg
adc
ret
add
dec
rolb
fucomp
js
sub
imul
mov
insl
aad
shll
cli
cmp
adcb
outsl
add
xchg
mov
scas
jl
stos
bound
add
sub
in
add
addr16
sub
mov
fcomps
cli
fsubp
inc
sti
sub
inc
mulb
sbb
mov
adc
out
mov
sbb
sub
adc
or
add
imul
xchg
filds
sub
mov
inc
and
aad
ror
xlat
jne
cmpsb
lds
mov
push
xchg
fcoml
dec
xchg
pop
or
out
les
mov
xor
ret
pop
jne
adc
cmc
jns
or
lock
repnz
jnp
or
bound
out
aas
and
ss
mov
ret
or
pop
xor
adc
icebp
dec
cmpsl
mov
pop
push
dec
inc
imul
lret
ret
xchg
and
adc
mov
or
leave
dec
iret
shl
sub
jg
sub
dec
aad
mov
push
popa
lcall
dec
das
push
test
cmp
push
mov
or
hlt
pop
mov
aad
push
dec
outsb
rcrl
loopne
xchg
jb
cwtl
popa
out
pop
push
sahf
lea
mov
cmpb
in
mov
mov
or
jl
jecxz
pop
jnp
rclb
stos
les
js
cmova
push
mov
push
outsl
mov
mov
mov
mov
lcall
jp
data16
pop
js
inc
push
xchg
inc
out
ret
jge
push
jle
dec
xor
in
sarb
pop
add
cmpsb
or
jmp
sbb
je
daa
or
fisubrs
xorb
xchg
clc
mov
push
sbb
mov
push
les
rclb
push
cmpb
mov
pop
dec
aaa
syscall
fwait
pop
push
dec
dec
adc
pop
movsb
jg
pop
mov
loopne
sub
lods
jbe
ret
rolw
data16
stc
cmpsl
scas
scas
dec
jb
incb
sahf
add
inc
pushfw
inc
mov
subb
lods
std
cmp
es
cmp
cmp
push
dec
out
adc
sbb
insl
mov
xchg
popa
leave
inc
popf
dec
fwait
sbb
dec
mov
daa
fdivrs
push
std
insb
mov
repz
insb
popf
fstpt
insb
cmp
mov
add
fadds
out
push
add
movsb
jle
push
cmc
xchg
iret
add
mov
inc
or
inc
add
ret
insl
mov
mov
mov
mov
pop
add
mov
xor
test
shll
scas
inc
das
mov
xor
mov
pop
sbb
jle
dec
in
popf
popa
mov
sub
lcall
push
inc
add
stc
dec
shlb
push
popf
fucomip
cmp
mov
push
outsl
mov
popf
mov
add
fwait
inc
aam
xchg
inc
add
aas
mov
test
nop
orl
push
and
xchg
imul
iret
test
cmpsl
jl
ds
lock
mov
pop
inc
int
scas
inc
scas
fs
mov
adc
dec
cmp
dec
pop
pop
dec
fcomps
mov
bound
or
and
mov
in
popf
or
sbb
push
push
jle
cmp
insl
inc
pop
xchg
das
cs
jle
je
xor
frstor
lret
jno
xchg
loop
cmp
pop
out
insb
jge
or
inc
into
mov
rorl
scas
shl
sbb
loop
sub
push
dec
in
mov
dec
out
scas
hlt
out
inc
filds
std
std
push
shrl
nop
mov
cmpl
mov
push
int
add
aam
adc
std
test
and
pop
xor
sbb
and
dec
dec
out
mov
cmp
pop
xchg
nop
sbbl
cpuid
jmp
in
scas
sbb
gs
push
push
repz
lods
popf
stc
std
cmp
jge
insb
mov
enter
nop
int3
push
in
lods
out
xchg
mov
je
pop
stos
ds
push
and
fstpt
test
inc
jnp
sbb
inc
shll
icebp
movsl
mov
or
mov
pushf
mov
nop
pusha
pop
cmp
cmpb
jp
ja
imul
pop
repz
sahf
aaa
negb
dec
rorl
inc
divb
in
mov
or
hlt
int3
mov
xchg
leave
sahf
sub
pop
cmp
jge
add
mov
nop
fs
cmp
lods
int3
sub
rolb
or
arpl
push
sbb
and
mov
xor
pop
jno
or
sub
out
cld
out
or
ror
ret
adc
andb
jmp
jecxz
or
in
sbb
pusha
pop
jecxz
bound
movsb
nop
jno
ja
jnp
xchg
lcall
push
sub
mov
ljmp
inc
ret
lods
jecxz
popa
stos
mov
xlat
pop
inc
rcll
adc
into
leave
std
inc
mov
cmp
lret
jl
mov
pop
fcompl
sbb
inc
jne
or
mov
outsb
movsb
stc
pop
xor
adc
sub
mov
ret
movsb
push
addr16
out
mov
in
xchg
jb
mov
sub
scas
js
cmpsl
adc
add
push
lcall
adc
sti
xchg
arpl
popf
js
push
add
jne
mov
fmull
pushf
mov
inc
or
enter
test
pusha
mov
out
nop
xchg
hlt
bnd
fnsave
pop
sub
or
or
jp
dec
fs
sub
addr16
dec
jg
popf
jne
mov
lret
jmp
jo
mov
lea
and
and
xor
jae
jle
cltd
in
rcll
pop
and
inc
jle
mov
adc
out
dec
jnp
sub
rorl
dec
in
fstps
adc
movsl
sbb
popa
sarl
stos
jo
xor
or
sub
mov
aam
popa
cltd
pop
in
inc
int3
xchg
clc
push
jle
daa
or
push
jnp
mov
inc
jne
mov
daa
cli
xchg
orb
pop
push
insb
adc
mov
xchg
cmp
or
out
in
cli
lock
ror
ja
adcl
lea
xor
inc
mov
lret
xchg
mov
adc
or
stos
mov
cwtl
jns
ffreep
xchg
jnp
xchg
mov
mov
sbb
push
mov
dec
arpl
pop
cmovo
cmp
mov
lds
jp
mov
mov
and
movsl
aad
sbb
and
cmp
jbe
xchg
push
pop
mov
push
lock
pop
packuswb
cmpsl
xor
shl
xchg
inc
imul
mov
pop
enter
or
out
inc
clc
movsb
leave
xchg
scas
add
jmp
sub
xorb
pop
push
mov
enter
mov
sub
mov
subl
xchg
inc
adc
push
pop
scas
decb
push
les
test
xchg
jae
out
fwait
rorb
xor
xchg
pop
ljmp
mov
lock
mov
lds
push
sbb
rclb
pushf
sbb
pusha
into
add
and
jae
fs
cld
lods
cmp
lods
nop
sarb
adc
xchg
arpl
xor
cld
pop
data16
or
into
xor
ljmp
mov
xor
stc
repz
and
hlt
xor
cltd
jne
cmpsb
rcrl
lret
cmp
pop
aas
or
pop
push
loopne
fwait
movsl
fildll
test
adc
xchg
xlat
insl
aaa
das
in
dec
push
mov
pusha
insl
pop
push
or
arpl
push
mov
pop
and
outsb
sahf
mov
mov
scas
test
roll
stos
cmp
aam
ss
or
int3
inc
hlt
sbb
jg
push
push
sub
dec
cmp
sahf
mov
xor
les
inc
dec
mov
push
popl
and
sbb
in
int3
cmc
inc
mov
sbb
cli
cs
jae
push
cmp
mov
fs
cmp
dec
int
orb
cmpsl
jmp
add
sbb
add
ret
cmpsl
pop
fwait
sti
mov
dec
cmpsb
inc
xchg
and
ret
and
mov
in
call
pop
in
fdivrl
mov
std
sahf
or
mov
shr
cs
aam
fisubrl
test
je
mov
jmp
xchg
mov
test
int3
and
xchg
pop
es
or
push
lcall
dec
and
shll
loope
dec
pop
icebp
jb
inc
push
add
je
jne
test
nop
inc
cltd
outsl
add
mov
mov
mov
outsb
xchg
into
xchg
mov
push
negb
xchg
fwait
inc
fildll
and
fisubrs
pop
cmp
sbb
jge
mov
cld
mov
daa
xchg
lret
xor
cmp
sbbl
and
out
in
rorb
cmp
lods
xor
inc
in
movsl
scas
das
enter
ret
or
adc
popf
mov
sbb
ja
iret
hlt
ljmp
orb
push
sub
xor
jmp
addr16
mov
mov
mov
lods
test
stc
rorl
ds
in
mov
push
je
cmpsb
fisubs
mov
lods
mov
mov
cmp
lods
fbstp
push
mov
adc
ss
xchg
shll
lret
aad
adc
jb
pop
adc
and
mov
comiss
dec
lahf
jge
pop
divl
out
mov
decb
mov
fcomps
sbb
fstpt
insl
enter
or
jns
dec
stc
les
jbe
mov
cltd
test
loopne
aaa
data16
in
dec
out
outsl
mov
cmp
dec
adc
cli
lods
shll
fists
cmp
jmp
stc
dec
out
sbb
scas
dec
aaa
adc
test
lock
adc
and
pop
add
call
cmpsb
or
inc
std
out
insl
jo
sbb
sub
jb
inc
add
cmpsl
mov
test
lret
sahf
dec
cmc
xor
out
push
int3
nop
rcl
lcall
pop
adc
xchg
in
push
push
sbb
add
mov
call
into
inc
pop
mov
mov
ja
pop
mov
and
scas
inc
movsb
xorb
push
mov
xlat
mov
pop
add
dec
popf
jns
outsl
xchg
cmp
jle
fwait
movsb
lock
cmp
mov
push
aaa
imul
pop
out
ljmp
rcrl
mov
movsb
mov
mov
in
cmpb
push
test
fsts
and
cmpb
es
cmp
scas
sub
sub
xor
xor
shll
das
mov
push
dec
sub
fucom
mov
orb
cwtl
adc
daa
push
cwtl
push
cmpsb
fs
lret
xchg
cmp
sub
sub
out
fistpl
xchg
in
cmpsb
lret
rcll
jno
js
sti
and
jecxz
neg
cmp
jne
xchg
insl
rcll
mov
and
arpl
dec
lahf
aaa
repz
fldt
inc
mov
pop
fwait
jne
cwtl
in
add
lods
mov
stc
sarb
jae
lds
aaa
js
out
pop
inc
aas
test
sbb
popf
iret
cmp
push
fstpl
test
jmp
dec
ljmp
fs
mov
xor
and
or
cmp
add
pop
test
fwait
mov
lret
data16
loopne
jo
aas
sbb
dec
sub
xor
xor
push
mov
lahf
imul
inc
stc
lcall
push
int3
pop
sub
arpl
dec
pop
jbe
push
xchg
movsb
pop
popa
inc
inc
add
sub
daa
and
push
mov
int
push
xor
pusha
pop
mov
shl
jle
dec
xchg
mov
mov
push
loop
mov
pop
xchg
imul
jae
pusha
stos
jo
dec
xor
inc
icebp
dec
inc
dec
cmpsb
cmp
push
sub
xchg
inc
xchg
cs
sbb
repnz
add
adc
out
push
mov
sbb
sub
jnp
hlt
push
ss
inc
mov
jle
gs
outsl
or
push
insb
and
jl
test
pop
fucomi
inc
dec
movsl
adc
and
cli
and
insl
dec
adc
rclb
or
push
and
xchg
mov
adc
aaa
aad
inc
jns
or
inc
hlt
in
fcomps
adc
sbb
hlt
cli
js
mov
aam
or
out
js
jbe
dec
out
sub
loopne
xorb
mov
cld
cltd
add
xchg
xor
cmp
cmp
cmpsl
and
filds
pop
mov
mov
sti
mov
sub
xchg
or
pop
dec
or
cmpsb
in
loope
xchg
dec
push
inc
cmp
int3
adc
adc
mov
outsl
inc
sbb
xchg
push
shll
jmp
jno
cmp
lcall
xchg
cmc
pusha
sti
mov
out
dec
and
shlb
cmc
push
jb
popf
dec
sbb
and
out
push
stos
test
jmp
sbb
dec
add
cli
jo
add
dec
mov
jmp
pop
cmp
sbb
jmp
xlat
pop
cmp
xchg
ljmp
cmc
ss
cmp
fs
mov
loopne
xor
fs
adc
and
jle
fisubrl
jne
adc
cltd
mov
test
sub
cmp
leave
pop
sti
shrb
mov
outsl
js
mov
out
or
dec
test
shll
aaa
outsb
popa
data16
and
jmp
mulb
jne
sarb
ret
imul
es
es
fcompl
jle
stos
test
scas
aad
adc
pop
addb
add
test
pop
test
sub
out
dec
xor
popa
movsl
push
sub
push
es
xlat
jl
cmp
dec
xor
loope
shll
inc
bound
test
pop
sbb
add
inc
js
or
mov
push
jno
in
pop
sub
fsubl
rol
adc
dec
fadds
in
xor
pop
sub
inc
jp
and
mov
xchg
pop
fcomps
cmp
add
mov
stos
cmc
cmc
nop
pushf
mov
js
mov
fstpt
aad
dec
mov
mov
popf
pop
sbb
sub
pop
pop
mov
imul
xchg
dec
pop
xor
shlb
shll
inc
jecxz
add
pop
dec
dec
shlb
test
loop
jmp
push
pusha
jbe
dec
pop
inc
aam
push
ficompl
faddl
xchg
enter
incb
ficoms
jbe
mov
or
jbe
sub
xor
in
fcoms
add
jbe
and
jmp
mov
data16
stos
enter
leave
leave
and
loopne
mov
sub
loope
fistpl
dec
adc
jb
mov
out
mov
jl
shll
and
push
add
mov
add
jae
inc
loopne
mov
stos
nop
das
stos
inc
outsb
movsb
outsl
repnz
sub
addr16
loope
iret
xlat
out
sub
dec
sarb
int3
and
pop
inc
sar
push
adc
testb
test
stos
sahf
xchg
shlb
ljmp
data16
out
mov
ss
je
sahf
xchg
sbb
pop
ret
cs
adc
push
jno
insl
dec
mov
push
cmp
in
test
xchg
sub
lods
fsubr
jle
ret
ja
inc
mov
vpmaxub
xchg
ret
xchg
mov
mov
dec
mov
int
je
out
pushf
fbstp
js
icebp
mov
jae
or
jns
dec
sbb
add
or
lahf
add
scas
xlat
shlb
int3
aad
xchg
xlat
sbb
add
andl
sbb
in
out
pushw
int
jns
hlt
jno
cmp
ja
frndint
data16
jle
lock
ljmp
lret
adc
into
stos
loopne
sbb
jmp
cmp
imul
mov
mov
push
adc
cs
sbbb
sub
in
lds
push
adc
mov
xor
or
jmp
jbe
sarl
sub
in
inc
adc
mov
lret
xor
scas
dec
arpl
mov
arpl
mov
and
xor
xor
sbb
or
sbbb
cmc
xor
incl
fnstenv
loop
xorl
jecxz
and
movsl
jns
leave
adc
inc
rcrl
gs
push
fcmovnbe
xchg
hlt
xlat
pop
pop
cld
dec
shll
adc
in
mov
jne
call
mov
jmp
aas
push
mov
inc
adc
lret
popf
jle,pn
sar
add
adc
pop
or
jb
aaa
pusha
popa
mov
daa
lcall
data16
ljmp
inc
xchg
lret
pop
pop
pop
test
shll
sbb
adc
pop
jge
jno
mov
xor
dec
cmp
leave
es
repnz
cld
mov
or
dec
scas
repnz
loope
sahf
mull
fidivs
je
push
imul
lret
push
data16
cmp
das
cmp
in
pop
test
std
sbb
lahf
push
xor
mov
cmp
add
mov
inc
dec
dec
inc
gs
scas
cltd
sahf
dec
fstpt
ja
mov
sbb
aad
xor
pop
sbb
es
adc
shrl
lds
lea
push
test
test
out
xchg
mov
sub
xor
mull
adc
mov
mov
adc
repnz
ljmp
push
pop
mov
in
and
push
rcl
inc
fstpt
in
pop
or
inc
sub
or
and
inc
pusha
test
xchg
jge
mov
add
sbb
pop
daa
adc
lea
lahf
iret
xchg
xchg
push
lds
sbb
inc
adc
imul
pop
mov
sub
pop
mov
ljmp
xchg
inc
mov
jg
aas
or
adc
jg
mov
sbb
out
arpl
out
jmp
sbb
and
iret
idiv
and
lret
or
call
js
divps
adc
xor
push
cmp
push
ret
mov
pop
jb
jg
cmc
ljmp
nop
xor
stos
cwtl
push
aas
cltd
je
pop
ficoms
repnz
fidivrl
push
inc
call
in
sub
cli
arpl
out
jg
dec
jno
es
inc
aam
and
enter
jl
lret
mov
adc
sti
mov
and
in
sub
fildl
mov
pop
out
push
add
daa
xchg
add
pop
xchg
mov
mov
jae
movsl
hlt
push
cmp
adc
lea
aas
and
inc
ljmp
aaa
scas
fwait
sub
stos
xchg
daa
lods
cwtl
int
and
mov
arpl
cld
xcrypt-cbc
cmpsl
pop
mov
inc
pop
jnp
movsl
jb
cmp
in
mov
sbbb
mov
cmpl
sbb
aas
mov
xchg
pop
pop
rcr
sub
adc
ss
leave
add
inc
outsl
cld
sub
cmp
nop
lods
test
inc
sbbl
lea
sub
ret
jnp
cmpsl
xchg
repz
adc
mov
mov
push
pop
mov
xor
jp
lret
icebp
push
add
xchg
out
test
dec
lock
js
inc
push
inc
mov
je
outsl
xlat
test
mov
inc
rolb
jnp
mov
ficomps
sub
xchg
jne
push
sub
dec
scas
decb
mov
filds
fists
repnz
das
cmp
xorb
xor
pushf
out
push
ja
cmp
sub
mov
aas
push
roll
mov
xchg
inc
ds
in
jecxz
data16
sub
xchg
lea
jle
enter
int3
xor
pop
ret
cmp
out
jp
imul
sbb
sti
add
sbb
push
cmp
mov
ret
insb
loop
push
mov
xor
xor
ss
fsub
mov
xlat
xchg
ret
and
int
pop
adcl
xchg
jns
push
js
cld
sbbb
repnz
dec
mov
mov
imul
and
mov
lods
cld
test
jl
ja
lret
loope
or
inc
push
xor
out
lret
jb
in
out
xchg
push
mov
repz
dec
jl
imul
popa
push
mov
push
mov
push
repz
in
push
cmpsl
jbe
xchg
adc
lods
xor
inc
cmovne
pushf
aas
or
jmp
nop
adc
jnp
cmp
mov
xchg
cmpsb
dec
pop
dec
movb
sbb
testb
xchg
clc
rcl
aam
xchg
outsb
call
adc
fidivs
leave
cmp
cld
or
jno
mov
stos
cs
cmp
out
outsl
or
test
sub
adc
mov
daa
sub
xchg
and
outsl
jl
sub
mov
pop
shll
shl
xor
adc
sbb
stc
dec
fdivp
stc
add
xchg
xchg
rorb
mov
andb
xor
push
mov
ds
sbb
stos
and
add
enter
mov
mov
bound
cmpb
and
aad
imul
jecxz
mov
mov
add
out
je
push
pop
scas
es
pop
add
pop
mov
xor
stc
sbb
inc
rcr
mov
inc
inc
daa
aam
mov
aaa
out
inc
xor
fisttpl
or
or
add
sbb
inc
cwtl
jmp
pop
fdivr
xor
inc
mov
push
pop
cmpsb
jns
add
add
jge
andl
jb
addl
fcom
mov
mov
ljmp
loop
sub
push
pop
gs
sbb
das
nop
test
mov
xchg
or
dec
adcb
or
out
addr16
ljmp
mov
subb
mov
cmp
movsb
mov
mulb
mov
and
scas
xor
xchg
jmp
or
cmc
lcall
aam
stos
call
mov
dec
mov
adc
ficompl
and
lret
push
jne
fisttpll
sti
ud2
sub
adc
xchg
inc
out
jno
dec
jl
adc
cmc
aam
mov
mov
arpl
dec
mov
and
loopne
cmp
and
lods
fdivrp
push
inc
push
insb
addr16
into
movsb
xchg
sub
push
mov
jecxz
pop
out
pop
lahf
cmp
fnsave
out
xchg
mov
cmp
jp
dec
shl
adc
jo
inc
sub
pop
dec
lcall
stos
mov
pop
sub
fistpll
mov
push
xor
mov
das
xchg
divb
mov
stc
xorb
or
jmp
iret
jb
test
mov
leave
les
icebp
add
daa
movsl
and
hlt
cs
mov
ret
pop
push
push
pusha
xchg
lods
mov
mov
sbb
cmp
add
pusha
loopne
out
gs
fisttpl
mov
add
dec
adc
orl
das
aas
push
aaa
imul
push
loopne
fisttpll
fisttps
fstl
mov
xchg
add
xchg
mov
lret
test
jecxz
repnz
jge
pusha
inc
in
faddl
xchg
jp
push
or
roll
cwtl
in
jle
xorl
setg
loop,pn
adc
cmp
js
daa
aaa
mov
das
iret
add
addr16
call
jne
jns
lods
jecxz
imul
jmp
or
and
insl
ficompl
outsl
rclb
ljmp
insl
push
cli
pop
imul
inc
pop
cmc
jno
inc
in
out
gs
testl
mov
ss
or
jb
pop
pop
xchg
rcll
fdivr
adc
out
xlat
fwait
mov
loop
fstl
sub
sbb
adc
lods
mov
shl
shl
outsl
xchg
mov
gs
sbb
testb
mov
inc
cltd
out
dec
popa
mov
test
in
mov
imul
mov
pop
mov
xchg
push
cmp
pop
icebp
test
lock
push
push
inc
ret
rorl
adc
fisubs
jno
sbb
test
pop
mov
faddp
jg
or
dec
ss
pushf
mov
cmp
sub
ljmp
fs
sub
cs
inc
jmp
psrlq
jbe
out
mov
decb
mov
faddl
dec
jmp
push
inc
jb
and
jl
imul
imul
outsb
int3
jbe
aad
rcll
fisttpl
push
mov
sub
or
data16
in
jbe
gs
inc
mov
and
inc
je
jns
enter
xchg
hlt
lret
mov
push
aas
jmp
xchg
pop
jb
mov
cli
test
popf
into
mov
adc
cwtl
lea
dec
lret
clc
push
clc
sbb
mov
push
or
jb
repnz
jecxz
jl
icebp
call
jg
inc
out
xlat
pop
out
pop
sti
add
pop
icebp
mov
fcomps
sbb
gs
add
hlt
icebp
xor
or
sbbb
xor
popf
mov
or
jl
xchg
push
imul
add
cwtl
adc
cld
dec
xor
rorb
xchg
test
lret
loop
jnp
or
fcomi
imul
subl
fbstp
push
push
dec
in
pop
leave
pop
push
cld
jl
stos
sbb
adc
les
ret
or
mov
sub
es
xchg
mov
in
lret
jmp
dec
cmp
sbb
rolb
xchg
jns
stc
and
test
in
clc
cld
mov
adc
sub
jnp
gs
ret
pop
ss
loopne
sbb
cmova
lret
addr16
push
bound
push
pushf
lahf
or
fwait
inc
pop
and
es
or
pop
inc
jae
enter
jp
mov
arpl
mov
mov
loop
insl
xor
fstpt
mov
nop
fstpl
sti
addr16
dec
mov
in
test
mov
mov
lds
negb
xchg
cmp
fcompl
or
pusha
in
insb
fs
fstps
lds
aaa
gs
mov
jmp
xor
pop
repz
pushf
inc
call
pop
fmull
sub
movsl
sub
mov
enter
loop
and
sbb
push
imul
xchg
and
lret
ljmp
bound
hlt
xorb
lock
mull
pop
or
xor
pop
out
dec
mov
fistpl
std
xchg
int3
outsl
or
add
xchg
cmpsb
sub
inc
jbe
adc
push
jnp
ret
or
icebp
mov
push
and
xor
jg
scas
leave
ds
jg
jl
dec
pop
or
xchg
or
mov
jo
xchg
fildl
cltd
or
jp
cmp
sbb
xchg
push
sbb
loop
add
dec
jo
les
jno
dec
in
in
mov
mov
pop
cli
adcb
mov
les
cmp
inc
push
jbe
jo
mov
mov
sub
imul
push
fwait
xorl
pop
loop
mov
shr
mov
outsl
xor
push
fidivrs
lds
shll
and
adc
pushl
scas
dec
mov
add
mov
mov
push
or
adc
sub
xor
jecxz
test
push
push
cmp
push
sbb
xor
out
int
adc
in
inc
ret
add
jp
mov
mov
hlt
dec
inc
mov
mov
and
pop
leave
sub
jg
jmp
shrl
mov
fldcw
test
fstl
push
notb
jl
fstpl
cwtl
push
cmpsl
and
sbb
loop
fwait
push
cmp
and
xor
insl
pop
aam
or
dec
ss
shrl
nop
inc
lds
lods
inc
arpl
test
and
inc
pushf
adc
mov
xchg
pop
mov
xor
loope
mov
enter
xor
ljmp
std
inc
loope
sbb
inc
rep
push
pop
push
fldcw
outsb
dec
add
xchg
mov
mov
sbb
dec
clc
jbe
stc
jp
push
jmp
mov
int
scas
sbb
cmpsl
mov
subb
sbb
pop
mov
adc
mov
test
or
or
sbb
and
jns
add
test
mov
jo
loopne
leave
inc
lcall
mov
or
out
orb
sbb
push
inc
or
es
sarl
or
movsl
add
mov
into
sti
sbb
in
fstp
cltd
je
jecxz
pop
loop
xchg
cmp
pop
rolb
jl
mov
or
loopne
xlat
into
push
sahf
mov
jno
xchg
sub
mov
cwtl
lahf
out
xchg
xabort
jp
or
mov
fldlg2
xor
lcall
mov
pop
lods
adc
lock
mov
sbb
push
adc
inc
outsl
xchg
daa
or
xor
into
jecxz
lahf
test
cmp
cmc
jecxz
cmpsl
lret
stos
faddp
sub
test
xchg
call
das
inc
and
cmp
jecxz
je
cld
mov
and
and
add
add
gs
repnz
enter
stc
inc
fildll
enter
shll
jg
sahf
fld1
jmp
xor
mov
ss
xchg
movsl
sti
scas
insl
scas
lret
xchg
dec
cmpsb
sahf
push
fnsave
pop
in
push
adc
xchg
out
cltd
in
cmp
and
ficoms
loop
or
lret
cmpsl
mov
xor
mov
lret
cld
sub
or
loopne
dec
outsb
sub
adc
add
adc
test
jnp
cmp
push
and
jmp
and
mov
sub
cmpsb
sbb
sub
ret
cwtl
clc
pop
in
inc
xor
fucom
adc
xor
sbb
jecxz
aad
mov
xor
add
cld
inc
pop
mov
test
jmp
add
pop
add
mov
daa
and
dec
push
pop
push
popf
sarl
orl
test
or
and
repz
adc
jbe
fwait
mov
inc
das
pop
inc
or
jnp
adc
sbb
push
sarb
sub
insl
ret
mov
insb
inc
icebp
mulb
xor
lods
sbb
mov
sub
xchg
cltd
inc
lret
sbb
rcrl
fidivrl
adc
cli
sbb
pop
sbb
sahf
jp
std
dec
cs
dec
add
rcll
xor
out
inc
push
inc
hlt
shll
lock
cwtl
arpl
mov
adc
mov
mov
xchg
cmp
or
xchg
or
cli
sbb
and
dec
adc
mov
cmp
mov
out
sbbb
push
fstpl
loopne
rolb
dec
jp
sarb
cmp
and
push
rcll
jnp
xchg
jae
xchg
jno
mov
mov
jl
xor
or
lods
stos
sti
push
stos
ds
insl
out
cwtl
lods
and
inc
jb
imul
repz
int
cmc
cli
pop
inc
push
adcb
fs
mov
jne
addr16
call
clc
scas
push
mov
ljmp
mov
mov
fstp
gs
inc
ljmp
es
jg
les
xchg
sub
sahf
movsl
call
inc
mov
mov
xor
ret
test
xchg
jge
pop
inc
adc
idivl
mov
and
das
iret
push
dec
sbb
mov
daa
call
mov
cs
xchg
mov
or
push
sbb
lods
cmp
mov
inc
jb
adc
adc
scas
cs
repnz
int3
stc
push
xlat
xor
jnp
data16
fistps
les
outsb
push
push
out
push
cmp
aaa
pop
lea
mov
cmpsl
xchg
mov
stc
lock
in
cmp
cmp
xchg
lea
sub
gs
xor
andl
mov
mov
repz
pop
stc
and
jb
out
push
sub
sbb
dec
rcrb
xchg
in
dec
pop
xor
pop
dec
pushl
test
movsl
push
inc
mov
insl
xor
into
sbb
mov
jmp
add
sar
dec
scas
xchg
push
test
icebp
mov
xor
push
popa
out
shll
sbb
cmp
xor
hlt
outsl
dec
rclb
inc
shll
aad
lahf
fistps
and
out
rcr
mov
fwait
pop
cld
jns
xlat
mov
bound
adc
ljmp
sbb
sbb
push
addr16
cmc
aad
or
pop
aad
mov
sbb
idiv
cmp
arpl
fistpll
sub
outsb
xchg
test
sub
and
out
cmp
xchg
add
je
loopne
xchg
test
mov
daa
inc
dec
mov
cmp
pop
notl
cmpl
push
cmpsl
and
leave
bound
test
xchg
ljmp
jle
out
sti
popa
test
pop
cmpsb
incl
bound
pop
xor
test
mov
mov
loopne
mov
shr
loope
xchg
lock
lret
cmp
out
mov
push
inc
test
gs
fdivl
cmpsl
dec
inc
jnp
scas
dec
sti
cmc
jg
mov
xorl
add
cmpl
push
xor
sbb
pop
out
inc
outsb
out
cmp
pop
sbb
loope
sbb
mov
mov
pushf
outsb
dec
inc
gs
or
rorl
fwait
cmp
dec
iret
or
mov
xchg
mov
int
adcb
orl
inc
ss
adc
inc
lcall
push
sbb
push
xchg
loopne
adc
mov
sbb
or
je
fmuls
popf
enter
ja
mov
fstl
fwait
pop
adc
js
fnstsw
outsl
sahf
hlt
shl
shrl
sub
push
inc
or
lods
inc
inc
mov
xlat
out
stos
rcll
imul
or
arpl
cmp
leave
push
push
pushf
cs
cmp
sbb
dec
add
data16
lret
lea
push
pop
cwtl
data16
addr16
push
sub
cli
inc
mov
in
pop
jge
adc
cltd
aad
jl
mov
mov
and
and
out
or
pop
xchg
add
imul
mov
sub
adc
sti
dec
test
add
scas
cmpsb
cmp
stc
cmpsb
jmp
test
mov
in
sub
xor
cmp
test
ds
pop
xchg
push
fmull
add
dec
out
cltd
add
mov
outsl
jecxz
jl
pop
and
lcall
and
mov
inc
scas
outsb
xor
enter
pop
out
xlat
dec
cs
insl
dec
test
push
out
and
xchg
pcmpgtb
mov
push
mov
dec
pop
fildl
rclb
jbe
hlt
das
sub
dec
js
icebp
loopne
js
xchg
jge
lds
or
xor
adc
mov
les
gs
es
decl
pop
mov
mov
popl
xor
pop
mov
pop
jl
das
iret
mov
cmp
mov
cltd
push
scas
loopne
shlb
mov
negl
inc
and
adc
enter
cld
sbb
cli
xchg
decl
mov
stos
sub
mov
push
dec
imull
push
test
lods
fisttps
iret
out
hlt
jno
mov
hlt
dec
je
push
addr16
sbb
cmp
cmpsb
push
inc
andb
test
jle
pushf
cs
dec
inc
shrl
cmp
adc
jne
push
inc
sub
movsb
push
ret
mov
or
stc
js
cmp
sbb
sbb
mov
and
roll
mov
jb
outsl
fiadds
aam
loop
icebp
stos
mov
xor
mov
push
xchg
lock
adc
xchg
fsubrp
sub
push
sub
mov
dec
scas
les
ret
fisttpl
aas
das
ret
cmp
hlt
lods
sbb
mov
and
push
add
dec
mov
test
push
popa
sahf
cmp
mov
cwtl
sbb
arpl
xchg
mov
iret
sub
shlb
mov
cmp
cld
adc
pop
fstpt
pop
ret
mov
and
sbb
repz
pop
dec
adc
sub
in
inc
push
cli
out
fsubr
rcll
stos
jae
xor
je
dec
fwait
pusha
inc
pop
mov
xchg
popa
xor
and
mov
js
and
or
sbb
outsl
ret
pop
lock
lcall
enter
ds
sbb
sbb
and
sbb
xor
scas
shlb
gs
lret
and
add
lods
scas
push
and
orb
dec
add
rol
jb
xchg
inc
push
and
xchg
das
dec
cmp
push
les
aad
push
lea
cmp
imul
iret
sub
testb
ftst
sub
jp
sbb
repz
mov
sbb
lea
bound
out
fidivl
loop
sub
adc
mov
mov
xor
and
pop
add
cmp
mov
insb
push
mov
aas
inc
jns
cs
push
ss
int
sbb
pushf
stos
sub
mov
or
cmp
loopne
mov
mov
aad
sub
mov
call
push
xchg
sbb
sub
shlb
in
pop
jecxz
inc
add
sub
and
in
iret
in
push
out
enter
sahf
pushf
sbb
repnz
out
sub
pop
les
loop
and
shll
mov
pop
push
or
dec
or
push
inc
pop
bnd
jle
cwtl
int3
adc
les
sbb
pop
pop
dec
cs
pushf
jp
lahf
int3
pop
test
inc
sbb
fsubrs
pop
xlat
mov
push
lret
outsl
popf
in
lods
icebp
dec
sub
std
mov
adc
test
lret
inc
fdivl
jle
dec
push
cmp
das
lcall
xchg
inc
mov
lock
or
test
sbb
mov
pop
negb
out
pushf
mov
sub
mov
insb
dec
push
xchg
data16
mov
cmp
jae
xor
jp
sub
sbb
push
lods
ret
iret
xor
dec
cld
pop
mov
out
les
mov
pop
popf
mov
in
add
dec
sti
cmp
push
outsb
mov
fimuls
cld
inc
jecxz
ret
sub
dec
jmp
repnz
mov
dec
cmp
sub
jmp
aam
scas
insb
push
ja
jle
pop
aad
pop
movsb
jecxz
iret
sub
into
adc
mov
push
je
je
sub
outsl
xchg
scas
fiadds
das
jmp
xchg
add
mov
push
out
mov
cmpsb
sub
fucomi
sub
sbb
cwtl
jne
xchg
jg
movsl
lods
insb
js
arpl
push
jae
adc
popf
dec
cmp
sbb
and
lret
dec
fwait
orl
fistl
inc
stc
fwait
dec
mov
adc
mov
adc
faddl
call
sbb
xchg
xor
add
pop
out
movsb
add
xor
push
dec
inc
sbb
mov
iret
cli
das
add
popf
mov
jge,pn
aam
jle
pop
decl
mov
movsl
jp
insl
das
mov
add
and
cltd
push
outsl
daa
clc
jle
jns
xor
mov
push
out
mov
cmpsb
jecxz
inc
cmc
sbb
jg
out
cmpl
mov
mov
outsl
jle
iret
inc
cmp
jecxz
pop
insl
mov
xor
mov
xor
mov
and
lahf
lahf
pop
jno
ljmp
cmp
movsb
pminub
scas
movsb
arpl
pop
cmpsb
push
in
fwait
cmp
ror
cmp
pop
in
xchg
fdivl
lahf
out
repnz
int
aaa
pusha
pop
mov
mov
mov
mov
push
mov
popa
pop
fnstcw
push
add
call
jne
cld
mov
mov
call
lahf
jne
mov
ja
out
out
movsb
mov
mov
clc
mov
popa
and
push
mov
loope
xlat
mov
repz
movsl
sbb
and
or
scas
xchg
mov
inc
sbb
mov
and
xchg
inc
iret
fists
and
jmp
pop
push
pop
test
iret
dec
jg
fnstenv
xchg
rcll
daa
xor
jnp
lret
orb
sbb
arpl
mov
rorb
dec
pop
pop
push
jno
sbb
loop
sarb
push
ja
and
dec
mov
iret
mov
cld
pop
lret
push
lret
mov
xchg
lret
out
xchg
sti
and
das
cmp
push
je
std
xchg
ret
pop
test
ds
lret
mov
add
lods
sti
xor
seto
jno
dec
dec
pop
jl
imul
mov
scas
xchg
cmp
and
lret
cli
jl
nop
lds
pushf
int3
cs
pop
sti
call
insb
push
pop
adc
inc
xor
xor
fcompl
loopne
or
daa
sub
in
lea
repnz
xorl
test
inc
in
loopne
inc
cmpsb
movsl
ret
pop
and
js
jl
dec
push
ret
pop
mov
addr16
mov
fwait
xchg
xor
mov
sarb
inc
rolb
faddl
leave
inc
icebp
pop
int
sub
push
pop
xchg
sub
orb
jne
cwtl
roll
fdivrl
pop
dec
dec
jmp
or
sbb
fmull
cmpsl
sub
fisubs
addr16
mov
xchg
lahf
scas
push
cs
inc
push
jmp
repz
jp
adc
xchg
roll
je,pn
cmp
dec
data16
dec
mov
cmp
jbe
sbb
adc
icebp
inc
jb
jmp
dec
adc
stos
sub
in
sub
out
pand
das
xor
adc
popf
out
xchg
cltd
scas
insb
out
je
stos
repz
adc
cld
and
popa
sub
dec
cmpsl
dec
mov
mov
cmc
mov
fsubs
aas
inc
cld
outsl
push
loopne
movsl
dec
mov
xor
push
sub
outsb
pop
or
call
inc
aad
sbb
jb
sbb
mov
mov
ja
push
test
inc
push
adcb
or
int
enter
xchg
es
xchg
pushf
shll
pop
out
jno
xor
aad
in
les
subb
popf
jnp
scas
push
jne
mov
xlat
test
cmc
fcompl
or
in
mov
andb
jmp
sbb
cmp
fsubs
ja
out
mov
paddd
mov
sbb
cmc
push
sahf
sub
ljmp
cmc
cli
fnstenv
insl
rcr
sbb
jecxz
mov
pop
sub
sbb
sub
shrl
xchg
sub
mov
mov
es
ljmp
lcall
std
xchg
lcall
popf
lds
js
out
jbe
adc
jne
and
xchg
pop
insb
test
orl
pcmpeqd
push
xchg
xchg
cwtl
or
test
test
and
xchg
push
xor
int3
into
cmp
pop
mov
push
xchg
xchg
inc
insl
addr16
lret
mov
push
data16
push
jb
jle
jecxz
adc
mov
or
dec
xchg
fcoms
rcrl
lock
adc
add
test
push
shl
out
dec
xchg
sub
icebp
repnz
xor
es
movsb
test
scas
nop
mov
jne
movsb
xor
adc
mov
sub
gs
in
xor
cli
push
subl
push
mov
sub
jmp
addl
or
push
mov
inc
stc
sbbb
pushf
popf
in
stc
add
jns
in
cmp
hlt
xor
inc
movsl
push
shlb
mov
dec
orl
mov
js
shl
ret
jecxz
je
icebp
in
jbe
leave
movb
sbb
bound
push
je
sti
cli
and
outsl
mov
fisubrl
popf
pusha
ret
jns
xchg
push
dec
in
lret
fdivs
and
es
mov
mov
imul
iret
fcoms
movsl
pop
jno
mov
in
add
outsb
inc
and
cmp
bound
jl
jns
pusha
jnp
jno
cmovns
sub
ret
sub
jae
hlt
xchg
push
sbb
jnp
mov
or
mov
pop
lea
mov
dec
cwtl
dec
or
push
repz
cmp
es
push
stc
aad
cs
pop
jecxz
out
movsl
ljmp
dec
test
std
xchg
mov
lods
pop
xchg
add
pop
jne
inc
jmp
xor
shr
test
jno
jo
frstor
das
xor
fs
cmp
xchg
jg
jle
mov
ds
movsl
and
jns
adc
xchg
subl
fisttpl
mov
push
lret
mov
lret
ss
in
mov
test
and
std
lods
das
in
in
cli
scas
and
addr16
in
bnd
mov
repnz
scas
xor
imul
cmc
lods
and
movsb
jge
jno
add
jmp
dec
outsl
jle
jmp
aad
fcmove
movsb
sbb
pop
dec
icebp
int3
cmp
sbb
or
pop
cmp
pushf
mov
pop
lret
outsb
or
xor
jae
xchg
lret
jns
push
pop
fmul
pop
call
mov
cmpsl
cwtl
jle
push
push
js
xlat
mov
fs
fistpl
jmpw
add
testb
pop
sbb
pop
or
or
ret
bound
cmp
cli
lods
and
inc
sarl
dec
xchg
xor
gs
mov
jle
or
test
dec
pop
inc
das
xchg
mov
insb
movsb
jecxz
roll
mov
outsb
push
mov
pop
cmp
inc
pop
pop
mov
push
jl
test
aam
xor
inc
mov
jl
or
cmp
je
ja
arpl
sub
adc
xor
jge
loopne
xchg
ret
push
hlt
pop
sahf
or
mov
das
into
stc
lods
sub
mov
fwait
cmc
xchg
jmp
aas
cli
push
and
and
cmp
or
xchg
sub
jo
mov
mov
mov
shlb
mov
bound
daa
bswap
add
dec
ja
roll
mov
add
jle
cwtl
push
mov
push
pop
pop
xor
add
jge
dec
test
scas
jle
hlt
xlat
xor
test
push
fstp
pop
mov
mov
cmp
jp
jno
movsl
or
mov
mov
in
and
xchg
and
add
cmp
inc
fldt
mov
dec
ret
inc
shrb
stc
xor
cli
movsb
in
jb
out
addl
jle
loopnew
cmp
cmp
ret
mov
mov
dec
or
sub
sti
pop
std
mov
mov
lock
xchg
lret
insb
xchg
jge
add
jbe
and
pop
xchg
pop
jno
fs
ja,pn
and
aad
push
pop
sti
add
subb
xor
in
enter
push
adc
push
nop
jl
sub
pop
mov
mov
shr
and
es
fsubl
mov
jo
mov
fwait
bound
repz
lret
fisubrs
mov
lret
fs
mov
add
add
shrl
xchg
mov
gs
fwait
add
frstor
xchg
lock
dec
sbb
and
lea
aad
out
fcmovne
mov
push
jle
out
adc
in
mov
sbb
aaa
and
and
fmull
fnstenv
aam
lds
mov
push
pop
mov
cmpsl
adc
je
roll
mov
adc
mov
out
movsl
dec
flds
sub
shl
sti
pop
imul
fwait
xchg
data16
das
dec
mov
loop
movsl
stos
arpl
jl
mov
sub
cmp
push
xor
jmp
popf
addl
into
ljmp
inc
std
push
iret
dec
decl
dec
cmpsb
mov
dec
push
pop
pop
cwtl
pop
in
scas
xor
jns
sub
mov
cmp
jg
mov
adc
adc
sti
test
loopne
cmp
loop
lods
sub
add
xor
imul
mov
negb
sbb
in
jnp
ljmp
aad
push
adc
jno
push
loop
out
clc
cmc
jo
and
add
mov
jle
or
pop
popa
pop
sbb
es
fisubrs
xchg
xchg
les
adc
repz
push
ljmp
mov
push
dec
aad
fs
add
cs
mov
std
sub
xor
dec
sbb
or
sub
sbb
out
or
insb
shlb
push
pop
aas
punpckhdq
add
adc
mov
subl
jl
xor
pushf
inc
std
shr
push
sub
adc
sub
xchg
jmp
push
push
int3
dec
push
fabs
out
ds
inc
aad
outsb
xchg
cmc
adc
lcall
lock
loope
cmp
push
xor
and
mov
mov
sbb
jb
mov
movsb
pop
out
ljmp
int
into
roll
mov
push
gs
scas
sub
jne
outsb
jo
loopne
outsl
aaa
jg
stc
cmp
add
sbb
push
outsb
aad
loopne
sub
sbb
push
mov
arpl
addr16
or
in
jae
mov
out
dec
gs
fs
jbe
push
arpl
fiaddl
aad
inc
xchg
jp
fimuls
js
cli
ror
inc
xor
sub
rol
scas
js
pop
dec
sub
cs
adc
into
fists
inc
sub
add
xorb
jl
filds
dec
cmpsl
mov
xchg
pop
jle
test
push
int
or
daa
and
xor
xor
sbb
inc
sti
lds
cmpsb
push
mov
pop
popf
daa
jecxz
xor
movsb
xchg
sub
fbld
stos
mov
sub
imul
jmp
repz
hlt
dec
xor
or
push
dec
jl
testl
adc
jle
mov
xchg
fs
outsl
or
and
shr
cwtl
pushf
out
ret
scas
xchg
add
push
out
pushf
sahf
add
mov
out
mov
jle
push
lds
jns
jb
call
test
int
das
sub
movsb
clc
pop
mov
cltd
mov
ja
xor
insl
jae
sbb
xchg
ret
pop
decb
fwait
sub
in
or
popa
lock
rcrl
rorl
icebp
lods
adc
repz
fldt
adc
jmp
push
adc
push
sub
sbb
inc
es
loope
inc
gs
jns
les
mov
mov
lea
iret
cmp
out
mov
fcomps
sti
pop
jp
inc
adc
dec
jl
movsl
int
dec
inc
dec
dec
scas
jbe
sub
xchg
por
and
int
inc
sarl
jnp
mov
jg
jmp
out
cmpl
pop
push
insb
outsl
fisttpll
push
inc
xor
aam
adc
insl
and
xlat
or
in
dec
mov
xchg
or
mov
jmp
xchg
jae
icebp
out
mov
xchg
push
push
jle
sbbb
and
pop
push
mov
call
cmc
push
push
xor
insb
and
lods
push
in
add
int3
outsb
pusha
inc
cld
xchg
xlat
xlat
sbb
sbb
xor
xor
enter
in
push
and
add
push
or
xor
mov
add
push
inc
and
xchg
mov
pop
adc
add
sub
addr16
gs
add
jns
lock
push
mov
add
push
pop
adcb
rcl
push
jb
jge
sbb
adc
or
movsb
xchg
pusha
pop
mov
pop
lret
mov
pop
ss
jle
in
or
mov
in
mov
push
pushf
add
mov
scas
outsb
movsb
dec
sti
cld
scas
cs
mov
movsl
ds
stos
push
lret
xlat
leave
cmp
mov
lea
xchg
adc
dec
in
and
mov
ds
adc
sbb
jecxz
fisubs
push
dec
adc
push
out
pushw
xchg
inc
stos
inc
jbe
sub
test
aam
mov
ret
test
mov
add
pop
dec
pop
sub
loope
inc
sub
xchg
cmp
std
pop
cmp
xor
outsl
mov
arpl
add
jle
movsb
repz
xchg
sbb
out
add
pop
hlt
add
lods
rolb
repnz
mov
imul
test
sarb
xorl
and
jbe
xchg
jo
popl
insb
dec
repnz
sbb
cwtl
inc
dec
arpl
cmp
sbb
into
push
push
add
mov
mov
lret
fs
imul
out
in
out
cmp
adc
clc
divb
push
inc
cld
loope
add
icebp
add
mov
sub
aam
mov
pop
inc
mov
xlat
and
jbe
dec
push
fsubl
inc
rcll
mov
jecxz
add
xor
push
sub
test
push
gs
pop
fsts
dec
xchg
mov
jg
adc
insb
nop
pop
push
push
stos
jl
es
cltd
notl
mov
ss
nop
lea
fidivl
push
dec
inc
out
dec
enter
aas
fcompl
mov
mov
or
nop
in
and
xor
or
lcall
push
outsl
inc
inc
daa
lds
orl
push
mov
shl
cmp
data16
xchg
or
test
fidivs
mov
js
ljmp
scas
and
mov
ljmp
loop
jle
push
dec
stc
mov
cmc
add
mov
mov
sub
lret
or
inc
mov
in
jecxz
test
adc
fldt
xchg
lret
popa
pop
int
sub
int
je
sbb
jl
and
stos
lock
fdivr
dec
ds
enter
and
faddp
push
cmp
test
inc
testl
push
in
scas
push
cmpsl
xchg
sbb
lahf
push
push
cld
sbb
xorb
cmp
mov
or
adc
adc
dec
shlb
call
or
add
and
cltd
lcall
pop
pop
dec
bound
jne
mov
pop
shr
jae
xchg
dec
test
pop
shlb
adc
test
int3
lods
lods
cmp
sub
jecxz
jno
jne
stc
icebp
or
sbb
sbb
outsb
int3
insl
pop
push
or
jb
pushf
mov
rcll
dec
mov
into
dec
fbld
xchg
sub
jp
fs
cli
arpl
addr16
popa
lretw
bound
lahf
jmp
xchg
adc
xchg
push
jle
push
cwtl
test
cmp
movsl
fnstcw
aam
sub
sti
xchg
popl
push
mov
shrl
ja
sbb
fidivs
push
push
cmpsb
push
push
outsb
xchg
cmp
lcall
inc
jmp
jno
pop
mov
cmc
jo
lds
adc
je
in
add
pop
andl
out
jo
push
inc
mov
xor
ret
mov
clc
inc
in
jne
je
iret
je
add
mov
mov
test
pop
lret
dec
inc
bnd
ret
mov
and
and
popa
pop
push
lret
fldl
adc
popa
sbb
mov
mov
or
xlat
mov
fdivrs
fs
cmc
lods
std
push
in
or
out
in
lods
mov
in
mov
jnp
mov
inc
jns
enter
pop
jmp
in
xor
mov
push
add
enter
jns
push
lods
push
jbe
jo
flds
out
icebp
nop
call
outsb
stc
fdivl
leave
dec
test
arpl
sub
adc
shrl
test
xchg
orl
je
xor
xchg
loop
dec
mov
dec
cmp
jno
mov
push
push
addr16
jp
jmp
jnp
out
pop
xchg
std
cld
and
xchg
dec
ret
add
repnz
cmp
int
aaa
pushf
xchg
leave
rcll
shl
cmc
bound
mov
mov
rolb
cmc
pop
cmc
mov
lods
pop
cmpsb
ja
pop
cmp
and
mov
adc
jo
jns
ljmp
jo
cli
dec
xchg
sbb
cmpsb
incl
xchg
jecxz
sub
pushf
out
jne
fists
jecxz
stos
jmp
test
adc
out
mulb
push
pop
fiadds
imul
push
pop
cli
jbe
outsl
lret
ja
lea
sub
sarb
fbld
mov
add
test
add
iret
push
add
add
pop
pushf
nop
adc
or
and
jb
sbb
adc
pop
cmpsl
js
push
std
das
sub
or
imul
popa
jp
xor
in
adc
mov
pop
pop
mov
fisttps
adc
adc
fwait
idiv
ds
in
push
dec
xor
or
outsb
les
sti
out
mov
das
outsb
test
xchg
cmp
cltd
inc
dec
push
push
fildl
aam
cmc
xchg
add
nop
movsl
fs
mov
and
add
les
and
fistps
mov
cmc
dec
inc
adc
inc
fdivrs
dec
subb
xor
sub
sbb
out
push
rcll
mov
push
inc
cmc
sub
dec
dec
cmp
jnp
or
jp
mov
leave
nop
xor
mov
divb
jmp
loope
cmp
dec
pop
mov
out
loope
mov
adcb
jo
cmp
inc
rcrb
jne
push
fwait
fwait
nop
daa
xor
jbe
or
and
fiaddl
sbb
int
lcall
xor
adc
cmp
push
jle
sub
push
push
test
adc
repz
sbb
test
ret
arpl
sub
fildll
adc
push
lock
push
pop
mov
lret
int
call
push
mov
imul
pop
sbb
repz
dec
or
out
pop
pop
mov
pop
dec
mov
mov
cmp
add
pop
or
mov
adc
popa
mov
cmp
fucomi
sahf
mov
lret
scas
dec
test
dec
fbstp
jb
test
testl
or
stc
pop
sub
lds
pop
cli
xor
mov
cmpsl
jns
imul
insl
ds
mov
inc
sub
push
pop
pop
inc
sti
or
pop
sbb
idivb
or
fsubp
lods
push
fimuls
push
cmp
scas
push
outsl
sbb
fwait
cwtl
jle
push
into
push
push
xor
shrl
and
xchg
jg
daa
es
sar
scas
nop
subl
cmpsb
sub
jmp
jns
fldt
lea
sbb
fwait
jb
xchg
sub
outsb
in
dec
sub
fmuls
inc
or
xchg
inc
jnp
inc
popf
cmp
lods
mov
pushf
push
xor
dec
dec
int3
outsl
in
dec
rcr
out
dec
shr
stos
cmp
cltd
int3
adc
sti
imul
pop
fwait
lea
insb
fcmove
in
cli
sub
popf
mov
xor
stc
gs
sti
movsl
mov
call
cltd
adc
adcb
xchg
pop
ss
mov
sbb
inc
xchg
adc
mov
sbb
stc
pop
popa
sub
movsb
adc
dec
in
mov
test
adc
jp
cmc
and
sub
ljmp
jo
mov
pop
sbb
insl
mov
mov
lock
je
in
nop
push
test
js
outsb
sbb
jp
scas
jp
push
lea
rolb
bound
jecxz
cld
push
jge
mov
cld
mov
rclb
cmp
add
popa
xchg
adc
pusha
lock
daa
jl
enter
cmpsl
mov
sub
xlat
jb
cli
dec
and
cmp
or
xchg
jl
sbb
cwtl
icebp
daa
mov
movl
push
sub
push
jae
xchg
test
jnp
lret
mov
cli
add
in
xor
xchg
mov
fcmovnb
loopne
dec
int3
jae
xchg
pop
in
xor
jnp
aas
int
and
loopne
and
outsl
jnp
xor
xor
pop
sbb
sbb
or
test
xor
sub
addb
cmp
push
fs
mov
inc
add
push
pusha
pop
lahf
sti
inc
pop
jl
xor
xor
mov
dec
or
into
push
sub
push
inc
adcb
roll
sahf
testb
dec
repnz
dec
jae
cli
mov
adc
popa
dec
fsubs
fcomp
je
cmp
pushf
shrb
imul
adc
mov
push
push
ret
pop
in
and
dec
mov
outsb
mov
mov
lods
std
push
orl
adc
sbb
mov
xchg
aaa
mov
mov
cmp
daa
lcall
sbb
mov
push
mov
mov
adc
pop
sarb
lcall
xchg
jbe
push
jo
bound
add
stos
push
pop
test
sbb
adc
iret
xchg
mov
nop
pusha
je
out
imulb
inc
iret
in
push
cmp
push
fnstenv
push
cltd
push
shl
call
xchg
imul
inc
loope
inc
aaa
or
lods
loop
sub
in
sbbl
out
mov
cmp
repnz
in
jae
aaa
xor
mov
mov
jno
or
testb
mov
scas
test
in
sbb
mov
lea
mov
mov
cmp
adc
int
outsl
xor
cmpsl
xorb
dec
aas
mov
and
jns
test
bound
and
push
cmpsb
and
mul
lcall
sbb
dec
mov
xchg
in
lods
adc
test
pop
dec
sbb
mov
mov
jle
mov
xor
push
adc
loop
lods
or
insl
addb
test
test
xor
nop
rcrb
stos
iret
movsl
inc
sbb
sbb
fadds
xchg
pusha
fmuls
pop
sbb
cmpsl
dec
mov
fsubl
imul
data16
stos
das
or
out
push
fwait
sbb
mov
leave
lods
daa
cmpsb
mov
scas
into
or
shrb
xchg
dec
jmp
aad
sub
loopne
lds
aam
jmp
or
cmc
out
aam
mov
test
dec
or
xor
inc
cwtl
sti
jle
aam
or
sub
das
adc
loop
xor
cmpsl
push
add
sbb
and
jnp
cwtl
mov
pop
daa
cwtl
mov
lods
stos
je
into
int3
jns
sahf
std
and
pop
ja
lods
jecxz
fisttpll
mov
xchg
das
and
test
mov
mov
out
mov
xchg
ds
loop
or
mov
sub
lods
shll
xchg
dec
or
aaa
dec
jmp
inc
mov
mov
leave
fsubrs
hlt
dec
and
mov
xchg
push
lret
test
mov
clc
lods
scas
cmpsl
cmpsl
lret
scas
sub
cmp
in
xchg
dec
fstps
popa
sbbl
sub
loope
xchg
mov
pushf
xchg
jbe
nop
cld
xchg
insb
mov
mov
clc
push
mov
in
xchg
out
mov
movsb
or
iret
adc
pop
sbb
repnz
sahf
xchg
cs
loopne
and
lods
jo
lea
dec
sbb
sub
inc
mov
adcb
lret
inc
or
fstpl
lret
sbb
mov
pop
dec
mov
sub
inc
ds
xlat
and
lahf
cwtl
xor
sahf
icebp
stc
push
imul
cmp
jnp
notb
stos
addl
mov
pop
pusha
shl
lds
inc
and
xor
sub
cmp
dec
rolb
dec
add
jne
cmpsb
std
pusha
sarl
push
xchg
push
test
mov
lods
mov
adc
test
dec
cmp
dec
pop
lods
outsl
out
rcrb
jo
push
notb
addr16
and
dec
cmpsb
sbbb
cmp
jns
icebp
jecxz
ljmp
cli
pop
pop
aam
lea
mov
and
fcmovnbe
rorb
mov
mov
push
lods
ljmp
cmc
repz
imul
icebp
daa
js
inc
out
jge
imul
ljmp
and
jb
outsb
mov
pop
inc
pop
xchg
arpl
or
loop
jno
fwait
inc
mov
sarl
inc
cli
aam
pop
inc
movsb
sbb
mov
dec
mov
ljmp
cs
pop
fsubl
cs
sbb
jbe
aad
stc
jb
mov
sbb
in
cmp
xor
mov
pop
scas
adc
out
bound
add
pusha
mov
outsl
inc
aaa
or
pop
into
in
lods
lret
pop
jnp
mov
mov
adc
or
aaa
lahf
dec
dec
out
lods
add
bound
movsl
in
jge
shrl
sbb
or
inc
jp
cwtl
popf
push
stos
andl
gs
push
inc
add
dec
push
nop
and
inc
lcall
mov
mov
lods
pop
mov
lahf
out
mov
aaa
cld
and
sub
cmp
out
ret
or
add
test
cld
jecxz
push
stos
add
js
ret
jb
pusha
push
xchg
jnp
mov
out
dec
sti
or
stc
or
lods
pushf
adc
mov
pop
mov
das
sbb
mov
lds
xchg
mov
stc
int3
repnz
add
movsb
addb
xlat
pop
push
jmp
in
dec
call
dec
cld
sbb
and
jecxz
add
fcoml
lea
add
aaa
rcl
sub
ljmp
adc
seta
dec
loop
lea
adc
scas
xchg
popa
ljmp
ret
cmp
aaa
and
pop
mov
add
add
aam
fistps
imul
add
push
mov
sti
les
jne
out
jle
js
mov
in
cmp
or
subb
jle
mov
data16
and
adc
dec
add
mov
std
push
cs
movsl
or
lret
mov
mov
hlt
adc
unpckhps
in
es
push
lock
xor
xchg
or
push
idivb
mov
das
test
push
cmc
pusha
outsl
xor
dec
sbb
pusha
mov
mov
sarb
push
cltd
cmp
sbbl
jo
pop
push
cmpsb
pop
jmp
shl
clc
daa
or
mov
mov
mov
ljmp
and
inc
sub
and
jle
jne
mov
loop
mov
int3
add
push
jle
cld
mov
aas
loopne
arpl
xchg
in
inc
adc
sti
xchg
xchg
in
jge
rorl
div
mov
cmp
xlat
adcb
fadds
sbb
ret
sub
mov
fwait
pop
sbb
incb
sub
and
rcll
insl
sbb
jb
pushf
mov
sbb
movsb
or
fimuls
or
add
push
mov
in
fsub
out
adc
cmp
mov
adc
leave
call
pop
add
mov
in
lock
es
mov
inc
sbb
inc
jmp
add
jmp
stos
scas
and
push
fisttps
mov
ja
clc
insl
mov
loop
adc
das
jmp
pop
add
repnz
imul
mov
dec
loope
jnp
xchg
and
sub
call
repz
rcrb
cld
arpl
shll
cmpsl
adc
fidivl
rorl
mov
rolb
das
fst
dec
mov
inc
testl
cmpsl
adc
xor
inc
mov
int
mov
dec
dec
lea
frstor
into
loopne
cwtl
jo
xor
pop
sub
push
xor
adc
mov
testb
in
ljmp
sbb
insl
test
mov
ja
xor
mov
insl
sti
in
pop
mov
jne
jnp
in
jg
iret
leave
ret
ds
int3
mov
test
pop
movsl
out
ja
jbe
cmc
adc
mov
or
xorl
xchg
pushf
mov
leave
leave
rcrb
jae
movsb
nop
fdivs
test
cli
dec
fldenv
int
lea
sbb
mov
rcrl
mov
addr16
jns
pop
push
mov
xor
outsl
repnz
out
int
mov
repz
es
mov
jb
or
adc
cs
test
xor
shrl
dec
jo
daa
incb
cli
xchg
mov
cmp
jne
mov
mov
pop
mov
fistpll
stos
rclb
sub
fiadds
mov
dec
adc
and
push
inc
stc
dec
pop
pop
push
and
jno
mov
popa
mov
sbb
pop
popf
ret
rorb
jmp
xchg
xchg
mov
jge
es
shlb
in
insl
js
in
dec
xchg
stc
cmc
dec
mov
xor
movsl
cmpsb
lds
add
jb
xor
loope
fwait
rorl
xorb
lcall
push
cmp
mov
sbb
shrb
or
xchg
adc
pop
mov
jae
sar
sbb
jbe
adc
setp
pop
stos
negb
int3
ljmp
lcall
push
xor
add
adc
imul
sahf
daa
popa
push
xchg
sub
xor
mov
cmp
sub
jae
xor
cmc
shll
and
lods
stc
fld1
cmc
push
push
or
xchg
hlt
push
fs
push
add
lcall
jns
push
adc
pop
dec
dec
jmp
test
push
mov
push
xchg
int3
lret
add
cmp
and
into
jge
and
out
adc
inc
fnstenv
cmp
std
sub
or
aam
xor
aas
iret
dec
mov
mov
push
inc
pop
xor
pop
rdtsc
inc
out
adc
mov
sar
sbb
adc
test
imul
rolb
mov
mov
mov
lret
ja
mov
lods
leave
mov
jmp
adc
ss
push
cli
call
mov
and
sub
das
int3
lcall
adc
in
aad
ds
test
test
and
dec
cmp
fisubs
push
mov
int3
test
jge
fisubl
xor
push
cltd
jg
or
stos
or
cmpsl
das
mov
inc
jno
push
stc
incl
push
mov
hlt
test
mov
int3
mov
dec
push
mov
hlt
loopne
cltd
xchg
push
pop
loopne
loope
pop
mov
in
pop
fwait
iret
cmpsb
push
and
out
icebp
cli
sbb
sbb
xchg
mov
cld
notl
inc
xor
test
pop
dec
fwait
adc
sahf
pop
sub
pop
jl
pop
clc
outsb
mov
sbb
push
inc
into
add
adc
jmp
push
shrl
pop
mov
nop
xchg
cmpsl
js
sar
stos
ficoml
lods
sub
push
filds
xor
dec
inc
dec
xor
mov
adc
sarl
dec
push
or
cmovs
fstps
xchg
add
fistl
cmp
xor
icebp
mov
sub
lea
xor
mov
xor
add
loopne
rep
aas
pop
loope
jle
aaa
cwtl
test
mov
cmp
addr16
pop
dec
icebp
testl
xlat
fidivs
loopne
mov
stos
or
enter
movsl
cmpsl
mov
cmp
cmpsl
fbld
jp
outsb
insb
cmp
popa
mov
in
or
data16
mov
out
cmpxchg
push
sub
out
insb
je
imul
pushf
ja
fcomps
in
cmp
push
loop
sbb
movsl
xchg
fdivr
xor
jl
popa
sub
mov
adc
jl
and
lods
cmpsl
insb
mov
dec
rep
out
ja
jns
outsb
popa
std
sub
fidivrs
sbb
cmpsl
mov
inc
pop
or
dec
test
loope
out
push
add
jge
scas
push
daa
lahf
lret
in
cli
and
ds
loopne
jge
call
mov
dec
xor
adc
mov
xlat
lock
hlt
mov
cld
and
lret
add
xor
push
movsl
inc
sbb
cmpsl
dec
mov
mov
movsl
pop
hlt
inc
inc
jg
add
cmp
adc
iret
test
and
mov
cmp
nop
iret
jl
movl
lods
clc
mov
aad
sbb
sarb
out
sahf
or
push
jle
jg
pushf
movsb
push
inc
xor
mov
loop
push
pop
sbb
aam
fdiv
lret
inc
jmp
adcl
cmp
cmpl
dec
xorl
test
aaa
in
push
push
mov
dec
mov
in
jns
int
push
inc
dec
push
cmp
aaa
ss
or
push
in
aaa
add
sbbl
lds
mov
adc
pop
rclb
imul
out
fildll
adc
test
jl
cmp
pop
faddl
int3
sub
fsubr
adc
cli
mov
jle
sub
jb
xlat
mov
repz
mov
repz
mov
das
test
cld
or
mov
repnz
fldenv
jmp
and
imul
subb
fisttpl
sub
or
enter
push
jle
fdivs
sbb
xor
dec
ds
les
jne
arpl
xchg
scas
inc
pop
pop
xchg
xchg
fsts
fcmovnb
in
in
stos
gs
pop
inc
xchg
jb
int3
outsb
mov
pop
out
mov
imul
das
sub
jb
adc
test
ffreep
roll
subb
dec
adc
call
psubb
pop
sbb
outsb
sbb
mov
sbb
sub
cmp
sub
lods
lds
add
mov
adc
push
and
repnz
mov
stos
movsb
mov
cmp
sbb
sbb
sbb
jb
stos
adc
add
mov
inc
adc
xchg
lret
cld
lock
cmc
ret
out
xchg
jo
sbb
xor
adc
cmpsl
push
jl
mov
movsl
out
lahf
pop
dec
xor
add
test
daa
sbb
or
test
fsubrs
inc
pusha
pop
inc
mov
mov
push
or
cli
sbb
add
push
sub
xor
das
jle
cmpsw
and
xor
mov
addr16
inc
mov
adc
push
outsb
xchg
dec
and
shll
sar
push
cmp
out
roll
mov
mov
in
in
mov
or
shlb
clc
aaa
arpl
pop
ret
shrl
pop
dec
and
dec
ret
inc
pop
mov
inc
lods
in
inc
cltd
ljmp
inc
sub
unpckhps
pop
insb
push
mov
xchg
xchg
insb
jle
mov
push
push
inc
ret
mov
jecxz
leave
cli
cmpsb
fstpl
testl
mov
push
je
dec
js
icebp
cmpl
popa
push
sbb
lods
xor
flds
xorb
repz
les
mov
inc
cmp
in
clc
iret
inc
lods
inc
mov
aam
and
call
mov
mov
movq
mov
and
xchg
dec
add
jle
mov
call
aad
push
xchg
out
lods
cltd
pop
jecxz
push
fdivl
and
out
fistpll
or
insb
ljmp
pop
jg
aam
xchg
out
negb
mov
ljmp
inc
mov
loop
mull
add
xor
sahf
outsl
jecxz
mulb
pop
pop
mov
xchg
js
lock
cbtw
insb
xchg
lock
ret
inc
cli
mov
pop
push
das
push
xchg
push
into
sub
mov
xchg
sbb
add
nop
jns
mov
out
inc
cmc
push
cs
mov
mov
lahf
je
jne
jne
daa
inc
xchg
loop
subl
mov
jno
mov
mov
xor
arpl
and
mov
push
out
xchg
adc
dec
shrb
mov
mov
push
push
test
scas
mov
sbb
push
shrl
ja
push
jb
mov
jne
daa
adc
lods
inc
cmpsl
mov
test
push
movsl
inc
js
jnp
aas
mov
dec
inc
sbb
lods
arpl
insb
insl
cwtl
jno
push
or
adc
xchg
and
mov
jg
push
loope
mov
rclb
mov
jmp
out
repnz
cmp
in
pop
or
lods
sbb
pusha
cmc
sti
das
icebp
loop
jne
outsl
lods
insl
cmp
iret
inc
lahf
adc
mov
fdecstp
insb
jecxz
clc
jge
dec
sbb
les
fstps
mov
call
loope
es
movsl
test
adc
and
std
cmp
pop
sbb
add
mov
jbe
cmc
jbe
popa
mov
repz
mov
pop
pop
test
idivb
mov
jbe
mov
xor
jo
leave
aas
outsb
mov
les
sbb
mov
pop
xchg
and
test
mov
loop
jge
out
test
pcmpgtd
mov
cmp
jae
in
dec
loop
test
jnp
lcall
add
sarl
clc
sarb
jno
jecxz
inc
push
mov
pushf
mov
push
adc
cmp
adcb
sub
insl
test
xor
xchg
shrb
fwait
pop
out
xchg
cltd
inc
sbb
repz
cld
add
cmp
incb
push
push
mov
in
out
adc
xchg
jmp
pop
jge
fs
xchg
mov
inc
test
je
insb
pusha
cmpsb
inc
xchg
fwait
mov
shlb
stos
push
in
clc
in
mov
lahf
flds
into
aas
pushf
inc
shlb
test
mov
stos
jnp
push
fdivrs
cmp
jg,pt
xlat
jbe
inc
addl
addr16
int
in
xlat
lret
xchg
push
cmp
cmpsb
repnz
jp
push
fildll
lret
push
xchg
arpl
iret
in
cmp
xchg
ljmp
in
insl
adc
mov
mov
jmp
add
popa
orl
mov
sbb
xor
data16
push
roll
xor
iret
enter
xchg
sahf
xchg
push
or
mov
lret
enter
std
or
movsl
arpl
xchg
adc
mov
or
push
xchg
sbb
sbb
push
or
repnz
push
dec
pop
inc
mov
data16
inc
aad
and
negl
scas
pop
ret
mov
mov
mov
stc
sub
and
clc
sahf
pop
repnz
iret
push
cmpsb
out
push
mov
dec
lods
hlt
sub
xor
or
cmpsb
sbb
xlat
outsb
xlat
xchg
push
cmp
scas
add
icebp
sahf
adc
out
aad
inc
inc
xchg
dec
mov
movsl
mov
les
enter
arpl
mov
lods
push
or
jb
int3
cmpsl
xchg
lcall
push
mov
inc
lret
sub
mov
pop
shl
jns
andl
xor
sbb
sbb
sub
or
pop
xchg
dec
test
mov
mov
int3
lcall
cwtl
dec
scas
push
xchg
les
push
rolb
in
cli
or
cmc
popf
lds
or
cmp
sub
jno
mov
hlt
cmp
in
shrb
xor
iret
and
stos
ja
in
in
push
jae
mov
lcallw
pushf
sbbb
cli
sbb
fucomi
and
lret
push
sti
jg
imul
out
and
or
jb
imul
jb
mov
dec
jecxz
dec
aad
push
ljmp
inc
push
leave
adc
mov
dec
push
jns
mov
les
aas
cmp
mov
cli
int3
arpl
imul
outsb
hlt
iret
jmp
mov
mov
and
in
push
inc
sbb
test
xor
pop
cmpsb
mov
cwtl
mov
add
scas
xchg
pop
lret
xor
cmp
cmp
or
in
pop
pop
jae
push
aad
and
mov
scas
add
pop
jb
adc
pop
nop
mov
push
dec
pop
loopne
loopne
mov
adc
aaa
out
mov
ret
jl
psubsw
add
jg
mov
lret
jbe
jmp
rcrb
sarb
rcrl
stos
xchg
cmp
dec
shrl
testl
pushf
in
jl
xor
cmpsb
adc
sub
mov
mov
mov
and
mov
mov
xor
add
push
leave
bound
inc
fsub
or
mov
and
xchg
push
or
inc
mov
xor
dec
inc
cmc
out
and
push
orl
push
mov
jge
outsl
iret
movsl
mov
add
jle
mov
dec
adcb
dec
std
daa
addr16
and
ja
mull
mov
pop
jae
loop
jbe
add
push
xchg
xor
in
mov
sub
leave
std
rorb
xchg
add
fdivr
cli
imul
lret
xchg
mov
iret
or
sub
nop
xchg
arpl
cmpsb
cwtl
sub
sbb
test
icebp
mov
cltd
cmp
pop
test
sbb
cltd
and
add
cmp
sahf
sti
data16
dec
pop
lea
imul
imul
ds
das
sbb
sbb
dec
dec
cmp
xchg
pop
mov
push
lea
outsb
loope
cmc
inc
sub
bound
cmp
xchg
pop
sbb
fcomps
cmpb
sbb
jno
mov
dec
xor
gs
lock
mov
mov
les
push
mov
in
or
neg
pop
sahf
jno
ret
out
jmp
dec
adc
push
lods
jbe
iret
lcall
inc
fwait
push
int3
or
jp
sbb
push
movsl
mov
shll
scas
xlat
adc
push
mov
pop
data16
imul
ret
aam
xchg
pop
mov
sub
mov
jmp
push
lods
outsb
dec
sbb
sbb
popa
aad
and
std
dec
inc
outsl
subl
sub
in
mov
jbe
aam
mov
aas
xchg
into
adc
inc
adc
movsb
pop
lods
sbb
call
es
xchg
cmc
xchg
rol
push
ret
lcall
int3
hlt
rcl
in
cltd
jl
jge
adc
cmp
notb
dec
mov
stos
jg
dec
ret
pop
jg
stc
je
add
ret
ljmp
imul
sub
pop
and
xor
lods
mov
mov
mov
shr
and
xchg
pop
add
lcall
out
fimuls
pop
xchg
jecxz
movsb
inc
sbb
mull
dec
mov
int3
jge
add
push
roll
xchg
loop
ja
push
lret
mov
pop
cli
imul
or
inc
xchg
stos
mov
arpl
add
stc
int3
iret
xor
es
sbb
mov
xor
pop
rolb
add
push
sahf
lret
cmp
pop
or
cmpb
mov
push
jg
mov
das
mov
adc
aaa
shrl
pop
cwtl
loope
push
out
push
mov
adc
fldenv
sub
rol
xor
inc
jmp
push
repnz
sbb
adc
loopne
cli
add
jle
mov
mov
sub
mov
in
bound
sbb
movsb
inc
jl,pn
mov
scas
lcall
leave
xchg
pop
push
icebp
mov
add
mov
adc
inc
sbb
sbb
aas
and
in
je
mov
fldenv
push
push
popa
jbe
mov
std
ret
std
nop
cmc
and
dec
popf
shll
jno
cmp
add
mov
jo
out
and
into
mov
enter
push
faddl
dec
sbb
jg
or
ljmp
dec
mov
das
enter
jg
ret
push
sbb
and
mov
iret
and
pushf
sbb
xchg
mov
cli
cmpb
imul
mov
mov
repz
pop
daa
scas
mov
inc
xor
xor
xchg
push
into
mov
imul
mov
adc
and
sahf
push
shr
or
movsb
cli
pop
insb
mov
push
pmulhuw
out
inc
sub
jle
popa
int3
inc
and
daa
xlat
dec
test
mov
cmc
fwait
mov
xchg
mov
stos
jae
mov
rcl
adc
jg
fildl
fsubp
lock
sbb
sub
sbb
loop
mov
jmp
clc
jle
lcall
and
aas
pop
sub
test
lods
pop
cmp
pop
aas
in
sub
add
cltd
outsl
movsl
xchg
call
pop
arpl
add
leave
stos
sbb
mov
or
icebp
xchg
dec
inc
ljmp
test
pop
mov
fdivl
sub
push
push
fcompl
adcb
test
xchg
dec
hlt
pop
inc
gs
push
sub
test
or
out
adc
jo
add
cmc
push
pusha
push
ret
loop
out
mov
sbbl
pop
int3
stos
xor
shrl
or
sub
shlb
add
lahf
push
shrb
push
bound
mov
pop
inc
lds
das
add
inc
cmc
cmp
insb
pop
dec
vmovshdup
pop
pop
out
inc
dec
push
dec
dec
push
xchg
ret
out
xchg
das
aas
mov
cmpsl
cmp
lds
in
xchg
dec
xor
jno
mov
jp
or
les
add
add
dec
adc
inc
jg
fstpl
in
pop
in
imul
out
dec
frstor
sub
pop
pusha
pop
loopne
sarb
jno
or
gs
rcrb
nop
fstpt
fnstsw
adc
loopne
pop
dec
dec
movsb
aam
or
stc
bound
out
xor
mov
shrb
lahf
xor
and
xchg
sub
jae
sbb
cmpsl
add
push
cltd
pop
fcmovb
cltd
inc
orl
stc
sbb
int
push
xlat
or
or
test
sub
outsl
push
or
outsb
int
cmp
out
mov
mov
imul
ljmp
dec
cmp
fidivl
sbb
sub
adc
std
xlat
int3
mov
aas
daa
data16
ret
mov
out
imul
push
inc
push
jns
pushf
mov
imul
stos
adc
and
call
jns
daa
rol
and
stos
pop
adc
movsb
into
stos
pop
out
dec
dec
inc
dec
fcom
subl
xor
cmpsl
cmp
out
not
std
sbb
add
and
loop
xchg
into
lds
ror
cmc
insl
loope
loopne
jl
jo
pop
inc
cmp
mov
push
cli
pop
push
fistpll
adc
adc
or
sub
fsubr
pop
in
scas
lods
shrb
push
aaa
jecxz
sbb
fstp
xchg
or
pop
scas
les
inc
and
fildl
fiadds
fwait
out
push
sub
stos
filds
negb
cwtl
ror
out
cmp
loop
pop
inc
and
jge
xor
test
inc
jl
nop
divb
or
sbbb
push
cmp
ds
lea
pop
mov
sub
out
xor
cmp
jmp
aaa
xor
lahf
test
inc
or
mov
int
or
popf
in
dec
out
sub
mov
imul
push
mov
push
inc
inc
or
js
add
sub
out
mov
int
aad
sub
mov
add
ja
ret
cmpsb
cmp
hlt
cmpsl
loope
dec
mov
repnz
aad
in
popa
les
cmp
cmp
cmpsl
dec
aaa
ja
sbb
loope
dec
push
std
jae
test
fucomp
outsl
pop
in
outsl
push
pop
int
inc
or
xor
mov
xchg
sahf
das
rcl
xor
add
jge
dec
ja
imul
fidivrl
iret
adc
aam
loop
xchg
cmp
add
push
lret
or
mov
cli
dec
push
xchg
adc
clc
rcll
dec
aaa
xchg
add
lods
xchg
inc
loope
xor
jnp
pop
xchg
and
inc
xor
xor
sub
push
mov
or
mov
adc
mov
inc
fstl
or
insl
pop
test
cwtl
mov
sti
xorb
sub
hlt
out
or
cmp
inc
subl
xchg
loope
mov
cmp
adc
ret
cltd
enter
dec
popa
nop
or
iret
into
mov
dec
daa
dec
inc
sbb
push
loopne
std
outsl
sbb
mov
add
mov
cmp
jmp
fsubl
xchg
fisttpl
mov
aaa
mov
sbb
inc
add
aaa
mov
dec
cmp
lret
push
test
or
mov
arpl
sbb
xchg
sub
mov
repz
push
adc
xlat
xor
adc
add
repz
xchg
mov
inc
fmul
loopne
lock
popa
sbb
popf
mov
xor
jg
and
mov
flds
inc
aaa
stc
sbb
jnp
adc
mov
insb
test
xchg
cmp
mov
rolb
mov
mov
dec
or
mov
xor
mov
mov
mov
dec
cmp
xchg
inc
jmp
lds
imul
sub
push
testl
fldcw
mov
aam
divl
aam
movsl
fbld
fucom
add
aad
fs
and
sub
addr16
js
stos
and
push
mov
inc
or
fsubl
cmp
xchg
inc
in
cmovbe
addr16
nop
insb
xor
jecxz
mov
dec
xor
add
out
pop
xchg
xchg
les
mov
comiss
adc
adc
sub
inc
ljmp
inc
push
add
pusha
jb
mov
stos
lock
fucomi
push
xchg
call
fdivl
hlt
addr16
int
xchg
push
cli
cli
inc
push
pmuludq
dec
shll
test
pop
lahf
xchg
into
pusha
xchg
dec
xor
test
xor
cld
cli
ret
inc
aam
out
lea
inc
repnz
push
inc
cld
fsub
inc
sbb
sub
jl
jle
push
inc
cs
push
rcr
jb
cmp
or
test
or
push
aas
sbb
mov
pop
cmpl
leave
xchg
lret
mov
es
xchg
dec
insb
xchg
mov
mov
add
cmpsl
test
test
daa
pop
loop
cmpsl
in
test
es
sbb
mov
and
push
add
sbb
and
test
or
ss
or
cmp
pusha
shll
sub
js
ret
nop
dec
mov
mov
sbb
sahf
adcb
mov
push
xor
mov
sahf
loopne
sbb
call
lahf
or
lahf
add
mov
cmp
ret
adc
mov
fimull
clc
xor
aas
xor
mov
fiadds
js
push
int3
push
cmpb
and
xchg
mov
mov
mov
fstps
lret
lods
cmp
sub
mov
add
lds
lret
add
inc
inc
cmpsl
cltd
dec
ss
mov
mov
aaa
inc
aam
in
lret
push
or
dec
sarb
push
jo
movl
int3
xor
dec
pop
cmp
outsb
adc
outsl
aam
mov
and
inc
mov
xchg
push
aaa
pop
movsl
mov
call
je
fisttps
pop
das
inc
add
add
push
push
mov
ja
test
sub
pushf
ret
inc
enter
scas
lcall
int
aas
mov
dec
or
nop
sarl
movsl
sub
add
sub
push
push
sbb
aaa
aam
push
mov
or
out
sahf
sub
lods
out
xor
imul
dec
lds
mov
pop
and
add
cs
pop
test
or
pop
add
sub
clc
cwtl
ja
or
pop
push
or
int
enter
bound
pop
mov
inc
pop
add
ret
jecxz
cltd
outsb
fimuls
pop
stc
mov
cmp
xchg
out
mov
lods
movsb
mov
inc
xor
push
mov
xor
inc
jecxz
stc
sbb
cmp
scas
lea
xor
cmp
ret
int
lods
pop
jne
push
out
xor
sub
mov
sbb
dec
call
dec
shl
mov
jg
pop
xchg
dec
mov
andb
mov
push
mov
push
inc
add
cmp
sub
dec
dec
push
mov
andb
cmp
shr
adc
mov
sahf
mov
loope
fsubrl
sahf
ds
cmp
popa
sbb
rorl
xchg
pop
jl
jbe
cli
iret
adcl
sbb
push
in
outsb
adc
in
pop
xlat
movsl
pop
mov
outsl
dec
jo
outsb
fsts
push
and
mov
dec
popa
aaa
xchg
xor
insb
jnp
pop
or
cmc
inc
xchg
inc
gs
lock
int3
mov
jae
pop
testl
clc
loopne
add
add
and
xchg
popf
adc
xor
ret
dec
test
out
mov
jno
inc
cmc
jp
pop
xor
je
jbe
mov
xchg
or
leave
movsb
jo
les
mov
aas
xor
clc
cmp
es
sahf
dec
push
das
gs
and
inc
or
arpl
out
sarl
jns
lods
xchg
xor
scas
aaa
or
jo
cwtl
std
sbb
stos
repnz
add
fmul
sbb
aas
jno
movsl
sbb
cmp
sub
inc
xor
inc
push
push
xchg
xor
sub
ret
pop
fs
pop
test
in
jge
sbb
dec
mov
add
jge
hlt
add
jp
ljmp
mov
cld
jbe
inc
xchg
xchg
mov
jb
adc
das
or
jmp
out
xchg
or
cmp
jo
push
pop
rcr
mov
xor
xlat
xchg
xor
loope
in
mov
in
xor
daa
cmp
loop
jae
xchg
mov
jae
test
and
shlb
jbe
pop
pop
stos
mov
pop
fyl2xp1
add
adc
sbbl
mov
movsb
out
jbe
cltd
xchg
jne
dec
test
arpl
fistps
rol
cltd
pop
std
lods
jb
lds
inc
push
xlat
add
xchg
add
aaa
mov
mov
ret
repz
jge
xor
shll
jp
ret
cmp
jb
and
insl
out
mov
sub
pop
mov
out
jp
cwtl
andl
push
inc
sub
lret
clc
int3
call
les
sbb
xorb
repz
mov
jecxz
jnp
loop
fcmovbe
testb
sub
xchg
stos
push
mov
mov
push
insb
fmuls
shr
aaa
adc
dec
lock
mov
sahf
outsb
jno
ds
and
sbb
adc
mov
add
stc
outsb
sub
inc
cmp
lock
and
mov
adc
or
test
notl
lods
push
adc
xor
notl
pop
std
mov
xor
lahf
mov
xchg
mov
add
pushf
jno
loop
and
pusha
lcall
movsb
jae
test
inc
jo
sub
out
fmuls
mov
lods
test
lods
cmp
leave
jg
xchg
test
dec
mov
and
add
dec
fdiv
fistpll
adc
inc
repnz
jbe
stc
data16
lcall
insb
idivl
xor
lcall
mov
mov
lahf
jns
push
ss
jmp
in
or
cmp
and
and
clc
sub
fwait
repnz
lret
cli
xchg
or
dec
cmp
xchg
mov
dec
cmpsb
test
mov
arpl
mov
ror
rcll
adc
pop
test
mov
int
imul
push
scas
popa
and
xchg
and
sbb
imul
push
inc
sarl
outsb
notb
push
inc
sub
pop
sub
std
dec
and
je
adc
xchg
les
call
inc
jge
push
cli
cmp
aam
lcall
jg
std
mov
repnz
fildl
call
pop
sub
mov
out
pop
xor
cs
mov
dec
and
mov
mov
shlb
js
orl
inc
sbb
call
cmp
gs
iret
add
push
and
and
adc
mov
mov
sahf
dec
cmp
xchg
iret
adc
mov
push
and
mov
filds
ljmp
mov
inc
push
dec
sbb
jmp
dec
ret
add
mov
jmp
lea
and
pop
dec
adcl
cwtl
adc
sbb
dec
clc
test
mov
outsb
ss
xchg
mov
popa
add
in
push
mov
jne
and
ret
or
iret
dec
inc
pop
mov
mov
nop
iret
push
jne
fistpl
test
dec
pop
cltd
mov
inc
fisubl
lock
sbb
stos
sahf
stos
or
jmp
es
in
pushf
xchg
inc
cmp
dec
push
cld
adc
inc
mov
inc
cli
sub
out
inc
lods
sub
orb
out
loop
gs
sub
cwtl
loop
mov
sbb
dec
cmp
mov
cwtl
lods
fisubrl
dec
sbb
xrelease
mov
mov
sub
js
arpl
movsl
ds
push
inc
xor
mov
mov
pop
add
sub
mov
pop
aas
rcl
cld
push
clc
push
fwait
cltd
imul
fcmovne
mov
mov
clc
push
or
mov
imul
cs
cmp
push
or
add
jo
or
push
cmpb
dec
js
cs
stos
or
push
into
or
jle
xor
into
ret
addl
scas
adc
inc
and
add
mov
cmc
shrd
data16
push
mov
ret
mov
xchg
icebp
mov
inc
mov
imul
les
test
mov
daa
stos
or
mov
mov
out
pop
sub
stos
adc
stos
mov
addr16
or
nop
insl
inc
es
xor
dec
stc
pop
push
addr16
enter
jb
js
pop
negb
mov
adc
leave
add
fisubrs
jp
add
mov
je
stos
pushf
sub
mov
and
xor
fisttpll
aas
sti
pop
jmp
test
pop
icebp
dec
and
add
out
lret
push
or
bound
rcr
sbb
stos
divb
sbb
out
out
dec
adc
mov
and
pop
adcl
in
ret
pop
pop
clc
xor
cmpsb
test
cwtl
jns
shlb
mov
xchg
ret
in
iret
xor
cmp
push
jnp
dec
ljmp
push
in
and
cmc
loope
mov
jg
iret
lahf
add
mov
in
clc
inc
mov
sub
xchg
pop
adc
cmp
mov
adc
daa
cmp
mov
pusha
adc
test
lods
mov
pushf
or
ds
sbb
lahf
mov
lahf
sbb
or
popa
mov
mov
imul
mov
cmpsb
cwtl
push
stos
scas
jne
fldl
pop
and
jae
mov
inc
cmp
mov
sar
mov
push
in
lahf
test
mov
xor
cmpsl
test
mov
mov
clc
or
jb
lahf
dec
xchg
ret
jmp
movsb
jns
pop
mov
call
test
and
push
scas
add
xchg
mov
or
mov
fwait
add
fdivrl
add
and
pop
jno
sbb
mov
movsl
jg
orb
dec
or
jmp
lock
xchg
inc
inc
inc
sub
push
and
fistl
inc
mov
push
jmp
fnsave
mov
sub
push
aam
dec
cld
sbb
push
cmc
sub
fnstenv
stos
inc
pop
lcall
out
nop
into
mov
push
std
inc
and
ret
adc
andl
jge
mov
daa
je
pop
mov
push
xor
bound
addr16
mov
cmp
or
fisubl
and
pop
mov
loope
ja
and
mov
add
andl
add
adc
inc
sbb
cmp
jmp
lods
lea
out
dec
push
movsl
jmp
into
stos
imul
test
mov
js
out
xchg
mov
stos
cs
pop
push
pop
and
mov
inc
push
sbb
and
hlt
or
pop
hlt
mov
push
xchg
xchg
mov
lcall
std
mov
andl
fldcw
lcall
ret
dec
adc
adc
or
in
pushf
cld
push
inc
shrl
push
xchg
roll
xchg
rolb
add
scas
cwtl
adc
aas
cmpsb
out
fbstp
xchg
add
mov
mov
icebp
jl
and
pop
pop
xor
stc
pop
push
mov
xchg
mov
add
pop
mov
or
test
ret
pop
clc
cmp
push
jo
das
jbe
out
setge
into
pop
stc
out
enter
scas
pop
inc
es
sbb
mov
push
dec
mov
xchg
lea
push
push
lcall
rolb
sbb
and
lds
jne
or
lret
movsl
jnp
mov
sub
jns
addr16
cmp
stos
sbb
ret
test
mov
sbb
sub
aaa
cltd
call
or
mov
sahf
test
inc
jne
xor
mov
sub
je
push
xchg
mov
inc
inc
jp
outsl
or
xlat
mov
stos
lock
mov
dec
daa
test
fsubl
cmpsl
test
mov
push
mov
xor
dec
push
pop
mov
test
push
ja
xchg
dec
push
inc
push
xor
leave
add
scas
push
mov
add
test
jns
roll
pop
add
repnz
imul
fcmovu
inc
sbb
js
call
fs
andl
cli
cmc
fdivp
outsl
xchg
pop
ja
jo
sbbb
add
push
loop
lds
jmp
jne
stc
jo
sarb
dec
pop
popa
andb
pop
scas
lahf
lock
sbb
cli
adc
xor
sub
xchg
rolb
std
push
mov
jge
cmp
and
mov
testb
loopne
rcrl
inc
arpl
add
popf
sbbb
xchg
mov
stos
sbb
inc
ljmp
rorb
aad
mov
jb
mov
inc
in
and
test
push
int3
push
lcall
cmpsl
jns
cld
mov
cmp
or
sbb
imul
add
cmp
cli
mov
pop
xor
inc
adc
mov
and
stos
fwait
cmpsl
in
xchg
add
mov
es
cld
dec
xorb
mov
repnz
addl
hlt
mov
jnp
sbbb
fstps
mov
inc
xorb
out
xorb
dec
inc
xchg
loopne
lret
in
pop
fstpt
bound
and
pop
sub
cld
pop
shrl
jo
stos
es
shrb
imul
sbb
pop
fildll
jle
inc
sbb
enter
jg
outsl
ret
loope
add
sahf
adc
cmovns
mov
lcall
mov
xchg
loope
pop
dec
rcr
ljmp
cmovno
loop
add
dec
dec
xchg
or
int3
sar
in
mov
arpl
mov
push
xchg
dec
pushf
cld
lds
cltd
cld
test
shll
mov
mov
xor
jno
inc
push
jg
mov
les
adc
leave
mov
sub
insl
ret
mov
adc
lods
mov
add
cwtl
test
jge
fwait
and
repnz
jg
or
dec
jo
mov
xor
enter
bound
cli
push
addr16
dec
orb
push
imulb
mov
cmp
mov
lcall
sub
xchg
sbb
inc
cltd
inc
mov
or
mov
aam
add
ja
add
adc
es
stos
jp
in
cmp
push
push
cmpsb
adc
lods
xchg
cmp
insb
jmp
ret
jno
pop
cmpsb
sub
jge
mov
into
mov
inc
xchg
iret
mov
mov
mov
daa
ja
sbb
cmp
test
test
adc
pop
cmp
dec
in
out
fcomi
fldl
std
rcll
cmp
out
idivb
rorb
mov
icebp
mov
cmp
pop
loope
xchg
cli
sarl
ficoml
jae
test
stos
mov
inc
push
push
inc
add
adc
pop
sbb
je
push
sub
adc
sub
inc
into
popa
push
in
jb
nop
fistps
loop
sbb
scas
mov
repnz
add
faddl
lods
cmc
sbb
cmc
nop
pop
pop
mov
xchg
fcompl
jno
jl
or
bound
out
arpl
pusha
mov
loopne
pop
inc
lds
xchg
lret
gs
jge
sbb
ss
popf
das
fs
and
lret
mov
loopne
stc
and
inc
ljmp
sub
sbb
mov
xor
cltd
add
repnz
insl
pushf
mov
add
sar
imul
sbb
insl
mov
and
test
inc
push
push
inc
fstpt
mov
addl
xchg
and
test
lret
movsl
xor
xor
add
mov
mov
roll
stos
outsb
int3
stos
cmp
push
stos
push
push
push
jmp
mov
jno
outsb
addl
sbb
sub
bound
push
in
test
repnz
into
adc
add
push
sub
adc
dec
idivl
shrb
enter
out
repz
or
or
add
pop
cmp
cmp
fnstenv
push
sub
mov
ja
and
idivl
and
fs
test
push
and
mov
arpl
pop
jg,pn
mov
jbe
and
out
mov
dec
inc
insl
iret
ljmp
rcll
movsb
or
xchg
dec
sbb
cli
push
aas
repnz
add
lret
mov
lods
mov
jp
push
inc
lods
add
jge
inc
dec
jae
adc
fsubrp
cltd
sysexit
rcrl
gs
lahf
int
xor
dec
mov
mov
inc
aas
stos
hlt
in
dec
inc
xlat
in
push
int3
xchg
pop
sub
dec
mov
imul
jp
jecxz
repnz
pushf
mov
mov
call
cli
and
dec
mov
sub
outsl
inc
les
xor
and
andb
mov
sub
xor
sbb
mov
fwait
dec
push
push
iret
fdivrl
clc
dec
mov
lret
add
incl
cld
adc
jns
dec
das
outsl
mov
outsl
dec
mov
mov
into
imul
jle
sti
test
xchg
pop
repz
jge
and
ret
sbb
aam
aam
mov
add
cmc
add
aas
and
mov
ljmp
lock
and
mov
sahf
inc
stc
fistl
into
sub
xchg
mov
fldcw
adc
mov
jg
and
jnp
scas
dec
loope
xor
test
sub
xor
mov
adc
lret
stos
mov
jae
jg
and
mov
dec
push
pop
jo
xor
cmp
xchg
cltd
xor
insl
sarl
cld
mov
mov
mov
adc
pusha
mov
or
repz
sbb
rorl
sti
mov
inc
repz
ds
push
shlb
subl
and
jmp
mov
push
out
sarb
mov
add
mov
lods
stos
dec
inc
or
lret
adc
mov
or
jg
fs
jbe
ja
call
sbb
add
sbb
lods
push
pop
xor
bound
loopne
sahf
mov
jle
out
xlat
insl
ret
inc
aaa
jae
and
fadds
lock
cmp
inc
push
mov
adc
jb
ret
adc
les
jb
int
mov
xchg
arpl
jae
or
xchg
loopne
orl
int
add
sub
rol
pop
jnp
cltd
cs
xchg
jmp
lahf
mov
pop
lds
add
mov
jmp
mov
fdivrl
sbb
pop
add
sbb
push
add
loop
lods
pop
shrl
sahf
out
les
add
sbb
addr16
movsl
xor
pop
xchg
cmpsl
data16
jnp
aam
out
dec
addb
push
inc
mov
adc
xor
cld
lods
mov
xchg
cmpsb
xor
xchg
jns
push
sbb
into
bound
sub
ret
push
mov
lock
shll
stos
jns
les
ljmp
sbb
divb
fdivp
dec
lods
mov
out
xchg
lret
sub
jo
and
out
jecxz
cmpsl
aas
ficoms
fwait
insl
testl
inc
push
xlat
fadds
cmp
jo
adc
dec
xor
add
outsl
sub
and
or
ss
mov
add
and
lcall
mov
sbb
sub
test
push
mov
jns
mov
mov
call
shlb
mov
dec
mov
inc
inc
inc
test
aam
insb
pusha
cmp
dec
scas
lds
mov
out
ffreep
pop
cmp
mov
ja
or
add
fs
sub
push
les
cmpsb
in
aam
lret
js
fldenv
xor
mov
roll
jmp
stos
aaa
xor
mov
jo
imul
dec
jno
movsl
fnstcw
fisubrl
xor
jmp
add
mov
or
popa
pop
adc
adc
das
bound
xor
scas
xchg
movmskps
add
mov
inc
mov
ret
fimuls
push
sbb
loop
jno
add
pop
mov
xchg
xchg
insb
sbb
fstpt
cmp
filds
or
out
mov
pop
ds
inc
xchg
mov
xchg
push
es
pop
push
mov
xchg
or
les
loop
cmp
xor
lret
or
mov
or
pop
push
scas
xor
movsb
xchg
mov
mov
rorl
out
and
dec
test
ret
loop
roll
insb
pop
push
das
mov
adc
sub
iret
daa
push
mov
test
sbb
jl
popf
std
dec
or
cmp
adc
xchg
jbe
cmp
xchg
push
jg
popf
dec
loop
add
or
dec
and
out
das
adc
push
add
or
adcl
cmc
lock
mov
subps
push
adc
cltd
cmpsl
xchg
jmp
lret
insb
mov
das
cmp
adc
mov
clc
insl
popa
fs
adc
and
mov
jg
pop
cmp
sbb
movsb
inc
mov
pop
xchg
lea
xchg
in
cld
xorb
add
cmp
cltd
jle
ja
int3
pop
add
or
pop
or
xchg
jb,pn
pusha
xchg
inc
pusha
xor
dec
repz
daa
jp
popa
lea
pop
xlat
xchg
cltd
cwtl
dec
mov
cltd
jnp
aam
fnstcw
add
mov
dec
dec
xchg
sub
leave
mov
lret
imul
xchg
lods
movsl
popf
push
arpl
cwtl
test
out
mov
insl
rcr
testl
xor
cmp
lock
or
xchg
je
sub
inc
data16
pop
adc
roll
in
add
ja
mov
pop
js
fs
out
push
sub
push
cmp
push
adc
int
jno
jg
mov
adc
lcall
daa
mov
xor
orb
scas
pop
push
pop
xor
mov
pop
ss
scas
imul
xchg
pop
ret
pop
subb
nop
sbb
inc
jmp
test
loopne
adc
lods
mov
daa
daa
push
sub
lea
inc
pop
add
pop
jg
or
xor
cmpb
jnp
jo
test
push
imul
xor
dec
or
fdivrs
and
subb
addr16
aam
push
gs
mov
call
pop
sbb
xor
insl
sub
add
mov
dec
sahf
and
mov
add
shll
xchg
push
pop
add
cs
push
jb
mov
pop
xchg
fidivs
cmp
fistps
clc
add
xor
dec
push
jns
or
mov
xor
sbb
popf
mov
imul
push
fcoms
or
rep
je
pmulhuw
adc
or
scas
jecxz
test
jo
test
loope
int3
cs
inc
or
pop
and
mov
pop
aam
scas
add
push
jmp
into
jne
cmovp
repz
das
inc
scas
scas
cmp
xlat
and
xor
jb
mov
pop
pop
dec
fsts
cwtl
pop
jo
out
test
and
cmp
inc
ret
js
out
std
mov
shlb
sbb
lods
out
loop
mov
push
bound
out
sub
cmp
bound
xchg
lcall
hlt
xor
xchg
out
idivl
pop
fucomip
pop
mov
dec
push
fwait
jae
pusha
cmc
or
or
ret
imul
mov
int
jl
movsb
inc
mov
mov
or
or
mov
cmc
add
paddusb
xor
mov
cli
xor
sbb
int3
dec
enter
mov
jle
dec
inc
jnp
insl
jle
ret
jmp
mov
cmp
fildl
sub
push
sbb
mov
shll
push
push
cmp
sbb
ds
cmp
mov
dec
orb
xor
push
pop
dec
shr
xor
in
mov
movsl
lea
xlat
mov
add
or
mov
jmp
in
mov
sbb
adc
mov
xchg
pop
and
inc
mov
inc
call
inc
pop
pop
rcrl
push
stos
jns
or
cmpsb
jo
sbbb
aad
andb
jmp
jle
fimull
mov
ud2
inc
xchg
ljmp
xor
cmp
fdivs
push
aad
cld
mov
lcall
lcall
mov
aaa
enter
jne
inc
or
in
pop
dec
pop
dec
xchg
les
mov
push
fidivrl
mov
mov
inc
repz
iret
push
cltd
adc
or
bound
ja
add
lods
add
std
bound
js
mov
into
inc
ljmp
aaa
mov
sbb
xchg
shrl
mov
add
enter
sub
jge
aad
mov
inc
mov
push
pop
or
jns
popa
pop
jg
mov
pop
adc
data16
dec
xchg
insl
insl
dec
inc
mov
scas
sti
xor
lods
cld
mov
decl
inc
int3
loopne
mov
cmpsl
call
jae
test
lock
ret
xor
movsl
pusha
imul
sbb
insl
repz
xchg
clc
push
sub
xchg
leave
pop
add
xchg
push
cmp
inc
enter
fucom
in
imul
dec
loope
push
scas
and
xor
jns
jns
icebp
sbb
xor
cmpsl
mov
sbb
daa
fs
imul
jl
ljmp
add
cld
cmc
mov
mov
insb
bound
hlt
cmp
andb
sub
xchg
loopne
popa
fs
lods
mov
inc
mov
sbb
ljmp
mov
jp
test
adc
sbb
push
and
or
or
scas
pop
push
lock
in
mov
test
add
std
int3
push
inc
mov
mov
aam
jge
pop
mov
hlt
imul
iret
mov
lods
jae
imul
push
adc
jae
push
insb
mov
inc
push
jae
sbb
sbb
pop
and
movsb
mov
daa
in
testb
nop
jecxz
gs
mov
dec
xorl
out
fadds
adc
mov
rcll
sub
mov
mov
cmpsl
dec
sbb
push
push
lea
cs
add
call
pusha
mov
mov
in
mov
sahf
clc
mov
jle
and
sub
dec
test
aam
dec
pop
mov
adc
jl
fnstenv
shlb
mov
push
xor
xchg
ret
push
mov
push
dec
lods
dec
shl
adcl
sub
jmp
or
scas
pop
xchg
fstpt
stc
xchg
mov
popl
or
pop
add
in
push
pop
jns
pop
jbe
xor
es
xor
mov
pop
sbb
and
lods
push
mov
pop
jns
movsb
sbb
dec
jg
pop
dec
out
lds
mov
fnstenv
mov
fsubr
jp
mov
sub
loop
mov
pushf
dec
cmpsl
cmc
inc
lock
adc
pop
test
add
xor
cmp
pop
mov
je
pop
cmovl
mov
nop
lret
in
xor
push
jns
repz
roll
xor
xor
or
arpl
dec
dec
dec
stos
movsb
cld
adc
xor
xchg
es
andb
pushf
pusha
gs
push
test
enter
fsubs
pop
fidivrs
pusha
gs
aaa
jge
cmp
xor
cli
sbb
sub
aad
xor
inc
or
jb
lret
in
incl
mov
xor
aaa
push
ja
out
pop
or
clc
dec
mov
in
pop
pop
mov
dec
in
sbb
cld
pop
mov
cs
dec
fdiv
call
fnstsw
rol
push
call
fimull
mov
dec
adc
sbbb
push
sub
or
inc
mov
or
jg
bound
xchg
movsl
adc
mov
xchg
mov
sub
dec
and
mov
sub
dec
sbb
lret
out
rorl
pop
mov
jg
leave
ret
jnp
les
xchg
int
jne
lahf
sub
add
iret
lock
push
adc
insb
adc
mov
pop
sub
xlat
mov
fldl
insl
int
adc
xchg
insl
push
aaa
xor
orl
dec
mov
inc
mov
pop
rcll
lea
std
ret
mov
push
jg
adc
cmpsl
ds
jl
pop
push
in
inc
xor
dec
jno
or
add
outsb
lcall
jmp
sub
dec
push
and
cmpsl
xchg
rorb
scas
sbb
lods
mov
subb
pop
outsl
sbb
and
std
pop
shlb
aaa
cld
cmp
push
aam
sub
pop
or
push
mov
pop
test
xor
jb
test
jmp
dec
pop
jl
orb
aaa
cmpsb
or
stos
mov
jno
mov
fldcw
inc
dec
xchg
aad
out
sub
and
lahf
rcll
or
xor
pop
push
insb
dec
aaa
push
repnz
xchg
inc
and
xchg
mov
ljmp
outsl
dec
adc
cli
cltd
push
xor
ljmp
push
sti
shrb
sbb
arpl
jmp
jle
into
insl
and
xchg
cmpl
jg
lods
testb
lret
lret
push
push
or
xor
mov
loop
shll
push
xlat
stos
das
out
mov
lods
mov
jmp
out
roll
rol
ljmp
push
push
xchg
es
ret
es
jle
cmp
sbb
push
mov
mov
ret
xchg
push
fmull
xchg
push
out
push
push
pop
mull
and
xlat
push
fisubs
aam
aam
repnz
aaa
dec
mov
loopne
or
inc
aam
and
sti
les
das
or
sbb
push
jecxz
mov
pop
int
andl
ds
cld
xor
aam
add
ja
insl
sahf
lods
mov
lret
jns,pt
movsl
sbb
loop
lret
cmp
push
lret
ret
mov
xchg
mov
mov
ret
into
xchg
or
lret
inc
or
lods
insb
lcall
xchg
int3
movsb
jmp
or
xlat
lds
imull
adc
cmp
mov
loope
in
or
lock
add
ja
lcall
inc
decb
int3
xor
mov
mov
mov
cmp
jmp
sti
and
addr16
test
clc
mov
aas
lock
xor
and
xor
iret
adc
inc
xor
sbb
stos
mov
inc
inc
jns
sbb
call
ret
clc
cmp
shl
dec
sub
sub
sub
mov
mov
push
adc
mov
adc
add
shrl
adc
pop
inc
inc
mov
icebp
out
mov
cmpsb
in
mov
jns
int
ja
movsl
pushf
mov
adc
rolb
hlt
in
sbb
sbb
cmp
repnz
adc
adc
clc
into
imul
dec
mov
pushf
mov
dec
ds
mov
xor
pop
test
pop
call
xor
or
stos
push
inc
cmp
mov
jp
in
faddl
int
or
mov
aaa
gs
cmp
xor
mov
aaa
data16
sbb
mov
inc
int
cmp
xchg
mov
inc
jmp
ja
ja
fcmove
push
imul
pop
push
jb
test
push
sub
jns
xchg
rolb
ljmp
or
in
ficomps
mov
jno
mov
inc
inc
mov
fnstcw
out
btc
push
repnz
or
xchg
mov
sub
bound
fists
imul
sbb
lods
xchg
stc
test
lahf
mov
push
sub
or
adc
add
inc
test
rolb
aad
mov
xchg
xorb
mov
rcrb
cwtl
popf
inc
aaa
ja
fsubr
dec
mull
test
mov
pop
out
stc
out
mull
sub
ljmp
ffree
jmp
mov
cmpsb
fstl
xor
mov
mov
pop
mov
mov
into
and
and
mov
outsl
enter
loopne
push
gs
pop
cmp
dec
arpl
cs
cltd
xchg
mov
ljmp
je
mov
out
imul
xor
push
fbld
mov
dec
addps
pop
adc
mov
or
pop
xor
add
fisubrl
or
dec
xchg
out
pop
jae
mov
sahf
pop
jle
pop
push
mov
or
mov
in
xchg
stc
in
hlt
icebp
lock
mov
pop
jns
and
shl
mov
fadds
outsb
jbe
shll
push
repz
in
or
in
mov
xchg
pop
and
insl
push
int3
mov
and
or
or
shr
imul
jno
ret
adc
push
insl
sub
mov
sahf
adcb
jno
mov
pusha
or
test
cmp
fstpt
and
mov
cmc
cmp
jnp
sbb
push
jle
push
fnstcw
ja
aas
sti
negl
lcall
mov
sbb
in
in
rcrl
loopne
sbb
divl
jg
nop
mov
or
fidivrs
sahf
nop
mov
jmp
jae
push
lods
push
jns
xchg
jno
mov
push
insb
jmp
adc
in
xorb
mov
dec
xchg
mov
fldcw
dec
jnp
push
push
outsb
fs
cltd
jbe
push
inc
xor
nop
mov
jle
xchg
movsb
mov
je
shlb
push
xchg
mov
inc
xchg
pop
mov
sbb
mov
popa
cld
mov
rcrl
iret
test
nop
sbb
mov
and
sbb
mov
jnp
pusha
cmpsb
xor
arpl
xor
jb
cmpsl
lods
cmp
jmp
mov
mov
xor
not
push
std
outsl
insb
sub
test
enter
xchg
scas
insb
push
adc
add
das
or
inc
mov
sbb
pop
out
cmpsb
mov
pop
dec
sub
test
or
push
dec
dec
mov
mov
push
add
xchg
pop
inc
loop
into
push
mov
lcall
xlat
int3
xor
or
mov
testb
fnstsw
mov
jo
jae
mov
add
inc
loopne
sbb
incl
ljmp
imul
jecxz
jnp
inc
inc
push
out
test
pop
inc
and
mov
js
add
and
sbb
andl
dec
in
sub
jne
mov
mov
mov
movsb
jns
jg
icebp
sahf
mov
push
pop
add
jmp
mov
mov
adc
movsb
and
pop
add
mov
dec
mov
mov
add
int3
pusha
mov
mov
mov
xchg
mov
dec
lcall
arpl
and
icebp
jno
mov
cltd
cld
cs
jnp
lods
inc
outsb
or
cmp
xlat
pop
shrb
jbe
mov
leave
and
inc
ja
icebp
sub
sub
inc
scas
adc
ja
popa
mov
push
push
push
movsl
shr
outsl
int3
cmp
outsb
ja
push
hlt
inc
loope
sub
mov
sahf
push
and
dec
test
roll
push
sub
push
adc
mov
out
test
xor
aas
jo
jecxz
sbb
aam
aaa
sbb
dec
xlat
sub
xabort
jnp
pcmpeqb
popa
pop
data16
aad
ja
nop
inc
sti
sub
cld
or
call
nop
dec
push
sbb
xor
xchg
xchg
out
xchg
insl
add
out
pop
xchg
loopne
xor
mov
or
ja
cmp
push
lret
mov
lret
popa
lcall
and
or
sbb
sub
pop
push
sub
mov
pop
and
ficomps
fs
pop
leave
iret
pop
insb
daa
push
add
sbb
xchg
cmp
xchg
cmp
mov
mov
icebp
test
out
test
clc
cmp
mov
push
adc
sbb
push
adc
jb
int
cmp
call
push
inc
insl
popa
sbb
adc
cmpsb
fdivl
in
mov
xchg
inc
mov
jp
in
loopne
outsl
xchg
movsl
js
es
shl
mov
cwtl
aam
mov
mov
cmp
push
pop
lock
pop
inc
in
mov
adc
mov
push
mov
lret
mov
lcall
inc
testb
xchg
jl
adc
cmp
in
add
xchg
add
xor
add
push
fstps
out
lods
sub
fiaddl
stos
inc
cmp
xor
xchg
dec
push
push
jmp
sbbl
fdivrl
test
ret
mov
push
mov
into
sbb
xchg
xor
pop
sbb
inc
shrb
jg
lock
popa
repz
xchg
fdivl
sub
add
inc
sbb
jb
lahf
insb
addr16
mov
lret
in
mov
mov
push
push
insl
aam
shlb
jg
cli
popa
repnz
dec
imul
inc
cmp
mov
inc
dec
movsl
pusha
fadds
dec
push
xor
dec
dec
loope
repnz
sbb
lods
mov
push
sbb
loop
dec
loopne
fs
outsl
imul
and
sbb
out
fmull
pop
shlb
jns
cwtl
sub
adc
data16
in
lods
test
sub
jns
xchg
enter
lret
xchg
jp
mov
outsl
pop
pop
in
mov
pop
cmp
testb
inc
loopne
inc
add
push
out
loope
sub
mov
and
jge
test
adc
sub
daa
popf
es
cmp
dec
sub
cltd
pop
adc
test
lods
xor
and
pushf
jge
sub
and
lar
fcoms
aam
mov
inc
data16
hlt
mov
mov
mov
cmp
in
mov
and
adc
out
mov
pop
bound
push
inc
mov
dec
sahf
xor
outsl
packssdw
sub
test
jmp
add
add
pop
out
ret
cs
loopne
mov
scas
int
jmp
aaa
add
fs
cmp
ret
mov
sub
inc
push
mov
mov
add
in
aad
pop
add
loopne
cli
mov
or
fsts
iret
push
sub
into
inc
xor
test
push
and
adc
dec
xor
fnstcw
inc
mov
out
adc
mov
cmp
pop
xor
adcl
ret
icebp
sub
jne
mov
mov
add
lcall
cmp
cmc
push
pop
sub
js
roll
xchg
test
adc
jb
jg
rcr
sbb
lret
popa
jo
xchg
fmull
mov
sub
std
loopne
sub
aam
dec
hlt
dec
icebp
jl
inc
jmp
xchg
sub
cwtl
out
mov
ja
add
jb
and
mull
push
push
fldl
data16
jmp
mov
adc
dec
pop
jmp
sbb
xor
sbb
leave
pop
movsl
addr16
sarb
xor
xor
insl
push
dec
cmc
ret
aad
test
xor
or
xor
pop
or
pop
cmp
inc
adc
mov
sub
mov
cs
pop
xchg
enter
pop
outsb
jmp
nop
mov
iret
aam
push
mov
pushf
pop
fistps
loope
enter
and
mov
gs
into
xchg
mov
ss
cmpsb
divb
and
jmp
inc
jle
add
in
cmpsl
test
mov
or
in
daa
mov
dec
pusha
mov
out
fsubrs
test
adc
jnp
or
ljmp
loope
xor
imul
xchg
mov
in
sub
rcl
mov
cli
lock
xchg
arpl
mov
out
lret
sarl
std
mov
adc
sbb
jns
jnp
lds
jno
adc
leave
divl
rorl
cmp
mov
jne
push
and
cmp
hlt
daa
push
imul
fs
movsl
fcomp
rorb
das
repnz
int
xchg
aad
fcom
jbe
daa
xor
jge
xorb
jmp
mov
dec
mov
xchg
cmpb
dec
sbb
out
int
sbb
add
mov
jmp
push
cmc
push
cmc
and
out
jne
popa
mov
pop
mov
jge
lret
xchg
xor
pop
cld
aam
ret
sub
push
pop
pop
movsl
lret
adc
mov
es
mov
rcrl
daa
push
cmp
pop
push
cli
scas
mov
push
je
jmp
movl
cmp
push
jns
sti
out
inc
and
push
or
fidivrl
data16
enter
mov
or
insb
or
mov
cld
pop
xor
mov
loope
std
cmpsl
mov
xchg
dec
fdivrs
pop
xor
movsl
jmp
arpl
xchg
pushf
mov
cs
nop
mov
pop
ljmp
adc
lods
cmpl
enter
call
popl
lret
inc
inc
pop
loope
add
shll
push
or
arpl
not
xor
cld
in
in
xchg
aad
mov
idivb
aaa
repz
jge
dec
mov
fsubs
std
and
push
jmp
mov
aas
cmpsb
pop
fmulp
rcrb
nop
mov
jp
test
in
xchg
mov
jp
fdivr
in
imul
dec
aaa
jmp
or
pushf
inc
sarl
mov
repnz
sti
int
int
jle
icebp
iret
out
pop
shrl
xor
cltd
sub
les
idivb
in
out
jo
pusha
mov
sub
mov
sbb
sbb
stos
leave
inc
das
inc
pop
dec
mov
add
outsl
notl
data16
sti
mov
int3
mov
sub
push
filds
popf
jbe
sub
dec
mov
add
dec
test
inc
das
mov
push
psrlq
rcl
mov
pop
mov
inc
mov
stos
scas
cmp
sbb
fsts
nop
dec
inc
inc
mov
into
sti
adc
inc
clc
cmp
pop
pop
push
xchg
mov
daa
push
or
xor
and
sub
jl
inc
pop
jae
mov
movsb
test
cmpsl
and
inc
scas
sbb
or
mov
call
sbb
xchg
aas
pop
dec
lret
inc
xchg
jg
repz
js
xor
adc
pop
dec
cs
test
or
fmull
sub
sbb
fwait
jl
jge
nop
mov
add
ret
mov
mov
xor
jge
lret
cmpsl
lock
movl
inc
in
add
push
cmpsl
ret
aaa
push
fwait
cmpsb
repnz
call
fsubl
mov
mov
dec
push
adc
push
outsl
lret
popl
int
pop
cmpsl
xor
push
adc
xor
cwtl
lods
or
fsts
loopne
enter
shrb
fs
out
mov
dec
push
push
call
add
movsl
mov
lods
xor
arpl
jnp
fs
sub
bound
jl
push
sbb
dec
int
ljmp
movsl
dec
dec
jmp
pop
jb
iret
cs
andnps
add
inc
cmc
sti
test
out
inc
ret
sub
movsl
std
fdivrl
push
jp
dec
mov
out
std
xor
cwtl
jl
fisubl
jl
xor
mov
cmp
movb
push
push
mov
jle
enter
gs
popa
fwait
test
cld
pop
js
stos
sbb
inc
or
lret
mov
jge
or
jecxz
bound
enter
jo
xor
inc
pushf
dec
xor
in
cmpsb
fisubl
mov
jge
inc
jbe
icebp
add
cmp
push
adc
cltd
imul
addr16
jne
xchg
pop
mov
pushf
xchg
imul
pop
nop
repnz
xor
sub
adc
mov
sub
xor
aam
mov
lods
pop
loopne
sbb
in
ficompl
mov
push
adc
mov
xchg
cmc
fimull
jle
push
ja
xchg
out
dec
or
inc
inc
fists
or
inc
push
das
lods
outsb
sub
sarl
sub
mov
mov
int3
pop
push
xor
rclb
and
push
jns
pop
lcall
adc
jmp
add
jns
cmc
cwtl
xor
daa
push
sub
dec
cmp
and
fisubrs
dec
add
daa
std
fildl
fwait
nop
mov
call
shrb
outsl
mov
dec
cld
cmc
lods
xor
adc
or
inc
jge
xor
testb
and
out
adc
or
lcall
sub
in
outsl
jns
lcall
rorl
fcmovu
jb
pop
jns
pop
pop
push
jbe
data16
lea
push
sbb
inc
shrb
lock
adc
dec
movsb
mov
ret
aas
aaa
dec
out
sub
addb
jns
sub
call
add
cmp
mov
inc
jp
xor
dec
scas
sbb
cmpb
mov
in
add
fildll
cmpsl
fimull
push
mov
mov
cli
jge
sub
jge
jp
ds
aam
push
test
push
out
sarl
cmp
negb
pop
push
clc
out
in
push
xor
inc
mov
mov
dec
xchg
stos
mov
int3
sub
dec
inc
insl
cmp
dec
lea
xor
daa
lfs
and
adc
jle
xor
out
or
cld
mov
dec
cmc
cli
andl
adc
and
sbb
imul
aas
cmpsb
jns
xchg
jge
pop
roll
and
add
adc
mov
add
hlt
inc
ja
in
jmp
cmovp
cld
sbb
mov
adc
add
lock
cmpsb
js
add
test
repz
mov
inc
or
jge
imull
adc
enter
push
stos
dec
in
inc
js
dec
stos
js
dec
jae
addr16
sub
inc
push
xchg
xlat
fdivl
in
jge
jbe
or
insl
mov
test
mov
push
jmp
cli
dec
divb
mov
mov
lea
int
in
aas
in
inc
call
mov
mov
add
fwait
mov
cmp
rcr
push
insl
jo
test
sbb
cwtl
and
pop
mov
popa
mov
xor
sarb
in
clc
lret
push
push
arpl
icebp
add
sub
mov
pusha
cmp
mov
fistpll
sbbb
rorb
xor
aam
or
cmp
pop
aaa
jae
lods
xchg
fidivrl
mov
inc
out
dec
jmp
sub
insb
int
lcall
lret
fcoms
xchg
sbb
inc
and
shll
pop
xor
jae
aaa
cmp
sub
cmpsb
aaa
cmp
sub
mov
fstl
rcrl
mov
mov
popf
sub
xchg
mov
inc
sti
cmp
mov
sbb
loop,pn
jno
inc
dec
mov
neg
ljmp
push
pushf
dec
fmull
xor
lret
sub
push
in
pop
sbb
cli
jmp
mov
add
popa
jne
mov
dec
mov
jg
fld
push
cltd
cmc
and
jg
sub
pop
xor
dec
pop
lahf
cli
inc
mov
dec
and
movb
sbb
in
pusha
test
in
stc
ss
dec
inc
loope
push
movsl
in
cld
push
inc
mov
ret
mov
sub
aam
bound
ror
or
cmp
insb
mov
out
sti
cmc
out
mov
fidivrs
enter
gs
adc
jae
stc
pop
push
xchg
hlt
sti
cmp
or
pop
push
leave
mov
jb
out
lock
sbb
mov
sbb
push
sti
jae
sub
cmp
jnp
mov
or
xor
xor
scas
jg
pop
stos
fsubrp
sub
xlat
fwait
xlat
sub
mov
push
jno
ret
pop
fcmovu
in
cli
sub
sarb
cmp
bnd
and
sub
jg
cmp
imul
mov
cmp
mov
mov
icebp
xchg
fwait
bound
sbb
push
cmp
in
ret
sti
js
repnz
das
mov
fldl
call
in
gs
jecxz
mov
inc
ret
dec
sub
mull
jo
or
and
mov
push
adc
fs
sub
cld
cmc
mov
pop
popf
jo
xchg
dec
aam
jne
out
add
add
repz
clc
or
mov
test
cmp
inc
and
mov
in
mov
jecxz
scas
and
enter
mov
movsl
out
cmc
push
inc
stos
dec
scas
cli
int3
pop
ret
lcall
subb
out
aad
xchg
out
aad
mov
lret
cli
mov
fcomi
gs
jl
push
cmpsl
jns
inc
pop
xchg
jae
ja
ljmp
movsb
aam
rcr
and
sub
inc
test
int
mov
fsubl
call
push
mov
fucomi
dec
in
sub
xchg
imul
xor
in
outsb
fsubl
xor
scas
xchg
ss
inc
adc
push
push
enter
xacquire
clc
leave
fwait
mov
mov
les
scas
mov
or
loopne
push
out
sbb
iret
inc
es
in
mov
xchg
sbb
iret
mov
xchg
lret
loope
int
andl
adc
mov
or
mov
inc
xor
cld
outsb
inc
lock
sbb
popf
sti
mov
lcall
fsubrs
outsl
sub
and
hlt
stos
push
sub
into
pop
das
xor
call
mov
je
clc
mov
xchg
jo
or
mov
xchg
pop
lods
in
dec
into
lock
stos
mov
mov
lcall
test
mov
inc
or
pop
sub
repz
add
out
inc
outsb
stos
mov
in
popf
test
outsl
in
insl
mov
repnz
mov
sbb
mov
or
mov
mov
push
pushf
adc
cwtl
aas
fisubl
or
jno
aaa
pop
jo
pop
sbb
mov
and
cli
add
lcall
stc
aam
hlt
hlt
fistpll
jmp
jnp
push
lock
and
sti
inc
mov
hlt
mov
inc
xor
popl
mov
jae
fmuls
gs
pop
pop
sbb
movsl
sbb
nop
push
jb
bound
and
sbb
pop
cs
or
sub
cltd
loopne
lcall
xchg
pop
sahf
call
jae
stos
dec
int
pop
xchg
fistpll
inc
mov
xor
push
leave
xchg
loop
fbld
bound
das
adc
push
mov
hlt
inc
out
in
call
divl
mov
negb
mov
cld
shlb
lods
mov
mov
cmpl
jle
into
lcall
hlt
cmp
push
pop
inc
fnsave
int3
out
sub
clc
xchg
arpl
pop
shrl
hlt
inc
ret
test
stc
test
imul
scas
jecxz
xchg
lcall
mov
mov
dec
push
daa
cmp
add
mov
pop
paddsw
loope
imul
xchg
mov
lock
pop
jp
xlat
jns
test
inc
ljmp
stc
fnstenv
push
push
mov
in
fstps
notb
sbb
stos
paddw
and
fdivrp
sub
into
mov
cmp
jmp
mov
xchg
push
and
jb
cmp
pop
add
insl
lods
sbb
lods
jae
mov
and
popf
xchg
add
sbb
lahf
dec
cmpsl
mov
add
test
or
push
push
adc
mov
jge
sub
push
or
add
mov
cmp
es
xor
fcmove
inc
ret
dec
ds
xchg
iret
mov
cmp
divb
xchg
xor
push
sarb
cmp
pop
enter
xlat
push
sbb
outsb
ja
mov
pop
sub
lret
stc
push
xor
pop
inc
and
repz
in
mov
fs
ja
mov
loope
aad
imulb
add
cltd
rcrl
icebp
cmc
mov
popf
jae
inc
adc
cmp
and
movsl
insl
in
or
fiaddl
xor
mov
mov
push
push
in
ss
ret
mov
iret
jne
jle
lret
decl
mov
addr16
xchg
leave
sbbl
push
jo
and
add
rcrb
lods
fwait
adc
les
aam
mov
mov
mov
xor
dec
xor
clc
mov
add
out
mov
daa
divl
jns
outsb
pop
or
cmpsl
inc
adc
inc
fwait
cltd
mov
inc
ljmp
repz
push
mov
and
inc
xlat
aaa
fiadds
sbb
ret
repz
int
xor
mov
out
sti
movsl
adc
test
in
mov
xchg
lods
or
xchg
ja
out
add
sbb
and
sbb
stos
jno
lds
movsl
push
cmp
or
pop
ret
js
call
jmp
mov
scas
nop
icebp
jg,pn
in
mov
jge
lods
ret
out
xchg
out
lods
jmp
adc
mov
movsb
jbe
ja
lret
fs
push
inc
pop
mov
fsubrl
dec
inc
push
jmp
sub
xchg
in
mov
movsb
inc
ja
sub
out
test
jbe
stos
std
jle,pn
arpl
imul
imul
add
sbb
add
pusha
sarb
xor
cmp
dec
dec
lods
ficoml
cs
sti
ficomps
or
pop
inc
in
dec
add
cmpsb
mov
ljmp
insb
into
dec
int
or
add
aad
call
cmp
fstp
ja
inc
push
fwait
pop
push
sub
jl
sub
pop
sub
incl
sub
add
aam
add
lret
or
pushl
arpl
push
outsl
adc
cmp
popf
jns
sbb
pop
pop
out
sub
iret
scas
push
outsb
jno
sbb
push
jnp
fwait
lods
mov
xor
mov
out
cmp
ss
mov
ja
jmp
call
push
adc
sbb
xchg
mov
movl
add
jo
sti
lret
jbe
add
add
push
xchg
jno
xchg
or
and
push
pop
pop
aam
sbb
les
mov
cmp
sahf
or
adc
js
in
fmull
shl
mov
cmp
cli
stos
dec
subps
out
push
out
ja
mov
icebp
jmp
fimull
mov
adc
movsb
repnz
aad
dec
cmp
sub
xchg
add
in
int
pop
bound
into
xchg
icebp
xor
stc
sbb
jg
pop
push
pop
sbb
iret
int3
mov
sahf
jns
push
cli
pop
ss
insl
inc
cmpb
push
jno
sarl
lret
mov
dec
movl
push
xchg
xor
dec
xor
sub
and
stc
mov
dec
sub
shll
xchg
add
cmp
xchg
xor
push
xchg
xchg
fstpl
xchg
cs
imul
fadds
xorb
dec
ror
pop
add
loopne
neg
dec
xlat
jmp
mov
stc
pop
aaa
mov
lret
sti
jo
pop
cmpsb
ret
xor
and
stos
jle
cmp
dec
sbb
test
xor
mov
jmp
cli
test
ret
test
adc
outsl
dec
test
ret
jl
mov
cmp
adc
mov
nop
into
popl
push
dec
in
inc
push
hlt
lret
cmpsb
cmpsl
add
jle
xchg
adc
cmpsl
dec
imul
out
sub
mov
shlb
pop
notb
icebp
adc
push
sbb
push
push
hlt
es
push
rclb
inc
movsb
mov
jmp
insb
jno
pop
out
sbb
cmp
cmpsl
cmp
jo
xchg
push
lcall
fadd
or
sub
and
std
outsl
sub
jnp
push
jp
cmp
cmpsl
outsl
mov
fsts
roll
mov
pop
pop
pop
fiaddl
andl
cmp
inc
sub
shl
imul
xchg
cmp
push
pop
push
jmp
stc
data16
sbb
xchg
arpl
mov
xor
mov
loope
roll
mov
jl
jns
and
sub
sbb
jge
rcrl
scas
in
push
mov
popf
das
in
push
into
lcall
xchg
pop
lea
cmpsb
arpl
push
mov
in
js
or
jge
lds
cmpsb
std
in
clc
cs
push
adc
pop
sbb
jae
push
out
push
fistpl
xchg
outsb
cmpsb
mov
mul
xchg
sarl
and
push
in
inc
imul
pushl
lock
mov
sbb
jnp
xchg
pop
mov
xor
xor
sbb
xor
cmp
into
pop
push
jbe
push
push
movsl
push
mov
ss
jmp
mov
push
xchg
jo
test
pop
mov
outsl
lods
cltd
insl
push
mov
and
lahf
fstpt
jbe
mov
jne
dec
shll
out
test
fldenv
ds
jb
subl
test
jp
pop
pop
cs
arpl
mov
pop
mov
cmp
add
dec
jp
inc
inc
dec
aad
lahf
fisttpl
mov
leave
in
js
loop
ljmp
nop
dec
loope
hlt
aam
xchg
fcoms
in
insl
or
dec
inc
jbe
adc
mov
icebp
adc
sub
cmpsb
popf
stos
mov
fs
ss
les
cmpsb
jl,pn
add
fmuls
lods
mov
mov
ficoms
or
mov
jnp
stos
hlt
jle
mov
and
sti
neg
dec
adcl
aas
add
rclb
push
scas
and
push
xchg
add
jno
pop
lret
mov
or
inc
xchg
add
and
or
push
cmp
sbb
add
loopne
mov
ljmp
adc
fcomps
or
icebp
add
jle
shrb
xor
fdivrs
sar
mov
aas
ss
ja
mov
sub
mov
xchg
loope
mov
xor
push
or
push
mov
jae
sub
aad
push
or
sub
push
scas
mov
in
inc
jmp
pop
fstpl
iret
lret
cmp
vsqrtps
pop
inc
ja
neg
inc
jp
je
out
rcrb
and
or
ss
leave
xor
hlt
cltd
lods
xchg
cld
push
or
xchg
push
leave
fstps
sub
mov
or
mov
xchg
mov
shl
imul
mov
cmp
mov
cwtl
int
call
sub
and
or
sub
xchg
add
inc
das
shll
push
sbb
rcll
mov
out
mov
mov
ljmp
test
xchg
fwait
sub
pop
jns
jb
xchg
inc
dec
mov
pop
adc
mov
xchg
xchg
and
adc
jp
inc
cltd
xchg
sbb
push
and
ja
cmp
addr16
sub
jle
and
jmp
xor
cmpsl
mov
xlat
cmpsb
repnz
ss
sarb
cltd
mov
sbb
imul
lahf
cli
jne
add
lock
aas
jae
cs
mov
add
or
inc
or
lret
add
clc
sub
into
cmp
pop
lret
adc
cmpxchg
shlb
daa
hlt
lcall
dec
lods
pop
std
cs
leave
push
mov
fstpl
mov
and
lahf
popf
fxam
push
mov
jp
es
jbe
pushf
sub
movsl
mov
cmp
lahf
add
or
aas
dec
adc
out
insl
xlat
and
cld
or
pop
repz
mov
jmp
ja
fisttpl
mov
in
int
xchg
ret
mov
jle
xchg
mov
das
adc
sub
xchg
in
stc
jecxz
adc
lea
int3
lock
int3
out
rcrl
mov
jecxz
sbbl
cmpsl
pop
mov
mov
xor
inc
mov
push
add
mov
mov
inc
push
sub
add
adc
add
mov
out
lea
mov
loop
rcll
ret
inc
es
test
dec
mov
and
xchg
mov
outsl
idivl
fcompl
inc
push
add
enter
xchg
dec
jge
or
imul
inc
push
repnz
pushf
sub
cmp
aad
dec
scas
push
cli
cwtl
push
lea
fwait
rorl
or
addr16
daa
xor
add
mov
aaa
lret
in
dec
mov
mov
lret
cs
mov
cmpsb
push
out
mov
sbb
call
movsl
enter
dec
pop
push
dec
int3
les
aad
mov
jo
mov
cs
push
repz
das
push
or
xor
mov
jne
fwait
xchg
and
shrl
xchg
xor
in
mov
mov
mov
cmpsb
push
mov
icebp
or
mov
mov
sbbl
inc
mov
sbb
and
ret
mov
sub
outsl
cmc
lret
lods
pop
jnp
push
xor
pop
sbb
dec
addr16
xor
out
inc
js
pop
popf
push
data16
rclb
ror
sbb
xchg
fistps
fcoms
adc
mov
pop
mov
lret
add
lds
lfs
dec
in
pop
xor
popa
cmp
insl
sub
stos
hlt
mov
sbb
and
in
popf
xchg
fwait
loope
ret
outsl
into
daa
inc
push
loope
adc
mov
insl
push
jb
jae
pusha
stc
fsubr
gs
fists
ret
out
arpl
and
pop
add
jl
adcl
stos
test
pusha
outsl
pop
hlt
inc
nop
xchg
negl
shll
adc
cmp
jo
cmpl
cmpsb
pop
xor
xchg
ja
insb
lds
aas
arpl
dec
int
lods
fnsave
jo
pop
roll
mov
cmp
mov
mov
cwtl
imul
xlat
mov
clc
into
shll
inc
mov
sbb
cli
jle
cmp
ficoms
cli
pop
std
pop
push
cmp
int3
mov
ret
insl
adc
cli
cli
ss
push
push
cltd
pop
push
inc
sub
mov
mov
dec
pop
test
loopne
sub
dec
dec
pop
mov
movsb
call
xlat
mov
adc
mov
and
xor
jmp
dec
dec
repnz
insl
push
in
adc
cmpsl
push
in
fdivrs
call
sub
sub
cld
xchg
test
add
cmc
ret
push
add
scas
or
jp
dec
out
mov
call
cmc
aam
xorl
xchg
std
loope
pop
lock
pop
push
imulb
add
lock
data16
xchg
mov
lea
ljmp
sti
pushf
ljmp
mov
jbe
mov
inc
sbb
sbb
mov
and
aad
popl
dec
mov
push
fsubs
dec
or
jne
repz
leave
fisttpl
cmp
loop
mov
popf
rcl
in
insb
hlt
sti
jb
scas
aaa
jl
mov
je
mov
jbe
popa
nop
push
or
dec
pop
daa
sub
arpl
std
jecxz
xchg
rorl
sbb
ja
ret
ret
push
fstps
cwtl
outsl
mov
xor
cmp
dec
aam
xlat
pusha
test
mov
xchg
testb
add
xchg
pusha
mov
outsl
negl
and
into
add
test
cmp
fisubs
pop
pop
inc
adc
cli
mov
pop
cmp
dec
mov
imul
test
pop
lret
jne
mov
insb
mov
out
rcr
or
push
insb
cmc
nop
sahf
stc
jne
dec
push
mov
pop
arpl
ljmp
and
scas
les
cmc
ljmp
movsl
jo
hlt
fcmovnu
xchg
mov
jno
mov
xchg
sbb
cwtl
inc
pop
sub
sti
in
imul
mov
test
sarl
sub
inc
xchg
add
dec
mov
sub
mov
in
mov
adc
cmp
adc
jb
aas
cs
xchg
and
xchg
leave
push
fcomps
cld
cmc
sti
mov
jo
lea
punpckhdq
fwait
shll
xor
lods
mov
cltd
dec
sbb
cmp
sub
out
jge
adc
cmp
fs
adc
sub
cmp
jbe
daa
scas
sbbb
popf
push
mov
xchg
sbb
xchg
pop
loope
lods
ljmp
xchg
jmp
xor
fs
cld
mov
inc
incl
pop
xor
lds
push
cli
xchg
fdivrs
ret
rcll
aaa
cmp
add
repz
sub
hlt
xchg
inc
jb
push
out
sbb
pop
outsl
gs
out
mov
mov
out
cmp
xchg
mov
pop
xor
push
sub
push
push
je
xor
push
sub
pop
jne
pop
mov
inc
ret
inc
mov
add
sub
lret
mov
leave
popa
push
aam
cmp
or
ss
dec
popf
dec
shll
fisttpl
lret
and
out
sti
and
pusha
stos
fisttps
outsl
rcll
sbb
lcall
adc
inc
sub
mov
push
sbb
dec
adc
repnz
mov
pop
push
jns
xor
sbb
out
mov
test
call
mov
xor
in
jge,pn
xor
clc
sti
aad
iret
inc
and
leave
pop
imul
cmp
aad
adc
outsb
stos
fistpl
sbb
imul
jns
xchg
mov
pop
mov
shl
fisubs
pusha
mov
loop
mov
jae
adc
mov
fsubp
clc
clc
shlb
xchg
pop
aaa
les
push
jb
xlat
push
mov
push
sub
dec
movsb
xchg
stos
adc
dec
dec
cmp
addb
adc
sbb
xchg
movsb
cmpsb
loopne
jns
lods
in
je
roll
and
pop
test
mov
fisubs
sub
and
add
arpl
or
jno
mov
mov
xor
aas
adc
jge
fstps
mov
das
xchg
fmuls
hlt
and
nop
mov
mov
nop
test
fiadds
fsubs
les
fimull
outsb
pushf
mov
inc
nop
fsubs
insb
pop
cs
imul
stos
xchg
ret
cmp
jmp
movsl
pop
cld
cwtl
orb
rcll
stos
enter
or
orl
jg
sti
dec
fisubrs
cli
les
sub
out
bound
pop
dec
popf
lods
popa
mov
jg
dec
in
inc
add
push
scas
sbb
dec
lcall
mov
jg
lods
insl
xor
mov
jg
scas
push
out
repnz
pop
add
sbb
stos
add
rol
stos
push
or
aas
hlt
jl
popa
ds
pop
les
enter
sbb
or
pop
pop
cmp
imul
cld
rcr
out
jo
imul
lods
sub
lock
outsl
popa
popf
shr
mov
mov
je
ss
loop
icebp
aam
stos
xchg
std
mov
ret
out
jmp
ja
lods
cmpb
lcall
test
pop
sub
pop
movsl
fiaddl
or
lods
arpl
psrlq
dec
add
js
insl
shlb
push
in
in
push
or
dec
insb
add
add
dec
pop
mov
pop
jp
pop
pop
test
mov
lcall
adc
mov
pushl
pop
sub
insb
test
wrmsr
icebp
iret
push
mov
je
or
and
repz
movsb
ljmp
lret
jo
mov
cwtl
popf
je
movsb
cmp
dec
fistpl
mov
cld
bound
pop
dec
pop
sbb
xor
pop
mov
rcl
ja
pusha
dec
and
repnz
fdivrp
sub
and
ret
xor
sub
fstps
incl
rcrl
sub
adc
insl
loopne
mov
inc
pop
xor
cmp
inc
add
jnp
inc
mov
les
sbb
mov
pop
cmp
sub
out
call
add
cmp
insb
notb
mov
sahf
shr
push
inc
adc
insb
repz
sbb
push
sbb
fwait
lods
popf
bsf
scas
loopne
and
repz
repnz
cmp
test
xchg
lcall
std
stos
mov
mov
inc
loopne
dec
adc
notl
jp
aas
imul
test
sub
mov
mov
addr16
push
jbe
cmp
cmpw
mov
sbb
nop
sbb
fistpl
push
in
ret
shll
nop
xorb
mov
rclb
adc
fdivrl
mov
out
inc
mov
jg
mov
insb
or
sbb
add
mov
push
and
and
or
pushf
in
push
arpl
cmpb
cmp
xor
les
lret
ret
dec
push
scas
mov
adc
push
jbe
jns
dec
or
and
xchg
or
imul
and
add
or
cmp
sbb
lahf
repz
sub
push
shll
xor
scas
cmpsb
jge
cwtl
sub
hlt
cmp
mov
shrb
das
mov
xchg
shlb
xor
pop
or
andl
mov
sub
push
push
push
nop
cltd
xchg
fs
mov
and
shlb
test
shlb
push
lea
push
mov
mov
xor
xor
inc
and
pushf
scas
ret
and
fdivl
or
xor
aad
dec
mov
out
sbbl
sbb
adc
mov
cmc
jle
pop
sbb
rorb
dec
dec
sti
xchg
icebp
sub
icebp
push
adc
sbb
jo
xchg
dec
push
mov
aaa
cli
mov
cmpsb
lret
mov
inc
mov
cld
xchg
movsb
mov
jl
stc
popf
jae
jo
sarb
lret
lret
pop
mov
pop
push
sbbl
lahf
and
and
or
push
add
jns
sbb
jb
mov
or
adc
ljmp
stc
repz
mov
xor
mov
clc
sub
stc
lret
pop
inc
or
sub
std
ds
mov
inc
pop
imul
loop
add
inc
popf
fdivs
push
lods
push
pop
sbb
aam
stc
or
rep
xchg
mov
imul
out
out
cltd
mov
loop
loop
gs
or
add
arpl
mov
dec
and
aas
nop
push
and
into
sti
push
pop
nop
inc
loopne
lret
add
push
pop
and
dec
jle
mov
insl
aas
adc
lods
icebp
movsb
adc
cmp
xchg
jg
push
push
loop
mov
mov
lods
fcomp
rorb
das
fcomps
nop
mov
mov
inc
fidivrs
pop
icebp
push
loope
fwait
pop
dec
and
add
dec
xchg
jp
dec
aaa
adc
add
test
sub
popf
jns
cwtl
mov
push
pusha
mov
test
insl
jle
cmp
or
mov
sbb
mov
adc
lds
ret
sub
jbe
mov
pusha
mov
mov
ret
shrl
fs
adc
push
pop
icebp
arpl
lahf
dec
lods
addr16
pop
jmp
ja
mov
pusha
mov
scas
xorb
mov
insl
lcall
mov
jb
jle
jg
popf
incl
testl
sbb
inc
icebp
mov
pusha
push
dec
inc
or
jb
jb
loop
pop
pop
popf
pusha
mov
in
push
sub
xor
ljmp
cs
or
dec
push
cs
push
test
inc
ffreep
fcoms
push
test
push
je
xor
aas
xchg
xlat
loop
aad
fs
or
jbe
cs
cmp
sub
insb
cltd
and
lahf
mov
imul
mov
xchg
repnz
xchg
inc
inc
or
dec
push
jecxz
mov
dec
mov
inc
dec
nop
or
insl
jge
mov
mov
test
xor
cs
lcall
cmc
sub
mov
aaa
pop
fs
mov
jl
dec
jmp
jg
test
jbe
out
shrb
jnp
jb
mov
cmp
adcb
add
jp
cmc
les
xor
daa
dec
cmc
mov
and
pop
push
xor
fnsave
push
lahf
xchg
cmp
repz
add
xor
dec
jle
sub
scas
and
pop
mov
aaa
sbb
add
jecxz
test
sub
cltd
leave
mov
popf
cmp
bound
xchg
in
sub
ds
cwtl
mov
lret
sbb
inc
mov
adc
enter
sub
adc
push
idivb
mov
xchg
in
or
mulb
arpl
icebp
cmp
ja
adcl
pop
mov
clc
repz
cwtl
cmp
jmp
into
sub
imul
jle
adc
adc
mov
cmp
cld
and
in
xor
mov
jecxz
addl
lds
pop
mov
adc
aas
int3
and
loope
insb
or
insl
aas
push
cmp
dec
mov
pop
jno
shr
mov
faddl
inc
and
mov
xchg
cmp
call
daa
push
xchg
add
push
testl
dec
fcmovnu
lcall
push
mov
jl
mov
into
ret
xor
lock
sahf
outsb
xorb
ficoml
test
ljmp
lahf
notb
in
iret
cmc
bound
test
dec
mov
xor
lods
fwait
call
mov
cmpsl
dec
enter
outsb
mov
ds
iret
out
mov
mov
jecxz
and
test
lcall
jp
dec
and
sbb
adc
jmp
jmp
call
mov
xchg
fwait
pop
lret
pop
stc
mov
lcall
test
and
repnz
fstp
xlat
xor
push
jb
stos
mov
push
xchg
and
ds
orl
adc
rcrb
adc
jno
dec
leave
push
cmc
loope
lock
cmp
test
pop
sub
and
sub
sbb
sub
and
pop
imul
mov
xor
and
sbb
mov
and
xor
add
repnz
adc
mov
mov
jecxz
sbb
mov
rcrb
iret
jb
pop
mov
iret
mov
mov
nop
jbe
sahf
xchg
int3
mov
loope
pop
ss
pop
push
int3
gs
add
repz
mov
loop
jg
dec
adc
fadds
or
icebp
jmp
stos
ss
xchg
call
sarl
add
jecxz
jle
fs
or
jg
bound
in
cwtl
dec
into
dec
or
rorl
dec
enter
cmp
ret
in
mov
out
or
push
mov
fmuls
in
outsl
mov
xchg
add
popf
int
adc
jl
push
pop
add
mov
adc
jns
jbe
stos
shlb
aaa
out
js
movsl
adc
shrl
or
aaa
xchg
mov
mov
inc
cli
xlat
mov
or
push
sbb
pop
push
adcb
subl
xor
cmpsl
adc
fcmove
fldt
fsin
out
les
adc
or
dec
jmp
xchg
mov
fisttpl
jle
sbb
cmpsb
mov
imul
pop
xchg
xchg
mov
jae
imul
sub
iret
lret
pop
push
lret
push
scas
pop
inc
ds
or
pop
and
test
jnp
cmp
and
icebp
xor
ss
in
scas
push
ret
vorps
jo
lgs
xchg
sbbb
or
imul
pop
repnz
mov
xor
outsb
daa
adc
and
fs
add
lods
iret
cld
sbb
nop
xchg
xor
rcll
shrl
ja
aas
movsl
fsubrl
jb
nop
sti
notl
adc
stos
jo
cld
arpl
mov
fisttps
cmc
mov
jnp
out
jne
in
pop
push
or
aad
subl
and
iret
mov
push
push
push
xchg
add
dec
dec
cmp
xchg
fwait
mov
fld
sarl
icebp
mov
sub
dec
cli
cmp
mov
jg
adc
mov
lods
mov
addr16
push
push
pop
xchg
mov
mov
clc
mov
sub
loope
cmp
pop
in
dec
cmpsl
xor
xchg
pop
xorl
fwait
adc
stc
lahf
mov
fcoml
adc
addb
je
ljmp
insb
sahf
jno
sub
pop
pop
and
xlat
adc
jns
cwtl
dec
jno
cmp
fldcw
push
mov
imul
test
cmp
js
and
ds
cli
nop
mov
shlb
scas
sub
ljmp
int
imul
mov
mov
loope
and
pop
push
dec
sub
aaa
cmp
mov
inc
leave
pushf
and
xchg
shll
cs
mov
test
test
pop
lods
jnp
xchg
out
xchg
push
sysret
lret
or
loop
pop
loop
and
mov
sti
mov
mov
stos
movsl
push
xchg
repnz
xor
rolb
mov
xor
sbb
sub
and
pmaxub
jp
pop
fwait
push
sub
cmp
sbb
cs
in
cs
in
lods
repz
loopne
faddl
lods
jl
scas
or
bound
scas
pusha
jp
cmp
push
adc
adc
cmp
push
shlb
mov
add
lea
jbe
mov
lahf
hlt
ficoms
fdivp
sbbl
pop
push
fdivrs
sbb
aam
add
outsb
imul
cmc
je
sub
aam
dec
mov
imull
cmpsb
push
cld
pop
sbb
test
stos
mov
mov
out
fidivs
outsl
push
aad
adc
sbb
and
jne
push
das
daa
cmc
lahf
push
lea
mov
ret
cmp
cmp
cmp
out
aam
pushf
jns
pop
xor
push
mov
test
adcl
popf
mov
dec
mov
mov
js
and
add
jb
mov
jo
in
xchg
mov
icebp
mov
test
out
or
mov
loop
push
repnz
xchg
out
fiaddl
inc
adc
sahf
pop
fsubp
fstl
push
sub
and
out
jo
sti
pop
mov
xchg
fwait
popf
stc
shrl
mov
out
fimull
sub
or
and
cld
and
dec
ja
mov
ss
mov
xlat
mov
ss
sbbl
shl
pushf
jl
jecxz
cmpb
cmp
sbb
iret
in
or
sbb
xchg
cmpb
xor
mov
dec
push
out
outsl
clc
mov
in
xacquire
leave
pushf
int3
pop
dec
add
aas
dec
sbb
jp
mov
daa
lahf
leave
bnd
jl
test
fldl
push
dec
or
pop
in
repnz
mov
ret
and
int3
inc
inc
outsb
push
push
and
push
xchg
ficompl
and
mov
in
mov
scas
push
fcmove
xchg
xor
jns
data16
add
jb
loop
inc
mov
xchg
mov
xor
test
pop
insb
sub
xor
sti
stc
or
hlt
xchg
pop
pop
mov
scas
repz
jns
je,pn
lock
sbb
addb
das
out
movsb
inc
mov
xchg
add
icebp
in
movsb
xchg
cmpsb
lret
push
xchg
pop
cmp
rcll
sbb
mov
xor
hlt
lret
or
dec
xchg
inc
push
dec
sbb
int
js
adc
jge
or
push
iret
pushf
mov
mov
jge
and
test
ljmp
push
xchg
mov
imul
push
in
adcl
stos
pop
stos
insb
imul
cmpsb
push
mov
fs
in
push
sbb
or
fistl
andb
sarb
cli
mov
inc
imul
sbb
imul
orb
jl
mov
adc
and
loop
push
xchg
movsb
dec
adc
sarl
and
mov
fisubrs
je
stc
fbstp
sti
inc
stc
pop
xlat
shll
jno
mov
test
or
push
aam
sub
cs
mov
lahf
lcall
dec
clc
pop
mov
lods
inc
mov
leave
jns
add
sbb
or
adc
in
mov
aaa
les
or
iret
sub
sbb
fldenv
lods
pop
lcall
mov
sbb
push
dec
push
fwait
inc
loop
push
movsb
cwtl
push
sbb
dec
push
dec
stc
jmp
les
xchg
lods
lret
lods
fidivl
mov
lcall
cmp
mov
mov
mov
ds
subb
lahf
in
call
movsl
pop
imul
enter
subl
mov
mov
outsl
lods
xchg
mov
ret
sahf
daa
push
pop
and
loope
add
and
aam
xor
fnstcw
mov
and
pop
repz
lea
fistpll
inc
lock
jo
fsubs
fildl
inc
jo
shlb
pop
lock
ds
sub
arpl
pusha
outsb
sarl
cmp
xchg
pop
add
xor
loopne
gs
cmpsl
stos
inc
jno
outsb
push
ss
sub
inc
push
std
pop
pop
sbb
test
sbb
push
lcall
aas
cs
sbb
call
jb
adc
jge
out
mov
sub
notl
inc
add
cmp
xchg
xchg
nop
shll
fwait
jg
inc
pop
push
shlb
shll
rcll
xor
mov
adc
lea
xchg
mov
jb
push
je
cmp
and
fs
sti
pop
sahf
dec
fwait
add
dec
dec
ljmp
aaa
xor
mov
fildl
add
and
cmpsb
nop
pop
add
je
sub
scas
push
js
push
nop
out
enter
inc
or
inc
ljmp
aad
fisubrs
cmpsb
and
scas
repnz
jb
into
bound
push
adc
or
mov
cmp
inc
push
lret
xchg
xchg
mov
mov
inc
xchg
jmp
hlt
adc
inc
les
es
adcb
dec
data16
or
ja
pop
jbe
es
cltd
enter
aas
sbb
lret
stc
jl
push
pop
testl
cmp
pop
or
lds
mov
shll
std
into
adc
sub
cld
xlat
stos
jp
mov
pusha
mov
jmp
ljmp
mov
xorl
adc
pop
sbbl
cmp
dec
fstps
dec
sub
dec
sahf
mov
jbe
pop
jmp
jo
or
push
rolb
jne
mov
scas
sub
leave
aad
lcall
jne
push
notl
mov
mov
int3
lods
cmp
ret
lea
fiaddl
outsb
sbb
sbb
sbb
adc
lcall
pusha
loop
movsl
divb
loope
dec
push
pop
or
out
clc
and
mov
sbb
cmp
lock
xchg
fld
mov
repz
sub
dec
shrl
sbb
cmp
loop
sub
adc
mov
mov
mov
mov
pop
lret
sbb
inc
mov
or
je
and
lret
out
xchg
repz
cwtl
test
or
pop
pop
sbb
mov
push
pop
pop
aas
dec
mulps
and
and
and
mov
adc
notl
or
cmp
push
pop
cltd
enter
and
lds
insb
sarb
sub
sbb
mov
insl
mov
pop
mov
testl
xchg
inc
xchg
stc
mov
imul
out
stc
mov
mov
aad
or
test
hlt
add
xchg
add
dec
pop
mov
outsl
test
cwtl
into
int3
jle
xor
or
stos
jge
mov
insb
cmp
xchg
test
or
test
add
mov
nop
cs
push
stos
push
sbb
jnp
mov
shr
cmc
test
imul
cmp
sahf
sbb
push
mov
sbb
lahf
and
stos
push
dec
movsl
call
dec
fidivrs
sbb
jge
mov
addr16
jl
imul
jno
into
fstl
inc
mov
imul
mov
arpl
sbb
lods
ljmp
inc
out
sbb
cmc
xor
and
sbb
and
test
inc
or
and
adc
fsubrl
push
jge
cmc
xchg
cmpsl
sbb
enter
sub
inc
mov
dec
shll
lock
ret
mov
ljmp
mov
aaa
mov
xor
sbb
xor
mov
jnp
in
hlt
dec
bound
mov
imulb
mov
and
inc
aas
test
shll
push
xor
mov
mov
pop
xchg
lea
ret
and
pop
pop
je
aad
mov
mov
dec
test
inc
mov
fistpl
lcall
movsb
jmp
scas
jle
add
cli
in
pop
mov
xchg
sub
dec
ds
test
jno
cmp
mov
cmp
xchg
movsl
xchg
pop
inc
xor
clc
sub
lea
xchg
int3
in
pop
insb
pop
push
sti
add
in
cltd
pop
or
push
pop
or
dec
sbb
cmc
bound
fs
leave
push
pop
or
sub
rclb
nop
in
sbb
cmp
xor
scas
or
sbb
sub
movb
or
lcall
lds
adc
loope
sti
andl
push
push
sbb
cmp
fisttpll
hlt
out
push
mov
gs
mov
dec
divl
mov
pop
cs
inc
gs
repnz
xchg
pop
dec
hlt
push
cmp
sbb
out
shrl
dec
jno
cmp
jnp
ret
jp
pop
sti
dec
or
cmp
adc
out
std
push
or
sub
mov
mov
in
in
dec
js
mov
fs
pop
and
xchg
mov
dec
add
sub
cmp
pop
sbb
sahf
mov
mov
rcrb
or
shll
dec
ds
ss
xor
ljmp
lock
adc
pop
ficoml
in
sbb
rolb
icebp
jg
insb
fldlg2
pusha
mov
cs
xchg
mov
mov
fwait
in
push
out
sbb
stos
sbb
loop
addr16
or
inc
mov
das
xchg
aaa
pusha
dec
sahf
fidivs
fucomi
lahf
cmp
fidivl
cltd
mov
jmp
xorl
push
mov
decb
insb
inc
jecxz
adc
inc
pop
push
adc
adc
imul
cmpsb
scas
mov
lahf
inc
lahf
std
mov
pop
das
mov
add
jmp
outsb
jnp
or
pop
gs
pop
cmp
inc
sahf
leave
mov
imul
and
sti
loope
xor
fcoml
scas
imul
jb
aam
sbbl
pushw
adc
into
push
mov
aam
arpl
lret
jb
add
dec
cmp
push
cmpsb
pop
sub
ss
sub
and
push
and
jno
add
in
add
xchg
pop
out
lods
mov
insb
or
add
xor
adc
jge
mov
jge
pop
pusha
jg
inc
inc
sub
lret
adc
dec
lret
insl
sbb
inc
fsubl
gs
cmpsl
sbbb
movsb
sahf
imul
mov
sbb
jp
mov
add
push
push
bound
cmc
into
mov
ds
sub
xorl
and
push
xchg
sar
mov
pop
mov
push
lahf
jns
icebp
xchg
lret
mov
mov
dec
das
mov
leave
rorl
movsb
add
add
or
neg
pop
push
rcr
or
dec
sub
cmp
fists
add
fwait
jp
or
cltd
pop
mov
add
hlt
lret
mov
cmpsl
clc
add
lret
mov
cs
fsubrs
sbb
jne
mov
and
pop
mov
imul
out
push
and
and
sbb
fidivl
std
cmp
mov
add
in
hlt
mov
insb
rorb
test
sahf
fidivs
aas
fmul
dec
xchg
mov
dec
in
inc
bound
jne
cwtl
sub
cmpb
ds
push
loope
pop
je
jns
push
out
cmp
cld
lahf
cwtl
sbb
fbstp
movsb
out
xchg
frstor
lahf
insl
cld
xor
es
out
in
or
decl
pop
cmp
inc
scas
icebp
fisubrl
dec
cwtl
jle
lods
outsl
pop
fistl
and
inc
sub
sub
push
stos
test
jl
popf
iret
insl
loop
bound
push
adc
lock
mov
mov
sbb
push
lock
sub
dec
out
inc
loopne
mov
ficoms
hlt
and
xchg
cmpsl
dec
and
xchg
push
pop
nop
outsl
shrb
mov
insb
sbb
iret
inc
in
mov
jge
dec
xor
push
int
cmc
lret
xchg
int
sbbb
stc
xchg
fwait
nop
sbb
dec
mull
pusha
int
lahf
je
ja
mov
sub
vpsubq
sbb
add
shrl
mov
scas
xor
push
test
xchg
adc
adc
add
aam
lret
adc
fwait
stos
add
cmpsb
fxch
test
stc
xchg
ret
popf
sub
pop
and
mov
xor
aaa
dec
jecxz
daa
sahf
pusha
add
inc
push
jmp
outsl
push
pop
in
lret
jge
jecxz
aas
adc
es
imul
repnz
sub
adc
push
dec
ja
mov
push
dec
jecxz
mov
mov
jb
cmp
mov
in
sub
mov
into
mov
enter
pop
les
imul
cli
call
dec
lods
jmp
rorb
push
pop
and
mov
fwait
ss
cmc
mov
add
sbb
stc
movb
mov
mov
xchg
aaa
xchg
add
addr16
jg
mov
inc
pop
cltd
push
inc
loopne
push
or
shrl
aas
stc
pop
xchg
mov
pop
add
jno
xchg
in
jns
rclb
sahf
push
loope
dec
inc
addl
or
jo
add
xlat
push
xchg
cmp
jp
daa
xor
movsb
mov
sub
xchg
sbb
pop
mov
mov
std
sbb
out
jge
sub
dec
push
cmp
test
xchg
mov
push
ret
das
inc
dec
mov
push
xchg
mov
cli
push
add
mov
movsl
add
mov
jecxz
push
jle
out
or
mov
lods
mov
jge
inc
pop
gs
mov
inc
ret
sbb
inc
lea
cmp
jecxz
xchg
sub
insl
incl
in
mov
or
test
aad
xor
ss
nop
inc
aaa
pop
jbe
shr
add
cmp
push
leave
sbb
mov
fnstsw
xchg
insb
fists
inc
imul
leave
ljmp
adc
lret
imul
aaa
add
push
es
cmpsb
xchg
cmp
add
enter
mov
add
push
mov
sub
jns
test
push
mov
cmp
pushf
add
movsb
cmp
popa
cltd
adc
push
or
pop
cmpsb
mov
outsl
aas
or
loopne
fwait
sbb
push
mov
aad
ficoml
or
imul
xor
sub
adc
jo
ja
jbe
test
mov
cmp
fildll
aas
loope
mov
jb
mov
pop
scas
lret
jecxz
jmp
xor
dec
loope
cmp
ljmp
jnp
and
outsb
sbb
add
adc
xchg
in
mov
and
stos
xor
sti
repz
mov
mov
jecxz
data16
mov
cmp
sarb
out
sahf
dec
fsubl
dec
dec
xor
dec
adc
mov
or
push
cmp
fnstcw
fsubrl
idivl
stos
jge
add
inc
mov
fbstp
rcrb
push
fxch
inc
pop
sub
jb
mov
lret
aam
insb
scas
pop
out
add
add
pop
or
adc
mov
pusha
fnstsw
pop
fs
aas
sbb
sbb
adc
pop
cs
xchg
push
jb
mov
xor
cmpsl
xor
mov
push
movsl
fwait
mov
addb
negl
sub
xchg
xor
mov
bound
xor
ficompl
gs
mov
cmp
mov
adc
mov
cltd
mov
fs
aam
jp
cs
mov
lock
cmp
ret
rcl
add
mov
add
xor
pop
xchg
xchg
mov
data16
xor
mov
cmpsl
xchg
daa
lcall
pop
mov
jns
lret
or
sbbl
fcmovnu
cmp
pop
jne
adc
xchg
cmp
sarb
pop
adc
aas
jmp
out
insl
mov
call
add
cmp
lret
ja
xchg
push
gs
leave
popf
aam
aaa
jmp
cmp
das
enter
sbb
xchg
add
and
lret
dec
mov
jno
sahf
cltd
xchg
ljmp
mov
jbe
jae
repnz
adc
movsb
sbb
shrb
pop
inc
leave
ljmp
mov
in
outsl
lcall
mov
sub
sbb
scas
xchg
jle
ret
jp
int
xlat
inc
cmc
adc
repz
test
mov
mov
mov
push
xorb
dec
mov
adc
ret
and
inc
sbb
aas
test
fwait
lret
insl
mov
and
in
jb
scas
das
mov
ret
out
rcl
addr16
mov
pop
cmp
xor
xchg
and
push
incl
inc
jl
movsb
push
sub
and
in
pop
inc
add
aaa
and
xlat
pusha
push
or
adcl
lods
dec
xchg
aas
push
insb
mov
push
mov
arpl
pop
call
jg
stos
sbb
lock
xchg
es
and
xchg
std
addr16
je
int
addr16
dec
push
mov
fwait
mov
or
xorl
pushf
push
leave
xchg
mov
ljmp
cmp
leave
in
xchg
stos
or
mov
pop
lcall
xchg
xlat
mov
orl
sarb
inc
or
sbb
or
or
push
test
mov
cmp
pop
mov
aas
insl
popa
mov
jecxz
mov
mov
loope
cmp
and
adc
pop
jnp
loop
lds
sbb
sbb
adc
lds
xchg
mov
and
pop
or
insb
inc
mov
lods
adc
mov
cmpsb
and
xor
push
xchg
mov
or
add
xor
cmp
mov
movsl
data16
mov
in
aaa
jo
in
mov
mov
inc
ret
cmp
mulb
pushf
inc
addr16
loope
inc
fst
testb
cld
pop
test
loop
sbbb
jg
jp
adc
shl
adc
jno
jne
cmp
cmp
test
ret
jae
and
mov
mov
testl
and
dec
inc
push
lret
into
inc
fistl
push
mov
cmp
shll
incb
sbb
add
or
fs
push
stos
repz
jnp
das
scas
movsl
jb
andb
inc
mov
or
loopne
xchg
cmpsb
xor
sub
push
cmp
stos
inc
xor
lds
adc
push
aaa
mov
roll
pop
clc
jle
cli
loope,pn
cltd
mov
ljmp
imul
jne
mov
push
nop
cmpsl
cli
and
clc
loopne
pop
pop
sbb
pushf
cmpsl
xchg
push
or
jo
arpl
lret
cmp
es
int3
pop
iret
je
test
sbb
movsb
loope
and
and
ds
xlat
xorl
sub
es
cs
and
sub
imul
mov
sub
shrl
cmc
inc
sbb
push
add
lahf
or
subb
inc
rcrb
daa
les
cwtl
das
dec
push
cmp
push
sti
mov
sub
jcxz
add
or
clc
into
or
popf
add
pop
add
out
add
mov
xlat
mov
mov
sahf
xchg
popa
xor
aam
scas
fs
cmp
and
mov
pop
and
pop
pop
addl
js
xor
inc
pop
repnz
fs
fwait
push
adc
shrb
fsts
roll
lcall
aad
fs
xor
and
bound
lea
jg
push
out
test
dec
adc
cmc
adc
xor
pop
dec
icebp
test
sbb
decl
mov
inc
xchg
ret
mov
mov
add
jnp
and
jecxz
mov
inc
jne
lods
or
adc
fisubl
mov
or
andl
cli
lods
lret
push
dec
lock
ret
sahf
fcmovnbe
xor
jge
mull
imul
aad
dec
jp
xchg
adc
aas
in
sub
hlt
rep
push
jle
push
push
in
mov
or
stos
call
xchg
pusha
arpl
ss
pusha
stos
pop
mov
iret
movsl
mov
test
xor
xor
fcoml
nop
pop
enter
mov
push
adc
out
sbb
xchg
mov
sti
sub
dec
mov
popa
js
sub
outsb
gs
arpl
filds
outsl
flds
fists
and
mov
mov
ljmp
jbe
iret
fs
lods
jge
outsb
xor
xchg
nop
pop
jecxz
out
mov
jle
add
mov
rorb
movsb
jo
mov
push
test
cs
pop
repnz
test
xchg
mov
dec
cmpb
pop
add
xchg
lock
dec
nop
cmp
lcall
cltd
into
pop
push
mov
outsb
cmp
push
or
and
out
js
repnz
dec
adc
icebp
xchg
mov
imul
aaa
mov
sbb
mov
movsl
ret
ljmp
xor
addb
cmp
in
aam
push
sti
xchg
jg
jbe
test
enter
xor
jbe
or
shrl
sbb
hlt
sbb
mov
mov
out
mov
bound
aaa
ja
mov
push
mov
xor
add
mov
shll
adc
pop
jnp
mov
pop
push
cmpsb
xorb
xchg
les
aam
lods
sbb
inc
iret
aam
pop
sub
repz
pusha
cmp
jl
sbb
inc
shlb
repz
addr16
or
push
je
add
inc
rcr
mov
cmpsb
insb
mov
xor
add
jns
inc
mov
in
popa
clc
icebp
push
shrb
xor
push
lret
aam
mov
mov
adc
aad
add
push
mov
mov
push
jp
aad
sbb
adc
decb
lcall
add
sbb
push
clc
es
or
stc
push
xchg
scas
lods
loop
and
mov
dec
bts
xchg
fneni(8087
cmp
inc
testb
mov
xorb
sub
mov
sbb
test
test
jno
out
push
notb
es
imul
pop
mov
repnz
es
repnz
pop
sti
ja
sub
int3
inc
mov
jns
fdivp
dec
or
jle
int3
int
inc
mov
test
and
std
scas
ljmp
mov
mov
add
push
xor
dec
sbb
cmc
pop
push
aaa
xor
push
pop
mov
lcall
hlt
out
mov
aad
jne
push
scas
and
es
and
or
shlb
je
lret
and
enter
mov
loop
sarb
cpuid
shll
add
or
sub
xor
xchg
adc
jb
bound
lret
jns
pop
sarl
mov
je
decl
sbb
inc
in
mov
fs
sarb
shrl
xor
cmp
sti
pop
dec
repnz
or
or
loop
dec
pop
lret
scas
adc
mov
adc
into
adc
out
dec
lcall
ja
ss
out
jae
in
in
sub
jns
and
xchg
test
repnz
rorb
aam
inc
mov
repz
sub
mov
or
in
xlat
popf
cmp
popf
inc
int3
mov
sahf
xchg
cmp
cmpb
aad
xchg
adc
in
mov
inc
pop
add
lret
jge
popf
lret
cmp
jecxz
jnp
jb
adc
jo
das
je
xor
pop
push
out
inc
xor
pop
push
pop
movsb
xlat
xchg
inc
ss
lcall
push
in
scas
add
push
insb
jo
add
cld
and
ja
mov
cmpsb
daa
push
aaa
popf
cltd
rcl
inc
jne
dec
icebp
add
addr16
push
inc
adc
gs
xchg
js
sbb
sbb
add
cmp
js
es
jnp
push
add
out
test
loopne
sbb
jmp
jle
sbb
sar
fiaddl
pop
out
push
lods
or
pushf
sub
mov
mov
shll
pop
aaa
jo
sub
xchg
push
pop
ret
jg
arpl
fstps
add
and
dec
cmpb
out
sub
sbb
adc
xor
sub
push
clc
mov
bound
add
mov
stos
xchg
mov
scas
dec
xor
addb
decl
cmc
mov
mov
loope
clc
int
sub
jno
or
sub
popa
ret
aas
pop
xor
loopne
mov
popf
shrl
xchg
mov
in
popa
pop
out
lods
inc
jg
out
push
mov
test
jbe
rep
jecxz
mov
imul
jns
sub
xchg
icebp
testb
notb
inc
insl
neg
das
movsl
rol
dec
leave
incb
inc
roll
inc
jnp
into
lret
cltd
inc
enter
jns
lods
xor
xor
insb
stos
fwait
or
div
dec
in
push
std
xchg
or
cmp
and
loopne
lcall
pop
lea
inc
jbe
push
imul
dec
inc
mov
jbe
or
out
push
cmp
xchg
push
clc
paddq
roll
push
xchg
mov
shlb
push
aam
popa
sub
dec
jo
xchg
xor
inc
or
test
dec
push
cmp
jno
jg
inc
adc
push
js
mov
loop
shl
push
aad
mov
ljmp
cmpsl
xor
inc
pop
or
gs
sbbb
inc
pop
stos
cmc
lods
push
add
lret
in
mov
cli
ret
hlt
flds
inc
inc
xchg
outsl
cmpl
jbe
mov
dec
xabort
dec
push
add
aam
inc
add
ss
adc
mov
sarl
mov
mov
add
add
int
xchg
mov
faddl
jae
push
sbb
inc
cmpsb
push
movsl
sub
mov
mov
adc
pop
cwtl
mov
popa
cmpsb
push
fwait
push
scas
addr16
arpl
addl
fwait
cs
add
popf
mov
lret
pop
add
pushf
or
nop
hlt
inc
les
imul
stc
cmp
aad
pop
shl
xor
popa
xchg
enter
sub
jae
outsb
sub
xor
mov
insl
mov
jle
cmpsl
movsb
test
inc
lods
fincstp
shlb
mov
mov
jge
dec
leave
mov
xchg
insl
jbe
sbb
fidivrl
dec
dec
cmp
inc
dec
repnz
mov
mov
jp
orb
push
mov
lret
or
jns
dec
cmpsb
aad
out
stc
pop
jb
mov
cld
cwtl
push
mov
aam
xchg
inc
jl
jb
insl
mov
inc
mov
popf
push
mov
in
fidivs
and
jno
sub
fbstp
mov
outsb
test
pop
sub
xor
pop
out
mov
sar
out
out
cwtl
push
fimuls
test
repnz
sub
pusha
ds
sbb
jae
subl
iret
stos
jo
dec
add
movsb
sub
lods
sub
pop
stc
out
push
mov
cmp
sub
dec
inc
stos
std
inc
in
and
pop
inc
and
adc
insb
mov
addb
sub
std
mov
inc
xor
xchg
pop
loop
addr16
mov
xchg
call
data16
ja
xor
adc
dec
lock
push
xchg
lret
pop
in
out
push
les
inc
aam
cwtl
movsl
jmp
and
dec
das
xchg
subb
andb
pop
sbb
in
test
xchg
dec
push
inc
jo
xor
fnstsw
jo
cmp
shlb
aas
out
loope
aad
aaa
outsl
mov
mov
jp
cld
add
cltd
cwtl
mov
clc
mov
add
pcmpeqb
insl
test
cltd
sbb
pop
es
and
sarl
loopne
inc
mov
mull
mov
dec
test
cmc
int3
mov
xchg
sbb
sub
xlat
mov
push
xchg
popa
push
in
mov
jne
loopne
test
add
daa
adc
pop
inc
ja
mov
sbb
lahf
shrb
xor
in
rcl
outsb
sbb
push
xchg
sub
mov
adc
cmpsb
mov
jo
adc
nop
andb
loopne
daa
lret
dec
dec
pop
inc
pop
pop
std
pusha
aas
mul
xor
pop
arpl
jns
fwait
sub
sar
sbb
xchg
outsb
stos
and
cmpsb
rcrl
add
out
lret
pop
je
inc
add
imulb
dec
jmp
dec
xchg
cmc
mov
cmpsl
flds
mov
cmc
shlb
cld
insl
movb
push
cmpsb
sahf
ret
je
adc
pushf
add
sub
sbb
jl
popf
daa
push
push
imul
lret
loop
jmp
mov
int
add
jmp
and
xor
loop
push
aas
push
cmp
mov
pusha
clc
loop
movsl
or
xorb
notb
mov
cs
cwtl
mov
lock
fnsave
xchg
out
sub
cs
shlb
xchg
out
test
idiv
in
push
aad
fmull
xchg
add
and
xor
push
cmpsl
cmc
xchg
and
mov
mov
adc
mov
fsubl
std
adc
push
push
insl
and
add
inc
pop
mov
jo
jl
push
jp
and
sub
xchg
int
xchg
dec
lcall
shll
pop
test
pop
sub
or
adc
or
imul
xchg
jecxz
lods
dec
je
and
and
pop
imul
scas
jecxz
push
mov
hlt
mov
sub
jp
aam
xchg
std
jb
mov
imul
imul
pop
xchg
xor
xor
dec
inc
scas
iret
addr16
test
shrl
cwtl
mov
sub
push
test
rclb
jne
imul
cltd
pop
cmpsb
adc
fisttpll
or
insb
lcall
das
lock
and
mov
bound
imul
nop
and
in
pusha
sbb
fsub
cmpl
push
ss
gs
lods
mov
mov
mov
out
enter
aad
lea
in
cmp
fiaddl
fbld
or
insl
push
loop
cltd
insb
call
jp
sbb
js
inc
jae
aam
jno
pop
inc
sbb
pop
loopne
jmp
pop
mov
shll
sub
test
jecxz
stos
je
sub
icebp
jg
mov
inc
or
aaa
xor
in
movsb
gs
scas
xchg
test
xchg
into
mov
push
and
jnp
jmp
inc
push
dec
out
bound
inc
arpl
outsl
mov
adc
xor
rol
and
sbb
out
dec
push
lahf
and
loopne
fildl
or
xchg
xchg
fwait
cwtl
add
lods
test
jo
cmp
xor
sub
fwait
cli
inc
sahf
rorb
das
lock
add
pusha
and
fwait
jno
scas
mov
sbb
jg
out
push
inc
push
movhps
jge
arpl
pop
dec
mov
mov
int
js
aad
mov
fs
call
add
dec
jecxz
and
test
imul
jo
dec
jbe
gs
mov
xchg
mov
push
xchg
cmp
adc
inc
movsl
in
jmp
mov
jle
pop
push
or
rorb
mov
ret
dec
data16
out
jge
aaa
shrl
movsb
addb
xor
in
loope
or
lods
and
mov
push
adcl
int3
pop
daa
addl
push
mov
jnp
fisttpl
ret
repnz
std
enter
out
inc
xchg
push
loop
lods
and
mov
xor
add
and
imul
dec
adc
xor
roll
rol
std
out
les
scas
pcmpgtd
and
lahf
cmp
mov
mulb
add
outsl
negl
cwtl
ss
inc
lds
stc
dec
sti
push
mov
insb
and
icebp
mov
jp
mov
adc
into
cltd
pop
adc
pushf
mov
inc
stc
sub
cs
popf
aam
movsl
adc
sub
or
add
orb
mov
out
mov
es
fwait
js
push
ret
push
mov
pop
inc
fisttpll
xor
and
lcall
xlat
inc
jae
push
cwtl
shl
add
in
or
loope
push
add
test
cmc
xor
cltd
cld
cli
cli
insl
jnp
loop
loopne
inc
sahf
xchg
mov
fwait
xchg
insb
test
mov
or
cmp
push
cmc
iret
cs
sub
add
fcompl
test
ja
jg
pop
sti
lock
adc
mov
sbb
and
nop
pop
or
push
mov
add
orb
pusha
xchg
pop
push
dec
in
jnp
out
dec
mov
mov
testb
aaa
xchg
add
popa
call
mov
sbb
xchg
fsqrt
movlps
xor
mov
fwait
xor
xchg
sbb
cmp
shll
add
stos
into
fs
jnp
jo
cmc
and
jbe
lret
fisttpl
xchg
xor
mov
adc
les
xlat
leave
aaa
push
fsubp
push
sti
mov
dec
sarl
mov
je
push
cmp
in
lds
arpl
mov
mov
mov
inc
in
fwait
and
mov
fidivrl
push
iret
je
add
aaa
out
xchg
xlat
lcall
iret
mov
idiv
cs
ret
xchg
mov
jno
push
jo
les
sub
shll
fcom
cld
lret
xor
pop
cli
aam
jns,pt
pop
mov
cmc
call
jle
xor
clc
imul
xchg
adc
data16
sbb
pushf
fisubrl
mov
sahf
xchg
jge
mov
inc
aaa
aam
flds
adc
in
jle
xor
sub
sahf
adc
test
imul
pop
add
pop
push
mov
nop
lret
pop
xorl
mov
cltd
or
decb
xchg
inc
outsb
add
add
addb
push
into
cltd
cltd
mov
leave
aaa
lret
rcrl
mov
xor
push
hlt
and
dec
add
cmc
jb
pop
mov
adc
int3
push
push
cmp
or
loope
stc
xlat
fidivs
inc
fiaddl
push
xorl
inc
dec
popa
ljmp
or
or
lahf
jl
iret
or
cltd
leave
dec
jb,pn
mov
cmc
sahf
jp
popa
imul
dec
cmp
add
outsb
mov
aam
push
jg
inc
dec
loope
inc
mov
shlb
inc
xor
cmp
push
mov
or
mov
jecxz
sarb
rolb
dec
push
push
sub
add
jmp
xor
cmpsl
mov
sub
test
clc
jae
js
fwait
xchg
add
ljmp
movsb
mov
sub
add
pop
insl
pop
mov
rorl
jne
pop
int
pop
sub
mov
movsl
int3
or
leave
paddsw
lcall
add
lahf
and
lods
shl
mov
mov
enter
in
cmp
mov
roll
add
arpl
pop
push
inc
jno
pop
inc
push
ficoms
daa
subl
adc
inc
fstpt
es
mov
mov
cmpsb
arpl
dec
int3
push
pop
mov
imul
mov
pop
scas
sahf
mov
cmpsl
push
scas
jg
cmpsl
push
stos
jno
cwtl
mov
xchg
mov
je
mov
push
add
xchg
cmp
cli
pop
mov
loopne
lahf
xor
sbb
loop
or
js
pop
aad
inc
aas
roll
mov
pop
add
ret
or
push
xchg
in
mov
cmc
cmp
push
jge
mov
jmp
aam
sbb
cmp
iret
push
cmp
hlt
sahf
mov
inc
push
leave
clc
nop
insb
fsubs
iret
mov
clc
push
dec
movsl
jmp
dec
call
mov
jg
cmpsb
subb
fs
sub
and
popf
mov
scas
mov
es
cmp
mov
xchg
xor
adc
faddl
cli
dec
sbb
add
mov
mov
mov
pop
fisubrs
mov
dec
pushf
les
lret
xchg
pop
mov
repz
push
mov
ja
rorl
sahf
cld
mov
xlat
es
or
bound
sbb
cwtl
rorb
dec
jge
popa
imul
in
push
or
xor
and
jae
jb
ss
lahf
shll
jmp
imul
loopne
ss
mov
sbb
cmp
pop
test
int3
sti
dec
fisttpll
push
add
fsts
push
add
mov
dec
xor
enter
or
pop
mov
nop
js
fstps
pop
pop
inc
fwait
out
push
outsl
pop
dec
rorb
cmp
adc
mov
fnsave
push
jno
out
cwtl
jb
pop
imul
sti
mov
sub
test
pushf
dec
fwait
or
call
push
cmp
loope
call
test
mov
int
dec
ror
cmp
fst
cmp
push
scas
mov
jmp
shll
cmp
adc
sbb
or
cltd
jle
clc
lods
mov
inc
mov
sbb
xorl
fnstcw
js
icebp
dec
jge
xor
xchg
xchg
jmp
or
adc
bound
cli
and
jge
xor
movsb
frstor
shll
jno
repnz
mov
inc
dec
sahf
enter
and
fbld
scas
dec
mov
cbtw
jg
mov
fucomi
mov
mov
leave
and
xchg
mov
xchg
push
cld
and
mov
repnz
pop
mov
add
mov
shlb
movsb
or
cmp
sbb
and
push
inc
jmp
inc
cmp
inc
and
scas
adc
test
xchg
dec
fimull
cmpsl
out
mov
push
lds
jns
mov
ds
jge
ss
mov
lock
jmp
xchg
pushf
pop
lds
clc
stos
jg
dec
or
das
hlt
faddl
into
dec
dec
xor
gs
mov
sub
mov
mov
in
outsl
shll
clc
or
and
cmpsb
dec
in
jmp
std
xchg
and
pop
outsl
daa
cmpsb
fs
lods
pop
rcr
scas
in
jp
sub
and
movsb
jmp
out
push
sub
sub
fistps
repnz
popa
mov
sub
popa
icebp
out
loopne
mov
loop
inc
inc
mov
pop
xor
push
aas
or
popf
sub
sub
mov
rol
mov
cltd
mov
data16
pop
cmp
inc
imul
test
sub
cltd
ret
mov
jbe
cmp
inc
lcall
cli
xor
mov
push
mov
inc
ficompl
pop
sbb
mov
xchg
sbb
stos
pop
xor
push
pop
cmp
sbb
mov
les
push
insl
push
aas
es
jo
xor
imull
and
movsl
pop
push
adcl
dec
fnstenv
adc
jmp
jnp
loop
mov
repnz
out
pop
mov
sub
sbb
fidivrs
les
imul
lods
call
rorl
loope
mov
and
fmulp
shl
jmp
decl
cmp
shlb
in
cmp
imull
adc
and
sub
enter
and
adc
push
mov
outsb
sbb
cmpsl
ret
lea
jae
addr16
ss
prefetch
xchg
imul
add
mov
fisubrs
in
pop
xor
inc
movsl
insl
adc
gs
rcrb
popa
mov
and
outsl
xor
lahf
add
pop
lret
push
das
btsl
movsl
adc
cwtl
test
cli
dec
adc
inc
and
stos
xorl
sbb
in
sahf
xor
push
jne
mov
int3
push
stos
push
xchg
jno
cmp
dec
cmp
add
in
or
fucomi
sbb
xor
mov
pop
iret
mov
test
pop
fwait
sbb
test
ret
mov
mov
rclb
cmp
add
into
pop
das
and
xchg
iret
mov
outsl
inc
dec
and
sbb
mov
xchg
in
testb
das
push
dec
stos
mov
pop
mov
lock
xchg
sub
xchg
xor
or
pop
pop
push
jo
inc
push
add
xor
push
mov
jp
lds
sbb
sbb
imul
pop
imul
mov
test
pop
or
jmp
add
scas
mov
in
lret
push
push
cmp
add
das
or
jge
lret
lcall
rorl
inc
mov
jl
stos
jmp
mov
es
enter
popa
xchg
pop
mov
cmp
jecxz
mov
pop
xchg
cmpsb
loop
sahf
mov
cmp
adc
cmpsl
pop
pop
mov
xor
rorl
xchg
or
jmp
dec
and
cmc
xchg
jp
xor
stos
push
xor
mov
xlat
cmp
rcll
lea
mov
mov
mov
repnz
inc
push
add
pop
aam
imul
cmc
pop
cmpsl
scas
mov
scas
movsl
xchg
or
push
jp
out
dec
sbb
mov
leave
mov
add
scas
stos
subb
out
test
add
inc
sub
ss
lds
xchg
aas
sbb
cmpsb
adc
aam
nop
xchg
subb
movlhps
jl
lods
nop
subb
bound
mov
adc
cmp
out
call
int3
push
fnstcw
in
mov
cmpsb
shll
lcall
dec
fstpt
fnstenv
inc
xchg
enter
clc
cmp
mov
xchg
xor
pop
cmp
repz
xor
aaa
inc
push
repz
jb
mov
or
jno
fisubs
adc
out
jne
mov
lret
or
or
std
addr16
pop
and
mov
push
outsb
int3
sti
xchg
inc
adc
push
xlat
inc
pop
lret
xchg
xor
jbe
gs
jl
xchg
jb
pop
mov
sbb
insl
sub
icebp
loop
loope
aaa
inc
inc
outsb
mov
lret
in
jp
and
cmp
pop
ljmp
and
sub
cli
lret
mov
inc
out
cmp
int3
movsl
mov
aam
mov
mov
pop
and
xor
sbbb
les
pop
mov
fwait
lods
cld
jg
les
mov
dec
out
icebp
mov
inc
push
stos
jno
xor
jo
jle
lds
mov
lret
push
je
js
cmpsl
add
aaa
lods
mov
pop
mov
xor
add
lcall
mov
call
mov
inc
mov
cmc
sbb
ret
pop
sbb
ss
fiadds
xchg
mov
cmp
test
insl
in
push
aam
and
or
xor
jle
enter
scas
repnz
push
xchg
adc
rcrb
inc
jno
fsubrs
repnz
sti
cs
or
inc
ja
jge
aad
iret
jbe
pop
pop
cwtl
pop
push
jle
cld
adcl
xchg
rcl
sub
repz
mov
xchg
aam
push
enter
fistps
xchg
cmp
andb
mov
xchg
hlt
popf
bound
mov
xor
inc
jae
sbb
mov
cli
fcomps
aad
inc
xchg
outsl
jo
in
add
push
rol
movsb
ljmp
testl
mov
fbstp
jnp
mov
push
dec
add
icebp
enter
push
arpl
xor
inc
js
rcl
adc
dec
call
pusha
shll
bound
xor
aas
xor
dec
jno
dec
xchg
pop
loop,pt
fsubl
mov
idivl
fdivrp
imul
lret
mov
xor
adc
sub
cmp
jmp
sub
rcr
and
mov
pop
and
and
cmp
cmp
pushf
sti
test
mov
lcall
xchg
scas
xchg
add
lret
mov
fs
call
adc
pop
mov
out
cli
outsl
cli
inc
test
xchg
in
xchg
out
push
hlt
add
fisubs
xor
ficompl
mov
arpl
add
xor
imul
gs
xchg
scas
mov
or
imul
cs
mov
sbb
mov
mov
sub
or
inc
xchg
inc
add
ficoml
jge
rcrl
iret
leave
dec
jae
and
adc
loope
or
hlt
aad
movsl
fnsave
mov
dec
push
xchg
movl
push
mov
repz
cld
jnp
mov
sbb
bound
wbinvd
xor
in
movsl
fildl
fldz
sbb
cmpsb
or
fmulp
dec
jge
add
xor
fs
arpl
mov
stos
push
dec
testl
aad
sti
cmp
xchg
push
test
cmp
out
inc
cmpsb
adc
dec
adc
and
ja
lock
js
mov
rcl
or
dec
sub
call
or
xchg
sub
xor
sbb
mov
mov
xor
jno
fdivs
pop
aam
mov
fmull
inc
jl
daa
xchg
cmp
loopne
aas
cmp
mov
movsb
out
adc
jp
sub
pop
xor
not
test
jg
push
fwait
cmpsl
push
pop
or
dec
out
jno
popf
push
mov
add
mov
jp
les
rcrl
push
scas
cmp
pop
inc
stos
out
or
jmp
call
test
std
pop
testl
push
xor
cmp
or
add
add
xlat
push
push
and
xchg
std
mov
out
mov
movsb
cmp
jge
hlt
and
add
int3
pushf
fs
adc
xor
jbe
inc
or
addr16
outsb
xor
cltd
std
push
rorl
xor
aad
daa
rcll
or
xchg
xchg
aam
mov
adc
ret
and
sbbb
push
inc
stc
inc
lahf
and
mov
sahf
imul
mov
cld
mov
bound
out
adc
cmpsl
mov
sub
shlb
xchg
add
loop
sbbl
out
sbb
or
int3
xor
loop
xchg
je
lret
bound
xor
inc
aam
mov
test
cmp
xor
outsl
lds
add
in
cmc
jb
mov
addr16
dec
loopne
adc
sub
fsubl
pop
or
test
xchg
cmpsb
mov
and
or
arpl
cmp
mov
adc
jnp
xchg
mov
scas
pop
cmpsl
aam
xchg
pop
stos
or
jae
daa
test
lcall
lock
sub
lods
das
cli
lods
push
std
rcl
fstpt
push
fnstenv
push
push
pop
cmp
fwait
mov
sbbl
fsubrs
sbbb
xchg
jmp
and
adc
enter
mov
push
or
and
xchg
sbb
sarb
sbb
bound
je
or
mov
pop
ret
inc
xor
jg
cmp
xor
and
pop
ja
mov
jb
and
fdiv
sbb
add
mov
rcl
xchg
push
xor
cmpsb
pop
enter
int3
rolb
inc
outsb
loopne
daa
cmp
test
xchg
aas
imul
push
addb
dec
stc
out
sub
or
fisttpll
cmpsb
xchg
outsb
test
test
loop
aam
sub
sarl
and
mov
aam
dec
jo
and
sahf
push
dec
add
cmp
hlt
insb
add
mov
mov
repnz
stos
cli
add
nop
mov
movsbl
push
sbb
xchg
in
loopne
pop
and
jg
stos
jbe
jnp
cmpsl
popf
xor
mov
ljmp
cmp
js
sub
push
mov
test
loopne
loop
adc
mov
or
notb
adc
dec
mov
adc
mov
lret
into
sbb
call
iret
xlat
sub
scas
cli
mov
loop
addr16
testl
mov
sub
mov
jge
dec
stos
test
dec
int3
mov
cmp
and
into
cmc
mov
cmpsl
push
imulb
ja
push
sbbb
sbb
outsb
es
ret
fsubp
pop
insl
and
cwtl
push
gs
insb
ret
adc
imul
push
mov
jae
fwait
mov
cmp
cltd
cmpsb
ficomps
jns
mov
dec
in
pop
jns
js
push
pop
push
dec
mov
pop
dec
lds
mov
dec
sahf
loope
rolb
sahf
mov
adcl
shrl
sub
ret
stos
lods
imul
mov
push
mov
fdivrl
idivb
test
sbb
push
in
leave
loopne
xlat
pop
dec
jno
mov
pusha
ljmp
insl
arpl
jge
sahf
test
imul
popf
adc
insl
adc
loop
sti
xchg
std
test
inc
jb
mov
dec
dec
mov
ret
cwtl
cmp
jb
jmp
and
or
mov
sbb
or
jb
daa
dec
add
add
fwait
jnp
arpl
sub
or
inc
imul
nop
lock
dec
jnp
cmp
fsts
mov
aas
dec
ss
cmpb
fildll
mov
cmp
aaa
stos
mov
jp
pop
inc
jns
jmp
arpl
pop
and
and
xchg
xchg
fwait
push
enter
aam
pusha
xor
fistpl
and
and
movb
scas
jne
testl
or
popf
inc
mov
and
and
dec
inc
pop
cmp
add
dec
mov
js
icebp
pop
leave
je
cmp
xchg
shrb
inc
test
sbb
rcrl
xchg
gs
sub
ret
jns
jge
adc
cmpsb
mov
push
ljmp
into
ljmp
inc
sarl
cmp
lahf
and
repz
or
mov
inc
cld
mov
mov
aad
call
pop
inc
pusha
dec
inc
or
int3
xor
add
jno
divb
cmp
sbb
mov
dec
dec
push
ret
aaa
sar
cmp
xor
inc
imul
jns
push
sbb
fsubrs
mov
aam
pop
mov
dec
mov
pop
in
push
das
cwtl
clc
pop
cs
xor
or
dec
or
call
lcall
dec
jmp
shlb
cmpsl
jbe
cmp
xchg
sub
or
stos
jne
pop
dec
cmp
push
outsb
and
xchg
das
gs
sbb
xchg
mov
dec
lock
xchg
push
pop
mov
adc
loop
cmp
in
sub
repz
push
enter
fwait
push
sti
mov
stos
aaa
pop
mov
jle
mov
fists
imul
inc
jne
leave
bswap
imulb
mov
shrb
jns
mov
leave
push
stos
xlat
sti
and
cmp
mov
orl
jecxz
fwait
xor
inc
push
mov
push
imul
test
das
inc
sbbl
shlb
dec
push
lods
jge
imull
sbb
or
xor
fmuls
push
sbb
xor
sbb
sahf
insl
or
ret
fwait
pop
dec
mov
cmpsb
inc
in
outsl
enter
in
imul
dec
adc
lret
imull
pop
push
adc
nop
jb
movsl
aas
mov
sub
mov
data16
movsb
aam
inc
push
dec
mov
out
rcr
sub
jge
mov
add
subb
jg
sti
xor
mov
push
divl
cli
mov
inc
mov
pop
insb
jecxz
lds
pop
rclb
xor
cmpb
push
lret
xchg
fsubrs
dec
ret
jo
arpl
push
ret
ret
enter
xlat
jne
xchg
push
stos
bound
loope
iret
or
inc
das
mull
fld
push
or
mov
insl
pop
test
mov
lret
leave
cmp
mov
or
lahf
pop
mov
push
sbb
insl
movb
sub
ljmp
or
mov
icebp
jle
in
sbb
rclb
das
lods
shlb
roll
mov
popf
lret
mov
push
negb
loopne
jnp
incb
pop
push
imul
push
pop
out
mov
cmp
cmp
shrl
mov
movsb
mov
sub
sahf
and
movsb
lret
jmp
or
out
adc
fcmovnu
divb
xchg
pop
cltd
fdivrl
outsb
xchg
xor
cwtl
xor
dec
jae
fwait
scas
rorl
and
dec
data16
sub
addb
or
inc
arpl
pop
mov
mov
pop
mov
divl
xchg
sti
notl
je
jb
stos
cmp
cltd
jne
dec
adc
das
xchg
push
jae
pop
sbb
iret
sbb
xchg
cmp
mov
in
test
push
rcl
add
iret
xor
cmp
jecxz
inc
jae
in
jns
push
stos
mov
ret
sbbl
popa
jge
lods
push
sbb
idivb
mov
fistpll
gs
lret
dec
scas
dec
inc
rolb
outsb
add
push
mov
sub
movsl
insb
push
add
and
imul
pushl
lods
pop
in
mov
push
xchg
leave
dec
inc
dec
fadds
insb
jbe
ss
inc
lea
pop
pop
or
push
pusha
adc
stc
aaa
and
push
testb
shl
lahf
aaa
jns
add
pop
sti
icebp
add
pop
pop
pop
dec
aad
ret
pop
adc
enter
mov
mov
out
cmc
arpl
and
push
in
sar
pop
aaa
jne
adc
add
inc
idivb
lods
add
pop
test
or
addr16
xor
aad
hlt
repz
adc
sbb
push
mov
out
data16
outsb
popa
testl
mov
repz
jle
xchg
hlt
fcompl
jbe
lock
sub
loopne
xchg
es
std
push
rcrb
xchg
jle
adc
popa
dec
andb
xchg
es
jb
mov
sbb
lods
dec
push
push
daa
xchg
cltd
lods
cmp
mov
push
popa
pop
inc
pop
test
pop
mov
cmpsl
mov
xchg
mov
fs
pop
popa
std
mov
and
call
sub
ja
pop
jbe
xchg
push
xchg
push
dec
inc
and
push
or
mov
popa
fstps
icebp
inc
dec
cwtl
aad
sbb
add
pop
loop
push
inc
mov
inc
sub
mov
inc
jle
scas
repz
stos
jbe
out
jns
inc
ljmp
push
out
xor
addr16
add
dec
and
xchg
subb
sub
ja
mov
cmp
jp
add
lret
xchg
popa
cwtl
inc
mov
mov
test
jno
and
adc
fcompl
sub
add
repnz
push
mov
cmp
out
insl
or
inc
rorb
mov
scas
insb
pop
xchg
faddp
and
pop
inc
mov
mov
test
js
pop
into
nop
adc
int3
pop
dec
mov
mov
nop
pop
xor
fs
das
xchg
in
dec
outsb
push
aad
call
mov
lock
xor
adcb
fildl
lahf
sbb
mov
fisttpl
jb
push
cltd
xchg
dec
xchg
data16
in
and
jae
push
mov
or
icebp
or
push
gs
shr
fwait
out
or
add
es
in
into
or
into
push
mov
ret
into
and
mov
ret
dec
icebp
and
jl
fdivl
mov
fiadds
pop
xchg
push
int
lds
addr16
into
ficoml
dec
push
cmp
mov
sub
adc
push
adc
lahf
cmp
test
leave
sbb
popa
loope
mov
xchg
sbb
adc
jmp
add
jg
cwtl
jle
pop
lods
mov
aam
test
mov
sar
ret
test
mov
sbb
jb
push
inc
aas
lods
xlat
orb
in
movsl
into
addr16
ds
mov
test
mov
push
add
lock
pop
mov
add
stos
adc
push
mov
les
lods
add
gs
out
ljmp
lock
out
es
mov
or
stos
pop
movsl
xchg
dec
cmp
aam
cld
hlt
jmp
jecxz
mov
ljmp
and
pop
xchg
mov
andl
push
jb
adc
imulb
loopne
mov
dec
nop
cmpb
lret
inc
jmp
push
icebp
subl
inc
xor
xor
mov
adc
out
out
ret
std
popa
sbb
and
lret
and
es
add
lahf
cmc
cld
lock
mov
jno
push
js
test
je
pop
mov
mov
xor
and
push
mov
insl
in
pop
jmp
sbb
xchg
xchg
and
stos
repz
sub
adc
mov
cmp
stos
ds
in
jle
inc
cmp
movsb
lods
pop
mov
jge
xchg
ss
xlat
movsl
popl
push
popa
or
cltd
in
loop
xlat
adc
ret
sub
dec
push
jb
lods
add
mov
lods
ljmp
imul
cmc
push
addb
cmp
xor
cmp
mov
xchg
mov
negb
out
aad
and
add
sarb
mov
out
ljmp
jle
fs
fisttpl
repnz
adc
out
fistl
out
sbb
xlat
bound
ret
mov
insb
mov
inc
dec
arpl
cmc
xor
ja
out
or
sar
test
rcll
jae
adc
jp
sbb
xor
shlb
pushf
xchg
mov
mov
icebp
in
aaa
adc
into
mov
rorb
xchg
add
mov
lods
cmpsl
dec
pop
pop
repz
mov
inc
ljmp
sbb
sbbl
cmp
lret
jo
sbb
fidivrl
ret
xchg
push
jb
jb
jle
xchg
lds
and
push
test
xchg
sbb
stos
xor
fnstsw
ret
je
sub
add
pop
fildl
pop
negb
cmp
dec
in
shrb
ud1
lahf
mov
pushf
pop
aas
out
xor
xchg
xchg
dec
stos
jno
sahf
jl
mov
add
xlat
test
xlat
push
fs
xchg
mov
and
add
int
and
shr
test
roll
and
sbb
cltd
jle
int
mov
or
push
mov
stc
lcall
je
or
jns
in
in
hlt
das
mov
sbb
xchg
test
in
push
pushf
mov
xchg
add
fs
inc
adc
inc
xchg
cmp
out
lods
pop
mov
mov
mov
sub
jbe
call
cmc
mov
or
add
pushf
mov
inc
aam
rcr
js
push
cs
in
in
imul
sub
sbb
js
shrb
mov
int3
int
stos
mov
cmp
dec
loop
out
data16
popf
push
mov
fisubrs
scas
es
fnop
inc
mov
jae
cli
aad
mov
dec
mov
call
xor
cltd
scas
out
jle
es
cmpsb
and
lock
xor
pushf
scas
sbb
push
pop
je
and
js
mov
loopne
or
pushf
jne
mov
lret
xchg
or
jns
sbb
aas
and
mull
fadds
lock
loopne
aad
shll
or
xchg
es
and
xchg
sub
adc
pop
jle
add
add
shl
lcall
adc
test
popw
mov
xchg
hlt
xchg
xchg
mov
lret
adc
and
pop
dec
push
int3
popa
mov
jae
stc
std
lods
xchg
push
imul
inc
ret
and
inc
jbe
xor
cli
out
push
stc
aaa
lea
data16
pop
out
and
push
jns
ss
insb
pop
push
xor
xchg
in
push
mov
mov
lret
xchg
ljmp
clc
jge
mov
sbb
pop
mov
dec
jmp
sub
ss
sub
mov
fs
adc
das
adcb
clc
jl
in
push
pop
mov
inc
outsb
jge
xor
jne
fadd
jg
loop
fsubrs
pusha
inc
adc
mov
lahf
inc
fdivrs
test
adc
andl
mov
ss
das
jne
aas
enter
dec
cld
inc
add
push
push
jb
mov
lret
push
xchg
lea
inc
shrl
cmp
enter
dec
adc
mov
sbb
xchg
loopne
dec
sub
and
pop
pop
jo
add
nop
ficoml
fscale
pop
jb
lahf
and
clc
jmp
cmp
add
adc
hlt
pop
scas
mov
das
push
pop
inc
loope
bound
xchg
hlt
rcrl
inc
aam
outsb
or
lret
mov
and
aam
xchg
push
lret
pop
mov
mov
xchg
mov
jne
inc
lahf
pop
xchg
in
mov
cmp
or
cmpsl
pop
dec
lret
mov
popa
repz
and
pop
cmp
aas
call
out
ja
hlt
sbb
cmp
and
addr16
pop
arpl
sarl
lret
stos
jmp
outsb
cmp
jecxz
add
sbb
pop
xchg
pop
shll
add
fnstcw
arpl
sbb
addl
jle
mov
outsb
sub
jns
out
enter
jecxz
sub
inc
jae
daa
pop
push
jecxz
imul
stos
mov
in
lahf
xor
sti
sbb
add
jnp
repnz
add
iret
mov
nop
add
bnd
push
xchg
inc
sahf
xor
stos
repz
insb
add
and
adc
and
fildll
cld
stos
int
pop
xor
xorb
int3
adcl
push
pop
push
stc
rclb
push
fistl
and
jmp
in
mov
jmp
mov
push
mov
insb
addr16
inc
stc
adc
test
and
mov
aam
or
scas
cmp
fsubl
ss
sti
fsubr
cmp
push
frstor
lret
mov
in
push
adc
insb
adc
int
mov
and
scas
bound
pop
or
or
and
pop
mov
pop
mov
sub
xchg
pop
inc
subl
and
sbb
js
xchg
std
dec
sti
lea
jle
push
aam
aad
insb
into
push
lcall
mov
xchg
push
ss
inc
dec
and
pop
inc
out
xchg
jne
mov
push
std
shll
jo
mov
pop
jecxz
data16
ficompl
mov
and
ficoml
in
jbe
jbe
data16
pop
bound
jge
out
jg
sub
push
push
mov
cs
imul
dec
test
fcoml
xor
ss
orl
dec
fdiv
imul
loope
jecxz
repz
jl
lret
in
cmp
dec
inc
test
mov
xchg
inc
and
push
add
push
sub
mov
mov
pushf
push
jns
lock
push
mov
shlb
sahf
ficomps
mov
xchg
push
in
sti
arpl
hlt
loope
push
dec
cmc
cmpps
popa
mov
jo
mov
outsb
xchg
aam
test
stc
sbb
xor
and
mov
adc
cltd
ss
test
cmp
faddl
int
mov
idivl
push
nop
jo
push
leave
xchg
rcl
xor
ja
sub
int3
sar
push
arpl
bound
push
les
in
test
int
adc
out
je
or
faddl
sahf
sub
scas
cmpsb
mov
lods
movsl
cmc
mov
loopne
pop
sbb
jnp
aam
leave
sbb
es
inc
movsb
cmp
test
jbe
into
pop
imul
jp
sbb
inc
and
push
enter
lods
lea
dec
imul
xor
subb
sbb
mov
mov
push
pop
sahf
arpl
push
dec
or
cwtl
scas
mov
jp
lret
push
jo
rorl
decl
mov
test
shrb
add
outsb
mov
inc
pop
mov
test
loopne
adc
or
jle
mov
xor
sbb
ret
sub
fcomi
imul
sahf
xchg
out
in
adc
lods
into
inc
adc
aaa
dec
push
adc
data16
cltd
sub
loope
mov
outsl
inc
push
in
xchg
inc
outsb
jle
jecxz
jbe
or
iret
fistl
sub
push
fmuls
or
mov
lds
push
pusha
mov
testl
movsl
add
and
test
lcall
push
and
test
push
data16
and
lea
adc
mov
and
out
mov
mov
xchg
dec
test
je
sub
daa
orl
mov
cwtl
inc
mov
ljmp
pop
aaa
xor
xchg
movsb
xchg
in
sbb
test
loop
dec
das
insl
and
icebp
addl
push
cwtl
mov
sub
stos
push
pop
xchg
cmp
rcll
and
add
lcall
sub
jbe
or
lds
pop
jge
lret
scas
push
in
sahf
shll
rep
cmpsb
lds
push
xor
pop
dec
mov
mov
or
dec
push
dec
ljmp
mov
sub
int
cmp
adc
enter
lcall
pop
pop
cmp
fiaddl
or
dec
jo
out
dec
lds
fistl
dec
or
int3
xchg
sub
gs
bound
les
outsl
mov
movsl
jnp
mov
add
cmp
dec
sub
xor
cmp
jp
leave
gs
jo
adc
movsl
inc
mov
imul
mov
es
jge
xorb
popa
orb
adc
es
stos
lock
jo
mov
cmp
idivl
iret
stos
idivl
loopne
mov
push
xchg
enter
imull
cld
add
cmp
mov
and
lea
jg
xchg
insb
loop,pt
ss
xchg
pop
adc
sahf
sarl
mov
nop
lss
iret
ljmp
icebp
addr16
repz
scas
sub
mov
dec
mov
int3
insl
xchg
enter
xor
adc
repz
icebp
fildll
mov
jge
pop
sti
push
push
push
mov
mov
dec
mov
inc
scas
insl
popf
enter
cmp
daa
mov
and
jge
out
iret
popa
sub
mov
push
stos
xchg
jle
lret
inc
shrl
mov
scas
push
xchg
mov
pop
mov
loop
cwtl
jb
add
pop
enter
aad
test
adc
inc
arpl
jb
test
ficoms
cwtl
jl
cmp
sub
dec
cmpsb
mov
sbb
xor
cmp
adc
mov
jb
inc
fiaddl
jmp
les
sbb
test
addr16
xchg
mov
vmovntpd
inc
pusha
jb
outsb
rorb
inc
aad
imul
aaa
les
fcmovu
aaa
or
sbbb
mov
pop
arpl
fsts
push
int3
sbb
sbb
or
into
scas
lahf
push
enter
dec
xchg
int
clc
pop
lcall
jb
out
sbb
es
aas
fsubs
pop
cltd
scas
mov
and
cmp
or
push
add
xchg
sub
xlat
jmp
push
int
test
mov
ret
leave
push
daa
dec
cmpsl
insb
sbb
adc
xchg
nop
mov
ja
and
mov
test
jmp
pop
inc
adc
adc
or
cmc
adc
push
xor
aaa
pop
pop
jmp
bound
jge
mov
enter
push
aas
dec
cmovno
mov
sub
leave
xchg
in
and
sbb
xor
call
mulb
inc
jns
fidivs
xor
cltd
lcall
cmp
xchg
ret
and
cmc
xor
pop
mov
negb
loope
mov
aas
or
cmp
insl
pop
mov
mov
sub
dec
aas
xchg
out
jno
test
add
adc
sbbb
in
push
sarl
adc
enter
xor
mov
pushf
leave
addb
dec
rcll
inc
jb
sbb
xor
js,pn
adc
leave
and
xor
push
sbb
pop
xchg
pop
lret
or
xor
popa
xchg
adc
stc
mov
mov
inc
dec
mov
jo
mov
dec
js
jae
xor
jge
and
cs
sahf
fsub
mov
rol
cmpl
mov
out
popf
inc
popa
insb
and
ljmp
iret
sbb
xor
je
aas
shll
inc
cld
cs
pusha
inc
inc
ja
xchg
loop
mov
sbb
cmpb
push
call
lea
mov
insl
cs
mov
out
or
rcl
cmp
negb
push
cltd
mov
aaa
cmpsl
pop
or
pop
push
push
mov
and
lret
daa
pop
mov
shrl
out
test
mov
mov
cli
inc
mov
sub
lea
inc
sti
mov
rclb
mov
rcrl
arpl
loopne
cltd
into
mull
std
adc
aad
and
jae
loope
push
fistpl
daa
into
push
lock
and
iret
inc
push
push
movsl
mov
mov
outsb
jo
iret
mov
cmp
fstpl
lahf
test
jl
xchg
adc
imul
lods
dec
sbb
and
pop
scas
pop
loope
sbb
mov
clc
cmp
jnp
sbb
mov
data16
or
fwait
lock
iret
add
std
cmc
xor
push
fwait
mov
or
fldl
cmp
outsb
out
mov
test
mov
sbb
mov
inc
ljmp
pop
push
outsb
mov
movsb
incb
inc
rorl
xchg
pushl
pop
mov
mov
sbb
xchg
push
inc
shrb
loop
fiadds
cs
pop
push
pop
xor
clc
mov
hlt
xor
adc
push
fstl
call
mov
lret
sbb
add
xchg
sar
or
loope
inc
test
and
push
add
mov
ja
mov
adc
lock
and
mov
shll
shll
push
stos
mov
xchg
out
imul
and
aad
cld
mov
xchg
gs
dec
mov
into
in
fwait
push
and
lods
fcompl
mov
jle
les
adc
ret
add
movsl
xor
mov
cli
and
xchg
pop
pop
ljmp
push
mov
movsb
mov
or
sub
aas
add
ret
dec
dec
dec
dec
jg
mov
jp
pushf
fistpll
mov
mov
lock
mov
dec
xlat
sbb
sti
adc
testb
out
adc
and
arpl
pop
arpl
mov
adc
inc
sub
enter
jns
mov
xor
inc
das
mov
sbb
or
xor
or
mov
paddq
pop
sub
hlt
cmp
das
sbb
movsb
cmp
jo
je
xchg
sti
mov
movsb
jns
roll
mov
or
test
je
pop
in
cmp
es
mov
in
mov
adc
int
mov
orl
loope
sbb
xor
int
daa
rcr
mov
cmp
xor
adcb
push
mov
fs
pop
cltd
mov
add
in
call
lcall
sbb
push
cs
jmp
ljmp
cld
test
push
add
push
mov
push
loopne
dec
lods
ds
inc
iret
aas
out
sbb
push
jecxz
or
mov
leave
sub
sbb
outsl
push
jbe
addr16
js
imul
lret
push
scas
add
pop
cmc
add
dec
orb
inc
adc
adc
pop
fdivrs
mov
ret
or
mov
sbb
fld
test
decl
mov
std
aas
pop
shll
dec
push
lcall
hlt
fsubr
aaa
cli
mov
mov
jbe
fcmovnbe
mov
cmp
sub
inc
mov
mov
outsb
jle
dec
mov
mov
xorl
lods
in
xchg
adc
test
xchg
xchg
hlt
lods
std
xchg
hlt
lret
or
jno
rolb
inc
sbb
adcb
outsl
insl
lcall
scas
mov
cs
push
cmpsb
mov
mov
jl
stc
in
adc
mov
ljmp
jne
lahf
in
xchg
xor
orb
test
pop
sub
xor
inc
inc
and
mov
sbb
and
mov
or
jge
sub
std
ret
sbbl
xor
xor
push
sub
or
cli
ret
call
and
cmpsl
std
int
ss
in
xchg
and
inc
push
inc
dec
popf
pop
adc
rcrl
inc
scas
pop
outsl
xor
cwtl
or
arpl
xchg
out
ficompl
mov
mov
add
scas
lock
mul
ficoms
ficompl
lods
bound
cmp
push
je
mov
xchg
das
push
push
sub
shlb
incb
mov
jne
inc
lret
movsl
jle
repnz
add
outsl
nop
xor
nop
mov
inc
jb
and
dec
imul
scas
int3
adc
mov
push
jns
mov
daa
add
bound
fs
dec
and
jno
sub
mov
push
sarl
add
mov
xchg
in
out
loop
mov
dec
sub
clc
movsl
dec
test
pop
outsl
loope
rol
out
adc
cmpsb
push
xlat
xchg
xor
lahf
in
scas
dec
aas
push
loope
lea
repz
imul
bound
clc
push
imul
mov
nop
adcl
dec
arpl
das
jno
and
sbb
and
repnz
dec
notb
out
ret
xchg
cmpsb
xchg
adc
inc
cmpsl
outsb
sub
ss
sub
add
push
push
sbb
cmc
enter
cmc
repz
out
ret
sarl
cmc
cmc
pop
rcll
mov
repz
mov
in
add
xor
jno
es
mov
pop
sti
orl
stos
mov
adc
ss
jg
add
ret
xlat
pop
ret
cmp
jnp
sub
push
cmp
out
sub
dec
test
sbb
pusha
aas
daa
adc
mov
testl
orb
enter
dec
cld
andb
mov
lock
or
dec
int
and
test
dec
sbb
imul
shlb
cs
imul
jp
push
clc
aad
fnsave
push
cmp
or
das
jne
pushf
xchg
scas
insl
mov
jge
add
mov
fisubl
inc
std
xor
sbb
cmp
or
mov
jecxz
push
dec
mov
sbb
cmp
inc
jg
pop
pop
pop
dec
push
xchg
setbe
fsts
bnd
jb
push
nop
mov
xchg
outsb
adc
mov
mov
inc
orl
xchg
jae
dec
call
push
mov
pop
mov
push
mov
test
stos
adc
adc
icebp
xchg
pusha
push
cmp
add
cmpsl
hlt
fwait
mov
idiv
lret
aad
cmp
sbb
xor
movsl
inc
jl
lret
mov
imull
sub
fwait
pop
inc
or
loopne
sub
cmpxchg
add
xor
testl
loope
adc
pop
add
fstl
fnstsw
shrl
mov
das
loop
or
bound
mov
xchg
jbe
test
daa
popf
add
inc
sbb
jp
jno
in
push
aam
in
out
rcrl
push
mov
mov
insl
aam
sub
jne
sub
stos
xchg
idivl
push
out
outsb
rclb
aam
ret
dec
pop
jbe
or
into
xor
push
mov
popf
pop
inc
push
xchg
cmp
xor
testl
pop
push
flds
daa
pop
out
mov
shl
scas
lcall
sub
mov
jne
lea
stos
adc
pop
adc
out
xorb
sbb
adc
insb
jp
dec
jb
lods
in
jle
mov
js
lds
das
and
mov
adcb
jmp
movsl
loopne
jne
and
out
cmp
pop
lods
aam
ror
mov
xor
sahf
cmp
and
push
add
call
imul
mov
lahf
adc
mov
push
ljmp
mov
and
push
mov
jmp
pop
inc
lods
jne
ret
cmc
mov
in
mov
fdivs
xchg
push
test
movsb
ss
test
dec
jo
ret
push
add
mov
enter
mov
pop
mov
jg
mov
sub
pop
mov
ficoms
inc
push
enter
inc
lock
mov
or
js
cmpsl
jmp
dec
iret
dec
aam
scas
int
or
out
add
mov
sub
push
mov
stos
enter
mov
adc
mov
rcr
les
mov
movl
sub
lcall
push
imul
fs
fldcw
mov
jl
dec
out
lret
or
inc
or
mov
fisubrl
out
lods
sub
push
and
stos
mov
cld
xor
xor
lcall
dec
mov
push
cmp
jge
pop
pop
adc
enter
add
sub
jg
cmpsl
subl
add
inc
insl
mov
mov
mov
sbb
bound
inc
fldenv
xlat
mov
hlt
out
es
std
push
pop
std
cmp
inc
or
jnp
mov
test
adc
pop
repnz
xchg
add
ljmp
mov
or
sub
outsb
pop
mov
pop
cwtl
enter
movd
cli
sub
stos
cmp
cmp
or
cmp
jge
xor
xor
mov
cmpsl
int3
cli
sbb
dec
cld
lods
fstl
jecxz
add
mov
pushl
mov
sar
push
sub
int
jge
nop
jmp
stc
test
test
jno
adc
repnz
xor
aam
dec
cmpsb
inc
xchg
and
lods
cli
mov
push
insb
xchg
cmp
lahf
mov
add
jno
in
icebp
sub
nop
ja
xchg
push
lret
out
sub
enter
cmpsl
scas
jae
push
or
sub
sub
xlat
sbb
mov
push
lods
dec
ja
dec
test
data16
xchg
inc
adc
dec
mov
stos
mov
jp
fs
in
or
xchg
mov
ficomps
arpl
lahf
jns
xchg
insl
comiss
call
ss
push
popf
popa
fisttpll
cmp
clc
jno
repnz
inc
notl
sti
daa
icebp
repnz
sub
dec
sbb
arpl
aaa
pop
inc
inc
je
ret
test
push
popa
mov
fistpll
imul
rorl
dec
mov
repz
inc
stos
test
cmc
adc
mov
or
loope
cltd
daa
sbb
divl
xor
dec
mov
movzbl
aam
lcall
jecxz
jp
xchg
das
ds
das
sbb
jl
test
ss
mov
filds
popa
out
inc
sbb
mov
cli
adc
jle
rol
jae
sbb
daa
stc
pop
clc
ss
push
repz
sbb
fs
es
and
mov
aaa
xchg
dec
inc
cmp
sub
lods
push
sbb
inc
rcll
xor
cs
adc
mov
js
insb
inc
pop
mov
cmpb
hlt
xchg
cli
imul
pop
pop
xor
cmc
leave
pop
dec
xor
aam
xor
cwtl
leave
pop
loop
sbb
fwait
cmp
orl
ret
jmp
sti
sub
rclb
xor
lret
mov
out
push
add
jo
xor
sti
mov
add
xor
into
fstpl
cmpsb
lea
call
lods
and
imul
notb
stc
leave
push
push
cmc
inc
mov
mov
pop
test
jmp
mov
xchg
mov
jg
loop
enter
daa
fildl
aad
cs
jb
nop
lahf
sub
cld
mov
mov
mov
pop
mov
jbe
pop
mov
and
mov
jno
inc
insb
and
leave
loop
ret
mov
inc
inc
mov
jg
mov
inc
cmp
enter
or
ret
stos
subl
jle
nop
dec
pushf
ffreep
sbb
adcl
push
int
es
hlt
mov
or
sub
sbb
lret
cli
pop
mov
pop
mov
test
cltd
not
fstpl
repz
mov
pop
str
cli
jns
scas
push
imulb
into
sbb
ret
mov
cld
mov
loop
or
push
rolb
shl
jb
mov
sub
cmp
fwait
sub
xchg
add
sti
into
push
sub
insl
lret
fs
repz
sbb
inc
orl
cmc
cwtl
xor
add
pop
jg
sub
clc
push
mov
and
or
push
dec
dec
mov
push
in
push
mov
sbb
into
ror
add
js
xchg
movsl
jb
sub
pushf
into
cmpl
adc
iret
nop
insb
insb
stos
cli
mov
insl
movsb
int3
shl
adc
test
cwtl
cmovl
mov
add
fnstenv
adc
jns
pop
aam
xchg
cmp
pop
mov
addb
int
or
jns
mov
movsl
addl
out
xor
jnp
mov
xchg
sbbl
mov
add
add
push
jle
lds
ret
mov
xchg
lahf
add
or
adc
add
stos
bnd
jmp
rcrb
fs
orl
xor
ss
inc
jb
mov
and
push
addl
ljmp
pushl
roll
lock
lcall
dec
lret
out
jae
ret
xchg
and
mov
inc
sub
int3
mov
and
jbe
cltd
dec
mov
sarl
cmp
jmp
mov
and
test
pop
movq
dec
fwait
jle
or
xchg
cmp
mov
and
hlt
xlat
and
or
rorl
add
push
inc
sub
adc
aas
aad
cmpsl
mov
and
cs
jle
into
add
inc
in
pop
jae
shll
dec
fcoms
xchg
or
push
add
test
dec
lods
mov
outsb
js
pop
cmp
test
sbb
cmp
pusha
pminub
mov
mov
scas
das
adc
mov
mov
push
jno
subl
cmc
pop
dec
imul
mov
pusha
pop
jne
js
inc
mov
dec
insb
aas
push
adc
jbe
cwtl
xchg
fwait
and
pop
mov
xchg
arpl
push
xchg
cmc
xor
add
add
xor
rclb
or
imul
lahf
xor
inc
pop
test
push
add
loop
xchg
das
test
push
mov
shl
lock
xchg
add
fcomps
pop
ljmp
ficoml
addr16
sahf
sbb
xchg
pop
mov
jle
lahf
jo
test
mov
dec
sbb
repnz
xchg
mov
scas
mov
std
mov
ja
mov
cmp
add
lret
and
stos
aaa
lcall
aam
fbstp
in
popf
je
xor
stc
js
sbb
mov
mov
iret
cmpsb
stc
sti
daa
or
jae
cmp
scas
enter
lds
stos
psllq
inc
outsb
push
cld
dec
stos
aas
imul
inc
loope
xchg
shr
pop
mov
sarb
fcoml
pop
jp
sbb
mov
stos
xchg
mov
mov
jo
leave
pop
mov
mov
frstor
loop
sar
mov
pop
mov
push
pop
dec
out
shlb
sbb
xor
roll
xor
cmp
test
int3
int3
jmp
scas
jno
repz
xor
mov
icebp
test
mov
pushf
push
adc
xchg
push
lods
fs
popa
dec
pop
jns
inc
movsb
adc
push
loop
mov
or
ret
insb
movsb
mov
pop
daa
outsb
and
in
aaa
push
cmp
imul
sbb
imul
test
mov
cmp
cmpsl
jecxz
enter
cmp
imul
mov
xchg
and
test
or
xor
dec
add
and
fxtract
sbb
int3
notb
in
call
sti
test
pop
pop
test
inc
mov
sub
jns
ret
das
shr
out
imul
fwait
insl
xchg
outsb
pop
and
leave
cmp
cmpsb
jb
into
inc
adc
xor
cmp
push
out
add
sub
in
shr
aad
loop
cld
ss
or
in
add
in
mov
mov
nop
or
loope
or
stc
stos
stos
lods
xor
arpl
cld
cmp
adc
nop
ds
jecxz
fbld
and
movsl
push
popa
jns
testb
push
push
popa
adc
in
sbb
fwait
js
push
call
mov
pop
xchg
repnz
push
jbe
test
out
inc
mov
push
add
xchg
ficompl
les
jle
pop
testb
scas
xor
mov
daa
jg
mov
daa
add
or
lea
lret
loopne
popf
loop
out
clc
jecxz
lret
ds
add
repnz
in
pop
gs
mov
test
loope
or
jb
pop
in
out
xor
cld
dec
into
jo
push
push
roll
pushf
mov
repnz
sbb
stc
fsub
push
lock
mov
ljmp
adcb
push
ss
insl
jmp
lods
mov
aaa
loopne
out
scas
movsb
daa
jge
repz
icebp
cwtl
data16
mov
xchg
fwait
fwait
ljmp
mov
shll
popa
lods
mov
repz
pop
jae
repz
out
and
cs
cld
pop
lahf
jo
into
push
repnz
xchg
push
xor
jecxz
cmp
and
sub
ds
pushf
pop
push
sbb
and
and
cmpl
xchg
dec
and
cmp
xor
cmp
sub
jnp
jg
cld
add
sub
sub
es
cmp
or
and
cmpsl
mov
addr16
aam
jmp
mov
test
and
cs
or
popa
jmp
aam
popa
xorb
sbb
pop
aad
mov
mov
xorb
enter
in
mov
mov
jecxz
ret
incl
fmuls
or
or
dec
and
jae
pusha
incl
xor
ret
jp
dec
movsl
jae
cmp
fdivl
and
test
pop
mov
and
outsl
notb
leave
or
or
mov
hlt
scas
jecxz
aaa
shl
sbb
popa
dec
inc
ss
adc
jo
cltd
es
sbb
shlb
pop
xchg
mov
adc
shlb
out
loope
mov
sbb
pop
iret
andb
rclb
jecxz
ja
outsl
push
inc
scas
lds
orl
mov
jno
mov
stc
xlat
mov
pop
fildl
pop
lret
mov
test
movsl
data16
subb
and
sbb
sbb
out
sub
sbb
jb
loopne
mov
mov
lds
movsl
mov
insb
in
daa
pop
xchg
xor
fs
lds
sbb
add
push
mov
and
push
aad
jno
mov
inc
sub
out
insl
and
jno
es
push
xchg
mov
ljmp
out
inc
mov
in
pusha
mov
aam
push
mov
aaa
mov
out
pop
clc
test
subl
lahf
mov
lods
cmp
push
mov
mov
pushf
or
or
ljmp
ljmp
push
test
in
sar
dec
loope
push
test
pop
daa
jnp
notl
jle
xor
xchg
dec
add
repz
ja
enter
cwtl
outsl
fs
fwait
lcall
cmp
mov
vpacksswb
lahf
lret
pop
or
mov
push
orb
jno
mov
call
sbb
daa
xor
in
in
pop
push
test
mov
stos
push
push
inc
das
xchg
arpl
clc
adc
iret
or
lret
mov
insl
and
leave
je
sub
int
jno
mov
xchg
lahf
lods
add
fcomps
adc
push
addr16
lret
loop
add
and
ja
xchg
imull
bound
and
in
movsl
push
das
xor
int3
dec
adc
shll
outsb
scas
mov
xor
mov
adcl
fisttps
sahf
sarb
mov
xlat
mov
mov
push
or
mov
inc
jle
bsf
mov
ja
lret
bound
xor
repz
pusha
add
and
in
cmpsb
aad
xchg
sbb
stc
xchg
lret
sub
jge
in
iret
outsb
push
cmc
fcmove
and
scas
je
in
fdivp
test
data16
lea
jbe
in
xchg
and
push
jmp
sbb
mov
in
adc
cs
jle
mov
dec
mov
jne
popf
aad
sar
mov
mov
mov
call
outsl
leave
pop
xchg
fisubrs
divb
push
sub
dec
dec
push
xchg
pop
insb
scas
and
xchg
orb
dec
popa
pop
lret
insb
inc
les
ds
imul
xchg
aaa
mov
fucompp
add
jp
push
aas
test
xchg
insl
lds
dec
mov
cmp
lods
lock
mov
jns
mov
adc
pop
movsb
mov
jecxz
xchg
xor
jae
push
fdivl
cmpsb
nop
fs
mov
cwtl
dec
insb
int3
scas
pop
incb
and
fsubl
lcall
fs
loop
int3
dec
inc
mov
rcll
data16
test
xchg
jp
ret
daa
call
cmp
adc
icebp
inc
int
int
inc
js
adc
lea
daa
push
sbb
or
fcoms
fcomps
sbb
imul
cmp
out
add
ja
fistpl
xchg
xor
iret
cwtl
loop
enter
push
pop
pop
test
cmp
call
jle
adc
faddl
sub
inc
fsts
lahf
push
mov
stos
mov
into
ss
add
xchg
into
inc
div
xor
add
inc
scas
rcl
pop
inc
pop
sbb
pop
mov
mov
mov
sbb
test
in
roll
ret
cmp
inc
insb
jne
push
push
jecxz
mov
jo
mov
mov
pop
mov
fistpll
cli
std
jbe
loope
xor
hlt
and
shlb
test
push
pop
adc
dec
adc
cmpsl
jge
push
shlb
jnp
mov
dec
mov
mov
les
or
scas
jmp
adc
dec
outsb
pusha
dec
arpl
fs
jo
shlb
inc
sub
dec
dec
push
std
adc
shld
out
mov
imul
ss
mov
xor
iret
xchg
loopne
out
xor
test
lret
das
jne
xchg
inc
ja
sbb
cmpsl
out
dec
jns
shl
lock
daa
jb
call
xchg
mov
aam
lret
jnp
sbb
stc
pop
or
jecxz
mov
dec
ja
cmp
sbbb
inc
adc
dec
jb
iret
insl
mov
cmp
mov
bound
lret
fisttps
push
out
test
push
cli
ret
or
and
popa
lret
mov
in
lods
aad
in
adcl
test
mov
outsl
jae
adc
loope
pop
jno
pop
inc
add
or
adc
mov
push
loope
sub
cltd
popf
call
and
sbb
dec
gs
push
adc
xchg
lcall
insl
movsl
fiadds
iret
aam
mov
cmc
dec
push
ds
leave
inc
cli
pop
jl
lret
sti
cmp
shr
xchg
mov
or
or
cltd
jb
mov
sub
cld
push
push
pop
repz
fcoml
inc
pop
shlb
sub
ja
icebp
mov
and
dec
push
loopne
aam
int3
add
xor
stc
scas
adc
ja
lret
mov
inc
int3
fs
scas
call
mov
or
sbb
or
out
sub
in
sub
enter
pop
outsb
push
dec
lret
add
aad
ljmp
mov
xchg
out
subb
test
inc
aad
stos
lret
inc
pop
call
dec
out
push
and
mov
js
mull
pop
or
out
and
lret
sub
test
sub
cld
jns
sti
adc
push
mov
add
orb
sbb
mov
sub
ret
adc
pop
xchg
clc
pusha
fs
scas
inc
mov
idivl
inc
sbb
shrl
pop
inc
cmp
pop
xchg
sbb
pop
lods
hlt
mov
out
cwtl
add
push
push
cmp
out
orb
mov
xchg
shlb
xor
inc
add
pop
cmc
jmp
add
or
mov
es
xchg
sbb
jge
jns
inc
lret
rolb
iret
adcb
dec
incl
cld
or
adc
pop
ret
jns
pusha
addr16
repnz
adcl
mov
adc
inc
xchg
jl
int3
sarl
adc
mov
sarb
sti
int
inc
xlat
inc
shl
mov
adc
push
repnz
mov
je
idiv
out
leave
outsb
cmc
scas
xchg
xor
mov
adc
mov
in
in
xor
sbb
je
cli
sub
fnstsw
jmp
push
icebp
mov
pop
das
movsb
shl
cmp
push
pop
pusha
sub
movsb
fsubrl
lock
in
fsubl
or
xchg
paddsb
into
mov
jmp
dec
aaa
lock
icebp
fcoms
xor
mov
adc
ljmp
ja
jg
scas
mov
movlps
xor
mov
enter
leave
pop
dec
and
cli
out
test
and
enter
or
jg
push
or
mov
or
aad
out
dec
dec
in
insb
and
and
je
add
repz
nop
cs
mov
pop
push
mov
in
in
jmp
repz
out
and
mov
sub
ret
orb
add
in
xchg
and
xchg
jo
aaa
cmpsb
test
dec
insb
lea
dec
cs
add
fnop
jecxz
gs
and
or
mov
loop
subb
in
xchg
jmp
and
out
shr
hlt
or
cli
mov
imul
int3
cmp
notb
lcall
add
sub
bound
jbe
rclb
mov
enter
mov
cmpsl
add
fimuls
dec
sub
repnz
mov
xlat
out
cwtl
jbe
mov
xor
add
inc
popa
sti
out
inc
add
dec
rcrb
push
xlat
mov
adc
repnz
jge
cmpsb
pop
int3
lcall
jmp
dec
mov
fcoms
sub
pop
mov
insl
pop
pop
popf
push
mov
dec
mov
and
push
rcrl
call
jp
out
int
ret
out
pop
xchg
adc
mov
fsubl
mov
ret
mov
das
and
rclb
add
add
xchg
jae
decl
shrb
sub
pop
js
in
push
rcll
lret
mov
cmpl
dec
or
loop
jge
fcomps
sahf
arpl
stc
jb
cli
add
and
imul
pushf
xchg
cmp
jno
repz
xor
call
fnsave
sbb
or
and
mov
sub
push
fisubs
mov
leave
push
iret
cmpsb
dec
jl
dec
xor
cmp
popa
or
int3
dec
stc
fdivrs
or
or
adc
arpl
add
inc
mov
inc
in
movsl
jno
mov
pop
scas
inc
or
push
hlt
and
pop
call
cmpsb
pop
xor
jb
mov
pushf
cs
loope
iret
mov
stos
out
push
imul
dec
cmp
push
mov
je
push
mov
les
push
xor
push
test
mov
inc
jl
jmp
jecxz
movl
xchg
aas
jp
mov
mov
xor
loope
sub
adc
xchg
mov
lret
insb
adc
in
iret
sub
imul
and
neg
mov
fidivl
and
daa
or
shll
cmpb
daa
pop
pop
cwtl
fwait
addl
ret
cmp
push
popa
lock
stc
push
sub
push
lahf
jge
pop
hlt
push
loopne
loopne
dec
mov
popf
je
dec
xchg
bound
not
xchg
stos
and
inc
cwtl
mov
xlat
mov
arpl
lret
or
fsub
pop
jmp
int
push
xchg
mov
mov
lret
lret
out
sub
es
sub
xchg
push
cmp
xor
faddp
fstpl
cmp
mov
out
cld
cwtl
jge
call
test
dec
sub
adc
popf
fbstp
inc
cmpsl
cmp
loopne
jecxz
aad
pop
add
loope
fstps
pop
mov
shl
or
jle
add
xchg
stos
scas
mov
rcrb
xchg
in
dec
xchg
jo
cmp
cwtl
xchg
push
pop
push
mov
push
cmp
loop
nop
cmpsb
pop
sbb
sub
lret
sbb
push
les
xchg
lods
ds
jne
or
mov
sarb
mov
push
imul
adc
or
lods
lret
pop
push
std
sub
rcrb
std
ss
inc
dec
fadds
rcrl
mov
imul
lds
int
imul
and
and
xor
mov
push
jo
mov
iret
fdivr
in
or
cmpl
dec
addr16
shlb
ljmp
int
scas
cmp
int3
inc
mov
cmp
pop
cmp
aas
js
mov
sahf
cmpsl
data16
mov
cmp
pop
loop
stos
pop
push
bound
fsubr
jae
lret
inc
and
repnz
in
stc
daa
repnz
aad
insl
sub
jmp
adc
fs
xor
fistps
out
jg
and
stos
shld
inc
mov
and
jge
iret
and
mov
mov
mov
push
inc
xor
lret
scas
cmp
add
add
lods
shrl
fucom
aad
shrl
cld
mov
xchg
mov
clc
scas
fisttps
aad
push
fidivl
mov
jge
imul
or
es
fsubl
popf
fisttpll
mov
insb
cmp
stc
in
aas
in
and
jb
loop
inc
mov
stos
hlt
lods
or
fdivrl
stc
inc
adc
pop
arpl
cmp
cli
xchg
imul
add
xchg
jmp
fcom
imul
mov
scas
and
repz
jno
sbb
stos
lcall
or
inc
daa
stc
lahf
aaa
mov
inc
add
das
lea
cmp
and
xchg
imul
ficomps
jl
add
in
pop
xor
addr16
daa
in
inc
mov
push
mov
xchg
jl
xchg
lds
mov
orl
inc
fidivs
adc
aas
or
push
xor
inc
add
sub
cmp
in
push
aaa
mov
mov
jmp
stos
sahf
fstl
fbld
shrb
fwait
mov
jbe
sub
and
push
lret
pusha
mov
sbb
sbb
roll
es
pusha
nop
and
pusha
cmp
mov
out
cwtl
jmp
xchg
adc
cltd
jle
gs
mov
cmc
xchg
cmp
sarl
ljmp
test
xchg
push
fimuls
std
pop
hlt
lret
in
mov
cmpsl
pushf
xor
lret
rcl
inc
mov
cmp
bound
adc
mov
lea
pop
aaa
dec
sub
pop
je
lea
aad
arpl
cmp
pop
sahf
xchg
inc
jp
mov
jbe
xchg
popf
xor
dec
stos
sub
or
stos
mov
xor
pop
xor
pusha
or
sti
lods
mov
ret
adc
in
dec
mov
aad
xor
mov
sbbb
sub
xor
mov
mov
lods
int3
pop
cmpsb
add
aaa
ds
mov
adc
ds
xchg
fldl
xor
and
xchg
ss
mov
or
lea
xchg
aam
sbb
jl
adc
loop
out
sub
or
fwait
push
inc
pop
in
and
xchg
add
nop
mov
out
and
push
idivb
rclb
push
dec
ficoml
cmp
aam
jbe
push
test
or
call
or
loop
add
mov
mov
or
ja
nop
xchg
jno
into
imul
add
dec
jecxz
dec
bound
push
std
and
mov
sub
push
mov
shl
lret
dec
mov
fs
pop
and
test
sub
cwtl
out
loope
pop
lock
adc
cmp
adc
loopne
push
loope
inc
pop
shll
and
orl
adc
push
hlt
lods
dec
mov
popf
xor
cld
cmp
in
or
test
dec
pop
mov
pushf
scas
lods
rep
pop
iret
cltd
gs
out
imulb
xchg
dec
mov
xchg
adcl
in
aas
mov
fnstcw
lret
iret
inc
enter
loope
jmp
cmc
push
jl
xlat
adc
loope
mov
leave
das
rcll
nop
sbbl
xor
sbb
repz
incl
cwtl
xlat
loope
in
pop
push
dec
and
pop
mov
pop
mov
outsb
pop
xor
mov
repnz
mov
es
xchg
mov
out
icebp
mov
jo
das
xchg
cmp
out
and
aas
sar
fstpt
shrb
sahf
imul
clc
outsl
mov
sbb
xor
push
jbe
js
cmpsb
xchg
jbe
rolb
dec
inc
mov
in
loope
insb
xchg
mov
jmp
mov
adc
cmp
xchg
jle
pop
aad
bnd
jecxz
cmpsl
push
hlt
jmp
sbb
test
cld
pop
sbb
scas
xlat
pushf
hlt
arpl
pusha
shrl
push
stc
jbe
arpl
lret
add
or
shlb
inc
lds
outsl
or
adc
xor
ss
push
push
es
pop
stc
mov
mov
cli
mov
cmp
outsb
in
rol
sbb
or
notl
lret
out
jmp
stc
push
cmp
sbb
insb
xchg
xorl
adc
aas
lods
sbb
cmp
or
inc
push
xchg
lret
and
movsb
sbb
das
push
adc
shl
in
or
mov
jns
shlb
inc
cmp
and
out
or
adc
insb
out
sbb
lret
inc
insb
xchg
cld
sar
imul
daa
stc
movsl
cmp
pushf
loop
push
xchg
pusha
mov
push
jg
stos
lds
inc
mov
push
in
fs
push
xchg
movsb
ja
aam
push
push
mov
repz
nop
sbb
push
jmp
inc
mov
add
test
pop
lock
push
bound
idivl
cmp
push
jmp
test
or
or
les
push
gs
dec
jbe
inc
xchg
add
xchg
pop
xor
testl
rorb
imulb
ficomps
mov
mov
bound
and
add
inc
jg
idivb
cmpsl
aad
std
or
ret
lods
stc
popa
mov
fxch
in
repz
xchg
jb
sarl
es
dec
pop
lret
pop
pop
add
fdivs
call
addr16
dec
fwait
insb
inc
pop
jno
add
scas
push
movsb
into
cmp
mov
mov
xor
adc
mov
and
push
imul
xor
mov
jg
inc
or
dec
in
inc
sbb
in
rcrb
int
loopne
or
aad
cltd
push
jo
imul
cs
daa
into
pop
loope
aad
pop
dec
xchg
out
pop
mov
hlt
loope
mov
movsl
lret
adc
icebp
pusha
xchg
push
xchg
into
insl
in
les
cmp
mov
add
cmp
and
cltd
sub
int
or
loope
lock
shl
or
xchg
cmp
loopne
test
and
xchg
jle
jb
mov
and
mov
outsl
cwtl
and
mov
insb
lret
lret
dec
adc
aam
push
and
cltd
pop
sbb
mov
ljmp
cmp
jnp
in
cmpsb
mov
mov
ja
pop
xor
loopne
sub
in
mov
jmp
push
lds
adc
sarl
aas
push
les
mov
in
mov
mov
and
cli
outsl
jbe
and
xor
stc
in
add
jl
cmp
cmp
or
stc
xchg
decl
cli
xchg
mov
cmpsb
hlt
in
sbb
cmpsb
sti
adc
jmp
or
and
jne
push
lcall
sbb
mov
mov
xchg
sbb
cmp
push
es
call
xor
mov
cmc
movsb
test
je
jl
xor
add
xchg
pop
inc
loop
jecxz
and
jecxz
loope
push
pushf
in
inc
addb
insl
or
add
cmp
es
mov
stos
in
fldcw
push
stc
rorb
rolb
repnz
sbb
push
or
cmp
movsl
sub
shlb
xor
adc
sbb
sti
pop
pusha
xlat
and
push
jp
sbb
call
push
fs
mov
js
cmp
pop
add
sbb
test
imul
jp
or
mov
shr
mov
push
mov
movsl
xor
adc
nop
sarb
arpl
inc
sbb
fstl
int3
popf
shll
loop
sub
int
jp
aad
jmp
cmp
or
les
les
lcall
mov
ds
out
add
xchg
pushf
loop
fistpll
push
jle
inc
pop
into
pop
clc
dec
movsl
xchg
inc
icebp
dec
cli
push
fcmovu
mov
sahf
sub
push
and
mov
mov
rcrl
and
pusha
in
jno
lahf
lcall
ss
mov
cmp
mov
insb
mov
je
push
dec
into
xor
push
fmul
imul
adc
je
mov
cmpsl
in
mov
mov
test
mov
jle
and
push
mov
neg
fsts
dec
insb
fisubrs
xor
int3
scas
adc
mov
xchg
fwait
das
cltd
cmp
js
cmpsb
pop
jo
mov
cmp
dec
sub
xchg
add
sbb
sahf
subb
in
or
mov
fnstcw
sbb
ret
add
mov
cmc
jge
arpl
cld
pop
in
sarl
lods
mov
xlat
rcr
stc
pop
sbb
push
pusha
mov
mov
push
sbb
out
cld
repz
arpl
fadds
lds
and
fnstenv
mov
and
mov
pop
add
rolb
in
pushf
add
sbbl
cltd
sbb
and
hlt
jno
push
push
stos
popl
repz
bound
fmulp
test
mov
jl
or
jg
dec
pop
add
adc
dec
jno
xchg
negb
lahf
jns
pop
jnp
dec
bound
pusha
mov
mov
imul
xor
outsl
jl
push
sbb
ficomps
mov
sbb
mov
and
in
push
xchg
jbe
mov
cmpl
movl
mov
mov
fidivl
lods
xor
sbb
decb
dec
fstpl
pop
cli
add
clc
sbb
mov
jp
mov
pop
jg
xchg
ret
lds
test
jns
cmp
xchg
mov
enter
push
cli
int3
mov
sub
xchg
pop
jae
sahf
dec
jp
test
enter
xor
outsl
ret
sahf
sbb
inc
scas
cmp
jno
fwait
pop
bound
and
imul
insl
push
loopne
sub
fmull
inc
sub
into
push
jae
aaa
ret
lods
ja
mov
jle
lods
imul
push
jno
inc
outsl
mov
mov
dec
add
aaa
test
enter
test
fwait
jbe
dec
rol
ljmp
je
roll
pushf
mov
fwait
xchg
daa
cmp
inc
sti
and
inc
push
scas
mov
imul
push
gs
mov
pop
shl
dec
cld
stos
dec
sbb
lock
mov
push
jle
xchg
xchg
daa
and
test
andl
pop
int3
adc
addr16
push
cmc
je
add
test
add
xorl
iret
jge
mov
repnz
icebp
jmp
or
jmp
mov
dec
jp
movsl
xchg
aaa
lods
pop
lds
mov
inc
push
std
mov
add
sbb
das
mov
inc
out
scas
rorb
loopne
arpl
sub
push
mov
out
iret
in
inc
divb
in
inc
lahf
loope
xchg
xor
sub
js
fldln2
jb
inc
sarl
xor
pop
mov
jge
lods
div
and
in
fcmovnu
jp
pop
stos
pop
sbb
loopne
mov
leave
data16
daa
and
mov
sbb
xor
jg
add
xor
adc
push
lea
in
push
ss
or
out
mov
sbb
das
jp
push
arpl
call
jge
ret
fwait
pop
sbb
es
mov
in
inc
std
add
adc
call
mov
idivl
push
mov
ja
sbb
cli
mov
leave
cwtl
int3
test
lods
xchg
mov
mov
xchg
call
in
and
mov
insl
cwtl
dec
adc
cwtl
adc
cmpsb
and
adc
add
mov
mov
mov
sbb
std
mov
nopl
jo
dec
mov
fadds
aad
dec
ficoms
cld
imul
mov
ja,pn
scas
scas
lods
fstp
push
dec
mov
and
or
mov
push
das
add
lea
rolb
jo
sbb
insb
icebp
loope
movsl
add
dec
inc
je
cmp
scas
or
and
pop
fistpll
jo
inc
and
mov
mov
push
int3
xchg
scas
ds
sti
push
sub
jl
pop
pop
bound
roll
mov
ret
cs
pop
sarl
roll
mov
scas
push
nop
sbb
mov
imulb
ljmp
std
and
adc
xchg
add
mov
sbb
filds
lahf
loope
test
xchg
xchg
dec
add
stos
insb
xlat
or
ss
sub
rcr
pop
lret
cli
es
insl
int3
divb
sti
sub
mov
push
pop
aas
inc
pop
xchg
test
out
daa
jp
sub
cmp
lock
fcmovne
pop
mov
jge
mov
sahf
mov
ja
outsl
call
jb
mov
cmp
sar
in
clc
mov
mov
jp
mov
inc
push
mov
std
xchg
in
sub
and
and
and
lea
cmp
inc
or
pop
push
arpl
sub
push
insl
aas
enter
into
mov
mov
push
fsts
jl
xchg
pop
dec
pop
pop
sahf
pushf
inc
inc
stos
inc
cld
stos
lods
pusha
mov
fbld
clc
pop
push
jnp
shlb
push
stos
or
mov
scas
pop
pop
push
jmp
xchg
test
jg
cmp
ss
jae
fdivrl
xchg
sbb
repz
sbb
lret
jne
lret
cmp
and
arpl
mov
jge
test
jg
sbb
sbbl
push
rolb
das
jmp
mov
pop
inc
leave
mov
push
push
xchg
insl
lods
arpl
and
xchg
ja
std
cmp
sti
jno
sub
shr
imul
inc
out
sbb
jae
pusha
sub
dec
pop
mov
int
popf
lcall
subl
sbb
dec
ja,pn
enter
lods
add
mov
lcall
rclb
je
pop
jg
addr16
out
push
andb
adc
cmp
dec
mov
fildl
sub
sti
and
pop
imull
icebp
pop
mov
xchg
stos
mov
clc
mov
pop
cmpsl
js
lcall
mov
pop
or
les
adc
aaa
mov
subb
mov
mov
push
cmp
push
loop
inc
arpl
mov
cmp
fisubrs
adc
cmp
mov
mov
xor
push
mov
jmp
call
mov
push
fidivs
sbb
test
xchg
cs
in
mov
ds
lcall
pop
xor
mov
loop
sub
repz
fucomi
ret
push
das
pop
iret
jb
rcrl
jmp
push
aad
cli
pcmpgtw
shll
mov
jle
insl
pop
aaa
test
out
inc
enter
mov
mov
or
inc
adc
or
scas
ss
mov
and
dec
jb
das
loop
xor
cmp
stos
mov
stc
lods
adc
bnd
jg
andb
ds
add
xorb
das
adc
inc
fistpll
imul
lcall
mulps
repz
mov
adc
sub
aas
inc
cli
mov
xchg
inc
or
test
and
stos
adc
mov
jno
lods
in
xchg
leave
popa
out
xchg
push
out
flds
mov
subb
call
in
insb
insl
pmaxub
enter
fcmovbe
inc
lret
fs
sub
and
jae
jmp
call
inc
jbe
pusha
sbb
mov
or
into
dec
add
rcr
mov
arpl
lods
ret
dec
dec
mov
repnz
ret
out
sbb
dec
hlt
out
jns
rol
mov
int3
inc
aaa
cmpsl
push
mov
cmpsl
jo
stc
mov
das
mov
sbb
ds
jno
pop
mov
clc
movsb
stos
mov
mov
lods
enter
mov
xchg
mov
pop
shll
ret
cwtl
mov
mov
or
sub
call
aas
jmp
in
mov
sbb
or
pop
xor
push
inc
leave
or
ja
inc
cmp
mov
inc
jle
cmp
mov
icebp
pop
loope
mul
and
movl
shlb
dec
dec
mov
shrl
jmp
outsl
mov
fwait
push
xchg
rorl
leave
fadds
and
jmp
push
mov
sub
sub
pop
mov
leave
mulb
sbb
dec
push
pusha
popa
idivl
push
or
inc
xor
or
cmpsl
scas
rolb
addr16
push
dec
cli
daa
pop
push
mov
adc
mov
sub
fsts
cmpsb
and
add
ja
pop
inc
popf
cwtl
popa
add
jno
js
push
rcr
xchg
add
pop
scas
cmp
push
mov
sub
mov
fldt
cmp
sbb
push
test
push
adc
mov
fsubrs
push
xchg
mov
inc
int
xchg
mov
outsl
mov
jg
loop
nop
in
push
cmp
jmp
mov
ja
scas
insl
dec
or
sti
aaa
mov
nop
jmp
stos
mov
and
and
xchg
outsb
or
cs
xchg
sub
pop
jl
outsb
cmpsl
mov
or
std
mov
adc
ja
mov
movsl
and
sub
out
fidivrl
les
stos
pusha
mov
xchg
sbb
test
add
inc
dec
adc
movsb
pmullw
es
out
or
addb
aam
sbb
xor
xor
sub
mov
cs
add
into
mov
rorb
insl
and
sbb
mov
push
stc
stc
hlt
lods
push
popa
mov
daa
pop
cli
cmp
xor
out
or
xchg
repz
aad
fucomp
adc
mov
int3
push
xor
movsb
push
data16
mov
mov
sbb
in
lret
push
xorb
push
jb
and
loopne
mov
rorb
xchg
xor
dec
xor
sbb
and
or
push
sarb
pop
jmp
mov
shrb
push
cld
push
in
test
sub
push
inc
xchg
inc
sbb
add
pop
in
mov
push
inc
push
push
add
icebp
es
mov
jae
aad
mov
loop
mov
mov
add
jne
mov
adc
and
inc
add
inc
cld
jmp
sbb
mov
mov
sbb
icebp
ret
jo
dec
nop
jns
inc
popa
leave
pop
popf
mov
mov
push
aas
and
and
ret
pop
popf
xor
jb
mov
xor
jb
adc
jnp
inc
int
jae
mov
andb
iret
jle
cmp
arpl
mov
xchg
ffreep
pop
and
xchg
dec
pop
fisubl
xchg
imul
jns
cmp
pop
xor
mov
mov
push
and
pop
inc
lea
add
lahf
xchg
push
dec
cmpsl
jecxz
fldcw
icebp
in
dec
insl
imul
das
flds
add
cmpsb
int
sub
inc
mov
push
out
add
sub
pushf
xchg
adc
iret
xchg
xchg
jne
rcl
push
pop
pop
pop
dec
out
fimull
inc
or
rorb
stc
addr16
in
jne
repz
jecxz
mov
jmp
jmp
sub
cwtl
sub
in
sub
loop
cmp
out
pop
scas
mov
pusha
adc
pop
imulb
ljmp
and
and
leave
xor
jb
mov
push
addb
popf
or
ljmp
aad
add
inc
pop
xchg
mov
in
xchg
mov
inc
mov
inc
fimuls
testb
icebp
insl
push
lock
sti
int
and
and
aaa
jb
cmc
pop
fcoms
mov
imul
sub
repnz
xchg
cltd
and
add
adc
mov
sbb
sbb
or
pop
jae
int
adc
jge
add
inc
mov
cmp
fistpl
ja
mov
or
decb
push
xchg
aam
les
movsl
pop
lds
lret
mov
xchg
cmp
and
in
repz
add
je
pop
cmp
inc
iret
xchg
sbb
fs
pop
movsb
and
ds
lds
mov
xor
mov
mov
in
stos
std
call
jo
fisubs
xchg
push
pop
and
dec
dec
xchg
xor
stc
sub
add
sbb
popl
jcxz
mov
cwtl
out
movsl
pop
jl
jo
sbb
add
ja
aad
daa
jge
xchg
idivl
xor
jae
scas
xor
neg
movsl
dec
xor
jl
repnz
clc
and
jg
lret
jbe
decb
jge
inc
in
jnp
mov
mov
pop
aas
dec
xor
sbb
sbb
rcrl
loopne
dec
and
push
push
insl
flds
cs
test
fbld
mov
or
int
push
xchg
cmp
or
or
pop
mov
jl
in
outsl
mov
push
xor
dec
mov
jae
insb
test
filds
dec
mov
nop
sub
ljmp
xor
mov
imul
xor
mov
xchg
xchg
mov
lcall
sbbl
data16
mov
dec
ss
mov
mov
push
xor
addr16
test
popf
mov
cmpsb
imul
push
sbb
pop
fisubl
lret
call
ljmp
cmp
and
jl
and
dec
in
movsb
aas
mov
pop
mov
xchg
xor
cmp
loopne
int3
dec
xor
std
in
fiadds
adc
xchg
jmp
pusha
and
add
push
ret
lock
mov
loope
cld
insb
jae
xchg
gs
ljmp
xchg
xchg
rcll
xchg
push
aam
lods
roll
out
lcall
cmp
popf
test
fdivrl
jp
icebp
mov
in
movsb
pop
mov
jle
mov
pop
movsl
arpl
jbe
aaa
jo
cmp
mov
clc
pop
and
pop
dec
hlt
lahf
cmp
popf
push
and
push
push
adc
repz
les
cmp
addr16
xor
inc
stos
cli
mov
dec
fidivrl
out
sub
or
fsubs
out
repz
dec
sahf
aam
stc
cld
ret
push
int3
push
cmp
sbb
arpl
int
test
movsl
push
and
xchg
sub
jmp
imul
je
add
out
mov
dec
int
jg
adc
cmp
or
mov
movsb
inc
inc
push
sbb
es
or
push
test
push
les
xor
rclb
data16
push
dec
xchg
xor
jl
jmp
sbb
inc
loope
adcl
stc
hlt
lock
inc
pop
inc
js
out
iret
mov
test
add
outsb
xchg
loopne
cli
dec
icebp
sub
adc
cmc
popa
xchg
cmp
sbb
pop
mov
daa
sub
jnp
hlt
fcompl
test
pop
adc
mov
loop
mov
adc
sub
iret
adc
cltd
mov
ds
aaa
pop
ret
out
dec
dec
push
push
mov
daa
lret
dec
fsubrl
movsb
xchg
pop
sbb
rol
inc
movsl
int3
cld
js
push
jecxz
call
sarl
lods
add
or
xor
inc
std
scas
push
stos
sbb
shll
add
mov
mov
xchg
mov
xchg
out
push
andb
pop
mov
ret
xlat
cli
xor
arpl
imul
inc
xor
loope
xchg
addr16
fwait
and
lcall
mov
mov
xorb
js
or
or
jp
adc
sbb
mov
imul
popf
aam
out
dec
div
lret
call
sub
mov
movb
sti
xor
movsl
ss
sbb
lods
push
and
cmp
mov
lods
je
fmuls
jp
ds
popa
int3
push
xchg
jmp
outsb
loope
in
jg
xchg
xchg
cmp
xchg
push
or
clc
lcall
movsl
xchg
bnd
test
push
ja
test
mov
sbb
aas
icebp
jmp
inc
cwtl
or
repz
xor
int3
pop
jbe
cli
dec
pop
cwtl
into
lahf
pop
mov
ficoms
jg
adc
and
sbb
xchg
stc
cli
push
sub
pusha
jne
stos
addl
jae
lods
pop
cli
data16
and
or
jae
pop
ds
test
sbb
lcall
sbb
mov
mov
movsl
cld
push
ficoms
hlt
test
ljmp
mov
les
psrlw
xchg
shrb
xchg
sarl
test
test
icebp
push
imul
shrb
cwtl
mov
shrb
push
xor
lcall
mov
and
cmpsb
adc
das
mov
sub
in
test
orb
pop
inc
xchg
or
add
dec
in
sbb
cli
and
fdivs
jmp
ror
outsb
or
jg
adc
push
add
cmp
add
push
shrb
dec
or
sub
mov
lea
scas
xor
sbb
xor
aas
jns
jnp
add
insb
div
ja
lret
mov
leave
dec
mov
lret
out
popf
xor
shll
fsubr
fwait
imul
in
ds
ljmp
les
test
pop
xchg
or
or
pop
mov
psrlw
mov
seto
push
mov
leave
mov
dec
or
into
pusha
or
cmpsl
lock
lcall
add
mov
add
mov
pop
pop
jns
in
insl
dec
movaps
cld
pop
push
sbb
inc
into
sbb
jbe
adc
add
mov
icebp
repz
xor
js,pn
sub
and
stos
jnp
fisubl
mov
mov
outsb
movsl
andb
mov
in
fsqrt
mov
mov
push
mov
sarl
jl
mov
add
push
divl
pop
xchg
jo
pop
mov
test
inc
pop
adc
xor
mov
add
fs
mov
jl
pop
sarl
nop
pop
outsl
cmp
xor
mov
aaa
leave
orl
add
icebp
loope
pop
xchg
or
jmp
loope
fists
dec
pop
pop
mov
ret
insb
mov
mov
mov
lods
pop
decl
add
fucomi
daa
and
pop
push
adc
dec
dec
notl
cmp
rcr
xchg
and
add
test
sbb
push
adc
fstps
mov
dec
and
mov
sbb
push
int3
pop
cmpsl
add
sarb
mov
add
pop
xchg
dec
int3
lret
rclb
stc
mov
hlt
and
add
nop
inc
or
push
les
icebp
lcall
cmc
mov
ret
outsl
pmovmskb
scas
and
and
xor
pop
jne
int3
loope
or
or
sub
fwait
inc
or
sbb
sbb
sahf
xchg
push
out
sub
imul
out
mov
sarl
adc
ret
add
shlb
and
rorl
stc
mov
mov
arpl
scas
ds
add
sub
xlat
fldcw
dec
outsl
movsl
cmpsl
lahf
dec
xchg
shl
adc
mov
sub
fxch
std
xchg
popa
adc
cmpsb
rolb
sub
movsl
dec
adc
inc
push
lea
sbb
jp
out
mov
push
pop
mov
lea
rorl
jmp
enter
mov
xchg
lea
xor
jno
sub
push
stos
jb
clc
test
test
cld
sbb
movb
int
fdivr
sub
sbb
jge
je
lods
inc
clc
or
sub
int3
pushl
loop
add
push
mov
jae
or
call
adc
sbb
mov
fmull
int3
je
dec
sbb
add
idivb
push
subl
enter
sbb
adc
jmp
jae
pop
mov
pop
cmp
pop
sub
lret
ret
sbb
mov
clc
xor
mov
pusha
testl
dec
xor
push
xor
into
stc
sub
sbb
sti
test
xchg
xor
ret
cmpb
mov
and
sub
pop
mov
enter
fwait
adc
push
pop
jne
jo
jbe
sbb
jle
lret
dec
cmp
mov
lods
pop
jae
in
mov
mov
jp
out
pop
cmp
xor
adc
imulb
in
dec
mov
xor
xchg
sbb
and
lods
sbb
leave
dec
dec
rcl
lret
pop
mov
push
push
jle
andb
cmpsb
ds
sub
mov
jo
int3
adc
je
lret
add
out
inc
dec
sbb
outsb
pop
or
add
lcall
push
push
fiaddl
xor
pushf
outsb
sahf
out
mov
push
xor
ficoms
sarb
mov
repnz
add
jo
push
std
and
out
push
lds
aaa
in
data16
call
xchg
pop
push
cmp
scas
sub
in
in
inc
xchg
push
push
push
faddp
jecxz
pop
or
cmp
enter
lcall
and
daa
xor
add
adc
and
fldt
push
pusha
inc
xor
mov
mov
ljmp
sbbl
orl
or
push
jns
pop
mov
mov
gs
rorb
pop
dec
scas
xor
insl
dec
sub
andb
adc
fbld
testb
movntps
mov
push
shrl
punpckhwd
sbb
push
jae
rol
pop
sti
sbb
repz
lea
dec
inc
xchg
or
mov
jmp
hlt
jmp
leave
mul
mov
dec
lds
adc
shlb
popf
scas
xor
hlt
stos
ret
inc
mov
lcall
xlat
mov
into
pushf
hlt
mov
xor
jp
mov
mov
pop
sbb
daa
fcmovnbe
push
pop
pushf
dec
cmp
je
push
xchg
aaa
loop
xchg
ja
mov
out
rcrb
push
push
cmp
xchg
movsl
mov
test
push
adc
xor
pop
mov
popa
cltd
mov
adc
popf
jmp
fnstenv
jae
imul
inc
rcrl
xchg
jb
loop
addr16
clc
rcrb
test
out
lods
inc
test
mov
sbb
cmp
movsb
lret
sbb
mov
mov
pop
xchg
inc
loop
pusha
dec
or
push
leave
or
popl
or
cmp
jo
pop
and
pusha
fnstsw
xor
ja
or
mov
add
mov
movsb
adc
jle
cs
insb
jmp
aas
scas
inc
cs
mov
icebp
scas
int3
sub
sbb
cmp
repnz
xchg
divb
and
shr
ret
sbb
xor
bswap
or
jae
cld
mov
lods
and
daa
mov
cvtps2pi
xlat
fdivs
push
sub
out
mov
out
mov
sbb
es
adc
in
jae
cmp
push
xlat
pop
inc
nop
int3
mov
loopne
lods
popf
out
mov
xchg
xor
or
shlb
push
cmp
andb
cmp
jbe
sbb
or
jb
pop
sarb
xchg
xchg
push
mov
pop
popf
inc
jae
adc
je
sbb
popa
mov
cmpsl
call
cld
jge
xor
pop
mov
and
mov
dec
out
dec
dec
lret
shll
fldenv
mov
jo
sbb
xor
lret
pop
popa
cltd
out
andb
xor
outsb
pushl
fidivrl
out
cli
mov
mov
dec
cmp
nop
cmpsl
push
mov
lahf
rcrb
adc
pop
idiv
fwait
aaa
ljmp
leave
repz
rcrl
mov
shr
mov
xor
push
icebp
stos
jg
sub
in
loope
cmp
daa
xchg
test
lret
xchg
push
mov
mov
jmp
push
cmp
adc
mov
shlb
mov
pushf
pop
call
jge
repz
shll
aas
adc
movsl
mov
mov
and
sbb
stc
mov
adc
mov
mov
mov
sti
xor
in
mov
xlat
and
lret
out
sbb
and
xchg
adcb
outsb
add
nop
sub
loop
ret
xor
dec
mov
ja
mov
maskmovq
testl
jae
add
cmp
sub
add
arpl
loopne
sbb
adc
ja
sbb
addr16
xchg
mov
pop
cwtl
sbb
xlat
add
xchg
mov
inc
or
andl
cmp
bound
stos
std
and
call
fcompl
inc
or
test
xchg
in
mov
push
and
call
int3
adc
sbb
outsb
movsb
pop
mov
aad
in
push
faddl
add
pop
xorl
aam
mov
rol
test
adc
insl
dec
add
push
pushf
mov
xchg
ja
insb
cwtl
sahf
jle
stos
sbb
xchg
addl
daa
dec
in
add
sub
imul
mov
test
adc
pop
frstor
or
sbb
hlt
rcrl
bound
sbb
sahf
push
ja
cmp
cmp
cmp
add
mov
mov
pusha
mov
test
adc
cld
xchg
xchg
push
popf
fisttpl
dec
pop
fidivs
xor
cmpsl
pop
pop
xchg
les
push
lock
jns
inc
repz
inc
sbb
mov
fdivp
adcb
cmp
pop
and
and
xchg
fisttpl
addr16
add
popf
out
out
addw
pop
pop
sti
loopne
dec
fdivr
mov
fwait
lcall
inc
jne
test
out
fistpll
push
xor
sbb
xlat
dec
pop
mov
and
cmp
inc
add
push
loope
lods
lods
pop
sarl
js
push
push
popf
inc
mov
les
out
mov
cmp
push
pop
cmp
gs
jecxz
nop
rcrl
inc
mov
mov
loopne
sub
mov
mov
push
adc
fwait
cs
and
and
insl
fists
cld
divb
pop
ficomps
pop
xchg
rorb
popf
lret
sub
add
sbb
xor
aaa
filds
mov
leave
pop
mov
mov
movsl
inc
sbb
cmp
push
or
mov
das
fists
inc
hlt
aam
lret
decl
popa
push
dec
xor
and
push
popa
jns
and
pop
ss
mov
dec
test
sti
mov
mov
mov
adc
movsb
push
icebp
add
bound
inc
jno
jne,pt
sahf
and
or
adc
and
fidivl
push
cmp
int3
fwait
icebp
pop
mov
mov
or
lds
sub
xchg
pop
fs
and
sar
cmp
and
jl
mov
xchg
pop
sbb
add
adc
sub
and
std
adc
xor
lds
rcrl
out
pop
out
rclb
out
xchg
jns
push
daa
push
mov
mov
sub
xor
cmp
in
scas
aad
movsb
xlat
pusha
insl
xchg
orb
in
jmp
xchg
imul
push
repz
cmp
iret
dec
mov
mov
dec
stc
ds
rclb
adc
push
add
dec
mov
adc
dec
jl
mov
mov
mov
les
xlat
adc
fdivs
sahf
hlt
cmp
movsb
xor
jmp
sub
sub
mov
testb
pop
ret
cmp
shl
ss
sti
or
and
dec
bound
xchg
stos
aas
mov
or
jb
pop
and
xchg
push
out
or
mov
repz
xchg
jp
data16
rclb
cwtl
lds
xor
xchg
arpl
sbb
pushf
fldt
xor
and
mov
mov
inc
cmc
jne
mov
pushf
jle
scas
cmpsb
jno
out
shl
sub
push
or
adc
sarb
jecxz
add
inc
sub
sbb
ret
bound
es
push
sbb
cld
add
divb
mov
add
je
mov
mov
and
adc
xchg
inc
sbb
stos
push
imul
sbb
pop
scas
cmp
sub
loope,pt
push
daa
fnstenv
push
xor
js
out
xor
mov
dec
iret
out
arpl
cmpsl
adc
mov
and
fimull
leave
xor
push
cmp
xor
adc
adc
out
pushf
inc
push
js
dec
fwait
mov
adcl
or
sbb
cmp
out
pushf
adc
ret
and
xchg
and
data16
jecxz
xrelease
or
sub
dec
pop
fldt
popf
std
push
decl
jbe
mov
dec
and
mov
inc
jns
stc
add
fistps
mov
pop
push
ds
pusha
xchg
pop
hlt
stc
lcall
ljmp
lods
stos
add
push
out
push
mov
sub
nop
jae
push
sbb
fdivrl
jecxz
addr16
mov
push
and
ds
xor
jbe
fadds
sbb
jnp
test
dec
pusha
lds
pop
fldl
or
mov
xchg
mov
xchg
in
lods
icebp
hlt
adc
scas
cld
out
jnp
scas
push
mov
sti
add
aas
je
mov
ds
insl
out
out
xor
es
rorl
or
addr16
lret
outsl
cmp
or
jbe
mov
cmp
movsl
ret
js
ficomps
and
xchg
lret
mov
mov
pop
in
xchg
xor
adc
ret
mov
lods
sub
bound
in
mov
popf
cmp
jbe
hlt
jl
test
out
xor
jno
ret
ret
lcall
fbstp
pop
jecxz
xor
adc
dec
loope
cli
mov
out
pop
sub
mov
mov
push
sbb
pop
mov
imul
push
test
data16
jb
aaa
ss
sbb
inc
cmp
hlt
movsb
lret
fisubrs
jl
clc
add
dec
enter
popa
iret
mov
insl
in
dec
mov
popf
es
mov
jb
pop
xor
mov
dec
scas
and
jmp
adc
adc
and
subl
aad
addr16
jns
jae
mov
pop
jns
inc
aam
mov
mov
and
adc
inc
inc
in
adcb
jns
ja
mov
cmpsl
mov
stos
ret
xor
int3
pop
push
aaa
pop
imull
cmp
xchg
dec
and
out
push
mov
add
popa
loope
nop
mov
push
stos
or
inc
mov
add
add
xor
repz
mov
popl
loope
stc
xchg
jne
mov
sbb
mov
imull
ror
mov
out
das
sahf
mov
cli
testl
outsl
push
or
mov
xor
xchg
dec
popa
mov
mov
sub
sbb
cmp
out
cmp
xor
and
inc
jl
push
or
push
mov
mov
dec
dec
xlat
movsl
mov
pop
cmpsb
mov
int
jns
ret
inc
movsb
test
jecxz
and
or
cmp
enter
jge
dec
or
dec
divl
sub
aaa
in
add
cmpsl
mov
sarl
cmp
or
outsl
daa
clc
mov
mov
and
insl
stos
stc
or
adc
sub
out
cli
xchg
dec
jns
mov
push
scas
xlat
and
js
or
int
inc
pop
in
fsubl
psubw
mov
or
test
inc
lods
imulb
lret
xchg
xor
and
jge
ret
add
adc
sub
mov
dec
sub
fs
mov
mov
fisubs
ret
mov
pop
lods
fbstp
outsl
repz
movsb
push
scas
xor
stos
bound
xor
mov
mov
jecxz
cmp
fxch
xor
jo
fucomp
or
inc
sbb
mov
hlt
sti
jl
push
clc
jb
sbb
sub
xchg
pop
movsb
dec
ljmp
lock
cmp
scas
xchg
inc
loope
imul
popa
dec
fiaddl
jl
mov
scas
call
and
daa
sbb
inc
cmc
xchg
imull
mov
mov
mov
jbe
mov
shlb
dec
jge
mov
jmp
jnp
stos
xchg
dec
dec
dec
aaa
hlt
rolb
push
outsl
mov
and
mov
or
ds
in
stos
pusha
aad
pop
lahf
jecxz
addr16
sbb
lea
int3
mov
mov
push
jp
daa
movsl
push
adc
in
into
dec
jecxz
xchg
jl
fstps
std
jnp
push
mov
jmp
xchg
lds
mov
out
mov
adc
adc
jecxz
movsl
mov
idiv
fmull
jo
hlt
jns
jo
es
movb
jne
inc
xchg
subb
cmp
add
mov
cli
or
mov
gs
push
setne
fdivrl
or
push
sahf
adc
cmp
aas
dec
pop
and
call
mov
imul
adc
scas
orb
in
movsl
ret
add
jns
sti
jo
andl
and
bound
xlat
repnz
lret
push
dec
adc
cmp
ret
lahf
sbb
dec
adc
fcoms
out
shll
out
dec
cmp
xor
mov
cld
movsb
push
pop
in
jg
push
out
repnz
push
in
out
insb
inc
sbb
inc
in
jecxz
out
jo
dec
andl
rclb
out
xor
mov
imul
xadd
lock
inc
mov
pop
aad
repz
push
fnstsw
jecxz
dec
adc
mov
fdivr
cltd
adc
test
cwtl
or
aas
mov
pop
inc
scas
adc
jecxz
xor
push
outsl
jle
push
pop
xor
xor
add
cmp
aad
mov
xchg
cld
shrl
orl
in
lahf
sbb
outsb
into
popa
lods
sub
xchg
jne
test
push
or
mov
push
and
shrb
aaa
jbe
mov
pop
in
push
mov
push
in
std
push
orb
imul
fs
push
shrl
mov
xchg
mov
pusha
xchg
sarb
fwait
inc
sub
or
pop
loopne
jno
xchg
mov
cmp
jl
sub
fisubl
push
scas
lock
sub
mov
xor
jp
push
push
pop
je
popa
cmp
xor
adc
mov
and
cmp
test
das
aam
int3
add
ds
insb
out
lret
loopne
inc
or
aad
sbb
xorb
addr16
or
mov
sub
and
inc
test
jl
push
int
js
mov
mov
rol
xchg
pop
sti
cli
sbb
mov
xorl
fimuls
xchg
scas
fwait
dec
or
sub
ret
jl
jne
sub
pop
dec
mov
xor
mov
mov
rcr
xchg
pop
sub
xchg
cmc
xchg
mov
out
jbe
jne
mov
test
outsb
ret
and
adc
ficoms
pop
insl
add
notb
test
pushf
outsb
add
iret
ss
test
sub
std
adc
sbb
inc
leave
inc
cld
xlat
fcmovnbe
roll
mov
into
jne
pop
ret
repnz
xchg
out
testl
jo
stos
mov
mov
xchg
lret
xchg
int
pushf
jecxz
out
divb
daa
pop
das
sarb
call
or
lods
mulb
shll
lahf
cwtl
xor
cwtl
jne
mov
imul
jbe
push
pop
nop
shl
sti
jp
sbb
repnz
fsubl
mov
mov
inc
cmc
push
in
jg
insl
call
push
testl
shl
shll
add
and
lods
mov
out
dec
jbe
mov
movsl
pop
jl
jge
push
push
insl
add
add
sbb
push
addl
in
mov
bound
push
mov
test
arpl
scas
gs
enter
arpl
or
negb
and
push
inc
test
sub
out
push
dec
iret
call
out
jno
add
fidivl
mov
or
push
xchg
jl
mov
ret
mov
ficompl
dec
inc
push
push
mull
add
popl
das
movsb
int3
xchg
lock
pop
sub
popa
or
push
cmp
cmp
inc
dec
lds
adc
lahf
dec
inc
pop
and
add
les
sahf
or
push
loope
jno
inc
jge
sbb
sbb
inc
pushf
or
sbb
or
rorl
ret
int
mov
add
lret
or
xchg
daa
adc
cs
loop
sti
lock
push
cmp
stos
imul
out
xchg
jno
or
pop
jmp
mov
sub
lds
test
cli
inc
mov
outsb
sub
add
cmp
fmuls
pop
js
xor
popa
shll
inc
lcall
cmpl
xchg
and
imul
js
gs
jo
loope
inc
bound
aaa
jmp
xchg
sbb
ficompl
pop
jge
jnp
aas
in
lods
pop
insb
divl
mov
cmpb
inc
lea
ret
jne
into
fidivrs
inc
mov
test
ret
mov
pop
cmp
punpckhwd
add
cmpsb
ret
js
push
ja
add
out
xchg
xor
sub
push
adc
xchg
sub
in
xor
and
and
ljmp
push
pop
addb
push
inc
lahf
xchg
or
std
lods
adc
dec
in
scas
xlat
sti
dec
mov
jo
and
pushf
mov
adc
das
fmull
jecxz
in
insb
add
sbb
xchg
leave
rcrb
jnp
idivl
mov
cmp
mov
jae
in
pusha
or
cmp
sub
push
dec
icebp
mov
sub
mov
cmpsl
les
ljmp
lea
mov
sub
icebp
or
int3
lds
mull
xchg
push
xor
js
ja
dec
xchg
mul
bound
adc
stc
mov
rcrl
xchg
xchg
and
aad
mov
mov
inc
lea
pop
push
cmp
pop
cmp
loope
mov
mov
mov
sbb
adc
pop
popf
mov
mov
cltd
outsb
ja
stos
pop
testl
repnz
jle
xchg
bound
sub
bound
xchg
out
jmp
je
mov
ss
xor
stc
stc
ret
ljmp
pop
mov
lods
nop
push
mov
cmp
and
jmp
ds
cli
or
cli
pop
add
jmp
addr16
push
inc
popf
lea
dec
pop
pusha
mov
outsl
imul
add
add
fstps
push
or
jle
mov
adc
sbb
jnp
inc
ja
pop
repz
jmp
or
mov
jnp
imulb
and
ret
dec
in
mul
mov
lret
mov
cld
out
push
mov
int
stos
outsl
mov
inc
cld
mov
mov
sub
jmp
pop
mov
cmp
icebp
aam
jne
and
inc
insb
adc
test
stos
insb
pushf
add
mov
cmp
imul
add
sbb
test
push
pusha
lea
xlat
sub
mov
insb
cmp
aas
inc
mov
cmp
or
dec
sub
pop
sbb
push
jge
sahf
inc
and
aam
inc
hlt
fmull
dec
xlat
xchg
sub
nop
adc
shrl
loop
fcomi
cmc
push
movups
mov
sbb
loope
out
popf
fwait
adc
pop
mov
push
loop
js
cltd
shll
pop
into
or
out
mov
and
add
mov
daa
mov
adc
push
in
pop
jae
mov
aad
xor
cmp
cmp
pop
not
sbb
lahf
adc
cmc
xor
push
adc
sub
and
ret
mov
mov
sbb
add
das
in
int3
jecxz
or
mov
xchg
mov
jge
and
out
hlt
jno
out
pop
pop
inc
sbb
inc
add
xchg
hlt
cltd
mov
stos
lret
pop
add
sub
xor
mov
dec
xchg
cmpsb
or
or
sbb
push
lods
jmp
add
sbb
in
sub
and
inc
fidivrs
sub
cmpl
enter
mov
mov
jle
xchg
add
cmp
xchg
jne
sbb
hlt
outsl
jns
inc
mov
cmp
mov
loop
imul
std
loop
or
jb
pop
popf
pop
or
xor
lret
test
repnz
dec
jbe
and
addr16
push
mov
push
jle
rcll
push
scas
into
addl
lret
jae
adc
xchg
jecxz
pop
mov
fs
xchg
icebp
jne
xchg
pop
andl
sub
popf
add
lods
or
xchg
jmp
scas
fisubrl
rcr
imul
pop
add
je
xchg
push
jae
xchg
sub
je
cltd
stos
push
xchg
inc
scas
push
mov
outsl
insl
sub
je
aam
jmp
movl
jl
insb
mov
adc
jp
data16
ds
dec
push
into
hlt
xor
xor
or
gs
ret
das
xchg
mov
mov
loope
addl
aas
ljmp
mov
add
fidivrl
leave
ja
adcl
jmp
sub
cmp
inc
enter
and
and
and
dec
jae
cltd
lret
jno
jnp
std
sbb
xchg
movzwl
lahf
imul
adc
lock
lods
or
mov
or
aaa
jmp
rorl
movl
out
jae
sti
inc
xor
sbb
or
test
xlat
int3
or
imul
mov
repz
sub
ss
mov
adc
rorb
xlat
ss
call
filds
inc
aad
push
cmp
push
ljmp
dec
add
aad
xchg
loopne
ds
scas
mov
mov
and
cmp
int3
mov
push
mov
icebp
sub
orb
cwtl
mov
pop
adc
imulb
mov
jae
ljmp
push
test
or
pop
mov
mov
stc
iret
dec
dec
push
xchg
jae
push
fwait
dec
jmp
imul
jns
fs
mov
dec
fmuls
jp
lods
jne
stos
imul
mov
arpl
mov
jmp
nop
cmp
sbb
insl
or
jne
lea
test
rcll
adc
inc
sbb
leave
aas
pop
out
lods
cmp
cmp
clc
bound
xchg
enter
movsb
stos
xchg
in
std
ljmp
incb
stos
fsub
pop
repz
fwait
xor
mov
sahf
xchg
jns,pn
sarl
icebp
in
inc
cltd
scas
pop
stos
bound
push
adc
incl
sahf
add
fcoml
insl
pop
inc
pop
and
dec
aam
js
iret
sub
sub
inc
push
psubsw
add
inc
xor
jb
test
cmpsl
pop
jp
cmp
loope
jns
push
xchg
popa
scas
cmc
push
imul
nop
inc
in
ret
pusha
mov
sub
idivl
push
inc
dec
test
out
cmpsl
shl
pushf
ret
sbb
jbe
push
and
pop
xchg
pop
loope
jo
out
cmp
or
dec
mov
jge
adc
adcb
mov
xor
cmpsl
je
out
dec
xchg
adc
dec
loopne
sarb
cmp
filds
loopne
mov
xor
daa
inc
xor
sbb
out
subl
xchg
cmp
inc
jl
leave
fsubrl
pop
mov
mov
xor
mov
ds
dec
stc
sub
push
rcrb
test
in
je
pop
lods
fwait
mov
test
push
push
xor
and
xchg
cmpsl
cmp
arpl
fidivrl
data16
lds
clc
sbb
ret
popa
pop
leave
sbb
jb
iret
sahf
mov
xchg
mov
aas
fnstenv
sub
test
jo
cmp
sbb
add
cmp
sbb
mov
daa
out
sub
mov
jp
add
lods
push
adc
xchg
shl
mov
into
stos
rcll
dec
jle
cmp
scas
test
sbb
add
xor
out
test
pop
pop
inc
jl
adc
and
test
test
pop
lret
in
ss
ds
xor
cmp
mov
xchg
mov
repz
insb
and
fisubl
add
xchg
lds
mov
or
or
dec
or
movsb
inc
shrb
xchg
inc
out
xorl
imul
loopne
inc
adc
sub
jl
mov
or
mov
aaa
lret
daa
call
or
mov
ds
ja
jge
ficomps
ret
or
out
or
xchg
addr16
outsb
jns
xchg
push
int3
stos
cs
scas
in
mov
arpl
mov
cmpsb
stos
dec
pop
xorb
aad
fs
ja
aad
push
in
push
out
sub
xchg
push
pop
scas
jne
cmpb
mov
sub
cmp
sub
lds
mov
dec
cmp
nop
push
and
xchg
xchg
push
xchg
cmp
js
mov
aaa
push
or
out
popf
lcall
xchg
addl
mov
jne
addr16
sar
pop
adc
cs
lret
xchg
in
mov
faddl
pop
mov
jg
push
push
sbb
adc
fidivs
mov
mov
dec
ret
inc
pop
das
sbb
and
rclb
jno
rcrb
mov
mov
cmpsb
pusha
in
fdivrp
push
sub
jo
mov
jmp
out
data16
shl
xchg
xchg
divb
jns
cwtl
adc
shl
push
movsb
test
ret
int3
iret
sub
sbb
mov
int3
rorb
inc
lods
out
clc
xchg
jle
add
mov
insb
cmp
jnp
pop
xchg
aas
dec
scas
push
mov
loop
imul
push
dec
lahf
mov
push
das
lret
ret
pusha
test
jmp
loop
icebp
fnstenv
fwait
call
pop
arpl
sbb
mov
cmpsb
adc
std
in
jno
repnz
and
adc
dec
int3
cli
sarl
or
mov
push
mov
lret
cmpsb
jae
inc
lods
jg
or
jae
addl
fistpl
adc
mov
lahf
rcl
fldenv
sarb
mov
inc
xor
cmpsl
loopne
decl
pushf
aaa
jo
mov
push
ret
push
shlb
push
aaa
sbb
int3
jmp
and
jle
cld
xor
add
jmp
dec
cmc
stc
and
mov
xchg
test
pop
inc
ret
mov
xor
ret
divl
push
sbb
mov
lret
sbb
fdivs
mov
xor
mulb
jo
cltd
loop
cmp
out
incb
cmp
dec
jno
outsb
add
pop
addr16
fists
movsl
popf
dec
jmp
jp
jp
sub
js
dec
inc
or
push
repz
aad
pop
xchg
sbb
shlb
push
ja
mov
add
andl
xchg
jnp
push
sub
jo
xor
filds
inc
ffreep
lahf
fiadds
mov
cmpsl
jmp
add
leave
mov
jge
sub
xchg
sub
or
pop
push
sub
lods
jno
inc
into
scas
inc
int
mov
xlat
pop
xor
es
negb
jl
outsb
sbb
jl
push
js
push
add
bnd
push
or
rolb
or
mov
leave
xchg
outsl
mov
push
jb
mov
xor
scas
jp
cmpsl
gs
sbb
mov
push
xchg
jmp
lods
cmp
sub
idivl
cs
cltd
jbe
adc
pop
out
fstl
adc
notb
insb
xchg
jp
and
jae
cmpsl
icebp
cmp
loop
mov
mov
mov
lock
stos
mov
movsl
mov
arpl
loop
stos
or
movsl
clc
mov
ss
xchg
mov
adc
aad
jecxz
mov
cmp
dec
xchg
lds
xor
fwait
dec
sub
outsb
pop
shlb
mov
push
loope
jns
dec
mov
adc
jns
xor
into
push
jmp
rclb
dec
jl
xor
mov
dec
dec
mov
mov
cmp
lcall
lea
out
mov
push
and
sarl
and
mov
mov
shl
xchg
pop
in
mov
cs
ds
mov
lret
in
daa
fidivl
mov
iret
adc
mul
dec
flds
insb
aaa
lahf
push
in
xchg
lahf
or
or
pop
movsb
lahf
data16
aas
pop
xchg
mov
test
leave
scas
je
sub
and
add
js
adc
fisubrl
jae
test
fnstcw
sbb
lock
ficoms
ja
mov
cmp
sbb
aam
cli
icebp
pop
fwait
adc
movsb
jp
inc
rclb
xchg
into
test
sbb
jl
in
movsb
sti
pop
das
cmp
scas
fcompl
pop
std
bswap
cmpsb
cmp
inc
xchg
push
mov
jecxz
ds
mov
gs
gs
cltd
bound
and
lcall
cmc
cmp
mov
jb
stos
ds
push
aad
lds
jl
aam
add
lock
push
push
shrb
stos
adc
pop
pop
or
dec
sbb
dec
pop
loop
add
xchg
in
dec
in
mov
out
or
inc
cwtl
negl
pop
jns
or
mov
jge
hlt
in
jmp
cld
and
ficoml
pop
dec
test
cmpsb
sbb
inc
cmp
sub
outsb
movsl
call
push
mov
icebp
scas
pusha
lock
outsb
cmp
xchg
test
push
insb
das
cmp
outsb
mov
mov
mov
jns
add
sbb
mov
scas
out
daa
pop
and
loop
sbb
shr
movsl
pop
jae
fsin
mov
inc
push
int
jbe
fwait
cwtl
dec
inc
and
outsl
rolb
xchg
stc
int
mov
mov
fidivs
in
mov
inc
or
shl
adc
das
jno
gs
mov
pop
inc
sbb
mov
testl
jle
insb
bound
lcall
xchg
mov
cltd
xchg
sbb
jg
std
ss
xchg
sbb
pop
cltd
xchg
notb
in
popf
lahf
or
cmp
lret
xor
dec
loopne
loope
mov
jl
pop
xor
mov
fisubs
in
ja
addr16
sbb
jnp
pop
clc
aas
movsl
pop
test
add
jae
mov
inc
call
xor
sti
loopne
jmp
jnp
enter
jo
arpl
fisubrs
shlb
insb
addr16
jg
andps
lahf
mov
cmp
and
enter
sub
lods
or
add
push
mov
sahf
xlat
cmc
inc
stos
xchg
inc
inc
inc
addr16
or
orb
lock
stc
pop
push
scas
aad
xor
das
sub
std
dec
inc
pop
jne
repnz
mov
jb
jb
sbb
fildl
ljmp
ficompl
xchg
js
mov
icebp
xor
xchg
jle
roll
ljmp
pop
in
fimuls
enter
ljmp
shll
fdiv
ficomps
push
enter
fdivl
adc
jg
cmpsb
xor
mov
repz
in
sar
lcall
push
sub
sbbb
mov
adc
lock
iret
mov
dec
xchg
adc
sbb
sub
mov
jp
mov
dec
dec
inc
mov
das
cmpsb
jg
sbb
pop
addl
imul
cs
std
ret
push
int3
mov
dec
call
pop
test
mov
xchg
mov
neg
jge
jmp
loopne
adc
adc
adc
testl
mov
fwait
xchg
jecxz
mov
xchg
sahf
push
add
in
pop
dec
into
mov
cmc
dec
cwtl
pop
jno
pop
dec
in
scas
add
arpl
int
popl
and
jmp
sbb
adc
or
push
xor
aam
ss
push
mov
int
nop
lods
pop
and
xchg
inc
mov
mov
push
scas
decl
xchg
dec
dec
xchg
mov
pop
inc
mov
pop
xor
or
xchg
leave
dec
jp
ret
dec
add
icebp
loop
and
mov
lds
pop
lea
mov
in
out
std
sbb
xchg
and
js
mov
lret
mov
andl
jb
ret
jbe
lcall
mov
sahf
iret
fxch
push
icebp
leave
xor
sub
pop
inc
out
cmp
xor
cmpsb
sub
cmp
pushl
inc
dec
iret
jg
lods
xor
cwtl
jl
adc
in
sub
imul
sahf
test
repnz
mov
iret
stos
mov
mov
aaa
mov
jns
loope
mov
rol
jbe
in
push
mov
push
pop
dec
subb
jmp
mov
cmp
xor
cwtl
mov
xor
ret
out
mov
mov
dec
cli
inc
lock
xchg
hlt
cmp
inc
cmp
arpl
mov
iret
pop
inc
sbb
pusha
addr16
jno
dec
jg
mov
subl
pop
xchg
jl
push
or
inc
aam
inc
or
adc
xor
lcall
sti
sahf
cmp
clc
aad
jnp
or
dec
adc
push
mov
xor
mov
ret
jae
push
sbb
cli
or
insb
adc
cmp
jne
pop
cmp
imul
xchg
rcll
lods
xor
mov
ja
jae
dec
and
repz
scas
push
mov
mov
scas
mov
loop
and
stos
stc
jg
mov
movsl
les
repz
insb
mov
mov
cmpsl
add
fistl
xlat
xor
inc
nop
icebp
addr16
adc
xchg
sub
mov
or
pop
outsl
xchg
jnp
and
out
scas
and
sub
xor
in
pop
or
xchg
mov
popf
pushf
cli
sbb
icebp
inc
dec
ljmp
das
push
shll
popl
inc
lea
xchg
std
pusha
adc
lret
cltd
lods
ret
dec
pop
xchg
jle
dec
test
fs
adc
js
cmp
push
cld
or
jno
adc
stos
dec
pop
xchg
xor
sub
fiadds
jmp
xor
jno
jmp
aam
jecxz
or
pop
xor
iret
mov
adc
push
ud1
and
dec
sti
ret
pop
mov
adc
int
sbb
stc
mov
jecxz
dec
and
or
js
mov
inc
xchg
cmp
add
jl
mov
mov
mov
xchg
shlb
arpl
das
cmp
andb
cwtl
sbb
sbb
cmpsb
andb
sarb
sbb
mov
or
addl
sub
adc
jmp
loop
mov
out
inc
push
out
loope
sahf
sbb
daa
lds
sbb
push
pop
outsb
mov
test
xchg
jae
andl
addr16
pop
test
mov
ja
ds
in
jo
jb
mov
addb
xor
mov
aad
cld
testb
insl
cwtl
cmpsl
loope
out
gs
add
sbb
push
sbb
jae
stos
notb
mov
sub
ret
rclb
fldcw
sarb
repz
pop
adcb
cltd
sbb
cmp
sbb
lods
cld
in
mov
gs
hlt
call
mov
push
pop
ja
inc
std
sbb
out
xor
inc
leave
repz
outsl
inc
adcl
pop
fs
ret
inc
imul
xor
pop
mov
aas
cmp
pop
and
and
adc
shl
xchg
sbb
mov
insb
test
inc
xchg
adcb
xchg
or
jge
and
mov
push
lds
nop
cld
cmp
inc
in
movsb
cmpsb
jmp
hlt
or
test
nop
cwtl
fbld
enter
loopne
inc
ljmp
xor
ror
out
pop
jp
arpl
sbb
or
push
mov
mov
xchg
in
rclb
cmp
fcoml
mov
jbe
mov
les
cs
cmpsb
inc
lea
mov
frstor
daa
bt
movsl
mov
push
jae
pop
mov
or
movb
imul
rclb
push
es
and
test
jbe
lahf
sub
inc
xchg
pop
inc
addb
pop
in
mov
cld
fwait
sbbb
insb
popa
push
add
inc
dec
inc
lret
ss
sbb
sub
loope
pop
pop
mov
lods
push
jmp
outsl
hlt
addb
fsubr
icebp
popa
inc
out
mov
mov
ss
xchg
or
sub
mov
mov
and
jecxz
mov
fiaddl
mov
mov
or
xchg
stos
xchg
mov
jl
test
fstps
rclb
mov
lcall
inc
add
push
mov
scas
hlt
dec
in
sub
pop
js
mov
sub
xchg
adc
js
dec
and
movsl
stc
icebp
mov
inc
sysret
bound
loopne
jb
jno
mov
inc
xor
hlt
fists
push
lcall
jmp
int3
mov
add
jge
sub
imul
cmp
xchg
mov
test
jae
cmp
daa
pop
adc
sti
test
scas
mov
mov
js
cli
outsb
mov
dec
rcr
push
mull
jnp
mov
in
mov
ficoml
push
movsb
scas
stc
pop
inc
mov
xor
push
divl
pop
aad
out
sbb
jl
mov
xchg
push
mov
sarb
shrb
pop
loopne
fsubl
and
das
mov
sbbl
push
sbbb
xchg
in
sub
mov
inc
push
fldcw
test
cmp
sbb
cld
cltd
psubusb
fwait
push
inc
mov
mov
scas
cmp
and
int3
setno
push
rcrb
adc
lret
mov
stos
and
icebp
cld
outsb
sbb
rclb
push
push
es
jns
sub
inc
data16
cmp
popa
adc
cmpsb
ud0
mov
xlat
jp
test
adc
movsl
les
pop
les
cmp
rol
scas
sub
dec
dec
iret
scas
mov
jno
jg
repz
jecxz
sbb
jbe
push
xchg
pop
ja
inc
mov
mull
ret
jae
aad
add
dec
pop
fimull
pop
mov
sbb
repz
decl
jo
lahf
jb
ret
hlt
call
fidivrs
cmp
pop
gs
jns
xor
xchg
adc
addb
btr
std
mov
scas
sbb
mov
cmc
out
sub
sbbb
dec
out
lds
mov
mov
ja
aaa
ja
dec
leave
mov
adc
pop
das
mov
fstpt
push
incl
push
movsl
cltd
ficoml
xchg
xchg
shlb
cwtl
popa
daa
xchg
gs
push
sub
out
loop
scas
xchg
cmp
lods
or
cmpsb
std
jge
adc
lret
in
lcall
add
incl
mov
xor
push
out
xor
mov
xor
les
lock
scas
jbe
jmp
pop
rcll
pop
inc
lret
cli
sbb
or
ret
call
xor
inc
push
ja
je
sbb
int
adc
push
cmp
mov
stc
adc
and
in
adc
movb
lods
lret
push
jge
mov
fldl
mov
icebp
arpl
aad
arpl
in
mov
adc
and
mov
dec
cli
sub
jno
lcall
popf
dec
sbb
dec
mov
mov
rcrl
fidivl
data16
in
clc
mov
or
loop
push
mov
jmp
sub
idivb
add
sub
jg
xchg
and
clc
adc
adc
out
or
lock
jmp
mov
pop
lea
in
insb
jae
jae
loop
or
cmp
inc
sahf
leave
enter
ficompl
iret
jbe
jo
gs
aaa
sbb
outsb
shrl
test
sub
lahf
mov
rcrb
roll
mov
adc
adc
xchg
ds
xchg
ss
mov
pop
and
loop
iret
aam
loop
popf
jge
fnsave
lea
adc
adc
jmp
add
outsb
jmp
cwtl
cmp
cwtl
push
xor
dec
int3
mov
sbb
or
and
inc
popf
mov
mov
or
mov
daa
stc
mov
arpl
ds
mov
fbld
cmpsb
xchg
pusha
mov
sbb
pop
std
xchg
scas
cld
jnp
xor
mov
scas
mov
jecxz
in
je
lods
jl
sub
sti
cmp
xchg
mov
cmc
cltd
mov
or
shlb
icebp
movsb
sbb
hlt
lcall
aam
mov
fs
outsb
jg
cmp
xchg
and
pushf
negb
pop
jae
xlat
push
iret
cwtl
scas
add
dec
movsl
les
add
mov
and
and
mov
mov
inc
aaa
clc
sti
insb
leave
xchg
std
icebp
popa
cmp
sbb
sahf
cmp
fmul
jnp
sbb
sbb
adc
fidivs
bound
xor
mov
pop
push
dec
in
outsl
insb
inc
push
pop
cmpsl
out
sbb
push
sbb
test
jmp
add
ljmp
pushf
or
jne
ret
imul
sbb
pop
adc
jmp
cmp
pop
fmul
mov
fldl
pop
dec
xor
sub
dec
xor
lock
xchg
jno
shll
aas
push
inc
out
xchg
mov
hlt
imul
mov
xchg
loop
dec
mov
and
xor
test
ja
das
mov
xor
add
test
aaa
andb
aam
mov
sti
and
popl
stos
nop
in
aam
sbb
test
mov
lret
add
sbbl
lahf
or
jl
rcll
in
sbb
push
mov
sub
cmpsl
lea
xchg
out
xchg
xchg
lcall
fisubs
in
and
fldt
cwtl
out
jo
mov
mov
daa
cmpl
mov
das
xchg
pop
mov
out
cli
out
xchg
data16
scas
cmc
imul
test
xor
xchg
loop
fistpll
adc
push
nop
xor
adc
pop
cmp
sti
mov
inc
add
mov
out
out
lcall
jo
adc
and
dec
ljmp
pop
test
and
shrb
cli
cmp
stos
imul
dec
inc
imul
std
push
inc
frndint
mov
pop
xor
xor
ds
cwtl
shll
lcall
fldl
sub
xchg
mov
xlat
lahf
jbe
xor
adc
jl
movsl
cmpsb
std
cltd
mov
inc
in
int
push
mov
subb
addl
hlt
pop
dec
push
lock
test
push
and
dec
mov
add
inc
inc
movl
jb
out
aam
sbb
cmp
out
test
mov
movsb
sbb
push
rcrl
jbe
add
lahf
insb
aaa
inc
test
mov
push
test
dec
pop
lcall
inc
fwait
stos
es
push
jno
out
gs
and
lods
repz
adc
mov
and
sub
mov
fwait
sub
cmp
inc
fisttps
push
push
shlb
daa
fxch
movsb
lret
xor
lods
les
pop
ss
jmp
cmp
stc
imul
lock
or
bound
jge
dec
out
inc
mov
inc
mov
scas
testb
leave
pushf
mov
add
div
inc
pop
sbb
mov
xchg
or
mov
push
cmp
lock
mov
and
push
hlt
int3
mov
mov
push
lret
cmpb
out
xchg
hlt
mov
out
mov
xlat
in
into
imul
scas
jmp
pop
jecxz
jmp
stos
lret
dec
inc
add
mov
loope
mov
dec
dec
fidivl
and
mov
std
sub
cmp
add
lcall
movsl
gs
add
outsb
lahf
mov
xchg
cmpsb
xor
lock
xor
inc
pop
add
jne
push
mov
lods
loop
icebp
imul
test
mov
loopne
push
mov
sbb
movsl
xchg
xor
push
mov
ljmp
popa
pop
xor
xor
and
sub
stos
lahf
sti
lods
push
jne
test
or
dec
inc
inc
mov
rorb
in
and
or
xor
jno
mov
and
push
fwait
idivb
out
mov
push
out
imul
jae
jae
lret
jmp
fimull
enter
add
or
mov
pop
lods
nop
fsubrp
push
in
mov
lret
sbb
mov
mov
pop
mov
jo
mov
hlt
sbb
jbe
xor
fsqrt
outsb
loop
jno
mov
push
aas
insb
push
loopne
push
fs
adc
adc
sub
enter
mov
sbb
jecxz
xor
xor
lock
push
out
push
out
test
int3
pop
push
or
xor
add
jo
movsl
ljmp
mov
jle
dec
lods
mov
jo
out
or
int3
pop
pop
cmpsb
scas
or
add
test
sti
lds
xchg
adc
test
and
cmc
inc
mov
lock
es
jmp
sbb
pop
xor
in
pop
dec
fdivrp
fnstenv
sbb
mov
xor
xchg
xorb
push
scas
les
push
icebp
pop
sbb
fsts
push
push
adc
dec
pop
es
or
lret
sbb
rorb
pop
test
sub
aad
data16
xchg
pop
cs
adc
insl
shrb
aad
test
jl
push
push
dec
shl
add
mov
adc
push
loop
inc
push
mov
push
cwtl
jno
popa
jge
jmp
mov
ret
sub
adc
cmp
sti
and
std
pop
enter
testb
rcrb
fdiv
xchg
or
and
addr16
mov
xor
int3
mov
or
lock
sarb
rcr
cmpl
lret
push
xor
lods
ja
lods
in
shl
ds
clc
push
mov
mov
xchg
sbbb
int3
pop
cmpsb
aad
adc
rorl
xor
in
lods
inc
add
cli
pop
fnsave
mov
addr16
dec
push
adcb
sbb
xor
xor
pusha
icebp
sub
and
dec
ljmp
test
popf
shrb
lock
imul
jmp
mov
loopne
mov
popa
mov
pushf
in
mov
rcll
jmp
dec
cmp
sub
ds
out
sub
jne
pop
mov
and
loop
loop
push
xchg
rcr
jo
fsub
xchg
icebp
mov
pop
addl
xor
repnz
in
push
jno
xchg
adc
xor
or
out
lock
or
mov
addb
pop
xchg
adc
or
xor
jae
div
lahf
jecxz
imul
notl
cmpsl
mov
xor
xor
pop
fidivrl
add
xchg
push
jnp
pop
mov
dec
out
lret
movsb
out
lods
inc
movsl
loopne
ret
popa
cld
adc
testl
stc
mov
mov
ds
pop
cwtl
ds
and
inc
push
subb
rcrb
mov
popa
cmc
jbe
inc
xchg
bound
xor
imul
or
fildll
fidivs
mov
out
and
dec
mov
push
les
inc
movsb
sti
fidivl
mov
pusha
push
push
rcrl
pop
mov
sbb
rcll
outsb
xchg
sti
test
pop
mov
and
test
sub
and
gs
les
pushf
jb
fisubrs
mov
daa
jbe
sub
xchg
mov
xchg
fs
sub
or
lret
pop
mov
mov
mov
jge
imul
outsb
sahf
inc
dec
fldl
fnstsw
shrl
in
inc
pop
sbb
leave
push
mov
pop
jns
mulw
lret
negl
mov
jb
pop
mov
cmp
lcall
cmc
cwtl
pusha
lods
int3
push
mov
cmp
mov
inc
sbb
add
subl
stos
enter
fadds
ds
mov
push
adcb
lret
out
imul
cmp
xlat
dec
pop
cmc
lods
push
rorb
andb
mov
ss
xchg
sbb
cmp
fstps
xchg
lock
sub
dec
repnz
push
pop
lods
push
pop
adc
enter
xor
shll
or
sti
push
mov
aaa
mov
cmp
jecxz
dec
clc
iret
mov
mov
ret
mov
sbb
lock
loope
and
sub
jns
jmp
ds
mov
jp
or
clc
xchg
or
lods
daa
ss
push
sbb
mull
pop
jb
sbb
call
std
aaa
mov
or
je
or
xor
xor
sbb
retw
pop
cmp
jbe
lcall
ja
pop
lret
push
test
xchg
mov
mov
push
jecxz
or
popa
movsb
cmp
add
sub
jg
xor
cs
imul
cmp
adc
mov
icebp
stos
lock
xor
adc
push
or
mov
xor
dec
ds
idiv
mov
pop
cmp
adc
mov
in
pop
sub
jle
push
cmpsl
mov
and
inc
insb
insb
fisttps
repnz
fdiv
jnp
rorl
mov
stc
add
pop
in
scas
push
mov
scas
movsl
jns
mov
lret
std
xorl
clc
xor
dec
sbb
pop
roll
mov
sbb
int3
aaa
andb
jle
push
inc
adc
mov
xchg
insb
mov
hlt
dec
orl
pop
pminub
xlat
ds
add
or
cmpsl
cmp
movsl
shlb
sbb
out
add
pushf
pop
cmpsl
xchg
int
pop
cwtl
mov
dec
repnz
iret
test
jle
or
nop
outsl
push
push
push
out
fcoml
ds
xchg
or
ja
cmp
or
outsb
mov
add
fdivrs
fldcw
sbb
push
jecxz
xchg
aad
rclb
cltd
stos
lds
cmp
sbb
aam
lods
or
xchg
jnp
cmp
pop
fstps
dec
das
mov
adc
mov
stos
cmp
jo
movsl
insb
push
xchg
mov
jmp
and
cmc
out
aaa
mov
in
xchg
daa
cmp
cmpsl
jmp
and
xchg
fld
add
add
dec
add
out
fld
mov
dec
popa
sub
clc
fdivrl
arpl
or
xchg
dec
es
int
or
mov
add
leave
mov
lods
sbb
fiaddl
imul
in
addr16
je
pop
iret
popa
fbstp
leave
mov
mov
cltd
push
ds
enter
fsubrp
cltd
cmpsb
orl
iret
in
xchg
cltd
jmp
adc
mov
es
mov
enter
jo
mov
or
sbb
ljmp
jbe
jg
sbb
aaa
mul
jno
push
pop
mov
negb
andl
pop
divb
pop
and
mov
push
sub
test
bnd
int
pushf
int3
bound
lods
sub
divb
lret
lods
adc
lcall
xchg
xchg
leave
shrb
inc
bound
lret
inc
je
dec
aam
outsb
dec
inc
adcl
push
jecxz
cltd
sub
lret
aas
leave
and
arpl
jns
sub
jg
bound
lcall
push
jmp
mov
mov
sub
xor
paddsb
ds
icebp
xchg
in
sbb
push
jmp
mov
cmp
stc
xchg
cmpsb
imul
les
out
insl
cmp
xchg
adc
sbbl
xchg
jle
mov
or
add
inc
mov
or
mov
cmpsl
push
or
xchg
sbb
les
out
xchg
je
in
rcrb
imul
mov
sti
xchg
xchg
pop
test
addr16
jb
pop
dec
mov
or
imul
imul
data16
aad
sub
pop
adc
pop
lret
or
mov
cwtl
stos
ja
call
in
adc
movsb
arpl
adc
lret
lods
jns
dec
mov
sub
mov
mov
and
in
pop
and
aad
and
repz
cmpsl
dec
sub
mov
out
fstpt
pusha
or
dec
std
mov
mov
jnp
pop
xchg
shll
sbb
push
clc
jnp
mov
jg
imul
xor
mov
stos
fwait
dec
and
push
aas
sbb
inc
mov
incl
scas
test
mov
scas
adc
push
popa
testb
jle
xchg
imul
out
dec
sbb
stos
cltd
aad
and
add
and
dec
repnz
xchg
sbb
xchg
fwait
mov
sub
sti
pop
dec
int3
movsb
adc
imul
fcoml
cmp
pop
xchg
scas
test
jp
scas
mov
dec
jnp
cmp
add
mov
jnp
mov
cmpsl
cmp
nop
and
add
sbb
cwtl
ret
dec
xor
push
xchg
cmpsl
sbb
ror
xor
test
pop
lret
xorl
push
xor
dec
pushf
adc
xchg
scas
dec
xor
push
mov
or
out
ror
jae
movups
push
mov
cmp
fsubs
sbb
pop
fnstcw
xchg
push
nop
mov
lret
push
stos
les
jge
mov
cwtl
cld
lret
sbb
add
or
repnz
mov
cwtl
les
int
sahf
push
inc
icebp
int3
dec
jae
mov
adc
and
aas
mov
mov
mov
push
repz
dec
les
test
mov
sbb
inc
dec
push
sahf
test
add
iret
xchg
mov
add
xor
aad
xchg
xor
fisubs
fsubr
das
xchg
mov
adcb
lds
mov
add
stos
push
sub
in
out
cmp
fdivrl
lcall
pop
fxch
lret
mov
dec
addr16
cli
jnp
int
xchg
jns
sub
repnz
mulb
jle
int
dec
xchg
nop
fst
pop
mov
push
cld
in
xchg
iret
pop
adc
subl
lret
in
pop
lret
cmp
imul
push
mov
mov
mov
loopne
ljmp
fsubl
lea
mov
out
les
lcall
add
pop
dec
out
inc
les
mov
nop
pushf
push
push
mov
je
addr16
icebp
and
and
add
xchg
sar
cmp
pop
pop
mov
add
xor
push
adc
xor
pop
aam
xchg
jmp
mov
test
or
je
js
push
lcall
push
shlb
outsb
cmp
cmc
cmp
popf
daa
loop
or
cli
jnp
out
or
cmp
rcll
iret
adc
addr16
lret
sbbl
push
xlat
inc
pop
in
ficoms
cmp
outsb
jae
pop
sti
xor
push
jno
adc
sbb
inc
pop
sub
add
sbb
jp
fcmovnb
repz
sbb
pushf
add
repnz
pop
inc
push
scas
idivl
mov
sbb
and
icebp
mov
jp
jecxz
xor
sub
outsb
les
mov
jne
inc
stos
sbb
xchg
ret
test
inc
xchg
popf
fs
inc
lahf
or
mov
mov
inc
inc
pusha
or
enter
pandn
iret
add
cmp
sub
out
mov
adc
jecxz
arpl
pop
ss
jmp
in
std
xor
xchg
jbe
clc
bound
inc
outsb
or
mov
lock
orb
and
aaa
mov
in
xchg
insl
cmp
adcb
jmp
decb
shrl
lock
xchg
in
pop
push
movsb
sub
xchg
popl
adc
clc
xchg
adc
sarl
add
push
sub
push
jne
sbb
push
lahf
inc
xor
int3
xlat
addb
dec
mov
adc
mov
lea
cs
cmovl
ds
repnz
jnp
push
adc
mov
mov
fcomps
xorb
or
push
aad
xor
and
aaa
mov
or
loope
mov
mov
fldl
cld
in
test
stos
in
xchg
insl
ljmp
cmpsl
imul
sbbl
xchg
imul
arpl
fstps
xchg
pop
js
outsl
dec
xor
xorl
xchg
xchg
lret
in
lret
xchg
jle
shrl
out
xor
adc
popf
jmp
fisubs
mov
mov
fmuls
scas
xchg
add
lds
mov
in
repnz
jno
xor
hlt
outsb
ds
out
idivb
ret
cli
xchg
pop
sub
cltd
pop
std
adc
sysenter
popf
fwait
incl
and
in
add
dec
aaa
je
enter
mov
stos
das
divl
or
clc
inc
sbb
jb
xor
pop
inc
ljmp
adc
cmp
xchg
int3
pop
loop
xlat
subl
test
in
jge
mov
shll
inc
jmp
mov
jne
and
push
lea
in
out
adc
neg
lock
push
inc
push
fwait
bound
xchg
add
or
xchg
std
fwait
inc
in
and
orb
cmp
out
jle
mov
mov
cmc
fildll
in
or
jmp
insb
xor
mov
sub
popa
mov
mov
mov
mov
loopne
xchg
pop
shl
orl
cmp
popa
mov
imul
push
mov
fisttpll
sbb
xor
imul
add
inc
pop
in
pop
inc
xchg
popf
push
test
or
daa
popf
adc
jmp
bound
push
jne
mov
xchg
lods
lds
loop
jae
fiaddl
xchg
test
fnstcw
mov
cli
lret
dec
out
fisubrs
movsb
jp
push
popf
popa
fwait
or
jg
repz
int3
sub
adc
pop
mov
test
ror
je
inc
fdivl
stos
insb
sbb
and
pop
call
mov
aas
repz
sar
lahf
popf
adc
adc
mov
ret
or
sbb
xor
mov
xchg
xor
repnz
sti
cmpsl
mov
sahf
fidivl
fwait
push
mov
mov
imul
hlt
pop
out
sbb
lret
cmp
sbb
or
scas
push
mov
ret
pushf
push
testb
push
or
xchg
cmp
in
mov
dec
xchg
jmp
adc
mov
aas
xor
fs
xchg
or
xlat
adc
mov
cs
fdivrs
jp
push
mov
insb
hlt
out
lock
sbb
inc
xor
pop
pop
fidivs
jg
out
jns
ja
adc
jne
xchg
inc
sub
sub
ret
xor
ds
sub
aaa
fcoms
fiaddl
mov
fwait
mov
lds
push
push
scas
push
repz
sbbl
push
mov
xchg
cbtw
sbb
sbb
dec
inc
in
or
into
out
lods
or
sbb
push
icebp
sbb
inc
faddl
add
out
jecxz
lods
sub
add
dec
sbb
ds
xchg
gs
ljmp
inc
ret
dec
pop
pop
cmp
js
or
scas
out
je
jle
cwtl
out
jmp
fcompl
mov
std
jo
xlat
mov
sti
mov
imulb
mov
fidivrl
pop
lock
testb
aaa
cmc
cwtl
add
mov
push
rcrb
gs
shl
pushf
and
out
insl
nop
xchg
mov
jl
popf
xor
jmp
cmp
dec
adc
push
es
jmp
push
sub
std
lods
and
cmpsl
out
repz
and
out
push
push
sahf
setae
data16
cmc
jmp
xor
and
cmp
int3
pop
mov
cwtl
ljmp
cwtl
dec
adc
adc
mov
mov
mov
js
mov
jl
mov
into
popa
into
dec
inc
mov
pushf
adc
and
cmp
adc
test
ljmp
sub
xor
nop
stos
xchg
push
cmpsb
adc
pop
inc
xor
int
push
inc
sarb
ficomps
mov
sub
jae
xor
inc
adc
out
and
test
cltd
sti
mov
rcrl
sub
aad
xchg
mul
cmp
outsb
jmp
sbb
cli
lea
push
rcr
cmova
pop
jns
fisubs
mov
pop
and
sbb
daa
int3
or
jae
fs
loop
or
js
dec
repz
inc
push
test
mov
mov
pop
dec
push
movsb
and
dec
xor
dec
cmp
fmul
push
popa
jmp
pop
or
dec
pop
stos
cmpsb
mov
push
dec
or
mov
mov
push
mov
frstor
or
sub
mov
xchg
mov
loope
mov
or
fimull
les
push
pop
and
movsb
inc
iret
adc
mov
repz
repnz
mov
in
jae
or
pusha
pop
dec
cmp
mov
lcall
xchg
insb
add
push
lret
into
jge
dec
mov
xor
dec
mov
and
std
sahf
add
cld
mov
bnd
hlt
les
sti
add
adc
fdivrs
ljmp
push
inc
lock
inc
mov
adc
imul
hlt
imul
adc
das
mov
loope
add
rcl
jb
cmp
cmpsb
mov
cmp
fisubrs
icebp
xor
shrl
inc
out
pop
add
push
ds
orl
aaa
xchg
lret
and
push
cmpsl
sbb
adc
add
dec
push
cmp
jne
cwtl
mov
jnp
movsb
in
les
inc
fbstp
pop
mov
cmpb
push
aam
sub
rcrl
jg
or
adc
cmp
add
adc
xchg
in
mov
sub
and
xchg
andb
inc
add
test
fimull
int3
xor
stc
sbb
cmpsl
mov
dec
add
or
call
cmp
push
jp
xorl
cld
ja
or
pop
pop
dec
push
fsubl
mov
jae
aas
outsl
out
lods
adcb
cmp
lcall
pop
mov
daa
push
je
push
out
mov
or
fnstcw
insb
mov
mov
dec
cmpsl
pushf
insb
sarb
add
jne
sar
out
mov
dec
ficoml
imul
ret
lods
andb
sub
jno
or
push
cmp
insb
jmp
sub
loopne
pop
call
pop
arpl
repnz
popa
mov
inc
cmc
xchg
out
cmovae
pop
pusha
lea
push
mov
icebp
fsubrl
inc
lret
jle
lds
es
jnp
data16
push
push
mov
xchg
popf
pop
and
addr16
lods
test
lds
jge
addr16
idivl
xchg
cmp
push
mov
xor
ss
jae
fs
pusha
sti
rcrl
hlt
xchg
or
push
jmp
sub
push
mov
lock
call
sbb
adc
inc
sbbl
inc
jae
or
fisttps
gs
mov
cmp
sub
popf
int3
inc
stos
lret
pop
sbb
mov
xchg
imul
cmp
mov
inc
test
or
iret
pop
fcmovu
cmp
pop
mov
test
xor
movsb
push
or
mov
adcb
push
push
lea
les
dec
dec
test
jo
hlt
out
cld
cmp
mov
jo
lret
aad
push
dec
ss
les
mov
or
cmp
jge
stc
cmp
je
or
dec
mov
sub
push
shrb
pop
add
repnz
xchg
add
mov
es
lahf
cwtl
xor
sub
cld
xor
notb
jp
sbb
inc
gs
lahf
fimuls
mov
outsb
push
pop
addr16
shr
pop
fwait
divl
arpl
pop
call
ss
mov
add
jecxz
outsb
loopne
aas
jmp
je
data16
loope
lret
addb
shll
test
jo
imul
shl
cmpb
fsts
out
idivb
xor
jge
push
pop
icebp
sbb
and
mov
adc
fucomp
mov
test
push
in
mov
xor
jnp
xchg
pop
inc
call
adc
push
jmp
lods
mov
xor
out
stc
adc
push
in
xchg
popf
cmp
imul
movsl
ret
loope
add
ljmp
cmpsl
pop
pop
int
pop
in
aam
fildll
mov
mov
inc
out
mov
or
fimull
sbb
cltd
shlb
push
notl
xchg
push
test
cmpsb
outsl
sti
inc
xchg
mov
rcr
mov
xchg
or
push
mov
cld
xchg
cld
and
or
push
pop
push
push
stos
push
add
cmc
bound
lahf
jl
out
xchg
push
add
mov
sbb
dec
stos
rol
mov
jecxz
test
in
mov
ret
popa
mov
adc
fs
pop
call
out
mov
lods
shll
cmp
add
pushl
mov
inc
into
pop
inc
adc
lret
stos
mov
inc
cmp
push
pop
arpl
add
pop
shrb
decl
fcomip
mov
push
mov
and
nop
jge
cs
or
out
fsubs
out
cmp
add
sub
fsubl
leave
sbb
leave
push
sbb
pusha
fstps
cwtl
mov
push
mov
or
sub
adc
cmp
lcall
or
pop
sub
scas
inc
mov
sbbb
dec
loopne
jge
rcl
test
loope
pop
pop
pushf
push
stos
rcr
outsb
add
loope
test
into
fdivl
jae
mov
push
inc
hlt
movsl
lock
rcrl
rclb
neg
push
push
cmp
cltd
loope
fisttpll
jo
pop
add
pushf
cmp
test
xchg
mov
loopne
lock
xchg
fistpl
mov
stc
repz
pop
jecxz
ds
in
sbb
ljmp
das
add
movsl
sub
lahf
imul
adc
aaa
mov
mov
add
das
mov
call
sub
xor
xchg
insb
or
mov
mov
movsl
fldl
fcoms
and
dec
lock
dec
jns
jb
cwtl
add
jg
cwtl
sbb
xchg
push
mov
cwtl
lds
mov
pop
fadds
pusha
mov
xchg
or
push
addb
divps
push
daa
pop
in
dec
jecxz
sbb
out
add
cld
xor
add
sbb
adc
xchg
js
mov
ret
mov
jnp
and
fsts
add
pop
mov
cmpl
stos
xor
icebp
mov
faddp
push
and
mov
imul
fsubrs
daa
inc
pop
lret
push
stc
sub
pop
and
push
xor
mov
bound
stos
push
fisubl
out
pop
and
aam
push
mov
lret
popa
mov
mov
adc
adc
push
aad
ds
ss
xchg
fstps
aas
fs
sub
sbb
jl
dec
fistpl
je
jl
rorb
je
int3
mov
adc
pushf
movsb
sub
movsl
int3
leave
and
ss
mov
dec
lods
dec
in
mov
dec
xchg
ret
jp
insl
pushf
pushf
stc
sub
lea
mov
insl
mov
inc
loopne
mov
loope
inc
lahf
roll
sti
sti
ja
dec
adc
adc
cmp
cwtl
jb
push
fs
push
cs
sub
pop
mov
adc
inc
sbb
or
mov
dec
mov
mov
subl
ret
inc
repnz
dec
ficoml
shrb
mov
cmp
pop
jge
fidivrl
cmc
push
ds
xchg
rcrl
aas
cmp
stc
or
push
and
cmp
pushf
sub
jecxz
scas
leave
sbb
leave
mov
jns
pop
pusha
add
sbb
jmp
xchg
xchg
ds
pop
sub
in
push
fwait
popf
insl
mov
mov
int
ljmp
stc
push
or
mov
das
and
sub
sbb
cmp
and
ja
pop
lret
jne
mov
push
in
sti
xor
movsl
inc
mov
leave
inc
sbb
pusha
adc
arpl
loope
dec
push
add
or
xchg
mov
int3
repnz
outsb
cmp
in
mov
sbb
nop
and
pop
jmp
push
sbb
xor
pop
jecxz
inc
loop
rol
shll
call
out
cmpsl
push
add
int
lds
dec
in
ja
pop
push
xchg
pop
jno
sub
xchg
adc
int3
lds
scas
hlt
jno
enter
adc
iret
pop
cltd
and
je
sbb
cmpsl
or
scas
mov
cmpsb
je
fldcw
mov
inc
dec
adc
push
cmpsl
out
out
push
mov
dec
dec
inc
cmpsb
inc
sbb
mov
fldt
jno
sub
or
pop
movsl
and
adc
xchg
mov
jae
mov
jge
loope
out
nop
enter
add
sub
adc
pop
or
and
xchg
and
mov
outsb
repnz
cwtl
pop
cltd
std
pop
add
stos
push
gs
pop
inc
arpl
sti
pop
jbe,pn
mov
in
inc
xor
xorl
fistl
in
ljmp
push
or
sbb
mov
gs
js
jae
loope
pop
addr16
sub
jecxz
mov
aaa
fisttps
xor
cmp
ds
cmc
sub
xor
sub
shlb
mov
int3
scas
push
mov
pop
in
xchg
mov
add
or
test
mov
adc
lock
jle
adc
dec
or
gs
add
dec
fdiv
sub
pop
xor
and
adc
jns
in
lods
mov
jge
pop
scas
in
fwait
xchg
insb
and
push
cmp
arpl
sbb
pop
lock
ss
lea
and
push
xchg
mov
mov
stos
add
dec
sbb
imul
sub
mov
mov
imul
sub
mov
pop
cmp
mov
mov
inc
stc
es
mov
sbb
repz
sbb
call
out
xor
in
lret
lcall
std
mov
and
repnz
fildll
sub
shlb
inc
jecxz
dec
popa
jl
pop
sti
dec
inc
insb
push
xor
out
cmp
ds
and
inc
add
pusha
mov
clc
or
jmp
push
xchg
lahf
mov
cld
add
pop
lock
out
xor
inc
out
jmp
mov
movsl
jno
push
vcmpps
stc
or
rolb
pop
inc
dec
mov
xlat
test
cs
out
dec
dec
iret
mov
lret
es
das
cld
adc
adc
fdivrl
mov
pushf
mov
cmpsb
stos
in
pop
movl
cld
mov
scas
dec
notl
adc
mov
xor
push
cld
push
mov
js
fimuls
sarl
jnp
pop
cltd
jae
mov
inc
movsl
pop
mov
setno
dec
cmp
dec
gs
lret
aas
rcrl
in
sarl
mov
lods
mov
mov
or
imul
adc
test
xchg
mov
xor
or
or
test
cld
cli
adc
pop
outsl
xchg
jecxz
cmp
ret
into
cmp
ss
mov
pop
je
in
and
and
in
lods
cmp
iret
dec
add
outsl
or
mov
aas
aad
xchg
xchg
mov
cmc
enter
jp
xchg
icebp
jne
mov
adc
stc
stos
xchg
adc
das
cmp
xchg
out
movsl
fwait
jp
inc
cmp
adc
jbe
pop
push
push
repnz
mov
enter
cmp
fisttpl
mov
xor
dec
push
sbb
sub
cmp
and
lret
scas
aaa
inc
dec
leave
add
and
es
test
addr16
and
sbb
mov
jno
push
cltd
cmc
test
push
push
cmp
sub
enter
push
fs
jp
sub
mov
das
call
mov
inc
cli
jns
out
jle
dec
sub
dec
cmp
fimull
out
mov
mov
and
js
pushf
pop
lea
sbb
sbb
outsb
mov
fstpt
add
fidivl
cmp
jmp
xor
xchg
push
sbb
divl
pop
xchg
hlt
inc
inc
in
dec
xchg
jmp
inc
pop
loopne
mov
repz
in
jmp
loopne
stos
or
xor
iret
lcall
sub
jecxz
aas
jmp
and
andl
call
or
and
inc
mov
fdivs
mov
xchg
dec
ret
pop
in
sub
jae
or
test
mov
inc
test
cmc
sarl
jo
bswap
sub
push
lods
in
imul
adcl
lea
jo
mov
adc
or
dec
push
sbb
enter
cmc
mov
ds
leave
mov
mov
sub
push
in
adc
pop
pop
andb
out
mov
fcoml
xchg
inc
mov
repz
inc
lret
dec
pop
sbb
pop
inc
in
cltd
pop
es
add
negb
sahf
jne
mov
or
and
and
faddl
dec
push
inc
xor
xchg
scas
pop
jbe
repnz
push
decl
sbbl
mov
dec
dec
in
lcall
sti
dec
mov
sub
in
pop
in
and
pop
js
lret
mov
addl
jecxz
aad
add
add
pop
in
push
push
repnz
shrb
inc
stos
leave
out
ja
xchg
aas
enter
add
xchg
in
fs
pop
aas
ss
in
pop
mov
repz
mov
sub
clc
inc
jo
xlat
mov
dec
imul
lret
aam
stc
ja
arpl
lods
xchg
mov
in
sub
xor
mov
cmp
adc
out
out
lds
inc
subl
inc
inc
push
jbe
sbb
or
add
xchg
iret
push
or
inc
ja
jne
int3
scas
in
mov
shlb
cmc
push
rcrb
jno
outsw
cmpsl
mov
aas
adc
sub
adc
xor
in
leave
movsl
std
pop
sarl
fildl
xchg
adc
sub
data16
cmp
fs
imul
mov
popf
sbb
arpl
adc
shrl
push
shl
roll
sbb
mov
and
out
fdivl
mov
jg
ret
inc
jecxz
mov
sbb
repnz
sbb
shrb
add
add
pop
out
lods
or
mov
sbb
add
fisttpll
movsb
loop
or
std
ss
cmp
int
pushf
das
out
fisttpl
push
cmc
mov
push
shlb
sub
cmp
lahf
inc
xor
repnz
lods
gs
mov
ror
clc
mov
jo
movsb
addr16
in
xor
cmc
xor
outsl
jb
inc
call
inc
scas
insl
jae
cmp
orb
imul
jb
jle
loop
hlt
stos
lock
mov
jg
insb
dec
repnz
lods
push
jecxz
push
fcoms
pop
sarb
xlat
pop
dec
push
push
js
push
cmp
or
sub
lret
push
and
sub
cmpsl
test
in
js
cs
imul
adc
dec
insb
loopne
xor
dec
outsb
js
pusha
jb
idivl
jae
pushf
call
jge
inc
lea
fists
les
adc
jae
dec
fdivrp
xor
stos
pop
and
sbb
xchg
mov
arpl
aam
and
int3
insl
and
mov
push
js
xchg
push
jp
pop
xlat
enter
imul
imul
dec
lret
fnstcw
data16
sti
xchg
loope
enter
sbb
loopne
sub
popa
lret
mov
jns
stos
dec
movsl
push
xor
mov
ret
or
daa
inc
and
or
subb
mov
dec
repz
and
jge
dec
pop
jns
inc
push
rcll
xchg
jg
or
jp
xor
dec
mov
xchg
dec
ljmp
adc
push
andl
ret
push
pop
loop,pn
or
mov
jle
mov
ja
js
pop
loopne
incl
sub
and
int3
dec
test
out
xchg
rorl
rolb
pop
xchg
sbb
int3
xlat
mov
sbb
fwait
lods
dec
or
or
jns
fstpl
or
adc
jle
adc
clc
push
xchg
inc
adc
push
ss
adc
hlt
push
pop
enter
enter
shl
out
mov
lea
lea
push
test
andb
in
dec
and
xor
aad
ja
adc
adc
lods
cmp
js
mov
cmp
xorb
cmp
stos
fdiv
aaa
adc
dec
jae
lea
lock
out
fld
or
lahf
sbb
or
stos
ds
adc
or
lahf
jge
mov
xor
repz
into
xor
jle
imul
inc
mov
mov
js
insl
sub
jecxz
arpl
ficomps
jae
shl
fsts
push
daa
add
data16
ja
pushl
or
arpl
popf
mov
mov
push
mov
pop
dec
mov
std
and
push
xor
stos
cmpsb
mov
xchg
xor
xchg
push
mov
xchg
sbb
addr16
xor
mov
xchg
sbb
jbe
fisttpl
push
mov
jae
lcall
cwtl
repnz
test
mov
mov
repz
hlt
andb
or
pusha
pop
std
es
mov
inc
test
cmpsl
mov
test
fldcw
fnsave
dec
outsb
aad
ret
and
jge
or
dec
mov
add
movsb
call
and
popf
out
or
outsl
and
pop
inc
cwtl
sbb
and
ficomps
mov
cmp
push
out
push
mov
xor
bound
xchg
cmp
mov
or
out
repz
cmp
shl
sbb
rorl
dec
pop
popf
jb
inc
xor
push
push
out
xchg
mov
jecxz
imul
and
pop
pop
ret
inc
ret
inc
lret
or
push
daa
xor
and
loopne
in
call
lds
jecxz
mov
lcall
sub
das
sub
fists
mov
inc
mov
cmp
out
jecxz
fists
sub
dec
jmp
addr16
and
sub
jo
xor
hlt
stos
dec
imul
jnp
ja
sbb
ja
pop
fiadds
xor
mov
cli
cld
negb
movb
not
enter
push
mov
mov
mov
cmpsl
adc
inc
push
push
xor
ret
test
aam
push
push
aad
in
shrb
daa
mov
in
pop
test
adc
lods
inc
pop
js
enter
cmp
and
std
or
cli
inc
and
rcrb
or
stc
adc
dec
pop
pop
and
orl
sbb
loopne
cmp
dec
int
add
stos
nop
repnz
lret
scas
jno
enter
push
std
cmp
sahf
fisubrl
cmp
mov
stos
jne
mov
in
mov
jp
mov
dec
fists
bound
gs
fiaddl
xchg
xchg
adc
std
subl
ret
inc
xchg
dec
add
dec
cmp
mov
pop
sbb
push
xchg
vhaddps
test
sbb
xchg
cmp
test
jl
add
mov
lahf
out
jns
dec
mov
mov
ret
dec
sub
scas
lods
xlat
in
xchg
dec
lea
inc
pusha
mov
inc
fwait
enter
jecxz
imul
jno
inc
xlat
add
or
lock
pop
pop
fstpt
pop
adc
shr
test
in
inc
pop
cli
pushf
or
fisttps
mov
xor
xor
inc
ret
and
arpl
fucom
cli
fcoms
mov
jb
inc
sub
out
adc
mov
xchg
push
pop
cmp
mov
push
push
jbe
ss
mov
shlb
rcr
or
mov
cmc
mov
sub
dec
dec
lods
addr16
mov
jno
push
aam
sub
xor
fs
cli
jbe
cmp
lret
outsb
jns
sub
mov
repnz
fisttpll
dec
dec
divb
nop
leave
xchg
loop
lea
cmpsl
lahf
jb
push
popa
fxch
sti
push
sub
sbb
dec
int3
mov
mov
cmovg
xor
inc
sbb
test
ds
mov
mov
jp
fisttpll
enter
scas
insb
out
jnp
push
aam
sti
in
adc
jbe
xchg
cli
std
in
rclb
lcall
mov
and
jbe
shrl
push
push
bound
add
test
ret
push
sub
mov
in
pop
insb
xchg
push
shrl
in
dec
inc
cmp
sbb
jg
mov
or
pop
and
push
shll
mov
pop
add
leave
mov
dec
pop
sbb
and
and
and
out
popf
mov
pop
adc
lahf
xor
addr16
dec
fsts
sbb
push
ss
mov
cmc
dec
stos
jp
aad
sbbl
mov
outsl
xchg
adc
test
xchg
xlat
or
jbe
stc
out
sbb
add
movsb
pop
push
push
clc
and
adc
add
xchg
test
xchg
pop
sub
and
aas
aaa
nop
mov
push
nop
mov
sbbl
lods
test
xor
xor
out
adc
subl
sub
daa
roll
loop
sub
repnz
xor
aaa
xchg
or
pop
inc
xchg
insb
xchg
fldln2
xchg
mov
lods
lcall
sbb
mov
aas
jo
scas
jp
in
mov
mov
push
icebp
inc
add
jge
gs
xchg
arpl
or
pop
pusha
in
jecxz
lods
dec
enter
insl
sbb
jge
lcall
cmp
mov
fisubrl
sbb
pop
fs
aad
call
sub
fistl
outsb
pop
les
popf
mov
gs
dec
or
sub
stc
leave
outsb
clc
lret
mov
mov
testb
outsl
or
push
sub
mov
xchg
add
call
dec
pushf
inc
adc
fsubl
rorb
xchg
cmp
iret
push
addr16
jmp
ja
sbbl
dec
stc
push
fmuls
rcl
jbe
xor
dec
push
imulb
fdiv
sub
xchg
adc
imul
mov
in
fs
inc
popa
inc
mov
popa
push
repnz
mov
mov
jmp
push
sti
xor
sbb
cmp
fdivs
xor
lods
jnp
mov
lods
stc
xrelease
push
sar
hlt
in
xor
push
lea
jge
testb
es
adc
or
xchg
dec
aad
jecxz
sub
mov
rcr
call
mov
jno
mov
addr16
rolb
jo
mov
imulb
xchg
mov
or
je
mov
lods
or
jl
test
rcrb
int3
jbe
xchg
mov
jnp
pop
adc
pop
mov
outsb
sahf
in
pop
push
scas
ja
call
lea
cli
dec
hlt
mov
outsl
pop
ljmp
fildll
jecxz
sub
sub
insb
je
fsubrs
stos
jge
push
jle
jns
and
fld
mov
enter
fildll
sbb
jge
cmp
in
ret
in
xchg
xchg
stos
push
popf
imul
aaa
cmp
add
mov
mov
and
ret
pusha
dec
adcl
mov
sbb
shll
into
xchg
jl
and
int
shrb
fs
xor
in
adc
rorb
cmp
ja
aaa
fstpl
mov
mov
loope
and
cmpsb
sub
and
movsb
add
sahf
je
mov
and
arpl
ds
fisubl
xor
imul
or
sbb
stos
dec
cld
jbe
mov
or
xchg
iret
dec
pop
jb
jne
test
shll
push
push
insb
arpl
inc
aas
lahf
add
jne
cmp
addr16
mov
xor
jo
addr16
xor
jb
mov
ss
out
in
cmp
sub
mov
jo
cli
out
lods
inc
xor
call
hlt
inc
arpl
mov
fidivs
push
lock
div
xlat
and
mov
sub
lret
aad
fmulp
in
mov
cmp
push
negl
xchg
lret
rcrl
mov
jecxz
or
ds
mov
popf
popl
mov
std
sub
and
call
xchg
out
mov
add
les
and
xchg
pop
lock
loope
xchg
mov
mov
mov
in
xchg
pop
icebp
or
and
inc
adc
je
or
adc
leave
push
lret
or
dec
and
aaa
mov
jnp
push
sub
mov
clc
xor
insb
rcr
mov
mov
dec
das
pop
nop
push
imul
into
scas
mov
xor
sbb
xchg
sbb
xchg
shr
xorl
sahf
mov
xorb
mov
lock
arpl
push
in
mov
pop
ret
xchg
fldenv
inc
cwtl
pop
shll
pop
pop
imul
inc
adc
sub
mov
add
and
fstpt
cltd
and
lea
scas
stos
add
and
lahf
cwtl
loope
cwtl
mov
sbb
out
loope
ljmp
es
movsb
inc
pop
cs
cld
xchg
lods
jae
aas
in
mov
inc
jne
lea
int3
push
jl
stos
mov
adc
sbb
sahf
stos
or
dec
mov
and
add
mov
inc
inc
mov
cmpsb
fnsetpm(287
adc
jne
sbb
ret
fwait
movsb
jbe
inc
fsubrs
or
mov
jle
enter
xchg
pop
arpl
mov
xchg
jmp
repz
pop
ljmp
in
dec
pop
inc
daa
jecxz
jns
xlat
mov
xor
mov
cmp
out
stos
aaa
mov
dec
xchg
arpl
dec
xchg
std
inc
add
add
jns
mov
dec
pop
pop
jmp
push
or
popa
idivl
xchg
xlat
shl
leave
aas
dec
testb
xor
xchg
daa
ja
aad
dec
pushl
push
cmp
mov
das
pop
xor
cmp
xchg
cmp
fldl
xlat
cmpsl
lahf
push
std
jle
or
jns
push
ret
jne
and
out
pushw
clc
push
repz
aaa
popa
cs
ja
dec
loope
fsubl
mov
imul
in
cli
sub
lods
sbb
xor
repnz
cmpsl
mov
scas
mov
cwtl
cmp
jne
and
push
outsb
sbb
enter
pop
call
ss
ss
adc
movsb
push
mov
cmc
sarl
nop
xchg
inc
sbb
repz
std
lahf
mov
inc
push
cwtl
xor
lahf
cwtl
inc
push
push
mov
aad
add
popf
cltd
push
scas
negb
fwait
cmpsl
cmpl
adc
lds
cmp
sub
jge
rol
lret
or
das
les
adc
and
inc
lret
popa
jmp
rcrb
and
inc
and
mov
inc
cwtl
and
mov
push
jns
pop
mov
sahf
icebp
mov
enter
pop
push
dec
pop
push
dec
xchg
pusha
sbb
or
inc
mov
pop
xchg
xor
dec
sub
ss
ja
subb
dec
xchg
pop
xchg
stc
imul
ficompl
notb
mov
mov
cld
sub
inc
pop
push
and
push
in
sub
cmp
pop
pop
mov
lock
mov
lret
clc
loope
arpl
or
sub
mov
scas
call
add
xor
rolb
dec
ret
ficoms
je
call
push
jnp
pushf
xchg
mov
cmp
jne
out
adc
mov
lds
pop
fucomi
push
jecxz
mov
or
outsb
mov
mov
out
push
and
ljmp
xor
mov
stc
mov
sbb
xlat
mov
aas
cmp
jp
xor
and
lea
sarl
sbb
rcrl
scas
sub
aas
jnp
into
nop
testb
jge
or
cltd
xchg
pop
sub
inc
pop
pop
mov
sub
test
xchg
mov
loope
xchg
aas
out
lahf
lock
ret
mov
push
sbb
aam
push
mov
cmp
out
xor
mov
sub
das
rcrb
sub
xor
loope
inc
and
call
stos
pop
push
mov
data16
ljmp
enter
jmp
flds
push
and
popa
shll
xchg
mov
sbb
jbe
ret
nop
sbb
xchg
ret
push
dec
xor
imul
jle
pusha
jo
mov
pop
jo
inc
rcrb
sub
inc
fcompl
addr16
cmp
cmp
push
sbb
sbb
inc
ret
xchg
leave
iret
jg
push
jbe
mov
aad
sbb
and
insl
and
icebp
imul
das
jne
sti
add
decb
dec
addr16
cwtl
loope
mov
adc
out
push
int3
inc
mov
push
js
jae
shr
mov
lea
jns
lods
mov
pop
mov
xor
rorb
sbb
push
sbb
fs
mov
cmpl
pop
sbb
loopne
jle
or
int3
test
jne
mov
xorl
push
adc
shlb
adc
sbb
std
jbe
in
cmp
ss
mov
scas
dec
sbb
and
iret
ja
std
dec
scas
push
fnsave
cli
mov
lods
jae
shr
fistps
sub
push
imul
mov
add
arpl
xlat
pop
mov
jge
cli
fs
arpl
cs
ret
sub
sti
les
xor
xor
jb
mov
daa
jge
pushf
or
stc
scas
add
aad
test
popf
test
in
push
xor
cs
ret
sub
cmc
fadds
mov
add
sub
dec
mov
jp
lret
out
out
loope
and
push
jno
test
pusha
repz
ss
xor
scas
mov
or
jge
pushf
sbb
mov
push
xchg
les
and
nop
xlat
je
or
xchg
lret
or
test
push
movsb
imul
mov
in
je
mov
ss
push
sbb
mov
cli
ss
adc
test
stos
mov
enter
mov
dec
aam
sub
pop
scas
push
cmp
insb
int3
xor
sub
dec
push
pusha
fwait
push
arpl
dec
inc
lods
push
sbb
lock
lea
shlb
fildll
fildl
test
add
pop
arpl
cltd
bnd
xor
sub
lcall
add
pop
fs
add
jb
mov
xor
lahf
popa
push
cmp
fdivrs
pop
movsb
ds
mov
lods
stc
or
and
adc
rorb
pop
adc
sub
in
mov
jo
or
imul
shll
scas
sub
xlat
jns
push
lcall
mov
imul
adc
and
addr16
xchg
fstpl
jae
stos
push
pop
sti
cmpsb
enter
dec
add
test
lcall
adc
xchg
mov
stc
pop
adc
add
popa
jne
mulb
mov
arpl
lret
mov
ss
sti
les
push
inc
xchg
popf
push
push
or
push
add
jle
cmp
js
jne
in
dec
mov
ret
rorb
into
sub
scas
sti
sahf
mov
call
sti
decb
insb
mov
int
or
sub
dec
test
test
cltd
cmp
fimull
jge
lret
sbb
jp
mov
xchg
mov
movsb
inc
outsb
fisttpl
fstpt
cmp
out
test
cmp
jnp
sahf
es
push
das
fidivs
lahf
mov
mov
add
xlat
dec
shll
inc
loop
jecxz
push
addr16
les
jge
fmull
popf
fiaddl
repz
mov
jns
lds
in
in
sbb
jne
pop
dec
loopne
sbb
stos
orb
and
scas
insb
pushf
add
pop
xchg
dec
push
test
adc
cmp
mov
mov
xchg
pop
add
aad
or
imul
shrb
lahf
jl
push
imulb
mov
push
mov
icebp
sarb
xchg
fstps
movsl
sub
bound
les
loopne
push
cmpsb
push
mov
out
icebp
cmp
adc
cmpsb
inc
bound
dec
fistpl
add
xor
push
inc
movsl
jns
pop
sub
call
inc
mov
fwait
dec
test
stos
sub
pop
push
inc
ds
adc
outsl
xchg
mov
cli
js
adc
jnp
ror
inc
xlat
add
and
pop
aad
lret
xorl
lock
pop
imul
mov
push
js
mov
mov
aad
jl
mov
into
ret
lds
push
adc
push
adc
aad
scas
pop
jnp
sbb
mov
ljmp
pusha
pusha
fsub
push
or
rclb
scas
movsl
aas
lds
std
mov
in
mov
push
hlt
jg
int3
popa
or
xchg
fsubr
rcrb
adc
sbb
sbbb
cmc
cmp
das
cmp
imul
sub
adc
in
out
loopne
push
outsl
mov
jns
xchg
ss
int
loope
stc
jl
mov
mov
xor
mov
pop
xor
jmp
shll
add
xchg
lock
xchg
xchg
cmp
cld
mov
sbb
lret
ds
and
dec
push
mov
jnp
jmp
insl
cmp
dec
dec
sti
bound
lcall
xorb
dec
push
arpl
xor
dec
cwtl
jp
sahf
jne
mov
or
sarb
fwait
std
aas
fprem1
outsb
dec
mov
mov
xchg
jae
sbb
sti
and
xor
fwait
push
int3
or
outsb
scas
cmp
das
fs
js
ds
pop
xchg
aas
gs
sub
add
rcr
daa
and
fbld
dec
push
popa
stc
or
cmp
jle
sub
pop
in
push
into
sbb
inc
jp
cmp
sbb
adc
enter
aam
mov
ja
mov
mov
fcoml
popf
mov
ja
mov
add
aad
and
popa
in
mov
lock
icebp
cmp
xchg
mov
shrl
clc
jle
pop
outsl
dec
fwait
inc
les
pop
lock
mov
fldpi
cmp
dec
mov
mov
mov
mov
lds
inc
pop
and
inc
hlt
pop
mov
out
dec
jne
movl
fucomp
jno
mov
push
jae
negl
fisttps
sbbb
cmpsb
xchg
adc
and
subl
sarl
aaa
outsl
hlt
scas
xchg
cltd
mov
push
cld
shll
add
push
fs
push
iret
pop
addl
adc
in
push
sub
pop
repz
mov
stos
std
ljmp
cmp
cmc
pop
mov
and
out
lods
shr
cmpsl
adc
scas
sbb
stos
addr16
inc
stos
or
std
cmp
ljmp
mov
cmc
pop
inc
sar
fidivs
mov
out
jmp
scas
xlat
fisubs
pop
push
add
repz
ret
aam
out
mov
jo
icebp
lods
dec
add
push
adc
sub
daa
loop
int3
add
pop
fidivrs
and
cmpsl
sbb
popf
and
movsl
mov
scas
pop
addl
dec
push
add
testl
and
jns
jno
xor
fsubs
or
out
add
mov
adc
mov
mov
pop
xchg
mov
loop
fcomi
xchg
jmp
push
and
xchg
inc
and
sub
cwtl
rolb
sub
add
inc
jmp
adc
mov
and
mov
mov
cld
push
add
cmp
adc
std
jae
insl
lods
mov
sbb
dec
lods
inc
shl
inc
adc
mov
mov
test
jg
cwtl
iret
xor
xchg
stc
outsl
mov
mov
mov
js
mov
adc
jmp
push
sub
sub
inc
outsl
popa
jg
mov
in
lret
push
dec
push
popa
mov
mull
jp
lret
iret
outsl
mov
aaa
mov
jp
rcpps
add
xor
cmp
cmp
test
cmp
sub
xchg
mov
ret
sbb
loop
jno
push
aam
mov
in
cmp
lret
aam
into
pop
ss
jns
cmp
jle
data16
addr16
xlat
adc
dec
jae
movsl
ret
fcomi
sbb
dec
sub
into
icebp
cmc
sub
xor
sbb
push
int3
cmc
jnp
mull
xchg
inc
jmp
rclb
negl
pop
cmp
cltd
cmp
mov
mov
dec
xor
cmp
jmp
dec
cmc
popf
in
xor
push
add
xor
clc
ja
adc
mov
cli
fsubrl
lret
ljmp
mov
and
push
inc
mov
dec
lret
dec
mov
and
sbb
jb
push
insb
inc
sub
adc
and
loope
lcall
cmp
in
subb
fistps
shlb
or
inc
imul
xchg
pop
popl
scas
cli
xor
mov
add
ss
lahf
xchg
ja
pop
sbbb
sbb
sub
out
aad
out
inc
lods
insb
xor
and
arpl
push
daa
movsl
push
pop
daa
adc
push
lret
dec
and
adc
mov
out
aam
push
cmp
lock
cmpsb
jle
sub
in
icebp
sub
ja
push
add
scas
pop
dec
adc
dec
and
push
test
addr16
stos
and
sbb
iret
and
call
insb
sub
shl
mov
mov
stos
cmp
xor
cmp
cli
rcl
lds
pushl
add
das
pop
add
leave
add
mov
sub
sbb
andb
or
inc
push
cmpsl
mov
pop
push
mov
and
mov
sub
repnz
pop
fs
pusha
out
iret
cmp
movsb
or
mov
int
leave
pop
mov
fcompl
fisttps
rcl
out
xor
movsl
mov
out
ss
aaa
dec
loopne
inc
xor
sbb
and
cmpsl
sbb
mov
push
sub
out
mov
mov
popa
cmp
pop
popf
jge
dec
gs
adc
in
jno
out
lock
mov
mov
xchg
push
dec
loope
pop
jae
into
adc
lods
mov
jo
fdivrp
push
mov
dec
lcall
jne
pop
jne
dec
fsubrl
push
add
mov
mov
mov
ss
call
fsubl
jb
push
int
in
out
mov
int
jle
jle
adc
push
cmp
cwtl
mov
loopne
inc
imul
mull
sub
jbe
aas
xchg
js
icebp
leave
mov
loopne
ljmp
xor
stc
enter
mov
pop
lds
testb
mov
jge
add
mov
scas
xor
cli
fwait
or
jmp
sahf
mov
pop
push
lea
push
movsb
idiv
cmpsl
mov
cmp
push
leave
xor
insl
mov
out
mov
jp
ss
popa
sti
into
pop
sti
in
and
dec
ds
cltd
repz
addr16
inc
push
mov
repz
outsl
stc
adc
jmp
scas
outsb
or
mov
and
pop
enter
dec
dec
xor
leave
jp
or
fwait
call
pushf
jo
add
out
outsb
lret
pop
dec
sbb
jbe
loope
lahf
imul
out
xchg
add
pop
add
jnp
mov
stos
ljmp
lret
dec
andl
jg
pop
les
fisubs
pop
cmp
andl
push
repz
pop
ja
and
dec
ret
pop
xorb
mov
pop
adc
xchg
push
mov
mov
mov
fsubr
mov
xlat
cmpsl
out
dec
adc
imul
outsl
jmp
test
mov
inc
xor
testb
inc
dec
pop
pushf
cmp
push
std
xchg
sarl
mov
testb
je
nop
adc
pop
push
lahf
sub
lea
leave
mov
rcll
pop
jecxz
xchg
dec
popa
jb
dec
jp
mov
leave
inc
dec
mov
cmpsl
mov
pop
das
mov
xor
int3
clc
mov
inc
stos
repz
ret
push
xchg
outsb
iret
imul
push
mov
xchg
mov
dec
jge
in
mov
outsl
pop
pushf
push
pushl
or
adcb
or
and
enter
sub
iret
xor
xlat
pop
jge
and
or
jg
pop
mov
and
push
in
in
dec
roll
mov
pop
insb
mov
xchg
mov
stc
mov
mov
loopne
cmp
shlb
dec
sub
fldcw
sbb
clc
pop
sbb
sub
push
xchg
fcompl
jne
inc
mov
dec
test
cmp
lret
and
xor
lret
jecxz
gs
mov
mov
sub
sbb
lcall
sub
shlb
jae
stc
adc
imul
mov
outsl
nop
sbb
mov
lods
testb
push
pushf
add
or
mov
xchg
mull
xchg
or
jg
testl
dec
sub
ljmp
jge
mov
daa
push
test
mov
mov
movsb
lods
jle
loope
mov
jg
xchg
xchg
cltd
and
sbb
inc
sub
push
out
fwait
call
fs
das
mov
mov
inc
je
aam
aam
or
rorl
sbb
in
test
and
push
pushf
daa
test
xor
int
and
sbb
inc
sub
nop
lret
jbe
sbb
fs
xchg
sub
fs
jecxz
sti
inc
mov
popa
daa
mov
jge
cmp
imul
jns
jp
pushf
and
mov
cltd
jno
adc
and
loop
mov
orb
sarl
or
mov
mov
int3
int
or
cmp
mov
out
xchg
sub
jle
xorl
aas
dec
fstps
aam
dec
fucomip
mov
mov
xor
adc
les
bnd
sbb
and
es
dec
enter
or
lahf
insb
sub
int
sub
mov
mov
sbb
push
lret
or
cli
aam
ficompl
push
add
mov
adc
mull
outsb
xchg
pushf
or
test
inc
sti
ss
cmp
inc
xchg
or
and
jmp
cmp
sbb
mov
and
daa
das
pop
adc
push
mov
pop
pop
jne
adc
fwait
pop
push
mov
out
or
cltd
pop
enter
fimuls
or
in
cmpsb
movsb
rclb
fsubs
leave
inc
ljmp
imul
mov
mov
fwait
aas
dec
in
add
sub
and
xchg
icebp
insw
icebp
in
xchg
pop
mov
sbb
xchg
push
jge
test
test
adc
pop
jge
sbb
cld
jmp
div
adc
cli
adc
cwtl
into
cli
les
or
pop
dec
rolb
fidivs
es
inc
shll
sub
shll
push
inc
sbb
xor
mov
pop
movsb
push
fs
mov
ss
int3
jl
jmp
lahf
rcrb
in
or
mov
cli
mov
and
jne
mov
pop
adc
push
inc
mov
mov
mov
inc
sub
ss
jecxz
xor
popa
dec
and
or
jne
jecxz
lret
jle
test
in
jge
movsb
or
cmpsl
cld
icebp
jne
test
fistpll
inc
sub
pop
xchg
iret
enter
mov
fwait
sti
cmpsl
inc
jne
adc
adc
inc
push
pop
movsl
rorb
pop
sub
mov
lcall
or
insb
adc
mov
jg
scas
xor
cmp
roll
pop
pop
leave
vunpcklpd
inc
pop
cld
dec
movsl
add
insb
and
imul
ret
enter
scas
push
xchg
xor
mov
inc
dec
push
lret
test
cmp
lods
out
xchg
mov
cltd
or
mov
pop
ret
adc
dec
or
cmpsl
aas
sarl
ja
lods
dec
hlt
iret
inc
pop
mov
mov
cmpsb
orb
cmp
cmp
fadds
in
add
mov
stc
cmp
push
in
faddl
sub
frstor
cmp
and
sti
xchg
mov
sbb
lret
je
aad
setne
mov
sbb
mov
out
je
mov
jo
fdivrs
cltd
mov
lock
hlt
jo
cmpsb
xor
mov
and
add
sub
paddsw
cmp
cmc
cmpsl
stos
imul
pushf
ds
pop
js
popa
sbb
push
cs
cli
sub
push
xchg
mov
lock
stc
pop
icebp
sar
lock
ja
add
cmp
call
lcall
push
xor
shll
mov
cltd
lret
push
xlat
ljmp
xchg
push
dec
aaa
mov
loopne
popa
push
pop
loope
adc
cltd
aas
cmp
movsl
push
sub
sub
pop
sbb
std
push
fisubrs
pop
push
nop
cmpsl
mov
stos
into
shrb
or
loopne
jbe
mov
adc
shrb
fwait
rorb
push
lds
icebp
lret
pop
add
inc
pop
dec
add
push
fnstcw
jle
mov
mov
loopne
lahf
shll
ds
fwait
lods
sarb
mov
in
push
test
mov
cltd
or
add
push
rorb
sbb
repz
xchg
push
into
inc
dec
fcomip
scas
or
pop
in
push
add
push
and
push
sar
call
mov
stos
xchg
xor
dec
clc
mov
xor
sbb
clc
fcmovu
imulb
imul
lahf
gs
movb
mov
movsb
xor
cmp
jnp
negl
and
jge
jno
repnz
sub
stos
cmpb
mov
movsb
scas
aaa
jp
jecxz
mov
mov
xchg
cmp
mov
movsb
cmp
icebp
sbb
sbb
xor
push
shl
or
sub
push
aad
push
pop
dec
iret
add
push
nop
test
enter
push
jns
sti
mov
pushf
adc
std
pop
ss
pop
outsb
in
mov
imul
cmovnp
mov
out
adc
jecxz
scas
add
xchg
fstps
cmpsb
push
cld
adc
out
cli
dec
or
cmc
mov
sahf
leave
repz
call
loop
xor
in
jno
pop
pop
adc
push
add
mov
cmpsl
rcr
mov
aaa
pop
jg
mov
dec
jns
stos
pop
xor
adcl
mov
dec
lock
out
rcll
icebp
pop
cmp
jg
gs
loop
test
mov
mov
adc
push
outsb
cmc
jge
rcl
mov
sbb
bound
ret
jp
mov
sti
adc
in
in
lods
push
push
pop
je
fisubs
mov
xchg
sbb
dec
xor
mov
xor
jecxz
subl
sahf
push
or
jmp
or
xchg
mov
iret
adc
mov
xchg
fidivrs
and
xchg
rclb
pushf
imulb
out
pusha
adc
cmpsl
imul
mov
fs
loope
ds
inc
or
popf
mov
shl
push
rcll
xchg
fisubs
in
enter
cmpsl
mov
movsb
fildll
addb
inc
movsb
pushw
rclb
adc
xchg
imul
rolb
add
jbe
jae
sbb
icebp
frstor
or
leave
xor
outsb
xchg
inc
cmp
dec
cld
inc
bound
sub
lods
push
and
sub
decb
and
dec
and
push
aad
cld
sub
sub
pop
push
cmp
adc
pop
xor
sbb
pop
in
sar
jne
mov
divl
popf
nop
mov
fwait
daa
mov
sbb
pop
pop
jmp
mov
push
sbb
dec
dec
sub
bound
dec
add
sarb
cmp
xchg
mov
int3
fsubs
fildl
push
add
fsubrs
fidivs
jne
ret
popa
fsub
mov
outsl
cli
cmpsl
cli
cmp
inc
add
cmp
cmp
pop
in
int3
mov
pop
jg
mov
das
sarl
mov
les
rorb
push
cmp
movsl
aad
popa
jecxz
pushf
mov
dec
and
scas
stos
dec
hlt
mov
cmpsl
adc
or
mov
iret
movsb
mov
xor
test
aam
cwtl
imul
fistl
push
mov
imul
xor
data16
inc
jge
lret
or
xor
rclb
pusha
cmp
pusha
pop
mov
test
mov
stc
clc
into
cmovne
mov
and
adc
int
cmc
cli
cmpsl
pop
adc
insb
pop
push
and
adc
andb
mov
fbstp
add
or
push
pop
sub
mov
lahf
stos
rol
xor
insb
movsb
psubb
addr16
or
ror
sub
mov
push
test
std
daa
hlt
mov
loopne
push
cmp
arpl
cmpsb
cltd
push
icebp
stc
addb
popf
mov
subb
jmp
or
fs
xlat
movsb
sbb
dec
mov
mov
lcall
adc
rcrl
adc
cs
push
daa
sub
sub
mov
sarl
push
xchg
sti
jo
adc
adc
mov
cld
jb
mov
mov
push
jns
jbe
out
cmc
or
push
xorl
inc
mov
push
jo
loope
adc
adc
divl
jae
sbb
pop
addr16
xchg
in
ds
repz
out
sbb
shlb
cmpsl
in
cld
outsb
push
sti
jp
out
clc
int
jl
jbe
insl
xchg
scas
pop
outsb
in
pop
mov
xchg
sbb
xor
imul
jecxz
push
cwtl
in
imul
mov
out
add
clc
push
fisubs
nop
sub
mov
ret
insb
fstpt
dec
cmpsb
cmp
pop
jmp
add
aaa
bound
loop
sbb
cmp
mov
sbb
push
sub
les
inc
jecxz
or
inc
and
pop
fs
lret
roll
fldcw
lret
jns
mov
sbb
cmp
mov
addl
inc
dec
mov
sub
dec
adc
iret
and
ljmp
mov
mov
loope
outsb
xchg
mov
in
call
jecxz
pop
ja
idivb
hlt
and
sub
les
stos
ret
push
xlat
push
jmp
loopne
es
jg
mov
add
xchg
mov
fwait
mov
icebp
or
cmpsb
mov
add
lret
inc
sti
rolb
or
or
xchg
cmp
mov
push
mov
fbstp
cld
mov
pop
cmp
int3
inc
mov
add
out
jne
test
jb
pushf
push
iret
inc
mov
sub
mov
sub
int
outsl
jl
add
dec
inc
lret
sbb
mov
bound
std
cmp
pop
insb
inc
xchg
push
or
jnp
je
jno
or
sbb
sbb
push
imull
sub
push
loop
inc
stos
sti
aas
add
dec
out
jo
push
sub
jbe
add
sub
inc
outsl
popa
lea
arpl
xchg
pop
int
popa
cs
mov
test
decl
xor
aaa
outsb
jp
or
add
cli
inc
out
sub
adc
dec
pop
pop
mov
cmp
pop
inc
sub
adc
jb
pop
jns
call
jg
fnstsw
cltd
stc
int
fwait
adc
fisubrl
ljmp
sbb
iret
notl
or
fwait
dec
mov
push
adc
lret
repz
iret
inc
repz
jo
jge
scas
jge
and
push
mov
xchg
mov
insl
jno
jp
mov
enter
push
mov
xchg
icebp
push
mov
lds
movsb
mov
pop
mov
jp
xor
mov
cmp
sahf
rolb
inc
jo
xchg
lret
add
inc
scas
unpcklps
dec
int
shll
dec
cmp
mov
dec
dec
push
andl
mov
xchg
xchg
test
daa
outsw
sub
xchg
rclb
push
inc
add
fcompl
inc
push
sub
icebp
mov
movsb
jl
push
mov
mov
mov
adc
sub
sub
pop
lahf
out
aad
fdivrp
out
inc
je
mov
push
jns
shlb
es
add
test
xchg
and
mov
scas
in
je
loopne
add
mov
stos
sub
stos
mov
dec
test
gs
xchg
sub
xchg
mov
popa
mov
adc
add
push
sbb
gs
jno
mov
faddl
lock
push
into
sahf
push
cld
mov
imul
cs
dec
xor
sbb
cmpb
loopne
adc
lret
inc
aad
mov
orl
adc
fs
das
inc
fisttpl
dec
pusha
inc
push
xchg
fcmovnu
inc
pushf
rclb
add
orl
inc
and
paddq
inc
lods
cltd
push
out
jle
movsb
enter
or
push
fcoml
or
int
mov
clc
rcrb
push
mov
sub
clc
mov
sahf
mov
pop
aad
mov
push
pop
inc
adc
stos
cmpsb
shll
loop
pop
jo,pt
int3
mov
jbe
fsub
add
dec
scas
mov
sub
mov
pop
cmpsb
ror
mov
mov
idivb
or
jle
int3
leave
pusha
or
aam
mov
out
mov
jno
mov
ja
fstps
ljmp
or
out
mov
out
jl
imul
or
insl
push
inc
popa
or
int
mov
stos
push
fsub
sbb
cmp
ss
and
add
adc
cs
icebp
adc
movsb
sub
xor
shl
outsb
icebp
adc
adc
movsl
xlat
and
notl
faddl
fcomps
stos
addl
sbb
mov
lock
or
inc
into
pop
lahf
test
int3
mov
subb
cmp
stos
lods
mov
in
gs
es
into
pop
dec
ljmp
dec
sub
add
jb
shlb
jmp
jle
dec
scas
cmpsl
fs
cwtl
lret
les
push
pop
lcall
adc
out
nop
lods
or
cmp
imul
xor
push
cmp
or
and
mov
sbbl
dec
pop
adc
xchg
icebp
jmp
lds
mov
xchg
fisubs
inc
jo
adc
inc
xor
push
jecxz
int
pop
mov
adc
add
pop
adc
mov
fwait
mov
stos
scas
dec
jbe
cmp
fcomip
sti
std
test
mov
add
lea
xor
lock
outsl
fcmovnu
in
incl
xor
out
in
fisttpll
ret
cwtl
scas
xchg
test
push
sbb
lea
gs
mov
pop
inc
push
test
sarl
sbbl
mov
out
cld
add
or
out
aad
test
jne
inc
sarl
jne
sti
fcoml
xor
outsl
pushf
add
cs
adc
daa
into
packssdw
repz
sbb
imull
lods
inc
stos
movsb
ss
mov
test
test
mov
shll
xchg
sbb
mov
jge
jmp
incb
mov
movsl
add
xchg
and
and
cwtl
leave
std
mov
sub
inc
setle
xor
dec
int3
and
bound
jnp
mov
shr
lret
arpl
mov
pop
repnz
cltd
cmp
in
pop
ret
add
loope
fcmovnbe
lods
jo
or
jle
inc
jns
insb
xor
sbbb
mov
pop
mov
pop
sub
jno
movsl
adc
push
aas
mov
jle
leave
mov
in
jle
es
mov
pop
mov
push
sbb
mov
in
lret
in
icebp
and
lods
movsb
ja
cmpsl
jle
xor
jb
out
xchg
hlt
scas
push
xor
mov
push
icebp
icebp
fdiv
add
pop
je
adc
inc
je
in
jne
mov
and
loope
cmp
jl
jae
cmp
aad
xor
popa
or
cmp
xchg
ljmp
xchg
jge
cmp
clc
push
movsl
test
dec
mov
fnstenv
xchg
xchg
jp
nop
jo
imul
rol
in
mov
xor
rcl
adc
shll
jg
jl
inc
out
inc
xchg
fisubs
cmp
or
sbb
cmp
inc
mov
fists
xchg
ds
push
xchg
push
out
pop
dec
andb
fst
lahf
and
in
js
inc
xchg
mov
shll
and
shrl
ds
les
jne
outsb
ss
or
fisubs
cmp
insl
jo
xor
std
inc
and
mov
pop
jnp
lret
sbb
add
popf
ret
adc
cmp
sbb
xor
jns
js
inc
ss
push
lds
cmpsb
loop
test
fcmovnbe
fcmovu
mov
arpl
mov
pop
ja
push
mov
jmp
test
clc
lods
cwtl
lods
ret
addr16
push
push
jle
and
loope
xor
inc
cwtl
adc
adc
pop
jge
xor
jp
cltd
xchg
or
sub
push
xchg
xorl
adc
scas
push
int3
stc
sti
mov
jg
cmp
and
sbb
arpl
addr16
cmpsb
dec
xchg
scas
add
lret
jnp
jp
or
hlt
dec
loop
jmp
sahf
mov
xchg
mov
sub
es
enter
fchs
andb
inc
sbb
arpl
jle
bnd
dec
jno
xlat
js
sub
cmp
dec
sti
int
mov
adc
rcrb
xor
movsb
jge
das
cmpsl
add
enter
xchg
into
lret
mov
mov
adc
xor
stos
pop
test
cmpsb
or
test
jg
sarl
mov
xchg
dec
pop
mov
insb
cmp
shlb
pop
sbb
inc
xchg
push
outsl
jle
mov
repnz
jp
jge
scas
jns
add
test
out
adc
scas
aas
adc
lods
jg
stos
mov
xlat
mov
xchg
xchg
pusha
jb
mov
out
xchg
aaa
roll
call
fwait
or
pop
cmp
in
aaa
lock
ss
mov
mov
in
cltd
jbe
mov
mov
jb
dec
and
fsubrl
sub
sub
pop
cwtl
rclb
inc
push
ljmp
pushf
lret
add
inc
mov
mov
jb
out
adc
pop
add
out
xchg
xchg
and
outsl
cwtl
ret
sbb
mov
xchg
dec
push
jle
mov
bound
cltd
cld
or
imul
call
dec
fs
mov
jbe
or
movd
ret
je
aaa
scas
insl
fs
pop
fidivs
xorb
mov
jno
testb
fdivl
mov
add
cmc
movsb
jne
das
push
jnp
insb
fldcw
and
push
adc
push
lea
sbb
and
xchg
xor
mov
jl
rcrb
add
imul
int
nop
add
mov
out
mov
aaa
cmp
jg
sbb
inc
shl
xchg
push
ss
out
jmp
shlb
push
add
xor
add
push
xchg
sub
jne
lret
adc
sbb
lods
mov
sbb
pop
mov
les
rorl
cmp
pop
pushf
cmp
or
sub
and
push
enter
mov
iret
fpatan
outsl
mov
sbb
repnz
add
lcall
xchg
pop
int3
popa
shrb
loopne
adc
dec
daa
mov
popf
icebp
push
cmpsb
shr
outsb
imul
pop
idiv
cmp
ss
mov
adc
popa
xadd
into
add
outsl
add
and
pop
das
dec
mov
sub
add
and
lock
sbb
pop
mov
sti
dec
adc
sub
add
mov
mov
inc
and
lea
lret
lock
xchg
fldenv
ret
ret
pop
mov
adc
push
jg
dec
cld
icebp
in
jo
mov
inc
push
in
jnp
mov
add
or
jne
mov
xchg
push
lods
call
scas
dec
mov
mov
dec
push
out
in
ret
cmp
enter
outsb
movsb
arpl
rol
pop
lds
sbb
xchg
inc
cs
mov
jecxz
push
sbb
pop
or
jle
sbb
clc
mov
cld
lods
sub
push
das
push
lods
mov
stc
lret
rcll
testb
jle
imul
mov
jo
mov
mov
push
mov
xor
addl
gs
pop
mov
aas
add
inc
ljmp
rcrl
and
enter
pusha
xchg
xor
sbb
or
xor
call
mov
test
xor
test
mov
or
jno
xlat
push
repnz
decl
rcrb
or
fildll
add
es
aam
and
add
hlt
jno
scas
nop
jmp
int3
cmp
pop
mov
push
push
cmp
xor
push
call
sbb
shl
lods
inc
imul
push
pop
sub
je
mov
xchg
fisttpl
inc
and
je
sub
in
mov
fldcw
pop
fld
dec
mov
xlat
inc
push
inc
out
cmc
mov
dec
cmpsl
icebp
push
push
push
sub
push
push
ret
cmp
jae
cmp
inc
cmp
sub
ljmp
dec
sbb
fldl
sti
das
add
aas
sub
insb
sar
stos
and
jge
aaa
aas
sub
or
sti
xchg
js
flds
jp
fistpl
mov
mov
push
cmc
mov
mov
das
dec
cmp
xor
aaa
into
pop
and
xor
jae
jnp
icebp
sub
mov
mov
jne
inc
sbb
loope
dec
pop
and
bound
push
cmp
je
fldl
push
and
sub
into
mov
dec
mov
xor
lods
pop
cli
adc
adc
push
xor
adc
pop
push
or
lcall
fimull
inc
and
shlb
div
fnsave
nop
xchg
dec
adc
dec
or
rcr
jecxz
leave
cld
sub
cmp
repnz
rcrb
cltd
push
inc
lcall
lock
push
push
mov
cmp
subb
cmp
lods
push
adc
adc
std
cmp
xchg
inc
in
xor
cmpsl
hlt
cmpsl
sub
mov
nop
jne
push
nop
sub
or
ja
inc
sti
imul
inc
jp
push
int3
aas
xor
jns
mov
jns
and
mov
cmp
call
jecxz
and
ja
bound
into
and
lods
inc
lods
pop
pusha
rcr
pop
ret
cmp
add
sub
mov
sbb
xor
es
push
jle
cmp
xchg
xchg
stos
imul
imul
mov
mov
jmp
mov
sahf
fcoml
cmpsl
xlat
xor
js
xor
pop
aad
dec
inc
dec
inc
sbb
shrb
sub
pop
jmp
inc
push
jmp
or
jge
xchg
xchg
add
adc
mov
mov
int3
shl
out
insl
hlt
pop
add
adc
cwtl
inc
adc
das
out
jns
push
push
lea
or
jne
shrl
lods
das
jo
inc
ja
movl
sbb
jb
test
push
mov
add
push
dec
xchg
push
or
xor
adcl
sti
mov
ja
stc
sbb
mov
xchg
and
mov
les
add
lret
xchg
cmpsb
fidivl
and
cmp
dec
inc
pop
sub
lock
dec
and
push
jecxz
stos
dec
pusha
adc
mov
movl
xchg
and
lods
in
pop
push
out
outsb
inc
int
jecxz
sbb
nop
dec
int
in
daa
inc
movsb
and
insl
clc
scas
shll
movsb
mulb
out
dec
pop
stos
mov
pop
iret
lods
std
push
push
nop
pop
inc
je
addb
sahf
xlat
dec
lds
xchg
and
push
mov
jnp
adc
push
mov
lods
xchg
clc
dec
das
mov
popa
xor
cli
and
inc
mov
dec
popa
lods
push
mov
js
lret
dec
xchg
push
js
pop
or
pop
inc
jecxz
fs
lahf
xchg
pop
mov
xor
aad
mov
or
xor
xchg
movsb
fiadds
movsl
mov
repz
leave
jge
xchg
dec
cmpsl
imul
fcom
icebp
inc
testl
in
add
popf
in
push
cmp
into
shrl
testl
daa
add
fcomps
dec
pop
cmp
mov
clc
jne
mov
jnp
sarl
ret
jp
push
pop
sub
sub
insl
xchg
cmp
rcr
pop
call
push
aad
mov
in
pusha
jge
inc
jns
push
push
lcall
pop
mov
mov
adc
mov
ret
out
jmp
fsub
repz
iret
fs
les
cld
pop
bound
loop
adcl
pushf
push
xor
lods
sub
push
mov
enter
cmp
rolb
cld
cmp
es
out
mov
fbld
push
bound
push
out
ljmp
stos
jmp
xchg
xor
fsubs
add
je
sar
enter
push
lods
jo
mov
and
scas
push
ds
mov
lea
inc
ret
mov
mull
cmp
out
adc
pop
scas
adc
mulb
cmpsb
push
cmc
mov
sbb
push
dec
lods
xchg
jns
dec
rcll
push
pusha
or
ret
ret
jbe
jne
aad
xor
push
push
xrelease
rorb
fisttpll
lret
lock
pop
lods
inc
ret
or
aam
hlt
mov
stc
mov
cmp
shrb
movsb
xchg
and
pop
push
add
or
xor
and
out
cmp
sbb
jnp
adc
xor
mov
outsb
push
xlat
sbb
dec
jne,pn
mov
adc
outsb
xchg
or
sub
lds
jp
push
imul
inc
fs
sbb
inc
mov
imul
cmc
mov
xchg
sarl
imul
int3
ret
mov
adc
fnstcw
pop
or
cld
das
xchg
sub
xchg
mov
jl
push
jecxz
push
mov
mov
adc
flds
aam
adcl
sub
lds
bound
dec
pop
cmp
adcl
loope
insb
dec
addr16
add
data16
sub
fsts
pop
int3
in
or
push
xchg
jl
or
imul
jl
sub
icebp
inc
arpl
fdivrs
jae,pn
dec
out
dec
daa
pop
loopne
jle
dec
dec
rcll
gs
fwait
shrb
pop
jmp
dec
shll
decl
pop
push
loopne
push
shlb
inc
add
notb
dec
fldenv
mov
inc
int3
mov
gs
das
xchg
imul
lcall
jle
cmp
mov
ret
fbld
das
dec
and
pop
icebp
push
adc
mov
cltd
daa
add
pop
jl
mov
lret
enter
shll
inc
mov
mov
or
test
jo
mov
sbb
nopl
dec
test
jbe
cmp
iret
and
add
not
mov
mov
push
jne
leave
hlt
jl
adc
cld
filds
adc
dec
mov
test
xchg
or
push
je
shl
test
aaa
rclb
dec
jmp
loop
ja
add
mov
cmp
leave
notb
loop
popf
lret
dec
outsb
dec
movsb
add
jp
xor
add
mov
add
cmp
lea
pop
xor
pop
hlt
in
sti
or
mov
pop
add
bound
lods
stc
mov
out
cmovg
out
orl
arpl
jne
mov
into
subl
mov
aas
sbb
mov
inc
fdivrl
into
inc
xchg
add
int
repz
mov
inc
rcr
jne
sub
xchg
nop
fnstcw
dec
cmp
cmp
popf
outsl
gs
cld
popf
nop
xor
mov
ret
shl
pop
into
push
es
enter
cmpsl
jle
lcall
mov
ljmp
js
loop
insb
out
iret
inc
lea
sub
dec
and
mov
pop
jns
jp
in
jo
test
jge
jge
sub
popa
sub
sub
xor
aas
lds
inc
repz
das
xchg
fs
mov
pusha
adc
gs
cmp
and
xchg
mov
fwait
sbb
cwtl
sarb
das
xchg
nop
xchg
addr16
sbb
xorl
scas
mov
lret
add
sahf
mulb
sbb
xor
ds
xlat
mov
repnz
mov
fisubrs
loop
pushf
fstpl
lahf
pop
jmp
clc
push
add
mov
push
jle
mov
mov
mov
ficoms
mov
mov
ljmp
xchg
lock
cmc
xchg
out
ja
fiaddl
dec
out
jge
and
bnd
cmp
clc
icebp
hlt
inc
das
stos
lahf
mov
mov
push
nop
and
mov
or
hlt
scas
int3
xchg
into
push
cs
jg
xchg
mov
push
pop
in
insl
sub
movsb
push
aam
inc
cmpsl
stos
rol
cld
roll
jo
popa
enter
dec
cwtl
repnz
pusha
or
push
sbb
out
out
fs
xor
xor
jb
sbb
fs
add
notb
roll
fnstcw
and
sarl
imul
xchg
imul
fnstenv
adc
stos
je
test
ret
stos
adc
push
leave
and
subl
out
xor
xchg
sti
pop
insl
xor
add
test
cmp
mov
in
loopne
cmp
push
mov
xchg
stos
xor
aaa
insl
mov
out
jns
into
sub
or
cmpsb
sub
push
jb
ficoml
dec
insb
cmpsb
cwtl
rep
add
je
and
mov
or
pop
in
xchg
in
stc
pop
insb
arpl
in
add
aam
roll
das
or
enter
pushf
inc
clc
in
mov
inc
jp
negl
cmc
xchg
adc
repz
xor
jno
lret
stc
sub
faddl
or
roll
pop
xchg
push
cltd
ss
adc
sbb
cmc
cmp
pop
pop
jl
rcll
xchg
test
mov
push
or
or
pop
arpl
outsl
and
xchg
mov
imul
ds
imul
lea
pop
dec
add
dec
add
popf
aas
push
repz
xlat
push
mov
push
xchg
mov
inc
pushw
xor
jmp
test
aam
pop
ljmp
xchg
jb
das
cmp
pop
dec
je
test
xorl
add
iret
pop
push
cmc
popa
adc
pop
outsl
test
fildl
js
int
mov
push
jae
stc
ret
stos
insl
inc
push
sahf
clc
or
rorl
jbe
lahf
nop
jns
enter
mov
push
and
mov
cmc
lods
sub
ret
pop
fdivr
outsl
sbb
cmpsl
push
sahf
pop
repnz
xchg
shll
sub
sarl
dec
ds
adc
daa
stc
movsb
imul
mov
ds
jge
repz
das
in
jno
dec
lahf
adc
in
out
popa
inc
out
aam
es
xchg
pop
jnp
stc
cmc
mov
add
and
xor
pop
cmp
and
jp
inc
jns
rol
ret
sbb
mov
aas
leave
add
ja
jle
shl
das
jne
add
test
jb
outsb
fists
push
std
sub
fldl
and
fidivrs
or
shll
pop
push
or
in
fildll
lcall
lret
pusha
jo
into
test
add
adc
mov
lods
enter
or
jmp
stos
and
cltd
or
mov
int
inc
push
jbe
push
scas
adc
pop
inc
popa
mov
dec
orb
push
push
test
mov
jno
sub
loope
sti
stc
and
dec
or
adc
mov
ret
cltd
mov
and
and
and
lea
and
pop
repz
mov
jp
sahf
xchg
les
in
or
dec
jb
pop
cmpb
xlat
push
jbe
mov
jo
out
sbb
mov
mov
shl
hlt
outsb
cltd
xor
in
sbb
pmaxub
pop
xchg
das
mov
popa
icebp
pushf
fists
jg
sbb
pop
mov
or
inc
and
adc
ds
shll
arpl
jl
sub
mov
fstpl
rcr
stos
pop
pop
push
xchg
inc
loopne
fistpl
jmp
repz
pop
inc
ljmp
mov
shll
int3
add
xchg
xchg
mov
jnp
adc
mov
mov
and
loop
mov
and
leave
sbb
push
pop
test
sbb
das
subb
paddusw
lcall
fadd
nop
insl
jmp
ret
jno
sbbl
jae
and
pop
dec
xchg
in
mov
cmp
mov
cltd
call
fistpll
sub
add
xor
cmc
add
stc
jae
dec
arpl
out
insl
mov
jle
ret
and
xor
jnp
fadds
xchg
out
loop
out
sahf
mov
fsubs
lret
mov
outsb
rol
xchg
test
push
repnz
add
mov
sbb
aas
pushf
shll
xor
pop
dec
loope
bound
adc
pop
cmpsb
jmp
jmp
aad
sahf
aam
dec
sbb
mov
adc
mov
orb
mov
out
sbb
shll
in
rcl
inc
repnz
mov
arpl
int3
pusha
mov
and
mov
xorl
popa
iret
pushf
dec
cltd
out
push
stc
shrb
negl
stc
and
cmp
sbb
aaa
inc
sbb
mov
mov
adc
mov
imul
popf
mov
out
mov
inc
aad
in
cmpb
mov
in
negb
lds
popa
std
adc
xchg
push
add
inc
jge
jmp
stc
sbbl
hlt
stc
test
ds
add
out
mov
push
loopne
rsm
sbb
xor
sbb
mov
test
jmp
in
das
in
add
cld
and
sahf
rorl
xlat
mov
inc
adc
cmp
add
jo
hlt
cmp
pushf
inc
faddl
cmp
test
inc
or
cmpl
aam
cmp
bound
enter
scas
insl
xchg
or
jge
or
mov
pop
add
dec
mov
lahf
sbb
shrl
les
jne
cmp
fwait
cmp
ja
jp
dec
push
cmp
add
addr16
adc
adcl
adc
sub
jmp
movsb
arpl
daa
add
subl
inc
data16
repnz
pop
dec
cmp
or
movsl
int
shlb
lea
adc
pop
mov
mov
nop
jle
inc
lds
mov
mov
sbb
push
insb
fidivrl
xchg
jl
xor
data16
cmp
mov
add
xor
lods
sbb
ficompl
mov
insl
insl
cmp
dec
pop
in
pop
cmp
aad
scas
jge
push
leave
imul
jp
xor
ss
fstpt
stos
xor
bound
cmpl
adcb
loope
mov
shll
mov
mov
call
pop
or
aad
loope
sarb
pop
in
fsubrl
sub
sbb
mov
insb
movsl
shrb
push
aad
mov
lret
jp
lret
aaa
mov
stc
repz
pop
imul
repz
rcl
inc
fnstsw
adc
shll
sbb
jbe
ret
xchg
shl
and
mov
push
shl
ds
lds
lock
inc
xor
xor
outsl
or
and
jae
adcb
adc
xchg
dec
dec
neg
cmpsb
pop
push
pusha
jnp
cmp
movl
out
sub
sub
int3
ja
pop
dec
sti
sub
xchg
pop
pop
mov
pop
jb
push
jecxz
and
xchg
push
js
sbb
hlt
add
icebp
bound
mov
jno
pop
cmp
fcmovnu
xorb
clc
dec
jne
or
push
mov
ds
xchg
xchg
push
call
in
xor
mov
or
aam
popf
gs
and
test
jo
xor
cmp
lret
xchg
in
bound
xchg
pop
mov
mov
or
out
xor
test
dec
lea
stos
cwtl
adcb
or
or
jle
add
ds
xchg
lock
sub
inc
or
fldl
dec
clc
loopne
imul
mov
jmp
cmp
mov
les
or
stos
sbb
pop
fcomi
pusha
cld
mov
aad
add
popf
pop
pusha
dec
cmp
mov
dec
std
mov
std
arpl
out
out
xchg
cli
pop
mov
cmp
pop
xor
imul
repz
pop
lds
inc
and
adc
fcmovnb
sti
and
adc
jns
mov
dec
andl
je
mov
cwtl
jae
in
adc
pop
add
inc
test
mov
out
fcmovbe
jno
out
cmpl
cmp
icebp
js
outsb
push
movsb
lods
or
popf
je
sbb
and
inc
xchg
enter
push
stos
cwtl
cli
std
aas
push
jle
inc
jmp
mov
inc
test
mov
lret
add
sbb
jl
imul
shl
int3
fisubrs
adc
jg
mov
ljmp
mov
fwait
out
jb
mov
mov
icebp
mov
les
fs
sbb
and
inc
cld
jb
push
jne
mov
popa
movsb
pop
jbe
das
lods
adc
adc
push
mov
in
adc
icebp
xchg
or
test
adc
sbb
lods
mov
sbb
jl
daa
roll
adc
in
ss
and
sbb
push
sar
nop
push
jge
cmpsl
pushl
pop
mov
nop
push
loop
imul
cmc
arpl
lods
mov
loopne
mov
mov
lret
loope
test
pop
hlt
dec
and
in
movsl
push
mov
cwtl
adc
iret
movsb
daa
shl
sbb
idivb
sub
jge
fimuls
jecxz
add
jmp
into
xchg
sti
out
mov
loopne
sub
nop
push
or
in
sbb
sbb
mov
daa
int
dec
dec
rorb
push
gs
and
rcrl
mov
imul
leave
mul
icebp
mov
mov
lea
pop
out
cli
mov
mov
jg
mov
cmp
mov
ret
add
sahf
jg
aam
dec
mov
xor
add
pop
ljmp
enter
scas
iret
jecxz
jg
pop
leave
push
pusha
or
jle
les
icebp
cmp
inc
mov
mov
jmp
mov
push
dec
or
adc
stc
pop
adc
push
xor
xchg
push
int3
arpl
cmp
mov
push
in
jge
dec
fidivl
lret
or
das
enter
jp
xor
imul
sub
lret
and
mov
add
icebp
rcrl
push
mov
pushf
je
movl
mov
fwait
rorb
cltd
lea
sbbb
pop
push
jb
add
cmpsl
insl
dec
inc
adc
insl
fsts
cmpsb
cmp
popf
stc
imul
sbb
mov
push
loop
mov
jb
ret
in
xchg
test
enter
lret
mov
inc
mov
mov
xor
sbb
cs
cmpsb
or
push
dec
and
mov
out
xchg
out
add
sbb
sub
insl
xchg
jbe
fisttps
int
xor
fld
aaa
dec
add
popf
jae
or
stos
faddp
mov
mov
mov
push
sbb
sar
push
inc
or
and
pop
fucomp
pusha
andb
cli
popa
scas
mov
clc
clc
cmp
cmc
jae
and
int
data16
sbb
cli
ds
hlt
cmpl
mov
sub
jb
or
add
pop
cmp
int
js
ljmp
repz
in
ljmp
add
pavgw
fstpt
addb
lock
cmp
pop
add
mov
or
xchg
stos
push
int3
lcall
pop
cwtl
add
mov
jo
stos
jo
out
popf
enter
xchg
pop
xor
xchg
outsb
das
test
es
rcrb
jmp
and
stos
je
pop
adc
adc
push
xor
stc
pop
mov
fistl
xchg
push
xchg
xchg
jl
out
pop
mov
xor
cmpsl
out
adcb
fimuls
cmpl
xor
imul
jnp
sub
xor
mov
int3
push
inc
call
sbb
xor
rcl
add
gs
cs
movsl
mov
into
mov
inc
pushf
inc
mov
mov
scas
pop
mov
cmpsl
push
adc
cmp
pop
push
push
icebp
and
js
inc
add
pop
pop
ljmp
test
inc
xchg
or
roll
jno
inc
repz
pop
push
inc
dec
or
mov
mov
lds
push
iret
add
pushf
movsl
lret
imul
xor
testl
mov
ja
bound
mov
jle
popa
js
or
movsl
xor
xor
mov
dec
sub
cmp
jno
pushf
bound
xchg
das
pop
int
or
pop
jp
rcrl
addr16
fadd
adc
je
pop
jo
ret
in
or
mov
in
sbb
mov
ss
mov
jno
mov
iret
insb
push
ss
test
push
sub
mov
lock
rclb
xor
mov
push
push
cmc
test
test
hlt
outsl
adc
xchg
lea
add
jle
xor
clc
sub
inc
pop
cltd
sbbl
pop
jecxz
inc
adc
mov
movsb
push
dec
int
push
loope
fidivs
fldl
sarl
aas
adc
loopne
outsl
arpl
xchg
cld
push
ffreep
xchg
fisubrs
movsb
jmp
add
popa
out
fdiv
popa
outsb
fcmovnb
fwait
enter
cmp
jbe
mov
pop
lods
leave
xlat
mull
mov
pushf
in
outsb
mov
frstor
cmpsb
mov
xor
jmp
popa
stc
mov
lret
or
sahf
movsl
jnp
pop
fsubl
daa
push
js
aaa
clc
sbb
push
adc
dec
fistl
pushf
sti
sbb
sub
jae
add
xchg
jae
in
and
clc
out
xchg
mov
bound
in
adc
into
sbb
sub
fs
mov
mov
xchg
xchg
shll
negl
push
lahf
lock
in
mov
push
xor
pop
jae
cmp
imul
jl
shll
push
insl
test
movsb
xchg
pushf
fiadds
int
bound
and
nop
stc
fimull
inc
ret
inc
dec
mov
in
movsl
lahf
shlb
dec
inc
int3
inc
jnp
test
push
mov
in
xchg
out
sbb
loop
js
adc
mov
cltd
icebp
and
xor
popf
sbb
aad
mov
inc
sub
cmp
jmp
sub
add
popf
xor
mov
push
jno
xchg
push
mov
sub
imul
mov
jle
js
ret
cwtl
hlt
dec
and
movsb
mov
call
sahf
addr16
hlt
std
je
lods
fidivl
push
fsubl
repz
outsb
xor
mov
cmp
pushf
mov
push
imul
cmpsl
cli
aaa
inc
and
pop
cmp
or
jg
or
and
andb
sahf
scas
add
pop
mov
add
mov
lretw
sub
ss
movsl
ja
stc
mov
sub
setne
adc
push
es
mov
scas
or
outsl
dec
lock
xchg
jl
pop
call
pop
add
stc
inc
jne
inc
cs
or
mov
mov
std
sbb
ret
push
jmp
jmp
and
fwait
cmp
fisubs
test
stc
jbe
add
cmpsl
imul
xchg
sbb
jnp
dec
and
xor
mov
jge
jae
stos
aam
xchg
ds
lahf
stc
jae
lods
repz
or
add
and
pop
inc
jle
xchg
cmp
or
inc
push
mov
dec
mov
push
loop
lahf
sub
xchg
fsubrs
pop
imul
sti
and
hlt
mov
popl
xor
movaps
xor
inc
arpl
xor
mov
adc
inc
xor
pop
outsl
aaa
push
stos
push
shrl
cmp
jno
mov
lea
fs
out
out
cmc
cli
or
test
push
push
mov
aad
cmp
xchg
shlb
mov
cmp
dec
ror
xchg
lret
mov
sbb
jno
adc
and
xlat
mov
mov
cmp
mov
cmp
and
and
cmp
scas
pop
cmpsb
jp
mov
xchg
stos
aaa
cmpsb
stos
arpl
stos
movsb
js
mov
adc
push
out
fnstcw
repz
xor
in
push
ret
xor
out
xor
xchg
xor
fdecstp
mov
int
or
adcl
fs
pop
icebp
popa
dec
jg
push
sbb
cwtl
test
pop
pop
mov
fisttpll
stos
cmp
dec
dec
clc
xchg
jmp
in
dec
fidivl
and
and
and
mov
addr16
mov
xchg
and
dec
arpl
enter
or
dec
ret
xor
xchg
xchg
mov
or
jo
mov
and
pusha
push
push
push
out
arpl
push
pop
movl
rolb
test
adc
aaa
xchg
dec
jg
push
ficoms
xchg
sbb
or
stc
es
int3
fwait
inc
inc
mov
xchg
shrb
mov
daa
fidivrs
xor
xchg
jecxz
imul
push
xor
fstpl
jmp
jb
pop
out
jp
sbb
insl
adc
loope
stos
jb
xchg
int3
or
cmp
lds
xchg
fnstcw
mov
out
bound
sbb
jmp
jae
std
cmp
pop
xor
cmp
add
mov
or
mov
inc
mov
int
jnp
or
push
pop
add
outsb
mov
adc
push
sbb
out
int3
pop
xor
out
call
xor
push
icebp
xchg
hlt
inc
movsl
je
jge
inc
repz
dec
xor
das
psadbw
gs
cmp
popa
ror
cmp
inc
push
lea
sub
pop
bound
dec
inc
das
stos
fidivrl
lock
mov
popa
movsb
lret
mov
hlt
ret
push
pop
push
decl
jmp
data16
inc
and
je,pt
iret
jae
rcrl
ret
mov
scas
mov
dec
mov
add
sahf
inc
jge
pop
push
shrb
pusha
stc
insl
lret
adc
lock
movsl
mov
ss
mov
xchg
or
mov
jmp
jbe
popa
push
lea
sahf
insb
jns
mov
jl
cs
adc
cmpsb
stc
jecxz
sahf
jnp
xor
xchg
add
jb
jno
leave
sbbl
std
sbb
data16
lret
pop
xchg
or
int3
xchg
adc
sti
jns
test
lods
xor
jp
inc
push
cwtl
or
sbb
push
mov
outsb
mov
cli
mov
fistps
xor
jl
xor
subl
xchg
mov
incl
sbb
aam
aaa
cmp
rcrl
out
dec
rorb
notb
into
dec
mov
push
gs
mov
aaa
adc
mov
mov
inc
adcl
adc
sti
outsl
jmp
rclb
xchg
scas
shl
push
cmpsl
inc
mov
out
outsb
je
pop
test
adc
push
aad
push
mov
sbb
leave
push
xchg
xor
push
xchg
rcrl
push
negb
xchg
mov
repnz
jb
in
ret
sub
sub
mov
pop
mov
mov
js
dec
pop
lds
pop
repz
pop
pop
out
sahf
repz
adc
dec
iret
ss
icebp
jo
mov
ret
and
ja
cmpsb
mov
nop
lcall
dec
dec
mov
mov
pop
bound
push
mov
sti
xorb
and
in
push
sub
sbb
mov
and
js
rorb
lods
dec
dec
ds
lock
sbb
daa
rolb
test
push
fildl
fs
and
das
sub
dec
test
ja
subb
pusha
jnp
out
insl
out
xlat
in
xlat
sbb
repnz
aam
cwtl
outsl
mov
xor
mov
jmp
lods
lods
jo
ljmp
jns
pop
mov
jnp
or
cmc
cmc
into
jns
inc
mov
cmpsl
dec
idiv
aad
or
stos
or
ja
mov
add
bound
cld
cli
inc
aaa
inc
cmpsl
pop
push
xor
xchg
dec
sbb
adc
mov
sbb
add
ss
mov
fisttps
mov
xchg
push
inc
fsubr
mov
xchg
cmc
sbb
in
pop
mov
or
xor
imul
add
dec
or
fisubrl
aam
jo
divb
mov
es
mov
xchg
test
sbb
loop
cmp
jno
xchg
leave
xchg
fwait
cmpsb
lea
enter
sbb
jecxz
and
sub
mov
cmpsb
mov
inc
loopne
add
push
mov
mov
lret
outsl
std
in
adc
push
lods
jle
jge
or
mov
jge
push
imul
aad
or
ds
in
adc
fcoms
xchg
and
jb
es
adc
je
add
stc
ljmp
ss
push
repz
cli
xchg
loope
push
int3
loopne
mov
xchg
xor
shlb
call
dec
ds
addr16
push
and
xchg
aad
xchg
movsl
shl
enter
pop
cmp
xor
jp
iret
arpl
sbb
ss
dec
sahf
pop
aad
imul
push
hlt
push
fucomp
xchg
lcall
iret
mov
mov
dec
data16
ljmp
sub
rcl
sub
or
adcl
pop
cmp
sub
std
in
js
xor
pop
cwtl
cmp
mov
aaa
cmp
or
dec
arpl
lcall
cs
cmpsb
add
pop
mov
sahf
xchg
lods
mov
clc
dec
mov
jo
addr16
andps
jle
inc
pop
mov
data16
pop
adc
jo
sbb
je
arpl
mov
ja
push
inc
fsubl
rorl
cmpsl
and
or
mov
xor
rolb
mov
or
dec
cltd
mov
ja
jno
xchg
sub
scas
cs
fbld
xor
sbb
addr16
pop
stos
int
xchg
adc
mov
imul
std
push
dec
pop
frstor
push
mov
test
mov
mov
add
shrl
xchg
push
scas
sub
mov
pop
idivb
jbe
inc
mov
sbb
inc
or
cmp
ljmp
dec
xor
movsl
sub
cmpl
pushf
jge
data16
mov
pop
mov
mov
jnp
pop
shrb
mov
and
xchg
sbb
mov
arpl
mov
sbb
push
lods
inc
cmp
lods
jmp
es
test
cli
push
mov
jae
shlb
sub
iret
inc
stos
push
jo
je
pop
shlb
hlt
rcrb
cld
nop
jbe
movsb
decl
repz
insl
xor
inc
sbb
inc
test
loop
mov
adc
iret
xchg
cs
je
subl
push
loop,pn
clc
push
dec
in
lea
pop
ss
aas
jo
inc
fisubrs
mov
xchg
xor
test
fisubs
iret
xor
mov
in
loopne
mov
dec
dec
sub
ljmp
xor
nop
fmul
in
mov
inc
rcrl
sbb
cmp
dec
mov
mov
dec
inc
and
cwtl
aad
fsubrl
xor
jp
inc
xor
push
out
mov
sbb
jmp
subb
mov
xchg
push
andnps
pop
dec
shr
xlat
inc
mov
int
cmp
adc
into
and
xor
xchg
xlat
lods
push
lea
imul
mov
and
adc
ret
movsb
cmp
mov
out
xor
xor
mov
dec
xchg
cmp
xor
hlt
loopne
inc
jl
inc
xchg
call
push
mov
sbb
out
cs
aad
arpl
push
jmp
jmp
pop
int
cmp
loope
decl
pop
sbb
cltd
mov
cmpsl
movsb
or
dec
js
test
dec
and
xchg
insl
xchg
rcll
lret
pop
adc
stc
in
fisttpl
aaa
js
mov
imul
mov
push
or
mov
mov
rorb
jno
rorb
sub
les
cmp
out
adc
and
fidivrl
lcall
int
rcrb
stc
test
and
rclb
mov
jmp
sti
pop
mov
cli
movsb
cli
ss
and
cmp
pop
cmp
sbbl
xchg
repz
test
test
data16
xor
jo
sub
gs
out
jecxz
inc
push
movsb
sub
mov
jmp
jne
shll
pop
cmp
rclb
notb
sahf
in
xor
cmp
jne
cmp
aaa
xor
xchg
mov
stos
inc
sarl
xchg
adc
fidivrl
je
int3
mov
mov
loopne
call
cld
xor
sti
or
pop
mov
push
pushf
enter
popa
xchg
xchg
push
roll
stos
mov
hlt
or
es
cmpl
mov
je
jo
and
into
push
lock
shrl
and
ljmp
adc
cmpsb
fucomip
pop
dec
adc
decl
test
pop
and
mov
xchg
lods
push
mov
stos
sarb
pop
popf
lds
hlt
sub
sbb
cmpsb
dec
lret
pop
pop
adc
add
add
xor
stos
cmp
mov
jecxz
popa
repz
cltd
push
adc
adc
scas
in
into
outsl
push
xchg
inc
iret
vmread
dec
imul
mov
scas
jmp
mov
sub
andb
cmp
jl
subl
mov
push
xor
xchg
sub
mov
jo
xchg
inc
arpl
iret
sbb
jne
xor
jecxz
out
arpl
mov
jecxz
scas
cmc
dec
mov
pushf
pop
pop
xor
cmc
insb
xorb
xlat
imul
test
or
mov
leave
and
mov
jne
popf
das
pop
xor
add
xchg
lds
divl
jg
shrb
int
pop
cld
pop
into
loop
stos
jo
dec
rcrl
scas
add
xor
iret
scas
sub
xchg
mov
stos
xor
mov
mov
or
into
sti
mov
lret
lods
in
ljmp
inc
outsl
xchg
mov
mov
and
add
ret
dec
js
push
xor
int3
sbb
mov
mov
push
fdiv
jg
and
aad
adc
test
enter
repnz
jae
push
mov
pop
jns
pop
fwait
call
nop
inc
inc
pop
or
cmp
mov
mov
dec
xor
pop
xchg
jne
dec
jbe
lcall
fwait
sub
std
stos
and
fsubs
add
mov
in
cwtl
jle
pop
inc
out
mov
fwait
hlt
inc
xchg
rclb
and
int
push
pop
movsl
inc
push
add
jb
push
stos
mov
mov
bound
push
add
out
dec
mov
or
inc
or
jl
scas
push
rep
jp
cmp
inc
xchg
inc
nop
xor
out
pusha
cltd
cld
jp
jo
mov
mov
pop
cld
add
pusha
pushf
push
les
in
in
mov
pop
inc
mov
xchg
jmp
fdivs
inc
outsl
dec
out
mov
scas
pushf
sub
out
sub
imul
pop
mov
test
adc
and
andb
stos
cmpsl
repnz
mov
jp
xchg
call
jo
inc
lret
js
adc
inc
div
xchg
inc
repz
fimuls
push
sbb
cmpsl
cmpsb
pop
xchg
stos
cltd
mov
jg
lcall
or
add
shr
scas
pop
sub
lret
xor
inc
out
cwtl
xchg
pop
pop
lret
inc
xchg
inc
stos
test
loopne
mov
cmp
lret
fsubr
jo
adc
stos
scas
push
aad
divl
mov
imul
ja
xlat
pop
leave
inc
adc
out
xchg
lcall
cltd
bound
lahf
mov
icebp
push
dec
jne
dec
jg
mov
cs
mov
mov
popa
test
pop
and
cmp
scas
ret
adc
push
mov
sbb
push
repz
xchg
outsb
pushf
xor
pop
cmp
jb
jge
in
xchg
cmp
adc
lea
pop
fs
pop
lret
lret
repz
adc
cmp
xchg
pop
pop
mov
mov
loopne
add
xchg
f2xm1
lret
adc
xchg
inc
xchg
sub
pop
push
inc
xlat
fdivp
sbb
fiaddl
imul
sub
hlt
call
pop
mov
paddq
leave
pusha
iret
xor
lret
jmp
mov
xchg
inc
or
pop
or
gs
or
in
bound
jmp
out
lret
add
fwait
xchg
call
push
bound
push
loope
pop
push
adc
mov
andl
push
push
xor
jnp
and
jae
mov
push
cmpsb
arpl
adc
inc
in
xor
jne
loop
push
or
push
lcall
stos
out
sahf
rcr
mov
sbb
test
das
inc
pop
push
mov
jo
ljmp
test
shlb
mov
mov
ffree
popf
pop
rcrb
inc
and
mov
inc
pop
mov
xchg
sarb
adc
gs
out
sbb
lods
sbb
packsswb
sarl
movb
gs
into
out
inc
adc
inc
scas
daa
lcall
and
add
pusha
daa
lret
outsb
into
or
mov
mov
cmp
xor
ljmp
test
call
adc
jo
inc
pop
out
icebp
lds
dec
in
dec
loop
sar
enter
insl
imul
cmp
xor
dec
popa
jle
stos
xor
imul
add
inc
xor
idivb
xor
fstl
mov
and
cmp
ret
pop
repz
in
dec
jno
in
stc
push
cmp
test
subl
in
jno
lock
sub
pop
xor
lea
aam
xor
mov
je
and
mov
jge
mov
mov
sub
push
sub
pop
jl
rcll
jo
xor
into
pushf
stc
pop
and
inc
fldenv
movsl
icebp
movsl
and
inc
lahf
fisttpll
mov
stos
cmc
sub
fisttpl
xchg
push
addb
cs
fcmovnbe
jno
pop
mov
mov
cwtl
cmpsl
cmp
scas
jecxz
aas
je
mov
sub
inc
xor
mov
js
ret
fists
mov
cltd
adc
sub
sub
or
inc
scas
mov
dec
testl
in
cld
cmp
dec
adc
pop
jmp
cmp
adc
or
mov
outsb
mov
mov
sbb
sbb
mov
mov
pushf
pop
lods
outsl
jmp
es
icebp
push
das
lods
cmp
lret
pop
inc
xchg
push
rcll
xchg
fsubrs
push
xor
adc
push
pushf
test
pop
fsubs
dec
jb
add
dec
dec
int
ja
fucomp
jp
addr16
loope
pop
push
sarl
repz
rolb
fdivl
xorl
push
faddl
push
aam
int
ss
cmpsb
outsl
sub
fiadds
xchg
pop
in
dec
and
shll
jge
rclb
sti
cmp
jecxz
clc
jo
mov
imul
popf
rol
cltd
cmp
insb
insb
jae
ja
push
cs
pusha
mov
cmp
and
jp
add
cs
or
xchg
pop
aas
int
mov
lret
rcrl
sub
lods
jg
jo
fs
fwait
mov
into
ljmp
loop
addr16
adc
fists
rclb
std
xchg
shll
cwtl
mov
rol
and
out
imul
sarl
popf
dec
stos
cmpsb
outsb
fildll
sbb
pop
movsl
xchg
je
xor
test
pop
lods
lock
xorl
cmp
jecxz
pusha
or
lcall
dec
and
pop
aad
jno
fwait
cwtl
mov
pop
pop
movsb
inc
inc
inc
pop
sbb
mov
xor
addb
icebp
mov
clc
mov
imul
inc
leave
ret
enter
dec
mov
daa
add
mov
pop
mov
mov
jae
or
sbb
mov
and
xchg
fsubrs
xchg
lea
sub
jmp
and
add
and
add
dec
test
pop
push
rcll
mov
mov
stc
dec
xchg
insb
mov
or
loop
lds
pop
std
insl
add
cli
pop
adc
scas
sarb
add
push
mov
adc
xchg
dec
cmp
xchg
sbbl
adc
scas
into
sub
ds
inc
inc
ss
test
and
fisttpll
cmp
sbb
inc
xchg
cmp
cwtl
int
dec
and
sahf
dec
sub
fbstp
cs
std
nop
push
or
je
or
es
mov
aam
repnz
jnp
icebp
mov
sub
inc
out
aas
sub
pop
dec
mov
xchg
xor
dec
imul
mov
sahf
jnp
jge
pop
sub
out
stos
pop
xchg
pop
imul
push
jle
or
mov
loopne
dec
jmp
out
dec
push
or
sbb
pop
imul
popf
les
push
ds
mov
cmc
or
jne
xor
inc
mov
add
fidivrl
xchg
jl
shrl
jns
fistl
call
fdivl
sbb
mov
jns
cmp
lods
repnz
and
mov
fucomp
out
cmp
repz
xorl
mov
shl
mov
imul
mov
adc
push
xchg
cmp
adc
xchg
push
test
xorb
pop
jge
ljmp
outsl
mov
sar
jo
outsb
fldcw
stos
xchg
jge
nop
daa
outsb
dec
ds
add
imulb
cmp
scas
pusha
jno
cwtl
test
js
test
out
loope
inc
pop
lods
pushf
xchg
mov
cmpsb
int
fst
jae
pushf
mov
xchg
xchg
add
sbb
stos
inc
lods
mov
aaa
fidivl
insb
or
push
lds
sub
dec
push
jge
aas
mov
popa
lret
xchg
xor
cmc
loopne
push
sub
cmp
push
mov
jnp
mull
ds
aam
cmp
jae
xor
dec
pop
pavgw
sbb
mov
cmp
psubw
ret
jle
int3
xchg
push
push
jo
cmc
cmp
loop
hlt
xlat
ss
int3
scas
test
mov
pop
ljmp
and
aam
subl
sbb
decb
mov
in
adc
adc
mov
xchg
dec
jno
call
movsl
sub
mov
jmp
pop
cmp
pop
call
dec
and
pop
cmpsl
adc
addr16
sti
negl
cmp
jne
int3
and
mov
mov
outsl
aad
sahf
leave
pushf
aaa
inc
adc
sbb
fisubrs
jg
das
mov
adc
pop
test
ret
filds
test
jge
cmp
lret
movsb
sub
movhps
fnstsw
mov
aas
xchg
dec
pop
int3
adc
and
sbb
test
mov
push
mov
jne
aaa
testl
bound
xchg
test
in
or
or
mov
mov
xchg
je
call
loopne
pop
movsb
mov
sub
jp
xor
loop
pop
lcall
outsb
xchg
push
xor
call
push
inc
je
nop
mov
mov
xchg
ljmp
js
sbb
sub
sbb
or
push
sbb
push
adc
lea
push
push
push
xor
inc
dec
imul
sbb
stos
mov
les
stc
ljmp
movsb
sub
inc
js
add
lcall
pop
push
rcrb
test
scas
mov
repnz
xor
add
sub
inc
imull
sbb
or
and
popa
cmp
jo
push
pop
and
lcall
in
es
or
dec
pop
pop
push
enter
std
dec
sub
adc
adc
pop
rcl
xchg
nop
dec
andb
adc
incb
mov
ss
cmp
iret
and
xor
fbld
movsb
rclb
sbb
adc
pop
and
and
and
inc
push
syscall
leave
loope
fisubrs
inc
mov
inc
lcall
pop
sub
mov
popf
cmp
test
xchg
mov
jbe
mull
sbb
xor
and
cmp
es
jp
ljmp
inc
mov
pusha
sbb
mov
inc
sahf
aam
outsb
push
pop
xor
push
jnp
sub
bound
inc
sub
in
dec
jnp
cld
dec
adcb
ror
inc
popf
xchg
popa
xor
lock
pop
sbbl
dec
leave
test
xchg
roll
dec
imul
push
lods
sbb
js
push
fs
stos
xchg
les
and
jb
pop
data16
repz
inc
hlt
je
dec
dec
jbe
dec
push
jo
dec
or
jb
jle
shrl
loop
jmp
rclb
pop
cmp
push
push
js
xor
mov
in
jmp
xchg
xchg
sub
and
mov
movsb
inc
adc
mov
icebp
push
sub
xchg
pusha
insl
cmc
cmp
lds
mov
sub
add
in
push
lock
aaa
sbb
lret
addr16
std
cmp
cmp
jge
xchg
int3
scas
push
dec
call
lcall
out
insb
mov
mov
mov
push
iret
xchg
sub
mov
mov
rcrb
fisttpl
lcall
cmp
or
mov
adc
add
stos
add
scas
popf
enter
or
rorl
in
clc
and
addb
lods
sub
mov
sbb
cltd
mov
jnp
xchg
mov
sbb
jns
sbb
jg
in
rcll
push
xchg
push
cmp
lods
into
outsl
sbb
inc
arpl
sbb
iret
addb
sbb
cld
push
ljmp
cltd
adc
mov
or
or
sbb
mov
pop
mov
push
adc
out
clc
inc
cmp
adc
and
lcall
cmp
clc
stos
dec
sub
inc
xor
ds
lret
sub
insl
je
mov
cli
shl
mov
add
xor
fcompl
adc
sbb
adc
ficomps
push
mov
dec
adc
add
mov
inc
dec
clc
push
or
int3
mov
in
sbb
pop
in
sub
rclb
arpl
cmp
icebp
mov
inc
aas
jp
scas
xchg
or
xchg
push
lahf
or
sarl
inc
cs
lret
and
cld
ficoml
jp
rcll
push
dec
pop
int3
lods
and
js
pop
sbb
mov
orl
int
inc
movsb
aaa
cs
lock
daa
and
or
inc
cmpsb
insb
cmp
push
mov
and
lods
loopne
andb
mov
insl
or
pop
loop
add
xchg
cmp
enter
ljmp
jno
insl
imul
out
sub
xlat
pop
jbe
jne
cmpsl
jno
push
shlb
cmp
pop
outsl
dec
push
push
scas
and
pop
fnsave
scas
mov
cld
int
stc
les
xor
das
aam
pop
in
xchg
cltd
mov
xchg
pop
mov
testb
jp
aas
stos
lcall
pop
xor
cmpb
jae
ljmp
xchg
test
mov
pmuludq
es
inc
ds
and
loope
ljmp
rolb
int
movsl
mov
mov
mov
popa
lcall
mov
sub
imul
inc
and
jl
mov
lds
movsb
sbb
inc
dec
repnz
or
cmpl
out
inc
scas
sahf
jno
lds
pop
mov
xchg
push
add
jno
scas
push
mov
sub
push
imul
repnz
mov
pop
imull
adc
mov
imul
push
jg
int3
sub
repz
pop
outsb
or
jl
adc
orb
xchg
push
jno
mov
insb
cltd
adc
decb
lods
movl
adc
or
scas
cmpsb
xchg
movsl
dec
je
pop
pop
test
sub
xchg
adc
aaa
mov
test
mov
xchg
or
add
pop
jno
cs
dec
popa
mov
jl
shrb
pop
int3
sub
cmp
mov
add
mul
push
jo
dec
push
pop
stos
mov
jbe
mov
fistpl
ret
mov
pop
out
inc
or
dec
cmp
inc
mov
push
scas
lret
xchg
jns
inc
mov
pop
mov
fiadds
hlt
xor
and
in
push
into
xor
leave
mov
pop
or
cli
sub
inc
sbb
jle
push
pop
popf
pop
add
sahf
ja
lret
repz
cld
adc
in
lcall
or
push
sub
adc
test
shlb
je
insl
cmp
mov
lods
scas
fimuls
mov
comiss
pop
sub
sbb
stos
arpl
jl
push
fisttps
jg
fiadds
ds
fld
adc
xor
pusha
jae
rcll
jge
jecxz
cmpsl
mov
sub
add
sarb
jmp
stos
out
sbb
out
mov
xchg
sub
pusha
loopne
scas
dec
push
lods
inc
inc
sub
les
mov
or
dec
imul
xorb
aas
jecxz
push
push
add
outsl
fs
imul
cmpsl
mov
mov
adc
xor
sbb
push
or
divl
test
mov
daa
loopne
mov
adcl
call
add
sahf
lahf
in
iret
add
xor
popa
push
jmp
lahf
mov
dec
ljmp
mov
dec
je
xchg
xchg
xor
fcomps
or
lret
cmpl
or
push
rcll
xchg
xchg
or
jmp
mov
jecxz
js
cmc
adc
sub
xlat
arpl
jle
notl
dec
cmp
into
dec
movsl
test
sbb
aas
xor
jmp
or
out
jmp
xchg
mov
int3
and
shll
sbb
adc
call
xlat
cwtl
ret
jb
rorb
cmp
sub
jne
mov
dec
jbe
or
and
or
out
gs
add
testl
jbe
push
mov
inc
mov
nop
inc
sub
mov
or
insl
cwtl
jb
cmp
cmp
pop
mov
mov
xor
jo
xchg
xor
pop
mov
aam
mov
inc
popw
mov
rol
xor
xchg
in
je
test
mov
movsl
inc
sub
sub
push
jne
add
mov
mov
push
inc
aas
outsb
popa
inc
negl
xchg
out
inc
shlb
repnz
dec
add
sbbb
push
or
xor
xlat
pusha
or
aaa
adc
xchg
cs
ja
fnstcw
mov
addr16
jmp
sti
pushf
xchg
in
sbb
mov
js
popa
shl
cmc
mov
pop
xor
scas
out
imul
loope
jne
loop
lods
pop
sub
dec
push
cmp
push
mov
jae
sub
pushl
rcl
ret
aaa
jmp
iret
pop
mov
mov
and
lds
lock
stos
sbb
nop
mov
ret
cmpsl
into
gs
inc
ret
xor
inc
mov
inc
aam
mov
test
jmp
dec
xchg
daa
fldenv
push
out
push
addr16
in
pop
jmp
aam
sbb
cmc
fcompl
cmpsb
lahf
hlt
shlb
jne
mov
int3
mov
xchg
insb
sbb
and
or
mov
repnz
lods
pop
fildl
lods
add
aad
mov
add
outsb
incl
daa
addr16
aas
adc
xchg
repz
int3
jnp
ljmp
and
aam
add
adc
mov
dec
dec
sub
pop
notrack
adc
jg
insl
stos
out
xchg
loope
or
lret
scas
mov
movsl
popa
or
mov
jge
pop
push
dec
stc
mov
sbb
mov
std
inc
or
mov
sub
lock
loop
stc
nop
mov
sub
addr16
dec
lret
or
testl
out
lret
jmp
es
jns
test
push
sarl
xchg
stos
pusha
inc
movsb
arpl
inc
sub
out
rcll
sbb
sub
mov
stos
cmp
adc
mov
push
pop
fimull
arpl
insb
jae
fwait
jmp
rcr
movnti
out
sbb
jmp
lods
jg
xor
cltd
bound
out
sbb
inc
inc
in
aam
jbe
icebp
cmp
loopne
xchg
out
shrb
or
imul
push
scas
mov
sahf
push
jg
addr16
in
or
pushf
rcrl
divl
scas
rcr
jbe
fstpt
adc
into
leave
cmc
or
call
shlb
jno
sbb
inc
xchg
loopnew
add
dec
mov
push
jbe
pop
clc
and
shrb
jae
cmc
xor
test
jo
test
inc
divb
dec
clc
jle
movsl
add
dec
sub
adc
mov
cmp
subb
movsb
pusha
test
popa
xor
jnp
popf
cwtl
repnz
add
stos
lahf
mov
mov
add
and
jo
fiaddl
jb
sub
add
mov
dec
insl
mov
out
jmp
jb
call
fistl
pop
push
inc
lock
inc
cmp
in
lods
sbb
or
test
or
mov
pop
out
in
int3
xlat
sbbl
dec
cli
das
test
jnp
data16
inc
mov
inc
xlat
and
mov
test
sub
add
insb
lcall
lahf
data16
arpl
cmp
sbb
and
xchg
mov
inc
sub
or
imul
jp
mov
sub
movsb
jp
inc
add
xor
ja
pop
fmuls
mov
into
and
mov
pusha
test
or
andl
mov
or
push
xlat
dec
pop
add
mov
fldl
mov
popa
inc
mov
movb
insl
adc
xor
mov
sahf
daa
pop
mov
lods
shll
push
outsb
test
sub
cwtl
pop
sub
loopne
scas
push
call
dec
jg
scas
imul
jge
push
lock
sbb
add
push
outsb
push
mov
lret
arpl
clc
rolb
xchg
inc
out
cli
popa
enter
add
stc
repnz
pop
shll
mov
jp
jns
das
addr16
or
test
fs
xchg
xor
and
push
pusha
adc
pop
xlat
pop
data16
call
in
lea
gs
inc
xor
lods
call
in
repnz
inc
jle
inc
out
je
cmp
lcall
into
data16
cltd
cs
les
cmc
mov
je
ss
mov
inc
movsl
inc
mov
sbb
xchg
or
mov
lcall
stos
mov
sti
repnz
stos
mov
lock
mov
mov
sbb
ds
mov
jnp
and
mov
mov
sarl
pushf
jae
xor
hlt
adc
insb
dec
sub
jnp
mov
mov
fucomip
in
inc
sbb
fdivl
xchg
in
or
push
lcall
vxorpd
push
enter
loopne
cs
aad
daa
les
jle
ja
sbb
sbb
push
mov
loope
daa
clc
std
mov
in
mov
punpcklbw
and
insb
push
cmpsl
imul
mov
jb
xchg
popa
mov
and
fisttpl
dec
repz
enter
ret
mov
mov
xchg
out
scas
test
cltd
mov
sub
and
xchg
and
xor
clc
test
xchg
out
jno
insl
pushf
icebp
jae
lods
inc
mov
out
adcl
clc
sbb
enter
mov
mov
nop
rorb
daa
ja
jl
cmpsl
aam
outsb
dec
js
pushf
add
icebp
shrl
fisubrs
aad
adc
int
leave
cmp
popa
movsl
and
mull
stos
enter
pop
pop
mov
push
mov
cltd
jmp
mov
mov
jae
repnz
imul
sbb
stos
inc
mov
lret
pop
dec
ds
cmp
in
out
push
adc
mov
sub
xor
xorl
fildll
mov
pop
xchg
lcall
pop
lods
shl
cltd
mov
fs
xorb
jns
sbb
xor
ds
lea
sub
jne
push
dec
cmpsl
xchg
and
lock
jb
stc
push
pushl
cwtl
xchg
or
jp
or
push
jo
inc
mov
inc
sarb
insl
and
imul
stos
fcmove
mov
movsb
push
rclb
xor
mov
icebp
and
out
cmpsl
mov
fcomp
gs
jb
jb
repnz
cmp
repz
bound
imul
xchg
sub
and
pop
icebp
sbb
xchg
jle
pop
mov
xchg
mul
adc
clc
add
push
loope
aas
in
out
dec
das
lods
mov
adc
es
loopne
mov
mov
arpl
pop
push
mov
jl
ja
xor
ja
dec
cmpsb
jb
or
xchg
sbb
test
and
xchg
mov
test
jp
es
mov
mov
out
dec
ss
aam
in
into
fimuls
js
arpl
xchg
shll
shl
dec
pushf
cltd
daa
sahf
fs
movsl
clc
addr16
clc
gs
sbb
mov
js
fcmove
rolb
ljmp
icebp
cmp
xchg
sbb
aam
flds
dec
leave
out
xchg
jns
call
mov
inc
cmp
push
nop
test
inc
rcr
pop
and
subb
push
cmpsl
loope
xchg
pop
test
lret
decl
bound
das
xchg
jmp
in
xchg
test
jb
jge
or
dec
hlt
add
pop
rclb
jae
or
mov
push
lea
xchg
mov
mov
sbb
cmpb
roll
jne
rcrl
pop
fcomps
jmp
aam
pop
std
out
jne
cld
xor
gs
dec
adc
cli
adc
jecxz
std
ja
iret
mov
ljmp
push
sbb
push
xor
aaa
mov
icebp
lret
test
mov
lahf
mov
repz
or
bound
lcall
pop
mov
aad
loope
ret
sbb
loopne
push
imul
push
xchg
out
push
push
sahf
fsubp
scas
add
dec
and
jbe
or
fstpl
fcoml
outsl
push
xchg
movsl
mov
xor
iret
addb
xchg
mov
les
imul
mov
pop
sub
popf
arpl
ret
jmp
push
shll
jp
push
repnz
movsl
sub
jle
insb
jge
cli
push
mov
adc
fistpl
inc
movsb
mov
jnp
pop
cmp
jo
cmc
aas
mov
push
sub
mov
jecxz
push
jecxz
data16
into
in
repnz
shll
das
mov
dec
pop
dec
pop
xor
and
loope
imul
popa
jno
or
jo
dec
adc
shr
mov
or
or
icebp
imul
dec
push
dec
movsb
xlat
mov
cmp
cmc
ja
pop
cwtl
or
test
push
lods
inc
jnp
mov
push
es
mov
ds
mov
in
ds
bound
xchg
xchg
pop
lcall
jge
mov
mov
in
xchg
call
loope
aas
pop
inc
cltd
nop
mov
shlb
insb
std
adc
fwait
iret
mov
aas
mov
insl
sti
stos
cmp
repz
and
xor
insw
fldcw
xor
jae
inc
leave
int3
jb
ds
dec
lock
mov
icebp
jb
out
ja
dec
mov
cmpsl
repnz
sbbb
aas
pop
add
enter
imul
subl
aas
test
mov
mov
mov
mov
lcall
arpl
bnd
fidivl
dec
icebp
cmp
mov
xchg
mov
ja
mov
fldl
call
jmp
xchg
xchg
mov
imulb
in
inc
lea
adc
jno
xchg
fwait
jg
insb
cmp
pop
mov
enter
es
cmp
les
push
test
cmpsl
xor
loopne
dec
fbld
adc
pop
pop
cltd
jbe
arpl
and
arpl
std
mov
adc
cmp
int3
cmc
js
xchg
lret
sbb
xchg
lcall
mov
mov
jb
cmp
sbb
mov
mov
pop
pop
push
and
mov
shlb
rorl
fcomip
cmp
outsb
or
mov
dec
sub
sbb
test
loopne
pop
pop
ds
cmp
fsubrs
push
insb
les
add
mov
mov
popa
out
test
jbe
xchg
int3
sahf
int
xchg
lcall
fbld
mov
sahf
pushf
je
jo
mov
test
push
jge
andnpd
mov
sub
pushf
cwtl
cwtl
fwait
xor
mov
or
jb,pn
jmp
int
fsub
cmpsl
sbb
enter
adc
jne
push
jne
jb
fisttpl
dec
pop
fistpl
ja
xchg
sub
and
adc
dec
into
hlt
or
clc
inc
sub
int3
mov
ss
pushf
lcall
and
jbe
cli
xlat
inc
mov
ljmp
inc
stc
mov
icebp
rcrl
xchg
divb
mov
add
mov
out
andb
scas
test
cmp
mov
sbb
xchg
sbb
push
loop
push
or
in
inc
mov
insb
add
aad
push
in
push
push
fwait
or
popa
inc
orb
lock
pop
clc
mov
xor
xchg
outsb
mov
loopne
cmpsl
sub
push
mov
pop
enter
jge
ficompl
dec
cmp
repnz
and
idivb
xchg
call
mov
xchg
cmp
add
push
mov
xor
ror
adc
inc
xorb
add
add
cmp
jge
ljmp
ret
dec
imul
outsb
lods
jg
aaa
jp
inc
xchg
dec
test
jnp,pn
sub
or
sbb
mov
jmp
cmp
pop
insb
sbb
stos
pop
stos
idivl
xchg
inc
fisttpll
mov
aas
cli
mov
ljmp
enter
cwtl
vmovntps
lods
outsb
or
xor
lret
bound
cmpsb
mov
sahf
pop
scas
and
adc
aaa
pop
test
sbb
inc
mov
aas
test
jns
shrl
andl
sbb
xor
pop
mov
dec
in
stc
test
dec
sbb
les
sbb
sub
or
cmp
loop
mov
shlb
xchg
sbb
imul
addb
adc
jb
popa
cmpsl
inc
pusha
jg
fstl
movsb
xchg
scas
mov
jbe
into
inc
xchg
lahf
mov
orb
cmpsb
cmp
out
mov
and
sub
insb
dec
jbe
sbb
xchg
jne
and
push
dec
push
shr
insb
outsb
cmp
call
mov
das
lock
ljmp
xchg
xlat
jns
mov
dec
sbb
popf
and
xchg
ret
add
mov
fwait
mov
xchg
daa
daa
nop
push
fstps
mov
pop
xor
or
xchg
jnp
and
mov
out
dec
repnz
sarl
loop
cmp
mov
cs
int3
mov
jl
cs
dec
movsl
imul
push
push
or
shl
or
loop
ret
aas
add
sarl
sbb
cmp
mov
push
and
push
pusha
jno
mov
test
insl
cmp
fnstenv
cmc
cmc
sti
pop
mov
add
clc
push
jno
mov
dec
add
xchg
lret
sbbl
mov
and
rcr
stos
cltd
and
mov
push
test
jo
pop
mov
testl
out
fldt
lock
mov
es
outsl
jp
sub
test
aam
jb
scas
xchg
mov
push
adc
adc
push
sbb
add
enter
int
sbb
lea
lods
pop
pop
insl
xchg
negb
cmpsb
fsubrp
dec
inc
mov
mov
sbb
movsb
xchg
stos
cs
int3
sbb
xorl
push
mov
pop
sub
fcompl
bswap
sbb
sar
je
test
sub
pop
push
xchg
jne
cmpsl
mov
js
inc
fwait
popf
scas
clc
push
dec
test
and
in
imul
cmp
cmp
sub
gs
inc
jae
adc
jle
xchg
arpl
andb
jle
test
notb
inc
lcall
jae
inc
xchg
ljmp
iret
sahf
fldcw
movsb
and
enter
lea
fmull
xor
cld
xor
popf
jne
or
aaa
mov
mov
leave
adc
scas
jno
aas
insl
nop
shll
jbe
xchg
fsubr
lds
fildll
jecxz
loope
and
sahf
daa
test
sbb
mov
and
movsl
push
add
popa
std
outsl
jl
dec
add
in
push
pop
shll
dec
jns
or
push
mov
daa
js
test
stos
mov
loop
movsl
lock
jno
popa
arpl
dec
add
mov
or
js
scas
nop
into
and
xlat
repz
pop
push
sub
mov
ljmp
xor
mov
fucomi
fidivl
inc
movsb
sbb
out
add
mov
aaa
sbb
xlat
dec
rep
adcl
fiaddl
push
pop
ja
xor
jl
mov
inc
jmp
adc
bound
lahf
rolb
xlat
add
mov
pop
mov
sbb
mov
mov
rcl
aam
gs
rcl
cmpl
push
sbb
push
xchg
or
pop
pop
xchg
add
loopne
mov
xor
adc
in
push
daa
rol
and
mov
popa
loope
lea
lods
mov
sub
lea
mov
scas
xor
fwait
add
sbb
xor
xchg
enter
je
sarl
push
clc
daa
mov
push
shrl
sub
pop
add
xchg
imul
sbb
adcl
jecxz
sub
dec
shrb
bound
sbb
in
mov
mov
pusha
sub
dec
sbb
push
or
inc
lods
cmpsl
loope
aad
xor
in
push
mov
int
sti
ret
ljmp
or
add
cs
nop
fisubrs
icebp
int3
and
mov
pop
or
inc
aam
sub
dec
inc
pop
pusha
in
sbb
fstl
pusha
outsl
loopne
loope
jge
jnp
lock
insl
xchg
loop
imul
mov
xor
sbb
loope
jecxz
push
ljmp
mov
ss
iret
sub
shll
cwtl
add
jl
cmp
scas
into
leave
dec
sar
sub
scas
clc
pop
mov
leave
test
adc
enter
push
sub
jmp
xor
out
mov
mov
sub
mov
sbb
pop
mov
or
fists
arpl
cmp
or
ljmp
scas
nop
lods
mov
int3
lods
out
adcb
icebp
ss
pop
cli
and
ret
ret
pop
xchg
frstor
ja
inc
mov
in
or
cmp
mov
nop
xor
mov
inc
mov
pop
push
push
je
mov
adc
mov
cmp
mov
movsl
aam
add
dec
mov
ret
xlat
sub
int
mov
scas
push
xchg
adc
std
adc
in
inc
add
inc
dec
xchg
xchg
inc
fs
lret
scas
cmp
sub
xor
xchg
fldcw
pop
sub
loopne
mov
test
sbb
sbb
mov
adc
xor
out
aam
mov
cmp
xchg
out
mov
push
call
fsts
cmp
sub
mov
cld
add
andl
xor
xchg
ret
iret
cmp
mov
dec
lds
jne
jmp
iret
cmpsl
out
push
cmp
mov
add
xchg
mov
rclb
sub
add
inc
cmpsb
hlt
clc
pop
sti
push
and
gs
lock
xchg
mov
cmp
pop
and
mov
imul
loope
in
cmp
insl
add
sub
inc
lock
scas
pop
and
push
push
popa
add
add
lods
xchg
negl
loop
lret
jno
lahf
out
pop
icebp
fldcw
push
fimuls
shlb
mov
fmuls
das
jnp
bound
std
xchg
add
xchg
mov
jae
or
cwtl
xchg
jns
xor
aas
xor
add
insl
dec
les
sbb
lock
dec
leave
sti
std
pop
std
mov
cmpsl
out
pop
sarb
push
inc
xlat
push
xor
aaa
sub
aad
fstpl
pop
stc
fnstenv
mov
iret
bound
add
and
arpl
lds
sahf
lds
mov
test
and
cmpsb
xchg
aas
rorb
stc
sbb
jecxz
not
mov
xchg
call
fnsave
xor
and
pop
add
int
sub
out
dec
mov
add
jnp
push
dec
nop
sub
rcrl
cmpsb
inc
std
jb
cs
sbb
cmp
das
je
cmp
add
imul
ja
roll
add
arpl
sub
push
xchg
pop
test
xchg
add
and
xor
inc
insl
lock
les
inc
xor
aam
je
or
mov
adc
cmpsl
and
push
rcrb
jge
inc
sbb
movsb
adc
out
dec
push
pop
stc
xchg
dec
push
mov
or
fisubl
sarb
in
fsubrs
sbb
cld
sbb
jno
ds
shlb
mov
ss
adc
adc
scas
mov
stos
pop
andl
mov
push
insl
mov
test
xlat
pop
mov
fstl
dec
lahf
out
movsb
addr16
adc
pop
cmpsl
mov
add
testl
jmp
push
jnp
fsubrl
xchg
repnz
loope
adc
int
nop
pop
sub
adc
rcrb
dec
in
sub
lahf
add
loope
inc
xchg
pop
jp
rolb
and
add
mov
lock
push
jae
ljmp
sbb
rcrl
and
jl
sub
jmp
in
pop
lcall
cmpsb
insb
repz
daa
jnp
fiaddl
fnsetpm(287
xchg
sub
and
fadd
mov
cmp
cmp
les
lods
mov
js
aam
lahf
add
repz
push
pop
adc
jbe
aam
fisubrs
ret
ja
add
pop
scas
test
es
mov
hlt
imul
lds
popa
push
scas
push
sbb
push
xchg
push
cwtl
scas
xor
in
loop
popf
xorl
es
push
test
sbb
dec
push
add
in
int3
stos
test
xchg
add
dec
sbb
push
pushf
pop
testb
pop
inc
jno
cmp
or
popf
lds
sbb
in
mov
mov
xorb
push
arpl
gs
push
gs
imul
pop
mov
fdivl
ficoms
mov
lahf
mov
or
cli
mov
inc
data16
shll
in
cmpsb
pop
jae
dec
dec
sub
fs
orl
mov
imul
xor
shl
mov
sub
leave
roll
stc
mov
cltd
nop
mov
adc
add
ficoms
jne
ficoml
call
adc
cmc
mov
xchg
leave
mov
out
loopne
outsl
in
adc
out
dec
aam
adc
and
pop
scas
mov
in
pop
insl
mov
jl
outsl
out
addr16
outsl
imul
push
cli
out
push
or
inc
sbb
cmc
addr16
fimull
ds
js
aad
sbb
jno
sbbb
push
adc
adc
in
push
push
dec
inc
sub
adc
fldenv
push
fildll
les
push
fs
pop
mov
xor
inc
mov
dec
xor
jl
notl
scas
gs
dec
jbe
xor
cmpl
adc
lea
mov
inc
popf
cmpsl
scas
push
loope
test
inc
xor
mov
xor
lods
subl
nop
aaa
lods
enter
ss
mov
ja
xor
sub
add
cmp
sub
fisubl
xchg
scas
es
lahf
cmp
sub
xchg
dec
daa
dec
inc
sub
aas
clc
scas
stos
aad
xor
into
or
or
int3
jecxz
xchg
inc
sub
aas
scas
jns
hlt
cmp
cmp
in
add
mov
ror
lret
xchg
cmp
aad
or
lods
rcl
es
or
outsl
mov
adc
jnp
in
pop
loope
orl
push
or
roll
daa
pop
jbe
mov
fimull
xchg
mov
int
inc
jbe
adcl
push
ror
shlb
enter
sahf
mov
in
inc
inc
inc
rcrl
push
insb
push
cmc
daa
mov
addl
pop
mov
jl
adc
push
jno
add
insb
xlat
pop
dec
sub
dec
adc
iret
inc
and
push
add
inc
jns
out
sub
movsl
and
jp
jne
jg
pop
cmp
mov
std
movsb
xor
ds
jo
and
fs
push
pop
mov
outsl
cmp
adc
fcoms
shl
loopne
pop
lahf
testb
push
cmp
cmp
or
cmp
je
sbb
sbb
ret
or
arpl
push
cmpsb
adcl
xchg
mov
mov
andb
hlt
jo
push
mov
jmp
push
jne
cld
daa
lods
jle
add
sub
or
scas
ja
popa
push
lds
sub
inc
fsubrl
mov
filds
xor
sbb
insl
pop
adc
mov
stc
adc
in
jge
and
pusha
add
pop
xchg
xchg
ja
sbb
test
mov
bound
push
in
cmp
mov
cmp
out
push
adc
fs
pop
sbb
insb
add
out
xor
rcrl
cmp
or
mov
xor
sbb
sbb
jmp
out
sahf
cmp
hlt
loope
cli
cmp
pop
fwait
out
add
int3
clc
pushf
lea
dec
incb
adc
jbe
pop
clc
fsts
or
adc
cmp
and
mov
xorl
pop
imul
inc
jecxz
xchg
scas
add
cmp
out
movsb
push
push
ljmp
jecxz
and
divl
fdivs
mov
pushf
data16
push
mov
jns
add
mov
sarb
repz
int
dec
in
jmp
mov
mov
addr16
ljmp
stc
pop
xchg
sbb
lret
sbbb
inc
into
lret
push
fidivrs
dec
data16
sbb
shrl
fldcw
jb
adc
fdivp
stc
push
mov
xor
jmp
xor
jno
das
arpl
sub
stos
inc
pusha
pop
xor
enter
pushf
shll
inc
inc
mov
fsub
lods
pop
xchg
add
int
add
xchg
xor
xchg
push
push
mov
lods
imul
jns
cmp
xor
push
mov
jo
sub
mov
loope
xchg
aaa
add
cmp
leave
icebp
jno
mov
fcompl
mov
sub
sbb
mov
dec
jg
adc
cmp
ss
ret
aaa
sub
adc
shlb
xchg
cwtl
jns
arpl
mov
add
cs
addl
xchg
nop
push
jl
pop
xor
insb
jecxz
jmp
loope
lret
push
movsb
cmpsb
push
dec
dec
test
stos
sbb
ret
xor
inc
pushf
sbb
xor
sti
jecxz
pcmpgtw
fdivr
push
pop
mov
xchg
mov
std
or
mov
dec
std
mov
mov
mov
dec
scas
arpl
addr16
mov
inc
push
cwtl
add
into
fstl
xchg
jmp
jno
cltd
rcrl
enter
cmpsb
sub
xchg
sub
insb
cmc
pop
clc
mov
adc
adc
xor
xchg
cld
push
push
or
mov
lds
ja
cwtl
cmp
dec
stos
lret
test
jno
movsb
inc
lods
cmp
imul
iret
sarl
push
pop
fmuls
es
fs
pop
and
shll
es
inc
movsl
test
stos
mov
subl
mov
add
jbe,pt
mov
jno
cld
lods
ljmp
and
and
cmc
cli
into
sar
mov
lahf
pop
sbb
push
xchg
fisttps
push
jle
pop
cmpb
mov
jecxz
fadd
jg
mov
clc
imul
add
cltd
mov
mov
leave
pop
in
in
bound
insb
mov
sbb
mov
inc
add
sbb
lea
rcll
pop
pop
sbb
int3
movsl
sarl
lods
add
push
lahf
mov
inc
dec
cmp
mov
xchg
jno
in
in
or
shl
cmc
lock
jg
fwait
and
in
lock
fsts
xorl
movsb
flds
stc
movsl
rolb
and
mov
inc
out
mov
scas
dec
gs
push
imul
inc
cld
sbb
shr
pop
mov
add
int3
mov
roll
xchg
cmp
add
cs
xchg
stos
stos
pushf
pop
jmp
call
outsb
lahf
stos
or
ljmp
mulb
call
js
mov
int3
cmp
into
loop
lods
xor
std
adc
rolb
divb
sti
icebp
into
in
xchg
xchg
push
or
pop
es
jb
loopne
std
jnp
pop
outsb
jecxz
pop
pusha
mov
sarl
jne
push
push
push
loop
and
pop
mov
inc
jmp
cwtl
bound
out
fidivs
mov
adc
xchg
gs
sbb
jno
clc
inc
test
jge
jl
gs
jb
cmc
push
ret
movsl
ss
sbb
jl
pop
mov
shrl
mov
out
dec
test
popa
dec
aam
sub
ffreep
xchg
push
hlt
push
dec
mov
xor
mov
jle
jecxz
stos
push
pop
pop
mov
pop
sub
ficompl
and
dec
cmp
lahf
sbb
insl
rcl
jp
scas
mov
loopne
or
add
xor
sbb
and
movl
stos
imul
xor
pop
arpl
lods
xor
orl
pop
gs
mov
les
pop
sbb
add
and
pop
sbbb
adc
mov
pop
mov
mov
rcl
push
and
imul
enter
ret
clc
repz
or
outsl
pop
not
xchg
mov
ffree
das
cmpsb
cmp
lcall
mov
cmpsb
xrstor
repz
popf
jecxz
pushf
sub
cmpsl
xchg
fdiv
sbb
adc
sub
jmp
sbb
inc
das
or
add
mov
mov
imul
xchg
jmp
cmpsl
inc
sub
out
xchg
jae
popa
xor
mov
dec
test
xor
add
mov
je
sub
adc
insl
faddl
add
pop
mov
xchg
lds
imul
adc
or
lahf
ds
inc
cld
add
lods
pop
jb
fistl
jp
pusha
sub
xchg
and
orl
sub
xor
lret
and
dec
dec
dec
jle
inc
mov
pop
and
inc
pusha
or
lcall
sub
loop
sub
mov
popa
icebp
aaa
ret
int3
daa
fsubrp
into
test
fwait
rorl
xor
clc
and
leave
in
int3
arpl
mov
insl
xchg
mov
hlt
mov
loope
sub
inc
push
adc
sti
cmpsl
sbb
or
decl
jae
or
int
push
add
stos
add
iret
dec
fbstp
or
mov
imul
mov
loop
or
inc
push
add
stos
dec
add
stos
pop
es
sub
mov
sub
sar
je
rcrb
sub
iret
les
aam
or
into
dec
inc
mov
mov
jmp
movsb
arpl
pop
sbbb
jo
jle
xchg
xor
and
test
and
xchg
lds
pop
repz
cmp
inc
fcmovnb
mov
pop
or
xchg
ja
repnz
jo
inc
dec
push
lea
lods
gs
jns
mov
setle
insb
sub
lret
test
add
push
out
push
pop
xlat
movups
outsb
mov
popa
mov
shll
popa
inc
inc
pushf
andb
fs
in
cmc
adc
addb
imul
aam
dec
pusha
dec
je
test
daa
pop
aam
or
mov
push
jae
es
xlat
mov
dec
pop
xchg
in
fdecstp
and
in
push
mov
jmp
fwait
push
push
addr16
repz
xor
push
fldcw
dec
dec
pusha
cmp
pushf
jo
lahf
inc
mov
mov
dec
add
mov
sbb
push
adc
push
cmp
hlt
mov
data16
sub
xchg
adc
das
movsl
clc
ja
lods
clc
inc
pop
aam
pop
outsb
or
dec
inc
mull
mov
popa
pop
inc
push
imul
cli
repnz
enter
outsb
mov
inc
adc
add
incl
mov
mov
xchg
std
addr16
lods
push
repz
jae
mov
notb
xchg
movsb
and
add
into
test
sbbl
mov
or
imul
mov
pushf
cmpl
and
in
cmc
in
mov
sahf
test
mov
and
enter
or
or
fidivs
inc
xchg
or
je
test
sbb
cmpsb
popf
cmp
mov
out
sub
jo
cs
cmp
stos
cli
lcall
mov
movsl
mov
jmp
push
xor
cmpsl
dec
mov
pop
mov
mov
and
jb
push
push
stos
loopne
mov
mov
dec
add
and
or
mov
xorl
cmpsl
popa
int
push
lahf
in
xchg
adcl
lret
xchg
xchg
les
cmp
add
out
rcrb
mov
sbb
adc
popa
imul
into
add
rcrl
fidivs
fsubrl
cmp
cwtl
stos
cmp
pop
lds
bound
psubb
js
cmp
mov
ja
push
out
mov
pop
xor
arpl
sub
push
fucomp
or
test
xor
pop
cli
pop
es
int
cld
add
inc
adc
mov
aaa
pusha
stos
mov
addr16
fisttpll
cltd
iret
fcompl
mov
fiaddl
push
xlat
sbb
aaa
and
arpl
xchg
pop
sbb
or
sub
inc
cmp
mov
sti
aaa
push
test
push
adc
push
push
push
data16
jae
lock
cmp
xor
xchg
test
imul
sbb
jecxz
mov
shll
lock
pop
lahf
cs
cmp
int3
call
pop
cmc
jns
in
xor
mov
hlt
rolb
sarb
aaa
cwtl
iret
pop
add
pop
shr
pop
and
addr16
out
bound
xor
sbb
pop
jne
nop
cltd
jg
fwait
and
inc
loopne
loop
stc
pop
dec
cmc
or
cmp
out
cmp
inc
test
mov
mov
mov
adc
jnp
pop
cmp
xor
or
cmp
lods
js
pop
fs
add
push
cli
jnp
sar
push
movsl
andl
insl
test
adcb
dec
cmp
enter
insb
in
cmpsl
cwtl
add
xchg
xlat
xchg
ljmp
imul
jno
das
cmpb
inc
jbe
test
call
jbe
and
dec
mov
insb
icebp
mov
inc
outsl
hlt
out
int3
mov
fstpt
inc
outsb
dec
push
lahf
stc
and
lcall
xchg
fs
mov
cmp
cmp
xchg
mov
aad
rolb
jo
addr16
mov
lahf
jb
xorl
insl
int3
sarl
inc
jnp
jmp
out
add
loope
mov
test
mov
pop
bound
loop
sub
icebp
xor
int
outsb
mov
push
push
inc
mov
sbb
not
mov
loop
mov
pop
cmp
loop
push
movsl
dec
cmp
sbb
sub
mov
and
sub
repz
jne
and
inc
jge
lods
mov
imul
and
cmp
pop
dec
jmp
lea
jmp
imul
sete
dec
cmc
iret
stos
jp
pop
mov
push
inc
fiaddl
repnz
xor
jb
mov
fisttpl
gs
in
mov
out
jmp
outsb
add
add
and
pop
jecxz
test
xor
sbb
mov
fbstp
adc
jns
outsl
pop
mov
jno
push
out
stos
mov
pop
sub
and
xchg
out
scas
ret
pop
cltd
ficomps
loop
add
push
jecxz
pop
jne
pop
testl
ret
insl
int
loop
cwtl
clc
fxch
lret
or
fsubs
outsl
inc
or
lock
les
xchg
das
test
int
in
and
jl
imul
pop
add
cmpb
bound
push
clc
rolb
sahf
shll
and
xor
cmpsl
mov
jb
lahf
jl
dec
fisttpl
js
mov
sbb
out
lcall
or
mov
xlat
xchg
in
les
addr16
into
cmp
jmp
ret
loope
roll
js
addr16
cmp
dec
cwtl
push
mov
add
cmp
cmp
arpl
add
int3
xor
mov
popa
inc
xchg
cmp
cwtl
dec
jbe
pop
shll
mov
and
aaa
mov
popf
sbb
or
mov
fisubl
in
mov
mov
das
out
imul
int
push
ds
mov
xorl
push
imul
sbb
sub
push
repz
and
cmp
and
cmovnp
pop
imul
int3
xchg
push
pop
repz
cmp
dec
das
jbe
xchg
mov
dec
aad
das
je
adc
cmp
mov
jmp
pop
push
lret
js
xchg
mov
stc
mov
cmpsl
ja
jb
adc
inc
pop
xlat
mov
addr16
movsb
outsl
pusha
sub
push
repz
je
jp
fs
ja
scas
sub
lret
into
pop
pop
loopne
inc
sub
inc
data16
xor
loope
pop
pusha
cmp
mov
and
ljmp
in
xchg
mov
popa
test
cmp
sub
xorb
dec
push
xor
outsb
shlb
mov
jmp
push
add
popa
and
jle
xchg
and
cmp
jmp
outsl
jae
movsl
and
jle
push
mov
rclb
fmul
scas
jge
and
mov
and
xor
inc
scas
mov
xchg
sub
cmp
fwait
and
mov
cmp
cmovne
mov
add
push
push
fs
inc
data16
sub
push
sbb
xchg
test
aaa
dec
pushf
fstps
ss
repnz
test
adc
das
mov
sub
rcr
mov
mov
das
out
mov
cmp
in
add
jnp
sbbl
inc
and
rolb
ss
pushw
jb
psubusb
in
leave
jge
inc
cmp
sbb
out
mov
lret
sbb
and
outsl
pop
pop
leave
jge
jns
jge
pop
dec
jl
mov
push
loope
ffreep
cmp
push
or
add
dec
popl
jne
ljmp
xchg
cli
frstor
lret
sbb
popf
fwait
mov
or
aad
cmc
and
xor
xlat
rolb
sbb
jmp
es
inc
xchg
insl
mov
mov
push
arpl
mov
lods
rorb
test
push
cmp
jbe
loope
pop
addr16
insb
xor
push
fs
dec
and
aaa
lods
outsl
ljmp
scas
aam
sub
lcall
push
rcrb
cmp
mov
mov
shlb
xchg
in
push
mov
mov
call
dec
ret
xchg
fldt
movsl
sbb
and
push
cmp
imul
lock
xor
lds
cmp
stos
test
cmp
fstpl
mov
mov
or
jl
cwtl
scas
inc
or
cmp
push
xchg
bound
fcmovbe
cmp
sbb
cwtl
lahf
sbb
jp
mov
jmp
arpl
cmp
xor
mov
addr16
mov
cli
fistpll
push
pop
inc
fmull
lea
sti
das
lock
and
push
pushf
add
cwtl
xor
cwtl
test
mov
fidivs
ficompl
fildl
xor
xchg
xor
push
stos
outsl
das
int3
rorb
add
xor
inc
gs
je
cwtl
sub
cmpsb
aad
jp
fwait
jp
sahf
ljmp
lcall
sbb
push
or
xlat
push
pusha
fbld
mov
mov
lock
push
cmp
sub
push
mov
es
test
xchg
mov
inc
cmp
dec
cltd
cmp
xchg
mov
mov
call
sub
cmc
out
je
lea
orb
arpl
cmp
mov
test
jae
fs
sti
push
ss
pop
xchg
mov
shll
sub
repnz
sahf
das
mov
lcall
dec
xor
push
jne
ljmp
inc
lret
clc
dec
add
testl
ror
mov
sub
ret
addb
sti
int3
mov
jne
adc
cmp
stc
sub
bnd
icebp
adcb
fdivrl
das
push
xor
dec
dec
and
imulb
out
fcmovu
hlt
sbb
or
in
fmul
mov
sbb
loop
sub
pop
mov
stc
fucomp
push
mov
scas
xchg
repz
into
iret
mov
sti
jae
int
push
sub
cmp
inc
and
pusha
pushf
sub
xor
leave
adc
lahf
arpl
cmp
sub
leave
sbbl
stc
mov
push
dec
mov
das
lea
ljmp
pop
loopne
movsb
mov
pop
imul
fs
adc
lock
xor
addl
mov
scas
mov
out
scas
jmp
pop
dec
ss
mov
mov
dec
sbb
fidivs
and
outsl
cmpsb
loopne
pop
dec
push
dec
push
adc
clc
xchg
cmp
out
nop
add
cwtl
shll
lods
cli
in
xor
adc
ljmp
mov
or
mov
pop
or
iret
rclb
jno
add
or
dec
subl
or
stc
mov
js
testb
je
sahf
pop
cmp
andb
mov
insb
inc
in
out
fisttpl
jg
lds
subb
fists
inc
movb
push
mov
mov
dec
dec
cltd
rorl
test
sub
xchg
mov
lods
int3
dec
call
xchg
cmp
push
lds
mov
ljmp
pop
xchg
and
mov
pushf
int3
pop
mov
adc
loop
jp
jae
std
fildl
jmp
fmul
ljmp
mov
or
or
push
sbb
imul
bnd
mov
sub
inc
sub
pop
cmp
movl
or
loope
lret
movsl
sahf
pop
xor
ja
outsl
xor
cmp
lret
mov
repz
int3
mov
dec
pop
mov
subb
gs
clc
push
sub
icebp
popf
dec
das
jp
mov
push
mov
into
pop
and
or
jae
push
outsb
and
ljmp
rclb
rcrl
cli
bound
test
push
push
jnp
insl
fchs
in
repnz
popf
mov
xor
jp
sbb
add
clc
add
imul
lock
mov
sub
in
mov
xchg
push
movb
imul
lods
push
in
icebp
sub
pop
clc
and
mov
cmpsb
fcoml
mov
ds
enter
and
pop
addl
loop
data16
pop
push
push
cmp
ret
pop
fistl
lret
fsts
lret
pop
and
pop
inc
push
jae
mov
sub
cmp
push
enter
mov
jns
cwtl
andb
adc
xor
xchg
mov
dec
and
jo
sub
sbb
mov
loopne
movsb
arpl
fistpl
nop
dec
and
adc
fmul
notl
mov
cmp
shlb
jno
shl
aaa
lock
aad
pop
test
iret
adc
inc
mov
xchg
and
inc
cmc
inc
popa
fidivs
mov
mov
cmp
cwtl
insl
mov
lods
pop
or
sub
sbb
inc
pusha
add
or
lods
sbb
mov
and
inc
pop
sbbb
sub
rolb
scas
ficomps
arpl
add
xor
pop
jmp
lds
mov
push
jp
sbb
cmpsl
imul
enter
test
xor
xor
cmpsl
xchg
clc
mov
iret
jmp
pop
or
in
cmc
xchg
cli
adc
sbb
aas
push
or
xchg
push
and
inc
push
cmc
xor
loope
out
sahf
adc
cs
jae
push
rdtsc
mov
or
sub
jne
adc
imul
or
out
cmc
movsl
fs
arpl
testb
mov
jb
rorb
adc
aam
sub
jge
pop
mov
pop
adc
inc
lss
stc
mov
jae
cmp
cld
add
xor
ja
mov
je
cmp
inc
adc
lock
or
push
mov
fldcw
aam
and
ror
mov
fistpl
mov
std
sbb
imul
push
jmp
dec
cltd
stc
sub
xchg
mov
jp
xchg
mov
fsubrl
mov
rorl
jno
lods
lahf
sbb
loop
scas
cmp
repnz
clc
aad
mov
dec
xchg
icebp
lock
mov
lahf
cmp
adc
dec
jbe
mov
rcrl
pop
lods
adc
mov
notb
pop
mov
add
addr16
imul
and
enter
jns
pop
mov
cmp
pop
xchg
jmp
pop
jb
loopne
jecxz
add
fsubrp
pop
push
movsl
mov
hlt
cmp
xchg
ljmp
adc
jmp
xor
pop
inc
push
cmp
push
cmpsl
cmpsb
nop
mov
addl
aas
test
inc
scas
pop
out
pop
fsubrs
push
inc
mov
in
inc
js
dec
push
adc
xchg
mov
push
testb
sub
pop
mov
or
fs
jb
cmovnp
lock
and
or
movsl
mov
dec
and
lahf
cmp
cld
cmp
adc
sbb
fidivrs
ret
ljmp
lods
mov
and
adc
or
push
jnp
das
arpl
inc
push
mov
or
push
arpl
inc
push
ss
mov
pushf
jp
xor
push
adcl
popf
dec
or
movhps
das
mov
pop
push
test
sub
popf
mov
les
not
fs
and
je
dec
xchg
push
and
xlat
xor
mov
jl
and
cmp
add
mov
in
shl
dec
add
mov
addl
inc
cmc
nop
jo
jmp
mov
out
movsl
push
popf
jecxz
and
cld
popa
fsts
out
xor
xor
data16
fwait
adc
out
push
pusha
jp
and
sarb
call
add
hlt
xor
push
push
pusha
fldcw
jae
fstp
sbb
xor
jecxz
into
out
fcmovbe
adc
and
fadd
fildl
aam
jns
xlat
inc
mov
pushf
out
loop
jl
insl
xchg
jle
scas
roll
scas
pop
loope
cmp
adc
cmc
xchg
ror
insb
jo
xor
jle
sbb
cmpb
cmp
int3
in
sbb
jg
lcall
add
sub
shll
mov
test
jb
inc
sbb
jbe
stos
gs
mov
in
mov
cmp
roll
pop
mov
sub
leave
data16
push
pop
xor
imul
sub
leave
or
and
std
add
ret
cwtl
adc
pmuludq
xchg
sbb
jo
test
jmp
std
xchg
lods
fildl
ret
push
loope
add
adc
sbb
or
jbe
dec
shlb
rolb
fnsave
xorb
mov
cli
icebp
out
nop
test
das
mov
fsub
movsb
mov
sub
mov
pop
loopne
fdivrl
pop
mov
mov
popa
xor
dec
cli
out
sbb
xlat
or
add
add
jl
jle
aaa
push
jg
add
adc
lock
repnz
daa
mov
es
fisubs
or
push
jae
pop
cmp
push
fsts
adc
mov
mov
xchg
xor
inc
loop
je
jg
in
jo
dec
gs
dec
mov
xchg
jno
adc
ret
clc
mov
mov
add
push
sahf
and
and
repnz
ds
ret
neg
in
adc
xchg
adc
push
andl
sbbl
or
dec
cmc
fwait
insl
popf
add
fdivr
dec
mov
shll
add
jp
dec
mov
cmpsb
and
xadd
jb
lea
cmp
ljmp
cmp
roll
adc
out
xchg
jo
lret
out
addl
out
sbbl
and
jle
add
pop
inc
ror
mov
repnz
fiaddl
pop
inc
xchg
int
pop
push
mov
ret
xor
xchg
xchg
mov
mov
push
xor
and
cltd
ja
inc
lods
gs
pop
mov
cmpsl
xor
je
imul
dec
int
lods
xchg
outsb
ja
sub
xorl
ss
dec
xor
mov
mov
adc
inc
push
arpl
movsb
cs
rorb
adc
and
xor
mov
pusha
orl
cmpsl
xor
dec
test
pop
mov
mov
negb
mov
pusha
out
sub
adc
jge
mov
loop
mov
fiaddl
test
test
xchg
out
lods
fcomps
mov
mov
cli
pop
pop
inc
dec
js
fstps
dec
repz
out
push
test
add
sbb
mov
into
gs
lods
in
adc
cmpsl
movsb
imull
pop
ja
loope
lds
imul
mov
stc
int
jno
cmpsb
add
stos
add
xchg
jns
aas
mov
pop
and
sarl
fs
into
shrl
pop
lds
fcompl
popa
rcll
inc
pop
and
inc
out
mov
sbbl
jg
mov
xor
xor
in
xor
pop
out
cwtl
movsb
int
xorb
loopne
mov
icebp
aam
sahf
roll
out
pop
adc
in
popa
mov
iret
test
cmpsb
push
jmp
daa
enter
xchg
fs
stos
push
sub
sub
jge
mov
jo
enter
xchg
add
or
imul
jo
xchg
scas
ret
mov
lock
popa
fisubs
fwait
push
dec
mov
testl
adc
or
jle
xor
js
sub
and
das
imul
aad
xor
pusha
jecxz
addl
pop
mov
test
adc
cmp
fildl
repnz
lods
jmp
sub
xor
mov
mov
adc
fildll
push
pop
jl
sti
sub
out
out
cld
aas
mov
movl
or
push
pop
call
cld
xor
pop
leave
sbb
cli
aad
inc
leave
arpl
sub
or
jg
adc
xchg
xchg
adc
dec
pop
aad
push
ds
fimuls
mov
mov
test
push
sti
cmp
fcmovne
cmpsl
pop
rcrb
push
mov
imul
sub
lret
in
and
cvtdq2ps
cli
and
push
sub
xor
notb
fwait
inc
mov
jp
mov
inc
mov
mov
push
decb
xlat
push
cmc
enter
jno
push
sbb
jnp
inc
pusha
rorl
xor
sub
xchg
repnz
sub
push
roll
cmpb
pop
dec
mov
mov
xchg
cmp
xchg
xor
stos
sahf
or
icebp
repz
imul
jbe
jb
inc
jecxz
or
jbe
xchg
sahf
fwait
push
inc
and
pop
sub
xchg
mov
xor
fstpl
scas
xchg
xorb
leave
sti
push
cwtl
adc
cmp
xor
rclb
test
stc
outsl
lods
xchg
aad
orb
xchg
push
adc
xchg
fwait
or
jne
mov
arpl
sub
add
xchg
push
lods
and
cwtl
divl
sbb
and
or
dec
mov
pop
push
ror
mov
mov
push
mov
add
pusha
push
fsubrp
das
xchg
mov
pop
testb
jo
arpl
test
aas
pushf
pop
rorb
push
sbb
dec
das
sbb
push
adc
in
fmull
and
xor
fstl
jo
ja
dec
imul
jmp
and
dec
ffree
ds
js
icebp
mov
loop
fcoms
adc
aaa
lret
lock
bound
sbb
stos
sbb
popf
int3
push
or
xchg
fbld
xchg
es
mov
into
mov
sahf
iret
and
iret
fnstcw
insl
sbb
popa
shll
push
cmp
inc
jne
cwtl
stos
xor
test
pop
add
ljmp
jg
scas
imul
mov
xchg
push
xchg
test
dec
pop
test
loopne
movb
popf
xchg
and
pop
sbb
pushf
push
int
in
test
jcxz
insl
daa
push
data16
add
pop
sbb
add
push
push
int
sbb
mov
shlb
vpmadcsswd
cmp
sbb
inc
in
fistps
loope
xor
or
popa
mov
faddl
pop
push
sahf
shrb
mov
jmp
mov
sub
imul
imul
addr16
repz
sbb
pushf
adc
xor
pop
cmc
push
cmp
js
in
sub
incl
adc
in
adc
insb
and
addl
jp
lret
add
inc
insb
add
popf
xchg
mov
adc
aas
xchg
fisttpll
add
lret
pop
lods
lods
pop
mov
mov
sbb
andb
cmp
or
sub
stos
inc
daa
pop
xchg
mov
xchg
iret
mov
mov
ret
aaa
sbb
lods
enter
ljmp
mov
xchg
push
inc
lcall
stos
mov
inc
inc
aaa
xchg
insb
adc
mov
mov
in
repz
sbb
push
and
vmwrite
xor
push
xchg
arpl
sbb
push
xchg
pop
call
fdivrl
xor
jle
pop
stos
jecxz
sub
add
pop
mov
push
mov
cmp
pop
movsl
pushf
cmc
push
jl
mov
pop
jae
imul
negl
nop
sbb
dec
add
test
mov
dec
lahf
adc
inc
mov
pop
loopne
sub
mov
or
pop
and
and
cld
cmp
mov
jl
orl
mov
jge
dec
rcrb
shrl
stos
mov
jae
testb
repz
push
cmpsb
sub
sti
jb
shll
std
push
mov
inc
mov
pop
and
mov
in
pop
sbb
mov
push
lret
and
fnstsw
scas
inc
xor
mov
jp
movsl
ss
leave
or
mov
xchg
push
mov
lock
or
in
call
je
frstor
inc
add
push
cmp
stos
or
insl
or
inc
shr
add
neg
sbb
mov
ds
fnsetpm(287
dec
push
sbb
out
aad
pop
pop
push
pop
xchg
push
lock
jo
out
fcoms
test
and
pop
icebp
inc
out
nop
test
outsb
xor
jge
pop
push
mov
daa
repz
jo
xchg
mov
js
cmp
sub
inc
mov
dec
xor
push
pushf
adc
cli
add
pop
xor
jge
pop
sub
cmp
jmp
jb
pop
nop
shlb
xor
mov
ret
popf
xchg
js
mov
mov
cwtl
or
stos
mov
dec
adc
inc
jmp
push
fstpt
mov
pop
sub
aam
cltd
leave
orl
pusha
les
lahf
roll
xlat
pop
dec
movsb
jae
int3
or
sbb
mov
adc
ljmp
jne
xchg
loope
pop
dec
fidivrl
push
call
imul
add
pop
rcrl
push
mov
mov
inc
dec
mov
arpl
mov
movsb
and
or
ja
js
jl
out
mov
add
je
dec
pop
in
mov
inc
xchg
iret
mov
dec
jmp
test
jmp
dec
jge
cltd
test
xlat
repnz
lahf
icebp
jp
pop
call
jne
jg
loop
or
outsl
ljmp
dec
xor
push
arpl
xchg
push
sub
mov
xor
xor
fs
mov
adc
adc
dec
adc
or
pop
pusha
testl
push
lock
pop
push
shll
es
fiadds
dec
out
ret
dec
fistpl
test
scas
xchg
arpl
pusha
push
lds
push
fidivl
adc
fstl
aas
xchg
les
andb
out
mov
mov
sub
mov
jnp
outsb
shll
push
and
mov
mov
push
inc
pop
jns
icebp
xor
mov
cltd
lea
add
adc
jecxz
shl
mov
jo
fwait
mov
pop
bound
sbb
or
xor
pushf
dec
inc
lds
repz
pop
call
xlat
or
mov
push
iret
scas
push
sahf
jmp
inc
fldenv
das
ret
sub
adc
and
jecxz
and
arpl
neg
jg
dec
dec
fld
lcall
push
mov
mov
sbb
cmp
clc
int
aas
sbb
jno
int
in
lahf
jecxz
loopne
shrl
pop
or
aas
cld
dec
ljmp
mov
push
xchg
lcall
mov
movsb
jp
ret
sub
stc
push
mov
inc
mov
xchg
sub
mov
out
mov
mov
xlat
inc
fs
fwait
repz
lret
and
push
sub
dec
das
rolb
inc
lods
sub
pop
pop
fiaddl
aaa
pop
push
inc
sub
rclb
mov
dec
jp
adc
add
mov
cmp
push
jne
pop
cltd
cmpsb
iret
orl
out
repnz
adc
bound
adc
jmp
out
xchg
and
inc
lahf
iret
fistpl
negl
lahf
jae
pop
les
cmpsb
inc
rolb
push
mov
push
iret
mov
mov
mov
call
inc
fsts
cltd
add
mov
int3
paddsw
jecxz
cmp
out
test
sub
and
dec
mov
sbb
push
insb
add
test
mov
rcrl
xor
imulb
mov
jns
mov
cmp
cmpsb
push
inc
add
adcb
and
dec
clc
bndldx
insl
mov
ret
popa
mov
jns
mov
fdivr
data16
push
je
test
mov
lret
and
imul
push
dec
mov
push
cmpsb
or
jmp
int3
jge
jbe
fsubrp
dec
lahf
mov
adc
sbb
gs
mov
pop
shr
test
or
shll
loop
pop
sub
xchg
out
dec
add
jnp
ret
outsl
inc
xchg
cmp
rcrb
dec
out
push
test
in
add
xchg
pop
pop
pop
cmpsl
push
pop
pop
mov
mov
or
rcll
lahf
ljmp
xchg
push
and
aas
inc
pop
or
fdivp
decl
mov
fisttpll
adc
push
sbb
ss
push
xor
jecxz
stos
sub
jmp
xchg
mov
jp
push
push
mov
mov
loope
cmp
insb
jns
inc
gs
cld
inc
jno
mov
sub
or
cmp
mov
xchg
sbb
in
adc
das
xor
ljmp
mov
xchg
xorb
ds
ds
pslld
orb
pop
arpl
and
and
adc
xor
inc
jg
fwait
adc
and
enter
cmpb
inc
shlb
lods
dec
mov
cmp
andl
xor
jmp
mov
xlat
sbb
adc
outsl
or
dec
ret
outsb
jbe
fucomip
scas
and
push
add
sarl
inc
jge
gs
pusha
jne
fldl
js
enter
pop
adc
inc
jnp
push
pop
shrl
fcomp
fsubs
ds
or
das
sub
pop
mov
cld
mulb
in
mov
sub
aas
or
pop
or
or
dec
jge
cmpsl
call
pop
cmp
bound
inc
ds
sub
mov
andb
movsb
adc
dec
lcall
push
sarl
cli
xchg
dec
push
cmp
inc
mov
addl
fisubrs
fwait
daa
pop
repz
push
aaa
cs
mov
push
stc
and
pusha
shrb
test
push
or
adcl
ljmp
scas
cmp
dec
fstps
mov
ret
in
xchg
add
aaa
mov
lea
and
inc
push
orl
adc
xchg
out
sub
mov
adc
xchg
push
mov
jbe
sti
lods
loopne
fwait
pushf
mov
loopne
and
cs
mov
daa
in
mov
adc
or
outsl
jge
fidivs
dec
jo
icebp
call
in
mov
push
aaa
sbb
push
enter
outsl
mov
imul
push
outsb
imul
insb
or
movb
dec
lcall
in
loop
or
ljmp
into
xor
dec
sbb
xchg
and
test
int3
mov
cld
pop
jp
lds
push
call
or
clc
imul
xorl
cmp
faddl
sub
cmp
mov
sub
ss
xchg
mov
fiadds
je
cmpsl
pusha
jo
sub
bound
mov
subb
lea
or
or
inc
movl
popa
repz
push
jnp
in
ds
fdivr
inc
sbb
addb
adc
dec
int3
out
jno
loopne
pop
push
pop
mov
add
stc
inc
xchg
insl
stos
ljmp
xchg
pop
push
sub
into
sbb
mov
dec
mov
scas
cmpl
cs
in
inc
and
sub
and
jl
shlb
jnp
jecxz
pop
add
sub
stc
sub
subb
or
mov
andl
ljmp
fldt
xchg
adc
dec
cld
add
and
popf
dec
cmp
cld
orl
adc
and
pop
ret
mov
jo
cmpsb
inc
lret
mulb
add
adc
rorb
push
subb
ja
test
je
push
add
pop
pushf
mov
cmc
cmc
add
pop
push
mov
pop
test
popf
call
mov
dec
cmp
sbb
movsl
call
mov
fldenv
mov
mov
fnsave
mov
scas
jmp
test
add
inc
jl
daa
xchg
pushf
sbb
pushf
push
das
adc
mov
pop
push
cmpsl
lcall
mov
xor
sbb
pop
shl
and
je
lcall
push
aam
ja
push
sbb
pop
test
cmp
pop
add
scas
jnp
test
shll
jl
inc
daa
shlb
mov
sub
push
jl
shlb
sbb
dec
in
pop
mov
movsb
pop
cld
fstpl
loope
and
lcall
push
lcall
xor
xchg
leave
or
inc
push
push
fsubr
mov
insl
push
lock
jo
stos
adc
shll
cmp
outsl
jno
fwait
add
or
insl
stc
sbb
cli
ret
inc
pusha
scas
cmp
in
push
fisubs
cmp
aad
repnz
lcall
jecxz
loope
in
push
xor
mov
push
pop
pop
enter
and
jg
pop
mov
xchg
push
lea
jle
add
lods
add
mov
adc
aaa
testl
cli
and
add
fcmovnbe
shll
stos
dec
jnp
fidivs
pop
add
daa
mov
dec
and
mul
or
xor
sub
push
inc
fisubrl
xchg
sbb
jae
cmp
jmp
xor
imul
pop
add
les
enter
and
mov
jecxz
dec
cmpb
inc
xlat
repz
outsl
pop
jl
pop
in
lods
pop
push
mov
cmp
jne
jno
pushf
sbb
jl
out
push
jnp
mov
xchg
sbb
dec
cltd
adc
loop
pop
mov
pop
mov
lahf
mov
jo
shlb
call
clc
mov
and
pop
add
pop
test
popa
and
and
ljmp
loop
jno
dec
roll
test
les
dec
arpl
dec
fiadds
cwtl
xchg
xor
lock
addr16
movsb
test
js
andl
ret
mov
inc
dec
pop
and
mov
or
mov
xor
mov
mov
or
mov
mov
jp
sub
lock
push
faddl
fisubrl
idiv
adc
cmp
sbbl
sti
test
sbb
push
add
adc
or
add
cmpsl
cmp
enter
add
loope
es
or
test
ljmp
dec
jg
xor
adc
xor
push
lock
sub
rolb
cli
subb
aad
mov
mov
xchg
idivb
sbb
inc
movsb
movsl
stos
xor
pop
pop
leave
sti
arpl
leave
xor
out
clc
inc
push
push
pop
pop
jg
loopne
adc
leave
pop
call
ror
lret
jo
fucomi
imul
sarb
inc
mov
mov
xchg
ds
inc
inc
out
test
aaa
and
dec
jecxz
loope
imul
and
stos
xchg
lret
sub
sbb
lsl
mov
mov
or
mov
std
scas
cmp
push
enter
mov
mov
inc
roll
xor
cld
or
and
aaa
int3
xchg
push
ret
jnp
cmpl
inc
and
mov
pop
lock
xor
loopne
lret
test
pop
jmp
jp
shll
add
push
fimull
sbb
movsl
ja
dec
mov
in
mov
nop
push
dec
adc
aad
sbb
fstps
adc
nop
mov
les
mov
jmp
in
mov
jnp
jne
mov
jo
movsb
mov
enter
lds
mov
movsl
xchg
mov
mov
dec
data16
loope
push
aad
lret
lret
mov
push
jb
cmpb
fstps
sub
fcom
imul
pusha
inc
push
sbb
data16
or
push
push
mov
fcompl
mov
mov
jo
in
shlb
sbb
bound
jb
dec
sub
inc
aad
push
lcall
testb
lea
or
fadd
jl
inc
sti
jno
cs
cs
adc
sbb
fldenv
adc
mov
popa
sbb
sub
mov
stos
xchg
add
mov
push
inc
out
push
clc
sub
leave
imul
js
mov
movaps
or
pop
or
sub
std
xchg
iret
xchg
test
and
push
sbb
xor
mov
push
inc
and
mov
jae
cmp
push
fcom
xor
mov
fimuls
testl
push
mov
inc
and
cmp
mov
testl
outsl
aam
rcrl
dec
out
jmp
fadds
or
pop
outsb
lret
xor
add
pop
pop
rcll
xchg
add
iret
mov
not
dec
loop
outsb
out
into
fisttpl
fadds
es
add
movsl
jg
fsubrs
popa
loope
xchg
push
mov
or
sub
sub
mov
sbb
jo
negl
cli
sub
cmp
pop
cmp
out
out
xor
out
pop
sub
sar
and
xor
or
xor
add
lods
imul
pop
mov
fsubs
mov
mov
stos
repz
xor
inc
jno
js
mov
adc
mov
jae
mov
mov
inc
das
add
mov
pop
ret
lock
cmpsl
dec
pop
dec
test
sub
mov
xor
inc
lds
and
mov
shr
rolb
insl
inc
mov
mov
mov
mov
dec
sbb
dec
addb
mov
adc
repz
inc
out
pop
stos
push
add
and
ja
mov
sbb
adc
arpl
arpl
in
lods
push
xchg
lret
out
call
mov
sbb
or
push
out
in
sbb
jge
cmp
std
lret
sbb
adc
xchg
fistpll
repz
pusha
fstpl
sbbb
test
testb
addl
xor
push
sub
lods
xor
int
jo
add
mov
inc
sbbb
ret
xchg
pusha
jne
flds
push
add
jecxz
lods
push
hlt
or
jns
scas
mov
lret
mov
mov
jo
xor
inc
and
sub
or
int3
mov
call
pop
dec
mov
popf
aam
clc
rclb
in
data16
scas
mov
add
adc
push
mov
testl
sub
mov
fdiv
mov
scas
sbb
pop
call
pop
jl
push
push
push
and
jecxz
nop
xor
sbb
pop
iret
ss
adc
dec
mov
fs
dec
sub
mul
fnsave
lds
xchg
fbstp
not
cmpsl
pop
sbb
and
or
dec
and
mov
lcall
mov
int
divb
lret
int
mov
imul
xchg
iret
cs
movsl
enter
or
pop
mov
push
out
andb
cli
fbstp
jge
aad
fisttps
negl
bnd
shll
int3
push
sub
or
and
inc
jle
sub
xlat
in
out
jecxz
cmpsl
adc
inc
lea
rcrb
inc
in
lahf
push
lods
lods
addr16
fdivrl
jnp
inc
lods
pop
push
dec
dec
xchg
imul
or
fsubrl
fwait
cli
mov
cs
push
xchg
sbb
leave
mov
cs
jae
icebp
imul
xchg
imul
xchg
or
sub
push
lcall
aam
dec
xchg
xchg
cmp
lods
or
ljmp
ret
cmp
icebp
add
test
sbb
push
dec
add
mov
js
fwait
mov
int3
dec
sbb
jle
mov
pop
std
orb
push
pop
cmp
inc
mov
inc
pusha
xchg
mov
enter
repz
jno
xchg
mov
add
loope
cltd
dec
jmp
bound
orl
stos
xor
mov
and
push
stos
arpl
jb
pusha
mov
leave
imul
into
rcrl
pop
pusha
loope
cmc
fsts
rorl
jne
int
dec
adc
xorb
pop
push
je
mov
sub
mov
les
cmpps
int3
fcompl
mov
loop
xor
or
mov
popa
jmp
add
loope
mov
cltd
adc
das
test
sbb
lds
jmp
jmp
mov
adc
jns
pop
enter
push
imul
and
dec
inc
push
adc
outsb
mov
sahf
or
mov
popf
out
in
mov
aad
sub
mov
arpl
xchg
or
in
cmc
mov
xchg
push
mov
or
gs
stos
or
mov
test
fisubrs
repz
jg
enter
mov
rcl
pop
inc
out
mov
dec
rcl
insb
mov
xchg
fistps
fnsetpm(287
fs
int
jno
push
sub
mov
out
push
filds
insl
sbb
xlat
adc
sbb
out
push
imul
gs
repnz
ret
stc
xor
and
push
lds
jl
jnp
js
sub
inc
test
subb
daa
push
xchg
roll
adc
xor
pop
cmp
out
fnstcw
arpl
into
cld
test
push
jbe
mov
jbe
mov
mov
popa
mov
scas
mov
mov
sbb
mov
xchg
mov
loope
xchg
push
call
aad
popf
jge
mov
jmp
push
popf
jo
cwtl
js
ss
loope
movsl
in
jle
cltd
imul
mov
out
out
fidivs
jmp
mov
sbb
gs
popw
stc
nop
add
outsb
mov
xor
bound
xchg
mov
mov
xchg
inc
push
xchg
jg
xor
ret
and
daa
rorb
push
adc
mov
push
mov
fistps
int3
xchg
xchg
and
inc
std
imul
ljmp
pop
mov
mov
pop
sbb
in
insl
inc
add
lock
cmp
out
push
iret
ss
jnp
xchg
mov
rorw
andl
push
add
pop
mov
popa
test
lahf
pop
adc
gs
cmp
dec
jno
iret
xchg
daa
pop
inc
and
out
movsb
sbb
jmp
cltd
lcall
mov
push
sub
js
dec
es
icebp
out
mov
sub
inc
or
insb
bound
pop
notl
lods
mov
iret
xchg
repz
jno
dec
stos
dec
jmp
adc
adc
shll
ret
cmp
sub
pop
xor
and
sbb
fdiv
or
dec
loop
fsubrl
push
mov
cwtl
xor
adc
sbb
iret
sub
arpl
jbe
pushf
jnp
push
add
jne
mov
lahf
and
jae
loop
int3
imul
ss
sbb
pop
aam
lahf
adc
cmp
inc
hlt
cmp
arpl
mov
pop
or
movsl
sahf
or
adc
imul
mov
mov
lcall
cmpsl
dec
and
xchg
rcrb
inc
dec
jno
aaa
mov
mov
and
stos
fcompl
scas
ret
loopne
inc
jl
xor
and
adc
enter
pop
in
fdiv
decl
sbb
imul
outsb
enter
ja
arpl
sbb
dec
mov
xchg
fsubs
and
mov
pop
pop
sub
cld
inc
pop
adcb
popa
xor
pop
xchg
dec
cld
xchg
cmpsb
leave
add
inc
fiadds
ss
add
push
out
or
add
jecxz
xor
ja
sub
and
test
and
mov
les
inc
sub
movsl
je
cmc
xchg
pop
insl
push
out
cld
test
fldt
std
jbe
xor
popa
xchg
pop
xchg
adcl
nop
clc
mov
fdecstp
sub
push
popf
adc
push
xor
add
outsl
nop
insb
sbb
test
xchg
jne
mov
mov
fdivrs
jnp
loop
lock
std
xchg
push
pop
lret
in
pop
push
test
fdivl
addl
ret
icebp
mov
inc
sub
ret
push
xchg
mov
push
pop
add
xor
and
lea
add
mov
lods
pop
push
mov
mov
adc
inc
cmpsb
mov
pop
pushf
enter
std
xchg
xchg
xor
ud0
dec
dec
test
or
cwtl
insb
xlat
push
xchg
fsubrl
movsl
lahf
fistpl
adc
ss
xchg
mov
ds
xor
add
jle
sbb
push
mov
jbe
mov
loope
pop
mov
lcall
in
aam
pop
je
aaa
repnz
cmp
fists
jns
or
rclb
es
or
pslld
jbe
ljmp
mov
mov
mov
mov
fisubrl
shlb
dec
fsubr
aad
out
jns
xor
in
jns
out
mov
sarl
insb
cmp
xchg
mov
cmp
arpl
adc
arpl
roll
inc
and
imul
jne
enter
in
jmp
ljmp
mov
xchg
or
push
jne
dec
mov
jmp
fmul
inc
add
test
pushl
inc
ljmp
sub
pop
dec
add
pop
int3
movsl
aas
lods
dec
mov
dec
xchg
in
mov
icebp
xchg
ljmp
inc
pushf
adc
push
inc
insl
add
sbb
cmp
jg
dec
jle
xchg
mov
movsb
popa
sbb
pushf
mov
inc
jle
dec
mov
fimuls
test
jmp
dec
aaa
cmp
and
dec
inc
jnp
lret
jb
push
mov
rol
pop
xlat
pop
mov
inc
test
or
and
mov
xchg
ljmp
dec
xor
add
movsl
xor
in
pop
mov
mov
inc
data16
sbb
pop
aad
pop
mov
dec
aam
cltd
mov
lods
jl
dec
rcll
mov
gs
xor
inc
jl
or
or
adc
dec
add
pop
xchg
out
cmpsl
dec
in
out
fucomp
pushl
jnp
push
out
fildll
and
dec
mov
subb
pop
daa
test
sbb
dec
xor
xor
jns
jp
mov
dec
das
nop
adcl
mov
pop
mov
fucom
insl
cmpsl
inc
inc
jmp
push
lds
addr16
adc
sub
clc
enter
jo
jnp
sbb
mov
ret
imul
out
pop
add
dec
push
add
imul
inc
rcrb
inc
fdivl
jbe
popa
jge
mov
pop
add
fcompp
stos
insb
sbb
mov
fldcw
pop
pusha
xlat
add
add
dec
mov
cwtl
sbb
mov
ds
mov
aas
adc
mov
jge
call
stos
sub
dec
push
jae
push
and
jl
imul
pop
mov
das
aas
cld
dec
dec
push
sti
addb
push
das
pop
lahf
roll
push
jge
in
scas
xchg
fldl
add
xchg
cltd
cli
icebp
loope
fwait
push
xor
inc
aaa
ja
pop
push
mov
lahf
xlat
dec
stos
push
cmp
pop
pop
dec
cmpsb
scas
xor
fidivs
insl
mov
in
or
mov
xor
mov
xchg
cltd
lods
mov
pop
add
pop
popa
jl
mov
or
sbb
pop
pop
popf
sub
insl
jne
mov
xor
jp
les
dec
sub
pop
jp
in
fisttpll
fdivrs
imul
lahf
dec
arpl
cmpsl
push
mov
addb
adc
test
stos
movsl
in
push
sarb
popf
push
sub
lret
mov
cmp
cmp
mov
push
xchg
jae
arpl
xor
mov
dec
xlat
push
cmp
out
mov
scas
loope
and
mov
xor
add
mov
pop
data16
dec
xchg
push
ja
push
cmp
insl
add
fldl
push
mov
aaa
xchg
jnp
sub
and
lds
pusha
adc
xchg
dec
outsb
mov
div
cmp
xchg
test
adc
ss
aaa
stc
xlat
ds
ljmp
push
test
sbb
inc
cli
pop
lock
mov
mov
out
push
ljmp
test
std
test
inc
fsts
imul
inc
add
push
iret
push
mov
cmc
jb
mov
and
mov
xor
xor
in
mov
xor
aas
dec
mov
dec
notl
or
lcall
dec
loope
inc
sub
lods
mov
sbb
cmp
sub
jne
mov
mov
mov
and
sarl
fsts
or
mov
pusha
jb
int
in
pop
mov
cld
push
sbb
pop
out
adc
icebp
inc
movsb
xchg
dec
rclb
stos
mov
mov
lfs
ffree
cmpsl
sub
adc
fsubrl
outsb
xchg
push
out
cmp
movsb
jle
hlt
and
or
fsubs
pop
gs
mov
add
roll
inc
int
mov
xor
mov
sti
hlt
xlat
fdecstp
out
fisttpl
in
pop
mov
xor
sbb
push
rcr
pushf
xor
lds
fnsave
mov
push
inc
inc
rcrb
push
lret
push
sub
mov
ret
test
outsb
xchg
mov
or
and
sub
inc
and
xchg
aam
addr16
mov
push
aas
repnz
and
fldenv
cmp
mov
cmp
test
push
dec
dec
push
jmp
aaa
std
fcomp
fists
pop
jge
or
mov
mov
mov
and
out
aas
fstp
cmpsb
mov
push
idivl
mov
es
fldt
cmp
mov
lods
mov
or
cli
mov
test
mov
icebp
aam
push
jbe
xchg
test
clc
dec
xor
push
cwtl
sti
jmp
fcoms
sbbb
xchg
aam
fs
insl
es
iret
outsb
push
mov
scas
hlt
mov
or
xor
xor
xchg
imul
in
mov
xor
and
ljmp
ret
pop
sbb
mov
ret
mov
test
lahf
push
inc
cltd
cmpsb
adc
adc
or
cld
mov
mov
inc
ret
scas
mov
loop
xchg
clc
xor
insb
call
and
xchg
inc
adc
xchg
fcompl
cmc
inc
push
adc
insb
pop
adc
in
fstpt
push
jmp
jecxz
repnz
mov
bound
inc
scas
push
stc
cld
mov
je
inc
mov
adc
addr16
arpl
mov
aam
scas
fildll
or
pop
popa
aam
pop
insl
sbb
out
test
sbb
pop
fldz
in
mov
icebp
xchg
stos
hlt
jecxz
bound
push
cli
repz
mov
daa
test
and
popf
push
mov
mov
ja
sarb
jns
push
fidivrl
xor
ret
insb
add
je
insb
cli
jl
xor
cld
mov
je
jb
xlat
xchg
pop
push
sbb
xor
bound
xor
cmpsb
nop
mov
ss
fdivrs
jp
jge
dec
adc
outsb
insl
inc
jne
jb
jg
pop
jg
adc
scas
fwait
out
jbe
and
xor
pop
js
xchg
cmp
test
mov
enter
icebp
in
xchg
pop
dec
adc
push
enter
mov
leave
fwait
hlt
dec
addr16
in
pop
mov
add
cmpsb
fnstenv
out
in
lcall
sar
neg
mov
cltd
fisttps
out
jno
dec
das
je
imul
js
hlt
in
fistpl
scas
outsl
add
sbb
pop
and
or
hlt
add
mov
sub
pop
mov
sbb
sub
xor
push
nop
pop
das
or
in
loopne
push
jl
pop
xchg
jge
and
ja
mov
sbb
in
jno
lret
test
call
mov
xor
es
pop
mov
data16
ror
cmp
mov
adc
cs
lcall
jp
ret
adc
sbb
xchg
cmp
mov
pushf
scas
nop
inc
cmp
repnz
dec
daa
sbbb
pop
dec
call
andb
loopne
pusha
loop
cmc
sbb
sbb
aad
fucom
iret
test
mov
pop
mov
outsb
dec
stos
jle
enter
xchg
inc
cwtl
les
lds
pusha
test
stos
cld
aam
fstl
addr16
cmp
rorb
jmp
jle
aaa
mov
pusha
lret
fnstsw
dec
pop
mov
in
adc
fmull
and
lds
gs
xchg
xchg
test
jecxz
scas
scas
jb
js
sub
pop
test
andb
repnz
sbb
fucomi
sub
hlt
stos
jle
pop
mov
in
sarb
loop
pushl
js
sub
fildll
dec
xchg
and
mov
adc
loope
test
incl
repnz
or
nop
scas
repz
pop
imul
outsl
push
mov
sbb
insl
ja
push
mov
addr16
adc
sbb
jmp
dec
mov
dec
push
cmp
movsl
icebp
mov
das
popa
bound
sbb
gs
xchg
mov
xchg
pop
and
test
daa
enter
leave
or
pop
mov
xchg
nop
xchg
and
add
fs
daa
repnz
fmul
push
in
ljmp
sbb
fiaddl
lds
push
fistl
jae
pushf
sub
add
sub
dec
cmc
sub
mov
pop
int
xor
stc
xor
popf
shrb
cwtl
jle
scas
imul
mov
into
in
push
sub
pop
xor
mov
pop
pusha
in
int3
pop
stc
cltd
or
pop
add
dec
mulb
and
mov
lock
sub
inc
add
test
es
lret
movb
mov
scas
adc
xorl
dec
das
push
adc
js
mov
sti
lds
cmc
xor
fadd
movsb
xchg
pushf
or
fistps
mov
add
rorl
push
mov
jg
fs
sub
push
mov
jle
sub
pop
fnstenv
ljmp
into
add
int
lcall
das
in
mov
in
adcb
in
xchg
or
mov
add
testl
cmpl
lcall
cs
mov
lea
jnp
jne
js
outsl
cmp
jecxz
lods
test
adcl
mov
add
ss
jne
sub
sub
pop
sbb
mov
ss
cmp
jp
pop
push
cmpsb
inc
lds
iret
xchg
xor
pop
daa
push
or
outsb
mov
dec
fistps
and
pop
dec
mov
es
int
sbb
cmp
lods
out
sbb
pop
bound
sbb
leave
or
hlt
leave
or
lds
mov
shll
in
inc
mov
xorb
lret
xchg
mov
pusha
icebp
imul
das
dec
and
fcmovnbe
enter
inc
popf
xor
add
jno
push
xor
xchg
js
int3
stos
jle
insb
push
lea
push
sub
repz
aaa
clc
data16
push
and
or
stos
mov
lret
mov
fs
stos
in
adc
mov
pop
loope
inc
fsubs
xor
aas
sarl
jg
xchg
or
or
push
enter
insb
push
and
out
arpl
ljmp
movsl
shlb
pop
outsb
and
sub
out
loop
rcll
mov
mov
add
iret
cmp
in
lds
fcmovb
mov
mov
and
mov
dec
fstps
stc
shll
pop
call
int
dec
xchg
pop
mov
clc
pop
jmp
fstpl
mov
stos
sub
jns
gs
insl
je
and
cmp
dec
mov
repnz
adc
push
ljmp
sub
xor
mov
xor
out
mov
cmpsl
mov
push
sub
jl
dec
fidivs
xchg
pop
mov
and
iret
sbb
xor
mov
push
nop
xchg
cltd
mov
mov
bound
cld
div
sub
push
lods
popa
sub
sar
insb
pop
fistl
jecxz
pop
fwait
outsb
xor
inc
cli
adc
popf
adc
sub
fbld
ret
in
jmp
push
sbb
or
cmp
rcll
mov
xchg
shlb
pop
mov
inc
pop
outsl
or
mov
addb
lock
mov
ljmp
test
ret
out
sbb
jbe
pop
pop
popa
xchg
xchg
in
aam
pop
mov
mov
pop
inc
mov
xchg
js
arpl
cwtl
xchg
mov
icebp
pop
test
jno
dec
and
dec
mov
popf
ss
mov
jge
cli
mov
mov
sub
lods
in
mov
rolb
and
iret
xchg
in
jns
dec
push
and
and
clc
inc
pop
inc
inc
testl
pop
cs
das
mov
xor
dec
mov
jg
rcrb
add
jnp
movsl
sub
push
and
icebp
insb
cli
repnz
mov
mov
out
clc
fld
mul
int
jnp
in
fidivl
xchg
and
idivb
mov
cvttps2pi
push
fadds
mov
inc
stc
mov
fcoms
lahf
in
data16
lahf
dec
dec
stc
fcmovnu
sub
je
sahf
push
fsubr
cmpsl
sbb
sbb
xchg
call
pop
jne
xchg
out
cmp
dec
in
jle
mov
xchg
sub
add
or
mov
je
loopne
xor
pushf
and
movsl
test
lea
jnp
push
xchg
xor
dec
pop
cltd
lods
cmp
and
sbb
loope
cwtl
and
das
fstl
xchg
ror
pop
xor
les
nop
cltd
dec
fcomps
je
aas
xchg
rcrb
pop
lods
test
sbb
outsl
scas
lahf
inc
ror
dec
lcall
inc
pushf
mov
icebp
xchg
push
xlat
cmc
xchg
fdivl
enter
mov
lea
xchg
jg
clc
sub
xchg
outsl
adc
cmp
jmp
hlt
sbb
loope
lds
mov
sbbb
mov
outsb
mov
sbb
pop
add
adc
sbb
movsb
daa
jnp
pop
test
add
das
and
jne
sub
add
xchg
aas
stc
subl
adc
cli
push
push
inc
int3
adc
ret
adc
imul
cmp
xor
sub
aam
mov
int
push
repz
cmpsl
lds
les
bound
mov
ficoml
xchg
dec
pop
dec
clc
mov
push
out
mov
lahf
aad
fwait
inc
notl
sbb
xor
fidivrl
inc
insl
xchg
jl
test
pop
out
push
sbb
subl
bound
push
jnp
mov
mov
imul
cs
daa
mov
cmpsb
mov
ds
and
jno
dec
outsb
and
mov
mov
sbb
adc
in
movsl
cld
or
or
inc
sub
mov
inc
xchg
fidivrl
call
lods
mov
cmp
lret
adc
insb
or
imul
sub
push
xchg
std
push
fiadds
add
testb
scas
outsb
test
adc
xor
inc
fiaddl
into
cmp
movsb
clc
push
mov
jns
mov
cld
loop
jg
loopne
fwait
mov
push
and
subl
loope
shlb
add
sbb
fnstenv
das
repnz
lods
lahf
mov
add
pop
jge
xor
lret
mov
xchg
and
std
mov
inc
push
pop
dec
mov
xlat
xor
daa
and
test
mov
roll
or
jg
out
inc
push
je
dec
inc
cmpsl
mov
pushf
cmp
push
mov
aas
mov
fcomps
scas
movsw
mov
xor
or
cmp
nop
rcr
xchg
enter
or
enter
lret
fcoml
jb
inc
daa
stos
cmp
sub
cmp
cmpsb
mov
stos
daa
insl
and
mov
aas
icebp
negl
test
mov
into
cli
popw
dec
mov
pop
dec
sbb
cmp
cmp
add
cld
cld
xor
jmp
in
push
mov
dec
les
xchg
sub
or
jp
jp
push
addr16
jo
adc
push
pop
xchg
in
inc
or
add
popa
jge
cmpsb
mov
adc
push
or
mov
and
cmpsb
aam
mov
jne
mov
sub
mov
xchg
pushf
xor
inc
mov
xor
xchg
push
out
inc
add
cli
stos
fldenv
inc
int
push
fldt
cmp
aaa
push
cltd
call
fldenv
addl
jbe
out
pop
in
pushf
xor
sbb
push
mov
pop
into
sbb
aam
sub
sub
loop
outsl
xchg
pop
pushl
loope
data16
lret
mov
lods
in
hlt
jne
std
movsl
insl
mov
inc
xchg
pop
mov
and
jno
inc
movsl
xchg
adc
cmp
pop
jae
push
pusha
or
add
pusha
dec
adc
pop
xchg
dec
lds
out
jp
mov
mov
pop
lcall
mov
push
cmpsl
shrb
add
and
sbb
sarl
pop
imul
push
inc
or
cmc
leave
cli
loop
pusha
aad
or
loop
jp
lret
sub
das
pop
or
sbb
or
dec
mov
pusha
push
mov
lods
mov
dec
pop
out
xchg
dec
ds
pop
jnp
popf
pop
inc
jmp
or
lahf
pop
cs
pop
jecxz
adc
dec
inc
mov
sbb
jl
jmp
dec
pushw
outsl
out
sti
popa
mov
call
mov
jne
in
jl
jmp
pop
sub
push
iret
xor
and
adc
fcoml
or
pop
inc
test
or
shl
adc
mov
out
aad
jae
les
xorl
ficomps
sub
push
ss
jo
ror
mov
bound
jecxz
push
lds
cmp
inc
scas
clc
lea
dec
loopne
gs
pop
xchg
push
lods
mov
sbb
jp
inc
xor
shrl
sub
sub
mov
mov
cmc
outsl
fimull
adcb
repnz
sbb
ret
fcompl
jb
fwait
insb
outsl
add
cmp
outsl
int3
cmp
jb
and
enter
xchg
pop
dec
cs
and
mov
stos
lock
xchg
pop
aaa
cmp
push
loop
mov
xor
inc
or
popf
xchg
stc
arpl
lret
sub
pop
xchg
push
push
jns
fdivrs
mov
and
out
nop
jae
xlat
fsubp
popf
pop
add
addr16
mov
daa
ret
cmpsl
std
out
out
sbb
pop
aas
cmp
push
inc
out
pminsw
push
jae
mov
lret
popf
inc
mov
aam
cld
in
loopne
fsubrl
je
dec
jb
or
sbbb
sti
push
cld
bnd
add
ret
sub
addr16
lret
loop
jmp
scas
subb
xor
jnp
cwtl
jno
jge
mov
int3
jns
cli
inc
jg
int3
inc
push
jns
sub
or
add
xor
cwtl
fdivrl
cltd
and
adc
sbb
int
push
pop
push
pop
dec
push
lock
imul
bound
cmpb
inc
jge
stc
in
xor
cmpl
mov
pop
adc
lret
sub
cmpsb
xor
jo
pop
xor
xchg
push
add
xchg
out
jo
ret
sbb
aad
das
arpl
shlb
push
andb
pop
mov
je
pop
dec
insb
sub
xchg
push
into
stc
inc
mov
cmc
mov
gs
dec
mov
xchg
out
sbb
jl
fstl
jmp
xor
ds
ret
divps
aaa
or
outsl
jl
mov
cwtl
dec
mov
divb
sbb
mov
ss
les
fwait
xorl
pop
lea
out
dec
sti
xchg
or
and
lret
sbb
inc
add
adc
sub
push
pop
lock
xchg
push
inc
leave
or
aaa
rorb
cli
or
aaa
or
jle
lret
popa
inc
in
adc
push
test
mov
insl
mov
jl
sbb
mov
add
pop
mov
or
pop
fidivl
addr16
cmp
adc
addb
inc
fisubs
jns
jp
xchg
fcomp
mov
sbb
and
clc
bound
adc
jp
or
int3
inc
mov
adc
lcall
pop
cmp
mov
or
lock
sub
jnp
xchg
jbe
bnd
adc
mov
std
fldenv
push
sbb
jne
das
insl
pop
xchg
xor
adc
sub
and
adc
cmp
cmp
test
bound
cmp
sbb
push
dec
mov
and
std
int
jecxz
pushf
dec
dec
or
push
jl
cmp
push
and
and
movsl
imul
cmp
leave
jge
and
pop
popf
fidivl
xchg
cmp
clc
cs
and
into
aas
movsb
daa
adc
mov
lods
imull
test
or
xchg
sbb
pop
push
push
dec
call
push
jp
insl
in
inc
mov
aas
out
push
lcall
sbb
mov
dec
sub
aaa
dec
jl
xchg
adc
xchg
jne
fisubrl
dec
sbb
push
outsb
mov
pusha
repz
insl
and
pop
cmp
hlt
arpl
loop
push
mov
sbb
das
fnstenv
adc
jecxz
mov
outsl
add
add
clc
ret
push
jno,pt
mov
repnz
jecxz
sbb
loop
sahf
or
ss
xor
ret
push
and
push
cmp
dec
mov
fucom
mov
inc
mov
popf
out
push
inc
es
and
fimuls
cmp
adc
xor
dec
mov
in
lods
cmc
pop
cwtl
in
mov
mov
addl
and
jns
shl
clc
jno
out
push
jb
stos
loope
pop
xchg
arpl
push
fwait
push
in
add
mov
ret
in
inc
and
test
dec
push
or
insb
insb
loop
xchg
idivl
insb
or
pop
add
or
sbb
inc
mov
jle
mov
cmpsl
inc
mov
int
mov
jg
stc
int3
lcall
inc
test
daa
sub
sub
mov
mov
cld
int
pop
sub
jo
mov
mov
leave
push
cmpxchg
and
mul
fwait
and
das
out
push
sub
outsb
in
xlat
fcompl
jo
xchg
mov
or
push
xor
cli
dec
scas
call
push
popf
dec
add
sti
mov
test
fisubl
cmp
push
repnz
pop
inc
pop
leave
mov
imul
push
xchg
xchg
jp
adc
push
xchg
push
fstps
sub
push
leave
and
rclb
lcall
and
jg
cmp
mov
ss
push
lahf
pop
mov
inc
push
insb
xchg
mov
inc
mov
jno
pop
iret
cmp
jae
ret
sbb
mov
aas
sbb
sbb
int3
cmp
or
inc
xlat
dec
and
call
rolb
or
jno
cmp
push
ja
jp
cltd
fnstcw
jecxz
je
mov
add
scas
mov
in
mov
mov
mov
mov
adc
in
out
jp
loope
pop
gs
mov
xchg
je
cmpsl
xchg
jl
insl
dec
xorl
xchg
lcall
scas
scas
and
loop
cmp
loop
pop
jl
mov
call
ss
sarb
mov
ret
int
and
rolb
sbbl
sbb
mov
cmp
pop
hlt
stos
pop
inc
mov
jae
int
dec
and
xchg
out
sahf
jmp
fildl
insl
and
inc
mov
cmpsb
xor
enter
push
inc
lret
adc
jp
xchg
and
int3
test
inc
pushf
push
xorb
inc
clc
push
testb
leave
pushf
rcll
push
les
das
icebp
inc
and
in
inc
pop
cs
lods
jmp
mov
push
push
out
icebp
adc
dec
inc
mov
in
in
pop
daa
mov
and
fs
push
jp
xchg
add
mov
clc
mov
or
push
xor
push
and
push
xchg
lds
data16
or
or
mov
mov
ds
nop
dec
mov
repz
mov
mov
inc
rcll
sbb
sbb
popf
jnp
cmpsl
xchg
jae
inc
dec
orl
jbe
jle
sbb
add
dec
cmp
jg
mov
jmp
mov
popf
in
and
add
lea
pop
aas
mov
hlt
repnz
xchg
or
andl
insb
adc
sbb
sub
sub
mov
stos
mov
movlps
aam
popa
or
in
outsl
pushf
gs
and
test
and
in
adc
push
jmp
subb
icebp
xchg
push
js
sti
adc
cmp
pop
popa
xchg
mov
add
push
iret
hlt
add
call
aad
or
or
lods
outsb
mov
andl
and
mov
xchg
ret
cmp
xor
push
add
pop
xchg
std
inc
xor
xor
add
adc
or
cmp
xor
lea
inc
adc
aad
pusha
cmp
xor
es
pop
lcall
or
cmp
aaa
cmp
push
mov
push
popl
xchg
std
pop
out
sbb
jne
add
fildl
pushl
add
dec
add
stos
dec
push
or
pop
or
jne
dec
add
xor
outsl
movsb
cltd
aas
andb
iret
add
call
out
fimuls
or
fistpl
stc
mov
push
insb
sahf
adc
mov
icebp
push
aam
or
test
rorb
cmp
xchg
ficompl
shrl
xor
jg
sar
dec
mov
sub
push
stos
into
add
mov
sub
xor
out
aad
xor
cmp
sub
or
in
std
test
repnz
fcomip
mov
imull
push
in
lock
aas
cmp
div
lea
inc
popa
push
and
push
and
push
dec
stc
movsb
mov
push
dec
mov
or
pop
rcll
mov
mov
cld
cmp
or
inc
cmp
dec
cmp
mov
js
jl
adc
int
mov
xchg
lahf
out
jge
jne
imul
rolb
push
flds
cmc
lret
jo
fidivs
stc
clc
jge
mov
sub
mov
xor
cmc
shrl
movsl
add
cmc
push
jno
inc
mov
icebp
mov
hlt
xchg
push
mov
sub
mov
or
leave
mov
popl
aam
es
fadds
xor
adc
cmpsb
adc
psubb
repz
inc
lret
cltd
add
lods
and
mov
imul
dec
mov
push
fdivs
ret
shll
outsl
dec
sbb
jl
andl
lcall
popa
mov
div
pop
popa
and
cld
out
jns
iret
mov
jo
hlt
sub
pusha
mov
xor
les
scas
pop
cmpsl
sub
cmp
mov
fcom
js
push
inc
pop
sub
aas
shll
and
aaa
stc
cs
pop
pop
and
pusha
pop
sub
scas
or
mov
out
inc
mov
pushf
insl
outsb
inc
or
popa
add
mov
lret
push
lea
ja
std
pop
pop
lret
lods
and
out
xor
jnp
lods
dec
lods
pusha
mov
push
mov
mov
inc
adc
push
xor
push
jge
imul
or
lcall
xor
fnstsw
jno
sub
icebp
fldenv
sub
out
mov
cwtl
data16
fsubs
dec
jno
dec
cmp
add
lds
shll
push
add
xchg
cmp
sbb
add
adc
inc
pop
mov
dec
dec
daa
lahf
das
inc
mov
imull
and
lock
mov
mov
mov
out
jl
loope
cwtl
mov
push
jecxz
out
iret
inc
psrad
xchg
fimull
sbb
push
xchg
add
jnp
cld
insl
dec
scas
or
pop
dec
lcall
in
push
cmpsb
fstl
mov
lcall
mov
jno
shlb
mov
jg
xchg
push
dec
pop
clc
push
add
jne
add
push
loopne
sahf
mov
rorl
aas
inc
clc
xor
jecxz
lcall
mov
into
cmp
cmp
pop
dec
fsubrs
lahf
jno
cmpsb
and
loope
and
pusha
push
into
nop
mov
jnp
mov
jg
das
test
xchg
sub
dec
jne
std
stc
adc
fcmovu
and
xchg
int
dec
inc
and
aas
pusha
dec
mov
xchg
mov
sbbl
push
sub
sbb
jge
push
mov
ret
lods
js
mov
insb
out
stos
aam
loope
mov
mov
pop
cmp
mov
scas
nop
call
sub
dec
dec
xchg
xchg
out
popf
and
xlat
ljmp
adc
xchg
arpl
fadds
cmp
xchg
dec
mov
fnclex
ffreep
lods
mov
or
std
cmp
push
clc
mov
dec
and
add
out
mov
out
xchg
push
dec
pop
dec
stos
adc
and
fstl
bound
push
testb
mov
pop
jae
sub
pop
pop
xchg
mov
inc
imul
fstpt
inc
into
inc
shlb
jge
mov
adc
aad
repz
addr16
pushf
test
int3
stos
fildll
xchg
aam
test
dec
mov
popf
jp
sbbb
push
scas
pusha
sub
or
mov
cmp
loop
mov
in
push
mov
cmp
cmp
sub
mov
add
in
add
aas
lods
arpl
scas
je
popf
lds
shl
mov
xorl
push
ljmp
rep
adcl
int3
xchg
mov
test
pop
enter
into
inc
jbe
call
cmp
mov
sbb
pop
mov
daa
adc
and
push
mov
cli
ret
mov
jo
dec
sbb
kmovd
ss
pop
pop
fcmovu
lcall
fcom
imul
lret
xor
es
mov
fnstcw
mov
pop
and
jecxz,pn
inc
push
push
inc
ret
mov
movsl
leave
inc
adc
inc
ffree
cmp
imul
cmpsb
aam
imul
adc
jmp
dec
ss
sahf
rcrl
je
inc
cmp
push
arpl
popa
testb
imul
cli
xlat
aam
push
jg
add
adc
sub
add
or
dec
and
shr
shl
stc
sahf
pop
mov
les
jae
jns
int3
repz
fsts
and
pop
xchg
dec
and
movsl
stc
fisubrl
mov
xchg
inc
pop
mov
in
hlt
dec
pop
inc
icebp
data16
lods
inc
push
push
sbb
sub
pop
mov
mov
into
adc
stos
mov
mov
mov
call
jnp
stc
test
xor
or
icebp
rcr
jg
mov
ret
lss
dec
lcall
mov
fstps
inc
fmuls
mov
ret
xor
aaa
inc
out
fcomps
orb
dec
out
push
pop
push
repnz
xor
rcrb
mov
addl
int
gs
out
in
psubsw
mull
sub
and
test
stc
pop
or
mov
fadds
push
mov
push
mov
sbb
test
or
fcoml
es
jle
sub
in
mov
mov
push
sub
adc
insb
mov
fistpl
lahf
cli
pop
mul
nop
add
push
pop
mov
pop
lcall
add
aas
hlt
insb
out
movsb
daa
rcrl
clc
in
mov
add
sti
cs
mov
xor
in
jnp
outsl
loop
and
pop
out
addl
mov
adc
dec
pop
std
xchg
lea
stos
mov
jl
mov
sub
sahf
stos
getsec
pop
bndldx
hlt
lds
ja
sbb
sbb
xor
jmp
mov
push
mov
mov
sbb
in
mov
add
filds
enter
lods
mov
adc
fildl
jbe
sbb
and
jge
in
loop
lock
ret
jne,pn
jb
daa
ja
popa
fidivrl
clc
addr16
cmp
add
rolb
loop
mov
repnz
sbb
xchg
out
fldt
iret
xor
test
mov
aad
sub
test
outsl
data16
sti
xor
inc
jno
ret
stos
hlt
jns
or
pop
xlat
push
mov
mov
in
test
adcl
push
enter
insl
movb
sub
xorb
push
inc
insb
sub
fldt
arpl
mov
adc
test
ret
insb
add
ja
aad
and
adc
sbb
inc
fmull
sbb
inc
loop
in
sub
test
mov
or
cmp
cmp
adc
lahf
repnz
mov
dec
sti
cmp
xchg
mov
es
cmp
cs
fisubrl
je
cmp
sbb
and
jbe
shl
mov
gs
shrl
push
mov
lcall
adc
inc
adc
leave
in
and
repz
pop
repnz
sub
mov
cmp
shl
jb
rdtsc
loop
mov
xchg
les
ja
mov
mov
scas
pop
pop
add
sub
aam
cmp
out
int3
jo
cmp
fldz
orl
mov
and
mov
out
adc
sbb
cli
mov
and
adcl
movsl
mov
cltd
push
imul
call
lar
sub
pop
call
sbbb
sbb
mov
scas
testb
or
lcall
dec
jle
xchg
adc
or
push
pop
out
push
popa
fcom
pop
sarl
cltd
push
jle
les
mov
dec
loop
jns
push
sbb
cs
gs
pop
cmp
jmp
xchg
mov
lret
pop
xor
push
lcall
lret
adcb
outsl
mov
pop
cmp
and
jle
pop
pop
add
mov
pop
aas
hlt
inc
xor
xor
mov
test
and
adc
inc
pop
jmp
cmc
fists
xchg
xor
push
pop
inc
pusha
push
arpl
xlat
pop
movsb
cli
movsl
rorb
add
cwtl
xchg
lcall
repnz
or
addl
xor
aas
xchg
push
mov
pop
sub
dec
jmp
pop
xor
lahf
in
inc
loop
xchg
scas
hlt
sahf
cmp
sti
ret
into
sub
icebp
sbb
pop
cs
push
xchg
sbb
in
jae
insl
faddl
cmpsb
ljmp
addr16
cmovo
pop
mov
or
cmp
add
lods
add
mov
std
lods
js
stos
gs
fwait
pushf
out
adc
pushf
inc
sbb
cmc
imul
or
iret
sub
call
mov
loopne
addl
lods
xchg
loopne
popf
dec
bound
push
add
push
mov
jp
xchg
or
push
pusha
xchg
mov
shl
xor
cmpsl
repnz
enter
mov
data16
add
adc
cmp
jne
xor
outsl
mov
pushf
mov
lods
ljmp
inc
pop
fistpl
xchg
sbb
push
add
out
push
jne
xchg
shl
cmc
repnz
mov
fs
mov
icebp
stos
sub
mov
pop
xchg
icebp
es
les
adc
out
nop
adc
faddl
ljmp
mov
fidivrs
in
movsl
add
jnp
mov
or
inc
arpl
inc
jle
inc
mov
lret
add
dec
pushf
movsl
cs
fnstenv
movsb
pop
mov
mov
lret
push
push
jnp
shl
mov
ss
jbe
xor
dec
repz
lret
idivb
popf
pop
nop
imul
pop
pop
add
or
stos
loop
inc
test
aaa
scas
imul
jnp
insb
ss
loopne
fmuls
add
psrld
test
inc
iret
dec
hlt
cli
inc
sbb
mov
outsb
jp
xchg
sahf
push
enter
icebp
out
inc
outsb
jne
jno
or
push
push
sbb
pop
es
imull
push
inc
lret
push
pop
lods
add
icebp
xchg
add
fcmovnb
stos
jmp
sub
test
jle
ljmp
das
sub
clc
jo
in
nop
pushf
ja
mov
xchg
scas
or
mov
xchg
fiaddl
add
out
out
cmp
sbb
aaa
fisttpl
das
sub
mov
out
imul
inc
xor
jecxz
xchg
or
pushf
push
pop
std
jecxz
push
out
cmp
cs
test
insb
jns
xlat
jmp
xor
pop
fisubrl
push
mov
repnz
cmp
sub
test
xor
add
insb
ret
dec
lock
adc
xchg
push
sahf
out
mov
cmp
fwait
enter
lahf
and
mov
xchg
scas
push
sub
jae
hlt
xchg
std
dec
enter
movsl
lcall
mov
decb
scas
push
in
cwtl
testb
xlat
andb
push
dec
or
mov
mov
push
cmc
push
cmp
adc
adc
lock
mov
popf
sbb
inc
push
jle
into
sub
or
xor
call
mov
jge
or
rorb
in
out
sub
dec
sbb
popf
jbe
incb
imul
popf
cli
out
jg
inc
in
cli
pop
push
jecxz
mov
and
es
xchg
imul
xor
or
fdivrs
hlt
arpl
xchg
es
pop
shll
aam
pusha
in
clc
sbb
popf
cld
xor
xor
ljmp
cld
test
inc
gs
ds
ret
dec
xorb
ret
jno
mov
mov
subl
mov
lods
cmc
mov
sub
add
push
lds
inc
insl
xor
sarl
adc
sub
jp
out
bound
mov
es
enter
sub
jge
or
pushf
or
add
mov
add
lea
out
fiadds
js
int
xor
xor
clc
inc
fistpll
or
mov
shll
xchg
mov
sub
movsb
lods
sbb
add
lea
je
outsl
mov
dec
inc
push
mov
xchg
push
popf
sbb
sub
pushf
cmp
adc
and
fwait
in
clc
out
jae
mov
xor
inc
xchg
fsubrs
lcall
mov
sbb
mov
lret
or
mov
sarl
test
scas
adc
or
xor
xchg
xchg
mov
das
psrld
icebp
mov
fs
mov
fimuls
fcompl
fwait
inc
mov
filds
out
and
mov
mov
hlt
cwtl
mov
inc
popa
mov
pop
add
add
cmovnp
in
adc
repnz
sbb
testb
imulb
add
fidivrs
es
faddl
mov
sub
jb
mov
jb
in
mov
mov
mov
fdivrl
sbb
mov
mov
xchg
add
push
inc
aam
mov
adc
sbb
je
mov
lcall
testl
sub
adc
bound
or
outsl
test
je
jne
pop
lret
imul
jb
mov
out
push
sub
subl
stos
iret
sub
ljmp
scas
jecxz
pusha
inc
sarl
xchg
cltd
pop
sbb
mov
push
adc
pop
ds
mov
dec
xor
dec
repnz
test
mov
bound
pop
dec
fistpll
pop
shll
lret
push
cmp
cwtl
pusha
push
or
aad
xchg
sti
cmpb
test
cmpsb
xor
stc
lock
mov
push
addb
mov
cld
hlt
out
xchg
lahf
push
icebp
daa
std
mov
ret
mov
sbb
mov
cmpsl
cld
push
ret
jl
inc
mov
sub
xchg
mov
mov
movsl
and
jne
aam
into
popf
clc
add
pusha
inc
rclb
sbb
inc
add
dec
pop
in
imul
mov
hlt
sarb
pop
push
mov
add
test
pop
mov
das
push
fstpl
xchg
xchg
in
ret
jbe
and
push
xorl
jno
sbb
stos
pop
repnz
jnp,pn
xchg
pop
or
cmp
stos
rorl
into
rclb
es
fists
sub
mov
mov
pop
es
div
inc
cmp
mov
notl
inc
xor
push
push
mov
and
roll
popa
bound
adc
aas
mov
mov
dec
push
sub
loope
cmp
icebp
imul
cmpsb
ret
rclb
inc
xchg
adc
pop
inc
aas
rclb
xor
mov
pushf
xor
push
push
sbb
jns
outsb
lret
popf
or
xchg
dec
dec
xchg
mov
xchg
mov
jmp
loopne
xchg
mov
sbb
xchg
mov
xor
and
adc
imul
mov
sbb
push
test
sti
jns
adc
and
pop
loop
jle
pusha
jnp
xor
or
mov
ja
cmp
or
pop
outsb
shll
cli
scas
sub
dec
xlat
loope
dec
sub
adc
stos
mov
lock
pop
sbb
leave
sarl
pop
shrb
jmp
jb
sbb
ficoms
xchg
adc
mov
add
pushf
pop
bound
mov
in
pushf
sbbl
push
fldenv
push
mov
sub
and
jg
call
in
cli
scas
inc
fadds
jge
xor
inc
push
push
icebp
stos
pcmpgtb
lret
loope
adc
push
adc
aaa
inc
mov
jns
int3
pop
addb
mov
and
out
add
in
push
cmp
xlat
ja
mov
out
sbb
lret
cmp
in
sbb
inc
popf
mov
push
outsl
jge
insb
jge
adc
xchg
xchg
jae
hlt
les
jg
jle
scas
add
in
sbb
mov
cwtl
cmp
mov
inc
xor
roll
push
cmc
popa
adc
mov
push
icebp
and
sub
xorl
sbb
or
in
inc
mov
je
inc
pop
jecxz
leave
insl
scas
cmp
je
clc
loop
arpl
dec
push
dec
sub
out
dec
loopne
cmp
jge
xchg
adc
sub
xor
in
or
bndstx
push
sub
xchg
sub
mov
xchg
paddb
orl
daa
push
or
leave
popf
imul
jne
lret
test
xchg
jl
shl
mov
outsl
fwait
ljmp
psubw
insl
popf
pop
sbbb
jp
mov
ja
clc
insb
mov
push
rclb
sbb
dec
and
mov
and
dec
daa
push
xor
pop
jl
inc
sbb
psubusb
dec
jno
mov
outsb
out
dec
nop
xchg
mov
sub
sahf
iret
jmp
fwait
jb
es
sub
mov
mov
fldenv
insb
lea
lds
ret
adc
imul
push
and
adcl
sub
mov
push
and
cwtl
negb
dec
jnp
mov
aad
jb
shlb
mov
out
or
outsl
push
inc
push
sar
enter
loopne
test
add
sub
pop
inc
xlat
lds
es
int
das
cmp
mov
cltd
neg
scas
xchg
aaa
in
or
lret
flds
in
push
xchg
jne
and
frstpm(287
xor
cmpsl
inc
leave
xor
push
and
orps
enter
xlat
cmp
cli
lea
mov
mov
jbe
mov
dec
or
lret
push
es
shrb
js
inc
mov
ret
cmpsl
jle
leave
lea
jg
addr16
insb
lahf
cmp
jl
mov
in
push
jg
jae
ret
out
mov
pop
fisubl
adc
ret
sbb
shll
enter
in
aad
or
adc
out
int
mov
dec
stos
lret
or
aaa
mov
jl
pop
inc
mov
je
cld
andb
xor
mov
push
lret
sbb
movsb
stos
inc
cmpsl
lds
dec
or
fstpt
mov
mov
cld
jns
scas
adc
lret
dec
xchg
xchg
sti
sub
ds
cld
aas
loop
xor
fsubrl
inc
sbb
add
sbb
inc
imul
inc
les
mov
sub
lahf
gs
dec
subl
je
add
fnsave
aad
inc
pop
jmp
clc
outsl
fcmovbe
shrd
lahf
fldcw
aam
fwait
jae
mov
jge
mov
or
xor
lret
leave
loopne
adc
mov
and
icebp
sbb
jge
in
add
into
jp
sbb
cmp
test
outsb
lods
xchg
push
or
int
sbb
bound
mov
hlt
sub
fisubl
and
js
dec
mov
jg
adc
push
cmp
add
add
scas
pop
pop
jae
loope
cmp
lret
mov
mov
dec
call
sbb
mov
push
rcrb
inc
repnz
add
repz
xor
xchg
cltd
lock
call
mov
pop
in
subb
ficoms
rcr
mov
mov
cmp
dec
sbb
call
mov
jg
adc
push
ficoml
sub
int3
lods
mov
es
xor
iret
js
pop
inc
inc
mov
mov
jmp
inc
jns
in
andl
mov
sbb
movsl
xor
clc
jae
idivb
xchg
js
and
pop
out
dec
lock
lret
in
dec
iret
add
testb
jne
dec
push
xor
dec
out
xor
add
test
jp
sbb
testl
imul
in
mov
gs
and
mov
xchg
or
jnp
movsl
lods
push
or
xchg
sti
add
mov
ljmp
inc
test
sub
jp
aaa
and
inc
fmull
faddl
mov
dec
shll
xor
mov
int
fdivl
push
test
imul
in
fstpl
xor
cli
mov
fdivrs
icebp
jb
in
push
xor
pop
sub
nop
sbb
mov
inc
push
pop
mov
push
push
repnz
mov
xchg
xchg
enter
jp
mov
jl
rorl
jmp
mov
stos
es
jl
mov
fs
push
out
fistpll
insl
loope
aaa
fwait
repz
icebp
pop
mov
mov
cltd
xchg
fld
xor
or
aas
sbb
adc
sub
mov
daa
dec
cmc
ret
jo
popa
shl
jge
mov
repnz
adc
mov
out
int
cltd
dec
sub
xchg
xchg
std
and
shl
pop
push
and
and
rcll
divb
xor
fidivrs
js
sti
sbb
out
aaa
insl
xor
movsb
adc
mov
jp
push
dec
scas
add
jg
inc
mov
pop
nop
mov
nop
xchg
mov
clc
sbb
clc
or
sub
pop
sbb
lahf
mov
sub
insl
fmul
xchg
mov
and
pop
sti
dec
ljmp
mov
adc
testb
test
pushf
xchg
mov
cs
daa
inc
sub
shrb
add
cmp
inc
mov
loopne
or
cmp
pop
aas
imul
xchg
popf
stc
int3
jg
inc
lock
mov
incb
cmc
mov
push
dec
sub
pusha
sub
inc
xlat
or
mulb
testb
push
movsl
mov
push
mov
mov
add
add
push
jns
add
cwtl
xchg
sub
jmp
mov
mov
push
sub
pop
mov
in
leave
in
cltd
mov
sbb
and
or
lret
mov
mov
mov
pop
and
push
pop
lcall
inc
pop
scas
dec
or
roll
jo
mov
xchg
into
mov
stc
rol
ror
imul
shll
mov
add
adc
es
jne
mov
lods
dec
rol
mov
stos
lret
lock
and
dec
out
adc
dec
xor
sbbl
dec
or
inc
mov
mov
sub
mov
pushl
sbb
inc
mov
nop
icebp
push
mov
mov
sbb
lret
mov
shlb
sbb
mov
fldcw
sub
jmp
aad
scas
fsubs
adc
push
sti
add
in
je
enter
mov
ljmp
mov
stc
xchg
repnz
sbb
push
sbb
pusha
std
pushfw
and
jno
inc
test
jecxz
add
popf
or
das
push
loope
inc
fmulp
pop
cmp
pop
mov
and
les
mov
shl
sub
jmp
cmp
sbb
ljmp
add
pop
dec
lock
mov
fists
xor
lahf
fwait
ja
stos
jnp
lret
mov
inc
outsl
sbb
jmp
push
movsl
cli
jge
icebp
adc
mull
and
dec
lahf
sub
cmpsb
xlat
push
stc
cmp
leave
push
mov
jmp
pop
mov
pop
hlt
adc
stc
adcb
lea
jmp
add
pop
dec
mov
or
mov
std
std
daa
mov
sbb
mov
inc
cmc
ds
lods
xchg
fistpll
std
xlat
out
mov
loop
jle
xchg
pop
mov
subb
push
jp
sahf
sbb
sahf
jge
xor
nop
data16
ja
and
iret
jnp
hlt
lods
lcall
insl
xchg
shl
shlb
es
adc
sbb
sbb
insl
or
fcoml
push
cld
dec
aam
xor
or
fistps
pop
and
and
and
xor
xchg
or
push
pop
cwtl
push
outsl
aas
inc
es
jbe
movsb
push
adc
jo
jo
movsl
subl
insl
dec
xchg
jo
add
xchg
ds
sub
pop
shlb
mov
cmp
out
rolb
sbb
cmp
cmp
jae
js
mov
mov
add
shrl
clc
cmp
pop
out
pop
push
pop
cwtl
pop
jg
loope
les
cmc
jl
inc
cmc
push
ds
lea
push
imul
sarb
inc
jne
ret
sub
cmp
push
out
repnz
inc
sbb
push
or
lds
xchg
inc
adc
dec
and
cmp
add
icebp
cld
les
out
aad
xchg
loopne
test
jnp
rcl
movsl
mov
and
lahf
lret
shlb
sub
rcll
push
fwait
mov
into
addb
icebp
fdiv
pop
lret
pop
sub
fcomps
call
out
iret
and
stc
mov
js
in
orl
loopne
aas
adc
rorb
addr16
jbe
cmpsl
xlat
call
cmp
mov
cmp
fldl
xor
ss
pop
cmpsl
add
jmp
into
into
mov
sub
dec
aaa
or
sub
push
int
sbb
clc
sbb
outsb
pop
popa
lods
jle
ljmp
pop
sti
pop
loop
sub
int
cltd
inc
ds
pop
and
pop
mov
add
mov
xchg
push
dec
popf
in
cmp
lock
inc
xchg
int
pop
out
or
cmpb
mov
mov
cwtl
pop
aam
sbb
dec
insb
hlt
sti
mov
inc
xchg
loopne
cmp
rorl
xor
sti
xor
mov
movsb
add
and
pop
mov
out
adc
pop
das
sbb
mov
xor
jecxz
test
mov
mov
lods
repnz
inc
push
sarl
pop
push
mov
push
daa
xor
aaa
jno
sarl
test
shrl
pop
movsb
xorl
jae
mov
mov
lock
pop
pop
push
mov
xsaves
es
repz
movl
xlat
dec
mov
addr16
jae
pop
push
sbb
sbb
rclb
andb
aaa
adc
push
mov
pop
xor
jmp
adc
loopne
mov
out
gs
mov
ret
sbb
adc
lods
xlat
inc
inc
mov
roll
mull
rorb
mov
fwait
in
out
jbe
into
xchg
fs
inc
xor
xchg
mov
test
pop
movsb
adc
call
es
inc
inc
inc
adc
push
mov
cmp
mov
popa
sbb
push
jp
lcall
out
adcb
jg
int
add
adc
jne
and
mov
loope
sti
jnp
mov
mov
sahf
mov
pusha
or
inc
pop
repnz
dec
clc
jle
sbb
adcb
mov
mov
jne
mov
inc
pop
stos
and
fisttpll
add
dec
pusha
ja
in
mov
sar
jno
jo
xchg
lea
icebp
das
imul
add
hlt
push
mov
add
adc
mov
jae
pop
test
loope
sub
in
icebp
sti
sub
lret
inc
test
pop
mov
mov
lock
leave
test
jl
pop
in
inc
ret
mov
sub
pop
mov
adc
outsl
mov
out
sub
push
sub
xchg
and
inc
jl
jecxz
dec
mov
aaa
mov
xchg
xor
inc
push
les
sbb
scas
repnz
mov
enter
addb
add
flds
lea
pop
loop
aaa
xchg
cmpsb
mov
icebp
mov
xor
push
test
cmpsl
bound
mov
cwtl
add
xchg
fadd
mov
pop
push
mov
hlt
push
movsb
cmpsb
inc
or
mov
scas
out
push
xor
inc
notl
cmp
aas
cmpsb
add
movsb
xor
insw
scas
daa
sbb
and
and
mov
out
cs
fwait
sub
nop
add
inc
mov
jecxz
fdivp
jo
push
mov
ftst
adc
mov
int
in
cmp
cmpl
and
stos
ret
cmp
stc
ret
fwait
cmpsl
jb
xchg
mov
loop
in
stos
or
inc
enter
mov
pop
scas
movsb
popa
bound
out
add
adcb
sbb
mov
mov
int
jmp
add
cld
int
pop
and
xchg
outsl
xchg
and
daa
mov
push
and
add
fdivr
sbb
add
and
cld
and
scas
clc
call
cmp
popa
xor
xchg
lret
js
das
inc
ds
mov
fdivl
arpl
loope
xor
test
lahf
sub
fs
pushf
pop
rorb
pop
sbb
jnp
ss
out
push
jb
data16
jbe
mov
pop
dec
xlat
push
or
fldl
sti
add
sub
leave
imul
dec
sahf
cmp
cltd
jns
inc
fcomps
lods
add
pop
out
icebp
sub
xchg
adc
lret
inc
sub
and
jmp
mov
sbb
xchg
imul
mov
inc
mov
popa
dec
xor
mov
mov
lcall
stos
fneni(8087
fildl
popa
jb
pusha
das
clc
or
dec
mov
je
inc
mov
scas
adc
arpl
mov
mov
adc
mov
subl
cs
and
fucom
xchg
orps
adc
xchg
pop
push
dec
push
aad
mov
adc
fidivl
sub
inc
shl
jnp
fcoms
lods
xchg
cld
je
and
mov
cmpsl
dec
adc
and
dec
mov
lock
xchg
loope
daa
aas
and
sarl
in
sbb
dec
xlat
shl
add
xor
in
xor
leave
stos
fisubrs
lcall
cmp
lret
mov
nop
movsb
xor
mov
rorl
les
lock
fbstp
cmp
jmp
push
imull
ret
aam
mov
push
addr16
shlb
scas
int
mov
cmp
call
or
push
xchg
icebp
fsubs
mov
add
mov
push
pop
test
test
cmpsl
cltd
outsb
pop
inc
cmpb
out
push
cmp
int
jp
jno
cltd
sarb
mov
push
test
lods
xchg
out
cmp
xchg
adc
jp
lcall
cld
inc
xchg
inc
jl
pop
add
test
repnz
jecxz
pop
popf
xchg
iret
dec
cmp
jle
pop
mov
fmul
sbbl
sbbb
push
xor
cmp
pop
sbb
js
clc
jno
ret
fwait
cmp
or
dec
add
pusha
jns
pop
dec
add
xlat
lahf
or
adc
adc
sahf
aam
push
pusha
frstor
add
and
inc
push
dec
and
aas
int
fs
ret
cmp
dec
push
shll
testl
sub
push
es
lods
xchg
lods
jb
inc
sbb
mov
xchg
sub
cs
add
cmc
js
cwtl
jns
pop
int
cmpsb
push
sub
out
xchg
mov
or
pushf
inc
insl
loop
and
insl
loop
mov
idivb
ss
or
loopne
gs
in
popa
bound
xchg
push
insl
mov
jnp
xchg
and
pop
hlt
daa
mov
push
into
xchg
inc
xchg
mov
mov
and
fstp
jmp
xchg
rcr
cmp
xchg
sub
mov
aas
sbb
in
xor
pop
push
scas
mov
adc
loope
scas
icebp
add
sub
paddusb
sbb
xlat
mov
add
sub
jmp
cmc
div
cmp
add
lods
xchg
ret
pop
shlb
testb
dec
jp
mov
mov
sbb
dec
stos
push
mov
add
repnz
cmc
mov
out
xchg
enter
pushf
sbb
jae
insb
jb
enter
push
ficoms
mov
dec
xor
cld
addr16
and
mov
js
xlat
push
enter
mov
arpl
leave
and
and
bound
fisubs
mov
cmp
out
mov
ret
add
or
push
addr16
lret
xchg
out
das
pop
lahf
adc
pop
xor
stos
dec
pop
xor
jbe
and
leave
inc
cmc
divl
adc
insb
add
mov
test
repnz
mov
call
and
mov
divl
mov
test
pop
adc
clc
inc
push
lahf
mov
push
jg
in
out
xor
dec
inc
push
mov
in
lret
adc
pop
frstor
sbb
mov
cmpsl
dec
mov
fwait
shlb
mov
fstps
or
and
sbb
sub
lret
xlat
lea
xchg
out
das
and
lods
add
movsb
dec
out
js
push
dec
fistps
xchg
and
xlat
scas
lods
xor
sbbb
mov
and
xchg
push
inc
arpl
push
add
lret
daa
mov
and
add
rcr
dec
xchg
sbb
mov
pop
xor
mov
fs
cs
paddusw
or
pop
mov
pop
pop
and
jmp
cmp
sub
jp
push
test
pop
sub
ja
jae
sahf
lea
repnz
and
and
test
jb
pop
sub
push
imul
cmpsb
sbb
std
mov
sbb
and
sbb
out
fnstenv
sbb
lret
scas
es
sahf
pop
or
adc
shlb
bound
imul
xor
add
iret
and
ja
shlb
jno
in
mov
fdivrl
aaa
adc
test
cmp
xchg
or
popl
lds
mov
fcmovne
cmp
je
imul
cmp
repnz
adc
push
les
mov
jg
adc
push
jl
or
insl
add
ret
add
es
cli
iret
and
cmp
sbb
aam
jmp
divl
and
dec
inc
sbb
mov
jb
or
cltd
sub
sub
cmpsb
jbe
xchg
sahf
push
inc
sbbl
jns
mov
mov
test
cmp
push
cmp
stos
xchg
add
push
out
xchg
pop
sub
sub
jo
incb
movsl
pusha
iret
jns
cmp
inc
mov
sub
cmpsl
or
fwait
daa
and
xchg
ficoml
pop
int3
xchg
loop
mov
std
lods
xchg
decb
je
jns
and
ljmp
leave
lods
aad
push
or
pop
sbb
cmp
dec
push
mov
cmp
inc
xchg
or
sahf
mov
psrad
jge
push
xor
push
cmp
mov
push
xchg
fcmovbe
les
divl
inc
outsb
xchg
push
addr16
xor
pop
lods
sub
popa
pusha
pop
jno
orl
jae
mov
loope
sbb
popa
push
icebp
cmpsl
rcrb
lock
leave
arpl
fisttpll
jns
xor
add
pop
add
sub
rep
cld
sub
cmp
das
stos
cmp
jl
mov
sub
xchg
push
movsl
jl
sub
cmp
add
mov
or
push
add
bound
bound
cmp
test
push
std
pop
ds
ret
mov
sbb
mov
aad
push
mov
cmp
es
jmp
jecxz
pushf
adc
xchg
stos
rcrb
xchg
ficompl
test
jge
out
adcl
push
xor
cmp
flds
push
jg
push
std
xor
pop
pop
mov
insb
dec
negl
xchg
filds
cmp
dec
cs
xchg
cmp
cmc
or
push
pop
int3
push
xor
inc
push
add
fsubrl
sahf
int
popa
mov
jae
dec
adc
or
pop
pop
mov
clc
xor
loop
rolb
sarb
inc
jp
sahf
add
sti
scas
aas
mov
and
xchg
movsl
dec
jp
in
dec
mov
dec
xchg
mov
pusha
push
cltd
sbb
push
mov
push
stc
ss
pop
xor
push
test
lds
jns
mov
and
inc
arpl
and
repnz
mov
out
inc
imul
cmp
insb
dec
jnp
cmpsb
pop
and
sbb
adc
xchg
pop
or
add
cmpsl
jnp
pop
rorb
xchg
fs
cld
enter
adc
pop
decb
popf
aad
jnp
lods
aad
icebp
shl
xchg
pop
pushf
push
or
and
or
mov
scas
jge
fisttpl
lods
xchg
test
bound
lcall
out
push
scas
pop
fadds
test
stos
mov
and
pop
sbb
fcomi
mov
divb
insb
mov
or
mov
dec
or
jecxz
aam
ja
fcoml
stos
cmp
adc
jo
in
imul
sbb
lods
test
jle
mov
out
push
inc
fidivrl
imul
adc
inc
mov
pop
imul
nop
fadds
loop
inc
and
mov
gs
sub
push
jno
sub
mov
lret
cmpsb
ds
sub
jl
popf
repz
ds
pop
jg
das
dec
jbe
pop
add
dec
enter
les
pop
and
xlat
sti
cwtl
mov
les
mov
pop
icebp
mov
sti
mov
data16
or
inc
adc
sub
cmp
jmp
stos
in
and
out
xchg
mov
call
cmc
adc
mov
jg
iret
mov
popa
pop
aad
in
js
enter
fstpt
sbb
test
lahf
outsl
pop
mov
sub
jmp
ds
in
loop
xor
dec
das
pop
call
jb
mov
adc
lahf
mov
cmpsb
cmp
xchg
xchg
jecxz
out
movsb
insb
push
fcmovnu
xorl
pop
mov
sbb
mov
sti
jb
mov
push
shrb
shr
stc
rorb
andb
std
call
mov
fucomp
cmc
int3
test
fildl
leave
cmp
inc
mov
rcrb
pop
lds
mov
sbb
push
jo
and
or
and
adc
test
add
mov
pop
cld
mov
adc
jns
dec
adc
outsl
ss
in
daa
gs
or
cli
int3
in
jmp
scas
loopne
in
xchg
scas
cwtl
sbb
addr16
aam
jg
hlt
dec
inc
push
jge
mov
push
jbe
sub
iret
adcl
push
in
lods
jl
sarb
out
push
mov
inc
lret
mov
inc
mov
ja
psraw
push
leave
enter
nop
jne
dec
add
lret
adc
fnstenv
sbb
xor
add
cmc
push
inc
outsb
fdivl
rorl
das
xchg
push
adc
fbstp
or
loope
mov
bnd
fs
lds
or
inc
xor
xchg
adc
sbb
clc
mov
and
sbbb
cmpsl
popa
add
mov
xlat
lcall
xchg
out
push
out
pop
cmpsb
add
mov
lcall
add
dec
jns
lret
sti
stc
repnz
pushf
jp
iret
pop
mov
adc
fs
adc
test
dec
fcomip
inc
inc
dec
lods
fistpl
mov
xchg
adc
inc
xchg
dec
loopne
sub
pop
sbb
push
mov
das
xor
repz
and
and
int3
add
test
lods
sub
into
out
mov
negl
sub
fs
push
jbe
rcr
pop
mov
test
xlat
enter
mov
xlat
imul
jp
ljmp
xchg
aaa
aad
sub
nop
lcall
adc
sub
jae
push
stos
mov
adc
cmp
mov
mov
jg
imul
std
cld
add
inc
ret
loopne
jno
sbb
dec
sahf
jecxz
inc
xchg
xchg
loopne
add
pop
xchg
pop
pop
mul
mov
ret
sub
add
fisubrs
filds
pop
gs
jae
xchg
cltd
clc
test
leave
sbb
movsb
pop
sub
push
mov
je
xchg
sub
sahf
push
fldl
push
jp
loopne
push
push
and
push
dec
and
test
jo
mov
es
pusha
andl
and
ret
or
dec
cltd
outsl
mov
mov
sbb
inc
jg
cmc
mov
loope
adc
lock
mov
out
xor
fldt
push
fildl
cmp
jmp
sub
xacquire
push
pop
test
jge
mov
xchg
test
jge
jb
repz
cmp
mov
mov
jl
gs
mov
push
sbb
pop
push
js
pusha
fdivrs
inc
dec
je
push
xor
push
mov
mov
jbe
inc
outsb
cltd
add
jno
hlt
aad
xchg
mov
imul
pop
lock
xor
push
xchg
outsl
push
and
icebp
aaa
pop
sub
mov
dec
mov
jg
jae
jmp
mov
cli
fwait
inc
cmc
pop
adc
dec
testb
push
sahf
push
dec
xor
aas
pop
xor
add
mov
sub
into
xor
js
mov
xchg
hlt
jle
mov
insl
pop
mov
cmp
adc
xor
jle
scas
pop
inc
cli
gs
stc
or
test
pop
push
enter
jno
sbb
mov
pop
mov
jge
inc
pop
loope
subl
movsl
xorb
shr
pop
fs
aad
sbb
or
and
mov
scas
cmp
and
scas
add
mov
std
sbb
dec
out
jp
lcall
fnsave
pop
lret
cmp
push
add
ret
cmc
movsl
xor
repz
jae
vmovups
mov
cmp
inc
jp
clc
in
mov
sbb
mull
xchg
out
test
xchg
push
sub
sbb
cltd
aas
sub
shrb
push
adc
pop
fcomps
mov
jmp
dec
xchg
jg
jg
or
sub
dec
call
not
and
je
repz
cmpsb
pop
pop
dec
outsl
push
ret
jb
icebp
pop
pop
mov
push
push
std
cld
addr16
lret
call
insb
mov
dec
fwait
xchg
mov
add
daa
cwtl
jmp
push
pop
adc
aaa
sbb
mov
jg
stc
jb
push
xchg
fildl
xor
fnstcw
rorb
ss
inc
bound
repz
xchg
inc
dec
jl
push
xor
jb
mov
jle
pop
leave
mov
push
aam
xchg
rclb
sahf
mov
inc
leave
pop
or
mov
adc
add
jo
adc
xchg
pop
xchg
sub
or
and
dec
imull
cwtl
mov
push
and
out
xchg
gs
das
popf
lods
pushf
mov
arpl
js
mov
mov
mov
mov
pop
arpl
stos
lods
jmp
test
cmp
int3
js
inc
sbb
xor
fcmovb
movsl
and
out
adc
dec
push
add
add
mov
inc
cmp
mov
pop
popf
jne
add
cli
cmp
mov
mov
js
adc
cmp
cmp
repnz
sub
cli
pushf
aas
or
fildl
movsl
xchg
aad
sahf
jecxz
lods
sbb
mov
arpl
aad
lea
movsl
out
sbb
das
pop
mov
xchg
cmc
scas
jp
dec
fisubl
inc
push
mov
repz
adc
push
bound
ja
inc
stos
xchg
repz
push
xor
jbe
xor
jns
add
xchg
ljmp
jle
lea
mov
out
stc
es
and
jb
inc
sub
push
cmc
mov
testb
sub
jg
sbb
mov
pop
mov
cmp
cmp
or
cld
and
insl
inc
jnp
add
scas
aaa
jnp
jo
mov
js
decl
dec
mov
add
xchg
inc
scas
es
mov
int
inc
fucom
icebp
divl
adc
insl
jbe
push
sub
daa
mov
mov
pop
dec
mov
daa
mov
lock
lcall
xchg
dec
fnsave
cs
fisubs
jo
xorl
adc
sti
mov
inc
pusha
xchg
push
out
inc
push
loop
pusha
xor
sbb
xchg
dec
filds
popf
push
add
push
aaa
pop
in
les
ret
sti
ljmp
leave
stos
sub
dec
jp
lods
lods
mov
mov
cmp
dec
cwtl
push
lods
adc
pop
stos
outsb
gs
inc
fisttps
and
cmp
pushf
xchg
out
mov
or
xor
call
andl
fwait
out
pop
movsb
mov
shr
mov
push
push
jle
sub
lea
add
fistpll
ja
scas
divl
scas
rcl
dec
lock
orl
dec
mov
std
int
cmp
cmp
xchg
ljmp
dec
pop
sub
cmpsb
daa
mov
test
stc
psllq
jae
xchg
mov
test
ds
js
ljmp
xchg
das
scas
sub
xor
stos
ss
es
jmp
call
mov
stos
push
pushf
cli
jb
popf
dec
cld
shlb
jb
cmp
dec
iret
push
add
push
sbb
pop
lcall
cmp
stos
addr16
cmp
sub
adc
push
mov
mov
cmpsl
loope
fsubrs
int3
fcom
mov
xor
in
in
ds
scas
in
xor
add
je
clc
xor
add
mov
mov
xor
fbld
movb
jl
adc
je
sub
cmc
inc
xor
popf
les
pop
out
mov
fdiv
shll
inc
cmp
aaa
cmp
xchg
repz
in
xchg
outsb
push
dec
loopne
call
pop
mov
mov
ficoms
imul
cmc
fidivl
scas
sbb
adc
insl
outsl
dec
ss
adc
enter
fldenv
leave
xchg
sbb
add
mov
test
loope
popf
adc
inc
sub
iret
cwtl
out
or
inc
aas
in
xor
xchg
pop
push
adc
sub
push
jle
inc
adc
sahf
add
scas
icebp
fnstcw
scas
jp
jb
xor
ja
es
lret
or
add
fmuls
std
sub
fwait
mov
ja
scas
dec
sahf
mov
xchg
inc
dec
inc
arpl
shrb
imul
jns
and
fimuls
dec
xchg
cs
gs
lock
in
test
inc
cmp
xor
data16
clc
icebp
pop
pop
repz
xor
mov
or
imull
test
mov
cmp
sbb
popa
or
push
inc
mov
sti
push
lret
pop
cmp
imul
sti
fistpl
sbb
fiadds
cmc
and
out
lods
push
push
or
cmp
xor
cli
push
and
movsl
pop
jge
and
push
xor
adc
pushf
xchg
movsl
pop
mov
mov
lret
out
adc
aaa
ss
icebp
scas
rcll
rcr
cmp
icebp
jnp
xchg
fildll
adc
sbb
icebp
pop
xchg
daa
xchg
jg
xchg
lods
inc
cmpl
shr
cmp
insb
jbe
movlps
push
push
scas
clc
mov
ljmp
mov
jnp
enter
mov
cmpsb
sbb
testl
xchg
pop
dec
mov
inc
xchg
mov
sbb
xchg
clc
sub
cmp
pop
dec
lods
xchg
enter
and
mov
fwait
pop
jecxz
pop
sbb
stos
dec
jbe
pop
repz
shlb
cmp
stos
add
push
iret
xchg
inc
es
sub
mov
xchg
and
pusha
mov
push
dec
fisubrl
fbld
inc
jl
rolb
sbb
in
xor
sbb
es
cmp
push
xor
add
imul
or
push
and
in
cmc
pop
data16
lret
sub
mov
mov
in
add
add
js
or
mov
dec
in
int
dec
pop
mov
out
movb
stos
jp
in
sbbl
das
js
mov
sti
fbld
mov
sub
mov
imul
rolb
aam
gs
shl
mov
arpl
xchg
mov
cmp
popa
ds
fidivl
test
andb
pop
iret
out
in
cli
stos
test
mov
fwait
loop
iret
out
lods
fistps
jecxz
arpl
mov
pusha
sbb
mov
cwtl
cli
in
adc
rep
push
xchg
fstps
ja
mov
push
repnz
sbb
mov
fcoms
inc
stc
sbb
dec
ljmp
out
roll
aad
xor
hlt
cmp
mov
cltd
fisttpl
and
ret
stos
mov
inc
push
imul
pop
inc
scas
aad
loope
cltd
testl
and
iret
mov
dec
pop
xchg
or
pop
leave
test
adc
cwtl
pop
jl
insl
sub
add
pop
sub
faddl
fstps
mov
and
movsl
adc
mov
sub
sub
repz
ret
sbb
notl
pop
ds
cmp
cmp
arpl
icebp
mov
jo
and
out
clc
or
lcall
fcompl
fcmovb
aas
cmpsl
repz
push
loope
mov
cmpsl
jl
mov
pop
je
lcall
dec
loopne
dec
fcomp
aam
imul
jb
flds
shrb
mov
popf
inc
xor
xorl
ljmp
pop
push
mov
mov
icebp
lret
enter
jbe
jbe
sbb
cmp
loopne
cmpsl
mov
dec
mov
pop
out
and
sub
dec
sub
sbb
mov
mov
add
xor
jbe
dec
xchg
inc
jae
fnstenv
push
nop
dec
in
rorl
xor
loope
add
inc
cmp
jae
hlt
fs
sahf
lods
xchg
push
jmp
adc
out
dec
adc
loopne
and
imul
push
cli
movsb
pop
and
mov
push
je
xorb
in
wrmsr
and
or
movsl
adc
xchg
adc
shll
and
cwtl
dec
std
adc
leave
call
cmp
pop
xchg
cmp
movsb
out
push
aam
inc
mov
jl
push
dec
sbb
sbb
hlt
mov
sub
dec
movsb
js
popa
out
mov
xlat
push
push
cmp
movsl
xor
test
mov
add
stos
sub
in
add
mov
dec
incl
mov
pop
push
sbb
repnz
leave
out
mov
into
adc
in
sbb
pop
xor
cld
sbb
push
scas
popa
test
leave
fisubrl
out
jg
enter
stc
push
iret
xchg
adc
dec
jl
xchg
push
out
jmp
test
mov
pop
jle
or
sahf
xchg
outsb
adc
dec
mov
and
pushf
xchg
add
mov
int3
or
mull
or
xor
xchg
xor
jae
adc
add
shll
xchg
dec
push
mov
xchg
pop
mov
mov
and
call
jno
ds
int3
push
es
xchg
loopne
jl
or
jbe
push
mov
mov
lods
sbb
jge
addl
je
push
sbb
andl
shll
aaa
mov
jae
pushf
pop
xchg
fstpl
fisubrs
sub
test
shlb
clc
add
pushf
inc
or
inc
fbld
insl
xor
testl
mov
inc
rcll
adcl
das
mov
cmp
loopne
cmp
pop
pushf
pop
fisttpll
cli
lret
dec
push
addr16
lret
clc
ljmp
mov
movsl
push
pop
shl
mov
adc
sub
mov
jge
jl
jno
mov
adc
aam
inc
push
daa
icebp
movsl
fcoml
lods
lods
sbb
or
jge
sarb
xor
repnz
push
mov
lret
xchg
jle
repz
insb
cmpsl
adc
hlt
ret
xchg
fsubrl
adc
cmp
adc
sub
rclb
xchg
mov
inc
mov
loope
in
add
sarl
push
icebp
sti
popl
fistpll
mov
sbb
scas
stos
popa
pop
inc
push
lcall
jle
push
mov
jns
insl
mov
pop
and
in
xchg
jl
or
push
ljmp
mov
add
adc
dec
fmull
and
mov
scas
pop
adc
cmp
bound
and
fstpt
in
lea
sub
cwtl
idivl
fisubrs
imul
add
pop
jae
in
lret
pop
mov
dec
out
jae
int
inc
lahf
mov
mov
fldcw
stc
and
mov
ret
cmp
clc
lea
scas
jno
movl
clc
add
and
js
fnstenv
in
mov
adc
add
jle
mov
loopne
fnstsw
lret
dec
xor
and
mov
imul
ds
stos
mov
mul
xor
lock
adc
pop
sub
xchg
mov
movzbl
lea
mov
ret
jecxz
aam
mov
sub
xchg
loopne
test
jno
test
pop
or
fsubl
aad
mov
add
pop
das
sbb
scas
dec
and
pop
loope
cmp
add
mov
leave
add
mov
pop
jae,pt
in
ljmp
inc
sti
fdivl
lock
mul
sahf
push
test
mov
sbb
mov
dec
sbb
js
xchg
dec
cmpsb
popa
leave
dec
addl
jmp
push
fwait
outsb
sbb
sbb
dec
push
jp
mov
xchg
icebp
inc
xchg
call
cwtl
xlat
jmp
mull
repz
sbb
xchg
inc
push
mov
sbb
dec
std
test
int
mov
clc
jl
in
push
lahf
dec
dec
mulb
jne
sahf
push
mov
jnp
jl
adc
mov
fcmovu
jne
shl
xchg
jp
int
dec
outsl
cmpl
pop
mov
add
jmp
in
add
cmpsl
mov
add
ja
xchg
dec
faddl
pop
pushf
mov
or
sbb
sbb
test
lods
cltd
cwtl
aas
pop
sub
out
and
notl
push
imul
scas
cli
stos
sbbb
lret
fidivs
dec
cmp
fstps
push
push
insl
sub
repz
xor
fstps
sub
add
or
fxch
imul
cwtl
dec
out
ss
and
hlt
cmp
mov
xchg
ret
test
into
add
fadds
es
insl
xor
sbb
mov
jbe
or
out
popl
dec
jb
ss
and
and
adc
das
add
push
jo
dec
mov
jecxz
test
push
cmp
repnz
imul
dec
jge
incb
fcmovnbe
pop
xchg
adc
mov
sub
in
pop
dec
lods
jae
or
das
jmp
xchg
inc
mov
push
or
mov
sub
stc
adc
addr16
push
dec
gs
xor
mov
cmc
repz
push
xor
sub
test
cmp
pop
xchg
and
mov
std
stos
push
ja
mov
inc
sbb
pop
push
loop
pop
mov
gs
pop
aad
jae
xchg
inc
ss
adc
push
popf
xor
lcall
stos
mov
push
fwait
push
in
mov
pop
jecxz
dec
lret
test
inc
pop
pop
jle
bound
sbbb
push
lret
test
mov
lcall
in
pop
scas
mov
xlat
sbb
inc
rcl
mov
xchg
dec
xor
xor
jns
xlat
mov
and
psllw
add
cmp
xchg
negl
push
fdivr
and
xor
pcmpgtd
daa
mov
jns
and
mov
gs
in
lret
jg
fistps
adc
stos
nop
ret
in
push
xor
mov
mov
push
ljmp
push
imul
fwait
lods
fiaddl
push
sbb
jae
inc
mov
sub
in
push
pushf
int
mov
mov
push
adc
jae
or
inc
jecxz
inc
jge
xchg
lds
xor
jg
icebp
and
mov
les
pop
sbb
call
inc
rcrb
push
les
add
sub
dec
or
test
jge
not
lret
jno
ret
int
pushf
outsb
jl
imul
icebp
cmp
not
jnp
xor
andb
lret
sbb
test
cmpsl
pop
sbb
xor
das
lds
movsl
cli
push
pop
sub
sub
pop
int3
dec
sbb
fstl
fcomi
gs
mov
mov
and
sbbl
inc
xchg
movsl
pushf
adc
jmp
jne
adc
jge
fstl
sub
sub
add
inc
rcll
push
mov
xor
xor
aad
out
test
xchg
ljmp
dec
inc
inc
xor
loopne
es
movb
cli
adc
sbb
sbb
dec
push
ret
mull
outsl
mov
aam
and
cltd
or
mov
cltd
daa
and
dec
lds
in
and
jbe
and
mov
push
push
loope
mulb
in
subb
jg
jle
mov
pop
out
jmp
or
cmpsl
lcall
clc
mov
xor
out
mov
jns
daa
and
xor
lcall
cld
and
adc
mov
pop
insb
mov
loope
mov
fldl
pop
xor
sub
xchg
xlat
lods
push
push
mov
jl
mov
mov
cld
xchg
xchg
xor
dec
aam
jp
sbb
adc
std
mov
adc
mov
out
jb
mov
mov
aaa
sub
adc
lcall
ss
orb
jbe
push
out
popa
or
xor
add
mov
sub
in
mov
in
bound
movsb
cld
ss
lret
inc
push
scas
mov
clc
lret
xchg
jecxz
mov
aam
jno
mov
cmp
mov
pop
outsb
cmp
loopne
mov
fst
adc
mov
and
nopl
add
mov
and
sbb
frstor
mov
lods
ja
cmpl
adc
cmp
or
pop
xor
es
lahf
pop
cmpsb
aad
dec
or
mov
in
mov
dec
mov
sub
sbb
xchg
jg
repz
sarb
gs
in
lea
stc
pop
xchg
sahf
cmp
mov
stc
mov
int
lods
xchg
mov
int
shlb
sbb
push
out
fs
cwtl
cld
jle
add
stos
ja
bound
or
jp
jo
stos
inc
cs
int3
adc
insl
sbb
adc
or
sti
and
movsb
pop
mov
out
pushl
pop
lcall
dec
jns
adc
adc
stos
cltd
sbb
int3
xchg
cltd
inc
scas
loopne
insl
push
or
jmp
jbe
dec
mov
sbb
mov
iret
scas
mov
mov
ds
into
inc
dec
ss
xchg
add
xor
xor
or
loope
xchg
inc
jl
dec
mov
xchg
aad
push
repz
popa
pop
pop
push
rcl
mov
xor
pop
insl
scas
jp
push
push
push
or
leave
jbe
sbb
daa
lods
cmp
dec
imul
push
push
stos
cmp
pop
and
ds
push
pop
test
out
std
in
faddl
push
in
or
in
or
mov
repnz
pop
shll
dec
sbb
lods
inc
cmp
xchg
mov
sub
pop
in
xchg
add
push
dec
stos
adc
es
add
xchg
call
test
mov
dec
inc
inc
push
dec
or
cmp
sub
inc
mov
mov
push
data16
lret
inc
sub
pop
push
test
mov
clc
lahf
bswap
pop
leave
xorb
pop
add
inc
repz
into
jb
lods
stos
bnd
dec
push
jnp
inc
mov
ja
hlt
xchg
int
push
pop
xchg
pop
and
jno
cmc
fprem
mov
movsb
push
popf
scas
movsl
imul
or
outsb
xchg
mov
ds
dec
mov
add
cmc
push
scas
jne
pusha
xchg
cmp
mov
in
sub
jmp
pop
orb
jb
insl
sahf
push
mov
rol
add
imul
fldl2e
js
leave
int
or
fmuls
jmp
jle
push
jecxz
aam
movsb
push
sbb
mov
rcrl
scas
sarl
add
cmp
dec
adc
ret
mov
scas
subb
xchg
mov
push
mov
pop
fcmovnb
dec
or
stos
sub
cmp
dec
add
stc
mov
sub
sbb
push
js
js
sub
sub
lock
ds
lret
add
fwait
pop
fwait
xlat
jb
pop
test
push
lds
aas
scas
jmp
push
add
or
dec
stc
mov
jbe
mov
adc
cmp
cli
jns
sub
mov
in
fsubl
stos
fwait
pusha
mov
and
inc
nop
repnz
lock
lret
cmpsb
icebp
cwtl
sub
movsb
lret
inc
es
push
outsl
jbe
jo
cltd
add
mov
loope
xor
dec
jns
xchg
push
xor
outsb
das
sub
test
dec
push
adc
pop
cmp
test
sbb
sub
movsb
mov
roll
add
dec
mov
mov
adc
mov
rorl
fisubs
add
xchg
dec
aaa
loope
cmp
scas
push
or
mov
movsb
cmp
mov
gs
adc
outsb
sub
pop
loope
cmp
mov
mov
jmp
push
adc
call
ljmp
les
movsb
test
pop
add
into
mov
and
cmp
inc
dec
push
out
mov
lcall
lret
test
call
stos
add
jb
jp
lret
leave
sti
lcall
out
dec
ds
arpl
push
xchg
sub
ret
cs
insl
and
rcl
nopl
mov
inc
push
jp
lret
out
pop
fs
fwait
sbb
mov
dec
test
sbb
movsb
popl
rcrb
inc
aaa
rcrl
sbb
pop
insb
pop
dec
cmc
stos
push
cmp
faddl
xor
mov
mov
jns
cmpsl
cs
das
xchg
add
rcrb
divl
fisttps
xchg
pop
ljmp
sti
out
add
notb
mov
mov
loope
pop
jnp
testb
mov
scas
lods
mov
leave
dec
aam
add
lock
inc
rorb
or
mov
pop
imul
add
scas
or
mov
idivl
call
es
pop
cmp
out
es
or
les
xchg
arpl
push
testb
xabort
clc
add
rolb
dec
call
inc
stos
dec
inc
out
outsb
hlt
push
sub
dec
mov
popa
xchg
imul
ret
mov
loop
sub
mov
adc
into
jo
pop
jae
jmp
or
inc
jge
loope
scas
jb
xor
xchg
jg
jbe
xchg
mov
popa
int3
and
mov
push
dec
faddl
stos
cmp
jl
cs
inc
stos
cmp
cmp
mov
push
sub
fisubrs
jbe
and
in
movsl
or
ds
rorb
cli
jo
lcall
or
sub
aaa
mov
push
jns
out
push
xor
jbe
aam
pop
jg
rcrl
aad
mov
xor
sub
mov
imul
dec
popa
mov
inc
xchg
jle
xchg
jmp
dec
in
jle
add
popa
pop
pop
push
jg
push
sbb
int
in
nop
sub
int3
mov
test
add
iret
pop
and
call
pop
push
out
pop
mov
loope
xchg
fsubrs
jg
mov
imul
pop
or
push
jmp
cmp
inc
out
push
inc
shll
sahf
cmp
cmp
das
es
dec
dec
outsb
hlt
xlat
out
sahf
jl
aam
jo
adc
xchg
jl,pt
out
ficompl
ja
xlat
jg
inc
outsb
cmc
or
mov
pop
mov
jne
out
jo
push
daa
mov
gs
out
or
cmp
sub
je
adc
lret
mov
sti
std
mov
lds
into
fistpll
jge
lahf
int
popa
imul
out
mov
and
sub
mov
jp
sbb
pop
dec
shll
sbb
addr16
stc
or
arpl
xor
imul
xchg
mov
out
fdiv
push
or
jmp
testb
cs
pop
push
cmc
loopne
sbb
test
inc
arpl
leave
sub
and
inc
sub
lret
es
or
addr16
bound
aaa
lret
inc
or
mov
mov
xchg
out
movl
fs
cmp
out
xchg
in
push
cld
dec
pop
call
adc
js
cmp
lods
pop
inc
pop
and
mov
add
jecxz
es
rclb
aam
clc
pop
dec
fdivs
sbb
sub
and
into
push
sub
cli
mov
inc
add
in
sti
push
lods
mov
jl
in
ds
push
repnz
repnz
loopne
adc
pop
sbb
in
push
outsl
jp
pop
mov
idivl
imul
and
lahf
fnstcw
inc
push
rcrl
rorl
pop
std
pop
scas
jle
mov
sbb
testb
dec
adcb
pop
lret
sbb
out
lds
fstpl
pusha
bound
mov
xchg
mov
fldl2t
stos
mov
inc
repnz
sub
nop
orl
push
mov
aas
mov
lret
movsl
sti
dec
mov
lcallw
xchg
xor
cmp
ret
push
mov
fucomip
out
cmp
les
and
mov
push
push
inc
jge
and
xchg
lcall
pop
stos
js
inc
aaa
cwtl
cmp
sti
dec
and
arpl
pusha
icebp
mov
jle
cltd
jg
testb
ljmp
std
xor
sbb
sub
stc
push
inc
andl
sub
and
out
movsb
or
cmp
adc
cltd
das
ss
xor
loope
leave
pop
jp
lcall
cli
or
jns
repz
jmp
enter
fdivs
and
jle
ret
ljmp
mov
out
call
cmp
xchg
cmp
js
lock
mov
ffreep
test
push
jae
loope
mov
or
dec
sbb
shl
xor
push
mov
mov
sub
xchg
xchg
pop
into
dec
sbb
mov
int3
rcrl
inc
jle
mov
add
daa
pop
push
adc
sub
into
and
int3
inc
cmpsb
xchg
lock
adc
std
ja
or
mov
arpl
cmc
sbb
sub
add
mov
es
pop
iret
sbb
es
and
cmp
xchg
cli
mov
lcall
mov
idivb
xor
jb
in
shlb
dec
xchg
add
mov
in
aam
insl
loope
fistl
shll
jo
jmp
mov
popa
iret
lret
and
mov
sbb
pop
inc
mov
aad
xchg
add
push
gs
daa
push
pop
gs
or
mov
mov
jnp
test
cmp
outsl
mov
fnsave
or
mov
adcb
sbb
mov
cwtl
mov
pop
xor
pusha
add
nop
push
popf
aaa
icebp
and
icebp
inc
ret
test
xlat
push
loop
push
jle
shlb
cmpsl
sarl
cmp
push
movsb
cli
mov
scas
ja
inc
je
inc
test
nop
mov
pusha
sbb
pop
inc
or
push
push
xchg
inc
adc
ja
iret
arpl
pusha
xchg
hlt
pop
mov
rcl
lret
dec
push
push
pop
jae
inc
es
clc
and
ret
mov
loopne
mov
mov
das
cwtl
rolb
sub
jns
orb
shlb
shll
push
xor
xchg
testl
mov
sbb
mov
outsl
or
mov
aaa
xchg
popf
or
and
sub
xlat
sbb
cmp
shlb
lret
push
call
neg
scas
push
ret
mov
sbb
push
jne
aaa
add
inc
jge
je
in
stc
jmp
xor
fidivrs
xchg
push
in
imul
inc
mov
or
outsb
jnp
and
add
inc
inc
mov
sub
shl
icebp
orl
push
fnstenv
mov
std
dec
pop
pop
popf
push
or
and
xchg
lret
cmc
jno
and
jg
jmp
push
std
jg
popa
hlt
int3
mov
mov
xlat
mov
in
dec
hlt
rcrb
or
add
nop
dec
enter
adcl
jb
push
leave
bound
adc
test
inc
ja
jo
sub
xchg
dec
rorl
pop
add
sbb
stos
fsts
mov
sbb
aaa
bound
xchg
mov
inc
add
and
pop
jne
pop
mov
sahf
pop
in
fmull
xchg
ret
mov
cmpsl
pop
in
adc
jecxz
jo
xchg
jnp
xor
xchg
or
mov
call
xchg
xchg
iret
inc
cli
xchg
faddl
or
scas
mov
es
mov
incl
push
lcall
cmpb
pop
xchg
lahf
push
insl
repnz
add
outsb
jp
les
addl
mov
cmp
gs
mov
adc
xor
cmp
mov
mov
xor
push
outsb
mov
or
pop
data16
mov
and
dec
gs
pop
shrb
xchg
push
les
scas
sbb
xor
divb
insl
loopew
bound
pop
out
sbb
in
repz
rcl
test
lret
fidivs
daa
jb
xchg
push
sub
lods
push
add
or
dec
mov
sub
xor
cld
js
xchg
cltd
stos
cmp
xor
cmp
pushf
jne
push
cli
mov
sbb
repz
ret
add
je
loope
fcmovu
lahf
dec
mov
in
xchg
lea
insb
xor
cmpsl
push
mov
movsb
lods
cld
xchg
popa
ljmp
pop
shl
dec
call
movsb
xchg
adc
hlt
push
fldl
add
popa
xor
lret
rcrb
jo
dec
int
sti
cmp
adc
in
push
adc
push
aad
sub
or
jne
and
add
sbb
packsswb
ret
repz
enter
dec
or
or
ret
or
aaa
sub
pop
inc
cmp
inc
lods
jle
adc
popf
cwtl
sbb
fstps
aaa
jle
dec
pop
mov
mov
cmp
scas
or
xchg
aad
ja
push
mov
add
sub
nop
push
sub
and
pusha
fsub
jns
mov
aam
leave
dec
inc
and
notl
or
sbb
push
clc
or
stos
test
jl
dec
xchg
out
shll
cmpsb
cmp
cli
push
dec
ret
out
in
jle
sbb
loopne
stos
nop
sub
jno
push
dec
fcompl
fprem
adc
and
cltd
mov
adc
or
or
cmp
int3
jecxz
movsb
mov
pop
sbb
push
xchg
pop
xor
xchg
xor
cmp
cmp
xlat
and
repz
in
mov
enter
jecxz
leave
lret
adc
cld
pop
sahf
sub
cmc
mov
fcoml
addr16
adc
mov
ret
xor
je
rorl
and
xor
push
adc
fisubl
adcl
in
push
xlat
add
hlt
jbe
outsb
and
adc
cli
pop
out
jecxz
xchg
push
mov
adc
lahf
sbb
pop
push
addr16
daa
mull
pushf
mov
icebp
adc
xchg
xor
data16
mov
jge
in
ret
cmp
adc
outsb
stos
push
or
xchg
sbb
imul
push
ljmp
and
in
dec
insb
cmc
dec
in
sub
adc
mov
pop
xchg
mov
insb
sub
adc
addr16
dec
scas
mov
cmpsl
push
adc
mov
inc
lock
add
xchg
lcall
cmc
and
cmp
es
lods
fwait
in
test
pop
mov
sarl
mov
movb
clc
sbb
test
fwait
out
rcrl
popa
lods
dec
or
xchg
push
orl
xchg
fimull
push
mov
gs
pop
test
mov
xor
add
cmc
lea
outsb
ficoml
stc
and
dec
stc
pop
sbb
cmp
mov
mov
mov
sub
fcom
out
push
test
jbe
pop
inc
sahf
mov
jle
nop
push
or
stos
pushf
outsb
pushf
add
adc
les
lcall
bound
sbb
mov
sbb
pop
test
xor
mov
popa
leave
fs
es
push
ljmp
outsb
je
test
cld
aaa
je
jb
rorl
mov
loope
movsb
mov
popf
sar
xchg
stos
shlb
jnp
push
ljmp
sbb
addb
scas
jno
xchg
inc
test
mov
and
mov
sbb
jp
cmc
dec
loope
inc
mov
adc
and
out
xchg
jnp
stc
sbb
fcompl
jle
test
inc
mov
sub
call
xor
divl
push
xor
mov
pop
ret
mov
xchg
loopne
int
cmovns
jns
mov
push
ljmpw
loope
loope
out
mov
or
pop
test
inc
xchg
aam
mov
mov
xor
xchg
jae
push
inc
fmul
les
call
test
in
outsb
enter
sar
clc
cmp
mov
mov
mov
push
popf
mov
repnz
cmp
inc
pop
jmp
sbb
xor
xchg
out
inc
mov
into
sub
lahf
jl
xor
sub
jne
xchg
xchg
das
imul
sub
fisttpll
movsb
and
adc
sub
mov
cld
es
cmpsb
push
cmpsl
into
jnp
aam
sub
addr16
hlt
out
outsb
jbe
sbb
lea
push
pop
and
icebp
xchg
jp
call
mov
hlt
lahf
xchg
js
cltd
outsl
xchg
ja
fildll
mov
push
imul
iret
aam
out
pop
mov
fsts
aas
outsb
sbb
or
xorl
push
sbbl
je
cmp
aad
pop
test
adc
push
or
and
or
push
xchg
xorb
loope
pop
push
push
lcall
adc
adc
shll
sub
loopne
jge
popf
addr16
iret
adcb
mov
test
cmp
outsl
ret
mov
jo
int3
push
inc
ret
inc
nopl
nop
idiv
fistpll
sbb
data16
clc
mov
int
jb
movsw
jne
repz
loopne
adcl
rcrl
or
jmp
xor
mov
sub
les
sub
mov
repnz
sahf
out
sarl
mov
add
jo
test
mov
enter
jl
mov
jecxz
cs
mov
sbb
jne
xchg
jmp
pop
fsub
in
or
or
pushf
adc
xor
mov
pop
jne
mov
roll
push
popa
pop
add
mov
and
mov
sbb
sti
or
ljmp
jae
cmpsb
inc
dec
cmpl
sub
sub
mov
lds
clc
sahf
pop
aam
loop
pusha
mov
fistpll
mov
repz
mov
loope
nop
pop
add
inc
xor
popf
gs
cld
sahf
cmpsl
test
outsb
ret
mov
and
inc
fsub
push
pop
jo
mov
push
or
and
roll
xchg
cli
mov
daa
sub
push
dec
dec
jae
mov
mov
mov
push
jns
adc
inc
pop
and
add
jns
add
mov
mov
outsl
aaa
dec
mov
cwtl
in
sahf
fwait
out
leave
insb
inc
push
mov
cltd
lahf
sub
mov
into
in
data16
jmp
popa
push
lret
lea
mov
and
fstpt
fidivs
jae
loopne
and
inc
sbb
pop
call
or
lea
jmp
xchg
push
inc
mov
pop
adc
pop
add
xchg
inc
mov
xor
mov
lcall
outsb
ficoms
insb
pop
pop
mov
dec
pop
inc
negl
pop
push
stos
shrl
pushf
sub
xlat
cmp
cltd
mov
ret
dec
jno
repnz
cmp
mov
xor
mov
lcall
out
in
cmp
stc
sahf
inc
sahf
jg
pop
add
lret
out
adc
arpl
enter
pop
xchg
add
aad
ret
mov
mov
addr16
pushf
imul
mov
sub
mov
mov
imull
scas
and
mov
inc
lahf
adcb
js
adc
js
lea
mov
push
rcll
cmpsl
inc
xchg
pushf
lahf
in
testl
adc
rcrb
and
cmp
cli
in
xchg
and
add
lcall
jo
adc
sahf
push
mov
mov
mov
sub
sbb
push
subb
cmp
inc
jbe
and
mov
xchg
or
mov
and
loop
aam
mov
scas
or
cmp
jge
mov
mov
xchg
add
pop
add
inc
dec
jo
out
shr
shl
pop
pop
ret
and
pop
mov
jns
jmp
adc
pop
xor
ret
addr16
xor
outsb
cmp
xchg
dec
jno
pop
add
jg
popf
sbb
clc
cmp
dec
mov
dec
iret
xor
in
iret
andl
fstpl
mov
push
outsb
mov
lret
cmpsb
outsl
icebp
pushf
scas
sarb
xchg
insl
imul
loope
push
xchg
mov
adc
mov
ret
shll
ror
mov
push
xor
mov
dec
dec
pop
and
stos
pop
jge
fimuls
mov
movsl
repnz
in
push
cwtl
mov
cmc
xor
pushf
test
jb
mov
jne
add
ds
repnz
pop
inc
cmp
fsubrp
movsb
fiaddl
outsl
cmpsb
icebp
and
sub
fsubrl
jae
dec
enter
sti
jl
sub
aad
xor
sub
mov
jmp
or
inc
repnz
fidivrs
add
movsb
push
je
sti
stos
rcr
addr16
lret
cli
mov
xchg
sahf
shlb
mov
mov
push
fcomps
and
push
adcb
incl
enter
xchg
lods
mov
test
ds
aaa
rclb
cmpsb
xchg
push
push
mov
das
sub
cmpsl
test
pop
mov
sbb
inc
sbb
jns
sahf
in
daa
sarl
lahf
stos
add
rcrl
mov
cmp
in
ds
adc
xor
mov
sbb
shlb
imul
les
mov
outsb
push
push
lret
testl
sahf
pop
cmc
test
xor
repnz
fwait
jae
push
call
or
jp
les
jp
hlt
mov
loopne
test
and
pop
dec
mov
dec
xor
js
xchg
mov
sbb
fistpl
imul
pop
test
inc
bound
fisttpll
gs
push
mov
popw
jl
push
pop
sbb
pop
stc
mov
in
sub
fsubrp
cld
popf
or
mov
loopne
xchg
out
out
xchg
xor
mov
push
and
out
out
inc
sbb
dec
jp
jns
jne
cs
add
ljmp
dec
repz
test
lods
scas
negb
adc
icebp
into
and
push
nop
es
out
adcb
mov
inc
or
scas
data16
mov
sub
fldcw
mov
mov
in
jecxz
pop
dec
xchg
add
inc
lods
xchg
jne
add
pop
pop
mov
andl
leave
popf
xchg
adc
cs
inc
mov
push
ss
pop
xor
inc
jnp
cmp
cmp
into
push
roll
lret
push
cmp
xchg
fnstcw
jbe
add
push
nop
mov
pop
test
sbb
adc
jmp
inc
scas
movsl
sub
fiaddl
pop
ret
mov
loop
js
ja
adc
adc
das
and
inc
int3
xor
jecxz
xabort
add
jae
shlb
adc
cmp
inc
pop
pushf
jmp
dec
lret
fistl
arpl
mov
loopne
inc
stc
andl
enter
fcomi
push
push
div
cmp
lea
sub
aas
dec
xchg
pop
rolb
inc
pop
testl
shll
xchg
fstpl
std
adc
into
test
mov
push
mov
mov
les
data16
mov
jl
jge
cmpsb
xchg
or
push
rcll
xchg
test
xor
sti
inc
jmp
pop
daa
pop
jecxz
xor
mov
jbe
outsl
jl
inc
jns
jl
jbe
cmpsl
pop
jg
jp
pop
push
and
mov
cltd
sbb
iret
mov
or
push
mov
adc
adc
jecxz
mov
add
adc
mov
test
add
shrb
dec
add
mov
pusha
push
dec
cld
daa
test
inc
lods
mov
lods
sbb
out
cld
stos
add
cmp
push
test
mov
mov
lods
shll
xor
mov
lret
pop
sbb
mov
rcrb
xchg
filds
push
add
jmp
sbb
outsl
mov
pop
movsl
sbbb
mov
test
push
out
mov
sbb
or
les
gs
push
je
and
or
pushf
ret
test
jbe
test
lods
sbb
mov
rcrb
daa
and
push
shrl
stos
pop
pop
repnz
cmp
lret
enter
push
aas
out
sbb
mov
insl
arpl
int
popa
cwtl
xchg
mov
loope
jns
pop
pop
mov
and
or
icebp
daa
push
fnstsw
and
pop
push
mov
data16
xchg
mov
shrb
inc
mov
or
pushl
das
les
jnp
cmp
xor
pop
push
repz
mov
xor
repz
sti
mov
mov
ljmp
mov
sbb
add
out
pop
jmp
aam
fldcw
inc
lcall
inc
or
dec
cmp
mov
out
mov
xor
cmp
aas
stos
xchg
push
addr16
pop
enter
icebp
xor
movl
jecxz
test
fsubp
scas
adc
jne
push
mov
scas
subl
fcmovb
jae
mov
out
inc
cmp
mov
mov
xlat
ljmp
mov
sbbb
jb
jo
inc
and
sahf
xor
ret
int3
push
stos
sub
mov
test
push
or
pushf
jne
test
sbb
das
xchg
lods
test
inc
orl
pusha
enter
stos
mov
js
loop
adc
sti
stos
jns
push
xor
lret
pop
inc
or
addr16
js
mov
adc
sahf
loop
lahf
and
push
push
es
sbb
xchg
test
testb
fs
enter
sahf
loope
pop
lahf
stc
call
mov
lret
fcompl
fdivrl
test
stos
mov
rcll
jne
mov
insl
add
cmp
inc
cwtl
push
push
shrb
pop
fistps
adc
popa
in
decb
sub
enter
push
sbb
idivl
outsb
cs
adc
popl
out
data16
add
xor
in
push
imul
add
push
jno
mov
xchg
lea
movsb
sub
lahf
sbb
cli
outsl
rcrb
push
mov
and
daa
sbb
cmp
hlt
pushf
lret
rcrl
sbb
je
pusha
jno
scas
call
notb
cltd
popa
xchg
test
inc
inc
mov
enter
jns
cmp
jg
pop
adc
loope
ljmp
daa
fmuls
pop
lahf
jo
and
xrelease
cs
xor
mov
or
sbb
cmp
dec
sub
imul
jbe
les
mov
sbb
int
and
cmc
iret
cmpsl
mov
popf
std
lret
test
ja
mov
int
mov
inc
daa
pop
outsl
add
out
pusha
lods
jecxz
sub
shll
pop
adc
cld
xchg
loop
xor
jp
mov
jno
cmp
xorb
xor
jge
dec
xor
imul
or
cmpsb
xchg
mov
push
or
loop
outsl
mov
int
jge
push
mov
mov
das
into
gs
xor
pop
sbb
add
lret
or
sbb
in
mov
lahf
int
loope
mov
inc
in
popa
ds
cmpsb
lods
outsl
mov
or
push
jp
xchg
jecxz
mov
sarl
cmc
push
cmc
sbb
jo
mov
mov
push
cmpsb
ss
xlat
adc
popa
test
aad
clc
or
scas
cmp
lea
int
test
inc
push
add
xor
mov
out
xor
pop
aaa
push
push
popf
mov
mov
les
flds
lcall
jecxz
push
xchg
test
or
orl
inc
push
insl
aad
cmp
stos
in
rol
dec
ljmp
je
mov
outsl
cmc
ja
loope
jle
mov
cmp
fwait
cmp
cmp
insl
mov
sar
test
insl
and
jl
imulb
cmp
inc
jl
and
lea
jbe
xchg
and
jmp
cmc
dec
mov
mov
fstps
mov
or
imul
mov
add
push
les
loop
ror
mov
jnp
js
out
sub
mov
mov
cmp
clc
out
mov
sbb
inc
daa
mov
popa
iret
repz
sub
shll
fldcw
loope
sub
loopne
sbb
push
aaa
add
cmp
mul
xor
sbbb
ret
aaa
hlt
pop
scas
mov
loope
mov
icebp
out
dec
add
push
rorl
mov
or
jge
adc
xchg
les
call
nop
mov
mov
std
ljmp
lret
push
ret
mov
mov
add
sub
rcrl
or
in
int3
int
ret
adc
pop
mov
test
mov
jnp
jo
aas
test
ja
push
scas
xchg
sub
int
sbbl
mov
xchg
pop
push
lock
mov
fidivs
jns
repz
jno
pushf
xor
data16
add
sub
aad
dec
jl
icebp
xor
sbb
pop
and
lock
cs
or
jl
cmc
jb
int3
into
flds
inc
sahf
mov
add
mov
fs
ret
sbbl
fstps
jp
sahf
popa
mov
daa
mov
sti
ret
cmp
jmp
inc
mov
ficomps
insb
popf
and
pop
stos
xor
push
stos
and
jbe
in
gs
int3
jnp
xchg
filds
pop
pushf
je
xchg
pusha
jns
pop
stc
jle
dec
xchg
mov
sbb
inc
jns
mov
inc
add
mov
gs
xchg
dec
inc
loope
jne
out
test
mov
sub
out
insl
fdivrl
mov
dec
mov
sbb
sub
cltd
and
jl
inc
rolb
adc
shll
mov
cmp
cmp
jmp
fidivrs
jle
cmp
dec
sbb
lock
aam
xchg
sbb
ja
and
or
in
dec
into
bound
cmp
cmc
out
jmp
xchg
or
imul
cmp
mov
mov
int3
or
jbe
push
addr16
push
jnp
push
inc
and
push
mov
lahf
mov
mov
mov
mov
sar
dec
push
mov
insb
cld
xchg
adc
in
test
xor
sub
lods
push
aam
or
in
push
lahf
roll
ljmp
insl
xchg
sub
stos
inc
std
mov
lret
mov
les
sti
push
aaa
inc
nop
inc
cmp
bound
incl
push
mov
mov
out
sbb
mov
or
xor
mov
jecxz
pop
jae
dec
inc
cwtl
in
and
jp
xor
in
xor
ds
ss
imul
clc
jp
fldl
repz
scas
cmp
sbb
mov
insl
pop
fdiv
je
into
addr16
shll
mov
or
ja
cmp
testl
mov
jl
mov
iret
insl
sbb
test
dec
push
dec
nop
jno
push
pop
pop
xchg
mov
iret
push
add
lods
pop
test
jecxz
mov
iret
lods
mov
dec
cwtl
jge
les
int3
stos
adc
arpl
arpl
repnz
pop
rcll
push
cmp
jo
rcl
popl
xchg
call
fnstsw
xchg
and
iret
fdiv
subl
out
sbb
xchg
lock
mov
test
jae
and
mov
sub
lods
pop
std
stos
in
mov
and
or
push
adc
cli
xchg
aad
out
out
mov
je
add
mov
dec
fst
cmp
jge
dec
inc
and
push
mov
lods
outsl
call
dec
add
cmp
mov
lret
into
push
ss
push
lods
push
sbb
int3
imul
xor
dec
sub
outsb
sahf
add
sbb
cs
jecxz
int
pop
xor
in
mov
pop
rolb
xor
push
out
rsm
cmp
push
insb
test
nop
add
or
test
fstl
push
or
lea
push
add
leave
cmpb
mov
and
mov
cmpsl
sub
jmp
arpl
dec
es
filds
ljmp
and
insl
mov
fnsave
add
mov
pusha
mov
ljmp
int
sbb
pop
stos
pop
aaa
xchg
jae
add
int3
xchg
out
aam
rclb
inc
inc
sbb
jmp
lods
mov
mov
push
fs
rep
aam
je
lret
add
leave
xor
mov
adcb
push
and
xchg
lods
lahf
jle
and
xchg
inc
dec
jne
push
mov
daa
bound
pop
pop
cs
pop
pop
pop
aam
mov
cltd
clc
pop
mov
outsb
mov
iret
test
out
pxor
aas
push
ja
cs
adc
js
push
inc
dec
jb
arpl
pop
pop
mov
stos
and
push
mov
roll
xchg
inc
and
pushf
mov
loope
cld
imul
in
sbb
shr
das
xchg
adc
repz
bound
out
xor
xor
pop
inc
mov
sub
fs
cltd
jns
sub
lahf
cmpsb
jmp
dec
adc
and
push
pop
jbe
push
repnz
cld
add
pop
arpl
dec
jecxz
mov
cmp
out
pusha
dec
data16
inc
mov
inc
pop
or
push
mov
clc
xchg
in
fstpt
mov
das
xor
mov
and
dec
jl
cmpsb
and
mov
jmp
pop
sbb
fstpl
imul
add
mov
cltd
push
add
dec
fists
inc
sbb
push
xchg
shl
sub
or
jae
push
shrl
out
ret
push
cmp
pop
loop
testb
and
push
push
mov
shl
insl
cmp
cmp
loope
cmp
dec
mov
fsubl
subb
mov
fstpl
lcall
xlat
arpl
out
lds
mov
add
mov
aam
xchg
lea
inc
xlat
ljmp
mov
or
ja
sbb
mov
dec
stc
sbb
shll
jae
shlb
sbb
pop
mov
rcl
dec
jge
sub
lret
out
sbb
ss
sub
jle
xchg
xchg
movsl
add
adc
aad
mov
ret
adc
out
cli
xor
jnp
imul
pop
enter
or
pop
jmp
out
xchg
rorb
jbe
pop
std
pop
out
cmp
adc
ja
add
loope
lret
mov
adc
dec
int3
rorb
mov
jl
sti
cld
aad
pop
cltd
cltd
iret
dec
out
mov
xor
lods
fists
movsl
aad
notb
mov
cmp
rorl
dec
movsl
mov
inc
xchg
das
mov
adc
gs
scas
data16
imul
shrb
mov
pop
jns
mov
sbb
or
dec
sub
fwait
call
rorb
jnp
and
pushf
and
movsb
ja
jp
stos
pop
cmp
cs
dec
inc
ss
rcll
jnp
xchg
push
jno
mov
jne
cs
adc
imull
push
push
scas
push
daa
aas
icebp
inc
pushf
inc
xor
jne
cs
xor
sbb
push
jae
mov
ljmp
and
inc
pop
add
jno
bound
movl
xchg
sub
sbb
dec
into
fadds
in
sbb
je
imul
jb
scas
mov
popf
aaa
mov
mov
jl
xchg
daa
int
pop
mov
pushf
cmp
es
xchg
push
jbe
pop
gs
fst
or
sarl
xor
sar
loop
dec
cmp
loopne
cmp
cmc
rorb
push
dec
pop
sub
int
stc
cld
push
adc
int
pop
pop
not
push
out
leave
test
add
popf
outsl
or
scas
gs
sub
out
gs
popa
or
out
mov
adc
lret
inc
cmp
fnsave
ret
test
clc
pop
mov
xchg
loop
xor
aam
test
pushfw
gs
dec
scas
push
outsl
cmp
sub
lret
mov
out
pop
addb
fwait
outsb
fwait
loope
xor
cmp
dec
repnz
pop
or
sbb
or
out
sub
xchg
mov
cmp
cli
hlt
out
sub
cmpsb
pop
in
xchg
mov
push
stos
test
clc
mov
aad
push
jp
adc
mov
mov
lahf
push
add
in
xor
pop
es
lcall
lds
jns
push
dec
mov
or
xchg
cmpsb
or
push
int3
and
mov
mov
jecxz
lret
mov
sbb
les
ret
cmp
shr
mov
divb
test
test
cmp
scas
js
cmpsl
mov
or
mov
mov
mov
sbb
inc
iret
ret
sbb
push
mov
sbb
push
push
ds
es
lahf
adc
pop
mov
out
gs
inc
outsl
imul
sub
sbb
pop
sahf
jo
push
ficoml
test
add
faddp
dec
jp
adcb
ret
inc
mov
ret
mov
jne
sahf
mov
nop
lock
cltd
pop
mov
rolb
dec
add
fidivs
fs
push
sub
push
test
imul
mov
push
cmp
mov
cmpsl
stc
mov
mov
adc
loope
sbb
fcoms
mov
pusha
mov
jecxz
das
ljmp
add
cmp
scas
xchg
lods
pop
cmp
add
test
inc
fcompl
pop
sbb
out
lcall
xor
xchg
jb
in
adc
mov
js
dec
mov
sahf
es
jmp
pop
inc
xchg
add
xchg
push
mov
and
test
mov
xlat
jnp
movsl
sbb
xchg
mov
sub
ja
sti
ss
inc
cmp
pop
scas
stc
and
fistl
rcll
mov
mov
mov
jae
or
inc
and
std
mov
add
addb
and
pop
mov
insl
xor
pop
cmc
mov
mov
cmp
sbb
je
push
js
inc
outsb
das
pop
xor
enter
in
dec
adcl
adc
add
or
and
loopne
mov
lds
jb
pop
daa
aam
lds
push
jo
insb
divb
jns
dec
in
clc
mov
cmpsb
mov
jno
cs
sub
lret
daa
fs
dec
ds
ss
inc
lret
stos
add
inc
mov
push
mov
or
dec
or
lahf
adc
and
xchg
pusha
push
cmp
hlt
adc
call
mov
sbbl
popf
cmp
in
xlat
ficoml
incb
mov
lock
test
je
loope,pn
add
in
sbb
xchg
sub
cwtl
sahf
jg
shl
mov
adc
fstpl
lea
rorl
ljmp
test
push
testb
les
aad
dec
jno
mov
xor
std
sub
xor
cmp
add
fldenv
in
es
and
fs
xor
push
fwait
pop
test
loopne
dec
repz
sub
or
xchg
sbb
inc
push
lock
sub
enter
and
nop
xor
cmp
std
imul
mov
fldt
adc
push
cmpsl
sub
lahf
test
leave
jmp
clc
imul
inc
mov
lods
loopne
pop
mov
sub
in
pop
rol
mov
xchg
ja
loop
daa
sbb
push
sbb
dec
or
add
sbb
mov
out
fucomip
in
add
fidivrs
sbb
xor
jl
mov
shll
or
sub
mov
add
cmp
dec
sbb
fisttpl
and
mov
and
inc
cmp
pop
cmc
aaa
pop
push
pop
or
mov
xor
cmp
fnstsw
lahf
inc
mov
mov
inc
sbb
lret
mov
clc
pop
cmp
cli
add
andb
movsl
sub
xlat
iret
mov
xchg
add
jno
fldt
dec
pop
inc
cs
adc
lahf
fidivl
inc
repnz
xchg
sbb
out
mov
inc
mov
clc
out
mov
mov
call
jns
call
int3
iret
add
rcrl
mov
sbb
cmp
addb
dec
push
or
lahf
xlat
pop
add
mov
jl
lret
test
xor
push
xor
sahf
xchg
push
cmpsl
xor
out
pop
fldenv
dec
imul
dec
xlat
add
and
xor
push
mov
pop
pusha
cmp
fcmove
ja
xor
loop
iret
mov
sbb
xor
xor
arpl
dec
popa
or
inc
loop
pop
aad
pusha
lret
cmpsb
rcrl
mov
adc
pop
add
out
jo
lahf
push
adc
out
xor
cmp
jb
mov
sub
push
inc
add
dec
push
mov
or
sub
add
stos
pop
lods
data16
or
enter
fiaddl
push
mov
push
pop
in
and
dec
jo
sbb
jbe
and
pop
in
sti
call
jno
outsb
aad
dec
insl
imul
ja
xor
cmc
fimull
test
xchg
fadd
test
js
jne
lahf
cld
arpl
xchg
push
popf
add
scas
mov
es
out
xchg
fimull
data16
push
mov
add
and
xchg
or
into
lock
ret
mov
sub
push
dec
sbb
xchg
cmc
insl
lods
or
into
inc
nop
and
repz
inc
or
stos
addl
stos
jne
addr16
mov
mov
xchg
inc
andb
cwtl
ja
stc
cli
or
sub
mov
aaa
cmpsb
mov
call
pop
mov
cmp
and
rclb
imulb
cmp
lods
cmp
fwait
inc
or
push
mov
push
sarl
stos
xchg
loop
cltd
jns
push
aad
push
insl
pusha
pop
push
adc
shl
inc
xor
adc
insb
aad
fucomi
sbb
pushf
imul
mov
in
fsubrl
push
jbe
addr16
shll
sub
mov
inc
sti
sub
sbb
push
arpl
sahf
jle
pushf
lods
jns
xchg
cltd
add
movsl
mov
std
hlt
adc
sbb
inc
sub
pushw
mov
mov
imul
je
add
inc
dec
xorl
orl
add
sar
fildll
adc
lcall
inc
pxor
xchg
ljmp
leave
popf
mov
mov
lods
mov
pop
jns
insl
into
scas
mov
fistps
repnz
aaa
push
xchg
mov
or
ss
cli
and
ret
insl
add
sub
in
pop
lock
dec
push
jo
in
inc
in
call
cmp
jno
out
outsb
pop
aam
xchg
or
mov
cmc
shl
pop
insl
ljmp
fs
mov
mov
inc
sbbb
pushf
out
cli
sub
daa
add
push
cmp
idivw
inc
rcr
imul
imul
mov
fimuls
adc
pusha
xchg
scas
inc
jnp
fstl
cmc
mov
out
scas
pop
push
shlb
xchg
jmp
jg
inc
sub
outsb
lods
cs
mov
repnz
mov
rolb
loopne
addr16
jecxz
in
and
outsb
fcoml
sahf
xchg
sub
xor
dec
lret
push
add
sbb
and
into
xlat
sub
mov
mov
rcrl
inc
bnd
sbb
inc
xchg
fdivl
es
and
mov
movsb
dec
in
fdivr
xchg
loope
mov
cmpsb
movsb
mov
pop
pushf
fcmovb
hlt
dec
and
xchg
aas
flds
mov
in
cmp
in
sahf
dec
jnp
adc
in
pop
cmpsb
mov
xchg
push
cmc
in
aas
mov
lret
cs
push
ret
push
fneni(8087
jecxz
dec
and
xor
jge
cmp
pop
cmp
jecxz
fbld
aam
shlb
scas
negb
jg
fxch
imul
mov
lcall
and
or
sbb
mov
inc
es
cmpb
mov
adc
frstor
sbb
adc
pop
mov
test
loop
jecxz
or
lods
inc
in
inc
cmpsl
inc
rol
adc
outsl
subb
dec
jg
pop
rcll
jmp
jle
out
push
sti
mov
jno
loop
aas
fcom
inc
mov
xorb
aad
ficoml
stos
mov
dec
outsl
mov
leave
pop
jo
xchg
ds
ror
xchg
dec
xchg
inc
sbb
lock
mov
clc
mov
pop
les
add
inc
jecxz
pop
or
cmp
sahf
push
imul
push
push
into
shll
add
dec
divl
outsb
mov
test
sbb
jmp
mov
add
xchg
sbb
std
add
das
ds
loope
push
cmp
out
sub
testl
mov
mov
inc
dec
mov
push
mov
shlb
jno
and
jg
lds
test
jne
mov
adc
mov
leave
mov
bound
push
push
sbb
cli
sub
lods
inc
xor
cli
mov
adc
adc
fcompl
xlat
xchg
sub
jecxz
xchg
mov
push
cli
sub
insb
adc
add
not
sahf
out
jp
lock
fimull
and
cmp
pop
icebp
fistl
int3
in
inc
subb
or
fs
gs
xlat
test
aaa
dec
ret
cltd
xchg
adc
popa
int3
adc
pushf
jae
ss
mov
mov
xchg
test
adc
xchg
cmp
in
ljmp
mov
sub
lcall
mov
mov
jg
std
mov
mov
sar
adc
arpl
xor
or
push
xor
cmpsb
aaa
cld
lret
mov
aas
pop
call
cmp
into
push
std
shrb
sub
cmp
mov
mov
ss
sub
data16
lock
cmpsl
xchg
xor
sub
sbb
push
fnsave
and
aas
lock
sbb
xchg
test
enter
clc
sub
push
ret
and
adc
mov
fisttpll
pop
lahf
pop
addr16
aaa
loopne
pop
fwait
dec
sub
shlb
popa
pop
daa
and
adc
jae
lret
cmp
pop
xchg
mov
iret
xchg
dec
and
insb
cmpsl
fidivl
and
icebp
cli
in
mov
fstpt
lds
subl
xchg
xchg
mov
iret
aaa
jbe
add
jb
push
jae
inc
push
adc
push
push
sahf
pop
test
sub
mov
sbb
subl
dec
cmp
pop
rcll
stos
or
add
loop
jl
or
add
cmp
cmc
imul
popa
idivb
xchg
roll
nop
ret
xchg
cld
jnp
dec
mov
or
out
mov
xchg
jge
sbb
imul
or
add
jo
jne
jle
jle
push
inc
rcrb
ds
test
movsb
cmp
pusha
movsl
mov
lret
pop
sub
daa
aas
std
cld
adc
cmpl
jo
roll
xor
or
push
adc
jmp
jo
mov
mov
jns
xor
sbb
dec
repz
cmp
push
cmp
mov
mov
ja
icebp
add
das
stos
lret
shlb
repnz
and
cmp
add
pusha
mov
xchg
rcr
scas
hlt
xchg
shll
add
push
push
inc
mov
enter
movsl
push
cmc
scas
negb
and
mov
pop
sbb
inc
mov
roll
xchg
hlt
lahf
sbb
cmp
in
stos
out
or
roll
in
cmpsb
lea
push
lds
inc
js
icebp
push
sarb
pusha
sarl
movsl
jl
test
insl
out
dec
inc
aaa
mov
fdivrs
aad
pushf
outsl
cmp
cs
or
sbb
bound
lds
or
push
mov
add
jo
cs
inc
pop
xchg
pop
int
popa
dec
sbb
test
pusha
push
mov
fcmovbe
mov
mov
sahf
sbb
xchg
shlb
lahf
shrb
push
sbb
push
scas
add
cld
pop
subb
jbe
ds
pushf
mov
cmp
push
mov
sbb
xlat
and
stos
enter
inc
pop
fstl
adc
into
cmp
mov
jg
lcall
inc
dec
mov
lcall
jb
rclb
insb
xor
scas
fbstp
outsl
or
icebp
imulb
call
inc
rclb
xlat
stos
test
xchg
mov
cmp
in
faddp
pop
mov
add
and
or
pop
push
sub
mov
andb
xchg
jo
shll
jmp
das
push
cmp
fimuls
lcall
test
inc
xor
jmp
dec
int
xor
push
cs
outsl
jle
push
and
add
mov
mov
or
mov
js
in
out
das
cmp
jns
cs
sbb
jae
pop
in
mov
paddsw
cmp
into
out
mov
xor
mov
inc
nop
jp
imul
mov
and
in
insb
xor
cmp
aas
or
outsl
dec
ja
in
rcl
xchg
mov
dec
stos
jp
jl
fisubl
jbe
cmpb
pusha
aaa
std
mov
clc
adc
movsl
dec
out
xor
xchg
pop
cwtl
hlt
or
movsl
inc
nop
mov
loopne
int3
test
xor
push
sub
in
cmp
mov
fwait
out
loop
call
call
add
or
add
ficompl
mov
mov
and
je
cmp
std
mov
ret
dec
jb
out
add
cmc
and
mov
inc
ds
stc
js
xchg
lret
aas
mov
sub
push
int3
adc
shrb
inc
les
out
xchg
or
xchg
jne
aam
in
jge
dec
xor
push
mov
insb
rcr
mov
xor
int3
dec
int3
test
iret
imul
outsl
mov
dec
enter
cwtl
xchg
pop
aad
mov
int
shlb
dec
test
sbb
out
repnz
mov
add
mov
xchg
mov
mov
mov
out
push
mov
xlat
in
mov
imul
push
xor
imul
sub
mov
dec
repnz
inc
push
xchg
mov
adc
out
movsb
mov
adc
inc
mov
xlat
insl
jmp
sbb
testl
push
call
xor
push
pop
inc
mov
mov
cmp
rolb
push
gs
les
and
sub
repnz
adc
mov
mov
aas
movb
insb
ds
imul
and
cmp
je
mov
jo
jg
int
loopne
mov
pop
pop
pop
shr
inc
cmp
mov
std
cmpl
nop
add
out
and
mov
into
jno
sbb
jns
pop
xchg
notl
jb
sbb
cltd
mov
sbb
xor
aaa
adc
adc
insl
sbb
andb
cmpsl
or
out
scas
or
das
push
jns
jmp
arpl
cmp
out
loop
mov
lods
into
fucomi
inc
out
jle
int3
sub
aad
push
out
fsubr
sbb
imul
pop
pop
cmpsb
jmp
lods
jns
sahf
out
es
inc
mov
adc
js
and
into
stos
mov
inc
jns
adc
xor
in
inc
repnz
sbb
add
add
dec
push
stos
out
dec
push
ret
shlb
in
fcomps
sub
mov
or
lcall
hlt
jle
in
jno
pop
pop
lock
rcl
xlat
stos
movsl
lds
jle
cmp
sub
cmc
scas
cmp
mov
divb
jnp
out
dec
fcmovbe
fmuls
pop
add
shl
test
movsb
mov
adc
xchg
cmp
cmp
sbb
int
pop
pushf
and
insl
dec
mov
adc
outsl
mov
nop
mov
inc
xchg
lea
and
sti
lods
fwait
xchg
push
mov
ret
add
loopne
dec
sub
jle
test
cmp
fdivrs
adcb
dec
icebp
fists
jg
aad
cmp
inc
ret
jl
xchg
or
pop
call
loop
inc
rorl
push
gs
dec
cwtl
mov
mov
jmp
insl
insl
lahf
cli
xor
adc
or
dec
jbe
rcr
jl
test
ja
arpl
je
cli
stc
and
icebp
mov
pop
push
inc
pop
in
push
sti
ret
push
sbb
and
and
fcmovnb
add
notl
add
xor
or
call
jl
add
aas
push
imul
jnp,pn
pop
or
inc
jbe
bound
fidivl
lds
incb
test
sub
sar
add
mov
insl
fs
cmpsb
sbb
faddp
add
adc
scas
lcall
xor
mov
out
pop
aam
push
sub
mov
add
jb
sbb
aad
push
test
xchg
cs
aad
xor
ss
mov
dec
mov
inc
cld
loop
fbstp
ljmp
in
dec
fcmovnu
inc
mov
out
sub
sub
hlt
sbb
testb
mov
int3
sub
xchg
jl
dec
hlt
or
leave
push
popf
dec
stos
push
or
mov
xchg
aam
es
repz
mov
shl
scas
dec
cmp
sbb
in
les
inc
pop
rcrb
xchg
popa
jae
or
mov
loopne
pop
cmpsb
out
add
cmp
and
sbb
jb
mov
sti
cmc
lea
xchg
test
add
mov
test
scas
jo
movsl
stos
mulb
outsb
arpl
icebp
nop
jmp
or
shlb
out
cmp
jne
nop
sbb
sub
push
push
push
insb
and
adc
ljmp
adc
push
adc
ficoml
lret
int
xchg
pop
inc
into
imul
and
sar
sahf
dec
and
dec
jnp
call
push
mov
testl
push
inc
sahf
inc
pusha
out
or
inc
jne
mov
inc
loop,pn
lret
out
sbb
out
jle
out
push
outsb
cmpsb
and
in
sbb
arpl
ror
aaa
inc
mov
gs
sbb
stc
sarl
in
lret
or
movsl
sub
leave
push
mov
xchg
cs
nop
test
cmp
xchg
test
lods
jno
fmull
xor
xchg
jae
ljmp
jp
dec
xchg
mov
xor
xchg
jb
je
repnz
les
mov
lahf
adc
adc
and
je
pop
push
sbb
mov
dec
scas
xor
nop
das
inc
xchg
dec
and
cmp
inc
movsb
sbb
lea
or
mov
movsb
dec
repnz
enter
iret
mov
cmp
mulb
xchg
dec
mov
sbb
into
mov
stos
aas
sub
adc
je
pshufw
xlat
mov
and
in
jmp
mov
je
push
lods
inc
pop
and
dec
xor
add
jbe
sbb
xor
fwait
pop
adc
push
adc
mov
in
ret
cmpsl
mov
pop
pop
cmp
test
gs
push
sbb
or
mov
movsb
test
lret
stc
sub
icebp
xor
movsl
notb
jge
dec
lea
int
jmp
imul
shrb
cmp
dec
movsl
sub
rcrl
into
outsb
push
cmp
lods
fadds
int3
xlat
lock
shll
lcall
mov
jecxz
xchg
lock
lcall
xchg
test
inc
sub
das
and
or
dec
or
sub
push
in
mov
jg
neg
imul
pop
add
sbb
rol
out
adc
clc
dec
push
and
cli
pop
xlat
sub
testl
lret
jp
cltd
repz
in
psllw
jg
sub
lret
push
gs
pusha
scas
fcomps
inc
mov
ret
mov
scas
xor
mov
js
sub
cmp
aaa
imul
adc
xchg
inc
popf
lods
xorb
int
xor
pop
xchg
daa
fwait
int
jecxz
aam
dec
daa
push
mov
xchg
push
push
std
inc
pop
lods
push
mov
outsl
popf
shlb
adc
fisubrs
mov
test
mov
inc
das
jb
dec
clc
mov
leave
test
neg
mov
and
dec
sub
xchg
bound
psubb
mov
insb
repz
add
mov
pop
jnp
in
aad
in
xrelease
out
cs
xor
adc
data16
mov
je
mov
pusha
inc
or
into
or
scas
mov
aas
mov
lds
push
sbb
sti
jns
pxor
pushf
mov
inc
inc
movaps
jnp
add
nop
cs
mov
and
mov
std
out
aas
sub
xchg
fxch
mov
and
sub
add
popf
rolb
inc
lods
shlb
mov
int3
bound
cld
sub
xchg
fwait
mov
push
pusha
cld
out
push
stc
push
and
cmp
mov
adc
jo
es
jecxz
out
pushf
mov
js
lods
outsl
xor
mov
test
sbb
pop
mov
lahf
test
adc
mov
xlat
sarl
mov
xchg
sub
xchg
add
dec
inc
pop
and
push
dec
inc
dec
jo
inc
call
or
out
shrb
int3
inc
sub
dec
mov
loop
sbb
mov
cmpl
fwait
sbb
jle
in
gs
je
xrelease
or
pop
stos
adc
fwait
add
jecxz
or
push
daa
inc
insl
add
cmp
test
xchg
sub
jb
cmpsl
shrl
shll
cmpsl
xchg
push
mov
mov
adc
jbe
inc
pusha
movsb
insb
decl
dec
jb
stos
add
dec
jae
fidivl
out
xor
mulb
das
xor
dec
hlt
cltd
addr16
pop
je
sub
dec
fstl
adc
dec
xor
push
push
std
enter
fdivp
leave
lret
sar
es
pop
imul
inc
inc
or
pop
add
out
je
repnz
insb
mov
loope
notl
aam
xor
outsb
add
arpl
imul
mov
ret
jb
cmp
orl
mov
fdivl
sub
jb
cmpl
rclb
lock
jmp
sbbb
inc
ret
jnp
pusha
icebp
add
push
dec
testb
cli
scas
ds
mov
jg
shll
pop
ficomps
jne
jecxz
gs
cmp
jo
or
inc
repnz
in
jbe
add
sbb
xchg
or
mov
pop
xchg
xlat
add
xor
add
xchg
mov
ficompl
add
fs
push
inc
stc
loopne
bound
rol
mov
jge
in
shlb
popf
mov
int
in
fdivrp
pusha
pop
lock
cmp
test
loop
call
mov
fcoml
imul
cli
ja
mov
add
test
add
insl
mov
mov
daa
xor
jge
jg
ljmp
dec
repz
stos
hlt
mov
jb
push
push
out
cmp
dec
and
jg
fistpll
cmp
xor
mov
shll
mov
push
lcall
ficoml
or
xor
movsb
dec
arpl
add
push
test
pop
mov
cs
mov
int
rcll
xchg
inc
adc
mov
jae
cmp
cli
popa
mov
mov
out
xlat
ret
mov
and
inc
jne
out
and
ljmp
push
push
ds
mov
jb
in
das
enter
dec
inc
pusha
je
stc
push
pop
movsb
cli
in
and
hlt
cwtl
push
aas
xor
push
sub
add
out
push
repz
stos
test
dec
mov
mov
arpl
jg
mov
cmc
xchg
or
repnz
hlt
add
clc
int3
lcall
mov
icebp
cmp
test
stos
dec
or
cmc
mov
xor
aam
sub
dec
inc
add
jno
addr16
ret
push
sbb
jnp
sub
lea
in
pop
ja
push
push
cmp
sar
arpl
push
adc
or
fcompl
push
int
fcompl
test
nop
adc
or
adc
add
sbb
xchg
out
in
gs
dec
fcoml
ret
fisubl
mov
or
addb
rclb
fdivl
mov
or
les
sbb
out
mov
adc
les
lcall
mov
cmp
sub
push
sbb
push
pop
fldcw
sahf
mov
daa
repnz
cmp
dec
addb
into
sti
dec
sahf
icebp
inc
push
in
mov
add
add
sub
mov
inc
fmull
inc
mov
adc
inc
sub
idiv
movb
push
test
fildl
fcomps
incl
imul
mov
fdiv
sar
adc
fsubrs
fcomps
cmovnp
lahf
dec
sbb
insb
dec
in
dec
mov
sub
cmpsb
scas
imul
pop
mov
adc
je
sub
add
scas
mov
insl
daa
jge
clc
cwtl
or
jbe
test
adc
rcr
add
mov
cmp
mov
mov
mov
pop
pop
xchg
sbb
notb
xchg
enter
mov
sarl
and
xor
xor
leave
pushf
fldcw
cmpsb
and
sbb
dec
movsb
jmp
inc
inc
not
sbb
and
dec
into
sub
scas
sbb
mov
bound
fwait
in
mov
stos
scas
lcall
mov
push
scas
js
inc
cmpb
sbb
push
aam
mov
lods
cli
push
aas
ja
int
xor
jb
xchg
xchg
neg
mov
sub
add
adc
jl
fwait
cmpsb
xor
sti
test
push
or
ret
adc
dec
pusha
rcll
bound
fsubrl
lea
movsl
mov
pop
xor
je
pop
movsl
pop
mov
cs
cld
call
scas
testb
mov
addps
jl
and
and
stos
call
xchg
pop
cmp
mov
push
adcl
inc
mov
mov
mov
inc
shrb
sbb
dec
xor
cmp
stos
xlat
mov
pop
push
shlb
enter
add
xchg
lea
sbb
cmp
ja
shrb
mov
dec
mov
iret
dec
push
mov
xor
or
mov
ss
cmc
jne
and
imul
mov
jno
popa
hlt
test
xchg
xor
inc
aad
lods
inc
jmp
stos
mov
mov
sti
insl
insb
and
adc
stos
lahf
in
leave
pop
sbb
ret
pop
xlat
out
or
add
out
adc
jae
out
clc
rclb
adc
in
js
xchg
sbb
cmp
push
pop
or
call
ss
lea
sbb
mov
mov
xchg
mov
xchg
inc
jmp
jo
dec
dec
xchg
fwait
js
sahf
loope
cmc
aas
xchg
loopne
test
mov
mov
mov
nop
or
jo
loopne
sbb
xchg
and
mov
push
fsts
adcb
pop
aad
outsl
sbb
repz
stc
ss
sti
stos
shrb
sub
outsb
scas
xor
adcb
and
into
xchg
jmp
lds
xchg
les
cmp
bound
es
leave
mov
into
lret
insb
pop
jb
inc
sti
mov
mov
jge
mov
cld
xchg
pop
insl
xor
dec
dec
aad
push
add
aas
adc
or
movsl
into
cltd
jmp
pop
add
iret
cli
adc
out
push
pop
cli
cmpsb
sarb
outsl
call
add
imul
popa
js
out
mov
loopne
mov
pop
mov
shll
outsl
mov
imul
sub
or
out
in
push
mov
xchg
lds
push
cmp
push
cmp
xor
inc
out
pop
inc
sbbl
pop
and
adc
mov
sbb
lahf
gs
mov
cmpsl
aam
xchg
out
xor
and
dec
xlat
mov
in
popa
xor
nop
lret
mov
xchg
outsb
mov
aad
jo
xlat
xchg
lds
or
or
pop
fcompl
outsl
test
dec
sarb
roll
fisttps
imul
xor
mov
push
xlat
push
push
int
cmpsb
outsb
add
xchg
push
mov
add
push
xor
fs
mov
cld
lret
subb
repz
lock
sbb
lods
movsl
movhps
mov
mov
mov
rcrb
push
scas
lods
push
gs
mov
mov
xor
test
xchg
jno
mov
sbb
dec
mov
and
cmc
stos
and
add
decb
fstps
xor
mov
jo
dec
adc
test
fcmove
mov
xor
push
shll
cwtd
cmp
jp
adc
push
inc
fistps
push
or
push
enter
out
test
mov
pop
mov
add
aaa
sahf
leave
insl
cmp
xorb
shlb
icebp
add
xor
rclb
jmp
std
and
sbb
packssdw
cltd
xchg
hlt
in
rolb
xchg
jl
cltd
mov
rcrl
cwtl
ja
mov
cwtl
insl
outsl
cmp
sub
pop
sahf
jne
xor
adc
or
rcll
jo
ss
jle
cld
jl
repz
mov
out
addb
or
popa
rorl
fildl
inc
repnz
out
and
orb
rorb
xchg
jns
stos
fs
rcll
mov
cs
sub
jo
mov
out
divb
into
pop
add
lds
mov
mov
jae
pop
nop
or
or
mov
cmp
cmp
aaa
outsb
dec
test
dec
orb
xorl
pop
test
outsl
das
pop
push
sbb
jo
cmpsb
int
pop
pop
into
pop
int
lods
push
dec
pop
and
stc
cwtl
leave
jecxz
mov
jnp
jb
add
outsb
mov
into
mov
xchg
and
push
lods
lret
pusha
out
lahf
in
rcrl
mov
icebp
fstpt
and
xor
stc
test
and
cmp
xchg
and
mov
dec
icebp
jmp
stc
ja
mov
or
ja
mov
pop
arpl
xchg
test
mov
xchg
cwtl
popf
int
in
std
lods
xor
add
add
fwait
add
mov
and
and
lret
daa
shll
scas
popf
test
lock
adc
mov
icebp
xchg
cmpb
jo
sbb
xchg
and
sub
jne
push
inc
mov
xor
je
mov
ss
push
xlat
mov
in
in
push
call
mov
inc
sub
cmp
in
dec
daa
push
jne
movsb
movsl
aam
pop
mov
pop
lods
fbstp
add
inc
outsl
mov
sub
mov
repnz
cmp
bound
cmpb
xor
add
jo
pusha
jg
in
dec
sub
push
sub
add
arpl
jns
sbb
cwtl
popf
jns
jg
inc
sahf
mov
or
mov
push
dec
lret
aas
sbb
push
xor
lret
je
cld
ds
mov
rorl
pop
ret
test
jno
in
pop
push
das
test
cmp
mov
sub
mov
lock
js
fucomip
lock
stos
movsl
popa
aad
iret
or
xchg
cmpsl
pop
data16
hlt
das
dec
in
out
sbb
int3
mov
pop
fcoml
mov
jge
aas
push
popf
inc
std
mov
cld
mov
push
lahf
imul
mov
fwait
and
hlt
imul
push
cli
jle
std
inc
stos
sbb
mov
xchg
outsl
lock
push
out
lea
arpl
jns
shlb
outsb
ja
daa
shll
cmp
pop
stos
lods
mov
pop
bound
pop
pop
repz
lea
movsl
test
jmp
stos
mov
stos
das
push
std
xchg
decl
fsubs
loopne
mov
subb
xlat
sbb
mov
and
jbe
jb
loopne
push
push
out
mov
test
iret
testl
sub
icebp
cltd
ljmp
dec
mov
mov
clc
push
lds
movsl
mov
dec
ds
pop
loopne
jns
pop
loop
sbb
roll
cmpsl
divb
pop
cwtl
cmp
and
cmp
push
out
lds
movsl
mov
ss
dec
push
hlt
mov
jns
xor
adc
sahf
sti
xchg
xor
ja
jb
ret
arpl
shrl
bound
lret
leave
ret
xchg
pop
aas
and
and
jge
xchg
fidivrs
pop
in
mov
loop
or
fbstp
cld
aad
pop
fstps
lcall
mov
xchg
inc
dec
cmovnp
inc
dec
aam
inc
hlt
xor
mov
and
test
push
fildl
sub
sbb
xlat
and
addr16
sub
sbb
push
cmp
xor
test
jnp
jecxz
jno
sub
icebp
push
or
mov
mov
and
scas
jle
dec
adc
and
jge
xchg
or
jg
les
rcrl
out
jno
scas
rorl
scas
inc
addl
daa
add
mov
inc
push
notl
xor
sub
mov
jo
xor
adc
and
or
sbb
push
jo
push
dec
and
fists
arpl
pop
je
shlb
pop
xor
pop
push
add
lods
mov
push
pop
jmp
inc
inc
cld
pop
or
jno
loopne
daa
and
fsubl
add
sbb
lret
cmp
shlb
xor
pop
in
jbe
repnz
and
adc
out
out
enter
xchg
stc
push
inc
sbb
sub
or
sub
shll
aad
cmpsl
and
pushf
pop
jp
mov
clc
notl
adc
test
push
rcl
sahf
fld1
fld
xchg
push
mov
and
pop
xchg
leave
jl
mov
rcll
push
xchg
aad
mov
repz
in
mov
or
mov
test
or
mov
mov
rorl
dec
mov
jle
adc
mov
adc
cwtl
sti
jmp
pusha
sbb
je
int
repz
and
dec
sbb
daa
dec
cmp
je
and
pusha
cmp
or
mov
daa
enter
out
fnstenv
mov
dec
gs
inc
out
add
lahf
loop
mov
mov
push
je
andl
lret
in
dec
fisubrl
pop
jecxz
int
mov
push
xor
cltd
mov
rorb
fstp
dec
test
and
xchg
fstl
int
push
or
movsb
test
fidivrl
push
mov
shrl
loop
jno
add
add
rcr
sbb
xorb
mov
xor
icebp
and
push
push
sub
sbb
or
ja
inc
cld
xchg
dec
sarb
sbb
ret
sbb
jo
or
scas
push
inc
jne
mov
and
dec
jo
push
jecxz
mov
jmp
cmc
cmp
push
jmp
adc
test
xchg
inc
pop
dec
cs
ss
insl
sti
add
lds
cwtl
and
jl
adc
pop
adc
jmp
jle
cltd
jns
and
pop
fiaddl
lret
sbb
inc
cmc
stc
push
adc
sbb
mov
pop
ds
push
cwtl
repz
add
jecxz
add
mov
pop
insb
dec
addr16
in
inc
enter
outsl
jle
mov
cmp
lods
pause
xor
decb
sub
lcall
sti
lcall
dec
mov
lock
aaa
push
cmp
xchg
cwtl
fstpl
into
dec
fsubl
shrl
xchg
movswl
call
pop
mov
or
jns
ds
loope
lahf
pop
in
pop
inc
cwtl
mov
xchg
enter
test
int3
add
pop
popa
pushf
push
cmp
jl
daa
leave
inc
andl
movsl
mov
pop
push
nop
ja
lds
loopne
mov
jne
inc
mov
jb
mov
xchg
mov
gs
ja
inc
hlt
lcall
imul
decb
call
xlat
mov
cmp
faddl
dec
xabort
imul
cld
mov
mov
imul
pop
rorl
ret
mov
inc
cltd
sub
das
je
ja
jp
arpl
or
daa
out
xchg
mov
xchg
lret
push
xchg
mov
shlb
scas
test
bound
leave
inc
jb
push
xor
xor
adc
or
test
inc
decl
sbb
mov
ja
fists
push
mov
dec
lret
inc
fdivrp
rcrb
push
sbb
xor
cmp
int3
addr16
lock
dec
inc
mov
pushl
js
inc
andb
cmpsb
jg
inc
inc
push
out
cmp
cmpl
fdivs
cmova
sahf
mov
inc
xor
mov
in
inc
and
out
jmp
mov
or
jo
nop
lret
int3
or
test
or
mov
sbb
icebp
dec
adc
jp
mov
push
iret
iret
jle
dec
lock
popf
outsl
pop
xor
incb
cmp
testl
mov
in
sbb
dec
ds
out
sub
inc
stc
mov
jp
xlat
or
dec
cmp
pusha
out
sub
pop
lea
nop
fucomip
xor
or
pop
cmpsl
push
push
lret
jg
jp
lock
sbb
dec
je
cmp
add
stmxcsr
repnz
inc
sub
xchg
aam
fistpl
into
and
sub
sbb
inc
or
mov
je
cmp
and
cwtl
clc
shrl
sahf
inc
push
add
mov
sti
adc
xor
mov
scas
mov
xchg
mov
and
cmpsl
sub
add
jmp
subl
ss
sub
and
sub
dec
sbb
faddl
cmp
push
jns,pn
cmp
mov
lods
push
test
je
push
daa
bound
sbb
repnz
add
lds
mov
mov
outsb
inc
fwait
loop
jb
mov
pop
xlat
test
cmp
icebp
pushf
sbb
xchg
int3
mov
shrb
cwtl
repz
mov
sub
ja
jge
and
mov
inc
mov
mov
lods
jbe
xor
bound
inc
test
mov
insl
movsb
inc
xchg
mov
imul
inc
sbb
inc
subl
cmove
jbe
int
je
ja
inc
cmpsl
sbb
pop
sbb
inc
xor
cwtl
jp
adc
cmc
add
pop
adc
pop
inc
ret
jmp
push
lret
pop
pushl
inc
sbb
add
push
push
fisttpl
mov
test
push
pop
add
cs
rolw
add
rorb
test
xor
mov
pop
cmpsb
pop
jmp
iret
xchg
cmp
jmp
xorl
sub
cmp
shlb
enter
stc
jg
mov
jg
repnz
out
or
push
popa
push
mov
lret
rorl
mov
pop
dec
jmp
push
out
jmp
mov
dec
dec
adc
mov
cli
jecxz
add
ljmp
push
cli
xlat
jne
fists
hlt
xchg
jns
sub
lods
cmc
adc
gs
push
vmovlps
loop
rcll
cmp
dec
inc
addr16
inc
outsl
pop
into
dec
das
cli
lods
mov
insb
sbbb
divl
xor
push
mov
in
arpl
dec
out
cmp
add
loope
inc
bound
xchg
imul
iret
xlat
repz
adc
outsl
outsb
js
xchg
mov
scas
int3
push
nop
sti
or
ret
nop
int
sti
xchg
out
ss
imul
sarb
cmpsb
adc
xchg
jge
test
or
mov
pushf
and
lahf
push
mov
pop
int
and
in
lcall
and
cmp
enter
es
jmp
or
mov
mov
sub
shll
fnsave
rorb
leave
in
popw
in
call
loop
jae
sbb
imul
push
aad
ljmp
or
in
or
add
test
daa
cmp
bound
inc
xchg
ljmp
test
loop
testl
js
xchg
jne
insl
push
or
pop
push
adc
bound
fbstp
imul
ljmp
or
cmpsl
in
add
int
test
or
xor
mov
sbb
jnp
adc
add
fdivr
dec
sub
cmp
add
push
mov
pop
sbb
jg
in
xor
push
jbe
aam
dec
sbb
mov
rcll
int3
rorl
bound
mov
icebp
sub
jmp
add
cwtl
and
mov
fisttpl
push
add
fisttpl
cmp
shll
subb
out
mov
cmp
sarl
sub
fistl
movsl
and
out
mov
jg
xchg
mov
lret
lods
jns
jnp
out
testb
mov
aaa
push
and
bound
mov
std
cmp
jne
adc
insb
inc
inc
repnz
dec
lea
fstpl
sbb
push
inc
sub
dec
dec
pop
lods
and
adc
add
and
lret
jne
outsb
imul
or
cmpl
jns
stos
hlt
in
fcmovbe
adc
mov
cli
xchg
lea
xchg
call
sahf
mov
rcrl
jle
add
test
aaa
pop
cld
push
bound
mov
rcr
jnp
add
gs
cmpsl
cld
mov
out
mov
mov
test
repnz
and
std
inc
sub
loope
xchg
mov
insl
or
lret
test
insl
xchg
sub
pop
jns
mov
xor
push
mov
movsb
rorb
xor
jmp
and
movsl
jmp
mov
test
in
add
add
jnp
fcomi
dec
hlt
mov
out
push
mov
dec
pop
pop
or
mov
jge
adc
sbb
aaa
repnz
jbe
lret
out
pop
cmp
test
jl
clc
xchg
push
les
and
lock
dec
cli
pop
xchg
jns
inc
fimull
fidivl
aaa
mov
push
xor
cmpsb
dec
xadd
push
arpl
push
xchg
sub
loop
nop
fxam
icebp
xchg
adcb
jg
pop
xchg
jle
fs
aas
push
ljmp
cwtl
imul
cwtl
in
lahf
fdivrl
jg
jne
int
sbb
fstpt
fisttpll
or
pop
pusha
adc
in
mov
lcall
out
jae
sbb
mov
cmpsl
mov
jne
jb
or
xor
lea
mov
jmp
flds
ficompl
aas
cmpsl
sub
iret
inc
xor
subl
popa
jno
jne
int3
insl
pop
sbb
outsl
jae
dec
pop
in
lcall
enter
push
push
inc
cld
test
dec
and
mov
mov
icebp
cmp
sarb
push
mov
push
push
and
jg
sbb
mov
in
xchg
jbe
sbb
mov
imul
daa
loope
push
cli
movsb
imul
jp
sbb
jecxz
mov
dec
lods
and
jmp
imul
xchg
pusha
mov
push
or
sbb
sbb
pop
movsb
inc
sbb
xchg
cwtl
pop
mov
or
cli
xchg
insb
clc
mov
in
xchg
jecxz
jo
ljmp
sbb
lods
inc
mov
push
insl
and
sub
lret
mov
pop
xor
xchg
jne
out
lods
fcompl
xor
xchg
icebp
adc
inc
ficoml
roll
lds
call
test
cli
jne
outsl
inc
jp
bound
in
call
pop
dec
mov
jmp
mov
arpl
sar
sbb
jns
repnz
cli
hlt
imul
insb
enter
pusha
mov
lea
and
inc
outsb
or
mov
push
sub
push
or
ss
and
imul
jmp
mov
xchg
or
inc
aaa
fs
mov
dec
jmp
ja
xor
cmpsl
test
dec
ud0
out
mov
ljmp
frstor
fsubl
jne
pop
lods
cmpsl
outsb
sbb
mov
push
add
mov
por
adc
scas
imul
or
les
cmpsl
insl
push
add
mov
dec
and
jo
shlb
jbe
hlt
ss
xchg
cs
mov
mov
sbb
mov
xchg
sarl
in
stc
aam
ljmp
sub
stc
fstpt
cmpsb
ja
movsl
mov
lret
das
popa
and
pusha
mov
cmpsb
lods
sahf
mov
dec
jl
pop
subl
inc
add
and
fildll
xor
pop
fucom
ret
inc
jecxz
out
dec
imulb
mov
iret
mov
pop
adc
ja
add
cwtl
addr16
sbbb
jecxz
adc
jns
gs
push
sub
xor
and
push
pop
lret
outsl
sbb
fdivrl
mov
mov
xchg
push
jbe
and
jae
lock
les
push
addr16
xchg
scas
mov
jle
ds
hlt
dec
out
mov
push
cwtl
lods
dec
xor
mov
push
mov
pop
dec
lea
sahf
mov
arpl
push
sbb
mov
sbb
cmpsb
inc
sub
aas
adc
movhps
mov
mov
inc
arpl
mov
xor
xchg
pop
sub
shlb
lea
loopne
jecxz
dec
cmp
xchg
xchg
daa
shl
jge
in
mov
ss
fwait
xchg
cmc
mov
sbb
mov
and
rcll
pop
push
mov
fildl
or
imul
jnp
loope
cmp
push
je
pop
in
jns
ss
orb
pop
cwtl
mov
lock
repnz
pop
xor
jae
les
jnp
cmpsl
inc
pop
push
ficoml
inc
mov
test
cli
mov
pop
pop
xchg
popf
cmp
in
push
or
cmp
mov
in
mov
out
mov
pop
jae,pn
adc
mov
and
in
and
fcomp
outsl
sub
jl
jae
out
and
int3
loopne
scas
js
icebp
push
in
dec
mov
mov
dec
jnp
data16
pop
mov
mov
mov
push
movsl
cs
sbb
mov
adc
std
pusha
int
iret
or
popf
pop
inc
fisubs
push
jp
dec
mov
jg
mov
cmp
xchg
sub
jae
cmp
xchg
mov
mov
cmp
cmp
lcall
dec
aam
rol
adc
push
pop
out
bound
ja
dec
ds
xchg
pop
mov
and
fs
mov
cmp
and
stos
inc
insb
test
shlb
xchg
test
mov
sub
shll
call
repnz
pavgb
mov
fsubs
xor
sbb
mov
stos
jb
dec
mov
fldt
push
daa
push
xchg
inc
cwtl
cmp
out
cmp
add
push
fidivrl
xor
xchg
add
in
out
mov
out
nop
xchg
cwtl
es
addr16
inc
gs
adc
mov
loopne
into
daa
scas
mov
inc
xchg
mov
dec
jl
adc
insb
inc
mov
leave
in
outsb
mov
jg
aas
dec
lcall
cmp
xchg
filds
xor
imul
scas
enter
mov
push
ds
sub
sar
insl
stos
cmp
aas
jl
sbb
pop
jns
cwtl
out
or
push
sbb
mov
adc
out
sub
imul
mov
adc
dec
inc
add
cmp
mov
pop
mov
les
mov
sti
inc
mov
ret
insb
ds
xchg
pop
mov
pop
push
pushl
xlat
in
and
lock
add
xadd
xchg
repz
xor
loop
mov
lcall
subl
push
jbe
mov
gs
push
or
mov
adc
in
inc
test
push
xchg
mov
in
xor
mov
jno
sub
lcall
and
rcrb
push
nop
xlat
std
and
sti
sub
cmp
mov
in
push
cmp
xchg
into
push
notl
push
adc
loopne
xchg
in
ret
xchg
sbb
jns
in
cltd
cs
add
fidivrl
pop
and
popf
or
and
jb
rcll
scas
sti
jb
addw
notb
cmp
mov
stos
push
xlat
xor
push
or
fst
std
loope
cltd
push
cmpsb
jle
xchg
sub
je
sarl
pop
mov
flds
and
mov
inc
push
xchg
repnz
jge
xorl
jno,pt
outsb
popf
pop
jle
data16
ds
pmaddwd
pop
into
or
stos
orb
mov
sbb
add
pop
leave
xchg
or
inc
nop
outsl
push
jecxz
mov
leave
mov
xor
ret
shlb
push
push
push
xor
outsl
adc
movsl
notl
aad
ret
xor
stc
mov
cs
sbb
sub
xchg
sub
mov
push
push
adc
stc
mov
hlt
push
outsl
pop
int3
mov
mov
daa
loope
dec
jmp
pop
push
stc
jge
mov
jl
and
dec
dec
mov
add
sub
arpl
fs
dec
push
cmp
aam
cs
sub
xchg
std
pop
in
iret
gs
pop
cmpsb
pushf
cmp
jne
cs
push
sbb
pop
mov
ja
rolb
out
push
mov
jo
xchg
cltd
jne
nop
hlt
inc
mov
cmpb
push
dec
push
nop
jae
shll
test
jmp
push
fs
addr16
adc
mov
fbld
inc
out
aam
pop
hlt
fimull
jecxz
jl
movzwl
sub
fdivrp
out
outsl
xorb
jecxz
addr16
in
cmp
mov
push
cli
push
adc
jbe
pushf
int3
repnz
push
bound
fs
repz
xchg
cmp
inc
loop
jecxz
mov
mov
jnp
inc
adc
lods
sub
dec
lret
icebp
cmp
pop
into
pop
dec
inc
jg
cld
mov
lea
sub
es
roll
add
lcall
les
pop
ret
jle
xchg
daa
lahf
outsl
test
xlat
xor
lds
nop
ds
or
aam
mov
xchg
movsb
and
adc
sbb
popa
xlat
icebp
aam
mov
and
clc
add
stc
movsl
mov
cmp
bound
rcl
mov
sub
push
movsb
iret
sbb
in
adc
inc
sub
dec
nop
insb
jns
mov
subl
pop
or
or
push
push
jb
fs
sub
daa
scas
and
out
in
sbb
push
imul
mov
andb
cwtl
xor
xor
leave
cmp
adc
push
testl
jl
lods
cmc
xor
xor
push
in
mov
icebp
into
sbb
push
outsl
fildl
jmp
push
xor
or
rcrl
push
shll
scas
aas
xchg
sub
test
pop
sbb
push
or
mov
sub
add
xor
mov
lods
and
out
adc
cld
out
fsubrs
cmpsl
mulb
cmp
sub
and
pop
in
xchg
xchg
push
xor
cmp
ficomps
clc
out
cmc
add
lods
xor
add
jl
fstl
out
xchg
mov
aam
mov
int3
mov
out
pop
pop
into
loopne
jns
jle
ljmp
sbb
mov
jno
arpl
gs
cmpsl
movsl
pop
stos
sub
mov
jns
mov
addr16
adc
test
leave
jno
inc
cld
jp
data16
mov
jne
pop
testb
stos
incb
xor
or
hlt
mov
inc
std
sahf
int3
fstps
sub
cld
inc
ljmp
jb
test
sub
pop
outsl
negl
jo,pt
gs
addl
leave
enter
and
xor
rcl
cmpsb
lods
mov
mov
cmp
scas
pop
add
sbb
cmp
dec
std
cmp
pusha
or
in
lret
xchg
pop
movsb
cmp
jge
mov
ljmp
mov
xchg
in
mov
sbbl
mov
call
mov
shll
sbb
movsb
xchg
fs
or
inc
xor
scas
dec
and
inc
je
adc
pop
loop
mov
pop
push
push
adc
push
adc
jbe
rcrb
mov
mov
add
xchg
push
stos
mov
sbb
sbb
xor
push
dec
add
xor
mov
jmp
movd
and
xchg
cmp
jo
addr16
and
movsb
mov
outsl
push
add
jl
out
fistpl
data16
cs
call
xor
mov
ret
ja
arpl
and
jbe
repnz
jge
clc
inc
jmp
mov
rcll
xor
inc
mov
mov
into
mov
jecxz
int3
cmp
sub
sub
or
enter
mov
sbb
mov
mov
lods
and
insl
sub
outsl
icebp
out
pop
mov
cmp
arpl
add
leave
je
adc
and
testl
add
js
push
jg
insl
fidivrl
test
and
xor
inc
push
jle
rol
sbb
cmp
fmuls
mov
in
inc
jae
push
fistl
outsb
pop
fdivs
ljmp
cmp
insl
fdivr
sub
divb
jp
jg
leave
or
jge
push
jns
sbb
mov
insb
or
inc
mov
xor
sub
mov
dec
cli
jno
inc
inc
xchg
xor
and
xchg
loop
pusha
stos
xor
inc
add
filds
add
movsb
cs
pop
inc
stos
test
pop
and
cwtl
mov
dec
outsb
out
in
add
cmp
adc
int
sbb
pop
es
call
xchg
sbbl
call
addr16
add
sbb
push
loop
mov
stos
or
loopne
daa
mov
mov
and
daa
stos
imul
es
sub
cmc
xchg
sbb
cmp
dec
nop
sub
addr16
jae
divw
mov
mov
lahf
cmc
or
mov
xchg
mov
pop
sar
repz
jo
dec
add
fbstp
loopne
cmp
aam
sbbl
sar
adc
rclb
dec
mov
jg
in
sub
adc
arpl
pop
and
daa
xor
push
xchg
idivb
pushf
sbb
or
lcall
and
ds
imul
shl
xchg
xchg
pop
lahf
loope
pop
mov
or
sahf
clc
dec
lahf
mov
fildl
mov
ds
jb
mov
jb
xor
pop
jne
or
aaa
cwtl
roll
adcb
and
mov
sub
iret
imul
pop
test
std
mov
idivb
jg
sbb
stos
inc
cltd
adc
shufps
imulb
mov
adc
xchg
cs
xchg
shl
lds
cmc
nop
loope
sbb
or
mov
shll
repz
cmp
mov
loope
subl
ss
inc
mov
mov
call
add
jbe
es
sti
push
add
mov
jecxz
inc
or
pop
loopne
repnz
push
add
push
jb
stc
xchg
clc
pop
push
ds
mov
insl
jecxz
dec
mov
xchg
or
nop
orb
hlt
les
sub
in
pop
xchg
addb
push
ja
add
jbe
mov
push
xchg
dec
repnz
lds
sub
or
mov
adcb
orps
push
popf
enter
cmc
cmp
lea
mov
pop
sub
lret
dec
ljmp
clc
add
jb
pushf
cmpsb
lods
adc
xor
mov
fucomi
dec
add
jge
out
lret
fwait
cmpb
repz
mov
das
mov
lods
sti
adc
test
sub
insl
sub
jl
loopne
mov
pop
sbb
xlat
les
sbb
shl
pop
lret
dec
inc
jmp
mov
fdivrl
mov
pop
inc
aam
fadd
cltd
jmp
sbb
jo
and
nop
mov
mov
lds
cmp
popa
out
das
cmc
imulb
jle
mov
mov
movsl
cli
inc
xor
insl
adc
loop,pt
xchg
rorb
sahf
test
sti
enter
dec
test
sub
mov
bnd
inc
imul
sub
cli
mov
jmp
push
ds
cmp
imul
jae
push
movsb
test
insb
pop
and
dec
sahf
testl
out
aas
push
scas
mov
lret
stc
mov
mov
push
xor
cmp
pop
cmp
jno
gs
dec
jnp
push
add
test
mov
js
xor
add
shrl
push
inc
xlat
xchg
inc
or
inc
xchg
dec
sbb
repnz
cmp
ljmp
xor
sbb
push
inc
insb
push
call
enter
pop
jmp
cltd
ds
or
ljmp
cmpsl
or
cmp
xchg
cwtl
and
sub
jl
mov
aam
jge
mov
mov
cwtl
leave
lds
mov
ficompl
ret
xor
arpl
rcr
iret
sub
xchg
inc
jmp
mov
divb
push
sub
inc
sub
daa
sbb
or
out
cmpb
add
mov
add
mov
imul
push
sarb
xchg
jg
push
ret
push
lcall
testl
enter
fsubrl
or
xchg
stos
jp
dec
repz
dec
add
xor
mov
pop
jbe
xor
je
data16
lods
cmp
nop
jl
in
nop
rolb
pop
imul
shl
pop
push
push
adc
ds
push
dec
mov
inc
pop
popa
std
sub
xor
cmpsl
jge
mov
jp
mov
cld
lahf
or
jp
imulb
call
aam
jmp
xchg
add
int
repz
std
xchg
sbb
jmp
mov
mov
cwtl
dec
rcr
or
sub
into
jne
fs
cmp
loope
jbe
ds
mov
pop
jmp
push
xchg
lock
daa
mov
clc
push
xchg
pusha
jno
loope
cwtl
leave
add
add
add
push
xor
repz
fmull
sbb
pop
out
hlt
add
dec
adc
inc
jge
xchg
clc
stos
ja
sub
add
scas
daa
xchg
in
add
aas
repnz
arpl
sbb
lret
cs
fldt
jbe
mov
jae
jmp
jl
sbb
jo
push
or
fcomps
fadd
or
es
arpl
sub
mov
jb
test
pop
lret
fcompl
inc
aam
es
movsb
pop
test
incb
icebp
mov
fldl
xlat
mov
xor
jns
fldenv
dec
int
std
fildll
sub
daa
pop
ret
addr16
mov
adc
loopne
pop
push
dec
mov
jmp
andb
add
in
push
inc
aas
and
sbb
aaa
or
dec
mov
cld
adc
inc
adc
xchg
xchg
subb
pop
mov
xlat
mov
movsl
ljmp
aaa
jae
insl
or
mov
addr16
inc
mov
adc
cwtl
pop
clc
add
sub
jbe
aas
in
fiaddl
loop
mov
loop
pop
pop
xchg
aad
or
int3
xor
loopne
push
jl
fisttpll
pop
jns
test
enter
push
out
jge
out
mov
sub
sub
push
xchg
mov
stos
mov
popaw
pusha
test
iret
out
std
jo
sbb
ja
add
stos
test
insb
stc
lds
lds
aas
mov
out
mov
sub
dec
aas
hlt
ljmp
scas
mov
stc
lds
aaa
mov
outsb
fsubrl
sub
xchg
pop
xlat
or
in
roll
mov
ljmp
js
nop
filds
sbb
add
cltd
xor
push
xchg
jge
dec
movsb
jg
add
insl
push
pop
cmp
jb
sahf
into
push
jmp
sti
dec
jns
cmpsb
cmp
jmp
aam
jbe
sbb
insb
xchg
or
imul
cmpsb
dec
cld
stc
cmpsl
lret
push
sub
xor
mov
fldl
mov
dec
test
out
popa
sbb
in
sarl
in
frstor
arpl
jecxz
mov
in
les
insb
xlat
lock
stos
push
jbe
jae
icebp
push
cltd
or
jmp
push
aad
int3
dec
mov
jns
jno
xor
jo
push
cmp
imul
cmp
pushf
pusha
sub
jnp
dec
jns
xchg
sub
dec
movsl
inc
dec
sarl
pop
inc
pop
push
sarb
jbe
jno
mov
enter
lods
jns
xchg
dec
jbe
mov
push
xchg
pop
xchg
xor
das
fmuls
aad
push
scas
push
sub
call
pop
push
xor
jmp
jbe
mov
xor
fldcw
aam
ja
imul
fcomps
and
loop
sub
xchg
mov
in
test
xor
adc
enter
iret
mov
sub
mov
int
mov
shlb
insl
hlt
push
mov
outsb
ljmp
imul
shlb
pop
out
xchg
es
shrb
dec
in
dec
dec
int
mov
ret
mov
push
cmpsb
lret
xchg
xchg
pop
jbe
out
int3
push
add
ftst
ret
mov
dec
lret
jns
adc
and
shl
shrl
and
into
sbb
mov
mov
jbe
push
sbb
pop
and
enter
jnp
push
sbb
into
jo
dec
add
and
and
aaa
jmp
jbe
mov
adc
loopne
aaa
inc
xchg
sbb
fidivs
xchg
scas
or
int
shrl
sub
and
mov
bnd
lcall
mov
fdivrl
xor
xor
lret
mov
jae
push
les
shl
jnp
pop
fcom
stos
nop
scas
xchg
sbb
add
dec
jbe
aad
repz
call
add
xor
das
ja
jae
fdiv
movsl
jno
loopne
mov
enter
lds
inc
dec
push
daa
ja
fistl
in
xchg
cmpsl
jg
add
mov
jg
sbbl
call
add
ja
xchg
cltd
mov
movl
inc
xor
ret
test
sbb
mov
test
rclb
cmc
ds
icebp
xchg
mov
lret
cmpsl
packuswb
ljmp
jp
mov
xchg
dec
push
inc
and
xchg
adc
int3
fidivs
mov
push
rcrl
ret
in
repz
mov
pop
cmc
clc
loope
outsb
jl
and
pusha
xchg
dec
jg
lret
lahf
mov
push
shl
jo
pop
mov
push
test
sbbb
push
pop
mov
sbb
xor
inc
xchg
lret
popf
dec
adc
mov
jno
pop
ret
fidivs
mov
pop
jge
cmpl
xor
pop
cltd
xor
xchg
jg
push
mov
lds
cmc
and
shll
frstor
test
aam
jbe
mov
outsl
lret
ljmp
sahf
sahf
mov
mov
imul
mov
sbb
xchg
inc
add
inc
xchg
jnp
mov
pop
das
pop
jne
in
push
mov
jmp
sbb
inc
out
adcb
xor
inc
lahf
push
xor
mov
mov
stos
out
addr16
lret
dec
and
sbb
ja
fs
jne
xchg
adc
iret
shll
cmp
jnp
outsb
xchg
decl
jle
js
push
aaa
push
or
rolb
inc
sbb
push
lret
inc
inc
insb
rorb
jb
xor
test
imul
jo
adc
sahf
lcall
outsb
dec
mov
inc
mov
add
mov
cmp
cmp
mov
je
sub
sub
dec
js
outsl
addr16
cld
std
pop
cld
shlb
pushf
inc
dec
imul
mov
sbb
inc
cli
and
movsb
pushf
dec
inc
cmp
popa
add
popa
sub
das
fisttps
mov
xor
ret
adc
arpl
negl
ret
mov
cmovb
xor
leave
or
stc
and
add
jb
hlt
add
cwtl
imul
adc
daa
movsb
orl
xchg
sub
push
mov
lcall
scas
ljmp
dec
mov
jecxz
and
in
cmc
js
lahf
mov
cmpsb
mov
mov
push
jl
fs
push
test
xchg
fs
sysret
shrl
icebp
in
mov
push
ror
jmp
mov
cmp
push
clc
lods
ljmp
mov
cmp
shlb
in
jge
cmc
shrb
sbb
inc
outsl
clc
push
inc
popf
dec
out
push
fs
add
inc
nop
iret
xchg
xchg
dec
add
out
imul
and
jae
cmp
pop
das
mov
jns
cmp
xchg
stos
xchg
and
inc
dec
in
mov
or
movsb
dec
mov
mov
push
lods
cmp
enter
inc
dec
mov
mov
jnp
push
xchg
inc
and
pop
xor
popf
mov
lods
xor
js
xchg
sub
sbb
xor
jle
shrl
jmp
or
jo
cmpsl
pusha
cmp
insl
call
sbb
pop
sbb
dec
ja
outsb
cmpsb
inc
jl
lea
dec
jmp
fs
or
adc
adc
xchg
cmp
cltd
lea
ja
mov
stos
stos
addr16
xchg
movsb
lret
aam
pushf
out
add
lds
pop
lods
stos
test
jo
ret
pop
sbb
xchg
loop
sahf
pop
test
clc
rcl
jl
mov
and
and
and
ret
push
dec
loop
mov
dec
psrld
adc
loopne
inc
clc
dec
imul
and
jp
dec
insl
lea
jp
insb
rorb
fistpll
inc
push
loop
dec
cld
xchg
mov
lret
cmpsb
add
xor
in
dec
xor
xchg
mov
push
jg
aad
fldcw
sti
sbb
push
mov
dec
lods
je
adc
cs
out
call
mov
jo
jb
dec
jne
lds
addr16
add
cmp
dec
rorb
mov
aad
lret
sub
daa
push
sbbb
mov
xlat
xchg
fmull
dec
cmpl
xchg
push
sub
cmp
add
pop
sbb
ljmp
jmp
aaa
jl
js
mov
mov
xor
mov
idiv
jb
arpl
ret
test
xchg
shlb
cli
mov
ret
ljmp
add
aaa
xor
in
inc
scas
mov
pop
movsb
dec
insb
not
and
xchg
mov
jg
xchg
fnstcw
iret
cmp
xchg
mov
push
xchg
rorb
push
movsl
aas
push
xor
pop
in
adc
sub
sub
mov
sti
adc
fdivrs
mov
add
je
sub
icebp
mov
imul
call
and
orb
adc
mov
jbe
jns
jns
push
shr
dec
lret
push
cs
int
jnp
lret
xchg
aam
stos
xchg
jnp
repnz
adc
int3
andl
fidivl
mov
jecxz
jo
cmp
popf
pop
aaa
into
shrb
das
sbb
sbb
mov
and
fsubl
hlt
jmp
out
pop
push
test
scas
cmpsl
sub
ljmp
mov
xor
push
xor
pop
pop
aaa
or
mov
leave
adc
lds
xlat
daa
lods
mov
std
idivb
out
imulb
cmpsl
jne
cmp
enter
inc
icebp
fildl
ret
pop
jp
popa
in
in
fdivrs
jg
or
push
mov
decb
jecxz
pop
int
sub
pop
hlt
cmc
mov
std
mov
push
cmp
mov
jl
das
jmp
jne
in
dec
cs
push
idivl
push
mov
jne
fmulp
dec
repnz
mov
inc
call
mov
fwait
pop
fildll
or
insb
stos
cmp
dec
imul
mov
inc
fsubs
mov
inc
inc
xchg
jp
mov
hlt
jno
mov
rorb
sub
enter
mov
lds
dec
mov
fadds
stos
sbb
pop
lret
popf
inc
or
mov
xchg
sbb
je
test
ret
mov
adcb
int3
lret
stc
cmpsl
mov
out
daa
out
inc
repnz
add
lods
out
sbb
pop
dec
push
xor
fists
sub
popa
pop
jae
mov
ret
fwait
imul
cmp
mov
ss
icebp
lods
cmp
mov
iret
mov
push
divl
pop
cs
test
mov
xchg
outsb
mov
xor
js
xchg
lcall
xlat
jo
jmp
pop
call
test
fistpl
mov
xor
mov
or
xchg
xchg
or
imul
jns
mov
insb
push
fdivl
insl
dec
rclb
lcall
mov
das
or
arpl
pop
jno
js
dec
notb
xchg
inc
sbb
sub
sbb
test
jnp
bound
movsb
stos
mov
adc
xchg
adc
dec
ret
adc
fiadds
pop
add
cmpsl
loope
mov
ss
xchg
lahf
mov
shlb
mov
loopne
enter
lods
pop
sbb
in
dec
cmpsb
into
adcb
pop
std
xlat
mul
cmp
mov
out
dec
je
pop
in
sub
mov
xchg
rorl
mov
push
flds
cmc
xchg
jbe
sub
pop
adc
xor
imul
ljmp
imul
addr16
ret
inc
out
mov
test
fcoms
push
xor
movsb
jmp
mov
les
rcrb
xchg
cmc
dec
pop
clc
sbb
sub
inc
inc
sbb
hlt
notl
in
sbb
or
jbe
mov
cmp
ficomps
jecxz
lods
mov
add
push
adc
inc
mov
mov
mov
out
pushl
mov
fstps
loopne
xor
push
ret
mov
mov
pop
sti
cld
mov
cmp
mov
pop
paddsw
sbbl
aas
push
int3
jmp
ss
iret
or
pop
cmp
cmpsl
mov
sti
cmc
sub
aad
addr16
test
adc
rcrb
imul
insl
int3
mov
push
jne
clc
sub
inc
and
pop
mov
jbe
cmp
ret
or
int
aad
bound
test
cmp
popa
testl
loopne
aaa
sub
and
gs
mov
loope
cmc
sbb
xor
push
ds
dec
loopne
cs
daa
mov
leave
cmp
sub
push
std
mov
lds
rol
mov
pushf
scas
xlat
out
in
hlt
jb
push
sbb
or
lcall
xchg
xchg
mov
jbe
mov
pop
jl
jg
or
aam
push
addr16
lret
sub
fimull
cwtl
frstor
lret
rclb
sub
mov
and
add
sub
push
imul
or
and
sarl
popa
rorb
cmpsb
pop
mov
add
mov
lahf
pop
push
fisttpll
in
pushf
sub
push
sbb
scas
mov
out
fnstsw
sub
dec
jb
sbb
shrb
inc
testl
sbb
negl
ret
lods
stos
pop
clc
imul
movsb
pop
add
mov
xchg
pop
dec
mov
and
andb
movsl
fnstenv
jge
roll
jne
fwait
mov
popa
cmpsb
jle
cmp
or
push
fstl
lret
pop
sub
cmc
lcall
mov
ror
push
adc
cs
mov
lods
js
push
repz
mov
out
xlat
fimuls
add
movsb
imul
lea
imul
cmp
or
push
repz
sbb
rolb
sbb
or
push
sbb
xlat
add
sarl
xor
pop
rcll
cmp
loope
mov
add
test
into
pop
in
mov
sub
cmp
jo
rcll
xchg
jmp
fisubs
jp
sbb
scas
movsb
fcompl
push
mov
dec
xor
cmp
nop
sbb
xor
and
xor
mov
cmp
xchg
cwtl
add
or
or
dec
and
aaa
imul
out
pop
mov
add
mov
fadd
nop
cmp
popa
mov
pop
dec
dec
add
mov
xchg
or
lret
outsl
lods
dec
mov
in
xchg
adc
and
jno
roll
mov
mov
cmp
cmp
test
loop
push
jg
in
scas
push
dec
pop
dec
inc
push
imul
sbb
ss
fdivrp
cs
movsb
stc
pop
cld
sbb
mov
cmp
and
out
pmaxub
mov
dec
dec
sub
data16
aaa
push
sub
lods
and
popa
add
mov
pop
rcrb
inc
cmp
mov
fdivrs
hlt
cmp
xchg
push
or
dec
inc
sub
sub
push
lods
cltd
sahf
inc
rclb
xchg
mov
ljmp
daa
notl
push
test
jl
aaa
jle
cld
pop
lcall
pushf
clc
dec
sbb
dec
andb
and
incl
popa
jge
fs
mov
add
sub
test
fisubs
fcompl
xor
sarb
add
xchg
mov
push
jl
dec
fsts
sar
mov
mov
sub
pop
js
mov
xor
xlat
sub
dec
mov
or
push
out
lods
push
mov
mov
or
out
xor
xlat
sub
adc
adc
push
adc
xor
in
test
sub
cmpb
mov
adc
fnclex
and
fdivrl
movsl
adc
add
mov
push
jle
inc
cmp
push
fdivrs
rep
push
push
jl
inc
mov
add
loopne
jo
mov
cld
dec
mov
addb
mov
adc
fldcw
insb
and
or
mov
movsl
adc
fstps
dec
inc
xchg
lea
cwtl
ljmp
cmc
mov
xor
sarl
pop
dec
fwait
cli
xchg
or
adc
sbb
inc
jmp
and
push
daa
sub
push
jmp
dec
adc
xchg
jl
int3
and
fprem
jo
outsl
jg
xchg
test
jns
ds
cli
or
rorb
dec
dec
idivb
aam
fs
mov
mov
mov
testl
fnstcw
mov
mov
dec
pop
or
ds
loopne
mov
arpl
ja
fnstcw
adcb
add
das
addr16
dec
stos
adc
clc
inc
aas
sbb
insb
mov
xchg
and
mov
out
lods
cld
push
or
adc
pop
mov
imul
xchg
cltd
je
sbb
xor
and
stos
xchg
fldl
sarb
arpl
fstps
fdivrl
cli
xor
add
xchg
js
inc
xor
movsb
pushf
shr
data16
push
outsl
adc
movsl
mov
movsb
sbb
xor
testl
int
pop
leave
and
inc
clc
add
pop
push
addr16
cs
or
mov
outsb
orb
mov
mov
sub
mov
shll
push
adc
and
mov
mov
xorl
lea
mull
js
mov
pop
mov
scas
movsl
lock
xchg
inc
add
push
mov
pop
dec
xorb
std
adc
push
aaa
inc
and
mov
adc
iret
out
rcl
mov
push
inc
pop
or
sbb
insb
add
inc
xchg
pop
loop
in
adc
mov
out
push
pop
pop
addb
pop
jbe
jmp
add
nop
cmp
clc
cmp
lods
data16
inc
mov
hlt
rclb
sub
cmpsl
or
in
push
outsl
mov
aad
pop
popf
stc
out
cmp
jmp
out
mov
jle
lods
adc
and
lods
mov
cltd
loop
and
ds
loop
jmp
repnz
mov
mov
movsl
test
push
mov
push
mov
ja
and
dec
lret
es
sub
mov
call
add
push
orl
pop
sbb
stos
push
pop
repnz
sbbl
cmp
fwait
mov
loope
sub
sahf
adc
ss
dec
inc
repnz
pushf
dec
cmove
scas
mov
mov
stos
mov
pop
push
imul
std
out
data16
push
lods
pop
outsl
pop
and
mov
mov
add
int3
jecxz
mov
das
or
xchg
imul
cmpsb
lret
sub
xchg
movsl
pop
ljmp
into
test
push
push
into
pop
mov
xchg
inc
sub
in
push
push
fstl
jl
leave
lds
add
aad
fs
push
cmp
mov
push
or
mov
test
ss
xlat
je
inc
pusha
lods
xchg
jae
pop
inc
adc
lods
call
jle
fsubrl
lret
dec
add
and
imul
xchg
arpl
xchg
ja
mov
add
out
cmp
hlt
jge
loopne
pop
imul
adc
ss
mov
lds
pop
jo
push
ror
int
pusha
pop
pop
pop
push
dec
dec
mov
xlat
xchg
inc
ret
jge
fcmovb
scas
inc
cwtl
xchg
mov
jno
cmp
add
sub
ret
lds
lods
rolb
insl
mov
cltd
ret
js
fcompl
cmpsb
ficoms
push
push
test
mov
int3
es
aaa
ret
sbb
lahf
or
adc
cld
lea
cld
mov
sbb
or
xlat
inc
les
pop
pop
adc
sti
scas
insb
pop
sbb
jno
mov
ljmp
rcll
mov
pop
jns
push
mov
andb
in
iret
push
mov
mov
lret
je
xchg
out
lock
sub
cmp
lods
xchg
leave
shr
add
sbb
shrb
cmp
cmp
add
cmp
hlt
cmp
fwait
jge
mov
mov
jo
pusha
and
lds
cmpsl
pop
pop
test
std
aam
in
addr16
insb
in
mov
xchg
pop
mov
push
add
and
ror
dec
ret
jns
mov
xchg
push
lods
rcll
mov
nop
inc
sub
mov
dec
and
sbb
cs
sahf
xchg
adc
pop
mov
ss
cmp
mov
sti
into
or
dec
stos
sub
ficoms
dec
jle
mov
sub
cmp
mov
inc
pusha
lds
fidivrl
ljmp
mov
test
add
out
dec
mov
sub
cmp
dec
arpl
xchg
mov
iret
jno
stc
push
movsl
or
dec
fnstsw
arpl
sahf
into
pushf
rorl
fmul
push
shlb
inc
pushl
mov
iret
popa
and
sbb
jp
movsb
scas
stos
cmp
out
mov
dec
mov
into
or
mov
mov
cmp
xchg
push
out
cmp
pop
xor
dec
inc
insb
dec
test
jp
push
sarb
test
aaa
sub
leave
sbb
push
cmp
add
push
push
adc
lea
dec
mov
inc
mov
xchg
jg
jns
cmp
xlat
add
mov
popf
xchg
sbb
movsb
mov
or
jae
pop
cli
push
nop
lods
jge
hlt
fnstcw
adc
xchg
aaa
clc
push
leave
lock
fstl
cmp
icebp
orl
aam
add
call
nop
cld
es
push
xchg
push
ret
inc
cmp
ret
xchg
pop
and
dec
popa
xchg
mov
adc
xchg
sahf
push
clc
xchg
scas
ds
jb
lcall
cli
scas
shlb
stc
jmp
imul
test
mov
iret
popa
xor
jle
and
pop
dec
mov
cs
push
ja
jle
jmp
imul
enter
ds
push
loopne
and
fisubrs
xor
dec
hlt
jg
jne
or
out
and
jp
mov
inc
xor
add
push
dec
sbb
outsl
xchg
fstpl
or
stos
mov
arpl
out
sub
mov
dec
cmpsl
push
pop
xor
cmp
xchg
les
sbb
sbbl
or
cmp
nop
dec
add
inc
cmpsb
cmp
xchg
and
stc
inc
std
or
es
pushf
outsb
jl
mov
fisubl
mov
testl
push
pop
mov
sbbb
jo
mov
add
jb
push
pop
adc
bound
inc
in
sbb
fstps
sbb
mov
adc
adc
or
cmp
sbbl
and
jnp
test
in
add
aam
std
mov
test
dec
test
add
js
or
fisubrl
adc
cmp
xchg
int
dec
sbb
pop
mov
les
xorb
mov
lret
mov
aad
pop
and
pop
cs
or
dec
fdivs
cmp
add
icebp
dec
test
push
and
in
leave
xchg
ficoms
arpl
in
ja
cmpsl
andb
dec
mov
push
shrb
xchg
mov
push
cmc
scas
dec
and
inc
push
and
push
and
test
mov
jae
sub
shlb
enter
aas
mov
xor
xor
push
enter
pop
ss
rcll
dec
pop
jb
nop
aas
xchg
lret
push
insb
pop
test
jmp
jmp
sub
fistpll
inc
aad
jge
orb
pop
jns
rcr
jl
mov
in
sub
insl
leave
cmp
jg
xchg
push
cmpsb
pusha
clc
sti
sub
nop
in
and
ljmp
in
adc
cmp
mov
daa
aaa
adc
lcall
xrelease
imul
insl
pop
dec
pop
push
neg
mov
dec
mov
stc
rcl
jb
pushf
imul
sti
sub
fs
repnz
inc
mov
pop
adc
stc
jg
jo
cmpsb
xchg
and
add
adc
and
orb
call
fldenv
and
jl
push
mov
jmp
push
mov
push
sbb
addr16
dec
cltd
xchg
loope
xchg
ds
fisubs
push
aas
xchg
push
popa
testl
je
push
sbb
push
pop
ljmp
push
or
nop
dec
mov
test
xchg
lods
pop
sub
sahf
div
xchg
orb
inc
decb
add
mov
or
loope
mov
lock
mov
ret
lock
push
sbb
subb
mov
movsb
arpl
insb
cmp
stos
push
lds
cmpsb
ret
jmp
out
pushf
xor
stos
js
lea
ret
fldl
lods
ds
in
mov
daa
leave
push
add
fldl
inc
add
add
mov
aas
loopne
fidivrs
cmc
inc
lret
adc
xchg
pop
fsts
lret
sti
mov
mov
push
scas
cmp
popf
push
pop
mov
test
jne
pop
dec
or
push
aad
mov
jns
ja
loop
aad
push
adc
xchg
cwtl
push
dec
dec
push
fcomi
dec
and
out
das
push
sbb
sbb
clc
or
xorl
cmp
in
insl
in
test
add
fs
mov
mov
mov
mov
cmpsb
or
or
stc
jle
lret
frstor
or
icebp
aad
dec
mov
fwait
xor
mov
mov
adc
jmp
test
mov
loope
lret
dec
and
jmp
xlat
mov
mov
dec
mov
push
xchg
xchg
js
or
mov
js
flds
mov
and
lods
xchg
push
push
iret
push
xor
bound
fdivp
pushf
shrl
inc
in
in
jge
add
fists
jo
insl
xor
cwtl
mov
das
inc
pop
push
data16
cmp
xchg
mov
xor
sbb
outsl
adc
xchg
test
xchg
lcall
pushf
dec
jmp
ficoms
test
jne
push
mov
fnsave
in
jne
and
push
pop
pop
jbe
inc
xor
cwtl
mov
dec
out
addl
and
sub
cmp
push
outsb
cld
mov
xchg
xchg
push
sahf
sub
js
xchg
inc
push
xchg
sbb
mov
jne
imul
adc
insl
pop
dec
jmp
imulb
insl
adc
call
ds
inc
jecxz
adc
and
or
sar
std
add
lea
test
nop
cltd
jg
jnp
cmp
sbb
scas
push
nop
ds
pop
sbb
pop
mov
pop
push
mov
popa
pop
cmp
adc
cltd
cmp
cmc
ret
pop
dec
int3
cmp
lret
or
sarb
jg
fwait
inc
mov
icebp
adc
pop
sub
jne
scas
mov
xchg
cmp
cmc
jbe
sub
ljmp
inc
mov
dec
fnstcw
lea
mov
ja
popf
push
loop
test
cmpl
or
fs
imul
je
rorl
push
add
mov
aam
cmp
push
nop
inc
xchg
mov
sbb
dec
fwait
call
inc
and
rolb
dec
sti
repz
cmp
adc
xchg
adc
aaa
push
cltd
add
and
xchg
clc
adc
and
shrl
jle
sub
icebp
cmp
jp
cmc
lret
daa
jb
sti
test
mov
push
aaa
pop
rclb
push
sub
lcall
adc
dec
test
icebp
lods
jp,pt
movsb
add
jp
fmuls
das
cmpsl
fdivl
pushf
ss
sahf
aas
push
sbb
ss
cld
mov
rcr
int
sti
arpl
jno
or
repnz
sti
inc
jg
gs
sub
sub
sbb
or
cltd
addr16
or
out
mov
jle
inc
adc
push
fisttps
data16
cmp
cmp
int3
into
push
pop
aad
out
or
repnz
cmpsb
lret
lds
cli
adc
test
out
pop
dec
and
int3
cmp
imul
ljmp
mov
leave
daa
dec
sbbl
sbb
or
xchg
push
adc
mov
repnz
cmp
js
dec
ret
mov
jb
nop
mov
fadd
iret
pop
pop
ljmp
mov
das
sub
or
setl
mov
nop
test
in
push
in
dec
or
dec
enter
dec
popa
push
popl
dec
fisubl
arpl
lds
jo
mov
test
mov
arpl
sub
int3
or
mov
sbbl
cmpl
dec
aaa
cmp
push
les
xor
xor
or
std
jbe
and
xor
xchg
or
fdivs
mov
loope
and
dec
cmp
xor
arpl
mov
or
pop
pop
sahf
int
inc
and
xchg
ret
push
mov
mov
stos
cmp
out
and
mov
and
mov
ficoms
int3
sti
cmp
shr
testl
mov
sbb
cs
lds
mov
scas
mov
scas
inc
xor
cwtl
lret
in
pop
dec
mov
mov
add
scas
fsubr
leave
mov
andl
rclb
ja
nop
pusha
ret
sub
mov
sub
daa
or
cwtl
in
inc
stos
lcall
xchg
stos
add
testl
cli
inc
call
ret
mov
or
dec
dec
add
pushf
xchg
cmp
pop
stos
push
outsl
mov
aad
in
arpl
add
pop
fadd
adc
lods
out
lahf
ljmp
mov
cltd
push
xor
andb
pop
sub
jno
leave
mov
fisubrs
sub
adc
sbb
mov
mov
mov
stc
mov
outsb
in
enter
loope
andl
addr16
dec
shlb
add
imul
push
lret
ja
xchg
ja
pop
jae
hlt
mov
mov
add
sub
lods
popa
daa
nop
dec
movsl
ret
stos
push
in
pop
test
xchg
cmpsb
out
lods
pop
idivb
jo
es
bound
pusha
unpcklps
push
lcall
mov
dec
aad
or
fsts
xchg
and
sbb
xor
nop
pop
fdivrl
jns
std
mov
in
add
pop
outsl
loope
int3
add
cmp
xor
jmp
idivb
out
bound
out
pop
push
xchg
or
mov
std
mov
roll
rcl
mov
int
dec
ljmp
je
or
clc
outsl
xchg
inc
mov
pusha
add
pop
outsb
mov
in
mov
clc
xchg
push
mov
stos
in
scas
out
pop
and
sbb
into
gs
and
lods
push
push
movsl
inc
data16
pop
mov
inc
in
push
inc
and
xchg
repz
jecxz
idiv
fisubrs
sbb
push
fnstcw
pop
clc
mov
je
popf
jle
mov
mov
lock
jmp
fwait
sbb
jl
cmp
mov
inc
push
rcrl
inc
test
cmc
inc
cwtl
push
fs
and
dec
dec
xchg
xor
sub
xchg
jbe
adc
pusha
int3
xchg
and
xorl
add
ds
mov
fbld
or
scas
out
jne
pop
insb
ret
and
dec
inc
xchg
dec
out
mov
jnp
mov
inc
pop
sub
dec
cltd
and
jl
cmp
cmp
push
call
cli
lods
and
sbb
jle
add
sbb
arpl
lea
rol
xchg
mov
test
mov
movsb
sarb
push
cmpsl
fstp
fmuls
shrb
sub
adc
cmp
pop
sub
hlt
adc
dec
movsl
fs
mov
sub
jg
out
fmull
test
xchg
loop
notl
cmp
xchg
mov
into
and
insl
and
jge
andb
mov
adc
pop
inc
loop
cwtl
gs
add
jmp
adc
dec
xchg
cwtl
das
pushf
ljmp
cmp
outsb
lcall
and
loopne
push
push
mov
cltd
and
outsb
inc
ret
push
sbb
inc
lods
xor
insb
mov
clc
movsl
fbld
fs
xor
decl
dec
sub
sbb
rcr
xchg
aad
push
hlt
ret
jae
and
cmp
cwtl
or
lret
shrb
push
dec
mov
inc
adc
test
xchg
xor
call
push
sbb
lret
scas
in
sbb
inc
xchg
and
arpl
enter
and
jge
iret
jnp
jno
in
mov
aad
xchg
cmp
or
xlat
inc
xchg
mov
ja
cmp
xor
xor
push
dec
jne
xorl
sub
out
pop
mov
jmp
xchg
mov
cmpsb
stos
push
subb
mov
movsb
cmp
sbb
test
loopne
sub
and
mov
negb
xor
icebp
idivl
push
xor
jne
lods
mov
int3
pushf
cmp
inc
ss
les
cld
inc
lods
xchg
cmp
dec
dec
cltd
jo
pextrw
mov
fidivs
or
cmpsl
mov
mov
lcall
loope
mov
aas
mov
fwait
jno
shll
mov
test
test
mov
push
arpl
and
js
dec
cmpsl
bound
adc
movsb
adc
push
addr16
std
aas
and
jp
adc
sahf
outsl
push
pop
andb
sti
jno
push
clc
mov
ror
in
aas
pop
call
out
orb
dec
sbb
aaa
lret
out
xor
cmpb
mov
in
addl
mov
iret
rorb
jo
pop
shr
xchg
push
lret
insb
xor
adc
outsb
mov
inc
mov
sub
outsb
aam
and
pop
mov
insl
lods
scas
cmp
sbb
call
lods
jmp
sub
orb
cmp
sub
jno
lcall
lret
push
mov
inc
hlt
sbb
call
fsts
sub
movsb
or
and
mov
daa
adcb
jae
mov
outsl
dec
scas
mov
cmp
xor
sbb
ret
data16
insl
mov
adc
adc
aam
xor
fwait
mov
nop
sarb
stos
movsb
mov
repz
push
scas
xlat
jno
xor
fwait
sbb
lret
cmp
int3
sub
lock
repnz
mov
mov
sub
fsubrl
mov
inc
inc
lret
cmpb
in
test
dec
ss
push
leave
mov
dec
scas
rorb
mov
ds
shlb
pop
cmp
les
fs
jne
xor
sahf
jle
mov
inc
jle
push
aas
dec
push
int
xlat
outsb
mov
xor
fmuls
cmp
stos
sbb
inc
inc
cld
sbb
loope
dec
aam
adc
in
jns
or
leave
adc
xchg
jp
fstps
cld
mov
fwait
mov
jmp
or
sbb
popf
movsb
xchg
pop
jl
out
lret
rclb
sbb
adc
or
xchg
pop
addr16
cld
mov
add
dec
add
cmpsb
cmp
testl
aad
ficompl
stos
scas
loop
and
mov
jmp
cmp
sub
test
jmp
loop
mov
popa
leave
add
sbb
ds
add
cltd
add
leave
das
ds
out
mov
nop
insl
and
mov
outsb
shlb
ret
pop
insb
inc
jmp
repnz
dec
aam
inc
mov
adc
or
insb
dec
dec
inc
xor
mov
inc
mov
jmp
push
pop
mov
movb
or
or
dec
xlat
fwait
push
sbb
inc
fcmovnu
push
push
or
mov
frstor
and
cs
inc
loop
xchg
icebp
rorb
sbb
bound
cmpsb
push
xchg
mov
xor
sarl
lods
push
ret
pop
jg
xor
sahf
push
mov
push
test
dec
pop
jno
fs
sub
jle
int3
jmp
loopne
sub
enter
xorl
xor
inc
das
pop
xorl
pop
sbb
cmpsb
pop
cmp
in
inc
pop
sahf
jmp
pop
or
push
xor
pop
jmp
pop
in
test
jg
cld
mov
xchg
push
pop
ficompl
inc
mov
imul
adc
mov
ljmp
sbb
inc
mov
or
out
mov
sub
sbb
pop
aaa
inc
in
jnp
loope
push
mov
jb
sbb
loop
and
cmc
scas
inc
push
in
mov
or
out
scas
sbb
icebp
mov
je
dec
out
lods
mov
jbe
pop
pushf
or
pop
jge
mov
pop
jne
test
sti
ficoms
inc
cmp
dec
lds
xchg
dec
pop
mov
sub
dec
lods
dec
inc
imul
pop
cmp
movsb
adc
sbb
into
popa
sbbl
mov
call
icebp
inc
mov
jae
lcall
cltd
adc
push
add
movsb
mov
es
shl
dec
sub
in
jg
js
cltd
xchg
or
mov
jae
es
add
les
mov
inc
xlat
ja
or
push
mov
dec
or
loopne
sbb
mov
arpl
loop
mov
ljmp
push
js
das
cmp
je
mov
mov
pop
jg
mov
sarb
xchg
adc
cmp
xchg
ret
push
fmul
shr
js
lret
iret
mov
xorl
call
push
ja
stc
orb
mov
je
pop
inc
mov
lods
sbb
imul
sub
pop
xor
dec
or
movsl
testl
lret
in
fdivr
pop
popf
cmp
mov
push
jbe
xlat
dec
loop
jbe
fsubrp
xor
cmp
popf
ret
imulb
push
jbe
pusha
xchg
rcl
jp
popa
add
push
cld
ret
arpl
aam
int3
adc
es
and
dec
xor
mov
push
test
insl
mov
pop
ja
pop
scas
ljmp
mov
jmp
add
daa
jnp,pn
fdivrs
int
pop
cmp
lods
stos
xchg
loope
push
xorb
addr16
or
push
sub
cld
fbld
je,pt
push
aad
lods
repnz
aaa
aam
jne
jns
push
aas
mov
mov
jb
adc
lods
mov
mov
cmp
cmp
iret
loop
mov
mov
jp
cmpl
addb
aam
lds
xchg
xor
clc
sti
out
lahf
add
sub
mov
push
jmp
xchg
mov
popa
mov
jb
lea
mov
ret
pop
hlt
in
lods
mov
jmp
rcrl
xor
cmc
aam
movsb
xchg
adc
out
gs
add
and
mov
in
cmc
addb
inc
sub
lret
and
fcompl
adc
inc
xchg
es
mov
adc
dec
popa
adc
movsl
add
cmp
mov
rol
scas
lcall
mov
mov
push
sub
xchg
cmp
shll
mov
add
xlat
push
sarl
sbb
into
out
int3
mov
cmpb
test
sub
add
jns
sub
pop
pop
pop
jge
add
mov
in
xchg
mov
sbb
sbb
aas
xchg
mov
mov
mov
lods
inc
pop
stos
int3
fwait
outsb
pop
jmp
sub
adc
or
mov
jge
pop
adc
es
popa
je
xchg
jns
ret
jp
cwtl
push
pop
loop
pop
mov
cmp
sub
rorb
not
in
dec
adc
mov
sbb
dec
rolb
in
cld
out
fucomip
rclb
test
mov
ds
clc
mov
mov
ror
shufps
xchg
jg
jo
and
mov
push
and
mov
lret
sti
xor
shlb
cmp
pop
fisttps
mov
fmuls
sub
push
pop
shl
inc
loop
call
pop
add
sbb
test
sub
fcompl
insl
movsl
mov
add
dec
out
jge
fcoml
mov
in
dec
sub
and
shrb
popa
mov
testl
test
push
jecxz
les
inc
add
cli
jne
lret
popa
sub
and
mov
inc
in
ret
test
jnp
sbb
fwait
mov
add
inc
push
addr16
imulb
pop
sbb
rcrb
xchg
fscale
mov
fistps
stc
or
inc
pusha
ds
icebp
rclb
cmpsb
mov
jo
or
push
push
dec
jns
push
adc
xchg
push
hlt
dec
lods
enter
jo
xchg
loop
out
out
push
cmp
pop
xorl
or
cwtl
or
jbe
in
inc
scas
jno
pop
pop
ljmp
sub
push
push
sub
mov
mov
mov
jae
mov
cmp
sub
jo
fwait
inc
sub
mov
and
sub
leave
mov
sub
popa
cs
pop
insl
loope
fldt
out
mov
in
adc
shll
pop
lcall
jns
jnp
insb
mov
pusha
or
in
loopne
and
aaa
pop
sbb
sti
out
loop
xchg
xchg
iret
mov
inc
lcall
push
push
cmc
lods
mov
daa
ror
call
sbb
jl
ret
rcrl
xlat
add
sub
adc
jae
mov
or
mov
cltd
stos
mov
call
cmc
jne
inc
lods
cs
mov
dec
es
xor
cwtl
xchg
dec
aam
ljmp
out
loopne
out
mov
xchg
rcr
and
ret
cmc
jl
std
xor
aaa
not
mov
mov
roll
cmp
scas
scas
dec
push
jecxz
mov
push
xchg
pop
lods
mov
mov
pop
xchg
sbb
inc
mov
sub
push
sub
cmpsb
mov
mov
xor
inc
jbe
fdivrs
mov
jae
int
outsl
and
ret
enter
imul
pushf
lods
pusha
sbb
sbb
or
xor
lret
lcall
lock
lds
push
nop
pop
cs
addl
ljmp
sbb
push
out
leave
jge
fistps
mov
jp
inc
incb
scas
dec
out
and
xchg
aam
mov
out
adc
sub
dec
pop
or
repz
dec
pop
xchg
inc
jae
incl
xchg
adcb
add
mov
es
xchg
mov
ror
mov
fadds
jbe
lock
shl
adc
adc
stc
add
sahf
dec
scas
sbb
or
jl
and
aam
add
mov
mov
imul
and
test
or
call
xor
es
adcl
data16
rorl
es
cmpl
cs
out
mov
stc
lods
jbe
push
subl
pop
add
repnz
jle
rol
cmp
movl
push
push
mov
je
xchg
out
or
inc
mov
imull
add
cmp
push
adc
leave
inc
or
in
inc
inc
call
cwtl
mov
add
in
js
xchg
test
xchg
adc
sbb
dec
rorb
ja
lcall
pop
shll
mov
mov
mov
cld
xchg
xchg
push
sub
xor
fistpl
xchg
cli
xchg
cmp
int
dec
stc
insb
inc
loope
xor
loopne
mov
adc
add
pushaw
add
test
int
xor
hlt
stc
cmp
cmp
fdivrl
and
fsubs
mov
or
dec
int
adc
add
mull
test
jnp
pop
lods
gs
dec
xchg
popa
das
cmp
inc
sbb
xchg
jmp
clc
icebp
and
or
mov
xor
cltd
pop
rcll
aas
sar
fs
jg
das
call
push
push
pop
test
scas
mov
scas
pop
fcmovne
push
pop
test
call
sarb
xchg
pop
fs
stos
mov
mov
std
jmp
iret
push
mov
jle
adc
dec
in
xchg
cld
push
or
xchg
fldenv
shl
xchg
sub
mov
or
and
adc
loop
pusha
loopne
xor
add
xor
int
test
jb
clc
sub
test
fiadds
sbb
lea
push
jno
push
inc
gs
mov
scas
cwtl
sbb
cs
repz
fsubrs
mov
push
add
outsb
pop
mov
mov
into
pop
rcrb
sbb
xlat
push
pop
fdivl
mov
out
insb
xchg
ljmp
sarl
or
movsl
dec
fstps
pop
push
pusha
push
jbe
mov
dec
cli
mov
aaa
and
aas
sub
es
imul
sub
sub
push
cmp
jo
mov
cli
and
push
sub
xor
enter
jno
cmp
repnz
hlt
and
rcl
dec
mov
cmpsl
cmp
data16
xchg
scas
fnstsw
out
push
xchg
add
imul
fs
cld
dec
mov
sub
push
xchg
jecxz
sub
pop
mov
xorl
call
shrl
and
push
xor
sub
xchg
movsb
sub
add
test
push
adc
add
jb
imul
push
push
test
fs
ja
inc
in
out
mov
mov
std
test
das
scas
adc
out
scas
aam
mov
icebp
test
mov
dec
mov
jae
roll
aas
incb
lods
add
lds
mov
inc
or
lret
dec
ficompl
xlat
jne
js
mov
in
pop
jns
test
stos
mov
loope
or
mov
cli
iret
or
imul
movsl
stc
push
adc
sar
stc
ret
rorl
ret
mov
dec
leave
dec
test
xchg
sbb
out
or
jno
int
inc
push
jecxz
or
lahf
cmp
cmpsb
std
imul
cmp
fwait
pop
jb
add
lds
aad
dec
popa
jge
pop
bound
mov
pop
insl
dec
mov
and
mov
jbe
mov
call
adc
pop
stos
popa
lock
ret
xor
jle
fildl
in
dec
inc
into
addr16
jle
cmp
push
test
in
stc
dec
gs
mov
xchg
push
fdivp
pop
lods
push
add
jecxz
cmp
stos
into
mov
fldl
sahf
jbe
add
xchg
add
inc
mov
aas
in
xchg
inc
xlat
jge
sbb
sub
ret
test
inc
loope
cmp
xchg
jle
movsb
mov
or
popa
bnd
sub
or
jbe
insb
iret
pmaxsw
leave
xlat
lcall
aad
xchg
out
sbb
jmp
mov
ljmp
sub
xchg
adc
test
add
out
pop
mov
and
ljmp
cmpsb
dec
cwtl
es
xchg
sbb
mov
dec
fwait
xor
cmp
lea
fldl2e
push
jp
jne
fldl
mov
pop
jmp
adc
push
jo
mov
xchg
cltd
jbe
push
adc
das
es
mov
clc
fcmovnbe
mov
fs
push
xchg
mov
fildll
push
sub
lods
cld
das
xor
push
mov
sub
adc
std
sbb
lds
pusha
inc
lcall
or
pop
fistps
jg
shlb
mov
cmp
outsl
or
dec
jg
jecxz
or
add
xchg
mov
inc
jo
mov
sbb
xorl
aam
inc
test
push
dec
das
mov
daa
push
cmp
cwtl
xchg
push
sbb
int
cmc
cld
lahf
mov
std
push
sub
push
pushf
dec
xchg
mov
push
jge
mov
hlt
jno
nop
mov
xor
mov
test
mov
fdivrl
mov
mov
and
js
inc
dec
sti
mov
push
mov
ret
js
outsb
or
movsl
sbb
testl
cmpb
sub
dec
mov
sbb
push
pop
pop
mov
mov
push
loopew
loope
dec
in
add
daa
jno
into
lea
adc
imul
insb
sbb
jge
mov
sub
cld
add
sbb
loope
push
xchg
loopne
push
int
outsl
bound
add
lcall
cld
sub
pop
out
into
fdivrs
cmpsb
mov
xor
out
jbe
rorl
out
mov
mov
jecxz
addr16
std
scas
adc
pusha
add
shrb
out
addr16
pop
mov
sub
gs
cmpsb
inc
and
and
mov
insb
sahf
jb
test
cltd
pusha
cmc
fstsw
nop
cmp
xor
icebp
jl
pop
vpmullw
pop
jo
mov
sub
jl
dec
fs
addr16
iret
stos
xchg
pop
mov
idivl
adc
inc
bound
repz
or
mov
dec
inc
pop
jbe
imull
add
mov
pop
fcoms
mov
cli
xchg
xor
xchg
mov
pop
bnd
repnz
lock
mov
jno
pop
sbb
cmc
jnp
int3
sarb
cmp
aas
repnz
dec
lods
sarb
push
in
popf
jl
jb
xor
in
rorl
or
jnp
adc
outsb
into
mov
cmp
in
xchg
ret
movsb
pop
push
ss
in
inc
mov
iret
mov
sub
les
dec
lock
cmp
lcall
mov
mov
xor
xchg
mov
push
or
icebp
pop
xor
mov
pop
lcall
call
shl
push
jle
arpl
adc
mov
stos
dec
jp
shlb
push
mov
nop
sbb
divl
lahf
into
push
xchg
pusha
xchg
push
jae
inc
mov
shrl
cmp
dec
and
cltd
in
pop
movsl
dec
loop
aas
mov
loop
push
pop
push
repz
pop
pushf
dec
xchg
fisttpll
in
dec
push
inc
xor
lock
in
adc
fimull
dec
addb
test
or
inc
jp
and
sub
rorb
lcall
fadd
ss
imul
cmp
pushf
cmp
cmp
xor
sub
das
lea
cmp
mov
in
xor
xor
push
mov
daa
mov
dec
int3
mov
arpl
sbb
mov
sub
nop
dec
outsb
sbb
test
inc
ret
in
loopne
movsb
push
inc
adc
mov
mov
rcrb
dec
or
loope
sbb
jbe
idivb
rcrb
push
push
cmpsb
cwtl
inc
ja
lods
out
jmp
stc
xor
ja
fwait
mov
and
inc
in
insl
inc
xor
imul
lock
jl
xchg
mov
push
mov
in
imul
daa
mov
lret
pop
sahf
cmpsl
shrl
das
outsb
lods
pop
cmpl
xchg
sub
lods
dec
inc
ror
cmp
mov
rcrl
xor
loopne
jl
test
loopne
out
gs
iret
out
es
jmp
inc
jl
test
js
js
das
mov
dec
mov
fcomi
and
aad
fmulp
jl
inc
cmc
sbb
inc
out
in
test
inc
clc
xlat
sub
jnp
dec
es
mov
add
sbb
scas
mov
popf
ret
bound
stos
int
xchg
mov
pusha
je
pop
push
and
sbb
arpl
ss
popf
lret
push
mov
mov
outsb
stos
push
pop
es
pop
stos
push
cmp
jae
sub
jle
cmp
jo
jbe
adcb
shrb
adc
pop
imul
push
push
mov
into
sub
fisubrl
pop
adc
dec
sub
xchg
scas
mov
inc
movsb
mov
sub
sub
mov
mov
test
hlt
mov
mov
inc
push
xchg
xrelease
mov
movsb
push
rolb
mov
jns
inc
adcl
movsb
xchg
xchg
std
orl
xlat
mov
test
mov
fisubs
push
jae
push
rolb
je
push
lock
std
xchg
mov
scas
out
lret
clc
movsb
inc
push
ss
loope
sub
pop
lods
in
mov
add
add
add
rolb
cwtl
pop
es
out
sbb
xchg
ljmp
sub
cltd
stos
into
jmp
rcl
mov
xchg
jns
mov
jge
adc
add
enter
and
test
push
jb
outsb
xchg
push
stos
adc
sbb
xchg
jbe
xchg
jp
out
cs
cs
xchg
or
out
lock
pop
xchg
push
icebp
sarb
das
imul
mov
push
ds
pop
in
sub
lret
jno
inc
xlat
aad
bound
add
mov
xchg
sti
sbb
mov
xchg
sbb
mov
and
adc
in
leave
test
ss
mov
rolb
mov
and
movsb
xchg
sub
or
push
fcomi
test
popf
in
xchg
pop
sbb
mov
push
fcomps
adc
add
nop
jecxz
gs
out
adc
add
xor
icebp
aaa
std
lahf
out
pop
out
adcb
mov
popf
cmp
jmp
inc
xchg
adcl
data16
loope
mov
mov
mov
cs
jmp
dec
adc
cmc
adc
inc
add
or
push
xchg
add
push
sahf
mov
push
pop
adc
pop
sub
push
pop
pop
xlat
insl
jecxz
outsb
jp
mov
aaa
aaa
xor
and
xlat
or
bound
clc
mov
lret
xor
pop
cld
cld
jecxz
pop
add
lock
insb
les
in
ss
enter
into
xor
sbb
lea
xchg
pop
push
ret
unpckhps
pop
jge
popf
or
xchg
or
jg
mov
fiadds
fisubrs
jb
repnz
pop
mov
andb
jge
ds
sub
dec
ljmp
es
les
pop
lods
mov
cmp
mov
in
js
out
ljmp
adc
test
iret
cmc
imul
aas
shll
push
push
cmp
or
loop
in
fildl
mov
cmp
cmp
sbb
dec
xchg
inc
test
out
fld
test
nop
pop
adcl
ret
dec
pop
cld
mov
rcrl
and
and
pop
xor
cld
mov
or
inc
add
push
dec
sbb
lcall
test
test
gs
xchg
hlt
cli
cmpsl
pop
pop
cld
nop
icebp
insb
xor
test
xchg
add
lock
lods
clc
addb
psadbw
jae
imul
jbe
shll
mov
sahf
gs
push
pop
pop
mov
or
inc
pushf
fnstenv
dec
and
jg
pop
dec
incb
dec
loop
popa
fld
ret
adc
test
fsubl
iret
shll
loope
dec
out
jne
sub
lock
not
cwtl
enter
adc
dec
jnp
loopne
xor
adc
ret
mov
xchg
rcl
cmpsb
aas
leave
jns
jecxz
fildll
mov
push
mov
mov
cmpsl
mov
or
aam
push
mov
sahf
jnp
icebp
in
pop
call
clc
sbb
push
lods
test
adc
jl
mov
dec
not
inc
adc
scas
pop
jbe
sub
stos
jge
mov
mov
imul
pop
jmp
int
pop
dec
repnz
jno
pop
push
sub
sbb
sbb
xchg
imul
cli
adc
and
data16
stos
jp
lret
push
mov
cmp
sahf
std
dec
xor
mov
ficompl
movsb
out
inc
xor
sub
inc
je
pop
cmp
cmc
mov
inc
mov
xor
aaa
inc
mov
test
sub
mov
hlt
push
pop
push
xlat
jnp
int
or
pop
test
cmpsl
xor
movsb
xor
mov
clc
rorl
mov
movsb
adc
xchg
or
inc
add
fs
dec
cld
sahf
lret
cmpsl
aaa
xchg
aaa
pusha
fsts
lock
test
pop
pop
pop
leave
movsb
mov
push
inc
sub
jge
negb
mov
bound
push
aad
stos
lahf
dec
inc
sbb
movsl
les
pop
pusha
and
ja
sub
dec
or
xchg
cwtl
push
fsubrs
sbb
pop
sahf
cli
jne
cmpsb
bound
fdivr
cli
push
push
cmc
xchg
mov
mov
push
loop
adc
mov
rol
sti
std
pop
push
test
mov
sbb
mov
in
mov
out
xchg
add
push
aad
push
fwait
out
push
dec
sub
mov
push
push
aas
push
push
adc
loope
sar
mov
cmp
push
xchg
rorl
test
xchg
cmp
push
stos
dec
jle
scas
xchg
addr16
pushw
bound
jns
fs
push
hlt
dec
mov
pushf
cli
clc
mov
xor
and
xchg
cmc
rcr
ljmp
loope
xor
loope
push
mov
sub
sarl
pop
lea
in
into
leave
loopne
push
xor
ret
mov
gs
adc
jle
loop
mov
fists
rcr
sub
popa
subl
loopne
sti
or
sub
aaa
pop
mov
in
idivl
cmp
mov
idiv
test
sub
test
dec
fs
jae
jnp
sub
mov
ret
xor
lret
arpl
xchg
scas
adc
mov
and
jge,pt
or
sahf
or
jl
add
bound
ja
add
lods
push
add
mov
and
xor
add
mov
orb
jge
add
push
mov
pop
jg
and
sbb
test
sub
das
imul
aam
mov
jecxz
cs
add
cli
cld
lret
aaa
inc
sub
jecxz
push
jae
and
aas
das
addr16
bnd
sbb
pop
frstor
cwtl
test
pop
add
jl
shll
mov
mov
dec
cld
jecxz
pop
mov
je
or
imul
cmp
fwait
mov
aad
dec
or
fimuls
fs
shl
test
je
das
dec
push
mov
jne
push
pop
in
jle
or
aas
dec
iret
or
adc
xchg
inc
and
lret
stos
fs
call
iret
jle
push
and
push
push
push
cmp
rcll
and
mov
mov
daa
pushf
outsb
cmp
movsl
adc
mov
in
xor
pop
repz
lahf
mov
in
mov
jmp
push
mov
and
jns
sub
loope
rcll
inc
dec
iret
int3
sti
jl
shlb
jle
jne
clc
ljmp
sub
cmp
xor
popf
and
sub
jb
sub
loope
cs
mov
sahf
imul
sahf
xchg
pop
mov
aam
jle
daa
cltd
loop
addr16
cmp
dec
call
jg
loop
xchg
adc
add
iret
frstpm(287
test
and
and
nop
dec
es
cltd
hlt
or
adc
loopne
loopne
jne
int
loope
push
pop
and
int3
or
jbe
decb
xchg
mov
and
mov
arpl
aad
lcall
jns
mov
scas
dec
stos
jg
mov
pop
test
mov
aaa
movsb
and
cwtl
bswap
in
hlt
mov
insb
and
xor
aam
data16
in
mov
inc
fldenv
in
fwait
jmp
in
nop
pop
iret
add
xor
jge
push
or
fcoms
mov
xchg
clc
add
fisttps
loop
jge
fnstsw
nop
xor
imull
pushf
dec
lds
mov
pop
negl
bound
cld
xor
clc
inc
dec
jno
adc
outsl
mov
mov
enter
jo
das
pop
xor
out
inc
in
mov
test
add
jb
adc
aaa
or
xchg
lods
xor
mov
icebp
mov
fldenv
sahf
arpl
fimull
les
mov
in
fdivrl
stos
cld
jg
iret
mov
mov
mov
inc
test
jne
cmpsl
imul
jo
mov
jg
leave
sub
fisttpl
adcl
roll
inc
mov
add
lret
jne
xchg
pushf
push
cmp
imul
iret
shll
lods
jae
fwait
pop
adc
insb
xor
jns
aas
enter
movsl
xchg
cmc
xchg
add
dec
std
shll
cmp
out
mov
movsl
mov
xor
push
jmp
icebp
insl
cmc
scas
pop
dec
test
mov
mov
lods
pop
fisubrl
call
push
loope
aam
arpl
outsl
ss
sbb
sub
fiaddl
mov
inc
sbb
dec
sub
xchg
andb
lods
lods
push
je
enter
fs
rorb
pop
lock
and
jnp
jae
imul
adc
adc
int3
jnp
popf
cmp
pop
aas
push
pop
scas
out
int
scas
pop
loopne
aas
lret
jge
dec
push
push
dec
test
dec
jb
cmp
and
or
ja
xlat
mov
shll
adc
ret
or
nop
repnz
xor
shr
out
cli
pop
jnp
sub
xchg
pusha
mov
sub
daa
sub
add
adc
sbb
ficoml
mov
nop
out
and
jge
insl
cmp
sbb
cmpsb
int3
xor
jmp
mov
xor
jbe
test
cmp
jge
xchg
mov
ret
mov
jmp
mov
rcrb
push
mov
das
jg
scas
jne
xor
push
insb
cmpsl
andl
dec
stc
test
fucomi
jne
jmp
div
int
pop
or
pop
adc
fucomi
test
mov
dec
sub
fwait
enter
sub
mov
hlt
stos
push
add
push
add
jmp
jbe
out
dec
stos
in
push
mov
lcall
sahf
test
xchg
xchg
into
adc
addr16
into
aaa
repz
or
mov
loope
dec
sub
push
jns
xchg
aam
sarb
lea
xor
rorb
pop
mov
jge
sbb
das
lret
push
imul
cmpsb
or
xor
out
fwait
pop
push
push
cld
outsl
inc
aas
sahf
arpl
les
pusha
outsl
add
lea
xor
pushf
cwtl
sbb
jae
or
lret
and
xor
enter
sbb
fucomi
fs
mov
push
cmp
inc
dec
icebp
out
lcall
mov
test
jg
or
push
gs
es
div
shlb
xchg
push
mov
sub
aam
repz
loop
nop
cld
gs
jmp
dec
push
aaa
popa
jne
sub
enter
test
mov
clc
sbb
test
shlb
test
test
cltd
jnp
neg
cmc
xchg
int3
shlb
mov
mov
sahf
sub
xchg
shrb
and
push
mov
imul
add
and
cwtl
es
jnp
test
sbb
lret
aam
hlt
rorl
inc
push
dec
add
cmpsl
or
mov
add
das
mov
mov
fisubs
jp
adc
in
orb
xchg
push
pop
dec
jb
sub
decl
and
push
sbb
or
xchg
repnz
loop
xchg
xchg
mov
adc
add
cli
cld
lods
sbbb
sbb
repnz
imul
and
and
sbb
push
ss
test
dec
cltd
jno
and
imull
call
lret
and
in
xor
das
xlat
adc
std
cwtl
in
xchg
mov
mov
ds
push
fisttpll
jmp
sti
adc
dec
push
jo
bound
cmc
fcmove
mov
int
adc
mov
push
mov
sbb
repz
sbb
in
das
and
aaa
inc
outsl
push
inc
sub
popa
push
mov
imul
inc
mov
jge
cli
pusha
not
test
lcall
push
inc
sub
sub
add
push
jmp
ja
in
rcl
jmp
mov
jg
inc
xor
jg
ret
push
and
mov
into
cmp
clc
shrl
xor
ret
cmc
fwait
aam
sub
cli
jmp
jo
mov
ss
or
mov
jo
xchg
xchg
gs
aam
push
mov
lahf
mov
mov
add
fistpll
inc
push
cli
jno
xor
push
add
cmp
mov
xchg
sbb
add
je
jle
jge
or
add
and
sub
push
jbe
mov
insl
mov
cmp
mov
cmovge
inc
dec
fwait
dec
xchg
out
inc
push
or
std
ficoml
lea
fdivrl
push
dec
sbb
fbld
sub
sbb
out
hlt
movsb
jg
out
cs
in
push
pop
es
fsts
jmp
lahf
pop
lret
sti
ret
call
insb
sub
jle
xchg
or
mov
cli
pop
inc
jb
pop
arpl
scas
mov
dec
jg
jo
sub
fdivl
xor
inc
movsb
popa
or
fadd
lea
push
lea
mov
adc
faddp
push
or
mov
and
shl
inc
cltd
rolb
adc
ret
addr16
jg
jbe
jbe
fbstp
mov
mov
nop
sbb
sti
push
aad
mov
enter
cld
add
stos
mov
pop
fldl
xor
fsubrs
loopne
add
cmp
stos
std
push
add
xchg
lahf
cmc
popf
daa
sbb
dec
aaa
int
pop
inc
inc
add
movsb
mov
les
sub
sbb
xor
fbstp
leave
ficoml
cs
ret
cmp
sar
push
jmp
jns
mov
mov
sbbl
and
fs
adc
loop
mov
hlt
add
popa
lds
gs
jb
jbe
ds
push
out
in
imul
addr16
xor
dec
mul
movsb
cmpsl
push
rolb
cmp
mov
inc
push
or
outsb
adc
pop
cltd
xchg
dec
sub
cmp
add
int
pop
aad
pop
rclb
mov
dec
and
nop
mov
add
lods
mov
scas
sub
cltd
and
jne
clc
insb
arpl
adc
xchg
xchg
cmc
jnp
xor
pop
mov
mov
mov
and
sti
add
add
inc
fs
jl
add
cltd
adc
les
inc
cmpsb
sub
push
sbb
inc
ja
icebp
test
push
mov
pop
push
xor
push
push
repnz
icebp
neg
xor
loope
fistl
inc
push
lret
push
fstpt
in
xchg
aaa
lods
jns
xchg
or
or
lahf
nop
std
vminps
push
data16
movsb
jg
jo
imul
pop
adc
repnz
xor
lds
push
sub
sahf
sub
cltd
pop
mov
into
int3
jle
ss
popa
cmp
mov
repnz
ds
fsubrs
lods
out
aam
inc
mov
ss
or
out
jge
outsl
popf
dec
sub
fimuls
dec
stc
ror
aad
or
fdivl
es
int3
jl
or
mov
jnp
xor
cmp
mov
lock
out
aas
fcmovu
das
lcall
repnz
or
stos
jge
movsb
xor
cmp
push
movsl
movsl
mov
test
mov
fisubl
scas
sti
loop
adc
cmp
in
scas
test
pop
push
popa
jnp
xchg
jmp
inc
cmp
repz
adc
jmp
sbb
out
dec
cltd
inc
pusha
rcrl
inc
sub
mov
pushl
int3
out
dec
add
stos
cmp
jnp
aas
lods
sbb
dec
into
or
dec
mov
push
push
jl
inc
xchg
cld
cmp
xor
xchg
in
push
fimuls
mov
pusha
dec
imul
or
cmp
outsl
rcrl
jb
adc
jecxz
pop
cmpsb
fisubrs
inc
fcoml
adc
outsl
pop
aam
xchg
lods
jg
filds
and
xchg
sub
xor
sbb
xlat
xchg
dec
cmpsw
sbb
push
cmpsl
das
add
das
lea
insb
pop
ret
push
daa
xor
enter
movsl
mov
lds
mov
adc
adc
push
repz
xor
shll
outsb
or
bound
cltd
add
out
and
mov
lret
and
mov
daa
push
and
jae
inc
pop
clc
jnp
ja
insb
push
mov
sbb
xchg
shll
adc
mov
jns
cmp
cmp
pop
sub
push
ss
test
or
mov
scas
in
ljmp
sub
out
xor
sub
sub
sub
lea
shll
aad
dec
scas
fmul
mov
out
jno
cmp
and
imul
sub
lds
mov
jno
fldenv
cmpsb
xchg
imul
jbe
and
adc
ss
jbe
leave
imul
pop
jnp
mov
scas
adc
aad
cltd
sbb
dec
add
xlat
and
xor
mov
sub
xor
push
mov
inc
cld
xchg
jbe
movsb
xor
xchg
pop
lods
lods
int3
repnz
js,pt
mov
gs
add
ja
out
std
jg
push
xchg
inc
ljmp
sahf
dec
cli
sbb
sbb
pop
les
dec
mov
mov
aad
xlat
adc
push
outsb
or
sti
int3
test
sbb
cmp
enter
std
movsb
pushf
out
jns
push
aam
inc
jnp
xchg
out
xchg
mov
cli
cwtl
inc
jo
sbb
scas
dec
and
and
cmc
aaa
sub
fdivp
sub
push
sub
mov
fs
dec
divl
ffreep
repnz
sub
test
stc
orb
mov
movsb
sarl
mov
pop
dec
lods
jae
cmc
push
jns
lahf
and
lock
ljmp
insb
pop
dec
addb
lock
in
push
mov
add
test
and
mov
addr16
push
sahf
outsb
mov
aad
mov
mov
inc
rclb
shlb
add
pop
or
jl
bswap
inc
aas
inc
add
mov
in
imul
addr16
mov
fcmove
mov
test
aas
push
inc
les
mov
jne
xor
adc
notb
mov
jne
fsubrs
daa
fldenv
adc
rcr
fdivrl
lret
or
pushf
cmpsb
xchg
push
adc
imul
sub
inc
aam
push
fstpt
cltd
mov
stos
cmc
mov
xchg
mov
adc
add
cmpsb
in
out
mov
push
inc
aad
jnp
call
loope
xor
jp
fmulp
pushf
push
loopne
xchg
hlt
inc
icebp
adc
sub
or
pop
cltd
push
notb
rol
enter
mov
pop
and
push
in
push
test
shll
imul
int
popa
pusha
cmp
dec
adc
lock
mov
out
push
pop
aas
mov
dec
lahf
mov
adc
scas
jno
iret
mov
inc
jae
xor
mov
jns
push
xchg
mov
sub
cmp
sbb
jnp
pop
cmc
inc
cmp
ja
dec
sbb
dec
dec
movsb
mov
clc
into
adc
fsubl
lahf
jge
push
sar
dec
jmp
xor
mov
sbb
pop
ss
ljmp
sbb
movsb
sbb
sub
jmp
adc
sub
je
movsb
pop
ret
jns
mov
xor
aam
nop
sti
cmp
decl
or
aas
stc
cmpsl
add
out
gs
cmpsl
mov
shrb
push
dec
shl
ror
sahf
dec
add
and
ja
icebp
inc
pop
lock
mov
and
xor
mov
xchg
cwtl
or
lods
xor
fimuls
xchg
xchg
mov
addr16
cmp
dec
fidivl
sbb
jl
std
pop
outsl
sub
pop
nop
push
xchg
loope
jno
mov
sbbl
xchg
jecxz
inc
jb
aam
adc
mov
sbb
pop
jecxz
adc
sub
push
ss
out
es
mov
pop
imul
sub
pop
jbe
aas
in
outsl
add
scas
add
pop
pop
adc
stos
add
rclb
gs
gs
popa
cltd
xchg
jb
inc
repz
cli
addr16
cmp
or
lock
data16
push
mov
mov
xor
fdivrs
ljmp
mov
adc
inc
inc
and
xchg
lods
insl
stc
push
and
int3
add
add
loopne
std
dec
enter
jns
mov
pop
scas
sbbl
mov
loope
adc
push
in
inc
inc
inc
jns
pop
cmp
and
push
add
xchg
hlt
pop
test
ret
add
lret
xchg
lods
in
push
cld
imul
dec
cmp
mov
add
jne
out
xorl
cmp
add
cli
dec
pushf
jnp
js
adc
cmp
test
outsl
pinsrw
pusha
aaa
cs
cli
scas
add
cmpsb
jmp
jle
jbe
imul
inc
jnp
lcall
add
rcrb
sub
mov
in
insb
sub
inc
inc
xor
sbb
mov
popa
cmp
mov
fs
and
inc
cmc
xchg
push
jnp
aad
fbstp
mov
mov
into
cmpsl
xor
mov
jno
arpl
jecxz
xchg
mov
ret
std
mov
into
ret
loope,pt
adc
mov
xchg
dec
mov
push
xchg
adc
jnp
loop
pusha
mov
out
jecxz
aam
adc
fmuls
xor
sub
cmp
out
test
arpl
loope
cs
inc
fsubrl
mov
mov
pop
push
ja
sub
call
pop
mov
ss
pop
scas
or
movsl
pop
dec
inc
test
cmp
add
iret
xchg
or
dec
sub
push
mov
in
mov
pop
adc
jecxz
inc
stos
rcrb
pop
mov
loop
dec
dec
mov
ja
bnd
mov
mov
fadd
nop
sub
imull
leave
sbb
ja
inc
mov
or
or
cmp
jnp
mov
inc
mov
out
cmc
cs
aas
mov
inc
insb
fstl
mov
or
sbb
imul
repz
shrl
dec
push
sbb
out
popa
scas
out
ret
add
hlt
daa
mov
lods
out
mov
mov
or
mov
jp
aam
popa
inc
stos
adc
xchg
out
xchg
inc
add
shrl
aam
xchg
lods
mov
shlb
xchg
mov
pop
in
gs
or
sti
outsb
mov
add
jge
sub
push
enter
mov
push
dec
push
enter
xor
fldenv
xchg
aad
inc
aas
test
sbb
mov
std
pop
mov
out
fcoms
mov
xor
cli
test
and
jne
mov
rol
stc
mov
cmp
je
mov
sbb
adc
adc
adc
mov
pop
fnsave
adc
jmp
fildl
mov
in
stos
lods
pop
subl
inc
int
jbe
pop
rorb
jmp
push
push
or
mov
decl
push
movsb
popf
in
push
mov
ds
into
or
inc
js
rcrb
sti
push
mov
loope
imul
mov
fwait
js
rcrl
ss
and
dec
arpl
bound
sub
f2xm1
rclb
mov
mov
pop
inc
xchg
lea
ja
loope
xchg
test
shr
sbb
faddl
popa
add
sub
inc
adc
sbb
mov
jnp
adc
push
pop
or
call
or
add
rorl
imul
cmp
aam
inc
mov
shll
scas
adc
mov
sbb
xchg
jo
in
cmp
leave
adc
cltd
jl
dec
fistpll
mov
xchg
xor
lret
xor
fxch
stos
lods
inc
loop
scas
mov
and
xor
dec
jg
fisubl
mov
stc
jle
jmp
adc
mov
jnp
loop
xchg
sti
sahf
pop
pop
fdivl
je
divl
xchg
sub
out
jns
jp
fstps
pushf
dec
add
jl
rcr
push
add
xchg
les
outsl
mov
jns
mov
jp
mov
mov
out
movsl
loop
into
add
lcall
sbb
ljmp
outsl
test
leave
and
in
mov
jg
pushf
daa
pop
jmp
or
xchg
in
xchg
repnz
xor
dec
sub
cmc
xor
pop
push
mov
loopne
adc
mov
and
or
iret
rsm
in
jecxz
test
mov
loopne
stc
push
mov
das
es
adc
sub
inc
xchg
or
jnp
int3
jae
pushf
gs
cmpsl
ljmp
stc
mov
xchg
mov
sub
add
jge
xchg
mov
mov
pusha
inc
mov
xchg
jnp
jns
stc
bound
sub
lahf
mov
scas
loop
mov
fildll
cmp
jg
out
rcr
mov
pop
and
jecxz
test
les
out
sub
dec
sbbb
int
aas
sub
lret
cld
sub
sub
pop
gs
and
das
pop
shrb
mov
xchg
lock
cmc
mov
aad
mov
stos
and
aam
mov
push
cmp
or
fcmovu
imul
mov
cmpsl
icebp
in
es
inc
mov
in
xchg
push
clc
aam
ds
xchg
dec
pop
push
or
mov
loopne
or
mov
mov
jge
dec
sbb
in
cli
ljmp
movsl
mov
mov
stos
imul
mov
jno
mov
idivb
es
loope
inc
fists
ret
inc
lcall
mov
adc
jecxz
loope
rcll
fidivl
push
icebp
nop
mov
lcall
mov
push
sahf
ja
imul
fs
leave
mov
scas
cmpb
dec
icebp
imul
das
cmp
es
fcmovbe
enter
and
lcall
test
dec
popa
add
das
or
leave
xor
push
inc
jnp
inc
mov
xorb
mov
jbe
imul
jle
cmc
sbb
sub
and
imulb
dec
inc
and
jno
inc
jno
sarl
mov
mov
sarl
cmp
sub
scas
sar
scas
loope
mov
scas
cmp
pushf
loopne
mov
mov
push
sub
push
xorb
jbe
arpl
cmp
sub
aaa
jae
negl
dec
movsl
dec
cmp
xchg
out
fldcw
xlat
mov
cltd
fcomps
scas
enter
and
repz
jo
int
loopne
adc
loopne
fnstcw
jns
shll
xchg
sub
xchg
push
pop
ljmp
test
or
mov
sbbl
mov
xor
outsb
and
jge
in
lahf
sub
sahf
pop
cmp
mov
xorb
push
daa
sbb
imul
in
mov
pop
ret
mov
lock
das
push
mov
xchg
ret
xor
js
arpl
dec
dec
ss
inc
aad
inc
aas
lcall
mov
cmc
push
pop
popa
dec
aaa
jg
cmpsl
xorb
loopne
inc
lahf
out
fadds
or
out
sbb
sbb
dec
mov
jle
sarl
clc
in
dec
outsl
xor
cwtl
int
xlat
jbe
loopne
fildl
xchg
jns
in
aas
sbb
shl
inc
pop
and
mov
ljmp
dec
lods
icebp
sarl
sbb
dec
jbe
push
mov
aam
fdivl
das
mov
loop
xchg
test
sub
repz
filds
addb
dec
shrl
add
sbb
push
jg
push
push
cld
rolb
int
and
imul
in
push
jb
sub
mov
fadds
cld
mov
dec
andl
dec
addr16
jmp
dec
into
jns
pop
mov
xor
lcall
mov
gs
xor
imul
mov
jae
daa
push
sbb
xchg
push
lret
cld
decb
popa
popa
dec
dec
jge
int
lcall
ds
das
mov
mov
mov
cltd
sbb
and
xchg
push
pop
mov
jl
xchg
cwtl
scas
pushf
int3
popf
pop
or
pop
pop
sub
ret
sbb
loope
adc
jb
jne
xchg
fnstcw
sub
dec
icebp
inc
push
adc
xchg
xor
sbb
fstpl
call
xchg
loope
scas
iret
sarb
lock
movsl
shll
leave
sub
pop
jle
pop
mov
add
sub
jg
lcall
daa
les
outsl
inc
movsl
dec
scas
out
push
lods
push
mov
ret
mov
into
xor
es
aad
add
xor
sbbl
dec
sub
pop
adc
pop
push
sbb
lret
jle
cmpsl
flds
inc
dec
nop
jmp
fldcw
lds
add
mov
dec
sbbl
jp
and
mov
pop
dec
sbbl
mov
mov
psadbw
push
pop
mov
jo
sub
addr16
xor
xchg
add
push
daa
pop
fcoml
cld
testb
fsubl
in
jge
sub
pop
int3
inc
jge
and
mov
loop
mov
cwtl
jne
add
and
pop
jne
aad
lret
stos
inc
mov
scas
sub
dec
inc
cmp
sub
push
je
pop
repz
fmul
mov
xchg
int
imul
or
js
ret
loop
inc
jb
mov
pop
lods
or
or
sahf
aam
mov
loop
jo
stos
mov
out
xchg
movl
add
lcall
shl
jnp
leave
sbb
stos
mov
push
adcl
movsl
xlat
sub
sahf
xchg
clc
stos
ss
adc
mov
rorb
int3
outsb
clc
fidivs
or
push
loope
xor
lret
lcall
rcrl
cmpsb
or
cmp
pusha
nop
mov
enter
cmp
enter
mov
ficompl
addr16
mov
pop
vpand
jae
jo
loope
xor
sbb
jg
cmp
cmp
pushf
je
mov
je
lahf
xchg
popf
sti
and
push
arpl
mov
and
mov
and
test
mov
adc
mov
mov
icebp
outsl
mov
lret
xor
insb
data16
loop
push
xchg
or
push
test
mov
push
loopne
inc
mov
iret
out
xor
and
jmp
adc
and
mov
mov
jmp
aaa
cmp
cmp
lret
fidivs
jae
jne
jp
cmc
mov
xchg
push
movl
jb
lcall
xchg
pop
ljmp
cmp
cmpsl
mov
das
sti
insl
popf
push
jns
lahf
cmp
aaa
mov
dec
and
mov
lods
mov
decb
jecxz
cs
xor
es
fwait
stc
mov
ret
adc
jbe
and
dec
add
pusha
rorb
int
adc
int3
push
mul
mov
cmc
outsl
pop
aad
jo
fsubs
jle
test
sbb
pop
clc
nop
movsl
stc
stc
repnz
sbb
sbbl
push
inc
xchg
in
push
jne
xorl
gs
jb
xchg
xor
pop
cmp
idiv
sub
pop
pop
and
pusha
xor
dec
lds
cwtl
sub
mov
or
inc
js
mov
xchg
sbb
and
iret
jl
cs
data16
pop
fldt
mov
push
addl
in
or
pop
fmuls
push
mov
movsl
mov
sub
add
jmp
add
sub
cmpsb
cmp
lds
fs
mulb
rcrl
mov
cmc
shlb
pop
jno
aaa
lcall
jle
xor
or
leave
mov
xchg
push
fwait
leave
sub
test
addr16
mov
xor
fs
loopne
fstpt
jge
shr
push
lods
repz
pop
sub
lret
popa
push
adc
arpl
shll
mov
inc
inc
gs
test
cltd
xchg
pusha
and
repz
sbb
sub
push
out
aad
xchg
frstor
sbb
mov
inc
pop
xlat
or
xchg
or
jae
repz
in
lea
out
ret
mov
gs
gs
fistps
sahf
mov
cld
jns
or
inc
repz
loope
cmpsl
sbb
scas
push
adc
mov
mov
movsl
sbb
in
and
or
popa
pop
pop
sbb
push
cmpsb
lahf
and
outsl
jmp
jo
or
jb
js
mov
out
movsb
insb
rol
hlt
inc
fldcw
dec
jae
test
pop
aas
stos
roll
adc
aad
pop
sbb
mov
mov
mov
sbb
sub
js
mov
lret
pop
pop
sub
cmp
jle
sbb
les
push
xchg
sahf
jge
jae
out
and
mov
or
scas
sbb
lea
mov
icebp
lcall
fdivl
cmc
cmc
es
into
clc
mov
lahf
xchg
sti
arpl
adc
scas
imul
sub
nop
nop
pop
push
sbb
push
jle
jg
xor
lret
cltd
mov
pop
mov
jno
sti
mov
lods
push
les
inc
inc
xor
mov
dec
bound
and
mulb
dec
xor
dec
cltd
sub
mov
push
aam
push
sbb
cmp
ret
push
sar
jbe
cltd
and
mov
or
fdivl
cld
cmp
jae
pop
loop
ja
icebp
cs
movsl
pusha
sbb
mov
es
test
enter
sub
inc
out
mov
dec
leave
mov
add
and
movsb
or
fldenv
aaa
ss
pushf
icebp
or
ret
pusha
cmpsl
mov
jle
inc
cmpsl
pop
cmp
sub
cmc
jp
sbb
out
loope
test
add
push
mov
jle
and
add
stos
mov
dec
scas
movaps
dec
sbb
mov
xor
jp
xchg
push
push
push
nop
mov
xchg
push
add
aam
fistpll
mov
sub
iret
adc
movsb
je
fstp
pop
jb
xor
add
jl
cld
dec
cmp
cmpsb
je
in
xchg
mov
dec
popf
adc
inc
xchg
nop
out
into
pop
outsl
fnsave
int
mov
nop
cmpsl
push
test
inc
call
sbb
add
gs
mov
insl
push
sbb
repz
or
xchg
adc
cli
push
xchg
push
inc
cwtl
mov
inc
mov
into
ror
or
push
add
push
mov
ret
and
lcall
and
punpcklbw
outsl
jns
pop
xchg
and
cmp
hlt
pushf
mov
cmp
pop
int3
neg
mov
mov
loope
xchg
jge
pusha
bound
dec
jne
xchg
and
or
mov
push
adcb
es
or
mov
icebp
add
mov
gs
inc
gs
push
push
mov
xor
lret
xor
aaa
mov
inc
fcoml
icebp
jle
mov
jo
push
adc
andl
adc
and
and
jnp
push
jne
dec
or
lret
lret
xchg
out
jns
rcrl
xor
int3
cmp
xchg
mov
mov
in
cmp
aad
and
adc
ja
cmp
jecxz
xchg
jne
push
jp
cmp
int3
or
mov
push
cs
mov
mov
cmpsl
xor
test
ficoms
out
fmuls
shrl
into
pop
movsl
cmpsl
out
fldenv
mov
fstpl
sbbl
adc
push
clc
cld
cmp
ret
jg
in
lods
fdivrl
mov
pop
adc
cli
mov
pop
rcll
pop
repz
loop
in
or
sbb
pop
push
cmove
aas
test
adc
ja
or
mov
mov
sar
fbld
cmp
push
and
cmp
pushf
mov
cmc
xchg
icebp
push
pop
lods
adc
mov
jge
sbb
lea
mov
enter
add
dec
insb
mov
pop
mov
dec
sub
or
inc
pop
int
add
jbe
pushf
mov
imul
adc
jns
ljmp
jns
sub
ja
jne
insl
mov
shll
add
mov
cs
cmc
es
cmpsb
xor
mov
push
adc
or
and
ficompl
push
pop
clc
pop
movsl
lods
adcl
notl
jmp
pusha
subb
cli
inc
bound
test
rorl
daa
jecxz
movsb
and
inc
fld
lcall
dec
inc
icebp
xchg
mov
dec
sub
and
xchg
daa
xchg
adcl
cmp
xchg
sbb
shrb
adc
aam
sbb
add
arpl
pop
mov
dec
aaa
arpl
lahf
negl
lods
push
dec
imul
adc
lea
enter
or
aam
xchg
dec
inc
loope
or
ds
push
jnp
mov
aam
xlat
push
xor
dec
add
jp
mov
call
in
into
adc
mov
call
xchg
pusha
mov
xor
fbld
sbb
xchg
jecxz
loope
call
sbb
and
jo
add
xchg
dec
xchg
in
jge
cld
sbb
adc
jne
jno
sbb
sti
pop
test
je
push
jge
jp
mov
cs
loopne
cmp
cmp
mov
xchg
outsl
mov
jae
ret
cli
stos
push
and
cmp
jg
inc
dec
pop
jo
inc
adc
xor
xor
out
cli
out
addb
sbb
or
arpl
lahf
push
dec
ljmp
jne
dec
sbb
mov
incb
xor
out
jge
cld
mov
mov
xor
xor
dec
pop
rcrl
sbb
fs
push
ljmp
in
lretw
xor
fsts
push
dec
sub
movsl
nop
cmp
sub
mov
fucomip
cmp
sbb
js
aam
xchg
inc
xchg
cmp
cmp
xor
jg
cmc
mov
mov
fistpl
dec
js
jns
iret
insl
jae
xor
mov
cmp
dec
std
mov
lods
jo
adc
fistpll
stos
and
mov
mov
cmp
cmpb
sbb
mov
andb
test
test
pop
loopne
xchg
mov
ja
add
xor
fwait
movsb
or
cmp
mov
mov
fidivs
std
adc
push
lret
dec
mov
aas
mov
push
insb
jno
jnp
insl
cmpsl
int
clc
adcb
pop
fistps
mov
loope
sub
lock
or
fists
fcmove
cltd
add
inc
addl
dec
imul
sbb
enter
sub
idivb
sbb
mov
mov
roll
outsl
add
scas
adcl
or
adc
insl
cmp
dec
movsl
iret
or
std
out
push
xchg
or
or
lds
loope
aad
pushf
lods
dec
pushf
lret
sbb
add
into
sbb
dec
sub
es
xor
mov
jge
cmp
pop
into
mul
cld
enter
cmc
popf
xor
push
dec
sub
inc
dec
adc
push
cmp
lock
das
mov
pop
xchg
loop
adc
pop
enter
lods
insl
mov
stos
add
add
sub
xchg
jo
out
shr
jb
roll
test
ds
add
cmpsb
add
xor
mov
jmp
adc
xchg
push
cld
lods
adc
push
sub
and
mov
mov
add
in
sub
dec
rcll
lret
mov
out
jle
and
mov
push
xchg
insl
loope
into
daa
or
pop
xor
daa
out
add
mov
lock
lahf
cmp
fstp
imulb
ficoml
inc
push
cmp
and
insb
dec
jo
or
sub
lock
sar
loop
cld
outsl
xchg
ja
jne
ja
adc
xchg
xchg
hlt
in
xor
leave
fxch
stos
orl
hlt
inc
xchg
add
stos
popa
push
mov
cmp
fcmove
sbb
push
adc
mov
loope
cmp
call
fistps
xchg
in
xor
mov
adc
push
jbe
adc
data16
mov
xchg
push
ss
movb
das
sub
ret
ret
addr16
stos
scas
xor
sahf
pop
mov
add
jnp
adc
xor
inc
sbb
insl
cmp
fsubrl
sub
lret
popf
or
in
jns
jg
es
clc
out
test
lret
pusha
push
fdiv
sub
mov
adc
sub
pop
fs
aam
aas
or
mov
call
cld
out
or
push
xor
aaa
lahf
xchg
loope
lahf
in
rorl
xor
pop
loope
fadd
or
stos
push
mov
pop
repz
in
mov
or
push
push
mov
daa
dec
pop
jle
imul
insb
ret
mov
mov
pusha
xchg
hlt
pop
push
aaa
int
sbb
rcrl
mov
pop
sub
aad
jb
test
mov
mov
sbb
lcall
lods
cmpsl
fistl
out
in
xor
in
pop
sbb
push
push
add
xor
jmp
xor
add
inc
adc
test
xlat
cmp
jno
outsl
cltd
add
inc
das
xor
pop
xchg
notl
and
shlb
ss
cmc
in
and
loope
cmpsl
shl
fdivl
rclb
aad
test
xor
stos
pop
fildl
aas
xchg
push
cmc
mov
add
push
aam
pop
jns
xchg
mov
fsubl
xor
inc
lds
mov
add
adc
dec
stc
lret
cld
dec
sub
cmpsb
inc
cmc
mov
mov
movsb
jle
jle
data16
inc
fmull
icebp
jo
in
jmp
push
into
iret
jmp
jg
xchg
insl
movsl
pushf
mov
sub
and
out
xchg
rorl
adc
out
sub
js
xor
ud2
fistpl
jbe
das
fildll
inc
jbe
aaa
aam
push
popf
imul
int
fiaddl
mov
flds
xchg
imul
cmp
es
stos
xchg
sbb
jns
stos
addr16
std
iret
sar
push
push
das
test
cmp
iret
enter
inc
stc
mov
mov
gs
scas
std
fldt
xor
jmp
xchg
push
int3
mov
pop
clc
push
jae
sti
in
not
and
aam
shr
inc
xor
cmpb
mov
into
pop
mov
and
dec
imul
js
xlat
pop
push
aas
daa
out
mov
push
push
sbb
pop
pop
mov
js
nop
fistps
es
xchg
orl
lods
push
or
pop
testb
ljmp
es
inc
xchg
daa
sbb
dec
pusha
add
lahf
int3
rolb
movsl
aam
lret
xchg
lods
int3
shlb
insl
cmp
xor
pop
push
movl
cmpsb
arpl
mov
cmp
adc
sahf
pop
lods
jge
lock
inc
addr16
shl
sub
pop
int
in
ret
fs
pop
push
push
subl
push
jns
bound
lahf
add
cmpsb
add
push
stc
and
push
mov
inc
mov
in
jmp
imul
int3
loop
push
add
dec
divb
pop
ds
mov
mov
mov
mov
add
nop
jo
sbb
mov
clc
mov
imul
push
rcrl
mull
or
fcompl
hlt
cmp
cmpsl
mov
mov
lcall
fcompl
mov
add
cwtl
push
cmp
orb
adc
xchg
nop
xchg
dec
push
inc
inc
fisubrl
test
mov
inc
mov
dec
dec
into
call
ret
sub
out
push
dec
fidivrs
clc
fwait
and
mov
add
add
test
cmpsl
sub
hlt
push
pusha
add
or
xor
mov
sub
popa
xor
mov
lret
in
mov
mov
in
pop
sub
lret
fs
gs
xchg
into
jl
jmp
xchg
addr16
iret
jge
mov
fstpt
mov
jle
pop
jns
in
ljmp
bound
ss
fcomps
pop
es
out
mov
mov
int3
dec
out
mov
shr
cmpsb
add
sub
adc
dec
std
aas
mov
jp
test
xor
cmpl
pop
add
lret
xor
pop
or
mov
inc
sub
out
cmp
push
mov
dec
scas
stc
mov
xor
and
ret
pop
fists
xchg
mov
pusha
xchg
mov
pop
insl
and
push
fs
outsb
enter
loop
mov
jo
addr16
es
clc
push
ja
adcb
lods
pop
into
and
in
xor
rcrl
inc
add
sub
out
mov
or
push
std
imull
xchg
test
push
mov
pop
pop
ljmp
rcr
mov
pop
cmp
popf
push
push
push
ds
inc
movsb
pop
repz
mov
xchg
icebp
push
xchg
xchg
cmp
cld
dec
and
lea
cwtl
adcl
adc
outsb
shl
insb
inc
rclb
mov
pop
scas
xor
pusha
adc
pop
push
dec
sbbb
mov
into
nop
push
out
imul
out
shll
jge
dec
pushf
pop
in
push
mov
bnd
sbb
mov
leave
jnp
cmp
ds
pop
inc
xor
ljmp
sbb
gs
in
shll
decb
cmp
test
sbb
jecxz
test
mov
xchg
sub
mov
jns
testl
fs
add
jne
mov
lods
mov
sbbb
into
sub
push
cmp
in
ror
adc
add
hlt
imul
or
jmp
xchg
or
push
cmp
xchg
dec
xor
fyl2xp1
jecxz
les
jge
cwtl
xchg
adc
lret
mov
add
js
rcl
jno
pop
mov
mulb
nop
loope
push
jns
imul
or
sbb
lret
jbe
icebp
cmp
bound
xor
cmpsl
cmpl
insb
inc
xor
jge
dec
mov
cmp
mov
mull
shr
pusha
mov
mov
shlb
xchg
cmpsb
nop
out
mov
fists
xchg
leave
adc
cwtl
imul
pop
and
mov
mov
pop
xor
dec
sbb
mov
sbb
xchg
aam
test
cmc
jno
mov
out
movsl
or
stos
or
orb
mov
mov
popa
test
sbb
inc
stos
int
pop
out
sub
push
jne
bound
pop
jns
gs
fwait
sbb
add
jno
iret
mov
loop
adc
cmpsb
fldt
fdivl
jl
mov
shlb
and
add
clc
or
enter
aam
mov
out
mov
or
fsubl
sub
lock
mov
test
adc
subb
aam
adc
or
push
push
ret
cwtl
aas
subb
stos
pop
cwtl
ror
into
lea
add
dec
lcall
jge
movsl
pop
es
jns
xor
xchg
adc
pushl
stc
hlt
movsb
push
mov
pop
pop
shll
out
sarb
stos
mov
or
mov
push
mov
push
xchg
push
call
cltd
pop
jns
enter
or
inc
mov
cmp
test
sbb
dec
sub
inc
imul
inc
stos
inc
pop
int
xchg
scas
ljmp
icebp
xor
xchg
andb
pop
data16
sbb
loopne
outsl
popa
mov
xchg
inc
sub
jle
add
andl
adc
popf
imul
sbb
push
int
mov
jno
mov
icebp
fstl
sbb
in
or
cmpsl
xor
inc
sub
jae
lcall
ja
das
dec
mov
cmpsl
repnz
sub
or
jl
es
subb
sarl
loope
scas
inc
add
loope
sub
or
push
xor
imul
aad
rcll
fisubrs
add
pop
nop
xor
insb
inc
stos
xchg
or
mov
push
fadds
lock
sub
jg
fistl
call
js
jp
push
aad
lods
inc
mov
mov
jle
lret
shll
sbb
cmpsb
sub
and
or
nop
jo
add
mov
scas
repnz
sbb
hlt
xchg
hlt
filds
stos
xchg
push
xchg
mov
jecxz
lea
sbb
shl
adc
adc
xchg
jb
cs
adc
xlat
adc
add
or
inc
outsl
and
loope
in
mov
fwait
push
lahf
ret
lret
mov
jmp
sbb
icebp
xchg
xchg
push
cltd
push
mov
nop
push
data16
pop
loop
xchg
outsb
cmp
pushf
movsb
frstor
and
scas
jg
push
pop
mov
imul
lea
mov
lods
int3
pop
jg
pop
push
push
mov
mov
dec
mov
mov
pop
in
xchg
jecxz
jnp
insb
insb
or
push
jbe
imul
dec
push
cmp
add
pusha
les
repz
pop
std
stos
mov
scas
sbb
mov
mov
push
movsl
or
sbb
repnz
add
ds
mov
push
cmp
imul
and
push
inc
or
push
pushf
push
test
cmc
ljmp
mov
jne
sbb
push
clc
gs
xchg
push
lret
cmp
sub
cmpsw
cmp
xor
scas
adc
mov
test
fs
jecxz
aad
aad
in
fwait
sub
jae
js
mov
sbb
push
xchg
popf
and
sbb
mov
hlt
mov
cmpsb
icebp
push
dec
idiv
push
xor
mov
mov
mov
fildll
cwtl
je
push
insl
fdivrs
and
xchg
lahf
push
ss
or
push
mov
je
xor
mov
aas
adc
jnp
xchg
int3
and
int
cltd
scas
sub
ret
push
aam
jge
mov
or
push
aam
jno
lods
mov
jp
dec
lods
es
lcall
fstpl
fwait
add
aad
ja
push
mov
fmul
std
or
lcall
std
xor
mov
ficoml
fcoms
jge
gs
fcoml
inc
and
push
addl
mov
sbb
xor
xor
mov
xchg
int3
cld
inc
sbb
aad
push
xchg
xchg
stos
out
das
pushl
mov
push
je
jge
aad
je
push
stc
fisubrl
das
inc
xchg
ss
mov
ret
xchg
cltd
outsl
mov
dec
jge
pop
xchg
or
adc
fsubs
mov
jne
pop
and
cmp
add
add
or
rcr
lahf
pop
xlat
adc
stos
mov
or
mov
repnz
lret
dec
pop
fucomi
movsb
xchg
xor
cld
stos
clc
cmpsb
xor
sbb
push
popa
cmp
out
push
mov
gs
loop
sbbl
out
push
int
fcmovb
adc
xchg
fstpt
aaa
cmp
das
mov
and
pop
pop
xor
sahf
stc
fmull
inc
aaa
mov
pop
adcl
mov
push
jl
cld
mov
mov
cmp
sbb
or
mov
dec
mov
loope
sub
jecxz
xchg
push
jae
jnp
fsubr
dec
cld
jb
in
or
jnp
inc
add
xor
scas
outsb
push
jl
sub
lahf
test
add
push
pop
clc
xchg
inc
ds
mov
mov
fsubrs
and
lret
ljmp
jp
mov
cli
stc
jmp
in
cmp
lock
mov
xchg
xor
pop
aad
nop
rol
push
cltd
hlt
iret
adc
test
mov
jo
jge
clc
push
mov
out
mov
lds
dec
sbb
loope
adc
shlb
mov
inc
sahf
std
push
or
mov
or
dec
aas
pop
sub
lock
shlb
pop
sub
and
bound
adc
push
sbb
lock
bound
aam
dec
sub
and
or
out
push
insl
popf
and
or
cltd
aas
or
mov
inc
aas
test
jb
sub
aaa
sub
out
jecxz
daa
add
push
mov
lret
mov
add
ud1
jg
mov
push
jno
stos
push
into
push
enter
movsl
hlt
icebp
push
jg
inc
xor
mov
push
dec
fwait
xor
cmovb
adc
fdiv
enter
or
pop
jb
cmp
dec
dec
adcl
test
jg
pop
sub
loop
inc
push
imul
xchg
clc
xchg
stos
pushf
xlat
lret
dec
lret
popa
pop
mov
lahf
or
fisubrs
loopne
popf
and
adcl
jo
testb
xor
fwait
jae
or
insb
test
mov
xchg
iret
xchg
shr
mov
add
inc
in
insl
fsts
jbe
lcall
mov
pop
pop
pushf
dec
int
xor
dec
iret
xchg
pop
int3
or
loope
mov
cmp
imul
or
mov
stos
int3
hlt
and
mov
test
pop
or
or
in
dec
cmc
lock
mov
sbb
rol
scas
mov
adc
or
das
les
lock
add
ss
addb
or
out
lds
mov
jbe
sbb
dec
jg
pop
gs
movsl
testb
mov
arpl
jecxz
pop
jmp
pop
repz
push
inc
js
nop
mov
xor
test
fnsave
xchg
jbe
ds
ljmp
les
imul
and
inc
push
popf
push
repnz
mov
fisttpl
sti
test
stos
mov
ficomps
or
sbb
loop
xchg
cli
push
mov
pop
popf
lret
mov
jl
push
push
in
cmp
imul
mov
dec
xchg
dec
lret
das
mov
add
or
int3
mov
pshufw
in
pop
xchg
pop
ret
in
adc
daa
stos
popa
cmp
pop
push
xchg
pop
jp
rcll
movsb
xchg
push
mov
sub
xlat
jne
aam
and
dec
shrl
ret
pop
sbb
test
stos
mov
clc
rorl
outsb
push
xchg
jb
js
pop
cs
cmp
je
lock
xor
out
mov
pop
fisubrs
out
mov
push
jge
lret
mov
into
jg
xchg
mov
imul
lods
or
sub
lret
lds
fnstenv
add
daa
mov
push
imul
dec
call
inc
mov
mov
lock
mov
daa
add
je
in
add
pop
insl
aad
aad
xlat
mov
mov
adc
gs
and
fwait
adc
mov
cmp
mov
push
in
cmpsl
stos
push
pop
in
je
fistps
add
push
repnz
mov
adc
cwtl
and
jmp
pushf
pushl
add
mov
jecxz
adc
lods
jnp
add
mov
cltd
cmp
ret
xor
pop
push
jb
sarl
arpl
sbb
ret
out
mov
sub
add
rcr
push
add
scas
in
and
dec
jno
repnz
aaa
xchg
pop
shlb
and
fnstsw
cmp
xor
xchg
ret
inc
loope
sbbl
cs
jb
dec
jae
pop
sbb
or
or
fldln2
aas
push
inc
mov
sbb
imul
pop
mov
add
dec
add
call
cmpl
pop
add
lahf
sbb
and
je
adc
bnd
add
sahf
in
add
push
ffree
jno
jge
sti
push
xchg
pop
enter
jnp
ret
sti
data16
stc
sbb
sbb
jmp
imul
jbe
or
sbb
sahf
jmp
add
pop
jne
add
cmp
outsl
jmp
jle
pushf
sub
inc
xchg
rclb
sub
add
push
and
movsl
and
andb
fs
fcomi
sub
insb
jecxz
cwtl
push
mov
fldcw
inc
outsl
rcll
lret
xchg
aaa
sbbb
mov
fsubl
test
dec
dec
jmp
cmpsl
xchg
adcl
loopne
jle
xor
mov
mov
inc
push
mov
pop
insl
ret
roll
xchg
iret
scas
out
ds
jb
push
fcomi
movsb
loop
daa
xchg
ficomps
ret
xlat
xor
cs
imul
stos
inc
loopne
orl
xchg
nop
sub
push
xor
pushf
push
imul
sub
add
out
inc
sub
jnp
lar
js
push
shll
xchg
pop
inc
push
or
jnp
pop
xor
xor
dec
out
push
lret
in
sub
or
lahf
fwait
sarl
adc
cmp
jae
adc
mov
mov
je
mov
int3
adc
repnz
add
sub
adc
not
fst
sarb
imul
cmp
aad
sub
bound
adc
inc
cltd
test
mov
push
ss
outsb
sub
test
xchg
cld
cli
test
jge
popl
mov
jmp
mov
cs
pop
pop
xorb
jecxz
push
ds
nop
mov
cmc
and
or
clc
aas
mull
dec
and
popa
into
xchg
push
inc
or
mov
in
aaa
adc
xor
jle
push
ficompl
xchg
aaa
or
sti
les
shlb
ficoms
sbb
lret
jne
dec
stos
mov
mov
pop
sbb
sbb
dec
fidivl
fnstenv
aaa
jno
dec
and
fwait
xchg
lcall
adc
or
repnz
stc
inc
mov
jp
jl
pop
imul
pop
scas
push
and
dec
data16
ljmp
in
sub
std
insl
mov
jg
test
popa
xor
mov
xlat
arpl
inc
movsb
adc
cltd
jle
cmp
dec
loope
sub
mov
adc
fidivrs
mov
aaa
xor
sahf
push
test
inc
mov
fisubl
xchg
out
je
aam
mov
mov
sbb
or
cmp
xchg
das
mov
pushf
sti
sub
into
repnz
shll
pop
decl
rcrb
decb
or
jo
iret
xchg
lods
jg
ss
cmp
pop
out
push
mov
je
and
sbb
pop
jg
and
clc
loopne
pop
fcoml
mov
jno
mov
rcrl
imul
mov
add
aad
inc
scas
in
stc
ljmp
sub
hlt
mov
aad
les
adc
in
sub
mov
call
cmpsb
mov
fcmovnbe
add
push
adc
ficompl
ja
cltd
inc
iret
inc
popl
pop
push
sbb
sub
movsb
mov
jecxz
mov
cs
jle
test
jae
adc
adc
mov
loopne
aam
out
cmp
xor
arpl
ja
mov
fs
out
mov
adc
and
fmull
inc
fs
jbe
jne
and
mov
jb
lods
inc
xchg
jbe
das
sarl
pop
cmp
lea
pop
cmp
sub
xlat
dec
and
xchg
loope
xchg
test
js
fadd
mov
mov
cmpsl
mov
xchg
outsb
dec
scas
cmpsb
or
aad
push
mov
cmp
xor
pop
inc
xor
hlt
mov
xor
out
xor
pop
arpl
adc
push
add
pop
loop
mov
push
jae
out
lahf
adc
add
jg
out
dec
dec
pop
pop
pop
jle
test
lods
sub
scas
add
jne
leave
ret
outsl
jbe
sub
mov
dec
sarb
cmp
mov
jb
cwtl
cmp
cli
jo
push
cli
dec
lcall
add
mov
mov
fldcw
call
fs
mov
les
into
sbb
pop
fwait
adc
jnp
outsb
sbb
xchg
lds
xchg
sbb
sahf
loopne
cmpb
sub
mov
push
inc
int
ret
scas
add
rcll
inc
sbb
cmpl
arpl
movsb
jge
sub
ret
push
add
int
and
sti
sub
sahf
xor
mov
out
push
sarl
stos
scas
rcl
mov
je
and
mov
xchg
mov
das
ja
jl
in
pop
mov
outsb
mov
pop
cmpsb
ja
mov
jnp
ja
pop
inc
pop
lret
fcomps
sti
push
imul
ficompl
dec
int3
mov
fcomps
xor
or
xchg
insb
in
stos
or
inc
and
repz
fwait
test
incl
adc
hlt
cmp
imul
loope
jo
and
jge
test
negb
addb
inc
andb
shll
cmp
jmp
mov
js
mov
fadd
push
cmpsb
jmp
js
adc
jmp
pushf
pop
mov
in
movsb
inc
loop
cmp
push
add
push
jno
adc
sub
and
sub
add
inc
mov
ret
mov
stc
mov
movsl
inc
ficoml
and
pop
pop
or
sbb
pcmpgtw
loope
push
and
int3
xchg
mov
pop
stos
push
int
cli
aaa
int3
test
jb
fnstsw
push
xor
insl
inc
paddb
loop
je
call
dec
lods
jg
enter
push
js
movsb
mov
pushl
pusha
xor
sub
mov
rcr
xchg
mov
mov
incl
xchg
jecxz
dec
fsubs
hlt
je
mov
adc
test
cmpsl
scas
mov
sub
sbb
or
push
aas
sbb
inc
in
rcl
cmp
int3
ss
adc
imulb
leave
and
popf
sub
inc
cmp
pushf
int3
imul
lret
and
scas
lcall
mov
lock
stc
cmc
ljmp
movsb
adc
out
lcall
aam
psubb
bound
int3
mov
ss
sahf
mov
scas
inc
dec
pop
fcomi
fstl
stos
or
add
or
sub
push
dec
movsb
out
adc
aam
adc
aam
add
dec
loop
scas
test
stos
enter
out
ret
shlb
mov
movsb
pop
dec
pop
xlat
cmp
mov
repz
insb
push
dec
xchg
fisubrl
out
aam
pop
es
adc
or
inc
aam
cmc
inc
jb
pushf
cld
stos
mov
gs
push
add
xor
outsb
pop
dec
dec
sub
test
popf
fwait
mov
loopne
adc
cmp
test
xchg
and
cmp
stos
in
xchg
xor
test
mov
mov
lahf
repz
loopne
mov
ds
push
xlat
add
in
fwait
in
pop
imul
mov
mov
enter
cmp
lods
mov
mov
mov
enter
mov
mov
loop
outsl
in
sbb
jbe
jns
std
bt
fidivl
xchg
stos
dec
divb
addl
sub
test
mov
adc
xor
xor
sahf
sbb
push
mov
push
push
mov
and
fcomps
mov
negl
pop
pop
sub
or
popa
mov
cmpsb
pop
jg
repz
dec
or
inc
imul
fwait
sub
in
jne
xchg
outsl
pop
es
add
or
jne
mov
mov
bound
insl
repnz
popf
inc
jbe
xor
lods
mov
adc
repnz
mov
dec
loop
and
incl
jne
aas
cmp
dec
push
sbb
xor
movsl
test
loope
xor
or
mov
dec
pop
pop
xlat
or
sub
imul
std
lds
jp
push
les
mov
push
repz
scas
das
int
xor
xchg
leave
das
ret
jmp
das
sbb
insb
add
jns
cmp
mov
lret
int3
pop
mov
dec
shl
mov
add
jno
adc
aas
imul
or
xlat
xor
popf
clc
dec
push
sbbb
add
popf
out
jbe
jae
cmp
jb
pop
sub
and
lret
rcrb
fmull
sbb
adc
cmp
mov
lds
in
add
and
xchg
mov
dec
lahf
js
inc
adc
das
dec
and
mov
out
adc
aaa
lahf
mov
aaa
jmp
add
xorb
xor
insb
mov
in
mov
add
and
dec
in
sbb
mov
outsl
daa
out
cli
sar
push
add
sbb
cmpb
dec
mov
push
or
das
add
xchg
pop
push
and
popa
popa
sti
xor
dec
pop
stc
push
sbb
jne
scas
out
fmull
ja
loope
mov
hlt
add
popa
mov
call
cwtl
mov
and
xor
sub
xor
aad
leave
cli
stos
aas
jmp
popl
adc
scas
popa
mov
xor
loope
inc
jle
scas
fdivr
out
in
js
xor
mov
and
loope
ja
xchg
xchg
mov
jge
dec
mov
add
push
or
or
cmp
std
enter
movsl
cmpsb
sarb
shrl
or
xorl
ret
pop
into
pop
cmp
mov
sub
xor
jp
out
sbb
les
loope
xchg
scas
sbb
cmp
fistl
mov
int
cmp
mov
mov
call
push
mov
mov
add
addb
push
inc
cmp
enter
iret
sbb
jg
push
iret
sbb
mov
sub
daa
mov
loopne
sub
mov
inc
out
movsl
push
mov
sbb
arpl
inc
push
push
mov
inc
mov
frstor
jecxz
sbb
adcl
dec
std
push
leave
push
mov
push
sbbb
lods
rolb
fs
lock
xor
or
inc
xlat
out
es
lcall
std
loop
or
mov
daa
cmpsl
flds
jns
pop
cmp
push
jg
and
notb
std
es
mov
adc
mov
out
jo
shlb
imul
or
out
das
mov
mov
into
and
in
cmp
out
insl
mov
jnp
and
movsl
add
mov
in
pusha
sahf
jecxz
adc
mov
mov
jp
xor
dec
subb
dec
bound
sbb
cmp
xchg
cltd
dec
pop
enter
inc
pop
pop
out
pop
pusha
test
and
cmc
mov
std
lds
add
xor
js
int
adc
or
xchg
fnstenv
loopne
or
or
inc
inc
lock
dec
ret
cwtl
les
imul
stc
xchg
jno
mov
in
jae
je
or
xor
mov
jle
into
push
pop
dec
pop
cmp
jb
ds
fwait
arpl
mov
cmp
mov
jns
pop
and
mov
fwait
add
stos
add
nop
inc
jbe
dec
adc
les
cmp
cmovo
push
mov
mulb
push
adc
out
mov
pop
sub
inc
bnd
into
test
and
sbb
pushf
and
test
cmp
cmc
jmp
dec
inc
pop
gs
adc
inc
cmp
insl
jbe
clc
hlt
adc
in
mov
dec
out
sbb
pusha
out
cmc
clc
movl
testb
dec
test
xchg
inc
xchg
inc
xlat
cmp
push
ret
mov
mov
push
push
sbb
mov
adc
movsl
inc
mov
js
push
add
sbb
add
imul
sub
popf
xchg
cld
cmpsl
testl
stos
leave
test
mov
dec
cmp
lret
jle
fstps
jns
jbe
sahf
xlat
jge
mov
clc
fcompl
and
xor
xchg
rcrl
xchg
sbb
jo
in
rorb
in
xchg
pop
movl
mov
pop
mov
lret
and
adc
xchg
adc
movsl
call
fldcw
jne
pop
mov
dec
testb
cli
mov
shlb
insb
mov
add
sbb
and
leave
arpl
call
xor
inc
sub
shlb
outsl
scas
sub
sbb
rcr
stos
mov
test
sub
xchg
sub
lods
cli
test
imul
hlt
jmp
or
adcb
in
shr
mov
jmp
pop
xorl
or
daa
shll
in
cmp
ja
push
mov
mov
in
rclb
scas
jae
sbb
mov
mov
scas
pop
leave
xchg
je
lahf
and
push
adc
mov
jo
sbb
cmp
inc
shll
mov
test
rclb
loop
xchg
mov
leave
add
or
fs
pusha
dec
mov
insl
xchg
pop
jmp
gs
stos
shlb
shrl
inc
outsl
sbb
push
in
sti
mov
and
cwtl
inc
roll
inc
cmp
in
push
inc
mov
repz
ss
pop
pop
ja
inc
jo
xchg
or
loop
jno
sub
outsb
inc
xchg
ret
pushf
fs
cmp
or
ds
add
cmc
lea
lcall
adc
lods
push
cmpl
popl
xlat
mov
push
stos
fnstcw
out
add
mov
jmp
fdivs
pop
adc
fidivl
out
mov
jmp
ljmp
fidivl
js
gs
movsb
inc
adc
push
bound
jle
int3
or
sub
mov
sub
mov
dec
insb
or
sub
pop
mov
cs
outsb
jmp
xchg
movsb
mov
ss
fwait
into
sbb
pusha
pop
jbe
scas
cmc
cwtl
sbb
xor
out
mov
cmp
jle
mov
imul
js
push
in
mov
shr
push
mov
in
or
aam
fistpl
dec
push
mov
cmp
test
dec
ja
jg
dec
fadds
jae
sbb
ds
xor
cmp
std
cmp
inc
hlt
mov
cmp
and
loopne
xor
pop
pop
je
mulb
dec
jne
jg
dec
xor
lds
lock
jns
mov
test
hlt
xchg
je
or
das
inc
jg
xchg
inc
add
roll
inc
cs
aad
jo
test
mov
jp
std
ss
pop
loope
adc
jle
cmp
pop
inc
data16
xchg
xor
bound
and
test
adc
in
fcomps
xchg
jae
mov
das
pop
js
mov
xor
fwait
sub
sbb
push
iret
imul
repnz
xor
or
stos
test
mov
mov
sub
push
push
in
subb
testl
cmp
adc
and
inc
xchg
repz
aad
pushf
add
and
or
sbb
mov
jno
mov
adc
mov
push
push
cmpsl
enter
aaa
push
inc
dec
mov
std
inc
inc
fdivl
and
jno
xor
lods
pop
mov
sahf
and
gs
das
mov
popa
push
add
pop
addr16
mov
mov
or
pop
imul
xor
sar
xchg
lahf
xchg
ret
and
cmp
mov
dec
sbb
andl
lahf
ficoml
mov
inc
ret
xor
pushf
lret
shll
imul
mov
hlt
mov
in
mull
xor
or
mov
popf
pop
inc
sbb
mov
push
push
or
insl
out
mov
lret
mov
stos
and
cmp
stc
jl
fcmovnb
test
jle
rclb
test
mov
dec
sbb
bound
in
or
sar
cmc
cmpsb
movsb
jp
std
sbb
jge
es
sub
cwtl
adc
dec
mov
push
rcr
push
aad
jge
xchg
xchg
call
jno
and
pop
xchg
mov
xor
fdivs
push
pop
enter
cmpsl
dec
inc
dec
inc
out
rcll
adc
jno
shll
push
mov
jle
jl
mov
mov
es
outsb
and
les
push
fxch
or
add
push
cltd
mov
sti
dec
inc
sti
pop
scas
jg
out
aaa
sbb
add
jno
testb
int
fwait
mov
hlt
mov
mov
ficoms
cltd
mov
lods
adc
sub
or
xor
fstpt
add
lcall
mov
sub
test
jnp
xor
dec
iret
xchg
lods
mov
jo
sbb
sbb
insl
mov
lods
out
sbb
mov
or
mov
jp
inc
or
mov
repz
stos
icebp
in
add
out
pop
nop
pop
and
xor
push
or
cmp
xchg
sub
sub
adc
mov
pop
or
repz
int3
int3
pop
pop
pop
pop
mov
sbb
adc
jp
sbb
and
jp
sub
imul
in
outsb
sub
mov
sub
mov
mov
mov
inc
jp
xor
cmpps
xor
imul
mov
cmpsb
out
sahf
mov
push
lahf
inc
mov
es
dec
out
cmp
out
call
stos
jle
mov
jnp
inc
scas
xor
xchg
shl
arpl
lea
dec
pushf
adc
or
call
js
mov
loop
bound
mov
je
jb
iret
or
sub
push
stos
lods
into
sahf
hlt
or
dec
xchg
test
pushf
mov
enter
sti
and
jl
jmp
scas
push
push
add
add
add
adc
mov
hlt
ja
cmpsb
in
pop
mov
gs
std
push
mov
xchg
mov
dec
push
imul
push
xor
sahf
outsb
test
inc
les
cmp
mov
and
pushf
jo
sti
insb
pop
int3
fcomip
jg
xlat
push
inc
jbe
popa
mov
lock
pop
andl
jb
jbe
nop
or
int
test
mov
jmp
pop
pushf
push
in
sbb
fstl
mov
adc
stc
aaa
aaa
adc
cmp
jge
dec
jg
arpl
pusha
les
je
dec
testl
inc
cmp
mov
aas
cmp
pop
jmp
fmul
mov
or
jecxz
push
cmp
xchg
or
sub
jecxz
lods
mov
lods
insb
push
inc
jae
ret
push
mov
out
arpl
push
sti
incb
xlat
mov
inc
mov
gs
data16
adc
sti
or
sbb
cmp
lret
enter
mov
dec
cmpsb
pop
inc
mov
and
mov
or
nop
push
outsb
fyl2x
pop
adc
call
fdivl
out
cmpsb
mov
and
lea
jbe
xlat
lock
je
addr16
andb
jnp
lds
and
xchg
jne
xchg
xlat
lods
xchg
scas
movl
sub
dec
in
jle
enter
add
je
sub
ror
hlt
loope
popf
loope
fildl
jb
insl
out
add
popa
ficoml
cmp
xchg
cmp
cmpsl
inc
mov
cmpsl
dec
sub
rolb
push
jo
and
adc
sub
jl
shl
push
test
cmpsb
scas
jo
movsb
mov
xchg
jae
mov
sub
sbbl
jmp
add
bound
push
mov
or
mov
in
or
push
stos
jecxz
lock
jne
stc
push
sub
mov
lods
fchs
lret
or
or
outsb
enter
bound
jmp
adc
js
pushf
rcrb
int
push
lea
outsb
fidivl
out
pop
cmc
and
sbb
push
mov
and
xchg
xor
push
into
rcll
mov
jnp
mov
rcrb
and
repnz
mov
cmpsl
sub
jge
sbb
mov
div
mov
loopne
gs
or
outsl
insb
pusha
mov
jmp
fstps
lcall
mov
int
nop
or
scas
imul
dec
imul
lahf
in
inc
rol
adc
lea
or
or
xlat
xor
adcl
sub
scas
inc
std
pop
mov
sub
sbb
or
mov
loop
int3
mov
fstl
and
inc
jg
xor
fdivl
mov
cmp
adc
adc
bound
push
repnz
mov
int
ffree
add
xchg
mov
cmpb
pop
mov
mov
mov
in
inc
pusha
stc
jge
mov
imul
adc
outsl
jecxz
popf
dec
fbstp
mov
bound
pop
ret
mov
fwait
cmp
movsb
xlat
imul
ss
push
stos
cmp
ljmp
and
repz
ficoms
mov
popa
cwtl
dec
push
fsub
std
movsl
pushl
fnstsw
ljmp
jo
push
cwtl
cmp
shr
scas
mov
bound
scas
adc
jbe
jg
pushf
ret
jp
dec
sub
loope
das
movsb
xchg
mov
jns
xor
shl
inc
cmc
push
enter
scas
dec
arpl
dec
cltd
mov
out
mov
daa
mov
insb
sbb
aas
xchg
les
add
jo
call
lret
sub
mov
sub
or
xchg
xchg
add
clc
xchg
clc
jle
jmp
addr16
inc
popf
test
in
jne
fs
fsubrl
cmp
push
mov
bound
scas
cwtl
mov
pop
jnp
test
addl
inc
xchg
mov
aas
lahf
cmpsb
pop
adc
adc
movsb
cli
adc
sub
jmp
and
repnz
mov
and
pop
mov
sub
inc
jmp
mov
pop
pushf
jae
mov
adc
xchg
lds
daa
mov
cmpsl
adc
mov
fs
aad
aaa
cmpsb
adc
popl
inc
jae
fwait
sbb
out
fdivs
push
jo
cli
sbb
lahf
loope
add
fadds
mov
and
pop
pop
mov
cmpsl
inc
rclb
inc
scas
or
and
cmp
testl
ja
and
cmp
rol
sbb
clc
push
icebp
bound
add
pushf
push
daa
js
test
mov
gs
push
shrb
or
xchg
jle
inc
ja
int3
inc
fs
cld
jl
jne
or
cmp
mov
mov
cld
iret
xchg
sub
fcompl
loope
fcoml
or
into
aaa
push
jp
test
enter
outsb
repz
mov
mov
or
scas
push
js
lret
inc
jbe
xchg
mov
roll
jle
and
int
ret
sub
cmpsb
mov
les
ret
std
adc
ds
dec
mov
mov
push
xchg
fstps
mov
pop
xchg
jb
lcall
icebp
std
rolb
pusha
inc
jne
jg
gs
loopne
pop
repz
pushf
inc
shl
clc
in
jnp
xor
sbb
cmp
stos
shl
xchg
mov
mov
fstpt
icebp
pop
fcoms
sub
mov
ret
cmp
mov
das
orl
repnz
jge
push
out
arpl
adc
xor
imul
push
xor
xor
inc
lret
ja
fwait
cmp
and
jns
in
repnz
mov
enter
push
movsl
xor
jp
sbbl
cmpsb
jle
aaa
jne
push
movsl
push
xlat
cmp
mov
cltd
pop
aas
std
adc
aad
push
stos
lcall
cmpsl
cmpsb
movsl
addr16
fdivl
mov
cmp
call
je
lea
push
jae
int
cmpsb
jp
adc
xchg
xchg
inc
push
orl
int
enter
fsubrl
out
frstor
mov
cmpsl
dec
cmc
nop
jg
adc
cmpsb
sti
push
into
mov
test
xor
fucomp
inc
fbstp
adc
out
cmp
jge
out
std
filds
mov
inc
or
push
xchg
test
aaa
dec
ss
sub
ret
jns
jmp
push
hlt
push
pop
jno
cmovae
dec
cmp
push
sahf
cmp
loopne
adc
cmpsb
fcomip
ret
insb
sub
and
xor
xor
outsb
cmpsl
xor
mov
xor
shrl
sbb
jnp
ljmp
sub
cld
data16
adc
jle
addr16
xchg
inc
shlb
add
cwtl
nop
pop
adc
loopne
fld1
hlt
mov
jne
xchg
push
fs
inc
mov
je
daa
push
shl
xor
cmp
popa
daa
xor
sti
adc
stc
sbb
pop
divb
out
sti
cmpsb
mov
movsl
xchg
ss
into
dec
dec
cmpsl
sbb
and
mov
lods
dec
fmulp
xor
mov
insb
sahf
lret
cmp
sbb
int
add
push
rclb
sarl
test
xchg
or
pop
sbb
pop
inc
cmp
int3
pop
mov
enter
mov
in
fdivl
pop
int3
dec
push
aaa
pop
sub
test
xor
mov
push
xor
rcrl
addl
addr16
mov
dec
xchg
xor
das
mov
lods
decb
popf
inc
repnz
dec
jl
loop
jne
das
pushf
outsb
mov
mov
cmc
cmp
pusha
imul
in
inc
enter
out
push
in
dec
ret
sub
pop
or
out
in
jbe
cs
out
out
fcoms
jecxz
mov
ret
lahf
adcb
jmp
mov
mov
out
insb
jb
cltd
lock
and
jnp
ss
or
ljmp
pop
cli
mov
and
mov
sub
ss
jb
xchg
or
mov
add
insl
loope
lret
cmp
xor
xchg
cmc
lods
mov
lcall
out
cmpsl
flds
mov
insb
andl
loope
mov
daa
add
sub
adc
push
aaa
in
popf
or
lea
push
pop
imul
push
cmp
movsl
arpl
or
into
in
adc
mov
aam
loope
mov
mov
arpl
jns
sbb
jb
sti
pop
mov
xchg
cwtl
lds
add
xchg
jae,pt
fwait
inc
inc
sbb
test
sarb
je
daa
pusha
scas
xchg
dec
sub
jge
jne
pop
popa
cltd
movsb
into
out
jp
mov
mov
sbb
inc
mov
sti
sub
cmp
fs
push
inc
popf
inc
mov
dec
xchg
cmp
add
in
mov
adc
or
movsl
mov
and
pop
mov
push
in
int
lods
nop
push
cmp
jecxz
addr16
repz
pushf
enter
and
test
push
inc
mov
xor
shl
and
xor
lahf
sbbl
mov
adc
mov
mov
or
mov
mov
dec
mov
xchg
cmp
cmp
gs
xor
cmp
xor
sarl
nop
jge,pn
add
imul
call
out
out
imul
mov
rclb
sbb
clc
repz
sbb
sub
scas
addr16
xchg
loop
push
cld
fistpll
pop
pop
ljmp
and
iret
add
dec
data16
test
mov
call
aam
fisttpl
cltd
rclb
inc
popf
into
jl
mov
cmpsb
idiv
imul
pop
rorb
mov
push
popa
jbe
adc
lds
bound
imul
push
cmc
or
aas
inc
xor
adc
and
xor
fdivrl
xor
pop
adc
idiv
jp
leave
ss
ss
nop
pop
int
pusha
fsts
cmpsb
enter
mov
ret
push
popa
call
push
loop
orb
jne
mov
fs
jge
jbe
fwait
cld
cmp
stos
mov
sub
jns
je
adc
roll
cmpsl
xor
mov
xchg
cmp
test
inc
and
mov
mov
pop
inc
daa
insb
insb
push
addr16
dec
rcrl
push
ret
cmp
mov
inc
ds
daa
and
xchg
scas
or
and
inc
adcb
pop
std
xor
adc
ljmp
sbb
das
lea
cmp
adc
pop
inc
jae
shll
lods
ss
and
pop
jmp
or
lds
mov
bound
fisubrs
add
adc
mov
sub
jg
xchg
rolb
xchg
sbb
xchg
pop
sbb
jae
or
test
bound
xchg
scas
mov
faddp
adc
mov
mov
jns
stos
loop
push
pop
in
or
mov
and
fcomps
dec
sub
pop
pop
popf
gs
xor
jnp
rcr
out
dec
add
je
div
sub
repnz
jne
add
movsb
pop
outsl
in
das
sub
lods
dec
and
push
dec
pop
xchg
inc
orl
ret
or
mov
dec
lahf
pusha
and
mov
stc
mov
loopne
jp
cld
je
jg
dec
call
xchg
flds
addb
out
mov
dec
mov
mov
addr16
rorb
pmaxsw
mov
outsb
xor
xor
cld
adc
and
jp
adc
inc
cmc
xchg
sub
add
push
sub
add
push
xchg
sub
dec
push
cmp
pcmpgtd
data16
or
test
and
push
je
aad
mov
mov
sub
jecxz,pn
inc
pop
scas
hlt
mov
mov
ret
nop
shlb
enter
dec
mov
and
push
jnp
ja
mov
add
add
mov
jno
sbb
in
mov
fucom
mov
sbb
movsl
sbb
outsb
mov
rcl
out
pop
clc
jnp
inc
fimuls
inc
sub
lods
jecxz
out
adc
rcll
nop
mov
mov
push
push
aad
in
dec
insl
xchg
in
xlat
ss
hlt
mov
pusha
fistps
push
mov
push
pushf
adcl
mov
testb
mov
fisubrl
sub
mov
and
sub
sbb
mov
iret
or
sub
dec
ljmp
or
mov
imul
movq
and
insb
and
mov
lahf
mov
pavgb
push
mov
in
cwtl
aad
shrl
add
test
in
xlat
stos
movl
es
rcrl
xor
insl
inc
sbb
enter
mov
icebp
push
jo
mov
xchg
aaa
cli
addb
adc
jnp
das
sahf
outsb
jae
mov
icebp
pop
sub
fadds
fwait
std
push
cwtl
mov
dec
js
out
filds
into
negb
daa
mov
es
outsl
mov
mov
dec
dec
dec
dec
pusha
arpl
fidivrs
push
popa
dec
xchg
fisubrs
test
scas
arpl
lahf
push
stc
out
jns
jo
loope
fistpll
popa
cmp
mov
push
cmp
mov
and
adc
arpl
dec
lret
mov
sti
inc
sbb
push
jp
xor
sub
dec
dec
addl
xor
ret
dec
das
mov
iret
pop
mov
clc
xchg
dec
ja
mov
inc
inc
push
add
pop
test
pop
out
push
lret
ds
lea
push
jp
jo
mov
outsb
mov
and
dec
nop
xchg
fwait
test
inc
hlt
mov
cmp
fcompl
dec
das
xchg
test
test
pop
repz
xor
leave
mov
out
xor
iret
push
adc
mov
loop
jae
test
cmc
push
push
movsl
pop
popa
shll
outsb
shrb
lea
clc
dec
movsl
sub
inc
mov
push
rcrb
push
test
mov
pop
add
sbb
pop
pop
jg
dec
mov
adc
dec
out
test
jo
sbb
clc
add
or
or
add
mov
shr
push
roll
xchg
mulb
ja
mov
pop
cwtl
jns
inc
sbb
and
into
int
test
or
xor
pop
mov
out
fwait
mov
imul
lahf
sub
mov
cmp
sbb
cmpl
or
dec
jno
vunpckhps
adc
adc
es
outsl
adc
mov
add
sti
cmc
pop
mov
inc
add
mov
and
push
mov
mov
push
xchg
and
mov
lahf
sub
test
or
pop
add
mov
lret
inc
mulb
stos
rcrb
add
sbb
sub
data16
cltd
out
enter
xchg
scas
icebp
push
insl
dec
mov
jb
fcmovnu
jecxz
dec
scas
fadds
es
imul
ss
mov
dec
icebp
push
iret
out
test
fidivrs
xor
mov
adc
test
leave
xchg
dec
aad
dec
pop
loop
test
repnz
scas
ljmp
stos
lret
andb
sarb
cmpsl
sbb
fwait
jns
inc
dec
icebp
sbb
xchg
push
fsts
adcb
pop
pop
pop
test
mov
popa
cmp
cmp
xchg
sub
xlat
xor
lods
lahf
add
dec
lods
adc
adc
xor
sbb
jne
pop
mov
sbb
sub
dec
push
adc
add
sar
mov
pop
xchg
adc
dec
pop
and
push
outsb
ret
inc
ds
xor
mov
and
cmc
ret
jo
das
cwtl
ret
jae
adc
push
orl
shll
loop
cmp
dec
jbe
gs
xchg
sbb
lea
xlat
jp
sub
dec
mov
mov
xor
xchg
stos
arpl
sahf
jne
jbe
ja
inc
test
fdivs
pushf
int
and
outsl
cltd
mov
aaa
push
jbe
sbb
inc
xchg
sbb
scas
and
cmp
push
or
mov
lret
add
add
mov
jbe
scas
lds
imull
stos
les
mov
jb
xor
xor
sub
mov
sub
shll
lock
roll
cmp
cmp
xorl
add
fisttpl
mov
negl
pop
faddl
cld
movsb
pop
insl
hlt
dec
cmp
pusha
dec
push
stc
aam
fadds
ret
dec
fidivrl
jo
adc
xor
xor
push
loop
xchg
pop
dec
leave
ja
out
mov
xor
mov
jns
lret
pop
loopne
loop
dec
dec
jge
mov
inc
in
or
fmulp
arpl
ret
dec
sub
push
test
mov
mov
outsb
and
xor
inc
in
mov
dec
cmc
shl
into
and
outsb
gs
ss
xor
dec
sbb
fwait
mov
test
int3
test
xorb
arpl
ljmp
pushf
sbb
arpl
inc
cwtl
fldenv
ds
xor
mov
shrl
pop
inc
dec
mov
and
in
xchg
xchg
mov
cmc
pushf
lret
cmpsb
bnd
addb
cmp
imul
dec
or
jg
clc
mov
addr16
inc
mov
das
addl
shrb
popf
xor
inc
or
stos
inc
push
pop
movsl
adc
add
out
shll
mov
fimull
imulb
add
jg
subl
sahf
jmp
sbb
sarl
ffree
movsl
stc
test
push
xchg
dec
movsl
add
jne
mov
stc
adc
je
out
jmp
add
insl
jmp
pop
in
pop
xchg
adc
mov
insl
pusha
add
adc
or
mov
inc
jns
fmulp
int
xor
mov
sub
mov
test
mov
scas
inc
rcrl
adc
shll
mov
in
add
push
pushl
les
jb
loop
mov
inc
lret
in
xor
repnz
xchg
fisubs
pop
jl
adc
cltd
loop
mov
sahf
jmp
dec
clc
xchg
sbb
dec
rcl
sub
pop
push
shll
jb
scas
rcll
rorb
mov
adcl
iret
nop
jne
sbb
iret
lock
movsl
dec
cmp
fsubrs
add
imul
add
sub
stos
sbb
xchg
xchg
movsb
movsl
lds
inc
fldl
mov
pop
mov
and
cmpsl
inc
subb
sub
add
dec
mov
jmp
mov
jmpw
push
int3
popf
cmc
and
arpl
iret
int3
xchg
mov
leave
mov
lret
das
loopne
cmpsb
mov
jns
inc
into
dec
lods
cli
movsb
fsubrs
clc
dec
int
xlat
jnp
in
call
int
jmp
cltd
sub
test
pop
out
push
test
sub
fcmovb
repnz
xchg
imul
pop
jle
shll
out
pushf
adc
test
jmp
adc
push
cmp
cmpsl
sub
int3
sbb
jo,pn
sti
pop
xor
dec
cwtl
mov
cmp
inc
inc
mov
push
mov
les
hlt
aam
shl
jae
sbb
filds
inc
dec
fmulp
scas
sub
lea
push
dec
addr16
jne
scas
lret
ret
and
mov
cmpsl
aad
flds
insb
loop
lahf
or
or
mov
js
call
arpl
lock
in
leave
test
sbb
adc
cmp
iret
mov
mov
push
stc
ljmp
dec
or
adc
mov
pop
cmpsb
shl
add
pop
popa
mov
dec
test
shrl
sub
lret
adc
scas
nop
imul
bound
shlb
in
jge
out
imul
rcrb
or
xlat
push
test
in
inc
ret
and
test
loope
repz
stc
shll
mov
fistps
xchg
mov
sahf
movsl
ss
movsb
lock
ror
scas
fcmovne
pop
fs
out
fsubrp
test
cmp
cmpsl
jge
pop
sahf
lods
push
rclb
xchg
adc
adc
sub
subl
add
push
imul
inc
outsl
push
inc
cmp
fstpl
test
daa
push
cld
mov
call
outsl
in
mov
jecxz
adc
push
xor
pop
mov
nop
cs
push
xchg
adc
test
cli
daa
int
or
out
cwtl
mov
push
inc
lret
insl
mov
pop
or
jne
xchg
xor
lods
into
inc
push
enter
lret
iret
ficoml
pop
cmp
cmp
dec
insb
and
push
rorb
shll
movsl
push
cld
aad
dec
xchg
popf
mov
fisubrs
sti
fsubrs
mov
fs
add
mov
cmpsb
mov
addr16
insl
and
xchg
add
rorb
pop
mov
and
in
adc
sar
mov
sarl
cmp
in
fdivp
jb
testl
test
sbbl
mov
cmc
aam
fisttpll
nop
mov
sbb
rcrl
jne
xorl
jb
lret
cltd
and
mov
xor
test
insl
dec
insl
jns
mov
xchg
push
jbe
test
pop
outsb
mov
outsl
test
ljmp
and
das
mov
xor
fildll
test
adc
cmp
sbb
jmp
sub
lods
out
popa
mov
data16
mov
iret
adc
insb
cli
outsl
mov
adc
fwait
sub
call
xor
nop
cmp
xchg
out
outsb
int3
shlb
jge
ja
frstor
pusha
pusha
and
aad
push
rorb
mov
sub
mov
fxch
bound
mov
cmp
loop
mov
mov
inc
lods
subb
outsb
jl
pop
cmpsl
nop
inc
sub
fmuls
pop
sub
jo
imul
xchg
scas
pop
pop
addr16
and
mov
pop
nop
xor
jmp
or
arpl
sub
stos
out
std
adc
fs
mov
pop
mov
xchg
mov
inc
and
mov
loop
into
inc
stc
in
sub
jns
fisubrl
mov
stc
mov
in
push
push
es
ja
push
mov
ds
in
xor
in
aam
pop
mov
pop
jecxz
stos
dec
mov
or
pop
mov
jle
loop
jmp
adc
out
xchg
rcl
mov
pop
xchg
mov
lods
outsb
jp
mov
into
std
mov
cmp
repnz
mov
lds
rclb
jb
ja
test
rorb
dec
in
pushf
pushf
pop
popf
or
ja
stc
aad
push
out
je
pushf
fs
cmc
sub
sbb
mov
jae
mov
mov
push
jl
data16
cld
mov
and
sbbb
sbb
fs
push
inc
or
inc
out
sub
popf
sbb
testb
aad
sbb
insl
xor
add
hlt
jge
clc
push
sbb
ret
mov
sbb
mov
sbb
aad
hlt
inc
adc
and
jp
inc
push
mov
fwait
pusha
sub
add
dec
sub
or
cmc
stos
add
and
xor
repz
pop
nop
ja
jnp
mov
dec
mov
xchg
jns
aas
adc
nop
push
les
xor
std
cmp
popa
xchg
cmp
push
xchg
push
cli
iret
push
loop
fs
into
cmp
cmp
imul
xchg
les
cmpsl
cwtl
sahf
push
jns
xor
ret
push
sub
stc
addb
dec
outsl
es
addr16
adc
add
xchg
popa
pushf
and
dec
imul
pop
cmp
dec
scas
cmpsb
jp
clc
stc
push
jbe
xchg
pusha
pop
imul
js
fistpll
add
inc
cmp
loope,pt
dec
fistl
mov
int
daa
cmp
stc
mov
iret
xor
sahf
xor
scas
fnstenv
dec
scas
cwtl
into
ds
js
xlat
jne
dec
jae
sbb
sub
adc
sbb
popa
scas
cmpsl
es
sbb
pop
fbstp
cmp
js
mov
out
repz
test
adc
je
add
inc
sub
xchg
outsb
or
sbb
or
fxtract
xchg
lret
mov
stc
jae
push
mov
sub
cltd
inc
in
jmp
cmp
pop
ret
mov
inc
cmc
daa
lock
inc
cwtl
mov
xchg
sub
jl
inc
mov
lahf
enter
mov
sbb
pop
mov
cmp
pop
push
aaa
sub
test
xor
enter
addl
and
dec
fs
xor
jne
fs
leave
xchg
lahf
lds
in
lahf
cmp
das
mov
cli
jo
mov
pop
sbb
jns
lds
push
inc
xchg
aad
mov
rolb
cmc
xor
movsl
adc
cli
pop
sub
ljmp
movsb
cmp
pop
test
dec
xor
cmpsb
ret
jae
xchg
inc
mov
xor
lods
push
cmc
dec
fs
or
loope
add
jecxz
movsb
inc
sub
push
aaa
cltd
pop
lret
loope
pop
dec
and
repnz
mov
ror
add
pop
pop
xchg
fucomip
outsb
and
mov
dec
adc
int3
sbb
jnp
push
inc
fbstp
fmul
lds
fisubrl
mov
addr16
lea
add
pushl
inc
add
jnp
imul
test
jl
and
pop
mov
mov
mov
sbb
xlat
iret
je
mov
xchg
dec
xchg
imul
mov
out
mov
mov
mov
xchg
xchg
gs
mov
scas
std
xlat
int3
jnp
lods
mov
fdivl
jns
rcrl
xchg
xchg
cmc
add
mov
inc
mov
adc
push
cmp
ficoml
jo
fcomps
daa
movsl
mov
mov
lock
into
jmp
cmp
cmpsb
in
mov
mov
sar
dec
mov
cmpsl
sti
int3
xor
sbb
daa
sarl
mov
sub
sub
inc
cmp
pop
js
in
dec
sub
or
xchg
pusha
dec
pop
push
aaa
fbstp
mov
mov
push
jge
mov
out
std
rorb
rcll
mov
xchg
dec
adc
sti
lahf
repnz
inc
add
cmp
imulb
jecxz
movsb
aaa
cs
fucomi
sub
mov
cwtl
pop
mov
ss
orl
les
test
cltd
xor
sub
imul
clc
stos
fisubrl
ljmp
test
fwait
aas
cmp
test
int3
call
cld
xlat
sbb
inc
in
in
iret
mov
std
sahf
or
push
pop
xchg
imul
in
mov
xor
jle
xlat
adc
lods
gs
push
movsl
cmp
testl
mov
mov
mov
jmp
sub
xor
imul
fnstenv
mov
sbb
xchg
xor
push
add
ret
and
sbb
xchg
out
dec
das
inc
mov
andb
sarb
mov
aad
mov
mov
pop
push
call
push
dec
les
inc
add
mov
xchg
sbb
div
xor
hlt
pop
aam
je
xchg
cmp
jne
xchg
and
inc
jecxz
je
loop
sub
add
sbb
push
xchg
int3
data16
dec
shl
lea
fdiv
test
and
pop
push
popf
mov
lahf
incb
adc
int
adc
cmp
add
xchg
and
inc
xchg
or
and
insl
andl
sbb
xchg
jg
dec
int3
adcl
or
pop
test
add
and
sbb
test
hlt
xlat
pop
movsb
push
clc
cmp
cli
push
mov
lods
outsl
xchg
xchg
jl
lret
mov
aam
lods
sar
mov
adc
add
test
pushf
jns
fsts
fnstcw
movsb
sub
and
pop
mov
and
rcll
mov
call
cmp
push
aam
inc
adc
loopne
pop
push
or
and
nop
les
jge
or
imul
insl
shlb
subl
jg
inc
mov
decb
frstor
xor
jg
dec
xchg
pop
lcall
mull
int
loop
push
dec
int3
aaa
xchg
xor
movsb
add
jnp
das
or
or
adc
dec
mov
cmp
or
sub
imul
add
mov
iret
mov
test
mov
icebp
out
jae
scas
iret
aad
adc
dec
lods
push
jnp
addl
sub
sub
pop
mov
cmp
insl
mov
pop
adc
pop
cmc
pop
xor
jg
jmp
mov
out
sub
jno
push
loope
lock
lret
dec
movsb
mov
mov
add
lea
mov
jne
xchg
pop
push
mov
jecxz
jl
sahf
dec
inc
cmpb
movsl
std
into
push
or
push
inc
push
lds
jae
cltd
jle
stos
jb
jns
test
mov
movsb
pusha
popa
ret
test
loopne
leave
lods
jns
push
pop
cmpsl
rcl
cmp
decl
mov
ret
mov
call
movsb
xor
in
lock
sbb
mov
sbb
dec
enter
add
pop
mov
push
mov
mov
daa
dec
cld
xchg
mov
xchg
jnp
in
jmp
imul
andb
jg
dec
fs
xor
mov
push
xor
insb
imul
stos
adc
nop
pop
xor
push
in
push
fimull
in
in
dec
xchg
test
add
pop
and
cmp
and
push
adc
repnz
lret
test
imul
xchg
imul
fldenv
ret
cmc
mov
pop
adc
lcall
jmp
enter
pop
and
pop
cmpsl
addr16
mov
dec
imul
scas
cmp
sub
out
lret
xlat
mov
test
or
push
or
and
xchg
mov
enter
cwtl
pop
shll
mov
int3
test
pop
push
mov
addb
sub
push
dec
std
fimull
in
or
test
out
cwtl
add
loope
test
xchg
jae
mov
pop
scas
fwait
pop
es
inc
mov
loopne
sbb
push
mov
mov
arpl
mov
out
inc
dec
ljmp
icebp
push
cli
dec
push
mov
repz
aam
aas
test
or
fs
mov
mov
xor
mov
mov
testl
xor
xchg
in
adc
aas
pop
pop
inc
pop
lods
mov
mov
inc
adc
push
and
pop
insl
fcmovnb
cmp
xor
rorl
or
ljmp
arpl
xor
adc
jns
negl
mull
dec
add
jns
inc
pushaw
inc
pop
mov
hlt
adc
pop
fadds
es
ret
inc
into
push
subb
sbb
mov
adc
dec
scas
or
mov
inc
scas
mov
lahf
pop
stos
pop
mov
mov
jge
pop
xchg
push
scas
rorb
test
mov
dec
rclb
cmp
mov
inc
shl
inc
std
sbb
and
cmp
aad
cld
sub
pop
xchg
outsb
jb
stc
xor
aaa
add
cld
jmp
fists
lea
mov
inc
shl
mov
xor
sub
cmp
shr
sub
mov
test
xchg
push
pop
cmp
xchg
dec
fiaddl
and
loopne
pushw
inc
lcall
jae
dec
add
mov
cmp
lret
mov
adc
jp
and
fnstcw
in
daa
pop
xor
js
je
andl
cli
repz
dec
out
mov
stc
adc
subb
xchg
mov
jmp
stc
bound
inc
xchg
call
pop
out
movsl
or
test
and
arpl
stc
cmp
mov
or
test
add
sub
cmp
loope
xor
repnz
jae
test
and
adc
stos
popa
shrl
test
mov
sub
pop
jo
aam
shll
shrl
sbb
adc
push
mov
mov
cltd
lcall
pushf
mov
xorl
adc
popf
mov
imul
cmp
cmp
adc
mov
icebp
stc
sahf
sar
mov
add
push
flds
lods
imul
add
sbb
loopne
in
out
mov
pop
adc
mov
ret
cltd
sti
cli
popf
mov
pushf
insb
and
sub
jmp
xor
push
shll
push
leave
lahf
dec
lahf
xchg
xor
shrl
iret
or
inc
out
jp
mov
idivb
dec
add
push
adc
into
add
mov
inc
es
sub
out
call
xchg
cld
mov
dec
je
pusha
repnz
in
cmp
jno
xchg
mov
in
mov
mov
xchg
cmpsl
dec
shlb
fdivrs
andl
repz
shl
les
cltd
or
adc
movb
cmpsb
xchg
inc
adc
in
adc
dec
lea
xchg
outsb
mov
pop
rcrb
xchg
jne
pop
mov
lock
mov
fisubrs
lcall
push
cmp
add
pop
call
sbb
mov
jne
jg
leave
mov
aam
push
and
imul
shlb
sbb
jle
cltd
shrl
add
shrl
psraw
pop
xchg
mov
inc
ret
ja
mov
push
shlb
push
and
inc
rol
push
dec
or
sbb
push
fsub
and
stos
out
ljmp
dec
pop
or
pop
nop
fimull
add
lahf
fstp
sbb
sbb
jmp
call
or
xor
orb
mov
sahf
xchg
adc
push
dec
or
push
mov
iret
lret
inc
jecxz
arpl
imul
outsb
movhps
dec
loop
bound
cmp
fs
sbb
mov
sbb
pop
fldcw
call
sub
jns,pt
outsl
divb
jmp
cmp
adc
adc
dec
loopne
into
std
stos
push
mov
mov
xor
mov
fbld
hlt
ret
xchg
jbe
fnstcw
shll
add
in
fabs
or
fcoml
pop
cmp
jmp
jns
inc
cmp
and
dec
add
fsubrl
sbb
in
repz
jp
and
gs
sub
xchg
mov
stos
hlt
jo
insb
lret
and
jns
mov
in
setl
aaa
imul
xor
xchg
push
xor
andl
cmp
inc
repz
call
lahf
push
cmovnp
sbb
les
adc
pop
jg
fistl
cs
addb
mov
sub
jge
cmp
mov
outsb
test
shll
cmp
inc
mov
enter
dec
xor
cld
pushf
jno
addr16
les
and
or
ljmp
bound
push
push
cmp
mov
xchg
ds
pop
aam
xor
inc
repnz
divb
mov
jecxz
data16
mov
push
repz
xchg
mov
mov
cmpsl
xchg
sub
div
testb
outsl
movsb
cmp
aam
cmp
data16
pop
cltd
mov
jns
xor
scas
mov
pop
fstl
push
aam
or
push
push
sti
test
clc
lods
imul
mov
ret
lret
sti
loope
outsl
jg
sbb
xor
push
in
pusha
es
es
mov
andl
subps
jbe
faddp
cmpsl
jmp
idivl
pop
movsl
cmp
pop
push
stc
std
call
inc
insb
pop
das
outsl
sbb
andb
ret
inc
xor
mov
xorb
and
dec
mov
mov
sbb
ud0
cltd
shlb
cld
mov
mov
in
leave
push
mov
mov
es
mov
mov
out
adc
lret
in
data16
test
loope
fsub
add
andb
xchg
bnd
adc
cltd
mov
pop
pushf
mov
pop
adc
mov
push
pop
mov
adcb
in
adc
inc
imul
add
jp
shlb
int
xchg
pop
aam
insb
add
jg
inc
mov
std
push
fcoms
pop
pop
mov
hlt
repz
repnz
xchg
outsl
cltd
aam
ljmp
leave
mov
ja
subl
mov
js
inc
popa
mov
shrb
std
inc
xor
or
ret
and
jp
je
xorl
xchg
rolb
ficoml
dec
call
jae
out
stos
idiv
add
jns
sti
repnz
popa
sbb
aam
ds
dec
sub
xor
cmp
ds
cltd
jecxz
enter
aas
fadd
inc
jmp
push
mov
dec
cmp
test
leave
leave
cmpsb
enter
js
sub
xchg
sarb
cld
int3
adc
aas
cli
cmpsb
cwtl
mov
push
arpl
fildl
aas
cli
pop
inc
mov
xchg
jmp
out
pop
aaa
cmp
in
test
fs
cmpsl
test
pop
es
sub
push
push
icebp
shrb
ss
pop
sbb
or
iret
push
sbb
sub
int3
call
and
addb
imul
das
mov
push
out
mov
sar
xchg
stos
cmpsb
pop
cs
cmp
inc
les
push
jns
out
scas
andl
lock
or
stos
test
pop
cmp
ss
lret
pusha
xor
and
add
jl
cmp
scas
mov
mov
add
fcmovnu
aad
repnz
dec
imul
cmp
and
pop
or
stos
cmp
int3
cmpsb
lods
ss
inc
fnsave
loop
nop
ret
add
aas
rolb
idivw
xchg
mov
rclb
out
mov
inc
pop
or
cmp
push
mov
add
shll
xor
sub
out
and
fisubrl
ljmp
sbb
cltd
cs
jmp
mov
jp
mov
movsb
push
inc
adc
and
lea
inc
dec
add
decb
cmp
lret
mov
out
mov
jns
xchg
sub
jmp
sub
jb
mov
ret
int
outsl
test
cmc
sbb
fucom
and
es
sahf
xchg
inc
sub
sbb
ret
int
sub
andb
fsubs
inc
mov
or
push
sbb
mov
popf
inc
insl
xchg
mov
jp
mov
outsb
mov
mov
adc
sbb
and
aad
sarb
push
fidivrl
add
cwtl
mov
sbb
out
jecxz
mov
mov
inc
insl
divl
pop
pop
filds
mov
mov
dec
pusha
mov
pop
in
or
pop
inc
sub
add
mov
push
test
mov
int3
sbb
cmp
jae
inc
fisttpl
pushf
push
mov
adc
mov
xchg
movsl
xor
jns
push
push
jl
in
insb
and
mov
fwait
sbb
dec
and
call
movsb
cmc
xchg
pop
daa
dec
push
add
jne
imulb
sub
movsb
push
stc
jb
push
icebp
add
mov
into
sbb
mov
mov
dec
dec
movsb
mov
test
xor
lods
subb
mov
outsl
movsl
outsl
xchg
pop
loope
sub
jbe
std
jl
stc
adc
shrb
mov
push
sub
ret
adc
sub
sub
xor
pop
je
jb
fcmovne
lahf
clc
jb
sub
xchg
xchg
jp
stos
push
xchg
cli
adc
fisttpl
das
ret
mov
fidivrs
jae
mov
pop
leave
loopne
push
ljmp
pop
iret
sub
jae
repnz
jp
adc
xchg
icebp
lret
push
outsb
fs
fs
out
push
iret
and
xchg
xor
push
cmp
int3
jge
mov
cmp
fadds
gs
ret
enter
divl
jno
repnz
rorl
cmp
pop
stos
sub
pusha
adc
push
shll
ja
mov
cmpb
push
cmp
dec
push
mov
sub
sbb
push
mov
daa
lret
cmp
out
loop
mov
lret
faddl
sti
or
add
jno,pn
pop
cmp
data16
xlat
icebp
ja
in
int3
imul
pop
sbb
loop
push
pop
jbe
cld
xor
mov
loopew
movsb
and
jne
xor
stos
gs
jnp
xchg
test
mov
inc
call
aad
shrb
cmpsb
sbb
lea
hlt
cltd
jo
sub
lds
clc
das
jb
bound
loop
sbb
jae
push
dec
jne
pusha
push
lods
lcall
ja
sbb
fnstcw
pop
push
xchg
daa
sub
sub
push
lret
push
xor
xor
aam
bound
bound
dec
mov
call
stos
lds
jg
in
push
push
mov
sbb
fnstcw
lods
in
jmp
push
xlat
adc
xlat
and
popa
mov
rcll
pop
jmp
sbb
subb
das
sub
lcall
pop
lahf
clc
dec
addr16
push
outsl
jbe
mov
mov
xlat
adc
int
xchg
or
add
add
imul
sbb
xchg
ss
sbb
loope
out
mov
mov
lock
fmulp
insl
lds
mov
rsqrtps
das
popf
jne
add
jb
xchg
loop
dec
cbtw
idiv
mov
mov
stos
jecxz
loopne
push
mov
xchg
pop
shl
cmp
add
dec
pop
jl
lods
pop
jle
mov
outsb
pop
fs
pushf
mov
sub
div
sub
xchg
cwtl
xchg
clc
fistpll
mov
out
or
mov
xor
and
test
cmp
jno
lea
lret
jne
cmp
sub
test
stos
push
mov
dec
out
popa
pop
push
or
imul
cwtl
mov
adcb
stc
js
outsl
insl
icebp
out
xchg
dec
dec
pop
push
in
mov
add
mov
add
andl
adc
sbbl
mov
or
mov
int
outsb
xchg
and
imull
int
bound
mov
inc
push
mulb
adc
mov
push
xlat
push
inc
shrb
add
lock
popa
in
cld
add
fs
lods
xor
dec
pop
popa
testl
jg
cwtl
and
in
mov
sbb
mov
lahf
mov
adc
daa
imul
xor
aaa
stos
mov
and
and
xchg
xorl
imulb
push
xchg
aaa
dec
movsl
fists
adc
sub
pop
mov
mov
add
ljmp
out
call
xor
imul
outsl
jb
sbb
push
sbb
mov
jne
cmp
cmp
mov
iret
and
pop
pushf
ds
popf
cltd
xor
notb
pop
mov
ja
imul
aam
lahf
ret
mov
or
pop
mov
enter
push
es
push
int3
insl
std
sbb
insb
jmp
and
xor
ret
xor
dec
das
rcll
cmp
push
ljmp
test
inc
cmp
imul
mov
mov
popl
mov
push
mov
mov
sahf
xor
pop
in
aas
cmpsl
lret
pop
or
push
sbb
jbe
in
pop
nop
in
sbb
add
rclb
mov
jmp
push
hlt
pop
lret
fsubrs
xor
cmp
mov
jle
pusha
mov
jl
xor
scas
push
jecxz
inc
push
imul
fcomps
push
or
inc
popa
add
xchg
push
lret
sahf
bound
pop
inc
lea
into
daa
xchg
or
arpl
inc
cmp
test
cmp
loope
mov
adc
jns
pop
xchg
sub
jns
mov
into
fcmovb
or
xchg
inc
jbe
arpl
data16
or
push
lods
dec
test
pop
jg
clc
sub
ror
push
mov
hlt
out
movsb
cmp
addb
std
mov
andb
add
lahf
scas
ss
mov
adc
jp
xchg
repnz
cltd
add
inc
loopne
insb
aad
fisubl
and
scas
xor
sbb
or
pop
ss
jp
dec
clc
int
ljmp
fimuls
cwtl
xor
push
push
pop
xor
push
mov
movsb
jae
jbe
lds
shr
pop
ret
inc
pop
dec
jnp
fistps
test
or
pop
insb
push
notb
sub
lds
adc
lods
out
dec
rclb
dec
xchg
dec
scas
pop
cmp
fidivl
inc
jle
repnz
std
mov
lea
adc
in
inc
xchg
push
cli
xchg
addb
popf
sub
mov
decb
sahf
in
push
cbtw
fmull
jo
pop
jno
dec
insb
xor
call
pop
sbb
lods
daa
adc
dec
push
push
jnp
push
cmpl
loopne
mov
pushf
popf
js
push
mov
or
or
loope
aas
pushf
adc
cld
pop
push
sub
cmp
lods
lods
aad
add
lods
inc
or
lds
hlt
jbe
mov
add
sbb
jne
andb
fdivrl
scas
mov
xchg
lods
mov
sbb
outsl
mov
inc
push
leave
addb
popa
in
push
inc
movsb
dec
loope
mov
popa
loope
idivb
jmp
jecxz
aas
or
repz
jge
inc
ds
hlt
enter
ss
add
addr16
fisubl
xchg
in
loopne
jg
or
lods
testl
pop
in
sbb
push
jne
lods
adc
xor
scas
popf
ljmp
jb
mov
and
ret
int
mov
daa
cmp
ds
pusha
out
xchg
xchg
repz
aaa
xchg
push
lds
dec
lahf
aad
jae
jae
cmp
je
pop
mov
es
outsl
adc
push
sub
sbb
jne
and
mov
ljmp
es
jns
fnstsw
push
xchg
fldcw
mov
orb
dec
jmp
sub
mov
aad
jb
das
add
push
js
addr16
and
xor
mov
or
fisubl
movsl
addr16
mov
popa
movsl
or
js
in
cmp
adc
test
adc
mov
jae
in
and
sbb
nop
sub
pop
lret
icebp
addl
out
lds
ja
jns
into
and
test
inc
sbb
lock
inc
adc
lcall
xchg
enter
xchg
lret
leave
inc
sbbl
or
je
cmc
pop
pop
fcmovnu
push
popf
jo
xor
add
jb
sub
lahf
xchg
orl
imul
lea
cmp
xchg
adcl
movsl
jno
popf
pusha
pop
mov
imul
lods
jl
ret
mov
add
mov
push
inc
stc
es
arpl
pushf
imul
push
imul
or
test
xorl
movsb
aad
ret
mov
cwtl
adc
mov
or
xor
mov
scas
jae
mov
popf
xchg
push
jp
xor
pop
add
sbb
sbb
mov
push
inc
mov
test
pop
gs
stos
lock
adc
dec
xchg
pop
js
push
mov
dec
sbb
andps
sub
mov
sti
mov
cmp
xchg
sbb
mov
pop
cli
and
jno
icebp
inc
push
das
loop
inc
test
pshufw
push
add
sbb
popf
loopne
dec
in
lahf
cmpsl
jl
mov
xor
cltd
adc
mov
loopne
out
fndisi(8087
into
daa
jno
es
dec
lds
in
enter
xor
or
ret
stos
pop
or
cmpsb
push
dec
mov
sub
jns
and
xchg
mov
mov
mov
cwtl
sub
push
lcall
cwtl
sub
loop
inc
inc
fmuls
stos
jle
cmp
repz
lods
cwtl
adc
insb
pop
dec
jl
adc
xor
outsw
lret
in
inc
ret
jnp
idiv
mov
mov
mov
mov
xchg
and
sub
jnp
rolb
fdivl
sub
add
push
stos
dec
lahf
cld
insl
adc
push
and
test
pop
push
pop
adc
lea
lcall
dec
iret
shll
push
fsubl
push
lods
add
lahf
in
ret
jmp
sahf
imull
jnp
ficomps
push
xchg
jne
pop
jo
mov
popf
xor
lock
mov
xchg
xor
xchg
mov
jle
loope
dec
pop
adc
pop
packssdw
popf
fnstcw
imul
loopne
jae
mov
jmp
movsb
ret
mov
lret
pop
jo
stos
or
nop
sub
fstpl
dec
test
xchg
cmp
aas
push
push
adc
mov
mov
mov
jge
loop
decl
ficompl
int
cmc
fcos
dec
xchg
stc
xchg
jge
out
inc
jae
xlat
mov
and
inc
xchg
cli
lods
lretw
fsts
dec
fstps
mov
adc
add
sub
rol
mov
addb
aas
adc
sbb
mov
and
mov
xchg
iret
push
lcall
mov
ljmp
jns
xor
int
adc
into
movsl
and
jmp
pop
ss
inc
mov
lock
fidivrs
xchg
cmp
addr16
jp
sbb
test
pop
mov
mov
sbbl
mov
cmc
adc
insb
fcoms
in
in
add
daa
inc
mov
sahf
leave
adc
mov
add
jbe
mov
xchg
rol
outsl
mov
cmpsl
jle
imul
movsl
inc
jo
in
imul
test
sub
out
fmull
mov
pop
cmp
sbb
and
jne
fs
and
mov
sbb
cld
test
rol
mov
pusha
inc
and
lods
or
std
pop
cmpxchg
fwait
jecxz
jg
in
test
push
push
mov
addr16
inc
xor
push
pop
cltd
mov
jns
sahf
fdivr
adc
leave
xchg
mov
xlat
cmp
or
add
adc
gs
xchg
fadd
or
test
icebp
mov
xchg
jmp
daa
repnz
lret
dec
movsl
inc
test
ja
neg
dec
aad
lahf
setge
sbbl
ret
sarb
imul
adc
xor
fstps
jbe
hlt
push
xchg
insl
mov
arpl
mov
add
dec
pushf
add
cmpsb
jnp
sub
or
imul
test
daa
mov
mov
into
and
mov
fidivs
pop
dec
pop
scas
push
sbb
out
scas
das
fstl
test
cmp
mov
mov
data16
sub
iret
sub
stos
adc
pop
lret
push
stc
fidivrs
cmp
mov
xchg
lds
cmp
add
mov
mov
jmp
sub
mov
push
jecxz
push
faddl
sbb
mov
cli
xchg
add
into
roll
aad
pop
inc
sti
sbbb
or
mov
outsb
push
sub
leave
repnz
movsb
addl
pop
in
inc
ss
pushf
addl
mov
mov
add
notl
cmpsl
out
enter
fmull
xor
mov
inc
jbe
test
mov
arpl
out
aam
sbb
pop
pop
sub
frstor
adc
lahf
inc
imul
adc
xchg
push
repz
xchg
jge
mov
adc
adc
and
incb
cli
out
sahf
pop
movsl
rorl
mov
in
jno
enter
sti
or
stos
mov
adc
cmc
xchg
mov
inc
xchg
fdivrl
push
ficoms
mov
push
xor
push
pop
leave
jle
sar
fmuls
pop
ljmp
xchg
daa
or
aaa
push
push
pop
mov
mov
fcmovnu
and
inc
lea
hlt
jne
clc
mov
js
test
fwait
in
insb
or
dec
mov
mov
and
mov
repz
jb
negl
adc
pop
push
xor
or
pop
mov
js
scas
ljmp
jl
leave
pop
xchg
mov
jbe
ret
loope
mov
mov
sbb
and
cmpl
je
lret
sbb
sbb
std
and
inc
pop
mov
fs
fistps
add
mov
add
add
inc
xchg
rolb
lret
mov
clc
lds
leave
jp
or
cwtl
mov
pushf
movb
mov
orps
push
cs
jecxz
pusha
and
movsl
lods
inc
mov
orb
jmp
lcall
cmc
filds
or
add
adc
adc
into
mov
mov
add
sbb
stos
lret
pop
mov
or
mov
test
pop
ss
mov
out
or
es
mov
inc
in
jbe
int
or
cmpsb
lock
in
jl
dec
jae
test
sbb
pop
fists
push
gs
mov
jne
loop
subb
jp
clc
je
push
daa
icebp
lcall
xor
and
push
push
pop
cltd
jns
rorb
cmp
fisttpll
push
or
pusha
aas
jae
xchg
sbbl
inc
or
xchg
jns
push
arpl
loopne
xchg
push
enter
stc
inc
push
ss
icebp
frstor
out
int
inc
clc
mov
cmp
lcall
das
jae
xchg
xor
xlat
push
pop
hlt
lret
std
out
fstpl
jg
add
cmp
mov
gs
lods
cmpsb
jno
cmp
lret
xchg
and
mov
mov
mov
pop
xchg
adc
inc
pop
fcoms
out
push
sti
nop
jnp
in
sbb
mov
cmp
xchg
sti
dec
xchg
push
sbb
xor
cmp
es
push
popa
push
pop
push
das
push
test
and
call
sub
cltd
clc
aad
sub
mov
xlat
popa
pusha
sahf
cwtl
not
push
pusha
jl
jecxz
jp
mov
iret
ljmp
jge
mov
int3
das
and
sub
jbe
push
roll
insl
js
aad
pop
imul
adc
loopne
incb
lret
or
mov
lock
cwtl
in
pop
das
loope
sar
lret
jo
push
sbb
mov
jb
mov
in
jg
ljmp
mov
xor
shrb
addr16
adc
inc
int
in
jno
adc
or
and
sbb
imul
js
xchg
push
pop
shlb
sbb
mov
mov
sbb
jg
cmc
addb
add
inc
insl
cmp
lock
mov
cmp
inc
jb
cmp
negb
jl
adc
lds
push
pop
fcmovb
pop
adc
add
push
xor
inc
add
jno
idivb
loop
rcll
sahf
jle,pt
leave
scas
push
dec
popf
mov
fists
in
cmp
add
adc
sbb
sti
push
pop
lods
repz
aam
icebp
xchg
jle
pop
nop
dec
pop
iret
jge
jl
loopne
jae
push
mov
mov
shrl
jl
pop
int
lret
xorb
subl
lcall
shlb
insb
decl
sub
dec
inc
jb
xchg
ss
pushf
sbb
xchg
fistl
mov
daa
outsl
jno
cltd
push
and
jb
cld
or
in
xchg
jno
mov
adc
popa
jb
push
pop
mov
mov
xchg
push
sahf
out
add
adc
cmp
ss
and
mov
adc
test
dec
lea
jae
jp
pusha
sbb
insl
adc
scas
aad
rcrl
in
stc
fildl
push
xchg
pop
icebp
cwtl
adc
sub
adc
push
test
sbb
je
jmp
pop
aaa
aad
mov
lock
arpl
jecxz
insl
ljmp
pop
mov
push
jns
shl
int3
pop
pop
movsb
movsl
fidivrs
mov
sub
mov
ja
rolb
in
mov
and
lods
push
push
inc
stc
loop
push
cmp
mov
push
jmp
ret
pop
pop
pop
pop
inc
jo
outsl
fstps
jne
hlt
sbb
faddl
in
ds
fldenv
xor
ror
cmp
lret
xchg
cmp
imul
call
mov
das
loopne
ja
loope
xchg
xor
jmp
aad
or
inc
cld
sub
addr16
xor
loop
loop
in
jns
pop
mov
icebp
push
jno
mov
stos
pop
and
or
pop
insb
jno
xchg
adc
push
push
push
jo
repnz
lret
add
or
and
idivb
ja
and
add
mov
push
movsb
dec
mov
and
imul
out
int3
nop
fidivrs
xchg
mov
cmc
fwait
mov
insb
xchg
fsts
pop
inc
dec
jo
lea
mov
mov
lods
pop
jae
push
sub
outsl
sti
std
inc
shl
cld
adc
movsl
sub
cmp
add
sbb
and
fistps
sub
scas
out
je
dec
pusha
push
dec
mov
out
and
shlb
repnz
cltd
outsl
bnd
pusha
shll
add
je
xor
cld
dec
dec
adc
cs
pop
jne
insl
shl
cmp
or
rcl
cmp
mulb
xchg
sub
mov
xor
mov
loopne
cwtl
leave
xor
shlb
mov
outsl
loopne
cld
cwtl
lea
jns
je
pop
arpl
in
lahf
mov
and
pop
in
xor
cwtl
cmp
xor
std
fisubrs
int3
inc
ret
stc
jle
or
jg
mov
repnz
inc
mov
insb
aam
add
and
rcrb
shll
cmpsb
pop
inc
ljmp
dec
adc
mov
xchg
push
out
into
in
and
pop
xchg
push
xchg
mov
es
cltd
cs
fcmovnu
bound
cli
movsb
mov
movsb
ret
lret
icebp
inc
or
mov
icebp
cmpsl
movsb
xchg
sbb
push
dec
insl
aad
test
sub
addr16
popf
mov
inc
jae
movsl
das
ljmp
lods
xor
ja
or
pop
jae
cmpl
sarl
aad
aad
bound
fsubrs
pop
cmp
cmp
dec
test
out
adc
loopne
ljmp
add
mov
mov
aam
ljmp
or
movsl
jno
fisubrs
cmp
mov
and
divl
fs
cmpsl
xor
jno
xor
or
xor
movb
inc
loop
xchg
push
or
scas
fstpl
dec
orl
adc
mov
outsb
sbb
aam
into
cmp
xor
addl
sbb
or
pop
adc
mov
xchg
dec
push
aas
adc
push
pop
ss
inc
jbe
cmp
insb
mov
sti
outsl
lods
xchg
fnsave
aam
fsubl
test
jne
mov
xor
sbb
xchg
push
fcoml
mov
pop
cmpsl
cwtl
aam
push
movsb
cwtl
mov
roll
popa
inc
pushf
enter
ljmp
leave
nop
xor
in
outsl
dec
inc
xorl
int
mov
and
test
loope
loopne
cmp
out
out
xchg
outsb
sub
scas
inc
movsl
notl
mov
jns
leavew
cld
push
stos
xchg
xchg
subl
rorl
add
or
pop
fwait
dec
out
cmpsb
or
out
in
repz
daa
cmp
fisttps
pop
fucomp
xchg
add
xor
adc
sahf
xor
mulb
int
mov
fstl
xchg
sarl
adc
mov
lods
in
add
mov
stos
out
mov
shll
pop
lcall
js
push
push
xchg
mov
lods
push
xchg
fs
leave
mov
xchg
mov
dec
sub
and
test
rorb
daa
sti
adc
cmp
jecxz
add
call
or
xchg
inc
and
cwtl
addr16
mov
inc
mov
jae
and
js
or
dec
shrl
pop
andb
adc
add
mov
pushf
or
and
mov
mov
mov
popf
test
daa
mov
js
cld
sub
add
test
dec
inc
mov
sarb
add
push
sub
subl
xchg
pop
inc
addr16
fwait
shrl
xchg
repnz
call
repnz
xchg
pop
insl
dec
lock
xor
cmp
inc
iret
int3
inc
sbb
leave
xlat
jbe
stc
cltd
dec
pop
stos
sub
shrl
xor
lahf
adc
es
adc
mov
jnp
stos
inc
out
pop
xor
sbb
mov
out
jno
nop
shrl
xchg
pop
bound
mov
pushf
add
in
mov
sbb
ss
jo
roll
sub
aas
adc
pop
shll
jno
push
mov
lods
mov
push
mov
fldt
cld
push
jmp
clc
pop
push
xorb
dec
mov
cmpsb
inc
loop
std
shl
push
cld
mov
xchg
push
add
pop
shll
lcall
int
daa
rolb
lret
cmp
fcomps
cmp
xchg
hlt
pop
mov
inc
lea
inc
cmpl
mov
scas
gs
ret
mov
pusha
lea
pop
fimull
pop
in
pop
test
mov
scas
xchg
cmpsl
jecxz
inc
dec
push
int3
push
pop
mov
inc
sbb
push
mov
std
xchg
pop
lret
push
test
sbb
rclb
or
push
outsl
xchg
push
jl
xor
out
mov
movsl
push
clts
addb
outsb
gs
bound
cli
cmpsl
push
insb
jne
and
push
cltd
dec
mov
push
test
mov
mov
inc
clc
imul
or
mov
stos
xor
cmc
adc
aaa
and
arpl
dec
jg
cs
out
jo
fcoms
shlb
arpl
std
and
shr
sub
xor
test
scas
cs
rcrl
in
and
mov
sub
jns
andb
in
xchg
and
jno
shlb
pop
push
ret
or
xchg
scas
add
setge
dec
and
inc
test
or
mov
sub
push
std
in
pop
mov
call
jnp
sub
pop
addl
ja
mov
daa
pop
push
xlat
sbb
xor
cmp
push
pcmpeqb
dec
pop
stos
shll
jmp
cld
cltd
mov
dec
ss
mov
mov
push
rorb
loope
push
add
xor
scas
xchg
sbb
and
pop
popf
sbb
lods
sbb
mov
sub
adc
xlat
and
mov
imul
lds
add
sbb
jo
adc
outsb
and
test
xchg
xor
hlt
push
xchg
lods
mov
sar
cmpsl
insb
mov
adc
movsl
mov
fs
adc
lret
movups
inc
lock
add
mov
xlat
leave
adc
mov
lret
sbb
gs
insb
or
fwait
rolb
adc
and
and
les
daa
jecxz
mov
fs
hlt
call
lret
aaa
push
icebp
leave
dec
mov
cltd
or
leave
es
and
aad
pop
popf
je
and
mov
pop
jo
mov
popa
clc
daa
loop
stc
pop
cmp
out
aaa
xor
mov
cmp
mov
jge
push
mov
mov
sbb
xor
mov
add
dec
dec
iret
fsqrt
mov
std
dec
xor
lds
add
stos
xor
popf
ja
jnp
adc
test
andl
xor
pop
inc
int
pop
daa
inc
pop
adcl
add
movsl
push
jb
xlat
add
je
add
mov
addl
fdivl
mov
lods
mov
mov
pushf
adc
push
nop
xchg
aad
push
fisubrl
jecxz
jmp
lahf
dec
xor
adc
cmp
push
iret
ljmp
in
stc
adc
xor
inc
push
jb
pusha
nop
pop
sub
mov
icebp
jl
adc
cmp
push
ror
xchg
pushf
inc
cld
insb
adc
data16
or
shr
das
loopne
xchg
pop
je
mov
pop
pop
or
cwtl
add
inc
call
ja
clc
mov
js
add
cmp
scas
aad
sbb
out
rolw
or
scas
sub
ss
std
and
cld
pop
test
gs
push
mov
push
shll
mov
rcrb
mov
into
clc
ljmp
arpl
push
fistpll
sbb
div
mov
imul
popf
pop
adc
mov
xchg
loope
fwait
mov
fbld
mov
add
mov
int3
cld
les
mov
jnp
in
call
enter
call
pop
pmovmskb
bnd
xchg
jmp
je
pop
adc
fcompl
mov
in
data16
sub
into
and
xor
adc
ficoml
jno
mul
out
inc
pusha
addr16
adc
mov
in
cmp
inc
mov
jle
dec
mov
es
aad
xchg
js
cmpsl
jecxz
ds
insl
fwait
aam
call
fsubrp
pop
int
cmp
aas
sbb
push
popf
in
xlat
pop
xchg
fcompl
scas
mov
adc
fsubl
pop
je
mov
xor
int3
shl
jmp
pop
daa
into
sub
xchg
dec
leave
adcl
push
push
add
sar
gs
mov
mov
test
push
push
adc
jns
sub
loope
lret
inc
or
ljmp
fadd
lahf
cmp
and
sbb
dec
add
adc
push
inc
in
aaa
addr16
out
clc
out
das
jb
fs
cmc
inc
or
sbb
push
fldl
dec
add
inc
out
rolb
fstps
outsl
rcrl
push
sbb
xchg
cmp
mov
outsb
aad
mov
jbe
pushf
loope
in
xchg
cs
jge
popf
inc
and
outsl
sbb
sub
push
out
jmp
int3
fidivl
jbe
mov
ret
ds
xchg
add
js
out
repz
jmp
dec
pushf
mulb
jns
cltd
push
enter
icebp
mov
insl
sahf
dec
jnp
cmp
inc
ret
sub
cwtl
leave
ss
xor
mov
test
push
sbb
sbb
pop
add
xchg
mov
icebp
dec
add
gs
xor
cs
sbb
adc
mulb
push
or
fstl
cli
out
inc
loop
jl
mov
in
jne
out
sahf
jb
loopne
aas
mov
dec
stos
mov
mov
mov
repnz
cmp
roll
or
bound
jb
shrb
sbb
mov
pop
cmp
shll
push
pusha
inc
mov
adc
sbb
stc
cmp
int
mov
cmpsb
dec
and
rcr
xchg
pop
mov
sub
movsb
in
mov
xchg
outsb
pushf
iret
jmp
nop
xor
fbstp
adc
orb
movsb
jecxz
jae
cmpsb
test
aas
into
jle
dec
or
repnz
push
int
push
pop
xchg
jge
mov
jg
mov
sub
std
lcall
ja
sbb
push
xlat
aaa
sub
das
jmp
cmpsl
leave
inc
in
cmpsl
imul
dec
js
or
mov
jl
lahf
pop
fstl
aaa
mov
dec
or
bound
mov
loopne
or
int
test
pop
loopne
xor
mov
shlb
das
push
js
or
mov
push
and
call
add
jge
or
sbb
mov
aas
test
fldl
ret
pop
mov
inc
rclb
mov
add
mov
clc
shlb
fistpll
fidivs
decl
jp
das
push
dec
mov
jmp
outsl
pop
adc
addr16
push
cs
mov
lcall
cs
addl
pop
mov
std
cli
dec
test
pop
icebp
std
popf
dec
inc
lods
lock
jg
jae
addb
out
push
incl
hlt
scas
jb
push
mov
es
insb
xchg
sub
pop
pop
and
cmovbe
pop
cs
mov
cld
lea
or
mov
bound
push
push
jmp
dec
cltd
pushl
out
dec
cmp
cmc
pushf
cmp
pop
cmp
nop
in
fs
scas
pop
fcmovnb
jge
mov
sbb
jle
les
dec
push
js
xlat
mov
aam
lds
jbe
add
xor
xchg
icebp
mov
xchg
dec
dec
out
pop
adc
or
mov
pop
inc
mov
movsb
fcoms
andl
push
cs
insb
enter
repnz
jbe
add
call
pushf
mov
mov
insl
lret
arpl
xchg
les
je
inc
xor
pop
popa
push
sub
inc
sbb
mov
adc
xor
in
cmp
pop
inc
out
mov
lcall
push
push
mov
dec
fisubrs
int3
push
mov
sub
and
dec
cmc
mov
hlt
sub
pop
ds
inc
dec
data16
stos
dec
jae
xor
icebp
mov
ret
dec
adc
xchg
ja
ljmp
stos
push
or
aad
mov
inc
cld
sub
xchg
stos
dec
daa
std
out
push
int
dec
ljmp
inc
add
and
in
mull
leave
pop
mov
clc
pop
testb
shll
push
xchg
push
arpl
insl
fwait
push
inc
or
roll
xor
xor
pop
jb
push
pusha
pop
mov
jae
sub
mov
cld
pop
test
and
mov
mov
mov
mov
mov
pushf
adc
fidivrs
push
mov
mov
fstps
cmp
clc
test
dec
adc
mov
loop
call
dec
add
cli
and
ret
sbb
inc
mov
inc
fidivl
inc
sbb
lea
call
xchg
aad
fwait
cli
aam
dec
sbbl
stc
es
adc
out
pushf
and
movsb
push
add
ud2
loope
sub
mov
dec
xchg
cltd
cld
inc
mov
scas
cmp
lcall
pop
mov
or
push
push
outsl
inc
addb
sub
jle
xor
cmpsl
scas
cmp
fistpl
and
notb
and
cmp
lods
lcall
or
arpl
cltd
xchg
fstps
cmp
out
icebp
xor
ss
xor
insl
das
jnp
push
sbb
lahf
mov
push
and
lret
nop
adc
jnp
mov
or
mul
pop
push
into
mov
xor
pop
push
push
inc
out
inc
jecxz
mov
push
mov
or
cmp
call
daa
movsl
jno
sarl
push
jae
push
mov
outsl
cmc
mov
and
adc
lret
mov
jnp
mov
add
push
xor
push
mov
and
mov
mov
lret
mov
pop
sub
mov
scas
pushf
jo
cmp
and
mov
mov
inc
or
mov
dec
popf
rcl
adc
and
jae
pop
sub
fldenv
cmpsb
mov
cmp
mov
iret
cwtl
mov
leave
dec
cmpsb
mov
arpl
inc
xchg
pop
cltd
loope
mov
addb
hlt
dec
sbb
pop
sub
clc
xor
prefetchw
arpl
pop
leave
mov
ds
jnp
dec
pop
mov
fmuls
push
dec
pop
or
mov
and
pop
icebp
scas
in
or
xor
sub
jg
lock
stc
mov
mov
mov
rolb
mov
gs
cltd
or
adc
loope
in
ljmp
mov
les
mov
movsb
out
push
jp
jbe
mov
or
pop
andb
pop
mov
push
jbe
mov
in
lock
push
or
adcb
fdivl
int3
insb
addr16
movb
loop
push
repz
mov
mov
xor
fcomps
cmpb
mov
fisttps
xchg
lock
add
jb
repnz
popa
faddl
cmpsb
lds
insb
adc
imul
sub
cltd
xor
lret
pop
inc
in
adc
scas
xor
bound
arpl
mov
frstor
push
out
faddl
or
and
repnz
mov
sub
aas
sub
xor
xor
jmp
xchg
cmpsl
mov
es
aaa
xor
push
mov
mov
lahf
xchg
mov
xor
jg
xchg
push
push
sbb
jle
cmp
sub
or
pop
test
dec
xor
cwtl
sbb
sub
mov
insl
or
loop
test
sbb
sbb
xor
sbb
adc
outsl
mov
and
cld
ret
into
mov
cld
push
or
mov
shrl
push
mov
fcmovnb
inc
mov
and
pop
loop
xchg
mov
adc
adc
mov
int
mov
and
or
adc
sarb
add
jno
repnz
movsb
push
stos
mov
dec
xorb
inc
idivb
push
pushf
push
cld
imul
or
xor
popf
pop
subb
clc
sub
fyl2xp1
and
jo
add
rsm
push
outsb
mov
push
movsl
icebp
sbb
xchg
jae
sbb
mov
ret
inc
cmp
lcall
popf
pop
and
mull
pushf
int3
repz
sub
mov
or
dec
fldl
std
scas
mov
loopne
add
cmp
mov
daa
jnp
and
sbb
jno
xor
test
push
adc
call
pop
ret
in
lret
enter
xor
xchg
mov
ja
gs
push
mov
push
sub
inc
icebp
inc
dec
aaa
subb
lahf
mov
imul
sbb
lahf
das
push
aaa
xchg
jle
hlt
fwait
in
and
cs
aas
int3
cld
aas
lret
inc
bound
es
mov
jmp
rclb
cli
or
xlat
jb
fimull
cmpsl
xor
cwtl
ret
jge
xor
xchg
sar
sub
fs
xchg
jbe
out
pushf
stos
aas
inc
mov
jae
or
and
pop
cmpsl
or
push
dec
into
push
js
pop
and
push
mov
insb
mov
mov
jle
fs
sbb
sub
sbb
or
xlat
or
xor
sbb
jge
and
sbb
out
test
or
lret
xchg
jnp
lock
jp
xchg
stos
int3
mov
fisttpll
mov
repz
outsl
mov
nop
mov
push
filds
loopne
mov
fstps
gs
hlt
mov
mov
pusha
xor
lahf
and
outsb
pop
out
pop
jecxz
stos
pop
insb
dec
push
rorl
shll
aad
mov
cmp
inc
es
bound
imul
inc
add
xor
leave
push
vmaxss
fsubrl
lret
rclb
cmp
inc
loopne
mov
inc
jnp
xchg
movsl
dec
aad
inc
sbb
mov
mov
jno
dec
out
jmp
enter
mov
gs
and
inc
es
aad
xchg
stos
into
mov
and
in
add
insb
andb
imul
clc
addl
popa
adc
dec
icebp
pop
popf
lret
xchg
inc
push
inc
pop
pusha
movsb
aaa
pop
sbb
pop
inc
xchg
jno
js
rcll
es
repz
adc
lret
cmp
outsl
scas
fdivs
call
adc
mov
push
lahf
aaa
jge
sbb
scas
dec
and
add
popf
lods
jne
andl
imul
je
in
and
push
mov
lret
jno
lds
fstpl
inc
xor
xchg
jg
clc
push
jns
jbe
iret
adc
fwait
mov
rcll
jae
in
sbb
mov
and
jg
lea
jl
lds
mov
cmp
cmp
stc
cmp
in
push
loope
adc
clc
insb
or
or
jg
jecxz
clc
es
sahf
nop
pop
jo
mov
shll
mov
pop
push
jecxz
dec
push
xor
in
into
aam
cmpsb
cltd
ds
cmp
jge
jg
stos
sbb
mov
pop
stc
clc
lret
dec
outsb
repnz
sub
out
pop
dec
mov
insl
mov
fidivrs
lea
and
adc
inc
idivl
subb
sub
lods
pop
adcl
mov
les
xchg
ret
js
int
cmp
jbe
and
sbb
add
push
les
push
push
shrl
dec
stos
lret
mov
sub
fnsave
insb
lods
mov
or
push
cltd
xor
inc
std
fwait
add
or
pop
and
scas
addr16
jmp
divb
pop
fldcw
jge
xchg
lret
jns
inc
cli
cld
jae
imul
sti
movsb
movl
ja
popa
pop
gs
dec
fmulp
xor
adc
mov
mov
js
faddl
clc
pop
mov
popa
mov
add
pusha
ljmp
outsb
das
mov
or
mov
adc
push
inc
in
mov
mov
inc
jmp
push
fdivs
and
ss
inc
sahf
xchg
dec
gs
jg
lahf
dec
push
dec
loope
push
xchg
mov
fwait
pop
out
and
cmpsb
sub
daa
test
jo
sub
inc
cmp
mov
dec
popf
and
aad
sahf
fstpt
lret
mov
loopne
movsl
ljmp
mov
in
call
imul
pandn
xchg
loopne
dec
addr16
push
adc
cmp
jno
adc
add
rorb
test
sti
xchg
cmp
push
and
sarb
xorb
mov
inc
cmp
mov
outsb
push
scas
repnz
lock
js
dec
mov
xchg
std
sarl
je
inc
dec
in
icebp
pop
jne
or
or
jmp
leave
bound
push
xchg
push
sub
cld
es
pop
mov
sar
and
sbbl
clc
mov
or
rol
push
push
shrl
push
xchg
jl
sete
std
xor
push
out
lods
stos
sti
mov
pop
adc
in
jg
sub
jae
push
lret
push
lods
sahf
mov
out
mov
in
shrb
dec
add
inc
mov
or
insl
sub
das
loop
nop
pcmpeqd
push
jo
fsubl
lret
mov
divb
mov
test
cmp
sub
loop
jo
fists
sbbl
pop
push
js
xlat
subb
mov
out
dec
hlt
push
jbe
or
in
and
xchg
clc
in
xor
imul
div
pop
aad
jp
mov
pop
sahf
mov
imull
xor
repz
sub
ljmp
sbb
dec
push
js
dec
lock
xor
mov
imul
lret
jo
mov
gs
jl
push
xchg
daa
lea
sub
in
mov
mov
and
mov
pop
sbb
dec
mov
andl
jno
sbb
stc
out
out
cltd
xchg
in
xor
mov
jmp
out
pop
adc
repnz
pusha
testb
cmp
ret
push
in
dec
sar
jb
pop
mov
inc
cmpsl
xchg
pop
add
mov
sub
ja
mov
les
add
addb
out
iret
nop
cmpb
or
xor
nop
cmc
or
pop
sub
bound
int3
into
push
loopne
jecxz
and
cmpsb
cmpsw
shlb
outsb
sahf
pop
insb
cmp
sbb
ja
mov
sub
xor
mov
xchg
xchg
jp
mov
dec
dec
shll
call
adc
inc
shll
sub
or
inc
mov
enter
mov
scas
cmp
frstor
into
insb
sbb
push
scas
insl
das
jbe
cmp
xchg
jle
xchg
scas
or
les
outsl
push
das
mov
out
push
and
add
mov
test
or
arpl
xor
adc
mov
inc
xchg
push
in
xor
pop
sub
lahf
xor
cmpw
push
mov
xchg
inc
iret
cmp
int3
dec
xchg
test
sub
ret
lock
sub
movsl
jmp
sbb
cmp
pop
test
push
cmpsl
test
xor
or
add
cli
hlt
sub
sbb
pop
ljmp
cmp
push
fs
jmp
pop
mov
xor
adc
loopne
add
fmul
test
inc
push
xchg
mov
shll
andl
jmp
jmp
lret
or
cmp
and
mov
jae
lahf
inc
mov
ljmp
ret
out
mov
loope
pop
mov
rcl
and
xorl
jns
imul
and
fimuls
mov
xor
out
dec
sub
mov
adc
xlat
xor
in
shl
push
scas
sub
enter
adc
or
fdivl
add
push
adc
jle
stos
loopne
add
dec
repnz
popl
or
adc
and
adc
insb
pop
in
mov
stos
mov
or
sub
lock
jle
mov
adc
or
push
ret
mov
lret
jmp
aaa
adc
xchg
push
push
xor
loope
push
cmp
ljmp
int
push
jne
pop
addr16
pop
ds
sbb
cmp
daa
inc
push
mov
dec
dec
leave
mov
pop
lcall
adc
add
daa
andl
mov
std
pushf
or
leave
sbb
in
sub
dec
mov
xlat
mov
shrl
cmp
mov
mov
xor
xchg
xor
lcall
push
xchg
jmp
mov
popf
push
dec
hlt
adc
stos
jmp
jno
sub
push
lahf
or
inc
pop
sub
dec
mov
jb
into
neg
dec
pop
xor
cld
push
std
out
test
into
imul
xchg
sub
imul
outsb
aas
sub
dec
sar
mov
lock
fs
add
push
jmp
pop
roll
cmp
inc
jl
xchg
mov
into
push
cmp
shll
add
std
sub
push
loop
adc
sbbb
jbe
sti
sbb
aam
test
sub
into
jno
jg
jecxz
out
lods
rorb
mov
push
xchg
or
daa
mov
inc
imul
movsl
test
and
cli
std
mov
xor
loope
scas
sbb
movsl
or
sbb
add
insb
decl
and
cmp
cmc
push
xchg
add
mov
sub
and
mov
addr16
mov
and
jmp
lcall
pop
jg
movsl
loope
sbb
std
pop
xor
std
adc
sub
rcr
push
lock
push
mov
dec
add
push
mov
mov
icebp
jmp
xor
in
add
divl
shr
mov
aam
repnz
div
and
sbb
call
dec
sbb
ret
mov
adc
movsl
popf
and
mov
dec
pop
in
lds
cmpsb
in
lea
xor
lods
xchg
mov
outsb
push
and
or
incb
aaa
sbb
insl
add
sub
add
test
lret
pusha
or
mull
aas
cmpsb
lods
ss
arpl
mov
add
mov
fwait
xor
imul
push
or
xor
jae
pop
xabort
or
xchg
xchg
aam
icebp
bswap
les
add
nop
jae
mov
pop
stos
mov
push
push
sbbb
ljmp
or
pop
and
test
in
icebp
addl
popf
cmp
mov
shrl
insb
in
jnp
aam
leave
mov
dec
pop
sbb
xchg
ja
insb
push
fists
jl
mov
xchg
sbb
cmpsl
pop
adc
mov
xchg
pop
and
rclb
test
inc
and
fsubs
in
add
and
dec
lea
mov
in
lret
int3
dec
xchg
add
cli
dec
add
push
cmpsl
push
testb
xor
jmp
icebp
leave
mov
mov
fisttpl
in
cli
add
cmp
test
fnstcw
push
cmc
aas
mov
insl
movsl
or
aad
dec
mov
xchg
push
mov
mov
incl
lock
in
push
xchg
push
adc
imul
out
mulb
and
popf
pusha
lea
stos
popa
loope
scas
pop
dec
mov
mov
adc
cmp
iret
ja
sub
xchg
ljmp
shll
mov
mov
xchg
fdivl
inc
sbbb
aaa
movsb
sub
mov
loop
mov
fnstenv
inc
push
mov
loope
push
lds
shrb
push
fistpl
sbb
sub
xchg
dec
push
jbe
push
and
sbb
or
push
pop
pop
push
dec
jmp
sbbl
lods
shlb
jns
xchg
jp
ret
div
mov
sbb
shlb
pop
fwait
xchg
fnstsw
sti
pushf
dec
insl
xchg
inc
aaa
jl
inc
pop
pusha
fwait
xlat
mov
pop
orl
jge
add
sub
lds
enter
jl
cmp
sahf
cmp
jp
std
ljmp
imul
pop
xor
adc
scas
cmp
repz
sar
addr16
xchg
add
in
leave
loop
out
cs
cwtl
clc
xchg
inc
sub
in
cmp
mov
lret
ret
inc
icebp
loop
mov
add
fidivl
insb
mov
jmp
mov
add
cmpsl
push
jb
adc
cmp
int3
mov
daa
andb
aad
call
out
adc
lds
sti
jmp
les
push
pop
push
daa
fldt
lahf
insb
ds
mov
fs
dec
lods
cld
inc
divb
ffree
adc
into
push
scas
aam
pop
xchg
in
sti
xchg
inc
std
sub
sti
push
jne
adc
pop
lahf
jp
sbb
cmpsb
push
inc
shrb
xor
loope
cli
and
sub
sti
je
lea
inc
call
add
sbb
insb
scas
push
scas
xor
call
jne
xchg
mov
mov
xchg
sub
cmp
jb
lock
xlat
in
or
sub
cmpsl
in
xor
dec
push
dec
das
xor
pop
jb
std
mov
sub
clc
das
sub
mov
adc
mov
dec
rclb
loope
push
lods
leave
popf
outsb
mov
lea
push
xor
cmp
pop
ret
adc
cld
mov
movsb
push
sbb
pusha
dec
pop
dec
int
mov
les
enter
inc
mov
jmp
push
in
call
mov
sbb
adc
dec
scas
movsl
add
je
icebp
add
leave
jle
dec
pop
cmp
or
outsl
mov
jnp
cmp
cmp
inc
xchg
push
pop
pop
sub
and
sub
mov
leave
push
push
enter
inc
fs
jnp
rorl
outsb
cmp
fwait
dec
inc
pop
inc
sbb
decl
ljmp
jecxz
imul
xlat
xchg
inc
std
into
sbb
roll
test
jg
ffreep
repz
aaa
inc
jle
ss
in
in
cmp
jne
and
loop
and
dec
cmp
out
cmp
or
pop
popa
ret
ljmp
mov
lock
jmp
pushf
in
pusha
push
xor
decl
cmc
shlb
mov
push
mov
xor
or
roll
sub
sbb
sub
mov
rol
and
mov
aad
mov
xor
insb
jle
and
sbb
xchg
push
ja
repz
jmp
out
push
cmp
test
aas
fnstcw
out
mov
jg
test
pop
xor
mov
mov
mov
js
es
inc
test
jb
lahf
in
jp
xor
out
jmp
bound
in
pop
repnz
inc
lods
jg
daa
or
and
in
popf
cmp
test
int3
mov
push
andb
cld
test
xchg
repz
inc
xchg
xor
or
aad
stos
cmc
pop
sbbb
jb
pop
imul
into
jae
pop
push
pop
inc
jae
js
pop
sbb
mov
inc
cmp
jb
arpl
mov
mov
movsb
mov
into
inc
pop
rcrl
movsb
scas
std
fbstp
mov
neg
ret
cmp
pop
pop
sbb
test
dec
out
das
leave
movsl
add
push
nop
imul
into
dec
xchg
cwtl
pusha
and
sub
out
mov
sub
push
jne
jo
jecxz
ljmp
les
test
aam
pop
push
add
or
sub
enter
imul
sub
in
xchg
add
gs
pop
jb
xchg
inc
movsl
pop
js
in
out
adc
call
cmp
repz
xchg
mov
pop
test
add
lret
nop
sub
std
rcrl
mov
adc
wrmsr
mov
dec
fildl
xor
cltd
or
testb
inc
test
bound
xchg
movsl
adc
xchg
fsubp
add
ja
xor
push
sbb
mov
cmp
or
loop
fsubl
or
sbb
adcb
push
and
inc
arpl
or
es
push
sbb
lret
sbb
and
or
pushf
cmpsl
addr16
nop
xchg
adc
pop
sbb
mov
rol
pop
call
mov
push
insl
lahf
sub
mov
lret
scas
out
push
xorb
pop
out
cmp
shr
sahf
dec
jle
shll
ret
xor
pusha
push
cmpsb
inc
icebp
mov
cltd
xor
jbe
push
aam
jp
push
or
int
lret
cmp
cmp
mov
loopne
loop
out
loop
adc
test
clc
xchg
test
cmp
adcl
into
repnz
int3
cmp
jo
xor
mov
adc
data16
imul
ss
add
repnz
fmull
add
sbb
std
dec
das
aad
rcrb
rcrb
movsl
jne
pop
xor
call
aaa
xchg
push
push
hlt
pushf
ds
leave
push
in
sub
nop
adc
sbb
and
mov
jl
adc
fsubrp
add
dec
adc
popa
xchg
add
out
mov
push
or
dec
fs
add
std
mov
movsl
cmc
test
popf
push
divl
pop
aaa
shlb
push
es
mov
in
xor
xor
std
test
pop
test
mov
cmp
push
iret
dec
jle
and
mov
loopne
clc
push
xchg
fcmove
push
bound
inc
fldl
cmpsb
adc
sbb
or
out
dec
fadd
test
dec
in
push
sbb
mov
aad
xor
adc
outsl
fcmovne
or
sbb
test
jle
sbb
add
fisttpl
lcall
popa
clc
scas
mov
inc
adc
imul
pop
fsubl
add
hlt
in
lods
rcll
lcall
adc
scas
and
out
fmuls
add
cltd
push
daa
fidivrs
dec
jl
inc
inc
adcb
outsl
push
mov
lock
or
fstl
in
out
iret
fidivrl
push
jbe
add
cmp
int3
cltd
adc
inc
pop
push
pop
notb
mov
in
inc
mov
push
out
inc
jp
or
cmpsb
das
fs
lods
in
jnp
jge
pop
enter
mov
pop
mov
outsl
mov
jno
inc
sbb
dec
sub
push
aam
jnp
xchg
mov
add
lock
mov
pop
adc
and
mov
outsb
push
mov
or
lods
mov
or
sub
mov
mov
lods
adc
jo
or
jb
insb
pop
adc
sbb
jnp
cli
or
jo
mov
outsl
div
mov
sbb
xchg
dec
xchg
es
or
lret
cmp
cmpsl
inc
rcr
push
repz
stos
mov
enter
xchg
push
pop
cmp
mov
add
clc
fcomip
scas
jbe
insb
into
stos
xchg
pop
pop
jmp
rclb
ljmp
notl
dec
inc
inc
fidivrl
push
in
lods
xor
outsb
mov
mov
xchg
push
push
push
mov
js
out
in
jne
sar
push
dec
push
jbe
mov
or
cmp
ret
in
test
sbb
popa
shl
in
call
fists
sub
cmp
mov
pop
insb
sub
mov
mov
mov
mov
repz
xchg
sbb
and
rcr
mov
sbb
mov
or
lea
pop
aaa
xchg
push
adcb
sbb
out
adc
inc
xlat
ljmp
ljmp
jmp
mov
cmp
xor
enter
jl
loopne
jae
mov
jbe
pop
outsb
mov
push
cmpl
xchg
cmpsb
mov
das
fs
and
mov
mov
dec
in
loopne
mov
popa
shl
repz
cmp
push
nop
xor
push
push
xchg
cs
mov
push
sub
push
jb
icebp
outsb
mov
mov
iret
mov
xchg
sub
push
mov
and
sbb
mov
jbe
out
fisttpl
dec
sub
rcrl
push
subl
sti
dec
xor
lcall
mov
add
jbe
mov
sub
out
lea
inc
cmc
mov
mov
loope
inc
push
aam
add
add
add
popf
cmp
inc
or
pushf
jne
xor
xchg
int3
mov
pop
and
in
pop
mov
imul
movsl
inc
movsl
inc
stc
push
into
inc
sbb
rclb
push
push
addr16
jnp
or
sub
fbld
xchg
push
lret
or
inc
aam
or
lock
mov
in
cmp
in
lcall
fdivs
js
test
mov
in
loope
mov
daa
inc
mov
in
jb
or
popf
mov
sbb
fwait
js
cmp
pop
pop
xchg
push
adc
std
or
ja
push
mov
in
mov
sub
loope
iret
popa
pop
faddl
cli
xchg
and
popa
pop
inc
xchg
jno
aam
mov
mov
aaa
shr
inc
xchg
mov
outsb
add
fstpl
es
cmp
cmp
enter
test
cmpsb
jmp
mov
enter
mov
xlat
xchg
lcall
loopne
mov
loopne
pop
sti
iret
push
xor
into
cmp
enter
rcr
adc
test
outsb
and
cld
push
jnp
out
lea
sub
inc
push
push
outsl
push
push
mov
lahf
jle
xchg
mov
dec
out
cmp
fwait
and
aad
repnz
mov
cmp
cmpsb
xchg
cld
pop
cmp
lods
leave
lods
inc
push
ds
sarl
out
dec
idivl
or
scas
scas
jo
lret
in
sub
fidivl
mov
add
in
xchg
aam
addl
inc
sub
je
jae
notb
sbb
int
cmp
test
push
mov
mov
data16
fs
ja
push
dec
fstpt
xchg
add
mov
xor
imul
and
mov
adc
mov
sahf
pop
adc
fwait
adc
lret
scas
mov
push
test
and
push
ret
jae
and
push
mov
mov
fnsave
or
fsubl
xor
clc
scas
dec
pop
and
sbb
test
imul
pop
ret
sarb
or
int
cltd
mov
pop
add
inc
xchg
jns
or
enter
push
xor
mov
push
sub
in
sar
mulb
ljmp
sbb
arpl
lahf
dec
sbb
daa
add
outsl
fsubrs
inc
loopne
xchg
xor
or
int3
das
pop
loope
cmpsb
out
mov
shll
or
pop
xchg
add
sbb
add
cli
mov
loop
push
xchg
add
push
rorb
xchg
mov
loope
aaa
outsl
jl
dec
sti
push
add
or
mov
sbb
mov
in
hlt
mov
mov
imul
sbb
sub
xchg
cmp
jb
lods
pop
daa
or
mov
cld
or
insl
stc
call
mov
aaa
jecxz
inc
stos
push
imul
push
loopne
sbb
and
mov
jp
fs
jge
leave
xor
push
and
adc
scas
in
lahf
push
out
push
push
xor
ss
loop
push
and
adc
dec
repnz
mov
test
sbbl
mov
xor
out
les
jle
mov
jbe
andb
test
jae
jbe
outsb
sbb
int
mov
pop
bound
dec
xchg
jns
cmp
pop
test
and
xor
repnz
mov
add
stc
push
adc
out
push
rclb
jb
insb
bound
add
mov
adc
cmc
shl
mov
xchg
leave
inc
aad
cmpsb
rorl
xchg
stc
out
out
xchg
sub
fs
adc
loopne
pop
and
jae
xchg
xor
pop
dec
cmpl
xchg
addb
int3
mov
push
mov
dec
sub
pop
adc
std
dec
lods
pushf
test
mov
mov
out
adc
fstl
and
push
xchg
adc
rolb
push
adc
add
out
push
pop
mov
div
mov
testl
fstl
fwait
dec
jecxz
adc
les
iret
jmp
pusha
jmp
and
fldenv
fstl
jle
and
and
negl
inc
scas
int3
dec
dec
test
rcrl
xchg
test
or
lds
cmc
dec
adc
jno
ficompl
inc
lcall
cld
icebp
or
insb
mov
xchg
pop
loope
or
xor
sahf
in
push
jne
mov
pushf
dec
sbb
xchg
adc
arpl
dec
movsb
add
pop
mov
rolb
movsb
mov
jl
xor
fbld
inc
sub
mov
xor
xor
es
push
movsb
push
imul
fsts
push
sbb
inc
mov
fdivrs
mov
adc
inc
sub
sbb
inc
sti
mov
cmp
push
ror
lods
into
mov
testb
lahf
in
inc
in
push
pop
rcrl
fsts
scas
fdivl
push
push
and
pop
pusha
pop
xchg
mov
jl
jo
push
jg
pop
pop
bound
cwtl
aaa
pop
jp
and
fistpl
mov
adc
add
add
jne
pop
push
arpl
int3
in
fsubl
lock
push
lods
dec
mov
loop
cltd
out
jle
xchg
es
pop
loope
int
in
ret
arpl
test
xchg
cmp
in
mov
sahf
and
loopne
es
ja
test
sub
add
adc
mov
sti
cmp
ficompl
shll
mov
ss
adc
int
inc
and
sahf
xchg
mov
inc
ret
or
fdivl
shrl
pop
out
movsb
jb
dec
or
and
imul
inc
movsb
dec
cmp
mov
xchg
pop
cmp
jle
mov
jnp
jecxz,pn
mov
jne
sub
pusha
jno
sub
adc
std
adc
mov
loope
imul
xchg
ljmp
xor
sbb
mov
and
and
mov
shrl
shr
xor
jne
mov
pop
jmp
sahf
or
push
xor
pop
inc
lea
mov
lret
push
xor
in
mov
daa
movsl
imul
insl
std
adc
into
mov
and
inc
ss
test
cmp
mov
xchg
sarb
stos
adc
in
mov
sbb
jno
out
mov
jle
ljmp
movsl
push
pop
aas
mov
dec
sbb
push
ret
insb
and
aad
jge
mov
jge
mov
stos
call
inc
add
jbe
push
mov
lret
jl
sub
daa
lds
arpl
inc
inc
cmp
xchg
inc
mov
icebp
arpl
int
push
dec
ret
inc
xchg
in
call
scas
fidivrs
mov
fcmovnb
or
aam
sbb
sarl
inc
add
mov
cs
lahf
cmp
sub
adc
mov
test
dec
sub
push
add
shrb
xchg
mov
mov
cmpsb
in
nop
popf
loope
rolb
dec
cld
fwait
cli
jbe
scas
sbb
or
jp
cli
or
jecxz
mov
jae
inc
xor
pop
mov
adc
jb
xor
push
arpl
jo
cmpsl
sbb
test
push
outsb
push
cltd
aaa
xchg
cli
cli
and
or
pop
pop
iret
inc
stos
xchg
mov
leave
bound
lcall
sub
and
jbe
shr
lret
xchg
out
xchg
xor
jecxz
pop
xchg
and
and
enter
push
lret
scas
dec
data16
pop
jae
call
mov
push
sbb
data16
adc
sar
les
or
cltd
cmp
es
cmpsb
inc
pushf
movsb
and
pop
mov
ljmp
or
movl
inc
insl
mov
ds
jbe
xlat
push
jns
in
pop
fidivs
sub
jns
aaa
test
scas
xlat
push
pop
xchg
filds
cmp
aaa
xchg
push
loope
adc
xchg
sub
xchg
fucompp
sub
push
insb
jle
repz
jns
jb
sbb
bound
sahf
cmp
inc
movsb
xor
cmp
cmpsl
inc
notl
scas
pushf
stos
xchg
mov
jne
outsb
icebp
mov
iret
xor
xor
leave
xchg
sbb
sbb
ja
add
pop
sub
insb
adcb
popa
mov
push
negb
push
rol
jns
inc
mov
xchg
lcall
pop
dec
fldt
lods
sbb
aam
sbb
jb
or
add
inc
imul
mov
cs
scas
les
clc
cmpsl
add
xchg
pop
mov
leave
out
loope
roll
inc
lds
xchg
out
shlb
outsl
lods
pushf
jb
add
sti
pop
xchg
movsl
sub
add
fdivrs
or
loope
ljmp
push
loop
lods
cmp
push
dec
jnp
stos
les
scas
lock
adc
icebp
out
imul
xlat
std
adcl
call
or
jl
jno
pop
les
lods
inc
sbb
dec
jno
ljmp
test
repz
les
cmp
dec
stos
test
dec
xchg
fbstp
je
fld
dec
dec
mov
in
inc
mov
cmpsb
arpl
gs
pop
adc
loop
lret
xor
dec
mov
or
insb
movsb
mov
imul
popa
inc
aam
fildl
inc
call
mov
adc
insb
xchg
mov
cmp
add
ret
scas
jp
mov
divb
cs
or
ds
mov
mov
xor
or
xor
jp
add
orb
mov
ljmp
nop
cli
pop
sub
xchg
jecxz
rclb
dec
mov
notl
imul
out
out
jle
pop
out
pop
negl
mov
mov
mov
test
adc
call
sub
xchg
fcoms
dec
ret
adc
mov
lods
lods
dec
icebp
stos
jl
stos
xor
dec
mov
sbb
jle
das
ret
addr16
flds
mov
divl
jbe
std
ss
movsb
mov
cs
rorb
mov
dec
pop
call
lods
sub
xor
mov
mov
xchg
dec
fsub
push
adc
mov
movsb
mov
aam
ss
enter
jge
add
mov
adc
test
ret
aaa
sahf
shll
or
and
push
push
mov
xor
pop
push
mov
outsl
in
inc
pop
sub
lret
pop
or
bswap
addb
dec
adcb
adc
leave
and
jp
sub
or
xchg
sub
sub
test
imul
clc
or
jnp
inc
inc
imul
je
gs
adc
mov
and
mov
push
std
cmpsb
in
rorl
adc
jmp
xchg
scas
fs
ljmp
int
or
sti
mov
sub
push
jb
popf
shll
arpl
and
lds
pusha
rcrl
sahf
sbb
inc
add
adc
shl
cltd
push
pop
xlat
sub
lcall
repz
ds
add
adc
js
mov
push
jo
fmull
and
test
movsb
xchg
dec
mulb
jo
je
cmc
and
mov
cltd
lods
insb
scas
stos
movsl
sbb
lods
shll
cmc
in
idivb
dec
jbe
or
not
inc
mov
pop
push
in
add
lock
fadd
sbb
imul
outsb
jno
aas
cmp
xor
adc
push
stos
es
imul
mov
xor
movsl
or
mov
out
pop
loop
xchg
sub
cmp
xorb
xchg
mov
cmpsl
pop
jl
add
xor
pop
and
push
insl
clc
inc
add
cli
faddl
pop
mov
dec
loope
dec
rcrl
loop
jmp
mov
fistpll
jmp
test
adc
and
xor
mov
dec
pusha
inc
sub
ret
jecxz
lds
add
push
add
or
xchg
adc
in
xorb
pop
mov
rcrl
je
pop
xor
jo
in
mov
and
jbe
mov
inc
push
ror
push
inc
mov
mov
mov
add
ficomps
or
dec
jns
lods
mov
in
scas
adc
enter
xrelease
rcrl
cmp
add
sub
cmpsl
push
jno
adc
mov
jle
inc
add
jbe
cmp
imul
sahf
xlat
cmpb
mov
add
aas
xlat
out
imul
mov
in
repnz
fbstp
outsl
stos
fmul
mov
adc
mov
pop
and
sub
push
clc
xor
dec
xor
push
lret
pop
cmpsb
ljmp
stos
sub
xchg
push
xchg
inc
and
ja
mov
jmp
mov
mov
dec
or
dec
hlt
popf
and
ret
loop
lahf
or
cmc
ficomps
inc
adcb
ds
shr
roll
and
loop
clc
fsts
or
xchg
ds
push
mov
aam
mov
push
aaa
in
or
push
aad
out
cs
roll
imul
in
leave
mov
dec
xchg
iret
xchg
xchg
mov
fildll
mov
ds
aam
mov
fdivl
mov
xchg
xor
dec
fs
pop
adc
mov
shr
icebp
fisttpl
mov
les
push
inc
pop
sbb
es
mov
pop
cltd
stos
enter
or
clc
and
adc
adc
outsb
out
push
mov
icebp
fs
cmp
out
insl
xor
lret
xchg
mov
xchg
rcll
dec
sbb
sbb
sarb
ds
sub
es
rol
mov
inc
test
mov
test
cmp
sbb
sbb
in
jne
cmp
rcll
nop
push
fwait
and
arpl
dec
mov
mov
jle
sahf
mull
fisttpll
mov
orl
mov
push
dec
and
sbb
push
icebp
stos
add
ds
sub
lea
sbb
jmp
mov
enter
ficomps
lahf
scas
popa
lea
push
sub
and
add
mov
jnp
movsl
popf
test
rcrb
mov
ss
xor
shlb
xchg
sbb
scas
dec
clc
aam
clc
int3
dec
repnz
loop
stc
scas
loopne
pop
xor
ja
mov
iret
sbb
std
scas
sub
or
pop
mov
or
sbb
fdivr
mull
push
es
es
xchg
negb
push
imul
movsb
jno
adc
pop
dec
adcl
xchg
dec
mov
out
jae
out
loop
js
cmp
or
xor
jbe
inc
rcll
xor
cmp
and
aaa
mov
andb
dec
mov
and
or
push
jno
imul
hlt
cmp
cmp
ret
mov
lahf
mov
or
mov
or
sbb
adc
and
adc
imul
dec
pop
jne
add
and
arpl
dec
daa
iret
scas
into
mov
imul
test
mov
and
adc
nop
aaa
or
jmp
ss
test
dec
pop
sbb
enter
mov
and
lcall
test
sbb
cmp
adc
dec
xor
fiaddl
mov
cld
lea
pop
jmp
jl
cmpsl
in
push
out
dec
and
push
mov
adc
imul
nop
xchg
or
rorb
pop
pop
mov
data16
nop
jmp
imul
and
xchg
call
popa
and
push
pop
cli
jecxz
dec
mov
sbb
fstl
test
xor
pop
sub
shr
sub
mov
jae
test
sub
pop
cmp
into
les
rol
rorb
rcrb
dec
mov
repz
fsubrl
pop
and
cmp
mov
out
in
xlat
or
pop
cmp
pop
aam
sahf
cli
in
adc
push
rdtsc
std
fists
xor
cmp
or
clc
inc
cmp
jns
enter
fisubrl
int
aas
mov
dec
sbb
popf
les
negb
or
jge
push
inc
push
std
sbb
jnp
adc
mov
and
push
outsb
and
imulb
cmp
xor
cmp
pop
rclb
hlt
cmp
adc
sub
push
xor
int3
leave
dec
fucomip
mov
enter
and
push
dec
mov
and
push
icebp
xchg
push
adc
pop
ret
decl
lahf
fcomi
outsl
xchg
pop
add
out
jle
imul
shll
inc
add
sbb
pop
pop
inc
rcrb
push
sahf
loopne
leave
jnp
and
lock
rolb
and
fcoml
imul
adc
pop
shl
jle
sbb
or
push
xor
movsb
mov
inc
dec
cmpsb
movsl
inc
or
decl
or
mov
push
das
xchg
aad
les
es
das
push
sub
loopne
sub
or
sti
jle
bound
add
cs
fcoms
mov
sub
ret
pop
outsb
sub
xor
jg
and
rorb
mov
fisubs
push
mov
xor
xchg
fnsave
dec
addl
jne
push
push
adc
lock
mov
mov
jecxz
push
rcl
stos
lret
outsl
xor
pop
adc
jnp
cltd
enter
xor
int
mov
add
push
hlt
stc
call
fildll
rolb
fcoms
add
fnstcw
decb
insl
ljmp
sub
push
cmp
add
cli
clc
or
cwtl
adc
mov
or
addb
movsb
sti
into
push
std
hlt
push
lret
repnz
jecxz
xchg
addb
mov
test
and
xchg
loope
sbb
xchg
push
xchg
adc
shll
and
icebp
lock
cmp
ljmp
inc
fucomi
cs
insl
inc
fs
inc
fisubl
xor
or
mov
pop
push
push
lock
es
mov
cli
ret
insl
add
insl
adc
or
push
mov
loop
xchg
test
sub
fdiv
push
mov
push
pop
xor
push
jno
fwait
jge
sbb
iret
xchg
fisttps
adc
outsb
xlat
jae
pop
fidivrl
inc
adcb
stos
dec
push
push
ret
ja
movsb
pop
cmp
mov
fiaddl
lahf
ds
jnp
push
enter
mov
stos
xchg
shlb
or
push
ljmp
pop
lcall
push
mov
stos
cmc
push
into
sar
inc
es
inc
pop
or
add
push
xlat
addl
push
js
xor
sub
mull
aas
inc
jl
pop
aam
aaa
jno
xorl
push
dec
ss
pop
dec
rcl
pcmpgtb
cmp
sbb
cld
mov
adc
ret
mov
inc
cld
sbb
or
imul
lods
icebp
mov
sbb
inc
pushf
mov
xor
cmp
in
and
subb
lods
jge
outsl
es
shll
insl
fsubrl
jnp
hlt
sar
aaa
or
cmpsl
lds
lcall
enter
fwait
les
lods
inc
test
enter
xor
pop
pop
mov
inc
lds
push
sub
sub
sbb
sbb
pop
ror
loope
or
enter
adc
mov
mov
push
xor
sub
jb
xorl
xchg
adc
scas
cmpsl
inc
aas
pop
cmp
adc
push
xor
xor
daa
aad
cld
enter
jb
pushf
mov
scas
ds
pop
sarb
pop
bound
out
adc
sub
mov
ds
and
pop
cld
insl
or
pop
stos
or
test
int
adc
push
mov
sub
cmpsl
icebp
test
adc
lock
stos
cwtl
dec
xchg
add
sub
push
xchg
pusha
dec
insl
cmp
adc
rcrl
push
adc
repz
int3
pmulhw
vunpckhps
dec
pushf
fsts
insb
push
shl
add
xlat
sbbl
scas
xor
add
repz
ljmp
movsb
pop
mov
sti
popf
ds
clc
sbb
out
dec
dec
inc
fdivrs
cwtl
dec
adc
mov
mov
mov
ret
ss
fldenv
pop
mov
inc
push
lds
sbbb
inc
in
adc
mov
xor
mov
dec
out
cmpsl
inc
jecxz
stos
lret
inc
lea
lds
arpl
adc
lret
ljmp
ja
lret
cmpsb
push
std
inc
pusha
mov
inc
mov
adc
pushf
mov
cmp
mov
cmp
jg
cmp
mov
sbb
hlt
xchg
pop
jg
je
cmp
nop
aas
or
xchg
fcompl
cmp
jge
mov
xchg
mov
notb
jo
dec
fwait
mov
fwait
jnp
sbb
add
add
mov
xchg
adc
js
xchg
stc
xchg
sbb
push
adcb
push
lret
mov
cltd
lcall
push
jns
add
lods
gs
dec
xor
push
xchg
test
popa
out
inc
aaa
gs
xlat
mov
je
and
aaa
cld
mov
sub
adc
push
adc
mov
mov
gs
adc
adc
in
insb
fisubrs
sub
fdivr
ss
ljmp
icebp
jmp
jns
sbb
xchg
rorl
andl
in
ds
mov
and
mov
cmp
gs
nop
pop
pop
mov
sbb
into
stos
add
adc
cmpsb
xchg
cmc
jns
and
mov
int3
ljmp
das
dec
sub
sub
push
xor
jecxz
push
inc
or
cmp
mov
cmc
and
std
cmp
es
lea
xchg
mov
addr16
xor
daa
scas
xor
mov
aas
mov
ret
mov
loop
mov
dec
ljmp
mov
jnp
mov
cli
jmp
xchg
mov
or
add
out
fs
sbb
xor
pop
iret
mov
fildl
xchg
mov
dec
mov
lcall
push
int3
orb
mov
fwait
push
mov
bound
jns
push
fisubrs
jb
cmp
int3
imul
fcompl
pop
into
ud0
mov
jbe
and
pushf
pushf
repnz
xchg
inc
mov
or
pop
dec
movsb
xchg
hlt
jo
pushf
popf
sbb
enter
push
jp
imul
mov
lods
xchg
mov
sahf
sub
mov
and
jns
pushf
xor
insb
mov
roll
xchg
xchg
pop
or
cmc
popl
pop
pop
movb
xchg
pop
imul
rolb
sub
mov
jmp
es
iret
fucomip
aam
lock
js
repnz
or
scas
ret
sbb
daa
add
mov
loop
out
and
pop
nop
and
out
loope,pt
jmp
pusha
cmpsl
jo
popf
or
stos
cmp
repz
push
sub
rcrb
adc
mov
push
pop
xchg
cltd
jb
inc
sbb
jb
mov
mov
xlat
lea
cmc
loope
cmpsl
adc
dec
fnstcw
std
inc
pusha
mov
xchg
mov
xchg
and
jmp
add
adc
andb
loope
cmpsl
add
adc
jmp
lock
repz
cs
or
leave
fildll
cmpsb
sti
mulb
xchg
add
das
sub
mov
and
pop
aad
adc
jge
pop
adc
clc
and
or
ret
cmp
or
jmp
in
ja
inc
push
or
adc
jnp
jecxz
or
mov
addr16
jle
mov
pop
fs
mov
out
ss
cmp
adc
mov
insl
outsb
rclb
pop
or
add
jl
mov
cmp
movsl
mov
repz
add
imul
push
and
jns
xchg
in
test
dec
es
loopne
inc
or
mov
pop
xchg
adc
xor
ret
xchg
sub
fcomip
pop
add
out
nop
scas
ret
add
lcall
mov
jecxz
xchg
mov
stos
lret
xchg
aad
cli
push
xchg
inc
add
cwtl
int
ja
rorl
movlps
nop
jmp
cmpsb
pop
mov
xor
mov
out
xor
repnz
lahf
xchg
into
dec
sbb
cmpsl
push
jae
outsb
adc
out
add
sbb
insl
mov
or
dec
jg
pop
in
jp
popa
subl
lret
inc
push
lock
aaa
pop
std
daa
addr16
in
ds
sub
push
sub
jne
xchg
ret
rep
and
cmpsl
addr16
out
cmp
pop
movsb
xorl
pop
and
lods
cli
ret
insb
sub
ja
add
cmpsb
das
rolb
jge
cmpsb
hlt
dec
shrb
hlt
das
jmp
int3
rolb
or
cmpsb
loope
out
test
mov
pop
loope
mov
mov
cli
aas
mov
push
xchg
cmp
lahf
and
cmp
imul
inc
jle
mov
lea
arpl
and
push
inc
pushl
jns
inc
and
in
call
lcall
pop
xor
lods
mov
repz
sti
idivl
js
cmpsl
dec
dec
sahf
das
dec
xchg
dec
shll
orb
mov
sbb
pushf
pop
out
das
xchg
in
mov
jmp
shll
xchg
fs
and
out
leave
fcompl
out
and
mov
nop
adc
jo
pop
sbb
insl
stc
mov
adc
daa
leave
jl
pop
jp
in
sub
sahf
add
test
mov
leave
mov
push
iret
fs
cmp
inc
inc
pusha
add
jmp
lahf
rclb
movsl
dec
pop
push
xlat
inc
out
sub
or
mov
into
xchg
shlb
sub
push
jp
cs
sub
dec
xor
and
ret
inc
xor
xchg
inc
data16
lret
push
bound
jae
push
xor
and
xchg
loopne
fildll
in
xor
scas
lods
lahf
and
xlat
outsb
and
xchg
mov
xor
add
subb
sub
data16
out
insl
jp
xchg
test
lcall
jnp
push
insl
push
xchg
sbb
sbb
lcall
mov
dec
ret
addl
mov
pop
fidivrs
add
mov
xor
xor
sub
in
mov
cltd
adc
jl
sub
or
inc
divb
scas
addr16
scas
fadds
jecxz
repz
ljmp
inc
insb
and
mov
das
mov
push
fisttpll
jg
insb
stc
push
and
cmp
sub
mov
sbb
mov
test
imul
pop
xor
add
test
outsb
jmp
xlat
insb
dec
aam
rsqrtps
dec
fs
jle
jge
dec
lret
pop
daa
inc
adc
push
fchs
adc
pop
dec
mov
cmp
call
cmovne
cmpsl
lea
cwtl
out
and
fldt
outsb
mov
rcr
jge
rcrb
adc
add
pop
push
inc
andl
roll
neg
adcl
insb
jns
or
outsb
mov
in
jmp
cli
dec
jle
cmp
xchg
mov
arpl
aam
dec
mov
jmp
sar
mov
mov
cwtl
sub
sub
lret
mov
aaa
pop
xor
in
pop
lock
mov
popf
sbb
sub
sbb
and
lret
add
test
fnsave
sbb
mov
out
cmp
and
jbe
jge
popf
inc
cmp
out
lea
and
cmc
mov
stc
cmp
imul
pop
inc
push
stos
mov
popa
xor
mov
sub
add
imul
imul
cmp
jl
popa
outsl
cmp
lcall
fidivrl
in
sbb
ret
gs
insb
xor
jbe
mov
cld
pop
inc
xor
aad
mov
dec
test
pop
pop
lret
add
mov
outsb
pop
fistpll
cmpsl
jg
pop
xor
test
gs
pop
push
adc
pop
fsubrl
or
xchg
fsubl
ds
leave
movsb
or
shrb
ret
cmpb
inc
inc
jp
fs
sub
dec
fimull
imul
sahf
xchg
inc
adc
dec
clc
mov
inc
int
jns
fists
incl
xlat
pop
jecxz
ds
mov
stc
xchg
pop
shll
popf
ds
push
push
jmp
add
addl
psrlq
jecxz
cmp
jnp
dec
sarb
pusha
cli
bound
nop
popf
shll
aad
sbbl
imul
imul
xor
gs
test
push
rolb
mov
sahf
fisubrl
jne
lea
or
lret
shll
int
orl
jg
cmp
mov
push
lret
push
neg
int
test
outsl
xchg
movsb
add
jle
push
call
or
into
mov
shl
arpl
push
inc
mov
sbb
jmp
pop
push
lods
out
xor
addr16
es
cmp
or
fs
push
jge
stc
mov
push
cltd
pop
mov
rol
xchg
out
jg
and
inc
adc
fdivrl
push
mov
fsubl
lahf
aad
mov
push
outsb
in
ljmp
cmp
fwait
cs
mov
test
sbb
mov
mov
mov
push
xchg
das
cwtl
add
arpl
lcall
hlt
outsb
daa
mov
sub
movsb
push
sub
jo
mov
xchg
enter
repnz
imul
sbb
jmp
int
mov
into
xor
jo
shll
repz
push
jecxz
adc
sbb
or
andb
adc
xor
mov
lods
pop
cs
pop
push
mov
add
xor
pop
mov
add
mov
pop
inc
psubusb
push
or
fwait
imul
and
push
in
mov
sti
repnz
pop
rcll
sti
xchg
push
cmp
test
mov
fcoml
ds
aaa
ds
data16
pop
pop
cli
jmp
test
incb
pop
dec
push
and
in
inc
sub
test
cmp
into
pop
loopne
loop
add
push
push
bound
pop
mov
lods
ret
movsl
jmp
enter
xchg
pop
ljmp
cmpsl
mov
les
add
jae
mov
aas
and
lret
mov
mov
jns
repnz
sahf
shll
mov
adc
cmp
stos
jecxz
add
cmc
push
out
shrl
xor
mov
pop
inc
int3
jns
js
mov
jmp
in
cmpxchg
cltd
fwait
dec
leave
inc
popa
imul
pushf
dec
inc
add
repz
or
xorl
adc
movsb
lcall
mov
inc
push
pop
adc
xchg
jo
popf
into
imul
fldt
dec
push
jmp
jmp
pop
pop
push
movsl
fistl
xor
push
or
adc
cmp
and
fstpl
pushf
pusha
jb
and
adc
fnstsw
or
xor
or
push
pop
out
fwait
aad
fdivs
inc
inc
xlat
xchg
outsb
dec
pushf
shll
sub
inc
insl
cmpsw
mov
pop
je
stos
and
ret
or
mov
js
test
cmp
ffreep
mov
adc
push
xor
mov
inc
inc
imul
movsb
pop
test
and
into
adc
add
flds
lods
or
adc
sub
and
cld
cmp
cmp
dec
in
mov
imul
lret
roll
jno
fistpl
mov
jbe
adc
daa
xchg
pop
or
or
pushf
dec
cmp
xor
cli
in
adc
jg
pop
xor
aam
mov
lea
and
mov
fistps
adc
pop
ljmp
repz
loop
je
push
enter
into
cmc
sahf
ss
add
in
sub
dec
xchg
mov
jge
popa
mov
dec
adcb
fs
push
mov
push
pushf
mov
testb
ficomps
in
push
xlat
fucomp
fists
pop
ror
cwtl
cmp
mov
jg
sub
pop
movsl
into
rorl
addr16
mov
dec
ficompl
add
cmpsl
xor
mov
sbb
adc
inc
adc
std
xorl
cmp
xor
dec
fistps
hlt
dec
and
xchg
xchg
cltd
mov
fcomp
imul
lret
pop
push
mov
std
inc
or
cmp
inc
push
sub
inc
aam
cmp
fmuls
repnz
fisubl
jmp
addr16
popa
sbb
leave
aam
je
imul
cld
mov
mul
pop
mov
dec
adc
jbe
and
push
clc
bound
mov
jmp
jmp
push
mov
repz
adc
mov
push
pop
push
dec
outsl
pushf
adc
adc
fisttpll
add
ljmp
and
test
call
or
pop
stc
insl
adc
mov
add
js
inc
xorl
push
mulb
cltd
mov
sub
aad
loop
out
add
xchg
push
mov
or
adcl
cwtl
dec
insl
rcrb
iret
push
repz
mov
or
inc
dec
nop
into
sub
fldt
out
mov
stos
fdiv
pop
jo
cld
jmp
and
cmc
mov
sub
push
push
xchg
pop
mov
inc
and
repnz
scas
pop
nop
jo
jle
ja
xchg
iret
xchg
pop
lahf
aas
inc
inc
add
pop
jmp
xchg
loopne
xchg
outsb
sub
cmovs
icebp
adc
push
push
push
imul
stos
or
push
mov
ja
mov
cli
mov
xor
js
push
pop
dec
notb
sbb
inc
idivb
test
xchg
sub
into
test
push
ljmp
sbb
mov
sarl
sti
stc
mov
add
mov
push
xchg
aas
xlat
int
or
mov
mov
cld
and
add
fsubr
lds
cmpsl
stos
lcall
dec
addb
mov
lahf
adc
sub
bound
xlat
jno
in
addr16
fdivl
cltd
mov
pop
ds
scas
mov
addr16
dec
add
mov
push
fiaddl
je
dec
nop
pop
and
xor
jb
adc
mov
add
lds
jae
in
pusha
jnp
loopne
xor
int3
sbb
push
push
ficomps
ljmp
shll
mov
insb
stos
push
pop
sub
cmp
ljmp
adc
mov
jge
add
dec
popf
out
test
push
add
xor
insb
rsm
clc
lods
mov
pop
pop
jns
xor
shlb
cmp
lret
fsubrs
mov
cmpsl
add
fwait
mov
lret
testl
sbb
in
in
das
test
dec
sub
cmc
adc
cmp
cltd
adc
sub
adc
add
mov
cmpsl
push
xchg
adcl
ja
into
xor
nop
jl
inc
inc
jne
outsl
mov
adc
imul
ret
adcb
in
lea
int3
dec
or
xor
je
inc
jno
je
cmp
pusha
jno
imul
push
inc
addl
and
add
dec
jns
add
call
lahf
or
daa
mov
addl
enter
sahf
lret
dec
in
scas
dec
xchg
outsl
in
push
cmp
inc
out
or
fiaddl
adc
cmp
xor
jmp
jle
and
stos
xchg
and
lcall
loop
and
out
sbb
sbb
cmp
mov
out
jl
xchg
push
sub
jns
jae
mov
mov
bound
sbb
sub
sahf
sbb
xchg
pop
pop
pop
test
sar
stos
jae
gs
ds
inc
dec
lcall
pop
lcall
push
and
jp
push
sbb
ljmp
lcall
sub
fmuls
pop
loop
push
sbb
addb
data16
insl
mov
sub
mov
and
scas
xchg
sub
dec
fnsave
cld
mov
add
es
jmp
mov
pop
xchg
push
and
push
mov
inc
ljmp
cmp
jle
jb
shll
mov
adc
dec
mov
shll
pushf
lea
mov
addr16
mov
ss
mov
test
stos
cmp
lcall
in
cld
sbb
outsb
icebp
mov
in
hlt
gs
popa
fwait
loop
jb
sbb
jnp
pop
stos
clc
stos
jecxz
lods
lahf
and
sub
mov
sbb
stos
inc
sbb
cli
fsubrl
cmpsl
mov
cmpsb
inc
pop
cmp
les
mov
pop
add
lcall
cli
aas
mov
repz
push
stos
lods
jecxz
mov
add
cmp
subl
out
rorb
sbb
push
ja
inc
cmp
lods
cmpsb
mov
cltd
repnz
and
or
or
mov
dec
cs
sub
std
or
jecxz
inc
push
imul
fldt
inc
xchg
cmp
push
ret
rol
pop
or
cmpsl
jle
stc
pop
jo
push
jnp
mov
mov
cmp
pop
decl
adc
mov
adc
and
sub
das
xchg
into
jle
inc
cmp
movsb
outsb
sub
stos
inc
fwait
xor
and
loop
and
mov
pop
mov
mov
mov
sbbl
or
and
popa
or
cmpl
js
cld
add
inc
repnz
jae
xor
mov
mov
lcall
shll
push
vphaddudq
roll
xor
repz
jp
cltd
out
out
popf
fwait
cld
sub
push
sub
mov
mov
faddp
scas
in
dec
sbb
dec
dec
fisubs
ja
dec
inc
mov
mov
mov
jle
sub
je
push
mov
data16
stos
pusha
divb
int3
cmp
xor
loope
xor
push
out
xlat
imul
xor
inc
lcall
imul
fisttpll
sbb
movsl
sbb
pop
xorl
sbb
imul
mov
into
pop
cs
mull
imul
mov
adc
js
push
xor
push
xchg
mov
pop
xor
fwait
icebp
imul
cmp
rcrb
hlt
repz
js
xchg
jae
mov
sub
clc
pushf
addl
xor
arpl
stos
inc
pop
inc
mov
xor
jo
popf
loop
lahf
les
jns
push
jns
jo
lret
or
mov
xchg
cmp
das
mov
dec
sub
iret
mov
sub
out
lods
rolb
insl
xor
push
dec
adcl
scas
imul
mov
add
lock
out
movsl
in
push
je
mov
test
iret
int
adc
xlat
negl
xor
jge
mov
je
jns
popl
xor
xbegin
cmpsb
lds
and
sbb
jp
adc
mov
clc
cmpl
sahf
bound
aas
and
int3
insb
xchg
cld
push
xchg
sahf
add
pushf
js
rolb
sub
sbb
test
and
inc
in
pusha
outsl
loopne
pop
sbb
test
in
hlt
repz
inc
push
pop
dec
jno
inc
fwait
addb
jl
xor
xchg
movsb
pop
pusha
in
out
xlat
push
shrb
ficomps
xchg
adc
sbb
xchg
cmc
cmp
mov
xchg
jecxz
arpl
out
adc
xchg
into
sahf
mov
jne
bound
sub
mov
lret
xor
jmp
cmpxchg
add
int3
loopne
popf
sub
mov
cmc
mov
cld
jbe
jge
or
add
fucom
mov
sbb
cmpsl
outsl
xlat
insb
pop
adc
mov
cs
xchg
sub
data16
xor
shll
clc
rcrl
xor
inc
mov
xchg
jge
cmpsb
jecxz
cmp
fadds
or
icebp
testb
pop
ret
scas
shll
lahf
dec
lcall
inc
cmp
dec
inc
mov
push
xchg
das
mov
cli
adc
cmpsb
out
das
xchg
test
das
hlt
jns
test
push
ja
hlt
dec
sub
scas
int3
loope
cwtl
push
jp
xor
dec
mov
xor
push
push
std
jecxz
movl
sub
fldenv
lret
inc
sbb
sbbb
mov
sti
ss
outsb
lcall
in
or
push
mov
insb
in
pop
iret
pop
negb
dec
mov
add
inc
mov
lret
jl
sub
mov
test
xchg
mov
call
adc
jno
popa
mov
fisubrs
addr16
testl
ds
sub
mov
aas
sahf
mov
add
sub
push
xor
xchg
mov
mov
xor
xor
inc
push
xor
jno
int
pop
mov
mov
mov
dec
mov
lret
xor
mov
inc
cmpsb
dec
repnz
pop
shl
mov
cli
cmpb
mov
or
cmp
lcall
mov
fs
sub
jl
inc
fists
inc
push
mov
cli
mov
sbb
ret
jmp
or
orl
add
leave
push
fisttpl
bound
pushf
addr16
add
fmuls
pop
out
popa
fidivs
pop
adc
or
mov
rolb
pop
leave
call
cmp
out
mov
aad
ja
jg
movsl
add
pop
mov
jnp
les
in
sub
loop
and
les
fbld
aad
filds
xchg
pop
lods
test
inc
mov
lret
lds
dec
daa
das
or
sbb
inc
insl
push
sbb
je
scas
sbb
leave
mov
pushf
and
pop
sti
mov
pop
stos
sub
xor
and
and
jmp
nop
lods
add
push
xor
lock
jp
xor
sub
scas
test
adc
jns
in
aam
rcll
in
bound
mov
lds
jno
sbb
and
sub
xor
inc
push
sbb
popf
pop
mov
add
fstp
sbb
adc
mov
jg
popa
pop
xor
mov
loop
mov
call
xor
addr16
push
sbb
insl
jno
and
movsb
nop
repnz
adc
es
add
imul
imul
movsb
pop
imulb
hlt
and
pop
jns
rcll
cmp
loopne
sub
xor
loop
xchg
cmp
shl
or
cmpb
cmpsl
es
dec
ja
js
push
inc
cwtl
dec
cmp
mov
mov
or
clc
in
ljmp
pop
lret
sahf
and
enter
sub
out
fstl
data16
and
sbb
popa
repz
mov
mov
loop
or
leave
clc
adc
inc
es
dec
out
sbb
inc
js
inc
adcb
js
cmpsl
sti
mov
sub
stos
inc
jecxz
filds
cmpsb
clc
push
into
test
outsl
push
mov
das
hlt
movd
pop
sub
popf
mov
orl
jg
mov
popf
jne
jg
jno
stc
out
ror
sub
add
xchg
cmpsl
xchg
pop
rcr
pushf
sub
neg
js
and
jnp
sub
mov
stos
inc
and
dec
cltd
clc
jo
rolb
and
jge
and
inc
xchg
leave
jo
jne
jl
movsb
out
pusha
sahf
sub
pop
mov
push
add
push
in
jbe
inc
aad
hlt
and
sub
cmp
sub
fsubl
or
xlat
xchg
cmp
int3
push
mov
adc
mov
stos
stc
and
mov
incb
adc
xchg
inc
add
cmp
and
pop
and
lods
push
push
lods
pop
xor
sahf
fs
in
scas
orb
daa
mov
shlb
mov
adc
jmp
mov
sub
cli
or
js
sbb
mov
sbb
or
push
or
or
pop
ret
push
dec
inc
in
push
out
xor
in
mov
ja
cmpb
and
dec
jbe
pop
pop
add
jp
pop
lods
int3
mov
push
roll
shrb
or
movsb
shlb
fsubr
adc
mov
and
in
ja
sub
xor
addr16
ror
arpl
fwait
orb
loope
push
lcall
es
enter
mov
lods
add
mov
cli
cli
sbb
cwtl
popa
pop
aas
pop
mov
out
clc
and
repnz
icebp
outsl
mov
icebp
andl
ficomps
xor
cmpl
addl
cmp
inc
pop
pushf
call
mov
xlat
shll
sarl
dec
inc
fcmovu
xchg
xchg
imul
lahf
mov
in
cmpsl
iret
jno
imul
fucom
mov
mulb
stos
xlat
push
arpl
cltd
mov
push
adc
xor
movl
arpl
leave
push
and
and
leave
and
insl
push
fldcw
int
ret
les
mov
js
test
cld
push
es
fwait
movsl
adc
xchg
jbe
pop
push
pushf
and
subb
xchg
rcll
mov
jo
fmulp
xchg
mov
insl
dec
iret
mov
jbe
pop
adc
out
ficoml
cltd
sbbb
ret
xor
mov
xchg
das
xor
loopne
dec
cmc
mov
shlb
pusha
test
int3
shl
sub
mov
lret
fsubrs
mov
add
lret
push
jnp
jo
out
subl
out
lret
pushf
hlt
ljmp
ljmp
adc
fidivl
xchg
jge
mov
inc
xor
testb
das
cltd
inc
movsl
and
mov
and
je
jle
inc
xlat
adc
fisubrs
jo
aad
pop
and
mov
repz
fwait
mov
jl
cwtl
in
sbb
inc
xchg
mov
add
sub
pop
loope
lds
mov
ds
xor
cmp
rcrl
cmp
arpl
jp
clc
leave
out
stos
enter
push
inc
mulb
bound
insb
into
mov
push
aaa
fbstp
push
mov
jecxz
pop
into
popa
push
jle
mul
xchg
and
cmc
pushl
mov
xor
int3
mov
fwait
imul
push
inc
xchg
mov
jecxz
pusha
test
je
mov
mov
dec
inc
mov
add
inc
and
pop
lcall
adc
test
subb
aaa
lahf
xor
adc
mov
xchg
or
pop
cmp
call
fdivl
inc
jnp
pop
cltd
sbb
inc
mov
jne
jecxz
call
pcmpgtd
cmc
push
addl
cltd
fs
aas
xchg
int3
push
jmp
xor
in
pushw
or
and
adc
hlt
fists
pop
jg
cmp
xor
fnstenv
movsb
int3
and
and
rorl
repnz
pop
inc
fiaddl
and
push
adc
add
jns
xchg
icebp
add
fsubr
movsl
xchg
addr16
fs
repnz
sub
mov
jmp
cmp
jl
test
push
pop
and
dec
jp
sarl
pop
pop
addl
pop
call
arpl
out
out
or
sub
outsb
jne
je
adc
xchg
daa
dec
ljmp
in
lret
icebp
mov
adc
push
leave
aaa
aaa
clc
lcall
cmpsl
pop
in
jno
mov
int3
lahf
xor
fdivrl
jmp
jne
jg
xchg
xor
jmp
cltd
in
push
sbb
lods
dec
push
jbe
ja
xchg
sbbb
pop
push
into
add
xlat
push
xor
insb
test
jns
shrb
pop
mov
pop
mov
lahf
pop
cmpsb
repz
or
in
adc
sub
shrb
jg
aaa
call
mov
or
out
xlat
xchg
in
sbb
in
jl
mov
in
stos
push
imul
fdivl
or
in
popa
xor
jl
mov
test
ljmp
es
mov
mov
ss
mov
xchg
imul
fcoms
mov
mov
fsubrp
jns
adc
sub
call
sbb
fistl
jns
jmp
shlb
jmp
loope
mov
push
pusha
aad
fstpl
push
or
pop
push
sbb
jle
lcall
call
notl
out
dec
mov
mov
ret
mov
or
repz
xor
jns
cmp
test
and
pop
xchg
jo
mov
push
sbb
xor
mov
and
clc
cmp
out
xchg
les
dec
ficoml
or
mov
pop
scas
imull
in
xchg
lahf
xor
sub
cmc
dec
and
xchg
sub
pop
pop
pop
int
stc
dec
push
cmpsl
negb
inc
pop
cmpsb
sti
mov
stc
js
and
enter
aas
scas
out
call
outsb
push
jl
int3
in
and
jge
mov
xor
cmp
ret
lds
fcoml
xor
fcoms
in
movsb
arpl
subb
in
movsl
ret
dec
lock
cmpsl
cmp
fsubrs
outsl
dec
add
outsb
cmp
xchg
es
cmp
xchg
mov
sbb
cmp
ret
out
lcall
or
add
out
in
add
or
and
push
jp
fdiv
js
mov
ss
dec
icebp
mov
in
ficomps
outsb
jmp
cs
inc
in
pop
lods
jle
and
repz
pop
aaa
jae
push
lods
mov
mov
lcall
push
adc
and
or
add
jb
sub
loope
int
pop
xchg
add
mov
push
pop
cmp
jecxz
adc
pop
mov
push
dec
inc
pop
mov
inc
mov
test
ja
int3
sub
sarb
cs
je
xchg
mov
add
test
pop
push
xchg
shr
and
fistpl
xor
sub
fistpll
and
addb
fadd
cs
inc
or
test
mov
adc
icebp
jmp
rcl
mov
xchg
je
shll
dec
rcll
inc
std
dec
fsubrs
lock
jne
leave
insl
jns
pop
pop
outsb
mov
in
lds
movsb
imul
add
into
rcr
xorl
push
popa
outsb
pushf
mov
lret
dec
pusha
popf
int3
js
sub
and
push
lret
inc
movb
mov
adc
push
ds
pop
mov
mov
jp
cmp
pop
lods
sahf
adc
adc
addr16
fdivrl
adc
mov
adc
push
mov
addr16
cmp
stos
mov
aas
into
pop
adc
mov
mov
test
fcoms
or
add
jl
aam
xchg
mov
cli
lds
xchg
and
decl
xchg
loope
aam
mov
dec
fdivp
jmp
add
loopne
and
mov
jmp
dec
dec
add
jg
lret
rclb
ret
cs
aas
nop
jp
sbb
mov
add
out
pop
lret
call
es
jno
stos
stos
lcall
shrb
fnstcw
pop
cmp
mov
dec
inc
inc
sbb
mov
call
sub
jno
popf
jge
add
xchg
mov
aam
ret
mov
mov
pop
loope
dec
mov
dec
addr16
xchg
sbb
xchg
xchg
arpl
sbb
cmp
inc
xchg
iret
arpl
and
addb
ljmp
pusha
lods
das
pop
dec
pop
lods
ljmp
dec
jnp
ds
lret
icebp
fs
mov
fildll
je
lods
sub
xchg
or
adc
outsl
push
imul
mov
push
cli
add
push
pop
jb
popa
data16
inc
lock
push
mov
shlb
aad
inc
arpl
adc
xchg
test
pop
les
pop
pop
fidivs
repnz
jmp
stos
fistps
andb
daa
mov
imul
sub
out
inc
jnp
dec
add
pop
xchg
stos
imul
mov
out
xchg
stc
inc
cmc
xor
je
sbb
mov
icebp
popf
adc
sbb
and
jl
das
outsb
ret
cmpsb
ss
hlt
or
pop
into
addl
jbe
ja
push
mov
xchg
mov
daa
cmpsb
rol
mov
mov
dec
enter
mov
pushf
jns
push
std
in
adc
test
gs
movsb
push
adc
dec
mov
aaa
div
fcomip
sti
negb
add
or
mov
mov
iret
movsb
stos
or
jle
mov
iret
std
sub
fwait
pop
sub
loopne
les
push
dec
lods
mov
push
mov
inc
in
or
enter
sub
inc
add
dec
test
jmp
clc
lahf
mov
inc
repz
and
jge
push
xchg
out
jg
xor
jbe
lock
pushf
in
xchg
jle
aaa
push
xlat
sahf
fstpt
and
stos
nop
mov
jg
mov
pop
xor
in
xor
test
dec
fists
pop
xor
call
stc
add
mov
push
shl
in
ljmp
cmc
popf
jnp
imul
adcl
rep
sub
lret
int3
arpl
xor
fnsave
jmp
push
pop
pop
mov
fnstenv
shlb
xor
ss
push
insb
imul
fsubp
sbb
lea
ja
xor
scas
adc
sbb
inc
push
mov
inc
clc
enter
test
addr16
aaa
lods
xchg
sub
insl
jmp
bound
stos
or
imulb
jmp
cmp
adc
pushf
bnd
push
roll
adc
pop
push
and
add
adc
cmp
xchg
and
mov
cmp
jo
or
pop
ss
into
sbb
movb
shr
push
or
sub
pop
xchg
push
or
mov
fists
in
mov
test
fnsave
sub
out
cwtl
jb
leave
and
dec
mov
adc
adc
mov
xor
jae
jecxz
jge
iret
cmc
icebp
cld
int
xchg
add
xchg
dec
push
testb
lahf
lret
pop
fdivs
push
hlt
cmp
dec
sub
fs
rcrb
cwtl
mov
mov
fwait
pushf
pop
dec
push
dec
dec
mov
pop
or
fistpll
icebp
push
cmpsl
push
and
out
and
add
subb
lcall
jo
pop
sub
cli
jl
jmp
data16
sbb
lahf
or
add
stc
addb
xchg
push
insl
stc
loopne
cmp
add
mov
ret
iret
xor
outsb
mov
fcoms
mov
pop
add
and
sub
fs
sbb
imul
pop
push
pusha
int
out
and
mov
mov
or
daa
fs
or
jae
and
iret
rcrb
dec
sbbl
dec
fildll
out
push
lock
inc
test
shlb
test
cltd
sahf
ret
or
cmp
adc
cld
loop
push
mov
adcl
pusha
in
mov
pop
test
mov
mov
mov
rcrl
dec
inc
movb
and
test
inc
fldt
push
mov
cmpsb
cwtl
roll
push
xor
lock
cmc
jp
in
sbbb
dec
loop
clc
add
dec
cld
dec
sub
arpl
mov
or
iret
push
addr16
jle
push
mov
mov
test
outsb
pop
pop
test
les
mov
xchg
aaa
jnp
xor
push
xlat
lods
jcxz
jae
fstpl
inc
hlt
out
mov
mov
aad
mov
insb
in
fisubl
iret
xor
adc
push
pop
ret
pop
rsm
lcall
jmp
sub
outsl
jbe
xor
repnz
jl
pushf
jbe
sub
pop
inc
lods
addr16
cld
jp
mov
xor
push
push
js
dec
adc
cwtl
add
loope
push
int
cmpsl
add
stc
mov
out
insl
notl
idivl
pop
lock
mov
loope
roll
rcr
enter
int
loopne
push
mov
sbb
xchg
sahf
testl
pop
sub
pusha
xchg
mov
dec
je
gs
pop
rcrl
jbe
pop
mov
adc
push
lea
jnp
inc
mov
das
mov
mov
shll
test
jge
sti
xor
xchg
mov
xchg
cli
icebp
mov
jns
sub
mov
xor
jge
enter
test
sbb
out
xor
icebp
out
push
xchg
xchg
add
dec
shrl
pop
and
adc
inc
mov
bound
mov
or
mov
scas
cwtl
push
fcomip
rorl
out
test
pop
mov
lcall
cmp
dec
mov
push
cmp
pop
jo
js
mov
xor
xor
into
insl
stos
mov
mov
dec
aas
cwtl
push
lods
hlt
idivb
dec
in
and
lret
push
arpl
fldcw
xor
or
push
inc
push
mov
add
inc
dec
leave
lret
in
shll
stos
fiaddl
xor
enter
xor
icebp
add
mov
inc
mov
jae
pushf
or
mov
jp
test
aaa
mov
jge
mov
lahf
pusha
or
iret
xchg
add
sub
mov
inc
add
xchg
adc
inc
enter
cli
add
imul
xchg
shll
push
push
sub
jnp
lret
cld
std
inc
inc
dec
and
push
xchg
je
add
leave
sub
lahf
jmp
fdivl
or
pop
jnp
decl
sti
dec
sbb
or
or
and
pop
ja
movsb
pop
dec
shll
cmp
inc
jo
push
jl
mov
shrb
out
daa
clc
cmpsb
cmc
jns
mov
or
fsubrs
jle
imul
push
andb
push
sahf
xor
xchg
sub
mov
gs
test
movsb
ja
cmp
push
jns
int
push
shl
outsl
mov
adc
nop
lret
sub
loopne
sahf
arpl
push
out
in
inc
sub
mov
ds
jp
pop
adc
or
or
add
inc
adc
ret
in
in
popf
and
dec
lods
enter
dec
mov
inc
add
jne
mov
mov
mulb
jbe
pop
push
mov
push
aam
addr16
outsb
and
repz
or
xchg
xchg
xchg
xchg
or
cmp
inc
cmp
mov
test
add
add
es
jg
cmp
pop
cmp
fisttpl
xor
movsb
dec
push
dec
popf
and
mov
lods
imul
push
cmp
xchg
xchg
pop
dec
decl
imul
pop
add
popf
pop
mov
sbb
mov
xchg
mov
push
and
fiadds
dec
aad
xor
mov
sbb
cltd
dec
cmp
inc
and
stos
mov
lods
mov
xchg
inc
gs
inc
mov
dec
test
sbb
icebp
mov
cmp
gs
jl
mov
stos
daa
in
mov
es
and
sti
into
es
lret
inc
mul
inc
cmp
adc
sbb
mov
or
cmc
xchg
mov
daa
sti
dec
jae
sub
orl
popa
add
test
test
push
sbb
jno
jp
mov
jno
and
sbb
pop
cs
adcb
ja
sbb
jo
lds
les
xlat
pop
fisttpl
jns
stos
add
and
imul
imul
and
inc
inc
mov
push
cmp
imul
xchg
mov
lret
testb
dec
in
push
repz
add
or
push
leave
mov
lea
jecxz
ret
fadds
ljmp
pop
mov
mov
sub
lods
cs
out
test
push
or
or
lods
imul
inc
pop
add
or
xor
mov
clc
rclb
lods
add
lret
lds
mov
push
inc
daa
cs
pop
dec
mov
jb
bound
aad
jge
cmpsb
flds
bound
push
mov
xchg
xor
push
jns
lahf
std
icebp
xchg
cmp
cwtl
insl
arpl
mov
lcall
or
lock
pop
mov
rol
pop
mov
daa
jns
adc
addr16
mov
jp
pop
xor
cmc
fldl
dec
ss
xchg
mov
nop
sahf
bound
fldenv
mov
je
fcoml
stos
push
data16
pop
mov
mov
cmp
fbld
int
popf
scas
std
cld
lea
push
sub
cld
repnz
into
inc
out
jns
in
jno
cwtl
ljmp
or
dec
cmp
mov
loope
dec
jg
mov
inc
daa
int
dec
daa
cmp
and
scas
sbb
jb
fdivs
in
pop
ret
jge
sbb
cmp
xchg
sbb
inc
or
out
aaa
cwtl
fisubl
cmpsl
data16
cmp
fadds
les
lret
sbb
push
arpl
lock
or
test
pop
fbstp
mov
mov
cmc
mov
xor
ret
push
inc
jne
dec
mov
adc
sti
mov
fsubrs
mov
mov
mov
and
int
xor
rclb
orb
sahf
inc
jns
xor
fs
cld
leave
push
add
jl
je
xor
int
push
add
outsb
cmp
add
cmpl
and
fiadds
iret
cmp
pop
outsl
inc
and
mov
push
or
movsb
enter
mov
lock
leave
repnz
cmp
xor
push
jb
add
xorb
shlb
rclb
inc
in
testl
sti
dec
pop
stos
mov
xlat
push
hlt
daa
pushl
cmp
nop
dec
mov
nop
pop
lahf
jns
mov
dec
lock
ret
mov
cmp
sub
aas
inc
jb
xchg
jo
hlt
loop
cli
and
push
stos
shl
out
pop
mov
ss
add
mov
lret
mov
cmp
mov
mov
aad
jns
sub
scas
sbb
mov
push
xchg
pop
mov
aas
sbb
mov
sbbl
xchg
scas
dec
ljmp
xchg
mov
mov
shlb
popf
pandn
fdivl
or
add
je
inc
aam
jb
adc
fwait
and
xor
xchg
mov
cs
jne
mov
mov
cld
pop
or
xchg
cli
call
ficoml
test
nop
xor
and
js
das
inc
jmp
mov
or
sarl
add
mov
or
icebp
clc
ds
daa
pop
aam
pop
push
sbb
popf
pop
push
imul
es
xchg
jle
test
loopne
jge
js
push
jae
adc
jle
jo
test
push
sbb
push
pusha
xor
inc
fildl
fnstcw
or
mov
es
inc
and
cld
cmp
lea
xorb
pop
fistpll
pop
leave
cmp
or
sub
pop
pop
int3
mov
int3
insb
xor
mov
add
jns
movl
pop
xlat
es
adc
jg
push
pop
cmp
xlat
sbb
and
std
push
push
out
leave
xor
mov
data16
aam
sahf
jo
loop
bound
std
mov
cld
popa
js
in
das
lea
sub
inc
stos
add
mov
stc
mov
cwtl
aam
std
xor
dec
jp
fdivrl
mov
inc
movsl
loop
daa
add
sbb
cli
adc
popf
jle
add
push
inc
aad
dec
cmpb
out
test
mov
movsb
daa
pop
jo
outsb
jne
cmp
mov
pop
stc
fcoml
lods
pop
pushf
aaa
gs
test
shlb
in
out
out
push
xchg
add
push
cmp
inc
outsl
out
mov
inc
call
or
xor
arpl
out
dec
test
sbb
or
rcr
daa
ja
push
test
in
mov
scas
icebp
ss
fsubp
test
push
shlb
jb
ret
cltd
adc
fcomps
dec
mov
inc
lea
or
pop
pop
test
inc
sbb
mov
cwtl
xchg
inc
ss
sbb
or
in
adc
jno
pushf
test
imul
mov
shr
lret
ret
adc
bound
pop
sarb
out
xor
out
jp
ficoms
or
push
loopne
inc
inc
push
cmp
sahf
or
cmc
test
jns
sbb
pop
cmpsl
adc
jno
jbe
jmp
insl
dec
pop
sub
xor
xchg
xor
test
insl
jg
xor
in
fdiv
inc
in
jmp
scas
dec
dec
dec
shr
add
sub
sbb
inc
gs
mov
sahf
mov
mov
sub
inc
clc
mov
lcall
inc
adc
mov
add
sbb
xchg
dec
sahf
xchg
push
mov
mov
xor
out
subl
fnstsw
fwait
insb
sbb
into
ss
or
test
cld
sub
loopne
repz
mov
inc
pop
add
in
sti
fdivl
outsl
lret
push
out
fstp
iret
lea
jge
jl
sub
in
adc
data16
push
inc
push
data16
ret
mov
outsb
rcrl
inc
dec
out
sub
std
test
push
ret
mov
insb
fucomp
push
and
ljmp
adc
xor
roll
cli
jb
xor
jne
xchg
or
dec
fdivs
flds
push
sbb
jle
test
ljmp
bnd
jne
stos
test
out
cld
inc
cld
into
dec
test
shlb
lods
dec
push
cs
mov
push
das
mov
aas
aas
dec
mov
jge
lcall
fstpt
xor
es
imul
rcrl
mov
or
lcall
or
pop
jns
insb
inc
ret
lcall
xor
add
xchg
dec
mov
add
sub
shrb
adc
stos
inc
dec
in
and
adc
into
arpl
pop
rcl
repnz
inc
mov
inc
aas
jl
loope
fwait
lds
lcall
cmpb
push
sarb
jns
out
int3
and
pop
je
mov
pop
fcomi
outsb
fucom
mov
aam
adc
out
xchg
inc
fidivrl
mov
add
rolb
dec
sbb
into
dec
into
sahf
mov
pusha
scas
sti
incb
dec
out
mov
in
push
ds
cmpsl
xor
jge
mov
cmp
mov
jg
cmp
jae
sbb
in
sti
mov
inc
cmpl
inc
inc
xlat
int
adc
stos
cmp
or
jmp
adc
inc
fldenv
int
pop
stc
jmp
jecxz
flds
inc
cmp
push
aas
out
fcomps
cmpsb
lret
ja
movsb
jns
jge
adc
sub
mov
inc
cmpsb
out
ret
mov
push
addl
or
pop
ficompl
lods
sub
test
push
add
add
pusha
sbb
and
test
pusha
dec
and
mull
jle
add
inc
rorl
hlt
mov
pop
out
insl
inc
dec
fists
or
pop
adc
imul
add
and
aad
jp
outsb
dec
pop
dec
pop
test
popf
inc
sub
test
adc
cmp
clc
mov
push
sarl
jl
jmp
sub
xchg
gs
sbb
shll
inc
mov
jp
sub
mov
std
aas
mov
pop
pop
jmp
and
aam
testl
sub
shll
nop
insb
or
cmp
lea
jmp
jmp
and
dec
adc
mov
ret
push
push
test
push
jo
test
sub
std
nop
fidivrl
test
scas
hlt
and
xchg
jo
adc
add
inc
test
mov
andb
pop
movsb
imul
outsl
incl
dec
jp
out
loop
dec
cmc
cmpsb
jg
shll
mov
js
sub
cmp
sub
xlat
cmp
fwait
pop
loopne
iret
jg
jecxz
test
lahf
mov
adc
orl
cs
minps
push
icebp
in
jnp
pop
pop
outsl
cmp
imul
dec
stc
dec
xchg
addr16
cmpsb
pushf
inc
xchg
pop
pop
idivb
add
inc
fcoms
sub
and
lahf
shll
aaa
and
lods
or
call
popf
jae
sbb
incl
mov
es
xor
inc
mov
mov
pop
sbb
loopne
jg
inc
movsb
je
dec
fsubs
fbstp
dec
sub
daa
cld
adc
fimuls
into
out
push
test
push
lahf
dec
sub
push
cmpl
cmp
pop
jle
add
add
mov
xor
sbb
ljmp
mov
push
imul
clc
andb
enter
scas
and
rcrb
cmovge
or
fsubrp
les
pop
aam
iret
ret
lods
lahf
dec
sub
mov
fsubrs
mov
pop
loop
std
sarl
add
cwtl
or
inc
dec
mov
jo
pop
into
xchg
enter
lods
mov
popf
xchg
mov
sti
push
shlb
sbb
mov
nop
gs
push
lock
adc
push
das
xchg
ds
pop
xchg
out
xchg
mov
cmpsb
xor
mov
fmuls
dec
jnp
hlt
pop
sbb
popf
insl
add
pop
push
daa
incb
xchg
xchg
pop
mov
sbb
dec
js
mov
test
dec
jle
ja
rol
cwtl
sbb
in
lock
dec
gs
jno
cmp
es
adc
xor
inc
jne
jg
mov
sub
shll
dec
rorb
lret
fwait
jo
data16
xlat
xchg
insl
lcall
and
scas
aas
push
imul
add
or
jl
fs
sbb
jp
popf
push
aas
test
sbb
out
jnp
out
mov
mov
cld
ret
sbb
shll
xchg
or
or
icebp
js
push
imul
iret
push
aam
repnz
xlat
sub
loope
push
sahf
or
push
jmp
fistpl
adc
std
pop
mov
push
fstpt
push
daa
push
repnz
sti
mov
inc
inc
sub
movsl
into
push
mov
je
movsb
enter
mov
mov
adc
mov
dec
sub
sbb
lahf
bound
jb
nop
jle
insb
enter
push
cltd
jnp
bswap
stos
xchg
jmp
out
sub
insb
cmp
xchg
inc
inc
test
xor
jno
push
lret
loop
push
pushf
push
push
repz
sub
cmp
adc
lock
xorl
stos
gs
push
jmp
pop
mov
mov
jne
ss
or
ret
outsl
cmp
in
mov
jmp
sarl
pop
mov
test
arpl
sub
repz
les
cmp
bound
stos
arpl
addl
es
mov
hlt
sbb
adc
data16
dec
sbb
mov
ret
dec
sbb
jp
lcall
fistps
pop
cli
jmp
ljmp
push
arpl
scas
enter
adc
ret
cmpsb
add
push
repnz
dec
stos
jnp
adc
lds
jmp
and
mov
mov
bound
jl
enter
adc
or
repz
fucomp
aam
inc
jge
imul
mov
push
test
sbb
mov
xchg
or
rcll
sbb
fstpl
xor
xchg
pop
add
mov
cwtl
xchg
ljmp
jns
ljmp
mov
js
in
mov
shl
adc
jb
sub
insl
push
shlb
add
into
jno
incl
ret
out
lahf
xlat
sti
xchg
je
xchg
mov
aad
pop
stos
push
js
out
jno
xacquire
neg
fnstcw
or
or
insb
and
mov
lock
xor
push
jno
mov
test
mov
pushl
rcrl
sub
je
in
xchg
push
sbb
arpl
int
or
shlb
repnz
sub
mov
cmp
mov
add
sbb
adc
cli
dec
add
lock
inc
les
pushf
push
and
mov
lret
outsb
loopne
inc
icebp
cmp
sarl
pop
outsb
push
mov
out
dec
push
dec
pop
pop
cld
in
pop
adc
and
mov
sti
xchg
ret
and
jnp
lret
leave
jo
fcmovnbe
mov
stos
movsl
jne
cmc
rorl
xchg
xor
js
xor
dec
rcll
xchg
push
jne
mov
rorb
xchg
dec
ljmp
inc
cmp
repnz
jmp
repnz
dec
cmc
popa
xchg
xor
icebp
nop
fcomi
sub
mov
repnz
int3
retw
movsl
xor
mov
sub
mov
push
js
pop
int3
std
push
push
jo
loop
movd
int
push
jnp
repnz
cmc
pop
jae
out
cmp
jo
cmc
adc
mov
adc
xchg
jnp
cld
popf
jl
xchg
inc
popa
bound
mov
or
test
out
inc
ss
stc
jae
mov
fisubrs
cmpsb
rorl
push
in
inc
push
lock
inc
fwait
fwait
dec
je
pop
in
in
sbb
jecxz
lcall
cltd
push
je
add
jae
in
jp
mov
push
fstpt
cmp
lret
inc
decl
in
add
add
inc
mov
mov
daa
xchg
aaa
push
mov
fisttpll
mov
mov
shl
dec
pop
hlt
jns
sub
and
and
mov
das
mov
add
mov
inc
call
out
adc
aas
jp
in
inc
xchg
push
data16
jnp
fisttpl
jl
mov
dec
lea
mov
adcl
jnp
push
adc
ds
adc
sub
test
loopne
repnz
push
and
or
cmp
adc
call
and
push
and
pop
mov
cmc
cmpsl
or
fsubl
fidivrl
mov
js
sarb
into
leave
popa
ljmp
lea
inc
and
popa
movsb
jb
rol
adc
mov
dec
movb
call
inc
adcl
decb
loopne
lock
jl
mov
jbe
aas
lret
pop
adc
mov
dec
rclb
pop
sbb
add
xor
push
ja
xchg
mov
or
out
loope
mov
sbb
rol
clc
shlb
adc
push
out
lds
jae
insl
mov
push
or
sti
mov
jle
dec
test
and
and
jns
mov
sbb
mov
or
mov
inc
push
mov
call
lcall
dec
popa
sbb
loopne
and
icebp
push
stc
pop
jmp
mov
pop
dec
test
cmpsb
adc
fldl
jmp
adc
push
cmc
mov
pop
cmp
lea
jb
cmpb
xor
xchg
idiv
xor
stc
sub
out
cmpsb
mov
rcrb
fistps
dec
ja
fadd
scas
xchg
neg
sbb
jge
pop
and
pop
lods
xchg
dec
jecxz
jo
push
roll
fcoms
out
xor
jb
cs
lods
push
lock
xchg
repnz
jg
jbe
xchg
jmp
mov
outsl
std
ss
test
cmp
xor
or
jo
jae
cld
shll
outsl
mov
xchg
dec
test
cmp
fs
test
jnp
mov
inc
mov
mov
or
sub
xchg
repz
or
pop
je
xchg
pop
stc
lret
mov
dec
or
shrb
cmp
or
nop
stos
std
sbb
loopne
add
sub
scas
xchg
imul
inc
call
xchg
add
cld
push
jne
rclb
mov
insl
xchg
cld
cmp
pushf
xchg
rolb
sarl
mov
mov
cwtl
xor
lock
push
shlb
in
xchg
sbb
loop
pushf
sub
mov
xor
push
arpl
out
push
cmp
sbb
sbb
int3
or
mov
push
jge
aaa
popf
cld
aam
adc
ljmp
int
dec
pop
add
int3
addr16
aas
jb
cmpsl
push
pop
iret
and
mov
xchg
scas
test
or
cltd
setle
stc
enter
nop
seto
push
xor
jae
loope
cmpsl
xchg
xor
outsl
cmp
jge
inc
shlb
push
ja
jp
ljmp
add
xor
mov
add
mov
pop
stos
jecxz
mov
aas
jmp
aas
xor
nop
pop
pop
jnp
push
jno
lcall
sti
cmpb
not
ret
mov
sbbb
out
stc
push
add
iret
clc
outsb
mov
cmp
jbe
nop
ss
std
mov
lea
daa
stc
pop
sar
add
pushl
and
sub
ljmp
jnp
fisubrl
sub
addr16
xchg
movd
jnp
adc
sub
jle
mov
in
adc
fdivl
cltd
mov
mov
xlat
in
and
es
adc
sub
das
lods
jp
add
and
adc
sbb
leave
hlt
notb
out
ret
lea
in
sub
into
cmp
hlt
mov
cmp
lcall
ljmp
loop
ret
faddl
hlt
add
out
fs
pop
and
lret
lret
inc
pop
arpl
addr16
jecxz
add
xor
movsb
leave
jne
sbb
shl
cwtl
mov
in
pusha
pop
cmp
xchg
and
push
inc
or
mov
cmpsb
cmp
and
loope
into
test
push
xor
in
scas
pusha
push
mov
push
clc
insl
jno
and
dec
in
mov
or
pop
pushf
jae
out
icebp
fidivs
jo
dec
sub
divl
lcall
lcall
inc
cmp
mov
lods
mov
push
jle
or
js
aam
xor
imul
roll
ret
jg
iret
ret
and
adc
decb
idivb
mov
inc
pushf
mov
adc
in
call
mov
and
dec
int
add
sbb
rolb
dec
test
add
sti
sti
fistpl
stc
pop
or
adc
fdiv
roll
add
fadd
sub
test
js
decb
mov
or
xchg
pop
xor
imul
mov
push
mov
sbb
push
xchg
xor
mov
or
mov
jbe
xor
push
fcomps
lret
mov
mov
aaa
jo
mov
xchg
dec
mov
cli
wbinvd
push
aas
icebp
into
xchg
lahf
and
pop
and
sahf
push
testl
xchg
in
add
xorb
mov
sbb
cmpsb
cmp
lret
mov
adc
movsb
xor
xchg
inc
mov
fistpll
out
lods
addr16
inc
add
scas
int3
imul
fistpl
dec
pop
outsb
xor
push
xchg
ret
mov
pop
mov
sub
imul
ds
pop
je
addr16
jmp
pop
xchg
cmp
ds
sbb
adc
out
negb
sbb
scas
xchg
dec
test
in
movl
popa
adc
pop
pop
aas
out
inc
xchg
cmp
push
ljmp
fldl
xor
fists
mov
out
sub
outsl
mov
push
popf
or
andl
inc
in
mov
push
sub
cltd
push
leave
out
add
mov
jl
mov
addr16
push
xchg
sti
mov
mov
inc
and
lods
in
mov
gs
push
call
adc
lock
lret
stos
dec
mov
mov
jb
cmp
mov
stos
dec
mov
cli
pushl
cmp
mov
cmp
adc
imul
js
popa
daa
sub
xor
fisubs
ss
and
adc
cmp
shll
jmp
fdivrl
mov
push
movsl
cmpsl
push
and
and
mov
jno
test
in
pop
cld
test
cmp
inc
xlat
push
dec
stc
lcall
xchg
pop
mov
divb
inc
mov
scas
repnz
mov
and
out
mov
cs
mov
xchg
sbb
js
xchg
add
das
shll
inc
lahf
push
aam
mov
jbe
jne
cmp
cli
daa
fildl
loop
or
xchg
loop
out
jp
xor
icebp
adc
mov
insb
push
or
and
dec
gs
stos
bound
jge
rcrb
pusha
pop
dec
cmp
push
mulb
or
and
push
xor
and
xchg
jmp
mov
adcl
out
push
or
inc
push
lret
aas
or
push
cmp
ret
mul
outsb
mov
mov
es
repnz
sahf
lea
std
inc
jge
out
es
in
push
repz
inc
int
cmp
pop
adc
clc
daa
sti
cs
mov
mov
pop
xchg
adc
cld
mov
add
int3
pop
fnstsw
cmpsb
lahf
js
cld
mov
in
ja
testb
out
icebp
mov
insl
fs
rcr
dec
inc
sbb
movsb
mov
fimuls
mov
jo
pop
push
xlat
mov
addr16
dec
je
sbb
adc
cmp
sbb
jne
adc
push
xchg
pusha
push
mov
mov
cmp
gs
xchg
xor
pop
or
les
xor
mov
flds
dec
imul
mov
out
inc
push
and
imul
pop
jecxz
sub
mov
movsl
add
cmc
std
mul
mov
or
stos
loope
adc
xor
ja
aad
lods
out
lea
xchg
ss
xchg
pop
nop
mov
pop
cmp
jecxz
aaa
fldl
adc
mov
dec
sbb
cwtl
arpl
mov
inc
mov
loopne
incl
mov
or
jle
mov
les
mov
rorl
push
cmp
xor
xor
mov
mov
nop
or
mov
mov
ret
fucomip
xchg
ret
mov
xchg
sti
add
push
cmp
xchg
mov
scas
fsubr
add
jmp
rolb
test
jg
rcr
fmuls
leave
push
stc
sahf
add
sub
insl
repnz
cmp
fwait
mov
imul
mov
pop
add
sub
adc
mov
and
icebp
xor
rorl
movl
mov
cmp
and
and
insb
mov
idivb
out
rcl
iret
rorb
test
jo
pusha
xor
nop
xorb
divb
das
call
pop
sbb
stos
push
hlt
fdivr
cmc
out
xchg
js
xor
sti
or
inc
test
dec
sub
cmp
dec
shrb
mov
stc
jg
dec
jl
test
add
fwait
mov
mov
push
dec
clc
cmp
test
or
adc
in
iret
inc
jae
ret
nop
xlat
js
xor
or
xor
cs
mov
pop
cmc
out
xchg
jo
in
ret
stc
loop
xchg
movl
push
loope
dec
dec
pop
jbe
mov
xchg
jae
inc
mov
test
scas
mov
sbb
adcb
or
push
shlb
push
mov
lahf
popa
movsl
jp
xchg
push
js
in
popf
inc
xor
cwtl
xchg
arpl
nop
cmp
test
stos
and
int3
push
clc
mov
stos
ret
add
or
sub
dec
jae
mov
aam
mov
xchg
pop
adc
mov
or
sti
mov
jmp
mov
cmp
iret
jnp
iret
xlat
leave
cmp
lock
stos
xchg
ficoml
cmp
ds
mov
cmpsb
mov
mov
adcb
pushf
hlt
xchg
mov
cmpsb
repnz
add
inc
adcl
xchg
fsubr
fldt
mov
dec
push
sbb
scas
out
pushl
ds
xor
lahf
test
movsb
fcoms
xchg
movsb
xor
out
sub
push
mov
sub
jbe
in
into
mov
pusha
push
lcall
scas
adc
cmpsb
loopne
test
ror
sub
cwtl
lds
sub
pop
xchg
dec
adc
inc
inc
jns
out
xchg
cmp
push
pop
mov
sbb
dec
leave
pushf
xchg
fildll
rcrl
push
enter
shlb
idiv
nop
iret
mov
in
mov
mov
adcl
imul
push
inc
adc
jae
mov
fidivl
lock
lods
lods
mov
js
cmp
fildl
cmpsl
mov
and
inc
stos
xchg
out
les
es
push
push
dec
sbbb
pop
dec
insl
adcl
xchg
xlat
mov
lock
push
jle
xchg
sub
xchg
cmc
das
lahf
loopne
pushf
clc
mov
add
cmp
xlat
fimull
ljmp
jno
jo
add
mov
mov
jne
dec
push
movd
ret
loop
inc
mov
inc
fwait
jo
iret
mov
dec
test
test
icebp
fmul
jne
mov
lret
ja
and
lret
mov
mov
xchg
dec
jae
and
fsubl
push
dec
leave
dec
fsts
sub
adc
sub
pusha
test
filds
and
push
xchg
iret
out
psubd
sarb
sub
mov
mov
or
ss
cmpl
mov
cmp
add
add
jmp
jno
pop
xor
aad
pop
loop
adc
push
sahf
insb
xchg
int3
sti
out
xor
dec
or
push
out
adc
aaa
aas
stos
jmp
mov
mov
cmpsb
mov
ret
add
jp
cmovb
jb
pop
dec
shl
xor
dec
sar
cmpsb
push
mov
push
and
stos
fdivrs
movsb
mov
enter
push
inc
cld
jno
fstp
pop
clc
lahf
icebp
pop
mov
lock
inc
stos
pop
fwait
and
push
cmpsb
das
fsubrl
pop
cwtl
push
aam
jp
dec
out
pushf
sbb
aaa
int3
lret
daa
push
mov
repz
sbb
pop
adc
andb
add
sub
adc
xchg
sub
push
data16
rolb
mov
push
adc
adc
push
out
out
pop
ljmp
cmpsb
andb
lods
shll
mov
mov
pop
push
mov
lds
in
inc
mov
stc
xchg
pop
sbb
sbb
popf
scas
ret
out
sti
pop
out
mov
jb
xchg
sbb
push
xor
push
or
fs
mov
sub
push
lcall
xchg
popa
and
hlt
addr16
icebp
xorl
mov
femms
mov
test
popa
out
scas
xchg
fmul
das
mov
jge
sbb
popa
orb
xchg
dec
or
popf
adc
push
fsubrs
stc
pusha
daa
mov
fisttpll
sbb
popf
mov
shrb
push
jnp
and
dec
jne
pop
cli
shl
loope
mov
imulb
in
lret
dec
jmp
push
sub
subb
xor
xor
fs
mov
mov
jmp
pop
and
cltd
gs
push
pop
add
js
push
pop
sbb
mov
mov
or
inc
push
dec
jge
sub
mov
cmp
or
mov
push
inc
out
aam
pop
mov
cld
dec
inc
xor
les
lds
sub
jl
icebp
jecxz
inc
or
outsl
movsl
sub
pop
push
outsb
sbb
mov
aas
mov
lods
jle
icebp
jle
shlb
std
jb
hlt
movntps
movsl
pop
out
mov
loope
int3
insb
adc
out
sub
dec
lea
dec
lods
sub
mov
push
insl
adc
movsl
pop
push
rol
cmpsl
out
testb
push
dec
push
rorb
in
adc
xchg
jnp
lret
mov
and
pop
repz
outsl
pop
xchg
dec
popa
arpl
mov
leave
jnp
leave
out
push
js
jle
and
incb
popa
ret
mov
xchg
std
push
push
mov
and
adc
jo
dec
insb
jns
sub
jp
jg
xchg
jp
add
jno
jns
sbb
cmp
sti
sub
jmp
xor
test
push
mov
or
push
sub
mov
add
imul
xor
jae
pop
adc
cmp
xor
dec
xor
lods
inc
mov
lahf
sub
sub
lret
das
add
mov
imul
add
lock
repz
leave
mov
mov
cmpsb
rcll
ds
mov
movb
dec
bound
mov
leave
xor
jg
sbb
jno
mov
push
in
mov
out
int3
cmp
ljmp
lods
gs
mov
clc
push
insl
jo
sbb
sbb
std
gs
push
stos
xor
mov
inc
mov
adc
fstpl
inc
imul
sbb
movsb
sarl
pop
cmp
mov
xchg
push
xchg
mov
fisubrs
data16
ret
xor
cmp
mov
or
das
xchg
lods
sub
hlt
lret
xchg
push
or
mov
ret
test
ljmp
push
pop
or
push
insl
inc
sub
xchg
inc
mov
push
xchg
jmp
xchg
dec
icebp
dec
adc
add
jnp
dec
xchg
adc
shr
icebp
jne
int
pop
inc
and
sbb
adc
sub
sbb
mov
aas
test
aad
or
arpl
cmp
in
stos
lods
cld
movb
sarl
stos
lcall
add
and
ficompl
leave
and
jg
mov
pop
xlat
sbb
addr16
jp
xchg
mov
fiadds
insb
inc
js
test
cli
pop
fwait
xchg
mov
fdivl
lahf
pop
dec
inc
outsb
into
jo
push
mov
es
scas
push
jbe
cltd
push
imul
sub
sbb
lods
pop
sub
push
aad
mov
dec
adc
inc
or
inc
arpl
scas
scas
jbe
ljmp
lahf
in
std
dec
outsl
pop
adc
xchg
pop
shll
mov
lcall
or
shll
sbb
push
mov
clc
cmc
mov
xor
test
mov
fs
cs
ljmp
fcoml
xchg
cmp
loope
inc
push
mov
mov
pop
addb
imul
dec
xor
mov
push
jne
sbb
nop
xor
data16
push
add
add
sbb
sahf
mov
iret
mov
dec
mov
mov
aas
fcmovnbe
insl
jle
not
mov
dec
adc
or
test
push
or
or
mov
and
aas
stos
and
inc
cwtl
cmp
xchg
mov
mov
or
in
icebp
or
test
cmpsl
pushf
mov
int3
cmp
lea
or
pop
cmpsb
dec
imul
pop
cmpsb
addl
push
mov
xor
fwait
adc
push
mov
mov
test
push
inc
or
ficompl
mov
jbe
pop
sub
int3
lods
stos
fadds
add
lahf
rcr
in
add
imul
jne
fistps
xorb
mov
or
les
pushf
mov
xor
add
jmp
loope
das
dec
cmp
dec
in
push
cltd
orl
rclb
cltd
jo
push
or
ret
push
sub
js
cs
jnp
xchg
push
adc
mov
sub
int
xchg
jl
sbb
out
test
lods
lret
dec
out
push
gs
or
inc
lock
ret
cmp
aaa
push
cmp
fs
insb
lds
addr16
stos
ja
mov
mov
inc
xchg
add
cmp
or
mov
push
call
ficoml
enter
sub
nop
pop
ror
lock
inc
hlt
mov
popa
mov
rcl
push
sub
in
repz
mov
js
out
dec
and
push
aad
push
scas
dec
notl
pop
ret
mov
clc
in
cmc
xor
xor
jo
and
lock
jne
mov
mov
inc
or
dec
sub
sbb
or
adc
fistps
push
mov
sbbb
cmpsl
xchg
xchg
xor
cwtl
test
dec
test
cmc
push
sarb
xor
cli
out
sbb
or
sub
clc
mov
mov
les
int
inc
movsl
push
adc
icebp
push
and
ja
add
push
mov
stc
lods
pushf
and
fdivl
loopne
pop
jo
cmp
cmp
jl
mov
nop
arpl
mov
mov
inc
gs
xor
jo
loope
pop
lret
sbb
rcrl
pop
rcrl
add
movsl
ss
daa
ljmp
xor
cmc
xchg
stos
sbb
hlt
jno
jne
shlb
mov
sbb
mov
pop
xorl
jne
fldenv
in
fldcw
pop
or
pop
xchg
mov
movsl
jl
es
test
jns
and
push
imul
mov
mov
adc
xlat
dec
iret
xchg
and
lahf
movsl
jmp
call
cwtl
sti
std
test
inc
cmp
inc
std
imul
xor
mov
fiaddl
aas
subss
and
xor
pushf
jp
cltd
mov
xor
jmp
jmp
mov
pop
cld
push
add
cmp
lret
lcall
and
out
xchg
or
jp
push
lods
lret
sub
and
outsl
mov
es
push
iret
pop
fmul
addb
cmp
pop
data16
and
orb
ss
dec
jbe
mov
cli
imul
lret
xor
pop
mov
lods
test
jnp
jle
inc
enter
sbb
add
int
sti
xor
inc
or
mov
push
packsswb
adc
cld
enter
int
jno
daa
into
movsb
sub
mov
les
outsl
loop
jno
jg
cli
push
mov
push
mov
nop
dec
xor
adc
xor
dec
dec
filds
cs
ss
push
xchg
mov
mov
insl
push
sbb
aaa
sub
sub
cmpsb
fdivrp
test
dec
push
lahf
adc
addr16
fwait
push
es
dec
clc
stc
sbb
in
inc
inc
xor
cmp
jo
jno
call
inc
sub
test
popa
ret
js
sub
cmp
and
sbb
jl
mov
test
jle
mov
mov
cmp
add
adc
mov
xor
sub
leave
out
inc
cltd
xor
xchg
out
adc
and
cmp
cld
sahf
lods
fdivrl
enter
or
in
mov
in
xor
ss
scas
pop
std
xchg
icebp
sub
xor
fcomps
sub
xchg
adc
mov
loope
jg
int
push
in
dec
mov
aad
jnp
addr16
scas
push
or
mov
sbb
daa
mov
sbb
xor
test
xor
clc
fs
aaa
imul
cmc
leave
scas
data16
fcompl
rol
mov
push
aas
jg
xor
sub
inc
pop
movb
ss
fmull
pop
out
pop
xlat
push
mov
data16
imul
adc
shll
cmp
push
insb
shrl
xchg
inc
dec
sub
mov
and
ss
aaa
push
jmp
mov
idivl
add
xchg
jl
in
jecxz
adc
dec
in
cmp
adc
mov
lods
adc
je
xor
scas
push
push
inc
lret
cld
mov
or
mov
push
pop
mov
clc
push
or
jae
repz
ss
dec
cmp
addr16
xor
mov
pop
sub
out
adc
sbb
pop
enter
fisubrl
lahf
dec
out
shrl
and
or
push
jnp
add
xchg
cwtl
imul
mov
or
xor
xor
out
les
xchg
lods
pop
xchg
mov
jb
or
pop
mov
adc
popf
es
pop
and
in
fwait
push
mov
or
mov
add
movsb
and
push
andl
repz
rcrb
cs
in
mov
and
xchg
leave
arpl
sbb
lahf
cmp
mov
pop
rorb
sbbb
cmp
je
loop
cli
inc
sbb
lahf
movsl
xchg
sub
adc
cwtl
and
pop
jg
push
mov
push
mov
mov
aas
cmp
lods
outsb
or
mov
sub
mov
faddl
jmp
inc
loop
push
popa
dec
or
fadd
gs
xor
inc
notb
sti
jnp
or
mov
dec
pop
pop
in
loop
xchg
int3
cmp
adc
call
dec
pop
pop
mov
mov
xor
stos
cmp
in
jmp
cmpsb
or
je
add
adc
sub
lcall
ss
xor
dec
adc
and
cmp
cmp
jl
enter
aaa
and
sbb
push
les
xor
mov
add
add
jbe
mov
jns
mov
push
and
sbb
jle
rorl
or
lods
fmul
inc
pop
stc
stos
es
sub
add
and
fwait
cli
sti
in
inc
inc
dec
jb
sub
and
and
je
fcomps
ds
loopne
scas
dec
adc
pop
mov
adc
orl
sbb
mov
xchg
push
add
or
test
mov
in
push
test
in
push
push
shll
shrl
mov
fstpt
mov
pop
clc
xchg
xchg
out
es
push
mov
es
test
add
scas
scas
push
mov
add
movsb
mov
xchg
sub
cmp
push
mov
dec
outsl
std
cld
jb
jp
sub
mov
add
jg
or
mov
imul
push
test
sbb
shll
xchg
outsb
gs
aad
stc
ljmp
sbb
add
imul
sbb
or
or
sahf
mov
inc
orl
xchg
jns
jge
or
data16
cmp
lahf
sti
sub
stc
and
inc
data16
jbe
xchg
xor
jbe
out
mov
out
xchg
icebp
nop
mov
pop
fdivrs
repnz
mov
mov
adc
je
pop
cli
mov
subb
les
adc
outsb
or
mov
cmp
add
mov
push
inc
aam
push
shr
mov
enter
push
leave
mov
outsl
dec
bound
icebp
ret
xchg
inc
pop
mov
cmp
mov
rcl
std
and
push
and
xor
sbb
mov
mov
jmp
sub
loop
xchg
push
jg
fmuls
cmp
rcrl
jp
push
inc
scas
outsl
in
inc
and
and
mov
shlb
pop
push
lods
ss
and
pop
cmp
nop
mov
das
jae
xor
mov
outsb
hlt
inc
mov
xor
dec
icebp
add
aaa
pop
push
inc
mov
and
mov
ljmp
and
add
jo
pop
add
lahf
jo
jno
je
xlat
pop
sbb
fisttpll
arpl
ud1
mov
roll
jnp
lods
or
repz
ret
pop
push
in
adc
rclb
mov
xorb
pop
pop
sbb
faddl
lods
stc
es
cmp
filds
les
jge
pop
push
inc
in
jg
pop
dec
add
push
int
into
sub
mov
movsb
and
adc
inc
ss
mov
shlb
jecxz
sub
xor
xchg
lds
push
mov
int
dec
fwait
or
sahf
add
push
mov
xor
pop
enter
xchg
mov
add
insl
enter
jne
jge
push
repnz
out
push
xor
xor
adc
mov
xlat
ret
loopne
lds
std
andl
negl
mov
dec
popf
sbbl
stos
xchg
lods
int3
jbe
ja
xor
adc
xlat
sub
fsub
mov
test
mov
nop
ret
das
test
in
daa
or
rcrb
sbb
in
scas
icebp
arpl
pushf
jmp
and
cmp
push
push
lret
sub
jnp
dec
stc
test
scas
pop
mov
shl
cltd
xchg
mov
dec
jmp
add
xchg
push
dec
sub
mov
scas
dec
pop
std
push
arpl
fs
sbb
inc
xorl
sbb
nop
sbb
scas
mov
sbb
mov
and
lret
in
xchg
jmp
mov
je
bound
or
repnz
enter
stos
mov
xchg
or
mov
cmpsb
and
sub
jne
xor
sbb
popa
pop
mov
iret
jnp
pop
xor
inc
adc
test
mov
xchg
add
sbb
out
and
sub
xchg
add
jl
and
out
test
sub
pop
lahf
cs
pusha
or
mov
fcmovnu
nop
daa
adcl
aas
dec
xor
lret
push
outsb
gs
call
adc
inc
ss
ret
add
inc
sub
outsl
cmp
dec
mov
inc
int3
outsl
pop
iret
and
dec
add
cmp
xlat
or
or
dec
adc
or
out
xchg
pop
mov
sub
jns
aad
add
jle
xor
bound
mov
mov
cmp
outsb
es
fs
sbbl
mov
mov
xor
sarb
xchg
mov
adc
xor
hlt
and
jnp
mov
out
mov
je
xchg
sbb
and
lret
adc
sti
jae
sub
aad
mov
xor
and
scas
add
ficoml
mov
adc
xor
mov
std
mov
xor
pusha
xor
pop
pop
xchg
ds
addb
add
sbb
xchg
lods
lret
sbbb
jbe
lock
ret
rolb
cmc
sub
sbb
cmp
sbb
xchg
inc
sbbb
cmp
push
pop
cmp
nop
pop
jae
out
sub
sbb
dec
push
fs
iret
xchg
sbb
icebp
repz
mov
mov
inc
xor
insl
arpl
addr16
mov
cmpsl
imul
cwtl
pop
and
pop
push
imull
nop
std
and
mov
dec
or
mov
lods
test
dec
xchg
mov
popf
cli
push
lods
cmpsl
in
mov
adc
adc
mov
mov
stos
jg
dec
mov
sti
dec
int
std
cmc
xor
in
lods
sub
mov
addr16
xchg
stc
sbb
jne
sbb
lods
lods
out
cmp
push
sti
mov
pop
out
mov
arpl
mov
jnp
bnd
mov
sub
sbb
jne
jmp
push
int3
add
adc
ljmp
add
leave
stos
pop
inc
push
fidivrl
lds
jae
aad
out
jb
mov
mov
add
and
pop
add
pop
shlb
pop
mov
lcall
sbb
mov
lcall
xchg
int3
dec
fstpt
sahf
jp
js
pop
push
test
inc
lods
pop
cmp
push
call
pop
adc
sub
lret
imul
xchg
popf
jmp
inc
mov
ficompl
mov
push
sbb
jp
push
mov
pop
cmpsl
into
cmp
aad
add
ret
cltd
inc
in
pop
aad
insb
mov
inc
jp
out
sub
aas
xchg
and
adcb
and
dec
jecxz
aad
jmp
cmc
cmpsl
lcall
and
icebp
popf
stos
push
into
adc
adc
adc
bound
pop
roll
cmp
xor
mov
xor
or
jecxz
dec
cld
ficoms
mov
loope
mov
xor
test
push
fwait
mulb
adc
in
push
idiv
push
dec
ds
stos
repz
dec
and
xor
aad
call
cmp
inc
jo
lret
cld
push
cli
pop
pop
cltd
lods
movsl
push
xor
jnp
pop
std
out
xor
add
dec
cmp
push
inc
mov
cmp
inc
mov
mov
mov
lret
cmp
frstor
lock
jne
mov
or
dec
lock
fldl
int
sub
push
cmpb
scas
test
sub
flds
faddp
or
pop
xchg
xchg
push
inc
xor
mov
addb
call
add
add
enter
and
dec
xor
lcall
stc
je
pop
xchg
jno
scas
nop
sbb
dec
dec
and
js
imul
cltd
pop
int3
inc
xor
das
aas
jbe
fldcw
mov
inc
fsubr
into
mov
mull
mov
insl
inc
sub
out
ficomps
shlb
popa
mov
insb
fnstcw
lret
mov
cli
mov
adc
ret
push
aam
adc
fdivl
lret
and
or
mov
mov
mov
xor
add
mov
xchg
stc
lcall
and
inc
pop
mov
sub
lods
ret
dec
outsb
and
jno
jo
cmpsb
or
dec
rcrb
mov
push
xor
mov
out
mov
outsb
les
loop
aaa
xor
xchg
ja
xchg
push
jb
stos
jg
imul
xor
mov
cs
ret
mov
fmuls
in
pop
test
push
dec
stos
xchg
or
andb
fmull
pop
int3
or
cmp
jl
insl
aaa
scas
jl
les
xor
cltd
std
and
adcl
and
jle
fldcw
push
pop
into
pop
dec
and
mov
je
jg
ss
movsb
dec
sub
push
aam
ss
dec
hlt
in
jb
fwait
js
or
faddp
test
in
dec
dec
dec
out
arpl
add
inc
bound
sahf
loope
xchg
cwtl
sub
int3
jbe
pushf
cmc
jl
in
mov
ret
jns
jmp
cs
mov
and
movl
sub
xchg
pop
mov
clc
test
out
mov
pop
mov
popa
into
mov
sbb
xchg
push
xchg
cmp
pop
iret
hlt
enter
xchg
orl
xchg
pop
push
xor
addr16
push
sub
aad
or
imul
stos
cmp
ljmp
jl
inc
repz
imul
jnp
mov
dec
xor
push
repnz
lret
jge
adc
in
mov
cmp
stos
mov
push
xor
cmp
add
negb
cmp
lret
cmp
adc
out
and
out
push
add
mov
sub
pop
rcll
gs
cmp
aad
fwait
mov
aad
cltd
int3
call
jg
sub
adc
jmp
dec
dec
push
or
or
sub
cmpb
push
sbb
inc
popa
lret
mov
pop
and
add
ljmp
xchg
sub
repz
and
xchg
stos
inc
sub
lcall
mov
insb
out
add
pop
arpl
into
inc
push
aam
popa
cmp
cmp
pop
cli
push
cmpsb
mov
adc
ret
scas
lds
or
leave
popa
pop
bound
insb
push
xor
out
push
popa
test
mov
leave
cltd
and
and
sub
mov
call
push
jno
insl
out
iret
mov
dec
lock
mov
xchg
and
loop
insl
std
sub
pop
out
loopne
popf
pop
ret
jnp
pop
push
pop
push
pop
jg
shll
fstpl
cmp
dec
xchg
inc
pop
int3
mov
fildll
into
adc
lods
test
inc
hlt
cltd
and
xor
adc
enter
jne
push
pop
ret
and
mov
inc
push
cmc
and
or
pop
cmc
sub
ficompl
fmul
mov
rolb
mov
subl
adc
sub
lds
popa
push
xor
icebp
xor
mov
imul
pop
ljmp
cmp
jg
fistps
xchg
and
outsb
fstpt
scas
repnz
mov
ret
sub
push
jp
add
fnstcw
mov
fisttpll
bound
and
mov
andb
add
fwait
es
jo
sahf
cli
add
jmp
aaa
das
sahf
lods
ret
mov
mov
mov
daa
cmpsb
mov
sub
pop
mov
mov
sahf
lds
int
ljmp
mov
adc
clc
movsl
mov
cs
add
test
test
cmp
cmp
mov
jnp
insb
frstor
orl
pushf
pop
mov
push
add
pop
mov
lock
sti
leave
lret
lods
mov
sbb
mov
mov
inc
inc
cmp
in
clc
int3
or
clc
pop
fnstcw
idivl
daa
sbb
mov
scas
jae
mov
testl
add
pop
mov
jnp
test
sub
stos
es
aam
push
mov
cmc
adcl
cmp
inc
and
movsl
and
cwtl
aas
ds
add
imul
sub
xchg
inc
rolb
out
loop
and
or
cmpsl
das
loopne
sub
es
xchg
into
std
add
cmc
mov
mov
ret
jae
jae
mov
adc
cmp
lret
aam
xchg
insb
inc
pop
adc
pop
gs
pop
cmp
daa
jl
fs
and
enter
sbb
arpl
cs
and
fs
mov
insl
mov
stos
jecxz
out
mov
or
xchg
jg
dec
push
adc
outsb
push
nop
shlb
arpl
in
enter
cli
sahf
gs
popa
sub
gs
ss
mov
addl
jno
xlat
and
add
adc
and
call
mov
sub
pusha
lods
ljmp
outsl
add
shlb
cmc
mov
adc
shrl
arpl
mulb
adc
stos
adc
push
cmp
shrb
jmp
mov
xchg
and
push
fs
xor
jne
jne
clc
pop
jb
mov
mov
xchg
outsb
sub
mov
inc
push
sub
mov
pushf
dec
fildll
sbb
mov
cld
pop
call
or
pop
add
ds
dec
ss
je
inc
cmpsl
in
dec
enter
hlt
xchg
cmp
and
jb
lods
xchg
in
mov
xchg
cmc
pop
inc
xor
les
pop
into
test
cli
shrb
mov
jge
sbb
loopne
aaa
push
inc
mov
mov
cmc
cwtl
inc
inc
shrb
sbb
lahf
adc
frstor
cmp
jb
lea
rol
jnp
dec
das
cwtl
stos
cmc
out
ja
xor
mov
outsb
xor
js
cli
aam
jns
dec
nop
add
pop
dec
jno
inc
adc
daa
add
addl
push
mov
or
jmp
mov
imul
xchg
mov
lods
pop
test
test
adc
das
int3
and
filds
mov
cwtl
mov
sti
dec
test
out
repnz
push
loope
push
jg
cmp
mov
pushf
push
adc
xchg
pop
addb
test
mov
or
ds
call
movl
cmpsb
pop
pushf
aad
mov
add
jnp
aaa
nop
pushf
aaa
jns
int
push
and
jnp
bound
out
lock
pushf
mov
push
mov
add
repz
sbb
daa
repz
jns
push
sub
repnz
jmp
jo
jns
jge
mov
mull
xchg
rorl
adc
sub
aas
sti
frstor
cmpsb
pushf
adc
sub
push
ret
push
jbe
fbld
xchg
jbe
lea
and
ljmp
movsl
mov
hlt
add
add
inc
clc
fildl
nop
inc
mov
jne
mov
daa
loope
dec
std
pop
ds
sub
cmp
mov
sub
rclb
sbb
xchg
loop
xchg
pop
xor
les
sahf
sbb
jno
inc
leave
aad
xlat
xchg
sub
cmp
and
movsb
mov
rclb
mov
js
adc
dec
xchg
adc
out
xchg
cli
nop
rolb
mov
jb
xlat
sti
cmc
jno
dec
mov
jl
cs
and
lahf
inc
mov
ficomps
sub
les
sarb
pop
imul
testb
fsubl
imul
xor
or
sbb
scas
xor
inc
sbb
lret
rcrb
sbb
mov
xchg
fstpl
bnd
xor
mov
cld
cmp
int
ficoms
lock
inc
test
dec
fcomip
or
or
pop
outsl
dec
out
add
sub
aam
jns
xchg
jge
emms
mov
jno
adc
xchg
xchg
test
inc
lods
cmp
pop
cmp
sub
cmp
or
cvtdq2ps
jp
mov
inc
mov
ret
pop
repnz
adc
pushl
psubsb
mov
mov
adc
mov
xchg
cs
dec
mov
and
mov
push
inc
sbb
cmc
sub
or
push
jo
or
arpl
xor
outsb
aas
aam
out
pop
icebp
mov
add
sbb
mov
test
scas
mov
jne
dec
in
repz
or
or
push
pop
mov
js
pop
jge
push
arpl
xchg
sub
mov
dec
scas
sub
sub
gs
sub
jmp
mov
aas
mov
add
es
cwtl
rcrb
test
scas
nop
insb
push
pop
inc
ret
daa
sbb
pop
sbbl
jbe
lock
add
lods
lahf
cwtl
mov
dec
jae
xchg
mov
int
xchg
or
lea
push
inc
xchg
mov
sub
popa
ss
lret
mov
pop
aad
add
mov
mov
or
push
sti
or
sub
or
cld
jecxz
sahf
repz
push
or
inc
roll
shlb
aas
dec
adcl
fdivs
adc
xor
mov
cmpsb
in
aam
sub
pop
mov
into
sbb
mov
loopne
mov
push
mull
xchg
ret
scas
popf
std
lret
out
push
adc
or
sbb
mov
pop
ror
xchg
inc
test
xchg
pop
mov
mov
jecxz
fcmove
imul
aam
popa
jl
clc
push
test
lret
pop
mov
or
imul
call
mov
mov
mov
cld
dec
cmp
sub
or
xchg
sahf
fistl
sbb
lock
pop
and
push
mov
ret
es
sbb
mov
mov
cmp
add
ret
leave
cmp
sbb
ret
xchg
roll
cwtl
sbbl
jl
xor
adc
jns
aas
push
sub
xchg
popf
shll
pop
xlat
sbb
xchg
and
dec
mov
movsb
and
lods
iret
jne
roll
jp
pop
mov
lahf
and
repnz
cmc
cmc
add
push
jbe
jp
sub
sahf
stos
pop
add
test
fucom
in
and
sbb
mov
js
xor
je
dec
icebp
or
mov
inc
fs
adc
or
out
pop
in
jmp
push
push
and
push
insb
cmp
mov
xor
push
sub
in
cld
cs
ret
out
and
fs
stos
pusha
fldcw
cmp
fimull
xchg
fildll
sub
add
jne
je
pop
std
inc
pop
inc
faddp
xor
lret
xor
xchg
out
daa
es
addr16
int3
push
test
ja
or
push
movsl
mov
or
shlb
mov
adc
adc
add
push
or
push
mov
test
push
mov
xor
test
stc
adc
xor
pop
pop
mov
xlat
les
test
shlb
aad
repz
cwtl
je
pop
sahf
daa
push
mov
mov
xor
mov
je
inc
xor
pusha
dec
mov
repz
call
mov
xchg
insl
lahf
mov
sbb
ja
adc
sbb
rorb
aaa
imul
nop
scas
mov
push
enter
outsb
jle
push
stos
and
out
andb
sub
jne
pop
out
and
aaa
or
imul
cmp
fnsave
mov
lret
popf
arpl
testb
lret
adc
out
bound
aam
fcmovb
rorl
std
xor
inc
jo
stc
js
cmp
pushf
icebp
sub
and
jge
aaa
xorb
mov
data16
mov
xchg
adc
in
and
sahf
lods
push
shl
jne
ljmp
sub
fisubrs
std
out
frstor
test
xchg
sbb
and
dec
cltd
jl
stos
sub
jno
push
mov
add
nop
sbb
out
pop
lea
adc
jle
push
sub
dec
sahf
jmp
popf
in
shlb
enter
fwait
mov
out
faddp
test
xor
mov
or
xchg
jmp
and
xor
stc
inc
lds
mov
test
xchg
stos
lret
insl
bound
stc
sub
push
push
rcrl
sub
mov
mov
shrb
add
stos
pop
jns
sbb
mov
addr16
enter
lods
adc
fld1
mov
arpl
push
stc
jns
jo
out
movsb
imul
dec
dec
mov
sti
xor
dec
js
inc
inc
rcr
mov
pop
cs
cmpsl
adc
cmp
and
inc
pop
inc
mov
test
xchg
mov
les
dec
call
daa
es
sub
dec
xchg
in
jns
adc
mov
inc
xchg
repnz
xchg
pop
lods
xor
sbb
adc
out
sub
nop
leave
orl
vpshuflw
or
aaa
xchg
cltd
pop
xchg
mov
xchg
mov
xor
cltd
and
stos
push
cmc
js
jmp
xchg
sti
jg,pt
lock
mov
cmovo
aad
call
xchg
js
push
mov
mov
shrl
ret
lret
or
call
mov
xor
mov
imul
inc
dec
in
imul
sahf
scas
jge
bound
pusha
movsl
jge
jo
sub
and
pop
repz
jno
mov
aam
mov
dec
test
outsl
bound
push
mov
int3
mov
push
js
imul
rcrb
cli
sti
in
out
push
sbb
and
push
sub
mov
and
hlt
cmp
push
imul
xor
mov
mov
lea
mov
sub
sbb
out
xlat
or
hlt
mov
stos
fadds
scas
movsl
into
jne
cltd
call
mov
sub
outsb
mov
mov
lret
sbb
pop
ret
out
mov
testl
cli
dec
mov
test
gs
jg
mov
adc
shll
mov
outsb
xor
mov
pop
imul
inc
cli
push
xchg
stc
sarb
test
pop
adc
or
pushf
leave
add
mov
fs
popf
repz
ja
ret
popa
pop
out
movsbl
cwtl
loopne
push
jle
dec
xchg
cmp
repnz
in
inc
scas
add
jo
aam
xor
mov
push
mov
sbb
inc
dec
je
sbb
mov
insb
xor
pop
ret
and
sub
or
dec
cmpsl
movsl
push
mov
pop
sbb
xchg
paddq
push
jo
push
jle
lea
aas
push
inc
push
cmpsb
cmp
and
jae
jmp
add
andl
push
into
je
mov
cld
rep
fs
outsb
lea
sti
pop
pushf
ja
fdivp
xor
pop
mov
push
cmp
lock
mov
or
push
push
fists
cmp
mov
jle
add
push
mov
nop
test
xor
jb
in
pushf
jbe
jle
mov
psadbw
nop
shll
xchg
push
jbe
cmpsl
or
movsb
pop
and
ret
shrl
outsb
hlt
inc
dec
inc
inc
mov
xchg
fcmovbe
fldt
pop
fnsave
ret
xor
pop
dec
out
ror
mov
sbbb
add
cmp
test
dec
jl
aas
sahf
xor
mov
jnp
adc
xchg
idivb
loop
sub
sbb
cwtl
sub
loopne
mov
push
jmp
loope
adcl
adc
sarl
or
es
fdivp
insb
roll
cltd
outsl
ret
test
sti
mov
and
movsb
jge
mov
cmpsb
inc
clc
adc
sti
int3
cmpsl
lock
rcrb
cli
testb
pop
pop
addr16
dec
mov
in
and
pusha
movsb
jg
shrb
cld
es
lcall
pop
xchg
jle
fisttps
insb
pushl
xor
xchg
and
dec
or
cli
popf
jo
inc
jg
sub
adc
pop
and
int
mov
xorb
test
sti
jecxz
mov
jmp
in
in
enter
xchg
pop
sahf
test
cli
rolb
adc
lret
push
bound
and
shll
jl
mov
shlb
imul
lret
pcmpeqd
xchg
cmp
pop
dec
add
xor
mov
std
orb
sub
add
mov
push
or
mov
jno
adcl
dec
xor
mov
sub
and
push
sub
mov
jne
fs
adc
mov
xor
cmp
lds
lret
xor
sbbb
cli
fldl
out
adc
mov
dec
idivb
in
mov
push
cmp
into
and
rorl
xor
iret
xor
jno
loope
adc
stc
and
dec
sahf
inc
lcall
fistps
ret
popl
pop
outsl
pop
mov
jo
gs
mov
or
mov
fidivl
sub
jae
into
or
aad
lds
dec
xor
jns
push
push
jbe
mov
mov
sub
or
lret
imul
sub
rcll
xor
addr16
and
lea
jle
cmc
cmp
add
mov
hlt
mov
xchg
xchg
push
xchg
daa
out
adc
mov
jno
jl
pop
repnz
cmp
dec
fs
push
loope
jge
sub
adc
enter
xchg
fs
push
push
mov
shlb
insl
mov
xlat
cmp
cmc
movsb
sbb
mov
inc
into
scas
adc
mov
fwait
clc
es
xor
jle
jne
add
pop
jl
stos
fsubrl
ret
cs
sbb
enter
mov
pusha
xor
jmp
pushf
daa
out
xchg
xor
ret
addr16
lock
popf
jl
push
jo
jp
jl
js
pop
enter
test
adc
add
pop
loope
test
gs
jne
adc
add
pop
es
sahf
int3
es
push
sbb
loop
dec
mov
dec
mov
mov
add
jge
or
popf
push
adc
fisubs
scas
jge
cmp
int
xor
lods
jae
jae
sub
mov
in
mov
pop
shrl
push
js
mov
jnp
cmp
dec
add
and
cld
repz
lahf
imul
test
jno
mov
and
push
aad
xor
test
sahf
push
adc
dec
adc
or
fcmovnbe
cmp
dec
hlt
or
push
mov
add
inc
xchg
cmp
sub
push
sub
sahf
mov
loop
cmpsb
mov
mov
std
push
push
repnz
push
sbb
hlt
inc
dec
bnd
into
in
push
sbb
cmp
mov
xchg
cmp
lret
push
mov
cmp
ret
cld
cmpsb
jae
pop
or
cmpsl
iret
ljmp
or
not
push
loopne
cmp
jne
bound
xchg
out
jle
outsl
cs
jmp
push
shrb
or
lods
popa
jg
xor
pop
push
mov
pop
add
stos
sub
sbb
jno
jb
fsts
cmp
xchg
adc
push
fs
mov
repz
outsb
icebp
cmc
inc
cmovl
lahf
bound
dec
sbb
inc
sub
test
add
xchg
sbb
cmpsb
jg
push
jae
movb
mov
push
inc
dec
pop
xchg
fldcw
data16
in
insl
ja
imul
push
ret
mov
xorb
xor
js
cs
mov
push
push
pusha
shlb
outsl
sbb
ret
lods
ret
jmp
ficoms
add
mov
scas
cltd
scas
pop
mov
ret
inc
inc
sbb
pop
scas
dec
adc
rcr
add
das
je
sub
jmp
int3
push
adc
sbb
pop
repnz
mov
xor
adc
or
mov
inc
jp
sti
js
jl
sbb
mov
mov
nop
xchg
sub
xor
and
jmp
or
js
divl
mov
jecxz
inc
push
and
cmp
and
mov
lock
fadd
xchg
aas
jbe
ds
fistl
xor
repnz
cmp
andl
xchg
inc
cmc
dec
xchg
loope
dec
and
cld
mov
mov
sbb
fs
add
mov
adc
xchg
aaa
aad
and
ja
xor
xchg
xchg
andl
dec
xchg
test
dec
ss
pop
insl
pop
xchg
cli
aam
fiadds
sti
jmp
pop
jmp
sbb
mov
cmp
fisubl
sbb
inc
fcoms
jp,pt
and
pop
lret
aaa
lea
sub
call
mov
cmp
enter
movsb
jecxz
sub
sbb
mov
pushf
push
pop
mov
inc
lock
out
js,pt
enter
in
adc
int3
pop
rorl
pop
aaa
frstor
in
xor
negb
ljmp
rorb
sbb
mov
pop
fstl
dec
leave
repz
xor
mov
jo
xlat
inc
cltd
out
sub
mov
fildll
push
inc
mov
sahf
fnstsw
mov
stc
add
mov
lahf
lahf
adc
push
je
scas
mov
subl
lods
shll
dec
inc
clc
repz
pop
imul
jae
fistps
outsl
rsqrtps
fwait
in
test
jb
in
dec
jb
popa
or
adc
int
mov
jo
into
cli
mov
mov
hlt
push
mov
gs
cld
int
xchg
popa
stos
dec
xlat
xchg
aaa
dec
push
mov
push
dec
mov
jae
push
sub
jecxz
fcomps
and
push
dec
iret
mov
mov
lods
and
sti
cmp
mov
mov
rcrl
loope
ror
mov
push
fisttps
cmpsb
std
jne
sub
add
divb
scas
mov
lret
pop
adc
fstpl
test
pop
cmp
adc
pmulhuw
jp
inc
lcall
sub
dec
shlb
cmpsl
adc
pop
inc
mov
insb
fwait
xchg
lahf
icebp
add
jne
mov
dec
inc
cmpsl
std
int3
fwait
int3
pusha
cmpsl
sub
pop
cmp
inc
iret
push
outsb
inc
xor
sub
push
out
mov
js
out
mov
std
jo
dec
mov
lods
pop
add
add
repz
repz
push
lahf
frstor
pop
fcoms
jae
vcvtsd2si
pop
in
inc
jb
sbb
mov
or
int
fimuls
sarb
rclb
repz
sbb
dec
shr
mov
inc
xorb
push
repnz
jbe
les
fstl
add
mov
rclb
push
push
mov
outsb
mov
ret
insl
stos
or
shr
sbb
ret
call
imul
jb
jae
inc
aaa
mov
sub
pop
pop
push
sub
xor
iret
cmc
shlb
test
push
xlat
xchg
cwtl
jmp
sbb
inc
mov
fwait
and
add
ficoms
add
orl
jl
leave
inc
testl
or
ret
addr16
or
gs
mov
popa
lods
add
stc
cmp
dec
xor
pop
push
and
in
push
jge
adc
enter
mov
enter
xor
fistpl
jne
pushf
inc
inc
xor
or
xchg
sbb
xorb
pop
outsb
or
mov
push
sbb
jp
stc
fwait
mov
jmp
jbe
push
adc
and
ret
loopne
cmp
cmp
or
push
push
inc
data16
call
dec
jno
addb
inc
xchg
mov
lds
and
addr16
out
cmp
insl
dec
andl
or
roll
xchg
fsub
ficoml
push
fidivs
mov
dec
pushf
xchg
into
adc
out
lock
pop
out
pop
lahf
pop
js
pop
add
add
jl
jle
inc
lods
push
cmp
sahf
loope
and
lahf
mov
cmp
dec
mov
jg
pusha
imul
push
cmp
call
sbb
sbb
js
inc
into
jae
sbbl
dec
clc
adcl
push
fs
test
mov
push
push
shll
cmp
clc
cld
pop
mov
pusha
add
out
and
lcall
dec
mov
loop
cmp
cmp
in
sbb
shlb
xchg
sub
daa
mov
repnz
xchg
mov
loope
jle
andb
idivl
daa
hlt
push
test
popf
decl
push
out
sbb
js
fnstenv
js
repnz
sub
or
inc
push
arpl
enter
data16
sbb
shll
inc
mov
sti
les
jmp
lock
stc
nop
cmp
sbb
int
loopne
aaa
fldenv
ljmp
cmp
jno
cmpsl
mov
push
xchg
cltd
fdivrl
xchg
cltd
xor
scas
adc
inc
mov
clc
and
or
shll
lods
sbb
fs
jnp
add
cwtl
pop
loop
cmp
jo
ds
sub
iret
cwtl
test
aad
sbb
aam
mov
inc
push
popl
dec
loopne
push
testl
clc
xlat
ja
xchg
and
lods
adc
pop
or
in
adcl
arpl
imul
test
lret
nop
mov
xor
aam
mov
jno
imul
mov
adc
imul
je
ret
pop
xor
push
repz
or
xor
addr16
dec
or
fisubs
cmp
mov
cltd
iret
ja
in
pop
mov
ds
int
add
jns
daa
jns
pusha
aaa
pop
fwait
jmp
sub
push
mov
xchg
xchg
push
mov
mov
jmp
add
loopne
repnz
repz
test
and
jne
pusha
jle
sub
sbb
push
mov
pop
jbe
roll
jmp
adc
ljmp
jo
mov
inc
jbe
push
scas
push
push
call
out
loop
mov
es
jp
mov
mov
mov
enter
les
in
cltd
push
das
mov
sub
lods
pop
push
je
repz
jns
stc
ficoml
cmpsb
aas
and
aas
push
sbb
out
jnp
stos
jp
dec
dec
cs
sbb
loopne
fidivrl
inc
fsubs
int
mov
dec
jmp
iret
pop
ds
jmp
xchg
cmp
inc
mov
cmpb
add
cli
inc
or
fisubs
sbb
pop
aad
icebp
push
ret
mov
mov
pop
fcomps
stos
push
rcll
stc
rcrb
fildl
call
xor
aaa
inc
mov
fucom
xchg
aad
roll
mov
clc
fistl
int
andb
pusha
mov
push
xchg
sub
xchg
dec
lods
add
gs
hlt
push
push
xchg
mov
xchg
push
and
arpl
pop
push
mov
mov
jnp
in
test
int
mov
dec
sti
outsl
hlt
mov
outsb
sbb
xor
or
lods
scas
cmp
jge
inc
xlat
shll
je
fldenv
out
mov
inc
mov
push
mov
iret
push
or
cmp
sub
jecxz
and
pop
push
arpl
test
sbb
push
jge
push
stc
rolb
mov
aaa
pusha
or
out
scas
push
pop
daa
nop
ja
xlat
jle
in
cmp
in
push
jns
inc
push
inc
mov
adc
jno
pop
mov
dec
std
shll
xorb
jbe
cmp
jae
mov
lret
es
dec
jecxz
xchg
ljmp
add
cmpsb
xchg
adc
inc
inc
imul
xchg
cwtl
test
or
xor
mov
add
push
sbb
add
sub
pushf
push
ljmp
xor
cli
add
rcrb
cmp
mov
out
inc
inc
lret
test
jl
cmp
pop
imul
das
and
test
or
push
movsb
lret
enter
push
sub
inc
out
push
and
es
cwtl
hlt
pop
or
xlat
and
stos
sbb
mov
xlat
clc
jge
popf
fisubs
imul
add
insb
sbb
stos
mov
jmp
mov
and
jo
jp
xchg
fldt
ja
inc
sub
scas
dec
insl
in
jge
sub
push
mov
fidivl
or
push
fistpll
dec
rcll
add
mov
lods
dec
int3
xchg
adc
les
pusha
xchg
movsl
roll
pop
orl
ret
mov
sarb
daa
sahf
lds
jnp
in
mov
sbb
jp
push
pop
sarb
push
cld
les
in
jg
jge
pop
loopne
dec
dec
inc
cmp
loope
inc
ficompl
dec
push
fstpt
pop
inc
push
jg
lds
aaa
xor
cmc
mov
add
mov
sbb
ffree
movsl
dec
mov
addr16
jmp
lcall
mov
mov
pop
lock
mov
push
jmp
dec
mov
sub
lock
push
imul
or
setb
xor
jmp
inc
xor
or
xlat
adc
mov
jl
stc
dec
adc
inc
js
loopne
pushf
or
sbb
mov
cmp
movsl
pushf
jnp
fdivl
dec
hlt
dec
leave
pusha
xchg
mov
sub
scas
mov
and
pop
mov
jl
rcll
inc
outsb
mov
fwait
scas
dec
mov
fwait
inc
mov
ret
and
sub
cmp
pop
pop
and
clc
xor
push
add
inc
ljmp
movsl
in
cmpsl
in
xchg
popf
sbb
jl
sbb
jmp
cmp
inc
cli
movsb
adc
ja
inc
or
dec
enter
push
adc
push
pop
pop
push
mov
pop
xchg
sub
fists
mov
mov
push
lret
or
jl
adc
xlat
mov
mov
pop
or
incb
sbb
mov
int3
or
sub
cmpsl
icebp
pop
sub
fsubrl
cmp
pushf
shlb
dec
rolb
adc
xchg
pop
les
cmc
inc
sahf
sub
ficoml
cld
mov
mov
xor
inc
test
cwtl
dec
ucomiss
cmp
push
ds
iret
sbb
stos
daa
mov
movsb
fcomip
stos
adc
cmpsl
mov
mov
addr16
aas
popa
jb
rcll
je
js
xor
cwtl
fmulp
pop
dec
loope
ds
cmp
or
fisttps
inc
in
mov
and
jge
xor
test
mov
dec
dec
mov
cwtl
adc
aam
pop
add
pop
jl
cltd
mov
inc
pop
sarb
jecxz
adc
movsl
out
ss
jmp
jno
nop
addb
stos
in
and
outsl
shl
pop
inc
movsl
mull
ja
in
push
rorl
push
popf
pushf
mov
sti
or
in
mov
mov
fisubrs
mov
mov
loope
int
xchg
push
clc
push
and
mov
jp
lea
sti
repz
dec
aaa
pop
sub
lods
xor
shlb
inc
adc
insb
mov
std
xor
and
in
fsubrl
mov
popf
into
js
adc
lock
imul
or
pop
int
mov
gs
sti
in
in
add
popf
dec
jmp
xor
mov
cmc
movsl
les
mov
push
faddl
dec
xchg
push
dec
into
and
repnz
dec
fdivp
loope
sub
or
fcmove
in
cmp
sbb
dec
fadds
fs
gs
mov
pop
lcall
and
jmp
mov
sbb
cmpsb
test
scas
loopne
fildl
fidivrs
gs
cmpsb
outsb
sub
push
mov
stos
negl
pushf
push
inc
and
mov
int3
pusha
pop
jl
jbe
stos
out
cmp
movsb
jno
mov
mov
push
jl
out
and
das
jno
mov
and
dec
incb
or
mov
rcll
push
in
jnp
dec
mov
ss
or
incb
popa
mov
stos
push
xchg
sbb
pusha
xchg
xadd
jl
data16
mov
push
mov
xchg
loopne
jle
fdivrl
das
push
mov
or
lret
cmp
sbb
dec
lret
lret
test
sub
mov
stos
or
pop
outsl
sub
lea
inc
addb
sub
pusha
test
dec
insb
loopne
roll
cmp
cmp
out
cli
ja
lret
jge
jmp
cli
inc
cwtl
add
negl
mov
push
in
add
mov
push
test
fadds
and
lods
jae
push
pavgb
ret
xor
stos
inc
pop
mov
pusha
mov
aam
jns
mov
dec
or
fcmovnbe
cli
push
or
pop
popf
xchg
or
shll
ret
nop
ljmp
lahf
loope
lea
lock
imul
add
lcall
push
or
pop
jp
xor
shl
inc
ja
xchg
mov
lcall
ljmp
sub
out
in
add
sub
mov
jecxz
xchg
sub
mov
push
jge
mov
pop
cmp
lret
and
in
mov
jns
sarl
pop
sub
xor
mov
test
enter
pop
sbb
nop
das
dec
into
fistps
or
cltd
xor
clc
add
mov
popa
sub
xchg
jp
xlat
or
dec
popa
sub
mov
jb
adc
push
pop
pop
icebp
push
int
mov
xor
sbb
scas
aaa
push
arpl
js
stos
iret
popf
out
add
imul
inc
and
add
push
addr16
mov
in
mov
xchg
stos
rol
sub
xorb
ffree
fwait
repnz
insl
jb
icebp
std
in
faddl
jae
popw
outsl
cld
mov
aam
shrb
dec
cmp
fmull
std
cmc
dec
push
jl
mov
push
fists
inc
mov
pop
cld
mov
sti
cmc
dec
lods
nop
push
or
cmp
xchg
arpl
imul
pop
xchg
mov
push
add
cmp
stc
jbe
pop
imull
xor
aas
inc
rclb
andb
insl
sub
test
dec
adc
xchg
ret
sar
mov
inc
jl
scas
sub
pop
adc
pop
dec
push
outsl
in
cmpsb
mov
ja
add
rorl
stos
ds
jmp
adc
gs
jo
iret
and
repnz
cmp
mov
aad
push
mov
lods
inc
cmc
lea
xor
mov
sahf
dec
mov
mov
ret
das
cmpsb
xchg
or
add
daa
and
addr16
xchg
and
repz
fprem
ss
mov
jbe
jnp
xchg
xor
std
arpl
cmpsb
pop
imul
jno
dec
xchg
mov
dec
enter
lahf
push
xor
cltd
push
aad
fnstcw
clc
xor
cli
mov
inc
mull
addr16
stc
mov
pop
push
aad
and
mov
ret
pop
or
lock
loope
fucomi
sub
and
stos
sub
sbb
loop
mov
sub
jo
mov
push
cmp
rcr
divb
mov
mov
mov
sub
hlt
imul
xchg
mov
cmp
jnp
dec
add
shll
popa
leave
adc
ror
sbb
inc
std
icebp
fimull
fisubrl
mov
push
mov
in
xor
adc
inc
xchg
dec
xchg
rcrb
jle
int3
cmp
loope
mov
mov
daa
dec
mov
dec
popf
imul
cmp
dec
aam
stos
and
in
outsb
shl
jl
popa
and
jnp
cmp
mov
xor
sub
and
movb
xchg
xchg
xchg
and
fists
sarb
imul
sahf
popf
mov
jge
push
inc
jne
lahf
mov
cltd
movl
xchg
stc
adc
jo
out
loop
in
insb
arpl
je
mov
sarb
mov
xor
sub
dec
divb
lret
daa
inc
loopne
or
mov
lds
out
or
add
ja
icebp
adc
lods
xor
xor
pop
xlat
nop
mov
push
addr16
aaa
inc
mov
cmp
das
fcmovb
arpl
dec
ja
or
fucompp
shrl
scas
out
cmpsl
and
lods
dec
jbe
clc
push
mov
cmp
lods
xchg
cmp
pop
outsl
nop
sub
mov
fsubrs
sbb
push
xor
sub
decb
in
jb
test
mov
adc
cmpsl
mov
inc
sub
lods
cmp
and
cmpsb
in
inc
mov
adc
or
cmp
cwtl
test
sub
nop
lds
xor
xor
jne
imul
aam
out
nop
test
fldcw
mov
dec
dec
fists
adc
cmp
out
sbb
outsb
in
in
cwtl
lahf
lods
movsb
and
mov
push
data16
test
daa
sbb
mov
mov
movsl
lret
pop
loope
stos
pushf
nop
xchg
xchg
popa
sahf
scas
and
sarl
sub
sbb
mov
adc
add
das
bound
fadds
divl
jmp
dec
xchg
movsl
and
pusha
imul
mov
sbb
xchg
pop
push
imul
cmp
xchg
sub
xchg
cmp
rcll
xchg
in
pushf
adc
cld
aad
push
or
cmpsb
sbb
jmp
adc
fcmovnbe
cmp
mov
lods
mov
fistpll
lret
lds
mov
jbe
fstl
push
add
adc
xchg
idivb
adc
dec
fsts
mov
arpl
rorl
jb
mov
iret
fsubrs
and
mov
stos
xor
aad
cmc
sbb
inc
push
stos
into
sbb
ret
in
xchg
ret
rorb
cmc
xor
xlat
xchg
cmpsb
es
repnz
sub
ja
cmpsl
js
jo
inc
xor
lock
adc
jo
fstpl
cmp
imul
cs
inc
adc
je
rcll
push
pop
stos
clc
sti
mov
iret
sbb
mov
in
std
insb
dec
fwait
or
divb
xchg
flds
dec
int
cmpsl
ss
sub
push
mov
sub
jecxz
fcoml
sub
lret
into
jle
pop
jmp
cmc
inc
dec
and
fwait
push
pop
mov
aaa
cmp
jp
je
bound
rcr
lea
or
xchg
fimull
or
out
scas
loop
mov
je
xchg
fbld
cmc
pop
loopne
cmp
push
xchg
fwait
inc
dec
jne
clc
ret
fiaddl
cld
leave
in
aam
mov
mov
mov
test
pop
rclb
out
dec
sub
push
cmp
in
and
jno
in
jle
cmp
lods
mov
ror
jecxz
mov
mov
shrl
or
rol
or
stc
data16
lret
cmpsb
in
jae
sub
mov
mov
cmpsl
inc
and
inc
int3
jle
jg
enter
lds
push
sbb
jecxz
lret
xchg
outsb
test
add
pusha
in
mov
xor
push
inc
push
scas
xchg
sub
addr16
outsb
push
pusha
ljmp
sub
popf
subl
rcr
xchg
mov
fnsave
gs
lret
pop
inc
lods
and
mov
jl
cmp
scas
cli
cld
int
test
dec
jb
sbb
or
jae
repnz
sub
mov
adc
daa
mov
mov
dec
jge
out
cmpsl
rorl
aad
push
js
ficompl
pop
fisubs
jb
mov
xchg
into
data16
les
adc
nop
xor
push
pushf
fpatan
jno
inc
mov
lret
shll
es
inc
and
pop
sub
mov
xor
jno
push
aad
mov
fiaddl
ss
rcl
cmp
stos
dec
jne
xor
test
mov
hlt
push
mov
sbb
push
pop
add
add
dec
mov
and
fdivp
mov
daa
sub
lahf
lea
push
sti
adc
cmpsb
fisubrl
cmp
mov
test
inc
fldcw
sbb
lods
pusha
call
popa
inc
or
dec
inc
or
mov
inc
mov
xor
loop
ds
jnp
mov
pop
jbe
jbe
iret
bound
icebp
fmul
iret
sub
iret
cmp
cltd
or
shll
out
pushl
inc
fldcw
imull
pushf
jbe
xchg
pusha
loope
test
sub
mov
adc
xorl
dec
xchg
fmuls
outsb
mov
lea
pusha
sbb
jge
dec
mov
sti
test
inc
or
js
and
jmp
aad
int
imul
sahf
push
dec
punpckhwd
loope
shrb
dec
xor
icebp
stos
mov
push
jb
mov
add
insb
sub
mov
push
cld
or
lcall
inc
cltd
pop
push
pop
ds
rcrl
push
pop
xor
pop
testb
sbb
xor
arpl
mov
ljmp
hlt
push
lret
push
adc
lret
shl
inc
sbb
mov
test
cld
cmp
inc
xchg
jg
mov
addr16
aad
sar
scas
cmp
cmp
mov
cmp
push
xchg
push
jo
insl
inc
and
insb
into
mov
adc
scas
in
jne
dec
ftst
xchg
fnstcw
out
cmpsl
outsb
std
enter
cmp
sahf
stc
mov
sub
stc
xor
push
mov
out
xchg
push
pop
jbe
xchg
or
pop
xor
jae
jb
and
arpl
cmp
xor
js
stos
pop
je
mov
mov
and
sbb
and
jmp
addr16
mov
rorb
pop
push
mov
arpl
jmp
pop
arpl
js
pusha
dec
jo
sub
or
mov
js
sub
dec
cmp
and
inc
daa
or
pop
je
repnz
pop
lods
or
pop
mov
xchg
or
lret
cmp
loopne
lock
sahf
pop
cmpb
ret
leave
xlat
leave
jmp
addr16
push
pop
clc
sbb
stos
ds
pop
scas
enter
pop
cld
dec
mov
loope
cmc
lock
adc
sbb
adc
imul
sub
jmp
popa
adc
xchg
adc
add
adc
daa
inc
andb
mov
jge
xorl
push
or
xor
pop
lret
cmpsb
and
insl
rcrb
sub
pop
pushf
xchg
fstpl
cltd
add
mov
push
mov
pop
lock
data16
in
dec
scas
fwait
cld
fisubl
loope
sub
out
leave
cmpsl
add
arpl
xchg
xorb
scas
and
jbe
sbb
cmp
adcl
push
mov
sar
push
or
inc
adc
lods
jl
cmpsl
sub
cld
jo
fwait
push
lcall
fimuls
jge
popf
xchg
xor
mov
jnp
mov
cli
cmpl
ret
or
and
sbb
into
jg
push
xchg
inc
adc
adc
push
push
jmp
icebp
dec
adc
xor
fildl
cmpsl
inc
sbb
repz
fldl
movsb
test
ret
dec
xchg
pop
ja
pop
shl
ret
jmp
es
and
iret
aad
add
pusha
sbb
mov
stos
rorl
inc
inc
push
arpl
pop
cmp
iret
popf
shll
cli
sub
dec
stc
loope
lods
xchg
adc
lahf
sbb
popa
fisttpl
shr
imul
cltd
sub
test
mov
lret
mov
jmp
or
push
adc
xchg
mov
and
loop
out
and
mov
scas
ret
fstpt
loope
sbb
cmp
dec
out
ret
flds
mov
jb
repnz
push
imul
xlat
mov
and
push
mov
jne
sub
into
loopne
push
cmp
pop
pop
xchg
cwtl
lds
adc
dec
push
adc
mov
es
mov
adc
inc
mov
int
stc
cwtl
mov
jl,pt
out
sub
imul
out
add
outsl
hlt
mov
push
adc
orb
or
mov
mov
scas
test
ret
arpl
jb
jnp
dec
adc
movsb
and
test
out
dec
sarl
adc
push
das
jmp
faddp
outsl
rcrb
test
mov
xor
xchg
repnz
mov
pop
loope
xchg
mov
xchg
loop
out
dec
loope
imul
mov
push
lret
sahf
js
xor
inc
fwait
inc
xor
ljmp
out
mov
xor
xor
sub
adc
xlat
imul
in
mov
xor
aam
dec
inc
cli
sbb
ret
call
fdivrl
pop
cmp
xchg
mov
rolb
xchg
stos
mov
je
imul
les
xchg
or
pop
xchg
xchg
aam
sbb
push
shlb
out
cmp
xchg
fisubl
aad
out
pop
jg
and
dec
pop
test
lret
mov
lcall
add
test
fcomps
or
cltd
adc
cltd
push
dec
into
popa
lret
inc
xchg
lcall
addr16
add
mov
sub
in
test
ret
push
push
testl
fiadds
lods
in
push
mov
mov
cmpsb
dec
and
mov
loop
test
jp
pop
mov
and
cmp
call
pop
movsb
push
in
rcl
sbb
mov
mov
add
andl
add
cwtl
sub
int3
mov
xchg
dec
out
stos
xchg
dec
les
mov
add
fimull
lret
fcmovu
mov
pop
scas
mov
xchg
xchg
mov
ljmp
cltd
xchg
cmp
jle
loop
fisttps
call
push
shl
mov
cwtl
pop
xor
sbb
xchg
lcall
or
inc
pop
xlat
lret
stos
jmp
pop
dec
add
and
movsb
jnp
adc
enter
out
out
xor
pop
jo
iret
cld
loopne
stos
cmp
dec
imul
pop
push
push
push
sbb
hlt
ss
rcrl
aaa
pop
xchg
rorl
addr16
rcr
mov
inc
xlat
or
or
xchg
cli
pop
daa
pop
mov
mov
sub
shll
inc
add
daa
push
xlat
iret
imul
mov
aam
rolb
outsb
stos
xchg
fcoms
push
push
sti
fwait
adc
imull
push
test
rorl
and
sub
xchg
fs
test
mov
add
andl
fisttps
cmp
mov
lcall
rcrb
or
repz
add
mov
idivl
sbb
or
movb
mov
push
mov
mov
cmc
addr16
stos
push
push
xchg
fcomps
js
aad
dec
and
xor
call
imul
testl
jge
outsb
add
test
and
div
dec
xchg
inc
cmp
adc
scas
or
leave
stos
shrb
cmp
xor
ss
sub
sub
push
xchg
pop
sub
xor
idivl
push
push
pop
inc
scas
and
cltd
orl
shr
dec
in
mov
sbbb
orl
outsl
sub
jbe
mov
ds
test
mov
add
push
inc
pop
cld
and
sbb
cld
adc
loopne
push
hlt
clc
clc
jmp
mov
cmc
scas
jne
popf
inc
mov
inc
mov
orb
mov
ret
sbb
int3
nop
push
sub
ja
cmp
xor
sbb
inc
mov
inc
mov
mov
cmc
xor
test
sub
scas
add
ret
lea
push
adc
orl
pop
ds
aaa
in
leave
outsl
xchg
push
cli
cmp
push
insb
inc
add
into
lret
or
inc
xchg
push
inc
dec
and
in
shl
cmp
pop
add
push
mov
cmc
das
xlat
pushf
dec
push
and
cmp
add
and
aaa
mov
xchg
cmpsb
outsl
mov
out
loop
xor
cmp
roll
loopne
mov
fwait
pop
pusha
push
shrl
das
dec
into
stos
dec
adc
add
sub
popa
es
cmp
ret
jns
push
mov
xlat
or
mov
pop
push
mov
aaa
aaa
mov
cmc
mov
jo
scas
xchg
push
into
outsl
mov
lret
jno
in
cmp
and
mov
imull
sub
xchg
jnp
jmp
lahf
test
pushf
lea
nop
stos
lods
negb
gs
xor
ret
cmc
mov
in
push
push
jbe
mov
adc
xor
sub
push
insb
mov
lods
sub
or
pop
in
bound
arpl
inc
xchg
sahf
mov
sbb
int
lahf
fsubr
minps
arpl
ljmp
push
xor
dec
push
pop
repz
jae
test
mov
inc
and
or
int3
push
sub
jp
loope
dec
jno
mov
add
je
jge
push
lock
dec
negl
push
cwtl
mov
mov
xchg
bound
xchg
push
ret
and
xchg
mov
dec
in
pop
mov
mov
lahf
test
sarl
mov
test
add
push
adc
xchg
rcll
xchg
push
scas
out
push
cltd
xchg
add
jae
push
add
in
pop
pop
xor
scas
cwtl
into
mov
mov
aas
fsubl
or
dec
or
loopne
pop
shl
xchg
lods
xor
jecxz
mov
jnp
add
cmpsb
and
daa
fs
cmp
shr
fsubl
out
cmpsb
mov
pop
adc
addr16
addr16
fs
enter
lock
push
push
call
divl
outsl
lock
enter
jg
or
xchg
aas
jns
mov
xchg
xchg
testb
pop
add
mov
add
xchg
or
or
jnp
out
outsl
mov
dec
xor
fsubrl
leave
and
cmc
xchg
mov
dec
pop
imul
jbe
cmp
pushf
neg
adc
adc
inc
lds
or
cmp
rcrl
mov
mov
push
xchg
nop
or
push
jg
pop
mov
hlt
mov
ficompl
fsts
sub
jle
sbb
push
add
mov
int3
jne
dec
jo
out
data16
and
xchg
or
addr16
mov
arpl
sbb
arpl
cmp
and
xor
testl
sub
movsl
in
out
fwait
std
sub
fisubrl
dec
in
push
std
mov
sbb
xorb
mov
lcall
in
add
pop
bound
ret
adc
mov
and
dec
fs
test
adc
lret
mov
stos
adc
jp
testl
dec
mov
call
mov
inc
pop
sti
insb
cmp
xor
xchg
neg
dec
xchg
sbb
mov
xchg
xchg
outsl
outsb
movd
icebp
ficoml
rorb
cmpsb
jnp
mov
adc
leave
sbb
add
test
ss
dec
inc
inc
pop
mov
hlt
dec
aad
mov
out
inc
ret
insl
xchg
test
dec
lea
popf
or
movsb
jbe
cmc
xchg
dec
adc
mov
and
mov
repnz
mov
ficomps
xor
push
leave
int
xchg
jno
inc
jo
adc
jbe
fisubs
cs
or
mov
rclb
outsb
or
rol
push
pop
xchg
cmp
jecxz
movsl
dec
inc
dec
loop
test
cld
lahf
mul
pop
mov
lea
sti
ret
mov
daa
lea
out
cvtdq2ps
lea
popa
loopne
into
sbb
mov
cmpsb
add
enter
daa
xchg
fsubrs
mov
jno
cmc
or
mov
pop
out
xchg
push
cmp
dec
int3
pop
add
rolb
into
inc
nop
jbe
push
xor
in
ljmp
data16
mov
aaa
outsl
mov
xchg
rep
dec
enter
popa
ret
sub
and
jg
push
jnp
popa
cmpsl
jb
clc
xor
pop
mov
sbb
inc
xlat
pop
test
inc
pop
aam
cwtl
nop
cmpsl
and
ja
cmp
test
jbe
addb
test
push
mov
gs
sub
pop
mov
xchg
push
pop
fwait
add
pushf
cmp
into
xchg
mov
insb
adc
hlt
push
pop
cmp
jae
dec
add
jb
xor
push
and
lret
pop
mov
push
inc
sti
sub
nop
clc
sub
mov
or
and
jnp
es
cmp
adc
mov
mov
mov
jecxz
jge
movsb
lahf
push
pusha
stos
sub
lcall
movq
mov
mov
and
mov
fmull
out
mov
dec
aam
xor
xchg
in
add
pop
mov
xor
icebp
sub
or
mov
ljmp
mov
mov
imul
pop
popa
jge
xchg
ljmp
dec
lret
inc
ja
loop
fsqrt
sub
pop
dec
xlat
xor
imul
fidivrl
ljmp
pushf
loope
dec
ret
inc
and
or
push
mov
pop
mov
adc
imulb
xchg
lea
sbb
out
pop
outsb
pop
cmp
xchg
pop
mov
push
dec
jg
out
or
xor
and
movups
lods
in
orb
dec
cld
inc
inc
es
lret
push
xlat
cmp
add
jnp
or
jp
cmp
mov
mov
jno
stc
mov
adc
test
or
scas
out
and
or
fs
test
push
adc
and
lds
repnz
cmp
and
jl
push
addr16
rcl
xchg
sbb
ljmp
mov
aas
inc
stos
inc
pop
dec
add
add
adc
add
scas
cs
addr16
das
cmp
lret
lock
fstps
int
pop
out
imul
add
xchg
aas
inc
sub
push
jle
inc
dec
dec
shrb
xchg
cli
jae
mov
lret
mov
mov
dec
bound
cs
aad
stc
xchg
pop
stos
adc
jo
mov
out
dec
int
outsl
add
int
hlt
xor
push
push
leave
inc
pop
sti
enter
call
das
sbb
cwtl
mov
and
dec
sub
mov
or
cmp
cmp
popa
pop
movsb
into
sbb
sti
push
xor
adc
imul
jl
xchg
adc
pop
sbb
inc
insb
or
inc
jmp
dec
or
cmp
jns
xlat
add
jne
xor
pop
push
insb
stos
ficomps
xchg
cmp
fidivrl
add
sub
jmp
xchg
out
push
mov
imul
push
insb
cld
idivb
gs
hlt
push
xchg
dec
xor
ja
dec
mov
clc
mov
popa
lret
fiaddl
pop
cwtl
mov
dec
cli
inc
cmpsl
mov
sbb
enter
sti
push
mov
out
ljmp
cwtl
mov
sub
ljmp
shll
les
nop
xchg
fwait
jne
je
ja
mov
or
or
xrelease
inc
shll
sbbb
adc
xor
sarw
inc
and
dec
and
push
jmp
outsb
sub
lret
add
dec
icebp
lods
pop
cmc
rorl
aam
push
fdivs
rcrl
clc
fdivr
or
and
jno
stc
mov
mov
shrl
testb
or
mov
jmp
push
or
push
lock
icebp
mov
mov
ret
pop
scas
add
adc
test
sbb
lahf
pop
ljmp
stos
jmp
hlt
loopne
les
push
daa
lret
sub
push
lret
out
int
imul
cld
add
pushf
in
lret
mov
lods
xlat
mov
mov
push
popf
mov
and
pop
mov
xchg
dec
aas
orl
in
dec
hlt
stos
loopne
pop
fucomi
push
inc
pop
jge
fdivrs
add
fnstcw
lods
rcll
sub
lods
out
xchg
mov
mov
out
mov
push
lods
jle
fldenv
out
into
stos
mov
xor
push
stos
pop
cmpb
test
or
jo
inc
push
jae
mov
loop
push
hlt
xor
fbstp
mov
scas
jbe
or
xchg
push
jge
adc
push
imul
adc
insl
aas
ja
in
leave
push
cwtl
xchg
icebp
mov
adc
push
and
adcb
idiv
test
test
lods
ja
mov
mov
addr16
mov
iret
stos
sbb
arpl
sbb
jg
jne
push
inc
addr16
cmpsl
sti
pop
pop
dec
add
jns
jnp
xchg
test
sbb
stos
sub
out
add
and
insl
push
mov
inc
pop
daa
or
pop
or
rcll
xchg
mov
xor
fldcw
hlt
out
mov
bound
xchg
stos
adc
pop
mov
cmpsl
mov
imul
sub
js
xor
imul
in
sbb
jmp
imul
scas
xor
add
push
mov
call
pop
jb
fwait
add
inc
mov
pop
loop
push
movsb
jbe
jae
push
dec
jnp
xchg
and
mov
cmp
fmul
and
xor
jg
pusha
bound
stc
fcompl
sub
xchg
js
test
cmp
pop
dec
dec
cld
sti
mov
dec
inc
lret
js
mov
mov
lea
stc
pop
mov
ljmp
insb
cmpl
int3
ja
cmp
jecxz
mov
push
mov
and
call
stos
inc
cmpl
pusha
sbb
adc
jecxz
popf
pop
test
out
push
cmp
lods
orl
in
inc
xor
pop
xchg
sti
lods
aaa
sbb
sub
stos
add
inc
adc
mov
repnz
js
js
in
and
sbb
push
xor
int
insb
push
jge
dec
and
nop
roll
aam
cwtl
or
mov
movsb
mov
test
int
aam
mov
mov
arpl
fcmovb
jl
out
out
xor
jno
sub
pushf
sbb
jg
cmc
cmpsl
add
mov
cwtl
mov
xchg
xchg
fwait
je
xchg
lea
aas
out
outsb
push
pop
mov
sbb
in
aam
int3
xchg
outsl
movsb
cwtl
xchg
mov
rorb
mov
jge
cli
dec
dec
sub
and
cmp
adc
jp
add
lea
pop
inc
xor
mov
jne
add
mov
cmp
popa
adc
aad
cmc
inc
aaa
xor
or
mov
xchg
fstpl
push
sbb
loope
mov
sbb
add
mov
test
mov
xor
inc
out
add
lock
adc
orb
pusha
cmp
xor
shlb
arpl
mov
popa
xchg
out
pop
push
cmp
dec
add
movsl
lds
push
xor
xchg
mov
and
mov
les
mov
lds
mov
mov
loope
in
scas
mov
mov
jb
por
cmp
add
ljmp
jnp
ss
jmp
insl
jl
sub
add
mov
imul
sti
xchg
mov
or
dec
sub
sti
xorl
cmp
bound
pop
jg
js
fsubrs
test
inc
sbb
and
sbb
sbb
iret
jmp
loop
inc
jns
mov
cli
dec
shll
dec
enter
aad
enter
les
imul
ret
sbb
stc
pop
mov
sub
lods
aas
fsubrp
add
lret
xchg
sbb
lret
adc
sub
sbb
les
jb
sarl
scas
popa
test
ds
jge
fbld
add
aas
icebp
sub
xlat
mov
pop
xchg
daa
and
jnp
insb
mov
clc
insb
out
mov
sbb
push
int3
mov
icebp
pop
movsb
nop
dec
sbb
push
mov
sti
cmpsb
cmp
dec
adc
fsubl
fimuls
adc
jo
and
ds
sbb
mov
lret
sbb
mov
xor
or
jae
hlt
push
in
add
xchg
pop
and
mov
cmp
ja
pop
pop
lea
fs
sub
jno
data16
es
gs
hlt
das
repnz
mov
into
mov
fsubrs
push
sub
cwtl
mov
jmp
movsb
mov
mov
aaa
xchg
xor
push
and
icebp
xchg
jmp
int3
jg
cmp
inc
clc
enter
or
mov
js
not
fisubrl
clc
int
or
js
scas
push
pop
test
adcb
sub
cmp
inc
push
rorl
in
sti
repz
mov
loopne
xchg
inc
mov
pop
jo
cmp
or
and
adc
push
nop
arpl
and
in
cmpl
insl
adc
xchg
mov
and
lods
decb
in
push
adcl
mov
shll
hlt
inc
jg
fwait
test
pop
xor
das
fstpt
or
imul
xchg
xchg
jno
xchg
mull
xor
jmp
ss
dec
bound
push
jp
dec
adc
pop
stos
inc
jb
mov
sbb
or
inc
aad
and
xor
lret
pop
jecxz,pn
ror
xor
outsb
and
push
xchg
mov
ss
jmp
push
adc
jecxz
subl
iret
add
mov
lock
cs
push
sub
mov
nop
inc
and
inc
mov
xor
mov
mov
mov
fs
or
push
fildl
mov
and
add
pop
xlat
cli
lret
xchg
test
jo
ds
lods
scas
inc
mov
jae
shlb
insb
pop
push
dec
inc
mov
js
loop
push
sti
sub
pop
jl
addr16
sbb
xor
clc
pop
push
push
inc
dec
shl
sbb
adc
mov
orl
call
pop
cwtl
in
xor
xchg
cmpsb
gs
inc
loope
jl
mov
inc
out
jne
imul
data16
rcrl
test
add
out
adc
cltd
mov
mov
push
adc
test
hlt
test
lahf
and
push
stos
test
dec
mov
xchg
ja
pop
push
scas
imul
ja
jmp
jmp
fwait
std
adc
mov
lea
and
pop
mov
sbb
lcall
lret
ja
inc
pop
sbb
ror
idivb
mov
mov
es
pop
shlb
sub
or
gs
cmpsl
test
ljmp
push
jae
nop
sub
outsl
mov
jmp
sbb
sbb
ss
daa
adc
mov
aam
arpl
pop
adc
inc
xlat
pop
shl
fsubrs
call
out
and
jne
addl
xchg
jne
xchg
add
imul
mov
push
pop
es
sub
push
pop
xchg
xchg
je
leave
dec
mov
xchg
out
jno
sti
inc
and
adc
out
xchg
cmpsl
negl
mov
add
ret
insl
enter
xor
clc
push
outsl
adc
inc
ret
mov
push
and
and
in
addl
xor
mov
add
adc
and
imul
and
xchg
lea
dec
loopne
pop
cmp
lods
sub
fmull
cld
push
mov
dec
popf
or
add
daa
fsubrs
jb
bound
out
test
push
add
mov
inc
in
sti
adc
sarb
loope
xor
int
fildl
pop
push
out
cmp
js
cs
rol
xchg
shr
testl
xchg
pop
fstl
ja
and
ljmp
mov
jle
imul
pop
sbb
enter
dec
mov
xchg
push
arpl
fdivrl
data16
test
in
adc
add
sub
sub
inc
fcompl
out
cmp
push
sbb
and
lea
add
stos
fs
pop
adc
push
shlb
push
nop
xor
push
scas
dec
std
adc
aas
in
push
adc
cmp
add
push
das
adc
pusha
cmpsb
mov
mov
inc
in
out
cwtl
mov
popa
pop
xlat
ljmp
movsb
xor
sub
call
jb
ret
outsl
stos
mov
adc
mov
int
push
xor
inc
aam
push
jge
lret
repz
jge
push
out
sar
and
xchg
sbb
loopne
imul
mov
pop
dec
xchg
out
stos
out
aaa
jnp
mov
sti
scas
dec
adc
xchg
cmp
into
push
mulb
fwait
pop
and
cmpsl
or
mov
mov
add
xor
mov
cmp
mov
push
cmpl
or
pop
pop
ja
pop
sub
repnz
mov
mov
test
cs
shrb
mov
sbb
lahf
lcall
gs
jbe
add
or
mov
jo
popa
mov
jno
fwait
mov
or
xchg
jmp
inc
dec
jae
das
movsb
dec
push
xchg
pushf
sub
xor
imul
std
dec
add
ja
mov
cld
into
xor
dec
stos
cmpsb
out
or
mov
out
ljmp
sbb
add
addb
out
mov
bound
ljmp
shlb
cli
cltd
inc
scas
lcall
adc
and
loope
bound
xor
pop
jle
add
mov
lret
mov
fdivrs
aas
sbb
cltd
int3
jge
std
cli
lds
aaa
xor
sub
sbb
iret
xor
stos
or
mov
jnp
push
push
lods
ljmp
pop
jno
adc
mov
or
jo
testl
sbb
clc
inc
js
fsubrl
push
add
add
cs
test
hlt
insb
iret
mov
clc
inc
sbb
mov
add
jo
and
bound
add
mov
cmpsb
fistpll
stos
pop
sub
add
cmp
scas
lret
popl
mov
cmpsl
ljmp
hlt
sbb
aam
push
outsl
cmpl
in
add
sbbb
cmp
jo
adc
in
mov
xchg
mov
fistpll
ds
mov
add
add
jecxz
dec
pop
lcall
pop
pop
lods
cld
fcmovnbe
repnz
inc
rclb
leave
fstl
lock
mov
cmp
xchg
sbb
aam
test
and
out
sbb
loope
pop
dec
dec
pop
sub
dec
sarb
mov
out
lahf
in
pop
aad
mov
gs
xor
jo
test
scas
and
mov
imul
test
xor
mov
imul
js
xlat
cli
setno
xor
test
jp
imul
jns
daa
repnz
add
add
movsb
mov
push
icebp
dec
sbb
sti
push
mov
mov
pop
add
add
inc
pop
jle
cmpsb
mov
mov
mov
sub
push
dec
adc
popf
mov
call
pop
adc
jae
lahf
jl
ret
popa
push
adc
aad
dec
mov
mov
stos
cli
mov
lret
imul
inc
js
fbld
or
mov
push
mov
cmpsl
push
xlat
popa
mov
push
ljmp
add
mov
orl
ret
xor
inc
and
or
push
repz
sbb
mov
xor
cli
daa
in
cmp
xlat
sub
lret
aas
lock
xchg
inc
fsubrs
sbb
xchg
inc
shrb
sub
es
repz
sbb
jb
sub
jno
ret
mov
adc
add
inc
jge
lret
mov
pop
ljmp
outsb
adc
fsubrl
mov
sub
cmp
push
jns
xor
pop
mov
mov
inc
jl
stc
push
sub
push
les
xor
sbb
daa
or
push
mov
cld
mov
ret
xchg
lods
mov
mov
cli
mov
push
lock
inc
mov
jne
sbb
sub
inc
lods
mov
clc
cmp
mov
dec
adc
cmpsb
dec
jns
aas
add
gs
mov
jb
sub
jne
int
cmp
adc
sub
outsb
into
stc
mov
cltd
adc
fwait
repnz
jg
loop
insl
shll
sbb
pop
negl
jo
mov
inc
ja
cmp
je
aaa
imul
dec
pusha
and
adcl
lret
pop
fdiv
xchg
pop
sbb
or
les
pop
inc
xlat
lret
mov
jns
adc
cmp
push
mov
push
enter
adc
loop
sub
pop
pop
fdivrs
popf
or
sbbl
xchg
fmull
adc
int
cli
mov
loope
lods
jl
shrl
fildl
xchg
mov
test
test
jp
outsb
ss
jmp
stos
hlt
scas
fisubrs
jl
out
sub
push
stos
cmovb
stos
inc
xchg
sti
test
dec
mov
data16
lea
jle
stc
add
xor
popf
inc
shrl
clc
rcll
jne
iret
fsubrs
cwtl
adc
test
sub
add
hlt
arpl
sbb
outsl
xor
je
jecxz
mov
stc
std
push
enter
mov
testl
out
iret
imul
aas
shl
ds
fidivl
les
cmpsl
mov
or
das
loop
test
repz
pop
addr16
mulb
sub
lods
mov
std
inc
cmpb
dec
push
int
cmc
lret
out
cs
cmp
aad
cltd
call
adc
add
mov
jns
pop
leave
lret
nop
xchg
outsb
popf
mov
inc
data16
test
push
aas
loope
movsb
add
repz
outsl
jge
adc
gs
rol
or
or
and
push
sbb
hlt
cmp
push
xchg
push
pop
push
adc
clc
out
std
push
stos
dec
aas
mov
stc
pop
fcmovbe
xor
in
call
cwtl
mov
fwait
es
fld
clc
xor
dec
mov
es
mov
jae
mov
xchg
sub
pop
and
mov
imulb
jge
sahf
not
decl
stos
xor
dec
arpl
stos
loope
push
mov
jae
imul
mov
das
inc
sbbl
mov
sbb
push
loope
fwait
cld
mov
xlat
dec
jmp
std
sbb
xchg
or
rcll
scas
test
xchg
dec
les
stos
jge
sbb
dec
mov
xchg
lods
dec
jno
jnp
stc
push
imul
pop
mov
cwtl
xor
inc
push
mov
leave
or
testb
dec
cmpsb
or
das
mov
loopne
orl
in
cmc
xor
jmp
pop
sbb
inc
popa
in
and
ja
cltd
stc
mov
dec
punpckldq
mov
shlb
mov
push
leave
pop
xor
jb
jo
sub
fs
sub
mov
dec
xor
dec
sahf
dec
fiadds
movsl
xchg
cmp
fsubrl
mov
xchg
test
pushf
mov
lods
xorb
mov
movsb
hlt
pop
mov
cli
stos
daa
dec
mov
loope
jge
adc
sbb
xchg
fstpl
and
push
je
fstl
and
ret
lcall
mov
jge
xor
xor
in
flds
mov
les
loopne
xchg
jno
loopne
sbb
pop
iret
xchg
out
fildll
jecxz
fsubl
adc
mov
push
dec
xor
cld
ja
lret
loope
pop
lds
add
pop
or
lahf
and
repz
inc
icebp
jg
xor
cmp
out
mov
int
lcall
ljmp
in
adc
aas
cmp
mov
inc
jno
aas
cmc
sbb
dec
mov
or
int3
stos
sub
cmp
ljmp
lahf
es
pop
cmp
mov
test
loopne
out
cmp
repz
push
test
mov
xor
or
jb
add
sbb
sbb
sbb
jge
push
add
arpl
xchg
and
add
test
shlb
ss
stc
ret
sub
xchg
dec
jns
xchg
dec
xchg
loope
inc
sub
stos
xchg
mov
or
inc
ret
loop
cmc
jl
lea
push
push
pop
sub
lods
lock
push
cmpsb
xor
rorb
push
ficoml
sbb
lods
rorl
in
or
ss
test
stos
adc
mov
aas
sbb
std
inc
call
cmc
xchg
mov
repnz
sbb
xchg
mov
dec
shlb
cmp
rorb
mov
ret
pop
cwtl
and
dec
aad
gs
sbb
mov
mov
xchg
repnz
jne
push
dec
cmp
fisubrl
xor
addr16
mov
fsubl
add
pusha
jo
shll
push
push
or
xchg
and
add
ror
das
rorb
push
setle
or
pusha
add
push
adc
movsb
out
or
mov
pop
es
mov
xor
jl
xchg
call
and
out
or
shlb
or
test
cltd
ret
test
into
add
mov
test
leave
xor
adcl
int
into
orl
and
adc
xor
or
mov
test
out
and
repnz
rcll
mov
in
cld
xchg
sbb
jae
imull
mov
xchg
cmp
sub
pop
push
dec
lds
andl
or
cmp
int3
xchg
sbb
push
imul
mov
jns
and
cmpsl
sub
mov
mov
int
enter
cmp
lret
push
jae
add
sub
cmpsl
dec
mov
in
jae
jbe
call
jle
lods
add
sub
js
add
dec
and
xor
fcomi
repz
out
scas
inc
daa
push
outsb
stos
push
test
stc
frstpm(287
pop
xchg
adc
dec
pop
jbe
call
ficomps
add
mov
mov
mov
sbbl
xor
jecxz
adc
fwait
adc
out
xor
xadd
jmp
mov
rclb
mov
or
xchg
push
int3
test
mov
xchg
mov
xor
ljmp
stos
and
sub
les
cmpl
pop
push
filds
push
mov
lahf
jbe
push
or
dec
mov
shlb
dec
idiv
jno
out
lahf
jmp
mov
pusha
ret
testb
in
xchg
stc
adc
pop
lret
jmp
ret
lea
je
mov
out
mov
std
dec
jbe
or
sahf
mov
adc
into
and
xchg
out
adcb
jno
pushf
add
stos
push
lret
push
lret
or
xchg
mov
and
popf
lea
add
and
mov
cs
das
cmp
pop
sub
test
gs
and
testl
cmp
popl
insl
imul
cmpsl
inc
jmp
cmp
pusha
push
add
into
mov
mov
and
sbb
and
popa
imul
xor
outsl
icebp
cld
jae
jle
out
add
mov
or
repnz
test
jb
adc
clc
stos
inc
stos
ljmp
in
sub
xchg
loop
sub
jne
add
mov
nop
fs
push
ficoml
mov
fcmovbe
in
jl
sbb
mov
jae
adc
ljmp
orl
push
out
jle
hlt
iret
ficompl
and
mov
inc
out
mov
ja
insl
jl
xor
pop
fistl
jmp
mov
push
jns
call
cli
sub
insl
repz
mov
lock
adc
mov
daa
scas
gs
dec
mov
leave
inc
adc
lret
aam
or
and
push
outsl
ret
jecxz
mov
sbb
loope
and
cltd
mov
jae
data16
mov
sub
inc
mov
jno
sbb
or
daa
and
fisubrl
jae
gs
xor
cltd
jne
test
lds
cmp
es
sub
sbb
les
xchg
sbb
fxch
lcall
sbb
scas
aam
popf
or
adc
push
jno
popf
subl
and
sbb
inc
mov
xchg
adc
jmp
mov
push
jecxz
mov
rcll
fdivrl
sbb
decb
mov
outsb
push
daa
out
pop
jmp
pusha
addr16
lods
xchg
jl
test
cmpsb
pop
lahf
pop
sbbb
movsb
mov
inc
sahf
daa
dec
sub
shlb
adc
sti
repnz
insl
andl
push
ficoms
lahf
push
fs
outsb
xor
ret
cmp
push
mov
mov
adc
insl
sti
cmp
cmp
daa
mov
das
mov
les
dec
xchg
int
outsl
mov
jl
or
mov
xor
div
adc
and
xchg
rcll
roll
push
add
mov
xlat
or
gs
add
cltd
fisubs
or
fs
insb
sub
addl
pop
pop
lds
in
jmp
lods
aam
xor
cli
imul
jle
or
mov
cltd
call
lods
outsl
xchg
inc
in
cmp
cltd
jg
adc
push
mov
adc
or
xchg
inc
mov
add
xchg
push
roll
jnp
arpl
mov
popa
push
insl
je
pcmpeqw
mov
jbe
fdivs
fs
xchg
dec
xor
insl
xchg
popf
push
in
xchg
add
mov
incb
jl
pop
inc
jnp
pop
aaa
pusha
repz
mov
mov
ds
sbb
lods
xor
sub
sbb
xor
or
cmp
fnstcw
adc
lods
and
hlt
out
xchg
and
add
lret
stos
jne
lds
cmp
mov
lods
jo
dec
lods
inc
fwait
xchg
int3
je
pop
movsl
cmp
push
in
fdivrp
inc
push
loope
lock
adc
xchg
inc
xchg
cmp
lret
or
cmc
xchg
inc
popa
pop
xchg
fdivrs
shll
jo
cmp
mov
pop
out
sub
test
xchg
popa
pop
cmp
rorb
insl
lahf
add
cmp
pop
data16
sub
test
push
cmp
mov
mov
stos
inc
int
adc
shl
cld
adc
icebp
and
jge
shr
pusha
fnsave
cmp
mov
mov
push
aam
pusha
cld
xlat
fwait
push
sbb
loop
nop/reserved
shl
cmp
add
dec
xchg
out
cmp
xchg
bound
adc
sub
test
dec
xchg
cmp
loopne
sbb
mov
xchg
stos
jmp
fnstsw
and
fcmovnu
and
dec
lea
push
ss
int
xchg
lret
mov
subl
sub
adc
fsubrs
addr16
jp
sahf
fadd
test
inc
jecxz
aas
sar
jnp
push
xchg
pop
push
rcrl
insb
fxch
xchg
xchg
or
leave
inc
mov
pop
clc
ljmp
or
cwtl
or
repnz
pop
dec
sub
mov
mov
push
lahf
xchg
mov
push
test
inc
sub
les
inc
loope
add
js
and
adc
pushf
in
btc
inc
cmp
jo
in
mov
vfnmsub132ps
fcoms
pop
jno
xor
sahf
rcrb
jns
stos
add
psllq
push
xchg
fldenv
rcrl
xlat
push
adcb
jp
and
js
jge
es
fbstp
adc
int
sub
sub
cs
pop
hlt
push
add
mov
addb
inc
push
scas
cli
adc
jge
sti
bound
pop
pop
xchg
sub
ret
mov
and
inc
or
jmp
xchg
test
mov
pop
repnz
outsl
cmp
dec
sbb
xor
pop
aad
push
or
xchg
nop
das
mov
std
das
sbb
sub
shrl
cmc
xor
fisubl
icebp
loope
adc
add
cwtl
mov
mov
les
or
or
fldl
ljmp
test
movsl
aam
aas
jg
cld
sahf
sbb
dec
jb
fsts
xor
fwait
sub
sbb
lret
out
and
dec
movsb
test
shll
cmp
mov
sbb
shll
test
testl
lods
fsubrs
jne
loop
sub
sub
xchg
aam
lea
lea
fstpl
subb
fisttpll
enter
imul
int
and
stos
xor
shrl
and
push
or
xchg
pop
leave
pop
xchg
mov
imul
dec
xchg
movsb
cld
out
pop
test
sbb
mov
mov
pop
add
cmp
pop
out
in
dec
jno
enter
mov
dec
popf
negb
jno
jo
dec
in
lock
fs
movsl
scas
out
fisubl
mulb
sbb
dec
dec
shrb
repnz
or
mov
in
jae
sbb
sbb
jle,pt
push
test
jmp
dec
cmp
push
push
xchg
cmc
mov
xor
loop
aaa
loopne
add
outsl
add
shrb
sbb
jecxz
jp
jns
movsw
sub
aam
xchg
inc
xlat
aaa
sahf
mov
xchg
and
sbb
xchg
fst
sub
decb
and
push
js
es
mov
shl
fcmovnb
or
out
iret
fs
imul
stos
mov
or
dec
pop
or
loopne
clc
call
cwtl
pushf
outsl
rol
xchg
inc
ja
dec
add
push
loope
sbb
fnsave
or
dec
in
or
lock
aas
ret
rcrb
dec
cltd
xchg
cmp
out
jl
sbb
sub
loopne
sbb
cmp
mov
testl
leave
mov
outsb
dec
mov
in
sahf
mov
leave
inc
inc
mov
mov
xchg
xor
pop
adc
lret
pop
jg
ljmp
xlat
roll
lcall
shrb
notb
in
sbb
jno
xchg
fidivrs
int3
push
cwtl
add
push
cmp
and
mov
push
fmuls
xchg
jno
icebp
or
cmpsl
and
adc
xor
inc
jle
jo
cmp
pop
mov
add
fwait
adc
ljmp
pop
pushf
scas
pop
sub
sub
fimuls
sbb
dec
jo
loope
stos
mov
inc
arpl
vminss
inc
loope
inc
addr16
repz
xor
mov
cmp
sub
mov
push
mov
mov
int
popa
add
xor
roll
mov
popaw
mov
cmp
lods
jb
call
sbb
cltd
jmp
cmpsb
gs
mov
dec
inc
mov
mov
add
sbb
mov
leave
jae
adc
mov
cmp
mov
xor
dec
push
cltd
add
xchg
cmpsl
into
shlb
sub
adc
or
jo
popf
pop
pop
mov
cmpsb
aad
xchg
shr
testb
outsl
mov
sbb
outsl
inc
mov
xor
jg
jecxz
xor
jbe
rcrl
mov
push
add
ret
or
das
jmp
insb
inc
mov
pop
clc
cmp
fisubs
pop
cli
dec
int
or
or
incb
mov
movsl
ja
jo
lock
test
int3
push
inc
popa
mov
paddq
ja
mov
test
std
cmp
push
das
idivb
scas
inc
js
xchg
mov
jmp
xchg
jmp
les
and
mov
mov
ss
mov
lods
xchg
rcl
jl
add
stos
loopne
andb
std
std
orl
mov
cmp
mov
or
add
loop
shrl
push
push
aad
movlps
inc
frstor
inc
ds
mov
pop
mov
in
js
popf
leave
js
lods
scas
jns
adc
arpl
sub
cmp
aaa
adc
mov
xor
mov
jp
add
add
sbb
repnz
daa
inc
stos
xchg
mov
and
jb
cmp
and
xor
mov
lock
das
cmp
push
pop
mov
out
inc
into
inc
jge
rcll
inc
test
xchg
sub
adc
ret
xchg
mov
and
icebp
pop
fsubrs
xorb
cmpsl
and
imul
xchg
cli
add
mov
insl
imulb
faddl
dec
int
push
lods
sbb
pop
repz
fiadds
jl
lret
cmp
mov
add
cmp
inc
mov
movsb
sbb
rol
sub
or
inc
jle
and
bound
ss
xchg
dec
push
aas
mov
in
fwait
push
push
ja
cld
mov
rcrl
push
mov
pushl
mov
in
xor
cmp
adc
lods
bound
nop
dec
jp
das
add
xchg
mov
jg
dec
push
dec
stos
std
inc
cbtw
mov
lahf
sub
fstps
subb
mov
adc
mov
insl
repz
pop
aaa
jae
fs
das
xlat
sti
cmp
cli
cld
xchg
ljmp
dec
adc
std
mov
iret
pop
cmp
outsl
push
outsl
pop
jne
mov
neg
mov
inc
pop
xlat
or
push
lret
cwtl
aas
and
and
pusha
fdivrs
or
fs
cmc
pop
nop
movsl
pop
push
pop
adc
gs
sti
jmp
popf
fldenv
rclb
pop
shll
ja
insl
cs
movsb
jg
xchg
mov
push
mov
ret
test
aaa
in
sub
dec
cmc
sbb
jl
aad
lods
mov
push
or
fwait
in
and
ljmp
push
pop
cmp
and
aas
inc
mov
test
cld
mov
adc
mov
das
dec
cmp
inc
movsb
add
dec
adc
jg
decb
fdivrs
pop
or
push
loope
int3
mov
mov
push
gs
sub
fbld
and
imul
daa
xorl
mov
insb
sbb
mov
pop
notb
movsb
mov
sub
pop
inc
decb
adc
sti
mov
or
pop
jo
ljmp
mov
stc
dec
inc
dec
fidivs
insb
sbb
add
lahf
dec
cmp
xlat
sbb
xchg
dec
mov
sbb
push
xor
xor
pop
add
fsubs
mov
cmpsb
mov
or
icebp
pop
dec
outsl
es
jbe
mov
mov
pop
lret
negb
cmp
mov
mov
movsb
inc
sti
add
xchg
mov
cmp
scas
pop
lahf
cltd
and
mov
lods
aas
in
sbb
loope
clc
popa
inc
jecxz
lret
enter
add
add
dec
sbb
in
ja
dec
or
dec
mov
dec
adc
test
jecxz
sbb
dec
pop
cmp
int
mov
ret
and
dec
pop
aaa
ret
pop
xor
nop
adc
push
and
or
cmpsb
add
cmp
outsl
xchg
add
int
fidivrl
add
fs
mov
sbb
sbb
movsb
mov
fs
les
mov
and
inc
test
mov
xor
inc
fsts
and
add
inc
mov
push
leave
out
notb
cmp
pop
and
cmp
push
dec
xchg
aad
inc
push
inc
sarl
add
leave
xchg
xchg
std
mov
das
aaa
addb
sbb
imul
ret
xor
push
mov
xchg
arpl
aaa
call
leave
inc
mov
add
jmp
psubw
pop
loop
ret
adc
pop
jmp
cmp
add
in
inc
mov
adc
hlt
jo
push
shll
and
adc
jnp
rclb
cmp
sbb
mov
out
or
xchg
sbb
je
mov
imul
sbb
int
subb
je
mov
std
push
outsl
sbb
jno
ror
pop
icebp
mov
xorl
sub
cmp
and
cmpb
loop
jo
and
imul
cli
sub
sbb
loope
push
and
lock
mov
cld
xor
xchg
sti
xchg
pop
xor
xchg
sub
mov
movsb
int3
mov
mov
incb
mov
push
cmp
mov
js
insb
jbe
scas
cmp
clc
mov
cmpsl
fdiv
xor
jne
mov
popf
sbb
mov
inc
sar
movsl
add
xchg
adc
xchg
mov
xchg
pop
addb
mov
lcall
lods
lahf
insb
test
or
dec
jl
mov
jae
adc
jge
mov
cmp
rcrb
cld
push
cmp
dec
cmp
mov
int
mov
lcall
and
cmpsl
imul
or
mov
dec
mov
xchg
cmp
in
adc
mov
stos
rcrb
ds
push
idivl
dec
iret
iret
aam
mov
in
ljmp
outsl
add
jnp
ret
aam
or
jo
test
out
dec
inc
decl
fs
push
push
rolb
fidivl
or
pop
or
shrb
cmp
push
mov
test
lahf
repz
adc
cs
cld
mov
addb
lods
gs
addr16
test
or
pop
add
mov
mov
xor
into
jge
popf
inc
jns
mov
xchg
lods
int3
scas
mov
in
pop
aad
ret
aad
push
js
mov
out
add
dec
or
out
mov
add
mov
add
or
adc
fistpl
cmpsl
out
or
aad
cmp
mov
je
stos
popa
popf
ss
jnp
mov
icebp
or
out
mov
sbb
push
push
daa
add
and
rcll
popa
test
push
pop
cltd
and
int3
repz
sbb
pop
sub
pushf
jp
icebp
xlat
inc
lret
rorb
out
outsl
mov
inc
adc
mov
repnz
mov
jg
xor
in
sbb
js
testb
nop
in
ret
inc
pop
arpl
sbb
mov
aad
jle
xor
adc
cmp
lock
stos
int
mov
outsb
xor
js
imul
mov
int3
lods
or
imul
aaa
mov
scas
out
iret
push
adc
xlat
adc
inc
jp
cmp
dec
imul
xchg
mov
inc
imul
orl
loope
fldl2e
inc
fimuls
jp
aam
scas
push
and
and
xchg
inc
xorl
mov
mov
bound
scas
lods
jg
lcall
inc
lcall
aas
movsb
sarb
push
int3
cwtl
jnp
loop
inc
je
pop
iret
lahf
out
imul
pop
call
xor
xlat
mull
xor
adcb
add
loope
leave
scas
inc
mov
and
std
dec
enter
lea
hlt
je
sti
cs
aad
sahf
stos
mov
add
sbb
push
icebp
cs
jmp
mov
movsl
or
xchg
push
jge
imul
and
pop
in
add
hlt
adc
mov
push
sahf
aaa
jno
leave
data16
sbb
mov
dec
push
mov
push
add
mov
ja
push
mov
mov
dec
call
mov
sub
ficomps
int
in
push
imul
or
lods
dec
and
add
icebp
xor
inc
push
outsl
jo
and
popf
xor
inc
dec
fiaddl
loope
movsl
daa
decl
or
test
orl
loop
ss
repz
cli
fldl
adc
jmp
insb
fisubrs
cmp
aam
xchg
lret
outsl
sbb
inc
xchg
std
gs
out
sbb
or
push
mov
ds
dec
sbb
lret
arpl
cmpl
mov
cld
mov
sub
mov
movsl
or
mov
orb
sahf
push
mov
cmp
cmp
movsl
sub
popf
in
stos
adc
jnp
mov
mulb
xchg
shlb
in
jmp
je
loopne
push
movsb
pop
xor
aad
mov
fstpl
or
std
out
fwait
movsl
imul
push
sub
in
or
fwait
andw
dec
int
mov
outsl
fmuls
mov
cmp
xchg
inc
aam
dec
pop
test
incb
test
cmpsl
xchg
jecxz
loope
push
mov
push
xchg
add
cwtl
xor
push
test
mov
push
xchg
or
stos
xor
mov
jno
mov
mov
mov
dec
jl
pop
sbb
push
fidivs
push
stos
ret
mov
mov
lock
mov
sbb
shrl
aad
cmp
sub
icebp
fs
ljmp
xor
das
inc
add
cltd
out
ja
xchg
outsb
jb
mov
xor
ss
out
xchg
ffree
lret
cli
fdivl
fwait
lods
adcl
jae
std
and
aad
cwtl
mov
pop
lock
rcl
xchg
push
icebp
inc
xchg
lcall
and
in
mov
loopne
lcall
mov
jnp
xchg
inc
shll
sbb
mov
xchg
xchg
cmpsl
leave
push
mov
mov
push
imul
mov
scas
ror
scas
jnp
leave
pop
pop
mov
movb
sub
mov
jo
push
orb
testb
push
ret
pop
push
cmp
jbe
addr16
push
adc
popa
mov
mov
push
pop
push
and
test
push
sarb
movsl
mov
test
inc
push
dec
std
test
add
add
and
jb
xchg
fdivl
pmullw
push
out
pop
lods
cltd
scas
insb
and
xchg
mov
loope
push
popf
and
lcall
call
pop
and
call
mov
xor
cmc
and
shll
scas
xor
fucomip
pusha
repz
mov
popf
pop
mov
pop
cmp
inc
xchg
mov
push
dec
or
pop
sbb
in
push
jmp
cli
inc
aad
or
jno
ljmp
or
mov
jmp
fisubrl
pushf
dec
jle
out
in
mov
mov
xchg
mov
rolb
cmp
mov
sub
test
lods
outsb
push
or
xchg
push
pop
xor
addr16
mov
add
push
fcmovu
push
dec
lods
xor
mov
lea
xchg
filds
pop
jbe
sub
stos
mov
fcompl
or
cmp
sbb
adc
mov
add
jbe
push
push
mov
sub
sahf
in
mov
lods
movsl
pop
ret
pop
sub
push
dec
adc
inc
mov
jbe
inc
pop
inc
rorb
pop
sahf
repz
aam
jge
jae
out
popa
jne
xor
jg
ss
mov
cmp
jae
popf
mov
mov
je
and
rclb
lods
call
inc
cwtl
xchg
xchg
xor
or
std
xchg
cld
daa
lods
sub
sub
int3
mov
fs
call
int3
addr16
lods
das
mov
cmpsb
inc
inc
push
dec
nop
movsb
push
xor
jge
add
xchg
jae
popa
xor
push
imul
inc
jl
push
leave
outsb
pop
rorb
ljmp
fucomp
mov
push
shlb
mov
popf
sub
jmp
xlat
push
add
stc
lcall
or
das
cmp
sti
inc
fisubrs
ss
add
pop
or
lods
imul
ror
adc
sbb
scas
dec
testb
imul
scas
lret
dec
hlt
jae
add
push
or
in
scas
add
fwait
scas
not
fdivrs
jo
jmp
fwait
shrl
mov
test
stos
pushf
pop
mov
mov
enter
aad
mov
inc
jge
jno
dec
mov
ret
cwtl
fisubrl
ret
mov
ss
cwtl
mov
and
lcall
cmp
int
sbb
cmp
ss
and
outsl
imulb
sub
daa
sub
jmp
jo
cmp
mov
sbb
dec
pop
and
ljmp
gs
cld
call
mov
aas
popw
mov
out
movsb
adc
outsb
fdivrl
icebp
sar
cmp
mov
lcall
movsb
rorl
sarb
push
inc
push
sbb
fimull
mov
loop
incl
jecxz
pushf
adc
dec
push
xchg
cmc
int3
add
mov
jmp
and
dec
cmp
int
sub
sbb
jle
pushf
lock
xor
je
iret
sarb
push
jg
adc
insb
data16
gs
out
push
shlb
push
sarb
loopne
or
aaa
and
or
loopne
mov
popa
or
fidivl
divl
or
jns
fdivs
push
out
add
add
iret
or
mov
dec
adc
cli
cmp
jno
loopne
xor
dec
aaa
xchg
inc
mov
aad
mov
mov
mov
aaa
adc
push
sub
push
mov
push
mov
pop
fcoml
je
mov
cwtl
mov
xchg
scas
or
clc
int3
pop
add
lcall
xor
dec
jnp
movsb
cmp
cmp
outsl
roll
and
xlat
ret
and
xor
cmp
add
and
int3
xchg
cmp
adc
add
or
sti
pop
insb
pop
lods
lods
mov
enter
leave
cmc
repz
stos
cmp
in
das
daa
loope
dec
and
rcr
out
dec
cmp
adc
cmp
xchg
xor
add
xorl
test
xor
fists
das
movsb
jecxz
int
dec
pop
in
test
push
xchg
in
lret
test
add
dec
pop
sub
stc
and
inc
out
int
lret
jl
je
jle
lea
dec
adc
testb
out
aad
jae
xchg
imul
stos
jo
jecxz
sarb
mov
aam
mov
aam
frstor
insb
push
cmpsb
inc
sub
jp
pop
push
jnp
sub
pop
xchg
jns
inc
cmpsl
mov
sbb
jbe
push
fcomps
clc
dec
in
pop
xor
sbb
mov
mov
mov
out
vpinsrw
cmp
subb
mov
test
fcomi
xchg
pop
rcl
xor
cmp
cmp
test
scas
cmp
dec
fwait
incl
xor
or
fbstp
push
out
xchg
sahf
xchg
cmp
decl
and
push
aad
inc
and
mov
cmc
push
lahf
rcrb
push
cmpsb
pop
mov
faddl
adc
jb
fsubrl
inc
aad
cmp
insl
loope
dec
mov
pop
cmp
and
xchg
xor
enter
mov
inc
in
es
movsb
xchg
jecxz
mov
sahf
xchg
es
cli
cmp
inc
jle
lock
lds
adc
cmc
scas
stos
data16
test
add
daa
mov
shll
push
imul
xorb
adc
fwait
inc
fidivrl
adc
insb
and
add
push
push
adc
lahf
mov
fs
xchg
fsubr
iret
sub
jge
pop
incw
fmuls
mov
mov
mov
cmpsb
jae
inc
dec
shll
in
cltd
mul
stc
dec
stos
in
movsb
sbb
popl
lods
xchg
push
divb
and
sbb
jb
jb
mov
scas
lcall
push
mov
xchg
insb
adc
lock
rorl
push
lods
scas
lret
push
push
and
sub
xchg
loopne
jl
mov
dec
sbb
daa
arpl
pop
loop
push
xchg
jl
mov
lret
mov
scas
popa
lahf
mov
sub
mov
imul
inc
adc
xchg
popa
insl
inc
fwait
in
jp
sbb
cli
pop
push
stc
lea
or
and
dec
movsl
mov
lods
out
and
sub
fisttps
pop
daa
jno
scas
bound
or
mov
dec
push
mov
fbld
inc
inc
mov
xchg
sti
pushf
fbld
sbb
cmp
in
mov
arpl
dec
and
jne
inc
jmp
inc
xchg
test
fwait
test
stos
test
or
mov
pop
mov
and
fisttps
mov
out
cwtl
mov
and
hlt
imul
jae
gs
mov
sub
jno
xchg
jo
ljmp
lret
dec
mov
fsts
das
jae
rolb
and
adc
xchg
push
ret
std
push
cmp
push
stos
in
push
test
inc
dec
orl
sub
mov
jne
fiadds
cmp
ret
in
jbe
push
stos
repnz
in
imul
pop
jle
aaa
inc
push
jns
jb
push
stos
add
xchg
jne
and
mov
fs
hlt
dec
scas
sarb
js
nop
out
xor
inc
orl
repz
lods
stc
xchg
mov
imul
mov
add
out
stos
adc
mov
inc
xchg
addb
into
sub
ret
jmp
and
cmpsl
jns
cmpsl
push
daa
int3
inc
es
pop
push
in
ljmp
andl
sub
push
scas
cmpsl
and
loop
lcall
int3
fcmovbe
lock
insl
fdivrs
push
sbbl
pop
repnz
je
sbb
or
addr16
int3
movsb
xchg
sub
ret
sub
add
jecxz
sbb
sbb
pusha
add
pop
dec
addr16
push
stc
in
fs
or
movsl
jo
lret
inc
daa
sbb
lahf
mov
stc
mov
inc
mov
mov
popf
ror
sarb
lds
loope
mov
sbb
mov
movb
lret
xchg
lahf
and
cmp
mov
mov
repnz
mov
jecxz
sahf
sbb
jecxz
fldl
daa
push
xchg
xlat
xlat
testb
jmp
inc
test
lods
pop
inc
inc
in
pushf
std
and
xor
adc
xor
fbld
dec
sub
movsl
ret
push
sub
in
dec
dec
push
jg
mov
loope
mov
out
jecxz
les
and
push
inc
inc
ljmp
xor
jnp
lock
aaa
cmp
je
fwait
xchg
sbb
mov
mov
je
btr
mov
ret
rclb
add
inc
xor
pop
push
je
cmp
frstor
adc
out
or
sbb
dec
sub
sti
daa
test
inc
jp
adc
mov
hlt
inc
push
jae
inc
mov
mov
mov
lods
inc
insb
enter
ror
loopne
cmp
xlat
mov
lahf
sub
and
inc
mov
loope
cmp
test
xor
ss
cmc
addb
push
in
pop
pop
adc
push
in
rcrl
dec
je
sbb
mov
fmul
sbb
dec
mov
fwait
xor
loope
call
in
jae
xchg
cmp
sbb
add
push
cmp
pop
out
mov
xchg
clc
or
dec
mov
cmpsl
or
mov
or
xchg
or
call
xor
imul
roll
add
pusha
lahf
loopne
adc
sub
test
pop
orl
sbb
xlat
add
jge
mov
push
cmpsl
out
jp
popf
xlat
loop
sbb
xchg
cmp
push
jo
and
pop
pop
adc
aad
jecxz
subl
push
dec
sub
arpl
adc
sub
dec
pop
pushf
sub
xor
xchg
scas
push
mov
xor
in
xchg
shrb
cmp
push
jns
call
jg
push
jmp
sub
mov
pop
cmp
or
fwait
roll
xorb
stc
dec
std
dec
mov
nop
pushf
shrb
and
pop
mov
pop
sub
mov
mov
sahf
and
sbb
imul
xchg
cltd
and
xchg
scas
jmp
rolb
mov
in
inc
or
ds
adc
cld
xor
cmp
dec
dec
push
and
fsts
xor
gs
dec
push
inc
pop
mov
ljmp
loopne
inc
xor
pop
dec
and
rcrl
mov
pop
or
pop
sar
pop
scas
adc
sbb
add
bound
negb
mov
push
rorl
or
hlt
adc
in
test
clc
call
icebp
roll
pop
mov
hlt
add
scas
mov
outsb
push
xchg
lahf
sti
sahf
dec
ret
xchg
imul
in
gs
dec
jae
test
bnd
mov
pop
sub
sub
sbb
push
test
dec
dec
scas
or
add
xstore-rng
cmpsl
inc
shlb
sbb
ds
sbb
push
dec
stos
sbb
mov
nop
sub
adc
and
push
cs
xor
fnstcw
cmpsl
outsb
lret
add
dec
push
add
sti
mov
xchg
cwtl
jp
loop
je
outsb
xchg
jmp
xchg
mov
cli
or
and
lock
jno
jne
jnp
jbe
push
mov
jecxz
pushf
icebp
adc
cmp
adc
mov
outsl
and
dec
shll
ja
scas
mov
adc
popf
data16
lret
and
test
bound
cmpsb
testl
aas
testl
test
jae
imul
or
mov
mov
jne
mov
dec
sub
adc
pop
mov
xor
outsl
sti
test
sbb
sub
cmc
imulb
xchg
or
test
out
push
pop
jle
mov
test
cmp
aam
dec
ret
cmp
pop
dec
xor
sbb
dec
js
hlt
outsl
imulb
jo
xor
xchg
adc
mov
mov
add
ficomps
pop
test
leave
js
arpl
out
adc
sbb
sub
mov
arpl
std
xchg
and
lahf
inc
pop
add
cmp
ret
sbb
stc
xchg
and
dec
xchg
into
scas
jecxz
in
call
sub
cltd
cmp
in
push
lcall
call
test
xor
lds
sbb
leave
cltd
and
leave
rorb
test
mov
dec
jno
out
xchg
mov
push
xor
dec
lods
xchg
addb
jle
repnz
add
sub
mov
test
out
js
bound
cmp
cld
stos
cs
adc
or
inc
push
movsb
push
mov
scas
cmc
stos
test
and
pop
adc
xchg
rcrl
add
ja
cmp
mov
lods
xchg
adc
popf
loopne
lock
mov
jmp
mov
cmp
jge
xchg
push
jne
and
add
aas
test
scas
xor
mov
lds
cmp
icebp
inc
outsb
add
ljmp
mov
mov
pop
and
xor
jle
daa
and
sbb
add
xchg
jne
divb
adc
gs
jle
mov
push
test
std
xchg
out
test
ret
outsb
pop
ret
dec
mov
and
fbstp
lds
push
push
inc
fs
push
frstor
arpl
add
outsb
fimull
mov
jne
daa
cmp
notl
les
data16
add
aas
popf
jmp
popf
int
scas
mov
jle
je
jl
int
ds
dec
cmp
gs
jbe
lret
pop
int3
mov
rclb
xchg
push
xor
iret
cltd
loope
cmp
bts
rol
xor
add
adc
movsl
mov
xor
mov
adcb
out
cmpsb
pop
inc
les
inc
popf
xor
sub
js
lret
and
scas
cmp
pop
outsl
loop
xchg
rorl
mov
or
or
mov
fwait
mov
ret
fiadds
pop
inc
sub
mov
inc
lods
inc
sahf
cli
test
in
subl
sbb
inc
cmpsl
das
loopne
nop
notb
arpl
je
out
dec
and
orl
les
dec
stos
imul
je
or
fwait
jne
lcall
or
loope
add
lahf
fstps
cmp
repnz
lock
inc
outsl
jb
testl
in
pop
xchg
shr
insl
jae
dec
int
pop
dec
push
repnz
sub
mov
dec
xor
push
xor
dec
or
push
ss
js
mov
add
pop
jbe
cmpsl
in
cmpsb
push
jg
sbb
fmull
ss
lret
xor
aam
push
mov
push
daa
js
or
pop
mov
push
pop
sbb
pushf
nop
lcall
mov
bound
repz
xchg
arpl
cltd
jl
or
les
pop
insl
imul
insb
ja
pop
test
je,pt
stos
mov
push
xor
mov
jo
add
daa
fldcw
xor
lea
icebp
push
and
stos
and
xlat
out
mov
xlat
pop
xchg
add
leave
cmpsb
mov
outsw
pop
mov
xor
add
es
mov
inc
lret
xlat
mov
and
adc
cmpsb
push
xchg
loope
js
xor
add
push
daa
or
js
jne
ss
dec
int
inc
push
or
test
jecxz
pop
dec
js
push
lret
jo
pop
xchg
dec
iret
out
pop
mov
mov
out
jnp
sub
leave
pop
adcb
imul
add
sub
ret
ljmp
pusha
mov
cwtl
dec
daa
inc
mov
sbb
dec
movsb
sub
bound
push
mov
ja
icebp
movsl
xchg
stc
ret
ss
jmp
ss
sar
cmp
es
sub
push
jl
outsb
sbb
jmp
add
xchg
dec
pop
inc
out
je
call
dec
lds
push
fcmovu
mov
and
mov
aam
repz
or
aaa
and
je
dec
mov
jo
xlat
ret
push
push
mov
adc
push
popa
pop
cmp
fs
push
mov
xchg
dec
out
sub
or
or
dec
negb
inc
xor
sbb
xchg
mov
mov
outsl
xchg
sub
xor
arpl
lods
sahf
mov
sub
test
pop
cmp
loopne
je
pop
fiadds
push
xor
fs
pop
sub
loopne
sbb
cmp
mov
ljmp
jp
jns
sahf
ret
mov
repnz
pop
bound
adc
insl
cwtl
jmp
dec
xchg
dec
sub
jle
sub
push
xchg
pop
sbb
dec
in
lahf
ret
dec
lods
mov
cmp
es
dec
dec
cmp
add
pop
jbe
ja
dec
or
cmp
mov
mov
in
push
notl
leave
cmp
lock
xor
jbe
sub
stos
push
sub
add
pop
fcomi
mov
push
cltd
mov
fwait
aad
mov
xchg
iret
popf
dec
outsl
jl
pushf
dec
mov
xor
stos
fimull
and
cwtl
fcmovbe
outsl
jge
imul
mov
lods
inc
mov
ljmp
cmc
sub
test
xchg
adc
out
movsb
mov
mov
jnp
push
push
pop
loope
push
mov
dec
js
push
aas
push
dec
dec
repz
fnstsw
xchg
shlb
mov
sbb
fildll
jb
popa
jle
in
dec
xor
sbb
xlat
add
imul
xor
mov
test
mov
rorl
insb
sbb
dec
and
cmc
xchg
jns
ds
jnp
add
xor
mov
xchg
jmp
add
sbb
in
stos
jnp
negb
faddl
pop
ljmp
in
pop
jbe
ss
lds
in
test
jp
add
insl
push
dec
dec
lret
call
pop
mov
inc
fisttps
jg
sbb
or
fdivp
movsb
add
pop
stos
leave
rorb
xor
std
and
push
add
movb
mov
push
sti
jo
or
cmp
scas
adcl
mov
aam
xor
sub
cmc
cmpsl
adc
pop
dec
adc
outsb
hlt
vpxor
inc
leave
jecxz
mov
push
pop
test
sarl
sub
out
loopne
repz
stc
mov
mov
xor
sub
bound
adc
lods
inc
mov
cwtl
mov
scas
push
call
scas
dec
sub
cmp
hlt
lret
js
sub
jmp
adc
jns
sahf
jns
cli
fiadds
cmp
xchg
lods
fmuls
je
xchg
cs
dec
pop
cmp
nop
pop
or
call
jo
or
mov
xchg
jae
scas
ficompl
push
out
mov
test
mov
pop
adc
or
xchg
add
xchg
outsb
fwait
mov
xor
jo
mov
sarl
ret
ret
mov
shl
mov
add
sbb
dec
mov
sub
loopne
push
mov
fiadds
inc
add
ss
push
or
sub
xor
xor
push
xchg
mov
xchg
ja
sbb
xchg
lods
lcall
sbb
arpl
shll
imulb
repz
dec
clc
push
jecxz
lret
mov
lock
push
push
hlt
jmp
mov
je
and
pop
mov
mov
out
cmpsl
jmp
jae
insb
xor
je
add
lods
cmp
and
inc
fdivs
fisubl
pop
ja
lret
idiv
int
push
lods
sbb
test
add
jecxz
js
mov
sub
sub
xchg
gs
jnp
aam
rorb
dec
mov
cmpsl
jge
je
sub
xchg
xor
mov
mov
or
repz
push
dec
movsl
mov
loopne
jp
or
mov
data16
adc
fwait
ss
aad
add
pop
xchg
mov
mov
xchg
mulb
jnp
stos
loope
mov
cwtl
jmp
adc
outsl
cmp
outsl
cmpsl
pop
sahf
pop
test
push
pop
push
cs
enter
cmp
fcoms
stos
movsl
pop
xchg
xchg
pop
into
xor
fcompl
mov
sbb
add
jge
insl
xor
xor
cmc
mov
sbb
adc
jbe
jle
push
lcall
dec
cmp
ja
lret
cli
push
cmp
loope
sti
std
clc
out
test
ror
pusha
adc
dec
lcall
xchg
push
fs
addb
data16
roll
xchg
fwait
cmp
cmp
pop
and
mov
hlt
xchg
and
mov
ret
pop
jae
lds
mov
sub
mov
xchg
jmp
outsl
pop
in
bound
mov
mov
lods
andl
bound
mov
sbb
inc
or
fsts
pusha
into
dec
test
ja
adc
enter
arpl
mov
sbb
push
rolb
jns
outsl
call
ret
adc
addr16
loope
cmp
insl
clc
pop
xchg
clc
pop
inc
xor
jl
sti
mov
pusha
dec
pop
xchg
or
and
sbb
divb
dec
ja
pop
dec
fldl
shrl
add
adc
xchg
shl
and
stos
mov
mov
mov
push
sub
xor
jno
fwait
sbb
cwtl
outsb
mov
iret
lretw
cs
int3
xor
outsb
fcmovu
xor
mov
jecxz
imul
pop
add
inc
xchg
cwtl
sub
dec
in
add
adc
xlat
imul
stos
cmp
sbb
pushf
mov
mov
int3
add
iret
jbe
sub
jmp
adc
je
cmp
jge
lcall
jb
push
loop
push
test
pusha
push
pop
cmp
int
push
lahf
inc
gs
pusha
aas
mov
jge
addr16
ret
jns
lcall
int
dec
pop
rcll
mov
lods
int
mov
gs
fdivrl
stos
and
loopne
or
popa
ja
and
inc
repnz
xor
jbe
xchg
mov
mov
xchg
rcrl
rol
sbb
and
pop
cmpb
adc
jbe
dec
push
fs
movsb
stc
and
out
xor
addl
loope
or
sub
adc
push
stc
lret
movsl
pop
ljmp
fwait
inc
jp
pop
rol
ja
js
int3
mov
stos
popf
in
mov
mov
mov
fistl
in
xor
in
pop
sbb
scas
fisttpl
cli
in
mov
rorb
xchg
orl
ja
pop
mov
pop
daa
cld
sub
push
stos
adc
jl
daa
mov
cld
pop
les
adc
push
in
xchg
add
filds
fisttps
push
add
xor
shl
aad
mov
mov
cmp
dec
xchg
inc
lock
inc
call
lock
jecxz
mov
cltd
int3
out
jno
adc
incl
xor
sbb
mov
push
jle
xor
decl
movzbl
bnd
loop
out
or
xor
push
xchg
mov
ds
lret
aam
inc
in
xchg
call
xchg
jnp
cmp
mov
ret
mov
mov
xor
dec
lahf
sbb
cmc
inc
push
push
adc
cld
xor
dec
xchg
in
in
mov
cmp
xor
in
aam
sbb
add
pop
jb
aas
mov
adc
inc
in
cwtl
pop
xor
imul
mov
fistl
mov
and
sarl
sbb
movsb
mov
xchg
sub
daa
xchg
jb
add
cld
popf
loopne
or
ja
lahf
fisttpll
imul
mov
iret
sbb
lods
mov
psubusw
arpl
mov
xor
jae
cmp
icebp
inc
mov
mov
ljmp
jnp
jp
mov
pop
cmpsb
scas
or
add
add
imul
and
push
push
popf
mov
sahf
adc
enter
stc
xchg
aad
xchg
lret
jmp
pushf
push
mov
movsb
outsl
push
sub
push
hlt
dec
scas
xor
ficoms
mov
push
aam
nop
inc
push
inc
jge
jb
or
sbbl
jo
fbstp
push
shl
pop
loope
dec
xor
mov
fcoml
or
stos
bound
es
fs
add
xor
sub
dec
sub
mov
scas
jno
shrb
faddl
outsb
call
mov
fwait
movsb
pop
and
xor
add
cmp
push
pop
mov
or
xchg
or
bound
lods
daa
outsl
icebp
popf
mov
xchg
stos
mov
int
insl
jo
das
sahf
cmp
cmp
iret
push
imul
cmpsb
mov
sub
push
xchg
in
mov
out
cmp
pop
in
lods
mov
cltd
jp
mov
cmpb
dec
lods
hlt
xor
pop
in
lret
and
pop
pop
pop
push
push
mov
jae
add
test
adc
sbb
mov
shll
lret
xor
popf
movsb
stc
xchg
cmp
jmp
inc
mov
jmp
dec
mov
push
sub
outsl
sub
add
xor
pop
dec
call
int3
cwtl
xor
cmp
and
sub
pop
pushf
ljmp
ret
lock
fcmovbe
mov
adc
xchg
jb
repz
insb
add
xchg
cmpsl
xor
leave
jb
mov
adc
in
dec
into
sbb
fisubrs
aad
in
push
or
inc
aam
add
pop
mov
dec
andl
ret
fcmovnu
rorl
and
aad
mov
mov
shlb
outsl
roll
ljmp
add
movntq
push
fidivrl
inc
push
std
stos
xchg
setp
sub
daa
push
cmp
orl
stos
push
mov
cld
jne
xlat
imul
lods
lock
cld
enter
lret
xchg
mov
inc
fbld
xchg
in
xor
outsl
cmp
mov
sbb
test
jecxz
ret
and
imulb
or
or
ds
push
xchg
xlat
mov
xchg
pop
inc
popl
das
js
and
and
adc
sahf
loopne
stos
jmp
xchg
dec
mov
pushf
push
retw
or
sub
bound
aas
mov
test
inc
lods
mov
sar
jae
gs
and
xchg
sub
push
in
out
idivl
sub
adc
outsl
or
enter
jno
arpl
xchg
mov
out
sbb
cmpsb
and
nop
arpl
pop
jbe
xor
and
mov
pop
aas
add
pop
push
xor
pop
loopne
push
jno
outsb
xchg
mov
dec
mov
test
xchg
cmp
inc
lea
fs
jg
push
dec
dec
xchg
pop
push
stos
cmpsb
pop
ret
cmp
mov
out
dec
imul
pop
stos
dec
int
mov
dec
je
or
arpl
jns
sbb
mov
stos
or
aad
fstl
addr16
mov
xchg
aad
or
jne
cmp
cwtl
ficoml
sbb
fdivl
or
mov
nop
or
lods
mov
loop
loope
mov
mov
mov
ror
sub
adc
and
movsb
sub
sub
sub
dec
or
pop
imul
jbe
mov
mov
add
cmp
jmp
xor
aas
leave
std
jle
arpl
pop
push
sub
int3
mov
rclb
pop
xchg
cmp
cs
out
iret
sbb
mov
adc
ret
dec
lods
out
cwtl
outsl
dec
adc
or
jle
jle
inc
pop
in
sbb
cmp
adc
mov
pop
repz
insb
ficomps
mov
popa
pop
jb
jle
adc
jnp
xchg
jmp
pop
cmp
inc
xor
dec
xchg
into
repnz
fnstenv
shlb
cwtl
outsb
insb
adc
or
out
pushl
idiv
in
addb
in
mov
adcb
cmpsb
sbb
push
test
outsl
jge
jp
mov
lods
in
xor
jmp
mov
scas
loop
pop
and
jg
leave
mov
push
aad
adc
mov
push
add
js
lock
cmp
gs
add
adc
and
jg
fxch
sbbb
out
ficoms
sub
daa
push
xchg
fwait
sub
ret
ja
roll
jg
shrb
fdivrl
inc
sub
push
movsb
push
sbb
imul
aaa
xor
in
mov
pop
or
jne
cmp
mov
sub
jb
sbb
xor
jno
lea
mov
push
mov
xorb
dec
fxch
xor
in
std
mov
dec
push
dec
pop
mov
pop
jae
shlb
pop
lock
mov
loopne
sub
and
aas
and
mov
and
fs
test
sub
xchg
push
sbb
in
aaa
mov
stos
rcrl
int
pop
mov
inc
sahf
jno
inc
pop
imul
cmp
mov
and
cmp
jl
jbe
jge
in
scas
pop
mov
push
test
popa
jl
xchg
push
add
enter
inc
sub
jmp
scas
mov
mov
in
sub
cmpsb
mov
dec
cmp
movsb
lock
gs
arpl
add
mov
ds
inc
pushf
movsb
data16
ds
and
daa
cmp
mov
sbb
cmp
int
das
dec
icebp
sbb
and
in
out
mov
jp
add
test
mov
cltd
pushf
ret
jge
roll
aad
in
repz
in
adc
js
out
mov
bound
fsts
jge
and
and
lahf
pop
cmpsl
lahf
rorl
call
xor
push
aaa
loope
push
sub
inc
das
repnz
jnp
sub
repz
shll
pop
mov
je
loopne
fisubrl
jp
jl
hlt
scas
adc
enter
dec
jecxz
fidivl
mov
and
pop
in
or
mov
push
in
cmp
in
in
loopne
data16
cmpsl
push
xor
sbb
xchg
jo
cmp
rclb
jmp
arpl
ljmp
fisubrl
insb
lds
imul
in
out
push
jno
xor
popf
pop
pushf
test
jbe
cmpl
aam
jno
push
ss
insb
sbb
inc
cmp
sbb
les
dec
cwtl
sub
gs
pop
jno
cltd
popa
mov
fimuls
xor
mov
sahf
in
daa
xor
dec
bound
add
jo
pop
mov
test
jae
scas
xor
mov
or
js
pop
gs
mov
xchg
jge
jl
xchg
sbb
adc
pop
jle
dec
xor
push
mov
xchg
sub
pop
xlat
mov
xchg
mov
test
pop
cmc
push
mov
imulb
int3
mov
addr16
pop
mov
pop
icebp
dec
dec
das
or
add
out
decb
xchg
popf
xor
pusha
aad
pop
xchg
orl
mov
pop
jnp
and
mov
push
cli
pop
ret
lahf
add
cmp
pop
push
mov
jno
mov
das
jmp
mov
adc
cmpsl
loopne
int
in
jge
xlat
out
pop
aam
ljmp
pop
lods
push
mov
arpl
test
cltd
and
mov
loope
mov
jbe
fldenv
dec
xor
xchg
or
pusha
stc
mov
lcall
cmpsb
jmp
aam
orb
sbb
pop
xor
push
movsb
lret
push
fistpl
rol
xchg
mov
and
pop
std
jg
add
int3
cmp
rorb
imul
add
jle
mov
jle
jae
push
ds
dec
dec
xchg
test
stc
pusha
adc
rclb
add
movsl
sbb
jl
xchg
leave
sub
dec
fs
pop
and
add
fisubrs
orl
leave
jge
jg
fwait
cmpsb
cmp
sti
adc
pop
sbb
nop
dec
aas
sbb
repnz
adcb
ljmp
repz
fistpl
cs
mov
dec
pop
mov
cltd
sar
sbb
test
adc
test
jb
rcr
inc
lcall
popf
lahf
and
jge
sbb
cmp
dec
nop
test
xchg
cmp
pop
jne
jns
xchg
ret
inc
int
aaa
jge
xchg
mov
mov
xor
xchg
call
out
ja
imul
mov
out
call
mov
mov
mov
ja
fists
pop
int
shlb
fsubs
fnstenv
bnd
xor
jo
sbb
aas
das
rorl
insb
inc
es
or
pop
and
imul
or
mov
fdivs
stos
adc
fnstcw
mov
mov
mov
jo
add
or
or
shlb
sbb
jne
dec
sub
mov
stos
pop
movsb
fstpl
inc
jns
add
inc
push
nop
sub
push
xor
popf
sahf
add
pop
dec
and
and
nop
sbb
pop
sub
adc
out
aad
and
pop
mov
mov
xchg
and
outsb
push
xor
mov
and
in
in
test
sbb
andb
mov
mov
mov
pop
mov
movsl
loop
in
sub
cld
test
iret
insb
jmp
jno
or
sbb
add
add
lock
inc
or
add
mov
and
and
pop
push
dec
or
mov
pop
out
cltd
or
stos
nop
adc
bound
fxam
dec
cmove
pop
jl
mov
imul
out
or
cmc
inc
out
cs
mov
mov
js
xchg
aas
jbe
ret
xchg
push
out
int3
add
xchg
jmp
hlt
adc
add
mov
pushf
movsb
jb
xchg
int
mov
adc
aaa
mov
sahf
pop
hlt
pop
cwtl
repz
movsb
pop
mov
rol
xchg
xchg
mov
call
shrb
lods
push
push
loop
dec
dec
popf
and
sahf
cmpsb
push
sub
outsb
in
jns
cmp
movsl
xor
xchg
inc
xchg
shl
mov
dec
mov
xor
pop
mov
pop
call
cmp
or
test
outsl
lcall
pop
scas
or
push
fisubrl
sti
imul
fidivrl
mulb
fdivrl
mov
mov
pop
mov
mulb
or
jns
lret
clc
andl
push
mov
mov
or
rcl
xchg
mov
inc
push
push
mov
mov
loopne
cwtl
cmpsb
or
ret
loop
in
mov
out
daa
jle
repnz
test
ljmp
fcmovnu
xchg
ret
in
daa
cmp
jae
push
imul
adc
dec
mov
mov
dec
or
arpl
ret
in
jmp
jae
jnp
fsubrl
sbb
mov
inc
gs
inc
mov
cmp
scas
pop
mov
push
add
leave
inc
decl
push
fisttpl
neg
push
stos
arpl
mov
jge
mov
mov
addr16
sbb
dec
das
inc
ljmp
movsl
mov
outsb
pop
pop
sbb
adc
cli
ljmp
cmp
std
rolb
cmp
adc
leave
mov
mov
xor
movsl
scas
jns
cwtl
and
dec
aas
addb
sub
or
outsb
setne
arpl
jp
xor
inc
adc
jnp
xchg
push
pusha
mov
pusha
sbb
jne
mov
cli
or
mov
xor
sub
decl
or
jp
in
lock
push
loopne
mov
adc
lahf
repz
push
fsubs
stos
orl
lods
add
lods
insl
ror
adc
xchg
enter
mov
inc
push
mov
inc
cmp
jmp
jp
orl
dec
cmp
or
xchg
cmpb
fs
mov
pop
and
loopne
dec
push
jmp
pop
je
jl
call
loop
xchg
bound
sub
ds
cmp
shrl
push
dec
daa
pop
add
imul
je
fwait
inc
xchg
pop
ds
lret
mov
jne
jbe
add
or
dec
cmp
pop
xor
fstps
shrb
add
in
mov
sbb
aaa
into
inc
inc
cmc
cmp
sbb
and
shlw
popa
sub
inc
popa
mov
lcall
insl
xchg
pop
scas
or
cld
lcall
or
sub
mov
mov
orl
in
sarl
pop
shr
fcoms
pop
inc
mov
sbb
dec
stos
jb
mov
nop
adc
sahf
pop
fildl
cld
inc
fstpl
sub
test
push
pop
pop
xchg
jb
popa
add
add
leave
lods
sbb
pop
adc
cwtl
lods
dec
imul
xchg
ret
inc
inc
push
lret
gs
aaa
jne
js
lds
lret
dec
pop
ds
mov
jecxz
jmp
sub
mov
and
adc
jg
push
mov
ljmp
jmp
ljmp
mov
inc
mov
mov
inc
rcl
pop
pop
fxch
rorb
in
mov
add
xchg
test
cmp
cmp
or
sbb
mov
arpl
xchg
rcll
jge
mov
int3
in
ljmp
hlt
add
mov
xor
outsl
arpl
je
push
lods
adc
adc
jno
ficomps
outsl
cmpsl
mov
cli
mov
cmpsb
jbe
inc
mov
lods
cmpsb
leave
and
jl
push
adc
pop
gs
cmp
insl
pop
imul
sbb
fiadds
leave
js
xor
jno
sbb
out
push
ss
fcomp
nop
ret
sbbb
add
cld
in
in
outsb
stos
lcall
push
jae
lcall
stos
adc
jns
aas
adc
and
popa
jmp
and
jae
push
aam
sub
xchg
sbb
dec
lcall
leave
add
xor
lcall
and
add
js
cli
imul
jle
rolb
jno
cmp
pop
orl
and
inc
aas
adc
pop
stc
cld
imul
nop
sub
test
pop
mov
inc
pop
scas
mov
inc
icebp
dec
repz
mov
mov
push
sar
mov
mov
loop
test
int
sbb
mov
push
push
jns
cmpb
inc
shlb
add
sbb
and
and
jno
out
or
ja
daa
stos
xorb
sti
movsl
xorb
sub
adc
in
xor
fsubrs
mov
or
sti
adc
jg
jno
ds
loope
dec
arpl
mov
inc
cmp
jl
loope
out
cwtl
es
xor
sbb
jo
inc
push
sbb
mov
ds
mov
xchg
jge
jp
incl
mov
repnz
push
popf
xchg
js
mov
into
sahf
lcall
inc
or
dec
int
jle
addb
es
std
jbe
mov
xchg
jg
ds
xchg
mov
mov
ret
dec
outsb
push
ret
divl
fsubrs
mov
int
fidivrl
ds
jbe
pushf
mov
aam
adc
cld
mov
nop
jmp
stos
mov
mov
add
mov
data16
add
jbe
push
mov
sbb
fstpt
rcll
inc
imul
adc
int3
jge
push
adc
xor
push
inc
test
push
inc
xchg
popf
fisubl
inc
push
push
test
pop
inc
pop
inc
add
sub
arpl
lret
hlt
lahf
cmp
fcmovnu
rcrb
inc
adc
lock
pop
fsub
cmp
add
bound
pop
xchg
add
or
dec
sub
popf
aaa
pusha
add
mov
add
mov
cs
ja
pop
notl
xor
mov
dec
test
ret
jns
insb
mov
xor
inc
mov
mov
jae
ljmp
mov
mov
lds
and
mov
xor
sbb
into
js
ret
arpl
sub
scas
lock
mov
xor
sub
negl
push
ja
aam
lea
xor
push
daa
cmp
push
iret
jae
dec
sbbl
ljmp
cmp
repnz
jbe
imul
cmpl
inc
pop
sbb
es
fwait
shll
aaa
mov
mov
mov
lock
js
movsl
popa
mov
pop
pusha
dec
fs
pop
lock
testb
out
inc
in
cld
pop
movsb
sahf
inc
sbb
data16
push
mov
add
cwtl
pop
je
sub
ds
popf
icebp
pop
xor
add
stc
cwtl
aam
cmp
loopne
adc
ljmp
adc
movsl
or
mov
repz
stc
pusha
sub
lahf
sbb
jbe
cmpsl
mov
inc
insb
orb
add
movsb
iret
fistpll
imull
loope
out
mov
aas
test
inc
nop
mov
imul
xchg
fistpl
push
pop
dec
out
mov
les
inc
aas
inc
jnp
hlt
dec
sahf
cmc
sub
mov
loope
or
push
push
mov
inc
bound
call
mov
mov
int
dec
das
leave
pop
ss
xor
stos
shrb
je
adc
andps
fcomi
and
pop
xor
stos
mov
add
push
add
fincstp
adc
xchg
push
or
outsb
lods
bound
mov
push
inc
in
adc
xchg
adc
test
xchg
movsb
sub
adc
movsl
inc
adc
mov
mov
mov
jno
clc
shl
cs
sub
xchg
inc
pusha
mov
inc
cli
pop
leave
mov
pop
sub
cmpsb
mov
movsl
pop
stc
dec
lods
sub
divb
dec
lods
test
pop
cmp
or
cmp
aad
and
ret
sub
stos
loopne
repnz
hlt
repnz
or
mov
hlt
xchg
clc
dec
test
mov
nop
rcl
mov
mov
insb
push
mov
sarb
insb
lea
shlb
dec
scas
inc
sbb
icebp
push
mov
pop
adc
pop
adc
fisubrs
cmpsl
push
lock
or
insl
inc
sub
adcl
mov
arpl
sbb
and
aad
scas
call
mov
js
xor
out
psadbw
in
fists
add
mov
mov
add
ficoml
jne
shlb
mov
mov
adc
popa
dec
insb
scas
xor
mov
in
mov
mov
mov
push
loopne
lods
je
hlt
push
and
pop
push
adc
cmpsl
push
enter
xchg
add
pop
cmc
add
sti
repz
rcrb
fwait
ljmp
xor
and
add
xor
mov
stc
lret
dec
test
adc
jge
sbb
or
stos
icebp
test
sub
shlb
sbb
movl
mov
nop
or
xlat
cltd
push
repz
mov
stos
adc
inc
mov
xor
dec
pop
gs
and
push
push
cmp
ret
push
push
adc
add
jnp
pushf
flds
add
insb
fxch
ljmp
cli
leave
xchg
and
mov
stos
sub
mov
push
sbb
ret
sub
mov
push
pop
sbb
test
or
add
loop
mov
fidivl
or
aaa
dec
pop
cmp
xchg
pmuludq
push
popf
test
sub
addr16
xor
dec
add
js
aad
inc
or
push
test
insb
jo
sub
and
xchg
subb
loop
mov
jg
mov
adc
hlt
inc
sarl
js
call
pop
mov
mov
xlat
mov
and
int3
lea
push
sub
ja
call
pop
mov
cmp
repnz
mov
mov
js
xchg
rol
ret
orb
pop
arpl
push
mov
jmp
loopne
sbb
sbb
jle
xor
out
in
push
jno
mov
mov
mov
andnps
negl
fsubl
aas
cmp
leave
aas
data16
daa
insb
or
pop
imul
adc
aaa
js
pushf
jo
jno
push
outsb
pop
mov
out
fwait
mov
add
in
inc
icebp
fsts
push
lods
cmp
icebp
sti
cmp
mov
insb
loop
mov
rcr
shll
pop
test
lock
sub
xchg
in
scas
jecxz
mov
jo
xchg
pop
xchg
cmp
push
gs
sub
xchg
xchg
shl
push
js
mov
cld
mov
mov
popf
out
es
sbb
or
or
xor
push
lods
mov
repnz
pminsw
cs
and
pop
sub
dec
add
sbb
int3
cli
adc
cs
aad
fwait
dec
mov
loope
add
ret
clc
andb
sub
movsb
xor
daa
mov
inc
or
adc
enter
fwait
add
movsb
pop
ret
lds
mov
add
xor
dec
mul
movsl
lret
enter
mov
icebp
mov
xchg
xchg
cmp
mov
call
loope
cwtl
mov
push
or
insl
and
cmp
push
mov
pop
movsb
bound
bound
jo
sbb
xor
std
or
repnz
add
rorb
nop
jl
xor
in
mov
cltd
or
sahf
sbb
lret
and
loope
and
outsl
jo
loopne
sbb
sahf
mov
push
sub
xchg
ljmp
mov
xchg
fldl
out
or
nop
sub
out
mov
jl
in
or
mov
hlt
sub
outsl
xorl
or
adc
ret
mov
and
jno
addl
mov
jp
popa
push
add
out
or
jecxz
or
cmp
pop
rorl
in
sarl
in
dec
jp
cmp
dec
dec
into
push
psllq
testl
sbb
jae
mov
dec
push
pop
xchg
sbb
mov
inc
in
ret
lcall
mov
inc
arpl
push
xor
mov
inc
in
dec
jb
lret
xchg
xchg
inc
push
daa
cltd
inc
jecxz
scas
call
and
mov
jmp
insb
jecxz
add
push
daa
call
fmul
cmp
fsubr
dec
aad
push
sub
inc
push
out
enter
dec
loop
mov
data16
lea
sbb
mov
adc
push
js
push
xchg
roll
shlb
mov
sahf
xor
lret
lods
pop
gs
xor
fcomps
testl
cmp
loopew
fstpl
inc
xor
shrb
xchg
je
mov
push
xchg
jae
mov
pop
dec
sbb
mov
incl
cmp
sub
jb
jne
inc
adc
mov
js
mov
addr16
sub
ficompl
jle
mov
sub
push
rclb
inc
sub
jle
orb
mov
xchg
jb
sub
push
xchg
jb
inc
testb
stc
inc
insb
mov
out
stc
mov
jb
movsl
fiadds
pop
adc
aam
fwait
insb
inc
sahf
lret
mov
pop
push
movl
lods
aaa
pop
insl
sldt
xchg
in
subb
mov
xchg
dec
clc
mov
dec
mov
ljmp
test
xchg
lock
add
jne
dec
mov
addr16
mov
mov
mov
push
sub
or
pushf
xor
ljmp
xchg
cltd
mov
cmpsb
mov
movsb
xchg
sahf
ret
xchg
jno
shll
xchg
xchg
xlat
xor
mov
add
cmc
aam
xchg
jmp
popa
fsqrt
in
sti
aas
sbb
clc
es
inc
jge
addr16
jo
adcl
sbb
pusha
cmpl
pop
sub
push
aam
add
pop
xchg
lcall
cmpb
ss
cmp
dec
push
pop
xor
ja
adc
in
mov
dec
outsl
lods
dec
popf
push
mov
cmp
xchg
jns
inc
pop
into
outsb
pushf
mov
push
pop
std
jo
or
jl
cwtl
lods
and
mov
sbb
or
outsl
mov
mov
aas
mov
addr16
add
rolb
sbb
addr16
outsl
adc
jno
sarb
sub
and
or
mov
or
jnp
aam
pop
int3
cmp
int
insl
mov
ret
xor
push
or
add
ja
repz
fstpt
gs
cwtl
xor
daa
xchg
outsl
je
das
les
push
mov
movsl
imul
inc
lcall
adc
int3
test
push
outsl
addr16
lods
cltd
js
cmc
or
push
mov
xlat
xor
rol
push
cld
jno
cmc
sbb
or
mov
mulb
pop
jns
sbb
sub
cmc
and
neg
stc
jp
mov
out
insl
cs
push
cwtl
add
mov
push
bound
jnp
ret
pop
sbb
cli
addl
lods
imul
pop
push
lds
xchg
insb
jns
lock
insb
pop
pop
mov
jecxz
pop
jae
icebp
enter
mov
push
icebp
cwtl
ljmp
mov
lahf
or
aas
aas
movsb
jne
xor
add
mov
aad
jno
add
mov
in
xor
popa
stc
adc
in
imul
xchg
add
mov
sahf
outsl
loop
fsubs
hlt
dec
add
arpl
test
es
mov
add
loopne
loop
aas
mov
xor
jle
sahf
fidivrs
mov
dec
pusha
ss
popfw
daa
push
out
jg
dec
jle
loop
pop
fwait
inc
xchg
push
setns
nop
adc
ljmp
mov
sbb
inc
addr16
sbb
imul
mul
xor
enter
pop
mov
fcompl
mov
sti
mov
hlt
mov
stos
add
xlat
ret
cltd
fnstcw
int3
inc
call
mov
mov
or
add
xchg
push
cmp
dec
leave
stc
cmc
decl
sub
push
mov
xchg
mov
mov
mov
inc
out
test
push
lds
xchg
jb
adc
testb
test
mov
xor
push
stos
pusha
add
jmp
imul
pop
sarb
ja
stc
sub
daa
push
in
mov
or
insl
jbe
sub
sub
popf
push
push
dec
ficomps
sbb
dec
cltd
js
mov
lds
push
rol
icebp
mov
icebp
cmp
nop
aaa
or
xchg
xor
lds
imul
and
insl
mov
mov
in
adc
pushf
dec
lretw
jne
xchg
dec
xchg
rolb
inc
mov
xchg
bound
inc
ja
shrl
aam
pop
insl
sub
lret
cmp
cli
aaa
in
insb
les
mov
pop
push
hlt
pop
jbe
mov
push
lods
iret
cmp
loop
mov
mov
addl
push
adc
test
inc
js
lock
jle
icebp
das
dec
imul
add
jno
stc
jmp
cmp
fisttpll
sbb
lods
ret
test
lods
aas
sbb
sub
fmulp
pop
push
inc
addr16
push
fsts
or
and
in
push
cmp
push
jae
xchg
xor
adc
cmpsb
xchg
jle
lods
sub
in
jmp
jecxz
scas
out
dec
push
inc
mov
movsb
gs
push
sub
icebp
mov
adc
cmp
aas
push
dec
mov
test
mov
orl
push
sub
add
cltd
or
push
inc
inc
jle
stos
dec
sbb
push
sahf
jg
nop
lret
movsb
mov
enter
sbb
cwtl
in
mov
insl
jle
or
mov
sahf
jb
sahf
xchg
repnz
ja
cmovbe
cmp
add
mov
mov
jo
fcmovne
testl
mov
mov
inc
lret
jg
aad
add
pop
hlt
js
dec
cmpsl
mov
outsb
add
int
mov
popa
loop
imul
or
lock
in
mov
xor
js
popa
or
or
fimuls
pop
adc
adc
cltd
xlat
lret
sbb
mov
clc
pop
std
cmpsb
or
adc
jl
es
adc
jo
fistpl
jl
movsl
cltd
jp
add
xchg
xor
xor
mov
repz
xor
jbe
inc
sbb
push
inc
or
mov
sub
into
mov
sahf
xor
adc
scas
ds
xor
ret
sahf
js
lcall
sub
pop
rol
loop
test
cmp
scas
fsubr
movsl
dec
mov
dec
dec
fcompl
lcall
adc
roll
push
scas
sub
sahf
mov
imul
or
aaa
inc
aam
mov
loop
scas
and
push
jg
dec
or
arpl
pop
xor
add
xchg
cmp
add
aad
out
cmp
mov
fldcw
mov
jp
sbb
lahf
lret
cmp
or
mov
clc
or
mov
pop
stc
cli
push
adcb
pop
out
jns
xor
dec
sbb
pop
adc
out
add
and
mov
mov
and
adc
mov
daa
lock
mov
ret
aad
lahf
add
cmp
xchg
xchg
mov
nop
fucom
xchg
test
xchg
pop
mov
shlb
xchg
pop
hlt
push
sub
int
fsub
inc
aad
xchg
cmc
sahf
sub
or
scas
imul
cmp
nop
and
jne
push
jecxz
adc
test
mov
jne
stos
pop
shlb
cs
inc
push
adc
inc
mov
testl
adc
sub
lods
and
pop
xor
mov
mov
test
xor
cmp
scas
pop
xchg
gs
popa
push
lock
sahf
push
mov
je
cltd
mov
test
cs
dec
and
imull
adc
dec
repz
sbb
fldt
test
xchg
mov
subl
cmpsb
lds
adc
xchg
inc
and
andb
push
orb
enter
push
lret
fildl
stos
mov
xor
inc
dec
jmp
in
push
popf
dec
bswap
outsb
rol
mov
test
and
ss
fsub
cmpsb
dec
or
jne
xchg
xchg
jle
lahf
and
nop
imul
dec
cmp
xor
lock
add
inc
inc
lods
inc
xorl
lock
mov
pop
mov
out
pop
xchg
je
mov
cli
mov
mov
scas
je
push
mov
fs
in
jns
and
loopne
mov
xlat
push
lods
mov
icebp
insb
int
nop
xor
mov
mov
push
xor
ret
inc
insb
xchg
or
push
dec
sbb
movsb
in
pop
push
sahf
inc
imul
add
js
out
pop
movsl
shrb
out
lret
or
sbb
es
sub
jp
mov
std
insl
push
adc
int
sub
mov
iret
sbb
and
jae
or
and
xchg
xchg
es
mov
inc
xor
nop
inc
psllq
jmp
sbb
sub
and
scas
jmp
mov
das
ja
push
xchg
insb
add
xchg
aas
mov
sbb
cmp
repnz
popa
andb
or
cmp
mov
je
push
fiaddl
imul
loope
pushf
ret
jp
and
inc
push
push
jmp
sbb
add
add
mov
aam
mov
jae
mov
lds
inc
ja
pop
fdivl
add
ss
ret
xor
sbb
dec
inc
jnp
icebp
pop
call
and
mov
ljmp
fimuls
fdivl
into
add
gs
mov
jo
dec
addr16
pushf
sbb
dec
in
mov
jb
imul
adc
fmuls
test
test
roll
aaa
test
xchg
mov
push
xchg
in
xchg
jne
mov
mov
mov
mov
or
push
ss
add
xchg
mov
aas
negb
bound
mov
mov
inc
sbb
pop
scas
mov
push
pop
mull
lods
out
cmp
out
lahf
xchg
sahf
add
mov
and
add
adc
loopne
dec
inc
xor
jp
mov
mov
xchg
sub
mov
dec
sub
push
xchg
imul
add
push
in
fs
add
sub
jae
add
mov
test
and
gs
repnz
pop
xor
ljmp
or
dec
inc
cmp
fsub
cltd
xor
fldl
int
das
sbb
add
sbb
lret
repz
aaa
movsl
lcall
cs
aad
adcl
and
out
mov
pop
stc
insl
mov
adcb
jb
jg
test
mov
sbb
lfs
xor
iret
loopne
testb
jno
addr16
dec
out
add
sbb
xchg
je
mov
pop
rorb
cmp
mov
pusha
cmp
out
mov
xchg
mov
loop
outsb
sbb
dec
test
fcmovne
cs
shl
mov
push
mov
enter
pop
mov
cmp
sbb
cmpsb
fsubl
pop
loopne
sub
insl
dec
ss
stos
push
jo
out
push
push
sahf
movsb
lds
xor
fnsave
mov
xor
push
jae
jmp
inc
xchg
repnz
insb
and
adc
cmp
mov
aam
mov
neg
dec
insl
stos
cli
into
inc
ss
arpl
fadd
xchg
pushf
add
popa
xor
mov
mov
inc
loop
bound
push
shll
int3
fiadds
inc
mov
inc
and
mov
fidivrl
xchg
mov
jo
in
shrl
punpcklwd
add
aas
pop
movsb
subl
jle
pop
or
mov
dec
jecxz
push
out
lret
call
mov
xorb
lcall
enter
jns
cmp
add
dec
cmc
mov
outsb
cld
xchg
test
mov
fbstp
inc
lods
pop
push
sbb
adc
rcrb
sti
pop
and
mov
daa
les
inc
push
inc
xor
aaa
jno
sar
fbld
in
jo
in
add
movsl
jge
adc
and
inc
push
pop
fiadds
jne
es
sub
xor
daa
cmp
test
jp
jbe
xchg
loopne
test
dec
scas
xlat
mov
out
lock
sub
mov
cmpsb
jge
imul
imul
test
and
stc
mov
dec
pop
arpl
mov
rorl
cld
stos
fwait
mov
jb
hlt
mov
and
and
lahf
jbe
test
insb
in
and
mov
jnp
and
mov
mov
iret
subl
jmp
sti
aaa
lea
dec
adc
sub
test
mov
jnp
arpl
inc
jle
push
mov
ret
dec
inc
mov
test
cmp
push
pop
dec
mov
out
in
arpl
addb
adc
xchg
lock
jl
add
hlt
jge
xchg
call
cs
xchg
das
sbb
cmp
mov
cmp
and
sbb
lahf
xchg
cmp
push
sub
xchg
mov
add
lret
sub
cltd
cmp
xchg
lods
and
mov
dec
dec
push
inc
cmpsl
mov
xor
mov
bound
test
inc
jae
dec
push
call
outsl
cmpb
fidivl
ss
fadds
add
push
and
mov
xor
cmp
loopne
cmpsl
enter
and
or
sbb
pop
jae
mov
loopne
movsb
iret
and
push
or
xchg
xchg
mov
pop
icebp
fs
out
mov
imul
jbe
or
lahf
xchg
inc
xor
shrl
xchg
shlb
mov
int3
jns
nop
mov
leave
mov
mov
push
mov
inc
jp
outsl
jge
jno
push
sbb
push
stc
or
inc
mov
das
or
or
cs
repnz
fcmovnb
push
adc
inc
push
add
dec
mov
mov
add
popa
pop
cmpsl
stos
jmp
movsb
pop
mov
aas
cld
or
in
jno
sbb
sbb
insb
mov
fdivs
imul
jnp
jl
push
sub
repnz
inc
cli
mov
cli
xor
aaa
mov
mov
std
adc
jo
mov
mov
pop
cmpl
mov
out
dec
inc
or
mov
mov
pop
add
dec
cmp
es
mov
lcall
fdivrs
mov
push
mov
dec
leave
fwait
cbtw
test
push
push
int
aad
call
out
popf
jae
inc
xchg
popa
sbb
push
clc
push
pop
mov
add
stos
jp
and
mov
loop
in
fcompl
dec
sbb
xchg
fwait
fs
xchg
sub
lret
sbb
push
ljmp
xor
gs
cli
bound
jle
push
inc
addb
je
sahf
sbb
inc
push
in
inc
outsl
cmpsl
ja
push
iret
aas
jnp
sahf
scas
fildl
bound
leave
in
stos
adc
fwait
xor
outsb
xchg
lea
popa
and
or
xor
cs
fcomps
loopne
adc
cmp
sbb
in
and
out
sub
cltd
mov
push
movsl
gs
repnz
jae
dec
cmp
lret
xor
adcl
sub
jnp
lret
pushl
adc
sbb
or
push
fdivl
or
push
push
loop
cmp
mov
or
push
imul
mov
jno
add
mov
or
je
clc
adc
xchg
lods
sub
inc
scas
jmp
test
idivb
sub
adcl
xchg
pop
pop
jbe
and
push
push
jns
out
xor
sub
xchg
loopne
stos
cmp
mov
pop
push
cmp
in
lret
jmp
popw
stos
push
and
ljmp
push
jl
lods
cmp
pop
cmp
jge
xor
inc
aaa
xchg
lahf
pop
stos
sub
or
outsl
dec
xlat
movsb
shl
gs
popa
mov
push
xor
stos
js
cmp
push
mov
std
ljmp
mov
hlt
pop
mov
cmpsl
pushf
cli
push
jo
jl
xor
xor
cmp
aam
push
add
lret
adc
sbb
pop
add
push
xor
bound
jg
mov
xlat
mov
int3
notl
mov
pop
jae
lahf
mov
xor
fdivs
imul
outsl
lea
or
test
push
xchg
sub
popa
sbb
dec
mov
adc
xchg
sbb
lock
jns
lea
int
sbb
test
push
fstps
or
stos
lahf
mov
out
jl
int
jle
inc
out
sahf
inc
adc
xchg
xchg
push
sub
xchg
addr16
inc
xor
dec
icebp
pushf
daa
loope
imul
inc
push
adc
pushf
repnz
scas
mov
cmp
and
inc
push
rorb
pop
cmp
mov
dec
dec
push
inc
and
add
push
cmpb
sbb
aam
fidivl
cs
es
aas
sub
dec
ret
cmc
stos
fcoms
jno
add
les
and
in
xor
cwtl
jo
cmp
sbb
enter
loop
xchg
and
clc
jnp
and
sahf
andl
fcomps
pop
lds
sub
shll
dec
xor
subl
fsubrl
stos
pusha
inc
xchg
adc
mov
lcall
xchg
xor
jb
mov
xchg
xchg
repnz
push
std
je
sub
mov
xor
popf
and
dec
rcll
cmp
out
loop
lret
dec
ret
cmpsl
push
push
dec
out
pusha
ds
xchg
xchg
mov
jmp
stos
movsl
mov
sub
aas
inc
pop
jnp
mov
pop
sub
sub
xchg
push
mov
mov
lret
ficoml
xchg
gs
mov
push
sahf
push
or
call
lds
stos
pop
mov
lea
add
int
jo
push
mov
push
sbb
mov
dec
cld
xchg
sbb
loope
xchg
ret
stc
xchg
push
movsb
shr
and
lcall
mov
scas
pushf
jg
cmp
fistps
mov
xchg
xchg
mov
testl
aad
cld
xor
adc
xchg
sub
mov
sub
push
decb
jnp
cmp
fwait
imull
push
decl
lock
push
out
jnp
push
push
mov
pop
ljmp
repz
and
outsl
mov
mov
stos
rolb
inc
movntq
mov
mov
sub
bound
xchg
lods
test
es
sti
jns
push
and
adc
ret
fldt
xor
mov
xchg
in
dec
xchg
dec
cmp
popa
push
daa
pop
push
lahf
mov
xchg
xchg
mov
ss
mov
aam
push
mov
adc
inc
push
fs
roll
lds
or
add
adc
lock
lock
jno
repz
xor
xchg
iret
jns
and
stos
sbbl
adc
add
mov
inc
sub
iret
popa
int3
leave
add
and
dec
clc
jns
lods
imul
insb
xor
mov
sub
arpl
aam
xlat
inc
aam
mov
icebp
popf
inc
mov
push
pop
loop
xchg
mov
popf
fcoms
outsb
cltd
pop
jle
pop
pop
lea
and
stc
push
sbb
mov
and
das
loop
hlt
mov
inc
stc
mov
or
pop
push
pusha
push
in
ds
jo
cmp
jle
dec
pop
jp
dec
lods
push
push
and
mov
in
lahf
scas
xchg
xlat
dec
sub
outsl
fwait
movsb
cmpsl
inc
or
inc
loopne
arpl
decl
cmp
repnz
shll
ljmp
jb
sbb
popf
xor
and
mov
add
push
and
daa
mov
negl
inc
out
dec
xchg
in
sahf
aam
incl
pop
pop
test
call
mov
xchg
cmc
lahf
pop
or
es
imul
xchg
mulb
mulb
lock
int3
test
lret
sub
jno
jmp
mov
mov
add
in
lcall
mov
dec
and
jge
sub
jo
or
xchg
inc
dec
dec
mov
cmp
inc
or
or
and
loope
adc
imul
push
pop
scas
int
mov
nop
imul
mov
inc
mov
pop
stos
or
les
jg
loopne
test
pop
lock
fs
aam
in
mov
sbb
cmc
bound
cmpsb
cmpb
sarl
ds
push
adc
pushf
jmp
dec
lods
enter
sub
inc
movsl
xchg
sbb
bound
ret
and
sarl
pop
ds
rol
out
stc
lock
xchg
push
decb
xchg
sahf
pop
inc
pusha
sub
mov
inc
xor
and
xor
push
bound
and
insl
sub
cld
jle
rcrb
mov
sub
cmp
rcll
xlat
adc
xor
insl
loop
adc
fcompl
movsb
mov
xchg
test
outsl
cli
mov
mov
sbb
insl
jmp
std
out
nop
les
repnz
dec
nop
dec
mov
fidivs
in
popa
sbb
pop
fists
jecxz
pop
xor
and
les
out
cmc
stos
or
sbb
mov
lds
inc
out
mov
jns
mov
dec
aaa
aam
pop
and
repnz
scas
inc
dec
lods
mov
cltd
cmpsb
ret
mov
je
iret
lcall
xor
push
mov
jecxz
mov
lods
dec
fwait
int3
lds
lret
push
test
shrb
mov
or
and
call
shll
insl
stos
addr16
pop
roll
mov
or
jae
imul
push
cld
rorb
and
clc
xorl
sbb
push
sub
pusha
mov
push
das
in
ja
push
lcall
adc
jp
shlb
mov
push
cwtl
jl
sub
sahf
lds
adc
daa
sub
sarl
ss
test
fsts
push
lods
pushf
cmp
xchg
xor
int
mov
sbb
jno
push
bound
sahf
loope
push
cmpsb
aad
push
push
stc
jecxz
jp
clc
and
out
mov
mov
flds
jo
dec
lock
jno
xchg
scas
sbb
repnz
in
in
xor
mov
int
mov
test
adc
test
push
mov
in
stc
pop
and
add
adc
inc
fs
inc
push
scas
das
jns
push
std
xchg
hlt
push
mov
xor
lret
xchg
les
cmp
pop
jg
fdivrs
push
ss
fwait
sahf
xchg
fldt
inc
add
mov
jo
pop
ret
lret
cwtl
iret
inc
stos
push
pop
mov
inc
cwtl
mov
add
inc
icebp
lret
sub
sub
pusha
sub
xor
test
mov
std
push
push
popa
xchg
stos
xchg
jnp
mov
int3
cld
sub
jae
and
sbb
into
insb
xchg
out
arpl
fs
pop
test
pop
push
and
cmp
out
inc
int3
popa
cmp
mov
es
xlat
stos
orb
ret
pop
mov
sbb
mov
xchg
add
mov
aas
sbb
mov
sbb
into
lret
subb
cli
fmuls
shll
or
mov
mov
inc
adc
test
mov
pusha
ja
sub
das
xchg
xchg
lret
aaa
push
lahf
mov
cmp
mov
addb
subl
pop
addr16
insb
inc
cmp
pop
inc
mov
sbb
lods
pushf
insl
mov
jp
mov
sbb
or
jge
gs
push
inc
lods
sub
divl
jnp
mov
pusha
shlb
add
les
fwait
test
xor
inc
outsb
out
popa
mov
fmul
jae
stc
jle
sti
push
rorl
inc
lcall
ljmp
fcomi
ret
xchg
daa
inc
rcr
rcr
sub
cmpsb
shl
cwtl
aaa
lahf
in
lahf
sbb
repz
cltd
or
sti
jmp
ja
pop
iret
fwait
cmp
lock
adc
pop
test
outsb
es
pop
fcmovnbe
mov
jnp
or
data16
fstl
andb
das
fidivrs
cmp
dec
adc
loopne
fdivl
shr
inc
push
cmp
aam
jb
push
repz
adc
xchg
fs
mov
outsb
dec
xchg
mov
cltd
jae
or
add
dec
sbb
mov
cmp
out
and
sbb
sub
es
ja
and
lret
scas
ss
mov
movsb
lahf
xor
dec
xor
sub
dec
repnz
lock
jmp
mov
push
fisubrl
popf
cmp
push
call
lret
mov
pop
cwtl
xchg
add
sub
inc
push
jns
in
test
andb
jo
xchg
bound
test
mov
add
orb
mov
push
sub
stos
mov
mov
push
fcmovbe
stos
adc
notl
xchg
lock
lock
xchg
outsb
sub
popf
cs
fsubrs
leave
repnz
test
mov
mov
add
xor
pop
leave
jb
push
inc
in
jno
insl
arpl
popf
jle
inc
or
dec
jmp
mov
pop
je
cltd
scas
sbb
cmp
subl
dec
jno
dec
hlt
mov
mov
leave
push
leave
jnp
cmp
mov
mov
cld
lahf
sub
leave
or
xchg
sub
mov
cmpsl
mov
into
cmp
jp,pn
push
mov
pop
jecxz
xchg
or
in
xor
adc
popa
add
andl
mov
push
insl
lods
mov
or
xchg
enter
lret
loope
imul
scas
ljmp
ret
jle
inc
aam
cli
dec
pop
imul
pop
int3
shlb
xor
js
test
xchg
sar
or
je
aad
aam
mov
rolb
push
lret
xchg
push
test
loopne
mov
sub
loopne
and
movsl
jb
cmpsl
insl
adc
or
stos
pop
mov
or
cld
adc
mov
cmpsl
popa
jae
popa
mov
aam
daa
jle
out
sub
xchg
mov
dec
push
push
and
pop
jg
ss
ljmp
push
icebp
mov
cmp
stc
or
sbb
pop
repnz
xchg
subb
loop
mov
outsb
cltd
lcall
mov
stos
jb
jo
rcrb
lret
les
fs
push
sbb
or
ds
mov
and
jg
jnp
mov
mov
sub
adc
faddl
arpl
test
les
inc
ja
xchg
inc
add
jno
out
stos
push
adc
and
push
xchg
add
xchg
rorb
out
mov
xchg
or
mov
dec
mov
jns
adc
out
scas
daa
fsubl
pop
cltd
imul
mov
pushf
pop
pusha
add
inc
jmp
mov
movsb
cmpsl
je
pop
xor
and
addr16
jo
cmp
addr16
cld
adc
cmc
inc
jecxz
push
imul
cld
pop
lock
mov
test
pop
fdivr
clc
leave
rcr
jb
jge
scas
pushf
inc
inc
inc
adc
jmp
clc
popf
out
rcl
mov
std
int3
cmp
lods
cmp
lret
push
stos
jecxz
sbb
in
mov
inc
or
push
insl
and
out
jle
and
inc
cmp
das
test
pop
mov
das
pop
je
push
repz
sbb
xchg
icebp
and
das
jge
adc
xor
cli
popf
add
test
or
sub
arpl
sub
test
pop
push
insb
push
pop
ficomps
movsl
adc
mov
daa
jbe
mov
pop
mov
xor
or
jbe
inc
cmpb
xor
mov
and
dec
or
out
push
cmp
mov
hlt
out
push
or
inc
adc
mov
or
mov
repnz
imul
aad
pop
repz
pop
xor
mov
inc
jg
js
adc
nop
out
adc
mov
popa
sbbb
aad
inc
aam
testl
push
fwait
pop
ss
mov
fstpt
dec
jbe
xchg
lods
lea
mov
xchg
cli
dec
mov
repz
xor
daa
sarb
mov
sbb
adc
and
mov
cmpsb
cli
shll
jno
mov
jg
xchg
popa
jmp
ja
pop
rolb
mov
sbb
dec
or
pop
push
ret
fdivrs
xor
push
cltd
sub
adcl
nop
push
imul
notb
call
xchg
jbe
je
mov
fidivrl
sbb
aad
cmp
fisubl
setb
addr16
fldt
dec
rcrl
mov
clc
xchg
pop
add
sbb
in
int3
ret
jnp
pop
push
mov
mov
popf
psubb
jnp
hlt
lret
dec
pop
jmp
int3
xor
push
test
mov
sbb
inc
aas
add
sub
leave
addr16
xchg
fildl
in
enter
pop
testb
popa
mov
ljmp
test
and
int
xchg
sub
mov
ret
lock
sbb
lcall
das
adc
push
movsb
xchg
push
iret
cmpl
nop
xor
mov
repnz
aaa
lods
adc
xchg
push
cmp
xor
mov
inc
aaa
pop
pop
jmp
icebp
in
cmpsl
mov
mov
xor
dec
sub
and
inc
jnp
sbb
inc
adc
or
call
sbb
mov
fiadds
aad
push
mov
mov
push
jbe
les
adc
aas
pushf
in
inc
cwtl
sbb
push
hlt
sahf
bound
mov
or
scas
stos
sbb
test
and
data16
mov
inc
or
cltd
insl
xor
fildl
stos
ret
fistps
test
addr16
or
jno
xchg
pop
jno
mov
xchg
jns
js
lods
and
popa
popa
and
sub
stos
and
push
fldt
pop
cmp
mov
cmp
sub
aaa
sbb
jmp
outsb
les
mov
fdivs
inc
push
enter
test
xchg
or
inc
pushf
add
push
gs
mov
jp
arpl
add
push
decb
mov
sahf
pop
cmp
shrb
shlb
popa
and
test
icebp
out
xchg
adc
fcomip
adc
xchg
mov
andb
mov
mov
movsl
pushf
add
jmp
pop
shll
subb
jmp
add
mov
mov
xchg
sahf
cld
lods
dec
xor
push
lahf
dec
or
rorl
popf
xorl
repnz
inc
sbb
in
jb
sub
cmp
scas
icebp
cmp
jp
clc
sub
stc
lret
loop
mov
in
fwait
add
xor
dec
ds
lret
dec
jno
clc
les
fcoms
mov
or
inc
arpl
and
pop
jg
lcall
imulb
test
sub
std
sbb
fs
stos
divl
push
fsubrp
or
adc
xchg
push
jmp
sub
test
in
jnp
cmp
xchg
jle
mov
lea
push
sub
sub
jp
repz
sub
cs
sbb
xchg
fnstsw
and
in
pop
arpl
xchg
jmp
and
fists
sbb
test
jge
cmp
cmp
arpl
test
out
jecxz
imul
andl
mov
sub
sbb
rcrb
out
insl
and
add
ljmp
lds
aad
dec
mov
inc
jp
cmpsb
sbb
and
cltd
bts
jns
fwait
sub
lahf
xor
in
mov
or
push
inc
loope
add
pop
mov
lods
push
dec
and
jbe
add
ja
xchg
cmp
insl
add
jb
in
aad
fildl
mov
inc
mov
sti
xchg
hlt
adc
sub
mov
jo
mov
push
sub
int
push
clc
insl
out
mov
rcll
inc
stc
shl
xchg
xchg
data16
sub
pusha
lcall
push
mov
outsb
cmpsb
push
jl
mov
fsubrs
inc
xlat
ja
push
mov
div
rcrb
add
outsl
nop
or
push
stos
jle
xor
cld
pop
mov
ffreep
movsb
cmpb
xlat
nop
dec
aas
lcall
test
out
fdivrl
lds
popl
and
inc
adc
adc
mov
xchg
and
jle
pop
push
cmp
mov
call
out
jg
scas
lds
sarb
and
pop
shl
in
cmp
cmpsb
add
cmp
aas
movsl
dec
sbb
mov
ljmp
xor
adc
jne
dec
in
lock
repz
mov
xor
popa
sbb
jecxz
xor
sbb
jle
stc
mov
and
push
xlat
sahf
cmp
mov
mov
ror
xchg
data16
jl
add
clc
test
stos
mov
and
es
jmp
and
push
add
add
repnz
in
shll
out
xor
cli
insl
out
je
lcall
and
outsb
or
test
outsb
scas
mov
cmova
push
sub
clc
dec
mov
and
cmp
pop
add
cmpl
sbb
push
daa
out
cmpsl
fistl
jns
push
mov
push
fimuls
cmpsl
insl
jnp
xchg
into
js
cmc
decb
int
or
push
sbb
mov
jae
pushf
add
xchg
in
jge
sbb
jae
xor
push
and
inc
ds
mov
pop
das
inc
dec
xor
cwtl
push
xchg
ret
pushf
push
icebp
jno
pop
adc
std
in
pushf
rep
jnp
in
push
je
psubd
push
out
dec
movsb
inc
xchg
out
movsb
jl
scas
sbb
cli
xor
xorl
icebp
decl
stos
gs
push
in
std
xchg
addb
cltd
push
mov
sbb
or
add
mov
xor
pop
or
cmpb
pop
in
push
in
and
ret
or
add
xchg
adc
xor
or
xor
inc
cmp
out
aaa
and
inc
popf
and
mov
test
scas
ror
popaw
lret
sahf
sbb
dec
inc
xchg
jge
les
pop
test
sub
xor
divl
pop
pop
jae
imul
xor
mov
mov
inc
cmp
inc
mov
mov
inc
fistpl
adc
pop
jl
or
test
std
mov
mov
js
sahf
sti
or
rclb
dec
pop
push
jnp
cmp
jl
jle
pop
orl
mov
sub
idiv
cmp
arpl
cwtl
js
aas
mov
mov
ja
call
xchg
inc
mov
scas
fwait
jle
inc
cmpsb
add
add
xchg
rorb
xchg
sbb
js
jecxz
out
shr
add
repnz
or
rcll
in
sbb
sub
sub
hlt
sbb
shlb
inc
push
xchg
in
cmpsl
push
sub
addr16
push
xor
and
cmpsl
sub
lret
or
adc
sbb
dec
dec
in
jne
std
mov
jp
arpl
mov
pop
stos
jnp
adc
rcr
inc
pop
mov
mov
sbb
sbb
movsb
stc
mov
mov
out
or
iret
jle
jmp
inc
stc
mov
mov
mov
pop
cmp
pop
xor
sbb
pushf
or
xor
mov
je
call
test
lret
jo
mov
inc
lods
mov
add
in
jl
add
ffree
pop
or
sti
push
punpckhdq
jl
xor
mov
or
das
mov
lock
lea
mov
inc
cmp
xchg
mov
pushf
mov
sbb
sbb
loopne
ss
sbb
es
adc
out
outsb
jmp
je
cmp
aad
int
sbbl
in
sarb
ss
sub
dec
nopl
inc
clc
mov
outsl
mov
test
sbb
ja
jne
mov
mov
mov
fmull
cli
cmp
loope
push
ret
stc
jmp
daa
fimuls
mov
jne
pop
rcll
bound
pop
fwait
sub
jnp
mov
test
ret
mov
dec
js
and
or
outsl
adc
inc
pop
add
ret
mov
or
arpl
lret
in
int
cmp
pop
or
scas
xchg
idivb
push
push
ljmp
mov
rcrl
bts
cltd
das
add
pop
cli
fwait
push
or
jbe
ret
aam
lret
jmp
mov
xchg
shll
mov
cs
mov
push
push
dec
dec
and
insb
sbb
and
arpl
adc
mov
loopne
add
inc
mov
and
jmp
arpl
enter
hlt
lods
jge
scas
push
daa
pop
xchg
pop
jnp
aaa
jbe
pop
cwtl
ds
out
xor
ja
out
push
cmp
xchg
enter
xchg
and
dec
push
adcb
jg
jle
out
pop
xchg
jne
sbb
and
daa
cmpb
push
mov
mov
mov
or
enter
lret
or
or
push
outsb
mov
xor
add
out
pop
sbbl
fsubl
cld
sub
mov
lret
test
mov
andl
pop
or
xor
mov
adc
les
fdivl
mov
cwtl
pop
sub
jbe
lcall
mov
fdivl
push
cmc
xor
lock
push
sbb
or
fdivl
ds
pop
popa
leave
repz
inc
jne
ss
xchg
cmc
fildl
loop
mov
xor
mov
mov
mov
into
sti
inc
lock
in
jmp
push
cmp
ss
cmp
aam
mov
push
es
and
int
pop
movsl
xchg
xor
outsl
jg
push
lods
iret
cmpsb
bound
sbb
dec
add
xchg
sbbb
xchg
popf
add
push
loope,pt
jecxz
jg
or
je
pop
iret
icebp
pop
scas
sbb
ss
and
fisubrl
push
lahf
xor
or
jb
inc
roll
dec
and
pop
ror
xchg
or
or
or
test
xchg
inc
jl
sbbl
push
lcall
mov
cmp
loop
jg
inc
std
dec
movsb
inc
call
mov
in
xchg
cmp
cwtl
sbb
fbstp
call
imul
into
inc
xchg
sarb
adc
cmp
push
idivl
daa
pop
push
lret
out
xlat
iret
inc
decl
or
inc
jo
lock
mov
je
inc
inc
or
lret
inc
shrl
and
pop
push
subb
stc
mov
mov
push
and
mov
sahf
mov
xlat
push
movntq
add
xor
cmpsl
mov
sti
pop
add
pop
mov
adc
call
xchg
les
bound
mov
dec
push
popf
bound
dec
dec
and
add
gs
jno
mov
cmpsl
outsb
fisubrl
pusha
jle
xchg
and
popa
loop
lea
adc
mov
xor
sub
jnp
jns
out
test
jl
sub
inc
xchg
js
dec
lea
xchg
daa
notl
les
push
std
arpl
in
fnsetpm(287
imul
cmp
pop
aas
rorl
aam
mov
scas
clc
call
push
sub
test
and
int
jecxz
lods
dec
or
pop
movsl
xor
adc
and
xchg
mov
int
bound
jmp
jmp
mov
inc
lcall
cmpsl
sub
push
cmp
push
cld
xlat
pop
xchg
aaa
mov
daa
loope
out
loop
or
mov
xchg
loop
pop
sub
push
js
dec
or
push
lods
xchg
xchg
inc
dec
imul
into
pop
add
cltd
aas
sub
movsb
arpl
add
ss
push
data16
fimuls
cmp
scas
jl
jle
fsubrl
add
add
or
sub
adc
mov
shll
fwait
jbe
jmp
outsb
inc
daa
sbb
cmp
xchg
out
test
scas
cmpl
lcall
jg
dec
xchg
imul
shlb
rdmsr
imul
mov
aad
pusha
shl
adc
mov
sti
cltd
cld
lds
jg
pop
xchg
mov
cmp
mov
push
outsb
xor
mov
cmc
outsb
mov
dec
test
add
add
sar
bound
cmp
mov
gs
or
adc
fs
xchg
into
mov
push
jmp
pop
pop
cwtl
decl
stos
out
jbe,pn
sti
mov
clc
mov
in
inc
shrb
lcall
in
gs
sbb
lods
pop
mov
mov
xchg
xchg
jg
cmp
mov
push
add
int3
push
int
repz
dec
mov
fisubs
xchg
cmp
addr16
inc
cmp
notb
lea
cli
repnz
cltd
fdivr
pop
mov
push
lock
enter
fldenv
xor
add
sti
addr16
stos
leave
mov
cmp
pop
inc
mov
add
dec
mov
adc
push
dec
mov
ficompl
ja
push
fs
aam
test
imul
sahf
xor
xchg
out
mov
repnz
shr
out
mov
in
into
call
pop
fdiv
aad
sub
push
xor
xor
cs
inc
movsb
add
add
inc
gs
cmp
stos
dec
aad
xchg
mov
mov
xchg
lret
lahf
mov
xchg
dec
mov
push
mov
inc
pop
aad
adc
or
inc
and
cltd
ficomps
aam
jle
stc
lock
mov
dec
lods
arpl
fcmovnbe
ss
mov
adcl
mov
adc
xchg
or
and
cltd
cmp
movsl
lds
fldl
lcall
or
xchg
xchg
mov
sbb
add
daa
cmpl
mov
mov
pop
lods
fistpll
mov
mov
clc
inc
xchg
fidivs
xchg
sahf
out
in
lock
idiv
cli
xchg
shl
popf
and
mov
xor
add
iret
xchg
fldcw
std
pop
scas
pop
xchg
sub
mov
popf
ds
stc
adc
mov
rcrl
add
inc
inc
sbb
cmp
lcall
xchg
mov
daa
adc
in
mov
les
jle
mov
xchg
mov
int3
mov
xor
adc
pushf
cmc
sbb
movsl
mov
cmp
shrd
test
jp
cmpsb
adc
popa
int
xchg
rol
int3
pop
cmp
and
dec
sub
mov
rcrl
sahf
in
cmp
pop
ret
mov
in
dec
xorb
adc
inc
js
mov
push
push
mov
jg
jmp
jmp
rcl
cmpb
pop
sbb
xchg
out
push
sub
mov
mov
inc
out
jbe
push
xchg
cwtl
cltd
je
insl
mov
lea
sbb
fcoms
lcall
pop
inc
push
and
test
sub
lea
push
push
push
xchg
icebp
xor
fists
sbb
dec
jecxz
cmp
xchg
xchg
and
aam
insl
cmp
ret
fs
sahf
call
test
test
sub
inc
in
sub
adc
lret
pusha
push
mov
iret
mov
xor
je
aam
ret
rcrl
mov
sub
add
pushf
shrb
fsubrp
sub
pop
pushf
andb
pop
or
xchg
lods
adc
nop
call
mov
repnz
cmp
mov
int
sbb
pop
sbb
js
xlat
cmp
xor
xlat
pop
data16
add
and
sbb
jle
out
push
inc
and
fnstenv
insl
or
lods
xchg
push
sbb
xchg
mul
mov
and
xor
insb
xlat
cmpsl
loop
inc
fcomps
jae
aad
mov
mov
lock
mov
push
mov
sbb
cmp
cmpsb
cwtl
xor
jae
cmp
jbe
xchg
push
lret
aas
mov
push
stc
in
cmp
stc
inc
rcll
loope
loop
repz
enter
cmp
iret
mov
mov
or
pop
xlat
pop
add
jno
jl
mov
mov
push
mov
aas
or
inc
popf
mov
mov
arpl
fs
sub
mov
dec
pop
enter
and
hlt
pop
imul
inc
and
xchg
shrl
aaa
or
xchg
push
lcall
cmp
popf
leave
cwtl
mov
jmp
aaa
out
pop
shlb
push
aaa
out
ret
ror
jno
outsl
dec
ficompl
hlt
push
jae
loope
jne
mov
out
iret
pop
std
shrl
lahf
push
dec
xor
stos
icebp
movsb
push
mov
fmull
icebp
fwait
hlt
fstps
loopne
inc
rorl
rorb
mov
shr
in
les
cmp
mov
jnp
add
cld
lret
pop
jmp
incb
xchg
push
nop
push
jg
sub
les
pop
outsb
sbb
jnp
ficomps
fdivrl
or
jo
push
fsubs
lock
sbb
add
loop
push
je
mov
jnp
jo
add
stos
movsb
mov
rcrl
sbb
or
sbb
sbb
testl
addr16
pushf
push
cltd
push
sub
adc
mov
add
mov
mov
insb
pop
adc
leave
lret
add
enter
mul
aas
push
ljmp
mov
adc
adc
and
mov
jb
pushf
mov
test
pop
popa
dec
sub
mov
xor
jmp
bound
adcl
cmp
imul
mov
mov
cmp
dec
push
push
pop
js
fwait
mov
xchg
mov
adc
pop
sub
and
insl
lods
or
mov
jb
inc
or
sub
aad
adc
popf
jne
jae
iret
pop
inc
cld
push
xchg
in
vmovapd
mov
ja
imull
mov
mov
pop
lods
cmpsl
xchg
data16
ja
loope
cltd
int
outsb
add
int3
pop
mov
lea
inc
jbe
out
push
test
jbe
sbb
aad
cmc
addr16
lds
cmp
test
ret
cmp
fucom
rclb
iret
mov
mov
cwtl
and
jo
inc
imul
imul
roll
repnz
pusha
jns
pop
in
cwtl
icebp
loope
and
mov
and
add
jge
mov
push
int3
jnp
jnp
inc
xchg
mov
je
cmp
sahf
jb
nop
gs
mov
mov
int3
inc
imul
xchg
adc
mov
add
sahf
mov
rcll
fmull
push
jle
push
mov
pusha
jbe
mov
xlat
and
enter
pusha
fwait
and
stos
lock
sti
call
popa
xor
mov
ja
mov
lods
add
and
leave
fisubrl
sub
add
xchg
mov
out
out
mov
mov
mov
mov
xor
scas
mov
insl
push
xchg
das
jmp
or
jne
test
sub
les
repnz
push
or
and
mov
sbb
in
jno
cmp
cmp
sbb
sbb
cmp
nop
lret
or
cli
insb
ja
push
mov
jb
loope
push
sbb
in
xorl
data16
imul
rcrb
popf
pop
pop
pop
inc
cmp
push
scas
inc
testb
ljmp
add
dec
push
pop
ret
adcb
dec
mov
dec
leave
adc
adc
mov
and
or
cmp
adc
mov
roll
shrl
mov
call
hlt
adc
pop
xchg
push
or
ja
outsb
testl
add
sub
lods
pop
ret
jmp
xchg
out
hlt
mov
sbb
out
aam
lods
mov
std
cwtl
test
imul
aam
jle
dec
lods
cmpsl
xchg
xchg
pop
and
int
adc
or
jle
xchg
or
mov
fbld
hlt
repnz
ret
cmc
nop
mov
and
inc
inc
xchg
dec
mov
xchg
xchg
push
and
cmpsb
add
popa
int3
lret
stos
sub
push
enter
cmp
jg
mov
call
out
cmp
cmc
or
call
cmp
jb
mov
push
mov
xor
enter
xor
sar
push
sar
test
xorl
enter
jbe
cs
push
adc
in
mov
add
lock
xchg
push
loop
fsub
xor
inc
data16
cmp
out
leave
fldt
xor
xchg
lods
into
xor
jnp
bnd
stc
int
int
fldl
call
cmp
or
push
enter
pop
add
addr16
call
lods
mov
mov
fadds
lea
in
lods
mov
cmp
dec
adc
call
cmpsb
xor
adc
popf
sub
out
add
lods
and
push
jp
inc
add
stos
icebp
xlat
fnstsw
push
out
push
add
pop
xor
xchg
mov
adc
jno
jne
lods
ds
fisubrl
xor
cmp
pop
ret
sub
sub
out
test
js
fdivr
inc
and
daa
push
stos
and
loopne
enter
iret
lods
outsb
les
xlat
pop
jo
shlw
daa
test
mov
sbb
stos
push
dec
mov
dec
mov
sbb
lcall
pop
mov
out
aas
dec
popa
mov
loopne
lret
ja
shl
xchg
cs
lds
rol
jg
push
cs
cltd
cld
movsb
sbb
xor
or
inc
fnstenv
push
out
cli
sbb
mov
mov
xchg
bound
xchg
mov
fmull
or
lret
lret
push
out
stos
cmp
push
jae
push
loopne
data16
inc
test
bound
mov
sub
insl
cltd
jg
add
dec
or
mov
mov
repnz
int
dec
loopne
lret
jg
and
ret
sub
cmpsl
mov
sbb
sbb
jge
data16
negl
shrl
push
mov
jmp
loop
lock
cmp
xor
inc
dec
stc
add
lahf
ss
adcb
mov
in
mov
sti
scas
les
repz
test
jle
outsl
push
fs
sarb
js
negl
cwtl
xchg
fxsave
mov
notl
inc
ret
fisttpl
mov
add
mov
rcrl
out
mov
subl
dec
out
sbb
mov
mov
pop
mov
aas
ljmp
cld
cmc
aas
sub
jecxz
xchg
loope
pop
xchg
fs
dec
mov
or
pop
fcmovb
and
popf
mov
jo
clc
sbb
call
add
jg
fst
stc
jb
incl
push
sbb
popf
xchg
ss
sahf
inc
mov
jl
stos
mov
rcr
mov
xchg
push
fs
stc
test
mov
lock
dec
neg
inc
pop
negb
cltd
dec
mov
xchg
les
insb
mov
pop
mov
mov
mov
jb
mov
inc
insb
pop
mov
push
push
xchg
ds
mov
xor
jb
sub
sbb
and
mov
aaa
repz
jl
movsl
sub
popf
stc
jbe
fcmovnb
mov
jno
sub
lret
fcomp
inc
test
add
mul
test
test
mov
imul
subb
adc
push
push
ljmp
test
xchg
dec
jecxz
inc
mov
les
pop
push
mov
cmpb
in
push
sbb
in
push
shlb
add
sbb
daa
dec
leave
hlt
add
mov
inc
test
mulb
pop
cmpsb
outsl
mov
negb
in
push
in
rcr
dec
pop
dec
lods
xchg
cmp
scas
inc
push
push
inc
xor
test
sbb
cmp
jmp
pop
lea
test
adcl
push
mov
lahf
sbb
jb
cmp
inc
hlt
outsb
mov
into
inc
fucomp
sbb
jmp
jecxz
out
pusha
inc
lea
xor
ja
cmp
cmpsl
stc
dec
add
mov
pushf
jae
sbb
xor
fucomi
shll
rcl
jg
shll
loop
loope
or
pushf
cmp
xor
mov
lods
add
dec
dec
lods
das
sub
jg
mov
sbb
mov
sub
clc
dec
xor
lcall
std
leave
or
dec
pop
xchg
mov
mov
xor
jo
loopne
cmpsb
and
mov
push
and
adc
jns
jbe
xor
cs
pusha
mov
testb
sub
xor
or
fadd
add
mov
sub
add
imul
ret
std
mov
addr16
push
scas
clc
repz
mov
icebp
jecxz
flds
adc
jb
push
or
inc
std
js
push
int
jae
or
mov
and
inc
xor
pop
xchg
mov
ds
out
sbb
popa
adc
repz
ret
std
popa
pop
or
sbb
mov
mov
cmp
sahf
dec
jmp
inc
add
shlb
lahf
jle
in
call
add
fsts
mov
inc
jecxz
dec
negb
pop
push
arpl
and
push
out
call
iretw
sbb
imul
cmp
rcll
aad
movsb
in
stc
jnp
cli
jno
mov
xor
cli
sbb
push
outsb
push
leave
add
sub
mov
std
or
movl
fwait
xchg
je
stos
loopne
xchg
roll
mulb
fwait
and
and
or
xchg
lods
or
icebp
dec
add
jne
fcmovu
cmp
icebp
lret
lods
iret
insl
or
scas
inc
or
pushl
pop
ds
and
mov
sbbb
jmp
mov
arpl
sbb
pop
cmp
jns
sub
or
add
mov
outsl
int
ss
incb
test
push
enter
das
rorb
pop
mov
pop
insb
xchg
movsl
insl
stc
lods
pop
sub
add
lcall
js
sub
loopne
mov
mov
pinsrw
ffree
sbb
xor
mov
inc
enter
dec
pop
pop
cs
push
sahf
daa
inc
out
jb
inc
or
jns
sub
lret
mov
lock
inc
mov
adc
je
outsb
jmp
iret
in
adc
mov
fbstp
repnz
sub
nop
loopne
sub
fdivrp
xor
ret
sbb
fisubl
into
inc
ds
xor
cmpsb
xchg
fsubs
stos
loop
cld
clc
fcompl
xor
mov
insb
add
je
sub
mov
sarb
stos
inc
dec
pop
mov
andb
sbb
out
fisubs
jmp
das
sub
mov
fwait
mov
scas
ljmp
jecxz
mov
jo
shrb
push
inc
shlb
jmp
push
and
adc
mov
mov
xchg
hlt
fwait
xchg
nop
cmpsl
fcom
push
lods
icebp
cwtl
hlt
pop
sbb
dec
xor
cmc
push
adc
std
sbb
pusha
cmpl
xchg
icebp
test
out
cmpsb
test
adc
jne
das
adc
fidivs
inc
xchg
push
add
into
fxtract
stos
enter
stos
mov
in
mov
xchg
int
cmp
flds
rep
pop
mov
stos
arpl
push
pop
mov
mov
cmp
mov
sbb
dec
cmp
or
mov
popa
mov
loopne
iret
xor
adc
ret
jno
fwait
std
mov
mov
mov
fstl
sub
fsubrp
je
mov
and
cmpsb
mov
leave
aad
movsl
push
fbstp
shll
mov
mov
cmpsb
mov
aaa
popf
sub
mov
sti
lret
adc
imul
jmp
jg
imul
nop
cmpsb
mov
inc
dec
mov
test
ja
cwtl
outsb
fwait
xchg
in
mov
in
sbb
movsl
cmc
and
in
cltd
pop
fwait
orl
push
rcl
ret
loopne
inc
dec
fstpt
xor
sub
test
js
xlat
clc
arpl
dec
sbb
jge
in
repnz
iret
ficomps
popf
adc
mov
ja
stos
cli
push
mov
sbb
movsb
icebp
cs
jae
nop
cli
rclb
inc
cmpb
xor
jecxz
dec
mov
sbb
push
xchg
stos
lret
insb
repz
int3
mov
inc
ds
es
jo
sbb
adcl
fs
push
fs
jo
sbb
popf
mov
ds
push
cmp
seto
test
mov
jg
push
add
add
stos
pop
or
outsb
cmp
mov
stc
push
addr16
incl
fcmovnu
pushf
or
sbb
daa
orl
push
sbb
adc
inc
mov
ljmp
scas
inc
imul
push
mov
sar
mov
add
pop
std
mov
dec
stos
sub
mov
xchg
je
fcompl
in
sub
xchg
mov
popf
fmull
cmp
insl
jp
outsb
xor
xchg
pop
mov
loope
dec
inc
push
sub
cmc
push
stos
or
hlt
out
or
jg
in
shll
adc
push
js
cmp
outsb
scas
jg
rol
dec
mov
mov
ret
sbbb
xchg
inc
mov
fistl
and
sbb
add
sub
in
jecxz
notl
loopne
sbb
clflush
mov
push
mov
jne
xchg
ja
adc
push
es
mov
push
xor
clc
adcl
or
cmp
jnp
add
cmp
mul
jb
xchg
mov
lock
push
or
push
mov
sub
xchg
and
jle
cmp
int3
pop
jo
adc
inc
test
and
inc
aaa
fcomip
xchg
fscale
out
cs
sahf
ss
mov
shrb
mov
xchg
inc
fptan
jge
stos
das
fs
sub
aam
xchg
sbb
jmp
test
test
enter
ds
fsubs
sub
test
call
cld
mov
repz
inc
pop
add
adc
dec
mov
loope
pusha
outsb
ljmp
pop
push
data16
jg
adc
loop
out
jne
xor
scas
push
jmp
stc
clc
push
pop
mov
or
aad
mov
pop
lret
lahf
and
rorl
dec
sbb
and
repnz
jne
roll
adc
mov
push
pop
loopne
gs
lock
lea
cmp
cmp
shll
aad
rclb
sbb
fsts
out
pop
cmp
mov
sahf
mov
sub
dec
imul
insb
fmull
dec
nop
movsb
sub
sbb
jo
jmp
mov
jmp
in
jns
sbb
jle
test
push
sub
mov
push
xchg
mov
add
mov
adc
jo
xor
je
testl
dec
sbb
push
sbb
das
leave
sbb
hlt
iret
sub
or
stos
add
pushfw
push
dec
scas
add
adc
mov
mov
push
ja
adc
cmpsl
repnz
cwtl
add
xchg
adc
mov
add
mov
sbb
dec
int
fsubrs
mov
sub
dec
xor
mov
and
cmp
adc
test
inc
rol
rcr
pushl
inc
push
push
add
fstl
scas
jecxz
inc
xchg
and
retw
in
xlat
test
fdivrl
data16
push
cmp
movsl
stc
pop
xchg
iret
sbb
cmpsb
stos
jb
test
push
inc
inc
fcmovbe
adc
in
ja
aaa
sub
sub
jne
or
and
test
pop
mov
push
lret
pop
mov
and
push
adc
pop
xor
inc
negb
aad
lods
aam
mov
ret
cmp
clc
fdivs
cmpsb
repnz
pop
jle
mov
mov
dec
arpl
stc
adc
push
cmp
aas
aad
sbb
js
test
lock
xchg
xchg
sar
and
addl
sbb
lret
xorb
cli
popf
insb
mov
imull
inc
mov
or
jnp
pop
jnp
adc
xchg
push
cmc
sbb
dec
push
mov
push
inc
push
or
call
sub
xchg
mov
pop
aad
push
push
pusha
lock
or
jo
insl
mov
fcompl
jmp
mov
push
stos
stos
cltd
clc
aas
mov
fucomp
fmull
sub
bound
add
hlt
push
enter
pop
dec
fidivrl
popa
pop
test
pop
out
fidivrs
and
lods
mov
sub
insl
js
push
or
sub
jae
mov
sbb
pop
arpl
icebp
stos
rcll
jg
arpl
cmpsb
sub
add
ss
push
lahf
dec
mov
xor
int3
movsl
pop
out
fcoms
adc
imul
popf
aas
int3
sbb
push
test
lahf
sbb
clc
fsubl
mov
lods
shll
rcl
inc
lcall
and
pusha
in
repz
jns
jne
xchg
mov
xor
addr16
xor
jno
imul
add
or
or
rcl
in
mov
cmp
sarl
fcompl
cmp
addl
cltd
rol
sti
pop
push
or
repz
add
ds
push
mov
pop
and
mov
mov
mov
push
xor
stos
inc
outsl
pop
xor
movsb
inc
xor
dec
push
icebp
cmp
repnz
sub
or
add
cmc
js
xchg
push
jg
std
pop
mov
pusha
lcall
and
adc
cmp
jmp
rcrb
test
std
mov
adc
pop
outsb
xor
in
jb
lds
fdivr
fcomps
pushf
sbb
inc
dec
lahf
or
cmpsb
in
movsb
gs
aam
stos
xchg
and
sbb
mov
aad
aaa
loop
arpl
jmp
and
lret
sub
xchg
cmpb
pushf
sti
jns
jg
insl
jmp
xor
int
jns
nop
js
push
out
aas
adc
fnstsw
mov
cmp
adc
lds
mulb
mov
bound
mov
or
mov
jns
mov
fnstenv
popa
test
mov
in
pop
imul
arpl
jecxz
push
sahf
cmp
cmp
test
imul
jmp
outsb
mov
push
ficoml
sar
in
sub
sub
in
movsb
pop
ja,pt
sub
cmp
cmpsl
js
adc
das
sbb
jmp
lret
cmpsl
lds
mov
lods
jbe
imulb
pop
mov
mov
xlat
fwait
ror
mov
shlb
test
stc
adc
pop
inc
xchg
test
mov
lret
fistl
add
pop
xor
cmp
xor
add
xchg
subb
repnz
mov
push
jbe
adcl
scas
xchg
adc
jp
mul
jecxz
sub
fwait
or
call
xchg
fxch
xchg
push
lcall
sub
in
ss
lods
dec
push
push
lock
movsb
xchg
fmul
push
dec
mov
lods
jle
sti
rcll
cmp
inc
subl
popa
ror
sbb
pop
jns
jno
mov
dec
push
cmp
sub
ss
cmp
push
xchg
adcb
and
test
dec
int3
inc
ljmp
fwait
xor
xlat
push
sarb
popf
das
or
in
xchg
push
movsl
and
dec
ret
xor
daa
fwait
dec
push
test
jne
lock
mov
scas
xchg
mov
inc
les
mov
fstpt
xchg
int
xorb
leavew
cwtl
pop
cmp
pop
addr16
inc
mov
inc
nop
mov
sub
and
fildl
repnz
leave
mov
sbb
mov
lock
push
inc
lods
dec
and
mov
mov
xchg
mov
test
mov
lea
or
adc
jno
jl
mov
inc
jg
dec
test
and
addl
pusha
hlt
cmp
cli
sub
out
pusha
repz
fwait
mov
test
adc
ds
adc
mov
sub
aaa
add
adc
jg
pop
lods
gs
xor
loope
inc
mov
adc
imul
in
mov
popf
ret
push
ja
shll
sbb
push
mov
mov
ds
test
gs
inc
xor
inc
jmp
xchg
ds
test
lahf
cld
pop
jle
fs
mov
int3
mov
and
cmp
mov
and
sub
test
lret
sbb
jp
xchg
pop
in
mov
sti
or
jecxz
jo
daa
out
cmp
movsb
imul
inc
inc
xlat
hlt
mov
mov
mov
in
into
push
dec
repz
leave
push
mov
inc
pop
push
fsubrl
pop
cmp
rorl
xor
loope
out
das
mov
push
and
pop
pop
dec
or
mov
ja,pt
dec
ja
aas
popa
push
repz
xchg
outsl
mov
mov
scas
jp
and
mov
dec
add
mov
aas
loope
push
shrl
or
data16
ret
xor
cmp
lods
xchg
punpcklwd
jp
test
add
ds
cs
jb
add
jg
push
add
xchg
std
cmpsl
xchg
mov
mov
jnp
xchg
cli
jns
je
ret
mov
dec
shr
repz
test
es
imulb
cwtl
push
out
subl
add
and
jno
inc
icebp
out
ret
fwait
test
imul
faddl
lcall
inc
xor
cmp
mov
sahf
inc
jmp
or
pushf
mov
sahf
inc
cltd
das
insb
push
cwtl
scas
sub
movsb
xor
test
jo
and
or
push
cmp
push
adc
jb
psubq
stc
rclb
pop
sbb
mov
test
movsl
mov
cmp
pushf
imul
in
sub
das
xor
stc
lea
imul
pop
push
std
push
inc
sbb
lods
icebp
rcr
cmp
loop
mov
jl
xorb
fistpl
adc
dec
adc
mov
mov
and
cmpsb
pop
std
das
cmpsb
sbb
pop
and
icebp
rcll
jmp
mov
mov
jnp
lret
das
sub
loope
sbb
mov
divl
rcr
xlat
fcompl
ds
push
pop
push
sub
push
aam
ffreep
arpl
sahf
mov
vhsubpd
nop
les
mov
mov
aad
sahf
aaa
in
sub
dec
scas
leave
repnz
or
or
xlat
dec
mov
je
dec
dec
adc
scas
inc
stos
push
sti
pop
mov
test
push
lea
ret
xchg
adc
mov
xor
hlt
xchg
cs
jno
pop
push
push
pop
cmp
lcall
aaa
sbbb
xchg
rcrb
jb
sbb
arpl
push
icebp
add
mov
subb
add
aam
fiadds
int3
xor
mov
gs
push
icebp
jmp
stos
mov
das
add
cmp
mov
jae
sbb
pop
add
cld
pop
cmp
mov
jb
mov
imul
ret
cmp
lahf
lods
pop
rcrl
mov
lret
lahf
pop
pop
sbb
sti
jl
loopne
cmp
sub
cld
mov
bound
xchg
test
mov
addr16
sub
nop
cwtl
into
xchg
xchg
push
loope
pop
and
pop
jns
xor
fildll
ljmp
mov
push
mov
test
daa
mov
jbe
push
mov
outsl
popa
jl
ficoms
push
test
cli
jecxz
out
scas
cmp
or
dec
fsubrl
add
pushf
imul
mov
sahf
add
pop
xor
dec
push
fists
rcrb
mov
clc
imul
adc
fidivl
add
das
leave
jb
rolb
mov
icebp
lock
nop
fdiv
add
or
cmp
out
rcrl
repnz
lahf
adc
js
xchg
jle
mov
shrl
sbb
lcall
pushf
ds
add
das
cmp
xor
incl
add
scas
pop
lret
mov
mov
mov
mov
loopne
push
inc
incb
pop
xchg
add
cmp
adc
insl
repz
inc
pop
addl
jnp
sarb
rcrb
sbb
std
pop
int
mov
daa
xchg
lahf
mov
sbbl
jae
loope
out
add
sub
js
jo
mov
lret
fwait
movsb
in
in
dec
pop
push
push
testb
mov
mov
popa
mov
mov
cmp
cltd
stos
andl
xor
sbb
das
xor
ss
aad
mov
test
rcll
sbb
sbb
jmp
push
sub
mov
add
mov
into
xchg
scas
mov
jo
cwtl
push
inc
es
addr16
cltd
pop
sti
xor
and
sub
test
psubsb
pop
sarb
push
mov
xor
lret
xlat
push
mov
lret
inc
mov
hlt
pop
inc
xchg
test
pushf
sub
fbstp
sub
shrl
inc
jnp
pop
pop
or
jg
or
inc
lock
push
into
sarb
mov
jae
cmp
decl
mov
dec
aam
xchg
inc
add
mov
enter
jp
lods
ffreep
sub
mov
mov
dec
dec
jnp
jo
sub
hlt
inc
jnp
adc
mov
inc
jg,pt
stos
aad
pop
shl
xchg
notl
sbb
sbb
popf
inc
xor
or
adc
mov
mov
push
jnp
fmul
inc
movsb
insb
lea
adc
pop
das
mov
pop
jmp
mov
into
decb
push
into
and
or
iret
or
push
daa
sti
addl
or
or
sub
fwait
jg
test
pop
scas
or
mov
out
orb
aad
cmc
fnstenv
cmpsl
cld
mov
xlat
sub
pop
call
dec
lret
insl
jne
fiaddl
js
js
xchg
scas
xchg
dec
mov
inc
cs
sahf
pusha
shlb
xchg
cwtl
popa
lret
divb
jb
ja
sub
mov
hlt
outsb
sbb
mov
paddb
addr16
pop
ret
scas
mov
icebp
loopne
fldt
cli
pop
jecxz
not
jmp
stos
fnstcw
mov
idivb
xchg
fadds
sbb
or
jge
sub
pop
push
pop
ss
push
dec
movsb
push
lahf
dec
clc
mov
xchg
ss
add
sbb
scas
push
fs
dec
enter
cmpb
adc
loop
ja
sub
fistpl
mov
push
outsb
push
mov
cltd
mov
adc
aaa
adc
xor
inc
add
outsb
std
orb
mov
xlat
dec
scas
pusha
mov
rorb
lahf
stos
inc
fs
ror
lods
int
es
adc
adc
or
sbb
dec
jae
ret
add
xlat
inc
adc
xlat
adc
xchg
jge
mov
shlb
test
adc
ficompl
hlt
daa
cli
inc
xchg
movsb
sub
push
aad
xlat
out
push
mov
add
rorl
icebp
add
jbe
or
pop
leave
push
pop
mov
cmpsl
cmp
fisubrs
xchg
inc
mov
scas
sub
xor
jg
inc
femms
std
add
jo
and
push
aas
mov
xchg
inc
push
out
fistpl
mov
insl
jns
cltd
repz
call
jno
mov
jg
jns
out
in
in
inc
rcrb
jno
sbb
xchg
jne
jnp
lret
xchg
jl
dec
shll
aas
adc
mov
push
mov
imull
add
out
loope
outsl
daa
data16
adc
adc
jmp
sarl
ret
add
jbe
and
and
add
insb
xor
int3
pop
mov
pop
ja
jb
xchg
push
jo
addl
das
xchg
outsl
sbb
movsl
sub
jb
fs
add
sbb
arpl
out
push
ds
rorb
iret
jae
roll
divb
movsb
outsb
out
and
push
sbb
xlat
push
pop
xor
icebp
mov
adc
push
je,pt
dec
mov
sbb
add
dec
jb
fwait
and
daa
xor
lahf
cmp
out
aad
pop
cmp
fadds
fimuls
push
or
and
mov
mov
aad
ret
aad
jne
ljmp
clc
daa
push
pop
sarl
cmp
sbb
daa
loopne
jp
es
jo
pop
jo
sbb
pop
cli
shrb
jl
or
scas
out
inc
mov
xchg
mov
push
mov
bound
mov
adc
add
mov
cmpsl
push
stos
sbb
stos
ja
shrb
iret
add
test
mov
fs
jle
ret
out
pusha
fisttps
leave
mov
cmp
push
das
xchg
xor
push
das
lods
insl
in
and
fistl
cmpsl
jb
inc
popf
insl
movsb
pop
inc
and
inc
or
les
dec
dec
inc
loop
lods
popf
repnz
popf
or
jmp
js
mov
bound
stos
pop
int3
cltd
mov
shlb
movl
push
insl
ss
dec
adc
dec
sbb
imul
mov
mov
dec
adc
cmpsl
sbb
push
out
fists
xor
iret
pop
popf
jo,pt
sahf
fsubrp
jge
jb
or
jo
xor
in
in
nop
jg
lahf
push
fwait
jb,pt
pop
mov
xchg
mov
push
or
jle
adc
sahf
fwait
notl
push
adc
out
pop
add
pop
push
clc
repnz
mov
rcr
xchg
xor
mov
or
je
test
jns
sub
push
adc
repz
jg
push
and
pop
repz
ret
push
nop
mov
adcb
xchg
ja
xchg
mov
jmp
cmp
sarl
xor
aam
leave
icebp
and
mov
call
sti
xchg
mov
cmpsl
int3
pusha
ret
js
cmpsl
lret
or
out
ret
in
dec
or
into
xchg
cmpb
inc
rorb
iret
cld
fnsave
adc
xor
inc
fcmovnu
out
push
mov
loopne
inc
inc
and
in
pop
xchg
or
xor
shlb
pop
loopne
add
cmp
inc
dec
addl
sub
sahf
cwtl
push
mov
mov
andb
dec
fs
stc
pop
insb
int
push
push
ja
push
inc
xor
iret
jp
cltd
lea
fsubrl
push
add
adc
jecxz
dec
mov
cmpl
jg
cli
sarl
and
addr16
outsb
pop
sub
cli
outsb
dec
mov
pop
nop
mov
add
stos
pushf
sbb
mov
sahf
es
jp
xchg
ret
inc
cli
xor
mov
gs
lock
xlat
ds
out
or
cmp
pop
inc
es
or
xor
mov
aaa
mov
repz
jecxz
adc
cs
sbb
insb
pop
inc
fdivl
imul
scas
rcll
sbb
sub
test
cs
pop
inc
imul
cmp
pop
or
or
loopne
icebp
xor
out
push
sar
es
inc
pop
sbb
push
scas
dec
data16
and
sbb
arpl
xchg
outsl
jmp
inc
xchg
xchg
cmp
dec
movsb
shrb
fs
mov
adcb
lods
gs
mov
js
dec
jns
push
repz
push
adc
mov
mov
xor
pop
adc
fldcw
imul
ret
das
adc
xor
fnstcw
xor
lcall
push
popf
add
fistps
test
jo
mov
das
rclb
cmp
enter
mov
shlb
and
js
in
dec
xor
and
pop
push
add
pop
xchg
mov
xor
mov
xor
and
out
lret
add
lgs
sub
bound
mov
fsubl
dec
clc
decl
dec
push
rclb
inc
pop
cmp
insb
cmp
fs
dec
dec
subb
fwait
sar
stos
jne
shl
jbe
pop
jne
lret
test
sbb
mov
xor
fsubl
mov
sti
fistl
mov
ffreep
in
or
sbb
sbb
add
sub
aaa
test
xchg
rclb
ss
xchg
movsl
push
xor
loopne
xchg
jmp
pop
mov
inc
mov
mov
fmuls
dec
lods
pop
sbb
jbe
negb
xchg
jbe
cmpsb
dec
mov
dec
lcall
outsb
rcr
sbb
mov
cmp
xchg
in
movsb
hlt
xchg
mov
in
or
xor
mov
and
cwtl
jl
xor
xor
icebp
popf
aad
mov
mov
pop
imul
pop
in
jbe
cmp
out
or
and
cmp
inc
xchg
add
fcmovnu
push
cmp
notb
ds
xor
sub
pushf
sub
std
mov
or
xchg
cwtl
shr
filds
mov
lds
cmp
lcall
mov
out
add
into
jl
push
inc
inc
daa
test
xor
jp
mov
enter
adc
stos
inc
pop
loopne
xchg
cmc
or
pusha
lock
imul
orl
sarb
das
cmp
repz
xor
mov
jbe
sbb
dec
xchg
xchg
rol
jg
jmp
jnp
adc
mov
sub
xor
insl
ret
dec
inc
jle
int3
cmc
mov
push
pop
xchg
sti
aam
aaa
sub
jle
push
repz
imul
imul
push
adc
mov
out
iret
jo
mov
mov
cwtl
aam
mov
mov
add
lock
dec
sti
test
in
movsl
lods
repnz
adc
cmp
add
or
pusha
pop
out
xchg
dec
push
mov
lock
push
out
dec
hlt
push
jmp
push
mov
out
sub
inc
stc
mov
fbld
cltd
sub
ror
ss
pusha
js
mov
addb
lahf
xchg
pop
lock
scas
orl
inc
dec
sbbb
out
iret
scas
mov
mov
ljmp
pop
cmpsb
inc
cli
push
pop
int
out
aam
ss
mov
repz
test
mov
lock
xchg
loop
or
aam
ds
sub
push
pop
movsl
fwait
dec
push
cwtl
pop
add
and
pop
dec
popf
and
ret
mov
dec
mov
jmp
mov
dec
inc
xor
aas
pop
in
jbe
pushf
aam
pop
enter
shrl
lea
out
mov
outsl
addb
push
sbb
dec
push
sbb
pushf
pop
lret
test
insb
icebp
sub
adc
test
aaa
dec
jg
push
fisubrl
xchg
push
mov
inc
daa
mov
mov
fldl
aam
jl
sbb
pmaddwd
imul
test
sub
ss
mov
pop
std
bound
sbb
jne
xor
cmpsl
push
pop
adc
lret
cli
ss
adc
mov
jg
pushf
xchg
test
ljmp
leave
aam
shlb
dec
mov
or
lret
bound
mov
ret
jo
add
test
mov
mov
ss
lea
stos
std
mov
jmp
popf
cltd
mov
rep
xor
sub
ljmp
call
mov
add
push
push
and
in
mov
ret
repnz
pushf
fcompl
push
cmp
sbb
das
xchg
test
jne
cltd
sub
das
xchg
lcall
lret
jp
xchg
gs
fcmovnu
leave
add
mov
out
or
and
pushf
mov
shlb
mov
in
rorl
push
push
arpl
out
cmpsl
repnz
rolb
sahf
test
sub
and
pop
push
and
int
cltd
jle
xchg
roll
mulb
pushf
or
push
pop
ret
ret
cmp
fildl
sahf
jmp
mov
dec
stos
shlb
lods
je
xor
lods
cmp
pop
sahf
scas
and
mov
jmp
aaa
sub
test
jnp
cmpsl
cmp
xchg
add
fnsave
push
mov
movsl
or
sub
xor
jmp
es
mov
test
into
leave
hlt
fists
mov
adc
push
cmpsb
jle
pop
adc
jl
in
scas
pop
lahf
jge
ret
fildll
add
cmp
mov
aaa
jae
and
mov
lods
lret
jmp
inc
dec
fs
pop
push
sub
xchg
sub
mov
jb
mov
iret
sbb
mov
mov
push
xor
loope
xor
js
mov
lcall
inc
cmp
xchg
sbb
push
cmpsl
cmp
roll
aam
xchg
cmp
jg
inc
push
pop
sarl
dec
add
repz
fisubs
xor
jmp
dec
mov
or
aam
mov
push
pop
incl
inc
sbb
push
push
outsl
loope
loope
mov
add
fistl
aad
push
cmc
es
jp
mov
dec
scas
jo
into
mov
and
mov
movsl
mov
loop
pop
cmp
push
int
or
push
clc
push
inc
sub
dec
repz
dec
push
sub
and
and
test
inc
cmp
fildl
frndint
lret
fsubrl
or
call
mov
test
arpl
or
fwait
and
push
inc
xchg
ret
cmp
dec
in
cmp
dec
pop
mov
in
mov
outsl
mov
fs
mov
lds
cmp
test
jecxz
xor
rcll
ret
rcl
inc
cmp
pop
and
xlat
mov
pop
inc
or
mov
sbb
pop
int3
mov
push
or
mov
jp
loopne
lock
outsb
or
jae
pop
movsb
jmp
jbe
into
mov
lods
nop
jp
sbb
loope
aad
pop
push
imul
scas
sub
daa
and
adc
xchg
add
and
popa
cltd
mov
dec
push
mov
xor
add
int3
add
pop
mull
push
in
loope
push
shll
xor
adc
jae
hlt
adc
es
dec
pop
adc
mov
addr16
and
pop
sub
pop
inc
xor
mov
iret
jmp
iret
lret
or
int3
xchg
dec
adc
loope
mov
mov
sarl
sbb
inc
xchg
lcall
push
mov
mov
and
mov
into
mov
add
add
adc
sbb
call
dec
cli
xchg
stc
in
adc
sub
mov
xor
je
sbb
inc
add
mov
out
das
aad
adc
cmp
loope
jbe
test
push
lahf
leave
in
popa
inc
mov
ret
aam
pinsrw
or
fidivrs
mov
mov
mov
xor
std
leave
je
addr16
mov
lods
mov
pop
inc
addb
mov
push
popa
xor
adc
in
rolb
andb
daa
jae
mov
jg
xor
je
in
test
test
sbb
pop
xchg
loopne
mov
and
stos
stos
inc
jle
xchg
jbe
jl
pop
jle
dec
in
mov
cmp
cld
ljmp
outsb
movsl
js
dec
cwtl
dec
aam
movb
rcll
mov
cmp
in
stos
stos
mov
scas
xor
sbb
pusha
add
iret
push
cmp
test
aam
jmp
or
push
ret
push
push
clc
movsb
in
and
xor
mov
cltd
dec
mov
push
js
testl
test
and
jne
movsb
jp
xlat
mov
jmp
push
enter
mov
push
adc
lods
cmp
cmp
sub
xchg
or
mov
xor
iret
aas
loope
dec
xchg
mov
mov
lock
sub
mov
mov
sarb
cmp
nop
addb
insb
jp
hlt
mov
shll
pop
cmpsl
cmp
xchg
fstpt
jo
push
loopne
inc
outsb
jge
dec
das
sbb
pop
xchg
bound
xor
adc
test
xor
stos
dec
fmuls
enter
vsubsd
cli
test
mov
inc
jo
jae
out
mov
adc
xchg
sahf
in
fadd
shr
popf
fmulp
pop
pop
and
popf
push
int3
mov
les
sar
push
outsb
sbb
je
adc
ss
das
lea
mov
mov
dec
in
js
sub
add
loopne
push
aas
popa
xchg
push
cmp
sbb
imul
insl
sub
clc
data16
scas
jbe
clc
jge
push
cmpl
or
dec
fnstcw
fistps
dec
xlat
es
fistl
push
xor
ja
or
mov
and
lock
ljmp
int
sbb
inc
test
popf
cmc
dec
sbb
nop
xchg
jp
fbld
insl
in
add
sub
cmp
push
lret
lods
std
cmp
inc
popa
dec
mov
mov
mov
xor
enter
push
push
call
pop
or
xchg
and
cmp
push
push
sti
mov
out
mov
loope
cmc
fmul
lock
loope
iret
push
xchg
push
sub
int
jp
pop
mov
insl
movsl
les
das
xchg
adc
xchg
ret
xlat
pop
jecxz
loop
pop
test
mov
repz
cmp
jle
and
add
jecxz
lods
push
test
cmp
sar
or
addr16
jbe
fs
push
add
sahf
in
mov
fsts
jp
mov
mov
sub
or
fwait
jns
push
cmpsb
mov
insb
repz
inc
lock
shlb
inc
or
cbtw
sbb
pop
icebp
sbb
mov
pop
sub
jae
ret
sahf
shrl
popa
pushf
inc
fwait
mov
aaa
fsubl
std
insl
sbb
add
lods
lret
arpl
cli
fsts
out
adc
in
xchg
mov
movsl
frstpm(287
int3
outsl
pop
sbb
jge
call
push
pop
inc
pop
cwtl
aam
cmp
cmp
pop
xlat
fsts
pop
cmpsl
lcall
mov
add
les
pushf
arpl
dec
mov
lahf
mov
cli
push
cmpsl
repz
test
adc
mov
add
jmp
add
inc
dec
pop
fnstenv
jne
and
cli
or
inc
insb
sub
sbb
mov
adc
lods
push
jno
shll
aas
cmp
jg
adc
test
and
mov
idivb
movsb
sbb
jecxz
shlb
sub
sarb
adc
mov
in
pop
sti
adc
dec
jg
sub
pop
je
push
fistpll
cltd
ja
cmp
dec
mov
mov
and
fsub
jns
push
jb
and
lret
and
xchg
rcrl
push
rorb
mov
xchg
xchg
push
sub
sahf
das
push
cltd
cmp
jnp
out
call
cmpl
aas
out
add
outsl
mov
pop
lds
xchg
mov
mov
xor
ret
out
push
mov
pushf
jmp
leave
pop
pop
inc
push
mov
fcoms
pop
or
add
dec
rcrb
and
sbb
mov
mov
push
inc
mov
push
test
jnp
in
dec
cmp
xor
aas
xor
lret
mov
jno
pop
outsb
add
push
decl
cli
roll
sbb
mov
cs
lahf
jp
mov
adc
and
in
jnp
aam
loopne
test
pop
stc
xor
aas
and
out
lods
dec
mov
xchg
mulb
cmc
cmpb
sub
jecxz
repz
ljmp
add
mov
gs
xor
mov
dec
mov
shrb
test
arpl
mov
jle
lahf
negl
fcompp
xchg
dec
mov
cmpb
insb
cmpsl
xor
cmp
sbb
fsubrs
pop
dec
bound
pop
adc
push
inc
cmc
outsb
mov
xlat
and
icebp
inc
pop
movsl
push
xor
mov
mov
sbb
incl
fwait
mov
fcompl
std
out
lods
in
jns
int3
fnstsw
lock
test
pop
sub
ljmp
insb
dec
shll
push
and
es
insb
add
int3
mov
cmp
ss
and
lret
jne
pop
ror
gs
adc
jmp
sub
shlb
inc
ret
push
jbe
inc
xchg
enter
imul
xchg
inc
xorl
es
mov
mov
mov
inc
mov
in
mov
sar
or
push
push
scas
pop
pop
add
mov
das
lods
mov
adc
fwait
or
mov
cmp
lcall
dec
sbb
sbb
call
lea
adc
inc
mov
in
adc
iret
dec
shl
mov
cmp
add
subps
ljmp
add
jae
push
cli
fists
imul
std
mov
mov
and
scas
into
jge
pop
sbb
cltd
nop
push
sbb
fs
ret
xchg
rorl
mov
lods
outsb
mov
mov
nop
fnstenv
pop
pop
push
pop
jle
xor
cmp
push
jl
scas
lods
fistl
mov
cs
dec
arpl
das
cmp
pop
pop
xchg
ret
cwtl
hlt
add
fucomip
ret
outsb
shrl
cld
daa
sub
push
aas
push
test
fstpt
outsb
leave
add
jmp
xchg
dec
or
arpl
outsl
or
adc
out
shl
push
sbb
fnstenv
stos
mov
fnsave
mov
inc
xchg
add
out
mov
pop
adc
jae
movsl
or
xchg
cmpl
into
dec
pusha
xor
movsb
sbb
mov
dec
popf
cmp
cmpsl
mov
lds
jge
out
push
ret
fstpl
insl
outsb
sbb
sub
fnstenv
out
jmp
leavew
sub
sub
pop
movsl
pop
cmp
inc
sub
jae
ds
ja
add
aaa
jg
stos
jle
pop
jecxz
dec
aas
push
jmp
push
and
mov
hlt
iret
out
sub
ficoml
imul
cli
scas
mov
push
mov
gs
or
mov
insl
in
jmp
lret
xor
xchg
clc
pop
loop
pop
ret
inc
repnz
das
pop
outsb
mov
popf
or
pop
sub
dec
mov
in
fwait
roll
and
test
xchg
jecxz
outsb
cmp
xor
pushf
fdivrs
adc
test
lret
repz
sbb
sti
aad
mov
jbe
sbb
jnp
xorl
lods
dec
adc
int
test
jmp
iret
fbstp
jle
iret
xor
xorb
pop
jne
inc
adc
jp
movsb
fiadds
int3
xlat
mov
sarl
subl
xlat
adc
jb
mov
repnz
fdivr
jo
xchg
mov
push
or
pop
aaa
xor
outsl
mov
jge
adc
bound
bound
popa
pop
lcall
pop
inc
or
mov
mov
mov
fistpll
jecxz
ret
mov
cmpsb
mov
push
push
xor
lret
xchg
clc
add
inc
dec
inc
lock
in
inc
xchg
fs
lods
pop
cwtl
or
call
mov
xchg
inc
das
jnp
je
and
test
das
daa
mov
fidivrl
cmpl
pop
adc
xchg
push
les
iret
in
shll
jo
push
mov
stc
add
daa
loope
cmp
xchg
repnz
sub
sbb
jb
jmp
lock
stos
sarb
dec
xor
jno
jbe
cmp
lcall
xchg
jg
cmp
xchg
push
lds
cld
cmp
sub
shlb
insb
mov
push
mov
ror
test
lock
jle
fidivs
movsb
call
fisubrl
outsb
std
or
and
test
jb
rcpps
push
into
inc
gs
cmc
rcrl
inc
mov
out
mov
cmp
dec
aad
mov
add
jbe
xor
inc
rcll
sahf
outsb
jl
xlat
lea
jne
mov
pusha
sub
or
adc
jns
loope
jnp
add
add
sbb
jle
or
mov
jmp
mov
lret
ljmp
jl
repnz
or
jno
inc
xchg
add
xchg
cmp
push
ror
mov
push
jl
or
xchg
fsubs
shlb
xchg
in
cmp
push
out
jg
sub
movsb
sub
cmp
hlt
flds
push
push
jge
cld
jb
inc
in
jl
mov
les
sub
inc
out
es
mov
ss
pop
hlt
mov
shr
or
jo
mov
sbb
repnz
inc
or
and
addr16
mov
sti
outsl
int
xor
inc
data16
fcmovnu
pop
xchg
lock
jg
adc
ficoms
and
imul
call
frstor
xchg
mov
fucomip
inc
adc
xor
aaa
push
insl
jae
jo
xchg
cmc
es
movsl
int
push
ret
cmpsb
push
push
pushf
das
test
dec
mov
cmp
arpl
mov
pop
mov
movsb
out
outsb
lcall
jnp
ror
pop
xchg
fldcw
pop
adc
sub
mov
dec
sbb
cld
leave
mov
fcmove
test
fdivrl
add
sub
sub
cmp
push
cmp
movsl
sub
mov
sbb
adc
hlt
push
popa
sbb
xor
dec
scas
ja
ds
adc
mov
movsl
push
into
inc
pop
test
out
pop
cmc
call
add
data16
icebp
ss
inc
cmpsb
sbbl
mov
test
mov
shlb
outsb
sbbl
adc
ficoml
jnp
in
xor
pop
or
add
xchg
sbb
cmpsb
fisubl
scas
mov
mov
scas
hlt
stc
out
test
xchg
popa
mov
jno
xor
ds
ds
es
or
inc
add
outsl
sbb
orl
push
jo
pop
icebp
add
sub
out
lods
sub
pop
jo
xchg
in
sub
mov
ficoml
outsl
lea
xor
cli
cvttps2pi
mov
push
clc
pop
aad
mov
sbb
xchg
das
das
cmp
dec
lret
adc
add
lods
xchg
testb
cmp
ljmp
mov
add
repz
xor
jo
mov
sub
das
jge
and
xor
into
aas
mov
mov
clc
ret
sub
mov
sbb
xor
mov
and
inc
ds
adc
pop
mov
mov
jmp
cmpsb
or
popa
and
jbe
mov
and
pop
push
dec
incl
shrl
sti
push
and
test
pop
test
push
ja
insb
push
fwait
add
mov
scas
cmc
ss
push
in
in
sub
arpl
push
fimuls
cld
mov
add
aaa
leave
xchg
stc
scas
hlt
lret
cmp
sbb
or
fdivrl
jge
mov
scas
xchg
pop
loopne
dec
fucomip
out
rolb
xchg
int
jbe
mov
mov
sbb
xor
mov
aam
jo
adc
lea
dec
jno
inc
rorl
xchg
mov
out
into
mov
dec
cs
icebp
and
adc
xchg
adc
add
add
test
sub
mov
push
nop
icebp
les
push
mov
in
inc
dec
lods
push
cli
dec
sbb
das
or
adc
add
ret
or
xor
push
adc
mov
mov
or
cld
and
pop
outsb
xlat
repz
push
xchg
mov
or
lcall
test
ret
es
scas
sti
adc
bnd
andl
ret
jp
push
pop
add
cli
repnz
lock
sar
movsl
fsubs
aaa
in
xor
inc
jg
neg
mov
mov
and
repnz
cld
test
and
xor
sub
dec
add
cmp
sbb
xor
inc
sbb
lahf
mov
sub
pop
jb
addr16
adc
sub
daa
pushf
fs
subb
mov
xchg
push
cmp
es
push
imul
pop
xorl
mov
jb
out
xor
mov
enter
dec
aam
stos
xchg
inc
lret
xor
push
push
outsl
push
push
inc
jae
inc
dec
and
int
add
add
test
inc
add
push
add
add
out
enter
pop
test
xor
mov
cmc
pop
xchg
jno
scas
mov
xchg
pop
cmpsl
movsb
inc
mov
sti
dec
in
ret
adc
fwait
sbb
pop
cmpsl
daa
stos
popa
mov
jnp
pop
test
mov
xchg
lods
out
in
mov
mov
shll
mov
inc
cmp
aas
fimuls
pop
xchg
loope
inc
dec
movsl
xor
out
divb
mov
sub
cmpsb
push
outsl
notb
xor
push
add
lret
and
out
inc
enter
adc
push
int3
pop
fs
push
push
sub
pop
jae
add
mov
xchg
test
shll
inc
jo
test
in
data16
xchg
pop
gs
in
jl
out
sbb
add
icebp
push
dec
icebp
add
pop
inc
sbb
push
dec
dec
mov
sub
jbe
std
scas
imul
lock
stos
nop
out
imul
repnz
enter
es
sub
stc
outsb
aam
ss
jb
fdivr
pop
pop
lods
sub
xchg
andl
cmp
mov
add
add
cmpsl
push
mov
mov
faddl
push
mov
mov
pop
into
xorl
ss
sub
mov
addr16
or
push
aad
dec
xchg
stos
jne
loop
and
jae
cmc
sbb
jae
mov
icebp
lahf
cmp
mov
push
jg
pop
cmp
iret
jno
cmp
stos
inc
mov
jns
xor
jmp
inc
sbb
icebp
jle
das
cwtl
inc
shll
lods
cmpsb
jae
inc
arpl
pop
or
clc
or
xor
into
mov
push
sbb
jno
sbb
imul
push
mov
jge
mov
push
inc
daa
test
and
xchg
pop
cmp
lret
adc
cs
jns
int3
cmp
fldenv
lret
add
mov
imul
push
mov
dec
mov
in
jp
js
push
push
dec
into
push
sbb
push
and
in
xchg
jae
movsb
sub
sbb
outsl
push
inc
into
mov
and
int
cwtl
je
sub
jae
lods
sub
jg
add
fidivl
cltd
and
pop
push
popa
fildll
outsb
cmp
fadds
cmp
xchg
loop
adc
out
mov
imul
mov
add
loopne
cli
mov
cld
scas
mov
pusha
mov
dec
js
sar
aad
int
xor
xchg
mov
sub
hlt
in
or
das
xchg
lret
pop
std
gs
fdivrs
mov
and
fstps
fwait
repnz
test
mov
or
mov
cs
pandn
xlat
cs
aad
fisubl
lods
loope
or
sqrtps
xlat
sub
lahf
xchg
adc
orl
jp
push
pop
mov
mov
mov
stos
ret
sub
and
mov
repz
repnz
pushl
jmp
add
xchg
arpl
jecxz
pop
adc
call
out
sub
cli
outsb
jnp
inc
stos
nop
lods
cmp
sub
cs
xchg
xor
mov
mov
push
push
shlb
xchg
pop
data16
movsl
outsl
adc
outsb
adc
mov
leave
xor
mov
lcall
adc
imul
push
xor
popa
push
data16
jne
imul
cltd
cmp
xlat
sarb
push
cmp
outsb
adc
fbld
in
add
mov
nop
mov
es
out
clc
imul
mov
addr16
mov
xchg
inc
repz
je
dec
jp
inc
mov
int
xor
jmp
and
jbe
setno
stc
mov
mov
testb
lahf
push
stc
int
jnp
or
mov
or
sbb
push
xlat
and
dec
adc
mov
int3
out
fptan
bound
lret
sub
inc
fidivrs
pop
add
cli
xor
hlt
inc
mov
jno
pop
pop
insl
test
mov
adcb
xlat
xchg
ja
sti
ficoml
popf
gs
sbb
bound
jns
sti
push
cld
adc
fistpll
lcall
adc
mov
jmp
inc
mov
and
push
cmp
fldenv
mov
fcomps
jnp
mov
mov
mov
sbb
and
add
iret
and
jp
mov
into
mov
inc
aas
addr16
lret
cmpsl
jmp
lcall
cltd
xchg
aad
jmp
pop
xchg
add
sbb
outsl
pop
mov
sub
imul
mov
lods
mov
pop
push
in
divl
jp
in
mov
xchg
mov
adc
lcall
or
jno
mov
push
int
mov
pop
ret
jecxz
mov
jecxz
mov
mov
lock
in
movb
push
and
scas
push
sti
es
pushf
sub
dec
andb
push
and
popa
jmp
add
incb
cmp
in
pop
rcr
dec
inc
ret
insb
xor
jae
stos
jg
xor
inc
jns
scas
test
mov
sub
dec
cli
xchg
lcall
iret
xchg
inc
xchg
jbe
rcll
ret
test
stos
outsl
aam
cmpsl
cmp
jle
adc
push
js
aam
shlb
dec
rolb
stos
fsin
add
add
ret
test
push
mov
loopne
scas
aam
mov
lret
add
lahf
or
jae
jmp
jmp
pop
lahf
test
or
jbe
pop
es
mov
ljmp
movb
rcrl
in
sbb
out
stos
mov
pop
lods
sub
push
int
xchg
aaa
jecxz
hlt
negb
or
add
mov
pop
inc
inc
and
mov
sbb
adc
add
push
iret
into
inc
add
int
in
rorb
leave
fwait
sbb
add
sub
idivb
mov
shrb
int
insl
clc
fbstp
and
loop
cmpsl
inc
fdivrs
mov
repnz
test
aaa
push
push
sub
mov
mov
adc
xlat
xor
mov
dec
jp
int
ja
inc
add
sbb
xchg
hlt
dec
stc
pop
mov
cmc
and
mov
mov
cmp
and
push
sbb
out
mov
pop
outsb
jmp
ljmp
or
pop
sarb
sbb
cmp
mov
mov
ds
and
mov
popf
ss
loopne
loope
arpl
loop
xor
inc
mov
jge
and
mov
pop
mov
mov
int
lret
mov
repz
dec
sub
jmp
fnsave
mov
in
xchg
mov
cmp
push
aas
rol
push
hlt
mov
pop
jb
sub
mov
repnz
and
mov
inc
xorl
stos
sahf
ficoms
aaa
and
pop
mov
inc
mov
dec
jno
hlt
fcompl
pop
sti
jne
test
cmpsl
je
hlt
pop
hlt
push
lock
jo
stc
dec
pop
push
sub
and
dec
scas
fmull
sbb
cmp
xor
loope
jecxz
fmuls
add
test
hlt
mov
repz
cmp
mov
xor
movsb
jnp
bnd
add
mov
jbe
jnp
push
or
xchg
movsb
popfw
andb
out
cmc
sub
test
push
roll
pusha
lods
cmp
aaa
fstpl
dec
cmpsb
lea
mov
mov
and
push
out
cwtl
xchg
shlb
dec
pop
popa
test
adc
inc
cmp
lods
mov
or
stos
je
push
xchg
jmp
dec
xchg
les
dec
dec
dec
pop
ja
pop
dec
mov
hlt
mov
xor
add
js
lret
sti
mov
push
cmc
xchg
dec
or
push
das
outsb
fwait
les
fcompp
in
push
loop
fisttpll
decb
int3
cmp
sbb
in
in
cmc
dec
inc
arpl
dec
rolb
xor
outsl
add
ret
test
stos
lret
mov
push
das
xchg
rcr
movsb
xor
pop
movsl
popa
or
add
pop
repz
aad
repz
sbb
adc
mov
pop
add
add
add
data16
dec
dec
movsb
mov
jp
movsl
outsb
push
cmpsb
fwait
stos
push
push
movsl
les
adc
movsl
push
add
fdiv
mov
inc
xchg
outsl
add
xchg
flds
stc
xchg
add
fldcw
ja
neg
movsl
fldt
mov
xchg
pop
movsl
pop
daa
cmpxchg
shl
fsubl
dec
dec
xor
xor
or
or
out
xor
sub
and
and
mov
ja
or
or
test
aaa
adc
xchg
stos
mov
xor
and
xchg
jnp
inc
repz
or
inc
or
outsl
mov
daa
out
loope
sbb
fwait
inc
lods
in
clc
push
adc
pop
lods
dec
cmpsl
mulb
mov
outsb
ds
push
xor
cmp
out
or
out
inc
loop
ljmp
mov
push
mov
push
lods
lods
aad
mov
cmc
cli
insl
or
cmpsl
fwait
cs
push
stos
test
jecxz
inc
mov
iret
adc
ret
xchg
ffreep
mov
loop
xchg
pop
cmpsb
pop
enter
jl
sub
or
ljmp
dec
push
data16
pop
imul
cvtdq2ps
mov
stos
dec
jmp
inc
xchg
adcb
into
xchg
call
pop
cwtl
add
ljmp
sarl
fisttps
xchg
test
cwtl
popa
xchg
arpl
jne
mov
int
pop
mov
push
aad
js
pop
mov
mov
xchg
rclb
jp
sti
fucomp
push
push
sub
scas
cmp
cmp
and
scas
jl
xchg
shlb
cmp
add
push
fbstp
sbb
lret
pop
adc
aad
adc
pop
dec
cmpl
and
stos
fbstp
push
sbb
sub
fsubp
je
pop
and
mov
sub
mov
mov
sbb
std
dec
mov
mov
test
and
xor
jbe
add
in
mov
mov
out
dec
pop
rcrl
loop
xor
mov
pop
das
jl
inc
sbb
mov
mov
lods
shl
jnp
fs
pop
inc
pop
out
loope
je
jbe
jg
xor
sbb
js
andw
in
scas
nop
loop
pusha
mov
hlt
jb
imul
adcl
push
loopne
imul
cmp
push
dec
mov
pop
xchg
lret
dec
lea
jae
mov
and
std
stos
fsubrl
popf
push
jne
sahf
mov
inc
push
stos
add
movsb
pushf
rol
or
push
cmpl
pop
add
int
shl
mov
adc
into
movsl
in
push
jmp
in
or
or
jle
mov
fdivr
aam
push
mov
sarb
das
mov
outsb
in
xor
push
sbb
pop
mov
inc
mov
add
mov
push
ja
xlat
leave
push
mov
pop
fcmove
xchg
or
add
ja
pop
mov
mov
sub
out
push
jnp
cwtl
xchg
imul
aas
cs
dec
dec
repz
mov
jns
call
lods
fs
dec
pop
dec
jle
ficoms
cwtl
dec
aam
sbb
out
bound
add
pop
cmp
jp
mov
cmp
pop
xchg
ds
std
xlat
test
and
pop
and
mov
stos
pop
or
jg
xchg
sbb
popa
aaa
addr16
je
icebp
mov
adc
sub
stos
icebp
inc
fdivp
pop
xchg
mov
adc
lods
fsubp
loope
sti
je
jge
jle
xor
enter
fs
and
or
insl
out
jo
dec
and
stos
loop
loopne
jp
add
pop
hlt
dec
bound
lods
outsb
fisttpll
in
xor
xchg
lcall
pop
xor
mov
loop
mov
sbb
lahf
pushf
bound
in
xorl
pop
cmp
jns
adc
dec
cmp
jl
into
outsb
addl
dec
push
fidivrl
icebp
push
std
and
cli
push
inc
es
aad
repnz
push
cltd
mov
lea
das
and
loopne
test
inc
and
in
mov
xchg
mov
test
inc
sub
xchg
fadds
je
fisubl
push
addr16
call
cmpsl
xor
push
shll
aad
pop
dec
mov
push
dec
push
jae
pushf
cmp
mov
mov
pop
dec
test
incl
jne
pusha
inc
mov
jp
movsb
xchg
cmp
add
imul
jp
incl
push
ret
pop
sub
lahf
mov
lods
aad
sbb
sbb
aad
mov
cmp
jecxz
mov
and
pop
xlat
push
lock
or
fistps
dec
jnp
cmp
pop
sub
aas
mov
sub
mov
je
in
imul
fstps
push
jl
xor
jo
repz
xchg
or
pshufw
lods
jae
xchg
jb
sub
mov
inc
adc
aas
or
pop
movsb
or
mov
outsb
fldpi
dec
test
mov
and
adc
outsb
sar
sahf
ret
lods
dec
bound
sub
outsb
in
loopne
cmpsl
add
int3
push
push
adc
imul
adc
mov
test
std
out
in
lret
in
sub
mov
jge
sub
scas
sbbl
in
repz
icebp
push
cmp
das
sbb
xor
mov
shrb
pop
jne
mov
mov
pop
and
xchg
lds
push
cltd
fsubr
add
loop
je
fld
dec
sbb
fisttpl
pusha
cs
inc
mov
call
test
movsb
pop
sub
mov
push
fistpll
sbb
and
pushf
stos
push
cmpsb
mull
filds
adc
mov
xchg
jg
cmp
insl
push
je
les
enter
repnz
inc
mov
cltd
lds
ret
ret
xlat
xchg
arpl
test
push
lahf
or
test
out
inc
adc
in
sbb
les
mov
cld
xor
adc
mov
adc
daa
call
dec
dec
sbb
in
loop
lock
aaa
lret
mov
in
push
orl
and
mov
movb
nop
xchg
cmp
fstps
jp
sar
pop
loopne
xlat
push
inc
jnp
mov
jg
mov
rolb
pop
lret
dec
in
sbb
push
lds
data16
sbb
addl
xor
xchg
js
adc
cmc
out
cwtl
adc
sbb
pop
jnp
sbb
and
in
or
adc
add
fwait
dec
cmp
jo
hlt
sub
dec
ss
std
xor
fchs
sbb
xchg
lea
jmp
fwait
mov
or
inc
cwtl
jnp
cmp
pop
mov
sahf
or
cmp
lcall
mov
dec
outsl
add
jbe
icebp
xor
inc
nop
lods
lods
mov
cli
pop
pop
mov
cmc
push
imul
xchg
in
push
imul
jno
dec
popf
scas
rclb
mov
dec
sub
cmp
gs
sbbb
into
cld
decl
mov
test
sub
adc
jnp
xor
lock
inc
insl
shlb
ss
cli
inc
mov
sbb
push
iret
mov
test
xchg
in
fisttps
in
pop
xchg
in
es
jge
xor
dec
push
fwait
out
shll
daa
mov
xchg
outsb
dec
dec
jge
dec
mov
mov
push
xor
pop
inc
fcom
push
fldcw
dec
sbb
dec
adc
and
pop
inc
test
adc
mov
fnsave
out
cmc
mov
scas
enter
mov
adc
sub
dec
mov
ficoms
pop
or
out
out
mov
jnp
outsb
xchg
fdivr
cwtl
dec
call
popa
pop
mov
repnz
mov
icebp
add
and
fdivrp
pop
or
xchg
jge
xchg
push
cmp
xchg
mulb
cwtl
jecxz
std
dec
out
mulb
adc
inc
out
add
push
sub
dec
mov
mov
pop
pop
mov
shlb
mov
mov
dec
jne
cmp
mulb
addb
xlat
jo
fbld
xchg
jge
out
mov
pop
pop
xchg
in
scas
inc
sub
cmc
dec
push
mov
ror
inc
xchg
cs
out
adc
cmc
mov
ret
lret
lahf
jno
dec
fsubs
stos
mov
int
filds
jmp
pop
push
jne
push
cld
outsl
or
cmp
lcall
bound
sbb
in
pushf
dec
outsb
xor
leave
test
out
int
clc
xor
hlt
notl
pop
cmp
ds
rcrb
push
and
jns
xchg
lods
jmp
imul
push
test
paddsb
inc
mov
lret
sub
mov
pop
cs
pop
adc
mov
dec
test
sub
xchg
pop
or
inc
cli
jg
add
lods
jb
mov
lock
or
mov
lahf
sub
push
test
mov
jmp
sbb
pop
xchg
pop
sbb
das
scas
leave
adc
and
loope
loop
add
in
jae
jb
adc
or
fld
xor
xor
shlb
xor
rcll
daa
adc
data16
jbe
rolb
lret
call
jae
inc
mov
and
iret
mov
push
shlb
dec
add
or
push
sbb
and
mov
xchg
notl
fldt
loop
out
fidivrl
jge
orl
add
mov
data16
repnz
and
inc
fidivrl
xor
dec
sqrtps
ljmp
mov
movsb
fnstsw
dec
inc
jle
mov
pop
xor
insb
mov
xor
outsb
pop
sub
dec
sbb
js
mov
xchg
pop
xor
jbe
fmul
decl
cmp
rcll
sbb
rcrb
mov
jae
loopne
adc
pop
mov
shlb
in
pop
cmc
sti
aas
arpl
xchg
mov
mov
out
in
xchg
lahf
adc
repnz
push
jb
enter
sti
lea
push
mov
outsl
mov
push
adc
mov
js
mov
movsb
mov
in
stos
pushf
lret
push
xor
movb
subb
in
bound
and
lea
imul
leave
cld
jae
mov
dec
das
sbb
sahf
nop
or
push
sub
mov
pushl
out
mov
pop
aad
pop
sbbb
data16
lock
lret
jnp
ljmp
mov
mov
icebp
mov
pop
repz
stc
pop
xor
insb
cltd
daa
add
arpl
cmp
in
cmc
sub
in
push
mov
xor
sbb
push
jo
dec
js
add
pop
inc
les
out
insl
fcmovnu
dec
fs
rcrl
cmp
aas
arpl
pop
sub
push
in
scas
lcall
cwtl
and
in
dec
repnz
pusha
imul
inc
jecxz
sbb
dec
mov
outsb
adc
js
fisubl
cltd
decb
cmp
mov
aas
jecxz
popa
xor
mov
cmp
daa
cmc
lods
sbb
push
add
push
pop
shlb
cld
xor
fldcw
jne
movsl
cmpb
jae
dec
cmp
int3
subl
push
mov
add
add
sub
xor
icebp
pusha
xchg
mov
add
nop
or
mov
in
testl
mov
jbe
popf
fwait
pop
out
repnz
fistps
lret
mov
push
push
and
xor
jge
adc
jno
andl
ret
incl
adc
scas
add
or
sub
repz
push
and
std
loope
mov
in
call
std
loop
nop
jo
mov
mov
sti
jbe
sub
xchg
add
mov
inc
subl
loopne
test
int
push
sarl
mov
push
xchg
ljmp
fdivs
mov
adc
stos
mov
pop
lea
add
jno
push
movsb
and
js
lea
aas
data16
sub
daa
xlat
cs
push
mov
mov
into
and
sub
and
nop
in
ljmp
mov
int3
sarl
incb
jns
ret
jns
or
mov
out
loopne
push
sar
push
dec
inc
mov
xchg
std
dec
lods
rcl
cs
aas
and
jo
jecxz
iret
jl
inc
clc
dec
push
xchg
mov
pop
stc
enter
inc
jge
inc
xor
and
add
mov
mov
out
mov
shll
shlb
hlt
mov
enter
sub
inc
lea
lea
xor
fldlg2
cmp
jp
or
mov
push
sub
in
jmp
xor
jne
push
es
dec
mov
push
imul
jg
mov
push
popf
mov
adc
ret
loop
int
repz
sbb
or
mov
cs
mov
mov
inc
aaa
mov
or
push
jns
bound
loope
rep
push
popf
pop
pop
jmp
filds
es
cmpsb
out
rolb
fcoml
push
movl
shrl
leave
cmp
mov
and
push
loop
xor
es
mov
xchg
fdivl
mov
out
jge
mov
jno
jae
aas
mov
mov
push
mov
mov
xor
lds
aaa
mov
movsl
shr
pop
cmpsb
and
hlt
lods
inc
insw
aam
aas
ja
pop
mov
dec
add
sbb
mov
sbb
jo
ljmp
push
andb
addr16
push
mov
fstpt
rorl
xchg
xchg
sub
dec
and
pop
dec
lfs
and
in
repnz
sbb
sbb
adc
iret
jp
mov
mov
jge
xor
push
stos
cs
fwait
stos
stos
sbb
cmp
push
push
ss
and
loopne
mov
mov
lea
jno
je
rclb
fisubs
ds
inc
in
adc
and
xor
and
popf
bnd
mov
mov
jmp
adc
fbld
xlat
mov
xor
enter
jp
out
xor
adc
outsl
xchg
mov
shrl
int3
inc
inc
in
mov
mov
popa
imul
test
and
fildl
pop
pop
cmpsl
jp
enter
in
stc
clc
fisubrl
or
movsb
rclb
out
stos
mov
setns
and
mov
xor
sub
push
stos
dec
jae
cltd
outsb
mov
or
in
or
sbb
and
mov
jp
pop
push
adc
adc
mulb
adc
repz
notl
xchg
cli
pushf
cmpsb
pop
and
and
or
jl
out
mov
fsubrs
outsl
mov
xchg
std
stos
test
cld
repnz
jb
xchg
nop
lods
xor
lahf
stos
gs
dec
pop
sbb
jp
jge
out
jbe
cli
aaa
cmp
ja
mov
add
cli
or
jb
addr16
and
stc
mov
ret
or
dec
inc
fldt
lods
adc
sub
xor
jnp
jbe
pop
shll
cld
shll
loope
push
or
jl
lods
fdivl
fimuls
mov
sti
daa
inc
adc
scas
fildl
scas
mov
stc
rol
and
xchg
push
ljmp
div
and
jmp
out
push
mov
scas
filds
sbb
pusha
in
inc
cmp
dec
xor
out
clc
fdivrl
sub
mov
xchg
sbb
ficoml
out
mov
imul
inc
pop
addr16
je
fxch
sub
fcom
cltd
test
cmpsb
xchg
pcmpeqb
pusha
movsb
cmp
cmp
in
test
fwait
insl
test
rorl
adc
test
in
ss
push
pusha
push
cs
in
lcall
pop
inc
cmp
xor
les
lds
data16
inc
shl
inc
inc
outsb
daa
cs
pop
addr16
mov
xrelease
in
sahf
and
mov
jg
out
lret
sub
hlt
movsb
xchg
daa
pop
imul
fs
into
out
int
xchg
sbb
sbb
xor
pop
xchg
jno
rorb
add
jmp
jae
sub
test
scas
adc
jnp
repnz
inc
fxtract
mov
repnz
inc
add
pop
popa
lcall
mov
jl
jne
jmp
jle
fs
dec
jp
jns
sub
ret
pusha
fnstcw
sbb
inc
adc
add
pop
mov
xlat
add
cli
in
cld
jle
cltd
and
jmp
push
pop
mov
stc
dec
ja
sbb
rcl
mov
xor
xchg
imull
outsl
ret
dec
ja
or
stc
push
xchg
out
ljmp
jns
pop
call
lahf
test
es
jecxz
movsb
int3
dec
adc
int3
nop
fsubl
dec
popf
jmp
sub
fdivs
popf
xchg
lret
hlt
lahf
imul
js
mov
push
jge
mov
imul
stc
jne
pop
sti
mov
lret
dec
mov
jmp
pop
mov
sub
jae
repnz
dec
adc
dec
mov
xor
scas
xchg
popf
inc
xchg
sub
jl
fstl
cmp
pop
enter
aam
sbb
push
xor
pushf
enter
mov
ds
mov
xchg
dec
cmp
enter
insl
movsl
sub
insb
shll
mov
imul
adc
sbb
jno
mov
jbe
fstps
dec
fdivrl
outsl
push
mov
fcos
rorl
outsl
into
fisubrl
pop
push
sub
test
repz
aas
std
iret
mov
cmp
test
stc
loop
cmpsb
inc
movsb
jnp
mov
mov
insl
pop
adc
iret
dec
push
arpl
cmp
cmp
or
push
mov
add
roll
or
imul
lods
lcall
leave
jae
movb
sub
inc
aad
or
outsb
and
mov
cld
or
xchg
cmc
fdivs
test
and
test
in
cmpl
rolb
fldcw
jo
mov
leave
mov
out
xchg
or
xor
mov
push
adc
sti
icebp
repnz
insb
and
test
inc
sbb
scas
iret
scas
daa
or
fwait
enter
cmc
jmp
in
insb
rorb
mov
fildll
test
test
aad
sub
pop
movsl
fidivrs
cmp
push
jo
cs
dec
add
inc
adc
xchg
dec
push
add
pop
mov
jmp
and
fdivp
shll
xchg
lock
push
fisubs
pop
lret
ret
add
lahf
ds
cli
cmp
fidivs
mov
lds
fdivrs
sahf
rclb
nop
add
ds
roll
xchg
test
sbb
cwtl
add
adc
int
lcall
add
out
sub
test
loop
sub
scas
pop
inc
dec
or
or
movsl
or
addl
or
clc
popa
pop
insl
dec
dec
jg
in
iret
rcrl
les
in
pusha
loope
ja
mov
imulb
push
mov
lret
jne
or
scas
fisubrl
lcall
mov
popa
mov
push
mov
pop
pop
mov
js
adc
pushf
pop
and
or
pop
dec
or
cmp
push
mov
addr16
adc
inc
shll
jno
push
inc
dec
nop
mov
orl
cltd
lcall
sub
cmc
daa
lret
lods
stc
fcoml
push
fbld
xchg
loopne
ss
cltd
aas
inc
sub
iret
and
fimuls
out
sahf
adcl
rolb
std
addr16
mov
or
xchg
stos
cmpsb
lahf
push
push
loope
dec
das
jle
ja
xor
test
xlat
pop
mov
imul
pop
addb
push
sbb
andl
ficoml
and
pop
add
mov
xchg
adc
mov
push
fisubrl
lahf
sbb
cli
jecxz
sarl
sub
xchg
inc
loop
push
mul
fiadds
push
lods
push
shrb
sbb
add
or
subl
push
lds
sbb
mov
jne
jle
mov
fmuls
mov
daa
pop
cwtl
fs
inc
sub
in
mov
mov
inc
sbb
in
shr
mov
add
clc
pop
dec
imul
dec
lock
cld
jmp
mov
jb
ss
loopne
stos
cmc
xchg
movsl
lret
ret
jnp
xor
and
pop
aam
insb
dec
arpl
xor
and
mov
xchg
enter
or
int3
ljmp
es
xchg
and
mov
xlat
push
in
lahf
aam
stos
jns
ss
movsl
cmpsb
pop
jmp
roll
mov
imulb
out
loopne
mov
and
push
std
iret
test
inc
lret
repnz
jecxz
pop
fs
movsl
or
jo
lcall
push
cmp
push
orb
dec
xchg
jl
add
lcall
jl
and
jl
jb
icebp
dec
xor
out
inc
lds
inc
testb
xor
ficoms
jbe
dec
das
rorb
nop
xchg
popa
pop
jp
out
xor
rolb
inc
clc
or
mov
popa
out
mov
xor
test
and
in
mov
cld
or
xor
call
cwtl
pusha
push
pop
ret
and
das
cld
sub
xchg
mov
rclb
jbe
in
push
loopne
cmp
mov
scas
test
fsubrl
or
pop
sahf
xor
movsl
in
jecxz
mov
leave
pop
rcrl
jbe
insl
shlb
cmpsb
add
call
ds
imul
sahf
and
cmp
jecxz
xor
mov
in
or
jle
xchg
pushf
or
xor
cltd
mov
fcmovnbe
lock
out
ret
dec
movsb
outsl
out
cld
pop
dec
insb
inc
and
lret
rol
inc
fiaddl
movsl
fimuls
sbb
imul
adcb
cmp
adc
pop
fs
xlat
jl
cmpsl
addr16
jmp
or
fsub
sub
pop
and
xchg
jae
icebp
fnsave
scas
xor
aam
out
pop
into
inc
fiadds
popa
mov
stos
iret
das
pop
inc
jp
idivl
or
je
sub
add
mov
int
jae
mov
cmp
out
mov
xor
pushf
test
pop
mov
popf
jae
mov
addr16
out
xchg
jno
rorl
xchg
clc
mov
loope
outsl
fisubs
shlb
cld
call
mov
bound
das
jbe
outsl
cmpsb
fsubr
jnp
add
push
popf
fs
xor
aaa
jecxz
fwait
cmp
insb
or
repz
mov
nop
xlat
lea
addb
lds
ds
mov
inc
inc
cmp
repz
and
in
mov
jmp
cmpsl
loop
or
fs
push
cld
hlt
jo
pop
xor
sarb
dec
add
into
mov
ss
push
mov
incb
inc
out
cmpsb
sbb
push
mov
pop
push
cltd
sbb
loope
mov
add
mov
xchg
jg
lods
cmp
jo
push
into
push
jns
orb
push
pop
sahf
and
mov
push
dec
push
pop
jae
xchg
adc
mov
nop
adc
lret
pop
jge
jb
cmp
push
movsb
add
xlat
sbb
push
rcrb
sahf
nop
inc
shl
lds
push
mov
push
dec
lods
push
jp
sbb
mov
mov
add
cmp
pop
or
pop
or
adc
mov
je
jae
or
movsb
pop
sub
push
and
and
pop
lahf
mov
add
inc
pusha
mov
cs
adc
push
adc
je
xor
sbb
jae
and
dec
sub
pop
loop
lret
outsl
dec
sbb
pop
xchg
movd
gs
idivb
addb
orb
jg
sub
cmpsl
jae
sahf
jnp
hlt
add
mov
fisttpll
les
popa
push
or
and
jmp
xor
imul
xchg
dec
ljmp
je
lcall
mov
and
insb
or
imul
sahf
or
hlt
or
mov
sub
rcrl
jbe
lret
cmpsb
pop
int
aas
or
cmp
fiaddl
fs
addr16
insb
mov
outsb
popa
test
pop
cs
sub
out
mov
rcrl
fwait
lods
cmp
add
shll
mov
cmpsb
call
jnp
push
push
pop
sbb
sarb
mov
imul
and
into
popa
mov
xor
imul
pop
in
xchg
les
inc
jle
ja
dec
adc
cmp
imull
loope
xor
out
leave
and
pushw
xchg
pusha
insb
ret
lret
stos
sahf
jle
add
or
pop
mov
jmp
mov
mov
inc
mov
mov
xor
xor
pop
sub
in
fxam
or
in
push
cmpsl
cmpsb
jbe
xor
adc
and
mov
and
mov
icebp
xor
pop
fbstp
xchg
shrl
inc
scas
inc
fs
movsl
orb
xor
sbb
stos
and
int3
mov
and
xchg
mov
pop
jne
leave
in
pop
fidivl
xchg
into
imul
enter
les
lock
dec
lods
clc
and
fadds
lods
dec
pop
mov
pop
rol
ja
cwtl
xorb
jne
rcrl
rcll
jnp
int
test
test
aaa
mov
inc
cltd
jecxz
test
lcall
leave
sbb
lods
mov
mov
hlt
enter
out
mov
or
push
test
xor
cli
jnp
aas
or
movsl
sbb
fisttpl
es
inc
add
stc
push
repnz
int
sbb
push
mov
mov
in
push
dec
shrl
xchg
pusha
push
stos
xor
fcoms
push
dec
mov
dec
mov
mov
jno
fwait
push
fcompl
cld
push
push
in
inc
dec
ss
insb
insb
adc
mov
sbb
xchg
shlb
mov
push
int3
lahf
push
stos
pop
inc
pop
test
cld
add
test
test
outsb
daa
inc
out
add
mov
jb
mov
or
cmp
mov
pop
xorb
adc
shl
xor
imul
pslld
inc
mov
cs
dec
fidivrl
push
call
sahf
and
popa
jmp
fdivrs
repz
adc
mov
icebp
out
push
lret
movsb
fcoms
cmp
or
mov
clc
adc
inc
or
fldt
and
sub
adc
divl
sbb
lock
cmp
test
js
add
mov
lcall
jg
lret
sarl
pushf
sub
mov
idivl
cmpsl
das
addr16
test
jge
inc
scas
cmc
push
mov
mov
test
rorl
ljmp
cmp
mov
fistpl
xchg
inc
pushf
jbe
mov
pop
into
xor
xchg
in
push
aam
cmp
out
loope
mov
inc
out
mov
and
popf
das
aaa
push
jb
lods
call
aaa
bound
jmp
mov
lret
in
ret
int3
xor
mov
int3
das
xor
jno
mov
dec
sub
enter
int3
dec
in
aaa
ret
mov
daa
jp
fildl
pop
cmpsb
mov
and
je
test
repz
pop
fadds
mov
pop
pushf
out
insb
jbe
lods
hlt
pop
dec
pop
sarl
inc
jp
cmpsb
adc
dec
adc
fcmovnbe
inc
adc
hlt
inc
mov
loopne
repz
dec
add
movsb
push
push
bswap
cmp
mov
mov
out
mov
sbb
jge
mov
jl
int3
add
or
mov
pop
adc
lret
dec
mov
sub
and
pop
cmc
sbb
xor
fwait
jg
push
and
notl
fwait
and
adc
mov
jecxz
adc
dec
lcall
dec
adc
sbb
mov
xchg
in
std
das
scas
inc
adc
loop
lcall
test
mov
stos
jbe
mov
out
cmp
sbb
mov
andb
repz
pop
push
out
jmp
pop
pop
cli
inc
push
and
stc
mov
mov
push
sbb
jge
jne
add
hlt
filds
sbb
cltd
xor
push
inc
xor
jecxz
std
cmp
cli
sub
ret
pop
out
fmuls
and
stos
mov
xchg
adc
aaa
movsb
jb
push
cld
shl
mov
mov
xor
repz
add
xchg
jmp
pop
psubd
and
and
movsl
mov
cmpsl
jnp
sub
sub
daa
or
xchg
mov
clc
dec
lock
stc
aaa
test
lea
test
iret
pop
mov
repnz
fcmovb
sbb
dec
inc
jns
mov
outsl
push
add
repz
xchg
push
cmp
mov
or
jnp
sub
cltd
aad
scas
aam
enter
dec
fldl
sti
in
addr16
mulb
out
loop
clc
jne
out
mov
dec
push
leave
jbe
arpl
ret
aad
pop
pop
ljmp
jge
inc
cwtl
sahf
std
mov
dec
lret
enter
sahf
imulb
jmp
nop
lock
jmp
cmp
cmc
cmp
addr16
lcall
je
sbb
adc
es
dec
sahf
xchg
inc
dec
test
mulb
inc
movsl
dec
jmp
jno
mov
mov
and
movhlps
arpl
in
adc
lods
mov
std
adc
cwtl
push
jbe
add
push
mov
pop
outsl
xor
dec
arpl
cmp
out
insb
pop
out
xchg
sub
loopne
jmp
out
add
cmp
inc
aad
outsl
push
or
call
daa
insb
lods
movl
xchg
cmp
ret
ljmp
int3
sub
icebp
push
and
lds
cmp
adc
test
enter
jp
idivl
cmp
insb
int
aad
cmp
fbld
jl
js
pop
shlb
or
shl
jmp
das
bnd
data16
mov
pop
repz
dec
jge
push
xlat
outsb
dec
sub
test
and
das
in
dec
or
adc
cld
mov
mov
push
ret
rcll
inc
mov
inc
add
js
inc
ret
out
dec
faddl
or
sbb
xchg
out
inc
mov
jmp
insl
sub
mov
add
outsb
test
push
gs
jo
xor
inc
pop
pop
outsb
mov
adc
bound
adc
or
mov
je
ficoml
mov
sti
rol
push
mov
mov
mov
push
int3
mov
mov
xorl
ljmp
mov
xlat
fcoms
jns
mov
sub
stc
and
pop
test
cmpb
cld
scas
cmp
mov
push
or
push
imul
test
dec
aas
sbb
fwait
pop
fcomp
lcall
adc
mov
cwtl
mov
cmp
idivb
les
or
or
cmp
aad
jg
cmp
sbb
jle
pop
push
mov
cmp
mov
mov
add
mov
jbe
dec
ds
adc
movsb
adcl
or
lds
adc
aas
fisttpll
les
dec
jnp
push
enter
ss
lcall
add
stc
rcll
adc
leave
stos
insb
jae
cmpsl
xor
dec
ss
dec
inc
in
cmp
and
xor
sarb
int
and
data16
mov
push
repz
test
pop
enter
or
inc
push
sub
jb
lds
push
scas
jmp
cmpb
pop
sub
stos
xchg
xor
xchg
pop
mov
lods
add
pop
sti
test
mov
js
mov
dec
cs
push
ds
cmp
cmp
adc
loope
adc
sahf
sub
js
mov
pop
enter
push
pop
ret
adcl
mov
stc
mov
repnz
adc
popf
mov
sbb
test
xchg
push
fdivp
lcall
ss
and
cltd
mov
bound
outsb
or
fbld
imul
mov
mov
shlb
lods
das
cmp
das
call
loopne
into
pop
inc
jg
adc
les
add
cld
jl
xchg
jge
test
daa
icebp
sub
lds
sub
xchg
xchg
into
loop
inc
stos
into
mov
testb
sahf
pop
popf
mov
mov
cmp
mov
cmc
sub
test
push
fildll
js
out
xchg
in
dec
les
mov
sbb
sbb
pop
jno
popf
mov
cmp
cmp
dec
jmp
subb
sahf
in
sbb
add
xor
sbb
ja
jmp
and
les
xlat
push
imul
cltd
lock
adc
pop
cs
pop
ss
xor
jge
jg
jg
out
test
xorb
nop
cmpsl
mov
stos
leave
mov
pop
mov
adc
ds
rcr
sub
lcall
mov
xchg
sub
ss
push
insl
jo
push
fcomp
icebp
adc
decb
mov
inc
dec
pop
lods
std
jle
xor
mov
cmpsl
sbb
push
int
data16
rclb
jnp
jne
sub
hlt
int3
rcr
data16
mov
imulb
push
xor
mov
data16
mov
sbb
insl
fs
arpl
loopne
stos
dec
add
dec
push
imul
fs
adc
cmp
push
push
dec
jg
inc
xor
pop
mov
sub
les
adcb
je
jns
push
xchg
js
lods
jns
sbb
sub
pop
jg
mov
jne
sub
aam
push
pop
adc
cmp
dec
call
dec
cwtl
xor
push
lods
loope
pop
inc
imul
fildll
test
jae
push
and
mov
movsl
in
scas
mov
scas
sti
lock
push
add
popa
push
mov
bswap
mov
jne
fbld
dec
jnp
fdivl
mov
mov
mov
mov
dec
push
scas
cmpsb
sahf
je
inc
adc
push
dec
cmpsl
sub
out
push
pusha
mov
and
push
jnp
mov
sbb
mov
das
cmp
dec
insb
pop
ljmp
ja
xor
or
push
inc
mov
lret
dec
xor
and
int
pop
cmpsb
outsl
popf
aas
dec
push
cwtl
mov
xor
gs
push
xor
dec
addr16
adc
cmpsl
scas
in
filds
inc
adc
fs
mov
arpl
fwait
cmp
mov
cmp
jae
fisubs
sbb
jecxz
pop
dec
movsb
icebp
mov
jl
pop
fucomip
sti
push
xlat
sub
sarb
cmp
rclb
mov
xor
pop
in
lcall
sbb
mov
rcrl
dec
jb
mov
push
je
mov
test
cs
jo
lock
test
ja
test
and
jl
sbb
push
dec
xor
into
bound
and
add
jne
addl
leave
xchg
sarl
jecxz
das
testl
loope
insb
int3
or
fildll
adc
in
sbb
test
jp
pop
fs
cld
xchg
jge
iret
fildl
call
mov
dec
dec
and
push
mov
pmullw
mov
rcll
sbb
sub
scas
outsl
inc
call
imul
out
rorb
inc
mov
jo
mov
ret
push
ss
sbb
and
mov
ja
xlat
and
hlt
decl
xor
dec
ss
into
push
lcall
fldcw
jmp
aad
inc
add
and
lods
xor
sub
xchg
out
stos
cmp
je
adc
mov
add
xchg
xor
dec
pop
lret
cld
mov
loop
push
in
jne
mov
adc
js
sub
mov
and
and
loop
enter
ljmp
adc
jecxz
jno
mov
xchg
push
loop
movsl
repnz
inc
insl
aaa
cmp
pop
mov
stc
dec
out
test
jg
and
inc
cmpsl
mov
xor
mov
jp
andl
aam
jmp
mov
lcall
adc
push
daa
dec
inc
outsb
fcmove
mov
mov
lahf
jmp
movsl
stos
add
jp
repz
add
js
shrb
dec
xor
jl
cwtl
repnz
iret
lods
or
xor
mov
pop
fildl
xor
fidivrs
adc
push
jnp
mov
icebp
shll
push
pop
pop
or
mov
jno
and
inc
sar
sub
jbe
int
cmpl
pop
pop
mov
fsubrp
jecxz
cld
inc
in
ds
cli
jge
push
pushf
push
int3
and
push
loop
mov
push
loop
pop
adc
push
add
and
dec
dec
jns
xchg
sub
ljmp
repz
lods
cwtd
lock
sbb
insl
sbb
gs
jb
aaa
ret
sbb
xchg
mov
pop
sub
push
sahf
or
mov
push
push
ffreep
add
roll
shlb
js
stc
subl
test
cmp
or
outsl
leave
or
gs
test
pop
fiaddl
repz
test
mov
repnz
sbb
pop
in
xchg
sub
in
add
cmc
add
cmp
pop
lcall
outsb
stos
loopne
mov
push
int
lods
jle
popa
orl
sub
ds
sbb
call
in
call
lods
xor
int3
iret
mov
mov
dec
add
in
or
sub
cmp
fdivs
loope
mov
das
or
or
and
lret
sub
clc
ret
fistps
sti
jb
call
fadd
sbbb
mov
mov
and
jp
js
mov
dec
mov
ret
shrl
and
mov
int
inc
rorl
adc
pop
sbb
xlat
ja
fimuls
fsubs
xor
push
dec
enter
push
mov
mov
imul
adc
sub
dec
inc
popa
lcall
sub
ja
inc
pushf
xchg
and
ret
and
and
jae
inc
jge
push
fsts
mov
dec
cmp
xchg
xlat
rorl
jmp
and
ss
mov
mov
int3
push
xchg
faddp
jp
mov
popa
or
ljmp
imul
hlt
jno
cs
xchg
dec
dec
fwait
rorl
xor
fsqrt
pop
mov
adc
push
mov
repz
ja
or
xchg
or
test
cmp
mov
pushf
rclb
sub
jnp
movsb
ds
in
lea
stos
add
test
cs
jbe
or
je
sbb
out
add
insb
xchg
sub
test
mov
popf
pushf
pop
leave
inc
dec
out
aaa
push
mov
jne
mov
xor
pop
fs
jo
cli
aam
cmpsl
clc
xchg
and
jnp
stos
test
dec
mov
lds
fcompl
fistpll
mov
gs
mov
adc
cli
cmp
outsb
mov
loope
xchg
daa
push
into
push
test
addr16
jnp
dec
pushf
sub
push
enter
pusha
push
push
jmp
addl
bnd
mov
mov
ret
pop
cmc
fsubrs
cmp
push
jp
stos
mov
mov
jo
addr16
aas
dec
lea
shlb
dec
addr16
scas
jecxz
dec
scas
cmp
lock
xchg
das
mov
mov
cmc
jb
sub
add
subl
or
loop
sbb
mov
xchg
cmp
push
pop
movsl
sbb
cmp
les
lea
movsl
jmp
dec
add
out
ss
enter
ja
cmp
mov
add
idivl
adc
cmpsl
cmp
lahf
add
mov
shlb
dec
jp
sbb
pushf
sub
lcall
push
pop
adc
cmp
in
inc
loopne
mov
jo
repnz
sbb
les
or
aam
setp
pop
daa
add
mov
adc
fsubrl
icebp
out
sub
dec
int
subl
cmp
xchg
add
int3
icebp
iret
mov
mov
cmpsl
test
jecxz
mov
xchg
sbb
and
movsl
adc
adc
sub
sub
call
sbb
dec
test
sbb
adc
jne
add
mov
mov
and
pushf
push
xor
push
mov
hlt
lea
mov
dec
and
push
mov
movsl
adc
ljmp
jne
lahf
shll
xor
std
loope
std
or
dec
pop
popf
outsb
movsb
movsb
sbb
push
or
test
test
pop
and
jns
divb
pop
jg
mov
data16
jge
sbb
push
aad
sub
sarl
in
push
and
cmp
lock
cmp
aaa
jge
inc
mov
adc
cmp
sti
addr16
sbb
pop
lods
fiadds
gs
test
dec
call
lahf
idivb
mov
xor
outsl
lahf
fdivrl
movsl
sub
rol
jecxz
fidivl
cmp
lcall
pop
in
pop
fldt
lahf
popf
jecxz
push
and
hlt
push
jo
dec
scas
aaa
xchg
xchg
in
xorb
inc
push
xchg
add
pop
fisubl
hlt
popf
mov
mov
pushf
repnz
and
add
pushf
mov
dec
cwtl
push
js
ret
jns
add
mov
sub
test
dec
movntps
shl
xchg
jg
scas
je
dec
mov
cld
in
xchg
repz
cmp
jo
jbe
aam
sub
outsb
stos
mov
stc
lahf
ss
outsl
cmp
pop
lcall
mov
icebp
movsl
xchg
mov
jb
adc
insl
lret
sub
pop
xor
dec
mov
in
aad
sahf
test
dec
add
loope
cmc
inc
push
imul
cli
loope
adc
dec
repz
sar
or
or
mov
mov
mov
jns
cmpl
sbb
ror
fs
sbb
cmp
xchg
mov
mov
pop
popa
mov
and
cmp
ss
cmpsb
push
push
dec
adc
xchg
lahf
cs
sbb
ljmp
popa
jns
jmp
push
cs
sub
daa
mov
sbb
dec
push
dec
dec
pop
iret
cmp
jb
sub
cmp
mov
negl
xor
in
dec
fbld
xchg
test
and
jmp
push
jmp
ljmp
mov
out
test
cmp
push
inc
shll
push
lods
in
jns
inc
push
repnz
add
popa
xor
mov
imul
cwtl
lods
mov
xchg
pop
xorb
and
iret
cmpsb
sbb
outsl
fstpl
xor
inc
mov
scas
and
popf
test
pop
add
loope
cmp
rorl
mov
shlb
push
push
imul
in
pop
loop
rclb
fwait
sub
sbb
xor
mov
fisubs
aad
iret
mov
int
xor
pop
inc
adc
scas
stc
mov
cmpsl
xorb
outsb
lods
sbb
std
xchg
test
push
ret
outsl
cmc
iret
out
pop
icebp
sbb
push
lret
cmp
xchg
rorl
sbb
das
xchg
mov
push
sub
icebp
stc
aam
xchg
cmp
mov
jne
pop
cs
clc
jno
mov
loopne
push
jmp
xchg
cmp
sbb
ret
insl
mov
xchg
jmp
out
fbstp
fnstcw
into
stos
sbbb
pop
mov
mov
mov
imul
pop
push
mov
ret
int
jae
cmpl
push
cld
jne
xchg
push
cmp
push
vmovups
inc
dec
jl
xchg
loop
xchg
cmc
incb
cmp
stos
inc
mov
cwtl
adc
ret
push
mov
cli
dec
xchg
mov
pop
mov
mov
shll
xlat
stc
js
ja
bound
mov
dec
scas
fwait
mov
dec
dec
rcrb
jp
cmpsb
mov
stc
mov
jae
insl
or
mov
shl
or
in
clc
and
mov
dec
arpl
ss
jb
sub
rolb
outsb
jae
mov
or
mov
jb
ret
aam
fcoml
cld
cmp
dec
imul
cmp
sub
pop
xlat
push
push
push
pushaw
shll
mov
scas
sbb
inc
pusha
nop
cmp
cmpsl
push
mov
call
cmpsl
sub
out
dec
adc
mov
shll
testl
inc
mov
sub
stc
rorb
out
iret
leave
mov
or
and
add
add
mov
rcr
int3
enter
xchg
add
ss
inc
je
ljmp
out
sbb
mov
aad
inc
mov
sbb
shll
dec
and
push
scas
std
es
push
dec
imul
jg
add
jg
mov
subl
aam
jge
cld
sarl
jg
mov
sub
jge
xor
inc
mov
ds
inc
push
lods
imul
cmpsb
inc
add
pop
imul
ret
inc
stos
jl
xchg
jbe
frstor
imul
jbe
xchg
daa
pushf
fildl
jne
push
sahf
jecxz
pusha
fsts
stos
mov
sbb
rclb
mov
sub
pop
sub
iret
lret
enter
and
jmp
mov
rep
outsl
fstpl
xor
loop
inc
push
shll
mov
fistl
mov
pop
mov
push
pusha
push
xor
call
jne
ret
jbe
push
pusha
push
mov
sub
ret
jp
push
push
fisubl
loope
cld
cmp
stos
test
sub
lcall
jb
sub
xlat
xor
jae
xchg
test
fadds
stos
mov
mov
add
mov
and
popf
or
loopne
jbe
cli
mov
dec
mov
adc
jns
push
adc
jnp
pop
into
adc
pop
andb
popf
int3
sahf
pminub
mov
pop
inc
xchg
pop
adc
add
jnp
fs
mov
jne
jb
cmpsl
adc
xchg
subb
or
and
les
aad
jmp
test
sbb
xchg
fsubl
lret
ret
sub
inc
mov
popa
push
lea
xchg
push
scas
jae
lahf
clc
aad
jg
mov
push
cmp
add
ljmp
adc
mov
cmp
push
or
sub
push
and
xor
js
or
mov
fwait
mov
rcrb
jle
jp
call
lahf
cmp
cmp
imul
cmp
jmp
jmp
mov
pop
xor
popf
cmp
pushf
mov
sbb
sub
xlat
mov
adc
jp
aas
outsb
sbb
movsb
call
add
xchg
jle
jge
pop
ffreep
stos
lock
pop
movhps
jo
frstor
ficoml
fldl
inc
in
fidivrl
loop
sub
lret
js
or
fildl
stc
int3
and
sar
mov
shlb
adc
dec
imul
push
out
mov
cmpsl
adc
push
test
nop
imul
inc
leave
lea
mov
in
imul
and
or
add
jg
es
sub
push
lea
mov
dec
lcall
cmp
adc
add
sub
mov
rcl
jae
dec
push
subb
xchg
xor
pop
dec
ficomps
push
call
cli
loop
test
cmp
lret
mov
or
cmpsb
shll
mov
std
cli
cmp
cs
sbb
leave
fs
and
cwtl
test
inc
add
jb
decl
adc
lock
jbe
into
ljmp
sub
inc
jns
mov
mov
sbb
jae
cmp
scas
or
or
fsubrs
fildl
pop
mov
icebp
mov
fldt
fmuls
xchg
adc
cld
xchg
movsb
ds
jne
lret
repnz
cmp
scas
mov
lret
aam
dec
insl
lret
fcomps
jo
das
inc
shr
xor
push
loope
out
pop
jmp
push
cmp
and
sbb
or
movsl
cmp
shll
shlb
cltd
movsb
cmpsb
xchg
mov
adc
lods
push
or
sbbb
add
insl
cmp
pop
cli
or
push
push
in
xor
jb
in
jne
rol
mov
adc
xor
enter
pop
push
lret
enter
fisubl
pop
aas
stos
mov
xor
xor
push
cmp
mov
in
xchg
out
dec
inc
ficoms
inc
and
dec
xor
mov
cmpsb
pop
jl
fstpt
pop
leave
js
es
mov
int
es
not
arpl
push
inc
push
test
mov
ds
leave
lcall
in
inc
push
ss
test
mov
dec
push
push
sub
daa
mov
jb
xchg
xor
jnp
cmp
aaa
xlat
or
test
cmpsb
push
arpl
or
aaa
rcll
fistl
hlt
mov
mov
aad
jns
pop
jns
addr16
es
cmp
add
ds
mov
pushf
jmp
or
jle
fnstenv
sbb
test
cmp
mov
lock
xchg
push
and
mov
mov
movsl
out
push
and
arpl
cwtl
adc
or
sbb
pop
imul
cltd
fdivrp
xchg
ds
push
mov
loop
dec
xor
rcll
jg
das
clc
sbb
gs
inc
out
aaa
sbb
cli
push
mov
xchg
and
sbb
dec
push
or
les
push
push
ret
fwait
cmp
popl
subl
lahf
sti
in
gs
or
out
ficompl
dec
and
mov
cltd
adc
mov
jge
pop
or
sub
arpl
fisubs
adc
mov
test
pusha
pop
or
ror
lcall
dec
test
pop
pop
push
cmp
jl
sub
sahf
andb
push
call
mov
mov
in
jmp
js
cmp
add
ss
xor
ss
jecxz
add
cli
mov
je
out
gs
ljmp
or
cmp
test
sub
out
data16
xor
cwtl
cmpl
sbb
nop
xchg
push
or
insb
sub
les
and
cmp
push
fwait
leave
add
jnp
dec
xor
scas
ret
out
push
xor
mov
mov
cmpl
sub
mov
js
inc
lds
dec
pop
ret
dec
pop
es
dec
and
scas
loop
mov
aaa
mov
aad
cmpsl
mov
in
std
fbstp
fidivl
mov
mov
lods
insl
pop
adc
mov
cmp
inc
sub
fs
pop
fs
ret
jbe
int
andl
outsb
inc
addr16
cwtl
fadd
imul
mov
loope
mov
cmp
movsb
imul
jae
jmp
movsb
cwtl
test
jg
sub
or
iret
lret
mov
xor
shrb
repz
push
push
shlb
jno
mov
jb
bound
push
or
loopne
xchg
fnstcw
out
adc
inc
popf
ljmp
outsb
lock
mov
cmpsb
pop
and
add
mov
add
outsb
out
sbb
cmp
xor
push
jo
push
daa
lcall
inc
sarb
je
jnp
jmp
cmp
cmc
and
sbb
scas
stos
or
pop
pop
fildll
or
cmc
ds
push
fisttps
push
lods
cmp
fistps
call
push
cwtl
cmp
dec
lret
mov
adc
mov
mov
rcrl
pop
jle
dec
mov
push
push
jbe
or
in
pop
cmp
aam
cwtl
sub
lods
mov
or
add
mov
out
icebp
mov
inc
jb
xchg
pop
xchg
and
test
dec
jl
test
xchg
xchg
mov
subb
outsb
and
or
and
mov
adc
lret
js
adc
cmp
aam
insb
out
inc
inc
out
in
sbb
mov
aad
rol
pusha
lods
insl
jg
fcoml
mov
cmp
neg
pop
lods
xchg
rcrb
xor
inc
xchg
enter
push
lret
inc
cli
xor
addr16
pop
test
in
fstp
outsb
mov
mov
mov
xlat
sub
inc
mov
int
pop
mov
sbb
loopne
sub
mov
jp
movsb
mov
lret
sub
insl
lret
out
mov
aas
arpl
mov
ret
loopne
mov
add
sub
mov
mov
cmpsl
out
add
jo
lea
cmp
scas
repz
sbb
jne
inc
leave
mov
pop
jo
jne
ss
cli
arpl
adc
fmull
lods
mov
or
icebp
jp
mov
ret
sub
enter
fyl2xp1
push
fisttpll
lret
dec
je
sahf
mov
test
push
imul
jge
xor
sahf
outsb
outsb
push
push
jae
repz
adc
inc
xchg
jg
or
test
xor
jle
xchg
call
push
xor
insl
sub
icebp
mov
nop
gs
dec
mov
out
lea
shll
aas
nop
lea
sbb
cmp
mov
loopne
mov
outsb
decb
rcll
pop
shl
orl
mov
scas
jnp
lods
adc
xor
or
imul
ljmp
push
jns
lock
mov
daa
mov
dec
sbb
es
pop
arpl
and
lret
lock
adc
mov
push
aaa
sub
dec
mov
test
stos
or
push
sbb
ljmp
dec
adc
jge
in
sarl
fldl
cld
cmpsb
mov
in
movsb
xor
jp
cs
xor
rclb
in
aas
test
in
mov
pop
xchg
fs
cmp
test
iret
test
jle
xor
and
test
movsl
test
hlt
mov
push
jl
shl
ret
mov
push
add
push
mov
mov
es
inc
cld
mov
das
pop
pusha
jmp
daa
sbb
dec
jns
dec
out
jl
mov
xchg
hlt
loop
jge
mov
inc
aaa
pop
xchg
and
imul
pushf
rcrl
in
dec
fiadds
sub
adc
jb
mov
popa
push
add
add
jge
sbb
std
and
mov
rcl
pushf
sub
lcall
and
add
sub
jb
jl
xchg
movd
lret
shrb
mov
lea
pushf
xchg
loope
imul
jnp
stos
fwait
ja
or
shrl
lcall
push
testl
mov
inc
xor
leave
lret
mov
or
sub
jno
lret
mov
out
dec
sbb
fwait
arpl
or
and
imul
and
add
pop
dec
fxam
cmp
add
aam
pop
xchg
mov
inc
ret
push
jns
lods
xor
cwtl
outsb
lods
jl
inc
mov
xor
push
andb
xor
xor
rorl
sbbb
mov
test
addr16
sbb
push
addl
iret
movl
repnz
sbb
cld
lahf
sub
pop
fstpt
cmp
test
jae
lds
aas
js
movsl
adc
dec
jo
out
inc
imul
fiadds
sub
leave
pop
notl
aad
repz
inc
pop
push
out
sub
push
negb
add
out
or
aam
vmwrite
test
inc
cld
test
sub
mov
sub
in
movsl
sub
push
pop
inc
outsb
cmp
repnz
aam
dec
dec
das
and
and
je
xlat
jb
sub
pop
jge
push
test
mov
sbb
pop
xor
adc
xchg
repnz
popa
shrl
popa
adc
and
fdiv
push
dec
cmp
pop
cmp
addr16
ja
push
jge
mov
and
dec
mov
testl
test
rclb
inc
mov
packsswb
lcall
sub
imul
xor
or
rclb
xor
lds
xchg
incl
push
aaa
mov
sbb
push
aas
sub
mov
out
mov
pop
add
sub
aad
fdivs
pop
in
rol
add
mov
pop
inc
pop
xchg
aam
aam
jp
ss
leave
fsubr
adc
insb
jle
neg
cmp
shrb
add
cld
dec
push
push
testb
sti
lcall
rcrb
xorl
fidivrs
cmp
dec
test
pop
adc
mov
stos
mov
adc
mov
push
insl
in
idivl
icebp
mov
neg
das
insl
mov
sbb
sub
imul
loopne
cmp
sbb
repnz
cwtl
dec
cld
arpl
xlat
std
shll
fstpt
roll
jno
aas
test
inc
cmp
xlat
into
sub
gs
or
enter
inc
dec
lea
mov
cmc
push
jp
gs
lods
subb
aam
enter
pop
push
mov
fcomi
ror
stos
stos
pop
cwtl
stc
subl
or
inc
out
dec
xchg
adc
and
stc
out
loop
mov
mov
sti
push
or
test
xchg
nop
xor
pop
adc
ljmp
xchg
jmp
outsl
pop
xchg
scas
dec
jnp
inc
pop
test
aas
xorb
aad
mov
and
das
and
jmp
cld
push
fcmovnbe
mov
repz
lret
movsl
xchg
fdivs
add
mov
pop
jl
jb
mov
inc
das
popa
lcall
bound
sub
aaa
lahf
mov
dec
int
inc
mov
pop
push
cs
jg
shr
sbb
push
lea
sarl
icebp
add
xor
inc
scas
jl
mov
mov
sub
xchg
test
add
ljmp
subl
adc
leave
out
sbb
je
pop
pop
add
xor
xchg
xchg
lahf
sub
push
into
lcall
fwait
jb
or
idivl
xor
jg
add
inc
and
repz
aam
bnd
jns
movsl
pop
push
fxch
push
sub
or
jg
and
gs
shlb
jecxz
pushf
fisttpl
cmp
pop
fdivr
rorl
xchg
rorl
cmpsb
or
xchg
jo
mov
push
jp
sub
push
inc
pop
push
push
adc
pop
jae
mov
ljmp
adc
ljmp
aam
mov
and
arpl
add
jbe
adc
in
jae
loopne
gs
inc
push
push
dec
lret
in
repnz
pop
cmp
pop
jo
inc
or
inc
repz
testb
xor
scas
jo
mov
jecxz
jnp
outsb
add
lret
cs
popf
frndint
sub
dec
adc
sub
into
push
lahf
out
scas
jle
faddl
test
std
and
fdivr
ja
jl
sub
aaa
test
adc
insb
into
jb
adc
lods
push
sbb
sub
jb
cmp
js
scas
push
and
outsl
jp
call
and
std
mov
pop
and
xchg
mov
sbb
mov
cmc
push
repz
or
sub
sbb
fdivr
jae
divb
imul
adc
push
xlat
add
ret
jl
aaa
or
inc
jmp
mov
pop
cmpsb
imul
or
imul
mov
arpl
loop
lods
les
cmp
inc
pop
add
xor
movsb
loope
dec
jns
dec
out
pop
and
aad
push
nop
test
push
xchg
es
insl
insb
pop
mov
frstor
enter
scas
ret
ret
sbb
scas
dec
es
imul
fdivrp
lods
negb
scas
leave
mov
fiadds
push
lea
cwtl
sarb
hlt
loop
mov
in
out
jno
cs
xlat
ss
sub
jae
and
call
mov
push
mov
dec
fisubl
fcomps
in
or
adc
aaa
mov
mov
dec
xchg
ret
imul
adc
push
mov
add
jne
aam
add
repnz
mov
out
adc
add
cmc
xchg
outsl
out
and
pop
cwtl
xchg
push
push
push
pop
in
test
repnz
sbb
pop
stc
jecxz
lock
mov
daa
repz
fs
pop
or
add
jp
xor
out
cmpsl
movsb
push
mov
mov
dec
sti
fsubs
dec
push
add
cltd
call
xchg
pop
inc
inc
fmuls
cmpsl
add
roll
dec
sahf
sbb
cwtl
out
xchg
inc
push
mov
push
stos
sub
jge
pop
xlat
push
inc
js
sbb
cs
out
ljmp
inc
adc
repnz
sub
mov
push
xchg
clc
pop
cmp
jge
pop
movsl
aaa
adc
jnp
push
xchg
pusha
fcmovne
sahf
js
pop
sarl
and
in
ret
sti
ss
add
arpl
cmp
fwait
sub
push
int
enter
stc
lret
cmpsl
sub
or
or
xchg
mov
mov
hlt
xor
adc
je
and
cwtl
in
and
xchg
arpl
clc
jns
imul
imul
ja
aad
mov
outsb
dec
cld
pop
in
jb
in
aad
stc
inc
xorb
movsl
fcmove
cmp
repnz
sbb
mov
rolb
push
popf
and
std
xor
or
and
mov
sbb
jmp
pop
repz
arpl
fildl
popa
jns
mov
mov
in
popf
rclb
sub
popa
bound
inc
jp
cltd
mov
jne
cmpsb
fisttps
test
add
daa
add
jo
xor
neg
test
insb
cwtl
jp
hlt
dec
jge
test
hlt
imul
lea
cmp
lods
mov
repnz
mov
leave
add
shr
push
movsl
test
jne
push
inc
mov
cmp
gs
seta
sbb
jne
lds
aas
in
cmp
xor
out
fldl
cmpsl
and
mov
aas
or
test
pusha
sub
jne
dec
scas
sbb
mov
insb
dec
popf
and
stos
mov
mov
jmp
daa
sti
xor
xchg
daa
int
outsb
fcmovnb
call
push
outsb
sbb
xchg
test
ja
fcmovnbe
xchg
push
push
out
push
push
faddl
push
sbbb
rorb
or
pop
hlt
sbb
std
insb
in
jbe
or
mov
lea
or
and
sbb
fiadds
inc
xor
inc
jns
loopne
fists
push
test
jne
sub
cwtl
sbb
sub
int
movsl
aam
sbb
cmpsb
pushf
mov
lds
jecxz
lea
lea
sub
mov
xchg
pop
sbb
jne
lods
sbb
dec
insb
pushl
jae
sub
jecxz
sub
push
xor
and
jle
mulb
rcll
mov
popa
in
movsb
jecxz
pushf
sbb
pushf
sbb
cld
dec
jmp
xchg
fiadds
dec
cmp
cs
push
push
out
mov
jns
test
mov
imul
pusha
cli
out
nop
ret
sbb
in
stos
dec
inc
mov
or
fwait
xchg
mov
sbbl
sub
sbb
or
call
call
outsb
add
sub
loope
int3
in
sub
insb
push
into
mov
in
data16
xchg
mov
mov
imul
mov
lcall
inc
rorb
in
mov
shrb
adc
repz
prefetchnta
push
rol
sub
imulb
out
flds
xchg
add
mov
je
xchg
cmp
test
testb
mov
sbb
dec
fucomp
es
sti
js
add
insl
data16
shr
paddq
cli
ljmp
add
cli
push
je
out
cltd
dec
push
sbbb
std
push
cmpsl
cmpsl
imul
ljmp
dec
mov
sbb
ss
cmp
xchg
cmc
fsubr
pop
inc
test
sti
dec
pop
int3
pop
xor
fiadds
popl
sbb
movsb
aam
data16
jp
sub
push
call
aam
sbb
inc
pop
mov
hlt
dec
repnz
pop
fstl
push
fstpl
dec
inc
mov
mov
xchg
cmpsl
sbb
mov
mov
mov
cli
sub
sbb
movsb
jo
cmp
shl
pop
sarl
dec
inc
push
mov
testb
jmp
inc
mov
sbb
mov
test
push
ret
sbb
fwait
push
insl
pop
jno
loop
add
in
loop
mov
inc
sahf
xor
rolb
mov
jae
pop
stos
mov
mov
sahf
push
pushf
mov
dec
loop
pop
add
cmpl
inc
fs
lods
sarb
push
imul
add
cmp
or
xor
dec
test
xchg
pop
leave
add
aas
xlat
cltd
out
mov
xorl
clc
and
mov
mov
loopne
pop
xlat
or
insl
push
mov
repz
out
pop
sub
out
inc
jb
and
sub
mov
or
jge
sbb
pop
push
xchg
pop
ret
gs
sahf
jno
xor
notl
dec
cltd
scas
mov
aas
cmc
dec
into
inc
adc
and
lcall
pop
jb
pop
push
xchg
pop
and
dec
mov
xchg
scas
jae
jns
js
sbb
loop
sti
sub
jns
jp
or
xchg
stc
daa
inc
cmp
call
push
scas
aam
dec
add
outsb
ror
jns
icebp
dec
dec
jl
push
mov
pop
fucomi
loopne
and
pop
xor
bsf
add
sbb
fdivrs
sti
shlb
cmp
clc
sbbb
jne
or
dec
lds
push
cmp
mov
int3
dec
sti
mov
add
cmpsb
ljmp
lods
pop
lcall
into
push
mov
aaa
bound
cwtl
push
adc
idiv
push
pop
outsl
pop
adc
inc
mov
mov
adc
icebp
ljmp
mov
jns
jo
repnz
enter
stc
mov
mov
inc
fisttpl
jae
sub
adc
stc
and
nop
in
enter
or
in
mov
mov
inc
enter
mov
in
in
xor
mov
sub
popf
mov
push
dec
add
sub
mov
xor
leave
mov
jno
jmp
sub
out
daa
xor
in
rep
add
test
or
imul
shl
out
test
popf
pop
clc
sbb
lahf
adc
adc
or
arpl
mov
jge
xchg
mov
jo
add
lret
int
push
clc
pop
dec
sbb
add
mov
sbb
cmp
cmp
pop
icebp
int
gs
push
sbb
push
call
lea
outsl
push
push
xor
dec
rcl
push
fiadds
push
fstpl
stos
loop
adc
dec
push
popa
xchg
jmp
sub
xchg
loop
mov
out
das
imul
xor
lahf
cmp
xchg
push
stc
adc
movsl
xor
push
xchg
push
dec
roll
jle
add
aad
fistl
cmp
ret
rcl
jne
and
cmp
mov
push
pop
or
mov
pop
and
inc
mov
xor
movsl
xor
pop
push
hlt
test
pop
jne
push
sub
push
out
mov
push
std
xor
cltd
xchg
lret
jae
ficompl
pop
cmpsb
cmp
fsubrp
scas
andl
xchg
mov
inc
pusha
lcall
dec
dec
inc
pop
insb
mov
mov
adc
test
jmp
aaa
cmp
int
jecxz
cmpsl
ljmp
rcrb
in
xor
inc
mov
jl
cmpb
in
pop
lahf
or
sbb
popa
cmp
sahf
cmp
dec
addb
xchg
in
out
sbb
cmp
lahf
cmp
inc
movsl
shll
jl
mov
push
cld
enter
sbb
dec
stos
inc
mov
adc
call
clc
outsl
outsl
xchg
push
std
adc
out
das
nop
add
pop
fwait
aad
inc
dec
pusha
jo
xlat
add
pop
mov
ljmp
lock
cmp
jne
loope
add
push
aam
jecxz
inc
js
pop
loopne
push
add
out
and
dec
lcall
xchg
fcoms
inc
scas
jo
dec
shlb
ss
sbb
add
xchg
movsb
mov
gs
dec
int3
fwait
mov
ja
addl
xchg
test
clc
mov
pop
mov
cmovg
sbb
js
add
mov
mov
lock
in
imul
push
cmp
leave
or
pop
and
jge
pop
and
testb
cmp
sbb
sub
sbb
arpl
jae
arpl
jge
jbe
nop
ds
sbb
shll
jle
subb
inc
xchg
hlt
repz
mov
dec
cmp
pop
fiaddl
outsl
pop
enter
cmp
xchg
pop
push
loope
cli
enter
aas
add
sti
sbb
pop
dec
jnp
mov
inc
or
or
les
push
add
subl
out
clc
xor
jecxz
fldcw
mov
outsl
mov
xchg
push
int3
xchg
jae
pop
mov
jp
enter
xchg
pop
cltd
xchg
sub
cmc
cmc
sbb
lock
mov
sbb
dec
adc
cs
data16
lahf
cli
mov
pop
mov
scas
lods
nop
push
shlb
sub
push
push
daa
push
sub
mov
push
rcrl
repnz
movsl
xchg
mov
icebp
test
cltd
or
mov
loope
pop
shll
pop
cld
add
divl
mov
xchg
inc
sub
mov
cmp
mov
aas
mov
in
cmc
icebp
loope
les
jbe
pop
ljmp
inc
lret
pop
out
pop
mov
addl
sub
movd
sub
push
pop
jecxz
and
cmc
push
jbe
leave
jecxz
popl
sbb
fidivrl
fdivp
pop
test
lock
cmc
push
push
addl
jle
scas
cmp
jne
mov
sti
shll
out
int3
repnz
rclb
test
push
pusha
adc
sub
and
stos
xchg
xor
jae
dec
nop
push
ret
jmp
push
xlat
and
add
movsl
bnd
mov
orb
jae
sub
pop
insl
cmp
test
xchg
ss
shr
dec
icebp
sbb
mov
out
xchg
add
and
mov
pop
inc
sbb
in
and
adc
mov
xor
lods
mov
jno
lret
aas
aam
add
pop
cmpsl
lods
out
daa
pop
xchg
mov
nop
movsl
push
inc
call
mov
ret
mov
mov
jge
outsl
insb
rorb
mov
or
movsl
mov
std
mov
shl
xor
pop
push
cmc
test
jmp
xchg
inc
pop
xchg
fdivrl
push
cli
jbe
leave
test
imul
lods
fwait
and
add
and
setb
sub
xchg
shll
test
insb
jns
les
push
mov
jns
movsl
xor
ja
sahf
xchg
add
cltd
sbbl
ret
mov
cmp
loop
cmp
decb
mov
xchg
xchg
stos
ss
lods
lods
add
scas
xchg
xchg
or
dec
jnp
out
add
imul
aaa
mov
fmulp
mov
enter
sbb
pop
and
mov
pusha
mov
mov
cmpl
test
int3
mov
aaa
push
jle
fnstenv
mov
mov
mov
ficomps
into
mov
push
lret
in
in
into
ret
ret
fcomi
inc
cltd
mov
in
arpl
mov
xor
mov
jecxz
mov
cs
cmp
sub
or
pop
aam
out
enter
aam
xor
movsl
addr16
cmp
cs
fwait
and
xorb
data16
hlt
pop
insb
jne
inc
xchg
sub
ret
gs
xor
insb
push
das
out
xchg
imul
popa
push
push
int3
dec
jge
jns
jbe
das
xchg
out
mov
orb
pop
inc
aaa
dec
repnz
clc
dec
xor
mov
movsb
sbb
in
fldt
repnz
das
in
jnp
mov
fiadds
pop
xor
sahf
inc
mov
lahf
sti
out
inc
ds
pushf
xchg
push
aad
lea
adc
ret
lea
cld
adc
insl
push
dec
fsubrp
sub
rolb
adc
orl
jbe
rcrb
pop
imul
sub
icebp
pop
jbe
mov
mov
loop
call
cli
sbb
aaa
or
loopne
js
inc
lods
push
add
je
imull
push
gs
movsb
cmc
or
pop
scas
lret
lahf
or
flds
sub
pop
push
repnz
add
lret
fidivrs
fstps
dec
add
shrb
xchg
hlt
lret
hlt
sbb
jae
out
adc
jo
loop
fs
das
dec
out
add
sub
scas
pusha
hlt
arpl
sti
push
in
xor
sub
popa
jo
in
fwait
jmp
stos
push
out
and
mov
loop
or
lahf
addl
sub
fistpl
mov
jl
mov
inc
xor
ja
dec
repnz
ret
sbb
insl
and
sub
pop
imul
es
loopne
mov
push
pop
and
mov
push
mov
das
mov
cmp
inc
and
or
fstps
in
pop
aad
arpl
cmp
icebp
mov
loope
sar
lret
jg
les
mov
mov
loopne
lods
mov
scas
arpl
jno
hlt
push
loopne
dec
adc
imulb
cld
push
jb
aas
jg
sbb
xchg
ljmp
test
loop
test
jne
jo
xchg
pop
imul
jbe
adc
out
add
in
dec
sub
or
xor
fnstenv
cmp
out
mov
imul
pop
mov
imul
xchg
pop
pop
jle
jle
adcl
stos
movsb
nop
xchg
jmp
adc
jae
outsl
dec
adc
xchg
mov
jecxz
cli
fs
mov
sbb
negl
cmp
push
int
popf
movsl
or
xor
inc
scas
xor
xchg
andb
xchg
sahf
or
dec
leave
outsb
test
fdivl
rolb
cli
in
mov
jl
decb
xchg
pop
loope
repnz
fidivl
mov
stc
xchg
nop
and
mov
icebp
mov
outsb
mov
xorl
leave
adc
pop
push
mov
or
inc
inc
mov
sbb
je
add
sub
insb
jmp
cmp
pop
mov
dec
cmpl
fdivl
sbb
jmp
sub
aas
adc
sub
sbb
repz
dec
hlt
cmpsl
leave
jno
xchg
push
ficompl
test
jge
adc
in
and
xorl
adc
les
mov
xchg
aam
cld
andl
scas
lret
cmpsl
pop
lcall
lret
or
mov
fs
mul
pop
dec
test
jp
data16
sbb
cmp
scas
aad
xor
cmp
mov
xor
mov
sub
sub
xor
inc
inc
loop
in
xchg
sub
js
mov
mov
cli
push
push
pushf
adc
nop
xor
aaa
sub
in
sbb
fnstsw
push
aam
xor
push
shll
sbb
int3
inc
out
mov
in
cli
sbb
cld
or
stos
sbb
data16
pop
xchg
shrl
push
das
cltd
xor
cmpsb
stos
mov
data16
mov
adcl
mov
xor
repz
mov
fwait
dec
cmc
lock
pop
das
std
cmc
xchg
cltd
out
vpsadbw
push
dec
pop
mov
xchg
ja
call
push
dec
data16
call
xor
cmp
lret
aas
pop
adc
lret
dec
shl
fstp
xor
insl
cmc
dec
dec
test
xchg
sahf
cmc
cld
cmp
testl
lea
js,pn
in
jp
xchg
int
cmp
sub
xchg
mov
inc
and
lret
mov
lcall
push
int3
mov
mov
push
jmp
add
add
fwait
xchg
and
loope
enter
cltd
sbb
xchg
xchg
icebp
movsl
jmp
ljmp
out
jo
pop
adc
js
lds
popa
jae
in
cmpsb
iret
jno
push
push
dec
les
inc
xor
inc
push
aaa
xchg
movsl
lcall
jne
js
inc
add
inc
xor
mov
or
fst
sbb
cmp
ljmp
xor
sbb
push
int
loopne
ja
mov
call
outsl
mov
rolb
addr16
addr16
adc
out
push
inc
xchg
mov
sub
or
pop
cmp
clc
xchg
jp
dec
jecxz
and
lds
sbbb
dec
loope
inc
into
stos
ja
test
pop
mov
das
jmp
xor
pop
mov
xor
ja
pop
or
out
ja
xor
stos
ficoms
loopne
mov
fimuls
cli
inc
jle
repz
scas
cmpb
push
add
mov
push
cmpsl
jnp
fsubrs
xchg
data16
push
in
mov
or
mov
mov
pop
in
lret
or
in
mov
hlt
xchg
ljmp
adc
and
call
arpl
jge
test
cwtl
jl
jecxz
movsl
jle
in
dec
cmp
enter
popf
mov
fmull
sub
stos
arpl
rol
xchg
divl
fldt
out
mov
pop
jo
add
shlb
add
xchg
js
jecxz
sub
scas
arpl
imul
cmp
inc
enter
lds
sti
pop
lds
xchg
jno
int
sub
xchg
mov
mov
push
lock
dec
pop
sbb
out
int3
xchg
jecxz
push
xlat
add
fists
jns
test
repz
add
xor
cld
cmp
cli
iret
pop
stos
bts
fcomps
mov
adc
cmc
rcrb
sub
pop
or
fstl
lods
sarl
pop
aaa
jge
int3
dec
les
pop
leave
mov
adc
inc
fbstp
inc
push
sbb
test
xchg
pusha
mov
and
xlat
fisttpl
sbb
jno
cld
push
into
sbb
fwait
jl
cld
add
lahf
jbe
sarl
hlt
xor
mov
dec
sub
pop
and
call
and
fidivrs
fsubr
dec
pop
stos
fadds
pop
jae
sub
in
movsb
push
xchg
dec
sub
frstor
incb
jns
jbe
std
or
jbe
jb
cmpsb
aam
ret
pop
fwait
add
push
out
imull
icebp
lods
cmpsb
sub
loop
rcrb
leave
dec
inc
sahf
cld
and
shrl
rcr
cmp
add
aad
cwtl
inc
mov
jno
stc
nop
add
lret
adc
and
lahf
out
cmp
cmpsb
adc
mov
mov
pusha
divl
das
jecxz
mulps
cltd
push
or
mov
cli
mov
adc
adc
push
mov
popf
or
pusha
cwtl
or
mov
jae
mov
add
pop
fsubrl
je
jbe
ja
popf
sub
mov
jo
inc
mov
stos
jnp
les
rcl
outsl
rcl
pop
jmp
adc
mov
push
movsb
xchg
dec
mov
mov
repz
imul
mov
dec
movsl
inc
lret
imul
data16
outsl
or
in
adc
push
mov
loop
cmpsb
gs
push
in
pop
daa
xchg
or
mov
jmp
inc
xchg
jp
aaa
stc
loope
sub
adc
cmp
aaa
imul
xchg
testb
jno
mov
movsl
cmp
out
add
mov
scas
or
pop
lea
sahf
mov
add
test
adc
sti
sub
and
sbbb
test
mov
les
gs
jmp
or
daa
shrb
mov
clc
pop
push
jnp
mov
add
sub
stc
cs
aad
stos
add
xor
lahf
cmc
or
cmp
dec
ds
mov
sbb
push
mov
inc
xchg
cmc
insb
pushf
adc
sub
leave
insl
popf
mov
push
enter
cwtl
mov
add
cs
jl
xchg
pop
call
and
imul
pop
push
nop
mov
cmp
inc
push
cmp
shll
xchg
mov
outsb
dec
ret
test
mov
or
int3
movsl
adc
xchg
dec
arpl
daa
mov
mull
cmp
mov
int3
jnp
out
cltd
and
sbb
mov
add
popf
push
out
movsl
lret
or
cmp
pop
repz
iret
ss
in
jns
inc
int3
xor
cmp
inc
out
sbb
enter
leave
push
xchg
hlt
lock
insl
jns
dec
cli
or
cmp
mov
adc
int
repnz
push
dec
daa
fwait
xor
addb
cwtl
mov
fdivrl
sub
pop
inc
cltd
dec
lret
mov
inc
xchg
int
xor
into
jne
mov
cmpsl
xchg
mov
sub
fistpll
hlt
fcmovbe
mov
xchg
sbb
xor
clc
sahf
cs
pusha
push
sbb
in
fldcw
mov
add
jecxz
or
or
outsl
sbb
leave
or
cs
bound
mov
cmp
gs
xchg
jecxz
lock
push
xchg
lods
cli
test
xor
out
sub
pushf
jnp
inc
call
sti
out
xorl
cmp
push
jl
in
out
inc
mov
push
popf
mov
mov
mov
cwtl
popa
push
cmpsb
ja
out
cmpsb
into
xlat
push
xchg
sub
fstpl
jbe
lods
mov
je
out
push
cmpsl
or
out
cmp
mov
fs
cmp
cltd
cltd
mov
mov
imul
mov
scas
xor
dec
sbbl
sarb
into
jns
in
lods
xchg
cmc
jl
enter
pop
dec
sub
xor
mov
push
inc
icebp
lods
sub
jnp
mov
push
push
mov
or
out
pop
iret
inc
inc
popw
cmp
call
jmp
mov
loope
xchg
cmpsb
push
cmpsl
js
stos
xchg
dec
lods
dec
adc
mov
pop
xchg
out
mov
loop
ss
push
lret
stc
adc
lret
in
movsl
inc
jl
sar
pop
pusha
data16
cmp
enter
outsb
adc
pushf
jg
add
push
lcall
movsb
out
fdivrp
push
pop
cmc
cmp
dec
xchg
mov
xor
outsl
mov
xor
push
je
jmp
mov
or
jp
jno
jl
neg
cli
inc
mov
imul
cmp
and
jno
and
jp
xchg
jl
gs
jmp
inc
dec
cmpsb
fbld
xchg
popf
into
cmc
xor
mov
lret
adc
xorb
aaa
jmp
in
outsb
push
xor
scas
std
mov
mov
sbb
mov
out
out
jl
daa
jae
fnsave
inc
popa
icebp
in
mov
repnz
cmc
inc
jle
pop
fst
sub
les
sub
mov
in
fwait
lcall
sbbb
mov
cli
mov
cmp
mov
sahf
xchg
mov
mov
and
aaa
adc
jno
pop
stc
fwait
cmp
pop
jg
pushf
repz
mov
sub
in
mov
and
ret
or
test
push
arpl
orb
negl
pop
nop
prefetch
or
pop
negl
add
cmp
and
lcall
mov
xchg
bound
jmp
aaa
ret
movsl
sub
mov
xor
clc
xchg
jae
add
add
pop
push
jle
out
jnp
xor
xor
mov
xor
mov
jne
into
pop
cwtl
cmp
int
push
pop
orb
lods
jo
lods
mov
ret
or
movsb
pop
jmp
xchg
mov
stos
lret
pop
cli
jle
push
mov
push
pop
shll
inc
in
mov
iret
movsl
pop
aaa
or
sbb
sti
mov
xchg
in
jg
mov
mov
insb
es
or
ret
cmp
or
dec
ret
loope
xchg
int
xor
or
mov
or
push
mov
sti
lock
dec
jno
out
aaa
sub
xorl
mov
push
ja
pop
mov
sbbb
jbe
fstl
cmp
ss
lahf
push
leave
or
fistpl
and
push
sbb
pop
inc
in
in
mov
in
dec
cmp
lahf
aas
sbb
outsb
inc
out
bound
outsb
mov
inc
aas
repz
cmp
jmp
int3
mov
movsb
push
sbb
add
iret
mov
icebp
sub
add
pcmpeqb
or
mov
xchg
lahf
xchg
or
mov
push
push
cld
cld
out
pop
sub
push
scas
xorb
iret
fmull
push
cmp
pop
or
out
jno
mov
out
inc
andl
pop
xchg
inc
mov
add
test
outsb
xor
xchg
mov
mov
dec
mov
je
mov
mov
xor
or
sub
fdivrp
mov
mov
or
pop
dec
xor
pop
push
inc
xchg
sbb
subb
sbb
out
jecxz
push
jbe
adc
outsb
and
cmpsl
add
lds
or
add
xor
cli
aaa
fwait
cwtl
xchg
and
mov
pop
aam
push
fmull
popa
imul
cltd
repnz
aad
cmpsb
mov
push
inc
pop
jmp
and
iret
outsl
or
out
mov
sti
inc
sbb
cmp
pop
pop
xor
push
sbb
insb
sbb
lods
sub
testl
fcoml
xor
pop
mov
fcoms
repz
mulb
cmp
or
lret
addr16
fdivr
and
add
mov
lret
rol
jne
loopne
das
sbb
inc
jge
xor
pop
pop
xchg
push
mov
push
inc
mov
adc
js
stc
in
mov
pop
jmp
add
loope
mov
movsl
js
push
sbb
adc
shll
je
xchg
adcb
lds
sbb
mov
popa
das
out
sbb
cmpsl
or
sbb
lcall
repz
aad
ds
ss
int
xchg
popa
mov
sahf
into
xor
mov
and
data16
ds
stos
test
test
sbb
cs
cmpsb
das
mov
inc
int3
pop
les
repz
jmp
scas
sarl
mov
iret
or
mov
xchg
push
fdivrs
jle
cs
pop
xchg
fimull
add
cmpsb
ret
rcrl
fildll
and
add
pop
pop
je
push
popf
push
stos
rcrb
mov
pushf
psrlw
bound
inc
rolb
negl
movsl
push
adc
mov
loop
mull
popf
adc
jno
loopne
sub
fimull
mov
mov
xchg
mov
pop
and
sarb
arpl
lahf
ret
push
xchg
cmp
out
fldcw
push
hlt
gs
test
shl
xor
pop
push
lret
jns
outsl
mov
jmp
mov
jl
cli
push
add
subl
mov
das
pop
iret
cmpsl
stos
add
push
aam
push
cmpsl
or
stc
cmpb
mull
std
daa
xchg
xlat
outsl
mov
push
cmp
adc
add
adc
mov
in
cmpsb
cltd
mov
jmp
push
jge
dec
shrl
ficompl
icebp
adc
and
cmp
imul
push
inc
push
push
cmp
shlb
mov
mov
sbb
iret
mov
push
xor
gs
mov
jne
push
mov
pop
jl
fwait
mov
mov
pop
push
out
pop
sbb
jae
add
lods
sub
xchg
fisttpll
xchg
aam
sub
cwtl
lret
fisttpl
rorb
mov
jno
shl
push
xchg
push
cs
movsb
jb
xor
inc
push
mov
cmp
aam
mov
scas
aam
ret
stos
add
add
and
stos
pop
dec
add
inc
addr16
int3
iret
adc
mov
test
cld
add
adc
fdiv
cmp
cmp
stc
jp
jo
fs
inc
xorl
mov
daa
adc
mov
aas
xchg
jb
das
cmp
popa
fbstp
fwait
cmp
push
and
push
dec
jl
sbb
xchg
loope
pop
addl
or
pushf
cmp
std
push
inc
stos
cs
mov
push
iret
inc
popa
and
push
in
std
add
push
movsl
outsl
gs
les
stc
lret
xor
stos
pushf
pop
pop
push
iret
loope
add
mov
sbb
jb
mov
nop
cmp
push
insb
jno
mov
mov
hlt
fsts
mov
and
gs
mov
and
and
aam
dec
adc
jns
movups
aas
xchg
mov
add
call
js
mov
mov
pop
xchg
ljmp
inc
xchg
mov
mov
mov
and
jmp
or
jge
sbb
ljmp
outsl
xor
xchg
jb
or
mov
lea
cmc
daa
sahf
ret
xchg
push
push
adc
in
fbstp
mov
jnp
js
lahf
pop
sbb
aaa
cmp
aaa
test
sub
cld
incl
sarl
mov
inc
clc
arpl
mov
jg
mov
sbb
mov
cwtl
js
sub
jno
jnp
das
fwait
arpl
das
mov
adc
cmp
les
aaa
or
dec
jne
sbb
aaa
mov
xlat
mov
xchg
dec
pusha
clc
xor
add
dec
sub
cmp
shrb
in
push
xor
rclb
ds
out
pop
or
push
int3
daa
sbb
in
cld
notb
cmp
hlt
ror
cmp
xchg
jno
aas
or
into
mov
sub
or
scas
mov
xor
loope
push
fbld
fldl
mov
shlb
push
cwtl
stc
shrb
jge
pop
fdivrs
inc
es
scas
imulb
sbb
lret
mul
jl
xchg
mov
pushf
pop
in
cmp
sbb
mull
lock
fwait
push
pop
inc
cmpsl
gs
pop
mov
add
xchg
in
in
xchg
xchg
xor
insb
cs
push
aam
jl
les
inc
push
aad
mov
sbb
jns
pop
push
pop
andl
xchg
xor
dec
shlb
ds
mov
je
adc
push
ljmp
aam
loope
dec
adc
mov
sub
or
sahf
les
sbbb
and
nop
xor
pop
or
push
out
int3
clc
jnp
push
push
imul
fisubs
pop
adc
cmpsl
popf
dec
xor
pop
inc
cmp
sub
scas
add
in
or
cld
das
mov
scas
xor
mov
es
mov
out
int
in
push
add
scas
push
movsl
in
inc
imull
ficoml
jecxz
ss
adc
and
clc
lock
fst
fbld
mov
xlat
ret
or
sbb
mov
mov
ficoms
fiadds
add
push
lods
pop
and
and
adc
stos
inc
leave
ret
mov
dec
js
sbb
lds
int3
pop
es
stc
pop
stos
loopne
sub
fsubrs
clc
adc
adc
shrb
mov
jecxz
mov
cmp
fwait
push
cltd
fs
out
jne
cmpl
jb
pop
mov
in
repz
sbb
push
pandn
loopw
and
pop
movsl
insl
cmpsl
cmpl
push
xchg
out
xchg
xchg
scas
jne
inc
scas
sub
mov
test
push
sub
popa
jo
call
loop
mov
pop
iret
cmp
mov
dec
fistps
sub
sbb
addr16
push
rcpps
push
push
scas
mov
dec
cmp
ljmp
call
push
testl
bnd
push
push
out
test
shll
arpl
jns
aaa
mov
fwait
in
mov
jno
loope
xor
lret
xchg
push
lods
in
lahf
pushl
inc
or
adc
adc
call
fsubrs
repz
ds
jl
cltd
mov
rolb
rorb
push
cmpsb
sub
insl
jp
xchg
sbb
lahf
movsl
imul
fistpll
mov
pop
lock
in
push
fstpl
xlat
iret
push
push
fldl
lea
or
call
adc
xchg
test
mov
pop
pop
dec
or
cmp
inc
test
test
shlb
pop
mov
mov
mov
mov
xlat
push
pusha
push
add
rorb
stc
ret
mov
int3
cmp
in
push
cmp
mov
push
mov
pop
add
jnp
mov
cmpsb
mov
cmpsb
xchg
xor
idivb
mov
push
inc
fnsave
cmp
dec
fnsave
jb
pop
out
std
cs
xchg
mov
stc
repnz
jnp
mov
or
dec
pop
das
inc
filds
add
mov
adc
mov
ret
aas
mov
mov
js
xchg
int
loop
mov
xor
pop
movsl
scas
sub
out
popa
lret
movsl
rorb
jns
adc
mov
sbb
test
push
test
aam
popf
sahf
dec
imul
jbe
mov
push
outsl
dec
fcoms
sbb
xchg
sbb
xor
or
xchg
dec
pop
stos
adc
mov
xchg
cmc
sub
push
out
aam
test
rol
mov
leave
sbb
dec
sub
lods
das
inc
negl
mov
les
sub
push
add
xchg
sbb
test
push
xchg
fucomp
pop
jnp
lock
xor
jns
fisubrs
test
sbb
push
mov
popa
dec
xor
test
mov
in
imul
repz
test
sbb
sbb
and
mov
xchg
data16
or
cmp
out
and
push
and
ficoms
add
mov
pusha
or
mov
test
and
add
out
lea
sbb
test
es
repnz
inc
aad
dec
xor
xor
stos
mov
dec
jg
xor
in
jl
out
daa
add
pusha
jl
xchg
addb
mov
ret
lods
insb
sub
add
lds
cmp
mov
cmpsl
xchg
outsl
lret
call
push
lahf
clc
xlat
js
xchg
test
jno
mov
fmuls
clc
pop
push
push
lods
sub
aam
jb
push
push
vphaddbq
lret
lret
imul
inc
mov
loopne
xchg
jo
es
pushl
jne
and
iret
pop
lahf
mov
mov
xchg
adc
std
in
xchg
xchg
mov
aaa
call
mov
xchg
cmpsb
insb
xchg
cltd
sbb
rol
stc
iret
ljmp
dec
testl
mov
adc
lock
jb
xchg
ficoml
mov
push
sbb
push
push
pop
sahf
cmc
inc
cmp
jmp
cmc
add
mul
lods
and
jo
mov
mov
jmp
pop
pop
lock
pop
out
or
and
push
dec
bound
div
jno
lahf
jns
les
gs
shrb
inc
lahf
out
mov
push
sbb
xor
adc
sub
test
les
int
in
nop
and
outsl
cmp
or
shrb
fildl
fcmovb
js
in
jbe
or
add
sub
rcll
pop
mov
das
mov
mov
sahf
xor
aam
jg
push
mov
push
pop
push
jns
xor
push
sarl
pcmpgtw
inc
and
mov
lahf
fsubr
repnz
aad
imul
jmp
stos
fmuls
lods
sbb
inc
stos
push
sbb
aas
xlat
mov
cwtl
cwtl
std
jno
lods
imul
lock
pop
inc
inc
cmp
fldl
or
add
iret
sub
pop
and
iret
dec
fiaddl
dec
jne
push
pop
scas
dec
xor
in
aas
out
ja
mov
out
lock
es
jo
and
out
ja
insl
outsl
sub
scas
imul
dec
movsl
int3
add
push
and
pop
outsl
test
xor
jmp
xchg
sbb
mov
cmpsl
into
or
or
mov
adc
mov
lret
push
pop
cmpsl
dec
pop
fisttpll
mov
mov
or
xchg
xchg
push
in
adc
mov
fstps
pop
mov
ret
mov
add
mov
fisubl
jl
aad
mov
xchg
pop
popa
mov
cmp
test
mov
jne
push
xor
dec
push
xor
push
sarl
ja
xlat
push
nop
adc
rcrl
xchg
int3
ret
movsl
adc
cli
jge
bnd
les
movsb
mov
adc
in
mov
pushw
pop
js
cltd
mov
jnp
shrl
jb
repz
inc
sub
xor
add
mov
movsl
into
jae
mov
adc
mov
imul
jmp
cmc
adc
repz
fsts
adc
dec
les
shrl
mov
sbb
dec
cmpsb
jnp
pop
pushf
jp
mov
add
rorl
fisttpl
push
fimuls
mov
or
or
fldl
icebp
sbb
mov
add
lret
or
rorb
divl
in
push
pop
inc
scas
lods
xchg
push
cltd
pop
and
push
adc
sbb
sbbl
cmpsl
pusha
push
sub
test
loop
dec
dec
pop
lds
cmp
and
mov
mov
jge
push
cltd
and
stc
xchg
mov
repnz
jp
jno
adc
repz
enter
scas
fisttpll
sbb
inc
mov
fisubrl
xlat
cmp
jecxz
mov
inc
and
out
jge
adc
dec
scas
sub
add
out
push
jns
mov
mov
jne
ja
repz
mov
or
movsb
ret
in
stos
jns
and
mov
fnstsw
mov
xchg
lahf
pop
in
mov
sbb
orb
test
or
pop
jns
out
dec
mov
xchg
into
mov
js
mov
mov
xchg
aam
je
test
scas
mov
sub
les
sbb
pop
mov
mov
mov
mov
dec
sub
xor
movsb
imul
jo
ss
xor
mov
push
adc
dec
in
sub
stos
test
mov
inc
cmc
popa
mov
sbb
push
cmp
loopne
adc
out
hlt
imul
test
jle
mov
mov
xchg
or
xchg
stos
fwait
aas
std
jmp
movsl
mov
ja
cmp
fstpl
aas
add
push
cli
push
xchg
js
mov
imul
mov
lret
out
mov
mov
loope
lret
cs
xor
mov
pop
jne
push
xchg
or
push
and
mov
orb
cld
pop
or
inc
inc
push
and
flds
je,pn
lods
jbe
icebp
inc
jo
mov
lea
call
adc
lods
in
out
loope
xor
mov
jnp
orb
xchg
add
out
js
test
movsl
sar
test
iret
lcall
leave
fldl
mov
add
xchg
jle
in
cmp
lea
mov
push
or
or
in
mov
dec
orb
mov
out
xchg
mov
sarl
cmp
scas
in
lcall
jecxz
cli
sti
test
dec
es
mov
int
sbb
xor
repz
and
or
push
mov
jo
push
xor
cld
cmpsl
cmp
mov
mov
les
add
sbb
push
jo
push
mov
outsb
sub
clc
mov
push
dec
ds
outsl
xchg
pop
pop
loope
pop
jne
add
dec
cmp
dec
repnz
xchg
gs
stc
dec
sbb
aam
and
out
sub
ret
xchg
mov
mov
dec
mov
dec
cmp
ret
insl
mov
arpl
pop
add
inc
clc
ret
leave
jno
lds
scas
and
adc
insb
ds
or
scas
add
sbb
sub
pop
sbb
push
jecxz
mov
imul
pop
daa
repz
xchg
in
imul
jbe
pushf
bnd
pop
repnz
popa
insb
pop
lods
arpl
daa
out
push
idivb
cmpb
or
jl
or
xchg
xor
pop
dec
fldcw
push
scas
testb
sahf
inc
movb
mov
add
jno
popa
pop
xchg
fwait
daa
popf
xor
je
popf
rcr
and
cmpsl
or
adc
in
add
mov
jp
sbb
adc
xchg
jb
cltd
filds
ja
addr16
imulb
rol
int
das
xchg
mov
aad
jno
outsl
and
sub
sub
pop
loope
mov
icebp
out
lods
fdivrl
sub
or
int
js
xor
rcrb
jl
mov
pusha
dec
mov
jp
sub
data16
inc
sbb
es
imul
imul
sti
cmpsl
or
sahf
mov
test
xchg
lock
adc
sti
aad
mov
push
mov
xchg
pop
cmpsl
in
mov
in
and
out
jp
push
pop
fbstp
fnstsw
sub
cld
loop
das
mov
xchg
ficoms
incb
xchg
sbb
in
testl
mov
test
jp
cmpsb
push
lcall
aaa
fsubl
and
add
enter
mov
or
and
sub
ret
lret
scas
cmc
adcl
cmp
lods
pcmpeqb
inc
pop
out
loop
add
xchg
jae
lods
push
paddq
iret
fucom
test
jo
ja
arpl
packsswb
inc
out
push
jne
fcmovne
inc
add
mov
mov
lahf
sbb
cmc
inc
jb
pop
nop
push
pushf
push
nop
insl
add
jb
pop
mov
push
iret
push
out
mov
ss
imul
stos
adc
xlat
ficoml
mov
sbb
jnp
movsb
stos
jnp
bound
sub
add
jae
jnp
dec
sbb
and
es
jno
adc
aam
sbb
and
mov
rolb
test
pop
dec
jae
push
insl
lret
cmpsb
jne
inc
sub
dec
decb
cmp
cmpsl
aas
inc
mov
loope
divb
push
or
inc
jp
outsb
add
sbb
mov
and
mov
or
in
sub
add
cmp
in
cmc
mov
xor
fsubl
xchg
arpl
js
push
out
pushf
popa
jge
and
das
xor
inc
arpl
and
lods
mov
and
stos
insl
aam
dec
test
mov
in
push
cmp
adc
and
subl
add
fcompl
inc
insb
int
adc
jbe
aam
arpl
imul
xchg
sub
mov
icebp
mov
into
pop
cmp
add
fmuls
add
mov
cmp
and
std
sub
jne
les
aad
fstps
clc
pushf
lods
push
push
shlb
stc
jmp
ja
cwtl
inc
inc
inc
pop
es
je
lahf
add
sarl
jno
fcoml
ffree
push
std
mov
mov
mov
out
movsl
and
popf
mov
adc
pop
adc
enter
xor
enter
cmpsb
mov
xor
xor
mov
cmpsb
and
sbb
test
cmpsb
call
sahf
ret
dec
stos
inc
push
sbb
aas
push
stos
mov
xor
add
andl
lcall
mov
rclb
shlb
jle
stc
jge
push
movsl
sub
lahf
pop
sahf
mov
inc
fs
xor
mov
clc
mov
cmp
stos
xor
aas
inc
adc
jp
out
rolb
int3
cltd
push
sbb
andb
int3
or
jp
ss
jnp
and
mov
and
cmpb
jae
lret
sbbb
inc
cmp
push
aad
mov
inc
push
mov
repnz
ret
loopne
mov
jae
jbe
imul
mov
push
or
cmp
cli
mov
addb
ss
xor
jle
push
shlb
repnz
push
ljmp
jnp
sarb
or
mov
lods
inc
adc
dec
clc
in
testb
mov
sbb
mov
jbe
push
sub
sub
mov
mov
cmp
push
sub
sub
jl
inc
sbb
cmp
mov
loope
fsin
bound
lds
arpl
outsb
out
inc
pop
inc
call
lahf
cwtl
xlat
push
cmp
jno
mov
lret
cld
push
and
lods
push
cltd
test
sbb
jo
out
outsl
int
push
jge
cmpsb
xor
shll
and
cmp
sub
cwtl
into
in
pushf
sahf
sarb
shr
or
frstor
aaa
adc
sbb
sub
int3
inc
scas
fs
cmpsl
dec
xor
push
or
jno
and
lret
adc
cmp
mov
out
inc
pusha
sbb
ret
cwtl
jmp
ret
inc
pop
mov
loope
and
push
hlt
jecxz
mov
in
outsb
push
jbe
mov
imul
jbe
pop
and
rol
mov
cmp
iret
xor
inc
xchg
jg
and
mov
add
cmp
cmp
outsb
out
mov
xor
jl
xor
loop
aad
inc
stos
clc
divb
inc
enter
xchg
mov
push
mov
aaa
mov
in
test
or
lret
scas
mov
arpl
lods
jb
push
mov
and
popa
out
push
int
inc
idivl
jno
inc
pop
or
adcl
inc
mov
jmp
add
or
xorl
sbb
cmp
push
dec
and
xor
rcr
pop
out
inc
mov
pop
movsl
pop
dec
push
leave
jp
loopne
xor
cmpsb
cld
pop
dec
inc
jbe
push
cs
fcomps
scas
jecxz
outsl
sbb
lret
repz
aaa
repz
mov
inc
fisubrs
dec
jae
lds
adc
rcll
pop
sbb
mov
xor
or
mov
sub
scas
and
adc
jbe
mov
push
or
and
cmp
jl
icebp
mov
mov
sub
int
or
mov
ret
test
lods
in
mov
loop
rcll
in
or
ret
cmp
lea
popa
ss
xchg
idivb
lock
mov
pop
in
add
lahf
adcl
add
fsubl
adc
bnd
and
aas
inc
jnp
fidivrs
jp
dec
xchg
xor
call
jl
int3
andb
movsb
sbb
fisubl
dec
int3
add
cmc
sbb
dec
add
adcl
imul
sub
stos
out
pop
sub
sub
addr16
add
imul
inc
xor
mov
out
push
or
int
and
call
dec
dec
mov
dec
decw
jle
dec
clc
push
int3
ja
cmp
icebp
in
xor
push
xchg
fs
push
popa
imul
cmp
into
add
jne
dec
dec
lcall
rolb
fwait
xor
ds
cli
jne
aaa
cmp
dec
mov
repnz
cltd
adc
adcb
es
fidivrs
stos
in
sti
xor
mov
fcmovne
iret
enter
lods
or
mov
dec
enter
lret
inc
push
int
outsl
cltd
ds
gs
in
sbb
lods
gs
mov
mov
inc
sbb
xchg
jo
adc
jnp
sub
xchg
jmp
push
cs
inc
orb
and
pop
cmpsb
cmp
lret
add
add
cmc
inc
sub
int
lahf
icebp
fucomip
cmp
lahf
pop
cmp
sub
xor
cmpsb
scas
mov
or
xchg
pop
movsb
pop
push
lahf
xor
mov
mov
lcall
dec
test
and
mov
and
lods
inc
pop
or
outsl
mov
mov
jbe
jb
fsubl
xchg
call
in
mov
mov
sahf
mov
add
jg
aad
lods
xor
dec
pmuludq
sub
cmp
mov
and
adc
les
fwait
jne
jecxz
add
pop
mov
jb
bound
nop
xchg
xlat
pushf
mov
inc
adc
push
shll
xchg
mov
sbb
dec
add
add
jecxz
mov
push
mov
and
fisubl
scas
test
ja
xor
je
outsl
fwait
mov
push
fwait
dec
mov
mov
hlt
sbb
mov
sti
jne
sti
jno
repz
pop
jne
xchg
das
xor
aam
out
or
or
jo
and
xor
mov
loopne
mov
push
ljmp
or
adc
addr16
xchg
adc
and
bound
jne
icebp
pop
mov
es
jecxz
imul
or
pusha
cmp
rclb
or
xchg
xlat
mov
dec
cmp
loopne
lods
lret
jb
xor
add
add
jbe
aaa
cmp
stos
cmp
shlb
mov
and
bound
addb
and
mov
add
mov
jle
adc
or
push
xchg
jnp
pop
or
or
outsb
mov
clc
or
gs
int
dec
inc
jmp
inc
cltd
sbb
js
fsubl
push
jge
xchg
cltd
or
nop
push
adc
pandn
fs
test
mov
adc
mov
adc
dec
xor
mov
cmp
push
push
scas
push
sbb
inc
mov
pop
fdivl
scas
in
or
mov
pop
outsl
ds
scas
pop
fnsave
subb
mov
fistpll
cmpl
pop
gs
cmp
fs
dec
addb
lret
and
add
adc
inc
in
mov
popf
cmp
shlb
movsl
fsub
jmp
pop
sub
cmp
loopne
cmp
add
mov
loopne
push
pop
ss
cwtl
jns
shl
dec
sti
sub
push
aaa
clc
mov
gs
mov
test
idivb
lods
sub
push
jp
xchg
pop
dec
ret
inc
xchg
in
jnp
pop
push
in
add
shr
mov
lea
add
sub
sbb
jecxz
repnz
jne
shr
bound
add
int
sbb
xor
movsl
sbb
fsubl
mov
decl
jl
add
or
out
repz
out
sbb
repnz
loopne
pop
xlat
nop
mov
rcrl
or
jno
mov
pop
addr16
xor
lods
shll
jmp
dec
dec
lock
mov
pop
dec
and
insb
jo
imul
xor
push
cmp
cmpsl
fstpl
push
stc
adc
sbb
push
xchg
mov
mov
xorb
push
frstor
mov
jg
fldenv
sbb
out
das
movsl
adc
jo
push
xchg
je
repnz
leave
arpl
pop
mov
push
out
ds
add
sub
roll
jbe
jns
test
scas
jmp
insl
add
jo
push
outsl
lods
push
fadds
and
std
jno
in
xchg
jecxz
ret
pop
cs
rclb
add
sbb
leave
faddp
sbb
test
mov
jno
push
out
aam
sub
pop
out
std
aad
fstpl
pop
out
lret
push
mov
jge
aaa
mov
or
xor
sub
fwait
ja
loopne
icebp
push
call
or
fmull
push
dec
pusha
cmp
jb
or
jae
shl
mov
mov
dec
jae
sbb
out
das
mov
push
sahf
je
cmp
stos
push
sub
jecxz
orl
jae
cmp
jl
sbbl
and
mov
rclb
out
and
jmp
jge
std
mov
mov
pushf
outsb
rcr
aas
cs
lock
js
and
in
push
cmp
cltd
xchg
xchg
gs
cmp
in
loope
jb
jbe
mov
mov
cmpb
mov
dec
mov
shl
xchg
fsts
jno
mov
push
popa
jecxz
mov
ja,pt
xor
pop
pop
imul
xor
lret
jp
jmp
call
and
insb
and
or
ljmp
jecxz
jns
pop
or
inc
pop
mov
add
mov
sahf
lods
dec
sub
shll
out
test
dec
and
push
xor
std
mov
and
ss
or
dec
daa
sbb
and
sub
or
in
and
mov
jmp
movsl
adc
gs
ret
scas
call
out
in
push
sbb
cmpsl
sub
mov
push
xchg
out
inc
jo
fsubs
outsl
or
scas
push
ror
rcrb
test
dec
mov
nop
cld
push
arpl
call
and
icebp
in
out
in
rorb
bound
xchg
cmp
mov
cs
rorl
and
imul
inc
andl
mov
testb
outsl
dec
mov
lock
leave
pop
ja
jo
lods
pushf
cmp
or
loop
addl
pop
inc
jge
cmp
sbb
xchg
mov
jo
sub
fisubs
inc
xlat
sti
dec
fwait
or
fidivs
pop
daa
sbb
dec
dec
lea
movsl
sbb
insb
and
push
leave
loope
xchg
cmp
pop
sti
rclb
mov
add
in
pop
lds
or
mov
sub
fisubl
fwait
dec
stc
iret
fisubrs
aad
stos
mov
dec
xor
jge
lods
and
cltd
das
insb
cmp
rol
inc
pop
cmpsb
stos
test
dec
push
push
push
adc
sti
adc
jns
xchg
xor
pop
jne
sbb
in
cld
and
jno
fiaddl
mov
mov
add
push
stc
xchg
mov
shlb
imul
ds
sub
dec
adc
and
in
push
inc
ja
lds
push
sarb
sub
fbstp
int
repz
sbb
insl
lcall
mov
not
inc
lret
or
push
dec
or
mov
inc
jae
mov
xor
jae
call
mov
jnp
mov
cmp
popa
imul
scas
sbb
xor
xchg
stc
je
and
into
xor
lret
aaa
sub
rol
sbb
jb
int3
lock
sahf
inc
mov
enter
cwtl
pop
dec
leave
mov
jno
jmp
mov
sub
lahf
pushl
ds
dec
pop
lcallw
hlt
or
pushf
cmp
fwait
pusha
imul
jne
adc
shrl
sub
hlt
arpl
or
and
jo
adcb
mov
push
insb
mov
mov
mov
inc
jmp
ret
adc
ja
pop
out
pop
pop
in
bound
inc
xchg
addr16
adc
mov
xchg
xchg
data16
jle
pop
mov
sub
ja
inc
nop
dec
sbbl
pop
and
add
adc
fistps
adc
lahf
mov
lods
popa
fcoms
leave
lds
and
push
movsl
lret
testl
inc
xor
test
sbb
mov
or
mov
loope
mull
jae
gs
add
outsl
mov
ja
xchg
jns
das
ljmp
add
xor
in
aaa
call
mov
sti
add
ret
ljmp
ret
cmpsb
sbbl
jmp
jmp
pop
pop
into
in
fidivs
aam
es
call
outsb
sbb
sar
xchg
fdiv
clc
sub
pop
sbb
sub
jecxz
pop
call
sub
imul
daa
dec
fnsave
aaa
mov
popa
mov
and
pushl
push
pop
js
fcmovnu
data16
mov
push
or
les
aad
addr16
mov
cmc
xor
fidivrl
xchg
dec
imul
adc
push
rcrb
add
cmc
into
scas
hlt
push
mov
xor
or
push
jp
mov
loope
add
dec
gs
pop
push
and
lods
lret
ja
js
cmp
mov
aam
adc
inc
pop
cmpsl
and
mov
mov
hlt
mov
mov
cmpsb
xchg
pop
in
mov
push
adc
jns
iret
in
inc
jg
ds
adc
cli
addr16
fstpl
mov
cs
rolb
mov
mov
imul
insb
bound
fcoms
xchg
mov
sbb
or
xchg
jbe
mov
aaa
sub
adc
mov
repz
jl
fisttpll
addr16
out
ds
pop
loopne
clc
iret
iret
push
dec
mov
fnstenv
adcl
daa
sbb
into
mov
test
lock
pop
jecxz
jne
pusha
push
daa
test
stos
jecxz
sbb
mov
jb,pt
mov
lods
out
out
push
out
jae
mov
lret
mov
xchg
stc
lock
fcompl
insb
fwait
mov
push
pop
jae
sbb
lods
cmp
cmp
shrb
idivl
shlb
add
adc
xchg
mov
stos
add
and
mov
xchg
sbb
mov
notb
dec
icebp
pop
push
or
xor
les
jnp
in
cmp
in
fistpl
cwtl
scas
push
pushf
jge
and
jle
inc
or
arpl
mov
cmp
jge
cmc
outsl
mov
pop
inc
push
pop
jecxz
test
pop
iret
fsubrl
xchg
aas
xchg
xchg
int3
negb
popf
sbb
in
sub
mov
jmp
inc
mov
sahf
lcall
sahf
inc
adcb
mov
mov
xchg
scas
arpl
stos
imul
fistpl
lea
fwait
lock
sub
mov
adc
outsl
iret
mov
cwtl
gs
xlat
xchg
or
loopne
arpl
adc
pop
and
idiv
adc
arpl
insb
mov
jb
mov
cmp
movsl
xor
int
ficompl
add
daa
cwtl
push
and
cld
jo
xchg
pusha
dec
idivb
enter
repnz
mov
cmp
jp
sub
inc
fidivs
dec
aaa
xchg
sbb
pusha
xor
xchg
mov
jns
cwtl
and
and
int3
xchg
xchg
xlat
push
adc
and
inc
sub
push
inc
les
pop
mov
test
daa
or
mov
iret
ficoms
popf
int3
mov
outsb
pop
mov
mov
inc
lcall
adc
jno
cmp
cwtl
and
mov
aas
mov
sbb
mov
push
jmp
dec
stc
imul
cwtl
mov
hlt
push
movsb
lcall
xchg
lea
push
dec
test
movsb
lods
nop
shl
in
and
jae
push
loop
inc
xor
iret
gs
loop
insb
mov
mov
ljmp
aam
scas
inc
sbb
movsl
lcall
in
dec
leave
shll
cmp
xchg
aas
shrb
iret
xor
adcb
imul
xchg
pop
stos
les
jae
mov
jmp
push
cmp
or
sahf
int3
and
push
dec
pop
das
jns
loope
sub
call
int
inc
pop
scas
mov
cmp
sbb
out
dec
dec
mov
push
pop
test
imul
push
xchg
xchg
jne
daa
insl
daa
imul
mov
lods
mov
frstor
dec
push
shll
jnp
ljmp
rolb
out
je
add
add
mov
insb
nop
adc
push
mov
call
roll
popf
dec
dec
pop
add
test
or
test
cli
shll
xchg
pop
adc
sub
insb
jnp
aam
sub
cltd
or
mov
fisttps
je
pop
pop
imul
icebp
data16
or
cmpsl
xchg
insb
pop
mov
leave
in
lret
mov
adc
sub
popf
popa
mov
push
or
data16
push
push
lea
fcomps
pop
icebp
or
fdivp
inc
inc
push
push
sub
pop
cmpsl
stos
repz
adc
jne
add
ljmp
cmpsl
mov
pop
sbb
jns
pop
shll
stc
je
mov
rolb
push
and
and
sbb
mov
imul
mov
data16
jp
insl
fiadds
mov
push
push
mov
leave
shrb
cli
mov
test
sbb
jle
jno
jp
mov
and
lcall
stc
push
scas
xchg
int3
or
fimull
test
fsubrl
insl
fdivs
mov
repz
sbb
movsl
push
hlt
jns
dec
adc
and
push
pop
cltd
enter
idivl
pushf
das
stc
jmp
sbb
mov
jae
xchg
xor
jl
cli
mov
aam
bound
jne
fwait
in
jl
sti
pop
fistpll
mov
movsb
and
ficoms
push
sub
mov
xchg
pop
jns
mov
jno
mov
les
and
and
nop
movsl
cmp
cs
fdivp
inc
push
mov
or
ds
xchg
lret
pusha
mov
mov
enter
gs
aaa
mov
pop
mov
movsbl
push
pop
push
or
in
sbb
aas
xor
sub
dec
inc
fs
xchg
push
xor
loop
sub
cwtl
fs
stc
and
in
mov
fsubs
jno
sbb
lret
mov
aaa
sti
lds
dec
sti
lret
pop
aad
pop
sarl
mov
mov
jmp
aad
lock
shrl
and
push
push
orl
dec
lret
push
inc
mov
fildll
adc
mov
inc
bound
jp
cld
mov
test
faddl
xchg
add
sbb
adc
cmp
daa
mov
stos
loop
sbb
aaa
test
data16
push
addr16
ret
dec
negb
out
insb
sahf
adcl
pop
out
push
ljmp
push
subb
mov
dec
dec
out
bound
or
sub
imul
fldl
imul
aad
xchg
test
scas
push
fisubl
xlat
repnz
and
cmp
sub
lahf
sub
cmp
scas
inc
dec
clc
pop
add
jo
or
outsl
fstps
cltd
jo
stos
rclb
cmpsb
stc
mov
bound
or
jg
data16
dec
imul
fisubrs
ja
push
inc
mov
bound
push
adc
arpl
push
stos
or
out
inc
test
and
xchg
outsl
mov
pop
inc
scas
pop
mov
daa
push
rep
mov
inc
divb
adcl
fnstenv
movsl
add
mov
test
cmpsl
out
cmp
adc
cmpsl
clc
adc
cmp
imul
add
js
push
pop
adc
lret
mov
imul
pop
pop
jno
add
bound
mov
cli
jae
sub
in
dec
inc
test
xchg
push
push
adc
dec
inc
add
add
fidivs
pop
int3
cmpsb
cltd
arpl
xor
outsb
push
stc
test
int
int3
add
dec
xor
aam
pusha
stos
jno
adc
and
clc
inc
adc
stc
cmpsl
imulb
hlt
dec
fdivrs
and
sbb
cmpsl
jge
les
dec
xlat
add
lea
test
and
jmp
mov
lods
test
add
xchg
inc
cmp
stos
out
aad
cmp
mov
aam
push
icebp
icebp
sub
mov
std
out
out
cld
cmp
xchg
rcrl
jl
mov
dec
jg
out
inc
adc
pop
shll
sub
mov
dec
sub
jbe
jne
push
out
imul
jle
int3
jno
pop
pop
push
ds
imull
xchg
out
mov
push
xchg
cmpsl
lahf
add
ds
lea
jns
int3
outsb
icebp
repnz
push
inc
mov
std
mov
data16
lret
sbb
ret
popf
int3
pop
ljmp
movsl
push
xchg
in
aas
adc
fldenv
xchg
cmp
jmp
in
and
lea
cmp
aaa
testl
jns
test
add
lcall
mov
das
cmp
rol
sahf
push
jns
add
jne
add
jno
imul
inc
imull
mov
or
jge
add
lods
xchg
cmp
test
mov
mov
mov
mov
xchg
sub
pop
sarl
gs
mov
xor
sbb
fxch
pop
or
jne
or
aam
xchg
push
cmp
cmp
cmpsl
cwtl
fidivl
cmp
lahf
stos
xor
popa
push
sbb
rcll
int
test
mov
test
inc
in
mov
mov
jns
adc
cmpsl
sub
jb
adc
mov
mov
xor
bound
call
pop
into
mov
push
inc
xchg
or
sub
pop
sbb
mov
adc
cmp
inc
mulb
xchg
imul
scas
xchg
mov
int3
rolb
jne
pop
or
or
sub
sbb
data16
movsb
mov
mov
aad
lods
dec
jecxz
lds
stos
inc
or
insl
bound
add
stos
stc
arpl
inc
cli
cld
mov
inc
test
mov
ror
test
sub
cld
shl
or
ror
cld
push
test
xor
stc
mov
sbb
lcall
pop
cmp
or
movsl
xor
out
out
add
cmpxchg
fiaddl
std
mov
in
movsl
fsub
adc
sub
mov
pop
push
or
xor
scas
adc
mov
lds
scas
repz
lahf
jmp
test
fwait
or
pop
cmp
pushw
sub
xor
and
fsubl
cmp
js
sbb
adc
dec
cli
xor
adc
fcomi
mov
or
push
cs
sub
dec
arpl
push
notl
mov
cmp
jl
outsb
jecxz
mov
mov
and
cli
out
movl
xor
test
fisttps
jne
sbbl
cs
js
outsl
add
ret
push
sub
fnstcw
push
call
call
pop
out
inc
push
mov
pop
pusha
addr16
dec
imul
out
fisubrl
mov
stc
ficoms
cmp
sahf
mov
mov
call
int
xchg
jae
je
dec
out
mov
leave
data16
in
aad
add
dec
mulb
dec
movsb
inc
cmpsl
fisubrl
ljmp
dec
in
sbb
lds
pop
xchg
push
xchg
ficompl
xor
push
mov
movsb
nop
scas
mov
dec
mov
and
adc
outsl
mov
lock
jno
adc
loop
cmp
test
pop
lods
cmp
js
push
or
lock
lods
jo
jae
inc
hlt
pop
pop
and
cmp
push
sahf
push
rolb
sbb
cltd
into
rolb
xchg
ja
fsubl
xchg
cmp
add
dec
ret
mov
imul
add
mov
pop
imul
fcmovbe
sbb
push
in
fistl
out
xor
add
jp
cld
cmp
mov
icebp
dec
pop
out
aas
insl
outsb
xor
cmp
movsb
cmc
sub
test
fsubs
xchg
push
fcoml
mov
test
aas
cmc
ficomps
and
inc
cmp
adc
loope
loope
add
and
pop
cmp
inc
test
xor
inc
movsl
mov
mov
mov
cld
popa
insb
dec
data16
inc
inc
rcrl
pushf
adc
std
leave
xor
dec
jle
and
jg
cmpsb
scas
jb
scas
and
in
outsl
stos
arpl
movsb
inc
dec
in
mov
rcrb
aaa
cltd
and
loope
mov
jae,pn
sahf
iret
xchg
dec
mov
mov
push
aas
lock
ljmp
scas
jl
fwait
xchg
fnstcw
and
jbe
and
sub
pop
adc
adc
js
fildll
cs
int
ljmp
cmc
movsl
lock
or
mov
jnp
and
mov
les
jnp
adc
dec
shl
cmpsl
add
push
sbb
sbb
pop
or
pop
pop
popf
mov
inc
xor
pshufw
mov
or
xorl
enter
jp
fldt
sahf
out
inc
mov
push
push
mov
int
lret
gs
pop
add
lock
mov
mov
sti
mov
sub
test
push
cmpsl
inc
fistps
idivb
xchg
pop
mov
mov
nop
inc
adc
imul
mov
hlt
and
xor
nop
inc
adc
fadds
fcomps
lcall
daa
and
xor
and
cmp
int
mov
cmp
gs
mov
and
push
test
test
imul
cmp
movsl
add
pop
xor
add
lcall
sbb
sahf
lea
dec
movsl
xchg
xchg
rorb
rclb
aaa
xchg
mov
popa
sub
movsb
ja
sbb
xor
lock
adc
mov
jp
pop
lahf
cmp
add
into
inc
add
pop
adc
pop
insb
cmp
or
orb
sub
movsl
mov
out
loop
adc
sti
push
leave
ljmp
nop
or
fistps
jmp
pop
pushf
or
cs
outsl
jmp
nop
mov
dec
into
icebp
add
shrb
data16
jo
int3
adc
insl
mov
fistpll
aas
push
xchg
mov
into
addb
inc
ljmp
sti
aad
inc
insb
add
int
push
pop
clc
or
lret
incl
jnp
jle
sti
in
out
adc
and
mov
push
jmp
mov
push
push
mov
ret
repz
push
xlat
fimull
outsl
cmpsb
pusha
lret
lds
addl
in
aam
sbbl
push
das
sbb
lahf
rorb
xor
sti
cmpsl
incl
cmp
enter
les
movsl
and
xchg
pop
mov
jmp
jecxz
int3
fisubrl
fcomi
imul
ljmp
mov
xchg
xchg
pop
insl
jb
popf
mov
out
or
dec
xor
sbb
adc
scas
outsb
jo
cli
cmp
or
das
jno
mov
cmp
ljmp
ljmp
jb
adc
add
fidivrs
and
and
push
sub
cmpsl
mov
or
jmp
inc
test
mov
out
jo
jbe
jbe
push
xor
push
push
in
mov
pushf
sub
jns
and
mov
fsts
dec
ss
jmp
cwtl
lret
push
cli
cwtl
jge
or
test
jp
sbb
mov
cmp
cmp
sub
mov
pop
cs
mov
mov
pushf
loopne
jb
inc
xorl
in
lock
pusha
dec
push
inc
movsb
aad
lret
xor
sbbb
inc
inc
push
cmc
mov
pop
loope
pop
xor
fisubrs
jae
sbb
dec
cmp
iret
ljmp
or
mov
inc
in
pop
popa
mov
aam
sbb
bound
popa
push
sbb
mov
arpl
mov
incb
xor
adc
insl
pop
cmc
imul
ds
sbb
data16
test
dec
mov
cld
adc
jecxz
sbb
orb
out
lock
push
sub
push
xor
inc
push
vxorps
aad
push
std
leave
mov
inc
aam
cmc
xchg
test
mov
mov
imul
mov
xchg
jae
leave
mov
loopne
xchg
fisubrs
jp
aad
inc
jne
mov
enter
lret
fsts
xchg
cwtl
inc
loope
test
jmp
inc
lods
inc
mov
fiaddl
sbb
add
jns
adcb
int3
jmp
mov
pop
pushf
jg
or
jecxz
or
lcall
jns
jno
enter
sbb
mov
and
push
add
mov
xchg
and
sar
inc
es
popa
xchg
lock
insl
sub
dec
ficomps
or
leave
jne
push
mov
hlt
ret
sub
and
int3
stc
jmp
mov
jo
xchg
js
scas
xchg
not
or
rcll
adc
push
mov
add
and
loopne
lea
mov
sub
lahf
xrelease
fcoml
je
lock
inc
xchg
bound
xor
xchg
cmp
lret
pminsw
lret
sahf
xchg
cltd
cltd
mull
cmp
shl
and
mov
adc
or
in
shl
test
gs
imul
in
mov
pop
adc
fwait
dec
loop
xchg
mov
sarb
fildll
inc
dec
or
ja
lock
scas
inc
push
and
xlat
sbb
and
pop
xchg
ficoml
pop
in
jne
ljmp
int
adc
dec
aam
jecxz
leave
lahf
int
add
sub
cmp
xor
and
push
cmc
push
dec
rolb
jae
je
dec
enter
jle
aam
sub
arpl
dec
mov
push
stc
mov
loope
xlat
fs
pop
push
pop
pop
xor
pushf
add
sbb
xor
mov
mov
lods
ss
ljmp
cmp
rolb
les
les
jo
inc
add
cmp
cmp
add
xor
test
sub
insb
adc
adc
lahf
in
push
mov
ret
scas
adc
sub
lods
xchg
gs
jge
sar
sbb
cmp
mov
or
aad
lods
mov
loope
mov
lods
ds
ret
mov
dec
jne
loopne
adc
aam
mov
ja
dec
inc
cmp
imul
mov
mov
jecxz
mov
int
pop
aas
roll
or
add
out
cld
adc
icebp
push
jne
orl
dec
pop
js
call
or
pop
mov
repz
dec
push
loope
cmp
mov
add
outsb
punpcklwd
mov
daa
daa
outsl
shrl
push
cmp
jne
lret
jb
mov
sbb
mull
jno
sbb
cmp
sbbb
dec
andb
lret
std
sbb
dec
pop
gs
push
and
fistpll
xor
stos
in
mov
inc
test
sbb
mov
mov
jg
mov
cltd
in
fwait
ja
mov
xchg
fs
pop
xor
jg
pop
dec
movb
mov
lods
test
or
or
or
insb
sbb
jbe
out
xchg
jmp
addr16
jb
xor
push
pop
or
scas
popa
jo
stc
xor
dec
pop
loope
jns
sub
notrack
mov
addr16
jl
or
adc
iret
mov
ficomps
mov
adc
pop
push
xchg
lea
or
lcall
sbb
jno
idivb
jae
fistl
rolb
in
cmp
inc
mov
hlt
sbb
and
add
cmp
call
into
mov
adc
mov
scas
jne
lcall
stos
fildl
inc
test
movsl
xor
and
push
mov
aad
pop
mov
xor
imul
xor
jg
mov
xor
in
pop
mov
cmpb
jmp
xor
or
adc
pusha
gs
mov
test
nop
aaa
mov
sbb
insb
sbb
test
call
mov
movsb
cli
fiadds
ficoms
stc
dec
lock
cmp
ja
xlat
popa
mov
cmp
xchg
xor
mov
popw
jbe
xor
test
lahf
inc
in
pop
and
fwait
adc
mov
cmc
xchg
mov
adc
dec
adc
daa
xchg
xor
jo
int3
insl
adc
xor
cmp
and
adc
dec
push
out
dec
icebp
jnp
pop
test
scas
xor
icebp
ret
or
arpl
test
out
gs
out
mov
xor
fdivs
cltd
jle
inc
in
pop
mov
sub
aaa
dec
xlat
repnz
pop
into
out
add
jp
fwait
pop
fildl
shrb
or
lds
dec
pusha
negl
lods
mov
cmp
add
das
fldl
sub
add
jmp
xchg
cmc
icebp
daa
repnz
dec
xchg
enter
sar
mov
xor
rclb
pop
ds
or
sbb
scas
pushf
int
pop
pop
pop
fmul
mov
xchg
stos
scas
mov
scas
xchg
pop
loop
outsb
jle
in
call
xor
je
mov
mov
sub
rorb
testl
js
out
ja
pop
es
ret
inc
mov
popf
repnz
leave
movsl
pop
inc
mov
int3
pop
add
mov
and
sbb
fildl
dec
pop
shrb
xor
sub
add
lret
add
mov
sbbb
push
or
jmp
xchg
decl
xlat
es
enter
pop
fcoml
daa
mov
mov
out
jns
xchg
out
jno
data16
add
iret
jg
pop
cli
sub
mov
pop
adcl
cmp
scas
and
push
test
arpl
into
sub
pop
mov
sbb
popf
stos
jnp
or
xchg
dec
in
sbb
xor
enter
jecxz
xchg
push
insb
test
push
pop
rorl
xchg
movsl
nop
out
sti
jb
sbb
or
xchg
adc
and
mov
movsl
sub
jg
xor
popa
push
xor
daa
cmp
or
fnstcw
mov
icebp
push
and
movsbl
xor
cmp
xchg
insl
and
add
div
and
xor
jmp
sbb
and
iret
sub
or
jmp
xchg
sub
lods
ljmp
mov
mov
dec
popa
inc
xchg
mov
mov
pop
push
ret
addr16
or
mov
call
out
push
rcll
mov
nop
stos
dec
xchg
pop
push
jno
je
iret
add
add
mov
out
fldt
mov
iret
sbbb
xor
sub
and
sti
nop
push
sbb
lods
arpl
mov
dec
sbb
aam
sub
jo
adc
iret
jg
adc
iret
adc
jb
and
lods
dec
push
js
mov
xchg
adc
sub
cmp
ss
dec
xor
xor
scas
fstpl
jns
and
mov
cwtl
dec
ret
test
and
int3
mov
xchg
sar
push
mov
in
testb
test
xor
adc
xlat
cmp
test
frstor
cwtl
or
out
xchg
gs
xor
rorb
pushf
dec
test
fidivs
pop
ret
sub
paddb
jecxz
fwait
pop
push
insl
in
pushf
sub
jnp
inc
inc
lcallw
dec
push
sub
jg
mov
pop
sbb
data16
push
pop
je
sub
ja
xchg
mov
cmp
shrb
cmp
in
into
cltd
push
in
mov
ss
dec
mov
pusha
addb
mov
sbb
addr16
lods
jmp
shrb
cmpsl
jae
xor
lcall
iret
jbe
push
lret
sbb
sbbb
xchg
xor
push
fwait
adc
mov
and
inc
cmp
inc
movsl
inc
cwtl
push
or
jle
or
imul
enter
mov
fildl
push
sbb
push
lea
inc
insl
jecxz
jnp
dec
testl
fs
lock
sbb
mov
aam
pop
orl
mov
inc
push
imul
pop
add
jmp
pop
mov
insl
addr16
xchg
adc
mov
push
jecxz
repnz
je
aas
sub
bnd
dec
xchg
add
jo
sarb
fdivp
pop
jl
cmp
aas
ljmp
cmp
gs
dec
adc
aaa
into
xchg
adc
jne
add
pop
and
loop
outsl
sub
add
lahf
mov
iret
gs
sahf
popa
jb
mov
fimuls
jecxz
cmp
test
ret
notb
cli
mov
inc
pushf
pop
push
hlt
pop
dec
shll
sbb
fsubrl
dec
push
cmp
sarl
cwtl
aam
xchg
add
push
icebp
ljmp
mov
pusha
int3
int
das
mov
mov
add
mov
ret
inc
lcall
xor
fwait
das
popa
aam
cltd
mov
xchg
in
mov
dec
jns
inc
xchg
imul
cmpsl
ret
rol
ja
repnz
xorb
hlt
add
push
loopne
pusha
ja
adc
xchg
adc
lcall
xchg
mov
or
jnp
pop
and
mov
sbb
mov
imul
js
and
mov
ret
ds
cli
xor
adc
loopne
sbb
aad
clc
push
movaps
xor
xor
addr16
insb
aam
push
or
les
lret
cltd
jmp
je
insb
and
mov
call
rorl
adc
ds
lret
or
inc
cmp
mov
outsl
fidivrs
cmp
cmp
cli
fcmovbe
mov
leave
daa
daa
or
dec
pushf
push
cld
pop
dec
lods
and
int3
xchg
stos
test
cmp
pop
mov
lret
add
mov
or
xor
adc
mov
mov
aam
insb
adcl
dec
scas
js
cld
push
add
lret
aam
xor
mov
sbb
pop
pop
loopne
pop
cltd
or
fildl
adc
adc
pop
sahf
lahf
in
inc
cmpsb
xlat
pop
movsb
sbb
sbbl
sub
hlt
fisubl
lods
leave
cltd
add
mov
jle
outsb
aam
ljmp
fnsave
mov
aam
mov
addr16
xchg
out
das
push
pop
cltd
fbstp
pushf
cmpsl
aaa
jo
ljmp
data16
test
ficoms
cmc
jne
add
mov
pop
pop
loope
mov
mov
stos
ret
loop
cltd
xor
fstpl
or
sbb
inc
push
rcrb
cmp
std
adc
out
stos
scas
scas
shlb
rclb
jge
scas
mov
fbld
push
xchg
or
dec
fwait
jecxz
push
pusha
xor
jp
repz
imul
js
ja
in
xor
mov
pop
sub
lods
xor
jp
or
fcmovu
mov
rcrl
mov
movsb
push
cmpsl
mov
xor
xor
fldcw
xlat
call
add
ret
cmp
xchg
outsb
ret
xor
xchg
adcl
fadds
and
shl
and
imul
push
mov
mov
pop
cmp
fistpll
test
aam
jno
mulb
ds
xor
adc
dec
ficomps
pop
mov
dec
jle
inc
shll
loopne
sbb
loopne
fs
orl
incb
scas
sti
cmc
jbe
pop
adc
call
inc
and
bnd
nop
dec
xchg
inc
leave
pop
sbbl
lret
inc
mov
jl
cld
cmpsl
ds
outsb
pop
jle
leave
nop
adc
dec
xor
pop
sahf
jp
pop
outsb
fsubrl
dec
cmpsl
xor
xchg
dec
mov
adcl
add
mov
cmp
negb
sub
cmp
add
xchg
push
or
int
shlb
add
sub
sti
jmp
add
adcb
out
pop
sub
inc
loope
arpl
cltd
int
mov
pushf
in
fldenv
fdivrs
xchg
pop
dec
sbb
dec
int3
dec
sbb
test
inc
je
cmp
stc
icebp
adc
cmp
sbb
jns
adc
shll
pop
lret
arpl
icebp
xor
pop
stos
data16
mull
or
bound
xchg
pop
fsubl
repz
je
cmp
jb
ds
in
cli
ss
jge
xchg
pop
or
mov
ja
or
xchg
stos
cltd
test
sub
movsb
outsl
adc
repnz
jbe
push
clc
or
mov
pop
leave
xchg
and
roll
fwait
in
lock
mov
imul
mov
cmpsl
inc
nop
test
bound
cwtl
and
gs
or
out
cmp
or
cmp
insb
adc
scas
dec
jmp
movsb
icebp
ficoml
jno
ss
orb
call
mov
rorb
pop
mov
pop
add
data16
pushf
mov
dec
cmp
int3
mov
cmp
pop
ja
pushf
adc
les
push
pop
jne
push
jge
jp
decl
cwtl
add
pop
jno
imul
jmp
insl
xchg
gs
xor
clc
sbb
push
xchg
inc
push
es
push
sbb
negl
inc
pusha
clc
test
adc
loopne
subb
sbb
jle
js
inc
or
ja
and
xchg
xlat
xor
sbb
inc
xchg
xchg
aaa
repz
mov
test
mov
xlat
inc
mov
movsl
push
mov
cmp
mov
mov
stos
mov
xchg
lock
popa
data16
out
movsb
inc
fs
enter
int3
in
loope
lods
dec
sbb
insb
je
push
ror
and
xchg
cmpsl
xor
jp
xchg
clc
jmp
mov
mov
faddp
mov
jl
xlat
movsl
jnp
lret
jne
dec
jb
and
shll
mov
mov
jecxz
cmpsl
sub
inc
xchg
fs
js
sub
sub
push
push
push
fwait
icebp
ret
lods
fidivrl
or
mov
push
in
mov
push
pushf
scas
inc
lods
les
push
clc
mov
sbb
adc
xchg
sub
sahf
mov
cs
adc
test
add
insl
sub
test
pop
mov
mov
push
scas
sbb
pop
or
inc
xor
out
loopne
adc
mov
cwtl
inc
sub
jecxz
mov
notb
push
adc
mov
inc
movsl
pusha
cld
and
adc
jnp
dec
lahf
mov
stc
push
into
out
adc
pusha
xchg
mov
xlat
iret
lds
sbb
xchg
mov
rcrb
sahf
xlat
cmp
std
les
xor
cmpsl
inc
push
gs
stos
mov
push
call
push
sub
xchg
ds
in
xchg
in
xor
pop
out
data16
inc
fcmovbe
mov
movsb
enter
mov
add
scas
out
inc
mov
loopne,pn
mov
sbb
jle
lea
enter
in
xlat
repz
sub
xchg
in
mov
adcb
cmpsb
jp
in
xor
xor
mov
mov
fisttpll
cmpl
cmp
xor
loopne
lahf
daa
jge
jle
ds
and
xchg
mov
dec
jle
std
outsl
cli
imul
popf
pop
pop
fcoms
leave
fcmovbe
fsubrs
cli
jmp
mov
enter
jp
push
and
xorb
pop
mov
xor
xor
inc
xor
push
ss
int
sub
aaa
fsubs
sbb
add
insb
repnz
adc
jecxz
sub
inc
or
sbb
xchg
inc
mov
xchg
inc
dec
or
jl
jmp
dec
inc
sub
repz
daa
fiadds
push
mov
sub
mov
lock
loop
or
int3
xchg
lcall
inc
imul
fistpll
mov
fcoml
or
xor
or
jge
push
add
addr16
sarb
lds
roll
adc
sub
js
push
inc
sbb
inc
cli
sbb
in
mov
add
dec
outsl
pusha
lds
or
loop
add
push
xor
sub
nop
mov
lock
pushf
xchg
sti
sub
test
movsl
dec
jne
push
int
mov
xor
sub
aad
and
push
jge
int
push
in
fisubrs
inc
out
sub
repnz
shrl
test
push
jg
mov
xor
xchg
insl
popa
pop
stos
mov
jl
cltd
iret
mov
jp
out
and
push
fucomip
std
push
cmp
mov
sub
lcall
mov
pop
inc
mov
lahf
clc
push
cmp
imul
in
leave
enter
aam
and
fbld
sti
gs
mov
stos
push
mov
loope
ret
movsb
out
sbb
xchg
mov
popf
sub
popa
mov
ja
fsub
mov
js
or
sarb
push
and
pop
mov
mov
lds
xlat
loopne
xchg
push
mov
mov
aaa
pushf
xchg
dec
xor
sub
xchg
imul
ds
push
push
push
mov
cld
xchg
jo
rcr
subl
dec
testl
mov
fstl
pop
cld
add
js
xor
xor
mov
out
int3
push
pop
fisubl
out
push
cld
cmp
mov
out
outsb
insl
gs
and
mov
mov
adc
push
dec
mov
cmpsl
jne
stos
or
and
aaa
jmp
add
push
mov
popa
fildll
ja
test
jnp
add
lahf
lcall
mov
inc
or
insb
les
lret
in
sbb
fs
out
push
imul
sub
mov
imulb
dec
mull
push
push
sub
mov
pusha
mov
dec
clc
jnp
rcr
sbb
or
scas
mov
cmp
jecxz
cmpsb
sub
sbb
lret
push
lahf
push
cmpsb
lods
xchg
int
sarl
inc
notb
dec
subl
push
pop
mov
fnstcw
xchg
hlt
data16
or
outsb
addb
cltd
jae
imul
sub
xor
mov
enter
xchg
adc
int3
mov
es
sbb
xor
andb
dec
inc
pop
sbb
in
and
shll
mov
push
dec
mov
xor
adc
call
out
push
push
adc
cmp
ror
mov
icebp
mov
cld
imul
push
mov
push
xor
dec
xor
subb
imul
stos
fsubrl
xchg
pop
push
addr16
imul
dec
push
arpl
xchg
cmc
xchg
sbb
sbb
lods
or
andl
stc
imull
mov
xor
cmp
jno
push
mov
mov
mov
inc
pop
jno
cld
nop
xchg
lds
wrmsr
nop
pusha
push
repz
jbe
mov
lret
sbb
jg
cmp
rcll
adc
jno
pop
sub
or
jnp
inc
inc
jecxz
xchg
mov
nop
xchg
movsb
jb
repz
fsubp
das
lahf
fdivl
add
xchg
cs
xchg
mov
popa
mov
cmp
enter
sub
jo
shll
xchg
lahf
dec
mov
data16
add
sub
inc
xchg
push
sbb
push
aaa
inc
movntps
adc
push
ss
jns
mov
insb
nop
xchg
rcrb
cmp
popf
push
xchg
movsl
lds
notl
aaa
or
das
jge
cmpsl
dec
aam
sub
aam
cmp
fcmovu
insw
data16
neg
or
in
jnp
and
insb
roll
xchg
imul
jbe
fisubs
test
fsubrl
pop
xor
movsl
add
pop
jp
lea
pop
std
scas
test
cmp
pop
sti
fcompl
mov
push
cmpsb
stos
mov
sbb
push
pop
iret
adc
xor
aad
lods
arpl
inc
ds
xor
dec
cmp
outsb
arpl
rcll
push
sub
popa
or
xchg
sahf
adc
mov
aam
jnp
aas
ja
mov
aaa
or
fstpl
inc
aam
ds
test
ret
jnp
mov
movsl
inc
shlb
ret
mov
push
rorb
pop
mov
pusha
jecxz
out
clc
xchg
std
les
stos
or
sbb
inc
lock
mov
inc
sti
and
dec
jge
lret
addr16
xchg
xor
xlat
inc
mov
jns
jae
mov
xchg
ljmp
xor
in
mov
mov
xchg
mov
pop
mov
xchg
cltd
fwait
push
test
testb
jnp
pop
fcmovnu
xchg
xlat
scas
out
push
out
adc
mov
popa
cmpsl
xchg
xchg
sbb
cs
ret
fdivr
or
mov
stos
xor
xor
pop
add
cmpsb
pop
mov
cmpb
lret
inc
movb
in
addr16
ja
push
shl
popf
movlps
aaa
pop
mov
fistps
rcll
in
jbe
push
dec
iret
jecxz
sarl
xor
movsl
sbb
test
or
inc
mov
mov
push
jmp
sti
in
and
stos
xor
stc
push
xchg
fbld
mov
scas
test
stc
aas
shlb
movsb
pop
insl
dec
pusha
arpl
mov
mov
jb
scas
call
cld
add
add
pop
xchg
fidivrl
adcl
out
in
push
les
insb
icebp
mov
int
dec
mov
push
xchg
in
scas
fs
lcall
jbe
lods
mov
loopne
inc
rcrl
xor
sub
push
inc
dec
cs
fstps
mov
fwait
arpl
jmp
sahf
sub
or
pop
adc
push
xor
sbb
adc
sbb
push
aad
dec
lcall
in
pop
scas
jmp
xchg
gs
xor
mov
ja
push
jns
mov
out
mov
cltd
push
sbb
leave
daa
mov
add
mov
xor
out
insl
dec
scas
fcmovnu
stos
mov
sahf
jmp
push
pop
cmc
pusha
lahf
xchg
ret
loopne
out
adc
rclb
inc
addr16
bound
push
nop
push
inc
push
imul
testl
dec
stos
mov
cmpsl
lcall
mov
cmp
pop
and
push
rolb
jecxz
mov
xchg
cmp
pop
mov
pop
daa
int3
mov
ss
fwait
daa
fisubl
jbe
in
insb
inc
mov
stc
sub
sbb
in
pushw
movsb
mov
jl
out
out
mov
jno
rcl
icebp
sbb
cld
testb
push
mov
call
push
in
push
incb
add
pusha
cmpsl
nop
lret
jae
lret
sbb
ja
and
shl
inc
daa
push
iret
adc
cmp
pop
lahf
mulb
mov
std
cs
punpckldq
cmp
aam
xchg
fwait
hlt
leave
mov
lret
mov
cmp
lea
xor
mov
push
pop
jecxz
outsl
sahf
sbb
imul
aad
cltd
push
jns
sub
xor
sahf
stc
sbb
sub
pop
push
pop
cmp
dec
xor
xchg
push
cmp
mov
fs
sbb
cmp
sahf
idivb
cmc
inc
jle
or
xor
bound
add
xchg
out
xchg
jns
mov
sub
iret
push
push
aaa
add
pop
clc
stc
mov
arpl
outsl
dec
das
dec
aaa
adc
sahf
sub
dec
xor
and
pop
add
in
or
test
xor
movsb
inc
roll
sub
rolb
or
cld
data16
mov
add
cs
sbb
sbb
stos
aas
test
ficomps
insb
push
in
inc
xor
push
adc
pop
push
xchg
loopne
mov
mov
add
inc
daa
push
inc
insl
mov
je
dec
sahf
adc
adc
popa
test
out
xchg
adc
out
mov
scas
mov
lcall
and
sub
jb
xor
xchg
mov
addl
mov
mov
push
pop
pop
mov
jae
mov
ljmp
rcrb
push
xor
aas
imul
scas
imul
add
cmpsb
dec
aad
mov
fmull
push
jnp
fisubrl
addl
jns
and
adc
adc
add
xor
cmp
sbbl
and
bound
mov
push
popl
repnz
and
leave
sbbb
cmpsb
lea
cmp
jge
dec
test
in
and
mov
adc
inc
ret
or
jmp
inc
popa
inc
mov
call
fimuls
jne
repz
dec
scas
aas
sub
mov
ret
icebp
arpl
sub
mov
pop
sub
dec
rclb
cmpsl
sub
sbb
xor
dec
fbld
xor
test
adcb
and
repnz
jns
mov
ja
mov
mov
out
mov
sbb
adc
insl
int3
mov
and
loope
test
jmp
mov
pusha
sti
cmp
lds
dec
clc
insb
pop
movsl
pop
xchg
notl
mov
add
inc
pop
out
mov
movsl
xchg
jno
add
ret
cmp
push
daa
jno
dec
call
cli
xor
mov
push
xchg
cmc
dec
adc
push
not
cmpsl
pusha
adc
je
sub
pop
pop
mov
cmc
dec
cmc
pusha
sti
aam
pop
out
xor
jl
sarb
ret
and
idivl
shr
int3
or
notl
cmp
icebp
in
mov
pop
mov
lea
inc
or
dec
ljmp
sub
sub
dec
add
roll
xchg
repnz
sbb
imul
mov
mov
mov
mov
xor
stc
incb
hlt
out
jo
mov
and
pop
jl
repnz
in
lds
inc
insb
out
push
rcrb
aam
stos
xchg
mov
push
fwait
jae
popa
adc
rcr
xchg
lret
repnz
out
mov
int
xchg
inc
mov
lock
imul
and
and
adc
cwtl
jne
aaa
xchg
xor
mov
iret
fnstenv
or
jg
push
push
mov
jbe
lret
mov
mov
bound
jle
in
cmp
pop
push
fbld
sub
cmp
cmp
add
out
mov
mov
test
pop
inc
ljmp
add
mov
mov
sbb
sub
in
subb
rorl
ds
dec
sbb
xchg
testb
pusha
lea
loop
and
and
cmp
aad
into
adc
ret
cmp
cld
fstpt
js
mov
xchg
fs
cmp
pop
jo
pop
sti
mov
pop
mov
push
push
filds
daa
xor
daa
jae
shlb
lea
imul
cmp
bound
scas
mov
mov
test
push
icebp
inc
imul
outsb
imul
das
lcall
fmull
imul
inc
xor
pop
pop
test
sub
sbb
rorl
cmp
imul
mov
pusha
mov
test
pop
loopne
test
cwtl
mov
or
out
or
js,pt
testl
push
push
cmpsb
pop
sbb
int
jmp
ret
stos
sbb
xor
pop
dec
xchg
cmp
in
fistpl
cli
mov
xlat
jo
mov
ret
cmp
out
in
cmp
adc
fidivrl
ret
fmuls
xchg
lods
sub
or
dec
cmp
push
out
xor
mov
movsb
cmc
mov
push
cwtl
lcall
aam
pop
cs
sbb
out
icebp
mov
lret
packuswb
sub
stc
xchg
xchg
es
sti
push
push
loop
in
out
pop
fwait
clc
push
shlb
rorb
push
jp
pop
xchg
in
cmp
iret
dec
dec
insl
aam
dec
push
mov
repnz
sub
repnz
dec
jb
daa
shll
mov
repnz
lock
sbb
inc
in
inc
es
orl
xor
push
jmp
test
jne
dec
repnz
push
sub
xor
clc
test
dec
incl
ret
imul
pop
dec
loope
movsb
popa
cld
mov
and
addr16
xor
dec
insb
cmp
mov
pop
mov
jl
or
in
addl
mov
adc
in
std
mov
inc
sti
mov
jb
scas
inc
jbe
lock
bound
in
insl
pop
lods
rcl
hlt
es
jl
xor
loopne
leave
push
repz
push
mov
pusha
dec
pop
xchg
xchg
lea
and
in
jb
sub
mov
dec
pop
aaa
mov
cmpsb
push
xchg
movsb
jo
fcoms
xchg
xor
add
pushf
scas
sub
mov
aaa
jo
fadds
out
outsl
xchg
pop
sub
hlt
mov
xchg
xchg
dec
fimull
fistps
fstps
inc
cli
push
popl
call
pop
ror
or
dec
jecxz
sahf
ds
jg
xchg
aam
sti
out
imul
mov
fmull
xchg
sbb
stos
mov
out
mov
cmp
sbb
push
mov
ret
mov
mov
pop
hlt
nop
or
or
xchg
clc
or
shll
pushf
stc
push
or
dec
push
add
xchg
cmpsb
ret
adc
dec
push
sbb
adc
pop
add
popf
mov
mull
aam
or
sar
adc
jle
ljmp
fists
dec
xchg
dec
clc
ss
jno
xchg
movsl
out
notb
mov
ja
iret
sbb
fsubr
lods
orl
and
std
dec
xor
out
mov
sbb
rorb
repnz
out
cmc
and
pop
mov
fsubrp
sbb
and
rolb
movsl
fcoms
mov
es
inc
aad
add
out
insl
mov
ja
xor
mov
jb
mov
add
sbb
mov
xchg
shr
mov
out
insl
outsb
push
lret
sub
movsl
mov
in
dec
inc
sub
push
mov
or
fsubs
sahf
sub
imul
jle
jne
jne
loopne,pn
xor
sbb
fwait
mov
popa
dec
cwtl
jae
sahf
jbe
int3
es
ret
rcll
movsl
cs
pop
nop
cmp
pop
xor
data16
lock
stc
insb
dec
dec
adcb
xchg
mov
mov
test
movsl
pop
fidivrs
pop
pop
adc
ljmp
sbb
dec
xchg
rorl
lds
add
pop
sarl
sbb
imul
push
aaa
stos
cmp
sub
push
scas
sub
dec
add
or
das
sub
jg
ja
imul
sbb
insl
pop
push
dec
cmp
xor
aad
adcl
mov
imul
movsb
in
sub
dec
dec
popf
scas
ljmp
mov
sbb
lahf
call
mov
pop
dec
jb
ljmp
mov
repz
inc
addb
fisttps
jg
popa
pop
add
stc
scas
pop
pop
popf
sub
mov
push
testb
dec
fcmovb
test
ljmp
push
adc
xchg
imul
sbb
movsb
hlt
pushf
sbb
push
push
push
push
aas
jnp
sbb
je
xchg
loop
or
inc
es
jp
outsb
mov
push
push
jns
fistps
sub
pop
mov
icebp
xor
fcmovne
std
jle
inc
jno
mov
das
call
repz
cltd
shlb
pop
mov
rcrb
mov
iret
into
jg
cmp
inc
xor
addr16
outsl
aad
fdivrl
js
lods
mov
mov
jle
aad
add
call
sti
cwtl
pop
ja
push
sub
hlt
popf
movsl
inc
rclb
and
inc
push
add
add
arpl
dec
lock
mov
sub
cmp
out
leave
in
int3
movsl
insl
dec
dec
mov
in
mov
popf
pop
pop
dec
cld
sbb
inc
jnp
ss
sbb
stc
ds
out
adcb
jns
mov
push
imul
mov
inc
cmpsl
push
mov
jle
les
ljmp
jbe
ds
sbb
cs
sbb
es
shl
xchg
and
in
in
add
movb
push
mov
sbb
mov
cmpl
out
fildll
fs
or
es
adc
push
cltd
sbb
imulb
inc
stc
dec
rcrl
mov
loopne
cwtl
fimuls
sub
shr
aad
dec
in
repz
popf
shlb
inc
fists
push
popa
shll
push
sahf
add
or
jns
pop
add
cmp
or
add
cmp
fists
int
mov
call
sbb
fadds
push
insl
jnp
jle
cmp
movsb
int
mov
push
lods
int
pop
mov
pop
ret
cmp
sub
sbb
mov
fxam
mov
pop
jne
rorb
xchg
scas
add
movsl
into
jle
inc
aaa
cmp
pop
fucomip
mov
or
mov
fbld
cltd
mov
icebp
sub
and
imul
movsb
rolb
and
loopne
dec
jb
jmp
pop
mov
xchg
add
leave
mov
push
out
pushf
loope
gs
fwait
add
xchg
into
add
cs
inc
cmpsl
xchg
repz
and
jg
stos
shrl
fxch
daa
jo
sti
sbb
jg
pop
mov
cmp
xor
jecxz
std
gs
inc
lahf
scas
jecxz
lods
xlat
vmovdqa
jno
inc
mov
jecxz
xor
push
lds
out
ss
stos
imul
pop
mov
out
add
mov
cld
push
lods
jecxz
imul
add
push
sbbb
mov
fimuls
outsb
mov
push
mov
lea
pop
xchg
cmpsb
cmpsb
pop
adc
push
or
and
test
rorb
into
add
rol
mov
add
dec
dec
pop
xchg
inc
cmp
cmc
inc
sub
pop
lret
rcll
jno
push
out
loopew
lret
xor
sahf
push
out
xor
ja
mov
push
push
xchg
adc
push
pop
test
cmp
aad
cwtl
mov
std
pop
adc
mov
adc
leave
shl
sub
inc
xchg
mov
lcall
adc
ljmp
mov
test
dec
mov
pop
lods
rep
cltd
cmpsb
xor
pop
nop
sahf
inc
and
pop
divb
les
repz
cld
cwtl
fimull
enter
movq
pop
sub
adc
mov
popa
push
jne
push
clc
and
flds
push
push
mov
lret
mov
nop
jae
shrl
pusha
dec
out
pop
jl
mov
mov
call
or
push
test
inc
push
std
mov
loopne
add
test
push
fcmovnbe
in
jl
pop
inc
cmp
popf
xor
cld
cmc
arpl
cmp
out
xor
mov
je
imul
add
daa
in
jg
and
xchg
add
lahf
add
int
cmc
dec
jbe
adc
adc
xor
xor
out
or
pop
lret
dec
int
pop
data16
jae
dec
and
loopne
cmp
jle
cmp
loopne
xchg
fs
add
loopne
pop
test
pop
popf
mov
xchg
jb
lahf
inc
push
mov
add
stos
loop
pop
icebp
leave
pop
pop
sahf
dec
in
mov
xchg
stc
adc
and
push
insl
pop
clc
mov
pop
in
aas
test
fcompl
imul
dec
js
mov
repz
jg
jne
test
gs
rcrb
pop
sub
scas
add
cltd
sub
xchg
into
jge
insl
ficompl
sbb
out
push
daa
xor
pop
sti
and
test
testl
lea
inc
or
fsts
xor
loopne
js
fnstsw
addl
hlt
js
sub
scas
mov
or
roll
mov
stos
mov
rorb
xor
cli
subb
js
mov
jno
xchg
xor
xor
movsb
sbb
in
mov
jp
inc
sub
pop
dec
repnz
xor
xchg
ja
or
pop
mov
sbb
imul
xor
jmp
icebp
bnd
xor
or
imul
cld
adc
pop
pop
test
cwtl
aam
inc
jmp
out
dec
jns
and
nop
pop
sahf
push
inc
mov
data16
out
or
fnsave
sub
lret
scas
jmp
js
mov
notb
xor
xchg
ja
imul
mov
pop
not
int3
aam
lea
sub
pop
sub
or
sbb
push
pop
cmp
in
cpuid
add
jle
cmc
ret
and
mov
gs
xchg
jge
dec
enter
gs
xchg
shlb
pop
int
stc
push
cmpsl
push
ficompl
add
shlb
xchg
dec
add
sbb
adc
aad
mov
mov
xor
adc
push
pop
stos
pop
mov
xor
mov
call
lret
in
push
dec
mov
inc
imul
sub
call
and
fisttps
pop
mov
or
push
fisubrl
cmp
dec
push
iret
jge
adc
loope
std
js
arpl
shll
push
pop
in
ficompl
xchg
in
xor
mov
adc
in
subb
jae
and
push
pusha
lea
pop
push
scas
cmp
insl
shlb
outsl
addr16
fsubs
gs
jo
rclb
adc
fimuls
adcb
or
jbe
mov
popa
dec
js
in
shll
popf
fidivl
jbe
dec
xlat
xchg
mov
push
test
inc
in
iret
ficoms
jno
daa
mov
shrb
dec
pusha
adc
mov
push
push
out
movb
insl
outsb
pop
lahf
xlat
or
int3
mov
cmp
xchg
mov
faddp
shlw
loopne
push
insl
call
shlb
cmp
cmp
mov
mov
hlt
cmp
aas
lret
in
push
call
mov
cmp
sbb
add
or
enter
push
mov
sub
jl
mov
test
pop
sbb
push
popa
call
push
fcomi
jns
inc
xor
adc
pop
jno
adc
mov
xchg
and
daa
ret
adc
loopne
mov
ja
push
cld
sahf
fs
cmp
pop
xlat
push
ficompl
adc
inc
sbb
ret
cli
pop
int3
add
xor
or
mov
mov
mov
shld
imul
stc
or
fcmovnu
mov
jge
aaa
bound
mov
inc
and
mov
pop
mov
mov
movsl
in
jg
in
sbb
stos
dec
cmp
add
outsb
ret
jecxz
xchg
or
mov
roll
jns
fs
lahf
subl
aad
pop
sub
push
xchg
lods
adc
fstpl
adc
xchg
subl
lcall
enter
xchg
mov
int3
cmp
lcall
scas
leave
push
pop
xchg
pop
pop
inc
pop
sbb
es
mov
inc
pop
xor
pop
cmpsb
adc
pop
jne
clc
test
pop
lcall
stos
cltd
or
jnp
xchg
add
sub
jno
dec
inc
js
imul
mov
scas
sarb
pop
mov
rcr
cmp
aaa
mov
int
mov
mov
cwtl
sbb
adc
loopne
fwait
mov
addr16
call
out
jmp
ret
jmp
jl
cmpsb
mov
mov
dec
cli
popf
mov
add
sub
popa
lea
push
mov
xacquire
es
pop
aad
lods
movsl
loope
clc
mov
jge
test
cltd
rorb
enter
xchg
xchg
cs
andl
aaa
jno
mov
stos
in
gs
push
notb
clc
push
scas
mov
js
add
cmp
pop
rclb
sub
es
inc
cltd
or
lea
loopne
in
inc
stos
test
shll
imul
mov
sub
xlat
pop
mov
jecxz
leave
loopne
frstor
out
movb
test
mov
lds
int
sbb
add
xor
adc
pop
xchg
cmc
es
mov
andb
dec
cs
into
mov
mov
pop
fisubrs
leave
sbbb
out
adc
stos
test
xchg
pushf
sub
jno
mov
arpl
lahf
test
cmp
ret
mov
adc
push
cwtl
pop
mov
xor
scas
sbb
ds
xor
sahf
push
fs
cwtl
push
mov
xchg
out
rcrb
adc
test
dec
mov
xchg
clc
bound
ds
pop
jmp
xlat
and
mov
lock
or
mov
and
sbb
cwtl
clc
aaa
cmp
adc
jne
push
bnd
ret
pop
fcompl
jbe
xchg
cwtl
clc
and
and
daa
js
andb
leave
or
popa
ret
loope
movsb
jo
pusha
lret
cmp
cmpl
out
int
xchg
pop
xchg
xor
ja
fisubs
rcrl
shr
add
mov
lds
adc
outsb
loopne
xor
not
pop
divl
or
aam
leave
jge
bound
in
push
pop
movsl
mov
jnp
cmp
inc
sub
jg
sti
out
lea
cmp
filds
test
imul
or
int
adc
dec
in
and
fwait
enter
call
das
out
hlt
xor
test
fwait
or
add
add
xlat
add
sub
xor
push
mov
dec
flds
xlat
les
int
lock
loopne
shlb
bound
sbb
pop
shl
pop
xor
subl
out
mov
mov
push
leave
in
adc
dec
loope
mov
adc
movsb
clc
jnp
adc
nop
fcmovu
dec
xor
inc
fiaddl
movsb
mov
scas
fs
mov
insl
jnp
cld
or
lcall
cli
in
jg
popa
and
xorb
mov
lock
jb
int
pop
sbb
adc
loopne
insb
aaa
jecxz
sbb
in
or
adc
inc
mov
mov
mov
add
fiadds
ficoml
cmpsl
out
mov
fprem1
xchg
push
fists
test
adc
std
xor
xchg
or
and
lds
dec
adc
shrb
daa
stos
hlt
dec
mov
jo
pop
xchg
mov
xor
push
shlb
pop
lcall
arpl
test
mov
jae
or
sar
arpl
or
or
jae
repnz
scas
mov
sbb
punpckhbw
adcb
adc
pop
dec
sub
mov
mov
inc
ret
into
dec
ret
rcrl
push
lcall
mov
xchg
or
push
mov
std
or
into
lret
mov
xchg
sti
xchg
push
xchg
inc
mov
call
ret
sarb
jno
sub
arpl
jns
sub
mov
shrb
orl
jne
mov
push
or
inc
xchg
call
ja
rorb
adcb
mov
mov
and
push
in
loopne
mov
sub
sub
cmc
push
mov
dec
imul
pop
xchg
push
cmp
mov
sbb
imul
xchg
xlat
out
pop
pop
arpl
push
insb
cmp
jo
lret
mov
dec
ret
sbb
pop
es
je
mov
cmpb
push
sbb
jle
enter
stos
loop
add
mov
imul
cmp
add
insb
inc
es
das
and
add
cld
mov
push
sub
ret
repz
outsb
fwait
or
ja
fldl
cmp
js
mov
pop
lods
jg
xor
stos
or
mov
adc
clc
or
dec
jl
push
sbb
popa
xchg
mov
fldl
dec
pop
test
jl
xor
ret
popf
test
push
push
lret
movsl
sbb
inc
fbstp
fwait
out
jb
or
dec
movsl
pop
aam
xlat
jp
imul
jmp
xlat
xor
cmpsl
pop
mov
aad
test
nop
xchg
test
aas
lods
mov
mov
pop
push
cmp
in
aad
add
adc
ljmp
test
fisttps
loope
std
jecxz
cltd
xchg
adcb
cmpsl
lret
lods
loopne
pop
lcall
jle
cs
jmp
xlat
lret
icebp
out
push
fxch
jge
jnp
out
stc
rcrb
xchg
imul
and
xor
push
add
push
faddl
mov
lcall
mov
jg
sbb
lods
ret
ret
sarb
popa
int
add
xlat
mov
stos
aaa
mov
mov
and
imul
cltd
fcomip
mov
sarb
int
iret
cmc
xor
das
lds
sbb
dec
jns
xchg
ret
sub
bound
jg
and
cwtl
test
xor
insb
push
fldt
push
daa
dec
jl
fs
daa
in
push
add
add
test
jle
sbb
adc
add
or
sbb
sbb
lock
and
adc
fisttps
xchg
jns
lahf
test
push
mov
adc
das
inc
out
dec
sub
stc
mov
pop
pop
dec
jmp
or
daa
dec
nop
jp
notl
iret
stos
stos
lds
add
and
mov
vfmaddsub231pd
add
cmp
lods
fisttpll
cmp
mov
jnp
mov
testl
adc
xor
hlt
outsb
das
lods
mov
dec
outsl
pop
xor
dec
cwtl
xchg
shlb
rolb
dec
popa
inc
loopne
pop
aas
les
mov
or
lds
push
and
ss
rcr
in
and
out
data16
pusha
or
mov
aas
leave
inc
sub
arpl
xlat
lcall
cmp
loop
or
subb
jl
or
into
push
loopne
rcr
xor
add
ljmp
xchg
mov
sbb
adc
nop
cld
aaa
and
js
xor
pop
add
mov
push
leave
inc
push
inc
nop
adc
call
pop
push
andl
popa
cli
jnp
cwtl
mov
cs
arpl
jp
aaa
inc
fisttps
push
fnstsw
inc
pusha
xor
jb
push
push
lret
ljmp
mov
shlb
lods
push
push
lcall
push
ljmp
and
outsl
cmp
sarb
or
xor
insb
inc
dec
xchg
and
or
leave
mov
int
loope
rcrb
mov
inc
or
test
int3
adc
sbb
push
add
push
push
sti
aaa
mov
adc
xchg
in
pop
inc
push
and
push
aad
fidivs
outsb
test
xchg
daa
ljmp
ret
clc
xlat
inc
jl
mov
sbbl
imul
scas
out
pushf
push
aad
sarl
pop
nop
repnz
xchg
insl
adc
cs
push
ds
pop
insl
jmp
andb
dec
mov
lahf
mov
popf
int
stos
addl
mov
and
adc
mov
sub
push
imul
aas
pop
in
pop
push
lea
pop
je
dec
xchg
xchg
test
inc
inc
call
das
lea
mov
out
jmp
int
cmp
pop
xor
mov
imul
sbb
jl
fwait
ret
mov
mov
mov
push
mov
push
xchg
inc
in
sbb
mov
mov
add
xchg
ret
sbb
cmp
divb
ret
ret
lea
jns
jl
pop
sbbl
add
jle
mov
fisubs
in
js
and
inc
xchg
popf
movsb
push
pushf
into
loop
jne
loopne
mov
cmc
pushf
in
ret
mov
test
rol
cltd
dec
lods
pop
sub
bswap
ja
icebp
vpsubd
in
mov
pop
stos
mov
mov
jp
cmpsl
cmp
or
das
jmp
addr16
jl
lea
xchg
loopne
lret
iret
repnz
out
jnp
ljmp
sahf
mov
into
fnstsw
cld
mov
loopne
xchg
movsl
iret
int3
outsb
insb
jns
mov
insb
out
fimuls
jae
push
mov
in
je
jle
repnz
xchg
mov
invlpg
xbegin
frstor
fsubr
pop
out
inc
xlat
dec
pop
lods
mov
lock
mov
mov
xlat
aad
add
gs
cwtl
lods
loop
mov
inc
enter
or
mov
pop
js
lock
add
decl
sbbb
push
sbb
in
lock
sbb
mov
in
jle
and
jo
pushw
add
cmp
add
jmp
popa
les
xadd
dec
xchg
mov
sar
in
jg
pop
ljmp
xchg
cld
inc
movsl
xor
imul
aas
adc
mov
add
sbb
inc
cmpsl
push
or
adc
inc
int3
sbb
ret
inc
xor
shl
ljmp
inc
jmp
pushl
pop
loop
mov
fwait
mov
cmp
call
mov
mov
xlat
xor
in
stos
test
pushf
cwtl
fldcw
sbb
enter
or
push
mov
pop
leave
add
and
lds
test
nop
mov
clc
enter
xchg
cmpsb
sub
fidivrs
and
xor
fists
lahf
push
iret
inc
std
push
jnp
mov
jnp
dec
rcrb
mov
sub
std
in
sahf
mov
inc
int3
inc
push
cmpsl
jg
mov
pop
inc
into
add
sbb
xor
adc
daa
or
lock
faddl
lcall
mov
ret
or
out
push
in
test
pop
push
mov
jg
push
mov
test
inc
jbe
das
inc
sub
fsubs
roll
pop
jbe
cmp
cld
and
mov
dec
jge
cmp
popa
xlat
popf
scas
scas
out
jns
out
mov
add
cmc
xchg
cmpsb
rcrb
jecxz
or
loop
inc
jnp
les
repz
in
sti
dec
daa
push
popf
imul
dec
ffree
mov
adc
lret
or
lea
pop
aaa
xchg
mov
lods
pop
xor
mov
loopne
stc
test
xchg
and
inc
cmp
movsb
adc
xchg
pop
mov
mov
in
rorb
sub
xchg
das
push
and
push
mov
ss
imul
repnz
repnz
test
xor
mov
or
push
scas
fnstsw
rep
or
inc
int
out
pop
or
inc
outsb
call
icebp
push
push
inc
mov
mov
arpl
jge
jne
cmp
dec
mov
in
xchg
jae
dec
xor
mov
cmp
mov
stos
in
mov
mov
es
dec
in
dec
lea
out
fld
inc
jnp
xlat
cmp
shrb
int3
jns
dec
stos
or
xor
out
pop
stos
push
fldcw
insl
jl
inc
das
mov
aad
dec
sub
jge
in
test
out
roll
xchg
cltd
aaa
mov
add
lds
fcoms
xor
or
rolb
pop
icebp
add
dec
pop
cwtl
push
lahf
cmc
loopne
shll
loope
mov
push
idiv
popa
cmpsb
ss
add
mov
roll
push
mov
js
jecxz
ljmp
incb
jno,pn
in
lock
movsl
sbb
add
fwait
cmpsl
sbb
leave
sbb
mov
mov
data16
out
pusha
fdivl
push
jae
lret
shrl
js
add
jno
cmc
sub
lcall
test
jbe
inc
int3
jg
add
mov
xchg
stc
addr16
pop
sub
fwait
jl
lcall
andl
je
or
jmp
lahf
lds
pushf
add
jb
and
jl
fsubr
lahf
clc
pop
data16
das
inc
jecxz
sub
lds
mov
ret
ja
out
adc
jbe
sub
mov
outsl
add
out
sbb
movsl
lea
jae
jmp
ss
mov
or
add
xchg
add
push
sar
mov
sti
fdivl
lret
push
xchg
and
int3
add
sbb
decb
in
pop
pop
jmp
loopne
lods
in
add
jb
add
add
jmp
movsb
mov
inc
daa
shll
push
mov
push
bound
call
mov
mov
test
xor
jmp
cli
add
icebp
mov
xor
jge
adcb
pop
lret
jne
in
mov
outsb
movsb
mov
jns
test
arpl
mov
rorb
mov
mov
inc
in
shrl
cmp
add
mov
shlb
push
test
sub
jp
call
mov
sub
add
gs
jmp
push
ja
inc
in
inc
notb
dec
test
pop
ror
out
lock
loopne
shrl
aam
xchg
cs
inc
fidivrs
push
cli
into
sbb
test
imul
inc
and
cmp
xor
sbb
icebp
test
jl
and
push
xchg
call
sbb
test
bound
gs
roll
adc
inc
sbb
add
repnz
xchg
sub
dec
push
add
dec
fstp
scas
testl
mov
out
aad
addr16
mov
stc
in
jno
cmc
stc
mov
lahf
cli
xlat
adc
clc
aas
data16
icebp
aas
mov
popa
addb
sarb
dec
mov
inc
ja
enter
fldenvs
dec
xchg
int3
mov
or
in
cmc
pop
sub
rcr
insl
jle
test
sub
call
inc
jge
jae
fisubrs
outsb
xchg
inc
dec
push
mov
in
pop
xchg
loope
test
lods
addps
push
fldenv
mov
push
int
push
push
xor
xor
repz
adc
dec
dec
mov
adc
orb
sbb
movsl
xchg
pop
mov
hlt
cli
jnp
mov
loop
pcmpeqw
mov
mov
mov
push
cmp
cmp
mov
cs
aaa
aam
dec
sbbb
mov
xchg
add
stc
mov
jl
addr16
lock
lcall
pop
divb
jecxz
popa
nop
bound
stos
out
sbb
in
xor
dec
bound
minps
iret
out
fidivs
or
mov
pusha
mov
mov
push
inc
cltd
ret
xchg
in
ret
out
imul
ljmp
pushf
std
jb
or
mov
add
push
divl
sahf
leave
dec
jmp
xor
in
mov
fidivs
xchg
push
fimuls
mov
add
or
mov
push
ss
loope
inc
jmp
adc
loope
repnz
add
xchg
mov
dec
movsl
pushf
add
jne
iret
jne
pop
lods
cmc
xor
push
pop
orl
pop
out
mov
leave
or
out
repz
aaa
or
push
shrb
add
iret
cmp
bound
pop
add
mov
sbb
add
rclb
inc
push
push
sbb
test
inc
cmp
paddw
mov
mov
jno
xchg
into
into
and
dec
pop
or
arpl
pop
outsl
mov
sub
mov
jns
mov
pop
pushf
dec
imul
arpl
dec
int
stos
cmp
pop
pop
ds
shll
loopne
add
test
and
sbb
movsb
cltd
or
xchg
push
inc
xchg
imul
shll
jl
jl
out
sahf
inc
loope
add
ror
ljmp
jmp
inc
cld
xchg
pop
mov
or
push
mov
clc
mov
sbb
aam
mov
push
out
movsb
mov
or
sti
movaps
push
jecxz
xor
insl
pop
xchg
dec
and
xor
in
mov
loope
jle
push
add
add
cld
fs
mov
in
adc
jne
and
imul
dec
popf
jne
xchg
push
aad
mov
mov
sahf
xchg
insb
mov
jo
inc
jmp
and
out
adc
aam
jno
xchg
push
jne
popf
fisubl
jno
int3
mov
mov
les
mov
mov
add
in
fsts
in
mov
or
mov
cmp
jo
aas
mull
cmp
inc
fistps
les
add
sbb
add
adc
jmp
outsl
xchg
mov
into
aad
aad
mov
xchg
out
xchg
popa
cwtl
mov
shll
sub
orb
mov
daa
mov
lock
jg
add
in
push
jns
xlat
mov
dec
adc
data16
and
roll
jle
pop
neg
mov
xchg
mov
lret
pop
push
in
mov
js
xchg
leave
mov
push
dec
sbb
test
outsl
push
push
cld
adc
fiadds
ss
repnz
lock
int
in
mov
xor
push
les
push
jle
imul
enter
cmc
shrl
add
ret
insl
pop
les
jl
iret
jae
adc
add
or
decb
push
dec
sub
test
xor
pop
insb
xor
rol
unpcklps
mov
add
in
cmc
mov
call
xchg
sub
dec
jns
jb
test
repnz
push
arpl
pusha
negb
lods
xor
ja
es
xchg
aaa
and
lahf
stc
xor
data16
adc
daa
je
dec
in
aad
call
int3
and
pop
jp
xchg
mov
cmpsb
cmp
mov
outsb
imul
stos
and
jnp
jo
sub
enter
push
cmp
je
sti
pop
fdivrs
sub
icebp
mov
dec
push
negl
pop
and
or
xchg
jp
mov
pop
aaa
call
mov
mov
mov
push
push
push
mov
lods
cmpb
fcmovnbe
outsb
xchg
leave
inc
pop
rclb
jp
in
in
or
insb
add
add
das
mov
cld
jge
xor
repz
pusha
inc
and
clc
test
das
aad
mov
xchg
aaa
and
cmp
imul
ljmp
jg
nop
sbb
cmpsb
lret
jae
jne
cmp
pop
fildll
add
fldln2
stos
sti
rolb
fstl
mov
imul
jae
cmp
pop
inc
loopne
scas
idivb
decl
mov
push
sub
xchg
callw
daa
scas
scas
into
repnz
jle
clc
shlb
push
pop
jp
mov
and
outsl
subb
outsl
les
ds
gs
ljmp
add
mov
xor
dec
cmpsb
sbb
cmp
loopne
nop
call
push
movsl
sti
sbb
add
cmp
xor
jns
in
pop
in
adc
addr16
mov
rorl
or
enterw
fstps
icebp
cmpsl
aad
test
das
clc
pop
pushf
jl
mov
cltd
std
push
push
xorl
daa
daa
andl
in
pop
imul
clc
nop
cmp
inc
xlat
jmp
call
and
scas
pop
mov
add
out
inc
stos
mov
pop
imul
jns
add
pop
cmp
fnsave
adc
adc
push
in
xor
push
jg
cmp
in
jno
cwtl
push
icebp
loop
popf
dec
adc
outsb
xor
int
push
movsl
push
xor
xor
out
ljmp
jmp
jp
shr
add
inc
xchg
mov
adc
les
das
in
jo
inc
jbe
addr16
cmp
cmp
imul
mov
mov
sbb
fwait
xor
mov
cmp
idivb
and
jbe
or
fucomip
xor
imul
lcall
ja
psubb
ds
push
push
inc
orl
stc
popa
mov
jmp
rclb
mov
add
mov
insb
push
sbb
push
jle
lea
call
pop
mov
pop
xor
repnz
bound
shr
xor
dec
ret
lcall
jp
push
and
mov
add
test
mov
bound
mov
push
cmp
test
xchg
sahf
dec
cmc
bound
fmuls
cmp
iret
rcll
fidivrl
in
aas
pop
sub
nop
add
lret
push
push
cmp
fisubl
aad
mov
add
ss
mov
mov
inc
push
adc
scas
xor
mov
xor
insl
sbb
stc
push
jns
lret
inc
or
cmc
shl
sub
das
xchg
cltd
fmuls
xchg
push
mov
xchg
push
dec
xor
pop
cmp
iret
or
inc
jle
pop
sub
xor
push
adc
sbb
dec
int3
arpl
in
fwait
mov
inc
cmp
fnsave
cmp
mov
add
xor
ret
shrl
das
mov
insl
dec
ret
cwtl
inc
or
fs
gs
rorb
jne
scas
and
add
jne
inc
inc
lods
pusha
push
push
inc
sub
mov
adc
fs
cmp
addr16
xchg
cmp
std
xchg
pop
push
in
mov
aam
or
data16
insb
stc
mov
mov
add
or
jb
cmpsl
jle
mov
ficompl
pusha
fs
dec
xchg
iret
cmp
adc
cmp
pop
ja
adc
lds
push
sbb
je
xchg
dec
push
fcoms
cmp
sub
push
inc
outsl
pusha
das
inc
ljmp
jge
sub
push
fldcw
sbb
dec
mov
xor
and
add
enter
outsb
adc
xchg
pushf
jne
jbe
dec
mov
test
sbb
inc
or
inc
notl
lret
mov
inc
jns
xor
adc
out
or
loop
push
out
mov
lahf
sbb
sub
inc
xchg
xchg
push
addb
fsubrs
std
jmp
loop
imul
dec
mov
popf
sub
jno
pop
dec
lcall
jo
sbb
inc
jge
fdiv
fbstp
xor
and
cmp
data16
or
out
sub
out
inc
popa
mov
cmp
mov
adc
or
pop
xchg
and
xchg
sub
fildl
ljmp
dec
inc
pop
jecxz
imulb
adcl
lret
cmpsb
xor
fldl
int
rcll
sub
mov
inc
cmp
inc
stc
out
cld
insb
loop
aas
dec
or
scas
lret
fdivs
and
adc
std
sub
frstor
xor
sub
ljmp
ds
sbb
insb
stc
jns
mov
xchg
je
daa
xchg
xchg
insl
mov
dec
inc
pusha
jmp
mov
inc
repnz
jecxz
inc
in
add
jmp
cli
push
cmp
mov
mov
ljmp
sbb
add
inc
cmpsb
pop
popl
in
add
or
in
clc
push
sbb
movsb
adc
scas
pop
in
pusha
xor
fstps
std
adc
xor
inc
add
fs
mov
or
sub
in
test
and
mov
mov
aas
int3
ficomps
xchg
mov
inc
push
in
mov
andb
xchg
push
jns
inc
inc
rol
xor
cmp
jp
imul
inc
inc
jbe
or
sbb
aaa
cld
cmp
mov
xor
or
xchg
aaa
into
mov
icebp
lock
add
mov
ficomps
jg
test
mov
or
push
lods
xor
repz
mov
mov
mov
loop
mov
nop
push
popf
or
sbb
fscale
ljmp
shlb
mov
mov
mov
outsl
ss
sbb
xchg
mov
mov
mov
mov
jnp
rcrl
xor
mov
ficomps
or
movsb
sbb
xorl
xchg
fcoms
pop
gs
je
stos
sti
leave
in
int3
lcall
ret
mov
cli
add
shrb
adc
shlb
adc
sbb
popa
add
cltd
xorl
sub
in
push
rcl
cmp
rcll
inc
xor
shll
inc
xchg
out
jae
popa
adc
or
mov
pop
or
mov
ss
dec
lret
nop
cmp
pusha
or
mov
iret
bound
dec
jecxz
ret
mov
rorb
std
pop
scas
mov
sbb
lds
add
xchg
mov
mov
cmpsl
dec
gs
mov
insb
lret
test
xchg
mov
cmp
pop
in
ret
sbb
dec
enter
add
and
roll
xchg
fisubrl
mov
inc
or
push
mov
in
jle
les
push
cld
jg
rol
pop
sub
scas
sub
adc
imul
dec
test
cmp
adc
sbb
push
push
aas
aaa
loope
aad
and
outsl
dec
addb
xlat
dec
adc
xchg
jne
addr16
xchg
out
or
add
dec
inc
inc
jb
shlb
pop
fxch
mov
inc
mov
mov
popf
int
lock
pop
mov
mov
mov
mov
xchg
push
iret
sbb
mov
imul
daa
and
inc
mov
inc
shlb
iret
mov
dec
lds
testb
aam
shlb
or
imul
sbb
enter
js
mov
hlt
imul
mov
cmc
mov
adc
cmp
push
sbb
xor
sub
jp
sub
lods
gs
aas
jo
inc
and
clc
add
cmp
and
test
cmp
jo
and
mov
test
out
xchg
je
inc
imul
movsb
test
xor
scas
icebp
inc
mov
inc
adc
mov
in
pop
add
xchg
inc
test
jle
pop
and
js
adc
sbb
mov
rorb
test
or
pop
aaa
sbb
cmpsl
pop
push
pushl
call
sub
lret
xchg
mov
ljmp
sar
jl
or
cmp
adc
ret
sub
jp
pop
and
jle
pop
imul
roll
jb
xchg
adc
mov
in
rcll
dec
xchg
mov
mov
lds
in
shlb
test
xchg
lea
push
mov
add
mov
sbb
rcrb
adc
sbb
push
cmpsb
sbb
addr16
push
mov
push
aam
adc
leave
inc
sti
js
xchg
sbb
push
std
xchg
inc
push
cmc
mov
xor
adc
sub
dec
js
jnp
loope
cli
push
scas
jl
fisubl
inc
add
add
mov
cwtl
into
push
inc
dec
pop
outsb
outsb
test
popa
mov
xlat
aam
jno
cmpb
fs
jb
mov
pop
and
jo
int3
lods
lcall
adc
lea
pop
pusha
ret
rclb
inc
dec
pop
xor
adc
or
in
outsl
cmp
fsubrl
cmp
jge
test
and
enter
in
jns
ret
aas
add
imul
das
xchg
mov
adc
jge
movsb
push
push
pop
fmulp
pop
scas
cli
mov
divl
xchg
xchg
out
and
out
xchg
sbb
dec
cmc
aad
pusha
sbb
inc
je
daa
fmuls
mov
das
cmp
cmp
jne
and
or
xor
lea
aam
cmp
xchg
dec
aas
dec
testl
jb
out
cmp
cmc
movsl
hlt
loopne
loop
sbb
add
xchg
stc
xor
add
mov
push
lods
pusha
ret
ficoml
push
icebp
jo
mov
lcall
leave
sub
cmp
cmc
imul
jg
lret
repnz
cwtl
adc
jo
adc
shll
xchg
sti
mov
lcall
test
mov
lcall
outsb
pop
jmp
xchg
xchg
fidivrl
mov
cmp
out
adc
mov
sahf
fiadds
and
mov
sub
cwtl
or
out
sub
ret
push
cmpsl
dec
stos
fisubrs
leave
mov
inc
mov
sub
in
mov
stos
cmp
xchg
ret
jae
jne
out
adc
dec
les
in
cmpsb
dec
popf
or
cli
fistpll
and
pop
mov
mov
imul
scas
fists
inc
mov
push
mov
pop
sbb
pop
xchg
or
push
test
push
test
sbb
das
push
and
pop
lods
xor
shll
inc
fistps
jnp
cmc
aas
add
and
lret
mov
dec
movsb
fadd
out
mov
enter
sbb
sub
cltd
mov
bound
push
add
out
icebp
daa
sub
das
movsb
test
ljmp
push
and
cmpsl
sub
clc
rorl
sbb
in
xchg
or
mov
jg
or
bound
rcrb
shlb
fidivs
add
loope
insb
mov
test
jmp
test
or
mov
push
outsl
adc
shlb
sbb
mov
int3
add
loope
aaa
frstor
mov
dec
loope
mov
xlat
add
mov
inc
adc
fisttpl
mov
sub
or
aas
stos
xchg
mov
cli
btc
jns
push
int
popf
jecxz
aaa
pop
and
les
subl
fwait
leave
dec
sub
movsb
adc
es
in
popa
testl
in
lret
add
je
jp
cmc
aas
movsl
in
xchg
mov
lea
pusha
pop
data16
jne
mov
repz
add
inc
fwait
cmp
xchg
mov
fucomp
mulb
adcl
test
in
arpl
imul
mov
mov
sbb
lea
stos
sbb
ds
aaa
lahf
daa
adc
mov
sub
dec
push
call
orb
dec
push
jnp
jns
call
loopne
add
cmpsl
mov
cmp
inc
dec
inc
pusha
lret
mov
and
ljmp
push
mov
rorb
jp
mov
sbb
xchg
andb
shrl
mov
ja
fld
cmc
out
jecxz
dec
int3
ret
xchg
adc
cltd
in
bound
add
pop
out
mov
mov
lea
jl
lock
cmp
ret
and
pop
dec
xchg
dec
data16
lds
outsl
aam
sbb
movsl
sub
out
jb
pop
outsl
aad
jb
in
cltd
pushl
andb
xchg
jb
arpl
in
push
mov
mov
mov
shrl
int
push
sarb
xor
ret
js
or
fistl
ljmp
sahf
cs
mov
roll
mov
out
xor
fidivl
mov
mov
xor
jecxz
lock
adc
mov
or
out
mov
fadds
ret
out
stos
cli
pop
push
arpl
movl
fistpll
sub
pop
or
push
xor
pushf
mov
push
inc
push
aaa
clc
mov
cs
inc
ds
inc
pop
inc
bound
xchg
mov
in
cs
dec
pop
es
sahf
mov
imul
imul
cs
dec
dec
inc
add
xor
jne
inc
jno
add
imul
insb
icebp
vunpckhpd
mov
je
jecxz
mov
addr16
push
in
pop
push
xlat
std
inc
clc
insb
xchg
fmull
mov
stc
pop
jb
jmp
loopne
add
movsl
mov
sahf
pop
je
pop
imul
cmp
inc
jmp
test
mov
or
addl
or
clc
lcall
dec
xchg
lea
jl
inc
stc
or
jb
cmpl
mov
imul
out
adc
fildll
fidivs
fcompl
loope
sti
shlb
mov
pop
lahf
ds
jmp
outsb
jp
pop
xchg
jb
subb
or
icebp
int
imul
ss
dec
xchg
fs
imul
fstps
insb
dec
sub
push
sbb
dec
test
push
add
mov
mov
mov
cwtl
nop
inc
les
aas
leave
mov
rcrb
jge
sbb
xchg
rorl
adc
mov
js
aaa
iret
loope
jbe
lods
mov
jo
cmpsb
fildll
loope
les
sbb
cmpsb
repz
jmp
mov
fisubrl
mov
test
mov
xor
sbb
xchg
inc
sbb
jmp
and
mov
push
and
sub
outsl
rolb
pusha
jge
mov
jl
fldcw
daa
mov
sub
ds
mov
es
mov
mov
loop
sub
iret
dec
cld
lcall
cmpsl
nop
jnp
inc
mov
pop
and
mov
cmpsb
es
lods
sarl
insb
or
jno
mov
cmp
cltd
or
addr16
clc
js
xor
mov
out
out
mov
mov
pop
das
cmpl
add
daa
cmp
test
push
aas
mov
ret
jp
aas
fiadds
lret
add
arpl
jmp
xor
pop
jbe
sbb
mov
test
inc
js
in
fmuls
lock
es
push
clc
xor
out
cmpsb
mov
scas
popa
stos
aad
inc
fdivp
push
push
aad
adc
std
pop
adc
sbb
inc
adc
xor
shr
xor
mov
push
pop
adc
add
les
shl
ds
push
jnp
xorb
xchg
push
xor
dec
push
mov
mov
call
mov
in
fsubr
pusha
sub
add
sarb
adc
push
mov
jle
sti
pop
das
push
pop
sbb
ja
pop
sub
and
lds
or
adc
push
mov
insb
ja
sbb
das
sahf
jmp
out
std
and
nop
adc
pop
ds
push
or
inc
mov
sub
aas
out
out
push
xlat
cmp
stc
and
cli
dec
lods
hlt
mov
xor
sub
imul
stos
je
addb
mov
jmp
mov
and
jl
enter
add
pop
pop
pushf
jb
dec
not
shl
cmp
lcall
ret
movsb
xchg
out
sbb
xchg
and
cmp
mov
mov
or
xchg
ds
lods
fs
mov
push
dec
jl
in
ret
ljmp
stc
dec
in
fists
sub
push
inc
in
lahf
sti
inc
es
mov
mov
out
aam
loopne
xchg
test
mov
mov
addl
movsl
sahf
std
imul
mov
loope
pop
jns
stc
and
xchg
nop
sub
fwait
xchg
test
pop
adc
jg
cmpsb
add
cmpsl
mov
pop
repnz
out
lret
add
xchg
out
and
pop
inc
jb
aad
pushf
out
push
aam
or
ret
or
lcall
cs
or
cmc
ficoml
lods
iret
mov
rorb
push
adc
xchg
lcall
mov
mov
data16
test
sbb
jb
dec
fmull
inc
pop
stc
out
imul
mov
jno
adc
dec
shr
fcmovnu
mov
jae
cmp
xchg
add
test
xlat
sbb
ljmp
mov
aad
ds
out
dec
popf
adc
push
cmp
movsl
xchg
aaa
ljmp
jge
mov
stos
cmpsl
cmp
movsl
fildl
sub
sub
cmpsb
scas
or
dec
xor
bound
pop
aas
lock
shrl
push
mov
ret
shr
push
push
lock
inc
pop
mov
pop
out
ja,pn
test
loop
in
in
ffree
sbb
test
push
mov
out
push
xchg
xor
les
ljmp
adc
jp
sbb
jns
push
pop
roll
fsubr
std
repnz
adc
ja
pop
cld
xchg
mov
lock
scas
jns
fstps
pop
cmp
mov
pusha
in
dec
or
jo
in
cs
mov
scas
dec
out
xlat
sub
jae
inc
cli
int
lcall
pusha
std
icebp
mov
int
in
jge
arpl
lret
test
rol
jns
xchg
not
pushl
out
stos
push
mov
push
xor
in
insl
rcl
push
lods
dec
dec
mov
push
jne
sbb
cmpsl
sti
cs
or
jge
mov
rol
sub
leave
inc
jg
clc
sub
daa
mov
sarl
mov
jbe
cmp
sub
pop
out
inc
xor
add
hlt
xlat
ljmp
inc
cmc
div
adc
lret
sbb
loop
popf
xchg
push
dec
aas
into
addr16
adc
dec
addb
repz
add
lret
ds
pop
dec
popf
push
fcomps
jbe
ret
adc
mov
dec
mov
dec
inc
out
imul
dec
xchg
cmc
push
dec
cmp
lods
insl
add
test
pop
mov
lahf
pop
cmpsl
pop
cltd
cmpsb
stos
fwait
sub
add
pop
pop
mov
xchg
das
mov
pop
in
cmp
loop
ja
insl
stc
imul
pop
mov
rolb
adc
and
cmp
sti
cmp
adc
fwait
cld
shll
out
inc
pop
insb
cmp
xchg
ja
or
sbb
inc
add
push
sub
clc
xor
fnsave
aas
in
cli
les
or
popf
push
jb
aas
aad
xor
dec
lahf
adc
pop
cmc
mov
jl
loop
adc
adc
imul
jb
jp
jns
adc
aad
jns
adc
fidivl
lret
jo
lahf
pop
jno
and
in
sbb
pushf
mov
push
fistps
pushf
sahf
popl
and
sbb
cmp
pop
inc
into
repz
or
push
je
ret
test
cmpsb
push
ds
rolb
mov
push
pop
shlb
int3
insb
mov
enter
cld
mov
loop
roll
cmp
cmp
sahf
pop
push
pop
jb
test
cmp
push
inc
push
jmp
movsb
cmp
mov
jge
sbb
pop
lahf
pop
aad
add
mov
mov
cmpsl
lea
or
and
fmull
rcrl
in
sub
pop
jb
jnp
ret
and
mov
pop
jo
lock
push
jb
adc
mov
jp
jmp
xlat
dec
xor
mov
loopne
rcll
ret
lcall
dec
fsubrp
popa
loopne
ds
lahf
pop
outsl
pavgb
stc
xor
movsb
shrl
cli
jmp
mov
mov
sbb
aam
icebp
sbb
flds
xor
sub
into
insb
pop
in
fsubrl
inc
add
mov
inc
call
pop
sbb
mov
mov
xchg
pusha
sahf
ljmp
test
pop
push
add
xor
push
xor
mov
jbe
imul
add
push
lods
mov
fcomps
js
and
icebp
sbb
adc
flds
mov
out
ds
clc
das
sahf
fwait
pop
pushf
scas
adc
sub
cmpsl
or
clc
adc
nop
in
cmp
push
pop
popf
dec
add
aam
nop
mov
mov
iret
push
sbb
mov
pop
adc
dec
fldt
popf
lahf
pop
mov
shll
loopne
cltd
cmpsl
scas
jecxz
rcrb
scas
and
or
jbe
xor
xorb
std
stos
xor
scas
push
cmp
pop
aad
stos
into
push
xor
in
and
cmp
mov
xchg
and
cmp
cmp
dec
dec
cmp
mov
cmp
cmc
scas
mov
jecxz
pop
inc
push
int3
dec
js
icebp
stc
push
rclb
pop
dec
adc
push
sti
jb
pop
lret
decl
mov
mov
jo
pop
daa
jno
lods
adc
and
xchg
jl
or
repnz
rolb
mov
rorl
stos
out
inc
pop
add
push
aad
sbb
loop
out
mov
cmp
int
loopne
mov
imul
addb
inc
movsb
mov
fidivl
mov
cs
dec
call
xrelease
xchg
inc
daa
jl
rcll
push
icebp
arpl
fidivl
pop
mov
dec
cmp
xchg
cmp
jecxz
or
sbb
fisttpl
xor
mov
fisubrl
pop
cmc
rcrb
pop
cmpl
sti
or
dec
mov
sub
and
mov
push
ret
mov
mov
or
xor
adc
shll
dec
xchg
inc
add
jl
add
int3
in
jns
sub
mov
dec
mov
sub
mov
outsl
push
fsub
mov
jo
add
stos
add
outsl
jnp
fbstp
std
push
inc
inc
mov
icebp
jg
aas
icebp
cmp
mov
sub
xchg
andl
sahf
sbb
outsl
clc
pushf
pushf
xchg
js
mov
sbb
sub
xchg
pop
cmp
fbld
pop
dec
push
in
inc
cmp
xchg
ret
push
mov
push
xor
sahf
das
cmpsl
adc
scas
rcrb
mov
cmc
shl
addr16
daa
push
rol
lcall
imul
out
xlat
ret
aas
cld
mov
roll
pop
daa
stos
mov
rcrb
scas
sbb
ds
or
jae
repz
cltd
inc
pop
jge
xchg
push
lcall
and
decb
mov
aam
mov
and
push
jge
call
cs
mov
fcmovnbe
stc
lret
jle
into
or
in
jne
popa
enter
icebp
mov
lret
std
or
jo
fisubrs
jns
pop
add
mov
mov
xchg
fstps
jp
mov
shll
mov
dec
lods
inc
call
jge
ja
push
add
xchg
jae
cmp
repz
nop
out
stc
divb
negl
push
rcl
push
cmp
out
xor
mov
adc
aas
cmpsl
mov
sti
sub
adc
or
cmpsl
jo
mov
lcall
mov
pushl
add
rcrb
sub
push
test
mov
aam
inc
popa
push
cmp
cmp
pop
loop
cmp
js
sbb
add
popa
sub
xchg
dec
fmuls
lret
sbbl
aam
pop
pop
hlt
push
test
stos
es
mov
add
test
in
cmp
inc
sbb
xchg
xchg
ss
fsubl
popa
mov
mov
test
aad
pop
mov
xchg
pop
test
pop
and
or
add
lock
and
pop
xchg
sahf
mov
out
fildll
xlat
out
and
lods
jns
push
mov
in
subl
popa
fcoms
lea
sbb
cmp
jg
out
pusha
xchg
lahf
pushf
mov
mov
rcrb
movsl
xchg
add
clc
insl
adc
addr16
int
mov
xchg
jae
out
jmp
fcmovne
mov
cmp
in
push
xchg
mov
icebp
fs
shl
xor
in
jecxz
cmpb
cmp
mov
pop
in
push
cld
cmp
mov
test
out
movsb
arpl
jne
mov
enter
clc
scas
scas
int3
pop
push
clc
or
lds
or
adc
out
pop
dec
adc
fidivrs
test
push
in
xlat
imul
nop
or
lcall
mov
jae
std
cmp
xor
jbe
pop
jae
ds
pop
bswap
outsl
mov
xchg
int3
lea
das
stos
aam
mov
aaa
sbb
cltd
mov
xchg
pop
fcoms
sub
or
and
xor
incb
mov
mov
pop
add
sbbb
fistl
mov
mov
std
fs
test
repz
data16
test
std
pop
sub
push
push
sbb
mov
inc
dec
mov
test
test
adc
pusha
ds
test
and
call
stos
cmp
sub
adc
in
push
sbb
xchg
xchg
test
or
xchg
cli
test
xor
mov
mov
mov
dec
into
push
inc
notl
adc
mov
cmp
pop
inc
xchg
imul
std
jmp
ljmp
push
fadds
cmp
sub
and
cmp
fwait
loopne
cmpsl
ss
push
inc
insl
lret
jg
out
insl
iret
push
cmpb
cmc
dec
xchg
jge
sarb
push
sahf
mov
pusha
out
leave
movb
xor
xchg
and
jbe
icebp
pop
sbb
sti
add
scas
push
push
sbb
movsb
loope
loopne
cmp
leave
outsb
out
and
dec
adc
shlb
add
pop
sahf
dec
adc
out
push
add
iret
int
or
pop
inc
jo
add
sub
in
lea
mov
and
testl
adc
mov
pushl
cmp
mov
or
dec
add
hlt
jecxz
jecxz
push
test
add
mov
es
imul
push
test
cmp
pop
xchg
mov
notl
gs
sbb
leave
subl
testb
test
and
sub
out
sub
inc
out
lods
js,pt
mov
pushf
and
insl
inc
sbb
mov
cltd
test
pop
cmpl
cmp
rcrb
std
stc
jg
lods
ficoms
dec
mov
outsb
adc
cwtl
test
mov
pop
mov
in
loope
or
add
in
lock
sahf
xor
adcb
jmp
loopne
popa
or
cmp
int
cld
movsl
mov
bound
sbb
and
push
inc
pop
mov
roll
xchg
cmp
push
in
cmp
inc
repnz
js
fmul
push
ljmp
clc
in
cmp
mov
pop
and
mov
add
popf
jbe
mov
cmc
ret
lcall
aad
fcoml
mov
inc
int
arpl
push
adc
mov
mov
stc
arpl
scas
shl
mov
mov
xor
ja
pop
int
data16
adc
int
xorl
fsubrp
int
and
std
rcll
xlat
push
mov
pop
sbb
sbb
test
jno
roll
mov
sub
fldcw
sub
adc
fcomp
into
add
mov
insb
sahf
js
and
or
pop
aad
xor
aaa
and
jp
sbb
mov
inc
popa
jae
pop
mov
add
and
fs
xchg
stos
out
dec
jnp
push
pop
iret
inc
mov
push
into
sbb
loop
mov
fcomps
out
push
or
pop
int
push
incb
add
movsb
inc
lock
push
scas
stos
gs
sub
jb
push
mov
out
mov
push
cmpl
cltd
push
mov
scas
push
and
pop
sub
popf
mov
add
lods
sub
repnz
loope
jnp
daa
fucomip
repnz
lods
popf
inc
mov
add
or
in
cs
mov
neg
lahf
cmp
inc
or
pushf
lods
test
imul
leave
mov
mov
daa
inc
js
jecxz
mov
jle
push
mov
push
sub
push
pop
out
in
mov
mov
push
cmp
xchg
mov
and
sbb
sbb
outsb
mov
pop
addl
daa
inc
or
addb
sub
clc
popa
out
sbb
and
cmpsb
sub
scas
stc
aaa
shlb
push
adc
icebp
cmp
mov
xor
xor
push
mov
insl
sti
movsb
stc
add
test
lods
jno
fs
xlat
dec
xor
or
xchg
fcmovu
push
cmp
adc
cltd
mov
pop
cmp
push
jo
mov
xor
mov
nop
out
jge
idivb
es
inc
or
test
lret
daa
sub
bnd
sbb
xchg
dec
xchg
mov
push
jle
lea
sbb
leave
jg
jl
hlt
popf
jnp
scas
out
sub
loopne
lods
pop
and
cmp
shll
jg
stos
inc
adc
jnp
js
aas
das
imul
in
cs
sbb
cmp
mov
lret
sahf
outsl
sarb
adc
push
aad
mov
mov
pushl
or
and
and
rclb
xor
dec
jb
mov
out
cmp
adc
rorl
xor
imul
std
push
rorb
fsubs
push
xchg
lods
inc
ficoms
or
cli
mov
lods
add
sbb
insl
ljmp
inc
jno
shlb
push
je
loop
ficoml
movsb
icebp
imul
inc
mov
cld
sub
fidivs
scas
cmp
mov
cwtl
jno
jae
insl
sbb
movsl
pusha
push
clc
pop
mov
or
mov
mov
ja
pop
cmp
cmp
shrb
inc
sbb
mov
jmp
sub
xor
sub
arpl
xor
xchg
add
jmp
mov
into
push
ficomps
pop
insb
sti
sub
sub
lock
xorb
push
add
incl
xchg
or
jnp
mov
sbb
arpl
loop
and
mul
mov
popf
push
push
jl
and
nop
jno
mov
into
dec
int
xor
in
outsb
cmp
lret
nop
out
scas
iret
rcl
mov
xor
xor
pop
xchg
pop
xchg
mov
pop
movsl
out
fbstp
insl
sub
fmulp
ret
repz
pop
mov
call
push
push
movsb
push
pop
or
sub
mov
mov
add
sbb
xchg
cmpsl
into
mov
push
sub
sbb
push
cmp
pushf
mov
pushf
or
xorb
sub
repz
jge
sbb
negb
cs
push
fucomp
es
pusha
xor
sub
mov
negb
jae
cmc
xchg
jg
push
roll
ja
hlt
mov
cwtl
aad
push
jns
adc
sbb
mov
jns
xor
ret
push
out
imul
das
bound
inc
fimuls
int3
mov
inc
add
addr16
clc
inc
arpl
sub
pushf
sbb
sbb
jno
mov
iret
dec
and
pop
xchg
mov
jne
mov
inc
ficomps
neg
cmp
mov
or
xor
xor
xor
pop
jns
loop
daa
xor
xchg
cmpsl
fs
jnp
mov
repnz
mov
or
out
pop
cwtl
sub
adc
lods
jb
sub
mov
jge
and
call
push
jb
insl
test
push
jl
test
adc
in
mov
popa
js
inc
adc
mov
in
cmpsb
js
aas
dec
inc
pop
cwtl
dec
inc
gs
das
add
mov
imul
popa
fsubrs
dec
adc
loop
pop
out
dec
and
mov
adc
sarl
xchg
leave
call
inc
sub
imul
icebp
mov
jae
outsb
jp
jbe
loopne
jle
adc
scas
das
jbe
push
inc
xchg
and
sub
pop
cs
xor
jb
jb
sub
pop
mov
dec
idivb
into
sbb
lret
shlb
fs
scas
sbb
ja
jne
jno
int3
rolb
push
out
jo
out
mov
fcomps
aad
fistps
rcll
mov
xor
scas
dec
push
aad
daa
push
mov
pop
mov
gs
pushf
push
adc
push
xchg
in
mov
sub
mov
loopne
sarb
test
and
xchg
push
adc
or
cli
inc
fidivl
movhps
lods
insl
mov
or
fs
sub
mov
lret
das
outsb
aad
lret
fstpl
dec
mov
push
notb
iret
sbb
aam
std
in
push
lret
inc
cmc
xchg
dec
repnz
int
dec
xchg
pop
adc
or
les
fidivrs
and
jecxz
lods
insb
cmpsb
xchg
and
mov
mov
int3
dec
insb
cld
std
iret
adc
lock
sbb
mov
pop
sub
gs
push
cmpsb
je
jbe
push
add
mov
aad
in
aam
push
lret
adc
push
sbb
fistpl
fistpl
xacquire
xchg
cmc
xor
dec
shlb
mov
in
vminsd
mov
pop
sar
xchg
test
inc
cmpsl
stc
sbb
popf
js
mov
daa
insl
mov
mull
sub
sbb
mov
dec
test
pop
cmp
inc
aad
mov
roll
andb
push
cmp
outsl
jge
mov
or
cmp
adc
cli
mov
add
popa
lret
pause
int
rep
adc
jecxz
mov
inc
pop
dec
lahf
and
shll
add
sahf
decb
inc
xor
rclb
addr16
xchg
push
fdivrl
daa
loop
xchg
loope
pop
add
in
mov
jne
cmp
mov
jae
pop
scas
jle
add
mov
fs
push
gs
jae
shrl
bound
push
add
xchg
popf
push
out
cmp
jnp
push
jg
mov
push
jecxz
in
jbe
mov
xchg
cmovb
add
xlat
in
arpl
ret
out
lods
rcll
and
adc
jbe
push
js
and
jnp
mov
bound
jl
je
xchg
in
std
jmp
bound
mov
ja
adc
fistl
stos
cmc
das
mov
xor
jge
xor
cmp
and
das
jo
xor
add
fs
fildll
fcmovbe
mov
repz
dec
cmp
int
nop
cmpsb
cli
int3
sbb
xchg
jmp
or
or
add
mov
fs
pop
data16
fdivrs
dec
sti
sbb
inc
test
stos
cli
xchg
push
dec
push
sbb
mov
bnd
std
fmul
and
jge
aas
mov
adc
cmp
pop
jae
dec
pop
das
adc
repnz
rclb
outsl
ja
popf
xor
into
push
mov
pop
dec
mov
fs
jo
into
inc
xorb
xchg
sbb
mov
sti
test
rcrl
cltd
xchg
cwtl
nop
lahf
adc
cmp
testl
in
xchg
mov
push
xlat
sub
push
fildl
xchg
hlt
jnp
push
mov
fsubrp
in
xchg
sub
push
pop
faddl
push
xor
dec
pop
outsl
inc
xchg
add
adcl
sbb
rcl
push
xchg
js
mov
aaa
das
sub
push
lret
add
mov
popf
subb
out
rorb
mov
cli
or
lahf
movsl
bound
dec
les
fisttpl
std
pop
nop
or
dec
out
jns
int3
sub
cmpsl
mov
and
adc
stos
xlat
xchg
jnp
mov
mov
aad
jle
imul
cwtl
mov
cmp
into
ret
mov
jae
sti
xor
lods
ficoml
rcll
into
or
adc
adc
mov
add
mov
shll
jbe
adc
inc
adc
jmp
lock
and
ret
int3
adc
lcall
or
pop
imul
les
adc
outsb
mov
nop
xchg
sub
push
leave
out
sarb
in
pop
bound
cmp
mov
cmp
in
pop
or
jp
dec
xor
movsb
xchg
fcoml
stos
in
adc
movsl
rorb
lret
jl
inc
jae
testl
cmp
cld
lret
sbb
out
adc
imul
jmp
lahf
cmp
xchg
dec
inc
xchg
js
leave
jbe
aam
jne
lret
pop
imul
push
ljmp
ja
cs
xor
shr
jae
fwait
pop
jb
pop
and
aaa
push
adc
xchg
shr
mov
jb
jl
loop
pop
sub
and
cltd
fcmovnu
lret
jg
fmulp
push
int3
scas
xor
sbb
jge
mov
mov
call
xor
jg
and
jmp
clc
mov
daa
mov
cmpsb
inc
iret
cmp
sbb
jnp
xor
sbb
sbb
sub
xchg
mov
inc
push
mov
add
out
mov
daa
scas
jge
or
pushf
lds
test
push
mov
and
loope
jge
pusha
test
adc
lret
jp
les
fldt
into
rcrl
dec
outsb
mov
add
jae
mov
or
lcall
add
pop
xchg
mov
repnz
and
xor
cmp
movsb
iret
sub
push
jmp
daa
xchg
mov
mov
dec
lcall
jl
xchg
ja
jg
rcrb
pop
fidivrs
mov
insl
pop
aas
or
flds
mov
fidivrl
mov
and
cmp
test
imul
add
test
inc
cltd
and
cmpsl
cltd
or
add
fchs
mov
testb
ss
outsl
dec
jecxz
push
lea
and
xor
xor
sub
xor
mov
pushf
and
cmp
or
inc
mov
gs
ds
xlat
aam
gs
inc
imul
push
push
dec
dec
addl
movl
xlat
fsubrl
jns
cmp
xor
dec
ljmp
mov
pop
fiaddl
mov
outsl
and
jl
xchg
xor
mov
test
sbb
pop
pushf
cmpsb
repz
xchg
jecxz
cwtl
sub
jp
cmp
fnstsw
out
mov
add
sub
popf
popa
sbb
data16
push
adc
pop
std
imul
scas
pop
gs
adc
jecxz
xchg
lret
imul
cli
loope
inc
sub
in
movb
into
pushf
cmpsl
notb
sbb
test
nop
insb
pop
xchg
cmp
xchg
sub
repnz
mov
fs
cli
popa
loopne
jo
mov
xor
fwait
and
stc
inc
pop
sbb
icebp
xor
je
test
sub
or
jo
jne
cmp
inc
scas
and
add
jecxz
sbb
mov
cli
lcall
pop
pop
mov
push
mov
dec
mov
sbb
shrb
aaa
clc
scas
jno
out
mov
arpl
rolb
adc
retw
sub
ja
in
dec
or
lods
or
push
fistpl
xlat
int
sbb
shl
or
or
aaa
lds
ss
pop
mov
sahf
push
push
scas
stc
mov
int3
sbb
and
ss
jge
out
cs
add
inc
cltd
je
bound
mov
aas
imul
lret
or
mov
sbb
fadds
jnp
pop
cmp
scas
and
fnstsw
pop
ljmp
lods
xchg
sbb
in
ret
mov
or
das
mov
dec
dec
cmp
fcompl
and
je
dec
in
pusha
jg
fimull
scas
in
mov
lods
xchg
cmp
jae
leave
out
cmp
xor
and
xchg
jp
push
outsl
sbb
fwait
test
pop
xchg
js
xchg
div
mov
std
iret
mov
pop
mov
sbb
fnstcw
jmp
adc
mov
push
imul
cld
aad
cmpsl
lock
loopne
cmp
sub
adcl
dec
stc
pop
call
into
mov
cmp
push
cmpsb
negl
adc
dec
subb
jno
rcrb
out
jmp
pusha
cmp
inc
test
pop
iret
dec
adc
xchg
push
aaa
xchg
loop
mov
pop
bnd
lret
or
scas
test
movsl
push
mov
cwtl
pop
test
dec
enter
add
divb
arpl
aad
push
or
je
iret
movsl
aam
mov
adc
sti
adc
lock
leave
rclb
test
insb
sbb
jl
aad
add
shlb
sti
mov
in
xchg
nop
out
leave
cwtl
cmp
fcmovu
mov
add
mov
pop
sahf
test
inc
jmp
cli
mov
push
pop
imul
dec
cmp
imul
push
ss
ljmp
dec
lcall
lea
scas
xchg
mov
stc
loope
lcall
movsb
xor
push
in
in
test
dec
insb
jle
scas
inc
sbb
mov
addb
movsl
push
inc
test
pop
push
lcall
cmp
mov
loop
repnz
cli
sub
bound
xchg
xor
scas
or
inc
stos
and
sub
scas
stc
and
push
sbb
xor
bound
mov
lret
fists
or
ds
ljmp
jne
test
shl
add
ja
jecxz
call
popa
in
mov
mov
repz
imul
scas
fmull
test
out
ret
out
mov
add
inc
jb
out
cmpsb
cmpsl
mov
xor
repz
jmp
jl
jmp
std
test
fimuls
inc
adc
push
scas
fmuls
mov
mov
stos
xchg
jp
adc
adc
jmp
sbb
push
mov
negl
das
testb
cmpsb
pop
xchg
out
add
arpl
stc
lods
loopne
test
in
out
gs
adc
pop
push
xchg
mov
ss
or
push
rclb
lret
mov
mov
xor
pop
inc
jmp
jmp
and
fisubs
je
cld
and
std
mov
in
mov
fbstp
lea
dec
cmp
xchg
daa
iret
out
decb
or
fcompl
ss
in
test
xchg
dec
rcrb
pop
add
loop
int3
dec
inc
fs
dec
add
fcoml
pop
jno
fsubl
push
pop
or
xchg
sbb
adc
push
rcrl
and
push
scas
jge
xor
enter
notl
push
pushf
cmpl
mov
cmp
pop
cmp
cmp
inc
loopne
fildl
inc
sahf
mov
in
in
ljmp
mov
inc
xchg
or
lret
jp
dec
mov
cmp
js
pop
addr16
ljmp
jno
pop
aas
shr
mov
jge
stos
test
xchg
pop
xor
mov
in
push
je
daa
je
popf
or
dec
add
lea
imul
rcrl
lea
xlat
test
sub
pop
loop
aas
mov
aam
loopne
testb
and
mov
cs
stos
xor
push
xor
mov
cmc
test
imul
out
dec
ljmp
fucomi
mov
jecxz
je
jbe
std
jge
mov
dec
cltd
hlt
mov
xor
out
sbb
faddl
pusha
xorb
fidivl
test
pop
cltd
movb
test
pop
aaa
add
divl
in
xchg
in
out
aad
add
std
shrl
adc
adc
in
push
sbb
pop
ss
inc
inc
in
das
or
jecxz
into
repnz
movsl
inc
negb
jl
sbb
mov
push
ficomps
mov
ljmp
repz
lods
jl
mov
testl
sub
pop
mov
inc
xchg
roll
dec
pop
fimuls
loope
cmc
notb
lret
and
mov
movsl
dec
insl
scas
mov
scas
or
dec
mov
and
leave
sbb
rorb
cmpsb
jnp
pop
lods
adc
jge
jmp
dec
in
enter
push
inc
filds
mov
xor
xor
stc
xor
dec
push
jnp
sbb
or
mov
dec
je,pn
les
cmp
mov
mov
cmc
sub
adc
pusha
jns
inc
insb
xor
scas
orl
mov
test
mov
pop
push
mov
fidivs
ss
push
in
xchg
test
add
dec
je
xchg
test
inc
sub
adc
sbb
in
and
imul
pop
test
jg
insb
test
icebp
cltd
xor
imull
cltd
aas
leave
push
out
call
shrb
shrb
test
test
fwait
xor
lret
and
outsl
cmp
dec
jbe
and
nop
pop
push
add
repz
pop
std
out
fwait
xor
jecxz
add
sub
stos
ljmp
shrb
lds
popf
jnp
shl
add
inc
in
in
mov
outsl
or
mov
jae
cmpsl
and
into
lods
mov
into
out
jbe
imul
inc
rolb
push
test
mov
mov
test
push
not
lods
aaa
inc
push
cmp
push
adc
jbe
mov
addr16
sar
fbstp
cmpsl
loop
jge
or
lcall
test
sbb
dec
cltd
sbb
sbb
cmp
neg
cmp
js
push
mov
test
lods
loop
loopne
push
aas
lods
imul
addr16
inc
mov
push
fcmovnb
insl
dec
pushf
adc
jns
fwait
jmp
stos
sub
sub
lds
insb
addps
sbb
pop
or
repnz
and
popf
mov
out
lret
adc
xchg
inc
jl
and
lcall
loop
push
fdivrs
push
dec
xchg
insb
cs
fcmovnu
or
decl
in
insl
cmc
out
lret
xorl
mov
mov
in
nop
cmp
push
xlat
xchg
mov
js
je
test
push
jo
aaa
cwtl
pusha
sbbl
lret
pop
sbb
adc
xchg
pop
mov
imul
out
jbe
call
xchg
xor
jnp
add
std
inc
lds
cmp
lahf
inc
and
dec
inc
cwtl
out
int3
pusha
setns
mov
cmp
jecxz,pn
push
out
fdivrs
sub
repz
push
orl
es
leave
mov
js
int3
int3
cmp
mov
out
cmp
negl
out
test
insl
inc
in
into
aam
fidivrl
jge
jge
popa
jl
gs
push
leave
dec
mov
sbb
sub
addr16
dec
jmp
dec
dec
xchg
mov
and
sbb
sub
nop
mov
pushf
insl
push
stos
mov
mov
jecxz
mov
pop
push
lods
mov
rolb
cmp
xchg
jmp
cmp
sahf
scas
mov
adc
scas
add
in
jno
cmp
mov
pop
mov
rorb
ljmp
pusha
sub
roll
push
sbb
insb
cmp
inc
insl
dec
xorb
fadd
nop
xchg
mov
sbb
out
mov
in
xor
mov
push
cmp
dec
gs
pop
push
fucomp
jle
sub
scas
sbb
mov
push
mov
loope
imul
ret
enter
jne
xchg
pop
insb
sub
test
jns
int3
loope
nop
or
mov
xchg
movsl
js
lods
loopne
mov
xchg
fucomi
mov
fwait
xchg
xchg
xchg
inc
iret
push
mov
outsl
scas
xor
pop
mov
mov
push
inc
xor
cli
xchg
mov
into
xchg
out
adc
sahf
fs
push
fnsave
movsb
xor
pop
inc
addr16
xor
xchg
xor
cmp
add
dec
push
mov
cmpsb
in
mov
push
fwait
cs
jbe
leave
ret
or
xor
adc
movsl
stos
arpl
fdivrs
addb
ja
and
sub
data16
xchg
push
sub
fs
jg
imul
aaa
lahf
xor
outsl
insb
arpl
jbe
inc
mov
cmp
insb
add
sbb
sbbl
jnp
ror
cmpsb
ja
rcrb
mov
cld
push
je
lock
sub
pusha
adc
pop
mov
xchg
andl
mov
push
dec
stos
push
in
cltd
and
insl
cld
dec
inc
cmc
pop
dec
xchg
or
fdiv
gs
cmpsb
lcall
aas
imul
dec
gs
mov
mov
sub
push
mov
xchg
cwtl
icebp
lds
lds
in
mov
lds
je
fwait
pop
xchg
sub
das
int
xor
arpl
fldcw
ljmp
adc
jne
stos
in
movsl
xor
sbb
push
inc
nop
movsl
xor
je
xchg
mov
cmp
pop
jne
inc
inc
add
cltd
mov
adcl
dec
ret
arpl
jo
sbb
aam
jb
mov
jmp
adc
jg
sub
pop
mov
xor
aad
jb
add
pop
arpl
nop
inc
jns
outsl
xchg
pop
into
addr16
xchg
por
jle
cmpsl
mov
loope
ljmp
in
mov
lret
dec
es
mov
sbb
ja
mov
adc
pop
jecxz
mov
sub
xchg
shrl
jg
push
fdivrl
fisttpl
mov
inc
icebp
or
add
pusha
into
icebp
dec
or
lea
loopne
lods
js
mov
pop
cmp
inc
push
mov
out
arpl
xchg
push
int
sahf
andl
sbb
hlt
in
out
call
imull
aam
xlat
out
xchg
scas
mov
add
inc
dec
ficomps
arpl
mov
cli
lea
pop
rclb
arpl
sbb
ret
int
repnz
pop
sub
mov
ret
outsb
scas
cmp
sbb
stc
and
mov
fldt
add
stc
push
jle
rcl
into
outsl
pop
dec
cli
sbb
mov
jle
rorb
pop
dec
fsubrl
rorl
fbld
sub
pop
into
mov
sbb
cmp
dec
test
mov
cmp
lock
sti
dec
push
sub
push
fcoms
adc
es
pop
ja
idivb
cmp
cwtl
pop
notl
outsb
and
mov
int
ljmp
lahf
mov
cmp
leave
pop
jmp
lret
jbe
pusha
or
aad
dec
push
mov
adc
lret
les
adc
sub
into
jbe
enter
neg
cmp
mov
test
out
mov
push
scas
out
add
jb
and
aad
sti
lretw
in
data16
lods
rorl
in
cmp
inc
sub
roll
shrb
pop
roll
cmc
in
mov
lahf
jnp
mov
fwait
xchg
shrb
cmpsl
and
loop
or
ss
pop
aaa
nop
push
sub
adc
stc
add
movsb
xchg
ljmp
cmp
es
aad
pop
and
ret
jnp
rorl
ds
mov
lock
out
sbb
test
aaa
test
inc
mov
test
fldcw
xchg
test
or
mov
es
xchg
cmc
les
aas
push
and
out
sbb
push
add
insb
and
in
sti
leave
push
mov
push
outsl
jae
sbb
sbb
notb
xchg
add
outsl
and
pop
mov
inc
dec
jl
fildll
loop
lret
inc
cmp
mov
das
xchg
lcall
mov
push
push
adc
xchg
fisubl
in
loope
outsl
out
aas
xchg
cmp
or
inc
add
icebp
lods
lea
push
lock
addr16
inc
aaa
stos
dec
sbb
lock
data16
or
lret
sbb
scas
mov
mov
and
pop
out
mov
mov
enter
pop
xlat
xchg
imul
arpl
mov
push
sub
push
xchg
ret
out
mov
scas
call
lret
divb
pop
or
sti
mov
or
mov
mov
dec
push
fs
push
xchg
popf
stos
push
sbb
adc
mov
or
dec
in
out
sbb
rorl
cld
repz
movsb
xchg
or
jg
cmpsb
push
xchg
jne
mov
jl
loope
and
aaa
divl
aad
push
rolb
fwait
dec
inc
ret
pop
jo
sub
xor
dec
leave
mov
scas
je
dec
jp
dec
mov
fsubs
mov
fsubl
arpl
dec
xlat
lret
xchg
xchg
sbb
aas
jecxz
sarl
adc
xor
mov
repz
clc
lds
sbb
iret
xchg
repnz
xor
adc
stos
out
stos
std
push
arpl
mov
addb
sub
das
nop
clc
fwait
test
sub
xchg
inc
jg
stos
xchg
pop
mov
pop
repz
jns
xchg
inc
popf
leave
add
jbe
cmpsb
movsl
xchg
pop
divb
pop
mov
or
push
loopne
sbb
and
and
lea
pop
mov
xor
stos
out
adc
mov
mov
jg
test
aaa
roll
xchg
adc
enter
lcall
mov
out
mov
imul
lcall
popf
pusha
cld
filds
ja
mov
in
or
lods
jl
jecxz
sub
cmpsl
sbb
mov
xchg
adc
imull
imul
xor
dec
xchg
jbe
push
sbb
hlt
xchg
and
mov
shll
ret
movsb
dec
ret
stos
bound
inc
cmp
fadds
xor
pushf
cmp
mov
int3
lcall
inc
cmp
fiadds
gs
inc
jge
and
into
pop
popa
inc
ds
shlb
mov
mov
xlat
addl
iret
fildl
lahf
jmp
and
sbb
setle
jg
ss
push
je
sub
shrl
mov
outsb
sub
into
pushf
or
cmpsb
push
xlat
jge
inc
cmp
sub
add
orl
pop
jge
stos
hlt
mov
fimuls
pop
cmp
adc
mov
cmp
xor
mov
and
test
scas
pushf
call
dec
sbb
sarl
loop
int
xor
push
xchg
xor
pushf
stc
mov
insb
lods
popf
adc
ds
sbb
push
sahf
popa
pop
stos
cmp
clts
and
lret
push
fsubrs
xchg
imul
mov
xchg
jmp
lea
jmp
cli
lds
mov
xor
enter
push
sbb
add
cmc
fwait
xchg
pop
xchg
add
sub
mov
cmp
fwait
popf
push
xchg
sub
mov
sbb
idiv
roll
mov
mov
xchg
inc
push
adc
in
mov
mov
jg
mov
sbb
and
and
sub
jns
clc
cmp
mov
test
lret
cwtl
cmc
sbb
xor
test
gs
popa
dec
in
ja
lods
sbb
push
je
xchg
repnz
xchg
andb
repz
fwait
cmpsb
cmp
shll
aas
adc
mov
jl
pop
mov
adc
icebp
push
and
mov
mov
data16
dec
lret
lcall
jne
pop
loop
and
xchg
push
adc
add
jnp
xorl
movsl
inc
or
sbb
jg
cmp
stc
cmp
loope
lcall
pop
shl
mov
xchg
pop
lret
jmp
negl
daa
adc
cmp
subb
icebp
xchg
mov
dec
push
daa
jno
ret
testb
shlb
push
jae
xor
fcomip
push
dec
dec
pop
add
and
popa
mov
stc
lods
pop
pop
cmp
push
mov
jg
dec
rep
daa
stos
xlat
push
test
push
mov
mov
ljmp
adc
cwtl
lds
sub
loope
push
mov
out
divb
mov
jmp
and
jo
inc
dec
adc
add
sti
dec
movsl
repz
into
scas
hlt
add
cmp
dec
xchg
clc
stos
sti
frstor
jmp
mov
mov
fs
shll
stc
add
in
lret
sbb
mov
cmc
xor
cmc
lret
sbbl
ret
adcl
iret
xchg
stc
das
test
stos
adc
repnz
dec
lret
outsl
mov
cli
adc
cmp
incl
add
sub
mov
int
cmp
enter
cmpsb
imul
mov
into
and
enter
xchg
pop
mov
les
icebp
inc
leave
sbb
push
jb
out
mov
xchg
aas
sbb
xchg
mov
or
test
mov
stos
paddsw
hlt
cmc
aas
repz
jns
cmp
push
and
fiaddl
mov
sbb
push
lea
pop
dec
pop
movsb
inc
push
inc
pop
loop
dec
popa
cmc
mov
call
popa
mov
lods
sbb
cmpb
mov
push
loope
repz
mov
xchg
daa
out
mov
push
out
rclb
dec
jp
mov
pop
mov
popa
mov
cmp
insb
cld
xor
inc
mov
test
inc
mov
pop
jecxz
add
mov
int
or
negl
repnz
xchg
mov
dec
mov
js
or
sbb
hlt
dec
mov
aaa
sbb
lea
add
aad
movsb
jo
pop
inc
mov
fldcw
push
mov
and
into
ror
lret
aam
sbb
lahf
inc
es
xor
flds
adc
and
or
add
sbb
xchg
mov
cmp
xor
cld
dec
bound
outsl
divb
xor
mov
scas
ss
jnp
push
lea
xchg
xor
sbb
enter
push
pop
mov
mov
inc
leave
add
sub
sahf
call
cwtl
popa
sbb
mov
call
jo
add
mov
icebp
mov
dec
out
out
add
add
lret
popa
and
push
and
inc
ljmp
rcrb
fdivl
adc
jne
pusha
out
pushf
cwtl
iret
iret
popa
fstps
out
cmpsb
lea
mov
cmpsb
jecxz
loop
es
adc
xchg
mov
dec
cmp
inc
adc
repz
subl
push
pop
mov
lods
nop
mov
lret
ds
inc
jl
push
jbe,pt
add
mov
or
lods
or
lock
cmp
mov
or
movsb
cli
fimull
je
add
scas
loope
xor
adc
sub
add
mov
mov
or
lret
cmp
or
fadds
dec
mov
lods
int3
push
jbe
lret
cltd
enter
or
and
hlt
push
test
xor
mov
mov
sbb
adc
inc
je
xchg
xchg
inc
scas
notb
mov
mov
jns
orb
ss
push
dec
pushf
js
adc
sbb
int3
push
mov
mov
add
sbb
mov
ss
pop
popf
xor
lcall
mov
jmp
sbb
mov
sbb
int
xchg
popa
jbe
xor
ja
add
outsb
xor
stos
gs
scas
inc
sbb
cmp
and
jns
pushf
popf
pop
mov
shrb
pop
inc
pop
xorw
fildll
dec
mov
adc
jle
cmp
dec
lock
pop
repz
test
sti
sbb
stos
jb
loope
jl
lret
mov
mov
std
call
scas
mull
clc
mov
push
cmp
fdivr
jecxz
pop
testl
aas
popf
sub
rcr
int
sub
in
jns
in
ds
cld
icebp
pop
stos
fbld
mov
movsb
aaa
push
jecxz
sub
clc
popa
movsb
xor
out
stos
mov
ror
test
push
push
add
or
lock
cmp
stc
jns
mov
sar
pop
je
inc
movb
inc
xor
fadds
ss
sbb
mov
mov
mov
xor
cmp
jl
xchg
int3
das
shlb
mov
lahf
pop
mov
mov
pusha
cli
mov
jge
pop
lahf
cli
mov
out
mov
cmp
xor
scas
out
insl
inc
es
pushf
xchg
push
mov
cmpl
outsb
xchg
and
movsb
stos
jecxz
mov
cmpsb
into
iret
sub
sbb
mov
dec
test
mov
pop
or
or
shl
movl
add
enter
push
notl
sti
test
cmc
in
inc
cltd
cltd
sbb
jp
mov
test
pop
outsl
imul
inc
test
scas
loop
cmp
adc
jecxz
cmp
xorb
mov
imul
dec
pop
mov
mov
shl
mov
mov
mov
sub
jmp
fists
out
cmp
std
pusha
and
cs
pop
mov
adc
rcrl
jp
scas
pop
jg
aad
adc
movsb
mov
add
addr16
stc
in
ja
pusha
mov
or
clc
cmpsb
push
mov
adc
ret
inc
into
add
cwtl
pop
cmpsb
cmp
mov
and
xor
mov
adc
rorl
pop
leave
fwait
sti
fidivs
into
ja
push
mov
lods
mov
fldcw
aad
aas
mov
jg
out
mov
fidivl
xchg
add
scas
or
inc
pop
out
mov
ljmp
and
cli
mov
jns
xchg
dec
cwtl
mov
mov
imul
push
mov
pop
out
and
lock
js
fisttpll
shrl
xor
pop
test
lock
push
inc
mov
xchg
mov
jae
and
push
xor
in
xchg
adc
sbb
aaa
in
pop
aam
pop
sub
pop
jge
stos
cmp
repz
lahf
cmp
in
shll
xchg
jp
jo
mov
xchg
sbb
lahf
xor
sub
xchg
jae
ja
or
cmp
inc
insb
iret
rol
adc
adc
inc
outsb
mov
add
fsubrs
push
adc
aaa
mov
out
inc
je
or
push
out
dec
out
inc
mov
rclb
sub
and
ret
test
mov
lds
sbb
data16
push
xchg
movsl
outsb
mov
xor
jnp
adc
jg
test
xchg
fs
mov
jnp
add
insl
adc
stc
sahf
add
daa
stos
xchg
or
push
inc
jmp
dec
jle
push
lcall
jae
and
inc
mov
orb
ret
ja
inc
pinsrw
mov
fbld
stos
dec
lods
jge
adc
mov
mov
mov
and
fnstsw
outsl
mov
sbb
push
xchg
test
movsl
dec
in
jbe
jp
jae
mov
jge
out
fisubs
push
ret
jbe
xchg
or
sbbl
iret
inc
cmc
mov
sub
sub
adc
es
fnstsw
out
das
idivl
fs
aad
jnp
popf
fs
mov
lock
movsl
fidivrs
mov
loop
mov
mov
repnz
or
testb
mov
mov
xchg
cmpsb
sub
cmpsb
xchg
push
sub
push
adc
pushl
inc
es
xchg
ss
or
rorl
cmp
movsl
xlat
cmpsl
xchg
xor
sub
push
xchg
in
cmpl
pop
jp
pop
loop
xor
aaa
lret
mov
leave
std
mov
daa
mov
xor
addl
call
sub
xorl
mov
in
pop
mov
cmc
loopne
std
std
and
mov
lret
jecxz
int3
sbb
cmp
mov
test
stc
jle
add
cmpl
bswap
aas
cmp
out
push
scas
adc
cli
andl
insb
dec
cmc
mov
sub
inc
pop
mov
or
outsb
and
mov
es
clc
mov
leave
test
mov
clc
gs
or
clc
pop
jb
push
sub
aad
mov
sbb
imul
hlt
xlat
push
lcall
jne
divb
jg
push
push
jno
pop
rcll
pop
xorb
jnp
sti
ljmp
std
xchg
cmpsb
mov
adc
lret
cmpsl
ds
ror
shll
lret
pop
negl
mov
aas
jns
leave
dec
stos
mov
stos
lods
mov
js
cmp
mov
lret
ret
daa
cmp
xchg
loope
std
loopne
push
xchg
enter
fs
in
cmp
adc
cmpsl
inc
mov
dec
sub
bound
cmp
into
hlt
pop
movsl
adc
inc
mov
inc
std
repz
sub
add
sbb
sub
cmp
sbb
movsl
lcall
mov
pop
push
xor
pop
dec
cmp
sbb
addl
mov
adc
test
cwtl
cmpsb
sub
mov
pusha
aam
rcr
push
jne
jno
sub
dec
push
sbb
fs
test
rorb
mov
push
loopne
cmp
lods
sbb
fisttps
ljmp
pop
sbb
push
mov
sub
ds
dec
mov
mov
xor
js
cltd
inc
int3
adc
adc
cld
iret
nop
std
sub
push
dec
xchg
xor
cltd
or
nop
inc
or
lods
jbe
jno
mov
in
sarb
push
jp
cmp
xor
daa
cmc
daa
mov
push
add
mov
lds
iretw
leave
cmpsl
jl
sbb
cmp
and
pop
mov
aam
je
lea
cmp
add
sti
or
movsb
subl
jmp
test
mull
cmp
cmp
push
jmp
push
fsub
inc
pop
xchg
dec
fsin
push
push
dec
xor
dec
outsb
ficomps
jp
xlat
inc
jbe
lret
loopne
out
flds
push
adc
push
scas
xor
sub
icebp
subb
jecxz
add
inc
ret
cs
shll
in
dec
xor
inc
rcrb
sub
cmp
out
mov
jbe
addr16
movsl
int
sub
inc
cmp
adc
jne
xor
movsl
inc
pop
add
mov
mov
xor
in
adc
scas
push
dec
fcomps
and
mov
adc
lret
fdivs
movsb
and
xor
std
jl
pop
std
mov
cmp
bound
xor
mov
cmp
push
pop
mov
mov
inc
addb
insl
add
cmp
sub
ljmp
push
adc
call
adc
pop
mov
mov
fwait
insw
hlt
sub
fmull
insb
push
cmpsb
hlt
out
sbb
and
cmpsb
mov
sbb
dec
jnp
repz
loope
lret
xchg
outsb
mov
lock
mov
loope
lock
jmp
aad
xchg
push
das
ret
cmp
stos
sub
sub
negl
mov
pop
push
shrb
outsb
lock
imul
inc
int
mov
sahf
fs
cmp
ja
xchg
xchg
push
lea
imul
test
out
sbb
sbb
jmp
cmc
jb
inc
lret
xor
cmp
rol
sub
dec
xlat
jae
dec
call
outsb
push
flds
or
scas
mov
fldl
sbb
jl
fucomp
cld
cmp
jne
sbb
lods
das
repnz
jno
xchg
sahf
ss
push
inc
jnp
mov
or
mov
jp
in
push
addl
sarb
jle
orb
xor
in
mov
pop
or
dec
and
add
or
xchg
cld
ja
nop
or
sub
cmp
pop
cltd
jbe
mov
add
cmp
in
add
leave
sbb
add
push
int
and
mov
xchg
push
xchg
lods
es
and
js
jge
lret
or
mov
loop
push
dec
adc
cltd
mov
add
xchg
pop
jle
and
mov
sub
pop
and
shlb
dec
jl
adc
ljmp
shl
mov
jmp
mov
inc
sbb
add
jp
mov
mov
push
cmp
lock
push
mov
add
push
sbb
adc
stos
push
sbb
cmp
lods
rcrl
push
jo
lret
pop
test
mov
xor
mov
xchg
cwtl
into
jns
jmp
std
jle
loop
fucomi
cmpsb
shll
pop
push
and
stos
flds
inc
shrl
push
es
add
push
jg
das
pushl
xchg
push
and
aas
sbb
pop
jmp
pop
mov
imul
ja
pop
test
mov
stos
fcomps
jae
pop
mov
std
fildl
or
mov
addr16
lock
ss
jne
sbb
sti
imul
neg
loopne
std
cmpsl
sbb
dec
push
adc
xor
inc
or
pop
xor
dec
jbe
lods
in
push
xor
shrb
xor
cwtl
adc
cmp
in
in
roll
movsl
and
movsb
cmp
cltd
sub
sbb
and
xchg
xchg
clc
movsb
ret
insb
adc
jnp
adc
jl
loopne
mov
lods
push
inc
xchg
jb
mov
mov
aam
scas
andb
lock
lock
pushf
ljmp
jae
pop
mov
fwait
adc
or
inc
das
push
lods
fistl
cmp
xlat
sti
sub
lock
fiadds
stc
xor
xor
arpl
in
stos
mov
mov
push
repnz
sub
jae
ficoml
mov
pop
lods
les
outsb
lcall
adc
dec
sti
ja
pop
cmp
rcr
jmp
dec
sbb
dec
ss
push
pop
push
out
in
addr16
popa
in
repnz
cmpsl
dec
xor
xchg
add
shll
adc
idivb
or
xor
fcomi
push
int
or
mov
imul
pusha
movsb
fimuls
dec
pop
push
scas
in
push
and
sbb
sub
xor
das
ficompl
lods
jne
ds
push
loop
jnp
jg
loope
or
xchg
inc
pop
or
sbb
pop
jmp
cmp
jbe
adc
cs
or
stc
xor
mov
aas
loope
test
adc
xor
aas
shll
mov
lret
pop
pop
sbb
mov
inc
cmp
pop
in
adc
cmc
push
jge
sbb
pop
aaa
mov
icebp
sub
inc
call
enter
adc
and
scas
scas
repnz
movsb
cmc
pusha
lcall
cltd
pop
aam
inc
mov
push
daa
rcll
and
dec
iret
xor
mov
and
mov
out
adc
mov
notl
call
inc
jns
and
std
cmp
imulb
adcl
lret
into
insb
push
cmc
or
jno
fnstsw
adc
fisttpll
fcoms
js
fstpt
mov
xor
mov
bound
movsl
dec
das
jnp
fldenv
cmp
in
mov
jge
int3
jmp
sahf
mov
pop
fdivr
sub
sub
sub
test
mov
jmp
fs
xchg
cli
lcall
inc
scas
fadds
repz
jg
mov
mov
test
ljmp
pop
stos
fstp
ss
or
lret
jne
cli
test
outsl
and
insb
les
ljmp
and
out
mov
sub
pop
and
scas
mov
add
sbb
in
cmp
bound
test
into
push
xchg
and
js
pop
into
push
mov
nop
ficomps
fadds
mov
arpl
jl
sbb
rolb
sub
sbb
pop
pop
jg
bndstx
fisttpll
adc
in
and
xor
xchg
mov
push
jmp
mov
mov
aaa
adc
lcall
sahf
int3
movsb
and
je
jb
rcll
bound
adc
addl
mov
mov
clc
xchg
ret
xchg
mov
mov
idivl
bound
pop
idiv
pop
cmp
sub
pop
mov
pop
lcall
pop
iret
notl
xchg
jmp
push
call
leave
loopne
mov
add
add
jecxz
out
lahf
push
mov
mulb
inc
mov
fsts
loope
mov
imul
mov
xchg
shrl
jecxz
sarl
xor
push
and
outsb
bound
jge
sub
push
xchg
adc
test
pushf
aaa
mov
adc
and
jl
xchg
mov
andb
add
mov
add
cld
jecxz
pop
out
ljmp
or
push
jno
jne
lock
dec
inc
fldenv
lods
mov
in
xchg
mov
test
or
outsb
jecxz
addr16
lock
jae
ret
or
icebp
out
shl
fs
jmp
seto
adc
push
test
and
jae
jle
mov
iret
jnp
dec
stos
add
das
sbb
ljmp
xor
mov
lods
push
inc
inc
dec
addr16
ret
pop
or
sub
sub
inc
scas
ss
in
pop
pop
inc
movsb
inc
leave
jp
mov
lock
roll
shlb
in
insl
pusha
sub
dec
add
adc
testb
mov
mov
lds
mov
xor
insl
stos
push
or
fsubs
cmp
popf
js
shl
xor
pop
es
test
jnp
jns
xchg
mov
sub
xor
leave
sbb
xlat
es
push
sti
push
jnp
into
std
lcall
mov
push
xor
dec
inc
pop
pushf
call
mov
cwtl
aam
add
inc
inc
push
icebp
inc
test
int3
shll
sub
mov
xor
lcall
or
sbb
inc
fwait
test
xchg
mov
lods
dec
xchg
xchg
sti
cmpsl
psrlq
add
cwtl
sub
in
xor
scas
ret
data16
out
xchg
jl
jbe
stc
jp
mov
andl
dec
lds
rcrl
jp
pop
adc
cmp
xchg
and
shlb
dec
dec
xor
pop
pop
lret
or
sbbb
jp
cmpsb
mov
jp
add
mov
pushf
repz
je
mov
frstor
subb
jno
push
test
cmpsl
repz
xor
inc
mov
xchg
aam
pop
sub
sub
into
cmp
aas
in
push
mov
sub
jno
outsb
mov
call
or
xchg
add
jp
stos
push
sub
push
xor
push
out
mov
jae
cmp
cmp
fwait
pop
or
rorb
mov
ret
lcall
test
adc
bound
jle
aad
dec
push
jecxz
lods
cmp
int3
iret
fdivrl
jae
fisubs
clc
in
jge
je
adc
fistpll
inc
cmc
push
cmpsl
int3
aad
inc
or
pop
cmp
in
bound
mov
popf
popf
movsl
notl
mov
mov
bound
jge
data16
movsb
jo
enter
clc
cmp
adc
inc
or
outsl
jmp
aas
dec
es
xor
adc
jo
rcll
mov
gs
aam
jmp
dec
enter
into
inc
out
stos
dec
push
divl
mov
loope
jge
ljmp
mov
or
sub
xor
lret
fadds
inc
mov
daa
xchg
out
movsb
test
or
xor
shlb
xorl
xchg
rolb
sbb
rolb
and
js
mov
xchg
jle
aaa
pushl
stc
push
addr16
out
mov
popa
scas
mov
leave
data16
xchg
or
jg
lret
mov
bound
inc
outsb
cwtl
mov
std
and
outsl
lret
loope
mov
inc
sbb
aam
xor
jmp
arpl
pop
popa
push
mov
int
mov
mov
jle
andl
xchg
xorl
push
imulb
push
jg
mov
pusha
push
adc
xor
sub
mov
mov
inc
mov
lock
pop
push
cld
dec
sbb
jns
inc
mov
imulb
sub
jle
cmp
outsb
test
test
dec
push
or
fimuls
cmp
adc
ret
and
push
inc
cmpb
data16
enter
jbe
data16
xchg
mov
jecxz
mov
pop
ret
gs
leave
ss
pop
cmpsl
fldl
outsb
dec
sub
cmp
add
dec
cmpsl
call
jo
stos
scas
clc
sbb
xor
sti
das
dec
enter
jp
inc
bnd
adc
shrl
repz
add
adc
fldt
les
pop
lods
and
jae
and
cmp
jno
push
popf
popf
inc
sub
cmpsb
js
lcall
out
jle
xchg
das
xlat
out
outsb
les
push
dec
jae
pop
icebp
adc
in
jmp
pop
out
arpl
xlat
mov
sbb
mov
mov
in
jns
pop
arpl
inc
xchg
pop
inc
out
nop
mov
jmp
insb
fwait
adc
fwait
sub
addr16
fwait
push
test
adc
cmc
test
pop
das
sub
cwtl
jae
lock
negb
cmc
out
cmp
in
mov
loopne
xor
es
sub
stos
jl
xchg
pop
jb
lods
test
inc
imul
adc
cmc
push
jp
pop
xorl
ja
fdivrs
mov
push
call
lods
push
sarb
push
inc
dec
push
or
cmp
sub
lea
add
jo
push
dec
xchg
xchg
ljmp
pusha
push
or
push
cmpsl
shll
fiaddl
fimull
ficoms
adc
mov
sbb
fsub
dec
and
xchg
or
xchg
fdiv
fdivs
pop
aaa
xor
xchg
popf
pusha
jno
shlb
jge
push
mov
inc
mov
leave
aad
aam
cmpsl
dec
ljmp
cltd
pop
pop
push
lds
and
dec
xor
cmc
xchg
negb
lock
leave
xor
inc
hlt
pushf
push
fnstenv
lods
pusha
jbe
ja
push
pushf
mov
jecxz
xor
das
or
jne
stc
xor
xchg
pop
xchg
jle
inc
js
cmp
cmp
and
jge
add
push
imull
adc
outsb
xor
pop
dec
outsb
fwait
adc
push
clc
cmpsb
jge
es
xchg
hlt
mov
pop
clc
cmpsb
divb
mov
call
xchg
cmpsb
sub
mov
negb
sbb
stos
test
ds
push
sub
mov
or
jge
inc
je
test
pop
cld
stos
out
mov
pusha
jp
fbstp
nop
mov
jb
out
jp
pop
inc
mov
test
ja
ja
es
pop
fstl
or
imulb
lret
adc
add
mov
lds
mov
test
arpl
aam
adc
dec
testb
or
and
mov
xchg
stc
aas
sbb
ficompl
loope
cmp
scas
xchg
jp
jle
sbb
jns
xchg
push
negl
ljmp
or
notl
jne
out
enterw
adc
out
jle
je
addb
popa
sahf
add
repz
pop
enter
inc
rcl
push
or
js
push
ror
bound
insb
cwtl
jno
cmp
or
mov
jnp
sbb
rol
and
cmpsl
or
jmp
mov
pusha
mov
call
std
imul
adc
jbe
test
call
icebp
std
push
into
ljmp
adc
adc
or
push
out
ljmp
dec
stos
call
pop
sub
or
xor
jnp
shlb
cwtl
pushf
std
cmpsl
lock
mov
bound
lahf
ret
sbb
cltd
adc
xor
in
xchg
pop
jo
mov
sub
pop
adc
jns
sub
popf
push
jle
lock
mov
push
movsl
lds
shlb
jle
decl
xor
mov
jecxz
loopne
roll
mov
jle
mov
xor
mov
mov
aaa
push
fcoml
push
shrl
lret
add
pop
fistpll
fdivr
testb
inc
loop
mov
mov
jne
fs
xchg
movb
sub
fsubrl
mov
jg
add
ja
and
mov
lahf
jl
xchg
int
pop
push
test
pop
hlt
add
cmp
out
out
pushf
dec
lcall
mov
jns
jp
inc
ljmp
pop
fwait
and
lcall
push
add
les
adc
insb
je
dec
loopne
or
dec
mov
mov
push
xchg
outsb
adc
inc
push
fs
mov
ds
sbb
xor
lods
fnsave
adc
adc
int3
mov
cli
lcall
pop
lds
mov
pop
jmp
adc
enter
push
pop
pop
lock
in
in
rcrb
insb
or
fincstp
jbe
and
mov
dec
mov
cmp
movsb
movsb
imulb
movsb
and
cld
pop
loope
adc
clc
xor
dec
lahf
add
inc
insl
dec
rol
and
mov
mov
push
mov
out
and
cmp
push
xlat
jle
xor
or
or
in
push
adcl
cmp
in
push
jnp
ret
jl
add
mov
xor
and
outsl
int
mov
lret
jne
and
outsl
inc
sbb
shl
push
jmp
mov
imulb
cli
sbb
out
call
jp
mov
sahf
add
add
jns
loopne
daa
dec
pop
ret
cs
clc
mov
mov
pop
jno
xor
fstl
repnz
inc
add
pop
jl
test
mov
push
lea
call
addl
add
js
stos
pop
movsb
mov
jo
lds
or
push
dec
add
lahf
imul
aaa
cmc
mov
popa
xor
lcall
dec
scas
dec
xor
push
repnz
into
mov
aam
imul
fsubrl
mov
movsl
decl
add
xor
sti
mov
cmc
xchg
jae
lea
out
int3
jns
aam
addr16
mov
aam
and
mov
ret
inc
loopne
aam
shlb
jg
fwait
in
loop
enter
ja
mov
idivb
push
mov
movsb
fs
mov
xchg
jbe
clc
xor
jecxz
fmulp
int3
mov
ljmp
lock
mov
out
nop
cmp
popa
xchg
xchg
lods
mov
lret
insl
mov
push
rol
and
cld
sti
movsl
adc
in
sub
inc
in
mov
or
pop
mov
jg
xor
cmpb
sti
jne
mov
pusha
notl
cmp
cmpsl
es
adc
jge
scas
add
lcall
xor
xchg
int3
sub
das
loop
cld
mov
cmp
jle
jae
stos
int3
lods
shlb
pop
xor
mov
add
push
stos
push
pop
jl
push
pop
mov
jl
cld
sub
inc
aad
mov
imul
add
out
xchg
gs
pop
and
mov
cmp
shlb
fisttps
sub
mov
fdivrs
or
xlat
sub
rclb
mov
mov
and
and
and
mov
outsb
jle
cmp
loopne
sbb
adc
divl
test
cltd
test
jo
mov
mov
mov
fidivs
lds
or
mov
pop
rcr
scas
data16
test
pop
aad
sarl
inc
inc
add
cmp
lock
inc
xchg
cmp
loop
mov
outsl
mov
dec
rorb
pop
ja
jns
lock
inc
data16
aaa
mov
aam
push
icebp
std
sahf
inc
xor
mov
and
push
mov
in
out
add
pop
jne
push
push
es
mov
cld
and
enter
pop
stc
xchg
pop
mov
add
dec
jecxz
fistpll
or
sub
cmc
lds
sbbb
jns
mov
inc
iret
sar
add
jbe
arpl
add
ds
subb
jns
rolb
push
scas
jb
mov
sub
icebp
hlt
in
dec
pop
dec
mov
fmuls
push
jle
out
ljmp
nop
sahf
call
enter
cmp
mov
xchg
mov
push
adc
sbb
dec
scas
push
loop
in
in
dec
inc
lcall
ret
xchg
mov
dec
loop
test
cmp
and
fmull
stos
fidivrl
mulb
fcoml
mov
ss
sahf
mov
insl
push
in
inc
xchg
inc
xchg
sub
shrl
sbb
sarb
cmp
and
dec
dec
pop
mov
aam
pop
mov
lret
xchg
push
cmpsl
mov
mov
inc
adc
ss
dec
xchg
or
push
test
cmp
jle
out
insl
mov
mulb
pop
pop
push
and
xchg
push
test
ljmp
lret
leave
mov
ror
xor
mov
mov
stos
push
mov
sbb
ror
sub
dec
es
ljmp
sbb
inc
jle
loopne
ret
dec
xor
xor
xor
xchg
imul
and
mov
cmpsb
dec
inc
test
fsubrl
hlt
lret
jl
movsl
cld
movsb
shr
mov
lods
add
add
gs
daa
in
or
ret
adc
rclb
xor
mov
out
cmp
jnp
cmp
jns
or
mov
inc
push
inc
dec
pop
or
adc
lods
xchg
mov
mov
or
loop
pop
adc
xchg
sub
dec
out
int3
pop
cmp
negb
mov
sbb
add
inc
in
adc
jge
mov
sub
push
popf
jno
int3
ret
rorl
sub
push
push
andl
push
call
adcl
and
adc
and
mov
fwait
sbb
sub
das
out
mov
push
pushf
cmp
mov
jle
xchg
fs
mov
sbb
call
push
dec
pop
out
mov
mov
cmp
in
cltd
testl
rcrb
dec
push
out
js
cwtl
outsl
std
or
and
mov
cld
jns
cmp
mov
cmpsb
loope
xor
cld
popf
xor
outsl
inc
into
mov
lods
cmp
pop
or
xor
jp
ret
xlat
mov
cltd
enter
cmpsb
js
mov
jns
sbb
jge
pop
mov
sub
jno
stos
mov
jo
in
int
jne
idivb
adc
pop
xor
aas
arpl
inc
cmpsb
xchg
lcall
jnp
push
ljmp
fsincos
cmp
fsincos
push
insb
imul
mov
xchg
jno
cmp
testb
dec
loope
xlat
mov
clc
and
add
and
outsb
cmp
imul
movsl
cmp
push
repnz
xor
pop
lods
shr
rcrb
sti
iret
cmp
pop
xor
inc
aaa
out
pusha
out
xor
aam
sbb
stc
or
dec
cli
frstor
mov
mov
rorl
cli
leave
dec
popa
mov
push
mov
mov
outsb
imul
sbb
nop
xor
cmp
push
sub
loop
pop
test
shlb
mov
adc
xchg
stc
mov
mov
fistpl
inc
jb
inc
xchg
fdivs
fwait
ja
cmp
fcmovne
subl
xchg
xchg
cmc
imul
leave
mov
loopne
pop
js
insl
jecxz
mov
popf
push
aam
push
sub
inc
cli
jl
sbb
sbb
sub
insb
jg
mov
sti
in
push
cli
in
leave
scas
imul
ljmp
test
nop
xchg
jecxz
mov
add
push
push
push
sarb
push
popa
xchg
and
out
fnstsw
andl
je
pop
icebp
xor
addr16
mov
xchg
jbe
cltd
lds
jp
outsb
sbb
sahf
test
xchg
sub
aaa
mov
dec
cmp
das
mov
push
mov
pop
lods
fsts
sarb
dec
cwtl
out
ret
add
sub
mov
mov
test
cmc
imul
jo
sub
mov
inc
pop
inc
in
bound
push
ja
cmpsb
lret
dec
std
into
xor
pusha
cs
cwtl
xchg
outsl
hlt
mov
outsl
xchg
ds
mov
lock
popa
stos
jmp
sbb
mov
push
jmp
dec
fcoms
adc
cmc
clc
xchg
fucom
scas
fistl
cmp
xor
dec
int
mov
repnz
pop
and
ja
jmp
xorl
pop
stc
pop
mov
je
pop
mov
and
testb
pop
push
orl
jle
cltd
add
pop
pop
in
cmp
jo
test
pop
and
mov
xlat
pop
mov
or
int3
pop
pusha
dec
xor
lret
jmp
mov
fisttps
xchg
sub
arpl
jae
lock
lods
adc
pop
mov
mov
mov
inc
movsl
into
hlt
rol
enter
test
in
push
nop
inc
sub
xchg
clc
int3
mov
sub
dec
mov
lahf
fldenv
aad
cmp
add
loopne
das
cmp
mov
pop
cli
hlt
sti
loope
in
jecxz
ficompl
push
mov
out
push
stos
stos
test
ret
sar
sub
shlb
mov
fsubrl
jecxz
in
mov
pop
mov
fiadds
fwait
and
dec
sbb
xchg
xchg
cmp
push
fwait
loope
xchg
icebp
sbb
fwait
roll
mov
and
xchg
lods
xchg
fwait
gs
add
and
cmpsb
into
outsl
test
sarl
data16
cmpsl
adc
push
mov
push
ss
adc
push
out
xor
out
lcall
inc
movb
dec
lea
popf
shl
or
sbb
dec
enter
pusha
lcall
in
cmpb
ljmp
imul
lret
add
add
lsl
sahf
inc
adc
inc
movb
push
inc
in
bswap
mov
push
sbb
and
fs
gs
sub
sub
mov
ds
js
ficompl
and
xchg
mov
add
sub
mov
xor
sarb
imul
push
jmp
mov
fdiv
movsl
subb
xchg
pop
in
cli
sbb
rclb
xor
out
dec
add
sub
shll
fcompl
cld
es
pop
xchg
mov
out
fsubl
and
and
cs
cmp
imul
test
inc
test
insb
dec
push
push
lea
scas
mov
adc
add
mov
cmc
ret
loope
divl
leave
aas
sbb
lock
pop
ja
push
mov
sbb
das
pop
jg
shr
cltd
cli
pop
inc
mov
jb,pn
fwait
scas
mov
xor
jne
jbe
push
inc
mov
push
jmp
mov
mov
pop
push
mov
jnp
dec
jecxz
enter
lods
push
xchg
pop
out
enter
addr16
or
test
shll
pop
cmp
adc
les
and
pop
and
jmp
cs
lret
leave
pop
and
dec
incl
pusha
cmpb
out
fnsave
pop
in
jg
mov
pop
sahf
xchg
test
nop
out
jno
fucomp
and
jnp
shrl
cld
lahf
mov
mov
sbb
pop
repnz
frstor
fsts
xchg
cltd
xor
sub
aas
cwtl
dec
push
adc
mov
jbe
inc
movsb
lea
mov
jmp
jno
mov
and
inc
jge
xchg
ja
pop
sub
fidivrs
ja
out
push
leave
in
in
cmp
outsl
jb
out
jle
xchg
sbb
sub
or
icebp
sub
push
mov
mov
lahf
fldcw
rcl
int
daa
xchg
cmp
and
or
es
push
xor
xchg
ss
push
ljmp
sub
add
insl
dec
arpl
test
arpl
and
push
push
out
xor
inc
pop
jmp
sbb
xor
fimull
adc
int3
dec
pop
and
dec
push
aad
sti
loope
insl
add
add
mov
jmp
pop
xchg
lds
mov
cld
or
push
in
sub
shlb
pushf
lret
and
aas
fwait
icebp
loopne
es
sub
int
in
adc
cmpsl
fmull
inc
jae
outsl
sahf
mov
dec
xor
cs
repz
dec
pop
xor
cli
loopne
jns
add
pop
adc
ffreep
mov
xor
mov
sarl
jge
imul
mov
jl
mov
xor
and
insl
mov
jp
or
cmp
and
xlat
divb
push
or
xchg
arpl
jge
mov
pop
dec
nop
adc
inc
mov
pop
fwait
adc
int3
ss
aam
push
cmc
sub
lds
repnz
ljmp
xchg
xchg
push
out
out
int
xchg
sbb
subl
sbb
push
shl
pop
jae
shlb
push
xchg
cmp
push
jo
mov
test
or
push
in
dec
sbb
aad
inc
out
mov
fldln2
test
xor
inc
cwtl
and
stc
or
orb
push
cmpsb
cltd
push
jge
cmpsl
int3
or
mov
mov
out
cmp
or
jecxz
pop
dec
inc
out
das
out
cmp
das
or
add
cmp
nop
cmp
gs
xor
and
mov
jne
js
out
dec
aas
dec
mov
psrld
sbb
fstps
mov
cmp
xchg
inc
inc
shr
pop
js
leave
icebp
adc
or
push
cli
test
push
mov
loope
and
or
and
push
in
adc
das
lcall
push
ja
cld
mov
mov
push
push
sahf
fstpt
cmp
xlat
mov
pop
sub
mov
pusha
stos
push
clc
stos
jge
push
popf
xchg
add
dec
clc
adc
cmp
sbb
lock
and
and
mov
add
mov
leave
sub
inc
lds
data16
insb
cmp
adc
jmp
xchg
stos
cli
decb
jg
pop
push
in
cmp
sub
push
sarb
mov
adc
sti
call
cmc
mov
sub
aas
scas
xchg
adc
push
sbb
sbbl
sbb
imul
call
sbb
or
icebp
dec
sbb
stc
add
sub
jge
mov
xchg
in
sahf
mov
adc
mov
cmpsl
ss
dec
loope
js
mov
maxps
stc
insl
inc
imul
mov
mov
push
inc
sub
loop
mov
mov
xor
cmc
outsb
out
mov
cltd
imul
insl
mov
dec
cmp
dec
push
rcrl
jb
mov
cs
xor
pop
daa
xchg
enter
sbb
enter
jge
jp
and
push
cmp
kxnorw
mov
int3
movsl
sarl
loop
gs
arpl
pop
in
cs
jge
and
das
ret
and
xlat
cmpsb
inc
xor
sarb
xchg
sbb
inc
clc
testb
fidivs
into
cltd
shll
add
repz
scas
sub
shll
ljmp
mov
push
ss
push
dec
pop
jecxz
push
sbb
outsl
daa
cmp
sbb
adc
push
xor
or
iret
movsb
js
xchg
xchg
sbb
cmp
icebp
jge
jne
xchg
inc
stc
mov
dec
inc
testl
xor
adc
mov
dec
ja
lahf
add
test
test
and
mov
or
and
std
fwait
pop
test
gs
xor
fimull
arpl
inc
mov
adc
das
pop
sbb
mov
fimuls
xchg
xor
jnp
ss
jmp
outsl
pop
stc
mov
sti
test
xor
inc
int
jnp
push
repz
sub
fcoml
xlat
jmp
sub
xchg
push
outsl
add
sahf
push
es
push
push
jb
stos
dec
iret
ja
ror
js,pn
out
inc
icebp
test
xor
adc
jmp
cltd
mov
aam
movsl
imulb
hlt
cmp
ljmp
inc
sub
inc
jl
std
xor
add
sahf
pusha
and
or
or
dec
mov
pushl
les
into
scas
jbe
in
xchg
icebp
lahf
arpl
fildll
test
dec
in
sub
adc
test
mov
lret
push
and
shlb
xor
lret
xor
lods
jo
shll
xor
sbb
scas
ss
popf
lret
adc
je
cwtl
imul
push
pop
sbb
or
dec
scas
sbb
out
sti
pushf
cmc
cltd
mov
imul
les
lds
rcrb
cltd
cmp
fs
insb
mov
cli
jno
nop
out
mov
mov
pop
pop
dec
cmp
lret
sub
sar
xor
jb
sub
sub
adc
mov
in
and
or
ret
out
daa
sub
cmp
daa
mov
icebp
sbb
shrl
es
mov
jl
adc
inc
je
sbb
aad
and
out
push
loopne
dec
loope
aaa
in
arpl
sub
inc
orb
lcall
pop
sarb
xor
ja
mov
or
pop
rcrb
cld
mov
jmp
mov
xor
mov
mov
pop
lcall
lcall
bswap
jb
or
out
out
leave
jecxz
and
repnz
cmc
or
mov
xor
cltd
ret
mov
sub
mov
pop
fmul
xchg
or
andl
fs
mov
imul
imul
push
cmpsl
cli
ss
mov
push
xor
getsec
dec
mov
fdivrs
jne
loope
sbb
sbb
and
loope
jns
and
sbb
push
ljmp
mov
cmp
mov
arpl
pop
or
mov
int3
xchg
ljmp
dec
sub
fsub
mov
jle
in
aas
enter
xchg
adc
and
xchg
hlt
clc
or
dec
xchg
fs
push
jecxz
mov
sbb
mov
ret
dec
cltd
adc
lahf
outsl
test
ret
cmpsl
pop
adc
mov
testl
mov
rclb
inc
xchg
mov
push
xor
dec
cli
or
rcr
cmpl
inc
push
fs
clc
pop
adc
xchg
xchg
push
out
or
pop
out
adc
mov
in
dec
xor
data16
adc
mov
pop
shll
push
sarl
ss
adc
daa
or
pop
cmp
push
shlb
mov
dec
loopne
test
pop
xchg
jp
ltr
test
fldl
xchg
xor
mov
scas
pop
cmpsl
or
cmc
xchg
inc
divl
adc
dec
or
and
inc
xchg
in
jge
push
les
dec
aas
add
test
inc
cmp
cmp
adc
pop
ja
mov
push
call
adc
adc
sarb
pop
fisubrl
dec
xor
cli
bound
aad
mov
add
stos
je
mov
lods
ss
jmp
xchg
pop
dec
ljmp
pop
arpl
cmc
sahf
inc
in
xchg
inc
lahf
shlb
add
repnz
aam
and
cld
and
inc
adc
sbb
test
pusha
lret
aam
lcall
inc
sub
xor
test
lahf
push
mov
adc
xchg
lret
push
cwtl
out
push
lods
cmp
adc
or
testl
mov
in
pop
adc
in
cltd
xchg
xor
xchg
dec
mov
mov
or
out
das
lcall
mov
mov
fcmovnb
inc
sub
aad
sbb
sbb
or
aas
sti
fidivl
jle
loope
mov
aaa
inc
ljmp
mov
lea
in
or
mov
dec
out
cmp
inc
or
stc
cmp
in
sar
pusha
inc
pop
and
lods
push
mov
out
jge
xor
and
adc
and
cs
in
fbld
in
idiv
bound
lret
mov
movsb
push
lret
mov
xchg
jo
xchg
in
fsubs
popa
mov
adc
jne
sbb
xchg
out
jns
je
xor
daa
cmpsb
enter
leave
mov
mov
fdivrl
and
pusha
scas
xchg
cmpsl
pop
or
xor
ljmp
xor
sub
push
push
shlb
jnp
std
scas
dec
jp
push
or
pushf
or
jno
mov
cmp
push
mov
cld
lcall
cmp
mov
jmp
adc
jmp
je
outsb
xchg
sub
out
mov
pop
jnp
mov
bound
in
push
pop
mov
scas
inc
pop
clc
aaa
xchg
or
inc
fimull
mov
inc
sub
in
aas
cmp
pop
rorb
sub
sub
adc
push
or
cltd
xor
imul
mov
outsb
jg
lods
and
orb
mov
movsb
push
enter
mov
pop
mov
rcr
jno
and
shll
std
sahf
mov
add
imul
inc
out
jecxz
call
sti
arpl
mov
clc
inc
in
dec
sub
dec
pop
or
inc
adc
mov
jmp
dec
sub
enter
jb
negl
xor
insl
push
outsl
adc
mov
xor
cmp
stc
aam
or
mov
cmp
stos
cmpsl
push
or
push
pop
lahf
inc
push
pop
or
cmp
push
fnstcw
dec
pusha
sahf
push
lods
adc
push
xchg
addb
inc
push
or
out
mov
mov
mov
insl
push
bnd
lcall
aad
pop
and
mov
push
mov
addr16
sbb
push
enter
mov
sbb
jecxz
adc
sti
or
push
sub
lods
lds
inc
xchg
add
setp
mov
mov
adc
pop
insb
xchg
iret
sar
iret
pushf
insl
scas
shrb
arpl
or
cmp
fcomps
in
int
jecxz,pt
les
and
aaa
mov
and
lods
fwait
out
jg
ret
add
mov
or
jecxz
pop
out
mov
divb
rolb
lds
ficoml
mov
jmp
mov
dec
out
mov
pop
fidivl
xor
out
sar
ffree
popa
xorl
inc
aam
jmp
inc
sub
inc
in
push
in
leave
push
mov
aad
shrb
inc
jmp
ret
and
push
adc
xlat
rcrl
clc
inc
idivb
mov
in
leave
ss
xor
mov
cmp
jno
adc
or
inc
imul
sbb
add
xchg
test
sbb
dec
cli
push
push
jae
push
stos
inc
sbb
ja
imul
nop
divb
int
dec
outsl
mov
adc
jnp
popa
mov
inc
hlt
mov
or
inc
jp
sbb
jae
mov
cmp
sbb
mov
and
das
lret
mov
dec
mov
push
push
fisttps
mov
dec
sub
pop
sbb
lods
cmp
mov
dec
cmc
cmp
imul
cltd
inc
mov
dec
or
loope
inc
jbe
inc
dec
inc
cli
pop
xchg
adc
fcompl
lods
sti
shll
ja
icebp
mov
pop
xor
cmp
push
test
decb
mov
push
ljmp
mov
rcl
call
mov
rcrl
imul
popa
test
scas
push
mov
mov
xchg
xchg
sub
push
cmp
lcall
push
testb
mov
test
jno
aam
cli
sbb
leave
lahf
xchg
inc
xor
push
lods
jae
imul
sbb
pusha
xchg
cli
repnz
mov
mov
and
mov
jmp
pop
mov
xchg
pushl
sub
push
sahf
icebp
cmp
push
dec
aad
pop
push
xchg
cmpsl
sub
leave
sub
icebp
add
add
inc
hlt
call
popa
push
shrb
inc
ds
fbstp
js
mov
mov
inc
jmp
push
cmpsl
pop
call
call
nop
lret
xchg
or
jae
js
lds
cltd
cmc
and
out
cmp
xchg
push
push
popa
in
add
sub
xlat
roll
pop
testl
add
and
imul
add
imul
addr16
pop
mov
cs
repnz
addr16
cmc
mov
mov
test
lret
pop
loope
push
mov
outsb
and
jb
push
mov
repnz
inc
nop
mov
dec
xchg
cwtl
mov
pop
xchg
mov
pushf
dec
shl
and
xchg
insb
dec
adc
sbb
test
push
loop
cmpsl
lds
imul
rcrl
pop
mov
sub
popa
push
loope
or
lods
mov
or
sahf
js
rclb
scas
cmp
sub
xorl
adc
test
mov
or
cmp
xchg
inc
lcall
inc
dec
aad
lret
lcall
mov
clc
pop
and
and
pop
insb
cmp
xor
mov
imul
mov
insb
arpl
mov
cs
cmp
pusha
aam
mov
cmp
and
out
adc
mov
scas
insl
scas
rclb
ret
std
in
imul
sub
xchg
and
xor
daa
leave
faddp
mov
enter
add
scas
sub
pushf
dec
movsl
rcr
call
loop
pop
push
aam
loopne
cmp
xor
es
jns
pop
adc
sbb
inc
fstp
shl
shl
jecxz
mov
xorb
sub
sti
sbb
rcrb
inc
mov
mov
sbb
test
lods
sub
call
add
mov
or
shll
push
cmp
repz
push
mov
jp
mov
in
push
jmp
jbe
mov
sub
xchg
daa
pushf
push
add
cmpsl
movsl
sahf
jmp
or
push
add
fwait
mov
xor
lahf
pop
fsubrs
aaa
push
fidivs
push
add
lods
cli
rolb
adc
popa
mov
icebp
mov
add
outsb
inc
mov
mov
jno
ror
mov
test
frstor
mov
mov
mov
or
or
adc
or
andb
fistpl
pop
les
cld
lea
or
jmp
enter
cmp
adc
fs
push
notb
and
inc
adc
jmp
mov
je
jmp
fwait
test
pop
mov
xor
bound
adc
inc
mov
das
pop
das
adc
test
or
popf
testl
mov
xor
adc
lahf
adc
aad
hlt
jecxz
daa
mov
das
mov
or
jmp
out
outsb
mov
mov
dec
mov
lods
sbb
pop
dec
xorb
cmc
pop
cs
ficoml
sub
mov
mov
jmp
int3
iret
fwait
xor
and
out
repnz
push
pop
popa
push
sar
push
fcmovbe
ljmp
sbbl
xor
jb
out
cmp
or
mov
jnp
call
inc
mov
mov
in
incl
xor
ss
aam
or
sbb
scas
test
or
adc
xlat
mov
fcmovne
test
lods
xor
mov
shl
rcrb
out
lcall
les
pushf
or
xchg
pop
pushf
fstpl
push
jno
cmc
cmp
ret
gs
push
negb
sub
shll
xchg
movsl
push
xchg
mov
push
das
shlb
cmp
aas
inc
xchg
rolb
loopne
call
sub
dec
scas
pop
pop
push
or
push
sbb
out
dec
dec
nop
and
mov
fiadds
xchg
test
push
pop
ja
pushf
inc
jns
or
inc
and
sub
push
loope
xor
mov
mov
push
iret
cmpsl
or
cmpsl
push
or
nop
push
xor
jb
adc
xor
pop
mov
repnz
mov
stos
dec
les
cs
inc
cld
mov
push
pop
mov
ljmp
shl
push
adc
fs
sub
dec
cmp
or
lock
mov
lds
xor
mov
scas
je
aaa
pop
cmp
ret
cmpsl
or
adcl
dec
aas
or
jo
mov
push
mov
test
add
or
or
and
adc
pop
sbb
leave
sbb
pshufw
pop
inc
insb
ss
sbb
adc
rorb
cmp
mov
inc
into
adc
imul
sub
stc
mov
mov
push
cmp
js
loope
jno
aas
arpl
fwait
jmp
cli
dec
xchg
aam
xchg
in
je
or
sub
stc
aad
dec
in
fwait
xchg
ficoml
and
rcrl
icebp
add
lock
stos
mov
shll
orl
push
and
fdivrs
fistpl
inc
cwtl
mov
das
dec
adc
mov
add
test
out
sub
jnp
mov
aaa
dec
imul
mov
arpl
in
packssdw
xchg
mov
mov
int3
cmp
lahf
mov
push
pop
mov
rcr
jecxz
add
adc
in
clc
mov
mov
stos
adc
ds
ret
in
push
rorl
add
movsb
inc
fstpt
int3
lret
lock
dec
movsl
jo
mov
cmp
fstp
dec
sti
xchg
or
dec
loop
sub
and
movsl
test
push
cltd
insl
loop
xchg
add
adc
xchg
pushf
shrl
out
sbb
sbb
lods
outsb
push
sbb
jnp
xchg
xchg
pop
jmp
xor
cs
push
les
dec
cmp
pop
rcll
jmp
jo
adc
adc
lods
call
sarb
jecxz
ljmp
push
je
add
loope
mov
inc
ret
push
xor
mov
nop
sbb
movsl
fwait
sbb
inc
popf
mov
fwait
les
lret
jno
lret
pushl
loopne
aaa
mov
mov
xchg
sbb
fidivrl
mov
in
sahf
adc
insb
daa
mov
call
xor
iret
scas
cmpsl
mov
and
addr16
ficoms
cmp
nop
cmpb
scas
xchg
sub
xchg
mov
mov
and
push
mov
dec
adc
xchg
mov
outsl
mov
pop
xlat
ret
inc
or
adc
jae
fcoml
inc
dec
mov
shll
mov
sbbl
frstor
shr
push
push
mov
daa
icebp
ret
out
jns
mov
dec
bound
or
lods
jg
xor
push
pop
enter
inc
arpl
insb
adc
imulb
add
test
in
movsl
mov
xchg
rorb
or
das
adc
or
sbb
inc
gs
dec
mov
iret
pop
add
out
int3
mov
inc
push
aas
mov
or
mov
ds
push
sub
sbb
mov
xchg
mov
out
leave
aad
ljmp
xor
test
or
or
sbb
jae
or
xor
pop
xor
aaa
rorl
fisttps
push
push
cmp
data16
rorl
dec
test
imul
bound
dec
mov
nop
pusha
enter
push
daa
mov
fwait
adc
std
cwtl
inc
mov
movsb
and
dec
mov
ja
lahf
xor
outsb
sbb
inc
int
adc
cmc
cmpsb
sub
clc
mov
cmp
imul
rolb
jle
lcall
aaa
icebp
jg
cmc
mov
aam
lock
mov
mov
jnp
imul
push
push
int
adc
in
sub
je
fldz
push
out
and
xor
lcall
xor
jmp
add
mov
outsl
stos
stc
inc
adc
mov
hlt
lods
adc
pushf
inc
mov
lret
sbb
dec
push
xlat
cmc
push
add
sbb
xor
dec
mov
push
and
imulb
push
mov
or
push
jge
pusha
jp
push
jb
sub
hlt
xchg
aaa
ficomps
nop
fisttpl
xor
pushf
pop
mul
add
mov
jns
pop
cmp
mov
mov
or
dec
jne
es
imul
rolb
push
jl
inc
scas
xor
jle
not
jecxz
xchg
pop
shlb
or
sar
push
sar
push
negl
dec
jle
sarl
repnz
xor
pop
xchg
scas
les
push
mov
call
cmp
dec
scas
push
sbb
sbb
and
mov
jp
jecxz
push
das
inc
fidivrs
mov
jle
add
push
push
jns
lcall
and
mov
push
pop
mov
sbb
pop
xchg
cmp
lea
mov
sbb
pop
push
lcall
hlt
leave
int
xchg
insb
jae
scas
aam
xchg
mov
ret
mov
xor
push
enter
sbb
ja
or
std
xchg
dec
call
mov
lret
pop
sub
or
lcall
fcomps
xchg
inc
xchg
dec
xor
and
sbb
dec
in
jmp
andb
popf
mov
out
pusha
adc
stos
std
in
lock
xchg
fmull
cmpsl
pop
lods
mov
test
sub
inc
mov
pop
mov
adcb
lcall
mov
popa
roll
inc
lcall
push
movsb
les
inc
mov
jge
and
ret
test
or
mov
and
and
mov
xchg
cli
sbb
xor
jnp
adc
outsb
xchg
bound
or
add
mov
sub
addr16
out
es
scas
pop
and
xchg
sbb
fisubrs
out
je
xor
shl
shlb
hlt
sbb
mov
sbb
repz
xchg
jbe
xchg
ds
ret
pop
sbb
addl
jnp
leave
mov
add
loop
sub
lea
sub
xlat
std
dec
fdivl
mov
fistpll
adc
cmp
outsl
movsb
sub
adc
adc
mov
sarb
mov
or
enter
push
repnz
ds
jle
push
repz
cmpsl
mov
mov
popa
fistps
subb
xchg
jno
cmpsl
or
cwtl
push
and
and
rclb
pop
ljmp
xchg
lahf
or
fcomp
mov
in
mov
lds
mov
add
bound
mov
negb
lock
pop
stc
and
cmp
movsb
pop
jp
dec
add
sub
cmp
test
pop
sbb
add
in
xor
add
add
mov
push
add
jb
jle
ljmp
repz
rorb
xchg
or
or
mov
mov
sarl
and
std
out
or
cltd
pop
xchg
dec
jb
std
jmp
leave
sbb
xchg
jo,pt
add
lea
jl
lods
push
or
in
jne
adc
xchg
push
inc
xchg
jp
arpl
mov
push
mov
pop
insb
cwtl
dec
loope
movsb
sbb
sbb
fstpt
mov
add
lods
sahf
fucom
xchg
fsubs
xchg
push
test
shlb
jl
xor
lcall
repz
lds
push
and
jns
xor
push
dec
cmp
scas
sti
mov
scas
iret
and
sbb
cli
mov
fstpl
test
xor
cltd
add
mov
mov
lock
enter
cld
int
iret
mov
dec
push
push
or
mov
lods
fldt
mov
mov
pop
push
sbb
dec
lods
fldt
lods
inc
lods
adc
push
sbb
test
movsb
push
mov
mov
repnz
inc
aaa
repz
shll
add
or
mov
stos
stos
inc
hlt
imul
and
outsb
sbb
cld
jo
loopne
enter
sbb
insl
aaa
sub
sub
sub
xor
push
mov
push
adc
in
xchg
jb
xor
hlt
or
adc
js
nop
hlt
addr16
mov
rcll
mov
repz
lret
push
inc
pop
adc
inc
mov
fnstsw
ss
ja
mov
call
xchg
push
lret
sub
jns
daa
out
xchg
fmuls
jge
insl
mov
push
in
das
rorb
and
cltd
into
movsb
xchg
icebp
cmc
and
pushf
pop
fwait
or
aas
push
push
mov
sbb
cmp
inc
adc
push
mov
jg
jecxz
adc
xor
and
lea
or
xchg
adc
lds
bound
enter
bound
incb
cld
cmpsb
xchg
add
jg
ljmp
movsl
or
mov
test
inc
aaa
pop
or
adc
lods
js
outsl
and
in
mov
rcr
jo
dec
fwait
movsl
xchg
ds
outsb
push
mov
mov
int
aaa
std
mov
push
xchg
or
stos
xor
add
andl
je
push
test
jge
mov
xchg
sbb
imul
pusha
cmp
xor
jb
in
out
gs
or
adc
lods
pop
pop
out
pop
popf
data16
dec
mov
sbb
and
adc
inc
dec
fdiv
movsb
icebp
adc
mov
iret
movsl
xchg
pushf
cwtl
hlt
pusha
loopne
sbb
ret
stc
and
xchg
pop
stos
sbb
ret
mov
xor
lods
and
in
mov
and
sahf
add
adc
stos
out
out
sbb
or
subb
jno
sbb
daa
mov
in
inc
dec
mov
jl
cvtpi2ps
dec
test
ljmp
push
jge
test
nop
inc
lds
orb
stos
pop
negb
scas
enter
in
aas
ss
mov
data16
mov
subl
add
sbb
xorb
mov
mov
rclb
in
fwait
mov
cli
xor
and
xlat
push
nop
stos
mov
fisttps
or
jge
cmc
pinsrw
adc
aad
push
mov
test
int3
push
xlat
popa
in
pop
nop
aaa
cmp
aam
lds
inc
movsl
dec
sbb
or
jbe
stos
jo
lret
popf
stos
mov
cmp
push
insb
dec
rorb
cmpl
ret
inc
mov
mov
xchg
adc
arpl
jl
or
mov
add
push
fimuls
repz
dec
ss
ljmp
adc
inc
rcl
pushl
je
dec
ret
mov
addl
mov
adc
jmp
jnp
inc
mov
sbbl
push
push
push
shrb
leave
mov
jecxz
xchg
lods
out
jnp
es
stc
adc
in
or
sbb
aad
aas
jmp
aas
mull
lock
int3
xchg
or
ret
ljmp
notb
xchg
and
xchg
add
subb
out
mov
loopne
test
pop
test
xchg
or
ret
pop
stos
notl
jecxz
rorl
cmp
fwait
mov
in
and
xchg
std
or
add
repz
jl
lock
lods
arpl
sub
ljmp
jge
cltd
mov
shlb
movsb
add
mov
dec
or
aaa
add
js
arpl
cmpl
add
push
push
xchg
insb
xchg
mov
and
push
inc
jg
xchg
js
iret
bound
xor
xor
aam
jns
loope
xchg
mov
mov
dec
shrl
ds
and
xor
mov
sub
cmp
sub
jp
and
aaa
jp
mov
lea
hlt
push
popf
inc
or
lods
jmp
sub
jge
loop
int
mov
xchg
add
dec
repnz
fwait
push
mov
dec
mov
das
and
popf
movsb
mov
xchg
out
movsb
adc
cmovbe
mov
add
or
lea
adc
std
sahf
out
stc
loopne
xor
aad
jg
addb
xlat
int3
push
sti
xchg
jo
mov
xchg
push
adc
nop
clc
loop
in
out
mov
inc
mov
popa
xor
call
aas
insb
jns
nop
sbb
pop
test
out
mov
sub
dec
jne
shlb
cmp
cmp
add
in
out
adc
idivl
cmp
dec
or
outsl
stc
sbb
jp
lahf
pop
test
lock
ds
jmp
roll
cmp
fwait
inc
test
cld
imul
outsb
fcoml
fmuls
push
fwait
lds
lahf
mov
fisttpl
es
aad
roll
movsl
mov
push
cmp
lcall
mov
addr16
xchg
cmpsl
xlat
shr
inc
inc
mov
mov
stc
test
pop
fsubl
adc
pop
idivl
push
and
adc
les
push
daa
or
and
es
bound
out
add
jle
mov
iret
popa
xlat
js
clc
shlb
repnz
dec
mov
sti
and
clc
dec
fwait
repnz
leave
jno
cmc
outsl
dec
sbb
and
stos
out
mov
andps
stos
inc
ds
xor
pop
nop
or
stc
inc
cmp
jp
pop
stos
dec
add
dec
popf
mov
pop
or
mov
lcall
and
ret
sub
pop
jmp
loop
gs
add
mov
pop
cltd
mov
mov
lret
xor
in
add
push
jae
dec
jge
lahf
fidivs
lods
les
addr16
stos
and
add
dec
mov
jecxz
cwtl
push
sub
xchg
mov
cld
loope
das
mov
pushf
lret
aas
dec
xor
pop
inc
pop
addr16
mov
fildl
cmpsl
out
dec
lret
dec
sbb
mov
pop
and
xor
mov
imul
dec
add
das
adc
ljmp
iret
mov
cmp
sbb
out
js
fdivrl
fsubr
rcrl
into
leave
jno
ds
hlt
std
and
ss
fists
mov
loopne
aad
ja
hlt
insl
cmpsl
cmp
inc
and
mov
pushf
cwtl
or
movb
lret
adc
aaa
frstor
mov
sahf
es
jecxz
jmp
jge
jo
mov
xchg
les
das
mov
xor
pop
cwtl
das
add
add
bnd
xchg
cltd
rcrl
sub
dec
xor
push
cmpsl
mov
in
xchg
sub
mov
mov
push
sbb
mov
dec
in
push
aas
jae
call
xor
test
inc
push
or
xchg
or
xor
rcll
pop
in
test
repz
sub
test
pop
mov
fidivl
inc
repnz
sbb
pop
jl
fcomi
shlb
jecxz
aas
sub
lret
sbb
cmp
pop
ret
pushf
gs
leave
ljmp
push
int3
cmc
lods
push
xchg
shll
push
jmp
imul
mov
jmp
arpl
add
jecxz
or
adc
cwtl
loop
shll
or
ror
mov
stos
scas
xor
cmpsl
xchg
int3
xchg
lock
mov
jno
mov
xlat
out
dec
xlat
xchg
dec
fisttps
xor
jbe
arpl
repnz
adc
jmp
cs
jle
pop
add
ja
inc
data16
scas
dec
and
inc
insb
imul
imul
aad
out
call
cmp
ljmp
mov
mov
call
sbbl
or
movsb
pop
cmp
in
mov
mulb
movsb
inc
inc
sbb
jmp
xchg
pop
dec
adc
mov
pop
scas
mov
dec
xor
push
add
cwtl
push
adc
or
or
mov
and
roll
mov
cmpsb
mov
jp
aam
cs
in
popf
push
fsubrl
pop
lea
jno
test
hlt
inc
jge
ffree
adc
pop
mov
xor
sbb
test
mov
sub
jle
aas
fsin
jecxz
sub
incl
mov
xor
lret
out
js
mov
lods
pop
jno
lods
push
leave
cmc
ret
icebp
popf
sbb
mov
shr
add
cmp
jnp
xchg
or
xor
aaa
dec
cs
push
daa
cmp
in
xor
dec
xor
mov
mov
mov
jno
mov
push
fisttpll
mov
lock
out
ret
in
nop
in
mov
inc
into
int
out
sub
add
dec
sbb
or
add
loopne
push
dec
cld
je
repz
sub
mov
cmp
add
mov
sub
pusha
and
arpl
and
scas
pop
pop
dec
push
mov
xor
mulb
dec
adc
daa
stc
sbb
lock
sub
or
jl
adc
add
aas
push
test
cmpsb
andb
and
js
xor
fwait
jl
add
pop
test
jbe
push
mov
and
clc
addb
sub
test
scas
outsl
cmp
imul
xor
icebp
sarl
test
ss
and
test
out
push
lds
cmp
adc
in
cmp
ss
fcoms
icebp
testb
inc
pop
mov
and
in
jmp
mov
test
mov
test
je
hlt
ljmp
and
push
cmc
sahf
testl
push
lds
sub
sub
cmp
jnp
cmp
movhps
test
fistpll
outsl
mov
dec
xor
iret
je
into
push
icebp
or
cmp
arpl
adcl
lret
inc
push
addl
adc
aaa
je
cmp
inc
inc
ja
hlt
shrb
shll
mov
shlb
pop
ljmp
sbb
dec
jne
rorb
pop
loope
icebp
hlt
inc
fdiv
lahf
and
rclb
pop
pop
and
outsb
cmp
or
pusha
lods
mov
cwtl
jne
mov
pusha
test
and
mov
cmp
sub
test
in
mov
out
mov
mov
std
mov
ret
add
pop
jle
lgs
mov
cmp
loope
pop
cmp
or
popf
mov
push
mov
ret
mov
mov
jmp
push
jne
lret
arpl
stos
jle
addr16
shr
popf
mov
loope
or
jmp
or
adc
fildll
lods
mov
sti
or
divl
add
mov
sub
sbb
mov
daa
xlat
push
pushf
or
jb,pn
add
push
repz
xor
adc
mov
push
imul
mov
in
out
test
pop
inc
popf
mov
test
in
js
out
in
pop
das
mov
jle
lahf
aas
add
gs
mov
xor
je
push
ret
dec
adc
xor
mov
mov
and
or
sub
cmpsb
int3
in
jg
cmp
arpl
cmp
mov
addr16
mov
xor
ds
lret
lock
jg
sbb
push
shl
aam
outsb
xchg
leave
rol
into
dec
pop
repz
sbb
negl
push
mov
mov
fdivl
pop
test
or
setnp
xchg
test
cmp
mov
mov
fistpll
mov
pop
out
push
mov
jge
and
mov
cltd
xor
inc
push
and
ss
dec
in
int
or
mov
add
push
les
shrl
ss
stos
mov
cmp
xchg
push
inc
add
push
lods
push
sbb
cld
sub
jne
insb
xlat
jnp
lods
test
add
cmp
ja
sbb
fimuls
hlt
push
xlat
out
push
test
es
gs
mov
adc
push
pop
sbb
cmp
dec
adc
jp
cmp
mov
daa
sbb
icebp
cmp
jae
mov
jg
loope
pop
gs
mov
mov
mov
cmp
jp
jmp
jno
dec
xor
cmp
test
das
push
cmp
subb
outsl
add
in
jecxz
loope
fildll
and
and
fsubrs
inc
add
push
xchg
cltd
sub
mov
mov
mov
loop
outsb
shll
movsb
daa
inc
adc
adc
pop
pop
aaa
sub
fcmovu
jno,pt
shll
dec
repnz
push
and
cmp
sbb
mov
mov
arpl
push
mov
add
push
cmc
loopne
cmpsl
cmp
enter
push
movsl
xor
mov
xchg
add
popf
repnz
dec
pusha
imul
cmp
mov
test
pop
mov
sbb
ja
add
cmc
and
notl
pop
int3
testb
add
push
jnp
push
cmp
nop
fistpl
jle
es
call
mov
pop
out
cmpl
fistl
xor
hlt
dec
jp
js
adc
dec
jecxz
or
mov
dec
int
es
lahf
shll
lcall
mov
sub
sbb
scas
imul
hlt
test
clc
cld
scas
push
lcall
test
cltd
pop
inc
hlt
mov
lods
js
in
cli
in
xchg
repz
dec
imul
popf
js
cmpsl
and
inc
add
into
mov
out
leave
cmpsl
fisubrl
lods
cmp
out
push
lcall
fwait
int
int
je
xchg
das
push
lock
xor
mov
xor
mov
dec
mov
call
inc
pop
int
adc
mov
imull
ret
fnsave
fsubp
pop
das
pop
sbb
popf
mov
pushf
sub
fs
cs
xchg
ja
jnp
push
pop
or
repz
aaa
jmp
pop
sbb
mov
aas
push
or
xchg
xor
pop
dec
fisubrs
inc
push
inc
jo
mov
xchg
jmp
sub
dec
aam
movl
insl
ds
adc
ss
add
mov
scas
or
out
out
out
push
in
daa
jle
cld
adc
ljmp
fisubl
cli
mov
mov
lret
inc
lret
popf
xor
sbb
sub
ret
xor
int
hlt
or
ret
int
in
gs
iret
popf
or
fucomi
jmp
jge
sub
cmp
push
pop
ss
add
lea
inc
fimull
fwait
mov
lds
testb
mov
pop
xor
push
sub
xchg
int3
jns
pop
shlb
mov
xor
mov
mov
mov
cmp
aad
xchg
fs
lods
out
cmp
pop
pop
push
xchg
push
dec
mov
sub
std
jge
xchg
jb
subl
xorl
sbb
xor
mov
fnstcw
lret
mov
pop
or
out
mov
iret
mov
jns
push
fndisi(8087
jno
popa
leave
aad
enter
loopne
outsb
xor
dec
push
sbb
movsl
mov
inc
add
movb
ret
movsl
cli
push
out
mov
enter
dec
or
jae
andb
inc
jo
xor
push
test
sbb
adc
mov
popa
fistpl
arpl
mov
and
xchg
adc
mov
cmp
sbb
mov
fcmovnbe
jb
mov
mov
outsl
mov
inc
jge
push
fcomps
jae
ljmp
imull
mov
lea
cwtl
mov
mov
xchg
cltd
cli
and
rcrb
movsl
xchg
add
cmp
test
adc
shrb
mov
cmp
mov
fcmovnb
pop
test
leave
lahf
or
hlt
xchg
dec
loopne
lret
dec
insb
jne
imull
push
outsb
sbb
jp
cmp
inc
jecxz
add
fsubrl
cli
mov
lret
dec
in
lds
inc
dec
sbb
jnp
roll
test
enter
mov
aaa
in
clc
sbb
fs
and
std
mov
cmp
lahf
into
bound
test
push
out
out
cmp
xor
popa
adc
inc
sbb
and
xchg
xchg
xchg
das
mov
push
clc
xchg
pop
cmp
call
subl
cs
cmp
lcall
test
in
sub
mov
pop
fcoms
mov
test
adc
mov
shlb
int
xchg
daa
mov
test
lahf
stc
shr
repz
mov
mov
vpminsb
test
lods
and
sbb
pop
in
add
scas
fldl
popa
mov
into
sahf
cwtl
test
loopne
cmp
sahf
cmp
xchg
dec
fcmovnbe
scas
cmc
push
pop
outsl
mov
ss
or
loope
outsb
ret
mov
pop
or
push
mov
imul
sbbb
mov
dec
lock
pop
pop
pop
push
adc
sub
xchg
cmpsl
dec
xor
mov
adc
andb
cld
or
aad
ret
jmp
xor
movsl
push
fucom
fbstp
enter
icebp
sub
cmpsw
mov
je
das
cli
cmp
xor
pop
sub
lea
dec
addr16
cld
mov
aas
jae
inc
mov
pop
cmp
test
mov
imul
add
inc
add
and
inc
mov
repz
mov
pop
dec
ss
loopne
inc
out
andl
or
adc
ds
dec
dec
mov
push
mov
ret
sub
xchg
sub
addr16
es
fdivrl
subl
adc
adc
or
inc
cmp
pop
xor
and
mov
flds
int3
ss
lods
sahf
and
in
mov
lret
imul
pop
dec
push
and
or
imul
inc
sub
out
mov
out
mov
shlb
rolb
add
dec
in
pushl
push
jp
push
ficoml
sub
inc
inc
sbb
mov
mov
sub
adc
adc
xor
rorb
xor
outsb
push
xlat
in
daa
shl
popa
push
xor
mov
pop
sub
mov
std
add
imul
shl
loop
stc
sub
add
sti
enter
inc
shl
push
loopne
dec
cmp
cs
lret
xchg
mov
push
dec
push
sbb
jmp
sub
sub
pop
ja
and
xor
pop
xor
frstor
outsl
leave
pop
jbe
mov
push
fsts
mov
mov
neg
mov
lods
outsl
and
adc
jl
sbb
icebp
mov
cli
add
testl
push
in
loop
sub
xchg
shll
ficompl
and
clc
sbb
cmpsb
sahf
sub
xor
jne
mov
iret
ds
push
add
push
lcall
xor
test
cmp
xchg
mov
xchg
in
dec
cltd
sbb
lahf
cltd
shll
mov
xchg
pop
pop
mov
dec
mov
mov
mov
jecxz
or
insl
insb
jecxz
and
movsl
or
sbb
and
rcrb
std
pop
imul
cli
or
inc
push
xor
outsb
push
jg
dec
scas
sbb
pop
frstor
lds
call
adc
jo
shr
mov
dec
sar
hlt
xchg
add
push
dec
xchg
pusha
test
into
fwait
rcrl
pop
je
sub
jno
mov
jae
pop
cmovg
mov
or
push
sbb
jg
mov
clc
mov
out
cmp
clc
mov
stos
or
pop
fisubrs
ss
inc
test
cwtl
jbe
mov
addl
xor
xor
insl
popf
jno
lods
std
cmpsb
cmc
inc
stc
xchg
or
xor
xchg
sub
add
or
xchg
scas
cmp
rcll
rorl
into
mov
jns
adc
out
movsl
jns
pushf
jo
test
sbb
fists
fs
sbb
mov
jae
movsl
daa
arpl
loop
pop
and
inc
jns
pop
inc
andl
mov
fimuls
dec
dec
xor
mov
test
lret
icebp
fwait
in
jl
xchg
es
mov
clc
leave
lea
xlat
loop
pop
jl
xor
in
fprem1
out
adc
inc
loop
add
dec
enter
jb,pt
push
pop
stos
fdivl
mov
xor
jnp
mov
jae
mov
loopne
sahf
sub
rcrl
jmp
sbb
rclb
je
xchg
adc
sbb
sub
cmp
mov
pop
pop
les
pop
push
lcall
add
fistl
into
mov
sub
fisubrl
inc
addl
fdivs
enter
sub
jbe
pop
insl
ficoml
sbb
mov
mov
fisubs
lret
xor
push
aad
xor
shlb
jg
test
mov
adc
adc
or
mov
int3
in
jno
sbb
xchg
xchg
lea
dec
xchg
icebp
add
inc
popf
mov
xor
xor
pop
data16
sbb
test
push
es
jae
adc
nop
xchg
xchg
aaa
mov
bound
notl
into
sub
leave
ds
data16
loopne
jge
mov
outsb
movsl
dec
inc
stos
lcall
mov
cmp
sbb
int3
out
jle
sub
mov
cmpb
dec
lds
xchg
insl
sbb
aam
add
push
icebp
xor
cmp
lods
shl
loopne
jp
out
enter
daa
and
push
int3
mov
icebp
loop
pop
push
mov
int
mov
fcom
push
dec
pop
jne
pop
ljmp
add
inc
pop
pop
sub
in
sub
inc
xor
fmul
or
jge
adc
push
pushf
ret
mov
std
in
mov
rorb
fisubs
sub
dec
adcl
push
or
fiaddl
fistl
ret
std
lea
dec
outsl
pop
cld
and
or
loopne
jae
or
xchg
repnz
sub
es
inc
paddsb
insl
pop
adc
cmp
das
push
test
push
aaa
mov
mov
mov
or
fisubrs
into
std
sbb
clc
push
jnp
out
xor
aad
mov
push
push
outsl
faddl
push
mov
push
jb
xchg
push
xchg
jl
mov
push
pop
int3
sbb
mov
jnp
rcll
cmpsb
scas
cmp
loope
push
inc
out
hlt
xlat
xchg
mov
les
sbb
lock
jmp
mov
mov
loopne
mov
push
rcr
hlt
ficoms
add
out
imul
sbb
add
insb
mov
ds
cmp
mov
add
repz
lret
mov
ss
inc
mov
test
andb
xor
xchg
pop
add
xlat
xchg
mov
pop
cmp
and
pop
lcall
adc
daa
nop
xchg
sarb
mov
xor
mov
out
add
push
cmp
inc
lret
aam
outsb
call
push
jle
in
inc
mov
adc
insb
xor
decl
popf
cmp
sbb
jb
repz
adc
stos
mov
sub
insb
pop
fcoms
mov
push
scas
inc
mov
pop
aaa
dec
and
daa
xchg
jns
or
adc
pop
mov
or
stos
lcall
adc
incl
sarl
sub
push
fsubs
jno
test
lea
mov
push
sub
ljmp
jle
jge
mov
decb
jp
stos
add
xchg
ja
pushl
movsb
pop
daa
insb
pop
sbb
inc
je
push
rcrb
scas
leave
adc
pusha
jle
shll
in
push
ljmp
push
sub
mov
cld
and
jbe
push
ss
movsl
pop
inc
cs
mov
lcall
punpckhbw
addr16
inc
add
aad
xor
cmp
shl
mov
sarb
push
sub
mov
mov
xor
bound
push
loopne
push
test
jp
pop
jg
fisubs
fdivl
inc
mov
je
fsubs
jge
xchg
mov
je
ja
adc
xchg
push
dec
stos
lea
inc
or
dec
inc
fcoms
pop
push
mov
sbb
es
jl
ret
lahf
in
inc
add
stos
cmp
mov
movl
pop
jae
outsb
mov
jnp
hlt
dec
mov
dec
mov
idivl
aad
cmc
movsb
add
cmp
sti
cmp
cs
insl
and
sahf
mov
inc
popa
pop
inc
mov
pop
out
pop
imul
shll
or
stos
jnp
xor
sbb
shll
inc
out
mov
pop
push
pop
sbb
adc
out
mov
adc
push
sbb
mov
sub
mov
lcall
pop
cmp
test
ret
xchg
mov
lahf
jecxz
mov
outsb
inc
and
in
jne
or
inc
or
sti
addr16
in
test
mov
cmp
dec
fcomps
cmp
add
xchg
dec
inc
dec
add
mov
lret
mov
lret
mov
push
movzwl
clc
jbe
imul
mov
add
sbb
inc
hlt
lock
out
lods
inc
mov
fiaddl
movsb
addr16
push
and
hlt
push
inc
or
cmp
push
inc
les
out
loop
dec
push
cmp
xorl
imul
inc
arpl
pop
outsb
testb
sub
loope
outsl
test
jmp
fst
rcrb
inc
jae
mov
js
imul
repnz
dec
cmp
outsl
fidivrs
in
aaa
xchg
push
add
dec
sub
adc
sahf
sbb
lock
mov
sti
loopne
gs
push
stos
dec
into
lods
out
popa
rcrb
insb
ss
iret
cmp
or
fsts
sbb
dec
mov
xchg
xchg
xor
not
add
dec
ja
das
daa
cmc
push
movsb
adc
xchg
sahf
pop
mov
stc
adc
xchg
decb
out
int
jmp
inc
add
add
inc
in
mov
jno
fwait
ret
mov
inc
sub
pushf
out
js
dec
out
or
jle
call
lods
lret
cmp
das
rcll
dec
sub
in
inc
jmp
jle
xor
cmpsb
cwtl
jecxz
insb
pop
cmp
cmp
xchg
fsubrs
mov
dec
movsb
cmc
mov
sbb
xor
and
aam
mov
dec
fiadds
fcomp
in
fdivl
add
sub
in
or
xchg
jl
dec
call
insb
out
dec
xlat
add
scas
in
lods
fidivs
das
cld
add
sub
push
and
std
cmp
push
test
in
imul
and
cmpsb
insb
ds
popf
mov
cmc
mov
jae
popf
sub
into
fs
add
jecxz
xchg
jl
call
or
insb
inc
lock
je
inc
lret
inc
imul
inc
mov
mov
faddl
push
les
fcmovbe
mov
xchg
test
addb
cmp
aam
push
lret
or
lds
and
enter
sarl
push
adcb
sub
push
xchg
push
movsb
mov
fldcw
lea
in
fildll
xchg
push
fnstsw
mov
or
shlb
nop
movsl
sahf
add
xchg
pop
hlt
xchg
stc
in
push
push
and
insb
int
icebp
mov
xor
xchg
movsl
sbb
push
sub
in
outsb
inc
add
sub
cmp
test
mov
mov
pushf
pop
insb
adc
adc
xchg
sahf
addr16
inc
jl
and
sbb
xchg
fwait
ljmp
es
xchg
push
inc
not
jbe
sahf
or
movsl
push
and
sub
dec
rclb
push
or
push
shll
mov
pop
jbe
addb
mov
in
mov
lods
jp
fcoms
je
scas
fwait
je
dec
imul
push
cmp
jbe
add
add
les
iret
imulb
scas
lcall
imul
mov
in
pcmpeqw
jmp
das
nop
push
mov
out
call
or
or
push
xchg
test
jb
fcompl
imul
lods
scas
add
xchg
or
dec
add
sub
and
lods
cltd
mov
push
roll
stc
push
dec
sub
insl
adc
push
fiaddl
jns
push
dec
scas
dec
fwait
sbb
xchg
xchg
shll
mov
jae
cwtl
loop
mov
mov
inc
lcall
mov
push
testl
fisttpl
loopne
sbb
and
fistl
mov
push
add
sub
rcrl
call
pop
add
pop
int3
fs
fstps
dec
sub
mov
jo
and
add
add
shlb
mov
jns
sbb
sbb
gs
loope
xchg
push
mov
or
xchg
lahf
cmp
sub
sub
jae
mov
mov
jecxz
pushf
adc
sub
in
push
or
ret
mov
mov
mov
fisttps
inc
call
push
rorb
gs
and
xor
sbb
frstor
inc
int3
mov
es
ret
adc
mov
xor
sbb
xchg
cmp
mov
jne
test
mov
scas
or
push
sbb
add
ret
xchg
pop
test
fptan
cmp
mov
cltd
ret
inc
scas
push
inc
arpl
inc
std
pop
cmp
mov
imul
or
inc
adc
shll
into
stc
scas
test
lods
jg
ljmp
cli
cmp
mov
shll
and
jno
push
addr16
stos
int3
xchg
aas
stos
fcomp
addr16
outsl
lahf
in
fiaddl
aad
iret
jl
sbb
or
scas
sbb
xchg
aam
iret
mov
out
jp
cmp
sbb
out
dec
xor
xor
jge
imul
loope
xor
test
out
dec
insb
jo
hlt
adc
rcrb
ja
xchg
jno
das
pop
cmp
loope
xor
mov
or
js
dec
jnp
dec
dec
popa
sbb
push
jl
push
in
dec
stc
rcr
fdivr
pop
imul
call
adc
notb
or
sub
repz
cld
jg
pop
orb
jo
push
stos
sahf
jge
dec
jmp
cli
pop
dec
inc
dec
or
adc
xlat
jno
test
adc
adc
dec
fyl2x
fcompl
push
aaa
and
jmp
pop
rcl
mov
adc
jo
pop
aaa
loop
mov
gs
mov
pop
adcl
mov
pusha
sbb
cmp
mov
mov
aaa
pop
int3
dec
sub
movsl
xor
sbb
mov
xor
movsb
pop
fidivl
imul
cwtl
pop
add
mov
jmp
bound
mov
or
js
mov
sub
imul
ljmp
gs
js
into
nop
or
push
lea
pop
dec
adc
insb
push
ret
lcall
jecxz
aas
sbb
or
fistps
xor
ja
inc
js
mov
loopne
xor
jb
or
sbb
enter
add
out
add
add
mov
sbb
adc
ss
lds
loopne
std
mov
jno
pop
jb
fisttps
xor
outsb
inc
stos
jecxz
seto
pushf
xchg
lods
cmp
imul
in
ja
test
jg
int3
addl
jb
test
mov
inc
inc
int
pop
fwait
xlat
lcall
mov
out
cmp
fcmovnb
push
xchg
cmp
push
icebp
dec
arpl
lea
pop
bound
pop
adcb
mov
imul
dec
insl
pop
push
ds
xchg
testb
ja
lret
outsl
lret
xchg
int3
mov
leave
dec
ds
pop
jno
push
stc
inc
ss
aas
std
outsb
test
mov
fcompl
lret
dec
xor
jo
stos
cmc
push
int3
stos
pop
inc
mov
sbb
or
add
mov
add
sub
dec
push
outsl
fists
repnz
test
gs
repz
or
jge
xchg
outsl
popa
inc
aam
adc
xchg
pushf
inc
es
xchg
imul
add
push
add
lret
mov
add
jmp
sub
jge
xorl
outsb
incb
mov
mov
and
scas
lahf
xchg
mov
dec
bound
jbe
loope
dec
insb
add
adc
lahf
push
mov
jp
fildl
adc
add
sub
ret
mov
movsb
jg
and
mov
cmc
test
js
adc
jl
pop
sub
rorl
adc
sub
mov
jae
fnstcw
pop
cmp
push
mov
outsl
pop
mov
add
jb
mov
lahf
push
imul
testb
or
cmp
mov
sbb
mov
fs
add
movsb
xchg
cmp
pushf
sub
cmpsb
cmp
xorl
push
shl
shlb
iret
sub
cmp
out
out
push
dec
sbb
add
dec
xor
push
push
cli
mov
sbb
jge
jns
mov
dec
mov
pop
cltd
push
and
daa
sub
cmp
mov
or
ja
mov
sub
jbe
in
sub
cmp
mov
mov
add
inc
jp
in
push
scas
out
testl
xlat
pop
xchg
push
std
jo
or
icebp
popa
fcomp
jle
stc
imul
xor
mov
xchg
pushf
adc
ret
in
cmp
adc
scas
push
shll
pop
imul
out
mov
dec
mov
inc
cs
jle
jp
ret
jns
orl
cltd
addr16
jo
push
pop
js
push
fstpt
cmp
rclb
ljmp
xchg
daa
ret
gs
pushf
into
fsubrs
dec
ret
and
cs
sbb
shll
add
xchg
out
in
ds
test
inc
lock
dec
lcall
add
inc
xor
push
mov
pushf
or
and
pushl
pushf
into
jmp
ret
and
pop
push
push
pop
scas
push
sarb
inc
jl
outsb
pop
inc
xchg
popf
adc
mov
jp
dec
jmp
xchg
mov
and
add
out
sbb
mov
cmpl
sbbl
push
dec
gs
ret
faddl
dec
std
xchg
sbbl
mov
bndldx
das
imull
int
xchg
xchg
pushf
jae
pushf
lcall
es
adc
mov
das
cmp
inc
movsl
mov
cmp
push
inc
push
or
mov
pop
add
dec
repnz
addr16
je
int
rolb
cmp
imul
push
ret
popf
push
repz
loopw
shl
cmpsb
lock
adc
add
xchg
push
cmp
popf
outsb
xchg
add
and
in
ljmp
scas
cwtl
ja
xor
inc
stos
xor
xchg
sub
mov
je
pop
cmc
cwtl
cmp
cld
shrb
jae
les
pop
sbb
xor
out
ljmp
mov
jp
fwait
jge
imul
mov
daa
xor
and
pop
sbb
sub
xchg
sub
fwait
ja
sbb
je
sbb
test
nop
xor
sbb
xchg
scas
inc
mov
xor
stc
inc
jle
xchg
movsl
sbb
sub
xchg
movsb
mov
aad
dec
pop
push
mov
test
sarl
adc
fldl
sarb
ret
jne
sbb
or
xor
cmp
cmp
jae
cld
jg
dec
jle
jle
shrb
inc
std
mov
pop
and
cmc
push
pop
stc
pushf
xchg
xchg
xchg
cld
jno
inc
sbb
icebp
mov
and
sbb
lods
and
cs
hlt
cli
lea
leave
inc
mov
cs
mov
mov
push
dec
insb
test
cltd
and
mov
sbb
fwait
in
mov
pop
inc
push
xor
xlat
test
cmp
gs
dec
jb
xchg
mov
lock
push
mov
mov
jle
push
lea
adc
js
stos
cwtl
or
adc
repnz
mov
loope
push
sub
jl
xor
jb
lods
cwtl
xor
or
xor
call
inc
sar
jae
adc
and
arpl
popf
dec
ja
sbb
ror
dec
sub
add
into
sbb
inc
outsb
into
jns
dec
mov
xchg
daa
or
jecxz
push
xor
mov
std
fildl
push
popf
push
pop
fnstcw
out
xlat
std
lret
push
xor
nop
clc
add
jae
ja
lods
sub
sbb
and
push
pop
fwait
in
xor
xchg
hlt
push
mov
rcrl
mov
adc
push
adc
pushw
imul
xor
fs
cmp
mov
das
lds
add
repz
cs
aas
fnstcw
sbb
pop
push
lods
xchg
sub
sahf
arpl
repnz
jp
shll
fisttps
mov
cld
bound
mov
push
icebp
inc
sbb
lret
pop
mov
or
ret
dec
stos
gs
jp
daa
dec
leave
dec
jb
add
je
insl
mov
aad
fnsave
dec
mov
inc
ds
lock
pop
jb
popf
mov
sub
push
or
dec
lahf
repz
test
dec
and
test
bound
push
xor
jmp
mov
inc
xor
insb
divb
cmp
out
xor
jge
jl
inc
inc
in
int3
xchg
cmp
in
lea
jge
push
rorl
dec
mov
or
pop
ss
push
sub
cmp
outsl
stos
mulb
cmp
loopne
ss
push
cmc
rcll
mov
filds
adc
sbb
rol
inc
mov
pusha
clc
inc
loopne
shr
pop
push
mov
dec
xchg
pop
sbb
push
popl
ljmp
lods
bound
mov
push
ret
or
cmc
push
push
ljmp
addl
mov
lea
push
dec
jne
sti
mov
je
mov
rolb
mov
bound
aam
push
je
dec
mov
push
push
xchg
pusha
mov
mov
xchg
bswap
sbb
insb
jl
xor
ret
daa
xchg
pusha
lret
push
sub
sbb
insb
add
js
jmp
cmp
outsb
rorb
inc
outsb
addl
push
sub
ljmp
enter
jge
inc
outsb
in
xlat
push
sbb
aas
jp
inc
in
jmp
orl
fstpt
xor
push
insl
mov
imul
dec
cltd
bound
pop
xchg
cmpsb
aaa
enter
xor
sbb
jl
and
lods
fistl
lea
push
sbb
and
lcall
adc
test
cmp
lcall
adc
adcb
xchg
shrb
aaa
pop
mov
mov
or
jno
sub
dec
jnp
inc
stos
pop
arpl
or
lock
cmp
cli
shlb
stos
jb
les
or
adc
and
mov
add
jb
mov
jb
adc
pop
xor
fisubrs
push
insb
jno
mov
not
cmp
sbb
ret
faddp
dec
rolb
je
ficompl
shr
add
mov
dec
int3
enter
sub
test
mov
push
out
and
xchg
mov
dec
jno
cmp
fildll
jl
lock
cmpsl
dec
adc
aad
out
mov
aam
push
fidivl
jp
and
mov
sbb
sarb
push
fadds
lods
movsb
adc
out
mov
jbe
mov
push
test
sub
or
in
jno
mov
jmp
sub
sub
mov
inc
mov
xlat
mov
lods
leave
es
inc
xchg
push
in
add
jp
out
mov
mov
lods
and
aas
sar
fst
push
sbb
loope
lahf
mov
and
insl
pop
outsl
test
pusha
add
dec
xlat
ja
push
mov
icebp
mov
std
stos
insl
jl
jns
nop
hlt
cmpsl
adc
dec
or
sbb
or
int
movsb
sahf
mov
inc
mov
pusha
mov
jg
sub
mov
xchg
sti
sbb
fcoml
jg
aaa
jbe
sub
mov
dec
lea
je
lret
das
and
repz
ds
and
in
xor
outsb
mov
imul
shrb
lds
or
jle
movsb
ja
pop
sti
pushl
mov
addl
inc
je
dec
stos
adc
push
jne
and
loop
in
push
lss
roll
insb
imul
mov
test
es
mov
push
aad
fwait
test
xchg
loop
sub
pop
mov
das
or
pushf
std
divl
and
sbb
insl
push
rcll
xor
adc
or
or
test
ds
add
mov
lock
push
fnstcw
dec
push
rol
lret
cmc
and
nop
insb
mov
rcll
imul
sti
add
cltd
push
dec
and
pop
aas
xchg
hlt
bound
push
rclb
add
das
adc
lahf
dec
shl
imul
pop
pop
adc
push
loop
stos
and
fisubrl
in
in
insb
out
and
mov
mov
or
sbb
arpl
popf
dec
jge
sahf
fildll
adc
fistpll
dec
leave
jne
out
into
add
fdivrs
mov
xor
push
gs
xchg
test
push
mov
dec
xchg
mov
mov
icebp
scas
add
pop
or
or
inc
pop
stos
cmp
xchg
stos
sahf
jg
ret
mov
and
stos
scas
sub
add
mov
je
add
inc
mov
push
inc
xor
outsb
das
pop
mov
jae
aam
jle
mov
lods
mov
mov
dec
inc
dec
sbb
js
aam
popa
mov
and
int
mov
fmuls
das
decb
mov
mov
lea
movsl
inc
mov
aas
out
pop
jae
adc
cs
dec
neg
pop
cltd
jmp
test
lea
fistpl
mov
jecxz
adc
pop
pop
jecxz
or
pop
sbb
mov
mov
add
and
sub
out
mov
repz
insl
ficoms
insl
sub
jp
and
or
sub
xor
adc
mov
mov
jl
pop
fadds
mov
cwtl
push
pop
movhps
or
fsts
jnp
cmp
xchg
ror
pop
mov
neg
lcall
cmp
popa
ret
dec
out
clc
test
dec
lcall
pop
adc
fld1
std
lods
dec
push
test
cs
mov
shll
clc
cld
add
aam
mov
sahf
scas
mov
pop
xlat
inc
mov
inc
repz
sbb
jmp
dec
shlb
dec
push
push
fcoml
insl
mov
jmp
dec
test
push
pop
mov
sbb
cmp
or
cmp
popf
pop
lcall
sbb
adc
mov
push
xchg
sbb
and
mov
mov
into
scas
cwtl
mov
lcall
fs
shrb
out
cmpsb
adc
mov
lods
popf
xchg
mov
pusha
fwait
dec
pop
lea
xchg
test
ffree
in
push
test
sub
mov
and
mov
sub
in
push
movaps
push
out
shl
mov
into
mov
and
rorb
mov
add
fstpt
js
movsl
movb
push
fwait
addr16
sub
xchg
popa
das
addr16
insl
inc
stc
ret
out
pop
je
imul
xchg
push
test
jge
bound
icebp
jl
sarl
cmp
bound
sbb
add
popf
loop
jg
push
cmc
mov
xorb
push
outsl
fidivl
push
gs
and
sbb
mov
mov
pop
testl
add
imul
inc
cs
jns
jp
aaa
push
mov
insb
call
or
sub
fmuls
out
in
jecxz
xchg
test
adc
and
ljmp
push
ret
sahf
mov
mov
aad
mov
scas
repnz
xor
shrl
or
jl
inc
mov
add
pop
xchg
mov
mov
mov
push
dec
push
or
lcall
test
cmc
fstpt
icebp
add
adc
outsb
sti
add
dec
dec
loope
data16
inc
clc
nop
ja
add
sti
sbb
rcl
sarl
insl
fwait
mov
ss
shrb
jnp
pop
dec
dec
fnstsw
ret
inc
out
int
popl
clc
popf
ret
mov
add
jne
lret
jno
andb
sub
or
pop
aaa
xchg
xchg
gs
stos
push
mov
faddl
push
shrb
pop
or
out
mov
leave
pop
pop
dec
in
cmp
dec
test
mov
push
repz
xchg
cli
push
push
mov
sbb
lock
xchg
gs
clc
or
cmp
lret
fisubrl
movsl
push
xor
jmp
xchg
push
idivb
stos
add
adc
mov
inc
fcmovnu
fsubrp
mov
cmp
test
mov
dec
jle
mov
jmp
sub
cmc
sahf
and
int
lret
mov
shlb
inc
enter
xor
scas
in
shlb
mov
call
and
stos
pop
dec
in
jmp
dec
dec
nop
mov
sub
out
iret
dec
lret
pop
jns
sbb
sti
adc
test
inc
sbb
int
popf
aaa
pushf
mov
es
mov
rcrl
adc
sbb
test
jae
clc
pop
mov
inc
jnp
jmp
aaa
pop
ret
bndldx
push
xchg
pop
sub
addr16
dec
je
xlat
mov
pop
push
ret
cwtl
cmp
xlat
fstpt
push
jge
popf
clc
pop
fdivs
push
movsb
xor
jecxz
mov
je
lret
mov
cmp
popa
out
cwtl
loope
mov
push
pop
adc
cmp
fildl
and
sbb
cld
cli
mov
dec
push
cmpsb
add
hlt
mov
sbb
pop
cmpsb
add
xchg
in
mov
push
dec
jbe
jae
mov
push
mov
iret
cmp
or
nop
xchg
or
insb
push
sbb
addl
pusha
and
mov
push
ja
test
or
or
icebp
dec
out
cmp
xchg
repnz
outsl
mov
inc
jnp
ret
loope
je
jns
or
mov
push
dec
xor
sbbb
test
jb
cmp
xchg
idivb
sbb
push
stos
pop
loopne
and
into
adc
xor
and
popa
arpl
inc
xchg
shrb
push
adc
add
push
iret
jb
dec
pop
pop
dec
pop
imul
sbb
aas
dec
mov
les
xchg
push
push
push
push
mov
decl
shrl
jb
es
mov
insl
lcall
in
xlat
sarl
jle
lret
rorb
adc
sarb
adc
sbb
iretw
push
jae
imul
jle
cld
testl
imul
adc
into
fwait
sub
mov
rdmsr
or
xor
hlt
test
dec
dec
jae
test
lds
add
jns
pop
dec
mov
dec
add
lahf
dec
sub
dec
sub
pop
cmp
mov
std
call
xlat
push
ret
jnp
jne
fsubp
mov
jno
inc
push
push
xor
mov
dec
lcall
lds
jns
inc
addr16
jns
xchg
pop
js
ljmp
daa
ret
fwait
aad
test
jmp
loope
lret
pop
xchg
int3
and
mov
push
mov
incl
jmp
jle
adc
popf
cmc
mov
out
js
jnp
mov
cld
test
gs
adc
push
cli
cmp
jp
push
stos
rep
xlat
imul
inc
jle
dec
mov
aam
pop
sbbb
xor
lea
lods
mov
out
into
les
pop
xor
add
mov
sbb
je
mov
pop
es
mov
mov
cmp
out
fmulp
in
push
or
and
in
mov
push
mov
xchg
or
xchg
adc
sbb
mov
mov
xchg
std
xor
and
pop
cmp
jns
and
add
testb
repnz
inc
loop
cmp
pop
mov
jo
jle
pop
pop
mov
es
and
and
and
das
mov
jmp
sbb
sbb
inc
jl
inc
adc
push
dec
or
int3
jge
inc
jo
mov
or
rol
or
lret
jo
push
mov
mov
jg
mov
ror
mov
xchg
in
inc
daa
add
ds
cld
mov
pushf
fcmovu
lock
jbe
insl
adc
into
cli
sbb
test
inc
pop
or
cld
jnp
xchg
in
adc
jge
fbld
call
lret
movsl
push
or
inc
cmp
cld
push
leave
stc
xor
gs
fs
dec
mov
pushf
mov
dec
xchg
cmpsb
or
shrl
iret
fldcw
push
xor
rcrl
or
lea
lret
jnp
fnstenv
lahf
imul
int
fisttps
rcrb
cmp
enter
movsl
cli
push
mov
shll
or
cmp
in
repz
inc
stos
pop
js
scas
fstl
test
xchg
hlt
lds
sahf
mov
push
pop
andl
push
arpl
cli
movsl
push
subl
pop
mov
or
fmull
cmpsb
icebp
push
mov
aad
jge
popf
jnp
aam
inc
imul
xchg
jg
xor
jle
cs
and
dec
leave
sub
pop
outsl
sbb
pop
shl
pop
jge
pop
mov
fsubrs
lahf
push
out
add
out
notb
and
ss
xchg
insl
fsts
clc
shrb
outsb
pop
sub
xchg
cmp
dec
jge
notl
jns
inc
sub
push
jge
push
ljmp
mov
pop
xlat
push
addr16
sub
dec
js
add
cltd
cmp
xor
jmp
rol
ret
sub
loop
cmp
jp
loop
cwtl
and
aad
loope
jo
test
movsb
int3
inc
out
fldt
xchg
cmp
repz
mov
js
sbb
xchg
std
lret
push
jns
jbe
push
add
jbe
mov
fwait
add
in
sbb
into
mov
jl
shll
daa
dec
outsb
xchg
xchg
mov
jno
lahf
lahf
sbb
aas
jae
mov
pop
pusha
push
jle
lcall
out
scas
stos
lret
fldenv
or
jge
add
xor
jb
pushl
fwait
roll
outsl
out
jne
decb
pop
pop
pop
jl
sbb
fnstsw
xor
subl
cmpsb
xor
pop
sub
cld
mov
inc
hlt
fmul
and
and
in
popa
xorl
pop
mov
jp
dec
imul
inc
xor
pop
aas
xchg
addb
dec
dec
in
add
xor
xchg
mov
pop
push
jmp
out
ss
ret
or
je
shlb
cld
orl
mov
aad
adc
mov
sub
pop
jo
add
movsl
pop
out
jp
inc
aam
scas
insl
jecxz
cs
daa
dec
ret
mov
dec
mov
inc
into
pop
cs
insb
stos
aad
push
xor
adc
mov
or
fs
loopne
cmp
les
flds
stos
jo
jae
jecxz
insb
andb
ret
hlt
xchg
mov
push
jns
mov
adc
testl
add
and
pop
mov
arpl
xchg
inc
push
xor
cs
lret
inc
mov
test
push
add
jns
or
jo
pop
adc
push
mov
outsb
dec
or
aam
in
dec
test
mov
outsl
cmpsl
mov
negb
lret
lds
test
xor
xlat
sub
in
dec
shrl
mov
negl
jnp
cld
imul
call
sbb
mov
lods
pushf
ss
push
jne
add
loopne
movsb
cvtdq2ps
scas
jns
add
pushf
in
in
mov
jbe
ficoms
pop
int3
in
xchg
out
sbb
in
mov
xchg
jne
sub
in
lds
pop
pop
lcall
jge
push
test
out
and
mov
call
or
mov
or
or
jns
mov
add
sub
std
cmc
inc
xorl
cmc
imull
loopne
ljmp
daa
popa
sbb
lock
xor
in
lret
addr16
lods
jecxz
cwtl
in
xchg
mov
jno
mov
outsl
sub
pusha
xchg
je
pop
xlat
imul
push
cmp
mov
in
addr16
enter
xor
pop
mov
pop
jmp
xchg
in
test
push
pop
add
loope
movsb
mov
xchg
subps
sahf
test
pop
xlat
cli
and
or
aaa
push
cmp
cmpsl
sub
jp
jno
sbb
inc
xlat
inc
mov
jbe
inc
xchg
lahf
shlb
and
inc
cmp
fistl
jg
sarl
fldenv
inc
popa
add
mov
jno
mov
jge
mov
and
and
adc
sub
or
sbb
add
pop
test
xchg
js
push
jne
lcall
adc
clc
rclb
xchg
push
clc
adc
inc
jg
mov
cltd
push
and
movsl
aas
ret
popa
scas
sbb
and
xor
adc
lds
fimuls
jp
xchg
les
cltd
shrb
dec
fwait
cli
leave
cli
mov
std
jno
xchg
and
xchg
pop
sbb
pcmpeqw
push
or
jecxz
pop
mov
xchg
cld
rorb
dec
lds
imul
std
cmpl
aas
add
sbb
xchg
mov
xchg
cmp
inc
in
cmp
add
into
xchg
jle
ja
or
jmp
mov
jmp
lret
inc
loopne
jns
lock
cmpsb
addb
imull
lds
addb
dec
in
inc
mov
jbe
fldcw
jnp
jbe
fwait
aaa
sarl
mov
inc
gs
shl
xor
adc
fnstcw
pop
insb
andl
add
push
jno
and
sbb
jge
mov
xor
fsts
xchg
lahf
xchg
push
ds
or
out
lret
push
lock
gs
stos
adc
pop
jg
daa
adc
mov
mov
lahf
xor
movsb
inc
stc
jno
incb
insb
popa
cld
das
imul
mov
or
push
push
jp
adc
clc
inc
cmc
inc
mov
das
repz
xor
lds
cld
or
sbb
mov
stos
mov
rcl
ss
nop
xor
sbb
enter
aam
sbb
dec
jg
orl
dec
aaa
sbb
ljmp
pop
mov
mov
dec
stos
lods
add
jge
in
inc
scas
pop
in
dec
xlat
mov
sbb
mov
shrl
dec
lds
adc
pop
cmp
aaa
adc
lods
xchg
jb
and
pop
push
mov
mov
inc
and
xchg
das
add
out
or
in
call
and
test
sub
mov
inc
mov
sti
xchg
jle
jno
lds
fnstcw
hlt
mov
and
stc
and
dec
icebp
push
push
outsb
mov
fstl
inc
inc
push
test
xabort
fs
cs
test
mov
imul
pop
pop
fwait
mov
outsl
pop
xor
mov
xchg
outsl
add
pop
sub
xlat
lret
decb
adc
add
adc
out
icebp
ret
add
jns
cmp
sahf
cmpsl
mov
ljmp
ficompl
stos
aad
movsl
je
out
pop
int
cmpl
jp
dec
mov
test
dec
ljmp
xchg
out
push
pop
stos
mov
nop
rorb
push
jp
addr16
and
cmp
xchg
repnz
leave
lahf
shll
mov
ficomps
lcall
std
push
outsb
sbb
lret
outsl
pop
out
jp
rcrl
insl
insb
insb
test
movsl
cltd
sub
faddp
pop
hlt
lret
xlat
subb
fisubrl
push
mov
sub
pop
push
lcall
add
bound
or
push
insb
cmp
cs
out
dec
xor
mov
pop
in
push
cmp
mull
addr16
cmc
fwait
sub
movsl
mov
xor
jno
bound
insb
imul
sbb
stc
mov
imul
ds
pop
lret
rcr
cmpsl
mov
in
ret
adc
and
notl
call
mov
mov
jecxz
cmp
push
dec
fnstenv
sub
inc
sbb
mov
push
dec
pop
adc
pushf
dec
out
push
mov
xchg
mov
xchg
jge
xlat
les
sub
jae
mov
bound
and
bound
stc
movsl
scas
inc
xor
inc
add
pop
cmpsl
push
mov
shlb
push
movsb
xor
inc
mov
in
mov
mov
or
loop
in
mov
outsb
repz
dec
push
pop
lahf
sub
add
mov
fistpll
mov
xchg
or
pushf
das
jnp
xchg
ljmp
clc
cmc
test
lret
les
aaa
mov
lret
push
hlt
xor
mov
add
je
or
jg
add
ja,pt
lea
lea
push
mov
lods
xor
stc
jl
push
push
ljmp
in
jecxz
sbb
adc
mov
dec
jge
stos
lret
rorl
outsb
bts
jmp
movsl
adc
int3
mov
jmp
pop
jnp
cmp
xchg
fcmovnu
leave
or
xor
test
xchg
cmpsl
lds
push
or
jge
lahf
cmp
jge
out
mov
add
dec
cmp
sub
pop
sarl
push
outsb
jo
out
in
dec
test
iret
mov
shll
movsl
xchg
lods
mov
addl
sub
push
jp
into
dec
test
push
push
nop
lret
xchg
sub
fwait
nop
gs
lret
mov
push
cmp
in
mov
pop
in
xchg
push
cmp
sbbb
sbb
loope
sub
dec
xor
testb
jge
movsl
cmp
cmp
fsts
rcr
push
mov
orb
mov
repnz
popa
sbb
inc
xchg
popa
dec
movl
mov
js
adc
adc
fdivr
jnp
push
cmpsb
or
aad
xchg
adc
adc
rcl
xchg
xchg
pop
xchg
cmp
stc
cmp
daa
add
loopne
dec
sbb
movsl
in
sub
fisttps
push
sub
test
jp
pusha
add
adc
sahf
xlat
pusha
addr16
sub
xchg
insl
and
pop
add
or
cmpsb
stos
iret
data16
movl
loopnew
inc
push
bound
decb
mov
mov
or
rcrl
les
jne
cli
repz
in
pop
dec
jne
xchg
sbb
scas
push
or
into
fs
ror
push
movsb
xor
dec
fstpl
shrl
int
testl
repz
sub
cmp
xchg
fildl
stos
outsl
enter
insl
or
addb
sahf
push
pop
int
or
xchg
enter
popf
sbb
std
push
pop
push
stos
insb
add
push
sahf
jne
nop
jae
xchg
scas
ja
jl
push
mov
add
lods
dec
fwait
rcl
xchg
loopne,pt
dec
mov
sahf
or
inc
xor
ret
shll
fnstcw
xchg
inc
addl
in
adc
loop
into
loop
pushf
loopne
cltd
je
cld
pushf
fwait
in
pop
sbb
xchg
jae
ret
lret
in
pop
popf
mov
add
xchg
inc
daa
sub
stos
vpslld
notb
xor
push
sbb
mov
imul
adc
mov
sbb
leave
jae
sbb
clc
cmp
je
daa
sbb
scas
push
mov
sub
pop
mov
dec
hlt
push
mov
jg
inc
aad
lods
jle
loop
lds
leave
pusha
lods
inc
pop
fistpl
jns
js
iret
xchg
js
inc
xorl
notb
inc
mov
clc
les
jg
pop
adc
sbb
sbb
push
je
ret
jmp
jns
mov
push
adc
dec
mov
inc
mov
xor
xchg
add
jmp
popa
xchg
pop
sub
lfs
push
or
inc
mov
test
dec
aad
cmpsl
lahf
movsl
xor
add
mov
das
sbb
xor
adc
or
movsl
lahf
push
cmpsb
jge
into
xchg
push
cmp
mov
jo
jae
cmpsl
mov
in
jle
mov
adc
mov
adc
pushf
outsl
in
mov
js
mov
cmpsb
imul
lock
dec
xchg
cld
xor
sub
jge
lea
sub
test
add
push
dec
and
push
push
iret
repz
jl
cmp
and
and
repz
adc
jmp
mov
mov
and
pop
pop
out
outsl
mov
hlt
cmp
aam
mov
cmp
mov
iret
or
test
push
ja
aas
mov
lcall
pusha
pusha
dec
je
pop
pop
dec
mov
cltd
xor
js
xlat
ret
ja
cmp
and
fwait
int3
ds
jecxz
dec
add
push
and
add
pop
mov
out
repz
hlt
sbb
repz
sarl
popa
pop
push
cmp
xchg
add
push
jle
cmc
stos
adc
daa
jp
xchg
lods
cmp
sti
outsl
xchg
movswl
and
add
jmp
fs
int3
loopne
and
cmp
or
mov
mov
mov
sub
pusha
dec
or
push
xchg
call
push
sbb
test
repz
jne
sbb
outsl
push
leave
pushf
pop
movsb
jge
mov
out
notl
push
or
mov
jb
push
xchg
jo
dec
fidivrs
lods
mov
cmp
or
aaa
loopne
jns
gs
xchg
or
add
shll
out
and
aam
sbb
mov
mov
dec
insb
ret
add
lods
dec
jo
pop
aaa
xchg
mov
sahf
out
iret
mov
sahf
or
mov
adc
outsb
adc
in
sub
popf
or
ljmp
sub
fs
test
bound
xor
mov
cmp
mov
cwtl
mov
pop
mov
pop
loop
dec
scas
add
or
pop
pop
loopne
sbb
mov
or
fwait
dec
pop
cld
cs
sub
pusha
jle
into
arpl
mov
movsl
lock
cmpsl
add
push
lcall
test
adc
push
sbb
shll
push
test
mov
xor
repz
fsubrs
dec
jae
or
mov
jae
ljmp
jns
pop
jp
pushf
movsl
movsl
pop
shll
and
test
pusha
mov
nop
and
adc
adc
push
lret
jge
jmp
and
mov
lea
push
inc
push
push
lret
mov
xor
dec
jne
test
jb
addr16
decb
adc
xchg
or
js
jb
pop
jge
nop
mov
and
inc
jo
pand
stos
adc
std
push
fisttpl
mov
pop
rcll
and
cmp
cmp
pop
xchg
or
or
and
int
stos
loopne
mov
faddl
imul
mov
pop
outsb
mov
and
test
outsl
ja
jnp
dec
adc
jne
jo
and
popa
ret
popa
push
mov
out
sub
outsb
in
xor
loop
scas
jno
rclb
xchg
jne
aas
int
add
add
mov
push
xchg
push
and
cmp
xor
inc
imul
ficomps
clc
inc
push
inc
dec
jmp
xchg
jle
pop
add
pushf
and
mov
sub
mov
mov
dec
imul
jle
call
lods
jb
mov
sahf
scas
dec
pop
outsb
repnz
outsb
push
sub
dec
xor
test
fldl
cmp
pop
jns
mov
xchg
in
push
rcrl
mov
xor
mov
std
sbb
repz
rcrl
mov
sbb
dec
mov
ds
inc
clc
imul
mov
inc
push
pop
lcall
push
fmull
adc
mov
adc
int
dec
cmpb
fs
dec
sub
push
inc
add
in
or
jae
jle
ret
lret
push
mov
dec
out
into
movsl
push
mov
adcb
sbb
mov
sbb
pop
inc
movsb
or
arpl
pop
sbb
test
cmp
sub
inc
in
jnp
jb
popf
idivb
xor
inc
mov
sbb
mov
mov
jmp
lss
out
adc
aam
adc
sbb
daa
xor
lcall
test
push
in
aam
jge
jb
push
jecxz
cld
sub
js,pn
daa
incl
cmpb
leave
xlat
aam
fsubl
in
adc
cmp
fwait
mov
ret
ret
loopne
iret
adc
jle
and
cli
mov
or
and
jnp
xor
divl
push
popf
xor
movsb
cmp
inc
movsl
es
out
dec
pop
bound
rorb
adc
xor
push
in
cwtl
xchg
jnp
and
mov
mov
pop
aad
rolb
add
fidivrs
mov
cmp
mov
addr16
std
sbb
hlt
sub
sbb
subb
mov
into
pop
in
fstps
sbb
inc
sbb
push
mov
aam
test
out
fildl
cmc
sub
inc
fimull
sarb
stos
sub
adc
in
adc
cmp
pop
xchg
add
jno
fiadds
mov
enter
fiadds
mov
mov
xor
add
xlat
aam
adcb
popa
inc
sbb
dec
add
aad
mov
dec
daa
jg
or
xchg
ficompl
xchg
sbb
sub
push
dec
pop
mov
push
daa
xor
out
xlat
ret
ja
mov
jnp
cmp
or
mov
and
cmp
pop
sti
add
xor
sbbl
inc
and
dec
test
loope
jns
lea
xor
jb
jg
out
push
jnp
cmp
cmpsl
nop
addb
ds
inc
and
lret
dec
mov
sbbl
addl
repnz
mov
or
mov
push
add
or
out
jnp
sub
into
push
xor
jno
mov
nop
pop
sub
inc
add
xor
inc
pop
outsl
jnp
enter
imul
cwtl
mov
movsb
add
fldl
sbb
jg
popa
out
fstpt
fisubs
insb
jmp
fidivrs
outsl
das
stos
in
das
repnz
pop
sub
jne
cli
dec
xchg
fiadds
movsl
rcl
test
gs
test
sub
fildl
pop
pop
xchg
jp
insb
pop
sub
sub
mov
test
and
mov
iret
add
mov
insb
aad
clc
pusha
imul
stos
gs
push
pop
push
and
jl
mov
mov
sub
pop
aad
push
repnz
xchg
cmpsl
dec
jmp
cli
pop
pusha
insb
or
out
sbb
jb
inc
push
pushf
sbb
es
pop
push
dec
aam
or
push
cld
lds
push
jbe
add
in
ja
xchg
sbb
fdivl
cmp
cmp
leave
outsl
add
popf
pop
push
ret
out
je
shl
inc
and
into
inc
xor
cltd
and
ds
pop
inc
jp
sar
shr
xchg
lret
dec
aas
pusha
inc
push
jecxz
cmc
and
sbb
stos
adc
insl
je
jle
mov
pop
repnz
inc
mov
sbb
subl
ret
xor
jmp
icebp
repnz
xchg
call
sbb
xchg
add
push
and
scas
fcmovnb
cltd
test
dec
push
jle
fdivrl
test
jnp
cmp
dec
and
lret
sub
aad
jg
call
es
stc
dec
dec
xchg
push
clc
push
inc
mov
frstpm(287
sub
or
fistps
dec
imul
fs
imul
addr16
lods
ret
das
loope
fadd
scas
imul
sub
mov
cmp
sbb
push
call
pop
cvtps2pi
lock
inc
or
fidivrs
mov
int3
stos
jle
xor
shlb
rcll
jbe
jl
xchg
in
mov
push
xchg
sbb
push
repz
and
push
mov
clc
adc
pop
mov
int
fidivs
shl
adc
dec
and
sub
sbb
sbb
enter
push
dec
inc
or
out
cmpsl
repz
mov
jmp
xor
leave
ret
push
push
mov
jb
je
mulb
dec
jno
dec
mov
jmp
or
push
stc
pop
jecxz
fiaddl
jno
xor
pop
aas
cld
mov
push
call
add
das
fnstsw
or
push
pushf
ret
mov
movsl
clc
frstor
add
push
lock
push
jne
dec
ja
ja
test
insl
sub
stc
rolb
push
loopne
xchg
inc
lret
dec
sub
mov
xchg
fists
sbb
gs
int
mov
scas
sub
sbb
mov
test
and
aam
mov
jecxz
mov
pop
sub
out
push
jp
es
aad
push
stos
aas
or
pop
popa
jo
jle
adc
imul
push
scas
push
or
push
scas
daa
sbb
jmp
mov
and
jge
ds
mov
lret
dec
push
push
adc
out
adc
ds
fsubrs
mov
cwtl
xchg
mov
or
rcll
nop
aad
ret
sub
les
pop
test
xchg
loop
ds
xchg
mov
push
mov
shrl
pop
dec
lret
pop
insl
dec
pop
test
daa
pop
aas
add
pop
cli
stos
push
aad
test
es
mov
pop
sbb
jnp
loopne
mov
dec
stos
loope
fisttpl
out
repnz
inc
ds
ljmp
or
imul
or
cmpsb
aas
dec
pop
or
push
xor
in
addr16
cli
or
xchg
adc
xor
add
das
mov
mov
mov
pop
jb
sbb
rcrl
and
nop
push
xchg
sub
lret
cmpsl
cmp
subl
popa
sbb
iret
movsb
xchg
leave
popf
enter
sti
decl
pop
dec
subb
test
dec
rolb
lea
sub
int
cmpsl
imul
jb
xchg
notb
adc
push
repnz
dec
scas
pop
cmp
cld
xchg
roll
arpl
outsl
jns
pop
mov
or
int3
imul
dec
mov
mov
sub
add
mov
mov
push
aas
rcrl
cmpsb
lods
xor
mov
out
jle
mov
movsb
inc
dec
mov
pushf
loopne
push
lods
fistps
enter
push
jb
jns
xchg
push
jg
lahf
cli
cwtl
xor
scas
insb
jl
mov
rcll
test
fisubrs
imul
clc
mov
movsb
aam
cmpsl
dec
daa
pop
pop
pop
mov
mov
and
movsb
int
mov
xor
lods
scas
das
xchg
xchg
scas
mov
adc
jp
adc
mov
pusha
xor
jae
adc
mov
rcll
stos
adc
sbb
lahf
out
test
xchg
inc
popa
push
mov
cli
and
fwait
pop
aas
fidivrs
ja
mov
fldt
or
push
pusha
pop
xchg
cli
mov
fildl
inc
ret
sahf
xlat
lahf
add
and
cmp
addr16
xlat
jne
sbb
and
pop
push
es
loop
mov
outsb
cwtl
rorl
dec
inc
mov
clc
xchg
loope
xor
or
sub
arpl
cmpsb
push
or
cmpsl
dec
inc
push
add
enter
mov
lds
int
scas
and
jb
jl
mov
mov
pop
dec
aam
ffreep
ror
and
xor
add
inc
in
cld
mov
adc
or
shlb
repz
not
cld
fdivrs
jae
lret
ljmp
jp
lock
mov
mov
push
cmpsb
lds
hlt
mov
rorl
cli
into
mov
jb
shlb
out
jbe
rolb
jle
mov
adc
fisubl
and
icebp
in
outsb
mov
dec
mov
lea
pop
sbb
mov
sbb
cltd
adc
pop
fst
mov
mov
les
lahf
std
fnstcw
xchg
sarb
ljmp
hlt
mov
add
not
jge
jb
xchg
mov
xor
dec
cmp
mov
idiv
mov
stos
aaa
leave
lea
bound
insb
out
push
cwtl
std
sub
mov
inc
cmp
repnz
push
pop
adc
shrb
sbb
push
fcomp
lods
enter
add
push
or
xor
mov
mov
mov
and
mov
xchg
sub
mov
scas
or
outsl
mov
push
loope
adc
inc
popf
bound
lret
cmp
aaa
push
mov
or
sub
test
ret
std
loop
mov
xchg
xchg
xchg
xchg
cltd
in
sub
push
stos
pop
cmp
cmc
xlat
pop
repz
sbb
movsb
pop
xor
jp
data16
xchg
xor
lcall
lea
data16
loope
xchg
mov
in
dec
mov
jl
jne
daa
cmc
ret
sahf
jb
jns
sub
inc
movsl
fcomps
loope
dec
xlat
lds
mov
subl
xchg
mov
es
pop
add
jne
sub
pop
and
stc
cmp
into
or
inc
pushf
push
adc
jae
cmp
into
pop
out
mov
enter
fnstcw
cmpsl
movsl
mov
fsubs
test
es
jmp
mov
clc
jg
rol
mov
repnz
mov
enter
js
std
loopne
in
adc
or
sbb
scas
add
mov
in
sbb
stos
imul
pop
inc
ret
ljmp
les
or
pop
movsb
jae
jne
sub
gs
scas
out
addr16
adc
int
loope
jb
notl
inc
pop
add
mov
adc
push
jg
sub
xchg
ret
mov
push
fucomip
mov
sub
mov
fwait
push
and
pop
call
cld
add
vmwrite
adc
jae
mov
aad
push
lods
xor
xchg
popf
std
es
fs
xor
lret
xchg
es
add
outsb
mov
xchg
pop
mov
or
lret
mov
in
dec
mov
insb
repz
test
dec
xchg
xchg
out
iret
and
xchg
jmp
syscall
inc
mov
mov
andb
jmp
pop
cmp
mov
mov
and
daa
popf
hlt
imul
sub
std
pop
adcb
and
loop
das
add
jmp
dec
fstl
xor
jmp
cmpsl
fsts
xchg
sub
lcall
mov
and
repnz
hlt
sbb
xlat
adc
jno
stos
insl
cmp
ja
add
mov
and
lds
jo
ja
daa
mov
arpl
push
js
push
imul
orl
adc
sti
sub
mov
sbb
mov
mov
and
inc
outsl
mov
imul
sub
shr
out
mov
cmp
xchg
nop
and
imul
jl
insb
js
inc
dec
add
jb
xchg
jmp
in
gs
dec
subb
popa
cmpsb
cld
hlt
cwtl
scas
fiaddl
jns
in
insl
mov
or
sbb
outsb
test
int
iret
push
adc
cmc
loopne
stc
mov
out
aas
xor
add
aam
pop
xchg
mov
mov
adc
fisttps
es
add
dec
stc
or
push
shr
loop
mull
outsb
scas
inc
ds
insb
popa
arpl
pushf
or
xchg
mov
addr16
ret
lcall
outsl
aam
xchg
xor
mov
jnp
or
and
push
decl
sbb
aaa
lret
call
add
jl
xchg
cmp
insb
mov
inc
insl
movsb
out
mov
or
sub
test
std
ret
js
leave
ret
xor
jmp
mov
or
test
dec
dec
jno
jae
sub
popa
sub
sbb
insb
push
in
gs
jbe
push
add
sub
imul
or
cmp
stc
sbb
imul
cli
sbb
fwait
test
xchg
js
and
mov
dec
int3
xor
inc
sbb
xchg
sub
jp
lret
pop
test
adc
lahf
push
xchg
add
jmp
mov
sysret
shlb
out
jp
popf
mov
xchg
fisubl
cmp
lea
out
rclb
jne
insl
jnp
pop
sar
les
mov
or
mov
pop
push
dec
and
leave
push
push
and
cmc
mov
fldcw
pop
and
in
imul
sbb
xchg
cltd
jnp
cmpsl
aaa
xor
lods
inc
hlt
pop
in
add
adc
stc
pusha
adc
scas
leave
in
sbb
jecxz
test
pop
xchg
sbb
jo
frstpm(287
push
ss
insl
rcll
inc
into
imul
pop
fdivl
out
push
cli
xchg
lock
and
orb
mov
pop
jmp
nop
cmp
push
stos
push
imul
test
fisubs
push
test
cwtl
inc
push
sub
lods
mov
pop
mov
dec
push
pop
jp
pop
rcrb
imul
in
cmpsb
fsubr
imul
push
inc
dec
xchg
add
push
dec
jnp
mov
bound
test
bound
xchg
pop
pop
pop
jnp
test
cmpsb
jne
cmc
jg
cli
lock
jle
xchg
aad
mov
dec
mov
lods
into
in
outsl
add
cmp
daa
pushf
push
inc
addl
push
out
xchg
out
in
nop
sahf
xchg
xor
cld
test
aaa
mov
adc
pop
je
pop
and
push
adc
bound
jmp
or
add
lds
das
iret
pop
cwtl
xorb
jle
add
aam
inc
outsl
cmpsb
out
aam
mov
and
enter
or
inc
cmp
sahf
mov
and
lds
fnstcw
or
mov
inc
pop
in
addr16
cld
cmc
fbld
inc
hlt
adc
lret
shrb
dec
aaa
inc
sub
rorb
mov
or
mov
ficoms
push
nop
or
scas
or
lret
gs
and
xor
lea
jmp
xor
pop
cltd
sub
cmc
stc
sar
ds
cmpsl
ficompl
loop
add
ret
cmp
lods
fwait
pop
cmp
fimull
ja
sti
push
sbb
je
daa
loop
jno
out
or
cld
dec
xchg
and
mov
mov
mov
mov
inc
push
push
and
add
jle
enter
stos
sub
push
lds
aaa
and
pop
or
pop
jno
push
idivl
or
outsl
or
je
xorl
rclb
mov
mov
xchg
jmp
cld
cld
aad
icebp
sahf
inc
push
or
cmp
movsl
cmc
inc
add
cmpsb
rcrl
in
addr16
fs
push
xor
rcl
mov
adc
and
aam
lods
and
mov
cmp
and
add
mov
jecxz
sarb
or
or
pusha
push
fdivs
or
dec
shr
and
mov
bound
ret
push
xor
cmpsb
aaa
xchg
iret
or
or
faddp
loope
cmp
sbb
aam
jmp
mov
jmp
test
jno
inc
xchg
enter
adc
test
es
subb
mov
mov
pop
adc
mov
adc
jno
hlt
lahf
xor
out
inc
dec
fs
jb
push
test
sti
jg
cli
jmp
inc
cmp
fistpll
jle
jo
popa
mov
aad
out
adc
enter
sub
push
and
add
aas
or
inc
aas
and
mov
push
mov
mov
xchg
sub
mov
or
std
adc
test
lret
push
pop
popf
rol
jae
shll
aad
mov
and
xor
pop
push
imul
adc
in
pushl
outsl
add
inc
lods
loope
or
adc
iret
pop
or
jbe
push
dec
arpl
xlat
mov
add
and
lahf
ja
sbb
lahf
pusha
cmc
popf
frstor
ret
pushf
sarl
mov
dec
pop
inc
dec
mov
std
dec
fnstenv
inc
das
lods
out
adc
sahf
iret
icebp
loope
push
jg
dec
ja
test
ja
inc
and
xchg
shrl
flds
ret
cld
mov
leave
pop
pop
mov
loop
xchg
stc
test
repz
fiadds
push
fadds
test
nop
bound
mov
xchg
push
or
xor
jb
aam
bound
fnsave
das
mov
push
and
adc
lea
push
rcll
ret
fdivs
and
pop
std
mov
mov
add
into
adc
dec
mov
ficoml
ficomps
pop
ljmp
mov
push
aas
push
jne
aas
dec
lret
out
fldl
rcrl
pushf
in
es
xchg
pop
mov
inc
aad
mov
sbb
jg
xor
es
push
fisubrl
movsl
in
xor
cmpsl
inc
sbb
cmp
mov
out
add
in
sbb
sbb
cmp
in
xchg
stos
nop
sahf
sbb
and
or
lods
or
inc
lods
imull
xor
movsl
call
mov
loope
dec
mov
lods
lea
aaa
rorl
out
push
fs
push
aas
ret
test
mov
jbe
rcrl
clc
mov
outsb
push
sbb
mov
mul
shl
jnp
add
inc
out
xchg
pop
or
clc
stos
aaa
push
cmpsb
fsubrs
mov
xor
je
shll
mov
sti
adc
stc
xchg
ds
data16
sahf
inc
ljmp
dec
stos
bound
outsb
xchg
subl
sub
std
pop
xchg
xorb
jnp
outsb
dec
jecxz
rcrb
cs
mov
lock
loope
jl
dec
sub
add
xchg
clc
mov
aaa
clc
xor
or
dec
xrelease
loop
mov
jge
clc
pop
lods
movsb
ret
mov
mov
and
lods
xor
je
cli
add
and
mov
pop
adc
mov
es
and
mov
pop
dec
mov
dec
loop
imul
lock
sbb
movsb
mov
imul
jo
mov
daa
jl
fidivl
outsb
movsl
mov
out
push
adc
and
cmp
mov
les
leave
jge
lods
push
cmpsl
xor
leave
adc
xchg
cwtl
lcall
xchg
aas
shl
cltd
cmpsb
sarb
xor
ret
adc
jne
dec
sbb
xchg
arpl
test
adc
dec
mov
add
push
add
test
inc
inc
into
dec
das
push
sbb
cs
pop
jle
pop
sub
jge
lock
add
push
sarb
daa
adc
gs
aam
hlt
aaa
push
ja
test
out
mov
xchg
sbb
cld
adc
pop
mov
ficompl
jo
and
sbb
inc
lcall
insb
dec
call
jo
push
lea
bound
jb
add
xor
out
dec
fs
aaa
fisttpll
mov
cmp
test
inc
xor
cwtl
sub
testl
mov
in
sbb
xchg
shlb
orl
jo
shll
popa
scas
mov
gs
or
fsubr
mov
mov
push
int3
mov
pop
lods
iret
jnp
add
push
inc
sti
clc
mov
ja
add
out
dec
outsb
jo
rorl
adc
sbb
jae
push
xor
enter
mov
pop
sbb
sub
xor
jns
add
jbe
test
mov
lock
lret
and
enter
sbb
and
daa
mov
das
xor
fldenv
mov
test
or
sbb
mov
sub
sub
xchg
cmpsb
stc
inc
test
je
lock
ret
ja
aam
mov
stos
scas
dec
pop
push
pop
jge
mov
in
jae
push
in
xchg
in
cmpsb
ljmp
mov
addl
pop
fcompl
inc
insb
adc
pop
mov
pop
xchg
rclb
lea
jbe
jns
test
mov
scas
icebp
nop
data16
cmpsb
inc
cmp
imul
roll
mov
mov
mulb
jne
sbb
sbb
push
cmpsb
pop
rolb
inc
mov
or
popf
lock
and
mov
push
sbb
cltd
pop
das
sub
imul
divl
aad
loop
adc
mov
pop
pop
bound
mov
mov
pop
mulb
mov
and
sti
xchg
sub
push
and
fs
out
aam
mov
es
push
lock
rcrl
pop
loop
nop
mov
cli
pop
adc
mov
push
inc
shrl
adc
dec
outsl
jl
lods
andb
lret
aad
xchg
inc
jns
and
test
or
or
movb
gs
insb
mov
mov
daa
cmp
and
sbb
mov
adc
and
outsb
iret
in
inc
dec
inc
mov
add
loopne
or
jb
fnstenv
push
lock
sbb
push
das
cmp
xor
popf
mov
dec
jae
sub
bound
push
push
jecxz
jae
xor
add
dec
mov
movsl
adc
or
enter
int
or
stc
adc
cmpsl
enter
cmp
sub
mov
lock
sub
inc
cmp
push
stos
pop
adc
rcr
push
outsb
dec
push
outsl
push
and
cmp
pop
mov
sbb
lcall
mov
jne
xchg
scas
imul
es
jae
push
aam
push
gs
shll
lahf
lods
insb
into
push
mov
sti
and
adc
mov
loop
popf
dec
daa
sbb
js
es
loopne
xchg
xchg
sub
shlb
jo
sub
nop
or
sub
stc
dec
filds
sbb
push
cld
adc
mov
in
in
pop
mov
dec
lods
dec
jecxz
sbb
mov
and
mov
push
jno
flds
xchg
in
dec
xchg
in
sbb
negb
int
pop
scas
les
xor
scas
mov
cmp
sbb
ss
inc
adc
and
dec
fiaddl
push
sub
daa
sub
in
sub
andb
dec
out
adc
sub
in
arpl
icebp
nop
int
out
int3
aam
movsl
pop
xchg
sti
clc
test
mov
dec
xlat
pop
int
push
sub
rorb
leave
mov
jecxz
mov
dec
pop
arpl
xchg
fidivl
or
jmp
bound
add
ret
cmp
jle
xchg
popf
xor
mov
sub
lret
and
xlat
sub
les
jae
repnz
add
mov
test
stc
cwtl
rcl
sub
jbe
sub
out
adc
bound
push
lea
dec
xchg
pop
cmp
mull
aad
push
sbb
outsl
xor
sub
mov
mov
mov
shlb
aam
mov
cmpsl
mov
loopne
ret
dec
inc
mov
stos
mov
dec
push
data16
mov
push
fcomps
ja
adc
pop
bound
fists
cmp
jmp
add
mov
push
mov
sbb
out
jne
jbe
mov
add
in
fwait
mov
fiadds
imul
incb
repnz
cmp
xchg
js
jg
xchg
nop
jb
mov
iret
push
repnz
xchg
lcall
fs
mov
rcr
and
mov
int3
pop
pop
out
mov
jns
roll
icebp
xchg
push
cmp
int3
in
cmp
mov
xor
int
sbb
ljmp
mov
pop
cli
lds
mov
add
adc
fcomps
sahf
pop
pop
mov
faddl
dec
jmp
jmp
sti
js
cmpsb
xor
xchg
or
push
dec
mov
jg
and
repnz
shrl
jne
mov
cmp
cli
test
faddl
cld
ljmp
or
fwait
rcrl
dec
mov
testl
mov
jbe
push
mov
adc
sar
pusha
inc
add
xor
shr
mov
dec
in
push
jecxz
xchg
out
xchg
sbb
add
outsl
mov
adc
insl
and
push
pop
or
in
push
test
mov
or
xchg
sbbb
mov
rclb
push
lcall
mov
jb
pop
or
cmp
pop
cltd
es
sub
push
or
xchg
lea
jl
dec
mov
ljmp
fdivs
cmp
mov
push
mov
fucomip
jle
ficompl
cmpsb
adc
sbb
pop
push
push
jne
aaa
cmpsl
sarl
mov
and
test
dec
sbb
lret
jp
mov
popa
and
cmc
jae
pop
lock
mov
cmp
jp
adc
cs
addr16
js
adc
sub
fs
add
xor
sbb
xchg
rclb
sub
pop
and
imul
cmpsl
fldcw
aad
test
pushaw
in
jne
aam
push
xlat
shll
icebp
jge
mov
mov
xor
outsl
cltd
mov
cld
or
xchg
adc
addl
add
movsl
insb
shll
pusha
stos
pop
mov
cmpsl
scas
aad
mov
sub
mov
push
mov
imul
jecxz
mov
lret
inc
dec
dec
cmp
popa
cs
sub
test
fmull
jl
dec
cli
mov
int3
das
int3
add
cwtl
sub
dec
rorb
jl
out
add
outsl
dec
xchg
xor
pop
mov
and
in
jo
adc
sbb
cmpb
mov
es
mov
or
jle
js
daa
cwtl
pop
mov
xchg
xchg
fcompl
scas
aam
xchg
dec
loop
outsl
pusha
pop
cwtl
shlb
pop
xor
xor
in
cmp
movl
xor
neg
sbb
loope
and
mov
adc
dec
xchg
mov
push
inc
mov
cs
out
pop
pop
lcall
sub
pop
stos
xlat
or
int
pushf
icebp
xor
jns
cmp
imul
xchg
xchg
dec
mov
mov
in
xchg
gs
rcrb
in
fwait
adc
xchg
scas
jp
add
cmp
dec
hlt
jmp
jno
sar
pop
mov
fsubp
mov
dec
insl
and
outsl
or
je
push
sub
les
clc
pop
adc
jmp
pop
adc
xchg
cmp
fldcw
lods
mov
dec
fnstcw
add
mov
iret
iret
call
mov
outsb
std
mov
insb
lret
shl
xchg
fsubrl
pop
or
insb
jp
mul
add
out
fcoms
aas
push
cmp
mov
ja
mov
imul
adc
inc
and
mov
shl
in
pop
mov
pop
andb
mov
outsb
push
push
xchg
inc
mov
mov
outsl
test
scas
xor
hlt
sub
pop
cmp
and
rolb
ror
jae
and
sbbb
in
sub
mov
cmp
sbb
pop
fisubrl
push
push
popf
add
adc
mov
xchg
arpl
aam
insl
cmp
sbb
sbb
clc
sub
sbb
ret
cmp
sub
aam
inc
cmp
repnz
add
sub
pop
or
cmp
icebp
gs
cmpsl
mov
test
mov
aad
jae
lds
adc
or
shll
jo
insl
cltd
leave
call
push
int3
rcrl
dec
loope
ja
adc
add
cmp
dec
frstor
shll
jle
dec
movsl
loop
mov
xchg
pop
int
push
pop
cmp
pushf
jp
cmp
mov
orb
sbb
lods
dec
in
jmp
jge
mov
pop
and
bnd
xor
jnp
js
add
fldcw
sbb
pusha
lret
and
enter
xor
and
roll
adcl
inc
pusha
xchg
dec
cmp
add
add
pop
lcall
repz
sbb
cmpsl
sbb
ds
and
dec
dec
repz
sub
hlt
mov
dec
mov
ds
call
daa
inc
pop
inc
pusha
and
cmpsl
mov
ljmp
test
mov
imul
add
push
and
mov
cmp
xchg
imul
adc
aad
or
rolb
in
and
sub
mov
or
inc
aad
sbb
loope
jb
push
xchg
adc
push
mov
out
int3
mov
jp
and
xchg
out
je
pop
outsb
int3
dec
cli
sarb
mov
sub
dec
jp
in
cmp
sbb
fnstenv
jae
int
mov
dec
addl
test
fxch
out
mov
mov
or
pop
les
inc
push
and
and
mov
ss
daa
in
movsb
xchg
and
mov
xchg
jl
imul
hlt
cli
cmp
dec
sbb
int
xchg
loopne
sub
xor
jae
push
adc
inc
sub
cli
and
sub
cli
lcall
xor
out
out
jo
and
push
mov
xchg
int
push
ja
cmpsl
mov
rcrl
push
movsb
mov
add
mov
inc
inc
es
add
mov
mov
xchg
xor
lock
sbb
pop
adc
imul
cmp
sub
inc
inc
pop
ljmp
addr16
xor
shl
jbe
mov
mov
jmp
adc
shll
dec
add
lds
jge
sbb
pop
rclb
lret
add
push
push
fs
cs
xor
sti
ret
mov
out
fnstcw
jg
sbb
mov
ret
fisttpl
ficomps
mov
adc
popf
push
add
jnp
lret
sbb
dec
push
pop
inc
icebp
loopne
cltd
arpl
fwait
loop
xor
fisubl
adc
inc
fwait
pusha
into
dec
cmpsb
imul
jp
aaa
xchg
push
stos
jl
sub
pop
adc
or
and
add
arpl
jno
shl
xchg
stos
pop
jae
and
jbe
jne
clc
popf
mov
mov
rcrl
fs
fmull
cmpsl
stos
sub
jno
pop
insb
mov
jbe
pop
lds
dec
stos
pop
and
rorl
mov
sub
ret
lahf
idivb
pop
scas
fnstenvs
sbb
push
add
xor
push
test
mov
xor
scas
mov
hlt
js
jbe
xor
jl
loopne
adc
fstps
mov
dec
shlb
mov
fcmovnb
stos
inc
pop
in
xchg
int
clc
add
sub
pop
ss
leave
fisubl
inc
mov
fisttpl
jns
push
push
dec
insb
mov
lods
cmpsl
mov
mov
ret
into
call
lea
xchg
cmp
pop
xchg
mov
sbb
sub
push
mov
push
mov
outsl
lahf
xor
mov
push
addr16
sbb
cmp
std
ds
shrb
scas
imul
outsl
arpl
fs
add
iret
xlat
lcall
lret
out
lds
outsl
sub
cli
addb
add
inc
mov
cli
pop
stos
mov
and
movsb
fisubrl
jns
xor
lahf
ret
inc
pop
cmp
pop
sbbb
mov
inc
daa
push
dec
imul
sub
cld
lea
fstpt
test
pop
pushf
or
es
push
ficomps
inc
or
adc
or
add
mov
dec
fnstenv
inc
and
sarl
sub
fwait
dec
mov
mov
cmpsb
xchg
lret
xlat
push
test
sbb
pop
addr16
lods
mov
xor
loope
xor
mov
mov
or
pushf
mov
mov
adc
xchg
xchg
fadds
cmp
jle
scas
sub
lock
add
insl
outsl
sbb
leave
rorl
adc
jmp
pop
sub
and
outsb
xchg
mov
cmpsb
enter
sbb
pop
and
add
cmc
dec
ja
cltd
nop
call
sti
adc
pop
sub
outsl
fistl
into
les
add
xor
aaa
rcl
js
and
hlt
mov
pusha
ret
add
mov
mov
xchg
loope
fimuls
pop
push
inc
fcmovbe
sarl
cmp
aaa
inc
add
mov
jno
jae
call
fsubrl
push
inc
ljmp
out
xchg
lds
divb
inc
pop
popa
cmpsl
jns
int
fdecstp
loop
push
xchg
cltd
divb
adc
sbb
inc
sbb
sbb
push
sub
in
mov
scas
add
iret
xchg
dec
push
cmp
or
popl
push
ss
enter
fistpl
pop
pop
insl
xchg
dec
out
mov
adc
jae
sub
mov
and
repz
das
jns
inc
and
push
xchg
sahf
push
xchg
mov
xor
frstor
clc
call
aam
xchg
mov
loop
xchg
adc
cmp
inc
and
mov
lcall
adc
cld
adc
pop
xor
and
mov
jl
rorl
xchg
and
jnp
jl
sub
adc
xchg
jp
fsubrs
pop
or
mov
cmp
add
cld
xchg
jecxz
and
dec
fists
lret
or
sahf
xchg
stos
mov
sahf
popf
inc
xchg
inc
stos
sahf
sub
ss
lahf
pushf
je
pop
or
push
xchg
arpl
pop
outsb
xor
daa
push
sbb
insl
outsb
cmc
pop
xor
mov
insb
mov
gs
sahf
push
xlat
xchg
jp
mov
ds
xchg
pop
addb
xchg
shrb
sar
popf
mov
je
sub
dec
push
call
add
and
add
lea
mov
cmp
jbe
xchg
lock
call
notl
cmc
loope
mov
inc
sub
stos
jle
ret
sbb
mov
mov
fnstcw
xlat
lods
rcrb
aam
mov
aad
sub
insb
xor
jo
enter
mov
inc
dec
or
push
frstor
adc
cli
mov
shll
adc
lret
xor
shr
mov
popa
mov
pushf
sub
dec
not
loope
mov
fidivs
inc
cmp
xchg
sbb
sbb
cwtl
jecxz
push
stc
fistps
insl
movsb
out
mov
mov
repz
cmpsl
mov
cmpsb
mov
jno
pop
push
adc
xor
jg
mov
lret
mov
or
mov
mov
out
dec
repnz
dec
cmpsl
inc
pop
adc
jg
mov
fstl
pop
leave
fcomi
imul
jbe
push
rorl
stos
mov
imul
cmpsb
jns
aas
adc
add
inc
sub
jg
loopne
call
jmp
mov
roll
and
mov
imul
mov
idiv
out
repnz
mov
jne
and
pushf
repz
pop
int3
ja
outsl
mov
clc
cld
xor
and
xchg
mov
sub
cmp
ret
adc
mov
int
in
mov
inc
bound
insl
sbb
adc
lcall
lock
ret
xor
xchg
mov
and
adc
nop
repz
mov
push
add
and
iret
sahf
cli
cli
lret
xchg
xchg
vmulss
sbb
dec
jne
sar
movsb
xchg
mov
push
cwtl
fucomi
jmp
sub
ds
cmp
adc
cli
mov
mov
popa
clc
lret
adc
xchg
mov
addr16
aam
mov
cmp
xchg
mov
lret
cmp
cmp
les
lahf
sbbl
push
sbb
jge
jne
jle
adc
mov
imul
lcall
scas
mov
lods
adc
outsb
mov
pop
out
xchg
andb
fs
lods
xchg
subb
sbb
jmp
and
call
sub
popf
in
aaa
xor
xlat
sub
pop
sbb
pop
xlat
arpl
jle
cmp
fcomi
ljmp
lahf
mov
xchg
call
adc
iret
xchg
push
jmp
test
inc
sbb
dec
addr16
or
mov
test
lea
push
push
mov
out
hlt
inc
sub
cld
pop
pop
push
mov
cld
test
subl
cmp
aas
icebp
adc
mov
cmp
lock
scas
sti
pop
xlat
ret
sub
mov
sub
push
sbb
outsl
lock
or
dec
add
out
push
sub
aaa
test
add
xchg
push
jmp
jmp
int3
push
adc
insb
push
or
and
test
imul
sbb
shll
call
mov
inc
xchg
cli
rorb
lret
or
inc
adcb
negl
dec
pop
mov
lea
sbb
mov
shl
rorb
sbb
push
mov
aaa
xor
repz
pop
in
cmc
psubw
mov
test
loope
mov
adc
jmp
sarl
xor
mov
pop
sarl
xchg
dec
or
xor
stos
jae
pop
jmp
jns
fdivl
pop
dec
push
outsb
aam
xchg
lcall
push
xor
adc
push
jge
push
inc
xchg
aam
and
sahf
out
arpl
cs
jp
mov
mov
call
out
dec
invd
rcrb
adc
shrl
mov
in
xor
mov
dec
test
push
mov
in
sti
fcoms
xor
loopne
sbb
push
ds
fisttps
inc
or
mov
cli
pusha
cmp
sbb
sahf
repnz
sbb
pop
cmp
test
fimuls
std
ljmp
aas
imul
cmp
jmp
jge
leave
xchg
lcall
hlt
fsubrs
and
lea
lock
cld
cmp
mov
test
in
int3
addb
push
jne
mov
lock
std
lcall
movsl
cwtl
xchg
xor
pminsw
outsl
mov
ljmp
cmc
mov
fcoml
and
pushf
cmp
push
push
neg
andl
dec
sti
push
mov
repnz
cmp
pop
ss
sub
sub
imul
pop
sbb
ror
push
and
and
repnz
dec
mov
pop
ja
movsl
and
pusha
push
add
mov
into
hlt
sbb
or
push
add
dec
or
mov
ret
adc
ja
inc
adc
lods
xchg
jmp
jns
imull
xchg
adc
xchg
test
aaa
lods
int
test
mov
mov
ja
sub
push
insl
mov
jmp
clc
jg
mov
cmp
int
lcall
aaa
add
mov
pop
or
loope
test
clc
lea
jl
jbe
leave
int3
arpl
call
inc
sub
mov
pop
popa
or
pop
notb
xor
in
stos
lret
add
push
aaa
stos
mov
sahf
insl
sbb
cmp
lret
out
or
adc
mov
into
cmp
das
cmp
xchg
repnz
or
lcall
aam
cmp
repz
hlt
das
sub
sub
shlb
in
inc
jg
mov
repz
push
xchg
lcall
cmpsl
psrad
in
adc
test
das
add
nop
jb
cmp
cmpsb
hlt
and
push
jecxz
sbb
push
mov
and
repz
and
sub
pop
mov
roll
or
ljmp
loopne
int3
mov
sbb
pushf
je
push
mov
pop
fadds
mov
mov
outsl
sahf
and
xchg
loope
xor
cmp
das
daa
shrb
cmp
aad
mov
adc
popf
lcall
ficomps
sub
daa
adc
insb
and
imul
dec
mull
sub
cmpl
repz
popa
dec
fwait
xacquire
jne
and
clc
pop
dec
sub
xlat
movsb
cmpl
cwtl
outsb
lret
inc
mov
or
mov
jo
in
in
mov
xchg
out
sub
hlt
inc
es
push
and
out
push
adc
cld
stos
das
add
sub
adc
cmpsb
mov
and
fbld
push
and
jnp
xchg
orb
cmc
inc
or
cltd
add
les
fwait
xor
sbb
push
ficoml
shld
xchg
aas
orl
insl
add
test
push
enter
cmc
js
xchg
fimull
mov
das
in
push
inc
mov
add
mov
mov
pop
xor
xchg
stos
mov
stc
and
sbb
pop
ss
xor
pop
xchg
aas
stc
add
mov
xor
jl
jle
sbb
dec
pop
mov
push
mov
psubd
ss
push
fs
push
xchg
cmp
outsb
push
std
inc
sti
out
adc
in
cmpsb
mov
imul
sub
xchg
jnp
fisubrs
add
inc
test
dec
loop
mov
push
call
fadds
jno
xlat
push
mov
adc
sub
sub
sub
xor
icebp
lods
incb
xor
inc
sub
push
out
mov
push
stos
cmp
mov
lret
cld
les
test
outsb
mov
jnp
xchg
and
xchg
push
jb
neg
jne
movlps
movsl
mov
cmp
mov
inc
mov
js
cmp
ficoml
inc
jbe
mov
aas
sahf
mov
pop
ss
sub
ret
sbb
fnstcw
stc
mov
pop
sub
andl
pushf
xchg
lret
inc
xor
sti
push
mov
adc
fbld
std
call
mov
push
ljmp
out
xor
ljmp
and
fisubs
xchg
xchg
push
or
jmp
xchg
ss
sbb
push
mov
jb
cmpsb
mov
out
arpl
scas
lds
or
cld
and
jb
jno
sar
mov
lock
mov
jecxz
out
or
es
aaa
adc
pop
mov
pop
push
lcall
popa
test
and
fbstp
jnp
in
pop
sub
icebp
int
icebp
or
into
fwait
test
dec
ss
in
mov
add
sub
dec
leave
cwtl
jmp
sbb
lods
repnz
push
dec
ret
push
mov
and
xchg
fisubl
mov
lods
sti
rol
cmp
push
xchg
jns
inc
or
iret
inc
sbb
push
ficoms
add
pop
inc
mov
loopne
dec
sbb
jnp
mov
cltd
in
mov
arpl
out
xchg
pop
cmp
ljmp
pop
sahf
lcall
cld
iret
popf
repz
out
fisttps
addb
imul
sub
cmp
pusha
dec
dec
pushf
jo
jecxz
jecxz
mov
lret
lods
mov
jl
incl
pop
add
out
sub
sbbl
dec
sub
fldl
loopne
push
jae
mov
ljmp
dec
cmp
dec
xchg
dec
cltd
dec
inc
xor
xor
cmp
mov
pop
xchg
xor
and
sbb
xor
dec
cmp
mov
xlat
and
sub
sbb
pusha
and
imul
mov
inc
arpl
aas
lahf
ret
andl
mov
in
jno
jl
cmp
and
mov
hlt
stos
je
jnp
cmp
and
cmp
push
xchg
dec
fsubl
sbb
fsts
sbb
mov
cmp
inc
ret
xor
aas
push
test
cmpl
ljmp
mov
in
cs
dec
loop
jb
je
or
out
adc
jecxz
fldt
xor
push
mov
rolb
inc
xor
add
sub
data16
cli
cmp
cmp
adc
adc
call
jecxz
ds
sub
out
in
lea
mov
hlt
in
rolb
ljmp
in
int3
mov
push
and
push
add
ljmp
push
movsl
pop
pop
sar
push
sub
inc
lcall
jle
das
inc
test
xchg
and
notl
add
ret
sbbl
sar
sbb
mov
mov
add
inc
add
and
rcr
add
cwtl
lahf
into
in
aad
sarb
repnz
sub
mov
add
lods
lcall
or
cmp
xor
js
lret
mov
mov
pop
lock
push
fwait
hlt
mov
dec
ficoml
mov
mov
mov
cltd
sahf
pop
pop
jle
testb
lods
sbb
add
ljmp
inc
cmp
sub
loopne
outsl
mov
into
unpcklps
mov
pop
add
push
cmpsl
push
jb
add
fdivs
cmp
inc
insl
leave
jb
fwait
jmp
and
mov
lds
adc
mov
sbb
clc
sub
pop
push
add
cmc
adcl
xor
xchg
std
pop
jp
push
ljmp
mov
inc
imul
in
inc
pop
adc
data16
int3
mov
push
rorb
test
aam
push
imul
aaa
mov
sub
fcompl
ljmp
sub
and
push
mov
jecxz
mov
jp
push
cs
cmpsb
pop
stos
mov
push
adc
xor
fimull
pop
xor
and
jnp
adc
paddsb
ret
pusha
test
or
scas
jae
jbe
outsl
jp
cmp
out
jecxz
f2xm1
es
stos
sub
sub
and
nop
aad
mull
jmp
pushf
mov
mov
jmp
xchg
xchg
call
mov
cmp
push
popa
jnp
jge
or
cwtl
xor
out
or
mov
pop
adc
jp
jg
lods
aas
mov
ljmp
xchg
sahf
cwtl
inc
mov
push
jnp
pop
movsl
push
leave
cltd
cmp
test
shlb
jge
sub
mov
shrl
adc
aad
movb
cmp
jns
pop
mov
mov
sub
mov
std
adc
sub
dec
jne
shr
leave
mov
movsl
sub
push
addr16
iret
dec
push
lods
shrw
mov
adc
subl
pop
clc
outsb
ret
lods
mov
cmpsl
cmpsb
xchg
hlt
adc
fiaddl
and
sbb
mov
add
insl
or
jmp
add
ret
xor
inc
rorl
and
pop
xor
sti
jl
test
into
imul
out
jno
push
jb
stos
sub
daa
cmp
fisubrl
and
rcll
pop
and
fadds
fstpt
mov
push
daa
movsl
jecxz
outsl
and
clc
mov
cmp
xchg
cmp
mov
repz
sti
pusha
sbb
dec
mov
add
xchg
rorb
sahf
ret
cmp
mov
sub
ficoms
mov
je
sub
ljmp
imul
or
cltd
mov
shll
jle
push
jb
outsb
cmpsl
data16
popa
out
fadds
in
aam
cltd
pop
int
mov
sub
in
out
lcall
sbb
sub
mov
cli
cmp
notb
rcll
jmp
fwait
mov
arpl
rcrb
cltd
jns
gs
fpatan
lea
add
fs
mov
lock
and
lcall
cmp
lret
adc
cmp
sub
jnp
sbb
popa
ja
xchg
lret
rcr
cmc
mov
out
enter
pusha
stos
aam
inc
cmpsb
push
test
sbb
repnz
or
int
imul
lahf
push
or
shr
cmp
sbb
or
lods
or
test
sahf
mov
mov
and
jp
pop
dec
fldt
mov
adc
scas
aaa
shrl
bnd
add
in
repz
pusha
shlb
pop
repnz
int
dec
inc
fimull
test
or
iret
inc
stc
or
jnp
mov
int3
pusha
outsl
lea
aad
shll
jge
adc
cmp
movsl
mov
or
scas
pop
les
mov
ret
pop
scas
pop
lcall
push
mov
gs
jo
lcall
fistpl
cwtl
shl
mov
add
dec
xor
push
in
das
int3
imul
test
fbld
cs
out
xchg
mov
push
call
hlt
cmovo
pop
in
das
repnz
mov
sub
popa
rcrb
adcb
pop
xlat
idivl
jp
cmc
imul
lret
dec
mov
pop
adc
add
mov
dec
xchg
push
mov
dec
dec
jge
insb
and
fldenv
sbb
mov
pop
ljmp
mov
xlat
fbld
or
shlb
inc
xchg
push
lea
or
and
jmp
insb
jp
add
cwtl
pop
popa
adc
cmp
imulb
xor
hlt
cli
push
adc
movb
in
mov
pushf
jmp
shll
dec
pop
arpl
mov
jecxz
mov
xchg
push
jl
loope
xor
ret
arpl
dec
jp
stos
fnstenv
lahf
adc
std
inc
pop
ja
dec
sahf
and
movl
xlat
in
adc
mov
mov
jno
push
xchg
lea
fwait
sub
dec
jmp
pop
mov
jns
das
jmp
mov
sbb
jne
fcomip
pop
xchg
ljmp
jae
mov
adc
sbb
aam
push
cmp
ror
add
mov
loopne
push
adc
in
xor
xor
lds
pop
popa
stc
xor
pop
xchg
mov
add
pop
ror
cmp
in
xchg
add
stos
dec
loopne
fcom
pop
mov
adc
xchg
xchg
sub
pushf
jne
cwtl
hlt
inc
int3
addr16
inc
fdiv
in
scas
pusha
fidivrs
popf
jp
call
cltd
repz
mov
cld
loopne
mov
in
push
inc
inc
icebp
mov
stos
imul
sbb
rorl
leave
or
and
jbe
out
ljmp
bound
pop
bound
pop
dec
fcomps
pop
push
push
xchg
fcomp
test
jecxz
mov
stos
ss
mov
outsl
xchg
push
aas
enter
sahf
movsl
dec
mov
add
or
hlt
out
mov
rcrb
jae
daa
mov
std
jb
inc
fstpl
lahf
sbb
in
scas
enter
arpl
add
jecxz
psubsw
mov
cltd
jno
addr16
rclb
or
js
cwtl
repnz
pop
pop
mov
xchg
jecxz
mov
or
rcrl
bound
sub
bound
pop
mov
clc
sub
mov
xchg
cmp
sbb
clc
cwtl
jbe
out
outsb
inc
or
aas
sub
pop
fwait
push
imul
lret
sub
scas
jle
mov
shll
sbb
pop
mov
inc
push
xor
push
dec
add
xor
imul
sub
add
daa
hlt
ds
push
insb
sbb
in
test
jle
arpl
mov
inc
dec
movsl
ud2
das
pushf
ss
jl
out
test
sbb
or
cmp
sbb
sub
dec
push
dec
and
adc
in
std
or
popf
in
sbb
mov
mov
xlat
mov
insl
cmpsb
jo
inc
fwait
ret
out
fs
repnz
or
jns
jl
xchg
and
dec
test
lret
adc
push
outsb
shll
popa
xor
jle
ret
lret
ja
ljmp
outsl
sub
sub
into
insl
pop
aam
jl
cmpsb
sarl
outsb
cmc
mov
dec
add
cmp
cmpsl
lods
push
aas
push
xchg
adc
mov
and
adc
js
add
inc
aam
loop
enter
repz
out
sbb
push
ja
jecxz
mov
xor
cmp
dec
adc
adc
or
shl
lcall
adc
fstps
or
mov
and
jl
xchg
sub
iret
push
xor
sub
stos
jo
gs
add
fidivs
shrb
leave
xlat
push
or
cld
movsb
hlt
fsubrp
pop
jno
jl
data16
nop
sbb
xchg
inc
add
hlt
hlt
xchg
incb
xchg
or
fcoms
test
mov
test
pop
sub
add
add
sti
inc
cmc
xchg
rcrl
inc
ficoms
mov
jnp
lea
lods
inc
xor
inc
daa
and
loop
out
sbb
mov
xchg
and
leave
repnz
sbb
xchg
mov
mov
cmp
pop
xor
insl
rorb
outsl
fcmovnbe
ds
sub
enter
dec
and
cmc
xchg
mov
cwtl
pop
adc
pop
fnstenv
inc
inc
jno
inc
test
cmp
movsl
or
push
xchg
test
scas
aad
pop
ret
lds
jl
imul
insl
mov
stc
cmpl
loop
outsb
jno
or
in
sub
in
mov
inc
ret
test
in
push
lahf
sti
sub
shll
enter
pop
cltd
jmp
out
stc
aaa
in
out
pusha
dec
pop
inc
pop
shrb
mov
das
and
orb
cltd
cmp
into
out
call
insl
repz
loopne
push
pop
int3
lea
imul
mov
push
sbb
inc
add
loopne
dec
jne
loopne
outsb
test
testl
cmp
pop
sub
and
xor
leave
sbb
add
rorb
push
sub
cwtl
mov
and
fmull
jno
add
cwtl
out
cwtl
jecxz
push
push
icebp
xchg
clc
andb
aam
setae
push
push
mov
sub
and
sbb
pop
mov
leave
pusha
pop
jle
nop
scas
aaa
jo
dec
or
inc
push
mov
fstpt
sti
fbld
out
repnz
mov
adc
mov
xchg
leave
das
insb
ja
movsl
adc
dec
mov
cmp
sbbb
mov
inc
out
cmpsb
jbe
inc
xchg
in
push
shlb
inc
popa
add
xor
dec
xchg
push
fwait
outsl
imulb
push
mov
repnz
fmulp
push
mov
lea
fnsave
jp
add
mov
cwtl
mov
jbe
xchg
push
outsb
mov
xor
xchg
popa
sbb
dec
and
adc
daa
enter
fildl
pop
cmp
lret
loopne
mov
xchg
cmp
into
mov
lock
sub
mov
imul
movsb
push
lock
int3
or
jo
and
dec
pop
sbbl
mov
jo
lahf
or
cli
cmp
dec
and
mov
in
sub
fiaddl
ljmp
xlat
fs
stos
sbb
and
mull
push
mov
mov
dec
push
xchg
inc
or
inc
xor
bound
cmp
fcmovnb
sbb
daa
sbb
out
push
mov
inc
xor
lret
in
and
adc
imul
mov
xchg
out
cld
inc
je
fcoms
mulb
mov
mov
push
cmp
addr16
cmp
not
test
shl
cs
mov
nop
add
sbbb
das
hlt
fstpl
inc
and
dec
fildl
sub
clc
rcrb
pop
jmp
cmc
fildl
insl
popa
mov
movsb
cwtl
scas
or
movsl
cmp
test
adc
or
loop
data16
out
cld
pusha
and
mov
pop
xchg
bound
cwtl
rclb
dec
jbe
loopne
lcall
int3
scas
pop
mov
lcall
stc
in
add
xchg
cli
loopne
push
jns
mov
rorb
xchg
inc
out
imul
xor
repz
pop
add
insb
test
imul
aas
add
jg
imulb
fwait
enter
sub
std
and
sahf
aam
stc
mov
sub
push
or
mov
outsb
ret
lahf
and
xor
fdivl
cs
mov
cmp
cmc
adc
scas
xor
push
ds
dec
repnz
rorb
rcl
cltd
sub
push
mov
mov
out
and
repnz
loop
mov
cltd
push
jns
andb
push
sarl
cmp
cmp
cltd
fwait
sub
cmp
lods
cmpsl
std
and
jmp
out
cld
pop
sbb
sub
push
xor
lret
xchg
jmp
xchg
xchg
push
and
xor
out
sub
out
mov
xchg
add
jne
jbe
sub
and
jp
lods
xchg
xor
pop
ljmp
xchg
push
mov
sbb
jle
pop
push
inc
mov
mov
imul
mov
iret
adc
fadd
ret
ret
mov
and
inc
nop
cs
jg
inc
mov
or
jl
mov
aam
and
lods
or
mov
leave
stc
ret
xchg
xor
jmp
jne
shll
pop
fisubrl
stc
cmp
cli
popa
dec
leave
out
and
jmp
jno
mov
aam
int3
stos
nop
or
lods
xchg
mov
mov
lcall
pop
xchg
push
and
jne
add
add
xlat
data16
lret
xchg
inc
bswap
jns
cmp
out
pop
leave
lahf
mov
adc
push
pop
pop
in
mov
dec
inc
popf
fucomp
in
inc
jg
mov
fnstcw
js
int3
cmpsl
gs
xchg
loopne
lods
pop
leave
adc
jle
jae
dec
xchg
push
arpl
lea
add
sub
cmp
leave
mov
pop
rolb
ret
jmp
aam
leave
out
jl
pop
enter
push
add
inc
stos
addr16
push
jb
pop
jne
xor
xchg
and
mov
and
movsb
jge
jl
sub
pop
mov
push
sahf
clc
xor
or
cwtl
rcl
ljmp
mov
xchg
cmp
cmp
xor
or
lock
clc
insl
cmp
cs
imul
push
adc
outsl
xor
hlt
mov
ficomps
fs
cmp
in
add
les
push
outsl
cmc
xor
mov
inc
mov
movsb
dec
push
push
push
aad
pop
cmpsl
imul
cmp
sbb
loopne
mov
inc
push
cli
aam
test
sub
ja
mov
or
nop
add
push
sarb
aas
shll
je
jge
testl
ret
and
insb
sub
call
imul
mov
jnp
pop
xchg
movsl
stos
idiv
mov
cmp
cmp
dec
divl
inc
and
shl
outsb
fnstcw
or
rcll
pop
jge
cmpsb
pop
mov
sbb
shll
int
mov
pop
mov
cmc
push
xchg
jp
das
inc
enter
jo
jmp
insb
sub
dec
test
out
pop
jp
cmp
insb
mov
test
enter
add
add
push
mov
nop
xor
and
jp
pop
sbb
push
inc
test
stos
or
push
xor
fists
dec
xchg
add
xchg
adcl
mov
inc
sub
mov
imull
xchg
sub
jmp
sub
mov
stos
into
mov
or
inc
push
icebp
test
xchg
je
mov
xchg
fwait
sbb
jp
pop
mov
sahf
sbb
xor
lret
test
push
add
insl
out
xchg
sbb
pop
push
sbb
stos
pop
jecxz
xchg
iret
push
mov
or
pop
mov
pusha
sub
adc
push
orb
addr16
lock
subb
fwait
inc
adc
xor
push
shl
adc
outsl
cs
outsb
je
clc
adc
enter
sbb
push
and
out
push
mov
scas
addb
xlat
shlb
xchg
aam
fdiv
imul
rorl
xchg
and
push
push
push
into
dec
pop
mov
sbb
add
mov
xchg
xor
cmpsw
push
sub
lods
outsl
addr16
push
cmp
and
mov
inc
mov
mov
jmp
punpckhbw
cmp
stc
lods
test
leave
mov
fiadds
or
add
lahf
repnz
and
mov
or
int3
xchg
mov
xchg
dec
sarb
mov
mov
sub
mov
loop
add
jne
dec
mov
int
sahf
pop
cmp
sub
out
mov
cmp
pop
cltd
aam
add
push
imul
jo
gs
sub
dec
xchg
pop
mov
sbb
adc
inc
aas
jp
fisttps
aad
push
dec
pop
bound
repnz
sbb
loop
imul
xlat
dec
mov
pop
pop
sub
addr16
xor
xchg
outsb
mov
jb
dec
dec
jle
cmp
adc
pusha
dec
jcxz
scas
xor
nop
sbb
mov
loop
dec
add
mov
iret
push
leave
adc
push
stos
addr16
sub
mov
fiaddl
xor
inc
mov
xchg
mov
orb
dec
fwait
pop
xorb
xlat
sahf
inc
jp
cmp
outsl
jbe
cwtl
pop
push
mov
stos
inc
jno
bound
loopne
sbb
jmp
inc
imul
jb
les
fistpl
test
int
rclb
jne
push
fisubl
jg
sbb
inc
jo
pop
mov
xchg
pop
mov
xchg
popa
sbb
lods
jecxz
loopne
mov
dec
and
add
pop
test
sbb
mov
loope
mov
jns
jo
ror
mov
out
ljmp
inc
add
mov
sub
ja
cmp
push
mov
fldcw
mov
pusha
xchg
scas
jnp
pop
sub
stos
jg
decb
jbe
jg
add
movsb
gs
jne
dec
insl
pop
xchg
push
mov
stos
mov
mov
clc
test
roll
inc
rcrb
lahf
call
inc
lea
sub
push
and
dec
mov
icebp
insl
shlb
xor
jns
adc
jb
ljmp
pop
lds
jno
mov
and
lahf
das
dec
jmp
cltd
mov
sub
pushf
xor
lret
mov
sub
mov
jg
lock
cmp
mov
bnd
inc
lret
push
jle
int
pop
push
adc
inc
test
mov
mov
pop
cmp
test
ja
push
shrl
aad
sub
outsl
outsb
xchg
pushf
call
push
push
icebp
mov
xor
shlb
mov
cmp
sub
and
mov
stc
aas
cmp
xchg
jecxz
movsb
push
mov
insb
movsb
lods
je
mov
cmc
push
sbb
test
pop
lcall
adc
lods
inc
adc
cmc
das
lds
ja
test
lahf
loope
dec
hlt
test
push
xchg
or
scas
lret
aas
cmp
xchg
es
leave
popf
add
rcrb
test
lods
rcll
jle
push
cmp
xor
pusha
dec
stos
cmp
dec
lret
sub
sti
cmp
loop
cmpsb
scas
mov
xor
aam
and
pop
add
mov
mov
mov
mov
sbb
loopne
fwait
sub
fistps
in
lret
sbb
cmp
jb
es
push
ffreep
cmp
fcomps
fsub
adc
popa
dec
xchg
ljmp
ja
scas
arpl
mov
popf
stos
sbb
in
je
adc
iret
pop
xchg
sub
idivl
mov
cmp
shrl
mov
jo
dec
sbb
iret
pop
dec
mov
mov
pop
pop
add
jg
mov
sbb
popf
addl
push
adc
dec
std
mov
jb
cs
or
fsubrl
leave
jmp
popf
test
lahf
jno
dec
js
aad
sub
push
adc
dec
xor
std
push
test
push
dec
push
inc
ljmp
jle
mov
adc
inc
pushf
sub
lods
push
addr16
push
inc
fnstenv
jne
mov
movsl
dec
add
pop
popf
mov
sbbb
divb
dec
xor
and
aad
mov
test
mov
ljmp
dec
or
mov
lods
popf
hlt
add
ret
imul
jp
adc
aaa
fdivl
lock
xor
push
jne
inc
sbb
pop
pop
inc
add
inc
sbb
and
and
es
icebp
jg
jecxz
fsub
lahf
cmp
xchg
mov
pop
xchg
inc
shl
push
in
jmp
addr16
add
or
sbb
movsl
pushf
dec
test
fcmovnu
sahf
andl
add
decb
add
sub
int3
jnp
add
loop
adc
cmp
popa
mov
push
aas
idivb
movsb
sub
jnp
jo
adcl
xor
enter
jns
mov
mov
sahf
or
jns
push
mov
xchg
pop
clc
gs
xor
inc
and
mov
mov
jle
ljmp
and
mov
push
push
cltd
jb
pop
fucomp
dec
fstps
inc
mov
mov
mov
and
xor
push
rolb
out
lock
popa
pushf
ss
pop
int3
int3
clc
jbe
xchg
adc
pushf
ret
dec
lods
sarb
jns
xor
dec
arpl
aas
mov
mov
inc
pushf
xchg
cltd
jnp
ljmp
push
stos
jmp
int3
nop
push
adc
add
popf
jge
int
cwtl
add
xor
pop
stc
adc
out
xor
mov
addr16
mov
add
or
jp
pop
testb
mov
dec
movsl
push
and
out
lods
cltd
clc
mov
pop
push
push
add
iret
sub
xchg
outsl
stc
incl
inc
and
inc
loope
mov
cwtl
mov
int
outsl
jb
js
cmp
cli
push
push
lcall
dec
shlb
jle
push
std
push
test
jne
mov
sbb
sub
dec
out
pop
nop
sbb
pop
jno
push
sahf
xchg
repnz
fsubs
mov
cmp
push
mov
pop
into
addr16
jp
pop
movsl
or
outsb
pop
popa
in
inc
mov
loope
pop
xor
fisubrl
and
xor
bnd
outsb
fisttpl
xorl
sbb
add
jg
andl
nop
push
add
add
mov
out
cltd
addr16
clc
xlat
test
mov
xor
fcom
cmp
aad
sub
lret
out
fbld
data16
sbb
or
pop
in
ljmp
mov
jbe
jne
xchg
outsl
addr16
out
mov
ja
in
and
mov
cmc
jecxz
push
movsb
mov
icebp
adc
inc
lds
lock
dec
or
fisttps
jne
xorl
pusha
rolb
dec
or
lods
enter
enter
push
insb
sbb
movsb
add
mov
inc
sbb
mov
jnp
imul
nop
lret
xor
test
jmp
cs
dec
inc
hlt
ljmp
out
push
addr16
sub
ss
test
ds
xchg
xor
add
push
stc
ficoml
push
cmpsl
sbb
sub
pop
stos
mov
aaa
gs
add
pop
pop
jge
and
gs
popf
mov
imul
sub
xchg
xchg
fldenv
jns
and
inc
clc
clc
jp
adc
adc
xor
or
adc
mov
outsl
ret
inc
cld
pusha
jnp
enter
dec
aad
xor
fidivrs
and
jmp
jae
in
andl
mov
call
pop
or
add
mov
mov
and
ret
mov
ss
mov
mov
clc
fsub
cmp
cmc
dec
subb
dec
das
clc
mov
sbb
or
mov
adc
in
or
repnz
clc
adc
add
mov
loopne
inc
sub
addb
dec
mov
filds
xlat
push
aas
xchg
sub
add
mov
mov
and
xor
dec
lcall
lret
sub
dec
add
jmp
gs
sarb
out
jbe
adc
addr16
arpl
out
fstl
sbb
pop
or
cmp
addr16
push
aad
or
hlt
stos
pop
jb
cmpsb
mov
ja
pop
lock
pop
js
scas
stc
jp
sahf
jg
pop
xchg
mov
arpl
andl
inc
ds
cmp
es
scas
fldl
or
outsl
or
jg
pop
leave
add
pop
xor
cs
loope
clc
adc
iret
and
mov
mov
pushf
push
push
mov
mov
scas
pop
ljmp
mov
and
popf
into
jnp
mov
sbbb
dec
lock
cli
adc
sbb
sub
fs
inc
jmp
iret
inc
add
cmc
shll
int3
stos
fldenv
xchg
jnp
pop
dec
jbe
shrb
arpl
outsl
adc
adc
pop
sahf
lods
mov
sbb
mov
insl
pop
movsb
lock
mov
inc
sahf
push
cmp
ret
scas
push
outsb
incb
test
loopne
imul
and
add
popa
repz
dec
add
push
inc
inc
pop
mov
loopne
es
xchg
mov
dec
rcrl
sbb
and
dec
jmp
nop
sub
popa
fwait
inc
jl
fyl2x
adc
jle
incl
scas
add
inc
mov
mov
and
iret
in
sub
rclb
jnp
and
cmp
jae
push
mov
pop
mov
xor
push
fistpll
and
jg
call
into
in
mov
jb
subl
bswap
addr16
cmc
popa
ficompl
pop
in
pop
mov
pop
inc
sbb
cmp
or
and
aam
lret
sbb
repz
dec
mov
loop
fidivs
push
and
rclb
mov
cli
popa
add
jge
mov
push
jle
xchg
xor
mov
aam
mov
mov
jnp
std
jne
incl
adc
dec
add
mov
dec
jbe
or
jge
bound
mov
jae
mov
push
loop
jge
and
lods
mov
fs
ret
mov
fs
sbb
fs
push
mov
mov
or
int3
xchg
loope
push
stos
ja
std
push
xlat
xchg
push
movsb
std
pop
push
mov
mov
xor
push
jecxz
or
into
dec
lea
xchg
pusha
pop
test
out
les
scas
and
and
adc
sbb
imul
cs
arpl
je
aaa
movsl
dec
aam
leave
cmp
mov
pxor
xchg
xchg
repnz
mov
adc
push
test
push
mov
imul
jo,pn
in
cmpsl
inc
rorb
mov
repz
sti
mov
iret
xchg
in
mov
testl
pusha
xchg
imulb
popa
sbb
xchg
fsts
nop
dec
fidivs
push
outsb
cli
aas
cmpl
sbb
xlat
xor
imul
jmp
adc
sbb
dec
adc
icebp
ljmp
aam
xor
insb
call
test
xlat
leave
rorb
into
aaa
fmuls
jle
push
jno
sub
repnz
fldt
mov
in
inc
lods
mov
add
xchg
xor
repz
jno
arpl
dec
jge
xchg
shll
sarb
jae
mov
xor
cmp
mov
scas
lahf
popa
dec
and
cli
pop
add
inc
add
pop
test
xchg
xor
cmp
loop
clc
in
stc
fistl
les
jno
in
push
cmp
mov
dec
inc
adc
mov
mov
xor
cmp
rol
bound
add
mov
pop
cmp
enter
sub
lahf
adc
push
mov
arpl
or
test
daa
outsb
push
adc
ja
mov
xor
sti
dec
mov
sub
push
jns
flds
ret
addl
or
sti
sahf
xor
iret
sub
lods
rorb
dec
sti
push
xchg
sbb
push
lods
ss
push
cmp
mov
or
cmpsb
test
mov
jnp
xchg
sahf
cld
xchg
test
sub
or
leave
enter
outsb
xchg
mov
stc
cltd
fdivrl
sti
lds
pusha
and
sbb
aas
aam
loopne
out
jbe
pushf
cmp
call
mov
cmp
inc
sub
inc
hlt
xorb
nop
adc
frstor
or
loop
js
cmp
insl
fdivrp
lret
dec
test
jb
rcrl
fs
xor
jo
jp
std
and
mov
into
pop
push
aam
dec
cmp
fldt
movl
mov
jmp
mov
dec
pop
add
add
into
scas
imul
std
jae
dec
mov
pop
push
aam
out
cwtl
rcr
rorl
or
lahf
xchg
movsl
mov
mov
sbb
test
outsl
ret
xchg
rcrb
jp
inc
outsb
into
inc
jnp
lret
add
out
mov
ret
xor
and
jnp
xor
cmc
push
add
mov
push
sub
mov
ds
push
push
and
rcrb
js
bnd
pop
shll
dec
sub
dec
cmp
mov
jne
pop
pop
xchg
faddl
outsl
jmp
mov
fistl
test
adc
loopne
mov
inc
and
sbb
dec
jnp
sub
lret
jo
fidivs
inc
fbstp
sbb
inc
cmpsb
out
mov
bound
fidivrl
mov
pushf
insb
mov
je
jae
xor
aad
iret
or
mov
mov
sub
in
cmpsb
mov
sub
mov
repz
inc
test
mulb
into
pushf
in
xchg
js
subb
pop
cs
popf
fdivs
imul
mov
dec
es
dec
sti
dec
adc
dec
loop
addr16
xor
inc
ror
repz
fdivl
cmp
mov
add
cmpsb
mov
or
adc
int3
bound
pop
mov
sub
mov
testb
pop
int3
add
cmpsl
mov
repz
cld
fwait
ror
fildll
add
daa
lret
or
data16
add
mov
cmpb
and
push
lock
xor
sbb
sbb
mov
and
inc
xchg
mov
addr16
in
in
adc
scas
in
pop
clc
sub
insl
sub
mov
pop
shl
push
pop
stc
je
lret
stos
je
or
cmp
xchg
mov
push
adc
jge
ror
mov
adc
adcb
adc
mov
jne
ret
aad
movsl
mov
dec
out
push
or
adc
cmp
xchg
nop
cltd
push
jle
ss
call
and
mov
leave
imulb
dec
push
cmp
lods
mov
gs
mov
dec
pop
sbb
movsb
lea
pop
mov
cmp
aam
cmpsb
iret
shlb
xor
sub
dec
cli
jns
cmp
mov
daa
sbb
mov
cmp
xchg
repz
sbb
cwtl
loope
sbb
fstpl
jg
arpl
inc
xchg
jbe
sbb
push
add
adc
hlt
into
cmp
add
out
sbb
lods
cmc
mov
pop
jo
xchg
sbb
adc
adc
add
jp
sbb
mov
cmpsb
leave
popf
lods
sarb
fdivl
pop
push
and
call
xor
fsubrl
fcmovnbe
into
jecxz
rclb
rcrl
stos
aas
mov
repnz
loop
dec
popl
ficompl
cli
ljmp
mov
testb
mov
rclb
subl
test
lahf
or
or
mov
and
mov
fdivl
mov
push
fcmovnu
xchg
and
in
sub
dec
push
das
lock
pop
inc
and
mov
aam
shr
and
rcll
inc
mov
outsb
in
movb
jg
loop
push
push
pop
add
and
lea
std
pop
adc
dec
or
cmpsb
repnz
pop
xchg
fiadds
xchg
xchg
jnp
mov
pushf
xchg
test
jl
fsubrs
fidivl
cmp
into
cmpsb
pop
dec
or
pusha
xchg
js
and
mov
insb
and
adc
push
in
scas
push
shll
inc
lret
cmc
aaa
or
and
shlb
adc
in
gs
lret
shl
push
push
cmpsl
pop
pop
or
scas
sbb
pop
fistpll
sub
inc
jl
push
sbbl
mov
ror
test
xor
iret
push
inc
and
scas
ja
push
movsb
xchg
or
inc
test
xchg
mov
outsb
jnp
cmp
repz
mov
out
cmp
cli
ret
push
adc
dec
in
lret
bnd
fwait
mov
fiadds
sub
adc
or
cmp
imul
stos
scas
push
ljmp
or
mov
adc
in
into
test
fwait
pusha
aam
lock
aas
test
fisubrl
fwait
inc
add
xor
mov
mov
mov
push
insb
cmpsb
lock
sbbl
pusha
mov
mov
mov
sub
xchg
and
add
add
test
dec
mov
das
stc
inc
popf
or
int
xlat
rcr
lcall
lcall
xchg
sub
sbb
repnz
sbb
mov
lock
xor
sarl
shll
and
mov
int3
mov
pushw
jle
dec
jmp
popf
dec
test
pop
fdivrl
xchg
adc
aad
jge
lret
lcall
stc
pop
paddsw
add
mov
mov
insl
push
lret
je
sub
es
fwait
xor
dec
pushf
push
pop
test
mov
xor
inc
icebp
lock
cmc
incl
je
sahf
daa
xchg
push
lahf
pop
pop
icebp
cmpsl
pop
stos
cmp
fstpt
push
sub
sahf
pop
fsubrs
jge
rclb
xchg
mov
orl
cmpsl
push
and
aaa
pushf
rcr
adc
imul
add
sti
subb
mov
pushf
test
dec
or
jno
test
outsb
int
mov
fdivrs
les
mov
or
mov
sarl
xchg
stos
into
mov
mov
mov
or
fmull
dec
sub
ljmp
push
rcl
fisubl
mov
inc
mov
add
aas
insb
aam
push
xchg
xchg
jg
scas
sbb
pop
flds
sbb
call
jns
pop
rcll
mov
dec
pop
hlt
pop
movsl
xchg
mov
sub
out
dec
mov
dec
cld
mov
iret
sub
inc
jp
clc
jecxz
xor
or
es
add
aaa
test
dec
cs
int3
cmp
insl
jb
add
cwtl
mov
mov
cmp
cmp
push
mov
adc
fmull
lea
arpl
inc
xchg
shll
popf
mov
pusha
pop
sbb
or
fadd
roll
in
fistps
stos
xlat
lret
jl
dec
mov
add
cli
jne
cmp
inc
nop
sbb
stos
add
shrb
ret
mov
andb
add
sarl
loopne
or
addl
mov
pop
and
ret
jecxz
xchg
xchg
sub
aaa
push
push
mov
dec
push
sahf
dec
in
add
es
or
and
pop
ja
mov
jge
lods
ss
inc
fcmovb
movsb
shl
in
adc
fisttpll
aaa
stc
push
addr16
inc
xchg
fstl
in
mov
iret
dec
push
repnz
cmp
mov
sbb
xchg
fldcw
adc
mov
lahf
xor
xor
into
dec
mov
fsubrl
xchg
into
je
stc
mov
xor
lods
jge
fwait
jae
mov
mov
xchg
pusha
push
stc
inc
pushf
ja
std
pop
fldt
scas
ljmp
fldenv
out
add
leave
ss
push
pusha
fwait
dec
mov
dec
pop
test
aad
push
and
es
je
lods
add
and
in
add
js
mov
inc
das
imull
orl
inc
rorl
in
jae
roll
sub
or
outsl
add
int3
dec
fsubs
int
jl
enter
daa
lds
sub
sub
and
add
mov
adc
cmpsl
filds
inc
lahf
int
inc
int
dec
push
push
loop
shrb
jae
mov
or
lds
push
jns
out
push
movsl
gs
iret
dec
add
sbb
jmp
cmp
mov
mov
xchg
push
or
test
je
xchg
and
in
repz
push
add
or
mov
cmp
movsl
pop
gs
mov
cmp
mov
rcrb
sbb
test
stos
adc
cmpb
lods
push
cli
xchg
jg
mov
xchg
fldlg2
pop
push
ret
scas
sti
aaa
imul
ret
rcr
testb
or
dec
mov
rolb
inc
inc
dec
fiadds
lret
and
gs
push
jno
movsl
sarb
sbb
push
dec
xchg
aam
cmp
sbb
adc
mov
jnp
pop
nop
daa
out
xor
pop
dec
add
hlt
lret
sahf
push
in
dec
in
push
mov
popf
mov
cltd
cmp
test
dec
mov
dec
cmp
xor
sub
data16
in
inc
sbb
mov
repz
mov
adc
or
sub
in
movsb
cmp
adc
sub
pop
xchg
jbe
push
jecxz
decb
repnz
cmp
push
scas
sbb
pop
loope
mov
pop
cmpsb
sbb
ljmp
and
aad
push
sub
ficomps
jne
stos
jl
or
ret
xor
jg
jle
movsl
cmp
cmp
fildl
enter
mov
push
jle
lods
roll
sbb
in
push
push
jg
or
jnp
sbb
push
stc
stos
lea
enter
add
lock
stos
xor
data16
test
add
jne
xchg
stos
adc
mov
mov
hlt
push
int3
imul
arpl
cli
scas
xor
loop
inc
dec
sub
adc
mov
adc
xchg
inc
inc
das
xchg
fs
push
std
fildl
stc
add
dec
out
pop
xchg
fcompl
aas
daa
jnp
test
repnz
pop
or
fcmovne
into
fistpll
sub
je
sti
cld
into
mov
aad
xchg
lds
cmp
scas
cmp
mov
cmp
outsl
stos
or
or
pop
repz
out
mov
icebp
stos
std
mov
mov
mov
xorl
ljmp
cmpl
sub
jge
gs
dec
xchg
push
xor
rolb
fisubl
sbb
je
imul
add
imul
aam
cmp
addr16
bound
sti
cmp
loope
pop
sub
fyl2x
add
push
push
push
insb
cmp
inc
xchg
inc
fcmovne
addr16
cwtl
or
mov
mull
add
cltd
aad
xchg
pop
cmp
cmp
cmp
out
fnstcw
or
aad
add
mov
test
mov
cmpsb
and
xchg
ljmp
cld
mov
mov
cmpsb
hlt
ret
sbb
push
push
cmp
sub
iret
pop
add
adc
mov
adc
scas
pop
mov
scas
bswap
fcmovbe
js
shr
enter
in
add
ja
xchg
sbb
shl
inc
adc
mov
enter
lea
and
and
dec
hlt
jmp
xchg
nop
and
sub
add
into
adc
and
pop
mov
lds
jns
in
ds
frstor
hlt
inc
push
ss
lock
dec
cld
sub
fcmovu
call
gs
mov
xchg
jmp
std
or
cmp
mov
addr16
daa
stos
or
cmp
pop
aam
cld
dec
out
sbb
dec
lock
push
add
roll
daa
lret
sub
sub
inc
mov
cmp
insb
out
add
mov
adc
pop
pop
adcl
mov
or
inc
cwtl
int3
and
bound
sub
fstpt
mov
sub
scas
movups
push
inc
cmpsb
stc
mov
mov
pop
ficoml
ds
jle
pop
adc
ret
aaa
mov
push
adc
push
aad
iret
mov
dec
inc
or
or
lcall
push
xorl
push
dec
xchg
jns
pushf
mul
repz
clc
setno
imul
push
xchg
out
mov
es
test
les
pop
out
sub
inc
test
lea
pop
data16
push
adc
xor
stc
fldcw
mulb
test
dec
push
mov
pop
cltd
shrd
push
psubq
xchg
xchg
outsl
loope
ret
arpl
mulb
test
sub
cmp
repnz
pop
insl
sbbb
or
inc
fcmovu
aam
xlat
ljmp
xlat
ret
fdivrl
fdivs
mov
or
xchg
cld
or
int
pop
test
imul
sarb
shrb
lret
xor
xlat
inc
outsl
out
jmp
notl
cmpl
pop
fcoms
rcrl
jp
insl
call
sub
mov
or
xchg
or
or
xlat
mov
ficompl
push
mov
or
je
jne
pop
ljmp
mov
push
mov
pop
int3
fdivl
xor
aas
mov
xchg
rclb
inc
flds
xchg
dec
sbb
mov
pop
jl
jne
push
mov
pop
loope
xchg
mov
loop
cmp
xchg
sbb
and
dec
sub
scas
fildll
inc
cmp
cmpsb
popf
mov
sbb
in
test
push
enter
and
pushf
fcmovne
int3
adc
faddp
aaa
in
hlt
test
adc
fs
adc
adcl
pusha
or
pop
and
iret
push
ret
mov
mov
lds
jmp
sbbb
notl
sbb
push
stc
or
shrl
stos
fadd
jp
out
roll
in
cwtl
idiv
cmp
jae
add
cmp
jl
and
movsl
mov
jp
mov
xor
push
fldenv
sar
push
scas
mov
ljmp
mov
stos
mov
push
mov
mov
js
fdivrs
jmp
dec
push
jno
fsubrp
jne
and
mov
mov
dec
fildl
inc
mov
adc
pop
or
imul
pop
fwait
notb
jb
fxch
std
mov
adc
call
push
mov
sti
cmpsb
sahf
xchg
movsb
roll
std
sbb
pop
imul
mov
pop
repz
dec
clc
mov
push
jp
add
jb
mov
pop
test
jae
push
mov
test
jnp
inc
add
aam
js
cs
push
roll
notl
arpl
push
sbb
insl
jl
mov
sub
fwait
test
add
sbb
movsl
mov
mov
inc
mov
fs
mov
xchg
cmc
xor
jne
pushf
incl
adc
push
repz
lret
mov
sbb
les
sbb
jg
js
lcall
icebp
pop
pop
mov
adc
xchg
sbb
test
mov
hlt
dec
add
subb
mov
add
les
das
sbb
clc
xchg
inc
daa
lahf
add
icebp
adc
and
mov
cltd
sti
jno
rcrl
test
pop
call
addr16
or
lods
jp
in
imul
jne
mov
and
xchg
dec
mov
fnstsw
inc
clc
and
xchg
dec
mov
mov
mov
push
repnz
ret
ror
aaa
bound
mov
hlt
into
lea
cmp
nop
rorl
cmpsb
jle
xchg
mov
mov
cmpsl
insl
sti
xor
pop
jle
cmpb
or
popf
ret
out
cmp
jecxz
jg
xor
jne
aad
fs
adc
mov
lret
shll
adc
adc
inc
xchg
jno
or
call
mov
dec
cmp
in
pop
pop
outsl
lcall
mov
jge
negb
xchg
into
pop
dec
orl
fadd
pop
repz
or
imul
pop
fidivs
jp
fcoml
xchg
adc
inc
data16
push
pop
filds
dec
xchg
jbe
adcb
mov
pop
sub
mov
int3
mov
push
ds
add
jnp
cwtl
rorb
aam
mov
inc
add
in
sbb
ret
mov
add
lea
mov
lea
cs
dec
addr16
mov
and
insl
mov
push
lods
or
sub
ljmp
fiaddl
or
pop
sub
cmp
ret
jne
xchg
xchg
inc
leave
fnstsw
icebp
inc
roll
insl
dec
add
mov
insb
add
outsb
js
pop
inc
jg
mov
fwait
xchg
popf
xchg
push
insb
shlb
out
testl
dec
rcll
push
cmp
out
and
and
adc
sbb
test
lahf
das
push
test
pop
and
ficompl
insl
adc
cmp
add
pushw
xchg
das
outsl
addr16
ret
cmpsb
ds
test
xor
xchg
setp
xlat
in
mov
xor
imulb
mov
addb
mov
xchg
xchg
mov
loope
dec
push
push
jecxz
sbb
dec
jp
mov
scas
push
hlt
sub
mull
hlt
out
push
cmp
lahf
jge
add
push
sub
mov
sub
and
into
inc
pop
cmp
jne
iret
push
js
fwait
loop
into
push
leave
out
lock
fscale
or
dec
shlb
jg
mov
mov
scas
inc
pop
rcll
jae
push
andl
out
sub
adc
std
xchg
pop
push
cmp
fisubs
fwait
bnd
aaa
cld
ret
push
lcall
nop
leave
aas
and
mov
into
popa
xchg
scas
movsb
push
scas
mov
dec
out
dec
cmp
stos
in
lcall
lea
ja
xlat
pop
data16
jecxz
jns
push
cmp
fdivr
lds
dec
dec
dec
add
inc
jb
sub
mov
inc
shrb
push
xor
pushw
mov
pop
repz
push
pop
mov
fisubl
xchg
xor
fmull
mov
jnp
fimuls
cmp
pop
mov
out
xchg
push
sbb
sbb
xor
std
pop
std
in
lea
call
inc
cmp
dec
push
sbb
push
nop
xchg
std
leave
push
inc
add
mov
push
test
jmp
pop
dec
jecxz
lods
fisttpl
les
idiv
shl
shlb
add
shl
or
daa
in
adc
out
insb
xor
dec
je
addr16
cmpsb
cmc
add
and
jmp
mov
fcoml
pop
jge
xor
cltd
jbe
mov
push
into
int
ret
mov
mov
push
ret
dec
sbbb
mov
xchg
out
inc
es
pop
push
mov
pusha
fsub
inc
pop
inc
leave
jle
cmp
bound
cmp
sbb
cwtl
repz
dec
push
jecxz
jl
jp
sub
lea
mov
addb
lret
xor
mov
in
repnz
mov
popa
out
paddq
dec
aam
xchg
push
in
in
push
test
outsl
sbb
scas
repnz
rcrl
roll
mov
jbe
arpl
repnz
lret
xchg
xor
or
jmp
adc
das
pusha
repz
dec
call
lock
lock
lea
sbb
jg
inc
dec
outsl
sbb
arpl
mov
sbb
mov
pop
pop
in
rcrl
clc
inc
adc
shlb
mov
adc
jae
pop
std
cmp
ja
lds
sbb
inc
popf
sub
ljmp
fucomi
pop
fists
into
clc
jecxz
cmp
movd
popa
addb
inc
cmpl
aad
lea
adc
pop
lret
cwtl
inc
inc
sbb
cmp
test
sar
ret
or
add
mov
xchg
aaa
scas
int
cmp
sub
notl
cmp
insb
test
jecxz
popa
jp
inc
and
mov
xor
data16
cltd
clc
mov
dec
push
ljmp
jecxz
sub
cmp
or
jl
insb
test
sbb
inc
fistl
xor
fisubs
add
pop
xor
lds
pop
sub
pop
and
mov
and
mov
sbb
aad
roll
add
and
aaa
sti
mov
sub
pop
adc
ja
scas
cltd
mov
or
in
fisubs
lods
xchg
mov
inc
fadd
adcl
add
in
ret
ret
sub
pop
adc
xchg
push
pushf
add
dec
sbb
jg
iret
outsl
movsl
popa
test
cmp
jno
mov
sub
pusha
jecxz
addb
icebp
or
addr16
addb
jmp
inc
scas
ror
lret
jb
xor
adc
lahf
cli
pop
push
orl
fisttpl
xor
in
gs
dec
cli
in
das
xchg
xor
mov
add
gs
jne
cmp
rorl
pop
in
fs
hlt
pop
cmp
mov
clc
pop
push
fsubs
pop
inc
ffreep
inc
ret
test
out
push
add
mov
aas
fs
popf
push
xor
xchg
xor
add
inc
sbb
cmc
int
movsb
fs
mov
and
out
sub
cli
adc
imul
cmp
pop
and
hlt
cltd
and
pushf
xchg
dec
enter
mov
popa
mov
jl
out
xor
int
sub
je
push
push
in
pop
int
in
dec
ja
in
scas
pmulhuw
push
xchg
push
mov
mov
fistpll
lock
jg
jbe
sbb
lahf
xchg
mov
sub
xchg
ret
out
inc
movsl
inc
popa
sbb
pop
inc
or
cld
mov
out
sub
aad
push
mov
or
dec
aas
scas
mov
je
ljmp
jb
repz
mov
ja
add
mov
adc
js
popf
inc
mov
popl
mov
lods
imul
or
xchg
mov
mov
pop
pusha
adc
and
sub
je
mov
lods
mov
xchg
sub
mov
xlat
popa
mov
out
pop
nop
xorl
jb
pop
adc
jo
inc
adc
pop
fnstcw
cmp
xchg
enter
add
adc
out
stos
mov
pop
test
cmp
inc
cli
push
push
xchg
decl
in
test
cmpsb
mov
repnz
mov
mov
jbe
pop
mov
imul
cltd
add
push
into
into
xlat
cmp
and
jp
js
icebp
pop
push
push
jle
mov
in
mov
jmp
and
cmpsb
dec
out
into
push
iret
lcall
pop
lret
xchg
mov
inc
and
adc
or
jns
xor
and
dec
int
dec
and
out
and
ss
pusha
ds
aas
adc
lods
data16
loope
xchg
inc
cs
daa
jne
push
rclb
mov
mov
lret
ret
mov
dec
stos
in
inc
mov
inc
cmp
call
aaa
inc
jp
cmp
push
and
sub
subb
mov
push
pop
mov
fnstcw
arpl
pop
das
jno
mov
mov
mov
clc
push
adc
xor
ljmp
inc
lcall
jns
test
in
lret
movsl
fisubl
imul
dec
flds
inc
mov
movsb
push
cmp
pop
loope
shrb
pop
jne
mov
mov
sbb
cmp
scas
mov
lahf
das
mov
ds
xchg
push
repnz
xlat
or
mov
dec
mov
or
adc
mov
mov
pop
and
jmp
sahf
out
mov
xchg
xor
and
xchg
mov
scas
mov
mov
test
push
gs
gs
push
lods
in
lods
and
mov
mov
test
incl
dec
or
rorb
nop
dec
xchg
in
jmp
sarb
sub
mov
sub
sub
xor
fadds
pop
adc
sub
jge
repnz
shr
inc
rcll
pop
dec
jne
adc
pusha
lret
xchg
jg
pusha
fadds
mov
sbbl
daa
mov
xchg
mov
gs
xor
inc
ret
and
adc
mov
ds
sbb
out
mov
dec
mov
fcoms
gs
and
inc
xchg
arpl
mov
hlt
fcomi
push
dec
mov
jns
sbb
dec
jmp
pusha
add
leave
lock
sbb
and
push
lea
sub
in
inc
pop
lock
jae
mov
and
sub
call
xor
push
sub
sbb
inc
xor
or
sbb
xchg
pop
adc
sub
xor
pop
pushf
lret
dec
fmull
xor
movb
pop
mov
cmpsl
cltd
aad
pop
xorb
pusha
fdivs
xor
cmp
jnp
push
pop
into
mov
mov
sahf
dec
insb
cmc
adc
inc
sub
push
rclb
insb
movsb
cmpl
mov
ret
xchg
xchg
push
lret
inc
dec
in
push
scas
movsl
gs
or
xchg
xor
or
and
sub
cmp
dec
jmp
ret
pushf
mov
idivb
pushf
ljmp
scas
inc
pop
lret
mov
pushf
outsb
repnz
test
fnstsw
cltd
gs
jmp
loopne
scas
inc
dec
push
mov
lea
mov
add
jnp
inc
dec
in
and
xchg
mov
jge
mov
clc
ret
fcom
hlt
cmp
pop
jl
daa
mov
mov
test
and
inc
icebp
fs
mov
push
pop
and
pop
xchg
xchg
outsb
into
icebp
scas
lcall
les
lods
cmpsl
inc
xchg
loop
push
fcmovb
arpl
repnz
in
jno
adc
lret
pop
push
stos
arpl
add
dec
rclb
dec
cmp
data16
mov
lahf
test
mov
icebp
mov
sub
sbb
mov
jp
sti
lahf
fsubl
ret
dec
aam
adc
push
out
ljmp
ret
sbb
ret
imul
jle
arpl
mov
xchg
imul
gs
repz
jno
shll
hlt
das
lods
mov
shlb
rcl
fwait
xchg
ret
daa
push
jmp
dec
fildl
pusha
lds
add
xchg
fscale
lcall
mov
jle
cmpsb
movsl
push
push
pushf
xor
stos
std
sti
shrl
insb
xor
outsl
ds
xlat
pop
adc
fidivrl
cmp
add
sub
jp
mov
scas
or
sbb
js
lcall
sti
pop
fdivrs
mov
movsb
sub
mov
popf
icebp
sarb
call
xchg
cmp
dec
adc
std
popf
push
dec
mov
rorb
arpl
adc
in
in
sub
vprotd
or
cld
mov
imul
jns
pop
and
mov
push
cltd
fchs
push
mov
aas
das
hlt
fadd
and
dec
aaa
ret
xchg
sub
jo
push
jno
inc
aam
mov
arpl
mov
test
jb
jbe
xchg
sarb
xor
rorb
popa
mov
orl
mov
mov
movsb
push
cmp
xchg
push
xor
push
mov
mov
stc
adc
push
mov
nop
pusha
je
ret
out
push
dec
add
add
jle
test
mov
cmp
fwait
mov
clc
movsl
aas
ljmp
inc
cmc
cmp
jnp
inc
mov
inc
gs
out
pop
push
inc
stc
int3
xor
nop
jns
mov
xchg
inc
inc
js
arpl
sbbl
fisubrl
enter
lods
sbb
jb
pop
int
mov
push
aaa
sub
ds
je
mov
jmp
inc
sub
pop
scas
movsb
xchg
fdivs
jecxz
sub
daa
add
pushl
insb
ja
jb
pop
stos
dec
xor
xchg
or
nop
lret
adc
repnz
sub
repz
pushf
or
mov
decl
inc
sbb
rcrl
ja
lods
hlt
or
lock
push
jle
sbb
test
or
mov
adc
mov
xchg
inc
mov
pushf
shll
adc
in
leave
mov
dec
lds
jo
test
hlt
dec
mov
mov
pop
cwtl
jns
push
cmpsl
hlt
lcall
dec
push
cld
pop
out
ds
nop
jl
divl
adc
filds
inc
hlt
lods
hlt
push
adc
mov
push
xchg
mov
stos
loopne
cld
imul
mov
cmp
fs
rcll
push
lds
nop
sbb
js
sub
mov
or
cmc
adc
in
lahf
xchg
sbb
cmp
or
pop
leave
aaa
shl
inc
jl
sub
in
cli
andb
ret
push
xlat
push
es
inc
dec
add
mov
xchg
ret
xchg
inc
mov
hlt
test
pushf
rcrb
push
push
pusha
mov
xchg
jno
cmpsb
ret
cmp
mov
inc
cltd
sub
jb
jecxz
sahf
ljmp
jp
les
mov
aam
or
xor
int3
sbb
shll
aaa
test
and
popf
mov
adcb
sbb
or
orl
in
pop
cwtl
es
or
pop
lds
jg
and
sub
ljmp
stos
push
jle
sub
mov
mov
stos
mov
jne
mov
mov
ljmp
stos
mov
mov
jge
nop
sub
and
push
test
sub
xor
pop
pop
push
jmp
or
add
dec
pusha
incl
dec
leave
jns
subb
ret
outsl
sub
lcall
inc
cmp
pushf
js
stc
jg
mov
xor
jmp
jnp
sbb
movsl
add
sbb
xor
adc
outsl
decl
dec
rcrb
or
imul
iret
add
lods
add
mov
fdiv
loop
push
cli
xor
cltd
pusha
sub
int3
loop
cmp
mov
cmp
cmp
cmp
and
movsb
cmp
inc
adc
dec
shll
imull
test
ds
js
into
out
lret
popf
pop
sub
test
xchg
push
daa
in
in
int
push
dec
mov
fwait
sbb
sub
mov
pop
jb
call
pop
sub
dec
gs
test
insb
in
jl
or
arpl
test
std
jp
rcl
push
dec
pop
jecxz
cmp
cmp
rcl
inc
js
push
insl
test
adc
insl
add
cmpsb
sbb
cmc
push
shll
mov
xor
xor
pop
jmp
and
sbb
dec
jo
daa
add
jmp
jns
mov
push
std
cmpsl
ret
push
cmpsb
arpl
je
dec
push
cmp
jg
sub
add
xchg
movsb
add
sub
and
mov
or
gs
pop
xchg
repz
or
outsl
sbbl
inc
test
pop
mov
mov
lahf
push
xchg
decl
jecxz
xchg
stos
xchg
pop
lods
data16
cld
fwait
in
ss
and
adc
lods
add
xchg
add
pop
jle
ja
add
int
out
cmpsb
mov
or
cmp
insb
repz
dec
xchg
cmpl
popa
sti
xchg
aaa
inc
popa
mov
inc
insb
jge
fmull
call
mov
add
jmp
or
fsubrs
xchg
adc
push
mov
lds
test
inc
jo
sti
das
pop
pop
pop
ss
jne
test
mov
push
push
mov
sbb
mov
jno
fisubs
and
js
sarl
mov
cmpsb
and
and
add
sbb
sub
inc
repnz
test
jge
stos
and
movsb
mov
pop
jnp
jne
xor
sub
shll
cmc
mov
cmpsb
lods
pusha
xchg
or
je
xchg
jge
xchg
inc
clc
sbb
fnstenv
rclb
jle
test
dec
cmp
imul
out
mov
ljmp
pop
rcrb
icebp
and
fldt
push
fmul
mov
jbe
jbe
icebp
nop
mov
cltd
clc
lcall
mov
jbe
inc
arpl
aas
lahf
jae
mov
dec
dec
js
mov
sbb
mov
jle
mov
out
cld
jp
xlat
aad
out
fs
add
xor
or
push
add
mov
or
push
inc
xlat
mov
insb
mov
es
mov
stos
inc
push
mov
and
add
inc
lea
pop
loope
cmp
sbb
pop
iret
jg
xchg
dec
jle
cwtl
xchg
cltd
cmp
mov
imul
rcrb
lcall
lds
sub
rcrl
sbb
rclb
mov
imul
je
add
mov
aam
fstpt
stc
popf
dec
and
jmp
movsb
add
frstor
push
repz
test
xchg
inc
push
sub
xor
pop
les
sbb
jp
test
pop
xchg
mov
popa
dec
inc
insb
mov
lcall
jo
pop
fdivr
jno
mov
in
divl
mov
in
stos
add
cli
in
adc
int3
rclb
add
jmp
dec
jo
xchg
daa
dec
lods
adc
or
lea
enter
test
sbb
lock
dec
sbb
fisubrl
mov
mov
nop
mov
dec
xlat
jecxz
and
add
jg
dec
aad
call
add
or
ds
or
in
test
cmp
cmp
hlt
cli
loop
cmpsl
lds
xor
int3
test
fcoml
cmp
inc
jmp
call
fildll
dec
push
dec
outsb
shll
stos
xor
dec
fsubl
mov
cltd
cmp
xor
xchg
call
xor
push
jmp
or
imul
cmpsl
jmp
add
jb
cmp
add
jecxz
fwait
iret
pushl
pop
mov
xor
mov
mov
leave
and
mov
mov
and
add
movsl
sbbl
lock
adcb
daa
and
cmp
mov
lret
movsl
js
mov
repz
cli
or
push
mov
mov
cmc
add
or
test
push
push
mov
insl
mov
xchg
jno
stos
or
mov
daa
outsl
xor
lret
jge
dec
imul
push
bound
ficoml
fisttps
cmpsl
aas
jecxz
fidivrl
imul
inc
divl
stos
adc
sbb
lret
repz
subl
das
sarl
das
inc
sub
inc
add
push
push
jnp
mov
dec
movsl
xchg
ret
call
aas
or
shll
addr16
mov
inc
loop
scas
leave
fmulp
mov
mov
or
sbb
lcall
insl
loopne
push
stc
stc
mov
cwtl
out
add
lea
scas
and
mov
cwtl
inc
push
jmp
sub
cli
fadds
mov
test
cmp
mov
pop
xchg
imul
out
sub
je
mov
push
push
push
imul
fwait
push
dec
xchg
push
es
iret
std
cltd
fiaddl
test
dec
aaa
shlb
aam
adc
cmp
inc
mov
pop
xor
sub
iret
arpl
xchg
fidivl
adc
sbb
mov
out
jne
lock
mov
ja
pop
push
jbe
bound
fidivrl
mov
iret
mov
addr16
scas
std
pusha
push
je
je
jle
and
push
aaa
mov
bswap
inc
xchg
scas
push
mov
je
rclb
hlt
ret
xchg
imul
dec
nop
xchg
cwtl
popf
jmp
add
ja
popa
ja
jmp
into
arpl
dec
push
sbb
popf
nop
fdivrp
adc
mov
in
cmpb
mov
and
inc
mov
dec
insb
clc
lret
xor
dec
fs
mov
add
mov
push
data16
fs
out
insb
dec
aad
fprem
cmp
jecxz
lock
pop
adc
inc
loopne
mov
add
sbb
rcll
sub
pop
inc
cwtl
outsb
fstpt
or
lods
xchg
or
stc
out
cmpsl
mov
sbb
nop
repnz
or
cmp
jns
lods
repz
mov
mov
leave
adc
cmp
pop
mov
adc
dec
xchg
scas
mov
fld
mov
pop
lds
mov
andl
mov
js
ja
pop
jl
dec
lods
or
aad
sarl
mov
fldenv
mov
mov
fistl
int3
push
adc
pop
inc
pop
fnsave
dec
orb
add
adc
xchg
ret
aas
shll
push
push
push
mov
mov
cmpsl
mov
mov
out
jnp
inc
dec
fcompl
or
pop
push
add
mov
pop
js
inc
and
mov
sub
je
int3
repnz
mov
mov
lret
adc
mov
mov
pop
lods
ss
lock
lods
mov
int3
xchg
sbb
inc
sti
jae
sub
push
into
leave
sbb
sbb
test
xlat
fisttpll
sbb
xchg
imul
mov
leave
fcoms
fwait
lcall
outsl
jb
mov
bnd
lock
mov
pop
push
loop
xor
adc
cli
xor
adc
fstp
dec
inc
cmp
js
mov
adc
xor
or
cmp
das
dec
outsb
sbb
lcall
push
jg
sub
aam
in
jne
push
inc
pop
pop
lods
pushf
test
popf
test
loopne
jg
xchg
shl
jge
pop
ret
inc
cmp
dec
idivb
add
inc
or
call
push
lret
inc
outsl
lret
sub
pop
dec
and
mov
rclb
and
mov
stos
jmp
stos
scas
xchg
cmp
dec
pop
sub
test
lahf
xchg
rorb
mov
out
mul
clc
lea
jl
jbe
fldl
in
or
das
cli
xchg
mov
jecxz
mov
in
nop
and
adc
cltd
fwait
rcr
lcall
js
adc
pop
and
mov
jp
xchg
inc
in
push
imul
lahf
insl
imull
push
dec
pop
adc
jmp
int
out
and
lret
sbb
pop
jecxz
jo
jns
or
mov
or
cmpsl
mov
mov
lcall
push
dec
inc
or
movsl
and
stos
stos
dec
mov
mov
sub
scas
out
jne
add
cmpsb
into
fstl
stc
push
xchg
mull
mov
inc
xchg
xlat
inc
inc
adcb
push
scas
jae
mov
and
outsb
aaa
inc
and
es
push
testb
inc
jmp
das
clc
push
inc
pop
inc
and
mov
aad
orl
fcoml
call
pop
addr16
xor
jnp
sbb
cmp
fincstp
push
insb
xchg
lret
xor
jle
adc
aaa
push
sbb
jle
dec
pop
jmp
cld
adc
xlat
dec
into
cmp
fbstp
push
push
add
lods
or
pop
out
cmp
sbb
mov
pop
pushf
pop
or
shlb
or
jo
test
add
ficomps
adc
xor
sbb
lea
dec
stos
ljmp
mov
faddl
and
data16
cmp
sbb
dec
out
stc
lret
add
jle
pop
cld
pop
insb
lcall
mov
fldl
dec
mov
jg
sub
push
flds
mov
mov
mov
sub
mov
movntq
mov
xchg
xor
adc
test
add
cmp
or
fs
fwait
xlat
test
push
pushf
xor
stos
jbe
sub
cmpsb
aas
pop
test
adc
div
fnstsw
cwtl
and
sbb
mov
dec
iret
cld
jge
jnp
pushf
stc
lahf
pop
cmp
pop
rclb
cltd
or
mov
or
movsl
addr16
lods
mov
jns
scas
or
call
in
dec
pop
add
xor
push
dec
fcomp
lret
cwtl
mov
ds
aaa
or
or
or
jae
aad
jno
testb
jle
jae
push
sbb
hlt
frstor
mov
dec
loopne
push
adc
mov
cld
adc
xchg
fisttps
out
je
mov
or
sub
mov
or
sub
jae
xor
inc
ret
call
jmp
mov
add
sub
in
test
fnstcw
lea
mov
mov
loope
jp
jno
push
sub
sub
mov
out
jo
pop
push
xchg
cld
and
imul
int3
cmpsb
mov
dec
mov
mov
dec
outsb
imul
ss
inc
addr16
clc
rcrl
frstor
js
stc
popf
push
cli
xor
dec
jb
inc
daa
mov
jecxz
out
push
cmp
mov
mov
ss
jne
stos
aam
mov
leave
lret
mov
aas
push
mov
mov
mov
mov
dec
push
aam
jns
dec
jge
pop
sbb
mov
jg
pushf
xchg
fildll
dec
adc
jb
push
push
xchg
or
mov
add
add
sub
pushf
pop
pop
pop
cmp
into
push
jnp
imul
leave
insl
imul
lahf
mov
je
sbb
inc
xor
jmp
pop
cmp
cmpsl
xchg
cmpsl
dec
mov
aam
xchg
jb
roll
fxch
jg
lcall
sarl
fldenv
mov
in
les
hlt
sbb
fs
mov
jle
and
scas
lods
adc
mov
adc
push
sbb
xor
imul
or
sbb
dec
stc
jge
in
int3
movsb
push
ret
shlb
fcmovnb
movsb
xor
sti
enter
push
stc
xor
cmp
fcoml
mov
mov
aas
icebp
jbe
lods
leave
xor
or
or
inc
or
add
pop
ror
jb
cmc
adc
push
sub
dec
fisubrs
push
imul
jge
push
sub
mov
push
in
fwait
mov
daa
xor
and
pop
insb
xor
or
sub
mov
outsb
inc
ficoms
sbb
sti
and
sbb
mov
mov
test
and
mov
mov
in
aaa
rep
es
sti
int3
pop
int
daa
xor
xchg
dec
int
pop
and
or
loopne
mov
mov
push
inc
enter
in
lret
clc
add
mov
jle
pop
enter
sub
push
xor
xor
jns
cmc
adc
mov
ror
mov
test
pop
push
fisubrs
adc
jo
sub
aam
jns
insl
arpl
xchg
and
sti
add
sti
push
pop
adc
lods
sahf
movb
sahf
push
sub
sti
add
call
stos
lret
inc
inc
mov
push
cwtl
out
outsb
add
rclb
sbb
fcmovb
adc
push
lcall
inc
mov
push
xor
xor
dec
cmp
push
es
xor
scas
icebp
test
cld
xchg
pushf
lock
dec
xchg
mov
rolb
pop
xor
pop
popf
stos
ljmp
cmp
push
inc
xchg
clc
iret
adc
add
ja
sbb
sub
es
xorb
fcomps
mov
je
or
cmpsl
cmp
mov
add
aam
dec
mov
ror
jmp
repnz
outsl
cmp
mov
xor
sub
ss
cld
xchg
fistpll
out
ja
push
test
insl
ja
hlt
or
pop
js
jbe
xor
into
xlat
in
inc
pop
stos
fcomi
xor
pop
pop
xorb
dec
filds
adc
xchg
mov
fs
insl
cmp
gs
add
mov
push
sbb
mov
hlt
add
arpl
pop
mov
inc
loope
stos
mov
scas
sub
addr16
sub
fbstp
mov
dec
add
and
inc
mov
nop
inc
xchg
mov
sbb
fnstsw
sbb
into
pop
mov
cmp
mov
xchg
fdivrl
push
mov
xchg
aaa
fwait
pop
fiaddl
pop
xchg
das
inc
inc
dec
aaa
jge
lea
push
pushf
loop
sub
clc
dec
imul
cld
jg
pop
and
mov
lock
dec
xchg
in
pushl
movsb
mov
jg
cli
outsl
adc
call
push
fildll
loope
sub
fldl2t
dec
pop
mov
mov
subb
and
push
jge
rcrb
push
insl
dec
cltd
dec
insl
pop
je
xchg
dec
pushf
and
push
insb
loope
pop
lds
fcmovbe
movb
push
sbb
int
incl
leave
out
cmp
ficomps
xchg
aas
incb
cli
inc
aaa
mov
call
jne
stos
sub
pop
sbb
push
fnsave
xlat
xor
xchg
mov
mov
test
push
repnz
pop
inc
ljmp
jecxz
or
xchg
in
adc
dec
push
adc
imul
test
xor
in
or
lahf
and
jl
jecxz
or
in
push
inc
lahf
js
lds
data16
pushf
pushf
add
leave
mov
and
dec
aas
dec
xchg
mov
pop
lock
xor
xlat
xor
push
xor
aam
or
dec
sbb
jp
icebp
cmp
fcmovnu
mov
pop
lods
adcl
repz
mov
sbb
dec
cwtl
fsubs
out
icebp
repnz
into
jbe
aad
decl
dec
sub
aam
inc
sbb
mov
mov
xchg
cltd
lock
mov
and
in
push
cmp
arpl
hlt
js
roll
stc
sbb
mov
mov
gs
mov
cmp
inc
jae
sub
adcl
pop
shrl
mov
test
mov
int3
adc
cmp
popf
push
pop
test
dec
mov
data16
ret
mov
xchg
repnz
mov
test
test
adcl
sub
push
test
jp
or
rolb
orl
mov
xchg
xor
ret
inc
xlat
cmp
adc
adc
clc
sub
subb
and
xchg
call
fsubr
es
cmp
jle
addr16
rorl
and
pop
outsb
push
nop
push
sub
jl
leave
test
xchg
bound
ret
shlb
cmpsb
mov
fbld
mov
xchg
sbb
mov
out
jle
sub
pop
mov
xchg
mov
sbb
push
push
mov
lcall
xor
out
aas
movzwl
dec
stc
insb
and
sbb
add
int3
out
insb
mov
cmc
inc
mov
jbe
cld
inc
pusha
pop
mov
push
fsub
jo
stos
and
std
out
aaa
incl
and
pop
rcll
adc
cmc
or
push
inc
or
lahf
and
in
imul
push
mov
push
aaa
sarb
adc
lock
jo
push
or
add
mov
nop
inc
add
ds
clc
sbb
cmp
sbb
movsb
sub
frstor
push
in
pop
pop
cmp
int3
test
gs
add
push
ds
mov
je
pop
sbb
cmpsl
xor
hlt
push
adcb
adcb
sub
jmp
jae
jno
jb
scas
test
rolb
xor
mov
aad
aad
popf
outsl
add
mov
fnsave
out
sub
jne
pop
ja
xor
pop
push
mov
sbb
adc
es
in
push
inc
into
adc
ds
push
call
add
xor
fidivrl
add
repz
xor
mov
andl
push
mull
stc
adc
jo
ss
rclb
add
mov
cltd
lcall
sbb
push
jbe
stc
lret
push
jmp
das
pop
inc
fstps
pop
cmc
lret
xlat
adc
mov
mov
mov
bound
bound
fcompl
mov
daa
test
xchg
sub
jno
or
enter
jge
jmp
and
addr16
dec
xor
icebp
xchg
mov
mov
insb
inc
jne
das
jge
lods
idiv
aaa
rcrl
ljmp
pop
mov
jno
ljmp
and
fs
mov
out
popa
pop
addr16
pop
xor
jmp
sub
cld
dec
test
cmpsl
sub
lcall
pop
lock
aam
xchg
xor
xchg
pop
pop
test
popa
insl
sub
cmp
lods
push
sub
mov
adc
stc
outsl
cli
cwtl
mov
pushf
cs
inc
test
jg
imul
jne
jmp
mov
divl
pop
mov
imul
mov
jbe
stos
inc
or
in
pop
add
std
fcomi
pop
jmp
jle
jne
sub
ds
mov
inc
push
xchg
lret
out
leave
mov
pop
add
stos
jno
ds
add
pusha
imul
lahf
xor
ds
test
push
ss
push
cmp
push
lret
push
fistps
mov
or
pop
outsb
jmp
xor
push
filds
ret
call
ljmp
mov
sbb
mov
mov
pusha
push
jg
sub
pop
mov
std
cwtl
or
sbbl
dec
jne
sbb
imul
sub
into
xchg
lods
xchg
leave
repnz
jl
jb
xor
aas
and
rcrb
push
scas
insl
mov
mov
push
and
mov
outsl
mov
scas
lahf
cltd
sar
in
roll
pusha
stos
jo
fwait
pushf
std
jne
shlb
lret
jne
or
or
popf
ljmp
sbb
loopne
pop
stc
pop
inc
sbb
std
mov
pop
push
popf
mov
inc
jbe
shrl
mov
push
int3
sahf
xor
cmp
fidivrs
mov
xor
mov
or
repz
push
aas
push
mov
jp
or
xor
jmp
movsb
popf
mov
push
sbb
mov
popf
xor
outsb
lods
das
ljmp
inc
lahf
imul
in
gs
std
mov
movl
sbb
dec
stos
push
rorl
xchg
dec
outsl
add
cmpl
in
mov
popf
adc
fwait
imulb
inc
popa
ds
jl
mov
cmp
mov
mov
mov
pop
fdivrl
fs
cmc
decb
outsb
shlb
jns
imul
loop
fdivs
cmp
sub
sub
out
add
fstps
andl
mov
and
es
sub
sbb
dec
mov
push
shlb
mov
cs
in
push
int
xor
mov
cmp
cmc
jl
test
pop
and
jno
loopne
add
sarl
dec
or
mov
or
mov
roll
sahf
fiaddl
xor
mov
shlb
adc
inc
cmpxchg
cmp
stos
pop
jle,pn
dec
inc
scas
mov
sub
dec
fisubrl
cmp
mov
dec
arpl
cmp
inc
inc
fcompl
dec
ss
xor
mov
into
mov
dec
cmpl
aaa
pop
and
in
inc
lods
xor
xchg
in
push
rorb
add
push
das
mov
in
rolb
enter
aas
outsl
in
sbb
repnz
add
mov
cmp
out
es
repz
add
add
pop
lahf
cmp
jp
fistl
test
mov
jle
addr16
push
hlt
cwtl
xchg
adc
mov
out
addr16
mov
loop
invd
decb
roll
jb
xchg
pop
inc
sub
xchg
repz
lods
outsb
stc
xchg
ss
pop
das
adc
in
push
sti
addr16
repz
lret
adc
les
rcrb
cmp
orb
repz
sbb
sbb
icebp
imul
or
add
or
mov
loope
jmp
mov
int
mov
lds
push
mov
mov
pop
stc
lret
je
out
push
cli
xchg
dec
mov
std
pop
push
lea
jl
idivl
test
cmp
or
sub
xchg
jnp
fwait
jl
scas
xchg
arpl
sub
mov
call
or
addr16
fistpll
jle
jg
dec
jp
bnd
aam
jb
pushf
add
dec
movsb
loopne
fcmove
inc
push
in
es
out
seto
stc
aaa
stc
or
pushf
js
ss
or
roll
testl
jmp
test
jle
inc
jl
adc
xlat
sbb
sub
insl
pushf
test
push
lret
mov
sub
jp
xor
and
dec
mov
or
xor
test
jmp
bound
mov
xchg
cmc
jbe
rep
mov
test
inc
call
add
addr16
jmp
push
or
cmp
cli
push
xor
mov
arpl
pop
je
cmc
xor
enter
js
es
push
push
nop
push
cmpsb
add
add
jbe
repnz
insl
add
adc
divb
enter
jg
cltd
in
add
jmp
roll
fs
js
jbe
push
jg
mov
popa
in
je
aam
jg
mov
shl
mov
dec
mov
shlb
add
jp
mov
lods
mov
mov
push
cltd
repz
push
imul
dec
clc
bound
je
sbb
xlat
sub
mov
sti
fwait
daa
push
dec
jns
cltd
ror
dec
mov
add
in
xor
mov
jne
mov
fsub
jg
js
lds
push
popa
ja
or
cmp
incb
push
inc
das
fistl
movsb
mov
add
cmpsl
or
pusha
push
inc
fs
inc
pushf
iret
dec
adc
movsb
popf
enter
js
repnz
add
int
nop
add
sahf
popf
mov
mov
aas
push
out
mov
insb
roll
jns
stos
jne
or
loopne
dec
adc
mov
add
in
dec
sahf
scas
cmpsb
jmp
jno
mov
xchg
adc
notb
mull
and
mov
jle
std
mov
sbb
leave
inc
fnstsw
inc
jne
out
xchg
sub
jecxz
rcrb
mov
in
or
add
or
jno
inc
xchg
call
std
in
sub
and
rol
sub
mov
jb
js
or
mov
shrb
sbb
xchg
mov
ljmp
and
push
mov
iret
xchg
mulb
sbb
pop
pmulhuw
nop
dec
xor
pop
lcall
stos
iret
std
lods
pop
ss
mov
adc
ja
test
mov
es
xchg
lcall
es
xor
mov
add
popf
adc
xchg
ds
insl
push
dec
and
or
xor
daa
test
fstps
or
and
adc
cwtl
lods
fwait
adc
cmpsl
lahf
pop
jns
push
mov
xchg
mov
adc
cld
dec
leave
or
stos
cmpb
inc
loope
xchg
lret
lods
ja
add
or
jmp
lahf
sub
stos
insl
sub
mov
mov
sti
xlat
in
fimuls
sub
lret
int3
addr16
dec
inc
das
cmp
movsb
nop
mov
cmpsl
lahf
lods
cmp
push
dec
aam
nop
push
test
xchg
test
loop
push
jno
repnz
push
cmc
jne
inc
and
andb
inc
or
rolb
mov
pusha
push
push
pop
sahf
insb
scas
push
clc
stos
mov
addl
and
add
cwtl
dec
add
mov
mov
jle
sub
cmove
lret
scas
lods
xlat
pop
icebp
push
mov
inc
jmp
mov
mov
test
aaa
jae
push
hlt
pop
negl
clc
add
sarl
pop
data16
adc
pop
into
or
ss
popf
ss
cmp
mov
dec
mov
adc
push
in
popf
jo
jns
add
sbb
ja
sarb
ret
imul
xchg
adc
jae
sub
dec
pop
push
shl
or
inc
inc
cmp
xor
mov
sbbb
cld
push
test
push
jns
stos
movsb
mov
xlat
pop
icebp
and
clts
add
lods
fbstp
lea
jae
mov
icebp
sub
or
mov
cld
dec
sahf
lret
inc
js
popf
mov
xchg
add
xchg
mov
ss
dec
jbe
mov
xchg
scas
add
add
jne
jecxz
in
call
outsb
sbb
es
dec
cmpsl
popf
mov
jmp
in
jns
cmp
aad
adc
or
xchg
cmpsb
fmull
inc
sbb
xchg
add
dec
pushf
sbb
ss
or
inc
mov
repz
inc
sbb
lods
sub
push
nop
test
cmpsl
and
dec
std
jge
loope
add
cmpsl
and
dec
inc
jbe
scas
in
lahf
gs
mov
push
jle
in
ret
sub
ljmp
jb,pn
jg
jge
cmpsb
sbb
jae
lretw
xor
imul
jp
mov
ret
out
mov
pop
addb
mulps
in
iret
notl
push
andl
sub
jecxz
lock
or
jne
movsb
fwait
mov
pushl
addb
pop
push
mov
movsb
pop
mov
pop
xchg
inc
jns
cmp
xor
test
das
jmp
and
sbb
gs
pop
jbe
mov
rorb
movsl
stos
adc
stc
leave
or
jmp
or
iret
or
inc
int
mov
inc
add
mov
dec
push
mov
ljmp
imul
sub
fistpl
xchg
pop
loopne
jge
dec
mov
icebp
or
pop
pop
cmp
loop
ljmp
sbb
lret
dec
mov
cwtl
fcmovnbe
int
stc
outsl
and
lock
stos
ds
aas
sub
insb
cli
dec
lea
in
inc
pop
pop
mov
ret
lock
xor
inc
mov
data16
ja
xlat
aam
push
push
leave
ret
lock
or
push
sbb
push
pop
xchg
iret
mov
add
ret
xchg
and
fimull
and
inc
mov
insl
lods
inc
fcmovnb
daa
add
mov
xor
add
cmp
jmp
push
fbstp
xchg
cmpsb
loope
xor
repnz
jmp
push
sbb
push
jmp
mov
rolb
popf
orl
imul
into
jno
je
data16
cmp
adc
pusha
sbb
imull
mov
out
and
cmp
jmp
cmp
xchg
mov
jne
sbb
sbb
andb
inc
push
or
xor
inc
inc
xchg
cwtl
or
fwait
jne
shl
mov
test
jbe
mov
lahf
sub
pop
out
or
mov
add
aad
pop
outsl
xchg
sbb
pusha
fcoms
jns
fistpl
pop
mov
lods
in
stos
cmp
sub
pop
mov
je
add
dec
test
clc
fcoms
mov
mov
and
das
sub
shrb
loop
icebp
das
mov
xor
mov
pop
inc
outsl
push
xchg
adc
or
push
ds
clc
pop
cmp
lret
pop
imul
pop
or
mov
adc
xchg
int
test
pop
ljmp
sub
popa
jmp
xchg
inc
out
jl
or
inc
aam
xchg
nop
fisttpl
push
out
pop
mov
mov
mov
jp
add
ret
xor
xor
mov
and
add
mov
imul
add
mov
dec
mov
and
orl
cmp
jp
ret
xchg
sbb
out
test
or
mov
cmp
jns
jl
push
push
xor
mov
or
xor
repz
les
in
xor
mov
pop
or
hlt
jmp
outsb
xchg
adc
sbb
jmp
fidivl
sub
xchg
jbe
inc
rcr
xor
mov
sbbl
cmpb
nop
icebp
in
aaa
adc
pop
add
push
popf
mov
sbb
mov
push
in
ja
mov
imul
cli
cld
std
adc
lcall
and
pop
lret
push
addr16
fwait
mov
inc
jecxz
cmpsb
mov
jl
jo
xor
in
into
and
pop
out
pop
cmp
add
inc
mov
icebp
cmp
jno
and
cmp
leave
addb
stos
xchg
mov
jne
adc
sar
mov
bound
lahf
hlt
and
aad
leave
movsb
es
outsl
or
dec
mov
jmp
rclb
loope
pop
out
cmpsb
cwtl
hlt
mov
mov
rcll
mov
int3
xchg
lods
dec
pop
movsb
ljmp
ljmp
mov
push
stos
fidivrs
mov
push
div
xor
cwtl
mul
rolb
and
cli
xor
xchg
test
jg
int
sti
fstpt
push
popf
repnz
cwtl
cmc
and
pop
xchg
insl
jne
loopne
aaa
lcall
shrl
lret
notb
and
cmpsb
sti
xor
add
mov
dec
push
sub
push
cmp
cmpsl
pop
push
movsl
aas
addr16
xchg
ret
fcoml
adc
cmp
nop
ljmp
pusha
and
pusha
cltd
lods
and
xchg
leave
hlt
mov
jecxz
jne
push
mov
inc
or
movswl
aas
cld
jnp
aas
test
mov
cltd
jne
sub
out
xchg
adc
pop
ret
sete
stos
inc
adc
pop
gs
outsb
scas
fnstcw
daa
pop
or
push
or
mov
mov
and
pop
xchg
sub
cmp
add
push
jl
insl
mov
xchg
xchg
loope
addr16
sbb
xchg
push
or
cmp
xor
fwait
gs
mov
sub
or
gs
fs
jb
push
shr
mov
mov
and
inc
into
mov
subl
xor
movsb
xlat
scas
xor
ja
jnp
into
add
xchg
push
add
push
jge
mov
scas
cmpsl
bnd
jge
out
push
add
lahf
in
sub
xchg
mov
mov
pop
jne
cmp
loope
popf
outsb
in
push
mov
jb
test
jle
popa
ss
xchg
shrl
lret
stos
das
mov
into
sti
adc
mov
sub
in
lahf
addr16
fdivs
mov
data16
dec
repnz
outsl
cs
stos
jmp
testb
or
add
mov
iret
notl
mov
cmp
enter
xchg
gs
sub
icebp
dec
jns
inc
stos
mov
mov
lds
pop
xor
and
fs
jo
cmp
pop
mov
das
jl
jmp
test
repz
jecxz
nop
out
sub
sub
not
dec
pushf
movsb
push
aam
sahf
hlt
inc
pushf
addr16
sbb
ret
inc
inc
jmp
pop
mov
dec
mov
imul
push
sbb
sahf
or
lret
or
cwtl
ret
lock
test
mov
cld
test
out
add
bound
push
and
push
jg
cmpsb
mov
into
iret
adc
out
je
mov
push
fwait
jns
cli
sbb
bound
adc
adc
sub
rcl
mov
ror
clc
sub
jmp
and
ja
jns
xor
in
les
adc
mov
ja
xchg
outsb
das
in
xchg
add
push
jge
lcall
cmpsb
inc
cmpsb
enter
cld
inc
dec
and
and
ds
mov
clc
cmc
and
test
fcompl
adc
hlt
flds
adc
or
call
shrl
lahf
fiadds
mov
ds
mov
jge
fisubrs
pusha
repz
sbb
sbb
push
imul
test
mov
ds
xor
sbb
stc
inc
ds
dec
sub
popa
hlt
ret
popl
xor
pop
fildl
cmpsl
cmc
mov
aad
mov
mov
cmp
pushf
scas
icebp
sti
and
fcmovnb
mov
sbb
jmp
dec
xor
adc
fdivr
sbb
mov
in
js
imulb
mov
and
je
pop
mov
sahf
sub
pushf
ret
push
sbb
pop
lahf
pop
cli
or
out
out
ja
mov
jnp
sahf
call
ret
cmp
adc
mov
jl
mov
mov
insl
inc
or
enter
insb
mov
daa
pop
orl
mov
jmp
leave
push
inc
mov
and
xor
js
xor
lea
jo
mov
syscall
inc
jb
push
iret
lods
push
aaa
pop
dec
pop
jbe
in
out
repnz
je
adc
test
out
sbb
mov
and
jne
mov
popf
cmp
arpl
mov
lds
pushf
add
cmova
dec
fxch
rcll
mov
pop
call
ss
dec
insb
mov
fnstcw
aas
cmc
and
movsb
jbe
mov
adc
insl
add
xchg
adc
jno
stos
sbb
xchg
xchg
and
lret
adc
add
cld
push
add
or
outsl
dec
mov
adc
dec
dec
cmpsb
clc
ficoms
test
push
push
lahf
frstor
sub
xor
jo
or
testl
sbb
pop
adc
daa
sub
mov
out
ljmp
dec
scas
out
pop
jo
dec
mov
sbb
and
xchg
and
xor
imul
shl
jb
jb
adc
mov
pop
shll
std
cli
adc
lods
shrl
push
scas
cs
jne
xchg
jge
mov
int
out
add
out
cs
test
mov
loop
push
mov
fwait
iret
inc
sub
data16
jle
adc
stc
cmp
mov
test
mov
or
lock
sub
cli
ja
push
cmc
jle
cmp
mov
jo
fdivrs
mov
popl
mulps
push
daa
and
mov
aam
mov
inc
push
fucom
inc
sar
mov
dec
dec
ficoml
lea
mov
mov
jno
fisttps
dec
popa
sub
mov
lods
add
pop
push
cli
ret
adc
icebp
mov
sbb
inc
mov
mov
dec
mov
inc
sub
adc
in
push
ror
mov
repz
and
mov
mov
jl
jge
and
cmp
cmp
dec
and
arpl
loop
enter
push
push
js
sbb
cwtl
aad
into
inc
andb
jecxz
daa
jl
fstenv
inc
xor
inc
mov
push
mov
cmp
nop
or
push
ret
mov
negb
lds
inc
adc
mov
and
loopne
and
testl
movnti
ret
sub
and
mov
and
xchg
and
pop
inc
or
xorl
pop
push
data16
cmpsb
xchg
push
add
fisttps
pop
popf
stc
mov
lods
dec
and
sub
cld
enter
push
pop
xlat
mov
xor
or
cmp
fmuls
lds
jno
cmpsb
mov
and
test
xorl
mov
dec
test
sub
lcall
mov
insl
ret
ljmp
push
outsl
inc
xchg
bound
inc
or
shrl
push
out
sbb
lret
in
ja
pop
jo
fisttpl
inc
roll
mov
in
or
jo
shrb
push
rcl
sbb
sub
es
call
push
xor
faddp
in
adc
sbb
fs
or
loop
and
or
mov
fidivl
movsb
cld
mov
out
aad
sahf
adc
idivl
xor
mov
test
mov
insb
add
pop
mov
mov
and
mov
cwtl
push
adc
pop
dec
pusha
sbb
mov
inc
mov
sahf
popa
mov
fadds
inc
xchg
jnp
push
out
cli
push
aaa
daa
jmp
xor
and
mov
hlt
movsb
ret
xor
push
and
xor
dec
push
sub
fldcw
dec
jns
jle
dec
sbbl
pop
jmp
or
mov
xor
mov
cwtl
pop
mov
loopne
add
pop
stc
rcl
pop
xlat
fldcw
insl
jle
pop
roll
data16
out
popf
mov
inc
or
jno
cmpsl
dec
pop
dec
ret
enter
daa
and
shll
mov
mov
subb
in
addr16
fldl
popf
adc
loopne
sub
pop
push
mov
in
add
popf
rolb
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
in
iret
test
pop
xchg
sbb
addb
push
mov
xchg
add
cmp
das
pusha
pop
scas
pop
cmp
lds
adc
add
inc
mov
mov
adc
test
ljmp
and
test
fldl
jb
cltd
cmp
sub
xchg
cmpsb
jg
aam
inc
xor
bound
mov
stos
jmp
in
add
int3
lahf
gs
repz
mov
movsl
mov
push
test
fmuls
push
je
sbb
stc
xor
pop
int
xchg
ret
notb
jb
sub
jmp
jae
enter
xchg
lret
addr16
lahf
jbe
icebp
xor
sub
mov
dec
xchg
mov
ss
adc
jecxz
or
or
popf
jbe
push
jp
fwait
sub
xchg
mov
sbb
iret
add
mov
dec
stc
inc
lds
cli
lcall
cld
and
push
xor
or
ljmp
movsl
mov
lock
call
shrl
xchg
add
int
add
stos
lea
int
pop
jge
cmc
js
push
mov
jl
add
fmull
mov
sbb
pop
in
jb
lret
pop
repnz
test
xor
mov
sbb
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
sarb
add
cmp
